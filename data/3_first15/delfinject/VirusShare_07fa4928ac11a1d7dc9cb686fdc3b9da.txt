sub
mov
xorb
cltd
in
leave
or
or
or
movsb
and
sub
cltd
and
inc
rorl
add
cmp
mov
rorb
sub
xor
mov
sub
jne
scas
fldl
lods
or
adc
or
bound
lods
inc
mov
addb
shll
out
lock
jnp
incl
mov
jnp
inc
mov
enter
push
in
test
ss
mov
jb
fidivrs
scas
and
pop
inc
pop
repnz
das
outsl
and
pop
inc
mov
nop
fnstsw
out
ja
mov
jnp
cmp
out
mov
mov
jg
cwtl
xor
and
popa
loopne
add
add
xchg
push
pushf
mov
rorl
push
xchg
lahf
and
lcall
loopne
mov
idivb
cmp
mov
into
imul
ss
mov
mov
mov
adc
xorl
jb
int
pop
lahf
mov
xchg
and
cmp
call
mov
jno
mov
and
pop
int
dec
gs
push
aas
jmp
fs
lods
cmp
xchg
xchg
xchg
cmc
imul
test
pop
in
fnclex
or
push
fs
cmp
cmp
push
mov
xchg
aad
ljmp
shlb
test
in
in
ss
aas
cltd
call
xchg
sbb
xor
fwait
push
test
push
mov
ret
aad
test
test
das
aad
add
stos
sbb
xor
push
jle
add
idiv
sub
xor
mov
inc
jb
sbb
cmp
mov
std
mov
pop
add
pop
clc
out
sti
sti
icebp
jp
fisttps
fdivrs
les
insl
push
popa
test
add
pop
enter
xor
jne
or
aas
into
loopne
jg
sbb
popf
int
mov
in
jecxz
jl
leave
outsl
adc
aam
rcl
adc
mov
jbe
or
gs
pop
clc
pop
sbb
xor
enter
dec
adc
sub
ja
std
mov
xchg
xchg
sub
into
xor
insl
dec
pushf
cmp
push
sub
aad
lret
stos
inc
repnz
adc
and
mov
das
ds
cmp
js
mov
std
pop
cmc
inc
pop
sub
jbe
popf
mov
icebp
movsl
sbb
mov
nop
hlt
aas
xchg
inc
mov
in
je
loope
jne
test
flds
cmp
xchg
xchg
or
sub
mov
or
je
enter
mov
push
mov
cmp
jmp
jbe
icebp
mov
cmpsl
jnp
cld
dec
sub
inc
push
nop
inc
inc
ret
jne
pusha
pop
mov
mov
test
jne
fwait
pop
xchg
cmp
push
sbb
jno
sbb
adc
xchg
pop
cmpsb
jbe
xchg
sbb
stos
stc
cmp
xor
pop
popa
or
nop
mov
mov
dec
test
roll
push
push
xchg
loop
push
sbb
add
cmpsl
xchg
dec
stos
scas
imul
mov
mov
or
inc
ss
push
inc
add
pushf
pop
inc
mov
inc
shl
pop
cmp
pop
cmp
sbb
cltd
and
shlb
inc
jne
mov
add
cmp
loopne
ror
je
pop
ret
cli
popa
fs
ds
sub
mov
push
dec
rolb
cs
rcll
or
int
aad
filds
jo
inc
sbb
cmp
push
xor
dec
mov
or
mov
adc
or
jl
mov
nop
cld
adc
bound
or
aaa
bound
push
outsl
cmpsl
adc
arpl
arpl
and
cmpsl
fs
xchg
fdivrl
pop
xor
ret
pushf
mov
inc
mov
pop
sbb
jae
lods
in
adc
pop
pop
add
mov
and
ljmp
adc
jecxz
enter
sbb
sub
xchg
div
pop
ret
pop
in
xor
jno
add
loope
sbb
xchg
jns
mov
rcrl
inc
xchg
neg
popa
into
daa
ja
xor
add
add
test
mov
mov
ss
loopne
push
jo
xor
data16
notl
jns
in
sub
jp
test
out
xor
adc
in
sbb
mov
sub
fwait
outsl
fwait
add
outsl
push
mov
mov
enter
dec
sub
cmovb
or
fists
push
pop
out
dec
jb
push
aam
mov
or
add
xor
inc
adc
mov
inc
rorl
leave
imul
mov
inc
cli
outsb
cltd
xlat
movsb
adc
sbbl
arpl
lds
pusha
xchg
imul
jne
movsb
cmp
aas
and
add
mov
in
inc
cmp
fldenv
fisubrl
xor
fs
in
mov
xor
mov
pusha
add
adc
subb
sbb
inc
dec
pushf
loope
scas
sub
pop
and
pop
pop
xor
sbb
rclb
out
cmp
dec
js
pop
jb
or
pop
out
cwtl
daa
xchg
mov
mov
neg
leave
bnd
xor
fcoms
int
sar
xchg
sbb
and
pop
nop
pop
mov
push
cmpb
nop
outsb
aaa
jnp
dec
pcmpeqd
cwtl
fisubrl
xor
paddd
fs
aam
cmp
cmp
lret
and
sbb
ljmp
mov
inc
fucomip
lret
or
pop
setg
ja
mov
xor
jno
stc
adc
call
jg
xor
daa
mov
ds
dec
sbbl
int
mov
sbb
in
test
push
pop
add
sbb
push
mulb
mov
xor
push
inc
outsl
dec
or
negl
and
pop
in
push
xchg
ljmp
sbb
cmp
out
push
xchg
xor
and
mov
imul
jecxz
jne
ret
sub
and
mov
sub
ret
pop
add
pusha
jg
popf
add
stos
ss
mov
movhps
insb
push
mov
lcall
push
pop
dec
fidivl
push
mov
iret
inc
jno
das
es
mov
testb
xor
push
xchg
into
and
xchg
movsl
ds
mov
lods
outsl
mov
mov
xchg
je
xchg
jno
fadds
cmpb
and
fmuls
adc
inc
xchg
xor
adc
jl
push
in
inc
sbb
orb
jg
dec
dec
test
rcll
test
lods
or
xchg
mov
inc
stos
jle
and
push
mov
ljmp
js
jg
inc
fs
pop
cmc
inc
xchg
jne
into
add
mov
int
cmp
mov
sbb
cmp
test
jg
pop
jnp
shll
add
mov
clc
cltd
jp
jb
pushf
pop
sbb
in
push
movsl
stos
lods
adc
pop
cmp
jbe
movsl
test
push
call
out
aam
adc
out
push
stc
mov
jb
movsl
pusha
jne
push
imul
or
cmpsl
mov
out
aam
scas
or
cli
sbb
pushf
out
repz
mov
sub
out
insl
iret
popa
or
push
int3
xchg
aaa
shlb
popa
mov
jle
ljmp
movl
fs
mov
and
fsts
test
fidivs
jno
sti
bound
and
sbb
aaa
dec
mov
lods
testb
cmp
frstor
es
jecxz
or
ss
sahf
adc
cwtl
inc
jg
ljmp
inc
push
inc
xor
cmpsb
cmpb
mov
inc
test
mov
or
js
push
inc
mov
icebp
xlat
sbb
enter
ja
fstpt
rclb
pop
sbb
jnp
or
imul
or
dec
cmpsb
jg
jbe
inc
mov
ret
mov
test
out
test
mov
push
into
fisttps
sub
xchg
or
out
dec
bnd
and
lea
es
fdivrl
lahf
testl
scas
mov
or
out
xchg
neg
adc
imul
pop
push
jb
test
xchg
out
sbb
sahf
adc
nop
pop
movsl
lods
sub
and
fiaddl
popf
pusha
out
inc
loop
inc
std
fisubrl
test
in
or
jecxz
stos
in
fs
dec
jbe
lea
std
push
cli
dec
adc
lea
sbb
outsb
stos
clc
add
sbb
add
mov
inc
pop
mov
jns
call
sbb
mov
ja
sbbb
shll
cmpsl
stos
lret
in
andb
push
loope
mov
mov
sbb
rcl
pushf
fisubs
ret
hlt
pop
xlat
sub
inc
add
hlt
in
shl
push
and
out
pop
xor
xchg
inc
jno
xchg
mov
shr
imul
add
or
repnz
cwtl
jno
xor
inc
fcoms
xchg
add
xor
ds
push
lret
cmp
cmp
cmc
xchg
sub
js
fnstcw
dec
inc
imul
dec
lahf
movsb
xor
jne
dec
dec
xchg
outsl
xor
fimuls
inc
add
fnsave
js
divb
cmc
dec
cwtl
xchg
mov
fwait
push
adc
mov
loop
push
pop
jmp
pop
mov
aas
pushf
jp
aam
dec
ret
add
sub
mov
mov
push
ret
addl
nop
mov
arpl
cwtl
or
sbb
decl
in
adc
inc
sub
add
loopne
lods
jno
ja
jae
jmp
push
jecxz
push
or
sarb
inc
and
nop
jg,pn
inc
sarb
sti
hlt
out
repz
loop
inc
aam
hlt
out
sub
sub
mov
mov
sub
mov
repz
xor
rclb
nop
ja
pop
jg
xchg
mov
fstps
and
fadds
fnsetpm(287
in
push
cmpb
fstps
out
mov
fsts
shl
push
cmpsl
mov
cmp
mov
add
mov
inc
and
bound
pop
fsubrl
inc
dec
arpl
lods
nop
mov
call
incb
call
lea
outsb
add
leave
lret
jns
cmp
cs
pusha
mov
enter
jae
and
dec
add
out
pop
mov
scas
dec
sti
insb
mov
bound
jmp
loop
les
aam
xor
lods
push
xchg
scas
lods
jmp
pop
lods
xor
cltd
pop
ret
dec
add
lds
loop
into
in
pop
xchg
cmp
das
ret
repnz
hlt
jbe
hlt
xchg
mov
in
dec
add
cmpsl
ja
xchg
and
pop
int3
adc
aas
aad
lock
mov
in
out
jge
sbb
cli
and
adc
int3
jecxz
inc
aam
cli
xorb
cld
dec
push
movsb
xor
mov
fiadds
aam
subw
aaa
push
outsb
dec
adc
mov
ds
insl
sti
stc
xor
add
out
stos
inc
add
pop
ds
inc
jno
mov
inc
mov
jne
enter
sub
neg
imul
popf
jmp
lds
mov
mov
mull
imul
adc
add
sti
xlat
cmpsb
call
fbld
cmp
mov
imul
orb
push
ds
xchg
pop
xchg
fnstsw
jmp
je
or
pop
notb
std
sub
ds
push
sti
dec
cmpsb
inc
imul
and
or
xlat
fucomp
jmp
inc
scas
mov
pop
test
test
cs
fwait
xchg
xorl
adc
test
popa
lret
icebp
adc
mov
enter
mov
add
jmp
bound
vgetmantpd
push
sbb
ret
pop
popa
mov
pushf
sub
inc
sbb
cmpsl
roll
imul
pop
hlt
data16
push
rcrb
ds
les
fbld
adc
into
mov
shlb
mov
mov
in
lret
in
sbb
ficoml
mov
sbb
shll
dec
sti
jbe
inc
pop
and
jecxz
mov
mov
scas
mov
fiaddl
cmp
mov
jg
call
in
repz
rorb
stos
pop
fwait
cmp
popa
push
mov
movsb
xlat
xchg
lods
in
inc
pop
nop
test
dec
negl
sbb
push
push
jmp
push
dec
jge
inc
scas
mov
dec
je
mov
mov
movb
test
push
bnd
ds
sbb
pushf
fnstsw
roll
pop
test
mov
loop
cmp
jecxz
cmp
xchg
jg
jge
stos
mov
mov
adc
pop
xchg
cmp
dec
and
in
test
jl
inc
das
ss
mov
dec
sti
test
in
xchg
xlat
and
ja
jmp
leave
jae
repnz
mov
imul
into
stos
das
es
xchg
add
daa
mov
roll
bound
cmp
jbe
mov
or
and
rorb
enter
bound
sbb
mov
mov
rcll
hlt
push
pop
nop
jecxz
loopne
and
cmp
push
inc
idivl
pslld
mov
testb
aam
mov
dec
jo
sub
repz
orb
std
sbb
aas
or
pop
dec
aas
mov
mov
add
mov
loop
xchg
cmp
mov
mov
int3
or
je
xlat
jo
cmp
out
push
out
inc
inc
xor
mov
int
hlt
fdivrl
xor
xchg
rcll
push
mov
lods
pusha
push
xchg
sub
nop
push
dec
sbb
cmp
ret
pop
jne
mov
mov
jge
push
inc
push
outsl
sbbb
mov
sbb
mov
aas
push
je
jno
mov
lods
pop
sbb
dec
pusha
out
inc
ljmp
xchg
fwait
pop
in
gs
insb
dec
mov
popf
out
inc
sub
sti
enter
adc
out
in
ret
adc
test
or
pop
cmpsl
and
mov
pop
pop
pop
and
ficomps
adc
gs
mov
push
xchg
xchg
xchg
lret
loope
repz
movsb
scas
std
scas
jp
mov
and
insl
pop
mov
outsb
push
mov
xchg
push
mov
inc
insl
xchg
fst
in
add
xchg
and
sbb
sbb
lock
and
mov
clc
outsl
nop
adc
xchg
dec
push
mov
js
shlb
xor
mov
sbbb
in
cld
gs
or
mov
xchg
mov
pop
mov
jnp,pt
mov
negl
mov
mov
sub
es
xor
fcmove
jae
pop
es
mov
es
clc
outsl
xchg
dec
and
loope
cmp
jmp
mov
cmp
mov
inc
bound
add
lock
sbb
mov
stos
or
outsb
das
push
gs
shlb
sti
jno
cmc
insb
add
pushf
xor
aaa
or
or
ret
les
or
and
movb
jns
cltd
mov
adc
imul
pop
aam
adc
and
cli
pushf
dec
test
jg
mov
movsb
sub
mov
mov
jne
enter
stos
int
cmp
push
dec
icebp
insl
sub
clc
pop
sub
push
mov
lret
cmpl
loope
loop
mov
cli
or
sarb
addr16
fldcw
lods
leave
es
add
lock
scas
int
or
mov
and
mov
test
and
mov
jae
inc
xchg
aam
mov
add
insb
pusha
or
fsubr
mov
cld
sub
mov
adc
sbb
pushf
and
push
cmpsl
xchg
in
mov
xchg
flds
scas
sbb
adc
inc
fwait
loopne
jno
sub
xchg
inc
fistl
add
fs
inc
pop
mov
ds
leave
sub
out
sbb
mov
out
mov
sub
leave
movsb
add
hlt
mov
mov
std
call
rcrb
movsb
cmp
or
scas
sub
mov
mov
pop
mov
imul
or
dec
mov
icebp
jbe
outsb
orl
pop
xchg
mov
mov
and
inc
pop
sbb
mov
add
enter
cmp
or
sub
es
push
sahf
insl
test
bound
fidivrs
inc
and
call
es
outsl
sete
pop
mov
cmc
adc
std
in
pop
xchg
insl
in
testb
fwait
into
out
fcomi
pop
loope
cmc
fisttps
leave
mov
xchg
inc
dec
cmp
mov
sub
cmpsl
mov
fnsave
mov
rorl
mov
pushf
jb
xor
jg
lret
mov
cmp
sbb
test
rcl
leave
loope
push
leave
lea
cmp
sub
ret
jecxz
addr16
inc
mov
dec
bound
popf
inc
add
adc
dec
mov
in
je
pop
arpl
pop
clc
or
fstpl
imulb
cmc
sub
xchg
rcrl
fwait
into
out
push
xchg
jle
mov
sbb
pop
imul
pop
xchg
fildll
adc
add
out
sub
inc
xchg
add
negl
insl
sub
stos
xor
js
push
or
mov
dec
push
aam
cwtl
inc
adc
dec
out
std
sub
call
aam
fildll
sub
outsb
dec
jge
repnz
roll
lock
inc
pusha
jo
mov
dec
rdmsr
inc
aas
dec
push
jl
jle
out
ret
dec
sbb
int
push
popf
ja
imul
leave
lds
dec
daa
dec
cmp
fwait
jge
daa
mov
push
enter
dec
xchg
testb
xchg
sub
mov
fnstsw
cmpsl
jae
xchg
and
out
inc
push
dec
ss
loope
cmc
in
aaa
mov
xor
pop
test
nop
mov
and
sahf
or
adc
inc
stos
and
adc
xor
push
fisttps
popf
jb
push
cmp
loope
sbb
mov
in
xchg
sub
leave
add
sbb
leave
jmp
adc
pop
bound
js
js
les
and
jmp
mov
mov
gs
ds
push
lods
and
mov
jnp
pop
ret
jmp
notl
notl
mov
inc
mov
push
push
jl
and
mov
fs
outsb
pop
loopne
fcmovnb
dec
popa
movsl
cld
pop
add
es
fnstcw
scas
loop
adc
pop
jbe
cmp
test
mov
mov
pop
je
and
push
lea
stos
dec
sub
mov
cmp
dec
fwait
out
bound
lret
pop
lea
mov
pop
sbb
mov
xor
xor
and
insl
stos
xchg
insb
and
inc
sbb
into
or
fs
mov
popf
insl
cmc
imul
lods
rorb
mov
lcall
fs
leave
and
jp
dec
fsin
push
sbb
jns
pop
dec
ja
xchg
aas
mov
xorb
mov
out
and
aam
fwait
jb
mov
bnd
es
stos
jb
sbbb
inc
leave
outsl
push
fdivrl
dec
leave
mov
add
in
mov
xchg
lods
xor
lock
sub
test
mov
sub
mov
pminsw
adc
lahf
cmpsb
xchg
ficomps
cmp
fisttpll
iret
cld
mov
add
mov
ljmp
mov
mov
cli
out
not
jae
mov
pusha
jns
out
scas
cs
jp
icebp
dec
lret
icebp
xor
push
outsl
xchg
mov
addr16
dec
cmc
or
pop
sub
outsb
fisttpll
cmp
popf
repz
sub
aaa
sub
sbb
mov
dec
cli
sarl
stos
xchg
xchg
push
out
mov
inc
stos
int3
popf
repz
mov
movsl
push
xor
popa
xchg
xchg
mov
mov
or
bound
pusha
inc
push
bnd
inc
outsl
push
loop
mov
push
hlt
mov
je
cmp
mov
push
lcall
shrb
repz
mov
jl
mov
jle
icebp
xchg
cli
aaa
push
imul
sbb
mov
ret
in
popa
jg
mov
lret
xor
popa
insb
mov
mov
mov
mov
lcall
aaa
add
test
loop
jmp
mov
idivl
sbb
pcmpeqw
out
bound
mov
or
ret
loopne
rcrl
negl
lock
bound
push
lcall
sbb
fnstsw
fcom
mov
fcmovne
cmp
adc
mov
mov
pop
mov
push
push
ljmp
mov
jg
rcll
mov
adc
push
jnp
adc
repnz
mov
push
js
outsl
popf
xor
imull
mov
subl
push
ss
pushf
and
jmp
outsl
loope
mov
cmp
ss
pop
insb
iret
jbe
pop
sti
loop
push
jg
pop
pushl
xor
std
push
subl
push
push
push
idivl
mov
out
ret
cmp
stc
jle
pop
clc
xchg
into
movsl
lods
pop
jmp
out
add
lods
aaa
jecxz
ds
fidivrl
pop
loop
fwait
mov
out
imul
pop
loope
imul
repz
pushf
inc
call
xchg
sbb
jne
fsubrs
das
shl
cmp
xor
mov
cmp
jecxz
mov
sub
rcll
mov
out
shl
cmp
pop
ljmp
pop
and
iret
jno
push
stc
loope
lea
cmpl
ja
pop
xor
test
sub
out
mov
je
jno
jno
sub
cmp
jmp
jecxz
mov
lods
pop
pop
lcall
shll
test
inc
mov
into
cmp
hlt
sbb
cli
mov
popa
out
jb
pop
mov
push
cmpsl
insl
cwtl
dec
inc
push
xchg
and
sbb
mov
cli
push
or
cli
scas
leave
mov
mov
jbe
push
nop
sub
jle
xor
cltd
adc
mov
pop
inc
mov
mov
cmp
jnp
dec
xorb
jb
arpl
xchg
pop
lahf
sarl
shlb
or
lea
fstl
ljmp
cs
fisubrl
daa
fisubl
sub
cmp
cld
cmpl
mov
test
jnp
xchg
cmp
push
aad
push
pop
stos
push
jo
int
idivl
mov
dec
jnp
xor
mov
ljmp
mov
pop
add
es
mov
test
pop
iret
lret
sahf
dec
jmp
addr16
xor
and
xor
lods
aam
sbb
ret
sbb
test
adc
jb
dec
mov
hlt
push
mov
and
pop
hlt
lcall
cld
and
data16
cmp
test
ljmp
inc
lret
ds
add
pop
paddsb
pushf
sub
jae
cmp
xchg
inc
pop
pop
xchg
in
add
or
push
popf
push
pop
pop
outsl
push
mov
sub
cwtl
xor
sbb
call
aas
sbb
add
cmp
pop
or
cmpsl
vsqrtps
xchg
push
or
cmp
inc
jecxz
mov
push
inc
adc
jle
dec
jo
js
adc
xor
push
fdivrl
push
pushf
mov
push
sti
cltd
cltd
sub
lock
pop
xchg
mov
ficoml
sub
insb
popa
inc
nop
add
test
jns
mov
sbbl
mov
aam
xor
data16
push
imul
mov
or
repz
cmc
sahf
xor
rcrb
shlb
mov
mov
fimuls
mov
pop
mov
int3
mov
mov
pop
push
fs
shrb
xchg
xorl
xor
loope
loopne
cmp
sub
push
test
cmp
sub
push
mov
ss
jb
lahf
loop
mov
mov
insb
mov
add
mov
pop
rclb
mov
adc
mov
xor
fidivrl
sbb
mov
gs
lret
cmp
inc
adc
sti
loop
xor
add
int3
inc
lds
add
outsl
jo
aad
xor
xchg
cld
mov
iret
xor
nop
pop
pop
fsubs
xlat
into
adc
and
adc
mov
sbb
jno
jns
xor
mov
pop
jnp
out
imul
adc
xor
push
push
push
imul
fisttpl
into
lret
push
pop
jae
fnstsw
mov
cmp
mov
push
out
inc
outsl
test
add
mov
popf
lods
pushf
jmp
add
xchg
sarl
xchg
jnp
lcall
stos
inc
add
pop
sub
in
enter
aam
das
movsb
repnz
or
bound
cld
mov
push
jmp
or
push
cmp
mov
jg
and
sahf
mov
adc
push
mov
sub
into
shll
inc
jne
cltd
inc
adc
jge
cmp
mov
fwait
imul
repnz
inc
cmpxchg
cmpsl
dec
xor
cwtl
jl
mov
fwait
push
jmp
sub
inc
mov
cmp
repz
sbb
mov
or
mov
pop
cmp
dec
clc
stos
xor
mov
repnz
fsincos
inc
jb
lcall
repz
movsb
mov
ss
sbb
cld
lret
mov
loopne
mov
adc
pop
and
sahf
call
hlt
jmp
xchg
pushf
xor
xchg
adc
daa
adc
adc
shrl
ror
mov
mov
xchg
sbb
jo
jp
push
es
pushf
ret
les
jnp
jno
cmpb
sbb
push
cmp
and
popa
popa
and
mov
jl
fwait
mov
adc
xlat
insl
xchg
adc
adcl
in
pop
mov
int3
mov
adc
lret
outsl
jl
add
lret
lds
loop
mov
add
je
adc
cmpsl
lahf
jo
es
or
xor
mov
or
dec
xchg
push
sahf
and
clc
cs
stc
push
push
out
dec
test
pop
dec
or
sub
int3
cld
add
pushl
flds
sbb
mov
xchg
jge
movsl
and
dec
in
fidivrs
sti
push
shrl
daa
and
xor
add
adc
xchg
push
xchg
leave
inc
or
gs
dec
cmp
in
inc
int
ret
hlt
pop
lret
pop
cmp
das
push
push
mov
int3
mov
in
movsl
ret
repnz
xor
sub
push
pop
lret
aam
mov
jbe
adc
dec
xchg
add
enter
mov
or
mov
ja
cld
pop
test
ds
sub
sub
cs
ret
push
xchg
enter
push
mov
ja
fwait
push
dec
out
jmp
sub
mov
enter
sub
shl
mov
and
dec
xchg
scas
jmp
shlb
pop
add
sti
nop
fimuls
add
mov
int3
lds
mov
ret
loope,pt
hlt
lods
cli
dec
pop
fucom
inc
sub
mov
in
add
repz
in
or
test
das
and
add
loop
sbb
ljmp
movsb
cmpsb
and
stos
fildl
xchg
xorl
sbb
repnz
int3
dec
jl
jnp
and
mov
sbb
push
test
ja
xor
and
hlt
push
sbbl
rol
sahf
sbb
push
out
and
mov
je
ret
subl
into
sbb
mov
std
or
imul
or
cmpb
adc
adc
pop
loop
pop
cmc
stc
xchg
jne
sbb
sti
lock
scas
dec
lea
inc
push
cmp
jbe
pop
jne
jle
xor
dec
mov
loope
xor
cs
dec
mov
mov
jbe
in
or
stc
bound
jb
mov
adcb
pop
jnp
cs
lret
cmpsb
aam
mov
add
ja
jl
stos
inc
push
jl
and
pop
mov
fsubp
inc
mov
sub
subb
mov
es
push
lret
hlt
lods
jae,pn
mov
pop
popa
mov
sbb
or
lods
mov
icebp
mov
push
adc
jns
cltd
leave
push
cmp
pop
mov
lahf
push
xor
iret
mov
jno
stc
hlt
dec
ret
jne
mov
xor
inc
and
pusha
imul
in
outsb
cmpsb
mov
sub
orl
ja
mov
mov
cmpsb
out
mov
mov
cmp
das
out
xor
test
push
cmpsb
push
inc
dec
mov
in
adc
aam
or
inc
pop
and
push
push
out
fs
je
shll
and
mov
xor
arpl
iret
into
icebp
jb
daa
pop
mov
mov
cmpsb
pcmpeqd
xchg
out
and
outsb
loop
push
mov
in
sti
push
adc
jp
push
repnz
jno
adc
cmp
pop
dec
jge
push
add
ficoml
mov
fs
ret
mov
mov
pop
addr16
mov
stos
xor
adc
inc
ljmp
mov
push
fadds
hlt
add
in
cmpsl
idiv
je
mov
mov
push
xor
xchg
sub
pop
jae
jp
movb
repz
outsl
sbb
in
int3
mov
sub
insb
mov
jmp
aaa
and
or
cltd
cmc
adc
cmp
das
mov
insb
xchg
dec
mov
nop
pop
notb
cmp
into
mov
mov
mov
xchg
leave
push
notl
jae
or
sbbb
loopne
daa
insb
int
dec
ds
dec
sub
mov
bound
in
std
mov
dec
lahf
hlt
mov
test
out
test
xor
fstp
xor
imul
adc
add
pop
mov
jnp
mov
dec
sti
sub
cmc
clc
cli
sbb
cmc
popf
pop
xchg
inc
xlat
pop
jmp
cs
push
pusha
imul
sbb
fwait
inc
popa
test
pop
shrb
shrb
jbe
and
movsl
fsubrl
pop
push
sbb
enter
add
fisubrl
xchg
pushf
dec
jmp
adc
comiss
xchg
dec
adc
cmp
sub
xchg
out
jmp
scas
push
pusha
lret
inc
lret
push
or
and
push
mov
jae
cltd
rcr
sub
scas
xor
xlat
mov
and
popf
xchg
push
cmp
mov
ret
inc
dec
push
push
rcrb
inc
ljmp
ficoms
mov
cmc
test
push
sub
sub
sbb
lret
mov
mov
scas
add
mov
jl
pop
repnz
inc
out
je
xor
outsb
cmp
mov
jmp
in
insb
dec
mov
mov
push
fwait
outsl
push
sbbl
iret
push
packssdw
xchg
jl
lods
or
sar
mov
jbe
outsb
pop
stc
jno
inc
lret
sub
sti
pop
add
push
outsl
fdivs
popf
mov
or
sub
mov
dec
repz
stos
cmpsb
bound
lgs
movsl
xchg
xor
aaa
sub
xchg
leave
pop
and
in
dec
fildl
jno
xlat
jle
mov
movb
imul
outsl
sahf
inc
add
mov
jecxz
mov
mov
cmp
leave
jnp
fisttpl
fmull
jbe
cwtl
test
lcall
push
pop
sti
lds
dec
or
adc
fimull
pop
movsb
mov
add
xchg
jmp
jnp
or
pop
mov
cld
jge
test
fs
nop
pop
out
sahf
push
mov
or
sbb
jecxz
jge
add
ja
sbb
mov
add
xchg
adc
pop
mov
js
jne
popa
push
fistpl
mov
push
fistl
dec
call
cwtl
jmp
inc
jmp
pop
xor
int3
pop
repz
imul
xchg
loopne
sti
mov
push
in
mov
rorb
add
fstl
test
add
sbb
mov
inc
xor
dec
and
filds
xchg
xor
sbb
sbb
daa
bound
pop
aad
or
push
js
inc
sub
fisubrs
daa
jle
fs
jge
and
aad
ja
add
stos
sub
addr16
jle
je
jne
jne
out
fs
jg
ss
leave
iret
jne
daa
jae
pop
mov
mov
and
push
ss
mov
mov
inc
dec
add
or
sub
ja
adc
mov
es
add
xor
scas
and
ds
xorb
rolb
cs
ret
pop
jo
push
nop
xor
test
pop
insb
std
imul
inc
mov
pop
ret
adc
xchg
lds
add
sarb
fwait
mov
xlat
jge
jb
addr16
or
mov
jae
ljmp
jmp
mov
lods
and
xor
xchg
push
bound
enter
jl
and
mov
adc
pop
mov
mov
pop
add
sub
push
scas
mov
test
add
fidivl
xlat
sahf
loop
aam
xor
pop
sbb
sub
push
adc
das
insb
mov
aas
std
loopne
inc
mov
push
aam
shlb
lahf
jg
lret
daa
out
adc
inc
cmp
and
jne
insl
sbb
dec
mov
int3
adc
mov
loopne
out
xchg
mov
aas
mov
in
mov
jmp
mov
das
inc
lock
mov
loopne
sahf
hlt
test
mov
hlt
out
mov
jg
into
cltd
jb
pop
push
in
ja
in
xchg
scas
int3
xor
inc
or
dec
mov
ljmp
ret
cmpsl
std
or
bound
lods
fiaddl
loop
movsl
dec
aaa
cmc
into
aam
jp
call
mov
cli
xchg
pop
inc
push
jecxz
jmp
add
push
ror
div
imulb
mov
xchg
or
mov
inc
pop
rclb
loope
aas
test
aas
sub
mov
es
jae
sub
sub
jg
adc
mov
cmp
mov
movlps
inc
or
inc
pop
repnz
jo
pop
ss
xchg
adc
std
push
out
into
xchg
std
shll
fildll
imul
shlb
jae
cltd
jbe
ljmp
xchg
jle
or
pop
stos
loopne
stos
and
add
movsl
pop
leave
jmp
sbb
daa
call
push
mov
jbe
add
and
dec
or
stos
dec
add
mov
test
dec
stos
or
test
adc
jmp
inc
push
pop
xchg
dec
mov
pop
and
or
out
movsl
loope
push
push
add
fwait
pop
outsb
aas
repz
cs
xor
mov
inc
and
sub
mov
loope
push
in
aas
mov
bound
inc
mov
scas
mov
and
xor
ficomps
repz
repz
cmp
cmpl
cli
sub
xor
mov
arpl
xchg
pushf
mov
nop
int3
pusha
rorb
and
pushf
pop
test
lods
lret
push
and
jne
pop
sbb
cmp
xchg
pop
movsb
in
cmp
jl
rclb
push
clc
stos
cmp
dec
cmpsb
enter
jmp
xlat
imul
leave
mov
and
popa
cmp
loopne
adc
sub
daa
pusha
cmp
fsubrs
adc
pop
mov
scas
dec
aad
fidivs
xchg
aas
or
daa
adc
jle
xchg
adc
mov
xchg
adc
sub
dec
dec
aas
pop
adc
pop
xlat
fisubrs
push
loop
cwtl
rolb
add
and
ljmp
loop
adc
rclb
mov
fcoms
addr16
sbb
in
lcall
ja
ficompl
pop
pop
cmp
push
clc
cmp
subl
or
dec
sbb
or
loope
bnd
mov
sub
push
adc
and
adc
push
lret
jnp
adc
ljmp
add
fldenv
int
mov
aad
std
sub
js
mov
int3
popf
out
adc
pop
dec
lret
xor
mov
lds
xor
into
jge
sub
cmp
mov
sbb
mov
sub
jo
mulb
push
xor
adc
and
test
push
jl
jo
dec
add
xor
addr16
jg
js
ss
lds
stos
adc
rorw
bound
ljmp
pop
aad
inc
mov
inc
popa
lock
in
nop
or
shll
dec
es
jl
sbb
xchg
hlt
pop
insb
stc
or
dec
xlat
mov
aam
mov
jmp
jle
inc
push
scas
adc
add
dec
loop
mov
cmp
push
pop
in
call
cmp
xor
hlt
adc
faddl
out
push
aam
clc
lcall
dec
call
cmc
cmc
cmp
out
stos
and
or
iret
mov
shl
movsb
daa
loope
std
fdivp
and
inc
test
xchg
pop
out
hlt
rcrl
in
rcr
adc
adc
sub
sub
jnp
sti
xchg
cmpsb
nop
in
or
and
fdivs
cmp
and
fucom
dec
jnp
sub
insl
lock
or
imul
pop
dec
decl
test
mov
jg
daa
and
sub
pop
sub
jp
cli
sub
jmp
cmpsl
decb
mov
mov
jmp
hlt
jmp
fcompl
dec
jmp
loope
sbb
ja
ss
mov
adc
lret
add
sahf
mov
ljmp
or
sbb
or
jp
xchg
mov
jl
sarl
lahf
scas
mov
cmp
mov
aas
xorb
cmp
fwait
or
setg
fwait
sub
push
movsb
dec
sahf
loope
sbb
mov
aaa
and
xor
pop
cmp
imul
scas
loope
in
push
loop
add
jge
mov
sti
adc
sbb
add
shlb
cmpsl
mov
push
dec
xor
ds
cmp
fucomip
inc
dec
jb
adc
pop
xchg
call
hlt
imul
ret
test
and
mov
and
nop
sub
add
stos
and
or
mov
les
xchg
xor
sbb
push
add
icebp
jb
mov
add
shrl
movsb
arpl
js
mov
pusha
pop
pop
pop
mov
das
jp
ljmp
cmpsl
lret
faddl
scas
xor
jne
dec
stos
arpl
or
or
push
xchg
add
cmp
inc
inc
or
call
inc
test
movsl
sbb
imul
mov
std
fimuls
stc
sbb
xor
and
test
stc
dec
mov
mov
mov
and
mov
dec
dec
fdivrl
sub
mov
dec
aaa
sbbb
dec
mov
xchg
daa
pop
jbe
clc
into
ja
fxch
loop
and
lahf
cmp
xor
icebp
xchg
push
bound
xor
loop
pop
jnp
jl
cli
loop
repz
mov
scas
fildl
scas
shlb
cli
mov
add
mov
jmp
dec
insl
jp
xchg
insb
sub
adc
jo
mov
dec
jbe
add
in
pop
popf
mov
sahf
fdivs
xchg
lahf
and
aam
addb
or
mov
pop
das
data16
out
test
rolb
mov
shr
je
int3
cmp
add
popa
mov
pop
cld
add
cmc
rorb
sbb
xchg
or
xchg
pop
xor
dec
aas
ljmp
lods
cmpsl
cld
in
push
clc
sbb
sbb
mov
jmp
inc
sbb
lds
dec
stc
mov
imul
jl
call
cmp
lret
in
fnstenv
push
cli
int3
dec
int3
mov
or
mov
hlt
xchg
iret
dec
cmpsb
push
inc
mov
and
repz
xlat
lret
mov
mov
mov
push
scas
jbe
or
lret
cmpsb
lock
cmp
jmp
pop
pop
pop
add
out
sub
outsb
inc
div
mov
inc
in
sbb
fs
mov
jbe
adc
and
test
pop
fimull
iret
adc
push
fsubl
cltd
jge
addr16
shll
mov
test
ret
in
push
orb
repz
jle
out
adc
cmp
mov
cmpsb
mov
pop
inc
data16
rcrb
xor
out
lea
inc
sub
lock
subb
pop
loop
adc
pop
push
and
dec
cmp
xor
cmpsb
loop
ss
clc
shr
clc
arpl
sti
jle
mov
cmp
ret
shll
cmp
fiadds
scas
shrb
cwtl
cs
xor
nop
jecxz
pop
push
push
sbb
sub
xlat
add
inc
pushf
int3
std
std
int
addb
jmp
sbb
sub
add
mov
cmpsl
dec
shr
cmp
jle
stos
pop
jno
icebp
std
shll
push
pop
in
inc
cmp
xchg
mov
sbb
insl
mov
lcall
dec
xor
sahf
cmpb
jno
jbe
lret
lods
mov
mov
ss
xor
lods
mov
pop
push
mov
inc
and
jl
insl
je
xor
adc
loop
pushf
fcmovnu
lret
mov
jmp
adc
fidivl
or
xchg
mov
add
jmp
jge
xor
es
push
fdivrl
cs
pop
jmp
jg
lock
mov
arpl
pop
push
call
push
push
pusha
lcall
addr16
adcb
decb
push
mov
mov
out
xor
push
cmpsb
scas
dec
push
push
xchg
dec
in
gs
push
sbb
ljmp
jb
cmc
dec
lret
dec
pop
nop
ficomps
pop
cmp
jg
fistpl
test
test
mov
fsts
dec
rclb
pop
mov
inc
cmp
mov
lods
jbe
mov
or
dec
mov
psubsb
pusha
mov
xorl
daa
sti
sti
xor
cmpb
repnz
sub
sub
lods
xor
mov
push
mov
dec
sbb
jae
mov
aam
gs
inc
sahf
lea
sub
pop
pop
xchg
lds
jb
sar
jecxz
enter
int3
cwtl
mov
dec
xor
leave
push
adc
test
push
fcompl
bound
insl
pop
inc
jb
jge
push
sti
or
and
jne
jp
iret
xor
int3
test
xor
lahf
add
negl
sub
push
lods
sub
test
or
push
and
lock
sub
imul
cld
int
iret
test
ffree
cmp
xor
repnz
fisubrl
icebp
push
mov
es
pop
xchg
pop
sub
scas
push
and
pop
ja
inc
inc
outsb
mov
cs
arpl
mov
js
jnp
sub
ret
loopne
or
scas
inc
xchg
jg
jne
stc
xor
jno
mov
pop
or
std
fsubrp
pop
cmc
mov
jle
ja
lahf
mov
movsl
jge
in
in
jmp
mov
mov
mov
out
add
push
push
std
pop
out
sub
js
mov
adc
or
dec
jg
out
jecxz
jecxz
pop
ja
mov
jmp
test
adc
pop
dec
and
push
fmul
sub
popf
in
int3
jmp
addl
add
insb
call
cs
pop
std
sbb
arpl
inc
rol
sbb
int3
inc
jae
push
push
add
into
fwait
xchg
addr16
add
sti
out
lahf
sub
inc
adc
xchg
push
push
mov
xlat
jecxz
xchg
cmp
addr16
cmpsb
jae
jle
rcrl
int3
adc
inc
faddl
cmpsl
fwait
pop
test
lahf
push
xchg
test
int
mov
fildl
add
cmp
stos
xchg
dec
pop
outsl
imul
dec
les
mov
aas
pop
jmp
in
jl
out
mov
pop
ss
jno
in
lahf
or
fwait
mov
inc
cmp
sbb
dec
pop
jle
lahf
das
negl
xchg
mov
fnstcw
mov
fistl
pop
sar
dec
test
xchg
xchg
ret
push
ljmp
cmpsb
pop
pop
jno
jmp
inc
or
icebp
xor
cmp
cltd
jno
mov
mov
ss
andb
push
xchg
testb
sbb
push
test
dec
sbb
and
addr16
pop
stc
xor
cmp
mov
sahf
hlt
shlb
sahf
lcall
pop
in
enter
jb
and
std
sbb
mov
jp
arpl
test
inc
or
add
les
jae
sbb
call
push
lock
push
mov
add
xor
inc
lods
xchg
sbb
mov
sarb
stos
cmp
cmc
stos
sbb
out
ja
push
mov
cmpsl
jno
pop
push
mov
call
inc
and
das
es
in
mov
cmpsl
sbb
push
sbb
xchg
xchg
fiadds
xor
cs
notb
fsubrp
xchg
testb
outsl
scas
cmp
mov
ret
jae
adc
mov
xor
jle
sub
stc
jle
mov
sub
jle
sub
subl
jge
psubusb
jge
mov
xor
ds
jmp
in
daa
in
pop
ljmp
pop
sti
rolb
adc
pop
sbb
xchg
lahf
imul
sub
xor
jns
bnd
inc
pop
xor
aas
frstor
push
pop
mov
sarb
lret
mov
out
cli
cmp
mov
lods
outsb
mov
sub
daa
push
jge
jb
push
cmc
loope
push
cs
scas
and
cmc
in
in
sbb
outsl
push
mov
jb
mov
mov
mov
ds
xor
imul
andl
sbb
xor
out
pop
sbb
ja,pt
inc
pop
xor
std
pop
jecxz
dec
imul
popa
push
jno
xchg
leave
cmp
xchg
into
mov
jecxz
mov
movhps
idiv
mov
lock
sarl
pop
fcmovnb
aas
repnz
data16
repnz
ds
mov
adc
xchg
addr16
lret
mov
inc
enter
lock
inc
ss
iret
into
or
jecxz
ret
cltd
jb
aas
and
cmp
adc
cld
dec
cmp
mov
push
insb
in
in
add
xor
jbe
jmp
int3
add
scas
fmull
call
sbb
jp
sti
js
pop
dec
pop
repnz
or
testl
dec
repz
fwait
movsl
push
sbb
sub
pop
inc
adc
xchg
cmp
sti
and
iret
sti
clc
push
xor
jno
in
and
into
pusha
xchg
jbe
jo
mov
mov
mov
sub
aas
shrl
aas
add
inc
dec
mov
add
inc
iret
and
aaa
mov
jg
dec
push
cmp
outsl
out
outsb
sub
push
out
not
insb
in
fstpl
or
aaa
mov
inc
pop
ret
in
mov
cmpsb
inc
inc
inc
adc
mov
nop
sbb
subl
repz
stos
mov
mov
cld
mov
push
xchg
popa
cmpsl
je
and
mov
inc
adc
bound
sbb
sub
mov
out
or
fcomp
in
fiaddl
sub
aaa
jle
in
les
setb
push
and
adc
adc
sbb
push
test
and
inc
push
cwtl
insb
sub
sar
xchg
push
mov
jne
cmpsb
or
les
fbstp
repz
mov
insb
sub
aaa
aaa
icebp
cltd
or
and
sbb
mov
out
push
push
sbb
cmp
mov
dec
scas
inc
adc
and
aaa
mov
mov
inc
dec
push
sbb
adc
ret
sbb
lcall
outsl
jae
mov
push
aad
pop
pop
repz
cmpsb
bound
cmp
out
mov
push
mov
mov
pop
pop
inc
mov
xor
push
dec
add
xor
lret
add
dec
mov
imul
jbe
ret
cmp
popf
cmpsl
sub
int
mov
outsl
dec
test
outsl
sar
pusha
stc
imul
std
push
or
dec
cmpsl
gs
sub
cmpsb
aas
jl
jns
add
je
cmp
hlt
sbb
mov
shll
jl
inc
leave
jmp
aam
mov
in
cmpsb
std
or
aas
lods
push
cmpl
pop
or
cmp
adc
jns
cli
pusha
pop
or
test
ret
clc
mov
pop
pop
inc
in
pop
movsb
lds
push
lock
es
js
mov
cmpsb
fs
jno
leave
int3
inc
push
sub
dec
jbe
dec
clc
xchg
push
daa
mov
cwtl
push
int
and
mov
movsl
pop
inc
mov
call
aaa
push
cmp
shll
js
mov
mov
sub
push
pop
fdivrl
mov
adc
or
pop
inc
and
xor
mov
lock
jae
or
aam
dec
cmp
jp
adc
mov
ficomps
jb
and
nop
cmpl
push
lock
pop
push
xchg
and
inc
jns
xor
faddl
scas
test
sbb
cmpsb
test
call
test
cmp
out
push
adc
lcall
andl
and
or
int
jnp
pop
sbb
les
stos
bound
xchg
je
sub
inc
movsl
test
ja
inc
mov
inc
rol
push
xor
inc
jp
push
aaa
cmp
pop
movsb
sbb
push
filds
jecxz
in
push
outsl
and
jbe
int
cwtl
adc
jmp
sbb
sbb
mov
pop
rorb
lea
pusha
repnz
xchg
fmuls
cld
hlt
adc
push
out
and
pushf
aaa
aaa
rcr
push
xorl
and
jp
hlt
dec
pushf
int
mov
orb
jp
xchg
or
mov
loopne
inc
movsb
dec
and
mov
ds
int
outsb
call
xchg
xchg
popf
jne
adc
rclb
or
add
mov
mov
mov
mov
push
out
mov
xchg
mov
pushf
loopne
je
aaa
in
push
xchg
mov
mov
dec
out
mov
rorb
xor
mov
push
cli
ljmp
inc
jp
mov
sbb
sub
aam
adc
loopne
or
xor
popa
pop
or
mov
inc
mov
into
xlat
mov
cmpsl
push
popf
mov
xchg
sahf
sbb
mov
cmc
add
xor
loopne
shll
inc
mov
pop
daa
dec
jl
dec
and
or
inc
or
mulb
insl
adc
dec
dec
mov
inc
shl
inc
mov
fstps
fisubs
mov
lret
aam
sub
mov
push
icebp
mov
sbb
addr16
sub
scas
jns
int3
inc
mov
inc
inc
and
repz
push
addr16
pop
xchg
push
test
dec
bound
pop
mov
pushf
mov
sub
inc
loope
pop
ret
sbb
xchg
pop
lret
pop
out
cld
add
sub
sarb
in
xlat
mov
mov
mov
push
inc
clc
clc
cmpsl
xchg
xor
pusha
lret
ficomps
loope
jmp
xchg
loop
fcoml
mov
pop
sub
xchg
out
mov
ficoms
jg
leave
xlat
mov
and
inc
iret
xor
loop
jle
xor
inc
repnz
pop
int
outsb
pusha
mov
ss
in
data16
add
mov
mov
js
nop
pusha
push
mov
and
adc
lds
arpl
mov
dec
leave
addr16
out
ret
and
mov
sbb
pushf
xchg
rcr
mov
loop
popf
add
pop
and
testb
js
hlt
inc
test
out
sub
xor
jae
cmp
sbb
test
stc
mov
mov
js
into
mov
push
pop
sub
scas
cltd
jl
jp
clc
and
test
data16
adc
lret
jmp
dec
fstpl
push
mov
stc
ja
adc
jp
push
jecxz
lret
inc
rcrb
leave
mov
cmp
rcrb
xlat
mov
pop
aam
sub
call
sbb
aaa
jnp
mov
jne
movsl
sbb
sbb
fisubs
lods
mov
insl
or
push
or
add
cld
in
push
cmp
xchg
js
inc
jns
ljmp
and
mov
in
sub
iret
add
jge
enter
cmp
fdivl
pop
insb
jecxz
jae
cwtl
shrb
dec
jp
and
sub
add
push
das
jl
mov
cmp
push
sbb
pop
cmpsl
sahf
jecxz
add
stos
push
ss
pop
ret
rcrb
jne
lods
out
loop
xor
idiv
ret
popa
shlb
push
pop
lret
sbb
dec
iret
adc
xchg
add
movsl
dec
sub
inc
pop
dec
jae
mov
bound
aad
das
dec
pop
cmp
aam
push
dec
xor
mov
test
xor
pop
icebp
inc
scas
hlt
roll
into
and
push
fwait
mov
lods
jnp
fst
cltd
fwait
pushf
jo
mov
std
out
jnp
mov
mov
lock
ljmp
or
dec
inc
fdivrp
test
pop
pop
inc
add
popa
pop
sbb
lcall
adc
jns
jnp
inc
push
cmp
or
das
pop
leave
test
or
cmp
mov
adc
xchg
fcmovnb
mov
jmp
pop
jg
mov
outsl
xchg
cmc
insb
nop
sarb
pop
fimull
imul
add
loopne
fwait
stos
aaa
leave
dec
fdivrl
jmp
in
or
pop
and
jge
mov
pop
mov
int3
and
xor
lcall
icebp
xchg
inc
aam
rcr
subb
mov
xor
call
es
ficompl
sti
push
pop
jns
mov
jge
popf
xchg
xchg
call
gs
f2xm1
and
pushf
insl
cmp
dec
loope
xchg
jle
cs
jmp
dec
jbe
in
pop
data16
inc
pop
push
icebp
lock
jne
adc
inc
aaa
xchg
test
lahf
ss
pop
daa
ret
ljmp
aam
jecxz
lock
xchg
jnp
in
loopne
jns
mov
fs
push
movsl
cmpsb
jbe
jle
sub
add
push
in
mov
test
lcall
mov
xlat
inc
sbb
cmp
daa
les
ror
cs
cmp
pop
dec
decb
pop
or
or
filds
mov
sbb
repnz
xchg
imul
adc
pop
mov
add
rorl
testb
mov
xchg
rcrb
mov
adc
sub
pop
adc
loop
mov
adc
mov
pop
hlt
sti
repz
add
insl
lahf
stos
sub
add
sbb
dec
inc
addr16
add
out
wrmsr
jmp
mov
cli
and
sub
dec
jle
popf
insl
dec
jae
loope
aam
mov
sub
push
nop
cld
leave
pop
adcl
sbb
shlb
pop
jbe
repz
xchg
mov
sbb
mov
cmp
jbe
mov
push
xor
rolb
jp
or
nop
int3
je
movsl
shrl
in
or
jnp
dec
dec
pushf
or
gs
fs
inc
ja
mov
push
cmp
xor
ja
mov
jl
mov
dec
outsl
stos
and
imul
push
in
jg
cmp
pop
sbb
dec
rcrb
cli
jb
sub
enter
add
xchg
push
or
enter
mov
or
sbb
jo
inc
js
lret
shrd
lock
jo
js
mov
sbb
cmp
jg
sarb
cmp
mov
sbb
pop
outsl
push
loopne
les
nop
ja
out
sbb
add
xor
inc
jmp
cmp
jbe
in
add
inc
jmp
add
and
ret
clc
xor
xchg
inc
out
out
mov
rolb
rolb
mov
sbb
or
loopne
cwtl
jl
jl
jl
jl
jl
jne
stc
nop
jmp
repz
repz
repz
sub
pop
imul
and
or
xchg
gs
sub
push
push
push
push
mov
lock
data16
adc
and
mull
pop
sti
pushl
sti
xchg
sub
xor
and
lret
dec
cwtl
ds
lods
dec
pop
push
push
scas
jae
cmp
cltd
das
loopne
xchg
scas
iret
pushf
movsl
insb
push
outsl
sub
xor
push
cmpsb
addr16
imul
fisubrl
mov
dec
mov
xchg
clc
push
or
sarb
mov
sub
mov
push
mov
lret
mov
sbb
push
push
lods
dec
nop
push
mov
lret
dec
jb
push
ret
mov
in
cltd
xor
dec
out
mov
pop
lods
inc
insb
mov
loopne
fisubl
mov
cmp
pop
inc
dec
cmpsl
outsb
imul
jb
stos
mov
xchg
pusha
push
xchg
fistl
stos
xchg
mov
sbb
lods
push
xchg
cmpsb
aam
and
cwtl
mov
push
mov
fsubp
cmp
lahf
adc
sbb
xor
sbb
outsl
and
insb
inc
sbb
dec
sub
jno
mov
and
fcmovb
jb
and
ficompl
aas
adc
and
insl
add
sbb
fimull
fidivs
mov
bound
jmp
enter
jmp
gs
sub
mov
insl
xchg
push
push
jl
push
fsubr
aad
pusha
sbb
sbb
mov
cmp
das
pop
mull
push
lods
mov
stos
sub
dec
out
mov
pop
push
cmp
in
arpl
jecxz
lods
stc
out
dec
outsb
rcll
sbb
iret
jb
cld
imul
mov
xchg
out
jp
push
jecxz
cli
ds
repz
push
adc
jg
adc
xchg
xor
jo
mov
fcomp
sti
xchg
inc
dec
mov
pop
jno
adc
push
das
rolb
outsb
ja
mov
mov
loope
test
mov
mov
jbe
aaa
mov
mov
aad
aam
test
jno
xchg
lods
inc
dec
push
jmp
fisubs
aad
stc
push
adc
aaa
pop
int
sub
sbb
add
sahf
dec
loope
add
testl
push
or
sub
xchg
in
cmp
insb
mov
ficoms
mov
pop
push
stc
push
mull
lret
pusha
mov
lcall
push
adc
xchg
stos
rolb
test
sub
ret
sub
dec
xlat
xlat
scas
enter
dec
xchg
leave
or
jno
ss
push
in
xchg
sahf
je
outsl
xchg
and
or
addl
xchg
inc
loopne
mov
call
je
addb
mov
adc
cmp
movsb
loopne
insl
jbe
add
inc
adc
fs
addr16
aaa
push
ss
fistl
or
je
imul
xchg
and
cwtl
int3
les
sbb
and
lock
cmp
dec
scas
inc
cmp
mov
xchg
adc
mov
adcl
cs
out
or
add
out
or
inc
loope
xor
fldt
adc
test
mov
jmp
mov
clc
xchg
hlt
scas
xlat
dec
test
sub
xchg
xchg
push
xor
sahf
cltd
adc
dec
dec
inc
cld
lahf
lock
or
mov
push
sub
jno
int3
pushf
mov
enter
adc
test
xchg
call
cmpxchg
jne
add
cwtl
faddp
push
push
xchg
jno
mov
xlat
or
adc
mov
inc
pop
test
xor
cmc
sbb
add
fdiv
out
sub
push
dec
negl
pop
add
push
push
add
enter
xor
pop
outsb
or
in
and
push
inc
lds
jns
pop
aas
bound
or
mov
inc
int3
fistpll
xchg
fcmovnbe
sti
aas
pop
mov
adc
sub
cmpl
movsl
je
push
sub
xchg
add
lcall
fcom
dec
sub
push
xor
adc
mov
lock
idiv
mov
sti
add
sarl
xchg
or
hlt
sbb
fimull
sub
pop
fwait
mov
fwait
scas
out
popa
jp
in
aas
adcb
fdivl
movl
xor
add
mov
fdivp
adc
iret
call
mov
sbbl
inc
cwtl
dec
mov
mov
cmpsb
scas
jne
in
cmp
imul
insb
movsb
jl
and
dec
shll
jnp
rcrl
push
push
mov
mov
xorb
repz
adc
add
leave
xchg
and
fwait
push
test
cmc
ror
xchg
or
jmp
in
mov
mov
in
xchg
insb
scas
call
adc
adc
fistpll
clc
stc
pop
xor
add
out
arpl
or
mov
fdivs
into
inc
xor
loope
lods
mov
out
push
inc
push
in
stc
int
in
andl
imul
jb
rcl
jo
lds
mov
dec
pop
cmpsl
hlt
or
add
cmpsl
and
mov
shl
push
repnz
sbb
sahf
adc
enter
je
jb
aam
ds
add
jp
fmul
cmp
xchg
repz
inc
cmp
call
jb
jbe
int
pop
add
sub
inc
or
movsb
xchg
jae
aaa
push
sbb
lret
test
adc
push
test
adc
mov
fldenv
outsb
inc
movsl
push
test
stc
add
mov
push
mov
push
inc
xchg
arpl
scas
cmc
mov
adcb
mov
out
int
jae
xlat
or
xchg
sub
cltd
ja
outsl
sarl
adc
das
stos
pusha
ljmp
aas
repnz
imul
in
jg
xor
mov
mov
mov
test
je
mov
mov
push
inc
imul
lock
push
cs
adc
and
insb
xor
ljmp
test
push
mov
insl
jae
cltd
pop
lret
loope
push
shlb
shld
testl
dec
es
cltd
cmp
lods
and
out
test
stos
mov
or
loop
insb
lcall
cs
dec
dec
enter
idiv
adc
insb
decl
and
xor
leave
dec
xchg
xchg
pop
pop
lret
push
scas
xchg
ss
lods
jne
mov
pop
pop
std
sbb
les
pop
mov
xor
imul
inc
cltd
jle
pop
cld
mov
cs
repnz
test
xchg
cmp
xchg
push
repnz
jle
hlt
icebp
inc
mov
jmp
ror
sub
and
cmp
sub
jmp
clc
icebp
inc
out
mov
js
add
not
inc
jg,pn
push
out
es
je
pop
sub
inc
dec
pushl
test
ljmp
xchg
dec
or
movb
pop
and
adc
nop
pusha
jo
xor
loop
cltd
or
fildl
loop
add
push
xchg
idiv
mov
xor
cmp
dec
addr16
ret
arpl
out
inc
insb
mov
push
jmp
pusha
repnz
cmp
pushf
jl
mov
mov
pusha
add
cltd
xchg
mul
pop
xlat
out
out
rol
outsb
repz
jno
lcall
jge
stc
mov
fs
insb
data16
hlt
std
mov
inc
mov
rcrb
enter
insb
lds
fcoml
bound
test
mov
dec
adc
add
insl
imul
or
mov
pop
mov
pop
pop
push
hlt
orb
sbb
in
ret
lcall
aad
lcall
jmp
test
movsb
stos
fcomps
into
scas
add
mov
in
aam
ret
pop
sub
aaa
sbb
add
icebp
dec
push
cmp
cmp
shrl
mov
and
rcrb
sbb
or
stos
xor
add
int3
rcrl
jo
mov
movsl
jecxz
loop
test
jns
adc
jle
adc
shlb
adc
xchg
mov
jg
jbe
push
das
push
pop
jle
cmp
mov
pop
lret
and
push
jecxz
or
outsb
mov
into
push
incl
cmp
jnp
and
int
aaa
nop
bound
pop
nop
pop
movsb
xchg
adc
frstor
xchg
loop
mov
movsb
es
xor
js
aad
sbb
shll
add
mov
shl
sbb
inc
out
aas
add
es
out
shl
or
imul
dec
out
push
aaa
pop
xchg
push
dec
xor
adc
jno
inc
sbb
into
push
cmp
test
sti
gs
je
lret
dec
test
mov
push
fmul
cmp
push
clc
push
outsl
lods
es
fs
mov
testl
loopne
mov
add
insl
jno
ja
iret
in
mov
insl
mov
mov
mov
fs
jmp
push
testb
cmpsb
in
adc
pushl
mov
in
jbe
mov
out
push
adc
xchg
subl
dec
jl
xlat
xor
test
sbb
xor
sub
jl
inc
daa
cs
sub
pop
mov
out
xor
push
cmpsb
xchg
or
popf
insl
fs
cmp
cmp
mov
mov
xchg
aas
stos
cmp
mov
or
cmp
testb
lahf
inc
mov
out
aam
mov
sbb
mov
aas
adc
lret
dec
xchg
pop
and
inc
inc
insl
lea
add
jnp
stc
add
sbb
adc
sbb
lods
mov
xor
inc
push
repnz
sahf
sbb
mov
dec
loopne
mov
xchg
enter
mov
out
outsb
daa
mov
insl
aaa
xchg
adc
imul
bound
xchg
ss
insb
pushf
cmpsl
mov
pushf
popf
push
mov
push
lods
add
es
adc
cltd
jl
rcr
cld
lret
mov
push
std
sarl
jl
push
call
testb
mov
cmp
fstl
sbb
int
sbb
fmul
lret
mov
cmp
sub
cmp
scas
lods
fsubr
enter
jmp
mov
stos
jl
fmulp
xchg
xchg
xorl
dec
sub
or
ss
cld
xchg
mov
lds
and
inc
pop
jp
inc
pop
fmulp
inc
dec
mov
mov
lret
lods
stc
test
sub
mov
mov
dec
sbb
xor
and
rcl
push
sub
adc
icebp
fsubrp
loope
jne
sbb
push
add
test
fildl
orb
push
and
aad
fstpt
jmp
dec
mov
sbb
xchg
test
xchg
ffreep
sti
insl
aam
xchg
ss
arpl
call
push
pop
data16
nop
jge
je
pop
inc
mov
push
popa
pop
sbb
aam
push
mov
in
mov
out
lea
cmp
jmp
add
pushf
dec
mov
pop
and
adc
xchg
shll
scas
lahf
lahf
out
in
dec
pop
cld
mov
mov
sbb
loop
stos
mov
insb
jae
je
sub
orb
xchg
mov
les
or
and
sti
adc
in
push
jno
lret
out
sbb
shrl
mov
mov
adc
xor
repnz
mov
jnp
test
das
or
xor
loop
mov
sub
and
mov
xor
pop
fwait
pop
loop
daa
push
mov
mov
jnp
fcmovnb
push
jnp
mov
sbb
lock
dec
sti
int3
xlat
fwait
add
pop
mov
dec
jmp
inc
inc
aas
out
mov
pop
daa
jp
arpl
xor
or
sub
test
or
int3
pop
jmp
testl
push
neg
data16
push
andl
cmp
loopne
mov
fimuls
push
or
ficompl
test
rolb
lcall
test
andl
mov
pop
fsubr
into
pusha
ret
jno
pop
or
sub
push
xchg
fwait
in
sbb
int3
pusha
jmp
mul
int3
inc
pop
pop
sarb
or
jne
add
int
push
mov
cmp
es
out
pop
jno
test
pop
xchg
out
pop
add
jno
and
addb
fimull
lock
pop
adc
sbb
cmp
daa
or
icebp
je
push
jl
fiadds
insb
sub
push
jg
jo
aas
add
mov
push
test
stos
les
iret
lret
push
cs
jo
sete
pop
jle
stc
aad
jno
and
add
xorl
jne
sti
lahf
adc
adc
sbb
lods
add
and
add
add
inc
out
lcall
push
addr16
js
xchg
scas
shll
enter
jp
lds
adc
cmpsb
out
mov
lcall
ret
dec
leave
sub
movsl
ljmp
cmc
out
jmp
push
arpl
aas
stos
dec
je
insb
xor
xchg
enter
pop
neg
lods
push
jno
je
or
and
movsl
shr
jne
xor
xor
add
pushf
lea
jo
insl
xchg
mov
pusha
add
mov
cli
mov
loope
sti
mov
inc
lods
imul
outsl
fidivrs
cmpsb
popf
xor
mov
insl
scas
cmpsl
jb
ds
jmp
in
out
mov
sub
mov
repz
int3
push
outsl
xchg
push
mov
or
or
inc
imul
jp
cmp
ljmp
jo
es
out
into
cmpsl
shll
leave
in
pop
pop
sbb
sbb
jecxz
gs
out
mov
cmp
jp
sub
mov
pop
jp
sti
push
adcb
mov
jl
fstpt
adc
xor
jle
mov
pop
stos
inc
ds
movsl
mov
push
lahf
xchg
stos
mov
jbe
push
and
clc
mov
lds
shrl
xchg
mov
and
sahf
fmuls
inc
cmp
out
fwait
loop
mov
subb
out
sti
gs
jp
ret
imul
pop
mov
cmpsb
bound
fimull
loope
cmp
ret
or
fldl
push
lahf
mov
int
sub
adc
ljmp
mov
int3
cmc
in
lea
jge
push
pop
int3
lret
pushf
xlat
xchg
push
cmp
andl
xchg
push
pop
sbb
je
fcoms
and
sub
pusha
push
xchg
dec
jmp
cmpsb
push
sub
sbb
das
push
jmp
notl
jecxz
mov
das
lcall
decb
aam
adc
mov
int
xlat
rcll
call
lea
inc
js
add
loop
or
jae
sbb
inc
cld
push
js
jns
sub
shrb
leave
push
mov
inc
lahf
int
pusha
xchg
shll
mov
iret
jecxz
dec
shlb
xchg
imul
lea
stc
cli
lret
scas
jg
cmp
popa
pusha
jp
icebp
pusha
lret
adc
add
mov
les
dec
pop
clc
or
jae
outsb
inc
loope
sub
mov
int3
out
jb
in
cs
loope
pushf
jns
pushf
cmp
fwait
insl
sbb
jbe
push
out
pushf
cmp
insl
lods
scas
jmp
enter
subl
imul
push
xchg
insb
inc
pop
in
sub
fwait
jae
pop
clc
cmpsl
scas
jg
jle
dec
push
ja
push
jecxz
fidivrl
cwtl
cmp
repz
dec
mov
push
std
inc
cs
imulb
je
mov
int
push
dec
ror
sub
push
cltd
loopne
flds
jecxz
push
cmc
cmc
out
sti
push
mov
mov
clc
jl
and
adc
push
pop
lahf
dec
fdivrs
lret
std
dec
sbb
and
fwait
dec
in
fs
repnz
pop
loop
orb
mov
dec
loopne
popf
into
xchg
stc
cmpsb
adc
mov
xchg
out
sub
dec
std
shlb
or
cmp
inc
pop
and
jp
sub
mov
pop
shll
fucomp
aaa
data16
lods
jbe
xor
mov
and
or
out
int3
jmp
enter
aas
pop
pop
pushf
das
lds
or
or
les
jge
fnstenv
test
xchg
and
push
lahf
stos
adc
decl
inc
pusha
push
adc
test
stos
lret
test
pop
cmp
addr16
mov
jge
frndint
aam
push
sub
cld
or
xor
xchg
neg
and
ja
push
inc
or
lods
mov
lcall
adc
jno
cmp
addr16
out
adc
arpl
sbb
xchg
jl
dec
int3
and
mov
daa
pushf
lret
cld
cmp
xchg
dec
push
push
push
std
hlt
out
daa
rcrl
xchg
mov
pop
xor
enter
push
lret
gs
push
dec
insl
insl
rorl
push
inc
adc
repnz
testb
xchg
xchg
mov
xchg
push
clc
mov
fnstenv
push
sbb
fnstcw
xor
std
fwait
cmp
sbb
jb
pop
repz
movsb
icebp
xlat
push
or
jecxz
lods
stos
xchg
or
insl
lea
aad
ss
movsl
pop
shl
mov
pop
repnz
int
push
mov
mov
adc
daa
inc
xlat
push
jns
push
mov
je
cmp
and
push
call
fisttpll
and
ds
sub
push
pop
xchg
sub
and
jmp
test
insb
xchg
jns
in
das
insb
mov
mov
lret
loopne
test
aaa
mov
pop
push
pop
lods
adc
add
mov
mov
adc
mov
daa
ret
sarb
push
pop
ss
adc
cmp
xchg
fsubl
iret
or
rcl
inc
lret
nop
stc
test
mov
mov
xor
dec
sub
pop
mov
lock
and
stos
mov
out
sub
sub
dec
push
and
mov
jo
out
imul
pushf
dec
ret
and
cwtl
inc
test
imul
cmp
inc
lahf
jb
les
push
xchg
lret
test
and
jb
out
bound
push
mov
hlt
das
sbb
adc
dec
aaa
lcall
xor
xor
jbe
mov
addr16
adc
mov
out
mov
sarl
sub
es
cmpsb
mov
sti
dec
ja
cmp
rorb
scas
mov
or
out
xor
les
add
out
or
outsb
in
iret
jb
pop
jp
adc
add
and
cmp
and
pop
mov
cmp
mov
mov
mov
jae
and
xor
xor
iret
lds
jne
add
push
mov
and
stos
in
pop
sti
or
xchg
mov
je
dec
mov
adc
push
jle
insl
inc
int
add
scas
jnp
imul
or
mov
notl
insl
mov
push
xlat
push
loop
xchg
sbb
enter
notb
cltd
popa
sub
clc
pop
cmpsl
imul
insb
xchg
repnz
mov
dec
mov
mov
adc
mov
sub
xchg
in
pop
aam
lock
mov
pop
fldenv
testl
inc
pop
mov
imul
insb
cmpsb
lcall
jge
cltd
sub
or
dec
mov
xor
sbb
das
cmp
dec
mov
jle
fwait
lret
or
xorb
jnp
popf
js
add
adc
pop
or
lahf
rorl
jbe
cmp
push
sbb
jo
sub
mov
pop
jnp
add
aaa
mov
in
std
dec
in
dec
adc
push
loopne
stc
mov
aam
push
mov
dec
in
jnp
jae
xchg
or
mov
in
iret
es
jb
sub
pop
push
ret
xor
std
aad
cmp
mov
insl
mov
sbb
scas
mov
arpl
lea
ret
lea
mov
sarl
jecxz
cmp
scas
and
xor
adc
sbb
lahf
and
cli
sbb
bound
pop
scas
repz
push
mov
push
es
lock
mov
test
mov
adc
dec
push
out
and
arpl
push
stos
jl
mov
insb
add
pop
pop
icebp
lret
fcompl
leave
jecxz
das
push
lcall
cmp
sbb
jo
adc
leave
out
insl
cs
cmp
fs
int3
pusha
mov
cmpsb
in
dec
push
jbe
out
out
mov
dec
and
inc
sbb
add
push
push
cmp
push
lods
ret
iret
lds
imul
and
std
cmpsb
cmp
mov
mov
pcmpeqd
push
sar
stos
ja
je
fiadds
pop
out
movsb
jg
leave
cld
ss
adc
hlt
cmp
insl
xor
sub
mov
mov
mov
adc
imul
push
pop
gs
popa
xor
out
call
insl
mov
jge
cmp
jmp
inc
jge
fdivrl
into
test
lcall
mov
mov
out
fsubrl
adc
cmp
push
outsb
fnstsw
iret
mov
cli
je
mov
popf
jbe
push
outsb
push
and
push
add
movsb
cwtl
xchg
push
pop
ret
repz
idivb
xor
ret
sub
mov
pop
cwtl
nop
pop
mov
mov
insb
xchg
inc
addr16
xchg
push
loopne
inc
jne
rol
jmp
add
jl
fiaddl
lret
fnstcw
push
fiadds
loope
loope
movsl
pop
mov
push
mov
loope,pt
push
mov
mul
ss
js
xor
lock
ret
add
pop
inc
stc
mov
jl
arpl
cmp
push
out
inc
incl
pop
jno
cmp
lods
add
sti
or
mov
fwait
xor
sbb
mov
shll
jo
jge
xchg
mov
fisubrs
jecxz
sub
dec
mov
dec
jge
xlat
fwait
jmp
cld
or
mov
pop
repz
insl
mov
dec
adc
lods
jp
pop
stc
pop
pop
push
test
movsl
sub
xchg
in
neg
pop
mov
mov
push
jno
jge
xchg
jl
popa
sub
dec
dec
js
and
stos
push
jbe
mov
pop
mov
inc
insb
cmpsl
imull
xor
enter
jmp
fmul
aad
pop
mov
cmp
sbb
insb
shlb
or
jp,pt
mov
int
subps
mov
fs
or
xchg
xchg
push
xor
dec
decl
adc
stos
sbb
js
inc
xlat
xlat
mov
lock
filds
mov
mov
cmp
pop
sub
xchg
shll
mov
lods
sbb
pop
sbb
dec
dec
pop
lods
out
fld
repnz
xchg
pop
dec
out
fwait
pop
lock
jae
repz
mov
stos
pop
cmp
ds
mov
fs
aas
mov
jg
lret
movsl
mov
cli
jge
sub
xchg
push
add
loopne
int
stos
or
push
push
out
mov
sahf
repz
ret
dec
jg
dec
scas
fdivrl
mov
mov
cmp
xchg
pop
cld
dec
inc
add
xchg
mov
jo
adc
fdivs
sub
out
test
mov
adc
mov
inc
mov
inc
xchg
mov
cld
xchg
ss
data16
cmp
ffreep
test
outsb
vpshldvq
push
xor
push
dec
and
ret
lods
ja
cmp
adc
subb
add
cmp
mov
xchg
push
aaa
psadbw
mov
jae
push
dec
mul
mov
icebp
dec
jecxz
shrl
pop
xchg
aam
adc
jmp
int3
add
add
and
mov
mov
fwait
pop
pop
dec
xchg
dec
ss
ds
inc
pop
cmp
jns
push
test
ret
jne
push
add
mov
lds
imul
xchg
mov
mov
jae
sti
pop
xchg
cmpsl
fbld
icebp
ficoml
jge
push
dec
in
mov
in
and
mov
out
fisttpll
iret
mov
push
xor
and
mov
pop
sbb
sti
mov
inc
jb
mov
sbb
and
cmp
xchg
lds
sbb
pop
xchg
jle
sub
push
pop
or
nop
mov
inc
movsb
cli
mov
push
imul
out
push
outsl
shlb
aas
xor
mov
pop
pop
out
xchg
push
mov
dec
daa
fincstp
cmpsl
cmp
mov
lock
or
mov
aam
rcl
xor
loopne
xchg
sahf
fldenv
fimuls
sti
pop
lods
movsb
sub
lea
in
sbb
cmp
push
add
or
add
add
notl
jno
jmp
jge
xchg
add
insb
sbb
orb
pop
adc
vmread
std
mov
xorl
push
repz
test
sbb
mov
pop
pushf
lret
fucomp
jp
adc
xor
jns
test
stos
fsub
mov
sbb
outsl
cmp
divl
push
inc
and
sub
xor
jne
pop
std
and
testb
shl
rcrb
lahf
inc
jbe
push
cld
addr16
out
xorl
push
mov
sub
push
lret
sbb
mov
enter
jo
aas
jmp
sbb
pop
aad
pop
or
cld
pusha
nop
mov
sub
jmp
and
mov
daa
mov
icebp
inc
or
dec
push
loopne
sbb
shlb
iret
sub
pop
addl
ficomps
sbb
icebp
inc
xchg
icebp
add
pop
pop
mov
jns
jg
mov
fwait
in
adc
pusha
mov
jns
inc
mov
and
arpl
call
les
cmp
dec
dec
icebp
mov
pop
push
sbb
add
hlt
leave
sbb
jle
lret
xor
jae
push
xchg
mov
lods
xor
push
push
ss
nop
ja
or
xor
loop
jmp
push
push
addb
fidivrl
xor
inc
jbe
lret
xchg
inc
aas
scas
in
mov
into
int
pop
test
call
mov
dec
das
fsubs
ret
scas
das
pop
arpl
jg
shl
addr16
loopne
je
loop
test
cmovb
jg
movsb
ja
ds
pop
and
mov
jb
and
mov
mov
lret
hlt
push
mov
xlat
outsl
sub
int3
dec
rorb
in
imul
sarb
cwtl
xchg
nop
and
mov
sub
mov
xor
lds
adc
decl
out
aad
les
arpl
jmp
pop
clc
fcompl
jl
inc
sahf
xchg
mov
push
mov
sbb
jnp
lock
mov
shlb
pusha
pop
stos
fldcw
nop
mov
xchg
xchg
call
jnp
daa
bswap
test
push
repnz
jno
outsl
xchg
scas
push
imul
dec
jl
cs
push
movsl
push
xor
aaa
fiadds
aam
or
mov
push
scas
aas
adc
out
das
pop
ficoms
xchg
mov
mov
lea
dec
pop
mov
mov
rorb
jo
mov
and
ss
and
mov
mov
add
int
and
data16
sub
in
rorb
mov
imulb
fnstsw
and
popf
lds
pusha
loop
cmp
push
pop
xor
jecxz
fnsave
jne
cmp
add
sub
push
add
in
xor
data16
mov
jle
sbb
push
jae
ss
sub
cmp
icebp
mov
cmp
scas
cmpsl
gs
rorb
cmp
mov
mov
sub
add
dec
mov
push
xchg
fdiv
lods
jmp
popf
gs
jae
inc
xchg
imul
mov
movsl
call
imul
inc
lds
mov
xchg
xor
pop
sbb
or
cltd
stc
inc
out
mov
mov
out
je
mov
repz
sbb
out
movsl
mov
adc
jbe
xchg
adc
dec
shlb
cmpsl
in
imul
in
sub
fmul
sub
clc
xor
test
mov
mov
sahf
pusha
xor
ret
repnz
nop
pop
sbb
mov
lea
ret
xchg
rol
adc
ret
mov
xorb
adc
lea
fdivrs
sub
dec
out
add
add
or
notb
cs
in
xor
clc
pop
lea
enter
sbb
inc
icebp
jae
push
loope
push
pop
jecxz
adc
push
push
cs
mov
call
cmpsb
mov
sbb
push
sar
imulb
dec
jmp
add
aad
inc
test
sub
mov
call
inc
lods
jecxz
mov
xchg
cmp
call
je
jnp
in
push
nop
call
mov
push
inc
adc
add
sbb
xlat
sbb
dec
and
or
imul
cmp
stc
mov
xchg
cmp
cmp
inc
xchg
aaa
mov
lahf
loope
pop
jecxz,pn
fwait
mov
lret
or
not
popa
mov
mov
push
and
popa
jp
mov
mov
js
or
data16
fiaddl
lds
icebp
and
rcrb
jecxz
inc
cmpl
cmp
pushl
mov
dec
and
fdivrl
pop
aas
dec
add
ss
mov
fstpt
xchg
add
flds
mov
and
in
movsb
push
pop
aas
imul
cli
les
lods
mov
shll
jb
push
adc
jno
aaa
int
and
loop
jle
dec
xor
cmpsl
mov
mov
xor
fsubrs
mov
fbld
jecxz
out
adc
loope
sbb
sbb
inc
lret
mov
in
or
shll
mov
inc
dec
rcrb
sbb
in
sub
inc
mov
adc
mov
jns
mov
jl
xchg
sbb
push
dec
mov
cmc
inc
cmp
xchg
fstps
nop
addr16
adc
cwtl
sub
insl
xor
sub
push
and
cmp
inc
fbstp
mov
jecxz
mov
fistpl
mov
cmpsb
lcall
cmp
shrl
js
lcall
pusha
scas
mov
inc
dec
mov
mov
mov
and
pop
faddl
adc
fnstenv
aam
dec
jecxz
movsb
and
push
dec
jno
cltd
iret
lahf
cli
inc
push
jecxz
cmp
nop
inc
push
popf
fs
imulb
cmp
test
outsb
clc
test
push
call
mov
dec
push
cld
fldl
stos
fstl
sub
sbb
fstps
sbb
stos
dec
xchg
pop
ja
ds
ja
nop
je
push
aam
jg
ss
stos
fwait
adc
xchg
xchg
fiadds
std
push
fyl2xp1
inc
pop
shl
xor
call
mov
add
ljmp
pop
add
jge
push
adc
int
cmp
adcl
push
adc
pop
inc
sbb
inc
dec
sub
ja
push
jb
jp
loop
mov
xor
push
lods
xor
push
jae
shl
jno
dec
dec
lea
clc
aad
mov
int3
cmpb
lcall
orl
clc
les
aas
fwait
jge
inc
std
lock
rolb
pop
xchg
mov
sub
sbb
dec
bound
andl
imul
pop
addl
jne
pop
or
iret
out
fidivrl
push
mov
rcrl
out
iret
pop
or
in
cmp
repnz
iret
adc
mov
cld
mov
icebp
rclb
mov
cs
sarb
or
adc
mov
push
repnz
pop
jo
or
mov
push
xchg
jle
les
insl
lret
ljmp
ljmp
notl
movsl
add
ljmp
cltd
sub
push
dec
ret
dec
dec
stc
sub
sbb
jbe
mov
bound
add
mov
ficoml
mov
pop
or
push
insb
cld
insl
jmp
jg
jns
or
push
sbb
pop
stos
push
call
adc
test
sbb
imul
mov
cmp
lea
loop
xchg
lods
aam
jle
xchg
xchg
push
adcl
jbe
cmp
out
push
loopne
addb
sbb
stos
cltd
sbb
fdivrs
or
lea
jge
lea
test
push
dec
sub
xchg
or
lds
inc
sbb
jne
and
mov
arpl
add
jno
addr16
sbb
push
sub
cmpsl
dec
adc
aas
call
adc
push
jg
sahf
loope
inc
xor
push
loop
dec
lods
nop
gs
pop
inc
stos
lahf
imul
out
inc
pop
pop
int3
iret
aaa
mov
popf
adc
and
or
cmp
mov
pusha
mov
push
daa
out
enter
xor
pop
scas
cmp
pop
aaa
and
pop
jl
jmp
jg
movsb
mov
xchg
xor
mov
jp
sub
inc
movl
xchg
pop
jbe
and
xchg
out
mov
sti
lret
cmp
pop
xchg
lahf
xchg
rcrb
mov
adc
jle
and
xchg
adc
lahf
and
mov
mov
mov
xchg
mov
loope
outsb
jp
pop
loopne
push
ret
and
in
mov
pop
dec
ss
leave
ret
bound
add
lahf
mov
sub
ljmp
jae
ret
mul
test
pop
lock
nop
mov
cld
cmc
ljmp
stos
leave
and
mov
push
jo
push
dec
cmp
mov
or
rcll
jl
mov
adc
push
loope
call
hlt
iret
cmp
inc
aas
lock
adc
xchg
jle
std
inc
dec
pop
inc
repz
sbb
daa
push
cmp
aam
sti
es
pop
sbbl
inc
pop
adc
outsb
xlat
add
sbb
inc
add
repz
rcll
push
mov
les
mov
xchg
adc
pop
inc
leave
js
jne
inc
jae,pn
testl
inc
push
data16
jp
mov
mov
ljmp
adc
ds
mov
cwtl
imul
lret
lods
pop
ret
jl
sbb
adc
xchg
or
pop
sbb
dec
mov
xchg
repnz
int
push
pop
andb
mov
cwtl
mov
insl
xor
rcrb
inc
push
and
cmp
js
addb
and
xchg
andl
insb
stc
pop
cmp
ret
out
push
cmp
stos
pop
scas
sti
push
movsl
int3
pushf
dec
mov
adc
fstl
rolb
and
fstl
aam
cmp
push
fists
dec
fdivr
mov
lahf
enter
fdivrl
rcrb
mov
rorl
stos
mov
and
mov
scas
test
cmpl
adc
mov
cli
fsts
pop
je
mov
dec
push
dec
loope
shr
sbb
and
cmp
mov
mov
fs
cld
movsb
testl
mov
cmp
mov
cwtl
cmp
xchg
pop
jle
add
enter
xchg
pop
mov
or
iret
xchg
adc
push
push
sarl
add
aam
sbb
hlt
inc
and
pop
mov
imul
cmpsl
dec
or
xlat
rorl
add
adc
xchg
push
sub
jb
inc
cmpsb
add
sbb
sub
cwtl
xor
add
outsl
pop
mov
stos
or
std
and
sbb
mov
popa
xchg
push
scas
sahf
sub
or
sub
sub
es
daa
test
xor
pop
sbb
dec
sti
and
sub
sbb
lods
sub
movb
xchg
lret
mov
xchg
mov
mov
mov
lds
stos
mov
fisubrl
adc
push
testl
xor
fwait
shr
leave
shrl
jge
lahf
xchg
lahf
mull
xchg
aam
scas
mov
dec
test
jmp
ljmp
or
mov
imul
xchg
push
loope
adcl
xor
loope
out
std
sbb
cmc
loop
shll
fstpt
jl
fsub
js
add
lea
rcll
jecxz
inc
jo
inc
ret
daa
jp
or
dec
int
loope
add
pushf
dec
dec
ret
in
in
sbb
scas
or
jmp
jecxz
fcoml
mov
cmp
mov
xor
mov
dec
fcoms
mov
mov
dec
mov
push
xchg
rcrb
or
rclb
jl
test
andl
or
mov
and
movsb
jae
js
das
inc
out
cmp
mov
mov
add
fidivl
sbb
sbb
test
and
sbb
xor
inc
loope
sub
leave
jbe
ja
sarl
fucomi
mov
ss
fstps
scas
add
mov
jp
mov
push
jmp
adc
insl
xchg
int
test
rorb
cmp
aam
popa
repnz
test
lock
sub
push
ja
adcb
lret
mov
mov
mov
add
icebp
repz
cmpb
push
sbb
jnp
enter
push
fwait
mov
sbb
fbstp
cltd
sti
rorl
adc
add
mov
bound
lret
pop
arpl
dec
pushw
jae
inc
cwtl
add
mov
loop
in
xchg
out
inc
inc
sti
test
insl
clc
in
iret
loop
ja
iret
mov
dec
mov
or
lret
pop
sbb
test
cwtl
mov
int
push
and
aam
ss
mov
mov
mov
add
or
pop
fwait
out
shlb
or
push
jnp
cmpsl
test
mov
into
mov
jmp
idivb
cld
mov
ljmp
mov
inc
mov
push
mov
data16
rcrl
pop
sub
sarb
test
inc
out
cwtl
jle
std
outsb
and
imul
or
jge
xor
xchg
pushf
push
pop
cmp
sbb
cmc
sbb
dec
inc
iret
cmp
push
add
lahf
shll
in
jnp
pop
mov
or
gs
scas
cmp
mov
jne
mov
dec
aaa
jl
loop
sti
push
xchg
and
aad
fcomps
roll
dec
orb
sbb
das
lock
insl
mov
xor
test
mov
pop
sbb
aas
gs
rorl
jnp
jne
mov
pop
fbstp
xor
mov
push
xchg
jmp
dec
cwtl
ja
insl
fucomp
outsl
push
adc
out
mov
insb
cld
mov
scas
lock
addb
sbb
add
lret
sbb
outsb
dec
out
cli
push
cmpsl
cmp
int
jmp
mov
mov
aas
rcrl
jp
dec
int
fisubrl
inc
jp
imul
sbb
and
pop
pusha
sbb
cmp
insl
cmpsl
jb
or
mov
adcb
mov
sub
adc
xlat
mov
jnp
dec
xlat
popf
and
mov
and
mov
call
ror
packuswb
loope
add
cli
or
dec
jo
adc
shl
pop
inc
popa
or
push
cmp
cmp
pop
pushf
pop
mov
int
lods
test
sub
cmp
jo
cmpsl
fists
mov
mov
cltd
push
lret
push
pop
std
jle
xor
push
inc
fwait
xlat
sub
aas
push
and
or
jb
mov
pop
cmp
popa
lcall
jo
adc
adc
fistps
shl
sti
jg,pt
sti
sbb
addps
cmp
cmp
dec
stos
stos
push
fistpll
mov
jo
dec
popf
sub
mov
decl
jbe
add
stos
cwtl
fs
pop
not
loop
out
jecxz
int3
cltd
adc
data16
fwait
mov
subl
xchg
mov
mov
sbb
std
out
in
nop
and
xor
ror
lods
stos
cmp
js
iret
inc
popa
movsb
pop
pop
pop
fsubrs
mov
dec
add
nop
add
xchg
lods
pop
jne
iret
mov
sub
frstor
stc
out
lods
orb
pop
nop
subl
sub
mov
lahf
push
pop
shll
int
adc
pop
add
dec
mov
jnp
sti
add
xor
popf
shl
rorl
loop
dec
leave
add
in
loopne
xchg
repnz
and
loop
inc
mov
xchg
add
lods
shl
jae
xchg
or
sub
pop
cmp
cmpsl
cmc
dec
mov
xorb
rolb
dec
dec
rclb
nop
sbb
xchg
mov
mov
sub
or
add
pop
into
ja
in
push
sti
add
adc
lock
cmp
push
jae
into
pop
pop
pop
aas
into
loope
in
cmc
sbb
mov
shl
mulb
daa
aam
dec
xchg
mov
cs
inc
jmp
push
test
rcrl
mov
mov
jo
gs
loope
into
adc
mov
and
cld
fiaddl
xor
add
stc
lods
jbe
xchg
pop
adc
xchg
add
call
pop
lcall
das
push
mov
in
adc
push
into
sbb
or
jge
mov
out
inc
jg
or
cmp
cmp
inc
pushl
leave
xor
jle
idivl
imul
and
fs
pop
int3
add
iretw
sub
xor
call
push
adc
pushf
xchg
out
loopne
or
dec
fwait
pop
cmp
xor
mov
jnp
cmc
mulb
sbb
lahf
cmpsl
jle
icebp
aam
xor
inc
sbb
jmp
xchg
lret
mov
fdivr
add
xchg
jae
add
xor
mov
fldt
ret
or
xchg
pop
sahf
jo
xchg
inc
fdivs
mov
and
push
jge
or
dec
cmp
sti
in
mov
sbb
jnp
jne
xchg
rol
mov
outsb
outsl
jne
shll
ret
mov
dec
sarl
fsubs
addr16
dec
repnz
inc
push
mov
push
movsl
add
and
ja
aam
xchg
sbb
fisubs
cmp
mov
push
pop
mov
jge
cmp
sbb
outsb
sahf
dec
pop
loop
data16
mov
inc
mov
test
mov
dec
xchg
rorl
std
dec
rorb
movl
shl
cs
and
xor
pop
les
dec
cmc
mov
mov
clc
stos
gs
in
pushf
and
xchg
mov
xchg
and
inc
jge,pt
jns
mov
add
adc
xor
jl
jno
aam
mull
imul
or
mov
and
lds
inc
xchg
incl
shl
mov
jle
push
push
lock
and
popa
cmc
movsl
jbe
inc
mov
into
and
mov
jno
sub
sub
pop
ret
pop
mov
inc
mov
sbb
push
pop
pop
push
dec
jge
lcall
adc
mov
leave
inc
stos
in
out
inc
mov
mov
movsb
loope
cmpsb
add
xchg
sub
out
into
mov
bnd
pop
cmp
movsb
jg
lret
jp
nop
lea
cmc
out
cmp
mov
sub
jge
lar
push
push
test
out
imul
lret
les
and
movsl
mov
daa
jne
inc
add
push
loop
pop
into
jmp
jp
xor
and
sub
enter
movsb
notb
mov
clc
sub
pop
jb
sub
adc
mov
test
or
ret
xchg
outsl
insl
mov
inc
and
sub
adc
adc
sbb
rcll
pop
es
sbb
jmp
imul
enter
sbb
pop
enter
ja
cli
loope
movsl
mov
xor
pop
sbb
fcompl
aam
data16
push
push
inc
and
cwtl
js
adc
fs
test
lcall
push
jecxz
mov
and
xchg
ss
xor
shll
mov
push
inc
in
mov
leave
sub
ljmp
jno
dec
call
mov
rorl
mov
sbb
push
fmuls
cmp
cs
iret
repnz
pop
xchg
fdivp
push
jmp
insb
push
int3
xor
xchg
mov
sbb
inc
mov
lret
push
cmp
mov
xchg
imull
and
out
test
jl
imul
lret
fistps
or
adc
mov
insl
pop
cmp
xchg
sbb
mov
sbb
mov
sbb
xor
mov
sbb
mov
cltd
push
inc
int
bound
inc
mov
fstps
xchg
pop
vrsqrtss
jns
xchg
add
xlat
add
pop
andl
mov
cmp
inc
mov
adc
push
inc
pop
lret
jae
sub
fcom
in
sub
xchg
mov
adcl
lret
cwtl
pushf
sub
sub
and
xor
imul
or
dec
arpl
mov
loop
jl
mov
xor
loop
fsubs
inc
cmpsb
cmc
mov
xchg
icebp
fs
loop
inc
xchg
aas
mov
mov
mov
sbb
sti
mov
and
imul
jp
mov
rorb
push
sbb
in
int3
and
cmp
adc
mov
jl
insb
adc
lock
jne
pop
pop
push
fdivs
outsl
loope
gs
test
shrl
es
popf
into
sub
lods
aad
pop
insl
fsubrl
mov
mov
xchg
dec
adc
stos
sub
fiadds
lds
inc
jl,pt
cltd
cmp
adc
int
rclb
adc
push
dec
in
push
mov
pop
pop
lods
leave
sbb
in
ret
lods
sbb
sub
test
idivb
pop
bound
xchg
inc
sahf
add
jb
scas
incb
popa
pushf
or
push
add
js
repnz
dec
add
or
mov
mov
outsl
adc
push
mov
jp
push
add
inc
gs
les
mul
imul
xor
jecxz
sbb
in
pop
mov
or
scas
or
and
test
scas
mov
mov
sub
cmp
pop
pand
xchg
push
jns
push
pusha
pop
lahf
jl
enter
inc
cld
and
loopne
mov
cli
push
mov
loop
pop
jno
push
jns
cmp
test
mov
mov
add
mov
sbb
or
sbb
or
xor
pushf
aas
mov
or
xchg
cwtl
mov
fsubrs
sti
nop
mov
popf
xor
add
icebp
add
inc
movq
stc
and
fsubr
and
in
inc
jns
movsb
push
faddl
cmp
jl
mov
insl
cld
je
and
xorl
mov
cs
or
mov
clc
adc
ret
push
test
repnz
push
fisttpll
add
sbbl
les
mov
push
popf
enter
hlt
xchg
clc
jle
push
sbb
sti
inc
add
add
inc
or
loope
mov
rcll
or
and
mov
addr16
or
imulb
lret
mov
adc
jmp
cld
xor
fucomi
inc
es
std
ss
xlat
fildll
adc
cmc
sahf
mov
ljmp
cltd
sbb
in
je
into
dec
sub
inc
test
pop
test
or
or
nop
pop
mov
add
add
push
inc
inc
pop
subb
and
push
rclb
and
add
loopne
pushf
add
test
shlb
pop
add
popa
xchg
mov
repz
popa
js
hlt
add
bound
push
mov
dec
lds
sub
mov
push
push
adc
cmc
xor
arpl
adc
pop
enter
pusha
xchg
sbb
sub
mov
lcall
iret
jno
xchg
icebp
or
leave
leave
es
jae
or
lahf
mov
xchg
fwait
mov
repnz
push
inc
aaa
dec
out
xchg
addl
dec
sub
push
outsb
inc
ljmp
add
adc
ljmp
mov
ds
xchg
inc
cmp
mov
pop
fucomp
jle
cli
iret
push
push
aad
cmp
das
fisttpll
ja
test
negl
mov
push
dec
inc
cmp
loop
pop
fnstcw
pop
add
pop
push
lret
sbb
xlat
and
mov
frstor
mov
lods
inc
cmpsb
or
inc
jo
xor
mov
sbb
inc
and
jno
sub
mov
xor
inc
cmc
stos
mov
jmp
rorl
in
mov
mov
pop
lods
pop
lods
or
test
mov
jle
inc
xor
mov
jae
call
cmpb
add
push
push
jmp
push
cmp
stc
sbb
daa
cmp
dec
aas
pop
sub
cmp
dec
push
jg
ljmp
or
mov
imulb
jmp
aas
push
pop
sub
pop
or
mov
cmp
adc
jb
subl
mov
rorl
xor
push
cli
adc
jle
call
fisubrs
mov
movsb
cmp
inc
je
dec
loope
in
or
dec
and
push
dec
imul
mov
dec
push
ljmp
sbb
inc
cli
xor
arpl
loopne
mov
adc
js
sbb
pop
mov
loop
clc
jb
xor
push
cmp
jmp
xlat
dec
xor
hlt
jl
push
les
nop
sbb
mov
pop
icebp
cmpsb
int3
orl
pop
shl
in
adc
mov
push
mov
fldl2t
rcrl
xchg
fdivs
imul
cli
cmp
inc
xchg
adc
mov
insl
in
lock
xchg
mov
sbb
aam
mov
jle
aaa
or
bound
push
mov
adc
fwait
mov
data16
push
jmp
sti
pusha
stos
lds
push
mov
xchg
xor
pushw
inc
pop
push
gs
mov
push
add
sbbb
test
cmc
mov
mov
cmpb
sub
xor
inc
rolb
push
xor
subb
sub
dec
in
push
jp
gs
cmp
or
adc
mov
xor
pop
push
test
inc
repz
inc
mov
pushf
ss
stc
jns
pop
push
mov
fcomp
dec
add
adc
push
inc
scas
cld
data16
gs
bound
inc
stos
iret
inc
mov
loop
fildl
shll
fsubrp
iret
sub
bound
mov
nop
cld
shrb
sbb
cld
adc
jbe
push
push
push
push
inc
and
les
ret
dec
fwait
out
pop
mov
mov
push
sbb
add
dec
xor
fstl
aam
or
sbb
or
adcl
xchg
sti
mov
loopne
or
js
lcall
adc
repz
movsb
rcrb
jmp
rcrl
and
insl
cmp
mov
scas
orb
mov
or
cmpl
push
ror
cmp
aas
pop
mov
add
inc
cmp
adc
jecxz
pop
xchg
ds
fsub
cmpl
mov
jmp
in
pop
decl
fisttpl
pop
test
sbb
loope
sbb
test
scas
pop
cltd
jle
inc
and
xor
xchg
jnp
and
adc
or
je
cmp
inc
loopne
sbb
cmc
and
insl
icebp
sbb
cmc
das
dec
ljmp
fcomps
fstp
iret
cmpsb
notb
ljmp
insb
xor
mov
out
jg
je
repz
fcmovu
mov
adc
pop
sbbl
shll
dec
or
or
in
fdivp
inc
dec
fbstp
and
call
repnz
adc
mov
into
mov
leave
sbb
pop
test
push
out
pusha
xor
xor
dec
inc
sub
shrb
ss
jne
movsl
push
and
jbe
xor
popa
cmp
mulb
test
inc
movsl
movsl
pop
and
lock
in
jns
pop
je
call
lret
sahf
cmp
xchg
std
cwtl
dec
xor
popa
test
push
jmp
xor
mov
hlt
add
and
leave
jmp
lods
iret
in
cld
add
inc
or
adcl
mov
insb
inc
call
orb
pop
xchg
int3
sbb
and
lock
fldt
fsubl
int3
mov
xchg
lea
xor
mov
imul
int3
daa
mov
daa
push
addl
movsl
push
xchg
inc
mov
int3
jmp
pop
and
push
xor
add
jle
push
out
jb
and
cmp
outsb
pop
xchg
xor
adc
test
or
mov
aam
subl
test
cmp
mov
iret
xchg
mov
pop
jp
mov
sbb
repz
or
inc
mov
xor
inc
adc
arpl
push
jbe
mov
test
mov
movsb
adc
outsl
in
jnp
or
into
stos
call
sub
cli
pop
fwait
enter
xchg
or
jae
pop
pop
xorb
mov
jae
push
cmpsl
xor
lret
loopne
adc
add
in
jle
outsl
add
lea
enter
addl
aam
or
idiv
mov
cld
dec
sbb
loop
loope
or
js
add
push
sbb
lret
sub
ret
mov
test
xchg
enter
test
xchg
jnp
mov
stos
fldenv
dec
and
pop
inc
dec
sub
or
sbb
lea
fistpll
mull
fnstcw
ds
mov
mov
xchg
cmp
in
mov
js
iret
mov
mov
jne
sbb
movb
cmp
gs
jmp
or
xor
dec
stos
adc
inc
orl
mov
cmc
out
scas
in
rolb
andl
out
iret
jo
sti
pop
mov
xchg
inc
lea
mov
mov
js
hlt
sbb
xor
insl
mov
gs
mov
mov
outsb
mov
cmovg
fs
mov
lock
inc
stc
inc
out
scas
ja
nop
mov
inc
call
in
enter
inc
cli
popa
outsl
jae
mov
push
inc
ret
scas
xchg
xor
scas
mov
cmp
pop
xor
outsb
cmpsl
cmpsb
dec
cwtl
adc
and
sbb
mov
add
push
add
pop
lock
in
add
push
dec
xlat
add
add
adc
adc
aas
cs
ret
push
int
sbb
hlt
shrd
or
test
mov
fcmovu
push
hlt
pop
repnz
inc
and
test
jg
push
fidivrs
xchg
icebp
pop
lret
pop
aas
lea
pop
daa
imul
icebp
nop
sub
imul
icebp
adc
stos
pop
cld
push
fwait
add
loop
jne
inc
lods
mov
out
xor
loope
andl
icebp
push
les
cltd
std
pop
sub
pop
pop
jmp
xchg
push
mov
sbb
dec
or
hlt
movsb
sbbl
sub
js
pop
or
mov
cmpsl
das
add
iret
sub
cltd
sub
xor
mov
nop
mov
hlt
cmpl
out
ljmp
sub
cmp
push
stc
mov
ret
scas
and
data16
xor
xchg
sub
push
jmp
scas
mov
out
xchg
sti
sub
stos
mov
push
in
mov
mov
inc
cld
dec
ljmp
jno
mov
mov
cwtl
sub
xlat
das
or
cmc
adc
mov
movsb
gs
icebp
cmpsb
mov
cmpsb
add
out
out
shlb
mov
icebp
pop
out
jge
cmp
sub
repnz
movsl
inc
and
and
cmp
xchg
ja
mov
imul
pop
add
and
shl
sahf
push
sbb
xor
lcall
mov
inc
ja
dec
dec
pop
xor
mov
fwait
and
cmp
das
fucom
push
and
mov
fisttpl
dec
and
das
es
lds
dec
les
add
mov
stos
and
andb
test
call
mov
add
adc
adc
mov
push
dec
inc
push
pop
sbb
out
xor
pop
jbe
sbb
mov
ss
cld
mov
aad
push
dec
dec
pop
fsubl
popa
xchg
pusha
cld
repz
test
add
dec
ficomps
mov
pop
daa
inc
faddl
roll
lret
xchg
testl
pop
mov
in
out
push
jo
in
stos
movsl
inc
shrl
stos
sub
sbb
clc
sarb
dec
push
jns
mov
add
pop
adc
mov
cwtl
out
lds
les
xchg
pop
lods
add
adcb
push
ja
loope
mov
pop
andl
mov
xchg
xchg
mov
cmp
aam
test
mov
cltd
imul
mov
jp
xor
stos
stos
jmp
arpl
sbb
and
push
jnp
add
je
clc
in
pusha
inc
jg
cmp
jns
mov
pushf
stc
pop
or
or
mov
js
push
mov
repz
lock
xor
out
cmc
js
xchg
dec
xor
mov
xor
cwtl
cmp
sar
in
repnz
scas
cmpsl
mov
in
or
stos
aaa
mov
into
shlb
or
push
xchg
aas
mov
or
js,pt
jmp
jae
mov
jmp
loope
push
or
sahf
negb
lahf
and
jno
push
pop
scas
fwait
jb
mov
stc
aaa
lods
aas
jo
inc
ret
sti
das
fs
sahf
jmp
dec
jbe
sbb
popa
fld
lods
andb
call
and
ss
lcall
shlb
mov
xchg
adcb
push
add
mov
push
into
push
inc
and
pop
je
les
adc
mov
adc
nop
inc
in
test
shll
cld
test
sbb
stc
mov
sub
lret
repz
or
mov
inc
mov
or
daa
sbb
and
or
shll
fs
push
mov
push
sub
cmp
loopne
xchg
xor
int3
enter
lods
test
pop
cwtl
sub
divb
mov
jns
or
outsb
fldt
ret
scas
rolb
xor
stc
nop
pop
lahf
rcl
dec
pop
pop
pop
or
push
aaa
cld
push
xchg
pop
ljmp
pop
inc
mov
mov
sub
popf
insl
pop
xchg
out
gs
test
push
xor
xchg
cli
and
mov
adc
fsubr
stos
and
divb
and
sub
faddl
dec
push
incb
mov
add
daa
cmpb
xor
cmp
imull
push
inc
mov
mov
adc
insb
mov
xchg
out
mov
mov
insb
jge
int3
loop
scas
shll
inc
adc
sub
add
adcl
mov
pop
pop
lea
js
mov
enter
xchg
xchg
add
sbb
mov
out
xchg
sbb
sbb
sub
loop
hlt
sbb
and
or
loopne
lea
mov
insl
mov
test
inc
jl
je
aad
sbb
lret
lret
cmc
add
cli
sbb
sub
jb
scas
mov
fcomp
movsb
divb
lods
cmp
fisubrl
bndstx
mov
popf
fs
lret
mov
cmp
jae
arpl
push
sub
mov
rcl
xorl
testb
mov
in
mov
out
push
cwtl
sub
mov
mov
stos
sbb
iret
add
push
add
aad
xor
icebp
test
pusha
gs
mov
rolb
mov
xchg
cld
popf
test
outsb
lahf
xchg
enter
mov
jo
repnz
das
stc
mov
icebp
in
mov
cmp
loope
addl
test
and
add
add
push
ss
add
cmc
jl
rolb
fadds
pop
and
ja
faddl
xor
push
mov
pop
bound
clc
pop
scas
movsl
mov
dec
xor
fbld
in
push
push
lahf
iret
jae
xchg
add
mov
into
xor
mov
push
loop
loopne
gs
cmp
pop
jmp
insl
out
lods
repz
sub
add
sub
sbb
mov
daa
push
push
js
cmp
popa
lods
cmpsb
jns
and
dec
sarl
int
cmpb
pusha
jl
aaa
mov
adc
add
leave
cs
fldl
dec
lret
or
arpl
mov
insl
cwtl
loope
mov
movq
div
inc
je
push
aad
add
push
cmpsb
in
dec
rcrb
jns
cmpsl
jge
enter
dec
mov
nop
lods
jne
mov
xor
lret
adc
push
add
fldcw
mov
test
enter
adc
mov
in
mov
push
jge
loopne
inc
clc
je
push
push
pop
scas
out
pop
jecxz
jecxz
scas
nop
scas
sbb
nop
out
sbbl
icebp
iret
outsb
sbb
inc
ja
ljmp
pop
ss
add
fmuls
add
popf
adc
push
or
mov
mov
sbb
xchg
loop
pop
cld
inc
aad
aam
clc
and
leave
sbb
add
mov
push
scas
and
pop
cmpsl
pop
aas
pop
mov
add
outsb
icebp
jb
and
and
stos
add
lock
sbb
je
ds
sub
jl,pn
jmp
add
es
pop
push
inc
gs
lods
mov
mov
movsb
repnz
cmp
xchg
test
adcl
lods
mov
push
add
sbbb
cmp
dec
add
stos
clc
pop
push
lcall
mov
imul
ss
mov
mov
sti
sahf
test
es
mov
and
push
gs
add
add
dec
lds
into
shrl
int3
outsb
sub
push
dec
insb
cmp
push
push
xchg
sub
fnstcw
dec
loop
ret
cmpsb
xorb
cmc
nop
out
mov
push
xchg
or
in
pop
mov
inc
scas
and
push
fst
fadds
add
mov
push
data16
dec
mov
fstps
xchg
jp
mov
inc
fldenv
fnstcw
daa
inc
inc
cmp
sti
fsubrp
sub
mov
sub
mov
out
inc
cmp
lods
imul
inc
jmp
dec
bswap
dec
imul
cmp
insb
jle
mov
mov
das
jg
lahf
and
xchg
or
pop
rorl
shr
in
cmp
sub
ds
aaa
push
dec
dec
sub
pop
xor
mov
arpl
xor
cli
xchg
adc
fldt
jecxz
stos
adc
and
jnp
inc
jb
out
rcrl
ljmp
insl
rcrb
cmp
push
inc
js
pop
shrb
xor
mov
or
and
dec
add
sbbb
fisubl
rcrb
dec
or
mov
mov
mov
pop
sbb
test
jle
xlat
inc
push
cmp
jno
in
rcrl
fs
lods
mov
sbb
testl
push
imul
dec
sarl
adc
mov
cmpsb
js
jno
jle
sub
mov
push
pop
push
in
popf
cs
out
in
adc
imul
adc
cmpsb
xchg
sbb
jl
mov
cli
cmp
mov
or
mov
xchg
shll
loope
add
clc
push
sbb
in
push
aaa
jg
inc
lock
sbb
and
push
sub
lret
lea
add
imul
jbe
mov
dec
cmc
adc
and
orl
shl
push
add
adc
mov
mov
int
outsl
out
add
rclb
mov
mov
sub
or
mov
std
out
cli
jmp
fnsave
xchg
jne
loop
shll
push
ret
pop
add
mov
mov
mov
lcall
and
out
pop
repz
pop
jns
mov
int
jecxz
mov
int
pop
push
ficompl
jne
scas
push
adc
cmp
into
popa
mov
pop
aad
lods
add
or
dec
fsubrs
aam
mov
xor
dec
add
mov
adc
fucom
fs
shll
fsubl
jg
insb
pop
out
outsb
jecxz
aaa
outsl
sbb
jnp
int
dec
cmp
pop
sub
fptan
sub
pop
pop
subb
sub
mov
xor
sbb
xor
mov
mov
xchg
fcomp
xor
idivl
add
adc
js
mov
in
outsl
sbb
or
add
pop
inc
pushf
stos
mov
pop
mov
mov
lea
xor
pop
shlb
pop
into
push
insb
jnp
aam
cmc
add
jp
mov
mov
cli
bsf
add
cmp
std
jae
and
xchg
stc
sub
pop
filds
out
outsl
dec
and
ret
inc
jns
push
or
or
mov
or
lea
lea
repnz
int
xchg
ja
mov
sbb
dec
mov
fnstcw
xchg
scas
arpl
outsl
or
imulb
stos
lods
stc
in
negl
xor
jns
cmp
repz
fmuls
aam
mov
pop
push
cli
addb
sbb
cmp
mov
fisubl
and
or
jo
sbb
mov
pop
adc
mov
shlb
add
push
add
shll
mov
xor
adc
sub
out
idivl
mov
mov
push
out
pop
push
inc
es
maxps
pushl
leave
insl
loopnew
ficoml
inc
push
xchg
das
cmp
push
jns
mov
mov
aam
xor
xchg
imul
addr16
add
lea
ret
lahf
cltd
mov
fs
mov
sub
xor
mov
fucomi
mov
movsl
sub
jb
sub
test
lods
aas
lods
test
ja
imul
push
pop
lds
inc
or
xor
push
push
icebp
sbb
inc
cli
push
addr16
mov
sbb
ret
push
push
insb
mov
pushf
push
push
lea
push
add
subl
aaa
clc
mov
inc
cmp
in
or
adc
jb
mov
mov
in
ficomps
lcall
lock
xchg
sub
loope
dec
aaa
mov
scas
mov
xor
jmp
test
or
xchg
movsl
mov
mov
out
sub
push
into
loope
js
js
mov
rorb
cld
jp
mov
fisttpl
fwait
or
mov
fisubs
loopne
xchg
pop
testb
or
mov
lret
into
outsb
fcomip
cwtl
stos
lcall
dec
fucom
push
pop
cmp
stc
cli
pop
jbe
xor
mull
inc
ja
jne
popf
push
mov
mov
xchg
int
femms
fdiv
in
fcmovnu
bound
movsb
lds
jmp
rcrb
cmp
cwtl
mov
pop
or
fcompl
adc
cmp
or
push
icebp
outsb
in
insb
pop
bound
jbe
or
jnp
jmp
mov
add
lea
push
mov
fldl
addb
ret
sub
push
and
push
and
xchg
add
gs
cmp
add
jecxz
mov
imul
jecxz
pop
jmp
pop
negl
nop
jmp
mov
ret
adc
and
sub
xchg
dec
adc
je
jmp
pop
popf
cltd
popf
cwtl
cmp
fisubs
cmc
roll
adc
push
and
scas
test
jecxz
mov
nop
aaa
add
or
and
loope
mov
adcb
hlt
push
test
adc
stos
pop
add
int3
jno
stos
andps
pusha
cmp
fisubrs
cmpsl
mov
insl
mov
dec
call
movsl
xor
shll
cmpsl
dec
xor
or
push
sbb
xchg
and
dec
in
inc
push
leave
xchg
pop
mov
mov
fcoml
sarl
push
scas
jp
adc
jo
js
test
loope
out
outsl
adc
dec
test
pop
imul
mov
out
sub
mov
lock
sbb
cs
fistpll
mov
mov
push
adc
cmp
sub
push
cmp
lret
cli
and
into
rcrl
cmpsl
pop
adc
and
pusha
pushf
push
movsb
out
in
scas
push
xchg
mov
fsts
imul
mov
rcrb
xchg
roll
pushf
and
clc
test
imul
cs
aaa
lds
loop
inc
pop
aad
mov
or
jb
in
dec
push
loopne
push
and
pop
mov
xor
mov
test
addb
cmp
arpl
pop
shrl
push
push
push
arpl
pop
out
adc
mov
and
sbb
xchg
rcrb
xchg
stos
and
in
pushf
xchg
cmc
pop
and
mov
dec
pop
add
fwait
inc
stos
lcall
fdivrl
and
jns
paddsw
or
and
push
push
xacquire
data16
jg
imul
cmpsb
in
ficompl
popa
cmpsl
mov
xchg
xchg
sti
xchg
ret
je
int
xchg
dec
loopne
push
inc
add
lea
test
repz
inc
mov
in
push
movsl
out
fdiv
adc
sbb
int
clc
cltd
add
in
loope
cmp
jmp
sbbl
or
mov
mov
cmpsb
sub
and
ljmp
or
aam
adc
jns
sub
xchg
filds
lds
bound
sbb
into
in
sbb
sarb
xchg
negb
sbb
addr16
inc
xorb
rcrl
aam
mov
add
scas
dec
mov
fisttps
sbb
addr16
inc
push
sub
loope
push
dec
sti
das
ds
mov
andl
jne
adc
rorb
arpl
xchg
pop
popa
xor
ret
in
shll
cltd
mov
daa
dec
inc
lret
mov
xchg
sub
cmp
xchg
inc
daa
or
movb
fs
aad
mov
jb
mov
fwait
enter
sub
dec
adc
push
dec
and
cmc
popf
inc
iret
test
ss
sbb
and
ss
mov
lret
pop
cmpsl
scas
cmp
cmpsb
push
adc
cmp
out
and
xchg
out
cmpsb
dec
push
push
push
push
lcall
arpl
insl
repnz
xchg
sahf
add
pop
insb
fnsetpm(287
fdivs
pop
cmp
jl
xchg
push
push
push
ljmp
xchg
sbb
mov
xor
fdivrs
push
jne
push
pop
jl
stos
jnp
adc
leave
fcomps
or
imul
sti
mov
stos
jmp
add
les
icebp
aam
fistpll
cld
orb
mov
adc
jmp
and
xor
dec
icebp
cli
pop
mov
push
pop
test
roll
add
jl
fimuls
adc
adc
leave
hlt
jge
sarl
cmp
stos
cltd
mov
xlat
scas
dec
adc
jmp
in
and
fs
sbb
mov
pop
pusha
xor
in
and
stc
stos
xchg
sahf
mov
orl
shll
jg
push
mov
xchg
cmp
and
clc
xor
test
cmp
or
dec
es
push
xor
lods
into
push
or
pop
xchg
mov
jp
cld
dec
xlat
or
in
jmp
xchg
cmp
push
popa
scas
lods
jmp
or
push
adc
adcl
ljmp
jl
out
push
sti
cmp
push
push
mov
dec
mov
inc
lds
cli
pop
movsb
ret
repz
jnp
adc
mov
mov
ss
mov
psllw
dec
ret
or
in
mov
push
dec
fisttpl
rolb
or
out
sbb
xor
xor
test
movsl
shl
mov
hlt
xchg
pop
enter
sub
fisubrs
dec
outsl
rcrl
pause
rcr
popf
fwait
sub
les
xor
add
lret
addb
stos
mov
fst
aad
mov
sbb
outsb
shrb
loop
clc
das
push
or
mov
adc
mov
inc
jecxz
in
mov
das
fdivrs
jge
ret
or
jne
enter
cmc
pop
adc
int
mov
cwtl
xor
jbe
push
call
loopne
ret
fisttps
sub
mov
sar
pusha
insb
test
push
icebp
inc
mov
push
and
sub
shll
jnp
icebp
fbstp
inc
gs
jnp
aas
test
inc
test
add
movsb
lock
nop
dec
adc
pop
sbb
push
loopne
ja
cmc
dec
lods
jb
xor
jnp
mov
pop
sub
addr16
sub
arpl
pop
push
loope
stos
adc
incl
xchg
xchg
mov
dec
stos
ffree
imul
aaa
inc
jecxz
pop
setne
mov
je
mov
rolb
or
aaa
hlt
loope
cltd
roll
or
rclb
pop
add
mov
sbb
jecxz
ljmp
movb
outsb
mov
pop
pop
adc
or
and
lods
mov
loop
loope
mov
push
push
jne
xchg
mov
hlt
push
push
dec
into
cli
pop
jl
mov
dec
add
adc
aam
cmpsl
mov
sub
jbe
push
mov
adc
jbe
mov
gs
div
hlt
movsb
mov
inc
xor
scas
mov
xchg
arpl
sub
sbb
mov
sub
ret
negb
push
xor
jno
cmp
in
dec
incl
test
hlt
cmp
call
inc
faddl
mov
mov
popl
mov
mov
cmp
jne
out
xchg
sbb
enter
arpl
pop
fildl
out
or
mov
dec
mov
push
ror
pushw
repnz
pmaxub
daa
test
gs
fdivrl
sub
or
jle
clc
aas
insb
and
xor
mov
movsb
sub
push
ret
push
stos
scas
sub
mov
mov
iret
xchg
adc
lea
movsb
pop
and
lcall
xchg
jge
and
in
mov
cld
dec
xchg
nop
mov
mov
in
hlt
inc
stc
in
mov
shll
clc
mov
pop
sub
loope
ds
xor
and
sbbb
stos
mov
test
loopne
js
dec
mov
and
fwait
sub
orb
mov
cmp
test
sub
jecxz
inc
fstpl
push
dec
icebp
xchg
in
jg
fdivrl
push
mov
add
les
sub
lahf
or
fcoms
jp
in
test
adcl
mov
mov
inc
inc
loope
or
lret
push
jp
xchg
clc
xor
jp
pop
pusha
mov
sub
mov
cmc
jnp
mov
enter
jbe
dec
jge
outsl
mov
in
out
aam
movsl
mov
dec
cld
jne
mov
or
scas
std
adc
xchg
fnsetpm(287
icebp
xor
das
cmpsl
test
fwait
sub
inc
xchg
xorb
adc
xor
or
adc
out
dec
fs
fnstsw
out
dec
pop
push
ja
adc
inc
jnp
inc
fmull
sti
fiaddl
and
hlt
cmp
or
push
shrb
adc
les
sub
cmc
leave
xchg
xor
iret
les
cmp
mov
and
sbb
and
mov
ret
aaa
mov
or
pop
sub
push
mov
dec
icebp
mov
loope
cmp
iret
jmp
xor
comiss
xchg
movsb
rcll
or
scas
imul
pushl
sbb
ror
adc
dec
dec
xlat
add
jp
sub
jne
faddl
jmp
scas
or
push
mov
adc
pop
add
adc
cvtps2pi
flds
add
push
rcrb
cmpsb
mull
lret
jns
sbb
xor
adc
lods
jg
xor
push
popa
cmp
mov
lock
jne
notb
cmp
mov
test
lcall
test
cmpsl
sub
iret
push
or
fwait
test
add
pop
push
test
xlat
test
xlat
outsb
jno,pn
mov
arpl
incb
xchg
les
pop
xor
pop
loop
inc
std
shl
jl
cmp
jecxz
and
mov
cld
mulb
mov
push
xor
stos
adc
fisubs
xor
push
cmp
mov
mov
cmp
nop
jbe
loopne
mov
push
ja
sbb
pusha
cld
adc
daa
data16
jnp
sub
bound
fldcw
fcomi
inc
bound
add
ret
scas
dec
push
lds
nop
mov
cmp
mov
mov
into
clc
or
mov
xor
adc
mov
lock
adc
and
inc
jmp
push
push
xchg
loope
daa
rorl
xchg
fwait
icebp
jmp
sbb
test
or
aaa
int
cs
or
push
jo
int3
pop
cli
mov
call
gs
jmp
pop
mov
notl
mov
xlat
popf
popf
sub
cmp
jg
das
jo
push
inc
bound
sub
inc
sub
and
xor
xorb
add
jae
mov
lret
xlat
call
into
jp
fcoml
movsb
lods
and
jns
mov
xchg
iret
sub
sti
dec
movsb
push
loop
xor
mov
pop
dec
and
fcoml
lea
lock
cmp
xchg
into
fldl
mov
lea
lret
cmp
outsl
sbb
inc
mov
sbb
xchg
mov
fisttps
cs
sbb
lahf
dec
inc
dec
or
rorb
cmpsb
cmpsb
sbb
je
lcall
xlat
movsl
add
push
jb
and
subb
adc
test
cmc
mov
sub
and
lods
jb
bnd
jecxz
int3
adc
cli
adc
push
fnsave
shrb
mov
jo
pop
jne
sub
mov
dec
sub
inc
clc
pushw
int
sbb
test
pop
in
imul
insb
xor
mov
dec
stos
inc
sahf
adc
in
das
cmpsl
mov
aaa
add
in
jnp
adc
addr16
mov
lds
mov
pop
scas
xor
mov
adc
inc
xchg
pop
hlt
ret
je
mov
mov
jmp
or
cmp
adc
idivl
lds
rcll
or
push
push
mov
or
imul
add
pop
imul
pop
repz
cmp
pop
repnz
test
adc
sarb
ljmp
jmp
insb
scas
arpl
mov
negl
jbe
pop
sbb
faddl
adc
jne
inc
pop
pop
fldt
xchg
jb
cmp
mov
push
mov
cmp
lods
pop
add
lret
pop
jl
cmp
push
sbb
or
jbe
aaa
sbb
enter
loop
or
and
gs
ss
ja
cltd
jg
fs
jmp
cmpsl
stc
fisubrl
add
pop
sbb
icebp
mov
dec
movsb
pusha
fiaddl
cmpsb
or
sbb
dec
cmp
mov
xor
mov
icebp
jp
out
xchg
jns
jmp
icebp
xchg
outsl
xchg
mov
insb
in
and
xor
mov
jecxz
jecxz
mov
xchg
push
push
inc
out
mov
mov
ja
mov
and
enter
inc
mov
addr16
insl
data16
push
pop
loop
mov
jb
aad
movsl
sbb
repnz
or
cmc
lods
xlat
mov
dec
and
pop
push
jmp
pop
mov
pop
sbb
or
test
and
mov
imul
cmp
xchg
inc
jne
mov
shrl
loopne
xlat
cmp
dec
outsl
iret
ffreep
rolb
stos
sbb
adc
add
dec
test
lret
or
jbe
sbb
inc
mov
cli
or
je
cli
xchg
ror
test
jmp
test
scas
loop
and
xchg
mov
dec
test
fdivr
pop
jmp
shrl
data16
cmp
add
adc
and
lahf
jmp
in
inc
scas
xlat
pop
shll
mull
mov
push
aas
fld
repnz
or
and
jnp
fistl
inc
lock
jp
bound
bound
xor
cltd
cmp
test
inc
int
ds
dec
jmp
roll
imul
in
push
fs
or
mov
loopne
outsb
add
push
dec
outsl
in
mov
jecxz
je
add
ficompl
xchg
jne
jle,pt
dec
or
icebp
ficoms
cwtl
and
cmp
lock
xchg
sbb
repnz
int
decl
test
mov
lret
mov
xchg
jmp
test
out
scas
push
mov
and
cld
gs
xor
cmc
jno
cltd
pop
push
out
ss
xor
pop
mov
hlt
imul
nop
xor
jns
lcall
mov
and
dec
push
push
out
dec
mov
loop
ljmp
iret
je
add
mov
andl
loopne
outsl
ficoms
ss
mov
sub
jbe
das
adc
mov
sub
push
sub
int
mov
push
add
movsb
dec
sub
movmskps
cwtl
sub
fcoms
dec
fs
push
push
and
xor
sub
sbb
jnp
aaa
pop
sbb
cltd
xor
jb
cltd
mov
push
shrl
jmp
sub
sti
xchg
adc
and
add
fstpl
fists
push
sub
xchg
rorl
fimull
cwtl
pop
aam
jecxz
adc
cmpsl
xor
test
jb
test
jle
iret
mov
pop
mov
sti
rolb
mov
daa
aas
mov
mov
mov
mov
imul
mov
jae
push
cmpsb
adc
dec
imul
lods
stc
sub
shl
push
popf
stc
rorb
push
pop
addr16
bnd
and
sahf
aad
cmp
movsl
xor
scas
xor
rcrb
mov
addr16
mov
cwtl
adc
cmc
jo
lock
sbb
fdivrs
cmp
pop
sub
insl
int3
loopne
mov
rcrb
mov
aad
push
fdivl
sbb
pusha
cmp
or
adc
ror
lret
pushf
je
jae
xor
jns
xlat
or
shl
dec
out
lds
jle
mov
jp
outsb
pop
sbb
addr16
lods
fildll
sbb
fstpl
cmp
sarb
xor
cmp
push
dec
and
sub
jmp
loopne
or
cmpl
dec
data16
push
test
or
pop
std
fidivs
out
stos
mov
les
lret
lret
inc
cmp
add
mov
test
jmp
pop
rorb
push
lock
xchg
imul
dec
jns
stc
inc
mov
jle
cmp
pop
add
xlat
imul
popf
aaa
push
jbe
fdivl
adc
pop
clc
jge
fmuls
pop
mov
insl
inc
fs
xchg
inc
movsl
lea
cltd
lea
fisttpl
pop
push
mov
ficoms
daa
test
sbb
ljmp
test
sbbl
push
call
popa
cmp
mov
outsb
mov
xor
add
mov
jge
jl
xor
out
imul
dec
mov
sub
jbe
outsl
adc
jnp
inc
inc
push
sub
clc
das
mov
cmpl
data16
in
stos
xchg
popf
sbb
xchg
cltd
or
outsb
into
cwtl
es
cmpsb
push
sub
and
xchg
stos
add
xor
imul
movq
pop
inc
fcomip
cmp
ss
je
pop
pop
mov
inc
and
flds
add
sbb
enter
dec
popa
xchg
cmp
aad
push
adcl
inc
test
stos
jmp
jnp
jnp
mov
pop
ss
lea
add
xchg
cmp
xchg
dec
mov
js
mov
data16
mov
aas
loop
cltd
fs
nop
loop
mov
dec
faddl
push
jmp
cmp
out
adc
loope
repz
test
sub
push
cmp
test
popf
ret
out
pop
cmp
cmp
fs
push
icebp
mov
inc
cwtl
ret
movsb
mov
test
xchg
add
popf
ljmp
je
aas
clc
fcmovbe
sub
int
mov
fnstcw
adc
int
in
xchg
rcrb
movsb
clc
sub
push
mov
sbb
pop
sub
lretw
pushf
out
xor
mov
subl
or
adc
aam
pop
scas
popa
es
insl
std
popa
test
xchg
ror
push
push
out
lock
loopne
movsl
or
mov
add
stos
into
push
lds
xchg
nop
lods
cmpb
sub
scas
adc
shrl
jb
lret
aad
sub
inc
loope
lods
push
scas
push
pop
xlat
sbb
insl
or
mov
push
lock
cmp
adc
adc
fistps
adc
repz
add
fists
sub
sub
pop
sbb
mov
and
jmp
clc
cmp
push
fmul
sub
jp
rdpmc
inc
es
mov
in
fs
xchg
jb
xchg
adc
mov
test
push
jl
imul
lds
in
xor
popf
test
sahf
sbbb
out
mov
add
repz
mov
lods
mov
or
mov
pop
sub
lret
lds
pop
ja
add
clc
inc
mov
xor
loope
lds
lret
or
push
mov
out
popa
shl
sub
xor
arpl
jno
je
adc
pop
test
dec
xor
ss
dec
and
je
mov
inc
or
inc
icebp
adc
insb
mov
inc
sub
in
outsl
fildll
mov
dec
inc
inc
pop
xor
test
lret
push
rcrl
mov
mov
add
aaa
adc
dec
sbb
mov
lods
paddb
push
push
adc
mov
inc
inc
jle
xchg
or
cmp
mov
push
xor
sbb
and
movswl
fcoml
mov
popf
loopne
ja
push
cmpsl
sti
fcompl
xor
js
push
ja
push
fdivrl
push
mov
stos
inc
add
clc
mov
adc
lods
lcall
call
pushf
mov
push
xchg
bound
imul
push
mov
xchg
jb
popf
xor
add
mov
xchg
xor
aaa
imull
aam
fsubrl
enter
sbb
jno
pop
dec
jg
mov
push
or
xchg
in
orl
je
mov
lods
mov
in
enter
adc
lock
arpl
inc
enter
int3
inc
cmp
lock
cld
stc
adc
scas
mov
xlat
inc
xor
push
loop
andl
jl
xchg
orb
cmp
test
mov
ss
mov
fdivrs
cmp
cltd
jle
pop
je
rcll
aam
or
cmp
test
filds
popa
cmpsl
inc
leave
sbb
inc
dec
pop
sbb
inc
inc
mov
xchg
test
loop
ret
and
ficoms
sbb
xchg
stos
nop
ss
xchg
aam
sar
inc
out
pop
dec
jg
inc
sti
stc
mov
cld
sarl
in
cs
xchg
das
cmc
jb
mov
cs
inc
fmuls
push
shlb
push
dec
inc
stos
or
and
clc
xchg
sbb
insb
cmpsb
leave
rclb
je
aad
jmp
xor
loop
sbb
aas
int
out
test
scas
loopne
stc
loope
and
lret
push
repnz
das
daa
fsubrs
cmp
addl
orl
stc
dec
cmpb
insb
mov
mov
add
push
mov
xchg
into
sbb
dec
jnp
dec
es
sbb
add
sbbl
jno
xor
dec
adc
push
test
lods
int3
xor
or
xlat
sub
lds
aaa
pop
cmp
xchg
ljmp
and
rcl
and
out
shlb
lock
sti
mov
cmp
das
push
mov
adc
std
mov
movsb
dec
and
cmpsb
xchg
stc
pop
xor
jmp
xchg
or
stos
loope
in
mov
jnp
ljmp
into
lea
pop
pop
jge
or
ss
sub
add
lods
imull
sub
push
fiadds
fistl
push
pop
jo
xor
push
pop
call
imul
data16
fildll
jae
xchg
in
mov
adc
pop
xor
mov
ss
sub
loopne
js
scas
mov
push
flds
xor
das
ds
mov
cli
inc
push
cmpsl
inc
or
push
or
stc
dec
and
push
addr16
pop
pop
adc
mov
xchg
mov
push
pushf
int
push
pop
stc
cmpsl
mov
push
xlat
pop
xor
push
dec
add
in
jo
fwait
dec
sub
and
xor
int3
cwtl
jge
aas
repz
cmp
ds
mov
mov
fstpt
jmp
ficomps
jnp
lods
pop
xor
or
outsb
xor
and
in
sti
loopne
adc
pcmpeqw
out
jae
mov
sahf
das
jnp
lods
ja
or
ret
or
add
push
cmp
push
inc
movsl
and
into
scas
or
jnp
adc
mov
pop
and
sti
xor
movsl
cmp
std
cmp
jmp
jmp
es
adc
xor
std
sub
hlt
push
pop
outsb
in
jno
fcoms
addps
pop
sbb
test
cmc
aam
cli
pop
mov
pop
call
dec
cmp
sahf
imull
fdivs
add
js
xor
stc
sbb
jmp
aad
int3
mov
lods
rorb
repz
inc
push
push
pop
ret
leave
imulb
jae
jl
ja
pop
push
fbld
ja
mov
mov
lods
dec
mov
out
jne
sbb
mov
lret
cli
gs
mov
in
ret
pop
mov
xchg
leave
push
jecxz
shl
daa
adc
adc
and
dec
pop
cmp
jmp
rolb
mov
cmp
stc
lods
lret
lret
leave
enter
jnp
dec
mov
pop
jle
out
lret
mov
mov
xchg
fcoml
xor
xchg
dec
push
adc
xor
fisttpll
adc
dec
pop
sub
pop
fcoms
cmp
inc
int
ja
je
pop
jnp
add
jmp
mov
dec
ja
fdivs
add
jmp
add
add
sarb
out
std
xor
ja
rorb
fistl
pop
fucomp
dec
stos
repz
lea
mov
xchg
lea
rclb
push
jl
jp
mov
movsl
adc
int
into
or
and
xchg
mov
push
cmp
mov
repnz
xor
mov
cli
jno
clc
inc
mov
sbb
adc
rcl
gs
and
jno
gs
cmp
mov
popf
rorb
dec
mov
push
dec
jnp
jmp
add
mov
mov
outsb
lret
ljmp
js
mov
pop
and
and
ret
mov
cmp
cmpsb
cmp
mov
test
push
enter
mov
das
mov
jae
or
sub
je
loopne
clc
mov
incl
cmova
mov
outsb
daa
cmpsb
sti
mov
mov
pushf
fistps
dec
out
cwtl
jge
mov
roll
or
cltd
jns
lods
cld
dec
and
ljmp
sbb
pop
cmp
nop
add
iret
cmp
sbb
int3
mov
lds
sub
ljmp
rcll
outsl
mov
inc
push
dec
dec
lcallw
imul
pop
addr16
cmp
stos
jg
xor
xchg
outsl
jecxz
xchg
sti
out
dec
and
xchg
jnp
adc
movsl
popa
les
or
repz
insl
cmpsl
filds
jl
pop
jmp
enter
movsl
iret
stos
pop
sahf
push
or
daa
loope
dec
adc
dec
subl
xchg
dec
inc
lock
mov
lods
loope
adc
movsl
adc
or
jo
or
add
arpl
int3
out
jge
iret
or
jmp
loope
sahf
mov
lcall
xlat
pop
pushf
repnz
cmp
mov
push
aad
dec
inc
les
repnz
aaa
cmp
jmp
jmp
lods
lret
bnd
stc
mov
mov
pushf
outsl
mul
or
cli
jae
out
cmpsb
fwait
jl
xorl
push
xor
lock
or
push
lret
push
fdivr
push
in
scas
mov
mov
ljmp
push
push
sub
pop
aas
aas
jle
mov
loopne
mov
out
mov
sbb
mov
loopne
scas
pop
fmulp
adcl
dec
jl
pop
xchg
xlat
ja
das
adc
jmp
xchg
je
pushf
and
adc
cmp
pop
mov
add
shl
mov
pop
push
jo
dec
mov
push
pop
jnp
mov
movsb
push
sub
or
icebp
and
fsts
imul
pop
adc
mov
out
pop
xor
cmc
pop
add
and
push
mov
std
and
orl
adc
test
je
ja
adc
aaa
sub
sti
fcmovne
arpl
out
mov
jbe
xchg
sbb
cmpsb
or
repnz
push
cs
or
loope
test
push
scas
out
shl
or
mov
pop
pop
lahf
sub
pop
dec
sub
lcall
ss
sbb
xorb
sub
mov
dec
outsl
loop
out
clc
jae
add
or
inc
mov
cmpsl
je
mov
sbb
adc
pushf
and
adc
add
mov
push
je
push
arpl
xchg
test
xor
xchg
push
inc
into
push
imul
xorl
idiv
and
sbb
lock
inc
push
mov
pop
or
inc
stos
push
lods
pop
lods
hlt
cmp
or
mov
pop
orb
fsts
cld
and
xlat
lret
nop
adcb
sbb
jge
inc
stos
or
out
push
mov
ret
sub
in
pushf
mov
adc
or
scas
jl
bound
pop
or
mov
repz
imul
xchg
xor
add
add
add
xchg
dec
or
mov
cmpsb
and
jecxz
or
int
dec
inc
add
in
ss
push
adc
imul
push
xlat
pop
dec
lods
inc
mov
test
jp
jns
out
pushf
jno
sbb
test
push
das
jo
mov
inc
out
fwait
jno
sbb
das
or
cmp
hlt
jne
mov
cld
xchg
push
fsubrs
out
mov
mov
and
lods
mov
lret
push
std
adc
mov
xchg
mov
mov
xchg
sub
mov
fucom
adc
adc
loopne
sbb
sub
add
and
mov
test
add
imul
inc
incl
jle
adc
jne
cltd
jg
xchg
insb
jae
inc
mov
fisubl
out
xchg
and
add
cli
and
add
and
push
mov
imul
lds
add
or
add
ficoml
adc
mov
std
mov
popf
sahf
xor
and
rorl
repnz
xchg
repnz
and
adc
inc
ljmp
js
push
data16
push
rcl
pushf
hlt
int3
loopne
mov
orl
lcall
push
popf
dec
call
mov
push
adc
vmread
adc
std
push
jns
mov
movsb
or
sub
arpl
dec
je
outsl
js
fldenv
mov
jae
mov
push
aas
clc
mov
div
sub
div
or
dec
mov
cld
push
out
mov
inc
test
xchg
ja
int3
outsl
das
mov
jmp
inc
adc
push
fadds
in
out
fwait
jl
cmp
mov
inc
rcrl
stos
push
mov
pop
int3
add
repz
iret
les
dec
call
aas
pop
xor
jno
test
in
fisubl
stos
mov
pop
sbb
push
add
pop
pop
loope
cmp
sbb
pusha
xor
insb
dec
sub
lds
add
dec
mov
mov
xchg
push
xor
add
mov
mov
popa
mov
jmp
mov
aas
dec
xor
loopne
pop
testb
daa
jle
ds
or
xorl
xor
popf
or
push
pop
test
sub
bound
pop
std
cmp
or
movsl
jp
and
je
push
xchg
mull
push
lods
in
shl
stos
subl
jge
in
push
xchg
ret
rclb
inc
sti
jl
inc
mov
dec
iret
sub
shrb
in
sub
test
out
add
lods
pop
adc
mov
inc
outsb
inc
xchg
mov
loop
sub
clc
cmpsl
mov
ja
xchg
dec
das
aad
or
inc
xor
insb
jnp
sub
add
xchg
xchg
dec
add
sarl
jmp
jecxz
in
adc
filds
pop
mov
mov
data16
rcl
ja
lock
and
or
xchg
das
push
mov
push
mov
int3
inc
xchg
sbb
ret
addl
sub
stos
cli
cmp
push
mov
sahf
mov
mov
sbb
jge
loopne
test
sarl
test
jge
and
xchg
mov
jl
lea
push
and
cmp
loop
ficoml
movsb
mov
fnstenv
add
mov
mov
xor
das
mov
push
jge
xchg
push
insl
loope
aas
out
jno
ds
push
mov
pop
add
stos
in
cmp
mov
jns
add
xchg
pop
mov
lret
test
or
push
xor
or
out
insl
xchg
lea
imul
adc
inc
insl
loop
adcl
push
adc
mov
js
insl
mov
fsubl
iret
int3
mov
mov
lods
and
int
mov
test
hlt
lahf
xor
mov
dec
call
lods
add
jp
fstpt
mov
fcoms
je
adc
and
xchg
ret
out
push
push
loop
push
movsl
pop
roll
dec
outsl
mov
jne
lods
push
popf
mov
and
in
lcall
adc
pop
jo
ficomps
push
out
pop
and
cmp
fisttpll
sbb
add
clc
xor
add
movsl
mov
inc
jnp
or
mov
arpl
add
cwtl
shll
dec
int3
adc
push
in
pop
jno
jae
and
jecxz
jbe
mov
jne
scas
loop
divb
mov
or
xchg
push
mov
jns
in
push
dec
and
cld
ljmp
in
pop
lods
cmp
les
mov
or
jp
out
dec
cmp
cmpsb
roll
stos
mov
repz
enter
cmp
ud0
out
lret
inc
in
cli
imul
adc
mov
jg
in
mov
loope
scas
jecxz
lret
xchg
adc
mov
jmp
fcmovne
mov
sbb
aam
jg
mov
pop
sub
xchg
packuswb
jge
pop
sub
xchg
mov
jmp
in
jecxz
mov
ljmp
add
mov
in
sub
gs
xor
xor
stos
jbe
ljmp
mov
mov
int
testl
fdivrp
dec
sub
fsts
sbb
push
add
scas
cmp
fs
jg
dec
jg
popf
rcl
add
lret
out
jbe
mov
dec
mov
dec
sub
mov
fwait
mov
ret
pop
mov
sub
xchg
loop
fisttpl
pop
stos
fnstcw
xchg
dec
sbb
loope
shl
adc
cli
call
add
negl
pop
mov
and
push
loop
inc
mov
or
insb
sub
rcrl
lock
fwait
xchg
jl
pop
adc
push
je
pop
and
inc
lahf
sahf
aaa
lcall
into
aas
push
mov
test
mov
mov
test
mov
call
or
mov
sarb
cli
or
into
sbb
jbe
sub
xor
inc
filds
inc
mov
and
aam
rol
mov
xor
xchg
inc
xor
adc
adc
hlt
sub
mov
ss
fwait
outsb
aam
in
arpl
iret
xorb
pusha
fiaddl
movsb
add
es
sti
and
cld
popf
out
fadd
mov
push
pop
test
pop
mov
mov
or
ja
push
cmpsb
sub
dec
xchg
mov
leave
scas
sub
and
mov
jmp
aas
jae
xlat
std
shr
cld
push
sub
loopne
sbb
fwait
pop
mov
outsl
or
test
cmp
xor
out
xchg
cmp
pop
inc
sub
lea
test
xchg
jl
addr16
xor
inc
pop
ret
inc
pop
pop
push
pop
mov
xchg
mov
push
mov
mov
andb
mul
mov
pop
mov
insb
jg
or
flds
idivl
nop
pusha
xchg
std
cwtl
mov
js
mov
mov
pop
adc
push
out
xor
cwtl
sub
jns
iret
loop
out
loopne
pop
inc
repz
dec
mov
js
imul
sbb
mov
pop
sub
test
sti
lock
fnsave
cwtl
pop
adc
test
dec
add
sbb
enter
xchg
or
add
inc
das
inc
xor
repnz
and
es
jmp
mov
cmpb
mov
inc
mov
mov
push
call
push
inc
daa
push
shrb
mov
and
sub
cmp
xchg
inc
pop
cmp
mov
mov
dec
orl
dec
jmp
cmp
sarb
xor
inc
addr16
ds
in
adc
dec
mov
and
or
dec
sub
nop
mov
jne
stc
arpl
mov
repz
sarb
jbe
rolb
pop
int3
adc
xchg
mov
adc
adc
orl
movsb
dec
lds
test
bound
fistpl
push
cltd
pop
sub
jecxz
scas
ljmp
sahf
mov
insb
jno
outsb
mov
inc
outsb
out
ret
js
jns
scas
lea
stc
adc
in
nop
setle
mov
dec
test
and
mov
cmpsl
out
sbb
or
mov
or
faddl
jnp
mov
mov
subb
test
xchg
or
leavew
sahf
pop
imul
mov
leave
xchg
cmpsb
pop
xor
pop
push
jb
cmp
cld
adc
mov
ret
inc
pop
jmp
push
loopne
movsl
push
jo,pt
int3
out
fildll
fsubr
sub
xchg
mov
inc
inc
adcl
add
data16
push
mov
scas
or
dec
cmp
jl
sbb
adc
push
sbb
dec
cmp
adc
and
in
pop
leave
lret
rorl
cltd
mov
dec
hlt
lods
loope
mov
adc
jnp
sbb
mov
popa
dec
sub
inc
insl
lcall
sbb
sub
into
test
or
pop
sub
mov
fsubr
jg
dec
or
push
clc
mov
cmp
and
lret
mov
pop
sbb
rorb
dec
mov
pop
and
push
orl
lret
sahf
not
jmp
cmp
mov
sub
pop
hlt
inc
in
arpl
cs
sbb
int
mov
sub
pop
dec
push
shll
imul
and
arpl
imul
or
jns
xor
lods
out
js
cwtl
mov
dec
mov
icebp
insb
fldenv
push
andb
pop
fcmovb
push
lret
idivb
pop
push
inc
jge
and
ret
and
lret
enter
add
sub
std
mov
push
push
xchg
lret
clc
push
dec
adc
sub
lds
movsb
cmp
loopne
addr16
inc
push
dec
xor
cli
xchg
fbstp
jne
int
xchg
scas
aam
pop
std
hlt
ss
sbb
imul
fcmovbe
dec
pop
jnp
cmp
pop
aam
add
clc
call
cmc
std
or
fdivl
mov
shll
ret
incb
lds
sbb
ret
push
lock
and
ds
jecxz
push
dec
pusha
or
pop
sub
push
packssdw
imul
pushf
jae
sub
push
adc
dec
icebp
xchg
imul
mov
cli
es
dec
ficoml
aad
add
push
jne
popl
mov
mov
mov
xor
adc
repz
iret
xor
push
fldenv
adc
scas
sbb
loop
lahf
movsl
xchg
jns
cmc
sbb
and
icebp
pusha
stc
dec
or
les
out
push
sbb
jecxz
or
cmp
xchg
stos
icebp
push
mov
mov
dec
sbb
jmp
sbb
mov
jo
sbb
dec
popl
xor
cmp
xchg
mov
cs
push
sub
int3
sub
insb
dec
stos
hlt
xor
inc
push
shl
adcb
dec
and
sahf
push
test
mov
popl
push
jl
cld
cwtl
cmp
sub
cmp
inc
das
cld
cwtl
cmp
fmuls
mov
xor
iret
push
ret
xchg
sti
int3
out
and
ja
inc
test
repz
stos
adc
sub
inc
and
jbe
jno
insb
loop
lea
repnz
insl
fidivrl
pop
lods
test
jecxz
dec
pop
shlb
in
add
call
mov
add
movsb
mov
addr16
test
mov
ds
popf
repnz
mov
sbb
and
inc
pusha
aam
xchg
shll
ljmp
outsl
fs
mov
jp
mov
lret
aas
out
cmp
or
push
fldt
scas
xchg
jecxz
push
xor
out
in
adc
subl
adc
mov
add
jns
nop
mov
pop
mov
mov
pop
mov
add
xchg
sarl
mov
add
daa
mull
sub
and
xchg
es
dec
lea
cmpsb
or
lret
jns
lds
jne
fidivs
push
clc
les
xlat
and
inc
scas
push
jns
cmpsb
add
jle
jne
add
mov
mov
pop
out
adc
sbb
dec
jmp
in
sub
int
aas
int
adc
or
xor
mov
adc
xchg
xchg
insl
cld
or
dec
sti
push
adcb
test
push
jl
xor
jo
cmpsl
push
lahf
pop
cmpsl
aaa
xchg
or
and
mov
fs
xchg
mov
dec
mov
insb
sbb
movsl
mov
mov
adcl
xor
xchg
lret
stos
adc
pop
cli
cmp
cli
call
subl
sub
imul
push
ds
cmpsl
das
sub
addr16
ret
pop
cmp
inc
nop
inc
jg
addr16
mov
cs
test
jl
mov
test
lds
and
xlat
push
addr16
stos
cmp
mov
or
cmp
dec
push
das
mov
scas
mov
and
jle
mov
xor
lods
mov
fnstenv
dec
sbb
stos
adc
clc
xorl
mov
mov
fs
or
out
in
stos
cmp
test
push
pop
call
mov
in
lcall
cmc
and
test
dec
leave
or
icebp
lret
inc
push
or
push
or
subl
sub
mov
sbb
sub
pop
jle
mov
outsl
ds
adc
idivl
cmp
sbb
repnz
or
adc
xor
sub
lds
loope
pop
push
stos
test
lock
sbb
aad
jmp
mov
xchg
pop
adc
aam
cmp
aaa
mov
and
std
lods
movb
out
push
dec
addr16
lods
stc
popa
repz
andb
addr16
pop
ds
mov
daa
adc
fwait
add
cmp
jmp
mov
lock
jb
pushf
das
scas
pop
sub
out
mov
mov
xor
out
jbe
lds
mov
xor
movsb
or
and
mov
add
or
scas
mov
clc
test
mov
pop
out
enter
or
cmp
dec
mov
jmp
fs
cltd
rcrl
push
jae
sub
sub
mov
pop
call
fsubrs
sarb
pop
cltd
data16
push
iret
int
addr16
xchg
push
pop
out
push
leave
insb
movsbw
jecxz
pop
clc
fistpl
lods
ret
in
das
movsb
push
in
mov
loope
dec
scas
sub
sub
xchg
sub
lods
lahf
and
dec
sub
aaa
divl
adc
jle
or
out
dec
xchg
scas
lods
xchg
mov
jnp
cwtl
mov
fildl
mov
mov
clc
pushf
sub
iret
or
or
push
pop
jbe
cmp
loope
daa
jecxz
flds
imul
popa
movsb
lret
jmp
testb
bnd
add
mov
mov
mov
cmp
lock
leave
insb
fbstp
femms
adc
cmpsl
or
ret
fcmovu
hlt
sub
imul
aad
push
sub
push
jo
push
add
dec
push
stos
test
or
pop
xor
xor
in
jp
or
popw
push
imul
loop
mov
mov
cmpsl
iret
ja
mov
ret
xchg
xorb
jl
cld
daa
mov
or
je
mov
jnp
jns
xchg
fs
leave
int
push
into
ficompl
push
jns
jb
push
out
lret
mov
std
or
sbbl
pop
add
mov
pusha
mov
je
xchg
mov
repz
sub
push
adc
mov
push
xor
lcall
lods
mov
jbe
adc
inc
dec
xchg
mov
mov
mov
inc
std
jge
out
pop
hlt
mov
dec
out
adc
pop
sbb
icebp
adcb
cmp
sti
cmp
xor
mov
les
popf
mov
push
cmp
cmpb
sub
inc
push
dec
fs
jno
and
xchg
cmc
pop
mov
sbb
in
xor
jne
in
push
popf
shlb
mov
sub
xor
sub
jno
jb
andl
test
jle
and
push
in
iret
mov
push
lds
dec
xor
mov
mov
or
mov
mov
in
bt
or
xchg
jmp
and
jl
loop
movsl
mov
mov
int
ret
dec
add
add
xchg
xchg
xor
mov
test
sbb
sarb
dec
fs
lea
add
orb
jg
rolb
fnstcw
mul
dec
popf
xchg
and
sahf
pop
imul
enter
call
mov
stc
cmp
sbb
mov
lods
xchg
cmp
int
add
xorb
and
xor
xchg
jns
les
cmp
rol
sub
push
jo
int3
cmp
shlb
and
fcompl
jns
add
or
das
lret
mov
into
xchg
or
dec
faddl
fistl
loop
inc
test
cmp
jmp
push
inc
xor
mov
arpl
add
imul
test
mov
mov
xor
jmp
lcall
insb
sbbl
push
mov
jae
outsl
gs
lret
sub
adc
cmp
cmp
insb
sub
testb
jno
add
divl
shll
sbb
mov
push
shrl
lret
push
cmp
pop
push
out
insb
dec
or
sub
dec
or
jns
inc
orb
cli
cs
cmp
sarb
jne
nop
mov
inc
xor
lods
mov
mov
mov
ds
mov
pop
inc
je
ret
fists
stos
repnz
sbb
sub
test
dec
sbb
xchg
in
pop
jecxz
and
pop
scas
cltd
mulb
sbb
push
jne
sahf
mov
iret
pop
or
cmp
out
push
pushf
bnd
jno
sub
mov
sbb
add
mov
add
pop
lock
push
outsb
stos
add
fwait
push
stos
shlb
mov
cmp
mov
subl
int3
std
jmp
mov
popf
cmc
xchg
gs
mov
mov
incl
mov
mov
pop
fdivs
inc
add
adc
rep
and
sub
ljmp
xor
pop
adc
cltd
inc
call
add
add
sahf
sbb
dec
ljmp
xlat
out
xor
loope
outsl
je
mov
mov
loopne
mov
xchg
mov
out
push
aad
in
mov
pop
loope
popf
fcomps
xchg
mov
rcll
mov
and
addr16
addl
add
enter
push
push
lcall
clc
mov
mov
cmp
add
push
mov
jb
aas
mov
sbb
scas
test
mov
stos
movsb
sub
fidivs
fldenv
std
xchg
fcomi
push
adc
xchg
adcl
movsb
test
sbb
mov
test
cltd
jbe
ret
push
push
and
out
dec
rorb
arpl
icebp
icebp
mov
lcall
xchg
negb
lahf
out
ds
pop
fisubl
sub
pop
inc
push
inc
and
xchg
dec
das
mov
or
repnz
andl
jo
scas
inc
repnz
sbb
jbe
and
sbb
xchg
test
sahf
sti
int
sbb
negl
xchg
or
shl
les
sahf
es
mov
jnp,pt
lods
and
pushf
push
fmuls
dec
jbe
push
ret
cmp
inc
rcll
xor
mov
cmp
fildl
test
popaw
push
sub
stos
cmp
sub
test
daa
nop
lahf
aas
xchg
mov
jecxz
push
bound
jp
xchg
adc
psrld
scas
sti
insb
jge
aas
sub
cmpsl
fwait
xor
mov
movsb
test
mov
cltd
cmp
cmp
outsl
aad
dec
movsb
mov
leave
inc
lahf
dec
mov
ss
mov
adc
stos
sub
or
icebp
and
shll
clc
and
push
jecxz
lcall
leave
std
jg
int3
mov
pop
cmpsl
mov
xchg
fidivrl
cmp
dec
jns
stos
cmp
dec
sub
push
fs
data16
or
jp
lock
pop
sub
mov
adc
out
and
push
xchg
dec
inc
xor
mov
popa
lcall
aad
roll
cmp
pop
inc
adcb
ss
pop
cli
adc
jmp
jp
mov
mov
addr16
or
rcrb
outsl
cmp
sbb
gs
out
sti
sti
push
jecxz
jne,pn
adc
sub
mov
jge
mov
mov
adcb
mov
sub
or
xor
push
dec
mov
fs
je
jnp
push
int3
jbe
test
in
dec
loopne
arpl
sub
loope
cltd
sti
sarl
adc
pop
inc
xor
cmpsb
push
jge
cmc
inc
pushf
cwtl
add
movsl
shrl
jge
xor
inc
movsl
jge
sub
lahf
fistps
pop
stc
movsl
sbb
adc
jae
sahf
adc
add
dec
or
push
or
and
push
fsts
cwtl
ja
ret
dec
jo,pn
add
hlt
aad
rolb
lret
adc
stos
jecxz
ds
sub
xorl
fadd
dec
icebp
pop
int3
mov
mov
sub
add
add
stos
pop
cmp
fistpl
out
mov
mov
xchg
inc
cmc
repnz
cmp
mov
test
into
idivl
lods
mov
mov
popa
sbbb
ror
push
aam
adc
nop
adc
or
call
sub
repz
jb
call
rolb
adc
jns
aam
jnp
orl
cmp
outsl
enter
mov
aam
lret
jnp
int
adc
or
add
enter
xchg
incl
add
adc
inc
mov
mov
mov
ljmp
rolb
ja
sbb
jno
xor
shl
fisubrs
mov
pop
enter
jae
xchg
cmpsb
jae
aas
out
or
push
jno
and
xor
js
dec
or
xor
push
pop
lret
enter
dec
cmp
or
sub
movsl
aad
adc
je
push
inc
lea
loope
shll
or
lods
je
pop
lahf
mov
xorb
xor
outsb
push
pop
mov
inc
mov
sub
leave
sbb
int3
aam
pushf
mov
sbb
inc
cltd
mov
jns
outsb
inc
rorl
add
in
mov
jns
in
mov
jge
push
sbb
inc
xchg
outsb
sbb
sbb
mov
enter
cwtl
or
cs
pushf
movd
stos
mov
sub
test
mov
aam
or
lods
sbb
sub
push
sarl
lock
call
mov
lods
mov
mov
xchg
outsl
jl
mov
mov
push
icebp
pop
scas
push
push
inc
and
les
push
mov
add
scas
cmp
sub
xor
dec
dec
out
dec
add
push
sahf
jb
dec
loopne
add
adc
rdmsr
add
int
xchg
sub
cmpsb
in
xchg
loope
sbb
adc
jg
shrb
jmp
xor
aad
pop
mov
xchg
loope
or
repnz
clc
xor
daa
or
lds
rcr
dec
push
notl
or
addr16
mov
andl
sbb
mov
sbb
stc
push
aaa
pop
int3
test
sahf
mov
icebp
push
out
add
mov
pop
mov
jns
fldl
mov
jle
xor
leave
clc
aad
adc
push
sbb
shr
cwtl
stc
pusha
cmp
repz
or
dec
inc
outsb
xor
in
test
test
sbbl
jmp
mulb
push
rcrl
jae
sahf
aam
lret
ljmp
aas
pop
das
push
subb
pop
pushf
loope
or
sbb
shll
insb
stos
lds
test
fidivrs
or
test
negb
bound
out
cmp
out
mull
adcl
cs
and
dec
insl
sahf
xor
int3
scas
push
mov
fnstcw
shlb
adc
mov
add
insl
movsl
jbe
dec
fisttpll
les
push
or
jae
out
imul
push
ljmp
mov
pop
outsl
add
popl
fcoms
push
push
sbb
push
or
mov
push
xlat
movsb
icebp
roll
nop
fs
sarb
imul
pop
outsb
inc
rorl
xor
push
cmpsl
shr
inc
xlat
pushf
mov
repnz
xchg
mov
leave
test
dec
inc
push
ja
and
cld
mov
lret
xchg
pop
pop
dec
inc
pop
lret
jo
aam
jne
dec
jns
inc
xor
lds
cmc
notl
jp
hlt
loopne
aaa
cltd
daa
mov
shrb
inc
adc
aaa
inc
push
xor
lcall
mov
ret
outsl
lret
dec
loop
rcrb
mov
jae
insl
rclb
add
adc
inc
mov
cmp
xchg
outsb
or
imul
pop
dec
rol
ljmp
mov
pushf
imulb
insb
mov
ja
dec
or
ret
mov
jo
ja
lret
test
pushf
cmp
pop
xchg
adc
mov
jle
cmp
call
jecxz
out
and
out
or
rorl
inc
loopne
xchg
and
lods
pop
aas
cwtl
insl
cld
jecxz
repnz
ja
jl
insl
jne
mov
and
mov
test
adc
push
mov
ds
xlat
sub
popf
loop
dec
out
outsb
mov
or
pop
mov
enter
jno
xor
fiadds
mov
dec
cmp
fldl2e
cmp
rcll
cmp
push
fistl
jmp
dec
xchg
adc
mov
movl
leave
frstor
inc
jmp
and
cmp
xor
push
push
in
mov
mov
jo
sbb
stos
mov
hlt
or
adc
adc
in
pop
push
popf
push
pop
mov
or
dec
scas
lcall
je
scas
push
cmp
and
js
aaa
and
test
jbe
sub
stos
cwtl
dec
stc
rcl
xchg
aad
clc
stc
sub
ja
jg
ret
jns
and
popf
and
mov
icebp
lcall
adcb
iret
aad
mov
scas
dec
pusha
rorb
inc
lea
dec
imul
mov
dec
or
cmc
add
sub
adc
ds
mov
clc
shlb
and
repz
adc
sub
rep
adc
test
jg
add
les
loopne
sbb
call
inc
jo
in
inc
gs
or
jnp
mov
pop
scas
push
pop
out
add
sub
add
rolb
outsl
adc
mov
jns
xchg
aas
out
ret
pushf
js
dec
adc
jp
xchg
mov
add
call
in
je
mov
and
xorb
cmc
push
rorl
lret
jne
lock
lret
das
jg
popa
stc
dec
jb
cmp
inc
push
into
mov
std
aam
jp
loope
ret
push
mov
push
popa
lods
outsl
xlat
aas
lret
lahf
out
adc
and
inc
add
fs
fcomip
cmp
inc
mov
mov
clc
mov
cmc
or
ret
and
mov
repnz
inc
jnp
js
jl
lock
incl
xchg
mov
and
mov
lahf
sub
repz
fistps
inc
fimull
js
mov
inc
adc
incl
in
pop
shll
sub
push
subb
enter
jne
cwtl
fbld
enter
outsl
mov
jns
fstl
test
les
dec
pop
mov
xchg
mov
adc
popa
icebp
cvttps2pi
andnps
pop
mov
daa
scas
mov
mov
cmpsb
add
or
sub
jo
xchg
xor
xor
dec
ret
adc
neg
stos
movl
repz
add
pusha
cmp
fisttpll
add
lahf
adc
mov
lock
rcll
jno
pop
push
fldl
out
push
lret
mov
arpl
jg
mov
test
xchg
sub
dec
ja
xlat
insl
stos
push
lods
fadd
sbb
adc
cwtl
scas
std
push
or
popf
jo
or
scas
in
dec
outsb
pop
sub
or
test
cmpsb
adc
and
cmp
dec
loop
std
outsl
movsl
es
cmpsl
loope
mov
mov
sub
lcall
mov
lret
pusha
xchg
cmpsl
cmpsl
out
shll
mov
scas
and
lock
push
ljmp
in
adc
lea
mov
push
pop
mov
mov
cmp
jns
jo
or
push
mov
testb
dec
lock
iret
addb
xchg
outsl
xchg
cmpsb
jo
pop
inc
push
mov
xchg
mov
mov
lea
cmp
push
pop
or
sbb
daa
arpl
ror
lods
xchg
into
xchg
js
insl
lock
mov
mov
out
pop
ljmp
sub
outsb
pushf
inc
cltd
out
pusha
jmp
add
adc
aas
ret
xor
cs
cwtl
inc
test
push
jg
and
mov
jg
test
outsl
fs
sub
dec
cld
dec
push
insl
xchg
add
cmp
mov
cmp
cmp
cmp
and
cmc
fwait
imul
mov
add
or
jle
imul
test
inc
andl
jmp
bound
sbb
xchg
mov
pushf
rcrb
call
mov
mov
ja
jns
sahf
cmp
iret
ss
negb
int3
dec
mov
pushl
js
mov
testb
das
jecxz
ljmp
pop
lret
pop
or
inc
pop
push
push
pop
fcmovu
mov
and
stc
loopne
mov
aad
jle
xor
aad
in
ja
sarb
sbb
ja
adc
pop
jno
jo
jne
data16
jmp
enter
int
andl
mov
cmp
mov
xchg
add
xchg
lods
adc
cli
xor
add
mov
push
push
xor
jge
out
jb
add
rclb
add
scas
inc
pop
jp
pop
in
jg
jg
ja
imul
daa
dec
or
es
stos
xor
mov
jo
or
sbb
decl
and
cmp
iret
ss
leave
rclb
hlt
sbb
jmp
jbe
push
in
cmc
out
mov
sti
ss
mov
or
aas
xchg
sbb
sahf
xor
xchg
xchg
ljmp
leave
fcoml
lds
movsl
leave
adc
jmp
push
addr16
or
sar
ret
cmpsb
cmp
ss
push
ljmp
shrb
icebp
aas
push
add
gs
dec
dec
adc
in
sbbb
lds
je
pusha
shlb
jnp
pusha
imul
inc
arpl
movsb
add
sbb
mov
movsl
mov
ret
ja
or
xor
insb
adcb
inc
pop
push
push
and
fisubs
jbe
dec
call
out
inc
aas
fstpt
jns
mov
shlb
add
in
add
push
dec
mov
and
sub
dec
and
pop
rorl
idivb
xor
mov
fsubp
adc
je
imul
mov
jno
rcl
je
sbb
das
xlat
movsb
insl
mov
jbe
daa
cwtl
in
and
imul
out
into
lea
mov
xor
pop
dec
les
in
stc
enter
mov
xchg
xchg
sub
gs
cmpsb
mov
pop
sbb
gs
sti
dec
cltd
mov
outsl
and
sub
ret
les
loop
loopne
fildl
ja
sub
test
mov
push
pop
scas
outsl
lret
dec
js
mov
push
mov
xchg
pop
jne
mov
mov
rcll
cmp
jnp
and
xchg
mov
push
sbb
mov
out
adc
inc
jl
mov
stos
or
popl
fiaddl
popf
enter
popf
push
cmp
adc
fwait
add
push
in
xor
sub
call
inc
jb
dec
cmpsb
and
mov
and
dec
dec
loope
xor
inc
js
jecxz
mov
stc
or
xchg
dec
xor
and
cmp
and
adc
add
jns
dec
xor
push
push
jg
test
sarb
and
sub
sbb
xchg
out
sarb
cmp
jae
out
inc
dec
push
and
ret
jb
addr16
dec
testl
lock
sbb
push
push
testl
xor
daa
inc
jne
mov
mov
jle
xor
push
mov
jbe
push
mov
pushf
mov
ds
aas
movsb
bound
je
cmpsb
push
in
sbb
jnp
jae
out
lods
in
xorb
sti
test
dec
fs
xchg
cli
ret
sti
popa
mov
add
pop
in
rclb
outsb
and
pushf
imul
lods
pop
gs
fdivrl
pushf
inc
stc
adc
jbe
xchg
jle
mov
leave
inc
popf
gs
loop
dec
pop
jns
repz
or
ljmp
xchg
push
imul
add
add
fcmovnb
shll
lahf
xchg
dec
lahf
jae
mov
outsb
lods
std
lods
and
shlb
inc
sbb
jnp
ja
aas
int3
jmp
pop
dec
adc
stc
add
jmp
jp
arpl
adc
inc
mov
or
test
mov
inc
jae
xchg
aas
pop
data16
outsl
sti
out
and
popf
inc
imul
test
jecxz
inc
jb
mov
mov
imul
test
das
xchg
mov
pop
jmp
adc
bound
fwait
or
sbb
gs
push
das
xchg
and
mov
xchg
inc
sbb
repnz
xor
dec
jnp
test
xchg
mov
ret
push
gs
jno
mov
ss
push
cld
cltd
add
jl
stc
les
addr16
lahf
push
pop
xchg
imul
add
shrl
fldenv
lods
push
std
xchg
aad
inc
or
dec
out
push
ret
inc
test
insb
movsb
inc
pop
sbb
or
jae
popa
push
lods
cmp
sbb
dec
movsb
fwait
and
xchg
mov
jbe
fadds
outsl
inc
pop
repz
ret
or
push
cmc
adc
lret
cltd
cmp
mov
out
and
scas
jnp
mov
ds
mov
xor
fldl
test
mov
sbb
adc
cs
or
cmp
jno
or
dec
cmp
out
les
aad
icebp
pop
mov
mov
test
jge
js
xchg
push
push
aaa
mov
push
pop
sbb
jnp
cmp
xchg
sub
sub
jmp
xor
cmpb
mov
scas
ffreep
mov
push
jnp
mov
jne
jmp
or
pop
and
sbb
es
xlat
and
jns
addr16
in
cmc
inc
notl
inc
lods
pushf
push
scas
and
aad
xchg
push
mov
in
test
and
popa
in
push
pop
lods
jbe
dec
enter
mov
pop
sub
xor
gs
movsb
stos
and
or
jp
dec
add
adc
xor
push
shlb
test
jns
rcrl
and
cmp
jmp
push
cmp
cmp
jg
cmovle
push
cmc
inc
mov
dec
cltd
add
or
mov
rorb
mov
and
fnsave
std
pop
add
nop
das
cld
lods
mov
dec
arpl
addl
clc
xchg
inc
fwait
sbb
out
dec
leave
mov
jne
mov
movsb
sbb
dec
sbb
sub
sub
add
pop
divb
les
dec
je
mov
cmpsb
stos
jecxz
and
xor
js
xchg
mov
icebp
mov
mov
popf
add
das
ljmp
xchg
adc
decb
fsubrp
sbbb
mov
ret
fisttps
cltd
jne
lds
sbb
adc
rorl
and
xlat
jl
out
jmp
xchg
dec
inc
aam
cltd
cltd
fcomi
jp
mov
mov
sbb
or
mov
jmp
or
lahf
mov
daa
push
mov
int
dec
ficomps
inc
rorl
inc
xchg
shll
jne
xchg
ljmp
into
shrb
push
mov
xor
aas
js
jp
inc
fsubrs
mov
or
xchg
and
movsb
rcll
cld
or
lcall
adc
movsl
adc
xor
jne
sbb
xor
stos
movsb
call
cmpsb
mov
shll
iret
insb
jb
test
rolb
fnstsw
loop
int3
jge
push
jmp
pop
jg
shlb
push
xchg
std
mov
or
in
jns
icebp
dec
out
and
push
and
subl
imul
test
in
push
sub
cmp
sbb
push
jb
fsubrs
add
jno
jns
cmc
sbb
insl
jb
aas
lods
mov
lahf
jp
das
lret
jl
movsb
push
stc
jns
pop
iret
ja
ret
ret
xchg
cmp
test
xchg
add
mov
lret
sub
xchg
jl
jle
mov
mov
ja
mov
inc
loopne
in
adc
in
iret
cmp
imul
jl
sbb
cmpsb
xchg
cmp
mov
sbb
add
push
cmp
inc
jae
cmp
add
jnp
lock
mov
addr16
push
dec
fldt
stos
xchg
leave
inc
icebp
dec
ljmp
stc
es
rcll
lods
dec
aam
dec
mov
xchg
jne
cmp
out
iret
shr
sahf
int3
cmp
pop
in
mov
insb
aas
dec
dec
mov
out
scas
aad
push
aaa
stos
lock
pop
jmp
xchg
lds
xor
push
sbb
mov
out
xor
sub
hlt
cmpb
push
push
mov
scas
push
pop
xchg
push
js
aam
lcall
into
push
insb
and
add
adc
aas
or
bound
lcall
fdivr
movsl
pushf
ljmp
imul
push
repz
sbb
inc
leave
popf
cmpsb
inc
mov
mov
testl
pusha
jo
mov
push
inc
sbb
sbbb
mov
xor
in
xor
mov
or
int3
mov
push
insb
loopne
xchg
add
add
lret
ret
pushf
mov
xchg
ss
cmp
xchg
jns
cmp
inc
xchg
mov
enter
mov
loopne
mov
cmp
cmpsl
cwtl
fisttpl
lret
sub
adc
loop
shlb
mov
pusha
imul
mov
mov
jmp
adc
cmc
and
incb
sub
aas
rorl
es
mov
push
adcb
sarb
fsubl
or
push
pushf
or
aaa
loop
loopne
jmp
test
jecxz
aad
stc
jae
std
fwait
inc
fcmove
imul
and
xchg
push
gs
sub
lret
call
lcall
and
pop
rorb
test
mov
pop
push
mov
and
dec
pop
add
pop
pop
inc
mov
dec
lcall
xor
mov
and
jb
xchg
pop
xchg
aas
ficoml
xchg
arpl
outsb
icebp
int
sub
add
mov
jnp
and
mov
ret
scas
int
andl
cli
rorl
sub
add
cs
and
pusha
aas
push
cmp
adc
xchg
push
jae
pusha
in
push
fs
outsb
adc
or
mov
jle
iret
enter
cmp
dec
stc
inc
iret
fs
pushf
inc
loopne
nop
int3
cmpsl
out
push
popf
push
flds
pop
xchg
cs
fstps
cmp
in
loope
ljmp
int3
jecxz
sti
cmpsl
subb
je
push
je
cmpsb
mov
push
jl
lods
cmpsl
push
sbb
and
xchg
and
pushf
std
cmp
fstpl
add
lea
lret
jne
and
in
sub
ljmp
dec
repz
test
aaa
sbb
xchg
pop
or
jg
sub
xchg
in
jp
sub
dec
popa
and
mov
adc
push
ret
cmp
jp
sbb
xchg
push
sbb
loope
rclb
or
outsb
mov
imul
mov
inc
stos
cltd
bound
imul
cmpsl
push
std
aas
ds
addr16
add
sub
adc
adc
into
fdivrp
inc
sub
mov
cmpsb
jno
inc
aad
cli
add
in
js
fnstsw
push
xchg
adc
sbb
dec
adc
hlt
or
or
call
add
fstl
cld
scas
sub
mov
xchg
mov
mov
pop
pop
xchg
mov
mov
jp
call
pop
push
out
inc
cltd
jne
pop
scas
lea
pushf
sbb
or
push
mov
nop
dec
ss
iret
and
cmp
int
bound
add
clc
sahf
push
popf
call
pop
inc
aas
shll
fwait
clc
mov
adc
pushf
sbb
aas
out
aad
pop
sbb
dec
scas
pop
clc
pop
iret
iret
mov
shlb
or
rol
sti
pop
loopne
outsb
xor
iret
in
fwait
mov
and
cmp
cli
sbb
push
pop
jb
in
xchg
dec
inc
lcall
mov
jmp
xacquire
pusha
xor
test
xor
and
in
out
cmp
mov
sbb
push
mov
test
inc
repz
and
fisubl
mov
push
sub
mov
gs
ret
addb
inc
sbb
dec
inc
inc
jmp
dec
xchg
bnd
pop
pop
jle
cmpsl
push
psrld
cmp
lock
fildl
ds
imul
popw
xchg
loopne
inc
testb
and
loope
mov
and
dec
inc
sbb
inc
je
push
inc
mov
daa
sbbb
pop
jle
dec
and
inc
std
ja
dec
sbb
imul
mov
cmp
sbb
popa
loope
or
sub
sub
push
in
enter
add
mov
lods
fldenv
inc
cmpsl
mov
sti
lods
mov
sub
test
mov
frstpm(287
stos
movsb
push
and
push
sbb
xor
mov
int
mov
stc
sbb
enter
loopne
jb
es
push
dec
in
dec
test
or
mov
ja
mov
std
clc
mov
add
insl
in
mov
or
mov
or
dec
dec
ret
stos
leave
loope,pt
xchg
pop
in
adc
fs
ret
es
xchg
test
cwtl
pop
inc
call
leave
and
jge
std
std
stc
sbb
mov
and
cs
xor
aas
cmp
sub
inc
push
xchg
inc
aaa
mov
je
subb
outsl
lea
jb
and
mov
inc
dec
mov
add
inc
sub
jnp
subb
xchg
test
add
add
pushf
push
push
pop
pop
xchg
int3
mov
inc
sub
xor
loope,pn
inc
jno
sub
cmpb
mov
jle
mov
push
fidivrs
jb
xlat
xchg
aam
cmp
lcall
or
cmp
push
and
xorl
or
sub
xchg
fstpl
mov
xchg
xor
mov
loopne
ds
lock
fwait
jle
stc
add
out
adc
into
ds
outsb
sub
lret
ret
push
bswap
mov
inc
and
fsubr
das
sbb
jbe
stos
cmp
in
sub
and
push
adc
pop
inc
mov
mov
xor
push
fbld
pop
add
test
jmp
imul
divb
cmp
mov
mov
jbe
sub
cmp
mov
scas
shll
clc
sub
imull
and
jmp
push
push
mov
jecxz
call
shrb
xchg
sahf
outsl
cmp
aam
popw
popa
xchg
cmp
outsl
out
data16
xor
fwait
xor
fimuls
lods
push
push
fisttps
adc
loope
sub
sub
dec
jmp
sub
into
lcall
bound
mov
dec
popa
xchg
jns
les
cltd
andb
and
iret
jns
scas
push
push
int
fdiv
dec
push
aad
out
fs
pop
sbb
cmpsb
sbb
adc
dec
lds
mov
mov
addr16
stos
mov
std
test
pop
jge
mov
sub
sti
js
hlt
nop
iret
jl
xor
ja
jae
push
sbb
popf
xor
jnp
push
add
sbb
inc
in
stos
outsl
sbb
icebp
jmp
mov
push
push
divl
mov
mov
cmpb
mov
jmp
bound
mov
jmp
jne
sub
ss
cmp
adc
call
push
jno
pop
rorl
aam
push
and
pop
cmp
insl
mov
and
sub
and
pop
mov
add
cmc
push
fwait
xor
jg
mov
and
arpl
pop
mov
jmp
xlat
movsl
cmp
lods
dec
push
es
cmc
in
test
fdivp
push
lea
fildl
jl
pop
out
or
adc
in
in
mov
jmp
lds
into
add
out
mov
inc
push
int3
xchg
popf
rol
ds
pop
sbbl
xlat
fcmovnu
loopne
in
test
sub
mov
lcall
aaa
and
sbb
jl
mov
sub
icebp
mov
fstl
loope
xor
cmp
pop
jp
aas
mov
mov
xor
outsb
pop
in
pop
pop
add
and
lock
call
pop
fwait
data16
xchg
sbb
xchg
xchg
mov
aaa
jg
xchg
cld
push
jl
cmp
inc
ja
fstps
out
js
dec
mov
stos
sub
inc
repz
mov
adc
push
xor
push
mov
fdiv
mov
xchg
test
mov
fs
ds
mov
rcrl
mov
iret
incb
lahf
mov
imul
adc
inc
sahf
stos
in
outsl
push
clc
iret
jp
mov
scas
insb
movsb
out
rcr
ja,pt
inc
dec
xlat
cs
xor
cwtl
outsl
mov
out
adc
test
inc
pusha
jne
xchg
and
pop
jl
stos
pop
sub
jae
pop
aas
ret
lret
mov
std
dec
dec
and
mov
aam
adc
inc
ljmp
test
sahf
lods
rol
jns
cmp
mov
incb
inc
pushl
lock
jmp
gs
inc
or
sbb
int
insl
jmp
cmp
dec
push
jg
jns
jb
and
js
mov
xchg
lret
cmc
sbb
cld
push
sahf
popa
fidivs
mov
fcompl
js
sub
in
ljmp
inc
popa
jb
js
pop
dec
sub
xor
push
add
adc
push
mov
cli
data16
fisttps
es
and
out
lods
cs
lret
pop
cmc
mov
cmpsl
mov
mov
shr
fstpt
mov
push
jle
mov
sbb
or
sub
cli
enter
int
daa
xchg
pusha
ss
adc
xor
adc
jo
aas
in
sub
jne
jmp
xlat
add
push
mov
cmpsl
pop
push
or
add
ret
stos
pop
push
push
lods
sbb
rolb
nop
rolb
loopne
loop
in
out
xor
push
roll
sbb
push
inc
or
inc
mov
or
nop
call
loope
sbb
fiaddl
sbb
mov
add
xor
in
rcrl
bound
cmp
and
cli
pusha
cmp
clc
je
std
cmp
cmp
ret
pushf
pop
cmp
cmp
jp
and
loop
add
test
mov
cwtl
adc
js
and
je
sbb
lret
xchg
xchg
mov
aas
mov
jbe
orb
and
dec
lret
fwait
add
add
lcall
rorl
or
shll
ror
dec
shlb
dec
lahf
pop
push
or
sub
xchg
cld
rclb
cmp
jo
pop
pushfw
movsb
cmp
xor
data16
fs
cli
aad
pop
sub
iret
push
shll
mov
dec
jmp
and
ss
inc
lods
call
lea
out
sub
xchg
sub
dec
out
ljmp
mov
je
aad
push
lods
movsb
mov
mov
cmp
outsb
adc
jl
add
jp
fcmovnb
push
dec
cwtl
jmp
and
std
neg
out
out
lahf
mov
sub
xchg
xor
push
out
leave
scas
sbb
ds
fdivr
out
inc
sub
cwtl
ficomps
add
xlat
out
cmc
orb
and
outsb
lods
sub
shlb
inc
adc
mov
icebp
lods
testl
cmpsb
shlb
ret
jmp
dec
stos
je
std
cmp
es
outsl
mov
jnp
gs
mov
push
mov
clc
pop
leave
hlt
inc
icebp
repnz
xlat
fwait
adc
lea
shlb
icebp
fs
vpcomd
adc
movsl
scas
mov
add
enter
lahf
cmp
insb
dec
or
pusha
out
frstor
push
cmp
pushw
mov
fwait
arpl
dec
icebp
xchg
out
and
push
outsl
lods
imul
adc
jp
test
mov
test
fwait
or
and
popf
jge
mov
test
push
int
mov
jg
ss
subb
pop
negb
xchg
test
and
xchg
stos
int
insl
lahf
mov
jmp
lods
xchg
sbb
mov
sbb
mov
cmp
dec
lods
jecxz
sub
outsb
and
or
mov
addr16
out
out
nop
jg
insl
adc
push
cmp
push
and
shrl
push
push
clc
stc
xchg
lock
pop
and
lds
and
inc
jb
xor
lret
lods
int3
jae
mov
ds
xor
scas
ss
xchg
js
mov
dec
in
xor
imul
add
xchg
fs
movsb
enter
xchg
xchg
xchg
sub
xchg
push
rcll
mov
bound
hlt
ret
scas
lret
add
shrl
stc
or
or
push
add
jg
addb
ja
fs
cmp
stos
mov
or
rcrl
add
sti
or
ret
mov
or
xchg
sti
jno
mov
fisttpl
xor
popf
cmp
mov
mov
cmp
inc
mov
int3
pop
fiaddl
add
lahf
hlt
and
dec
test
adc
jb
shlb
xchg
push
int
std
pop
mov
es
rorb
mov
and
or
adc
pop
dec
sbb
lods
inc
rcll
in
pop
cmpsb
arpl
jno
dec
nop
mov
pushf
or
or
lds
dec
mov
push
pushl
push
jl
xlat
fdivl
and
aaa
xor
lock
inc
inc
movsl
xchg
int
mov
mov
int3
insb
mov
sbb
stos
rclb
pop
and
in
sub
jmp
enter
dec
idiv
mov
daa
add
xchg
scas
outsl
in
inc
stc
gs
or
icebp
and
cmp
ljmp
sbb
ja
pop
pop
add
lock
add
push
mov
hlt
adc
sub
xchg
in
xchg
popf
mov
push
jg
push
inc
adc
pop
jb
sahf
push
xlat
sti
add
adc
loopne
aad
adc
inc
shll
in
sbb
jge
cli
inc
outsb
shrl
icebp
pop
cmc
pop
adc
insb
mov
aas
rcr
dec
xor
cmp
push
mov
jecxz
pop
sub
jno
mov
outsl
sbb
sbb
add
push
leave
adc
jno
push
ja
push
aad
into
popa
out
in
or
int3
sub
cmpsb
xor
jp
jecxz
push
and
scas
lcall
mov
icebp
jns
sbb
fstl
sbb
add
aam
pop
stos
idivb
sbb
loopne
add
and
adc
imul
xchg
sbb
pop
xchg
adc
testl
pusha
popa
mov
pop
cs
repz
sub
int
push
pop
mov
and
subb
sarb
lods
sub
pop
sub
pop
ret
cld
jecxz
add
loop
xor
daa
popl
sti
dec
xchg
lahf
sbb
dec
add
sub
sub
mov
push
subl
je
pop
imul
add
in
cmp
mov
out
ret
negb
aas
dec
adc
ja
xchg
aaa
ljmp
sub
mov
out
and
ret
iret
push
add
sbb
push
lds
in
js
sti
pop
aaa
cmp
pusha
jb
in
daa
sbb
xor
inc
test
aad
in
lret
xchg
clc
mull
mov
testb
sub
xor
mul
cmpsb
pop
nop
sub
test
jb
imul
xchg
in
add
icebp
js
loope
inc
lahf
cmc
popl
xchg
jnp
add
dec
ljmp
xchg
pop
mov
add
ss
sarl
lret
pop
clc
cmpsl
loopne
adc
xor
repnz
pop
mov
push
cmp
jmp
add
sub
push
movsb
sbb
cli
and
jb
sub
stos
mov
push
call
ret
test
jecxz
dec
sahf
adcl
and
aam
jae
xor
mov
lods
mov
cmp
sub
push
push
mov
sbb
cmp
clc
sahf
push
inc
repz
sub
imul
sahf
jecxz
xor
ja
sbb
lahf
jno
push
orl
test
clc
inc
pop
mov
pop
in
inc
inc
cmp
cmc
scas
data16
dec
lcall
push
mov
mull
cmp
inc
movsl
jns
jns
jbe
scas
cli
mov
sub
xchg
ret
and
jecxz
jl
ja
data16
jbe
pop
ds
pop
rcll
sti
mov
data16
adc
sbb
sti
std
sbbb
sarb
pusha
stc
mov
mov
push
mov
aam
insl
lsl
mov
xchg
mov
lahf
adc
je
js
das
adc
movsl
hlt
and
je
mov
mov
push
mov
cmpsb
cs
cs
arpl
sbb
and
cmp
mov
movsl
gs
xchg
icebp
mov
push
mov
push
inc
faddl
jbe
scas
insb
adc
icebp
mov
stc
aaa
mov
mov
adcl
scas
pop
insb
ja
cmp
mov
xchg
data16
inc
push
cs
data16
or
insw
mov
loopne
std
xlat
push
std
std
xor
and
adc
ror
adc
push
push
popf
and
lret
stos
xor
mov
lret
mov
xor
and
push
stos
xchg
push
repz
sbb
jp
push
aad
inc
and
mov
cwtl
fsubl
je
mov
sbb
and
test
test
pop
jbe
aad
and
add
or
sti
mov
sbb
push
mov
insl
jnp
aaa
dec
cltd
sahf
shll
cwtl
scas
popa
rcl
xchg
adc
lret
dec
adc
cmc
cmp
xor
mull
das
sbb
adc
sub
std
stos
pop
les
xlat
sub
aad
and
dec
jne
pusha
inc
pop
fstp
ja
dec
sti
or
xchg
sub
emms
lret
jmp
xchg
jge
sbb
jbe
popf
rcrl
xor
xchg
push
into
push
arpl
cltd
fwait
xchg
jbe
jmp
inc
or
test
adc
mov
add
pop
push
mov
mov
cli
jge
cltd
aaa
imul
imul
xor
adc
push
cmp
cmp
jge
test
or
out
or
in
mov
push
loopne
xlat
or
shrl
lea
mov
cmp
stos
cli
adc
insb
xor
xchg
leave
xchg
and
movsb
xchg
mov
lcall
imul
and
nop
or
stc
add
jle
cmc
cmc
jg
out
or
jmp
inc
push
sti
je
out
inc
push
and
xor
cmp
xor
inc
ds
lret
movsb
mov
clc
inc
sbb
call
dec
inc
out
push
xchg
cs
jb
sub
jle
dec
movsl
insl
call
jns
lds
movsl
mov
push
imul
mov
dec
push
dec
cmp
sub
roll
or
xor
dec
add
pushf
inc
adc
dec
clc
mov
shl
or
or
stc
mov
inc
stc
outsl
jne
mov
push
ja
cmpsl
popf
jbe
inc
xchg
xor
arpl
cs
jmp
cwtl
add
jmp
jl
push
jne
sbb
and
popa
push
push
mov
sub
mov
stos
ret
xor
mov
hlt
cmpl
jo
enter
subl
dec
out
dec
jno
cmpsl
jecxz
iret
andl
push
adc
cmpsl
inc
inc
mov
icebp
pop
fldcw
sbb
fwait
movsl
sub
loop
bound
sub
cmp
jns
mov
sbb
jnp
mov
rolb
fadds
xchg
fnstsw
cmp
stos
in
sub
ja
test
in
ret
dec
add
fndisi(8087
fsubl
rcl
sbb
jns
das
mov
cltd
std
sbb
mov
cmpsl
loope
test
stos
into
aas
addr16
and
int3
mov
out
in
xchg
lret
adc
test
mov
icebp
cmp
nop
push
clts
loopne
es
cmp
mov
out
jge
jno
int
cmp
add
mov
mov
inc
push
jns
fwait
ret
incl
lds
sbb
or
popw
xchg
cltd
stos
lods
std
pop
cld
das
sbb
addr16
gs
xchg
cs
call
imul
xor
in
add
cmp
fldt
clc
mov
lock
sbb
or
fildll
xchg
int3
push
jecxz
pop
data16
mov
notl
push
pop
mov
out
ror
test
lods
mov
pop
push
jns
fcmovu
push
cmpsb
mov
imul
sbb
xchg
jbe
add
outsb
fwait
clc
lea
popf
mov
mov
mov
popf
dec
das
xchg
fdivs
mov
inc
mov
pop
aam
cmp
or
aas
insl
in
mov
mov
movsl
inc
jl
rcr
pop
dec
andl
outsb
adc
ds
std
out
in
loope
xor
ds
xchg
bound
xchg
mov
lods
lcall
stos
jge
jge
pop
mov
outsl
pop
popf
adc
mov
int3
add
and
xchg
dec
and
or
out
mov
jb
push
ret
stos
in
sarb
pop
mov
and
stos
mov
dec
push
pop
xchg
pop
pop
arpl
clc
jl
xlat
sbb
push
sahf
xchg
out
sti
int
test
jle
push
xor
cltd
jne
jne
decb
mov
and
add
mov
or
and
add
aad
or
sub
jl
roll
adc
cmp
jmp
cmp
ucomiss
add
mov
and
je
inc
push
xchg
pop
dec
add
mov
fdivrl
xchg
pop
and
aaa
loope
mov
bound
mov
jmp
jae
jbe
add
mov
fwait
pop
xchg
mov
jne
ret
ret
lods
arpl
pushf
inc
dec
adc
in
mov
aas
ror
adc
dec
jge
cmp
mov
mov
push
mov
loope
negl
sbb
push
icebp
push
lahf
jnp
dec
nop
cmc
mov
out
in
cmp
pop
lahf
jns
pop
inc
adc
daa
mov
outsl
mov
leave
pop
and
jge
sbb
movswl
sub
sub
call
fbstp
xchg
xor
mov
stc
push
lahf
sti
xchg
sbb
cmp
adcl
and
lahf
cmpsb
data16
sub
call
test
orl
xor
dec
and
pop
fwait
or
push
or
mov
mov
mov
cmp
shrb
pusha
leave
push
cmp
scas
movsl
imul
cmp
into
mov
incl
int3
sub
sbb
sbb
in
xchg
dec
or
filds
pop
xor
jnp
xor
mov
jge
mov
insl
mov
scas
adc
mov
das
fistpll
add
pop
callw
xchg
int
or
mov
jg
idivb
rcrl
and
mov
and
movsb
dec
sbb
xchg
pop
pop
dec
std
sub
cmp
jg
sbb
les
mov
dec
insb
test
out
mov
mov
push
inc
ljmp
ss
addr16
sub
paddq
xchg
hlt
int
inc
adc
jl
add
dec
test
adc
mov
cmp
mov
inc
mov
cmp
into
cmp
pushf
stc
push
dec
push
mov
addb
pop
test
lds
scas
test
sub
xor
faddp
lret
cmpsb
ljmp
ljmp
in
sub
and
out
jl
sub
jnp
js
insb
pop
aas
and
inc
jge
in
lods
adc
cmp
or
sbb
movsl
addl
or
std
daa
sub
jnp
popf
cmp
imul
cmc
pop
push
test
dec
mov
pop
addl
loope
mov
in
stos
mov
rcrl
fmuls
rclb
fs
cmp
pop
test
cwtl
sahf
adc
sub
mov
mov
lock
cmp
std
xor
jb
mov
ds
xor
rolb
in
pop
xchg
cld
xchg
add
mov
std
outsb
popf
clc
push
hlt
lea
mov
lcall
insb
pop
mov
pop
fiaddl
inc
icebp
mov
push
sub
pushf
fisubrs
mov
jmp
lret
idivl
movsl
xorl
lcall
dec
rorl
cmp
js
popf
lea
iret
in
js
fdivs
shll
jge
add
scas
sbb
cmp
notb
mov
cmpsl
lcall
pop
lea
push
and
and
xor
int
je
cld
or
cmp
sbb
pop
pop
cmp
repnz
shrl
call
sbb
mov
icebp
rorb
add
inc
lahf
ja
xchg
jg
pop
sti
inc
hlt
dec
pushf
lahf
pop
jae
mov
test
or
addr16
nop
loop
icebp
add
add
push
loopne
mov
or
inc
pop
sub
pop
out
cmc
inc
loopne
xchg
pop
pop
pop
hlt
cld
gs
data16
mov
clc
sbb
fsubp
lahf
daa
jns
and
mulb
cmp
movsb
inc
mov
sbb
pop
inc
mov
mov
push
fldcw
add
dec
das
jl
mov
jl
cmc
jbe
andb
push
mov
mov
xlat
jmp
jp
jns
lahf
inc
pop
ljmp
inc
hlt
or
xchg
rorl
test
and
loopne
sub
ret
add
push
out
inc
cmp
and
add
shll
movsb
and
mov
cmpsl
pop
insb
pop
push
or
inc
pushw
rcll
clc
pop
xor
es
jne
pop
add
pop
jns
cld
add
mov
movsl
scas
mov
out
test
movsl
add
mov
call
pop
in
or
cmp
pop
inc
adc
mov
push
aam
call
std
test
out
outsl
push
cmp
jg
scas
mov
stc
outsb
sbb
dec
sub
lock
cmp
pop
lret
xchg
push
imul
loop
mov
mov
aas
and
lds
fsubrs
mov
loopne
xchg
arpl
ja
push
push
xor
dec
imul
sahf
mov
xchg
mov
and
add
out
out
aaa
mov
pop
rorl
pop
es
add
pop
add
adc
add
or
and
or
loopne
inc
xchg
pop
mov
mov
cmp
insl
jmp
ret
push
ljmp
mov
xchg
idivb
shll
push
loopne
adc
pop
test
and
sub
imul
scas
cmpsl
out
daa
push
mov
imul
or
pusha
add
or
ljmp
and
clc
xchg
cmovs
xchg
ficomps
cmp
movl
sbb
xchg
xor
inc
loopne
push
jo
repnz
or
push
ljmp
jno
pop
aaa
sbb
arpl
inc
lods
repnz
cwtl
xchg
sarl
fwait
out
push
cmp
push
push
mov
cltd
inc
data16
add
lock
mov
imull
or
jmp
push
jle
xchg
cmp
cs
rcrl
jnp
add
xor
xchg
sbb
lret
pop
mov
lret
jl
jmp
jns
ror
shlb
arpl
push
call
mov
pop
add
xchg
mov
clc
sbb
or
mov
sbb
xchg
jnp
mov
pop
cld
sbb
jmp
mov
lods
sarl
aad
push
add
cs
xchg
testl
cmpsb
sub
aam
fwait
xchg
in
sbb
cmc
pushf
call
dec
mov
sub
push
out
cmp
mov
test
mov
mov
out
inc
jge
ja
dec
cmp
aaa
jae
sub
out
mov
enter
inc
cmpsb
adc
mov
dec
insb
cli
sarb
mov
mov
and
dec
movsb
xchg
xor
mov
shll
add
pop
ud1
daa
ljmp
cmpsl
and
push
cltd
mov
jge
jno
cmp
mov
push
std
jecxz
in
sub
sahf
jne
cltd
mov
icebp
cmp
pop
and
sbbl
mov
push
into
in
mov
jecxz
popf
out
mov
leave
and
and
pusha
in
les
jmp
imull
adc
loope
imul
aam
out
fidivrl
out
sub
into
mov
sub
clc
movsb
xchg
pop
roll
lret
mov
jbe
xor
and
push
fidivrs
inc
test
fstpt
xchg
jnp
adc
andl
mov
inc
and
push
jb
lahf
in
rcr
inc
inc
ja
call
fcompl
mov
out
push
or
dec
push
pop
xor
outsb
inc
filds
sub
push
adc
inc
orb
inc
ljmp
rorl
and
jno
cwtl
push
movsb
stos
ljmp
push
je
mov
lret
scas
xor
xchg
iret
lods
in
mov
push
jp
fwait
ss
cs
cmpsl
cmp
popa
sub
jg
jb
or
pop
adc
out
fwait
bnd
repnz
loopne
push
adc
shlb
fs
test
insb
inc
shll
movsb
lock
pop
mov
pop
pushf
mov
cmp
mov
jge
jne
xchg
pop
mov
call
loopne
ss
loope
pusha
sbb
cmp
xor
pop
scas
shll
mov
ljmp
xchg
ficoml
clc
mov
lds
inc
cmp
mov
xchg
xor
rolb
mov
sbb
lret
cmp
xor
and
test
push
push
mov
push
sbb
sbb
repz
mov
ret
mov
pop
movsb
inc
xchg
cmp
mov
sbb
das
shl
sub
mov
push
and
push
jp
pop
fdivrl
or
fwait
adc
inc
xor
addb
repnz
dec
clc
pop
fnsave
adc
jge
movsb
test
sti
jg
insl
inc
pusha
adc
pop
movsb
push
es
rorb
test
inc
mov
call
test
adc
jb
bound
pop
xchg
pop
lret
ljmp
lds
movsb
je
or
lret
lcall
ss
fs
mov
lea
int
shlb
decb
in
lret
push
repz
in
jae
mov
ja
pop
inc
std
ljmp
jle
call
shrb
mov
stc
cld
dec
jae
enter
fisubrl
sub
imul
sub
sti
sub
test
jecxz
sbbl
cltd
mov
xorl
pcmpgtw
iret
cmpsl
das
dec
xchg
std
add
aaa
aad
mov
outsb
bound
pop
xor
inc
std
cli
jmp
mov
mov
xchg
popa
push
out
cmc
sub
ret
jb
xchg
shrl
jmp
pop
loope
mov
loope
sub
mov
or
adc
les
aad
inc
aad
stos
xor
jge
inc
cli
ja
mov
ret
dec
rcll
shlb
push
fisttpl
cmpl
nop
rolb
dec
mov
out
jecxz
sbb
das
push
jns
in
or
adc
xor
je
xlat
and
scas
lea
inc
loope
popa
jb
push
xchg
cmc
inc
sub
push
stc
sbb
mov
int3
mov
sar
and
mov
jmp
or
shrl
test
pusha
test
or
adc
add
or
push
stos
adcb
shlb
push
outsb
sub
mov
pop
fcompl
dec
sbb
add
cmp
push
jne
test
cmp
push
insl
aam
xchg
mov
pop
xchg
push
in
mov
push
pop
fwait
test
and
pop
or
pmulhw
and
notb
scas
in
jns
xor
mov
test
sbb
xchg
sub
adc
dec
lds
mov
aaa
xchg
sbb
add
fsubrl
subb
dec
imul
gs
sub
xchg
mov
js
cmp
dec
add
dec
inc
mov
xorb
aaa
inc
data16
and
xlat
dec
or
jmp
xlat
ss
test
mov
repz
daa
or
pop
movsb
mov
push
or
xchg
jmp
movsb
bound
ret
cs
cmpsl
loopne
fdivs
jg
das
int
ret
nop
pop
cmp
and
cmp
push
xlat
loopne
xchg
push
jg
ljmp
xor
mov
cmp
in
mov
pushf
bound
mov
inc
xor
bnd
inc
pop
pop
and
adc
mov
and
mov
pop
fmul
push
ss
fmull
adc
stc
stos
ljmp
and
adc
pop
out
jo
popa
lahf
gs
imul
and
cltd
and
in
clc
jle
dec
add
jg
sub
push
push
fcompl
int3
mov
sub
xor
stc
cmp
jg
sbbl
mov
lret
mov
sub
push
or
ljmp
enter
sbb
int
add
fcmovne
int3
nop
adc
stos
fsubr
sar
roll
jo
jecxz
inc
fdivrl
loope
inc
pop
pop
jg
push
ss
cmp
adc
into
jb
mov
inc
mov
adc
and
add
xchg
js
pusha
pusha
aas
scas
pushf
lock
and
dec
push
dec
std
mov
pop
xlat
xor
into
push
daa
out
cmpb
repz
dec
mov
loop
call
push
xchg
jmp
rolb
std
mov
or
add
insb
mov
jmp
testl
jg
cmc
lods
daa
bound
movsb
inc
addb
loop
adc
out
icebp
xor
mov
les
addr16
or
icebp
test
cmp
arpl
pop
xlat
mov
add
xlat
test
rorb
and
add
out
inc
dec
imul
push
inc
mov
sub
daa
push
fdivs
push
xor
mov
in
pushf
test
cmp
jecxz
out
cltd
mov
hlt
or
mov
lret
pmulhw
aad
movsl
mov
xchg
fcomp
out
cmp
jno
cmp
jae
mul
adc
mov
mov
sub
and
leave
insb
pop
cmp
lods
xor
pusha
les
jp
cmp
jmp
dec
or
inc
iret
fidivrl
clc
loopne
inc
test
sub
stc
add
scas
rorl
adc
inc
iret
in
mov
jno
sahf
je
cmpsb
fimull
cli
pop
insl
out
pop
mov
pop
mov
test
fimuls
pop
aaa
daa
cmovge
adc
fcmovu
mov
rorb
add
lock
xchg
add
data16
ds
sbb
repnz
sbb
mov
mov
pushf
jbe
ljmp
int3
jmp
in
adc
pusha
sub
adcb
mov
adc
pop
adc
in
jbe
or
sbb
push
jbe
or
fldcw
into
inc
xor
outsb
pop
add
hlt
push
pop
jp
xor
dec
stos
popf
repnz
and
lods
push
scas
daa
das
inc
pop
mov
push
dec
cmpsb
stos
cmp
jmp
ja
xor
or
test
outsb
cltd
lods
xchg
orl
and
iret
push
push
lock
lea
shll
inc
dec
pop
in
push
sbb
xor
aas
filds
xor
mov
mov
mov
add
mov
mov
push
aam
push
fs
mov
clc
mov
jno
xchg
stos
test
add
jb
add
test
xlat
inc
xchg
lcall
xchg
mov
loopne
fidivl
arpl
jecxz
mov
fnstenv
repnz
out
push
notl
jge
xor
addr16
imul
ret
loop
mov
push
inc
jns
adc
lahf
sti
mov
jne
hlt
lahf
ja
inc
cltd
negl
push
stos
int3
pop
xchg
outsb
mov
sbb
cmp
xlat
or
stc
mov
pop
mov
pusha
push
pop
popa
or
dec
mov
out
ds
cmpsl
jns
push
pop
je
int
push
push
adc
hlt
pop
jl
sbb
inc
test
and
add
arpl
lret
mov
sahf
mov
fs
inc
push
mul
mov
pop
outsb
jb
sbb
xchg
adc
ja
push
jo
testb
jp
dec
push
sti
and
mov
mov
andb
inc
jp
sbb
xchg
inc
out
je
jbe
mov
mov
jge
jg
cmp
pop
xor
int3
gs
imul
lret
dec
lea
int3
arpl
xchg
jo
fmul
pusha
jle
mov
sub
pushf
std
mov
into
mov
cmp
rcr
in
insb
mov
push
sub
cmpsl
add
data16
das
inc
pop
pop
adc
faddp
cmpsl
xchg
shll
xchg
inc
shlb
lods
pop
mov
add
mov
xchg
aad
aam
js
dec
sub
in
clc
mov
test
pushf
jp
add
cwtl
mov
repz
cmp
mov
cmp
push
stos
and
loope
xchg
jb
jle
lahf
addr16
lahf
dec
inc
loop
sbb
jecxz
lret
cmp
jnp
mov
adc
cmp
inc
mov
out
idiv
loopne
ret
push
sti
jge
rclb
mov
mull
idivb
xchg
out
mov
pop
lcall
dec
jg
negb
int3
xchg
xchg
js
pushf
ror
rorb
cwtd
aaa
cli
cld
icebp
pushf
fstl
das
lret
and
stc
sbb
sub
loopne
cmp
add
adc
popf
fwait
mov
xchg
shlb
mov
in
jns
push
mov
mov
push
or
std
lret
inc
jle
xor
xor
adc
stc
mov
outsb
push
mov
test
jns
rcrb
test
or
icebp
jmp
lds
mov
stc
stc
inc
pop
inc
fsubs
es
and
bound
outsb
sahf
jne
sahf
pop
subl
lock
fs
and
sbb
push
mov
aam
rorl
lret
mov
pop
xchg
insl
add
rcll
hlt
lret
cmc
es
mov
jle
lds
ljmp
dec
adc
mov
jp
inc
lds
pop
leave
lahf
add
cmpsl
mov
mov
push
add
mov
call
or
sub
test
shrb
inc
add
inc
ret
inc
xchg
std
sbb
sbb
push
jbe
int3
dec
mov
pusha
aam
data16
inc
mov
rcll
cwtl
es
lcall
mov
sbb
or
ss
mov
xor
test
mov
push
inc
xor
push
xchg
pushf
xor
cmp
xlat
dec
mov
imul
pusha
std
xchg
jecxz
add
das
xchg
add
xor
mov
addr16
cmp
aas
mov
add
mov
or
push
sub
xor
aad
call
add
push
jae
out
jns
add
sub
cmpsb
ret
gs
fnstcw
and
mov
stc
and
xchg
mov
in
xchg
sbb
xor
sbb
mov
jecxz
icebp
push
adc
aad
jae
stc
cmc
add
cmpb
fists
cmpsl
or
imul
das
add
jnp
std
negl
sahf
push
mov
dec
ficoms
cmp
cmp
jmp
mov
xor
lcall
mov
das
popa
fidivl
scas
inc
sub
ljmp
inc
lahf
dec
jno
xlat
es
js
inc
iret
adc
jo
cpuid
into
testl
cmpsb
or
into
and
imul
push
mov
hlt
jne
fistpl
mov
dec
js
movsb
mov
adc
stc
jb
cmp
mov
sub
loop
jp
sub
xor
mov
mov
aad
daa
mov
push
mov
jmp
mov
mov
dec
push
dec
xchg
stc
and
loop
stc
cmp
adc
out
mov
out
push
faddp
adc
xor
cld
jmp
mov
js
test
push
push
js
push
xor
sub
xchg
jns
inc
fidivrs
sub
xchg
int3
in
cmp
ret
mov
ss
add
addb
or
aad
sahf
idivl
push
scas
jge
lahf
xchg
push
test
adc
add
push
std
xchg
stos
mov
fnstcw
dec
roll
inc
in
jle
aas
pop
call
mov
adc
vpshaq
cld
jle
cltd
cltd
test
mov
or
shr
outsl
ss
add
mov
orl
push
in
mov
adc
loop
popa
es
xor
push
dec
jl
loop
cmp
inc
and
mov
js
add
sub
dec
xor
jge
icebp
push
incb
push
in
and
addr16
cld
inc
sbb
sbb
jecxz
jo
pop
lahf
mov
sbb
cmp
xchg
mov
xchg
mov
pop
jg
or
mov
push
sar
stc
scas
jecxz
xchg
enter
add
outsl
in
pop
jge
sub
jle
push
mov
jg
sbb
push
jnp
addl
test
roll
mov
pushf
adc
lock
jns
jecxz
dec
mov
je
mov
movsl
jmp
sub
call
negl
cli
enter
or
inc
jae
fidivs
push
fldcw
inc
adcl
and
int
das
aaa
adc
xchg
pop
pop
jae
shll
xor
out
ficoms
pop
call
scas
add
xchg
mov
jns
inc
and
xchg
inc
sub
mov
nop
jns
rol
mov
jmp
xchg
lret
repz
aaa
gs
pop
xor
xor
mov
inc
incl
jle
add
pusha
xor
ret
jno
xchg
push
and
loopne
ja
les
and
out
push
pop
test
sar
icebp
fs
into
sub
daa
and
xchg
push
lea
mov
push
dec
mov
lock
add
lret
sahf
mov
inc
roll
or
jno
in
jne
ljmp
scas
inc
lods
shr
jg
sbb
mov
or
inc
inc
mov
jle
aas
stos
inc
adc
mov
out
cwtl
mov
mov
mov
ss
jmp
clc
mov
ds
ja
fs
pop
es
outsl
jne
js
jmp
xchg
jno
jne
nop
cmp
fmuls
cmp
xchg
xor
mov
or
or
push
sub
bound
repnz
dec
push
loop
push
testb
push
arpl
mov
sahf
aad
mov
push
xor
push
in
cltd
push
int3
and
jmp
and
xchg
mov
lcall
push
cmpsl
mov
repz
and
test
adc
sbb
push
imul
sbb
or
add
sbb
in
push
pop
dec
scas
filds
inc
xchg
clc
lcall
mov
lahf
mov
xchg
mov
push
imul
and
push
lret
subb
mov
int
push
outsl
fcmovne
and
ret
stos
and
rcr
pusha
sbb
movsl
xchg
mov
int
fistpll
or
or
adc
out
mov
in
xchg
mov
cmp
scas
or
xchg
repnz
je
xchg
test
mov
loopne
aaa
jo
sti
jp
mov
inc
outsl
mov
xorl
int
das
jmp
jo
in
dec
scas
inc
repz
hlt
daa
or
sbb
lods
dec
pushf
dec
adc
mov
pop
sbb
das
xchg
scas
or
dec
cmp
and
rolb
sbb
ss
xor
mov
inc
decb
ljmp
addr16
or
fldcw
repz
xchg
push
push
or
push
cmp
xor
xchg
xchg
jne
cmp
aad
lcall
dec
iret
mov
mov
sbb
lods
imul
les
mov
stos
scas
sbb
add
pop
adc
fstl
fmuls
in
sbb
outsl
nop
outsl
ss
hlt
imul
push
loopne
adc
cmpsb
ss
lret
xchg
push
fidivrl
dec
pop
cmp
rcll
int
jl
dec
int3
es
sub
shrb
movsb
fisttpll
dec
repnz
popa
std
jno
xorb
inc
test
jne
mov
jge
cmp
and
push
addr16
xchg
xchg
adc
adc
clc
jae
scas
stos
call
or
enter
fs
aad
stos
aaa
push
pop
rclb
outsl
lret
sbb
cmpsb
xor
jne
and
push
cmp
gs
cmpl
mov
bound
xchg
mov
sti
int
divl
xchg
fdivrp
lea
stos
add
mov
jo
mov
mov
aaa
xor
sti
fwait
jae
rorl
lock
ret
xchg
xchg
rol
cmpsl
ja
pop
push
or
push
mov
adc
pop
int3
mov
test
int
leave
dec
jnp
mov
ja
pop
and
add
sarl
mov
cmc
cmpsl
es
add
xchg
fdiv
das
inc
xchg
fisttpl
test
inc
mov
and
pop
jp
cmp
jb
sub
fcompl
add
jnp
clc
cmpsb
sbb
mov
or
ljmp
out
clc
rdmsr
and
push
xchg
imul
jb
bnd
mov
stc
pusha
cmc
mov
pop
clc
repz
adc
mov
outsl
loopne
pop
jg
push
xor
hlt
cmpsl
enter
jbe
out
lret
cltd
inc
mov
daa
mov
mov
cmpsb
add
mov
pop
loop
mov
mov
sbb
neg
sbb
nop
lret
sub
adc
les
das
stc
cltd
jne
iret
inc
jo
mov
xchg
and
or
inc
jge
pop
mov
jb
jmp
inc
push
les
pop
iret
cs
ja
in
mov
stos
push
shlb
dec
xchg
adc
sti
xor
pop
cmp
dec
out
inc
das
cmc
imul
outsb
mov
mov
mov
loop
insl
inc
xor
adc
or
mov
dec
icebp
subl
pop
testb
xchg
vfnmadd231ss
jae
jecxz
push
cwtl
mov
push
xchg
cmpb
fcmovnu
cmc
test
cwtl
test
cmp
outsl
js
aaa
sub
lock
cltd
call
out
lret
inc
xchg
js
jo
adc
sbb
in
rcr
imul
in
hlt
rcr
cwtl
adc
xchg
add
aas
testb
pop
mov
inc
mov
jmp
sbb
mov
into
xor
push
add
cwtl
mov
ret
ss
stos
inc
out
lret
cltd
jbe
int
fcomp
sub
mov
pop
mov
xor
lods
icebp
push
fsubs
iret
popf
inc
lods
cmp
fisubl
outsb
jmp
into
xlat
push
popf
cs
cmpsb
and
int
out
mov
iret
cltd
mov
pop
test
idiv
add
add
jecxz
mov
cmc
mov
lock
repz
shrl
mov
jno
in
out
fdivl
push
movsl
cmp
dec
lods
push
stc
or
fwait
dec
int
arpl
sbb
shlb
ret
std
fdivp
scas
std
inc
xor
xchg
iret
out
loopne
xor
aaa
rcrl
ret
outsb
pop
negl
lcall
cmp
test
pushf
leave
mull
push
fidivs
icebp
xlat
fsub
pop
inc
push
pop
add
ljmp
stos
adc
jnp
xchg
scas
clc
cltd
and
dec
test
mov
cmc
scas
mov
insb
aas
call
nop
fstps
in
mov
out
cmp
xchg
dec
cld
pop
ret
xchg
mov
xlat
aas
fiadds
xlat
jge
imul
xchg
imul
sub
mov
fidivrs
inc
arpl
ja
jge
mov
jecxz
cld
cli
or
dec
dec
dec
ljmp
xchg
cmpb
jl
sbb
fnsave
mov
out
xor
test
aam
and
popf
adc
ficoms
sub
imul
pop
jno
mulb
and
sub
xor
nop
into
gs
sub
sub
dec
pop
fbld
ljmp
and
lods
mov
movsb
xchg
or
push
pop
pop
call
or
aas
into
jmp
pop
sbb
ss
in
testb
dec
jnp
cs
xchg
imul
in
out
cmp
adc
mov
jmp
roll
pavgb
dec
xchg
inc
idivl
jno
fstpl
add
pop
pop
inc
and
pusha
aad
repnz
inc
cmp
cmp
mov
addl
dec
cld
dec
popf
fnsave
xor
enter
inc
ficoms
in
ss
in
fidivl
incb
pushf
jmp
cmc
mov
mov
sub
imul
xchg
das
cli
int
pop
pop
pushl
cltd
ret
cmp
aad
stos
dec
rcrl
aaa
out
jo
test
cmp
adc
push
sbbb
pusha
test
loope
mov
sti
and
fbld
fwait
loopne
mov
shr
loopne
mov
in
out
cli
popf
push
mov
sub
and
pop
aaa
mov
or
push
addl
pop
fcmovnbe
aas
push
cli
mov
jb
ss
in
xchg
test
pop
arpl
lods
leave
cmpsl
mov
insl
push
sbb
fnsave
inc
push
clc
icebp
xchg
es
or
lret
lret
jg
push
icebp
add
repnz
mov
test
dec
lods
or
stos
inc
fisttpll
out
inc
push
std
pop
jmp
ror
inc
enter
sub
push
scas
mov
cld
inc
inc
inc
stc
add
mov
push
xor
sbb
int3
iret
lods
into
das
mov
js
das
sub
jnp
jo
push
sub
lret
sbb
jp
xchg
sub
and
xchg
cmp
lahf
push
mov
dec
jp
out
roll
imul
lret
in
mov
cmp
mov
sub
mov
out
push
ficomps
and
push
movb
push
adc
mov
inc
mov
sti
push
daa
adc
fisubrl
ret
lret
lcall
add
and
push
sbb
fistps
adc
cmpsl
jnp
in
adc
xchg
insl
cmpsl
push
jae
int
sub
clc
sbbb
mov
mov
lock
rol
mov
jle
adc
mov
int3
call
cmpsl
dec
jnp
enter
jnp
inc
xor
incb
into
fcomi
mov
push
stc
inc
outsb
push
fucomi
cmp
rcl
or
mov
inc
int
jnp
or
pop
xchg
sub
push
cmp
inc
in
xchg
xor
stos
xchg
lret
orb
dec
pop
mov
fdivl
call
jnp
neg
mov
pop
outsb
pop
movsb
mov
sbbb
xchg
jbe
movsb
adc
test
out
xchg
rclb
test
push
call
test
repnz
std
stos
sti
and
mov
jg
add
sub
repz
inc
add
adc
in
sub
jno
xlat
out
lods
out
pop
cmp
int
aaa
lret
clc
outsl
mov
dec
push
sub
imul
fidivl
lret
psubd
aam
dec
lea
mov
jg
adc
loope
dec
mov
out
inc
aad
xchg
cltd
aaa
fisttps
mov
xlat
pop
out
cmp
and
mov
cmp
and
jo
and
xor
sarb
mov
into
addr16
and
push
push
mov
hlt
mov
pop
adc
push
xor
adc
stc
loopne
adc
sub
aam
mov
aaa
cmp
or
call
aaa
je
popa
cmc
sbb
mov
out
mov
stc
ret
inc
scas
ja
pusha
jns
in
jo
nop
and
movsb
add
fwait
mov
and
xchg
and
insl
das
sbb
push
mov
stos
aas
adc
cltd
cmpsl
pushf
sub
out
cli
dec
mov
pushf
daa
jmp
shl
pop
insl
add
push
jg
mov
jge
in
jp
mov
adc
arpl
sbb
and
gs
jae
clc
testb
mov
jns
push
pop
push
cmp
rol
jbe
lods
cmp
ljmp
jae
add
popa
aas
mov
push
mov
inc
mov
add
jecxz
gs
popa
xor
adc
cmpsb
aam
dec
shr
je
lret
mov
adc
dec
xor
jecxz
xchg
hlt
cld
or
lds
inc
pop
sbb
iret
cmp
dec
xlat
push
fs
push
push
imul
cmpsl
lahf
jns,pn
cmp
bound
rorl
pusha
les
add
adc
xchg
mov
lret
push
ja
cmp
push
mov
hlt
mov
hlt
loop
push
leave
mov
cltd
xchg
std
jg
xor
jae
lea
enter
mov
dec
xchg
and
lock
mov
jo
call
xchg
icebp
fdivs
jbe
lret
and
xor
popa
jno
mov
pop
cmp
add
mov
stos
mov
outsl
jmp
xchg
xor
sub
lods
mov
int3
mov
cmpsl
mov
sbb
push
push
sbb
dec
xor
fdivp
xor
add
mov
sti
jae
dec
aad
fsubrl
cs
sbb
mov
pop
aaa
fistps
or
jns
inc
jbe
pop
jmp
rol
out
popf
popa
lahf
pop
das
ljmp
push
hlt
ja
push
imul
lret
pop
and
adc
jle
mov
leave
call
movsl
fcompl
adc
rorl
fs
or
jno
xchg
pushf
sub
pop
pop
mov
jp
or
lods
add
inc
loopne
pop
adc
les
loopne
inc
dec
adc
arpl
nop
ret
lret
aas
jo
jg
es
xor
aaa
mov
pop
or
insb
or
bound
std
cwtl
mov
adc
cmp
out
fistpl
and
bound
inc
test
cmp
in
fstps
xorb
mov
adcb
out
sahf
mov
mov
pop
or
pusha
test
push
paddw
test
lret
push
js
add
cld
mov
cmpsl
pop
xor
sbb
jo
lods
call
mov
mov
add
in
aas
and
mov
test
cli
push
mov
push
pusha
dec
xor
fisttpll
pop
lods
xor
movb
in
pop
push
lods
setno
jae
neg
xchg
mov
mov
daa
sbbl
popf
sub
movsb
cmp
or
lods
rcll
popf
les
icebp
xchg
loopne
sbb
insb
mov
mov
sbb
cmp
aas
xor
push
jmp
ja
pop
xchg
xchg
pop
mov
mov
mov
push
setg
fs
sub
pop
sub
adc
ljmp
out
shr
shll
jmp
adc
adc
lcall
incb
add
out
jbe
sti
int3
pop
or
rcr
xchg
mov
fldl
in
in
es
or
cld
cmpsl
mov
ret
sub
xor
adc
mov
ljmp
inc
mov
cmp
cmp
sarb
fildll
jo
sbb
push
add
pop
mov
es
ror
pop
and
pop
test
add
sub
insl
mov
loopne
jle
pop
pusha
push
aaa
fnclex
cltd
call
pop
gs
test
xchg
bnd
dec
dec
fstl
mov
push
scas
push
scas
pop
icebp
and
add
ret
xchg
ret
data16
test
jg
or
mov
je
push
fldcw
sub
negb
notb
xlat
subl
pop
mov
xchg
add
mov
jno
mov
or
adc
push
xchg
xorl
xchg
lock
pop
dec
scas
mov
call
clc
sub
mov
mov
inc
mov
sbb
xchg
xlat
add
lea
mov
in
push
into
mov
sti
xchg
mov
push
sub
cmp
nop
sbb
pop
xchg
xor
sbb
mov
and
ljmp
push
cmp
mov
ja
fidivs
notl
data16
cmp
fcoms
xor
push
xlat
or
xchg
test
arpl
xor
mulb
ds
pop
out
iret
mov
andb
push
cmp
hlt
jecxz
jb
jecxz
mov
adc
mov
sub
or
push
push
mov
adc
sbb
lret
push
addr16
out
mov
pop
xchg
and
push
bound
mov
test
jmp
cmp
gs
cmp
mov
insl
arpl
lret
bound
clc
lahf
push
fsubrs
xor
lcall
stos
clc
cmpsb
popa
iret
ds
inc
rcrb
movsb
fstl
repz
sbb
push
cltd
repz
push
xor
cld
arpl
jb
mov
sbb
fs
push
inc
out
addr16
fistpl
jae
sub
scas
xor
popa
or
nop
jno
rclb
jbe
xor
dec
insb
in
sub
mov
sahf
in
sar
mov
pop
fwait
or
cmp
dec
fistpl
nop
jmp
jmp
xchg
out
sub
sub
jmp
sub
orb
popa
jp
mov
shlb
fs
testb
sbb
hlt
push
fdivrp
xor
mov
xchg
mov
xchg
mov
fildl
shrl
fists
rol
je
xchg
repnz
xchg
aas
mov
adc
add
cmc
jmp
and
mov
xchg
jle
or
loopne
inc
shrb
add
cs
jg
insb
sbb
mov
xor
mov
dec
ja
push
fldl
loop
cmp
push
testb
xchg
aaa
mov
ret
mov
jge
outsl
cmp
movsl
and
mov
insl
jecxz
adc
les
jns
ja
out
mov
pop
adc
loop
jmp
hlt
das
mov
and
xchg
adc
or
xchg
out
popf
push
add
movsb
jnp
andl
ficomps
stos
test
adc
iret
fidivl
sar
push
in
cmp
sub
mov
cmp
jae
clc
push
aad
in
test
std
sbb
ljmp
mov
divl
lods
and
leave
jnp
xchg
into
pop
cmp
sbb
stc
or
mov
mov
lret
lcall
inc
jl
test
stos
or
stos
loope
inc
push
mov
lock
mov
inc
aas
dec
repz
mov
xor
inc
pop
and
sti
xchg
pop
mov
loop
cld
jno
or
mov
sub
push
mov
cmp
and
and
repnz
or
int
mov
inc
mov
js
mov
cmp
mov
xchg
popa
repz
jmp
in
sub
testl
sbb
test
jae
cmp
stos
jl
cmc
sbb
pusha
xchg
mov
jo
jp
adc
mov
and
sbb
fst
mov
not
cmpsl
call
push
xlat
mov
sbb
lahf
insl
cmp
jp
nop
xchg
iret
xor
mov
pop
pop
mov
inc
push
in
outsb
daa
repnz
leave
leave
out
jge
push
out
stos
mov
xor
ret
push
mov
dec
mov
mov
notb
in
dec
and
mov
mov
aam
ljmp
pusha
xchg
jns
xchg
xchg
pusha
mov
iret
stos
mov
mov
inc
insb
bound
dec
cmp
fcomi
mov
sub
push
add
loopne
in
sub
insb
jl
js
aas
mov
push
bound
xor
mov
mov
loop
jge
aam
push
sbb
cmc
mov
fwait
data16
jns
divb
jo
mov
sti
inc
out
fs
mov
xchg
arpl
in
fnstcw
jmp
mov
ljmp
add
into
aad
gs
pop
std
aaa
addl
out
mov
insl
icebp
pop
in
js
xchg
scas
mov
xor
loop
lds
mov
mov
aaa
in
loope
cs
pop
mov
or
lahf
sbb
mov
ds
mov
add
stc
xchg
mov
pop
sbb
enter
and
push
leave
add
mov
out
test
dec
subb
mov
pop
sub
js
insl
add
sub
push
test
sbb
jmp
ficoms
mov
incb
je
ret
push
xchg
add
sar
cli
clc
iret
pop
sti
jl
or
sar
sub
orb
cmc
add
fsubrp
clc
testl
rcrl
insl
ret
cmp
data16
or
test
jb
add
in
adc
dec
mov
push
mov
ret
pop
ret
lods
pop
pop
shlb
outsb
enter
jmp
jge
ja
mov
mull
movsl
icebp
je
inc
loop
xor
adc
ss
cmp
rolb
inc
sbb
dec
jg
dec
ret
and
andl
in
dec
jne
adc
mov
pop
mov
cmp
xchg
lret
dec
dec
cmp
test
and
mov
into
pushl
xchg
ljmp
dec
inc
int
pop
cmp
pop
cmp
clc
jnp
int
add
xor
jae
fistpll
into
dec
push
scas
loope
icebp
inc
outsb
jbe
ss
stos
inc
cmp
shl
sarb
pop
jge
jmp
data16
push
dec
lods
push
test
out
adc
in
fxch
jp
fistl
sub
xchg
mov
in
sbbl
jo
dec
cwtl
shll
pop
inc
sub
in
stos
xor
cld
cmpsb
inc
jp
pushf
loop
xchg
cmp
aas
jmp
iret
repnz
add
and
sub
aaa
ljmp
shrb
sub
sbb
call
ror
leave
js
imul
dec
shr
outsb
cld
enter
mov
lods
lds
inc
adc
push
xlat
stos
or
and
adc
popa
pop
in
xor
ficoml
int3
mov
adc
mov
dec
test
daa
rolb
adcb
fs
jle
shr
rcl
ds
cmc
and
in
nop
mov
inc
jns
fnstenv
xchg
mov
mov
mov
aam
cmpsl
lcall
cmp
sti
jecxz
push
ja
lea
mov
js
sbb
addr16
mov
mov
push
rcl
jae
aas
fs
test
inc
add
fs
add
jle
sbb
cmp
jns
xchg
inc
xchg
or
mov
sti
mov
lret
dec
in
push
insb
mov
push
lods
ja
ficoms
data16
es
push
mov
rcr
mov
ljmp
inc
fbld
inc
sbb
inc
mov
add
cld
add
sbbb
cltd
xor
les
sub
negl
decb
ja
in
xchg
xchg
jns
out
xchg
cmp
cmp
imul
call
faddl
outsl
shrb
fwait
push
lahf
stc
shr
aas
movsl
sti
outsb
fldt
sub
outsb
fidivl
mov
leave
jge
sahf
inc
orb
or
pop
mov
clc
xchg
mov
dec
out
ja
and
repnz
xor
sub
aas
mov
loope
xchg
jns
mov
into
div
divb
push
mov
push
or
cwtl
xchg
bound
and
jecxz
and
and
xchg
sahf
test
ljmp
pop
dec
or
add
sbb
rcll
mov
fnsave
iret
mov
dec
mov
mov
xchg
xor
mov
loopne
sub
jle
pushf
pop
js
mov
lock
push
mov
test
push
xlat
mov
pop
movsb
xor
imull
inc
xchg
sti
out
pushf
scas
fiadds
adc
insl
adc
jl
in
sahf
scas
mov
jp
mov
push
lods
orl
stos
inc
repnz
loopne
inc
mov
cmp
enter
or
dec
mov
sarb
inc
shlb
pop
or
fidivl
mov
orl
pop
jo
mov
push
xchg
mov
lcall
daa
aaa
inc
xor
idivb
mov
push
in
mov
fs
stc
stos
int
aam
jnp
xlat
or
gs
xchg
dec
leave
pop
fisttpll
push
stos
lahf
dec
push
pop
sahf
test
sbb
lods
push
sub
cmpsb
jns
xor
out
add
pop
sbb
add
xchg
mov
js
dec
pop
mov
cld
jne
mov
pop
inc
pop
inc
popf
fwait
or
ret
or
test
jp
mov
adc
add
add
insl
mov
lods
stos
cwtl
lods
mov
hlt
adc
xor
shll
stc
lret
sahf
popl
out
fiadds
inc
outsb
mov
push
rclb
xor
mov
std
rclb
dec
pop
cmpsb
stos
out
cs
jp
rcl
test
outsb
xlat
sub
mov
fwait
xchg
hlt
and
cmc
jno
or
std
test
iret
icebp
cmp
push
xor
pop
xor
push
fs
dec
push
fdivrs
insl
push
xchg
xchg
icebp
test
mov
std
sub
insl
inc
filds
cs
mov
shlb
ljmp
push
or
jo
sub
icebp
jg
ret
xor
lret
in
xchg
movsb
adc
testb
loope
inc
add
addl
aaa
mov
jo
and
sub
lock
xchg
cmpsl
push
sub
push
push
inc
pusha
pop
xor
adc
test
in
lret
jecxz
test
int
jae
dec
shlb
enter
iret
pop
pop
mov
arpl
imul
iret
shlb
stos
outsl
dec
or
movsl
xor
or
pop
and
and
mov
mov
fldcw
adc
inc
nop
and
push
mov
xor
xchg
fsubrl
mov
fwait
xchg
ret
dec
fdivs
hlt
push
and
shll
lock
shlb
jl
insl
jge
xchg
and
lock
or
jbe
or
icebp
sbb
fdivrs
cmp
push
cmp
lret
pop
cmpsb
popa
jne
pop
shlb
adc
fistl
sub
mov
mov
jbe
or
pop
loopne
scas
sub
push
adc
setle
movsb
mov
loopne
scas
xor
inc
into
sti
int3
push
aas
push
dec
jo
ror
ja
pop
sub
push
mov
xchg
cmc
push
inc
jae
jge
sub
or
and
cmp
jl
jns
sbb
push
xor
imul
sub
enter
fwait
mov
xchg
mov
sbb
pop
mov
xchg
out
sub
inc
xchg
cmpsl
fwait
call
sub
mov
inc
dec
pushf
int3
loop
xor
imul
pop
cmpl
imul
js
fdivr
scas
shl
xchg
aad
and
nop
loop
and
int3
push
insb
mov
sbb
fdivp
push
mov
mov
push
dec
cmp
jbe
or
mov
ds
mov
mov
jecxz
pop
xchg
mov
aaa
adc
stos
xor
inc
xchg
inc
push
and
push
mov
loop
cmp
and
in
xchg
or
sub
jae
call
mov
mov
or
iret
add
jb
mov
or
dec
mov
mov
mov
inc
inc
inc
jmp
iret
test
aas
outsl
mov
test
or
dec
fstl
in
or
xor
gs
pop
test
push
imul
bnd
mov
ret
call
dec
push
shrl
cmp
mov
xor
out
popf
test
inc
xchg
or
int3
dec
imul
dec
scas
cmp
fldl
les
mov
adc
push
inc
jp
xor
push
push
into
out
lock
xchg
xorb
and
push
mov
pop
mov
add
push
xor
jno
lret
lret
xor
add
adc
test
fsubl
cmp
call
dec
cmp
test
sub
stc
pop
cli
jns
xor
add
xor
xchg
or
or
mov
xor
mov
mov
out
jecxz
sub
push
fistl
inc
dec
fwait
pop
nop
hlt
and
mov
fchs
test
test
neg
ja
jg
lret
xor
addr16
ljmp
je
roll
mov
in
mov
jne
pushw
nop
or
push
jg
leave
jge
sarb
lcall
daa
mov
jns
dec
fnstenv
mov
cli
iret
inc
push
xchg
push
or
femms
mov
cld
outsb
sbb
test
add
in
out
rcl
test
push
jae
or
repz
test
cmp
popa
out
inc
test
icebp
mov
jns
add
push
pusha
stc
jge
jg
pop
inc
sbb
add
inc
push
lret
mov
fs
rclb
push
lret
addr16
dec
lea
test
outsb
idivb
jle
popa
rcrl
and
sub
scas
data16
cli
xchg
mov
push
popa
aad
insl
mov
incb
mov
cmp
dec
roll
mov
and
dec
outsb
add
lods
pop
push
xchg
push
xor
int
jns
inc
and
fmull
jo
inc
hlt
mov
repz
mov
cmc
mov
or
repnz
jg
ficompl
mov
add
andb
sbb
jge
decb
into
xchg
divb
addr16
outsb
mov
xchg
sub
fsubl
mov
cmp
cmc
xchg
mov
in
repnz
in
insb
xor
pop
pop
test
sbb
jmp
lcall
dec
insl
shrl
mov
xchg
mov
filds
popa
vmread
jnp
jg
dec
sbb
and
int3
xor
push
push
mov
aas
movq
mov
pop
imul
test
mov
adcl
leave
jmp
xor
arpl
mov
fbld
in
outsb
cmp
int
pop
je
jecxz
ss
push
jecxz
push
adc
lcall
jl
dec
fnsave
shl
mov
mov
sarb
add
xor
pop
xchg
dec
loop
sbb
sbb
rcrb
push
xlat
inc
fs
pop
push
scas
stos
mov
and
xlat
aas
cli
push
pop
imul
hlt
sbb
test
jl
mov
adc
jp
loopne
mov
ficomps
push
inc
cmp
cld
sbb
rcrb
push
pop
push
hlt
enter
js
rol
movsl
insb
jae
jae
pop
icebp
out
testl
pop
jge
cld
push
arpl
shrl
dec
cmp
out
sub
cwtl
pop
outsb
loopne
loopne
cmp
fs
dec
inc
cmp
test
shll
pop
imulb
int
mov
scas
push
mov
shl
xchg
dec
lret
enter
out
mov
add
jo
cmp
mov
in
lock
and
mov
pusha
push
mov
cmpsb
out
enter
push
mov
data16
push
aam
mov
sti
sub
aaa
xor
push
adc
or
sub
das
xor
mov
jmp
or
xor
rcl
xor
jle
xchg
jnp
out
cmp
cs
jae
sti
push
mov
sub
popa
cld
push
jl
jmp
sub
outsb
pop
xchg
fistpll
push
jbe
sub
aad
adc
cmp
xlat
and
cmpsl
jle
mov
into
add
add
jp
pop
mov
testl
xchg
test
xchg
fs
add
out
or
loope
and
hlt
shlb
sub
fnsave
movsl
or
sub
fstp
imul
jns
mov
mov
test
test
push
push
inc
xchg
pushf
cmp
jle
mov
ffree
mov
icebp
adc
sub
jl
dec
lods
mov
xchg
das
gs
insb
inc
clc
insb
adc
adc
mov
mov
mov
pop
lock
add
push
xor
loope
pop
scas
fistps
in
and
fwait
cs
push
mov
insl
rclb
add
js
mov
test
push
data16
jle
inc
shrl
clc
dec
lds
pop
xor
cs
aam
mov
lahf
cmc
ja
scas
add
pop
aaa
js
int
daa
ljmp
fwait
pop
cs
pusha
sub
aad
adc
dec
es
in
fmul
cmp
outsb
sub
ja
inc
mov
std
clc
cld
mov
stc
pop
iret
push
addr16
mov
inc
cmp
into
or
mov
dec
pushf
fnsave
int3
dec
test
xchg
and
jmp
dec
mov
leave
pushf
sub
loopne
popf
pop
rorb
ret
stos
mov
add
xor
nop
push
add
and
pop
xor
je
xor
cmp
pop
sub
pop
flds
cmp
and
xor
imul
scas
pusha
test
mov
push
dec
cmp
jp
xor
jge
fstl
push
mov
jo
jo
cmp
aaa
int
fs
lret
in
add
mov
inc
mov
mov
pop
mov
lods
int
lahf
outsl
add
popa
pop
leave
xlat
and
ffree
fsts
addl
lods
pop
pushf
dec
rclb
int
push
mov
int3
push
cmp
pop
sub
fldt
subl
es
cwtl
shrl
mov
mov
or
popa
rcll
pop
aaa
mov
mov
inc
iret
add
out
cmp
xchg
xchg
dec
and
loope
fsubrl
sahf
addb
sub
jno
daa
ds
push
jno
fldt
cmpsb
loopne
jo
shlb
jo
test
ret
aaa
sahf
or
lea
lods
ds
sub
call
xor
xchg
mov
inc
enter
jns
dec
loope
enter
sti
mov
mov
pop
popa
lcall
dec
mov
mov
mov
enter
xor
fldl
test
jl
mov
lods
xchg
push
inc
loop
add
jmp
lds
push
jg
hlt
sbb
pop
inc
test
div
out
mov
push
adc
adc
dec
aas
loope
into
xchg
jmp
lahf
into
push
inc
lock
xor
push
out
stos
mov
add
xchg
aad
daa
and
andb
orb
add
xchg
cmp
dec
and
loop
adc
xchg
pop
in
dec
jb
jne
aaa
rorl
shl
sub
mov
or
xchg
jno
incl
daa
sbb
mov
sbb
fcoms
xchg
fildl
xchg
ret
popa
repz
cmp
out
out
jns
rcll
push
xor
push
xchg
dec
sbb
into
pop
jp
xchg
lret
stos
pop
inc
test
pop
xchg
push
gs
cmp
or
imul
inc
adc
ja
arpl
or
inc
hlt
jg
xor
pop
in
sub
daa
dec
dec
cmp
adc
daa
sti
repz
or
xor
push
cli
xlat
es
mov
adc
fadds
and
fbstp
test
mov
or
je
mov
mov
add
fnclex
movsb
lret
fcmovu
cmp
xorl
sub
sub
push
sub
push
sub
push
sub
pop
sub
pop
sub
lods
push
mov
stos
rcrl
xchg
mov
stos
inc
push
or
push
xchg
sub
in
mov
jns
add
cmp
je
in
test
lds
mov
push
sub
or
pop
lods
test
pop
push
idiv
jnp
jge
jbe
jg
add
enter
std
mov
add
out
out
hlt
lcall
lahf
xchg
sbb
inc
sub
mov
cmovo
bound
adc
push
sub
es
les
adc
or
push
mov
movsl
mov
cmp
xchg
sarb
fcoms
and
adc
aad
mov
subl
mov
pusha
adc
inc
nop
xor
inc
sbb
cmp
pop
adc
setne
add
push
les
or
test
push
and
lock
mov
into
inc
push
add
adc
in
inc
loopne
rorl
add
test
aas
adc
or
push
ret
lret
inc
insb
pop
incl
mov
fimull
sahf
dec
jns
iret
xor
jb
and
xor
dec
sahf
xor
jbe
iret
mov
inc
fdivrs
mov
inc
mov
aad
dec
adc
call
mov
call
iret
mov
les
sub
jl
shrl
and
ss
xchg
dec
push
data16
cltd
adc
mov
sub
adc
cmp
jno
lret
cli
push
js
sbb
cmp
xor
sbb
mov
sbb
repnz
in
mov
push
arpl
test
sub
pop
pushf
loopne
ljmp
je
aas
sbb
std
add
inc
push
mov
repz
pop
dec
loope
or
scas
cmp
lods
loope
jge
push
aam
into
iret
mov
mov
mov
popf
out
stc
cltd
iret
rcrb
pop
dec
jae
and
pop
test
pop
shrl
fidivrl
xor
loope
ljmp
mov
jmp
xchg
std
adc
cwtl
cmpsb
insl
add
ds
mov
cmp
hlt
sarb
aaa
hlt
testb
fcompl
std
mov
pop
loope
vpmadcswd
ja
fmull
mov
add
dec
push
out
adc
stos
lret
mov
sbb
xchg
loope
mov
outsb
out
cmpsb
frstor
push
movsl
jns
mov
sbb
push
or
mov
ss
inc
sbb
ds
seta
sbb
movsb
dec
mov
mov
imul
jge
push
fstps
jbe
jp
add
rol
or
pop
cwtl
and
sub
call
push
mov
adc
xor
add
and
cwtl
and
mov
xchg
sti
xchg
dec
dec
mov
lret
xchg
add
hlt
out
das
jae
jl
push
cmpsb
imul
xor
xchg
mov
jno
xchg
out
add
pushf
adc
nop
xchg
mov
xor
sti
pusha
jb
adc
cmp
xor
or
sub
xor
fdivs
sahf
shlb
fcoms
push
lcall
or
or
movsb
xchg
fmuls
insl
popa
or
push
sub
jno
addr16
lods
mov
imul
xchg
and
sbb
mov
out
imul
rolb
inc
xlat
pop
add
int
orl
aam
sbb
add
sub
pop
cmc
push
or
and
jno
jge
imul
iret
mov
jb
inc
popa
cmp
ja
and
mov
lcall
cmp
and
mov
push
mov
xchg
mov
loop
jmp
ret
push
push
mov
add
das
mov
xor
popa
jo
jno
or
mov
ret
sub
adc
repnz
lcall
arpl
shl
pop
push
lds
das
pop
add
adc
out
jp
mov
mov
and
sbb
lock
sarb
lock
sub
and
jmp
outsl
and
movsl
subb
mov
fsubrs
bound
dec
rcrl
mov
dec
xor
sbb
call
aas
sub
xchg
or
out
movsb
scas
mov
adc
cwtl
dec
add
ss
xchg
pushf
push
daa
mov
jecxz
xchg
xchg
addr16
bound
int
lcall
jle
dec
jecxz
xchg
dec
add
hlt
sbb
push
insl
pop
lock
lahf
shrb
and
jecxz
jge
mov
xchg
push
repnz
testl
push
aas
repnz
mov
jnp
rorl
test
test
stc
push
subl
lods
jno
movsb
inc
mov
cmp
ss
test
mov
in
jne
shlb
dec
rol
imul
pop
dec
rcrb
cmpsl
testb
pop
in
rorl
mov
xchg
test
or
stc
dec
inc
arpl
xor
jmp
test
and
addr16
popa
mov
sti
and
insl
call
shlb
add
fstpl
jnp
imul
fsubrl
popa
pop
adc
rcrb
push
inc
nop
ja
cmp
ret
cmp
push
idivl
cmpsb
fsubs
lcall
and
shlb
rorl
inc
lods
cli
test
add
sti
fidivs
loope
fldt
adc
inc
jns
or
inc
stc
sub
hlt
aam
xor
test
push
test
dec
hlt
or
or
loope
xchg
sbb
sub
inc
lock
dec
icebp
xor
xlat
pusha
sub
insl
out
mov
mov
jl
sbb
imul
push
and
ret
outsl
push
cli
in
aas
lcall
sub
fcoml
test
mov
jmp
sbb
jl
push
dec
inc
lret
aas
aas
add
adc
loop
push
cwtl
arpl
out
js
push
cwtl
jl
inc
xchg
out
notb
mov
das
add
mov
push
or
dec
pusha
mov
inc
mov
std
loope
add
adc
data16
mov
outsb
in
dec
mov
sub
xchg
clc
outsb
mov
inc
push
and
pop
xchg
mov
in
lcall
or
stos
push
fwait
stc
lahf
jno
das
adc
es
jns
mov
je
subb
pop
mov
push
sub
arpl
mov
repz
add
xorb
dec
in
mov
cmpb
jle
popa
pop
lea
inc
stos
xchg
fsts
out
jecxz
pop
push
xor
cmp
mov
mov
test
dec
xchg
out
shll
aam
test
mov
mov
test
pop
push
inc
stos
pop
mov
push
cli
and
ret
pop
sub
mov
mov
mov
mov
jmp
sub
lret
ja
lds
shll
arpl
pop
mov
dec
xchg
mov
iret
mov
nop
das
test
sub
xor
add
outsl
fwait
or
stc
inc
mov
int
xor
xlat
cmc
shlb
call
adc
popa
out
jp
mov
cmpsb
jle
xchg
into
cwtl
fmul
pop
pop
enter
dec
jmp
jne
sbb
shlb
aas
sub
out
inc
lds
pusha
push
out
outsl
dec
int
rorl
mov
xchg
xchg
mov
popa
dec
jecxz
pop
daa
jnp
adc
sub
xor
jmp
push
orb
arpl
add
cs
popa
nop
sbb
xchg
cli
lret
jg
rorl
lcall
lds
scas
mov
sub
test
imulb
mov
sub
loop
movsl
cmpsb
ffreep
aam
pop
les
push
sbb
jo
not
or
mov
dec
pushf
imul
sbb
jge
leave
sbb
lods
mov
cmp
dec
jne
mov
leave
shr
xor
movsb
lods
test
imul
sub
or
inc
int3
adc
mov
lret
mov
ud1
sbb
cmp
addl
jp
jns
jns
iret
mov
aad
sbb
shrl
xchg
test
insb
and
pushf
mov
lret
rcll
push
imul
xchg
fs
cmp
pop
subl
insb
lgs
push
outsb
mov
shlb
fs
outsb
xor
bound
jno
xchg
cmp
cmp
icebp
pand
rcll
or
sub
mov
shrl
mov
roll
std
cs
cmp
mov
add
push
mov
lret
arpl
fidivrs
pop
repnz
mov
xchg
cld
push
int
jg
cmp
jecxz
mov
pusha
sbb
lahf
mov
cs
call
test
enter
sub
daa
pusha
cli
cwtl
les
es
inc
or
aam
jae
ret
sub
sub
push
sbb
out
gs
pushf
mov
pop
xor
pop
jns
cltd
aam
adc
lock
mov
das
es
or
lods
push
or
lret
xchg
fiadds
mov
sti
mov
lods
lret
nop
in
push
inc
out
cmc
outsb
sub
fwait
lods
push
sbb
cmp
les
popa
insb
add
add
or
and
movl
lock
jl
pop
add
sub
xchg
stos
daa
ljmp
xchg
enter
mov
stos
adc
iret
out
dec
push
fnstcw
xor
pop
jl
enter
fnstcw
lahf
cli
xchg
lret
loopne
gs
xor
roll
jne
sub
jb
cmp
or
xchg
adc
push
dec
dec
dec
push
add
imul
divb
sbb
lcall
test
sbb
ficoms
cmpsl
sub
mov
xchg
pusha
dec
jle
jno
addl
or
call
icebp
imul
push
sub
into
pop
pop
nop
popf
lret
aaa
enter
cmp
push
outsl
lret
ds
add
sub
dec
mov
push
sahf
cwtl
int
jg
inc
shl
ds
and
cmp
daa
xchg
minps
jno
mov
xchg
add
sbb
cmp
mov
in
fsubrl
std
and
xchg
lods
pushf
lret
cld
cmp
and
pop
rcll
sub
sbb
int
xchg
add
jmp
cmp
loope
std
inc
imul
mov
scas
fstpl
ljmp
mov
push
negb
into
or
scas
outsb
dec
mov
push
adc
insb
jno
pop
mov
dec
mov
outsl
push
and
popa
mov
xor
and
inc
pop
sub
push
imul
inc
mov
addr16
sub
lock
mov
push
negl
fwait
push
cwtl
cld
xchg
fwait
xor
dec
ljmp
mov
fldt
call
cs
les
sahf
aam
jl
xchg
stos
pop
outsl
push
xchg
call
insl
mov
or
xchg
sub
lahf
pop
scas
subl
mov
mov
es
fistpl
mov
mov
out
xchg
xor
outsb
adc
js
mov
sbb
cld
mov
push
dec
xchg
jb
pop
lret
or
mov
push
loopne
insb
inc
cmp
push
lcall
pmaxsw
pop
loope
pop
in
stc
ss
cmp
mov
jmp
or
xor
mov
mov
pop
and
adc
adc
pop
push
xlat
pop
data16
into
testb
mov
dec
xorb
scas
jmp
int
loopne
mov
je
push
mov
inc
jg
fcmovne
cwtl
sarb
push
mov
jae
inc
insb
fidivs
mov
leave
leave
xchg
mov
cmp
pop
mov
cmp
fsubrl
xlat
pop
cwtl
cltd
test
cmp
inc
push
mov
stc
cmp
and
inc
popa
push
pop
jge
out
stos
ret
out
inc
sbb
insb
jg
lds
dec
sub
rcll
jg
jbe
xorl
jne
cli
jmp
in
test
mov
frstor
in
sub
repz
sbb
pusha
rcll
lahf
push
pop
rol
sbb
mov
mov
adc
insb
pop
into
jg
push
daa
cwtl
shl
loopne
xor
push
xlat
imul
ljmp
pop
jns
ljmp
insb
icebp
ss
mov
or
push
cmp
cmpsb
xchg
sub
xor
insb
push
sub
push
mov
xor
sub
mov
mov
fcmovbe
xchg
xchg
outsl
int3
lahf
fldenv
loop
sbb
fsubs
push
sbb
jbe
sbb
xchg
jecxz
and
pop
mov
xchg
sbb
ds
lahf
cmp
cmpsl
pop
aad
and
aaa
pop
lcall
test
mov
xchg
cmpsl
sti
dec
adc
popa
iret
xchg
ss
pop
jmp
lock
xchg
out
sub
in
jmp
jge
dec
inc
xorb
in
pop
push
ja
xor
pop
cmp
into
mov
mov
lret
ret
ret
adc
mov
mov
jo
repz
fwait
pop
cmpl
mov
test
arpl
dec
add
mov
adc
sub
aad
dec
push
sub
inc
push
pop
addr16
stos
push
push
mov
mov
dec
xchg
and
add
pop
movsb
in
leave
jb
xchg
xchg
cwtl
and
or
dec
xchg
mov
movsb
scas
scas
lods
popa
xor
loope
cs
ljmp
les
sbb
test
call
push
mov
pop
jb
pop
sti
loope
cld
dec
and
insb
mov
leave
push
js
mov
insb
mov
dec
pushf
ret
rorb
cmp
hlt
cs
mov
push
and
imul
iret
incl
inc
fcomip
iret
out
lldt
add
lock
stos
dec
movsl
pop
pop
mov
out
fisubl
movsb
and
call
imul
push
xor
add
pop
cltd
ret
jmp
stos
orb
scas
rolb
add
sub
mov
mov
mov
sbbb
inc
jg
inc
and
enter
mull
iret
mov
dec
lret
xor
ret
adc
or
dec
sqrtps
inc
add
pop
inc
inc
sub
mov
and
stos
pop
or
add
add
pusha
xchg
mov
sub
dec
jo
inc
jle
jno
ja
mov
arpl
cmp
ficomps
out
arpl
xor
dec
popa
scas
inc
cld
sahf
pop
adc
ret
cmp
les
adc
fisttpll
xor
lea
push
es
sub
jp
int
mov
jo
outsl
and
jno
cwtl
insb
inc
loop
sbb
out
cmp
sub
push
xorl
sbb
bound
insb
loopne
sbb
sub
shl
inc
outsl
or
cs
push
gs
or
dec
fcompl
xchg
jnp
mov
les
inc
xchg
cmp
stos
aad
mov
pop
xchg
decl
idiv
dec
ja
stos
js
sub
xchg
jb
push
jl
jle
push
mov
rcrl
xchg
push
insb
mov
stos
imul
inc
mov
cmc
sbbb
cmp
mov
jno
lock
mov
sub
fcmovbe
mulps
pop
repz
jae
std
loop
xchg
push
mov
cltd
xchg
std
xor
iret
pop
jbe
rep
fstpt
outsl
cmp
and
pop
into
mov
lret
sti
fadds
jp
addr16
adc
mov
mov
outsl
cmp
lock
out
stos
test
push
sbb
sbbb
push
pop
test
addr16
jmp
adc
xor
inc
int3
mov
adcb
std
jno
mov
inc
scas
pop
shll
pop
movsl
stos
fstpt
sbb
inc
jbe
popf
push
sahf
fistpll
sbb
sbb
fcompl
int3
in
pop
mov
push
push
mov
dec
xchg
stos
sub
mov
jl
cmpsb
jp
les
cli
push
dec
push
jb
inc
fwait
sbb
mov
popa
lea
outsl
cld
adc
sbb
pop
andl
and
adc
adc
jle
sbb
flds
cltd
push
lds
xchg
mov
fsub
adc
jae
daa
lret
inc
mov
ss
adc
out
imul
jbe
outsl
sbb
test
lock
pop
aaa
call
adc
xchg
movl
xchg
out
imul
in
ljmpw
mov
mov
test
mov
cmp
push
cmp
cli
out
mov
test
mov
call
ja
mov
sahf
sbb
cld
and
sbb
cli
movsb
out
pop
bound
lcall
popf
adc
mov
pop
sbb
or
ss
mov
out
inc
mov
cmp
call
into
int3
mov
lret
adc
pop
fiaddl
imul
int3
lods
hlt
jmp
mov
mov
popa
sbb
xchg
unpcklps
add
fcmovnu
repz
iret
mov
push
lods
mov
adc
aaa
in
lods
jecxz
int
cld
lret
jp
mov
mov
add
rcr
mov
leave
and
dec
mov
inc
fsts
cmc
fists
xchg
test
jg
cmp
lret
push
in
sbb
cmp
jb
mov
in
scas
add
fstl
and
push
fcmovb
ffreep
xorb
and
xor
imul
cltd
insb
stc
mov
mov
insl
jge
sbbb
lsl
lods
loop
jns
out
stos
lods
iret
jno
xchg
sub
jns
cli
cwtl
jp
sub
or
mov
cli
scas
or
mov
ret
js
jns
mov
and
fnstcw
jb
fstp
test
lret
aaa
inc
mov
mov
les
and
xchg
inc
adc
cmpsb
cltd
mov
fistpll
fildl
adc
pop
std
es
mov
sub
xlat
cmpsb
mov
jecxz
xchg
scas
pop
into
and
subb
sbb
and
xor
lret
mov
xchg
xor
cld
jbe
pop
push
pop
pop
pop
popa
arpl
dec
or
arpl
and
add
xchg
push
cmp
mov
mov
mov
pushw
data16
sbb
mov
pop
pop
std
and
lds
jb
mov
xchg
mov
xchg
out
xor
jnp
fcoml
sub
lret
lds
sti
jb
inc
sub
inc
sbb
lock
pop
pop
add
add
subl
push
add
jmp
dec
push
cld
or
aaa
shlb
add
or
add
add
mov
call
push
or
and
orb
mov
or
loopne
add
xor
add
pop
push
add
scas
andb
sub
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
jnp
ljmp
cltd
and
aas
push
jecxz
xor
scas
les
pop
rcrb
push
outsb
mov
adc
jae
bound
lahf
mov
loopne
test
ljmp
lret
ret
sub
lods
xchg
test
xchg
pop
mov
popf
xchg
fdivl
loope
jecxz
jo
cmp
and
ret
icebp
mov
arpl
loope
xor
loope
pop
jne
inc
mov
push
xor
xor
mov
push
xor
pop
mov
mov
out
nop
xor
xor
iret
pushf
add
aas
icebp
mov
inc
fucomp
mov
push
cmp
rcll
rclb
ljmp
dec
shlb
jp
mov
mov
call
data16
add
mov
repnz
xorb
pop
aaa
mov
in
mov
xchg
jmp
fimull
cmp
hlt
ja
rorl
dec
out
push
arpl
mov
cwtl
lret
shl
andb
jne
or
gs
stos
jp
in
adc
negl
in
scas
cmpl
or
xchg
xor
mov
cmc
sti
fnstcw
mov
lods
dec
inc
call
or
xor
dec
push
mov
mov
call
mov
pop
inc
cmovnp
push
dec
push
in
negb
ror
jmp
push
int3
mov
imul
jmp
jo
and
stos
int3
fstps
fcompl
push
mov
inc
pop
and
sbb
mov
scas
stos
sub
mov
or
fsubrs
pop
mov
mov
push
dec
add
inc
push
icebp
xorb
push
pop
jbe
jecxz
mov
cli
xor
mov
cmp
mov
lahf
add
leave
adc
push
out
sub
mov
mov
roll
test
adc
hlt
and
xor
das
xchg
jae
pop
xor
test
jno
jns
cmc
jl
inc
cmp
cltd
push
dec
loopne
inc
int3
fisubrs
hlt
sub
popf
cmpsl
lods
inc
and
testb
mov
push
sbb
ja
sahf
pop
sub
xlat
pop
fs
jmp
fs
xchg
xchg
sbb
mov
sti
data16
cmp
fs
fistpll
out
sub
inc
push
jo
hlt
jp
and
ja
sub
push
in
xchg
cltd
mov
xchg
loop
imul
mov
sbb
das
add
iret
sub
xchg
repz
adc
mov
scas
repnz
movsl
insb
mov
and
dec
xchg
mov
popa
inc
xchg
sub
out
jp
pop
fnstsw
pop
test
je
jnp
add
test
and
test
lret
add
jg
mov
xchg
xorb
push
mov
sahf
into
scas
dec
xchg
and
dec
call
lahf
mov
cmp
hlt
in
xchg
test
int
ds
das
ds
dec
lahf
push
shll
sub
cmpsb
jb
adc
jp
and
jns
rcll
push
and
rcrb
outsb
fcmovnu
fdivr
inc
and
test
iret
mov
push
test
xor
inc
sbb
loop
repz
mov
bnd
jne
and
inc
sbb
repz
ret
inc
enter
jl
mov
dec
and
push
fsubrl
adc
and
adc
out
out
out
push
int
test
fwait
aam
out
in
mov
jne
mov
ficoml
mov
adcl
inc
addr16
rcrl
xchg
shrb
cmp
iret
jno
xchg
addr16
ss
imul
push
loopne
fwait
test
mov
sub
imul
popa
adc
insb
push
xor
mov
lock
dec
mov
dec
les
inc
xor
xchg
push
pop
adc
test
pusha
int3
or
dec
in
mov
jne
push
lea
adc
cmp
push
sbbb
xor
inc
cmp
sahf
cmovge
push
in
ret
out
roll
lret
mov
jmp
jecxz
dec
aam
jns
sarl
mov
pusha
cmp
sbb
or
push
adc
das
jb
cmpsb
std
enter
pop
jecxz
fdivr
fdivrs
mov
inc
leave
adc
mov
arpl
xlat
mov
sbb
out
mov
and
stos
mov
int3
rolb
repz
jge
xchg
mov
sbb
pop
add
jl
jb
jg
push
mov
push
sbb
xchg
mov
arpl
inc
and
popa
push
dec
mov
loopne
mov
push
sbb
lds
fwait
push
stos
es
shr
imul
mov
jno
notl
fisttpll
fwait
push
mull
jo
cmp
adc
mov
rcll
dec
fcoms
loop
mov
push
and
lret
js
cmpsb
test
pop
std
mov
mov
lea
das
mov
clc
arpl
adc
xchg
mov
cld
shl
lds
or
aad
fs
out
or
or
cmp
mov
mov
and
ja
aas
lcall
scas
sbb
jge
jmp
push
test
clc
fidivl
lds
mov
inc
fmulp
ja
and
inc
sarl
cltd
cltd
jge
pop
dec
adc
cmp
or
sbb
mov
jecxz
jbe
ja
leave
inc
cltd
jbe
jo
jmp
inc
jne
aad
sbb
jno
pop
cmp
and
mov
pop
loop
jb
out
ds
mov
adc
cltd
sbb
mov
xchg
add
js
std
add
cmp
mov
cmp
data16
out
imulb
sub
adc
nop
pushw
out
test
mov
enter
or
insb
sbb
popf
rorl
lock
je
mov
jp
pop
ss
mov
jmp
gs
cmp
popl
sbb
popf
sbb
fwait
jns
jl
push
mov
mov
xlat
push
sahf
arpl
mov
nop
shrl
sub
je
fidivs
outsl
push
inc
sbb
or
mov
push
cmp
push
cmpsl
ss
test
scas
cltd
popa
jle
pushf
fistps
sbb
and
call
sahf
sub
cmp
and
loop
sbb
pop
adc
into
popa
out
fldl
xor
lea
out
movsl
lcall
push
scas
lcall
jno
rclb
adc
paddusb
push
mov
mov
sub
ficompl
cmpsl
out
or
and
rcrl
jno
int
sbb
andl
hlt
pop
dec
lahf
xor
clc
and
mov
pop
xchg
stos
mov
popf
pusha
dec
cwtl
clc
addr16
mov
mov
out
popf
loope
sti
dec
or
pop
jmp
jl
cmpsl
xchg
xlat
into
mov
xchg
out
jns
ljmp
cli
fldl
notb
repz
cmp
movsl
in
or
xchg
xchg
push
out
sti
dec
pop
ljmp
out
bnd
adc
aas
add
cmp
idiv
movl
addl
sbb
xor
not
sar
cld
and
mov
paddsb
out
jmp
jbe
jmp
dec
in
out
scas
aas
shlb
out
cs
mov
xchg
aam
sub
into
js
mov
dec
std
sub
ds
jg
push
movsb
sahf
sbb
loopne
lcall
je
mov
cld
lods
stc
xchg
loop
jg
adc
bound
lods
sub
ja
mov
push
data16
ja
inc
call
pop
addr16
dec
mov
inc
mov
in
push
js
andl
push
pop
sub
sbb
jbe
mov
bound
mov
mov
in
ret
loopne
inc
fisubrs
jg
dec
jnp
sub
pop
je
mov
mov
out
popf
addr16
push
iret
pushf
mov
loope
pop
cs
fcmovnbe
scas
mov
rol
fildl
in
addl
sub
jne
jp
ret
xchg
jb
pusha
test
sub
sub
jb
ret
mov
outsb
rcrl
sbb
mov
inc
mov
mov
dec
mov
mov
outsl
insl
btcl
pop
xorb
lods
push
pop
ret
sub
aas
icebp
hlt
clc
fsubr
jns
sbb
jae
xchg
fidivs
and
push
mov
cmp
xchg
xor
in
mov
test
jle
fiadds
rep
movsl
jmp
push
dec
out
in
and
int3
xchg
lea
push
popa
mov
jnp
arpl
fs
jge
xor
fmulp
xchg
cmp
lret
mov
xlat
mov
lea
arpl
xor
sub
mov
movsl
in
xor
negl
test
cmp
sbb
or
sbb
addr16
inc
js
xlat
inc
ja
xor
jb
shlb
cmp
cmp
jmp
cltd
lret
sahf
cwtl
stos
ljmp
idivb
leave
xchg
sub
push
fs
notb
sub
aad
xor
jl
fsubrs
cs
repz
rcrl
mov
mov
mov
aad
bound
jmp
push
xlat
push
orps
sub
jmp
cmpl
scas
push
cmp
mov
lods
dec
lods
jecxz
lods
repz
nop
ljmp
addr16
divb
test
in
mov
fcompl
fdivs
cmp
dec
shlb
jns
mov
test
mov
subb
movsb
inc
pop
daa
inc
out
xchg
mov
mov
jbe
sbb
mov
inc
hlt
mov
and
mov
push
out
pop
mov
xor
test
push
mov
cli
mov
orb
daa
push
jnp
bound
out
sahf
out
xchg
outsb
enter
cld
jge
aas
sarb
xchg
sbb
and
ficomps
sub
ss
mov
pop
addps
mov
xchg
out
scas
push
mov
hlt
push
sub
sti
shlb
ljmp
hlt
sbb
sub
dec
into
dec
out
jle
push
dec
cmpb
loopne
fcmovnbe
lock
pop
fimuls
add
pushf
mov
or
pop
xchg
ss
dec
cmpsb
xchg
jb
jne
popf
out
pop
inc
cmpsb
jns
mov
cmp
and
pop
addb
popf
and
mov
mov
std
inc
pop
ljmp
in
lcall
cmpsl
inc
pusha
outsb
mov
cmpsb
stos
sub
xchg
and
daa
into
xlat
out
imul
hlt
sti
and
cmc
test
inc
add
mov
push
or
inc
cmpsb
mov
lock
sbbl
jg
aaa
iret
push
dec
dec
stos
in
test
fcmove
sbb
mov
out
cli
loopne
test
push
test
cmp
cmp
jnp
cmp
cmp
sbb
stos
inc
dec
mov
add
jno
jg
ljmp
jb
out
cmp
fs
or
xor
out
data16
inc
popa
outsb
orb
jmp
sti
jns
ret
mov
cld
inc
cmpsb
les
daa
stos
outsl
dec
and
sub
jae
add
rcl
xchg
pushl
pop
push
daa
jmp
pop
mov
pop
idivl
mov
out
lcall
mov
inc
xlat
mov
data16
gs
xchg
test
gs
cmp
and
xchg
aas
lods
cmp
in
jne
aaa
mov
inc
mov
dec
mov
push
lret
and
ja
or
movsl
pop
cs
aaa
iret
sti
mov
cmpsl
popf
xchg
sbb
imul
sub
mov
lret
cwtl
and
jp
into
cltd
cmpsl
scas
pop
mov
nop
call
cmp
add
in
push
jp
imul
lods
icebp
repz
pop
dec
sbb
gs
loope
cmpsb
sahf
icebp
sbb
leave
out
push
pop
int
daa
imul
call
push
aad
mov
arpl
icebp
incb
movb
mov
mov
das
mov
pop
sbb
mov
shrb
inc
dec
insl
sbb
into
addr16
push
pop
push
xor
xchg
push
mov
stos
or
int
push
push
push
cmp
xchg
out
inc
xor
add
mov
adc
mov
icebp
clc
andl
dec
cmp
popa
cmp
and
dec
push
andb
jno
or
popa
in
dec
imul
insb
dec
cmp
jae
ds
outsl
pop
xchg
xchg
in
and
adc
out
and
outsb
cmp
std
clc
and
popa
push
xor
sub
mov
add
mov
push
mov
loopne
mov
and
xor
int3
cmp
cmp
sarl
push
out
fdivrs
stc
mov
pop
call
test
fs
jl
stc
xchg
fisubs
adc
xor
push
push
mov
inc
outsl
sub
push
jno
sti
xor
test
or
xor
in
lods
cmp
xor
pop
jmp
out
xchg
movsl
jp
pop
mov
imul
xchg
dec
mov
inc
inc
or
ljmp
xor
ds
and
loope
mull
pop
inc
rcll
sbb
add
popa
mov
loop
adc
inc
cwtl
call
or
je
add
test
push
and
push
mov
xchg
adc
mov
call
sub
aaa
addb
push
mov
push
inc
aas
and
inc
mov
push
neg
mov
out
aam
stc
pushf
mov
xchg
add
ljmp
loop
sahf
dec
in
je
test
mov
lods
insl
outsb
xor
out
dec
add
movsb
inc
mov
scas
out
dec
bound
mov
imul
cmpsb
mov
push
ds
loop
jne
push
xchg
ret
sahf
mov
jp
je
je
loop
sbb
dec
daa
cmc
push
xor
and
xchg
test
into
jl
lock
sub
jae
in
and
ret
sbb
jne
iret
cmp
daa
pushf
cs
xchg
into
pop
dec
ret
xlat
cmp
lret
inc
inc
or
adc
adc
xor
pop
xchg
sub
mov
dec
out
loope
jl
add
add
gs
aaa
pop
xchg
nop
add
repz
lret
ds
mov
addr16
aaa
ret
scas
mov
inc
jnp
test
push
sbb
adcl
das
rcll
scas
cmp
xchg
mov
aad
ja
dec
sbb
in
aam
pop
add
lahf
and
sbb
and
icebp
andl
sahf
call
lret
dec
int
in
faddl
test
je
frstor
scas
mov
pop
into
cmpsl
sub
inc
imul
mov
pop
pusha
mov
add
add
cld
mov
fwait
lcall
leave
int3
lahf
push
push
xchg
dec
cli
jl
leave
or
push
loop
pop
in
dec
test
push
sti
lahf
popf
mov
add
aad
mov
xchg
push
dec
hlt
icebp
lods
push
out
mov
fiadds
adc
aam
jmp
cs
push
loopne
mov
inc
fwait
add
adc
push
in
push
sbb
mov
or
insb
ss
sub
pop
xorl
jo
xor
xchg
sbb
das
in
mov
jne
imul
push
insl
iret
enter
push
aam
cld
mov
aam
outsb
adc
xor
lret
fisubs
psllq
fs
cli
pop
or
pop
nop
addr16
sbb
sbb
and
push
push
push
jp
out
mov
cmpsb
push
test
push
jae
jecxz
shll
cmp
pop
or
inc
mov
pop
fwait
inc
test
add
sub
fdivl
aam
stos
xor
bound
xor
mov
jae
rorl
stos
cmp
shrl
mov
mov
push
mov
jmp
mov
fcomip
leave
pop
in
mov
push
mov
pop
sbb
inc
lods
fstpt
pop
in
mov
pop
in
sub
cmpsb
or
iret
addr16
mov
mov
mov
sbb
sbb
dec
xor
inc
sbb
mov
jb
push
xor
xchg
dec
adc
sti
sub
pop
xor
add
fcmovnu
jno
shl
dec
or
rclb
push
lahf
ret
int3
in
clc
div
push
push
jno
std
sub
xchg
mov
mov
mov
loopne
dec
mov
mov
sbb
adc
mov
mov
popa
icebp
ljmp
sarl
cmp
inc
push
inc
dec
aaa
dec
mov
outsb
rcl
test
popa
lods
hlt
mov
dec
cld
jp
mov
fsubl
out
inc
and
cmc
shll
and
adc
fs
pop
aad
sbb
sbbl
adc
push
sub
das
movsb
pop
dec
shrb
loopne
in
gs
stc
insb
and
adc
pop
daa
jne
push
cli
cmp
push
popa
xor
mov
xchg
sbb
xor
xchg
xor
mov
mov
xchg
in
fimuls
in
xchg
das
xchg
sub
lds
loope
scas
sarl
repnz
mov
pop
not
out
adc
push
and
sbbl
jecxz
or
sbb
fsubs
adc
cmc
std
or
in
movsb
ret
fucomip
in
cmp
dec
push
sub
clc
lret
or
jmp
ret
xchg
hlt
loopne
mov
cmpsb
mov
sbb
or
pop
adc
cmc
jle
jp
scas
push
int3
sub
jnp,pn
ror
and
aas
xchg
outsb
inc
or
lahf
mov
jp
test
mov
xchg
push
gs
cld
mov
add
sbbl
mov
xor
jb
mov
sub
jecxz
sub
dec
or
mov
cmp
and
scas
push
push
inc
xchg
adc
cmpsb
test
lock
sbb
mov
mov
sub
lret
push
push
test
lret
dec
jae
xor
ds
xor
mov
mov
xchg
push
adc
adc
in
int3
sahf
pushf
push
jo
adc
inc
into
sbb
sbb
cmpsl
pop
mov
and
jb
push
mov
ljmp
adc
insl
out
xchg
into
leave
push
mov
sahf
pop
sbb
mov
out
aaa
push
lock
push
push
xlat
push
fwait
loope
dec
add
test
in
sub
pop
mov
add
ljmp
or
xchg
icebp
push
ljmp
push
into
cmp
fidivl
xchg
lds
loop
dec
pushf
pop
mov
or
and
mov
gs
cmp
sub
or
mov
or
stos
in
mov
nop
andl
insl
inc
in
jl
cmp
jecxz
cltd
sbb
jg
xor
leave
jmp
add
ficoml
add
adc
cmpsb
pop
iret
add
adc
adc
jecxz
lods
mov
iret
cli
js
adc
pop
ds
inc
adc
xlat
fcmovb
test
mov
add
push
xor
mov
aas
bound
mov
out
mov
fcmovnbe
jle
mov
enter
mov
adc
into
mov
mov
push
jne
push
popa
inc
dec
hlt
push
sahf
fwait
sub
xor
jp
fdivl
incl
bound
aaa
movswl
jp
adc
dec
and
or
fs
pop
je
fisubrl
insl
sub
gs
ret
fs
xorb
xchg
lds
ljmp
cmpsb
cmp
and
sbb
push
adc
mov
pop
mov
scas
jg
insb
popa
lcall
lret
mov
lcall
mov
push
out
test
stos
int
push
sbb
mov
aad
sti
or
jmp
mov
jbe
inc
fisttpl
out
aaa
add
mov
test
bound
mov
xor
push
cmp
jne
adc
push
test
sub
cltd
and
or
loopne
inc
mov
lcall
add
xchg
psllq
fadds
xor
enter
out
pusha
xor
adcb
dec
data16
add
add
mulb
out
cmp
xlat
cmp
leave
add
test
daa
jp
dec
ret
ret
insb
or
xor
sub
jg
sbb
xchg
and
xchg
push
aas
fldenv
xlat
inc
cmp
faddl
in
in
fcmovnu
adc
movsl
test
xchg
ret
aad
pop
ret
aad
sti
inc
mov
adc
aad
aam
lods
push
xor
fs
ja
adc
adc
outsb
push
and
mov
gs
xchg
push
arpl
pop
in
and
cltd
lds
or
jecxz
sub
mov
iret
push
cmp
mov
adc
jg
mov
push
pop
push
pop
frstor
insb
xchg
ficompl
push
ret
mov
fwait
fs
rorb
aas
push
sbb
jns
out
in
leave
xor
xlat
inc
cwtl
pop
in
rcrb
pop
add
push
shrb
out
cmp
sbb
les
sub
add
fnstenv
inc
fs
add
pop
mov
adc
idiv
mov
and
icebp
cmp
push
outsb
cmc
int3
fstl
pop
or
icebp
sahf
mov
out
cmp
sbb
mov
sbb
test
icebp
add
add
std
adc
inc
nop
cs
dec
shrl
incl
arpl
stos
or
jb
out
lret
and
sub
dec
pop
push
ds
fs
cmp
or
or
lcall
mov
cmc
push
sub
shlb
repz
or
add
in
mov
jne
pop
and
sbb
mov
mov
in
mov
stos
into
jb
rcr
fisubs
je,pn
push
lods
and
add
cmpsl
push
xor
lock
cmc
in
lahf
cmp
cmp
jb
rol
xchg
ret
enter
movsl
xchg
cmpsl
sbb
icebp
stos
scas
pop
aaa
mov
inc
insl
subb
hlt
or
pop
lock
mov
and
dec
mov
sbbl
ret
push
sub
loopne
push
sbb
xchg
jae
sub
pop
scas
gs
addr16
dec
mov
push
lret
mov
mov
cmpsl
mov
stc
sub
imul
cmc
jg
mov
push
jge
push
inc
sbb
in
xchg
in
inc
mov
add
xlat
mov
pop
push
inc
out
lods
jb
push
insb
push
inc
out
push
test
cmpb
icebp
dec
mov
dec
jecxz
xor
inc
movsl
xchg
lods
jb
aad
or
or
xchg
jno
cmc
add
or
imul
int3
xchg
fldln2
fdiv
sub
loope
shl
mov
stos
mov
mov
pop
mov
mov
inc
push
xchg
pop
add
jae
and
push
addr16
inc
mov
and
inc
fldenv
jecxz
pop
jo
es
orb
ja
bound
dec
inc
mov
sti
call
leave
mov
jo
sbb
xlat
daa
popa
into
bound
push
push
pop
mov
in
les
addr16
out
sbb
xor
mov
mov
inc
lcall
jo
push
ja
stc
mov
rclb
in
xchg
jns
cmp
jl
mov
sarb
jl
sti
lds
fnstsw
push
mov
xchg
aas
sub
cli
push
mov
pop
sbb
mov
iret
or
out
repnz
pop
inc
stc
or
iret
aas
sub
gs
cmp
jns
cltd
daa
mov
push
in
jnp
xchg
cld
dec
cmpsl
push
cltd
pop
out
or
mov
sbb
ret
dec
iret
mov
xor
jns
rcrb
inc
xlat
jg
shlb
inc
pushf
push
jge
or
mov
and
add
in
or
jno
lahf
fwait
mov
addr16
dec
decb
dec
mov
xchg
mov
iret
jb
repnz
mov
inc
sti
mov
mov
dec
stos
scas
mov
in
sbb
in
loope
xchg
cmpsb
jl
inc
xor
mov
leave
sub
cmp
dec
mov
xchg
in
push
fmuls
stc
push
inc
nop
pop
cmp
xchg
pop
pop
xchg
or
and
and
push
mov
cmp
pop
jp
jno
or
out
shll
rcr
jo
push
mov
or
test
add
mov
js
cltd
icebp
loope
adc
inc
shlb
in
push
aas
xor
fistpl
inc
jge
pusha
rcll
or
inc
jmp
out
mov
jns
mov
scas
loope
fstl
xchg
sarl
dec
adc
enter
outsb
and
out
jg
arpl
sub
cmp
stc
inc
and
mov
lcall
adc
jnp
cld
jns
cli
mov
push
pop
idivb
sbb
js
xor
push
pop
mov
pusha
lret
pop
cmp
pop
and
sub
xchg
out
testl
push
aas
cmp
mov
cmp
jb
sub
test
les
cmp
pop
xchg
aam
movsb
pop
out
adcb
in
or
ss
loop
andb
mov
mov
adc
push
jbe
xchg
aam
inc
les
in
repz
inc
loope
xchg
insb
je
icebp
ds
into
cmpsl
pushf
mov
mov
cmp
imul
fbld
sti
add
jge
mov
je
aam
push
mov
hlt
inc
pop
xchg
stos
rcll
dec
pop
cmp
sbb
mov
loope
lahf
scas
mov
and
pop
inc
lds
repz
aad
test
mov
add
sub
mov
clc
push
jp
jo
das
in
jae
adc
pop
xchg
xchg
or
mov
cld
imul
sbb
jne
lret
mov
jno
or
jp
pop
cmp
cmp
cmp
cli
push
gs
pop
dec
lods
mov
mov
push
mov
popf
popf
push
cmp
lahf
mov
pop
rorb
add
mov
push
enter
shll
pop
jl
xor
push
mov
jmp
xlat
jp
jmp
cmp
je
sub
fnsave
leave
pop
or
std
lea
addr16
sub
cltd
in
inc
xchg
imul
movsl
adc
repnz
pusha
dec
jl
sbb
clc
fwait
jecxz
mov
xchg
inc
mov
call
out
mov
insl
push
rorb
fs
iret
call
pushf
xchg
jne
fwait
sbb
push
daa
call
xchg
cmpsb
sub
jne
cmp
ljmp
xlat
and
mov
cld
dec
scas
dec
inc
ret
outsb
mov
sub
mov
jp
aaa
push
cmpsl
popf
in
and
out
inc
and
mov
shrl
pop
mov
in
in
loopne
xor
mov
test
jle
mov
in
inc
and
int
push
addl
mov
pop
out
sbb
outsb
test
add
sub
cmpsl
pushl
add
cwtd
std
jl
out
shll
out
xchg
scas
cli
dec
lods
stc
hlt
dec
pop
sub
push
mov
or
out
inc
inc
std
aaa
adc
fucomip
inc
in
pop
and
cmpsb
inc
inc
movsb
shll
sbb
loopne
shl
push
mov
nop
lahf
push
xlat
mov
xchg
push
sbb
imul
inc
xor
mov
loope
lods
pop
pop
xor
and
or
cli
shrb
insl
and
xchg
pop
xor
out
xchg
inc
dec
jae
loop
mov
test
insb
lods
ss
inc
xchg
ja
jge
rcr
jmp
bound
adc
jle
insl
push
xchg
push
clc
adc
xchg
adc
pop
aam
lcall
pop
pop
jmp
cmovns
push
jo
aad
xor
inc
mov
mov
mov
or
mov
sub
jae
add
or
pop
mov
lods
fwait
or
cmp
mov
int
pop
xchg
lds
ss
push
add
fisttpl
mov
loop
push
jge
sbb
jno
js
push
push
pop
out
sub
xlat
xchg
test
lods
mov
inc
sahf
loopne
test
xchg
stc
xor
stos
xchg
in
pop
add
jl
jo
cmp
lea
ja
push
jnp
call
push
inc
dec
mov
daa
push
sub
into
js
sbb
sub
stc
jo
les
add
dec
xor
sti
push
adc
mov
pusha
leave
adc
lods
gs
outsb
ffree
repnz
mov
call
jmp
add
jne
cmp
mov
imul
mov
push
push
adc
dec
inc
pushf
xchg
dec
add
loopne
aam
cmp
or
mov
movsl
pop
jbe
dec
dec
mov
inc
add
ret
xchg
pop
inc
mov
cmp
mov
je
shld
ret
out
ljmp
pop
lods
data16
test
inc
movsl
addr16
filds
push
mov
pop
sti
add
repnz
ss
int
ss
cmp
push
fdivrp
jl
imul
add
add
xor
cmpb
fcoms
and
push
lock
mov
clc
xchg
push
and
enter
pop
xor
stc
sbb
sbb
mov
popl
jnp
jl
and
lret
dec
sub
push
jg
mov
andb
push
lods
fucompp
sub
aas
iret
pop
jno
nop
jle
xor
and
sbb
cmp
test
movsb
mov
mov
cmp
push
mov
adc
mov
adc
lock
subl
lahf
int
lret
fdiv
cmp
xorb
data16
idiv
add
lds
push
add
roll
ret
pop
out
and
lds
inc
fs
mov
jg
incl
iret
stos
cld
fnstenv
mov
mov
shlb
adc
mov
mov
mov
popf
jb
jne
sub
loope
imul
addr16
aam
bound
into
push
dec
mov
aas
mov
mov
addr16
out
aaa
jbe
iret
mov
xor
cmp
je
xor
popf
addr16
popf
negl
push
pop
outsl
sarb
xor
lahf
rcrb
subl
fiaddl
fwait
call
xor
sbb
jne
dec
cmp
rcrl
in
popa
fcoml
inc
sbb
scas
pop
lods
cwtl
push
subb
das
ja
orb
mov
sbb
inc
sbb
fists
cltd
cltd
mov
shlb
sbb
into
jbe
push
mov
mov
sub
sbb
fdivrs
jns
dec
xorl
orl
shl
and
jno
js
testl
pop
add
adc
ret
add
scas
jg
sbb
dec
pushf
pop
xor
fstpl
cmp
lcall
or
push
inc
xor
fs
popa
dec
sbb
mov
pop
ja
fs
and
mov
imul
test
into
mov
push
inc
divl
fistpl
or
mov
cmpb
xchg
rorl
jae
sbb
cmpb
xchg
xor
fisttps
fcoml
insl
inc
dec
lahf
mov
mov
xorl
ljmp
lret
xchg
call
ds
adc
push
adc
scas
insl
or
xchg
inc
jmp
sbbl
popa
mov
push
mov
sbb
js
adc
push
popf
or
fsubl
mov
rcr
lods
inc
sub
sbb
jbe
ret
rolb
or
xchg
mov
mov
adc
mov
shlb
sti
inc
ljmp
loop
or
mov
int3
xchg
test
fs
div
lcall
xchg
jl
aam
rolb
sbb
mov
jb
mov
psubq
xchg
mov
fmuls
call
nop
sbb
cli
iret
jnp
push
shlb
call
ret
pop
jmp
jbe
out
sub
and
xor
xchg
movsl
rorl
pusha
lods
ss
and
incl
cmpsb
ja
xchg
loope
movsb
test
cmpsl
rclb
inc
xor
jp
xchg
add
scas
xor
add
arpl
scas
pop
icebp
xchg
and
add
sbbb
test
fwait
adc
ljmp
pmaxub
in
sub
xchg
push
dec
std
aad
les
jbe
lcall
xor
sarl
sahf
lahf
sbb
jl
bound
aam
jmp
jo
or
and
adc
sub
inc
insb
ss
mov
xor
mov
mov
add
ds
stc
fwait
push
jae
stos
sti
cs
cmp
out
ja
push
sub
and
mov
sbb
int
cmpb
mov
mov
mov
loop
xchg
mov
loop
pushf
loope
cli
imul
push
mov
jle
add
sub
loopne
jnp
fcomps
out
sub
in
add
gs
jp
push
lret
xor
adc
ss
jp
mov
sbb
fstps
insl
inc
sub
jl
test
cmc
sarl
jne
pop
pop
scas
fidivrl
sub
push
mov
jle
mov
mov
loope
cmp
addr16
mov
out
fdivrl
repnz
cmp
sbb
or
jno
into
mov
inc
push
cmpsb
int
mov
adc
stc
icebp
sti
xor
or
sahf
mov
mov
inc
ror
push
loop
pop
inc
cwtl
es
fsubs
mov
rcr
and
ljmp
imul
mov
sub
adc
xlat
icebp
and
cmp
scas
xor
stc
ret
into
stos
sub
jne
out
das
sub
jo
mov
xor
dec
movb
push
adc
cli
addb
lock
inc
cmc
sub
cld
cmpb
mov
mov
adc
out
daa
bndstx
sti
adc
xchg
fisttps
dec
insb
ds
mov
or
pop
jp
xchg
jno
and
sbb
jno
push
call
sahf
add
adc
add
in
leave
jmp
rcr
test
add
cmp
and
push
jg
int3
adc
lea
sub
dec
cmp
mov
mov
pop
jmp
lea
add
fadds
enter
sbb
cmp
push
ds
loopne
repz
shrb
xor
mov
dec
aad
dec
test
inc
lahf
popf
ret
jbe
div
xchg
inc
mov
xchg
adc
gs
inc
push
xchg
dec
sbb
sbb
push
pushf
jb
cld
pop
mov
xchg
arpl
and
mov
call
jb
xor
cmc
aas
data16
dec
cmp
push
sbb
in
dec
dec
pop
outsb
add
ss
fisubrl
cmp
shll
adc
bound
xchg
pop
das
inc
cmp
jo
sbb
les
gs
dec
rcll
dec
add
lock
cmp
sbb
push
fnsave
or
cwtl
cmp
stc
jne
mov
ja
xchg
mov
mov
in
ss
fwait
push
daa
add
mov
lods
sub
outsl
lods
or
icebp
jbe
cmp
ret
sub
stc
clc
fbstp
push
test
nop
xchg
mov
jp
negl
les
pop
mov
mov
pop
imul
sub
push
ret
xchg
icebp
ss
ror
mov
pop
repnz
adc
jl
pop
mov
rolb
cmp
std
sub
lock
inc
mov
lret
pushl
mov
dec
scas
aam
lcall
enter
adc
or
adc
mov
cmp
rcrl
test
rolb
and
adc
cli
addr16
das
repnz
shll
out
daa
std
mov
jge
ss
xchg
sub
aad
mov
mov
mov
sub
daa
jae
cmp
dec
push
push
dec
pushf
in
jb
int3
pop
jbe
jbe
fimull
lds
or
lods
cwtl
and
mov
and
cmp
sub
pop
insl
out
ja
xchg
mov
clc
pop
mov
lods
ljmp
mov
adc
bnd
xor
shl
sub
out
mov
xchg
ljmp
sbb
sub
popf
xchg
in
repnz
jge
in
push
jg
mov
cmpsb
mov
iret
ljmp
sub
mov
je
imul
dec
add
fmuls
push
mov
jle
pop
inc
push
inc
cs
xchg
insb
cld
mov
sub
nop
aas
dec
les
loop
push
mov
inc
or
pop
ss
xor
dec
movsl
mov
jb
jecxz
pop
jnp
mov
push
cmp
jne
or
hlt
call
adc
sbb
pushf
cs
scas
icebp
lds
and
mov
in
pushf
dec
dec
dec
out
cld
mov
pop
icebp
xlat
push
jno
fwait
sbb
xchg
ds
pop
lahf
in
mov
jns
icebp
jbe
lods
adc
out
nop
fsubrl
hlt
gs
test
pop
std
pop
lahf
jp
stos
enter
rcrb
ret
mov
lcall
push
sub
stos
mov
adc
xchg
and
mov
lret
cltd
sub
js
leave
pop
sub
sub
mov
mov
cltd
shlb
sahf
outsl
mov
jmp
push
adc
xor
lret
xor
add
dec
push
divb
xor
jbe
popf
sbb
sbb
sarb
in
addl
pop
inc
in
push
push
cmpsl
push
pop
jp
jmp
xchg
mov
imul
movsb
fcomps
xchg
sti
mov
xchg
mov
lahf
mov
clc
jp
cmp
test
mov
sbb
xorb
xor
gs
sarl
dec
out
stc
sbb
xchg
lret
xchg
gs
pop
or
jae
loopne
mov
insb
sarb
mov
dec
aas
sahf
cmp
jle
idivl
and
sub
or
mov
jnp
les
pop
cmp
jmp
and
add
ror
aam
add
push
xchg
jg
xlat
sahf
shl
xor
jl
loop
data16
mov
movsb
lret
test
cmp
jle
pop
jle
xchg
arpl
xor
pop
movsb
add
insb
xor
pop
fstl
or
dec
fildll
roll
out
gs
in
gs
orl
cli
xor
xchg
lahf
lock
or
push
nop
in
out
aam
mov
mov
jl
xchg
push
add
dec
xchg
pop
iret
enter
int3
popa
cs
or
push
lds
stos
pop
sbb
stos
jno
sbb
pop
nop
ljmp
movsb
addr16
adc
push
jns
cld
sbb
or
movsb
jnp
jae
jge
dec
stc
shrl
jle
fsubrs
ret
and
fmull
inc
lds
jmp
xor
mov
test
inc
mov
cs
jl
add
jge
mov
aas
das
cli
addr16
test
lcall
sti
rcl
add
jne
sub
sbb
mov
pop
mov
shll
mov
test
ljmp
sar
dec
lahf
mov
jmp
out
pop
jl
icebp
mov
fiaddl
outsb
sbb
push
xchg
andl
adc
fildl
inc
push
aaa
mov
xchg
push
mov
lret
push
xor
testl
mov
std
ss
jl
sbb
cmc
pop
push
push
or
das
push
sbb
in
adc
or
or
negb
mov
lea
inc
mov
addr16
push
xchg
into
rcll
sbb
cmc
rcrl
or
sahf
xchg
jecxz
sbbb
call
and
dec
clc
shlb
ja
sub
and
pop
test
cs
ds
test
out
lahf
icebp
loope
icebp
call
lret
and
ds
jmp
xor
mov
xor
xor
addr16
fidivl
push
pop
shlb
fnstcw
sbb
sbb
adc
pusha
outsb
add
lahf
imul
or
fwait
jo
loopne
add
imul
push
ds
cmpl
or
ljmp
lock
push
adc
data16
fistpll
dec
mov
shlb
inc
pop
leave
repnz
or
push
mov
mov
xor
mull
xchg
mov
call
faddl
in
cli
outsl
push
add
rolb
xchg
sub
mov
xchg
bound
je
in
scas
je
lods
cmpsl
add
push
push
cmp
cs
cld
aaa
arpl
lahf
jp
ret
pop
pop
in
iret
pop
add
pop
push
fst
xlat
push
cmp
xor
aam
test
sub
push
xchg
push
xchg
dec
nop
pop
aaa
inc
neg
jnp
imul
xchg
test
imul
dec
js
lcall
xchg
and
mov
movsl
or
jmp
stos
idiv
aad
shlb
out
lods
pushw
inc
inc
sub
mov
cltd
arpl
dec
test
daa
jnp
sbb
pop
inc
nop
inc
lcall
cmp
stc
ret
push
stc
les
fidivrs
or
xchg
push
add
fs
xor
jnp
ss
or
lcall
fdivr
sub
jmp
sbb
sbb
sub
pop
daa
in
lret
fsubrs
add
jbe
and
lcall
sbb
out
mov
incb
push
call
jb
xchg
and
enter
inc
mov
loop
scas
sbb
jae
mov
adc
jne
mov
imul
dec
cmp
sub
cmc
cmpsl
stc
fcmovne
jp
jecxz
int3
out
js
and
mov
xchg
insb
ds
lea
sahf
cs
movsb
insl
sbb
sub
shl
xchg
sti
jne
into
push
imul
mov
or
adc
inc
jne
hlt
xchg
xor
or
jl
jb
xlat
xor
inc
lods
bound
mov
call
lods
insl
and
xor
mov
dec
data16
repnz
repnz
lcall
mov
add
repz
pop
in
mov
xchg
fsts
and
mov
add
inc
and
mov
loop
sbb
clc
xchg
and
mov
cmpsl
mov
and
sub
popf
and
lret
push
out
hlt
lea
aas
out
xor
xor
imul
dec
push
mov
pop
outsb
xor
ret
mov
dec
outsb
and
movl
shrb
or
add
adc
or
dec
scas
mov
cld
pop
dec
test
cmp
add
insl
inc
shlb
push
aas
lds
or
lret
cmp
neg
mov
pop
stos
mov
cmpsl
cli
out
xor
jp
in
loop
repz
add
sahf
or
mov
daa
cmpsl
or
fldenv
rcr
xor
xchg
lea
iret
cmpsb
push
inc
lods
repnz
dec
add
stc
ret
out
nop
jmp
push
iret
fisttpl
jo
jno
test
jbe
inc
jns
inc
lahf
daa
mov
jnp
mov
cmpsl
sti
and
dec
mov
pop
xchg
xor
mov
push
test
mov
push
add
and
popf
push
jmp
fcmovnu
jecxz
out
lahf
ror
push
jg
push
aas
inc
mov
ds
addb
shlb
sarl
mov
or
sbb
mov
sti
out
sub
data16
dec
adc
insb
icebp
mov
pop
pusha
dec
stos
call
fwait
dec
mov
repz
push
mov
cld
fistl
push
push
add
popf
mov
insl
cld
adc
divl
lods
inc
leave
or
sar
push
inc
jno
out
push
ja
dec
inc
rcl
shll
sbb
pushf
sub
jb
lret
scas
dec
jae
or
push
movsl
sti
dec
inc
and
rep
jge
movsb
sbb
bound
iret
loope
ds
adc
push
sti
lods
xor
addr16
xor
aaa
fstl
pop
xor
push
imul
movsl
subb
in
mov
fisttpll
and
and
idiv
call
icebp
adc
les
cmpsb
cmp
sti
xchg
push
mov
cs
je
sbb
lcall
mov
fdivs
shufps
xor
mov
push
inc
inc
cmpsb
shrb
rcrb
sub
jmp
jmp
inc
sbb
cmpsb
test
and
and
test
mov
jmp
pop
sub
add
sub
mov
clc
das
push
xor
subb
fwait
sub
nop
imul
mov
mov
pop
mov
pop
idivb
or
adc
jmp
adc
or
fwait
sbb
iret
xor
mov
outsb
push
sub
dec
cmp
dec
cmpsl
aas
test
cmp
mov
jl
and
sbb
mov
loope
sbb
fs
jle
ds
adc
dec
stos
scas
lret
dec
cmp
push
push
lcall
push
in
cmp
jmp
outsb
mov
cltd
movsl
and
ja
out
in
xorb
lds
stos
lret
adcl
cmpsb
push
aas
pusha
jmp
aad
push
cmp
in
aad
xchg
or
out
jb
aad
cwtl
out
sarb
insb
icebp
push
leave
nop
push
sbb
mov
sar
movsb
xor
pop
jl
pop
push
test
mov
push
movsl
cmp
jg,pt
in
xchg
test
xor
out
int3
pop
cmp
pop
movsb
mov
mov
aam
xor
cld
sub
les
mov
ljmp
jnp
jg
in
imul
cs
sbb
insb
test
les
mov
or
mov
inc
jbe
jne
rol
mov
xor
pop
fdivrp
call
xchg
push
scas
xchg
push
sbb
pop
sub
cmp
aas
outsb
inc
ficoml
call
gs
cli
pop
mov
push
aaa
add
test
pop
aaa
mov
jno
gs
loop
sub
sub
in
sti
negb
es
and
xor
jmp
ss
int3
stc
test
push
mov
out
cli
in
or
outsl
adc
or
mov
xchg
push
inc
push
in
jmp
pop
add
lock
lea
sub
sahf
jbe
mov
lock
mov
fnstsw
adc
sbb
push
inc
outsb
lret
mov
xchg
jnp
mov
sub
pusha
shl
popf
cmpb
stos
and
cmpsb
test
loopne
sub
add
mov
lods
jnp
pop
or
sti
mov
and
inc
pop
and
mov
in
mov
jae,pt
dec
lret
mov
jae
adc
mov
and
ss
jp
movsb
mov
pusha
xchg
iret
shrb
cs
dec
and
in
sbbl
fdivl
xchg
cmp
sbbb
out
push
ret
popa
jp
inc
pop
aaa
out
sub
ss
sub
sbb
scas
push
ds
and
jecxz
mov
imul
sahf
sub
adc
xor
cmp
xchg
outsl
aad
mov
icebp
sub
aas
jnp
mov
lea
leave
pop
imul
je
test
cmp
jb
cmpsb
lock
mov
mov
jecxz
movsb
addr16
das
push
das
ficompl
push
fnstenv
test
das
stc
mov
pop
test
or
in
and
sub
rcl
push
sub
inc
or
test
xchg
or
add
push
xor
sbb
je
call
push
icebp
sub
sbb
outsb
and
jp
push
je
xchg
cwtl
cmp
inc
into
les
mov
push
ja
mov
cltd
add
lods
into
cmp
pop
shl
inc
insl
jmp
inc
popa
inc
pop
out
mov
add
push
pushf
in
push
push
lret
jb
sbbb
movsb
xchg
test
sbb
xchg
xchg
jmp
ret
adc
xchg
out
pusha
jge
test
jns
addr16
lcall
fxch
nop
cmc
shrl
jbe
aam
fbstp
ret
mov
push
ss
leave
and
or
push
js
inc
cmc
popa
jg
scas
dec
push
insb
jb
mov
lock
lods
cli
pop
inc
adc
mov
add
inc
add
sbb
pop
dec
and
int3
lds
push
sub
push
ss
jmp
sar
mov
outsl
lock
hlt
sub
xor
fwait
stos
cmp
mov
rcr
cmpsb
mov
mov
inc
sub
outsb
push
jl
cmpsb
mov
add
in
jnp
out
fsubrl
adc
sub
pop
repz
in
imulb
jne
rcr
jae
sub
pop
sahf
sti
outsl
aam
sub
and
pop
dec
mov
xchg
inc
out
sbb
test
lcall
dec
or
mov
inc
jle
or
mov
add
pusha
cs
sbb
jne
mov
mov
and
and
mov
jns
lds
enter
aam
xchg
jb
aad
mov
loope
mov
sbb
and
es
inc
sti
dec
and
xchg
push
pop
shll
hlt
insb
jmp
mov
cmc
insl
pop
sti
shll
fwait
sarl
push
xchg
jns
jecxz
pop
les
out
dec
fildll
outsl
fmuls
xlat
sbb
test
sub
or
lea
or
or
xor
ret
out
filds
je
cmp
adc
scas
pop
lods
jb
sbb
add
xor
aas
lds
mov
sbb
or
in
int
mov
aas
lods
pop
or
aas
js
arpl
xor
adc
sar
dec
pusha
pop
mov
clc
loop
arpl
xchg
or
je
inc
inc
and
imul
jl
lds
arpl
cmp
mov
sub
lock
fidivs
cli
clc
scas
lods
lahf
cs
mov
jb
mov
cmpsb
sub
enter
lret
cmp
jbe
in
mov
add
aad
xchg
dec
ret
jbe
sub
push
pop
xchg
lret
int
sbb
js
cld
xchg
mov
out
jg
pop
push
imul
ret
idivl
sbb
imul
loopne
jmp
aad
pop
inc
jge
push
lock
inc
sahf
jle
dec
jp
xor
or
add
outsl
in
push
xor
insb
out
inc
inc
ss
mov
and
in
nop
cmp
mov
leave
scas
xchg
mov
push
in
sub
scas
lahf
movsb
mov
lock
sar
leave
in
outsl
mov
mov
pop
decl
mov
pop
pop
fsubrl
mov
bound
cmp
jmp
mov
popf
cmp
inc
sbb
fisttps
ss
testb
fs
mov
and
jbe
aam
mov
out
repnz
sub
mov
fsubrs
add
movsb
das
mov
pop
pop
mov
ficoms
dec
shlb
cmpsb
int
insb
cmp
push
sub
pop
and
imul
and
mov
cmp
adc
xchg
jne
in
or
shlb
mov
add
fcomps
clc
fstpl
bound
pop
mov
call
push
addl
push
insl
mov
lea
in
sub
rcr
and
aaa
cmc
mov
lock
xchg
and
fisubrl
xlat
out
pushf
into
adc
mov
and
das
aaa
test
sahf
jno
pop
pop
push
mov
fistps
outsb
or
cmp
xchg
test
lods
pop
xchg
or
scas
icebp
out
test
iret
test
lods
jg
mov
jle
daa
loop
sub
outsl
push
jb
fs
scas
rolb
hlt
insb
icebp
pushf
jle
xor
pop
cwtl
out
and
xor
adc
lds
stos
sbb
cmp
negl
ret
push
bound
daa
repz
jl
and
daa
xlat
lock
loope
in
jecxz
xchg
add
adc
shlb
out
and
lcall
jne
test
scas
xor
sub
jb
cmp
je
mov
imul
xor
loop
fwait
or
mov
lods
jl
adc
push
lahf
xchg
and
xlat
adc
jno
es
pop
adc
mov
hlt
mov
push
sbb
pop
pusha
out
sbb
lcall
sbb
in
cmp
jmp
shrl
mov
fisubrl
into
jne
mov
adc
loope
add
or
add
push
aad
incb
cmpsl
in
stos
cmc
dec
lcall
jns
and
mov
add
jbe
std
xchg
fistpll
das
mov
insb
arpl
sahf
outsb
mov
mov
cmpsl
xchg
or
sbb
xchg
imul
add
mulb
lock
mov
mov
pop
fistl
into
ret
cli
addb
test
mov
xchg
mov
pop
pop
jne
jmp
lret
dec
inc
inc
jge
repnz
fcomps
adc
int
cld
test
stos
fwait
iret
inc
jecxz
scas
in
fidivl
jg
adc
testl
and
mov
es
dec
adc
loop
flds
popa
sarb
pushf
sub
stc
or
ds
daa
pop
ljmp
pusha
sbb
jns
sti
icebp
xchg
fstl
mov
and
or
mov
push
inc
aad
lret
enter
rorb
fidivrl
cli
test
add
xchg
stc
popf
sub
incl
fisubrl
stc
push
movsl
pop
cs
js
inc
inc
sub
enter
sbb
jp
mov
mov
mov
add
inc
aad
fnsave
mov
je
mov
das
xor
icebp
inc
pop
jmp
fisubrl
cmpsl
xorl
xchg
sub
out
pushf
leave
and
roll
jp
mov
enter
pop
js
lods
mov
sbb
lods
xchg
pop
add
fs
xor
add
test
enter
aad
cmp
mov
repz
loop
adc
mov
mov
lcall
mov
cmpsl
ret
insb
out
enter
shll
outsl
mov
clc
jb
jmp
mov
fmul
ret
lcall
adc
out
sub
outsl
outsb
dec
sub
out
pop
pop
cmp
rsqrtps
mov
nop
out
add
dec
dec
jmp
fs
hlt
mov
daa
test
pop
jb
test
pop
jo
pop
nop
lock
clc
iret
adc
xchg
xchg
adc
je
sub
adc
cmp
fisttpll
out
pop
mov
les
cmpsl
es
lea
rclb
fwait
mov
ds
loopne
scas
jne
cld
movsl
xor
mov
xor
mov
push
xlat
xor
sub
gs
loop
rcrb
mov
fdivs
cmp
jg
mov
mov
xor
shrb
jp
jp
pop
fisubs
lahf
repnz
adc
pop
setp
out
iret
pushf
mov
aad
ret
fistps
out
xor
jg
lods
mov
out
hlt
outsb
jae
mov
lahf
mov
xchg
js
mov
pop
sub
ss
push
sbb
negb
dec
mov
sub
mov
push
dec
enter
fdivrs
repnz
xchg
in
ret
jge
jo
pop
mov
add
stos
out
jne
fldpi
jle
in
jge
mov
mov
cmpsb
inc
ror
or
mov
aaa
stc
gs
js
inc
pushf
push
fistpl
enter
mov
loopne
aas
pop
icebp
fdivr
shll
fwait
shll
jbe
aas
inc
push
xchg
mov
call
mov
mov
popf
push
cmp
lea
stos
xor
icebp
add
and
mov
mov
sbb
xchg
xor
mov
jg
arpl
clc
int
adc
dec
push
rcr
sar
cmpsb
je
dec
scas
adc
mov
adc
add
icebp
pop
leave
cltd
aad
jnp
xor
push
repz
fildl
in
notl
loope
mov
and
sar
and
push
xchg
iret
test
pop
test
push
and
push
add
and
jle
shl
add
dec
pop
add
decl
mov
xchg
and
stos
jmp
lods
enter
jb
push
test
dec
xor
sub
fldt
jns
mov
mov
xlat
mov
ffree
cmp
sub
or
sub
das
mov
push
cmp
in
mov
xor
fsubrs
pop
jp
and
cmpb
in
fcoml
jne
out
lahf
rclb
sbb
or
je
insl
rclb
fidivrs
sub
mov
adc
lahf
push
test
pop
sbb
and
lock
mov
repnz
jnp
push
xchg
pop
mov
lret
jns
rorb
jae
sub
pop
add
jo
test
jns
sbb
mov
loop
adc
xchg
test
mov
push
jnp
pop
addr16
dec
in
and
aad
xchg
fcomp
popa
out
clc
repnz
enter
lock
push
xor
mov
fimuls
leave
xor
adc
adc
pop
mov
lahf
jecxz
xchg
mov
add
inc
or
mov
arpl
jl
or
fidivrs
cs
mov
mov
jne
out
dec
call
fidivs
jg
pop
or
push
lret
mov
je
in
mov
sti
bound
sbb
add
out
inc
rcrl
pop
fildll
fs
add
fld
fmull
jge
dec
sbb
inc
dec
inc
xchg
xchg
cs
movsb
pusha
add
adc
repnz
cld
pop
es
ja
adc
dec
in
imul
mov
xlat
ret
mov
inc
pop
add
nop
into
inc
inc
mov
mov
sbb
xchg
ljmp
cmp
ljmp
xchg
loope
push
lret
inc
addr16
mov
pusha
iret
push
into
negl
arpl
jno
xchg
mov
mov
sub
fadd
call
cmp
in
xchg
test
jo
pop
sahf
dec
cmpsl
iret
int
or
popl
cmpsb
jae
pop
jnp
dec
into
xchg
out
push
cmc
lret
rcl
aam
lock
rorb
jge
pop
popa
lea
push
push
dec
idivb
xchg
pop
mov
push
mov
xor
jb
mov
jmp
imul
fisttpll
cmpps
cltd
leave
out
xor
push
mov
xlat
sub
aad
imul
lcall
xchg
xchg
mov
cmc
push
loope
dec
fidivrl
xchg
cmp
dec
pop
and
outsl
pop
notl
cmp
xchg
jbe
clc
sahf
push
faddp
rclb
enter
xchg
cmp
out
je
notl
xor
jg
out
std
mov
cmpsb
mov
lret
pushf
test
mov
cmp
add
in
push
push
ret
cmpb
fcmove
js
cmp
js
cmp
popa
push
je
jmp
sahf
push
out
mov
movsl
scas
pop
push
dec
jmp
jns
mov
cmp
push
xchg
ds
jmp
inc
adc
inc
inc
iret
dec
sub
mov
scas
shr
incl
jne
lods
into
pop
push
ret
outsl
les
fwait
add
cmpb
test
fsubs
xor
js
je
lahf
fdivr
xchg
rolb
cmp
sub
inc
popf
pop
popf
xchg
movsb
lret
xchg
xchg
cld
add
cli
mov
sub
push
dec
fnstcw
pop
or
in
xchg
or
jns
push
test
fistpll
cmp
push
add
mov
and
mov
or
pop
stos
icebp
fisubl
xchg
fimuls
adc
mov
or
out
xor
jmp
dec
pop
inc
enter
shrl
cld
xor
sub
ljmp
xchg
mov
icebp
push
fcompl
mov
push
fnsave
aam
bound
lds
iret
add
enter
dec
dec
dec
pop
or
les
frstor
pop
mov
xlat
xor
pop
daa
clc
mov
jnp
rclb
dec
jl
jmp
push
int
ljmp
adc
divl
movsl
mov
sbb
test
jg
nop
push
fidivrs
inc
xchg
mov
adc
mov
push
xchg
in
fldt
repz
mov
clc
mov
xor
sub
clc
imul
orl
shrl
xor
jl
push
int3
pop
xor
mov
mov
sub
jbe
imul
aaa
movsl
jnp
fs
mov
data16
cmp
jmp
adc
push
outsl
jmp
push
popa
lea
bound
out
and
xor
test
dec
adc
cmp
jmp
mov
nop
cmp
cld
jne
fidivrs
sbbb
mov
test
xchg
jg
mov
mov
push
out
pop
add
add
and
nop
dec
pop
sbb
ljmp
shr
fwait
in
pop
fdivr
mov
add
insb
cld
inc
or
in
inc
inc
incb
pop
dec
std
mov
outsl
int
aas
sarl
fadd
in
aaa
cmp
dec
cmp
cmp
inc
rcl
inc
into
jns
jle
cmp
cwtl
lock
mov
pop
mov
mov
and
or
mov
sub
fsubrs
mov
cwtl
pop
push
sub
mov
and
jecxz
fistl
xor
mov
pop
xchg
stos
sbb
gs
pushf
popl
movsb
jl
sbb
fsubrl
xchg
jno
adc
push
das
and
jne
dec
ja
dec
or
xor
mov
xor
in
jo
adc
fisubl
fimuls
and
push
adcb
pop
shl
push
or
andl
scas
scas
push
dec
data16
xor
call
add
push
jns
cmp
sbb
fmuls
out
push
mov
daa
xlat
jle
jp
xor
and
or
fsubr
loopne
xchg
add
mov
pop
std
rorb
mov
mov
ds
add
dec
and
mov
stc
and
imul
add
and
sub
push
fiadds
mov
dec
xchg
ror
nop
insl
cwtl
scas
icebp
lret
dec
fadds
out
push
cs
cmp
xor
lret
and
popa
mov
mov
movsb
popa
inc
lret
lret
mov
dec
fiadds
or
sbb
cmp
or
in
mov
dec
loop
rep
test
push
push
adc
pop
daa
pop
xor
push
stc
jbe
ss
je
xchg
inc
mov
push
lods
test
imul
dec
movsl
iret
lret
fldenv
cli
jbe
mov
test
cmp
dec
sti
xchg
lahf
xor
mov
std
pushf
data16
xchg
push
dec
xchg
test
loopne
ds
xor
lret
inc
idiv
mov
jae
add
adc
xor
push
bound
gs
popf
mov
imul
popaw
xor
mov
fwait
or
int3
ret
daa
push
in
push
mul
sub
jbe
ljmp
mov
std
inc
aam
dec
fistps
hlt
scas
repz
mulb
shll
xor
mov
mov
lods
sbb
mov
fnsave
or
mov
out
lods
loope
dec
push
jae
inc
stos
cmp
cmc
add
jmp
cmc
push
test
ja
fisubrs
imul
insl
mov
xchg
sub
dec
sbb
nop
jmp
pop
and
push
push
aad
fistpl
mov
iret
lahf
and
sarl
jp
inc
dec
mov
lret
jp
pop
cmc
mov
dec
fisubl
cwtl
stos
popa
call
push
gs
test
mov
add
inc
push
sbb
fst
push
cmpsb
cmp
pop
jp
imul
incl
xlat
dec
push
jecxz
daa
repz
sub
mov
dec
xor
into
mov
rcl
sbb
arpl
loope
movsb
mov
sahf
andb
jmp
adc
pop
xor
imul
xchg
ret
mov
dec
mov
xor
mov
sub
push
movsl
lods
or
addr16
lock
leave
cmp
push
adc
push
add
jno
jo
sbb
test
xchg
aaa
into
inc
dec
sbb
leave
call
lods
sbb
enter
push
jbe
xchg
std
xlat
dec
xchg
mov
fwait
jp
inc
pop
cmpsb
jl
xchg
mov
outsl
out
loope
mov
daa
cli
lds
mov
leave
enter
push
push
lock
add
add
inc
or
xor
loopne
add
cmp
add
andb
mov
sbb
or
ds
ret
cwtl
and
adc
subl
sub
add
in
or
psubd
outsl
pop
test
andb
andb
fiadds
shrb
loop
popa
pop
roll
divb
pop
dec
fsubl
sbb
add
add
adc
xor
fadds
add
mov
or
inc
mov
test
daa
or
adc
cmp
jle
cmp
dec
sub
dec
add
adc
sub
lcall
dec
xor
test
cmp
push
sub
mov
hlt
lcall
sbb
cmp
sub
mov
mov
lcall
dec
into
add
pop
adc
jae
jnp
and
jp
adc
into
mov
adcl
sub
mov
daa
cmp
inc
daa
mov
inc
leave
movsb
pop
scas
js
stos
mov
mov
pop
jne
pop
shll
mov
dec
jo
pop
dec
stos
fsts
sahf
or
adc
repz
mov
and
ss
or
push
test
jp
mov
mov
inc
jge
dec
jnp
jns
or
pop
gs
stos
mov
mov
push
lret
sbb
aad
daa
cmpsl
cwtl
sahf
scas
fcmovne
imul
pop
add
mov
cmpsb
push
cltd
negb
push
cmp
out
cmp
pop
push
xor
mov
cld
lret
lcall
icebp
js
xchg
ficoml
ljmp
pmulhuw
mov
dec
inc
cmp
and
xor
sub
cmp
sub
int
sbb
lods
ss
jo
rorl
xchg
xchg
daa
adc
stc
lret
les
mov
push
mov
sahf
int3
sub
jmp
and
out
int3
stos
test
and
int3
clc
in
clc
xchg
xor
cmp
jl
std
inc
cltd
mov
aad
sbb
insb
mov
scas
out
stc
mov
add
jno
lcall
adc
xor
dec
add
imul
aam
dec
enter
into
out
out
pop
mov
add
orb
js
out
mov
push
xchg
jl
pop
mov
cmp
cmp
mov
daa
jb
mov
pop
or
popa
scas
dec
xchg
cmp
mov
lock
mov
int
mov
pop
add
mov
dec
push
xor
inc
or
fs
fstl
adc
pop
or
add
or
add
mov
cmpb
xor
push
sub
ret
pop
sbb
in
loopne
shlb
inc
rep
fldz
aas
je
push
pop
scas
jb
dec
cmp
xchg
clc
pop
and
adc
jmp
mov
mov
sub
fistps
aad
mov
popa
xchg
cmp
xchg
movsl
dec
mov
xor
pop
xor
mov
jp
sbb
out
std
cmp
and
push
fwait
push
sbb
out
ljmp
mov
clc
imul
lods
sub
jge
dec
pop
push
movsl
stos
jb
and
xchg
xchg
push
lods
iret
and
push
lods
sub
movsb
ficomps
jecxz
xor
sbbl
stc
pop
sub
mulb
outsb
push
rol
test
cmp
adcb
or
int
testb
pop
jg
in
sbb
call
leave
add
sbb
decl
jge
jb
jmp
sbb
push
sub
jmp
inc
mov
fmuls
dec
scas
arpl
add
xorb
les
out
out
fwait
lds
jecxz
or
in
icebp
inc
pop
mov
lcall
into
and
dec
ss
xchg
inc
ficoms
jecxz
xchg
testl
popa
push
sbb
sbb
lock
dec
or
cmpsb
lcall
mov
fcompl
or
push
jno
mov
and
out
ljmp
and
dec
or
pop
push
xchg
std
xor
push
lea
adc
movsb
enter
pushf
fsubrl
jo
xchg
mov
add
cld
int
lahf
jecxz
jno
mov
xchg
pop
iret
xor
or
fcmovu
xor
popf
fistl
jbe
shlb
sbbb
loop
movsl
mov
pop
mov
sbb
loop
andb
aaa
jns
jle
push
add
lea
pop
mov
ljmp
dec
sub
mov
dec
rolb
inc
push
or
aas
inc
ja
push
aas
imul
xorb
and
lock
jge
xlat
fidivl
cmp
fiaddl
shl
loop
int3
fcoms
mov
test
sahf
das
cli
mov
push
and
sub
sub
popa
clc
inc
xor
cmp
testb
clc
adc
cmp
and
add
sub
loopne
ja
dec
mov
xchg
lock
and
jmp
nop
push
mov
and
rcrb
js
shlb
out
shll
ja
jmp
or
mov
aad
int
das
xchg
mov
or
ja
cmpsb
scas
les
idivl
js
mov
xor
mov
into
cli
jecxz
fbstp
cmpsl
add
cltd
movsb
or
pop
xchg
xchg
add
lods
xchg
out
lods
jno
testb
fildl
push
jbe
or
inc
mov
enter
repz
push
in
adc
add
enter
loopne
std
pop
aad
test
jg
inc
mov
sti
jae
mov
xchg
enter
movsb
inc
push
push
mov
xor
pushf
inc
inc
in
mov
sbb
int
lahf
aam
mov
pop
push
aaa
push
push
sub
jl
enter
pop
and
cmc
xor
testb
popa
loopne
ljmp
adc
lods
sbb
jo
dec
sbb
rcl
in
and
sub
hlt
faddl
popf
add
fst
pop
incl
addb
imul
sbb
stos
fwait
sub
or
loopne
int
cmp
pusha
pop
insb
lcall
mov
mov
jecxz
popa
outsl
mov
hlt
jnp
mov
data16
or
pushf
ret
and
and
adc
pop
les
pop
ret
jnp
push
xlat
lea
shll
scas
fsubrp
inc
rcrl
es
jl
sub
sahf
adc
and
mov
clc
fisubl
mov
adc
test
cwtl
xchg
xor
jns
inc
sub
iret
cmpsb
stos
inc
scas
iret
xchg
cmc
sub
dec
inc
adc
ss
repnz
adc
sub
loopne,pn
and
imul
jp
mov
lds
loope
jnp
scas
inc
sbb
mov
int
add
sbb
dec
or
add
dec
rorb
mov
dec
add
hlt
pop
mov
mov
notb
ljmp
adc
xor
xchg
cmpsl
push
sbb
xor
sbb
std
es
jo
add
cmp
sub
pusha
dec
icebp
mov
inc
bound
or
add
jae
jb
push
sub
ds
inc
call
adc
push
mov
insl
outsl
lret
jmp
mov
dec
and
in
imul
cmpsl
pushf
lods
mov
mov
xor
lret
cmp
push
xor
jae
fistpl
pop
insl
mov
pushf
pop
ss
xor
xchg
mov
sti
dec
imul
cwtl
popa
adc
jl
adcb
mov
mov
push
dec
xor
push
sub
mov
arpl
cwtl
fwait
das
pusha
jns
mov
mov
sub
orb
sbb
xchg
cwtl
movsb
mov
fbld
call
fld
cltd
xchg
lahf
and
data16
pop
addl
hlt
daa
sbb
and
add
xchg
insb
ja
sar
mov
fmuls
mov
loopne
mov
mov
xchg
arpl
sub
mov
addr16
xchg
arpl
jns
sbb
sbb
and
mov
sub
pushf
pop
cmp
test
push
fistpl
mov
pop
sub
call
cmc
xor
cmpsl
push
imul
mov
cmp
ret
enter
enter
ja
insl
mov
and
lds
cmc
es
pop
fistpl
ja
sarb
shlb
insl
popf
push
cs
add
jl
pusha
mov
cmp
arpl
jo
sbb
aam
sub
xchg
pop
pop
sbb
outsl
loop
ret
xorb
mov
lcall
sbb
in
out
shr
mov
in
incb
dec
xchg
movsl
iret
dec
stos
inc
dec
adc
sub
push
dec
mov
jb
outsl
and
sar
push
push
ljmp
or
in
cld
xchg
mov
jle
add
enter
test
adc
xchg
out
mov
pushf
and
adc
jnp
xor
pushl
jle
ss
sbb
jmp
jl
out
cmpsb
das
mov
data16
ret
adc
iret
or
loop
xchg
push
pop
das
cmp
rcr
inc
cmp
inc
cmp
test
imul
jg
jno
add
jmp
cli
inc
repnz
nop
jae
add
lock
mov
push
push
fs
xchg
or
test
push
push
lea
loope
std
clc
orl
sub
mov
aad
or
or
dec
jb
dec
rol
mov
push
fidivrs
cwtl
sub
mov
jl
add
jno
dec
mov
sbb
lock
and
mov
hlt
mov
mov
xlat
lcall
jae
ret
push
adc
loope
test
nop
jo
push
stos
mov
jne
je
fsubrs
add
jae
jle
xlat
cmp
shrb
daa
mov
fbstp
dec
lcall
in
scas
xchg
cmp
cmp
ret
ss
loop
lret
bound
push
cmp
sbb
and
shrl
xchg
dec
sub
add
adc
in
dec
cmpsl
aad
and
outsl
ret
dec
pushf
cmp
inc
cmp
sti
xchg
xchg
mov
movsb
cli
mov
add
sarl
fmuls
pop
and
mov
jo
fnsave
pushf
imul
cmpsb
scas
outsl
push
add
xor
adc
mov
mov
mov
popa
mov
mov
inc
adc
dec
aas
jne
mov
loope
popf
xchg
add
jle
adcl
xchg
nop
pop
adc
push
repz
sub
cli
stc
sub
in
sub
or
loope
pusha
sub
xchg
push
jne
pop
mov
cmpsb
ljmp
adc
loope
or
hlt
mov
and
adc
mov
pop
cmc
sub
push
lret
popa
ja
mov
sub
mov
stos
xor
fs
mov
push
cs
push
xlat
ror
iret
inc
insb
cld
adc
sbb
push
in
sbb
repnz
sub
mov
xchg
lret
pop
ret
and
xor
ret
in
pop
ret
add
outsl
xor
jo
jl
sub
stc
fs
ffreep
sub
out
lds
lret
cmpsb
inc
inc
out
or
adc
test
add
or
pop
dec
sbb
xchg
xchg
pop
xor
xor
fidivs
jmp
insb
add
jmp
sub
movsl
in
xor
lods
decb
iret
mov
out
or
arpl
sbb
jb
sahf
push
cmp
inc
ret
rcrl
jle
repnz
lret
and
cmc
push
jmp
add
or
or
test
pop
bound
shrl
xor
lods
sbb
scas
ljmp
adc
dec
xor
shll
add
jmp
mov
adc
xchg
or
jge
fimuls
rcll
or
les
mov
call
add
sub
outsl
fists
or
addr16
mov
or
gs
addr16
fistps
jne
push
push
sub
shrl
xor
adc
cwtl
test
cmc
jbe
int3
out
pop
xor
lcall
popf
inc
inc
lahf
mov
int
push
lret
adc
add
hlt
adc
dec
cmp
ret
into
add
leave
sbb
popa
jle
scas
jb
mov
shll
icebp
inc
stos
popa
and
xor
cmp
in
push
mov
fsubl
clc
inc
mov
fcompl
pop
or
loope
je
sub
js
or
cmpb
push
popa
addl
imul
mov
test
jg,pn
push
dec
pop
ds
sbb
inc
and
lea
xor
out
sbb
dec
cld
jno
xor
loop
dec
add
push
xor
cmp
out
xchg
cltd
repz
inc
xor
repz
or
cltd
sub
add
xor
repnz
adcl
xlat
arpl
xor
add
mov
inc
jl
cmp
add
jns
arpl
jge
push
xchg
fistpl
xchg
or
loope
call
adc
gs
loopne
mov
jmp
insl
mov
cmp
add
lock
add
cmpsl
daa
jo
xchg
jo
js
xor
movsb
xorb
or
mov
out
or
popa
jle
loope
jno
add
push
sbb
inc
mov
and
xchg
dec
pop
dec
cmp
ret
dec
cltd
xor
shlb
leave
inc
push
add
test
push
jne
cwtl
sarl
fdivrp
fwait
inc
mov
inc
jae
xlat
xor
scas
add
and
shrl
cmovno
lret
push
adc
pop
das
dec
pop
in
lret
shlb
mov
ds
test
pop
nop
lret
push
out
push
hlt
ja
pusha
xchg
jl
scas
sarl
pop
into
push
xchg
mov
or
dec
sub
pop
sbbl
add
fildl
pop
xchg
rcl
mov
in
jle
sahf
push
mov
mov
and
out
mov
jg
jnp
je
fisubrl
fcmovu
and
in
hlt
mov
xchg
sbb
outsb
lahf
das
dec
dec
dec
sbb
sbb
test
push
outsl
add
hlt
inc
mov
pop
jnp
jp
pop
inc
cwtl
or
imul
imul
addr16
push
std
and
scas
lahf
fwait
sbb
pop
inc
xchg
pop
and
test
dec
addr16
dec
scas
sub
mov
push
lret
sub
loopne
jo
mov
andb
cmpsb
sub
adc
out
out
xor
sahf
ror
push
and
cmc
xchg
hlt
scas
sub
in
mov
or
ja
adcl
ds
mov
or
add
test
add
and
mov
rcl
xor
mov
cli
xor
lds
scas
mov
pusha
es
dec
das
imul
into
adc
cmp
lea
add
cmpsl
decb
cmp
test
xchg
push
jbe
insl
enter
loop
insl
popf
in
sbb
sub
loope
sbb
stos
stos
imul
mov
call
shrb
outsl
out
or
xor
cmp
push
dec
pop
call
pop
movsl
ret
testb
xchg
lret
bnd
push
xchg
xchg
jmp
out
fsubrs
pop
pop
cmp
cwtl
xchg
ret
mov
add
cmpsl
into
mov
lods
adc
in
movsb
repz
test
mov
data16
sub
repz
mov
jge
shl
inc
xor
pop
xor
jge
imul
in
sbb
jecxz
xchg
lahf
inc
fldln2
lea
imul
cmp
push
pushf
fisubrs
out
mov
sahf
pop
js
jg
jg
cmpsb
fidivrl
jecxz
inc
fld1
fucomp
cld
cmp
filds
les
sbb
push
in
aam
mov
sbb
jle
data16
jns
and
mov
sahf
pusha
leave
sub
push
dec
out
hlt
pop
rclb
cmpsl
mov
es
inc
jae
pushf
rcrl
sti
mov
enter
xor
lahf
adc
xor
push
sub
pop
jmp
add
dec
mov
roll
jmp
mov
outsb
shl
xor
sbb
pop
orl
push
aas
adc
dec
mov
jle
mov
repnz
out
data16
jmp
add
insb
in
int
fs
mov
sbb
in
push
push
mov
push
and
mov
inc
ret
test
fs
test
push
lahf
fs
and
insb
inc
aas
test
cmpsl
test
pop
mov
and
sbb
les
or
or
sbb
insl
add
aas
mov
in
sub
inc
je
das
or
daa
dec
or
fdivrl
jmp
mov
gs
xchg
mov
xor
mov
or
push
pop
pusha
fidivs
cmp
mov
cmp
bound
mov
cmp
push
add
xor
mov
adc
sbb
int
xchg
insb
rcr
insb
fbld
mov
es
push
jne
or
popa
sbb
ret
cmp
ret
dec
or
stc
insb
adc
xchg
int3
rcrb
adcl
xchg
fwait
or
and
sub
inc
add
loopne
rep
lods
pop
out
xor
mov
mov
pop
and
imul
mov
add
xchg
inc
insb
mov
dec
xchg
cmp
fadds
mov
jg
jne
sbb
adc
mov
in
fstps
mov
inc
test
sbb
loop
insl
mov
sub
ds
or
push
or
mov
jg
mov
lar
adc
xchg
jbe
dec
fs
outsb
insb
dec
in
cmp
ficompl
movsb
jl
xchg
in
sbb
and
incl
loope
push
in
mov
or
out
popf
adcl
jns
loop
stos
test
mov
add
xor
lcall
xor
cmp
inc
cmp
daa
hlt
sarl
mov
adcb
push
popf
pop
imul
or
pop
nop
dec
dec
dec
enter
mov
cltd
mov
and
mov
sub
sub
sbb
scas
ljmp
cmp
fistpll
lds
or
push
out
es
cwtl
mov
jns
rolb
test
jg
sahf
push
cmpsl
jge
mov
mov
fists
add
les
test
outsb
out
hlt
xor
lock
fsubrp
push
inc
fcoms
idiv
popa
out
movsb
call
push
faddp
aas
pushf
push
fdivrp
stc
jnp
insb
pusha
roll
mov
sbb
sbbb
mov
js
add
aaa
jno
mov
and
ljmp
mov
jle
mov
cmp
dec
fistps
push
call
inc
insl
sub
cli
pop
sub
test
push
les
clc
sub
add
mov
leave
lahf
js
je
aam
mov
or
mov
add
cli
jae
push
push
lcall
xchg
cmpsl
add
aas
mov
push
inc
or
test
rcrl
sub
jne
mov
into
int
pop
add
dec
mov
in
sub
jmp
cmp
lret
add
sahf
imul
lcall
cmpsl
inc
aaa
mov
rorb
mov
daa
mov
adc
lcall
imul
int
add
inc
test
call
push
inc
lret
cmc
inc
inc
pop
aad
shr
sub
lods
sbb
cmc
xchg
pop
dec
xchg
xchg
leave
aas
jg
mov
pop
int3
fnsave
sbb
fadds
out
jno
mov
add
xchg
pusha
pop
outsb
lock
out
mov
dec
sbb
sub
stc
lcall
jmp
out
mov
mov
pop
xchg
sbb
loope
inc
sub
into
cli
lret
sub
mov
mov
mov
jge
nop
push
jmp
dec
cwtl
cmp
mov
push
rol
cs
cmp
out
out
fdivrl
inc
xor
xor
push
sbb
repz
sar
push
inc
in
ss
pusha
mov
ret
push
pop
inc
jb
movsl
addl
inc
or
push
pop
stc
dec
add
cmp
icebp
sbb
mov
fdivl
arpl
lods
adc
xchg
pop
xor
lret
cld
cmp
mov
in
int3
cmpsl
movsb
inc
nop
pop
and
sbb
data16
imul
sbb
mov
push
insb
and
adc
mov
mov
rclb
push
icebp
jmp
subl
shlb
push
jne
and
cmp
and
aad
mov
pop
fnstcw
cmp
stos
stos
loope
data16
aad
sbb
mov
cltd
rdtsc
inc
bound
mov
jns
inc
test
sbbb
adc
imul
test
dec
cli
clc
adc
imul
dec
inc
fwait
outsl
pop
jno
in
or
mov
or
popa
push
dec
scas
xor
lret
or
cltd
aaa
out
popf
stos
popa
sahf
xlat
popa
fwait
dec
push
stos
adc
test
mov
je
nop
dec
mov
mov
sub
nop
mov
int3
int
out
icebp
cwtl
pop
lret
test
inc
or
add
dec
scas
mov
sti
loope
pop
in
xor
sub
add
bound
add
sti
push
stc
push
sbb
pop
iret
cli
test
jae
ljmp
cmpsb
or
int3
ds
push
lahf
les
inc
popf
fbld
fsubl
cwtl
lahf
pop
call
gs
add
mov
adc
mov
in
hlt
loop
mov
sbb
mov
or
adc
rorb
arpl
rcrl
stos
pop
pop
cmp
sbbl
push
sbb
int3
sub
xchg
push
in
xorl
cmp
mov
xor
or
dec
mov
cmp
hlt
loopne
jnp
jns
pop
jno
or
mov
or
push
jle
aam
jo
xor
outsb
test
mov
xchg
adc
cmp
or
xor
pop
out
pop
or
xchg
rcll
mov
lahf
add
pop
lret
jge
adc
xchg
imul
ds
push
cmp
aaa
mov
scas
mov
int
repz
inc
mov
cli
push
int
test
out
ss
push
mov
loop
push
jne
cli
inc
xor
or
pop
mov
repnz
push
aaa
pop
das
shll
jb,pn
or
fstpt
cmc
lea
xchg
aas
pop
mov
lret
out
leave
gs
adc
daa
push
pusha
xor
outsb
mov
xor
sub
cmp
jge
int
mov
mov
fcmovne
inc
sbb
xor
insb
shrb
jle
push
pop
add
xor
xchg
jns
cld
int3
xor
push
sbb
fldt
stos
pop
xchg
dec
mov
fsubp
xchg
xchg
shlb
test
push
jne
pop
mov
sub
cs
cwtl
or
and
cli
mov
in
pop
sarl
gs
mov
stos
sbb
xchg
mov
push
stos
cltd
mov
push
lea
popf
scas
sti
pop
mull
aaa
enter
leave
pusha
je
xchg
mov
adc
mov
fwait
jmp
enter
jo
lea
pop
call
repz
pusha
ret
lods
pop
repz
push
lret
xchg
enter
dec
orl
negl
test
dec
jl
roll
push
je
loopne
dec
aas
adc
cmc
or
pop
sub
fwait
push
jecxz
ljmp
push
xchg
stos
cmp
inc
cmpsl
sahf
pop
rorl
and
lahf
stc
clc
lret
jns
mov
je
jnp
popa
lds
adc
fisubl
das
pop
lret
mov
sbb
or
out
data16
cmpl
adc
pop
dec
leave
pop
xor
cmp
cmp
nop
adc
dec
into
lea
loop
adc
cmc
cmp
mov
or
lock
jle
mov
and
shlb
jbe
imul
mov
xor
or
push
sbb
cltd
jno
int3
inc
sbb
inc
mov
sub
aad
pop
cmp
cmp
sub
cwtl
mov
sub
cmp
daa
xchg
imul
xchg
pop
test
out
add
out
add
repnz
jmp
aad
test
leave
lock
jmp
sarb
les
pop
or
sbb
lods
mov
dec
pop
add
jle
insb
shlb
cmp
in
test
popf
outsb
insb
icebp
sub
inc
imul
or
sahf
push
fsubs
inc
stc
xchg
and
pop
sub
add
or
in
dec
sahf
aaa
push
xor
xchg
mov
jo
jmp
dec
popf
inc
push
out
dec
sbbb
loopne
mov
dec
and
inc
mov
inc
rcll
xlat
addr16
imul
pushf
test
mov
xorb
in
out
push
jmp
and
lret
jge
mov
jns
sar
xchg
lret
dec
dec
comiss
sbb
xlat
cmc
push
inc
les
jp
andb
mov
es
pop
in
call
inc
add
pop
jmp
mov
push
mov
mov
adc
xor
adc
cltd
mov
fsub
push
sbb
add
xor
push
inc
mov
mov
mov
fabs
in
aam
rorl
loop
xor
fisubrl
and
xchg
popf
test
mov
out
sbb
movsl
cmp
mov
xor
lcall
inc
sbb
fnstcw
out
jmp
jo
push
mov
or
push
mov
movsb
pop
out
test
sbb
inc
insl
lret
mov
addl
lock
insl
dec
test
xchg
lock
fidivrs
aaa
sar
xor
jb
sub
mov
sbb
xchg
test
adc
std
dec
int3
xchg
aas
and
cmp
sbb
in
push
xchg
incb
shll
out
push
cmpsl
out
divb
out
cltd
popa
lods
mov
js
add
fsubl
pusha
sbb
addr16
mov
mov
dec
add
in
jnp
add
es
adc
fwait
loop
or
inc
adc
jge
or
idivl
outsl
stc
mov
mov
add
test
pusha
movsb
inc
sarb
repnz
xor
out
fisubrs
js
inc
pop
mov
pop
iret
jmp
xor
xchg
or
lods
or
push
ret
repz
sti
testb
push
hlt
jbe
imulb
jp
push
or
mov
nop
cld
fwait
out
imul
test
pop
mov
cli
adc
or
jae
ljmp
jge
pop
outsl
mov
les
mov
xor
or
bound
jl
xchg
adc
sbbb
sub
mov
xor
jb
inc
jge
push
mov
in
mov
test
fisttpll
mov
clc
jnp
or
push
mov
in
leave
out
loop
rcrl
jae
inc
push
xor
fildll
cmp
jbe
leave
rcr
outsb
repz
lret
clc
push
fnstenv
push
lods
xchg
stos
shl
iret
mov
xor
out
add
pop
dec
pop
arpl
test
mov
sbb
mov
jge
clc
mov
scas
cwtl
push
dec
mov
repnz
aaa
in
je
imul
mov
jge
shl
scas
mov
sbb
jbe
leave
mov
jo
imul
int
std
enter
mov
jb
mov
mov
es
push
push
jmp
inc
ret
pmaddwd
sub
ficoms
or
sub
and
jmp
jle
mov
dec
aas
push
jbe
pop
push
pop
leave
int
mov
rcr
es
inc
inc
aas
xchg
fldl2t
movsl
fsubrs
sub
cmp
mov
inc
jmp
mov
gs
negl
dec
xchg
je
insb
sub
jne
dec
push
jae
xor
in
leave
clc
push
dec
mov
xor
dec
xlat
or
cwtl
jecxz
mov
shrb
rolb
test
test
scas
das
sbb
clc
pushf
aam
shrl
movsl
and
inc
loop
outsl
pop
fisubrs
out
dec
scas
in
mov
cmp
pusha
jle
push
dec
pop
dec
int3
xchg
dec
daa
xor
lret
icebp
dec
jg
sahf
int3
adc
test
mov
dec
push
cmpl
cmp
ss
ljmp
loopne
aaa
pop
jp
hlt
mov
add
jbe
cmp
dec
sti
aad
mov
sbb
sub
mov
pop
jno
in
jl
adc
outsb
lea
sbb
ret
lea
sahf
mov
lahf
std
dec
les
jne
cmp
ja
repnz
lret
daa
dec
or
adc
inc
mov
stos
cmp
scas
int
test
mov
push
add
mov
rcll
pop
inc
lock
aas
inc
adc
arpl
add
mov
arpl
jne
pop
inc
cwtl
or
pop
mov
not
outsl
and
xchg
mov
adc
mov
shl
xchg
icebp
clc
push
sub
sub
mov
scas
xchg
and
add
adc
repz
cld
sti
ds
mov
cltd
fldl2t
outsb
test
lds
pushf
jbe
lret
push
test
ficompl
stos
lret
aad
out
cmpsb
pop
push
and
mov
ficoml
lock
aam
iret
popw
cmp
pop
mov
aam
push
ljmp
aas
or
jge
shlb
or
mov
or
insb
mull
xchg
ds
out
fldl
jns
ret
sbb
adc
mov
je
or
iret
jl
sub
adc
jno
mov
mov
and
je
dec
cmp
fucom
out
test
pop
sbb
fs
jmp
mov
cli
dec
pop
and
mov
push
js
sub
mov
push
cmpsl
aam
in
adc
mov
sahf
stos
popa
lcall
and
lret
mov
cmp
sub
ljmp
stos
sub
fistpll
movsl
adc
mov
out
fxtract
push
dec
mov
dec
notl
mov
and
test
andb
shl
test
pop
pop
xor
fidivrs
sbb
arpl
divl
mov
dec
push
out
cmp
add
dec
inc
rclb
mulb
jbe
js
out
mov
cmp
sbb
inc
push
ljmp
pop
or
inc
mov
mov
mov
and
enter
adc
push
xchg
in
and
in
scas
push
push
popf
fdecstp
stos
cmp
mov
push
pushf
in
cmpsb
lcall
mov
cltd
popf
sbb
in
xor
push
push
mov
sbb
call
sub
cmp
dec
fcompl
aaa
and
lret
aam
insl
xchg
dec
aam
data16
test
and
dec
xchg
pop
mov
cmp
out
shrl
pop
aam
leave
push
mulb
and
pushf
cmp
outsl
jne
icebp
inc
mov
mov
fmuls
pop
ss
push
adc
xor
icebp
rol
mov
jne
jb
inc
mov
lahf
movb
push
fisttps
xchg
negb
add
int3
xchg
shrb
fimull
or
and
fildll
push
fwait
imul
lcall
lret
shlb
inc
mov
fidivl
cs
xchg
orb
jae
and
sbb
fs
or
mov
dec
mov
out
sti
jecxz
xchg
dec
insb
xor
mov
sub
outsl
push
push
aaa
out
mov
dec
or
dec
lea
pop
xor
hlt
adc
mov
or
dec
pop
push
ss
rcr
repz
or
jge
inc
inc
and
mov
pop
leave
mov
mov
mov
mov
lea
adc
je
subl
scas
inc
pop
mov
cmp
sub
rorb
lret
dec
inc
and
mov
stos
pushf
jb
inc
rclb
fisubrs
jmp
cmp
es
sbb
movsb
or
xor
bound
fwait
cmp
jne
enter
sub
pop
fisubrl
les
js
sbb
mov
pop
lcall
lds
in
arpl
daa
lds
popa
push
cmp
mov
sbb
xchg
mov
or
arpl
xchg
pop
jmp
cltd
dec
pop
fucom
cmp
jb
mov
rcrl
mov
leave
fisubrs
in
je
pop
inc
jecxz
idivb
xchg
or
aam
test
xchg
bound
std
mov
xchg
cli
imul
push
sbb
test
enter
into
cmp
repz
popa
sub
cmp
pusha
push
xchg
or
pop
test
fs
mov
sub
clc
adc
in
jns
repnz
into
sbb
sub
fmuls
or
dec
in
xor
push
push
jmp
mov
stc
sbb
gs
lods
push
out
jns
jae
and
mov
std
push
add
inc
aad
fidivrl
jle
sbb
jae
pushf
xchg
lret
out
lds
out
push
push
ret
jbe
sbbb
mov
gs
cmp
das
adc
lea
sbb
dec
loop
add
pusha
sbb
inc
push
sub
arpl
sbb
test
inc
fs
xor
sub
sbb
jae
test
sbb
test
and
and
scas
aad
pop
out
xor
and
movsl
xor
in
ds
sub
add
int
clc
fildl
mov
fcmovb
aaa
aam
arpl
cmc
and
adc
jo
fdivrl
fisubrl
in
add
add
sarl
repnz
pop
out
insb
mov
scas
jge
out
push
rcrb
sub
push
mov
icebp
jae
xor
pop
sub
icebp
inc
aam
aad
mov
shl
call
in
popl
mov
test
hlt
cmp
pop
mov
popf
xchg
ljmp
adcb
fsubl
mov
fwait
scas
stc
pop
xchg
pop
mov
mov
sub
mov
adc
adc
arpl
jmp
sahf
cli
clc
test
push
pop
fstp
mov
popa
mov
cmpsl
and
shr
mov
push
xchg
sub
daa
test
ret
mov
leave
mov
cmpsl
in
into
mov
je
xchg
pop
sbb
nop
cmp
in
push
aas
push
jmp
push
push
lods
cmp
mov
int
call
or
clc
sub
mov
pop
fistpll
mov
cmp
clc
mov
stos
mov
bound
aaa
sbb
xlat
mov
jnp
xor
shlb
mov
les
inc
dec
push
xchg
out
faddp
test
add
div
rol
inc
shl
sbb
push
xor
push
inc
dec
popf
and
sti
add
dec
ds
inc
sub
pop
xchg
sti
fucomp
out
mov
sub
push
mov
loop
sub
fmul
stos
add
js
mov
test
xor
scas
push
lahf
jle
jg
jmp
imull
arpl
cmpsl
xorl
cmp
inc
cmp
jge
xchg
hlt
pusha
cmp
insl
loope
rol
mov
add
adc
fstpt
test
je
movsb
out
push
sbb
push
add
test
adc
pop
std
lods
sti
negb
cmp
sbb
into
mov
mov
jns
imul
test
jmp
lcall
push
cmp
ja
stos
stos
dec
push
sbb
pop
xor
sub
rolb
stos
rorb
or
mov
pop
mov
jbe
inc
orb
imul
dec
leave
sbb
addb
pop
fnsave
cmp
jo
nop
jb
insb
scas
sub
les
sbb
xchg
sar
xchg
imul
push
movsl
xor
push
or
xor
addr16
popa
jmp
xor
aad
gs
nop
arpl
out
fdivrl
pop
xor
fsubs
pop
ds
aaa
push
sbb
and
or
push
xor
add
adc
nop
xor
stos
icebp
js
test
pop
push
out
and
out
lret
push
mov
dec
mov
gs
add
fbld
adc
fadd
sbb
popf
xchg
inc
sbb
insl
push
push
mov
push
das
cmp
push
loope
jmp
leave
in
faddp
mov
inc
loop
outsl
hlt
rcrb
and
cmp
xchg
insl
ja
pop
jo
pop
ret
repnz
lock
inc
jne
mov
je
clc
out
cmpsb
cmpsb
test
scas
jae
cmp
dec
fcmovnu
xchg
iret
xchg
mov
mov
mov
sub
jns
mov
lret
xor
mov
jg
lahf
pop
mov
or
fsubrl
out
mov
test
outsb
jg
push
add
jbe
sub
aam
cmp
stc
jb
cmp
js
scas
push
ret
xchg
mov
ljmp
inc
sti
sbb
pop
push
jl
xor
into
cli
shr
mov
sbb
in
or
movsb
adc
dec
xor
xor
or
push
mov
stos
es
push
je
mov
sub
std
mov
iret
ret
rcl
sti
loope
sbb
inc
les
cmp
test
mov
rorl
in
jmp
push
aam
scas
xchg
xchg
sbb
mov
cld
shr
repnz
mov
cs
sub
filds
int
movsl
push
sbb
rcr
in
cmp
pop
sub
sbb
xlat
push
inc
add
jge
xchg
push
negb
aam
es
mov
mov
mov
leave
test
mov
and
push
jno
ffree
lods
xor
fsubr
pushf
lea
sbb
cmp
xchg
imul
mov
sub
testl
les
daa
scas
add
dec
int
push
sbb
movsl
ret
add
stc
loopne
addr16
sub
fistpll
int
ret
jmp
aaa
xor
stc
push
outsl
push
mov
xor
int
nop
dec
ss
icebp
lahf
in
test
xchg
fmull
icebp
test
aaa
jne
popf
stc
fwait
rolb
xor
adc
sahf
push
mov
add
in
movsb
mov
enter
mov
std
dec
mov
insb
int
stos
leave
mov
nop
leave
mov
sub
push
mov
sbb
out
pop
das
cmp
je
icebp
mov
or
int
nop
sbb
in
push
cmpsl
sub
adc
mov
push
mov
fs
in
jge
hlt
jns
xchg
mov
adc
inc
loope
and
cmp
xchg
adc
stc
pop
stc
sbb
into
mov
int3
push
sub
xchg
push
sub
int3
xor
cmp
clc
dec
mov
pop
sti
mov
icebp
ljmp
adc
xchg
pop
jnp
call
push
sub
dec
fnstsw
test
mov
pushf
fdivrs
jns
mov
and
push
push
lods
ret
lds
test
xchg
xchg
jne
mov
lret
lock
js
arpl
push
lcall
or
fimull
dec
jl
xchg
cli
add
jns
in
sbb
jmp
push
pop
das
jno
xlat
pop
sti
pop
xor
stos
dec
fistpll
jge
es
das
int
fidivrl
lahf
mov
stos
je
int
pop
push
or
inc
dec
andb
in
dec
sub
mov
cmp
push
hlt
jb
mov
movsb
push
add
sbb
xchg
cmp
enter
scas
into
mov
movsb
or
cld
mov
call
mov
fidivrl
nop
push
subl
mov
mov
sbb
call
sahf
or
xor
jbe
jne
incl
sub
jp
mov
stos
test
xchg
inc
std
das
sahf
or
inc
test
cs
insw
xchg
inc
flds
test
sub
and
fimuls
arpl
test
dec
cli
dec
movsl
ja
sarl
divb
xor
push
inc
js
sbb
or
dec
push
sbbb
bnd
sbb
iret
repz
adc
ret
and
adc
cmp
jb
xchg
adc
cs
pop
ss
xchg
cmc
div
mov
mov
push
cmp
hlt
jmp
rorb
xor
adc
cmp
push
fsub
mov
sbb
mov
and
add
clc
pop
mov
cli
inc
jp
in
push
clc
rcl
jno
pop
ss
mov
out
mulb
xchg
lea
out
xchg
adc
inc
lea
xchg
ds
sti
xchg
cld
pop
out
sti
insb
scas
or
outsl
mov
push
movsl
clc
call
hlt
push
push
nop
roll
popa
rcll
cmp
pop
enter
sbb
sti
cmpsl
test
cwtl
xchg
nop
aad
loop,pn
nop
mov
mov
out
push
mov
sbb
pop
fdivl
mov
jae
adc
iret
scas
cmc
and
int
or
inc
icebp
movsl
fs
inc
push
jl
mov
inc
ret
stos
xor
mov
in
arpl
add
iret
xchg
mov
nop
xchg
pop
inc
mov
out
sub
cmp
sub
or
out
adc
mov
mov
aaa
insl
cmp
mov
cmp
cmpsb
or
and
fwait
xorl
xor
push
pop
vmulsd
and
jge
fistpl
hlt
in
xchg
xchg
test
dec
in
adc
pop
xchg
mov
sub
cltd
adc
push
lds
push
sbb
inc
loop
jg,pn
loopne
sbb
xor
int3
stc
nop
scas
jae
mov
xor
jge
lods
imul
xchg
jb
inc
push
jae
lds
aaa
lods
std
movsl
cmpsl
shll
int3
mov
sub
sahf
fstpl
cmpsl
ss
sahf
mov
das
fistps
nop
int
mov
repz
add
mov
out
push
add
push
ds
mov
xchg
xchg
in
push
shll
je
pop
ljmp
inc
adc
xchg
pop
jb
jno
add
push
mov
mov
sub
push
fdivrs
mov
lods
xchg
push
mov
out
mov
mov
adc
sbb
inc
clc
subb
pop
mov
mov
mov
mov
sbb
repz
mov
lcall
in
xchg
mov
lds
adc
push
cmp
xor
cld
push
mov
jnp
shlb
xor
sbbl
dec
adc
mov
push
aam
lea
fstpl
loopne
sub
pop
lock
dec
cmpl
mov
rcl
cmp
ja
insl
jae
sbb
dec
add
test
adc
or
mov
jnp
mov
ss
pop
fdiv
cmp
jmp
xchg
and
mov
mov
xor
xchg
call
xor
bound
jl
cmp
mov
popf
scas
mov
out
data16
jl
adc
ret
in
cmp
adc
adc
push
push
faddp
orb
pop
aad
popf
ret
aas
in
mov
clc
add
mov
das
icebp
lea
inc
mov
jg
push
test
mov
call
bound
and
push
daa
outsl
int3
int3
dec
xchg
daa
pop
sub
movntq
imul
and
je
pushf
insl
sbb
push
mov
cli
popa
or
sub
mov
sbb
shl
inc
jne
imul
das
inc
push
arpl
addr16
ret
out
xchg
sub
jmp
stos
ja
pop
push
jae
xchg
ja
imul
pop
mov
jno
add
push
jae
mov
xchg
lret
arpl
ficoml
cli
loopne
sub
pop
in
adc
mov
mov
in
sti
pop
or
xchg
repz
aad
xchg
xchg
or
xchg
popa
je
sti
jnp
adc
inc
sub
notb
or
add
imul
xchg
rcr
addr16
repz
and
sbb
adc
aaa
loopne
push
add
pushf
add
mov
ficompl
test
dec
jmp
lods
movsl
fwait
loope
fsts
pop
arpl
ss
xor
pop
jns
or
dec
test
xchg
stc
push
mov
stos
shll
test
clc
movsb
dec
icebp
test
jne
icebp
movsl
mov
scas
mov
roll
daa
xorb
lahf
js
push
push
dec
cmp
mov
rolb
movsl
test
jle
sub
hlt
mov
ss
mov
dec
scas
test
push
mov
cs
xchg
cmpsb
or
sub
cmp
and
adc
cmpsb
scas
rcll
shrb
repz
aam
fstpl
arpl
sbb
lods
lea
mov
lock
pop
cmp
add
add
or
add
add
xor
jb
shr
cli
imul
mov
mov
mov
xchg
sub
or
xchg
jp
mov
push
sbb
icebp
daa
pop
sbb
repnz
movsl
pop
sbb
aad
pop
rolb
dec
in
rcl
cmp
outsb
test
fwait
mov
mov
daa
rcrb
mov
mov
insl
pop
xchg
xlat
sbb
leave
pop
lret
movsl
in
push
xor
decl
adc
sbb
popa
or
loope
sbb
jo
stc
and
xor
in
sbb
mov
cmp
adc
outsl
and
xchg
push
add
movsb
cmc
mov
out
hlt
jmp
fisubrs
orl
mov
clc
popf
adc
shlb
dec
loope
dec
data16
jecxz
push
xchg
xchg
jae
mov
addl
aaa
push
fs
xchg
mov
add
xor
adc
outsl
leave
inc
jecxz
xchg
cmp
dec
stc
adc
div
xchg
mov
in
add
adc
mov
mov
cmp
mov
xchg
nop
data16
icebp
push
push
loop
cmp
hlt
sub
cmp
inc
insl
xor
dec
inc
sub
rcll
xor
lea
notb
ljmp
test
ljmp
les
repz
mov
and
push
xor
cmpl
arpl
xor
imull
push
ficomps
adc
pop
fdivl
int
sbb
mov
iret
mov
ss
test
xlat
mov
aad
mov
sub
add
push
push
push
ds
dec
call
jmp
movsl
std
cld
iret
adc
aaa
scas
inc
rorb
cld
mov
out
mov
daa
dec
cmpsb
std
mov
mov
cmpsl
fdiv
sub
cmp
pop
in
and
ljmp
jecxz
adc
imul
cmpsb
and
cmc
loope
mov
mov
cmpl
test
leave
repz
cld
dec
mov
mov
pop
or
cs
push
xlat
pop
dec
mov
out
out
dec
movb
test
int3
cmp
push
test
inc
or
lret
jp
ret
pop
sarl
bound
fisttpll
dec
jg
push
jnp
inc
sbb
scas
and
mov
repnz
sbb
insl
hlt
jae
notb
sahf
out
scas
mov
mov
dec
or
adc
inc
adc
pushl
aam
mov
inc
movsb
adc
imul
test
lahf
cmp
mov
mov
lret
pop
out
sub
rcl
jmp
xor
daa
ret
xor
fdivrs
lret
pop
fmulp
std
cmp
ss
jnp
hlt
popf
and
cmpsb
adc
jbe
xor
cmp
jecxz
jb
pop
stos
insb
jmp
xchg
jp
fdivrl
test
shl
leave
int
stos
repnz
pop
js
cmp
or
mov
cmp
sbb
sahf
sarb
xchg
mov
int
and
imul
add
sbb
jg
or
popf
pop
cwtl
arpl
and
pop
out
cs
xchg
push
iret
push
in
ljmp
movsb
inc
dec
fstpl
push
shll
sahf
sub
popf
fdiv
and
mov
insl
push
sub
sub
stos
fisttpl
inc
ficoms
das
jg
xchg
jnp
or
stos
mov
and
sbb
sbb
les
pop
mov
push
call
lret
cmp
outsb
or
add
or
repz
cmp
sahf
mov
fwait
shlb
push
movsl
fwait
ret
and
sbb
bswap
ljmp
push
ret
pop
rcl
int3
lods
aas
or
mov
sbb
lret
sub
dec
imulb
clc
add
xchg
dec
pop
jmp
xor
sub
test
pop
jb
xor
arpl
in
adc
cmp
mov
cmp
enter
out
inc
and
fisttps
js
dec
push
es
stos
movsb
mov
ror
call
scas
addr16
int
enter
stos
mov
pusha
test
inc
test
add
clc
repz
add
pop
xchg
int3
arpl
xor
dec
call
mov
popf
cltd
ficompl
out
outsl
adc
dec
jne
xor
add
or
daa
fs
mov
lret
clc
fnstenv
jl
xor
les
ljmp
mov
jbe
mov
xchg
cwtl
enter
sbb
imul
lds
lea
mov
mov
lds
leave
repz
loop
mov
push
push
push
out
cmp
mov
popa
mov
mov
sbb
sbb
cmp
sbb
cmpsl
xchg
and
mov
orb
iret
xor
cmpsl
fidivs
scas
jno
adc
repz
icebp
je
pop
jb
xchg
jg
test
adc
jge
mov
and
pop
push
aam
filds
and
push
fstpl
dec
jnp
jecxz
inc
fucom
fwait
jle
mov
test
scas
pop
mulb
stos
fidivrs
or
mov
push
mov
jp
aas
adc
rcll
hlt
inc
cmp
sahf
loop
jl
fucom
inc
stos
mov
pusha
push
lock
xlat
xor
mov
xchg
ror
insb
pop
dec
lret
or
clc
int
adc
jne
push
aas
or
pop
nop
movsl
aaa
xchg
inc
shll
cmp
idivb
xchg
clc
mov
and
scas
jo
imul
popf
mov
lods
js
shrb
clc
mov
jne
notl
nop
or
jae
jl
push
sbb
out
inc
int3
aas
xor
jne
mov
and
inc
dec
aam
shll
ljmp
out
enter
inc
mov
sbb
or
pop
mov
icebp
mov
adc
jae
test
hlt
out
fs
push
cs
in
scas
sub
inc
test
in
aaa
push
nop
inc
in
sub
je
jl
aas
shll
xor
sub
push
add
iret
xchg
daa
shrb
lcall
mov
pop
sbb
outsb
es
adc
scas
je
fcmovb
mov
lds
in
aaa
mov
sub
or
mov
mov
pop
aaa
dec
xor
fwait
dec
xor
sub
jecxz
out
pusha
adc
mov
dec
fucom
mov
cmp
pop
outsb
clc
clc
mov
and
or
es
bound
loopne
cmc
mov
xor
push
test
jle
cmpb
dec
subl
inc
jle
or
insl
pop
cmc
cmpsb
cmc
fdivl
dec
or
mov
dec
sbb
popa
dec
fisubs
fcomps
and
push
stos
gs
mov
adc
inc
mov
mov
fisubl
adc
out
rolb
cli
jecxz
addb
daa
mov
inc
into
frstor
daa
out
jo
push
fwait
in
outsl
mov
and
push
mov
jp
cli
bound
sbb
mov
pop
xchg
cmpb
fiaddl
repz
and
mov
or
jge
jnp
inc
mov
jbe
loopne
in
mov
pop
scas
out
push
aaa
mov
clc
cld
test
jnp,pn
out
inc
mov
xor
push
movsb
rcrl
aam
rcll
pop
mov
add
mov
inc
dec
icebp
in
jmp
fadd
jne
xchg
mov
cmpsb
out
sbb
cli
in
cmp
xor
lock
rcrl
xchg
sub
add
dec
cwtl
rcrl
pop
sub
xchg
fldlg2
pushf
out
pop
popf
les
lea
gs
inc
popf
std
and
cmp
push
mov
fnsave
xchg
lds
xor
mov
push
dec
push
das
pusha
mov
and
imul
fistpl
ss
cmp
inc
push
jge
and
jne
cmp
cwtl
cltd
pushf
sub
cmc
jae
out
subb
jns
or
pop
fwait
jb
nop
test
xchg
sbb
pop
nop
mov
lock
sub
xor
lods
fcomps
adcl
push
decl
and
adc
push
fsubs
inc
mov
nop
mov
fisubrs
in
addb
mov
sub
lods
push
or
pop
ficoms
push
cmc
mov
ret
mov
ret
lds
adc
push
dec
fists
mull
mov
mov
xchg
std
fmuls
sbb
das
faddl
jb
mov
lds
jno
mov
fs
mov
das
jb
mov
faddl
std
jb
jns
sbb
inc
jmp
sbb
imulb
or
mov
adc
loopne
add
fisttpl
push
or
movsb
xchg
mov
adcb
and
imul
std
sub
push
xor
adc
pop
sub
push
xor
inc
mov
sub
mov
repnz
pop
int3
mov
in
mov
pop
sbb
ret
aad
sbb
add
lds
cmpsb
andl
loopne
in
xor
lods
repnz
lea
cwtl
xchg
jmp
js
push
sbb
popf
mov
aas
or
shll
clc
push
inc
and
dec
cwtl
aam
pop
sbbb
lods
sbb
push
ds
call
es
xor
mul
sbb
test
jecxz
repnz
sub
add
data16
fcoml
push
add
cltd
cs
mov
dec
stc
inc
and
rcrl
cmp
or
mov
movsl
cmc
jnp
xchg
enter
mov
mov
ret
addl
daa
add
movl
push
mov
and
lret
jge
jp
lea
test
mov
mov
adc
into
xlat
cltd
movsl
cli
jns
or
mov
inc
push
fidivrl
push
fldcw
andb
insl
popf
cwtl
imul
adc
lret
daa
cmp
int3
xor
sub
test
sahf
or
mov
in
adc
lods
es
push
adc
cmp
mov
dec
xchg
scas
inc
addr16
sub
fldenv
mov
xchg
xor
add
divb
fwait
into
addr16
das
jecxz
adc
sbb
je
xchg
leave
inc
rolb
jg
out
xor
loope
pop
adc
fistl
outsb
es
call
jl
mov
stos
lods
in
test
int3
in
lahf
ljmp
ljmp
xlat
mov
pop
sub
int
mov
fisttpl
ljmp
mov
sbb
mov
push
lcall
add
sub
jno
xchg
add
stos
cld
add
mov
sbb
fcom
stos
shl
and
jp
adc
mov
daa
xor
push
or
adc
sbbb
jp
add
or
daa
stc
push
test
cmpb
sbb
cmp
rcrl
or
cwtl
and
popf
int3
inc
mov
stos
sub
xor
xor
dec
pop
inc
sub
shl
arpl
inc
sahf
lods
or
into
sub
pop
jns
ret
push
stos
arpl
addr16
lea
dec
mov
pop
mov
aad
ljmp
push
and
push
and
pop
mov
xchg
sub
push
and
xchg
pop
or
imul
cmc
cmp
push
pop
aam
push
adc
xchg
pop
adc
adc
inc
xor
sub
and
pusha
scas
add
xchg
mov
push
cmp
clc
adc
mov
roll
dec
fisttpl
or
or
mov
loopne
add
inc
mulb
add
nop
push
push
clc
or
psadbw
xchg
add
popa
adc
push
jo
loopne
xor
lcall
xchg
andl
pop
cwtl
fcmovbe
jge
jbe
test
sbb
out
dec
or
fsubrl
sub
inc
push
xlat
ret
mov
pop
or
push
mov
pop
push
pushf
test
add
hlt
ficoml
adc
xor
cwtl
jg
fcoms
push
sub
mov
test
fimuls
imul
addr16
in
jne
loop
push
imul
dec
adc
sbb
popa
ds
popf
test
stc
and
inc
add
out
out
movsl
cwtl
icebp
cmpsb
mov
cs
test
or
push
data16
in
push
mov
aas
sarb
jnp
xchg
aam
dec
loope
and
frstor
inc
bound
jno
loope
sub
aam
test
pop
negb
mov
add
shl
mov
out
adc
mov
ljmp
pop
popa
fs
arpl
test
aaa
pop
or
icebp
movsl
xlat
dec
cmc
into
or
or
jnp
cwtl
inc
loopne
add
xor
popa
movsb
mov
mov
adc
popa
and
dec
enter
mov
mov
and
jle
sti
or
fistl
and
iret
test
push
out
scas
xchg
imul
out
mov
inc
and
inc
mov
ja
out
mov
dec
in
mov
mov
jg
add
int3
cmpsl
jno
lods
jne
lahf
adc
inc
mov
xchg
add
inc
push
outsb
mov
mov
lret
sti
cs
aad
dec
mov
mov
cmc
insb
in
aad
add
lret
adc
cli
push
mov
hlt
sti
out
rcrb
lret
push
jp
je
icebp
movsl
and
out
inc
lret
xor
and
xchg
cmp
xor
xchg
mov
mov
das
pop
les
or
inc
testb
mov
inc
pop
lods
cmp
fnstenv
inc
int3
fdivr
fdivr
aaa
and
mov
fdivrl
sbb
mov
sub
mov
int
arpl
jo
xor
dec
les
sbb
call
add
mov
pop
xor
nop
and
je
std
inc
jl
test
insl
sbb
xchg
je
lds
aad
out
loop
push
lock
sub
sub
pusha
xchg
jmp
movsl
ljmp
inc
cmpsl
jnp
push
mov
push
push
es
test
pop
outsb
fwait
push
imul
jp
mov
iret
jg
subl
js
or
push
imul
push
pop
dec
sub
rorl
cmpsb
adc
cld
mov
add
xchg
jp
dec
shrb
aad
push
stos
mov
std
inc
sahf
ss
sub
mov
sub
adc
pop
enter
xor
jl
fisubrs
movsl
inc
adc
pop
mov
xor
dec
xorb
adc
out
and
rorl
cmpsl
dec
cli
dec
jg
lods
adc
adc
sub
icebp
cmp
xchg
and
sbb
adc
lret
fstpt
adc
clc
and
int3
mov
imull
jbe
out
repz
mov
or
push
je
sahf
mov
repnz
call
aaa
xor
outsl
shr
call
jae
xchg
mov
icebp
xor
cs
fdivrl
xchg
jae
gs
sbb
ret
pop
jno
pop
push
insl
ret
loopne
sub
jg
pushf
push
mov
in
loop
into
idivl
sub
mov
cmp
int3
jns
pop
or
cwtl
test
movsb
ja
test
xor
fsubrl
out
jg
out
mulb
pop
daa
lret
mov
arpl
lcall
jno
xchg
loop
dec
or
lcall
xlat
mov
push
push
call
orb
inc
pop
sub
push
or
ss
pop
shrb
sbb
bound
mov
test
in
in
push
lret
mov
adc
ja
push
cmp
call
inc
xor
mov
and
nop
dec
lea
aad
jp
sahf
cmp
jb
rcrl
xchg
in
mov
mov
xor
int
lcall
pop
add
cmp
add
mov
xchg
ret
lret
call
push
push
xchg
lahf
inc
inc
xchg
movsb
lds
imul
fwait
stos
adc
lcall
into
add
imul
popf
mov
push
inc
sub
ljmp
mov
stos
cmp
mov
lret
push
and
xchg
arpl
pop
shlb
xchg
or
cmc
sub
push
fnstcw
mov
cli
cli
inc
add
push
xor
test
insb
and
insb
bound
lods
and
mov
lahf
mov
add
in
push
test
xor
aam
mov
aaa
adc
movsl
lcall
mov
xchg
pop
push
push
ja
arpl
rcr
mov
pop
mov
lret
mov
xor
fs
rol
sub
push
sbb
xchg
shl
test
stc
fsubp
sub
sbb
es
fiaddl
inc
ds
mov
inc
dec
sub
sbbb
jns
push
rclb
mov
inc
mov
divps
or
mov
dec
negl
dec
fs
mov
sub
inc
mov
sbb
push
push
sahf
sub
test
jno
and
dec
in
mov
icebp
jge
xchg
push
ja
sbb
pop
mov
and
stos
xor
cmp
sbb
scas
add
adc
lock
rcrb
jle
add
add
addb
lock
jne
or
daa
jl
inc
and
adc
gs
jecxz
scas
pop
cmp
adc
imul
test
cli
xor
aaa
add
insb
mov
pop
lea
or
mov
push
adc
inc
jne
fsubrs
mov
and
mov
cmp
lds
test
pop
and
mov
fadd
enter
rcrl
jns
inc
scas
popw
sub
int
out
enter
and
pop
outsb
mov
insb
mov
pop
in
pusha
lret
jmp
pop
mov
sbb
jae
cmpsl
push
or
sub
push
xor
sub
mov
dec
adc
mov
out
cmpsl
xor
es
aam
push
sub
dec
mov
ret
in
adc
xor
cmp
push
xchg
jo
inc
call
sbb
into
and
sbb
hlt
mov
insl
lret
sub
inc
xor
dec
shrb
call
xchg
mov
mov
mov
dec
les
add
fwait
shll
mov
or
outsb
jnp
push
push
adc
inc
inc
xor
out
mov
pop
mov
adc
imul
sub
xchg
xor
push
test
sub
in
movsb
in
mov
push
scas
mov
jle
add
pop
fs
push
sarb
push
idivb
jmp
jle
jg
outsb
out
lret
push
adcl
jmp
dec
pop
pop
or
lcall
mov
or
ja
adc
mov
push
or
test
int3
xchg
jl
in
mov
or
pop
xchg
adc
jne
loopne
imul
push
xor
xchg
mov
push
pop
cmp
xchg
jmp
arpl
cmp
cmp
push
loopne
movsb
sbb
inc
xor
or
xchg
lods
inc
adc
cmp
not
cmp
js
pop
adc
xchg
mov
and
dec
in
fildll
sub
mov
pop
adc
dec
adc
fwait
in
ret
cmp
call
cli
or
dec
js
mov
sub
xchg
popa
add
fs
adc
adc
bound
xor
out
int3
mov
pop
stos
or
cmp
push
cli
mov
dec
inc
jo
out
push
cmp
cmp
and
arpl
lahf
push
push
mov
push
jecxz
enter
stos
outsl
ret
adc
clc
jl
inc
test
or
int3
outsb
je
shl
aam
vaddps
stos
mov
pop
icebp
or
rcrl
dec
cmpsb
cmp
push
jbe
jns
jl
popa
mov
pop
popa
pushl
pop
mov
push
out
cmp
mov
pop
iret
and
jne
push
insl
rorl
jbe
test
pop
mov
std
push
nop
lret
lods
es
xor
lods
or
outsl
cltd
aaa
mov
jg
stos
aam
push
add
arpl
jmp
rcrb
xor
sahf
sarb
movsb
test
pop
xor
mov
out
push
adc
lea
insb
lret
and
incb
or
adc
and
xor
roll
or
inc
lods
pop
popf
lods
aaa
cwtl
loopne
out
lahf
cli
aam
mov
in
lods
mov
push
xchg
imul
fcomps
aad
or
lret
fwait
sub
lds
dec
and
jns
test
xchg
into
fidivl
sub
mov
pop
sbb
enter
stc
dec
aam
mov
data16
shrl
jne
or
mov
jmp
jne
movb
aad
notl
popa
jmp
nop
fs
and
addl
popa
bound
jl
dec
mov
cld
inc
rclb
cmp
sahf
popf
mov
dec
out
pop
jns
lock
and
mov
lds
es
mov
scas
rcrl
add
clc
dec
inc
inc
jno
push
decb
mov
xchg
rorl
js
mov
fsubr
in
fs
dec
lret
mov
dec
out
or
xchg
adc
enter
xor
xchg
xor
mov
pop
nop
push
mov
jb
les
aaa
lds
jecxz
or
mov
dec
jo
mov
ror
sbb
jbe
mov
fs
push
xchg
cmp
stos
xor
jl
jbe
sbb
lret
push
sti
sub
adc
mov
imul
enter
notl
jmp
or
cmp
imul
push
addr16
jne
add
lods
push
fbld
fistl
cmp
daa
mov
jg
in
fidivl
push
fwait
add
push
aaa
int
xchg
das
mov
aad
mov
xchg
cmp
sbb
mov
nop
cmc
stc
insl
imul
fistpl
jns
ret
cmp
sbb
and
insb
lock
xchg
pop
and
xor
xor
jl
outsl
and
inc
std
inc
pop
xor
jo
shlb
mov
loopne
in
test
pop
call
arpl
jecxz
hlt
pop
loop
test
flds
cmp
xchg
leave
xchg
test
adc
mov
outsb
nop
cmc
xchg
pop
sbb
mov
inc
jno
mov
push
les
inc
and
dec
inc
ljmp
int3
mov
push
push
imulb
cmp
out
out
inc
sub
sbb
repz
fwait
pop
ds
inc
mov
cltd
mov
mov
ficompl
xchg
stc
cmpsl
adc
mov
ljmp
int
and
jno
xchg
jl
cmp
repz
or
test
sub
add
cmp
insl
hlt
aas
xor
push
adc
sbb
cmc
subb
push
mov
and
mov
mov
add
mov
pop
mov
sti
out
push
xlat
jmp
mov
jmp
add
shll
sti
mov
jne
dec
imul
pushf
movsb
add
cmp
cltd
pop
mov
push
aam
aas
js
mov
or
inc
xchg
rolb
iret
nop
stos
pushf
cld
or
sbb
sub
xor
js
shr
xlat
mov
hlt
sbb
sub
jl
cwtl
inc
daa
pop
fdivrs
inc
cmp
lods
jg
sub
push
in
add
loope
insb
or
pop
frstor
mov
or
dec
sbb
sbb
mov
loop
sbb
inc
test
popf
jo
in
cwtl
xchg
mov
sub
cltd
repz
inc
nop
fmul
xchg
out
dec
mov
and
inc
call
sbb
xchg
out
js
sbb
fs
pop
std
dec
pop
mov
and
repz
outsb
rorl
push
pop
js
push
call
in
cmp
movsl
xchg
fs
or
imul
out
lods
mov
add
out
cwtl
sub
adc
and
cmp
and
inc
xchg
fisttpl
bound
lock
pop
rclb
jne
xlat
sbb
add
mov
iret
or
insb
sub
mov
shrl
inc
gs
repz
mov
lcall
lock
ja
cmp
mov
cld
sar
andb
sbb
pop
jns
jo
pop
shrb
cmp
mov
stos
mov
mov
jg
xchg
shlb
xchg
movl
dec
aaa
mov
in
mov
sti
pop
out
fst
ss
iret
xchg
sub
sar
sti
ja
pop
jae
pop
inc
and
lcall
cwtl
mov
ficomps
sub
pop
loop
add
sbbb
push
fs
or
jb
and
sbb
ss
dec
flds
outsl
cmp
cmpsb
push
mov
mov
cld
or
inc
jp
jns
adc
sbbl
scas
arpl
cmpsb
mov
jns
xchg
in
jne
xchg
dec
cmp
fs
jmp
mov
mov
lods
outsb
jecxz
fwait
cltd
cwtl
mov
lds
in
fdivr
outsb
out
inc
test
mov
arpl
sbb
imulb
xchg
ret
or
xor
push
jp
xor
gs
cmp
loopne
adc
int
mov
ret
push
xor
lea
cmpsl
cmpsl
cmc
pop
aas
adc
ret
sub
sbb
repz
scas
shlb
xchg
subb
sbb
jl
and
cld
mul
int
bound
push
lea
pop
fucomp
mov
jp
out
es
outsb
pop
xor
push
lods
inc
call
popl
or
adc
adc
push
adc
inc
mov
xchg
push
cltd
jae
ret
inc
test
sbb
lahf
pop
popl
jp,pn
stos
mov
aam
mov
je,pt
int3
adc
rorl
inc
rolb
loopne
and
ret
les
pop
inc
mov
push
xor
addr16
fsts
lods
pop
in
enter
fucomi
imul
movsl
test
leave
scas
fcomi
mov
pusha
insb
pop
mov
rep
push
insb
xor
or
mov
fs
cli
ret
jp
scas
iret
pop
rcrb
cld
test
jmp
push
and
fs
sti
pusha
sub
pop
int3
lret
jecxz
lea
xor
jno
sbb
pop
dec
lret
jne,pn
adc
dec
adcb
jle
lea
sbb
and
cmpl
popa
xor
out
pop
fldl
inc
das
sbb
sahf
sbb
inc
test
and
or
sub
and
fsubrs
std
ja
or
inc
movsb
daa
dec
mov
ss
cwtl
jl
xor
add
push
add
pop
loopne
add
cmpl
jns
inc
mov
popf
pop
push
dec
jmp
pop
adc
jbe
leave
push
ret
scas
inc
aam
sbbb
adc
sbb
add
jae
xchg
aas
sub
xchg
insl
add
lahf
pop
cmp
mov
cld
push
mov
add
add
ja
mov
dec
fldl
fiaddl
mov
scas
adc
cmp
movsl
cmpsl
pop
or
mov
call
mov
sti
xchg
sahf
mov
mov
sub
dec
sbb
lods
rep
xor
and
repz
or
mov
ja
loopne
jecxz,pt
sti
enter
xor
mov
xor
or
notb
lea
mov
fwait
lock
jl
add
inc
arpl
sti
sti
mov
cs
or
stc
mov
xor
lret
mov
fcoml
sub
xor
push
jg
rcl
loopne
sub
xchg
inc
call
jmp
lods
lret
mov
xorl
sbb
aaa
push
inc
xlat
aam
mov
mov
cmpsb
jle
pop
add
mov
test
push
push
cmp
push
mov
arpl
adc
mov
negb
dec
pop
xchg
sbb
sbb
sbb
add
pop
les
cs
xchg
pop
test
in
add
mov
cmpb
jns
shll
xchg
shr
int
out
sub
mov
xor
fsts
outsl
and
mov
gs
cmp
dec
imul
adc
mov
movsb
push
mov
mov
test
shlb
adc
cltd
dec
sub
mov
sub
sub
inc
xchg
addb
sbb
and
loop
xor
or
sbb
cmp
pop
push
or
in
popa
bound
flds
cld
std
roll
addr16
mov
daa
push
sahf
fdivrs
mov
push
lret
mov
ret
xor
jnp
rcrl
push
mov
cmc
out
mov
cs
mov
lret
sbb
movb
mov
mov
das
das
scas
push
and
cmpsb
int3
mov
xlat
xor
push
ss
mov
ret
push
ja
movsb
xor
cli
inc
pop
or
jae
inc
xor
xor
push
cmovge
ja
cmpsb
into
jo
out
pop
adc
and
xchg
mov
add
mov
xor
icebp
call
mov
push
and
sub
jo
jb
mov
enter
pop
mov
push
mov
and
je
insb
cmp
sub
xchg
sub
call
mov
rol
mov
loope
or
cmpsb
call
lock
adc
sarb
push
sub
ret
xor
ds
test
fwait
je
sub
aas
lret
xchg
incb
sbbb
dec
adc
xor
lods
clc
xchg
dec
xor
cmp
cmp
mov
outsb
push
loopne
mov
enter
fstl
mov
push
and
movsl
je
dec
jg
push
mov
in
pop
push
hlt
mov
popa
fdivs
mov
imul
push
cmp
call
lret
sar
data16
imul
sahf
lds
jmp
mov
xor
imul
cmp
and
daa
sub
add
out
sbb
dec
add
jo
mov
lret
dec
test
sti
movsl
jecxz
sbb
dec
sahf
in
cmp
xor
lret
pusha
repz
and
icebp
mov
dec
sbb
das
mov
cltd
sbb
cmc
jle
aas
sub
or
imul
dec
popf
sbb
pop
pop
adc
sbb
sbb
addr16
pop
loopne
ja
push
inc
cmpsl
fs
and
pop
lret
push
bound
add
push
jns
push
mov
dec
in
out
out
nop
xor
pop
enter
cli
in
add
pop
js
ds
ss
push
cmp
mov
jne
movsl
add
imul
or
or
xchg
andl
push
push
xor
sub
mov
jo
insb
push
jb
and
test
mov
nop
lahf
loopne
mov
sub
cwtl
jno
test
add
jmp
inc
push
aaa
inc
cli
nop
xchg
ret
cmp
jmp
mov
sbb
pop
ss
clc
mov
push
imul
outsl
out
xor
pop
lods
fdivrs
fisubrl
mov
insl
in
cmpsb
and
push
sbb
cltd
pop
cmpsl
dec
cmp
sbbl
sbb
push
mov
adc
push
daa
imul
rcl
xor
sbb
pop
pop
dec
lcall
inc
clc
imul
jg
adc
test
mov
or
mov
xor
mov
in
push
jge
cwtl
sahf
or
add
in
fcmovnbe
sbbl
mov
inc
sub
xchg
jns
cli
fmul
lcall
inc
dec
pop
jecxz
jecxz
cmp
jns
ret
jecxz
or
popa
int
sbb
add
mov
xchg
inc
fidivs
fnsave
or
mov
xor
jno
add
stos
and
pop
pop
and
outsb
adc
jmp
nop
add
inc
pop
lret
cmp
orl
ret
jecxz
mov
xchg
jge
add
mov
and
imul
call
fcmovnb
cltd
cmpsl
dec
fstpl
mov
push
fdivs
jecxz
sub
int
and
mov
cmp
xchg
lcall
sub
push
std
inc
jmp
cli
inc
sub
icebp
sbb
jns
divb
add
sub
std
xlat
repz
xchg
cmpsb
mov
cmp
into
movsb
xor
int3
lock
js
fstps
adc
mov
and
dec
jmp
pop
lret
mov
int3
repnz
rorb
mov
sbb
push
aaa
jnp
or
push
pop
jns
bound
add
cmp
lods
mov
lahf
aam
or
fcomip
rcl
sub
inc
push
aam
sbb
inc
dec
push
scas
jbe
add
inc
and
sub
jp
out
imul
xlat
data16
or
dec
fisubrs
orb
sub
pop
enter
mov
and
add
ficoms
test
pop
jno
or
sbb
imul
jp
sub
cmp
and
jecxz
adc
push
mov
fdiv
aaa
lods
repz
outsl
or
nop
inc
push
arpl
popa
cmp
push
jbe
xchg
push
jmp
call
fdivrs
lcall
and
pusha
out
call
mov
inc
arpl
adc
adc
sbb
or
scas
les
mov
fidivrl
or
ret
xchg
pop
nop
jns
enter
and
sub
mov
inc
mov
inc
lock
insl
or
out
jne
fdivrs
incl
add
adc
inc
fadds
aad
nop
inc
inc
xor
subb
pop
nop
sbb
je
jae
cmp
imul
pushf
pop
xchg
stc
jge
and
inc
sbb
mov
push
test
lret
ror
sub
in
mov
outsb
cmc
push
sbb
aad
sahf
cmpsb
lcall
aam
pop
js
stos
outsl
pop
xchg
sbbb
inc
out
dec
daa
data16
xchg
pushf
aam
pop
xchg
mov
bound
lret
lds
add
dec
sbb
mov
cwtl
pusha
fldt
sub
push
lea
mov
dec
cmp
shlb
out
popf
inc
mov
insl
mul
cmovns
and
mov
call
daa
inc
pushf
add
daa
jns
ret
add
pop
fwait
dec
scas
lods
shrl
inc
lea
loopne
cs
cwtl
int
daa
inc
dec
ret
push
inc
mov
pop
xchg
lret
pop
repz
sbb
rorb
cltd
popf
pop
nop
in
xchg
fnsave
dec
xor
pop
xchg
inc
xor
push
movmskps
popa
dec
push
push
lcall
cld
test
and
sub
push
pop
cmp
imul
push
adc
sahf
sbb
test
pop
aaa
add
popf
daa
std
dec
aam
push
mov
int
jmp
mov
mov
insb
ficoml
aad
cmc
out
or
sbb
push
mov
xchg
xor
xchg
jb
push
jmp
in
sbb
pop
ret
mov
xor
mov
jo
mov
lea
mov
add
cmp
cmp
je
out
sti
fsubr
fistpl
iret
jl
cmp
push
lock
sbb
cmpsl
repnz
add
outsb
mov
rcrl
es
or
mulb
adc
sub
out
test
or
jg
pop
and
outsb
ljmp
imul
iret
cld
jl
fwait
daa
push
mov
imul
incb
mov
pop
dec
pop
and
jp
xchg
xchg
seta
or
dec
cmpsl
fbld
jle
mov
fidivrs
inc
mov
xchg
and
or
and
xor
mov
sbb
insb
adc
mov
test
inc
les
outsl
ret
dec
jmp
ror
mov
mov
fwait
daa
cmp
cmp
sbb
sti
push
xchg
jns
les
xlat
enter
pop
lret
and
aad
loopne
cmpsl
sbb
lea
cmp
or
pop
outsl
aaa
iret
add
jne
sbb
insb
andb
xchg
lar
pop
sbb
outsl
cld
adc
sbb
in
sub
insl
adc
adc
movl
pop
dec
imul
mov
cld
mov
mov
daa
aam
test
and
sub
test
cld
pop
test
xor
push
push
jae,pn
push
adc
shrl
pop
cmpsb
cmpsb
add
or
mov
ss
fisttpll
cmpsl
adc
fldl
in
aad
mov
or
jne
xor
sub
or
loope
adc
testl
fsts
xchg
mov
jb
loop,pn
xchg
cli
mov
sbb
mov
push
push
lahf
sbb
ds
pop
std
lea
push
mov
insb
pushl
adc
xchg
and
jg
movsl
push
jp
mov
push
enter
and
loopne
sbb
jp
aas
test
jb
pop
sbb
fcoms
add
sbb
jo
mov
sbb
daa
xor
sbb
jle
mov
push
sbb
sub
adc
adc
fiaddl
inc
fwait
lret
inc
push
mov
rcrb
hlt
negl
inc
das
pop
jb
stos
jl
xchg
or
hlt
jae
dec
adc
popa
sbb
cmc
out
out
xchg
call
clc
add
xchg
aad
mov
outsl
adc
into
je
das
negb
cli
fldenv
jnp
stos
jle
cmp
hlt
push
add
mov
loope
inc
faddl
inc
call
insl
push
inc
movsb
mov
punpckldq
les
cmpsb
pop
xor
aaa
jge
cs
leave
pop
outsb
lcall
add
pop
or
in
sub
mov
mov
xchg
jns
aas
inc
out
pop
push
mov
push
push
addr16
outsb
sbbb
rcll
inc
inc
xor
fwait
xchg
pop
jmp
pop
sbb
push
jle
sbbb
shl
lods
jo
fs
cmpsl
mov
icebp
andl
fs
in
inc
loope
and
lea
pop
testl
and
repz
mov
add
outsb
push
test
or
adc
jne
fdivrp
mov
inc
push
or
dec
jnp
push
addr16
dec
lret
pop
push
push
push
ror
into
jmp
sahf
pop
leave
adc
and
pavgw
xchg
adc
push
fcmovnb
repz
call
jns
orl
je
mov
mov
in
jle
jnp
mov
xchg
push
sbb
pop
jo
dec
enter
xlat
ljmp
mov
or
dec
test
insl
dec
lcall
in
ss
mov
xor
scas
inc
inc
fistl
inc
mov
mov
dec
add
cmp
repz
dec
inc
in
movsb
pop
stos
in
repz
sbb
xor
sahf
xchg
arpl
mov
insb
lahf
xor
push
jge
mov
push
xor
das
outsb
clc
push
mov
sbb
repnz
pop
lcall
and
and
mov
sbb
in
jno
loope
loopne
pop
test
push
mov
imul
nop
sub
outsl
inc
fnsave
sbb
mov
push
shll
mov
jmp
sub
push
fisubrl
xchg
sub
addr16
cs
std
or
cmp
aas
out
mov
or
and
inc
pushf
lahf
dec
adc
lret
fidivrs
mov
loope
stc
cltd
xchg
inc
xchg
xor
rcl
jle
mov
push
sbb
xchg
outsb
cmp
pop
out
daa
jb
pop
or
sbb
leave
mov
push
decl
cltd
mov
xor
loop
mov
push
mov
mov
cmp
cmp
push
pusha
out
test
jo
push
pop
or
ljmp
dec
inc
enter
dec
inc
les
ja
dec
push
push
adc
cmp
mov
cmp
data16
out
lods
xchg
lods
add
mov
pop
mov
or
xor
sub
aas
or
fdivrl
jle
inc
xchg
cltd
xchg
das
test
mov
addr16
std
sub
push
mov
ret
add
call
pushf
pop
mov
sti
test
movsb
adc
fs
sbb
dec
mov
jae
mov
movsb
lds
push
addr16
inc
je
lret
ljmp
dec
hlt
xor
cmp
repnz
jge
outsb
pop
xchg
add
and
inc
xor
bound
popa
xor
scas
rolb
push
in
clc
int3
mov
cmpsl
push
rorb
mov
or
call
mov
scas
test
nop
jle
mov
out
mov
push
sti
fcmove
lock
dec
dec
insb
add
loopne
insb
movsb
mov
sbb
leave
mov
pop
rorl
aam
cmp
pop
dec
adc
push
and
pop
ss
add
in
cs
xchg
sub
ret
pop
pushf
xchg
cmpb
dec
arpl
push
pop
jp
int
or
subl
clc
mov
popf
jne
arpl
or
arpl
sti
push
out
sbb
xchg
inc
std
hlt
mov
adc
mov
dec
fadds
aaa
pop
adc
mov
pop
cmp
or
push
insb
movsl
testb
cs
or
pop
adc
sbb
rclb
push
sbb
sub
push
insl
inc
push
mov
mov
mov
dec
fisttpll
sahf
mov
xchg
xor
xor
pop
add
jp
aas
outsl
add
scas
adc
xchg
pop
mov
cmp
xchg
adc
adc
push
add
sti
fmull
xor
or
shrb
cmpsl
add
sub
dec
sbb
sub
xchg
ret
and
addb
push
lcall
sub
sbb
test
aad
push
push
leave
and
add
lods
push
in
pop
and
fmul
pop
pop
and
cli
inc
ret
xor
daa
cmpsb
add
mov
dec
pop
cmp
lahf
xchg
add
push
add
xchg
rclb
and
ds
daa
ret
fiaddl
cmp
xor
push
stc
add
jecxz
mov
sub
fwait
aaa
stos
ss
rolb
lret
mov
ds
movntq
add
test
xor
mov
test
subb
and
scas
push
push
fildl
cmp
hlt
mov
cmp
ss
fwait
mov
sbb
int3
sub
rolb
lds
test
jne
cmp
inc
inc
pop
out
hlt
in
sub
inc
movsl
mov
sub
int
adc
insl
dec
jns
inc
ss
popa
jecxz
sbb
push
test
adc
dec
orb
icebp
ret
dec
fsub
add
std
mov
scas
dec
outsl
or
and
popf
int
xchg
lcall
xchg
divb
imul
push
xchg
push
pop
add
int
inc
repnz
rorb
mov
js
sbb
shll
jg
les
mov
adc
xchg
jecxz
leave
xor
lds
add
or
adc
mov
sbb
pushf
mov
mov
shlb
mov
sbb
fists
dec
aas
inc
in
push
insl
cmp
sbb
outsl
add
imul
inc
push
adc
loop
and
xor
repnz
pop
xchg
cmp
bnd
sbb
fucom
shlb
push
pop
pop
sahf
icebp
daa
nop
xor
test
loop
inc
xor
cmp
cmp
cmpl
cmp
mov
push
hlt
push
cmpsl
clc
push
xchg
mov
inc
jae
daa
dec
or
or
mov
lds
pop
xchg
gs
xlat
dec
iret
dec
out
jno
push
shrl
inc
in
and
or
pop
call
lret
push
cwtl
lcall
mov
out
ficomps
xlat
mov
fldcw
push
mov
sub
mov
cmc
pusha
cmpsb
insb
stos
rorl
jno
aas
outsb
fldln2
and
add
das
xchg
fisubs
add
test
cmp
shrl
and
add
lods
mull
xchg
xchg
ds
inc
ja
outsb
push
xchg
cmp
cmpl
outsb
adc
mov
aad
jno
cmp
push
js
mov
int
mov
sbb
push
aaa
sarb
lret
push
cmp
aad
mov
and
adc
adc
pop
stc
xchg
stos
out
adc
aas
scas
rclb
cli
dec
jne
jmp
add
int3
fimuls
movsl
mov
xchg
sub
push
stos
outsb
push
insl
lds
sub
jg
xor
aam
xchg
in
or
sbb
hlt
lcall
movl
out
loope
mov
cltd
std
inc
mov
jne
cmpsb
cmpsl
dec
sar
xchg
lahf
das
mov
rolb
cmp
out
inc
and
or
xchg
xor
fs
into
push
bound
dec
and
in
mov
insb
mov
xchg
imul
and
dec
add
push
jno
sti
sbb
ljmp
pushf
push
xor
adc
das
mov
out
test
lcall
lea
cmp
stos
stos
popf
inc
fmull
pop
test
pusha
mov
pop
push
addb
movsl
adc
in
mov
mov
mov
stos
and
fwait
shrb
adc
dec
mov
pop
jge
cs
lods
dec
xchg
jo
xor
mov
addr16
out
fnstsw
fsubs
push
loopne
sbb
fwait
xchg
ftst
inc
dec
cli
jns
into
mov
mov
pushf
lock
mov
add
lock
xor
dec
push
xchg
push
inc
ljmp
pop
int
outsb
push
pop
adc
lods
and
test
inc
leave
mov
jo
inc
add
jge
neg
bound
rolb
mov
sub
lods
dec
loop
adc
lods
shrb
loope
mov
xor
mov
sbb
dec
in
mov
or
bound
pusha
shr
dec
or
insb
push
stos
popf
pop
movsl
jmp
pop
pop
inc
ret
in
mov
mov
js
pop
popa
cmpsb
or
dec
or
stc
ret
insl
aam
inc
daa
or
out
or
scas
dec
ljmp
inc
inc
jae
mov
or
fcmovnb
sbb
mov
sbb
js
xor
inc
enter
jne
and
sti
fnstenv
rcl
int
test
sahf
jns
in
lret
mov
cmpb
in
pop
xchg
and
add
sub
sbb
cltd
fisubrs
int3
mov
movsl
stos
es
jns
jbe
push
push
cmc
imull
jg
leave
mov
xchg
mov
cmp
or
sbb
iret
ds
dec
sub
out
out
ss
or
mov
or
sahf
fnstcw
loope
mov
stos
mov
mov
xor
mov
xchg
int
dec
lret
mov
xchg
notb
fdivrs
dec
fimuls
and
fstl
repnz
xchg
push
mov
movsl
dec
jmp
pop
mov
jmp
js
and
jno
js
sbb
jo
pop
pushf
cltd
mov
xor
testb
loopne
adc
lcall
mov
xchg
jl
sub
pop
shll
mov
mov
ret
je
lock
fs
sbb
icebp
fistpl
fiaddl
dec
xchg
or
dec
enter
ss
mov
xchg
jge
sub
lret
leave
pop
adcb
add
mov
sbb
clc
insb
dec
gs
jne
in
adc
arpl
xor
mov
inc
add
inc
xchg
dec
inc
cwtl
subl
mov
jmp
sti
stos
and
adc
xchg
js
repnz
imul
mov
divl
inc
in
loopne
dec
adc
dec
inc
fsubrs
jmp
and
jne,pn
and
sub
jecxz
push
int
inc
xchg
mov
insl
push
arpl
jmp
add
sub
inc
in
xchg
fs
adc
dec
lods
in
aas
daa
cmpsl
cmp
out
sbb
mov
mov
push
cs
shr
gs
cmp
rolb
and
ljmp
loopne
leave
jb
test
lret
test
mov
leave
mov
stc
cld
pop
mov
mov
les
lds
mov
cli
pop
xchg
lods
mov
insb
cltd
out
and
cmpb
cld
fcompl
in
stc
push
mov
mov
data16
jno
and
in
push
adc
push
push
cmc
in
pop
loopne
xor
out
idivb
pop
negl
dec
les
and
xchg
out
xchg
test
mov
jg
mov
mov
and
xor
mov
sbb
jecxz
bound
aad
xor
out
aam
call
mov
lds
insb
push
flds
popa
xor
lret
adc
mov
test
inc
loope
jp
mov
lds
cmpb
inc
addr16
and
cmp
inc
insb
packsswb
int
les
int3
xchg
xor
xchg
xchg
mov
icebp
test
mov
jns
shll
sbbb
jge
or
dec
test
les
xor
mov
pop
push
inc
out
mov
rcrl
jecxz
or
paddusb
fcoml
mov
out
negb
push
pop
cltd
fcoms
xchg
and
ds
jnp
push
in
pusha
cmp
pop
jp
dec
sarl
into
inc
ljmp
aaa
pop
ret
stos
push
sbb
xor
xlat
lcall
jg
or
movsb
mov
jecxz
das
enter
sbb
push
add
iret
push
mov
outsl
test
hlt
stos
pop
mov
pop
inc
xor
pop
xchg
jns
lods
rorl
js
jmp
mov
insl
negl
mov
loopne
fnstcw
or
sbb
outsl
mov
jno
xor
sub
stos
into
mov
cmp
mov
sub
rorb
and
aaa
jl
dec
ficomps
inc
add
aad
fidivrs
or
xchg
mov
mov
xchg
adc
repz
jae
pop
xchg
jg
pushf
push
aad
in
lcall
lea
and
sbb
cmp
aaa
dec
and
jo
xchg
daa
jns
or
sbb
adc
pop
sub
orb
adc
fs
subl
das
sbbb
or
loop
lret
mov
stos
test
movsb
rcrl
movsl
adc
xchg
testb
popf
push
mov
fdivl
adc
mov
sub
push
mov
popf
xor
lret
in
int3
sub
pop
mov
orb
je
sbb
lret
addl
daa
pop
xchg
outsb
pop
std
add
push
mov
jne,pt
xchg
push
and
mov
aad
cmp
xor
add
xor
mov
loop
fstpl
repnz
dec
pop
movsb
sub
dec
push
xorb
stos
push
cmp
sub
int3
push
jmp
cli
push
or
stos
loopne
pop
out
mov
dec
sti
sub
jnp
and
call
mov
shll
jg
pop
test
sbb
xor
add
xor
mov
xchg
ds
or
cmp
xacquire
cld
stc
cmp
cmpsb
or
xor
mov
add
add
mov
pop
xchg
lock
cld
jmp
jnp
inc
ret
inc
sbb
loopne
push
sbb
and
adc
mov
dec
push
mov
shl
ret
jp
adc
mov
stc
jge
sbb
inc
out
mov
mov
inc
mov
lret
mov
add
scas
sub
push
lret
rdtsc
cli
pop
inc
mov
outsb
mov
lea
sbb
mov
add
rcr
lea
inc
sbb
xchg
movsl
pop
das
add
in
and
jp
mov
icebp
adc
inc
dec
mov
mov
mov
sbb
sahf
mov
xchg
sub
test
pop
pusha
push
je
imul
inc
sti
adc
xor
sub
cmpsb
imul
pop
mov
or
jecxz
fs
cmpsb
cs
mov
and
pop
pop
mov
dec
sar
push
xchg
push
fisubrl
aam
repz
test
adc
es
test
scas
xor
and
pop
dec
js
jle
or
xor
push
out
sahf
and
stc
loop
cmp
or
addr16
cmp
loope
push
or
dec
pop
movsl
adc
pop
dec
mov
jnp
dec
inc
popa
aad
loope
enter
shll
jle
lock
decl
inc
scas
addb
dec
pusha
jmp
fwait
std
insl
fisttps
addl
pop
fisubrl
inc
rorb
std
gs
mov
pop
sbb
xchg
out
dec
xor
jb
je
cltd
rcr
addr16
icebp
ret
jo
mov
pop
mov
and
mov
xchg
cmpsl
je
test
fwait
lods
pushf
sub
jb
sarb
jno
xchg
cmp
mov
sti
aam
out
push
inc
add
xor
aam
mov
js
adc
xchg
xorb
mov
pusha
mov
mov
jl
adc
push
mov
adc
fcomi
mov
push
pop
sbb
and
adc
or
loope
cmp
inc
cmc
xchg
sbb
ret
pop
mov
in
mov
sbb
fcmovnu
jns,pn
mov
imull
fstpt
mov
push
test
mov
es
pop
xchg
xchg
add
aaa
inc
ss
cmpsb
js
push
and
test
outsb
in
xor
jge
dec
jle
repnz
loop
mov
popa
or
or
dec
mov
cmp
inc
pop
pop
ljmp
fdivl
popf
testl
mov
mov
cmp
cli
cmpsl
mov
mov
ret
fidivs
lret
ja
jo
push
ljmp
ret
lods
mov
sub
pop
imul
mov
jecxz
aas
mov
aad
les
push
jmp
popa
xor
sbb
jle
shlb
or
mov
ret
scas
ja
outsb
dec
dec
lret
dec
icebp
ret
filds
sbb
add
dec
or
insb
adc
sub
jg
in
add
cmc
push
test
and
int3
push
les
loop
ret
shlb
outsl
mov
idiv
cmp
addr16
mul
pushw
movsb
out
adc
testl
mov
lods
jle
sbb
or
das
out
mov
sbb
and
mov
fsubp
sarl
stos
int3
or
sub
push
fucomi
xlat
cmp
call
leave
fstp
nop
xor
repnz
aas
pop
clc
mov
daa
jle
mov
jb
jnp
xchg
and
loopne
xor
mov
xor
mov
xor
popf
int3
mov
into
loop
sbbl
or
test
and
xchg
push
addl
cmp
shlb
adc
adc
rcrb
mov
adc
inc
mov
mov
sub
aaa
aad
mov
mov
in
sbb
inc
cmp
jmp
mov
dec
adc
mov
sub
xchg
arpl
or
sub
dec
ljmp
inc
sbb
mov
inc
adc
mov
mov
pop
sbb
jae
push
enter
xor
adc
adc
rcrl
push
out
imul
ljmp
inc
stos
and
sub
orl
add
add
cmp
fcomps
mov
and
xor
mov
fmuls
mov
add
dec
mov
fidivrl
mov
and
xchg
insb
cmp
mov
test
adc
add
add
inc
sub
ror
rclb
dec
call
fimull
pop
into
leave
scas
xor
pusha
divb
mov
jmp
insl
pop
nop
push
les
and
push
push
incb
movsb
rcr
dec
xor
jae
rcl
int3
xchg
fbstp
push
add
mov
cmp
mov
sub
int3
mov
imul
sbb
enter
stos
stc
lods
int3
ja
sahf
xchg
cli
mov
dec
mov
cli
stos
insl
xchg
mov
lds
mov
jb
sub
sar
loope
dec
jbe
mov
mov
cld
cli
div
mov
xchg
and
fnstsw
pop
stc
subb
lcall
fiadds
and
mov
cmpl
fdivrl
sub
adc
or
sub
jmp
les
inc
mov
xchg
or
in
outsl
cmpb
insb
xor
jns
adc
loopne
inc
mov
xor
adc
enter
inc
sub
sub
leave
aas
icebp
iret
jns
dec
sahf
jmp
cmp
jecxz
pop
xorl
ds
rorb
insl
cmp
xchg
jg
and
jmp
popl
test
xor
mov
mov
jmp
sahf
mov
fcomp
sbb
call
lret
loopne
push
pop
push
rclb
inc
dec
mov
loope
xchg
pop
lds
fxch
mov
dec
ljmp
cmpsb
xor
lret
xchg
test
popw
and
xchg
idivb
lahf
xchg
add
popa
icebp
js
push
mov
pop
cmp
in
pusha
fmulp
int3
mov
mov
xchg
je
aas
dec
lcall
lret
gs
dec
outsl
sub
or
push
jp
mov
pop
and
or
xchg
push
fstps
add
arpl
pop
popf
nop
add
rorl
lock
cwtl
pop
xchg
push
repnz
jl
rorl
push
stos
ds
and
dec
mov
pop
inc
xchg
inc
jno
out
jbe
lock
daa
les
xchg
repz
andb
loope
sbb
dec
and
cmpl
decl
imul
cli
and
jp
and
and
push
daa
imul
add
es
call
incl
and
cmpsb
jl
inc
jecxz
xor
xchg
sbb
fldl
aad
out
loopne
sahf
cmp
rolb
mov
jecxz
fisubrs
hlt
addr16
data16
insl
add
xor
pop
ja
adc
aam
imul
mov
sub
dec
pop
adc
sahf
lcall
movsl
push
shr
xor
outsl
sarb
pop
pop
cmp
ss
imul
sbb
add
subl
dec
jmp
movsl
jge
ficomps
adc
rorb
imul
out
xchg
xchg
ds
xor
cmc
repz
mov
adc
push
sar
or
jo
pop
shl
out
jno
in
out
mov
jns
xchg
sub
pop
mov
rolb
cmc
add
or
pushf
inc
cmpsb
pusha
jno
xchg
push
add
adc
inc
push
xchg
test
inc
push
sahf
shrl
xor
nop
hlt
cmp
mov
pop
in
mov
cmpsb
in
or
ret
xor
lcall
sbb
push
adc
out
icebp
test
pop
repz
stc
mov
cmp
ret
ficoml
bound
icebp
loope
lea
nop
xchg
mov
cmp
rolb
stos
loope
xor
sbb
add
cmp
pop
push
clc
fs
ljmp
jge
imul
inc
and
loope
cmp
pop
fcomi
cmc
jno
adcb
fsub
sub
gs
out
iret
lahf
and
dec
sbb
leave
sub
test
pcmpeqb
imul
and
test
nop
pop
lldt
ljmp
pop
das
push
mov
int3
xlat
arpl
jle
and
push
sbb
cs
jg
fsubl
leave
sti
jnp
loope
pop
pop
insb
adc
mull
rorl
adc
cmp
scas
fstps
movsl
inc
sti
sbb
mov
cmp
int3
adc
in
inc
loop
sub
jg
adcb
add
dec
jge
inc
fs
insb
imul
test
sbb
adc
jns
testl
dec
xor
xchg
pop
mov
adc
pop
push
js
rcr
rcll
je
pushf
ljmp
mov
addb
inc
jo
insb
add
dec
inc
sbb
fwait
cmp
arpl
adc
add
int3
xchg
pop
jae
mov
data16
or
mov
mov
mov
imul
pop
sbb
insl
scas
cmp
add
cmp
fistps
and
outsb
mov
or
aam
sarl
sbb
push
in
pop
and
xlat
ss
mov
lods
lds
mov
mov
ja
sbb
into
push
insb
mov
jge
mov
aaa
pop
jg
addr16
jg
mov
fiaddl
cld
ss
out
rep
pop
orl
gs
jns
out
call
push
xchg
lahf
jmp
sti
in
xchg
xor
cmpsl
xchg
ret
mov
cmc
sbb
cmp
mov
stos
aam
push
xchg
xor
or
js
dec
xchg
mov
inc
cltd
adc
in
stos
jp
andb
and
push
xor
mov
xchg
adc
lds
mov
das
pop
gs
into
out
hlt
jmp
arpl
push
fadd
mov
sbbb
cltd
popa
int3
in
push
pop
sbb
imull
inc
jno
inc
test
test
push
das
add
mov
inc
adc
and
leave
scas
pop
and
add
mov
cmp
cmp
xor
mov
lods
and
inc
inc
adcl
jbe
testb
and
sbb
fwait
mov
ficompl
jl
out
jae
lea
xchg
jnp
mov
bound
mov
aaa
jo
mov
stos
mov
out
push
pop
into
adc
cmpl
shll
sbb
push
mov
enter
dec
xchg
ljmp
and
xchg
mov
mov
mov
cmpsl
jo
lret
nop
mov
ja
sarl
sub
pop
and
dec
rolb
jb
jl
rcll
dec
jae
mov
sbb
das
xor
lds
cwtl
xor
out
cmpsb
dec
cs
cmc
mov
sahf
mov
jbe
popf
cmc
mov
mov
mov
mov
insb
xchg
fadd
negl
xchg
add
mov
jmp
dec
dec
clc
add
mov
sbb
loope
into
jns
or
sti
loopne
sbb
mov
stos
cmp
xchg
mov
incl
das
enter
cli
push
mov
insb
lahf
push
add
repz
mov
loope
mov
and
loope
xchg
mov
dec
push
mov
or
aam
pop
mov
negb
std
xchg
out
mov
inc
mov
dec
loope
mov
jno
inc
mov
cmc
jle
test
mov
push
pop
jne
xor
mov
sub
test
in
mov
and
jae
inc
push
push
dec
lret
push
lret
push
inc
cmp
call
dec
imul
xor
pop
imul
movsl
mov
stc
std
or
loop
sarb
leave
insb
mov
jae
loopne
das
je
lcall
jmp
jecxz,pt
mov
loopne
pop
xor
ss
lahf
repnz
dec
dec
rcll
andb
mov
mov
mov
jg
movsl
fcoml
inc
adc
mov
inc
int
cwtl
cld
and
loope
push
and
sub
call
xchg
and
lahf
mov
cmp
lret
in
fcmovbe
out
lock
cmp
ljmp
inc
mov
dec
inc
push
pop
mov
xlat
aad
sub
mov
mov
jmp
or
decl
mov
rcr
or
lahf
pusha
out
gs
aad
mov
dec
out
push
cli
and
das
gs
daa
push
fildll
andb
cmp
add
shll
insl
iret
cmp
pop
mov
inc
add
sbb
mov
dec
out
cmp
ret
rolb
or
psubw
fidivrl
sub
xchg
pop
lods
shl
and
mov
push
pop
jo
outsl
pop
xchg
bound
inc
cmpsb
hlt
mov
push
ljmp
mov
inc
jne
jecxz,pn
fwait
mov
sarl
mov
push
xor
mov
sbbb
mov
pusha
xor
scas
jle
sbb
mov
pop
xor
mov
std
cmp
pop
das
mov
inc
sbb
push
sub
mov
xchg
adc
mov
insb
sahf
sub
out
fwait
sarl
out
pop
mov
or
push
dec
int3
test
ret
rclb
sub
mov
ret
jge
jmp
pushf
lcall
test
loopne
and
dec
jecxz
sub
sub
inc
adc
aas
test
mov
int
leave
aam
adc
sahf
jecxz
pop
cmp
sbb
jp
xorl
iret
aam
paddsw
mov
mov
stc
adc
aam
push
pop
daa
jmp
jg
mov
and
sbb
hlt
and
fucom
scas
push
testl
pop
scas
sub
jmp
and
notb
sbb
clc
jbe
movsb
xchg
dec
fdivr
cmc
jmp
adc
mov
mov
jns
repz
dec
and
out
lret
jmp
inc
jns
insb
lcall
pop
js
cmp
cmp
dec
sub
pop
cmc
cmp
sbb
mov
int3
fcoml
ds
into
out
test
sub
nop
xchg
out
lret
loopne
sbb
ja
push
inc
mov
jle
imul
mov
dec
test
scas
cmp
push
shll
dec
mov
cmc
pop
sub
popf
dec
xchg
ds
inc
sbb
push
mov
mov
cwtl
or
inc
flds
sbb
xchg
lea
mov
push
xor
lret
movsl
cmp
push
dec
testb
dec
dec
mov
jo
pop
xor
push
aaa
inc
sub
into
lock
cmp
pop
loope
jle
aas
rolb
jnp
add
and
fnsave
clc
cltd
mov
ret
fadds
xchg
in
and
sub
es
repnz
mov
or
lret
mov
inc
dec
lahf
xlat
mov
mov
ds
pusha
mov
cmpsl
insb
xchg
test
sbb
nop
mov
fwait
in
sub
jl
xchg
or
push
fstpt
adc
sub
inc
arpl
and
jae
dec
mov
mov
rorl
leave
jmp
dec
imul
stos
or
cmp
out
iret
ret
cmp
insl
ds
gs
cld
int3
lock
outsb
out
lods
mov
sbb
mov
xchg
outsb
push
js
inc
pop
fcmove
jmp
and
or
aas
repnz
out
xlat
shlb
mov
add
add
jle
xchg
and
adc
or
leave
enter
ret
fiadds
scas
fsubrp
ja
adc
daa
mov
mov
test
push
aaa
stc
and
mov
sahf
sub
dec
gs
xlat
mov
ret
fadd
mov
scas
mov
sti
lock
mov
les
mov
jnp
stc
shrb
pop
ljmp
shr
jg
and
cmp
jnp
mov
cwtl
jecxz
mov
std
in
sbb
lea
ret
xor
nop
pop
ljmp
mov
push
pop
mov
out
cs
pop
pop
call
sbb
push
jl
mov
daa
inc
decb
xchg
sub
fisttps
sti
popa
mov
cmpsl
fisubrs
aad
cli
mov
mov
jg
mov
stos
xchg
cmpb
adc
and
xchg
mov
adc
xor
cltd
push
test
push
daa
in
pop
movsl
int3
lret
mov
push
xor
and
dec
push
sbb
mov
jae
sti
nop
jmp
ret
pop
jp
test
outsb
mov
xor
xlat
stc
sbbb
jb
fld1
xchg
jno
ficoms
xchg
push
loopne
add
shll
push
negb
pop
pop
xor
sbb
sbb
cmp
xor
dec
imul
sbb
and
sub
sbb
mov
add
fstl
fsub
push
lods
testb
dec
in
xchg
or
or
sbb
jns
and
scas
sub
push
mov
push
hlt
jle
stos
pop
std
imul
out
pop
pop
jp
jbe
push
inc
adc
in
xchg
cmp
pop
push
add
push
mov
sbb
sti
sub
jb
and
jne
jmp
push
xchg
dec
lcall
imul
popf
lods
pop
outsb
add
ljmp
pushf
add
xor
jp
cwtl
mov
mov
jns
imul
hlt
lret
stc
and
aam
jno
pushf
add
pushf
daa
js
pushf
mov
repnz
or
inc
push
inc
daa
xchg
std
inc
jb
xchg
out
add
cmp
mov
rcll
lds
repz
cs
int
cmpsb
dec
outsl
lds
xchg
dec
pusha
pop
mov
clc
jecxz
gs
and
clc
pop
push
xor
les
pop
je
push
cmp
xor
push
int3
inc
fs
jmp
adc
loopne
iret
loop
add
mov
mov
scas
jno
xor
sarl
mov
jl
push
sub
push
imul
repnz
mov
ds
dec
jp
fnstcw
sub
or
cmp
add
insb
mov
cmp
ja
inc
jo
pop
lret
pop
stos
and
mov
jo
ss
popa
jne
stos
sbb
xchg
xor
int3
leave
xchg
push
insb
shrl
pop
xlat
nop
mov
pop
mov
push
cld
stc
fdivs
jns
jge
ret
mov
xchg
inc
ret
leave
pop
movsb
mov
pop
je
xchg
in
pop
push
mov
shll
add
adc
setp
cmp
in
ja
jo
push
jae
xchg
push
ss
in
sub
lea
and
xor
popa
in
mov
aad
or
push
leave
ret
stos
call
mov
jo
lcall
mov
das
sbb
adc
clc
add
push
hlt
xor
ja
adc
fidivl
add
push
xchg
jae
mov
fisubrs
pop
and
loopne
jp
push
inc
in
mov
lock
jg
push
pop
pop
mov
push
jle
mov
test
add
out
push
adc
cmp
out
dec
and
addb
insl
imul
xchg
mov
mov
dec
pushw
ret
cmp
mov
jmp
cmp
inc
testb
popf
lret
xor
in
aad
aas
fbstp
pop
cwtl
add
fisubrl
out
shr
sbb
out
cld
jb
mov
call
or
lds
and
aaa
sbb
call
sbb
sahf
addb
jno
rcl
dec
fldenv
mov
pop
adc
and
mov
ret
mov
addr16
cli
movsb
xchg
ss
sti
mov
imul
icebp
adc
dec
pop
add
test
ja
icebp
decl
xor
aam
fdivrp
scas
xor
xlat
scas
in
pop
mov
mov
data16
and
jno
test
es
add
adc
popf
push
mov
sub
and
mov
fwait
call
insb
in
cmpsl
pushf
lock
pop
pop
pop
stc
pop
sub
cltd
adcb
movsl
data16
xor
in
mov
cmpsb
or
push
aaa
jge
and
xchg
xor
mov
idiv
ds
lret
lret
jg
insb
ss
pop
aaa
mov
ja
sti
data16
xorb
xor
ret
push
sahf
aaa
shll
ret
cmp
dec
ficomps
cli
aad
pmullw
call
pop
dec
inc
fwait
mov
dec
jbe
andb
daa
cmc
and
testb
loop
les
pusha
inc
insl
testb
inc
ret
or
mulb
and
cmp
sahf
out
dec
jnp
pop
dec
xchg
jns
ss
cwtl
pop
cmp
out
gs
adc
insb
rcll
xlat
xchg
mov
cli
push
cmp
gs
enter
jp
add
mov
stc
pop
inc
fmul
cwtl
test
insl
jns
mov
inc
in
repz
cmp
cmp
jge
repz
cmp
mov
bound
sub
rorl
pop
ds
inc
outsl
jbe
into
mov
and
and
mov
inc
cmp
jecxz
cs
pop
mov
jb
hlt
adc
dec
test
loope
sahf
and
fcompl
push
and
and
lock
sub
pushf
pop
aam
daa
or
andl
push
imul
jl
in
adc
data16
or
xchg
add
scas
lods
adc
xchg
or
jo
rorl
xchg
pop
iret
cmp
les
insb
lds
adc
and
pop
pop
fldt
adc
fwait
aaa
inc
enter
es
and
bound
mov
cmc
aam
mov
or
adc
test
mov
icebp
sub
xchg
test
in
fistps
popa
push
adc
or
add
mov
cmp
inc
lods
je
pop
and
mov
nop
loopne
or
cltd
fs
sbb
mov
fstpl
addb
jmp
add
push
int
sbb
jl
je
and
pop
imul
mov
data16
pop
imul
test
and
sbb
imul
add
adc
sub
fstpl
push
out
lock
movsl
dec
xchg
test
mov
lret
mov
mov
add
test
into
call
adc
lock
cmp
cmp
pop
out
mov
or
lret
xor
and
mov
cmp
pop
cmp
sbb
in
mov
movsb
pop
push
sbb
in
pop
call
push
jl
adc
out
cmp
imul
pop
sub
aad
jge
adc
xchg
adcl
movsb
outsb
fsubrl
push
ja
addl
inc
add
mov
push
sbb
dec
jno
xor
or
pop
lahf
fisubl
mov
pop
push
xchg
and
hlt
jg
inc
imul
dec
leave
cmpsb
stos
sbb
outsb
push
ja
adc
pop
mov
sbb
movsb
ret
jnp
int
jnp
and
sub
jl
pop
shll
add
cwtl
inc
cmp
push
loope
aad
cld
lret
call
lret
notb
add
mov
and
add
arpl
mov
pop
out
gs
sub
jb
cmp
cli
push
scas
add
adc
bnd
sbb
lret
mov
fbld
push
aam
lods
out
or
inc
frstor
cwtl
pop
cmp
pop
and
pop
test
push
pop
lods
jns
adc
andb
inc
test
pop
mov
movsl
mov
xchg
ret
aad
or
mov
mov
mov
daa
test
ficoms
je
imul
out
and
test
scas
jns
mov
clc
insb
jo
cwtl
ret
and
shl
push
pop
out
xchg
mull
mov
push
cmpsl
nop
js
adc
and
sub
fimuls
pushf
lcall
sbb
jle
mov
sub
inc
xchg
stos
iret
or
imul
mov
mov
mov
out
les
sbb
add
out
or
test
sbb
inc
push
js
jns
out
xchg
mov
mov
jg
xor
and
adc
mov
lahf
adc
addr16
dec
sub
add
mov
add
cmp
and
mov
test
mov
sub
int3
cmp
inc
mov
xchg
nop
ljmp
jno
stc
add
scas
mov
frstor
sbb
lret
jp
pop
lds
dec
dec
cmp
mov
cmp
and
mov
push
sub
and
xor
jle
mov
mov
pop
add
or
mov
xchg
bound
jne
les
push
cmpsb
dec
pop
cmc
ljmp
sub
xlat
pcmpgtd
xchg
lds
jns
add
ljmp
mov
or
xchg
and
pop
mov
or
or
dec
pop
mov
cmp
sub
jg
fadds
push
xchg
scas
sub
push
sbb
adc
jo
les
mov
inc
jg
push
mov
movsb
xchg
test
fcmovne
pop
push
sbb
aas
or
imulb
jmp
test
ljmp
and
adc
mov
adc
push
dec
dec
call
push
add
cmp
dec
push
pop
cwtl
bound
out
and
mov
roll
repz
mov
dec
pop
mov
in
push
fwait
aas
xchg
adc
xor
movsb
in
shrb
and
ficompl
jg
mov
xchg
jb
jns
xchg
push
adcb
ret
popa
nop
ljmp
or
movsl
mov
xchg
push
add
outsl
mov
or
shlb
dec
pop
lret
sub
xor
mov
mov
mov
sbb
js
jg
pop
or
mov
rcl
and
outsl
fdivrs
jl
add
push
loop
test
and
push
scas
shrl
add
dec
jg
scas
ret
fsts
mov
sbb
or
xchg
enter
sub
pop
arpl
cwtl
cmpsl
xor
sub
inc
into
pop
add
pop
enter
sbb
arpl
ret
add
imul
or
mov
loope
mov
out
xor
lea
cmp
cmp
and
cmc
cwtd
cs
inc
mov
test
out
outsl
sub
jle
jl
cmp
xchg
shl
rcr
mov
testl
in
lcall
aas
pop
adcl
stos
xchg
daa
out
sub
dec
push
xlat
mov
cli
test
push
hlt
inc
sbb
test
push
mov
push
in
dec
loop
mov
push
cmp
push
shrl
pop
test
aaa
out
shrl
adc
ss
std
push
add
out
outsb
inc
push
sub
sbb
loope
push
nop
fbstp
call
mov
subb
sub
inc
cmp
mov
shrl
xchg
jg
mov
icebp
je
shrl
dec
fisttps
insb
mov
push
push
andb
mov
mov
jp
add
jecxz
add
dec
jae
leave
outsb
fnsave
fiadds
mov
push
lods
sbb
ds
out
rolb
mov
mov
std
jg
or
out
les
inc
loopne
and
add
cmp
xchg
push
xor
pop
or
sti
xor
cmp
adc
push
cmpsb
outsb
inc
cmp
and
aam
pop
inc
loope
sbb
psrad
jle
movsl
xor
fidivrl
dec
shr
lea
jne
cmp
and
pop
pop
and
or
cs
or
outsb
jnp
pop
jl
mov
subb
das
inc
out
int
xor
sub
cld
and
ss
mov
leave
ror
inc
daa
sti
jne
sub
pop
inc
stos
adc
add
lods
into
aam
inc
add
movsb
jno
push
dec
inc
les
scas
add
lock
jp
sub
adc
jmp
sbb
adc
jp
adcb
jno
sub
jmp
push
mov
in
jmp
pusha
testb
adc
enter
jl
add
clc
fmull
push
subb
movsb
test
xchg
xchg
or
mov
inc
aaa
clc
lods
adc
pop
out
add
xchg
gs
js
sub
jb
fcmovnbe
es
cmp
test
jae
jecxz
sahf
push
and
fimull
dec
inc
cld
aam
popa
xchg
xlat
ss
mov
in
cmp
or
fildl
jp
pusha
xchg
add
hlt
push
outsl
push
jg
add
daa
test
or
inc
sub
inc
int3
icebp
lret
mov
mov
dec
out
outsl
mov
adc
jp
dec
xchg
out
xchg
dec
jae
std
lahf
inc
xlat
lods
ret
add
setl
dec
push
cmp
pusha
roll
out
mov
mov
out
jno
movsb
popf
add
aam
jle
ret
inc
test
mov
inc
fucom
xchg
dec
inc
xlat
sbb
ss
loopne
mov
mov
inc
stos
popa
xor
inc
jne
dec
ljmp
mov
scas
sub
fwait
adc
adc
lea
inc
sbb
cmp
pop
sub
icebp
loopne
and
popf
ret
pusha
rcl
idiv
ret
or
cmpsb
jg
sub
stc
hlt
dec
sub
cltd
cmp
ffreep
mov
pop
andl
xchg
and
gs
xchg
and
call
xlat
stos
jnp
mov
aad
jb
jo
dec
or
dec
fldt
lods
xor
clc
dec
xor
or
adc
sbb
xchg
je
cs
sbb
jp
inc
stc
sub
movl
fiaddl
lds
jmp
and
add
jl
mov
push
test
je
xchg
hlt
mov
mov
call
or
jl,pt
sub
rorl
dec
adc
push
mov
fwait
and
fdecstp
inc
shlb
or
mov
add
jb
push
mov
sbb
mov
sub
add
out
adc
movsbl
sbb
xchg
into
rcrb
icebp
xor
xchg
xchg
les
sbb
into
lods
cmpsb
dec
rep
mov
ret
mov
aas
or
popa
jbe
or
pop
cmp
mov
repz
ret
not
xor
or
or
scas
and
cmp
adc
inc
mov
jns
mov
xor
in
mov
in
mov
scas
sub
or
jge
mov
xchg
and
test
sbb
pop
add
xchg
sbb
mov
nop
cltd
xchg
and
cwtl
out
xchg
movsb
lea
fistps
flds
ljmp
dec
inc
dec
mov
ja
xchg
xchg
or
out
insb
mov
cmp
in
into
and
test
add
jecxz
cmp
or
sbb
lods
lock
mov
lahf
addr16
dec
ss
lret
movsl
mov
test
test
dec
mov
test
dec
sub
inc
shlb
je
jns
movsb
mov
jne
push
andl
daa
add
jmp
mov
push
cmp
push
into
stos
ja
sarb
xorb
dec
mov
cli
push
ficoml
popf
xchg
xchg
xor
mov
mov
cmpsl
sub
call
in
jnp
test
sub
popf
adc
mov
mov
pusha
jb
pop
leave
cmp
xlat
sbb
add
jecxz
sub
mov
fs
sub
loopne
cld
xchg
lds
or
add
mov
sbb
imul
push
pop
push
lea
ja
fsts
push
cmp
mov
popa
xchg
adc
jmp
test
sbb
sub
jp
cltd
fdiv
daa
jle
cmp
iret
cmpsl
das
inc
mov
test
sub
sub
jge
shl
push
enter
inc
jge
mov
xor
cld
pop
das
es
push
cmp
dec
rolb
cmc
ljmp
jp
add
test
shl
dec
in
mov
pop
push
ljmp
push
cmpsb
mov
jo
aad
xor
mov
movsb
fistl
out
jns
sbb
mov
push
js
sbb
sub
adc
clc
lea
addr16
rcl
push
popa
adc
xchg
adc
cmpsl
pop
sub
add
adc
enter
stc
and
ret
push
mov
fstps
xlat
dec
lcall
jo
lret
lods
mov
and
mov
cmp
mov
call
xor
cmp
out
outsl
mov
xor
es
testl
inc
iret
in
mov
lret
mov
aad
mov
jmp
xchg
xlat
test
push
pop
inc
jg
je
in
lds
sub
fmul
xchg
mov
popa
mov
sub
scas
aaa
mov
jnp
pop
cmp
sub
test
les
cs
repz
cmpsl
xchg
not
ds
sub
push
mov
sub
out
fwait
loope
and
loope
pop
in
jle
loopne
inc
movsb
xor
dec
loop
mov
fisubl
stc
enter
lods
mov
js
adcb
add
and
loopne
xor
stc
or
mov
mov
lcall
neg
lods
in
inc
and
pop
or
seto
pushf
add
out
mov
fnstcw
pop
mov
bound
loope
pop
enter
pop
mov
xor
cmpsl
mov
sub
lret
ja
mov
es
lahf
push
mov
xchg
das
lea
mov
test
sbb
dec
out
movsb
notl
mov
mov
popf
and
das
iret
inc
mov
hlt
outsl
outsl
xchg
sarl
cmp
sti
and
std
leave
ret
inc
jl
push
pusha
sub
mov
xor
ss
in
js
xor
loop
aas
bound
call
out
mov
inc
or
inc
lds
lcall
mov
out
out
xchg
push
int3
cmpsl
arpl
push
push
push
movsb
add
repz
hlt
xlat
into
scas
mov
inc
flds
mov
cltd
mov
push
sub
and
fistpll
inc
aad
mov
stos
cmp
fwait
aas
and
mov
call
xchg
push
push
mov
fbstp
jno
push
call
mov
push
fsubrl
cmp
dec
xlat
sti
push
fisubl
fistpll
sbb
cmp
stos
pop
es
jne
filds
sbb
cli
mov
jl
jmp
je
mov
jecxz
mov
sbb
and
push
dec
push
adc
sbb
roll
jnp
add
repz
loop
push
xchg
add
fbld
push
add
push
push
popf
jecxz
pop
sbb
inc
push
rolb
int
jge
mov
adc
mov
inc
jecxz
and
adc
fucomp
sbb
xlat
xor
fstps
loope
xchg
je
pop
mov
add
das
add
decl
or
test
sub
fdivrs
popf
adc
lock
cmpsb
fimull
inc
jo
ja
xor
mov
sub
pop
arpl
ret
into
or
sahf
fistl
outsb
aaa
popa
pop
inc
mov
rcll
outsb
roll
ljmpw
out
and
add
adc
mov
mov
scas
dec
sbb
push
add
imul
push
and
insb
ss
hlt
cmp
in
dec
dec
icebp
mov
outsb
in
arpl
lcall
lret
ja
push
push
jmp
arpl
xchg
xchg
mov
sub
or
sti
cld
cvtpi2ps
pop
repz
jb
inc
xchg
dec
cmp
ret
hlt
push
jge
fldt
ja
call
out
push
jae
inc
in
incb
xchg
mov
sub
sahf
es
jns
fsubrs
lods
cmc
lret
sub
push
sub
jl
popf
mov
xchg
xlat
fidivs
into
pop
adc
pusha
or
les
ljmp
in
stc
pop
inc
insl
out
sub
sub
push
bound
mov
mov
lods
xor
inc
xor
das
xor
or
add
mov
dec
adc
scas
jo
adc
sbb
repnz
mov
cmp
cwtl
aam
fwait
push
repz
cmp
stos
dec
jecxz
shlb
icebp
loopne
fwait
adc
fldt
aaa
roll
jno
pop
sbb
rcl
lock
nop
xchg
or
or
adc
fs
jb
pop
and
sti
mov
mov
xchg
pop
xchg
xchg
ret
in
inc
inc
fmull
dec
jbe
outsl
fadds
dec
cmp
and
push
sub
xchg
jmp
lahf
call
adc
inc
stc
dec
sahf
in
subl
adc
xchg
cmp
mov
insb
push
repz
andl
sbb
subb
sbb
pop
inc
mov
jl
pop
cmpsl
dec
jne
dec
popf
pop
out
pop
scas
stc
xor
add
sub
and
dec
jg
dec
shrl
pushf
dec
enter
sub
outsb
shll
mov
or
push
pop
cli
inc
xchg
inc
fwait
aad
sti
mov
cli
sbb
sbb
sbb
pop
mov
testb
sub
ljmp
out
fsave
push
and
shll
push
xchg
pop
loopne
hlt
in
dec
pop
fldcw
sbb
cwtl
out
or
xor
rolb
pop
outsl
enter
mov
pop
pop
mov
insl
adc
dec
mov
fildll
dec
cmp
xor
pop
dec
xorb
mov
aas
les
cmp
mov
imul
sbb
adc
pop
push
xchg
mov
mov
test
mov
mov
loopne
mov
ja
call
nop
xor
push
dec
lds
adc
iret
lret
das
push
testl
sbb
test
xor
cvtpi2ps
pop
mov
cli
xchg
and
and
dec
inc
dec
xor
mov
xchg
bound
cld
sub
and
pop
cmp
insl
sub
and
push
and
add
stos
xchg
iret
scas
pop
inc
inc
out
push
test
stos
fstpt
imul
mov
push
add
jmp
shll
js
cmpsb
xchg
lahf
and
cmp
fmuls
ss
outsb
dec
xchg
fldcw
push
adc
xor
xchg
jmp
lret
add
cmp
test
imul
pop
es
shl
es
sbb
pop
jl
mov
sti
add
sub
pusha
or
aad
mov
in
push
jbe
stos
sub
cli
dec
xchg
out
jmp
xchg
dec
sbb
fisubl
fimuls
adc
xchg
xor
inc
stos
jmp
icebp
fstl
jno
jo
inc
push
pop
ficoml
mov
xchg
mov
loope
lock
xorl
dec
fcoml
xchg
pop
xor
push
push
push
push
out
data16
jne
inc
clc
jmp
popf
adc
das
dec
mov
jmp
insb
dec
popa
mov
ret
sub
iret
jecxz
fcomip
mov
sub
cmpl
cli
add
push
shlb
cmp
iret
mov
pop
adc
mov
icebp
sub
icebp
push
cmp
ret
enter
jg
pop
test
lea
pop
popl
test
inc
mov
enter
mov
movsb
pop
jae
mov
div
pop
mov
movsl
in
inc
in
push
cld
cmp
aam
dec
fs
rcr
test
lock
sbbl
dec
fisubs
add
ret
cmc
jge
cmp
adc
mov
jmp
lods
lcall
dec
test
cmc
sbb
jle
and
mov
jle
cwtl
pop
clc
mov
shrb
or
jbe
push
or
xchg
fisttpl
cs
sbb
cs
out
lea
divl
pushf
sbb
pop
push
clc
stos
xor
pop
adc
mov
sti
loope
or
rcll
rcrb
add
repnz
adc
sbb
andb
lods
xorl
xchg
enter
aam
adc
inc
mov
std
xchg
repz
je
aad
jecxz
subb
cwtl
push
cs
push
push
stc
ja
mov
out
sub
inc
sbb
inc
pop
bound
orb
and
mov
pop
adc
in
adc
and
mov
xchg
mov
lret
outsl
xchg
add
xchg
out
xor
push
lret
lret
xchg
push
adcb
test
jl
sbb
loope
int
jmp
adc
mov
out
ss
in
dec
test
aas
push
xor
in
or
into
and
out
out
iret
xchg
dec
mov
cld
mov
sub
sub
xchg
cs
fstpt
push
sub
cmpb
loop
dec
es
movsb
inc
add
scas
cmc
daa
pop
rdmsr
add
and
popa
inc
xchg
xchg
pop
insl
cltd
ja
das
and
push
sbb
add
add
je
add
arpl
lret
push
jne
and
jns
call
clc
xor
xchg
mov
outsb
test
sbb
jge
sahf
xchg
and
fisubrs
lahf
arpl
jno
ret
mov
dec
lods
and
push
xor
inc
lock
test
adcb
cmp
add
sbb
push
loop
sub
out
jl
popf
ficompl
fsts
icebp
dec
test
xchg
push
cli
ret
inc
adc
int
add
imul
movsb
gs
stos
inc
dec
rorb
cwtl
loop
icebp
sub
pop
or
jle
lret
adc
push
mov
xor
fildl
jno
bound
pop
aaa
jnp
jo
repz
les
nop
cmpl
mov
jle
out
loope
jecxz
or
bts
hlt
sbb
gs
mov
add
push
pop
scas
in
cmp
jns
dec
orl
adc
push
adc
adc
aam
pop
insb
adc
cmp
gs
cmp
dec
fwait
mov
mov
or
adc
pop
and
je
fsubrs
xchg
mulb
push
test
aad
inc
or
pop
inc
jne
sar
pop
pop
loop
sbb
mov
ss
mov
std
push
inc
mov
out
mov
mov
mov
mov
dec
into
lock
mov
mov
xchg
push
mov
pop
out
pop
inc
mov
cwtl
pop
or
add
mov
and
sub
cmp
jns
fldpi
testl
imul
ds
push
pop
add
insb
in
push
mov
dec
std
cltd
cli
mov
mov
mov
push
xchg
add
in
outsb
popa
add
les
out
jmp
sub
dec
fsubrs
xchg
mov
lods
test
xor
data16
inc
cmp
pop
sub
push
dec
sbb
sbb
dec
mov
sub
scas
add
push
fwait
aas
jp
iret
jno
outsb
and
les
test
add
repnz
popa
pop
lahf
ja
adc
inc
xor
orl
push
pop
push
sarl
shll
pop
imul
scas
clc
and
orb
arpl
mov
popf
and
adc
popa
imul
mov
mov
xor
out
test
mov
inc
test
lock
pusha
enter
pusha
shll
sti
aaa
arpl
fs
jp
icebp
pop
push
mov
out
pop
test
sbb
gs
cmp
fs
pop
cmpb
push
iret
mov
xor
and
insl
rcll
or
mov
sbb
push
mov
inc
inc
xchg
cli
adc
clc
or
mov
sub
movsl
or
shrb
out
mov
test
int
bound
arpl
out
shll
fbld
or
fnstcw
pop
lahf
out
fisubrl
shr
or
sub
add
push
popf
ds
inc
push
add
out
testl
in
lods
xchg
bound
mov
push
mov
pop
mov
and
shl
cltd
xor
xor
xor
sub
xor
out
ret
rcr
mov
push
cmpsb
fildl
lahf
mov
sub
loop
xchg
inc
or
mov
inc
sub
push
cmp
mov
lret
dec
dec
loope
pusha
les
icebp
mov
fildl
jle
fxch
mov
xchg
mov
jns
mov
je
jns
test
test
cmp
mov
inc
es
sbb
inc
sbb
nop
ds
insl
fcompl
les
fdivl
sub
push
add
icebp
out
inc
loopne
imul
gs
pop
or
xchg
arpl
push
imul
mov
xor
loopne
add
loop
dec
insl
cmpsl
push
fldcw
rorl
enter
lret
loop
ret
or
mov
xor
add
cs
cltd
jbe
dec
js
pop
in
dec
imul
xchg
fstp
into
adc
jl
xchg
sub
js
pop
cmp
pusha
pop
mov
movsb
adc
clc
js
sbb
sbb
push
mov
cmp
push
cltd
jl
mov
pop
mov
dec
loop
ss
xor
fildl
mov
test
pop
cwtl
pop
jg
mov
mov
dec
repnz
jmp
fldz
adc
pop
xchg
je
insl
cld
sbb
dec
sub
popf
int
int
clc
sub
push
jecxz
mov
mov
test
jecxz
fwait
shlb
mov
sbb
cmpb
mov
jmp
or
dec
movl
je
mov
mov
fcomi
inc
and
inc
jno
pop
adc
cmpsb
loop
dec
lahf
fucomip
jge
jl
dec
jae
fldt
add
pop
cltd
lods
cmp
dec
pop
inc
mov
loop
pop
dec
sbb
adc
fs
mov
shl
or
add
mov
inc
xor
std
lds
lcall
mov
lcall
push
pop
sbb
xchg
shrl
mov
xchg
test
xlat
cmp
lock
push
leave
mov
sbb
sub
sbb
mov
push
fcmove
stc
mov
stos
push
mov
sub
or
pop
cmp
scas
push
sarb
and
pop
pop
outsb
cmp
cmp
fstl
or
insb
out
jae
jecxz
add
inc
lret
jb
xor
adc
add
dec
mov
leave
imul
pop
adc
scas
inc
mov
rcll
sti
test
sub
test
inc
ds
or
cs
adc
jno
fwait
mov
cwtl
out
bound
cmp
xchg
std
push
fildll
scas
lret
movsl
movsl
loopne
push
cmp
mov
add
andb
cwtl
cmc
inc
jno
pop
leave
cli
xchg
sbb
adcl
pop
lret
aam
pop
xchg
jne
pop
cmp
ss
out
xchg
insb
mov
insl
pop
sbb
repz
outsb
pop
aas
dec
mov
xchg
nop
xor
jbe
inc
es
pop
int
dec
pop
jmp
lret
mov
dec
xor
dec
outsl
stos
ret
mov
into
cmpsb
fcoms
das
outsb
bound
outsl
xor
loope
mov
je
add
cmpsb
xchg
adc
add
mov
mov
push
mov
aas
or
and
sbb
mov
mov
adc
gs
cmpl
cmp
mov
and
insb
and
nop
mov
pop
call
in
mov
lods
pusha
add
incb
sbb
test
pop
mov
test
mov
or
sub
les
jne
sbbb
in
mov
ret
scas
push
loope
addr16
stos
cmp
dec
lcall
mov
ficoml
pop
xlat
pop
js
fdivr
cmp
jecxz
out
lret
add
mov
rcrl
mov
ds
add
out
xchg
mov
cmp
addb
jo
call
mov
jecxz
callw
jge
inc
pop
inc
xchg
pop
leave
mov
jg
test
jle
and
push
inc
sbb
cmp
pop
dec
dec
aad
cmp
sbb
add
push
sbb
daa
scas
mov
or
sbb
sbb
dec
inc
xor
cmpsb
sbb
repnz
push
or
add
addr16
sbb
or
jb
int3
aas
shll
add
faddl
js,pt
loope
data16
sub
sbb
push
je
hlt
sub
lods
adc
adc
out
enter
popf
xchg
and
aaa
lret
test
test
or
sahf
xor
mov
mov
frstor
fwait
push
inc
clc
pop
nop
jle
loop
mov
out
mov
movsl
fwait
bound
outsl
pop
packsswb
addl
push
aam
arpl
mov
inc
or
insl
rorb
inc
out
or
ss
mov
pop
mov
pop
push
push
rorb
pop
pop
daa
cmp
and
data16
scas
and
adc
push
pop
xor
enter
test
in
ret
sub
mov
fs
add
sbb
ss
imul
popf
mov
mov
nop
and
ja
push
and
xchg
hlt
dec
cmp
mov
xchg
ret
cmp
repz
jmp
or
imul
jmp
pop
jle
jns
jge
pop
pop
mov
dec
lea
sbb
movsl
mov
mov
pusha
sti
adc
in
scas
xor
mov
xor
fdivs
repnz
jp
neg
inc
cmpsb
jg
jg
mov
lock
enter
je
mov
or
shl
mov
lods
ljmp
sub
sbb
sub
push
aam
pop
xchg
or
mov
outsl
icebp
inc
sub
pop
sbb
adc
mov
test
enter
jmp
cmp
fsubrs
test
jecxz
add
sti
es
mov
mov
lret
shlb
test
push
ljmp
sub
mov
add
sub
mov
in
mov
cmpsb
sbb
mov
and
mov
shlb
xorl
sahf
push
mov
test
incb
jmp
cld
xchg
popf
mov
das
sub
ret
xchg
or
sarl
das
add
icebp
mov
add
pop
xchg
cwtl
shlb
jmp
data16
xchg
or
out
xor
mov
lcall
in
inc
fisttpl
jp
and
out
mov
out
fadds
or
roll
or
je
or
xchg
repnz
stos
mov
jns
aam
ret
pop
leave
pop
push
test
popf
pop
out
jo
in
cmpsl
dec
loope
out
outsl
dec
cwtl
stos
xor
sub
inc
pusha
adc
push
bound
jge
mov
or
sub
mov
sbb
cmp
insb
mov
cmc
into
rclb
push
inc
loop
movsb
aaa
int3
mov
out
xrelease
cmp
pop
adc
cld
fsubrs
mov
shrb
lods
sti
lret
mov
das
adc
inc
ljmp
cli
in
lret
call
scas
adc
ss
jnp
and
push
mov
imul
cmp
ficoms
aad
aad
push
nop
call
fs
mov
out
push
sub
inc
jle
loop
xlat
mov
fsts
push
punpckhbw
sbb
aaa
popf
xchg
sub
mov
pop
jns,pt
aas
xor
jae
inc
push
fildll
rol
fildl
add
rcrb
push
mov
and
sbb
or
rorl
outsb
pop
mov
stos
push
mov
test
std
clc
ret
gs
adc
loop
out
adc
cwtl
or
mov
dec
mov
mov
push
mov
inc
inc
jp
jb
sub
ss
mov
ret
push
call
mov
sbb
dec
dec
pop
adc
xchg
fs
insb
stos
fidivrl
push
xor
addps
cmpsb
mov
mov
or
inc
sub
or
pop
insb
xchg
les
cmp
loope
shr
mov
and
mov
scas
in
dec
ss
ret
out
dec
ret
arpl
fldt
mov
cmp
dec
movsb
scas
and
les
or
jle
cmp
pop
xchg
outsb
mov
fidivl
cli
mov
sti
mov
mov
add
mov
inc
outsl
fbstp
dec
in
and
out
xchg
mov
clc
es
lcall
ljmp
xor
pop
fucom
call
dec
adc
jecxz
adc
rcrb
fcmovne
xor
outsl
sub
cmovb
push
imul
dec
sub
mov
out
ljmp
xchg
gs
iret
repz
movsb
in
fiaddl
fs
mov
hlt
lds
lock
cmp
lcall
mov
sub
mov
test
sahf
jle
mov
cmp
sub
shll
arpl
ret
push
inc
lret
sti
jae
xlat
cmpsl
imul
mov
movsb
pop
add
out
adc
scas
or
mov
push
pop
adc
push
inc
cmc
cltd
xorb
lds
insb
cli
push
repnz
in
shrl
jecxz
js
cmp
inc
add
push
push
aam
sbb
mov
sahf
out
cwtl
add
fstps
add
inc
fimuls
std
jp
jne
adc
popa
add
std
xor
nop
add
sbb
imul
sub
push
stos
cmc
jecxz
mov
cmp
fidivrl
jge
cli
filds
cwtl
ja
aaa
clc
mov
js
adc
cmp
add
out
mov
lods
jae
or
bound
int3
iret
and
pop
dec
mov
cmpsl
imul
aas
dec
dec
shlb
ror
fdivl
jo
mov
rorl
imul
jmp
sub
outsl
arpl
lods
inc
jns
mov
pop
nop
push
inc
into
test
xor
pop
aaa
fwait
bound
xor
fisubrs
push
loopew
loop
push
xchg
adc
xchg
mov
mov
dec
dec
ja
pop
inc
pop
daa
lret
je
stc
lods
mov
mov
jg
mov
ss
aam
pusha
jmp
imul
stos
and
leave
icebp
mov
xor
out
idivl
add
xchg
dec
out
pop
or
add
into
or
xlat
xor
daa
andl
ss
jno
jbe
mov
adc
push
push
or
push
mov
fadds
xor
xchg
repnz
scas
pop
jg
out
jns
mov
sarb
dec
lock
jle
cmp
and
sbb
inc
or
jmp
jnp
mov
js
pop
mov
adc
xchg
gs
mov
pop
inc
inc
sbb
sbb
setno
push
jno
nop
jne
fs
test
lcall
add
push
xchg
jle
or
sbb
or
xor
push
xchg
push
test
add
pop
inc
dec
rclb
push
mov
cmp
sub
ss
push
pop
in
and
negl
pop
aaa
cmp
cmpsl
test
pop
or
mov
inc
inc
jl
pusha
jle
insl
mov
sub
in
adc
rcr
scas
shll
or
pop
mov
sbb
aam
outsb
fistps
pop
sub
sbb
dec
das
aaa
adc
cmp
shrb
in
dec
inc
push
les
sbb
in
sub
jecxz
aas
or
xchg
cmp
outsl
xor
lret
out
push
xor
mov
dec
push
jo
push
btc
pop
daa
std
shrl
inc
fmull
push
out
cld
pop
cmc
or
icebp
rclb
aaa
push
sub
push
or
jmp
push
push
bound
mov
mov
jo
int3
jnp
hlt
push
rcrl
add
fstl
jecxz
sub
sub
mov
pop
pop
or
mov
mov
dec
lods
xchg
inc
push
and
adc
push
cmp
lock
out
dec
dec
cltd
loopne
pushf
jns
outsl
mov
mov
sub
push
rcr
xchg
pop
and
ds
mov
sbb
faddl
sbb
stos
mov
sub
sbb
shrl
xchg
jg
adc
and
fs
dec
or
mov
fcoms
loopne
push
stos
push
and
or
sub
jg
decl
scas
stos
aad
jge
insb
xor
jl
fistps
sub
add
xchg
jmp
mov
pop
js
and
dec
or
xor
cmpl
dec
leave
mov
sbb
incb
out
ds
lahf
imul
lret
push
loop
xorl
and
adcl
inc
and
push
xchg
mov
cmp
inc
je
fs
sahf
push
ljmp
mov
push
aad
xor
jns
insb
jecxz
adc
sbb
add
out
mov
xor
cld
or
out
cli
sbb
mov
mov
mov
fwait
jge
cmp
clc
mov
out
out
xor
cltd
pop
outsl
pop
mov
sbb
push
mov
xor
push
sub
pop
in
cmpsb
jmp
pop
in
adc
das
mov
mov
push
fbld
cmpsl
ja
into
je
pop
xchg
leave
test
int3
xorl
and
mov
loopne
sbbb
loop
lret
imul
mov
ljmp
insb
inc
jg
pop
add
rol
out
cmp
int3
mov
int3
in
pushf
mov
loop
call
js
push
fs
fucomip
outsb
and
push
clc
aam
shlb
xor
mov
and
mov
mov
loopne
fyl2x
mov
mov
std
xchg
xchg
js
arpl
into
xor
mov
ficoml
sub
push
aas
in
in
jp
mov
fimull
adc
dec
fwait
sub
add
bound
cltd
test
mov
add
dec
in
xchg
fidivrs
inc
repz
lods
and
in
ret
js
mov
sbb
mov
std
cmp
repnz
call
mov
popa
fadd
mov
out
dec
cld
or
out
icebp
jmp
in
sub
mov
sbb
repnz
sahf
sub
icebp
mov
cmp
inc
sahf
jne
fnsave
repz
adc
shlb
loop
or
mov
mov
rcrl
ds
mov
cld
add
sbb
mov
stc
dec
inc
insb
cmp
notb
push
cmp
cmp
repz
push
test
ret
out
insb
sub
inc
cmp
es
loop
cmp
adc
mulb
push
lret
and
rorl
jp
xchg
popf
jle
divb
repnz
andb
rol
or
sbb
loop
mov
outsl
stc
in
sub
and
sbb
push
cmc
mov
lea
rcll
cmp
mov
scas
scas
push
cmp
bound
mov
addb
mov
pop
push
xchg
lds
test
out
mov
and
cmp
add
and
call
shll
jmp
fidivl
movsb
outsb
adc
xchg
js
jb
clc
xor
jae
xchg
ret
push
jg
lods
pop
mov
pushf
dec
or
mov
pop
icebp
popa
sub
inc
push
dec
adc
mov
sub
xchg
inc
pop
shrb
dec
ficompl
xlat
aaa
in
mov
mov
icebp
or
ds
lea
jno
jg
scas
addr16
xchg
add
mov
shrb
ljmp
jmp
mov
push
fsts
call
sub
testb
aaa
sbb
aad
orb
imul
xchg
ret
out
in
and
adc
jno
insl
je
xchg
fnstcw
rcrb
add
mov
jb
mov
lahf
pop
rcll
dec
and
mov
test
inc
sbb
scas
jl
mov
pushf
mov
loopne
push
cmpsl
test
lcall
popa
out
adcb
call
mov
icebp
cmp
dec
icebp
sub
gs
loop
in
fists
aad
pop
mov
fstpt
dec
xchg
in
push
mov
mov
jne
out
sbb
addr16
and
clc
or
inc
bound
std
in
inc
pop
call
mov
cmp
jo
scas
inc
mov
pushl
ja
mov
daa
or
lret
mov
pushf
lods
jae
sub
mov
fcmovnbe
les
xchg
mov
loopne
inc
icebp
dec
fwait
and
cld
in
pop
adc
std
mov
inc
in
xor
push
add
sub
or
inc
andl
das
inc
mov
mov
cwtl
out
dec
jne
lcall
cmpsl
inc
insl
cwtl
push
cmp
or
jbe
push
push
std
outsb
and
pop
mov
into
xor
shll
fdivs
xchg
divl
mov
mov
ljmp
test
nop
inc
cmpb
push
add
lock
and
inc
mov
sbb
sub
lfs
jp
push
in
xchg
sub
mov
decl
mov
outsl
push
mov
lods
and
xor
jo
push
adcl
mov
adc
cmp
loopne
lret
mov
jmp
cli
stc
ret
mov
and
in
pop
jge
jl
mov
xchg
scas
fidivl
sbb
lcall
les
mov
sub
sub
cmc
pop
mov
addr16
mov
testb
cmp
pop
mov
sub
out
dec
sbb
add
into
sbb
jg
scas
mov
pop
and
or
data16
shrb
xchg
insl
inc
dec
adc
out
jo
lods
add
mov
push
pop
inc
pop
add
push
mov
jne
sbb
in
movsl
std
ret
pop
divl
dec
addr16
jg
push
dec
jmp
sbb
pop
jmp
dec
stos
scas
sbb
sub
cmp
daa
mov
std
mov
fcoml
jno
xor
into
movsb
js
jns
enterw
loope
mov
int3
mov
loopne
jp
das
add
cltd
cmpsl
mov
adc
add
shll
dec
add
inc
jno
xor
pop
inc
and
mov
mov
lods
ja
jmp
scas
jecxz
popl
adc
in
popf
cltd
sub
test
ds
sbb
ja
sti
in
cs
pusha
outsb
jb
scas
inc
dec
inc
pop
test
dec
mov
pushl
jo
jl
ds
push
dec
ret
out
xor
jecxz
outsl
idivb
aas
in
inc
cmp
adc
dec
or
or
hlt
xor
add
in
test
leave
std
xchg
jp
lods
gs
ret
imul
mov
call
jno
cmpsb
mov
inc
mov
mov
imul
add
sub
out
sub
inc
push
js
fs
or
push
fbld
int3
cltd
pop
leave
idivb
dec
dec
add
add
cmp
pop
call
cs
sub
shll
pop
das
movsl
pop
pop
loope
sub
push
jnp
sub
in
sbb
fsubr
xor
and
adc
or
dec
scas
or
push
mov
fwait
cvtps2pd
sbb
inc
inc
mov
xchg
lock
push
cmc
adc
dec
data16
mov
xor
mov
add
call
inc
inc
mov
ja
push
enter
or
movsl
std
push
inc
cmp
stc
cmp
imul
out
repnz
pusha
xchg
test
pusha
add
insb
pop
std
push
jmp
dec
inc
xchg
test
fucom
cltd
pop
inc
mov
push
xor
adcl
mov
mov
xor
sti
rcrb
aaa
mov
mov
push
mov
insb
cmp
es
out
adc
jmp
mov
subb
xchg
out
add
xchg
jo
xor
dec
roll
setae
std
aad
lea
es
mov
enter
dec
lods
loope
xor
push
adc
into
push
xor
pop
dec
push
push
enter
adc
in
rorb
sbb
insb
and
movsb
in
push
or
adc
outsb
aad
add
and
inc
lea
gs
sub
sbb
mov
add
mov
call
lret
nop
movsb
cs
xlat
fstps
insl
leave
in
loopne,pt
sub
dec
test
adc
mov
lods
popf
pop
out
aad
fildll
mov
call
shll
dec
cmp
inc
cld
mov
xor
or
fisubrl
mov
jbe
pop
insb
in
sahf
mov
mull
insb
jb
arpl
nop
adcb
cmpsb
mov
faddl
pop
add
leave
pop
icebp
cmc
and
lea
and
mov
sbb
and
inc
or
nop
lret
outsb
cmpsb
dec
pop
pop
test
fsubl
xchg
call
shl
lcall
std
lods
repz
inc
xor
push
mull
subb
in
pusha
adc
inc
mov
data16
inc
xchg
data16
into
or
mov
cmp
rcr
mov
sub
rorl
inc
pop
out
mov
in
out
jecxz
in
pop
lock
adc
mov
jmp
ja
and
and
sbbl
out
adcl
es
inc
dec
or
testb
dec
rorb
mov
das
aam
loope
mov
lret
push
xadd
dec
addr16
into
xchg
nop
insb
xchg
test
add
mov
ljmp
pop
mov
jp
sub
dec
outsl
xchg
sarl
std
pop
movsb
test
inc
roll
sahf
sarb
aad
mov
dec
gs
cld
push
setg
or
cmp
lahf
je
in
outsb
mulb
fimuls
lods
and
outsl
or
int
cwtl
repnz
test
mov
pop
iret
cld
stc
fistpll
jne
adc
popa
mov
lea
mov
inc
ljmp
push
adc
testl
into
add
int
fdivrl
lcall
dec
cli
js
call
or
xchg
xlat
inc
cmpl
outsb
cmp
movsl
imul
jmp
std
pop
jle
imul
adc
pop
mov
adc
inc
xchg
sbb
push
pop
xor
lret
sub
inc
push
jne
add
jae
cltd
inc
cmp
xor
and
mov
stos
adc
aad
popa
pop
dec
inc
je
cmp
mov
jb
adc
std
inc
and
test
shlb
push
push
sbb
icebp
orb
xchg
jns
rol
mov
and
lods
aas
pop
xor
push
in
jge
mov
fldenv
or
lods
mov
cmp
loope
repnz
repz
fs
sbb
xchg
cmp
push
cmp
mov
loope
and
inc
inc
loop
mov
and
aam
stos
add
sbb
xchg
inc
cmpsb
jne
cli
xchg
sbb
xor
lods
push
xchg
mov
xor
ja
dec
stos
sub
or
in
jle
cmp
and
int3
cmpl
push
popa
shll
mov
xchg
xor
daa
scas
bswap
fmull
fwait
les
jp
dec
dec
ds
mov
popf
lahf
dec
dec
push
mov
jae
bound
add
or
push
push
mov
pop
scas
sub
xor
cmpsb
add
xchg
clc
test
cmp
nop
ret
cmp
jns
cmp
into
popa
push
xchg
jae
in
mov
lret
les
xchg
inc
ret
subb
daa
mul
xlat
test
fwait
stos
inc
push
jae
sti
push
stos
push
repnz
repnz
int3
adc
cmp
cwtl
int3
xlat
scas
pop
flds
xchg
jle
or
and
frstor
add
dec
xchg
sbb
aas
add
and
pushf
lcall
push
pop
pop
or
call
inc
jmp
sti
mov
ds
notl
xchg
aas
popf
adc
sarl
adc
imul
out
sbb
pop
pop
sbb
xorb
lds
dec
sbb
test
dec
in
or
push
push
jmp
data16
orl
push
ret
push
jo
jmp
mov
stc
es
inc
mov
and
adc
movsb
les
fwait
lock
sbb
hlt
sub
cmpsl
je
stc
stos
pop
sarl
sahf
push
mov
jl
xchg
xlat
stc
insb
int3
cwtl
movsl
fimuls
sarl
fstps
adc
int3
pop
pop
sti
dec
push
sbb
movsbl
mov
sbb
aad
aam
jmp
cmp
stos
and
xchg
add
js
xchg
xor
notl
lret
xor
inc
sub
in
cmp
mov
insb
loopne
and
mov
fisttpl
jo
pusha
cwtl
repz
aas
push
pop
mov
sub
pop
sahf
ds
leave
xchg
and
hlt
and
xor
in
mov
push
repnz
aad
xlat
mov
dec
dec
xchg
scas
std
cmp
jecxz
jno
add
sbbl
in
mov
leave
cmpl
cs
popf
or
push
popf
into
dec
xchg
xchg
pop
dec
dec
push
jmp
or
fidivs
rcl
mov
push
scas
repz
mov
ficomps
cmp
add
adc
outsl
cld
mov
mov
pop
xchg
sub
jp
dec
adc
movsb
xchg
outsl
cmp
cli
mov
xor
pushf
popa
repz
imul
dec
mov
xchg
pop
push
in
mov
fildll
jbe
jnp
cmp
int
adc
int
imul
orl
dec
cmp
cmp
test
adc
es
mov
jb
out
test
arpl
cmp
sub
clc
add
mov
popa
lret
xchg
xor
test
shrb
jo
push
mov
push
cmpsb
jecxz
stos
and
pop
loope
mov
xchg
adc
adc
pop
cmpb
imul
aas
test
in
outsl
movsl
mov
aas
dec
repz
adc
mov
out
addr16
adc
jmp
in
fs
sti
xchg
jmp
lcall
cmpsb
out
inc
xchg
daa
sub
or
movsb
mov
cmp
push
pop
mov
fcompl
inc
pop
jp
inc
aam
test
arpl
stos
ds
mov
movsb
dec
pop
sub
xchg
cmp
std
jbe
scas
add
vmwrite
das
sub
cmp
lods
sti
lock
fistl
cltd
mov
pusha
lods
ss
popa
aam
jbe
mov
js
idiv
es
enter
and
jbe
inc
pop
data16
jb
adc
stos
adc
cmp
icebp
movsb
mov
xchg
mov
fsub
iret
arpl
packuswb
inc
repnz
in
push
inc
pop
cmp
insl
mov
jb
lret
inc
and
push
adc
mov
add
movsl
iret
inc
lcall
push
stos
ret
movsb
inc
sbb
cmc
jns
sbb
push
movsl
jmp
add
test
into
adc
mov
sbb
xor
cmpsb
xchg
je
xchg
mov
mov
jne
out
bound
mov
cmpsl
mov
sbb
and
or
les
fists
dec
or
dec
jg
fcmove
movsl
mov
cmp
pop
aad
jo
pop
stc
pop
push
bound
or
inc
imul
mov
lods
rcll
test
stos
test
sbb
push
cmp
push
sub
cmp
dec
fwait
push
cltd
push
pop
sub
lcall
aaa
gs
pop
pop
inc
dec
mov
fldt
scas
stos
pop
movsl
imul
in
sub
xor
cli
sub
lahf
mov
scas
in
scas
and
mov
les
bound
inc
sbb
aas
and
rorb
in
xor
xchg
sti
orb
xchg
push
push
and
testl
xor
and
and
mov
pusha
ret
cmp
cmpsl
jge
lea
idivb
rorl
jl
popa
mov
aad
inc
push
add
jg
lret
movsb
sub
pop
stc
dec
mov
mov
loope
xchg
xchg
push
push
sub
iret
push
test
mov
cmp
pop
mov
dec
sbb
je
and
mov
adcl
fcomp
mov
testb
jmp
sahf
movsl
and
or
push
stos
and
adcl
movsb
loope
sbb
sbb
lcall
fwait
in
repz
lret
stc
xchg
cmc
sub
cs
add
mov
adc
mov
icebp
scas
daa
inc
add
ret
mov
or
xchg
mov
fisubrl
jecxz
mov
jbe
dec
xchg
dec
add
push
adc
dec
int
inc
add
leave
push
adc
or
pop
add
sbb
jle
test
mov
and
jecxz,pt
test
ret
cs
inc
xchg
mov
decb
movsl
loopne
pop
add
jl
icebp
loop
cltd
add
cmc
xor
pop
push
ss
lret
jecxz
dec
mov
popf
mov
push
imul
les
push
sbb
imul
lret
xor
inc
cmp
xchg
xchg
sub
icebp
insl
and
into
adcl
inc
adc
xchg
sarl
std
add
sub
add
push
outsb
outsb
sahf
popf
xchg
or
dec
fwait
lods
les
cmp
push
test
mov
adc
pop
add
and
out
outsl
inc
xor
mov
ds
fistpl
repz
mov
cld
adc
inc
pop
dec
cmp
adc
sub
mov
dec
push
lret
cmp
and
mov
bound
nop
cs
add
mov
mov
or
test
inc
mov
loop
jnp
sub
loopne
push
xchg
int3
ss
outsb
std
pop
js
xor
jnp
fldt
test
lahf
popa
shlb
nop
jnp
mov
aas
repnz
out
adc
xor
adc
movsb
jb
jnp
pop
imul
inc
push
movsb
push
sub
fidivs
outsl
mov
adc
nop
mov
xor
xor
or
add
mov
push
mov
addl
jo
dec
shll
push
xchg
or
fchs
xchg
fbstp
dec
jno
scas
int3
add
sbb
inc
inc
test
mov
cmp
jge
xchg
adc
test
lret
scas
add
push
xor
and
fcmovnb
stos
bound
push
add
popa
shrb
adc
and
cmp
dec
sbb
and
popa
es
xchg
es
cmp
arpl
test
mov
mov
and
or
shlb
std
dec
stc
dec
push
and
es
add
mov
and
imul
or
or
and
push
je
xchg
sub
jl
jmp
add
iret
push
call
bswap
push
mov
push
stos
mov
jbe
notl
fldt
loope
xor
daa
xchg
add
jg
jmp
push
mov
repz
fadd
ljmp
inc
cmp
mov
inc
add
inc
mov
mov
xchg
std
inc
loop
subb
push
out
subb
mov
filds
mov
mov
push
and
jns
adc
sub
jno
mov
hlt
inc
pop
sub
scas
mov
jl
jmp
mov
dec
cltd
push
jne
call
mov
fwait
pop
stos
xor
loopne
cmp
fcmovnb
sarb
clc
mov
cmp
cld
pop
and
les
lods
sti
mov
int
mov
stos
mov
sbb
adc
repnz
out
fldl
test
gs
mov
mov
adc
imul
pop
scas
lahf
cwtl
ja
addr16
test
jno
pop
fs
push
and
addb
mov
outsb
sbb
ljmp
enter
gs
mov
push
mov
aas
pop
daa
stos
in
adc
mov
mov
and
jae
call
push
mov
orl
inc
cwtl
push
into
mov
mov
and
push
insl
mov
push
clc
lret
sbb
out
xchg
cmpsl
inc
mov
mov
out
repz
xor
push
fcmovbe
and
mov
push
lret
stc
cmp
mov
inc
fbld
roll
jmp
add
xchg
ret
xor
stos
push
into
pop
xchg
fcomp
and
fisttpll
jb
push
cmc
mov
mov
push
in
into
xor
and
repz
or
sbb
repz
sti
add
sarb
sahf
inc
xor
dec
pop
mov
push
js
ds
dec
insl
inc
mov
or
movsb
add
lcall
jmp
loopne
stos
daa
cmpsl
mov
lock
test
add
mov
inc
test
in
sbb
cmp
mov
push
fnsave
cmp
int
xor
enter
outsb
jp
aad
or
inc
dec
jp
movsb
or
faddl
and
movsl
mov
es
pop
push
adc
push
or
addr16
das
or
ret
and
mov
push
das
add
stos
aaa
fdivrl
bound
out
lret
stos
divl
and
mov
pop
popa
js
lea
cmpsl
xchg
xchg
mov
mov
sbb
into
leave
pop
in
imul
iret
cmp
sar
and
mov
out
cs
cld
loopne
push
mov
out
inc
sbb
mov
mov
arpl
js
lea
lret
mov
and
neg
push
cli
push
or
loop
out
leave
in
fmull
add
xor
dec
xorl
cmpsb
add
mov
lahf
int
xchg
data16
and
jns
pop
mov
repnz
je
pop
cld
jns
aam
mov
lret
scas
sub
add
mov
jb
xor
mov
pop
cmpsb
arpl
ja
ret
or
movsl
push
popa
adc
cmc
mov
cmp
inc
ret
or
sub
fidivrl
out
std
mov
inc
cmp
cmpsb
sub
push
aad
sbb
fs
cmp
roll
stc
mov
cld
mulb
lods
push
pop
out
leave
or
push
testb
jecxz
xchg
cs
xchg
jne
je
add
cmp
inc
mov
loopne
and
out
daa
jno
iret
fisubrl
decl
lock
add
mov
inc
mov
test
mov
jne
push
mov
in
add
popf
ja
mov
sbb
insb
ljmp
std
in
jl
enter
mov
xchg
mov
push
test
xchg
jno
jbe
xchg
rorl
daa
xchg
in
test
sub
jecxz
push
pop
adc
sbbb
popf
inc
sub
pop
cmp
shrb
andb
cltd
mov
jo
loope
mov
fdivrs
push
cmp
dec
stos
outsb
lret
pop
je
push
sbb
movsl
out
sbb
push
jne
jo
cmp
lret
ljmp
adc
sti
in
dec
divl
jo
call
lock
adc
shrb
or
cmp
fdivrl
stos
dec
sahf
sub
pop
mov
inc
and
in
inc
enter
stc
and
mov
mov
sub
jge
test
add
cmp
push
arpl
or
cltd
adc
cmpsb
call
insb
stos
cmp
xor
xor
cmc
jl
mov
pop
and
in
adc
shll
xchg
cs
test
loope
mull
fisubs
imull
mov
das
cli
imulb
pop
mov
int
sub
lods
fidivl
das
jle
xor
std
movsb
leave
rcrl
mov
sti
push
jno
push
inc
call
push
movsb
popa
jle
clc
out
add
int3
push
jg
dec
xchg
das
push
into
call
cmc
jmp
out
clc
inc
mov
aad
enter
add
pushf
mov
cmc
push
fndisi(8087
cwtl
add
hlt
mov
or
int3
mov
lcall
pop
outsl
xchg
sub
xor
aam
sub
in
push
popa
and
sbb
sub
not
inc
es
cmovae
jno
sbb
and
je
js
pop
or
gs
ror
data16
loopne
jmp
push
clc
dec
pop
xchg
mov
aam
jl
std
aaa
enter
xchg
lds
js
cmp
xor
xchg
mov
mov
in
mov
mov
dec
sbb
xchg
mov
jne
pusha
mov
push
sbb
xchg
in
cli
in
push
mov
xor
shr
sub
inc
mov
and
xchg
jg
mov
stc
rclw
sub
push
add
sarl
pusha
pop
inc
cmp
hlt
xchg
push
cltd
fs
xor
mov
adc
loopne
es
mov
mov
in
es
and
or
popa
jmp
sub
and
xor
sbb
dec
xor
decb
popf
stc
subl
cs
pop
inc
adcb
xor
xchg
aam
xchg
and
lods
test
adc
push
sbbl
add
loopne
cmp
lret
pop
popl
int
sub
xlat
pop
xor
inc
insb
popf
dec
or
or
xor
dec
imul
lea
cmovle
dec
aam
cmpsl
js
call
scas
cwtl
pop
pop
insl
xchg
jb
lock
aad
xchg
xchg
mov
imul
sbb
push
movsb
pop
into
js
and
jns
neg
enter
scas
cmp
push
and
cltd
pushf
push
inc
sbb
add
and
cmp
dec
push
ja
cmp
test
inc
mov
jbe
cli
adc
sub
mov
pop
push
ds
sahf
pop
mov
xor
fcoml
lcall
jmp
aaa
out
lcall
lret
pop
ss
jae
xlat
loop
stos
jne
adc
and
cmc
cmpsl
in
movsb
xor
mov
mov
jnp
push
dec
mov
aad
pop
aas
imul
hlt
fwait
jno
xchg
pop
mov
call
out
mov
adc
or
outsl
mov
fnstenv
lods
dec
xchg
jge
mov
out
jg
es
test
fwait
inc
cmp
dec
push
nop
inc
cmc
dec
mov
and
je
add
call
mov
jb
jp
cmp
or
mov
push
jl
in
mov
adc
imul
dec
repnz
jge
cmp
inc
mov
dec
outsb
cmp
jle
mov
pop
ret
pop
sahf
add
cld
js,pn
jbe
mov
cmc
test
lds
xchg
adc
mov
leave
push
popf
xchg
fisubrs
jl
int3
push
mov
mov
test
xchg
in
addr16
je
mov
out
push
inc
add
insb
sub
inc
mov
or
xor
xor
add
inc
mov
fistl
xor
and
in
shll
loopne
lret
imul
daa
outsb
dec
icebp
das
cwtl
xchg
cmc
jae
mov
fimuls
insb
mov
fdiv
fisttps
call
pop
js
inc
fdivl
or
mov
mov
pop
out
insb
and
mov
mov
push
adc
mov
ss
cwtl
stc
push
dec
jmp
fsubrs
adc
outsl
add
xchg
jmpw
xchg
push
jecxz
push
adc
push
push
fwait
call
test
ljmp
inc
inc
fwait
arpl
xor
and
test
and
xor
xchg
rorl
data16
adc
push
and
inc
fldenv
daa
xor
outsl
in
xchg
mov
fcoml
cmp
notb
push
fistpl
xor
push
adc
push
dec
test
cmpsb
jb
fsub
scas
outsb
lods
or
mov
out
sbb
sar
add
hlt
es
dec
cmpsl
xchg
outsb
dec
jno
push
dec
or
mov
imul
cmp
inc
push
jnp
aad
ja
cmpsl
outsl
jae
mov
adc
mov
dec
pusha
sbb
jo
out
shll
loope
push
mov
adc
push
mov
and
cmpb
cmp
push
leave
push
outsl
mov
jle
fsts
sbb
add
int3
jb
mov
fldt
mov
ljmp
mov
rcrb
scas
xor
ret
cld
xchg
dec
dec
jl
adc
fxch
sub
jg
inc
inc
popf
xchg
sbb
mov
push
dec
scas
push
push
inc
xchg
inc
lods
add
adc
setae
xor
loope,pn
aad
imul
and
cli
hlt
and
inc
call
pop
mov
call
mov
and
es
aaa
inc
xchg
add
movsl
jnp
jns
idivb
sbb
jns
ret
push
popf
lods
repz
daa
stos
and
sahf
pop
aam
sbb
testl
dec
dec
addr16
loope
ja
push
pop
negl
jl
push
and
movsb
hlt
sub
call
sbb
fcomps
jb
or
in
cs
and
adc
hlt
pop
arpl
add
mov
xchg
pop
xchg
inc
cmp
xor
test
push
hlt
lock
int3
idivl
nop
mov
and
icebp
xchg
daa
fisubrl
jb
inc
push
add
incb
push
push
inc
dec
int3
and
xchg
adc
mov
adcb
sbb
inc
push
nop
scas
lea
jnp
sbb
jmp
mov
mov
bound
ja
cmp
aad
fbstp
jae
and
push
xchg
aaa
mov
inc
scas
sub
lods
enter
pushf
cmp
iret
dec
hlt
pop
fdivrs
and
pusha
ss
icebp
jae
mov
push
icebp
pop
mov
out
fbld
mov
adc
jl
in
xchg
jp
cmp
mov
and
int3
jle
cli
add
icebp
ret
js
outsb
mov
jg
movsbl
arpl
and
push
pop
sub
es
sub
fcoml
xor
imul
and
fldcw
punpcklbw
call
jle
mov
mov
mov
mov
adcb
fbld
fdivl
dec
cltd
and
cmc
xchg
in
dec
xlat
cld
jo
push
xchg
xchg
mov
stos
or
std
jae
adc
pop
scas
and
enter
cld
xchg
dec
aas
xor
icebp
mov
inc
mov
and
aad
and
sub
adc
or
mul
push
push
lods
lret
sub
dec
ret
xor
pusha
movsl
push
sub
and
inc
popf
popf
sbb
add
dec
mulb
sub
pop
mov
jge
out
add
repz
xchg
sti
arpl
adcb
mov
xchg
mov
lea
in
test
in
cmp
mov
or
push
push
test
jg
cmp
dec
icebp
adc
notl
inc
jg
jns
jp
sti
mov
lock
out
mov
stos
aas
test
xor
xchg
aad
rolb
int3
add
dec
lods
mov
push
arpl
adc
xor
or
or
stos
mov
dec
fdivrs
mov
add
in
jae
push
mov
loop
jl
and
nop
popa
lods
jg
popf
rcrb
stos
sbb
ficoml
sbb
ds
mov
jb
icebp
roll
stc
mull
inc
xor
out
lock
mov
inc
mov
mov
mov
mov
loop
clc
dec
jno
add
hlt
ss
rcr
pop
push
lret
dec
lock
insl
xlat
in
and
insl
aaa
sub
test
inc
mov
das
fldenv
fsts
xlat
mov
loop
iret
mov
dec
jne
aam
es
and
loop
insl
cmpsl
insl
negl
pushf
push
outsl
sti
inc
dec
aad
push
sub
xchg
push
mov
pop
cwtl
dec
imul
jb
or
dec
push
xor
adc
bound
fucomp
cmc
xor
lock
ds
inc
ret
and
dec
out
mov
outsl
rcrl
xor
sti
imul
cld
and
mov
xchg
shll
or
sti
les
sub
cmpsb
and
cmp
or
jmp
pop
xchg
call
lret
ss
pop
daa
inc
dec
xchg
hlt
ss
subb
pop
push
dec
lret
inc
aaa
iret
or
sti
sbb
ret
cs
aaa
push
add
icebp
rcr
sub
sahf
popa
stos
addr16
lock
int
repz
pop
out
xchg
sbb
dec
mov
lods
es
mov
sar
arpl
aaa
xor
lret
pop
dec
fadd
in
rcrl
add
push
mov
call
add
mov
jl
pushf
and
daa
fiaddl
lret
mov
stos
mov
dec
decl
cmpsb
and
outsb
lea
pop
aaa
mov
and
mov
dec
clc
push
aam
push
cli
arpl
sbbl
addb
in
repnz
push
xchg
adc
mov
inc
xor
fdivrs
into
out
in
lea
adc
push
lret
and
mov
cld
aam
inc
dec
cmp
jp
push
push
ror
add
in
lods
or
push
and
mov
loope
outsl
jnp
or
out
mov
pop
sbb
loope
mov
mov
or
addr16
and
fcoml
jae
aas
pushf
mov
jae
test
pop
xorb
and
sbb
inc
out
and
out
je
mov
cltd
pop
call
inc
mov
ret
pop
inc
mov
inc
and
mov
loopne
in
push
add
js
lcall
pushf
repz
imul
sub
or
mov
and
push
stc
jle
xchg
xchg
add
pop
mov
arpl
testl
jns
ds
out
hlt
xchg
xchg
fimuls
mov
dec
insl
push
dec
pop
xor
inc
loopne
mov
inc
pextrw
and
xor
add
mov
and
mov
and
adc
mov
xchg
dec
inc
mov
rolb
pop
sahf
rorb
inc
pop
clc
xchg
pop
inc
mov
add
cltd
mov
xchg
pushf
add
push
or
push
arpl
outsl
in
subb
sbb
testl
std
push
dec
pop
or
popl
iret
cmpsb
xor
xorb
out
loopne
jo
jmp
jmp
xchg
xchg
adc
mov
adc
jno
xorl
sub
data16
nop
xchg
xchg
cmp
xchg
outsl
xchg
in
daa
add
dec
dec
mov
popf
dec
mov
das
popa
mov
mov
out
sub
ret
push
sbb
or
ficoms
adc
push
push
sti
inc
subb
pop
js
mov
cmp
add
popf
mov
cmpsl
imul
mov
push
ja
call
and
mov
jns
mov
xchg
push
leave
lea
sti
sbb
sub
push
inc
enter
cmpsl
loope
push
mov
mull
stos
and
andb
test
insl
cli
add
mov
sbb
push
sub
jle
or
jecxz
ja
into
jbe
out
sub
sti
xor
inc
mov
sahf
xchg
iret
mov
negb
lret
inc
out
jl
das
pop
xchg
rclb
add
vpshlq
arpl
inc
pop
cmp
cld
lods
sub
xchg
jge
flds
pusha
enter
lret
mov
mov
xchg
cld
sbb
jnp
push
sbb
push
pop
xor
repnz
add
outsl
gs
cmp
repz
mov
xchg
adc
cmp
jl
cmp
out
fmul
dec
adc
lahf
mov
mov
in
push
ror
jmp
icebp
sub
int
sub
mov
js
pop
xor
xchg
cmp
inc
pop
xchg
filds
mov
lret
pop
out
adc
lods
movsb
pusha
jl
out
add
stos
ja
stc
mov
adc
xor
push
gs
aas
addl
xchg
pop
popf
clc
mov
jae
bound
fdivs
cmp
cld
cmc
pause
sbb
hlt
hlt
pop
xchg
das
push
mov
adc
jge
pusha
jbe
sbb
pop
xor
jne
dec
in
jp
popa
nop
and
adc
out
jl
fstps
fnstenv
sub
iret
push
lea
aaa
push
mov
rcrl
add
aas
inc
std
repz
fadds
lock
sub
divl
call
scas
xchg
xchg
and
cs
sub
aad
inc
subb
and
je
mov
in
cmpsl
cltd
sbb
sahf
push
repnz
mov
xchg
out
and
sub
sbb
stos
mov
pop
or
sahf
lea
sub
test
adc
xchg
and
test
lds
stc
add
mov
scas
shl
cmp
sub
mov
insb
mov
lret
leave
sbb
push
sbb
cld
test
js
loope
outsl
cs
testb
dec
test
inc
enter
pop
push
out
or
pop
inc
or
pop
inc
or
and
outsb
xchg
lock
enter
and
mov
shl
imul
jmp
or
outsl
insb
js
cld
test
mov
pop
ljmp
inc
cltd
lock
jg
btr
mov
adc
notb
xor
mov
fwait
ret
shrb
pusha
pop
mov
xor
stos
xlat
xchg
pop
jle
jne
xchg
pop
lea
stos
and
lcall
cltd
cmpsb
inc
inc
js
sarl
sub
in
push
inc
into
in
push
mov
mov
and
lret
xchg
push
cli
scas
and
out
mov
cltd
loope
mov
pop
cmp
xchg
or
sub
lea
in
out
jge
adc
shll
stc
sbb
xor
add
insl
aam
cmp
inc
or
mov
jb
mov
stos
sub
dec
sbb
fcomps
and
fwait
adc
mov
mov
loopne
add
adc
sbb
pop
sbb
push
gs
mov
sub
inc
aas
mov
mov
cmpsb
add
ja
mov
imul
pop
insl
idiv
pop
loop
rol
mov
fs
pusha
and
insb
ds
fisubs
inc
hlt
stc
bound
mov
mov
shlb
cld
xchg
bound
data16
mov
mov
jmp
clc
or
repz
xor
sbb
adc
int3
repnz
push
mov
inc
adcb
sbb
jns
jge
dec
sbb
inc
push
sbb
psrlw
in
cmp
mov
adc
mov
imul
xor
pop
mov
pop
aaa
add
test
cmpsb
adc
sub
in
jg
orb
aas
add
lret
add
mov
ss
ret
cwtl
loope
push
movsl
das
cmp
repz
out
mov
mov
enter
cmpsw
mov
dec
add
push
and
ljmp
pop
jo
nop
or
sub
sbb
add
movsl
sbb
mov
scas
shlb
pushf
out
dec
int
sub
in
fidivl
inc
mov
inc
jae
xchg
icebp
jp
fwait
adc
int
mov
divb
xchg
lock
mov
mov
ss
xchg
je
bound
and
add
cmp
mov
cltd
mov
lcall
push
in
aam
gs
faddp
pop
cmp
lea
push
and
mov
cmp
sbb
nop
shlb
mov
and
mov
aam
xor
pop
xchg
push
cmpsb
and
bound
nop
dec
xchg
xchg
test
jl
xor
jns
adc
mulb
xor
out
cmpsb
or
das
mov
xor
subb
cmc
lods
aaa
adc
jae
pop
jecxz
pop
push
lods
xor
shl
clc
push
mov
fdivrl
push
jge
or
mov
cmp
mov
lret
sbb
sub
dec
mov
push
sub
sti
cld
or
and
inc
test
das
int
mov
lret
shl
sbb
nop
cmc
stos
lea
in
vdivpd
aaa
inc
push
ds
add
adcb
bound
addr16
add
xorl
push
shrl
mov
xchg
or
jae
xlat
aaa
fbld
inc
leave
daa
icebp
popf
movsb
push
ss
add
pop
push
fistps
fstpt
mov
shrl
fwait
cld
iret
mov
pop
jge
in
out
lret
xchg
jo
push
daa
inc
cs
ljmp
mov
sbb
pusha
xorb
cltd
out
test
jle
aam
mov
je
mov
dec
push
or
jo
jb
cmpsb
mov
inc
bound
push
out
jge
insb
mov
aaa
stos
outsb
cmpb
sub
and
subb
arpl
test
xchg
dec
jge
loop
push
je
sbb
and
rolb
filds
jmp
cmp
jecxz
dec
or
push
jne
mov
or
cmp
xchg
xchg
stos
inc
adc
fisttpll
sbb
into
sub
or
sbb
shll
lods
jmp
xchg
lret
xor
mov
mov
add
sub
shrl
adc
aas
aad
xor
fisttpl
js
adc
or
cmp
lock
dec
repz
mov
or
and
jb
sahf
jno
mov
lret
inc
cmp
sub
ret
dec
imul
jge
add
push
cmp
adc
and
inc
mov
adc
int
lahf
dec
out
out
icebp
mov
mov
pop
jl
mov
into
lcall
test
loop
rcr
mov
mov
pop
insb
mov
scas
pushf
movsb
adc
mov
cmpl
sbb
enter
hlt
test
xorb
sbb
adc
xchg
sbb
pop
jno
mov
jo
add
sarb
popa
mov
pop
cmpsb
cmp
into
lods
imul
enter
adc
test
fs
movsb
iret
or
loopne
mov
mov
push
jmp
repnz
movl
lods
into
mov
inc
lret
lret
or
jmp
rsm
jmp
test
sbb
iret
and
aam
mov
inc
or
or
pop
inc
push
repz
test
jnp
sbb
cmc
icebp
cld
pop
aad
inc
adc
jl
sti
in
je,pt
les
sub
movsb
lods
push
dec
mov
push
xor
and
inc
xchg
mov
adc
lds
add
shl
mov
push
jge
jbe
fiaddl
mov
cmc
mov
push
aaa
loope
sub
push
imul
xchg
jae
dec
pop
cmove
icebp
ret
cmp
rcll
cwtl
jnp
xchg
movsl
dec
jns
ds
xchg
pop
mov
loopne
xor
mov
shll
jl
add
int3
fwait
jb
xchg
xlat
notl
icebp
cmc
popa
xor
cmp
sub
out
mov
xchg
push
int
ret
cltd
and
adc
lea
or
fists
xchg
xchg
inc
mov
bound
mov
popf
mov
xor
div
push
inc
mov
xor
mov
and
or
mov
shrb
adc
jmp
pop
addb
and
sbb
add
sub
mov
adc
cmp
or
and
in
mov
push
mov
lods
subb
or
fs
out
push
ret
push
cmp
push
add
repnz
or
test
push
push
call
lds
imul
sub
push
or
ja
jl
lods
sub
pop
fisttps
nop
mov
mov
sbb
sbb
ds
ficoms
or
fsubl
lods
fwait
and
leave
add
stos
movsl
dec
in
js
sbb
jmp
fs
push
addr16
arpl
jae,pn
sub
and
not
sar
adc
add
jecxz
mov
mov
cmpl
push
leave
fwait
into
hlt
loopne
ret
inc
lock
shrl
mov
lret
repnz
sbb
scas
sbb
mov
insl
lahf
lods
pop
dec
int
add
xor
ss
stos
in
mov
cmpsl
add
push
shlb
in
pop
and
lcall
xor
sbb
cmp
jno
fdiv
push
mov
fs
cltd
int
repz
stos
and
pop
sbb
mov
lea
push
or
ds
pop
xor
mov
fnstcw
pusha
pop
lods
outsl
nop
or
sub
add
mov
xchg
lock
mov
jle
rcl
cmp
adc
mov
mov
sub
stos
push
push
push
stos
adc
mov
das
mov
test
xchg
xchg
sbb
dec
fsubs
roll
rclb
xchg
xchg
mov
out
pop
push
fcmovnb
fcompl
outsl
mov
sub
aas
pop
cmp
mov
adc
movsb
jl
add
fcompl
xchg
mov
push
fistpl
pop
lcall
or
es
inc
jbe
jne
sub
in
ds
adcb
popf
mov
push
or
mov
xor
and
mov
icebp
and
mov
mov
inc
mov
fwait
insb
xor
push
cmp
mov
fistpl
fildl
jne
fwait
dec
in
mov
cmc
cmp
jge
mov
fildll
xchg
mov
mov
sbb
lret
iret
xor
xchg
ret
mov
jns
icebp
mov
pushl
hlt
outsl
shrb
xchg
clc
arpl
in
lds
xor
dec
repnz
rcll
es
jl
outsb
sti
push
test
lock
inc
push
mov
mov
sbbl
inc
xlat
jge
out
mov
jnp
jbe
mov
pop
push
xlat
std
out
adc
push
cwtl
gs
xchg
sti
sub
popa
stos
cmc
xlat
pushf
mov
lock
mov
xchg
dec
mov
cmp
aaa
imul
mov
and
xchg
stc
cmpsb
pop
push
in
pop
lock
std
fcomi
xlat
inc
mov
addb
neg
fld
mov
mov
orl
loopne
mov
jae
lods
scas
jmp
insb
jmp
push
inc
jo
icebp
jnp
rol
lret
or
add
pop
rcrl
subb
lock
enter
and
in
out
cmp
fstl
aas
incl
xchg
mov
insl
sub
push
adc
sub
cmp
xchg
sbb
pop
jns
cmpsl
aas
or
out
and
cmp
push
mov
adc
gs
cmp
and
pop
mov
js
push
imul
mov
movsl
sbb
push
mov
cli
std
lods
or
cmp
out
jge
call
imul
std
sbb
lods
cmc
outsb
nop
stc
push
int3
mov
add
xchg
add
jmp
lods
imul
pusha
fldl
xor
push
fistps
push
dec
mov
ds
je
cli
test
sub
jns
je
cmp
fldenv
mov
aad
enter
popf
jp
negb
jle
loopne
pusha
pop
ljmp
and
scas
dec
je
movsl
cltd
xor
mov
or
rcrl
pop
add
cltd
gs
scas
mov
aad
mov
outsb
jno
adc
imul
add
and
in
inc
test
add
shll
push
pop
sub
xchg
cmp
xchg
adc
sub
fwait
adc
leave
in
xor
cmp
test
cs
mov
jo
js
cwtl
int3
cld
jmp
mov
test
sub
push
pusha
inc
pop
dec
movsb
je,pt
inc
pop
dec
sahf
inc
cmpsl
fincstp
xchg
call
sub
jl
not
pusha
mov
call
or
push
mov
out
mov
fucomi
sub
jno
aam
push
mov
push
jns
xchg
int3
int3
and
lret
test
cmp
jae
dec
cmp
test
sbb
std
imull
sbb
call
pushl
inc
push
mov
dec
clc
aad
and
int3
adc
sbb
push
push
jge
int3
clc
xor
cs
mov
push
inc
cmpsb
scas
test
xor
in
mov
or
push
aas
jno
div
mov
scas
push
fs
xor
dec
adc
adc
dec
movsl
mov
pushl
or
or
adc
sbb
in
push
inc
cmp
xor
test
jb
test
out
cli
sub
imul
das
add
fwait
and
pop
cwtl
cltd
sti
add
push
xchg
addr16
in
mov
cmpsl
jae
push
pop
adc
mov
pop
cmp
cwtl
gs
cmp
mov
mov
mov
pop
js
xor
dec
pop
mov
stc
pop
add
mov
pop
inc
pop
aad
dec
and
adc
cmpsl
push
cmc
mov
xor
out
adc
jle
data16
rcrb
mov
cmp
bound
popa
pop
sbb
adc
inc
mov
adc
xchg
inc
dec
sbb
into
jns
inc
jl
mov
mov
xchg
aam
clc
mov
loopne
mov
and
out
and
out
cs
stos
mov
sti
mov
das
pop
adc
fnsave
cmp
pop
aaa
test
sub
outsl
scas
je
mov
mov
xor
scas
pushf
or
mov
xor
in
mov
in
mov
ret
scas
jge
cli
xchg
ret
fistpll
in
icebp
sti
jns
mov
sub
jno
out
pushf
lahf
xor
or
jle
inc
ss
test
xchg
es
inc
mov
sub
xlat
and
push
push
cmpsl
sbb
mov
in
push
mov
loopne
cltd
xor
mov
cmp
jne
pop
xor
or
into
pop
jbe
sbb
addr16
pop
insb
gs
dec
fucom
fs
lods
jle
gs
icebp
loopne
inc
push
out
cmp
lahf
dec
cmp
mov
ror
pop
dec
jmp
fnstsw
push
pop
jmp
sahf
jns
sub
sahf
push
decb
jecxz
ror
scas
sbb
jecxz
mov
mov
inc
inc
inc
in
push
hlt
pop
add
lahf
out
daa
sbb
and
jb
dec
cmc
lods
pop
pop
or
mov
sbb
aaa
call
es
dec
pop
cs
xchg
fcomp
in
or
fcomi
jns
jae
adc
cmp
inc
mov
sbbl
aaa
enter
sti
xor
sbb
sahf
fstpt
jo
sub
popa
cmc
jbe
jae
cltd
int3
mov
ja
cmpsb
or
cwtl
iret
popf
push
scas
mov
or
mov
hlt
lock
lds
cwtl
pop
jmp
sti
adc
js
push
pop
cli
orb
cmp
fsts
test
push
add
pusha
clc
cs
adc
xchg
jae
and
cmp
rclb
xchg
and
sbb
xchg
arpl
icebp
jno
outsl
test
std
jl
jne,pt
cwtl
mov
lods
jg
fcmovnbe
mov
loopne
ret
push
hlt
es
das
and
je
cmp
shlb
jmp
in
imul
negb
push
inc
pop
jbe
es
arpl
data16
das
test
shl
mov
and
cwtl
stos
and
xor
xchg
or
mov
or
sub
jbe
outsl
es
and
xchg
ret
mov
into
cmc
jae
inc
dec
push
in
and
out
push
fnstsw
mov
xchg
shrb
sub
inc
aam
pop
sti
inc
xor
xor
adc
fiaddl
bound
in
lds
sbb
mov
sub
and
mov
mov
push
mov
faddp
sti
or
sbb
cmp
test
stos
mov
xchg
sti
cli
std
scas
sbb
xchg
outsl
adcb
sub
and
mov
in
in
inc
out
fs
mov
add
cmp
in
xchg
mov
adc
ret
shrl
pop
mov
jmp
mov
add
popf
in
mov
nop
pop
in
sub
aas
test
cmp
dec
into
push
out
sub
mov
mov
inc
popa
dec
jmp
cltd
insl
jae
dec
test
aaa
push
xchg
push
cmp
push
mov
arpl
in
fbld
in
aam
xchg
ret
dec
and
mov
mov
cmp
jg
mov
jp
xor
aam
xchg
push
and
clc
mov
push
xlat
pop
cmp
int3
adc
shll
add
in
fwait
lcall
xor
mov
arpl
push
push
insb
inc
out
xor
inc
mov
lock
xlat
cs
in
push
stc
js
sbbb
cltd
bound
mov
xor
shr
out
movb
inc
aad
push
jo
cld
push
xorl
icebp
repz
pop
ljmp
dec
lret
out
add
inc
pop
mov
push
adc
pop
sub
jns
es
push
les
jae
std
in
pop
mov
mov
push
add
xchg
ljmp
fistps
mov
fdivl
bound
jmp
aad
push
shll
push
bound
push
add
sub
xor
inc
in
in
stos
add
xor
loope
fdivr
sbb
rep
cmp
pop
add
dec
xor
mov
add
xlat
xchg
and
xchg
jp
cmp
inc
sbb
andb
pop
movsb
iret
mov
aad
pushf
push
push
hlt
jno
cmp
leave
loope
lret
mov
push
jbe
add
sar
stc
cli
jo
ficompl
dec
arpl
sbb
rcr
push
cmp
loop
jae
lock
ss
loop
xor
pop
and
cmp
mov
sub
cs
int3
mov
repnz
fiadds
lea
add
addl
add
out
mov
mov
movsl
sub
daa
imul
mov
or
xchg
ss
cmp
movsl
movl
sub
cmp
add
das
jae
lds
pop
mov
lcall
mov
push
cmp
jns
mov
shll
pop
inc
out
jno
and
jae
lcall
bound
sbb
sar
or
cmpl
add
adc
xor
fs
ja
dec
es
sbb
fildll
mov
dec
test
sbb
pushf
mov
out
leave
and
out
and
mov
mov
dec
ds
cmp
cltd
ret
mov
iret
mov
jge
fildl
sub
cli
ss
push
dec
push
sub
mov
mov
inc
ret
or
aad
add
mov
test
adcb
mov
push
jmp
jb
add
mov
mov
mov
jle
shll
nop
sbb
jle
push
pop
sub
jecxz
mov
adc
in
jne
mov
fadds
xor
mov
sub
pop
xor
lods
cltd
adc
lahf
enter
inc
enter
icebp
inc
into
and
sbb
dec
jb
inc
stc
push
add
pop
stos
in
push
stos
movsb
pop
jecxz
rclb
outsb
roll
inc
rolb
pop
mov
sub
sti
add
fidivrs
cwtl
pushf
cmp
cltd
xchg
ret
xchg
add
xchg
push
jb
sbb
sub
inc
shlw
fwait
pop
pop
and
jnp
scas
stos
mov
mov
or
sbb
fs
cmp
loop
xlat
xchg
pushf
push
lea
stos
add
addr16
test
sub
push
cmpsl
movsb
or
xchg
or
rorb
int3
inc
sub
adc
mov
xor
adc
repz
inc
and
ficompl
cmp
adc
sub
sbb
aaa
pop
int
add
test
rcr
addr16
inc
xor
mov
inc
jnp
jle
dec
push
ss
inc
mov
hlt
shll
mov
mov
insb
sbb
subb
mov
jmp
orb
ret
or
xor
cmp
xlat
mov
aam
and
sbb
inc
inc
lods
add
mov
and
psubsb
neg
fnstcw
dec
sti
pushf
mov
xor
loop
inc
stos
dec
loop
pop
cs
push
xchg
cmp
aad
dec
cmp
pop
icebp
in
lods
xchg
adc
pushf
aas
xor
mov
stos
leave
scas
jns
lret
fs
mov
inc
jge
enter
and
mov
loop
sbb
into
push
fdivrs
dec
lcall
xchg
adc
add
or
jns
sbb
loopne
jb
dec
cs
cmpsb
ret
inc
jecxz
lds
fdivs
mov
insl
or
fbstp
and
mov
push
inc
mov
mov
mov
dec
or
pop
mull
rclb
mov
das
shl
scas
sub
popaw
dec
dec
notb
in
push
sbb
inc
mov
pop
push
inc
pop
movsl
or
jl
hlt
pop
push
sub
jmp
push
xchg
jmp
subb
xchg
out
popf
mov
int
fwait
dec
shlb
mov
mov
and
cmp
cmp
mov
aas
sbb
cmp
xor
mov
mov
push
or
pop
fldenv
js
pop
nop
push
push
call
rcrl
sahf
fwait
pop
add
in
xor
and
ds
push
cwtl
inc
test
or
mov
xchg
les
jo
fistps
inc
roll
xchg
lds
xor
mov
mov
call
cmp
push
cmp
and
dec
dec
scas
xchg
nop
adc
stos
nop
imul
dec
cmp
lcall
imul
add
mov
mov
xchg
sub
addl
xchg
fstl
jns,pn
and
jae
xor
sbb
sbb
rclb
push
mov
lock
pop
adc
sti
pop
rcll
in
aam
mov
insb
mov
push
fistpll
xor
std
cmpsb
outsl
test
mov
repnz
dec
sub
jne
xchg
les
mov
and
mov
nop
pop
sub
jae
lret
sub
cwtl
cmp
cmp
lret
mov
jle
xorb
in
test
jecxz
test
jb
pop
jne
inc
outsb
lods
sub
jge
fnstcw
dec
dec
icebp
pusha
inc
fs
push
mov
outsl
mov
mov
sbb
xchg
dec
addl
cltd
mov
out
idivl
jbe
iret
out
mov
mov
push
inc
jb
daa
lret
push
filds
xchg
add
mov
and
add
pop
lods
roll
jb
add
adc
pop
int
cwtl
iret
and
push
je
addr16
test
shr
out
push
mov
into
dec
jne
xor
pop
mov
clc
pushf
test
or
inc
push
cs
aam
movnti
sub
pop
and
mov
adc
jle
movsl
jecxz
xor
or
mov
inc
int3
arpl
fsubrs
adc
cmp
fmull
ss
das
push
inc
add
les
sarl
add
cmp
cld
mov
adc
add
ret
fwait
pusha
movsb
ret
je
xor
daa
sarb
dec
pop
shl
jge
popa
loopne
and
int3
orb
mov
push
mov
and
sbb
mov
push
add
jge
dec
pop
sub
mov
push
dec
in
daa
rcrb
imul
repnz
add
shrl
fbstp
and
stos
add
psubq
push
rolb
stos
into
shl
popa
push
mov
mov
and
loopne
add
mov
and
fisubrs
pop
int
xchg
pusha
dec
sbb
mov
jnp
adc
pop
push
out
mov
cmp
mov
adc
mov
pop
jb
dec
pusha
lock
xchg
mov
sbbb
mov
sub
add
mov
cmp
shrl
sub
or
jmp
ss
aas
xchg
pop
pop
push
sarl
mov
stc
jl
cltd
lds
mov
aas
xor
hlt
ret
aad
pushf
lret
jns
pop
jmp
inc
cmpsb
mov
fucom
out
fistpll
test
js
sbb
es
rcrl
sub
cmp
scas
cld
mov
mov
sub
pop
add
add
nop
loop
pushf
sahf
ja
sbb
lret
cld
subb
mov
dec
loop
dec
jb
sbb
mov
cltd
and
and
xor
xchg
test
jae
fidivs
mov
jecxz
cs
lods
and
aas
popl
andl
mov
jne
dec
mov
sub
out
cmpsb
out
bound
divl
sti
mov
ret
mov
movsb
movsb
pop
mov
shrb
gs
cld
out
mov
dec
das
mov
xor
das
and
pop
jnp
jmp
psrad
xchg
aas
jmp
stos
fs
lock
jle
fstpt
pusha
push
jmp
cmp
xchg
and
sarl
jb
pop
call
les
add
inc
or
ret
repnz
add
ss
test
fs
cmp
xor
je
sahf
mov
cmp
push
pop
sbb
dec
into
cmp
pop
xchg
cmp
pop
nop
hlt
dec
cmpsb
gs
xor
cli
mov
mov
push
sub
push
mov
dec
daa
stos
add
mov
xor
sub
sub
cmpsl
sbb
pop
rcll
and
adc
mov
mov
pop
jle
str
inc
dec
push
stos
xor
bound
sbb
pop
in
xor
cwtl
jno
push
cltd
mov
leave
mov
pushf
xchg
iret
adc
insb
loope
lret
jno
push
dec
fadd
pop
sub
sub
insb
mov
insl
popa
bound
fcoms
lods
dec
sahf
sub
in
out
add
adc
das
xor
hlt
sbb
adc
lock
jmp
ss
les
jb
daa
mov
and
stc
jne
jns
stc
push
push
or
cmp
sbb
subl
cmp
mov
mov
jge
xor
out
xlat
fimuls
outsb
mov
adc
inc
sbb
rcrb
push
push
inc
jnp
mov
test
dec
mov
inc
insb
or
je
mov
sub
jae
or
mov
push
or
sbb
mov
jmp
pop
inc
loopne
in
adc
push
cmp
mov
fdivl
inc
add
clc
pop
mov
or
notl
xlat
out
dec
xlat
inc
mov
imulb
pop
inc
and
call
inc
imul
aas
ljmp
fdivp
or
mov
lods
jb
jbe
dec
jbe
mov
and
add
dec
imul
lods
pop
sbb
cmp
xor
xchg
jns
mov
sbb
js
jno,pt
arpl
inc
gs
cmpsb
pop
xor
xchg
add
pop
addb
mov
xchg
repnz
jecxz
push
addr16
push
das
add
add
mov
roll
pop
jnp
and
insb
fmuls
push
push
push
cld
pop
dec
sub
stc
jp
jno
pop
xor
sbb
mov
mov
out
jns
or
add
iret
gs
add
add
pop
inc
jecxz
fnsave
and
mov
out
mov
xor
jl
insb
inc
outsb
cmp
stc
fcoml
push
dec
in
or
adc
pop
xor
jg
jbe
sbb
enter
xor
iret
inc
int3
icebp
jo
sub
mov
xor
fstl
stos
sbb
inc
test
aas
cmp
aas
sti
ja
stos
jg
push
or
cmp
dec
jb
mov
call
lea
mov
and
jnp
leave
xor
fcompl
pop
test
cmc
test
fwait
inc
mov
icebp
jp
sub
popa
imul
dec
cs
pop
adc
sub
push
aas
pop
loop
pop
repnz
leave
pop
negl
popa
and
movsl
sbb
and
jbe
cmp
cmpsl
aad
inc
xchg
cmp
fst
adc
fs
lahf
mov
xchg
push
sub
dec
stos
lret
addr16
push
and
xchg
jb
js
xor
sbb
ret
enter
mov
dec
mov
and
or
xlat
inc
int
out
xchg
int3
arpl
push
pushf
inc
push
in
jnp
mov
cmc
mov
add
fisttpl
adc
pop
inc
loopne
xchg
inc
mov
ds
sbb
repz
and
stc
ret
int3
push
or
jne
dec
xor
dec
jmp
push
gs
cmp
dec
test
bound
sbb
xor
sbb
ffreep
jo
mov
and
mov
pop
js
scas
xchg
arpl
push
push
pop
or
jo
inc
loop
out
shrb
cmp
sub
cmp
ficoms
push
addr16
sbb
pop
out
mov
int
or
sub
insl
jge
sub
mov
movsb
xor
insl
push
jge
xchg
cmpsl
dec
gs
scas
shrd
lods
xchg
add
shrb
jne
lds
or
aaa
xchg
mov
outsl
gs
imul
xor
inc
sahf
add
test
pop
xchg
ss
sub
out
push
mov
inc
inc
fcmovnbe
push
int3
jge
daa
sahf
ds
sub
dec
push
adc
orb
or
insl
in
andb
daa
or
pop
imul
and
pop
je
mov
jae
imul
adcb
mov
aad
cli
cmp
push
add
inc
mov
and
shlb
stos
int3
lds
sbb
call
dec
nop
cmp
cmp
in
add
push
inc
inc
es
int
adc
je
pop
push
jecxz
dec
std
sub
int3
lret
outsl
and
mov
data16
jo
cwtl
mov
jp
outsb
xchg
stc
mov
orb
es
add
mov
dec
popa
push
dec
ret
xchg
cwtl
mov
fistpl
repz
test
mov
rolb
call
cmp
sbb
dec
in
pop
fmul
and
xchg
and
sub
dec
icebp
push
rorb
jne
repz
incb
or
and
in
mov
pop
daa
jne
and
adc
sub
push
mov
mov
sub
and
fdiv
stos
and
out
push
mov
into
push
adc
xchg
jns
mov
adc
lods
pop
loope
mov
mov
jo
aad
dec
mov
xor
iret
test
push
mov
mov
dec
dec
dec
pmaxub
mov
cmpsl
sbb
js
xchg
outsl
mov
pushf
xchg
jbe
jmp
inc
push
lock
and
rorl
aam
pop
push
popa
and
cld
std
pop
out
rep
xchg
mov
and
stc
or
out
stos
add
nop
lcall
or
inc
sbb
ficomps
popf
fildl
aad
cli
jecxz
push
andl
aas
ljmp
stos
or
pop
lcall
cs
mov
lahf
int
pop
ja
mov
imul
sbbb
adc
pushf
pop
mov
xchg
add
fwait
or
test
in
jae
push
movsb
adc
fbld
inc
movsl
lock
dec
push
xchg
enter
xor
pop
test
mov
daa
loope
and
inc
aad
sub
mov
clc
cmc
pop
dec
andb
adc
sbb
push
bound
dec
cmp
pop
mov
or
insl
xchg
cmc
mov
icebp
das
sbb
adc
sti
or
out
and
and
orl
lods
pop
or
adc
adc
xchg
test
fistpl
out
das
cmpsl
test
add
fs
ror
jg
in
mov
sbb
rcll
push
test
xor
mov
cmc
shr
cmp
inc
mov
mov
sub
adc
push
pusha
mov
hlt
xchg
mov
sub
mov
orb
xor
into
je
sbb
aad
imul
inc
cmp
dec
test
mov
xchg
daa
cs
pop
ficompl
jns
xchg
mov
fsubs
cmpb
mov
lods
sub
xchg
push
jb
push
in
imul
push
pushf
pop
mov
sub
push
xor
mov
or
lock
call
jo
fnstenv
pop
cld
adc
cmp
xchg
xor
xchg
stc
fwait
inc
lcall
lcall
addb
add
and
dec
fiaddl
sti
cld
mov
aaa
cmp
call
adc
lock
sbb
dec
and
inc
pop
pusha
test
mov
sub
pop
cmp
jle
pop
out
out
jnp
jmp
andl
xor
std
cld
xchg
push
push
inc
addr16
fs
sub
mov
mov
mov
push
lea
je
pop
jne
pusha
sub
inc
jmp
movsl
cmp
cmc
inc
jle
ljmp
dec
lock
sbb
icebp
or
pop
sbb
add
repnz
xchg
addb
xchg
mov
lret
sbb
mov
xchg
das
sbb
dec
lcall
bound
xor
jge
lcall
or
pop
sub
in
out
imul
mov
ljmp
ss
xor
jge
cs
add
xchg
sbbb
stc
lock
add
cmp
mov
cli
sub
inc
bound
add
rcrb
mov
or
faddl
setl
mov
in
cmp
mov
ret
push
bound
out
sub
and
xchg
jo
je
aad
xor
ret
mov
incb
fisubrl
stos
cld
push
or
cmp
push
push
xor
xor
jp
add
mov
ss
ret
push
lret
mov
mov
cmp
lret
ret
cli
imul
je
pushf
repnz
jo
ret
fstps
popf
mov
push
in
push
lods
ljmp
loopne
pop
lods
test
scas
test
mov
sbb
lahf
sbb
pop
sbb
add
popf
nop
jg
les
mov
mov
pop
in
xchg
jno
dec
int3
jecxz
cmc
cmc
into
mov
cltd
lock
mov
jg
out
push
lds
jecxz
and
jmp
xlat
daa
ja
dec
dec
std
ja
lahf
or
inc
sti
mov
test
iret
inc
push
sahf
clc
pop
lods
mov
pop
mov
add
scas
mov
pop
leave
mov
cmp
lret
or
in
xlat
dec
jge
sub
scas
or
sub
sub
xchg
addb
insb
outsl
mov
lret
aas
add
xchg
mov
inc
adc
int3
ret
outsb
mov
jb
call
sbb
add
mov
mov
and
xchg
jl
cmp
sbb
rcrl
js
lea
mov
stos
pop
ds
sub
xchg
test
xor
fneni(8087
sbb
or
jne
inc
je
add
test
out
or
push
ret
pushf
scas
fnstenv
xchg
adc
or
jle
pop
dec
pop
leave
pop
lods
call
lret
pop
js
xor
in
out
sbbl
xchg
jbe
mov
dec
sub
fisttps
xor
mov
jp
xor
nopl
xchg
dec
enter
int3
mov
jne
stos
pop
mov
pop
add
push
cmpsl
push
leave
bound
hlt
xor
movsl
xchg
int3
xchg
inc
inc
cmp
inc
mov
add
push
test
aam
jns
mov
jae
loop
adc
sub
stc
mov
sbb
dec
mov
cmp
nop
inc
adc
dec
xchg
out
rorl
xchg
and
mov
mov
push
mov
orb
pop
and
adc
inc
push
mov
pop
gs
push
aas
push
fadd
add
cmp
hlt
jo
sbb
aam
or
lea
shl
sahf
jmp
fbstp
sub
cmc
mov
stos
aam
lcall
push
mov
bound
jo
jns
xchg
addr16
xchg
xlat
pop
and
sbbb
xlat
add
sub
out
sub
ljmp
mov
jge
or
pushf
dec
mov
sbbb
mov
lea
cltd
adc
adc
test
sub
mov
clc
cs
fmull
dec
frstor
inc
loope
sub
fidivrl
andb
mov
in
dec
lds
xchg
adc
shll
cmp
sbb
inc
push
jge
fbstp
and
dec
orl
scas
cmpsl
jb
popf
jp
and
inc
push
inc
and
pusha
aas
sbb
xchg
sbb
and
sub
bound
scas
pop
mov
mov
shlb
cmp
jg
push
mov
movsb
push
rcr
popa
xor
pop
xor
inc
enter
dec
pop
lods
insb
mov
sbb
adc
gs
fsubrs
outsl
out
pushf
sub
mov
sbb
and
loop
sub
imul
mov
mov
mov
sub
cmp
lods
inc
mov
sbbb
jmp
add
push
jg
shlb
jae
out
xor
cmpsl
xor
jbe
sbb
mov
cmpsl
jnp
xor
idivl
pushf
mov
dec
mov
mov
popa
or
pop
aam
add
push
aam
int3
pop
andl
xchg
sbb
sbb
inc
call
test
testl
ljmp
xchg
mov
xor
nop
cmc
dec
and
popf
adc
and
add
stos
std
dec
mov
jo
xor
add
inc
sbb
cmp
cwtl
imul
dec
rcll
rorl
inc
rep
mov
mov
mov
outsb
xor
or
in
orl
aam
iret
dec
mov
ljmp
iret
pop
mov
add
scas
mov
xor
mov
inc
ja
mov
inc
lret
adc
xor
pop
gs
leave
cltd
into
addr16
xor
cmpsb
or
nop
push
jne
xor
imul
dec
xchg
pop
std
adc
das
mov
subl
sbb
ja
jmp
sbb
shl
insl
orb
xchg
jnp
fstl
cmp
cmp
push
mull
sub
sub
inc
sbb
cmp
cmp
fiadds
pop
inc
clc
dec
popf
xor
mov
call
fnstcw
sbb
aaa
jmp
outsb
cmp
jns
and
arpl
sub
xchg
xchg
ljmp
ds
add
adc
mov
pop
pusha
fcompl
sbb
jmp
jnp
out
jno
and
inc
addl
adc
lea
jae
mov
sbb
sbb
dec
pop
push
ja
pop
cltd
lods
es
mov
or
mov
adc
mov
frstor
cltd
add
xchg
sub
gs
shlb
mov
in
stc
mov
mov
cs
xchg
addr16
leave
cmpsl
cmp
dec
loopne
test
mov
jge
into
xchg
xchg
cmp
and
xorb
mov
addl
add
push
pop
or
mov
inc
dec
loopne
repnz
sub
add
and
xchg
je
add
mov
fisubl
sub
cmp
ret
mov
js
cmp
lds
xlat
xchg
ret
sub
push
dec
xor
fs
stc
lahf
dec
adc
es
fbld
jno
and
es
cmp
adc
dec
bound
das
xorb
and
push
cmp
cmp
and
add
outsb
cmpsl
ja
mov
arpl
jno
inc
sub
sub
adc
sbb
fsubrl
scas
jnp
jmp
aam
adc
jge
jns
mov
fbld
imull
nop
jge
or
push
adc
cmp
int
xchg
dec
lea
xor
cwtl
xchg
or
repz
pop
test
xor
jno
sbb
stc
jl
push
mov
out
dec
fsubrp
out
xor
xor
sub
mull
mov
out
dec
mov
push
jb
popf
out
bound
mov
das
lret
pop
push
jge
das
shlb
and
mov
sub
fsubrl
stc
xor
adc
int3
rorl
xor
mov
push
push
pushf
out
fadds
sub
vmovaps
not
push
test
sarb
sar
inc
sbb
mov
jmp
pop
mov
mov
inc
sbb
push
es
mov
push
out
jle
xchg
mov
out
push
sbb
add
lea
cmp
fs
xchg
sub
push
pop
xor
jmp
andb
ret
pop
and
and
mov
in
dec
inc
cli
push
push
inc
or
shrl
dec
dec
imul
dec
call
pop
int3
outsl
test
and
dec
xor
je
arpl
mov
sub
lahf
stos
pusha
mov
insb
xor
or
ss
icebp
and
xor
jns
out
mov
mov
adc
mov
push
sbb
inc
mov
mov
das
popf
flds
bound
adc
jg
pop
decb
aam
sbbb
mov
mov
mov
icebp
push
xlat
lret
insb
mov
adc
sub
cmp
dec
lea
sbb
mov
das
xchg
loop
or
xchg
xchg
mov
mov
dec
mov
xor
sbb
andb
sbb
sbb
or
lcall
ss
jle
xchg
mov
jo
fwait
movsb
fwait
jnp
pop
adc
stos
or
outsl
push
mov
lahf
js
test
stc
popa
xor
dec
pop
popf
pop
pusha
xchg
pop
jbe
std
ljmp
adc
inc
push
add
and
and
inc
jl
add
jo
sbb
inc
mov
or
shrb
inc
or
loop
add
mov
mov
fcompl
xor
sub
sbb
and
jg
pop
and
data16
jmp
cmp
sbb
out
pop
mov
sbb
xor
enter
adc
loop
js
rcl
xchg
clc
push
add
xlat
add
cmp
mov
inc
sbb
cmp
lahf
xchg
adc
adc
iret
xor
xchg
add
mov
mov
cmp
xor
pop
pushf
hlt
je
xchg
sti
jge
lods
rol
rcl
jge
in
test
cmp
cmpsl
enter
mov
inc
cmp
xchg
movsb
shrb
bnd
cld
push
jmp
push
ja
js
add
xchg
jmp
cwtl
push
icebp
insb
nop
cmp
adc
daa
test
int3
imul
cmp
scas
dec
mov
xor
or
je
sbb
sbb
stos
dec
dec
mov
mov
or
mov
or
cmp
lods
imul
cmp
jno
int3
pop
scas
cmp
inc
dec
int3
jle
mov
sbb
pusha
lock
sub
test
cld
xchg
pop
mov
pusha
or
dec
push
inc
pusha
mov
out
stos
pop
mov
or
fnsave
js
xchg
and
push
add
mov
fiaddl
shll
mov
mov
cmp
add
clc
test
jg
and
les
jbe
add
fwait
stos
pop
into
pop
sbbb
pop
callw
out
adc
xor
push
pop
pop
mov
mov
popa
sub
ret
add
cmp
and
movsl
push
loope
mov
pop
jne
dec
aas
ret
scas
jl
out
gs
and
cmp
mov
out
imull
int3
into
ljmp
inc
xlat
jne
inc
int
cmc
lods
pop
cmp
imul
rorb
test
xchg
sub
dec
ja
rorb
fists
and
scas
icebp
xlat
das
ljmp
adc
push
jle
adc
aaa
or
divl
popa
add
cltd
into
xlat
inc
mov
in
jae
mov
cmp
mov
int
inc
pop
icebp
adc
adc
pop
and
jb
in
pop
pop
adc
mov
rcrl
mov
xor
and
shr
mov
inc
inc
jecxz
fistpl
fisttps
insl
imul
jmp
pop
test
loope
add
pop
inc
jae
add
rcr
fiadds
jno
jne
shll
sub
shlb
icebp
dec
imul
push
fldl
inc
or
mov
pop
incl
inc
movl
add
jp
push
aam
out
jmp
and
xchg
in
out
and
jmp
inc
cmc
je
jb
cmc
or
jg
outsb
pop
xchg
pushf
test
push
push
stos
dec
in
xchg
fcomp
les
cmc
in
pop
std
mov
outsl
jge
into
pop
stc
mov
imul
fadd
leave
cmp
or
mov
dec
add
jns
in
add
test
pop
push
sbb
fwait
stos
xor
cld
push
out
dec
mov
stos
dec
js
les
in
dec
lea
mov
inc
and
or
cmovo
fisttpll
and
icebp
in
mov
in
out
and
mov
pop
test
mov
jge
mov
shl
movsl
ss
les
mov
mov
jns
pop
lahf
inc
xchg
mov
xor
fwait
pushf
test
frstor
xchg
stos
mov
cwtl
push
adc
cld
add
and
gs
cmp
shl
inc
shlb
notl
outsl
jg
xor
and
push
ja
jnp
mov
int3
xchg
es
cmp
outsl
dec
xlat
mov
push
mov
or
xor
and
test
imul
ret
xorl
shll
fidivrl
push
pop
out
call
std
jmp
xor
push
pop
adc
push
push
inc
cmp
add
filds
push
mov
or
or
out
add
div
stc
sub
cmp
cmpsb
mov
sbb
push
jp
push
xor
cmpsl
mov
pcmpeqd
adc
lret
sbb
imul
int3
push
fildl
int3
fiaddl
imul
dec
push
sub
rcrl
insb
jbe
pop
sub
dec
in
pop
dec
and
lcall
insl
jb
lods
dec
lods
insb
loope
inc
or
xchg
inc
push
fists
fistps
mov
dec
add
jp
je
pop
addr16
les
sbbl
jl
push
or
push
jp
mov
cmc
ja
rorb
das
sub
jbe
repnz
das
shrl
sub
test
jl
mov
leave
jp
cmp
gs
imul
mov
inc
dec
dec
incb
ljmp
mov
mov
lcall
pop
cwtl
jle
das
lods
xchg
cmpsb
les
jmp
aaa
pop
lods
dec
dec
aaa
push
movsl
add
test
cwtl
or
imul
or
push
xchg
outsb
add
lods
lock
test
lock
inc
dec
xchg
sub
out
pop
jge
mov
sbb
mov
movsb
mov
jp
cmp
push
pushf
sahf
es
loop
cmp
cmc
pop
les
xchg
push
jno
fbstp
xchg
jne
xor
mov
dec
ljmp
push
out
and
xor
fldcw
and
ja
leave
in
addr16
and
repnz
or
frstor
pop
jp,pn
aas
add
repnz
jne
fld
imull
addr16
jmp
sbbb
outsb
jmp
es
sub
repz
adc
jecxz
jmp
cld
xchg
sti
fcmovnbe
lret
addr16
mov
dec
jns
sub
xchg
addl
fcompl
pop
aam
rorl
out
jl
ret
adc
mov
cmp
movsl
incl
ret
or
sub
test
dec
pop
fisttpll
call
xor
and
je
mov
pop
or
push
jb
int3
in
sub
xchg
jne
jae
cmp
xchg
inc
cmp
xchg
rcr
bound
outsb
loope
cmp
leave
nop
sub
xor
adc
push
lcall
and
aad
incb
mov
repz
addb
mov
inc
dec
and
mov
dec
push
out
dec
mov
adc
aad
movsb
pop
out
mov
imul
dec
jne
or
xchg
lea
ret
mov
popf
xchg
test
mov
pop
cmc
sub
add
sbb
insb
inc
adc
cmpl
mov
into
imul
push
dec
sbb
addb
add
cs
mov
jl
sbb
pcmpgtb
dec
out
pop
xchg
pmuludq
data16
pop
xchg
mov
sbb
xorl
or
mov
add
into
loop
rorb
ret
push
xor
ret
sahf
sbb
xor
mov
rclb
shll
mov
insb
ja
jle
lahf
mov
mov
lock
add
int
adc
jg
popf
xor
loopne
dec
sbb
dec
daa
je
in
pop
add
repnz
and
push
inc
loopne
loope
push
out
std
jp
jmp
dec
sbb
mov
fildll
sbbb
scas
jns
mov
mov
add
in
test
int3
cld
and
pusha
cwtl
xchg
or
fadd
xchg
pop
mov
or
test
stos
movsb
ror
sbb
or
std
in
or
arpl
jecxz
cs
movsl
jl
xchg
pop
and
push
xor
sbb
adc
adc
lret
inc
add
cltd
movsl
inc
add
pop
dec
push
lea
cltd
mov
or
dec
fcomps
rorl
sbb
push
fimull
ja
mov
sub
add
adc
addb
mull
aaa
and
cmp
cmp
lret
std
test
mov
add
cmpsb
mov
push
cmpsb
add
jo
mov
pop
shll
and
imul
or
cmc
repnz
in
cmc
pop
or
add
push
mov
int3
or
mov
cwtl
and
jl
xor
mov
pop
jo
cmpsl
mov
xor
adc
insb
mov
and
cmp
movups
scas
jle
xchg
lock
xor
ffreep
sbb
test
rolb
iret
int
jecxz
lock
xchg
les
mov
xlat
pop
out
in
ja
inc
stos
outsl
xor
mov
lahf
and
lods
adc
adc
or
add
cmpsl
mov
jne
movsl
imul
sub
sti
cmp
xor
mov
sti
cmpsb
push
insl
shlb
movntq
out
inc
std
lcall
jle
or
or
pop
pop
inc
or
sub
sahf
pop
insb
je
popf
push
jo
adc
pop
aad
lea
mov
push
call
jne
in
xchg
pop
dec
or
int
push
std
push
or
jle
shr
mov
enter
cs
dec
gs
jb
and
stc
addr16
mov
imul
push
aam
outsb
hlt
adc
inc
xor
je
out
fldt
push
or
dec
stos
fadds
push
imul
sbb
jbe
and
inc
ss
fucom
stos
adc
pop
in
call
ret
jno
cmpsb
filds
scas
dec
xor
xchg
jmp
dec
test
es
clc
loope
xor
sub
jecxz
jle
ror
jge
push
mov
aam
sbb
jl
sub
in
out
xchg
in
clflushopt
aam
jp
xchg
sub
clc
ljmp
lret
test
push
cmpsl
push
lcall
loopne
xor
inc
add
insl
and
addr16
mov
int
and
fiaddl
test
icebp
mov
sbb
pop
and
jno
ret
jl
in
adc
and
in
sub
push
pop
repnz
jmp
lds
cs
insb
es
mulb
cmc
push
call
cmpsb
inc
test
push
es
adc
or
jns
adc
or
xor
jecxz
repnz
mov
xor
aaa
mov
mov
pop
popf
pop
cld
out
jl
lea
dec
mov
inc
jmp
jae
rcrl
repz
lret
cltd
test
dec
test
je
sbb
loopne
xor
hlt
ljmp
lret
pop
testb
in
cmp
out
outsl
sti
mov
aaa
lret
dec
pop
adc
jb
xor
xchg
pop
push
dec
xchg
jge
cmp
lods
leave
sti
adc
pop
sti
push
xchg
fmull
cwtl
in
jb
jno
sbb
and
adc
jge
add
arpl
ret
test
in
cli
mov
in
test
push
jecxz
dec
push
sbb
xchg
add
or
pop
enter
and
xchg
lcall
adc
mov
push
pop
and
iret
test
test
mov
xchg
xor
cs
jns
lea
mov
data16
add
jbe
cwtl
cltd
jle
jae
xor
rcrl
fs
addb
xchg
fstpt
and
mov
ficompl
mov
lret
clc
or
mov
cmp
inc
sahf
xchg
add
mov
or
sub
mul
pop
jge
add
jb
mov
cmp
rcr
cld
jne
movb
jl
jb
adc
ret
inc
rolb
xchg
notb
sbb
xchg
sub
mov
cwtl
sbb
mov
cmpsl
das
aam
push
shrl
enter
pop
rorb
inc
mov
nop
jl
cmp
movsb
adcb
mov
rclb
jbe
sbb
mov
add
and
and
pop
sbb
jg
dec
push
dec
push
sub
aad
mov
sub
inc
and
repz
loop
sbbb
gs
arpl
push
push
sub
cmpsl
popa
lock
pop
push
popa
sub
xchg
cmpl
dec
or
xor
pushf
jno
bound
and
dec
bound
xor
dec
mov
xchg
sbb
dec
insb
test
jnp
aaa
mov
dec
stos
mov
pop
add
jbe
xchg
xorl
stos
pop
cmc
and
xor
popa
xchg
sbb
roll
in
pop
lcall
jae
fnstsw
clc
sbbl
shl
rcll
les
cli
lods
push
es
sbb
dec
aad
dec
xorl
pushf
aaa
pop
push
shrb
arpl
push
dec
pusha
add
dec
sbbb
mov
fucom
or
cwtl
or
faddl
push
inc
xchg
data16
cmp
jecxz
xor
insb
push
mov
cmp
rorb
cmp
mov
dec
inc
jne
inc
dec
mov
cld
inc
jno
add
ljmp
sub
fisttps
adc
inc
hlt
int
pusha
shrl
xor
ret
orb
jecxz
mov
sbb
loope
in
int
ljmp
popf
or
cmc
pop
cmp
cmc
cmpb
lret
cmp
cmpl
jg
adc
push
sbb
enter
xor
stos
or
aad
cwtl
jbe
cmpl
adc
je
dec
xor
jp
lods
sahf
scas
int
into
sahf
xchg
cld
or
cltd
cmp
cmp
out
pop
ds
call
xchg
lock
mov
mov
dec
mov
mov
dec
mov
sub
push
arpl
out
mov
repz
movsb
jge
je
js
into
xor
mov
adc
enter
mov
inc
out
adc
mov
dec
test
pop
jbe
ficoml
scas
lret
sbb
mov
rcrl
sbb
mov
cmp
sub
dec
jg
xchg
std
push
add
jmp
daa
sbb
xchg
add
in
gs
mov
faddl
dec
xchg
xchg
push
movsb
cltd
je
and
cli
xchg
inc
dec
and
and
cmp
xchg
enter
lods
sbb
pop
lahf
add
pop
push
sub
push
movsl
imul
mov
nop
or
and
and
jb
scas
pop
and
mov
test
pushf
imul
sahf
subb
test
mov
roll
sbb
test
and
pop
rorb
inc
rcr
in
xor
add
sub
pushf
sub
push
pop
dec
mov
jb
fmuls
or
pop
pop
lret
adc
cmp
jmp
in
lds
outsl
lods
mov
xor
mov
rdpmc
inc
xor
aad
push
xchg
push
fistpl
mov
xchg
icebp
out
inc
dec
ljmp
and
cwtl
xlat
fwait
dec
inc
sub
lds
cmp
lahf
jle
shll
ss
stos
sbb
cmp
mov
stos
jge
push
decb
out
subl
out
out
out
idivl
cs
ficoms
xchg
aad
je
pop
repz
sbb
xchg
loopne
push
popa
shlb
ret
outsb
test
inc
sahf
fwait
out
fbstp
data16
cmp
in
cmc
std
leave
outsl
fwait
add
mov
xor
pop
mulps
pop
jns
push
andnps
pop
mov
out
imul
orl
setnp
in
mov
mov
stos
adc
fisubrs
rcl
pop
test
out
es
arpl
pop
loope
aas
pusha
push
dec
push
pop
fcmovne
cmp
xchg
pop
xchg
push
xchg
fcoms
negb
sbb
jp
jle
add
int
jp
out
jp
stos
cmp
cmp
xchg
ret
inc
popf
sub
inc
xorb
mov
pop
mov
stc
add
cld
adc
inc
jg
test
mov
mov
push
inc
mov
in
fmul
jne
and
mov
jae
lahf
pusha
xchg
dec
cmc
mov
cmpsl
inc
jp
bound
mov
mov
push
pop
push
insb
xchg
enter
xchg
sbb
xor
js
leave
aad
fcmovnu
imul
rclb
xchg
mov
lahf
xor
and
in
sub
adc
jecxz
adc
pop
mov
dec
lea
mov
cwtd
dec
imul
push
or
jnp
sti
jp
loopne
loop
jecxz
mov
add
mov
dec
jne
mov
scas
negl
inc
sub
out
xor
in
mov
icebp
aam
jno
lds
pusha
add
ja
pusha
insb
ret
xlat
mov
test
into
int3
mov
in
rol
push
adc
inc
xchg
shlb
push
ror
mov
mov
push
stos
sub
and
sbb
push
call
pop
movsl
ja
insl
aaa
add
movsb
js
mov
nop
gs
rcll
jae
inc
pop
jge
out
pop
and
lret
dec
fmulp
out
cmp
ljmp
dec
test
fwait
add
popf
pop
cmc
mov
ljmp
and
aaa
sbb
cmc
xor
dec
cmpsb
dec
add
cmp
aad
ja
repnz
mov
push
pcmpeqb
dec
cli
mov
inc
pop
hlt
jmp
and
ss
mov
pop
fadd
mov
shll
adc
popf
mov
movsl
aam
push
dec
push
enter
xchg
shl
push
push
icebp
pop
into
fiadds
jnp
sahf
mov
or
sbb
add
xor
repz
js
push
mov
loop
dec
test
loop
mov
shrl
pop
dec
adc
mov
cltd
fidivrl
gs
imul
jg
out
loop
mov
in
xchg
pushl
shll
out
imul
pop
jne
jmp
andl
pop
cmp
push
inc
aad
jg
int3
add
outsb
push
sub
lock
outsl
mov
das
stc
dec
pop
mov
dec
pop
add
adc
or
push
xchg
push
push
add
loope
rclb
es
dec
pushf
mov
mov
mov
cmc
in
xor
movsb
aad
sbb
outsb
fdivs
mov
cltd
mov
jge
mov
fldcw
std
lea
ret
lahf
enter
mov
out
and
dec
lcall
sbbb
mov
les
mov
sarl
ds
lods
outsb
push
and
mov
xor
mov
jl
sub
loop
aad
vpunpcklqdq
xor
leave
scas
fsubrl
xchg
and
inc
fldt
xor
xchg
mov
dec
fcoms
inc
or
aad
clc
adc
fsub
and
xor
cmp
daa
xor
or
fldcw
cmp
mov
push
in
cmc
dec
xchg
mov
outsl
sub
jl
mov
dec
xor
iret
leave
mov
sbb
xchg
adc
addr16
sbb
jbe
xchg
mov
adc
fmul
iret
lcall
push
lahf
jp
leave
test
aas
adc
imul
inc
movsb
xchg
adc
imul
fidivl
jmp
push
rorl
cwtl
fs
ret
pop
xor
mov
xchg
mov
cmp
gs
xor
mov
test
iret
and
pushf
in
dec
clc
mov
push
jo
dec
or
iret
sahf
fidivl
add
jnp
repnz
icebp
mov
jno
mov
xchg
inc
jp
clc
push
xor
nop
orps
cmpsb
inc
cmc
sub
xbegin
outsb
cmp
out
loopne
pop
push
cmpsb
aad
push
outsl
pop
lods
xor
cs
sbb
out
sbb
pop
stos
or
test
or
mov
adc
fsubr
bound
push
mov
pusha
les
lret
inc
push
add
ret
dec
mov
or
xchg
sub
fidivs
in
sub
sbb
pop
sahf
mov
adc
push
and
popf
insb
dec
enter
inc
add
and
adc
clc
cmpsl
lret
bound
imul
out
mov
push
xor
cmpsl
pop
pop
pop
mov
fdivrp
cmp
push
sbbb
or
push
mov
xor
cmp
imul
mov
jg
js
xchg
inc
std
cmpsb
subl
in
ja
data16
pop
lret
scas
enter
jmp
subl
mov
jbe
jne
jp
jle
push
mov
mov
pop
mov
sti
lods
into
fcmovnu
add
dec
jecxz
lcall
and
lods
adc
loop
mov
sbb
lahf
int3
mov
das
xor
outsl
pusha
dec
push
inc
jno
sub
repnz
sbbl
add
insl
packsswb
or
mov
jp
nop
in
aad
or
and
or
cmp
loop
test
push
xchg
addl
fidivs
cmp
sar
loope
inc
popa
pop
sub
inc
mov
xor
test
xor
pop
sub
mov
movsb
fmull
jno
enter
daa
loopne
in
add
mov
mov
jnp
sarl
add
cmpsb
jle
test
dec
sbb
arpl
repnz
xchg
jno
xchg
addb
pop
repnz
cmp
hlt
dec
xor
lret
mov
imul
mov
imul
cmp
clc
ds
pop
leave
push
pop
shll
imul
jmp
jno
sti
pop
rcrl
pushf
repz
insl
inc
xor
outsl
test
add
push
lret
adc
pop
loop
in
ds
dec
sub
rclb
adc
xchg
rolb
mov
int
adcl
mov
out
xor
mov
mov
ret
inc
mov
imul
inc
sahf
sub
xor
push
lods
mov
in
add
xchg
pop
mov
popa
and
pop
adc
dec
push
cmpsl
lea
or
rorb
inc
ret
or
cli
dec
or
out
mov
xor
sahf
jnp
jns
add
jae
or
and
cmp
mov
fdivr
aas
add
jnp
repz
pop
jmp
sub
jb
jmp
cld
in
jo
mov
pop
xor
dec
add
push
leave
mov
cmpsb
add
aam
aam
xlat
jno
pushf
and
lds
rorl
lds
loope
mov
or
enter
dec
cmp
mov
loop
outsl
xchg
inc
mov
popa
les
add
xchg
enter
in
push
jo
dec
test
push
xlat
stos
sbb
mov
js
mov
fisubrl
cltd
xor
ror
sbb
sub
mov
or
lret
mov
in
insb
scas
ljmp
orl
adc
pop
dec
dec
or
lds
out
push
mov
hlt
jmp
mov
xchg
and
pop
xchg
fwait
xor
cmpl
or
in
sarb
adc
in
das
rclb
or
sub
xorl
sbb
or
sbb
pop
cmp
cmp
jg
xor
mov
pusha
cmp
imul
lods
addr16
ror
xlat
mov
and
sbb
popa
popa
and
mov
push
lea
enter
sbb
adc
or
push
jns
sbb
pop
jo
sbb
dec
lods
aad
stos
xchg
dec
je
push
iret
out
fwait
mov
out
iret
mov
mov
aam
sub
dec
inc
mov
and
ljmp
mov
push
repnz
pop
movsb
out
push
loope
pushf
mov
lock
test
ds
cmp
add
fstpt
cmp
xor
xchg
cmp
adc
ror
loope
mov
cmp
lahf
mov
movsl
shrl
add
movsl
icebp
push
out
filds
jp
inc
cmpsl
mov
loop
jno
mov
lahf
and
add
std
loopne
xchg
mov
divb
push
fildl
inc
call
or
xchg
push
xchg
xor
les
subl
xchg
and
and
xor
jae
aam
mov
jl
shll
and
mov
data16
add
mov
jno
xchg
push
es
dec
fsts
jns
jp
mov
pop
in
icebp
imul
push
rcrb
mov
mov
pop
pop
sub
in
mov
insb
mov
fwait
outsb
jnp
cmp
dec
mov
sub
sbb
and
add
dec
cmpsl
adc
sub
xchg
sti
jl
aas
call
rep
xchg
and
or
adc
inc
gs
mov
popa
push
push
cs
loopne
xor
arpl
mov
mov
insb
pop
add
rolb
les
sarl
jbe
fwait
insb
pop
push
pop
addr16
dec
fstps
scas
pop
pop
pusha
or
fs
xchg
mov
test
xor
mov
and
je
jmp
hlt
inc
add
inc
ja
push
lahf
push
sbb
jno
int
jbe
hlt
enter
lret
pop
add
idivb
cs
mov
sbb
adc
ret
push
in
aas
cmp
enter
repnz
pop
hlt
stc
out
rorb
imul
sub
jno
cmp
cmp
pop
pop
push
mov
bound
xorl
cmp
ds
pushf
adc
xchg
mov
adcb
push
mov
mov
inc
cmp
std
mov
enter
jmp
std
push
mov
mov
pop
add
stos
leave
xchg
aaa
push
xor
loop
clc
add
stos
pop
ror
jge
cmp
cli
push
mov
and
or
frstor
idivl
mov
mov
or
and
add
xchg
push
fldcw
or
into
mov
stos
cmp
xor
leave
jmp
dec
push
inc
jnp
jg
nop
in
dec
xchg
pop
gs
insb
data16
sti
mov
gs
pop
inc
loope
mov
mov
mov
iret
out
insl
pop
cmpsb
sbb
dec
cld
mov
stos
xchg
push
rcrl
sbbl
orb
inc
mov
lcall
nop
mov
add
push
sti
sbb
lret
pop
repnz
dec
or
sbb
push
mov
std
push
dec
pushf
ret
xchg
pushf
jae
ret
cmp
mov
sahf
fs
rol
das
sub
loopne
aas
and
sbb
test
jbe
aas
jns
dec
push
pop
push
lcall
pop
dec
push
out
add
aad
ss
mov
or
mov
fidivs
cwtl
cld
push
aam
call
inc
xchg
repz
movsl
je
push
arpl
push
mov
jmp
adc
push
pop
xlat
frstor
clc
add
in
dec
lods
mov
xlat
xchg
pop
cmp
mov
cmpb
orb
sbb
add
dec
addr16
xchg
sbb
popa
ljmp
inc
and
jne
jns
mov
lods
adc
rclb
xchg
xor
pop
movsl
hlt
add
mov
ret
jmp
sbb
outsb
pop
movl
outsl
sub
sub
lods
and
roll
xorb
aaa
mov
fistps
xchg
pop
pop
mov
daa
fwait
sbb
jge
mov
idivl
add
push
xchg
push
pop
mov
cli
sub
and
sbb
mov
inc
sbb
das
js
sbb
out
cmp
movsb
movsb
rcrb
cmp
aas
dec
sti
ficoml
in
jmp
pop
push
adc
adc
mov
inc
cmp
xor
mov
dec
mov
lret
add
sbb
arpl
fistpl
push
fdivs
jl
loope
push
in
lret
xlat
pop
lock
push
fmuls
cld
outsl
sub
jle
xchg
clc
cmp
dec
in
test
fwait
lock
jne
loope
pop
dec
ffree
lock
dec
out
xor
push
daa
sub
cli
jae
push
xor
stc
imul
sub
clc
dec
loop
or
outsb
in
sub
fwait
lods
jbe
inc
jo
sbb
mov
mov
sbb
cmovle
daa
out
xlat
inc
lods
jno
ret
inc
nop
ficoms
or
pusha
adc
leave
lods
rolb
and
roll
adc
in
adc
mov
je
popf
bound
in
adc
push
adc
pop
inc
push
pop
xchg
mov
lods
pop
or
adc
outsb
in
cmp
or
outsb
cmpsl
mov
push
fbstp
neg
scas
repz
ret
cli
fwait
mov
das
unpckhps
inc
imul
mov
push
aad
shl
aad
pop
rorl
fistl
clc
push
stos
cmp
data16
mov
cmpl
int
push
clc
scas
xor
adc
dec
sarb
mov
sbb
jg
and
fnstcw
inc
push
icebp
dec
or
mov
or
cmpsb
inc
sub
loop
sti
in
sti
cmp
add
gs
mov
cwtl
int
or
inc
fwait
sbb
xchg
add
cld
mov
and
inc
in
xor
sbb
outsl
repz
mov
and
xchg
xor
lea
aaa
out
ds
nop
fisubrs
inc
add
sbb
mull
rcll
inc
xlat
rorb
and
arpl
dec
push
pop
mov
in
rclb
dec
andb
dec
and
cwtl
jp
popf
or
mov
xchg
dec
xor
sub
jge
add
jns
and
sbb
xchg
xor
lahf
loop
xchg
in
inc
and
sub
inc
insl
fcompl
int3
adc
lahf
xchg
in
popf
cli
in
cmp
in
sub
addl
gs
mov
pop
insb
sbb
mov
int
int3
xchg
inc
movsl
pop
and
iret
test
jae
mov
xlat
rcl
popf
fadd
out
mov
lahf
push
push
lcall
dec
or
stos
cltd
test
fwait
sbbl
inc
mov
enter
cmp
int3
fiadds
add
pop
inc
push
fisubl
inc
cs
xchg
lods
push
divl
clc
mov
lock
arpl
lea
hlt
clc
mov
xor
dec
jmp
xchg
test
shl
imul
jg
dec
repnz
iret
lcall
cltd
inc
or
lcall
dec
xlat
adc
aas
cltd
jg
daa
ja
dec
jecxz
mov
and
sbb
gs
jecxz
pop
aas
adc
jg
movsl
xchg
mov
pushf
lods
loope
xchg
mov
xor
cmp
push
in
jl
in
aas
cmp
lahf
jb
mov
adc
xor
addr16
pop
lahf
cmp
push
mov
and
inc
mov
lret
test
cmp
mov
mov
push
fisubrl
aam
movsb
nop
in
pop
lods
ret
pop
or
repz
aam
push
xchg
sub
mov
jns
push
adc
js
mov
dec
push
subb
repz
push
dec
mov
int3
add
fdiv
ffreep
aas
and
aas
out
dec
pop
sub
mov
enter
in
push
inc
out
in
icebp
xchg
push
xchg
cmp
fsubrl
xchg
fwait
ss
cmp
dec
jnp
add
xor
mov
ja
xchg
mov
push
ret
sub
mov
fwait
clc
fistpll
jle
je
sbb
jecxz
loop
je
xor
xor
mov
out
add
or
sbb
add
sbb
push
popf
std
scas
lret
or
adc
adc
pop
sub
mov
sbb
lret
sub
xor
repnz
pop
cltd
lahf
push
mov
ss
inc
inc
pop
and
outsl
sbb
mov
shll
jb
mov
xchg
dec
xor
push
test
sbb
dec
fstl
popl
cmp
mov
loopne
add
mov
movsl
shll
shll
jae
push
mov
imulb
and
aaa
sarl
fistpl
sbb
ss
call
sbb
adcl
enter
scas
mov
cmp
in
xchg
sahf
cmpsl
in
sub
xchg
leave
add
cmpsb
fldenv
ficoms
inc
xchg
sbb
cmp
or
lods
sub
fdivr
pop
call
mov
popf
pushf
xor
dec
or
fldt
fmull
out
test
inc
call
inc
scas
add
pop
movsb
out
pop
test
bound
insb
scas
movb
and
lret
mov
cmpsb
sbb
push
les
sbb
mov
leave
std
dec
dec
repz
push
pop
cmpsl
mov
sub
sbb
inc
cs
sbb
mov
sub
xchg
popa
or
testb
ss
movsl
and
out
inc
mull
xlat
xchg
es
rclb
adc
adc
out
mov
cmp
in
int3
fmuls
repnz
mov
or
into
ja
lods
pop
jnp
push
call
lret
jge
filds
jo
jo
lcall
jb
loop
cli
pop
xor
lcall
lahf
push
or
jne
sub
mov
push
cltd
std
das
jns
jge
out
fs
lret
les
outsb
mov
in
xchg
adc
call
int
lret
pop
mov
push
rcrb
sub
add
push
mov
adc
pushf
fidivs
pop
mov
xchg
pop
adc
sub
dec
push
pusha
adc
test
add
xor
mov
lds
inc
insb
scas
lret
int3
insb
out
jmp
jmp
sahf
jge
jg
scas
test
lcall
jne
dec
test
ret
and
mov
sub
mov
push
in
int
shrb
and
out
data16
pop
cltd
clc
pop
xchg
lods
int3
fisubrs
loope
clc
add
gs
ja
std
push
mov
pop
pop
jno
rcrb
jb
adc
ljmp
mov
or
mov
mov
bnd
loopne
xor
sbb
mov
andl
leave
scas
in
cmpb
sbb
dec
xor
bound
xchg
fcmovne
shrb
inc
stc
movsb
push
adc
dec
pop
filds
xchg
mov
mov
mov
and
sbb
inc
fwait
adc
push
ret
jmp
js
shrl
xor
add
jp
fisubrl
in
gs
sub
mov
jp
nop
mov
xchg
addr16
or
mov
pusha
fdiv
in
inc
icebp
jns
add
data16
dec
cltd
scas
inc
pushf
mov
cmp
fisubrl
les
lahf
movsb
aas
inc
scas
xor
addb
ljmp
shrl
pop
or
jecxz
std
xchg
cltd
divb
mov
xor
xchg
das
shlb
mov
arpl
push
int3
sbb
cmpsb
xchg
mov
xor
cmp
xchg
subb
fwait
mov
iret
fidivl
xchg
insl
pop
aad
sahf
sub
dec
inc
cwtl
jmp
jnp
inc
mov
dec
call
add
daa
xor
add
add
jo
ja
ss
mov
cmp
mov
jge
or
in
mov
test
cmp
lcall
sysret
xor
push
sub
fimull
shll
xchg
inc
inc
push
pop
scas
jl
mov
dec
jg
jne
shll
xchg
mov
or
adc
xchg
add
loop
mov
xchg
std
jnp
nop
jg
mov
cmp
fisubs
mov
push
sti
and
pop
mov
out
push
int
sub
in
ficoms
clc
inc
popa
into
and
repz
lods
adc
aas
out
add
pop
sbb
cmp
add
int
dec
dec
aam
xchg
in
rcrl
jle
lods
xor
add
mov
inc
dec
repnz
dec
sub
lock
fsts
imul
sub
in
adc
xchg
dec
or
arpl
jnp
jns
popf
scas
and
and
in
outsl
pop
jle
cltd
mov
dec
stos
cmpsb
xchg
cmp
je
jecxz
lock
sub
sahf
jecxz
mov
testl
fwait
imul
in
test
jl
add
test
movsb
adc
push
arpl
mov
addl
arpl
xchg
cmpsb
mov
aaa
push
mov
pushf
push
mov
scas
shll
movsb
test
jb
sub
jo
cmpsb
xchg
xchg
sub
xor
movsl
inc
inc
or
xor
std
add
push
pop
mov
js
jg
inc
ljmp
mov
test
mov
cmpl
xchg
cmp
movsl
aaa
pop
mov
mov
fwait
push
scas
pop
cmpsl
add
cltd
inc
sar
adc
dec
pusha
cs
pop
cmpl
push
mulb
loopne
inc
in
aad
dec
rcr
dec
rcrb
inc
adc
nop
enter
cs
test
jbe
imul
push
adc
insb
ffreep
loope
jg
mov
lret
test
movsb
mov
adc
fistl
inc
and
pop
cmp
jne
push
and
ret
loop
inc
mov
xor
mov
push
adc
fsub
add
add
or
mov
pop
out
pop
push
push
jmp
icebp
push
push
call
add
fstl
popa
in
push
adcb
ss
jl
inc
int3
xorb
std
out
movb
mov
xorb
mov
or
cmpsb
pop
sub
je
push
lret
jl
ljmp
movsl
idivl
cmc
les
add
lock
xchg
pop
loope
mov
and
and
je
and
call
pop
cmp
push
repz
daa
ret
sti
leave
add
lods
xor
adc
xor
sub
sub
test
dec
adc
fdivrs
les
inc
int
xchg
daa
or
std
adc
mov
mov
inc
xor
jbe
rorl
dec
cmp
dec
insb
jns
pop
xor
push
mov
mov
sbb
xchg
je
fbstp
jno
mov
enter
xchg
ret
add
inc
xor
fildl
xchg
push
and
fldenv
push
and
data16
addl
xor
mov
xor
insl
fwait
int
cmp
or
fsub
leave
sub
push
jo
les
hlt
dec
pop
addl
and
ja
shr
and
hlt
test
test
in
push
decl
mov
imul
les
adc
test
daa
loop
pop
push
xor
xor
fnsave
ret
adc
dec
dec
popa
pop
jno
jle
inc
or
ljmp
lret
inc
inc
dec
mov
cmp
push
movsl
outsb
div
clc
addl
fwait
test
and
test
mov
pop
add
popa
mov
sti
fcomps
mov
sbb
push
les
shll
cmp
out
mov
inc
push
cmp
fstl
scas
mov
jne
mov
out
testl
mov
xor
insb
stc
cmp
or
data16
test
push
imul
bound
lds
dec
push
mov
cmp
push
sbb
sub
mov
out
xchg
int
insb
sub
test
aam
insb
sbb
stc
push
and
aas
popf
push
xor
mov
lret
outsb
aas
mov
dec
js
out
leave
and
fs
test
fldenv
imul
and
sbbl
pusha
push
mov
aad
xchg
out
add
or
ret
fidivs
mov
dec
inc
je
arpl
pop
inc
ja
inc
xchg
aas
popf
mov
push
adc
or
out
inc
xor
popf
mov
pushf
cwtl
in
or
cmpsl
imul
mov
icebp
mov
out
leave
shll
jmp
outsl
cmp
jl
inc
xchg
cmp
lods
and
push
inc
sarl
push
xchg
loope
jmp
out
repz
jl
arpl
jbe
jbe
inc
inc
jno
sub
mov
hlt
add
mov
adc
mov
xchg
aas
addl
es
cmpl
jbe
or
enter
iret
pop
cmp
outsb
inc
std
aad
jae
sbb
mov
xor
fdivr
or
icebp
mov
add
sahf
lahf
imul
jp
orb
cmp
loop
xor
jne
clc
cld
push
sbb
push
xor
test
imul
je
xor
lret
leave
fnstsw
mov
mov
push
sub
fs
jo
mov
and
ret
out
les
or
loopne
jge
out
mov
mov
xor
gs
in
ja
cmp
jns
shl
mov
jmp
jmp
xor
add
jo
jo
in
aas
ds
addr16
adc
adc
rcrb
dec
inc
dec
fwait
lds
stc
sub
push
pop
adc
xor
xchg
out
jbe
xor
push
lret
mov
in
jl
fdivs
std
or
outsb
mov
or
orb
xchg
insb
mov
in
cmp
sbb
jl
orl
xchg
jecxz
sub
outsb
mov
dec
dec
inc
inc
push
lahf
bound
pop
jmp
ds
and
rclb
adc
push
dec
dec
test
loope
xor
loop
sub
mov
stc
cltd
ja
sahf
mov
pop
dec
jb
aaa
push
fdivr
adc
pop
mov
pop
cmp
or
fs
test
lock
mov
dec
aam
push
and
into
dec
sarb
pop
and
sbb
pop
orb
lcall
push
popa
cmp
add
cmp
sub
shl
cmc
in
push
xor
push
push
cli
mov
fucom
negb
xchg
xchg
xor
loop
lock
test
aaa
jo
lods
mov
popa
rcl
cmp
mov
sub
mov
lret
inc
test
add
sti
int3
mov
bound
jge
aaa
and
cmp
add
xchg
jl
scas
test
adc
loope
btc
mov
mov
decb
fsubl
push
or
jecxz
std
inc
inc
mov
push
sbb
inc
aas
rcrb
das
faddl
adc
dec
insl
out
dec
mov
sahf
lret
jp
push
mov
or
pop
outsb
out
inc
stos
push
mov
popa
fcoms
add
push
je
lock
xorl
inc
xchg
int3
jle
jle
icebp
push
out
orb
mov
jbe
out
adc
leave
mov
push
jp
aas
mov
xor
push
lcall
mov
or
data16
adc
popf
rol
rcl
in
pop
idivl
stc
adc
sub
fcmove
cld
push
sbb
insl
mov
arpl
inc
fwait
insb
mov
mov
mov
jl
jne
add
std
loopne
add
lret
xchg
add
inc
sbbb
xor
cmp
test
xor
jmp
mov
notb
mov
addr16
push
cld
shlb
mov
cs
dec
outsl
hlt
sbb
je
cmp
fnstsw
fsts
negb
lods
arpl
xor
adc
ja
mov
inc
mov
cmpsl
nop
inc
imul
mov
mov
loope
out
int3
pop
xor
fiaddl
fildll
and
insb
jbe
sub
pop
lret
or
pushf
inc
sub
push
pop
das
ret
pop
jne
je
test
addr16
dec
xchg
xor
frstor
das
mov
lahf
push
xacquire
adcb
mov
das
add
push
fs
and
cmp
dec
loope
bound
mov
sbb
insl
jmp
and
aas
push
inc
or
inc
bound
cmp
loop
leave
lock
sub
out
nop
cmpsl
add
jmp
aas
adc
dec
shrl
sbb
gs
mov
adc
pushf
mov
and
sbb
repnz
test
adc
jecxz
in
sbb
ja
mov
dec
movsl
mov
xor
xor
ret
pop
bound
mov
xchg
sbb
clc
ljmp
mov
sub
mov
pop
mov
loopne
sbb
pusha
mov
sarb
orl
mov
mov
cmp
ja
mov
test
mov
mov
jge
mov
adc
sbb
inc
push
mov
repnz
jge
shlb
dec
mov
aam
xorl
add
jb
xchg
sub
pop
rcrb
xchg
push
xor
push
mov
and
and
lcall
shrl
aaa
lds
xor
in
orl
loop
inc
ds
in
stos
dec
inc
lcall
sbb
xchg
cmp
push
mov
call
les
ficoms
nop
pop
iret
repz
dec
and
sbb
rorb
scas
add
jecxz
push
repnz
push
cmp
jg
lahf
sub
push
sub
dec
test
adc
xor
in
sub
push
pushf
or
push
mov
clc
scas
lods
cmc
and
inc
mov
imul
int
cld
jge
test
jge
das
add
or
mov
xlat
das
or
pop
cmc
loopne
xchg
out
dec
mov
mov
inc
mulb
or
test
js
xchg
adc
aam
fisubrs
ss
and
sbb
int
mov
stos
mov
xor
inc
pmaxsw
mov
into
and
and
fldt
pop
dec
mov
in
stos
decl
xchg
cmpsl
dec
inc
jge
or
sbb
pop
sbb
stos
cwtl
cmp
xor
add
mov
addl
je
repz
cmpsb
adc
and
in
mov
paddsb
jb
insb
cmp
arpl
cld
sub
pop
push
sub
xchg
pop
dec
xchg
xchg
fsubrl
push
and
out
cmp
jo
and
xchg
bound
push
xchg
enter
mov
popf
xor
inc
and
pop
jp
adc
lret
cmpsb
push
shrb
and
sahf
inc
push
pop
repnz
movsl
dec
push
movsb
adc
pusha
cmpsb
dec
adc
cmp
imul
in
mov
ja
push
sarb
insb
test
adc
dec
dec
and
movsl
repnz
out
aam
and
fdivrl
push
push
jecxz
push
mov
sub
movsb
mov
jno
xchg
aad
ret
mov
lcall
daa
shl
pop
add
push
inc
std
shl
xor
mov
bound
mov
dec
xchg
and
pop
aam
scas
imul
dec
jb
cwtl
dec
jg
fucomip
and
add
movups
out
int
test
mov
shlb
cmp
xchg
inc
clc
xchg
fdivrs
insb
les
je
sub
addr16
cmp
rcr
lcall
push
aam
or
or
fwait
repz
dec
mov
outsl
aam
jo
stc
cmpsb
jmp
rcll
mov
xchg
mov
pop
add
les
sahf
jg
out
gs
cmpsb
mov
test
ds
push
test
cmp
negb
push
dec
mov
jns
push
push
mov
fidivl
loop
mov
lahf
imul
test
or
and
outsb
popf
or
xor
push
shll
repnz
adc
jmp
adc
push
jae
lea
arpl
ret
test
lods
and
setl
xchg
mov
addr16
cmp
aam
lret
sbb
std
pop
pop
jnp
mov
mov
mov
sarl
dec
adc
inc
test
mov
sub
test
cmp
cmp
repz
repz
rcrl
pusha
xchg
mov
add
adc
in
mov
das
mov
sbb
xor
loop
cld
ds
cltd
cmp
stc
mov
sbb
inc
in
push
rcr
fucomip
inc
movb
rclb
cld
sub
inc
and
cwtl
cmc
std
sub
cld
lahf
aad
insl
ds
or
fisttps
out
neg
push
gs
xor
push
mov
xchg
pusha
notl
out
into
xor
stc
cmp
imul
push
xchg
cmpsb
jb
int3
fnsetpm(287
xchg
and
xlat
es
mov
fidivrs
sub
pop
or
enter
jo
adc
insl
pop
fisubl
mov
pop
orb
lods
int
in
pop
mov
outsb
adc
cmc
dec
xor
cmp
loop
mov
pop
push
lar
mov
push
into
test
add
fisubs
popf
add
icebp
cmp
movsb
std
xchg
or
ja
aaa
lock
rclb
lods
mov
adc
and
adc
out
lds
mov
les
addl
mov
mov
push
pop
outsl
xlat
aas
fldt
call
repz
ss
xchg
popa
pop
pop
xor
arpl
mov
aad
push
mov
add
xchg
push
loop
mov
cwtl
int
mov
xchg
cmc
cmp
shll
enter
sub
mov
cmp
mov
mov
pop
imul
fwait
in
popf
fadds
aaa
mov
popa
mov
xchg
imul
shrb
xchg
lret
into
push
or
scas
inc
fdivrs
ja
mov
ret
bnd
repnz
mov
cmp
cmc
inc
add
andb
cld
mov
stc
cltd
sbb
xor
in
and
mov
jmp
xor
mov
lea
fs
iret
aad
lret
or
xchg
lahf
mov
fwait
sarb
cmp
bsf
jle
sbb
dec
inc
mov
add
mov
insl
popa
inc
test
mov
mov
dec
or
pop
dec
insb
dec
push
mov
je
adc
pop
and
loope
rorl
xchg
fiaddl
push
dec
jne
lods
push
ljmp
std
mov
push
xchg
cmpsb
mov
stc
jbe
nop
mov
inc
les
mov
push
leave
aam
mov
push
adc
mov
out
cmpsl
nop
in
sub
push
sbb
pop
orl
cli
push
sbb
rcr
cmp
pop
js
je
cmp
outsl
push
push
outsb
sbb
test
sbb
ffreep
jnp
jns
push
ds
repz
leave
mov
das
cld
sbb
ss
stc
xchg
ficoms
popf
fwait
icebp
stos
mov
add
mov
push
je
outsl
mov
rcrl
fisttps
nop
jge
and
lods
sbb
mov
push
mov
nop
movsl
test
cld
push
push
imull
and
pop
shll
jle
cmp
inc
dec
push
xchg
mov
shlb
mov
insb
shlb
mov
cmp
xchg
or
icebp
sbb
add
add
push
add
sbb
sub
xchg
jp
inc
stos
aaa
loopne
mov
rcrl
arpl
sub
mov
pop
hlt
xor
jmp
xor
xor
stos
mov
jecxz
out
mov
stc
arpl
lahf
adc
adc
addr16
adc
lahf
leave
inc
sbb
cmp
gs
cwtl
push
cmp
in
stc
mov
andl
cmp
mov
jmp
movsl
xor
fwait
adc
sub
xor
xchg
scas
inc
clc
adc
sbb
and
cmp
inc
dec
iret
movl
jnp
in
scas
jmp
enter
mov
adc
gs
leave
aas
loopne
fld
outsb
or
ljmp
iret
aas
dec
repnz
lcall
loopne
out
lahf
pushf
cmpsl
es
pop
lret
ds
pop
adc
jg
pop
stos
xchg
jae
jae
sub
mov
mov
mov
jle
fbld
fistpl
lahf
insl
hlt
daa
jbe
cmp
hlt
jl
das
mov
dec
cmpsb
push
les
hlt
push
pop
mov
in
push
lahf
clc
lahf
mov
sbb
adc
ds
add
cmc
cmp
je
loopne
sub
lock
push
sub
in
out
cli
mov
sbbl
cmpsb
sub
adc
rorl
push
cmp
fmul
dec
pop
scas
lock
loop
pusha
std
sub
call
aam
insb
movsl
lods
push
jp
mov
xchg
jp
mov
add
xchg
mov
xchg
dec
sbb
aad
rcrl
fmull
push
cmp
sti
jle
cmp
xchg
cmp
aaa
in
and
movsl
and
sub
stos
fcomp
xor
mov
scas
xor
test
andb
cmp
fsubs
pop
push
fimull
xchg
mov
and
roll
or
adcl
lods
sub
jnp
jo
mov
scas
mov
enter
push
js
out
inc
loopne
call
adc
sub
push
movsl
jle
and
pop
test
xor
fcomps
pop
inc
mov
dec
push
mov
pop
mov
mov
mov
mov
stc
imul
pop
push
test
add
orb
push
insb
lock
inc
push
addl
inc
mov
push
insl
mov
arpl
jl
rol
call
je
mov
lcall
in
sbb
or
or
push
sub
in
ret
movsb
mov
mov
jae
jne
mov
sar
cmp
out
xchg
outsl
xor
test
outsb
sahf
fstl
push
pop
push
cmp
es
lea
movsb
cmc
sbb
adcl
test
push
xor
sahf
push
iret
loopne
dec
push
ds
scas
adcl
jecxz
mov
jns
push
mov
aad
into
xor
orb
and
shlb
xor
outsl
add
jb
push
sbb
xlat
ds
loope
cld
negb
sub
int
sbb
test
add
clc
ret
or
jmp
push
scas
imul
xchg
mov
ret
jne
mov
xchg
cmc
stc
pop
fnstsw
mov
outsb
iret
and
xchg
adc
lods
add
andb
mov
mov
pop
sub
push
push
dec
push
aaa
shlb
inc
jle
fsubrl
or
push
sahf
lret
fs
cmc
andl
dec
out
xor
daa
fwait
ja
rep
das
loope
mov
mov
xor
test
out
test
icebp
bound
outsb
mov
lds
fs
popa
cmc
loop
addl
insb
aad
ss
clc
mov
or
pusha
push
sub
in
lahf
and
cmp
sarb
sbb
js
aaa
movsb
out
loope
out
cwtl
and
mov
dec
pop
stos
mov
and
adc
movsl
pop
shl
movsl
sub
jg
inc
in
sbb
or
push
push
scas
in
pop
lock
or
jno
fcom
imul
sub
mov
negb
je
ds
sub
and
jge
xchg
pop
jg
mov
in
test
incb
xchg
aad
out
inc
fldl
imul
mov
int3
fcmovnbe
jmp
mov
sbb
push
bound
das
xor
and
call
std
imul
mov
pop
lds
sub
cmp
dec
out
shll
fstpl
rorb
pop
pop
out
sbb
or
mov
push
test
idiv
scas
sahf
out
test
ja
test
cli
pop
push
sub
das
or
and
pop
jge
adcb
mov
les
lock
mov
bound
add
test
xor
jp
inc
cs
adc
rcrb
divb
mov
cmc
xor
jecxz
dec
sbb
ret
mov
adc
pusha
mov
fdivrp
sbb
je
pop
inc
mov
lods
pop
popf
adc
fistpl
daa
ss
mov
pop
std
div
or
roll
add
mov
outsb
push
lods
pusha
cltd
push
icebp
add
fimuls
scas
inc
mov
mov
repnz
imull
sub
or
pop
or
mov
test
dec
ret
jbe
mov
movsb
cmc
mov
out
test
jge
movb
pop
insl
add
dec
mov
cmp
lcall
ret
inc
pop
inc
leave
icebp
mov
mov
push
jb
ret
push
lds
call
shrb
xor
jno
cwtl
xchg
mov
jb
push
jp
inc
jo
xlat
data16
and
outsb
sahf
aam
mov
and
jno
push
sub
mov
out
icebp
cmpsl
mov
fidivl
insl
scas
repz
outsl
mov
jbe
pop
and
stc
sti
ja
dec
jmp
insl
mov
adc
cmp
add
popf
in
dec
test
stos
add
outsb
and
push
inc
insb
sbb
adcb
sti
dec
cmpsl
push
xchg
mov
pop
fucomi
push
lcall
outsl
leave
mov
inc
outsl
mov
scas
ror
xchg
cmp
mov
and
dec
mov
jne
pop
js
and
sub
xlat
jnp
movsl
and
jecxz
push
mov
cwtl
stos
or
test
add
test
fwait
pop
decb
cmc
lret
mov
inc
les
jp
adc
imul
fldcw
inc
xlat
mov
lea
sbb
adc
fwait
mov
fnstcw
push
cmpsl
je
push
mov
aam
pop
out
es
inc
dec
push
add
fiadds
cltd
in
xor
add
loope
inc
scas
push
sti
jnp
aam
shll
in
sbb
imulb
fwait
jne
mov
push
fldl
mov
lock
fstl
ret
and
popa
push
lods
mov
xchg
or
ret
dec
mov
hlt
or
xchg
or
into
pop
mov
sub
cmp
ret
xchg
jecxz
gs
mov
push
std
call
xlat
dec
jp
daa
add
inc
pop
movsb
or
icebp
test
mov
fildll
add
fsts
jnp
xchg
mov
in
or
adc
mov
lods
xor
inc
out
nop
dec
inc
enter
jae
inc
or
adc
adc
movsl
add
cmp
push
add
jnp
js
sub
sub
ret
lock
cld
test
or
jo
xchg
sbb
mov
cmp
mov
fdivr
jecxz
into
cwtl
pop
sub
push
aam
and
xor
inc
bound
cmp
jp
imul
int3
imul
sub
jns
outsl
push
data16
adc
pop
push
push
pop
dec
pop
into
or
sbb
xchg
aad
mov
shrb
jp
push
pop
sub
push
sbb
sub
xor
test
fstps
add
adc
sub
cmp
stos
and
out
cmp
mov
inc
in
or
fnstcw
dec
push
cmp
jne
xchg
lret
inc
imul
pushf
xchg
testl
pop
mov
shr
or
inc
mov
iret
mov
outsb
lret
mov
sbb
es
or
cmpsb
js
cwtl
and
inc
pop
inc
or
incb
sti
xchg
adc
sub
inc
jne
mov
adc
xor
cli
int3
arpl
push
leave
or
sbb
test
adcb
xor
mov
hlt
cltd
cmc
cli
xchg
sahf
out
rcrb
cmp
ds
ss
pop
sarb
fiadds
daa
cmp
jg
inc
dec
and
cmp
or
xchg
push
fisubl
mov
pop
repz
lods
pop
add
test
dec
push
mov
pop
dec
jcxz
and
paddusw
xor
add
xchg
aam
hlt
and
cmp
enter
adc
aaa
pop
cmp
inc
call
pop
scas
pushf
mov
or
test
mov
xor
xor
xor
sub
mov
inc
insb
sbbl
xor
pop
lret
mov
xor
jno
pop
cmpsl
mov
dec
pop
in
lret
es
dec
mov
or
or
inc
out
mov
and
nop
cmpsl
and
jmp
xor
xor
ds
lds
add
lock
andb
xor
js
loopne
pop
mov
and
push
pop
pop
hlt
cmc
xor
jnp
arpl
or
mov
test
or
mov
push
loop
add
mov
cs
jne
int3
sahf
shl
or
lock
cmc
jnp
inc
mov
cld
adc
or
mov
and
mulb
dec
outsl
add
fcoms
jmp
xor
stos
mov
ss
or
aad
js
in
mov
pop
fs
push
out
jnp
repnz
sub
sbb
daa
outsb
jbe
jno
and
idiv
push
test
mov
mov
dec
ss
dec
arpl
mov
rcrb
and
jg
pushf
xor
ja
in
lahf
cmp
and
rol
mov
negb
sub
push
mov
sbb
aad
push
stos
jge
or
dec
sub
mov
sub
cmc
das
and
cmpsl
xchg
mov
or
add
mov
popa
ja
pop
gs
stc
dec
int
mov
cltd
mov
adc
mov
push
dec
mov
add
movsb
je
push
or
lock
adc
mov
call
inc
insl
xchg
add
inc
adc
sbb
sbb
sub
and
add
or
ljmp
mov
cmpsb
inc
cmp
inc
cmp
fmul
xor
add
mov
add
jns
out
fisttpl
add
xor
or
hlt
push
mov
push
inc
gs
and
push
mov
int3
mov
leave
repnz
out
add
es
mov
inc
data16
call
add
adc
iret
cmpsl
filds
movlps
inc
adc
mov
add
pop
test
loope
sahf
mov
int3
pop
les
mov
daa
gs
jne
shlb
pop
ss
inc
push
pop
jecxz
pop
insb
sub
add
add
mov
lret
loopne
aas
jle
or
pop
mov
push
loop
add
andl
jae
lret
mov
and
jae
xchg
movl
inc
daa
rorb
sub
adc
jns
inc
inc
mov
jo
shlb
mov
add
repnz
push
push
xorb
jb
push
adc
call
mov
sbb
adc
xor
pushf
mov
popf
loopne
test
xchg
sub
dec
mov
daa
mov
in
add
bound
xor
and
jmp
lret
frstor
lods
push
hlt
push
sub
mov
xchg
mov
xchg
inc
pop
stc
push
in
popf
and
scas
dec
inc
pop
shrl
jg
inc
pop
mov
in
pop
rcrb
pop
cld
inc
xor
dec
add
scas
mov
xchg
add
sbb
lock
repnz
push
mov
xchg
and
cltd
sahf
sub
jnp
out
lds
adcl
xchg
fisubs
in
out
jnp
mov
int
cmp
clc
and
mov
pushf
test
lds
iret
inc
out
pop
mov
out
adc
or
mov
or
jg
pop
ljmp
xor
flds
push
aam
lods
xchg
test
in
sahf
or
mov
jb
lcall
cmpsl
daa
insl
data16
xor
inc
jp
pop
in
clc
sbb
mov
sbb
int
cli
adc
cmpsl
test
mov
lret
adc
aaa
or
test
movsb
and
push
add
cmp
popf
pop
jle
sahf
or
adcb
fs
sar
xor
loopne
call
dec
cmp
int3
push
scas
rcrb
scas
mov
jp
shlb
ret
sbb
mov
cmp
push
cmp
or
pop
xchg
sti
arpl
jnp
pop
cmc
push
cld
push
ds
dec
cmc
fs
mov
daa
ret
hlt
inc
dec
flds
pusha
dec
addr16
mov
mov
add
test
cli
adc
xchg
or
in
out
lods
sub
push
xchg
imull
bound
roll
mov
or
sbb
lcall
icebp
aad
jge
xor
sbb
cmp
scas
sbb
mov
xor
iret
test
sub
sub
ds
testb
sbb
xor
sbb
icebp
or
js
xchg
xchg
out
sub
in
shrb
or
mov
jl
test
adc
ss
adc
jae
fdivrl
lret
push
mov
xor
jne
icebp
in
insl
fmuls
mov
push
rcr
into
mov
mov
mov
inc
pop
cmp
insl
mov
or
and
sbb
cmp
call
jb
into
pop
jmp
pop
inc
mov
push
xchg
dec
inc
cld
cmp
mov
adc
negl
xor
cwtl
cmp
movsb
loopew
push
ljmp
aas
sbb
arpl
ret
xor
out
les
xor
xchg
mov
cmp
mov
mov
or
lcall
popa
test
pop
push
sub
cmp
lods
mov
adc
xchg
cmp
and
aam
daa
push
loopne
inc
das
dec
cwtl
push
int3
mov
or
xlat
push
inc
or
nop
inc
pop
xlat
mov
in
mov
call
and
stc
into
jmp
pop
loope
nop
imul
mov
pop
movl
insl
push
inc
ss
ss
sahf
vphaddubw
add
lock
push
out
lock
mov
flds
sbb
call
mov
jmp
sub
jno
or
jmp
push
sbb
xchg
arpl
pop
jns
inc
lea
in
dec
mov
cmc
test
fdivrl
ja
push
mov
sbbl
test
inc
pop
sbb
les
lea
push
push
xchg
mov
aad
test
adc
popf
clc
push
lea
ja
jp
pop
push
int
cmp
dec
xchg
xchg
or
testl
push
adc
xor
sub
int3
push
or
sub
andb
add
add
hlt
sbb
push
shll
xor
aad
lds
out
xchg
js
mov
bound
shlb
shrl
or
cs
push
call
ret
movsb
imul
lods
das
dec
mov
cwtl
dec
pop
xor
je
mov
push
movd
lcall
push
add
and
pop
xor
push
cmp
jno
push
cmp
ss
int
add
push
cmp
out
shrl
rorl
enter
rcr
xchg
clc
sbb
popa
shl
cs
dec
dec
es
imul
in
xor
addl
jge
insb
adc
test
dec
mov
int3
xor
cwtl
mov
arpl
sub
dec
sbb
into
mov
scas
insl
mov
xchg
pmaxsw
incl
shufps
fwait
sbb
mov
mov
cmpsb
aaa
in
orl
es
icebp
pushf
stc
xchg
mov
sub
jl
das
testl
pop
cmp
inc
je
into
inc
js
push
pop
adc
daa
mov
cmpsl
push
out
pop
test
ret
sub
xchg
add
xor
cmp
mov
pop
sbb
testl
cmp
lods
inc
inc
cwtl
or
adc
cli
stos
outsl
cmp
cld
pushf
popa
ljmp
mov
xchg
shrl
xor
sub
into
lahf
push
inc
outsl
clc
pusha
das
leave
sub
aaa
daa
sbb
or
fwait
stos
cmp
mov
lods
pop
sbb
shll
addl
out
nop
popf
in
xchg
pop
push
ret
xchg
xchg
xchg
pusha
jne
mov
mov
mov
ror
fcomp
push
push
jbe
cli
cs
mov
or
mov
xchg
xor
mov
xor
jl
out
xchg
popa
outsl
add
and
repz
and
rolb
fwait
inc
lret
fstpl
add
pop
sbb
push
or
les
mov
fsubrs
inc
jge
and
mov
adc
jecxz
ljmp
mov
lock
test
stos
inc
add
cltd
pop
addr16
addr16
push
arpl
add
pop
inc
xchg
adcb
and
stos
mov
int3
mov
push
mov
std
cmp
xchg
xlat
in
out
xchg
ss
jbe
jge
fmuls
sbb
mov
and
and
mov
enter
xlat
push
outsl
out
lods
hlt
mov
cmp
mov
fimull
stos
leave
lahf
int
or
add
mov
inc
or
call
mov
in
sbb
fistpl
ds
das
add
lds
add
scas
addr16
jg
pop
jnp
xchg
aad
mov
hlt
ljmp
shl
rorb
jo
add
call
ljmp
in
jge
cmc
lock
push
fisubl
xor
pop
sub
enter
xchg
arpl
mov
xor
mov
mov
jl
mov
icebp
enter
xchg
mov
push
sbb
addr16
sub
lods
dec
clc
xchg
mov
xor
aaa
push
shll
adcb
jo
aaa
inc
testl
and
dec
sub
jbe
jmp
mov
inc
stos
dec
cs
jne
cli
mov
or
jmp
cmc
aas
and
out
inc
setge
adc
mov
fidivs
imul
cmp
sub
xor
andl
pop
mov
cmp
mov
in
dec
jge
arpl
dec
das
add
popl
scas
lret
ds
sahf
jg
or
icebp
add
jbe
xor
sub
cmpsb
jp
enter
jbe
rclb
xchg
out
call
cmp
push
mov
in
ljmp
xor
pop
push
adc
das
stos
ljmp
jbe
adc
push
xchg
fldenv
mov
add
mov
push
les
mov
imul
subb
shlb
jmp
xchg
mov
jns
scas
cmp
jmp
mov
dec
adc
lods
repnz
addr16
data16
in
outsb
fisubl
data16
cwtl
dec
bound
jge
fsubr
pop
lods
clc
xchg
out
pop
push
mov
cmp
lock
lods
xor
mov
lcall
loope
pop
sbbl
rorb
mov
lahf
jne
idivb
imul
aaa
out
movsl
cli
inc
adc
mov
test
sar
mov
push
inc
or
rorb
xchg
mov
mov
std
sub
rcll
into
jmp
mov
cmp
mov
out
ret
cmp
fcomps
mov
pop
gs
jle
jg
fprem
dec
in
jno
push
adc
cmpl
rorl
push
dec
in
ret
out
out
mov
jl
pop
mov
jmp
ja
pop
lock
mov
mov
xchg
mov
lret
insb
inc
ficoms
inc
jmp
imul
push
cmpb
imull
push
xchg
imul
shrl
jb
xlat
decb
or
and
mov
mov
and
inc
push
add
mov
inc
psllq
shr
js
add
sahf
mov
pop
and
xchg
mov
adc
mov
jno
pop
xchg
pop
push
ja
outsb
sbb
in
sbb
cld
cmp
std
mov
cmpsb
sbb
push
inc
ret
add
sbb
mov
vfnmaddsd
xchg
mov
or
iret
aam
je
or
mov
cmp
ret
and
filds
lds
call
inc
testb
imull
adc
mov
mov
push
cli
lds
fs
sub
ja
out
xor
mov
adc
cli
stos
ja
xor
mov
inc
sbb
iret
rcl
daa
shrb
test
push
cltd
addr16
test
dec
adc
divl
outsb
mov
lea
push
pop
addr16
lret
ljmp
pop
clc
sub
addr16
inc
sti
outsl
sub
imull
sbb
stos
enter
pusha
bound
rolb
mov
stos
cmp
cmc
outsb
jne
dec
pushf
fcmovbe
outsb
ds
aas
repz
stc
add
sbb
stos
cmpsl
movsl
xor
stos
jle
scas
add
test
adc
mov
mov
sub
mov
or
sbb
arpl
and
iret
jle
mov
loop
xchg
xlat
or
jmp
cltd
xchg
xor
add
add
mov
sahf
fcomps
and
movsl
and
divb
gs
and
imul
arpl
andb
xor
mov
sbb
std
add
int
test
mov
hlt
repz
aad
pop
and
lret
fdivrl
iret
hlt
and
into
and
adc
add
sub
rorb
or
stos
adc
mov
jmp
shl
cwtl
mov
jmp
rcrl
push
gs
lds
adc
pop
inc
dec
in
and
ja
add
mov
lea
inc
xor
stos
jns
mov
icebp
aas
push
mov
loope
pop
outsl
cmpsl
xchg
or
adc
dec
push
and
cmp
push
bound
test
jmp
scas
int3
xor
or
daa
std
xlat
jl
adc
jbe
mov
leave
push
inc
sbb
dec
ds
cmp
mov
pop
loop
cmp
push
xchg
pop
mov
mov
hlt
arpl
mov
jne,pt
add
repnz
rclb
fdivs
xchg
mov
jecxz
neg
arpl
mov
jecxz
stos
popf
int3
mov
shll
pop
or
ret
sub
cli
xor
movsb
into
mov
cmpsb
jb
lahf
insb
bound
mov
mov
dec
sahf
cltd
cmc
sbb
enter
dec
in
push
sub
push
in
insl
aad
push
pop
adc
loope
cmp
push
adc
lods
iret
fnstsw
xlat
mov
ja
shlb
xor
pop
mov
push
outsb
sbb
clc
mov
out
dec
les
add
jmp
jl
aam
clc
shlb
dec
sbb
xchg
jne
std
mov
add
xchg
loopne
xor
pop
add
xchg
in
pop
pop
cmp
mov
imul
out
pop
or
add
pop
fld1
and
xor
fs
sti
daa
mov
adcb
shrb
and
es
and
xchg
mov
sub
pusha
popa
sub
or
push
movsl
bndstx
cmp
ret
or
sub
mov
xor
dec
lods
inc
push
call
dec
fiadds
dec
inc
fs
aam
loope
insb
mov
lahf
sbb
popa
mov
push
adc
lods
call
out
jnp
cmp
loopne
js
mov
mov
push
dec
xchg
fsub
sub
adc
mov
stc
push
scas
popf
jmp
cmp
test
lret
jns
dec
pusha
cmc
dec
or
push
pop
loope
xchg
das
inc
test
sbb
mov
stos
fbld
mov
pop
mov
and
push
lods
gs
ljmp
jecxz
ss
cmpb
pop
loopne
sbb
inc
icebp
or
ds
dec
cmp
test
in
sbb
push
stos
pusha
jecxz
fcoml
ror
xor
cli
scas
add
jnp
and
adc
test
pop
push
fidivrs
lea
imul
cmp
js
nop
ljmp
push
ret
lds
mov
add
mov
cwtl
or
xor
xlat
mov
push
mov
or
cmpsb
adc
jecxz
jbe
insl
xor
jo
xchg
jo
sub
pop
add
std
push
cmp
out
cmp
mov
mov
in
push
xor
cmp
loop
loope
mov
pop
inc
ja
push
or
dec
mov
fs
mov
xchg
fnstenv
pop
xchg
mov
jge
mov
push
popa
negb
lret
dec
in
in
pop
sub
jmp
pop
nop
in
mov
cmp
add
dec
pusha
xchg
push
add
cli
jno
aad
mov
ljmp
push
push
es
dec
stos
mov
dec
push
loope
mov
cmp
insl
mov
xchg
adc
pop
inc
sbb
lds
outsb
stos
jne
inc
push
outsb
mov
add
push
nop
sub
sbb
adc
mov
mov
add
and
pop
rolb
dec
stos
imul
add
inc
loopne
cmp
mov
push
clc
stos
mov
pop
and
or
sti
jae
dec
pop
adcb
adc
or
add
aas
mov
negl
xchg
sbb
jge
sub
loope
jno
cmp
xchg
ja
rcll
dec
mov
xchg
pop
enter
mov
lock
loop
ja
mov
arpl
es
push
mov
xchg
sbb
xchg
add
mov
rep
sbb
inc
xchg
pop
or
pusha
ljmp
cs
pop
xchg
lcall
jmp
dec
pop
push
cmp
add
xchg
jne
lds
aam
xchg
fsts
mov
je
pop
sub
je
and
mov
mov
scas
mov
hlt
ja
cmpsl
insl
xor
je
or
sub
dec
mov
cmpsb
and
and
push
jne
std
aaa
shl
repz
sarb
int3
adc
rorl
mov
jae
sub
out
rclb
fisttps
or
jae
mov
pop
ss
adc
lods
push
xchg
fcmovbe
lcall
jg
or
xchg
pusha
cltd
popf
push
insb
mov
insb
pop
dec
nop
hlt
mov
push
sbb
stos
outsl
add
or
pop
jmp
imull
adc
imul
pop
es
cmp
mov
ss
push
insb
inc
mov
nop
or
scas
into
ja
fisttpll
mov
sub
sti
jmp
jo
outsl
xor
jp
sbb
mov
sti
popf
adcb
pop
inc
and
add
adc
jb
or
out
int3
mov
dec
xor
or
hlt
nop
mov
scas
int
fidivl
add
mov
cli
int3
mov
mov
fwait
pusha
jge
push
mov
ss
mov
jmp
dec
imul
in
push
xlat
mov
push
xchg
iret
ljmp
push
add
lret
cs
jbe
shlb
outsl
xor
ljmp
in
adc
out
dec
dec
inc
push
test
mov
insl
mov
lret
lret
ds
mov
and
mov
adc
and
enter
iret
jmp
lods
push
jno
add
aas
mov
lcall
or
ja
arpl
movsb
mov
pushf
mov
lahf
sub
pop
cmpb
or
jge
xlat
mov
rorb
ss
mov
cmp
adc
sub
xor
pop
inc
jae
mov
jnp
aad
push
ret
cwtl
pop
add
push
pop
jmp
push
ret
jp
iret
sub
callw
adc
out
into
xlat
mov
sub
mov
jp
ficompl
and
mov
loope
mov
cmpsb
ja
out
add
add
scas
mov
roll
push
lahf
and
mov
jge
lret
jmp
push
stos
pop
pusha
adc
add
adc
jp
sti
insl
push
mov
aad
leave
mov
mov
adc
pop
andl
mov
lret
dec
out
mov
sbb
sbb
jg
popa
pop
inc
sbb
js
inc
sbb
dec
sbb
inc
fwait
lock
iret
inc
fadds
mov
cmp
pop
xor
xor
push
inc
mov
scas
in
mov
pop
mov
popf
scas
scas
insb
mov
popf
add
dec
scas
jl
cmpsb
push
subl
xchg
jb
add
fwait
rclb
ds
mov
in
lret
test
xchg
mov
pop
adc
in
mov
cmp
push
out
pop
xorl
cmpsb
adc
outsb
movsb
lcall
or
outsl
in
mov
dec
adc
sahf
cmp
arpl
mov
cmp
dec
sbb
sti
ficompl
jb
xchg
mov
pop
xchg
sub
adc
cld
mov
fdivrl
fs
mov
xor
mov
mov
mov
add
lods
mov
push
in
and
push
stos
bound
push
pop
das
pop
cmpsb
xlat
mov
or
lods
mov
pop
in
adc
in
xchg
negl
mov
mov
fisttps
or
sti
int3
outsb
les
adc
pushl
push
mov
adc
push
cmp
ficomps
add
add
sti
add
ss
adc
in
arpl
inc
mov
adc
xchg
sub
push
inc
and
inc
and
mov
mov
sub
lds
mov
int
aaa
out
or
push
int3
mov
scas
ss
test
adc
fwait
dec
cmpsb
insb
push
pop
cmp
inc
dec
jecxz
inc
in
pusha
pop
pop
lret
hlt
fstp
js
clc
insl
sbb
adc
and
jge,pn
mov
dec
repnz
xchg
hlt
xor
mov
outsb
das
mov
xchg
or
test
cmc
xchg
push
cli
hlt
jns
pop
adc
jne
cmp
arpl
in
or
in
lds
mov
hlt
or
cmp
dec
mov
cwtl
pop
mov
int3
push
adc
aas
sbb
dec
cmp
outsb
lret
jle
mov
insl
call
shlb
icebp
arpl
jmp
mov
pop
push
push
sbb
sbb
add
inc
es
js
testl
loopne
xorl
or
stc
shlb
test
sub
jbe
or
imul
inc
lcall
push
in
js
dec
pop
call
sbb
adc
out
cwtl
aam
mov
xchg
dec
push
es
hlt
in
jecxz
pop
lea
jns
mov
pop
and
lret
push
hlt
sbb
add
pop
push
cmp
dec
mov
popf
push
sbb
or
mov
mov
push
dec
push
push
sub
mov
aaa
inc
into
out
js
repnz
inc
out
pusha
mov
xor
mov
scas
lods
xorb
sahf
pop
lea
jmp
jne
cmpsb
push
jecxz
pop
xor
lds
xorb
jl
jp
xor
mov
mov
adc
sahf
hlt
jbe
pop
int
ret
xor
lahf
inc
std
ds
sub
in
cmp
ret
movsl
mov
sahf
shl
and
xor
les
jmp
repnz
call
js
mov
cmpsl
cltd
pop
ljmp
dec
pop
add
popf
xlat
jbe
sbb
fdivrs
je
jmp
cli
dec
mov
jno
ret
sti
push
dec
ret
mov
sub
mov
movlps
lcall
int
push
stc
sbb
xchg
mov
mov
mov
iret
pop
mov
pop
and
pop
pop
cli
sub
sbb
inc
inc
mov
and
add
sbb
repnz
sti
inc
jle
xor
mov
add
lret
xchg
cmp
inc
adc
push
sbb
sub
xor
cwtl
adc
std
jne
fdivl
and
or
loope
insb
inc
dec
mov
sbb
jb
into
in
into
fnstenv
pop
lods
fisubrs
jnp
dec
pop
cmp
out
clc
sbb
xlat
sbb
mov
xchg
ret
add
iret
push
push
lods
test
jo
sub
mov
es
mov
mov
leave
sbb
mov
pop
xchg
lret
shlb
jae
inc
call
sti
lds
adc
jle
sahf
inc
cmpsb
add
fnsave
stc
in
sub
ljmp
inc
push
adc
mov
add
ss
xchg
mov
jne
mov
cmpb
mov
stos
inc
push
push
fsubl
mov
mov
add
lods
stc
test
xor
loopne
gs
test
movsl
or
test
cmp
outsb
xor
testb
jno
nop
jmp
fiaddl
stos
push
fdivl
dec
imul
jae
dec
pushw
mov
jae
or
xchg
xchg
cmp
gs
mov
popf
mov
or
mov
jge
loope
into
sarb
sub
mov
sub
push
adc
mov
aas
mov
mov
or
jmp
loope
jg
fistpl
mov
cmp
cli
sub
je
testl
inc
sahf
push
test
pop
insl
mov
and
mov
leave
lret
neg
mov
add
int3
out
push
cltd
push
xchg
dec
jp
cmc
lcall
test
rcrb
popf
mov
cmp
call
mov
je
fwait
inc
mov
es
pop
xchg
push
dec
mov
add
lock
out
test
aad
outsl
mov
out
inc
bound
inc
and
fisubrs
loope
adc
sti
xlat
ds
stos
lds
jp
movsl
mov
sbb
mov
and
push
and
inc
movsb
aaa
jne
daa
aaa
jns
rclb
shll
mov
into
repz
outsb
and
ficomps
xchg
pushf
sbb
cmp
sti
mov
stos
cmpsl
sub
or
inc
dec
push
in
cmp
jle
mov
dec
dec
cld
bound
dec
rcr
loopne
mov
shrb
js
mov
and
xor
lods
pop
push
add
lret
xor
cmpsl
les
jns
mov
sbb
std
loopew
test
out
test
jg
add
mov
push
bnd
adcl
cmpsb
rcrl
cltd
or
adc
xchg
imul
mov
je
hlt
adc
mov
das
mov
aas
jns
lahf
push
jmp
jb
jno
jo
mov
insb
hlt
add
mov
stos
inc
into
inc
call
cmp
inc
and
jbe
fildl
cltd
and
clc
xchg
loopne
std
xor
mov
cmp
push
cmc
pusha
jo
pushf
dec
pop
insl
inc
test
push
ja
pusha
pop
add
lds
loop
add
stos
jo
gs
lods
dec
add
mov
cmp
nop
jp
daa
insl
ret
mov
push
sbb
inc
pop
xchg
push
push
mov
xchg
fwait
lds
dec
jp
int3
cmp
jmp
xchg
dec
or
cmpsb
adc
inc
fisubrl
in
add
stc
ss
add
shll
test
into
dec
pop
xchg
test
iret
daa
repz
call
faddl
xchg
test
mov
sbb
pop
leave
ss
je
pop
xchg
sbb
outsl
xchg
and
lods
dec
sarb
movsl
inc
cmc
cltd
xor
push
cs
jae
sub
ds
xchg
fptan
sti
sub
pop
push
idivl
in
inc
pop
lods
cmp
fld
fisttpll
and
mov
dec
add
repz
lods
lret
sub
aas
xchg
inc
imul
cs
pop
in
aam
or
imull
nop
mov
xchg
stos
por
add
mov
xchg
sbb
ljmp
mov
test
xchg
pop
iret
ljmp
movsl
dec
leave
push
sub
push
inc
fwait
mov
jecxz
clc
inc
repz
jns
jbe
popf
inc
push
pusha
inc
push
cmp
repnz
xchg
jge
adc
mov
mov
add
pop
add
sbb
dec
mov
pop
scas
mov
nop
adcb
jmp
mov
inc
push
xlat
out
lea
pop
stos
shlb
ljmp
xor
xor
sbb
leave
lret
mov
addl
ja
sub
js
push
imul
outsl
in
mov
jne
xchg
inc
mov
adc
xchg
in
adc
pop
pusha
adc
sbb
clc
lds
enter
inc
pop
and
mov
ljmp
xor
pushf
test
mov
inc
es
std
lock
mov
adc
xor
inc
mov
or
in
decl
shr
push
inc
dec
sub
jmp
mov
enter
jnp
dec
movsl
pop
cmc
rclb
sbb
or
lahf
lahf
sub
sub
push
fs
or
scas
mov
popf
sbb
inc
imul
in
stos
popf
xor
testl
jo
pop
xchg
or
mov
or
sub
and
pop
xor
bound
in
aaa
test
je
imul
js
pusha
int3
and
sahf
les
ret
aad
mov
fisttpll
xor
pop
mov
loope
xor
dec
mov
out
icebp
inc
gs
mov
rclb
mov
nop
test
movsl
aas
sub
dec
scas
mov
pop
jnp
testb
push
or
orl
loopne
push
push
addps
mov
in
mov
adc
jns
iret
dec
lcall
sbb
mov
and
imul
sub
add
rolb
mov
cmp
jnp
gs
jns
jo
sbb
xchg
xchg
xchg
push
inc
adc
andl
out
push
or
jmp
sahf
popa
inc
sbb
stc
das
nop
push
xchg
mov
aaa
mov
inc
and
mov
mov
inc
imul
loope
sub
push
mov
dec
je
fwait
mov
nop
pop
lret
and
ljmp
jne
or
popa
pop
mov
out
jmp
cltd
cltd
cmp
cld
add
jbe
add
sbb
push
ss
push
inc
pop
jle
aad
dec
pop
lea
cvttps2pi
cmp
jp
or
pop
push
dec
or
loope
cwtl
sub
pushf
bound
lret
test
push
mov
clc
push
xor
repz
icebp
sbb
push
pop
test
sub
xchg
fildll
loop
sbb
xorl
faddl
stos
repnz
in
fcomi
mov
add
mov
movsb
enter
jno
fs
lea
ja
rorl
jnp
aad
or
ss
jp
pop
shll
mov
jo
and
fadds
jg
leave
je
lea
aad
stos
jno
fwait
movsl
std
popf
add
iret
insw
iret
add
jecxz
lods
add
in
xchg
dec
adc
mov
test
repnz
ja
mov
push
enter
shlb
scas
jle
inc
ror
imul
dec
dec
ror
push
inc
scas
popa
xor
add
sub
ss
pushf
xchg
movsl
imul
dec
int
dec
and
in
pop
mov
xchg
andl
pop
or
xchg
mov
jmp
leave
sub
mov
xchg
mov
cmpl
add
test
and
movsb
lcall
loopne
hlt
mov
outsl
xchg
andl
mov
push
scas
and
dec
pop
mov
cli
and
xor
xor
push
push
xor
mov
pop
inc
into
in
inc
push
es
sbb
sub
lea
repnz
das
adc
push
leave
sbb
stc
sub
xchg
sahf
loope
loope
fld
stos
popa
mov
dec
mov
into
rorb
mov
rcrl
or
cld
or
inc
lods
and
loop
or
les
xchg
dec
xchg
mov
dec
mov
xlat
pop
dec
jno
cmp
sbb
mov
std
fisttps
mov
outsb
dec
call
sub
mov
clc
inc
call
arpl
pop
jl
push
fistpl
repnz
xchg
adc
xchg
mov
out
mov
mov
daa
sbb
cmpsl
pop
stos
gs
xor
fld1
xlat
sub
bound
repnz
in
xor
mov
in
sub
push
mov
jmp
rol
arpl
fdivl
cld
inc
jecxz
test
ret
push
add
nop
lds
push
push
or
push
insl
rorb
add
test
cmp
sub
aam
dec
push
sbb
xchg
das
inc
jno
push
loope
iret
andb
imul
xchg
lcall
mov
pop
add
ret
std
scas
mov
movsl
dec
or
ja
orl
xchg
dec
dec
xchg
adc
test
gs
fs
mov
push
scas
popa
pop
daa
negb
xor
fiadds
mov
push
arpl
mov
cmp
insb
pop
xchg
cs
into
mov
inc
jne,pn
fnsave
mov
fst
aad
add
jmp
dec
ds
xchg
cmc
inc
mov
mov
cmpsb
jno
sub
imul
inc
push
push
add
xor
in
and
push
push
fsin
mov
sarl
jo
scas
push
push
adc
std
mov
lcall
lods
out
daa
dec
xor
aad
in
icebp
sbb
js
inc
jg
arpl
fnstenv
adc
dec
ljmp
xor
leave
dec
sbb
sub
mov
les
push
sbbl
movsl
pop
imul
jmp
dec
jne
sbb
std
mov
arpl
xor
mov
imul
and
jb
or
jne
fmuls
mov
fstpl
int
out
mov
xor
call
test
pop
mov
inc
sahf
rcll
sub
jge
outsl
mov
xor
dec
popf
pop
xchg
cmp
scas
xor
int3
add
push
jle
jo
sbb
rolb
sub
out
jbe
lahf
xchg
dec
mov
dec
xchg
arpl
cld
ss
insb
sub
dec
mov
adc
repnz
push
xor
push
pusha
sbb
push
sub
cmpsl
test
sahf
dec
js
shrl
mov
mov
dec
or
lahf
in
or
mov
aad
and
xchg
and
scas
pop
push
pop
xchg
fstl
ret
and
ja
or
scas
sbb
push
jge
inc
adcb
xlat
out
mov
rolb
pop
std
loope
in
cwtl
ja
flds
call
or
flds
mov
lret
icebp
or
aad
pop
out
mov
and
mov
sub
dec
shlb
jmp
and
inc
mov
out
or
push
mov
mov
lea
xor
mov
in
mov
or
cmp
xchg
jmp
in
lock
lock
gs
test
jmp
mov
xacquire
insb
lods
xchg
andl
pop
loopne
clc
pop
mov
rolb
inc
add
jg
sbb
mov
mov
or
fs
cwtl
push
jmp
fcmovb
jg
jno
sti
nop
dec
verw
mov
mov
cwtl
dec
xchg
int
pop
int
ret
dec
rcr
out
jae
mov
fwait
push
jmp
pushf
aam
inc
mov
faddl
sub
repnz
loop
xchg
or
enter
xchg
inc
mov
sub
subl
cli
icebp
inc
icebp
cmp
push
or
mov
xor
xor
imul
bound
mov
in
sbb
sub
push
adc
test
jae
xchg
or
xor
jae
xchg
mov
inc
aas
mov
sub
stc
inc
fdivrs
push
or
xchg
or
push
mov
ret
loop
fsubrl
pop
imul
or
push
test
int
dec
loop
jbe
xchg
shll
shlb
and
cmp
loop
or
out
mov
mov
push
scas
adc
xor
mov
push
add
add
and
bound
or
test
xlat
jne
mov
inc
jge
ds
dec
inc
movsb
pop
popl
jo
in
sub
jle
sub
mov
jo
sti
insb
pusha
jne
xchg
mov
int
cmpsl
cld
iret
push
ja
loope
aaa
push
ja
sti
sub
lock
and
inc
mov
mov
scas
push
push
jno
jmp
xchg
and
adc
push
dec
and
jl
fiaddl
push
mov
dec
pop
outsb
sbb
das
popa
stc
sub
sar
mov
cmp
test
ds
sti
and
shlb
pusha
rcrb
jp
jmp
add
test
rcrb
add
sub
cld
pop
bound
inc
addb
out
mov
lret
iret
adc
jb
pushf
andl
stos
aas
jb
loop
push
sbb
scas
flds
movsb
cmpsb
rclb
pusha
jecxz
dec
arpl
xlat
cmc
cmp
jno
outsl
shll
sbb
dec
icebp
stos
jmp
aaa
andl
mov
pop
addr16
push
imull
ret
jge
je
mov
shrl
push
fcompl
adc
jg
jmp
or
sub
sub
sbb
stos
xchg
jmp
jnp
stos
cmpsb
mov
lds
cs
fisubrl
lret
push
cmp
es
dec
ret
jnp
pop
imul
rol
mov
mov
out
jne
fchs
and
incb
adc
add
daa
jns
sar
leave
je
and
gs
mov
or
xor
popa
xchg
inc
jbe
sub
int
mov
cltd
imul
and
pushf
mov
mov
xor
jmp
fs
xchg
cmp
dec
fstpl
enter
movsb
dec
in
mov
repnz
or
pop
jbe
lret
jns
and
cli
fsubrs
pop
xchg
xor
jp
cmp
aam
pop
subl
enter
push
nop
xchg
push
xchg
out
stos
sub
sub
dec
test
mov
or
add
inc
dec
push
sub
pop
inc
sbb
push
cmp
xchg
jl
fmuls
ficoms
cli
fnstenv
sbb
and
or
popf
fs
into
pop
push
ljmp
cs
popf
leave
stos
dec
add
mov
movsb
iret
rcr
and
gs
lret
push
rcrl
gs
mov
sub
pop
test
ret
movl
scas
adc
push
sbb
mov
sti
dec
out
mull
xor
mov
and
cmp
sar
daa
ds
mov
xor
cmp
and
xlat
mov
xchg
mov
add
stos
mov
xor
imul
btcl
xor
add
aaa
rcrb
or
nop
xchg
call
test
rol
push
mov
shlb
xchg
push
xchg
lret
xchg
pop
xlat
loopne
lock
or
sbb
lret
aas
imul
or
mov
dec
mov
fadd
jmp
imul
cmp
popf
lods
lcall
shlb
fistpll
push
push
fldenv
aam
pcmpeqd
add
test
dec
out
fimull
dec
lahf
mov
xorb
cmp
jae
mov
cli
push
call
or
cmp
and
loopne
dec
jne
stc
sub
xchg
xchg
adc
int
pop
sbb
mull
lods
js
sbb
aam
or
data16
outsb
push
mov
cmpsl
adc
mov
or
add
push
sub
lret
jge
dec
ss
mov
addr16
sbb
insb
mov
into
icebp
or
in
or
cmpsb
adc
mov
mov
push
add
arpl
bswap
cmp
push
and
movsb
and
testl
int3
and
dec
iret
mov
lahf
lock
pop
cwtl
popa
lods
pop
fwait
sahf
add
sbb
mov
push
loopne
add
jb
jo
mov
push
lods
enter
mov
or
adc
sbb
adc
and
adc
jg
push
mov
in
je
mov
pop
jbe
shlb
cmp
arpl
push
inc
mov
sbb
adc
mov
stos
cwtl
push
push
adc
loopne
fcmove
sub
mov
daa
mov
std
sub
sbb
ret
lcall
pop
push
das
xchg
mov
sbb
int
push
mov
add
jp
xchg
addr16
fstps
fs
adc
xchg
stos
mov
sub
mov
pop
inc
das
inc
mov
sbb
inc
cmpxchg
mov
std
cmp
flds
push
enter
cmp
and
sti
or
sub
and
out
add
mov
adc
das
inc
fsubl
mov
mov
dec
mov
repnz
ds
mov
data16
cmpb
jl
jg
cmp
sbb
cmp
jbe
daa
clc
fldenv
mov
pushf
lahf
or
je
jo
pop
in
pop
rcrb
shrd
sbb
mov
fwait
xchg
pop
gs
scas
idivl
test
jmp
cs
ds
daa
fcmovnu
mov
shlb
jns
jb
lods
addr16
rcrb
out
mul
mov
mov
fisubl
sub
sub
rorl
xor
int3
xchg
imul
sbb
ljmp
mov
aam
inc
mov
mov
add
pop
inc
mov
and
xor
xchg
or
popa
or
push
xchg
imul
addb
icebp
or
lea
daa
mov
and
or
xor
in
xchg
dec
xor
and
or
lods
xchg
popl
adcl
cld
pop
mov
aas
add
mov
hlt
pop
pusha
pop
mov
jl
sub
add
mov
push
aad
test
pop
xchg
cmp
sbb
xchg
test
insl
mov
lock
les
cli
push
jge
aad
push
repz
push
fs
std
cli
sub
cmp
sub
mov
aad
nop
shll
rolb
jno
stc
add
jge
add
out
push
popf
icebp
pop
add
push
sub
xor
cs
sbb
fists
ja
mov
and
add
repnz
pop
outsb
push
mov
test
add
das
bound
fs
clc
iret
rol
jmp
mov
jle
int3
adc
subb
xchg
mov
and
inc
xor
jle
data16
arpl
bound
sahf
loop
jno
aam
cmp
or
mov
mov
iret
and
enter
xor
push
int3
add
pop
arpl
inc
jp
fadds
sub
shll
ret
dec
sub
sub
insb
pop
mov
push
cld
insb
sbb
out
lods
mov
mov
jns
mov
in
cmp
insb
addr16
cmp
mov
pop
mov
cmp
ds
add
xor
cld
cwtl
mov
dec
pusha
or
xlat
ss
loope
jns
lea
in
ror
ljmp
sahf
les
mov
ffreep
jl
mov
andl
ret
mov
push
or
cvtps2pd
lahf
loope
out
inc
mov
sbb
inc
out
xchg
inc
arpl
mov
jae
fwait
mov
lds
and
xor
jnp
fnstenv
sub
insb
mov
jo
dec
in
or
pop
inc
fcomps
clc
bound
push
xchg
stc
testb
mov
adc
jbe
xchg
or
fstps
cmp
movsl
mov
arpl
add
inc
or
out
jle
xor
in
adc
and
pop
jecxz
cmp
aaa
mov
push
es
pusha
or
xchg
subb
pop
sub
sbb
fs
rcrb
or
xchg
and
lods
mov
repnz
mov
lods
or
aaa
mov
cld
lahf
fistps
pop
inc
daa
jecxz
xlat
mov
xlat
mov
push
push
pop
cmp
in
fmull
sub
into
mov
pop
push
movsb
cmpsb
cmp
and
cwtl
aas
addr16
bnd
loop
push
rorb
add
xor
insb
aam
jnp
repnz
fistpl
inc
mov
mov
and
icebp
pop
iret
jnp
sub
mov
mov
repnz
imul
jl
imul
pop
mov
xor
push
mov
xor
insb
xchg
movsb
rcl
sbb
ss
or
scas
xor
loopne
pop
pop
lock
jae
add
divl
adc
lea
iret
jp
out
inc
cmp
pop
imul
in
aas
in
stos
out
jmp
jo
mov
ds
cmpsb
sub
jmp
shrl
js
lods
jmp
cmp
popa
xor
cmp
std
loope
lds
int3
int3
xor
xor
sbb
mov
adc
or
inc
popf
jns
pop
fwait
mov
lret
cwtl
inc
sub
pop
repz
xchg
xchg
dec
stc
je
lret
adc
imull
mov
je
out
jnp
sub
insl
rcll
cmp
cs
mov
adc
xchg
xchg
add
imul
and
aas
dec
xor
mov
dec
lret
inc
mov
dec
sbb
sub
outsb
leave
fistpl
repz
xchg
mov
xchg
rcll
jbe
xlat
xor
ljmp
adc
outsb
xchg
stos
gs
ss
cmp
outsl
insl
inc
out
sti
inc
dec
adc
dec
push
pop
jno
sbbl
and
fmuls
cmc
dec
adc
mov
int3
pop
lahf
and
jg
sub
inc
mov
or
popa
fs
repnz
addl
or
jbe
fs
iret
push
mov
push
inc
pop
loopne
mov
adc
inc
xchg
adc
xor
and
mov
dec
and
mov
test
repz
aam
gs
icebp
pop
insl
xchg
orb
cmp
fmul
addr16
cld
out
hlt
gs
or
cltd
xor
inc
xchg
mov
nop
jge
das
les
mov
hlt
pop
cmc
xor
out
aaa
sbb
std
sbb
sub
pop
sbb
xor
lcall
in
jne
adc
std
add
mov
jp
sub
cmp
loope
and
inc
gs
mov
xchg
bound
pop
fabs
push
pop
stos
insl
mov
shll
mov
mov
xchg
stc
cltd
icebp
enter
ja
ret
mov
arpl
add
mov
jmp
clc
add
call
out
mov
sub
push
adc
je
imul
scas
push
cltd
lret
orb
stos
cli
pop
icebp
and
push
adc
dec
div
push
mov
das
inc
or
jne
jge
cmp
addr16
loope
mov
mov
imul
jno
mov
push
jo
mov
add
stos
insl
cltd
insl
adc
dec
mov
xchg
cmp
out
mov
rclb
dec
sub
data16
mov
mov
in
mov
shlw
das
jbe
xor
fadds
dec
push
pop
jmp
cs
enter
sbb
call
dec
dec
add
or
rolb
repz
push
dec
sahf
fcomip
sub
sub
flds
cmp
ds
mov
ret
in
sub
mov
mov
jne
mov
cwtl
insb
jecxz
adc
out
mov
push
orl
push
mov
lahf
sub
mov
loopne
inc
or
sbbb
fnstsw
loope
movsl
call
add
mov
mov
xchg
mov
sub
ds
adc
inc
addr16
jae
add
imul
push
cli
nop
sbb
fwait
cmpsb
cmpl
stos
mov
lock
dec
out
cmpsl
ror
mov
mov
lret
xchg
dec
jg
mov
aam
mov
lods
xchg
mov
pop
subl
mov
and
mov
fistl
sub
or
pop
mov
or
jecxz
and
xor
cltd
xlat
add
jbe
cli
rolb
jmp
sbb
or
jge
icebp
xor
pop
shll
fmull
aad
out
shrl
scas
mov
dec
adc
cmp
scas
fldl
imul
pop
loopne
fdivl
out
mov
clc
bound
mov
push
cmp
pop
hlt
insl
lahf
xlat
add
and
mov
adc
mov
xor
stos
cmp
or
add
jb
jecxz
outsl
test
data16
scas
xor
pop
out
lea
fisubrl
movsl
in
cltd
add
add
stc
sbb
xchg
out
leave
pusha
js
dec
psrad
bound
insl
punpcklbw
mov
or
rolb
call
adc
jmp
dec
mov
data16
aad
mov
xor
pop
andb
imul
cld
dec
sbb
inc
and
sub
xor
in
or
iret
ja
in
addr16
jmp
mov
out
in
xchg
pop
int3
aad
movsl
sbb
pop
push
loope
test
mov
lea
js
psubsw
mov
mov
lock
adcb
fucomi
fisttps
addr16
pusha
sub
outsl
sub
jmp
scas
cmp
add
nop
in
xor
pop
push
cmp
fisttps
comiss
out
xor
or
dec
lret
ret
ret
jmp
push
lret
push
jae
pop
out
scas
mov
bound
xor
add
cs
fstpt
int3
iret
loopne
fs
js
sub
test
in
push
mov
push
cld
fucom
lret
hlt
ds
out
mov
movsb
insl
or
icebp
mov
mov
jle
iret
sub
pop
fwait
rcl
pop
xor
and
rolb
xchg
and
dec
mov
sub
shll
and
fisttps
jp
cmp
mov
jne
cli
add
and
cmp
clc
push
adc
subb
inc
jnp
inc
pop
repz
mov
dec
movsb
ret
daa
push
out
jne
popa
ss
ret
insl
cmp
cmp
insb
aas
je
mov
bound
into
fisubl
int3
into
and
cmp
pop
insb
fidivl
lea
xor
icebp
cmp
cmpsb
fcomp
inc
jae
and
mov
jnp
dec
test
cmpsl
loop
mov
lret
push
sbb
loop
mov
imul
sbb
loop
xchg
addr16
fs
fdivs
ret
ljmp
sbb
sarb
fs
aaa
ret
mov
lret
das
daa
inc
movsl
pop
jnp
repz
xor
rcl
shrl
out
add
jmp
clc
aaa
or
je
insb
and
out
in
mov
nop
stc
and
std
or
mov
and
repnz
dec
xlat
pop
sbb
lret
ss
push
xor
or
xlat
pop
adc
iret
or
and
pop
movl
xchg
inc
mov
out
xor
in
inc
test
lcall
hlt
jbe
fcmovne
jno
sub
dec
mov
lea
imul
popf
push
outsl
rcrb
repnz
pop
daa
jo
and
mov
and
and
pop
mulb
and
imulb
test
iret
scas
mov
sahf
movsl
fldcw
add
add
mov
das
outsb
out
sbb
xor
push
cwtl
mov
rclb
mov
loopne
imul
test
sti
sub
adc
push
adc
ss
jge
jp
pop
lds
enter
gs
mulb
mov
hlt
rcr
in
das
movsb
shr
mov
mov
mov
popa
dec
cwtl
mov
adc
lahf
xor
int3
rol
push
inc
pusha
jle
push
sti
push
adc
adc
xor
jo
add
stc
push
popf
mov
xchg
sub
roll
push
mov
aam
in
push
sub
and
mov
push
enter
xchg
xchg
movsl
pop
in
xor
push
sub
fisttpll
and
mov
pop
xor
mov
cmp
lret
test
mov
imul
jp
bound
inc
adc
push
mov
int3
mov
pushf
mov
and
jae
gs
pop
aad
pop
fisttpll
push
pop
nop
imul
xor
ljmp
pop
mov
ret
movsb
fldcw
insl
sbb
mov
cltd
mov
out
mov
ja
mov
bound
ret
mov
dec
fwait
cld
mov
fnsave
cli
enter
int3
xchg
aad
mov
adc
sbbl
jge
cltd
cmp
cmpsb
es
inc
xchg
aam
std
inc
push
orb
jne
and
push
fucomp
enter
xchg
lock
clc
push
mov
test
sbb
or
lret
lds
push
inc
aas
and
dec
sub
mov
loope
inc
cmpsb
js
outsb
jb
imul
pop
fildl
test
imul
frstor
xlat
ret
pop
leave
push
xchg
ds
add
dec
outsb
in
cmp
cmpsb
pop
cmp
cld
mov
add
xchg
outsb
addr16
push
popf
sbb
out
ljmp
sub
jns
push
out
xchg
loopne
mov
fsub
lock
mov
fcoms
lret
and
xorl
das
std
mov
loop
seto
pop
int3
xor
je
testl
pop
sbb
mov
jge
mov
pop
jl
std
push
outsb
iret
das
mov
sbb
mov
pop
iret
enter
das
pusha
push
inc
pop
mov
or
push
stos
in
pop
imul
pop
mov
mov
ret
and
iret
lds
jns
add
pop
out
mov
into
add
lods
mov
mov
data16
testl
mov
cltd
adc
sahf
mov
ret
dec
dec
xchg
or
xor
lcall
ds
arpl
lods
xor
xchg
or
test
aad
pop
popa
or
sbb
and
sbb
enter
ss
sub
movsb
loope
push
mov
movsl
popf
scas
sbb
dec
test
inc
dec
adc
sarl
jnp
cwtl
push
fnstenv
ficomps
cmp
jecxz
sbb
arpl
xchg
jecxz
arpl
xchg
sbb
sahf
sbb
mov
pop
xchg
jns
stc
aam
cmc
add
cwtl
clc
or
cmpsb
std
outsb
fildl
insb
out
xchg
inc
inc
cltd
add
pop
ljmp
mov
in
inc
cli
inc
scas
dec
cmpsb
sub
sub
xchg
or
dec
pusha
scas
or
cmpsl
shlb
inc
shlb
test
aas
jo
mov
and
ret
mov
jne
loop
rcr
inc
inc
jge
js
imul
xchg
aaa
cmp
hlt
lock
sbb
mov
adc
leave
imul
sbb
pop
dec
mov
jbe
in
inc
std
jecxz
adc
sbb
dec
inc
imul
clc
test
mov
pop
fistpll
dec
gs
adc
push
clc
arpl
cmp
jno
adc
sub
mov
adc
repnz
pop
sbb
aam
wbinvd
cmp
or
xlat
and
jo
in
lods
aaa
mov
repnz
cmp
push
cmp
push
test
mov
lcall
jo
add
mov
and
dec
xchg
rorb
fcoms
lret
addr16
jo
addb
das
mov
mov
xor
or
repz
dec
cmp
rcrb
jmp
aam
xchg
aaa
xchg
jp
rcr
cld
data16
shll
xchg
xchg
pop
push
shr
inc
iret
pop
xchg
das
pop
pop
in
fsubl
popf
jecxz
xorl
outsb
das
mov
sub
xor
insb
lret
ds
mov
cmc
movsl
movsl
popf
lock
cmp
test
xlat
adcl
and
insb
stc
adc
jge
out
stc
xchg
mov
cltd
sub
leave
add
bound
dec
les
lds
mov
cmpsl
xchg
sbb
pop
jb
and
jae
pop
jno
out
std
pop
je
cld
call
cwtl
cmp
test
in
lret
push
jmp
test
rcll
xor
mov
mov
sar
sub
stos
lahf
push
dec
loop
seta
int3
and
pushf
test
out
outsb
jns
ss
pop
outsl
mov
and
mov
xchg
aad
push
mov
mov
and
inc
mov
out
out
lock
testl
sub
arpl
cld
xchg
jle
les
fdivrs
mov
addr16
jle
jns
push
xor
push
cmp
or
ret
pusha
cmp
jecxz
and
loope
lock
sbb
xchg
iret
or
lcall
leave
lcall
enter
adc
mov
xchg
adc
cld
mov
imul
or
inc
lods
pop
sub
jmp
adc
into
push
mov
ffreep
loope
bound
push
insl
fs
into
add
and
insb
jae
pop
pop
xchg
insb
aad
push
in
into
andb
sahf
cmp
fwait
mov
pop
out
lods
add
mov
in
mov
fwait
sbb
enter
out
out
or
fsubrs
jne
cmc
mov
push
cli
lods
lcall
stos
xor
add
xchg
aad
loope
add
loope
xchg
lret
pop
xchg
inc
out
add
and
add
mov
xor
ret
xor
mov
int3
xor
mov
or
pop
out
idivb
adc
sahf
aas
cld
jle
loope
lods
lahf
fbld
or
cmp
lahf
dec
pop
fcmove
icebp
test
or
test
nop
xor
or
loopne
dec
repnz
jg
shll
fwait
cld
lea
pop
mov
inc
imul
pusha
sbb
mov
fsubs
je
mov
repnz
dec
cltd
pushf
inc
xchg
fidivl
push
jne
ss
cmpl
sbb
sub
push
ljmp
xchg
in
scas
sub
jg
add
mov
mov
xchg
cwtl
mov
int
inc
cmc
jl
test
filds
mov
xchg
or
mov
jne
fsubs
lret
cltd
mov
loope
ret
call
lahf
cwtl
bound
iret
scas
stos
lcall
testb
cltd
andl
sub
and
mov
and
testb
aas
daa
dec
insb
add
push
loopne
mov
into
pop
gs
aaa
aas
mov
std
xchg
push
or
push
sub
clc
outsb
iret
arpl
out
aaa
leave
push
mov
mov
aam
stc
mov
outsb
mov
mov
push
aaa
rol
fstl
cmp
push
fmul
decl
push
xchg
cmpsb
sbb
add
int
or
aad
pushf
scas
mov
ljmp
nop
xor
mov
push
ljmp
xchg
adc
ret
in
inc
push
or
push
outsb
pop
sbb
inc
jo
add
push
push
ret
lea
mov
int3
lods
adc
push
jge
or
insb
test
loope
or
in
test
ret
outsl
inc
aas
xchg
fisubrs
or
xchg
notl
xchg
scas
fwait
arpl
mov
push
cmp
cmpsl
mov
sbb
fucomip
aaa
sub
sub
lea
jb
mov
das
cli
pop
and
push
ret
push
xor
test
cltd
fs
jmp
push
or
lods
sbb
dec
stos
ljmp
lock
jmp
or
push
call
enter
and
loop
cli
popa
scas
dec
cmpsl
or
out
lahf
or
mov
pop
ss
repnz
xchg
sbb
aam
in
repnz
mov
cli
cld
stc
daa
das
mov
sbb
into
test
std
notl
aas
test
adc
fnstsw
inc
add
sub
out
push
jo
sbb
rol
aam
add
sub
adc
lret
push
orl
arpl
or
loop
mov
adc
imulb
xchg
dec
out
mov
in
jns,pn
in
xor
loopne
pop
push
mov
mov
into
mov
out
lret
sub
popa
jb
popa
push
stos
test
or
add
sub
aaa
sbb
adc
mov
sarl
mov
pop
cmpsl
pop
jns
out
pop
stc
adc
fwait
insl
cmpsl
into
enter
out
and
int3
in
pushf
es
jnp
ds
dec
in
push
test
icebp
je
mov
imul
ljmp
stc
xor
ss
in
pop
loopne
pusha
push
add
mov
dec
dec
daa
jne
dec
shl
popf
clc
lds
data16
mov
in
mov
cmpsl
dec
fcom
fcos
inc
clc
andb
fidivl
shlb
das
mov
cmpb
dec
jne
xchg
mov
test
xchg
push
ja
es
jmp
hlt
fmuls
repz
push
sub
xchg
je
mov
sbb
ret
les
in
xchg
dec
dec
outsl
shlb
jb
adc
insl
stos
scas
xor
fnsave
in
xchg
dec
je
mov
or
xchg
in
xchg
dec
push
xor
push
or
mov
hlt
arpl
in
and
cwtl
jmp
dec
sub
fs
fisttps
mov
dec
or
push
cs
add
pop
adc
cltd
les
popa
in
xchg
xor
push
xorb
xchg
daa
add
xor
aaa
cmpsl
test
push
sub
adc
and
xchg
add
xchg
pop
inc
dec
jle
data16
fsub
cs
adc
ljmp
dec
push
cmp
shrl
add
arpl
mov
inc
add
mov
lahf
mov
xchg
repz
rcrl
in
add
fcoms
add
ljmp
pop
add
roll
iret
cmp
fwait
sahf
pushf
xchg
inc
outsb
jl
hlt
or
and
inc
enter
shll
mov
stos
out
push
cmpsb
stc
mul
cwtl
push
test
cmp
add
daa
pusha
std
mov
mov
cmp
jne
mov
aad
roll
ljmp
ja
add
sub
sub
bound
lahf
jmp
xchg
jbe,pt
data16
gs
or
xor
sub
jmp
sub
clc
push
test
mov
in
xor
inc
outsl
fmuls
add
out
in
pop
or
xlat
sub
xor
xorb
rcll
cmp
mov
cmp
mov
jb
mov
test
sub
or
push
ja
mov
outsl
imulb
fistl
ds
rcrb
fimuls
adc
in
popf
ret
inc
or
or
cmpsb
shr
sbb
sub
sub
sbb
inc
jb
scas
adc
test
sbb
sahf
xchg
xchg
mov
xchg
sbb
mov
inc
and
test
adc
sbb
int
cli
aad
pop
pop
hlt
and
push
and
movsl
gs
fimuls
test
rol
int
or
mov
add
mov
pop
lcall
out
push
ret
add
dec
hlt
cmp
ret
mov
pmaddwd
out
andl
rol
loope
jl
imul
cmpsb
lea
movsb
and
dec
xor
or
jge
mov
pop
jle
jnp
fstl
adc
mov
mov
pop
repz
mov
stos
loopne
xlat
sub
enter
xchg
test
xchg
movsl
pop
sub
daa
push
enterw
xchg
cmp
pop
cmc
ja
mov
popf
mov
test
imul
rcrb
into
fcomps
cld
adc
jne
cld
cmpsl
dec
sbb
add
daa
scas
xor
imul
ret
push
or
xchg
xorb
and
adc
scas
or
stos
inc
inc
pop
push
addr16
lods
mov
or
pop
mov
cwtl
push
sbb
or
jno
push
jo
in
push
inc
xorb
lret
ja
enter
or
xorb
lock
and
stc
xchg
popf
adc
enter
jb
pop
aam
fdivrs
adc
repnz
dec
sahf
xor
hlt
mov
jmp
out
outsl
push
cmp
enter
inc
es
jp
sbb
fs
imul
in
add
jne
in
shlb
mov
popa
shrb
icebp
sub
or
cmpsl
lret
sub
lret
nop
and
mov
lods
int3
inc
std
jl
mov
pop
pop
inc
or
insl
fistpl
adc
inc
mov
cmp
mov
jae
clc
out
xchg
sub
xchg
dec
movb
es
and
xor
sub
jns
dec
mov
dec
test
mov
dec
pop
andl
jg
pop
mov
adc
cmp
js
xchg
cli
in
inc
aam
sub
xchg
sbb
flds
popf
stc
push
sahf
and
fldl
lock
out
push
dec
stos
cmp
push
ret
rclb
mov
sub
mov
stos
mov
adc
pusha
push
jo
data16
enter
push
and
xchg
add
fnstsw
enter
mov
mov
scas
push
mov
pop
pop
adc
cltd
xchg
add
lock
ljmp
in
das
stos
mov
or
nop
iret
cli
mov
in
dec
mov
inc
aad
mov
andb
scas
cld
mov
cmp
and
dec
outsb
cmpl
int
loop
pop
mov
data16
rcrl
lcall
sbb
nop
sbb
jbe
std
mov
mov
int3
mov
cs
jnp
mov
ret
insb
jecxz
ret
mov
ja
iret
sbb
lds
test
in
push
cmp
push
inc
sub
sbb
cmp
ja
mov
mov
aad
mov
shrl
dec
scas
jp
add
xchg
enter
sub
icebp
out
dec
loope
loope
mov
inc
dec
int
mov
cmp
sub
add
hlt
orb
xchg
mov
and
sbb
dec
cs
arpl
push
fs
orl
dec
dec
mov
cmp
xor
cmp
aam
mov
add
stos
iret
mov
pop
sahf
and
mov
mov
out
mov
mov
call
xchg
into
leave
mov
fbstp
arpl
inc
xor
push
jmp
fnstsw
ret
in
idivl
clc
movsb
inc
push
ret
jmp
push
adc
sub
jno
push
pop
push
mov
inc
mov
inc
imul
es
movsl
popf
insl
das
xchg
cmp
mov
sub
xchg
sub
gs
pop
mov
imul
xchg
les
cmp
fisubs
roll
pop
mov
mov
or
filds
pop
orl
xor
repz
mov
hlt
aas
push
xchg
test
cmpsb
dec
pop
jb
push
imul
push
frstor
lcall
lods
sub
std
xchg
stc
mov
ret
movsl
test
and
imul
movsbl
hlt
add
repz
sbb
pushf
out
hlt
idivb
sub
add
sbb
loop
fsubs
jl
andl
dec
push
out
shl
or
aam
pop
dec
adcl
jge
cmp
and
inc
inc
xor
push
xor
cmpsb
ret
bound
outsb
mov
insl
aas
lfence
pop
xchg
pop
test
xor
mov
mov
or
pop
adc
cli
cli
dec
adc
and
push
or
fmuls
mov
push
pop
xchg
jno
push
sbb
mov
sub
clc
sti
cmp
out
xchg
jmp
jbe
ljmp
push
push
fnstcw
iret
and
packsswb
ljmp
jne
mov
lock
clc
jo
jns
sbb
fdivrs
dec
call
in
ret
ss
sbb
fldenv
xchg
stc
mov
push
xor
add
negw
push
stc
mov
out
sbb
gs
ret
push
push
es
shll
pop
addr16
push
insb
dec
arpl
cmp
jb
sub
add
dec
shll
hlt
pop
fiadds
insl
mov
sub
mov
xor
mov
xor
lret
or
std
and
push
cmp
bound
pop
js
mov
sub
xor
testb
inc
ss
mov
or
mov
push
inc
sub
sbb
lock
idivl
adc
iret
call
pusha
mov
sbb
and
push
sbb
scas
lahf
movsl
dec
adc
jmp
xor
outsl
sti
or
in
pop
xlat
pop
dec
and
fistpll
sti
sbb
add
mov
or
sub
and
divl
in
or
push
dec
mov
and
xor
rol
mov
cs
mul
mov
dec
mov
popaw
int3
add
or
test
xchg
and
xlat
and
pop
inc
mov
shl
outsb
xor
jmp
xchg
jno
inc
pop
add
cmpsl
test
aaa
adc
mov
or
pop
leave
je
fbld
ss
movb
mov
jmp
pop
aad
std
imul
insl
mov
xchg
fstpl
icebp
mov
jmp
cmc
loopne
into
or
ret
and
repnz
xchg
gs
cmp
push
lods
lods
pop
loop
jno
in
adc
lahf
jno
sbb
fcmovnb
mov
outsb
stc
cmp
push
mov
out
or
xor
mov
cld
push
pop
or
dec
lods
test
loope
adc
aam
fisubrs
loope
inc
cwtl
pop
xchg
xchg
and
stos
mov
aad
push
xor
push
and
lcall
loop
insl
push
dec
std
push
stc
mov
xchg
sbb
mov
or
mov
add
data16
adc
adc
mov
jge
push
dec
dec
rcl
aaa
arpl
sbb
in
or
mov
test
jle
xchg
pop
sub
push
lods
xchg
scas
jge
ret
add
lock
push
dec
dec
jae
push
add
mov
xchg
pop
rorb
outsb
cmp
arpl
hlt
add
mov
adc
les
xchg
out
push
sbb
sbb
js
pop
adc
cmpsl
dec
jge
das
or
xchg
repnz
mov
push
in
mov
aam
jmp
cmp
pop
std
addr16
and
lea
mov
cmp
insl
jae
mov
gs
or
shrb
and
repz
xor
in
sub
dec
xor
loope
loopne
clc
test
cmpsl
ss
sbbb
or
pop
movsl
jmp
mov
mov
mov
ror
sub
lods
clc
fwait
mov
clc
in
ret
out
mov
or
cmp
jl
jo
les
in
push
out
cmp
push
mov
mov
lret
jmp
jmp
mov
xchg
pop
or
cli
ss
add
inc
or
scas
in
mov
sbb
dec
icebp
or
mov
jne
push
mov
cwtl
pusha
mov
pop
ja
jecxz
xchg
loop
call
repnz
sub
insb
ret
pop
and
push
fmul
xor
test
xchg
adc
mov
aad
lods
jg
lret
nop
cmpsb
fdivl
out
aam
cmp
daa
and
movsl
push
fadds
mov
xor
cs
xor
jecxz
out
rorl
jae
xchg
adc
lds
lcall
xchg
test
outsb
jnp
movsl
gs
lret
xchg
add
mov
iret
sbbb
adc
scas
pop
mov
enter
movl
jb
shl
loopne
xchg
mov
test
inc
mov
fs
rol
add
pushf
fwait
cld
add
push
test
sbb
sbb
push
push
movsl
gs
and
fs
pop
mov
pop
ret
inc
mov
mov
mov
repz
into
jge
adc
cmc
ja
push
sub
dec
iret
shrb
or
or
adc
pop
dec
sahf
fsubp
xchg
jno
xchg
and
mov
pop
pop
cli
fiadds
xor
jecxz
push
ja
xchg
jmp
lods
xchg
lods
xor
sub
push
repnz
fisttpl
fwait
mov
add
mov
out
lret
or
inc
xchg
xor
jmp
inc
mov
fsub
cwtl
mov
out
jmp
pop
inc
arpl
inc
pop
lock
xchg
xor
in
jecxz
mov
xlat
aas
jno
or
lcall
add
test
jle
jecxz
out
out
out
cli
sti
lcall
jo
lock
cld
mov
mov
js
cwtl
outsb
jnp
pop
cmp
les
stc
icebp
lods
or
xchg
lods
js
cmp
outsl
gs
inc
movsl
xchg
push
jecxz
test
in
aaa
mov
aas
push
and
cld
jp
out
dec
repnz
shll
jbe
out
sub
ljmp
in
push
mov
mov
fs
inc
rol
outsb
iret
or
push
aam
jl
pop
and
inc
popa
movsl
mov
jg
ljmp
mov
sub
sub
sub
fsubs
es
mov
insb
into
fcompl
addr16
movsl
popf
jp
or
sub
or
xchg
or
mov
sub
gs
xchg
or
cld
aaa
or
xor
mov
cmp
hlt
sub
pop
aam
mov
adc
xchg
out
out
std
int
mov
cwtl
lcall
inc
lret
loope
cmc
loop
sbb
mov
xorl
ljmp
xor
cmp
jnp
xlat
add
rcl
pop
xchg
arpl
mov
sbb
mov
aad
add
jp
aam
push
xchg
fs
inc
mov
test
xchg
js
int
xchg
adc
repz
aad
and
andl
and
xor
adc
xor
inc
inc
pop
jno
popf
in
fistps
movsb
jle
jne
mov
std
xor
out
and
mov
add
in
movsb
adcb
lods
add
or
cmp
dec
sub
insl
nop
xchg
adc
shlb
and
mov
pushf
lock
mov
sbb
sti
divb
mov
divb
movsl
jbe
jbe
jmp
clc
test
jns
repz
add
out
pop
es
jg
mov
dec
neg
dec
sub
jae
jb
cmp
push
dec
xchg
or
stos
mov
add
cmc
push
out
xor
mov
pop
ss
jmp
int
xchg
hlt
call
aam
inc
insl
in
xor
cmpsl
push
jb
pop
in
rcr
or
testl
xchg
and
stos
sbb
mov
idivl
into
test
pop
int
push
adc
mov
sarb
sahf
rclb
pop
sbb
out
push
pop
sbb
inc
inc
lea
and
mov
ret
mov
jl
adc
lret
mov
cmp
inc
lds
insb
and
adc
fmull
daa
enter
cmp
and
adcb
jmp
inc
or
xor
ljmp
sbb
fmul
adc
add
or
fildll
add
data16
icebp
mov
fmull
mov
adc
dec
clc
test
das
adc
faddl
or
add
push
lret
call
out
jl
rcrl
iret
adc
jae
add
inc
sbb
inc
adc
jmp
nop
hlt
add
add
data16
inc
xlat
inc
mull
push
inc
das
and
sbb
xchg
jo
lock
mov
scas
rcrl
adc
fwait
cmp
and
aam
pop
jbe
jns
inc
push
dec
lods
jecxz
pop
inc
loopne
push
fldt
jmp
add
adc
mov
pusha
xor
push
stc
xchg
dec
fs
push
fs
cmp
lods
repz
pop
lcall
lcall
pop
repnz
jns
add
adc
test
xchg
sbb
data16
jo
or
xor
sub
push
fstp
or
out
sbb
push
movsl
jns
test
cltd
dec
mov
dec
call
aaa
xor
jmp
sbb
inc
mov
rolb
xchg
cwtl
mov
add
push
pushf
xor
ss
dec
push
inc
push
jmp
jp
jge
mov
repz
imul
and
push
push
sbb
sarb
and
repz
je
dec
setb
aad
xor
cmp
lret
in
cmc
fdivl
nop
xor
push
sbb
lret
add
dec
packsswb
sub
ja
jecxz
inc
xchg
xor
add
cltd
addr16
push
jg
xor
mov
aaa
loopne,pn
lahf
pop
mov
xchg
cltd
dec
cmp
fimuls
jae
xor
bound
mov
pop
sub
xchg
mov
xchg
sub
mov
push
dec
and
int3
addr16
hlt
cmp
enter
lock
scas
add
adc
cmp
enter
jecxz
lea
sti
add
lret
mov
jne
cmpl
popa
mov
sbb
jno
push
rcll
ret
inc
mov
hlt
fimuls
adc
out
in
cmp
push
xchg
cmp
fwait
jno
mov
pop
and
sbb
mov
push
push
loopne
mov
ret
cmpsb
outsl
add
ret
or
cmc
pop
hlt
int3
in
dec
fwait
mov
adc
les
push
lcall
push
ja
mov
and
imul
push
inc
push
loop
call
xor
enter
iret
and
cltd
xchg
mov
fistl
imul
xorb
addr16
adc
push
lds
sbb
addr16
mov
imull
mov
sub
jnp
push
lock
jnp
movsb
push
adc
sub
jp
jl
jae
jmp
loopne
pop
andb
dec
stos
adc
ds
scas
pop
lret
fnstsw
sub
xlat
sbb
jl
push
ljmp
lcall
push
insl
out
sub
repz
stos
mov
sub
aam
xlat
test
les
adc
jb
lea
js
dec
jl
sub
out
xchg
sbb
mov
mov
clc
cmpsb
mov
inc
jle
inc
xor
push
cld
lret
loop
call
jge
out
dec
call
dec
pop
sbb
sub
dec
cld
pusha
jl
jg
ror
icebp
and
push
and
mov
mov
and
les
sub
hlt
jae
and
pmaddwd
das
loop
jge
jmp
lock
movsl
cmp
push
fsub
movsl
mov
enter
sub
sub
lret
inc
push
sarb
call
xchg
dec
push
call
push
sub
inc
jl
aas
mov
or
inc
fisubs
lods
jl
xchg
add
outsl
lods
mov
pop
fisubl
mov
fisttpl
mov
fnstenv
in
pop
jno
inc
cld
fwait
sbb
sub
and
out
cmp
cld
out
fdivl
add
mov
and
out
insl
push
jno
push
sbbb
fidivrl
add
in
xor
inc
sub
jge
push
mov
in
sbb
flds
and
jmp
repz
cld
outsb
pop
mov
xchg
jecxz
xlat
jne
or
and
leave
jecxz
js
adc
lcall
subb
int3
mov
ret
jl
jle
cmc
mov
pop
sbb
scas
sbbl
dec
jge
mov
and
sub
sbb
or
hlt
dec
insl
lods
mov
inc
mov
rcll
and
sub
in
cmc
push
xchg
and
add
push
stos
repz
insl
out
sub
cmp
mov
sub
aaa
fistpll
pusha
dec
push
add
pusha
dec
jl
in
lahf
test
test
xor
mov
sub
dec
jl
jl
test
jbe
sbbb
scas
add
ss
insb
sub
outsl
test
push
aam
fs
lock
sbb
and
sarb
hlt
arpl
mov
push
xchg
imul
cmc
clc
nop
and
add
cs
loope
or
mov
jnp
mov
cmpsl
pop
push
mov
pop
into
mov
xor
pop
or
mov
push
jo
or
cmp
mov
aas
jae
jge
lds
mov
aad
lea
cli
xchg
sub
addr16
cli
outsl
push
inc
imul
sarb
mov
aas
push
jecxz
xchg
loopne
dec
xor
add
xor
test
mov
int
and
inc
push
cs
testb
lret
aad
lock
xchg
dec
jnp
cs
and
out
and
stos
push
ret
mov
in
mov
dec
jne
jle
dec
pop
imul
leave
mov
stos
and
and
mov
test
mov
cmp
test
repnz
xchg
sar
jecxz
call
inc
test
sub
out
imul
cmp
fimuls
jle
inc
pop
cli
cmp
or
mov
cli
stc
sbb
and
addr16
je
popf
xlat
jmp
popl
test
push
push
inc
cld
sbb
or
in
movsb
jb
dec
addr16
mov
pushf
and
or
mov
push
sbb
lock
int3
cmpsl
jae
push
pop
andb
jo
or
pop
fwait
lds
ret
mov
push
aas
pusha
mov
pop
jno
in
pop
repz
adc
sub
iret
ret
pop
ljmp
push
cmp
popa
sbb
in
ss
sub
xchg
cmp
mov
pop
daa
sub
movl
lock
xchg
pop
movsl
xor
mov
xchg
cli
scas
adc
inc
xchg
xlat
cmp
jne
shll
pop
clts
dec
and
mov
lcall
cmpsl
pop
mov
sar
mov
jnp
scas
xchg
cmp
std
aaa
es
pop
out
fs
cmp
aam
scas
lea
xchg
adc
andb
aam
stos
mov
popa
adc
test
or
out
fisttpll
call
push
lahf
int3
aaa
sahf
cltd
lret
mov
ficompl
sbb
dec
and
mov
ja
xchg
subl
jb
arpl
mov
enter
jo
cltd
xchg
push
iret
push
call
arpl
push
aad
popf
gs
jp
mov
gs
adc
xor
dec
dec
sub
mov
mov
int3
or
xor
adc
jp
mov
mov
out
ffreep
scas
add
outsb
lds
jp
div
mov
les
sbb
jo
cld
dec
adc
inc
and
or
lods
add
nop
mov
dec
push
fnsave
insb
sub
mov
xchg
rolb
push
inc
and
adc
stc
sub
sbb
out
into
fcom
fwait
xchg
sub
insl
push
stos
push
dec
xchg
arpl
xchg
jo
inc
movsb
inc
or
mov
cwtl
into
mov
cli
dec
xchg
jae
cmp
lods
es
mov
pop
dec
mov
adc
fs
mov
test
mov
data16
les
popa
and
lock
mov
and
xor
insl
jb
in
scas
ja
lock
ljmp
popf
mov
sarb
lahf
aas
mov
mov
arpl
div
clc
sti
std
pcmpeqd
mov
push
lds
std
jmp
pop
lahf
in
cmp
aas
mov
and
sbb
ss
adc
adc
iret
cmpsl
dec
repz
inc
gs
pop
xor
daa
sub
movsb
inc
sbb
cmpsb
mov
xchg
repz
or
sub
std
lret
jge
loopne
loopne
dec
ret
jne
iret
mov
ja
jl
scas
mov
sahf
fdivr
push
jns
pop
popf
nop
aas
jnp
pusha
or
pop
bound
mov
hlt
push
out
cmp
sub
scas
pop
ret
out
and
jns
imul
out
scas
fs
inc
jns
jg
cmp
lss
addr16
sub
sub
and
push
ret
syscall
dec
inc
mov
data16
xchg
sbb
xchg
aas
dec
jno,pt
dec
shlb
cmpsw
xor
ja
xchg
and
pop
or
lods
test
scas
mov
addr16
sub
jae
out
inc
cmp
iret
and
sbb
inc
adc
inc
mov
mov
orb
cmpb
mov
fwait
sbb
fisttps
sbb
inc
mov
test
xor
mov
scas
and
sub
jge
fisubrl
les
push
push
jg
push
into
jmp
xor
js
jb
mov
xor
mov
pop
add
jb
inc
inc
stos
and
and
testl
mov
cmp
cmp
inc
sub
addl
and
push
push
addr16
paddw
pop
std
leave
mov
push
xchg
add
xor
fisttps
testl
add
test
negb
les
pop
stc
sub
out
or
and
and
sti
cmc
pop
ret
sti
sahf
in
dec
imul
nop
xchg
stos
jns
fstpl
mov
cmp
cwtl
pop
push
arpl
das
mov
insl
cmova
arpl
aad
jb
mov
lea
mov
and
and
xchg
sub
or
mov
mov
cli
mov
add
hlt
add
jno
push
rcll
mov
xor
mov
jo
mov
enter
ficomps
popf
cmpsl
mov
cmp
jb
xor
stos
dec
jmp
daa
das
jmp
fs
push
mov
mov
je
mov
push
and
cmp
clc
or
or
mov
shrb
pop
das
les
sub
lcall
or
inc
aam
jbe
mov
mov
insb
xchg
and
out
jae
dec
dec
push
loope
cmp
adc
adc
push
shr
add
mov
pop
cmp
mov
sub
adc
or
jnp
dec
dec
push
xchg
cwtl
sbb
outsb
fs
sub
aad
sub
shll
lcall
lahf
add
jnp
dec
and
xor
neg
mov
bound
mov
pushf
mov
dec
pop
jg
add
mov
push
inc
jb
lock
mov
cs
daa
xchg
inc
adc
push
add
out
aas
call
addr16
jbe
jge
fucom
pop
xchg
mov
mov
add
push
mov
imul
dec
outsb
lods
pop
xchg
xchg
and
and
cltd
in
fisttpll
mov
stc
int
stc
rcl
and
pop
ficoms
push
or
mov
mov
cmp
sbb
loop
js
dec
mov
adc
or
fisttpll
pop
jnp
mov
jecxz
add
mov
jns
push
fstpt
mov
mov
adc
in
pop
int
push
mov
dec
andb
jle
popa
jp
jnp
fmull
mov
dec
out
sbb
ret
pop
gs
add
cmp
sub
mov
sbb
add
out
cwtl
iret
and
mov
sbb
out
jge
xchg
popf
cltd
icebp
mov
arpl
loop
inc
sub
mov
xor
rorl
popa
inc
stos
cmp
xchg
int
and
mov
sahf
flds
mov
dec
or
std
mov
clc
xchg
inc
xchg
xchg
cmp
popf
pop
out
into
jp
arpl
out
mov
int3
fcom
sbb
jmp
and
addl
dec
in
test
lock
mov
adc
xlat
pop
push
push
xchg
mov
adc
js
dec
in
dec
cmc
adc
push
jns
or
std
jl
insb
in
inc
lds
cmc
cmpsl
repnz
in
test
sbb
loopne
mov
loopne
call
push
clc
iret
xchg
pop
loopne
aaa
repnz
and
or
mov
shll
mov
addl
cmp
aaa
fcoms
mov
jno
dec
imul
stc
sub
test
test
cltd
jne
xlat
sbb
cmc
shl
sub
pop
test
or
xchg
xor
movq
push
test
xchg
push
lds
sbb
xor
sti
lea
loope
hlt
lcall
pop
out
testl
in
mov
inc
cmp
pop
jg
popf
movsl
js
sub
cmpsl
sub
pop
ja
loop
cmp
setns
or
scas
les
cmp
clc
and
imul
jge
cmp
test
fiadds
xchg
xor
push
xor
inc
or
ja
add
in
pop
mulb
sub
hlt
jbe
insl
cmp
pusha
and
mov
out
mov
icebp
lret
push
or
or
adc
repnz
js
cmp
les
dec
xor
inc
popa
sbb
cmp
jb
dec
aaa
hlt
sbb
fs
dec
je
fimull
incb
mov
inc
cmc
das
je
jp,pn
nop
fistl
push
xlat
lret
and
outsl
dec
push
xor
xchg
repnz
cmpsl
outsl
loopne
xchg
jge
mov
mov
xchg
bound
rclb
push
mull
loopne
push
sbb
cmpsb
xchg
push
push
lds
cmp
test
xor
adc
pop
xchg
push
cli
push
fs
std
lock
out
xor
mov
rcrb
mov
pop
cmp
push
imul
rcll
mov
jno,pn
push
insb
sbb
cmp
jb
movsb
push
out
loopne
add
lea
popa
dec
insb
adc
jl
push
push
and
or
inc
cmp
mov
pop
push
repz
add
or
popf
dec
or
push
cmp
cmpb
dec
repnz
out
repnz
lcall
xchg
xor
sub
or
dec
pop
ss
iret
or
je
pop
rcrb
and
xor
inc
arpl
mov
xchg
and
loopne
ja
sbb
icebp
lret
push
sub
enter
fldcw
push
or
cmp
adc
mov
sti
or
jmp
testb
adc
inc
sub
test
jge
cs
push
stc
mov
out
adc
andb
bound
ja
sub
rorb
dec
sbb
mov
sub
xor
push
out
rolb
ret
mov
and
push
xchg
pusha
call
stos
mov
and
pop
iret
xchg
insb
femms
out
shrl
or
sbb
pop
pop
add
push
xor
pop
sahf
mov
ficoms
jnp
cmp
orb
jmp
stos
and
and
jne
icebp
sbb
arpl
jb
sub
lret
idiv
test
jne
out
loope
ret
into
mov
stos
gs
mov
cmc
mov
test
or
add
insb
sub
push
fnstenv
add
inc
xchg
cmp
test
outsl
movsl
mov
mov
xor
movsl
add
test
xchg
stc
sahf
push
hlt
pop
or
sahf
xor
push
std
gs
add
mov
pop
fdivr
rcl
daa
out
icebp
sbb
mov
inc
mov
sub
fsub
js
lret
dec
daa
int
dec
mov
js
rcl
cmc
das
je
push
xchg
cmpsl
pop
das
pop
arpl
jmp
sbb
pop
add
test
and
sub
jb
movsl
imul
sbb
imul
jns
sbb
xorb
mov
and
sbb
push
jge
sbb
mov
hlt
cmp
jns
push
sbb
add
es
jb
xchg
jbe
adc
inc
mov
stc
sahf
cs
jbe
dec
ljmp
xchg
or
add
cmp
xchg
mov
mov
cmp
xchg
adc
jae
iret
inc
sub
mov
inc
rclb
push
mov
cli
outsl
sti
cmp
pop
ss
sub
inc
insb
push
dec
push
imul
sbb
push
loope
shrl
cwtl
pop
hlt
or
sbb
xchg
and
sbb
and
ds
mov
mov
mov
and
ret
add
inc
rol
outsl
push
imul
inc
jmp
outsl
xchg
dec
mov
jb
sub
add
cmp
jmp
or
mov
data16
inc
cmpsb
into
inc
in
es
xor
insb
pop
dec
int3
shlb
sbb
adc
inc
jbe
pop
rclb
adc
sbb
test
test
faddl
bound
push
loope
scas
pop
nop
mov
jno
adc
cli
xchg
loop
jae
xchg
cmp
dec
jp
or
mov
add
or
in
mov
outsl
jns
inc
mov
outsl
mov
pusha
xor
mov
push
pop
hlt
fiadds
jae
adc
and
jo
pop
mov
xchg
aas
faddl
xchg
out
call
sub
push
jo
addr16
xchg
cs
xlat
sub
jnp
fwait
push
sbbl
mov
push
add
testl
test
rol
xchg
sub
cmp
xchg
inc
int3
test
push
ljmp
mov
ss
notl
or
pop
mov
cwtl
daa
mov
add
dec
mov
push
mov
jae
stc
into
fmuls
mov
fisttpl
inc
nop
sbb
ffreep
lods
int3
adc
pop
aaa
into
cmpsl
ret
loopne
inc
jb
aad
jae
mov
cmp
adc
imul
mov
ficompl
outsl
dec
test
stos
fdivs
rorl
xchg
inc
cs
stos
call
imul
int3
push
enter
test
push
cmp
sbb
fcmovb
out
test
iret
ret
rcrb
js
inc
jg
out
jns
pop
stc
dec
xchg
cmp
shlb
cmpsl
mov
dec
stos
mov
ficompl
mov
mov
fdivrl
adc
or
lret
jnp
dec
rcr
pop
xchg
addb
hlt
pop
push
ret
or
pushf
iret
ljmp
mov
and
divb
arpl
movsl
mov
adc
jg
jno
dec
mov
shrl
or
or
adc
sbb
into
dec
dec
cwtl
push
sbb
and
dec
fisttps
nop
imul
mov
xlat
and
fsubr
push
cmp
jno
adc
insb
xor
cmp
call
adc
dec
ret
outsl
fsubp
cmp
loopne
addb
das
push
xor
mov
les
mov
inc
xchg
ja
push
insb
and
xlat
sub
cmp
sub
mov
mov
xchg
aas
or
sub
jp
cltd
cmp
dec
sbb
pusha
loope
add
cmc
mov
aad
cwtl
xor
cwtl
js
and
arpl
push
xchg
add
mov
addb
xor
sahf
jle
jo
lret
imul
and
out
shl
inc
sub
das
push
and
not
idivb
pop
add
movsl
mov
cmp
inc
sahf
fwait
xchg
xchg
pop
add
push
aad
cmp
inc
rolb
mov
xchg
dec
cli
pop
icebp
cli
and
out
sbb
lret
inc
inc
xchg
xor
or
test
lds
shlb
in
fsubl
mov
in
mov
iret
pushf
pop
in
cmp
jno
cmp
jne
push
popf
outsb
jns
cmpl
push
fs
data16
pusha
lahf
xor
outsb
xor
gs
ret
sahf
test
adc
jmp
lea
pop
and
mov
mov
idivb
lahf
jo
cmp
dec
out
jle
jle
xchg
jb
jl
sub
and
or
test
push
test
pop
dec
cmovno
test
dec
call
sub
push
int
cmp
gs
dec
lahf
out
cwtl
cli
and
pop
aad
cmp
jns
mov
push
push
or
xchg
fsubrp
push
mov
gs
int
insl
adc
add
dec
out
mov
dec
mov
cmp
lahf
fnsave
adc
inc
jmp
loop
xor
jno
adc
fiaddl
cmp
cltd
dec
ficoms
lods
push
pop
fs
std
pop
jle
stos
and
xorb
lods
enter
fs
hlt
cmp
test
insb
lock
pop
sbb
jo
pop
adc
shll
test
push
pusha
sbb
loop
aaa
inc
stos
aad
arpl
pop
sbb
out
into
sbb
jne
mov
adc
jg
rcrl
push
sub
pop
test
dec
jne
xchg
mov
mov
bound
lahf
loope
imul
dec
xchg
icebp
aaa
dec
jecxz
add
mov
push
inc
dec
push
fldl
push
data16
movsb
mov
mov
sub
lock
adc
add
insb
adc
mov
push
xor
fdivs
pop
dec
pop
pop
jge
cltd
pop
cmp
push
xor
mov
push
ss
dec
ja
xchg
sahf
adc
push
or
pushl
xchg
stos
inc
add
js
jle
adc
dec
lret
aad
bound
test
push
hlt
test
cmpb
pop
fldcw
jmp
or
add
aam
dec
sub
mov
pop
in
insl
out
pushw
addb
mov
nop
mov
ret
sbbb
insl
or
inc
fyl2x
andnps
pop
mov
icebp
mov
stos
dec
and
xor
cmp
test
jnp
sahf
sub
xor
addl
shl
xchg
clc
mov
or
adc
pop
pop
adcb
aaa
pushf
loope
mov
test
mov
pop
push
sub
jl
xlat
and
mov
jmp
dec
push
cmp
inc
stos
not
add
jp
add
cmp
shl
cmpsl
xor
mov
cli
and
xor
ljmp
mov
add
inc
pop
enter
mov
aam
repnz
test
inc
pusha
jns
movsl
pushf
cld
sbb
or
lret
pop
scas
or
xchg
das
jl
sub
sbb
jl
sbb
add
test
mov
lcall
jo
in
ja
mov
add
mov
jmp
mov
jno
jo
cli
ds
js
mov
mov
int
lcall
sahf
stos
add
je
pop
not
bound
lds
and
and
xchg
and
jp
leave
lahf
push
or
mov
xchg
fcoms
dec
in
adc
sahf
loop
sbb
push
xor
jb
in
sub
jb
sti
jae
xchg
mov
mov
mov
inc
in
fwait
ds
mov
sbb
je
imul
or
mov
aaa
stc
mov
mov
data16
inc
push
les
fxch
fwait
cwtl
xchg
cltd
xchg
mov
sub
push
fstps
pop
test
mov
cmp
add
jp
mov
jle
mov
idiv
in
sub
movsb
push
sub
mov
xchg
mov
stos
arpl
std
outsl
pop
movsb
push
jecxz
out
outsl
insb
jle
int3
xchg
xor
add
nop
xor
jnp
mov
pop
push
mov
cs
lahf
into
out
xor
sahf
out
jmp
movsl
mov
cmp
add
pop
adc
lods
mov
mov
test
test
push
pop
lret
push
or
rcrb
out
mov
jmp
push
xchg
pushf
mov
pop
push
mov
cmp
jae
push
out
ss
mov
outsl
imul
sbb
mov
imul
cwtl
jae
insl
adc
and
mov
es
repz
pop
daa
xchg
add
mov
xchg
gs
jmp
cwtl
jae
movsl
gs
rolb
imul
cmp
and
std
aam
sub
addr16
in
dec
into
lods
repz
cmp
aam
out
jp
adc
mov
cwtl
adc
jo
ret
cmpsb
sbb
gs
jl
or
xchg
out
add
roll
push
test
outsl
cmc
mov
inc
mov
rorl
test
clc
push
movsl
repz
fisubl
or
jno
pop
in
popa
or
sbb
mov
jb
ja
cmp
testb
push
lods
sahf
sahf
js
insl
sbb
lods
xor
mov
movsl
push
mov
cmc
cmp
movsb
jmp
lret
jno
adcb
or
cmpsl
fisttpll
je
mov
ret
cmp
pushf
sub
orb
divl
call
add
pop
add
sbb
test
dec
mov
push
mov
out
xchg
test
cs
hlt
pop
fwait
or
test
mov
mov
hlt
jns
dec
xchg
add
in
bound
jbe
sub
negl
xor
xor
cmp
mov
insl
pusha
xchg
mov
lcall
dec
int
stos
loop
adc
arpl
pop
jo
xchg
das
add
jl
mov
and
xchg
movsb
xor
out
out
inc
jg
aad
insb
cmp
sbb
sti
test
lret
addl
imul
sbb
js
loop
mov
rolb
cld
pop
add
adc
int3
xchg
sbb
fsubrp
lea
jp
xchg
sahf
loop
lahf
outsl
add
cmpsb
sbb
cltd
je
ja
mov
imul
add
xor
or
mov
or
cmp
pop
cmp
dec
jno
aam
inc
xchg
sbb
jno
push
rcr
insl
add
mov
push
scas
cmp
test
aam
xchg
movsb
or
dec
inc
inc
in
sbb
daa
push
sbb
dec
imull
aaa
fidivs
push
addr16
stos
xchg
sub
add
sbb
sub
mov
jbe
push
lahf
jmp
push
dec
sub
icebp
xor
mov
popf
lds
lahf
popa
iret
jg
xor
jmp
sarb
lods
push
mov
pop
mov
test
cmpsl
xor
sbb
sahf
adc
mov
push
test
iret
jae
cld
xchg
repnz
in
mov
lock
jae
popf
cmp
cmc
mov
faddl
imul
mov
mov
dec
fs
or
lds
ss
test
mov
dec
lcall
clc
nop
adcb
inc
sbb
and
or
sbb
ja
jbe
imul
dec
mov
lock
mov
icebp
sub
cltd
pop
test
cmpsb
xor
stos
pop
and
pop
movsw
pop
sub
push
out
dec
xchg
negb
sarl
in
pop
pop
push
jmp
mov
push
popa
adcl
and
mov
xor
jns
pop
loope
dec
js
rclb
and
inc
xor
aam
xchg
or
jp
loop
imulb
lods
cmpsb
pusha
testl
or
loopne
jmp
roll
mov
mov
mov
and
ret
xchg
pop
xor
lock
push
dec
cmpsl
push
xor
cld
adc
lret
or
pusha
push
mov
das
pop
rolb
mov
or
push
je
mov
in
rcl
xor
cld
shlb
je
push
js
add
hlt
push
push
fwait
jns
add
sbb
mov
xchg
sub
loop
pop
adc
and
push
je
js
ja
jb
nop
ficompl
sbb
pop
cmp
push
adc
xor
cmove
xor
fldt
rcll
jae
sbb
shl
and
dec
repnz
test
and
mov
adc
mov
mov
adcb
leave
cmp
inc
dec
shll
fistpll
pop
mov
std
fildl
daa
pop
jnp
cmp
xorl
orb
dec
and
or
adc
pop
lds
adc
iret
sbb
movsl
aaa
frstor
xchg
add
cmp
int3
aaa
mov
or
call
out
lcall
mov
fwait
sbb
mov
data16
jno
iret
mov
jo
out
fmull
aad
loop
cmc
mov
pop
pop
rol
add
ret
int
xor
insb
pusha
fs
aam
and
sbb
cmpsb
push
adc
outsb
fnstcw
mov
aaa
enter
sbb
test
jecxz
mov
loope
cmp
dec
outsl
int3
push
inc
pop
lods
test
mov
xor
or
shll
jne
mov
cltd
dec
push
inc
or
das
mov
or
xor
add
fcmovnu
ss
daa
add
int3
jmp
out
mov
mov
aam
sbb
dec
hlt
cwtl
and
xchg
pop
xorb
out
int3
or
push
lods
sbb
sub
or
mov
enter
scas
dec
jge
movsb
push
sbb
movsl
push
divb
fcompl
sti
mov
sub
mov
jecxz
ds
mov
nop
sbbb
and
xchg
xchg
push
lret
movsl
and
imul
call
jle
ljmp
imul
enter
scas
dec
xchg
or
lcall
push
out
dec
lds
lret
pop
sahf
and
das
push
sub
stos
out
repnz
fsubl
shr
pop
insl
ljmp
adc
adc
dec
push
jnp
dec
imull
lods
push
aaa
push
xchg
testl
outsl
xchg
fucom
cld
jg
test
cld
xor
out
cmpsl
push
bound
sbb
ja
test
je
pop
cmp
push
les
ret
loopne
mov
movsb
add
jl
inc
xchg
xchg
leave
lds
add
and
imul
repz
or
lods
loopne
repz
jae
xor
js
xor
popf
bound
mov
adc
int
mov
lods
jge
movl
popa
dec
inc
mov
shll
adc
shr
pop
clc
stos
mov
loope
cwtl
push
dec
fdiv
and
mov
mov
mov
notl
adc
pop
jecxz
mov
fmull
mov
mov
in
sahf
andl
sbb
mov
sbb
fisttpll
cmpsl
mov
fstpt
aas
xor
lcall
xchg
int
jns
sbb
mov
jb
lods
mov
xor
data16
insl
xlat
inc
cwtl
add
fimull
xchg
add
mov
clc
popf
mov
pop
pop
jp
sbb
xchg
xchg
cmp
call
sub
and
pop
jo
dec
xchg
adc
pop
cwtl
mov
rcll
push
mov
out
fsubl
jne
sbb
push
cmpsb
stc
mov
xchg
addl
mov
mov
push
jl
jmp
pop
mov
sub
push
or
dec
fdiv
jb
sub
test
xor
inc
and
pop
cmp
mov
adc
jecxz
lcall
mov
testl
in
xchg
orl
dec
xor
add
in
sub
into
cld
stos
inc
into
imul
mov
jnp
fisttpl
loop
jmp
adcb
dec
xchg
lods
in
stos
mov
dec
jb
in
or
lahf
jbe
sbb
sub
lcall
add
loop
hlt
xchg
je
add
test
jmp
sbb
out
je
iret
mov
jp
inc
jecxz
inc
jecxz
roll
inc
nop
fs
int
dec
and
stc
mov
or
loope
pop
inc
mov
dec
ljmp
mov
xchg
xchg
inc
jle
jmp
sub
loop
or
ss
sub
fsubrp
push
out
and
jne
sbb
ficoms
decb
sub
sub
pop
push
pop
add
pop
rcrl
adc
adc
decl
mov
and
push
sub
push
rcl
ja
js
mov
jg
int
mov
es
ja
jo
sbb
push
ret
or
jecxz
push
call
fisttpl
or
mov
in
or
sub
adc
fcomps
xchg
das
fcmovbe
int3
jge
iret
dec
mov
xchg
mov
mov
lock
lds
shl
pop
adc
add
or
pop
scas
mov
imul
aam
ret
push
stc
enter
push
dec
dec
jle
pop
jp
lcall
or
leave
out
loope
fsubl
in
cs
in
enter
xchg
std
out
test
mov
sbb
fs
adc
test
mov
cs
or
adc
fcomps
ret
ljmp
push
mov
dec
xchg
ret
sbb
imul
dec
mov
das
ja
add
xchg
dec
lods
pop
adcb
lret
in
and
or
out
loop
add
xor
shlb
les
fwait
data16
and
xchg
xchg
cltd
shll
or
movsb
mov
outsl
xchg
xor
int
xchg
stos
movsl
das
dec
adc
dec
sbb
mov
sub
andl
fadds
fstps
lcall
pushf
dec
push
dec
push
sbb
dec
orl
adc
sbb
and
inc
mov
xor
and
push
mov
push
lods
cmp
andl
push
insb
or
or
dec
fwait
jge
movsb
jne
mov
aad
xor
scas
sahf
scas
lea
leave
xor
push
xlat
adc
mov
data16
inc
ret
sub
push
jns
fs
es
push
cwtl
xorl
repz
add
lea
adc
mull
out
gs
cmpl
push
and
jmp
xor
pop
mov
out
cli
sahf
sub
xchg
xchg
orb
fcmovbe
jb
testl
cs
std
dec
mov
or
inc
inc
inc
mov
cmp
push
pop
xchg
movl
mov
stos
mov
imul
push
pop
adc
dec
mov
cmp
ret
nop
sbb
insl
fwait
add
sahf
mov
inc
scas
pop
push
int
int
push
push
das
mov
cmp
lahf
je
xlat
loopne
leave
cmp
fsts
jg
push
lods
push
lds
mov
and
mov
ret
lahf
jp
and
xor
mov
gs
or
cmp
ds
xlat
stos
data16
pop
aas
popa
cmp
jnp
cmp
gs
adc
cltd
aas
scas
pop
in
rcrb
out
jbe
loop
jns
mov
pushf
cmc
push
and
psraw
add
mov
cmp
cmpl
sti
push
and
pop
mov
lret
test
pop
lret
mov
insb
add
movsl
ljmp
dec
add
pop
lcall
mov
bnd
push
mov
sbb
fs
dec
and
mov
into
shl
clc
add
xor
rolb
xor
jmp
mov
stos
inc
xlat
out
cld
mov
pop
mov
xchg
xor
mov
xchg
sbb
mov
inc
cmp
jp
jns
call
cmp
sbb
sti
sub
pop
mov
xor
pop
or
lea
leave
cwtl
push
add
movsl
pop
and
xchg
clc
mov
inc
adc
mov
bound
sbb
pop
push
and
dec
insb
lahf
test
inc
jnp
out
pop
in
xchg
xchg
push
ret
lea
aad
sti
adc
aam
dec
arpl
call
lea
jno
xorb
or
dec
es
add
addl
call
mov
pop
fcomps
mov
xor
bnd
cmc
inc
sbb
xor
fsubr
bound
xchg
aad
fdiv
xor
push
inc
pop
repz
add
sbb
mov
popf
xchg
cmpsb
push
mov
repz
flds
sti
and
cli
stos
cli
add
and
rorb
inc
data16
pop
push
mov
pop
sahf
popf
daa
cmpsl
mov
ret
or
arpl
xchg
inc
popa
mov
lahf
mov
xor
imul
pusha
pop
dec
mov
push
rcll
or
xlat
imulb
test
das
sti
pop
push
leave
and
sar
loop
jnp
icebp
paddq
in
mov
jp
int3
xor
lods
sub
xor
cs
push
fistps
jmp
ficoms
mov
addr16
inc
ret
xchg
in
sbb
cmc
aaa
xlat
jmp
dec
mulb
inc
mov
dec
icebp
push
inc
je
jle
jns
addl
cmpsl
addr16
aas
ljmp
invd
cmp
stos
mov
lock
jbe
dec
lret
adc
mov
aam
lods
rorl
xchg
imul
xor
into
in
or
xor
and
adc
divl
sub
arpl
fidivl
cmp
mov
enter
mov
sub
cmpsl
jecxz
jle
inc
movsl
and
scas
adc
sub
sahf
mov
arpl
add
xchg
in
mov
cmp
int
arpl
inc
mov
ljmp
adc
jp
cli
pop
ret
sbb
or
mov
or
push
pop
rol
movsl
cli
mov
jns
adc
out
pop
cmp
lahf
fwait
xor
enter
aas
push
pop
push
jnp
xor
jbe
fsubrp
adc
jnp
pop
mov
test
and
jg
mov
mov
dec
lret
or
mov
push
push
xchg
push
or
icebp
aad
push
add
pushl
cmp
iret
mov
es
orl
aam
mov
je
jnp
imul
loope
dec
fidivs
xchg
loop
or
xor
sub
ds
xchg
xchg
ljmp
aam
pusha
stos
mov
mov
xor
cli
inc
inc
dec
cld
fcomps
or
in
test
pop
sbb
je
loopne
daa
fsubrl
daa
aad
cmpsb
push
loopne
pop
cmc
pop
mov
mov
and
out
fisttps
addr16
pop
leave
sub
jl
out
stos
pushf
enter
inc
shrb
dec
loope
push
iret
fisttps
out
xchg
sub
mov
movl
or
and
mov
jnp
lret
mov
test
fdivrp
pop
inc
mov
mov
cmp
rorl
ret
out
out
inc
mov
test
leave
in
pop
movsl
sbbl
mov
dec
mov
mov
leave
mov
dec
std
push
push
dec
outsl
and
aad
jns
cmp
xor
and
rcll
mov
aad
push
jle
push
sbbb
test
cs
or
scas
mov
and
cmp
fidivs
daa
mov
jmp
mov
leave
jge
sbb
xchg
sbb
js
je
aas
mov
fsubs
fcomps
mov
add
mov
lahf
lock
stc
cmp
pop
into
setge
or
mov
out
jp
mov
mov
je
and
movsl
jno
push
in
rclb
fadds
int3
push
and
mov
xor
in
inc
popf
mov
mov
or
stc
ja
test
hlt
je
dec
pop
loopne
pop
movsl
incb
or
inc
es
pushf
int3
mov
dec
repnz
ret
pop
clc
call
mov
clc
mov
dec
fwait
sarl
fimull
pusha
inc
dec
push
xchg
lds
imul
pop
ror
add
dec
imul
or
push
xor
mulb
in
jb
mov
je
inc
lods
fstpl
loop
jmp
push
inc
or
adc
sti
push
aam
push
bound
cmp
dec
cmp
jbe
shlb
mov
adc
push
movsb
sub
xchg
xor
movsb
push
fimuls
mov
bound
xor
sbb
mov
ss
daa
mov
pop
sbb
sbb
imul
fcomps
mov
dec
enter
test
stos
add
push
into
mov
cltd
pop
test
xchg
call
inc
int
fdivr
jecxz
jg
es
aad
js
fdivp
idivl
mov
std
pushf
std
mov
loopne
mov
dec
es
pop
mov
mov
and
push
add
add
arpl
sbb
inc
pusha
leave
add
jmp
gs
cwtl
leave
adc
inc
sbb
pop
test
hlt
sub
push
sub
loope
sbb
add
sbb
fwait
push
in
mov
sub
jecxz
idivl
test
clc
or
frstor
into
test
into
push
gs
jmp
pop
mov
push
xchg
aas
pop
pop
arpl
adc
pop
sbb
frstor
mov
adc
mov
loopne
rcrb
sub
mov
mov
jno
dec
cmp
scas
push
je
mov
jl
mov
pop
sub
lret
cli
clc
or
xor
test
test
jne
cld
jo
push
dec
shll
jmp
cmpsl
out
pop
dec
fcompl
inc
mov
insl
fisubl
test
and
cmpsb
mov
movsl
xlat
xor
test
dec
or
mov
jmp
mov
pop
iret
shr
mov
popa
aam
mov
adc
push
loop
cld
adc
pop
jne
cli
dec
dec
loope
stos
arpl
cmpsb
sub
pop
nop
mov
les
int
lds
rcrb
xor
rcrb
add
xorb
mov
add
cmp
push
mov
sbb
rorl
and
mov
xor
jb
es
pop
mov
dec
in
stos
in
cmp
gs
mov
sbb
inc
sahf
sub
loope
iret
adc
data16
and
fldcw
push
clc
inc
push
jbe
sub
mov
pop
inc
jo
mov
out
push
cmp
cmpsb
xchg
jg
pop
fiadds
mov
into
test
mov
sbb
jbe
sub
push
add
out
dec
cmp
push
repnz
pop
leave
or
stos
call
out
mov
sub
pop
aam
jp
mov
mov
cwtl
add
leave
inc
inc
inc
popa
lock
sbb
cmp
imul
and
adc
mov
fists
daa
inc
push
sahf
push
dec
jno
cld
int
fsubrs
xchg
leave
mov
push
mov
fadds
sahf
add
sbb
dec
lahf
xor
cmp
mov
or
bound
outsb
in
xor
dec
jle
inc
add
inc
call
pop
call
jo
add
mov
pop
sbb
mov
repz
test
jns
test
adc
sub
add
cmc
and
mov
dec
insl
ds
scas
jb
add
or
aam
mov
add
jae
cwtl
adc
jb
jns
push
push
stos
loope
xchg
lret
inc
lcall
push
push
popa
popf
out
adc
daa
cld
or
mov
jp
lcall
or
sub
in
add
mov
mov
insl
fistps
call
cmp
clc
fs
sbb
mov
mov
jno
out
in
or
je
sti
mov
add
push
xorl
sbb
movsl
jp
mov
ljmp
ret
fldl
orl
dec
pop
mov
jno
mov
dec
xchg
mov
and
jns
and
iret
pop
xor
or
sbb
cs
movsl
fs
mov
cmp
out
cld
inc
cmp
mov
xchg
test
xor
inc
dec
xor
test
mov
xchg
js
xchg
mov
cmp
xor
aad
jnp
and
rcl
or
rorl
cltd
pop
mov
rcrl
jmp
adc
mov
sub
lret
adc
mov
jbe
xchg
cmc
pop
leave
cmp
xchg
adc
addr16
mov
mov
and
test
mov
add
into
shl
push
sub
pop
scas
cwtl
fstpl
lock
and
adc
test
jno
push
ljmp
int3
adc
xchg
xchg
inc
push
loope
xor
popf
sbb
sahf
and
daa
lahf
into
push
stc
pushf
pop
mov
add
dec
add
ficompl
xchg
mov
fisubs
fs
mov
hlt
das
fisubl
cltd
cmp
pop
out
fld
pop
ret
inc
fsubl
jge
inc
adc
dec
addr16
xor
mov
or
int
imull
scas
call
mov
popf
movsb
loop
dec
adc
adc
popf
cmp
sahf
xchg
cmpl
jl
stos
sbb
pop
mov
xchg
addr16
push
popa
lds
aad
pop
lock
movb
push
dec
pusha
rcll
rcll
push
mov
pop
icebp
mov
lret
sbb
inc
pop
sahf
dec
in
push
add
push
loop
inc
inc
mov
and
stos
in
nop
or
xchg
jmp
enter
mov
hlt
imul
icebp
and
xchg
data16
jb
cmp
cld
and
int3
jae
xchg
adc
push
inc
andl
sbb
shlb
fmuls
mov
shlb
mov
aad
xchg
lahf
aaa
push
push
push
lock
sub
es
lea
sbb
fwait
cltd
sub
fwait
sbb
mov
sub
js
dec
or
lods
pop
ffreep
mov
xchg
dec
imul
inc
in
mov
mov
mov
sub
hlt
jno
pop
adc
lds
cmp
ljmp
into
pop
mov
xlat
shlb
xchg
jg
xchg
lret
push
idivb
aas
sar
mov
pop
in
cmpsb
push
mov
out
iret
insl
mulb
enter
or
mov
aas
or
pop
cmp
mov
iret
inc
dec
rolb
mov
repnz
xor
movsl
sbb
hlt
xor
into
loope
enter
fisttpl
aad
jecxz
xchg
push
imul
jge
pop
and
xchg
insb
repz
stc
xchg
dec
leave
jg
cld
clc
lock
xchg
cwtl
jle
dec
lods
out
lods
jle
cmpsl
jle
push
push
daa
sbb
aam
add
imul
sti
mov
js
paddsb
xchg
mov
jo
xchg
mov
inc
mov
inc
push
popf
add
repz
loop
add
call
mov
jmp
cli
and
addb
sub
add
std
outsb
mov
sbb
rcr
sub
adc
jbe
scas
xchg
addr16
jmp
mov
xchg
pop
loopne
xlat
mov
mov
or
test
repz
aaa
add
pop
sbb
shlb
fsubrp
fisttpll
mov
mov
sbb
push
cmpsl
and
push
mov
jmp
push
adc
sbb
or
nop
push
inc
mov
mov
and
orl
arpl
jg
stc
add
fnstenv
mov
jb
and
jne
out
inc
rorl
cli
sbb
push
shrb
mov
sub
in
xor
push
ja
addr16
movsl
sbb
pop
mov
sti
shl
fstl
stc
shrb
pop
dec
mov
lahf
pop
xlat
or
stos
data16
out
sbb
adc
lock
adc
xchg
pop
sub
or
push
adc
push
jl
push
std
xchg
push
loope
mov
movsb
test
popf
test
mov
adc
pop
lret
stos
orl
mov
mov
mov
pop
mov
xchg
and
pop
mov
dec
ljmp
repnz
aas
mov
sti
sub
scas
adc
mov
loopne
mov
mov
cmp
into
mov
repz
popf
xchg
xor
xchg
pop
inc
repnz
pop
fwait
mov
mov
lcall
loop
push
mov
ret
lea
out
je
dec
aad
iret
fldl
ljmp
add
xchg
sbb
sbb
aaa
xchg
jmp
mov
dec
shrb
mov
sub
dec
lret
into
add
pop
pop
xchg
mov
stos
push
xchg
or
arpl
mov
popa
jge
pop
jmp
or
inc
cwtl
repnz
push
sbb
test
dec
aad
cmp
ret
push
fs
inc
xchg
iret
js
inc
sahf
xor
imul
mov
jg
push
in
repnz
cld
dec
jl
add
repnz
jne
mulb
lgs
mov
sbb
aad
pop
and
mov
divl
mov
cmp
xor
pop
daa
iret
stc
inc
lods
adc
data16
lahf
jbe
cmp
mov
je
fs
dec
sarl
inc
or
lahf
fcomps
push
ficoms
or
jnp
mov
xchg
sbb
int3
xchg
add
cmp
in
mull
pushf
sti
push
std
mov
mulb
insl
pop
sub
or
mov
dec
outsl
repz
popa
cmovnp
rolb
es
push
icebp
loope
in
imul
pop
iret
insl
mov
xchg
int3
inc
testb
mov
cmc
cmpsb
cld
add
jge
cmpsl
incl
mov
inc
adc
fsubrl
hlt
pop
mov
mov
sbb
cmpsb
jae
test
leave
mov
add
push
sahf
push
inc
dec
xor
push
test
in
xor
fnstsw
xchg
sub
inc
insl
or
mov
insl
inc
inc
or
mov
add
dec
mov
out
stos
out
les
jb
in
cmp
mov
push
jno
fbld
add
lea
loope
lret
inc
stos
cmc
sahf
nop
into
adc
test
inc
test
fistpll
xchg
mov
loopne
xor
jno
lea
adc
shrl
pop
popa
dec
cmp
jb
dec
jne
fbstp
out
push
jecxz
fwait
or
out
push
jo
push
cmp
push
push
rcrb
cltd
cltd
adc
nop
xchg
lds
popa
mov
push
push
mov
mov
es
pop
and
pusha
aad
cwtl
mov
cmc
mov
push
subb
mov
jp
fldenv
ljmp
mov
adc
add
es
push
lahf
mov
loop
xchg
arpl
xchg
or
mov
mov
xor
gs
shl
push
push
sbb
movsb
subl
test
leave
fadds
cmc
push
push
nop
mov
arpl
mov
cli
fstl
js
inc
mov
das
add
jg
dec
in
and
lods
cli
sub
stos
sbb
divl
hlt
push
out
xchg
shlb
pop
aam
xchg
or
cmp
gs
sbbb
lock
cmp
pop
into
mov
mov
mov
xchg
addr16
mov
ror
or
mov
pop
fldcw
or
int3
rdpmc
fnstsw
pop
inc
push
mov
mov
clc
lea
fwait
add
dec
pop
push
fdiv
mov
mov
pop
shlb
inc
cli
ds
adc
jle
pushf
jle
inc
mov
mov
and
test
das
addl
pop
mov
pop
push
imul
mov
test
mov
mov
lcall
jne
rorb
dec
gs
push
int
fistpll
jl
aad
lret
pop
mov
pop
sub
aad
aaa
jo
nop
popf
insb
xchg
sahf
cmpsb
std
mov
jg
pop
hlt
hlt
imul
pop
nop
sub
mov
xchg
push
sub
push
loope
lea
mov
and
xchg
popa
mov
outsl
jmp
mov
inc
dec
sub
dec
int3
leave
mov
lahf
jae
mov
hlt
pop
push
fistpl
mov
incl
test
xor
fnstenv
adc
push
jno
push
bound
outsl
cltd
mov
inc
mov
rorb
push
loopne
or
les
js
mov
cmc
ret
lock
sub
mulb
out
call
stc
xchg
rclb
xchg
aas
mov
hlt
push
int3
sbb
and
jns
les
in
ja
sahf
xor
mov
xchg
testb
add
pop
les
and
xor
mov
pop
in
fwait
and
mov
aaa
call
mov
or
sbb
sbb
inc
out
xor
clc
iret
ss
in
outsb
lds
je
pop
cmpsl
rcll
push
scas
dec
xor
push
add
add
xor
ret
cmp
mov
test
adc
aad
fdivl
push
pop
test
scas
add
loopne
imul
je
das
fwait
push
outsb
mov
sub
fnstcw
jle
adc
inc
nop
jle
sbb
add
leave
push
les
cmp
cld
xor
leave
cs
cmp
roll
pop
and
inc
add
mov
int3
cmp
dec
fwait
xchg
out
repz
jo
shlb
xchg
aam
xchg
jl
fxch
ja
hlt
push
jge
push
mov
pop
repnz
movups
mov
es
xor
ljmp
push
jecxz
shll
xchg
cmc
pop
es
mov
push
xchg
add
cmp
xchg
xor
lret
mov
into
adc
inc
push
movsl
movsb
xchg
in
mov
cmp
push
cwtl
xchg
imul
out
sti
push
outsb
and
cmp
in
and
xchg
jp
lods
mov
pusha
dec
xor
loope
dec
je
das
mov
cli
outsb
jmp
jns
mov
push
insl
repz
pop
lcall
mov
outsl
aad
sub
adc
or
xor
lods
lods
jg
fs
icebp
push
or
iret
mov
scas
or
scas
or
inc
ret
lahf
fucomi
sub
sub
ljmp
xor
jle
jle
test
xchg
movsl
mov
jns
cmp
add
pop
push
mov
dec
popa
sbb
test
xor
xchg
arpl
repnz
xchg
mov
sub
sbb
shll
or
jmp
push
fwait
adc
xorl
daa
sbb
add
out
inc
pop
push
cs
jnp
dec
insl
ds
mov
sti
lock
push
repnz
pop
cld
or
jb
inc
lahf
arpl
lds
jmp
add
ret
ret
xchg
jae
loop
adc
aam
imul
or
sbb
push
push
push
inc
cmpsb
xlat
out
fldcw
aas
popa
aaa
mov
mov
jp
mov
mov
leave
and
jmp
dec
sub
inc
out
stos
in
fadd
or
sub
js
in
mov
pusha
jg
mov
out
scas
or
cs
lea
dec
jg
inc
loope
inc
inc
push
dec
std
push
pushf
jp
mov
jae
mov
bound
push
nop
xchg
sbbb
in
adc
push
test
icebp
ljmp
fistpl
push
adc
mov
dec
imul
fcoms
mov
aam
sbb
add
iret
lods
add
fadds
xor
js,pn
mov
popf
push
jl
jnp
mov
jmp
outsb
stos
mov
inc
push
stc
jne
push
mov
outsl
xor
aaa
int3
jbe
fistl
scas
insl
xchg
pop
mov
xchg
fisttps
je
and
in
pop
and
cmp
in
fstpl
or
enter
mov
mov
inc
jae
hlt
dec
xchg
sbb
enter
testl
pusha
push
call
jmp
jecxz
pop
dec
xchg
ficoml
or
xchg
leave
mov
xor
hlt
xor
adc
fstpl
mov
xor
cmp
pop
gs
leave
xchg
xchg
call
repz
dec
mov
sub
loopne
stc
dec
sbb
jl
hlt
lods
movsl
jl
add
fs
imul
xchg
sahf
lcall
jns
stc
mov
loopne
nop
inc
aad
arpl
xchg
cmp
adc
hlt
push
mov
jne
testb
add
dec
clc
sub
adc
lret
jne
adc
adc
ss
mov
sub
call
ret
xor
test
mov
mov
jge
pop
dec
cmp
push
sub
cwtl
sti
js
mov
mov
sub
ljmp
into
movsb
mov
xor
mov
outsb
out
int3
popf
cmp
mov
stos
lret
push
in
add
xlat
mov
push
add
jmp
sub
mov
sar
dec
push
roll
mov
push
push
loopne
outsl
cmp
push
mov
mov
jle
cli
dec
aaa
adc
pop
ja
dec
js
mov
out
pushf
imul
dec
inc
push
aam
loopne
iret
or
ljmp
push
inc
lahf
jo
popa
popf
mov
pushf
xchg
aaa
lcall
cmpsb
ja
stos
cmpsb
rolb
lock
jbe
mov
jle
addl
sub
cltd
testb
dec
xchg
jge
mov
cwtl
pop
ret
scas
sarl
dec
movsb
sub
fcmovnbe
xchg
cld
or
insb
dec
mov
aam
and
aad
sub
nop
pop
cmp
inc
mov
sbb
pop
mov
das
subb
cmp
jo
outsb
lret
js
fbstp
cs
mov
mov
cmp
mov
mov
xchg
mov
fbstp
clc
mov
xchg
imul
pop
lock
pop
in
jmp
stc
pop
sbb
push
xchg
lret
subb
insl
lods
adc
mov
mov
lahf
fcmove
lods
and
mov
insl
pop
hlt
cmpsl
int
lahf
mov
rcrl
adc
in
das
mov
loopne
popa
pushl
sbb
dec
ficoms
mov
std
fcomip
xchg
scas
call
jmp
je
iret
xchg
dec
inc
pushf
sub
mov
aad
mov
aam
xor
dec
mov
mov
xchg
mov
push
sbb
pop
or
adc
sub
cmp
dec
sbb
icebp
shrb
stc
mov
adc
mov
arpl
fldcw
mov
cld
mov
push
adc
adc
orb
divb
or
xor
and
js
jl
xor
sbb
fidivrs
jnp
push
dec
test
jge
insl
sub
out
mov
movsb
les
test
mov
jns
jl
jae
imul
jge
cmp
ss
iret
jge
es
push
pop
jns
jbe
mov
int
cmpl
lock
out
or
cmp
xchg
or
jb
or
mov
and
push
jae
dec
daa
ds
mov
inc
in
or
push
in
add
and
mov
inc
nop
adc
lcall
sbb
xchg
sub
mov
mov
mov
sbb
imul
xchg
adc
insb
mov
mov
out
ret
scas
test
into
xor
sub
outsb
add
cwtl
push
xor
subb
in
mov
data16
mov
push
inc
aaa
adc
filds
push
or
inc
mull
fwait
aaa
cld
pop
popf
jo
dec
mov
addr16
mov
cmp
and
dec
mov
sbb
jnp
dec
xchg
out
xchg
mov
pop
xor
fld
fdivl
sub
jg
xor
jmp
xchg
sub
add
dec
dec
or
gs
xchg
adc
adc
imul
gs
outsb
imul
pop
mov
xchg
sub
inc
jle
dec
aaa
push
scas
fs
fsubrs
mov
mov
push
push
lret
enter
add
int
mov
icebp
ss
popa
and
pop
inc
pop
push
nop
sub
cmp
fldcw
mov
xor
dec
mov
mov
mov
sub
outsb
jno
std
cwtl
fldenv
xchg
push
loope
mov
pusha
iret
insl
push
sbb
pushf
je
sbb
lods
cmc
add
test
cmp
push
pop
dec
fld
push
sub
hlt
pop
mov
jbe
mov
rcrb
sbb
jge
jl
adcl
push
and
loop
out
push
loopne
push
xlat
xlat
xchg
xlat
call
add
mov
pop
jb
lcall
pop
adc
jmp
inc
mov
push
inc
mov
push
leave
pushf
mov
xchg
mov
js
lcall
popa
sbb
push
inc
inc
mov
jne
xor
jmp
xchg
xchg
jge
inc
ljmp
or
test
loope
inc
aam
cmp
mov
enter
js
sbb
cmp
lcall
sub
dec
xor
sbb
push
cwtl
push
adc
cmp
mov
push
pop
test
inc
mov
addr16
cld
test
xchg
jl
lds
or
dec
pushf
dec
rcrb
jge
aam
je
sbb
pop
mov
insl
add
repz
or
mov
lret
jmp
mov
pop
lea
fwait
pop
mov
sub
std
mov
popa
mov
subl
dec
xchg
sub
xchg
fs
shr
xor
adc
push
push
out
loop
xchg
sarl
cmc
inc
inc
adc
jl
ljmp
mov
not
sub
mov
adc
mov
cltd
sub
mov
add
sub
jne
std
mulb
popf
xchg
test
and
repnz
fisubl
add
int3
jge
push
dec
iret
hlt
inc
je
mov
clc
jae
outsl
jnp
mov
lods
jmp
inc
add
fmull
cmp
mov
fwait
and
loopne
aad
lahf
outsb
dec
imull
test
mov
stc
or
frstor
in
push
xor
mov
pop
sub
call
mov
inc
mov
xchg
or
xchg
push
xchg
dec
movsb
sbb
mov
in
xchg
jge
enter
mov
test
jge
pop
in
inc
jle
out
jp
jnp
data16
inc
out
idivb
or
push
int3
filds
dec
adc
sbb
jp
inc
jns
add
cmp
xor
repz
lret
add
xchg
sub
mov
adc
mov
mov
pop
out
test
cmp
imul
dec
adc
jl,pn
ret
and
divb
cmpl
lea
dec
jecxz
xor
jge
rorl
shrl
fsubrp
ret
push
pop
shl
out
daa
sbb
sub
mov
shrl
adc
pop
xchg
inc
setp
mov
cltd
movsl
push
popa
add
or
imul
in
sub
aad
or
add
mov
xor
sub
jl
jl
push
push
repz
and
add
vpunpcklqdq
dec
mov
xchg
fwait
jmp
js
aam
lret
fldt
in
sub
insl
das
pop
add
in
fsts
mov
in
xchg
jno
es
sbb
movsb
cmp
rol
das
sti
ret
nop
insb
xchg
jmp
in
ljmp
xchg
pop
lret
jp
jge
pop
repz
int3
and
push
out
cmpl
pop
pop
push
call
or
and
ja
pcmpgtb
add
or
adc
push
xchg
mov
scas
xor
outsb
scas
and
xor
adc
mov
cwtl
mov
cmp
cmp
popf
enter
je
dec
mov
test
popa
aam
jg
dec
sti
xor
insl
push
jmp
lahf
fiadds
inc
push
adc
gs
sbb
int
push
pop
arpl
mov
inc
loop
out
lds
jbe
push
sbb
insb
cwtl
and
lahf
aad
sbb
lods
add
pop
push
gs
xchg
pop
ss
jbe
clc
jmp
js
test
pop
pop
push
aam
sti
mov
sub
add
dec
mov
fidivs
mov
pop
mov
and
mov
ss
pop
pop
imul
jp
sub
int3
and
xchg
mov
mov
cmp
data16
mov
imul
ret
sbb
cmp
test
mov
mov
out
inc
out
in
enter
jne
xchg
inc
sbb
mov
in
jb
mov
jns
call
mov
jp
sub
pop
imul
jne
scas
repz
push
add
adc
scas
hlt
arpl
pusha
insl
xchg
push
xchg
lea
movsl
dec
mov
sarl
aas
adc
test
pop
mov
push
mov
mov
dec
cmp
arpl
sahf
adc
cmp
clc
push
fstl
xor
std
int3
sub
sub
orb
cmpsl
sbb
xchg
popf
shr
les
fnsave
shl
jge
adc
movsl
jb
cmc
mov
adc
or
lret
test
daa
fldl
mov
int
and
enter
jb
xor
pop
roll
fstpt
shr
xchg
idiv
cmp
add
fdivrs
xchg
mov
cmp
lahf
scas
inc
leave
or
stc
and
fisubs
stos
mov
arpl
lea
and
pop
cwtl
xor
or
dec
lahf
js
and
inc
push
scas
repz
inc
rorl
addr16
push
mov
adc
lods
sub
mov
test
push
into
lret
dec
push
mov
jmp
sbb
inc
adc
or
orl
or
or
push
mov
clc
mov
jo
rcrb
test
mov
push
or
das
adc
dec
jnp
xor
xor
add
inc
clc
mov
sti
and
stos
hlt
mov
jle
bswap
sbb
gs
movsb
mov
mov
shll
adc
jo
jge
sub
mov
mov
out
cmc
sbbl
in
leave
sbb
pusha
push
xchg
sarb
dec
incb
scas
movsb
push
jle
loop
aad
enter
fistpl
mov
fnstsw
shlb
rclb
jecxz
lock
mov
fldt
pop
fs
sub
mov
jp
fsub
push
push
sbb
jno
cmp
push
mov
cmp
sub
ds
std
out
and
lret
mov
jl
inc
rcrb
mov
mov
test
dec
xor
mov
xchg
sbb
inc
xchg
xor
mov
dec
sub
cmpsb
jne
xor
jns
movsb
dec
sub
sub
das
out
scas
xchg
dec
movsl
xor
jge
xchg
loope
mov
jle
dec
cmc
sbb
cli
popa
mov
mov
pop
and
les
js
and
push
push
push
jle
lock
mov
loopne
dec
shlb
jns
sahf
loop
stos
sahf
iret
fdivs
out
sub
fldenv
pop
fmuls
addb
xlat
movsl
fmuls
inc
call
popa
ret
push
lods
daa
stc
xor
inc
int3
cwtl
cmp
cmp
mov
xor
repnz
sbb
jbe
jae
outsb
sbb
rcll
push
leave
xchg
in
stos
xchg
aad
push
xor
jge
push
add
add
pop
decb
jno
bnd
in
nop
add
ljmp
imul
fldl
mov
jae
mov
out
jge
mov
and
push
shrb
nop
or
inc
jle
fcoml
dec
and
mov
jbe
jmp
sarb
xor
push
mov
inc
mov
fisubs
sti
inc
imul
shrl
add
cltd
or
xlat
test
pop
call
pop
sub
addr16
outsb
ljmp
pop
add
pop
jmp
lret
imul
cmp
aad
add
loop
mov
or
call
hlt
pusha
jnp
push
clc
push
xor
add
pop
mov
and
inc
clc
push
add
jae
cmp
shrb
or
es
jno
pop
mov
test
jge
in
shlb
sbb
add
mov
cli
or
inc
mov
andl
mov
and
fisttps
inc
dec
pop
es
dec
pop
jo
pop
adc
mov
adc
inc
mov
push
adc
cltd
mov
jmp
push
cltd
mov
xchg
dec
push
mov
aaa
popa
aaa
icebp
adc
clc
icebp
popa
adc
stos
sub
rorl
mov
fiaddl
nop
cld
add
xor
inc
movsl
scas
sbb
lods
cmpsb
mov
cmp
fld
js
popa
aas
andb
mov
mov
loopne
dec
xor
lds
sbb
es
stos
outsb
mov
mov
or
lret
inc
lahf
fsubrl
xor
in
push
inc
pop
xchg
xchg
or
mov
xor
sub
push
push
lods
jb
and
fwait
jbe
inc
add
xor
add
push
or
dec
sti
rcll
insb
mov
xchg
push
mov
mov
push
mov
push
adc
push
mov
fs
pusha
lret
mov
push
pushf
push
dec
movsl
cmp
dec
out
lcall
and
adcb
adc
inc
sti
and
enter
inc
xor
sub
nop
les
sbb
cmp
adc
leave
lcall
outsl
popf
sub
sub
jge
push
nop
pop
mov
popa
stos
or
cmpsb
leave
jmp
xchg
inc
sub
fldenv
das
fdivrl
icebp
stos
out
dec
stos
xor
repz
outsb
adc
mov
mov
xor
adc
fsubrl
sbb
shll
dec
into
jge
sbb
add
stc
xorb
sbb
mov
fucom
fs
popf
cld
jae
js
push
stc
test
mov
pop
in
jmp
loope
int
sub
xchg
lds
jmp
inc
scas
fs
or
sbb
shll
sbb
mov
lods
bnd
stc
dec
loopne
repnz
imul
xor
insb
lret
test
test
test
mov
call
mov
inc
adc
adc
push
push
test
arpl
sbb
xchg
decb
stc
cli
ror
and
xchg
cmc
or
nop
fwait
and
fldenv
int3
add
xlat
ss
xchg
sbb
ror
int
sti
add
inc
add
inc
sbb
sub
lock
jnp
ss
inc
adc
inc
in
in
lock
jno
and
rclb
outsb
or
dec
adc
adc
mov
sbb
xchg
mov
fstpt
and
ljmp
cwtl
pop
daa
lods
mov
push
rolb
sub
sti
repnz
aam
leave
inc
cld
test
cmc
imul
cmp
inc
or
fidivs
xlat
in
pop
js
push
push
sti
rcrb
push
push
fwait
es
insb
mov
add
mov
jmp
dec
je
mov
fistps
mov
jp
xor
push
cmp
push
pop
mov
mulps
jg
add
mov
mov
push
lods
and
push
daa
cmp
insl
imul
cld
push
jmp
scas
xchg
ret
pop
dec
insl
popa
mov
lret
add
mov
out
add
out
jmp
xchg
pop
xchg
xchg
jg
push
add
ret
jmp
subb
or
cmp
out
insl
sub
int
mov
push
add
or
movsl
lahf
aad
je
jae
mov
pop
test
inc
inc
fwait
lahf
dec
push
movsl
sbb
into
pusha
insl
push
ds
or
and
mov
push
orb
negl
loopne
in
inc
fwait
cmpsb
pop
idiv
iret
loop
cltd
or
js
and
popf
sbb
or
mov
call
mov
test
lods
mov
dec
insl
xor
lea
shlb
add
pop
mov
push
bsf
addb
dec
lcall
push
pop
sub
xchg
int3
jge
mov
mov
cmp
in
inc
fdivrl
inc
popf
cli
dec
cmp
xlat
mov
cld
insl
lcall
mov
daa
loope
fcmovb
mov
fs
js
jge
or
fldenv
sbb
and
popf
or
mov
fidivl
jp
xor
sbb
sbb
push
std
push
fnstsw
das
inc
push
push
fs
decb
mov
hlt
pusha
lret
xor
repnz
sub
out
mov
and
in
fdivl
out
std
mov
cmp
outsl
call
lret
in
mov
and
xchg
xor
mov
insl
aaa
xchg
call
sub
cli
loop
inc
xchg
inc
clc
mov
mov
or
test
jbe
mov
popa
movsl
pop
push
sbb
out
in
addr16
fidivrs
outsb
inc
inc
cmp
mov
mov
mov
lods
js
sub
mov
outsl
pop
xchg
arpl
inc
fnop
imul
fsts
mov
movl
dec
jne
aam
or
xor
icebp
loope
add
mov
cmp
imul
gs
inc
movsb
pop
xchg
in
scas
test
nop
into
aaa
mov
xlat
cld
popa
pop
into
push
inc
xchg
jg
pop
mov
pop
mov
js
jnp
fs
fisttpll
sub
mov
mov
inc
xchg
mov
jbe
inc
and
jg
fstp
in
ja
sbb
or
outsb
lods
xchg
pop
xorb
pusha
push
add
je
in
jmp
frstor
mov
inc
xchg
or
out
or
movsl
push
xchg
repnz
add
pusha
addr16
mov
cmp
rcrb
into
jmp
mov
cmpsb
adc
mov
xchg
push
outsl
cmp
cmpsb
inc
push
dec
cmp
xchg
leave
push
jl
mov
cmp
test
pop
jb
in
imul
and
mov
jmp
jae
fisttps
and
ja
jmp
mov
inc
ja
hlt
fs
mov
lcall
out
cmpsl
cmp
icebp
push
shlb
sbb
xor
mov
movsl
push
ret
mov
push
and
ja
mov
mov
repz
je
jno
jecxz
mov
sub
mov
lods
inc
jg
push
sbb
and
dec
repnz
shrl
in
arpl
xor
cli
pop
out
or
adcl
in
push
ret
sarl
xor
dec
scas
xor
iret
into
shlb
mov
xchg
xlat
jecxz
cmp
mov
call
jne
push
aaa
add
dec
or
test
sti
adc
sbb
call
sti
mov
jnp
insl
xchg
push
or
xchg
push
arpl
sbb
mov
fidivl
cltd
insb
scas
pop
or
mov
inc
push
je
cmp
fcompl
dec
mov
sub
loope
adc
lahf
adc
test
mov
push
popa
cmp
mov
jmp
and
inc
adcl
aam
inc
add
sarl
adc
dec
sub
rcrb
incb
xor
scas
xchg
cltd
loope
dec
adc
inc
mov
fstpt
je
sub
out
push
jecxz
sti
scas
xor
xor
repnz
rorb
loop
in
push
cmp
js
sar
inc
pop
pop
scas
cld
repz
mov
sub
xchg
and
push
inc
cld
data16
xlat
fadds
xor
repz
jl
aas
sub
push
outsb
data16
jo
js
and
lods
mov
dec
insl
cmp
jb
fs
icebp
xor
pop
adc
clc
add
movsl
das
loope
fwait
cwtl
inc
push
mov
mov
inc
imul
orl
mov
mov
fbstp
shl
scas
fmulp
xor
push
push
xor
inc
push
push
stos
jmp
dec
inc
inc
xor
cwtl
mov
imul
add
ja
xchg
mov
loop
sub
push
ja
and
shrb
or
loope
sti
popf
out
jae
sub
push
shll
iret
push
fmul
movmskps
test
jg
jp
lahf
test
jecxz
sbb
lds
les
daa
adc
add
fistps
push
mov
hlt
fnstcw
jecxz
dec
insl
mov
mov
fxch
or
leave
add
push
rorb
cwtl
mov
clc
shlb
rorb
jg
leave
xchg
adc
inc
mov
xor
add
in
mov
and
jno
gs
xchg
and
sub
adc
js
std
push
adc
js
in
push
cs
sbb
addb
sub
lret
xor
into
mov
cmp
or
jecxz
push
xchg
cltd
jg
pop
xor
push
je
insb
ret
pop
and
or
mov
add
testl
fisubs
movsb
hlt
jle
mov
mov
add
flds
pushf
xchg
sub
mov
andb
bound
sbb
ljmp
push
xchg
stc
call
or
shlb
mov
mov
scas
mov
shlb
loopne
in
xchg
sbb
pop
mov
ljmp
aaa
dec
and
icebp
lods
xchg
out
lds
es
xor
inc
xchg
jne
mov
sarb
dec
mov
outsb
sub
fisubs
pop
mov
add
inc
xchg
lods
ja
inc
and
adc
lahf
mov
jecxz
loope
cmp
xchg
aad
xchg
jbe
mov
pusha
inc
jb
add
shl
xor
divl
cmp
shll
in
mov
mov
add
shl
cmp
pusha
cmp
xor
or
cld
mov
loop
jns
add
loop
clc
add
cmp
addr16
pop
jo
addr16
sbb
lcall
cmp
fadd
xor
add
xor
mov
bound
rcrb
jbe
decl
and
sub
es
dec
pop
mov
inc
mov
dec
rcll
mov
in
push
cs
pop
fldt
xor
ss
xchg
push
lds
push
shll
in
dec
adc
and
jno
add
imul
stos
test
mov
and
adc
loop
ret
sarl
insl
fwait
dec
mov
outsl
pop
lds
or
mov
and
fiaddl
shrl
jbe
push
xor
das
fnstsw
int
in
test
jl
ficomps
cmp
jecxz
aam
mov
dec
fbld
sub
clc
and
pop
or
jmp
ds
subl
pop
test
lahf
sbb
scas
and
sub
insb
out
sarb
stc
adc
mov
aad
push
and
inc
sub
pop
inc
notl
cs
roll
sbbl
sbb
sahf
adc
fistl
clc
pop
in
or
divl
scas
jmp
ds
fwait
loop
xchg
xchg
int3
scas
jb
push
imulb
push
and
xchg
notl
stos
add
mov
cwtl
hlt
push
cmc
jno
or
or
fdivl
aam
je
dec
jl
adc
dec
sub
mov
xchg
mov
fdivrs
and
or
mov
mov
mov
jae
and
loope
push
sbb
pushf
std
cmp
aas
and
out
cmc
sub
stos
cltd
mov
mov
dec
pop
mov
mov
aas
jb
cmp
xor
mov
mov
movsb
lret
mov
jae
cmp
or
repz
xchg
pushf
xor
cwtl
addr16
inc
rolb
and
lods
loope
flds
dec
cmp
mov
mov
adc
aaa
addr16
subb
pop
sbb
popl
rcll
lret
imul
mov
lods
add
add
pop
test
xlat
jmp
outsb
ret
push
add
push
out
pop
pop
push
jo
jmp
push
mov
mov
pop
and
cmp
mov
cmp
imull
popf
nop
into
fildl
mov
xchg
mov
into
jae
sahf
mov
call
test
cwtl
dec
dec
jmp
jp
or
dec
rcll
fldl
xchg
sbb
hlt
dec
loop
popa
sub
fldt
jno
je
and
push
jl
sub
dec
inc
push
mov
sbb
or
ret
jge
scas
mov
daa
mov
pop
xchg
inc
mov
dec
popa
xor
jmp
lock
jb
sub
je
or
pushf
sbb
call
movsb
test
inc
in
or
or
outsb
fwait
sarl
or
push
add
ljmp
nop
add
mov
xorb
outsl
lcall
mov
sbb
jbe
pop
push
mov
sub
leave
mov
out
pop
mov
pop
push
jno
fwait
lcall
std
and
pop
pop
add
mov
push
sbb
movsl
imul
hlt
mov
stos
int3
mov
push
in
jbe
out
dec
xchg
popa
dec
dec
imul
stc
or
insl
xor
mov
cmp
cmpsb
jl
or
lds
inc
test
lret
inc
and
pop
insb
insl
jne
jns
rorb
repnz
jne
jecxz
and
hlt
ljmp
ficompl
orb
jb
test
xchg
imul
es
arpl
sbb
enter
mov
outsl
loopne
xor
rorb
cmp
lea
popa
std
scas
push
mov
insl
xchg
mov
add
and
insb
aad
int3
rorl
shll
pop
adc
jmp
hlt
std
xchg
mov
mov
mov
ljmp
xlat
sub
hlt
leave
and
cmpsl
pop
mov
xchg
push
fcmovbe
pop
jge
ds
push
pop
push
mov
addb
xchg
and
loope
movsb
enter
sbb
cwtl
addr16
xchg
pushl
cmp
popf
mov
pop
sub
fimuls
adc
push
jp
sbb
push
ret
fdivrp
cwtl
pop
sbb
fwait
js
scas
fbld
cmp
loop
mov
out
add
add
outsb
clc
fists
jmp
out
inc
int
out
push
movsb
mov
jge
mov
lock
call
icebp
mov
xor
lock
push
mov
mov
pop
lods
imul
inc
outsl
fnsave
jae
bound
in
dec
inc
push
rorb
les
jne
push
xor
sarl
lahf
xchg
stc
push
dec
fcom
xlat
mov
data16
loope
sub
in
or
sbb
and
xor
mov
gs
gs
mov
pop
ss
scas
pop
pushf
xchg
addr16
lea
pop
rorl
call
add
sahf
gs
leave
cld
add
sbb
pop
xchg
test
xchg
fwait
nop
push
stos
pop
jae
sbb
adc
pusha
lods
js
dec
ljmp
push
in
sbb
or
add
ja
mov
xchg
in
sub
mov
sarl
push
cli
negb
mov
sub
sbbl
push
stc
mov
in
or
sub
ret
jae
dec
jle
push
dec
lds
xchg
imul
push
cli
in
rcrb
pop
sbb
clc
xor
fsubr
aas
xchg
call
cwtl
stc
jmp
add
inc
loop
lea
inc
gs
fwait
out
sbb
sub
loop
int3
fisubl
mov
jo
and
cmp
test
lcall
shll
cmp
fcmovne
mov
mov
jbe
push
rolb
mov
sbb
loop
adc
mov
sub
mov
andl
dec
movd
mov
xchg
push
sarb
xor
nop
adc
leave
out
dec
in
adc
sahf
mov
xlat
into
and
mov
mov
cmp
jnp
popa
push
jle
lock
mov
mov
adc
jns
mov
jno
inc
bound
push
or
outsl
cmp
sahf
mov
inc
pop
das
jno
popf
mov
xor
iret
cmc
testb
pop
mov
ja
scas
ret
jae
push
stos
push
sub
add
ljmp
adc
loop
test
stc
xchg
out
lret
and
add
add
or
pop
mov
pop
or
call
lods
sub
out
subl
push
pop
outsb
push
fistl
std
sub
mov
mov
outsl
cmpsl
mov
lahf
lcall
dec
cmp
or
in
dec
add
adc
imul
adc
sbb
ss
addr16
and
stc
xchg
mov
icebp
repnz
scas
add
push
mov
iret
sbb
pop
cltd
mov
in
and
es
lods
mov
sbb
or
cmpl
jno
faddl
out
sbb
aas
cmp
rolb
pop
daa
lods
test
add
or
add
xor
nop
addr16
push
jmp
cmc
sbbb
ret
ja
jmp
fcompl
fidivs
adc
imul
cmp
xchg
fldl
fcomip
sbb
dec
pop
ret
stos
xchg
cmpb
add
dec
test
gs
cmovs
or
mov
push
cmp
je
test
mov
insl
cltd
arpl
xor
imul
scas
xor
ljmp
jae
std
and
arpl
call
dec
lret
mov
xchg
push
dec
fdiv
out
adc
or
xchg
mov
cmp
lcall
jne
js
and
jbe
push
lret
add
cmp
xchg
jo
or
les
jns
popa
mov
enter
sahf
add
xor
xchg
testb
pop
out
call
in
or
inc
pusha
pop
sub
mov
into
enter
sbb
icebp
lds
xchg
repz
and
mov
imul
sub
add
shrl
ja
mov
cmp
cltd
pop
mov
and
push
fsubr
jp
mov
mov
fsubl
cs
inc
add
fnstcw
jg,pn
pushf
inc
push
xor
push
test
cld
rclb
enter
mov
out
int
mov
push
loop
jae
daa
sub
add
ja
push
push
or
adc
adc
xor
stos
inc
xor
hlt
mov
push
push
dec
mov
fldpi
sub
adc
ret
cmp
fcompl
popa
jno
xor
and
test
sub
enter
daa
xor
cmpsb
hlt
insl
push
in
cmpsb
or
les
or
inc
nop
inc
pop
sbb
sub
sub
jae
movsb
xor
cmc
stos
push
repnz
aaa
gs
fwait
je
mov
aad
rorl
inc
bnd
fnstenv
sarl
mov
sbb
add
jmp
cmp
sub
or
pop
rcrl
insb
add
out
int
scas
lds
or
and
push
clc
stos
test
in
mov
dec
les
in
mov
mov
inc
xor
or
sarb
mov
stos
jge
pop
insl
adc
add
ficomps
repnz
sub
and
and
insb
sarl
lahf
pop
std
out
loop
test
sub
lods
pop
ss
out
aad
mov
jg
bnd
xchg
fmuls
insl
pop
aas
shll
xlat
cmpsb
sahf
xchg
mov
lea
fidivrl
jg
push
out
push
ja
das
inc
jnp
shl
mov
jnp,pt
jge
ds
jge
cmp
aaa
stc
test
sub
ss
sub
out
mov
sbbl
adc
mov
xchg
arpl
pop
outsb
sbb
in
xor
rolb
xchg
out
bound
sti
fucomp
push
lcall
faddp
repz
popa
dec
mov
xor
rcl
loop
jge
lock
cmpsl
xchg
or
test
sti
cmpsl
aam
ret
jbe
roll
sub
inc
dec
sbb
bound
scas
xorb
add
sub
ljmp
inc
mov
fmull
pop
xor
sbb
cmp
or
stos
and
sub
xor
stos
and
mov
xchg
adc
or
or
pop
ja
sbb
dec
mov
lahf
push
fisubrl
dec
add
xchg
pop
decl
push
shll
std
lahf
xchg
sbb
and
mov
std
pop
mov
mov
jg
push
leave
push
push
fisubl
and
mov
xor
nop
jbe
call
jno
sti
sbb
mov
jmp
inc
rolb
clc
jns
lahf
les
test
mov
fs
xor
xor
ljmp
clc
push
les
popf
lods
inc
cwtl
cmp
xchg
jg
or
and
sahf
inc
fmul
not
aad
add
aaa
push
gs
jmp
mov
stc
loop
ss
mov
movsb
mov
cmp
dec
fimull
in
es
nop
movsl
sti
arpl
pop
and
jnp
icebp
cld
mov
and
mov
or
push
add
lock
insl
push
orb
mov
jbe
ljmp
xchg
xor
mov
stos
lahf
pusha
mov
and
jl
xchg
data16
popa
sub
movsb
or
pop
in
cld
mov
or
aad
mov
test
sub
movsl
push
xchg
mov
fisubrs
mov
push
pop
pusha
jnp
aad
and
daa
les
sti
push
add
add
int3
ja
pusha
fnsave
repz
push
imul
jp
sbb
out
std
or
inc
adc
mov
mov
pushf
push
scas
dec
or
sbb
scas
dec
cmp
push
enter
fcmovbe
push
aaa
nop
cmp
ds
movsl
decb
xchg
call
aam
daa
mov
xor
mov
iret
fsubr
sbb
mov
cmovg
xchg
mov
mov
push
in
outsb
jne
mov
jle
adc
dec
adc
out
sbb
clc
sbb
adc
aam
out
into
pop
icebp
dec
sub
jg
out
insl
rol
pop
stos
addr16
inc
jmp
hlt
push
popf
mov
lock
xchg
mov
mov
sbb
xchg
inc
jle,pt
inc
int
popa
rorl
jle
nop
es
fwait
xchg
iret
fstpt
xchg
je
iret
sti
push
aad
or
mov
ffreep
dec
hlt
mov
mov
pop
adc
ljmp
inc
dec
std
dec
xor
test
adc
outsb
pop
mov
int
or
and
mov
lods
push
arpl
outsl
sub
mov
loop
pop
push
xor
xor
ja
mov
insl
int
cmp
sub
and
push
push
xchg
imul
and
andl
sarl
ret
mov
mov
popa
sub
inc
cmp
aas
mov
test
inc
pop
out
rorl
mov
push
std
insb
je
repnz
xor
sub
sahf
lcall
sbb
mov
xchg
pushw
and
or
mov
pop
mov
mov
mov
arpl
cmp
pusha
adc
lret
test
jno
loop
add
mov
add
mov
test
mov
inc
sti
push
call
mov
or
fnstenv
mov
les
jmp
push
xor
push
pop
mov
push
cmpb
ret
sti
mov
fisubl
cwtl
gs
in
xor
ds
or
ja
mov
dec
lea
ljmp
sub
sbb
es
mov
std
lods
inc
mov
stos
mov
sbb
out
dec
push
sub
stos
jle
sti
or
clc
xchg
xor
gs
push
push
or
dec
aas
jns
shrb
in
xorb
push
scas
pop
stos
cltd
pop
out
das
and
push
leave
stos
test
fs
iret
jge
sub
or
ds
cmc
xchg
out
popa
movsb
andl
sub
push
mov
dec
push
or
lods
popf
or
pop
js
loopne
mov
lods
mov
das
and
pop
push
cmp
imul
push
pusha
mov
divl
mov
mov
mov
lock
rcl
out
js
dec
xchg
cltd
mov
inc
insb
popf
mov
xor
sarl
ja
or
add
cmp
xlat
sub
adc
or
sbb
mov
lahf
mov
cld
nop
hlt
xchg
pop
sbb
jbe
dec
das
mov
sbb
into
or
mov
arpl
sub
mov
xor
sub
adc
mov
jmp
arpl
lret
cmp
xor
es
adc
inc
sti
popf
std
arpl
jmp
jbe
into
iret
mov
popa
inc
sbb
push
scas
gs
mov
sub
fstpt
sarb
loop
stos
subb
rcrl
xor
mov
repz
jcxz
cmp
add
in
jmp
or
fdivrp
jbe
adc
mov
mov
jmp
pop
push
mov
add
adc
xchg
dec
pop
cmp
addr16
out
mov
jno
jecxz
adc
cmc
mov
dec
and
add
and
lods
fisubs
push
jno
pop
pop
sub
push
add
mov
roll
adc
push
in
sub
pusha
jno
in
xchg
xor
test
pop
lahf
push
fcmovbe
push
shr
mov
popa
imul
std
lods
fnstcw
in
scas
xlat
testl
xor
dec
cmp
sahf
loopne
dec
mov
jle
mov
add
mov
mov
cmp
inc
jmp
out
inc
inc
push
sbb
es
jo
fstl
cmpsb
mov
adc
sub
dec
add
loop
shll
sub
sub
fmuls
lods
sbb
jo
test
out
cmp
xor
pop
push
iret
xor
or
mov
andb
leave
jmp
popf
hlt
add
sbb
js
pop
mov
xchg
adc
rcrb
dec
hlt
mov
pusha
push
paddq
xor
ret
popa
shrb
insl
das
jle
ja
pop
je
or
popf
lret
sub
lods
out
into
ljmp
ficompl
dec
adc
out
fwait
adc
out
push
adc
outsl
ja
pop
pop
lcall
xchg
push
mov
lcall
enter
hlt
mov
jp
xor
jmp
lahf
jmp
sti
mov
xchg
sbb
mov
addr16
add
inc
les
inc
aam
xor
call
jl
cmp
adc
push
mov
mov
ja
addl
xchg
xor
lahf
mov
fsubs
push
mov
mov
shlb
leave
popf
push
xchg
add
cmp
push
jp
xchg
out
or
adc
addr16
pop
push
pushf
push
in
sbb
jg
fdivs
lods
in
in
push
pop
inc
mov
orl
data16
pusha
andl
imul
sub
test
cmp
mov
fldl
and
lds
jbe
int3
bound
popa
arpl
lea
dec
aad
out
push
or
cmp
lahf
rclb
mov
rcll
xor
sbb
in
jp
push
std
cmp
mov
pop
mov
loope
push
mov
pop
sub
mov
push
push
ret
in
fimuls
iret
sbb
mov
hlt
push
sub
push
mov
sbb
in
inc
aaa
xchg
dec
mov
rcrb
popa
incb
or
cmpsl
and
lahf
loop
fs
ds
adc
sub
adc
call
inc
and
loop
and
push
popa
sub
cmp
pop
dec
xchg
push
jno
adc
xchg
and
mov
test
xchg
xchg
hlt
test
outsb
outsb
fistpl
jmp
add
add
rol
dec
mov
sti
mov
xor
fstpl
mov
mov
mov
jae
or
xchg
mov
in
pushf
jno
add
sbb
call
add
je
jae
fnsave
and
mov
cmp
mov
popf
and
mov
mov
jl
jb
xor
xchg
or
lock
pop
cmc
out
loopne
into
outsb
pushf
adc
inc
sub
mov
mov
dec
iret
adc
shlb
sub
or
inc
sub
das
movsl
out
sub
xor
loop
mov
rcr
mov
or
stos
cli
xbegin
pop
int3
push
inc
loope
mov
repnz
push
ljmp
xor
outsb
in
xchg
push
inc
mov
mov
icebp
cmp
dec
in
js
das
lods
dec
mov
insb
out
popf
popa
out
pop
fstps
push
int
daa
movsb
out
arpl
insb
out
sbb
pop
jae
stc
cmc
jmp
leave
sahf
repz
in
jg
pop
add
in
imul
ja
mov
lods
xor
dec
fcmove
mov
ficomps
mov
aaa
xor
sub
idiv
out
cmp
jg
clc
cvtdq2ps
jae
jmp
inc
add
rcr
test
incl
lods
das
ret
stc
clc
cld
jns
lcall
inc
ljmp
mov
pop
jmp
test
mov
mov
push
aam
loope
jecxz
jns
or
xchg
mov
pushf
outsb
mov
inc
or
mov
call
pop
movsl
add
adcl
xchg
outsb
add
mov
cmc
test
test
and
lock
push
stos
loop
xchg
mov
adc
xchg
mov
sub
xchg
xor
cld
outsb
shll
testb
xor
or
sahf
or
pop
xchg
sahf
cmpl
mov
jecxz
cmp
ss
sub
push
ljmp
mov
sbb
and
push
enter
sbb
and
pop
pop
xchg
cmp
push
aaa
mov
insb
sub
jecxz
mov
lahf
mov
jbe
or
cld
jle
es
mov
xchg
aas
add
mov
pop
mov
inc
jns
mov
sbb
jmp
testl
mov
inc
lods
mov
fstps
add
outsb
cmpsl
insl
stos
and
std
lret
jg
xor
push
repz
add
shr
fsubs
popf
pop
imul
xor
clc
cmp
mov
dec
imul
fildll
das
je
lods
sbbb
pop
aad
add
jle
out
jmp
test
mov
fcmovb
push
xchg
sbb
lret
or
adc
das
mov
mov
shrl
cmp
sub
ja
and
mov
aaa
mov
mov
sbb
arpl
repnz
inc
sbb
ret
test
popa
mov
test
shl
cmpsb
pushf
jl
cld
cmp
lods
pop
fwait
or
sub
das
and
sahf
in
int3
hlt
movsb
hlt
adc
out
and
pushf
add
ret
cmp
popf
fnstcw
push
xchg
dec
sub
adc
push
sbb
push
adc
rcr
jge
sar
int
or
data16
sti
fwait
or
mov
in
scas
and
ss
faddl
jbe
mov
jnp
add
and
xorb
or
daa
mov
idivl
fst
push
adc
lea
inc
cmpb
or
jl
and
icebp
mov
xchg
jae
jae
adc
xchg
adc
adc
sbb
and
fstpl
mov
nop
ret
xchg
ljmp
in
je
test
int
xor
xchg
dec
pmaxub
push
xchg
add
out
add
dec
inc
aaa
sub
ja
hlt
jns
xor
in
lods
fimull
movsb
fsts
inc
lcall
mov
ret
mov
xchg
mov
inc
mov
icebp
inc
pop
ja
jns
jae
add
mov
push
ret
in
arpl
stc
stos
ja
add
cmc
popf
shrb
push
push
cmp
mov
push
adc
pushl
fmull
sub
pop
pop
jo
loopne
adc
in
lds
sbb
int3
in
stos
aam
rclb
movsb
pop
movaps
mov
xor
jne
rclb
mov
cmp
dec
int3
daa
cmp
cmp
rclb
xor
inc
cmp
insl
ljmp
cmc
cmp
and
gs
push
call
lods
push
jno
fstl
and
cmp
push
sbb
cltd
or
gs
in
ja
aaa
pop
call
mov
mov
xchg
shrb
pop
mov
mov
test
mov
pop
lods
xchg
mov
test
shr
popa
sub
cmpsl
add
or
xchg
mov
lahf
bound
inc
inc
adcb
jb
icebp
int
or
sti
cmp
icebp
rorl
cmpsl
push
push
adc
fwait
mov
shll
and
push
pop
dec
mov
dec
in
or
mov
repz
mov
push
mov
sahf
sbb
push
lea
mov
shlb
xchg
insb
mov
mov
or
add
scas
cmp
dec
pop
pop
aad
ret
fisubl
ror
xchg
neg
pop
loopne
mov
push
sbb
adc
movb
ds
insl
ss
and
add
and
jg
and
mov
cmpsl
push
scas
jne
mov
mov
aaa
push
pop
lods
andb
inc
cwtl
pushf
push
arpl
push
sub
cmp
adc
jbe
out
imul
jmp
pop
stc
xchg
and
push
mul
fsubrs
push
rcll
lds
into
push
xchg
xchg
cli
ja
movsb
mov
out
inc
stos
or
nop
mov
pop
shlb
movsb
push
aaa
push
sub
cmp
data16
mov
pop
push
rorl
xchg
inc
divl
rclb
test
aam
popa
xchg
xlat
in
movsb
push
aaa
ds
jb
push
outsl
stos
mov
pop
pop
pushaw
push
cmp
xor
in
xchg
out
mov
pop
imul
bound
mov
test
lds
cmp
pop
mov
daa
jb
mov
sbb
data16
stos
enter
stos
cld
pop
in
notb
jle,pt
int
lahf
sbb
stos
push
and
mov
repnz
adc
lcall
xor
rcr
sub
call
jl
ljmp
mov
lds
dec
sbb
lcall
ds
call
xor
inc
mov
push
sbb
mov
cltd
inc
test
ja
jo
sbb
inc
pop
repz
popa
daa
inc
adc
lods
imul
jmp
imul
inc
inc
call
jl
xlat
push
lock
outsl
or
int3
scas
sbb
rorb
adc
pushf
jecxz
in
sub
aam
push
loope
arpl
mov
shrb
push
or
sti
mov
or
std
push
or
insb
mov
push
not
pop
mov
gs
jge
lcall
jl
push
out
mov
mov
sbb
aam
dec
inc
leave
cmp
jae
mov
icebp
mov
or
add
out
aad
inc
mov
add
push
jb
cmp
insb
mov
cli
cli
jl
and
bnd
mov
lcall
ficoml
push
lods
sub
rclb
xchg
adc
xor
scas
ret
mov
in
cmc
inc
icebp
add
jno
xchg
mov
cmc
lds
jp
mov
cmpl
xor
xor
mov
cwtl
rolb
push
cs
out
sahf
addb
inc
outsb
sbb
cwtl
pop
jg
mov
sbb
dec
fists
movsl
and
cmp
mov
pushf
insl
insb
sarb
les
push
adc
sbb
sbb
test
out
je
pop
in
xchg
in
cmp
lcall
xor
cmp
pop
push
adc
adc
fs
xchg
sbb
xor
cmp
mov
lds
push
pop
mov
inc
mov
push
hlt
bound
mov
movsl
mov
jecxz
sub
stos
pop
sub
sbb
sbb
ds
addl
mov
je
fs
or
in
mov
test
adc
xchg
dec
xor
add
repz
test
sbb
inc
push
inc
add
pop
mov
mov
mov
and
je
pop
mov
das
lcall
mov
ss
pop
push
gs
fwait
sub
mov
pusha
push
add
push
pop
mov
dec
pop
push
sarl
dec
and
mov
dec
xchg
outsl
dec
xchg
int3
mov
cs
popf
mulb
test
xor
xlat
push
sbb
out
xor
jecxz
inc
mov
enter
cmp
scas
movsl
cmp
aaa
cmpl
ljmp
loop
xchg
pop
cld
adc
shl
arpl
pop
sub
mov
clc
pop
cmc
jp
mov
sahf
dec
adc
inc
mov
mov
push
dec
jb
push
add
pop
sbb
insb
jno
mov
int
pop
lods
test
sti
loopne
iret
xchg
sbb
xchg
cmc
outsl
or
sub
stos
mov
sti
inc
leave
push
mov
pop
add
add
cwtl
or
fs
enter
int3
dec
fs
leave
lcall
push
imul
mov
push
out
pop
arpl
xor
lods
call
and
iret
mov
add
sbb
mov
xchg
cwtl
push
leave
aad
mov
mov
and
imul
data16
cmp
add
fldl
std
imul
std
cmp
adc
test
out
neg
xor
ficoms
mov
jns
jg
insl
scas
adc
push
loopne
andl
lock
dec
jne
dec
aas
mov
or
cmp
push
decb
ret
sub
xor
outsb
dec
sbb
push
fldt
jb
pop
push
notl
inc
inc
ljmp
add
adc
test
shl
lock
stc
arpl
fdiv
hlt
arpl
in
or
xlat
adc
jle
jns
xchg
xchg
cmpsl
ficompl
mov
mov
jns
pop
xchg
in
int
cmp
cltd
cmp
rcll
fldl
es
and
mov
lcall
adcb
aas
bound
jge
fstl
pushf
nop
movsl
insl
out
fcoms
ds
push
int
stc
cmpsb
data16
js
mov
jmp
or
scas
popa
xchg
data16
roll
adc
inc
je
dec
inc
outsl
scas
outsb
fildl
sahf
jmp
ljmp
add
sar
sbb
sbb
mov
stos
fwait
scas
sar
arpl
and
xor
stos
imul
mov
daa
mov
and
sbb
sahf
xchg
mov
push
int
ljmp
push
or
pusha
mov
aam
stos
sub
les
stc
out
aam
shrb
fimull
add
sub
and
jbe
out
fwait
cli
loope
and
loopne
loopne
movsb
sbb
mov
or
xchg
pop
popa
jmp
xchg
insb
jmp
inc
cmp
rcr
push
mov
adc
adc
dec
jnp
jmp
mov
sbb
or
dec
out
jns
movsl
sbb
mov
push
dec
inc
outsl
pop
dec
leave
in
push
xor
divl
fbld
rcr
out
cmp
add
insl
dec
xchg
bnd
xchg
push
mov
or
push
mov
push
dec
xchg
fs
data16
cli
add
cmpsb
cmp
sbb
out
lret
das
jnp
cmp
mov
lods
imul
add
loope
and
xchg
push
popa
xor
aaa
push
data16
out
mov
and
mov
dec
cmp
ljmp
push
pusha
ss
jns
jge
jns
inc
sahf
xor
les
and
mov
mov
and
pusha
adc
push
xlat
pop
out
xchg
lahf
pop
jmp
mov
sbb
mov
ja
jns
stc
rcll
xorb
mov
or
inc
pop
out
rcrl
jbe
add
adc
test
adcl
adc
nop
pop
popa
inc
sub
cmp
jo
in
arpl
add
mov
mov
xor
xor
addr16
pop
shrl
sbb
jp
ss
in
mov
pop
sbb
xchg
add
aaa
mov
notb
bound
sahf
popa
cmp
addl
cld
inc
ret
fidivrl
dec
lods
enter
out
and
mov
sahf
xchg
and
cmp
sub
xor
mov
out
enter
inc
jge
jb
mov
adc
inc
push
jg
ja
bound
mov
jno
out
mov
mov
xor
adc
testl
jne
pop
das
shlb
mov
fisubrl
mov
outsb
sbb
adc
dec
fwait
sub
and
jp
out
int3
push
fwait
cld
xor
aam
sbb
sbb
lea
mov
shll
scas
movsb
pushf
jmp
add
cltd
mov
test
adc
jo
xchg
or
inc
ficompl
cmp
in
mov
xor
dec
scas
inc
flds
mov
mov
mov
ret
cmp
xchg
jmp
inc
mov
inc
test
lret
jl
jl
vunpcklps
add
sbb
shlb
push
sbb
test
leave
pop
enter
dec
iret
xchg
inc
ljmp
xor
pop
aam
lea
add
rolb
shlb
fbld
inc
mov
movsl
add
push
and
in
mov
dec
xlat
sbb
lds
jno
out
adc
dec
mov
lock
cli
adc
icebp
or
sbb
loopne
dec
push
movsl
xchg
inc
push
test
xor
sbb
subb
aam
adc
mov
adc
or
sub
mov
jle
sub
fwait
dec
sub
jl
push
mov
and
loop
cld
loope
sbb
adc
mov
adc
jno
adc
test
dec
int
or
mov
pop
cmpsb
leave
mull
mov
lods
insl
aas
fidivrs
mov
out
inc
in
mov
enter
loopne
shrb
icebp
mov
pop
sub
pushf
sahf
enter
shll
stos
insb
mov
clc
ret
jecxz
popf
rcrl
cwtl
inc
mov
lret
xchg
in
lock
mov
in
adc
sub
xor
mov
dec
adc
jbe
lret
arpl
sti
test
aaa
add
add
aad
push
pop
fldl
lods
sub
add
cmpsl
stc
sub
ds
sbb
or
fmuls
cwtl
cmpsb
and
adc
adc
and
movsb
cmc
fs
pop
adc
cmp
scas
pop
lods
pop
inc
mov
test
sub
push
xor
pop
dec
ss
pop
cmc
add
in
push
shll
aam
out
and
dec
outsb
sbb
jne
lcall
lret
adc
leave
jg
jg
inc
cmpsb
cmp
sbb
inc
dec
rorl
loopne
adc
mul
jb
lea
cmpsl
fnsave
sub
ja
dec
je
and
scas
cli
pop
and
std
in
cmp
sub
in
mov
out
jecxz
dec
leave
mov
adc
sub
rcr
aaa
mov
popf
cmp
fnsave
push
je
cwtl
out
dec
xchg
cmp
andl
loope
cmp
out
fwait
aam
jns
icebp
jne
sub
outsl
bound
cvttps2pi
mov
inc
or
xchg
mov
lahf
sub
jne
cmp
mov
lahf
adc
rol
dec
fcomip
out
daa
and
push
sub
lea
fnstenv
adc
aam
orl
sbb
mov
ds
ret
pop
cmp
repnz
xchg
jo
add
xlat
ret
mov
mov
popf
in
int3
mov
sub
test
mov
cs
xor
icebp
add
repnz
sbb
sub
and
or
adc
outsb
push
dec
int3
mov
in
inc
lods
rcl
fcoms
rcr
xchg
add
mov
mov
cmp
cmp
loopne
add
lahf
cli
insl
cmpsb
jnp
xchg
arpl
mov
add
js
insb
xchg
mov
or
imul
sbb
shll
or
xchg
insb
sbb
stos
test
mov
mov
sti
aad
stc
mov
mov
pop
mov
cmp
xlat
push
daa
outsl
mov
or
inc
or
js
jge
xchg
and
mov
and
inc
xchg
cltd
sbb
lods
dec
repnz
mov
add
lock
dec
dec
stc
pop
xchg
ss
decb
xor
sub
movsb
cmpsl
out
lret
inc
das
ret
jle
lods
icebp
jo
add
push
lds
insl
push
cmpsl
push
sbb
sub
es
pop
and
push
add
push
rcrb
push
sub
popa
dec
mov
in
push
mov
iret
in
push
mov
test
push
pusha
or
push
fdivrl
xor
scas
inc
int3
pushw
pusha
xchg
jns
movsb
in
jg
sbb
add
pop
sarb
jnp
cmp
popa
dec
pop
imul
jg
arpl
cmp
shlb
cmc
flds
and
dec
leave
xor
fiaddl
jno
scas
out
or
xchg
jp
cmp
cmp
cmp
dec
pop
cmp
xor
dec
out
out
orl
pop
in
es
pop
dec
hlt
add
in
aam
xchg
fbld
dec
jg
in
and
aas
jnp
add
jbe
icebp
jg
xchg
or
repnz
mov
jp
outsb
pop
fmul
pop
jmp
movsl
test
mov
gs
lcall
lods
mov
inc
fcoml
cwtl
mov
mov
xchg
sbb
test
mov
test
sbb
mov
fmull
cmc
mov
mov
sub
icebp
cmp
insl
sar
cwtl
int
sbb
mov
fmuls
xor
fsubrp
mov
xlat
ljmp
and
and
adc
leave
arpl
ljmp
cmp
and
mov
aad
aaa
pop
jge
call
or
inc
popa
xchg
xchg
lahf
dec
xchg
ja
cmp
add
sbb
dec
pop
daa
sub
dec
push
dec
addr16
sub
loope
ficomps
lods
xor
push
xlat
call
dec
dec
sbb
scas
out
jge
push
insb
lretw
sub
dec
sub
les
imul
push
xchg
push
jno
out
xlat
arpl
sub
loope
fldcw
int
mov
daa
cli
aaa
sbb
ffreep
mov
sub
cld
lds
dec
inc
fs
movsb
enter
jne
in
mov
pushf
cmp
icebp
test
test
pop
aaa
lahf
sar
sub
enter
lahf
leave
sbb
std
jle
enter
stos
test
xchg
out
loopne
lret
sbb
rol
adcb
cmp
ret
add
xchg
incl
jb
lock
mov
in
inc
lret
leave
sub
divb
xchg
add
shrb
xor
cmp
push
dec
xor
and
and
pusha
cmp
push
int3
xchg
mov
stos
addr16
in
out
cs
xchg
push
add
scas
lods
in
add
jns
lahf
fldenv
pusha
jg
jecxz
rcrb
jmp
mov
mov
mov
pop
dec
aad
scas
and
movsb
out
test
xchg
adc
test
xor
pop
int3
or
int3
and
scas
mov
outsl
pop
lahf
jne
bound
pop
fstl
mov
mov
adc
clc
or
jnp
pop
dec
push
jl
adc
mov
lds
mov
mov
ljmp
pop
lea
gs
loope
mov
xchg
adc
or
jae
popa
addr16
data16
or
iret
and
sbb
aas
in
fmull
addl
gs
add
daa
sub
cmp
in
sub
adc
xlat
subl
jmp
lea
rorb
mov
xor
jge
add
loopne
ljmp
xchg
test
and
mov
adc
ss
hlt
sub
lods
mov
repz
mov
leave
scas
sub
xchg
mov
jne
mov
sbb
and
mov
push
lret
arpl
fdivl
scas
cmp
arpl
add
mov
cs
pop
roll
roll
out
lcall
imul
sub
adc
push
leave
das
push
or
inc
jmp
sarl
test
test
mov
add
adc
push
cmc
mov
jo
mov
pop
xchg
or
add
inc
movsb
pop
loopne
pop
ds
scas
imulb
push
lahf
fisttpll
stos
ja
mov
les
inc
pushf
and
dec
jo
stos
test
ds
sub
lods
int
lods
mov
rorl
mov
ret
sbb
xchg
movsb
mov
mov
inc
pop
das
pop
in
adc
stos
add
mov
mov
xchg
test
dec
push
faddp
popa
jne
cmp
test
mov
inc
cmp
cltd
push
cld
mov
xchg
pop
sub
cli
shrl
insl
xchg
mov
jnp
fisubrs
mov
icebp
sbb
leave
fs
push
jbe
clc
xchg
and
nop
aam
gs
sbb
pop
cmp
pusha
cwtl
xchg
pusha
push
cmc
and
iret
inc
xlat
lods
aam
inc
xchg
out
add
xor
je
cmc
inc
xchg
ljmp
pop
dec
jne
mov
test
and
call
mov
xor
stc
xlat
mov
push
stos
dec
xchg
sbb
subl
xchg
push
sbb
push
mov
add
data16
aad
cmpsl
and
xchg
pop
lea
push
ret
pop
ja
xchg
int3
les
ficoms
jmp
fists
xor
mov
iret
push
fmuls
data16
hlt
inc
inc
mov
cmp
pop
cmc
sub
js
mov
mov
test
adc
cmpsb
test
mov
cld
mov
jbe
push
scas
aas
or
mov
gs
xor
outsb
jg
push
rorl
xor
rcr
cmp
xchg
test
hlt
lods
daa
je
insl
pop
jmp
rclb
scas
xchg
jmp
pop
jbe
xor
imul
lods
push
or
cmp
lods
push
sub
sbb
ds
clc
lods
sub
pop
cmp
xor
push
jle
test
mov
ss
push
sbb
jmp
pop
add
lcall
sbb
push
or
into
push
push
scas
pop
mov
push
cmp
imul
pop
mov
xchg
pop
test
ss
fs
aaa
dec
shlb
inc
jb
test
sub
sbb
mov
fsub
lret
dec
push
fs
enter
sti
adc
and
data16
sub
mov
dec
call
add
add
and
les
pop
imul
jae
adc
scas
add
xchg
pop
sub
mov
outsb
pop
cli
test
push
aas
mov
cmp
fldenv
mov
out
cltd
lock
addr16
dec
jo
or
movl
add
movsb
pop
adc
out
test
xor
jp
dec
sbb
jle
sub
sbb
xor
loopne
adc
enter
lea
mov
xchg
popf
mov
int3
cmpsb
lds
scas
lret
loope
push
xchg
fstpt
test
or
out
fimuls
xor
fstpt
dec
inc
enter
into
aaa
cmp
inc
xor
lods
xchg
fcmovb
mov
adc
mov
faddp
push
and
inc
enter
pop
hlt
adc
data16
stos
push
test
push
das
cmp
mov
rclb
or
pushf
cmpsl
ss
cltd
aad
ret
pop
xchg
mov
adc
add
orb
test
push
dec
filds
mov
mov
adc
test
dec
bound
movsb
add
mov
sarb
test
mov
fwait
mov
and
mov
movsb
and
xor
test
decb
pop
inc
or
push
push
pop
mov
lcall
clc
jmp
jle
cmp
mov
or
inc
and
mov
xchg
nop
push
mov
fidivs
mov
push
testb
push
mov
aas
jno
les
push
and
data16
jns
loop
mov
or
stos
es
inc
icebp
imul
cmp
xchg
cmp
ret
sub
pop
in
data16
popf
xor
fs
popa
or
int
addr16
sub
es
pop
jl
daa
mov
fwait
mov
aaa
pop
pop
das
jno
add
push
pop
or
sarl
mov
dec
in
jg
jg
sti
xor
sbb
fbld
and
or
cmpsl
and
addl
pop
leave
sahf
or
or
ss
ja
push
or
hlt
lods
nop
jmp
cmpb
xchg
paddsw
jb
scas
dec
cs
jecxz
lea
les
and
xchg
pop
lods
xchg
cmpsl
addr16
jle
mov
sahf
xor
shrb
out
push
aad
pop
pop
cs
scas
adc
xchg
pop
sbb
push
int
adc
fstl
cmp
addr16
fisubrs
rcrb
push
dec
xor
je
notb
test
out
adc
aam
leave
mov
push
fwait
adc
call
mov
js
fildll
push
push
mov
addr16
sti
sti
pop
call
mov
dec
and
mov
sbb
and
cmp
cltd
mov
add
pop
out
bound
adc
pusha
sti
lds
ror
outsb
cwtl
and
pop
out
mov
mov
loope
mov
sbb
mov
sub
shrb
xor
std
cmp
leave
xlat
aas
lret
addb
lahf
xchg
shrb
cmp
cmp
aaa
pop
aaa
xor
fcmovb
insb
mov
dec
fdivr
pop
icebp
das
jecxz
mov
adc
outsb
stc
mov
movsb
inc
lds
lcall
in
lods
addr16
cli
sbb
mov
jge
lea
inc
xchg
cmp
aam
pop
out
add
jle
dec
adc
popf
pop
cwtl
scas
adc
lds
aam
retw
jg
dec
sahf
pop
sbb
sbbl
loope
stos
ret
pop
adc
mov
or
jbe
add
gs
or
neg
add
cmp
push
add
xchg
xor
fwait
xchg
and
pop
inc
shlb
lea
leave
add
xor
pop
push
test
pop
pop
das
mov
pop
inc
movsb
lock
xchg
mov
or
inc
cmc
loope
push
add
lock
mov
stos
jp
ss
mov
jo
xchg
mov
std
cmp
pop
imul
pusha
sub
scas
dec
mov
push
dec
push
or
ljmp
dec
push
mov
insb
clc
adc
stos
and
es
cs
or
xlat
fsubp
fists
inc
cld
mov
pop
cmp
mov
jae
adc
add
and
jecxz
dec
jb
sti
sahf
mov
pop
shrb
jl
out
add
or
or
lret
jb
addb
xor
cltd
add
mov
mov
mov
xchg
fmuls
js
mov
loop
cmc
mov
adc
xor
push
insb
dec
jle
mov
lcall
xchg
mov
or
mov
push
shrl
movb
push
int
daa
cmc
out
imul
pusha
pop
lret
cmp
jns
xchg
xor
and
mov
popa
rcl
mov
inc
pop
cld
into
imul
push
push
loop
int3
fstl
gs
mov
adc
notl
scas
in
jmp
or
sbb
mov
mov
xor
pop
int3
pop
popf
pop
mov
test
pop
or
sub
repnz
push
lcall
std
cmp
icebp
pop
rcrl
adc
sub
xchg
sub
lods
shrb
add
xchg
test
adc
fnstcw
push
sub
aam
add
pop
jns
fsub
add
iret
out
sar
in
and
imul
daa
mov
sbb
adc
mov
repz
insl
and
fidivrs
fs
mov
add
pop
out
push
push
add
cmp
cld
add
sub
xor
xchg
cmc
test
cmp
loopne
mulps
rolb
or
add
jo
out
int
and
mov
inc
inc
ljmp
arpl
or
sarb
pop
stos
subl
shll
sbb
mov
xchg
adc
sbb
fisubrl
adc
lock
mov
lods
mov
xchg
sarl
push
dec
call
cmp
call
jbe
daa
mov
jbe
leave
or
or
outsl
xchg
jmp
ret
lods
ret
lret
pop
mov
ficompl
xchg
jg
xchg
sub
xchg
out
xchg
in
pop
out
daa
mov
loopne
ljmp
call
fwait
arpl
fwait
adc
jnp
ret
inc
lcall
sub
push
loope
sub
xor
xor
popa
out
aad
cmp
jle
xor
mov
push
lret
jae
mov
arpl
out
sub
fstpt
cli
add
or
inc
pop
or
aad
cs
into
xchg
dec
enter
lahf
arpl
loop
imul
mov
cmp
loope
xor
rcl
popf
push
jnp
or
sub
aam
sbb
adc
ljmp
hlt
sahf
xlat
jbe
push
sub
sbb
lahf
out
subl
pusha
xor
sbb
fstl
aas
cltd
cmp
and
jno
jge
fadd
mov
std
xchg
ja
cld
jle
jne
ret
xchg
bound
mov
inc
pop
sub
jo
sahf
xor
sarb
add
jae
imul
nop
pop
inc
mov
sbb
movsb
jns
and
sti
mov
inc
in
loope
hlt
inc
sbb
xor
pushf
out
mov
scas
or
addr16
arpl
xor
cmp
js
or
jne
scas
mov
hlt
jo
pop
adc
sub
bound
iret
fbld
or
and
adc
insl
or
loop
and
mov
decl
es
popf
jne
pop
push
cmp
inc
sbb
mov
add
ret
dec
nop
mov
fstps
push
pop
add
leave
ss
mov
xchg
push
nop
nop
test
push
or
pop
jne
flds
xor
inc
and
nop
mov
sub
sbb
mov
clc
test
push
movsl
ljmp
mov
push
mov
push
mov
lods
stos
pop
adc
or
cmp
aam
mov
dec
test
xchg
push
jmp
and
jmp
sarl
pop
lds
subl
test
dec
mov
adc
outsb
xlat
sbb
pop
cmp
xor
mov
fwait
inc
pop
enter
filds
clc
cltd
mov
push
adc
jb
or
inc
jmp
roll
mov
mov
add
aas
sbb
push
popf
imul
inc
jle
cmpsb
lahf
rclb
out
cld
out
mov
xchg
cmc
insl
mov
jbe
adc
imul
scas
mov
daa
push
cpuid
pop
ficompl
add
mov
icebp
fcompl
mov
mov
movsb
lea
shll
sbb
aam
test
addr16
idivb
cmp
cwtl
idiv
fwait
push
mov
sub
enterw
push
cwtl
mov
test
cmp
pop
fstpt
adc
jbe
int
lds
data16
nop
popf
pop
leave
mov
fimull
lock
xchg
call
in
cmc
adc
es
and
jns
jecxz
mov
fadd
sti
mov
mov
add
mov
mov
sti
repz
test
push
das
xor
je
mov
inc
ss
sbb
xchg
ja
sub
sbb
xor
xor
add
jae
stos
lods
imul
sahf
pop
pop
push
mov
push
xor
push
popa
push
shrb
fcmovne
jnp
aad
lret
pop
xchg
jge
jnp
cmp
mov
jns
and
sub
sbb
repnz
mov
cwtl
idiv
rclb
mov
cmc
in
add
test
in
decl
mov
and
xchg
sub
rcr
xor
mov
xor
clc
mov
filds
in
rcll
stos
sbb
mov
pop
fcmovnb
out
inc
cmp
mov
ja
das
or
into
lds
dec
pop
push
cmpsb
jo
sub
imul
dec
mov
out
addr16
mov
xchg
mov
fistl
test
pop
scas
jnp
inc
movsl
xor
call
jl
pop
ljmp
xor
lds
sub
cmpsl
ret
outsl
jmp
dec
cltd
dec
popa
jp
mov
shll
and
movsl
les
cmp
movd
xchg
xchg
mov
hlt
data16
aas
xor
and
pop
jb
xchg
jnp
sbb
mov
add
not
sbb
mov
aad
inc
or
idivl
movsb
cwtl
sub
daa
xlat
std
cmp
jle
sub
push
mov
mov
jae
js
fildl
mov
mov
lcall
mov
sahf
ds
mov
sbb
mov
and
sbb
inc
aad
inc
cmp
sbb
dec
mov
adc
bound
test
aaa
jne
or
dec
out
sarl
stos
scas
jne
scas
arpl
push
js
pop
or
mov
xorb
mov
sbb
jl
stos
mov
in
xchg
jne
xchg
jl
xchg
sbb
dec
sbb
test
jbe
adc
and
add
icebp
lock
mov
fistpl
adc
add
movsl
mov
leave
mov
cmp
imul
mov
insb
inc
xchg
push
push
pop
push
mov
iret
dec
jb
cmp
ds
pop
aam
lods
gs
and
add
jecxz
cmp
add
insb
dec
xchg
nop
push
dec
cmp
xor
add
pop
mov
lds
lea
jnp
mov
cmpsl
mov
push
aam
push
fistpll
dec
div
and
adc
lcall
xchg
xchg
mov
mov
or
arpl
cmp
loop
or
rcrb
sbb
xor
pop
cmp
adc
mov
pushf
daa
sub
outsb
jg
testl
sub
movsb
xor
push
rcll
sub
xlat
test
rcrb
aad
cwtl
dec
clc
push
pushf
aaa
mov
js
imul
adc
sbb
loope
pop
inc
pop
cmp
in
loopne
cmp
cli
adc
loope
stos
out
cmc
mov
repnz
movsb
mov
jns
pop
sub
cmc
les
push
fisubrs
cmpsb
lret
dec
inc
ret
cwtl
scas
lock
push
and
repz
dec
mov
addb
fmul
and
and
xchg
dec
mov
addr16
fwait
popa
scas
iret
mov
dec
dec
stos
sbb
sbb
test
fsubs
pop
cmp
mov
mov
sub
xlat
adc
lock
lods
sub
mov
xchg
xchg
mov
adc
push
rcrl
pop
and
dec
shrb
dec
mov
nop
mov
into
pop
mov
mov
icebp
push
inc
sbb
push
fwait
pop
sbb
sub
test
mov
sbb
mov
mov
insb
stos
es
pop
lcall
aad
cmpsb
fsts
cmp
outsb
mov
fsubrs
les
add
aas
xor
jns
push
lahf
pop
and
pop
jbe
and
dec
ss
popf
mov
stc
fxtract
pop
sbb
ficomps
mov
mov
sbb
cmpsl
and
cs
int
test
dec
fcomi
mov
xor
xchg
ljmp
mov
adc
pop
adc
jge
push
stos
aas
jno
sahf
js
mov
mov
add
pop
and
aam
dec
mov
movsl
pop
aam
add
in
aam
mov
xchg
loopne
and
in
test
int
push
xor
mov
sarb
inc
xchg
and
pusha
sub
and
fidivl
pop
push
xor
les
nop
jle
sar
fbld
push
inc
jle
loopne
add
mov
icebp
imul
cmpsb
arpl
mov
jmp
cwtl
push
add
insb
push
enter
jbe
xchg
gs
negb
les
push
sbb
andl
xchg
mov
arpl
call
fmuls
movsb
inc
mov
sti
cmp
testb
jnp
push
rorb
and
je
xor
sub
mov
push
inc
pop
lahf
add
add
xor
addl
add
inc
xor
lret
repz
mov
lds
mov
sbb
test
mov
rorl
cmpsl
movsl
push
jae
push
xor
push
addr16
insl
cmp
mov
test
ljmp
jae
nop
sar
out
int3
hlt
mov
sahf
cltd
pop
mov
into
js
test
push
add
add
push
int
push
cmp
lret
sub
or
loop
insb
adc
xor
jae
or
sub
adc
and
dec
std
int3
gs
sbb
data16
out
xchg
out
xor
outsl
pop
inc
sbb
jae
dec
fsubrl
add
mov
xchg
add
pop
jle
and
or
mov
push
scas
loope
addr16
xchg
xchg
lods
js
daa
stos
push
xchg
fcmove
ret
aaa
fsincos
fisttps
enter
test
cmp
mov
ret
adc
fidivl
jb
loope
outsb
xchg
lock
cwtl
outsl
maskmovq
testl
jnp
cmp
fcompl
ret
inc
lcall
imul
clc
dec
xor
adc
inc
xchg
sti
jecxz
push
shll
mov
rclb
pushl
ds
adc
iret
aas
jbe
dec
dec
pop
adc
mov
sub
ficoml
sbb
pop
aas
stc
sub
loopne
adc
cmpb
pop
mov
test
je
je
je
and
scas
inc
inc
xchg
cmc
aad
inc
fwait
enter
lcall
xchg
jecxz
sbb
ss
imul
insb
xchg
insb
pop
inc
enter
or
xchg
mov
dec
xchg
int
lcall
pop
je
mov
inc
es
xchg
xchg
hlt
scas
mov
data16
xorb
push
loope
cmpsb
movzwl
loope
cmp
cmp
dec
in
and
cmp
repnz
inc
cmp
shlb
push
pushf
sbb
ja
jnp
cld
cmp
and
sbb
mov
mov
sbb
mov
lahf
push
les
adc
xchg
adc
mov
mov
inc
iret
mov
daa
mov
mov
mov
repnz
sbb
jo
fucom
fcomps
dec
lret
push
sub
in
repz
xchg
add
popl
pinsrw
sbb
rorl
insl
pusha
adc
mov
lods
adc
inc
lahf
pop
rep
or
enterw
cmpsl
cli
pop
and
clc
inc
fiadds
adc
mov
jp
mov
inc
xchg
mov
xchg
jmp
loope
es
loope
mov
arpl
xlat
insl
cs
addl
fcoms
dec
hlt
cmp
mov
movsb
pop
xor
in
js
xchg
and
sub
push
jg
imul
movsb
fcoms
sub
cwtl
out
push
idivb
or
jg
out
dec
pop
cwtl
sbb
push
addr16
sbb
addr16
xor
push
mov
in
mov
or
push
stos
arpl
jns
stos
movsb
and
movsb
aaa
cmp
push
dec
sbb
jno
lods
dec
push
sub
inc
ret
jo
xor
dec
popf
negb
test
ja
xchg
mov
jecxz
dec
out
mov
js
inc
jae
notl
jmp
mov
and
mov
and
aad
lea
test
pop
cs
sti
push
dec
xchg
sbb
mov
ja
ss
mov
stc
adc
xchg
pop
shll
shlb
and
xor
roll
jle,pn
stc
xchg
leave
push
inc
xor
mov
faddl
xor
dec
pop
sbb
push
into
data16
xchg
repz
adc
addb
loope
insl
adc
xor
in
jae
mov
fwait
repz
mov
jmp
notl
enter
insl
sti
jo
adc
or
mov
push
icebp
cmp
js
repz
xor
push
push
stos
dec
lods
roll
pop
movsl
test
out
inc
jge
bound
addr16
test
sbb
fists
sbb
fs
in
pop
fisttps
lods
enter
jnp
loope
mov
xor
pop
mov
or
out
dec
out
push
or
ds
lret
sbb
mov
fisttpl
outsb
xchg
loop
xlat
push
pop
cld
imul
sbb
leave
dec
add
into
xchg
in
sbb
push
and
cwtl
inc
inc
pop
insl
movsb
sbb
mov
xchg
imull
inc
ds
jle
xchg
jns
jge
and
lret
pop
fwait
js
int3
aaa
pop
sub
aad
negb
dec
sti
loopne
mov
lret
or
std
and
lods
lock
and
jbe
mov
xchg
rcrb
ss
mov
rclb
jl
pop
fbld
in
movsl
cs
dec
dec
sbb
jns
jnp
aam
into
pop
add
fcomps
lds
aas
or
ss
xchg
sbb
mov
and
jecxz
es
xor
mov
std
out
out
inc
pop
mov
cmpsb
std
js
adc
add
mov
enter
test
xchg
mov
les
mov
jmp
mov
sub
gs
lods
in
std
dec
mov
insl
sub
pusha
push
cmp
arpl
jo
mov
fsts
repnz
mov
or
or
in
mov
adc
xor
lahf
cmc
jmp
cli
fdivrl
pop
movups
pop
js
push
pop
sbbl
in
cmp
pop
and
icebp
lock
pop
nop
sub
daa
in
test
xchg
sti
cli
pop
sub
repnz
inc
mov
insb
lret
sbb
jp
fiadds
mov
outsb
adc
push
pop
in
pop
out
xlat
aaa
fistl
mov
stc
dec
jge
shl
into
pop
mov
stos
dec
xor
sti
and
shrl
test
mov
test
and
push
xchg
xlat
ljmp
pop
clc
sbb
add
cmp
lahf
movsl
dec
or
adc
sbb
push
xlat
mov
inc
int
fcmovu
fld
mov
add
lret
cwtl
fldl
loop
ss
cli
outsb
stos
inc
inc
pop
cltd
cmp
daa
data16
call
insb
xorl
xor
in
inc
mov
adc
loop
repz
add
or
xchg
int
cmc
push
push
xchg
ss
jmp
sbb
jge
cmp
in
push
sub
jl
and
adc
aas
push
sahf
or
les
dec
jnp
adc
jns
dec
rcl
pop
jle
mov
cmp
cmp
sbb
out
adc
pop
insl
cmp
in
aaa
das
xchg
mov
out
push
jle
lock
xlat
sbb
sbb
in
xchg
insb
adc
cmp
mov
int
cmp
sbb
add
aaa
sbb
dec
xchg
and
jecxz
aad
cmp
neg
dec
adc
loope
mov
pop
repnz
ror
sbb
xchg
pushf
in
icebp
movsl
dec
pop
xchg
aas
lahf
cmp
push
outsl
sbb
lcall
dec
fwait
jge
mov
jg
add
popf
cmp
fnsave
mov
or
dec
repz
mov
test
fsubrp
ja
stc
int3
or
dec
mov
lods
pop
pop
xor
mov
loope
dec
sub
push
and
hlt
nop
stos
sbb
hlt
add
pushf
jb
iret
or
mov
mov
cmp
xor
lds
mov
or
scas
aam
push
cmp
add
push
jae
into
jne
jmp
popa
ljmp
clc
enter
stos
jae
add
jmp
mov
imul
lret
leave
xchg
in
lds
test
or
in
cmpsb
add
fcoms
mov
adc
jle
lods
jb
dec
push
movsl
sub
enter
sub
xchg
dec
jo
pop
in
ds
cmp
cmp
mov
and
mov
xorl
jb
out
mov
pop
xchg
pop
fldl
xchg
or
mov
or
dec
push
inc
push
imul
jg
sub
jp
sub
inc
loop
mov
std
mov
add
enter
sbb
or
inc
cmp
push
inc
inc
sub
nop
and
pushw
xchg
repnz
add
sahf
cmc
sub
repnz
test
mov
roll
xor
mov
inc
cli
popf
and
das
test
loope
mov
add
push
add
push
or
sub
push
pushf
xchg
lds
inc
mov
xlat
push
sub
test
mov
pop
inc
insl
test
insb
sbb
mul
pop
ret
sub
aaa
push
add
sub
jmp
test
mov
sti
loopne
int3
push
ficomps
insl
mov
sub
push
sbb
jnp
ret
iret
mov
adc
cli
loopne
test
out
adc
test
imul
sbb
jbe
dec
aas
loope
inc
or
nop
and
shll
lea
ss
es
es
cmp
loop
adc
fs
hlt
fiaddl
data16
lods
fs
sub
pushf
add
adc
sbb
pop
es
mov
sbb
mov
div
dec
enter
setg
dec
adc
cmpsl
std
xor
lcall
inc
add
inc
xor
lret
dec
cltd
cltd
cmp
mov
pop
dec
inc
xchg
loop
sti
lret
repnz
out
mov
fwait
sub
cli
out
js
xchg
or
imul
xor
sahf
lods
mov
sbb
push
xchg
dec
dec
cld
jno
xchg
lods
xor
jne
push
or
push
stos
jns
fnstcw
and
or
inc
jle
fsub
push
mov
mov
jecxz
xchg
mov
sbb
and
mov
jae
dec
inc
pop
rcrb
lret
repz
aam
jae
out
push
jecxz
push
xchg
scas
hlt
pop
or
sarl
jmp
rolb
mov
mov
loopne
cmp
inc
fdiv
repz
fsubrl
lret
outsl
mov
test
mov
inc
cmp
ljmp
jae
in
daa
fldz
pop
fcom
test
cmp
mov
and
dec
nop
sub
jmp
je
pop
mov
shll
add
or
fnstenv
out
jae
movsl
mov
fwait
add
mov
inc
xchg
and
fiadds
sub
add
cwtl
mov
adc
push
cmpsl
fs
add
lock
shrb
fwait
push
and
jbe
mov
test
mov
inc
insb
fisttpl
pop
repnz
inc
orb
pop
mov
bound
cmpsb
push
xchg
adc
cmp
push
cwtl
or
xorb
adc
pop
dec
fidivrs
fs
out
lea
jl
jg
jge
mov
and
cs
mov
xchg
in
pusha
push
cli
rorl
jno
fsub
fidivrs
jae
cmpsb
mov
xor
inc
xchg
inc
insl
jns
mov
lock
xchg
nop
mov
inc
icebp
out
hlt
pop
inc
pop
insb
xor
push
ret
inc
mov
mov
jmp
jg
adc
insl
test
sub
stos
or
cmpsb
out
aad
clc
arpl
xlat
push
movsl
outsl
into
mov
pop
add
fisubrs
fistps
xchg
fidivrs
ficompl
add
dec
push
loopne
xchg
fistps
cmc
fcomps
movsl
dec
pop
fcoml
dec
and
xchg
insl
int3
adc
sbb
xor
pop
cmp
das
push
mov
lock
clc
inc
push
test
cmp
pop
cmp
call
jne
enter
and
cmp
int
adc
hlt
loope
pop
xchg
out
shll
and
mov
add
push
sub
pusha
or
dec
ja
or
inc
popf
test
cmp
push
ljmp
cmpsl
adcb
jbe
inc
ror
nop
adc
lret
and
out
cwtl
ror
cmp
mov
sub
js
sub
sar
lahf
mov
sub
loope
and
inc
in
xchg
cld
outsl
out
aas
mov
dec
leave
repnz
inc
movsl
push
imul
jg
push
sub
sbb
sbb
sbb
fadds
in
mov
sub
xchg
xorl
js
jge
jg
jne
xor
push
out
xchg
ret
sub
mov
negl
xor
popf
jne
ret
push
pop
outsl
mov
fnsave
or
cs
lret
dec
stos
dec
lcall
xchg
jo
loope
mov
fmuls
hlt
cltd
daa
add
inc
dec
and
dec
xchg
in
loop
subl
out
jl
pop
adc
jmp
add
sahf
add
inc
inc
loop
imulb
push
jmp
mov
jne
adc
addr16
icebp
adc
cmp
fs
cmp
stos
in
mov
or
jecxz
inc
std
ljmp
mov
popf
push
and
cmp
dec
lea
loopne
cmp
sar
xor
in
inc
test
sahf
push
xchg
loopne
inc
movsb
rclb
add
jne
addr16
push
jb,pn
jge
mov
leave
pushf
adc
dec
mov
add
cmpsb
ljmp
and
pop
loope
mov
and
rol
cmpsl
mov
adc
sub
mov
xor
pop
push
into
sub
iret
and
orl
popa
fadds
cmpsl
in
iret
movsb
xor
add
add
fisubrl
sub
loop
xor
jmp
test
adc
and
enter
sbb
push
mov
les
sti
out
sahf
mov
cmc
inc
daa
adc
add
sub
inc
lods
inc
inc
xor
and
ljmp
rorl
fs
in
sub
in
mov
mov
jbe
rcr
mov
xor
mov
enter
adc
pop
adc
xchg
cmp
sbb
jge
lock
gs
jns
aam
leave
jp
mov
pop
xlat
decl
lret
mov
xor
inc
cld
cmpsl
scas
movsb
mov
push
pop
loop
sbb
repnz
popa
add
out
and
aam
adc
mov
cwtl
sub
adc
fildll
or
leave
sarl
sub
mov
push
push
int3
arpl
inc
add
mov
cmp
outsl
adc
fsubrp
jbe
push
lods
sub
jg
pop
jns
push
outsb
cmpsl
or
cmc
movsb
inc
dec
imulb
sahf
loope
pop
lahf
fsubl
mov
shrb
xchg
testb
mov
movsl
mov
out
outsb
cli
mov
jg
adc
cld
outsb
fbstp
ret
stos
mov
insl
add
pop
jmp
into
xor
lds
shl
jbe
fwait
shlb
mov
and
imul
xchg
mov
push
inc
mov
xor
mov
and
out
push
add
gs
sbbl
fwait
ret
push
add
xlat
shrl
and
mov
cmp
adc
addr16
fmul
push
mov
lods
xchg
pop
lods
fs
mov
pop
pop
movsl
mov
sbb
loop
arpl
xchg
lret
lahf
or
dec
xchg
call
mov
push
insb
ds
add
int
in
fildll
in
or
and
std
mov
es
scas
add
out
or
mov
movsb
cmp
movsl
sbb
and
and
and
xchg
push
jae
adc
push
ret
and
andb
cmc
xor
in
pop
fdivl
lcall
pop
xor
imul
push
aam
xor
sti
lock
aad
inc
popa
test
test
andl
or
ja
xor
mov
jns
daa
pop
xlat
add
les
aaa
test
leave
and
pop
repz
inc
dec
out
loop
mov
cmp
jbe
ftst
jmp
decl
xchg
adc
lods
icebp
adc
jnp
fdivrp
clc
xchg
pop
int
xchg
inc
xor
test
mov
sub
das
cs
mov
xor
xlat
push
and
jecxz
cmp
cmp
cmpl
insl
ret
fsubs
mov
or
aam
aam
pop
or
cli
test
mov
cld
or
pop
inc
shl
push
int3
inc
imul
and
aad
xor
xchg
mov
les
xchg
xor
cld
fcomps
mov
pop
stos
std
popa
fisubs
push
test
pop
and
loop
cli
rcrb
stos
lock
shlb
mov
iret
or
cli
mov
ret
pop
jecxz
pop
push
lds
mov
mov
mov
repz
mov
fcompl
jbe
add
jae
out
jne
mov
dec
mov
test
frstor
ret
dec
adcl
sbb
in
sbbb
sub
jmp
js
cmp
fs
push
sbb
fisttps
mov
push
fsts
push
sub
inc
mov
or
dec
mov
movsb
aad
mov
popa
mov
mov
fnstsw
jne
ds
loopne
pop
xor
loop
jmp
out
rol
or
xlat
mov
icebp
mov
fbld
cld
pop
sbb
mov
push
sbb
cmp
cmp
imul
test
int3
daa
push
cmp
mov
pop
xlat
or
lcall
mov
mov
cmpsl
scas
nop
push
cmp
pop
nop
cmp
jp
fidivrl
scas
push
les
sbb
jecxz
insb
negl
add
dec
add
inc
cld
adc
pop
and
int3
pushf
dec
mov
into
mov
test
dec
push
mov
sbb
pop
mov
push
sbb
jo
mov
mov
cld
sub
fwait
mov
adc
lahf
inc
ret
arpl
cmpsb
sub
insl
mov
sahf
dec
cli
jle
cmp
in
mov
stos
fnsave
mov
icebp
mov
scas
dec
testl
mov
je
mov
cs
mov
and
call
add
ret
pop
popa
cs
stc
inc
jno
fwait
iret
push
mov
mov
stos
adc
adc
add
ficoml
push
xchg
jge
mov
mov
les
dec
adc
insb
in
mov
pop
pop
jmp
mov
inc
movsbl
ljmp
ret
lcall
push
gs
jp
cmp
bound
xchg
sub
jo
sbbb
sub
add
shlb
aas
aas
xchg
int
flds
jl
cmp
mov
cmp
dec
pushf
or
mov
add
dec
mov
push
push
aaa
icebp
xor
inc
mov
int3
mov
inc
hlt
mov
mov
sahf
mov
es
int
pop
aas
cmpsl
dec
aad
push
jmp
xlat
inc
sub
movsw
dec
aad
push
test
push
cmp
xor
push
cmpsb
roll
mov
adc
rclb
cmpl
xchg
out
xor
jmp
insl
dec
pop
mov
push
cmpsb
jmp
lock
xchg
das
cmpsb
mov
ljmp
das
aaa
aam
jae
ja
jb
testl
adc
jne
leave
push
push
roll
jns
pusha
xor
pushf
or
pslld
add
xor
fdivrs
dec
push
outsb
jne
mov
and
divl
cmpsl
or
pop
movl
mov
cltd
outsb
ret
les
mov
pushl
incl
cmp
fcompl
mov
data16
xor
fbstp
mov
jge
push
nop
sub
inc
scas
dec
dec
lahf
dec
pop
sbb
push
xor
inc
push
inc
imul
hlt
add
dec
sbb
movsl
pop
idivl
mov
sub
mov
shrb
in
ret
or
outsb
xor
and
scas
outsb
out
insb
pop
push
mov
fucomip
lock
mov
add
xor
pop
mov
mov
test
bound
lret
cld
inc
xchg
mov
mull
daa
fnstenv
adc
or
inc
frstor
or
push
mov
fnstcw
leave
adc
inc
jecxz
mov
pop
xchg
adc
mov
pop
mov
fisttpll
mov
nop
into
and
jmp
or
ds
nop
test
pop
xor
aas
iret
lret
sar
dec
jg
rcrb
mov
aad
pop
sub
push
and
loop
pop
mov
daa
adc
loope
jo
dec
int
test
and
lret
fildll
std
cmp
lods
mov
mov
or
cmp
xchg
sub
mov
push
fisubrl
out
dec
and
and
out
shll
sbb
movsl
jmp
in
outsb
mov
mov
aad
or
cmp
adc
hlt
xchg
add
inc
jb
sarb
cmp
or
daa
data16
inc
fldt
adc
fisttpll
roll
shlw
dec
movsb
pop
push
mov
xchg
mov
jo
in
into
sub
jmp
xchg
mov
xor
cwtl
jle
pop
mov
rcrb
outsb
rclb
flds
push
test
cmc
and
mov
test
popa
push
push
imul
insl
and
or
sub
cmp
pop
xor
loopne
out
push
inc
jecxz
pop
jl
daa
jp
dec
cmc
xchg
add
pop
jp
testl
aad
push
sub
mov
cmp
test
scas
adc
nop
test
pop
fld
jo
xchg
dec
push
cmp
mov
cmpsl
dec
loop
andl
mov
xor
lds
pop
fcmove
push
cmc
cmp
mov
cmpb
mov
xchg
cmpsl
ds
pop
and
test
pop
loopne
xchg
popa
sbb
push
xor
fucomip
repnz
imul
jns
mov
mov
mov
rol
fsubl
and
mov
addr16
in
xchg
lret
jnp
sbb
mov
pusha
call
and
lret
ret
ljmp
aaa
sbb
sub
lock
jge
push
cmc
lock
sahf
push
lret
cli
insb
jg
fucomi
cmp
xchg
aad
lock
cmp
dec
movsl
add
outsb
and
incl
mov
cmp
push
shlb
testb
cmp
cmp
jne
sti
jmp
mov
gs
add
fidivrl
popa
in
add
int
mov
xchg
inc
mov
arpl
or
xchg
outsb
adc
stc
xlat
inc
cwtl
sub
xlat
inc
pusha
sub
cmp
or
scas
daa
xchg
aam
inc
mulb
movsl
cmp
mov
iret
idivl
subl
cmpsb
xchg
adc
js
sbb
pop
mov
popa
in
mov
jnp
rcll
inc
xlat
inc
ljmp
pop
push
pop
sbb
aad
out
cmpsl
mov
push
bnd
dec
push
inc
mov
call
pop
push
mov
ljmp
or
add
call
clc
repnz
stos
xchg
iret
pushf
jecxz
sarb
rolb
adc
xchg
je
mov
fidivrl
inc
dec
aad
out
push
mov
jp
fildl
rcl
mov
aad
fdivrl
scas
push
jb
pop
push
cltd
fildl
push
fidivrl
push
cmp
inc
loopew
cmpl
pushf
mov
xchg
dec
sub
dec
clc
aad
mov
xchg
adc
int3
sub
mov
outsb
pop
call
arpl
cmpl
or
xchg
xlat
dec
ja
stos
sub
stos
xchg
iret
mov
cmpsl
sub
inc
mov
push
cwtl
stos
add
ja
fsubp
cs
fwait
inc
push
aaa
mov
xchg
in
ret
stc
data16
in
mov
xor
dec
push
pop
cmp
int3
test
xor
ja
out
fstpl
les
xlat
repnz
imul
iret
mov
sahf
ror
mov
mov
mov
jmp
mov
xchg
addr16
rcr
lock
cld
sub
dec
mov
push
mov
cmp
sbb
cmpsl
dec
inc
js
popf
push
mov
add
int
lret
pop
loopne
dec
or
pop
sti
sbb
out
stos
dec
data16
adc
gs
nop
xor
jmp
js
aam
mov
mov
pop
std
pop
test
rcr
or
std
sub
inc
js
xor
sbb
dec
or
mov
movsl
mov
loop
stc
add
cmp
push
outsl
popa
or
push
jmp
mov
test
movsl
dec
jge
pushf
fnstenv
xchg
daa
push
jecxz
lret
xor
addr16
pop
xchg
lahf
in
jge
xor
subl
xchg
rcrb
test
or
popf
dec
rcr
fisubrl
fs
dec
and
inc
jnp
mull
push
daa
xchg
cltd
lods
jno
stc
jle
cmp
mov
jo
jecxz
mov
rcll
stos
test
mov
out
inc
mov
ja
xchg
ret
jge
out
pop
xor
cmp
inc
mov
xlat
lahf
in
cmp
mov
xchg
xor
movsb
dec
add
jns
cmp
mov
mov
int
inc
push
cmp
sahf
mov
enter
cmc
pop
out
dec
adc
jmp
pop
sub
add
rolb
daa
test
ljmp
adc
sti
push
sti
sti
shll
push
pusha
rcll
comiss
push
lods
ret
sub
test
pop
movsb
inc
and
push
pop
sub
or
xchg
jl
mov
pop
int3
adc
cmpsl
mov
sbb
xlat
cmpsb
dec
cmpsl
fwait
add
xchg
orl
ds
stos
and
jns
sbb
push
divb
pop
xor
or
leave
les
andl
lret
cmc
jecxz
cli
cmc
clc
mov
pop
jmp
mov
or
sbb
int3
leave
cmpsl
test
push
insb
add
adc
push
jbe
pop
mov
xor
daa
ja
mov
push
fstps
movsl
int
aas
clc
nop
xorb
inc
mov
mov
scas
lret
jne
pop
mov
and
mov
lret
dec
jo
pop
dec
cmp
jno
pop
jns
push
mov
jne
popa
or
out
push
scas
or
pop
mov
inc
dec
xchg
ficomps
pop
push
xchg
aas
or
mov
inc
adc
xchg
popf
xchg
hlt
dec
andb
loope
imul
leave
stos
push
pop
jle
arpl
adc
icebp
pop
js
hlt
loop
lds
fbstp
sarl
repz
jge
ds
mov
sbb
jge
inc
jp
sub
jno
aad
mov
gs
test
mov
jnp
aaa
arpl
push
lds
daa
push
xchg
in
test
inc
out
and
in
pop
mov
jno
repnz
out
jno
insb
ja
pop
je
mov
mov
jns
rorb
or
out
call
dec
mov
mov
mov
jae
cmp
dec
dec
sbb
out
aad
add
xchg
cmp
adc
inc
inc
adc
inc
push
cmpsl
icebp
imul
ss
aad
lret
push
mov
push
mov
fildl
jecxz
testl
addr16
call
je
out
xchg
or
loopne
xchg
mov
imul
jnp
xchg
push
cli
push
std
or
pop
sub
push
imul
sbb
cmp
mov
mov
lahf
fs
insl
mov
jo
ret
mov
dec
in
mov
dec
jmp
jl
inc
lret
out
loopne
call
gs
hlt
lock
xlat
mov
xor
mov
mov
jbe
or
sub
movsl
repnz
pop
jge
je
mov
sbb
insb
test
subb
push
test
mov
add
cld
mov
and
movsl
jnp
lret
pop
imul
jne
push
inc
imul
addl
xorb
mov
mul
pop
cwtl
mov
mov
mov
sarl
mov
xor
push
dec
xchg
cmp
mov
mov
mov
test
mov
jl
add
cmc
adc
xchg
fimuls
cmpsl
add
mov
outsl
in
scas
je
inc
js
test
notb
fwait
mov
movsb
dec
sti
test
cmc
shll
std
pop
or
scas
push
test
dec
ja
add
incl
mov
mov
adc
mov
ljmp
test
ds
xor
lret
lds
jle
fwait
jo
xor
cld
fisttpl
add
cmpsl
fnstenv
in
cmp
mov
sub
ja
cmp
cmpsb
dec
xchg
loop
sub
cli
mov
or
mov
loop
or
adc
rorb
push
jg
movsb
inc
pop
and
ss
in
out
jbe
inc
or
mov
xor
mov
gs
sti
push
push
sub
shr
dec
adcb
in
adc
mov
cmp
gs
out
sub
loope
lret
stos
fs
xchg
into
cmp
cli
cmp
subl
cld
rorb
scas
fs
cmp
fldenv
jmp
sti
push
jmp
iret
add
xchg
jg
cwtl
ljmp
cwtl
lock
inc
dec
in
lea
aas
addr16
imul
sahf
leave
int3
mov
repz
pop
out
div
in
mov
push
lret
jb
aad
dec
in
jp
xor
xchg
xor
xor
dec
mov
mov
cli
mul
clc
add
js
push
int3
mov
test
xor
pop
inc
inc
mov
mov
mov
push
inc
adcb
roll
and
and
xchg
cmc
inc
mov
pcmpeqb
movsb
mov
xchg
or
sarl
dec
loop
fldenv
aaa
push
fbstp
daa
ret
jl
ret
sub
arpl
out
inc
out
sti
dec
cmp
mov
gs
imul
pop
iret
data16
aas
fxch
mov
test
cmp
sahf
movb
call
push
dec
inc
lahf
es
movsl
xor
xor
nop
jne
hlt
hlt
and
cli
je
popw
xor
mov
sbb
push
jnp
push
rorb
scas
lret
mov
dec
mov
sbb
lcall
clc
lret
insl
mov
xor
shll
dec
leave
or
dec
sub
xchg
cmpsl
mov
loope
pop
int
les
dec
fstpl
lds
dec
sbb
adc
and
lods
shll
out
cli
stos
xor
sarb
lret
int
lods
popf
lret
scas
sbb
jo
rcll
sub
push
stc
test
xor
xor
sti
sar
rclb
repnz
jne
rorl
sub
lock
mov
jae
popa
or
and
leave
jl
test
and
pusha
ja
es
jae
insb
pop
xchg
jb
or
push
inc
insb
push
cmp
mov
es
fucomp
push
dec
ret
mov
inc
pop
test
pop
or
loope
xchg
lock
pop
and
dec
add
dec
addb
adcl
dec
ret
imul
lcall
pop
rclb
rcrl
stos
int
push
push
and
icebp
call
inc
int
rcl
mov
jp
xchg
mov
movsl
pop
addr16
rol
adc
dec
inc
test
repnz
cmp
test
cs
rcr
inc
mov
or
sbb
push
imull
or
mov
mov
lds
loop
xor
std
lea
push
cmpb
xchg
cmp
test
mov
or
lcall
pop
ffreep
sbb
inc
cmp
push
jnp
mov
lahf
mov
sbbb
dec
ss
arpl
aaa
dec
dec
aam
pop
lock
into
dec
stos
inc
hlt
mov
add
cltd
dec
test
mov
andl
and
incl
in
adc
adc
cld
lret
mov
dec
mov
popa
ds
jecxz
mov
out
sub
dec
mov
mov
rcrb
jnp
daa
push
daa
mov
xor
jae
and
jb
out
adc
cmp
add
sbb
add
outsb
fiadds
into
sahf
xchg
or
xor
movsl
inc
mov
mov
dec
roll
add
xchg
movsb
repz
xor
popa
adc
sub
push
adc
push
push
xlat
popa
sbb
es
test
xor
cwtl
xor
sub
push
sub
push
jno
jb
out
mov
jbe
jne
lcall
dec
xlat
mov
mov
mov
sub
mov
aaa
pop
cmp
and
adc
repz
outsb
loope
sbb
stc
adc
subb
mov
in
add
jb
pop
xrelease
jle
push
mov
adc
mov
arpl
add
fcmovu
add
mov
jp
fcomps
or
inc
mov
js
lock
mov
inc
push
push
or
sbb
push
add
mov
and
stc
pop
enter
inc
xchg
xor
inc
xor
mov
sbbb
adc
jmp
mov
ds
stos
ljmp
pop
mov
in
jo
lods
aaa
jns
jl
mov
enter
cmp
xchg
fmul
mov
push
and
mov
insl
mov
sub
hlt
gs
or
jns
jmp
dec
push
pop
push
jae
xchg
daa
pop
mulb
push
xchg
mov
cltd
sarb
dec
cli
sbb
aad
push
fs
lock
cmpsb
xor
rorl
call
push
movb
adc
cmpsb
lcall
pop
inc
mov
mov
insb
jecxz
adcb
pop
sbb
lods
loope
jmp
push
xorb
and
in
gs
xor
scas
decl
ret
into
xabort
add
xchg
mov
andb
ror
pop
xor
dec
fcom
and
add
rcll
sub
mov
xchg
push
cmp
sub
das
insb
jg
shlb
pusha
mov
into
rep
and
sbb
fadds
sub
insb
xchg
stos
mov
push
hlt
loop
xchg
jle
mov
xchg
popa
jne
dec
inc
enter
push
inc
or
mov
push
idivl
icebp
mov
out
test
push
push
ss
call
sbb
xor
cmp
scas
or
out
mov
jno
push
push
leave
jne
pop
sub
jmp
sub
xchg
mov
jb
repz
push
cli
stos
je
xchg
lods
add
movsl
or
nop
sbb
cwtl
cmpsb
fstl
push
jb
fwait
pop
scas
imul
sub
adc
inc
sarl
ss
test
sbb
xlat
ret
sub
imul
mov
xchg
lret
dec
cli
out
andl
nop
sti
leave
popf
xchg
dec
test
inc
mov
xchg
test
mov
scas
pop
jmp
es
lods
shll
xchg
movsb
mov
and
enterw
lea
add
jne
ja
xchg
push
faddp
ljmp
inc
fnstcw
xchg
push
jg
mov
inc
negl
add
bound
lods
sub
sub
or
xchg
push
pop
and
pop
xchg
jle
push
or
fs
inc
push
cmp
inc
roll
pop
and
mov
sub
push
mov
nop
push
fmuls
jge
jo
loope
jae
lds
bswap
fcmovnbe
mov
sbb
lods
and
std
pop
out
xor
loope
rcrb
sbb
cmp
cmp
and
shrl
movsb
mov
addr16
out
jbe
mov
mov
leave
es
inc
sbb
sbb
fwait
sub
in
cmp
pop
out
icebp
scas
fwait
adc
ljmp
inc
xchg
and
std
adc
and
dec
fiadds
dec
push
mov
mov
jg
cmpsl
testl
aam
popa
scas
lds
in
out
cmp
jb
int3
and
dec
sbb
das
jbe
jg
pop
pop
jmp
test
dec
roll
and
and
popa
add
lods
sbb
sbb
test
data16
enter
pusha
jno
cmp
xchg
lret
and
mov
push
mov
cmp
lods
jns
jns
js
mov
mov
jbe
inc
pop
loope
jle
pop
daa
loope
hlt
aad
sbb
pop
clc
cmp
adc
push
lea
mov
jmp
inc
fsubs
gs
lods
push
rolb
add
inc
cmp
lods
adc
out
gs
inc
rcrl
adc
and
jb
mov
out
mov
rcrl
xchg
dec
imul
loopne
mov
inc
inc
loopne
adc
or
pop
jno
add
lea
data16
stc
mov
cs
lods
push
jne
lods
test
sbb
shlb
out
mov
shll
pop
mov
xchg
pop
or
aam
icebp
xchg
dec
add
shr
rep
mov
cmp
outsb
mov
lahf
scas
sub
shr
push
mov
adc
push
push
std
insl
les
xor
mov
faddl
shlb
outsb
sbb
lret
jecxz
xchg
mov
cwtl
pop
imul
mov
scas
ljmp
jns
sbb
inc
mov
jge
jp
popa
movsl
xchg
clc
add
test
lods
lret
and
dec
arpl
jbe
out
movsb
xor
mov
mov
xchg
mov
stos
xchg
jle
lret
sbb
jo
jae
scas
inc
fists
lods
inc
xchg
arpl
mov
fstp
inc
mov
mov
add
mov
out
jne
pop
aam
les
sub
mov
outsb
int3
data16
repnz
jmp
mov
aas
fisubrs
push
fists
aad
in
lock
fwait
std
inc
or
outsl
movsb
xor
mov
lods
test
divl
mov
inc
ja
jmp
mov
push
leave
mov
inc
lock
ljmp
mov
stos
fisttps
push
jecxz
movsl
idivl
pop
pop
push
mov
aaa
inc
dec
movb
xlat
jns
popa
mov
lods
test
test
push
sarl
pop
aad
xor
aaa
inc
daa
dec
shrb
outsl
int
jnp
cmp
lahf
cs
push
lea
int3
ret
dec
in
testl
lods
mov
push
in
stos
add
xchg
sbb
imul
lss
push
xlat
jae
fmull
je
adc
sbb
or
mov
test
mov
mov
xor
push
push
aam
aam
outsb
loope
mov
test
gs
cmc
scas
add
shrl
dec
fisttpl
mov
adc
add
std
jbe
lods
aaa
xor
adc
sar
pop
mov
loope
imul
xchg
xlat
and
mov
filds
in
iret
cmp
ret
cli
loopne
push
jo
negl
mov
iret
sub
push
mov
cwtl
pop
movsb
mov
cmp
jge
leave
mov
loope
jno
call
mov
pop
dec
cmpsb
mov
xor
dec
gs
mov
mov
cmp
adcb
xor
sub
mov
sahf
jmp
movsl
in
mov
das
aam
lods
mov
js
mov
bound
test
stos
lahf
sub
imul
adc
adc
adc
lock
ret
push
or
dec
xchg
adc
add
addl
scas
xchg
mov
pop
adc
mov
pop
add
iret
lahf
rorb
mov
adc
lret
jecxz
or
insb
pop
ret
bound
or
mov
in
cmp
xor
adc
in
sbb
push
test
or
inc
leave
ljmp
mov
stos
jmp
xor
stos
arpl
adc
stos
jae
scas
test
outsb
inc
or
outsb
jle
add
fstpl
pop
stos
sbb
and
pop
es
push
aas
or
in
jbe
mov
pop
mov
loop
dec
xchg
dec
cmp
shlb
inc
xchg
dec
mov
scas
jcxz
and
mov
scas
cli
jmp
pop
test
pusha
adc
cmp
sbb
ss
adc
mov
subl
add
shrl
movsb
add
test
fxam
enter
stos
xchg
and
pop
dec
adcb
not
xchg
adc
int
or
mov
mov
fdivl
mov
adc
in
mov
arpl
cmc
ja
inc
fucomip
outsb
pushf
loop
movsl
adc
push
or
loop
mov
or
bound
rorb
cmpsl
inc
cmpsb
clc
jecxz
in
push
or
roll
jne
aas
into
pop
add
lock
aas
cmp
jnp
lods
dec
test
stc
jmp
call
stos
xchg
jns
adc
out
sahf
mov
jmp
xchg
pushf
add
pop
mov
jo
mov
xchg
dec
add
lods
movsl
lods
cmpsb
xorl
xchg
mov
push
aad
into
jae
cmp
jo
push
push
push
push
add
hlt
jbe
mov
push
shrl
add
test
push
push
push
add
cwtl
cmpsl
pop
mov
mov
jbe
xchg
push
pushf
dec
or
mov
add
or
sbb
sarb
and
xchg
fidivs
repnz
cmpxchg
xchg
inc
xchg
xchg
fimuls
aaa
push
cwtl
test
and
bound
mov
daa
and
xchg
push
sub
sahf
mov
push
inc
shll
movsb
inc
jb
push
ds
or
nop
out
jl
movsb
lret
in
test
cld
dec
xchg
sub
jne
lock
dec
jo
xor
jae
out
xor
dec
stos
xor
mov
filds
fs
pop
pop
in
push
out
push
int
mov
and
mov
shlb
xor
stos
sbb
push
and
mull
jae
fcomps
mov
stc
dec
cli
or
dec
inc
orb
pop
mov
or
and
incl
or
repz
cwtl
mov
scas
movsl
int3
cltd
cld
stc
inc
clc
mov
loope
sub
cmc
mov
adcl
nop
pop
popf
mov
jp
dec
faddp
cltd
test
jge
jns
pusha
shl
pushf
test
sahf
jl
add
scas
in
cltd
rol
mov
mov
ret
mov
imul
call
xchg
lret
pop
outsb
mov
in
jnp
mov
fsts
rcrl
scas
mov
cli
stc
aaa
ljmp
aad
dec
add
lods
popf
cwtl
divb
arpl
xchg
add
test
cmp
inc
mov
iret
movsl
jp
push
sbb
nop
repz
aam
sub
add
pop
sub
and
iret
mov
cmpsb
call
pop
sub
test
popf
mov
cmc
outsb
into
mov
fwait
push
outsb
into
aad
xchg
test
xorl
mov
cld
icebp
mov
iret
or
dec
lret
int3
cmpl
lcall
pop
inc
cld
adc
inc
inc
mov
into
fdivs
iret
daa
insb
and
in
mov
and
xchg
test
loop
adc
inc
and
xor
pop
dec
sub
mov
pop
push
cs
in
xor
ret
out
scas
inc
inc
cmc
sahf
lret
mov
add
testl
call
call
repnz
loope
shr
push
and
push
inc
push
cmp
cs
adc
call
push
mov
adcl
sahf
pop
xor
xor
cmpsl
cmp
pusha
and
call
cltd
xchg
popa
fwait
sbb
mov
popa
jl
movsb
push
push
sarb
adc
cmc
sub
fwait
mov
pop
jecxz
push
test
push
mov
dec
xor
xor
dec
push
xchg
imul
xchg
dec
std
cld
mov
sbb
ret
loope
fadds
pop
les
ret
fcomp
mov
sub
rcrb
jp
in
jb
adc
cwtl
inc
dec
popa
mov
jno
arpl
xchg
push
pop
adc
mov
push
out
aas
outsl
add
or
and
ret
add
in
fucomp
add
mov
adc
push
inc
lods
bound
xor
lahf
cs
repnz
mov
sub
jo
cwtl
lahf
sub
mov
xchg
push
jg
xchg
mov
push
sbb
ljmp
decb
gs
jmp
sahf
pop
mov
or
push
inc
or
add
daa
adc
mov
ficoms
addr16
ds
loope
jle
adc
rorb
loope
and
ljmp
movsl
dec
adc
sbb
insl
rolb
lret
aad
jne
jp
gs
adcb
xor
icebp
mov
pop
ret
pop
and
dec
xchg
stos
faddl
lcall
fdivp
popa
fstp
aaa
scas
sub
pop
xor
inc
and
mov
adc
jo
mov
test
pop
and
cmp
mov
sbb
pop
xchg
imul
jo
or
dec
insl
es
leave
cmpl
dec
mov
fstpt
pop
daa
dec
adc
js
push
bound
filds
or
or
cld
xor
in
inc
xor
inc
adc
imul
enter
sub
enter
or
mov
inc
aaa
jnp
scas
cwtl
inc
cmpsb
or
push
add
cld
or
scas
pop
stc
call
xchg
lock
call
jne
push
dec
sub
test
adc
sub
fsubrs
cmc
dec
pop
push
cs
cmp
loopne
nop
xor
sbb
pop
in
pop
movsb
mov
arpl
push
subb
mov
xchg
xor
in
push
stos
lods
fsubp
test
ds
test
xchg
fs
ss
or
and
push
in
xchg
out
hlt
lea
add
popa
stos
cmp
scas
mov
cmpsb
test
xor
repnz
jmp
out
or
subb
addl
jge
clc
in
stc
jbe
int3
loopne
jg
cltd
test
jo
lahf
adc
mov
test
and
out
je
test
nop
add
scas
mov
in
imul
mov
xlat
xor
fisttpll
lret
xlat
popl
push
stos
xchg
movl
lods
call
cltd
leave
sti
or
lods
movsl
jle
xchg
dec
rclb
inc
gs
fstpl
sbb
into
and
xchg
and
pop
cld
or
sub
scas
add
push
pop
into
ret
xchg
loopne
sub
notb
data16
addr16
fwait
andl
mov
cmc
fidivl
rcll
scas
jmp
mov
lahf
lods
dec
inc
jecxz
xor
add
sahf
xchg
xchg
leave
xchg
roll
hlt
fstp
std
mov
dec
and
pop
mov
lahf
add
test
cmp
cld
or
adc
loopne
mov
cmc
sahf
push
insb
sub
rorb
adc
jo
ss
lret
push
popf
xchg
call
push
movsl
movsb
int3
adc
stos
mov
sahf
fmuls
sbb
add
mov
mov
arpl
xchg
xchg
inc
mov
dec
js
add
xchg
dec
push
popf
inc
jl
sti
pop
pop
das
loopne
add
test
xchg
mov
inc
sbb
loop
add
xor
or
insb
mov
shl
ss
adc
stc
fcoms
cmc
jmp
int3
inc
lods
and
outsl
je
dec
movsb
xchg
or
push
xlat
xor
inc
inc
xchg
mov
mov
add
into
orb
push
das
or
outsb
inc
aas
movsl
cmp
jmp
mov
shlb
movsb
idivl
mov
ret
pop
pop
adc
movb
mov
test
hlt
push
adc
jl
js
jno
fistl
mov
nop
out
fwait
xchg
sub
mov
xchg
inc
adc
testl
jnp
es
push
sti
cltd
outsl
test
cmp
fimull
push
arpl
jae
ljmp
or
and
pop
rdseed
dec
push
ja
mov
dec
cmpsb
in
inc
lahf
fcoms
mov
popf
test
mov
mov
or
fsubl
xchg
fmull
inc
or
xor
cli
mov
pshufw
or
push
sub
test
insb
stos
dec
pop
mov
fidivl
jae
fldcw
lret
dec
xor
jnp
xor
xor
es
or
xorl
test
roll
push
bound
lods
push
cmp
data16
mov
sbb
mov
dec
les
xor
ljmp
je
or
mov
out
enter
in
daa
dec
les
ret
fisttpl
push
cli
subb
jl
jl
dec
cld
fsubr
mov
pop
popf
pop
push
inc
je
mov
or
aad
mov
sbb
test
test
test
pop
stos
fs
jne
out
sbb
popa
lret
fnstsw
imul
pop
mov
outsl
add
xchg
std
mov
sbb
xor
inc
scas
outsl
xsha1
cmpsb
into
cli
or
mov
mov
fisubl
and
sub
push
push
lret
imul
or
or
ja
jns
xor
ret
rol
pop
or
inc
lahf
cmp
pop
cmc
xchg
lock
fistps
test
mov
and
inc
push
out
and
cmpsl
dec
pop
mov
enter
adc
std
mov
ja
lds
repz
ljmp
pop
adc
sbb
mov
insb
pushf
jecxz
std
in
imul
mov
cmp
xchg
addr16
lods
inc
pop
aas
inc
mov
ds
les
xor
stc
mov
cli
xor
call
test
lahf
sbb
lods
pushf
dec
loopne
pushf
fs
lods
xor
push
jg
push
dec
push
sbb
mov
or
sbb
mov
cmp
lds
mov
rolb
adc
push
fwait
push
xor
lock
pop
std
sbb
jp
jle
sbb
pop
les
xor
inc
adc
jb
pop
cmp
jne
aaa
pushf
test
sub
rcr
inc
int3
cltd
dec
test
dec
pop
subb
xchg
insl
adc
insl
dec
fisubrl
js
xchg
dec
cld
prefetchwt1
dec
push
outsl
mov
out
stos
xchg
push
ficoms
dec
shll
lcall
dec
sbb
xor
aad
jecxz
xor
imul
fcomip
push
dec
and
jecxz
fwait
leave
pop
fistps
in
mov
and
leave
add
orl
in
inc
or
stc
mov
repnz
xchg
xor
mov
insl
insb
and
mov
jp
fs
iret
push
push
inc
popf
sbb
psrad
adc
and
inc
int3
sahf
mov
pop
cmp
jl
jns
jo
aam
push
ss
int3
ret
in
sbb
pop
sub
xor
inc
or
sub
jbe
nop
xor
stos
test
fimuls
mov
push
add
pop
jns
shrb
test
adc
inc
jecxz
add
pop
mov
mov
push
xchg
dec
out
xlat
scas
inc
sub
aaa
xchg
push
imulb
addr16
or
pop
dec
leave
inc
fdivr
push
fwait
insb
dec
mov
jno
fmull
hlt
and
imul
adc
movsb
cwtl
pop
shll
sub
fsubl
in
and
addr16
movsl
push
mov
pop
adc
cmp
pop
cltd
mov
cmp
jg
push
fnsave
rol
jns
fidivrl
movups
jnp
pop
dec
push
loopne
sub
sub
in
and
fs
repz
sbb
imul
jb
and
mov
jl
in
subl
mov
ljmp
cmp
pop
popa
mov
sub
push
or
movsb
ret
lahf
mov
sub
inc
push
out
push
aaa
loope
leave
and
and
xor
leave
add
fs
call
fs
pusha
dec
sbb
shl
pop
sbbb
aaa
loopne
mov
lret
mov
or
shll
lods
mov
popa
jl
adc
or
fists
dec
jmp
idiv
out
jno
hlt
mov
push
push
xchg
sbb
stos
add
pop
xor
out
imul
pop
adc
sub
inc
roll
inc
xlat
jge
push
movsl
xchg
sub
movsl
pop
out
push
jl
cltd
lcall
daa
and
outsb
js
leave
xchg
lret
cmp
bound
jmp
aaa
fisttpll
xlat
repz
idivl
add
out
roll
sbb
add
sub
jnp
jnp
loopne
pushl
imul
movsb
pop
inc
inc
or
dec
mov
jo
adc
xchg
lds
jg
lods
pop
mov
ret
mov
and
aaa
xchg
gs
int3
insb
pop
in
add
lock
jno
pop
aaa
jae
adc
xor
xchg
in
mov
repnz
testb
push
cmpsl
mov
xlat
mov
mov
aaa
add
or
mov
mov
loope
fldl
enter
lods
les
mov
jp
xchg
jl
sti
pop
je
and
jp
dec
pop
lahf
adc
test
push
ja
mov
dec
jo
inc
inc
ret
jb
scas
fisttpl
lret
fisubs
ret
pop
mov
push
stos
xor
cmc
std
ss
pop
cmp
add
pop
scas
push
push
pop
or
int3
dec
ja
sbb
cmp
lods
push
adc
das
pusha
addr16
ds
dec
fdivs
lods
test
cmc
mov
sub
je
mov
sub
mov
add
xchg
mov
push
inc
adc
sub
mov
fs
sbb
inc
es
xchg
out
lahf
push
xchg
lret
mov
test
jne
add
lret
xor
stc
mov
aaa
pop
std
pop
inc
mov
sub
loopne
xor
jbe
idivl
mov
movsl
mov
inc
jnp
movsb
das
clc
sub
fs
xor
dec
mov
mov
lret
pop
push
jge
fwait
and
pusha
dec
in
or
add
loop
hlt
sub
dec
push
jb
pop
ja
insb
fistpll
out
ret
loopne
mov
mov
cmp
sbbl
in
inc
std
push
jle
and
add
ret
rolb
push
mov
pop
xor
xchg
inc
mov
add
mov
and
add
adc
mov
rcrl
push
fldenv
ret
inc
test
mov
adc
push
xchg
aad
lods
and
sub
daa
fchs
push
sub
add
cmpsb
movsl
outsb
lret
das
cli
insb
clc
mov
adc
movsb
xchg
adc
mov
xchg
data16
es
and
in
repz
mov
mov
pop
jb
out
std
add
mov
xor
push
lea
fadd
push
cmp
push
stc
add
test
cmpsb
xchg
push
adc
pop
insl
loopne
test
not
ficoms
mov
addb
loop
movsb
pop
scas
fdivrl
repz
ljmp
leave
xlat
cmpsl
mov
dec
mov
xor
pop
xchg
pop
rcr
sub
pop
adc
adc
fs
add
sbb
mov
jg
pop
jecxz,pt
cmp
fildll
jno
mov
push
into
mov
ja
mov
in
add
mov
loope
mov
inc
and
jne
addr16
lea
mov
movsb
lock
in
stc
addl
testl
add
mov
push
push
push
sbb
ja
cli
stos
dec
push
clc
cmp
mov
pop
pop
xor
sbb
or
push
mov
pop
sub
mov
repnz
push
sbb
aad
push
cmpsb
mov
pop
incl
insl
rorl
sub
mov
movsb
mov
pop
xor
test
ss
push
iret
ljmp
jb
in
lcall
adc
ret
add
jge
cmpsl
popf
fs
les
mov
les
cmpsl
xchg
movsl
aaa
xor
aaa
sahf
xchg
rcrl
lahf
add
push
and
lcall
adc
aaa
std
mov
mov
jo
or
lcall
ljmp
mov
mov
jo
cmp
inc
cmp
cmc
xchg
cmp
push
mov
mov
scas
je
test
pop
insb
xor
movsl
and
cmp
mov
xchg
jecxz
idiv
push
mov
pop
or
mov
mov
popf
fcmovnu
arpl
xchg
int3
add
xchg
cmp
sbb
ss
loope
add
xchg
or
into
mov
lea
pop
rorb
inc
cmp
push
stos
flds
inc
xchg
push
sbbb
pop
imulb
out
add
fnsave
jno
mov
jno
popa
mov
test
push
ja
notb
es
aam
popa
fistpl
loope
nop
ret
out
scas
test
js
inc
sbb
inc
or
xchg
adc
out
test
stos
lock
clc
sbb
int3
dec
and
cmp
lcall
jecxz
push
test
test
xchg
in
out
hlt
jne
push
ljmp
mov
xchg
xor
mov
jmp
dec
scas
pop
fists
ja
add
lret
mov
xchg
xor
cld
xchg
pop
ret
cmpsl
push
pop
cmp
jle
movsl
and
adc
in
aad
xor
repz
inc
repnz
mov
pop
fsqrt
add
std
push
arpl
lret
jo
mov
into
xor
int3
jecxz
push
xchg
push
adc
cmp
push
imul
jge
inc
test
xor
pop
shlb
fnstenv
ljmp
andb
into
cmp
cmp
dec
push
dec
dec
sub
loope
add
xchg
pusha
das
jmp
sub
rorb
mov
sbbb
cli
enter
fwait
nop
add
test
sub
decb
add
mov
into
mov
push
jle
add
scas
lds
pop
in
push
nop
jns
push
mov
sub
cmpsb
movsl
jl
pop
movsl
stc
sub
lds
cmp
scas
fwait
stc
shlb
ja
inc
inc
stos
add
mov
jb
mov
xchg
std
loopne
pop
clc
pop
fsubs
mov
sub
pop
and
lahf
or
jmp
loopne
xchg
pop
sub
jbe
and
adc
repnz
or
jp
sub
push
pop
cmp
mov
in
jbe
mov
mov
xor
cmp
lretw
aas
inc
jp,pn
in
push
mov
xor
xchg
cmovle
sarl
add
add
xor
inc
test
fst
jns
sbb
or
in
push
mov
clc
shrl
aas
jp
push
stos
sub
mov
inc
jmp
loope
inc
jb
xor
jb
insl
push
inc
mov
xchg
cltd
push
mov
hlt
cmp
mov
xlat
mov
test
lods
or
cwtl
xor
ds
pusha
sub
pusha
jne
cmp
stos
int
nop
loope
xchg
pop
mov
and
inc
cmpsb
mov
pop
xchg
adc
enter
neg
xor
fwait
cmp
push
jg
push
into
dec
xor
mov
pop
inc
lea
pop
xor
add
xchg
adc
bound
movsl
sbb
jmp
pusha
cmp
add
stc
mov
pop
inc
lock
pop
xor
enter
jge
inc
dec
lret
jg
xchg
jno
mov
inc
sbb
aad
jge
mov
or
push
imul
inc
repz
inc
mov
lcall
cs
cmpsb
add
pop
hlt
xchg
jnp
cmc
pop
ret
pop
sarb
mov
jecxz
add
nop
inc
lret
outsl
mov
cmc
jb
jo
mov
fisttps
and
or
mov
cmpl
mov
fstpl
cmp
xor
inc
and
push
addr16
movsb
push
into
imul
dec
sbb
jo
mov
jmp
outsb
and
adc
nop
mov
push
inc
or
xchg
int3
inc
icebp
aas
xchg
dec
leave
cli
mov
stc
lcall
dec
xchg
sbb
adc
mov
mov
mov
jp
xchg
jbe
out
divb
mov
loope
push
mov
ljmp
out
js
sbb
cmpsb
add
sbb
mov
push
adc
jmp
pop
sub
jecxz
lods
popf
nop
test
or
or
and
fisubrl
stos
jp
iret
dec
mov
pop
sbb
push
test
mov
sbb
mov
popa
std
pop
fstpt
cs
es
pop
movsl
push
push
xchg
cmp
fwait
aas
scas
xor
xchg
xchg
pop
movsl
testb
shl
jl
out
pop
addr16
jnp
int3
insl
and
pop
push
scas
mov
sbb
xchg
std
push
cmpsl
adcl
outsl
mov
int
or
sub
push
jns
lods
outsl
and
addl
test
lea
inc
outsb
add
push
push
subb
sub
bsf
adc
jne
sar
test
shl
addl
or
xor
lret
ret
movl
push
xchg
sbb
xchg
imul
subl
cmp
lods
clc
fwait
or
xlat
pop
in
add
sbb
mov
leave
insl
inc
imul
loope
leave
flds
ja
loope
jmp
fs
push
adc
je
out
imul
sub
pop
sti
xlat
mov
adc
and
test
mov
stc
ss
stc
popf
add
xchg
lea
mov
sub
xchg
adc
xor
nop
adc
sahf
sbb
fistpll
pusha
jmp
push
pop
std
loop
mov
test
lods
loop
adc
dec
inc
dec
cmpsl
outsl
sar
mov
imul
xchg
cmp
cmpsl
movsb
and
xor
push
push
movsb
sub
addl
pop
stos
jp
test
imul
fists
fisttpll
or
pushf
jecxz
rcll
stc
hlt
sbb
and
aas
mov
adc
fcoml
push
push
lods
ret
pusha
gs
mov
fdivrs
dec
mov
repz
add
dec
movsb
and
mov
and
in
mov
dec
pop
push
dec
cmpb
xchg
add
stos
mov
fs
lock
mov
ret
or
mov
inc
lods
xor
decl
shlb
jmp
dec
and
mov
sbb
or
cli
push
and
sbb
or
out
jno
aaa
popa
push
jno
shll
dec
inc
lock
adc
stos
shll
outsb
xchg
mov
ret
rcr
cmc
dec
enter
mov
rorb
loope
dec
fdivl
mov
xor
sti
mov
gs
cwtl
xor
xchg
xchg
test
pop
mov
stos
xchg
jp
mov
xchg
andl
or
dec
and
xchg
adc
and
add
mov
inc
or
mov
lcall
test
rclb
xor
or
stos
rcr
push
popa
add
stos
dec
das
sub
cmp
shl
movsb
loope
jbe
dec
in
imul
mov
insl
cmp
dec
and
sbb
sahf
sub
cmpsb
subb
xbegin
je
mov
iret
pop
pop
aam
es
loope
mov
jno
out
leave
and
xchg
sub
and
mov
movb
aaa
or
stc
inc
pop
mov
push
pop
fistpll
scas
decl
test
sarb
aaa
pop
jb
subl
inc
mov
and
in
movsl
push
sbb
mov
mov
xchg
add
xor
cwtl
or
cmp
or
jo
xchg
aas
js
pop
nop
iret
jns
push
pop
fs
mov
mov
ljmp
dec
jecxz
inc
sti
frstor
or
out
xchg
jmp
ret
inc
insl
fst
push
outsb
rol
pop
cmp
es
scas
xchg
loopne
jno
int3
mov
lcall
dec
mov
xor
sbb
insb
xchg
shll
adc
repnz
pop
in
sbbl
jnp,pn
dec
sub
popa
mov
out
in
jns
inc
pop
sub
or
call
or
fidivrl
jecxz
das
les
lock
push
lea
imul
test
mov
inc
add
dec
subb
push
addl
and
inc
daa
jns
add
mov
stc
stos
cmpb
push
sahf
lock
pop
pop
frstor
mov
gs
gs
ret
mov
mov
mov
pop
js
xchg
cmpsl
pop
and
pushf
or
adc
pushf
pop
pop
inc
sbb
paddusw
add
push
ss
xchg
fnstenv
mov
pop
jmp
jecxz
lds
push
push
adc
xchg
fidivs
add
es
ret
shl
xchg
sbb
sbb
rclb
outsl
and
jge
outsl
mov
icebp
inc
push
sbb
sti
pop
push
loop
push
jb
mov
and
in
out
push
sub
lods
in
ds
sub
movsb
aas
cltd
mov
test
js
pop
inc
mov
xchg
pop
push
add
mov
mov
lahf
js
cmc
dec
mov
mov
rsm
out
loope
sub
push
jbe
xchg
out
arpl
test
jmp
movsb
inc
movsl
add
mov
adc
jp
aas
dec
or
mov
and
mov
inc
or
icebp
xlat
sbb
mov
push
cltd
add
enter
sbb
xchg
movsb
push
pop
jle
mov
int
inc
lea
call
mov
aad
ss
push
xchg
and
addl
sahf
and
js
out
enter
cmp
jmp
in
adc
cmp
or
mov
mov
mov
shrl
aaa
jo
inc
pop
cmc
add
int3
mov
out
mov
mov
sbb
mov
xchg
shl
arpl
push
dec
push
sub
in
sldt
leave
dec
xchg
cwtl
mov
imul
fnstenv
mov
movsb
repz
or
and
pcmpgtd
push
push
and
movsb
ret
sbb
or
sub
rcrl
roll
fdivr
add
rolb
mov
iret
movsb
ja
stos
aam
xchg
mov
outsb
sub
xchg
into
addr16
ficompl
inc
mov
and
adc
and
sub
ret
cld
add
in
mov
dec
sub
mov
mov
inc
adc
jmp
shlb
sub
inc
jmp
fmul
push
mov
loopne
sbb
test
and
lods
iret
test
pop
cltd
out
hlt
aas
add
jae
jae
inc
sub
std
jge
push
mov
cs
insl
repz
push
rcll
jbe
call
shl
xchg
mov
loope
mov
jae
push
sub
ljmp
popfw
stc
icebp
outsl
sub
outsl
pushf
xchg
outsl
pop
xchg
push
xor
or
iret
std
jge
rclb
sub
out
pop
inc
mov
arpl
xchg
bound
push
lods
mov
xchg
testb
push
dec
mov
mov
and
sbb
push
fisttpl
dec
sub
shrl
mov
ret
xchg
ret
leave
fbstp
nop
jno
nop
test
inc
stos
xchg
jl
dec
lods
dec
out
data16
bound
sub
test
xor
sub
or
mull
outsl
inc
add
andb
rclb
adc
fistpll
pop
insl
adc
mov
out
lret
or
bound
add
lods
call
cmp
xor
add
xchg
or
and
je
movl
sub
cld
add
shlb
notl
xchg
xor
cmp
mov
sbb
rorl
cmpsb
icebp
push
jp
inc
xor
dec
loop
out
cmp
inc
jl
in
and
test
js
lea
movsl
push
ret
fdiv
jae
pop
sbb
push
loop
leave
out
push
jo
cmpsl
fcmovb
sbb
add
dec
lret
jns
adc
lea
inc
aaa
call
dec
cmp
mov
mov
lcall
push
cmp
out
jo
xchg
ja
add
int3
loopne
cmpsl
xchg
cli
and
in
sbb
test
ja
cmp
pop
jle
mov
pushf
mov
mov
cs
sbb
lret
daa
cwtl
xor
pop
xchg
mov
in
arpl
in
scas
ss
pop
insl
mov
out
pop
cmp
insb
and
fistpl
lods
rcrb
dec
ret
testl
push
mov
mov
scas
cmp
in
int3
pop
adc
inc
fstpt
mov
mov
mov
in
jle
push
adc
icebp
insb
das
push
jp
adc
ja
fdivrl
xchg
aas
adc
fwait
popa
pop
sub
push
ret
or
dec
dec
test
aas
lcall
mov
sbb
lock
movl
insl
adcl
mov
lret
inc
pop
enter
pop
pop
bound
sub
cwtl
aam
daa
pop
mov
data16
push
imul
sti
sub
cmp
inc
add
call
insb
fmull
pop
insl
inc
mov
xchg
or
jns
and
push
sub
test
sti
in
pop
push
jo
lahf
jg
push
ljmp
insb
push
lods
mov
push
fisubrs
xchg
hlt
jle
and
pusha
arpl
orl
daa
iret
fcoml
repz
aam
arpl
xchg
pop
int3
fstpt
and
out
add
mov
insl
mov
jp
out
dec
push
cmpsb
lods
cmp
out
lods
loope
sarl
sub
and
sub
mov
sbb
inc
scas
dec
movsl
pop
jo
mov
push
push
pop
outsl
repz
mov
mov
rclb
mov
inc
mov
inc
or
clc
addl
sti
mov
into
lock
pop
pop
cld
test
mov
dec
add
cmp
inc
rcrl
mov
inc
sbb
jns
imul
call
and
clc
xor
jb
mov
sbb
add
insb
xchg
xor
and
testl
dec
rcr
pop
and
aam
movsb
in
outsb
js
addr16
pop
leave
clc
cs
popw
xadd
push
pop
aaa
in
xor
aas
int
add
std
cmp
push
dec
std
dec
lea
aad
inc
test
lahf
and
inc
add
jp
mov
xor
add
aam
push
inc
ret
xchg
sti
sahf
lret
xchg
xlat
inc
iret
imul
mov
xor
stos
icebp
cltd
leave
push
pushf
mov
dec
dec
mov
cs
loopne
inc
mov
lret
cmp
mov
in
ret
movsb
pop
fidivs
addr16
cld
insb
popf
aaa
mov
stos
lahf
das
inc
cli
inc
std
xchg
jl
xchg
std
cmc
mov
in
jg
xchg
and
jae
arpl
dec
push
sbb
jno
int
ret
mov
pop
lahf
and
inc
cmp
cmp
pop
jl
aam
dec
inc
mov
mov
fincstp
jns
aas
dec
test
add
push
xor
jmp
inc
cld
dec
pop
and
lahf
int3
mov
mov
jp
jmp
xor
adc
sbb
cli
in
cmpsl
cmp
jl
dec
jmp
push
inc
loope
pop
in
dec
xchg
ret
or
push
orl
ret
dec
jle
pandn
pop
pusha
frstor
sahf
sub
arpl
add
xchg
adcl
movsl
nop
sbb
sub
add
inc
jmp
inc
cs
mov
mov
repz
mov
dec
movsl
and
pop
and
and
addr16
cli
xor
and
push
adc
jp
sub
sub
push
ret
loope
push
gs
das
cld
push
scas
push
test
xchg
sub
aas
js
jmp
push
cmpsl
iret
pop
inc
xor
sub
inc
fidivrl
sub
mov
xchg
pop
ja
dec
pop
adc
test
sub
or
fiaddl
in
mov
inc
lods
cli
push
daa
outsb
gs
jnp
popf
mov
dec
sbb
dec
aam
xchg
lods
negb
faddl
in
cmpb
push
enter
fiaddl
jns
jecxz
or
aaa
pop
cmp
cmp
add
int3
orb
xchg
sub
js
idivl
hlt
xchg
cltd
in
and
and
push
loop
test
inc
dec
sbb
shlb
int
lret
xor
mov
and
mov
lcall
sub
adc
jno
int
cmp
adc
int
aam
xor
dec
outsl
jns
or
iret
or
insb
mov
movsl
out
lock
inc
add
outsl
rcrb
sbb
shlb
mov
push
out
orb
sbb
cs
or
fcoml
mov
cwtl
lds
sub
or
sub
ss
cmp
je
mov
push
sub
inc
cmp
test
sub
or
movsb
insl
pusha
mov
add
gs
mov
xor
sbb
cli
jg
mov
push
dec
pop
inc
inc
cmp
mov
and
mov
test
jnp
pop
into
out
sbb
addr16
xchg
into
scas
stc
das
add
and
lret
pop
add
lods
push
repnz
test
push
pop
push
sahf
sbb
test
cmp
xlat
outsl
fs
push
stos
pop
mov
enter
das
or
xor
or
jmp
popf
jns
mov
or
into
or
xlat
and
pop
mov
test
push
xchg
loope
dec
clc
sbb
fisttpll
aaa
mov
aaa
or
pop
xor
pop
inc
jmp
ss
ss
pushf
daa
mov
outsl
sbb
sub
push
loop,pt
popa
push
fmull
cmp
in
inc
jmp
addr16
in
add
daa
fs
mov
dec
leave
insl
imulb
ds
les
popa
das
dec
pop
adc
push
ja
mov
cmp
mov
inc
mov
inc
mov
and
icebp
por
jno
cwtl
cltd
xchg
xchg
cmp
add
mov
out
das
sub
sub
insl
add
insl
fists
and
push
repnz
lds
adc
sbb
push
xchg
jbe
mov
cs
sbb
mov
mov
mov
ss
hlt
or
test
popf
je
aaa
repz
add
adc
mov
dec
add
movsl
mov
test
std
mov
add
js
scas
lret
test
cmp
add
dec
mov
inc
fstpl
dec
ret
push
dec
sub
loop
loopne
scas
jecxz
outsb
cli
mov
dec
mov
or
sbb
sub
xchg
gs
mov
call
push
lods
push
lahf
sub
sbb
xor
mov
aam
push
xchg
sbb
stos
dec
lods
xchg
pop
test
xchg
dec
jge
mov
sub
arpl
or
and
or
sub
dec
xor
dec
ret
cmpsb
push
adc
out
push
mov
cltd
in
dec
push
add
arpl
mov
pop
lds
fcmove
mov
xor
pop
test
jb
push
sub
outsl
or
pop
mov
lods
mov
lea
xchg
jge
imul
lods
xchg
adc
roll
pushf
rcrl
xor
inc
fsubs
xorb
cmpsb
mov
lretw
cs
aam
aad
xor
jmp
ret
push
add
push
aaa
bound
insb
in
or
sbb
in
in
iret
out
gs
pop
ljmp
and
dec
xchg
dec
xchg
cmp
into
repz
push
out
push
mov
jmp
or
pop
lcall
xlat
cld
mov
and
lret
or
inc
xor
repz
stc
mov
jmp
leave
jmp
test
and
fs
bound
mov
cmp
or
loopne
dec
leave
xor
jae
rorb
je
push
stc
ret
fwait
ljmp
aam
mov
fwait
mov
outsb
or
cmp
adc
cmp
push
sub
leave
into
mov
mov
adc
enter
repnz
fildll
insb
cltd
push
push
push
xor
test
js
push
call
fs
xor
inc
arpl
mov
lahf
out
andb
cmpsl
je
push
push
ds
sbb
push
cli
inc
loopne
pop
cwtl
mov
jle
inc
ficoms
insb
loop
sahf
adc
jl
aaa
test
adc
push
in
xchg
cmpsl
popf
fisubrs
aad
mov
and
dec
out
pop
jl
and
dec
adc
repnz
or
daa
pop
jp
int
negl
xor
inc
mov
int3
iret
hlt
es
lahf
cmpsl
roll
int3
mov
stos
push
adc
inc
inc
loop
mov
rcrb
addl
jae
xor
cmc
pop
inc
lea
cld
push
add
xchg
mov
push
nop
stc
mov
aad
cmp
ret
fnstcw
movsb
popf
ljmp
cmp
jmp
lret
lret
cmp
idivl
and
sbb
arpl
cmp
sub
inc
pop
xchg
outsb
mov
stos
adc
into
or
add
mov
les
add
push
or
leave
lahf
xchg
lcall
and
inc
mov
pop
jp
sbb
fcmovne
mov
or
mov
divl
adc
mov
cmpsl
outsb
test
std
add
inc
and
bound
inc
adc
pop
cmp
xchg
pop
jmp
sahf
dec
and
xchg
inc
cmpsl
pop
add
iret
sub
aam
add
mov
aaa
repz
adc
jae
xor
aad
pushf
clc
js
xchg
ffree
repnz
lods
cli
xchg
popa
push
aam
ja
xchg
cmp
out
aad
push
pop
fwait
jbe
outsb
ret
and
pop
xor
add
dec
add
sahf
into
jge
repnz
sbb
andl
sub
adc
bound
jmp
clc
bound
shrl
or
mov
mov
mov
or
popa
mov
pop
es
dec
or
shll
pop
mov
cmp
jns
inc
jae
sbb
push
pop
sbb
cmp
inc
mov
mov
mov
pop
arpl
dec
call
and
ja
ljmp
stos
cmp
andb
add
lret
aas
cwtl
repz
cmp
sbb
push
inc
xor
fcomps
test
mov
or
cmp
sub
or
icebp
sub
sbb
and
mov
out
sub
and
push
cmp
xor
sub
xchg
outsl
or
pop
adc
mov
ss
inc
mov
out
jmp
mull
es
or
push
mov
icebp
mov
testl
and
xor
inc
orl
sbb
sarl
lret
addr16
xor
insb
push
dec
inc
sbb
imul
sbb
outsl
sub
and
cmpsl
out
enter
xchg
add
ret
jne
adc
pushf
sbb
mov
negb
lret
daa
and
stos
scas
and
lea
xchg
xchg
adc
pop
mov
cmp
ds
fcomps
ficoml
enter
mov
adc
dec
adc
scas
inc
add
or
adc
mov
mov
adc
mov
add
out
pop
out
rorl
cmc
repnz
dec
cmc
mov
sub
in
adc
dec
mov
adc
mov
cli
jmp
test
dec
stos
cmc
jno
and
dec
cs
pop
andl
jbe
clc
mov
mov
adc
jo
sbb
mov
fwait
test
dec
ja
in
clc
xor
mov
inc
inc
data16
movl
adc
jecxz
push
cmpsb
xchg
repnz
repz
mov
stos
pop
es
lret
outsl
mov
push
and
sbb
imul
adc
in
cmpb
cmpsl
pop
cs
ficoml
sub
pop
pop
push
pop
sbb
daa
xchg
jmp
divb
sbb
sbb
je
cmpsl
xor
mov
sub
shll
push
add
xor
nop
mov
push
fs
or
pop
rolb
mov
fidivs
jne
sbbb
dec
out
call
loopne
mov
mov
jo
dec
push
ret
adc
iret
inc
test
mov
fucom
repz
push
and
jae
fbstp
push
mov
xor
test
enter
shrb
and
mov
cmc
xchg
test
sub
xchg
out
ret
sbb
push
pop
sub
repnz
test
cmpsl
or
jp
inc
add
sub
in
mov
ret
add
pop
xchg
fcompl
xchg
sbb
jne
pop
in
pop
rcrb
arpl
cmp
mov
push
mov
inc
stc
mov
int3
shlb
int3
mov
mov
notl
xor
adc
lods
xor
xchg
push
lods
pop
pop
or
and
mov
mov
fs
cmp
icebp
movsb
add
dec
lret
push
out
mov
dec
dec
cmpsb
xor
and
cmp
inc
and
cmp
ja
mov
inc
cmp
dec
sbb
add
pop
jmp
stc
and
pop
leave
dec
mov
ljmp
mov
mov
or
rclb
adc
fdivrl
xchg
pop
push
insl
clc
xlat
mov
sahf
pushf
inc
xchg
jbe
testb
sbb
jp
scas
lahf
js
sar
mov
mov
loope
cmp
pop
shrb
push
xor
popa
imul
inc
cmp
mov
mov
addr16
inc
adc
arpl
inc
into
lods
fcmovu
xor
add
lods
jbe
bound
pop
mov
push
mov
and
sbb
aas
insb
pop
push
xchg
int3
popa
rcrl
ret
dec
mov
xor
dec
pusha
mov
sub
pusha
inc
add
add
inc
add
sub
das
xchg
cmp
push
jno
mov
scas
sbb
imul
xor
hlt
stos
pop
inc
rorb
adc
pop
pop
jnp
subb
cmp
cmp
and
insb
test
mov
xor
scas
mov
xchg
add
gs
int3
mov
pop
inc
xchg
test
cmp
inc
push
mov
repnz
and
pop
and
icebp
mov
in
jmp
pushf
in
inc
jae
mov
pop
ret
mov
cld
pop
and
push
add
or
imul
push
add
jmp
dec
popf
jmp
clc
lcall
dec
cmp
and
shll
mulb
and
inc
jge
dec
out
sub
push
fistpl
lock
sub
insl
dec
aad
cld
mov
aaa
dec
push
popf
nop
addr16
aam
mov
mov
pop
fnstsw
dec
mov
adc
cmp
push
mov
push
push
mov
stos
adc
jne
adc
adc
jne
insl
and
negb
aad
out
xchg
push
fwait
packsswb
aaa
fbstp
bound
push
jg
push
add
xchg
mov
ficomps
or
movsb
mov
leave
fstpt
stc
pop
mov
pop
mov
mov
dec
add
fmul
jb
daa
dec
movsl
cmc
jno
pop
cmc
jns
xchg
cli
sahf
mov
or
and
inc
sbb
inc
adc
xchg
jge
aaa
mov
push
test
sarb
mov
inc
jp
dec
cwtl
push
push
sahf
adc
gs
test
mov
lea
mov
rol
stos
mov
outsb
mov
push
sbb
adc
and
aam
test
hlt
mov
fnstenv
mov
sbb
test
out
andb
sub
xchg
jge
xchg
sbb
lock
in
lods
or
adc
xor
and
push
jo
sub
push
cltd
add
pushl
mov
push
pop
sub
and
cmpsb
outsl
pop
sub
movsl
push
mov
adc
lock
fimull
dec
shrl
scas
sbb
ss
cmpb
lahf
lock
mov
leave
jae
movsb
sub
xlat
xor
mov
mov
daa
xor
fs
loop
inc
jl
loopne
push
mov
add
loope
mov
mov
aaa
mov
adc
pop
lock
xchg
xor
lahf
fldcw
pop
push
dec
mov
add
inc
repnz
repnz
daa
xchg
or
mov
sahf
xor
add
jge
mov
outsl
loop
inc
enter
dec
lret
mov
shrb
bnd
adc
loope
xchg
add
test
rcrl
enter
rcll
ds
pop
nop
leave
cmp
push
std
push
jae
adc
data16
cmp
dec
adc
fcomip
jp
movsl
dec
clc
scas
in
cmp
mov
jge
sub
push
repz
repnz
cmc
mov
or
xchg
mov
fistps
lds
movsl
pop
pop
insb
mov
dec
add
sbb
mov
mov
jmp
push
cmp
je
test
int
mov
inc
mov
into
imul
cld
and
mov
jl
add
loopne
push
cmpsl
lret
mov
cltd
push
push
imul
iret
data16
jae
pop
xor
push
lcall
scas
lret
out
lds
pop
mov
mov
and
loope
stos
mov
mov
mov
lods
sub
xor
inc
or
cs
ds
and
or
dec
insl
imul
adc
mov
je
xorl
sbb
test
jo
imul
xchg
das
scas
push
dec
add
mov
xor
xchg
mov
jmp
repz
add
mov
sti
adc
cmp
mov
int
insb
loop
mov
jnp
iret
cltd
arpl
xchg
sbb
cmp
or
ficompl
xor
xor
xchg
jns
push
sbb
inc
bound
xchg
rcrl
inc
lcall
cwtl
mov
pop
sbb
cmp
cmpsl
out
int
sub
add
or
push
adc
lret
lods
lea
sub
les
add
fiaddl
lahf
in
sub
pop
mov
push
int
ss
add
push
jg
fcomip
mov
ja
xlat
jno
xchg
ljmp
stos
pushf
pop
in
xor
push
add
daa
dec
out
std
cmp
mov
insb
outsl
es
cs
out
pop
test
fdivs
jo
ljmp
sub
mov
mov
xchg
aam
movsb
fs
fwait
and
adc
dec
aas
xchg
jb
rcll
jo
jne
sti
pop
imul
cmc
push
push
push
push
sub
scas
cltd
xor
loopne
add
arpl
imul
pop
adc
adc
icebp
sahf
pop
loopne
jl
mov
cmpsb
mov
sub
adc
fsubl
pop
sahf
fildll
mov
and
xchg
pop
lea
insl
cmpsb
xor
pop
pop
mov
xlat
mov
push
and
loope
adc
xchg
mov
pop
fldenv
divb
rcr
js
mov
std
bound
xor
jle
test
lods
ret
outsb
rcrl
mov
pop
clc
mov
add
fisubrs
mov
inc
xor
pop
mov
cmpsb
ljmp
jle
sub
in
jae
dec
mov
mov
and
lcall
and
rcrl
in
or
cmp
mov
mov
push
or
jmp
daa
and
or
adc
aas
jb
stos
jmp
pop
jle
xor
jge
lds
xchg
jns
push
xor
lcall
sbb
ljmp
clc
pop
mov
test
iret
and
sub
andl
cmp
ret
adcl
into
decl
mov
stc
jnp
sbb
scas
or
mov
or
aad
loop
and
add
xor
arpl
test
or
aas
mov
add
dec
dec
jp
sbb
iret
or
dec
xor
and
add
movsb
sahf
cli
sahf
aad
in
lods
pop
mov
fldl
adc
in
and
ljmp
sub
pop
je
aam
or
xchg
lods
clc
add
mov
jl
add
sub
ret
inc
test
mov
sahf
mov
add
xor
xor
int3
inc
aaa
jle
cwtl
mov
xchg
pop
arpl
dec
pop
mov
out
or
jne
sti
add
stos
loope
add
dec
sbb
into
sbb
mov
popf
jmp
xchg
push
mov
aad
pop
sub
xor
aad
cmp
xor
adc
stos
adc
imul
jne
push
and
xchg
out
jne
pop
gs
loope
xchg
pushw
sub
mov
repz
cmpsl
xor
push
and
jno
pop
out
or
leave
adc
mov
or
pop
sub
insl
mov
xor
mov
xor
cmp
and
out
inc
jmp
popa
mov
insl
jg
iret
cs
in
and
in
into
notl
mov
dec
enter
pop
into
ja
test
pusha
and
mov
pop
imul
pop
or
add
hlt
and
fmuls
je
lods
jo
testb
add
pop
insl
push
xchg
dec
lea
push
aas
push
nop
rcl
xchg
je
pushf
pop
or
mov
addr16
loopne
push
pop
lds
dec
xchg
inc
cli
xchg
test
mov
jae
insb
xchg
shl
and
sub
sub
sbb
and
aas
test
or
fdivrl
add
xchg
mov
in
out
xor
scas
sbb
loop
add
imul
dec
rorl
stos
aam
cmp
repz
mov
sti
push
jmp
rcrl
loopne
xor
lods
lods
out
or
sub
fwait
cmp
pushf
movsb
sti
xor
xor
add
aaa
in
inc
cmp
jp
cmpsl
test
test
cmpb
cmp
fwait
loop
or
xchg
mov
push
dec
mov
and
fld
cld
mov
std
lahf
pop
mov
mov
xor
rcrb
push
or
ret
mov
out
jl
jle
cmc
fcompl
call
mov
mulb
and
ret
add
imul
rorl
cmp
jle
mov
sub
hlt
and
mov
pop
insl
outsl
mov
jecxz
xchg
cmp
popa
iret
jle
add
lods
lock
or
mov
loop
imul
je
jl
adc
push
imul
das
mov
and
add
push
pusha
xchg
add
mov
cmp
cmp
sahf
andl
stos
fld
cmp
push
jb
inc
int
out
xor
push
lret
inc
pusha
xlat
mov
fldl
jbe
pop
adc
pop
add
mov
xor
testl
dec
or
lcall
test
and
xchg
push
movsb
repz
fcmovu
movsl
jge
mov
incb
movsl
gs
push
test
and
mov
scas
pushf
adc
mov
scas
test
inc
pop
test
in
mov
mov
popa
loop
in
add
jle
ja
mov
fimuls
sub
pop
imul
mov
xchg
dec
scas
mov
ficoms
aad
jle
xchg
cwtl
mov
in
sub
mov
cmp
xor
mov
mov
std
xchg
dec
mull
pop
xor
jae
ja
out
sbb
xor
dec
pop
je
lods
cmp
movb
cmp
adc
push
or
cmp
test
mov
movsl
fidivrs
cmp
dec
pop
nop
int
shll
ljmp
lret
or
jno
add
inc
mov
cmc
sti
out
icebp
or
daa
out
jbe
out
shrb
insb
dec
cmp
fildll
and
ss
push
pop
ljmp
inc
mov
sub
pop
xchg
aas
jp
jmp
xlat
xor
out
sbb
imul
or
aaa
scas
lods
sub
mov
outsl
dec
sub
jae
js
cmp
int3
inc
data16
xchg
in
test
aas
divb
sub
fdivrs
sbb
push
imull
neg
jmp
test
fmuls
call
pop
rol
inc
scas
sbb
dec
sub
shl
xchg
add
mov
enter
dec
inc
jle
dec
add
dec
enter
notb
push
fiadds
sbbl
jnp
imulb
mov
fistps
les
push
dec
loopne
stc
lods
add
or
inc
fidivrl
cmp
addl
jo
cmc
scas
push
out
sbb
pop
arpl
pop
mov
adc
or
lock
and
adc
test
inc
scas
xchg
cs
into
lea
ljmp
inc
inc
rcrb
pushf
cmc
mov
dec
and
add
inc
in
lret
std
mov
iret
loop
jnp
xor
jl
cmp
cmp
movsl
jp
and
loop
sub
loope
xlat
sbb
mov
out
adc
add
popf
int
push
mov
int
gs
in
iret
and
lret
fsts
pop
test
ja
or
dec
jns
adc
in
xchg
pop
icebp
orb
pop
push
cmpsb
stc
cmpsb
mov
pop
clc
or
test
or
inc
dec
sbb
sbb
decb
push
outsb
cmc
sbb
repnz
push
jae
inc
mov
xor
and
ds
sbb
int
cmc
rolb
lcall
sub
aad
add
or
mov
adc
xchg
mov
pusha
xchg
and
cmp
cmp
imul
and
insl
stos
imull
and
and
xchg
sahf
adc
dec
std
nop
mov
add
and
lock
rcll
addl
sbb
movaps
jmp
xchg
adc
sbb
jae
lods
ds
dec
hlt
dec
jbe
pop
hlt
mov
leave
sar
jl
xchg
shrl
xor
lret
jg
mov
sbb
lea
pop
jae
sbbb
xchg
inc
xor
xchg
dec
mov
adc
stos
iret
or
stos
push
xor
and
leave
cmp
xchg
or
sbb
mov
rcr
mov
ds
push
mov
dec
xor
sub
mov
das
mov
and
cmp
mov
mov
gs
pushf
pop
out
shlb
dec
jbe
int
test
push
pop
and
int3
dec
add
adc
repnz
out
icebp
pop
icebp
sub
and
mov
and
bound
jae
outsb
xor
cmpsb
add
dec
or
jmp
dec
sub
and
ja
jae
ds
popa
or
sarb
jne
in
jg
push
cmp
xlat
lahf
cmp
into
dec
cli
jmp
cmp
cmp
adc
mov
int
into
test
syscall
sbb
movb
fists
jno
mov
out
repz
sub
into
loop,pt
jl
popa
fdivr
and
sbb
push
xor
lcall
adc
shlb
movb
stos
cmove
in
jl
push
clc
mov
cmpsb
fbstp
jmp
cmp
xchg
or
push
stos
mov
mov
sbb
add
in
mov
test
out
pop
ret
jns
jp
xadd
jo
mov
int
sub
clc
ficoml
pusha
fndisi(8087
add
sbb
jnp
or
mov
mov
insb
push
xor
sbb
sub
mov
mov
sub
outsb
xlat
notb
aas
fpatan
xor
pop
and
add
xorb
inc
inc
or
dec
jge
insb
sub
outsb
jae
out
sbb
or
jno
jl
cmp
insl
push
das
subl
push
ljmp
movsb
scas
orl
xchg
jl
xor
sahf
sbbb
in
push
inc
xchg
popf
pop
dec
jecxz
aaa
pop
stos
inc
mov
test
mov
xchg
jmp
xchg
inc
or
std
mov
adc
sarl
mov
inc
movl
sbb
and
call
jb
add
mov
fnstcw
sub
rol
push
or
in
or
jl
gs
push
pusha
jno
pop
rorl
mov
sbb
mov
es
fcoml
cmp
adc
jg
leave
testb
insb
stos
adc
stos
mov
sahf
inc
sbb
xor
cmp
rcrl
testl
iret
ret
add
es
data16
js
cmpsb
pop
pusha
fcompl
js
lcall
xor
inc
inc
enter
testl
dec
lret
and
dec
pop
enter
sub
push
into
jecxz
cmp
aad
or
push
jle
mov
dec
loop
mov
mov
mov
mov
or
shlb
pop
sub
cltd
in
into
movsl
ficomps
stos
jbe
out
sub
adc
dec
ljmp
jno
xchg
lea
sbb
mov
or
sbb
rorb
adc
mov
mov
cmp
sti
pop
das
movsl
ret
cmp
mov
fsubs
jecxz
ljmp
xchg
fsubrl
mov
pop
push
pshufw
add
notb
fisubl
fsts
es
stc
int
mov
fwait
pop
xor
out
roll
out
out
mov
imul
xorl
out
and
sbb
in
std
push
je
jg
je
sbb
lahf
sub
rorl
mov
add
push
out
movsb
dec
and
sub
lds
mov
jge
cmp
add
lods
hlt
cmc
jl
mov
or
lock
adc
ja
test
inc
hlt
push
jle
les
mov
movsb
out
aam
mov
cmp
call
inc
jmp
mov
sti
xchg
add
dec
adc
xor
sub
push
xor
jb
fimuls
sbb
lds
enter
jb
mov
mov
adc
dec
mov
xchg
cmp
scas
shr
inc
addb
scas
xchg
pop
cmc
sti
mov
dec
sub
mov
out
negb
sub
adc
into
ret
mov
pop
pusha
das
shlb
aad
and
mov
pop
ja
nop
or
inc
jae
and
mov
adc
xchg
mov
dec
and
test
aad
dec
mov
xlat
dec
mov
roll
mov
mov
push
push
lret
xor
aaa
mov
fdivrl
popa
in
lret
adc
fisubrl
adc
or
mov
pusha
cs
push
lea
jnp
rcrl
cmp
mov
or
or
cmp
dec
je
lods
sub
sbb
fs
xor
in
xchg
lds
leave
cmp
les
jnp
fcomp
or
mov
add
out
lods
jge
sub
sbb
inc
push
nop
testl
cmpsl
stc
sbb
mov
mov
and
mov
lods
mov
pushf
and
int3
sub
fisubrl
inc
leave
pop
push
or
ret
pop
rol
fdiv
mov
push
lock
arpl
in
xor
lcall
in
pop
inc
push
pop
stc
xchg
hlt
inc
mov
mov
das
test
push
fdivrl
loop
xchg
incb
add
sub
xor
mov
mov
push
or
dec
xchg
push
mov
jae
in
mov
adc
stos
call
into
iret
mov
mov
add
jle
ficoml
psllq
pop
mov
mov
pop
hlt
xchg
aas
mov
pop
mulb
add
jbe
jmp
rorb
mov
pop
int
mov
lods
or
lcall
ffree
and
xor
mov
cmp
movsb
add
icebp
dec
xchg
pop
jnp
repz
negb
call
jge,pt
sahf
xchg
fsubrl
mov
jg
sub
out
mov
mov
cltd
sbb
mov
addr16
lods
fxch
push
lock
cmp
adc
outsb
aam
jno
pushf
addr16
push
xlat
dec
mov
rcrl
sbb
loope
xchg
ss
mov
iret
faddp
dec
out
inc
push
popf
mov
push
sub
icebp
movsl
dec
rclb
inc
cmp
inc
insl
inc
insl
shll
bound
aaa
pop
and
pop
and
out
enter
mov
stos
xchg
push
call
jecxz
mov
mov
pop
adc
pushf
jge
pop
and
pusha
outsb
cmp
stos
and
mov
mov
xor
dec
and
sti
lahf
add
cmp
iret
push
pushf
dec
xchg
cmp
lods
adc
pop
xchg
outsb
or
popf
out
jnp
loope
movsl
pop
ds
mov
fldcw
fsubs
sbb
test
inc
pop
out
and
cltd
in
arpl
sti
cltd
dec
pop
push
mov
xor
xchg
mov
xchg
and
lret
shll
mov
mov
mov
fisubl
sti
mov
and
andl
scas
js
xchg
jno
inc
mov
sbb
movsl
repz
xchg
xor
hlt
andl
lock
aas
adc
ss
sub
xor
add
test
mov
jl
rclb
inc
pusha
xchg
js
push
scas
sub
popa
loop
fisttpll
pop
cmp
mov
jo
out
push
icebp
push
mov
adc
lret
jp
cmp
test
lret
sbb
bound
out
sti
xchg
mov
xchg
and
fists
mov
push
xor
fistpll
jle
popw
into
or
mov
and
or
sub
xchg
push
jne
or
cli
push
mov
mov
mov
insl
lret
push
leave
pop
sar
xor
cli
repz
scas
mov
insl
imul
push
gs
inc
sub
pop
mov
mov
adc
outsl
insl
mov
inc
push
test
mov
add
xchg
push
enter
xor
sbb
cmpsb
push
adc
inc
pop
lret
dec
lock
mov
lret
mov
mov
stc
or
popa
repnz
inc
add
inc
cmpsb
jp
push
pop
aad
flds
mov
jecxz
repz
inc
jns
cmp
and
pop
cmp
and
push
or
inc
dec
sbb
aaa
je
add
or
push
push
rcrl
fiadds
mov
loope
dec
jg
inc
or
imul
arpl
pop
or
iret
push
aaa
dec
push
mov
mov
popf
mov
mov
lea
mov
push
mov
inc
jge
mov
mov
xor
mov
aam
adc
push
sti
pop
mov
push
jle
xor
inc
push
jl
mov
dec
add
lea
and
mov
and
xchg
xor
mov
jns
cmc
iret
repz
pop
pushf
out
mov
in
insb
lret
loope
jl
sbb
and
dec
sbb
std
and
xlat
dec
clc
inc
lcall
push
jmp
test
pop
xchg
jp
mov
fidivl
call
roll
scas
fs
cwtl
mov
lret
scas
dec
sub
xchg
roll
shlb
or
movsb
xchg
sub
les
adc
mov
add
call
jmp
pop
mov
stos
leave
arpl
mov
stc
in
jno
push
sub
sub
sub
xor
movsl
push
or
mul
jp
jecxz
call
inc
ja
add
inc
data16
dec
sbb
cmpsl
pop
cmp
push
in
mov
shll
gs
sub
stos
sbb
mov
les
shrb
shrl
movsb
enter
dec
gs
jge
je
dec
push
xchg
in
fs
mov
xchg
shrl
push
xchg
dec
push
stos
xor
out
ds
jae
cmp
xor
jle,pn
lret
insb
dec
mov
add
in
int3
in
dec
push
sub
imul
loopne
push
sbb
add
cmp
pop
popf
cmp
dec
and
lock
mul
or
or
stos
xchg
dec
push
mov
jb
xor
mov
fs
loopne
lahf
dec
ret
mov
dec
or
das
rcll
ljmp
mov
cmp
clc
dec
sahf
movsb
adc
jp
mov
ret
dec
scas
lock
xchg
cmp
sub
stos
ficoms
sti
xchg
jmp
jmp
mov
fs
mov
mov
jmp
ja
je
xor
sar
pop
lea
jae
sbb
gs
jg
push
out
push
jo
fwait
or
std
mov
aaa
mov
daa
or
push
gs
mov
pop
dec
fwait
xchg
scas
shrb
clc
mov
mov
xlat
clc
sub
jbe
push
sub
push
sub
and
sti
rcr
std
pop
daa
pop
cli
adc
lret
repz
cmp
int3
dec
sub
fdivr
mov
xchg
mov
out
jmp
pop
fimull
popf
mov
xor
hlt
mov
cld
lret
adc
scas
mov
sub
popf
imul
out
pop
push
xor
aam
fsubrs
add
mov
inc
movsl
mov
push
inc
fdivrp
in
dec
inc
popf
std
clc
jmp
sub
outsl
imul
clc
sub
xchg
je
mov
popf
sti
pop
sub
adc
pop
fsubl
stos
push
jp
jo
icebp
or
sub
push
sub
push
insl
dec
pop
push
jb
aam
mov
fstpt
and
ret
jnp
mov
cmp
add
sbb
xlat
jmp
mov
pop
jo
scas
and
pop
das
cmc
add
data16
dec
repnz
cmp
push
aam
sbb
mov
xor
jle
or
adc
je
mov
movl
jecxz
mov
rolb
xchg
jno
sub
mov
sub
add
lret
test
cmp
mov
inc
xor
adc
test
push
mov
and
push
add
add
xchg
push
dec
mov
ret
jg
pop
push
push
ret
enter
shlb
bound
mov
pop
stos
mov
jnp
mov
leave
cs
ret
pop
pop
dec
adc
mov
out
cmpsl
lods
shlb
ds
pop
jnp
daa
cmp
or
lds
movsl
cmc
aad
fs
repnz
clc
cmp
loopne
adc
pop
xor
cltd
ret
lds
inc
xchg
and
cmp
rorb
loopne
stc
cs
jno
nop
adc
nop
lret
sub
push
repz
mov
nop
clc
rol
pop
mov
scas
sub
sbb
lcall
pop
loope
mov
pop
shl
cmp
xor
jecxz
jno
leave
mov
pop
dec
inc
sbb
dec
lea
mov
jmp
movsb
adc
cmp
pop
pop
adc
fidivrl
dec
stos
ja
fcmovnu
mov
sub
cs
mov
sub
dec
rcr
fucomip
pusha
push
and
lret
xchg
es
pushw
push
pop
sub
mov
dec
adc
lods
dec
jle
add
or
mov
sbb
xchg
cmpsb
cld
leave
daa
add
sub
cmc
js
mull
push
dec
mov
mov
add
nop
pop
cmp
sub
cmp
push
pop
hlt
setne
push
imulb
adc
test
pop
cmp
ds
fistpll
iret
xor
pop
and
imul
xchg
sub
addr16
push
or
inc
mov
lahf
mov
les
xor
sbb
nop
jg
out
cmp
psubusb
stos
jb
stos
cmp
popf
jmp
inc
jo
sti
xor
dec
mov
jecxz
sbb
aad
or
lds
aad
daa
jbe
adc
insb
xchg
jo
adc
stos
mov
adc
fsubl
cmc
pop
adc
mov
out
fnstsw
mov
inc
outsb
push
xchg
int
pop
sarb
dec
ds
pop
mov
push
mov
sub
mov
inc
xchg
js
cmp
or
lock
and
les
mov
mov
into
cli
addr16
sti
adc
mov
and
jp
fnsave
pop
pop
pop
and
push
cmpsb
cmc
adc
pop
aam
mov
mov
gs
sub
in
or
shlb
push
cwtl
inc
dec
ficoms
mov
cmp
mov
ljmp
scas
push
inc
ficompl
in
mov
ljmp
xchg
cmp
mov
mov
ret
jae
repz
mov
push
inc
dec
push
cli
pop
pop
iret
sbb
jmp
dec
mov
call
sub
xchg
incb
adc
aas
outsl
jecxz
out
lret
outsb
push
call
sbb
lods
arpl
cmp
dec
scas
je
ljmp
mov
sbb
mov
mov
sbb
mov
mov
inc
pop
and
cld
mov
movsb
cmp
and
adc
sub
shlb
mov
call
push
fwait
leave
ljmp
push
push
mov
loopne
leavew
mull
lahf
stos
ja
lock
push
dec
sbb
lahf
test
pop
cs
data16
xchg
jg
aam
xor
mov
in
sub
fsts
lock
jno
inc
add
jp
inc
cwtl
xchg
imul
insl
lret
sub
pop
push
or
sub
filds
inc
mov
cld
xchg
fisttpl
adc
ja
popf
cmp
stos
mov
lods
sub
mov
bound
sbb
adc
inc
sti
in
sub
xor
lock
xchg
or
push
and
bound
push
mov
jecxz
dec
sbb
int3
xorl
mov
fstps
cmpsl
in
sub
mov
dec
pop
cmp
outsl
dec
mov
add
cmp
cmp
inc
loop
add
xchg
push
xor
stc
cmpsl
cmp
jecxz
add
cmpsl
mov
shrb
push
mov
inc
arpl
lret
fldcw
mov
push
inc
push
inc
xchg
lods
cli
in
arpl
dec
sub
rcrl
imul
and
test
jge
cwtl
cmp
ljmp
ds
inc
adc
xchg
push
push
inc
mov
stc
js
int
sub
adcl
in
insb
dec
js
icebp
cmp
fidivs
adc
mov
ss
idivl
lcall
test
pusha
dec
in
adc
in
mov
inc
add
mov
nop
adc
add
push
int3
cmpsl
das
pop
mov
sbb
lods
jmp
add
mov
cli
cmpsl
add
pop
in
cmp
add
push
cmp
rcpps
and
js
push
nop
outsl
push
add
lods
ror
jnp
int
data16
out
out
or
or
jb
mov
cli
xor
test
clc
xor
and
lcall
js
rcll
xor
adc
pop
mov
rcrl
sti
lods
mov
inc
aam
in
xor
pop
push
daa
jnp
mov
divl
pop
sub
idivl
cmpsb
mov
lds
jl
loop
push
out
dec
or
xrelease
lds
sbb
cltd
roll
popa
pop
or
into
jl
scas
mov
mov
dec
repz
gs
sub
sub
inc
cwtl
enterw
fadd
lea
jg
mov
in
aaa
psraw
cmp
decl
jl
in
adc
cmpsl
or
mov
inc
out
cld
push
je
jecxz
mov
push
xchg
pop
xchg
cmp
out
mov
leave
rclb
and
rolb
jns
inc
dec
scas
jns
out
mov
jl
adc
mov
imul
dec
std
rclb
test
inc
jb
xor
or
dec
adc
scas
pushf
mov
inc
ljmp
add
push
mov
pusha
and
outsb
mov
pop
scas
jmp
mov
sub
jg
cltd
imul
scas
pop
lods
jo
pop
jae
aaa
shll
mov
sub
cmp
test
mov
jo
lods
testl
jb
daa
mov
aad
data16
adc
cmpsb
ret
lahf
or
mov
xor
and
jne
cmp
popf
mov
jecxz
pop
sbb
aaa
fwait
dec
sgdtl
sub
dec
cld
mov
imul
movsb
adc
dec
stc
sub
mov
aaa
repz
pop
leave
lahf
mov
nop
in
ret
jnp
xchg
mov
cmp
test
mov
dec
lods
adc
lahf
xchg
lea
scas
sbb
push
mov
xchg
lret
ja
or
call
pop
in
ret
dec
ret
mov
mov
sarb
pop
in
mov
aad
or
add
sbb
or
lock
andl
pop
mov
loope
push
jl
mov
push
imul
popa
mov
inc
leave
jle
mov
sti
xor
dec
test
mov
mov
cmp
icebp
stos
jb
leave
pop
enter
lcall
cwtl
pop
sbb
mov
mov
mov
xor
jo
aam
lds
insb
xchg
icebp
mov
js
inc
xchg
sbb
pushf
and
lea
jne
sub
popa
ljmp
jne
sbb
push
pop
mov
arpl
leave
das
sub
cmc
rorl
ja
repnz
sub
mov
sub
jb
sub
iret
out
mov
loop
mov
pop
ret
add
in
add
outsb
rcll
sbb
or
dec
aaa
aaa
mov
fsubl
loope
rcl
sbb
les
setge
inc
ret
xchg
imul
gs
dec
ret
incb
aam
sahf
idivl
lods
fadd
adc
sub
xor
lock
out
out
mov
dec
xor
jmp
in
xchg
and
cmp
pop
push
jae
arpl
mov
das
popa
push
in
sbb
pop
sub
in
pop
push
rorl
fwait
movsl
stos
mov
xor
test
or
adc
jecxz
clc
dec
and
inc
lret
lods
imul
xlat
pop
ja
inc
jb
sbb
clc
mov
sub
push
mov
sub
cwtl
mov
xchg
xchg
lahf
or
jl
aam
cld
mov
push
mov
addl
add
lcall
add
and
out
push
xchg
mov
daa
nop
xchg
pop
fistps
repz
mov
xchg
xor
pushf
dec
test
or
adc
jno
mov
scas
pop
add
jecxz
loopne
jnp
mov
dec
call
repnz
inc
leavew
pop
aaa
and
xor
jb
insl
xor
rcll
int3
rorb
dec
outsb
dec
cltd
ret
mov
pop
inc
sbb
shlb
add
lods
and
or
sub
sarb
popf
ljmp
inc
push
lret
or
adc
outsl
lods
aam
xor
pop
and
push
movsb
xor
mull
mov
loop
add
aam
mov
sbb
inc
lahf
outsl
jp
add
add
push
pop
test
fwait
in
dec
mov
mov
pop
sbb
push
cmc
xchg
fisttpl
dec
sbb
in
push
mov
js
inc
mov
loopne
jge
push
xlat
mov
xchg
fucomi
xchg
adc
repz
jb
mov
mov
shll
cmc
xor
jmp
pop
mov
jecxz
flds
mov
mov
push
outsb
pushf
xchg
in
sbb
add
jp
mov
jbe
pop
data16
jle
jl
daa
sahf
lahf
hlt
sbb
dec
pushl
insl
sub
cs
movsl
call
add
stc
jl
mov
sub
gs
pop
das
int3
cmp
arpl
insl
mov
dec
adc
jge
mov
fiadds
mov
lea
inc
fdivr
shll
filds
sub
pushf
hlt
pop
outsl
xchg
shrl
int
call
mov
jo
jne
in
mov
fs
mov
jge
mov
jne
imul
mov
jnp
data16
xchg
xor
xlat
xor
mov
fs
sahf
add
out
aaa
pop
cmp
imul
xlat
mov
sbb
pandn
cmp
push
ret
xor
stc
pushf
es
sbb
mov
push
sarl
adc
out
and
or
loopne
xor
xor
in
cmc
rcl
xor
xchg
pop
aas
and
and
push
and
mov
int
xor
gs
sub
or
mov
ja
shlb
adc
int
ja
add
inc
out
sub
and
out
aaa
mov
icebp
cmp
push
cmp
adc
mov
enter
mov
mov
mov
adc
mov
and
push
xor
or
add
sti
or
in
stc
xor
ret
sti
aam
lahf
jo
mov
xor
aam
inc
testl
aas
int
jcxz
stos
push
popf
outsb
sub
mov
xor
push
mov
js
push
dec
js
sub
or
test
jge
pop
fwait
push
jns
shlb
mov
shld
jns
sbb
jnp
ds
xor
out
subl
xor
mov
cmp
pop
jne
inc
pop
pushf
test
out
xchg
notb
cmp
repnz
cli
in
idivl
sub
outsb
mov
and
ret
mov
xlat
ss
jge
insb
jns
inc
stc
xchg
loop
add
mov
clc
mov
daa
or
push
shr
into
sti
ljmp
lods
shrb
mov
and
nop
xor
mov
shr
adc
or
push
outsl
out
inc
adc
clc
into
fs
aad
jo
sbb
enter
add
test
enter
rcrb
popa
lret
enter
andb
es
add
push
aam
sub
jl
int
cld
mov
fcom
cmp
dec
sub
pusha
dec
xchg
ljmp
jecxz
dec
xchg
jns
push
adc
dec
aad
jge
scas
jmp
stc
dec
das
movsb
add
cmpsb
pop
mov
cltd
inc
pop
mov
dec
fsubl
xchg
dec
push
mov
and
jne
mov
int
sarl
xor
and
mov
add
loope
xchg
sbb
das
fldt
or
fisttpl
add
mov
cld
insl
mov
or
dec
ss
andl
ficoms
inc
and
xchg
inc
xchg
lret
pop
xchg
in
lds
adc
ja
mov
stc
jl
add
int
xor
mov
mov
rolb
add
pop
test
lret
dec
xchg
maskmovq
notl
jns
mov
pop
in
xor
clc
stos
pop
movsl
repnz
pop
jbe
ja
pop
sub
outsb
push
cmp
mov
int
test
push
imul
js
and
pop
pop
fadds
rcr
push
jae
mov
mov
pop
and
in
pop
incl
scas
mov
lock
out
xchg
mov
test
subl
ds
jb
xor
lret
das
mov
out
mov
mov
mov
je
pop
scas
adc
push
pop
sbbl
icebp
and
mov
xchg
xor
jmp
xor
negl
mov
notl
and
dec
adc
dec
xorb
mov
pop
ror
inc
pop
mov
xchg
aam
inc
insb
outsl
jp
outsb
out
sub
test
mov
and
xor
mov
lods
es
xchg
idivl
push
sbb
jmp
mov
rol
daa
cmc
out
dec
cltd
dec
mov
lcall
sbb
and
push
pop
mov
xor
stos
jmp
mov
adc
xor
in
pop
cltd
cmp
mov
adc
sar
jb
and
pop
sbb
xchg
add
loope
and
xlat
push
mov
popf
out
adc
dec
bound
mov
mov
icebp
jge
or
cmpsb
xor
lods
jge
or
sti
and
fistps
jmp
shlb
xor
cwtl
sub
out
movsb
or
aaa
data16
pop
mov
std
rcll
adc
add
cmpsb
mov
insl
int3
adc
aad
ret
mov
int3
adc
dec
repz
xchg
pop
dec
mov
push
jmp
push
inc
or
lods
stc
leave
addl
xor
roll
mov
das
mov
in
data16
mov
pop
or
adc
jno
mov
pop
out
andl
std
xchg
aas
mov
decl
pop
nop
push
push
ss
iret
dec
lods
xchg
ret
nop
xchg
push
mov
in
orl
stc
lcall
cmpl
int
je
inc
leave
xchg
cltd
mov
pop
push
in
shrl
pop
mov
mov
pop
into
ret
inc
loope
lret
mov
cld
and
mov
loope
scas
loopne
sub
dec
icebp
add
push
cld
sbb
push
or
lcall
adc
test
jno
mov
in
jne
scas
pop
sahf
push
mov
adcl
cmp
push
lret
mov
fistl
sub
add
or
in
lret
call
int
pop
push
aam
loopne
lcall
inc
jge
inc
imul
into
push
and
ljmp
push
subl
xchg
fadd
push
push
add
xor
mov
jg
and
mov
imul
cmpsb
int
pop
sbb
sbb
xchg
or
int
test
inc
orb
test
arpl
pop
adc
std
das
in
sub
bound
pop
lret
sbb
xor
and
imul
sbb
movsl
or
fwait
push
cmpsb
rclb
outsl
inc
sbb
or
vphaddubq
adcb
jle
cs
mov
adc
repz
pop
pushf
es
pushl
push
mov
sbb
xchg
adc
mov
sbb
xchg
cmp
cwtl
mov
pushf
pop
inc
push
insl
mov
or
add
jmp
xchg
jb
testl
sub
into
fucomp
test
rorl
push
les
mov
xchg
add
iret
movl
adc
push
sti
push
jns
shrb
push
dec
fdivrl
inc
out
fsubs
fucomi
imul
divb
enter
sti
push
or
mov
or
cwtl
jno
mov
sar
roll
inc
and
mov
fs
add
loopne
fldenv
hlt
repz
inc
aaa
mov
lahf
cmpsl
mov
lods
jmp
sbb
das
mov
movsl
and
fimull
daa
fistpl
or
cs
and
and
adc
cmp
ror
arpl
loopne
push
push
cmp
leave
loopne
out
lods
sbb
cmc
mov
int
or
mov
fs
adc
in
or
add
push
sbb
scas
sbb
pop
xor
xchg
sbb
gs
das
adc
sub
mov
or
jb
cmp
xor
mov
fisubrl
ljmp
pop
cmp
pop
mov
repz
xchg
push
jne
xchg
cmc
pop
mov
dec
mov
cmp
add
jb
sbb
sub
mov
push
ret
int
or
cmc
or
inc
adcb
cld
arpl
xchg
out
arpl
add
cmpsb
int
jl
dec
fistl
lret
mov
mov
jmp
inc
daa
jp
cmc
addr16
into
hlt
or
dec
js
and
jne
sbb
mov
lods
xchg
test
fmull
addr16
or
xchg
outsl
mov
lret
pop
in
mov
xchg
mov
inc
mov
and
out
std
mov
and
dec
xor
mov
or
inc
lock
aaa
xchg
cs
dec
pop
push
int
int
scas
test
insb
push
pusha
cltd
cmp
xchg
outsb
lahf
jmp
inc
jnp
lea
pop
idivl
mov
push
cld
int3
adc
out
or
int
mov
xchg
std
das
or
cmpsl
sahf
adc
or
jae
gs
xor
rclb
icebp
rcrb
adc
lret
pusha
in
inc
scas
mov
sbb
es
icebp
xchg
pop
push
xlat
add
inc
xor
into
ljmp
cmp
sbb
or
sbb
call
int
and
sbb
jg
jmp
cmpsb
mov
andb
xor
je
push
loope
cs
adc
fnstcw
aaa
pop
or
ffreep
cmpsb
add
push
mov
jl
mov
cmp
pop
mov
ljmp
inc
jae
and
lods
mov
in
or
push
jae
int
lret
push
jl
icebp
int
bound
inc
mov
dec
pop
gs
inc
dec
icebp
and
sub
adcl
int
mov
inc
add
push
sahf
push
push
pusha
pop
mov
les
shr
or
ret
xor
mov
mov
shrl
pop
xor
sub
gs
mov
jne
ljmp
inc
mov
loop
daa
jne
aaa
pop
xchg
dec
ret
push
pop
mov
inc
fbld
repz
pop
roll
dec
gs
ss
iret
mov
sub
fidivrs
mov
out
pusha
xchg
ror
cmpl
mov
add
dec
push
xchg
fcmovnbe
rorb
dec
cmp
push
movsb
subl
xchg
cs
mov
ror
repz
cmp
dec
cltd
mov
rcrl
push
ljmp
fldenv
shlb
add
int3
ss
cli
inc
sahf
mov
outsl
in
test
mov
adc
shlb
mov
popa
es
mov
and
ds
xchg
outsl
lcall
gs
inc
ret
insl
cmp
shl
loopne
ret
repz
clc
sarb
outsl
mov
jnp,pn
pop
jns
pop
sub
and
sbb
lret
lods
pushf
sahf
jne
sbbl
cmp
inc
jbe
jb
popf
xchg
pop
add
mov
and
push
or
fildl
in
jns
or
movl
aas
and
out
je
mov
pop
xor
adc
xchg
pop
dec
and
add
rorl
xchg
and
dec
push
movb
inc
aas
sbb
xchg
cmp
out
mov
lods
rclb
in
inc
cmp
or
popf
fistpll
popf
jb
repnz
jmp
ss
fnstsw
pusha
mov
mov
test
mov
pop
xor
and
jbe
out
mov
jae
ret
cmp
fadd
jg
ret
inc
dec
xor
into
test
in
cmc
adc
jmp
dec
inc
jo
js
fcoms
inc
test
rcll
mov
in
mov
xor
xchg
sbb
scas
xchg
mov
mov
cmp
rorl
xchg
dec
sub
xor
mov
das
lods
icebp
and
loop
rorl
dec
inc
jnp
cltd
inc
mov
push
fwait
mov
aas
scas
loopne
dec
or
cmc
jp
outsb
xor
cmp
loop
imul
std
pop
mov
fiaddl
mov
xchg
aas
fidivrl
push
dec
xchg
pop
leave
test
jl
mov
leave
jge
ret
shlb
shll
adc
fmul
dec
outsl
fs
dec
testb
mov
mov
dec
jg
ss
xchg
popf
cld
shr
mov
popf
sbb
sbb
jbe
popa
std
push
int3
and
int
scas
in
sub
jmp
push
xchg
cmpsl
loope
pop
push
mov
lds
push
mov
cmp
jmp
gs
in
orb
push
pop
je
fnsave
jae,pt
and
xor
sub
in
sub
jb
loopne
mov
es
js
pop
lret
insl
jno
sub
cltd
das
repnz
mov
ficoms
push
loope
into
mov
mov
mov
pop
mov
or
adc
andb
cmpsl
out
mov
adc
cmc
and
enter
les
fcomps
daa
loop
test
push
jecxz
jl
ds
lea
mov
push
cltd
gs
mov
mov
xchg
sub
aam
jne
inc
lods
les
xchg
mov
int
movlps
sbb
or
push
ud2
adc
and
xchg
mov
mov
xchg
jo
pop
and
jbe
insb
and
mov
xchg
pop
shl
sbb
unpcklps
popf
inc
clc
inc
mov
adc
add
roll
stc
jne
or
xchg
loop
fldt
add
aas
cmpsb
push
rcrl
cmp
push
lret
movsl
xchg
pushl
mov
out
mov
and
inc
add
mov
sbb
xchg
out
inc
lret
sbb
notl
adc
mov
mov
sbb
mov
pusha
pop
fistpl
addr16
cmp
in
dec
ret
out
fwait
addl
or
jmp
sbb
or
test
xchg
add
sub
in
jo
cmp
testl
xchg
loop
sar
imull
add
push
std
fs
cmp
notb
andb
inc
mov
std
in
adc
out
mov
scas
sub
xchg
sahf
sub
inc
cmpl
push
jge
shl
inc
movsl
mov
cmpsb
rcll
loopne
mov
jle
mov
es
icebp
andl
cmp
mov
mov
aas
xchg
mov
xchg
mov
push
xchg
aaa
pop
xchg
mov
clc
imul
aas
movsl
adc
inc
add
ret
push
fs
cmpb
cmpsl
subb
xchg
sub
roll
scas
jne
roll
popa
sub
mov
mov
mov
out
push
push
mov
jmp
test
and
popl
xlat
mov
test
inc
aam
cmp
shlb
xchg
les
inc
push
stos
sbb
pop
or
lcall
jg
pop
jb
jno
jne
and
insb
xchg
bound
pop
add
pop
pop
mov
pop
cmp
mov
pop
push
movb
dec
add
inc
mov
fiaddl
popf
rcll
push
mov
test
popa
add
stos
mov
cmp
std
call
popa
sbb
leave
bound
mov
lock
shrl
inc
add
mov
into
mov
dec
or
test
add
inc
es
mov
bound
mov
in
pop
shl
add
imul
adc
sbb
fnsave
imul
adc
pop
negb
sbb
aas
int3
cli
das
nop
mov
push
loope
cmpl
inc
gs
fs
dec
push
mov
mov
sub
mov
pop
and
xor
lea
pop
add
div
es
sub
push
into
iret
insb
fucomp
out
lahf
xlat
mov
mov
mov
adcl
pushf
jnp
shlb
mov
sub
adc
or
jns
or
adc
shl
mov
rolb
add
xchg
fbld
mov
test
out
xchg
jp
loopne
add
mov
in
popf
cmp
js
push
add
scas
lcall
lahf
push
repnz
sbb
ret
xor
out
fs
pop
divb
fwait
out
pop
jle
inc
in
xchg
adc
mov
pop
xchg
into
pop
or
sub
lea
cmpsl
sbbl
sahf
repnz
scas
push
scas
dec
movl
cmpsb
sbb
push
icebp
pop
or
mov
sub
out
decl
aad
cvttps2pi
cli
ds
jge
pop
inc
dec
pop
incl
pop
add
or
cmp
ret
arpl
fldenv
test
pop
test
xlat
movsl
push
cmp
aas
out
push
cmpsl
test
mulb
xchg
push
js
sahf
cli
or
out
lods
mov
sahf
mov
sbb
aaa
mov
xor
mov
js
dec
jne
add
cwtl
xor
xchg
adc
fimull
push
mov
cmpsl
test
and
xchg
pop
fwait
sub
sahf
sub
incl
fwait
adc
sub
cli
xchg
dec
adc
adc
mov
int3
jae
sub
arpl
testl
in
xchg
test
aam
mov
popa
or
addr16
xchg
xor
out
or
jge
or
adc
rcrb
inc
jae
sbb
push
mov
push
cli
mov
cli
inc
stc
push
hlt
roll
stos
arpl
xor
ror
ds
jge
cltd
in
mov
or
jmp
cmp
outsl
repz
out
addr16
cli
sbb
dec
mov
clc
dec
mov
in
mov
xchg
or
push
push
ret
push
jmp
sbb
mov
jmp
inc
adc
cmp
jne
push
icebp
sbb
lret
sar
je
push
pusha
adc
mov
daa
test
test
js
js
js
js
jns
push
sbb
cmp
mov
push
lods
lret
xchg
lds
fisttps
out
xchg
xchg
inc
aam
adc
jp
push
imul
xlat
mov
jne
pop
lea
jo
outsl
sub
or
mov
sub
rorl
add
stc
or
inc
das
fimuls
inc
add
pop
xchg
jae
cld
adc
mov
or
adc
push
adc
int
std
repz
stos
mov
dec
mov
mov
cmp
das
rorl
ffree
imul
test
cmp
mov
jmp
cli
gs
sbbl
sbb
hlt
insb
xchg
push
mov
aas
in
pusha
sar
test
jmp
dec
xchg
in
bound
jns
or
nop
sbb
lret
mov
push
fs
mov
lock
pop
test
andb
sbb
fwait
pop
test
adc
sbb
cltd
mov
mov
daa
xchg
call
jb
popa
and
clc
mov
or
dec
pop
insl
sub
sbb
aaa
daa
cmpsl
mov
and
addr16
shrl
ljmp
rcrb
sub
popf
push
mov
xchg
scas
lret
fsubrp
pushf
rcl
mov
mov
xchg
sbb
idivl
cmp
xchg
cmp
das
rolb
inc
and
and
lret
cs
in
inc
dec
push
jo
shll
daa
push
cmp
jnp
add
cmpsl
cmp
loopne
cwtl
xchg
out
cmpsl
hlt
cmp
pusha
imul
inc
adc
push
mov
nop
decl
cwtl
jns
push
data16
mov
mov
addr16
xor
roll
mov
js
adc
and
cld
cld
inc
repz
pop
sbb
jp
popa
icebp
mov
xor
arpl
xchg
mov
repnz
shlb
sbb
push
push
pop
les
pop
imul
sub
mov
data16
jns
xor
into
dec
pop
bnd
out
clc
push
and
ds
push
pop
pop
mov
mov
mov
xchg
iret
shrl
roll
pop
mov
in
mov
jne
mov
mov
and
dec
push
addr16
cmp
dec
jp
jg
fstl
sarb
adc
xlat
in
imul
cld
je
cmpsl
mov
dec
or
or
mov
sti
fs
jl
push
out
mov
lods
xchg
adc
rclb
in
sbb
scas
imul
dec
push
shlb
mov
pop
in
push
mov
loopne
push
xor
push
data16
jp
or
push
in
cmp
outsl
mov
out
sahf
push
xchg
xor
and
mov
stos
repz
cmpsl
sbb
aas
pop
ss
inc
mov
lds
mov
push
jmp
cltd
xchg
push
pushf
push
imul
add
jb
push
fdivl
outsb
jbe
ljmp
rclb
sarb
push
and
push
sbb
or
mov
jge
and
fsubrs
shrb
xchg
cli
adc
shr
jp
or
gs
in
push
xchg
rcrb
aaa
das
addl
lock
sub
pop
js
xlat
pop
leave
outsl
lahf
xor
cmp
pop
xchg
sbb
push
lahf
or
ret
pusha
cs
ljmp
cltd
pushf
adc
jmp
ret
fcompl
cmp
push
dec
xlat
add
xchg
test
outsl
sarb
dec
adc
xchg
aaa
add
jg
jno
pop
fstpt
jne
mov
add
ljmp
mov
and
push
adc
pop
jne
xchg
add
js
xchg
mov
xor
loope
int
xchg
out
mov
sti
xor
pop
sub
popa
cli
enter
int
sub
inc
mov
scas
jmp
sub
enter
fiaddl
sub
pusha
push
jge
loope
scas
out
fisubrl
divb
test
hlt
lds
mov
scas
loope
adc
sbb
mov
inc
push
or
mov
lds
jmp
push
arpl
call
dec
jns
jno
insb
lahf
push
rcrb
pop
or
cmp
dec
test
cmp
cmc
test
pusha
push
mov
out
ret
dec
insb
and
jns
js
cmp
lahf
adc
xor
lock
lock
ss
mov
in
jno
push
lea
cltd
push
and
cwtl
jle
and
bound
xchg
xchg
insl
shll
inc
jmp
mov
es
and
jb
roll
pop
sub
jge
int
pop
lcall
push
mov
push
sar
cs
jae
xchg
mov
sub
mov
jge
das
js
adc
cld
loop
mov
loop
jg
das
inc
sub
stos
sbb
pop
add
mov
popf
xchg
and
pop
mov
ss
in
addr16
jp
adc
outsl
sbbl
loop
mov
aaa
movsb
cwtl
and
inc
sti
mov
add
ficompl
icebp
mov
adc
fsubs
mov
lods
pop
out
dec
mov
pop
lcall
das
loopne
mov
mov
iret
insb
xor
fisttps
sub
iret
data16
repz
sbb
dec
das
push
sub
fnstenv
xchg
fisttpl
xchg
mov
data16
out
aam
jmp
xchg
mov
icebp
adc
xlat
adc
jp
fs
in
mov
icebp
pop
mov
nop
inc
pop
into
cld
scas
lods
add
pop
sub
call
cli
mov
jle
es
bound
ficomps
mov
sbbb
inc
aam
sbb
mov
dec
cwtl
mov
jmp
xchg
arpl
mov
orl
jo
daa
fsubr
filds
xchg
mov
sub
rcrl
sub
insl
scas
int3
mov
ret
aaa
pop
lods
ret
cmp
std
rcll
or
pop
xchg
fimuls
pop
ds
movl
enterw
bound
adc
out
cmp
iret
mov
adc
sub
pop
pushf
add
or
pop
icebp
fstps
xchg
sub
outsl
fistpll
ja
out
aad
fs
ss
lret
and
out
cmp
add
fs
hlt
add
push
fwait
add
in
imul
cmpsb
sti
sbbb
xorb
les
iret
xor
push
das
rcl
mov
filds
xchg
xchg
or
jo
xchg
rcr
lret
sbb
jb
sbb
mov
popf
repnz
repnz
or
xlat
cs
xchg
rorb
xchg
lahf
shll
dec
adc
cli
xchg
gs
in
ja
pop
dec
in
mov
cmp
je
je
pushf
lahf
insl
dec
sbb
and
dec
enter
test
lret
pop
mov
icebp
mov
rcrl
add
dec
cmp
lock
jns
mov
mov
rcll
pop
sahf
jg
sbb
or
inc
inc
setno
stc
mov
and
mov
adc
push
pop
js
jae
sbb
les
rorb
push
mov
push
and
in
inc
xchg
sbb
cmp
in
cltd
sbb
jmp
jo
mov
inc
adc
inc
imul
push
jge
fnsave
icebp
out
sub
add
sti
mov
in
sbb
loop
mov
test
jae
incb
stos
push
push
push
test
mov
cltd
sbb
and
int
dec
addr16
adc
addr16
or
call
adcb
std
cmpl
shl
sbb
add
push
fbld
mov
sbb
cmp
or
rcrl
shlb
xchg
sbbb
push
add
push
add
and
fsubs
test
cli
dec
jp
ljmp
daa
inc
scas
std
xchg
lock
and
inc
sub
in
sub
cli
lahf
mov
mov
cli
lds
popf
jno
in
leave
mov
in
imull
xor
mov
sub
mov
pushf
adc
imul
push
pushl
ja
xchg
xchg
test
rcrl
fs
dec
and
fsubs
filds
dec
mov
jecxz
pop
mov
out
fdivrs
lds
das
aad
xchg
push
arpl
mov
add
sub
cmc
shll
loopne
or
ds
jns
enter
idiv
and
testb
pop
into
jecxz
cld
out
outsb
fsubs
scas
movsb
jp
mov
test
mov
adc
fwait
mov
mov
and
lret
dec
mov
mov
dec
cmp
fldpi
add
sub
fsubrl
movsb
popf
pop
cmp
xorb
sub
adc
mov
stc
outsl
ds
pop
fcom
mov
xlat
ret
pop
pop
aaa
xchg
xor
rcr
and
int
insl
dec
sbb
in
movsb
insb
fwait
lods
inc
jb
jno
ds
pop
lock
daa
gs
imulb
ljmp
jb
outsl
lahf
cwtl
jae
cmpsb
and
into
pop
cmpb
cmpsb
pop
jmp
xor
pop
mov
mov
mov
jecxz
ret
icebp
cmp
in
insl
mov
std
sub
cmp
pop
mov
clc
sbb
aad
insb
mov
cwtl
test
mov
fwait
stos
lahf
mov
mov
loop
jg
negl
cltd
cmp
scas
jno
push
jo
push
lock
nop
xorb
dec
data16
mov
xchg
mov
rcrb
hlt
outsl
mov
xchg
pop
daa
or
mov
lods
movsl
cmpl
mov
sub
test
mov
mov
bound
je
mov
fwait
arpl
popf
mov
test
clc
adc
repnz
iret
push
jnp
scas
xorb
in
push
mov
daa
mov
xor
fcomip
xchg
sbb
push
inc
dec
outsl
mov
inc
ficomps
mov
icebp
out
cld
aas
mov
or
inc
xor
xchg
dec
xor
js
scas
adc
lods
call
push
jecxz
leave
mov
aad
pop
xor
adc
pusha
cmp
mov
aaa
dec
jp
and
mov
pushf
shlb
cmp
pop
bound
addr16
jge
mov
mov
imul
mov
jnp
inc
xchg
push
stc
and
fldt
adc
push
push
clc
cmp
lods
ret
jl
push
adc
std
sbb
inc
int3
sub
popf
gs
les
mov
stos
xchg
cmc
dec
arpl
jne
out
sbb
test
xchg
add
jge
aam
ds
xchg
and
subl
add
push
or
push
sbb
and
mov
sti
in
dec
mull
inc
jp
loope
sub
mov
inc
add
add
and
out
pop
icebp
movsb
jmp
push
jnp
lock
test
das
jmp
hlt
bound
and
aad
inc
jl
pop
dec
mov
loopne
fyl2x
lods
scas
inc
repnz
mov
jge
jnp
xlat
fwait
jecxz
or
dec
fwait
sarl
cwtl
xchg
rclb
push
ds
adc
imulb
xor
xchg
cmpsb
jmp
push
cmp
cmpsb
test
mov
scas
mov
stos
lds
mov
fisttps
mov
or
cli
movsb
popf
popf
xchg
or
out
push
push
les
std
sub
imul
inc
mov
and
mov
out
mov
addl
rcll
cmpsl
xchg
xchg
dec
adc
lock
add
xor
pop
sbb
lret
cmpsl
jl
add
inc
aas
in
push
push
or
mov
mov
orb
lret
mov
push
inc
sub
cmp
clc
dec
jg
pop
ja
add
rclb
push
and
and
scas
sub
std
and
inc
lods
inc
in
iret
sti
pop
cwtl
addr16
lret
and
pop
xchg
mov
loopne
pusha
iret
shlb
xchg
leave
pop
jo
add
fiadds
stc
je
sub
fdivs
aad
shll
xchg
out
sub
scas
arpl
xchg
das
sti
cmp
lock
pop
mov
mov
popf
mov
les
loop
jns
pop
sarb
test
mov
and
push
out
repnz
mov
push
push
or
icebp
jae
mov
mov
loope
pop
pop
push
into
daa
repnz
out
dec
sub
int3
fisttps
lock
jnp
xor
xor
test
jle
and
inc
dec
in
push
insb
add
leave
and
pop
dec
das
xchg
dec
xor
sub
adc
sbb
push
clc
pop
jbe
sbb
subl
mov
lahf
adc
push
jno
test
pop
in
rolb
sub
xchg
pop
scas
bound
mov
arpl
cmp
mov
por
icebp
fistl
in
movsl
push
push
sub
mov
cld
inc
stos
pop
icebp
ret
sub
adc
sti
mov
les
dec
inc
outsl
mov
push
adc
fisubl
mov
test
push
sbb
adc
ficompl
fimull
fcoml
mov
lods
jo
cs
not
int
data16
adc
push
pop
pop
pop
imul
dec
gs
popl
in
fwait
int
loop
rcrb
jp
add
mov
cmc
stos
insb
dec
adc
rorb
mov
dec
ret
lea
jmp
insb
test
mov
xchg
add
out
cltd
push
mov
push
ss
ret
jbe
repnz
gs
mov
xchg
push
xchg
fnclex
test
stc
sub
inc
pop
mov
pop
pop
dec
cmp
cmp
scas
jo
sub
daa
push
in
fnsave
and
aas
and
and
or
sbb
aas
ljmp
rcrl
jns
fsubr
and
xlat
shll
mov
int
pop
mov
lods
inc
iret
push
mov
outsb
in
popa
mov
jmp
add
sub
xchg
push
dec
repz
xchg
sbb
imull
push
lods
data16
insb
rcr
sbb
pushf
dec
les
lock
push
dec
push
mov
aaa
or
mov
and
cmp
xchg
shrl
enter
cli
jno
cmp
dec
pop
notb
fiadds
rcrb
push
mov
dec
in
je
mov
mov
mov
adc
dec
or
mov
pop
jnp
cmp
pop
push
mov
testb
cmp
fiadds
fucomp
mov
mov
and
sbb
jnp
jl
push
int3
or
mov
inc
scas
cld
test
jle
xor
gs
sub
mov
test
cmp
test
xor
and
pop
in
mov
in
iret
push
sbb
pop
imul
sub
add
les
add
imul
xchg
es
cmp
and
pop
cmpsl
sub
mov
sbb
cwtl
mov
lods
pop
aas
push
inc
cli
loopne
gs
push
xchg
dec
mov
xchg
enter
leave
ja
mov
cmp
aam
fisubrl
iret
mov
insb
sub
jle
rcrl
and
jnp
sbbl
insl
leave
fisttpl
mov
xchg
jno
pop
aaa
inc
sub
mov
push
mov
pop
xor
cmpsb
add
cltd
int
mov
clc
and
sarl
adc
add
jbe
push
mov
aad
repnz
dec
leave
cs
daa
ljmp
jo
mov
cld
out
addr16
and
arpl
and
jle
fcompp
sbb
loopne
aad
adcb
mov
lea
sub
rorl
inc
mov
cmp
sarl
or
out
sub
rorl
xchg
push
fsubr
lods
pop
cltd
push
repz
xchg
test
xlat
sub
lahf
insb
cmp
push
fcmove
sbb
shll
lock
je
in
into
mov
test
stos
mov
int
pop
jp
hlt
mov
fs
or
mov
js
mov
mov
pusha
in
adc
xchg
sbb
jns
movl
inc
ja
cltd
pop
mov
jns
int3
jno
jnp
ds
xchg
fnstcw
jne
sti
loop,pt
jmp
dec
jae
pushf
testl
lea
mov
shrb
mov
and
or
outsb
es
clc
xor
lret
mov
xor
aaa
xchg
fistpll
dec
lret
jmp
cmp
or
popf
pop
test
out
insl
int
push
dec
push
cmp
push
cmp
repz
pushf
jg
shl
pop
scas
pop
jo
push
or
or
pop
js
push
inc
cltd
push
lea
stos
int3
fwait
stc
mov
test
inc
adc
sub
sbb
loope
jae
xchg
sub
fmuls
push
or
pop
jmp
mov
or
lds
mov
mov
imul
sbbl
mov
pop
xchg
es
in
push
fsubl
icebp
ret
bound
inc
sub
inc
jle
mov
scas
pop
inc
nop
mov
mov
xchg
lds
jg
and
jnp
mov
jae
mov
pop
xchg
xor
imull
push
mov
xor
inc
inc
std
test
lea
mov
mov
faddl
mov
jno
js
sub
pushf
jnp
adc
sbb
shrb
xor
test
dec
sahf
daa
mov
cmp
jle
stos
adc
popf
movb
xchg
je
push
dec
mov
adc
js
adcl
jnp
lods
pop
cmp
push
lds
js
aad
inc
sub
add
outsb
jae
dec
jecxz
jns
jae
sub
cmp
sub
frstor
gs
sahf
mov
lret
jne
fisttpll
sbb
ss
in
sub
xchg
push
imul
dec
movsl
and
push
inc
jne
mov
xlat
pop
mov
fwait
std
das
dec
xchg
pushf
fisttpll
adc
pushf
mov
inc
loope
mov
jg
adc
mov
pop
dec
xor
cs
loope
jae
mov
jecxz
bound
mov
pop
mov
or
xlat
lahf
test
sti
pop
inc
add
mov
push
or
nopl
adc
iret
out
sub
ja
imul
pop
stos
sub
push
xor
xor
mov
cmp
ret
sub
pop
aad
dec
sti
pop
mov
jno
sub
xor
outsl
jo
ss
int3
insb
mov
cmp
fwait
sti
or
xchg
xchg
out
xlat
adc
fisttps
pop
jmp
dec
dec
sbb
out
jle
pop
pop
call
in
pop
lret
je
lock
nop
cmp
sub
sbb
adc
xor
mov
cmp
xchg
popf
pushf
push
mov
dec
aaa
and
jmp
pusha
test
and
xchg
insb
pushf
mov
jne
out
imul
fisubs
xchg
jnp
and
aaa
push
fsts
dec
das
xchg
dec
lds
movsb
push
pop
jge
jge
xchg
shrb
cli
lods
hlt
xchg
shll
mov
sub
loope
jg
loop
mov
femms
adc
push
adc
adc
pusha
les
clc
push
dec
dec
or
movsb
dec
push
sbb
push
and
pop
mov
mov
arpl
fdivl
push
stos
insl
ljmp
push
ss
lcall
jns
jecxz
pop
xlat
in
loope
jo
in
mov
mov
mov
outsb
popa
push
sub
call
int3
nop
idivb
test
xchg
cs
ljmp
fs
xchg
sbb
lret
hlt
pop
int3
lds
test
aas
jns
daa
adc
push
cmpsb
int
stos
mov
test
divb
incl
sbb
pop
outsb
int
dec
pop
lods
cwtl
in
mov
jmp
cli
or
daa
cwtl
sub
lahf
das
dec
aaa
sarl
push
push
jle
test
mov
cltd
add
cmp
mov
inc
into
out
jp
out
sbb
arpl
popa
pop
cmc
addl
imul
pop
lods
test
or
xchg
adcb
cltd
pop
bound
mov
negl
push
sub
gs
mov
sahf
jno
adc
inc
pushf
lret
jle
fisttps
fildll
pop
xchg
push
or
fs
mov
ret
add
call
dec
stos
mov
dec
jmp
fbstp
cmpsb
outsb
shrl
ljmp
dec
in
pop
push
shll
inc
repnz
inc
addb
movsb
lea
or
ds
enter
xor
shlb
cmpsl
cs
mov
jae
popa
lods
mov
es
das
xchg
lcall
imul
outsb
push
jecxz
scas
dec
aad
mov
or
xlat
inc
nop
mov
rol
addr16
mov
hlt
mov
lea
adc
pop
adc
inc
mov
pop
push
mov
inc
jl
pop
cmpl
arpl
xchg
movsl
imul
mov
dec
push
dec
cmp
and
push
int
cmpsb
fdivs
mov
lcall
fsubl
mov
add
push
les
or
out
push
mov
or
imul
and
push
push
adc
cli
push
movsl
fistps
inc
js
sbb
shl
xchg
fnstsw
push
clc
push
movl
jb
les
pop
testl
test
inc
sub
or
adc
aad
adc
mov
pop
mov
push
sbb
loope
adc
or
pop
out
sub
and
or
lods
inc
inc
stos
pusha
mov
jp
repnz
push
pop
fildl
ds
jnp
out
sub
scas
insb
pop
and
movsb
mov
adc
push
stc
not
enter
inc
js
mov
cmpb
les
cmp
mov
sbb
xlat
lret
stos
xchg
adc
mov
and
xor
and
mov
dec
ror
insl
jl
mov
pop
and
aad
in
push
cwtl
loopne
imul
adc
shll
popf
mov
ss
int
mov
dec
popf
push
pop
cwtl
lret
sub
cmp
fcomp
out
push
dec
ja
pop
mov
or
int3
inc
cs
adc
xchg
subb
push
mov
fcomip
rorl
sahf
mov
inc
or
popf
xchg
inc
adcb
movsb
xor
sar
push
cmp
ret
dec
xchg
xchg
cwtl
mov
pop
mov
xchg
iret
lcall
mov
outsb
mov
mov
jp
adc
test
pusha
push
and
xor
mov
ret
addr16
scas
dec
lea
lea
mov
add
sarb
jne
cli
sbb
lods
lahf
push
inc
mov
test
mov
cltd
push
stos
and
or
sbb
ss
mov
mov
xchg
arpl
push
fadd
pop
in
andb
stos
mov
push
dec
aas
stos
cmp
ja
sahf
packuswb
imul
xchg
clc
lret
repz
addr16
int3
in
sti
bswap
mov
ja
pusha
push
clc
ret
xchg
xchg
mov
fsubrl
push
stos
je
mov
jb
test
aad
push
mov
test
xchg
jecxz
shll
js
push
jne
add
stos
inc
addl
cmp
mov
inc
jmp
or
and
stc
mov
add
xor
in
sbb
mov
shr
xor
testb
lret
out
test
push
sbb
std
pop
out
addr16
cmpl
push
xchg
add
stc
add
jmp
test
into
mov
push
hlt
xchg
das
mov
inc
cwtl
movsb
repnz
test
jne
movsl
inc
es
pop
into
lret
clc
imul
mov
jmp
sub
test
lock
sbb
mov
gs
popf
jg
call
fs
mov
test
ret
shl
insb
push
mov
dec
pop
cwtl
pusha
mov
xchg
cli
rolb
dec
mov
push
dec
push
jecxz
fwait
data16
loope
mulb
sti
ljmp
adc
adc
mov
repnz
insb
mov
daa
cltd
out
mov
bound
loopne
stc
mov
cli
push
xchg
je
cmp
mov
fsubrp
not
pop
pop
mov
lret
mov
movsb
loop
lahf
pop
leave
outsb
mov
sti
or
pop
dec
js
push
xchg
sbbl
adc
movsl
and
ss
push
push
faddl
cld
dec
test
cmp
adcl
lock
nop
jle
jne
push
ret
fdivs
int3
mov
cmpsl
pop
jl
dec
mov
testl
adc
gs
jge
aam
pop
adc
call
test
add
mov
xchg
xchg
sbb
enter
dec
mov
aam
aaa
clc
mov
cltd
jae
push
jg
sarb
outsl
out
xchg
ret
or
out
mov
scas
dec
cmp
jg
mov
dec
ret
repz
add
cmp
cli
push
std
nop
jnp
jo
or
ficomps
arpl
lods
jecxz
ds
sarb
cmp
mov
dec
jo
cli
xchg
push
push
jl
lcall
aaa
in
test
imul
imul
jle
push
xor
stos
xor
scas
add
push
or
xor
adc
mov
jnp
test
aas
pusha
and
jmp
mov
pop
sub
adc
insb
or
or
stos
mov
pop
push
cli
fsubs
mov
push
scas
test
xlat
xlat
js
sti
loope
push
jp
xor
dec
add
in
scas
pop
add
add
push
add
add
roll
add
or
cmpl
adc
roll
jne
cmp
or
xor
push
das
jle
ss
xchg
jecxz
int
sub
je
lret
cmp
cmp
dec
dec
dec
inc
fisttpl
dec
test
pop
add
cmp
in
adc
out
rclb
mov
int
mov
cs
ret
jmp
out
fmuls
das
adc
pushf
xor
add
dec
lret
add
sbb
insb
sub
mov
xor
cmpsb
daa
imul
inc
push
lods
pop
lea
mov
xorb
popf
subl
cmpl
mov
fiaddl
push
and
sbb
and
sbb
xorl
add
aam
xchg
sub
mov
mov
cmp
movsl
movb
xchg
mov
jl
sub
andb
add
push
or
test
sbb
push
push
mov
xchg
mov
lahf
lods
inc
cmp
imul
xchg
pop
cmpsl
lods
pop
lods
mov
inc
mov
mov
mov
ret
mov
clc
add
jl
add
divb
cmp
notb
cltd
adc
lods
mov
orb
cmpsb
lret
cmp
icebp
inc
and
fpatan
imull
jp
mov
gs
out
add
fisubrl
pusha
mov
cmpsb
push
jno
test
call
dec
scas
dec
fnstenv
inc
push
jnp
clc
cwtl
cmp
push
mov
add
les
ja
cmp
sub
nop
inc
push
pop
out
repnz
xchg
push
pop
shlb
gs
out
sub
push
stos
ljmp
jmp
clc
je
mov
outsb
jg
jge
das
lret
mov
gs
lds
loop
and
inc
call
test
or
fsub
sti
pusha
inc
mov
in
orb
or
arpl
rcrb
dec
push
jo
and
and
cld
shll
and
icebp
fs
mov
mov
sbb
cmc
hlt
cli
aad
mov
xlat
fcmovu
or
cmp
in
dec
xchg
jle
jmp
cmp
dec
stos
scas
lret
push
repz
sbb
cs
cs
jbe
pop
add
jp
jno
mov
outsb
cmp
shlb
imul
push
lock
lea
push
fsubrl
je
mov
fs
fucom
jl
scas
mov
push
lods
sbb
scas
loope
push
shrb
add
and
nop
sub
test
dec
cmp
ja
pop
mov
movsb
adc
loope
xor
in
mov
xorb
in
ficoms
nop
push
mov
sub
jp
jae
sahf
inc
dec
sahf
or
xchg
jp
cmpsl
sbb
dec
add
dec
jge
add
adc
repz
mov
mov
addr16
jmp
xor
int
push
xchg
cli
push
mov
sub
jmp
pop
pop
xor
test
pusha
lahf
add
push
aas
sbb
mov
pop
cmc
xchg
push
push
sub
mov
outsb
pop
or
sti
icebp
jecxz
lods
push
scas
pop
cmc
les
cmp
shll
not
pop
addr16
or
pushf
sub
dec
popf
cmp
arpl
xchg
push
int3
data16
popf
cmpsb
sbb
cmpl
cmp
fsubs
or
push
stos
xlat
push
push
xchg
sub
lds
inc
adc
adc
jmp
cmpsl
movsb
insl
cli
lcall
xchg
and
mov
cli
xchg
rcll
cwtl
dec
das
outsb
insl
xchg
and
ljmp
fwait
cmp
test
in
fisttpll
pop
push
add
pop
and
inc
add
aad
xor
pop
jno
jmp
inc
jp
or
xor
rcl
dec
cltd
daa
mov
mov
popa
sbb
fldl
inc
jno
pop
arpl
xor
and
int3
stos
xchg
mov
dec
cmp
fdivrl
inc
or
dec
mov
xchg
xchg
stos
out
pusha
into
inc
jns
mov
js
jno
xchg
in
xchg
and
mov
sbb
ret
das
into
mov
xor
icebp
insb
out
mov
and
cld
test
nop
xor
leave
cmp
dec
dec
xor
inc
mov
sbb
lret
sbb
fwait
shr
bound
mov
shlb
movsb
jo
test
or
xchg
xchg
aad
mov
shr
add
ss
adc
pop
sub
inc
jne
in
adc
rolb
loopne
cs
cmp
or
sahf
mov
push
add
lods
mov
popa
mov
imul
cld
xlat
andb
or
xor
sbb
add
cs
dec
and
test
lret
iretw
mov
jbe
mov
in
jle
stc
add
pop
call
xor
gs
decb
and
pushf
mov
jge
ss
outsb
into
js
and
aam
shrl
iret
push
sub
sbb
mov
ds
fnstsw
mov
cmp
jb
lcall
pop
sub
sbb
fidivrs
popf
das
addr16
sub
shlb
iret
or
cltd
xlat
cmc
sub
push
movsb
lret
dec
cwtl
lock
adc
sub
inc
sbb
mov
jne
and
push
insl
rcll
xchg
dec
xchg
loopne
leave
dec
mov
ja
insb
xlat
cmpsb
mov
dec
sub
cld
xchg
or
or
test
inc
dec
xor
subl
repz
push
and
jp
outsb
in
add
jg
push
mov
imul
lock
aam
mov
repnz
xor
imul
out
and
rol
mov
lods
cmp
ljmp
adc
bound
cltd
lods
pop
aad
mov
push
pop
shlb
or
jnp
xor
xor
xor
pop
adc
jno
das
movsb
stc
outsl
clc
pop
mov
pop
jnp
cs
aad
addr16
into
add
insb
dec
hlt
mov
cmp
inc
sti
xchg
in
dec
lds
lods
sbb
mov
mov
jbe
adc
and
xor
sub
or
xor
sarb
sub
jecxz
fdivr
aam
cmp
js
adc
cmp
pop
push
jb
mov
and
lcall
mov
xor
lcall
icebp
cmpsb
in
dec
mov
push
out
cmp
fwait
movsb
test
dec
mov
cmc
fbld
ret
mov
out
mov
mov
pushf
stc
xor
pop
sub
xchg
mov
lea
pusha
iret
scas
push
cmp
test
call
lds
mov
gs
mov
cmp
test
pop
push
mov
loope
add
mov
inc
push
stos
jne
outsl
push
dec
jp
iret
xchg
push
xchg
imulb
sarb
ja
arpl
ss
lods
pop
push
mov
data16
cltd
dec
call
shl
scas
or
mov
insl
jae
mov
xchg
xchg
cmpsb
js
and
sbb
sub
in
sahf
jae
loop
xchg
inc
scas
lds
jl
mov
inc
sti
mov
adc
and
outsl
icebp
decb
rcr
inc
add
fdivr
test
mov
mov
lahf
arpl
jnp
push
in
xor
pop
inc
fsubs
push
int3
and
jbe
xor
mov
addr16
andl
sub
lret
mov
inc
pushf
js
jo
add
test
xor
lock
xchg
sti
icebp
sbb
fistl
mov
or
jmp
cmpsl
adc
das
or
ret
scas
fimull
loopne
inc
std
cld
or
shll
push
sub
fs
add
and
in
or
jne
test
mov
pop
es
xchg
addr16
nop
push
xchg
lods
push
mov
or
mov
nop
add
cmp
sahf
pop
in
mov
dec
jns
ret
jmp
adc
imul
pop
rcrl
lahf
lcall
xor
push
js
mov
arpl
dec
or
pop
pop
pusha
in
mov
rcll
roll
or
sub
add
xorb
jae
push
inc
insl
iret
xor
and
mov
sarb
enter
cmp
xor
ret
enter
test
pop
mov
mov
jne
or
inc
xchg
div
aam
and
jg
aaa
xchg
pop
je
mov
mov
imul
loopne
adc
loope
jle
sbb
pop
xlat
inc
in
loopne
xchg
pop
scas
insl
sbb
and
dec
adc
xchg
sub
outsb
inc
mov
loopne
mov
pop
pop
adc
repnz
hlt
mov
and
pop
stc
jmp
test
sbb
scas
push
aaa
push
mov
push
push
rcl
testb
push
jle
cmp
jl
ds
mov
fisttpl
and
imul
dec
inc
inc
xchg
or
in
nop
lahf
jmp
out
scas
adc
add
xorl
dec
cmp
insb
or
jo
jb
shr
inc
mov
and
stc
sub
jp
cmp
loop
ror
shrl
push
pop
lds
inc
dec
jnp
lret
and
sub
jne
fmulp
ja
ss
sbb
scas
mov
pop
pusha
addl
cltd
in
xchg
testb
inc
rorb
sbb
aam
or
and
jp
test
jno
pop
insb
fsubp
aaa
addr16
enter
lcall
push
jbe
ds
mov
movsl
jno
cmp
pop
insb
movsl
cmp
inc
xor
mov
shl
bound
pop
mov
ljmp
sbbb
xor
mov
sbb
push
mov
mov
test
and
mov
insb
dec
pop
jbe
cwtl
pop
movsb
push
jo
ret
xor
sbb
xabort
fists
cmp
mov
test
sti
jno
pusha
mov
lock
daa
push
in
xor
stos
adc
pop
lock
mov
out
out
icebp
sahf
jmp
into
push
mov
loop
add
fnstenv
inc
add
es
sub
sub
cmpsl
xor
jo
and
imul
shrb
mov
mov
les
cs
sub
in
pop
addl
stc
cmp
push
jne
inc
mov
ds
jl
cmp
ss
lods
loopne
sbb
into
mov
pop
push
incl
sbb
jae
in
fs
gs
scas
dec
scas
cs
push
mov
sub
pop
lret
xchg
pop
xlat
mov
jb
pop
pushf
adc
inc
cmp
pop
add
sbb
push
jbe
lahf
xlat
mov
loope
lcall
xchg
pop
das
fidivl
enter
mov
inc
adc
xor
mov
sub
mov
stos
inc
jne
jo
jge
nop
jmp
push
xchg
sbb
mov
fisubrs
cmp
addr16
push
bound
lds
xor
inc
cmp
divl
in
lcall
cld
add
stos
sbb
into
out
pushf
mov
and
xchg
inc
xor
adc
xlat
std
rcr
int3
mov
jns
mov
fwait
add
aam
ljmp
jo
jg
aam
mov
std
out
sub
ljmp
sub
push
aaa
mov
ret
mov
repz
fcompl
inc
scas
dec
pushf
mov
in
fistpll
jns
adc
sub
inc
mov
cmp
mov
jecxz
pop
cs
sub
clc
and
sub
sub
and
xchg
push
out
mov
insb
imul
xchg
push
or
mov
in
cmp
out
insb
test
mov
pop
popf
or
adc
cld
aaa
and
dec
clc
cwtl
xchg
shll
cmp
int3
mov
in
xchg
into
call
inc
push
or
cmpsb
leave
push
jmp
nop
stc
div
mov
mov
lds
jnp
pushf
in
lods
sti
mov
cltd
clc
push
jno
ss
cmp
jns
xchg
mov
outsb
and
fidivl
or
test
cmp
push
mov
lock
jecxz
xor
jne
ljmp
xor
cltd
ja
ficoms
inc
cmp
decl
out
jae
mov
idiv
cld
and
ljmp
inc
cmp
out
mov
leave
in
pushf
pop
loop
mov
dec
dec
xchg
inc
pusha
cmpl
test
clc
push
std
insl
xchg
or
ss
mov
push
mov
das
xor
les
insb
sub
sbb
pushf
push
cmc
fwait
add
add
inc
cmp
mov
cmpsb
lods
jb
sbb
xchg
xchg
mov
nop
or
or
mov
das
mov
int3
cmpl
push
inc
repz
inc
leave
out
lock
jnp
add
xchg
dec
jbe
jns
test
pop
mov
mov
mov
lock
mov
mov
bound
das
and
dec
mov
int
arpl
jg
stc
loopne
shlb
mov
ss
js
jno
loopne
fisubrs
jecxz
ret
mov
test
pop
mov
stc
loopne
dec
es
popa
inc
into
andl
xor
cwtl
push
sub
xchg
insb
push
outsl
xchg
mov
out
or
mov
insl
scas
jnp
xor
or
shl
adc
adc
adc
xchg
jne
sub
nop
or
mov
stos
add
sub
jbe
sub
dec
mov
pop
add
and
add
dec
ljmp
and
or
mov
mov
clc
mov
imull
push
xchg
inc
push
adc
mov
xor
push
ds
push
xchg
dec
xchg
not
rclb
pop
insl
cmpsl
shrb
mov
icebp
xchg
orl
pusha
and
xor
cmpsb
bound
push
or
sub
or
sti
mov
fsubrp
ds
out
mov
test
sub
ja
mov
xor
add
and
pop
jne
shlb
outsb
es
loop
jb
jns
pop
push
dec
or
inc
jo
fsubrs
cmp
mov
orl
fiadds
call
je
ds
ret
mov
stos
les
jne
les
pop
mov
mov
jmp
aam
jne
xor
mov
data16
push
rorb
ja
stos
ror
or
out
dec
cmp
dec
add
js
fisubrl
mov
ret
dec
adc
push
pop
mov
loope
nop
aad
xlat
pop
push
lods
mov
ljmp
hlt
sbb
add
adc
out
jp
mov
out
sub
aas
dec
add
jns
lret
sarl
call
dec
in
loopne
cmpsb
ss
sub
sub
push
cmp
adc
bound
enter
rorb
mov
out
adc
enter
push
mov
sub
pushf
sbb
push
sarb
es
mov
out
inc
test
xor
jo
mov
mov
jo
loopne
jo
les
ja
dec
std
pop
addr16
repz
xor
push
cmpsl
dec
cmp
xor
fimull
xor
das
outsb
lea
and
xor
and
loope
jmp
jno
clc
or
pop
sub
mov
out
mov
adc
test
add
mov
pop
in
cmp
dec
cmp
lds
fildll
arpl
pop
or
data16
pusha
jecxz
xor
test
mov
aam
pop
pop
sarl
loopne
xor
or
mov
mov
mov
jp
sub
adcb
sub
ss
ret
call
dec
sbb
sbb
dec
push
add
adc
testl
pop
daa
jmp
hlt
loope
inc
test
adc
fdivrs
pop
lds
cltd
outsb
das
js
dec
dec
mov
push
daa
aad
fdivl
xorl
out
out
jecxz
xchg
adc
insb
and
arpl
xor
cmp
clc
push
dec
pushf
sbbb
dec
sbb
and
xchg
dec
dec
mov
sahf
stc
and
outsl
dec
sbb
pop
xchg
dec
in
scas
in
das
iret
inc
pop
fcomps
es
pop
add
ret
mov
inc
jae
sbb
pop
inc
clc
hlt
out
mov
mov
mov
mov
and
xlat
stc
push
scas
jle
jge
push
je
jb
cmp
arpl
cltd
adc
in
popa
es
xor
inc
aas
dec
push
dec
loope
xchg
cmp
mov
int3
mov
popf
cmp
lret
ror
inc
fcmovnu
jb
repnz
outsb
pop
movsl
fwait
and
inc
das
pop
aaa
xlat
daa
adc
jl
xchg
dec
xchg
mov
and
mov
daa
dec
insb
or
xor
xchg
sbb
and
add
fimuls
cmpsl
adc
xor
mov
sarl
lcall
cs
push
popf
rcrl
lea
movsl
clc
mov
mov
mov
insb
xor
pop
scas
dec
in
in
rclb
jbe
cs
shl
daa
mov
xor
aad
jno
push
pushl
data16
push
mov
mov
mov
jl
call
sub
sarl
or
call
push
jecxz
mov
hlt
ret
mov
mov
sbb
dec
jmp
test
lcall
push
pop
enter
int3
sub
xchg
sbb
cmp
xor
test
xor
outsb
call
add
fidivrs
data16
mov
mov
cmp
sub
loopne
outsl
pop
sbb
out
jne,pn
xor
mov
jns
jle
fbstp
push
jle
int
xor
filds
and
push
add
out
dec
lock
gs
push
pop
icebp
mov
lahf
mov
ljmp
adc
out
mov
int
ljmp
xchg
icebp
jbe
call
loop
adc
movsb
cmp
cmpsb
arpl
inc
sbb
jmp
adc
repnz
lret
add
cs
into
push
aas
inc
sub
nop
xchg
adc
mov
xchg
add
xchg
push
xchg
test
and
insl
jb
je
test
scas
adc
push
pop
cmp
pop
xor
fistpll
push
movsb
sbbb
imul
xchg
jae
mov
sbb
and
int3
add
and
loop
push
sub
cwtl
xchg
test
cmp
sarl
movl
insb
cwtl
push
popa
dec
or
xor
add
lea
xchg
cld
mov
data16
stos
inc
lods
push
lods
push
push
sub
or
shlb
pop
loope
ret
mov
inc
sbb
inc
add
mov
out
or
clc
bound
sbb
cmp
mov
xchg
jl
nop
inc
dec
outsl
pop
leave
scas
xor
push
lock
mov
sti
movsb
dec
xchg
in
clc
pop
mov
cmc
mov
sub
icebp
inc
add
xor
sbb
mov
or
call
cli
adc
lret
cmp
scas
cmp
shll
jno
test
and
fdivrl
je
fs
and
mov
mov
cli
std
lock
lret
stos
add
leave
call
mov
call
xchg
aas
popa
iret
iret
fdivrl
pushf
jns
cmp
add
xlat
out
dec
call
adc
dec
cwtl
pop
rcrl
in
dec
xor
or
jle
int
pop
mov
mov
das
js
push
movsl
test
lods
imul
loope
xchg
sub
lahf
dec
mov
lods
xchg
lcall
fdivs
arpl
add
pusha
mov
pop
rcrb
ud0
std
jbe
mov
pop
cltd
jo
mov
pop
aad
icebp
mov
not
popa
or
call
push
add
xchg
call
pop
and
call
mov
push
xchg
int
movsb
test
and
cmp
pop
push
shl
repz
repnz
fwait
pop
mov
or
sahf
sub
and
add
repnz
fcomps
outsl
cmp
mov
cmp
stos
loopne
fldt
lret
insl
cli
push
push
clc
out
cmp
out
ret
jnp
mov
mov
jo
and
mov
iret
mov
add
addb
jb
and
xor
mov
xchg
xchg
ret
xlat
out
ror
mov
mov
xchg
fidivrs
iret
pusha
insb
or
inc
xchg
cs
push
imul
psubsb
mov
add
nop
orl
addr16
repnz
mov
add
and
leave
test
sbb
cmp
lock
ret
pop
lds
pop
nop
stos
rcll
cli
cld
mov
repz
adc
stc
xor
and
pop
sbb
sbb
movsl
std
sub
loope
cmpsb
cli
sub
mov
dec
int3
icebp
aaa
adc
cmp
push
jne
les
pop
data16
adc
inc
mov
sub
push
sbb
fistpl
in
ret
cwtl
push
int3
pop
xchg
mov
icebp
into
repz
mov
sti
push
push
pop
repnz
int3
push
jne
mov
mov
inc
add
dec
mov
scas
push
mov
lods
dec
fdiv
or
cmp
orb
push
mov
leave
out
and
jnp
xchg
push
mov
cmpsl
cltd
out
xor
lea
pop
dec
cmc
mov
sbb
hlt
sub
dec
mov
mov
cmp
dec
lret
sqrtps
pop
out
imul
xchg
push
pop
mov
lahf
or
repnz
mov
clc
ret
xchg
sahf
sbb
cld
jne
imul
jb
mov
sbb
das
inc
sub
push
push
lds
pop
or
or
xchg
sar
cmpsb
pop
lcall
push
lret
adc
mov
xchg
adc
dec
ljmp
test
jo
loopne
add
in
add
add
cmpsb
adc
cmp
and
das
aam
ret
xorl
push
push
dec
sbb
rcrb
pop
jp
pop
out
lods
push
or
imulb
dec
mov
pushf
push
stos
mov
pop
roll
out
lds
rorl
lds
mov
pop
jecxz
rol
cs
pop
in
sbb
stos
pop
int3
inc
testb
loopne
rep
or
lock
xchg
mov
aas
mov
repnz
push
pop
pop
imul
adc
cmp
sbb
xor
pop
xor
or
and
popa
popl
dec
xchg
test
adcb
jo
jns
cmpsb
sbbb
je
std
add
pop
xchg
jnp
sbb
in
inc
dec
push
and
mov
cmp
insl
imul
fcomip
mov
loopne
std
inc
fdivrl
shrl
gs
js
out
dec
sbb
sahf
and
adc
adc
lock
mov
adc
dec
jge
ficoms
lret
jle
sub
movsb
sub
inc
jo
dec
sub
fadds
es
sub
fisttpll
outsl
bound
xchg
and
insl
cmp
sub
imul
lods
lret
sbb
add
cmc
filds
inc
or
jne
fildl
test
or
sbb
shrl
nop
adcb
stos
inc
sbb
fdivl
xlat
lds
pop
cmp
insl
inc
pop
sub
pop
push
dec
mov
lods
ds
xor
icebp
scas
dec
cmpsl
inc
push
pop
sub
xchg
cmp
je
repnz
jecxz
push
rol
incl
fwait
jb
stos
sahf
xchg
loopne
cmpl
rorb
mov
push
jbe
xchg
sbb
int
js
bt
and
add
jmp
jg
popf
out
push
sub
iret
adc
jns
shll
xchg
xor
jns,pt
xchg
inc
or
push
xor
xchg
mov
or
sub
cmpsl
xchg
cmp
pop
or
push
mov
jp
xchg
inc
jg
jge
dec
cmp
inc
in
push
mov
dec
jae
sahf
in
push
daa
add
and
pop
mov
mov
out
inc
inc
sbb
jne
cmp
and
mov
loope
adc
popa
sbb
mov
ret
mov
and
dec
lahf
in
lcall
sbb
inc
xchg
insl
cltd
adc
mov
xlat
lret
fs
cltd
dec
pop
mov
mov
aam
and
movsb
outsl
mov
mov
pop
xor
mov
inc
in
loopne
mov
xchg
loope
mov
imul
iret
sbb
mov
enter
movsl
fisubs
daa
fisttps
add
mov
je
and
rcrl
fsubl
loop
lret
cli
scas
shrb
sbb
dec
ds
je
cmp
clc
push
mov
pop
out
repz
test
mov
shrb
push
sub
imul
add
add
and
push
dec
and
jae
lret
leave
std
fcomps
ss
xor
sub
inc
or
je
inc
and
lret
dec
out
test
orb
pop
in
jl
js
pop
daa
jg
cmp
xchg
into
push
enter
add
add
div
clc
dec
push
icebp
je
dec
aaa
mov
push
inc
pop
add
mov
leave
mov
scas
out
xor
pop
adc
cmc
add
mov
imul
mov
xchg
jnp
into
or
imul
aaa
lret
sub
inc
ret
inc
xchg
mov
pusha
scas
cmpsl
jle
xchg
xor
mov
loopne
xor
mov
sbb
xor
rol
inc
pop
jle
cmp
shl
les
icebp
sahf
movsb
ja
jle
adc
lock
xor
inc
inc
arpl
pop
movsb
hlt
push
daa
mov
es
inc
or
mov
lods
sbb
jb
in
inc
pop
movsl
stos
in
movsb
loopne
mov
icebp
pop
sub
ret
jne
push
jge
add
popf
xor
and
jb
sbb
add
in
mov
sahf
test
ret
fwait
dec
and
jo
in
push
xor
jo
mov
testb
dec
rclb
xor
add
icebp
imul
movsl
cmpb
mov
jg
and
xchg
gs
pushf
mov
xchg
dec
rcrb
test
or
pop
or
in
mov
xlat
push
sub
out
pop
pop
add
popf
inc
lds
pushf
xor
push
jmp
cmpsb
loopne
mov
fcmovne
xchg
js
push
lods
cld
inc
lods
insl
xor
sbb
push
xchg
enter
cmp
in
imul
cmpsl
js
sahf
aam
nop
sbb
mulb
dec
loope
xor
jecxz
fnstenv
data16
out
lods
call
and
xchg
clc
and
sub
sbb
movsl
hlt
mov
loop
in
loope
inc
jmp
stos
pop
out
inc
xor
mov
pop
push
xchg
mov
push
shll
stos
aam
sahf
add
push
dec
lods
rcll
push
cltd
aad
lods
push
sarb
lds
cwtl
push
push
das
cmpsl
call
push
pop
loopne
ror
add
std
sbb
aam
sbb
lret
xor
push
jno
push
push
sub
or
ret
nop
int
jecxz
or
test
push
push
aas
lock
hlt
mov
inc
mov
out
adc
mov
cmp
dec
outsb
fcoms
push
sbb
fadd
mov
or
insb
and
and
jle
cmp
push
cmp
pop
bound
into
aaa
repz
push
aas
fbstp
dec
sub
inc
decl
push
push
pop
push
int3
in
lfs
push
fstps
inc
sub
call
mov
xor
test
mov
sbb
sbb
mov
push
movsl
test
rcl
push
leave
jns,pt
ss
inc
mov
and
dec
sub
mov
add
xor
jnp
sarl
sar
shlb
sbb
movsb
jecxz
ficoms
cmc
movsb
les
mov
fwait
push
mov
jo
xor
outsb
xchg
xchg
sarb
sub
lods
mulb
dec
mov
sub
sub
jo
lock
mov
shrl
cmpsb
jb
xchg
pushf
xor
stc
jmp
mulb
pusha
lcall
pop
add
dec
pusha
cltd
lret
sub
jecxz
dec
pop
in
xchg
pop
push
loope
aaa
inc
lret
std
cmp
xchg
in
add
stos
xchg
popf
inc
adc
jne
xor
in
rorl
jnp
leave
xabort
cwtl
mov
arpl
js
inc
pop
aaa
sub
leave
adc
add
push
cmp
pop
mov
add
and
adc
fstpt
outsl
shll
sub
mov
frstor
push
aaa
shlb
sub
mov
pushf
and
mov
push
sbb
inc
jecxz
and
lret
jge
stos
cmc
dec
pop
jecxz
shrb
jle
sbb
jnp
call
es
inc
mov
bound
push
sarb
jle
fs
jbe
inc
test
pop
sbb
sub
addr16
xor
out
roll
push
push
mov
add
daa
out
push
pusha
in
inc
push
lret
xlat
popl
cwtl
out
fcoml
or
and
imul
jg
lea
jo
les
cwtl
jne
iret
inc
arpl
xchg
lcall
out
frstor
jle
cmp
mov
flds
out
lods
push
iret
fsubrs
inc
das
test
xchg
leave
fdivl
lahf
jbe
pop
aam
adc
data16
pop
xlat
outsb
imul
clc
cs
sub
aam
xor
xchg
xor
movsl
iret
pop
js
inc
lods
push
aaa
or
lret
imul
arpl
sub
adc
enter
in
dec
fsts
mov
push
or
adc
sub
lcall
mov
xchg
je
scas
mov
push
pop
jecxz
dec
test
dec
mov
mov
cltd
imul
sbb
cmpsb
jle
push
je
mov
xchg
in
add
mov
ret
arpl
mov
movsl
pop
call
sub
nop
cmp
add
les
cli
push
and
not
add
dec
and
daa
mov
fs
addr16
or
xchg
or
inc
mov
andl
and
aas
loopne
data16
push
sbb
pushf
stos
mov
mov
out
mov
mov
fidivrs
test
gs
adc
movsl
fiadds
jmp
addl
push
pop
pop
xor
fadds
shll
add
xchg
lods
adc
or
or
cwtl
loopne
jae
rcrb
add
pop
fisttpll
lcall
or
add
mov
or
adc
lret
cmp
fadds
and
cmpsl
shlb
jb
repnz
jecxz
xor
jge
lock
pop
dec
out
fadds
sti
push
push
inc
inc
scas
test
push
jecxz
rcl
pop
sub
into
inc
addr16
push
mov
inc
push
mov
xchg
cmp
aaa
sbb
popf
stos
sbb
frstor
xchg
mov
fisttpll
ret
hlt
lahf
pop
mov
cmp
sbb
mov
popf
jno
jb
ds
xor
adc
adc
push
scas
js
lcall
fsubl
mov
sahf
adc
test
mov
hlt
sbb
sub
int3
xchg
mov
sbb
lcall
scas
scas
orb
mov
notl
aas
push
adc
rcrb
dec
enter
cmp
das
xchg
push
jnp
pop
mov
outsb
mov
and
mov
imul
loopne
pop
lods
inc
popf
into
xor
inc
mov
outsb
push
add
xor
loope
mov
jae
or
int
jle
cmpsl
into
popf
arpl
lods
xchg
inc
jp
mov
loop
or
dec
jnp
in
adc
or
aam
mov
mov
mov
xor
cwtl
sub
cltd
scas
adc
jno
lock
aad
inc
jnp
sahf
mov
xor
or
insb
jno
mov
js
bound
imull
mov
jbe
and
jl
pusha
cmp
iret
inc
and
add
xor
add
add
xor
sbb
or
cvtps2pi
sub
shl
repz
lods
ret
gs
pop
or
push
pop
lock
cwtl
lods
lret
repnz
movl
pop
sbb
dec
add
mov
hlt
js
iret
mov
mov
mov
xchg
or
data16
inc
add
sbb
mov
add
cmpsl
leave
movsw
sub
mov
adc
ds
lock
xchg
or
adcl
hlt
aas
jle
imul
lods
push
aam
push
pop
pop
out
push
inc
mov
dec
lock
cmp
out
ss
mov
imul
push
xchg
insb
sub
dec
dec
adcb
push
je
ja
inc
cmp
cmp
mov
dec
jne
jns
jge
sbb
mov
cmp
or
mov
sub
mov
xorl
or
cld
mov
xor
cmpsb
in
test
and
cmc
cmp
daa
mov
adc
add
mov
adcb
add
nop
call
or
insl
sbb
and
test
adc
mov
adc
test
cmp
aam
pop
ljmp
push
out
push
mov
inc
adc
lds
cmpsb
jp
push
jmp
sbb
xchg
xchg
dec
sub
jb
or
mov
xchg
fwait
cmp
jbe
cmp
sarl
xchg
repnz
adc
jmp
mov
push
or
jno
push
icebp
ret
xchg
mov
lcall
aam
insb
inc
lods
or
sub
arpl
jecxz
xchg
dec
mov
sbb
pop
sub
out
and
dec
lea
lods
push
es
ja
test
cmp
in
sbb
xchg
ja
cmp
cltd
and
xor
dec
sarl
xchg
cwtl
jne
pusha
leave
sub
ret
cmpsl
and
xrelease
cs
push
stos
sbb
xorb
imul
adc
or
add
call
push
lret
shrl
shll
xchg
xorl
fldt
fistpl
clc
into
das
shr
adc
mov
loop
jecxz
sti
jno
insl
ror
cmpsl
and
dec
pop
retw
inc
push
and
sub
jmp
daa
xchg
movsl
aad
mov
sub
xchg
cwtl
dec
dec
add
jg
dec
imul
call
test
xchg
fisttpll
std
leave
insb
scas
lods
clc
dec
aas
and
call
cmp
stos
jb
jno
dec
pop
pop
mov
ret
mov
in
movsb
lcall
cmp
mov
ds
sub
orl
mov
sarl
jns
in
fistpll
scas
mov
orb
daa
push
arpl
pop
xchg
in
mov
and
mov
dec
fiaddl
aam
dec
loope
mov
cli
cmp
mov
ret
push
cs
out
mov
mov
mov
dec
cmp
pop
test
in
fsubl
sbb
pop
jge
popa
adc
sub
repnz
int
jns
pop
pop
xchg
or
cltd
or
mov
nop
insb
sahf
mov
lock
xor
lods
xchg
jge
xor
test
adc
jmp
mov
and
fnstenv
pop
cmp
sti
mov
sub
int
pop
pushf
scas
mov
out
mov
into
iret
inc
mov
sub
dec
jecxz
je,pn
mov
out
xlat
es
dec
jnp
push
add
push
mov
dec
std
xchg
arpl
mov
xchg
shll
ja
push
loop
outsb
push
ljmp
in
rep
adc
ficoms
subb
cmp
rcrl
inc
jle
add
in
sahf
jne
inc
and
jns
and
into
popf
call
pusha
sbb
arpl
mov
enter
insl
sub
les
stos
jg
inc
stc
ret
dec
inc
fisubs
fcmovnbe
mov
pop
push
ljmp
and
test
imul
rorl
icebp
subl
mov
dec
in
pop
pop
into
or
icebp
mov
lcall
sub
dec
movsb
sbb
sahf
test
filds
or
push
pop
inc
jl
in
test
mov
aas
fmull
popf
jle
xor
lcall
jge
pusha
nop
into
and
movsl
and
push
sarb
mov
je
lock
inc
ja
loop
stos
js
jmp
cmp
jno
testl
loopne
cld
lods
cltd
icebp
xor
lahf
cmp
cmc
sub
std
xlat
cmp
arpl
ret
nop
push
mov
adc
daa
repnz
orl
aas
xor
in
test
sbb
cli
movsb
pushf
je
lock
and
das
arpl
popf
daa
xlat
sub
xchg
enter
push
and
scas
sahf
inc
lock
jo
sub
test
adc
cli
divps
rclb
js
jo
add
shrb
scas
loope
push
push
pop
and
cli
scas
adc
adc
push
xchg
call
orb
shl
fadds
xchg
or
mov
and
add
mov
mov
cmpsb
cmp
sbb
inc
orl
adc
inc
inc
dec
and
push
add
pusha
mov
mov
aas
bound
fstpl
mov
push
pushf
addr16
scas
pop
stc
mov
pop
ljmp
into
fsts
aad
pop
fs
rorb
enter
lret
aad
jp
jmp
jnp
and
inc
jl
push
add
fidivs
xchg
orl
inc
xchg
cmp
jb
data16
mov
adc
xor
mov
sahf
ja
and
pop
out
testb
mov
popf
sahf
sbbb
lret
xchg
push
xchg
push
sub
psubusw
repnz
push
mov
test
adcl
aaa
mov
inc
lret
xchg
cltd
mov
subl
sbb
dec
cmp
adc
jbe
mov
nop
and
les
nop
lds
pop
mov
xchg
pusha
lock
jl
adc
rcr
xor
jg
or
cmp
stos
rcr
push
in
fwait
idivb
dec
lcall
and
rol
and
lods
sar
test
fs
xor
mov
sbb
mov
inc
sub
inc
xchg
aam
fistpl
outsb
lret
or
jnp
xchg
xor
fnstsw
inc
inc
pop
pushf
adc
or
nop
mov
add
xchg
js
test
mov
push
stos
jle
fstpt
or
or
fwait
inc
ljmp
movsb
fmul
and
fsubrl
push
mov
pushf
rorb
and
jnp
loopne
cmp
cmpsb
dec
js
repz
xor
dec
aad
mov
cmp
cmpsl
gs
fstps
test
loope
addr16
int
cli
inc
xchg
mov
ss
dec
cmp
outsb
dec
and
mov
inc
and
loope
sbb
je
ret
test
pop
sldt
sbb
push
lret
push
sub
mov
push
cltd
mov
pop
or
jmp
cmc
stos
mov
push
xlat
test
jge
or
and
jl
ds
icebp
inc
js
jge
cmp
sub
imul
adc
mov
imul
leave
out
push
inc
call
dec
pop
cmp
outsb
or
andl
daa
pop
push
cli
pop
pop
pop
inc
repz
xor
nop
out
stos
mov
call
or
push
lret
imull
stc
inc
push
fwait
pop
cwtl
push
aaa
jnp
add
sti
jmp
stos
js
mov
je
and
xchg
fdivs
mov
out
mov
sub
jl
xchg
iret
dec
xor
divb
xor
imul
out
or
adc
test
or
test
and
test
test
in
jle
bound
mov
out
in
add
test
jae
lahf
xor
add
ret
adc
mov
add
mov
aam
fnstsw
pop
sbb
cmovae
inc
rcll
push
pop
or
mov
add
iret
and
jmp
shl
adc
hlt
dec
in
xlat
jb
mov
test
scas
popf
pop
and
xor
out
mov
pushf
lahf
std
and
pop
inc
add
fwait
xor
mov
gs
outsb
sbb
sbb
fwait
and
xchg
ret
adc
or
add
sbb
inc
adc
arpl
ljmp
outsb
jne
hlt
pop
test
mov
cmp
mov
lea
adc
xor
mov
jns
cmp
inc
rol
mov
and
rcl
mov
fimuls
push
gs
jmp
cmp
push
fimuls
shl
sbb
jg
xchg
shlb
fisubl
fadds
fnsave
mov
out
decl
dec
inc
sub
cmpsb
sbb
stos
jns
daa
nop
push
js
and
xchg
movl
loop
mov
outsb
out
out
jnp
cs
mov
stos
sbb
dec
mov
push
push
push
int3
inc
repnz
rolb
xor
out
sahf
jnp
imul
fdivrp
in
mov
mov
sbb
jmp
mov
sbb
sbb
insl
mov
mov
outsl
jbe
push
push
sbb
outsb
fldt
ficoms
mov
dec
ret
cwtl
dec
jno
xor
jae
out
out
fcmovnu
mov
inc
xlat
xor
jl
jmp
inc
mov
jb
inc
icebp
jmp
stc
sahf
stos
iret
lret
mov
insb
jb
mov
or
nop
pushf
js
mov
and
nop
xchg
dec
xchg
jl
dec
lcall
xor
and
xchg
push
jg
sub
inc
out
sub
addr16
fsubp
mov
lret
mov
mov
repnz
je
dec
xchg
and
fs
adc
lds
adc
scas
bound
fnsetpm(287
rcll
push
addb
andl
pop
jl
test
jo
sbbl
and
cs
pop
xchg
lret
jbe
jns
fldcw
daa
jns
pop
mov
ret
out
pusha
cld
fincstp
ja
stos
outsb
jge
pop
lahf
jb
mov
mov
movsb
dec
xor
aam
cmp
in
lcall
jae
loope
jbe
ds
pop
push
outsl
cmp
jecxz
adc
mov
movsb
jl
out
mov
negb
test
add
xchg
lret
pop
mov
leave
pop
std
sbb
sbb
cld
or
and
mov
lahf
jl
mov
xor
jo
cmp
or
or
or
out
stc
and
mov
lret
test
loopne
movsl
fisubrs
cmp
dec
fisubs
or
jno
out
and
jno
popa
in
sub
inc
js
xorb
adcl
jge
aam
neg
push
adc
cmp
jbe
mov
test
adc
cs
test
and
pop
sub
aas
out
mov
mov
xlat
sbb
push
xor
dec
in
push
test
lcall
ljmp
adc
push
pop
xlat
jo
nop
lret
or
fcompl
js
sbb
lret
dec
push
notb
jecxz
stos
hlt
cmpsl
cwtl
push
cmp
aas
lods
pop
loop
mov
sub
repnz
add
xchg
in
sbb
sbb
sub
cld
stc
jle
add
push
jp
pop
std
sub
xchg
xlat
lds
jge
cltd
rolb
test
add
addr16
hlt
adc
sbb
pop
orb
mov
pusha
jnp
jp
ja
push
dec
sahf
cwtl
xchg
pop
push
fbld
mov
cld
xchg
pcmpgtb
dec
xchg
fiaddl
pop
mov
mov
push
pop
loopne
lea
xchg
xor
jle
pop
jg
adc
stos
lds
les
push
pinsrw
cmpsl
push
aas
pop
dec
sahf
sub
popa
xor
pop
insb
fistpl
adc
xchg
clc
in
inc
roll
cmpsb
mov
push
les
mov
dec
or
data16
mov
push
mov
mov
pop
xchg
xor
or
mov
fcoml
xchg
xchg
jle
xor
shrl
gs
mov
mov
mov
nop
mov
enter
call
sbb
arpl
pop
inc
fdivrl
push
inc
clc
push
and
lods
cmp
adc
ljmp
outsb
in
and
jno
and
mulps
jb
ret
adc
insl
pusha
pop
push
imul
pop
xor
icebp
pop
sarb
call
xchg
inc
aas
xchg
add
adc
inc
adc
pop
xchg
sub
cwtl
int
mov
fwait
stos
xor
lods
inc
mov
sbb
lock
loop
int3
or
and
sbb
jmp
mov
aam
jns
fdivrl
stc
jl
xchg
std
lock
pushf
and
push
inc
vorps
jo
or
jb
jecxz
dec
mov
pop
push
fninit
popf
test
inc
mov
pop
in
fdivrl
jnp
sbb
push
cli
mov
xor
lods
push
rcrl
out
or
in
inc
les
jne,pt
mov
mov
fisubrs
sub
mull
inc
jb
push
nop
rcll
aad
scas
and
and
mov
lret
jmp
dec
fwait
scas
add
imul
or
or
and
fldcw
lods
bound
arpl
js
jecxz
mov
pushf
sub
jmp
cmc
adc
ja
imul
add
xlat
inc
stc
imul
fstl
lret
sub
dec
and
mov
xor
fidivrs
bound
fsubrl
stos
mov
iret
cs
mov
mov
xor
mov
loope
imull
jp
insb
clc
sbb
lahf
dec
jnp
shrl
and
xchg
dec
aas
movsb
push
pushf
insl
mov
cltd
push
sahf
cs
je
pop
xchg
sbb
xchg
add
xor
ret
mov
cmp
mov
mov
fnsave
test
imul
pop
dec
repz
mov
mov
mov
scas
add
or
sbbb
or
push
lods
inc
scas
pop
mov
or
rcrl
cltd
bnd
into
adc
lcall
mov
jmp
test
bound
sbb
in
stos
add
loope
ficompl
pop
out
jae
mov
shrb
gs
andb
js
mov
inc
bnd
scas
adc
push
cmp
clc
out
dec
pop
mov
out
inc
adcb
inc
add
xchg
pop
int
clc
sub
sub
jge
sub
pop
mov
testl
fwait
popf
dec
pop
nop
add
jb
mov
cmp
ljmp
mov
push
or
fidivrl
pop
test
rclb
aad
icebp
mov
pop
mov
xor
push
add
adcl
add
xor
leave
jecxz
loope
hlt
push
mov
js
das
shl
dec
loope
fdivl
mov
fwait
in
adc
xchg
mov
xor
adc
add
inc
dec
pusha
insb
or
inc
or
negb
mov
gs
xchg
cmp
in
jl
out
and
cmc
scas
xchg
or
ret
flds
scas
mov
mov
xchg
cmp
ljmp
cmc
mov
insb
mov
hlt
and
das
std
xlat
xchg
dec
mov
jmp
int
sbb
add
push
pop
sbb
cli
add
pop
xlat
clc
mov
lock
mov
mov
dec
add
cmp
jecxz
fs
pop
xor
and
cmp
fsts
ds
inc
mov
ja
popf
push
sahf
ret
jge
ljmp
pop
test
fidivrs
enter
cwtl
subb
mov
jbe
cld
sub
clc
rorl
iret
hlt
cmpsl
push
push
mov
je
and
imul
js
fdivrs
aam
outsb
outsl
test
inc
push
mov
call
mov
mov
lock
mov
rol
pop
sarl
inc
mov
lods
push
ret
loope
test
jle
jb
push
lods
xchg
and
cmp
shrl
inc
push
stos
out
pop
std
ljmp
or
testl
inc
or
psrld
and
xchg
bound
ret
aam
xorb
dec
out
mov
xlat
cmp
test
push
or
adc
inc
ljmp
pop
jae
imul
push
insb
in
out
sahf
mov
mov
jns
and
adc
or
add
mul
call
jnp
lock
popf
aaa
repnz
push
sbb
rcrl
dec
mov
cmp
dec
mov
jecxz
mov
daa
cmp
add
loopne
and
add
adc
mov
stos
ret
pop
lcall
mov
inc
push
xlat
aad
mov
loop
fisttps
inc
or
jge
sbb
loopne
xchg
lcall
push
dec
xchg
mov
inc
cmp
mov
sub
pop
xchg
xor
es
dec
and
mov
jle
fbld
in
imul
addl
clc
inc
inc
push
sbb
mov
sbb
sti
fisttpll
addr16
push
cmp
lahf
imul
jg
hlt
ret
lds
in
mov
stc
mov
pop
lahf
out
addr16
cld
std
ss
and
test
bound
pop
shlb
cmp
xchg
adc
dec
fimull
inc
inc
mov
adc
fmull
fildl
pop
dec
xor
pop
cmp
push
adc
ljmp
mov
xchg
xor
ljmp
imul
mov
iret
ljmp
sarl
int
mov
xchg
add
and
push
ret
shll
mov
std
cwtl
inc
lock
xchg
push
scas
mov
sbb
lret
ljmp
dec
mov
filds
dec
mov
ss
mov
je
sub
xchg
add
stos
fldcw
movsb
sbb
repnz
sti
jl
ficoms
js
adc
and
sub
sbb
mov
fidivs
aam
jmp
pop
insl
push
mov
pop
jle
jae
pushf
fstps
mov
xchg
adc
repz
enter
out
dec
push
pop
fmull
gs
pop
aam
inc
mov
out
pusha
shrl
mull
sub
pop
dec
dec
test
cmpsl
inc
pop
lret
xchg
and
pop
dec
repnz
mov
and
mov
inc
adc
addb
cmpl
fistpl
sbb
mov
arpl
popa
push
out
stos
pushf
add
aad
sub
sbb
addr16
xchg
cmp
ds
fstps
into
and
inc
scas
pop
sbb
test
dec
or
lret
js
imul
test
std
decl
je
mov
mov
in
out
cld
cltd
sub
ror
pop
mov
xchg
mov
mov
ret
xchg
loopne
jle
push
lds
and
ret
shl
cmpl
dec
stos
in
mov
push
and
fidivl
push
sbbb
repnz
pop
push
fxch
mov
loopne
loopne
hlt
add
add
dec
ficoml
and
jmp
adc
sbb
jmp
adc
sub
xchg
imul
jbe
sub
cmpsb
mov
sbb
dec
jp
jo
popf
test
js
push
shlb
loope
dec
flds
add
les
js
jmp
test
mov
inc
xor
lods
in
pop
hlt
in
dec
jmp
mov
add
lods
xlat
xchg
xor
aas
push
rcrl
fcmovb
dec
add
dec
cmpsl
ss
mov
sbb
push
push
in
inc
adc
sbb
pop
fs
or
mov
inc
mov
loop
fnstsw
mov
xchg
loop
addr16
cmp
cmpsb
jg
rolb
out
push
mov
sbb
loop
test
pop
scas
sub
cmc
add
pop
ljmp
stc
add
or
adc
inc
mov
es
shrl
pusha
xor
fimull
adc
inc
sarb
jmp
fisubl
dec
and
std
mov
mov
sub
pop
scas
movsl
outsl
sub
cwtl
inc
add
xchg
outsl
sbb
shll
dec
sbb
xor
aam
add
cmpsb
add
pop
or
inc
sbb
das
dec
add
jecxz
or
push
ds
xor
fs
mov
sub
pop
xor
in
mov
mov
stos
sub
cwtl
das
outsl
push
or
mov
cmp
mov
pop
push
add
in
sbb
mov
test
lods
or
push
sar
pop
jne
mov
aad
adc
in
loop
cmp
or
int3
pop
or
or
push
dec
cli
add
pusha
sub
pop
mov
push
push
mov
mov
xor
add
call
fisubrl
pop
test
mov
aad
cli
int
cmp
sbb
daa
test
and
dec
mov
jns
outsl
rorb
sarl
sub
cmp
adc
sbb
enter
les
out
loop
dec
in
mov
push
imul
dec
pop
dec
sbb
push
jns
and
pushf
jp
das
xor
sub
push
sub
push
lods
out
test
mov
ss
aad
sbb
add
das
mov
sbb
movsb
push
inc
aaa
jno
or
adc
cmp
sub
in
mov
pusha
xchg
ljmp
lock
jecxz
in
dec
mov
repz
dec
cmp
mov
lea
cmp
add
das
xor
add
mov
fsub
fisubrs
jmp
xor
pop
std
imul
pop
mov
sub
mov
dec
test
rcrb
pop
mov
dec
cltd
movsl
cltd
sbb
add
fisubl
jmp
int
gs
mov
imul
xchg
imul
std
sti
xor
hlt
nop
daa
inc
mov
sahf
xchg
jle
inc
adc
inc
pushf
into
sub
pushf
testl
mov
pop
dec
lcall
loope
xchg
sti
inc
int3
loop
loop
add
js
jge
mov
sub
mov
mov
ja
mov
js
js
test
rolb
dec
cwtl
into
and
sbb
mov
jl
xor
add
xchg
pop
into
pop
cmp
or
bound
sub
mov
mov
inc
jno
sub
outsl
iret
rolb
cmpsl
aad
adc
iret
mov
insb
popf
int3
mov
jnp
mov
gs
sbb
xchg
push
xchg
mov
mov
pop
fwait
push
int3
jp
leave
daa
jnp
ficompl
ret
gs
push
inc
and
scas
lcall
shll
push
sarl
call
mov
sbb
imulb
jbe
push
lock
cmpsl
and
fistpl
sbb
push
cmp
jge
cli
xchg
sbb
and
movsl
jns
jae
pushf
mov
pop
dec
ret
jecxz
adc
jecxz
jmp
stos
pop
repnz
out
dec
jl
js
cwtl
dec
fdivs
and
sub
fistps
aas
xchg
cwtl
mov
jnp
push
mov
mov
out
sub
dec
dec
sub
addr16
pop
ret
cs
dec
mov
das
xchg
mov
enter
xchg
int
mov
test
xchg
imull
das
pop
out
push
out
sub
lock
or
int3
lds
jle
xchg
scas
sbb
in
xchg
push
jmp
jnp
outsb
fmuls
sbb
and
push
mov
dec
and
aad
or
js
sarb
jno
adc
or
ja
push
cli
lods
mov
push
lods
mov
jb
outsl
sbb
clc
jmp
jmp
cmpsb
sub
shrl
sub
mov
aas
xor
insl
cmp
fmuls
inc
xor
fwait
test
adc
and
dec
insl
pusha
jg
add
dec
pop
repz
stos
xor
inc
add
pop
ret
mov
push
pusha
push
push
ror
push
insl
call
icebp
mov
cwtl
jge
fs
pushf
xchg
popf
jmp
mov
push
addr16
and
inc
jne
loope
arpl
sbb
xor
rolb
xor
jmp
cli
shrb
scas
mov
cld
inc
insb
sbb
add
pop
mov
sar
add
in
mov
push
popl
loope
pushf
in
sub
cli
les
lcall
fldcw
aaa
icebp
sahf
fs
adc
cli
push
xor
movl
loope
mov
jb
push
aam
outsb
cwtl
sbb
dec
int
mov
mov
fimuls
inc
arpl
or
scas
dec
sbb
addr16
mov
outsl
mov
mov
out
mov
sub
inc
push
andb
adc
jns
adc
nop
mov
push
jp
fsubrl
push
std
lret
daa
addr16
call
push
js,pt
in
pushf
in
mov
mov
xchg
and
and
xchg
cmpsb
js
roll
int
out
and
cld
mov
pop
mov
sbb
mov
fdivrl
ss
adcb
cmp
add
add
cmp
jle
xor
xor
lahf
lret
sub
into
aas
out
lea
stos
imul
add
pop
cmp
insb
mov
out
aas
sbb
aas
outsb
rcrl
dec
shlb
lret
push
dec
push
mov
repnz
sbb
push
xor
xchg
push
xchg
bound
fists
push
scas
and
pop
inc
adc
pop
jae
dec
jne
leave
inc
jmp
shlb
out
nop
pop
dec
or
push
xchg
je
daa
call
jp
add
dec
pushf
test
and
pop
fisttps
add
out
loop
mov
fst
dec
arpl
jae
ja
into
cmp
sbb
mov
sub
jne
cmpsb
pop
rcll
xlat
or
cmp
cmp
pushf
or
dec
lcall
or
scas
notl
test
and
or
lcall
out
cmp
aaa
fidivrl
scas
sub
sbb
scas
mov
loopne
mov
sahf
xchg
jno
cltd
push
inc
mov
loopne
int3
ss
xchg
dec
push
xchg
sub
inc
aam
mov
push
negl
mov
icebp
xchg
mov
lcall
adc
cld
aaa
js
and
mov
fldcw
push
fstps
add
xchg
add
mov
loope
fldenv
jns
sub
add
fisttpl
cmp
cli
lods
popa
add
hlt
imull
sahf
aas
jge
add
cmp
mov
jl
xor
insb
dec
jbe
clc
in
loop
or
popf
inc
je
fistl
dec
shr
ret
mov
out
or
pop
mov
xchg
pop
mov
rclb
stc
cs
or
pop
mov
xchg
ds
push
inc
scas
jmp
mov
push
pop
shll
dec
leave
cmpsb
and
std
mov
adc
icebp
ds
pusha
pop
xchg
test
subl
mov
jnp
inc
rcr
and
inc
fwait
sbb
adc
ja
mov
mov
jno
mov
mov
cwtl
jns
push
popf
or
test
repnz
mov
mov
xchg
dec
push
lret
pop
loop
add
mov
adc
cwtl
pop
xchg
iret
jbe
daa
ja
inc
mov
sbb
mov
int3
imul
pop
add
mov
pop
dec
cld
sti
in
cmpl
jne
mov
mov
inc
inc
gs
push
xchg
mov
test
jnp
lods
add
pop
or
jg
jmp
jns
aas
sti
jb
inc
hlt
in
cld
lock
sbb
pop
adc
loopne,pt
fcompp
push
jge
xchg
bswap
cmpsb
adc
testb
js
sub
jnp
lds
sbb
mov
mov
popf
ds
push
and
das
adc
cmp
outsl
imul
imulb
mov
sub
pushf
mov
ret
xchg
pop
xchg
pop
pop
pop
push
popa
test
in
insb
nop
mov
or
or
or
inc
das
mov
pop
fnstsw
add
enter
add
ret
jmp
mov
fsts
xor
push
mov
push
psrlw
test
adc
mov
lock
sub
inc
fcompl
pop
push
pop
lea
leave
outsb
jbe
cmp
dec
and
arpl
jecxz
sti
pop
push
scas
adc
loop
jb
out
xchg
cs
sbb
pop
mov
add
and
movsl
cs
add
push
xchg
std
xor
negb
clc
negl
mov
sbb
cs
ror
sbb
outsl
fisubrl
xchg
sub
xor
jne
lret
daa
or
inc
test
mov
bound
lock
jl
insb
xchg
mov
dec
and
shrb
aam
outsl
adc
pop
xchg
outsl
push
outsl
movl
loopne
push
pop
xchg
cltd
insb
adc
in
aad
mov
cwtl
sbb
lea
pusha
je
and
enter
cmpsl
cmp
sti
or
repnz
jp
and
cmc
aas
cmpsb
sub
mov
imul
idivl
fidivrl
add
ret
in
in
or
out
out
mov
dec
or
dec
pop
cmpl
or
rorb
into
xchg
inc
push
mov
dec
rorb
xchg
cwtl
dec
and
jno
and
fwait
fwait
and
fsts
out
push
xchg
xchg
push
jb
cmp
fimuls
push
pop
lcall
xlat
jmp
stc
fstl
pop
lods
xchg
cwtl
in
loop
add
jb
and
dec
fimuls
shlb
out
shl
xor
pop
sub
mov
jno
data16
fwait
mov
ret
fidivl
in
outsl
sbb
mov
cmp
mov
xchg
lahf
enter
sub
adcb
sti
or
inc
into
movsl
sub
push
insb
pusha
ret
or
js
sbb
mov
xor
mov
mov
push
push
jno
bound
fcmovbe
push
hlt
out
xor
sub
repnz
cmc
sbb
lahf
popa
lcall
incl
dec
cltd
aad
mov
xchg
test
ljmp
mov
cmpsb
sahf
sbb
adc
adc
leave
lcall
lea
stos
std
and
jne
mov
les
sub
add
sub
xor
add
test
pop
xchg
xchg
sub
bound
inc
arpl
mov
mov
dec
jns
lcall
iret
lock
sub
aas
loope
jae
roll
add
push
sbb
pop
pop
and
or
es
mov
or
dec
gs
es
xor
out
popf
xchg
mov
cmp
ljmp
mov
pop
bound
scas
test
pop
pop
jp
mov
addr16
dec
cmc
add
and
iret
sbb
and
iret
cmpsb
inc
adc
int3
jnp
jl
fadds
daa
loope
adcl
sahf
popf
jle
mov
jle
fstpt
movsb
dec
ret
fisttpll
aaa
xchg
push
dec
scas
adc
inc
adc
push
test
mov
pusha
shlb
insb
and
mov
jbe
dec
push
ds
icebp
push
pop
stos
mov
sahf
ss
aad
stos
ret
rcl
stc
cmp
mov
mov
dec
push
xor
nop
sarb
lock
jge
fidivrl
rcrl
dec
pop
cmp
enter
fucomi
cwtl
pop
out
lea
lods
push
mov
lods
int3
push
insl
in
mov
push
sub
push
pandn
cmp
xchg
bound
je
into
in
lcall
lods
jne
jbe
mov
jnp
gs
test
or
sub
dec
mov
add
jmp
xlat
cmp
gs
lods
or
test
pop
cmp
jae
and
lods
std
mov
bound
inc
out
xor
fsubrl
int3
aad
in
mulb
ljmp
lea
mov
ficoms
pop
dec
ljmp
cmc
in
idivl
movsl
or
sbb
mov
xchg
shl
dec
cmpsl
clc
imul
mov
inc
jg
jg
cmp
lods
mov
push
mov
mov
fistpl
adc
mov
ret
jecxz
pop
add
ds
repz
xchg
out
pop
js
repnz
lods
dec
add
insl
cli
stos
add
mov
xchg
nop
xchg
push
xor
mov
shrb
jl
jo
jbe
sub
adc
push
rorl
mov
les
cld
aam
pop
xchg
mov
shrb
mov
pop
sub
pusha
imul
cmc
daa
sbbb
and
popa
insb
cld
out
adc
fstpt
test
jmp
mov
data16
cli
movsb
xor
nopl
and
sub
mov
jne
mov
bound
cltd
verr
adc
hlt
inc
push
add
push
and
pushf
mov
aad
xchg
inc
in
dec
push
loop
or
pop
mov
popf
inc
mov
jnp
jecxz
inc
sub
rol
xor
cmp
xchg
xor
hlt
adc
xchg
xchg
test
adc
popf
inc
aaa
sarl
push
or
out
cmp
mov
in
test
lock
aas
or
lcall
cld
sahf
sub
xorl
mov
mov
insl
dec
add
lds
mov
lods
cmc
popf
sbb
jno
mov
sahf
popa
shlb
push
je
push
in
inc
imul
ret
push
add
lahf
int3
mov
push
insl
pop
xor
xor
lahf
mov
dec
mov
in
aad
int3
pop
subb
sbb
inc
test
fwait
jg
cmpsl
lret
lahf
jno
pusha
dec
gs
mov
dec
cmp
mov
shlb
enter
fisubl
sbb
push
pop
jo
or
iret
push
push
imul
cmpsl
xchg
dec
dec
repz
jge
stos
mov
roll
outsb
outsb
mov
mov
push
outsl
mov
divl
jmp
pop
jge
push
push
mov
jnp
add
mov
test
sbb
ds
jl
pop
loope
jecxz
loopne
sbb
sbb
pop
imull
jns
inc
std
push
icebp
icebp
sub
mov
gs
pop
scas
mov
insl
mov
in
leave
adcl
push
push
notl
fstps
lcall
lret
ret
dec
shll
xchg
aam
push
push
bound
or
lcall
dec
add
pop
push
and
lcall
in
push
call
inc
add
fmull
adc
xchg
mov
mov
cmpsl
stos
call
test
sbb
or
pop
xchg
pop
in
sub
sub
clc
mov
push
or
xchg
mov
ret
icebp
sub
jl
or
pop
lahf
xlat
mov
cltd
sbb
inc
stos
fwait
in
in
std
push
adc
fdivrs
outsl
mov
jl
rcrb
sbb
mov
push
loopne
mov
add
dec
mov
xchg
iret
dec
dec
in
and
fs
sbb
pop
xlat
and
inc
adc
ss
xchg
dec
rcll
mov
jnp
rol
xor
dec
push
adc
adc
pusha
add
or
mov
cmpsb
jg
fisubrl
bswap
xlat
mov
hlt
lock
sub
jg
mov
add
std
inc
imul
mov
pop
jp
fsubrl
mov
and
cwtl
sbb
jnp
adc
subb
cmp
and
jae
repz
out
rcrb
fiaddl
andl
adc
pop
leave
cmp
mov
mov
jecxz
sbb
jae
push
or
mov
pop
pop
xor
cmp
adc
testl
adc
movsb
adc
adc
cmp
iret
adc
test
and
dec
xor
ja
cmc
push
jmp
insb
ret
test
fisttps
cmpsl
cmc
lods
jl
dec
xchg
lods
pop
aad
mov
pop
mov
out
mov
lds
cmp
sub
jb
sbb
lahf
lcall
roll
es
int3
dec
add
xchg
sbb
je
leave
mov
mov
movsl
into
push
fwait
insb
cmpsb
pop
cld
sub
pop
xor
loopne
cmpsl
daa
cmp
insl
je
adc
mov
xchg
or
aad
fimull
nop
ds
insb
test
or
cmp
or
add
dec
aad
dec
ret
insb
mov
inc
int3
lret
les
in
mov
or
andl
or
xchg
jge
cmp
sbb
dec
push
repnz
inc
mov
out
or
adc
mov
sbb
loopne
movsb
or
aaa
sbb
push
xchg
ljmp
pop
dec
mov
cld
mov
mov
sub
xchg
xor
xor
cli
iret
dec
inc
cli
jmp
inc
lcall
mov
repz
aam
es
ja
ret
daa
cmp
cmp
xchg
mov
xchg
cmp
pop
shlb
pop
lods
jl
push
push
jmp
ret
push
scas
mov
xor
ret
sbb
es
jb
xchg
mov
mov
adc
int
cmp
pop
xor
sti
ret
push
xor
inc
cmp
daa
ds
jmp
popa
jb
push
xor
fnstcw
mov
sub
jge
xor
or
add
cwtl
std
fisubs
add
sbb
cwtl
add
jne
mov
sub
shrl
stos
mov
stos
jne
int
xchg
jle
jb
movsl
xor
loope
adc
ljmp
cmp
lods
xchg
push
test
xchg
std
and
or
pop
mov
jo
out
xlat
mov
mov
pop
lock
shrb
cmpsb
out
sub
jo
jg
jge
sbb
dec
in
mov
std
fimull
dec
pop
mov
les
push
imul
mov
cmpsl
js
pop
aam
call
sub
cmp
sub
ds
add
fcoms
sub
mov
call
pop
outsb
fwait
jp
inc
adc
stos
insl
mov
mov
sbb
mov
xchg
ja
jp
out
mov
cmp
cld
loope
rol
inc
sub
and
sbb
les
insl
je
lahf
ja
jb
scas
mov
and
outsb
cmp
jge
dec
test
lcall
mov
dec
adc
sbb
and
jecxz
out
imul
or
ret
pop
push
fwait
xor
jne
xorl
out
xchg
popa
pushl
cld
mov
ret
push
mov
pop
and
pushf
sub
sbbb
loopne
adc
test
ss
aas
or
add
push
fcompl
inc
cmp
or
in
das
xor
aad
aam
nop
sbb
adc
cli
test
int3
les
in
bound
loopne
inc
rclb
push
xchg
loopne
loope
cmp
andb
xor
pop
push
jecxz
adc
in
cli
sub
add
sbb
cmp
neg
jl
test
mov
mov
pusha
idivb
push
mov
mov
clc
repz
cwtl
mov
sbb
xor
scas
xchg
fcomp
neg
lods
fdivrs
out
call
sbb
sbb
mov
arpl
rcrb
mov
and
adc
mov
je
scas
inc
mov
icebp
mov
movsb
bound
inc
orb
addb
push
aaa
xor
mov
xchg
lret
or
xor
sar
xchg
sub
outsl
addr16
movsb
mov
loop
lcall
cli
outsb
dec
adc
mov
cmp
out
or
xchg
sbb
mov
jae
mov
xchg
mov
aad
inc
jecxz
cmp
cmp
dec
ja
call
pop
adc
stc
mov
sub
call
aad
xchg
and
or
fdivrs
jg
jne
repz
lods
cmp
add
scas
in
cmp
sbb
repnz
pop
mov
xchg
aad
push
cwtl
aaa
push
fadds
sti
cmp
mov
loop
jl
bound
lods
add
ljmp
mov
and
pushf
cmp
sbb
adc
cld
cmp
pop
add
popf
xchg
xchg
gs
mov
cmp
shlb
sub
push
adcb
in
aas
add
mov
ja
cmpsb
js
jp
jo
jb
adc
sub
sub
jbe
jmp
sub
hlt
stos
insb
inc
mov
adc
jo
mov
xchg
push
pop
xchg
aad
push
adc
pop
out
pop
or
scas
or
cmpsl
add
push
fxam
xorl
cmp
rcll
add
pusha
jno
scas
jl
sbb
fldt
add
mov
insb
inc
imul
or
inc
dec
ret
jl
push
js
jnp
lgs
lods
jmp
cmp
push
mov
pop
int
xor
sbb
sbb
push
sti
lds
sbb
arpl
inc
pop
lcall
push
in
stc
out
es
inc
mov
sbb
stc
das
push
movsb
mov
jae
popf
sbb
mov
mov
loop
mov
js
jmp
imul
and
mov
mov
int
popf
lock
jecxz
mov
repz
fdiv
dec
xchg
into
int
fisubrs
aam
xchg
rcrb
cli
ljmp
insb
out
lods
ffreep
roll
sub
or
scas
into
pop
rcrb
adc
inc
mov
mov
stos
adc
or
out
jbe
cld
cld
fs
test
dec
push
icebp
test
ljmp
iret
cmp
lods
leave
mov
roll
mov
add
jne
fidivrl
pushf
xchg
loope
or
loop
popf
mov
inc
xor
push
movsl
stos
in
data16
cmpsl
cmp
sti
mov
cwtl
loopne
xchg
mov
fstps
and
rorl
cs
mov
lahf
fs
xchg
jmp
frstor
incb
mulb
or
xor
jg,pt
pop
adc
xchg
mov
sti
repnz
sbb
das
jmp
pop
fmuls
std
leave
out
sbb
faddp
insb
cmp
sti
fidivs
jge
cmc
cmp
cmpb
out
shlb
movl
push
dec
fcmove
mov
sarb
out
or
mov
and
mov
lods
clc
add
dec
pop
popf
scas
ljmp
xchg
mov
rorb
outsl
movsl
lret
jno
xor
popf
mov
xchg
xchg
mov
bound
cmp
in
pop
sub
or
push
xchg
lea
and
aad
mov
mov
ja
mull
imul
cmpsb
push
xchg
mov
xchg
mov
add
cli
test
leave
repnz
out
and
xchg
pop
pushf
push
jmp
pop
fisubs
out
stos
idiv
lret
cltd
pop
in
stc
sub
and
push
into
cld
enter
mov
test
mov
pop
pusha
cltd
adc
xor
test
sub
fimuls
in
lahf
test
fucomp
iret
jnp
pop
lds
stc
xchg
ds
push
sub
pop
jne
lea
stc
dec
jb
andl
icebp
mov
call
shlb
into
mov
mov
add
mov
bound
pop
xchg
clc
jnp
mov
out
or
ds
cmp
jg
shl
sbbl
mov
outsl
inc
shll
lods
add
jmp
cs
imul
push
cld
pop
iret
jae
test
push
sub
pop
adc
fistpl
xor
mov
sub
std
aad
sbb
add
nop
sub
icebp
fsubrs
pop
aam
cmp
jno
shrl
test
sarl
icebp
sub
sub
mov
loopne
mulb
and
outsl
dec
sub
mov
lret
mov
call
dec
insb
mov
movsb
lahf
in
adc
pcmpgtw
sahf
push
adc
test
inc
imul
clc
push
xchg
mov
jle
dec
addr16
inc
push
jne
push
mov
or
cmp
pop
mov
mov
mov
xchg
or
or
orl
sbbb
lahf
xchg
mov
jae
xor
dec
jne
rclb
sbb
mov
out
dec
ror
jno
mov
dec
xor
xchg
xchg
mov
stos
cmpsl
mov
jle
adc
fsubrs
and
add
inc
test
repnz
imul
sub
pop
xchg
je
jbe
mov
pop
mov
xchg
flds
jg
and
inc
adc
dec
cmp
push
cmpsl
loopne
fsubrs
and
lcall
mov
sbb
jae
das
shrb
lea
rclb
jge
fstps
add
xchg
jp
lret
pusha
aam
sbb
insb
gs
push
inc
enter
std
xchg
hlt
sbb
and
fwait
mov
popf
inc
xchg
mov
sti
jnp
sbb
fs
jecxz
scas
fsubl
pop
out
and
andl
jmp
sub
mov
cmpsl
pop
iret
mov
sub
stc
test
pop
ffree
jb
fcomps
aaa
pusha
dec
mov
xchg
pop
gs
in
stos
sub
movsl
nop
frstor
daa
ja
xor
pop
mov
rorl
aas
mov
push
fsubrp
sub
daa
inc
dec
fnstsw
push
js
or
xchg
cmpsb
jge
out
xchg
mov
lret
in
dec
mulb
fsubs
and
adcl
xchg
add
ja
inc
xchg
lods
xchg
push
xor
dec
lret
mov
scas
out
ja
lahf
jbe
sbb
decl
sbb
mov
and
daa
aas
dec
pop
fwait
jbe
cmp
dec
sub
mov
or
cld
enter
clc
divb
aam
fiaddl
mov
ds
sub
cmc
lds
lret
in
mov
mov
mov
jle
dec
mov
stos
mov
mull
leave
xchg
sarl
sbb
push
ljmp
or
jnp
and
pop
cmpb
aaa
lds
cmp
sub
mov
pop
test
dec
in
sub
lds
scas
fidivl
mov
or
push
hlt
test
push
add
add
mov
push
cmc
scas
icebp
pusha
sti
out
xchg
or
push
negb
cli
rcll
test
std
popa
dec
push
sbb
pop
sub
pop
shl
mov
dec
out
xchg
arpl
mov
mov
ret
mov
jno
cmc
push
or
ja
sbb
push
aas
xchg
xchg
pop
test
dec
jg
lock
in
ktestw
sub
filds
jge
and
mov
movsb
mov
mov
mov
ja
inc
adc
popf
xor
popf
cs
jle
out
xchg
daa
adc
data16
cltd
fildll
fists
or
movsl
add
ja
call
int3
dec
add
or
add
stos
or
test
loope
or
pop
xchg
dec
fidivrs
lea
cmp
add
ds
push
mov
mov
fmul
popf
mov
popa
insl
mov
xor
sub
cmp
cmc
push
cmp
lcall
out
fdiv
inc
pop
cmp
or
sbbl
cmpsb
outsl
jo
fs
test
in
xor
mov
cmpsb
dec
sub
mov
jp
fists
incb
cmp
jp
sbb
xor
in
rclb
push
fadd
in
int
xor
dec
std
xchg
test
sahf
insb
xchg
or
ret
jle
or
xchg
js
mov
lret
ss
jnp
fstps
cmpsl
add
lcall
push
inc
ja
cld
mov
gs
ja
stos
xchg
subb
rclb
xlat
sbb
ret
adc
aam
sbb
push
pop
andl
dec
iret
jmp
outsb
or
inc
cs
push
push
jmp
pop
into
add
aad
push
cwtl
add
add
aaa
cltd
xchg
cmc
insb
in
jg
popa
xchg
or
imul
jae
pusha
push
es
repnz
dec
int
mov
adc
test
loopne
js
mov
mov
aad
xor
test
dec
or
sbb
fildl
mov
adc
das
jns
sti
dec
ficoml
push
test
sbb
pop
adcl
sub
xchg
fdiv
cmc
sub
pop
add
jp
inc
popl
roll
adc
xchg
jns
in
mov
sbb
rol
int3
lahf
test
ja
jnp
enter
insl
test
outsl
xlat
xor
mov
repz
pop
test
mov
repz
sub
and
xchg
jbe
cmp
int3
out
adc
sub
fdivrl
adc
cmp
push
cmc
mov
cmovl
sub
in
icebp
mov
scas
jge
dec
xor
sub
imul
repz
in
and
dec
in
rorl
lods
lret
push
pop
out
into
aas
mov
inc
jns
pop
lods
lcall
add
fisttps
insl
ds
adc
add
jp
mov
and
inc
xor
or
cwtl
ss
push
mov
cmpsl
xchg
jne
movl
imul
xchg
inc
rol
lds
bound
lds
jp
lods
imul
mov
shlb
xor
cltd
aaa
inc
popf
iret
orl
pop
xchg
lcall
push
mov
mov
jnp
sahf
inc
nop
sarl
jmp
fsubs
shl
rorl
sbb
jmp
inc
push
sub
mov
dec
sti
es
sbb
ja
sbb
nop
cmpsb
mov
nop
or
or
adc
fwait
and
pushf
repnz
dec
or
jae
mov
ds
mov
jbe
in
jmp
cmp
fistps
mov
fwait
mov
mov
sub
aad
sub
mov
repnz
push
mov
stos
cmp
sbb
pop
mov
insl
out
enter
out
push
aaa
sub
mov
clc
jns
ljmp
adc
mov
inc
and
inc
sub
fsubr
out
out
pop
cmc
lcall
scas
sbb
cltd
lahf
std
shrl
sub
dec
and
stos
xchg
lret
fmull
scas
call
scas
clts
loopne
inc
and
inc
sahf
mov
push
out
cmp
fsubrl
lods
add
sub
and
stc
and
daa
sub
inc
repz
andl
adc
repnz
mov
pop
sti
shl
cmp
xchg
insb
jo
test
decb
in
pop
daa
cltd
xchg
cmp
nop
mov
daa
mov
xchg
jns
and
xor
cs
divl
mov
pop
xor
add
ficoml
je
sarb
push
jne
and
jae
and
mov
push
mov
daa
mov
xlat
pusha
dec
mov
dec
nop
sahf
push
gs
or
stos
push
cmpsl
stos
addr16
jno
pop
stc
mov
insb
pop
imul
push
sahf
adc
icebp
jnp
ds
ljmp
rclb
xchg
sbb
stos
dec
pop
sahf
ja
addr16
ret
jnp
idiv
enter
loope
orb
imul
cmc
std
scas
insb
xchg
int
ffree
jae
jno
cltd
call
aam
and
popa
jbe
fs
sbb
cmpsl
nop
xchg
rcrb
xor
imull
jo
fidivs
test
jmp
pop
push
sbb
adc
cwtl
sub
dec
out
mov
arpl
push
lea
inc
fwait
add
xchg
ljmp
out
and
mov
cld
cmp
push
enter
aas
mov
test
mov
daa
cmp
pop
enter
test
push
daa
cmp
mov
divb
dec
jl
jp
pop
cltd
pop
pop
add
or
cmp
cwtl
add
dec
fdiv
in
sbb
je
pop
sbb
dec
adc
into
or
lock
jecxz
lods
je
mov
mov
orb
cmp
and
insb
or
clc
icebp
pop
stc
in
jecxz
cmp
xchg
leave
mov
add
push
mov
xchg
dec
mov
push
ds
sub
das
mov
leave
pop
ret
mov
add
or
nop
pop
jmp
sahf
cmp
clc
aaa
daa
scas
and
icebp
and
repnz
insb
xchg
jne
sti
mov
jno
pop
es
inc
fisttps
addb
or
mov
ljmp
pop
sub
xchg
adc
jno
popf
push
roll
test
adc
ret
push
test
jnp
dec
pushf
add
out
cltd
test
jg
xor
dec
fisubrs
add
es
mov
fsubl
aas
andb
dec
cmp
adc
inc
and
jg
mov
cmc
inc
xchg
add
jl
outsb
sub
inc
push
xchg
mov
mov
jb
aam
roll
mov
out
pop
test
hlt
shrb
les
test
xchg
inc
fmuls
xor
sbb
movsl
insb
xchg
mov
rolb
adc
mov
jge
dec
sub
sub
add
and
add
cmpl
arpl
shll
movsb
daa
subb
mov
add
add
mov
sbb
jge
mov
stos
add
cltd
movsb
repz
icebp
leave
sbb
jno
divb
add
adc
push
jo
movsl
and
dec
mov
in
sbb
jl
cmp
mov
imul
xchg
cltd
in
jecxz
cmp
add
pushf
pop
lcall
xchg
xchg
insl
test
pop
cmpsl
iret
sub
mov
or
test
dec
cmpsb
rorb
or
aaa
jae
stos
popf
movsb
divl
mov
sub
cmpsb
adc
pop
dec
je
gs
test
stc
mov
xchg
push
jae
cmp
jns
je
jne
pop
popf
dec
jo
rorl
ja
add
inc
cwtl
fs
adc
adc
dec
jg
iret
clc
jb
jb
out
dec
das
leave
cmp
imul
aam
and
test
push
sahf
mov
loope
cmp
adc
cmpsb
daa
mov
mov
icebp
push
mov
pop
cs
imul
mov
in
ljmp
pop
push
inc
mov
jno
adcl
inc
icebp
mov
retw
xchg
cmp
mov
xchg
pushf
out
jns
insb
popf
dec
push
lea
push
inc
test
push
out
repnz
pop
daa
dec
or
mov
call
push
mov
data16
or
mov
in
ret
add
adc
push
push
scas
cmp
dec
idivl
inc
mov
std
arpl
mov
leave
xchg
in
mov
call
xchg
or
sbb
dec
lods
and
jno
movsb
push
daa
xchg
sbb
xchg
sub
pop
cmp
fistl
mov
pop
and
push
dec
mov
dec
mov
in
lock
subl
mov
pop
lds
inc
adc
pop
jle
int3
notb
xor
mov
push
outsb
add
arpl
xchg
shlb
push
xchg
call
or
dec
sbb
cmp
pop
popf
fwait
inc
aam
xchg
insb
push
in
cmp
mov
pop
adc
push
outsl
repz
scas
insl
cli
scas
insb
in
filds
faddp
jle
sbb
dec
lods
cltd
push
push
imul
or
loop
stos
cmp
lret
loopne
cmp
adc
cmp
mov
mov
aam
and
arpl
shll
cmp
mov
movsb
push
das
mov
xor
ljmp
sti
jns
stos
pop
dec
dec
mov
xchg
mov
xor
xchg
movsl
lret
out
mov
lds
or
aam
sbb
mov
and
mov
loope
test
insl
add
jbe
mov
insb
xchg
int3
jecxz
test
aam
add
popf
and
clc
or
xchg
in
dec
mov
jb
adc
enter
enter
mov
or
inc
mov
jmp
cmpsl
fsubs
mov
sbb
mov
xchg
sub
hlt
mov
sub
pushf
cmp
mov
push
lods
in
adc
jb
fwait
cs
push
inc
mov
adc
gs
cltd
xor
pop
push
jecxz
cmpsl
rcll
dec
xchg
push
ja
dec
nop
iret
xchg
dec
cmp
sub
xchg
iret
hlt
lahf
aaa
adc
mov
and
subb
xchg
xchg
cmp
ret
or
call
adc
mov
push
adc
and
fldcw
hlt
xor
movl
and
add
sbb
loopw
cmpb
mov
sub
out
call
adc
mov
adc
dec
loope
pop
ds
hlt
or
jne
notl
arpl
mov
xchg
sub
xorl
dec
mov
xor
lock
jno
inc
fstpl
setg
sbb
dec
out
mov
movsl
mov
lock
daa
pop
aam
jecxz
shl
cmp
add
jl
xchg
jne
shll
mov
cltd
pop
jb
push
mov
add
add
push
test
popa
or
pop
mov
sbb
test
das
sub
push
mov
in
js
daa
mov
push
mov
repnz
cwtl
iret
add
xor
mov
jns
mov
cwtl
fldcw
mov
jg
jp
or
sbb
pop
add
xor
in
test
push
stc
das
lds
xchg
lock
jecxz
outsb
test
lahf
imul
arpl
xchg
xchg
push
push
adc
sbb
lret
xchg
mov
pop
fidivl
subb
push
inc
cmp
test
into
out
iret
insl
sub
loope
pushf
cmpsl
xor
ret
loop
pop
lcall
adc
xchg
sbb
xchg
add
xor
gs
push
or
dec
add
add
mov
gs
and
or
je
adc
fidivrs
stc
xchg
lods
sbb
lods
cmpsl
xchg
pop
sbb
cld
cmpsb
inc
push
xor
mov
iret
add
cmpsl
fs
sbbl
inc
add
cmpsl
loop
int3
push
testb
lea
sub
or
pop
adc
pop
push
xor
ret
cld
daa
pop
call
pop
push
and
or
ja
scas
and
fyl2x
dec
test
push
and
sahf
aas
mov
out
test
popa
or
sub
mov
in
xchg
jg
push
loopne
mov
lret
andl
call
js
cmp
push
push
mov
mov
js
sub
js
insb
pop
sbb
mov
cli
sub
je
and
mov
mov
movsb
jp
mov
sti
sub
sahf
xor
test
mov
stos
jbe
orb
push
xor
loop
push
cmp
push
sbb
mov
fxch
lcall
dec
cmp
fwait
mov
and
ret
sahf
and
mov
inc
bound
and
ja
es
and
mov
loop
adc
inc
adc
jl
scas
pop
pop
push
jmp
fistps
mov
mov
dec
jg
stc
pop
sub
andl
lret
imul
aas
cmpsl
inc
aaa
outsb
dec
sbb
push
movsl
sub
mov
shll
xor
stc
pop
sar
jns
sar
fisubl
dec
xor
negb
dec
mov
pop
add
repnz
mov
popa
xchg
ficompl
es
or
outsb
pop
fcoml
push
fsubs
mov
jae
stc
arpl
mov
push
ret
bound
xor
sbb
cmpsb
add
mov
mov
pop
xlat
test
jae
call
add
adc
out
jnp
nop
arpl
mov
jb
das
adc
or
ja
out
aad
in
pop
sub
inc
jnp
cltd
dec
add
stos
lea
cltd
mov
mov
imul
adc
add
repz
int3
cmpsl
orb
xchg
push
dec
xchg
std
jae
sub
call
pusha
mov
mov
fwait
jmp
xchg
fs
mov
lcall
std
mov
dec
dec
mov
push
inc
push
mov
lcall
cmpb
out
pop
push
out
cmp
popf
or
cmp
shll
and
stos
fwait
mov
xchg
enter
out
loopw
jb
xchg
or
dec
das
mov
fimuls
aad
sub
mov
loope
fbstp
pop
ljmp
adc
xor
or
fldl2t
lret
sbb
std
mov
sbb
or
cmpsl
pop
jbe
testl
adc
pop
movsb
mov
lret
icebp
mov
aaa
lds
adcl
and
lock
inc
jns
out
jle
or
gs
repnz
ds
ds
jbe
mov
pop
inc
xor
incl
jge
lock
sbb
cmp
mov
cli
dec
pop
adc
or
out
rep
push
add
addl
fcoml
jne
stos
pop
or
push
and
jb
test
imul
and
loop
decl
mov
lahf
mov
pop
cwtl
pop
sub
mov
cli
pop
outsb
imul
stos
cmp
cmc
add
mov
xor
mov
xor
pop
inc
xchg
in
push
pop
adc
aad
cmp
adc
pop
in
fsubrl
cmp
xor
jl
movsl
sbb
shrl
mov
add
jg
jmp
mov
sub
sbb
jno
jmp
xlat
data16
lods
repnz
cld
lret
jnp
mov
popf
iret
mov
cwtl
dec
lods
popa
jmp
bound
dec
jne
stos
mov
popf
xorb
sbb
std
test
lock
ljmp
movsl
xchg
aaa
aas
loopne
pop
lret
xchg
sub
or
sub
addr16
icebp
jnp
cmp
jg
sub
adc
movsl
les
jge
sub
jns
aaa
jmp
ds
stc
test
les
sbb
dec
mov
mov
sbb
pop
stc
xor
jge
dec
mov
pop
out
imul
lret
adc
es
xchg
imul
dec
adc
call
pop
out
cmc
fildll
add
ret
popf
scas
jmp
shl
cmp
push
pop
add
adcl
mov
lods
les
xlat
ja
lods
ret
and
les
add
pop
mov
inc
sbb
push
xor
fnstsw
clc
xor
jg
mov
mov
mov
xchg
ss
aaa
aas
pop
scas
scas
insl
pop
sbbb
int
out
fsubrl
mov
mov
pop
xchg
pop
xchg
mov
xchg
sub
push
lret
sub
mov
adc
pop
lcall
dec
cmpsb
mov
lret
fwait
int
fwait
lock
fmuls
mov
pop
imul
push
jmp
push
cli
sbb
pop
fistpl
xchg
loop
ret
test
adc
std
cmp
pop
pop
dec
xor
sbb
out
pop
loop
leave
sbb
xor
aaa
cmp
or
inc
xor
push
sub
test
das
ds
bound
or
lock
push
mov
xor
int3
out
push
hlt
aam
into
xor
out
jle
jecxz
pusha
push
inc
dec
add
adc
sbb
mov
cmp
xor
pop
jb
mov
xchg
xchg
xchg
sarb
test
cmpsl
adc
stos
pop
lods
cmp
pop
or
addb
mov
pop
and
mov
std
fimuls
cmp
sahf
lret
push
movsl
fmull
mov
jnp
fsts
sti
xor
dec
cmp
leave
xchg
xchg
cwtl
jne
imul
pusha
cwtl
xor
int
or
mov
jns,pn
inc
add
into
adc
mov
jo
jb
out
xchg
jmp
mov
das
dec
cmp
rcl
in
rorb
pop
cwtl
mov
sbb
mov
mov
jns
and
mov
mov
xchg
and
jmp
rcll
push
out
xchg
mov
mov
push
mov
stos
push
ljmp
in
cmc
in
jb
push
stc
sub
jg
pop
mov
jl
ret
out
fimull
fs
xor
cltd
imul
cmpsb
xor
inc
mov
test
xor
add
test
and
adc
ret
movsb
push
lret
push
fst
call
jl
sbb
test
sbb
ss
push
mov
gs
mov
xchg
dec
mov
adc
lahf
in
stc
xchg
bound
adc
or
out
dec
js
call
popf
arpl
in
mov
decl
rcrl
cmpsb
xchg
shrd
inc
push
pop
ret
xchg
adc
or
cmp
and
add
pop
fdivs
sub
lahf
mov
push
mov
hlt
push
jg
cmpl
lock
popf
lret
or
insb
fdivrl
cmpsl
xor
daa
pop
pop
mov
and
adcl
jmp
arpl
adc
mov
enter
sarl
cmpsb
popa
frstor
mov
add
or
fadd
lahf
inc
test
mov
incb
test
clc
outsl
mov
sarb
gs
loopne
push
stos
les
fdivrs
fstpl
adc
cli
sub
mov
sbb
je
aaa
mov
inc
push
jb
inc
xchg
pop
leave
jno
hlt
mov
jge
loope
and
sahf
imul
rep
jb
mov
fs
inc
aas
add
dec
push
dec
jmp
sbb
lahf
push
int
enter
sbb
add
cmp
sbb
in
mov
daa
lahf
test
inc
jge
in
dec
jl
cwtl
adc
hlt
pop
push
test
mov
movsb
mov
and
rolb
jl
popa
fwait
cltd
mulb
lods
dec
ficomps
adc
add
push
sub
sarl
jns
push
stc
ja
cmpsl
arpl
js
je
mov
mov
jecxz
stc
xlat
std
xor
push
rorb
push
push
addr16
push
mov
inc
lret
cmp
loope
ljmp
sti
mov
cmp
and
or
lock
das
xor
ror
jb
push
push
mov
shlb
xchg
lods
gs
inc
sub
inc
popf
mov
xchg
jmp
push
fildll
shrl
mov
out
cmc
mov
adc
add
test
push
iret
adc
js
loope
iret
pop
xorb
dec
hlt
cmp
dec
movsb
mov
lock
mov
or
xchg
pop
push
mov
mov
cmp
xchg
mov
add
sbb
pushf
jg
jp
inc
mov
and
xchg
sti
pop
sti
mov
sub
dec
int
pusha
mov
xor
cld
cltd
mov
fbstp
jp
push
add
lret
mov
mov
ljmp
dec
testb
or
add
lds
pop
jmp
pop
roll
mov
xchg
dec
add
sub
mov
jl
jg
mov
popf
in
mov
push
stc
pop
iret
les
test
adc
lods
outsl
popf
pop
xlat
gs
mov
cmpsl
jb
test
dec
mov
loopne
jnp
icebp
bnd
loop
ja
dec
fidivrl
rol
adc
loopne
jle
xchg
test
int
scas
pop
pop
dec
jmp
cli
mov
mov
out
fidivl
xchg
in
or
sbb
lods
mov
loopne
lods
inc
lret
cld
jno
outsb
jns
pop
fbld
xchg
mov
lret
bound
gs
push
push
icebp
loopne
pop
pop
and
jge
lods
xchg
cli
or
jmp
cmp
jmp
sub
sub
outsl
xchg
fstps
jl
gs
ds
daa
lahf
inc
jmp
dec
adc
lret
add
hlt
scas
test
cli
clc
gs
pop
ja
xor
xor
fwait
xor
scas
dec
xchg
lcall
xor
mov
pop
subl
mov
adc
insl
mov
out
mov
xchg
ja
adc
jl
push
xchg
and
rcl
and
andl
dec
hlt
jne
out
mov
lods
sti
jb
rorb
movsb
mov
inc
or
cmpsb
cmpsb
mov
lahf
movsl
jmp
adc
pop
xchg
and
mov
sub
cmp
mov
dec
aad
dec
sahf
or
push
inc
dec
stos
pop
add
adc
push
filds
lods
mov
mov
jb
das
pop
pop
mov
adc
ja
push
cli
pushf
ja
fisubs
movsl
push
or
or
xchg
jbe
xchg
xorl
cmp
push
or
outsl
mov
mov
sbb
fcomps
xor
jecxz
push
add
fwait
movsb
loop
mov
lahf
sarl
mov
in
rcrb
aas
lds
sahf
push
sahf
sbb
andl
int3
arpl
xchg
mov
xor
pop
subl
clc
adc
jle
pop
into
out
test
mov
push
hlt
loope
xor
add
pushf
inc
cld
int
bound
cmpsl
xor
jecxz
jmp
xchg
push
cmpsl
maskmovq
mull
scas
push
push
insb
cmp
pop
push
push
adc
xlat
add
mov
push
adc
cmpsb
orb
or
push
adc
add
mov
loop
mov
and
add
cmp
mov
imul
test
mov
or
repz
cld
pop
sarb
sar
rorb
leave
rolb
mov
in
sbb
adc
or
jge
ds
sbb
mov
stc
jnp
xchg
xor
imul
cli
inc
loop
outsb
cmp
data16
mov
pop
imul
pop
mov
adc
int
lea
sbb
fs
dec
inc
push
adc
nop
or
sbb
cltd
in
inc
adc
xor
test
repnz
jbe
movsl
clc
inc
or
sub
cmc
dec
jne
xor
cld
sub
imul
adc
mov
inc
mov
xchg
mov
or
scas
mov
jmp
mov
cmc
adc
jns
cmp
mov
xchg
cld
clc
mov
lods
and
mov
adc
or
push
ss
jmp
out
cmp
mov
mov
dec
cmp
int
pusha
sub
mov
add
cmp
inc
and
dec
xchg
lcall
fldl
pushf
xor
jg
es
addr16
lahf
jo
add
subl
dec
jle
push
rolb
pop
xchg
mov
pushf
pop
out
lea
cvtps2pd
cmp
jp
gs
push
fstl
jnp
dec
popf
loop
cmp
and
mov
pop
in
pop
push
xchg
adc
aad
in
push
mov
sbb
and
pop
outsb
in
dec
and
push
sbb
rcrb
mov
jae
dec
fadd
ja
mov
mov
mov
cmp
push
cmp
push
sbb
je
xor
ret
imull
or
inc
add
jnp
mov
scas
fidivl
mov
daa
bound
fucomi
xchg
fsubl
add
adc
mov
jle
push
insl
xor
cmpb
xor
sub
dec
inc
fadd
xor
dec
aaa
aas
add
popa
xor
xchg
stos
jp
mov
sbb
xlat
and
jbe
lods
push
popa
cltd
test
shlb
push
iret
imul
rcrl
adc
fcmovbe
xchg
inc
fistps
nop
dec
mov
addr16
xchg
jg
cmpsl
inc
sub
in
and
jg
fwait
xchg
nop
test
cltd
test
cmp
rclb
repz
fcmovb
cmp
push
movsl
push
ret
lock
flds
cmp
xchg
jle
pop
jmp
je
or
push
lods
mov
out
add
sbb
add
out
and
sub
xchg
xchg
mov
stos
pushf
lods
inc
lds
sti
lcall
pop
add
mov
cmp
out
adc
fistl
js
lods
out
push
sbb
sbb
shl
or
loopne
inc
mov
aas
fwait
and
test
lods
mov
dec
enter
outsb
mov
fsubs
outsl
cmp
dec
movb
sbb
shrb
ficoms
cli
test
mov
adc
in
pop
pop
vmovaps
and
sbb
push
sar
imul
sarl
lret
mov
xor
adc
ja
mov
cmp
lret
push
clc
bound
aam
mov
jo
inc
sbb
out
xchg
mov
daa
loope
cmp
dec
aaa
andl
push
pop
xchg
rcll
jne
es
fmull
dec
sub
scas
mov
jge
es
popa
ficoml
sub
inc
fdiv
lcall
mov
jg
xchg
xorl
imul
mov
iret
push
scas
and
std
fldl
xor
fisttpll
and
inc
outsb
dec
jmp
mov
jecxz
mov
mov
inc
std
or
clc
std
fdivs
inc
mov
sti
mov
sbb
mov
add
call
shlb
lea
jmp
sbbl
ss
mov
jae
xor
negb
into
insb
or
mov
jnp
push
add
jnp
jbe
push
in
sbb
or
xchg
lds
call
add
loop
jb
push
insl
jg
cmpsl
inc
sub
lods
es
call
std
add
je
or
jo
bound
fnstenv
es
push
xchg
push
or
fisttps
cltd
rorl
out
mov
hlt
cmp
ds
test
sub
fnstcw
sub
sbb
dec
insb
les
int3
push
push
push
cs
dec
bound
mov
shl
and
pop
push
push
js
insl
dec
stc
push
and
das
leave
aaa
loope
xchg
pop
add
sbb
and
push
lods
adcl
cmpsb
adc
jmp
pop
inc
xchg
nop
cmpsb
and
sub
fs
pop
add
sub
int
aas
mov
or
and
pop
rorl
jl
sub
pop
pop
sbbb
cs
cmpsb
dec
and
das
mov
dec
jmp
rcrl
sbb
dec
js
xor
push
and
addr16
pop
cld
test
jns
test
sahf
imul
jno
pop
jo
pop
fadds
xchg
mov
push
xchg
fisubrs
popa
les
pop
ss
or
les
lock
mov
in
hlt
jp
adc
out
and
cmpl
rolb
call
or
hlt
and
stos
mov
ja
ret
lods
jo
cs
clc
dec
daa
out
lret
lret
mov
mull
pushf
mov
mov
fisubrs
cmpsl
inc
jmp
push
rol
inc
inc
push
mov
and
jle
mov
addr16
pushl
stos
mov
inc
inc
add
pop
ret
repz
and
rclb
out
push
and
jbe
push
adc
out
fildll
xchg
sub
lods
jno
mov
mul
pop
inc
mov
repnz
and
push
or
jmp
xor
or
mov
lds
subl
pop
mov
addr16
or
sub
adc
jl
pop
daa
je
xchg
push
clc
xor
lods
js
sbb
sbb
inc
pop
adc
dec
loop
mov
jb
push
jns
orl
xchg
fbld
push
mov
scas
xor
and
jno
pop
dec
jle
shll
mov
sahf
mov
mov
sbb
xchg
mov
dec
pop
in
inc
jo
je
xor
xchg
mov
call
stc
add
arpl
and
dec
filds
push
scas
fcoml
jg
je
imulw
rcrl
or
aaa
sar
inc
adc
cmp
sub
les
mov
xor
in
adc
mov
idivb
push
sbb
mov
jno
loopne
dec
repz
inc
sbb
mov
mov
lods
shrb
repnz
pop
jp
jb
xor
pop
cltd
cmp
hlt
dec
les
xor
lret
xchg
sub
nop
mov
bndstx
push
mov
push
mov
fisubrs
or
or
mov
mov
lret
pop
inc
cmc
leave
push
xchg
pop
cmpsb
jp
xchg
pop
push
pop
out
sbb
add
pop
mov
sbb
in
cmpsl
in
push
mov
dec
adc
jmp
adc
leave
pop
mov
mov
lret
into
jecxz
inc
or
add
je
pusha
add
ss
pop
add
data16
mov
clc
xchg
ljmp
es
lcall
bound
and
lds
sbb
dec
push
pushf
outsb
movsl
pop
lahf
xchg
push
cld
mov
idiv
lea
sub
sbb
psrad
or
sbb
mov
push
jle
mov
sub
xchg
stos
ret
push
imul
les
xchg
loopne
inc
adc
out
pop
push
sahf
mov
ja
pop
adc
mull
sub
out
cwtl
push
movsl
sub
or
in
xchg
cmp
movntq
add
jmp
arpl
mov
imull
cltd
sub
push
jecxz
add
test
sbb
das
testb
roll
jmp
fiadds
sbb
insl
lret
rcrb
inc
imul
xor
push
and
xchg
pushf
mov
insb
rclb
ljmp
push
mov
test
push
out
aaa
xchg
sub
mov
aaa
xchg
cmp
sub
cltd
in
push
xchg
imul
or
push
mov
mov
xor
pop
jno
andb
loope
aam
xor
sti
mov
adc
rclb
insl
xchg
fdivrp
pop
nop
fldenv
popf
and
xchg
mov
insb
pushf
gs
inc
and
mov
scas
xchg
sub
clc
and
fdivr
mov
xchg
xchg
mov
scas
sub
decl
ret
add
clc
mov
int3
xor
sti
cmp
popf
push
xchg
arpl
fidivrl
cmp
je
std
sti
push
xor
adc
cmpsb
hlt
sub
lds
hlt
mov
imul
insb
enter
push
leave
je
scas
xor
faddl
mov
cmp
push
cmp
cmp
jmp
lret
mov
pop
cmpsb
in
jle
stos
xor
cmc
mov
shlb
push
xchg
fsubrp
pop
js
jne
jb
stc
sbb
fucomp
cli
pop
xchg
loopne
movsb
pop
xchg
mov
aam
lret
mov
sbb
repnz
sbb
fadds
shl
inc
sbb
cmp
sub
jmp
sbb
lods
jns
ss
gs
ss
jp
fstl
pop
aad
ficoms
mov
inc
lret
jecxz
push
push
push
fs
xchg
orl
jp
outsb
add
shlb
push
addr16
leave
stc
fsubrl
mov
xor
lds
cmpsb
insb
and
mov
add
add
inc
fnstcw
test
and
cmp
push
mov
pop
dec
xchg
adc
inc
jg
mov
mov
pushf
push
jae
lods
jmp
frstor
dec
clc
pop
shll
mov
dec
clc
cmp
jae
jp
sbb
push
lea
xor
jge
cmp
in
and
fs
pop
pop
and
cmpsb
xchg
cmpsb
lods
add
or
and
outsl
fwait
cmp
dec
arpl
adc
es
and
in
cmp
adc
inc
or
xchg
adc
repnz
lret
xchg
and
aam
mov
pusha
in
jmp
test
andb
test
fldenv
mov
pop
out
push
outsl
sahf
push
or
mov
and
inc
mov
mov
inc
daa
push
xor
inc
lcall
pushf
ret
xlat
mov
inc
push
cmpsb
movsl
sbb
aad
inc
jnp
jmp
pop
fsubs
sbb
pop
lahf
rcrb
mov
adc
gs
scas
add
arpl
mov
bound
mov
xchg
imul
mov
cmp
dec
or
mov
js
rcrl
outsb
or
or
adc
add
add
and
add
test
push
pop
push
mov
mov
dec
sub
and
push
inc
jp
rcr
mov
mov
push
sahf
mov
inc
push
dec
pop
fisttps
aad
cmc
enter
sar
mov
jb
adc
xor
popa
ficoms
dec
and
mov
ja
les
cmp
enter
mov
imull
rolb
mov
and
adc
push
pusha
stc
dec
out
mov
pop
adc
mov
sahf
adc
pop
les
sbb
xor
mov
jecxz
mov
popa
fistpll
mov
les
sub
inc
add
fmulp
repnz
loop
xchg
aas
add
jno
std
mov
pop
sbb
shlb
and
lret
movsb
pop
cwtl
and
mov
sbb
xchg
mov
iret
fbstp
imul
mov
test
lods
leave
inc
pusha
lret
lret
pop
stc
and
in
in
enter
mov
je
nop
leave
js
fs
mov
xchg
cltd
push
or
je
push
xchg
cmp
stos
rolb
lock
rcr
push
movsb
push
call
dec
or
inc
and
mov
dec
pop
cmc
jae
sub
xor
aas
xchg
add
push
ficoml
popf
push
push
pusha
push
sub
or
xchg
in
in
xor
shlb
sub
fs
shrl
lret
adcb
add
test
insb
sbb
int
pop
fcompl
aad
or
jnp
in
ret
dec
adc
push
scas
cmp
pop
sbb
dec
loopne
rorb
leave
lods
andb
xchg
aaa
or
insl
mov
popf
cmpsl
imul
push
movsb
ror
xor
add
or
push
adc
push
das
mov
fwait
sub
or
in
sbb
inc
dec
mov
popa
adc
push
ja
das
lds
push
sbb
leave
out
inc
mov
nop
out
adc
fsubrs
pop
push
push
shrb
sub
push
add
sub
int3
rorb
movsl
sub
and
sti
inc
dec
pop
fidivl
mov
and
sbb
lock
push
and
pop
cmp
je
push
pusha
out
ret
mov
fnsave
inc
sub
inc
push
push
jecxz
push
fcompl
inc
rorb
jg
jne
inc
movb
sub
add
std
out
shrl
xchg
mov
cmc
sub
nop
or
sbb
movsl
inc
mov
inc
iret
inc
mov
mov
test
das
mov
push
xchg
rcrl
mov
out
pop
adc
mov
jne
push
xchg
arpl
das
out
mov
fdivrs
xor
int3
jg
rcll
mov
icebp
jge
mov
jno
sub
push
mov
repnz
aam
push
cld
cwtl
xchg
cmp
shufps
jl
xchg
cmpsb
lret
push
and
mov
add
pop
mov
or
push
outsl
daa
hlt
ret
jbe
push
aad
std
loope
mov
or
pop
dec
movsb
xor
pushf
int3
movb
push
movb
inc
cli
outsl
lret
sub
into
addr16
jl
movsl
xor
and
push
hlt
pop
push
cltd
dec
scas
ret
inc
xchg
inc
data16
jmp
lods
cwtl
mov
ror
loope
ret
inc
add
pusha
adc
loop
lahf
sub
test
sbb
add
sub
xchg
ret
scas
push
fcmove
xor
push
push
fdecstp
sub
push
inc
and
lods
iret
xchg
pop
pop
jl
fwait
outsb
xchg
dec
or
mov
out
sub
xor
mov
cwtl
shll
data16
fcoml
pop
and
shr
outsb
and
fldt
pusha
in
arpl
enter
lahf
xlat
idivl
inc
sub
sub
mov
inc
adc
mov
test
adc
mov
loope
movsb
lret
sub
ficomps
adc
adc
mov
mov
xchg
shll
lcall
mov
sub
jns
sar
into
fiadds
adc
mov
mov
lret
orl
call
sbb
aad
xor
xchg
adc
xchg
fcmovu
xor
xchg
xor
push
or
mov
ljmp
pushf
inc
jno
loop
stos
and
mov
add
push
inc
jecxz
or
push
adc
mov
shlb
roll
jmp
fcmovnb
aaa
xchg
dec
xor
push
sbb
adc
push
stos
mov
mov
cs
mov
outsb
cmp
mov
add
aad
xchg
rcll
mov
sarb
sub
sub
ja
and
adc
loope
subl
jmp
add
add
nop
and
push
sub
jl
pop
cmp
or
sub
loop
jl
into
ds
aam
pop
divl
movsl
clc
mov
jae
jns
aad
aad
movsl
pop
add
pop
stos
lock
adcl
cmp
jecxz
or
push
icebp
sbb
xor
jno
or
push
movsl
les
jmp
sub
cmpsl
jo
add
inc
cli
lcall
popa
fs
ljmp
adc
add
clc
or
jo
stos
add
push
mov
jne
push
repz
lods
jo
inc
mov
dec
dec
out
add
pop
add
xchg
loopne
bound
dec
imul
jmp
cmp
sbb
test
lods
fisttpl
lcall
and
mov
outsb
cmp
imul
sbb
and
mov
xchg
aam
das
adc
into
push
gs
mov
into
mov
sbb
inc
mov
sbb
add
outsl
cmp
and
xchg
loope
hlt
sbb
jno
out
lret
ds
mov
movsl
enter
xchg
xchg
lret
negl
cld
cmp
mov
rorl
fcmovu
inc
jge
rclb
test
rcll
adc
popf
sbb
mov
bound
adc
divl
xchg
rorl
dec
jo
inc
ret
fwait
outsl
dec
lea
dec
test
imul
leave
nop
stos
stos
fdivs
imul
sbb
bound
inc
aam
pushf
cmp
xor
mov
js
or
mov
cmp
push
xlat
dec
pop
int3
stc
mov
sub
lea
push
loope
std
dec
sbb
std
pop
adc
sub
pop
mov
lret
gs
mov
push
outsb
add
insb
int
cmpb
insl
xor
pop
ret
iret
push
outsb
and
mov
in
xchg
pop
mov
adc
push
loop
sub
mov
mov
loopne
adc
in
sahf
fsubl
xor
ja
push
shl
mov
cmp
dec
lret
fadds
or
fdivrl
sub
sbbb
push
imul
fwait
lret
push
or
ss
xor
cmp
pop
ljmp
inc
aam
call
push
subl
pop
add
ret
fucom
mov
aas
int
mov
jnp
leave
scas
lods
inc
aad
fidivrs
and
push
pop
out
or
test
lret
cli
dec
add
dec
rorb
out
cmpsl
stc
jb
popa
sbb
notb
sub
je
jb
push
ffreep
mov
push
pop
push
addr16
xor
test
aas
sarb
inc
lret
add
mov
ficompl
xchg
into
jp
cld
out
ljmp
sbb
xchg
sub
mov
repz
dec
leave
mov
mov
incb
arpl
shl
cs
out
dec
jmp
mov
sub
arpl
cltd
lret
lret
lret
pop
ret
lret
loope
jmp
push
cwtl
lcall
ret
into
push
mov
mov
add
int3
enter
daa
test
add
int3
cld
sbb
loopne
xor
inc
pop
jbe
test
push
cmp
and
fdivrl
pop
pop
arpl
jmp
pop
push
and
jle
incb
subb
fmulp
add
or
lret
sub
sarl
popl
jl
mov
aaa
popl
into
mov
xlat
xchg
mul
int
into
sub
int3
xlat
fwait
aaa
lods
push
mov
shll
mov
int3
mov
push
sub
orl
mov
aam
sub
ficompl
test
hlt
xor
dec
mov
dec
push
push
xchg
scas
xchg
rorl
in
ljmp
jle
enter
mov
jge
sarb
inc
dec
arpl
xor
shll
inc
loope,pt
lea
pop
jmp
fstpt
adc
mov
cld
cmp
mov
out
xor
xor
stos
gs
out
enter
sarb
adc
jge
mov
xchg
xchg
shlb
repz
icebp
xchg
mov
xor
cli
shlb
push
repz
pop
ljmp
rorl
outsb
xor
scas
dec
mov
sub
movsl
out
stc
push
jge
sbb
ja
test
cli
inc
out
lahf
add
xor
shlb
xchg
dec
lret
mov
test
dec
and
mov
repnz
ljmp
imul
cmp
pop
mov
xchg
cwtl
push
mulb
lret
int3
or
cmpb
dec
mov
dec
movsl
in
inc
call
sahf
mov
mov
sub
movlps
mov
pop
ljmp
in
pop
xchg
jb
inc
fdivrs
clc
jns
jb
cld
repz
pushf
out
xor
mov
mov
frstor
into
mov
stos
pop
mov
xor
sub
dec
lds
loopne
xlat
cld
lahf
enter
test
mov
ds
push
push
out
in
and
inc
adc
dec
bound
sbb
sub
outsb
in
sub
out
loope
xor
movsb
xchg
mov
pop
mov
or
mov
out
inc
iret
pusha
inc
sub
fnstcw
fstl
cli
std
rcll
popa
scas
ror
ret
jmp
sbb
out
outsl
mov
out
mul
cwtl
ffree
sub
jmp
in
test
xchg
les
jmp
sti
cmpsb
addr16
outsl
jl
and
push
mov
sub
cmp
dec
ret
jl
sub
mov
add
lock
xor
fdivrl
andb
fsubl
cmp
out
and
mov
sub
inc
popa
leave
popa
inc
repnz
call
or
mov
jae
aas
leave
inc
pusha
push
ljmp
or
xchg
movb
add
dec
xchg
insb
mov
scas
repnz
fldenv
mov
aaa
dec
in
fcompl
rorl
jp,pn
mov
mov
ja
jmp
cmp
mov
std
mov
push
adc
push
pop
ror
adc
pop
lcall
fisttps
popf
aam
lret
test
jns
xchg
push
orb
loope
mov
mov
mov
pop
mov
push
lretw
inc
inc
leave
rolb
inc
pop
dec
call
repz
pusha
ljmp
gs
std
loop
pop
mov
pmulhuw
in
mov
cwtl
sahf
pusha
mov
sub
les
test
test
push
push
pop
fcomi
insl
add
push
lahf
lcall
stc
mov
movsb
out
xchg
dec
xor
xchg
aad
inc
xchg
fs
out
rolb
nop
aaa
pop
aaa
test
or
sbb
ret
mov
pop
lret
xchg
dec
mov
repz
pop
call
push
pop
adc
notb
decl
in
mov
jle
and
stos
shl
rcl
jmp
sbb
outsl
inc
mov
mov
imul
mov
mov
jle
xor
lahf
aam
mov
push
push
out
loop
jbe
lods
in
jmp
aas
out
ljmp
loop
cmpsb
and
xchg
push
std
and
add
dec
push
mov
repnz
orl
mov
es
lods
sti
sbb
repnz
mov
mov
jl
shrl
nop
insb
mov
dec
in
jne
inc
imul
test
push
add
stos
imul
je
mov
push
xorb
gs
pop
test
adc
xor
cwtl
sub
dec
daa
iret
mov
mov
jmp
mov
inc
ret
incl
test
popf
and
adc
mov
int
adc
lret
inc
dec
js
jle
aas
in
xor
jne
push
sub
imul
mov
inc
mov
mov
dec
xchg
xor
xchg
int
cmp
in
add
xor
xor
scas
sbb
loop
cmc
mov
sub
lahf
push
and
sbbb
inc
inc
ret
xchg
pop
mov
push
push
ret
add
dec
adc
mov
mov
pop
cs
cmp
xlat
test
pushf
out
sti
ljmp
xchg
jge
pop
jmp
jge
jne
in
mov
push
fs
jle
rorl
andb
or
leave
test
in
rolb
inc
lret
pop
mov
mov
insl
jp
in
scas
or
mov
ljmp
pop
clc
aas
int3
inc
int3
jmp
jmp
push
mov
and
inc
mull
stos
mov
fadds
cmpsl
mov
cmpsb
pop
add
orb
cwtl
and
dec
loopne
add
subb
sbb
jns
rcrb
js
xor
jne
push
test
test
lock
sarl
push
and
mov
dec
add
or
xor
xchg
shrl
push
add
inc
dec
mov
out
or
mov
cmpsb
dec
jle
add
jge
outsb
aam
in
cmpsl
ja
mov
in
dec
xchg
pop
clc
mov
mov
lret
push
out
mov
cmpsl
pop
push
jb
xor
adc
cmp
mov
sti
lret
push
int3
fcmovb
fbstp
cmc
jbe
jnp
icebp
and
adc
sbb
imul
mov
insl
or
inc
bound
test
aaa
inc
cmp
leave
mov
pop
outsl
repnz
loope
int
dec
shr
dec
mov
xchg
adc
out
cmp
xor
stc
in
adc
call
xor
lcall
mov
rorb
int3
out
and
jo
fildl
popa
inc
dec
int
pop
scas
int3
push
pop
out
push
je
push
and
addb
pop
mov
sbb
xchg
mov
or
pop
mov
xchg
sbb
sbb
aam
fwait
sbb
movsl
movsb
divb
pop
adc
jnp
icebp
xor
and
fists
lret
ss
sbb
stos
lock
callw
cmp
push
outsl
in
add
repnz
outsl
sub
aad
mov
mov
jecxz
push
stos
xchg
movsb
push
sbb
es
sub
stos
jae
scas
xlat
inc
insb
mov
cmp
gs
int
mulb
pop
into
imul
add
stc
lock
cmp
sbbl
pop
sub
dec
loopne
ret
mov
lods
sti
lahf
dec
inc
push
inc
aas
cmp
xor
and
and
cmp
cmpb
mov
cld
and
movsb
sti
pop
cs
movsb
andl
popa
dec
pop
lock
cmp
adc
cmp
sub
loopne
imul
cmp
cmp
sbb
in
xor
adcl
adcb
popf
xchg
test
cmp
cmc
inc
push
into
push
orb
stos
and
js
jge
push
dec
add
and
pop
sbbl
xchg
adc
and
push
xor
cmp
jae
dec
test
aad
sbb
cmpsb
iret
xchg
aaa
cmc
iret
in
test
ss
and
mov
cmp
sub
pushl
dec
and
mov
cmp
push
push
leave
es
out
lret
inc
push
rcl
adc
andb
push
add
ret
adc
stos
ja
dec
or
outsb
nop
push
mov
ret
imull
shrl
inc
loopne
cwtl
ja
push
insb
mov
jg
test
pop
pop
and
or
cmp
aad
loope
notb
imul
gs
scas
push
outsl
dec
mov
push
test
in
xor
xchg
lea
pop
test
lret
sub
push
lcall
pop
and
jle
aas
jmp
outsb
mov
out
jp
mov
and
call
inc
mov
lods
mov
roll
ror
and
mov
sub
cli
pop
cli
mov
outsl
loop
dec
stos
mov
jbe
das
int3
xchg
xchg
mov
lret
mov
dec
shrb
mov
repnz
mov
mov
call
dec
mov
sbb
pop
jae
push
popa
fnstsw
ss
jae
inc
xor
insb
pop
gs
leave
stos
adc
xchg
xor
cmp
pusha
lods
loopne
fisttpl
and
sbb
xor
pop
cmp
mov
mov
das
inc
pop
int
in
or
mov
jae
cli
xchg
xchg
mov
insl
mov
mov
fldl
jle
cmp
push
lock
loopne
imul
leave
mulb
lods
inc
sar
int3
pop
test
int3
jmp
pop
je
cli
jae
jae
ja
mov
or
daa
shrb
xchg
out
dec
cmpb
fisttpl
stos
mov
scas
jl
imul
mov
push
pop
add
test
inc
mov
xor
repnz
loope
in
std
inc
cmpl
or
enter
pop
xchg
push
lods
sbb
lock
mov
lods
sbbl
jecxz
xor
jecxz
lds
and
test
shrb
xor
lcall
aam
push
jmp
jge
cmc
lods
and
out
push
mov
sub
sub
jae
dec
push
scas
mov
loop
adc
inc
pushf
std
and
mov
mov
jne
movsb
adc
or
dec
jo
fnstcw
push
addl
mov
int
push
mov
leave
not
cmpsb
jl
mov
mov
incb
repz
pop
jbe
push
xor
mov
test
aas
lods
sub
push
fucom
xchg
fsubrp
and
sub
aas
add
mov
cs
xchg
ror
scas
adcb
sbb
insb
ret
into
cmp
push
push
mov
ss
push
and
cmp
arpl
sbb
incb
jne
in
psrlq
outsl
cmp
xchg
mov
inc
lret
sti
push
push
imul
push
adc
mov
mov
sub
decb
lds
sbb
lret
jg
rcrl
loope
mov
decb
or
nop
inc
in
jne
cmp
testb
sub
pop
je
inc
and
and
pmuludq
pop
test
jbe
pop
or
push
ja
add
movsb
add
cld
fstl
das
dec
xchg
mov
adc
jp
add
adc
dec
mov
mov
scas
inc
cltd
test
xlat
cwtl
or
mov
or
xor
push
out
fbstp
or
and
pop
or
xor
or
mov
or
scas
imul
cld
ds
mov
rclb
xor
repz
inc
add
mov
jno
push
outsl
loope
sbb
enter
insb
jo
mov
mov
test
test
or
lret
out
loopne
lock
sbb
jns
inc
mov
or
adc
dec
push
adc
fiadds
xlat
in
push
add
add
in
adc
jno
mov
aas
and
adc
jp
fcomi
sbb
iret
ss
push
repz
mov
jb
pop
stc
dec
cs
push
pop
in
mov
xchg
mov
mov
cmp
inc
out
loope
adc
mov
and
lret
data16
cmp
cmp
mov
imul
outsl
sub
pop
sub
jo
pop
rcll
lock
cmp
movsl
xor
adc
sti
mov
mov
jnp
ret
mov
inc
scas
mov
xchg
stos
jg
gs
inc
pushf
jae
dec
mov
imul
test
jl
mov
fstps
pop
cld
and
loope
mov
std
in
lahf
rorl
in
inc
mov
ret
jo
xor
jge
cmp
sub
jae
adc
cwtl
mov
les
test
enter
mov
adc
mov
aas
and
sub
push
loopne
sti
insb
lcall
xor
cmp
ret
enter
in
lods
jmp
lock
leave
push
push
xor
jb
xor
adcb
and
shrl
jae
insl
inc
es
xlat
dec
and
cmp
lret
lea
mov
std
lcall
aaa
in
outsl
jl
jns
xor
addl
incb
and
or
in
dec
icebp
sub
adc
ds
enter
lds
jmp
sub
mov
dec
push
push
dec
hlt
insl
xlat
into
or
xchg
sbb
sbbl
jo
cmp
xchg
mov
insb
imul
loope
inc
lods
sbbl
mov
mov
ret
mov
pop
mov
lret
xchg
je
xchg
pop
xchg
fst
lods
sub
mov
push
xor
sti
cltd
push
lcall
es
pop
cwtl
pop
or
rclb
fsubrs
pop
cmp
sbb
xlat
mov
mov
and
jl
out
adc
add
icebp
fsts
xor
cmp
out
mov
push
mov
dec
inc
lock
pop
movsl
rorl
dec
mov
jns
out
cmp
popf
pushl
lock
dec
scas
inc
mov
jmp
daa
jns
adc
mov
xchg
pushf
add
sub
repz
pop
fsubrs
cmpsb
mov
imul
ja
insl
mov
jbe
stos
insb
and
je
pop
je
push
lret
xor
mov
dec
aam
and
lahf
loopne
ret
aad
cmc
ficoms
add
outsl
push
xor
sarl
lcall
icebp
int
pop
sarb
pop
jmp
add
pop
lahf
mov
jo
lods
or
pop
push
push
or
push
fstp
mov
out
leave
repnz
setno
stos
jg
xor
adc
lret
push
jbe
sti
loop
jb
push
sbb
std
cmc
scas
in
sub
jg
data16
data16
mov
sbb
loope
push
jno
aaa
cli
xchg
pop
dec
sub
mov
addr16
mov
es
out
pop
mov
xor
xchg
cld
or
test
enter
fildl
cwtl
dec
dec
lret
subb
mov
fsts
pop
jae
loope
negl
ja
adc
das
or
xchg
stc
cli
adc
add
push
dec
pop
aad
mov
fcmovu
mov
test
xor
push
xchg
call
or
push
push
dec
aad
jp
ja
int3
xor
cmpsb
xor
mov
out
pop
jmp
pop
xchg
fstpt
rcrb
dec
dec
sub
jne
push
pushl
call
push
out
mov
repz
pop
mov
or
xlat
add
out
and
xlat
mov
push
mov
pushf
cmp
jecxz
xchg
ljmp
loop
roll
rcrl
xor
push
xchg
mov
xor
dec
lods
shlb
xchg
and
in
outsl
outsl
jecxz
push
in
call
add
imul
push
loopne
leave
sbb
popf
cli
push
cmp
adc
insl
lea
add
shlb
sbb
enter
adcl
sub
and
cmp
mov
fdivl
js
hlt
jmp
cmp
cmpsl
cmp
pop
loope
std
mov
pop
inc
fistpl
incb
jmp
or
out
lods
xlat
xchg
push
push
push
mov
add
adc
in
aaa
popa
adc
xchg
cmp
int
lret
add
aam
dec
and
jo
sub
lods
adc
cmc
test
push
or
jl
aad
push
leave
cwtl
loopne
enter
or
stos
push
dec
rcr
jno
and
mov
add
icebp
insb
or
stos
xchg
pop
mov
stos
adc
test
mov
sbb
dec
in
add
adc
jmp
fdivl
and
pop
ficoml
jmp
and
lcall
and
pop
test
jno
and
mov
test
mov
pop
int3
sub
and
jmp
bound
mov
cwtl
mov
cmp
sbb
jg
push
cltd
dec
roll
jecxz
out
lahf
jmp
mov
in
push
les
dec
test
xor
dec
mov
push
dec
push
cltd
aam
xchg
adc
inc
test
mov
mov
in
mov
sub
nop
mov
or
ja
in
js
dec
pop
ficoms
jne
hlt
outsb
jecxz
int3
add
mov
adc
cmp
mov
jbe
mov
bound
testb
out
cmpsb
std
jae
dec
movsb
cmp
lret
repz
ljmp
shr
sbb
mov
mov
fildll
icebp
fiaddl
lret
mov
lcall
xor
cmp
sub
mov
mov
ljmp
clc
mov
adc
xchg
and
mov
repnz
jl
data16
roll
dec
mov
pop
xlat
xchg
inc
jecxz
pushf
notb
roll
fs
ds
stos
pushf
push
daa
cmpsl
adc
fisttpl
rcl
mov
js
sti
scas
pop
mov
cwtl
insl
pop
rolb
cmp
das
dec
lods
and
test
pop
cmpsb
into
cli
mov
in
cmp
sahf
es
stc
add
inc
push
out
cmpsl
sbb
aas
iret
daa
mov
leave
jg
push
xor
inc
jp
call
sbb
push
pushl
jno
xor
mov
inc
xchg
xor
sub
shll
fsubrp
add
sub
daa
mov
arpl
lret
fbstp
mov
sub
repnz
out
jl
sub
pop
shr
inc
pop
dec
stos
fldenv
repz
lcall
lods
sub
fsubr
xor
mov
fsubrl
loope
mov
out
jne
movsb
mov
add
pop
jne
cmp
ja
sub
scas
mov
popf
sub
incb
enter
mov
stc
imul
sub
enter
aam
filds
push
pop
pop
sub
jp
xor
je
and
push
and
xorb
push
out
aad
adc
ret
out
js
inc
pop
pop
lds
xchg
push
xchg
js
sub
fnstcw
xor
ljmp
mov
push
daa
xor
imul
inc
outsb
repz
mov
cmpb
mov
pop
adc
pop
mov
push
in
lds
inc
or
inc
dec
xor
xchg
or
and
in
mov
aaa
lds
and
cmp
cmp
nop
sbb
arpl
arpl
leave
and
jmp
mov
fisttps
inc
xlat
pop
inc
cli
dec
add
outsl
add
inc
loop
mov
mov
sti
insb
mov
rclb
sti
pop
mov
xor
adc
add
pop
ret
shrl
mov
xchg
pop
fs
push
test
fmull
adc
testb
adc
dec
mov
cwtl
push
cmp
dec
testl
cltd
pop
dec
popa
xchg
mov
add
rep
ret
sbb
mov
jg
ja
aas
in
pop
push
int3
rorl
lock
jecxz
call
dec
xor
push
push
and
xchg
in
jle
movl
cld
adc
dec
jp
jg
or
push
test
movsb
sbb
rolb
push
std
push
movsb
call
inc
jg
je
push
enter
or
pushf
mov
out
sbb
fs
mov
xchg
and
std
sbb
pop
sbb
pop
sbb
push
dec
lcall
xchg
jns
jnp
dec
popa
insl
cltd
xlat
xor
sub
and
cmp
sbbl
pop
inc
pop
inc
data16
push
add
mov
adc
pop
inc
cmp
jl
sbb
fstpl
sar
jo
cmpsl
out
pop
sub
bound
sub
push
add
or
jb
push
ja
cltd
pusha
mov
icebp
xorl
std
sub
xor
mov
bound
xorl
mov
add
xchg
pusha
rcrb
jne
mov
jno
xor
fidivrl
sbb
imul
pop
sbb
insl
sub
adc
xchg
sub
pop
cs
stos
lahf
jne,pn
loope
ss
sahf
aad
ds
pop
and
out
and
jno
in
ss
pop
stos
xor
int
shrb
pop
popf
cmp
filds
dec
sbb
mov
shl
dec
mov
mov
pop
pop
and
insl
push
test
push
sub
mov
in
dec
jo
sub
push
sbb
push
push
subl
ficomps
xorl
adc
adc
adc
xor
ret
add
mov
adc
pop
daa
mov
pop
mov
sub
lds
icebp
enter
and
inc
or
out
pushaw
mov
sbb
enter
sbb
aaa
inc
sarb
outsb
xchg
mov
dec
cmpsb
ja
aas
cmc
frstor
das
in
sahf
jl
push
cmp
jnp
pop
out
sbb
lret
push
cmp
bsf
jb
out
mov
shll
pushf
ret
and
cmp
incb
aam
xor
jns
scas
xor
add
cltd
xor
repz
out
push
and
sub
ret
mov
shlb
sbb
mov
mov
dec
mov
and
adc
rol
mov
sub
mov
cmpsl
jmp
cmc
js
dec
ret
movsb
rclb
aas
popa
mov
mov
and
in
ffree
pop
push
fiadds
mov
fldenv
jb
jle
arpl
push
ss
xor
push
xorb
loop
lock
xchg
out
push
push
mov
in
jg
or
call
inc
rclb
dec
movsb
js
mov
pop
into
lock
loopne
inc
jmp
push
sbb
sub
jecxz
imul
test
je
je
lods
xchg
in
divb
push
sbb
dec
cld
insl
fsubrl
shl
loopne
pop
mov
push
loope
cltd
imul
dec
sbb
lock
cmp
push
dec
pop
ljmp
hlt
inc
in
mov
imull
in
mov
das
cmp
add
mov
add
mov
aad
mov
mov
or
dec
or
inc
pop
xor
push
lods
in
lods
adc
enter
lods
mov
in
enter
cmpsl
fmul
movsb
clc
stos
xchg
das
dec
sbb
cmp
pushf
sbb
push
xor
lods
imul
rcrl
add
pop
test
and
pop
xor
sub
aas
out
xchg
lods
mov
xchg
ja
cmp
push
mov
xor
ja
mov
test
mov
jne
add
pop
pop
mov
inc
dec
jnp
test
sub
in
push
nop
jno
test
gs
cwtl
jnp
jno
jmp
loopne
dec
stos
and
dec
xchg
sbb
clc
adc
aas
loop
lea
cli
sub
cmpsl
outsb
adc
add
sbb
jg
pop
jne
mov
scas
and
and
cld
and
mov
push
js
out
shll
jno
into
imul
mov
cmp
push
sahf
lahf
add
movsb
adc
daa
xchg
loope
movsb
inc
ret
stos
cmpsb
xchg
pop
dec
sub
push
lea
mov
pusha
mov
stc
shll
imul
jne
mov
mov
sbb
add
dec
rol
push
pop
mov
call
push
test
test
xor
test
cmp
out
js
pop
in
ror
cmp
jne
xchg
mov
xchg
pop
mov
shrb
lcall
sub
pop
rorl
sbb
mov
popa
aaa
dec
rcll
dec
push
add
inc
sbb
lods
pushf
xchg
ret
in
or
sub
xor
mov
or
xor
jmp
sub
jge
aaa
es
aam
xchg
mov
enter
mov
orl
add
inc
adc
lret
cltd
jno
shll
xchg
jnp
mov
add
jl
xor
add
cs
lods
push
movsb
test
aam
out
cs
stc
lds
mov
mov
cmc
out
lcall
jl
sub
push
xor
js
addr16
push
jp
mov
push
xchg
and
lods
aam
mov
dec
movsb
arpl
sbb
inc
mov
inc
leave
mov
sbb
lret
xor
sbb
cmc
push
dec
bound
inc
pop
sbb
and
outsb
push
push
jno
sub
popf
sub
sbb
dec
cmpb
loope
pop
mov
push
outsl
jno
push
aas
mov
push
lods
mov
ret
lds
sbb
jp
mov
fwait
add
sbb
aad
push
xor
or
cmp
insb
add
inc
and
mov
adc
push
mov
adc
jge
scas
fimull
sub
pop
push
adc
mov
add
leave
xor
mov
jo
dec
xchg
out
mov
nop
pusha
dec
mov
push
xor
and
xchg
xchg
or
pusha
xchg
ja
das
in
fdivs
add
pop
std
les
ret
mov
ret
fidivs
aas
insb
inc
pop
sub
mov
rcll
pop
sbb
faddl
push
and
popf
mov
push
into
leave
pop
xchg
cmp
scas
xor
mov
mov
push
cmc
lret
inc
xchg
push
inc
and
adc
cmp
dec
dec
mov
mov
test
pop
lock
roll
inc
loopne
fildl
push
andb
rclb
icebp
test
pop
mov
pop
in
jecxz
aam
std
pop
pop
ss
out
dec
aaa
mov
push
mov
shll
xchg
fcmove
push
xchg
inc
mov
adc
jae
or
das
push
daa
stos
cmp
inc
sub
xchg
mov
stos
cli
mov
test
mov
fwait
add
xchg
ja
jae
xchg
leave
or
mov
loop
adc
das
dec
or
push
mov
mov
jle
arpl
mov
mov
mov
hlt
fsubrl
and
lcall
xlat
or
jbe
sahf
jmp
out
gs
shrb
cmpsb
in
cwtl
mov
push
popa
mov
xchg
push
xchg
cmp
lods
add
push
cmp
sbb
mov
lods
mov
notl
shl
pop
jne
cmp
push
dec
and
loop
mov
mov
adc
mov
mov
xor
lock
test
mov
mov
xlat
mov
int
rorb
cltd
vcmpsd
pusha
xchg
js
lahf
add
fmul
lea
mov
pop
std
pop
push
call
xchg
lcall
xor
in
jne
stos
pop
gs
mov
je
pop
int
rcrl
push
mov
pushf
test
mov
mov
jo
faddp
adc
pop
int3
cmp
loopne
inc
enter
jge
sbb
cmpsl
in
ds
lahf
inc
push
cmc
or
mov
rclb
cmp
incb
data16
mov
adc
and
mov
out
fildll
or
mov
mov
cltd
andb
nop
push
adc
jp
mov
dec
ret
sub
mov
and
clc
add
insb
adcl
lods
std
adc
adc
into
andb
mov
popw
in
push
out
jnp
divl
and
int
sahf
test
jp
les
inc
mov
cli
outsl
fimull
sti
cmp
xor
pop
pop
mov
aam
mov
cmp
imul
dec
dec
push
aad
fisubl
inc
cmp
xor
dec
mov
scas
ret
inc
mov
sub
shr
xor
sub
in
popa
test
pop
pop
xchg
jge
pop
lcall
pop
rcll
mov
adc
test
pop
sbb
push
inc
xor
inc
clc
lret
push
insb
test
imul
xchg
in
mov
mov
gs
ljmp
cmp
pop
dec
push
jno
and
and
jp
mov
popa
inc
xor
out
mov
arpl
ja
xchg
push
rorl
and
out
negl
roll
push
repnz
sub
inc
into
outsb
add
xchg
int
ffree
inc
fwait
shll
lret
out
dec
daa
sbb
jecxz
jne
cmp
cwtl
rcl
push
sbb
mov
out
andb
fdivs
imul
mov
add
fs
lock
cld
je
popl
stos
lcall
rorl
addl
xchg
bound
xchg
sbb
sbb
mov
adc
adc
push
jg
sub
mov
push
inc
out
aad
rol
aaa
stc
pop
lret
insl
inc
aaa
stc
jecxz
lods
pop
dec
xchg
jo
rclb
cmpsb
add
inc
lea
or
rcll
xor
mov
scas
ljmp
inc
cmpb
jp
inc
lds
xchg
xor
jo
cmpl
in
loope
mov
mov
mov
push
xchg
and
xor
nop
pusha
in
or
les
test
and
aaa
ret
dec
in
rol
stc
into
ljmp
sub
test
add
inc
push
sub
xorl
adc
lds
xlat
in
push
push
daa
cmp
xchg
adc
fwait
stos
push
pop
cltd
inc
sbb
repz
loopne
fisttps
dec
mov
mov
or
sbbl
push
xor
cmp
es
insb
pop
repnz
xchg
xor
jl
scas
mov
int
dec
andl
fistpl
inc
jbe
repnz
pop
adc
cwtl
int
dec
pop
call
ret
xchg
push
cld
adc
movsb
and
lret
and
sub
xchg
xchg
fisubl
and
pop
scas
xor
xchg
inc
lock
or
xchg
test
push
shrb
or
fadds
cmp
xor
int3
outsb
out
cwtl
dec
mov
pop
inc
push
cli
cmp
push
inc
cmp
popf
jge
clc
adcb
arpl
lcall
or
bound
test
mov
fstl
xor
mov
xchg
out
leave
mov
fs
arpl
outsl
loope
pop
leave
xor
cmp
and
les
mov
pop
scas
mov
mov
js
cs
ret
jns
cmp
mov
xchg
mov
mov
idivb
test
mov
push
dec
inc
mov
lret
adc
push
dec
fs
inc
cmc
stos
xchg
push
cmp
ret
add
outsl
daa
les
ja
jo
mov
gs
loope
pusha
data16
mov
lods
jecxz
popf
fdivrl
bound
test
mov
xchg
lahf
inc
jmp
inc
mov
mov
xchg
xor
ljmp
push
and
mov
sub
outsb
call
pop
or
stos
xchg
das
inc
adc
push
mov
sarl
je
mov
lea
lret
inc
dec
subb
pop
das
jo
mov
mov
fs
dec
ret
xor
mov
loope
jle
lahf
mov
jnp
inc
cmp
mov
dec
test
ja
shlb
jmp
shrl
movsb
pop
gs
lea
mov
dec
adc
sub
add
pop
lods
sbb
push
in
adc
dec
and
mov
fwait
xchg
jecxz
imul
mov
jne
sti
mov
loop
fmuls
rcrl
xchg
push
or
gs
andb
add
mov
js
push
jl
push
xor
fadds
es
fs
fidivs
ds
icebp
out
cmpsl
scas
mov
lods
push
pop
xchg
notl
icebp
jo
mov
stc
rcl
stc
mov
mov
bound
xchg
outsb
inc
call
loope
nop
movsb
rcrl
or
xchg
jg
out
xchg
sbb
in
aam
scas
imul
mov
out
pushl
sbb
mov
mov
enter
jecxz
fimull
xlat
setl
mov
pop
sub
xchg
xchg
and
jecxz
pop
subl
int
or
push
mov
xchg
or
or
sbb
daa
fidivs
mov
jo
sbb
lret
sti
das
cmp
sub
call
inc
pop
inc
loopne
fwait
mov
btc
outsb
add
pop
daa
mov
xchg
pop
rcll
ret
roll
repnz
fbld
pop
jns
ss
pop
out
outsl
insb
andl
cmp
movsl
in
push
inc
and
ds
pop
test
ja
cwtl
adc
cwtl
and
aad
clc
mov
scas
ljmp
test
icebp
push
and
dec
icebp
int3
xchg
and
mov
or
jecxz
add
mov
push
inc
idiv
inc
cld
cltd
test
pop
jl
rcrl
mov
mov
cmp
and
mov
and
repnz
cs
xchg
testl
pop
push
or
and
sti
or
test
mov
xor
adc
stc
push
ss
push
gs
push
lret
push
adc
insb
movsb
mov
add
mov
mov
and
inc
jmp
hlt
rcll
insb
inc
xchg
xor
jo
lods
or
cld
xchg
mov
negl
fidivrl
xor
mov
inc
imul
jmp
pop
js
sub
aaa
jno
xchg
mov
jb
cmp
gs
sub
jg
sub
cltd
fnstcw
cltd
subb
test
pushf
cmp
dec
dec
cmc
mov
andb
cmp
sbb
inc
int
xchg
popa
test
sub
jl
jb
inc
jmp
imulb
test
fcomps
xchg
cmp
mov
or
xchg
test
push
pop
clc
xchg
xchg
cmp
jecxz
jecxz
fsubs
pop
lea
mov
dec
adc
push
ret
pop
xlat
loop
xlat
pop
imul
jge
enter
sub
adc
divb
in
push
mov
pusha
xchg
loop
jl
push
sub
jns
push
jmp
cmpl
jle
pushf
and
push
bound
daa
pop
cmp
scas
inc
mov
in
and
popa
filds
jmp
pop
sub
xchg
add
jp
add
push
das
add
incl
repz
cs
mov
int
fimull
scas
cmp
jne
imul
inc
test
cwtl
cld
jo
iret
push
xchg
jmp
push
fs
cmpsl
xchg
gs
and
fnstenv
lock
stc
mov
lock
pop
leave
sbb
loop
cmp
fs
repnz
jge
leave
mov
cli
loope
or
das
add
sub
dec
pusha
sahf
inc
and
shrb
frstor
shlb
mov
orl
cwtl
mov
xor
loopne
pop
mov
sub
add
jo,pt
lret
jmp
xchg
dec
orb
pop
inc
icebp
imul
and
lock
addb
es
lret
and
pop
std
or
push
adc
shrb
dec
adc
xor
mov
lea
xchg
shrl
jnp
mov
dec
xchg
ss
mov
push
aam
jne
mov
push
sbb
das
dec
addr16
scas
push
pop
popa
movsb
mov
popf
sub
adc
jae
mov
cld
mul
into
shlb
fwait
movsl
sub
fs
test
xlat
movsb
inc
mov
dec
iret
ret
fldcw
mov
inc
mov
push
testl
outsb
inc
xor
xor
mov
or
divb
sbb
rcrl
jbe,pn
mov
adc
mov
dec
shrb
sub
mov
lcall
pop
call
int
jp
xchg
out
pop
insl
cmpsb
arpl
xor
fistpl
outsb
or
aad
inc
insl
or
xchg
lock
cmpsl
aaa
test
mov
outsb
gs
and
add
jns
push
rcl
xchg
movsl
std
orl
roll
dec
mov
cld
adc
cmp
jmp
test
movsl
int
cld
pop
js
mov
fyl2x
dec
jge
dec
cmp
push
jne
push
aas
lret
push
pusha
sub
sub
fsubrl
popa
inc
ljmp
sub
or
mov
xor
and
stos
mov
lods
pop
leave
ss
arpl
mov
out
std
mov
daa
cmp
jmp
int3
sub
pop
dec
ds
rcl
insl
mov
or
scas
sbb
add
lods
into
push
adc
stos
mov
dec
mov
cmpsb
ljmp
stos
push
mov
mov
movhlps
jb
sub
dec
sbb
icebp
jmp
data16
mov
mov
mov
jb
lods
filds
mov
cmc
mov
or
shll
in
jp
rclb
cmp
and
and
mov
mov
icebp
jae
push
popf
jns
test
push
cmp
imul
clc
imul
inc
das
add
cs
fisttpll
pop
sub
xor
cld
xor
imul
lcall
jge
and
cld
push
cld
adc
fsts
pop
push
je
inc
sub
push
fists
and
or
fidivrs
xchg
decb
je
jne
out
imul
xchg
inc
femms
dec
sub
dec
js
sub
xchg
loop
pop
and
adc
icebp
icebp
pop
call
int
mov
jno
add
push
je
push
xchg
inc
pop
lret
mov
jle
jp
icebp
jb
mov
mov
ret
dec
mov
and
add
aam
cmp
inc
pop
js
pop
lock
mov
or
or
repz
pop
addr16
sbb
lret
sbb
int
mov
mov
lds
xor
mov
popf
mov
mov
push
movsb
outsw
rcl
out
out
cwtl
pop
xor
jae
cld
xor
loopne,pt
xchg
lods
push
cmpsb
fnstcw
cmp
aaa
sub
mov
jnp
cmpsl
subl
and
imull
int
loop
push
ljmp
ret
push
cmc
jle
data16
lods
aam
and
and
push
xchg
mov
imul
dec
xchg
outsb
mov
sbb
shr
xchg
sti
stos
sub
push
and
sahf
push
push
rclb
xchg
pushf
nop
add
ret
push
ret
or
xlat
test
pop
mov
imul
icebp
imull
mov
mov
and
inc
std
adc
push
stos
mov
inc
jnp
leave
dec
je
push
scas
cld
mov
arpl
fs
sbb
test
cmp
fists
pop
pop
push
js
cmp
push
or
adc
push
or
adc
push
or
adc
push
or
adc
push
or
adc
push
or
adc
push
or
adc
mov
ljmp
bound
dec
je
adc
and
xor
jl
sbb
clc
sahf
sbb
es
stos
lods
es
daa
mov
nop
es
and
bound
push
test
test
and
lock
mov
loope
add
inc
push
js
sub
or
push
or
xchg
xlat
adc
insb
jno
test
inc
sbb
sub
imul
mov
ds
xchg
stc
jbe
sbb
popf
jg
cmp
sti
roll
xor
adc
xchg
or
xchg
mov
imul
inc
out
dec
test
pop
aaa
aaa
mov
int
cwtl
mov
xor
enter
in
mov
or
mov
xchg
fldenv
loope
cmp
sbb
cmp
add
add
sbb
cwtl
add
mov
inc
dec
pusha
push
shlb
sub
adc
or
sbb
inc
add
dec
loopne
adc
or
dec
add
orb
test
insb
add
add
push
je
and
rcrb
pop
adc
or
inc
movsl
inc
pop
lock
or
or
add
add
add
andl
lock
and
mov
nop
adc
adc
sub
add
push
add
add
roll
dec
and
sub
or
rolb
mov
jo
movsb
orl
sub
push
xchg
add
imul
add
cwtl
add
js
sub
mov
inc
outsl
ffreep
shll
xor
sbb
incl
gs
mov
mov
sub
push
jo
call
cltd
fisttps
jo
pushf
jno
adc
sub
ret
adc
xchg
fdivrs
mov
sbb
into
inc
into
icebp
sbb
pop
and
pop
sbb
add
and
sub
rcr
clc
cmpsl
sbb
pop
dec
js
lahf
jge
lods
insl
xchg
mov
int
in
mov
mov
xor
xor
mov
dec
cmp
ss
mov
push
outsl
push
jl
jle
xchg
pop
bound
iret
stos
and
mov
mov
jg
dec
scas
and
adc
test
cltd
pop
test
aad
adc
sub
pop
sbb
push
sub
pop
add
and
inc
fwait
shr
dec
or
lods
cmp
test
mov
push
xchg
pop
push
insb
shrl
or
jb
inc
mov
xchg
sub
push
xchg
inc
aas
stc
js
je
pop
popa
fbld
sbb
popf
cmc
test
dec
mov
aas
pushf
addr16
mov
notb
lret
mov
fdivrs
adc
xchg
sub
jg
loop
lahf
loopne
sub
cltd
jb
movl
mulb
jb
mov
int
shll
mov
outsl
adc
mov
cwtl
dec
cmpsl
in
out
mov
sub
nop
lahf
push
clc
loopne
jns
push
mov
lea
pop
sbb
add
add
repz
mov
jae
int
loop
adc
daa
scas
push
pop
sub
out
js
out
fstpt
sbb
icebp
stos
mov
out
xlat
inc
cmp
sbb
addb
mov
lret
sti
or
dec
push
cld
mov
mov
jnp
and
jb
cmpsl
pop
cmp
jle
pop
ja
inc
cmp
jmp
sub
rorb
push
dec
xchg
popa
lock
lret
add
pop
test
fmulp
sub
jl
stos
ss
inc
enter
inc
lods
mov
add
and
nopl
ds
or
movsl
lea
sbb
into
fistpll
mov
xor
aas
mov
leave
inc
cs
insb
add
nop
stos
mov
sub
push
dec
pop
mov
insl
fildll
stos
lret
adc
outsb
cmpsb
fidivrl
jno
movsb
xor
arpl
cwtl
or
outsb
loope
pop
mov
pop
jl
out
xchg
jne
cli
negl
clc
cli
fdiv
adc
dec
mov
mov
sahf
lcall
pop
add
mov
hlt
fdivs
dec
dec
mov
mov
pusha
sbb
jb
mov
cmp
dec
fdivrp
push
bound
add
imul
pushf
or
enter
or
cli
dec
dec
aaa
fstl
add
mov
outsl
xchg
aam
inc
adc
mov
lds
xchg
into
sbb
pop
and
fildll
pop
scas
popf
pop
jp
hlt
xchg
lods
fisubs
aad
and
int3
insb
dec
addr16
mov
stos
mov
mov
gs
aaa
mov
ljmp
sarb
jbe
xchg
popa
scas
clc
iret
cwtl
das
dec
aas
out
or
cwtl
add
sub
loope
adc
xchg
xor
lods
sarl
dec
push
ss
push
and
dec
and
sub
inc
dec
dec
xor
mov
cmp
add
inc
add
insb
add
add
std
mov
push
inc
dec
std
mov
out
sbb
inc
push
and
push
arpl
mov
in
sbb
add
pop
inc
stos
jbe
jmp
fldcw
add
sbb
addr16
dec
testb
aam
dec
aad
xchg
mov
mov
pop
pop
adc
movsl
pop
testb
xor
sub
test
adc
mov
shl
mov
pop
repnz
popa
shlb
ret
iret
sbb
scas
mov
notb
mov
cmc
add
pop
in
test
out
hlt
sar
sub
mov
jmp
xchg
push
les
rcrb
or
inc
jecxz
addr16
xchg
xor
add
jl
jle
aam
push
add
mov
les
xchg
xchg
jle
dec
or
add
cmpsb
test
dec
sbb
or
push
stos
out
mov
or
test
add
xchg
fstpl
pop
cltd
dec
jae
sub
inc
xchg
inc
mov
pop
scas
int3
cltd
cmpsl
inc
shll
sub
xor
mov
movsb
data16
dec
jne
xchg
xchg
int3
ret
inc
sub
inc
movsb
dec
inc
cmp
test
and
dec
pop
xchg
mov
cmp
inc
cmp
sarl
push
out
hlt
pushf
pop
xchg
push
jle
add
jle
mov
ret
enter
and
cmp
mov
jno
push
xor
test
xchg
mov
fwait
jo
mov
push
leave
fadds
xor
stc
mov
xor
test
int3
adcb
adc
cli
out
mov
repz
cmc
xchg
js
jle
or
jae
xchg
xchg
dec
or
scas
pushf
cmpsb
adcb
femms
mov
inc
lock
push
and
or
mov
xchg
inc
insl
pusha
mov
loop
lods
loopne
push
mulb
push
mov
iret
aad
arpl
out
mov
push
vmovupd
mov
adc
or
xchg
sub
inc
cltd
add
mov
test
push
xlat
aad
xchg
xchg
dec
jbe
sahf
aam
pop
dec
je
mov
lret
and
adc
jno
iret
outsb
sahf
scas
and
sbb
adc
mov
cmp
cwtl
mov
ja
jo
and
push
mov
mov
jne
xor
ret
gs
imul
mov
fists
bnd
cmp
out
js
lahf
or
dec
mov
xchg
xor
gs
adc
and
xchg
and
adc
aad
addr16
arpl
fidivl
jl
push
popf
dec
mov
or
push
fidivs
in
or
cmp
mov
mov
pop
inc
mov
ret
jb
dec
fxch
stc
jnp
lds
int
sbb
or
mov
in
out
jns
sbb
filds
or
fcoms
adc
sub
mov
std
jp
loop
fcmovbe
stos
xchg
inc
subb
mov
push
xchg
cs
aad
adc
lahf
xor
push
or
dec
xor
loope
into
rdpmc
bound
call
data16
mov
test
arpl
aad
cmp
inc
addb
pusha
fwait
xor
cltd
mov
call
inc
lea
loope
mov
ss
mov
sub
sub
mov
fnstenv
adc
mov
mov
jmp
movsl
or
rcl
sti
lret
loopne
dec
adc
jp
in
and
jge
andl
push
pop
adc
lods
jle
xor
in
mov
add
int
cmc
mov
mov
movsl
pop
test
mov
sub
lods
dec
enter
sub
push
stos
lea
cs
cmpsb
insb
add
cld
or
movsb
insb
xchg
pop
aaa
pop
mov
mov
cmp
cmp
mov
jp,pt
mov
rcl
mov
mov
pop
insb
shrl
test
flds
push
mov
mov
jbe
mov
ljmp
cwtl
sarb
mov
and
imul
xchg
imul
loopne
shl
outsb
in
in
jge
lcall
movsb
sub
jno
iret
jno
js
movsl
sub
test
sub
ret
in
sbb
sbb
mov
es
add
nop
in
pop
xchg
mov
and
lret
nop
mov
push
jns
mov
xchg
idivl
jo
mov
in
dec
fstpl
add
cmp
addr16
fisttpl
mov
hlt
pop
lock
pop
push
ret
push
dec
lret
mov
xor
mov
loop
out
pop
mov
mov
push
cmp
int
inc
cmpsl
or
jp
int3
sbbb
jg
push
mov
pop
fwait
xor
pusha
mov
push
mov
xor
fwait
shrb
lods
push
push
dec
xchg
mov
out
mov
loope
popf
mov
push
xlat
cmp
jns
sub
loop
push
sub
cmpsl
push
lahf
in
rorb
push
int
mov
cs
cmp
out
stos
insb
mov
shlb
cmp
aas
and
inc
das
xchg
mov
jne
popf
jl
cmpsl
dec
lcall
add
sub
orb
mov
add
push
jae
aaa
dec
adc
orb
mov
or
cmc
mov
xor
pop
in
inc
cltd
jnp
xlat
pop
fdivrs
sti
je
jge
cmc
pop
fwait
sub
fadd
insb
push
adc
push
xor
adc
aaa
pop
data16
sub
sub
cmc
push
movsl
cmp
jbe
imull
lar
sbb
mov
xorps
mov
mov
jb
call
jne
xor
mov
pop
nop
xor
test
es
cmp
xchg
inc
xchg
call
mov
lret
jg
xchg
cld
std
lret
repz
pop
bnd
inc
negb
mov
pop
add
mov
and
mov
cli
pushf
pop
sbb
dec
rcr
aam
ljmp
inc
cld
imul
adc
movsl
and
cmp
nop
addr16
adc
in
and
sub
in
mov
mov
stc
cld
vpaddw
arpl
call
and
hlt
pop
mov
add
pop
loopne
add
cwtl
cmp
mov
lods
loop
dec
inc
shll
mov
xchg
movsb
mov
dec
adc
outsl
xor
fsub
scas
int3
test
sbb
inc
jecxz
add
test
ja
xchg
cmp
inc
pop
sbb
push
dec
mov
das
inc
pop
mov
in
mov
sub
movsl
mov
icebp
icebp
mov
jmp
sub
sub
cwtl
xchg
mov
mov
adc
mov
xchg
sub
push
and
inc
cli
pop
pop
in
pop
lods
fstps
and
and
cwtl
mulb
jae
mul
dec
adc
data16
and
shll
sub
testb
jl
push
add
sbb
gs
jns
leave
ret
pusha
lods
lcall
mov
out
loope
push
rcll
cwtl
pop
scas
imul
pop
inc
scas
add
imul
sbb
jne
mov
jmp
les
xchg
rol
mov
cmpsb
dec
outsl
mul
cmp
jbe
lock
mov
jl
cmp
pop
aas
mov
insb
fbstp
mov
jl
in
cwtl
mov
test
cmc
adc
loope
push
mov
inc
or
mov
and
sbb
xor
inc
xchg
adc
dec
push
pop
lock
mov
out
aam
mov
test
adc
dec
and
inc
xor
in
cwtl
ret
lods
mov
and
fwait
mov
push
les
dec
push
sub
subl
dec
xchg
add
in
pop
jns
ret
pop
inc
add
dec
jmp
jg
test
mov
arpl
fidivs
xchg
mov
cli
lret
pop
pop
fisubl
or
sub
loopne
jle
pop
or
xchg
imul
ljmp
pop
ja
dec
lcall
lea
bnd
aas
hlt
cwtl
adc
jge
jo
pushw
mov
into
sub
lahf
sub
or
or
push
rcr
jg
xor
jg
test
or
pushf
mov
sub
in
mull
pushf
or
cmc
pushf
je
ficomps
outsb
out
mov
shr
stc
cmp
adc
adc
stos
loop
fisttpl
xchg
or
loope
out
paddusw
jns
mov
push
jnp
insb
cmpsb
sbbb
popf
xor
pushf
repnz
mov
addl
aam
adcb
mov
xchg
int
out
xor
xchg
rcrl
cmp
sub
addr16
pop
sub
pop
inc
mov
fistl
xor
add
inc
push
xor
dec
lcall
fmull
fimull
adc
dec
movsl
test
jo
ret
shll
push
movsl
mov
sbbb
xchg
pop
pop
push
jg
movsl
test
cmp
pop
pop
add
gs
add
pop
pop
add
add
push
gs
jbe
push
test
pop
mov
lahf
pop
lea
jns
add
lahf
mov
sbb
xchg
dec
add
pop
pushf
jns
into
enter
je
das
pop
das
adc
xchg
enter
adcb
pop
leave
gs
cmp
je
into
lea
mov
xchg
xchg
and
lret
pushf
dec
pop
mov
aad
adc
or
and
mov
repnz
pop
hlt
int3
sub
jo
xor
sbb
test
daa
ss
dec
push
mov
aam
jge
sti
and
add
out
stos
xchg
out
xchg
inc
dec
xchg
sti
std
sub
lret
or
pop
lret
inc
mov
rol
leave
sub
cld
cmp
push
cmp
push
shlb
stos
stos
aad
mov
sbb
imul
idivb
jno
push
dec
insb
mov
mov
sub
adc
mov
mov
js
xchg
push
jae
sti
xchg
loopne
es
mov
rol
jp
lahf
repnz
pop
inc
jl
je
and
bound
cmp
and
insl
pop
mov
loopne
shll
mov
push
sub
mov
sub
fmuls
div
sbb
icebp
jae
adc
jnp
pop
cltd
test
xlat
cld
inc
stc
pop
sub
xchg
out
rcll
jbe
push
push
fisubs
xlat
xchg
cmp
dec
lahf
out
testb
in
pop
dec
mov
adc
inc
sbb
ljmp
mov
inc
push
pop
mov
jge
lcall
fimull
xor
fsubr
insb
test
jne
pushw
dec
mov
and
lods
jmp
mov
jbe
xchg
int3
ret
pop
xchg
inc
out
mov
rcr
sub
fnstcw
rorl
cld
mov
roll
cmp
test
pop
lea
xchg
sbbl
push
sarb
data16
sbb
pushf
dec
xchg
or
fcomps
pop
popa
jb
arpl
mov
mov
andl
xchg
pop
mov
xor
roll
nop
jmp
out
push
jo
bound
mov
popa
ffree
mov
shr
dec
dec
jb
stos
loope
pop
lahf
mov
jns
sbb
xor
ficompl
adc
rcll
call
pop
dec
jno
dec
mov
rcrb
outsl
jns
mov
push
aam
sbb
xchg
cmp
out
movsl
sub
cs
lods
fnstcw
dec
stos
icebp
mov
aam
pop
aad
scas
out
scas
sub
xor
mov
cltd
jp
ss
dec
fisubs
lret
test
jg
add
jae
sti
std
xor
inc
fisttpl
stos
and
and
sbb
stos
aas
lret
dec
repnz
daa
repz
mov
cmp
cltd
jo
xchg
pop
int3
and
es
sbb
aas
add
call
out
sti
shrl
in
sub
or
jle
mov
outsb
test
xor
add
push
jb
fsubrl
jo
rclb
aad
push
xchg
and
push
inc
adc
int
sarl
inc
jae
mov
lods
xchg
stc
lods
and
mov
repnz
hlt
daa
repz
std
ret
mov
popa
sbb
adc
or
shr
cmpsl
jno
sbbb
jns
mov
jmp
dec
stc
cmp
add
or
sbb
lods
sarb
fnsave
sub
ss
fnstenv
rcll
and
adc
sub
cmc
jb
enter
rorb
aas
fwait
mov
movsb
mov
call
inc
cltd
orb
test
fwait
test
and
inc
cwtl
and
inc
cs
xor
rorb
sub
and
pop
cltd
push
jne
dec
mov
adc
or
push
adc
mov
enter
push
into
sub
frstor
mov
enter
insb
enter
push
lock
mov
dec
xchg
lock
out
out
fmuls
mov
sub
out
jbe
subl
xor
popa
mov
std
push
fiadds
in
jge
cmc
in
ret
xchg
push
call
fisubrl
pop
xchg
scas
ret
insl
xchg
nop
out
pop
leave
insl
jne
cmp
inc
fisubrs
aam
int3
repnz
mov
dec
mov
lahf
into
mov
mov
mov
pusha
cli
jg
xchg
pop
or
mov
enter
push
loop
cli
pop
rcrl
movsl
and
and
lds
dec
mov
adcb
mov
cmp
inc
pop
and
xor
dec
je
fldcw
shl
sbb
std
pop
cmp
cs
pop
aam
xor
test
jb
fdivs
int3
rcll
push
jmp
mov
add
xchg
push
or
in
hlt
pop
mov
mov
sahf
xchg
ss
mov
jecxz
daa
arpl
push
and
mov
das
jl
xchg
lds
sub
shrb
pop
push
xchg
inc
imul
loopne
outsl
adc
lds
fstpt
pusha
sub
fstpl
push
mov
add
or
rclb
imul
nop
mov
cltd
add
mov
stos
sub
add
enter
loopne
rol
loop
popa
mov
dec
mov
push
jns
sub
out
inc
pop
push
shr
nop
cmp
cmp
sub
out
lahf
dec
mov
dec
loopne
push
sbb
test
fldcw
dec
add
and
adc
fmul
pop
js
or
cmpsb
adc
push
mov
sar
lods
out
xchg
pop
push
mov
movsl
es
jbe
xchg
fimull
jae
push
rcrb
and
mov
popf
add
int3
mov
jbe
loop
sahf
sub
movsb
stos
inc
rcll
out
imul
nop
out
or
aam
mov
inc
xor
jle
pop
cltd
loopne
arpl
ret
and
sbb
stos
jecxz
in
sbb
fdivp
roll
outsl
pop
lock
or
hlt
cwtl
xor
ja
lret
mov
mov
push
outsl
aad
icebp
inc
xchg
cmpsb
aam
arpl
cmp
test
push
cltd
mov
xor
repnz
std
push
aas
xchg
in
jns
js
outsl
int3
out
out
lret
in
lea
ljmp
stos
lcall
arpl
iret
js
into
int
push
mov
mov
out
mov
xor
inc
mov
repnz
push
pop
sbb
push
stos
xorl
out
mov
lahf
loopne
xor
jge
jecxz
popa
cwtl
mov
push
adc
je
mov
std
mov
fnstsw
inc
movsl
lds
aas
outsl
cld
sbb
ss
mov
rolb
and
mov
jp
sub
pop
rcll
mov
insl
or
fwait
ja
sarl
flds
inc
les
push
xor
mov
sub
push
xor
das
stos
pusha
faddl
lods
out
das
pop
mov
xchg
cmp
test
enter
add
das
std
arpl
bound
icebp
flds
out
rcrb
cmpsb
cli
sub
scas
rolb
in
jp
imul
imull
sbb
jle
jl
testb
xlat
insb
mov
loop
out
pop
push
daa
mov
out
rcrb
mov
movsl
and
bound
out
cmpsb
sub
add
mov
hlt
shll
pop
lahf
arpl
mov
push
push
jecxz
mov
mov
lret
xchg
adc
in
into
ss
in
mov
cs
loope
push
inc
sbb
shlb
faddp
dec
out
lret
cmp
jg
and
shrl
xor
out
in
inc
push
jp
pop
sbb
mov
movsl
mov
cltd
push
pop
lret
pop
das
xchg
mov
xchg
pushf
xor
lret
idivb
adc
add
mov
pop
push
outsb
push
mov
cmpsl
push
loop
pop
and
lret
stos
das
out
pop
insb
mov
mov
pop
imul
daa
dec
push
scas
aad
aam
icebp
aaa
mov
aam
push
sbb
pop
dec
ljmp
and
ret
mov
push
push
jbe
in
dec
add
push
aaa
pop
aad
scas
fcoml
fisubrl
sbb
jmp
mov
jnp
les
jecxz
xchg
aam
pop
scas
pop
push
fidivl
leave
fwait
pop
gs
sub
add
mov
sbb
imul
filds
cmpsb
xchg
xchg
cmp
into
subb
inc
dec
pop
mov
les
xor
adc
sub
sbb
mov
in
in
mov
test
ret
pop
ljmp
mov
ja
mov
sbb
inc
push
andb
dec
int3
stos
sub
or
pop
imulb
ds
ds
stc
scas
shr
andps
notb
movsl
jne
lock
scas
sbb
inc
push
sbb
push
mov
mov
fisubrs
sbb
pop
insb
cmp
pop
xchg
popf
pop
dec
cltd
aam
jno
xor
xlat
repz
je
mov
mov
cmpsb
jmp
imul
inc
inc
sbb
xor
cwtl
mov
andb
sub
in
push
fdivrp
leave
sahf
jle
xor
sub
fsubs
sub
inc
add
add
in
arpl
and
fstl
fs
jno
clc
dec
mov
das
pop
and
or
add
mov
jecxz
fwait
push
pop
push
mov
lods
fwait
mov
daa
mov
cmpsb
or
sub
mov
sbb
es
xchg
and
les
adc
sahf
mov
xor
cmc
cmp
fsts
mov
pop
rcrb
xorb
sbb
rclb
sub
insl
push
mov
stos
pop
inc
into
mov
in
dec
sti
xor
mov
in
adc
iret
jb
insb
push
out
add
xor
push
adc
dec
into
data16
test
and
xchg
fcmovne
out
test
pushf
xor
xchg
sbb
cmp
jmp
inc
imul
dec
xor
in
addr16
inc
mov
push
jae
addr16
clc
pusha
nop
or
push
jbe
lahf
mov
xchg
cmp
repz
leave
mov
fistpll
pop
adc
push
ficoms
inc
or
jmpw
push
mov
mov
pop
rcrl
popf
imul
popa
cmp
shlb
adcb
clc
xchg
inc
rcr
sbb
cmpsb
cld
ljmp
data16
fiadds
shr
push
mov
es
fcmovnb
jbe
sahf
orl
arpl
fisubrs
jl
and
jle
inc
bswap
xchg
data16
repz
add
add
nop
loope
or
outsl
iret
mov
cld
inc
jg
lcall
lods
inc
xor
mov
dec
xor
mov
and
sbb
mov
lea
mov
and
mov
mov
pop
arpl
rorl
cmp
repz
out
sub
jo
aas
cmc
into
xchg
mov
cmp
shr
push
jge
inc
dec
inc
pop
dec
pushf
sub
mov
daa
mov
dec
out
insb
mov
or
adc
dec
loopne
mov
inc
dec
out
jmp
lret
lods
xchg
xorl
subb
popf
or
xchg
xlat
jmp
outsb
ds
mov
flds
xchg
cmp
cltd
call
xchg
jno
sbb
push
and
insb
shlb
add
inc
xchg
rcrb
adc
cld
mov
addl
dec
pop
dec
fisubs
add
movsl
pop
mov
adc
lds
int
xor
xchg
mov
adc
and
push
inc
pop
ja
subl
mov
add
mov
mov
push
out
lret
inc
scas
gs
push
test
inc
stos
mov
xchg
fdiv
mov
iret
pop
mov
dec
mov
jl
push
add
ror
movsl
lahf
xchg
int3
js
sbb
ret
push
fwait
lahf
sbb
push
cmc
sub
mov
mov
push
sub
push
lods
aad
cmc
mov
mov
insb
ljmp
xchg
sbb
mov
out
adc
fwait
jp
add
int
mov
mov
mov
mov
loop
mov
ljmp
icebp
mov
jle
pusha
mov
push
lcall
addr16
xorb
ja
xchg
stos
lret
lcall
stc
int
inc
mov
in
cli
out
jno
mov
mov
mov
jno
mull
xor
dec
ljmp
dec
mov
jecxz
iret
mov
mov
lahf
jge
dec
pop
add
pushf
pop
cmc
jb
test
or
popa
sub
rcr
sarl
aas
and
jae
imul
imul
or
out
fsubs
jmp
dec
mov
test
adc
lret
call
sbb
xchg
push
adc
or
mov
sti
std
lods
mov
jp
test
push
xchg
inc
cmp
pop
jno
adc
fimuls
rol
sahf
jg
sub
mov
ret
fistpll
pop
mov
in
push
loop
mov
stos
pop
mov
xorb
push
popf
adc
mov
fildll
mov
pushl
cli
ljmp
mov
mov
js
int
pusha
or
jbe
popa
shrl
inc
shl
jo
dec
xlat
adc
add
outsl
outsb
mov
mov
mov
cmp
or
ja
xchg
testl
decl
and
test
daa
xchg
rolb
pop
jae
lods
dec
lcall
lahf
int
add
pop
pop
jns
cmp
roll
and
sub
cmp
push
cmp
xchg
and
xchg
test
sub
sti
xor
in
jecxz
sub
pop
mov
push
enter
jmp
mov
cld
dec
mov
in
aaa
fimuls
lea
stos
lock
pop
addl
fnsave
shll
popf
cmp
sbb
in
pusha
inc
lret
mov
cmp
inc
pop
sub
lret
mov
lock
mov
test
and
fstpt
iret
orl
pop
gs
pop
xor
sbb
push
js
xchg
mov
mov
jl
sbb
push
add
jns
sub
stos
inc
test
and
test
or
jle
es
aas
xchg
lahf
mov
andl
add
lods
mov
test
sbb
ja
jecxz
cwtl
add
les
mov
sbb
cmpsb
aaa
dec
sti
jb
arpl
sub
fldenv
test
ret
or
mov
adc
add
add
cmp
xor
outsb
jl
addb
add
subb
push
inc
aas
out
nop
pop
scas
cmp
dec
repz
mov
push
or
xor
xchg
pop
addr16
fcmovb
pusha
sahf
jg
test
subl
pop
jp
push
inc
push
dec
leave
push
cmp
jmp
sarl
ficompl
rcrb
mov
loopne
cmp
sbb
pushf
fucom
cmp
mov
insb
and
bound
popa
xor
daa
loopne
cmp
cmp
repnz
popf
iret
mov
into
mov
add
arpl
enter
test
cmc
lea
jae
std
rorl
dec
push
clc
lret
jge
mov
repnz
punpcklbw
pop
inc
xor
jge
lods
out
mov
mov
andl
test
pop
aaa
mov
addb
iret
jmp
xor
es
data16
and
push
xchg
inc
faddp
retw
testb
dec
lock
sub
jnp
fstps
sbb
push
int3
cs
punpckldq
jecxz
repnz
icebp
pop
push
mov
mov
pop
cld
sbb
sti
pop
jae
pop
add
cmp
dec
adc
xor
fwait
jne
adc
jmp
repz
cmp
pop
jmp
enter
mov
std
jecxz
ret
jo
mov
adc
outsl
pop
mov
fisubrs
scas
sbb
fdivrl
out
push
pop
sbb
push
mov
adc
hlt
pop
or
jnp
xor
pusha
daa
pop
jg
dec
mov
mov
xchg
jge
mov
or
es
add
xchg
inc
lret
mov
push
mov
jmp
adc
stc
jecxz
out
cmc
xchg
sub
ror
aam
mov
mov
js
cmpsb
stos
stos
dec
cmp
sub
popa
inc
xlat
fnsave
or
roll
lods
sarl
or
push
imul
clc
mov
in
xchg
aam
outsl
int3
decl
push
hlt
je
orb
scas
cmpsl
xchg
ja
loopne
or
dec
cmp
es
jecxz
pop
dec
pop
adc
xor
cld
push
out
divl
and
xchg
push
out
dec
jmp
ds
je
mov
aam
outsl
lcall
mov
xchg
leave
ss
and
gs
mov
in
gs
insb
pop
ljmp
aad
mov
adc
xchg
mov
xlat
lret
mov
sbb
shll
jbe
imul
sub
add
mov
push
pop
sub
movsb
cs
sub
or
aas
addb
ss
in
xchg
xchg
lret
bound
cld
dec
lods
lret
enter
mov
mov
inc
std
xor
cmp
and
and
sub
mov
sti
push
pop
jnp
cmp
or
outsb
xchg
in
popa
mov
xor
push
pusha
movlhps
call
stos
jno
addr16
fcmovb
push
rolb
lahf
mov
fs
mov
push
sub
lahf
xlat
subb
mov
xchg
mov
mov
clc
test
xor
jmp
push
sbb
inc
dec
push
aam
out
mov
out
enter
mov
cld
test
dec
cmp
pop
shlb
cmp
rorb
nop
sbb
push
in
push
inc
push
scas
gs
dec
mov
push
lret
cmp
sbb
cmp
les
pop
jl
call
mov
xchg
xchg
repz
mov
push
mov
sub
inc
sub
stos
push
jns
sbb
jecxz
pop
test
pop
loope
push
fwait
js
mov
stos
mov
ljmp
sub
push
jmp
testb
xchg
mov
pop
sbb
pop
cmp
pop
ljmp
orb
cmc
xchg
pushf
mov
cmp
xchg
sub
rcr
out
cmc
jae
jne
jne
and
cmp
call
jmp
and
stc
and
in
jns
add
push
jle
xchg
movsl
imul
pop
cmp
push
cld
mov
or
sbb
cmp
test
sbb
pop
jg
pop
ds
push
sbb
das
mov
imul
clc
mov
insl
and
cmp
adc
push
hlt
push
inc
push
addr16
test
xchg
push
sub
or
fidivs
pop
pushf
push
psrlq
std
out
push
cmp
ret
sbb
push
test
lcall
stos
ds
hlt
fwait
test
outsl
loopne
mov
mov
clc
mov
jmp
fs
rcll
loopne
mov
dec
arpl
sub
lret
fstpt
shrb
arpl
mov
cld
call
dec
dec
sub
jns
sbb
lds
push
sub
add
je
push
inc
jb
or
ljmp
loopne
cmp
xor
mov
sbb
xchg
aad
cmp
sbb
sbb
xor
mov
loopne
ret
cmpsb
sbb
xor
shlb
xor
push
lret
cmp
pusha
dec
cmp
inc
jge
rorb
lea
es
daa
push
fwait
sbb
fistl
xor
aaa
dec
imul
and
inc
lds
dec
mov
stos
testb
mov
xchg
mov
int3
cmpb
jo
lcall
pop
inc
pop
adc
mov
hlt
mov
loopne
push
mov
imul
insl
mov
pushf
and
fdivs
scas
aam
mov
add
xor
mov
jne
jae
pop
mov
sbb
mov
and
ficompl
jecxz
and
lods
enter
and
cmc
xor
cmc
mov
icebp
inc
scas
shll
push
xlat
inc
cmp
push
movsl
mov
lods
mov
add
sbb
fwait
jmp
aad
fcmovne
dec
and
jns
adc
pop
shrl
pop
cmc
dec
call
call
push
jmp
mov
enter
or
mov
inc
jne
testb
test
fs
xchg
mov
or
inc
push
mov
mov
outsl
or
call
out
xchg
dec
ja
push
insb
xchg
sbb
and
out
mov
mov
or
push
xor
es
movsb
xor
test
out
sub
stos
inc
pop
pop
mov
fs
gs
lods
sahf
hlt
mov
xchg
inc
or
xchg
mov
cmp
ret
inc
mov
push
push
xchg
inc
outsb
mov
cmp
push
sub
jle
mov
bound
mov
pop
xchg
mov
ja
jno
cmc
push
shl
mov
test
inc
sub
jno
xor
and
int3
add
lcall
out
mov
mov
out
scas
arpl
enter
fcomp
and
in
scas
push
aaa
in
cmp
pop
inc
pop
fbstp
insl
in
std
ret
inc
inc
cmp
jb
int3
insb
mov
lahf
xor
bnd
loop
dec
lea
ja
sub
ljmp
cmp
sbb
rolb
nop
js
mov
add
in
cmp
leave
lret
lock
orb
xorl
mov
pop
dec
in
or
jo
icebp
andl
leave
addr16
test
lds
ret
push
jo
inc
in
movsl
fs
int3
or
sub
jl
lcall
repnz
add
push
or
ficomps
adc
enter
cmc
in
in
push
sbb
xchg
xchg
in
sbb
mov
rcll
lds
lea
pop
insl
cmp
int3
pushf
movsb
daa
sub
test
sbbb
fwait
outsl
cs
ss
jns
jl
fxch
mov
in
mulb
jmp
mov
inc
arpl
xchg
xor
lret
sub
mov
cwtl
cmp
pop
aaa
stos
and
in
xor
pop
and
and
out
out
inc
mulps
scas
lock
icebp
aaa
and
mov
mov
arpl
or
mov
outsl
pop
inc
cli
pop
xchg
jo
icebp
dec
mov
ja
cld
push
sarb
jne
pop
movsl
dec
je
push
pop
loop
mov
ficoms
cmpl
in
movsl
mov
mov
aas
ja
mov
mov
and
leave
add
push
pop
add
test
cld
and
nop
add
add
jae
jno
dec
push
adc
cmp
cli
call
popf
adc
test
sbb
pop
pop
and
lock
xor
aam
or
pop
jmp
into
push
enter
pushf
xchg
adc
bound
cmp
adc
pop
pop
sbbl
outsb
das
insb
pop
jne
roll
dec
mov
bound
data16
fwait
and
inc
adc
inc
inc
fmul
popf
stc
rolb
push
push
insb
and
shlb
out
pop
mov
mov
adc
shlb
lea
sub
pop
outsb
mov
sub
jb
inc
scas
xchg
push
add
pop
std
or
jecxz
out
mov
jle
in
pop
out
ja
cmp
and
icebp
inc
vcvtps2dq
fisubrl
and
push
insl
outsb
mov
ds
sbb
nop
jne
pop
mov
add
enter
fs
pop
xchg
lds
emms
pushf
sbb
fmull
push
gs
fcomp
test
mov
ret
xchg
dec
lcall
in
push
gs
pop
xor
lret
xchg
ja
add
jns
scas
or
jmp
rolb
stc
mov
mov
mov
sub
idivb
fdecstp
mov
out
aas
sahf
iret
call
and
sbb
sbb
mov
inc
and
inc
andl
xchg
lea
arpl
push
enter
ret
subb
sbb
inc
inc
mov
push
jle
cltd
xor
sbb
cli
aas
xchg
fmull
push
cmpsb
in
in
scas
nop
idivl
pop
inc
add
ret
mov
cmp
call
mov
lahf
jb
stc
inc
out
popf
xchg
test
mov
sti
lds
inc
lds
or
shrb
loop
fcomip
rcl
add
fmull
fldenv
call
mov
popf
jns
repz
cmpsb
ss
fcoms
inc
dec
and
mul
bound
xor
mov
lds
jmp
cmpsl
popa
sub
mov
push
cmp
or
jl
cmp
cmp
xor
mov
mov
in
cltd
cmc
lock
xchg
pop
fs
insl
xlat
gs
push
jb
xchg
pop
pop
jb,pn
mov
mov
and
arpl
add
out
ds
xchg
movsb
fbstp
sbb
imul
data16
int3
cmpl
xchg
cwtl
xor
pushf
ret
loope
jne
xlat
div
jo
sub
lret
repz
mov
xor
cmp
add
adc
push
mov
adcb
add
push
and
xchg
rclb
dec
fmuls
sub
add
fs
popa
or
xor
lock
movsb
std
mov
mov
pop
mov
adcb
dec
dec
in
adc
jo
sbb
das
orb
test
dec
repz
xchg
aaa
mov
aam
cs
stos
adc
daa
mov
stos
popl
xlat
cs
cli
outsl
js
jbe
cltd
push
mov
dec
mov
push
mov
xorl
jl
add
push
push
imul
inc
dec
add
aam
xchg
dec
movsl
add
dec
sub
mov
shll
dec
or
orb
test
add
xchg
add
sbb
rclb
xor
adc
pop
mov
fs
sub
imul
or
mov
out
pop
push
js
out
jl
les
stos
pop
push
xchg
dec
into
jae
push
jle
jnp
jbe
mov
mov
cltd
negl
int3
sub
pop
and
pop
stos
int3
or
cmpsb
out
jp,pn
sub
pop
fsubrs
dec
mov
subb
dec
and
test
test
cmp
pushf
inc
dec
add
or
addb
cmp
sbb
lea
adc
outsb
rclb
or
jge
push
mov
addr16
add
xchg
inc
loopne
bound
out
and
or
rcl
xor
lea
cld
arpl
mov
sub
add
push
mov
adc
es
lea
imul
mov
rorl
adc
jae
jnp
cmp
sti
push
mov
and
xchg
jmp
adc
sub
and
lahf
aas
mov
push
jns
pop
fwait
push
and
pop
pop
pop
scas
lock
rcrb
adc
out
xchg
add
outsb
sub
out
mov
jbe
outsb
xchg
xor
movsl
in
mov
inc
fwait
les
mov
outsl
push
jns
popf
pop
xchg
cmpb
fistl
sbb
les
mov
inc
mov
add
mov
fsubl
sbb
inc
addr16
jmp
jno
xor
xor
cmp
push
sbb
mov
loopne
mov
pop
fsubrs
sarb
mov
imul
je
aad
repz
pop
popl
insb
in
aas
mov
xor
insl
inc
icebp
in
out
popa
incl
jge
and
inc
repz
out
jo
pushf
dec
sbb
in
das
out
pop
and
and
ret
outsb
cmp
loopne
in
inc
and
dec
enter
test
mov
inc
jns
xchg
inc
std
js
mov
sti
cmp
mov
cmp
xchg
lret
rcrl
jne
into
or
in
xor
mov
loop
mov
test
mov
mov
and
or
mov
mov
scas
cmc
enter
dec
mov
sub
jbe
pusha
js
imul
mov
sub
mov
ds
adc
push
adc
push
push
cmp
ret
sub
ljmp
xchg
pop
pop
cld
mov
and
mov
test
fmul
cmp
mov
and
idiv
popf
add
cmp
inc
xor
nop
shll
andl
scas
test
mov
or
int
insl
shlb
jecxz
jno
cmp
faddl
xor
cwtl
xchg
out
lods
ret
xchg
push
jl
jmp
dec
sub
daa
outsl
fisubrl
add
add
incl
jge
mov
loope
rol
fiaddl
repnz
mov
repnz
xchg
or
rcr
mov
insb
mov
repnz
ja
sbb
xor
in
hlt
mov
mov
mov
jno
fucomp
in
loop
mov
xchg
lret
push
daa
push
mov
popf
cmc
cmp
mov
push
int
or
cmp
scas
ret
jmp
xor
stos
pop
notb
jnp
mov
jns
fidivrl
xor
mov
sbbl
dec
push
mov
adcl
clc
xor
dec
mov
cmp
mov
add
jbe
adc
jns
sbb
dec
xchg
mov
mov
or
ficoml
xchg
in
fistl
push
fcoml
cmp
lret
pop
pop
in
dec
dec
outsl
pop
mov
and
sbb
pop
das
pop
fsubp
mov
mov
dec
test
xor
insb
pop
cmp
jl
lods
int3
fsts
pop
and
cmp
dec
out
and
sub
jle
jle
je
lods
jns
mov
cmc
ja
les
fiadds
xor
jns
loop
stc
ss
xchg
cmc
into
jle
xor
sbb
push
pop
inc
aas
nop
outsb
xor
clc
adc
mov
fdivl
test
mov
cli
in
aaa
jns
mov
inc
adc
mov
mov
sbb
out
cld
inc
add
and
dec
mov
mov
dec
lock
jl
mov
push
rolb
lock
mov
repnz
push
inc
pop
mov
sub
popa
sahf
add
xchg
fdivrs
jl
and
add
nop
cmp
mov
mov
inc
mov
je
lret
cmp
xchg
jb
jns
push
cmp
adc
xor
jae
lret
lods
pop
mov
or
out
pop
mov
or
int
loope
lods
push
hlt
stc
pop
xchg
mov
mov
hlt
add
loopne
hlt
shlb
out
xchg
and
sub
pop
pop
mov
dec
divl
mov
gs
in
add
clc
adc
push
dec
add
in
sbb
insb
rcrb
jle
sbb
add
call
or
fsubl
pop
jno
jp
in
jge
pop
int
cmpsl
sbb
notb
loopne
cwtl
imul
imul
push
test
orl
add
cmp
sub
clc
add
dec
and
jo
loopne
loop
add
or
lcall
mov
adc
inc
mov
add
movsb
add
mov
loopne
rorb
push
add
add
adc
inc
adc
add
adc
push
adc
add
jo
xor
inc
pop
test
add
mov
shlb
add
xchg
push
adc
add
or
cwtl
dec
loopne
or
inc
sbb
add
data16
aad
adc
xor
sbb
rolb
dec
jge
inc
ret
pop
ret
jge
and
jb
loope
je
adc
fadds
push
or
mov
inc
add
repnz
je
xchg
cmp
adc
add
orb
xchg
dec
dec
aad
adc
add
inc
jo
xor
xchg
fisubs
aaa
stos
data16
push
jns
sub
pop
leave
fildll
cmp
test
push
pop
inc
push
adc
add
mov
inc
adc
subb
pop
pusha
test
dec
and
xchg
dec
add
mov
shlb
movsb
and
xchg
out
and
sub
loop
dec
insb
ret
hlt
add
or
addr16
add
repnz
sub
inc
and
cs
dec
jo
jmp
dec
add
dec
data16
adc
add
jo
shrl
or
mov
cmp
xchg
flds
popa
and
pop
adc
mov
or
cs
sub
rcrb
push
sbbb
and
xor
mov
inc
push
dec
ss
xchg
pop
sub
sub
cmpsl
inc
test
mov
and
jmp
cmp
adc
cld
xchg
ret
das
cmp
or
adc
adc
add
push
and
mov
loope
pop
movl
push
int
and
jae
movsl
loop
orb
adc
mov
enter
mov
js
adc
shl
leave
xchg
in
adc
adc
or
xchg
and
cld
push
cwtl
fwait
cmpsl
pop
adc
jns
or
and
ret
mov
shll
arpl
push
shll
sub
xor
mov
xor
leave
cwtl
pop
mov
shll
cmp
jno
push
imul
stos
insl
lret
pushf
xchg
mov
xor
mov
leave
jmp
ss
pop
add
mov
sbb
out
test
shl
xchg
cmp
push
int3
popf
lcall
jb
daa
es
out
aaa
dec
lock
loopne
mov
adc
ds
jb
icebp
xor
inc
push
add
sub
out
inc
jne
cmpsl
lock
push
mov
lods
popa
in
js
cmp
fiaddl
adc
test
cld
aaa
and
inc
fnstsw
push
mov
xlat
scas
faddl
cmp
imul
push
pop
sub
fwait
movsb
and
mov
call
fsubr
cmp
sbb
dec
cmp
push
into
adcl
mov
rcl
leave
pushf
ja
popf
cld
cmpsb
push
dec
sub
enter
aam
add
jg
xor
and
inc
cltd
and
adc
imul
xor
jle
mov
in
int3
cmp
pop
pop
pop
adc
mov
push
push
xchg
sahf
pop
bound
repnz
shrl
sub
push
in
xchg
xchg
mov
into
push
cmpsl
cmpsl
cmp
loop
cmp
dec
and
mov
ficoms
xchg
push
idivl
vpsrld
fstpl
push
cs
or
test
cld
mov
stc
repnz
test
test
loope
lea
sbb
mov
sbb
outsb
int
inc
out
dec
push
icebp
mulb
inc
xchg
es
and
push
fchs
mov
ud1
mov
leave
inc
pop
pusha
fists
inc
pop
fwait
mov
in
out
lcall
cwtl
sbb
dec
loope
jne
ja
adc
push
and
outsl
lock
mov
jne
es
cmpsb
push
jle
test
test
bnd
fdivrs
loopne
mov
fsubs
outsb
add
cmp
arpl
push
fiaddl
ljmp
jo
cld
enter
mov
xor
pop
ret
sbb
idivl
cmovnp
aad
sub
jle
daa
fimuls
xchg
jns
push
sbbb
adc
and
mov
push
adc
jmp
and
push
xchg
pusha
add
and
dec
mov
popf
jmp
repz
push
insb
add
movsb
hlt
pusha
cmp
pusha
push
sar
movb
mov
clc
fsubs
xchg
imul
lods
inc
lods
sbbb
sub
imul
adc
fidivrl
fidivrl
out
pop
cs
adc
add
xor
je
imul
imul
add
sbb
sub
js,pn
add
ljmp
adc
sbbl
lret
dec
sub
cmp
std
dec
test
in
scas
aam
sahf
ret
and
cmp
sbb
loope
addr16
xchg
outsb
xchg
fdivs
jmp
negb
out
inc
dec
push
cmp
fcomi
lret
adc
xor
iret
pop
xor
mov
adc
hlt
scas
push
std
out
cmp
jge
sbb
into
ret
imul
inc
lcall
sbbl
ret
in
push
push
mov
xchg
or
std
outsb
sub
rorb
jmp
das
aas
mov
inc
hlt
test
adc
pop
cltd
xchg
js
and
dec
push
les
mov
xor
and
lock
mov
insb
orl
jg
mov
outsl
adc
mov
cmpsb
inc
adc
xor
or
sub
xchg
and
es
cmp
cmpsb
test
repz
push
cmc
xchg
jbe
outsb
xchg
jbe
call
mov
loopne
in
into
sbb
lods
stos
mov
pushw
icebp
mov
dec
ljmp
int3
jbe
pop
std
or
int3
movsl
pushf
jl
movsl
int
xor
and
insb
pop
mov
mov
ret
xchg
adc
xor
jg
aaa
add
mov
push
js
int3
push
sub
push
je
fcompl
sub
jge
xchg
dec
mov
pop
scas
cmpsb
inc
mov
add
sarb
push
ret
push
push
outsb
sbb
jecxz
or
daa
pushl
xchg
std
or
xchg
fwait
cli
jmp
pop
mov
sbb
mov
ficoms
xchg
in
push
pushf
xor
cmp
ficoms
or
xchg
sbb
in
cs
ret
mov
pushf
inc
add
adc
inc
popf
inc
jnp
call
pop
adc
rorb
ja
insl
fiaddl
mov
xlat
fwait
or
push
fcmovnb
in
cwtl
outsl
sti
ljmp
imul
fs
div
into
inc
xchg
ja
push
popa
or
sub
lea
jg
lret
cmp
mov
pushf
and
adc
or
mov
xchg
je
pop
sahf
add
fs
leave
popf
imul
pslld
cli
mov
divb
xchg
xchg
out
in
or
jo
pop
sahf
mov
sub
in
ljmp
pop
insb
ficomps
inc
add
fsubrl
sbb
or
stos
aad
sbb
test
sub
and
jmp
outsb
or
xor
or
pusha
jae
arpl
mov
test
scas
sti
adc
push
mov
jo
mov
sbb
xor
dec
jp
test
aas
dec
sub
ret
in
sbb
cwtl
dec
jo
jmp
dec
test
pop
cmp
lock
mov
mov
jns
cmc
xor
or
test
or
adc
fs
xchg
mov
in
imul
pop
das
jg
out
xor
jg
outsl
in
mov
xchg
xchg
pop
mov
in
pop
push
mov
fsubrl
xchg
pop
js
mov
xchg
sub
xchg
loop
inc
lods
lea
subb
ficomps
aad
lret
je
incl
out
mov
mov
mov
dec
xchg
hlt
test
mov
cmpsb
movsb
decb
cltd
testl
out
dec
gs
in
adc
lret
cmp
inc
sbb
jmp
lock
and
and
in
or
cwtl
add
pop
dec
and
cmp
mov
mov
and
pop
aas
mov
iret
adc
push
lods
mov
or
fneni(8087
dec
pop
shl
and
lods
dec
jg
cltd
dec
test
xchg
xor
jae
adc
repz
lret
or
scas
fdivrl
pop
pusha
cmp
in
es
test
xchg
mov
mov
pop
jecxz
cmp
inc
jl
mov
mov
ljmp
mov
cmpb
and
jl
push
les
inc
inc
data16
and
mov
add
push
imul
push
push
in
cmpsb
lahf
movsl
jp
dec
sbb
push
sbb
arpl
add
fnstenv
sbb
inc
repz
sub
fildll
mov
test
cmpb
aas
xchg
pop
shlb
dec
push
test
stos
adc
mov
movsl
inc
loopnew
lcall
fwait
stos
scas
xchg
add
sbb
subl
mov
pop
out
roll
ja
inc
fs
mov
out
scas
cmp
je
jne
mov
jl
push
sbb
mov
loope
sahf
jp
fidivl
or
or
mov
adc
or
mov
dec
or
pop
loop
xchg
aad
inc
mov
icebp
and
pusha
jns
pop
and
inc
adc
lahf
sbb
sub
dec
push
mov
mov
jnp
add
out
xchg
lods
jmp
mov
lret
and
int3
pop
outsb
sub
mov
std
jno
lcall
out
inc
push
add
inc
sarl
scas
jle
mov
fs
push
mov
pop
test
cli
push
inc
cmp
testb
ffreep
test
or
movsl
inc
roll
jno
add
gs
sbb
jae
fmull
loopne
xor
xchg
sub
add
cmp
stos
ficoms
inc
imul
and
fdivr
xlat
and
sub
mov
adc
xlat
push
adc
add
adcb
icebp
jne
ret
inc
pusha
pop
sbb
addr16
nop
pop
dec
js
xchg
jb
movsl
test
xchg
xor
push
lret
inc
dec
inc
scas
sbb
add
push
dec
lods
test
cmp
fsub
sub
xchg
pop
jg
mov
xchg
push
cmp
loope
aad
aas
sub
hlt
hlt
loop
add
jb
jns
shrl
out
hlt
jmp
mov
inc
jae
out
or
bound
jne
inc
into
inc
sbb
or
jbe
dec
xchg
mov
sti
lret
adc
les
mov
xor
mov
fs
cltd
push
popa
clc
xchg
testl
or
scas
push
loop
xchg
out
gs
sbb
mov
stc
daa
pop
cmp
jne
cld
lods
jns
push
stc
subb
arpl
outsl
int
mov
and
add
js
mov
fbstp
enter
jecxz
mov
cli
loope
mov
inc
arpl
xor
bound
jle,pn
stos
push
xor
arpl
adc
xor
push
pop
pop
pop
aaa
fsub
mov
lock
add
fistl
lahf
movsl
sahf
fbstp
jnp
cli
mov
push
pop
js
push
dec
das
mov
sarl
sbb
dec
jo
mov
stos
sbb
jns
stos
add
stos
mov
lahf
in
cmp
fmull
inc
and
in
pop
push
dec
lahf
cld
out
push
lret
mov
sbb
in
aaa
inc
pop
pop
mov
scas
mov
lret
cld
push
pop
or
outsb
stos
je
push
dec
sbb
pop
hlt
sub
sub
in
push
mov
mov
or
cmp
pop
sbb
push
hlt
push
scas
mov
out
sbb
cld
scas
xchg
test
push
fcomps
mov
mov
shl
jl
jmp
fildl
into
lahf
lock
push
adc
xchg
add
pusha
mov
dec
mov
dec
jo
or
xlat
sbb
pop
sbb
xchg
add
nop
ss
jne
push
inc
aad
xchg
push
add
shl
inc
loopne
inc
fisubrl
loope
fldcw
mov
cmp
mov
jmp
lret
iret
sub
xchg
icebp
data16
adc
and
sub
mov
dec
and
and
sub
lret
mov
adc
nopl
imul
shl
xor
dec
inc
and
dec
out
ret
inc
mov
xchg
push
sbb
sbb
les
jg
aaa
or
jno
mov
into
xor
push
xchg
in
push
mov
int
inc
pop
mov
adc
mov
mov
xorb
xor
mov
inc
jns
out
testb
xor
pop
sbb
or
pop
or
test
popf
jo
out
je
shl
sbb
iret
aas
mov
mov
or
and
push
mov
popf
icebp
lea
push
dec
lea
mov
and
push
fs
xor
js
je
xor
cli
and
scas
pop
dec
and
sub
add
inc
test
adcl
and
adc
mov
or
mov
xchg
mov
test
xor
cmp
lods
jno
push
push
sbb
ljmp
ljmp
xchg
lret
inc
hlt
xor
mov
js
xor
xchg
mov
cmp
jnp
mov
and
loop
iret
ret
outsl
inc
frstor
in
in
int
jb
mov
or
lahf
ja
adc
call
adc
les
dec
call
fbstp
mov
mov
shll
mov
mov
mov
xchg
loope
push
mov
outsb
xchg
out
test
cmp
pop
fwait
pop
aaa
mov
jmp
int
mov
shr
fidivrs
ljmp
cmp
fimull
mov
lahf
jnp
stos
push
xor
leave
inc
pop
lret
cs
leave
pop
loopne
dec
mov
pop
cli
cwtl
mov
lock
push
mov
dec
cltd
pop
faddp
mov
add
nop
or
pop
lret
sar
ret
stc
sbb
dec
xchg
cmp
in
or
jle
movsb
rcr
outsb
jge
adc
in
xor
xchg
inc
dec
cwtl
xor
divl
cld
int
mov
imul
mov
dec
aad
sahf
sbb
dec
push
mov
xchg
out
fsubrl
cmp
out
sub
shrl
dec
ret
sti
pop
pop
icebp
shrb
cmpsl
inc
xchg
stos
lret
mov
ret
jp
movsl
arpl
fdiv
push
jle
sub
xorb
add
push
into
mov
insl
xor
dec
mov
push
or
lods
sub
jge
outsb
jl
imulb
stos
or
xor
and
add
int3
push
or
fisttps
cmp
mov
out
fs
push
sub
adc
or
int3
loope
ja
loop
lret
out
sbb
jno
or
movl
xchg
divl
cmpsl
add
pop
mov
test
push
aad
jecxz
xchg
pop
sti
mov
cmpb
add
arpl
jg
jg
jl
pop
dec
cmp
add
in
inc
out
xorl
push
pop
mov
jmp
mov
popf
int
mov
xchg
lahf
xor
into
dec
mov
xor
mov
dec
movsl
cmpb
jecxz
dec
in
jge
sahf
icebp
fcmovnu
push
pop
inc
call
out
daa
imul
xchg
enter
clc
fstl
rorb
test
inc
int3
fucomp
jns
inc
shl
int
adc
cld
scas
sbb
mov
xor
icebp
lret
cwtl
test
dec
mov
mov
cmp
inc
push
mov
xchg
pop
jg
push
or
jns
arpl
and
inc
sub
fnsave
lds
cmp
cld
inc
pop
cmp
movsl
xchg
jg
mov
mov
push
loope
and
loop
test
dec
mov
loop
es
mov
les
imul
adcl
daa
out
xchg
jnp
repnz
push
lods
mov
cmc
iret
mov
lock
loop
xor
test
enter
leave
add
out
push
cmc
dec
insb
cwtl
xchg
mov
sbb
stos
iret
pop
loopne
xchg
push
mov
jecxz
js
fstpl
jne
mov
mov
cld
dec
out
arpl
mov
in
rcl
bound
jb
dec
mov
int
jae
daa
mov
xchg
jb
xchg
inc
mov
rcr
pop
mov
enter
xchg
pop
sub
imul
push
push
sti
mov
stos
and
shrl
pop
cmp
in
in
imulb
jb
lret
fwait
repnz
push
rcll
cmp
mov
sub
mov
cmpsl
fisubrs
mov
sbb
adc
xor
lret
sti
scas
cmpsl
insb
dec
dec
sahf
into
cld
fsubrl
in
jmp
jmp
fnstsw
sbb
mov
gs
std
call
and
sti
xchg
sti
push
inc
in
scas
repz
ds
addr16
sbb
in
push
mov
dec
jecxz
rol
dec
sbb
inc
lret
dec
sub
arpl
pop
mov
and
es
push
add
push
test
pop
enter
sub
xchg
jmp
and
rcrl
aaa
mov
pop
fstpt
mov
xor
fnstenv
fldt
insl
mov
mov
mov
jnp
sbb
repz
fdivr
cltd
jecxz
popa
in
loope
pop
aaa
lods
lcall
insl
mov
pop
inc
pusha
stos
add
pop
sub
mov
mov
test
mov
shrb
sbb
fmuls
sbb
or
out
arpl
filds
lea
jl
shl
out
push
sub
mov
dec
mov
mov
cmp
xchg
imul
addr16
call
xchg
inc
pop
mov
dec
add
stos
insl
addr16
xor
jecxz
fsubs
xchg
jnp
sarl
mov
leave
int3
cwtl
es
fs
cmpsb
inc
or
rclb
jl
loopne
rcrl
cld
jne
aad
setge
and
std
frstor
or
lods
push
adc
xor
mov
sti
push
enter
es
pop
sti
xor
sar
inc
scas
jl
or
jnp
xor
out
mov
cmpsl
fwait
mov
or
xor
inc
notl
push
cli
add
mov
pushf
push
sti
dec
into
inc
lods
aad
test
jno
les
mov
bound
and
sbb
or
pop
inc
mov
jg
mov
popa
mov
mov
ret
push
pop
into
xchg
fisubrs
rorl
imul
rcrl
orl
mov
out
dec
sub
and
addr16
pop
sbb
out
scas
ret
callw
pushf
adc
dec
mov
and
mov
lods
aaa
cmpsl
mov
pop
sbb
inc
pop
jno
sahf
cmpsl
enter
push
adc
add
das
cmp
lods
inc
fsubr
and
add
mov
jp
xor
pusha
adc
mov
fs
pop
xchg
sbb
jb
loope
aas
cmp
mov
xor
push
cli
inc
pop
std
pop
scas
sub
aas
sbb
loop
in
aaa
testl
xor
fisubs
and
mov
mov
ret
in
xchg
pop
mov
loope
mov
cmp
push
lods
inc
sbb
arpl
inc
pop
jns
out
test
ss
xchg
std
lock
xor
add
mov
xchg
pusha
pop
iret
jecxz
jbe
enter
xorl
mov
fsubrp
cmpsl
and
jne
cmp
mov
xchg
jo
cmp
roll
loope
out
iret
xor
cli
enter
mov
jno
idivb
jp
jmp
ljmp
adc
mov
out
out
movsl
adc
dec
xchg
add
cmc
jl
adc
stos
push
test
mov
inc
mov
jmp
sub
cltd
xor
ret
adc
dec
inc
dec
sti
ret
adc
and
push
mov
mov
scas
rcrl
rorl
aam
pop
mov
stos
pop
pop
xorb
cmp
inc
pop
inc
je
mov
cmp
arpl
test
loop
xchg
mov
push
ja
mov
mov
pop
cmp
cli
and
in
outsb
popl
filds
mov
in
or
pop
lret
dec
xchg
inc
jecxz
cs
lods
mov
les
cld
adc
push
cmp
leave
popl
jl
cli
scas
adc
push
add
fwait
cmc
sti
lret
push
cwtl
push
sahf
or
roll
inc
test
pop
cmpl
cmpsl
out
jecxz
dec
or
mov
test
dec
add
fsubs
jge
mov
inc
mov
popa
sub
shl
mov
cmp
pop
bound
test
fnsave
pop
mov
imul
int
pop
cmpsb
and
push
xchg
out
call
push
pop
push
pushf
inc
xor
push
xchg
mov
outsb
mov
sub
pusha
pop
xchg
jmp
movsl
lds
ret
leave
jle
pop
fldcw
les
sahf
cmp
xchg
push
push
ja
xchg
push
gs
sub
loope
sahf
js
ljmp
pop
pop
shrb
stc
or
out
andb
xorl
add
mov
sbb
mov
nop
push
test
push
pop
or
insb
pop
add
add
jno
divb
out
mov
pop
lahf
inc
adc
push
aam
loopne
and
aaa
mov
mov
in
lahf
dec
mov
jb
stc
lods
lds
in
inc
mov
stc
mov
push
jns
lods
popa
sbb
inc
adc
push
clc
and
in
jle
rol
pop
lock
in
dec
in
xor
push
cmp
data16
arpl
add
cmp
cli
cli
outsb
mov
scas
dec
push
jo
outsl
lret
mov
ss
jmp
subb
out
xchg
inc
or
leave
int
stos
in
mov
insl
pop
fldt
jne
dec
inc
jp
cmp
lds
aas
inc
add
sub
or
pop
mov
mov
pop
inc
rol
cld
aas
push
xor
jmp
cwtl
lea
xor
or
dec
fcmovu
js
pop
out
and
xor
mov
popf
cmp
ret
es
sub
xchg
loope
popa
pop
push
mov
out
in
mov
add
pop
icebp
push
out
and
in
pop
mov
ret
xchg
cmpsb
jnp
mov
je
repnz
and
lods
popl
xchg
loop
imull
or
lahf
pushf
sub
cwtl
and
cmpsl
aad
mov
add
subl
sti
jae
lahf
ret
fsubp
pushf
jp
test
jnp
pop
inc
sti
jno
fdivrl
bound
mov
fisttpll
sub
gs
mov
push
push
repnz
mov
mov
pop
sar
shll
aaa
pop
jae
xor
pop
out
std
mov
mov
cmp
leave
sbb
imul
sub
xchg
and
xor
fidivs
fmull
arpl
fnstcw
movsb
daa
push
cmp
pop
cmp
push
adc
cmp
push
xchg
jl
jmp
mov
cmp
rol
insb
int3
and
imul
je
test
and
add
or
adc
or
or
xor
add
cmp
sub
jle
je
lods
mov
push
fstl
lret
and
loop
cmpsb
jb
aam
sbb
sub
push
or
mov
xor
and
inc
andb
enter
add
add
add
pusha
pop
out
add
adcl
fmuls
enter
xor
cmp
je
jnp
icebp
insb
sahf
addps
jns
sbb
jne
push
ss
insb
rcrl
aad
mov
cmp
xlat
and
jg
movsl
pop
dec
mov
lds
shl
pop
push
js
and
jbe
fs
aad
dec
or
push
shlb
ds
mov
repz
sahf
repz
mov
out
dec
cli
test
lock
leave
and
xchg
pop
mov
mov
cs
mov
in
mov
mov
lods
dec
stos
lahf
mov
pop
inc
clc
mov
outsb
cmpsb
mul
popf
xchg
mov
mov
jbe
xor
add
sub
decb
cmp
aas
jl
test
add
loop
push
aam
ds
xchg
cmp
adc
add
inc
jbe
sub
xchg
xchg
sbb
iret
movsl
hlt
sarl
out
decl
stc
loopne
sub
nop
sbb
pop
lods
push
aas
aaa
jmp
mov
xchg
xlat
xor
dec
xchg
call
push
cmp
shrb
push
scas
icebp
ds
mov
and
mov
in
insb
xor
outsl
pop
bound
jecxz
test
inc
lcall
add
out
in
fcompl
enter
xor
pop
std
das
jno
dec
icebp
rcrl
in
add
insb
push
sbb
push
insb
sub
push
jecxz
fdiv
pop
cmp
inc
popa
fs
dec
or
rcr
int3
jnp
mov
imul
push
add
shr
mov
ljmp
in
aas
or
inc
shll
ret
stos
repnz
cli
jne
outsl
xor
xchg
jl
ror
push
movsl
movsl
sahf
mov
jecxz
scas
mov
push
sub
or
jne
or
fbstp
sub
mov
jl
std
jg
mov
test
lea
add
jge
push
ss
push
mov
mov
shrl
flds
xchg
pop
cltd
xor
push
jl
mov
xor
xchg
jl
xchg
stos
lret
cltd
dec
pop
add
mov
cmp
in
stos
je
sahf
sbb
push
fwait
xchg
sahf
adc
insl
mov
xor
into
cltd
bound
in
xchg
xchg
adc
movsl
lock
call
add
andl
std
daa
pop
aad
movsl
add
jae
scas
scas
pop
bound
stos
mov
or
push
adc
dec
sahf
xor
and
xchg
add
mov
adc
les
out
movsl
add
jae
ja
fldcw
mov
ss
and
arpl
add
test
inc
dec
rcll
mov
insb
in
test
xchg
mov
lods
pop
pop
int
shlb
fldl2e
dec
cwtl
adc
or
aas
inc
fs
test
fs
insl
out
pop
xchg
xor
push
mov
xlat
shr
movb
jno
arpl
fcmovnbe
cld
sub
push
pop
xchg
pop
or
adc
outsl
aad
or
and
sbb
out
imul
je
int3
adc
sti
mov
or
repnz
cmp
dec
out
cwtl
and
jno
push
idivb
leave
stos
fndisi(8087
lcall
scas
shl
ljmp
dec
shrb
data16
pushf
fstpt
lret
and
push
sub
fdivl
aas
nop
lods
insl
xlat
mov
mov
adc
and
jmp
cmpsl
jge
stos
jle
pushf
imul
push
iret
mov
fldcw
gs
mov
int
mov
test
ror
ss
jno
enter
mov
and
mov
fbld
ss
and
scas
push
ja
loope,pt
cmp
push
sub
xor
or
jp
push
fldl
mov
jp
xchg
fisubrl
pop
add
les
and
or
data16
fistl
xchg
dec
imul
out
test
jp
or
pop
xchg
rorb
hlt
rolb
add
int3
ret
sbb
mov
test
insl
sbb
mov
fwait
inc
inc
and
jmp
in
rorl
in
scas
mov
leave
jno
mov
cmp
adc
xor
fs
hlt
cmp
push
or
repnz
clc
xchg
jp
sahf
lods
movb
mov
sbb
cmp
push
loop
popf
pop
or
inc
mov
incb
push
cmp
lods
leave
dec
leave
pop
fmul
xor
repnz
add
aad
jg
jecxz
out
ret
dec
scas
sbb
loopne
push
ljmp
test
sub
shlb
or
sub
shll
xchg
push
lahf
lea
mov
enter
mov
cld
fbstp
jmp
dec
sahf
lcall
lds
add
sbb
push
xor
xor
sub
adc
fists
std
sti
arpl
andb
cld
rolb
cld
cwtl
cs
inc
rcr
push
or
fisttps
inc
je
in
add
into
push
addb
into
mov
xor
bound
mov
lahf
ret
das
rolb
rolb
mov
fwait
xchg
add
jo
mov
and
pop
sbb
mov
subb
dec
les
add
jnp
mov
ja
xor
iret
ds
mov
xor
push
and
in
mulb
mov
loop
clc
daa
repnz
icebp
xchg
insb
int3
jnp
cld
sbb
lret
pop
mov
xchg
movsl
loopne
add
inc
sub
jmp
mov
scas
scas
pop
sub
fldl
data16
push
sub
jl
loope
cmp
repz
sti
mov
sub
leave
inc
es
cli
xor
pop
movsl
pop
xchg
sbb
cmp
aaa
lret
jns
cld
popf
leave
add
add
cmp
pop
scas
adc
add
push
jae
sbb
lods
incl
jl
test
pop
cmp
inc
addb
adc
test
loopne
jo
jb
jo
cmp
pushf
or
cmp
ss
pop
dec
cmpsl
jae
xchg
ja
rorb
shrb
or
pop
enter
sub
xor
xchg
in
inc
es
cltd
cmp
icebp
inc
jg
jae
in
adc
and
cltd
xor
imul
std
repz
or
jmp
repz
loopne
mov
inc
pop
push
cmc
mov
xchg
adc
inc
inc
mov
mov
sbb
sub
jb
in
inc
jbe
sbb
adc
xchg
fistpll
out
sbb
in
subl
fiaddl
ret
rcrb
mov
ret
loop
fs
jp
mov
jg
and
lods
dec
pop
mov
push
lcall
insl
dec
pop
add
push
cs
or
dec
int3
pop
mov
push
into
mov
repnz
mov
je
sbb
daa
inc
in
inc
lahf
bound
rclb
adcl
sub
and
add
or
pop
xchg
test
shrb
insb
jp
pusha
test
xor
les
and
jmp
push
xor
test
cmpb
fsts
sbb
test
int
add
jne
repnz
mov
or
ret
jp
xor
cwtl
dec
xchg
jmp
mov
pop
pop
xchg
sub
and
ret
xor
outsl
xchg
pop
or
inc
int
jmp
add
outsb
icebp
out
call
and
addr16
or
ja
xchg
addr16
les
mov
inc
push
xor
ret
sub
in
or
sbb
sbb
add
mov
cmp
mov
loope
lods
mov
mov
je
jl
jns
lds
xorb
sbb
or
call
cmp
andb
in
cltd
das
inc
fidivrl
dec
out
and
in
and
je
xor
repnz
into
and
gs
push
orl
jns
adc
repz
adc
push
xchg
add
jnp
hlt
insl
std
cltd
xor
mov
mov
inc
push
cmpsb
and
inc
movsb
jb
and
mov
xchg
in
xchg
mov
bound
in
imul
sub
lcall
mov
in
ret
xchg
fstpl
rorl
xor
jbe
push
lock
mov
jb
mov
in
jae
mov
stc
test
cli
and
push
pushf
aaa
xchg
nop
add
enter
sub
bound
inc
and
jmp
scas
es
jb
arpl
or
lahf
aam
mov
mov
dec
mov
aad
push
adc
or
les
dec
push
and
and
and
fadd
push
int
mov
inc
lcall
pop
aam
leave
fs
cwtl
sbb
xchg
les
rcll
dec
or
add
mov
push
sahf
dec
cmp
jecxz
mov
arpl
mov
popl
leave
xorl
add
mov
lds
je
arpl
mov
cmpsl
daa
add
push
mov
mov
push
int3
mov
inc
pop
les
shrl
mov
test
jge
adc
adc
push
insb
loopne
ret
mov
cmp
and
dec
mov
roll
and
popf
cmp
not
mov
scas
dec
ret
dec
lret
cld
cmp
mov
fdivrs
xchg
aad
add
push
sbb
rolb
mov
add
test
ror
adc
aam
shrb
push
cmp
cmp
sub
mov
xor
mov
and
loopne
fidivs
mov
jecxz
insl
push
pop
ja
fwait
dec
and
fsubrp
nopl
lds
or
sarl
mov
sarl
repz
xlat
dec
pop
rolb
pusha
sbb
xchg
jae
pop
popa
cmp
cld
fisubl
and
push
sti
jp
enter
or
cltd
sub
xchg
fnstenv
jmp
xlat
jmp
mov
cld
sub
sub
fwait
dec
mov
sub
lea
cltd
fdivs
pushl
sub
or
in
xchg
loopne
xchg
push
test
or
repz
test
dec
jle
push
test
xchg
pop
mov
psraw
sub
and
xor
call
outsl
jo
test
dec
xchg
and
mov
push
mov
outsb
ret
xor
fildll
jle
leave
sbb
dec
jne
testb
sbb
sahf
std
or
in
cli
lret
cli
outsl
cs
or
mov
rcl
outsb
sub
xor
jge
ret
cltd
mov
stc
pop
jnp
fists
xchg
call
ja
dec
das
push
rol
daa
out
adc
mov
mov
sub
jne
test
imul
cs
fdivrl
mov
xchg
arpl
ljmp
cmp
movsl
or
pusha
add
inc
pop
repnz
cli
in
mov
sti
lods
out
xor
stos
hlt
inc
dec
fisttpl
nop
xor
lds
fcoms
lret
sbb
xchg
push
mov
les
sbb
cli
pop
movq
and
dec
or
xlat
inc
sub
clc
aad
ds
leave
xor
data16
mov
mov
jge
sub
add
ja
fcoml
in
xor
out
add
mov
sub
jno
cmp
adc
std
sbb
xchg
sub
fadd
ds
fadds
mov
xchg
mov
repnz
mov
mov
fs
imul
clc
loop
test
and
push
mov
leave
cmp
add
andl
sub
adc
lahf
mov
inc
dec
pop
leave
inc
mov
mov
js
out
outsb
rclb
movsl
cld
and
lock
dec
mov
push
in
xor
inc
stos
sahf
repz
or
or
ret
in
cmpsl
lret
dec
ret
push
xchg
adc
in
dec
or
mov
pop
stc
cmpsb
data16
push
pop
mov
cmp
xchg
adc
sub
jl
mov
xorl
inc
xchg
cmp
adc
shrb
xchg
lahf
frstor
inc
lret
repz
adc
in
jns
lahf
adc
es
xchg
jo
ljmp
nop
and
mov
daa
pusha
mov
push
enter
xor
sarl
fildl
cmp
arpl
adc
lret
loopne
ja
mov
ljmp
pop
shrl
sub
mov
cltd
lds
jge
xor
pop
test
cltd
inc
mov
lret
in
pcmpeqb
mov
and
stc
cmpsb
dec
fists
mov
sub
shrb
pop
lret
shll
xchg
sub
sahf
inc
addr16
enter
in
leave
pop
mov
fwait
leave
ret
mov
push
loopne
pop
js
lods
mov
dec
dec
call
psadbw
shrl
or
xor
xchg
pop
add
sbb
rorl
popa
jp
push
add
int
push
mov
sub
and
xchg
lock
or
push
aad
inc
rol
out
sbb
dec
lods
shrb
imul
and
push
pop
fwait
stos
ret
sub
clc
sub
stos
cs
les
stc
xchg
jecxz
sti
mov
push
adc
movsb
test
push
pop
add
into
sbb
lea
js
push
dec
pop
lods
subb
mov
jno
loop
int3
pushl
rcl
aad
lock
adc
movsl
xchg
cmp
jp
adc
mov
imul
sarb
cmp
inc
out
shll
inc
fs
inc
push
push
xor
jb
cmpsb
add
loope
push
sub
jno
jo
or
lcall
and
xchg
inc
xor
repnz
test
out
inc
dec
dec
lret
aaa
ljmp
in
jno
gs
sub
sub
jl,pn
scas
in
push
sbbl
outsb
je
mov
mov
xchg
push
das
iret
and
mov
xlat
out
add
sti
test
mov
adc
jns
cmp
push
lods
fidivrl
imul
push
fsts
pop
sbb
cs
mov
pop
xchg
les
outsb
xor
sbbl
ja
xlat
cmp
int
and
ret
ss
mov
xchg
push
fisubl
dec
mov
sub
movsb
js
divl
mov
dec
jl
sub
movb
cmpsb
and
mov
aam
dec
test
cmpsb
cltd
sbb
jp
mov
mov
leave
sbb
clc
sarb
cmp
or
mov
mov
dec
pusha
out
and
das
mov
mov
sub
data16
pop
xchg
lods
xchg
xchg
dec
mov
mov
cmp
or
mov
add
or
or
inc
push
and
push
and
popa
xchg
push
rcrl
pop
cmc
adc
mov
rcrb
fadd
pusha
addb
jno
pop
xchg
sahf
inc
aaa
xchg
cmp
fidivs
test
notl
ss
push
dec
pusha
sub
mov
xor
cli
jno
gs
lea
sub
icebp
repnz
sub
negl
iret
pop
aas
or
mov
inc
std
aaa
sbb
insl
push
cmpsl
out
jnp
shrb
cmp
mov
rcl
ret
mov
lods
loope
out
cmp
xchg
pop
int
ds
clc
sti
mov
dec
lcall
mov
imul
mov
pushf
pop
out
outsb
outsl
sahf
xchg
test
bound
in
xchg
sahf
mov
lock
lcall
jns
pop
sbb
dec
gs
cld
sbb
xor
rclb
movsl
inc
je
xchg
mov
sbb
mov
inc
pop
mov
inc
das
jne
stc
jnp
outsb
jb
sti
push
pop
pusha
dec
add
pop
fcmovne
push
iret
test
fs
bound
or
sbb
loopne
dec
xchg
xchg
ja
repz
decl
into
or
movsb
lods
rorl
push
push
mov
aam
xchg
mov
jge
jno
add
cwtl
cmc
orb
xchg
push
xchg
clc
jne
pop
leave
enter
leave
repz
cltd
out
and
xor
mov
mov
cmp
xor
dec
adc
sub
leave
sti
cmp
xchg
adc
fsubr
les
test
test
and
cmc
sub
fnsave
mov
dec
fs
lret
mov
lods
jle
inc
aam
test
lods
outsl
mov
in
jl
pushf
or
leave
inc
test
dec
leave
jne
push
pop
dec
scas
outsl
clc
jl
testb
or
movq
jns
xor
sub
test
push
jl
mov
jecxz
cmc
xor
and
orl
pop
xchg
cmp
xor
lret
out
imul
imul
outsl
mov
repnz
or
jecxz
ja
sti
int3
pop
add
inc
pop
std
cld
rcrl
mov
dec
aam
icebp
bound
ja
sbb
cmc
or
pop
adc
orb
push
ds
ds
fists
or
ficompl
jns
jle
sbb
daa
mov
or
fdivs
and
pop
mov
popf
sbb
in
fdivp
cwtl
push
xchg
push
test
sbb
fwait
cmp
movsb
ret
stos
adc
lea
sub
clc
cmp
pop
mov
or
es
pop
mov
aam
dec
jg
ljmp
cmpsb
xor
xchg
mov
sub
inc
stc
std
jmp
jmp
lret
mov
sbb
mov
orb
pop
mov
es
out
jmp
xor
add
mov
stos
into
ljmpw
add
gs
or
push
ja
in
dec
scas
sbb
mov
dec
outsb
pop
jmp
notb
shr
in
xchg
sbb
mov
adc
andl
sub
xor
and
daa
lret
sub
or
mov
lea
mov
cmp
addl
inc
imul
mov
adc
mov
gs
sbb
outsl
mov
add
cld
fcom
or
in
ret
bound
xor
ljmp
pop
adc
xchg
mov
mov
nop
imul
mov
movsb
push
xor
addr16
stos
and
jb
mov
pop
rcrb
cmp
xchg
sub
nop
adc
push
ret
cmpsb
fsubl
mov
jb
movsb
or
jecxz
xor
push
mov
jae
sub
imul
movsl
xlat
inc
pop
cltd
fcoms
sub
ljmp
pop
pusha
jge
cmp
in
mov
mov
je
lcall
stos
call
aaa
xlat
aaa
or
lods
repnz
mov
cli
and
pavgb
into
inc
ret
lds
xor
cmp
cltd
pushf
outsb
push
lea
xchg
fstpt
mov
jns
xor
outsb
lods
sbb
js
popf
fldl
adc
loopne
les
arpl
loope
cmp
sub
inc
jg
shrb
xchg
pop
mov
movsl
sbb
adc
jno
adc
xor
or
je
les
fmull
xchg
or
sub
stc
out
jge
sub
fcompl
loope
inc
mov
adc
int
push
xlat
pop
jo
cmc
imul
daa
push
sti
shll
sti
insb
je
sub
lods
xacquire
fsubs
push
stos
fs
push
iret
xchg
movsl
bnd
sti
gs
jecxz
xor
and
lds
push
out
mov
icebp
outsl
push
sub
mov
inc
xchg
cmc
fisubs
leave
movsb
div
arpl
jmp
xchg
inc
in
fdivr
mov
lods
mov
mov
lret
mov
inc
mov
test
aas
inc
inc
daa
sbb
pushf
fbld
loope
sub
cmp
mov
jmp
sub
in
xchg
sbb
test
mov
push
sbbb
outsl
orb
movsl
jnp
shrl
inc
ficoms
pop
mov
pop
push
leave
push
js
push
push
inc
mov
sbb
push
cltd
in
inc
mov
sbb
sti
lea
adc
mov
mov
sub
sbb
fcomps
or
repnz
adc
test
adc
sub
dec
or
jmp
test
jbe,pn
leave
cltd
cltd
aas
push
inc
into
gs
icebp
lret
lcall
jnp
jecxz
loope,pn
int3
div
into
jo
jmp
mull
loopne
loope
hlt
dec
add
mov
push
pushf
and
pop
scas
adc
mov
push
jb
loope
jnp
mov
data16
repnz
jl
insl
shll
add
xchg
add
xor
xor
inc
add
sub
fstpt
fwait
movsl
adc
dec
arpl
and
aas
add
sbb
sbb
leave
dec
fs
inc
dec
dec
dec
push
push
cmp
add
repnz
les
mov
jae
addr16
scas
out
sbb
xor
jl
dec
in
pop
add
icebp
xor
scas
into
rorl
shlb
mul
push
rclb
subl
out
push
mov
mov
insl
out
repnz
lea
dec
ljmp
in
arpl
fnstsw
xchg
lcall
dec
std
pop
jno
mov
ret
jp
mov
xor
mov
lcall
mov
imul
loop
lcall
xchg
inc
sub
pop
pop
sahf
das
push
jne
ret
jg
clc
pop
adc
add
popa
ret
inc
repz
mov
jne
jne
sbb
out
test
dec
jge
pop
dec
adc
iret
pop
sti
mov
cltd
rcl
push
adc
adc
add
es
int
ret
cmc
outsl
out
sub
mov
xchg
fbld
das
push
and
lret
adc
insb
cmp
in
inc
sbbb
inc
lods
shlb
imul
sbb
lret
sbbb
popa
pop
pop
mov
stos
in
incl
and
mov
pop
mov
cmp
dec
daa
cmp
jno
mov
loope
movsl
ss
push
repnz
ljmp
scas
rcl
xchg
and
mov
cmp
rcl
cmpsb
sbb
enter
icebp
xchg
lock
lock
sbb
push
or
nop
mov
iret
adc
out
sti
push
lcall
cmc
xor
test
mov
add
push
lahf
sbb
sub
sbb
repz
test
mov
loope
scas
mov
sbb
xor
and
cltd
jg
mov
lret
xor
cmpsl
stos
add
jge
mov
dec
mov
cmp
pop
pop
iret
inc
mov
mov
sub
mov
push
cmp
inc
shlb
cmp
push
rolb
mov
imul
push
insb
insl
pop
in
lcall
xor
inc
jb
addw
cwtl
ficompl
cwtl
cmp
in
lods
imul
fistpl
test
iret
mov
sub
push
cmpsl
repz
jbe
scas
cld
outsb
mov
add
or
push
into
xor
insb
and
frstor
outsb
push
push
jecxz
or
mov
jae
jge
shll
cmp
icebp
cmpsb
ljmp
nop
or
outsl
and
pop
jmp
data16
push
test
popl
mov
mov
xor
ficompl
popf
scas
pop
adc
shlb
imul
jle
cs
pushf
jno
sbb
or
lea
out
mov
out
ficoml
scas
dec
jmp
sub
sahf
jb
or
jno
ja
lcall
shlb
movsl
cmp
cmp
fadd
in
fsubl
mov
outsb
adc
xchg
push
push
fbstp
mov
inc
idivl
into
stos
arpl
mov
mov
repz
pop
sub
inc
mov
xlat
out
add
inc
jno
xor
cmpsb
adc
aad
in
add
xor
cmpl
dec
repnz
das
or
jns
inc
stos
mov
jp
pop
inc
sbb
sub
stos
hlt
sub
repnz
test
inc
sbb
mov
add
mov
loop
jmp
dec
mov
mov
push
push
scas
jl
dec
sahf
xor
out
orl
sub
in
mov
mov
aam
cmp
cmp
test
test
dec
or
jmp
imul
testb
inc
in
xor
out
out
mov
pop
imul
repz
jno
mov
mov
subl
or
pop
or
popf
mov
mov
out
rcll
lds
sbb
insb
or
lahf
push
sub
lahf
in
scas
add
pop
pop
loop
xchg
into
pop
jne
jl
mov
movsl
mov
push
rolb
fisubrl
ret
push
cwtl
push
mov
dec
hlt
lock
mov
lock
xor
jnp
mov
inc
or
ljmp
lcall
ficompl
mov
adc
sti
roll
push
dec
add
pop
sub
mov
ja
adcl
out
dec
pop
push
inc
cmp
ja
aam
clc
or
inc
cmp
outsl
enter
stos
fildll
mov
inc
cmp
pop
and
mov
into
adc
lds
imul
add
mov
inc
imul
push
inc
adc
lds
push
inc
lds
sbb
adc
repnz
popa
test
arpl
jnp
pop
push
and
xchg
mov
jb
adc
cltd
sbb
push
mov
xchg
jmp
cmpsl
push
fwait
insb
push
out
mov
pop
cmp
sub
lcall
shrl
adcb
sbbl
xor
loope
sub
pop
outsl
jo
cmc
sub
sub
in
stos
add
sub
loop
mov
xor
fistl
test
arpl
adc
sub
icebp
mov
ret
push
and
repnz
nop
lock
movsl
cmp
repnz
add
imul
mov
jb
orl
movsl
cmp
push
hlt
cmp
xlat
stos
dec
dec
dec
cmp
cmp
out
insl
fadd
xchg
jg
push
stos
es
cltd
pop
or
mov
lock
pop
out
xchg
cmp
cld
loope
cmp
jecxz
hlt
push
mov
adc
fimull
inc
test
bound
jae
das
test
mov
mov
xor
xchg
in
fbstp
inc
mov
popa
mov
sbb
stos
add
add
dec
xchg
sbb
mov
and
cli
sub
imul
cltd
xchg
lods
outsb
bound
and
cwtl
jg
sti
sub
jmp
sbb
pop
aad
and
stos
nop
ja
jns
mov
and
fs
sti
mov
loope
xchg
push
xlat
adc
pop
sahf
pop
or
sahf
adc
rorb
jae
out
dec
cmp
lret
sbb
mov
out
mov
adc
dec
repnz
xchg
mov
cmp
in
sub
add
pop
fucomi
out
mov
popf
mov
sahf
into
push
outsb
test
faddl
and
xor
lcall
push
ja
mov
mov
cmpsl
add
in
adc
mov
push
scas
icebp
cmp
subl
lods
push
inc
shl
or
adc
mov
cmpsb
push
push
ljmp
aaa
jp
ds
fs
scas
rcr
cmpsb
stos
addr16
xchg
pop
test
cmpsb
mov
mov
lcall
xchg
pop
lea
pop
adc
je
rol
inc
jmp
pop
fidivrs
inc
stc
iret
mov
xchg
pop
jg
dec
add
cmp
sbb
nop
cmc
cwtl
or
mov
dec
movsb
sbbb
mov
mov
out
sub
in
outsb
lret
cmp
push
push
shlb
jne
cmp
xor
xchg
jno
in
lret
dec
inc
sbb
repz
xchg
scas
mov
mov
lcall
insb
mov
cmp
lds
iret
xor
adc
cld
push
call
fimuls
hlt
fbld
ja
xor
pushf
sarb
sar
shll
jmp
xor
sub
mov
pusha
xlat
dec
xchg
xorl
fcomp
pushaw
loope
outsb
dec
and
cmp
adc
bound
xchg
pop
insb
adc
out
rcl
jnp
and
cmc
add
fsub
dec
test
push
cli
scas
int
aam
insb
hlt
test
adcl
xor
add
jmp
leave
xor
add
lock
nop
in
mov
sub
ds
pop
dec
mov
aam
inc
xor
jge
dec
push
pop
xchg
and
ja
or
jg
cltd
mov
jmp
dec
enter
mov
movsl
push
mov
add
setns
mov
push
insb
popf
mov
popa
std
stc
insl
pop
pop
mov
push
push
mov
cltd
mov
xchg
dec
add
sub
imul
mov
jnp
out
cs
push
int
pop
loopne
xchg
push
xchg
orb
and
xor
shl
imul
inc
pop
in
inc
inc
es
notb
testl
pusha
push
outsb
jecxz
jle
xchg
xchg
dec
add
adcl
rol
cmpsb
sub
rclb
cmc
les
cmp
mov
sbb
scas
cmpl
test
out
pop
push
xor
fldcw
pop
xor
pushf
cs
pop
mov
sub
add
cmpsl
push
jg
out
dec
call
inc
jnp
xchg
xchg
or
dec
test
inc
call
inc
jl
xor
xchg
mov
jle
gs
mov
xor
arpl
jne
xor
xor
sbb
push
js
ror
xchg
fwait
dec
cmpsb
out
outsb
out
jb
inc
sbb
jl
xchg
xchg
add
fs
cmc
lods
mov
push
mov
lds
sbb
inc
xorb
fld
and
fsubrs
mov
sbb
dec
mov
and
std
mov
shr
out
loopne
and
dec
jge
cmp
icebp
push
into
or
pushf
cs
pop
imul
mov
pop
into
sbb
shlb
in
in
setns
daa
mov
mov
int3
pop
std
or
xchg
aad
in
push
rorl
mov
mov
shrb
mov
test
repz
jmp
pop
mov
mov
rcrb
in
mov
dec
sbb
pop
lcall
pop
dec
xchg
jns
test
jo
in
jle
cwtl
mov
mov
insb
inc
orl
insl
popf
sub
sbb
xchg
std
shrb
dec
cmp
xchg
adc
and
cmpsl
mov
xchg
push
cld
inc
ret
mov
xorb
mov
shrl
cld
xor
test
xchg
cmp
add
lret
lea
orb
aad
dec
cmp
push
test
dec
cwtl
stc
outsb
aas
dec
ss
call
fsubl
jle
fnstcw
rclb
mov
dec
or
int3
adcl
movsb
xchg
aam
jnp
fcmovbe
adc
int
sarl
sbb
int
or
adc
push
push
dec
or
sub
push
adc
sbb
mov
repz
imul
fldenv
xchg
frstor
pop
fs
xchg
shrl
fwait
scas
mov
xchg
jecxz
insl
ds
mov
mov
mov
flds
jb
pop
popa
fwait
stc
jmp
pop
xor
cwtl
lret
gs
ror
cmp
leave
and
out
btr
andl
mov
cmp
add
test
in
aas
add
ljmp
adc
jb
rol
jmp
mov
fwait
ss
sbb
jb
xchg
push
hlt
enter
jbe
xor
mov
mov
dec
stos
and
pop
push
hlt
dec
loopne
push
mov
pop
xchg
aaa
mov
mov
test
inc
mov
stos
mov
dec
ret
pop
jno
add
test
divb
idivb
xchg
mov
mov
sbb
xor
xchg
sub
inc
xchg
loope
sbb
mov
gs
adc
jbe
and
mov
fprem1
inc
into
out
mov
cltd
popl
shl
sub
or
cld
push
xchg
scas
out
mul
repz
loope
mov
cmp
push
neg
sbb
in
arpl
ret
push
push
sub
les
jno
pop
xchg
out
cmp
sub
lods
das
and
cmp
mov
movsb
aaa
jle
dec
nop
sbb
or
jae
dec
jns
mov
hlt
mov
aam
cltd
pop
pop
sbb
not
push
inc
sub
and
or
dec
add
push
lock
mov
xchg
out
or
and
pop
xlat
mov
daa
cmp
dec
loope
std
xchg
popf
xchg
stc
cmp
in
xchg
dec
adc
or
add
jl
jp
sahf
enter
add
rcl
popf
mov
dec
sbb
mov
mov
or
xchg
fwait
daa
jg
stos
jg
test
push
cmp
push
enter
dec
push
xor
sub
arpl
lea
push
add
and
mov
movsl
add
add
cmpsb
cmp
inc
cmp
mov
ds
test
jbe
jmp
decb
sub
ja
stc
ds
mov
lcall
aas
sub
adc
rcll
and
cmpsb
adc
xchg
or
sub
mov
mov
inc
dec
mov
push
xchg
cmp
push
fidivrs
iret
jae
inc
xlat
jb
mov
repnz
push
cmp
stos
jle
sahf
stc
push
aad
lds
sub
sub
shrl
call
cs
int
xchg
stc
notl
int3
pop
incb
add
adc
add
call
xchg
add
imul
in
mov
add
vmovaps
movsl
inc
aaa
test
and
insl
mov
scas
dec
push
sbb
dec
loope
mov
pushf
out
mov
test
inc
mov
inc
pop
in
xor
mov
in
rorl
inc
or
and
or
push
adc
push
pop
pop
fwait
std
adc
lret
mov
cwtl
gs
imulb
pop
sbb
sbb
ds
popf
push
outsl
xchg
adcl
imul
negl
mov
jbe
mov
std
call
cmp
out
test
sbb
out
add
mov
and
aam
mov
xor
inc
mov
lds
mov
add
cmc
jmp
dec
icebp
adc
or
lret
stos
das
pop
xchg
dec
mov
mov
cmp
dec
sbb
mov
iret
dec
insb
xchg
in
in
subl
inc
loope
xchg
stc
jno
lcall
push
xchg
mov
in
or
test
aad
xor
fldcw
cmp
xor
jno
frstor
mov
pop
scas
adc
jbe
cltd
out
adc
inc
insb
jg
or
xchg
push
mov
leave
push
in
test
pop
inc
outsb
movsb
push
adc
jnp
xor
inc
ljmp
testb
adc
cmp
les
or
pop
mov
inc
stc
bound
dec
bound
push
jge
and
adcb
mov
test
subb
inc
pop
mov
pop
mov
sti
dec
daa
insb
jo
cli
cmc
jno
incb
dec
out
mov
popa
int
mov
fwait
mov
cwtl
add
stos
and
and
push
loopne
xchg
fisttpll
xorb
ret
inc
shll
push
jmp
mov
out
inc
outsb
add
insl
mov
xchg
das
ja
xchg
shll
shl
mov
fwait
inc
mov
jno
xor
addr16
das
add
dec
jp
mov
or
cltd
jno
push
loop
insb
push
jle
in
cmpsl
mov
pushf
and
push
imul
lahf
push
jo
test
adc
inc
in
into
mov
imul
cmc
sub
push
xchg
and
mov
das
lods
rolb
sahf
rcrb
sub
bound
outsl
je
inc
dec
loope
or
inc
inc
sbb
jnp
mov
or
std
xor
loopne
xchg
bound
xchg
arpl
pushf
xchg
xor
nop
dec
mov
xchg
sbb
xchg
shll
clc
addr16
test
mov
push
adc
scas
lcall
imul
and
cmpsb
inc
xchg
sub
or
pop
adc
push
pop
sub
fs
iret
inc
push
out
dec
xor
scas
mov
jnp
mov
fmul
je
sub
shll
loop
fs
pop
push
jo
adc
and
sub
jno
test
mov
mov
push
sbb
ds
in
jl
push
adc
outsl
out
test
add
push
sub
inc
mov
lahf
add
stc
xchg
cld
lcall
add
xchg
mov
pop
fcoms
lock
fdivs
test
andb
pop
fs
push
mov
fwait
push
jge
and
mov
pushf
sbb
mov
fnstenv
inc
js
cmpsl
loop
add
es
xchg
and
dec
and
xchg
xor
jae
inc
mov
test
fnstcw
lcall
stos
push
sbb
inc
int3
mov
mov
popa
push
lcall
mov
fistpll
or
and
push
lds
cmp
nop
mov
pop
jg
push
xor
aad
lods
inc
mov
xchg
int
js
sti
inc
sahf
jp
mov
push
lods
xor
in
and
gs
fucomip
fwait
pop
push
shll
dec
jns
cmpsb
fistps
xor
mov
jge
cmp
loop
adc
sbb
movsl
movsb
cmp
sbb
into
scas
mov
repz
repnz
mov
or
repz
jle
repnz
nop
mov
roll
add
xchg
pop
push
mov
cmc
fiadds
js
lods
lock
add
jg
and
fcoml
sub
cmpsl
outsb
jg
dec
push
mov
jle
ljmp
push
jecxz
dec
dec
rol
sahf
xor
mov
ja,pt
mov
js
push
in
add
pop
dec
ja
mull
cmp
pop
mov
mov
sbb
cs
data16
sub
adc
cltd
xchg
dec
push
nop
sbb
adc
test
stos
lret
jo
jmp
hlt
sahf
out
pop
mov
lahf
mov
xchg
in
test
mov
jle
popa
xlat
ss
push
cli
filds
inc
xor
sbb
stos
sub
add
adc
mov
xchg
inc
cmp
stos
mov
iret
push
push
insl
gs
jnp
movsl
test
xchg
xchg
int
ja
fnstsw
mov
xor
aam
loopne
mov
pop
mov
push
cli
inc
popa
andl
loopne
push
mov
xchg
xor
mov
lea
add
flds
sbb
jge
adcl
and
jnp
andnps
cltd
cmp
mov
fdiv
je
addr16
sbb
lds
pop
pop
jns
jge
xchg
xor
mov
lea
mov
push
mov
xor
adc
adc
mov
xor
inc
fimull
dec
nop
test
shrb
xchg
and
mov
push
movsl
js
and
pop
sbb
test
inc
push
lods
mov
jg
push
in
daa
les
mov
jg
hlt
jne
loope
add
cmpsl
icebp
inc
mov
xchg
testb
aaa
popf
or
xchg
sbb
sub
push
cmpsb
push
jmp
jl
cli
pop
jge
je
out
loop
fcmovnb
xchg
xor
push
mov
mov
mov
sbb
shr
push
cmc
loop,pt
mov
sub
call
fadd
das
mov
stos
mov
repz
iret
cltd
mov
notl
sahf
sahf
test
dec
push
icebp
pop
jl
or
or
xor
clc
filds
aas
stos
mov
lcall
test
xlat
aas
test
inc
ret
mov
repnz
roll
jecxz
ss
mov
cld
pop
sub
sub
fs
mov
dec
roll
and
insl
adc
mov
jb
xchg
scas
outsl
ljmp
loope
xchg
add
sub
jg
cmpl
test
push
rcr
inc
loope
add
push
call
cwtl
fisttpll
stc
mov
call
es
jg
add
add
sub
xor
dec
adc
cwtl
push
fistpll
mov
fsubrs
jne
aas
xor
xor
aad
aad
pop
cwtl
lods
outsl
popf
push
mov
xchg
push
clc
mov
in
fcoml
sbb
and
repz
ret
testb
xor
add
mul
call
or
pop
leave
mov
loope
xchg
out
sti
ja
test
mov
cmpsl
iret
std
sub
out
jmp
f2xm1
out
pop
cld
dec
push
sbb
shl
or
bound
push
nop
xchg
or
insl
pop
pop
dec
fdivl
push
pop
inc
cltd
jne
mov
mov
inc
xchg
lret
mov
pop
gs
and
lea
aad
pop
inc
mov
insl
xchg
scas
outsb
fucomip
or
daa
jle
hlt
outsb
mov
fidivs
pop
dec
in
mov
mov
sbb
lret
and
bound
pop
and
stc
push
inc
inc
enter
cltd
and
sbb
lret
and
mov
xor
pop
imul
or
and
cmp
arpl
cwtl
addl
ljmp
sbb
sbb
jne
std
rclb
ss
ja
xor
sbb
push
jno
cmp
imul
inc
stos
mov
push
adc
out
cmc
push
sahf
fwait
mov
hlt
pop
and
fstps
sti
ss
fdivl
jmp
outsb
out
arpl
dec
add
in
jp
fistps
pop
lcall
jge
fwait
mov
rol
pop
xchg
push
std
add
enter
inc
in
mov
call
jle
mov
jns
or
addb
enter
sbb
sub
mov
push
pusha
mov
popf
int
mov
sub
xor
icebp
inc
rorb
loopne
or
mov
out
mov
imul
xchg
mov
push
or
repz
mov
aad
loope
jg
inc
push
sti
and
in
mov
jns
stc
lret
lret
lea
push
cmp
daa
dec
pusha
sub
sbbl
cmp
push
fadd
imul
jne
cld
cmpsl
mov
cmp
aaa
pop
scas
addr16
popf
xchg
sbb
mov
push
xchg
sbb
in
loop
cmp
addr16
xchg
out
aad
loope
sarl
inc
add
add
in
or
sbb
aad
pop
mov
xchg
imul
ss
jbe
adc
imul
icebp
stc
addb
push
insl
outsb
ss
ret
call
mov
adc
daa
inc
cld
dec
mov
mov
fimull
rcr
lret
mov
jmp
ds
adc
xchg
mov
cmp
cmp
push
pop
ret
sub
out
xor
push
in
push
push
sarb
call
mov
shl
sub
jo
push
jl
push
adc
sub
pop
sarb
sub
cmc
push
outsb
movb
mov
inc
dec
sbb
sub
adc
sbb
sbb
cmp
aam
mov
adc
dec
inc
insb
scas
jg
in
std
scas
rsm
ss
lods
aad
cli
pusha
repnz
cmpsl
and
dec
enter
cld
sbb
lds
je
mov
xor
xchg
aaa
ss
push
lcall
mov
jge
sbb
jp
push
jne
lahf
lods
frstor
mov
enter
push
pushf
and
mov
adc
mov
imull
lods
nop
stos
das
jbe
psadbw
loopne
outsl
jg
xor
nop
xchg
rolb
dec
pushl
and
add
dec
cld
aam
mov
test
cwtl
xor
jle
xchg
or
jg
std
pop
loop
cs
repnz
inc
lods
test
leave
js
movsb
pop
sti
faddl
add
ret
test
push
xchg
outsl
mov
pop
in
leave
mov
cmp
pusha
mov
mov
add
int
and
push
cmp
mov
cltd
sub
pusha
dec
mov
xchg
cmc
out
adc
fs
jecxz
xchg
push
push
cli
imul
inc
mov
pop
adc
movb
mov
mov
dec
xchg
outsb
or
push
movsb
insb
mov
mov
cmpb
push
into
mov
repnz
outsl
andb
loope
test
push
test
jo
mov
pop
push
inc
fldl
inc
inc
addr16
mov
cltd
test
jmp
lds
outsl
sahf
pop
stos
stos
pop
loopne
icebp
cwtl
mov
and
pop
lcall
push
adc
fisttpl
push
xchg
movq
test
mov
jns
jle
int
lret
jbe
mov
add
rcll
pop
cld
cmpsb
je
push
sub
mov
push
mov
xchg
out
lret
cmp
push
mov
dec
adc
out
jbe
and
push
stos
mov
mov
iret
add
sbb
xlat
jecxz
pop
jp
mov
fisubs
xchg
add
iret
pop
adc
stos
out
xchg
test
popa
or
enter
pop
sub
and
jle
test
sbb
or
shl
enter
jne
or
int3
mov
xchg
adc
mov
cwtl
mov
scas
mov
or
inc
push
pusha
mov
jmp
jecxz
pop
add
je
data16
mov
xor
cs
xchg
into
hlt
cmp
mov
mov
adc
xor
pushf
lahf
inc
mov
push
inc
stc
and
fstpt
dec
push
out
test
sbb
cli
bswap
cmc
mov
icebp
mov
stos
lret
jmp
clc
ficompl
in
lds
mov
fs
dec
int3
jp
pop
inc
dec
int
movsb
aaa
scas
int
mov
sbb
aas
pop
push
sub
ret
xchg
push
mov
sti
mov
and
lahf
aaa
popf
xlat
push
in
lret
jno
pop
push
inc
lods
insb
xchg
jp
aam
pushl
cltd
mov
lods
scas
cmpsl
fists
xorl
lods
lock
sub
aas
and
ss
dec
jl
fisubs
adc
loopne
adc
and
and
gs
or
jae
jbe
cmp
push
shlb
cmp
cmc
push
lea
jmp
mov
and
les
cltd
pop
insb
jle
or
inc
sbb
jae
xor
jmp
cmp
sub
xor
out
outsb
push
mov
adc
add
mov
lea
add
std
pop
lods
pop
sti
lods
call
cmc
cmp
mov
call
push
stos
clc
xchg
ss
xor
dec
xlat
fsubrs
leave
sahf
ljmp
nop
xor
ljmp
pop
or
push
jo
jg
inc
addr16
cmp
jno
addl
adc
rcr
mov
or
lcall
jno
cltd
xchg
sub
mov
pop
imul
add
out
sub
fidivs
jg
faddl
inc
insb
cmp
in
aaa
pop
xor
imul
rorl
fimull
mov
movsb
mov
mov
mov
pop
jmp
fstps
xor
jae
mov
sahf
push
shr
mov
pop
in
add
iret
aas
rcr
pop
sar
sbb
sarl
pop
xor
pop
int3
cmp
lock
mov
mov
and
int3
aaa
or
stc
lods
sahf
loop
lret
adc
daa
test
add
imul
outsl
jge
icebp
push
dec
daa
in
xchg
push
daa
jecxz
pop
ljmp
fcoml
lret
and
lcall
mov
cmp
and
dec
adc
leave
ss
test
arpl
mov
scas
sbb
cmpsl
shll
pop
sbb
sub
lret
std
push
inc
lock
movsb
pop
and
mov
sbb
xchg
xor
push
push
sbb
or
inc
aad
pop
cmc
mov
sub
jecxz
mov
cwtl
cli
test
cwtl
data16
addr16
in
pop
jns
gs
loopne
mov
mov
xchg
sahf
push
and
jno
cmpb
inc
cmp
adc
jns
inc
inc
addb
or
popa
and
popa
dec
jno
push
jae
sbb
mov
cmp
jno
leave
sub
and
orb
jp
insb
fdivl
int3
cmpsl
js
pop
sub
lret
imul
data16
ret
inc
sbb
cmp
insb
in
sub
lods
lock
cmp
xchg
xchg
jnp
loope
leave
sahf
xchg
cmp
or
xor
rolb
xlat
mov
adc
mov
fdivl
cmp
push
sbb
push
lret
arpl
iret
fwait
stc
dec
negl
mov
sbb
jae
mov
bound
loop
popa
pushf
je
push
int
jae
mov
addr16
mov
and
popf
imul
xchg
mov
push
jle
mov
and
scas
orl
ficomps
movsl
outsb
pop
cs
cs
ret
cmp
lds
inc
sbb
jae
inc
cmp
sub
sbb
push
dec
in
mov
out
mov
cltd
in
in
mov
or
xchg
xchg
test
pop
sahf
data16
dec
add
adc
dec
inc
imul
pushf
addl
jae
xchg
addl
sub
daa
dec
dec
adc
adc
push
stc
cmp
jae
jns
xchg
hlt
mov
and
adcl
push
cmp
in
pop
jp
jp
cwtl
pop
adc
pop
rcll
mov
cwtl
sub
lock
inc
dec
cld
xchg
cmc
push
inc
push
cmp
mov
jno
mov
jnp
movsl
jmp
cli
push
cmpsb
arpl
addr16
mov
and
incl
cs
repz
lahf
ljmp
outsl
and
sti
stos
in
mov
sub
mov
cli
test
scas
cwtl
lea
inc
cmp
mov
ret
out
pop
fiaddl
mov
pop
repz
test
or
push
add
aaa
lret
adc
sbb
jge
and
mov
mov
inc
fisttpll
jmp
xchg
roll
leave
cmp
cmpsb
sub
adc
dec
sub
in
mov
jge
stos
mov
lea
imul
lcall
pop
cmc
iret
mov
cmp
push
mov
pusha
aas
xchg
xor
or
or
das
jl
jns
xor
xor
mov
inc
lea
icebp
add
dec
jnp
bswap
popa
cmc
imul
fcomp
fstl
add
test
mov
lds
loopne
es
cmp
movsb
andb
mov
push
cmp
xorb
fs
sub
inc
je
outsb
xor
sub
ret
rcl
cld
or
mov
test
out
adc
cmpsb
stos
cmc
xchg
gs
out
mov
and
popl
push
aam
push
ljmp
jno
mov
loopne
aaa
mov
mov
inc
stc
scas
test
mov
push
bound
xlat
lret
push
in
imul
mov
adc
mov
cld
mov
in
dec
mov
stos
fcoms
xchg
gs
jns
sti
shl
in
nop
jl
or
pop
push
add
sarb
dec
push
xor
xor
incb
push
mov
nop
ljmp
gs
orl
pop
pusha
outsl
adc
jecxz
cmpsl
adc
cltd
mov
fst
mov
bnd
sub
test
cmpsb
xchg
inc
pop
cmp
push
daa
stos
nop
dec
in
aam
test
sbb
insl
jg
movsb
rorl
add
out
or
test
jmp
das
mov
mov
adc
xchg
inc
inc
jnp
cmpsl
mov
test
fcoml
orl
loop
cwtl
cwtl
mov
insl
loope
push
movsl
repnz
leave
cs
jbe
mov
push
lods
test
add
mov
jo
std
in
push
es
mov
repz
icebp
pop
lods
fsubrl
inc
cmpsb
push
fdivrs
or
add
ljmp
xor
or
std
outsb
into
inc
pop
jo
push
imulb
les
rcrb
mov
pop
cmpsb
jno
or
fs
imul
dec
movsb
aaa
adc
or
sbb
inc
stos
adc
sub
dec
movsl
cltd
out
adc
sub
enter
push
dec
fldcw
insb
mov
xor
mov
lret
xchg
add
sub
mull
inc
ja
stos
pop
ret
jecxz
xor
xor
repnz
psrld
mov
sub
gs
mov
dec
xchg
rcll
mov
push
ss
sbb
mov
dec
jno
push
inc
dec
adc
std
or
dec
lret
add
jo
mov
insb
xchg
int
sub
pop
fwait
outsl
test
test
dec
imul
ret
cmp
rcll
xchg
sbb
mov
and
add
sub
sbb
inc
mov
out
mov
jle
xchg
and
test
scas
mov
pop
sbb
cmp
xor
add
dec
jl
sbb
cli
inc
jecxz
lods
add
jle
jecxz
rcl
adc
mov
inc
loope
iret
addb
inc
mov
or
mov
shl
push
cmp
jno
jns
pop
flds
lahf
pop
or
mov
cmp
inc
call
mov
scas
sbb
repnz
mov
jecxz
jns
pop
jno
push
adc
mov
ret
aas
js
and
out
add
stc
fildl
xlat
addb
xchg
out
jns
scas
sub
push
push
xchg
cmp
ljmp
and
xor
push
jmp
cmpsl
js,pn
rcrb
daa
jno
mov
popa
push
test
mov
ret
enter
xor
cltd
xorb
mov
test
fldenv
push
pusha
stos
xchg
or
xchg
pusha
int
sub
mov
cmp
lret
jo
pusha
int
jl
sub
int3
dec
push
inc
and
stos
sbb
cmp
adc
jl
or
iret
popf
push
out
hlt
test
add
sub
and
xchg
jl
xor
lods
or
cmp
out
jbe
ss
lcall
sub
lods
sbb
pop
into
sub
xor
xchg
mov
sbb
leave
adc
pop
ret
daa
sahf
lea
and
pushf
xchg
hlt
in
lea
jle
lea
mov
fstps
out
bound
mov
movl
in
add
sbb
mov
scas
pop
push
mov
loopne
cmp
icebp
mov
inc
dec
or
xchg
xchg
xchg
loope
js
push
xchg
into
inc
xchg
sahf
sahf
dec
sub
mov
inc
icebp
inc
and
neg
or
lock
xor
imul
inc
xor
in
jae
in
shll
movsb
testl
pop
inc
ja
and
mov
lds
je
negb
out
push
sub
mov
mov
loop
mov
mov
xor
ljmp
mov
mov
outsb
aad
dec
mov
xor
jne
mov
stos
adc
int3
mov
test
repz
jge
sub
mov
cmpsl
or
cmp
lods
mov
fucomp
push
xor
push
cmp
lret
out
pop
xor
mov
leave
pop
xor
pop
mov
stos
int
pop
xor
jecxz
hlt
xchg
mov
xlat
mov
jbe
ficoml
mov
pop
push
jge
xchg
sub
push
popa
jne
cs
mov
adc
pop
jge
clc
sub
int3
repz
icebp
push
adc
push
test
sahf
sbb
xchg
jb
fsubrl
push
and
inc
add
adc
adc
out
ret
les
add
and
xor
mov
outsl
add
and
mov
hlt
push
mov
in
xchg
push
push
xlat
push
lds
pop
pop
inc
ss
sbb
mov
adc
rorl
js
fldcw
mov
add
mov
out
add
push
jmp
and
or
movsb
inc
jne
shll
into
mov
and
and
cli
and
in
mov
jge
pop
dec
xchg
mov
jb
lcall
mov
sbb
xchg
mov
in
push
stc
fld
roll
test
fcoml
mov
scas
stc
mov
sub
out
mov
pop
push
faddl
fs
add
dec
jg
mov
mov
pop
sbb
lret
pop
push
inc
sbb
jae
and
add
sbb
insl
lock
out
pusha
sub
mov
xor
mov
xchg
dec
aad
xor
test
cmp
mov
imul
inc
out
scas
cmp
cwtl
mov
push
lret
fisubrl
cmpsb
lds
jno
lahf
add
sub
cld
ss
cs
sti
jmp
mov
push
movsl
lea
and
and
orb
popa
test
rol
mov
ret
outsl
mov
inc
jmp
dec
cmp
mov
cmp
stos
adc
adc
mov
nop
push
mov
push
add
and
push
add
cmp
icebp
or
arpl
imul
dec
popa
jb
push
popf
bnd
push
jg
ss
or
fstps
fs
dec
xor
cmpsb
xchg
push
mov
mulb
add
lods
inc
pop
add
out
loopne
iret
pop
repnz
push
ret
add
mov
rorl
addr16
pop
push
loop
cmp
lds
and
xchg
lret
aaa
fnstcw
sbb
jns
inc
jge
cs
inc
sub
enter
rclb
decl
rcr
push
insb
lea
sub
es
cwtl
mov
aad
movsl
bound
pop
cmc
and
scas
ds
cwtl
ret
sahf
mov
lret
inc
out
bound
pushf
out
arpl
pop
xchg
or
inc
mov
push
lds
or
out
pusha
out
pop
pop
sti
jmp
lcall
lock
cmp
cmp
jl
imul
mov
aad
outsb
lret
jecxz
out
or
rol
sti
aam
shrb
push
push
push
jno
rorb
cs
frstor
or
rcr
inc
test
and
xchg
lock
mov
mov
jns
pop
xchg
mov
test
sbb
and
icebp
das
sub
je
fndisi(8087
fwait
fwait
jnp
mov
cld
xor
push
test
pop
loope
ss
andb
stos
cltd
mov
js
leave
push
in
cwtl
xor
jecxz
mov
addr16
xchg
iret
movsl
pop
lock
mov
aaa
iret
adc
push
push
loop
decl
js
or
mov
sbb
and
into
pop
or
sahf
in
in
dec
inc
cmp
xchg
mov
aam
in
into
je
cmp
in
jae
fcmovne
cwtl
pop
cmpsb
sub
inc
xorb
push
lods
fcomps
pop
mov
stos
in
sub
jb
int
sub
dec
shrb
in
stos
mov
xor
repnz
xchg
adc
sbb
inc
ds
cmp
hlt
ljmp
lcall
not
adc
pop
adc
shlb
mull
mov
pop
mov
sub
ficomps
inc
inc
decb
nop
mov
ret
jae
xorb
int3
push
fnstcw
pop
mulb
shrl
sets
pop
push
mov
call
inc
movsl
addr16
mov
pop
sbb
mov
push
or
inc
pop
mov
roll
inc
out
inc
aam
bound
or
shr
enter
nop
jecxz
cld
sbb
pop
dec
loop
mov
lds
xchg
frstor
lea
dec
fs
stc
dec
in
add
in
fdivrl
jl
xor
pushf
outsl
dec
xchg
jo
mov
fldcw
je
inc
daa
subb
adc
sub
jmp
sub
das
and
bound
and
xchg
xchg
imull
mov
out
cli
ds
jbe
push
mov
jo
test
call
adc
clc
aam
mov
scas
cmp
dec
fcompl
pop
bound
mov
cmpsl
jmp
adc
js
xor
cwtl
mov
cwtl
cmpsb
sbb
pop
mov
icebp
outsl
push
jmp
dec
rcrl
pop
gs
push
adc
jle
aad
cs
push
faddl
lds
mov
sbb
ds
test
test
dec
or
repz
xchg
mov
mov
mov
dec
ds
mov
divl
mov
mov
iret
shrb
lahf
repz
into
fisttpll
xchg
adc
jle
cli
mov
xchg
jle
stc
add
cmpsb
mov
mov
cmp
out
int
outsl
inc
cld
push
xor
or
mov
xor
aaa
mov
pop
outsb
sbb
xchg
pop
or
mov
adc
sub
push
mov
push
das
stc
sti
and
int
add
jns
enter
push
rclb
outsl
popf
mov
test
adc
outsl
pusha
inc
in
mov
adc
push
inc
popa
rcrb
or
shll
or
lret
repz
pop
push
pop
leave
sahf
sbb
fstl
push
stc
pop
push
pop
or
lret
sbb
mov
inc
sahf
xor
add
out
adc
ja
add
adc
mov
cld
lds
mov
jp
icebp
xchg
xchg
push
shlb
cmp
imul
scas
cld
inc
add
decb
out
ret
fs
out
mov
int3
or
js
xor
xor
comiss
and
pop
imul
jl
sub
fisttpll
aad
pop
jge
out
ret
imul
inc
cmpsb
push
fsub
fstps
jecxz
leave
bound
adc
lods
imul
jae
nop
jp
loope
sbb
int3
jno
icebp
hlt
push
xor
cltd
mov
xchg
adc
stos
dec
fsts
add
ret
int3
sub
aas
cmp
filds
cwtl
cmp
pop
pop
inc
outsb
ljmp
ret
inc
and
andb
jbe
js
sti
push
cli
jp
mov
push
pushf
in
sub
sub
push
fiaddl
jmp
push
xor
mov
push
xchg
pop
ret
roll
jge
jb
dec
mov
or
loop
cs
faddl
dec
lock
mov
ljmp
fsts
ret
xchg
add
xchg
inc
and
adc
fs
sub
icebp
push
sbb
sbb
sti
add
out
cmc
xchg
push
fwait
fwait
adc
stc
in
mov
xchg
mov
and
aas
test
clc
cltd
stos
aad
hlt
push
xor
out
jns
aad
jecxz
daa
cmpb
push
dec
or
xchg
adc
mov
cmp
cld
adc
push
push
js
lock
cmp
lahf
cmp
sar
mov
fildll
push
test
icebp
aad
mov
jo
and
mov
mov
inc
out
out
ljmp
push
sub
mov
xchg
movsb
xchg
pop
sub
mov
stc
repnz
out
xchg
pop
jecxz
imul
mov
sub
aaa
not
cmp
dec
js
jnp
jg
cltd
ja
loop
jge
das
sti
push
out
mov
lds
in
pop
shlb
xor
xor
in
dec
cmp
fcomps
pop
jge
sbb
mov
pushf
cmpsb
fisubs
je
cli
lcall
cltd
xor
test
inc
fwait
inc
dec
push
dec
popf
adcb
cmpsb
daa
fimuls
lret
out
push
movsl
xchg
cmpsl
orb
mov
loope
mov
je
lea
je
imul
push
mov
ret
xor
jle
fwait
lea
mov
jge
nop
outsb
pop
xor
jae
into
pop
insl
mov
aad
adc
mov
loop
mov
pop
cmp
lcall
mov
je
cld
push
mov
mov
and
rcr
mov
pop
iret
cwtl
pop
push
or
or
push
aaa
jae
cmp
xchg
arpl
rorl
or
out
dec
in
stos
mov
dec
rolb
movsl
or
test
sahf
mov
lock
mov
aas
cmp
xchg
mov
xor
sti
add
lods
test
enter
push
enter
push
cmc
dec
push
dec
jl
stos
cmp
daa
fisttps
mov
jnp
aam
mov
pop
dec
xlat
inc
bound
cltd
pop
jo
icebp
jp
mov
int
and
cltd
sub
imul
pushl
xchg
cli
rcrl
cmp
pushf
xchg
and
out
mov
cmp
fsts
push
inc
scas
mov
loopne
outsl
mov
fimuls
add
inc
lods
or
push
idiv
push
sub
out
mov
adc
outsl
in
pop
xchg
daa
loopne
out
in
shl
movsb
fsubrl
push
sarl
dec
mov
mov
xchg
inc
sub
mov
xchg
aad
fucomp
xor
loop
push
push
lds
dec
cltd
in
jo
outsb
jne
inc
out
sbb
ja
pop
push
flds
fwait
stos
insl
mov
cmp
cmp
scas
roll
mov
test
divb
test
cmp
cmp
fscale
imul
sub
jle
lret
fwait
mov
sti
pop
lods
aas
test
fs
sub
movsl
lahf
clc
sub
loop
aas
jb
inc
ja
pushf
dec
loopne
or
es
ret
push
mov
jo
pop
lock
in
not
lods
pop
xchg
mov
pop
xor
outsb
pop
push
sub
push
pushf
lock
imul
push
adc
sub
push
repnz
add
insl
jne
adc
xor
fisubl
mov
mov
pop
push
inc
ror
incl
inc
cmpb
iret
xor
lret
loop
add
loopne
xchg
lock
subb
ljmp
push
jbe
xchg
sub
sub
sarl
pop
and
push
addr16
mov
movsb
mov
ds
dec
mov
mov
movsl
mov
stos
adc
dec
mov
mov
dec
and
pop
movl
xchg
mov
mov
pushf
pop
fcmovnb
xchg
les
inc
or
outsb
mov
pop
das
or
call
test
push
inc
xor
xor
cmp
cmpsb
dec
cli
sbb
bound
icebp
test
mov
andl
mov
push
into
add
scas
xor
push
inc
or
add
out
jo
xor
or
and
pushf
push
mov
fnop
sub
ds
xor
popf
or
ret
dec
push
xchg
push
test
inc
or
or
sub
adc
pop
out
jp
mov
inc
push
idivl
jp
add
test
call
hlt
insl
and
jecxz,pn
jb
cli
out
add
rcrl
bound
hlt
adc
lahf
push
sti
pop
xchg
push
movl
add
push
mov
or
mov
je
push
js
push
push
sub
jno
addl
or
push
loopne
hlt
push
pusha
shl
and
lock
pusha
call
sbb
cwtl
inc
xor
adc
push
add
flds
jo
enter
icebp
sbb
mov
out
aaa
pop
jmp
mov
out
mov
lret
and
lods
xchg
testb
xor
adc
stos
into
jp
pop
orl
test
jg
test
adc
cmp
pop
add
sub
cmc
aam
jnp
inc
sbb
inc
xor
int
call
fsubrs
mov
notl
out
add
mov
add
pop
mull
out
aam
mov
fcomi
adc
sbb
inc
pop
stos
enter
shll
or
mov
pop
lods
out
push
nop
stc
mov
aam
imul
fists
addb
and
xor
cmpsb
int
push
std
jae
jmp
mov
jno
sub
aas
mov
mov
leave
aam
mov
outsl
std
mov
sbb
clc
inc
adc
mov
lds
adc
stos
or
iret
es
jp
mov
push
mov
mov
jp
fdiv
adcl
xor
pop
xchg
xor
lahf
inc
inc
xor
ret
movl
fisubl
lret
mov
testb
mov
test
lahf
scas
insl
adc
cmp
mov
inc
inc
repz
out
insl
out
mov
jp
xor
pop
mov
pop
cmp
test
fiaddl
xor
lds
imul
adc
add
sbbb
icebp
add
cmp
mov
pop
mov
leave
or
fsubrs
mov
outsb
pop
jns
jp
adc
cmp
pop
jne
and
push
push
xchg
mov
add
jno
fldcw
adc
adc
xchg
nop
shrb
lods
daa
in
jb
fisttps
lahf
fimull
negb
inc
mov
mov
push
jg
jbe
test
mov
and
push
mov
mov
es
fstl
inc
cmp
test
mov
cmp
dec
test
loope
cmc
test
sbb
addr16
adc
std
outsl
cmpsl
or
or
hlt
lods
xlat
or
jl
imul
out
jbe
in
outsl
in
pusha
mov
inc
clc
repnz
mov
mov
test
xchg
jns
cmp
add
rorb
jnp
sub
lret
fadds
setnp
repnz
addr16
mov
sub
lods
mov
mov
or
sub
push
mov
jge
cld
push
fistpll
cmp
in
xchg
sbb
adc
sbb
daa
out
pop
into
jbe
subb
ret
push
pusha
pop
fstps
mov
dec
cmc
int
insl
inc
jge
popf
lods
add
lock
clc
mov
pop
outsb
and
fdiv
repz
sub
inc
insb
xlat
rcrb
push
mov
sbb
pop
ss
cld
add
cmp
movsl
les
std
and
aaa
fdivrl
out
es
pop
cmpsl
lods
jb
sub
mov
gs
push
jl
mov
adc
add
push
pop
aad
pop
into
jle
jp
mov
xlat
movsb
mov
aam
test
dec
addb
pop
repz
test
es
sbb
test
or
sub
dec
sbb
in
xchg
dec
pop
incl
test
xor
xor
sbb
mov
ret
cmp
xchg
call
inc
xchg
jmp
pop
or
sub
lret
lods
ja
das
xchg
sahf
mov
les
cmpsb
mov
mov
idivb
std
or
jmp
cmpsl
and
pop
push
movsl
pop
lea
dec
test
xchg
pop
sbb
lahf
fstpl
pop
mov
jge
xchg
nop
stos
sbb
js
dec
sbb
icebp
or
mov
cli
push
add
push
lea
fs
jg
dec
dec
pop
out
out
test
aam
push
push
dec
mov
push
cmp
in
inc
cmp
mov
or
cmpl
pushf
mov
das
inc
insl
test
sbb
push
fcom
loop
popa
es
sti
rcl
jo
insl
xor
jne
xchg
sub
and
dec
mov
mov
paddw
cmpsl
adc
mov
inc
out
xchg
scas
jp
cwtl
lret
xor
in
adc
popf
pop
mov
lods
sbb
fldenv
mov
inc
xor
popa
rcr
sub
and
xchg
cmp
pop
dec
mov
popf
mov
iret
aaa
push
stos
aad
movsl
cli
aas
and
lods
lods
in
add
fisttpll
leave
dec
sub
lods
test
test
aam
pop
daa
movsb
lods
cmpsb
mov
inc
xchg
scas
xor
cmp
mov
lock
movl
rolb
push
incl
adc
xchg
cmp
mov
fsubs
mov
xchg
xor
loop
cmpsb
fmuls
sub
fistpl
iret
inc
add
test
fstl
and
push
push
adc
cli
mov
ret
stos
aam
xor
ss
test
stc
mov
imul
std
and
fwait
insb
or
pop
xchg
mov
enter
pop
add
or
xchg
aad
lea
outsl
bound
jle
adc
push
dec
mov
push
xor
pop
cmpsb
fmul
mov
fildll
push
inc
xor
xor
mov
mov
adc
pop
test
jne
roll
inc
test
insl
dec
testb
jns
addr16
jnp
add
xchg
into
mov
test
cmc
push
aaa
mov
mov
xchg
xchg
mov
mov
rcrl
in
xor
ljmp
fnsave
mov
sbb
std
js
pop
cmpsl
sbb
pop
lea
mov
push
scas
mov
fdivr
flds
pop
push
sbb
and
adc
mov
scas
xor
ljmp
cmp
mov
lods
inc
arpl
jp
push
neg
lcall
jbe
mov
and
xchg
fdivr
push
adc
sub
das
arpl
cwtl
sahf
pop
and
mov
imul
jle
cmpl
in
mov
rorl
lahf
push
xchg
lods
daa
shl
aam
cli
jbe
cmp
cmpsl
cli
inc
sbb
lea
bnd
popf
mov
lods
popl
push
pop
insb
loopne
out
mov
jl
dec
or
mov
and
pop
aam
push
mov
lods
xor
das
test
loope
pop
mov
fstl
jo
add
imull
inc
lahf
pop
stos
cmp
mov
mov
lods
adc
imul
pop
repnz
dec
dec
pop
in
outsl
jp
or
sub
mov
std
inc
pushf
int
mov
or
adc
fcomi
fbstp
sbb
inc
dec
shr
imul
pop
jno
int3
ja
pop
xor
cwtl
scas
iret
loopne
push
mov
outsl
push
sahf
sbb
mov
mov
int
mov
or
cmp
and
imul
jg
lret
adc
sub
ret
or
into
xchg
push
add
sub
insl
mov
mov
fdivrs
mov
rcrb
fstpt
xchg
xchg
loope
push
mov
xchg
stos
fiaddl
jb
jecxz
push
mov
sbb
test
insl
jecxz
fisubl
sbb
push
push
inc
dec
stc
outsb
int
push
int
aad
clc
pop
cmp
inc
xchg
mov
xchg
aaa
sahf
in
xor
dec
push
fcompl
out
les
fistpl
in
sub
insb
enter
pop
jb
mov
call
cmp
pop
stos
and
mov
dec
push
es
andl
aad
stos
mov
call
mov
sub
fisubl
clc
out
xor
xchg
inc
iret
or
insl
scas
sub
stos
adc
cmc
stc
decl
adc
test
cmp
pop
dec
inc
into
js
inc
xor
test
push
pop
aas
jnp
add
leave
gs
int
and
and
dec
inc
rolb
inc
jns
mov
mov
sub
xor
inc
pop
shl
and
jae
insb
popa
aaa
mov
jg
mov
hlt
nop
stc
pop
idivl
and
sbb
sub
xchg
xor
xor
sub
mov
jo
or
jnp
jg
movsl
mov
and
pop
test
out
inc
inc
pop
sbb
mov
push
test
dec
inc
outsl
jae
lahf
nop
sbb
out
lret
or
or
pop
add
adcl
or
outsb
inc
jbe
lea
jg
sahf
dec
pushf
jl
imul
jne
jne
movsb
inc
cmpsb
pop
les
sbb
jne
adc
ljmp
lods
gs
in
insl
cwtl
pushf
movsb
es
clc
loop
mov
jecxz
mov
mov
into
cwtl
cmp
scas
jns
xchg
mov
jb
sbb
pop
mov
cwtl
inc
das
or
pop
outsb
inc
mov
lcall
bound
cltd
popf
pop
idivb
mov
stos
inc
pop
xor
pop
clc
popf
dec
and
loope
xlat
jo
fbld
cmp
jb
mov
mov
sbb
mov
push
or
xchg
mov
pop
out
mov
xchg
adc
mov
push
mov
cmp
adc
push
mov
push
mov
addr16
xchg
decb
cmp
or
or
add
outsb
dec
add
jecxz
lods
lcall
inc
mov
mov
ja
mov
jae
lea
jno
cmp
mov
addr16
jmp
jecxz
ret
sub
popf
pop
daa
sub
push
mov
mov
daa
js
pop
cmp
in
pop
loope
jmp
shl
xor
inc
inc
cmpsl
gs
inc
sar
mov
pop
inc
inc
xor
cli
nop
rol
shlb
adc
mov
mov
jle
or
xchg
xchg
addr16
je
mull
push
jle
lret
xchg
popf
sub
std
sub
jae
jae
lds
cmp
jmp
cmp
imul
xchg
jg
sbb
fisubs
lds
xchg
fwait
push
shll
inc
js
jnp
cmp
jecxz,pn
pop
leave
fwait
and
rcrl
out
outsb
lret
jae
scas
stos
inc
add
pop
jne
and
fisubrl
movsb
cs
cmp
orl
lods
arpl
sub
call
and
data16
mov
cwtl
pop
arpl
push
cmpsl
mov
adc
dec
arpl
push
mov
mulb
dec
and
fucomp
inc
movsb
jmp
sbb
lcall
mov
stc
xchg
fstpl
jmp
scas
jne
sbb
es
fmull
fimull
movsl
mov
mov
std
add
jno
mov
push
dec
addr16
mov
outsl
in
imul
or
pop
jae
or
subl
scas
icebp
and
pop
ds
cmpsl
mov
and
jne
cmc
mov
xchg
and
sub
mov
and
mov
int3
jae
das
cmpb
in
test
call
movsb
out
xchg
in
adc
mov
ret
rorb
xchg
insb
mov
adc
and
mov
int
sub
or
mov
insb
add
pop
lea
inc
lock
cmp
mov
clc
test
xorl
arpl
lret
negb
mov
ret
pop
cs
inc
ffree
fisttps
jl
lcall
fsts
inc
cmp
idivl
inc
movzwl
fnsave
rorl
fadds
cmp
aad
add
xor
cli
adc
jmp
jle
adc
mov
lret
hlt
adc
in
stc
adc
pop
test
xchg
push
pop
xchg
pop
fadds
and
add
pop
push
dec
fiaddl
clc
push
pop
stos
test
mov
clc
mov
inc
gs
xor
popf
roll
testb
xchg
pusha
sbb
in
lods
fildl
jnp
mov
nop
out
mov
lea
push
fistl
xchg
mov
dec
dec
loope
sbb
in
lods
cmpsb
push
sub
jnp
inc
pop
push
dec
push
jae,pn
in
clc
dec
jb
pop
add
push
xchg
mov
jmp
and
jnp
arpl
test
sub
ds
sbb
or
sbb
or
lcall
sahf
call
mov
pop
test
adc
scas
data16
mov
loop
movsb
cld
mov
pushl
and
mov
xor
les
sub
je
pop
sub
test
dec
divl
jle
out
xchg
pop
sub
cmp
dec
mov
push
mov
add
add
sub
pusha
and
jg
adc
and
int3
jae
cltd
inc
mov
icebp
popf
inc
and
cmp
jbe
fldl2t
stos
das
push
sub
push
adcl
adc
cmpsb
jb
mov
repz
mov
adc
filds
cmpsb
adc
mov
aad
testb
ret
push
pop
test
addr16
outsl
dec
cmc
in
dec
lret
mov
pop
ret
aad
lea
dec
andnps
fs
sub
xchg
popf
or
mov
jnp
xchg
frstor
inc
in
add
int3
jns
or
popf
mov
jns
out
jbe
leave
fadds
cmp
stos
jb
mov
gs
xor
inc
and
push
fst
repz
inc
sub
push
clc
mov
sub
nop
mov
push
mov
ficoms
mov
pusha
mov
push
loopne
or
push
and
stos
inc
movsl
in
cs
mov
rcrl
push
cmp
scas
sbb
imul
pop
or
cli
ljmp
out
xchg
push
ljmp
icebp
sub
dec
lods
cmpsl
xor
test
push
fcmovbe
aad
cmp
lahf
lods
jmp
incb
xor
loope
ds
scas
insl
fstpt
imul
mov
xor
jo
stos
push
xor
movsl
dec
mov
test
jns
sub
inc
inc
mov
mov
arpl
pop
lods
scas
mov
push
add
mov
xor
dec
dec
add
rorl
bound
shr
xchg
addr16
out
adc
sbb
jne
ja
test
pop
ret
in
or
adc
insl
jne
out
das
mov
popa
in
je
dec
dec
xchg
xchg
xor
adc
sub
jecxz
fbstp
dec
out
xlat
test
das
in
inc
mov
pusha
dec
inc
sbb
fisubrs
pusha
jbe
ret
jg
lea
fs
and
push
push
xchg
mov
mov
cmp
test
cmpsb
cmp
dec
xchg
outsl
fwait
push
pop
lods
dec
cmp
test
adc
push
xchg
and
mov
stos
rolb
adc
pop
stos
clc
sub
jb
adcl
mov
lods
mov
push
and
movsb
loope
ret
and
aas
lods
sbb
outsl
jnp
pop
jne
inc
xor
bnd
push
mov
sbb
xchg
das
jns
jecxz
xlat
mov
frstor
inc
mov
adc
xchg
push
xor
addr16
popf
movsl
push
or
fwait
xchg
sbb
dec
movsl
mov
jbe
xchg
xor
repnz
cltd
fcmovb
mov
jae
inc
sbb
xor
pop
dec
adc
mov
call
push
out
push
jnp
nop
adc
fsubl
cmpsb
pop
push
imul
mov
ficoml
out
xor
cmc
scas
inc
add
jne
mov
xchg
imul
repz
cwtl
adc
xor
lea
and
lods
sub
pop
lock
push
or
outsb
inc
adc
sbb
icebp
in
das
insb
ficomps
mov
jne
rclb
fsts
jb
das
cld
lret
dec
or
add
in
pop
dec
dec
or
jae
push
mov
enter
mov
inc
out
mov
arpl
adc
jge
sbb
and
nop
push
dec
push
jnp
arpl
mov
jmp
lret
dec
push
xchg
popf
imulb
movb
clc
shlb
lcall
insb
into
cmp
addr16
loopne
sbb
movsl
js
inc
cmp
mov
lret
adc
jno
cmpsl
cli
pop
jg
or
ret
out
xlat
mov
jns
test
out
sbb
ds
dec
sbb
idivb
sub
or
xchg
roll
lcall
ror
and
pop
leave
pop
movsl
ja
int3
movsb
xor
mov
cmpb
pop
adc
dec
xor
sarl
mov
imul
aas
sbb
sar
dec
inc
daa
sub
daa
pop
popa
cmpsb
shlb
inc
fstpt
xchg
movsb
add
addb
adc
jne
push
loope
adc
add
insb
ja
xor
cli
and
inc
and
movsl
les
out
gs
xchg
mov
push
adcl
adc
or
pusha
and
push
dec
adc
hlt
out
sbb
add
and
inc
loop
sahf
push
cmp
push
adc
sbb
lret
pop
loop
inc
ljmp
push
mov
adc
cmp
rol
dec
dec
add
ljmp
dec
push
jle
jge
push
imul
fwait
bound
ret
or
push
or
cmpsl
inc
jge
dec
mov
sub
xchg
rorl
push
pop
out
pop
pushf
ds
or
xlat
sub
mov
in
lcall
outsl
test
push
pop
loope
push
std
jo
js
pop
fwait
mov
arpl
test
mov
dec
mov
jmp
mov
lock
push
ljmp
mov
and
pusha
nop
mov
dec
push
mov
adcl
mov
cs
ss
mov
test
in
leave
push
fldt
push
mov
lcall
mov
mov
gs
dec
push
sahf
sub
in
dec
icebp
jae
mov
ds
iret
test
xchg
adc
daa
test
jbe
dec
sbb
stc
dec
pop
xor
insb
cmc
xchg
xlat
int3
cmp
ja
fisttpl
xlat
stos
mov
rcll
pop
mov
rorb
fwait
mov
pop
pushf
inc
sahf
xor
sbb
dec
sub
and
pushf
iret
dec
fs
aam
xor
jnp
fimull
inc
sub
and
ds
int3
test
test
or
sub
mov
xchg
add
cmp
enter
aad
mov
mov
popf
int3
int3
cwtl
or
jl
mov
and
pushf
out
aam
push
add
ja
adc
insl
xor
inc
sarb
adc
add
or
leave
sbb
add
mov
loopne
lods
add
or
mov
jp
int
jbe
lret
icebp
lahf
ljmp
xorb
cmp
add
out
push
mov
push
subb
out
push
pushf
jnp
dec
daa
or
data16
add
add
rorl
push
leave
sbb
fs
lds
xor
xlat
js
add
inc
pusha
sub
fsub
adc
inc
subb
ret
in
jecxz
movsl
movsb
popl
mov
lahf
lcall
rcll
call
aad
pop
not
stos
mov
xor
fdivrs
mov
hlt
cltd
testb
jne
in
je
adc
out
js
insl
sub
inc
cmc
sbb
or
sahf
mov
add
out
out
pop
mov
mulb
in
xchg
cmp
push
test
dec
or
mov
rcl
cmp
sub
sti
fldenv
das
xchg
add
aam
push
inc
adc
add
add
dec
inc
add
sahf
xor
inc
int3
mov
or
inc
add
add
sbb
push
pop
nop
fwait
jnp
dec
sub
es
or
xor
xor
or
mov
xor
sub
or
sub
dec
add
pop
or
sbb
add
orl
mov
lcall
mov
fcoml
or
rolb
jo
gs
mulb
call
and
pop
filds
fwait
stos
fstps
push
iret
xchg
lods
xor
push
push
push
es
xchg
popa
jmp
std
notb
ds
mov
fnsave
xchg
pushf
int
push
aam
idivl
in
xor
arpl
shll
mov
mov
scas
negb
and
or
xor
popa
shrl
in
mov
sbb
and
xchg
push
cmp
ja
test
out
mov
repnz
mov
movsl
ljmp
test
imul
fs
subl
lea
jle
je
sbb
mull
inc
mov
jb
xor
ret
fnstsw
sub
cmp
and
int3
mov
add
mov
mov
xor
dec
push
subb
jo
fadds
insl
inc
inc
add
push
fmul
sbb
dec
ror
arpl
add
subl
and
mov
cmc
out
lods
xor
fcomps
add
and
push
push
outsb
std
adc
ror
in
in
repz
pop
push
jg
bound
mov
sbb
insl
iret
insl
xor
out
out
in
shlb
xchg
xchg
xchg
neg
aas
cmp
outsb
test
dec
js
stc
or
mov
xor
sti
add
cmc
lea
mov
ja
mov
push
push
out
test
mov
push
sbb
mov
call
sub
dec
pushf
add
dec
add
shld
gs
push
sub
mov
fnstsw
adc
pop
cltd
in
iret
and
mov
xchg
je
insb
mov
lcall
stc
add
push
es
push
xlat
xchg
pop
lret
aam
je
imul
inc
out
fwait
push
out
jecxz
mov
sub
lahf
inc
data16
lods
out
aam
int
mov
push
jns
nop
clc
and
inc
push
push
cmp
xchg
ja
inc
cltd
dec
and
jb
push
es
mov
data16
jno
inc
stos
lea
popa
movsl
xchg
shl
adc
mov
and
rclb
jne
sub
mov
fimull
fwait
pop
inc
xor
in
test
mov
pop
jno
mov
mov
ret
cs
std
aas
arpl
lea
fldenv
and
pop
jg
enter
cmpsl
test
int3
jmp
js
inc
stos
mov
mov
pusha
or
adc
es
adc
or
icebp
xor
adc
mov
in
xchg
cmp
das
jge
mov
scas
inc
data16
js
fwait
xor
imul
xchg
fwait
xchg
ds
clc
ret
lods
cmp
repz
mov
cwtl
lods
lods
xor
sbbb
rorb
in
cmc
inc
mov
in
mov
add
andb
loopne
inc
mov
imul
sbb
adc
dec
outsb
enter
movsl
outsl
mov
jbe
jne
push
lcall
fsubs
das
mov
icebp
iret
jnp
movsl
xchg
loope
dec
nop
in
xchg
inc
push
dec
mov
inc
ljmp
cwtl
and
and
jmp
and
lea
leave
push
or
add
nop
andl
mov
add
push
scas
das
sub
lods
icebp
lods
jge
xlat
sbb
loopne
cmp
push
cmp
mov
and
inc
push
or
adc
and
stos
gs
sbb
adc
loop
movsl
daa
jb
inc
cmpsb
aad
adc
push
aad
cld
and
adc
insl
dec
adc
xor
inc
pop
inc
and
test
add
push
or
and
cltd
mov
inc
and
xchg
add
and
jle
jge
dec
xor
adc
stos
pop
xor
je
pop
fstpl
pop
xor
out
neg
shr
xchg
mov
call
jmp
xor
dec
xchg
jp
dec
push
xor
inc
fnstenv
xor
call
jl
push
loope
mov
outsl
dec
imul
fimull
mov
adc
pushf
inc
loopne
xor
mov
repz
shlb
mov
xor
shrl
pop
or
mov
icebp
fisttps
xor
popf
pop
insl
icebp
ror
push
scas
lds
adc
xchg
add
rorl
lds
dec
inc
sbb
push
xlat
test
and
add
adc
sub
aaa
add
dec
mov
add
inc
pop
inc
divb
jno
int3
xor
stos
addl
ret
mov
mov
push
cmp
add
fisttps
jg
fcmovnb
fwait
sbbl
int3
sbbl
dec
sbb
xchg
ret
int
sti
cmpl
jmp
add
out
fsubl
dec
sub
rolb
cmp
popf
dec
xchg
jmp
adc
cmp
sti
popa
inc
js
inc
adc
in
pop
dec
pop
xor
rorl
inc
xor
dec
outsb
fsubs
sbb
je
sahf
cld
and
mov
enter
jae
getsec
lds
cmp
sub
push
clc
and
cmp
adc
and
dec
dec
ret
and
es
fld
or
insb
addr16
inc
sub
aas
xlat
test
in
rol
adc
stos
stos
loop
xchg
add
pushf
popl
pop
or
and
xor
daa
and
xchg
cmc
mov
imul
pop
fildll
enter
push
dec
test
pop
jmp
xor
sbb
xlat
in
into
repnz
mov
lret
xlat
sarl
cltd
idivb
js
cmp
cld
inc
cli
push
xor
jmp
push
sbb
mov
outsb
lahf
gs
mov
add
jo
repz
jae
cli
clc
dec
push
add
xchg
leave
dec
mov
inc
ret
mov
lock
push
push
and
xchg
ds
mov
lcall
shl
aaa
jp
dec
cltd
addl
push
lods
icebp
test
push
inc
pop
mov
push
sbb
idivl
mov
outsl
cmpl
lods
in
jg
lahf
xchg
stos
push
add
sbb
jg
inc
mov
sub
mov
sbb
stos
add
test
sub
jge
push
pop
aaa
and
jae
fcoml
fndisi(8087
jno
vsqrtps
rorl
dec
gs
aad
gs
out
pop
testb
cmp
in
idivl
adc
stc
jno
cmp
push
sti
lcall
pop
loop
test
mov
int
mov
jb
sti
mov
mov
mov
mov
mov
mov
outsl
popf
jp
in
enter
lret
cmpsb
orl
and
and
lea
and
lcall
lret
pop
or
xor
sti
test
inc
cwtl
xchg
fisttps
add
mov
and
out
out
std
call
mov
and
or
adc
inc
sbb
pop
fimull
sub
lea
fs
cmp
lret
arpl
mov
xchg
mov
add
gs
lods
je
in
lods
jl
pop
mov
cmpsl
movsb
cld
scas
and
cld
loop
nop
lcall
daa
rclb
ljmp
outsb
cmp
jne
out
nop
insl
add
push
xor
scas
movb
rorb
xlat
lea
pop
cld
mov
adc
jns
xor
or
out
sub
jns
fstpl
test
pop
fistpl
nop
mov
jbe
lret
xchg
sbb
repnz
movsb
adc
pop
test
shlb
std
insb
std
xchg
cmp
insb
push
jl
pushf
in
pop
dec
in
cmp
adc
addr16
out
xlat
push
inc
movsb
mov
xor
lods
addr16
lret
stos
jmp
iret
scas
sarl
pop
sub
scas
or
in
dec
pop
jmp
les
dec
inc
add
mov
imul
test
lea
pop
sahf
lods
jb
pop
popf
incb
push
dec
mov
fstpt
push
shl
jle,pn
mov
cmp
icebp
in
jg
pop
jmp
ret
lcall
mov
xchg
add
data16
icebp
lret
or
in
sbb
mov
xchg
xor
mov
fcoms
in
mov
movsb
aad
pop
mov
in
out
mov
add
sbb
xchg
hlt
loope
enter
mov
jo
add
jp
or
fstpl
inc
scas
dec
jno
pop
add
xchg
fnstcw
push
push
jl
nopl
or
scas
or
adcb
test
dec
mov
mov
push
lret
insb
adc
adc
hlt
sbb
int3
or
dec
dec
or
faddl
dec
mov
shrb
mov
fcoms
rclb
mov
mov
sbb
mov
cmp
decl
clc
loop
dec
adc
jns
imul
push
mov
cmc
adcb
sbb
mov
inc
pop
cld
or
pop
and
pop
insl
pushf
sub
add
jle
jmp
sti
add
mov
sbb
popa
icebp
and
fidivrl
sub
push
das
sahf
sub
xchg
jb
je
xchg
sub
mov
sti
popa
scas
add
adc
xchg
mov
sbb
lea
jns
push
in
xchg
sbbl
adc
adc
in
xor
ret
sub
cltd
jno
cmp
sbb
inc
aam
mov
ret
loope
push
add
fidivs
je
repz
cmp
mov
xchg
popw
rorl
pop
and
sbb
push
adc
jbe
dec
in
lds
shll
inc
test
cmp
pand
stos
mov
scas
fsubl
scas
push
shl
mov
add
sahf
sbb
mov
xchg
jnp
push
loope
aam
or
jns
scas
pop
xor
fisubl
adc
test
jns
dec
iret
mov
push
nop
xchg
sbb
jo
scas
out
int3
mov
repz
jno
pop
int3
rcrl
mov
shl
jno
mov
add
cmp
mov
jmp
push
daa
popf
sub
in
roll
fnstenv
push
data16
cld
enter
test
mov
push
cmpl
mov
clc
xchg
out
fildl
mov
lods
xlat
mov
int3
mov
xchg
cmpsb
cmc
jmp
and
xchg
cmp
mov
scas
movsl
outsl
std
jbe
call
stos
cli
mov
mov
mov
je
lcall
sub
ljmp
cs
pop
jae
test
cli
xor
daa
dec
pushl
dec
inc
leave
sti
sub
lock
cmp
push
jae
loope
jns
xchg
cmpsb
sub
sub
mov
jae
or
jp
int
inc
cmp
data16
test
scas
call
pushf
and
stos
or
or
les
insb
jo
jb
pop
inc
mov
sub
ds
mov
lods
push
dec
xor
cmp
pop
mov
mov
sahf
xlat
push
adc
in
sbb
mov
adcl
sub
stos
popa
int3
cmp
hlt
jae
sub
ficoms
pop
or
adc
mov
js
test
push
inc
lcall
add
jbe
fsts
arpl
dec
cmpsb
shl
je
mov
lcall
mov
idivl
js
hlt
aam
jmp
and
push
cmp
imul
xor
fcomps
decl
mov
and
xchg
add
adc
xchg
ds
stos
fldl
inc
mov
test
mov
fst
lock
in
jp
mov
add
mov
fs
cli
cld
pop
mov
sbb
repnz
mov
lea
jl
and
sbbb
dec
fidivrs
cmc
in
dec
pop
or
jmp
xchg
in
popa
out
popa
inc
add
adc
enter
mov
call
inc
jb
lcall
jmp
idivb
rcr
push
cmp
gs
adc
cltd
lea
aad
mov
fs
pusha
and
scas
pop
fdecstp
imul
push
pop
sub
mov
xchg
testl
mov
call
fcoml
push
lret
add
int3
mov
xchg
pop
call
push
test
pushf
add
imul
out
or
mov
and
mov
xor
mov
stc
xlat
mov
jno
movl
jge
jbe
js
pop
stos
lret
pop
jns
mov
cmp
pop
popf
mov
sbb
test
sar
dec
cmp
cwtl
jo
jnp
push
sbb
xor
jo
fnstenv
aas
xchg
and
inc
movsb
dec
in
int
xlat
inc
les
mov
or
mov
cltd
out
aas
mov
arpl
dec
stos
inc
inc
arpl
and
fsubrs
adc
sbbb
notl
or
inc
out
push
aaa
ds
pushf
adc
popf
mov
push
lds
popa
daa
popl
rcrl
popf
fidivl
into
dec
pop
das
pop
fs
inc
xchg
inc
fcompl
jp
sarb
mov
lods
ja
cld
fists
cmp
and
pop
xchg
sbb
test
sbb
inc
call
push
cmp
xchg
dec
inc
jle
idivb
je
insb
outsb
insl
aas
and
cmp
inc
ret
sti
xor
data16
aad
or
lds
lret
pop
xor
xor
cmp
dec
bound
lret
test
inc
pushf
pop
push
popa
lahf
jnp
stos
sarb
jns
faddl
mov
push
data16
and
ficoml
cmc
cmp
pop
jbe
cltd
and
xchg
dec
xor
push
dec
testl
xchg
ljmp
ror
dec
hlt
sub
jo
jmp
fcomi
add
dec
test
inc
arpl
scas
fildll
sbbl
mov
ljmp
jbe
es
into
movsb
inc
xor
xchg
aas
lret
test
out
data16
cmp
aad
push
mov
sbb
inc
jnp
in
sbb
out
jne
das
out
push
out
int
or
cmpl
xor
daa
addr16
dec
sarb
and
les
add
push
cmp
or
ror
mov
call
dec
mov
fstpl
pop
push
xor
pusha
popf
int
xlat
negl
add
and
lds
aam
mov
dec
sbb
jmp
inc
push
lret
xor
or
jnp
push
mov
sbb
daa
sub
pop
dec
loope
xchg
dec
mov
add
jbe
lea
dec
popf
enter
sub
in
mov
mov
xchg
in
pushf
fcoml
lods
xchg
cmp
mov
mov
sbb
aam
jp
cmp
in
sbb
fnsave
sbb
jne
lods
gs
or
push
insl
xor
push
push
fs
in
mov
pop
pop
out
xor
rolb
push
pop
fcmovnbe
dec
push
sub
jp
mov
insl
cltd
mov
adc
iret
dec
inc
push
sub
addr16
push
andl
fs
lds
dec
movsl
jbe
sub
cwtl
xchg
test
sbb
movsl
je
xchg
sbb
cmc
add
push
and
push
out
jno
pop
out
lock
iret
or
hlt
add
into
lods
fmuls
sbb
nop
mov
sub
arpl
fimull
push
xor
sub
shlb
movsb
pop
mov
jnp
pop
cs
rcr
xchg
cld
bound
lea
mov
nop
xlat
cmp
hlt
ret
xor
or
and
push
shr
lret
ja
cmp
aaa
mov
or
out
lods
test
jns
add
push
test
jns
mul
push
ror
addr16
jnp
sbb
aam
fsubr
pop
mov
push
xchg
popl
jb
push
xchg
mov
nop
test
push
iret
jae
cmp
loopne
or
mov
push
out
and
mov
dec
aad
aas
stos
data16
subl
std
filds
and
enter
push
dec
xlat
das
add
push
int3
push
sub
movb
stc
xchg
jb
leave
je
push
out
push
fdivp
pop
jnp
lock
fstpt
or
inc
jb
in
jmp
cmpsb
mov
push
adc
jns
pusha
std
popl
xchg
daa
les
test
test
inc
testb
sbb
ret
incl
pop
jbe
out
cld
sbb
jne
data16
adc
push
fcmovnu
fisubl
je
in
xchg
inc
std
mov
dec
fsubr
push
stc
aad
arpl
out
stos
and
rolb
mov
insl
cmp
mov
ljmp
fnstsw
xlat
xchg
mov
xchg
sub
cmp
ss
cmp
sbb
push
stos
push
addr16
cmp
sarl
faddl
add
out
dec
and
into
jb
pop
inc
imul
push
push
push
mov
sbb
cmp
inc
fsubs
iret
add
sbb
hlt
lods
cmpsb
adcl
shrb
loop
or
jp
push
adc
leave
lcallw
ret
pop
cltd
jmp
mov
aam
push
or
aaa
or
shll
es
sub
and
in
mov
loope
mov
push
dec
push
in
cmp
push
loop
ret
push
movl
scas
cltd
inc
clc
adcl
nop
xchg
shll
mov
xchg
orb
scas
sub
movsb
in
jne
push
ds
imulb
dec
cmpsb
sub
jmp
jge
dec
pop
movsb
leave
and
stos
aam
adc
lea
pop
je
adc
clc
push
mov
jbe
jb
loopne
iret
dec
lcall
push
jns
lret
sarl
arpl
jg
xchg
test
jg
cmp
adc
mov
jmp
push
push
dec
mov
inc
fdivl
insl
ret
outsl
int3
add
sbb
cmp
inc
or
cmp
fcompl
add
pop
pushl
add
fcmovne
xor
fsubrs
sbb
mov
push
pop
into
daa
aaa
push
pop
cwtl
mov
jo
lods
jnp
inc
bound
in
and
mov
adc
adc
xor
in
imul
dec
out
mov
mov
lret
pop
aam
jmp
jno
dec
imulb
inc
xlat
ret
mov
or
or
call
inc
mov
jne
cmpb
xlat
stos
and
aas
push
mov
ljmp
scas
in
call
dec
sub
aas
rcrb
gs
dec
mov
arpl
cwtl
sub
xor
mov
test
popa
dec
jae
xchg
mov
aad
push
inc
sub
inc
mov
mov
lret
test
or
push
cmpsb
je
mov
mov
push
jbe
xor
fs
cld
fsts
jne
adc
cwtl
movsb
dec
cs
repz
clc
or
inc
xchg
and
cwtl
dec
mov
aam
aad
lcall
xchg
and
adc
dec
and
scas
stos
scas
les
jge
cvtdq2ps
fnsave
and
jne
dec
cli
imull
adc
xchg
push
adc
push
fstpl
cltd
int3
cmp
cmp
or
loope
dec
insb
cmpsb
cmp
loope
add
sbb
pop
jo
mov
and
pop
jo
dec
xchg
ret
jnp,pt
xlat
imul
pushl
mov
and
movsl
or
push
decl
out
adc
rcll
jecxz
jle
adc
sbb
shrl
aad
mov
mov
xor
icebp
cmp
lock
lea
push
inc
outsb
cmp
adc
cmp
jnp
adc
and
aaa
lahf
imul
and
aaa
and
insb
stos
roll
push
sbb
jne
popa
lret
imull
or
lods
add
pop
mov
mov
ret
and
orl
imul
into
outsl
test
fdivrl
test
sub
or
pshufw
adc
addr16
das
sarl
je
and
dec
insb
jbe
cmp
inc
jle
or
insl
adc
mov
std
testb
mov
sti
andb
mov
test
lods
mov
fistl
pop
cmp
dec
lret
jecxz
insl
js
adc
ljmp
int
hlt
cwtl
aad
jne
jle
bound
fcomp
pop
mov
lds
fwait
mov
pop
sbb
push
xor
xchg
fistl
mov
fcoml
and
icebp
jmpw
cmpsl
inc
sbb
cmp
push
jecxz
push
sub
sub
sub
pop
fstl
fbld
pop
mov
or
push
mov
fmul
out
fs
xchg
aam
inc
int
cwtl
je
rcr
inc
dec
and
mov
loopne
pop
loop
push
lods
pop
mov
mov
inc
les
dec
iret
inc
lret
loopne
fsubr
loope
mov
adc
mov
js
cli
mov
and
jecxz
insb
add
inc
mov
cmpsb
sub
sub
sahf
imul
mov
daa
inc
lret
stos
aam
pop
test
pop
sbb
inc
sbb
sbb
push
ret
insb
ffree
or
xchg
mov
mov
loope
push
sahf
pop
cmp
pop
push
jnp
jne
lcall
scas
xlat
mov
aam
sub
xor
xor
rcll
cbtw
xor
adc
jnp
dec
ss
cmp
cmpsb
sub
enter
mov
enter
dec
outsl
inc
and
mov
and
xchg
xchg
cld
lods
in
push
repz
pop
add
notl
outsl
and
adc
mov
push
loopne
inc
mov
repnz
mov
cmpsb
stc
popf
inc
jbe
sbb
cmp
popa
adc
inc
mov
sbb
jge
mov
mov
jmp
add
sub
pop
xor
stos
pop
sbb
repz
cs
clc
scas
mov
pop
jge
dec
imul
aam
out
jecxz
dec
punpcklwd
jne
fcomi
and
addr16
mov
or
pushf
inc
xchg
insb
sub
lret
cli
mov
cwtl
sbb
mov
out
dec
or
jp
sbbl
scas
mov
push
or
fisubrs
mov
push
insb
jle
jecxz
jnp
mov
xchg
inc
scas
aaa
xor
in
jge
cmp
aad
pop
inc
or
and
sbb
out
aas
pop
cmpsb
pusha
sub
jnp
aaa
pop
aas
mov
dec
lods
sbb
jecxz
jnp
push
xchg
leave
inc
mov
jae
xchg
inc
cmp
xchg
mov
shlb
sbb
xor
sarl
clc
or
fdivs
xchg
stos
mov
xor
icebp
mov
dec
int
arpl
fdivl
xchg
out
xchg
icebp
jne
test
shrl
inc
sub
cmp
and
mov
cmp
sub
push
sbb
dec
ficomps
pop
fs
and
out
jns
fidivrl
add
pop
movsl
into
loop
out
sub
push
rol
mov
add
sbb
sub
insb
adc
mov
pop
cmp
or
inc
rclb
push
add
roll
lret
push
cmp
mov
sbb
mov
xor
movsb
or
aam
adc
insb
fdivl
orl
out
test
popa
jcxz
sbb
sbb
scas
lock
and
cmp
dec
sub
shlb
or
les
or
pop
dec
pop
mov
mov
in
and
out
test
data16
pop
test
dec
cmpsb
xchg
scas
loopne
cmp
dec
jae
xor
xor
test
dec
aas
leave
sub
push
scas
dec
jp
pushf
add
ss
mov
add
push
cmp
jns
dec
jecxz
ljmp
push
jnp
adc
pop
test
push
arpl
into
hlt
mov
loopne
pop
xor
ss
popa
iret
xchg
or
pop
mov
cmp
lret
sub
xorl
pop
or
test
ret
dec
inc
sub
mov
cwtl
push
int3
mov
cmp
jmp
mov
stos
notb
fldcw
pushf
pop
je
pop
jns
shl
je
repnz
bnd
shl
and
push
xor
fadds
mov
sub
pop
xchg
call
rol
ret
mov
sahf
xor
jp
xchg
shll
inc
pushf
mov
push
movsl
push
or
lock
xor
popa
jno
cld
les
out
scas
sbb
popf
dec
lods
push
mov
ret
jle
mov
or
inc
and
mov
xchg
jp
xchg
jle
rcrl
or
rol
fdivs
in
mov
shrb
mov
push
sbb
xor
loope
jle
jno
notl
bound
shlb
cmpxchg
pop
jno
fs
push
cmpsl
lods
aaa
loop
and
jo
int3
lods
xchg
out
mov
jns
jb
mov
stos
inc
sbb
test
adc
sbb
jo
lods
rcrl
test
lods
aam
insb
jb
mov
xchg
dec
mov
xchg
and
xor
sub
arpl
add
or
test
cmp
cmp
mov
pop
in
ret
cmpsb
test
addr16
insl
icebp
fs
popa
mov
jne
pop
sub
sbb
addr16
mov
fidivrl
mov
test
mov
loopne
dec
mov
lods
imul
mov
and
mov
inc
and
sub
add
push
sub
iret
mov
lret
int
loopne
cmp
rclb
es
push
sub
adc
pop
jb
sbb
ret
in
imul
mov
mov
jns
pop
mov
and
cmp
or
iret
test
dec
push
dec
push
mov
aad
xor
call
add
loopne
add
lock
mov
nop
xor
inc
mov
push
pusha
push
gs
add
or
inc
sahf
ljmp
inc
ss
out
push
jns
push
mov
sub
pop
cld
lock
dec
adcb
sub
ljmp
inc
fstps
or
mov
inc
xchg
lahf
hlt
and
psrlq
out
fsubl
js
sub
xchg
incl
sub
enter
sub
enter
shlb
popf
int3
xor
xchg
add
add
xlat
dec
fadds
popa
sbbb
adc
push
and
ljmp
and
rolb
jns
mov
jmp
mov
loopne
inc
loope
mov
shl
arpl
mov
out
dec
inc
daa
lret
push
mov
xchg
iret
mov
into
cwtl
ja
pop
cmp
xor
lcall
mov
pop
lock
fwait
dec
fimull
mov
lods
adc
jp
jnp
fucomip
mov
cmp
sub
pop
stos
or
lods
test
and
dec
push
fstpl
and
xchg
xor
mov
sub
add
mov
xchg
mov
inc
cmpsb
mov
and
icebp
jo
test
cs
dec
int3
inc
popa
push
sub
and
inc
mov
fs
aad
cwtl
push
insb
jnp
add
in
sbb
int
lcallw
loop
ret
sbb
push
loopne
adc
data16
inc
pop
ja
jnp
insl
cmpsl
mov
stos
les
or
adc
pop
xchg
xchg
insl
ret
xor
xor
icebp
imul
test
xor
in
sbb
out
sub
mov
and
cmp
xchg
je
lock
pop
cwtl
pop
aas
xchg
bound
sti
jg
arpl
mov
cmovge
lret
in
xor
lcall
ss
add
xor
or
test
cld
push
cmp
subl
pop
adc
xchg
subl
sub
or
push
add
lods
add
push
in
loopne
loopne
test
ja
mov
cld
adc
mov
subl
bound
or
jb
sub
pop
and
js
imul
lock
dec
and
adc
sbb
adc
das
mov
testl
ja
and
jl
test
fwait
call
sbb
inc
push
mov
out
mov
outsl
cli
data16
mov
out
out
jmp
pop
mov
pop
ret
pushf
xchg
mov
subb
pop
xchg
dec
xchg
xlat
push
jo
xchg
ja
ret
inc
adc
loope
xor
dec
sbbl
std
lcall
or
out
insb
mov
cmp
xchg
mov
imul
leave
outsb
and
push
mov
dec
sti
sub
test
sub
ret
push
sbb
inc
push
jl
lret
loopne
dec
ja
test
test
cmp
shll
into
mov
scas
mov
jae
xchg
scas
stos
lods
pop
add
xchg
ljmp
jmp
jge
data16
jo
jbe
lahf
add
jns
xchg
xlat
pop
adc
cmp
fisubs
xchg
sub
aas
movsb
jns
xor
pop
dec
xor
pop
adc
pop
push
xchg
adc
ret
movsl
jne
mov
addb
xchg
lcall
repz
stos
leave
mov
sub
cmp
inc
scas
mov
pusha
xchg
push
or
mov
iret
ds
and
paddw
data16
lea
iret
and
test
pop
add
pop
data16
lock
nop
inc
mov
loop
or
inc
lret
shl
addb
test
xor
or
aas
daa
dec
add
sahf
xchg
jl,pt
cmp
in
push
mov
ffree
jns
and
adc
push
mov
fldt
roll
cmp
and
mov
mov
rolb
rorb
in
xlat
jle
shr
cmpb
xchg
dec
call
or
repnz
shrd
ds
add
je
insb
jbe
out
cmp
mov
popa
cmpsb
mov
imul
jg
imul
dec
push
loop
inc
xchg
imul
orb
mov
js
mov
mov
jae
sub
pop
jle
and
inc
hlt
cwtl
in
mov
call
dec
inc
clc
repz
ss
movsb
jns
imul
out
mov
sbb
movsb
push
jb
push
push
rorb
pushf
inc
rorb
pushf
inc
add
xor
push
add
adc
pop
mov
cld
das
inc
and
lock
iret
ss
jo
stc
push
lret
or
xchg
cmc
sub
jl
scas
push
cli
add
ljmp
testb
inc
xor
cmp
bound
jo
andb
rcll
sub
fimull
cmp
cmpsl
jns
push
ret
push
leave
sahf
das
push
jnp
dec
mov
or
and
push
and
sub
lret
pop
rcrb
mov
xor
fwait
pop
dec
jo
or
mov
xchg
inc
add
xchg
xlat
mov
mov
dec
mov
mov
aas
imul
dec
mov
outsb
aam
les
scas
ja
jno
js
jg
mov
push
jns,pn
jne,pn
stc
insb
inc
push
ja
jmp
lods
pminub
ljmp
fildll
jb
sarl
inc
mov
iret
clc
out
inc
lea
mov
test
sbb
xchg
nop
mov
cltd
pop
ljmp
dec
in
sub
in
inc
ja
add
mov
pop
mov
push
xor
movsb
gs
jl
test
xchg
stos
dec
mov
repnz
aam
es
mov
jl
hlt
xor
scas
stos
inc
cmp
dec
push
jne
sbbl
mov
popf
mov
lcall
jnp
jb
sub
pop
orl
lahf
pop
inc
movsb
or
and
out
push
dec
jl
or
push
pop
bound
mov
cmc
lods
dec
inc
lock
mov
cmpsb
lahf
in
cmpsl
loop
push
xor
cmc
inc
cltd
lcall
bound
es
sub
cmp
push
arpl
aaa
bnd
sbb
insl
ds
sub
dec
iret
push
daa
loope
enter
and
cmp
jecxz
sbb
mov
pop
cmp
jecxz
fucom
int3
scas
nop
dec
daa
sahf
pop
cmc
inc
or
clc
sub
insl
mov
mov
push
shlb
mov
outsb
imul
cli
pop
bound
fwait
gs
inc
sbb
mov
aam
sbb
pushf
call
ss
dec
pusha
in
or
cmc
rorl
lods
int
mov
dec
dec
dec
out
adc
lods
iret
lret
pop
push
mov
mov
orb
sbb
test
out
and
mov
push
pusha
push
incl
divl
xchg
int
mov
fs
sbb
adc
mov
sbb
ret
dec
pop
dec
adc
ss
scas
daa
ljmp
xor
dec
cmp
call
mov
mov
mov
and
mov
jmp
or
out
ja
outsb
call
mov
inc
or
pop
push
cmp
and
inc
push
fdivl
xchg
xchg
push
xorb
ret
lcall
pop
mov
jg
popf
mov
mov
inc
shrb
sti
cmp
pushf
movsb
lss
or
adc
punpckldq
pop
in
dec
add
mov
adc
push
leave
sub
std
push
jle
fistl
int3
bound
cmp
push
roll
adc
and
mov
ficomps
lock
jno
xor
jns
xchg
pop
fucomip
push
clc
lods
dec
jo
pop
xchg
mov
xor
and
dec
pop
push
push
leave
aaa
movsb
adc
out
or
arpl
call
mov
cli
sbb
test
insb
mov
jbe
ret
and
loope
out
mov
or
mov
xchg
sub
jmp
popf
inc
sbb
lret
loop
push
test
and
mov
adc
rcr
adc
mov
mov
push
cld
repnz
push
cmpsb
stos
les
inc
repnz
jecxz
dec
pop
arpl
jl
mov
pop
daa
adc
push
jl
cli
lea
fsubl
leave
sub
xchg
jne
clc
cli
cmpsb
or
xor
addr16
xor
mov
lods
ss
leavew
es
ret
stos
lods
js
cmp
dec
add
ljmp
test
js
fsubrs
xor
lds
xchg
mov
cmp
xchg
inc
push
dec
cmp
xchg
gs
and
std
sbb
mov
xor
bnd
mov
mov
pop
cmp
inc
inc
lds
bound
cmpsb
or
sbb
fimull
add
test
mov
lock
std
inc
jne
stc
mov
sbb
pop
test
push
stos
aas
xchg
out
dec
xchg
in
repz
loopne
pop
je
jmp
fs
xor
mov
and
nop
xor
faddl
pop
pop
pop
aad
mov
or
jbe
add
movsl
cli
add
cmp
jno
sub
addl
push
adc
adc
mov
adc
jg
sahf
add
in
popa
mov
sub
cmp
mov
mov
iret
stos
imul
xchg
ja
into
mov
mov
int
je
xlat
push
xchg
faddl
jne
iret
fwait
cltd
mov
mov
mov
cltd
imul
and
pop
lahf
xchg
mov
cmp
jmp
aas
jne
xlat
mov
jno
adc
xchg
mov
test
mov
data16
push
cmp
testl
sarl
test
ret
inc
dec
out
ror
xchg
shr
cmp
push
test
inc
add
in
test
jno
movsl
dec
movsb
es
mov
inc
dec
shrl
mov
fidivrl
sbb
loop
stc
cmpsl
jle
push
dec
push
pushf
push
ror
mov
xchg
add
jne
hlt
xor
addr16
mov
push
dec
pop
sub
lock
cmpsl
fmul
shll
out
mov
dec
mov
movsb
lds
or
sbb
add
mov
or
fs
xor
movsb
mov
xchg
and
loope
adc
insb
jg
xchg
fcomps
sbb
xchg
xor
and
adc
push
stos
rol
loopne
xor
add
out
in
inc
lcall
in
mov
sbb
jb
or
dec
jno
dec
cmp
out
mov
icebp
add
xor
or
bound
mov
fcompl
je
test
inc
mov
sub
repz
btc
lahf
fs
movb
pop
or
jne
mov
and
bound
or
inc
inc
cs
push
pop
int3
lcall
xor
enter
hlt
and
or
dec
mov
xchg
test
mov
daa
outsb
into
pop
rcrb
stos
dec
mov
jmp
adc
insl
cmp
insl
xor
xchg
mov
pop
jmp
ljmp
lods
xor
xlat
push
ret
push
pop
lret
jbe
int
mov
or
lock
xor
dec
adc
bound
out
movsb
mov
sub
dec
mov
iret
ret
aas
jp
std
cld
sub
cmp
jl
fldt
push
fstps
mov
xchg
sub
loope
in
xchg
push
pop
jb
sbb
mov
sbb
adc
mov
sub
jbe
pop
sub
sub
pop
es
xchg
lret
push
mov
pop
push
out
mov
rolb
in
notl
outsl
cltd
adc
ret
mov
ss
mov
dec
cmp
popf
subl
add
enter
sub
and
mov
fdivrs
adc
addr16
in
notl
mov
int
inc
addb
popa
movsl
push
ja
clc
fcoms
jnp
adc
sbb
repnz
dec
jecxz
xor
add
outsb
clc
push
loopne
xor
mov
and
adcb
clc
lret
cwtl
xlat
in
insb
jo
pop
xor
pop
xchg
jnp
out
push
sahf
and
cld
pop
data16
ljmp
loope
cwtl
movsl
push
pop
stos
fwait
or
loop
shrl
inc
jo
mov
clc
add
add
out
fwait
lret
fidivl
aad
xchg
inc
loope
sarb
jae
fimull
adc
and
movsb
fiaddl
ss
aas
mov
imul
or
cwtl
cmp
cld
ds
pop
es
mov
jmp
cmp
dec
aaa
outsl
sbb
cltd
cmp
ret
sahf
inc
or
sub
mov
push
rorl
hlt
ret
cld
enter
in
or
push
into
sub
xchg
push
sub
bound
jp
xchg
ja
xchg
pop
adc
pop
int
std
cmp
lcall
dec
fstpt
cmpsl
arpl
sub
sti
cmp
lcall
cli
sahf
call
daa
stos
mov
loop
imul
adc
add
jg
lds
adc
lret
lods
adc
or
and
pop
dec
int3
jb
xchg
push
scas
nop
jne
lret
mov
mov
pop
in
les
cmpsb
dec
inc
cmp
lret
shl
cmpsl
cltd
adc
addb
lods
icebp
xchg
dec
fwait
xor
pusha
repz
sub
add
pop
mov
std
pop
repnz
push
xor
pmaxsw
icebp
xchg
sub
movsl
add
adc
adc
add
jge
inc
ret
cmpsl
test
sub
aam
mov
outsl
loopne
cmp
mov
inc
pop
push
outsb
jmp
mov
out
inc
jbe
xchg
inc
loop
fdiv
inc
jecxz,pn
xchg
dec
xchg
mov
mov
dec
loope
shll
sbb
stc
stc
hlt
pop
js
mov
out
mov
ret
mov
or
mov
out
into
pop
outsb
es
and
sbb
pop
or
xor
sahf
adc
je
jmp
and
repz
pop
xchg
jg
lods
pop
inc
in
pop
mov
or
mov
xor
testl
add
sbb
adc
sbb
inc
mov
cmpsl
inc
adc
sub
add
add
jo
aam
je
and
mov
adc
es
outsb
xor
sbb
inc
adc
push
inc
aaa
push
jo
shrl
cltd
sbb
or
or
pop
imul
sbb
movsl
sub
or
mov
test
cmp
sub
aad
and
into
sub
inc
and
dec
jbe
iret
mov
xchg
jmp
loopne
adc
out
sahf
out
rcr
mov
js
jns
in
dec
int
loopne
push
lret
int
mov
sti
icebp
out
cld
ud0
int
int3
fstpt
cli
and
push
cld
loope
jne
jnp
jmp
add
push
push
stos
loope
jp
enter
inc
iret
std
ds
out
mov
scas
shll
mov
jg
xor
imul
jno
filds
jge
fcmove
jo
outsl
xor
fnstsw
imul
adc
pushf
pop
mov
and
scas
push
mov
scas
mov
pop
mov
cmp
ret
or
mov
cwtl
int
jl
xchg
sub
or
andl
pop
jmp
pusha
loopne
fldl
aaa
add
insb
adc
stc
xorb
lock
and
mov
mov
mov
les
push
addb
cmp
adc
dec
in
cltd
js
sbb
mov
hlt
pop
sbb
push
jl
sub
enter
push
mov
leave
leave
jbe
or
mov
push
or
test
test
arpl
sub
mov
inc
rcrb
sbb
push
dec
and
je
push
fs
aas
dec
call
in
fwait
cmp
dec
out
push
mov
hlt
paddw
stc
xor
jae
jnp
add
pop
adc
dec
xchg
inc
mov
mov
je
int3
ret
push
je
fwait
mov
daa
mov
lods
sbb
pop
lods
or
sbb
sub
ret
and
or
mov
sub
clc
lahf
dec
push
ret
lret
adc
push
sbb
out
js
in
pop
mov
roll
sti
mov
jecxz
lea
outsb
sbb
loopne
jl
shlb
dec
push
out
cmp
lahf
xor
or
adc
pop
movsb
push
push
int
inc
sbb
call
add
insl
mov
xchg
sahf
mov
dec
out
adc
adc
and
adc
add
dec
int
cmp
leave
insb
nop
cmpsb
loope
rcrl
push
je
push
xchg
shll
adc
mov
jno
ret
lods
lret
test
add
add
and
repnz
jmp
adc
adc
xorb
adc
sub
pop
enter
pop
leave
lret
jno
lcall
cmp
cmp
clc
fmull
jl
adc
xor
mov
mov
lcall
dec
inc
cmp
sub
out
dec
jo
enter
nop
push
cli
sbb
mov
push
and
ja
pop
xchg
jp
mov
push
push
int3
js
dec
push
cmovge
pusha
adc
movsb
push
pop
int3
cltd
and
mov
and
jnp
daa
fs
push
in
in
jp
push
xor
pop
mov
sahf
add
sub
out
mul
xor
inc
push
push
cwtl
sbb
lea
jmp
inc
dec
sahf
mov
push
jl
test
dec
sbb
pop
xchg
sbbl
lock
inc
andb
out
in
cmpsb
fidivl
and
sbb
xchg
xchg
jmp
inc
sub
leave
iret
leave
out
jno
repz
clts
ljmp
xchg
in
adc
add
int3
andl
sti
inc
push
mov
or
mov
ljmp
rcrl
aad
out
clc
lods
into
ret
dec
jcxz
dec
shlb
outsl
mov
xor
js
pop
fists
daa
sbb
stos
mov
outsb
jmp
push
arpl
mov
stos
fst
lods
mov
sub
je
insl
xchg
add
hlt
push
mov
das
mov
ds
outsl
cmc
pop
inc
push
shr
stos
adc
xor
cld
addb
sbb
mov
xchg
and
add
inc
fiadds
add
lds
adc
mov
add
or
sub
adc
jp
hlt
adc
xorb
add
push
inc
dec
std
xchg
cmp
mov
inc
lret
in
gs
mov
dec
fwait
xchg
mov
mov
shll
xchg
jmp
mov
push
lret
gs
pop
pop
dec
stos
leave
jnp
pop
ss
fidivrl
ja
repz
in
mov
test
push
outsb
fisttpll
cltd
mov
outsb
dec
jb
movsl
out
cli
das
jae
push
cltd
ljmp
popf
hlt
out
mov
fnstcw
jns
jg
into
jge
jae
jg
fnstcw
rorb
jle
repz
filds
add
mov
test
and
push
push
sahf
stc
xor
clc
int3
mov
movsb
lods
add
cmpsl
pop
xchg
leave
mov
jb
imul
insb
insb
imul
fs
push
rcr
clc
imul
or
add
loope
or
xchg
sti
imul
ja
call
jl
ficomps
iret
mov
sub
pop
xchg
rclb
in
sub
jl
stos
mov
mov
shl
shll
and
lret
pop
gs
and
enter
fstpt
loop
es
test
ret
or
iret
pop
lea
add
add
jle
pusha
xchg
or
or
or
lock
or
or
xchg
or
lock
mov
and
mov
jo
jp
int3
clc
inc
cli
adc
inc
sub
add
inc
xor
or
adc
adc
sbb
add
loopne
mov
lock
fnstenv
std
mov
push
cmp
jecxz
mov
push
fsubl
ret
or
xor
aas
mov
movl
xchg
shrb
adc
push
adc
add
out
and
pop
loope
jmp
out
arpl
dec
inc
clc
mov
rcrl
test
ja
mov
orb
add
and
ret
fwait
loop
ljmp
sub
xchg
mov
jae
cmp
mov
stos
mov
or
in
incl
inc
ret
mov
sub
fst
out
jmp
pop
sti
movsl
lret
orb
inc
mov
pop
test
jo
jbe
mov
fistpl
jmp
or
dec
lea
pop
jbe
roll
std
ljmp
adc
dec
push
pusha
pop
sbb
or
xor
adc
or
xor
js
jno
jo
movsb
cmp
or
jne
mov
les
add
jne
inc
sub
inc
daa
or
xor
dec
sbb
fwait
addb
add
pop
push
sbb
xor
or
jb
adc
insb
adc
sub
add
jno
jle
push
push
inc
add
dec
xchg
cmp
ljmp
sbb
inc
or
das
xchg
sbb
or
orl
xchg
or
movsl
add
fcoms
add
loope
and
stc
icebp
or
or
test
jns
repz
int3
mov
add
adc
imul
ret
sbb
cmpsl
mov
jns
mov
jmp
stc
push
hlt
decl
sbb
out
jo
sbb
xchg
out
jae
pop
and
cwtl
cmp
mov
sub
sub
insl
xchg
mov
sub
ja
mov
or
mov
add
subl
and
and
rcrb
neg
scas
imul
cli
sahf
mov
in
pop
jns
insl
mov
outsl
lock
imul
idiv
jge
pop
ret
in
fdivrl
xchg
and
inc
test
das
and
rorb
ret
xor
fs
enter
and
pop
adc
lret
mov
mov
dec
adc
mov
mov
add
adc
loopne
emms
ja
mov
jno
adc
adc
or
mov
mov
cmp
in
dec
jl
cmp
pop
sub
pop
sti
push
addr16
add
fcomp
sub
xchg
out
stos
mov
adc
std
cmpl
xlat
jge
cli
cs
pop
into
cld
int3
not
dec
jo
aas
outsb
jle
loopne
or
inc
sbb
push
sbb
orl
stos
add
ds
sbb
add
fadds
adc
mov
test
bswap
mov
repz
jg
cmovs
subb
stc
outsl
mov
cmc
leave
cmp
jecxz
imul
std
mov
test
pop
div
xchg
xchg
jp
xor
mov
popa
mov
push
xchg
xchg
pop
xchg
ljmp
idivb
push
cmp
push
xor
pop
add
jne
and
shrl
push
movsb
or
scas
or
adc
mov
loope
sbb
add
je
mov
add
outsb
enter
pop
and
cmp
loop
test
pop
push
sub
mov
scas
mov
push
jle
xchg
xchg
mov
fwait
lock
lock
ljmp
ficomps
imul
mov
lock
jnp
ds
mov
jge
in
repnz
lods
cli
mov
stc
push
or
fdivr
arpl
cld
pop
lods
repz
xchg
andl
outsl
repnz
mov
add
push
scas
into
cmc
dec
add
fincstp
sbb
jns
xorb
xorl
xlat
sbb
jbe
movsb
and
jmp
cmp
push
ljmp
inc
ficompl
mov
cmp
or
clc
out
out
cmp
sub
jbe
icebp
add
xor
jecxz
sub
jge
or
nop
jl
lods
aas
push
test
sbb
pop
shl
pop
out
ljmp
sbb
ret
add
mov
in
jg
xor
fidivs
push
mov
lahf
mov
or
xor
in
lock
mov
pop
addr16
leave
mov
mov
pop
add
mov
fs
mov
insl
inc
fadds
sbb
mov
ret
das
cwtl
dec
mov
dec
test
sub
cmp
ljmp
aaa
fimuls
into
jb
pop
ja
jg
aam
out
enter
stos
fisubl
pop
insb
mov
jnp
mov
cs
scas
lock
adc
mov
cmp
mov
ficoml
iret
es
jl
fldt
ljmp
loope
pop
scas
dec
and
pop
pop
enter
jo
cmp
jnp
or
cmpsb
mov
pop
hlt
mov
lret
xor
mov
sbbl
cs
fildll
push
mov
in
imul
push
stos
lea
jne
dec
loopne
lret
push
stos
into
xor
mov
pop
mov
daa
xor
push
sbb
sub
xchg
push
scas
imul
inc
xor
jo
sbb
lods
jge
xchg
xor
aaa
mov
mov
xchg
das
sbb
mov
mov
dec
addr16
pop
divl
inc
jbe
scas
xchg
sbb
xchg
mov
fiadds
outsl
lcall
cmpsl
sub
or
outsl
lea
inc
lret
dec
cmp
pop
hlt
negl
pop
cs
or
jne
cs
inc
adc
imul
push
mull
and
push
imul
adc
mov
clc
mov
mov
and
xor
jo
cld
xor
outsb
dec
add
add
or
xor
xchg
add
jle
popa
jl
enter
push
imul
rolb
dec
mov
sub
cmpl
and
lock
ret
loopne
push
adc
mov
xchg
adc
pop
push
in
add
fists
adc
jns
pop
xchg
push
std
adc
and
inc
mov
add
in
bound
and
mov
dec
daa
add
xor
cmp
movsb
repz
adc
jl
pop
hlt
mov
mov
loopne
add
inc
test
enter
sbb
mov
jnp
std
mov
lret
aas
mov
mov
or
mov
mov
sub
xor
push
pop
fisttps
icebp
ds
xor
lcall
lcall
pop
mov
loope
xor
int
jo
in
rcll
cmp
mov
jns
test
lcall
pop
xor
xchg
into
cs
pop
shl
in
clc
cmp
fucomp
lds
mov
dec
gs
addl
outsl
jo
jb
ja
call
popf
dec
stos
push
lods
jnp
mov
scas
fiaddl
outsl
mov
inc
les
mov
sub
pop
adc
pushf
popf
sahf
lahf
mov
in
sub
pop
ljmp
stos
jmp
pop
fidivrl
loop
leave
lds
adcl
pop
test
and
inc
mov
call
into
pop
cmpb
sbb
pop
push
fnstenv
insb
jp
push
jp
jle
lahf
call
iret
jnp
iret
iret
paddusw
pop
xchg
hlt
cmp
fildl
mov
lods
fsubrl
xorl
mov
mov
mov
bound
orb
xchg
std
sub
in
movsb
fimull
dec
mov
pop
mov
sbb
adc
dec
dec
push
and
dec
aas
repz
cld
xor
xor
or
mov
or
lcall
push
shrb
xchg
ljmp
mov
aad
out
inc
cld
popa
inc
mov
out
iret
add
test
int3
bound
add
mov
les
sar
cs
fdivrl
adcb
sub
adc
push
mov
inc
or
add
push
push
loopne
adc
ljmp
out
inc
mov
add
mov
mov
cmp
jmp
push
sbb
mov
pop
nop
fildl
xor
push
adc
ljmp
ret
rcll
xor
add
push
mov
rcrl
popa
add
fldl
cmp
cmp
shll
das
add
inc
mov
shll
add
jle
push
ficoms
pop
and
adc
add
xchg
inc
es
inc
aam
jno
adc
fs
inc
add
roll
sub
enter
leave
xchg
pusha
add
add
in
mov
mov
test
push
jo
or
xchg
sub
push
adc
rolb
and
adc
mov
inc
in
mov
cmpb
xchg
cmp
movb
push
mov
les
mov
add
enter
shld
adc
pop
inc
adc
fcmovnbe
adcb
adc
and
shll
daa
push
xchg
push
movsb
nop
inc
xchg
test
ret
pop
jo
and
cmp
xchg
dec
test
ret
es
shlb
dec
int3
and
adc
inc
xchg
pop
adc
pop
xchg
je
shlb
adc
and
add
loop
outsb
or
les
mov
or
movsb
xchg
movsb
pop
xchg
les
sub
mov
xor
out
mov
or
pop
mov
fnsave
into
add
sbb
xchg
sbb
add
mov
fs
fisttps
push
popf
adc
mov
cmp
dec
add
fsubl
push
outsb
mov
lock
sarl
cmp
add
pop
mov
negl
jmp
pop
cmc
movsl
mov
orb
enter
fcomp
sarb
xorl
pushw
push
push
pushf
lea
into
rcr
sarb
andl
idiv
sbb
pushf
aas
int
es
iret
push
pop
dec
xor
stc
mov
add
mov
ja
fs
addr16
outsb
out
cwtl
daa
test
jmp
mov
mov
xor
mov
cmpsl
mov
xor
ja
fisubl
xchg
mov
hlt
xor
in
cmp
ja
push
cwtl
cmp
mov
insl
cmc
or
repz
out
stc
jp
enter
jl
cli
scas
jl
add
fcomps
cmp
push
outsl
lahf
push
aas
bound
dec
imul
in
adc
ljmp
pop
repz
jmp
clc
repz
addr16
iret
incb
mov
ret
lock
les
adc
out
loop
jge
sub
adcl
loope
int3
adc
xor
fs
int3
mov
lret
mov
mov
xchg
inc
das
push
out
ficompl
dec
setl
mov
mov
sub
inc
lds
mov
cmp
jmp
lods
ds
or
cmpb
push
shll
mov
jnp
lods
int3
add
mov
aas
adc
aam
fmul
outsb
mov
push
shl
add
lret
lea
sub
cld
pop
sub
aaa
fists
mov
jmp
fwait
cmp
cmp
add
imul
insl
mov
xchg
aam
adc
jp
adc
pushf
sub
rcr
xchg
mov
pop
test
insb
jnp
outsb
jbe
jmp
test
into
fdiv
jae
mov
daa
ret
xor
out
push
imul
and
or
mov
negb
inc
in
or
push
inc
sbb
sub
adc
lahf
sub
xorb
ret
iret
lret
push
sub
mov
ret
mov
shrl
or
pop
pusha
les
xchg
ss
cltd
nop
mov
ret
in
fcmove
cld
sarl
imulb
cld
imul
pop
sbb
push
or
test
lods
outsb
mov
cmp
push
es
xor
leave
adc
add
jp
inc
lahf
test
out
mov
fs
xchg
cmpsl
ljmp
les
roll
jnp
jl
test
sub
pop
jmp
das
mov
mov
data16
pop
and
xchg
lahf
mov
nop
int
or
loopne
iret
sub
xchg
cmc
js
push
mov
jne
inc
pop
clc
mov
addr16
out
xchg
mov
mov
pushf
shlb
sub
notb
pop
and
sbb
fistpl
sbb
ljmp
inc
fildll
pop
leave
mov
shll
cmpsl
mov
call
jae
leave
shll
push
xor
push
adc
jnp
xor
rorb
sub
mov
out
inc
mov
pop
in
pop
shl
lahf
and
leave
cwtl
dec
mov
push
sub
sub
jo
mov
aaa
repnz
mov
or
dec
scas
fwait
test
bound
mov
pop
mov
and
pop
divl
jg
xchg
sub
sub
push
aad
loopne
sub
aad
xlat
dec
in
inc
call
mov
push
jne
mov
pop
inc
or
xor
fisubl
mov
cmp
rcll
insb
inc
jl
mov
scas
imul
jmp
leave
push
movsb
in
jmp
mov
dec
icebp
fstpt
dec
dec
pop
xor
add
test
jnp
adc
push
lods
shll
mov
mov
in
mov
dec
jne
imul
dec
jmp
aaa
xchg
dec
xchg
loop
jecxz
or
loop
mov
incl
aam
les
mov
pop
fcompl
dec
and
call
jo
mov
xor
mov
int3
adc
mov
push
rorb
mov
xchg
adc
mov
sbb
inc
sub
imul
dec
ljmp
mov
ja
outsb
dec
pop
in
fsub
orl
popf
ljmp
test
cld
jae
cld
out
push
cli
xor
fisttps
sbb
aam
pop
insl
dec
sub
sub
insb
cli
shll
mov
pop
int3
adc
jo
xchg
aas
hlt
out
push
in
leave
lock
xchg
pop
mov
adc
mov
mov
popa
mov
mov
je
xor
dec
and
push
cmp
sbb
insl
jb,pn
sbb
jne
shl
leave
outsl
clc
enter
pop
mov
and
stos
sub
push
movsb
sbb
xor
js
leave
xor
cmp
lods
add
push
adc
imul
mov
test
and
jl
or
fwait
push
cld
fiadds
mov
mov
dec
cmp
fimull
pop
repz
ja
out
cmp
rcl
test
dec
sbb
inc
stos
cmp
test
rolb
lea
mov
xchg
out
lds
aaa
ret
pushf
icebp
les
fwait
push
dec
mov
and
sub
inc
ficompl
mov
ja
jae
pop
mov
shl
mov
lock
sti
jp
mov
lods
cmc
ficoml
mov
sarb
dec
aas
xchg
imul
mov
pusha
stos
push
push
pop
filds
sub
cmp
mov
dec
cmpsb
xchg
xchg
loop
stos
xor
lods
jp
or
mov
popa
call
xor
mov
fucomip
pop
lret
pushf
imul
dec
sbb
or
aaa
or
jecxz
pushf
call
push
xchg
loop
sub
cmp
ljmp
addr16
jns
and
add
sbb
dec
lea
sub
cmp
cs
mov
shrl
push
aad
mov
repz
psubq
mov
in
jmp
or
aaa
imul
push
test
pop
push
ljmp
pop
popf
aam
imul
xlat
inc
ret
push
cli
movsb
xchg
fldl
int
rcll
jp
sub
mov
sarl
pop
and
mov
sbb
sbb
dec
gs
fmul
clc
test
in
push
call
push
xor
in
xor
sub
movsl
add
xchg
xchg
js
add
jne
lret
jge
xchg
xchg
add
mov
push
into
nop
xchg
mov
cmp
in
in
adc
pop
mov
adc
sbb
push
push
adc
out
shlb
les
cs
inc
lds
mov
xchg
outsb
les
sub
adc
es
sub
lods
hlt
cmp
push
push
fwait
xchg
and
mov
in
scas
sub
mov
stc
push
fisttps
jbe
inc
xor
insb
push
mov
mov
ds
sub
pusha
hlt
jae
mov
xchg
outsb
sbb
mov
push
mov
mov
addl
mov
xor
daa
push
outsb
ss
inc
stos
jno
out
gs
dec
test
dec
movsl
popa
jg
ret
into
das
sub
pop
pop
sub
or
mov
adc
adc
mov
bnd
imul
aad
inc
xor
fisubrl
mov
test
shrl
add
fimuls
inc
stos
xor
test
in
sahf
in
or
pop
dec
pop
aad
dec
lret
lret
fldl2t
pop
call
jnp
mov
cs
push
test
lea
lret
mov
xchg
jne
dec
xor
pop
loope
adc
mov
xchg
popf
and
sbb
cmp
gs
mov
mov
jl
outsb
or
daa
and
jae
push
adc
cmp
aad
or
xchg
inc
das
and
push
int
popf
dec
scas
cltd
mov
scas
push
jns
daa
repnz
lea
rorl
jg
int3
push
movsb
sbb
xchg
cmp
push
cmp
arpl
mov
shll
push
jmp
addr16
imul
pop
push
inc
shrb
or
sahf
dec
popf
and
pop
lods
lea
adc
idivb
dec
adc
jb
dec
xor
sbb
mov
xchg
dec
jns
mov
aad
jno
gs
adc
cmp
dec
xchg
dec
movsb
sbbl
or
movsl
pop
lahf
ss
sub
movsl
dec
pop
iret
out
movsl
mov
mov
scas
jns
stos
adc
pop
push
rcrl
aam
jmp
sub
jbe
ficompl
xchg
insl
fstps
out
mov
outsb
mov
mov
xchg
dec
dec
cld
add
outsb
jge
hlt
mov
test
cmp
int
aad
inc
hlt
jmp
out
lahf
add
inc
pop
adc
in
mov
push
sbb
adcl
push
or
mov
inc
adcb
scas
mov
cmp
dec
and
test
mov
mov
mov
pop
jnp
lret
sub
xchg
dec
xor
sti
int
pop
push
cmp
shl
jg
loopne
ja
fbld
lea
arpl
adc
push
sti
scas
xchg
ljmp
inc
dec
scas
push
repz
sbb
bnd
fnsave
and
jmp
fiadds
ljmp
xchg
dec
adc
sbb
mov
fwait
popf
pop
jne
insb
cmp
scas
sbb
adc
cmpsl
cmp
rcr
and
push
sbb
push
push
notb
andb
add
rcll
push
mov
push
loopne
sub
cmp
in
dec
leave
dec
les
pop
addl
fst
jno
cmp
xchg
dec
pop
jno
aas
push
adc
mov
ds
divl
cmp
iret
daa
daa
and
rcrl
or
adc
mov
jae
es
adc
es
enter
or
cmpsl
loop
pop
dec
sbb
and
xor
push
sahf
je
push
stos
shll
xchg
inc
in
sbb
xchg
cmc
ror
xchg
imulb
mov
xchg
pushf
mov
jns
jne
rclb
jmp
mov
aam
adc
inc
bound
push
movsb
jecxz
stos
dec
aam
repnz
mov
fisttps
xchg
jg
pushf
js
push
cmp
outsb
mov
jge
pop
popf
scas
push
outsb
imul
sub
fistpl
cs
cs
cmp
sahf
bound
dec
or
mov
jns
adc
aas
test
mov
xchg
ljmp
mov
pop
outsl
sub
inc
scas
sbb
xor
sbb
sarl
cmp
inc
pop
int
pop
ret
add
popf
into
ret
and
fldt
int3
mov
pop
stos
cmpsl
xor
pop
xchg
in
fstl
sub
cwtl
mov
mov
dec
pop
dec
mov
jo
cltd
jmp
movb
mov
ljmp
stos
jo
jmp
jne
xchg
cwtl
inc
mov
in
cmp
sub
mov
sbb
lods
aad
jo
ja
shlb
jns
jo
imul
jmp
fstps
imul
arpl
push
sbb
add
sbb
add
lahf
mov
cmc
lock
cmp
sub
mov
mov
lock
pop
iret
push
inc
pop
popf
data16
xor
in
mov
outsl
mov
aas
int3
repnz
mov
insb
cmp
int
mov
outsl
dec
mov
cmp
xlat
adc
cmp
cmc
aaa
pop
incb
int3
insl
xchg
push
loop
and
xchg
dec
negb
mov
iret
jae
out
fldcw
notb
jmp
dec
inc
jle
xor
jecxz
mov
fs
clc
jne
cld
pop
cs
addl
jns
lret
test
out
lret
mov
fwait
pop
test
xchg
scas
add
movsb
mov
pop
jmp
sub
sbb
mov
xchg
cmc
stos
mov
or
sbb
mov
mov
shl
sbb
inc
push
inc
enter
push
sub
call
and
mov
pop
mov
xchg
out
movaps
lcall
subl
mov
mov
outsl
mov
sbb
fstpl
xcrypt-ofb
cmpsl
insl
fisubrl
icebp
and
fcmovnbe
push
cld
movsb
cmpsb
cwtl
loop
mov
stos
fs
or
and
cld
mov
rcl
bnd
jns
push
mov
test
sub
jl
xchg
sub
jg
add
sahf
jg
mov
rorb
push
mov
fldenv
xlat
dec
mov
out
jae,pt
fistpll
pushfw
pop
jae
aaa
stos
vpmaxsw
daa
mov
sub
stc
xchg
in
add
out
xchg
cld
lcall
mov
ficompl
lods
inc
pop
or
cmpl
cmp
cmp
sarb
sbb
int
aas
in
into
stos
mov
jo
cmp
push
sbb
cmp
popf
aad
nop
mov
push
outsl
loope
or
gs
into
sub
cs
jecxz
jbe
fidivl
call
rcl
mov
mov
notl
mov
insl
mov
sub
mov
lret
adc
test
or
dec
xlat
ds
popa
aam
fstpl
and
insl
cmp
adc
gs
cmp
mov
xor
sahf
mov
cld
sahf
les
push
es
hlt
arpl
jmp
outsb
mov
pushf
cmp
mov
mov
mov
jo
or
pop
gs
pop
cwtl
xor
gs
jge
repnz
lods
mov
fwait
pop
es
scas
js
jecxz
mov
and
clc
rorb
lahf
dec
sub
cmp
loop
scas
popf
sbb
test
jne,pt
sub
jnp
cmpsb
push
jge
pop
ret
push
stc
sub
in
cmp
stos
push
call
cmp
leave
jnp
pop
sti
out
fistps
xor
xchg
push
mov
xlat
xchg
or
pop
ret
mov
lods
mov
inc
push
lods
faddl
or
pop
out
scas
jecxz
inc
push
mov
xchg
insl
rolb
out
aaa
aam
jl
cwtl
je
push
mov
lret
inc
cmp
les
adc
inc
pop
mov
mov
lock
add
adc
lds
dec
jne
test
imul
add
inc
lcall
call
sti
mov
repz
xlat
xor
les
fiaddl
mov
scas
cmp
in
loop
or
sbb
dec
jp
in
lret
test
push
push
cmpsb
fldcw
stos
cmp
in
shr
fisubl
or
jg
mov
addr16
dec
xlat
dec
stos
scas
sbbl
jbe
ljmp
out
adc
pop
aam
push
jmp
mov
dec
push
cli
xlat
xchg
shlb
fwait
push
and
das
leave
adc
pop
iret
jnp
movsb
mov
stc
xlat
push
xor
lods
mov
mov
fbstp
fstps
movsl
loopne
cmp
cmp
cmp
adc
inc
xchg
fsub
push
sti
test
cpuid
int3
mov
insl
xor
jns
test
popf
inc
dec
fcom
ret
cmp
add
xchg
outsl
pop
inc
inc
dec
mov
pop
push
push
nop
nop
shrb
xor
and
call
fwait
out
xor
pop
popf
push
cmp
pop
or
xlat
call
fisubs
or
rcr
loope
mov
and
mov
push
mov
sub
and
mov
mov
ja
cmpsb
pop
sbb
add
jg
mov
in
and
out
cs
mov
adc
dec
push
ds
cmp
in
call
xchg
adc
test
cmpl
ss
lret
pop
into
les
cmpsb
fs
xor
shlb
ss
mov
dec
sub
mov
dec
lds
lods
or
stos
ficoml
mov
mov
sbb
mov
popf
mov
sahf
cmpsb
imul
ja
ss
lahf
mov
sub
fisubl
lahf
or
divl
imul
and
insb
ljmp
mov
pop
ss
mov
cli
int
pop
add
mov
cs
lock
mov
or
jg
jae
lods
xor
negl
adc
cs
aaa
push
sub
cmp
pop
aas
mov
fbld
push
pushf
push
dec
in
or
mov
jnp
add
into
xor
mov
aad
sub
mov
and
mov
inc
cmpsl
pop
sarb
adc
mov
cmc
dec
in
fsubs
sub
jp
clc
mov
int
xchg
ja
imul
rorb
fdivs
push
pop
xor
lret
mov
cmp
inc
jmp
xor
lods
mov
into
dec
fdiv
xor
pop
popf
jecxz
ret
fcompl
mov
aam
jae
outsb
in
inc
das
lret
xchg
push
sub
pop
leave
xchg
ja
in
push
adc
jno
mov
sbb
faddl
sub
push
repnz
repz
loope
out
roll
rclb
xchg
movsl
push
in
aas
pop
and
mov
sbb
in
push
or
fistpll
insl
movsb
ss
das
adc
popf
lret
pop
fnstenv
dec
stos
xor
mov
and
jns
mov
in
or
lods
fstp
push
jnp
and
scas
mov
bound
push
cmpsl
dec
jae
sub
sbb
aaa
and
pop
into
xor
outsw
adc
rorl
iret
in
push
jae
cmpsl
inc
lcall
test
imul
outsl
sbb
clc
fwait
inc
xor
xor
mov
mov
mov
jl
push
xchg
stos
addb
lock
sub
or
sub
mov
mov
adc
and
and
sub
in
scas
or
scas
pop
push
mov
test
or
ds
out
and
jne
ja
dec
out
inc
pop
cmc
cld
mov
aad
sub
mov
loopne
mov
push
aas
xor
sbb
ljmp
imul
mov
xor
jnp
neg
out
aas
std
jmp
jne
ss
fwait
hlt
jecxz
repnz
and
mov
in
adc
loope
out
sub
push
loop
ss
fs
jp
xchg
cmpsb
fnstenv
dec
xchg
jge
in
pop
loope
and
cmp
arpl
jmp
fildl
lret
lock
jno
and
movsb
enter
divl
insl
sub
jecxz
and
mov
gs
cltd
pop
lret
jno
aas
cltd
fildl
repz
jecxz
xor
lcall
adc
jne
lock
cli
pop
movsb
xchg
mov
repz
ds
ds
in
inc
push
mov
je
out
insb
out
jae
mov
cmp
sbb
fsubp
and
pop
and
adc
clc
xlat
daa
mov
iret
xor
mov
lea
cmp
mov
cmp
fbstp
mov
ja
jae
mov
sbbl
and
jg
fisttpl
je
stc
cltd
pushf
jl
inc
xchg
adcb
pop
movsb
mulb
xchg
dec
xchg
pop
add
ss
inc
mov
mov
push
push
in
cmpl
dec
mov
outsb
cmp
out
cmp
sarl
lret
or
addr16
xlat
mov
enter
mov
mov
dec
stos
jno
jne
inc
dec
lea
and
movsl
hlt
inc
pop
adc
xor
sbb
push
sub
mov
mov
xor
xlat
xchg
and
adc
addr16
pop
sbb
insl
dec
cmp
mov
push
mov
mov
aam
and
jecxz
push
pop
fsubs
ror
fsubr
repz
ljmp
xor
pop
sub
fisttpl
adc
data16
movsl
adc
data16
mov
mov
jb
pop
xor
enter
push
xor
leave
lahf
mov
dec
mov
loop
mov
pop
cltd
cltd
mov
pop
ret
xorl
jge
outsb
sbb
sub
lock
add
mov
xor
data16
stos
outsb
push
xchg
dec
stos
out
in
push
gs
xchg
push
cld
sti
icebp
roll
stc
in
cmpl
je
lea
icebp
out
in
and
adc
push
dec
mov
push
mov
repnz
mov
add
adc
loope
lahf
xchg
adc
in
xchg
stos
pop
cmp
pusha
jns
mov
push
mov
stos
sub
lea
and
daa
andl
xor
or
cmc
pop
mov
mov
lcall
jnp
mov
in
jmp
jmp
jae
xor
push
xor
repnz
nop
and
inc
adc
outsb
xchg
jo
popa
cltd
cmp
mov
fsubp
jp
dec
jns
ljmp
es
cmp
adc
jne
pop
dec
fcoml
cs
pop
push
mov
ja
repnz
loop
adcb
xor
mov
jecxz
stos
push
jp
aad
das
adc
inc
std
push
xchg
fs
jno
mov
push
aad
les
fs
rclb
addr16
cmc
mov
lods
mov
pop
jns
push
pop
xchg
jecxz
jl
push
enter
push
adc
cld
inc
icebp
cld
dec
out
xchg
pushf
out
aaa
push
fwait
dec
outsl
mov
pop
das
and
repnz
pop
jnp
mov
loop
test
out
xchg
push
scas
stos
outsb
fnstcw
insb
sbb
or
pop
test
or
mov
sbbl
push
aad
aam
ret
shlb
jns
adc
cli
sub
inc
sbb
sub
cmc
mov
or
mov
mov
mov
xor
mov
push
jmp
insl
push
push
adc
push
sbb
std
mov
or
xchg
pop
cs
mov
stos
lcall
loop
movsb
mov
lods
xchg
icebp
mov
dec
fistl
sub
loope
mov
dec
pop
rcrl
inc
das
mov
out
call
or
scas
push
xor
and
jae
das
mov
stc
cmc
sbb
frstor
ds
out
arpl
inc
pop
mov
test
cmpsb
insb
pop
add
or
mov
pop
sbb
je
inc
xor
enter
mov
cli
pop
nop
mov
and
sub
jns
mov
fsubr
inc
jmp
mov
jne
pop
shll
cmp
adcl
xchg
lret
cmp
arpl
ja
jmp
stc
mov
cmp
popf
cmp
rol
dec
lret
int
pop
test
xchg
pop
and
mov
jg
imul
movsl
loopne
xchg
xor
das
mov
mov
push
je
sub
lret
jb
fcmovnb
mov
repnz
fsts
and
pop
in
mov
jbe
stos
in
xor
call
fwait
inc
or
push
pop
dec
jb
jle
inc
cmp
push
loopne
cmp
pushf
sbb
lret
lahf
pop
arpl
xlat
insl
xor
aad
inc
out
les
pop
or
push
dec
jne
lock
iret
imul
sbb
xchg
push
popf
mov
aad
and
jl
mov
pop
adc
repz
lahf
xchg
notl
mov
or
je
and
psllq
mov
ds
scas
inc
ja
shrb
ret
imul
mov
xchg
loopne
lods
notb
mov
fisubrs
bound
sbb
mov
sbb
mov
mov
jl
out
orl
mov
rcrb
mov
fs
xchg
in
mov
scas
pop
mov
dec
aam
sbb
cmc
and
sub
addl
xlat
or
into
es
push
pop
fldl
adc
dec
push
xchg
lahf
xor
pop
popf
mov
xlat
hlt
pop
add
repnz
repz
insl
dec
add
imull
inc
aaa
addr16
mov
jmp
mov
imull
call
stc
and
int3
shll
insl
push
outsb
mov
scas
fstpl
cmpsl
outsl
int3
mov
in
in
mov
jo
sbb
test
sbb
loop
mov
daa
sbb
pop
sti
pop
cli
loope
insb
mov
cltd
inc
and
stc
push
or
inc
push
lcall
push
fs
dec
cmpsb
push
sbb
cli
aad
cs
gs
or
notl
mov
fs
int
cmp
loop
dec
xchg
mov
js
jnp
push
jle
pop
sub
dec
ds
hlt
mov
fwait
mov
xchg
test
xor
mov
je
push
fimull
dec
xchg
add
mov
cltd
jge
jle
xchg
or
outsl
cli
fwait
leave
mov
iret
shrl
out
pop
jp
sub
out
lods
andl
inc
jb
aam
jecxz
imulb
pop
dec
cmpsl
fs
pop
cmp
scas
fnstcw
jbe
sub
add
or
cltd
int
clc
mov
lock
cmp
mov
add
js
and
jns
mov
stos
mov
mov
je
cmp
out
int3
cmpsb
insl
mov
repnz
ret
shrl
mov
mov
aad
sti
mov
insl
add
jnp
rorb
sahf
fbstp
arpl
and
dec
jne
cld
iret
xor
xchg
icebp
pop
lret
inc
shlb
adc
outsb
cmp
lods
je
push
push
imul
ficompl
movsl
rcrb
mov
jmp
loope
cmp
cs
and
jmp
jno
imul
jne
xchg
outsl
loopne
mov
stos
pushf
mov
cwtl
movsb
in
ja
sub
add
mov
jmp
filds
jb
in
push
mov
push
es
out
mov
adc
cs
sbb
mov
out
mov
inc
jno,pn
mov
jp
xlat
mov
jbe
push
mov
hlt
mov
fsubr
sub
sbb
cmp
movsl
bound
loope
fsubp
sub
mov
jno
aam
shl
cli
jle
jbe
adc
and
sbb
mov
subb
out
mov
dec
adc
pop
scas
xor
inc
fsubl
or
frndint
sahf
subl
pop
and
xchg
fisubl
jne
addr16
jnp
daa
mov
arpl
mov
arpl
test
cmp
in
ja
cmp
mov
mov
xor
mov
filds
inc
negl
loope
gs
xchg
add
and
sbb
add
out
mov
push
xchg
rcr
mov
push
in
call
push
dec
mov
ret
popf
or
inc
xchg
fmul
iret
je
call
cmp
mov
fldl
mov
adc
pushf
mov
jno
negl
jmp
jo
xlat
out
mov
shrl
push
push
mov
outsb
lahf
add
pushf
fs
nop
inc
pop
mov
gs
icebp
or
add
lds
iret
je
fs
push
aad
aam
cmp
cmp
mov
adc
pop
loopne
aas
shl
cwtl
pushf
mov
xchg
decl
and
int
faddp
push
pop
xchg
cld
mov
pop
shl
pushf
cmp
jle
into
mov
int
dec
and
popa
dec
in
push
imul
nop
mov
jb
add
sbb
or
pop
inc
jne
stos
imul
sti
sti
xor
sub
cmp
mov
jge
fidivl
enter
int3
push
es
daa
mov
lea
adc
int
inc
mov
sbb
adc
insl
xor
mov
sti
mov
mov
xor
in
jae
rcr
jae
ds
jle
and
test
jbe
popf
jecxz
in
xor
push
adc
mov
les
xor
dec
sbb
inc
pop
jo
xchg
mov
mov
and
out
bndstx
out
hlt
cmc
ja
push
mov
xor
in
popa
ret
jbe
mov
fwait
loopne
mov
push
or
sbb
inc
add
cmp
inc
nop
mov
cmp
fwait
jb
or
jae
pop
rol
sbb
out
pop
xchg
es
imul
scas
icebp
jp
lods
cmc
fsts
in
insl
movsl
adc
imull
jnp
inc
es
stos
mov
arpl
cmp
daa
aad
gs
frstor
jnp
and
aam
sbb
popa
cli
mov
or
cld
mov
jb
jl
adc
icebp
jl
jmpw
jle
int3
jle
jno
loope
movsb
xchg
mov
cmpsl
out
sti
mov
mov
inc
shll
mov
dec
jne
mov
mov
imul
loopne
enter
addr16
push
pop
mov
pop
outsb
mov
ret
jp
sbb
pop
pop
xchg
xchg
cmp
in
xor
jne
ret
enter
push
clc
adc
sbb
sti
mov
popa
or
loop
outsb
mov
daa
dec
pop
lods
out
inc
gs
loopne
jnp
push
sahf
jmp
jmp
out
dec
jno
jno
outsl
pop
inc
cmpsl
jge
sbbl
sbb
loop
pop
pushf
mull
retw
or
shl
negl
pushf
shrl
sbb
sti
jp
lds
lret
dec
lds
cmpl
fidivs
xchg
jnp
jecxz
iret
xor
out
mov
int
dec
out
cmpsl
rolb
leave
fisubs
imul
jp
out
insb
loop
xchg
and
cmp
outsb
or
fmul
pop
lea
aaa
mov
mov
scas
mov
outsl
lods
add
movsl
aaa
mov
icebp
mov
mov
outsl
mov
loop
mov
call
dec
imul
insl
aaa
xchg
aaa
mov
xchg
jmp
fstpt
mov
dec
in
sbb
fsubrl
dec
mov
and
arpl
push
and
int
shr
fstpl
scas
or
xchg
mov
adc
std
mov
sbb
pop
icebp
jl
gs
scas
shr
jno
fistpl
notl
push
xchg
aaa
adc
pop
test
jno
in
shll
stc
nop
mov
mov
add
inc
add
push
or
add
or
fsubrs
push
jle
add
add
add
and
popa
jns
rcrb
or
add
aaa
add
mov
les
stc
cmp
sarb
and
xchg
pop
jle
cld
addr16
dec
cli
jg
jnp
inc
dec
sahf
xlat
repz
mov
mov
fbld
stc
loope
sub
or
popa
sub
dec
call
test
jne
mov
mov
push
and
xor
enter
pop
or
mov
inc
sub
add
add
add
bound
xor
push
cmpsl
add
push
xor
jo
add
jae
sub
outsl
add
push
add
or
rol
cmp
add
subb
adc
shlb
cld
or
add
sar
adc
add
add
or
pusha
mov
popa
adc
add
subb
pusha
push
add
add
push
add
xchg
add
xor
mov
adc
sub
ret
add
and
loopne
inc
ret
cmp
cmpb
addb
xchg
add
mov
add
inc
and
adc
adc
ja
mov
xadd
and
andb
xchg
and
add
hlt
and
mov
ret
add
dec
add
add
inc
or
add
stos
add
insb
insb
jo
jp
roll
push
add
mov
mov
or
enter
sub
loopne
adcl
add
clc
or
adc
mov
aas
add
and
addb
int3
or
mov
xor
cmovo
mov
and
or
add
add
and
shll
popa
adc
inc
nop
inc
add
push
imul
jns
and
pusha
xchg
add
push
add
dec
add
or
loope
adc
out
push
shlb
xorl
lahf
cltd
fiadds
aas
xor
bound
or
jge
adc
adc
and
stos
in
cwtl
dec
dec
jg
adc
divb
push
mov
push
and
xchg
cmpsl
or
test
leave
add
mov
imul
or
add
fimuls
add
or
cli
stos
mov
push
add
cmp
orb
cmp
xchg
or
mov
ret
in
ja
lret
mov
repnz
add
rcrl
inc
xor
addl
mov
loopne
or
add
cmp
mov
inc
xor
xchg
ja
or
lock
sub
nop
subl
subl
jbe
inc
jmp
jp
jecxz
and
std
mov
and
ja
mov
mov
push
pop
adc
pmulhw
mov
idivl
incb
cld
mov
std
lds
inc
sbb
loop
push
sahf
sahf
rcl
sahf
dec
sbb
popf
jo
pusha
sarl
hlt
flds
inc
inc
clc
xchg
cmp
xor
icebp
in
pop
outsb
clc
jle
repz
mov
cmc
je,pt
mov
ss
pushf
pop
faddl
popf
add
cmpsb
xchg
mov
sub
outsl
loopne
pop
jmp
in
in
sub
dec
rolb
repz
mov
scas
mov
test
ficomps
out
cld
mov
xchg
mov
filds
adc
hlt
and
sub
jb
xor
push
cmp
shll
out
mov
jb
add
xchg
divl
xchg
testl
clc
out
movsl
xchg
add
outsl
jmp
pop
and
imul
repnz
mov
and
repz
jb
inc
jo
mov
lret
icebp
dec
dec
mov
add
hlt
mov
sub
sub
repnz
cmp
lea
shrb
imul
cmp
not
pop
jb
jae
lahf
xchg
lock
adc
pop
push
les
and
sarl
dec
clc
mov
mov
sub
and
xchg
je
xchg
mov
movsl
adc
rclb
cmc
xchg
xor
das
fisttpll
push
mov
mov
nop
mov
das
lods
or
dec
mov
repz
data16
movsb
or
add
mov
cltd
inc
sub
nop
dec
or
movsl
xor
dec
and
and
fdiv
jmp
adc
and
xchg
sbb
mov
push
mov
xor
pop
mov
mov
ja
int3
and
jle
xor
xor
or
or
add
stos
jo
sahf
mov
dec
xor
lret
mov
loope
mov
pop
xor
sub
pop
sub
loop
sbb
adc
ds
imul
and
mov
clc
add
fisubrl
jb
cmp
data16
iret
inc
xchg
roll
les
out
push
leave
sub
in
imul
mov
test
pop
shrl
inc
add
add
xor
mov
pop
lock
push
xchg
leave
dec
sbb
pushf
dec
push
rcrb
pop
inc
sbb
mov
int
pop
in
popa
sub
adc
or
fmuls
jl
mov
lods
arpl
test
call
hlt
je
popa
pop
or
push
enter
xchg
arpl
fs
rclb
xchg
test
aam
pop
adc
pop
lret
mov
psllq
ds
enter
fwait
cmp
and
push
gs
xor
push
pusha
inc
repnz
inc
dec
lret
pop
sub
orl
mov
cmc
mov
fisubl
nop
lods
pusha
inc
mov
push
jle
push
jle
and
sub
aam
pop
sti
jg
or
dec
jae
xor
push
movb
movsl
pop
push
cmp
pop
pop
out
mov
mov
adc
xchg
mov
mov
or
or
mov
jl
xchg
sbb
rcrb
out
in
mov
jnp
mov
fcmovbe
adc
pop
movsl
aas
repnz
add
cwtl
mov
ret
or
and
shll
or
scas
sub
xor
sbb
xor
or
scas
mov
jns
bound
aaa
std
lret
popf
mov
cmc
imul
into
sbb
stos
daa
lods
mov
int3
test
test
int
pop
sbb
std
cmpl
jp
cmpb
sbb
cmp
aam
jb
or
repz
fildl
mov
jecxz
rcll
lds
imul
push
push
inc
dec
or
aas
bound
outsb
sub
daa
int
sbb
mov
jmp
jb
jmp
and
in
inc
subb
or
pop
mov
sti
gs
mov
imul
and
or
inc
leave
add
int3
pop
xchg
lods
pop
mov
out
sub
push
mov
loope
mov
sub
aaa
push
arpl
into
aas
sub
mov
xchg
mov
insl
mov
mov
mov
je
mov
pop
inc
jp
mov
test
and
stos
sar
push
sbb
ret
test
test
mov
jns
fwait
and
lcall
popa
and
push
or
rcl
mov
cmpsb
and
movsl
pop
xchg
push
pop
xchg
ret
mov
insb
pop
orl
dec
mov
jl
dec
xor
mov
leave
add
xchg
shlb
ret
ljmp
xor
dec
pop
enter
push
mov
dec
push
xchg
xor
xor
mov
xor
mov
addr16
fistpl
test
pop
inc
jbe
lret
jp
push
and
xchg
xor
lahf
mov
nop
jge
sbb
dec
pop
je
stos
cmp
es
lret
fcomip
out
cmp
sub
adc
enter
out
adc
mov
inc
add
and
frstor
nop
dec
adc
ja
movsb
add
xchg
or
mov
push
in
mov
fxam
sahf
pop
out
xor
mov
sar
jl
mov
pop
add
sahf
mov
cmp
pop
mov
mov
stc
pop
pop
fistps
pop
push
ret
sbb
addr16
adc
movsb
sub
push
add
add
inc
test
inc
jp
and
push
pusha
lret
hlt
sub
xchg
in
in
mov
mov
mov
fisttpll
sbb
jb
imul
push
fs
outsl
jmp
lret
insl
adc
mov
xor
clc
xlat
mov
pop
aad
nop
and
xchg
movsl
es
in
lds
mov
jmp
loope
adc
jb
mov
loop
fdivrl
mov
lcall
loop
test
cmc
cli
ss
cmp
fninit
into
rol
shll
inc
jbe
insl
sti
loop
cmp
add
sar
jnp
pop
lret
ffreep
pop
das
fwait
ja
xchg
jge
outsl
jae
xchg
jbe
push
lods
ss
xchg
sub
in
pushf
xor
cmp
jge
mov
jae
ret
pop
imul
mov
adc
jb
les
mov
inc
ficomps
out
mov
inc
adc
divb
les
pop
adc
adc
cmc
das
add
inc
mov
mov
pop
stos
cs
mov
repnz
cmp
pop
pop
mov
inc
sbb
mov
xchg
aam
int3
testb
jmp
loope
jg
out
jp
daa
cmp
ja
sub
pop
negl
mov
mov
test
xchg
js
out
or
shlb
stos
pop
int3
cli
arpl
push
scas
push
lock
pop
out
dec
pop
sub
cmp
adc
repz
subl
mulb
movsb
jnp
int
cmp
sub
scas
pop
mov
imul
pop
dec
push
cmp
push
pushf
cwtl
out
aad
movsl
dec
inc
xor
push
jb
or
cmp
push
repz
scas
pop
test
and
push
divb
js
mov
and
jp
rolb
jecxz
pop
jae
sarb
aad
es
out
sahf
or
inc
fstpl
inc
int3
and
jg
mov
aas
stos
push
adc
mov
pop
inc
pop
call
sbb
jbe
jne
add
dec
out
ficoml
ss
and
adc
into
mov
mov
fistpl
test
mov
push
icebp
les
pusha
insl
jp
cmp
movsb
sub
imul
cmp
inc
jne
cli
cmp
imul
loope
jg
sub
insl
dec
inc
data16
scas
jae
inc
stos
lahf
pop
lcall
dec
cmp
les
jp
gs
mov
jmp
inc
fldl
icebp
ret
aas
in
test
pop
dec
in
call
push
in
mov
jo
enter
int3
cwtl
jle
inc
sub
lret
dec
nop
pop
daa
loope
pop
inc
pop
fwait
gs
mov
or
and
pop
ds
es
shl
sub
push
pop
test
jl
sar
sbb
in
fcompl
mov
popf
sbb
call
add
xchg
int
add
lret
dec
leave
in
sahf
out
testl
sbb
add
ds
repnz
test
rorl
bound
xor
push
lods
sti
jb
or
jae
sub
ret
sar
in
int3
test
push
and
hlt
out
jmp
mov
rcll
jecxz
outsb
xor
xchg
arpl
and
and
and
mov
cmp
popa
mov
jns
mov
inc
xchg
or
call
sbb
or
leave
std
stos
xchg
fisttpll
mov
das
ja
jnp
fisttps
mov
mov
loop
push
mov
sahf
xor
stos
adc
cs
fnsave
mov
test
mov
inc
jg
sahf
and
mov
and
testb
call
jnp
ficompl
jle
pop
xchg
scas
lods
cmpsb
push
add
repz
lret
mov
inc
orb
js
hlt
sub
cmpsl
jmp
test
repz
aam
push
adc
inc
std
and
cltd
jmp
xor
neg
mov
movsb
fcomps
adc
cmp
xchg
sbb
outsl
mov
scas
dec
jge
xor
add
pop
lock
push
inc
push
int3
jmp
ljmp
adc
imul
mov
std
repz
movsl
outsl
sti
loop
sub
dec
jecxz
mov
xlat
push
rcrb
sbb
pop
pop
adc
mov
mov
mov
add
daa
xchg
jg
hlt
scas
pop
pop
xor
cld
arpl
test
xchg
mov
in
fucom
jne
repz
mov
dec
sbb
sahf
shll
jo
xor
rorl
mov
mov
dec
push
xor
inc
cld
aaa
shll
std
imul
mov
sbb
pop
ffreep
std
cmp
aad
push
cli
es
add
aad
add
push
dec
ss
pop
sbb
in
in
cmp
in
dec
loopne
shlb
mov
dec
jo
cmc
and
call
and
jnp
add
and
je
mov
xor
ret
ret
xchg
mov
sub
lahf
in
xchg
cmc
dec
xor
movsb
sbb
out
sub
insl
mov
mov
jecxz
test
jecxz
push
xor
imul
pop
or
mov
lock
jg,pt
sub
popf
dec
lock
pop
jecxz
ret
fisubs
stos
imul
mov
test
mov
push
and
mov
push
mov
cmpl
inc
popa
cmp
jb
into
loope
mov
or
add
loopne
bound
xor
xchg
cmp
and
fsub
sub
repnz
arpl
mul
mov
int3
mov
rcrb
push
mov
fidivs
pop
mov
insl
sarb
xlat
sub
repz
aaa
dec
repnz
sahf
fs
imul
js
and
orb
loop
push
lret
mov
mov
dec
mov
or
outsb
negl
xchg
test
fmulp
fisttpll
jns
nop
in
adc
mov
ficoml
data16
sarl
test
xor
push
shlb
and
fistps
cmp
sub
shll
loop
mov
jl
jge
jae
jmp
les
pop
pop
xchg
mov
pop
dec
inc
mov
mov
and
out
in
cmp
aas
out
push
gs
scas
mov
hlt
xor
inc
sbb
lea
mov
cltd
xchg
push
cmp
in
inc
ja
adc
aaa
out
dec
sub
or
outsb
inc
cmpsb
sub
xor
sarl
mov
push
and
or
push
js
dec
pop
sub
mov
sbb
or
outsb
out
jmp
sub
cmp
xchg
scas
inc
cmpsb
icebp
dec
pop
pusha
sub
mov
cmp
sbb
jb
or
dec
outsb
in
idiv
xor
add
aaa
cmp
fwait
andl
cli
dec
in
enter
int
je
mov
data16
adc
and
sub
int
es
js
fisubrl
xchg
dec
sub
test
ss
in
push
je
mov
dec
imul
pop
and
call
xchg
pop
repz
cmp
pusha
adc
jbe
rclb
add
repnz
mov
add
lea
sbb
push
outsl
sbb
cmpsb
scas
popf
adc
mov
or
clc
add
pop
add
mull
in
xchg
out
cwtl
repz
push
iret
jp
sbb
dec
inc
pop
mov
and
inc
das
popf
mov
pop
in
stc
clc
pslld
sbb
dec
sahf
mov
xor
dec
xchg
cmc
stc
jecxz
xchg
and
xor
data16
aam
test
sub
cli
fmull
jnp
dec
cmp
fistpll
cwtl
xchg
fisubl
inc
xor
mov
mov
shrl
subl
mov
jns
push
cltd
insb
data16
fs
add
push
pop
pop
iret
jg
push
push
and
jno
mov
lret
mov
inc
push
inc
mov
enter
sahf
ljmp
popf
mov
in
jp
dec
mov
test
mov
or
stc
dec
ficoml
dec
sahf
out
add
stc
fcoml
add
notb
shll
pop
daa
nop
add
push
addl
repz
loop
in
filds
inc
mov
push
push
push
xlat
loopne
clc
or
dec
cli
mov
out
and
sbb
in
idiv
xchg
dec
add
and
xlat
inc
push
movsl
cld
add
rclb
sub
pushf
stos
sbb
test
ds
jne
mov
es
mov
add
shlb
aam
loopne
jl
sbb
es
daa
test
fcmovnu
or
out
pushf
inc
or
xor
js
test
hlt
insb
ss
arpl
aad
add
xchg
adc
fsubl
das
lock
jbe
pop
ja
push
scas
mov
add
dec
jno
stos
enter
add
mov
mov
cmc
jmp
xchg
leave
lods
adc
cmp
jle
lahf
bound
push
out
mov
fcmovnbe
push
pop
cmp
jae
call
cwtl
ja
push
sti
and
xor
mov
mov
sbb
jb
scas
lret
aas
cli
mov
push
xor
dec
mov
pop
loope
addr16
sub
cmpsb
sub
mov
xchg
sbb
call
fistpll
fs
sub
test
add
adc
repz
shrl
clc
aad
jnp
pop
sub
test
xchg
jae
scas
js
xor
push
push
push
add
jle
push
movsb
nop
leave
jbe
xchg
cmp
cmpsl
movsb
and
add
dec
pop
and
arpl
jmp
icebp
dec
jae
adc
icebp
mov
push
fcmovne
sub
mov
and
repz
push
mov
and
push
add
sbb
sbb
inc
add
cmpsb
ficomps
adc
pop
mov
xchg
inc
inc
push
mov
fsubrp
stos
outsl
pushf
sub
xchg
mov
xor
clc
mov
lods
in
and
enter
xor
jmp
lds
out
mov
add
out
mov
imul
mov
punpcklbw
fimull
inc
repnz
cli
cmp
cmc
out
jne
jno
jb
add
lds
xor
pop
leave
pushf
cmp
push
mov
xchg
cmp
add
pop
inc
lock
push
ret
jbe
lret
and
pop
jmp
mov
mov
dec
jmp
and
orl
jae
dec
jb
mov
in
cmp
and
xor
or
pop
add
mov
pop
jns
lods
into
push
jg
xor
adc
sub
inc
gs
dec
lds
cwtl
adc
inc
jge
out
pop
pop
sub
jmp
mov
jb
dec
dec
xor
lret
aas
mov
sti
xchg
pop
push
pop
sub
jno
stc
and
cmp
cmp
ja
jno
cmp
gs
decb
and
outsb
dec
and
ja
mov
fs
sarl
ljmp
icebp
scas
pop
xchg
jecxz
sbb
test
andl
out
dec
pop
das
aad
daa
pop
mov
jae
inc
movsl
sub
jbe
mov
or
pop
pop
xchg
mov
outsb
push
mov
cmp
imul
and
enter
xor
jbe
push
xor
cmpsb
fnstsw
cmc
cmp
lea
push
ret
icebp
movsl
out
fdivl
cmp
push
jmp
mov
xchg
fisttps
mov
lock
mov
adc
cmpsl
in
jo
or
repz
inc
jmp
fdivrs
pop
xchg
scas
in
dec
aas
dec
pusha
add
pop
dec
jl
and
xor
inc
xchg
fwait
ljmp
sarl
sbb
rcrl
cwtl
or
adcb
rclb
ret
mov
sbb
jle
ret
cwtl
and
mov
nop
lret
insb
cld
movsb
jmp
scas
aas
pop
cmp
and
test
cltd
fnsave
sarb
lods
cld
loop
rclb
cmp
xchg
fidivrl
xchg
xor
pop
in
jb
neg
imul
adcb
nop
in
nop
cwtl
jo
add
mov
pop
mov
lret
add
xchg
nop
testl
outsl
sub
mov
mov
lahf
stos
pop
sub
int3
jae
stc
inc
and
sub
mov
stos
popa
aas
xchg
das
cmpsb
inc
sti
xchg
xor
loopne
xchg
lretw
stos
sub
xchg
jne
pop
cmpsl
lret
dec
push
fsubrs
mov
jns
std
lea
enter
pop
sbb
mov
jae
out
cmp
in
arpl
xchg
ljmp
adc
jecxz
sub
xchg
xchg
pop
cs
cmpsl
mov
mov
mov
test
pop
mov
xor
aam
out
xchg
insl
sub
std
popa
clc
xor
js
dec
hlt
or
and
jle
outsb
xor
sub
cli
int
cli
dec
orb
inc
lret
icebp
outsb
cltd
arpl
lret
sub
push
rol
loopne
adcl
cmpl
inc
in
inc
mov
and
test
mov
insl
push
imul
sbb
dec
adc
xor
js
mov
push
sbb
test
mov
push
cltd
insl
not
adc
stos
sar
fwait
xor
movsb
pop
std
dec
dec
pop
push
fwait
pop
out
xchg
sub
cmp
not
mov
adc
addl
cmp
ret
or
bound
in
ljmp
lock
and
adc
adc
lods
subb
andl
add
inc
rcll
je
jo
and
popf
movsb
cld
pop
pop
sbb
sbb
iret
dec
jmp
sbb
nop
pop
or
mov
in
daa
dec
out
shrl
rclb
jns
mov
push
fdivs
mov
mov
xorl
lods
sbb
cmp
push
ljmp
mov
rcrl
sar
mov
std
test
mov
sub
push
jbe
in
dec
out
pop
jmp
lahf
add
xchg
ror
sbb
cwtl
lcall
mov
push
cmpsl
jp
outsb
lock
out
lea
mov
sti
pop
jo
mov
adc
cmpsl
ret
add
push
sbb
cwtl
js
into
scas
mov
pop
outsb
jo
pusha
add
in
mov
xchg
leave
js
mov
xchg
fsubr
push
out
aad
jp
sbbb
loope
imul
sub
sub
lret
add
call
ljmp
addr16
jae
fsubrl
push
jnp
sahf
das
call
push
outsb
repnz
into
inc
stc
sbb
cmp
rolb
sbb
push
push
mov
push
addr16
test
rolb
notl
pusha
and
xchg
popa
push
add
insl
mov
adc
jne
fadds
inc
movsl
or
hlt
xor
pop
push
xchg
pop
aas
mov
and
mov
stos
sub
cmp
push
jmp
lea
ss
int3
sbb
shlb
stos
hlt
adc
pop
adcb
add
mov
jns
and
xlat
into
andl
mov
xor
popa
jge
add
jmp
xchg
idivl
icebp
mov
scas
out
add
ljmp
and
ja
cmpsb
jo
push
pop
enter
xchg
gs
je
loop
xchg
fisubl
dec
inc
inc
inc
add
ss
adc
pop
cmp
push
push
mov
arpl
cmp
int
lods
and
pop
jmp
push
jns
sbb
popa
adc
mov
hlt
jae
in
xor
add
and
push
mov
lods
mov
negb
ret
les
mov
inc
xchg
popa
mov
sahf
loope
xor
or
adc
aad
in
leave
fstps
push
loopne
add
into
ds
shrb
sbb
in
xchg
fucom
push
xchg
leave
mov
xchg
lock
aam
shrl
imull
ja
jne
pop
push
sub
jbe
cwtl
jae
stc
dec
shrb
popf
jne
push
dec
mov
xchg
and
js
out
cwtl
add
pop
sbb
gs
pop
mov
xor
add
js
sbb
lods
jmp
pop
in
imul
repnz
jne
mov
jb
cld
or
jl
popl
sub
leave
jno
in
mov
add
lds
cmp
jp
sbb
decb
int
push
daa
jno
sbb
jne
pop
outsb
or
addb
fisttps
gs
inc
hlt
add
repnz
fcoml
shrb
xor
fwait
lret
scas
outsl
xchg
pop
xchg
dec
ficoms
push
xor
push
adc
push
xor
pop
js
mov
aas
movups
dec
test
push
xor
cmp
or
je
mov
inc
jp
xorb
data16
jns
and
mov
cwtl
popf
xlat
xchg
xchg
mov
outsb
fstl
fidivl
or
pop
fisubs
and
stos
adc
out
pop
jmp
ss
cmpsl
cmp
ret
sti
and
nop
nop
jp
or
jno
test
pushw
mov
inc
xchg
mov
cmp
jb
mov
mov
xchg
in
xchg
lahf
xchg
add
shrb
sub
sahf
int
clc
mov
stc
imul
mov
rorb
mov
adc
aad
imul
lods
ja
mov
push
negl
out
mov
dec
mov
pop
and
in
adc
add
push
arpl
push
adc
mov
mov
inc
jecxz
sub
mov
cmp
repz
pusha
push
inc
arpl
fidivrs
cwtl
movsl
into
cmpsl
jl
sbb
adc
je
les
pop
sbb
fiadds
add
cli
addr16
pop
daa
xchg
insw
mov
adc
push
inc
and
jb
pop
imul
outsb
fs
inc
add
imul
in
mov
inc
in
cmc
fs
xlat
cmpsb
adc
aam
dec
add
fwait
push
cmpsl
outsl
mov
add
hlt
add
mov
sbb
push
jns
rcll
dec
mov
xchg
sbb
sbb
pop
sub
clc
mov
cmp
xchg
lea
aaa
lds
dec
imul
dec
int
mov
jnp
mov
mov
pop
add
mov
in
cmp
mov
call
pcmpeqb
add
mov
test
sub
jg
add
test
jno
inc
jle
pop
mov
sub
jb
mov
jb
ja
sbb
and
sub
clc
out
shll
cs
fiaddl
adc
dec
cwtl
and
mov
js
prefetchnta
and
loopne
hlt
stc
mov
aaa
xchg
mov
or
add
iret
xlat
sahf
inc
mov
pop
in
mov
mov
xchg
scas
orb
pop
xchg
dec
or
mov
out
jge
jg
pop
out
sbb
pop
push
rcll
mov
loopne
mov
push
push
mov
outsb
out
addr16
sbb
dec
lods
js
aaa
ja
jp
addr16
nop
add
add
incl
ljmp
test
push
ljmp
es
inc
jnp
mov
mov
sub
fcompl
iret
pop
dec
nop
pop
push
push
shrl
leave
lahf
sbb
sub
incb
lahf
xchg
movsb
push
aad
mov
jp
ja
fcmovnbe
mov
inc
stos
cmpsb
jp
adc
ret
hlt
cmp
mov
inc
imul
sbb
loopne
sbb
fsubs
adc
mov
push
mov
pop
jo
inc
mov
out
scas
inc
ret
mov
adc
mov
sbb
mov
cld
push
test
and
mov
sub
loop
lods
lret
divl
pop
lahf
add
leave
in
fs
and
cld
push
mov
push
xchg
mov
inc
out
loope
pop
cld
addb
gs
sahf
stos
xchg
stc
fdivs
hlt
popa
imul
xchg
subl
aas
inc
repnz
pop
dec
mov
pop
aam
incb
inc
pop
xchg
adc
adc
ss
fnstsw
insl
ret
je
adc
cmp
dec
mov
xchg
dec
out
mov
dec
fdivr
push
addr16
testb
in
test
adc
push
popa
into
jl
adc
lock
imul
push
xchg
jmp
xlat
xchg
cmc
mov
jmp
sub
jne
push
add
jo
add
mov
xor
test
push
popa
mov
sub
aas
sub
mov
arpl
stos
jg
inc
arpl
nop
je
icebp
push
push
adc
mov
stc
pop
pop
adc
cmc
pop
jle
femms
jnp
jmp
add
mov
xchg
dec
or
fdivr
pop
test
jae
pop
jae
jge
loop
pop
dec
shrl
xchg
sbb
in
and
cmp
push
jl
data16
aas
gs
fstl
pushf
adc
xor
into
dec
gs
push
push
aad
popa
aas
addr16
inc
or
pusha
adc
ljmp
inc
fisubl
push
or
lds
xor
xor
sub
adc
adc
cmp
imul
jp
jno
mov
pop
fstl
push
out
insl
mov
out
push
sbb
clc
fnstcw
scas
push
xchg
or
cs
enter
and
jp
sbb
cmpsl
adc
jne
sub
out
insl
add
dec
xor
test
jbe
inc
sbb
jge
test
jge
ret
out
into
test
sub
hlt
fnstsw
scas
xor
loop
stc
inc
cmp
or
loopne
faddp
les
stos
insl
pop
repz
sar
mov
subb
mov
mov
insl
xor
sti
mov
push
push
call
xchg
repnz
mov
insl
jb,pn
mov
adc
pushf
fcomip
shrl
insl
or
xchg
inc
out
adc
cld
mov
mov
dec
clc
mov
jecxz
imul
mov
stos
scas
cmp
pop
mov
push
int
pop
ret
cmpsl
in
fiadds
movsb
or
movsl
cmpl
xchg
in
test
jg
jmp
iret
jmp
ret
cli
data16
mov
xlat
icebp
and
nop
das
mov
out
pop
jge
mov
popa
push
mov
enter
icebp
cli
mov
fisttpll
lds
push
aas
and
cmp
clc
iret
icebp
mov
pop
jmp
xor
xchg
mov
jns
ss
xchg
xchg
rcl
add
mov
push
in
dec
xor
and
xchg
cmp
push
or
push
add
mov
lahf
or
bound
inc
incb
xchg
scas
jg
dec
mov
and
jecxz
cmp
add
out
dec
mov
loope
sbbb
in
or
mov
xor
xor
push
sbb
fidivl
clc
pusha
jne
adc
loop
push
sub
mull
jmp
pop
loop
push
rolb
lahf
aad
push
test
mov
jle
jge
sar
rcll
xor
push
int3
insb
jecxz
fdivrs
add
adc
jo
movsl
sbb
fs
xchg
add
or
into
or
dec
mov
or
add
aaa
mov
jl
xchg
xor
sub
leave
sbb
cwtl
mov
mov
fistps
sub
add
push
pop
xchg
pusha
pusha
aas
add
lods
shll
pop
mov
fwait
inc
aas
and
nop
adc
and
jb
js
fsubrs
call
jecxz
in
mov
push
mov
sbb
sub
loope
movsb
mov
ljmp
cmpsl
scas
lds
mov
icebp
mov
outsb
mov
mov
popa
sti
repnz
xchg
add
dec
dec
pop
add
scas
fildl
mov
mov
mov
pop
sbb
pushf
add
adc
movsl
js
or
cld
movsb
or
lods
and
movsb
pop
call
mov
or
and
jg
pop
xchg
dec
subl
or
xor
inc
xor
pop
aaa
popf
add
push
xchg
inc
mov
stos
imul
dec
popa
outsb
std
aam
adc
ds
or
popa
jmp
into
scas
loopne
std
pop
pop
adc
rolb
or
fistpll
inc
aad
lock
mov
xorl
aaa
dec
inc
cmp
cltd
and
inc
mov
sbb
cli
mov
scas
ja
fcomps
leave
jmp
outsl
mov
inc
stos
mov
inc
sub
jmp
rclb
icebp
outsl
in
mov
idivl
mov
sub
cmp
pusha
je
test
xchg
xlat
mov
mov
pop
sbb
insb
and
adc
sub
add
add
in
inc
cmp
adc
sbb
mov
subb
mov
mov
pop
es
inc
mov
fs
je
cmp
pushf
mov
inc
xchg
sbb
sbbb
addb
sbb
fsubrl
cwtl
xchg
and
mov
test
ljmp
inc
test
jmp
push
mov
test
insl
sub
xchg
fstl
std
aas
cmc
mov
out
adc
xchg
loopne
cmp
fwait
lock
add
sbb
aaa
out
std
inc
xlat
inc
xchg
push
jne
lret
pop
xor
enter
add
mov
jb
xchg
arpl
fcompl
xchg
and
jb
xor
and
ds
jp
aad
test
inc
cwtl
dec
and
aam
push
ljmp
inc
in
outsl
mov
or
daa
add
enter
sbbb
cmp
dec
imul
pop
lea
lds
inc
mov
dec
push
aad
pop
stos
push
jns
pop
mov
xor
lds
mov
js
push
dec
mov
mov
pop
pushf
jmp
sub
ret
jo
adc
setne
loopne
add
mov
lcall
or
inc
ffreep
add
mov
push
mov
mov
lret
repnz
jo
lods
inc
push
jl
dec
jge
pop
orb
inc
call
push
push
lret
cmp
or
mov
cmp
push
pop
es
jo
add
in
movsb
pop
in
daa
ror
lods
int3
or
pusha
stos
jmp
jo
repz
shll
xchg
jb
mov
aad
mov
pop
dec
cmpb
addr16
jp
push
stos
and
mov
jp
ja
call
dec
shl
push
stc
dec
sub
call
out
iret
jmp
or
adc
mov
ficoml
cltd
lahf
cmp
lea
outsb
pop
mov
pop
xorb
cmp
or
sbb
pushf
fadds
lcall
popf
aam
pop
popf
loop
lahf
and
fmull
cmpsl
daa
mov
cmp
and
icebp
hlt
pop
mov
mov
cmpsl
clc
sti
cmc
jle
cmp
or
mov
loopne,pn
addr16
pop
mov
mov
mov
aas
jmp
data16
add
push
push
xor
pop
adc
sub
sub
pop
sub
push
inc
inc
dec
inc
mov
mov
shrb
and
rcll
inc
add
and
inc
mov
sarl
int
int3
lahf
mov
xor
fnstcw
xchg
push
enter
sti
mov
sbb
jge
jmp
sub
sub
add
inc
sbb
xchg
cld
and
mulps
xor
std
aad
ds
xlat
stos
push
in
sbb
push
mov
xorb
int
lcall
mov
or
mov
mov
lods
push
push
cld
adc
cs
mov
negl
out
or
orb
adc
insb
les
dec
in
adc
add
in
or
aaa
loope
pop
sub
add
jge
xchg
jl
pop
jb
fld
stos
sar
xor
sbbb
sti
into
jmp
xchg
xchg
cwtl
inc
rol
lock
add
pop
test
jnp
mov
in
je
pusha
dec
test
fnsave
dec
mov
xor
andb
sbb
jne
repz
push
test
mov
xchg
cli
aam
push
mov
popa
icebp
aad
fdivs
inc
jecxz
subb
fmuls
xchg
mov
aas
daa
orb
lods
jl
aaa
jno
sub
xchg
lcall
shlb
mov
xor
daa
mov
icebp
jmp
imul
in
imul
xchg
stos
hlt
hlt
out
push
sahf
ss
sub
cmp
repz
jnp
dec
mov
data16
jb
cli
mov
pop
sahf
faddl
pushf
or
cmp
outsl
fwait
xchg
stc
std
mov
adc
dec
jb
sahf
jl
pop
enter
bound
outsb
fcos
inc
push
int3
xchg
inc
jae
xor
jo
fstp
inc
in
push
loop
call
fstps
addr16
xchg
fdivrl
mov
jmp
je
scas
sub
andb
add
es
xchg
cmpsb
enter
popa
pop
je
inc
pop
jne
out
stc
and
cmc
mov
in
or
in
imull
lahf
push
xchg
int
inc
push
sbbl
xchg
lret
jge
ficoms
std
sti
test
pop
iret
xchg
mov
addl
mov
pop
popf
in
jp
xor
repnz
add
fsubrl
sti
into
out
out
push
sbb
das
pusha
cmp
and
push
test
sbb
rcrl
imul
mov
enter
enter
dec
fucom
and
lds
aad
dec
inc
imul
add
fcoml
leave
jno
aaa
pop
jl
icebp
nop
popf
sub
shll
mov
out
sbb
cmp
sbb
sbb
dec
cld
dec
push
out
pop
stc
pop
int3
hlt
cli
mov
pop
and
cwtl
cmp
mov
bound
jl
or
jbe
movsl
fnstenv
push
dec
mov
in
sbb
mov
dec
ljmp
inc
jns
xor
ficomps
lea
shrl
dec
adc
add
mov
movsl
ss
or
push
dec
inc
pop
rcl
or
enter
mov
cld
add
lcall
mov
stos
fidivrl
or
popa
xchg
outsb
mov
out
mov
or
inc
dec
adc
jns
and
or
pop
dec
add
mov
dec
xchg
push
sti
add
cmpsb
dec
ret
std
jecxz
jg
cli
add
cmp
xlat
call
add
mov
xor
insb
mov
jmp
fimull
push
lds
in
out
inc
ret
xor
subb
push
mov
clc
xchg
arpl
outsl
cmp
std
xchg
pop
push
cmp
adc
push
sbbl
dec
aaa
repnz
mov
inc
aad
xchg
leave
jg
add
push
subl
std
popa
sbbb
push
mov
pop
iret
sbb
add
cmp
stc
dec
mov
dec
or
mov
push
pop
icebp
inc
push
fnsave
push
lcall
pop
test
push
jb
mull
fadds
xchg
pop
cltd
pushf
xor
adc
rolb
cs
jns
sub
fxch
test
scas
daa
cli
out
or
movsl
imul
fbstp
push
out
addr16
cmpsl
xchg
push
add
add
adc
xchg
test
jb
iret
les
jb
pushf
pop
xchg
jae
dec
lret
ja
push
inc
cmp
sbb
aam
mov
mov
adc
or
jbe
movsb
jmp
sbb
pop
xchg
or
mov
push
lock
iret
loop
sbbb
push
mov
shlb
push
ficoml
push
ds
out
stos
test
add
jmp
insl
ss
push
adc
and
cwtl
xchg
loopne,pn
add
out
pushf
xchg
jno
mov
sub
inc
xchg
xchg
loopne
scas
jecxz
call
mov
imul
push
test
sbb
push
and
pop
out
lret
dec
ret
xor
enter
push
stc
outsl
mov
je
aaa
sbb
adc
push
cmp
mov
cltd
ficoml
scas
pushf
popa
mov
ss
pop
jp
out
pop
jns
add
mov
xchg
mov
sbb
xchg
inc
out
mov
rcrb
mov
int
movsb
mov
xlat
fadd
ja
adc
pop
in
mov
je
fnstsw
xchg
mov
add
push
mov
fadds
and
inc
pop
aas
scas
das
stc
add
in
adc
fdivr
add
cmpsl
jle
mov
shll
cmp
push
lods
lea
aas
push
cmp
add
rcr
adcb
movl
add
jno
mov
mov
addr16
fildll
pop
cmp
cmpl
testb
ficomps
rolb
push
rcll
fdivl
out
stos
dec
lcall
adcb
push
dec
sbb
jp
lret
push
sub
jl
fistps
or
sbb
es
pop
cmpb
jg
inc
inc
push
lea
fsubrs
push
xor
xor
test
add
and
popa
or
loopne
lods
sbb
mov
mov
mov
idiv
sbb
das
jb
insb
lds
cld
add
sti
mov
adc
jns
push
insl
ret
in
xor
xor
push
es
insl
stos
mov
sbb
cmpb
xor
mov
inc
sbb
push
repz
rorl
and
ffree
rolb
dec
xchg
insb
sbb
push
adc
out
dec
daa
adc
iret
stos
or
push
lock
fcmovb
scas
cmpsl
stc
js
and
inc
jnp
and
jb
into
add
jle
fiadds
mov
cmpsb
faddl
add
bound
xchg
mov
lds
mov
repnz
xchg
jmp
xchg
pushf
andb
mov
js
or
test
mov
mov
insl
mov
push
cmp
dec
jge
mov
das
sbb
inc
adc
xchg
pop
paddd
idivl
pop
out
pop
mov
fildl
inc
jno
call
or
mov
pop
adc
int3
cli
cmpb
in
sub
inc
push
push
bound
cmpsl
pop
sbb
add
sbb
and
sarl
movsl
dec
push
lret
xor
in
data16
mov
xor
sub
and
mov
out
mov
sahf
lcall
mov
xorb
inc
mov
xor
pop
and
or
lock
sbb
test
cmp
mov
mov
cmp
add
out
out
mov
jg
xor
or
push
push
add
mov
jle
mov
push
cmp
incb
lahf
insl
loop
or
jns
cwtl
add
ja
jb
ja
fsubr
xor
jle
lret
stc
jge
xor
jl
push
imul
sahf
mov
inc
inc
and
push
in
mov
faddl
jmp
sbb
inc
mov
loop
nop
pop
fisttpl
sti
jge
jp
or
out
cmp
mov
ficomps
jmp
xlat
or
daa
fildl
lock
data16
inc
push
cmp
dec
repnz
cmpb
adc
xor
sub
push
pop
fbld
int3
lods
sahf
imull
test
aad
inc
push
xchg
xchg
adc
sub
mov
aam
repz
cmp
xorb
dec
stos
cmp
sbb
mov
test
cmp
outsb
test
in
arpl
gs
jb
ficoml
cmpsb
pop
loope
lods
ljmp
movl
or
adc
xor
cmp
out
call
movsb
pop
push
sbb
mov
lea
cmpsl
push
fs
mov
sahf
sbb
ljmp
jge
call
mov
imul
les
jmp
jnp
add
or
xchg
scas
and
mov
test
and
add
sbbl
mov
and
fbstp
inc
or
sbb
lret
xor
out
lods
cmc
les
imul
js
fistl
cltd
and
hlt
int
test
xor
xor
jae
cmp
sbb
xchg
push
mov
and
lock
mov
mov
or
dec
pop
xor
fwait
dec
js
or
mov
sub
hlt
fdivp
mov
xchg
mov
cld
dec
data16
iret
inc
daa
stc
lds
jl
sub
fscale
sbb
out
push
lahf
xchg
inc
xor
push
add
mov
shr
ss
mov
lcall
imul
xlat
aas
cli
pop
sub
pop
lds
inc
sbb
lods
cmc
stc
xchg
or
xchg
inc
push
stos
pop
leave
out
test
dec
xchg
adc
inc
push
fidivrs
adc
dec
sbb
mov
pop
into
jbe
mov
cmp
mov
movsb
mov
mov
mov
xchg
test
addr16
frstor
jg
mov
sub
in
push
hlt
adc
rclb
xor
fmulp
mov
push
pop
int
inc
iret
jmp
push
filds
inc
into
mov
out
jbe
and
fwait
push
scas
push
sub
cmp
mov
dec
cmp
je
mov
cmp
xchg
into
push
je
jmp
test
imul
lds
inc
fwait
mov
push
jne
mov
cmp
shll
ljmp
shlb
pop
jl
pop
ret
xchg
stos
repnz
cmp
xlat
and
add
push
add
push
and
xorl
mov
mov
sub
sbbb
sbb
and
xchg
loopne
daa
mov
dec
pop
adc
int3
inc
pop
jo
cs
and
xchg
and
or
add
adc
pop
rclb
pusha
mov
dec
dec
jae
xchg
dec
pop
lret
mov
dec
mov
je
out
fstps
inc
popf
inc
pop
fiadds
jmp
outsb
outsl
inc
outsb
out
aad
cmp
pop
call
sbb
jb
leave
fwait
xchg
jb
mov
jb
mov
sub
sbb
fimuls
scas
outsl
idiv
push
lret
push
iret
jg
pop
or
jge
mov
push
enter
mov
insl
imul
ficoml
push
mov
xchg
jg
fdiv
xchg
gs
mov
push
adc
sbb
sbb
repz
stos
rcll
jbe
test
jb
aad
jge
sub
dec
lret
cmp
out
xor
out
sbb
in
push
xchg
cmc
fdivrs
and
and
push
int3
shrl
ret
or
sbb
lahf
xchg
mov
xchg
pop
in
mov
pushf
xchg
xchg
cmp
push
hlt
sbb
adc
xchg
cld
cmp
lock
jns
cli
jmp
cwtl
xchg
mov
xor
inc
push
call
mov
push
pop
aaa
loop
jnp
dec
xchg
cmpsb
xor
mov
ds
xchg
jbe
or
mov
sahf
jl
pop
insl
icebp
add
fcomps
sub
mov
mov
cmc
test
mov
sti
cltd
push
fs
push
jmp
sub
scas
leave
out
and
sub
mov
inc
ret
or
add
push
inc
jbe
or
add
mov
test
jae
pop
mov
mov
sub
jnp
mov
lods
test
inc
or
or
xor
mov
mov
adc
pop
hlt
das
push
insl
add
pop
or
sbb
xlat
push
and
xor
xlat
xorl
or
push
jns
xchg
pop
sub
jl
jnp
mov
push
cmp
fidivrs
callw
es
insl
jns
mov
loopne
jl
sahf
xor
ss
adc
cs
stc
imul
fdivrs
xor
in
push
stos
xchg
xchg
pop
stos
cli
cld
jno
fucomp
lea
arpl
dec
lret
out
jmp
call
sub
xor
push
mov
and
mov
in
rcrb
aad
pop
inc
icebp
pop
mov
add
mov
push
or
push
adc
pusha
lods
mov
aaa
out
add
ret
loopne
fstpl
call
jp
mov
pop
pop
pop
repnz
jge
call
inc
cmpl
xorl
std
mov
insb
mov
in
pusha
in
ret
sbb
cmp
scas
inc
inc
sbb
in
push
int3
cmp
idivb
xlat
lret
mov
lock
shlb
dec
movsb
xchg
imul
push
mov
jb
dec
ljmp
loopne
xchg
idiv
andnps
jb
rcr
jae
jns
arpl
cmc
out
push
sub
aaa
cltd
pop
jo
sbb
push
pop
jb
es
pop
iret
shl
int
jg
mov
movsl
push
popf
ficomps
xlat
sub
pop
or
in
inc
cmp
pop
sbb
rcrb
int3
aas
adc
nop
push
mov
arpl
and
es
and
orb
or
cltd
imul
arpl
sub
les
push
leave
loop
mov
sarb
aad
sub
fnsave
mov
in
stos
jecxz
bound
dec
jb
call
fmull
andl
test
addr16
jae
out
jbe
test
inc
nop
call
add
xchg
mov
mov
jne
fldcw
cmp
pop
imul
pop
repnz
xor
je
jnp
outsb
rol
loopne
xchg
aas
pop
loopne
xchg
scas
lret
adc
and
clc
data16
mov
jmp
push
mov
mov
scas
mov
pmullw
bsr
xchg
movl
ja
jmp
and
std
cmc
cmp
mov
sub
sbbl
or
inc
dec
data16
imul
sbb
fstpt
sub
xchg
and
ss
arpl
mov
xor
not
inc
mov
inc
xor
and
inc
push
xchg
out
fnstsw
lods
adc
push
cmpsl
repnz
enter
xchg
movsb
mov
xchg
ficompl
sub
push
pop
loop
mov
pop
dec
test
fcoms
lock
cs
cmpsb
xchg
mov
or
inc
sarb
icebp
ja
push
mov
bound
std
adc
dec
daa
std
insl
cs
adc
cmc
inc
lods
call
lea
enter
data16
xor
aam
dec
sub
addr16
orb
mov
rolb
lcall
scas
gs
sbbb
aas
sub
std
sbb
popa
fdivrs
insb
jb
shlb
jl
movsb
xchg
lea
lret
pop
jne
addl
push
loopne
negb
cwtl
js
push
or
inc
xor
inc
jo
ja
dec
sub
sbb
sbb
inc
pop
adcl
filds
xchg
bound
or
sub
xchg
sub
mov
movsl
push
mov
and
sub
aad
fisubl
in
lods
orb
scas
out
mov
divl
jae
sub
or
xchg
aaa
stos
dec
cmpsb
aad
dec
shll
test
ficoms
and
push
orl
lods
mov
daa
aam
mov
lret
cmc
repnz
das
jmp
xor
roll
pop
sub
cli
jbe
and
outsb
ss
add
xchg
jns
roll
int
or
or
shlb
jae
int3
push
jnp
out
sarb
sub
pop
int
inc
insl
xor
and
mov
inc
mov
das
push
lea
or
dec
inc
sbb
sbb
mov
fsubrl
rorl
dec
movsb
and
out
movsb
imul
mov
sub
lcall
imul
mov
pop
xchg
mov
and
out
and
je
mov
sub
pop
pop
pop
dec
mov
mov
icebp
pop
or
ret
mov
cmp
push
and
repnz
jle
inc
mov
adc
pop
inc
mov
and
mov
pop
movsb
rol
hlt
push
test
lods
test
xor
dec
jmp
fstps
filds
sbb
push
shrl
xor
cmpsb
adc
xchg
aad
gs
jns
jge
mov
dec
std
clc
test
shrb
inc
mov
adc
jo
int
hlt
pop
push
mov
out
std
push
mov
test
in
lock
int
repz
in
dec
mov
sub
add
and
loopne
mov
and
jmp
xchg
fnstcw
sub
insb
add
pushf
jg
jns
pop
xor
cwtl
pop
hlt
test
shlb
sbb
adc
popa
loopne
pop
and
add
movsw
jmp
icebp
jae
lea
data16
xor
push
jle
incl
movsb
jo
out
popf
or
std
inc
fdiv
mov
rcr
daa
mov
ret
call
gs
cmp
les
jl
add
xchg
cli
jnp
inc
adcb
repnz
stc
cmp
pop
inc
sbb
lea
sub
pop
or
es
adc
add
repnz
ja
lea
icebp
jecxz
push
sub
xor
mov
es
pop
ret
shlb
inc
call
shll
or
mov
sub
sub
cmp
and
lahf
jns
aam
jne
jb
ds
loope
sbb
inc
jbe
repnz
and
cmp
mov
mov
xchg
loope
mov
pusha
push
aad
xlat
push
test
gs
ss
pop
sbb
sbb
push
cmp
and
nop
dec
pop
or
pop
ljmp
cmp
xchg
nop
test
cmc
lods
fisubl
mov
mov
cmp
inc
jmp
or
mov
push
mov
xor
xchg
adc
or
insl
xor
stc
jp
test
add
push
inc
add
mov
sub
enter
out
or
mov
hlt
add
fisubl
cmp
dec
xlat
test
mov
leave
stos
cmpb
push
cmpsb
and
js
xor
sub
das
ret
mov
lea
inc
icebp
mov
mov
int3
push
movsl
jp
mov
cmp
jne
jb
xor
dec
orb
cli
adc
jmp
xchg
mov
xchg
xchg
imul
cmp
xchg
in
repz
adc
ud1
dec
add
clc
or
mov
mov
sub
test
je
fdiv
cmp
stos
leave
or
jno
add
push
add
pop
daa
mov
fwait
or
jge
test
aad
mov
int3
mov
jle
ret
jmp
push
mov
sbb
mov
bound
push
ret
clc
inc
jle
hlt
sbb
testl
js
mov
pop
sbb
hlt
push
aad
mov
mov
jo
push
fwait
jo
cwtl
or
std
lret
pop
adc
lock
jbe
iret
ror
xor
push
push
rcr
daa
dec
sahf
rcrb
and
xchg
pop
inc
ss
dec
sub
ffree
ds
inc
inc
mov
ret
cmp
icebp
sbb
mov
outsb
ljmp
aaa
std
ret
lods
cmp
data16
lods
pop
xorb
dec
dec
inc
loop
sub
ja
jle
mov
xchg
xor
lods
arpl
inc
call
sub
andb
and
lods
and
imul
mov
sbbb
lret
mov
imul
mov
das
or
mov
cmp
ds
dec
imul
imul
xchg
out
sbb
xchg
outsb
mov
jge
ja
insl
mov
mov
test
into
notl
jp
ja
jno
pop
sar
and
sub
testl
ja
push
lods
mov
imul
sti
sti
out
insl
fidivrl
push
sar
push
jae
push
les
scas
sbb
gs
in
jne
jnp
or
test
dec
fwait
jle
xor
out
test
jmp
adc
in
jns
nop
mov
dec
out
pop
add
inc
pop
inc
out
push
inc
sbb
out
sbb
ljmp
and
pop
repz
cld
mov
or
and
movl
ds
lods
inc
or
mov
pop
mov
cmp
es
xchg
fdiv
mov
repnz
out
cmpsb
or
pushl
jnp
movb
dec
add
inc
or
repnz
fstpt
cltd
es
inc
gs
sub
push
sub
scas
fdivs
popa
mov
jns
or
outsl
lods
int3
inc
cli
scas
inc
push
stos
adc
ror
cltd
cmp
int3
aaa
adc
out
dec
add
cmp
sbb
push
js
push
mov
or
push
mov
insb
sti
pop
rcrb
xchg
inc
sbb
nop
mov
pop
sub
xchg
ret
fdiv
into
sub
xchg
lcall
loopne
scas
pusha
fsubl
and
out
test
add
in
mov
sub
test
stc
xchg
push
test
pop
es
sbb
fsubr
arpl
xor
or
fwait
inc
adc
aad
push
add
cmpsl
inc
add
push
and
inc
sahf
shl
rclb
outsb
mov
aad
mov
int
pop
movsb
out
sbbb
and
mov
jmp
fst
and
mov
aam
pop
ftst
icebp
cmp
add
push
cwtl
mov
bound
adcl
mov
andb
cmp
fs
mov
cwtl
rcl
ss
mov
jb
or
xchg
adc
aas
jg
cwtl
cmp
adcb
scas
pop
sbb
cmpsl
cmp
mov
cmp
adc
in
inc
pop
ficoms
sahf
dec
clc
enter
test
repz
dec
or
test
xor
xchg
mov
xor
loope
dec
js
mov
inc
mov
inc
push
or
in
fdivs
in
jl
dec
ret
push
cmovb
imul
fmul
jbe
push
stc
lock
add
xchg
and
dec
pop
std
jl
mov
push
add
dec
jb
xchg
pop
enter
mov
negl
push
cmp
adc
adc
mov
sbb
mov
mov
sub
cmp
mov
in
enter
xchg
cmp
adc
fiadds
pop
or
mull
push
dec
aas
imul
fadds
aaa
fidivl
scas
inc
ret
jne
imul
stos
ja
cld
dec
sbb
data16
gs
ss
cltd
push
push
and
jb
push
sbb
fs
push
mov
out
cmp
fdivrp
in
push
shll
out
cs
or
xchg
cmc
xor
mov
cli
bnd
add
test
push
push
ss
iret
fs
rol
inc
lds
inc
movsb
xchg
xchg
lcall
mov
popf
jnp
add
ja
or
dec
mov
sbbb
or
ror
dec
or
cmp
add
xor
test
daa
and
sbb
xchg
popa
lret
pusha
mov
push
andl
jp
xchg
nop
in
cmc
mov
mov
loope
enter
xacquire
cmp
fbstp
pop
js
add
repnz
jmp
sub
add
pop
cmp
cld
scas
out
stos
in
andb
pop
push
mov
loope,pn
sbb
data16
xrelease
in
fcoms
stos
mov
dec
frstor
mov
rcl
pusha
ret
push
ljmp
scas
repz
add
mov
arpl
inc
dec
sbb
aas
push
out
roll
lret
insb
in
rcr
sbb
rorl
pop
pop
push
sarl
fisubrl
cmp
fidivrs
cmp
std
lret
aaa
push
out
aaa
or
xor
mov
push
addr16
cmp
adc
lcall
daa
mov
jg
inc
lcall
lds
loope
es
mov
mov
cmp
xlat
aad
aas
lock
cmc
cmp
neg
faddl
stc
push
jg
scas
sub
stos
movsb
outsl
mov
pop
repnz
fmulp
add
push
mov
psrld
data16
dec
xor
jl
and
scas
jp
jno
addps
pop
daa
fnstenv
mov
sbb
ds
sbb
or
aaa
push
push
mov
pop
scas
pop
dec
mov
mov
xchg
xchg
lds
push
cmp
jg
shlb
cmp
xlat
jae
scas
xor
or
iret
arpl
push
xor
fstpt
inc
and
cmp
popa
inc
out
xchg
in
jp
mov
jp
adc
lods
jbe
cmp
mov
lret
xor
movsl
xchg
outsl
lahf
clc
cmp
fnstenv
int
pop
aaa
adc
pop
jo
outsl
das
mov
jp
mov
cmpsb
cmp
add
fists
inc
jo
jp
pop
xchg
adc
adc
gs
fs
stc
inc
or
jno
inc
and
push
aad
xlat
hlt
dec
insb
jl
pop
ds
xchg
icebp
hlt
sub
mov
iret
arpl
popf
sahf
or
in
inc
shrb
inc
insb
mov
stc
jns
push
lock
imul
in
push
rol
call
xor
adc
ss
in
test
and
push
mov
pop
push
add
sub
push
in
jns
in
push
test
xchg
pushf
stos
mov
dec
ss
orb
jae
sbb
insl
nop
pusha
test
dec
jmp
popf
push
and
xchg
pop
insl
jge
gs
roll
dec
inc
add
jmp
les
adc
sub
stos
iret
jmp
testl
push
jb
sarl
mov
ffree
push
mov
mov
insl
je
aam
adc
sbb
lds
ljmp
and
aaa
test
mov
imul
pop
sub
into
leave
out
push
dec
dec
bsr
div
inc
cmp
lds
jo
sti
iret
out
into
push
dec
dec
mov
adc
or
xchg
sub
inc
leave
mov
and
inc
cltd
scas
dec
sbb
sub
inc
lea
cmp
outsl
push
pop
sbb
push
fdiv
mov
xchg
adc
mov
cmp
cmp
int3
inc
push
pop
mov
sbbb
xchg
movsl
sub
into
push
xchg
imul
cmp
mov
fldcw
inc
icebp
enter
lret
stos
jge
jl
push
adc
lret
or
and
movsb
cmp
and
out
jno
rcrb
inc
mov
adc
inc
pop
or
lock
out
add
sub
mov
lock
scas
lock
in
or
xchg
fistl
int3
repz
or
sbb
aaa
icebp
inc
xlat
xor
cltd
sahf
xor
push
stos
pop
je
cmp
or
mov
out
mov
xchg
ljmp
rcl
nop
lret
incb
sbb
pop
mov
ss
dec
push
inc
cmp
outsb
in
shrb
adc
jp
lods
pop
mov
and
repz
inc
out
jae
xor
ret
fisubrs
cmpsl
pop
xchg
push
in
int3
test
add
pop
mov
jbe
cmp
push
cmp
icebp
mov
pop
adc
jmp
lods
mov
inc
mov
addr16
imull
push
jge
cmp
jg
inc
stos
push
out
mov
subl
cmp
add
sub
int
pop
push
test
mov
pop
sub
cmp
xor
and
dec
lcall
adc
test
test
movsb
mov
loop
push
aam
mov
push
xchg
pusha
or
inc
lock
clc
push
fimull
loopne
and
pop
jns
je
stos
push
stos
mov
mov
push
sbb
and
mov
sub
mov
mov
jbe
push
push
lods
lret
xchg
mov
fwait
xchg
xchg
lcall
cmp
push
sbbb
ror
movsl
pop
inc
movsl
popa
fsts
adc
data16
jmp
adc
cwtl
push
mov
cli
push
imul
in
xchg
push
sti
lcall
fcmovbe
cld
loopne
dec
mov
repnz
sbb
and
cmp
out
ja
sub
hlt
adc
pop
mov
cmc
in
and
dec
dec
mov
push
in
xchg
das
or
ja
mov
xor
inc
les
pusha
lds
loope
pop
ss
subl
inc
pop
sbb
mov
mov
mov
mov
push
and
cmpb
or
leave
popf
ss
mov
add
imull
mov
test
adc
das
add
mov
adc
cwtl
aam
test
shll
mov
xor
fdivl
sbb
aas
push
pop
cmpsl
cmp
jge
shrl
dec
stos
mov
pop
push
push
push
nop
sub
add
inc
xor
imul
movsb
in
add
push
dec
push
enter
push
leave
stos
adc
push
iret
dec
jl
cmp
in
mov
mov
pop
xor
loope
push
outsb
bound
cmp
int3
sbb
and
or
insb
push
sti
add
xor
mov
mov
bswap
mov
out
rorb
inc
mov
xlat
pushf
test
repz
iret
addr16
cltd
push
pop
add
and
sbb
cmp
fimull
loope
pop
outsl
or
cli
or
icebp
lock
push
call
push
mov
mov
fwait
loopne
fs
push
xchg
daa
and
xchg
sbb
idivl
subb
ds
add
mov
adc
hlt
daa
call
fdivrs
adc
and
jb
popa
and
lods
enter
test
inc
into
clc
mov
scas
cmp
arpl
sub
outsb
or
jmp
jl
rorb
push
out
lds
sbb
pop
stos
xchg
and
popf
push
push
or
outsl
loop
mov
sbb
shll
jp
mov
push
aam
cmp
push
lahf
jl
scas
test
pop
ret
cwtl
nop
pusha
add
jo
outsl
pop
pop
push
addl
mov
cmpsl
out
sub
mov
popf
dec
adc
insb
jecxz
jl
stos
enter
adc
andb
pop
sbb
dec
adc
xchg
aas
add
adc
hlt
push
lock
jb
js
inc
push
sub
mov
aad
fmull
mov
call
push
pop
dec
clc
leave
jmp
incb
jmp
fcomps
adc
jne
jae
pop
jo
movsl
es
push
cwtl
xor
das
leave
sub
mov
repnz
fwait
lds
pop
dec
into
and
lea
xor
insl
lods
out
cmp
pop
or
adc
xchg
inc
out
push
loopne
push
je
add
inc
fsubrs
pop
scas
mov
sub
inc
rclb
sub
sbb
loop
pop
insl
sti
pusha
jp
mov
and
into
jecxz
mov
mov
call
push
es
pop
add
mov
push
dec
mov
adc
mov
dec
xor
xor
in
and
sub
pusha
jno
iret
rclb
mov
int3
inc
jl
xor
and
mov
xchg
scas
fmuls
rcll
out
lahf
jecxz
stc
mov
shlb
nop
lock
jae
dec
or
push
leave
call
or
jge
lock
loop
push
outsl
scas
shll
cmpsl
scas
fs
mov
inc
in
and
clc
stos
cmp
add
xchg
lods
cmp
push
imul
repz
mov
loopne
xor
movl
inc
mov
jae
ja
loop
insb
or
push
into
add
pop
dec
xchg
jp
jae
shlb
jnp
sbb
cmp
fsubrl
adc
xor
mov
jle
idivl
das
jnp
repz
decl
xor
popf
push
subb
sbb
push
rclb
jle
test
sub
psubusb
out
lahf
and
rol
aam
js
popa
lock
jo
std
pop
add
jle
daa
movsb
fidivl
push
imul
jge
sbb
jmp
test
mov
mov
dec
add
cwtl
rol
rorl
insl
fnstcw
sub
stos
pop
or
jp
fucomip
scas
sti
lds
movb
mov
jecxz
or
and
xchg
or
mov
mov
faddl
leave
and
mov
or
lds
cld
incl
dec
sub
pushf
mov
xor
aaa
jp
adc
sbb
push
mov
pop
leave
out
sub
xchg
sbb
roll
enter
push
flds
fnstsw
mov
int3
jge
pop
mov
and
inc
sbb
mov
rcrb
mov
xchg
xor
xchg
pop
popa
je
push
jecxz
cli
and
lods
movsl
xchg
sbb
fbld
sbb
inc
ss
and
dec
lds
cmp
xlat
push
pop
fwait
imul
pop
inc
add
js
loop
fistps
mov
sbb
xor
jno
pop
jne
inc
stos
inc
test
inc
jns
cmp
add
or
sub
push
dec
pushf
lahf
imul
add
scas
in
es
mov
xchg
xor
adc
fs
mov
popa
mulb
clc
out
jmp
insb
or
jmp
into
out
leave
pop
scas
inc
imul
loopne
jmp
xchg
icebp
fmull
push
outsb
sbb
sub
pusha
sbb
sti
into
nop
sbb
or
jl
call
mov
stos
mov
movups
cmpsl
mov
cs
fmuls
jg
adc
mov
inc
pop
adc
andl
into
daa
mov
ds
pushf
mov
dec
lods
push
outsl
inc
adc
mov
jle
out
cli
int
fcmovnu
out
out
add
imul
sub
ficompl
dec
mov
subb
sahf
inc
insl
sub
adc
js
andl
mov
repnz
jl
out
dec
jecxz
push
shll
shll
or
push
fistl
inc
outsl
jecxz
out
mov
stos
jmp
sub
fiaddl
xchg
inc
mov
fmul
jo
cmc
stos
cmc
mov
and
das
add
sti
inc
xchg
or
cmpb
xor
fnstenv
cli
je
out
adc
mov
xchg
push
scas
dec
jns
xorl
cmc
vaddsd
cltd
jg
mov
mov
ds
sbbb
or
xlat
arpl
pop
xchg
mov
stos
mov
das
mov
out
out
sub
pop
xor
sbb
jp
ret
out
cmp
in
movsb
xlat
mov
cmp
js
push
cmp
movsb
xor
lods
pop
jmp
push
in
popf
xor
xchg
loop
fs
or
adc
mov
fwait
sub
inc
jp
je
jp
dec
pop
dec
int3
xchg
iret
scas
icebp
and
adc
aam
sbb
sbb
mov
mov
jp
adc
ret
push
mov
into
xchg
xchg
and
outsl
in
fwait
pop
in
pusha
cmp
jns
add
sub
jne
cmp
std
aad
push
lgs
fdivrl
ret
les
xchg
dec
divb
imul
jne
pop
mov
adc
inc
cmp
mov
stos
scas
add
aam
arpl
mov
cmp
bound
popa
iret
stos
test
insb
and
popf
push
insl
cmpsb
sub
test
in
sbb
sbb
push
pop
pop
adc
dec
adc
push
daa
cmp
push
test
pop
popf
jne
incb
mov
cli
in
in
and
aaa
inc
data16
pop
cmpsb
adc
gs
jmp
push
dec
pop
enter
and
loop
lods
inc
imul
test
mov
in
rolb
xor
mov
mov
orb
add
nop
call
or
xchg
dec
adc
inc
out
movsb
loopne
out
push
loope
dec
inc
icebp
loopne
mov
xchg
sub
push
je
xchg
test
ljmp
fsincos
es
and
sbb
jbe
jmp
or
fs
mov
mov
mov
dec
shll
cmp
xlat
mov
out
shr
cmpsb
icebp
sub
pushf
pop
insb
cmc
jae
and
xor
es
inc
jecxz
je
push
es
std
push
addl
mov
mov
mov
jmp
rcr
leave
lods
icebp
mov
cli
aad
add
inc
lods
adc
lea
add
xchg
inc
xor
mov
dec
jle
adc
mov
addr16
and
mov
dec
out
sub
mov
cmpxchg
cmpsb
vandnps
test
mov
mov
dec
add
stos
adc
test
cmp
or
ja
aas
push
add
pop
ret
sbb
int3
lret
into
inc
dec
test
push
mov
fwait
inc
fwait
in
arpl
aad
loop
out
mov
sub
pop
imul
scas
xor
movsb
mov
and
pushf
stos
leave
addr16
xor
dec
mov
mov
sub
and
int3
loopne
hlt
mov
out
in
xchg
popa
pop
stos
pop
adc
jbe
insb
popf
cmpsl
out
sbb
adc
adc
pop
fcompl
xchg
rcrl
into
addr16
lret
ret
dec
jl
mov
insb
jmp
fsts
pushf
popf
fistps
inc
xchg
pop
and
pop
pop
cld
fists
mov
mov
jne
pop
jae
xorl
fisubl
repz
std
mov
pop
push
rorb
lahf
pop
add
leave
cmp
call
fs
push
outsb
mov
loop
jmp
add
mov
cmpsb
cld
cmc
loop
and
or
dec
arpl
push
scas
jno
rcll
shl
dec
mov
out
mov
cmp
sarb
loop
sbb
outsl
aam
call
ja
or
dec
cli
add
aas
or
ja
and
pop
dec
scas
mov
mov
test
sub
cmpl
pop
sti
scas
sub
cmp
push
pop
dec
mov
mov
jns
inc
faddl
jo
ds
add
push
mov
testl
mov
shrl
or
enter
jno
pop
xor
inc
daa
movsb
sbb
or
fdivl
push
mov
arpl
jecxz
jnp
std
fwait
iret
gs
cmovs
adc
test
out
popa
jmp
repz
jmp
dec
mov
xchg
imul
cmc
out
push
inc
fisubrl
push
mov
orb
fwait
dec
cmp
inc
and
pop
dec
push
test
out
mov
sahf
negl
sbb
dec
inc
hlt
movsl
out
outsb
sub
in
pushf
enter
test
js
enter
inc
aad
aaa
lds
mov
pop
sub
test
mov
roll
push
push
pop
ss
push
xchg
bound
dec
ficomps
mov
es
xor
es
push
jo
sub
andb
cmpsb
lahf
sysenter
jp
movl
sti
sbb
xor
adc
inc
stc
int
aaa
sbb
out
rolb
aad
cmp
and
pop
jns
lret
or
das
pop
mov
ret
jo
ljmp
xchg
or
jae
xchg
or
cmp
into
lods
insb
adc
sub
fwait
nop
jnp
cmp
pop
xchg
mov
push
push
push
shl
ss
fsubrs
std
scas
movsl
and
sbb
cmp
or
mov
sbb
das
lret
into
repz
xor
lea
and
popa
pusha
xchg
xor
push
test
cmp
mov
pop
pop
andb
fldenv
push
add
out
call
cwtl
sub
inc
xlat
mov
dec
shlb
scas
xchg
cmp
daa
rcrl
adc
inc
push
sahf
adcl
lods
pop
movsb
jns
int
sub
rclb
mov
push
xchg
sbb
push
mov
je
popa
fcomip
jno
add
sub
or
xchg
mov
out
repz
sub
fidivs
fdivs
mov
rcll
adc
popa
mov
and
push
or
aam
lods
stos
adc
adc
outsl
pop
rclb
enter
mov
sbb
bound
imul
adc
cmp
jl
daa
cli
mov
push
daa
mov
mov
sub
lret
sbb
sub
adc
cmp
mov
xchg
xor
sub
cltd
out
add
sub
loop
popa
shrl
xchg
or
scas
into
mov
cmp
dec
and
xchg
dec
imul
sub
ss
pop
inc
fwait
cwtl
out
mov
mov
mov
or
mov
and
or
push
loope
out
dec
cmp
push
jbe
cld
jnp
pusha
mov
push
aaa
mov
mov
push
dec
push
out
mov
popf
pop
ret
push
fwait
add
test
adc
add
shll
jecxz
xor
xchg
bound
in
outsl
add
mov
fiadds
sub
jle
cmp
jp
push
cli
shl
dec
incb
jp
pop
mov
mov
imul
jp
sbb
aas
lock
push
cltd
adc
bnd
clc
loope
jae
or
lahf
xchg
popf
push
and
jne
sarb
jne
stc
stc
sub
sub
imul
lea
fisttps
jno
vmovaps
mov
cmp
mov
dec
imul
nop
call
push
enter
daa
xchg
rcll
xor
in
shrl
cmpsl
pop
dec
nop
sub
arpl
cmpsl
loopne
cltd
mov
pop
loope
fistpl
mov
loopne
xor
dec
lret
out
cmp
xor
leave
cli
inc
pushf
out
imul
popa
sub
gs
xorb
push
fmulp
mov
xchg
rclb
jns
push
jecxz
or
inc
in
or
and
mov
fldt
xchg
inc
inc
aaa
adc
and
sub
pop
mov
inc
lods
dec
clc
xor
or
inc
lock
ljmp
sbb
xor
jno
rol
jnp
cmp
sub
xrelease
jb
adc
pop
mov
test
leave
mov
jl
scas
decl
pushf
fdivrs
insb
sbb
adc
and
pushf
mov
cmp
xchg
cmp
sub
cltd
scas
cmc
jne
popa
mov
dec
test
stos
fwait
pop
clc
mov
movaps
jp
ljmp
push
jno
cmp
push
roll
mov
aas
pop
rorb
push
aas
jnp
mov
jo
repz
inc
inc
push
shrb
pop
inc
addr16
lea
pusha
rorb
pop
dec
push
jno
mov
push
fsts
inc
mov
fcmovbe
je
into
push
jae
fsubrs
mov
xchg
sub
mov
push
pushf
lods
cmp
mov
sbb
pop
xor
sahf
jl
cmc
inc
cmp
pop
ljmp
mov
inc
and
mov
pop
scas
arpl
jge
ds
or
ret
xchg
jge
or
push
rcl
ret
push
int
popf
pop
pop
xorl
sub
aad
sub
sub
in
sbb
pop
cmpsb
push
xchg
js
aas
stc
push
popa
xor
jnp
and
rcrb
jl
sub
insl
or
bound
ljmp
sub
lahf
fwait
pop
in
negl
push
cmp
pop
jnp
ljmp
cli
or
fsubs
jae
and
push
mov
cmp
pop
mov
test
xchg
push
inc
mov
sahf
dec
mov
mov
fwait
stos
movsl
in
add
mov
pop
add
cmpsb
sub
mov
xchg
or
mov
cmpsl
inc
lds
lods
mov
icebp
push
xchg
mov
popf
cmp
les
inc
aam
cmp
sbbb
push
pop
test
and
jns
fstps
pop
movsb
aas
push
cmp
dec
ds
test
popa
xor
jb
sti
movsl
data16
cmpsl
out
mov
clc
call
les
mov
leave
mov
jg
mov
and
jge
mov
out
lcall
outsl
dec
mov
and
ficomps
xchg
or
mov
dec
insl
lret
sbb
adc
inc
xor
push
mov
and
pop
lods
mov
loope
fcompl
mov
pop
mov
insl
in
stos
sbb
add
mov
sub
leave
sbb
orl
mov
insl
cli
int3
outsl
jge
ja
sbb
lahf
sti
lock
sti
outsl
dec
dec
in
stos
shrb
jne
shlb
cmp
lods
outsl
mov
push
cmp
lcall
push
cmpsb
mov
and
lcall
cwtl
push
imul
out
mov
insl
std
push
jo
rcll
mov
enter
notl
jg
or
shll
shrb
add
lods
mov
dec
test
jne
pop
xchg
sar
jl
pop
ds
fcomps
mov
les
cli
mov
mov
sbb
push
iret
push
add
pop
jmp
sbbb
jp
lock
push
push
inc
test
add
es
lods
and
jecxz
dec
imul
std
sti
ror
js
daa
mov
test
ljmp
and
mov
daa
dec
or
test
xchg
pusha
andb
dec
and
inc
dec
add
test
xchg
add
inc
add
push
pop
imul
sbb
insl
pop
sub
pop
fnstsw
or
in
es
test
cmp
dec
and
imul
adc
inc
fnsave
cmp
push
dec
xor
shrl
or
and
adc
orb
jle
cmp
dec
cmp
rolb
movsb
fwait
movb
ja
ljmp
loope
cmp
fsub
xchg
ja
inc
and
adc
lcall
loopne
pop
sub
jno
stc
and
mov
popa
out
sbb
jp
lods
pop
mov
inc
jns
test
cmp
in
mov
paddsw
sbb
xor
movsb
outsb
dec
xor
fmul
cli
or
sub
pop
pop
push
sbb
mov
testb
mov
jb
test
enter
inc
test
nop
cwtl
mov
clc
push
push
inc
mov
into
lds
and
scas
loopne
insl
scas
cmc
inc
mov
mov
pop
sub
aad
inc
out
add
ret
test
mov
fildl
inc
imul
push
add
popf
lea
jo
pop
stc
mov
xlat
jb
rol
jno
je
icebp
dec
mov
enter
adc
jbe
scas
inc
jge
push
popf
push
sbb
hlt
imul
les
je
lea
jb
jle
jl
xchg
adc
or
scas
sub
ds
and
mov
dec
popf
ss
jno
cli
cmp
cmp
out
jg
inc
and
loop
aas
xchg
sub
inc
incl
popa
mov
lds
popf
or
mov
stc
jbe
mov
ljmp
adc
in
push
insb
jg
orb
dec
sub
pop
leave
flds
mov
xchg
out
hlt
push
leave
xchg
push
or
xchg
dec
push
mov
cld
lock
je
adc
pop
pop
addb
add
push
or
mulb
jl
pusha
lea
notb
fnstsw
add
call
int
nop
pusha
pusha
nop
cmp
rolb
and
outsb
fucomip
cmpl
and
dec
and
roll
dec
rclb
inc
inc
adc
push
rclb
cmpb
jmp
dec
movsb
daa
stos
and
iret
fldl
xor
sbb
or
sub
insb
or
push
nop
inc
jb
adc
nop
imul
and
cmpb
push
xor
and
sahf
sub
aam
mov
mov
xor
sar
adc
xor
nop
pop
dec
adc
jnp
je
and
daa
stos
jmp
es
push
fisubrs
jmp
movsb
and
or
cld
or
cmc
mov
cmp
pop
rcrb
dec
mov
sub
stos
mov
mov
mov
cmp
mov
out
imul
adc
jg
enter
daa
dec
scas
shll
pushf
out
mov
stos
push
mov
inc
roll
add
ljmp
jl
cmpsb
mov
into
stc
pop
inc
outsl
xchg
icebp
fs
nop
mov
popf
mov
inc
jns
repz
imul
fs
stc
mov
xor
cld
dec
cmp
leave
stc
aas
jae
mov
icebp
cmp
stos
out
shlb
xchg
ret
pop
in
inc
cmp
xchg
aam
cs
cmpsb
leave
hlt
je
jecxz
push
cmp
pop
subb
insl
sbb
sbb
push
test
into
add
add
aas
das
repz
sahf
jge
stc
mov
xor
adc
xchg
incb
ja
dec
test
xchg
dec
xchg
fcoml
adc
lahf
jae
fwait
sub
gs
js
sahf
jns
sti
sbb
xchg
and
scas
in
sahf
clc
jno
or
cwtl
shlb
stos
pop
outsl
push
decb
pop
iret
jecxz
or
shll
movsl
mov
imul
repz
mov
dec
xor
mov
pop
push
push
ret
sbb
adc
bnd
test
add
xorl
scas
jno
fldl
dec
lret
int
andl
pop
and
and
dec
cltd
ss
mov
cmp
arpl
push
add
cmpsb
mov
mov
pop
adc
pop
pop
sub
movl
imul
inc
push
arpl
nop
xlat
js
inc
mov
adc
testl
into
test
test
lods
fwait
xor
mov
in
cwtl
cmp
fiaddl
bound
outsl
bound
and
or
icebp
jns
jne
rcrl
gs
imul
jno
xchg
xchg
out
in
xlat
pop
mov
inc
mov
mov
daa
add
rcrb
push
jle
sub
mov
nop
hlt
ret
adc
in
mov
pop
pop
fdivrs
cltd
mov
mov
aas
das
xorb
sbb
ds
fldl
cmp
imul
mov
mov
cmp
mov
push
mov
mov
pop
inc
ret
mov
dec
jae
rolb
data16
paddusb
fnstsw
mov
jmp
popf
mov
lea
adc
movsl
sbb
xor
sbb
xor
aam
jno
loopne
sub
sbb
cltd
int
idivb
repnz
cmp
nop
sbb
push
mov
xorl
cld
shlb
adc
ret
mov
mov
fwait
jmp
lahf
es
ss
js
out
fsubl
push
fcompl
add
scas
repnz
sbb
cli
push
scas
in
insl
pop
sub
jne
ja
data16
push
pop
lock
imul
addr16
lret
jo
repnz
xlat
jns
jo
cwtl
test
push
push
xchg
cmp
test
scas
enter
mov
cmp
insb
nop
sbb
inc
xor
jg
in
frstor
cmp
pop
mov
lret
pop
sbb
loope
mov
push
mov
pop
xchg
clc
cltd
mov
mov
movsl
pop
jne
ret
xchg
xor
test
and
je
mov
fdivrl
inc
addr16
sub
sahf
xchg
mov
or
xchg
je
xchg
outsb
pop
pop
mov
out
jb
cmpsb
outsl
inc
xchg
xor
in
cld
fistps
dec
adc
fidivrs
dec
adc
push
push
sbb
xchg
sbbb
aam
hlt
rcll
mov
mov
shl
cmp
sub
sbbl
dec
mov
cmp
shlb
movsl
push
leave
in
push
leave
xor
icebp
xchg
sbb
clc
jmp
test
stc
shlb
aam
aas
inc
ja
ja
int3
fsubl
pop
fistpll
stos
sub
out
stos
adcb
or
lock
xchg
test
inc
xchg
push
and
idivl
in
in
in
lods
push
add
mov
clc
loop
push
sub
push
lods
xchg
or
call
repnz
jmp
shl
cmp
cmpl
or
pop
and
add
push
scas
add
or
sti
movsl
out
push
xor
add
int3
in
repz
fwait
pop
cmp
mov
enter
aas
leave
xchg
or
aas
mov
mov
dec
scas
pop
push
in
rcrb
shrl
stos
call
fwait
cmp
sub
fisttpl
decl
negl
out
stc
fbstp
adc
fnstenv
mov
mov
push
push
in
jp
pop
mov
and
fcmovne
aad
xchg
sbb
stc
inc
scas
fsubl
and
add
pop
je
push
rcrl
mov
sarl
jl
mov
mov
ret
ljmp
ljmp
xor
inc
push
xchg
adc
cltd
add
in
xchg
divl
mov
mov
dec
sbb
xchg
sahf
sbb
xor
in
jne
sub
xchg
sbb
andl
in
subb
xlat
inc
adc
lahf
mov
dec
int
aas
lea
leave
in
add
das
jecxz
inc
add
jnp
xchg
lahf
pop
xchg
pop
xorl
addl
pop
push
cmpl
fcmovne
jl
lock
jno
in
psllw
decb
push
jg
mov
add
clc
push
or
dec
faddp
test
inc
xchg
lahf
cmp
sbb
sbbl
cmp
mov
mov
orl
pop
fs
and
fmul
mov
cmp
push
movsb
cs
pusha
pop
mov
leave
pop
fdivr
inc
popa
je
cwtl
inc
rolb
cmp
jnp
push
std
out
sub
aaa
sti
pushf
pop
adc
cmp
cmp
fs
mov
mov
mov
lods
sbb
jbe
mov
leave
sti
test
sbb
movsl
dec
adc
xchg
ds
add
inc
mov
inc
mov
xor
stc
mulb
addr16
aad
xor
test
dec
add
out
addb
stc
push
pop
bound
dec
rol
dec
dec
mov
aad
jb
jp
jmp
ror
push
in
sub
sbb
out
xor
loopne
dec
pop
js
sbb
xchg
mov
outsl
pop
or
mov
push
cmpsl
out
sbb
dec
xchg
das
lea
push
and
and
sbb
pop
jns
jl
push
ret
xor
mov
inc
fs
in
aad
loopne
add
pusha
icebp
dec
mov
es
iret
leave
lea
pushf
and
mov
fidivrl
es
pop
jae
fidivrl
pop
pop
mov
sbb
inc
lods
in
decb
mov
cld
shrb
orl
dec
dec
jo
jecxz
hlt
hlt
icebp
mulb
jmp
in
out
cmpsb
adc
mov
ror
movsb
dec
add
je
sbb
cli
sub
ret
add
push
inc
and
inc
adc
mov
je
cmp
pop
outsl
daa
aaa
pop
inc
cmp
sub
pop
in
add
lock
out
add
xchg
cmp
mov
cmp
sub
adc
pop
inc
lret
add
inc
movsb
loopne
pop
jno
inc
mov
sti
xchg
pop
fwait
and
add
pop
leave
xchg
out
mov
mov
dec
aaa
push
lcall
adc
lret
cld
fwait
negb
movsl
lahf
add
mov
out
stos
adcl
rep
xchg
and
xor
xchg
inc
inc
or
inc
outsb
jae
push
mov
outsl
mov
and
mov
shl
loopne
repz
sar
sub
inc
cmp
icebp
hlt
leave
arpl
and
out
jmp
mov
xchg
xchg
ds
and
mov
int3
or
out
enter
adc
insl
jg
addl
add
inc
adc
jns,pt
cmp
or
aas
or
pusha
ja
mov
inc
js
sbb
adc
dec
dec
aaa
add
ret
xchg
and
xor
push
icebp
mov
sub
jns
daa
popf
mov
ret
daa
add
insl
inc
stos
mov
jbe
inc
xchg
inc
and
out
fldcw
jnp
add
push
repz
mov
jmp
xorl
sub
scas
mov
daa
test
mov
add
in
aam
xor
mov
nop
fwait
mov
lahf
enter
jbe
mov
cmp
inc
aaa
insl
arpl
xor
frstor
jge
xchg
cli
inc
add
fisttpl
dec
sti
jmp
outsl
jo
xchg
xchg
jl
dec
cmp
repnz
leave
cwtl
add
lret
ds
mul
out
add
fdiv
jp
adc
popa
fdivr
jl
js
push
adc
push
add
popf
sbb
and
aas
sub
push
mov
lds
test
jecxz
mov
pop
sub
add
xchg
dec
mov
mov
enter
jp
sub
xlat
xor
push
push
sbbb
cmpsb
push
clc
and
jne
adc
sbb
test
pop
rcrl
into
dec
scas
test
rcrl
inc
push
dec
mov
sub
rorb
sahf
pop
sub
pop
mov
fidivrs
xchg
cmp
inc
mov
adc
sbb
lret
cmp
stc
pop
out
push
mov
xor
sbb
aas
jo
pop
cmp
mov
jge
movsb
bound
cmp
push
push
push
loop
cmp
ret
scas
cmpb
cmp
xchg
sbb
loopne
mov
sbb
fistpl
shl
push
outsl
add
shlb
jg
call
lcall
sub
or
test
mov
adc
fs
ficoms
roll
fldl
les
jmp
adc
mov
out
sub
jno
xchg
aaa
xchg
jne
mov
mov
leave
aaa
push
pop
out
pop
cs
out
dec
cmpsl
inc
lds
andb
aas
testl
int
icebp
xor
push
pop
mov
inc
push
test
stc
push
fmuls
jmp
dec
fwait
mov
jo
js
cmp
fisubs
sbb
lock
xlat
pop
or
mov
sub
inc
pop
fdivrs
mov
xchg
cmp
dec
icebp
loopne
adc
fadds
inc
sub
in
or
pop
cmp
pop
or
mov
or
xor
gs
fidivl
add
lods
bound
sbb
sbb
arpl
mov
sub
xchg
fdiv
xchg
mov
lret
imull
int
cmpl
jmp
push
fbstp
push
ss
adc
and
out
mov
mov
xchg
js
out
aas
scas
jmp
in
ja
ds
dec
outsb
lea
fldt
in
sub
shlb
adc
add
xor
mov
sub
addr16
mov
xchg
enter
es
into
or
xchg
subb
lcall
fisttpl
shl
pop
test
sbb
jbe
orb
in
cmpsb
in
jp
pop
das
call
loopne
imul
sub
inc
jo
lcall
inc
jnp
les
sarb
mov
lahf
mov
adc
cli
popa
sbb
aas
insb
lock
cmp
push
mov
in
jmp
fistps
inc
imul
test
lret
sbb
pop
es
inc
bnd
add
mov
pop
xchg
sbb
inc
subb
add
outsl
mov
fmulp
inc
add
orl
push
push
jcxz
jge
inc
icebp
mov
sbb
pop
jge
cmp
fbld
add
les
fucomi
adcb
cmpsl
cmp
add
push
pop
in
cmp
test
lock
sarl
lret
push
pop
clc
pop
sbb
dec
push
sbb
clc
outsl
js
xor
shlb
outsl
adcl
int
mov
sti
mov
lret
fsubr
out
shlb
repnz
inc
sub
iret
jb
push
pop
adc
out
filds
bound
clc
js
cmpsl
mov
out
cmp
and
push
ljmp
dec
loop
pop
xchg
repz
mov
jae
mov
aas
iret
add
mov
sbb
nop
mov
ret
pop
test
and
inc
andl
mov
xchg
mov
pop
movb
push
out
in
in
cmpsb
sti
mov
add
and
rorb
lds
sub
xchg
inc
cli
pushf
jp
push
pushf
or
fdivl
sub
outsb
pop
inc
imul
mov
or
dec
shll
ljmp
and
push
fndisi(8087
jp
sub
xchg
xchg
stos
repnz
mov
push
out
bound
cmp
dec
sub
and
add
lret
mov
sbb
orl
js
jne
sub
leave
xor
mov
inc
aaa
ficoml
iret
jp
inc
cld
pop
sub
insl
dec
bound
and
sahf
pop
push
ret
test
shrl
dec
ret
or
movsb
lods
mov
dec
fnstenv
cltd
sbb
push
fisubl
xor
daa
mov
jle
popl
mov
mov
inc
dec
mov
fsubrl
daa
mov
cltd
lret
aas
lahf
in
mov
and
jne
shl
xchg
xchg
mov
outsb
daa
subl
inc
aad
pop
sarb
pop
cmp
sub
mov
inc
pop
xor
dec
cltd
dec
cli
adc
icebp
imul
push
shrl
sti
push
aas
insl
and
push
add
xchg
aas
mov
mov
cmpsl
int
bound
jbe
lods
inc
add
or
insl
clc
dec
pop
sub
test
pusha
lods
stc
aad
dec
pop
out
push
cld
mov
add
push
xchg
and
jl
rolb
mov
add
shlb
fmuls
mov
xor
int3
shlb
and
inc
shlb
test
sbb
mov
xorl
popa
xchg
test
shrb
xor
xor
and
and
pop
gs
fmul
aam
mov
popa
movsl
dec
dec
push
std
lahf
mov
hlt
es
lods
adc
enter
sub
and
loop
std
cmpb
xor
jae
movsb
jae
rep
xlat
mov
add
mov
mov
dec
jnp
lret
inc
andl
cmp
je
push
adc
push
icebp
sbb
fbstp
fwait
dec
mov
xchg
xchg
pop
ds
jge
lret
inc
icebp
xor
cmp
inc
je
push
push
call
inc
xorl
xor
sbbl
ret
leave
pop
push
and
int3
xchg
call
sbb
sarb
loop
out
sbb
hlt
push
ret
pop
sbb
or
in
cmp
subb
insb
add
xorb
sbb
pop
xchg
movsb
out
pop
outsl
xchg
pop
sub
ret
shlb
out
jmp
or
aam
std
cmp
xchg
jmp
add
test
adc
push
into
mov
mov
inc
jns
test
mov
out
jecxz
add
insl
mov
call
or
xor
xor
and
dec
fldt
push
fwait
push
out
xlat
fs
aaa
mov
pmaddwd
mov
mov
inc
dec
std
pop
stos
cmp
inc
shlb
fwait
or
or
cmp
or
push
add
or
add
mov
jae
push
outsb
and
xor
xchg
jne
lods
movsl
and
dec
jge
fnstenv
popf
cmp
jmp
jno
mov
std
pusha
hlt
xchg
in
or
xchg
lock
in
sbb
mov
jl
loope
push
add
jge
out
in
sub
xorb
movsb
test
xchg
and
jb
sub
add
btc
sti
push
test
and
or
dec
lea
xor
add
stos
fwait
mov
xchg
sbb
sub
or
outsl
aas
pop
xchg
clc
ret
push
insb
mov
jle
int
dec
push
in
into
pop
push
jp
pushf
pop
mov
inc
xor
xchg
int3
iret
mov
sub
push
mov
sbb
xchg
jg
xchg
fidivs
mov
int
mov
hlt
pop
xchg
xor
mov
adc
mov
adc
mov
gs
push
sbb
pop
xchg
mov
mov
cmpsb
or
inc
or
add
cmp
ret
dec
jle
mov
and
scas
sbb
mov
mov
mov
push
lock
jg
jbe
enter
mov
mov
notl
pop
and
push
pop
jno
test
data16
xchg
or
mov
pop
xor
lea
mov
or
out
out
xchg
mov
insl
xchg
dec
push
imul
into
inc
enter
push
cwtl
jo
in
dec
enter
cmp
and
mov
dec
cmc
mov
cwtl
push
sub
shr
int
int
dec
xor
and
xor
movb
sbb
int
and
lret
or
mov
push
sbb
ret
pop
insb
adc
and
sub
repnz
sbb
sti
or
call
jl
iret
xchg
mov
mov
dec
cli
test
inc
shrl
jle
inc
jbe
xchg
pop
loop
and
je
scas
mov
lods
into
xor
imul
iret
xor
insb
xlat
xor
leave
dec
cmpb
loop
push
jnp
lock
stos
fistps
and
sub
iret
xor
js
adc
in
xchg
cmc
xchg
data16
xchg
mov
les
pop
add
iret
cmp
ret
xor
in
cli
loope
subps
cs
inc
jl
je
fidivs
push
sub
imul
mov
sub
loop
pop
pushf
loopne
and
jne
jl
and
push
xchg
out
sub
mov
mov
scas
in
mov
divl
int3
cmp
dec
popl
jl
adc
sbb
aas
pop
test
mov
add
psrad
stos
sub
mov
push
sub
ss
push
push
popa
roll
adc
addr16
shrb
mov
aam
jbe
andb
js
mov
inc
dec
out
pop
notl
push
outsl
outsb
out
adc
jbe
mov
mov
jne
mov
outsb
and
mov
xor
or
add
incb
fisubl
popa
mov
in
loope
xchg
or
insb
nop
mov
sbbb
mov
cmp
cmp
idivl
xchg
sbb
xchg
sahf
fisubl
jge
loop
push
ret
inc
mov
test
ds
cmp
movsl
push
test
and
in
in
xchg
rolb
cltd
fsubrl
lret
push
adc
adcb
movsl
int
popa
mov
mov
stos
mov
out
sti
pop
stos
dec
sub
sbb
jecxz
push
js
cli
imul
add
push
loope
sub
mov
dec
test
push
mov
stos
jle
test
and
sub
hlt
das
xor
gs
push
push
mov
fnsave
jne
pop
iret
out
fdivp
add
es
mov
lds
js
cwtl
cmp
lret
pop
push
jnp
stos
popa
xchg
or
push
inc
mov
inc
fdivs
roll
mov
lock
add
pop
adc
lock
pop
pop
mov
movsl
adc
add
mov
pop
je
mov
dec
mov
dec
test
jmp
cmp
sub
imul
in
mov
mov
aam
clc
loopne
pop
fwait
hlt
adc
dec
loope
neg
jle
sbb
jne
jmp
mov
add
sbb
clc
imul
inc
add
sub
or
lock
adc
add
clc
mov
mov
push
add
or
push
std
mov
ret
pop
push
lock
mov
jl
shrb
jnp
in
sub
add
repnz
stc
pop
dec
sbb
xchg
sbb
shrb
jo
call
add
aam
cmpsb
sbb
push
xchg
inc
push
sbb
jp
pusha
pop
in
add
fucom
inc
lods
dec
rcll
sub
div
add
int
push
pop
mov
into
stc
jecxz
pop
push
cmpsl
cmp
adc
out
push
ficoml
jns
dec
insl
gs
mov
dec
lea
rcr
jo
movsb
push
sbbb
test
add
int3
out
popf
adc
cltd
push
dec
sub
dec
push
adc
scas
jne
jne
daa
push
xchg
mov
adc
xor
push
xchg
dec
sub
fwait
pop
fisubrs
idiv
mov
rcr
mov
cmp
inc
and
les
cmp
lahf
sbb
sbb
add
aas
and
jle
in
pop
add
je
out
or
rcrb
movsb
inc
loope
mov
subl
jg
mov
mov
ret
mov
xchg
rclb
loopne
sbb
imul
xchg
cmpb
test
cmp
mov
inc
add
sbb
pop
bound
pop
repz
daa
fcomip
cld
sahf
ret
jmp
mov
outsb
subl
movsb
dec
sub
sti
mov
xchg
into
loopne
fsincos
mov
loop
aas
das
je
in
fadds
pop
cmpsl
xchg
cld
pushf
shlb
push
add
xchg
scas
pop
aam
pusha
push
sbbb
out
adc
add
lret
cmpsl
mov
popf
cmpsl
mov
dec
data16
mov
fmull
pop
lods
lcall
outsb
mov
gs
mov
out
das
sub
rol
sub
dec
pop
fbstp
lret
push
push
xor
xchg
divb
ds
test
cmp
hlt
aaa
inc
out
fnstsw
ljmp
sbb
jb
push
in
insl
dec
pop
push
push
seto
push
dec
jae
pop
out
mov
fwait
push
insb
js
sub
jp
mov
dec
in
cmpsb
repz
dec
sub
cmp
and
pop
int
lock
mov
mov
mov
mov
sbb
ror
jmp
jge
mov
sbb
dec
ss
cmc
daa
pop
mov
fistpl
dec
aaa
pop
inc
sahf
pop
xlat
fldcw
cli
ficoms
fucomp
stc
jbe
bnd
int3
ss
sbb
jg
mov
cwtl
lods
dec
mov
mov
xchg
aad
mov
or
mov
xor
int3
dec
lahf
push
dec
jl
loopne
imul
fstl
sub
popa
fsubr
std
stc
push
jns
inc
mov
fucomi
push
xchg
je
jne
lds
in
mov
pop
scas
cmp
mov
push
mov
repz
inc
loop
imul
jmp
inc
pop
xchg
jno
repnz
les
inc
aas
rclb
fsubrs
ficoml
lret
dec
dec
rcr
insl
je
insl
jb
jns
aas
jnp
push
sub
jbe
dec
mov
das
loope
call
sub
jns
fs
sub
fs
push
sub
pop
loop
inc
jne
ret
or
nop
jb
in
mov
sub
sub
mov
shlb
aad
je
jbe
test
pushf
xchg
adc
pop
mov
pop
mov
rcrb
clc
mov
or
xor
in
push
adc
sbb
jl
push
xchg
clc
mov
or
imul
fsubr
stos
aam
shlb
xor
cmpsb
lea
pop
xorl
cwtl
int
and
mov
loope
mov
outsb
inc
fwait
xlat
mov
inc
mov
out
mov
xchg
jo
stos
idivl
js
fsubrp
mov
xor
or
push
xorl
fbstp
test
popf
adc
push
sub
inc
stos
fs
cmp
bound
pop
mov
sbb
jne
pop
or
or
call
xchg
mov
sub
lret
jmp
or
mov
out
mov
ss
mov
inc
add
in
fldenv
fisubrs
cmc
mov
lock
and
sub
cmpsb
ljmp
stos
push
mov
push
ljmp
std
inc
and
cmp
lcall
sub
xor
push
dec
mov
out
sbb
imul
call
notb
cmp
loop
outsb
enter
and
cmp
pop
movl
in
push
mov
push
call
cmpsl
push
pop
bound
and
xor
shr
jp
mov
js
jo
push
push
arpl
call
lss
mov
loope
jb
lock
cld
lret
push
in
push
adc
ljmp
ficompl
mov
mov
cmp
icebp
mov
inc
xchg
arpl
frstor
and
sahf
jmp
add
pop
mov
xchg
adcb
or
xor
pop
das
inc
inc
fcomps
call
test
mov
push
sbb
and
sub
es
push
incl
in
test
jo
mov
pop
or
movsl
mov
mov
jp
ds
dec
adc
xchg
xchg
mov
inc
shll
mov
dec
mov
mov
mov
sbb
iret
inc
cmp
daa
mov
add
nop
and
push
adc
add
sahf
xor
mov
stos
adc
mov
repnz
ss
cmpsb
adc
jns
push
mov
loope
shl
lods
mov
icebp
inc
rcrb
hlt
pop
movsb
push
mov
inc
mov
sub
ret
push
cmp
rcr
in
inc
out
fcoms
repz
in
std
xor
push
mov
dec
cmpsl
mov
sub
sbb
ljmp
mov
out
sbb
xlat
push
push
aaa
or
mov
jecxz
outsb
adc
mov
jge
ret
fdivl
pop
aam
xor
jnp
aad
mov
int
negl
cmp
dec
stos
pop
hlt
xor
and
out
add
in
jle
xchg
jnp
icebp
sbb
push
iret
or
loopne
aad
out
outsl
mov
int
pusha
jg
sbb
xchg
xor
aas
cmp
push
jl
hlt
sti
inc
cmpsl
scas
lret
iret
ss
arpl
inc
rcl
adc
in
fistpl
int
aaa
dec
adc
inc
test
jecxz
or
insb
mov
iret
popf
push
xchg
pop
les
mov
push
jno
fsubrs
sbb
adc
fwait
cmp
subb
cmpsl
in
mov
xchg
mov
inc
push
cmp
pop
iret
into
pop
mov
outsb
jnp
push
jns
and
rolb
int3
rol
pop
dec
jecxz
mov
xor
sbb
sti
and
sahf
push
scas
mov
xchg
icebp
mov
jne
adc
sub
cltd
incl
out
out
aad
mov
cmpsb
adc
movsb
jp
lods
dec
repnz
mov
hlt
and
cmp
lds
out
adc
fnsave
cmp
test
pop
fdivrl
adc
loop
mov
dec
repnz
lods
sbb
in
in
rcll
out
push
int
inc
mov
pop
data16
ss
sub
mov
and
push
aad
shlb
inc
xchg
inc
pop
test
imul
xchg
xchg
jle
scas
out
rcrl
repz
jbe
in
sahf
lods
mov
bound
xor
pop
imul
loop
out
cmp
push
inc
ret
or
cld
adc
rcrl
push
jp
xor
dec
int3
bound
std
sub
dec
inc
dec
pop
jae
in
popf
hlt
and
andl
mov
pop
sahf
fs
xchg
insl
repnz
out
adc
cmp
inc
mov
push
xor
lahf
xchg
int3
inc
sbb
scas
jae
lds
lcall
sbb
sub
loope
in
test
push
sbbb
mov
lret
mov
addb
test
sbb
test
and
aaa
loopne
loop
xor
adc
mov
into
iret
das
cmp
adc
inc
stos
xor
mov
bound
jmp
dec
mov
js
mov
sbb
pop
adc
adc
pop
lods
lock
inc
cmp
pop
cmpsb
mov
cwtl
lea
bound
sbb
mov
add
icebp
iret
sub
mov
bswap
idiv
test
cmp
add
pop
lea
insl
mov
aad
xlat
jl
push
cmp
mov
mov
sbb
or
loop
int
rcrl
rcrb
iret
stos
xchg
dec
imul
lds
sahf
gs
sbb
inc
mov
cmp
in
negl
adc
insl
into
cmpsl
jo
push
sub
arpl
repnz
dec
push
push
mov
loopne
pushf
pop
mov
je
test
mov
mov
arpl
jp
sub
jge
test
test
xchg
push
test
xchg
cmp
sbbb
jne
ss
iret
pop
aas
push
test
push
push
xchg
aad
in
dec
ret
dec
inc
call
adc
fadd
inc
std
dec
cmp
jle
mov
dec
xchg
in
add
rcrb
mov
sbb
leave
xchg
or
fidivrs
out
icebp
or
xor
push
mov
mov
popf
mov
xchg
shrb
negl
sub
xchg
mov
arpl
cmp
mov
xchg
dec
neg
or
mov
push
outsb
cltd
sbb
gs
out
mov
cmp
push
adc
or
push
hlt
xor
sbb
popf
lcall
or
cmp
xchg
inc
f2xm1
push
mov
adc
jle
stos
insb
fistpl
jp
fwait
or
pop
mov
xchg
or
and
xor
xor
movsb
mov
lods
imul
mov
int3
iret
jae
rcr
stos
or
out
clc
fdivl
mov
push
jns
sahf
add
lret
ror
sub
into
pop
jno
data16
inc
into
fscale
or
rcrb
add
adc
xchg
cld
sbb
jne
mov
push
adc
sahf
xchg
movl
sbb
mov
pop
xchg
or
in
sbb
lods
adc
add
push
js
test
mov
pop
sti
gs
out
lds
push
dec
movsl
and
xor
dec
out
shll
or
and
sbb
or
rcl
aam
mov
mov
fcomip
mov
sub
cmpsb
jo
shl
xor
sti
push
jp
fcmovnb
jo
sbb
and
sbb
loopne
lahf
dec
mov
icebp
das
sub
push
cli
cmc
sti
jns
push
inc
lds
cmp
sub
sahf
je
push
cli
xchg
aam
scas
loopne
sbb
pop
adc
mov
or
inc
lahf
mov
addr16
popf
out
cmp
push
test
sub
popf
mov
das
push
sbb
mov
mov
rcl
shrl
jle
test
shrb
xchg
shll
cltd
jmp
mov
jo
mov
pop
xor
test
mov
push
sarb
je
in
mov
outsl
pop
dec
pop
shlb
xor
sub
push
fistpl
icebp
int
pop
rclb
jo
mov
mov
stos
outsb
notb
xor
cli
adc
ret
out
mov
scas
sbb
icebp
sahf
mov
mov
jg
mov
and
les
cmp
mov
xchg
ret
push
fs
add
adc
sub
inc
sbb
xchg
arpl
test
sub
or
push
adc
xor
cmp
imul
cs
fcmovbe
push
mov
cli
fsubr
imul
fs
stc
out
outsl
add
push
cmc
aad
push
cmpsb
imul
sub
mov
cli
and
hlt
push
mov
inc
repz
mov
rclb
mov
push
out
xchg
dec
lock
test
mov
mov
scas
jo
cmpsl
and
pushf
inc
mov
dec
cs
or
testb
scas
in
xchg
in
xchg
jecxz
fstpt
ds
movsl
pop
jmp
push
push
int
inc
push
fiadds
out
aad
cmc
sbb
and
mov
or
pop
shlb
int
jmp
into
inc
mov
dec
lods
pop
push
xchg
sbb
movq
into
in
js
lret
add
out
fcmovu
adc
jne
push
idiv
fwait
sub
setns
jbe
ret
mov
ret
into
fidivl
xchg
mov
adc
mov
xchg
xor
cmp
fiaddl
insb
sbb
and
not
popa
cli
add
mov
jae
mov
rorb
jge
test
inc
aam
and
jge
add
mov
push
mov
xor
adc
dec
push
stos
cmpsl
fs
out
or
fwait
sub
and
cmpsb
ja
or
jno
lea
fistps
mov
out
jg
test
sbb
in
jp,pn
loop
cltd
lea
pop
imul
xchg
inc
mov
lods
xchg
and
inc
divl
daa
popf
mov
cmp
dec
adc
sarl
xor
test
and
add
aaa
push
out
adc
sbb
stos
adc
addr16
inc
add
sub
and
dec
xor
loope
imul
lahf
shrl
inc
out
lods
or
jg
lret
cmp
sub
rclb
aam
test
lret
pop
mov
pop
lcall
lcall
or
lahf
mov
mov
lret
or
mov
clc
mov
push
outsl
js
push
pop
bound
bound
sahf
mov
cmp
mov
fadds
in
xor
cmc
pop
test
movsb
pop
clc
xor
pop
mov
or
push
mov
xchg
call
mov
and
pop
xchg
outsb
mov
pop
cwtl
mov
sbb
push
jp
and
nop
mov
jae
xchg
shlb
int3
pop
inc
fsts
pop
lea
pop
ss
outsl
ljmpw
mov
and
or
in
push
mov
add
inc
lahf
mov
inc
fcmovu
repz
sbb
incl
cwtl
inc
cs
inc
mov
fidivl
and
jge
decl
ret
dec
cmp
jns
sub
mov
mov
rcl
add
or
test
xor
inc
in
mov
pop
cmp
pop
cwtl
push
shlb
add
clc
aad
dec
jne
jns
daa
outsl
or
add
and
cltd
fdivs
fcmovnu
loopne
inc
pop
test
fs
mov
cmpsb
mov
or
stc
nop
adc
dec
lea
mov
clc
stos
pop
cmp
rcrb
mov
and
into
push
mov
stc
add
push
xchg
fisubs
inc
scas
push
push
imul
jmp
xchg
addr16
or
or
aam
sbb
in
jo
sbb
faddl
stos
stos
popl
pop
pop
imul
shrl
bound
ljmp
int
cmp
outsb
iret
inc
pop
lods
aaa
or
cli
fdiv
aaa
cmp
jbe
xchg
ljmp
sbb
cltd
jl
test
mov
mov
lret
lock
pop
jb
mov
mov
out
jecxz
addb
inc
ja
mov
pusha
lcall
inc
mov
add
mov
cmp
fistl
mov
insl
sub
inc
adc
js
lock
scas
outsb
add
pop
lcall
aaa
das
jae
sub
mov
sbbb
mov
dec
mov
in
inc
js
btc
mov
inc
mov
shrb
mov
rolb
add
ret
hlt
jmp
and
ljmp
cmpsb
dec
jnp
mov
sti
jl
cmp
or
xchg
mov
mov
mov
je
shl
cmc
movsb
xor
mov
pop
test
fidivrl
sbb
pop
dec
les
sub
into
pop
pop
fs
out
scas
dec
or
adc
push
sbb
sbb
xchg
xchg
cmp
mov
sti
pop
cmp
or
jmp
adc
adc
js
rorl
scas
cmp
and
cmpsl
repnz
fadds
dec
loope
clc
movsb
out
xchg
push
jmp
mov
rcrl
idivb
arpl
leave
jae
pushf
out
fdivl
pop
jo
scas
add
jecxz
int3
inc
xlat
mov
mov
xor
lcall
mov
and
fildll
add
shrl
js
lea
pop
test
sbb
jae
aam
inc
adc
ficoms
adc
loop
test
mov
lods
lods
dec
leave
adc
jp
inc
lods
xchg
push
xchg
sub
lock
cwtl
cltd
in
or
push
rclb
cld
ret
leave
mov
in
adc
add
repnz
rcrl
push
xchg
xchg
dec
add
stos
lahf
jl
dec
jne
loop
call
dec
add
inc
sub
cmp
mov
xchg
pop
cmp
push
dec
pop
call
mov
out
mov
shlb
ss
mov
xor
mov
fwait
gs
bound
pop
cmp
mov
push
xor
inc
push
in
mov
mov
pop
lods
shrb
mov
mov
popf
sbb
jge
lcall
mull
adc
cmp
lods
in
ficompl
iret
adc
aam
movsl
inc
clc
jae
sti
popa
loope
repnz
mov
push
cmp
flds
mov
mov
and
pop
pop
inc
ror
ds
insb
inc
sbb
out
test
dec
gs
adc
mov
fsubrs
cmp
jns
mov
stc
pusha
adc
inc
mov
addr16
mov
jmp
shrb
push
mov
stos
push
daa
inc
xlat
push
xor
adc
lods
push
das
mov
enter
jmp
add
push
gs
aas
pop
sub
popa
adc
mov
pop
insl
int
aam
pop
ds
or
popf
aad
sbb
ret
xor
push
and
push
mov
clc
adc
xchg
push
xchg
and
or
jmp
lret
test
jecxz
arpl
movsb
aad
sub
inc
inc
into
mov
sbb
dec
sti
in
adc
ret
fcoms
test
cs
roll
push
sbb
int3
roll
dec
inc
xchg
es
into
loop
int3
cs
fisubs
dec
call
adc
mov
lret
or
pop
add
mov
mov
and
sub
jbe
dec
xor
push
aaa
mov
push
and
xacquire
sbb
or
xchg
clc
adc
pop
mov
inc
aad
jbe
out
dec
incl
inc
mulb
mov
cmp
movsl
lret
inc
sbb
xor
mov
or
loopne
cs
ret
xchg
push
or
repz
insb
dec
stos
je
imull
sub
dec
fnstenv
push
repz
cmp
pop
inc
test
pop
jne
pop
sarl
fimull
sti
cmp
cld
cmp
js
adc
repz
test
int3
outsb
mov
ss
iret
sbb
mov
clc
adc
shr
xor
inc
fwait
jnp
xchg
xor
jno
inc
mov
jo
outsl
push
scas
js
xor
push
xchg
mov
cmp
testb
or
or
push
sbb
xchg
mov
pusha
mov
push
lahf
add
pop
push
and
jae
stc
xchg
mov
lret
sub
cmp
push
ret
jl
cmp
or
fmulp
xchg
test
data16
nop
test
and
xchg
cmpsb
arpl
push
cmp
pop
push
pop
js
andl
adcl
cmpsl
inc
pop
rcrl
loop
ss
pop
add
cmp
cmp
bnd
repz
jo
jg
push
inc
xchg
or
pop
dec
mov
push
fnstenv
xor
mov
lods
adc
leave
push
inc
fcomp
enter
push
inc
and
cs
dec
dec
inc
nop
jae
inc
nop
loopne
mov
cmpb
lret
pop
mov
xchg
les
fistps
int3
or
and
mov
mov
sub
div
cwtl
push
cld
out
out
pop
mov
lret
jmp
popf
pop
loopne
cmp
fstp
inc
jp
into
popf
rcll
inc
jp
xor
outsb
jb
sbb
jo
adc
outsb
or
xor
ret
sub
dec
add
mulb
cmpsb
or
mov
push
lock
pop
shll
or
fimull
pop
cmp
nop
dec
ljmp
xchg
lret
pop
jae
and
adc
inc
mov
pop
addb
sbb
cmpsl
ror
push
out
dec
outsl
out
pop
cwtl
pop
cmp
adc
push
stc
sahf
adc
stos
mov
mov
lds
sbb
or
test
negb
mov
pop
jl
out
inc
jno
movsb
mov
sbb
repz
lcall
jge
or
hlt
add
jmp
out
jl
divb
stc
gs
sub
aad
lock
jnp
pop
mov
jp
stc
xor
stc
sub
jns
mov
dec
dec
repnz
adc
ficoml
sub
lret
adc
lock
and
fcmovb
or
call
mov
jmp
lods
fwait
std
mov
divl
sub
cmovg
dec
pop
in
lahf
mov
aad
lods
movsb
jl
jo
adc
pop
mov
lea
fidivrs
imul
ds
cld
int3
les
in
cmp
mov
bound
imul
std
and
rcr
mov
pop
lahf
jle
mov
movsb
inc
cmc
call
std
mov
cmp
pop
jmp
cmp
and
cmpsl
pop
scas
dec
pop
loop
lcall
jp
imul
push
sub
dec
ja
adc
sub
loop
sbb
fmull
jge
lds
pushf
jnp
clc
bnd
mov
cmp
mov
cmpsb
ss
js
push
lcall
pop
addr16
xchg
push
les
test
jo
subb
inc
repnz
loopne
shlb
inc
test
lods
rol
or
add
cmp
rcl
iret
cmp
pop
test
shrb
les
mov
xchg
and
sbbb
ds
outsl
fs
mov
out
jmp
in
xor
xor
mov
add
icebp
insl
xlat
loopne
inc
adc
sbb
mov
pop
cs
add
sarb
inc
mov
jbe
jmp
imul
mov
call
fwait
dec
inc
ret
cs
xlat
test
sarl
shl
sar
out
mov
xchg
pusha
push
stc
sahf
jbe
mov
lret
test
inc
and
inc
xchg
dec
jb
cmp
divl
and
cmpsb
cmp
lcall
pop
jecxz
movsb
inc
xchg
jbe
inc
addr16
mov
dec
push
gs
mov
inc
ds
sahf
add
imul
shll
ret
sub
in
lret
mov
jg
std
and
rcrb
je
and
xchg
push
cli
int
lcall
pop
lods
js
jecxz
mov
mov
push
aad
xor
std
mov
jbe
cmp
pop
xchg
out
aas
fucomp
cmc
outsb
rolb
jge
aas
clc
testb
rclb
dec
notb
shr
mov
pushf
scas
dec
pop
test
xlat
cmp
cltd
imul
loope
out
es
fildl
outsb
pop
enter
imul
test
jnp
inc
adc
cmp
leave
aas
sub
jecxz
aad
or
or
or
mov
enter
adc
mov
adc
add
xchg
fs
pop
addr16
dec
outsl
cs
rcrb
pop
out
je
cs
fsubs
nop
fwait
add
in
imul
add
shlb
cs
adcl
int
and
mov
sbb
mov
and
mov
mov
das
mov
dec
pop
or
pusha
jg
aad
orl
dec
aas
fcmovnbe
jecxz
icebp
xorl
xchg
cmp
bound
fiaddl
xlat
imull
xor
pop
ror
xchg
adc
push
xor
inc
jnp
lods
gs
rorl
sub
inc
mov
add
add
out
mov
fistpl
pop
aam
or
rcrl
xor
pop
add
sub
xchg
mov
dec
adc
push
push
sbbb
jo
dec
out
inc
inc
aam
in
daa
enter
imul
jnp
movsb
xchg
jno
jnp
cmpsb
outsb
scas
sbb
cmpsb
in
sub
adc
fisttpl
push
mov
cmp
lret
ss
pushf
jae
push
nop
xchg
pop
sub
dec
and
push
xchg
cmp
call
inc
repz
fstps
xchg
inc
fprem1
jne
out
int
xlat
push
mov
jns
pop
dec
xor
aaa
lea
sub
mov
sbb
call
movb
mov
jecxz
jecxz
mov
rcr
xlat
push
xchg
stc
inc
push
rcl
mov
lret
jae
imul
dec
adc
cmpsb
inc
cmp
mov
xor
jae
sbb
mov
jne
popf
push
jae
cld
ljmp
inc
pop
testl
xchg
push
es
mov
sbb
clc
popl
jp
stos
mov
fnstsw
daa
scas
out
ja
js
jne
mov
push
outsl
mov
aas
fdivrs
cmpsl
out
xchg
mov
out
pushf
int3
mov
mov
push
or
out
and
push
mov
aam
fsubr
cs
icebp
sbb
popa
loope
push
scas
sbb
dec
mov
gs
xchg
shlb
movsl
mov
ret
sbb
aaa
cmp
inc
mov
mov
call
adc
xchg
mov
cwtl
fisubl
xor
adc
sub
dec
lock
mov
pop
add
out
ss
jmp
push
jo
insl
out
stc
pop
mov
mov
sub
aam
fildll
or
sar
pop
push
jnp
icebp
push
lock
inc
cli
fnstenv
scas
or
sub
mov
pop
lea
push
rcll
lea
sbb
sbb
lahf
pop
popa
sbb
jne
loope
xor
lret
jae
sbbl
mov
and
in
iret
add
pop
xchg
xor
or
int
hlt
push
daa
xchg
mov
gs
das
mov
aad
push
push
fcomp
ja
xchg
mov
lret
push
sub
add
cmp
mov
lcall
cmp
adc
cmp
mov
call
jnp
pushf
mov
mov
imul
cld
addr16
fwait
inc
lods
jnp
fildll
out
test
inc
ja
add
int3
add
imul
dec
add
enter
test
popa
arpl
jb
aas
std
push
mov
mov
stc
clc
out
push
push
outsl
inc
cmp
movsb
xor
jge
popa
call
xchg
jp
divb
inc
enter
out
mov
ljmp
fidivl
outsl
jg
pop
mov
and
inc
out
pop
mov
testb
out
loopne
cmc
mov
add
adc
push
mov
mov
or
pop
pop
outsl
pop
ljmp
ja
pop
nop
pop
pusha
jae
jbe
imulb
in
push
or
test
addr16
popf
xchg
mov
leave
sbb
lcall
xchg
not
mov
or
std
xchg
pop
cmp
xor
push
out
mov
addr16
mov
push
lods
data16
jmp
adc
cs
or
lock
lods
pop
pop
mov
in
js
sbb
insb
jne
cmp
push
es
fsubs
daa
faddl
movsl
ja
jae
sub
imul
push
repnz
test
jno
stos
mov
paddq
outsb
cld
mov
sub
adc
and
jle
popa
mov
jns
sahf
iret
and
and
xchg
jo
mov
jle
sub
test
clc
inc
outsb
mov
ret
inc
aam
fnstsw
lret
mov
rcrb
ja
loopne
jb
movl
out
xchg
cs
scas
adc
ret
add
cltd
adc
ffreep
ss
sbb
mov
out
pop
cmp
test
jmp
movsb
mov
sbb
fcmovnu
sub
xlat
testl
mov
xchg
push
xor
push
test
mov
dec
xor
mov
rorb
sti
mov
adc
mov
or
xchg
test
dec
cltd
dec
push
dec
cmp
leave
test
lcall
out
addr16
and
push
sahf
mov
scas
stos
faddl
test
stc
ja
mov
jl
cli
or
sub
push
ja
repz
aam
dec
sub
mov
and
mov
pop
xor
inc
xchg
in
sub
imul
adc
fwait
cmp
push
and
mov
lock
movsb
or
in
xchg
push
dec
lcall
rcrb
xchg
and
iret
cltd
and
daa
sbb
insb
xchg
sub
ss
xor
scas
je,pn
sahf
hlt
push
inc
movsl
xor
jne
adc
cwtl
pop
testl
lret
jle
mov
pushl
jns
mov
mov
mov
cmpsl
ja
jbe
mov
inc
sti
cvtdq2ps
pusha
mov
jb
mov
dec
testl
out
or
xchg
adc
mov
push
pop
mov
jns
lret
cltd
jae
xlat
ja
push
or
pop
testl
adc
adc
cmp
mov
jmp
mov
add
cmpsb
mov
jg
mov
and
sahf
es
cli
add
or
add
lahf
jno
or
inc
dec
sbb
data16
popa
and
add
loop
and
jge
es
mov
inc
aaa
dec
test
and
and
push
cmp
scas
xchg
fdivrl
add
into
xchg
and
and
push
ret
test
popf
nop
adc
inc
pop
ret
xchg
std
out
imul
testb
imul
or
or
push
mov
sbb
fdivs
xlat
notb
leave
or
pop
cmp
mov
pop
sarl
push
jmp
or
cmp
xor
mov
ficoml
cld
jl
shll
sub
pop
popa
test
add
aas
nop
sbb
adc
dec
ss
sbb
stos
jle,pn
adc
fcompl
loop
or
out
daa
fidivl
mov
ja
call
mov
sub
lds
add
add
adc
jns
out
dec
divb
jne
mov
repz
mov
iret
mov
mov
data16
rorb
pushf
dec
cmp
cmpb
bound
popl
shrl
mov
xchg
and
xor
push
ds
or
dec
and
bound
rol
sbb
xor
push
nop
mov
push
adcb
sub
daa
inc
lock
sahf
iret
fists
pop
jmp
mov
aad
sub
nop
mov
loop
imul
xor
filds
mov
cmp
push
arpl
cmpsb
push
cmp
testl
lods
and
xchg
mov
cmpsl
hlt
sub
arpl
sar
xor
inc
in
loope
xchg
adc
jl
stc
mov
mov
fdivrs
add
fs
adc
popa
cmp
test
popa
push
xchg
cmpsb
test
andl
arpl
mov
dec
and
xchg
mov
adc
cld
push
ret
jmp
mov
sbb
xor
fisttpl
mov
and
inc
test
or
xchg
cmp
mov
mov
test
cmp
ja
loope
xchg
frstor
shll
out
and
aaa
bound
call
stc
int3
push
clc
xor
jmp
mov
iret
mov
aam
pop
cmc
cmpsl
pop
faddl
inc
xchg
insl
jne
ss
push
int
nop
sbbl
or
imul
fscale
jb
cmpsb
xchg
mov
leave
add
andb
sbb
imul
sub
std
cmp
clc
in
clc
or
testb
les
mov
fimuls
cltd
pop
xchg
shr
pop
xchg
sub
test
clc
jmp
ljmp
das
das
imul
xchg
aam
dec
sub
pop
data16
lea
fildl
int3
subl
jmp
outsb
nopl
mov
pop
xchg
cmpsl
repz
jno
out
loope
ja
cli
mov
arpl
or
in
popl
shl
loop
int3
mov
cmpsl
mov
loopne
shll
sub
std
imul
mov
pop
xchg
pop
iret
cmpsb
adc
sub
cmp
cli
dec
cmp
sub
mov
fsubrl
add
int
dec
xor
sbb
je
scas
or
lds
popa
xchg
test
fidivrs
fldcw
jmp
out
cmpsb
sub
shrl
jno
cmp
pop
xor
lahf
addr16
mov
ds
mov
unpcklps
movsb
jne
and
jnp
fbld
ljmp
mov
lds
aad
sbb
aam
push
pop
sti
cmpsb
push
mov
xchg
into
shrl
mov
dec
daa
jmp
gs
mov
dec
cwtl
pop
mov
jns
mov
cmpsl
xchg
xlat
in
scas
pop
mov
pop
decl
push
hlt
gs
push
out
or
or
sub
mov
movsb
vpunpckhbw
dec
or
push
xchg
iret
add
mov
adc
mov
push
mov
out
pop
sub
fiaddl
jns
insb
loope
and
sbb
or
arpl
mov
repz
fsubl
pop
lcall
push
adc
mov
mov
cmc
fcoml
jns
xchg
mov
inc
loopne
add
jl
push
mov
rorl
xchg
aam
test
dec
pop
lahf
push
sbb
xor
cld
loop
loop
rcrl
jo
push
xchg
cmp
rcr
stos
jae
inc
dec
or
jno
push
movsb
mov
data16
fs
push
lret
enter
data16
jae
ret
sbb
pop
adc
popf
sub
push
cli
in
xchg
sub
pop
mov
ret
jns
loope
fs
loope
lahf
mov
push
rorb
push
mov
js
dec
push
mov
aam
sbb
sbb
negb
push
mov
fisubl
stos
outsb
jb
daa
mov
repnz
sub
mulb
fstp
xchg
mov
movsb
mov
pop
push
insl
lods
fiaddl
pop
loope
ret
sub
scas
inc
lret
and
cmp
scas
jmp
lods
mov
push
inc
js
lcall
push
xlat
xor
imul
push
mov
rolb
adc
xor
in
or
sub
int3
das
das
cmp
cmp
stos
cmpsb
dec
fildll
mov
cmp
or
push
add
shrb
mov
adc
adc
adc
push
xchg
fldt
jne
jecxz
jno
in
outsl
pusha
push
outsb
call
aam
lock
data16
std
push
jge
mov
cmp
inc
data16
addr16
xor
push
push
jbe
out
sbb
mov
lods
push
arpl
pop
pop
je
add
data16
mov
or
daa
pop
ja
lds
outsl
outsb
pop
call
sbb
stos
insl
loope
out
or
negb
sub
arpl
xchg
mov
iret
repnz
fidivs
scas
jge
insb
mov
fwait
jbe
daa
xchg
rcll
pop
jp
orb
mov
divb
sub
rcrb
cmc
out
fstpt
dec
adc
sub
add
xchg
sub
jno
enter
xor
sbb
jae
mov
cmp
xchg
bound
dec
gs
out
imul
mov
test
lret
je
mov
loope
aad
jnp
mov
fistl
fisttpl
push
push
fisubs
fsubrl
ljmp
iret
pushf
fstl
or
insb
cmp
mov
dec
sub
mov
into
scas
and
das
icebp
or
movsl
dec
xchg
cmp
push
xchg
mov
xlat
pop
repz
fcompl
sbb
sahf
loopne
pop
stc
sbb
les
pop
ja
imul
movsb
call
daa
imul
ja
lods
xlat
pop
jmp
jne
fwait
xchg
lea
pop
lods
push
jns
iret
jmp
das
dec
pop
inc
clc
pop
xor
jnp
lahf
xchg
push
shl
jmp
and
lods
inc
add
insb
xor
fsubs
insl
mov
xchg
sub
sub
jb
mov
movsl
fs
push
ljmp
cwtl
dec
push
movsl
pop
sbb
xchg
sub
dec
je
mov
push
add
xor
or
dec
in
aaa
xor
cmp
push
xchg
pop
lds
sub
loope
lahf
loopne
outsb
sbb
mov
rdpmc
sub
and
and
xchg
push
mov
lahf
sarl
cmp
cmpl
or
pop
lcall
rcll
incl
leave
lds
sar
pop
lcall
mov
in
clc
add
sbb
fldl
vmwrite
not
xor
mov
rorl
push
int3
lcall
push
sub
out
and
imul
lret
adc
fstpl
xor
adc
xchg
pushf
lcall
xor
arpl
ljmp
std
stos
mov
lds
push
in
test
ficomps
or
lahf
in
adc
mov
mov
xchg
sub
mov
or
xor
shlb
mov
xlat
xor
inc
adc
jno
rcll
push
sub
out
pop
push
cmp
subl
popf
mov
xor
call
cmp
orb
adc
mov
mov
mov
add
fs
cmp
jo
jp
mov
push
pop
cli
out
stos
lods
xor
pop
pop
rol
inc
add
loope
jo
add
push
repz
push
mov
fwait
rcr
mov
xor
jg
push
inc
mov
ret
call
adc
ficoms
les
xchg
xchg
mov
mov
jl
inc
mov
sbb
cmpsl
je
mov
sub
or
pop
mov
xchg
jmp
push
lods
clc
jne
mov
add
loopne
test
rcrb
pop
fcompl
nop
jno
pop
pop
xchg
ds
fisubrs
lret
xchg
jecxz
cltd
fsubs
sub
idivl
movsl
jge
sbb
test
arpl
mov
jno
adc
int3
data16
push
jecxz
inc
stos
and
arpl
adc
jmp
pop
mov
jmp
xchg
push
jecxz
mov
aad
movsl
add
xor
es
gs
int3
ja
movsb
or
mov
adc
cmpsb
add
stos
sahf
push
andl
dec
test
push
bound
rorb
imul
xorl
add
add
lcall
or
lret
lahf
mov
loope
sub
test
inc
xchg
mov
es
fwait
or
cmp
mov
xlat
pusha
xor
and
std
mov
iret
sbb
int
imul
push
or
and
lods
test
and
or
mov
lods
xchg
push
pop
shl
dec
mov
test
add
add
sub
mov
push
mov
adc
loope
cli
imul
push
inc
dec
cli
in
push
add
inc
or
cmpsl
sub
push
mov
imul
cmpsb
or
or
out
pop
mov
jae
inc
or
int
push
test
xchg
inc
mov
xchg
jae
jle
add
cli
daa
inc
hlt
lahf
loope
add
adc
and
xorl
add
sbb
outsl
jae
lods
lret
xorb
ja
int
jbe
aam
sbb
fildll
pop
dec
inc
aas
adc
sti
pop
adc
or
leave
std
leave
push
es
push
test
and
mov
lock
cmp
pop
inc
sbb
je
imul
data16
mov
inc
sub
daa
cmp
int3
pop
test
xchg
es
or
mov
xor
les
iret
addr16
fnstsw
out
imul
jne
jbe
call
xchg
mov
mov
xlat
pop
lcall
int3
ljmp
pop
test
ror
mov
jo
sbb
leave
aas
pop
xchg
jae
mov
ret
mov
lea
popf
loop
dec
sbb
je
and
sub
imul
outsb
push
insl
sbb
xchg
sbb
jg
xchg
mov
test
lea
xor
push
mov
jp
dec
mov
sbb
mov
mov
mov
je
pop
jmp
out
push
inc
dec
sahf
xchg
pop
in
fisubl
and
xor
inc
cmpsl
xchg
sub
popa
sub
sbb
test
ret
pusha
repz
out
push
mov
xchg
das
outsb
mov
xor
lret
xchg
jno
leave
jo
scas
fbstp
sarl
cmpsb
jb
psrld
in
arpl
icebp
cmp
repz
aas
outsl
mov
lock
repnz
add
sbb
xchg
lods
pop
xor
xor
or
mov
mov
test
mov
test
mov
xlat
mov
loopne,pt
loopne
es
dec
sbb
mov
dec
lret
xchg
movsb
stos
jo
inc
rorb
adcb
imul
jne
shll
repz
imul
mov
push
jg
mov
mov
fbld
xchg
and
fcoml
enter
fstps
pop
adc
and
and
hlt
je
mov
daa
push
imul
lret
mov
push
fwait
mov
or
xchg
lods
xchg
fs
aam
insl
mov
cmp
insb
mov
int
jne
xchg
loop
cmp
lods
jo
in
xor
testb
jbe
xchg
sub
clc
and
sahf
lahf
pop
add
add
sti
out
ljmp
inc
sub
jecxz
mov
sbb
pusha
and
mov
add
sbbb
aad
inc
clc
dec
aad
cmpsb
and
add
faddl
and
xlat
xor
mov
loopne
inc
leave
add
fldt
int
pop
cmp
xor
mov
pop
popf
aas
aas
mov
fsubrl
or
fimull
shlb
cmpsl
push
aas
sarb
mov
pop
sub
jno
adc
pushf
fiadds
arpl
cmp
pop
repz
mov
jl
and
xchg
sub
dec
dec
and
xorb
xor
sbb
add
mov
xor
pushf
fs
pop
outsb
movsl
fmulp
pop
les
inc
lock
push
repnz
addr16
lret
pop
pop
jecxz
lods
add
shll
pusha
push
ds
pusha
sbb
mov
subl
ljmp
outsl
or
adc
jo
iret
loop,pt
in
sub
adc
out
ja
cli
mov
faddl
ljmp
fisubrs
push
fildl
insl
out
xchg
mov
cmp
ss
fldenv
or
mov
jl
repz
xchg
jbe
mov
int3
add
cmp
fcoms
imul
dec
mov
push
sub
into
xchg
inc
in
pop
scas
adc
clc
insl
xor
jno
and
outsl
jge
gs
sub
ret
scas
loopne
inc
sbb
subl
push
jg
sbb
jecxz
std
jp
add
cmp
sbb
inc
mov
cmc
dec
andl
mov
mov
push
pop
add
pop
mov
and
xchg
pop
mov
adc
aam
pop
out
xchg
cs
cmpb
icebp
ret
aaa
iret
call
xor
ja
ljmp
addl
adc
adc
adc
xchg
mov
inc
push
js
movsl
mov
shll
pop
mov
adc
xor
cmc
sti
sub
mov
mov
stc
dec
jge
mov
or
cmpsb
push
inc
inc
stc
enter
mov
add
je
ret
adc
pop
mov
push
popa
fwait
les
icebp
pop
test
dec
aam
pop
aas
sbb
out
or
mov
mov
std
add
push
aaa
push
pop
xor
and
mov
mov
clc
in
mov
out
test
xor
enter
lcall
xchg
inc
or
pushf
mov
shlb
jae
mov
out
mov
dec
sub
xchg
xor
mov
loopne
addr16
sub
mov
lods
fldl
movsl
mov
push
dec
rcrb
pop
add
in
push
inc
movsl
imul
shr
ret
clc
and
adc
sbb
xchg
out
xchg
inc
lock
jl
jns
cli
pop
lret
push
loop
mov
imul
cmpsl
mov
out
mov
or
sbb
decb
ljmp
push
movsl
inc
leave
lock
loopne
in
out
les
fisttpll
push
ret
lds
adc
les
outsl
cwtl
into
push
pop
lds
push
push
adc
jmp
mov
xor
jg
loop
sbb
test
pop
dec
xchg
sahf
pop
push
mov
and
dec
xchg
test
mov
call
inc
test
jne
pushf
xchg
dec
testl
mov
sbb
jg
cld
push
mov
or
mov
daa
pop
sub
inc
xor
shr
movsl
enter
insb
and
mov
mov
pop
mov
insb
or
out
xchg
sbbb
dec
cmp
mov
imul
les
in
jle
add
xchg
cld
dec
pop
and
es
adc
adc
les
lods
lea
inc
flds
rclb
xchg
lea
adc
fidivl
and
add
mov
dec
adc
loope
sbb
jl
pushf
iret
cmp
cs
xchg
jp
sbb
fnclex
mov
cld
stc
mov
popa
aas
sbb
sub
call
or
mov
mov
incb
sub
jno
adc
sti
fcmovnu
jecxz
cltd
jae
sti
push
inc
cld
cmp
into
stos
and
test
mov
cmp
cmp
inc
sar
mov
adc
call
dec
sub
add
daa
sub
scas
pop
mov
call
xchg
sbb
lock
add
test
bound
inc
mov
in
lods
out
sub
out
ret
xchg
addr16
sub
les
push
lcall
bound
in
bound
mov
adc
adc
add
sbb
xchg
cmp
mov
pop
cmpsb
aad
jmp
loope
in
jno
hlt
cmp
pop
pop
inc
rclb
xorb
push
test
inc
lgs
jge
bnd
test
jmp
cltd
pop
fsubrs
mov
test
mov
pop
mov
je
inc
insl
push
aad
sub
shlb
pushf
daa
adc
ret
in
inc
or
add
cmc
rclb
pushf
cmp
ljmp
or
leave
daa
dec
movsb
popa
and
sub
pop
sub
push
cmpsb
lods
movsl
cmp
cmp
iret
xor
pop
jg
jns
das
sbb
xor
lret
loopne
ret
xorl
sbb
out
xor
inc
xor
lds
repz
mov
or
cli
mov
rorb
lods
or
inc
and
rcr
pop
or
or
movsl
lds
pop
and
cltd
dec
das
cmp
in
or
sbb
cmc
inc
pop
or
rorl
into
cmp
dec
cs
int3
xchg
jo
daa
mov
xchg
pmulhuw
mov
sub
dec
push
mov
push
scas
mov
iret
jbe
popf
cltd
pop
repnz
inc
jno
inc
push
add
data16
jle
mov
out
sub
lcall
fs
dec
rclb
loope
xchg
sbb
mov
loopne
in
sub
or
xchg
lds
xchg
aaa
jae
out
xor
mov
add
out
je
adc
insl
dec
mov
add
xor
scas
add
sahf
fwait
pop
add
jbe
fdivr
jnp
mov
lret
aam
xor
hlt
xor
mov
xchg
testl
jl
out
fdiv
mov
and
inc
pop
mov
and
sbb
jns
call
fmuls
and
or
fsubrl
fs
fistpll
aam
dec
or
lock
fldl
mov
ljmp
pop
inc
in
push
add
rcll
call
or
mov
sbb
push
leave
pop
cmp
mov
arpl
push
xor
or
test
std
movsl
repnz
js
sti
sub
jge
xchg
test
es
fsub
mov
rorl
sbb
push
mov
cmpsb
mov
sbb
outsl
clc
push
aad
testl
es
negb
or
icebp
xchg
shlb
gs
std
jns
movl
push
add
enter
mov
and
mov
ljmp
mov
mov
sbb
inc
idivb
pop
jmp
lock
pop
cli
xor
dec
frstor
mov
xchg
daa
stos
dec
mov
and
mov
fisubs
adc
add
jmp
xor
jle
push
insb
xor
or
imul
in
push
out
xor
adc
xchg
jo
fcomip
in
or
cmpl
sub
push
fwait
xor
sub
mov
jne
and
push
jns
lds
pop
push
sub
or
cmp
or
das
gs
repz
dec
pop
daa
push
push
insb
push
inc
loopne
jo
idiv
mov
pop
inc
je
inc
pop
pop
inc
aam
bound
aaa
cmp
jo
int
inc
mov
xchg
mov
das
dec
outsl
push
fs
xchg
jbe
pop
jno
dec
and
test
jge
test
pop
lods
or
xchg
sbb
mov
das
fiaddl
xor
rolb
xor
pop
dec
inc
bound
pop
or
or
adc
xor
fsubrs
xor
sub
iret
fcompl
sub
sbb
into
jmp
lahf
xor
or
pop
dec
mov
xchg
fstpl
movsb
sub
mov
cmpl
in
jle
and
mov
icebp
orb
sub
inc
addr16
mov
jns
add
pusha
leave
mov
jnp
cmp
or
lock
fisttps
and
fdivrs
movsb
adc
ficomps
pop
sahf
push
add
cmp
and
dec
shll
or
mov
jo
ljmp
or
push
jo
xor
xor
adc
or
daa
xchg
mov
xchg
and
xor
dec
fwait
fwait
arpl
add
mov
hlt
cmp
ds
or
xchg
clc
add
out
lods
inc
orb
cmpsb
and
lret
fimull
pop
dec
loopne
loopne
jmp
mov
int
orb
popf
loop
xor
push
and
add
lret
dec
enter
or
ds
sbb
xchg
and
or
xchg
popa
sbb
adc
imul
testl
movsb
scas
and
push
aad
lret
and
xchg
aaa
mov
pop
test
pop
pop
push
xchg
loopne
jne
data16
test
xchg
adc
cmpsl
out
js
mov
ret
mov
and
rcrb
ljmp
push
push
add
jae
mov
sbbl
add
xchg
xchg
call
cmp
incb
es
popa
rep
cwtl
push
jg
imul
fcomp
sub
test
test
jnp
imul
hlt
push
inc
out
adc
repnz
pop
in
sbb
dec
mov
xor
push
adc
pavgw
pop
shll
xor
push
jl
repz
inc
leave
push
sub
inc
mov
mov
in
call
out
ljmp
pop
outsl
clc
in
jb
and
mov
out
repz
in
adc
outsl
cmp
sbb
js
jg
adc
ja
pop
jne
xchg
pop
fsubr
inc
push
mov
sub
xor
fs
xchg
xchg
lahf
shr
fcompl
mov
das
adc
adc
add
xchg
ret
cld
das
mov
xchg
mov
xchg
in
dec
cmp
ret
inc
lret
in
cmpb
je
int
xor
scas
addb
mov
dec
cld
add
cmp
cmp
jp
mov
imul
mov
and
xor
rorl
fidivrs
inc
push
cmp
out
je
jecxz
inc
push
jmp
push
mov
shll
mov
fdivrl
pop
pop
lods
outsl
xchg
insl
outsl
int3
mov
adcb
adc
jmp
fcmovnb
repnz
lds
push
xchg
loop
je
loopne
sbb
fisttpl
lea
mov
lods
xchg
inc
fadds
lods
imul
jle
cmp
xlat
sbb
cltd
loope
test
call
outsb
jge
fcoms
int
aas
add
xchg
popf
xchg
cld
mov
pop
mov
pop
add
mov
cmp
sarl
adc
bound
js
es
mov
sub
pop
sub
outsl
and
sbbl
cli
mov
add
ds
xchg
fistpll
sarb
add
sub
push
adc
rorl
cmp
add
aam
icebp
je
stos
dec
xorb
and
lods
test
jg
xchg
or
scas
imul
lcall
mov
dec
adc
push
sub
cmpsb
mov
bound
jne
add
stos
loope
fsubrs
inc
or
mov
lods
lret
xchg
cmpsl
aad
nop
ffreep
ret
ja
mov
mov
pop
cmpsl
dec
or
dec
xlat
dec
add
inc
inc
dec
sbb
or
cmp
pop
mov
and
dec
es
in
mov
adc
inc
shr
and
adc
inc
adc
dec
xchg
xor
and
sti
cmp
fimull
xchg
sbb
pop
lea
sub
ja
loope
jo
push
mov
out
inc
adcb
xorb
mov
add
adc
shrb
das
sbb
les
cwtl
addb
sub
data16
push
push
nop
gs
fbld
cmc
ror
jmp
pop
push
inc
mov
push
sbb
sbb
adc
and
icebp
addr16
leave
std
jecxz
pop
ror
rol
push
or
es
mov
push
jge
inc
insb
sbb
adc
and
jp
lds
xor
addr16
adc
jb
in
cmp
add
sti
cmp
mov
lret
mov
sbb
mov
jp
adc
fs
sub
test
lcall
lret
dec
sub
pop
jne
movsl
mov
xchg
mov
pop
push
test
out
adc
sbb
jl
popf
in
sub
leave
inc
push
push
xchg
xchg
pop
fcmove
repnz
sub
popa
xor
add
pop
mov
adc
adc
push
fsts
jl
sahf
shll
jno
sub
cmpsb
sub
ficompl
mov
mov
pop
fimuls
sbbb
lds
pushf
vmovss
xor
loope
jo
fstps
mulb
pop
mov
jnp
sub
cs
push
in
bound
inc
push
sub
lock
js
fnstsw
pop
ficoml
add
repnz
sub
mov
movsl
dec
push
stos
sub
mov
adc
adc
jge
mov
and
subl
jle
fwait
dec
vpmacssdqh
sub
and
pop
mov
out
fdivs
pop
in
lcall
xor
iret
jns
add
mov
aam
mov
dec
xlat
jge
ret
aas
aas
mov
les
out
mov
jae
je
sub
dec
pop
and
mov
cmc
push
fldl
xchg
gs
inc
test
jmp
test
js
add
call
fistpl
xor
int3
mov
in
mov
ret
push
lods
pop
lods
xchg
dec
mov
gs
mov
sarb
rorb
mov
ljmp
nop
mov
or
sti
scas
addb
jl
cmp
xor
mov
push
cmp
mov
xor
jno
pop
stc
xor
adc
arpl
stos
lds
aaa
dec
push
outsb
dec
fldt
addr16
fisubs
push
cmp
or
out
xchg
sbb
adc
fdivr
or
notl
sub
cmp
lods
testb
rcrl
aad
ss
push
subl
jmp
sbb
rclb
fldl
int
popa
adc
or
cltd
inc
or
popf
sbb
addb
inc
sahf
jl
xchg
mov
rorl
cld
mov
pop
mov
loope
dec
in
jmp
andl
add
lock
stos
xor
xor
pushf
add
out
mov
xchg
xor
and
mov
adc
add
push
mov
inc
fnstenv
cwtl
jmp
push
outsl
fstpl
jmp
add
push
loopne
inc
pop
lret
inc
outsb
mov
les
out
out
inc
fisubs
arpl
pop
push
pop
scas
ljmp
inc
call
add
and
hlt
outsl
cmp
push
int3
popa
outsb
mov
jnp
add
loopne
ret
mov
repnz
cmp
xchg
rorb
shll
out
mov
movsl
and
icebp
mov
jo
lret
nop
ss
loop
sbb
ret
jo
cmp
cmp
test
mov
aam
sub
add
fdivl
xchg
sti
mov
xor
fsub
mov
sbb
mov
gs
inc
jl
push
mov
and
fcompp
or
es
or
test
add
ss
xchg
gs
sbb
mov
inc
push
push
test
xchg
mov
sbb
mov
xor
lahf
nop
ds
push
sbbb
fwait
add
dec
lods
push
clc
les
in
lods
xchg
scas
int
mov
push
int3
mov
pop
rorl
int
push
cs
rclb
cmp
pop
in
jbe
and
mov
jo
fisttpll
mov
daa
pop
pop
or
fistpll
xchg
add
inc
lret
push
or
jl
test
sbb
lret
pop
sahf
jle
add
js
mov
push
ficompl
pop
jnp
push
outsb
out
sbb
int3
notb
int
cmp
sub
ja
jl
dec
lahf
dec
lds
xchg
repz
xor
or
jmp
add
inc
leave
out
inc
dec
xchg
mov
sbb
and
movsb
nop
pop
js
bound
and
mov
mov
add
and
add
add
jbe
outsl
mov
leave
cmp
push
pop
add
sbb
sbb
or
adc
out
fsts
ja
sub
pop
push
loopne
xorb
and
sarb
push
fisttps
sbb
out
adc
pop
and
dec
adc
push
mov
mov
scas
adc
push
add
adc
incl
xchg
inc
xor
lahf
jle
push
add
mov
adc
mov
mov
push
and
mov
pop
std
and
sub
cmp
dec
insb
lahf
fsts
sbbl
or
in
push
out
hlt
sub
psubd
mov
icebp
stc
mov
add
in
adc
popf
flds
mov
add
out
mov
adc
fnstsw
fwait
ljmp
cmp
bound
or
rclb
fimuls
lock
pop
sarb
es
js
dec
adc
jnp
into
pop
or
sbb
test
idivb
aaa
add
js
arpl
xchg
das
and
popa
shl
sub
push
xor
repnz
data16
mov
cli
dec
inc
mov
scas
inc
int
dec
inc
jne
js
pop
or
loopne
inc
ss
icebp
add
insl
loope
dec
test
pusha
cs
push
and
push
xor
xchg
jg
mov
mov
xchg
js
popf
fisttpll
xchg
ja
jle
dec
and
nop
divb
mov
sbb
push
and
test
ljmp
out
xchg
push
call
aad
inc
add
scas
enter
sahf
jge
cmp
add
rcrb
inc
ds
mov
mov
mov
out
cmpsl
jno
push
arpl
popf
cmp
mov
sub
pop
ja
mov
pop
inc
cmc
adcl
xchg
add
dec
adc
mov
lock
jbe
daa
or
mov
out
inc
push
dec
add
inc
sub
or
jnp
xorl
sub
out
and
aas
je
fwait
cld
ds
xchg
sub
mov
in
sub
mov
inc
mov
lahf
xor
add
rcrl
adcb
arpl
test
push
mov
xlat
mov
jb
push
push
cltd
stc
jo
movsb
xchg
movsb
fstpt
scas
xchg
or
fldcw
fdivrl
lods
push
shrb
sub
xor
xchg
adc
repnz
push
js
jp
push
dec
mov
in
cwtl
lods
dec
in
jp
lahf
and
ds
shlb
pop
test
mov
mov
imul
sbb
sbb
mov
scas
cmp
mov
or
mov
sbb
nop
jle
dec
ficoml
and
mov
cli
ret
pop
mov
cld
mov
xor
mov
push
sbb
and
add
popa
subl
or
push
sarb
test
sahf
adc
movsl
push
push
call
adc
rcrb
and
imul
jne
adc
fmuls
jle
and
mov
adc
inc
xor
pushf
pop
push
and
fcoms
mov
jnp
loope
xor
cltd
xor
adc
pusha
push
nop
cmp
lds
movsl
repz
dec
inc
sahf
jl
test
sub
clc
cltd
aaa
jl
xor
inc
scas
inc
inc
lds
or
int3
jb
into
fwait
lds
cli
leave
mov
ja
fistps
popf
sub
test
fistl
in
outsb
cmp
cld
test
or
cmp
out
insl
push
pop
jns
jecxz
mov
pcmpgtd
fidivl
mov
inc
pop
xor
mov
hlt
mov
outsb
das
ds
in
mov
xlat
sub
loop
sbb
ror
sbb
and
or
ret
addl
inc
stc
mov
or
cmpl
cmp
lods
xor
repnz
mov
fsubs
or
shr
ret
sub
mov
lds
mov
je
sbb
xchg
adc
jns
fs
fistl
icebp
je
sub
lahf
lock
sub
test
push
pop
cmp
push
mov
jo
out
mov
inc
jmp
sbb
int
pop
clc
insl
mov
mov
pushf
lods
fwait
pop
sub
fwait
dec
repz
lret
ja
jns
inc
lahf
fildll
stos
cwtl
jno
stos
mov
lret
add
fsubr
js
sbb
push
sti
ret
pop
cmpsb
mov
out
mov
pop
ljmp
push
mov
out
imul
fcmovu
pop
lea
aad
push
and
popf
lods
test
insl
jns
int
and
push
xlat
imul
adc
aad
ret
dec
insl
or
fnsaves
sub
mov
movsl
adc
ret
jnp
in
test
dec
xchg
in
jns
das
jg
mov
cmc
mov
mov
popa
sbb
aas
je
sbb
int
pop
lret
mov
cli
arpl
or
push
ret
dec
inc
sbb
mov
cli
push
adc
pushf
inc
mov
inc
ljmp
sbb
push
repz
test
aam
or
fistl
jecxz
mov
jb
loopne
aas
cs
jle
and
into
mov
xor
push
pop
mov
pop
adc
cmp
adc
add
dec
and
mov
fsub
pop
or
fdivl
add
ret
mov
es
jecxz
fidivl
and
jno
hlt
inc
scas
pop
aas
pop
mov
mov
xor
daa
xor
sub
mov
mov
mov
sarb
pop
xchg
pop
fildll
arpl
xchg
cmp
aam
or
and
subl
ret
scas
dec
jmp
inc
mov
out
vmptrld
mov
in
push
pop
jbe
jno
scas
addr16
ds
leave
adc
fwait
movsl
pop
in
mov
jp
repz
push
dec
jg
test
popa
mov
ficoml
xor
mov
test
je
data16
push
jo
aam
sbb
pushf
lds
pop
jp
xor
je
in
aas
sub
push
lods
jbe
out
outsb
jg
mov
icebp
push
in
inc
push
aad
jp
aas
jmp
insb
push
outsl
lahf
into
data16
lcall
add
jl
jp
lahf
and
clc
sub
mov
cmp
fsub
jbe
pop
clc
xchg
jns
outsb
sbb
fwait
mov
push
movsl
jp
sbb
pop
into
ds
stc
xor
repnz
int3
jbe
fbld
jecxz
jmp
dec
mov
roll
aad
dec
cmpsl
adc
daa
addl
pop
push
loope
insl
repz
mov
aam
or
ret
shlb
fimull
push
jns
mov
xchg
adc
fadds
and
jb
lea
pop
mov
mov
push
adc
dec
dec
lahf
jns
ret
shll
sbb
cmp
adc
imul
or
pop
int3
xchg
pop
loop
mov
jg
push
push
xchg
dec
push
mov
jle
or
mov
push
out
test
repz
fnstcw
jae
push
or
js
jg
test
ja
sbb
stos
push
inc
pop
jmp
dec
pop
mov
leave
popf
jmp
push
xchg
rorl
shrb
les
xchg
mov
sbb
inc
jns
and
cli
stos
insl
ss
mov
arpl
leave
or
push
addr16
lods
enter
dec
icebp
mov
pop
xor
fwait
or
sarl
fstpl
or
xlat
push
sbb
test
sub
cmpsb
lods
fs
mov
cmp
jne
xchg
dec
adc
lcall
and
mov
and
adc
mov
hlt
imul
lcall
pop
test
in
shlb
test
sub
call
test
jp
sub
rorl
jno
bound
popa
mov
movb
and
addr16
and
pop
stc
pop
leave
shll
jl
adc
sbb
mov
jbe
mov
sbb
sub
pusha
sbb
rcll
rcrb
out
mov
sbb
inc
es
dec
insb
push
mov
leave
mov
outsb
out
mov
das
daa
pop
in
adc
inc
xchg
dec
or
or
push
mov
outsl
push
mov
cwtl
scas
xchg
mov
inc
and
daa
ss
loope
dec
xor
xorb
and
divb
ficomps
sbb
xor
fimuls
data16
mov
in
pop
cmpsb
dec
int3
pop
in
sub
xor
inc
mov
xchg
jg
xchg
mov
in
adc
push
movsb
inc
push
push
push
jb
out
arpl
mov
popf
mov
inc
mov
jns
ja
popa
sbb
xchg
sbb
into
push
imul
push
repnz
lock
and
xchg
mov
mov
cmp
dec
lods
mov
test
jge
arpl
adc
jl
push
movsb
cmp
dec
sbb
sbb
mov
adc
sub
mov
in
cld
lret
jl
out
jne
fnstenv
mov
jo
shlb
dec
out
push
sahf
pop
add
imul
mov
cmp
xchg
adc
leave
leave
pop
mov
mov
xlat
ret
fwait
xor
jne
jp
and
inc
scas
dec
dec
sbb
outsl
lret
es
sbb
shlb
pop
hlt
mov
inc
sbb
xlat
lds
lahf
adc
dec
xor
mov
xor
and
add
enter
je
loop
cmp
scas
jbe
cmp
outsl
roll
out
sbb
pop
loope
cmp
movsb
mov
cmp
ret
add
inc
xor
jl
pop
stc
jmp
jne
call
xor
fsubs
add
xorl
adc
sub
push
fnstsw
scas
rcll
imul
dec
adc
sahf
shlb
pop
shlb
add
lahf
decl
jp
loope
inc
outsb
pop
clc
adc
jbe
xor
and
push
push
inc
rol
inc
ret
pop
shlb
inc
inc
call
sub
adc
mov
cmp
mov
inc
dec
adc
mov
stc
xchg
pop
ds
pop
mov
add
jne
add
jmp
sub
test
adc
iret
shlb
cli
ljmp
pop
in
lret
jno
out
pop
and
scas
lds
ja
inc
xchg
out
rorl
or
mov
xor
fldt
imul
inc
dec
faddl
xor
push
loop
mov
push
sub
jno
test
sbb
pop
add
fimull
pop
inc
cmp
mov
inc
in
dec
inc
hlt
loop
js
rorb
insb
popf
inc
loop
jecxz
ljmp
sbb
adc
inc
std
jmp
js
cmp
push
insb
pop
insb
jo
out
adc
xlat
aas
mov
pop
lcall
jbe
jl
insb
pusha
out
nop
or
mov
movsb
int3
sub
data16
jge
andl
cld
pop
or
dec
mov
bound
inc
test
insb
mov
jg
jle
dec
shlb
inc
xor
lret
ljmp
and
and
mov
out
pop
loopne
xchg
adc
push
cmpsl
mov
sarl
pop
fsubl
sar
scas
lcall
pushf
xchg
mov
lret
push
push
mov
aam
jg
es
sub
xchg
fsubp
leave
loop
sub
scas
nop
add
jne
daa
rcll
mov
mov
push
jno
xor
dec
aad
inc
not
fwait
sarl
mov
pop
push
outsl
adc
aaa
inc
add
or
addr16
popa
mov
fldt
push
and
and
sbbb
shll
mov
push
stos
lds
cli
mov
mov
dec
sbb
inc
cltd
mov
or
int
cmpsb
mov
push
arpl
or
inc
xchg
test
aaa
test
jl
and
lahf
xor
xchg
addr16
dec
jg
loopne
cld
ret
repz
dec
pop
popf
lods
pop
das
jge
fidivs
enter
dec
mov
and
pop
inc
adc
inc
fsubrp
inc
das
push
push
sub
xchg
add
cmpsl
mov
icebp
xlat
out
cmc
and
lcall
out
hlt
push
movsl
nop
inc
adc
shr
lahf
cmp
rcrl
stos
lret
stc
and
mov
cwtl
xorb
jl
sti
push
rcrl
add
fwait
cmp
js
out
push
lret
in
mov
mov
and
mov
push
fldcw
and
pop
sbb
fmull
sbb
push
lret
sbb
sahf
ret
jmp
scas
stos
adc
mov
rorb
jo
out
imul
mov
inc
xchg
mov
cmp
mov
out
inc
iret
subb
mov
sbb
push
sub
data16
or
sub
scas
jne
jge
out
leave
arpl
dec
in
lods
lea
test
fistps
insb
shrl
sbb
imul
scas
or
scas
loopne
mov
xor
cmc
mov
mov
daa
adc
sbb
test
and
leave
repz
cmpsl
ret
push
pop
imul
xor
icebp
inc
cmp
daa
xchg
dec
or
mov
out
gs
mov
xchg
outsb
ljmp
mov
jno
sbb
push
dec
popf
inc
jo
xorl
test
sub
pop
push
ret
dec
or
addr16
or
fisttpll
lea
pop
add
xchg
inc
lods
std
fwait
loop
inc
negw
addr16
pop
in
add
and
pop
cmp
fwait
mov
xchg
ds
and
push
or
inc
aad
xor
cmp
push
test
jns
jno
repz
sbb
sbb
inc
sti
imul
xchg
cmc
and
cmp
pop
jecxz
cli
pop
insb
and
inc
rcrl
push
mov
jne
lea
push
scas
jg
insb
mov
push
cmp
jecxz
mov
pop
jmp
nopl
mov
fcmovnu
out
insb
stc
lea
insb
fists
loopne
sahf
push
jnp
into
ret
xlat
mov
pop
push
data16
jae
iret
push
pop
jo
push
jle
iret
mov
jo
or
lea
mov
add
enter
dec
outsl
mov
mov
mov
mov
mov
pop
sub
sub
jno
adc
test
mov
leave
cmpsb
loope
jp
jge
pop
stc
xchg
sbb
mov
stos
aad
out
adc
out
push
imul
mov
clc
ja
xor
fmull
mov
ja
aaa
sub
mov
insb
test
add
xlat
push
aaa
stc
daa
sub
and
jecxz
call
sub
push
mov
imull
adc
call
insb
adc
lret
jle
sti
je
mov
fisubrl
fiaddl
subb
iret
dec
sahf
loop
cmp
xchg
imul
scas
pop
mov
insl
data16
push
orl
mov
arpl
pop
icebp
or
cs
jmp
subb
push
fmulp
imul
mov
cmc
cwtl
dec
leave
push
or
imul
or
xchg
adc
int3
mov
cmp
adc
push
aad
adc
pushl
repz
test
imul
push
sub
jne
jae
mov
leave
rol
cmc
sar
pop
lea
out
in
out
lock
adc
xorb
add
xchg
in
mov
insl
faddp
xchg
add
jp
sbb
insl
jb
ficoms
adc
push
pop
icebp
mov
push
in
fsubrp
add
sbbb
orl
stos
ljmp
test
dec
or
call
stos
shr
outsb
push
sbb
push
int
shll
sbb
adc
rcr
ljmp
dec
push
lea
aaa
jnp
push
fldl
in
notl
add
sahf
mov
test
xor
and
mov
loop
xchg
rcrl
pop
test
lcall
call
out
cli
sbb
xchg
aaa
sub
inc
push
mov
jb
out
adc
pop
clc
xchg
fcomi
mov
pusha
jae
and
sbb
lods
sbbl
xchg
test
lret
mov
fs
push
pop
gs
adc
mov
push
xchg
test
scas
pusha
lret
test
jae
cs
mov
xchg
outsl
loop
cmp
push
push
clc
push
mov
repnz
jne
pop
xlat
aam
testl
out
std
sti
mov
fcomp
xchg
dec
xchg
cmc
fwait
cmp
movmskps
int
pop
or
adc
lea
test
data16
rclb
and
cwtl
inc
sub
jecxz
aam
pop
jae
xor
push
sbb
pop
cmp
push
push
lods
stc
xor
icebp
das
xor
push
scas
mov
adc
xchg
adc
rclb
jge
adc
jecxz
push
pop
es
in
jecxz
jge
lahf
in
mov
test
dec
xchg
shrl
mov
fs
shr
xchg
ss
testl
push
xchg
loop
pop
cmp
jmp
or
add
sbb
rol
xor
sbb
jge
ficompl
popa
xchg
cli
je
clc
pop
popf
jecxz
dec
js
aam
std
jo
adc
lret
lcall
insl
lret
or
cmp
lret
pop
adc
adc
cmpsb
std
arpl
xchg
and
shll
and
adc
lret
mov
lcall
and
mov
jnp
leave
xchg
sar
dec
push
cwtl
jb
mov
arpl
insl
lods
push
data16
jo
lea
mov
leave
outsb
or
nop
in
mov
gs
jnp
sarl
and
movsb
xchg
into
mov
fldl
roll
mov
mov
mov
aad
ljmp
insl
fsubrs
mov
or
cmp
aas
fdivrs
sbb
sbb
outsb
and
ffree
inc
jecxz
mov
out
into
pop
ret
or
arpl
ret
mov
es
aad
mov
xorl
out
adc
cmpsb
lret
cmp
fisubrl
or
jns
hlt
data16
dec
aaa
nop
adc
jecxz
arpl
in
xchg
outsl
mov
pushf
inc
jge,pt
in
xchg
jne
pop
jbe
lods
xor
dec
mov
fstpt
in
dec
xchg
jnp
add
into
mov
loope
jp
inc
cli
jmp
jnp
pop
add
push
loopne
or
xchg
jne
xchg
and
pop
hlt
testl
bound
dec
aam
mov
mov
loop
pop
sub
sarb
pop
int
leave
daa
mov
aaa
les
mov
cmp
inc
jge
and
mov
inc
sbb
addr16
add
iret
sub
popa
and
xchg
pop
add
movsl
fdivs
and
xor
das
jle
cwtl
mov
dec
jge
std
jge
mov
mov
enter
mov
mov
fwait
xchg
lahf
rcrl
sub
and
scas
xor
pop
pusha
push
pop
inc
nop
cmp
adcb
aas
and
fdivl
dec
scas
repz
and
lret
and
pop
out
push
sbb
add
mov
loope
adc
jg
and
jge
cs
mov
scas
fcomps
fstps
lods
inc
clc
jmp
and
imul
adc
and
loop
mov
jmp
jb
shlb
shll
cmc
outsl
cld
call
cmp
je
sub
add
jno
movsl
sbb
adc
insb
rol
add
mov
pushf
jmp
and
pop
add
div
pop
or
cltd
in
mov
int
sub
push
inc
addr16
pop
or
mov
jmp
sbb
rorl
pop
movsl
adc
dec
call
fwait
cmp
sub
int3
jmp
mov
inc
repz
adc
cmc
sbb
ret
stos
inc
xlat
cmc
mov
and
jmp
dec
loopne
pop
adc
imul
popf
sbb
pop
out
dec
scas
int3
test
aaa
roll
mov
ret
inc
lock
sbb
sub
lret
hlt
dec
icebp
mov
mov
and
xchg
xor
and
in
inc
sarb
push
movb
sti
push
push
lds
inc
pop
int
fldenv
ficoml
mov
lea
mov
in
dec
mov
fnsave
nop
push
push
repz
es
xor
lds
dec
orl
aaa
mov
out
in
mull
scas
and
pushf
lock
inc
cmp
arpl
push
lea
sub
fcoms
xchg
inc
lds
push
or
aad
mov
insb
mov
int
setno
pop
pop
inc
sbb
int3
icebp
pusha
push
out
xchg
scas
push
imul
rorb
sarb
jmp
adc
test
xchg
and
inc
or
mov
icebp
push
imull
jne
cmpsl
mov
cmp
inc
ljmp
mov
jnp
sahf
dec
jle
lods
fsubl
inc
aad
inc
lret
jle
arpl
dec
cmp
rolb
loope
fmul
sbb
inc
ret
adc
movsl
inc
outsb
je
dec
inc
insb
and
test
std
push
mov
iret
movsb
push
je
jle
rcl
lahf
xor
nop
shll
xor
pusha
frndint
xlat
jecxz
cmp
stos
pop
jg
jl
les
inc
add
inc
push
add
xor
mov
cmp
xchg
jnp
jmpw
jns
inc
mov
nop
sub
js
and
push
and
cmpsb
cmp
ficomps
int3
hlt
cltd
jbe
shlb
loopne
cwtl
daa
stos
stos
jno
and
gs
jmp
dec
sti
add
and
push
add
test
outsl
cmc
jecxz
and
loopne
fsubrs
mov
dec
popa
lods
xor
sub
or
cmpsb
mov
and
and
loop
mov
ljmp
pusha
cmp
out
add
dec
rorb
sbb
adc
push
and
clc
xchg
dec
jmp
pop
xor
inc
dec
dec
cwtl
cld
scas
cmp
sbb
fsubl
icebp
jp
jle
dec
in
stos
jne
jge
pop
pop
rolb
mov
and
out
imul
aas
cld
dec
sbb
cmc
test
or
mov
push
xlat
fwait
int3
stc
adc
xchg
cmpsb
in
and
jno
pop
ljmp
inc
das
jmp
or
ljmp
aaa
pop
mov
cmpsb
inc
pop
out
and
movsb
pusha
fisubrl
jbe
mov
int3
call
mov
cmp
adc
aaa
inc
popf
xlat
and
pop
testl
push
jge
mov
popa
lahf
insl
test
addl
push
xchg
cmpsl
cmp
adc
shrb
negb
cmp
daa
sbb
pop
jne
push
inc
jo
xlat
scas
dec
sbb
inc
sbb
adc
push
push
std
subb
fwait
push
or
addr16
sub
test
sbb
sti
das
sub
push
pop
hlt
sbb
xlat
in
pop
pop
push
and
jge
data16
mov
mov
mov
in
mov
mov
mov
mov
dec
xor
nopl
dec
xlat
das
add
clc
jp
push
rcr
jmp
pop
cwtl
insb
ljmp
ja
pop
lahf
mov
mov
je
dec
out
cltd
push
or
ljmp
push
xor
mov
cmp
test
ret
inc
ret
mov
inc
inc
jb
test
push
jo
js
mov
add
mov
xchg
and
pop
add
into
xchg
add
sub
inc
mov
jne
shlb
ds
push
jne
cmp
mov
fwait
call
outsb
ficoms
incl
cmpsb
rcrb
xchg
add
xchg
sbb
push
mov
sub
out
scas
ss
sti
fistpll
sti
dec
enter
push
push
ret
inc
sbb
sti
or
jns
sub
fnstsw
in
pop
mov
push
push
fisubs
cmp
push
jae
out
mov
test
in
repz
repnz
ret
jp
pop
jno
addl
ljmp
jno
loop
cmp
cmc
xlat
fs
jbe
fstps
jae
into
out
stos
and
adc
cli
pop
pop
sub
int3
lahf
lahf
push
mov
push
or
aas
enter
sub
bound
mov
push
jbe
mov
sub
roll
mov
xor
xchg
ljmp
in
dec
or
movsl
fstpl
ret
add
sub
sbb
js
xor
push
lea
mulb
lret
mov
mov
pop
sbb
xor
mov
push
mov
loope
xor
iret
add
add
rorl
cltd
xor
lods
push
ljmp
cwtl
rcrl
pushf
fcompl
mov
jge
daa
sbb
push
fdivl
push
mov
xchg
mov
mov
push
xchg
xor
loop
shlb
cs
or
lret
xchg
mov
in
dec
cmp
dec
int
jp
jmp
fmul
mov
add
mov
xor
sub
push
icebp
stos
push
or
jecxz
sbbl
movups
mov
jle
lcall
adc
inc
mov
cld
test
shlb
js
cmp
bound
sarl
test
movl
shll
sub
cmp
lahf
jp
popa
xlat
stos
sbb
pop
pushf
jmp
out
adcl
push
jns
jo
push
sub
cwtl
outsl
jb
aaa
in
test
popf
adcb
sub
pop
inc
in
in
pop
xor
insl
adc
jae
xchg
ret
shll
lret
mov
xlat
iret
mov
xchg
leave
xchg
adc
bound
mov
sbb
sarb
ucomiss
in
jb
push
out
mov
jmp
shrb
insb
and
push
push
popf
dec
in
fs
push
xchg
mov
pop
bound
sbb
mov
fdivs
lock
popf
aam
int
and
sbb
andl
cmp
pop
jl
nop
lea
add
adc
inc
or
xlat
or
mov
ds
mov
jbe
xor
sub
es
pop
subl
clc
mov
ror
sbb
icebp
mov
xor
mov
je
push
mov
sbb
fnstenv
mov
test
xchg
inc
arpl
inc
push
add
adc
dec
inc
movsl
lret
test
add
sti
cmp
incl
add
add
addr16
or
jb
fs
pop
inc
add
nop
xor
pop
inc
jne
or
mov
iret
mov
push
call
adc
mov
or
xchg
add
in
lods
adc
mov
insb
mov
push
xor
add
xchg
fmull
jle
xor
mov
sahf
xchg
dec
outsb
xchg
pop
xchg
movsb
xor
pop
mov
sbb
jne
push
lock
push
mov
mov
push
inc
int3
xchg
in
bound
xchg
hlt
jnp
jbe
or
mov
cmc
lcall
sbb
xchg
fstpt
frstor
icebp
mov
xor
shr
mov
cmpsb
inc
inc
inc
mulps
orl
fs
lahf
push
loopne
rcll
fwait
shrl
add
dec
ret
jno
jo
pop
and
mov
mov
cmp
pop
sahf
mov
xchg
outsb
test
stos
cmp
lock
cmp
aad
loopne
or
cmc
mulb
inc
roll
add
ds
movsl
xlat
rolb
shl
mov
test
gs
mov
fsubrl
push
es
adc
mov
cmp
sub
test
sub
cmpsl
std
cmp
jge
cmc
jns
stos
cmp
loope
pop
xchg
lret
dec
jne
gs
out
sbb
or
insl
addb
je
imull
popf
add
jnp
pop
out
dec
divl
outsl
push
test
inc
adc
dec
jbe
shrw
nop
out
mov
test
pop
dec
sub
out
push
mov
cmp
or
mov
cmp
fdivs
jb
rcll
push
push
sahf
fnstcw
add
adc
mov
pop
imul
es
iret
pop
test
xor
sub
inc
lds
jb
iret
push
or
mov
jns
xchg
and
xchg
add
pop
or
mov
cmpsb
cmpsb
stos
push
jae
sub
adc
sahf
pop
push
aam
out
popf
fistl
sub
or
push
and
shll
jb
xchg
rol
mov
and
sbb
stos
mov
jne
aad
jae
fisttpl
out
jo
fucomi
dec
fsts
xorb
out
out
cltd
aad
inc
sub
lea
lea
jmp
push
sub
pop
jo
mov
dec
jo
mov
jno
fdivs
mov
jbe
gs
inc
mov
mov
or
or
gs
fsin
and
push
jl
inc
sbb
scas
icebp
or
mov
fisubrs
iret
repz
call
loop
and
jle
jnp
jmp
shr
sub
into
addr16
cwtl
mov
daa
jb
pop
and
add
loope
xor
test
cltd
movsb
cmp
pop
jae
int
scas
sub
enter
jl
xchg
fsub
pushf
push
decl
je
fisttpl
or
pause
xor
mov
add
clc
test
lsl
mov
pop
lret
mov
pop
imul
shll
fisubs
xchg
or
ds
imul
enter
stos
jmp
jl
xor
stos
fildll
dec
mov
dec
shr
xchg
js
sarb
add
xor
iret
sub
mulb
jl
sub
ret
cmpl
repnz
xchg
std
sbb
das
jle
jp
lahf
mov
repnz
ljmp
test
xchg
into
in
fwait
enter
aaa
jbe
pop
mov
daa
xor
gs
mov
pop
add
movsl
int3
inc
mov
dec
mov
ds
mov
sub
loop
sbb
dec
icebp
xchg
lret
push
or
xchg
outsl
les
lods
cmp
lock
add
inc
sub
je
addl
inc
mov
add
loop
fsubrs
aam
hlt
cwtl
adc
cmpl
sbb
sbb
shlb
add
mov
ret
cmp
lret
mov
les
pop
mov
into
cmp
pop
fdivp
idivl
adc
cltd
and
cltd
test
push
das
xrelease
lret
adc
das
jp
mov
in
test
push
sbb
movsb
add
lea
push
add
sahf
cmpsb
push
stc
shr
fisttps
adc
adc
loop
jo
je
jb
mov
sbbl
xchg
dec
push
jbe
dec
out
mov
or
sbbl
xchg
das
sbb
cmp
outsb
xor
xor
aaa
pop
stos
lods
mov
add
xchg
xchg
fwait
ds
mov
xchg
loop
add
xor
mov
stc
jp
add
outsl
push
movsl
jbe
in
sbb
jecxz
into
adc
mov
inc
add
mov
out
rcr
mov
inc
mov
mov
enter
jmp
jnp
inc
pop
je
cmpl
repz
outsl
pop
or
mov
mov
scas
leave
ret
jnp
xchg
add
sarb
adc
pop
pop
or
mov
and
mov
call
stc
call
sub
and
sbb
sbb
movsb
leave
out
not
add
ret
popf
fld
jnp
fwait
and
shll
xor
clc
add
push
sbb
cmp
mov
xor
jb
fwait
cmpsl
jp
mov
aad
out
or
jnp
aam
int
jno
mov
push
jbe
shll
je
sub
cmp
xchg
aam
mov
scas
popa
mov
out
daa
out
mov
xlat
daa
arpl
pushf
jl
out
pop
imul
lret
inc
int3
inc
mov
sub
in
pop
ljmp
in
mov
or
xchg
decl
mov
push
imul
add
xchg
stos
sub
scas
pop
push
int3
jnp
rcrb
mov
push
dec
cmp
push
cmpsb
pop
push
pop
lods
cltd
stos
shll
pushf
filds
inc
xchg
mov
sbb
inc
inc
loop
pushf
cmp
cli
add
sbb
mov
imul
inc
das
inc
rcr
lods
mov
xchg
scas
jb
push
fidivs
and
push
lcall
popa
dec
iret
xchg
in
jmp
pop
pop
into
xchg
lods
fnstsw
test
mov
popf
test
mov
sbb
cld
inc
xchg
addr16
notb
cmp
fsubs
stc
rorl
arpl
cmp
sub
cmpb
test
cmp
push
mov
mov
push
aas
ret
mov
in
leave
jecxz
cltd
stos
mov
cld
or
movsl
fs
xchg
mov
or
sbb
pop
push
add
xchg
dec
in
in
dec
cmp
and
idivl
pop
push
in
setp
mov
incb
add
jg
sahf
push
sbb
and
dec
xchg
xor
aas
sbb
insb
cmpsb
test
and
and
lods
jbe
insb
insl
pushf
mov
sub
cltd
mov
nop
in
test
cmp
insb
out
xchg
ljmp
adc
fidivrs
stos
mov
mov
mov
cld
push
xchg
enter
data16
inc
mov
ljmp
mov
pop
adc
and
xor
jg
mov
add
or
push
sbb
dec
outsl
fisubs
mov
push
lret
int
add
adcl
popf
dec
fstpt
pop
jns
insb
or
lret
xchg
rorl
jns
push
and
xchg
mov
push
pop
shrl
jo
scas
xor
inc
out
outsb
xor
ficomps
fidivrl
cmp
inc
fimull
jne
sahf
and
scas
inc
leave
data16
or
rcrb
femms
test
shlb
pop
push
cmp
and
cmp
mov
lret
and
lret
mov
test
inc
fsubr
inc
cmpsb
rcr
xlat
and
push
rcrb
scas
mov
or
lods
push
fidivrl
sub
repnz
sar
dec
outsl
loop
cmp
pop
into
mov
push
adc
cmc
repnz
and
rcrb
loopne
fldcw
call
xchg
inc
mov
jmp
retw
xor
loope
inc
xchg
push
movsb
and
gs
push
outsl
adc
aad
fmul
clc
push
jnp
addb
insb
leave
lcall
imul
hlt
xor
call
pop
int3
mov
ds
pop
aaa
loopne
fistpll
out
mov
cli
int3
push
push
enter
cmp
dec
loope
movsb
mov
cmc
dec
adc
cmp
dec
into
mov
xor
lods
pushf
mov
or
js
cmp
mov
push
cltd
inc
stos
and
lock
inc
sub
lea
stos
pop
xchg
dec
cwtl
pop
lea
fcomps
aas
mov
xlat
jecxz
sub
dec
pop
lock
sub
ret
dec
cmp
int
sbb
sub
into
xor
xchg
movsb
dec
cltd
aas
mov
add
je
cmp
mov
psrld
popa
mov
cmpsb
icebp
aaa
addb
and
push
in
adcl
inc
subb
xchg
jl
call
jno
pop
ljmp
pop
xchg
std
pop
int
cmpsl
add
test
mov
mov
ja
push
scas
cmc
jns
int
or
rclb
les
sub
mov
mov
mov
mov
fsubl
lods
loope
jno
push
pushf
pushf
js
loope
cmpb
dec
iret
in
and
sub
pop
pop
ss
aam
je
addr16
pop
mov
rcrb
js
fisttpl
cs
pop
jno
aaa
jle
test
xor
and
mov
hlt
xor
addr16
vmaxps
test
imul
out
adc
xlat
cwtl
cmp
int
adc
ljmp
test
jp
push
ret
xor
pushf
mov
negb
in
aad
cmpb
fnstcw
bound
xchg
or
adc
ds
dec
jo
addr16
push
repnz
xchg
pop
inc
xchg
out
rcll
cli
or
pop
out
andb
lds
fistpl
cmc
inc
pop
jg
in
rcrb
or
jmp
jl
xchg
js
inc
add
or
out
jle
fists
mov
push
imul
into
icebp
movsl
push
stos
jno
lods
bound
into
xchg
adc
inc
rclb
mov
mov
adc
or
std
xor
push
jne
cmp
lods
and
lock
loope
mov
push
sub
push
dec
les
push
aaa
jge
ja
test
shll
mov
adc
je
mov
mov
mov
xor
push
xor
aam
arpl
add
mov
out
sbb
jbe
out
lods
sub
mov
pop
les
daa
mov
fs
xor
and
cmp
loope
dec
cmp
and
repnz
adc
addr16
stc
imul
pop
mov
imul
outsb
jg
out
fwait
pop
aaa
sbb
add
js
je
lret
dec
outsb
shlb
das
rorb
mov
mov
out
aad
dec
addl
jnp
outsl
pushf
loope
idivl
mov
sbb
cmp
inc
idivb
rcll
imul
jge
jecxz
out
in
mov
ret
fcomip
stos
lret
sub
push
incb
lret
and
popf
or
fisubs
cmpsb
call
out
cld
stos
std
or
push
not
mov
dec
mov
repz
sub
or
push
jge
fcmovnu
aaa
out
cmp
add
pop
fldcw
mov
adc
push
push
insb
inc
cmc
jp
dec
add
mov
call
pop
ficompl
mov
xor
jo
lea
add
jg
in
xorb
adc
xor
dec
jg
nop
jle
mov
sbb
cmc
xor
mov
outsl
xchg
adcb
loopne
in
adc
stos
jns
lret
pop
xchg
mov
mov
or
sbb
leave
cwtl
mov
and
rorl
xchg
or
sahf
gs
shlb
add
lds
lods
or
sub
ret
inc
mov
loopne
cmp
jb
pusha
jno
lcall
test
dec
pop
push
inc
idivb
jbe
push
and
sbb
lods
lret
push
stc
imul
pusha
icebp
inc
mov
adcl
in
xchg
inc
adc
idivl
jb
aaa
mov
lods
sbb
xchg
push
repnz
mov
cld
and
and
cld
mov
cmp
jl
mov
mov
jne
inc
push
push
cmp
orl
stos
cmp
arpl
arpl
dec
jp
push
xchg
mov
xchg
xchg
add
mov
sub
sub
popf
xchg
dec
push
loopne
and
test
fsubs
inc
mov
lock
sbb
imul
pop
cmp
adc
push
sbb
sbb
pop
cs
aad
adc
cmp
sub
jge
in
push
xchg
pop
inc
imul
sahf
mov
sub
repz
xchg
mov
lea
mov
dec
adc
cmpsb
mov
dec
scas
push
sbb
xchg
lea
lret
push
mov
and
xor
or
inc
movsb
test
cmp
clc
je
pop
ljmp
clc
dec
xor
stc
sbb
fsubrp
mov
ss
popa
cmp
fmull
inc
stc
cwtl
dec
mov
mov
mov
pop
lods
mov
mov
mov
icebp
adc
mov
out
xchg
fmul
es
mov
sahf
ja
test
mov
aam
out
jecxz
push
jnp
test
ja
push
pop
stos
popf
pushf
mov
mov
imulb
aaa
mov
retw
and
fdiv
iret
inc
add
mov
ud1
inc
fsubrs
jb
mov
aaa
rorb
mov
pop
leave
lds
fs
stc
rcrl
xor
dec
fwait
adc
test
cmpsb
negl
loop
add
bound
call
pusha
cltd
loopne
add
adc
xchg
mov
xchg
mov
andb
pushf
decl
into
sub
xor
sub
sub
loope
js
bsr
adc
sbb
jle
jge
sub
outsl
push
inc
sbb
sar
insb
mov
inc
xchg
xchg
ljmp
pop
add
ds
inc
xchg
lret
jmp
fisttpll
add
daa
test
or
xchg
cld
mov
push
xchg
mov
cmp
mov
push
clc
adc
mov
mov
mov
pushf
cmp
pop
cmp
repnz
xchg
push
push
pop
negl
icebp
sub
pusha
pusha
mov
jbe
insb
or
outsb
xor
shlb
aad
cmp
dec
jne
mov
fs
dec
scas
sbb
test
and
push
cmp
mov
pop
cmpsb
stc
push
fildll
sub
mov
jmp
mov
loope
sbb
adc
popf
mov
push
mov
outsb
and
leave
pusha
test
movsb
xlat
stos
and
sub
add
jne
inc
call
cmc
inc
data16
sub
dec
mov
push
and
pushf
jmp
clc
js
mov
outsb
jge
rcll
imull
testb
or
mov
cli
xor
dec
test
inc
pop
decl
add
fadds
in
sbb
lds
inc
inc
add
je,pn
cld
shrb
xchg
mov
imul
clc
repz
lret
cmp
jno
out
test
jle
cmpsl
and
popa
in
add
into
insl
call
adc
stos
pop
pushf
push
dec
shr
aas
int
insb
and
and
adc
pmaddwd
pop
jb
loopne
cs
mov
sub
aam
lahf
dec
fisttpll
sub
adc
jmp
imul
mov
push
fdivrl
fstl
sub
mov
sti
imul
and
rcl
popf
lea
inc
or
push
dec
push
xchg
add
je
les
lret
jle
jge
in
es
call
cmp
shlb
addr16
jle
push
mov
daa
or
lahf
dec
xor
sbb
sub
fists
iret
popf
pop
xor
xchg
cwtl
add
inc
insl
mov
inc
dec
xchg
jns
mov
sbb
jbe
mov
and
sub
ds
mov
sbb
xchg
ljmp
jnp
mov
cwtl
ja
cmpsl
pushf
std
push
pushf
jl
in
mov
cmp
mov
mov
iret
adc
or
sub
jb
xchg
stos
jge
fisttps
hlt
es
mov
push
push
add
movsb
inc
rorl
pusha
and
inc
sbb
outsb
shl
scas
imul
popf
inc
or
aad
subb
dec
fadds
andb
pop
jb
cwtl
cmpsl
data16
mov
inc
jl
mov
test
xchg
sub
push
mov
pop
and
into
les
lret
dec
popf
bound
adc
stc
xchg
inc
rclb
ljmp
adcb
fmuls
and
pop
push
fisttps
xor
loope
mov
imul
cmpsl
push
xor
sbb
xor
jmp
xchg
and
xchg
pushfw
sub
pop
out
movsb
or
push
aas
adc
jmp
inc
or
or
push
pop
mov
push
cmp
outsl
mov
adc
or
je
loopne
cltd
mov
adc
inc
xor
data16
repz
cwtl
and
test
mov
outsl
rcl
andl
push
lods
mov
nop
jno
push
mov
jmp
pop
adc
lock
out
push
je
aaa
and
xchg
dec
or
cmpsl
sbb
xchg
adc
mov
and
lods
inc
jmp
mov
push
dec
gs
out
dec
dec
addr16
inc
sub
orb
mov
cmp
inc
mov
lret
dec
rol
cmp
mov
loope
gs
push
jne
cs
repz
push
mov
inc
lea
xor
subl
aad
mov
push
orb
jns
dec
in
mov
cwtl
ret
jo
and
pop
cs
sub
jp
aaa
pop
mov
loopne
in
cltd
repz
cmp
std
mov
in
dec
adcl
popa
das
and
dec
xor
es
inc
mov
mov
jno
push
adc
jmp
loop
mov
int3
push
idivl
xor
addr16
pusha
dec
cmp
pop
mov
pop
mov
mov
pop
adc
dec
push
rorl
pop
adc
dec
mov
push
js
dec
sbb
push
pop
jne
jnp
adc
inc
ds
pop
mov
pop
pop
mov
sub
xor
pop
daa
or
sbb
rcr
mov
icebp
lods
add
add
pop
cmpsl
dec
inc
pop
and
fldenv
or
cltd
xorl
push
push
add
or
notb
sbb
mov
jg
inc
lock
lock
mov
arpl
mov
mov
dec
push
data16
negl
scas
push
lods
popf
pop
xchg
adc
int3
hlt
jnp
insl
cwtl
sub
mov
inc
das
cmp
aas
out
arpl
in
xor
or
fnstenv
scas
and
lds
jp
js
fnstenv
jns
mov
xchg
jp
push
mov
push
gs
loopne
jl
fcomps
jno
lret
out
loop
mov
insl
push
roll
icebp
cmp
cwtl
jo
pop
lock
mov
cli
fwait
stos
mov
sahf
movsl
mov
ljmp
mov
std
lret
mov
and
enter
data16
push
mov
mov
in
xchg
xor
out
xor
in
leave
jno
xorl
xor
dec
enter
cwtl
xor
cmp
ret
mov
sar
pop
das
inc
and
mov
jb
aam
xor
add
and
imul
int
out
loop
scas
lahf
cmp
repz
and
popa
cmp
mov
js
das
sub
push
fsubrl
mov
in
insb
push
pop
pop
dec
lods
out
pop
data16
and
inc
arpl
push
push
dec
pop
push
add
repz
clc
aad
add
ljmp
mov
push
pop
inc
dec
inc
mov
std
outsl
mov
pop
and
or
pop
mov
jp
mov
lock
lret
into
cs
jge
mov
arpl
ss
in
inc
les
or
jns
repnz
add
fcoml
repnz
adc
pop
sbb
mov
fldcw
and
push
dec
mov
sbb
jb
cmp
sbb
or
cwtl
gs
shrb
push
xchg
add
shll
xchg
out
rorl
mov
add
lds
or
into
sahf
push
roll
leave
cmp
shrb
imul
data16
cwtl
push
add
fdivrl
outsb
out
test
mov
jno
rcrl
dec
adc
dec
pop
xchg
ljmp
pop
mov
in
mov
les
adc
pop
jl
mulb
add
add
shl
push
jp
add
adc
incl
jecxz
pusha
pop
fs
stos
addr16
inc
fadd
xor
adc
sbb
loope
imul
test
std
fisttps
xadd
mov
std
and
sub
push
ds
popf
arpl
rorl
decl
jle
cmp
outsb
sub
les
das
or
xchg
mov
inc
cmp
lret
or
dec
push
clc
cmp
cmc
bound
pop
adc
jo
push
jg
xor
lea
loopne
mov
repz
xor
fbld
stos
mov
xchg
idiv
insb
or
mov
pop
mov
sbb
and
jl
push
mov
fmulp
out
pop
mov
scas
popf
push
mov
scas
nop
cld
push
loop
mov
rcll
mov
xlat
sarl
rcr
aas
rcr
gs
test
fldenv
inc
int3
lock
hlt
iret
std
push
cmpsl
outsb
mov
push
std
mov
ss
push
sub
mov
mov
fistps
push
and
sbb
cmp
pop
adc
and
fs
inc
lock
inc
addb
or
test
mov
xchg
fwait
pusha
xor
or
or
in
mov
fs
sti
sbbb
lea
push
shrb
cmc
pop
xchg
cmc
mov
jne
pop
les
test
jl
rcrb
loop
ljmp
push
pop
adc
imul
and
cmp
sbb
sub
outsb
mov
rorb
push
xor
add
cmp
test
scas
test
ja
jne
push
mov
sbb
outsb
stos
or
sti
add
aas
int
sub
inc
mov
iret
mov
incb
push
loopne
cmp
and
sbb
lret
dec
in
hlt
cmp
or
ret
sti
adc
add
sbb
mov
dec
dec
mov
jne
out
arpl
nop
test
or
pop
adc
imul
out
insb
pop
adc
pop
fs
cmp
icebp
pop
mov
jle
push
jb
fldcw
xchg
mov
mov
mov
jae
xchg
dec
sub
in
cmpl
movsl
cmp
cmpsl
jnp
aaa
and
or
mov
and
aad
jo
add
out
aas
sbb
or
cs
sbb
sub
dec
push
gs
xchg
popa
mov
add
stc
mov
sub
push
push
rcrb
pop
xchg
mov
or
shll
leave
cmp
fistpll
xor
imul
sbb
outsl
daa
sti
sub
fucomp
aas
push
jo
pop
fisttps
sub
fs
bound
into
cs
push
inc
pushf
cmp
jl
dec
sbb
rorb
sbb
dec
cmp
lret
xchg
cli
hlt
cmpl
mov
adc
push
imul
in
fnstenv
pop
mov
cwtl
in
mov
or
push
push
jbe
xor
test
jg
adc
jp
rclb
mov
les
imul
inc
xchg
out
std
adc
out
pop
cltd
fwait
push
out
mov
data16
cmp
and
or
shll
fisttps
test
int
sti
rorl
sarb
lea
scas
or
fcoms
adc
movsl
les
or
dec
jmp
sahf
sahf
fsub
or
dec
leave
lcall
cmp
xchg
rolb
rcl
push
mov
jno
clc
imul
fs
sub
pusha
std
cmp
in
cmc
cmpsl
xchg
ss
xchg
sub
fwait
dec
in
xchg
mov
fisttps
mov
xchg
sti
adc
and
sarl
notb
and
push
enter
jnp
dec
xchg
jo
pop
rolb
push
scas
pop
rorl
in
idivb
sub
sub
push
inc
inc
push
out
xor
push
dec
sahf
xor
roll
dec
in
cmp
adc
pop
xor
jae
pop
and
pop
push
movb
fisubrl
mov
rorl
lock
jp
jge
cmpl
dec
rcl
push
dec
cmp
xchg
iret
lret
mov
and
xchg
lods
ret
jle
jno
jb
decb
std
movsb
in
xchg
cmpsb
sbb
popf
jne
dec
in
addr16
adc
orl
inc
or
stos
icebp
mov
add
fadd
mov
xchg
jle
mov
fcom
stos
rcrb
shll
popa
push
sahf
add
nop
mov
dec
std
flds
data16
pop
dec
dec
xchg
aad
sbb
mov
jge
shrl
sbb
xor
jne
aaa
pop
lea
leave
test
mov
push
call
sbb
es
fistl
inc
push
ds
mov
xchg
adc
bound
jae
and
andb
int
push
insb
cmp
test
pop
push
mov
lods
pop
int3
mov
inc
leave
xchg
stos
inc
mov
adc
sahf
cmp
ficoml
mov
shl
lret
cltd
inc
push
lret
insl
imul
jne
pop
dec
mov
shlb
push
mov
clc
dec
imul
xchg
mov
gs
xchg
xor
mov
cld
jns
gs
inc
in
dec
repnz
pop
cmp
jle
or
test
inc
and
lods
pop
mov
popf
push
test
jb
mov
and
cmpb
cwtl
je
dec
mov
pop
sbb
flds
cmpl
push
push
dec
jb
and
enter
mov
add
subl
xor
sub
out
jne
leave
repnz
push
sub
and
sub
and
push
rclb
jge
out
sbb
sbb
fs
mov
inc
inc
adc
cmc
into
push
out
and
cmp
adc
addr16
fists
sbb
orl
lods
insb
lret
iret
daa
jb
out
fs
fmulp
outsb
pop
push
rcrb
mov
leave
addr16
leave
sahf
cmc
pop
pop
jge
jbe
dec
mov
cltd
cli
inc
test
pop
scas
into
push
jg
enter
add
add
mov
add
add
add
add
adc
xorb
xorb
add
cmp
subb
add
rolb
add
sbb
add
sub
add
inc
add
addb
add
pop
add
orb
add
push
add
add
add
orb
add
sub
adcb
add
inc
add
addb
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
fs
orb
add
mov
add
add
add
add
add
xchg
cmpb
add
add
add
mov
add
add
add
add
add
add
add
addb
add
add
add
sbb
add
xor
add
dec
add
add
pusha
add
add
js
add
mov
add
add
add
add
add
test
add
rolb
sbb
add
lock
add
or
add
cmp
add
push
push
add
push
adc
add
cwtl
push
add
mov
add
enter
xchg
adc
add
clc
push
add
adc
add
sub
add
inc
pop
add
pop
pop
add
jo
add
mov
add
mov
push
add
sub
add
cs
add
xor
add
cmp
add
inc
push
add
inc
push
add
dec
push
add
pop
push
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
rorb
andb
add
or
andb
lock
andb
add
or
andb
add
or
andb
add
or
subb
add
add
push
sldt
orb
sub
add
cwtl
or
sub
add
mov
add
enter
in
sldt
loopne
add
clc
or
sub
add
adc
add
sub
add
inc
or
xor
add
pop
or
xor
add
jo
add
mov
add
mov
sldt
mov
sldt
rorb
add
call
sldt
add
add
sbb
add
xor
add
dec
or
cmp
add
pusha
or
cmp
add
js
add
nop
or
addb
add
test
add
mov
add
add
push
add
pushf
push
add
mov
add
ret
orb
add
and
addb
cmpb
add
push
or
addb
subb
sbbb
addb
add
xchg
pop
add
test
add
int3
pop
add
add
add
mov
add
add
add
add
jg
add
or
cmp
add
adc
add
sub
add
inc
or
add
pop
or
add
jo
add
mov
add
mov
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
rorb
add
mov
add
add
add
add
add
loopne
add
add
add
mov
add
add
add
add
add
lock
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
and
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
sldt
add
add
mov
add
add
add
add
add
add
sldt
add
add
mov
add
add
add
add
add
add
sldt
add
add
mov
add
add
add
add
add
add
sldt
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
mov
add
add
add
add
add
add
sldt
add
add
mov
add
add
add
add
add
add
sldt
add
add
mov
add
add
add
add
add
add
sldt
add
add
mov
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rclb
add
add
add
add
add
add
add
add
rclb
add
add
add
mov
add
add
add
add
add
loopne
add
add
add
mov
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
and
add
add
add
mov
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
call
or
add
pop
add
call
add
add
add
call
add
add
test
add
cmp
add
rolb
add
cmp
add
addb
cmp
add
insb
mov
add
mov
add
add
mov
add
or
and
xor
add
cmp
and
xor
add
jo
and
xor
add
movsb
ret
and
rolb
add
je
and
in
add
pop
and
rolb
add
sub
and
rolb
add
clc
lret
rolb
add
enter
rolb
add
cwtl
into
and
rolb
add
push
add
add
shlb
rolb
add
or
and
rolb
add
fcom
and
rolb
add
add
add
and
loopne
add
pop
fsubs
loopne
add
cmp
and
rolb
add
fldenv
rolb
add
add
add
add
add
fisubs
rolb
add
add
add
and
call
add
add
add
add
and
sub
add
jo
and
rolb
add
in
add
add
add
and
add
add
pop
jmp
dec
adc
add
adc
add
add
add
nop
sub
add
sbb
add
add
add
pop
and
add
pop
and
add
das
add
add
add
bound
add
and
add
and
add
arpl
add
add
add
add
add
add
add
add
dec
addr16
add
add
add
add
add
add
sbb
add
add
add
add
aam
and
add
add
or
pop
add
add
add
add
andl
add
add
add
add
mov
add
xchg
xchg
add
mov
add
add
cwtl
mov
add
lea
add
and
add
xchg
and
add
add
add
and
add
mov
add
cld
mov
add
shlb
add
add
add
add
add
add
add
scas
and
add
scas
and
add
xor
add
or
add
adc
add
add
add
add
add
add
cmp
daa
add
add
add
add
add
and
add
add
hlt
pop
sub
dec
push
add
inc
jo
add
add
add
add
add
js
add
and
add
pushf
sub
call
add
add
add
add
add
add
sub
adc
add
or
sub
adc
add
sbb
sub
adc
add
xor
sub
adc
add
inc
sub
adc
add
pop
sub
adc
add
insb
sub
adc
add
adc
das
add
add
nop
ljmp
add
add
add
add
add
add
dec
add
inc
add
push
add
add
inc
add
push
add
add
pop
add
inc
add
dec
add
pop
add
inc
add
add
dec
add
add
dec
add
dec
add
add
dec
add
dec
add
or
inc
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
push
add
inc
add
add
push
add
add
add
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
add
add
dec
add
or
inc
add
add
inc
add
add
dec
add
add
or
add
push
add
dec
add
add
dec
add
add
or
inc
add
inc
add
push
add
add
dec
add
push
add
dec
add
push
add
pop
add
dec
add
push
add
add
dec
add
push
add
inc
add
dec
add
push
add
inc
add
add
inc
add
add
inc
add
add
push
add
or
dec
add
inc
add
inc
add
dec
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
push
add
add
push
add
dec
add
add
inc
add
push
add
push
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
push
add
add
add
pop
add
dec
add
dec
add
push
add
or
push
add
dec
add
dec
add
dec
add
dec
add
add
add
add
push
add
dec
add
dec
add
push
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
add
push
add
xor
lldt
add
dec
add
dec
add
push
add
push
add
push
add
push
add
add
add
dec
add
inc
add
push
add
inc
add
inc
add
add
push
add
add
add
dec
add
dec
add
inc
add
dec
add
inc
add
push
add
add
add
dec
add
inc
add
add
push
add
push
add
push
add
add
add
dec
add
push
add
inc
add
add
dec
add
add
add
dec
add
inc
add
dec
add
add
add
push
add
inc
add
inc
add
add
inc
add
push
add
or
push
add
inc
add
dec
add
inc
add
push
add
adc
push
add
inc
add
dec
add
push
add
add
dec
add
inc
add
dec
add
dec
add
add
add
dec
add
push
add
inc
add
dec
add
dec
add
add
or
dec
add
dec
add
dec
add
dec
add
add
and
xor
sub
shrb
add
inc
adc
cmp
add
or
int3
adc
jl
inc
jae
adc
mov
inc
adc
adc
and
and
add
and
dec
jl
jle
mov
imul
sub
xor
popf
xor
cltd
shll
int
jns
cltd
sub
ficomps
xor
outsb
dec
cltd
push
jns
dec
pop
out
mov
ficoms
in
xchg
pop
cmp
dec
xchg
je
leave
push
stos
repz
je
pop
push
xchg
pop
jmp
lahf
dec
aas
jnp
fnstsw
mov
jne
push
scas
lahf
cmp
out
sahf
jns
jb
andb
pop
mov
or
and
jle
sub
and
add
bound
pop
adc
pop
push
test
lret
fcomps
lea
mov
test
mov
test
lods
rol
bound
adc
sbb
jns
stc
inc
daa
lods
lcall
push
or
jne
mov
add
mov
xor
jmp
movsl
inc
adc
ds
icebp
cmp
mov
idivl
cld
push
jge
and
bound
std
shl
sub
sarb
testl
loopne
jns
jmp
sbb
push
insl
ljmp
out
rclb
jle
mov
pop
incb
jns
inc
xor
call
nop
xchg
jne
aas
mov
addr16
jns
dec
fldt
add
jb
pop
nop
jecxz
fsubr
fcoms
outsb
push
mov
jg
ret
addr16
fimull
cmp
push
fcompl
pop
iret
add
mov
sbbl
ds
lods
fcmovu
mov
and
shl
packsswb
add
jge
mov
dec
xor
nop
scas
aam
divl
or
lcall
cmpb
das
das
in
arpl
nop
adc
adc
jno
adc
mov
adc
mov
inc
xor
fadds
add
jp
cmp
lods
cmp
add
push
aas
addb
jg
or
testl
or
push
add
add
add
or
or
int3
nopl
and
push
cmp
push
loopne
add
add
cli
push
pop
pop
ds
dec
rcll
mov
xorb
mov
add
or
sbbb
rorb
jo
mov
pop
or
add
sbb
add
cmpl
add
sbb
loopne
sbbb
pop
pop
popl
das
mov
daa
xchg
call
lahf
add
dec
orb
add
pop
jg
int
popf
mov
cmp
rclb
mov
and
mov
or
lock
inc
push
jge
std
jmp
scas
lods
pop
and
mov
push
in
cmp
push
dec
mov
cmp
sbb
mov
movsb
xchg
and
or
mov
mov
mov
xchg
push
enter
sbb
inc
and
xchg
jb
sbb
inc
and
xchg
jb
sbb
inc
das
sub
es
xor
out
jg
and
inc
ret
xchg
xor
dec
cmp
push
inc
ret
xchg
xor
dec
cmp
push
inc
ret
xchg
xor
dec
cmp
mov
push
and
xchg
cmp
dec
cmp
divl
in
cmc
cmp
pop
push
xor
popa
les
enter
loop
in
jo
cli
cmp
addl
xchg
lss
test
shll
adc
arpl
push
rcrb
sub
ljmp
inc
ds
dec
insb
cmp
loope
sbb
test
les
and
pop
xorl
test
cli
aaa
add
je
mov
das
sbb
addb
adc
and
ljmp
xchg
mov
inc
sahf
add
add
jns
les
dec
pusha
or
nop
sub
pusha
dec
push
pushf
sub
loopne
stc
fcomip
loope
test
jle
add
subb
je
sarb
and
decb
jge
or
pusha
adc
shr
inc
inc
cmpsl
lock
daa
mov
mov
sub
pop
push
pop
and
inc
arpl
pusha
pop
jmp
stc
push
aaa
lret
fdivrl
ret
mov
aam
sbb
les
inc
stc
movsb
jns
cmpsl
xchg
mov
fists
mov
mov
orb
das
mov
inc
pop
sub
push
lods
mov
pop
iret
ds
adcb
loope
jo
push
daa
jns
push
sub
inc
mov
in
in
push
lret
das
aad
inc
gs
scas
inc
hlt
loopne
mov
adcb
mov
sub
jle
mov
mov
mov
daa
in
mov
into
xchg
mov
xlat
push
inc
aam
adc
cli
stc
clc
push
es
std
fmull
pusha
aas
jge
sti
and
dec
fistps
idivl
adc
jne
ljmp
xchg
jae
jg
fcmovne
aas
jbe
xlat
int
fcomi
pop
inc
cld
fcomps
mov
inc
jg
stc
mov
lret
cs
cmp
repz
mov
aas
mov
and
lods
sbb
pop
insl
mov
push
mov
fdivrl
mov
xchg
out
outsb
test
shlb
jns
ljmp
idivb
out
ffreep
sub
pop
xor
jne
xor
jecxz
bsr
jge
jmp
sbb
lret
scas
jno
out
and
cmp
icebp
push
out
inc
xorl
fiaddl
std
mov
cmp
jmp
jp
shll
outsl
rorl
pop
loope
pop
cwtl
in
xchg
sub
inc
or
iret
or
std
adc
mov
cwtl
add
hlt
jp
mov
adc
jnp
imul
lds
cmpb
pop
adc
in
pusha
mov
xlat
sbb
out
jg
and
popa
std
mov
sbb
mov
mov
mov
rcrl
ljmp
mov
dec
ficomps
or
idiv
ljmp
mov
sbb
lahf
sub
xor
enter
cmp
jne
inc
push
xchg
cmp
pop
scas
in
test
push
ss
lret
mov
jbe
sub
gs
dec
mov
xor
cmpsb
jne
add
test
pop
decb
test
movsl
nop
fldcw
sahf
daa
or
cmp
adc
outsb
jno
sub
bound
filds
repz
cmpsb
mov
or
rcll
adc
jle
rclb
rcll
sub
daa
push
xchg
xor
stos
rcrb
pop
push
push
stos
outsl
out
in
in
outsl
lcall
clc
cmpb
jne
mov
aad
shlb
mov
lds
pusha
lcall
sbb
jecxz
sbb
sbb
shlb
idivl
outsb
stc
dec
dec
cli
mov
leave
rolb
ret
jae
or
xlat
shlb
inc
xchg
jl
ds
xchg
aad
loop
or
cmc
pop
shll
inc
repz
pop
int3
mov
dec
out
jmp
ljmp
mov
sarb
in
arpl
mov
pop
push
xchg
pop
sub
push
test
sub
rol
popa
outsl
inc
movsb
ficompl
dec
aas
and
mov
add
imul
js
in
inc
jo
loope
iret
lahf
jle
fwait
or
inc
cwtl
add
mov
push
or
xchg
in
or
insl
pop
xchg
xchg
nop
sub
mov
push
inc
dec
cmp
pop
jb
jl
ss
stos
jae
jg
push
push
fldpi
xor
loop
ss
movsl
adc
rclb
jb
subb
ja
ja
xorb
xor
or
sbb
dec
sbb
pusha
aam
int
add
pop
add
fwait
sbb
mov
aam
test
loop
stos
sti
out
cmp
inc
repnz
imul
scas
daa
xchg
out
shlb
in
and
pop
cltd
in
popa
aad
pop
jl
pop
fimuls
xchg
or
mov
aaa
jg
nop
xor
add
lcall
mov
push
popf
fwait
popa
outsb
push
popa
jb
dec
jmp
xor
gs
pop
repnz
addb
jmp
sbb
pop
sub
push
dec
xorb
pop
jmp
popa
pop
dec
filds
mov
dec
mov
lcall
ds
inc
aaa
pusha
jp,pn
mov
mov
cmp
jo
addr16
sahf
idivl
sub
loop
outsb
iret
gs
dec
jnp
adc
jp
mov
outsl
loop,pn
pop
jno
add
mov
pop
pop
daa
mov
cmpsb
cmp
nop
jp
pop
mov
out
jnp
cmp
addr16
dec
pop
mov
adc
notl
ret
fucom
pop
pop
pop
cli
cmpsb
bound
cmpsb
enter
inc
cmc
jnp
out
in
inc
push
out
idivb
jg
fdivrl
movsl
hlt
or
cmc
popf
push
test
mov
sub
dec
shl
std
dec
subl
lds
adc
jnp
inc
daa
push
adc
mov
stos
fildl
push
pop
inc
das
xor
xchg
ffreep
insl
clc
ljmp
xchg
out
fisubrl
sti
ret
fnstenv
mov
mov
and
inc
insb
nop
ret
jbe
and
xchg
cmp
pop
in
mov
adc
inc
lds
imul
jnp
xor
lods
xor
and
int
cwtl
push
lahf
cmp
fcmovnb
rclb
daa
pop
insb
push
scas
fists
jmp
push
mov
aaa
sbb
xor
lods
mov
fdivl
mov
pop
je
sbb
mov
xor
mov
mov
loopne
pop
lea
out
xchg
stos
ja
loopne
dec
daa
repz
mov
pop
mov
or
inc
push
test
cmpsl
lods
popa
or
xchg
or
push
cmpsb
or
cmc
push
fisttpl
test
jp
inc
fisubs
mov
je
and
popa
sahf
xchg
or
into
lock
jno
cmp
pop
enter
pop
les
push
mov
mov
push
xchg
dec
in
inc
call
xchg
and
out
xchg
sbb
mov
and
test
push
jne
stc
mov
js
aad
fisubrs
push
test
insl
xor
in
sbb
dec
sub
arpl
aaa
mov
test
insb
je
jl
lret
fstps
push
pop
push
mov
ret
arpl
push
mov
lds
xorl
xchg
in
jo
fmul
ret
mov
test
push
cmpsl
xchg
lods
popa
out
lahf
mov
add
jne
stos
push
or
sbb
jmp
orl
pop
loopne
mov
adc
push
stos
xchg
pop
imul
jae
mov
pop
ja
push
sub
shlb
push
jl
dec
xor
mov
icebp
and
mov
or
fsub
jno
aam
push
or
das
movsb
mov
movups
jmp
mov
push
sbbl
daa
fcmovbe
mov
pop
call
jmp
je
xor
or
jle
jno
dec
ds
dec
jo
fs
xor
ljmp
sbb
loop
jae
movsb
in
idivb
cwtl
imul
outsl
leave
punpckhbw
inc
dec
push
dec
into
icebp
sub
fdivrl
sub
or
sub
push
jo
sub
mov
pop
and
pop
inc
int
repz
popf
sub
inc
mov
sbb
cmp
cmpsb
push
fnstenv
int
int
lods
repz
in
out
pop
jae
lea
dec
mov
cmp
pop
arpl
mov
stos
ds
in
xlat
inc
inc
mov
aam
push
les
or
in
dec
mov
addb
dec
mov
outsl
jns
sti
add
dec
lret
arpl
and
roll
and
or
jmp
lds
cmp
cmpl
xor
popf
rcrb
into
dec
notb
cmp
enter
out
dec
mov
bound
insl
xchg
js
jno
cmpsl
into
adc
mov
nop
repz
dec
pop
mov
cmp
insl
test
icebp
icebp
sub
adc
out
dec
xor
enter
popf
adc
fidivrl
sub
or
mov
inc
std
stos
pop
cmp
mov
xchg
lret
jl
pop
adc
ret
or
sti
pop
arpl
mov
xchg
inc
iret
jno
stc
mov
shl
jns
movsb
pop
ja
sub
scas
popl
arpl
lods
xchg
mov
out
pusha
lahf
stos
and
jbe
mov
insb
cmp
push
lea
xchg
add
jl
mov
lods
shrb
lret
nop
cmp
lahf
xchg
int
push
inc
nop
push
push
dec
es
test
aad
jmp
inc
flds
lea
push
sbb
lods
test
and
xchg
insb
pop
test
push
filds
sbb
movsb
in
fisttpll
mov
xchg
cmp
outsb
push
push
stc
daa
mov
das
pop
mov
imul
mov
sub
in
push
push
lcall
sahf
lahf
xchg
mov
push
loopne
inc
js
dec
dec
ret
mov
scas
cs
inc
and
rclb
cmc
and
inc
xchg
jae
sub
enter
movsb
dec
push
test
lock
add
aas
add
hlt
dec
mov
les
and
dec
sbb
ja
mov
xchg
insb
mov
dec
sarl
aaa
loope
adc
cwtl
imul
leave
shr
push
movsl
xor
jno
enter
dec
test
pop
jno
xchg
mov
cmpsb
mov
dec
imul
lods
gs
add
fmull
xor
xchg
outsl
fildl
test
xchg
push
mov
sti
xchg
cltd
clc
xchg
sahf
mov
pushl
pusha
into
cld
mov
dec
mov
mov
cmc
sub
jb
sub
and
mov
jno
fists
inc
jb
in
arpl
pop
mov
dec
aad
sbb
movsb
es
in
daa
sbb
mov
bound
aad
cvtdq2ps
icebp
push
scas
imul
cmp
lahf
and
xchg
inc
add
push
shl
inc
out
xchg
stc
mov
ja
gs
lcall
sub
insl
cmp
xor
or
je
pop
pop
mov
xchg
pushf
xor
cltd
mov
cmpsl
dec
enter
inc
mov
jmp
sarb
push
jnp
cmpsl
ss
mov
jmp
js
and
sbb
sub
ret
sbb
push
jl
inc
adcb
push
mov
stc
adc
sbb
inc
and
lahf
arpl
stos
js
je
mov
mov
mov
push
outsb
xor
es
data16
push
imul
fsubs
stos
shlb
leave
mov
add
out
mov
hlt
mov
inc
pushf
ficompl
dec
xor
cs
and
daa
sub
out
fsts
call
into
dec
sub
les
mov
sub
xchg
and
cmc
fsubs
ret
pop
test
sbb
outsb
adc
push
xchg
dec
xor
cmpsl
movsl
or
repnz
jnp
andl
xor
xchg
fdivp
jp
inc
sti
clc
in
mov
stos
adc
sub
dec
movsb
mov
cmp
shl
mov
lret
add
mov
fidivl
cmpsb
pop
aad
or
out
push
mov
xchg
adc
ja
add
mov
dec
insl
icebp
push
push
lods
pop
adc
sub
fs
inc
mov
dec
daa
add
pop
push
mov
je
push
xchg
fnstenv
je
mov
xchg
mov
loope
fsts
inc
pushf
in
mov
or
cltd
pop
cmp
mov
or
mov
jae
mov
or
mov
movsl
sahf
out
jmp
fldcw
movsl
jmp
mov
in
rcr
shl
imul
mulb
mov
sub
cmp
mov
mov
repnz
std
mov
xor
shrb
pop
dec
imul
nop
push
insb
adc
das
lret
cltd
fwait
cmp
cmpsb
xor
and
imul
out
adc
stos
and
stos
mov
mov
fstps
je
push
jbe
jge
and
push
sbb
into
lcall
push
sbb
inc
cmp
jmp
xchg
push
fisttpll
cmp
leave
pop
adcb
gs
sub
popf
sarl
shrl
popf
bnd
lods
je
or
insl
ret
test
dec
push
xchg
mov
loope
cmc
or
sub
rorl
fstl
or
ds
push
jmp
xchg
scas
inc
out
insl
movsl
mov
pop
or
imul
je
mov
push
inc
jno
rcrb
sub
arpl
mov
mov
xor
push
mov
mov
dec
out
popf
add
jl
xor
shrl
movsl
mov
out
pop
cmp
xor
cwtl
scas
mov
shll
sbb
mov
movsb
mov
dec
xor
lods
mov
popa
scas
jecxz
pop
repz
pop
cmc
popf
jae
sub
aam
cmp
fdivrl
fwait
daa
hlt
in
pop
or
mov
cmp
dec
mov
rcrl
jge
out
mov
iret
shr
out
mov
xor
mov
insb
push
jmp
or
xor
es
and
mov
int3
test
das
mov
lcall
stc
cld
fs
cmp
orl
sbb
xchg
pop
dec
aas
je
mov
fnstenv
sub
sbb
inc
out
fstpt
jne
inc
cld
jbe
xor
and
cmp
call
das
adc
adc
add
fisubl
xchg
fmull
fldenv
push
pop
arpl
pop
add
sbb
or
repz
push
sub
xor
inc
push
in
cmpsb
mov
mov
mov
jmp
sub
idivb
and
rclb
xchg
pop
movsl
stos
in
test
mov
cwtl
lcall
std
into
jns
adc
jecxz
adc
push
arpl
fnstcw
lods
xor
jge
mov
xchg
ljmp
pusha
movsl
xor
push
scas
jle
fiaddl
loopne
xlat
inc
jecxz
scas
fwait
adc
push
inc
stos
aaa
mov
iret
lods
pop
push
loop
mov
lods
sub
scas
sahf
aaa
fmul
into
test
or
mov
test
push
xchg
mov
enter
shl
fwait
jmp
adc
test
nop
testl
dec
cmp
adc
sar
aad
xor
clc
push
jmp
fldenv
outsl
fs
daa
xorl
outsb
push
pusha
pop
loope
push
test
int3
jb
fimull
mov
add
popa
pop
pop
sub
clc
mov
in
mov
pop
jne
pop
dec
rclb
fcoms
fidivs
fcmovu
cbtw
cmp
inc
lock
push
div
mov
loopne
aad
stos
sub
xchg
push
fwait
ret
sbb
jae
sbb
jge
cld
mov
orl
adc
mov
fdivs
int3
pop
xor
inc
mov
orb
and
mov
mov
mov
cmp
pop
js
movsl
test
fsubrs
shll
jns
stos
fmull
orl
jb
cmp
je
mov
jmp
lds
inc
sbb
jge
out
sti
lcall
adc
pcmpeqd
lds
pop
fucomi
test
jb
dec
out
add
sbb
mov
fsubrl
leave
mov
mov
cltd
ja
int3
or
push
mov
jmp
lret
movsb
push
ds
mov
jne
cltd
loopne
stc
lods
popf
sti
aad
lds
jne
out
cld
pop
mov
mov
out
ss
sbb
and
push
sarb
pop
jp
inc
test
in
stos
jmp
inc
daa
pop
xorl
mov
jne
and
pop
stos
inc
dec
sbb
shr
into
inc
hlt
test
sub
add
dec
dec
data16
out
xchg
lea
lds
xchg
cmp
dec
cltd
outsl
insb
insl
or
mov
xchg
out
mov
adc
fidivs
in
xor
mov
dec
mov
and
outsb
lcall
jo
adc
inc
aam
mov
jns
xor
repnz
shll
shlb
mov
inc
push
mov
push
aad
cmp
xchg
mov
cmp
sub
movsb
repz
int
lods
mov
cmp
inc
in
dec
or
xchg
dec
cmpsl
sbb
xchg
int
rep
repz
sbb
or
pushf
mov
sub
push
stc
out
nop
aad
adc
icebp
adc
adc
lcall
jo
test
call
push
std
mov
in
inc
jne
pop
sbb
aaa
pop
es
add
push
das
mov
mov
add
pop
or
mov
lahf
mov
add
loope
mov
pop
addr16
popa
push
dec
outsb
popa
imul
sub
mov
pop
in
stc
add
divl
pop
repz
faddl
jbe
push
jo
out
sahf
adc
pop
out
adc
in
imul
sbb
dec
xchg
pop
cmp
das
call
push
sahf
push
add
cmc
fcoms
es
adc
sahf
imul
daa
scas
pop
cmpsl
test
dec
imul
scas
es
and
sahf
out
shrl
add
xchg
jne
push
xor
inc
jae
cmp
arpl
imul
nop
add
adc
sbb
mov
into
mov
rclb
push
push
or
loopne
ficoms
or
sbbb
popf
stc
add
iret
jmp
cmp
adc
xor
push
das
cwtl
out
int
mov
iret
pop
pop
cwtl
push
fwait
sbb
pop
adc
lcall
lret
popa
push
lock
push
mov
push
push
xchg
in
dec
cmp
sbb
jno
inc
mov
and
mov
mov
lcall
cmp
xchg
nop
sbb
imul
pop
mov
pop
mov
lods
loop
cmp
call
push
ficompl
stos
dec
aad
mov
lcall
out
std
xchg
and
imul
pop
xchg
loopne
mov
ret
mov
adc
test
imul
je
out
loope
or
and
jb
jg
cmp
and
outsb
ss
jae
bound
sti
insl
mov
in
sbb
lahf
mov
divb
push
sub
adc
ljmp
cld
xchg
pop
or
or
out
data16
pop
lcall
push
sahf
push
mov
pop
adc
xchg
fstpl
xor
stos
mov
bound
mov
dec
imul
sbb
jb
xchg
sbb
lea
out
std
xor
sbb
movsb
lretw
pushf
jecxz
jmp
fisubrl
xor
cmp
xchg
sub
into
xor
adcl
insb
call
jb
mov
push
dec
popa
mov
sahf
xor
mov
ja
and
mov
pop
adc
push
scas
fidivrs
sbb
inc
adcb
jecxz
jae
mov
pop
add
cmp
xchg
mov
xlat
adcl
pop
inc
mov
pop
xchg
fwait
cmp
addb
mov
je
adc
jo
lret
enter
cmp
imul
xor
add
jb
mul
sub
int
jnp
scas
lea
or
dec
dec
js
cmp
mov
jmp
sbb
cmp
xchg
inc
imul
mov
push
xchg
add
xchg
cli
lods
cmp
scas
lds
sahf
xchg
cmpsl
mov
popf
sbb
and
mov
mov
dec
andl
push
iret
sbb
jmp
test
mov
cmpsb
pop
mov
cmp
movsl
inc
mov
pop
mov
add
insb
push
push
mov
mov
fdiv
cmp
lods
push
jle
aad
lods
lcall
push
stos
ret
and
adc
stos
add
iret
add
mov
cmp
inc
out
inc
sub
lds
scas
mov
dec
push
sbb
nop
ficompl
rcrb
add
cwtl
jae
xchg
xor
ret
cmpsl
pop
sarl
add
es
mov
int
setnp
dec
mov
dec
arpl
sti
scas
inc
arpl
pushf
push
bound
nop
lods
lea
mov
cmp
ret
bound
or
xchg
fldenv
jge
aas
mov
movsl
push
push
jo
call
aad
icebp
push
cmp
stos
push
cltd
jno
push
scas
lods
in
sub
jne
mov
in
dec
jo
mov
ss
rcl
int3
mov
das
pusha
xacquire
cs
out
add
rcr
sbb
sub
call
js
mov
sbb
inc
add
popa
jae
push
inc
pushf
jp
test
xor
adc
shrl
mov
iret
add
in
adc
lea
push
jge
and
mov
or
inc
into
scas
mov
insl
popf
mov
jnp
cmp
and
push
outsb
out
inc
sbb
je
dec
or
out
cwtl
iret
mov
test
xor
cwtl
and
stc
repz
jmp
or
js
imul
xchg
fcmove
xchg
in
inc
xchg
push
mov
inc
cmpb
ud0
jge
cmpl
pusha
pop
cmp
xor
shlb
call
cs
ja
pop
outsb
popa
in
mov
mov
movsl
xchg
jg
jge
lahf
out
fwait
pop
jo
aad
adc
jne
outsl
add
pop
mov
cmp
ret
pop
call
or
cmp
daa
mov
das
mov
pop
inc
adc
push
pop
aas
ds
xchg
stc
mov
pop
mov
scas
lcall
jge
roll
in
jge
lea
cmp
push
cmc
dec
aad
xchg
decl
in
int
mov
out
lret
mov
push
negl
insl
insl
dec
pusha
add
or
mov
scas
imul
jp
xchg
test
in
push
repz
sbb
cmpsb
cld
inc
dec
cmp
cltd
xor
sahf
lahf
mov
aas
or
icebp
mov
dec
mov
xlat
mov
lret
inc
xlat
fldcw
rclw
mov
mov
add
cmp
xor
test
push
scas
dec
imul
lret
dec
sbb
stos
test
mov
jmp
ja
add
ja
shrb
add
repz
mov
mov
jns
xchg
movsl
incl
call
loop
mov
jle
xor
dec
jecxz
ret
test
push
dec
ljmp
pop
fcmovnb
pop
sarb
lock
jno
outsl
jmp
in
rcll
rorb
cs
js
int3
sbb
jg
push
and
not
pop
or
pop
test
out
ss
inc
mov
push
add
jge
call
js
das
out
testl
mov
mov
push
cmc
push
or
cmp
cwtl
shll
mov
or
scas
leave
mov
pop
adc
testl
imul
mov
fdivrp
mov
xchg
mov
ja
outsl
in
pop
mov
fwait
and
or
jns
test
or
in
lret
stos
or
aam
sub
loope
push
int
repnz
xor
and
push
cmc
cltd
divb
aam
push
rcrl
xchg
sahf
bound
dec
int3
and
push
xchg
enter
inc
loopne
adc
push
cmc
mov
mov
adc
push
loope
jo
test
sti
lahf
push
jmp
sbb
jbe
pop
jae
mov
icebp
jnp
loope
shlb
jnp
sti
inc
std
je
aam
pushf
sub
adc
cmpsl
inc
pushl
sbb
jae
xchg
mov
mov
push
cmpsl
stc
loop
mov
andb
jb
xchg
fstps
and
testl
inc
jle
jge,pt
push
fs
sahf
aam
push
clc
ja
dec
adc
xlat
add
fnstcw
mov
dec
mov
aam
loopne
push
and
sahf
mov
mov
in
pop
popa
xor
leave
cmpsl
ret
cltd
xor
stc
or
xchg
dec
cld
or
lods
pop
mov
push
iret
jae
sahf
xchg
adc
lods
fdivl
test
lods
lahf
shl
xchg
call
rorl
arpl
js
incb
sahf
pop
adc
push
sbb
xchg
lock
lahf
ret
add
pop
and
cmpsb
ss
jnp
out
aam
std
push
pop
call
pushl
aaa
jp
mov
in
or
movsl
cmp
stc
xchg
into
pop
mov
fucomp
scas
out
stos
fs
neg
mov
sub
pusha
js
inc
mov
mov
mov
je
sub
pop
jae
insl
les
iret
push
shlb
inc
xor
adc
loopne
jmp
push
daa
in
mov
sub
cltd
xchg
or
in
pop
test
andl
sbb
sbb
leave
mov
mov
jmp
adc
or
xor
les
mov
stos
xor
dec
popa
xchg
or
add
rorl
out
fucomp
lcall
repz
cmpsl
dec
inc
cld
fsubrs
xor
data16
shrl
xlat
inc
nop
push
xchg
or
sbb
xor
std
cmp
or
les
add
cmc
imul
and
mov
mov
push
fisubrs
mov
add
ljmp
ljmp
data16
mov
push
pop
pop
dec
imulb
xchg
ds
push
add
test
mov
ja
imul
fdivrs
flds
icebp
fwait
stos
xchg
out
je
xchg
pop
sub
pop
inc
xor
lret
mov
subl
daa
sub
sbbl
je
ficoms
icebp
cmc
cmpsb
lods
pop
test
dec
std
mov
decb
ds
xor
leave
outsb
dec
mov
and
jmp
pop
mov
movlps
jecxz
xchg
jae
push
mov
xchg
dec
or
jno
rcll
popf
out
bnd
insb
popf
xchg
mov
push
popa
pop
orl
pushf
push
mov
pushf
jae
mov
mov
js
stos
out
mov
push
ss
mov
inc
jne
aaa
pop
add
xor
inc
add
push
pop
iret
sbb
cltd
cltd
cltd
cltd
cwtl
jecxz
cmp
data16
sbb
int
gs
fwait
js
xor
xchg
leave
loopne
js
pop
dec
scas
insb
xchg
mov
adc
jbe
movsl
sbb
xor
dec
ljmp
xchg
inc
cmp
mov
mov
js
sar
mov
ret
aam
or
test
aas
jmp
das
cmc
lcall
stos
das
ret
test
and
sub
xor
out
fs
mov
das
pop
jno
or
sbb
movsl
push
fld1
cmpsl
jg
test
stos
ficomps
mov
aaa
jo
fwait
mov
nop
adc
pop
lea
or
arpl
ret
ds
adc
repz
std
aas
mov
jp
fldcw
inc
flds
pop
out
in
mov
pusha
aas
fildl
insl
ret
je
clc
jecxz
add
pop
pop
scas
push
push
mov
ja
mov
push
aad
mov
xor
mov
push
shlb
int
pop
enter
add
mov
subb
shr
stos
das
out
dec
daa
sub
jecxz
inc
add
out
inc
mov
xor
push
jmp
mov
dec
jnp
dec
or
fsubrs
out
les
push
dec
stos
sahf
rcl
out
dec
daa
add
popf
aad
adc
and
aaa
dec
ret
pop
push
or
sbb
xchg
fdivs
and
fcomps
add
mov
outsl
lcall
outsl
xor
or
dec
dec
lds
rorb
pop
addr16
insl
sqrtps
outsb
or
pop
xlat
cwtl
add
pushf
xchg
idiv
xchg
aaa
push
loopne
outsb
adc
test
cmp
jl
or
adc
mov
push
jl,pn
sbb
add
jecxz
cmp
xlat
xlat
jp
movsb
es
shll
pop
xor
loopne
sahf
xchg
out
push
xor
mov
and
cld
xlat
sbb
or
cli
xchg
mov
ljmp
mov
dec
fists
dec
inc
pusha
out
and
lret
mov
stos
dec
cmp
mov
fistpll
cmp
mov
daa
sbb
and
pop
cmp
add
jne
jge
cmp
xchg
shlb
lea
nop
sbb
test
push
fistpl
int3
xchg
clc
or
hlt
arpl
dec
sub
fs
stc
idiv
fcmovnbe
cmp
loope
pusha
pop
cld
push
jg
inc
in
lds
clc
jle
xchg
ret
stos
mov
or
and
mov
cmp
mov
cltd
push
movsl
loopne
push
push
mov
in
repz
mov
adc
inc
ret
cmp
je
hlt
ftst
fwait
mov
hlt
ss
jo
mov
mov
add
int
insb
bswap
into
in
scas
adc
jnp
push
adc
mov
xchg
and
adc
inc
stos
lahf
std
sub
in
and
aas
out
add
or
sbb
mov
decl
aaa
lock
pop
pushf
incl
xor
js
inc
aas
ret
rol
sahf
call
pusha
inc
cmpsl
std
lods
mov
pop
repnz
fwait
icebp
fnsave
das
cmc
das
insb
mov
inc
insl
or
or
ret
stos
insl
dec
sub
dec
sbb
aas
clc
add
dec
ret
sti
inc
enter
or
mov
cltd
aas
incl
subl
jo
mov
mov
orb
jle
mov
insl
push
out
xchg
dec
imul
insb
shll
mov
xchg
cld
push
adc
iret
repnz
or
loop
pop
cltd
jnp
jbe
sbb
jle
lahf
fcmovnb
test
mov
mov
cmp
jmp
push
orl
lods
mov
lods
nop
adc
div
and
pop
mov
lock
test
das
jg
dec
mov
sar
sub
dec
adc
jg
dec
lahf
divb
xor
roll
inc
roll
jle
rorl
or
cmp
int3
cwtl
push
je
lcall
sub
xor
mov
rcll
test
dec
arpl
jo
jns
and
mov
aad
mov
mov
insb
inc
jbe
outsl
je
sbb
cmp
add
stos
clc
ret
mov
data16
mov
js
aam
aas
sti
or
mov
aam
divl
popa
les
mov
xchg
not
add
and
scas
adc
sbb
cmp
scas
fsubrl
lcall
repz
sbb
mov
int
icebp
dec
ret
call
popf
arpl
stos
cld
mov
or
jb
std
dec
loop
lahf
sbbl
mov
cmp
jb
xchg
std
mov
bound
dec
adc
in
push
addb
add
fisubrl
dec
mov
dec
test
add
pushf
addr16
fs
xor
mov
movsl
outsb
test
scas
lods
adc
dec
leave
stc
in
es
mov
and
aas
push
jnp
rep
mov
pop
xchg
mov
or
outsl
inc
std
and
lcall
sarb
jecxz
aam
iret
ret
ja
mov
or
sti
jecxz
mov
jns
repnz
mov
in
push
mov
push
in
xchg
cli
dec
rcr
test
faddl
mov
jnp
push
hlt
test
push
add
add
xchg
jmp
mov
and
mov
js
das
fbld
mov
cli
xchg
scas
mov
add
lods
testb
das
shll
mov
loopne
adc
lret
adc
dec
xchg
fsts
ds
fmuls
jnp
rorb
jne
aaa
test
sub
xorl
adc
rorl
addr16
push
pop
in
divb
pop
fcoms
sbb
arpl
imul
gs
sub
mov
mov
out
shrb
inc
lds
or
fs
adc
sbb
pop
insl
push
in
popa
mov
repz
xlat
and
in
call
sbb
dec
dec
cli
pop
sbbb
jle
jo
repnz
popa
in
out
cld
adc
fidivrs
push
pop
xchg
fwait
js
test
cwtl
or
cld
mov
pop
lret
add
sub
popf
sahf
or
sub
inc
loopne
dec
dec
add
sub
out
sbb
dec
jns
test
ds
mov
mov
nop
lahf
in
cmp
imul
push
stos
sbb
jb
jns
rolb
enter
cmp
pusha
xchg
push
cmp
xor
scas
push
push
rcll
and
and
adc
xor
xchg
mov
lods
jne
jb
mov
or
inc
dec
mov
iret
fmuls
sarb
rol
jns
aaa
je
adc
mov
bound
push
mov
shlb
ror
xor
jmp
arpl
in
out
sub
pop
jno
jno
jmp
push
cld
sub
out
stc
popf
mov
xchg
inc
idiv
inc
xchg
and
call
filds
lcall
or
fildl
lcall
inc
pop
push
xlat
mov
sub
outsl
dec
mov
jo
inc
xchg
fcom
or
ficomps
mov
lods
add
pop
inc
sbb
adc
fistl
imul
inc
mov
test
push
dec
add
push
inc
pusha
cmp
or
scas
pop
inc
mov
repz
bound
cmpsl
ficomps
inc
jo
and
or
dec
cwtl
nop
nop
out
cltd
cmpsl
test
sub
xor
lods
mov
aad
jecxz
les
fwait
shlb
fsubrp
fcom
ficompl
into
jmp
cmpsb
fsubrs
lock
lret
push
clc
dec
cltd
test
and
xor
add
enter
into
mull
pop
or
sub
clc
add
sub
rclb
push
js
sub
cmp
iret
lret
add
push
lods
xor
iret
dec
aaa
aad
push
jbe
inc
xorl
dec
ret
jge
jne
and
xor
push
cmp
loope
outsb
lret
mov
cmp
inc
or
pop
sbb
inc
cmp
aaa
mov
push
and
insl
and
js
xor
lods
sbb
nop
aad
mov
mov
sub
rclb
mov
stos
inc
loopew
mov
pop
adc
orl
popa
xchg
mov
dec
fxam
out
or
mov
jp
scas
push
jbe
xor
push
cmp
dec
fst
add
bound
mov
or
mov
xor
test
test
inc
and
das
add
repz
out
popf
pop
push
leave
xlat
mov
inc
or
push
lea
xor
xor
jle
repz
jmp
ret
adc
xchg
xor
gs
pushf
in
mov
push
pop
sub
call
std
pop
andl
add
jns
inc
leave
pusha
nopl
out
cmp
push
jno
addr16
xchg
mov
adc
cli
mov
xchg
mov
jne
adc
mov
and
divb
fldt
jge
push
pop
jne
outsl
dec
out
jb
pop
push
in
rcll
ljmp
cmp
cmp
clc
mov
pop
xor
jg
cmp
aam
iret
jno
popf
scas
add
xor
fiaddl
mov
jecxz
rorl
mov
push
and
xor
mov
out
repnz
loope
movsb
int
ss
andl
in
push
pop
or
dec
jb
and
push
sti
jne
xor
ljmp
mov
pusha
push
and
lock
inc
xchg
popa
hlt
cltd
xor
movsl
ja
xchg
test
add
mull
cmp
xchg
xchg
and
notb
mov
mov
clc
jl
jae
in
fisttps
lea
fwait
xchg
int3
das
hlt
dec
loope
insb
xchg
lea
add
mov
mov
iret
inc
cmpsl
fwait
hlt
and
test
mov
in
jge
dec
xchg
fcmovne
jno
inc
call
insb
imul
cltd
push
in
leave
or
ljmp
into
stos
sub
mov
pusha
pop
std
lret
bnd
ret
test
or
pop
or
mov
inc
outsb
ror
aad
movsb
shld
xlat
push
movsl
inc
xchg
fnsave
dec
call
cmp
dec
mov
cmp
fistps
das
push
adc
repz
iret
xchg
dec
push
mov
and
scas
sub
movsl
leave
sbb
cmc
js
or
add
mov
sahf
xor
adc
dec
cmp
arpl
xlat
icebp
xchg
std
xor
mov
es
pop
mov
inc
imul
mov
pop
gs
mov
sbb
pop
sbbb
and
sbbb
inc
push
jge
sub
aaa
cmp
cvttps2pi
pop
fisubs
xorl
inc
jp
xor
sahf
mov
dec
out
pop
pushf
dec
mov
imul
push
sbb
imul
decl
and
in
aas
xor
and
add
jle
pop
lahf
ja
jnp
incl
xor
push
or
pop
sub
push
pop
pop
test
mov
lcall
sub
push
das
add
ds
cmpsb
mov
sbb
push
sbb
inc
test
adc
adc
xchg
lea
xchg
and
mulb
fnstcw
xor
inc
push
cmp
je
loopne
scas
cmpsl
lea
test
aaa
mov
lea
jb
and
xchg
lcall
scas
sbb
xchg
loope
aam
ret
adcl
in
ds
inc
xchg
mov
lret
jnp
or
xor
in
or
dec
or
mov
imul
sub
pop
bound
adc
loop
test
mov
rorb
mov
mov
mov
jecxz
adc
pop
in
cltd
jae
and
pop
cmc
into
fidivrl
mov
xchg
insl
cli
jecxz
xchg
hlt
das
or
cltd
push
mov
jnp
and
sbb
jl
dec
lods
out
sub
or
mov
subb
sbb
test
xchg
push
jecxz
outsb
mov
pop
sbb
out
add
lret
jg
test
and
movsl
aaa
stos
mov
sbb
ret
adc
andl
lods
pop
mov
out
push
mov
mov
cs
iret
out
loopne
fnstcw
sbb
mov
movsb
arpl
sbb
mov
call
push
cmp
pop
mov
add
popf
lret
daa
int3
shlb
xchg
in
mov
jbe
sar
xchg
push
into
jp
notb
cmp
ja
clc
sub
repnz
stc
aad
lea
scas
bound
or
int
ja
jb
inc
jnp
jl
xchg
jo
aaa
jmp
shlb
sbb
dec
iret
lods
and
lret
adc
fstps
sbb
sbb
lret
pop
mov
sub
iret
jns,pn
mov
dec
mov
push
xlat
add
ficompl
pop
testb
and
push
inc
ret
fdivrl
sub
in
mov
xchg
add
js
cltd
fstp
add
jecxz
mov
shll
jo
clc
cwtl
cmc
and
jbe
push
sti
sub
dec
jb
lahf
leave
jge
pop
xor
and
lea
sub
add
mov
lods
icebp
ds
movsb
lcall
sbb
lret
adc
enter
popf
dec
add
fadd
or
mov
jne
outsl
mov
shrl
adc
int3
mov
dec
xor
call
sub
inc
insl
jbe
sbb
xor
mov
mov
pop
andb
call
ret
mov
faddp
leave
rcl
and
pop
or
cli
cmp
and
fisubs
stc
sbb
or
sub
mov
cltd
sbb
mov
outsl
lret
ja
dec
inc
dec
jg
add
adc
xchg
lods
xchg
cmp
cmpsl
mov
inc
mov
adc
cmp
fstpt
out
adc
push
rcrl
mov
jecxz
sbb
jp
shll
push
vunpcklpd
mov
jb
push
int3
pop
and
jmp
mov
mov
stos
fsubrp
mov
iret
outsb
shlb
push
lcall
sbb
cmpsb
xchg
adc
aam
push
popa
out
push
clc
sbb
dec
mov
inc
popf
loope
mov
clc
movsl
fcmovne
jge
mov
loopne
int
in
scas
mov
addb
shll
lds
and
movsb
lcall
bound
int3
lds
or
rcrl
rcrb
push
fwait
fwait
and
dec
pop
lret
aas
dec
dec
imul
sbb
ja
mov
dec
mov
sub
jnp
pop
cmp
cwtl
or
int3
mov
xchg
cmpsl
pusha
sahf
sahf
cmp
lea
test
or
out
jnp
or
icebp
popa
or
push
mov
cmpsb
jge
sarl
mov
dec
dec
adc
cmp
dec
dec
inc
out
lret
push
or
add
or
xchg
mov
lds
shrb
jmp
out
scas
jmp
lods
xor
mov
fcomi
arpl
fstpt
push
cmpsb
mov
mov
mov
icebp
repz
popf
inc
sbb
pop
cmp
inc
rclb
xlat
mov
js
dec
mov
lods
mov
sub
pop
dec
push
bound
sub
pop
sub
cmp
push
insb
cld
dec
or
cmp
fistps
scas
cmpsb
sbb
mov
adc
shlb
push
leave
xor
fbstp
icebp
inc
sub
subb
add
push
mov
aad
int3
clc
or
outsb
aad
loope
add
add
jo
mov
jmp
pusha
lea
pop
popa
push
mov
sbb
loop
scas
shlb
inc
fcmovnu
arpl
in
arpl
push
jne
adc
inc
data16
in
sub
jge
jo
mov
scas
push
shll
pop
push
push
int
arpl
jl
push
xchg
mov
jno
inc
xlat
mov
hlt
push
insb
leave
sbb
mov
sbb
mov
lea
mov
push
aad
mov
push
fdivrs
jno
shll
sub
xchg
push
pusha
pop
loop
add
mov
push
and
mov
and
add
icebp
inc
in
adc
xor
mov
push
scas
nop
push
hlt
adc
dec
stos
adc
scas
xchg
xchg
and
mov
or
outsb
outsb
adc
pop
mov
aas
xor
inc
andb
bswap
insl
jge
in
inc
mov
scas
mov
adc
inc
in
or
daa
shl
out
ljmp
or
addr16
das
pop
popf
sub
pushf
stc
imul
pop
in
jae
fistl
mov
sub
jge
or
je
aaa
push
cwtl
lds
daa
cmp
bound
push
scas
out
mov
subl
cli
hlt
fadds
mov
dec
sub
mov
xor
icebp
lock
xor
lods
mov
mov
arpl
stc
xchg
jmp
jae
in
mov
mov
jnp
hlt
add
xchg
test
xchg
jno
inc
xchg
in
mov
dec
popa
jecxz
out
jae
iret
fidivrs
and
insb
jmp
xor
faddl
stc
dec
xchg
xchg
xchg
add
and
pop
pop
adc
imul
add
lret
xlat
cltd
or
cmp
and
add
sar
add
jns
or
pop
adc
jge
in
icebp
xchg
mov
cmovp
idivb
inc
cwtl
push
lock
icebp
cmp
sti
andl
mov
cltd
ret
hlt
pushf
stc
push
std
outsl
sub
push
inc
jne
mov
scas
movsl
es
imul
inc
test
and
jl
inc
or
iret
dec
leave
subb
cs
iret
mov
mov
xor
or
mov
out
aad
mov
adc
in
jp
rcl
hlt
sbb
mov
jns
mov
repz
shll
lea
pop
xor
cmp
push
xchg
cmc
pop
and
ds
dec
xchg
lret
fisttpll
test
in
inc
rorl
in
cli
xchg
call
cmc
sbb
dec
imul
or
test
leave
and
int
or
into
sarb
lock
negb
rcl
add
pop
mov
imul
push
in
repz
int
sahf
sar
fsubrs
cwtl
mov
je
stos
lahf
pop
add
or
jmp
inc
popa
mov
add
sub
jle
push
lods
mov
jmp
movsb
xchg
xchg
lahf
stos
add
jns
dec
mov
outsl
je
inc
imul
jno
push
jne
sbb
jge
dec
das
mov
gs
dec
xor
pop
out
xchg
xor
add
repz
add
in
xchg
mov
repnz
dec
jns
inc
dec
insb
pusha
fldt
div
adc
jl
or
rsm
jb
mov
fadds
inc
stos
adc
add
lret
or
push
cmp
or
inc
and
lret
adc
inc
arpl
xchg
fisubs
push
js
les
or
push
test
icebp
rcr
mov
xor
xchg
testb
push
add
pushf
dec
adc
cmp
mov
sti
mov
and
add
enter
push
lods
ds
jle
mov
jmp
out
adc
or
les
ja
shrl
xchg
js
sbb
mov
cmpsb
or
jmp
dec
lahf
xor
out
scas
test
test
pushf
test
js
subl
xchg
jae
sbb
pop
xchg
daa
push
adc
stos
inc
sub
int
fldenv
mov
pop
xchg
fildl
cmp
jle
test
ret
mov
popw
xchg
cmp
and
sbb
out
lret
jbe
mov
mov
jp
mov
fbstp
adcl
inc
sbb
sub
js
mov
cwtl
add
pop
mov
mov
sbb
pop
loop
xchg
add
sbb
sub
push
pop
fnstenv
sub
cmp
ds
xor
and
or
or
lret
sub
cwtl
pop
sub
push
mov
cltd
outsl
mov
idivl
out
push
sbb
int3
inc
jo
lea
add
jne
lds
sub
xor
jnp
mov
scas
sub
mov
mov
cmp
xchg
sub
cmp
mov
into
mov
ss
insl
inc
data16
test
pop
stos
je
fidivrs
push
flds
sbb
les
cmp
movsb
add
xchg
adc
dec
out
scas
inc
inc
out
jne
pop
jns
cmp
mov
das
cli
popa
addl
and
insl
daa
js
data16
mov
mov
hlt
and
cld
inc
outsb
fwait
pop
sub
pop
in
pop
adc
in
xorb
imul
cmp
or
in
dec
or
pusha
lock
lock
daa
int
mov
inc
movsb
test
shll
je
icebp
mov
inc
push
into
loope
pop
leave
or
fimuls
jle
js
mov
ljmp
test
mov
adc
or
dec
inc
mov
add
jp
dec
jp
dec
std
mov
cmp
aas
inc
les
jg
cmc
stos
lods
dec
shlb
ja
sub
jl
mov
insl
lods
xchg
sub
xor
dec
ja
out
mov
js
xorb
in
je
sub
test
sub
sbb
add
fdivrs
adc
push
xchg
pop
imul
loop
pop
test
shll
lods
sub
adc
xor
outsb
mov
mov
shr
mov
pop
jle
xchg
inc
push
pop
or
jg
cmp
insl
push
outsl
ds
jge
xor
adc
jl
push
mov
fistps
imul
movsl
jb
or
fs
add
adc
inc
add
pushf
lret
push
test
adc
sbb
jbe
cmpsl
in
mov
arpl
adc
testl
xchg
sbb
adc
fisubl
out
pushf
jae
dec
not
sbb
fwait
inc
stc
xchg
in
pop
js
popf
fiaddl
rsm
ret
xchg
loop
mov
xlat
sbb
pop
or
dec
add
addr16
out
mov
popf
int
jo
in
inc
frstor
jecxz
xchg
push
movsb
movsb
pop
cwtl
cmp
push
inc
fbld
lret
insl
or
xor
dec
mov
jmp
cs
cmp
pop
sbb
mov
andb
lea
xchg
fnsave
jp
push
xchg
jae
call
fcoml
xor
and
sbb
mov
push
cmp
jnp
out
push
or
mov
sub
movsb
mov
or
jle
pushf
lea
sbb
or
bound
int
dec
xchg
mov
leave
adc
leave
and
lea
inc
dec
addl
inc
xchg
imul
int3
pand
into
in
rol
and
dec
or
shll
repnz
call
xor
lods
cmp
push
fs
in
mov
outsl
and
cmp
cmpsb
fidivrs
xchg
scas
inc
test
dec
mov
sub
into
pop
xor
and
add
mov
jge
jnp
ljmp
lret
in
imul
sub
cmp
sti
xchg
inc
pop
stos
push
mov
dec
xchg
cmc
ret
xchg
cmp
dec
mov
subl
push
adc
mov
add
loope
pop
jmp
and
xchg
pusha
jno
repnz
loope
jge
push
nop
xlat
stos
gs
mov
sbb
pop
popf
mov
add
or
sti
aam
pop
push
repnz
jns
sti
xchg
sbb
lds
cld
je
das
scas
xchg
vmaxps
mov
cli
xor
or
cmpsb
and
inc
arpl
push
lret
bound
xor
xor
pop
dec
adc
inc
out
adc
les
sub
lods
jns
xor
sarb
mov
outsl
add
test
xchg
add
test
loopne
out
xlat
and
and
cmp
sar
xor
imul
insl
xlat
leave
shrl
push
xlat
cmpsl
mov
dec
xor
xchg
sub
orb
jl
push
fisubrs
nop
mov
fnstenv
mov
scas
pusha
xor
dec
pusha
loop
ret
stos
aam
push
cltd
dec
inc
and
je
pop
imul
fiaddl
sbb
aaa
inc
pop
mov
adcb
inc
popf
fmull
jae
or
xchg
xlat
aaa
push
mov
push
pop
ficoml
cli
ljmp
push
sbb
jle
loop
pushf
pop
ljmp
mov
or
icebp
sbbl
cmp
movsb
dec
push
cmp
lcall
xchg
jno
stos
mov
push
push
insb
jne
dec
sbb
cmp
xor
repz
ljmp
xor
sbb
aam
sbb
nop
lods
imul
insl
stos
mov
cmp
push
push
in
mov
mov
fidivs
fdivr
shrb
sti
out
push
and
dec
push
pop
and
loopne
in
push
psubw
cmp
and
add
and
pop
rcl
inc
enter
movsl
loope
xor
add
jne
jbe
lods
push
es
inc
decb
or
cmpsl
jle
or
jle
sarl
popf
xchg
pop
aam
xchg
pop
mov
sbb
cmpsb
cmp
adc
fistps
inc
jg
dec
lods
push
mov
dec
mov
jp
jns
mov
imul
pop
ret
lods
test
aas
sub
dec
jmp
dec
or
lahf
xchg
mov
dec
push
add
rol
insl
cmc
loop
bound
out
mov
int
add
mov
lods
sbb
gs
jne
adc
mov
and
ja
push
add
mov
call
xor
cmp
inc
popa
lds
std
pop
aad
cmc
pop
sarl
lahf
dec
aad
fisubrl
out
add
mov
adc
gs
out
fstps
jl
sub
out
aas
mov
cli
adc
mov
cmp
pushf
xchg
cmpsl
xchg
icebp
dec
push
cmpb
xchg
jp
ja
mov
sti
aam
dec
push
push
sbb
mov
xchg
loope
add
pop
pop
sub
push
leave
fdivl
cmp
clc
and
out
mov
aad
lock
xor
rol
ret
cmp
and
mov
leave
jns
sbb
mov
inc
adc
inc
sbb
push
enter
push
add
adc
or
mov
mov
add
jle
lods
add
xchg
js
inc
loopne
mov
andb
mov
repnz
sarb
stc
movsb
aaa
push
or
mov
insb
dec
push
add
cmp
sub
fs
sbb
jle
push
adc
sbb
add
lods
aam
push
rep
aaa
les
insb
lret
mov
jb
dec
stc
in
dec
mov
jne
int3
test
clc
sub
test
sub
add
jge
cmpsl
sub
adc
inc
das
dec
jbe
and
cmc
mov
lds
iret
inc
insl
int
or
bound
ja
gs
push
inc
add
sub
les
cmc
dec
test
push
jl
jp
out
xchg
orl
pop
jne
mov
pop
cmp
mov
shr
sub
repz
cli
stos
xor
popa
inc
in
push
addr16
push
or
sub
inc
cli
pop
and
clc
adc
xchg
imul
lods
jl
push
stos
sbb
inc
xor
mov
inc
pop
jg
outsl
and
inc
dec
aam
mov
mov
inc
movups
icebp
pusha
ret
cmc
dec
jo
mov
add
xorb
inc
and
sub
call
lret
aam
cmpsb
sub
out
dec
push
mov
and
and
and
jle
cmpsl
jp
pop
cmp
pop
negb
pop
mov
mov
jge
fwait
and
push
mov
mov
sbb
loope
divb
in
push
adc
fcompl
in
jmp
push
add
add
addr16
inc
ret
ja
aas
cmpb
cmpl
aam
ja
ja
inc
loopne
inc
ja
jo
faddp
cmp
ficompl
xchg
inc
dec
jge
cmp
es
dec
mov
lds
jg
ljmp
fwait
aad
mov
outsb
stos
cltd
shl
push
outsl
adc
stc
jecxz
fldt
add
sub
js
push
ret
jmp
pop
repnz
xchg
mov
test
cli
or
es
jns
call
mov
arpl
fisttpll
mov
pop
push
mov
push
clc
aam
lcall
imul
inc
pop
mov
mov
subl
and
jb
and
mov
xor
out
rolb
out
xor
out
jne
and
mov
leave
int
fdivrp
fadds
stos
jmp
jae
ret
jno
mov
xlat
fdivr
adc
or
mov
les
fistl
mov
sahf
gs
aas
xor
lods
jae
add
fistps
and
leave
jbe
ljmp
dec
and
jbe
inc
inc
xchg
push
aaa
or
dec
jae
movsl
ret
out
loop
xchg
loopne
in
adc
lahf
mov
jl
xor
out
jo
mov
lret
add
lds
xchg
xchg
lahf
push
imul
sub
ret
lahf
push
out
xchg
incb
and
inc
repz
xchg
fistpl
sub
loope
fnstsw
in
adc
ret
clc
movsl
mov
add
hlt
push
imulb
nop
add
mov
ret
shll
inc
in
cmp
sbb
xchg
mov
mov
mov
and
outsb
and
mov
test
dec
js
inc
sbb
adc
dec
lret
xor
add
dec
movsl
ljmp
cmp
stos
cltd
push
nop
movsb
dec
aam
pcmpgtb
mov
or
notb
aam
jne
jl
lret
mov
push
stc
test
or
imul
ret
add
ja
aas
dec
xchg
mov
iret
inc
test
bound
sub
into
nop
or
cmp
mov
inc
jmp
dec
mov
adc
mov
je
test
jecxz
shll
stc
rcrb
adc
cs
dec
in
add
leave
aaa
add
cmp
scas
sub
pop
xor
push
test
jmp
jo
js
fidivrs
jle
and
scas
fsubl
xchg
or
add
push
mov
popa
mov
int3
xlat
orl
ja
dec
icebp
add
push
std
into
leave
data16
subb
pop
pop
es
push
push
jecxz
mov
leave
ja,pt
xlat
pusha
lahf
fdivl
add
lods
leave
mov
and
mov
in
mov
pop
movsl
notb
je
cmp
movsb
xor
clc
mov
sub
lods
ljmp
pop
inc
mov
mov
jns
push
repz
jl
mov
lods
mov
imul
in
and
dec
sti
cmp
pusha
or
mov
mov
imul
or
sub
inc
or
cwtl
int
jmp
xlat
adc
aad
in
mov
cld
repz
mov
sti
jle
xchg
cmpsb
ss
push
ss
cmc
dec
xor
std
stos
decl
mov
outsl
je
cld
xchg
sub
test
fcmovu
cli
enter
gs
and
push
sub
inc
loope
incl
xor
add
stc
inc
mov
addl
mov
or
in
cmp
stos
popa
subl
mov
cli
dec
adc
addr16
add
jmp
push
add
dec
jle
popf
push
jge
fimuls
scas
ds
stos
sbb
mov
lret
sbb
out
sbb
clc
adc
fisubl
out
xchg
mov
inc
jae
lock
mov
or
movsb
sbb
or
jecxz
mov
or
jo
fisttps
test
jae
lods
pushf
dec
mov
mov
jmp
clc
and
je
add
mov
jb
inc
dec
scas
mov
add
sub
std
and
push
into
sbb
mov
mov
add
push
jmp
addb
xchg
pop
lcall
out
jle
fs
xlat
dec
mov
orb
addr16
cmpsl
pop
xchg
xor
and
in
std
mov
lcall
lock
fs
push
xchg
add
add
ret
mov
lahf
ss
decb
xchg
xchg
push
sti
fistps
addr16
cmp
mov
adc
loopne
mov
je
cmpsl
daa
xchg
jcxz
or
xchg
xor
ljmp
xor
aas
stos
xchg
cmc
and
mov
aaa
fcmove
or
mov
xchg
jp
jmp
adc
fadds
lods
leave
std
pop
and
mov
add
ljmp
cmp
jbe
mov
or
fadds
xchg
jae
aas
je
sbb
lcall
and
fdivrs
xor
sub
fcomps
xchg
push
xlat
adc
call
push
int
outsb
ficompl
out
mov
mov
cld
pusha
mov
outsl
push
and
ret
push
and
loopne
movsl
repz
sub
cmp
cmp
add
stc
sub
jecxz
pop
inc
test
push
aas
ss
gs
iret
sub
push
mov
mov
jge
add
jmp
out
or
mov
fidivl
cmp
loopne
dec
dec
imul
push
mov
inc
xlat
inc
jne
jl
or
jbe
ds
pop
push
cltd
fcompl
jmp
daa
and
xchg
dec
mov
shll
dec
pop
pop
adc
pop
rorb
xchg
fs
dec
stos
lret
jno
sbb
pop
shrb
outsl
sub
notb
or
ja
inc
inc
xchg
xor
jmp
adc
fwait
pop
daa
lds
and
inc
fwait
leave
cmp
std
jae
out
mov
inc
jbe
xor
dec
daa
inc
push
cmp
sbb
xor
ja
lods
frstor
insl
lcall
fcmovnu
dec
add
cli
cmp
xor
lock
movsl
out
pop
jnp
xchg
mov
icebp
dec
or
repz
cmp
addr16
mov
push
scas
repz
xchg
add
call
sub
xor
outsb
test
cltd
icebp
test
out
add
scas
cmp
mov
fdiv
lret
xor
pop
push
and
jg
or
mov
add
pop
outsb
aam
aas
pop
fcompl
mov
lea
in
mov
lods
xor
or
stos
mov
aas
and
out
or
pop
sarb
fisubrl
ss
dec
inc
push
jl
dec
aad
dec
xlat
in
add
scas
testl
out
dec
ret
jne
xchg
dec
mov
push
and
mov
jne
dec
das
dec
inc
xchg
push
sbb
jbe
test
lcall
jle
mov
mov
fistpl
jo
jmp
jo
js
cmp
mov
sbbl
sub
repz
fcoml
lock
sbb
cwtl
jno
push
xchg
sbb
cwtl
orb
inc
pop
mov
fcomps
fstpl
push
loopne
adc
jno
pusha
sub
and
push
pop
pop
test
jecxz
mov
test
iret
push
pop
in
push
pop
mov
test
add
mov
cmove
jl
inc
fld
dec
push
cmp
aad
lret
movzbl
lock
dec
mov
add
lods
mov
lods
lods
les
mov
adc
and
mov
cwtl
pop
fisubrl
lods
sub
fwait
xor
and
out
inc
mov
icebp
pop
aam
aad
js
ja
xlat
packssdw
ss
jecxz
imul
add
ficompl
lahf
ret
mov
sbb
jle
xor
in
inc
and
push
mov
les
xchg
out
mov
out
test
jbe
add
pop
jg
outsl
std
pmulhw
icebp
clc
arpl
xor
adc
iret
js
push
fwait
xchg
lea
push
es
nop
repnz
test
mov
push
xchg
and
adc
cwtl
push
outsb
fnsave
pop
fcoml
xorl
stos
xlat
scas
adc
mov
cmpsb
movsb
mov
popf
mov
adc
das
bound
cmp
les
cmp
push
lret
ret
inc
add
sti
push
cmc
mov
add
pop
pop
push
test
cld
pop
mov
and
cmpsl
bound
es
xor
inc
push
lods
fstpl
test
arpl
push
out
stc
inc
dec
mov
jne
xor
mov
mov
pop
cmpsb
pop
jae
pop
push
xchg
icebp
and
outsb
orl
sub
repnz
pop
push
inc
push
cld
iret
test
js
xchg
xor
insl
lods
sub
lret
out
mov
out
inc
jl
push
and
imul
inc
test
in
mov
out
outsb
popa
nop
jb
push
aaa
call
out
popf
dec
fmull
ljmp
pop
insb
cs
jb
std
fisttps
adc
and
adc
call
ficoms
pop
ret
mov
lods
mov
adc
add
xchg
sub
xchg
inc
xchg
mov
sbb
test
lods
mov
xchg
mov
add
mov
and
sub
loop
mov
pop
cld
pop
jb
sahf
dec
nop
add
sar
scas
icebp
test
push
push
repz
cmpsb
es
jbe
xchg
xor
xchg
mov
ja
xchg
jno
aam
and
rolb
imul
stos
sub
or
push
mov
mov
mov
and
aam
loop
ret
lock
jl
xlat
mov
arpl
mov
jl
sbb
leave
cmp
adc
out
fsts
xor
lcall
insb
mov
loopne
mov
xor
scas
lea
sbb
sahf
aas
jge
outsb
cmpsl
sub
aas
mov
insl
js
ljmp
or
idiv
lock
mov
sahf
jns
pusha
insl
cmp
sbb
int3
ret
lods
lahf
shrl
adc
and
mov
aad
cmp
sub
pop
fmulp
test
scas
push
into
insl
xchg
pop
mov
mov
push
pop
movsl
xchg
hlt
mov
jmp
cltd
cwtl
xor
addr16
mov
std
sub
fwait
pop
sahf
les
mov
fcmovnb
inc
xchg
test
aaa
ret
lods
inc
push
stos
mov
push
pop
pop
push
aad
icebp
iret
and
outsb
dec
xchg
stos
sbb
jbe
aas
sbb
or
rol
inc
cmp
dec
aam
or
aas
aad
lods
sbb
xchg
jne
mov
lcall
cs
inc
mov
rclb
adc
or
cmp
ret
pop
xchg
mov
sete
scas
adc
notb
jnp
lds
jg
sarl
xchg
js
outsb
mov
push
aad
mov
sbb
jmp
adc
jge
mov
rorb
ret
rol
jmp
push
inc
pop
repnz
fisubl
jbe
pop
cmpl
imul
ss
cmp
xchg
in
cwtl
add
jo
aas
mov
lock
xchg
mov
into
push
xor
fs
aam
xchg
xchg
into
jns
dec
mov
jnp
in
add
dec
sub
fwait
lods
mov
cmp
xchg
and
xorl
cs
push
lret
pop
insl
aad
icebp
inc
sub
lock
xchg
test
xchg
loopne
dec
sarl
push
jle
cmp
inc
push
fnstcw
mov
enter
ljmp
pop
test
mov
mov
cmp
mov
mov
insl
int
mov
shrb
mov
sub
add
adc
cmp
mov
xchg
dec
out
xor
icebp
in
test
pop
rcrl
xchg
test
rcrl
pusha
mov
or
add
repnz
int
rcrl
imul
jg
mov
les
sahf
mov
push
sbb
xchg
push
adc
shr
in
cli
popa
and
inc
scas
jg
jno
mov
fisubl
cli
inc
xchg
sbb
xlat
jge
ret
jnp
jae
push
xchg
dec
pushf
xchg
leave
jl
inc
cmovno
mov
mov
mov
push
mov
pop
inc
jmp
push
insb
fistpll
jg
out
xlat
dec
pop
jmp
insb
mov
test
pop
jecxz
sbb
ret
or
mov
jge
pusha
int3
jg
xor
mov
dec
push
inc
in
aam
sub
or
mov
or
into
mov
outsl
adc
aaa
repz
shlb
jae
inc
sub
decl
scas
cmc
mov
lea
in
sbb
mov
push
sbb
std
sub
stos
add
cmc
fwait
in
sahf
sub
cmp
push
add
cmp
and
push
jl
sub
mov
cmp
mov
adc
js
cs
pop
std
mov
or
jae
dec
push
mov
into
shr
jmp
mov
add
mov
mov
inc
mul
lcall
cwtl
dec
add
shrl
jae
lcall
movsb
sub
call
mov
stos
or
push
shll
pop
cltd
int
dec
out
xlat
inc
cwtl
pop
jnp
sahf
inc
scas
xor
and
adc
in
sahf
cmp
stos
repnz
cmp
push
xchg
mov
stc
mov
decb
jno
icebp
out
shll
pop
push
cs
mov
orl
cmc
jmp
pop
mov
xchg
pop
daa
inc
inc
cltd
ljmp
mov
mov
test
mov
das
call
inc
hlt
cmpl
fisubl
sbb
out
cmp
or
inc
cmp
mov
and
testb
ja
sub
mov
clc
in
xlat
push
flds
lret
les
push
in
sub
jns
sub
fwait
mov
xor
mov
pushl
add
mov
sti
fidivrs
popf
jb
push
pop
or
jo
lock
adc
ret
push
ret
sbb
test
fdiv
jbe
and
insl
ss
and
jg
adc
cmpsl
scas
mov
sbb
xorl
std
dec
aam
das
jne
mov
pop
xor
icebp
xchg
jmp
in
mov
lods
mov
xor
and
repz
inc
mov
shlb
sub
mov
repnz
call
stos
sub
lds
test
inc
cmp
push
mov
shrl
lahf
out
pop
lods
xchg
inc
push
aam
sub
push
std
pop
dec
test
pop
cmp
fstpl
orl
dec
or
push
cmpsl
mov
dec
rcr
pop
out
sub
sbb
xchg
sub
sbb
push
cmp
cmp
adc
push
cmp
lcall
and
xor
sti
sbb
pop
add
cli
xor
pop
dec
mov
jge
jne
inc
sub
inc
sub
leave
int
pushf
cli
ret
cs
push
ljmp
mov
and
dec
das
xchg
jecxz
xchg
imul
jmp
inc
inc
fsubs
push
test
xchg
dec
fdivr
xor
repz
xlat
mov
push
mov
lock
pop
mov
out
lret
movsb
sub
inc
leave
mov
ss
pop
subl
daa
pop
repnz
jg
movsl
push
xchg
mov
mov
xchg
ror
push
negb
dec
pop
cmp
icebp
or
test
hlt
jge
sub
cmc
loop
jo
arpl
cmp
loope
mov
xchg
es
push
scas
cld
stos
lahf
int
test
push
daa
cmpsl
mov
mov
jge
addr16
into
jns
sub
jle
gs
mov
add
sub
clc
call
jp
cltd
sub
popf
xor
les
adc
push
and
das
jbe
fsubrl
push
cwtl
lods
pop
cmc
and
imul
sbb
test
mov
xor
jg
jo
vdivss
jmp
jnp
or
xchg
daa
cltd
inc
dec
inc
popa
xchg
cltd
cli
inc
mov
adc
add
xchg
rorl
out
adc
mov
xchg
into
cmp
add
pushf
inc
movsl
cmc
add
mov
xor
mov
sbb
sbb
ficoml
into
rcr
lret
or
mov
mov
jnp
adc
ret
dec
xor
pop
div
jg
add
jmp
jae
and
test
rcrl
mov
mov
pop
fsts
mov
aad
push
pop
xchg
xchg
cld
mov
add
push
xor
pop
xor
lcall
sub
fbstp
int3
repnz
jns
jnp
adc
iret
nop
clc
add
push
cmp
stc
add
jecxz
adc
xlat
test
cmp
fdivrp
lds
mov
shll
call
or
out
lret
in
inc
or
jae
es
test
push
in
pop
push
mov
xor
test
push
mov
lock
notl
jecxz
mov
out
xor
mov
or
stc
and
cmpsb
lret
jp
pop
inc
stos
jg
call
pop
out
and
int
pushl
repz
dec
imul
icebp
fimuls
sub
loope
fdivl
les
mov
adc
sub
daa
lods
int3
sbb
sub
xlat
mov
and
lds
mov
test
fsubrs
or
not
outsb
mov
or
jp
dec
pop
xchg
push
xor
inc
sbb
xor
popa
adc
data16
dec
lahf
int3
fs
imul
jge
cli
xchg
fimull
xor
xchg
lds
lret
ret
or
xchg
aad
jp
call
jne
push
pop
stos
loop
inc
fidivrs
movsb
mov
lea
adc
fsubl
fcom
imul
or
mov
std
mull
mov
sbb
inc
sub
popa
insb
xchg
jnp
and
mov
stc
loope
mov
add
fcmovnbe
xor
xchg
repz
arpl
arpl
or
xchg
inc
or
gs
sbb
repz
fmull
push
mov
or
push
xlat
lahf
mov
stos
lods
rorb
mov
and
pop
mov
xchg
sbb
dec
cmc
sbb
add
mov
mov
inc
in
insb
arpl
dec
push
in
iret
and
mov
xchg
js
xor
sbb
xor
inc
xchg
or
lret
mov
xor
pop
insb
das
imul
shlb
dec
jo
cld
test
fists
ljmp
or
in
xor
dec
and
loopne
int
adc
pop
ljmp
fldenv
mov
call
loop
sub
sub
mov
cld
cmp
add
mov
pop
push
mov
xchg
and
jg
mov
nop
scas
insb
or
xchg
loopne
jmp
arpl
add
dec
pop
pushf
pusha
jns
shlb
jle
loope
jecxz
push
mov
sub
mov
repz
aam
cmp
movsb
push
imul
fwait
movsl
pop
enter
mov
xchg
cmpsb
setle
out
xchg
outsb
loop
je
leave
aas
into
call
out
clc
inc
cmp
cmpb
cmpsl
pop
ljmp
inc
in
cmpl
loope
test
jl
xor
rorl
mov
mov
add
cmp
shll
xchg
xor
xor
sahf
sub
lea
inc
in
stos
imul
xchg
fwait
mov
jae
rorb
fsubrs
popf
xor
mov
inc
stos
sbb
mov
loopne
mov
dec
push
cmp
cmp
pop
adc
add
cli
notl
pop
add
test
lret
daa
loop
scas
and
xchg
in
mov
xor
test
adc
cmp
mov
xchg
add
dec
fcmovbe
push
dec
ss
pop
pop
clc
cmpsb
cmp
das
push
outsb
pop
shl
xor
std
adc
mov
jp
out
jmp
in
adc
js
mov
mov
les
cmp
mov
cli
lret
cmp
fnstenv
out
imull
test
out
jb
mov
test
and
push
cmpsb
insl
jl
jmp
popf
pop
clc
lods
push
jmp
dec
sbbb
cmp
inc
push
mov
add
test
add
jl
cmp
out
lcall
jns
pop
add
adc
pop
test
push
pop
jae
cmp
inc
gs
mov
cwtl
push
push
fildll
hlt
xchg
pop
out
sbb
jns
imulb
jmp
adcl
test
mov
push
hlt
mov
xchg
in
cld
test
sbbl
outsl
adc
in
sarl
ljmp
enter
mov
jg
test
cmc
mov
sbb
mov
sar
sub
fbstp
xrelease
mov
cwtl
call
adc
out
mov
mov
aad
shl
mov
mov
ret
jo
sbb
sbb
sub
jb
add
dec
mov
push
jno
cltd
and
dec
cmp
jns
xor
out
sbb
cmp
mov
jmp
dec
clc
outsb
xor
ljmp
xor
jmp
and
hlt
cmc
and
enter
and
test
arpl
loop
fwait
dec
subl
jo
sub
sahf
sub
orl
lcall
xchg
into
mov
mov
pop
dec
fldenv
pop
repnz
pop
das
mov
dec
out
test
jge
and
dec
add
inc
retw
mov
add
xchg
or
xor
arpl
in
popf
pop
aaa
pop
jbe
jbe
stos
movsb
ljmp
push
fs
in
rcll
scas
lods
je
nop
call
adc
jnp
pop
jp
add
daa
mov
loopne
mov
cmp
or
pop
cmp
sbb
and
mov
sbb
fisubl
scas
mov
xchg
ret
popf
xor
pop
adcb
push
pop
jbe
xchg
jno
inc
std
sub
jae
and
dec
ss
movsb
pop
adc
push
sbb
jnp
jp
mov
fs
or
out
dec
nop
lods
jnp
jle
inc
dec
leave
mov
aas
int3
mov
scas
arpl
incb
dec
and
outsb
hlt
inc
fs
push
pop
ss
inc
or
or
cltd
sbb
jl
aaa
dec
xchg
orb
jb
jge
imulb
ljmp
loope
xor
inc
scas
call
push
sub
sbb
mov
ss
ja
je
or
push
outsl
cmp
sbb
mov
mov
xor
ljmp
inc
cmp
dec
and
cmpsl
fstpl
jl
cli
mov
cmp
xor
xchg
lret
cmpsl
mov
in
scas
push
es
loopne
nop
mov
dec
sub
jmp
movb
xchg
jnp
inc
mov
push
imul
fnstcw
mul
xor
int
cmp
pop
scas
imul
std
mov
or
fldenv
mov
mov
stos
or
cli
mov
pushl
pop
rcll
test
addl
outsl
pop
sub
xchg
pop
xchg
push
lea
cmp
sbb
sub
addr16
xchg
adc
cwtl
shlb
jb
repnz
xor
dec
out
clc
insl
add
push
adc
adc
les
mov
xor
push
xchg
int3
adc
dec
std
out
sbb
aam
xor
lods
mov
fwait
or
dec
push
enter
cmp
cltd
xchg
in
cld
pushf
call
add
scas
mov
divb
ret
jl
add
xchg
inc
sar
push
notl
mov
orl
movsl
iret
jno
sub
gs
cli
jo
stos
push
jmp
jb
lods
subb
shrb
pop
out
hlt
mov
les
xchg
fmuls
mov
mov
jns
jae
lock
inc
xor
mov
mov
pop
divl
fidivs
or
lds
push
push
out
mov
loop
xchg
pop
aam
test
inc
mov
xor
and
fistps
nop
push
ljmp
push
nop
idivb
dec
pop
jno
das
pop
imul
add
push
push
movsb
xor
xchg
out
outsl
mov
and
in
inc
aam
push
cmp
cmpsl
sbb
loope
sbb
jle
outsl
fsts
arpl
les
jbe
push
daa
fsubp
iret
push
sti
repnz
cmpl
xchg
cld
fistps
loopne
xor
mov
mov
mov
fists
les
mov
inc
pop
jns
in
jle
dec
dec
mov
sbb
dec
loopne
jmp
in
pop
rcll
pop
jmp
in
jne
dec
sub
call
adc
push
sti
inc
pusha
pop
scas
cmc
les
cltd
scas
push
mov
mov
mov
mov
inc
cmp
xor
sbb
aas
sarb
mov
cs
jns
adc
cmp
aaa
xor
cmp
dec
pop
sub
pop
lods
xor
lret
insl
jb
jnp
stos
fwait
xchg
cmp
out
call
xchg
mov
adc
lock
xor
mov
call
cltd
fsub
mov
fwait
cltd
jo
adc
insl
push
cmp
stos
scas
mov
inc
lea
pop
out
mov
fimull
js
sub
push
loopne
imul
cmp
repz
divb
cmp
mov
xor
lds
lcall
call
js
mov
rcl
cmp
add
cmc
daa
bound
iret
loope
out
xchg
roll
lea
leave
loope
iret
mul
rcll
jbe
sti
int3
adc
jle
mov
sbb
cmp
test
imul
cltd
add
xor
sar
pop
sbb
aad
xchg
insb
clts
push
inc
add
mov
int
sti
aas
cmpsb
pop
gs
pop
cmp
test
push
mov
je
mull
push
pop
iret
xchg
jns
push
lahf
das
pop
inc
loope
loope
das
shrl
popa
movsl
pusha
or
shrl
mov
jne
cmp
push
adc
inc
adc
pop
jns
sbb
ljmp
popf
dec
lock
test
mov
sbb
insb
int3
cmpsl
or
push
xchg
cmp
outsl
mov
mov
popf
fcoml
lahf
push
sbbl
add
and
insl
add
push
das
adc
movsb
das
bound
ljmp
adc
mov
sub
call
aas
lcall
push
or
jae
mov
cwtl
stos
and
xchg
jl
fidivs
test
je
dec
out
sub
adc
lods
loopne
cld
outsl
in
xchg
loope
adc
ja
or
adc
repnz
push
push
jp
jb
pop
mov
push
addl
loop
cmp
xchg
xlat
sbb
sub
out
sub
xchg
int
addr16
and
jl
ljmp
jbe
cmp
mov
nop
js
fiaddl
test
aas
sub
cmp
ss
insl
xor
in
aad
rcrb
fldl
stos
pop
js
sbb
inc
dec
adc
mov
sub
sbb
pop
xchg
cli
jg
bound
mov
cld
push
pop
fs
xchg
mov
add
push
stos
sbb
rorl
arpl
dec
mov
sub
call
testl
ret
mov
pop
xchg
and
cmp
add
mov
inc
sahf
cmp
pop
cwtl
cmp
cs
xrelease
cli
ljmp
cmp
cmp
test
das
add
inc
rolb
add
enter
out
out
in
pop
lock
ja
cmpl
push
nop
cmpl
ja
sbb
push
xchg
test
inc
xchg
lret
aaa
sub
jmp
inc
cwtl
sbb
lcall
fidivrs
rcrb
stc
dec
sbb
stos
xchg
mov
and
cmp
adc
mov
in
push
popa
imull
ljmp
mov
outsb
mov
and
aas
gs
mov
mov
ds
push
mov
mov
dec
and
inc
lea
xor
pop
xchg
jl
cmc
sbb
lds
jg
enter
push
sub
mov
out
xchg
jbe
rclb
push
sbb
cmp
out
aas
mov
mov
cltd
cvtpi2ps
cli
sahf
xchg
enter
enter
mov
fcompl
out
inc
lcall
mov
sqrtps
lret
lock
sbb
xor
push
divb
xchg
adc
cli
fistl
xchg
repz
or
xlat
js
idivb
addb
inc
dec
scas
lock
xlat
lods
loop
mov
jp
nop
xor
jae
int3
loopne
pop
imul
cld
dec
fsubs
loop
rorl
pop
xlat
cld
push
ds
and
pushf
xchg
iret
clc
sbb
jno
imul
jmp
add
cmp
mov
xor
mov
pop
lock
mov
lds
xlat
mov
mov
icebp
push
popf
int3
and
xor
repz
fstpt
inc
jo
pop
mov
sarl
sbb
pop
pop
out
loopne
push
into
sbb
sbb
mov
inc
lahf
outsl
sub
inc
inc
clc
mov
fmull
je
popa
mov
dec
or
xchg
adc
xchg
push
sub
or
lret
pop
inc
fldl
cmc
into
mov
xchg
inc
inc
mov
es
gs
sub
insb
rorb
cmpsb
push
dec
imul
fld
jg
loopne
std
jne
push
mov
mov
adc
mov
pop
out
mov
inc
out
repnz
sbb
xor
lret
loop
mov
inc
test
adc
sbb
aad
xor
stc
mov
jns
adc
cmp
pop
aaa
dec
out
sbb
jp
icebp
mov
inc
out
int
inc
inc
test
xlat
scas
mov
movsb
test
out
out
outsb
in
mov
mov
mov
add
inc
and
mov
std
movsb
and
mov
jae
pop
fadd
ja
popa
cld
pop
push
jp
enter
or
push
push
add
enter
inc
xor
negl
imul
jno
call
out
lret
inc
xchg
cs
nop
mov
cld
sub
and
mov
or
pop
cmpsb
adc
dec
pushw
dec
push
mov
dec
mov
fxtract
mov
negl
mov
orb
rclb
pop
pop
inc
sbb
sub
mov
vmread
xor
inc
in
inc
repnz
jae
push
fstps
sahf
int
jmp
ret
scas
jmp
add
fistpll
fmull
pop
pop
out
adc
aam
insb
add
sti
inc
int3
jb
xchg
pop
pop
inc
push
jecxz
sub
push
sahf
cmp
sbb
and
outsb
xor
or
lahf
dec
mov
clc
in
loop
test
inc
or
jnp
add
call
xchg
jecxz
movsb
lahf
or
loopne
cld
xorb
jae
sub
fistl
fsubrs
pop
loop
xor
and
loope
sub
pop
loope
inc
ret
stos
in
pop
lock
popf
add
and
mov
pop
std
sub
cmc
jmp
arpl
xor
insb
test
out
jle
dec
mov
aad
int3
daa
jno
sbb
add
inc
adc
insl
iret
call
push
inc
bound
and
mov
push
add
movsl
adc
jb
mov
add
add
jb
lods
mov
inc
lds
insb
sub
dec
arpl
aad
test
jbe
xchg
or
or
pusha
inc
pop
cmc
addr16
adc
fisubl
xor
or
dec
fiaddl
test
jge
fdivl
cmp
push
pop
push
xor
test
js
test
xchg
std
cwtl
mov
xchg
call
jae
sub
sub
cwtl
ja
sub
sahf
idivb
cld
stc
and
push
aaa
mov
sub
test
lahf
nop
sbb
or
lea
sub
and
cld
scas
pushf
mov
fcomps
adc
and
loop
mov
mov
fsubl
mov
sub
out
or
cmpsl
insl
mov
xchg
loopne
pop
pop
rolb
push
loopne
add
adc
xchg
movsb
loopne
mov
les
xchg
loop
sub
pop
out
enter
loop
test
pop
pop
pusha
loopne
jb
push
in
dec
mov
das
lock
push
in
add
mov
into
add
inc
lds
dec
inc
data16
sbb
lcall
add
sub
popa
sahf
inc
aas
pop
jbe
out
adc
stos
mov
in
iret
negl
fists
mov
rcrl
and
adc
out
jb
xor
or
out
out
pop
loop
inc
push
and
pop
nop
cmp
push
sub
das
cli
push
fwait
stos
inc
lret
mov
fcoms
sbb
push
xchg
pop
sti
jns
dec
push
iret
xor
hlt
sbb
inc
lea
mov
into
adc
sub
pop
into
inc
lret
xchg
xor
repz
pop
scas
inc
mov
mov
ret
inc
add
push
ja
dec
out
movsb
mov
inc
andl
fs
ret
sub
or
ljmp
iret
or
jno
popf
fstl
div
cmp
clc
in
lret
movsb
pusha
mov
cmp
jno
cs
in
pushf
dec
mov
popf
cmp
movsb
test
or
cmp
out
sub
popf
jnp
or
bound
and
xor
cmpsl
mull
lcall
jnp
pop
cmp
mov
pop
out
jg
cltd
xor
jmp
enter
and
xor
fsubrl
loop
push
cmc
dec
pop
lret
jno
jecxz
in
imul
cmp
cmp
repz
xor
mov
lcall
mov
outsl
shl
mov
outsl
inc
repz
push
insb
inc
pop
orl
in
xor
inc
xchg
sbb
sub
mov
sbb
sub
cmpsl
aaa
mov
movb
cmp
push
mov
pop
pop
ror
push
popf
sub
jns
mov
push
xor
xchg
outsb
daa
dec
pop
popf
test
out
das
orw
cmp
cmpsl
loope
mov
cmp
xchg
sub
mov
inc
or
jns
cwtl
inc
roll
xor
out
lret
xchg
sahf
mov
ss
xor
or
mov
cmp
mov
shll
inc
sbb
pop
dec
or
add
mov
sub
sbbl
ja
mov
loope
enter
mov
vpshlb
mov
popf
xchg
dec
jl
fadds
fldt
adc
xchg
adc
roll
insl
lcall
pop
xor
inc
lods
ret
push
push
lret
in
popf
les
mov
mov
lahf
dec
and
pop
push
mov
shlb
decl
loopne
xor
push
jae
or
test
xor
xchg
xchg
fs
add
es
xchg
nop
cld
mov
or
push
cmp
je,pt
mov
mov
rorb
mov
hlt
mov
imul
dec
mov
ds
xchg
cmp
mov
pop
mov
sub
cmp
push
jp
mov
xor
orl
call
ret
fcmove
mov
push
aaa
cld
mov
cmp
scas
ss
arpl
push
xor
in
call
fldt
movsb
push
popa
into
or
adcl
jl
in
test
sub
sahf
nop
outsb
shrl
lret
or
out
sub
imul
jp
lods
jne
out
inc
sbb
scas
adc
mov
sbb
imul
mov
pushf
les
xor
rorl
in
pushf
push
dec
cmpsb
out
xor
in
xchg
fnstcw
xchg
scas
fdivl
xchg
dec
xor
pop
mov
xchg
icebp
in
xchg
ret
cmc
mov
es
pusha
lcall
and
push
jle
pushf
fildl
mov
pop
adcl
cmp
jno
cli
std
sbb
pop
push
rcl
loope
mov
test
out
insl
push
pusha
ret
cmp
bound
cltd
add
mov
xchg
cmp
loopne
movsb
add
shll
insb
jp
test
or
mov
fcompp
icebp
pop
xor
or
jae
pop
mov
mov
aam
les
pop
lret
pop
rolb
adc
inc
add
jl
jp
aaa
pop
test
and
pop
xlat
or
lods
movsb
push
pusha
test
stos
adc
adc
pusha
out
mov
repz
mov
mov
add
rcrl
xlat
aam
cmpb
in
movsb
ss
cld
imul
adc
repnz
mov
fidivs
cmp
inc
mov
jns
bound
ror
data16
adc
lea
sbb
xchg
pop
test
jns
cmp
fidivrl
pop
pop
leave
lds
rcl
mov
xchg
test
mov
sub
fistps
sub
xchg
xchg
cmp
lret
xchg
outsb
arpl
jl
scas
and
dec
cmp
fs
pop
lea
xchg
jns
sub
or
into
icebp
int
cwtl
gs
imul
aaa
push
push
mov
sahf
or
sub
cmp
push
test
dec
adc
das
xor
xchg
stc
xor
dec
cmp
je
xor
popf
cs
lods
aaa
pop
xchg
xor
sub
dec
xor
push
mov
mov
fsubrs
icebp
or
push
mov
adc
loope
push
sti
cmp
sub
jle
je
fnstenv
add
inc
out
aad
jg
sub
cli
in
fldcw
lods
fsubl
call
into
in
mov
pusha
add
test
cmpsb
jns
lcall
lcall
cmpb
mov
cltd
inc
pop
jmp
mov
into
sub
or
sar
aad
lods
xor
movsl
jno
and
movsb
push
add
es
imul
int3
push
sbb
xor
test
andl
sub
or
mov
cmp
mov
rcll
fldcw
dec
ret
fsts
lahf
pop
fildl
repnz
jns
arpl
cmp
mov
lret
into
dec
leave
and
rcr
stos
popa
jbe
stos
and
imul
and
icebp
sarb
outsb
pop
fnsave
cmc
inc
insb
xor
xchg
mov
pop
lds
ret
fsubrl
cmp
setne
dec
pushf
je
aas
les
aas
stos
xchg
shll
mov
subl
jmp
mov
mov
cmpsb
jbe
inc
mull
divb
cmp
lds
push
jmp
pop
or
or
xor
dec
sub
push
int
sar
sbb
sub
push
add
or
mov
shll
mov
enter
pop
jmp
sbb
lret
mov
or
inc
push
jge
lret
mov
pop
cmp
int
jge
mov
dec
lahf
ret
push
mov
cltd
out
dec
movsb
data16
dec
mov
hlt
ja
popf
test
fiadds
or
in
lcall
es
mov
mov
cmpsb
inc
fdivrl
and
std
sub
dec
sbb
data16
fldt
lcall
inc
xchg
clc
sbb
and
xchg
push
and
fisttps
pop
mov
fsubl
sub
imulb
js
mov
cmp
xchg
cs
daa
push
adc
inc
out
imul
aad
cmc
das
rcll
imul
pop
notb
inc
das
jne
es
ret
adc
sub
shl
dec
sbb
mull
inc
decl
add
addb
outsl
jbe
push
cltd
jge
insl
push
cmp
lock
cmpsb
sarb
scas
xor
inc
mov
xchg
repnz
xor
lret
pushw
push
call
imul
inc
pop
sbb
inc
loope
or
jp
out
sub
aas
push
loope
insb
lock
cwtl
ror
xchg
sub
jnp
dec
mov
jmp
leave
mov
jge
cwtl
adc
mov
clc
push
clc
adc
push
fwait
sub
mov
in
loop
pop
scas
shll
iret
or
faddl
imul
popa
cmp
adc
enter
movsl
rcl
jae
and
clc
subl
test
in
jecxz
xchg
lods
mov
add
mov
cmc
pop
dec
inc
push
scas
jecxz
and
adc
pop
ljmp
xchg
sub
loope
ds
in
mov
jge
scas
cmp
ja
outsb
iret
mov
mov
out
dec
call
mov
mov
fs
mov
imul
fidivl
test
imul
daa
gs
adc
cmp
clc
dec
daa
sub
imull
shlb
lret
adc
or
loope
into
dec
out
add
jecxz
aas
xchg
jae
imul
aad
and
push
lcall
popa
subb
xchg
lods
cmpsb
shrb
xchg
and
mov
dec
outsb
movsl
adc
or
xchg
jmp
iret
gs
push
jne
out
inc
push
fstpl
jo
and
cmp
daa
outsb
pop
inc
cmp
mov
imul
jle
movsl
cmp
mov
push
sarl
xchg
sbb
dec
mov
inc
and
push
scas
jecxz
pusha
incl
xchg
cli
dec
push
in
aas
fsubr
inc
push
cmpsl
cmc
mov
or
test
sbb
and
cli
sbb
ret
add
jns
mov
lods
mov
insb
jne
sbbl
in
adc
xchg
cmp
xchg
jl
add
push
xchg
lods
filds
pushf
and
outsb
sub
sbb
ja
filds
nop
push
jae
cmpsb
xor
sub
int
mov
xchg
stc
testb
fidivrs
mov
mov
and
xor
call
repz
incl
fucomi
cmc
ja
insb
jbe
mov
sti
mov
cld
mov
enter
or
fs
rclb
sbb
dec
mov
xchg
xor
xchg
fs
pushf
repz
ss
push
sbb
ljmp
jg
cmp
adc
inc
jl
adc
mov
push
mov
and
test
xor
addl
aam
sbb
sbb
addb
mov
dec
test
and
sub
mov
hlt
mov
and
xor
or
out
sbb
adc
roll
pop
sti
aam
arpl
enter
lret
dec
loope
subl
lea
cmc
dec
push
and
sarl
adc
pop
mov
repz
das
jmp
cmp
out
icebp
sarl
sbb
repnz
push
dec
repz
inc
or
out
pop
pop
adc
jl
loopne
test
lea
shll
and
les
mov
stos
adc
dec
lret
add
fwait
mov
mov
mov
das
mov
adc
jle
fidivs
mov
xchg
loopne
jl
jmp
cmpsb
aaa
sub
imul
dec
xchg
fwait
cli
or
mov
mov
mov
mov
push
sbb
enter
cmp
mov
mov
movsl
lret
push
or
enter
pop
pop
das
es
dec
jmp
push
mov
test
or
adc
lods
dec
add
mov
sti
lcall
adc
ficoms
xchg
mov
add
jo
out
dec
into
aaa
sub
push
dec
ss
push
mov
xchg
repnz
xor
stc
aam
or
or
cltd
scas
xchg
sete
andb
adc
pop
imul
enter
adc
clc
je
push
aas
sti
test
adc
enter
push
mov
nop
push
push
fidivl
outsl
sti
mov
cmpsb
adc
mov
jl
das
cmp
jp
js
pop
cmpsb
xor
lods
sbb
test
dec
push
in
and
mov
push
adc
aas
popf
cmpsl
mov
loopne
mov
cmp
cmpsl
popf
push
cmp
push
add
push
push
mov
push
mov
adc
scas
mov
inc
pop
les
into
jae
test
mov
xor
mov
cmp
nop
stc
jne
outsb
xchg
or
sarb
push
push
lret
test
in
xchg
add
dec
test
xor
lret
adc
xlat
mov
sub
dec
fistps
scas
outsb
dec
cmp
int3
cmp
or
cmp
fdivs
jae
cwtl
call
push
fisttps
ljmp
inc
out
cmpsl
sub
inc
out
test
cwtl
xor
hlt
pushf
add
jne
fcoms
ss
dec
jle
jo
popa
insl
aas
jbe
mov
mov
mov
je
ret
iret
mulb
ficompl
lock
ret
cli
gs
int3
mov
cmp
xchg
push
and
xchg
lahf
imul
cmc
cmpb
jno
mov
sbb
addr16
mov
and
cmpsl
ret
jp
in
sub
dec
adc
ficompl
in
mov
inc
pop
cltd
leave
pop
cld
out
jge
testl
arpl
push
aaa
lea
mov
ja
fdivp
sub
add
pop
jbe,pt
or
sbb
ljmp
push
xchg
and
jecxz
ret
mov
adc
cmpsl
das
das
mov
mov
aaa
xchg
movsl
fidivs
out
jns
loope
push
loope
dec
roll
push
int
mov
cmp
ficomps
xor
push
call
mov
mov
mov
jns
cmp
test
imul
sahf
aad
fidivl
mov
sbb
add
jecxz
insb
adc
jmp
sbb
into
pusha
test
icebp
fcoms
cmpsl
xchg
mov
insl
or
add
dec
inc
test
pop
inc
jl
lret
xor
out
rolb
aas
jbe
mov
inc
adc
and
sahf
mov
insl
fsubl
stos
jo
sbb
pushl
out
movsb
pop
popf
fcomps
add
mov
xor
sub
enter
mov
mov
xchg
xchg
jecxz
fidivrs
ss
les
fiaddl
inc
xor
xor
mov
in
dec
dec
cli
ss
pop
jge
fcomp
leave
sbb
outsb
xor
xlat
or
shlb
cld
jae
xor
out
jnp
jb
das
aas
std
push
into
mov
inc
sbbl
or
insb
int3
cmpsb
test
gs
pop
xlat
or
mov
ss
cltd
lock
shlb
negl
test
subl
jp
lods
movsb
mov
xchg
cmp
int
jae
fnclex
mov
inc
popf
jb
loope
push
pop
mov
sub
lcall
xchg
adc
es
nop
mov
adc
jns
or
sub
xor
leave
pop
adc
vxorps
loop
insl
sub
cli
sub
push
leave
aam
hlt
pop
dec
pop
adc
out
sub
insb
or
pop
xchg
mov
dec
or
loopne
loope
cwtl
inc
jnp,pt
add
into
xchg
inc
mov
arpl
sahf
and
popf
insb
pop
pop
jnp
xchg
imulb
out
mov
imul
jbe
scas
aam
add
mov
mov
dec
mov
cmp
adc
dec
sarb
cs
stc
scas
push
dec
call
idivl
jmp
lret
rcll
jnp
insl
jle
mov
sbb
xchg
movsb
push
or
cmpsl
inc
xchg
push
stos
xlat
push
out
and
cmpsl
lods
push
in
fs
push
repz
mov
push
dec
sub
lods
inc
fstp
lock
in
sbbl
jp
or
inc
add
push
mov
mov
cwtl
lods
xor
cli
clc
push
xchg
pop
xchg
cld
push
ljmp
or
and
or
inc
jnp
pop
jge
leave
jle
push
insl
notl
adc
xor
pop
inc
adc
push
shr
nop
push
sub
pusha
in
xor
sarl
insl
lods
and
cmp
jbe
sbb
adc
ljmp
push
cmpsb
sti
les
fistps
sbb
in
add
fs
int3
cmp
inc
jg
mov
add
mov
clc
fbstp
or
push
cmc
push
divl
push
cmp
push
repnz
aam
xchg
inc
sub
js
cltd
push
push
ja
sub
ja
push
fwait
popf
pop
jne
lret
or
sahf
mov
fwait
aas
fwait
and
fimuls
sub
xchg
imull
mov
aas
push
sub
add
jne
cld
mov
fstp
rolb
or
test
jbe
xchg
scas
jne
add
in
xor
int
jbe
jno
ds
or
clc
shlb
cmp
pop
sahf
cmp
es
inc
fisubl
aam
pop
mov
test
xchg
cmp
mov
adc
ss
imul
xchg
pushf
xchg
popf
lcall
add
or
int3
loope
push
int
xchg
insb
mov
in
scas
push
push
sub
ja
jg
std
loope
sbb
iret
fnsave
aas
pop
mov
push
mov
pushf
xchg
lods
rcrb
push
jmp
sahf
outsb
outsl
cli
das
ficomps
and
out
mov
int3
xor
jmp
cmp
adc
xchg
pop
xchg
out
out
sub
lods
or
aas
mov
sbb
inc
inc
sbb
mov
fwait
jo
insl
inc
lret
aad
add
stos
mov
pop
xlat
imulb
push
adc
dec
rol
data16
jmp
sbb
daa
adc
pop
adc
xchg
dec
fcomi
les
imul
clc
lret
ds
push
test
jg
std
gs
pop
sub
or
arpl
add
clc
mov
and
je
mov
test
sbb
test
jae
stc
fisttpll
xchg
js
xchg
add
pop
fs
lea
lret
out
repz
xchg
ja
push
xchg
cmp
xchg
mov
aas
or
rcrb
test
mov
sbb
dec
mov
push
sbbl
push
pop
popf
add
inc
jno
mov
mov
sub
pusha
and
dec
and
pop
addr16
icebp
xor
sarl
out
or
test
dec
lods
ret
pop
fisubrl
les
xchg
or
pop
icebp
xchg
outsl
mov
sti
popf
adc
add
inc
loope
and
lret
lret
adc
hlt
fdivs
dec
popf
addr16
xchg
mov
xchg
or
xor
adc
jb
cmc
fimuls
jb
add
adc
mov
fbld
dec
stc
mov
ret
lea
fs
mov
aad
jnp
sbb
sbb
dec
mov
pop
xor
popf
aam
mov
sub
sbb
mov
or
and
test
aam
push
push
pop
pop
inc
sbb
flds
cltd
xchg
scas
sub
movsb
and
mov
pop
int3
push
fildl
into
fildll
jo
insl
test
testb
fs
mov
insb
lea
cmp
add
ds
mov
cli
test
ret
nop
ret
jl
outsl
cmpsb
add
enter
dec
xchg
cmp
pushf
jb
or
xchg
loopne
cmp
sbb
jne
rcrb
in
in
hlt
hlt
loop
mov
test
popa
mov
subl
loope
fisttps
insb
lds
movsl
out
and
xor
xlat
loopne
insb
or
xchg
mov
xlat
mov
das
rcll
jecxz
xor
push
xchg
test
into
mov
cmp
inc
hlt
stos
nop
mov
push
fildll
sub
call
xchg
lods
mov
enter
jmp
jb
call
adc
sbb
je
aas
inc
insl
jb
adc
aaa
add
das
fiadds
mov
jg
cmp
scas
std
xor
mov
outsb
jno
insl
add
mov
adc
inc
add
cs
ret
enter
mov
and
dec
mov
mov
je
mov
rorb
xor
addr16
add
lret
mov
call
in
sub
incb
rorl
outsl
hlt
mov
xor
dec
movsb
add
push
jp
xchg
mov
xor
dec
mov
push
or
fwait
ds
outsb
lods
jge
push
add
mov
and
push
loopne
mov
imul
scas
inc
loop
jge
dec
rcrb
sub
rorb
test
jge
aaa
enter
clc
xchg
movsb
cmp
mov
xor
fmull
dec
jns
jle
push
xor
stos
pop
dec
test
pop
bnd
inc
ret
mov
pop
movsl
sbb
adc
add
adc
xchg
cmp
push
lds
sub
xor
nop
xor
mov
sbb
add
mov
jge
stos
jp
out
jbe
incb
loopne
dec
push
popf
push
mull
dec
dec
pushf
add
cmp
pop
notl
inc
and
mov
push
inc
ret
mov
imul
incl
mov
stos
sbb
mov
popf
and
shr
push
loopne
mov
clc
cmpsl
add
scas
loop
cmc
inc
adc
vaddss
mov
push
mov
sbb
movsl
jne
fnstenv
fnstcw
ret
cwtl
mov
sbb
sbb
dec
xor
repnz
sub
pop
add
mov
cltd
xor
push
out
sub
pop
rcrb
ljmp
and
arpl
gs
into
push
push
movsb
test
sub
pop
jne
stos
xlat
lods
popa
in
adc
xor
lods
xchg
aam
jnp
xchg
jnp
jmp
outsl
dec
jle
cmp
mov
push
xchg
sub
mov
cmc
in
jg
push
ljmp
jo
sub
fsubs
xchg
loopne
fnstsw
and
out
repz
jmp
or
push
sub
mov
jnp
sbb
push
jo
inc
sub
dec
jl
mov
dec
pop
mull
push
jne
sarb
out
push
setle
shll
jae
sbb
lock
loop
mov
rclb
pop
or
loop
push
mov
test
cmp
in
xor
pop
mov
xchg
repz
ds
cld
and
cmp
f2xm1
adc
and
es
and
add
ss
mov
fbstp
xor
out
jae
jl
daa
pop
mov
pusha
scas
dec
sub
pop
xchg
shlb
mov
fimuls
rcr
adc
ljmp
push
cwtl
mov
cli
adc
mov
dec
mov
xor
mov
stos
not
loope
inc
hlt
test
sub
lahf
loope
outsb
jl,pt
inc
cmp
loope
aaa
xchg
dec
or
mov
xchg
sub
or
inc
sub
mov
xchg
shll
jge
lea
lea
mov
pop
lret
push
icebp
lock
lock
xor
enter
mov
test
mov
push
jns
addr16
imul
xchg
sti
pop
add
mov
cmp
push
icebp
movsl
adc
stc
inc
jge
pop
pop
sub
pop
cmp
in
mulb
mov
fwait
xchg
add
add
or
jbe
mov
sbb
push
in
sbb
sahf
outsl
push
push
scas
imul
mov
jbe
fnstsw
mov
pop
shlb
sarb
sarl
into
mov
jno
cld
lea
inc
or
add
lods
sbb
mov
mov
cmp
cmp
push
mov
ja
aam
inc
jnp
ja
xchg
mov
leave
je
xchg
in
xchg
jg
sbb
notrack
and
in
dec
add
sub
in
cmp
mov
aas
jl
mov
nop
add
cmp
push
mov
sbbl
imul
ss
lods
mov
xchg
or
jecxz
add
roll
jbe
sbb
cmpsl
sbb
mov
fucomp
inc
cmpsb
call
into
das
jl
pop
inc
mov
in
mov
rcl
cmp
cmp
in
imul
push
test
push
jp
xchg
dec
cmp
mov
push
jg
mov
imul
push
jb
adc
sti
adc
sbb
or
sti
cltd
add
bound
push
push
out
movsl
mov
add
subl
ss
mov
mov
shll
out
pop
push
int3
cli
sub
sub
cmp
aaa
jmp
mov
orl
iret
test
and
cmp
rcrb
sub
sub
jne
push
mov
mov
daa
pop
mov
lcall
lcall
or
pop
mov
add
repz
divl
sbb
sub
stos
lret
mov
sbb
ljmp
sahf
mov
or
mov
push
or
and
dec
bound
cmp
sub
shrl
stos
jno
add
xchg
aaa
mov
add
pop
add
rolb
add
repnz
outsb
mov
je
push
dec
iret
inc
cmp
stos
test
sahf
fstps
cmc
mov
inc
test
mov
test
sub
pop
or
cmpsl
lds
jb
mov
call
test
mov
mov
inc
repnz
inc
add
push
cmpps
repnz
inc
adc
insl
push
jns
sbb
ret
call
ja
dec
sbb
sahf
repnz
loope
add
outsl
xor
and
stos
mov
and
cli
cmpsb
mov
xchg
out
pop
fidivrs
push
pushf
int
test
daa
lret
dec
and
test
dec
sbb
sub
cli
insb
jbe
or
mov
jg
addr16
sbb
adcb
test
pop
cli
dec
mov
mov
mov
pop
mov
or
mov
in
dec
lds
in
push
jg
add
lret
stos
in
fdiv
out
or
shll
ret
mov
scas
push
movsl
jmp
cmp
mulb
xlat
cs
sbb
xchg
sar
and
sbb
adc
xor
xchg
add
sbb
mov
push
daa
mov
xor
loope
push
jecxz
mov
loop
xchg
rcll
clc
cwtl
dec
lret
mov
cmova
jle
loopne
lock
pop
fcmovne
pop
movsl
push
aam
and
add
shrl
fwait
lods
movsl
or
xor
mov
jae
lahf
cmp
mov
pop
jno
ss
dec
mov
add
into
cmc
out
scas
or
cmp
xchg
fdiv
dec
int
cmp
or
mov
mov
test
cmp
bound
rclb
adc
roll
inc
add
cmpsl
fcoms
mov
sub
sti
mov
seta
pushf
cli
fisubs
add
jle
add
push
ja
push
mov
mov
test
pop
xchg
xchg
in
jnp
xor
fwait
lcall
fs
xor
hlt
in
or
out
inc
jge
jle
mov
cmc
xor
es
lret
fiadds
mov
aad
out
gs
insb
fidivl
out
dec
sbb
mov
dec
or
mov
das
jp
lret
add
cmp
test
xchg
call
stc
push
jno
call
popa
faddl
sbb
dec
jnp
mov
test
pavgb
jne
push
jae
in
mov
sahf
jbe
pop
shl
or
rolb
mov
flds
or
xchg
bound
add
push
outsl
std
push
movsl
cmc
or
xchg
loop
xchg
xchg
aas
sub
push
adc
and
pop
add
mull
fsubr
xchg
aad
ljmp
in
dec
push
stos
cltd
push
int3
cs
rcr
cmp
ja
mov
test
outsl
bound
mov
xchg
sbb
sarl
sub
arpl
push
push
lret
dec
dec
in
lods
movsl
mov
movsb
jmp
mov
jge
and
shll
xchg
in
mov
jg
push
pop
jecxz
fidivs
pop
xchg
dec
test
outsl
cmp
mov
int3
dec
sbb
and
jnp
aad
loopne
jmp
pop
rol
adc
jecxz
cmc
fwait
popf
daa
por
sbb
arpl
cmp
and
adcb
loope
repnz
addr16
insl
xor
sub
sub
dec
stos
lds
and
or
fwait
mov
outsl
cmp
lock
out
sub
inc
das
pop
pop
call
in
mov
in
fsubl
adc
jo
or
int
adc
pop
mov
and
mov
sub
mov
lods
dec
mov
xor
imul
push
insb
and
dec
and
push
pop
mov
out
adc
imul
fsts
cmp
js
sub
and
mov
outsb
aad
outsb
int3
repz
ja
mov
jp
les
and
mov
mov
sbb
cmpsb
ret
mov
movsl
cmp
push
add
pushf
pop
mov
inc
pop
mov
pop
inc
cmc
xor
jmp
fidivl
add
repnz
sti
jmp
test
test
pop
mov
lods
out
inc
das
add
pop
pop
add
in
dec
out
mov
mov
mov
fwait
je
hlt
stos
adc
stos
mov
daa
ret
pop
adc
jo
add
cmp
add
rcrb
filds
mov
inc
add
in
imul
pop
aaa
sbb
sbb
xor
and
dec
stos
cld
pusha
mov
cltd
pop
sub
repz
je
sub
cmp
repnz
mov
popf
adc
mov
mov
iret
push
inc
push
jg
scas
dec
stc
pushf
ss
and
push
les
xlat
adc
mov
repnz
imul
mov
fmull
and
imul
das
and
insb
aaa
arpl
xchg
into
push
fcmovne
mov
lods
orb
lahf
xor
push
lea
mov
cmc
jp
scas
loop
mov
pop
cmp
pop
and
mov
loopne
fs
andb
mov
mov
xlat
push
add
adc
call
sub
and
stos
orb
and
jmp
xor
pop
cmp
or
xchg
loope
sbb
iret
mov
pop
mov
pop
lods
cmc
ret
cli
lods
out
arpl
ss
shrl
cmp
xchg
xlat
mov
pop
pop
sub
adc
inc
sbb
add
mov
mov
ret
push
push
lods
lret
push
cmp
push
andb
adc
sub
xchg
mov
inc
jne
scas
xchg
or
add
adc
or
and
pop
ljmp
mov
jp
sti
jno
sub
add
adc
sub
cmp
cmp
dec
arpl
inc
ja
xor
xor
cmp
push
or
cmp
and
xor
xor
adc
repz
ss
mov
and
pop
jge
sub
sub
jbe
sahf
mov
jnp,pn
bound
fsubp
stc
mov
push
mov
lods
or
pop
stc
pop
dec
icebp
push
loopne
negl
leave
adc
mov
cmp
int
add
test
push
bound
lds
xchg
dec
pop
scas
int
test
lcall
stos
ret
dec
lahf
cli
inc
jmp
loope
add
out
pop
adc
jbe
inc
testl
adc
in
cmpsl
fisubs
inc
movsb
mov
das
insl
or
mov
js
sub
pop
xchg
int3
pop
aaa
lock
dec
mov
scas
or
jge
std
or
loop
iret
jno
push
lock
jne
popf
repz
mov
fstl
and
mov
mov
int3
into
mov
mov
cwtl
inc
cld
or
outsl
jno
rcll
jbe
imul
repnz
lock
mov
mov
push
ret
jnp
xlat
fwait
mov
mov
adc
cmp
push
pushf
push
sub
ss
rcr
jecxz
test
dec
cmp
lods
push
test
lock
lock
filds
scas
push
dec
adc
adc
xor
xchg
push
pop
in
sbb
cmp
dec
sbb
mov
loop
dec
fcompl
sarl
xchg
jbe
cmp
add
rdpmc
enter
jmp
dec
or
mov
andb
fcos
jns
popl
or
insb
inc
dec
insb
mov
pop
nop
dec
je
cmp
ja
sub
addr16
lock
pop
shl
cmp
push
js
movsb
cmp
jne
adc
shll
cmpsb
add
xlat
push
leave
mov
inc
fldl2t
popf
sbb
dec
mov
inc
xor
inc
mov
inc
imull
rcl
daa
les
repnz
les
and
mov
adc
push
notl
or
jo
lods
add
cs
adc
rol
lock
sub
ds
or
jne
lea
jg
ja
jmp
sub
xchg
aam
dec
mov
push
dec
mov
ss
dec
loop
fistpl
sbb
sbb
sub
pop
lret
or
sbb
divl
cmp
dec
inc
pop
pop
mov
cmpl
aas
mov
les
in
hlt
fdiv
mov
mov
push
fwait
testl
inc
pop
inc
xor
pop
xchg
xor
lcall
pop
inc
movsb
clc
iret
xchg
dec
jno
push
ret
stos
pop
mov
ficompl
ljmp
in
jb
mov
inc
repz
iret
icebp
jecxz
loope
mov
stc
fldt
dec
inc
cmp
and
xchg
movsb
pop
cmp
inc
adc
nop
pop
sbb
das
pop
addl
imul
mov
push
push
sbb
jno
outsb
xchg
nop
arpl
int
out
jg
mov
das
hlt
mov
jnp
sbbb
pop
mov
into
arpl
bound
sti
out
fistpl
push
jns
fs
cs
inc
sub
popf
cwtl
or
out
jp
movsl
sbb
xor
idivl
test
mov
add
and
das
xchg
out
sbb
divb
add
movb
pop
in
push
fiadds
jns
data16
and
shlb
shll
arpl
jo
jle
je
out
cld
jb
leave
and
inc
shlb
sbb
add
rcr
xor
in
fiadds
je
push
out
leave
ret
xchg
call
stos
aam
aas
sub
aad
into
in
cmc
inc
lock
xor
popf
jmp
insl
ja
mov
push
mov
lahf
stos
mov
pop
imul
mov
cmp
iret
lods
jmp
fstps
add
mov
rorl
xorb
push
in
fwait
push
pusha
test
xchg
imul
mov
jbe
push
mov
push
push
das
ljmp
shlb
mov
shlb
cmc
fsubrs
sbb
enter
iret
bound
mov
ret
and
xchg
mov
popa
jecxz
sub
loop
sub
fcoml
xchg
push
mov
cltd
or
nop
lds
lret
mov
xchg
xchg
lret
pop
andl
mov
out
insl
outsl
iret
jp
cmp
insl
mov
inc
mov
jne
cli
ljmp
push
fadds
mov
mov
add
pop
iret
mov
xor
popf
adc
xchg
adc
pusha
mov
icebp
inc
xor
add
es
and
fdiv
mov
icebp
cli
imul
lcall
mov
int
es
ret
xor
push
cmpb
mov
push
and
xchg
fmull
jo,pt
jnp
leave
aad
leave
add
or
int
vpsllw
and
test
ja
rclb
fldenv
mov
xchg
jns
jnp
repnz
scas
jmp
cld
lods
sub
pop
clc
xchg
adc
push
inc
pop
int3
pop
enter
xlat
fldenv
push
mov
mov
dec
loopne
js
icebp
adc
xor
jp
cwtl
jl
xchg
repnz
lods
cmp
test
int3
push
shll
or
fdivrl
jg
outsb
pop
insb
shll
cmp
push
inc
call
dec
pop
fisttpll
inc
out
mov
std
je
push
jecxz
sti
jo
fwait
xchg
popf
pop
mov
mov
cli
sub
mov
lds
call
cwtl
lds
outsl
fldcw
or
pop
data16
popa
imul
jno
sub
ret
mov
xor
add
mull
dec
inc
jne
pop
fs
mov
cmp
inc
in
scas
jnp
jecxz
jge
lret
mov
push
lea
push
adc
push
popf
add
movb
xchg
pop
int
cli
hlt
sbb
ss
pop
xor
cld
cli
in
xchg
xchg
cmpsb
inc
stc
xchg
fisttps
out
loopne
cs
mov
mov
sub
xor
dec
xlat
test
movsb
repnz
lcall
outsl
addr16
sub
sbb
and
jge
xor
pop
std
jecxz
pop
lcall
inc
imul
xchg
int
inc
mov
sahf
pushf
flds
in
xchg
cld
push
pop
cmp
cmp
xchg
repz
sahf
xchg
pop
sbb
movsb
mov
cs
cmp
pushw
xchg
loop
inc
inc
iret
jne
mov
outsb
stos
lret
fmull
dec
sbb
lret
mov
test
stc
imul
jg
jle
repnz
mov
movl
scas
mov
sub
decb
ja
js
outsb
inc
pusha
pop
mov
push
mov
push
xchg
ss
movsl
cmp
pop
sarb
aas
add
mov
or
pusha
or
mov
sar
outsl
add
jl
xchg
pop
jp
gs
pop
gs
outsl
xchg
mov
or
sub
hlt
xchg
xor
jne
mov
pop
pop
add
loopne
popa
mov
mov
icebp
mov
pop
xchg
sbb
flds
ja
fdivl
push
popl
lods
or
ret
scas
push
add
icebp
inc
int
js
xor
in
pop
mov
sbb
mov
ret
sub
iret
leave
inc
xlat
mov
xchg
pop
dec
pusha
insl
jbe
xchg
frstor
in
fyl2xp1
pop
xchg
sbb
mov
pop
dec
xchg
xchg
pop
int3
lahf
pop
pop
xchg
cmp
in
mov
xchg
inc
lcall
jle
in
test
addr16
repnz
std
xor
in
sar
orl
into
pushf
sbb
hlt
dec
testb
dec
cmp
fbld
lret
nop
pushf
insl
dec
lods
fcoms
bound
daa
or
leave
loop
pop
jecxz
mov
pushf
int
orb
cwtl
ret
lock
xchg
pop
pop
int
sbb
repz
loop
push
push
adc
js
aam
dec
sbbb
test
ljmp
sahf
das
push
lcall
mov
nop
ret
xchg
add
stos
pop
add
mov
sub
jb
test
pop
nop
scas
push
xchg
movsl
cs
addr16
std
xlat
sahf
cmp
movsb
cltd
jge
repz
mov
into
xor
inc
out
js
sbb
testl
aas
fcomps
add
add
mov
cmp
sub
stos
mov
stc
cmp
repz
sti
int3
pop
dec
push
cmovno
popa
push
pop
jns
aam
pop
add
lds
jns
push
push
adc
roll
add
push
sbb
stc
sbb
mov
movb
xchg
fcomp
pusha
loop
jnp
pop
pop
sub
hlt
in
jo
dec
push
mov
and
pop
jmp
pop
out
add
das
mov
xchg
jle
mov
fcoml
jge
sub
or
cmp
jl
mov
xorb
mov
cwtl
std
xchg
push
push
sub
xlat
mov
mov
jns
inc
insb
subb
dec
movsb
jle
cltd
cltd
push
fisubrs
push
pusha
sti
or
adc
xor
and
pop
pop
ret
in
and
in
push
pop
clc
xor
out
data16
sahf
cmpsl
adc
xchg
daa
xchg
xor
lea
fistl
mov
outsl
xchg
jle
jg
testb
movsl
enter
jbe
aas
das
inc
je
or
or
push
mov
fdivl
push
mov
jo
cmp
into
xor
arpl
lahf
stos
mov
jmp
sti
in
outsb
fsubl
jle
popa
mov
ljmp
and
or
fld
aad
insl
loop
andl
pop
jecxz
mov
out
xor
mov
es
icebp
sub
hlt
and
jbe
push
lret
inc
push
add
jae
cmp
inc
ss
rolb
shll
es
jnp
shr
clc
popa
not
int3
adc
fmuls
dec
imul
pop
cwtl
scas
mov
adc
sbb
xchg
push
mov
pusha
aas
mov
jmp
sahf
jmp
mov
flds
popf
mov
push
pop
fstpl
lea
in
sbb
std
les
ss
pop
fwait
jns
mov
adc
pop
loope
outsb
fucom
cltd
fsts
pop
or
push
aam
pop
adcl
cli
ret
xchg
xchg
aas
push
fnsave
test
fadds
mov
xchg
xchg
pop
out
pop
or
inc
xchg
popf
cmc
imull
cs
fdiv
dec
dec
mov
mov
jne
jbe
fsubs
mov
pop
or
add
sub
push
ss
cmc
cmp
add
fildll
cmpsl
cmc
popf
jp
loopne
stc
aad
xchg
inc
cmp
mov
mov
mov
inc
mov
xchg
popa
adc
int
testl
pop
mov
nop
push
pop
push
push
popa
into
jo
testl
mov
and
push
mov
mov
mov
or
fwait
xchg
jl
lret
pop
adc
fsts
xor
cwtl
aad
and
es
insl
cmp
mov
int3
mov
dec
stos
sbb
insl
lds
mov
jnp
arpl
jecxz
leave
xchg
iret
xor
cmp
xchg
cmp
aam
jne
xchg
call
aad
lock
lcall
jle
jns
idivl
mov
mov
pop
mov
sbb
cmp
and
nop
orl
or
push
push
test
movsl
fldl
daa
adc
or
lcall
jge
out
ficoml
mov
out
ret
inc
nop
loop
and
push
out
mov
aam
mov
clc
into
movsb
dec
mov
sub
scas
add
cld
testl
movsb
lret
imul
push
clc
stc
adc
cli
adc
inc
adc
popl
jge
fstpl
push
imul
add
push
jmp
insb
xchg
add
das
cld
movsl
out
pop
in
hlt
xchg
and
insb
dec
inc
test
xorb
cmp
and
fdivrp
orl
mov
mov
lret
dec
out
or
dec
ret
int
xchg
movsb
out
test
inc
lock
lods
jecxz
andb
jg
jecxz
mov
shl
bound
jae
movsb
scas
loope
inc
mov
mov
push
test
dec
fabs
add
push
aaa
mov
inc
inc
mov
out
lahf
rorb
sti
cmc
xor
push
push
or
xchg
loope
cmpsb
push
movsl
pusha
iret
inc
aam
inc
outsl
pop
and
add
dec
inc
push
push
addr16
outsb
cs
mov
xchg
imul
and
fcmovbe
sub
rcl
data16
and
dec
or
cmp
sbb
fidivrl
push
mov
dec
cmp
jae
ret
mov
popf
sbb
or
and
adc
jns
ljmp
stos
adc
dec
mov
inc
cs
or
leave
scas
mov
jo
mov
push
and
cmc
aam
in
lods
jmp
xchg
mov
push
sarl
or
fcmovb
out
test
movsl
add
push
sti
cmc
or
mov
sarl
pop
cmpsl
mov
jo
fcomps
les
mov
sti
es
out
aaa
dec
add
sub
xchg
mov
cvtdq2ps
xor
mov
jbe
mov
push
jmp
js
jb
in
stos
lock
scas
sub
and
insb
sbb
lods
and
ss
dec
mov
loope
cmpb
mov
aas
xchg
push
adc
and
inc
sarl
loop
or
sbb
outsl
jb
movsb
pop
leave
cli
lcall
push
xor
jno
dec
sbb
insb
dec
out
jmp
inc
jl
jo
push
clc
pusha
in
sbb
movsb
cmp
iret
dec
mov
cs
scas
xlat
fucomi
xlat
pusha
sti
sbb
xchg
or
arpl
xor
or
push
pop
adc
push
mov
test
mov
inc
fildl
pop
stc
mov
ficomps
push
push
xchg
sub
cmc
mov
cmp
jne
dec
mov
lock
and
fucomip
or
repz
mov
jo
icebp
mov
mov
ret
sub
sbb
imul
int3
mov
sub
mov
nop
std
pop
pop
lahf
jg
shll
fiadds
enter
mov
jnp
clc
or
scas
clc
cmp
jns
fmull
mov
call
pusha
shlb
or
sub
add
pop
popf
mov
add
and
sbb
lret
insb
outsl
sbb
testb
jb
rorl
adc
or
push
add
fs
xchg
orb
shrl
jmp
sub
int3
mov
je
xchg
xlat
mov
jnp
inc
jmp
mov
outsb
adc
adc
cmp
inc
jns
mov
sti
daa
clc
std
xor
movsl
loope
inc
dec
out
pop
mov
popa
test
in
mov
pop
out
leave
aaa
scas
rorb
push
outsb
push
iret
cs
xor
aaa
sub
mov
mov
mov
shrl
jnp
inc
xchg
stos
cmp
adc
pop
cmp
adc
es
pop
pop
rcl
push
dec
adc
sbb
jne
lahf
aaa
xchg
stc
push
cmpb
fldcw
push
or
testb
rolb
adc
sbbb
das
out
ss
inc
and
cmp
out
pop
adc
jle
push
cmpsl
mov
sbb
addr16
add
lods
dec
js
or
adc
mov
and
test
flds
sahf
mov
xchg
outsb
and
inc
cmpsb
push
jecxz
pop
cmp
add
fadds
pop
pushf
bound
inc
daa
add
jno
push
pop
fwait
ljmp
jb
adc
push
dec
pop
inc
push
mov
add
dec
xor
punpckhbw
enter
insl
pop
mov
clc
xchg
pop
mov
lock
loope
in
sti
aas
imul
cmpl
cmp
scas
mov
jmp
jmp
je
fdivrp
dec
lret
inc
js
nop
mov
test
outsl
sbbl
jbe
lods
xchg
inc
sbb
sub
bound
test
in
out
inc
mov
inc
fsts
aas
push
test
idivl
jbe
cwtl
or
inc
or
push
mov
fimuls
mov
dec
pop
pop
fcompp
push
mov
jno
pmovmskb
cmp
cmp
add
test
sbbl
push
mov
outsb
cmpsb
or
lods
hlt
xchg
pushf
jnp
fldl
outsl
in
arpl
sub
xchg
dec
mov
shll
loop
mov
mov
mov
inc
test
jl
repnz
jmp
xchg
jge
gs
nop
jb
ljmp
adc
sbb
bound
add
push
cwtl
push
or
fbld
imul
cs
sub
pop
in
daa
add
enter
mov
pop
inc
mov
repnz
pop
lcall
push
call
mov
in
out
fimuls
fwait
xchg
mulb
push
fbstp
lds
pop
xchg
mov
push
out
xchg
mov
mov
nop
fwait
stc
incb
adc
dec
mov
data16
cmpsb
cmpsb
in
push
mov
jl
loop
pushf
push
int3
rcrl
inc
stos
or
adc
mov
jl
cmp
inc
mov
ret
jg
fs
shl
or
push
mov
push
test
cmp
je
dec
shll
add
mov
ret
inc
sub
xlat
adc
pop
push
out
pop
lock
sub
xor
je
mov
bound
sbb
or
inc
mov
aad
daa
push
adc
jne
les
pop
repnz
mov
xor
cmpsl
loop
sub
xor
mov
xchg
clc
pop
dec
mov
mov
add
and
in
je
lret
in
cmp
ret
sbb
mov
sbb
std
sar
mov
int
cmp
outsl
xor
add
jl
out
pop
and
enter
in
mov
xchg
inc
sub
sbb
mov
pop
sti
add
inc
mov
aad
lahf
daa
mov
nop
inc
jmp
int
sub
sbb
loop
mov
sbb
mov
jge
mov
pop
aas
add
xor
subb
mov
dec
add
sahf
jbe
out
outsl
out
testb
pop
lret
or
sub
clc
test
addb
decb
stos
mov
dec
or
loopne
xlat
inc
push
loope
andl
pop
jge
rcrb
dec
push
dec
sbb
or
inc
loopne
and
mov
push
mov
mov
inc
stos
jb
adc
fisubrs
adc
testl
adc
out
sub
test
xchg
sbb
lahf
jb
dec
mov
jge
test
ss
mov
ds
lock
sbb
out
lahf
mov
ds
rcrb
movsl
push
push
pop
inc
dec
and
dec
jae
pop
sbb
mov
cmp
std
or
das
shll
lock
xchg
pop
inc
fisttpll
leave
es
pop
outsl
xchg
sti
or
inc
mov
pop
xor
pop
addr16
cmp
adc
arpl
test
mov
cwtl
test
jecxz
pushf
push
fwait
fwait
and
sub
daa
inc
mov
cs
ja
sti
sbb
inc
jg
aas
xchg
pushf
or
adc
movsl
cmpsb
push
faddp
pop
jle
push
icebp
movsb
mov
test
push
ss
cmpsl
mov
fistl
test
jns
sbb
or
out
in
rcrl
xchg
push
jl
cmpb
imul
test
enter
ja
mov
xor
iret
lea
mov
mov
fisttps
notb
jg
lret
add
fwait
or
dec
mov
mov
jg
outsl
lock
out
inc
hlt
or
int3
popf
subl
movsb
inc
subl
mov
sbb
inc
sub
and
lcall
std
ret
aam
shll
sub
mov
sbb
je
lahf
pop
test
lahf
xor
iret
push
add
add
push
rcll
icebp
jg
pop
xchg
dec
mov
arpl
jecxz
or
jnp
insl
xor
push
inc
dec
fadds
add
add
cltd
add
mov
insl
dec
mov
mov
outsb
pop
in
insl
mov
cltd
sbb
mov
sahf
insb
fwait
es
stc
scas
fdivl
cltd
mov
into
call
insb
pushf
ds
pushl
imul
mov
mov
test
mov
hlt
test
lds
out
and
cmp
inc
ror
out
push
mov
in
pop
jp
stos
mov
or
mov
jg
dec
pop
test
daa
or
bswap
cmpl
mov
xchg
daa
and
or
dec
sarb
ja
xchg
add
dec
insb
mov
jae
in
push
ror
iret
pop
dec
aas
nop
mov
xchg
insb
dec
clc
loope
aad
push
mov
add
leave
sbb
mov
pop
sub
data16
mov
fdivs
aad
pop
jp
je
leave
sub
sti
xor
push
ret
cmpsl
xor
xchg
xchg
adc
scas
aaa
lods
add
jmp
sub
push
movsl
cmc
dec
test
fwait
sar
imul
lret
test
inc
add
rcll
lcall
mov
shrb
bound
sub
pop
add
inc
sbb
fs
cli
testl
das
ret
in
lods
push
sub
mov
add
jg
adc
mov
call
js
sbb
or
popa
mov
fcompl
pop
adc
out
or
fstps
das
rorl
lods
jmp
in
mov
out
xchg
mov
mov
mov
int
sti
cmc
arpl
adcb
iret
fnstenv
and
fldenv
scas
mov
add
jo
cmp
pop
adc
sub
push
adc
jne
and
fbld
inc
pop
loop
fsts
cmc
fwait
cltd
lods
xor
test
cmp
adc
pop
push
mov
enter
mov
jmp
mov
shlb
aam
sbb
mov
xor
xchg
or
sbb
jecxz
jnp
or
mov
std
adc
gs
jp
fstpl
push
adcl
inc
lcall
adc
xor
lret
pop
testb
cld
sahf
dec
faddp
lret
cmc
push
das
rorl
xchg
repz
jns
shr
dec
jle
mov
mov
adc
in
int3
repz
jae
daa
test
sahf
and
mov
lock
rorb
dec
int
arpl
arpl
dec
out
insl
rorl
loopne
xchg
lahf
xlat
pop
loop
dec
xor
sub
push
movl
xor
and
dec
pop
scas
push
orl
push
fisttps
push
insl
repnz
out
in
aad
sbb
pop
vmovups
add
pop
mov
pop
adc
jmp
les
out
es
sub
xor
lcall
dec
cmp
jae
imul
ds
sub
pop
das
ror
mov
and
mov
jo
fistl
xchg
data16
js
pop
pop
mov
test
jmp
mov
mov
lahf
in
mov
push
xchg
lock
into
nop
int3
out
dec
out
cmc
jns
xchg
iret
arpl
adc
movsl
in
loopne
xchg
xchg
pop
fidivrs
shll
and
inc
fiadds
sub
mov
cmp
pop
mov
fcmovbe
insb
jl
inc
loope
fcomps
inc
in
ret
xor
shl
and
push
into
xchg
push
sbb
sti
pop
icebp
and
inc
popf
addl
adc
aam
mov
ror
jp
ljmp
xor
fildl
jnp
cmp
jae
jns
xchg
rol
aad
mov
loopne
cwtl
jge
mov
lcall
xor
gs
jbe
fmuls
in
cmp
xor
cmp
xchg
data16
int
repnz
xchg
pop
xor
cli
cmp
sub
in
inc
dec
fidivrl
mov
pop
adc
xor
fiaddl
cli
dec
push
or
lds
ja
rcrl
int3
inc
inc
addr16
mov
fcomp
xchg
pop
fsub
adc
sbb
loopne
std
mov
enter
pop
sub
mov
push
jmp
jge
mov
jnp
test
enter
out
jns
pop
lds
mov
in
les
ret
inc
cmp
xchg
xchg
inc
push
add
jle
push
inc
or
mov
xchg
add
lret
enter
fidivl
dec
mov
stos
lcall
pop
test
stc
xor
pop
leave
pop
cmc
pop
push
and
cmp
nop
leave
mov
sbb
mov
aam
sub
and
lods
fisubl
jns
stos
xor
enter
int3
movsb
mov
mov
xchg
fistpl
fimull
and
or
daa
and
xchg
pushf
dec
jmp
xor
bound
push
out
jge
ljmp
notb
ds
outsl
movsb
cmc
mov
dec
pop
repz
mov
test
mov
and
lea
dec
hlt
pop
dec
pushf
loopne
popf
xchg
or
repnz
or
inc
dec
and
es
xadd
push
cmp
movb
inc
test
test
fmull
jle
cmpsb
js
sub
jmp
pop
push
orb
dec
sub
test
xor
dec
dec
and
jne
iret
shr
daa
fidivrl
jp
mov
sbb
cmp
fwait
lret
rcr
or
pop
jne
aad
pop
add
fsqrt
mov
push
adc
in
dec
ja
outsl
and
mov
cmpsl
pop
lods
arpl
frstor
mov
pop
lcall
aad
xor
addb
popa
mov
jecxz
mov
jmp
push
jp
mull
orb
and
xchg
xchg
sub
testb
imul
arpl
xchg
orb
bound
or
out
insl
xchg
and
xchg
les
icebp
adc
ljmp
aad
int3
sbb
push
int3
call
inc
ret
pop
iret
and
mov
jl
sarl
add
scas
shl
out
lock
jns
adc
fisubl
mov
fdivrl
fisubrs
dec
ret
lret
jae
int
mov
sahf
and
mov
fwait
lret
and
fadds
lret
int3
mov
fcomps
mov
test
rcrb
add
jb
je
sarl
and
inc
cmpsb
outsb
or
push
sbb
aaa
mov
push
push
int
bound
jl
nop
fstpt
jno
imul
adc
xor
and
movsb
ja
jecxz
sbb
add
dec
cwtl
cmp
in
repnz
jecxz
cmpsl
mov
or
out
pop
ja
add
outsl
sub
pop
sbb
push
xchg
sbb
adcb
jge
test
fwait
imul
mov
or
inc
sub
in
stos
in
and
mov
add
jl
rorb
pop
jg
lea
mov
pop
lret
js
into
cmp
pop
cld
inc
xchg
out
cltd
cmp
xchg
xor
mov
jae
sbb
sub
xchg
scas
int
jb
adc
test
insl
outsb
push
sar
mov
inc
ja
sbb
out
fsubl
push
inc
dec
xchg
push
push
imul
lcall
lret
or
xchg
ja
dec
mov
xor
sub
aaa
movsl
in
jecxz
cli
outsl
mov
inc
sbb
mov
push
push
jl
push
inc
jb
mov
or
fwait
push
pop
jmp
xchg
adc
or
sti
jmp
lock
jg
sysenter
test
push
inc
jne
xchg
sub
adc
xor
push
lcall
out
adc
jnp
mov
inc
andb
fwait
mov
jle
ss
and
cltd
jb
stos
jecxz
jae
mov
test
adc
add
xchg
je
pushf
stos
imul
mov
dec
icebp
clc
sub
push
push
dec
sbb
data16
jbe
mov
add
jb
sub
or
lret
push
cwtl
fnsave
mov
and
fwait
mov
into
dec
pop
dec
dec
mov
insl
testl
es
stos
rep
enter
lock
iret
and
pop
dec
aas
sbb
cmp
aas
enter
pop
xor
repnz
mov
mov
and
pop
fdivs
arpl
inc
sub
mov
outsb
pop
lret
repnz
dec
push
mov
pop
pop
sub
sbb
xchg
cltd
gs
lea
jne
mov
int3
push
test
sbb
mov
test
push
jnp
icebp
pop
xchg
dec
int3
enter
xor
in
ret
mov
jmp
out
adcb
mov
dec
xchg
lods
push
jmp
xchg
jmp
out
push
aaa
cmpsl
sbb
idivb
mov
sub
int
and
jo
stos
push
shll
lods
mov
ss
pop
fmull
or
call
mov
xchg
cli
fidivrs
adc
jl
mov
mov
or
xlat
sub
xchg
mov
lods
push
sub
fnstsw
incl
jo
inc
adc
int
or
daa
sbb
jg
popf
cli
xchg
mov
jnp
imul
mov
lret
jne
es
loope
push
gs
jge
mov
dec
cmp
bound
pop
ljmp
lcall
jb
test
imul
xlat
loope
xor
ds
shlb
test
dec
ja
xchg
mov
out
das
pop
hlt
xchg
cld
movsl
jl
mov
pop
mov
imulb
mov
xchg
mov
xchg
or
adc
out
push
add
leave
cwtl
lods
push
clc
sub
jl
rol
cs
pop
dec
push
mov
repnz
lock
mov
fbld
sbb
mov
push
inc
cmp
push
xorl
jo
popf
mov
rolb
in
lock
cmp
cli
push
cmpsl
rorb
cmpsb
inc
sbb
push
sahf
mov
imul
ret
pop
test
push
adc
ljmp
cmp
inc
sbb
fstpt
in
gs
push
aaa
cs
fisubs
mov
insl
inc
xor
and
push
jecxz
in
fdivr
mov
inc
xchg
cltd
scas
dec
mov
xor
jns
mov
sarl
inc
ret
inc
pop
nop
test
insl
add
out
lds
jnp
add
inc
out
mov
xchg
hlt
xchg
shlb
pushf
or
es
lret
pop
mov
mov
fsubl
cmp
roll
push
jecxz
add
insl
int3
mov
fwait
loop
pop
ret
dec
inc
cmp
lret
jae
jo
sub
xor
cmp
cwtl
dec
mov
xor
xchg
lods
sbb
jg
xchg
push
jbe
cmp
fs
pusha
xchg
pop
jmp
leave
imul
int
cmpsb
or
in
cld
jmp
xor
repz
test
fstps
and
xchg
lock
cmp
sbb
pusha
sbb
push
jnp
or
push
jle
pop
loop
out
lock
mov
cmp
xchg
xlat
repz
rolb
mov
icebp
fdivs
mov
xchg
xchg
test
sbb
pop
rcll
adc
and
inc
jnp
dec
adc
and
or
pop
cmc
das
cmp
sub
jmp
add
in
scas
out
imul
cld
aam
mov
pusha
in
jmp
sbb
es
fnstenv
push
mov
mov
push
fnstsw
ret
cmpsl
jns
xchg
jle
xor
xor
and
cmp
push
jno
rol
in
push
std
add
sub
pop
repz
xor
xor
or
jmp
js
or
ret
arpl
jne
orl
popa
mov
or
dec
inc
rolb
jecxz
fisttpll
scas
or
les
les
orb
xchg
pop
adc
sub
call
push
aam
pop
ljmp
dec
lret
sbb
inc
push
imul
and
jle
push
and
fisttpl
inc
stos
clc
in
mov
cmc
dec
outsl
loop
add
daa
mov
hlt
bound
js
push
in
outsb
arpl
mov
adc
adc
mov
mov
fwait
call
push
mov
mov
cmpsl
imul
lock
icebp
dec
das
add
stc
xchg
stc
fistpl
sub
dec
sbb
push
mov
fstpt
fcmovbe
push
add
pop
gs
arpl
div
mov
xchg
stc
ds
test
out
adc
mov
aam
sbb
addr16
fmuls
loope
pusha
dec
pop
push
adc
xchg
sub
sbb
lcall
in
stos
xor
mov
ljmp
les
sbb
scas
pushf
add
sbb
jne
nop
push
xor
sbb
push
xor
out
mov
push
fists
jo
scas
xchg
push
movsl
xor
imul
dec
cwtl
inc
dec
shr
add
and
jg
lahf
jb
xor
outsl
sbb
dec
pop
sti
xchg
rcrl
mov
and
mov
add
xchg
mov
push
xor
mov
imul
mov
xchg
sbb
cli
xor
sub
aaa
inc
or
xchg
shlb
jp
out
jecxz
cmc
popf
xchg
out
decb
jecxz
and
loop
adc
push
push
push
mov
mov
jnp
les
adc
or
repnz
mov
sbb
repz
lock
aad
ror
jbe
std
or
movl
push
jbe
rcrb
adc
dec
mov
mov
sahf
adc
and
shlb
inc
lcall
jg
mov
pop
sbb
add
loopne
arpl
dec
aad
mov
add
bound
fdivrl
mov
add
hlt
mov
add
and
fidivl
scas
rcr
popa
iret
pushf
mov
imul
sbb
mov
stos
xor
or
dec
xchg
ss
shr
jecxz
ret
mov
mov
push
mov
ret
lea
mov
daa
dec
test
mov
orl
shlb
jp
enter
sub
dec
insb
push
xchg
rclb
insb
inc
outsb
out
add
jno
loop
insl
scas
insl
mov
jle
out
jnp
mov
mov
pop
xchg
mov
pop
sbb
sub
lea
sub
inc
push
push
xor
loop
mov
and
cli
in
jecxz
push
cwtl
pop
jl
inc
orl
jo
orb
adc
add
jl
loope
pop
dec
popf
iret
jge
lcall
jge
cli
outsb
jg
cwtl
in
in
jmp
imul
rcrl
push
or
mov
jae
lret
stc
mov
fiaddl
aam
cmp
jge
pop
cmp
je
data16
pop
xlat
sub
scas
stos
scas
lcall
idivl
dec
mov
sbb
inc
pop
pop
add
add
outsb
imul
out
mov
jle
loopne
xor
or
loope
xchg
jae
xchg
and
enter
sub
mov
mov
insb
aam
je
pop
pop
les
jecxz
je
mov
fwait
aad
pushf
xchg
push
daa
or
addr16
or
scas
sbb
stc
mov
mov
out
call
in
rcr
dec
dec
loope
or
mov
push
add
mul
fistpll
push
xor
xchg
mov
std
insl
sub
dec
cmp
repz
sub
loope
insl
mov
adc
push
daa
pop
fadd
in
or
jae
push
mov
mov
repnz
push
mov
inc
push
mov
sahf
std
ja
pop
dec
fiadds
out
test
leave
mov
std
jae
imul
loopne
mov
mov
mov
bound
mov
loope
adc
and
data16
cltd
out
inc
data16
ss
mov
dec
jmp
jbe
or
cmp
xacquire
dec
xor
mov
sub
sarb
mov
mov
lret
fdivp
mov
mov
outsb
fidivrs
sub
or
call
aam
or
dec
movsb
inc
mov
stos
mov
mov
mov
add
xchg
es
hlt
and
or
lret
cmpl
stc
in
hlt
push
cmp
stc
cmp
xor
mov
fimuls
push
popf
mov
pop
mov
add
scas
adc
pop
clc
mov
cli
cltd
xchg
push
mov
je
or
repz
cs
jmp
jp
testl
nop
xchg
or
mov
into
xor
jg
or
jmp
cmp
mov
das
cwtl
inc
push
cwtd
pop
shl
xchg
mov
mov
push
aas
movsb
inc
jle
xor
fs
outsl
js
paddq
fsub
jle
je
mov
or
lcall
outsl
das
jl
add
shl
adcb
add
sub
jl
mov
fidivl
lcall
daa
repnz
loopne
jmp
mov
sti
stos
pop
in
push
mov
add
movsl
pop
and
cmpsb
push
jge
push
stc
in
add
sub
dec
popa
insl
sbb
sbbl
je
mov
cmp
mov
sahf
loop
mov
sbbl
or
sti
mov
gs
stc
out
sub
imul
mov
loope
outsb
ds
setle
fsts
sbb
xchg
or
aad
inc
out
mov
pop
adc
or
xchg
sub
jae
addb
js
pop
call
cmp
jecxz
or
cmpsb
mov
outsl
mul
inc
sub
cmp
pop
movsb
movsb
aas
outsl
ret
dec
js
shrb
loope
out
jae
incl
sbb
into
insl
lahf
js
in
xchg
enter
cwtl
addr16
xchg
popf
pop
cld
loop
fstl
addl
jg
pushf
push
push
dec
fstpl
pop
xchg
loope
in
or
cmpsb
jecxz
addl
xchg
lcall
adc
bsr
les
sbb
lret
sbb
scas
xchg
xchg
dec
arpl
xchg
inc
mov
iret
jne
es
jecxz
inc
sbb
pop
xchg
lods
movsb
insb
push
push
insl
xlat
in
enter
scas
frstor
call
gs
loope
sub
bound
mov
cmp
push
mov
dec
mov
adc
and
sub
and
int3
or
xchg
stos
adc
movsb
fcmovb
mov
in
inc
push
adc
insl
and
and
and
popf
sarl
in
ss
or
cmp
hlt
xchg
clc
xor
sub
out
out
addr16
adcb
nop
shrl
pop
cmp
jle
insb
fcomps
jge
jl
into
sub
sbb
cwtl
shlb
pop
data16
pop
mov
outsb
rorl
rclb
andl
dec
cmpsb
mov
xchg
gs
aas
ret
cwtl
or
xor
pop
cmpsl
loop
jo
and
rcrb
add
jg
leave
lcall
mov
fidivs
or
mov
in
push
repnz
aaa
and
arpl
and
sbb
xorb
jmp
dec
gs
lods
xlat
mov
mov
jle
and
fimuls
enter
popa
aas
rol
das
sub
ret
ret
insb
push
subb
pushf
daa
adc
sarl
sbb
mov
mov
fdivrs
jl
scas
lock
fwait
xchg
neg
lods
xchg
repz
fucomi
lea
mov
sub
dec
ljmp
pop
hlt
sub
xchg
and
pop
movsl
fldt
inc
in
sub
arpl
xchg
mov
lcall
dec
add
out
add
out
call
ret
ja
ror
jge
insb
les
mov
xrelease
cwtl
sbb
or
adc
imul
hlt
aaa
inc
insl
mov
in
or
out
push
jb
arpl
ret
add
jecxz
mov
mov
sub
ljmp
cs
sar
int3
sbb
movsl
es
jo
mov
movsl
xchg
xchg
testb
adc
sub
pop
fisttpl
addr16
push
test
int
lods
mull
pop
or
rcl
push
fistl
jge
daa
mov
adc
and
sbb
imul
push
pop
fisttps
and
pop
fmuls
and
repnz
aad
mov
lahf
scas
sbb
push
push
out
test
in
shlb
and
insb
daa
inc
addr16
and
and
int3
call
lret
enter
loopne
es
adc
js
cmp
sbb
jne
or
aam
jns
or
mov
ret
and
stos
jg
into
adc
in
fistps
sar
addr16
incb
shll
fwait
xor
sbb
in
sbb
popa
cmp
xor
stos
add
jno
out
int3
stos
jo
scas
lds
xor
jl
sahf
fists
mov
inc
subb
test
mov
xor
nop
jae
push
inc
or
xchg
push
lret
lea
fwait
aaa
xor
imul
sub
pop
cmpsl
xrelease
and
dec
dec
lcall
and
ljmp
or
xchg
ret
js
ljmp
sub
inc
dec
pop
fs
jae
loopne
orl
sti
iret
jbe
leave
mov
inc
aas
fists
shl
clc
mov
popf
mov
or
scas
aad
inc
fcoml
int3
sbb
outsl
jnp
push
jle
lds
lock
in
inc
stos
xchg
push
xor
aam
cs
mov
sbb
lods
mov
xor
mov
nop
push
fbstp
or
push
cmc
mov
enter
inc
stos
sub
add
xchg
mov
cs
mov
jecxz
inc
push
push
inc
jmp
aas
in
iret
sbb
jp
cmp
lahf
inc
addb
idivb
sbbb
xchg
lret
pushl
push
sbbl
push
stc
add
fldcw
and
insb
push
stc
jecxz
sub
rcrb
popf
pop
cwtl
out
les
mov
mov
or
mov
jmp
mov
push
adc
add
mov
ror
sbb
inc
jnp
xchg
popa
sbb
popf
jnp
sub
or
inc
call
enter
jg
das
stc
test
loope
dec
imul
mov
stc
jnp
pop
dec
mull
les
mov
mov
mov
aad
stos
jmp
fcmovnb
jmp
ret
rorb
or
nop
gs
test
dec
sbb
mov
rcrb
fidivrs
xchg
push
pop
sub
mov
adc
das
cwtl
fadds
test
mov
scas
mov
stos
fidivrl
push
lahf
xor
sbbl
or
fnstenv
aaa
xchg
dec
and
xchg
pop
sbbb
stos
mov
test
dec
sub
ss
xlat
pusha
repz
movsl
aaa
push
sub
je
loope
mov
push
gs
and
in
daa
dec
mov
popf
sbb
or
push
aas
mov
jecxz
push
pop
mov
pop
dec
icebp
imul
or
push
call
push
jae
xorl
push
mov
mov
stc
shlb
lods
xor
or
icebp
mov
mov
or
arpl
or
wrmsr
das
js
xchg
pop
push
mov
out
pop
jge
ffree
lock
aam
arpl
adc
sbb
xor
mov
data16
pop
cmp
push
cltd
push
lock
ret
xchg
push
push
mov
clc
pop
mov
test
mov
cli
and
icebp
mov
lahf
cmp
out
jnp
add
cmpps
adc
or
insl
imulb
xor
mov
mov
sbb
add
imul
aaa
jl
inc
cltd
adc
cmpsb
iret
mov
mov
jge
lea
xor
push
xchg
and
dec
mov
test
pop
scas
mov
add
inc
jecxz
xchg
jo
cmp
pusha
mov
push
fdivp
mov
test
sbb
cmp
sub
arpl
mov
jb
mov
push
movsl
out
call
imul
es
ficoml
push
imul
dec
mov
loop
jo
sbb
jmp
pop
out
fdivrp
mov
and
push
mov
negb
jp
fnsave
lods
fmull
add
and
jae
in
insb
popaw
adc
adc
or
movsb
jbe
fidivl
adc
mulb
xchg
sbb
adc
ds
jmp
fdivl
ja
mov
into
mov
rorl
dec
into
adc
dec
pop
and
cmp
dec
dec
add
add
inc
mov
out
mov
jle
push
mov
xchg
scas
cmpsl
mov
rorb
cmpsb
xchg
movsb
or
cmp
jbe
push
call
push
add
xor
lret
test
dec
xchg
sbb
repz
jae
clc
imul
mulb
mov
dec
das
cmp
cwtl
js
inc
xchg
lret
inc
mov
xchg
clc
dec
mov
fcmovnb
mov
add
adc
xchg
orb
sbb
inc
push
mov
lahf
sub
dec
or
jl
mov
adc
push
jb
pop
jbe,pn
cmp
sub
icebp
sahf
std
sub
faddl
test
mov
mov
sbb
mov
inc
or
or
outsb
pop
ds
lahf
scas
or
aas
or
out
sbb
jae
test
dec
add
faddl
mov
push
movsb
sub
scas
jmp
xor
mov
xchg
mov
sbbl
push
loopne
adc
orb
pop
xchg
mov
sub
movsl
aad
xchg
or
xlat
into
or
sarl
popa
xchg
rcll
test
pop
jl
cmp
pop
add
dec
mov
sbb
jl
sbb
pop
adc
js
pop
xchg
xchg
adc
inc
test
dec
mov
lock
inc
scas
or
pop
mov
orl
ss
inc
insl
sub
cmp
int3
jp
adc
fisubl
lret
jge
nop
in
add
lods
mov
xchg
push
push
stos
adc
and
add
mov
sbb
enter
push
aaa
sub
popa
movsl
and
ja
cmp
push
xchg
ss
adc
cli
xor
pop
push
mov
sub
shlb
rcrl
sti
cmp
mov
xor
mov
clc
mov
xchg
jo
cwtl
roll
sti
cld
mov
and
test
sarl
mov
cmc
mov
insl
insl
and
adc
adcl
xor
mov
mov
push
xor
mov
clc
adc
xor
outsl
inc
ljmp
jmp
jbe
jbe
sbb
cs
jge
sub
and
or
popa
out
icebp
push
dec
pusha
pop
nop
or
and
iret
lods
int
pop
cltd
stos
in
or
lret
lcall
mov
sbb
fistl
cmpsl
loope
adcb
test
pop
aaa
pop
jl
xor
lea
push
xor
add
pusha
push
xor
inc
mov
mov
out
out
loope
ja
or
lods
sbb
cmpl
imul
cmp
mov
rcr
push
jmp
ja
xchg
inc
mov
push
out
adc
push
push
leave
and
stos
or
imul
shrl
inc
mov
adc
mov
or
add
xchg
mov
bound
in
jmp
out
ljmp
jl
inc
pop
mov
out
ret
dec
cmc
inc
sar
jnp
insb
push
sbb
or
and
pop
cmpsl
cmp
mov
lods
int3
and
add
cwtl
mov
and
add
scas
cmp
jmp
mov
push
movsb
lahf
xorl
mov
ffree
scas
xor
sbb
cmp
and
sahf
mov
in
fimull
sbb
mov
into
repz
into
outsl
mov
pop
mov
imul
add
ret
enter
dec
jne
cli
push
xor
pusha
adc
pop
dec
idivl
ss
ja
push
fnstsw
fwait
sub
cmp
add
adc
sbb
wrmsr
std
push
mov
xor
jo
stc
pop
pop
arpl
sbb
add
test
ds
mov
push
shll
xchg
mov
out
xor
or
xchg
sub
push
jge
scas
inc
xor
xor
subb
ret
mov
sbb
mov
xchg
fisubrl
movsb
mov
xchg
mov
std
in
dec
push
push
pop
iret
lock
dec
xchg
je
jnp
js
shll
mov
jecxz
jp
mov
push
push
or
addr16
lock
push
mov
or
daa
scas
fdiv
outsb
xchg
cs
das
rorl
jae
es
stc
bsf
fcomp
cmp
sbb
pop
fldcw
add
cli
mov
jg
test
mov
push
and
adcb
out
cmc
ss
sub
mov
cmpsl
jp
mov
pop
adc
cmpsb
push
add
and
loope
lods
dec
push
les
mov
popa
cmp
pop
lahf
mov
lcall
jb
ja
push
shlb
imul
push
hlt
int
addr16
push
xchg
xchg
out
adc
mov
shrb
movsl
jns
aad
cmc
lock
mov
mulb
roll
mov
cmovg
idivl
call
pop
lcall
xor
push
call
mov
pushl
notb
stos
mov
adc
out
jb
call
aaa
cmp
lret
xchg
and
xchg
inc
cmp
mov
push
dec
in
xor
or
je
ds
mov
insb
arpl
repnz
imulb
sbb
jo
jae
inc
mov
mov
mov
ss
stos
mov
inc
mov
sub
out
cmpb
outsl
xchg
cmp
jbe
bound
adc
pop
inc
iret
jp
dec
pop
out
and
sub
popa
jp
stc
ja
xchg
dec
repz
leave
xor
insb
add
pop
fildll
fcmovnu
inc
and
int
mov
cmp
inc
xor
movb
push
mov
outsb
adc
sarb
mov
int3
repnz
cmpsb
out
mov
adc
xor
mov
das
push
imul
orl
push
stos
cwtl
dec
iret
and
and
jg
rclb
mov
daa
fsts
xor
mov
jl
adc
inc
imul
insl
outsb
into
add
icebp
mov
cmp
lea
fsub
icebp
movsb
cmpsb
push
int3
pop
scas
cmp
xlat
int3
sbb
hlt
arpl
lods
dec
in
pop
ja
lret
js
sbb
rorb
jns
dec
add
int
ret
xorb
pop
mov
xchg
stos
inc
cmp
sub
dec
push
pop
cmc
mov
lods
and
scas
mov
or
xchg
push
andl
jae
outsb
lret
inc
cs
dec
aas
pop
mov
popf
fisttpl
fldt
shr
scas
int3
sahf
jge
test
push
movsb
mov
mov
add
push
fsubrl
jp
iret
and
cmp
out
dec
movsl
dec
movsl
das
jno
dec
bound
in
hlt
les
and
mov
rcll
sbb
imul
jmp
repnz
inc
push
mov
aad
mov
mov
mov
mov
lods
xchg
out
xlat
mov
ljmp
ljmp
pop
push
xchg
jmp
in
fstpt
pop
les
adc
pop
jns
pop
lods
mov
xchg
in
or
out
sbb
push
push
mov
lods
js
xor
aaa
movsl
mov
stc
out
sbb
mov
mov
sub
mov
shll
fwait
movsl
jne
test
pop
adc
push
in
add
adc
mov
or
jg
mov
fs
or
sbbb
push
ss
inc
mov
dec
xor
or
jo
cmp
add
or
push
or
dec
outsb
sub
sti
daa
mov
push
int
pop
and
or
hlt
lock
mov
into
lahf
or
inc
xor
aad
rorl
or
lods
lods
orl
dec
inc
and
push
mov
cmc
jge
pusha
sub
cmp
mov
faddl
inc
pop
imul
bound
inc
jb
push
jb
dec
xor
movb
bound
pop
addr16
fimull
cmp
out
iret
loop
jb
mov
add
fwait
jo
gs
mov
scas
cmpsl
movsb
fmull
outsl
loope
pusha
xchg
int
or
mov
out
sbb
dec
into
xor
jge
movsb
ffreep
or
outsl
pop
xor
sub
jno
stos
imull
out
fwait
test
mov
lods
imul
pop
or
andl
sub
lret
cltd
adc
ret
and
lods
aad
and
pop
cmc
shl
adc
pop
scas
subl
mov
adc
test
pop
mov
outsl
aam
shrl
xor
mov
fnstsw
cmp
aad
outsl
es
les
lahf
lds
mov
aas
outsb
mov
out
std
pop
pop
inc
loopne
xchg
negb
mov
mov
fwait
out
inc
jg
rclb
or
sbb
push
jns
cs
mov
mov
add
cmc
xchg
stos
mov
adc
pop
mov
mov
pop
xchg
cli
cli
js
fnstsw
test
les
sbb
data16
cli
xor
inc
or
xor
rcr
inc
cld
xor
mov
enter
sbb
aas
cwtl
fildll
jge
test
out
lods
bound
dec
shr
scas
outsb
into
push
out
jecxz
fbld
cli
push
test
je
outsl
ja
bound
or
int
jle
imul
insl
scas
mov
inc
scas
mov
fldl
pusha
in
stos
call
inc
cmp
adc
enter
cs
dec
xor
xorl
sub
dec
lds
xor
cli
lods
jecxz
into
lahf
pop
data16
outsl
mov
dec
lcall
cmpsb
fcompl
in
sbb
aas
jno
xchg
call
cmp
insb
ret
shll
mov
jg
outsb
repnz
xor
out
add
or
sbb
pop
jb
add
stc
lcall
js
mov
cwtl
or
mov
or
add
jo
int3
aaa
jmp
push
or
pusha
fdivrs
or
into
mov
mov
sti
hlt
mov
mov
icebp
shlb
and
dec
inc
test
dec
xor
cmpsb
fsub
bnd
jnp
imul
jae,pt
icebp
insb
ljmp
mov
loop
dec
cmc
mov
add
or
in
mov
arpl
push
iret
aad
xor
out
lea
lods
mov
mov
push
dec
andl
test
test
js
add
leave
fcoms
int
das
repz
inc
cmp
imul
cs
inc
fisubrs
inc
adc
pop
hlt
jmp
std
mov
dec
mov
out
jle
fdivl
outsl
pop
mul
or
push
imul
arpl
push
div
dec
movsl
xor
mov
add
movsb
fsubrs
jnp
mov
cld
mov
es
xchg
fld
dec
jnp
and
pop
jg
cmp
bound
adc
xor
notb
cwtl
jle
push
mov
push
vpcmpgtb
cmp
imul
movsl
jno
pop
imul
mov
pop
jl
sub
rcrl
jle
into
dec
outsl
mov
xchg
inc
imul
aam
pop
fldenv
push
mov
lods
call
lcall
xor
out
sbb
out
cmpsb
jp
imul
cmp
ja
adc
push
mov
test
out
xchg
dec
xor
and
pop
cmpsb
mov
pushf
imul
leave
add
aam
cli
adc
mov
cmp
mov
cmp
ret
adc
jo
fisubl
jbe
cltd
push
mov
enter
mov
lods
leave
jb
ror
cli
mov
std
lret
jle
test
add
fcoml
jbe
cs
inc
fs
adc
insb
ret
loop
add
add
jbe
or
out
lahf
mov
jmp
test
sbbl
fldt
pop
sub
mov
mov
ror
rcll
insb
mov
dec
pop
ret
sbb
mov
fs
jno
rorl
add
cmc
cmp
loope
mov
leave
js
shll
nop
popf
sbb
cltd
mov
andb
fsubl
cmp
xchg
jecxz
cmp
sbb
jbe
xor
movsb
ss
push
sbb
scas
insb
add
cmp
sbb
aas
imul
in
mov
test
dec
loopne
shlb
xchg
call
pop
es
mov
sbb
cmp
xor
sub
or
popa
rorb
xor
mov
mov
in
inc
jp
sub
pop
popa
outsl
fdivrs
push
data16
test
xor
fdivrp
pop
dec
xchg
orw
scas
mov
xor
and
xor
adc
mov
add
xor
pop
repz
xchg
push
dec
mov
xchg
cld
adc
mov
cwtl
xchg
xor
xchg
sub
nop
cmp
mov
mov
lods
sub
jne
sbbl
ret
inc
ljmp
xchg
shl
jge
mov
add
add
scas
fisubs
inc
mov
jl
rclb
cmp
mov
test
js
arpl
push
xor
cmp
jmp
ret
lret
decb
lock
loopne
dec
sbb
cmp
xor
push
sub
jns
js
repz
and
cmp
fsts
pop
lods
cmp
add
push
adc
das
arpl
ljmp
push
adc
add
dec
mov
popf
fs
lret
jg
sub
sub
add
xchg
pop
in
xchg
xchg
hlt
stos
and
aam
adc
jp
inc
mov
mov
movsl
push
test
movl
sub
imul
sbb
lret
std
mov
and
in
cmp
dec
add
mov
fcompl
lcall
scas
jl
call
iret
xchg
int
sub
push
sbb
and
push
mov
push
pusha
push
mov
int
stos
jle
fs
out
scas
out
mov
je
xchg
scas
xchg
adc
lock
xchg
clc
lods
jmp
and
sbb
push
dec
inc
scas
add
adc
xor
jne
jae
pop
adc
sub
push
push
xchg
movl
jl
mov
jmp
cmc
cmp
in
or
mov
jnp
cmp
addr16
out
cs
pusha
int
sbb
inc
pushf
xor
lock
aam
fists
jo
jns
popa
xchg
inc
and
std
dec
fnstenv
jb
mov
adc
dec
pop
xor
jle
stos
inc
jmp
sahf
cld
xchg
add
add
pop
pusha
cld
push
mov
pop
xchg
imul
add
imul
and
sub
lahf
and
cmc
xchg
fsubs
push
mov
ss
lods
dec
into
mov
movl
push
xor
lods
das
adc
loopne
jle
out
pushl
jge
aad
in
jns
lret
xor
inc
pop
mov
scas
cwtl
xchg
push
negl
leave
pop
cltd
mov
xchg
pusha
sti
and
push
fcmove
or
popa
aad
mov
ljmp
scas
push
cmp
rolb
andl
pop
pop
cmp
xor
mov
cmp
xlat
xor
push
rcl
insb
hlt
cmp
jle
movsl
pop
lods
data16
loope
fs
lret
add
das
dec
out
arpl
sub
mov
adcl
mov
cmc
cld
pop
jg
mov
lahf
in
arpl
or
ffreep
sub
lock
fcmovnb
add
lcall
orl
imul
jg
dec
fucomp
add
mov
mov
xchg
or
scas
or
orl
pop
adc
int3
jmp
sub
mov
add
mov
dec
adc
mov
insl
jp
jbe
shl
cli
pop
mov
dec
je
popa
icebp
pop
push
sub
int3
sbb
aaa
das
nop
mov
mov
sti
cmp
bound
pop
ds
add
pop
jnp
cld
outsl
orb
pop
pop
clc
shl
sub
insb
icebp
fidivs
adc
clc
sub
mov
sbb
push
cmc
cmc
cmp
jo
out
mov
push
cmpl
outsb
in
mov
xchg
add
xchg
mov
jns
push
mov
cltd
fisubl
mov
popf
xchg
sahf
inc
shl
cmc
loop
dec
out
pop
mov
cmp
inc
jnp
ror
in
movsl
mov
adc
out
xchg
adc
adc
lods
dec
sub
adcl
mov
out
fcomp
stos
push
jle
pop
adc
mov
fdivr
add
popf
std
das
nop
xchg
out
stos
sub
push
fimull
push
pop
scas
jae
mov
sbb
push
ror
sub
mov
xchg
fsubrs
jmp
enter
push
fnstsw
add
mov
cli
or
adc
dec
addl
sbb
mov
mov
rcll
les
sub
leave
inc
xchg
adc
sbb
pop
mov
ja
pop
mov
sub
jbe
xchg
xlat
pop
cmc
push
call
js
leave
std
stos
ret
cmpb
cmpsl
mov
cs
mov
int3
outsl
lods
push
lahf
and
addr16
dec
ds
adc
mov
scas
nop
cltd
adc
in
insb
sahf
bound
push
ds
jp
pop
add
mov
cwtl
ss
mov
xor
pop
out
addr16
lret
aad
test
rcll
loope
outsb
shrb
push
add
movsl
nop
mov
sbb
test
in
mov
cmp
xor
xchg
xchg
and
mov
adc
push
imul
pop
push
lock
popa
loop
outsb
rcl
or
ss
das
sbb
div
and
inc
push
aam
addr16
pusha
les
sbb
sub
jne
movsb
outsl
dec
lods
mov
sbb
aaa
sbb
setg
or
outsl
add
jno
or
jae
xchg
xlat
mov
push
mov
jmp
jmp
cmp
cltd
inc
js
mov
das
stos
in
cs
or
rcrb
setp
cmpsb
push
inc
std
adc
idiv
xchg
cmp
movsl
outsl
ja
leave
cmp
cmc
jmp
push
mov
inc
dec
repz
xor
lock
pop
inc
stc
or
push
and
pop
sub
js
sbb
sbb
es
scas
and
jo
rorl
loop
and
cwtl
lods
sbbb
ret
mov
js
mov
xchg
pop
mov
mov
aas
test
test
rcr
fdivrl
popl
push
cwtl
daa
pop
inc
or
scas
jns
loope
mov
sub
test
xor
sbb
ror
cs
jno,pn
icebp
ret
aam
setae
push
xchg
push
fisubrl
stos
or
ja
idiv
or
mov
xchg
subl
sbb
popa
inc
xchg
inc
mov
mov
inc
in
mov
lods
jge
popf
and
mov
outsb
nop
daa
jb
and
cld
sbb
mov
dec
push
lahf
js
jb
test
out
mov
test
lods
out
mov
sub
loop
cmp
in
test
ficoms
push
repnz
int3
scas
jmp
sbbl
mov
outsl
jmp
movl
sbb
das
adc
mov
mov
add
push
std
adc
test
xchg
aaa
jae
sbb
repz
aam
movsb
xor
mov
push
mov
jo
dec
sbb
inc
adc
xchg
mov
sub
in
cmp
cltd
cs
xor
movb
mov
movsl
push
lret
pop
movsb
and
push
fisttps
repnz
jp
insb
xchg
dec
ret
and
push
fidivrs
mov
gs
ret
push
ret
mov
mov
dec
dec
jmp
or
sti
fisubl
or
dec
scas
lcall
daa
push
es
push
movsb
mov
pop
cmp
push
jno
pusha
pop
loopne
ret
jmp
mov
jae
popa
push
lcall
pop
or
mov
and
cmp
pop
cmp
cs
xchg
pop
mov
jle
bound
subb
scas
inc
sahf
cwtl
inc
jnp
ret
sub
fildll
lods
cmp
cltd
sub
sub
cmpsb
add
mov
jne
int3
mov
sub
leave
shll
inc
jg
sub
addb
repz
jmp
popf
imul
nop
xchg
and
test
scas
int
jno
sub
ss
adc
or
addl
bound
addr16
or
int
test
stos
lods
dec
sbb
nop
push
out
mov
adc
mov
sbb
pusha
jmp
sbb
adc
inc
xor
sub
pop
xchg
jnp
das
cmp
scas
dec
adcl
out
jbe
outsl
xchg
out
les
int3
inc
ds
jnp
cli
cli
add
iret
out
inc
ret
adc
xchg
xor
sti
sbb
fildl
stc
bound
fsts
xor
enter
mov
fnsave
imul
lret
jbe
nop
inc
sarl
or
mov
pop
mov
call
pop
add
cmp
lret
icebp
xor
xor
inc
lods
in
inc
mov
adc
fcomps
or
inc
fwait
test
dec
or
jae
sub
push
pop
mov
xor
cmp
pop
outsl
pop
test
add
pop
jge
sti
das
imul
sub
shr
sub
xchg
mov
call
rorl
sub
pushf
dec
jb
inc
fwait
mov
xchg
mov
cld
gs
or
cli
addl
jecxz
add
fwait
xrelease
lahf
pop
shlb
push
bound
insl
inc
aam
lods
dec
jl
inc
gs
push
lret
xchg
sbbl
mov
aaa
daa
jl
pushf
rcll
or
and
stos
out
dec
sub
jl
adc
mov
push
add
loop
sub
es
adc
addr16
xchg
hlt
adc
push
push
sub
mov
sub
jmp
in
xor
jg
mov
sub
xor
sbb
sbb
sbb
and
ljmp
jle
sub
call
jbe
xchg
lods
mov
push
test
dec
mov
ret
loopne
cmp
push
sahf
jle
or
rol
or
daa
bound
and
outsb
adcl
stos
inc
inc
jg
xchg
out
mov
mov
mov
stos
dec
lret
sub
push
xchg
fdivrp
adc
sarb
test
sbbl
jle
iret
mov
emms
mov
cmpsl
sahf
loopne
into
in
xor
xor
sub
sbb
stos
mov
imul
in
sub
mov
sub
adc
dec
pop
jbe
ja
scas
addr16
add
push
int3
pop
lods
or
adc
fwait
test
cmp
xchg
xor
in
add
sub
xchg
fwait
lret
inc
sbb
loopne
sbb
lock
dec
mov
lret
test
push
xchg
xor
or
jne
push
cwtl
mov
ret
mull
pop
mov
mov
repz
pusha
aas
sub
stos
shlb
fists
xchg
mov
into
mov
lret
jp
inc
push
ss
mov
decl
and
adc
jecxz
movsb
cld
insl
loope
sbb
pusha
pop
sbb
mov
dec
int3
cltd
mov
scas
lods
pop
xchg
sbb
pop
mov
cltd
sub
repnz
popf
xchg
pop
xchg
xor
ret
loop
add
pop
cmpl
scas
mov
push
pusha
xlat
cmpsb
outsb
in
push
call
test
rcll
and
or
divl
adc
cmpsb
cs
sbb
mov
out
dec
stos
movsl
aad
enter
cmp
inc
pop
sub
outsb
aaa
cmp
pop
out
push
repnz
jae
sbb
sub
lock
ljmp
dec
scas
or
mov
push
jmp
sub
cmc
fstpl
cmpl
cmp
lds
aad
inc
nop
jns
jns
lods
test
cmc
je
into
insb
fildll
or
fbld
pop
push
add
push
xor
xchg
cmp
lds
add
adc
enter
call
stc
cmc
cs
test
xor
cmp
cmp
std
repz
das
inc
push
adc
inc
aas
mov
and
repz
aaa
push
xor
pusha
cmp
cmp
inc
popa
sti
mov
lock
aam
fucomip
idivb
mov
into
pop
mov
mov
ret
mov
mov
mov
mov
jecxz
std
sub
fisttps
out
and
adc
ss
insb
gs
or
push
es
or
sar
ret
hlt
aas
ret
and
xchg
mov
dec
xor
and
imul
lock
arpl
in
or
mov
cmp
mov
cwtl
int3
adc
bound
test
jmp
jmp
mov
test
push
xlat
and
push
sbb
xor
jne
sbb
pop
movsl
lods
test
inc
addr16
or
lahf
stos
pop
orl
aad
imul
in
pop
adc
ljmp
jp
or
lret
clc
shll
lock
clc
push
cltd
pop
in
loopne
cmp
into
adc
mov
test
push
jnp
out
sbb
sbb
lods
sub
push
lods
shrb
dec
fimull
mov
xor
xchg
mov
cmpsl
adc
fs
sbb
mov
mov
mov
cwtl
jno
cmp
ja
lods
aam
inc
out
popf
pop
xchg
dec
loope
in
jne
sbb
push
pop
repz
enter
loope
cmpsl
mov
sub
scas
mov
imul
popf
add
fidivrl
push
mov
jecxz
xchg
pop
ret
test
sahf
push
and
int
test
cmp
and
sub
jb
mov
insl
dec
jnp
scas
cs
or
mov
xchg
in
xor
xchg
fdivp
lret
sub
ret
divl
outsb
lods
jb
movsl
xchg
pusha
pop
test
xlat
aas
inc
push
adc
data16
out
dec
pop
subl
cmpsl
cmp
dec
icebp
int
mov
lea
mov
mov
cs
sub
movsl
or
andl
movsb
fiadds
jns
jbe
sub
mul
inc
jb
jp
jo
mov
fisubs
rclb
or
dec
or
rol
rorb
xor
cs
insl
pop
pop
arpl
repnz
out
push
mov
fnsave
push
mov
jge
ljmp
xor
mov
jg
jl
in
xchg
sub
filds
adc
bound
cltd
mov
fcoms
int3
movsb
mov
dec
rclb
scas
repz
js
xor
push
inc
test
popa
rol
mov
loope
cwtl
pushf
jmp
dec
insb
mov
mov
push
xor
inc
mov
jle
imul
cwtl
cmp
add
fnstcw
into
pop
xchg
rcrb
frstor
shll
cmpsl
dec
into
inc
pop
pop
mov
fsts
leave
loope
call
jb
xor
in
subb
jmp
mov
repnz
xchg
loop
adc
aas
out
jl
out
sarl
jle
adc
inc
sbb
loopne
je
call
push
jbe
jnp
mov
pushf
xor
sbb
popa
loopne
sub
and
adc
popa
mov
dec
push
inc
fmulp
roll
jno
jnp
cmpsb
icebp
loope
ret
mov
mov
push
mov
cmp
dec
add
insl
shlb
leave
jmp
xor
and
or
pop
dec
repnz
mov
mov
sbb
mov
lea
inc
mov
and
iret
daa
mov
mov
sbb
sti
push
dec
pop
sti
xor
sub
inc
and
sbb
call
push
int3
and
int3
xchg
scas
and
mov
xlat
xchg
push
xchg
push
popf
jmp
out
and
lret
inc
pushf
movsb
aas
mov
jne
dec
inc
cwtl
insb
scas
mov
inc
mov
je,pn
sub
test
adc
sahf
lcall
mov
and
inc
jl
jecxz
iret
jg
test
neg
or
dec
push
mov
fildl
movl
fldt
das
leave
mov
push
fbstp
jbe
or
adc
push
jne
scas
out
dec
jg
cmp
arpl
mov
fdivrs
jle
andb
or
jmp
pop
jle
test
rcll
sub
cmpl
xchg
cmp
jmp
pop
mov
jecxz
lahf
stos
insl
out
lock
lcall
popa
cmp
dec
pop
je
inc
imul
or
das
jmp
pop
or
xchg
stos
mov
invd
mov
jns
dec
cmp
das
mov
je
stos
mov
sub
inc
mov
xor
sbb
jmp
fstl
imul
sahf
ds
ja
in
push
orl
sbb
lea
int3
sti
mov
enter
and
xchg
push
jge
lods
push
fstpt
mov
xchg
ret
aas
loope,pt
jmp
roll
mov
and
ljmp
icebp
push
jle
mov
movsb
jg
and
xchg
or
fcoms
imul
xchg
xor
lret
jnp
mov
dec
and
mov
mov
push
sub
mov
mov
outsl
xlat
mov
sub
or
dec
pop
pop
lods
and
aas
inc
mov
lahf
inc
mov
jnp
mov
loopne
push
cmp
inc
popf
or
ret
mov
cli
jnp
xchg
cs
jb
sub
jl
clc
add
enter
fdivrl
enter
add
dec
inc
adc
mov
adc
inc
loop
pop
push
push
mov
cmp
xor
mov
leave
dec
sti
push
mov
jno
lahf
cmp
aad
das
decb
cwtl
add
xchg
adc
or
inc
adc
adc
adc
mov
or
jae
out
enter
lds
pop
mov
lcall
pushf
out
pushf
loope
addb
rclb
stos
mov
jp
fcmovnu
jnp
lods
outsb
fisubrs
dec
push
lods
gs
jmp
xchg
mov
ljmp
or
push
sbb
sbb
jnp
sub
insl
jmp
cmp
sbb
cmp
jbe
mov
ffreep
mov
dec
rorb
and
fists
ljmp
movsl
mov
jae
mov
rorl
sbb
pop
jmp
cmp
sar
adc
xor
adc
mov
xor
dec
mov
test
in
cwtl
sti
stos
inc
ja
jmp
iret
gs
pop
dec
pop
in
ss
out
jnp
jecxz
mov
in
cwtl
stos
mov
mov
add
into
orl
and
or
add
mov
ss
cmc
fidivrs
rcrl
push
push
fdivp
jb
xchg
add
adcl
ret
mov
cmp
shl
lds
sbb
ss
test
xchg
out
add
push
jge
jmp
mov
outsb
push
sub
xor
ds
cs
fwait
jae
ret
sarb
addr16
push
lret
xor
aad
xor
adc
mov
dec
mov
prefetch
mov
dec
lods
out
rclb
mov
xchg
mov
or
into
lock
mov
xor
push
cmp
sbbl
imul
call
ss
enter
dec
mov
jmp
aaa
aas
out
jl
mov
sub
and
fimuls
ljmp
xchg
push
cmp
out
jecxz
je
sbb
call
jno
sahf
or
jne
push
mov
pop
les
push
dec
mov
mov
jo
fimuls
adc
call
test
nop
popf
jecxz
cli
subl
pop
pop
jbe
pop
xlat
bound
test
jbe
mov
imul
into
inc
shrb
inc
and
lock
icebp
in
in
push
push
mov
cltd
aaa
scas
in
pop
loop
dec
xchg
dec
mov
js
jbe
jecxz
add
outsl
rcrb
out
shll
mov
test
inc
pop
lds
mov
xor
sbb
js
dec
shr
pushf
mov
sub
pop
sbb
add
aaa
jp
andl
add
add
xchg
leave
cld
popf
lret
ds
jl
push
and
cwtl
add
mov
sub
jmp
pop
inc
ljmp
push
adcl
in
sub
stc
xchg
xor
inc
jp
xchg
mov
jo
insb
test
outsb
mov
mov
push
mov
repz
push
and
jge
cmpl
sub
mov
mov
packsswb
test
bound
adc
mov
xor
lahf
mov
cmpsb
mov
jbe
jae
mov
lods
mov
xchg
push
adc
pop
out
out
daa
dec
lds
out
dec
dec
scas
or
dec
xchg
lods
dec
push
pop
mov
repz
or
sub
pop
mov
sub
pop
pop
daa
add
push
frstor
mov
in
ja
dec
cwtl
sub
outsb
fs
gs
jb
mov
ss
je
int
repnz
rorb
enter
fiadds
cmp
mov
dec
mov
lcall
pop
jnp
mov
and
gs
jae
pop
aas
mov
imul
fildll
in
stos
jbe
adc
xor
popa
leave
push
xchg
sub
or
push
stc
mov
pusha
in
cs
xlat
cmp
ret
es
leave
out
out
pop
ret
test
lds
insl
mov
sarb
mov
xchg
sbb
stos
leave
push
xchg
sbb
fimuls
add
outsb
mov
jmp
pop
dec
int
jg
push
push
and
pushf
push
iret
pop
in
and
push
outsl
jo
fs
xchg
fmull
mov
inc
out
js
cmpsb
rcll
push
sbb
sub
xchg
push
pop
pop
and
arpl
scas
cld
cld
ss
jge
fwait
popa
ljmp
lds
notl
out
add
or
add
pop
xorb
mov
out
jne
inc
adc
in
in
jmp
jbe
jmp
out
inc
ret
xchg
ljmp
les
or
es
sub
or
jge
mov
cs
and
inc
sub
mov
fwait
lahf
adcl
repnz
push
pop
xchg
and
and
sbb
cmc
xchg
push
cmp
push
mov
rcrb
aam
js
repnz
les
inc
fdivl
xchg
mov
or
loope
and
out
insb
aas
pop
int3
enter
hlt
pop
cld
insb
dec
push
ret
test
mov
andl
movsl
adc
add
fld
adc
ja
xchg
add
xor
test
xor
int
push
jle
pusha
push
aam
pop
xchg
pop
lret
mov
fwait
mov
mov
xlat
adc
mov
push
stos
lock
inc
aas
inc
fnstenv
test
xchg
cmpsb
fs
dec
and
insl
dec
repz
bound
jnp
ja
inc
lret
ret
aad
in
addr16
pop
out
jp
add
push
mov
negl
and
ss
call
pop
fistpl
js
es
xor
jnp
xor
lret
dec
xchg
pusha
inc
inc
or
bound
icebp
push
cmp
test
in
jb
aam
sahf
inc
mov
scas
shlb
mov
mov
repnz
and
jns
sub
pop
sbb
mov
int
sbb
mov
test
icebp
mov
clc
ja
dec
mov
bound
lcall
js
jne
xor
lods
jae
add
add
adc
pop
or
repz
mov
orl
push
scas
mov
inc
shrl
daa
enter
cmp
loope
ss
jo
mov
outsl
fwait
movl
pop
or
ljmp
sbb
test
dec
mov
cmp
lods
gs
repz
popa
mov
inc
outsl
pusha
fisubl
adc
xchg
or
add
fsubrl
cs
popa
or
cli
cltd
xchg
fs
shll
mov
xchg
inc
arpl
test
sbb
mov
mov
jmp
int3
or
repz
dec
cli
xor
xchg
push
lods
inc
daa
xchg
dec
add
fsubs
dec
inc
jecxz
push
in
adc
push
fadds
or
movsl
mov
and
stc
cli
fwait
adc
in
jne
in
rol
cwtl
std
sti
cmpsb
push
xchg
mov
test
rcll
mov
or
sbb
sub
aaa
mov
hlt
lret
inc
movl
outsb
push
loop
inc
push
inc
and
test
int3
mov
popf
mov
sbb
or
repnz
pop
inc
adcb
push
adc
cmp
dec
jo
dec
repnz
mov
movsb
dec
or
cmpsb
ffreep
xor
cltd
mov
sub
mov
ret
mov
dec
jno
lods
subb
xchg
xchg
lods
cmp
push
leave
jle
jg
nop
cmc
gs
mov
test
jne
bound
icebp
jno
das
bound
lds
dec
leave
mov
and
adc
pushf
cmpsl
xor
push
pushf
add
outsl
sbb
dec
out
push
insb
xor
push
xchg
cltd
cmp
sbb
lods
fwait
out
lcall
mov
popf
cmp
or
and
add
mov
cld
mov
int3
push
xor
cmp
mov
pushf
xchg
xchg
mov
shlb
repnz
jbe
ds
mov
dec
leave
mov
icebp
cmp
fstl
dec
jb
jns
rcll
xchg
add
das
inc
add
push
aaa
mov
cmc
cmc
imul
scas
sbb
jecxz
push
push
fnstcw
enter
sbb
je
out
pop
xor
fsubrl
shlb
les
test
out
xchg
pop
mov
es
dec
push
stc
cwtl
mov
shlb
cmc
inc
xor
sub
xor
adc
sbb
leave
jo
loope
gs
pusha
dec
cmpsb
loope
les
bound
xchg
inc
leave
test
sahf
or
jnp
add
xlat
dec
sub
add
mull
cmc
xchg
add
sub
jbe
push
dec
xlat
add
cmpsb
cmp
std
dec
inc
sbb
push
cmp
test
push
test
lock
addb
inc
adc
cmp
jbe
mov
cmp
pop
or
mov
jmp
lcall
shr
fwait
add
xchg
push
mov
sahf
test
lret
cli
movsb
sahf
sbb
adc
push
xlat
sti
pop
loop
fimull
push
lret
inc
dec
fimuls
movl
cmpsl
mov
push
fwait
mov
jno
xchg
xchg
sbb
arpl
into
mov
sub
movzbl
mov
into
lret
cld
xchg
xor
lods
scas
inc
push
mov
imul
repz
cmp
dec
outsb
lock
aad
inc
fwait
cmp
movsl
movq
shr
aad
in
cwtl
cmp
movsl
xchg
aaa
add
mov
or
dec
shr
cmp
xor
lret
cs
or
pop
adc
subl
adc
dec
sub
mov
clc
xchg
jg
fistpll
and
decb
scas
mov
xorl
mov
inc
repnz
jecxz
outsb
lret
sarb
xchg
mov
cmpsl
outsl
mov
test
frstor
outsl
loope
xor
scas
and
lods
shlb
jae
jnp
int
mov
popa
jg
or
sbb
sub
xor
nop
adc
push
sti
pop
mov
sbb
adc
leave
push
leave
lods
scas
adc
ja
pop
out
es
out
ds
js
xor
stos
add
rcrb
test
dec
hlt
and
pop
xor
in
adc
mov
jmp
inc
mov
jb
push
fildll
xorps
or
pminub
sbb
pop
lahf
xor
aad
add
sub
es
ss
scas
movsl
dec
push
push
les
pushf
or
iret
adc
mov
cltd
add
in
and
faddl
xor
iret
add
cwtl
add
cmp
es
mov
in
add
push
mov
cld
inc
inc
or
divl
jbe
fs
push
and
pushf
dec
mov
cmp
add
rsqrtps
in
repz
mov
call
daa
aad
imul
adc
shlb
scas
movsb
and
scas
cmpsb
jg
ret
pop
mov
scas
mov
and
add
les
out
mov
mov
icebp
adc
xchg
ret
cld
adc
test
dec
sbb
push
cld
outsb
insl
pop
insl
pusha
and
daa
cmpsb
adc
std
jno
daa
fldenv
outsl
jb
rclb
and
push
inc
adc
sub
push
pop
cmp
clc
sub
add
rcll
inc
jg
mov
jl
push
add
xchg
add
fisubs
inc
add
lock
mov
int3
sub
fistpll
negb
lret
xor
lahf
rorb
sbb
sub
mov
jle
int
ss
enter
inc
je
add
cld
mov
xchg
jo
cmp
andl
or
or
ret
add
jg
leave
fdivl
int3
jle
xchg
and
adc
mov
dec
mov
ret
cltd
out
addr16
mov
nop
jnp
xchg
mov
dec
loop
push
or
outsl
movsb
shlb
shll
fs
lcall
push
pop
xchg
adc
cmp
adc
inc
rcrl
lds
inc
divb
imul
in
fdivrl
jae
inc
gs
enter
dec
pushf
adc
jbe
push
testb
and
fdivrs
push
sbb
aas
cmp
stos
scas
jnp
ret
sbb
jecxz
push
addr16
fs
sbb
test
xchg
push
sbb
sbb
xchg
aam
jg
sub
jbe
cli
out
ds
fbld
mov
push
adc
push
nop
or
mov
pop
xor
push
aas
in
rorl
hlt
and
fcoml
imulb
jno
xchg
mov
iret
decl
lahf
pop
aam
dec
popf
icebp
pop
ss
mov
add
push
mov
push
mov
iret
jl
out
jb
cmpsl
mov
stos
out
call
inc
pop
lret
addr16
xchg
test
pop
pusha
mov
sarl
lds
ljmp
xchg
xchg
mov
inc
inc
scas
jne,pt
mov
and
movsl
or
xchg
stos
push
je
sbb
mov
and
jne
add
cmpsl
mov
xchg
pop
mov
mov
cmp
cmpb
insb
das
xor
xor
pop
out
or
pop
push
sub
mov
pusha
jns
cli
in
int3
mov
adc
jns
inc
lds
dec
mov
inc
cltd
mov
inc
ficoms
and
fisubrs
jne
cmp
into
int3
jge
inc
int3
mov
nop
push
fcompp
lods
mov
mov
push
cmp
xchg
sub
xor
add
std
imul
push
add
dec
xor
adc
das
push
addr16
outsl
cli
cmp
pop
add
je
jl
std
jns
enter
dec
jnp
cmpl
imul
jmp
pushf
inc
out
xor
adc
cmp
xchg
insl
insl
jmp
xor
pop
mov
xlat
decb
inc
add
pusha
decl
andb
lock
mov
pop
jmp
iret
jmp
push
orl
ljmp
dec
ja
add
add
dec
inc
add
jge
and
cs
fwait
pop
sbb
dec
cmpsl
fimuls
or
mov
sub
lods
loope
jno
and
adc
ja
cmpb
pminsw
add
pushl
out
fistps
lock
daa
inc
sub
pop
loop
add
mov
lods
pminsw
aas
out
jbe
sti
pop
or
adc
dec
loopne
lods
test
inc
pop
mov
ds
repnz
dec
int
lock
cmp
mov
pop
movsb
sub
adc
out
lea
fwait
add
in
jg
out
in
in
or
dec
pop
push
cwtl
sub
add
push
add
mov
push
addl
insl
xor
jl
test
pop
out
xor
xor
pop
divb
xor
mov
div
mov
mov
pushf
jp
jmp
cmpsl
std
sti
cmpsb
mov
out
ja
pop
sbb
adc
enter
lods
add
sbb
scas
jmp
pop
push
pop
arpl
pop
jge
mov
fisttps
lock
or
jge
mov
nop
enter
mov
idiv
incl
xor
imul
roll
ror
lock
jbe
loopne
gs
mov
jb
sbb
pop
fbstp
pop
jns
int3
cmp
jle
or
add
leave
and
xlat
daa
push
nop
sub
adc
aam
or
in
insl
cli
xor
das
pushf
sbb
adc
dec
add
xor
cmp
into
cmp
sahf
jo
adc
repz
adc
jmp
mov
xor
bound
rcr
rcrl
pop
xor
loope
mov
mov
adc
mov
xlat
xchg
inc
fs
add
rcl
cltd
ret
xchg
addr16
repnz
in
popl
in
mov
rcl
mov
imul
out
imul
inc
add
bound
dec
or
fildl
fs
sbb
push
fcomip
adc
mov
mov
cld
cmp
jge
pop
xor
or
pop
rcrl
cmp
jecxz
aad
std
mov
das
rclb
pop
ss
xchg
adc
mov
and
adcl
or
add
cld
popa
ja
cmp
cmpsl
std
ja,pn
enter
int3
sub
xchg
jmp
sbb
cmpsb
xor
jg
and
loop
test
idivb
loop
bound
mov
fnstcw
movsb
or
push
pop
cmc
adc
adc
sarl
jp
cltd
pusha
push
jge
inc
xor
mul
jne
cmp
adc
and
dec
stc
hlt
iret
sub
aaa
mov
loop
cltd
repz
inc
rcrb
or
and
push
pop
js
rclb
rcll
push
push
stc
pop
addl
mov
sub
xchg
inc
sbb
pop
inc
and
divl
or
cmp
aas
cmc
xchg
stc
pop
cmp
es
std
dec
ret
dec
icebp
inc
sahf
adc
mov
xor
es
repz
das
jl
adc
pop
out
addr16
subl
inc
cli
leave
fbstp
adc
dec
cli
das
mov
clc
add
mov
xchg
jg
cmp
xor
aas
xchg
dec
mov
sub
fcoms
xchg
pop
jge
pushf
push
xchg
imul
lret
and
cmp
jns
jns
sub
scas
stc
sarl
jno
mov
je
fdiv
imul
int
loopne
jns
xlat
outsl
into
ret
jno
cmpsb
mov
ret
shll
xor
jl
and
in
cmp
mov
xor
xor
and
arpl
xor
xchg
mov
pushl
dec
mov
jg
or
sbb
jg
mov
xchg
daa
stc
stos
notl
jg
jns
aas
outsl
pop
js
adc
out
pop
sti
sbb
rcl
jle
ret
ficompl
hlt
jg
ds
dec
int
pop
cltd
test
scas
jge
lds
out
jle
fmull
inc
and
std
or
lahf
fisubs
sbb
dec
cmc
ja
lds
addl
xor
repnz
mulb
sbbl
mov
push
dec
hlt
shl
push
sahf
push
sub
outsl
mov
into
js
push
mov
cmp
notb
mov
jmp
js
pusha
into
js
int
repz
mov
mov
add
pop
fisubrs
xchg
stos
int3
sub
or
ss
loopne
jl
jns
daa
lahf
sub
mov
jg
ret
ret
lock
scas
sahf
mov
insl
testl
iret
jecxz
xchg
pusha
add
repnz
int
sbb
addb
and
aaa
dec
mov
test
cmc
dec
loop
sarl
or
and
fistpl
mov
insl
sbb
insb
cmpsb
push
shll
mov
das
es
in
loope
xor
mov
scas
out
mov
mov
in
jnp
movsb
sbb
adc
mov
mov
mov
in
cmp
jle
cld
movsb
jnp
test
je
pop
or
mov
adc
jns
cmp
mov
sahf
cld
push
cli
cs
mov
enter
ret
push
popa
div
aad
popf
fstpt
jo
jb
mov
cmpsl
ret
icebp
cltd
mov
hlt
mov
adc
or
dec
ficompl
sbb
xchg
out
cmpsl
iret
into
jp
leave
jp
push
pushf
out
bound
ja
lahf
cmp
insb
lcall
aad
inc
mov
xor
test
and
popa
push
sub
cltd
mov
cmpsl
sub
enter
sub
xor
mov
sti
insl
jl
popa
imul
mov
mov
push
icebp
pop
call
je
jno
in
pop
fimull
cmp
scas
fists
insb
fistpl
mov
sub
fidivrl
mov
mov
or
and
in
sarl
dec
and
lret
sbb
loop
push
std
push
mov
mov
rcrl
push
xorb
sbb
pop
iret
sbb
dec
cmpsl
setbe
and
pop
cmp
out
out
fadds
cli
adc
mov
addb
out
push
mov
cmpsl
push
cwtl
leave
aaa
cmpsl
loopne
inc
leave
lods
xchg
lret
and
mov
lock
and
cmp
mov
ljmp
stos
bound
aas
pop
mov
ret
xor
into
imul
adc
jle
mov
out
int
cwtl
push
inc
cld
je
popa
mov
cmp
lods
and
scas
daa
dec
ret
pop
rcrl
add
insb
sub
movsl
push
sbb
inc
add
xlat
test
fs
cmp
jns
imul
loopne
out
xlat
jp
jg
movsb
cmp
lock
ss
shr
add
jb
pop
mov
int3
loop
sbb
adc
inc
mov
imul
jge
movsb
imul
xor
arpl
mov
cmp
mov
cmp
jmp
divb
xchg
shrb
les
loop
cmpsl
pop
jg
sub
cmp
cmp
ret
aad
shl
in
bound
dec
scas
or
mov
xor
out
repz
fcmovnb
mov
inc
and
and
lods
daa
adc
and
and
push
gs
ret
inc
sbb
fs
das
sub
addr16
xchg
adc
cmp
sar
pop
push
mov
test
pop
jno
ja
ret
mov
xchg
sub
popf
repnz
lcall
mov
loop
fs
xlat
test
das
cwtl
push
mov
xor
popf
jnp
or
imul
jle
adc
dec
stos
aas
or
fs
enter
cmpsl
push
frstor
sub
pop
mov
jne
popa
inc
cmp
ret
lock
lock
lcall
lds
sbb
aam
adc
shl
and
add
lret
mov
mov
jb
mov
xchg
lahf
mov
ss
fisubl
pop
and
jnp
cmp
cmp
push
in
dec
je
push
pop
cmp
or
movsl
jae
repz
mov
lret
call
roll
mov
out
out
roll
ljmp
pop
shrl
jne
test
pusha
imul
dec
daa
push
outsb
mov
aaa
and
mov
ds
scas
mov
mov
jmp
pop
in
cmp
test
shl
adc
mov
iret
jno
mov
adc
mov
out
out
cmpl
in
arpl
out
xchg
call
ficomps
push
or
mov
xor
xchg
not
sub
enter
cli
pushf
xor
xchg
in
dec
outsl
mov
das
adc
lcall
mov
sahf
adc
movsb
pushf
scas
inc
cmp
aam
hlt
or
cmp
cmp
cli
adcl
add
cmp
inc
dec
pop
mov
test
fcompl
sahf
mov
mov
scas
push
pushf
cmp
pop
dec
stos
in
and
insl
cmpsb
or
and
pop
adc
mov
repnz
jbe
dec
lret
pop
mov
outsl
add
dec
mov
xchg
xchg
orl
adc
push
xchg
rcrb
pop
mov
in
pop
gs
es
dec
scas
xchg
arpl
push
scas
test
xor
in
pop
sahf
dec
aas
out
test
je
jne
pusha
and
and
jl
xchg
ret
test
fisubrl
cmp
sub
mov
mov
lods
mov
lret
fistl
push
mov
pop
and
jnp
adc
imul
dec
aad
ja
push
push
ret
movsl
loope
repz
rol
movsl
jne
cmp
mov
dec
xchg
inc
shll
cmp
jg
mov
je
test
push
insb
popa
xchg
test
nop
pop
and
fildll
cmp
cs
stc
hlt
sbb
popf
cmp
in
mov
and
cmp
aam
cwtl
fcmovnu
cmp
mov
jge
outsb
sub
mov
pop
fisubrs
cmp
dec
cmc
cmp
pop
js
add
xor
cmp
dec
enter
call
enter
outsb
push
sub
clc
sbb
xchg
stos
int
and
inc
jnp
ret
push
ret
cmp
sub
fsubrs
loopne
xchg
fisubrs
gs
and
xchg
push
cmpsb
jae
int
or
loope
or
nop
jecxz
dec
push
das
lcall
into
mov
sub
push
xor
fiadds
mov
sub
enter
mov
mov
test
xor
jmp
dec
push
mov
pop
movsl
daa
aas
inc
js
mov
push
mov
mov
cmp
and
xchg
cmp
jo
jno
lret
fidivs
mov
cli
jne
mov
inc
fst
das
xchg
dec
rorl
adc
push
xchg
loope
sbbb
es
bound
lahf
lahf
jge
xor
stos
push
jb
ds
test
jmp
sub
popf
add
popf
jns
jnp
popf
pop
aaa
mov
xor
scas
sti
xor
push
imul
es
in
and
jns
call
adc
sbb
cs
adc
add
jl
jae
addr16
divb
mov
sub
adc
leave
mov
sbb
loope
ss
fisubl
jns
out
rolb
jbe
pop
add
and
shl
add
push
fmul
xchg
push
mov
mov
daa
enter
adc
loopne
jb
sbb
mov
add
shrl
mov
push
add
xchg
cmp
fisttpll
jbe
pusha
sub
imul
push
hlt
ret
in
inc
loopne
rcrb
cmp
rcrl
dec
adc
insl
in
xchg
push
add
std
sbb
sub
cmpsb
xchg
xlat
sub
mov
repz
xchg
sub
test
cmp
jnp
movsb
add
dec
xchg
xchg
push
push
mov
xor
shrb
sbb
and
dec
addb
pop
aam
sbb
jl
je
fcomps
enter
es
adc
fstpt
ret
sub
pop
add
and
xchg
mov
repnz
jne
jg
aaa
ret
jmp
inc
call
inc
sub
cmc
jmp
mov
jns
aam
loope
adc
add
es
pcmpgtb
idiv
mov
xor
inc
sub
jae
sar
cmp
sub
stos
sub
aas
xor
aad
fs
push
xlat
bnd
mov
fstpt
nop
sahf
xchg
add
adc
mul
pushf
es
pop
dec
push
lods
cs
sub
fidivrl
lock
sbb
fiaddl
add
jno
push
test
inc
jecxz
and
mov
xor
ret
lock
xchg
cmp
ja
cmp
into
jbe
and
and
jbe
mov
xor
aam
stos
lret
call
or
mov
in
mov
fadd
jns
mov
mov
cwtl
lea
outsl
jge
clc
loope
jae
mov
leave
jp
mov
push
sbb
dec
out
xchg
inc
orb
dec
fldcw
mov
mov
adc
lods
xor
fs
fsubs
jp
fisubrs
push
xchg
clc
dec
sub
mov
fidivrs
cmp
dec
cli
dec
sbb
push
inc
inc
movsl
xchg
push
pop
inc
push
mov
ret
sahf
jp
or
adc
jp
xchg
add
fnop
call
scas
pop
mov
mov
lret
dec
push
into
push
and
gs
or
pop
sbb
mov
rorl
subb
dec
cwtl
into
or
add
cmp
fcompl
dec
es
xor
cmp
lea
cltd
mov
jnp
lods
es
xor
icebp
imul
in
or
dec
and
mov
fwait
dec
popf
mov
repz
in
bound
in
call
ret
arpl
adc
sarl
sub
add
lea
stc
insl
xlat
xor
dec
cwtl
outsb
or
ret
xor
out
out
inc
cmp
and
gs
push
aaa
dec
xchg
jo
das
jecxz
pop
fsts
imul
rorl
pusha
sbb
jmp
movsl
push
add
mov
rol
jb
pop
mov
mov
bound
or
enter
xchg
scas
cltd
or
rcrb
pop
sub
movsb
mov
sbb
sbb
cmpsb
imul
aad
fists
data16
sbb
add
in
shll
jg
xchg
push
pop
adc
test
mov
mov
sub
xchg
fcmovb
out
push
or
jmp
jge
js,pt
dec
aad
mov
jp
les
jmp
cmp
and
fbld
addl
es
push
scas
cltd
call
in
dec
ficoms
mov
scas
dec
inc
into
xchg
cmp
aad
ret
jo
cmpsl
dec
imul
popf
or
imulb
fs
test
bswap
or
out
xchg
pop
iret
ficomps
rcr
in
fsub
pop
sub
inc
scas
mov
cmp
pop
adc
mov
ja
fs
jl
fidivrl
push
xchg
mov
clc
repz
enter
xor
xchg
pop
lret
mov
mov
add
les
jg
mov
fnstenv
and
mov
mov
xchg
lds
shrl
push
or
std
imull
mov
jl
mov
sbb
stos
sahf
hlt
sub
sahf
int3
outsl
pop
xor
andb
mov
jns
pop
ljmp
add
je
mov
test
hlt
pop
or
sub
xchg
fwait
insb
outsb
mov
into
rolb
ljmp
and
inc
fcompl
cmp
ja
jb
mov
and
ffree
dec
push
ret
sub
cmpsb
lods
xchg
ljmp
sbb
mov
out
xlat
mov
adc
loope
mov
cmp
jbe
dec
mov
mov
jns
iret
xor
out
mov
std
mov
test
or
outsl
jp
out
scas
or
in
leave
loopne
add
xor
sub
mov
mov
mov
xor
bound
adc
test
data16
pop
imulb
push
push
cmp
test
jb
movsl
ss
pop
mov
es
mov
iret
leave
and
iret
xor
movsb
add
sbb
les
push
jmp
in
or
insl
ret
jmp
or
mov
aam
jne
sarb
loope
dec
cmc
jp
jno
xor
cmp
mov
sbb
jnp
lcall
in
scas
cmc
shrl
cmpsb
lods
pop
cmp
jge
cwtl
popf
addb
push
cs
or
scas
and
cltd
dec
mov
xor
out
scas
ret
loope
pushf
pop
jne
sub
lock
sbb
mov
leave
xor
mov
cmp
pop
repnz
or
out
xor
fs
jl
outsb
fnstenv
adcb
scas
in
jg
sub
jo
scas
movsl
imul
inc
imul
fimuls
add
and
in
push
lock
jbe
iret
or
push
int3
pop
inc
sub
push
cmp
dec
jecxz
dec
cltd
mov
sub
mov
adc
jno
rorl
mov
mov
ja
or
adc
xor
out
cmp
add
cmc
rorl
loop
jno
pop
repnz
repz
mov
dec
jnp
pop
cmp
xor
clc
frstor
fs
mov
int3
add
aad
xchg
xchg
pop
cmp
adc
stos
rclb
dec
xchg
push
or
popf
add
in
mov
xchg
mov
xor
lcall
insl
pop
sub
mov
push
sbb
mov
and
push
dec
pop
out
pop
imul
sub
ret
cli
cmp
or
inc
fnstsw
mov
hlt
dec
int
popa
pop
shrb
rolb
mov
rcrl
xchg
icebp
inc
pop
jne
jbe
loopne
andb
hlt
jecxz
fdivrl
dec
add
mov
imul
cld
addl
pop
dec
imul
add
add
mov
inc
and
test
push
fmul
cli
mov
shrb
fisttps
mov
xor
es
outsb
in
jnp
aam
fldl
jb
iret
xor
jmp
loop
inc
cmpsb
push
stos
or
in
fdivrp
pop
lahf
movb
sbb
jp
in
cmc
jge
jge
mov
or
inc
push
add
cmp
mov
insl
cmc
or
add
lods
xchg
jns
mov
call
scas
movsl
xor
out
lods
pop
int3
and
xchg
and
inc
pop
jle
mov
and
mov
icebp
cmpsb
pop
insl
mov
mov
inc
or
gs
jg
cmp
imul
xchg
stc
sarb
cmp
or
xlat
push
pop
jbe
fimuls
add
xor
cli
xchg
cmovs
aas
jno
in
test
fs
mov
fnstsw
addr16
lret
test
adc
lds
dec
lods
movsb
mov
push
dec
mov
outsb
movsl
ret
addr16
idivl
lods
mov
icebp
xchg
out
mov
mov
lds
mov
mov
inc
and
xchg
or
cmpsl
ret
jl
xor
hlt
aam
add
and
fucomi
mov
add
arpl
rorl
inc
jns
push
xchg
add
mov
jns
and
dec
push
cmpsb
mov
imul
rorl
cmpb
xlat
les
push
aas
pop
test
add
mov
xor
shl
adcl
xor
mov
lret
xchg
or
clc
or
cli
orb
cmpsl
sti
push
lods
xchg
je
sarl
cmp
mov
inc
sbb
mov
iret
lock
stos
add
push
mov
arpl
daa
fsubl
mov
mov
ss
icebp
lods
fcomp
movsb
fdivl
xchg
push
shrl
cmp
mov
stc
adc
cmp
pop
inc
nop
pop
cmpsb
mov
xor
sbb
sarl
leave
or
adc
insb
lahf
dec
data16
jp
pop
mov
aas
mov
mov
add
sbb
push
or
stos
out
xchg
dec
cmp
pop
incb
xchg
mov
lea
sbb
test
fucomip
cmp
mov
cmp
fistpl
fdivp
xchg
cmp
arpl
pop
push
cltd
std
nop
mov
jmp
in
in
fdivs
sub
js
mov
sbb
aad
xchg
or
js
mov
pop
mov
ss
scas
push
test
xor
jbe
mov
and
cmp
ss
push
test
outsl
xchg
js
into
add
ljmp
mov
popf
lret
mov
flds
sbb
mov
xchg
das
fwait
mov
xor
scas
mulps
addr16
lds
jbe
cmc
pop
add
inc
mov
push
sarb
xchg
jo
sub
xchg
stos
xor
jbe
ret
lahf
push
sub
fdivrs
rorl
mov
aam
jmp
sysexit
pop
jl
xchg
push
xor
add
jle
lret
cmpsb
or
add
jne
ja
xchg
loope
out
pushf
ja
sub
xor
iret
les
add
xor
pusha
dec
pop
stc
loope
cmc
adc
icebp
clc
jge
pop
scas
fstpl
mov
mov
jge
sub
dec
jge
add
je
cld
fildll
cmp
stc
xchg
sbb
xchg
push
mov
mov
call
clc
xchg
ret
jne
mov
stc
addr16
hlt
mov
mov
adc
fildll
aam
insl
sbb
fdivr
fnsave
daa
insb
fistpll
into
inc
in
arpl
or
fcmovnu
push
cmp
loop
stos
inc
jecxz
test
cmp
and
movsb
out
out
push
mov
pop
push
mov
lds
int
outsl
pop
xchg
insl
jg
pop
hlt
je
pop
pop
into
inc
pop
jb
into
repz
aas
icebp
xchg
daa
nop
xchg
pop
add
mov
popa
mov
imul
add
adcl
mov
jge
push
into
add
fsubr
sbb
ficoml
js
fdivrs
mov
icebp
xchg
jno
insl
jmp
xchg
mov
int3
pop
testl
shll
inc
mov
inc
in
sbb
lahf
cmp
or
adc
data16
inc
inc
xchg
scas
into
movsb
sbb
test
clc
mov
std
lods
jns
cmp
sub
or
fnstcw
jns
fidivrl
imul
add
or
adc
les
iret
inc
cmp
adc
inc
je
xor
add
dec
lods
out
adc
imul
and
mov
and
aam
fsubrs
adc
jae
mov
push
mov
or
xor
adcb
dec
outsb
xchg
les
mov
and
popa
ret
out
fsubr
or
dec
out
scas
sub
cwtl
push
scas
pop
add
loope
mov
lahf
aam
aas
testl
sbb
adc
dec
movsl
lea
aas
mov
and
lret
test
adc
and
cmp
cmc
sbb
pop
and
add
notl
dec
xor
dec
std
inc
jmp
mov
xchg
mov
nop
je
push
xchg
mov
movsb
test
out
mov
in
bound
sub
xor
ret
pop
repnz
sub
dec
and
test
std
xor
out
jb
and
movsl
lahf
dec
or
in
sbb
in
and
gs
jno
call
adc
pop
jg
xchg
add
stos
stos
and
stc
mov
jnp
mov
aaa
outsb
xor
sbbl
xchg
sub
push
es
mov
ret
xor
sub
orl
lds
addl
add
repz
sbb
jl
mov
fstps
or
sub
pop
pop
fistl
dec
cmp
mov
in
mov
out
xchg
imul
cmp
jnp
lods
sti
int
mov
jmp
jb
dec
and
sbb
cmp
aaa
mov
test
stos
loopne
inc
fwait
sub
cmp
dec
cmp
testl
aaa
out
inc
mov
int3
scas
add
call
and
shll
sbb
daa
stc
clc
push
mov
ds
adc
mov
push
push
jo
and
jne
sub
pushf
or
ret
rorl
push
call
cmp
xor
lea
dec
xchg
pop
and
dec
pop
inc
test
fcmovnb
in
inc
inc
cmc
fdivs
push
dec
adc
push
sbbb
dec
sub
cmpsl
xchg
mov
rorl
pop
mov
xchg
mov
cmp
jmp
fs
in
mov
mov
mov
pop
addr16
loop
push
jne
xor
pop
sbb
popa
imul
jecxz
xlat
test
out
ss
in
fwait
xor
aaa
mov
push
mov
pop
or
dec
addb
sti
rorl
push
mov
jmp
and
xor
dec
cmp
outsl
aaa
dec
adc
pop
repnz
xor
push
je
aad
xchg
inc
daa
rcll
pop
shl
test
xchg
mov
clts
enter
or
mov
aam
outsl
je
daa
and
lock
pop
imul
imull
dec
mov
aas
out
test
fwait
decl
xor
scas
stos
test
or
cvtps2pd
in
inc
clc
mov
fstpl
and
add
out
int
clc
insb
jge
scas
lret
test
dec
insl
fmul
sbb
push
in
mov
pop
out
arpl
movsl
xor
sti
push
fstpl
mov
push
subl
popf
int
xchg
enter
loop
mov
repnz
arpl
cld
xchg
ljmp
push
mov
sarl
movsb
mov
sub
imulb
cld
es
mov
sbb
adc
dec
dec
inc
into
leave
mov
mov
and
jl
adc
cmp
lret
cli
ds
xchg
adc
rcrl
sbb
nop
dec
push
subb
mov
mov
rcl
cmpsl
hlt
xchg
call
sbb
call
xchg
mov
push
mulb
or
pop
mov
mov
sbb
jecxz
movsb
pop
mov
in
cltd
jl
imul
ds
push
iret
mov
jmp
and
bound
push
lods
xor
repz
push
in
mov
jl
add
pop
insb
mov
push
mov
sub
lods
mov
cli
jmp
jge
and
popf
sbb
mov
jge
dec
scas
loopne
bound
jno
inc
push
xchg
es
or
xchg
cmpsb
sub
sub
xor
pop
lea
sub
mov
insb
or
negb
test
pop
inc
sbb
adc
or
and
and
cmpsl
stos
sbb
out
divl
rcll
xchg
or
xchg
daa
insb
aaa
mov
mov
cmp
adc
push
dec
shll
repz
loop
aaa
cmp
cwtl
adc
out
or
fidivs
pop
mov
ficompl
xor
xchg
stos
inc
shll
ret
adc
gs
fs
jae
rol
pop
mov
cmp
aam
cli
lods
jmp
rcll
mov
add
and
and
mov
ljmp
push
ret
sbb
push
sarb
pop
je
ja
xor
in
pop
mov
jno
or
push
popf
in
xchg
or
into
and
test
je
jns
push
dec
sbb
adc
aad
aam
imulb
mov
stc
daa
mov
mov
or
inc
add
adc
mov
fxch
out
jnp
cmp
popa
loop
test
cmp
inc
or
sbb
in
int3
movsl
jo
cmp
or
mov
mov
rcll
test
cltd
xor
popa
clc
jo
movsb
push
and
pop
jae
xor
mov
xchg
repz
jb
jl
mov
js
xor
dec
rcrl
and
scas
pop
sub
daa
mov
test
xchg
rorb
movl
dec
dec
adc
push
scas
and
repz
insb
js
aam
mov
lret
stos
xor
and
mov
mov
inc
dec
je
push
adc
fcomi
enter
sbb
dec
rcr
cmc
loopne
pop
lods
dec
mov
gs
cmpsb
inc
fidivrl
xchg
xor
pop
clc
mov
adc
jp
sbb
or
xchg
bound
pushf
adc
sete
adc
out
cmpsl
and
addr16
cs
mov
xchg
adc
stos
mov
xor
add
cmc
jo
js
mov
movsl
loope
adc
ljmp
push
xchg
popa
sti
ja
mov
in
jns
or
mov
pop
mov
adc
push
shlb
mov
cs
pop
gs
dec
mov
stc
cmpsb
lret
fisubs
mov
mov
mov
xlat
sub
add
mov
aas
test
dec
xlat
sbb
cmp
add
ds
pop
inc
loop
pop
rcrl
popf
mov
xorb
dec
sbb
imul
out
mov
mov
negl
adc
xchg
mov
lret
pop
mov
scas
mov
xor
xchg
test
addr16
push
lods
hlt
lds
int3
mov
mull
sbb
cli
add
mov
loopne
and
aam
fisttpl
pop
mov
imul
aam
incb
pop
div
cmp
or
addr16
xchg
loope
add
xor
jmp
cmp
cmp
push
stos
jno
mov
jecxz
push
jp
ja
jmp
shlb
xor
shlb
pop
pop
jnp
cld
cwtl
mov
cmp
push
dec
sub
push
arpl
push
sarl
push
xor
pusha
mov
int
and
aaa
jnp
jo
mov
repnz
ja
call
mov
adc
sbb
mov
sbb
cmp
or
outsb
mov
jno
icebp
pop
sub
in
aaa
xor
lea
adc
rorl
fnstsw
jns
lret
hlt
xor
jg
loope
in
stc
push
dec
jb
or
mov
out
pusha
je
hlt
xchg
mov
repz
xor
shrl
sbb
outsl
imul
cmc
and
out
mov
dec
loopne
adc
aaa
iret
push
xchg
rorb
xchg
cmp
aam
mov
or
test
sbb
jp
mov
ficoms
push
sub
popa
sub
dec
mov
loopne
mov
inc
mov
push
clc
out
dec
fisttpl
xchg
repz
lods
cli
xchg
das
mov
lods
lcall
imul
call
mov
cmpsl
sbb
xor
xchg
add
scas
ret
add
movsl
inc
add
loopne
mov
push
pop
cmpsl
stos
lret
mov
fbstp
or
repnz
arpl
pusha
push
sarl
fs
or
test
sub
mov
popa
xorl
nop
mov
cmpsl
pushf
or
jae
sbb
xchg
mov
ljmp
clc
fimuls
mov
enter
sub
adc
nop
jge
repnz
sti
dec
mov
loope
rcll
mov
fiadds
in
sahf
shll
add
out
imul
repnz
mov
inc
les
push
adc
test
jo
or
lea
aad
in
add
sbb
das
inc
mov
icebp
jle
and
sub
outsb
cmp
inc
popa
dec
ret
nop
sub
xor
repz
cmp
out
pop
ret
jo
jecxz
push
rcrb
or
cltd
inc
xor
add
inc
fdivrs
push
stos
test
pop
lret
cmpsb
xchg
cmc
call
or
mov
mov
adc
ja
cli
and
pop
sub
push
incb
sbbl
and
addl
scas
insl
clc
mov
and
insb
divl
dec
dec
pop
inc
aas
and
int
add
aad
shll
or
stc
repnz
adc
xchg
out
in
pop
ss
pop
jo
loope
scas
shrl
iret
pop
xchg
scas
jge
xor
pop
dec
clc
mov
mov
mov
mov
mov
sub
inc
pop
loope
push
xor
test
inc
adc
lock
push
dec
add
jecxz
mov
add
cmpl
call
add
dec
and
ret
scas
popa
or
lock
mov
and
roll
xor
out
insl
popl
mov
push
mov
jle
lcall
out
mov
mov
mov
mov
ja
lds
movsl
rcl
vpunpcklqdq
mov
jl
call
pop
decb
notb
gs
pushf
fwait
pushf
pop
fnstcw
inc
mov
or
insb
shll
mov
cmp
loope
add
rcrb
mov
cmpsl
mov
cmc
aas
jecxz
in
pop
push
dec
sti
push
add
xor
adc
jbe
add
adc
pop
ljmp
movsl
pop
lock
mov
shrl
and
mov
ret
push
cmp
dec
dec
std
xlat
jl
mov
pushf
insl
cmp
jg
or
or
sub
inc
fidivrs
sbb
push
pop
lret
cli
push
enter
mov
repnz
out
repz
cmpsb
iret
pop
out
and
ja
mov
dec
outsl
push
andb
or
mov
adc
sbb
or
nop
inc
cmc
mov
cmp
cmp
leave
sbb
push
movsb
test
mov
xchg
ds
rclb
stc
pop
xchg
dec
push
test
shll
lock
test
sarb
rcll
in
jb
xchg
insb
ja
mov
sub
repnz
shll
rcrb
push
and
cmc
push
sub
jnp
aaa
cmp
ss
cs
inc
xor
pop
pop
mov
or
pop
xor
xchg
cmp
xorb
stc
push
add
into
in
popa
add
repz
jno
push
jno
push
dec
jg
lea
out
fnstsw
or
dec
insb
mov
jecxz
mov
mov
daa
mov
ja
loope
es
jecxz
loope
or
mov
push
mov
push
ja
adc
mov
inc
lds
sbb
jno
pop
add
scas
cmp
mov
inc
cmp
pop
push
imul
aam
dec
imul
outsb
cmp
sahf
repz
inc
outsl
push
jnp
stc
shll
push
in
and
mov
fwait
minps
inc
daa
or
push
inc
push
mov
lahf
adc
sub
fdivrs
shlb
push
mulb
and
lahf
push
xchg
adc
adc
push
loop
jne
mov
cmpl
add
lods
das
repnz
push
xor
mov
popf
rcl
add
adc
outsb
notl
inc
cmp
push
inc
scas
cmp
xchg
add
out
pop
and
dec
repz
mov
jo
jae
stc
adc
dec
flds
dec
mov
sbb
ljmp
or
movzbl
in
inc
inc
inc
in
or
clc
mov
xor
sub
sub
cwtl
mov
arpl
inc
lcall
sbb
addl
stos
cli
jo
inc
jno
insb
pop
add
lods
cmp
adc
addr16
lock
cwtl
cs
into
inc
mov
sbb
add
mov
sbb
and
dec
les
fsubrl
test
xchg
xlat
loop
dec
inc
sahf
dec
adc
push
mov
imull
mov
cmp
fwait
pop
stos
test
push
sbb
cmp
insl
daa
pop
rorl
xchg
inc
rcll
push
mov
enter
or
cmpsl
add
int3
pop
dec
xchg
imul
dec
leave
ja
pop
xor
arpl
dec
in
xor
mov
cmp
pop
add
jae
movsb
inc
jl
inc
jns
mov
call
xchg
push
and
in
mov
rorb
adc
and
fistl
scas
or
jo
sbb
ljmp
mov
mov
movsb
hlt
pop
dec
mov
decb
jl
mov
int
mov
rcr
jmp
lret
insb
ds
mov
push
jecxz
inc
sbb
xchg
mov
cmpsb
xor
mov
xchg
jmp
sub
sub
mov
mov
xor
inc
cmp
into
inc
inc
push
jle
or
mov
inc
dec
fwait
add
sti
ja
cmp
out
xchg
dec
stos
repz
push
pop
push
out
imul
outsl
inc
loope
leave
fsubl
add
and
push
xor
push
push
sbb
lret
setno
fbld
pop
inc
adc
cs
ret
jg
pop
or
jne
cltd
push
and
push
in
movsl
jnp
jecxz
jo
aas
and
sbb
push
dec
cltd
imul
cmc
repnz
add
iret
sbb
inc
sbb
cltd
mulb
add
fildll
or
fwait
adc
push
aad
stc
cmpsb
jmp
mov
adc
fisttps
pop
sbbl
mov
outsb
gs
pop
xchg
ret
ljmp
hlt
cmc
pop
add
mov
xor
es
stc
pop
idivb
pop
inc
std
and
rol
cli
ficoml
cltd
jns
pop
push
xlat
lcallw
in
outsb
icebp
movsl
sbbb
add
and
jg
jmp
repnz
xlat
dec
nop
wbinvd
inc
xchg
xchg
nop
or
out
xor
dec
sbb
aas
loopne
ficoml
jmp
jmp
sahf
icebp
lcall
pushl
scas
outsb
movsl
out
dec
push
mov
push
psubq
sbb
add
fistpl
pop
iret
iret
mov
mov
adc
das
mov
nop
dec
sbb
dec
cld
scas
inc
jge
aas
mov
test
cmp
inc
aad
clc
xchg
push
es
js
xchg
and
rclb
das
jp
mov
cmp
mov
mov
mov
adc
jns
xchg
inc
fists
dec
dec
stc
scas
cwtl
cmp
test
dec
pop
js
or
jns
addr16
pop
pop
inc
lahf
or
shrb
dec
icebp
data16
pop
xor
in
inc
jge
out
faddl
loop
push
inc
cltd
mov
cmp
loope
out
es
pop
pop
stc
push
xchg
cmp
mov
cli
xor
lcall
adc
xor
xchg
dec
mov
xlat
cmp
inc
pushf
data16
pop
jb
pop
xor
mov
js
xchg
clc
loopne
dec
scas
mov
pop
insb
pop
inc
roll
sbb
jmp
inc
sub
addr16
out
sbb
loope
xchg
push
xor
mov
in
fs
cmp
cmpsb
xchg
push
in
push
push
in
sbb
or
mov
into
fimull
jb
cwtl
pop
je
or
or
jnp
cmp
icebp
cmp
icebp
es
inc
rorb
aam
ds
push
into
and
add
lcallw
in
std
aad
mov
ficompl
aaa
movsl
xchg
and
fistpll
rcr
ret
and
ja
mov
or
stc
clc
scas
ficomps
mov
xchg
xor
das
rcrl
inc
popl
ss
mov
fwait
dec
mov
insl
leave
dec
or
jp
or
mov
sbb
add
fisubs
sub
pop
outsb
pop
in
sbb
fisubrs
icebp
mov
movsl
push
ljmp
test
mov
jns
fdivr
fucomi
imul
loop
lock
mov
clc
push
sbb
int3
lock
add
sti
pop
xchg
cld
mov
cld
sub
mov
test
jp
and
or
mov
std
shrb
sbb
outsb
mov
mov
sbb
cmc
sahf
daa
es
scas
cld
ja
sbb
pop
jg
pop
stos
idiv
mov
push
scas
jge
or
adc
enter
scas
test
jnp
shlb
mov
decl
dec
add
push
push
mov
inc
gs
pop
add
out
out
vpmacsdd
jo
loope
outsl
adc
out
cltd
xor
cmp
aam
adc
and
es
mov
jg
jle
mov
popl
adc
imul
push
mov
cld
jne
jmp
imul
sub
add
pop
jp
imul
push
jnp
xchg
jg
push
mov
sbb
cmpsb
stos
iret
jno
test
cli
out
mov
cli
xchg
sub
pop
and
ret
mov
pop
inc
int3
sti
mov
inc
aam
sbb
cmpsb
lock
aaa
pop
cwtl
cmp
sahf
push
mov
call
mov
mov
fs
lea
sti
andl
cmp
test
shl
xor
mov
pop
mov
fstps
adc
mov
jno
push
imul
and
inc
fistps
mov
add
aam
xchg
xchg
sbb
sbb
xor
ret
in
or
mov
jno
les
sub
xor
xchg
jne
sub
mov
sbb
mov
imul
into
xor
fiaddl
jmp
das
ret
xchg
adc
pop
icebp
lods
jg
mov
jnp
adc
loope
mov
test
add
test
fimuls
xchg
mov
rcrl
jge
mov
lahf
jmp
scas
je
dec
push
fdiv
int
mull
pop
push
xor
mov
and
sbb
pop
scas
and
outsb
call
jmp
jbe
gs
pop
loop
cwtl
ljmp
jge
mov
mov
sub
xor
and
cmp
aad
adc
cmp
sub
pop
jp
xor
xchg
cmp
xor
or
mov
test
mov
int3
cmp
sbbb
mov
sub
into
sarb
mov
dec
sarl
stos
xor
inc
cmp
jge
lods
adc
aam
and
and
nop
daa
fcoms
sub
dec
pop
pop
jle
pop
sub
pop
push
mov
xchg
cmp
mov
loope
sarl
stc
sahf
outsb
sub
mov
xchg
fisubs
jp
ss
adc
jge
mov
dec
or
jge
ret
adc
iret
fwait
sub
and
mov
out
mov
mov
ja
ja
sbb
aas
popl
mov
jne
ss
int
and
dec
cmpb
xchg
ss
lds
test
sbb
sub
cld
jo
aam
enter
xor
repz
call
or
sbb
lods
mov
ds
les
fdivl
std
and
sbb
sub
insl
arpl
cmp
mov
mov
out
mov
pop
add
xor
addb
jmp
arpl
mov
mov
mov
das
pop
mov
inc
push
subb
pop
add
sbb
push
fldt
xchg
data16
call
or
mov
in
lods
sub
lods
sbb
out
call
dec
pop
aaa
bound
lret
and
pop
dec
pop
adc
scas
dec
mov
pusha
jno
addr16
imul
push
loop
add
addr16
ds
and
daa
loope
add
add
aam
loopne
sbbl
jg
scas
jp
or
jge
and
repz
jle
add
lods
jns
sub
imul
movsl
mov
aas
xchg
xchg
shlb
mov
and
xchg
xor
mov
mov
sarl
and
jle
or
lcall
sub
mov
gs
movsl
push
jecxz
mov
inc
mov
in
mov
repz
push
xor
ret
in
push
push
inc
dec
lret
mov
lea
in
sbb
iret
outsl
pop
scas
sbbl
dec
fstpt
mov
or
mov
in
and
jmp
gs
movsb
gs
xchg
test
add
xor
add
mov
sbb
cmp
je
cmp
out
out
loope
cmp
movsb
sbb
loope
test
mov
dec
cmp
lahf
pop
pop
pop
sub
jg
xchg
dec
pop
pushf
shl
jg
and
jecxz
lea
das
rcrb
add
adc
stos
repz
or
cmp
in
push
mov
pop
lods
adc
out
inc
cmp
and
dec
inc
fldenv
shlb
mov
pop
cmpsb
push
sar
push
loopnew
jl
jmp
fs
pushf
sub
xchg
scas
mov
xchg
push
mov
sub
sub
imul
sbb
push
in
and
stos
rol
adc
out
mov
subl
and
mov
mul
in
sub
xchg
cmpsb
repnz
mov
out
repnz
pop
addr16
sbbl
adc
repz
mov
divl
std
les
repnz
or
ja
xor
push
pop
in
hlt
jae
sbb
repnz
ds
mov
mov
fnstcw
mov
xorb
push
xchg
and
xchg
mov
ficompl
imul
adc
insb
icebp
notl
add
inc
dec
mov
jno
add
cmp
lea
aad
clc
movsb
xor
aaa
and
repz
jecxz,pn
adc
mov
mov
push
or
inc
add
gs
jp
insl
es
negl
inc
out
inc
sub
push
daa
or
push
cmpsl
test
xchg
sbb
aad
addr16
data16
mov
ljmp
call
jge
xor
outsl
pop
in
out
in
push
sbb
leave
pop
cli
hlt
pop
insb
push
fcomip
cmp
cmp
fldt
ret
je
in
push
iret
xor
push
mov
loopew
pop
mov
add
jne
dec
inc
pop
cmp
in
das
or
jne
mov
mov
xchg
push
cld
jge
sbbb
shll
sbb
aam
add
lods
xchg
repnz
fstl
sub
mov
in
sbb
cmp
test
sarb
mov
jb
sub
xor
cmc
lret
jmp
push
dec
or
cmp
jge
dec
or
dec
jp
test
aam
inc
inc
or
sbb
outsw
imul
mov
lock
mov
outsb
dec
cmc
ja
push
mov
daa
pop
pop
inc
add
push
std
mov
jne
imul
pop
xchg
jo
push
push
cwtl
pop
int
jne
xchg
push
sbb
mov
ss
mov
adc
inc
aad
scas
das
mov
out
pop
loope
jmp
out
mov
cmpsb
pop
fwait
aam
add
pushf
sub
sbb
sti
jno
scas
in
and
pop
mov
out
xor
and
popf
pop
mov
and
ljmp
pop
dec
lahf
jecxz
mov
call
cmp
mov
dec
push
mov
in
outsl
push
shll
es
inc
xchg
cmp
cwtl
jmp
int3
cmc
hlt
push
jnp
pop
sub
push
xor
cli
sbb
hlt
mov
sahf
lock
mov
test
mov
int
xor
cmp
das
mov
dec
jg
adc
jg
jl
and
inc
inc
xor
cmp
inc
lds
inc
mov
std
inc
or
or
xchg
iret
jge
mov
adc
jb
js
hlt
push
fsubrs
push
cmp
push
lret
out
xchg
jo
and
sbbb
fimull
pushf
sbbb
insb
xor
inc
mov
xchg
sub
fildl
lret
shll
jle
add
dec
out
push
mov
insw
inc
add
pop
mov
stos
ret
imul
mov
out
je
inc
dec
mov
test
aad
inc
into
mov
xor
dec
jl
data16
jae
pop
test
int
xor
sbb
icebp
les
dec
dec
lea
std
stc
push
push
repnz
nopl
fnstsw
aas
adc
push
inc
out
shrb
jnp
adc
sub
cmp
enter
mov
mov
and
sahf
insl
jmp
xchg
les
shrb
jmp
in
pop
mov
and
and
ret
xchg
dec
outsl
ret
adc
in
mov
mov
add
in
stc
cmp
add
out
xchg
inc
mov
xor
daa
nop
inc
js
xor
fistl
ror
add
sub
mov
loopne
xor
js
or
and
fs
xchg
or
xor
inc
xchg
mov
inc
push
mov
push
mov
lock
sub
sub
push
mov
adc
lret
shrl
pop
pop
mov
leave
popa
pop
sbbb
sbb
mov
arpl
sub
add
inc
adc
gs
jae
dec
mov
pop
mov
scas
add
ret
dec
in
sub
sti
popa
repz
iret
out
icebp
lods
pop
lcall
rol
xchg
aas
lea
jle
and
cmp
outsl
mov
dec
sbb
pop
push
testb
push
scas
jp
lcall
inc
inc
push
and
je
les
jbe
lds
add
shrl
sbb
aaa
rclb
mov
dec
sub
pmaxsw
iret
movl
data16
outsl
js
outsl
cld
mov
cmp
push
sti
and
lods
fs
scas
arpl
ffree
clc
inc
cltd
pop
inc
push
fldcw
adcb
loope
push
aam
icebp
or
cltd
xor
lods
loopne
add
push
daa
and
pop
inc
das
pop
test
les
cmc
popa
inc
xor
insb
decl
or
push
fldl
out
cli
gs
bound
add
sarb
adc
pop
in
adc
inc
push
test
pop
xor
push
mov
gs
mov
roll
push
jno
fwait
insl
lea
sti
filds
addr16
xlat
cwtl
mov
test
idivb
pop
sahf
mov
sub
movsl
xchg
inc
sbb
and
push
testl
cmpsb
out
sahf
je
adc
push
rclb
mov
test
out
out
pop
jbe
bound
add
jae
dec
adcb
mov
sub
jmp
mov
xchg
loope
adc
fcompl
fidivrl
and
leave
out
push
imul
mov
sub
shlb
insl
xchg
dec
mov
or
mov
sub
in
imul
icebp
sar
xchg
or
push
cmp
push
or
shrl
rcrl
cmp
adc
pop
into
fs
lret
dec
push
inc
dec
push
test
inc
call
inc
rol
lret
shr
xor
arpl
sub
fdiv
out
jg
shll
mov
mov
lret
arpl
imul
addl
xor
mov
js
mov
sbb
sub
ss
imul
inc
mov
outsl
jp
push
subl
hlt
adc
inc
dec
xchg
es
and
das
enter
add
rorl
ds
pop
xor
mov
lods
inc
xor
je
jns
adc
adc
jl
xchg
mov
lds
mov
push
mov
xor
hlt
int
pop
roll
in
lds
stc
in
mov
pop
push
jle
and
adc
je
inc
and
fs
or
enter
inc
ret
xchg
mov
out
dec
push
test
jno
jg
pop
cs
jae
into
pop
sub
lret
push
sahf
es
mov
cmp
rcrb
mov
and
pminub
xchg
loope
popf
or
push
pop
ja
std
adc
fsub
mov
nop
ret
lea
rclb
adc
int
cmp
mov
jo
mov
ja
cltd
sbb
inc
and
add
loop
lea
jmp
mov
adc
test
xchg
jo
push
mov
adc
ret
pop
jp
push
pop
lock
mov
adc
insb
add
leave
pop
shrl
es
inc
mov
gs
daa
cs
fldcw
xchg
shrb
xchg
movsb
or
xchg
xchg
lods
mov
push
dec
sub
nop
or
les
xchg
adc
mov
das
xor
adc
stos
push
push
adc
inc
cwtl
push
into
mov
sub
xchg
mov
js
mov
bound
sub
cmpsl
enter
cmp
and
sub
mov
fs
pop
lea
mov
fdivp
shll
pop
loop
das
push
dec
sbb
adcl
fimull
pop
and
lds
sbb
lods
inc
sbb
inc
lret
xchg
sarl
insb
mov
lods
fwait
jmp
mov
cltd
pop
nop
or
push
jge
push
dec
loopne
lahf
or
jbe
fcomp
ja
push
adc
int
dec
add
test
xlat
mov
divb
mov
pop
xor
inc
xor
add
iret
push
pop
ss
jne
push
mov
test
mov
sahf
inc
lret
and
adcl
inc
jg
shrl
pop
dec
dec
cli
movsb
shll
lds
arpl
xor
repnz
int
je
sub
pusha
pusha
outsb
xchg
out
sbb
popf
clc
jns
push
xor
jecxz
fildll
es
lock
adc
pop
inc
incb
aaa
popf
js
daa
lea
sbbl
and
mov
test
xchg
data16
js
adcb
fiadds
aas
iret
btc
in
scas
inc
test
ret
rorl
xchg
sahf
fadds
jmp
mov
test
sbb
sbb
or
fimull
fisubrl
outsl
mov
bound
jmp
fsubrp
add
sub
aam
faddp
xchg
sbbb
cld
sti
fidivrl
hlt
and
adc
pop
push
or
inc
add
cli
and
loope
jae
pop
and
and
jnp
and
cmpsl
lret
jmp
daa
fists
cwtl
test
aas
stos
test
pop
inc
scas
ret
jae
or
fstps
mov
test
jmp
mov
mov
and
gs
outsl
inc
mov
aaa
add
in
mov
xor
mov
adc
mov
call
sub
cmp
mov
subb
pop
adc
adc
cmp
lahf
cmp
xorb
js
ds
mov
movsl
sub
daa
andl
mov
sub
xor
mov
and
pop
test
add
js
sub
mov
sbb
and
movsb
sbb
jb
cli
int3
push
sub
loope
aaa
aas
fwait
xor
popf
push
in
pushf
pop
jns
xor
fwait
dec
mov
adc
xor
mov
jmp
mov
and
out
fildll
popa
jbe
cmp
scas
arpl
xchg
push
movsb
cmc
les
mov
jns
cmpsl
rcr
scas
js
in
sbb
xor
test
jg
mov
pop
inc
stc
shll
leave
shll
sqrtps
xor
adc
xchg
in
add
into
and
sti
ljmp
sbb
mov
flds
test
repnz
data16
es
sub
mov
sbb
stc
test
loop
adc
dec
in
and
mov
divb
sarb
push
int3
pop
cmp
lahf
in
jnp
out
scas
and
push
fists
repz
mov
jne
outsl
cwtl
adc
sub
push
push
lahf
add
inc
lea
xchg
shll
or
out
or
imul
das
jecxz
pop
dec
in
inc
mov
cmp
lea
rcll
lcall
adc
nop
cmp
mov
jmp
jmp
lret
sub
js
adc
add
adc
add
and
sub
rclb
mov
adc
loop
mov
aam
push
ret
outsl
fadd
mov
leave
icebp
pop
lret
pop
popa
int3
jns
icebp
sar
arpl
pop
mov
cs
adc
cmp
cmc
mov
adc
fucomip
cli
out
pusha
or
xchg
ss
fsubrl
repz
push
fadd
jg
adc
push
mov
sahf
lea
xchg
dec
data16
popa
adc
push
pushf
lods
iret
es
push
push
jns
in
in
cmpsb
sub
pop
sbb
loop
xchg
cltd
sbb
jo
inc
and
pop
inc
sar
sti
je
mov
mov
xchg
fbld
dec
mov
call
mov
nop
stos
in
fisubrl
adc
or
imul
sbb
insb
mov
jmp
mov
sbb
ss
mov
data16
fiaddl
push
jp
sbb
test
inc
mov
jmp
jge
push
push
aas
ficoml
pop
mov
xchg
pop
ret
push
cltd
pop
cltd
mov
xlat
mov
xlat
push
xor
xchg
mov
out
push
sti
add
rorl
inc
push
loopne
ljmp
push
idivl
xchg
ret
fsubl
jnp
mov
hlt
inc
cmc
out
mov
xchg
jmp
and
movsl
mov
cmpsl
inc
pop
aam
cltd
shrl
clc
push
in
mov
sahf
out
inc
push
lret
inc
ljmp
jp
xor
jge
mov
mov
push
add
roll
hlt
xchg
test
mov
xchg
dec
cld
out
mov
addr16
sbb
sbb
and
mov
cmp
pop
loope
adc
and
into
stos
xchg
gs
pushf
xchg
push
popa
xchg
dec
fdivrl
in
jecxz
add
insl
fcmovb
mov
pushf
xchg
cmpsb
icebp
dec
or
jns
addr16
icebp
insl
mov
push
and
push
fisttps
lcall
test
out
xorl
in
int
cwtl
fcompl
cmpl
iret
rorb
dec
movsl
adc
mov
mov
jp
popa
sbb
outsl
rcrl
cli
jmp
fcomp
fdivl
mov
outsl
lods
popf
lea
test
jbe
scas
mov
mov
loope
into
pop
roll
enter
mov
sahf
lret
ljmp
pop
mov
add
mov
pop
mov
das
ss
sahf
fstpt
stos
cmc
pop
idiv
popa
xchg
popa
int
movsl
pop
mov
insb
mov
scas
sub
mov
push
mov
fcmove
pop
lds
cmpl
pop
aaa
ss
out
cltd
cmpl
stc
push
sbbl
imul
inc
mov
dec
dec
push
and
mov
aas
mov
ret
pop
and
cmp
neg
push
inc
cs
ja
movsb
fwait
inc
shrl
mov
pop
mov
icebp
sbb
pop
ljmp
out
fmull
fs
sahf
mov
adc
and
mov
popa
xchg
jae
adc
stos
xor
fsubrs
sbbb
xlat
in
xchg
sbbb
push
dec
out
push
fisttps
xlat
pop
rcr
lods
jb
es
xor
mov
xchg
lds
daa
xchg
mov
cli
lret
sub
fiaddl
xlat
xor
fisttps
dec
js
pop
pop
mov
pop
inc
push
dec
mov
out
aam
lods
sahf
adc
xor
or
and
xchg
and
jno
xchg
iret
push
add
inc
dec
es
inc
mov
lret
push
stc
cmpsl
rdpmc
fidivrs
loop
arpl
xor
ret
push
inc
adc
test
pusha
out
jl
movsl
adc
clc
insb
dec
adc
loopne
jb
lea
ret
push
pop
push
in
fisttps
enter
add
fwait
aas
sub
loope
sbb
test
xchg
out
mov
mov
lds
and
movsb
jle
sahf
out
ficoml
adc
fbstp
aaa
mov
insb
pop
cmpsl
mov
ljmp
or
mov
shr
mov
mov
sub
jns
jno
lcall
lods
nop
jae
fs
pop
or
add
fwait
add
sub
jno
jmp
fwait
mov
pusha
aas
pusha
jae
loopne
jae
into
push
psubq
add
mov
push
fwait
jmp
clc
cmp
mov
jecxz
jmp
std
jo
cld
repnz
ljmp
cmp
jmp
fnstsw
stc
and
xchg
add
pop
rcll
jnp
dec
jo
int3
pop
ja
or
sbb
or
rclb
xor
sub
mov
outsl
lea
adc
mov
stos
and
xchg
cmp
mov
sbb
je
scas
leave
lods
sbb
sub
and
add
mov
test
sub
ficoms
jb
pop
sbb
arpl
aad
outsl
and
ljmp
xor
xlat
test
jp
aam
dec
leave
mov
sub
lcall
jne
cmp
subl
fsub
hlt
sub
xchg
cmp
mov
dec
mov
in
aaa
daa
scas
cmp
sbb
xor
aad
bound
insb
push
mov
ret
mov
push
xor
aad
cld
insb
fisubrl
aam
mov
cmp
ret
dec
call
xor
fnstcw
dec
daa
mov
inc
shl
jle
push
cmp
pop
mov
jle
enter
xchg
dec
sub
iret
mov
call
xchg
mov
dec
fistl
push
mov
bound
imul
pop
push
and
fsubr
sarl
sbb
jmp
cmp
lret
test
cmp
dec
out
add
dec
ret
inc
or
jmp
shll
shll
push
mov
rclb
xor
ds
stc
out
jno
ficompl
xor
sti
int
cmp
gs
int
rolb
pop
aaa
lea
mov
testl
jae
cld
cmp
mov
mov
fisubrl
je
cs
sti
mov
nop
jge
pop
adc
insb
bound
jae
xor
adc
dec
pop
les
adc
loope
loope
pop
repz
xor
xchg
sti
mov
cmpl
fisubs
lds
nop
mov
cs
xchg
in
sub
adc
mov
loop
xchg
cmc
and
sbb
xor
inc
sub
arpl
mov
jno
jbe
dec
aad
mov
lahf
movsl
imul
xchg
call
cmp
daa
lds
push
lods
ja
xchg
pop
push
inc
clc
lea
push
pop
popl
jmp
xor
stos
sahf
int
gs
fisubl
sbb
push
mov
xor
or
pop
in
neg
stos
shll
loop
mov
mov
inc
fwait
in
push
lock
popa
mov
dec
dec
mov
mov
lds
mov
outsb
push
xchg
mov
sbbl
insl
and
cmp
pop
repnz
inc
es
sub
lret
in
lahf
test
scas
ret
sahf
dec
mov
jmp
rcll
lret
push
push
mov
cmp
arpl
xor
test
or
push
cmc
ret
mov
ret
push
test
adc
sub
xchg
ds
mov
sbb
rcrl
sbb
jl
adcb
test
aas
aas
jbe
and
mov
ret
mov
into
lret
lods
inc
mov
cmp
sub
inc
and
pusha
lret
loop
jge
int
into
xchg
and
lock
cmp
ss
inc
scas
fwait
mov
or
mov
pop
and
sbb
xor
mov
xlat
insb
std
adc
dec
push
mov
fsubp
pop
mov
sbb
popf
lds
cli
loopne
aaa
fstpl
fisttpll
cmp
daa
es
pop
sbb
sub
or
xor
mov
into
lahf
sub
lock
inc
mov
mov
sub
fcoms
and
sti
jae
ret
pop
or
cmp
testb
mov
fcomps
lea
cmp
sub
dec
dec
lcall
sub
push
pop
push
mov
mov
sarb
movsl
inc
and
repz
inc
mov
cmp
in
mov
mov
rcrl
push
jl
jecxz
adc
ja
xorl
fdivrs
mov
orl
dec
js
dec
ljmp
jnp
pop
sub
push
sbb
xchg
sbb
mov
idivb
hlt
sbb
sub
pop
es
lret
xchg
sub
dec
jp
jge
mov
jae
xlat
xor
mov
hlt
xchg
addr16
jl
lods
xor
or
es
mov
pop
jb
dec
or
movsl
loopne
push
inc
jmp
sbb
pop
cwtl
cli
cmp
inc
or
sub
outsb
or
push
lahf
jbe
maxps
mov
adc
ret
adc
jl
test
mov
and
out
mov
jne
jae
cmp
in
xchg
push
scas
cmp
lods
adc
insl
xor
mov
les
daa
pop
cmp
mov
add
cwtl
add
dec
lods
cmp
int
in
xchg
xor
fstpt
out
ss
dec
dec
push
cmpb
sbb
test
xchg
rcll
out
mov
xchg
sahf
lea
mov
xchg
sub
lds
push
out
sub
out
loope
pop
cmp
push
xor
or
jl
ja
pop
es
bound
rolb
jae
mov
xchg
ret
jl
mov
cmp
xor
jnp
push
repnz
arpl
cmpsb
filds
push
fs
in
mov
or
cmpsb
incl
push
sti
das
in
imul
das
sbb
enter
lret
lds
dec
or
sti
jmp
mov
jns
lahf
imul
xchg
mov
sbb
insb
or
fidivrs
out
imul
pop
lret
insb
nop
clc
jmp
ret
dec
pop
add
les
arpl
call
ja
mov
stc
add
xlat
int
mov
stos
stos
and
test
pop
mov
std
movsb
adc
pushf
or
or
ret
jg
jns
mov
inc
xor
std
pop
mull
ljmp
sub
mov
pop
lcall
xchg
pop
lock
jnp
lds
das
push
iret
sub
mov
sbb
mov
sbb
sub
aam
and
inc
cld
xchg
addr16
adc
and
jge
lret
shl
outsl
stos
or
cmp
adc
mov
imul
xchg
push
xor
pop
dec
aaa
jns
int
and
clc
ds
ljmp
xor
inc
jno
push
inc
gs
pop
sub
daa
jge
sarb
daa
and
cmc
movsb
dec
and
mov
or
xchg
test
imul
insb
jl
in
inc
dec
ss
clc
out
test
out
xlat
xlat
jmp
sbb
xor
movsl
pop
sbbb
movsl
loop
ffree
sbb
fistpl
outsl
mov
and
add
sub
jnp
fmull
sbb
inc
mov
push
and
or
mov
fildl
lock
sub
adc
push
fstpt
movsl
jne
sbb
add
xchg
and
push
adc
negl
adc
and
repz
pop
cld
mov
adc
pop
jecxz
lret
in
adc
pop
pop
loopne
cmp
dec
sbb
inc
loop
mov
test
imul
adc
sub
jo
add
cli
std
stc
pop
add
out
and
sarb
xchg
stos
repz
xor
sub
out
xlat
inc
out
cs
loope
push
xor
xchg
stc
and
mov
cmpps
out
or
data16
jle
mov
aaa
bnd
in
inc
adc
movsb
push
lods
in
sbb
test
jg
lods
orl
mov
addr16
push
xchg
sbb
jbe
fsts
mov
es
pop
iret
inc
add
xor
jne
aas
mov
enter
xchg
adc
cmpsl
lret
das
pop
pop
call
fstpl
sub
fcmove
insl
add
mov
out
in
lock
idivl
jnp
sub
jl
push
and
pop
cmp
push
jecxz
mov
pop
dec
mov
jg
dec
gs
les
dec
stc
jmp
stos
mov
and
stos
mov
clc
push
adc
cmp
loope
loopne
mov
xor
pop
lea
adc
pop
or
xchg
out
shlb
cmpsb
mov
and
mov
or
sbb
fstps
test
inc
mov
push
inc
pop
push
lahf
push
sub
cld
and
test
xchg
jmp
or
push
orl
in
pop
adc
or
cmc
xorb
loopne
in
bound
xor
in
ret
into
or
int3
jmp
fisttpll
cmp
lret
adc
gs
mov
add
ja
inc
push
loope
leave
jb
dec
and
sbb
fmull
fildll
lret
mov
aas
or
mov
dec
outsb
mov
mov
cmpsb
sti
rol
shll
addl
cld
pop
movsl
and
xor
pop
ljmp
mov
jg
cmc
data16
movsb
std
ds
mov
xchg
in
jecxz
leave
in
mov
loopne
pop
loope
movsl
push
icebp
push
cltd
test
xor
xlat
scas
sub
cmpsl
lods
repz
or
movb
movsl
pusha
rclb
dec
pop
cmp
mov
mov
dec
std
cmp
pop
and
inc
arpl
cli
test
dec
mov
dec
enter
mov
fcompl
outsl
mov
shlb
sub
mov
push
add
lret
push
mov
add
pop
push
out
jmp
mov
addl
xchg
dec
and
data16
adcb
jp
adc
aam
sbb
les
mov
sbb
lds
movsb
add
sarb
in
add
inc
negb
inc
jbe
inc
lods
xor
and
pushf
fdivrs
and
dec
ds
xor
jo
and
push
cwtl
jge
push
push
fcmove
mov
cld
mov
jle
call
jl
mov
lret
les
pop
or
in
mov
cmp
out
fisubs
lock
cwtl
in
dec
data16
xor
ss
pop
pop
xchg
lcall
out
rclb
xchg
lret
pop
fdivrl
sbb
rcrl
inc
mov
cmc
mov
in
in
shll
mov
ljmp
add
push
loope
ja
pushf
insb
mov
idiv
inc
jns
and
fbstp
out
inc
aas
push
stos
dec
dec
jbe
cmp
sub
call
xor
sub
dec
pop
loop
jnp
test
sbb
xchg
mov
int3
popa
adc
dec
loope
cmpsl
loop
fcomip
decl
and
fwait
and
dec
push
push
push
sub
jl
push
clc
inc
rclb
out
notl
jne
out
notb
xor
insl
mov
rcl
aas
aaa
sarb
enter
and
xorb
cltd
push
push
loopne
mov
jno
add
loopne
push
adc
sbb
mov
push
inc
jg
std
inc
or
mov
loop
cli
fcoms
out
xchg
repz
arpl
push
mov
in
jecxz
cwtl
in
sub
in
and
jmp
mov
lods
arpl
jbe
xlat
lcall
pop
or
inc
pop
sub
out
ret
scas
push
jns
dec
mov
cltd
sbbb
out
fwait
and
inc
mov
jbe
mov
cmpsb
jmp
mov
dec
jo
popa
leave
or
stc
sti
aas
push
jl
and
cwtl
lock
movsl
ffree
stos
adc
mov
and
or
insl
jecxz
cmp
movsb
xor
aas
jmp
push
add
add
add
and
cmp
mov
push
out
out
out
out
out
out
js
rcr
inc
js
test
adc
ja
push
into
dec
xchg
gs
fs
jg
mov
mov
test
jg
and
fistpll
imul
mov
add
mov
lock
fiaddl
out
dec
add
ret
lahf
aam
movsl
and
pop
lcall
popf
sbb
cli
sbbb
mov
cs
fsubs
ds
mulb
xor
repnz
jmp
iret
outsl
xor
jns
jecxz
sti
xchg
dec
ja
jmp
mov
mov
lods
mov
stc
pop
imul
and
pushf
sbb
mov
jne
pop
jl
bound
add
into
sbb
pop
sti
je
jno
inc
mov
xor
cmp
aaa
dec
fwait
lods
lsl
xchg
outsl
fildl
xchg
mov
push
xchg
jmp
js
mov
movsl
inc
xchg
push
ret
jne
je
testb
xor
mov
movsb
scas
loope
adc
jg
stc
jg
inc
jge
push
cmp
ror
lods
ror
hlt
clc
mov
xchg
fstpt
mov
and
mov
and
flds
or
mov
rol
hlt
mov
out
ret
jecxz
mov
sub
xlat
xchg
loop
jp
das
pop
xor
mov
movsl
js
movsb
scas
mov
dec
sbb
mov
cmc
sub
dec
cmp
dec
jge
insb
sbb
lcall
xlat
jmp
sub
ret
lret
cmp
pop
fwait
ror
or
mov
test
mov
in
push
push
fsubrp
mov
rcl
jno
adc
mov
lahf
imul
aaa
imul
imul
or
sbb
outsb
dec
test
push
mov
int
pushf
rorb
add
arpl
std
gs
roll
in
push
fwait
adc
aad
aas
icebp
ss
pop
pushf
in
mov
inc
push
jo
mov
loopne
stos
sub
cmp
dec
cmp
das
stc
jmp
int3
mov
xor
mov
mov
ljmp
push
insl
adc
jbe
popa
test
out
and
pusha
xor
sbb
inc
in
mov
cmp
pusha
div
sub
cmpsb
movsl
xor
stc
and
push
fmul
data16
mov
int3
cs
sub
call
add
test
icebp
xchg
cmpsb
xchg
jnp
test
pop
lret
mulb
movsl
jbe
or
ja
mov
push
stos
mov
scas
cmpsb
lods
cmp
sbb
pop
int
push
pop
lock
mov
testb
fsubs
cmp
aad
xchg
shrb
das
cmp
jnp
dec
push
hlt
loope
sbb
shrb
jge
aaa
cmp
adc
imul
sbb
cmp
mov
mov
out
push
scas
or
je
lahf
push
adc
inc
jb
lods
stc
idivb
push
aas
in
cmp
addb
dec
inc
popa
sbbb
pop
add
inc
xlat
pop
lcall
sbb
xchg
xor
xchg
ja
in
xchg
lahf
inc
test
jae
cmc
jge
imul
sbb
push
insb
aad
outsl
hlt
dec
sbb
and
test
les
cmp
sub
sbb
fsts
push
adc
incl
setle
in
jns
or
xchg
out
inc
popf
jbe
daa
pop
mov
in
push
jno
push
aaa
push
jle
xchg
test
aad
jle
jae
xchg
dec
xchg
add
mov
scas
dec
sbb
call
lret
or
and
sbb
jb
mov
imul
hlt
pop
sbbl
pop
xchg
sub
pop
sbb
adc
sbb
jae
mov
es
stc
imul
out
dec
cli
leave
movsl
sbb
mov
das
sbb
inc
lea
scas
mov
shll
push
fmull
stos
je
jbe
or
insb
test
jo
jbe
lods
jne
adc
jg
jmp
push
dec
cwtl
pop
dec
pop
cmp
mov
daa
cmc
mov
xor
repnz
pop
repnz
fs
aas
ret
push
aaa
imul
sbb
jmp
mov
push
lods
pop
pop
sbb
out
pop
vmwrite
inc
pop
fcomi
push
ret
dec
sub
add
into
popf
inc
mov
xlat
inc
daa
mov
adc
cmp
dec
mov
rolb
dec
pavgw
mov
mov
aaa
inc
sbb
mov
mov
jo
push
fs
aad
outsl
insl
stc
mov
cmp
jae
enter
push
mov
pop
sub
xchg
add
inc
cmp
mov
sub
out
push
cltd
in
movsl
in
mov
add
ror
data16
fbld
cwtl
rorb
mov
repnz
sbb
push
and
addps
scas
test
pop
scas
adc
ja
int
pop
mov
idivb
mov
loop
jae
push
cmc
mov
sbb
dec
cld
call
aaa
sbb
hlt
ret
in
push
xor
sbb
movsl
imul
stos
adc
inc
sub
push
jecxz
imul
pop
xchg
je
mov
bound
add
xor
outsb
adc
mov
outsl
push
sub
push
mov
sub
jmp
popf
xlat
repnz
les
cmpsb
and
sbb
cmp
dec
pcmpeqb
jmp
outsb
add
pop
dec
jg
in
bound
rcl
imul
out
adc
jnp
xor
cwtl
mov
aaa
push
dec
je
clc
xlat
adc
iret
xor
mov
jae
sahf
xor
mov
lret
sbb
rcrl
and
in
repz
adc
mov
mov
pop
cmpsb
pusha
adc
test
popf
xchg
es
mov
xor
add
sbb
and
sbb
or
sbb
in
xor
mov
mov
xchg
mov
dec
cs
repz
popa
pop
or
mov
pusha
out
fnstenv
nop
jl
shll
push
lret
sub
mov
xchg
xchg
and
stos
fldenv
inc
mov
sysexit
addr16
mov
xor
cmp
cli
jo
cmp
adc
cmpsl
rcll
jl
jmp
push
push
aaa
cwtl
scas
mov
pusha
dec
sbb
xchg
ss
pusha
or
std
pop
subl
cmp
jg
lock
add
lret
fbstp
mov
into
push
sbb
leave
dec
decb
mov
leave
mov
aaa
push
out
pop
push
icebp
stos
or
pop
sti
daa
and
mov
lret
dec
out
shll
shr
and
or
add
popf
dec
push
jmp
imul
and
mov
ret
inc
sarl
jae
sbb
int
stc
and
je
xchg
jl
or
push
xchg
mov
inc
xchg
sub
push
outsb
ja
out
mov
adc
nop
fs
sub
pop
mov
dec
ja
inc
push
dec
and
sti
cmpsb
sbb
and
push
repnz
mov
sub
push
sbb
addr16
test
stos
mov
adc
mov
mov
cmc
stos
mov
xchg
cltd
call
ficomps
pop
mov
and
loop
mov
push
daa
xchg
test
push
out
jg
int
inc
orl
pop
rcr
sub
shlb
mov
les
sahf
das
mov
lds
or
pop
dec
pop
adc
xchg
cmc
aad
in
jecxz
adc
sbb
mov
mov
mov
mov
sub
jmp
repnz
mov
mov
js
add
push
fnsave
into
jg
out
popa
loopne
in
mov
adc
jnp
pop
mov
aaa
fidivrs
jmp
mov
jns
bnd
cltd
les
xor
movsl
dec
pop
mov
jb
cmpl
mov
rcll
add
gs
testb
shl
sahf
sti
pop
sub
fs
repnz
cmp
sbb
push
imul
pusha
xor
jg
fs
fists
loope
add
ljmp
push
neg
incb
and
adc
adc
xor
or
jne
cmp
iret
in
jae
sub
scas
mov
call
test
ret
popf
push
dec
xor
out
add
fucomip
mov
xlat
pop
inc
les
addb
push
iret
mov
add
je
jl
or
ja
popa
jbe
out
gs
sub
clc
mov
and
and
loope
pusha
shlb
ss
xchg
mov
push
ret
fdivs
mov
add
add
sub
sbb
psubd
sub
fists
mov
or
mov
dec
fmul
fmul
cmpsl
jae
lods
push
repz
sub
ljmp
sbbb
bnd
inc
lock
dec
pop
mov
cmpsb
cmpsl
pusha
jae,pn
das
jecxz
jnp
lds
and
pushf
cld
fucom
insl
jne
mov
adc
insl
loop
xor
sub
cmc
cmp
test
repnz
push
inc
mov
out
popf
xor
lea
push
ljmp
lds
in
mov
xchg
fwait
pop
ja
scas
adc
icebp
loop
sbb
push
fldlg2
cmp
xor
add
add
adc
test
in
jecxz
popa
push
jb
icebp
push
lcall
sbb
jmp
aad
dec
pop
xchg
dec
mov
test
test
cmp
mov
push
jb
fcmovbe
lods
sub
je
inc
mov
out
lcall
movsb
scas
inc
mov
rcrl
jle
dec
pusha
mov
sub
popa
mov
std
in
dec
je
lcall
insb
xchg
jo
xchg
cmp
pavgb
jae
add
push
dec
or
cmp
imul
outsl
stc
repz
jle
sbb
xor
adc
stc
or
out
test
inc
xchg
and
stos
cmc
inc
mov
cmp
add
xchg
mov
aaa
push
push
or
rcrb
pop
mov
in
xlat
jb
push
or
mov
je
lock
mov
pop
rcl
cld
cld
jl
xor
push
in
mov
dec
test
fisubrs
pop
data16
sti
mov
mov
clc
stos
stc
loopne
sub
inc
les
xchg
push
add
enterw
ret
scas
lahf
inc
push
pop
sbb
add
push
dec
xor
das
fmul
mov
daa
jbe
jo
or
jns
jb
je
fisubrs
lods
hlt
mov
stc
mov
aam
jne
mov
out
pop
loope
lret
popf
and
add
insb
aad
and
nop
push
mov
call
push
mov
pop
pop
pop
insl
fildl
shlb
fldt
pop
add
inc
xchg
sub
addr16
push
call
pop
lahf
jo
loop
push
mov
jp
imul
mov
dec
push
xchg
adc
aam
pop
push
pop
pop
jnp
minps
flds
lods
cmpsl
sub
stos
or
sub
cmp
jle
lods
ret
lret
pop
das
jno
push
lds
xor
mov
and
setg
mov
mov
xorb
sub
aas
sub
ficompl
add
notl
mov
xchg
enter
dec
arpl
mov
in
outsb
dec
cld
and
outsb
jne
xchg
xor
rcrb
lods
or
shl
xor
lds
ret
jae
aam
or
cmpl
or
xchg
lret
mov
push
pop
cmpsb
sbb
jns
fsub
mov
xchg
bnd
jns
or
pop
in
in
push
repnz
mov
push
hlt
push
pop
inc
mov
stc
cmp
push
push
or
mov
in
push
mov
or
mov
bound
mov
insb
dec
cmc
adc
call
fstcw
jl
and
lea
icebp
xlat
add
aad
xchg
insb
mov
xorl
incl
fildl
icebp
mov
imul
aas
clc
pop
ss
aas
dec
and
andb
sub
push
sub
or
cwtl
cmp
inc
lods
icebp
jge
or
lcall
dec
ds
jo
fnstenv
and
mov
ficompl
inc
mov
aaa
pop
orl
jl
inc
push
fnstsw
in
inc
int
and
cmp
clc
in
insb
jns
hlt
int3
cs
loop
xor
out
cmc
add
jg
movsl
jo
ret
or
fs
fstpt
pushf
mov
pop
test
dec
xlat
in
pop
aaa
adc
sub
adc
adc
idivl
mov
call
xor
cmc
xchg
pop
pop
mov
cmp
addr16
xlat
std
addr16
imul
xor
data16
test
jbe
inc
mov
rolb
fs
xor
outsl
push
push
push
jg,pt
pop
std
adc
xor
mov
add
pusha
mov
mov
dec
lret
and
pop
fcomps
nop
cmc
test
cmp
fisubrl
fwait
ret
dec
mov
sub
jno
outsl
flds
out
pop
lods
push
hlt
pop
jnp
push
and
and
cmp
outsl
xchg
lock
push
dec
dec
sub
shrl
ljmp
pop
xor
jge
aas
nop
imul
popf
xchg
fs
stc
pop
push
jle
dec
xor
rorb
xor
loop
sbb
mov
mov
mov
add
es
into
mov
mov
dec
ss
dec
lea
sahf
mov
sti
dec
xchg
cltd
push
jnp
es
loop
lret
sbb
push
push
xchg
cmp
inc
mov
mov
mov
call
and
xor
xchg
popa
movsl
pop
jl
aad
pop
sbb
hlt
sub
nop
dec
jle
xor
push
std
and
sbb
inc
adc
shlb
sahf
push
jno
imul
sub
xchg
ret
mov
enter
add
out
or
ret
imul
arpl
loop
jne
cltd
nop
add
lret
adc
mov
lahf
xchg
aas
pop
push
push
jbe
lret
xchg
xor
ljmp
sbbl
mov
gs
jmp
or
stos
and
fdivrs
jb
in
stos
and
aam
addr16
aaa
loope
sub
xchg
mov
out
xor
repz
xchg
stos
or
rcrb
mov
sbb
out
std
xchg
sbb
lea
in
loope
adc
leave
xchg
frstor
cmc
stos
push
or
lods
pusha
sub
add
inc
cmc
sbb
xor
pop
sahf
or
dec
int
jnp
adc
or
inc
jnp
xor
inc
cmp
inc
std
or
adc
loop
mov
movl
cmp
sbb
fmuls
push
shl
jle
roll
test
pop
inc
pop
iret
movsb
jmp
outsl
push
sbb
mov
xchg
pop
int3
jo
mov
push
dec
jle
call
pop
icebp
cmp
or
cmp
shrl
or
fwait
stos
adc
aam
or
fcoms
pop
jle
dec
js
jle
sti
sarb
xchg
ret
mov
inc
jne
pop
movsb
ljmp
cmp
lock
std
insb
mov
xchg
or
jae
divb
pop
jg
jge
mov
push
out
jno
add
jmp
sub
mov
test
xor
aad
pop
fdivs
retw
fdivrs
out
mov
leave
and
lock
ret
sub
jne
mov
mov
sbb
in
jne
es
fisubrl
add
insb
jbe
push
xchg
bound
mov
ficompl
sub
sbb
pop
sub
mov
leave
idivb
pusha
cld
dec
add
dec
andb
clc
into
lret
jns
dec
lods
mov
inc
mov
addr16
push
inc
lock
sbb
ja
jmp
stos
add
insb
ret
imul
cmp
push
test
xor
lds
dec
jmp
movb
sub
mov
inc
les
nop
jmp
out
or
imul
adcl
sub
mov
das
jne
lock
xchg
or
xor
insb
shll
sbb
push
inc
outsb
xlat
jmp
popa
int3
fidivrl
cli
and
and
push
out
jmp
xlat
mov
test
mov
jg
sahf
xor
ss
mov
inc
imul
ret
adcl
xchg
mov
pop
orl
push
pop
gs
andl
pop
es
scas
out
inc
push
movsl
xchg
inc
mov
es
or
enter
or
mov
dec
cmp
outsb
sub
jns
push
lcall
fmul
mov
in
mov
sbb
mov
dec
shlb
push
mov
and
arpl
push
aad
or
xchg
fildll
ds
mov
pop
pop
fsubs
inc
mov
shrb
mov
xor
sti
cmpsb
pop
es
imul
pop
and
mov
imul
out
push
lret
sahf
sbb
test
mov
jb
lcall
sub
cs
bound
jnp
test
movl
mov
push
mov
xor
mov
and
in
adc
mov
lahf
js
iret
loope
bound
lret
dec
sti
stc
sub
pop
mov
mov
add
hlt
rorb
icebp
cmp
xchg
mov
daa
adc
or
inc
sub
pop
testl
lea
inc
adc
ret
sahf
lods
cmpb
pavgb
add
xchg
jmp
xchg
int3
leave
pop
cmp
lret
js
xor
push
fisubs
leave
pusha
test
cmpsb
sub
out
mov
inc
lds
es
pop
in
mov
add
test
test
lock
cmp
clc
mov
xchg
xchg
xchg
or
xor
insb
mov
push
xchg
fmuls
mov
cmpsb
stos
mov
dec
pop
popa
loope
cmp
orl
mov
pop
cmp
mov
sahf
sbb
dec
clc
mov
movsl
insb
push
inc
fwait
aas
in
mov
xchg
or
sbb
fisttpl
pop
mov
add
mov
sbb
movsb
lock
jp
lahf
mov
jo
cmpsl
das
aad
cwtl
aam
push
xchg
les
adc
jp
and
sub
sub
fs
ljmpw
mov
pop
lods
bound
lea
fwait
xchg
jmp
fiadds
loope
popf
xor
sbb
dec
push
gs
pop
repz
jmp
mov
xor
lea
fistps
addr16
shl
adc
and
cmp
fadds
test
clc
addl
in
jb
loop
fistl
sub
aaa
adc
shrl
fsts
mov
sbb
pop
push
arpl
cmp
cmc
orl
rolb
xchg
xor
stos
and
fldenv
mov
rolb
rol
js
lock
rcl
mov
xchg
push
cltd
push
jbe
or
icebp
jne
adc
int
lods
sbb
loope
xchg
outsl
mov
mulb
std
dec
dec
dec
push
imul
or
dec
not
jo
movsb
outsl
cmp
jne
jno
sub
out
jge
js
or
add
shlb
inc
ds
sbb
int
ljmp
jle
lret
mov
xchg
push
mov
sub
mov
mov
jae
loop
fwait
lcall
cmp
in
scas
pop
dec
adc
and
popa
pop
or
jae
insb
xchg
xor
mov
sub
addr16
nop
and
adc
popf
jg
cmp
xchg
mov
enter
dec
bound
push
cwtl
xchg
adc
shl
enter
cmpsl
lret
mov
lret
cs
rclb
or
andb
xchg
xchg
inc
jle
call
stos
xchg
stos
cmp
xor
cmp
or
lret
shl
adc
dec
fistps
push
cmp
test
subb
mov
ljmp
flds
out
arpl
sbbl
xor
and
jb
sub
pusha
and
dec
pop
scas
outsb
arpl
lds
cmc
and
mov
xchg
pusha
js
adc
icebp
lahf
cmp
xchg
daa
lods
cmp
int3
rorb
outsl
ret
ret
mov
clc
push
in
into
into
xchg
ljmp
push
dec
es
cli
xor
add
xor
out
lock
arpl
divl
mov
dec
sub
dec
cmp
mov
inc
jle
push
pusha
mov
orl
movsl
dec
test
inc
lahf
cwtl
sti
divl
lret
pop
mov
lods
xlat
out
pop
cmp
cmc
imul
fxch
or
lahf
add
lret
test
or
inc
sbb
out
sub
outsb
push
gs
pop
sahf
notb
adc
fldl
add
sub
inc
aaa
xor
dec
ret
push
aam
push
les
inc
nop
mov
daa
jne
dec
sbb
mov
cmc
aad
jne
ljmp
jb
add
ret
jp
fdiv
jg
jb
orb
and
das
insb
ret
jb
sub
mov
mov
out
push
shlb
sbb
mov
mov
lods
leave
mov
sbb
push
adc
mov
loop
push
lret
mov
out
jae
sub
inc
mov
mov
int
in
xchg
lods
clc
loop
inc
mov
call
sbb
jmp
into
jbe
fiaddl
dec
jmp
lret
xor
dec
shll
in
test
sarb
dec
shl
sbb
mov
pop
push
stc
ss
bound
mov
mov
sub
ljmp
icebp
out
rorb
cmp
shrb
cmp
xchg
lock
je
adc
enter
and
sub
fldt
or
sar
test
ljmp
inc
es
dec
mov
dec
adc
or
jecxz
ficomps
jge
fucom
rclb
xchg
cld
xchg
push
inc
push
fbstp
enter
cmp
movsl
push
mov
into
pop
cmp
testb
lea
push
stc
jmp
int
ja
insl
push
mov
xchg
in
movsb
add
sbb
lods
mov
push
pushf
sub
cmpsb
fwait
mov
and
hlt
push
jle
jg
jb
mov
jo
jnp
mov
stos
sbb
add
inc
or
mov
dec
pop
xor
sbb
push
and
and
xor
mov
dec
shll
out
in
sbb
mov
jg
aad
in
and
fildll
test
add
inc
jge
cltd
rclb
mov
fisubrl
xchg
jle
push
std
push
into
add
test
mov
test
jo
test
cmc
adc
data16
jmp
add
cli
sbb
push
mov
xor
leave
movups
imul
add
adc
jp
in
sbb
clc
mov
mov
das
mov
mov
fildll
mov
xchg
fmull
adc
aas
jecxz
ja
punpckhwd
sti
hlt
dec
enter
push
push
push
mov
cmp
fstl
lods
test
xchg
cmc
jmp
adc
cmp
cld
xlat
lods
in
fst
fldenv
xchg
push
and
negl
repz
lahf
and
repnz
fnsave
cmc
rorl
call
push
lods
into
arpl
cld
push
cmpl
orb
mov
add
cmpsl
imul
dec
lods
sarb
xor
sub
sbb
adc
and
stc
adc
mov
out
jne
andb
cmp
sub
sbb
inc
in
ljmp
loopne
mov
test
fildl
call
add
cs
sti
jae
insl
movsb
mov
das
das
push
ret
out
call
cltd
fimuls
aas
mov
push
pop
fcoml
lcall
mov
lods
fldenv
sbb
inc
mov
jo
inc
cmpsl
or
mov
inc
pop
movsl
inc
pop
imul
pushf
mov
jg
cmp
ror
aad
loop
cmc
outsl
in
shlb
arpl
mov
push
shlb
jno
and
and
push
ror
mov
mov
xchg
xchg
jo
sarb
mov
mov
cmpsb
and
mov
daa
jae
iret
int
int
mov
add
clc
cmpsb
jnp
xchg
jns
in
add
pop
lret
dec
xchg
pushf
popa
test
insl
pop
outsl
push
mov
adc
and
jno
mov
xchg
cmp
mov
sbb
fldenv
lcall
idivl
hlt
jp
xor
repnz
xor
or
push
aaa
mov
int3
dec
pop
pop
aam
movsl
cmp
mov
in
mov
in
xchg
cbtw
aad
ss
bound
or
xor
mov
roll
adc
mov
adc
lahf
xlat
js
sbb
sahf
mov
adc
mov
jmp
and
cltd
pop
test
ret
mov
xchg
mov
in
mov
out
fsts
xor
pop
fcomip
cmp
pushf
sub
cmpsb
outsb
add
fwait
or
jmp
cmp
mov
jb
call
into
jno
mov
js
outsl
lahf
sahf
nop
ljmp
loopne
dec
int3
jge
pop
xchg
sbb
popf
dec
cmp
aam
cmp
mov
push
popa
push
mov
mul
sar
repnz
pop
push
rolb
cs
push
jp
jo
pushf
ret
adc
jne
or
sbb
push
ret
mov
adc
insb
into
mov
cld
out
fstl
cmp
enter
repz
sbb
clc
mov
push
in
pop
repz
jecxz
inc
push
lods
jo
add
cmp
in
data16
rorl
lods
mov
leave
and
call
out
sbb
das
in
pop
mov
fimuls
sbb
ds
loopne
cmc
rolb
mov
outsb
jle
cmp
gs
stos
xchg
enter
xor
cmp
and
and
imul
cld
mov
sti
aas
lea
and
test
nop
push
ds
xorb
or
aas
dec
fdivrl
add
out
xchg
pop
outsb
ret
mov
adc
sbbl
mov
cmp
cmp
mov
add
cli
xor
cmc
and
enter
subl
push
sti
popf
mov
push
lret
insl
scas
test
scas
mov
xchg
cmpsb
repz
add
pop
add
cmp
inc
push
fnstenv
fstpl
jmp
and
jmp
pop
hlt
cmp
mov
ljmp
mov
cmp
std
dec
mov
je
or
jp
adc
out
push
cli
inc
mov
xor
mov
int3
push
pushl
jbe
or
mov
push
xchg
mov
js
ss
dec
jo
rolb
inc
jmp
pop
scas
or
xor
movsb
mov
lahf
fmul
xchg
movsb
or
stc
sbb
jle
jns
aad
or
inc
pop
insb
std
mov
dec
push
adc
xor
xchg
xor
pop
call
or
inc
mov
int
daa
insb
test
in
das
sbb
jp
mov
fwait
popf
int
test
sub
sub
sbb
jmp
ss
fsubp
out
cmc
pushf
outsb
test
push
jae
jle
jno
iret
xchg
jmp
addr16
pop
inc
stos
test
jle
mov
insl
mov
mov
pop
insb
pusha
jbe
cmpsb
jnp
fsubs
pop
mov
sub
ja
fldcw
sti
mov
pusha
mov
sbb
add
add
sarl
into
sub
into
pusha
adcl
inc
rorl
adc
pop
add
mov
inc
sarl
test
adc
aas
xchg
pop
sti
pop
pop
pop
data16
shl
je
cmp
call
push
aad
mov
adc
out
je
add
int3
shlb
jo
mov
lret
dec
fisttpll
adc
lods
cmp
and
mov
ljmp
sub
mov
lock
sti
dec
jge
inc
and
ss
gs
sub
push
sub
dec
mov
dec
cld
jo
test
je
hlt
mov
push
or
ja
fsubl
lock
stos
lcall
push
stc
loop
mov
das
jne
mov
idiv
dec
jl
push
cmp
pop
inc
aas
sub
cmpb
sti
repz
fsincos
or
loop
cmp
dec
inc
pop
out
sarl
mov
mov
pop
test
cmp
adcl
jae
in
fcomp
scas
and
and
adc
lcall
mov
mov
inc
fldcw
and
mov
and
mov
or
lahf
adc
push
mov
sub
xlat
mov
lcall
cs
add
sbb
pop
arpl
pop
in
test
scas
pop
xor
fcoms
jge
xchg
clc
push
loope
pop
jecxz
dec
std
cmp
and
fistl
outsb
xchg
daa
add
cmp
cmpsb
rcrb
mov
aas
fdivs
sbb
imul
loopne
loopne
out
sbb
arpl
idivl
repnz
xor
in
mov
mov
js
pop
adc
outsl
aad
insl
js
push
pop
mov
es
insl
fst
adc
repnz
pop
pop
pop
aam
adc
lahf
add
mov
add
mov
sbb
data16
je
in
in
mov
lods
loope
mov
adc
cmp
leave
add
bound
and
shrl
gs
repnz
imul
iret
cmp
test
mov
ja
sbb
cmp
add
scas
mov
sbb
sahf
or
pop
aaa
or
pop
daa
daa
xor
mov
dec
cwtl
sbb
outsb
outsb
ret
inc
lds
leave
jno
lret
gs
mov
mov
sbb
ss
dec
and
mov
mov
dec
test
sub
push
movsb
lahf
pop
jle
push
sahf
xchg
outsb
ja
jmp
dec
arpl
adc
sub
jnp
out
adc
lahf
sbb
dec
inc
pushf
lret
jle
adc
jno
jb
mov
f2xm1
test
addr16
popa
imul
je
insb
add
xor
nop
imul
test
add
push
xor
cmp
arpl
xor
nop
mov
call
mov
xor
inc
js
adc
pop
mov
inc
jb
and
addr16
or
xchg
adc
push
ret
ljmp
test
add
lock
add
xor
rcll
and
adc
xor
data16
jno
inc
call
frstor
dec
or
and
imul
je
outsb
pop
pop
pop
lock
push
iret
fcoms
sahf
xchg
inc
add
and
jne
jo
sbb
in
outsl
cmp
xor
in
and
xchg
push
add
inc
in
fnstenv
mov
push
int3
sahf
mov
jmp
mov
sub
iret
push
stos
pop
jae,pn
je
bound
stc
adcb
pop
orb
xorb
jb
jb
pushf
inc
lret
jo
rcrb
push
cmpsl
ds
xor
outsb
inc
fsubrl
sbb
mov
jecxz
xor
ret
push
jp
std
pop
mov
js
dec
pop
jne
decb
out
shr
stos
outsl
cmp
jne
daa
in
jle
negl
mov
sbb
loope
aad
loopne
in
out
adc
cmp
imul
inc
ror
out
ret
sbb
xor
cmp
adc
pop
adc
xor
mov
push
sub
test
test
pop
xor
fcmovne
mov
mov
stos
mov
scas
mov
push
rorl
gs
or
subb
pop
sbb
repnz
mov
pop
inc
pop
sahf
fidivl
sbb
xchg
daa
std
add
cmp
xchg
fsub
out
adc
inc
sbb
xlat
sarb
push
mov
adc
pop
enter
pop
lods
mov
and
jge
imul
push
out
and
and
jne
loop
jnp
push
inc
push
jp
jle
cmp
popf
mov
lahf
xor
lcall
cmpsl
in
shrl
sub
pusha
cmp
inc
rorb
or
lret
xor
push
leave
push
cld
cmp
mov
test
sti
add
sub
addr16
inc
enter
cmpsl
ud2
mov
not
sub
sub
or
nop
mov
pushf
push
pop
fs
stc
sbb
adc
pop
cli
lock
stos
sub
je
aaa
pop
jg
addr16
xorl
ja
and
xor
lds
sbb
ficompl
xlat
jecxz
in
push
divb
pop
push
cltd
pop
popf
xor
mov
xchg
aas
inc
ret
in
cmp
xor
test
test
adc
push
mov
push
leave
in
pop
cmp
stc
push
sbb
mov
fildll
std
inc
mov
dec
cmp
inc
loopne
sub
test
xor
gs
pop
jbe
daa
pop
fisubl
popf
aas
cmp
xchg
cmp
sub
lea
out
lods
jnp
mov
or
fwait
and
mov
pop
pop
xor
rolb
or
das
jle
xchg
movsl
popf
sarb
lahf
cmp
push
std
xor
mov
push
test
dec
or
xchg
lods
idivl
xchg
mov
pop
and
rorb
mov
ljmp
mov
clc
out
test
inc
and
stos
cwtl
dec
rcr
in
jnp
push
sub
sbb
dec
leave
lahf
cmp
and
sbb
push
push
and
faddl
dec
jecxz
sub
js
shr
das
into
pop
or
lea
repnz
and
std
imul
inc
cld
xchg
mov
outsl
and
push
adc
sub
xor
push
cmp
rcll
js
es
adc
sete
adc
movsb
pop
sub
mov
cmp
sub
lods
mov
and
into
enter
xchg
insl
stos
aad
xlat
mov
sub
mov
or
jg
jae
dec
sbb
ss
mov
shlb
test
sbb
dec
jp
lret
daa
mov
sbb
dec
cmp
es
dec
or
xor
mov
mov
out
jns
ret
sbb
mov
or
add
in
push
pusha
xor
xor
paddw
into
in
inc
scas
repnz
lods
sub
subb
pop
pop
cmc
cmpsl
add
pop
fsubrs
mov
adc
jns
mov
repz
popf
inc
push
js
push
or
mov
add
test
adc
ret
cld
fwait
insl
dec
push
mov
test
fldl
inc
pushf
dec
enter
adc
or
inc
mov
mov
cmp
xchg
push
stc
mov
jp
xor
cmp
movsl
or
and
gs
leave
mov
int3
test
rclb
mov
xchg
cmpsb
imul
pushf
xchg
sbb
test
cmc
inc
xchg
pop
dec
xor
pushf
dec
add
sar
lods
js
lds
int
data16
cmp
add
les
cmp
rcll
cld
ja
jecxz
push
push
out
les
jp
test
test
sub
xlat
or
jb
leave
add
jae
dec
loop
dec
rcll
popa
imul
pop
add
inc
pop
insb
sbb
in
setle
push
and
inc
sub
sub
mov
aam
rclb
or
jle
ljmp
push
push
mov
jecxz
addr16
adc
outsl
in
outsl
into
jmp
push
or
xlat
mov
lret
and
popa
inc
cmp
sarl
and
aad
push
sub
dec
imul
leave
mov
push
mov
fcmovb
icebp
pop
adc
push
popf
mov
repz
ljmp
adc
idiv
cmp
mov
sahf
mov
mov
stc
lods
stc
stos
adc
int
add
enter
xor
lahf
xchg
inc
inc
aam
lcall
jle
mov
stc
xor
jae
sbb
pop
ret
int
mov
and
inc
mov
dec
jmp
mov
lods
xchg
pop
sbb
and
mov
adc
mov
xchg
fildl
movsb
add
rcr
lods
jnp
xchg
repz
mov
pushf
insb
mov
or
imul
in
jmp
scas
mov
pop
xor
xchg
cmp
adc
dec
mov
mov
repz
test
xor
out
mov
shrb
stos
xchg
arpl
sbb
ffreep
mov
mov
insb
mov
fildl
sub
pusha
test
sbb
in
xor
adc
dec
xchg
mov
push
int
mov
or
or
out
cmc
push
mov
mov
lcall
mov
push
xchg
xor
jb
in
cmp
inc
mov
fsubl
cmpsb
ret
dec
push
js
mov
addr16
fstpl
sbb
rolb
loop
and
push
or
jmp
cmp
leave
or
jge
adc
cmpsb
enter
mov
enter
xchg
or
xor
xor
and
inc
stos
inc
pop
push
ret
repnz
xor
mov
jae
pusha
sbb
movsl
jnp
cmp
dec
inc
and
inc
jo
pop
push
rcr
xor
and
sbb
into
outsl
out
dec
xor
stos
add
push
adc
push
xchg
sub
cld
adcb
mov
add
adc
add
inc
ljmp
push
imul
imul
add
int
test
cmp
xor
ret
sti
cmpsl
out
in
movsl
sbbb
inc
daa
std
push
xchg
pop
inc
fldl
xor
mov
sbb
dec
xchg
insl
scas
mov
xchg
and
mov
adcl
int
sbbl
cmovb
push
int3
insb
add
movl
fs
and
dec
pop
jae
and
push
test
xchg
in
add
loope
dec
pushf
and
mov
mov
aam
pop
push
jo
and
mov
cmp
test
mov
scas
mov
fidivrs
das
shr
mov
pop
sbb
repnz
add
xchg
out
add
iret
push
mov
xchg
push
adc
xchg
inc
es
outsb
xor
shll
ror
jae
fimull
popf
inc
mov
sbb
inc
sub
leave
lret
repnz
lret
fnstcw
pop
insb
ficoms
out
cld
into
sbbl
mov
test
sub
jne
pop
int
inc
push
push
cmpsb
cmpsl
jnp
jae
xchg
ds
mov
ret
jecxz
xor
ds
xchg
xchg
cmp
push
and
addr16
sarl
fildl
cmpsb
pop
jns
pop
jne
xchg
in
mov
out
jmp
lods
sbb
outsb
icebp
add
dec
pop
iret
gs
push
enter
icebp
and
arpl
icebp
inc
sub
push
mov
push
testb
in
push
data16
adc
test
push
je
push
and
push
insl
out
lods
mov
dec
cmp
sub
sbb
push
mov
push
or
xor
arpl
sbb
jmp
popa
fsubrl
negl
adc
into
imul
popl
adc
xor
out
pop
sahf
leave
call
sbb
xor
xchg
cwtl
mov
lds
lods
add
dec
and
jp
pop
lret
mov
mov
mov
sub
arpl
mov
adc
iret
imul
addr16
xchg
mov
icebp
test
fwait
xchg
stc
sub
pop
sbbb
cmpsl
jg
mov
mov
xor
xchg
sub
loop
xchg
movsl
lock
inc
repz
sub
or
lret
dec
dec
mov
movsl
out
aad
das
cmc
lea
data16
pop
xchg
cmp
push
xchg
push
mov
gs
cltd
cmpsb
dec
cmpsl
scas
adcb
pop
ss
fcmovb
ss
inc
loop
mov
mov
add
xchg
addr16
push
or
pop
ret
int3
rcll
popf
jge
xchg
mov
repz
dec
sub
mov
dec
sbbl
inc
jecxz
cmp
mull
mov
loope
cmp
popf
mov
mov
dec
aad
jmp
scas
icebp
dec
mov
repnz
imul
xchg
pushf
xor
lret
pop
nop
aam
leave
and
lret
push
inc
cwtl
idivb
mov
jno
stos
cmp
ffree
clc
pop
imul
adc
or
aam
mov
orl
in
pop
push
ja
test
mov
fwait
loopne
and
iret
pop
jl
stos
push
and
lret
cmpsb
ret
dec
mov
outsb
mov
pushf
jecxz
mov
cmpl
outsl
andb
pop
pusha
add
push
addr16
xor
sbb
mov
or
jmp
jns
arpl
jo
dec
mov
adc
pop
inc
outsb
sbb
pop
sub
addr16
out
ljmp
or
pop
rcrl
mov
loopne
lock
stos
stos
into
mov
cmpsb
xchg
inc
hlt
mov
outsl
inc
cwtl
scas
push
stos
loop
inc
sub
test
inc
js
dec
inc
cmpsl
mov
outsl
xchg
movsb
xor
adcb
pop
adc
les
or
inc
fidivl
in
cmpsl
sbb
outsb
dec
cmpsb
cli
fsubrl
fcompl
jb
mov
push
out
or
out
add
mov
mov
pop
jne
ljmp
sbbl
jns
or
xchg
fsubrs
xchg
cwtl
aaa
bound
insb
mov
iret
adc
cmp
push
inc
jp
shrl
dec
xchg
mov
mov
adc
push
mov
xor
int3
aaa
push
ret
mov
push
jmp
cmc
lcall
fldenv
push
stos
inc
pop
loopne
inc
jbe
cmpsb
or
adc
int
pop
and
mov
rcrl
push
icebp
inc
jnp
test
xlat
mov
rcrb
add
orb
cmpsl
sub
call
inc
add
cmp
inc
mov
mov
repz
or
inc
mov
dec
scas
or
out
mov
sbb
push
rcl
add
add
inc
xor
push
xor
jb
add
sbb
faddl
test
mov
inc
inc
dec
mov
fwait
cli
lret
push
add
jns
cmp
mov
gs
daa
lods
xchg
inc
jg
pop
mov
xchg
dec
fdivrl
fisubs
push
cmpsl
adc
in
hlt
or
mov
jns
sub
outsb
mov
ss
push
cmpsb
gs
fxch
add
ret
add
insb
mov
xchg
inc
sbb
das
sub
mov
and
lahf
xor
and
add
icebp
lahf
cmp
pop
sbbl
aam
pop
setne
dec
add
cltd
xor
les
jae
sub
push
pop
jg
sbb
mulb
loopne
add
ja
ss
adc
fisubrl
repz
or
nop
jns
lods
dec
negb
in
popf
sub
pop
cmp
scas
mov
adcb
xor
je
stos
jmp
lods
rol
out
mov
test
pop
inc
xlat
movsl
mov
mov
and
xchg
clc
cmp
or
scas
sbb
push
inc
aam
inc
mov
popl
rcll
mov
jle
push
sahf
mov
xrelease
or
movsb
xor
ja
jmp
mov
inc
cli
xchg
mov
xchg
mov
in
mul
outsb
xor
mov
push
pushf
cmpsb
inc
decb
cmp
pop
mov
mov
out
daa
subl
dec
jle
hlt
sbb
inc
movsl
lods
aad
lcall
push
pop
mov
dec
inc
add
cmp
pushf
pop
rcl
in
push
mov
xchg
js
daa
sbb
mov
and
inc
sbb
lock
sarb
pusha
pop
fidivrs
les
ljmp
sbb
pop
cmpsb
test
pop
pop
pop
push
push
lods
inc
sub
push
pop
sub
dec
pop
movsb
or
nop
cmp
mov
xlat
jp
sbb
mov
int
add
pop
rorb
daa
and
mov
adcl
call
adc
sbb
leave
push
fcomps
ja
dec
push
mov
dec
jge
out
jns
mov
test
clc
inc
mov
cmp
fsts
popf
out
jmp
imul
ror
cli
nop
aad
stos
adc
sbb
and
adc
mov
stos
xorl
sub
pop
adc
mov
mov
int
push
out
mov
rorl
in
push
xor
aaa
aam
into
lods
lea
mov
aad
lds
outsb
jns
pushf
jle
xor
jecxz
pop
xor
in
movsb
xchg
sahf
orb
lods
add
jbe
jne
pop
daa
test
xor
test
out
add
push
js
ret
mov
subl
push
pushf
xor
and
push
mov
out
adc
or
cli
in
lock
in
out
in
cmp
xorl
xchg
pushf
mov
data16
jmp
bound
or
push
adc
push
push
nop
mov
cltd
filds
inc
jge
jg
xor
cmp
jge
adc
mul
sub
xor
push
inc
inc
sarb
popa
jp
aam
idiv
test
push
pop
xor
push
mov
iret
mov
and
cmp
imul
out
in
rorb
mov
fwait
push
arpl
mov
cmpsb
lea
sarl
xorb
xchg
arpl
and
mov
jg
sbb
sub
mov
shlb
popf
lea
js
sub
movsl
test
int3
push
jmp
shlb
and
pop
and
fidivl
repz
mov
push
movsl
adc
rolb
mov
sti
std
jns
scas
mov
fdivrs
add
out
xchg
mov
jnp
jmp
mov
jp
repz
lock
inc
jbe
ret
movsb
pop
mov
jge
xchg
jl
fisubs
shll
lcall
add
fdiv
jge
push
mov
cmp
pop
pusha
cli
mov
sarl
sbbl
ljmp
adc
lret
daa
push
je
cmp
inc
push
outsl
mov
hlt
or
mov
sub
or
cmp
shl
mov
adc
out
xor
cli
xor
out
xor
js
push
fistps
dec
movsl
clc
dec
rolb
js
add
insb
jno
jmp
jbe
add
cmp
and
xchg
xor
jmp
sbb
nop
fs
outsb
repz
lock
cmp
or
dec
aam
add
aaa
aam
mov
xlat
ret
mov
mov
out
mov
add
pop
loop
inc
std
jne
clc
mov
push
add
and
pop
insb
mov
imul
mull
sbb
xchg
leave
push
gs
outsb
jp
hlt
fldcw
jns
dec
shr
xor
jmp
hlt
cmpsb
push
insb
jne
das
sbb
xchg
sarb
popf
xor
add
mov
xchg
jp
pop
movl
leave
fwait
jae
sbb
push
sarb
pop
icebp
pop
mov
xchg
loope
mov
mov
cmp
push
or
rol
dec
jl
and
loope
sbb
fbstp
imul
xor
addr16
das
mov
mov
or
cmp
xor
insl
mov
rolb
int
cmp
mov
mov
popa
mov
pop
stos
xchg
addb
add
out
or
stos
ror
push
ds
out
test
pop
jmp
jne
push
in
rcll
test
adc
fisubl
mov
loop
lahf
and
pcmpgtb
cmpsb
sub
push
xor
scas
add
dec
mov
outsl
mov
adc
mov
xchg
pop
mov
fldln2
sbb
jg
fisttpl
mov
lods
sbb
cmpsl
outsb
in
pop
or
je
stc
and
jo
stos
jmp
sahf
push
mov
stos
mov
fbstp
dec
dec
jns
call
loop
xor
mov
pop
movsl
mov
pusha
adc
mov
adc
fwait
ret
addr16
rcrl
fbld
mov
lods
and
loop
int3
dec
push
or
mov
dec
sbbb
outsl
mov
dec
clc
jb
aam
jno
cmc
and
or
scas
ds
ds
mov
sub
adc
sbb
dec
xchg
stos
mov
cmp
mov
loop
cmp
cmp
cwtl
dec
nop
fsubrs
movb
repz
sub
add
dec
imulb
mov
out
hlt
or
cmpsl
inc
andb
jbe
push
and
pusha
les
or
filds
inc
outsl
cltd
cmc
adc
jl
imul
cwtl
push
cmp
fldl
lock
out
mov
inc
xchg
repz
repz
out
es
arpl
or
leave
push
mov
cmp
xchg
fs
mov
rcpps
pusha
inc
cld
jge
add
inc
aam
dec
pushf
fcoml
push
lahf
xchg
bndstx
mov
movsl
sub
test
cli
pop
insl
popa
xor
daa
fisubrs
and
mov
cltd
pop
ss
lcall
xor
stos
lds
pop
fs
sbb
test
inc
push
fisttps
cmpsb
pop
mov
popf
cmp
iret
or
sbb
cli
inc
xchg
sbb
fcom
outsb
hlt
xor
sub
loope
mov
repnz
sub
enter
pop
loope
push
je
insl
sbb
mov
and
in
pop
push
jns
lret
sti
mov
mov
cld
testb
out
push
fimuls
mov
mov
pop
aaa
mov
dec
scas
xchg
add
dec
push
mov
cwtl
loop
rorl
jnp
or
sub
sbb
ss
sub
cmp
lods
test
push
rcrb
xchg
cltd
iret
mov
rcr
ret
stc
push
xchg
mov
andl
push
ds
data16
push
add
bound
dec
testb
in
adc
aad
imul
cld
sub
mov
cmp
and
js
addl
jo
and
jae
dec
push
mov
in
sbb
dec
mov
xchg
ja
sub
das
gs
jb
shrb
loop
mov
icebp
mov
mov
sarl
push
icebp
pushf
imulb
jmp
stc
cltd
pop
push
iret
imul
jle
or
jge
pushf
ret
inc
stos
cld
mov
fmuls
lret
addr16
xchg
hlt
jno
xor
and
aas
int
shlb
in
test
and
out
les
imul
xchg
sub
dec
inc
and
push
and
bound
ja
cmp
inc
mov
repz
jge
ss
ds
je
jnp
stc
or
cld
mov
xchg
or
in
test
das
ss
dec
adc
xorl
and
cmp
orl
inc
jecxz
lock
shll
repz
mov
add
xchg
push
je
gs
push
add
adc
push
aaa
inc
xor
or
fninit
pushf
divb
cli
push
mov
xchg
imul
cmpsl
add
pop
push
sbb
fs
mov
xorl
and
adcl
lods
mov
ret
pushf
repz
add
jge
xor
mov
jge
dec
pop
add
sbb
inc
test
cwtl
scas
dec
inc
scas
mov
sub
cmp
sbb
and
jmp
mov
inc
aam
cltd
call
cwtl
jbe,pn
xor
lahf
data16
dec
mov
popf
in
fidivs
cmpsb
cmp
fldt
xchg
mov
xor
xchg
fisubl
cmp
mov
push
dec
pop
mov
pop
push
arpl
and
movsl
daa
sti
stos
outsb
cmpsb
jle
mov
clc
fists
je
jl
stc
and
jo
mov
fdivs
lret
fidivrs
scas
mov
sahf
sti
out
jl
aam
scas
mov
aas
mov
pop
mov
mov
xlat
cmp
push
outsl
inc
jbe
lods
sub
mov
pop
jae
mov
loope
or
in
into
dec
fs
push
mov
sti
push
adc
sub
pop
ja
daa
into
mov
dec
hlt
mov
aam
mov
mov
sbb
cmp
stc
jo
test
mov
dec
daa
mov
lock
adc
cwtl
add
rorl
jl
mov
incb
cli
inc
mov
aas
mov
sub
bound
repnz
fadds
ret
std
dec
dec
sbb
push
cli
pushf
mov
insb
daa
lods
pop
ffreep
jecxz
dec
fstpt
fiaddl
addb
or
loop
and
js
dec
ffree
aaa
fimuls
mov
push
lock
roll
cmpsb
or
enter
popa
lock
push
outsb
std
icebp
cmove
lds
mov
inc
repnz
mov
test
sbb
mov
jecxz
xor
or
negl
stos
icebp
mov
xor
fildll
dec
in
lcall
addr16
ret
ret
clc
xchg
fcomps
mov
out
ss
add
mov
or
jl
mov
shrb
push
mov
mov
les
xlat
add
andb
push
insl
out
mov
and
push
lcall
adc
out
lcall
and
arpl
jmp
mov
ja
fnstcw
or
sub
roll
les
out
sti
xchg
push
popa
insb
jmp
push
imul
mov
daa
cld
dec
jge
mov
outsl
pop
mov
in
push
das
adc
sti
sbb
add
mov
lds
les
ja
repz
lods
and
clc
jae
add
jo
cmp
xchg
mov
jo
pop
mov
aaa
xchg
cld
xorb
jl
fcompl
or
mov
repnz
mov
es
and
insb
sub
add
jb
cmpsb
sub
popa
aas
out
shl
daa
movl
mov
shr
add
std
jns
out
cld
cli
lea
fisubs
into
ret
jle
sbb
call
pop
mov
inc
ja
ret
jne
sub
or
jbe
les
ss
outsl
mov
jbe
jg
pop
rcrl
inc
push
cltd
push
pop
or
push
pop
and
adc
pop
cmc
jb
aas
imul
push
sub
inc
aam
cmp
ss
or
mov
fwait
pop
insb
add
pop
lds
stc
iret
pop
xor
mov
lahf
div
loope
mov
incl
ljmp
clc
adc
or
daa
inc
mov
leave
mov
dec
fisttps
cmp
jle
push
int3
mov
fsubrl
or
ja
fldcw
outsl
or
mov
cld
xchg
jg
in
push
jmp
hlt
push
clc
mov
cmp
inc
out
add
outsl
jg
cld
adc
ficompl
mov
test
push
pop
pop
pop
imul
movsl
lret
jnp
rorl
adcb
in
mov
out
int3
mov
sub
out
enter
sbb
lahf
inc
xchg
add
scas
ds
stc
dec
adc
repnz
cli
mov
lcall
jle
inc
mov
pop
cli
loopne
bound
mulb
cld
xor
jle
mov
rolb
mov
mov
in
mov
and
lock
inc
lsl
imul
jg
rcll
jp
lock
pop
mov
loopne
int
and
mov
ljmp
shll
loope
jae
lret
aas
sub
sar
jg
jg
mov
jo
cmp
in
outsb
repz
hlt
je
pop
jg
rcrl
pop
std
inc
and
jo
cli
sub
add
sbb
call
mov
test
and
inc
inc
mov
push
pop
adc
jmp
push
adc
push
add
sub
inc
and
add
adc
adc
orb
sub
and
jmp
mov
cmp
cmpsb
cmp
movsl
xchg
addr16
pushl
cmpsl
mov
lds
cwtl
xor
fdiv
add
lcall
clc
xor
dec
out
in
out
ret
bound
and
xchg
cwtl
jae
push
and
sahf
jns
mov
int3
stos
dec
shlb
insb
pop
filds
popf
sahf
cli
jl
xchg
adc
sbb
movsb
sbb
pop
or
imul
pop
repz
push
and
lods
rcl
mov
mov
sbb
outsl
ds
imul
xor
mov
and
mov
shl
je
jno
dec
mov
mov
mov
cmc
dec
jo
in
ljmp
fadd
lds
jnp
cmp
int3
push
out
popa
sbb
push
sbb
das
mov
rcl
inc
mov
jne
div
fs
lret
sbb
cld
xchg
sti
scas
push
aas
push
push
outsl
sub
pop
clc
insl
mov
sbb
ljmp
sub
jecxz
lea
or
lock
jge
ljmp
dec
insb
mov
in
pop
xchg
xlat
jbe
cmp
cmp
cmpsl
xlat
mov
xor
push
lock
andl
leave
scas
dec
iret
pop
jecxz
or
push
orl
in
mov
dec
rcrl
dec
jbe
jle
dec
cmpsb
pushf
cmpl
movsl
lahf
jle
lret
add
sbb
int
sbb
cli
dec
addr16
jns
js
cmpsb
or
mov
or
xchg
lret
inc
xor
sub
dec
imul
xchg
roll
stc
sti
mov
mov
movsl
mov
mov
adc
shl
in
movsb
xor
jns
dec
adc
mov
jo
enter
mov
ja
pop
cmpsb
sbb
adc
sub
repz
test
push
in
adcl
jo
sbbb
fidivs
cld
push
push
inc
cli
js
and
fbld
int
and
xchg
xchg
fisttpl
xlat
aaa
les
test
jmp
mov
aad
add
adcl
das
out
xchg
rcr
pop
inc
fcompl
xor
testb
sbb
sbb
mov
fiadds
push
jno
leave
xor
or
ror
sbb
inc
cmpsl
fistpl
repz
adc
hlt
jno
or
inc
add
lods
data16
xchg
cld
cmpl
cs
xor
or
or
cmpb
imul
pop
int
ret
iret
inc
adc
ret
arpl
scas
jae
lcall
jp
add
sub
jle
jno
mov
ret
sbb
dec
loopne
lahf
push
jmp
lcall
cmc
and
adc
lods
inc
stos
ss
aaa
dec
jge
mov
sbb
into
xor
insb
in
ljmp
and
jb
jnp
cs
and
and
lods
jmp
test
xchg
jbe
pushf
in
mov
cmp
add
add
mov
and
movsl
add
xchg
lret
in
cmpsb
leave
fcmovu
mov
hlt
jbe
xor
mov
push
xor
leave
sub
xor
repz
stos
movsb
out
into
popa
mov
gs
push
inc
mov
fistl
aaa
repz
pusha
rolb
pop
push
js
stos
lahf
leave
lods
int
mov
and
mov
jae
arpl
scas
arpl
xchg
push
dec
dec
push
xor
rcrb
fs
jge
pop
sub
sbb
sbb
xlat
xchg
or
cmpsb
cmp
dec
sbb
orb
pop
dec
fadds
dec
push
into
test
and
das
and
lret
loopne
pop
dec
rcrb
fidivrs
push
sub
sarl
sti
sub
adcb
pop
or
loope
das
cmp
iret
xchg
xchg
ret
and
jne
mov
xor
push
std
ss
add
les
xor
fld
hlt
lds
ss
addr16
xchg
inc
outsl
faddl
jno
cli
pop
push
xchg
sahf
stos
push
jae
or
sub
cwtl
pop
cld
int3
test
sbb
jle
mov
jg
fcomps
mov
std
cmpsb
cmp
jecxz
mov
faddl
pop
test
jbe
adc
lods
in
pop
add
mov
jnp
out
faddl
push
pop
pop
addr16
sbb
ret
les
adcl
inc
insl
adc
mov
aas
or
mov
jle
int
add
je
or
int3
aas
mov
stc
jnp
clc
lds
xchg
cld
int
jbe
add
ja,pt
shl
mov
push
in
add
pop
pop
jmp
fimuls
mov
sbb
in
cmc
daa
mov
ret
jno
jecxz
nop
inc
and
push
aas
shlb
cmp
arpl
mov
scas
outsl
in
popf
xor
das
add
inc
std
ror
xchg
mov
mov
adc
mov
fisubs
sub
sarb
inc
ret
pop
dec
bound
push
test
sbb
dec
cmp
lock
add
sbb
stc
dec
or
sbb
mov
cmc
test
out
negb
je
imul
lret
jno
mov
in
xchg
call
mov
push
hlt
cmp
stc
sub
sbb
fstpl
ja
inc
sub
lods
clc
dec
rorb
and
imul
pop
lcall
les
pop
dec
pop
mov
aad
push
call
enter
sub
ffreep
and
mov
out
adc
xchg
add
push
dec
sarb
pop
pop
xor
push
push
int
addr16
call
mov
mov
fcmovb
dec
add
mov
adc
fcoms
inc
stos
dec
jns
pop
scas
nop
pusha
sub
das
inc
test
xchg
inc
or
lock
aad
mov
out
nop
negb
jne
pusha
sub
mov
inc
daa
xor
mov
push
pop
stc
lea
movsl
pop
insl
pusha
push
popa
push
jo
arpl
stc
cltd
mov
inc
cs
push
cmp
mov
dec
in
xchg
push
mov
shll
jle
sub
dec
imul
pop
xor
dec
cltd
cmp
or
xor
movsl
loopne
out
test
aaa
arpl
movb
lods
pop
andl
lcall
stos
xchg
arpl
nop
fdivp
cmc
sarb
fs
push
pusha
es
int3
jnp
sub
scas
push
pop
and
dec
fwait
sub
frstor
xchg
fincstp
lock
push
sbb
imul
add
rcrl
xchg
iret
mov
out
push
out
lock
xchg
in
fwait
cld
and
cmpsl
out
repnz
pop
int
cmc
dec
sahf
add
sahf
xor
fisttpl
dec
mov
jb
outsb
fs
pop
test
sbb
jno
lahf
jp
ds
test
cld
jo
adc
ljmp
mov
xchg
repnz
clc
and
jle
mov
jo
je
aas
lods
adc
adc
icebp
into
adc
repnz
pop
jnp
pop
and
push
inc
mov
and
xor
fisubrl
dec
jno
movsb
adc
movsl
data16
cmp
jp
xor
iret
je
jnp
dec
fld
push
imul
cmp
addb
adc
int3
fadd
cmp
insb
dec
mov
dec
push
pop
mov
dec
xor
dec
push
xor
inc
ss
outsl
jns
mov
and
pop
aas
shlb
pop
add
inc
pop
in
add
fidivs
push
adc
sub
pop
pusha
sub
shld
gs
cli
paddd
ror
xchg
lods
sar
pop
fdivp
and
inc
cmp
cmp
call
stos
xor
and
decb
cs
jp
or
fsubl
outsb
cltd
jnp
sti
insb
adc
add
ret
jle
fstp
ds
push
nop
push
loopne
push
pushf
jg
pop
mov
sahf
inc
cld
iret
sbb
jecxz
pushl
int
mov
dec
xor
fcompl
js
lods
dec
xchg
sti
inc
hlt
mov
add
shll
push
xchg
mov
xchg
popf
pop
test
pop
cmp
aas
push
cmp
daa
mov
push
ja
test
xchg
adc
jae,pt
push
dec
sahf
lcall
mov
push
stos
mov
sub
leave
mov
pusha
xchg
pop
sbb
pop
push
lock
icebp
fs
daa
mov
in
scas
addr16
cmp
add
cmp
and
dec
in
scas
sub
stc
push
xorb
push
xchg
jbe
and
clc
pmaddwd
fdivrl
cmpsl
jl
xor
xor
pushf
xor
inc
aas
cwtl
add
sbb
aas
push
stc
push
add
decl
out
add
iret
repz
jne
add
jl
loopne
push
in
fwait
push
or
jns
mov
cltd
data16
and
dec
sti
adc
dec
leave
pop
dec
fldenv
daa
jge
mov
and
movsb
test
scas
ds
mov
iret
imul
push
std
iret
aas
dec
stos
mov
xchg
mov
add
mov
fcom
lahf
pop
stos
out
adc
int
popa
mov
movsb
fdivrl
cmpsb
sub
sub
fisubl
rcrb
cmovle
sarb
stos
add
mov
popf
popf
outsb
jp
inc
jns
add
sbb
cli
mov
dec
sbb
rcl
sti
js
ljmp
sbb
or
jno
xchg
cmp
push
fwait
mov
in
sbb
cli
push
mov
aad
test
adc
out
jecxz
sbb
cli
enter
dec
inc
mov
sbb
nop
dec
cmpb
mov
rorl
into
fs
push
cmpsb
aas
js
or
aam
aaa
add
cld
fwait
mov
popa
sub
mov
movsb
cli
int
movsb
cmp
call
jg
xchg
jno
push
rcr
cmc
outsb
adc
add
daa
mov
imul
sub
cwtl
push
and
dec
inc
dec
adc
push
jmp
jb
clc
jb
mov
cli
jbe
add
out
adc
out
jae
or
xor
lcall
xlat
loop
inc
stos
lret
lds
bswap
or
or
shll
xor
push
or
jl
mov
inc
jge
dec
pop
pop
cmp
mov
repz
lock
loope
ds
mov
popf
imul
and
jbe
notl
pop
dec
test
gs
hlt
mov
faddl
mov
dec
cli
mov
cld
xchg
xchg
xlat
push
std
mov
out
pop
rorb
pop
mov
out
mov
pop
pop
aas
out
push
ror
cli
dec
lock
cld
lea
add
hlt
jecxz
jp
mov
xor
jns
jmp
ret
cmp
insb
adc
sbb
add
scas
clc
movsl
mov
sub
dec
jae
pop
and
fldl
add
or
lcall
fs
mov
push
inc
dec
pop
or
jg
cmc
sub
in
outsl
nop
std
testb
loop
jle
dec
mov
lock
lock
aas
ja
mov
or
movsl
xor
jg
fldl
jp
out
cmp
clc
test
arpl
in
and
enter
jbe
in
daa
js
cmp
lods
test
cmc
dec
fnstsw
push
inc
aas
shl
call
pop
aaa
test
pop
sub
stos
lcall
pop
ficompl
mov
sbb
arpl
lret
xor
mov
sub
stos
std
pusha
mov
xchg
in
add
pop
mov
call
hlt
or
adc
cmp
out
out
or
icebp
shr
imul
int
xchg
jns
nop
ja
lock
mov
adc
jg
xlat
stos
push
mov
adc
ss
add
loope
dec
jne
std
cmc
sub
mov
out
shll
mov
dec
xor
lea
loop
cmpsb
jmp
jns
in
cmp
out
fistl
negl
dec
jmp
psraw
out
push
xchg
pushf
jae
jno
or
jbe
jp
inc
xor
lods
movsl
inc
push
mov
data16
pop
hlt
mov
pushf
arpl
mov
mov
das
jne
test
andl
clc
jmp
jo
xrelease
out
adc
addr16
ljmp
sbb
test
jmp
nop
pop
or
test
arpl
jns
sbb
sbb
fcompl
add
fdiv
jg
movsl
pop
cli
inc
cmp
imul
mov
push
in
outsb
adc
sti
push
mov
adc
mov
pop
aad
mov
sti
mov
cmp
in
loopne
jl
js
inc
aad
std
cld
stos
add
adc
jne
arpl
aad
stos
sub
push
push
jle
or
bound
sub
gs
out
wrmsr
sbb
ja
jbe
mov
es
mov
push
push
jmp
loop
mov
int3
ljmp
inc
rcrb
loopne
in
xchg
cmpsb
lcall
ja
fdivrl
in
or
xchg
sbb
mov
fdivr
xor
jo
sub
aad
xor
cmc
into
jp
inc
mov
sbb
sbbl
movsl
jb
repnz
mov
add
rcrl
xchg
jae
testl
dec
sarb
cmp
ds
cmp
xchg
shll
cmpsl
and
cmp
test
lea
lods
xor
fwait
into
and
jecxz
loop
stos
loop
inc
adc
lock
push
and
js
lock
mov
popf
rorb
shrb
pushf
adc
lret
sti
push
scas
js
sub
std
rcrb
dec
loopne
jns
xchg
mov
mov
aaa
arpl
mov
adc
je
and
jns
pushf
loopne
ds
xor
cmp
push
mov
mov
pop
adc
std
imul
lods
push
xor
lahf
outsb
faddp
hlt
pop
imul
jg
fiadds
fstpl
inc
pop
inc
sbb
cmp
test
cmpsb
and
jne
mov
shr
test
daa
daa
adc
lret
mov
inc
popa
ss
inc
insb
mov
dec
lea
pop
es
icebp
fistps
jno
mov
jnp
fdivrp
mov
mov
stos
xchg
stos
sub
xor
fnstcw
jle
shll
jl
insb
outsl
out
mov
add
xchg
in
insb
jns
sbb
fisubrs
fdivp
cmc
fadds
dec
jl
pusha
xor
mov
xor
sbb
add
je
jle
cmp
shll
jmp
add
mov
pop
jns
dec
loope
test
jmp
jge
loopne
jge
pop
inc
push
ret
mov
pop
dec
inc
sub
cmp
add
mov
xchg
add
sub
push
sbb
sbb
adcb
sub
xorl
cmpsb
outsl
dec
add
loope
movsl
icebp
ficoms
push
js
clc
scas
lods
fadd
cmc
std
jg
testl
mov
adcb
popa
inc
pop
pop
jnp
adc
cmc
sub
and
fildl
loopne
pop
adcl
test
ret
std
mov
push
dec
dec
jmp
inc
pop
clc
mov
aam
sbb
fdivr
dec
aas
fistpl
mov
inc
xor
std
add
add
stc
pop
jb
add
add
addr16
mov
lock
push
adc
fdivrs
inc
mov
outsl
and
dec
sbb
push
stc
stos
xchg
mov
dec
mov
inc
sub
inc
shlb
ffree
in
mov
mov
faddp
flds
fsub
mov
push
add
divb
sti
hlt
aas
pop
cmp
and
mov
mov
shrl
pushl
mov
jo
std
jl
cli
push
inc
out
fisubl
sub
je
insb
inc
mov
imul
repz
mov
jg
aad
or
cli
rcl
lds
movsl
into
cmp
icebp
jno
and
and
mov
out
cmc
adc
repnz
mov
bound
fnstenv
enter
cmp
sub
pop
imul
dec
mov
enter
add
pop
lock
scas
xor
decb
jge
repnz
js
xorl
adc
stos
aad
clc
ds
sahf
fistl
cmp
cwtl
ror
mov
xchg
popf
xchg
dec
pop
add
cmp
sbb
std
rcrl
xchg
push
out
or
rclb
insl
dec
rolb
jl
test
dec
loop
pop
out
mov
in
hlt
cmp
inc
xchg
in
lcall
mov
add
addr16
test
orb
es
mov
aam
cltd
mov
sbb
js
imull
popa
inc
leave
mov
mov
add
imul
dec
and
fiadds
in
out
push
insl
scas
test
xchg
push
jmp
and
dec
loope
and
aaa
inc
not
pop
pop
and
dec
jne
rcrl
pusha
cs
in
lea
shll
add
je
stos
icebp
mov
aad
push
jg
xor
test
cmp
ss
push
dec
int3
adc
mov
pop
out
divl
push
out
cmp
movsl
pop
iret
push
insl
and
xchg
and
or
and
je
xchg
sub
jne
sbb
mov
int
call
jns
add
lea
push
add
fwait
xchg
and
push
jg
sbb
add
ficoms
cmp
lods
lret
mov
loopne
jno
adcl
sub
aad
pop
addl
sub
cld
call
movsb
pop
inc
lret
dec
test
fwait
push
fisubrl
dec
push
daa
mov
push
insb
das
and
ror
scas
and
inc
in
cld
jne
nop
mov
xlat
mov
insb
negl
dec
pop
dec
inc
fcomp
movsb
jnp
daa
je
xor
clc
sahf
add
iret
inc
scas
shrl
lret
inc
inc
nop
and
dec
in
push
ljmp
xchg
adc
inc
push
inc
imul
out
lods
xchg
xor
ljmp
and
movsl
dec
adc
fsubrs
in
inc
flds
jnp
xchg
push
xor
pop
in
add
lods
sbb
push
mov
jecxz
fcmove
in
pushl
cmpl
fwait
cmpsb
cmp
xorb
mov
jge
lock
cmp
mov
adc
jge
das
je
lock
js
mov
out
sub
ds
insl
and
out
mov
mov
loopne
or
or
in
aam
add
into
ljmp
inc
mov
stos
xor
sarl
xor
lea
mov
rol
cmpsl
cmp
leave
loopne
mov
cltd
out
xchg
dec
int
testb
pop
jge,pn
shll
fs
lahf
adc
mov
cmp
mov
imul
mov
or
sbb
cmp
lods
fcoml
and
sub
mov
jp
jle
gs
cmp
mov
sbb
gs
daa
jp
ret
jg
xor
into
shrb
shll
xchg
pop
jl
push
popa
xorl
loopne
lret
mov
jmp
add
push
pop
xlat
mov
xchg
sub
jp
dec
or
xchg
jnp
clc
mov
leave
inc
hlt
cmp
fadd
and
jno
imul
push
mov
cmp
dec
test
mov
in
sbb
out
mov
scas
push
cs
loope
icebp
enter
mov
dec
pop
pop
cmpl
das
jae
cmc
or
sub
in
icebp
inc
mov
adc
ja
cld
xor
and
pop
push
leave
mov
adc
or
inc
sbb
lret
jae
es
inc
xchg
js
mov
xorl
lds
sahf
std
fistpl
fucomi
movsl
mov
aaa
shrb
add
in
lcall
dec
fdivs
and
bound
jp
push
adc
sbb
std
aam
rol
dec
mov
sbb
xchg
std
aam
mov
pop
mov
cmc
cmp
out
mov
rcrl
loopne
push
les
inc
int
sbb
xorl
test
xor
insl
sbb
imul
mov
and
pop
fistps
outsb
lea
mov
repnz
jle
jb
insl
sub
sub
mov
pop
ret
mov
xchg
in
inc
in
xchg
sub
add
pop
loope
adc
adc
sub
cmpsb
mov
push
push
xor
cmp
pop
in
stc
mov
jns
xchg
push
cmp
inc
mov
pusha
pop
dec
std
mov
std
ret
sbb
pushf
xchg
adc
lahf
pop
scas
mov
mov
iret
shll
mov
sub
test
pop
inc
jecxz
cmp
dec
jmp
mov
dec
xchg
sbb
sbb
sarl
popa
dec
dec
popa
iret
xor
scas
lods
mov
pop
xlat
lock
add
add
mov
mov
adc
add
icebp
jnp
and
push
inc
dec
bound
out
sbb
inc
adc
fimull
in
pop
lret
sarl
push
mov
pop
add
je
xchg
cmpsl
mov
mov
push
dec
dec
loope
les
or
xor
test
ret
data16
push
mov
gs
xchg
fs
fwait
xlat
inc
cmpsl
mov
sbb
popf
std
sbb
inc
cmp
sbb
pop
push
ds
mov
pop
sub
movsl
pop
ret
sarl
adc
mov
cs
fwait
sub
out
mov
cmp
js
ret
movsb
inc
aas
aas
sbb
jmp
push
jne
mov
stos
jbe
xor
popf
lret
dec
jne
arpl
and
rcll
outsb
mov
lds
aas
jle
push
lret
outsb
scas
adc
faddp
or
mov
add
aam
lods
push
sub
pop
xchg
adc
andl
in
mov
jb
cmc
fsubl
insb
cmpsl
xor
push
fdivl
arpl
and
lcall
mov
adc
mov
mov
xchg
dec
subl
mov
inc
enter
js
mov
cmp
sbb
imul
push
mov
xchg
stc
mov
fadds
mov
mov
sbb
ret
arpl
and
outsb
pop
and
jnp
cmpb
jge
lds
sbbb
dec
rcll
mov
cmpl
dec
mov
cmp
loopne
loop
sbb
and
cmp
mov
sub
xlat
dec
pusha
ljmp
mov
pusha
jnp
fwait
adc
lsl
fwait
leave
dec
add
addb
in
push
or
mov
aaa
insb
sbb
js
adc
test
pushf
outsb
clc
xchg
mov
xchg
inc
sbb
dec
sbb
xchg
int
inc
jle
or
push
lods
pop
inc
rcll
lods
mov
xchg
jge
inc
jle
push
insl
movsl
or
xchg
test
pop
dec
mov
mov
sahf
pop
jl
xor
orl
mov
sub
and
jb
mov
mov
insl
adc
mov
aaa
or
mov
mov
mov
sub
mov
mov
xor
inc
mov
mov
push
jae
pop
mov
xor
into
mov
ret
push
aam
loope
fs
mov
sbb
out
call
mov
bound
push
adc
or
push
outsb
arpl
scas
jae
and
rcrl
push
outsb
lahf
daa
mov
cmp
stc
in
xor
nop
pop
sarl
jne
icebp
xor
push
in
jp
xor
add
mov
sub
out
and
xor
and
mov
inc
arpl
inc
pushf
in
or
pop
mov
pop
cwtl
in
xor
sbb
push
rcrb
mov
mov
stc
push
inc
shl
loop
pop
jns
xlat
mov
add
xchg
test
push
push
mov
outsl
adc
popf
fdivrs
mov
push
xchg
ja
push
das
sbb
insl
jecxz
sahf
pushf
pop
sarb
fiadds
repnz
sbb
int
cwtl
cmp
dec
jb
mov
dec
xor
loope
push
jl
add
f2xm1
out
dec
xlat
or
rcrb
mov
arpl
push
push
cmp
xor
faddl
repnz
mov
imul
jle
jne
ret
pop
cmpl
inc
cmpsb
pop
push
clc
push
cli
adc
sub
dec
shlb
mov
inc
cs
int
clc
imul
movaps
push
movsl
xchg
adc
and
pop
cmp
mov
adc
mov
mov
cmpsl
popa
or
sbb
nop
pop
sbb
inc
dec
cwtl
pusha
leave
cld
pop
mov
ss
dec
cmp
lds
adc
shlb
xor
mov
out
mov
sub
jnp
push
cmp
inc
cmp
pop
xchg
outsl
test
jp
jae
adc
cmp
and
mov
outsl
pop
decb
stos
sbbl
cmp
ja
fsub
mov
cmpsb
sub
sbb
push
movsl
bound
jnp
cmp
mov
out
cpuid
mov
push
iret
xor
outsl
pop
mov
push
and
dec
pop
movsb
cs
pop
jl
cmp
aaa
jo
sbb
sub
mov
mov
mov
inc
loop
call
ljmp
fwait
int3
fs
data16
daa
jne
push
dec
lea
mov
xor
iret
adc
dec
and
sub
push
jb
das
scas
and
jnp
insl
movsb
jnp
mov
xchg
xor
loopne
mov
cltd
push
push
xlat
pop
insl
in
sarb
add
or
cmp
push
xchg
bnd
movsl
jno
adc
mov
jae
xor
cs
push
shr
test
loope
jmp
xor
fs
mov
repz
fst
xchg
testb
adc
ret
push
add
pop
xor
mov
and
dec
test
mov
inc
or
jb
mov
in
nop
mov
test
daa
mov
adcl
and
push
mov
aad
repnz
les
jo
in
movsb
push
mov
xor
in
and
out
sti
pop
pop
sbb
fbstp
jmp
loop
sub
lret
call
std
stc
loope
xlat
ss
mov
mov
adc
lods
cmpsb
jp
xchg
in
sbb
jle
sub
lret
lock
rclb
xchg
inc
ficomps
jb
adc
mov
cmp
mov
xchg
cmp
insl
inc
cli
jo
pop
rcrb
push
dec
push
dec
scas
sbb
push
jbe
or
cmp
inc
jecxz
les
pop
loope
push
inc
pop
addr16
hlt
and
shrl
xchg
mov
enter
sahf
dec
mov
dec
loop
xchg
pop
xor
and
cmp
stos
jl
sarb
pop
insb
sti
adcl
lret
mov
mov
pusha
inc
pop
ds
shlb
dec
mov
jmp
or
test
push
mov
jno
adc
mov
cmp
pop
xchg
cmpsl
sub
dec
fwait
imul
icebp
xor
into
dec
int
addr16
addb
ret
xchg
inc
xor
jbe
mov
popa
rcr
cmpsb
add
aam
out
ret
outsl
inc
jp
push
sbb
or
fisubl
ja
jno
sbb
xchg
fmull
jecxz
cmp
insb
aas
pop
push
scas
sbb
out
push
test
mov
ror
sub
mov
mov
mov
into
adc
jp
or
cmpsl
push
js
or
into
adc
or
push
cmc
arpl
ss
rcrl
mov
or
ja
cmp
inc
sub
fwait
xorl
pop
stos
stos
pop
mov
loop
xor
xchg
lahf
inc
push
dec
frstor
or
je
mov
and
cmp
nop
int
add
repz
jl
fmul
imul
push
cwtl
sbb
into
jo,pn
adc
sahf
outsl
push
mov
aas
xor
movsl
ret
gs
ret
fidivl
aam
xchg
repz
das
pop
push
hlt
pop
pop
push
mov
mov
sub
and
je
jno
mov
and
rorb
xor
dec
js
dec
push
sbb
jnp
jnp
fadds
gs
arpl
popf
daa
outsl
sub
fsts
and
stos
iret
xor
push
mov
xchg
int
adc
arpl
dec
mov
nop
pop
divb
ljmp
sub
out
ficoms
out
mov
mov
cld
adc
sub
mov
cld
fisttps
out
cmp
dec
pop
xor
dec
mov
mov
outsl
imul
xchg
clc
push
cwtl
clc
mov
sub
test
add
xchg
mov
xlat
add
movsl
insb
mov
mov
push
xchg
inc
js
pop
sub
jno
mov
fsubs
mov
mov
enter
outsb
imul
fs
test
xor
repnz
xor
pop
fs
clc
in
mov
pusha
pusha
xchg
orb
fs
add
daa
aaa
outsl
les
leave
inc
jmp
fs
ret
mov
pop
leave
fwait
inc
ja
data16
cmp
out
sub
leave
jne
pop
cmpb
inc
xchg
mov
xchg
inc
mov
cmp
outsl
ret
mov
sbb
cltd
dec
jnp
cld
enter
xchg
sub
inc
lcall
popf
iret
or
pop
stc
cmp
jg
and
lods
jne
mov
fisttpl
inc
mov
xor
int3
mov
mov
cld
or
pushf
fidivs
testl
insl
pop
or
mov
mov
pop
cmpl
pop
adc
pop
iret
xor
gs
xchg
xor
mov
movl
pop
xor
jne
xchg
jnp
ret
adc
cmp
lods
push
push
sbb
inc
movsl
pop
cwtl
jmp
mov
xchg
cmc
dec
bound
push
out
pushf
clc
jb
push
insl
or
loopne
cmp
mov
inc
in
cwtl
dec
gs
xchg
push
imul
inc
xchg
outsl
push
lcall
jo
inc
xor
or
pushf
rcl
cmp
dec
cwtl
and
pushf
rcrl
out
mov
shll
sbb
bound
into
jae
inc
imul
bound
dec
je
lea
or
sub
mov
push
movsb
outsl
sub
mov
jnp
dec
jae
repnz
jg
sti
cmp
idivl
lret
jg
lock
out
cmp
int3
or
sar
lahf
clc
lods
arpl
xlat
shll
xchg
sbb
and
insb
adc
enter
inc
push
sub
add
lock
mov
or
push
jo
add
ljmp
adc
cmc
pop
enter
lock
sbb
cli
xchg
mov
and
daa
pop
cmpsl
arpl
pusha
popa
pop
mov
adc
push
mov
test
pop
jge
insl
dec
pop
jp
call
mov
pop
bound
sub
and
cmp
cmp
or
shr
push
js
push
adc
sbb
das
xor
jmp
inc
cli
cmp
out
ret
or
pop
adc
imul
rcrl
mov
mov
jmp
and
or
push
fmuls
inc
dec
sub
ljmp
fisttps
jmp
pop
loope
aam
xlat
sub
adc
xchg
ja
xor
imul
bound
jnp
xor
frstpm(287
mov
cmpsb
loopne
mov
adc
lret
mov
mov
add
test
stos
mov
test
xor
push
repz
xor
pop
stos
sub
int
add
mov
push
sub
pop
inc
dec
mov
mov
sahf
daa
stos
jo
mov
test
aas
push
mov
xlat
pusha
and
adcb
jb
pop
nop
cmp
or
pop
or
popa
dec
cmc
pushf
scas
jns
or
call
xor
movsl
adc
xchg
cmc
add
jmp
dec
cs
or
imul
pop
sub
dec
jge
push
mov
jmp
xorb
mov
fldl
scas
cmp
mov
xchg
in
inc
cmp
insb
cltd
loopne
jae
mov
in
pop
jmp
inc
daa
mov
fnstenv
inc
aas
pop
aam
xor
push
mov
rcrb
int3
pop
aaa
rorb
addr16
stos
and
mov
popa
push
xorl
outsl
test
sub
or
shrb
sub
adc
mov
rsm
jecxz
mov
je
scas
test
sub
cmp
out
es
rcl
pop
pop
lret
cmp
or
push
cltd
mov
jns
cmp
xor
shlb
fsts
jb
push
or
pop
mov
lods
clc
lcall
inc
inc
loopne
mov
adc
inc
in
jo
outsl
popa
lods
pop
or
jp
jno
cmpsl
xor
xchg
mov
lea
push
push
rorl
add
xor
stos
out
mov
insl
add
pop
xorl
cltd
cmpb
and
sbb
enter
js
subl
iret
xchg
mov
inc
xor
xor
cmp
xchg
xor
jbe
cli
xchg
cmp
jp
into
mov
imul
faddp
sbb
jle
pop
or
pop
outsl
inc
fistps
dec
stos
mov
push
xor
jmp
xchg
push
cli
lods
sub
sub
mov
xchg
push
gs
mov
adcl
push
rorl
in
adc
inc
int
scas
adc
ret
push
cltd
mov
in
adc
push
sbb
adc
sub
outsb
jle
stos
jae
jne
mov
pop
push
lods
dec
cwtl
pop
hlt
inc
inc
nop
jns
and
movsb
and
shl
leave
leave
adc
inc
xor
sub
fimull
fimull
scas
in
fwait
jle
sahf
jp
cmp
lods
xor
imul
xchg
sti
shll
lret
jns
inc
pop
or
mov
push
mov
xchg
mov
or
or
pop
outsl
sub
mov
pop
inc
xchg
xchg
mov
sub
push
aas
adc
lea
ret
aas
stos
push
inc
mov
mov
aas
pop
push
xchg
inc
fnstenv
cltd
daa
fcmovne
sub
scas
adc
imul
pop
shrb
lods
cmp
cmc
xorl
sub
addr16
out
imull
xor
adc
bound
stc
leave
fldcw
cmp
popf
push
pop
jno
mov
es
mov
bound
bound
test
jecxz
mov
sub
add
or
andl
fscale
ret
mov
cmp
push
cld
pop
cmp
out
shrb
jp
inc
sub
into
and
push
les
enter
xor
sub
pop
fwait
ds
out
inc
lods
call
subl
jbe
pop
jecxz
dec
jne
aas
shlb
jbe
or
iret
jmp
jns
push
or
pusha
in
xchg
sbb
mov
mov
jnp
mov
dec
mov
cmp
jbe
xlat
or
dec
sbb
cmp
adc
xchg
insl
xchg
lods
in
inc
mov
out
fwait
pop
pusha
enter
jge
adc
lret
shrl
mov
out
add
rclb
xor
inc
dec
or
lods
xor
push
add
mov
daa
or
cmc
jmp
mov
es
repz
dec
int3
xchg
xchg
dec
add
add
fisubs
jbe
ljmp
and
loop
dec
fcoml
dec
rcl
sti
dec
imul
addl
lods
add
mov
sub
cmp
cld
int3
adc
dec
pop
repz
out
push
mov
loopne
daa
pop
das
mov
xchg
fcomp
mov
scas
imul
out
add
push
sub
ss
mov
int3
xchg
and
aam
rolb
insl
mov
pushf
xor
outsb
cmp
dec
hlt
mov
xlat
mov
inc
cmc
and
cld
dec
out
cmc
push
add
mov
popa
pop
inc
repz
mov
sub
enter
mov
pop
ja
pop
sub
roll
mov
shll
imul
pop
push
dec
dec
enter
test
test
aas
jae
or
inc
fmull
into
sbb
cmpsl
aad
jecxz
les
dec
jge
or
icebp
cli
add
mov
xchg
pop
push
fiaddl
push
jae
inc
sbb
push
mov
mov
xor
loope
cmpsl
insl
mov
or
xchg
int3
fnstsw
jo
int3
lods
jb
js
insb
jnp
bound
jge
sbbb
xchg
sbb
arpl
sahf
mov
push
mov
mov
cmp
cmp
dec
aas
jmp
ljmp
mov
aaa
mov
adc
sub
pusha
add
int
pushf
xor
mov
lcall
push
jns
adc
or
pop
inc
in
and
arpl
call
adc
push
mov
jnp
pop
add
jbe
fcomps
sub
jns
add
inc
loopne
adc
inc
rcrb
clc
fdivl
push
xor
das
push
inc
fwait
mov
xchg
or
in
into
jnp
data16
sahf
pop
iret
insl
xchg
adc
sbbb
stos
xchg
pushf
dec
imul
nop
pop
dec
sub
pop
fidivrs
sbbl
add
ret
in
sbb
frstor
arpl
outsb
repz
lahf
push
cmc
inc
mov
fldcw
fistpll
je
mov
aam
out
lods
xorb
and
mov
push
orl
sbb
mov
int3
inc
loop
ss
jp
xor
stos
std
jecxz
and
adc
push
jne
dec
xor
push
repz
push
arpl
icebp
cli
aaa
das
inc
jb
mov
pop
adc
dec
add
mov
dec
mov
out
and
gs
shl
mov
popa
int3
outsb
enter
int3
std
fildll
or
or
mov
daa
es
mov
out
lock
pop
arpl
or
dec
lods
pop
sbb
movsl
cmp
pop
test
pushw
cltd
cmp
lret
adc
in
mov
xor
sub
movsl
sbb
xchg
dec
mov
dec
je
push
inc
dec
push
iret
dec
jae
fidivrl
fimuls
mov
push
mov
push
imul
in
jno
ja
mov
cmp
push
test
inc
rcrb
add
sub
mov
mov
dec
pop
adc
xor
popa
mov
addr16
adc
and
sub
push
jno
cmp
sub
jp
lahf
pop
xchg
in
jae
mov
adc
mov
call
sub
cmp
or
lahf
xor
pop
lods
or
pop
aaa
jecxz
cmp
andl
imul
xor
sbb
inc
xchg
inc
std
jp
push
xchg
pop
lret
and
pop
popa
out
hlt
add
pop
pusha
and
push
mov
ficomps
ret
dec
sti
push
jb
inc
xor
ret
mov
cli
ja
loop
popf
popa
mov
std
mov
mov
mov
push
pushf
xchg
cmp
mov
pop
out
aas
outsl
cmp
or
test
xchg
sbb
fsubl
sbbb
mov
into
adc
and
push
sbb
std
sarb
push
add
dec
dec
jmp
cmp
sbb
lds
xchg
test
idivb
and
adc
lret
jp
popf
adc
aaa
rorb
out
jb
pop
int
cmp
cmpsb
cltd
loopne
mov
fildl
cltd
call
pop
sbb
sbb
je
fdivl
inc
int3
mov
clc
xchg
push
je
mov
dec
scas
insb
movsb
rcrb
mov
adc
imul
nop
or
xchg
popf
dec
cmp
or
mov
or
mov
jmp
out
ds
pop
cmp
inc
mull
jbe
js
cltd
aam
imul
mov
lcall
hlt
repnz
mov
jle
std
xchg
int
sbb
pop
sub
jns
cmp
and
lods
mov
rolb
inc
sub
cltd
scas
mov
jecxz
inc
adc
movsb
mov
mov
mov
lods
xchg
xchg
xchg
push
jno
lock
adc
lcall
or
js
mov
push
push
cmp
addr16
aad
popf
sbb
mov
fstp
mov
in
arpl
lret
mul
adc
xchg
pop
xor
dec
jb
pop
lea
adc
rorb
sahf
cmp
xchg
in
clc
xchg
je,pn
js
inc
mov
ret
ss
jle
xlat
and
std
jmp
and
inc
dec
sub
imul
push
pusha
mov
mov
xchg
xorb
lahf
jno
ds
cmpsl
dec
and
movsb
sbb
pop
cmc
scas
jp
dec
in
hlt
out
call
xchg
inc
jne
dec
shlb
leave
addr16
cltd
mov
jnp
pop
dec
push
lret
inc
sub
mov
add
dec
and
xor
or
jae
aaa
loope
xchg
mov
testb
popl
sub
pop
into
cmp
clc
and
outsb
ret
ja
je
inc
aad
cmp
dec
mov
push
arpl
outsl
jg
pop
fisubrl
aas
rorb
mov
mov
adc
movsl
nop
out
loop
ficoms
mov
push
stos
push
or
in
inc
mov
negb
fisttps
adc
jnp
push
sarb
loop
mov
insb
inc
mov
sbb
inc
loop
leave
inc
je
xchg
pushf
pop
inc
sub
xchg
dec
popl
xchg
sub
icebp
jb
lahf
lret
xchg
ljmp
sarb
mov
jnp
pop
and
test
rcll
jmp
adc
or
idiv
jae
test
mov
insb
sti
or
xchg
or
cmp
pop
sysexit
xor
cmp
mov
popf
lcall
insb
lods
xchg
insb
in
or
jne
outsl
mov
sub
sbb
or
aaa
jecxz
nop
inc
in
sbbl
imul
mov
sbb
in
adc
bound
jo
mov
orl
jo
fistl
fstpl
sahf
adc
add
fisttps
pop
or
push
stos
out
or
lods
enter
sub
shl
cli
stos
scas
mov
mov
insb
jo
xorb
insl
cmp
pushf
shr
mov
sub
xor
sub
and
xlat
xlat
es
testl
flds
clc
movsl
xor
icebp
in
vxorps
mov
scas
mov
mov
sub
mov
mov
daa
mov
add
adcl
sub
mov
mov
stos
sbb
mov
popf
pop
test
or
fistl
or
mov
stos
loop
cmp
push
and
dec
call
int3
lcall
push
pop
popf
and
shll
push
lea
mov
ds
daa
mov
cwtl
jl
sub
mov
pop
inc
pop
outsl
cltd
jns
push
xor
mov
xchg
cmp
movlps
addr16
dec
daa
subb
es
mov
push
es
sub
stos
bnd
xchg
push
int
test
enter
int3
mov
insl
adc
rcll
and
cmc
arpl
mov
or
lock
inc
sbb
mov
adc
push
out
sbb
adc
loop
cmc
pop
and
mov
mov
and
loope
gs
mov
add
fidivrl
pop
xchg
jp
or
pop
pushf
cmp
mov
insb
mov
dec
cmpsb
ret
mov
adc
sbb
mov
sbb
daa
dec
push
pop
out
fs
add
fwait
bound
jae
lret
nop
jo
cs
inc
inc
pushf
sbb
mov
mov
jmp
or
sbb
out
cmpb
icebp
pushf
popf
in
lods
dec
adcl
mov
rol
mov
mov
sub
adc
lods
leave
rcll
lock
adcl
sub
add
push
inc
int
lods
nop
js
pop
jb
aam
mov
cmc
cmp
and
mov
xchg
negl
adc
call
loope
xchg
ljmp
cmp
adc
filds
and
lods
test
int
sbb
lahf
dec
cmp
add
jp
xlat
xor
jmp
dec
xor
jno
inc
sbb
pop
and
jbe
push
test
addb
mov
popa
cmpl
js
insb
cwtl
sub
xchg
decl
jbe
dec
hlt
das
cmpsl
and
adc
push
add
jecxz
cmp
out
pop
call
lock
scas
cmp
clc
push
frstor
dec
or
orl
push
push
js
out
ja
and
filds
neg
mov
daa
cmpsb
adc
test
movsb
imul
adc
ss
insb
mov
in
push
sarl
sbb
xor
mov
or
cs
push
lods
popf
rorb
rcl
xor
arpl
mov
cmpsb
sarl
adc
ret
cmpsb
cltd
sbb
mov
out
and
pop
ret
sbb
cmpsb
cmpsl
and
mov
aad
aam
push
sarb
inc
push
cmp
in
lcall
dec
push
push
rorl
fsub
jecxz
jns,pn
jle
repz
pop
pop
fbld
mov
test
cmp
xchg
cltd
jmp
mov
dec
cmpsl
leave
int3
data16
inc
add
sub
into
lds
fldt
sahf
jmp
mov
xor
es
sbbl
addr16
mov
xor
cmp
add
mov
cmp
xlat
fwait
ja
cmp
arpl
das
ds
pop
mov
ljmp
sbb
stos
into
pop
xor
and
pop
movsl
test
sub
and
mov
or
pop
xchg
ret
and
mov
iret
mov
arpl
pop
es
xor
cli
aaa
push
std
sbb
mov
outsl
push
and
mov
inc
enter
and
sub
ljmp
lods
cmp
je
jle
rorl
sbb
adc
mov
jo
mov
mov
aam
ljmp
push
inc
das
xor
and
push
orb
test
adc
mov
les
or
cmp
adc
jge
lcall
xor
sti
stos
push
cltd
pop
popf
dec
mov
dec
in
fs
sub
mov
mov
daa
jg
loopne
pusha
pop
push
inc
jo
mov
sbbl
jo
and
lcall
stc
xor
mov
movsl
iret
lahf
lods
stos
xchg
mov
push
push
cmp
pop
inc
or
xchg
movsb
pop
movsl
xchg
xor
arpl
cltd
shl
jbe
cltd
mov
shll
sbb
notb
push
dec
mov
cmpsl
sbb
jle
fs
adc
sbb
shrb
stc
sbb
or
pop
xchg
cmp
out
pop
dec
push
sahf
ja
pusha
imul
int
add
rorl
mov
add
pop
add
xor
sbb
inc
scas
mov
aas
jl
loop
gs
add
test
decb
pop
xchg
mov
mov
scas
sub
ss
leave
add
dec
lret
and
and
xchg
pusha
int3
xor
shll
outsb
mov
jae
xchg
add
js
loopne
add
testl
mov
andl
in
or
pop
out
mov
jp
addr16
sub
movsl
lods
dec
xchg
mov
cli
jp
les
lock
jbe
pop
mov
stc
xor
sbb
nop
gs
push
jne
push
push
in
out
das
lret
pop
pop
sti
es
or
gs
dec
add
inc
inc
add
mov
insb
push
push
fsubp
pop
xor
cmp
out
cs
leave
in
imulb
dec
loope
jne
test
sub
sbb
or
cltd
mov
imul
or
fdivp
inc
pop
cld
out
adc
mov
les
std
lret
shr
adc
fwait
sbb
scas
jl
clc
stos
imul
sub
rcl
pushl
mov
fwait
lahf
pop
mov
in
inc
jl
sub
mov
xchg
ljmp
pop
jge
shrl
add
shlb
test
shl
dec
mov
jg
push
cmp
mov
fiaddl
icebp
pop
and
call
ljmp
incl
inc
inc
imul
mov
out
sti
aad
cli
ljmp
add
loope
sub
loope
daa
sbbb
mov
xchg
mov
aam
or
or
jecxz
and
int3
jmp
insb
not
stos
inc
lahf
les
adc
dec
sarb
lds
mov
arpl
hlt
mull
fbld
lahf
fadds
xor
cld
mov
push
lock
ds
push
mov
adc
popf
in
rcl
cmp
inc
in
mov
mov
enter
out
dec
jp
mov
dec
sbb
sbb
outsl
xchg
or
sarl
leave
iret
lods
fstps
movl
jecxz
dec
inc
clc
lds
inc
fisubl
push
sub
or
xor
jb
les
add
and
out
jecxz
pop
stos
add
cs
cli
cmp
mov
xchg
gs
push
xorb
out
ret
or
mov
rcrb
das
jp
loope
imul
int
jne
cmpsb
mov
jno
mov
jae
pop
daa
adc
mov
mov
nop
data16
rcll
mov
jp
xor
xor
or
lcall
loopne
test
add
mov
call
adc
iret
jo
test
sbb
push
loope
addr16
mov
jge
aas
jb
push
ljmp
in
loopne
hlt
jnp
cmp
mov
inc
xchg
inc
mov
push
xor
mov
or
fldcw
lcall
mov
mov
xchg
loopne
test
shl
aad
add
dec
mov
jecxz
mov
pusha
xchg
xchg
lahf
cmpsb
andl
aaa
pop
jle
jmp
or
pushl
or
jnp
aam
dec
test
xchg
inc
jle
mov
je
std
movsb
fsin
mov
push
aas
cmp
push
das
push
std
aas
ret
clc
xor
incb
push
fistpll
in
adc
call
mov
arpl
add
stos
shlb
out
jb
push
out
lcall
pop
lahf
mov
js
add
leave
push
and
mov
cli
sub
xor
fistl
mov
std
or
stos
xor
jle
sbb
and
shr
or
repz
icebp
fsubr
mov
add
cmp
out
icebp
pop
or
xchg
aam
ret
fldenv
cmp
mov
jl
mov
cmp
cmc
sub
fimuls
movsl
add
ret
scas
addr16
and
and
or
and
pop
lret
cmpl
call
hlt
pop
cmp
mov
loope
mov
ljmp
push
in
cmpsl
stc
push
cld
push
push
push
imul
imul
jecxz
iret
std
movsl
outsb
push
sbb
mov
xor
dec
rol
fmuls
push
shl
pop
and
xchg
pushf
push
aas
dec
mov
js
pop
or
cmp
or
je
iret
push
stos
mov
pop
add
out
jmp
push
inc
loope
sbb
js
es
adc
mov
fisubs
mov
cmp
push
mov
or
adc
push
stos
sarb
push
jno
jg
pop
jne
pop
and
push
addr16
out
out
lods
mov
xchg
or
inc
mov
mov
cmp
sub
test
cltd
addr16
imul
mov
and
pop
jmp
adc
data16
cld
pusha
jne
fisttpll
stos
cmp
in
sub
mov
mov
cld
daa
pop
js
aaa
jle
shll
jne
jns
callw
dec
icebp
test
test
dec
mov
repz
fimuls
cmpsl
inc
cltd
sub
xchg
jnp
jecxz
jecxz
andl
lret
les
sahf
push
inc
jnp
mov
test
sub
into
xchg
dec
push
out
mov
xchg
int
or
hlt
cmp
jp
test
adc
xchg
mov
xchg
jnp
xchg
aaa
dec
in
imul
scas
shlb
mov
data16
pop
orps
mov
mov
fisubrs
je
sti
pop
int
dec
sti
adc
mov
popa
mov
or
dec
mov
sti
or
push
pusha
pop
dec
mov
fwait
ret
sti
test
mov
repnz
xor
push
jle
shr
test
dec
push
jbe
push
scas
test
mov
lods
xchg
adc
inc
jns
mov
push
jns
xor
xor
mov
sbbb
stc
pop
iret
ror
inc
ficomps
bound
roll
cli
fwait
xlat
icebp
imulb
out
jae
int3
sti
cmc
out
not
mov
cli
into
sbbl
aam
negl
jo,pt
insl
insb
icebp
xchg
cmpsl
fimuls
fildll
jb
pop
push
jl
popa
mov
dec
fdivr
cmc
mov
push
cld
pusha
jg
jmp
mov
testb
clc
xor
std
and
shl
ja
mov
je
rcrl
cli
bound
add
ret
addr16
mov
inc
hlt
lods
inc
cmp
mov
hlt
sub
mov
fcomps
mov
xor
lods
ret
sbb
lcall
je
push
jg
mov
inc
sbb
insb
fincstp
fmuls
or
orb
xchg
push
pushf
xchg
dec
and
fcompl
aaa
inc
cwtl
push
mov
lods
std
xchg
bound
mov
hlt
dec
mov
test
jae
pop
ja
sub
mov
push
scas
aad
mov
mov
adc
pop
mov
xor
mov
inc
mov
mov
mov
mov
sub
pop
dec
sahf
stos
cmpsb
mov
jl
mov
lret
adc
jns
testb
sub
daa
sub
sub
lds
jno
cmpsl
pushf
and
cwtl
xor
sti
mov
insb
adc
pop
test
lahf
in
sub
jle
inc
jmp
call
int3
xor
sub
xor
cmpsb
and
adc
pop
pop
jne
stc
ljmp
scas
into
xor
ss
movsb
mov
push
idiv
hlt
pop
mov
dec
xchg
sbb
outsw
jne,pt
cmpsl
pop
pop
pcmpeqd
cmp
ljmp
pop
fisubrl
cmp
ja
mov
push
sub
in
inc
out
pop
bound
ja
popf
js
fucomi
enter
hlt
aas
int
mov
nop
hlt
stc
xchg
adc
hlt
outsl
add
inc
test
pop
lods
mov
push
adc
mov
pop
or
jbe
test
es
lock
xchg
mov
out
lcall
pushf
sbb
int
mov
inc
pop
test
push
add
dec
popf
jp
and
jmp
icebp
fsubrs
in
lcall
insb
das
mov
out
pop
and
mov
inc
lret
enter
iret
test
ljmp
xlat
xor
xchg
sbb
rcr
jle
mov
mov
fwait
jno,pt
sub
pop
hlt
sub
fsubs
mov
inc
addl
pop
cltd
movsb
je
in
les
insl
xchg
mov
mov
sti
add
rcll
adc
pop
adc
adcb
mov
out
mov
pop
push
fbstp
rcrb
xchg
repnz
stos
ja
pop
fistpl
or
std
shll
cmpl
fwait
jle
jl
data16
repnz
mov
adc
lahf
jecxz
push
iret
sahf
pop
dec
aas
std
sarb
das
cmpsl
xchg
dec
rcl
clc
xchg
or
loope
lods
cld
push
jnp
out
and
mov
pop
jg
out
js
test
ds
pop
out
ljmp
cltd
jg
dec
xor
mov
jp
xchg
fdivrp
inc
aas
arpl
adc
mov
subb
icebp
jp
gs
and
shll
pop
nop
dec
cli
xor
jg
inc
out
ret
mov
imul
sahf
jecxz
das
stos
dec
rorb
mov
call
cli
push
das
jnp
jne
stc
sbb
xchg
repz
mov
pop
icebp
sub
fstpl
or
mov
clc
pmulhw
std
and
adc
jnp
sub
out
cmp
lahf
inc
jle
xor
es
or
fadds
add
jns
sub
push
aas
jp
ds
out
pusha
test
movsl
sahf
out
out
mov
sbb
pusha
jnp
pop
in
xchg
outsl
push
test
cmpsb
lea
inc
xchg
nop
push
jp
cmpsb
xchg
fisubs
adc
jnp
pushf
notl
jmp
push
xlat
jmp
dec
cwtl
mov
pop
fsubr
fdivrs
ds
je
sub
xor
ds
sbb
inc
lock
ret
mov
xchg
jmp
scas
pop
push
icebp
test
inc
push
and
mov
dec
mov
imul
pop
pop
sub
pop
and
mov
roll
lods
ficomps
cltd
lcall
in
fsts
shl
je
fsubp
add
sbb
pusha
dec
roll
pop
dec
ljmp
add
scas
dec
pop
loopne
or
loop
jbe
mov
and
inc
ret
mov
add
cmpsb
call
leave
cmp
and
xor
sub
sub
cltd
mov
lods
loop
lds
loop
fwait
jecxz
jnp
jb
xchg
pop
dec
lret
stos
adc
jg
movsb
int
mov
imul
enter
test
jbe
add
loopne
add
mov
ljmp
in
test
sub
xor
in
pusha
or
in
bound
push
pop
inc
xor
cwtl
dec
ljmp
inc
test
or
ss
ds
sbb
xor
xchg
mov
lods
in
jg
inc
adc
out
dec
cwtl
pop
inc
addl
mov
add
sbb
pop
adc
push
mov
icebp
cmpsl
mov
sahf
adc
fs
sub
mov
sbb
in
adc
out
rcr
sub
dec
adc
pop
xchg
jae
mov
pop
dec
cmp
imul
mov
mov
cmpsl
pop
mov
test
movd
scas
js
sub
sbb
sub
out
int
pop
pop
push
lods
adc
int
cltd
adc
out
inc
nop
arpl
xchg
xchg
push
inc
out
call
sub
lcall
cwtl
pop
xor
ret
js
shrl
sbb
loopne
ja
jp
icebp
xor
xchg
movsw
arpl
cwtl
push
cmp
daa
gs
ds
xor
ja
lds
rolb
lret
jmp
faddl
aaa
data16
pop
in
int3
es
cs
mov
in
dec
addr16
push
mov
mov
xlat
sarl
add
jb
jmp
mov
insl
xchg
outsb
sub
mov
and
inc
lret
mov
sbb
scas
insl
push
sub
xchg
xchg
dec
xor
mov
aam
xlat
fbld
movsb
mov
mov
pop
adc
push
jnp
add
mov
xchg
xlat
mov
jae
push
test
xchg
leave
cmp
ret
xor
sub
in
or
or
add
ss
or
popa
les
rcll
xor
js
or
aad
sbb
daa
movb
sub
mov
mov
lods
dec
pop
ret
mov
push
sbb
xchg
repnz
popf
jmp
fidivl
das
jno
xchg
cltd
and
pop
sbb
xor
cltd
dec
mov
jns
mov
mov
pop
push
xchg
inc
insl
and
gs
cli
lods
leave
fidivrs
xchg
inc
and
sub
lods
in
fistpll
inc
stos
push
getsec
sbb
xchg
pop
xor
pushf
aas
sahf
scas
or
and
cld
lea
add
add
lea
ja
ja
ja
mov
sbb
test
pusha
out
fsubrs
add
inc
jb
pop
lcall
xor
fstpt
pop
fisttpl
cld
jmp
adc
pop
scas
int
aam
ds
or
arpl
rcrb
xor
adc
xchg
add
push
push
stos
inc
or
or
sti
fucomip
cmp
push
and
stos
hlt
ffree
shll
loopne
in
into
aam
in
dec
test
cmp
xchg
push
into
inc
fs
push
lock
rcr
push
sub
stos
mov
cmc
in
sahf
add
xor
outsl
popa
stc
dec
lcall
je
jae
out
subb
repz
sar
sbb
xor
pop
jl
in
jo
jmp
adc
movsb
mov
or
outsb
jne
ret
out
aad
mov
addb
sub
and
inc
push
mov
sbbl
sub
lock
pop
lret
cmpsl
nop
in
out
lds
adc
adc
inc
inc
rclb
testb
or
push
repz
shr
imul
daa
filds
mov
cmp
push
test
sbb
pop
pop
mov
outsb
push
mov
ret
jp
cld
push
mov
jo
dec
mov
pop
sub
stos
xchg
insl
dec
loop
lcall
add
pop
nop
outsb
pop
repz
inc
push
and
adc
xchg
inc
dec
repz
sbb
cmp
mov
int
xor
nop
mov
push
jo
jp
out
sti
mov
mov
jecxz
fsubl
incb
push
scas
lcall
fisttpl
add
mov
lret
out
pop
aaa
repz
lods
shll
lods
pop
xor
and
mov
mov
std
icebp
mov
mov
mov
mov
fnstenv
je
out
jle
cltd
stos
or
fsubs
xchg
jne
rol
fxch
mov
aaa
out
push
stos
or
mov
test
daa
iret
jo
fdivrl
out
jo
repz
lock
cli
lods
stos
adc
xchg
fmul
push
je
xchg
pop
fwait
sti
scas
jl
in
jle,pn
aaa
icebp
jnp
and
test
sbb
stos
pop
or
loope
das
ljmp
stos
fistpll
mov
test
daa
or
ret
cltd
lahf
outsl
or
xchg
dec
jmp
jmp
ljmp
push
fsubrl
test
shlb
cs
pop
jmp
mov
sbb
inc
rorb
test
fisttpll
stos
push
enter
push
dec
xor
inc
jp
push
sub
xor
repz
clc
sbb
ss
pop
jl
dec
sbb
cmpsb
pop
mov
push
cmpsb
dec
frstor
subb
ret
add
mov
mov
loopne
ja
or
aad
cmp
cmpsb
outsb
shrb
int
insb
cmp
pop
jmp
lods
jmp
imul
imul
jmp
ret
shrl
movsb
incl
fistps
js
setne
add
int3
hlt
push
xchg
inc
adc
sbb
mov
pop
and
in
xlat
add
add
and
inc
mov
lahf
or
mov
ret
pop
cwtl
mov
popf
std
and
jmp
out
pop
jmp
jbe
mov
mov
and
add
push
cs
xchg
nop
imul
add
test
adc
jmp
mov
jns
cmp
js
sahf
dec
pusha
mov
add
dec
out
xor
repnz
dec
inc
mov
popa
mov
sub
aam
cwtl
sarl
cwtl
arpl
daa
cmpsb
roll
mov
in
mov
sti
dec
stc
pop
sbbb
cli
push
imul
mov
lret
rcll
push
arpl
stos
mov
cs
addb
popa
or
sbb
mov
loop
xlat
push
pop
es
aad
mov
inc
inc
fcom
scas
lods
and
mov
mov
shrl
das
xchg
movzwl
jae
sbb
sbb
xor
sar
cmpsb
mov
inc
mov
mov
insl
push
inc
pop
adc
xchg
cmp
mov
out
push
sbb
xchg
imul
je
scas
mov
fldz
push
stos
xchg
or
scas
push
mul
xchg
out
movsb
iret
and
lret
or
cld
or
jecxz
movsb
out
pop
xchg
cmp
in
nop
lds
in
pop
dec
adc
sub
fildl
jb
ficoml
pop
adc
jg
pop
scas
divl
or
fs
mov
pop
ja
in
add
fbld
loop
pop
inc
data16
lods
fimull
pop
repnz
push
pop
sub
lds
fmull
jge
mov
daa
lahf
dec
rolb
aad
test
push
inc
jle
int
ljmp
cli
mov
adcb
outsl
ds
sti
or
lods
push
adc
shrb
mov
in
or
add
xchg
push
push
cmp
or
es
rcl
mov
mov
add
dec
inc
mov
ficompl
shll
pushf
dec
add
add
bound
enter
rclb
xchg
mov
jbe
adc
dec
mov
xchg
jl
adc
sbb
pusha
push
add
push
cmp
dec
mov
inc
inc
dec
jp
int3
adc
mov
or
popa
fdivrs
test
mov
in
test
sub
inc
mov
cwtl
cmpsl
arpl
push
lahf
outsb
mov
xor
pop
les
xchg
mov
xchg
jnp
insl
cmpsl
pop
or
gs
inc
hlt
push
imul
pop
fisttps
cmp
scas
pop
pop
pop
fisttpll
inc
test
jmp
pop
stos
adc
push
jge
fdivrs
mov
mov
mov
or
stc
rcrb
aas
stos
test
clc
lods
sarl
pop
push
jmp
stos
or
adc
popa
punpckhwd
in
lcall
jp
inc
popf
jl
adc
out
cmp
les
xor
addl
call
xchg
outsl
pop
das
jle
ffree
push
jno
scas
hlt
sbb
pop
addr16
js
in
enter
clc
push
cmp
imul
fnstsw
stos
mov
add
xchg
into
add
fidivs
rorb
fs
sahf
dec
mov
push
adc
pop
ds
ljmp
imul
andb
imul
push
pusha
xchg
sbb
out
sub
xor
xorb
ret
push
lods
lahf
adc
insb
ss
xchg
int
popf
push
xchg
cmpsb
les
and
dec
mov
loope
and
leave
aam
xor
inc
inc
lds
testl
ret
pop
insl
not
xor
mov
adc
dec
jne
lret
fcmove
add
notb
jecxz
mov
jp
cwtl
sahf
loope
or
jmp
sbb
gs
out
mov
mov
test
inc
hlt
push
cmpsl
pushf
lods
sub
std
into
sub
pushf
dec
insl
inc
dec
pop
adc
adc
pushl
sbbb
cwtl
test
andl
scas
pop
jne
or
outsl
and
and
popf
push
pop
xchg
fsubrs
int3
lcall
pop
mov
jp
adc
sub
shlb
sub
lcall
mov
leave
inc
cmpl
outsb
clc
or
xchg
out
push
int
inc
aas
xchg
inc
test
dec
xor
pop
inc
mov
popf
push
ja
xchg
xorl
ljmp
mov
cmp
fcmovnbe
mov
addr16
test
hlt
mov
lods
dec
insl
dec
xor
mov
je
out
xchg
pushl
push
in
or
fdivr
lcall
mov
jecxz
push
or
pop
repz
fadd
ljmp
cmp
fst
pop
aaa
pop
xchg
in
mov
test
je
sub
push
lret
pushf
ja
jae
das
in
fimuls
mov
xchg
stos
xchg
mov
scas
jl
shlb
pop
sbb
arpl
int3
or
pop
jecxz
rorl
dec
and
shrl
lret
test
repnz
jnp
cli
je
mov
push
xchg
mov
xchg
jnp
dec
and
ss
or
les
rorl
insl
jno
mov
dec
dec
gs
adc
les
or
sbb
test
fs
cmp
sub
movsb
adc
cmp
out
popf
lock
xchg
xor
ljmp
cld
add
sbb
outsl
enter
lods
sarl
cmc
loop
shrb
out
jb
cmc
mov
pop
push
push
push
flds
inc
mov
add
gs
movsb
jae
cmp
pushf
icebp
rcrb
out
jnp
and
test
mov
aaa
dec
push
mov
inc
mov
das
sbb
loope
fimull
and
mov
mov
jns
rolb
jns
jle
sub
sbbl
xor
es
pop
rorl
imul
dec
rcrb
pop
aam
lods
hlt
nop
fsubrp
arpl
pop
or
repnz
clc
or
mov
mov
test
movl
les
int3
fcmovu
push
popf
cmc
inc
addr16
pop
and
cmp
lods
mov
inc
push
pop
lahf
push
jmp
arpl
jg
mov
cmp
fistl
mov
xchg
in
xor
push
insl
push
cmp
lock
das
push
test
js
ds
js
rcll
mov
push
push
pop
ret
fs
movsb
das
sbb
mov
les
stc
sub
and
pop
xchg
add
jne
dec
dec
ljmp
fwait
jge
iret
std
mov
mov
fcoms
or
add
stos
jmp
mov
popa
mov
jo
lock
cltd
inc
adc
xchg
mov
add
not
pop
cmc
lret
pop
push
dec
jg
in
sub
fs
ror
mov
test
mov
test
sbb
les
dec
pop
jmp
repnz
jp
dec
jmp
das
cltd
call
movsb
pop
call
sbb
inc
push
push
ja
lea
addr16
inc
out
cwtl
lret
sbb
dec
jl
dec
addl
push
movsb
lds
mov
sbb
cld
cmp
mov
imul
test
xchg
test
pop
mov
cli
jmp
out
loop
add
shl
push
adc
out
ja
pusha
mov
and
aad
rcrl
xlat
ds
sbb
rcr
shl
dec
mov
roll
pop
lret
jge
icebp
outsb
pop
sbb
dec
into
negb
addr16
cmp
shrl
lds
cmp
fisubl
aas
mov
mov
add
add
cmp
orl
mov
fimuls
daa
push
mov
aad
inc
cwtl
and
ret
sub
test
add
cmp
jmp
sub
fs
fdiv
and
adc
push
nop
xchg
cmpsb
dec
add
dec
nop
xor
push
inc
mov
or
ret
pop
push
aaa
sbb
adc
test
mov
std
nop
inc
adc
cmpsl
xchg
lds
push
sahf
mov
mov
aaa
xor
mov
std
mov
jmp
out
push
iret
jno
outsb
scas
inc
iret
lcall
xor
cmp
mov
or
arpl
ficoms
or
and
lds
sbb
std
jae
imul
xor
iret
sbb
sub
xlat
hlt
frstor
push
in
mov
fldenv
push
addr16
or
push
gs
test
xchg
roll
les
mov
gs
loopne
out
in
ds
out
or
into
dec
cmp
repz
test
pop
add
jno
lods
jno
and
mov
mov
nop
icebp
fs
or
pusha
mov
mov
stos
cld
xor
repnz
mov
clc
popa
movsb
insb
xchg
cmpsb
xor
imul
ja
dec
cmpsl
imul
mov
jno
cltd
inc
push
jecxz
dec
aaa
fwait
sub
cmpsb
push
fwait
lock
sub
ds
jge
fisttpll
or
mov
int3
cmpsb
aad
insb
pop
ds
cmpsw
adc
jge
pop
repnz
shlb
xor
jno
adc
cmp
enter
dec
jecxz
ret
mov
call
out
mov
inc
fildl
lods
xchg
frstor
mov
fdivrs
inc
sahf
pop
iret
pop
cwtl
xchg
jne
dec
mov
inc
imul
sbb
test
scas
icebp
pop
pop
cmp
in
cmp
fwait
pop
and
sbb
bound
aam
mov
in
pop
cwtl
pop
inc
and
clc
xor
mov
clc
jbe
xor
dec
jne
sub
lret
adcb
lds
andl
add
cmp
xor
cmp
repnz
outsb
xchg
lret
scas
lret
pop
sub
sarl
lret
mov
lcall
mov
pusha
ljmp
or
pop
pushf
inc
cli
sbb
mov
mov
push
inc
into
push
movsl
test
mov
sub
sarb
dec
enter
dec
xchg
xchg
push
mov
popf
test
or
fs
xchg
inc
je
sbb
cli
ds
ljmp
cld
push
pop
xchg
out
std
and
pop
push
push
dec
ljmp
mov
in
sub
dec
xor
inc
repz
inc
push
rol
mov
dec
dec
loop,pn
test
inc
jbe
repnz
jmp
pop
out
mov
sbb
add
stos
or
cltd
sti
pop
mov
scas
ret
lock
mov
fs
mov
daa
inc
in
mov
xchg
adc
lea
dec
outsb
clc
ja
mov
cld
sub
adc
pushf
repnz
cwtl
xor
sub
or
pop
pusha
adc
lcall
mov
mov
xor
mov
popa
pop
push
daa
mov
inc
inc
rolb
xchg
sub
add
lock
inc
push
push
or
loope
in
scas
out
lret
xchg
or
mov
loope
sub
fistps
jae
rorb
je
es
push
mov
cmp
lret
rol
add
mov
jbe
mov
pushf
pop
and
sub
pop
loopne
lret
subl
inc
fstp
ljmp
and
push
xor
mov
repnz
insl
repnz
jnp
cmp
fldcw
push
push
and
adc
push
js
jle
sbb
xor
pop
add
pusha
scas
outsb
mov
pusha
pop
push
pusha
outsl
in
cmp
mov
popa
push
inc
mov
ret
xchg
mov
cltd
xorl
pop
sbb
int3
in
pop
outsl
push
mov
inc
in
or
sub
xchg
ror
xchg
add
mov
inc
test
sub
pop
out
adc
sbb
nop
icebp
jmp
sub
ret
nop
ljmp
dec
xchg
or
sahf
movsb
decl
out
shr
pop
test
mov
daa
cld
shrb
aas
out
xchg
aaa
jmp
sub
jnp
std
sub
and
or
pusha
inc
sbbl
jb
insb
in
mov
les
mov
jmp
test
push
mov
adc
mov
jno
mov
and
xor
mov
xor
cmpsl
sbb
aas
lea
mov
dec
cmp
cmc
cmp
dec
jge
test
call
es
adc
fadds
lds
loopne
push
mov
nop
sub
inc
ds
pop
leave
push
dec
cmpsl
loopne
mov
mov
data16
loope
mov
dec
push
inc
jbe
andb
ss
lret
mov
jno
jl
fisttpll
sub
or
adc
sbb
cmp
pushf
jmp
iret
cmpsb
mov
in
mov
jbe
or
inc
push
mov
push
jae
in
fimuls
les
jnp
dec
imul
js
insl
ret
sub
negb
rcl
popf
mov
js
popf
fs
dec
cltd
ljmp
js
vmread
insl
ja,pt
stc
mov
repz
daa
daa
mov
fists
xor
jge
adc
add
push
test
imul
or
push
jno
xchg
adc
mov
dec
push
in
cs
lea
rcrb
xor
scas
loop
mov
fdivrl
shlb
sar
and
cli
mov
das
sbb
sub
dec
cli
sbb
xchg
mov
mov
int
sbb
adc
mov
imul
lahf
pop
mov
sbb
repz
mov
clc
insl
sahf
test
pop
out
and
xchg
and
bound
cmpsl
lods
mov
loop
mov
xchg
push
fcmovb
pushf
data16
xor
inc
mov
sbb
cltd
push
push
stos
loopne
xor
cld
out
pop
test
mov
nop
adc
xchg
inc
jno
inc
push
sahf
iret
int
jbe
xor
sub
xchg
lods
push
cmp
fs
adc
inc
sbb
test
or
xor
mov
repnz
or
hlt
stc
mov
mov
in
fbld
push
out
insb
mov
mov
dec
and
loop,pt
inc
mov
sub
fildll
push
adc
mov
jb
daa
aas
cmp
les
xchg
and
mov
sbb
mov
jecxz
pop
and
pop
cld
nop
jge
mov
xor
mov
or
jne
out
push
push
pop
cld
call
aaa
stos
lds
pop
jns
or
sarl
xchg
call
fistpl
inc
lret
adc
sub
outsl
xor
dec
aaa
test
inc
dec
mov
xchg
pop
shll
test
enter
fwait
mov
mov
decb
pop
push
xchg
dec
add
je
ljmp
mov
nop
cmp
sbb
lds
iret
vmread
xchg
fstpl
lahf
iret
push
push
mov
in
idivl
dec
pusha
mov
stc
pop
out
mov
in
xchg
xchg
call
jge
lret
addb
jo
pop
dec
add
xor
cwtl
inc
cmp
scas
dec
test
pop
jle
inc
xlat
sub
sub
call
lock
xlat
adc
out
leave
xor
xchg
aaa
push
ds
fsubrl
mov
mov
ss
lock
movsb
fsubrl
dec
jecxz
aad
or
xchg
stos
outsb
xchg
adc
jns
add
mov
popf
fwait
jmp
push
pop
dec
adc
mov
mov
scas
mov
mov
cmp
jnp
mov
hlt
test
pusha
mov
mov
stc
mov
add
or
orl
adc
rcrb
and
xchg
mov
lods
enter
sbb
xor
push
push
inc
lcall
dec
aam
xor
mov
cmp
rorl
arpl
push
dec
cmpsl
pop
movsb
xchg
jns
inc
es
popa
mov
or
mov
scas
ficompl
insl
cmpl
das
xchg
mov
dec
jae
sub
pushf
cmp
jno
fs
xor
ja
repnz
add
jecxz
fldcw
into
push
pushf
scas
repnz
test
imul
arpl
ss
push
mov
dec
mov
cmpsl
outsl
iret
and
stos
fucom
ljmp
aam
or
out
inc
adc
inc
sbb
push
inc
movsl
nop
sub
or
cmp
sbb
mov
sbb
xchg
mov
enter
cmpb
and
push
pop
cmp
rcr
inc
push
jbe
ja
shll
rcl
push
les
imul
inc
imul
or
xchg
leave
add
incb
sub
hlt
ficomps
jo,pn
dec
jns
testb
cwtl
and
andb
cmp
mov
mov
fildl
in
and
sbb
xchg
pop
pop
stos
data16
out
sub
sub
and
adc
mov
rolb
andb
pop
cmp
pop
arpl
cmc
push
mov
jle
out
mov
shl
jge
push
push
sbb
add
adc
in
lcall
fwait
pop
cmp
fwait
sbb
lret
arpl
sub
xlat
jmp
dec
mov
add
js
std
rorl
and
xor
fs
lcall
ret
mov
in
jmp
mov
jl
icebp
mov
pop
cmp
stc
sub
jnp
or
inc
dec
jne
rorl
xor
xor
jnp
andb
out
xor
sbb
sbb
mov
push
lcall
cltd
add
add
add
stc
loop
jmp
dec
mov
xor
cmp
or
aaa
repnz
sarl
cmp
sti
sub
in
stos
jnp
shrb
test
outsl
cld
mov
or
imul
divb
daa
cld
subl
and
pop
mov
cmpsb
test
sbb
pop
inc
sbb
mov
add
mov
rcrb
std
jge
fisubrl
lahf
jno
in
xchg
mov
outsl
enter
leave
jl
in
int
inc
in
out
test
shlb
lret
dec
pop
aaa
lea
clc
push
push
push
mov
aaa
xchg
add
pusha
jnp
mov
adc
sub
lcall
in
scas
or
cli
mov
pop
imul
mov
imul
xor
ret
add
sbb
xchg
lock
xlat
in
mov
pop
sbb
in
fisubs
pushf
clc
and
test
pop
pop
pop
insb
xchg
adc
mov
es
cmpl
mov
mov
loope
mov
and
lock
cmpsl
mov
addr16
push
out
mov
cmc
ror
adc
xorl
in
cltd
fcom
sahf
imulb
pop
xchg
xor
push
std
in
mov
sub
push
push
mov
and
stc
mov
jo
insb
xlat
mul
aas
icebp
popa
insb
jnp
or
ja
ret
icebp
xchg
loopne
xchg
jg
bound
add
adc
scas
incl
imul
cs
push
jl
xor
in
add
xchg
fidivs
push
aaa
in
adc
push
pop
xchg
push
jg
das
mov
cld
out
push
nop
bound
sbb
mov
loope
sbbl
leave
sub
rorl
fcmovnb
sub
push
cli
lds
pop
pusha
cld
pushf
fcomps
xlat
loope
or
cmp
cmp
mul
mov
dec
imul
ljmp
mov
fdivs
lea
gs
pop
rcll
xchg
je
stos
or
mov
das
sub
cmp
out
cmc
aam
mov
ffreep
ret
inc
mov
adc
aas
sub
jns
int
test
cmc
es
sub
stos
int3
xor
scas
jp
dec
std
sbbb
xor
mov
dec
sbb
rorb
idivl
xchg
mov
push
rorb
pop
imul
pop
lds
call
adc
stc
add
inc
scas
pop
pushf
in
xchg
sub
imul
inc
push
dec
mov
enter
adc
push
pop
lcall
sub
hlt
push
push
lods
rolb
xorl
xchg
je
inc
dec
xorl
out
test
cwtl
loop
das
push
dec
imul
jle
xchg
inc
outsb
dec
in
lods
flds
jp
push
dec
ljmp
jb
push
cmp
std
stos
bound
inc
es
inc
jmp
sub
ds
xor
ljmp
or
div
cltd
fs
outsb
lret
add
js
jle
sti
hlt
mov
inc
jb
ljmp
push
mov
fs
inc
arpl
test
jns
mov
lods
add
int
or
mov
adc
in
notb
mov
rolb
adc
sub
sub
sub
xorb
push
iret
mov
lods
push
jno
jge
jge
mov
cmp
addr16
fcmovbe
daa
fisubrl
mov
arpl
icebp
ja
lea
hlt
mov
pop
je
mov
mov
rcrl
pop
lahf
cmc
push
add
sbb
pusha
or
sbbl
sbb
sbb
dec
je
in
inc
mov
dec
aaa
loopne
out
leave
push
iret
push
jg
sbb
jmp
andl
ljmp
cmp
push
push
rcll
call
xor
jmp
mov
mov
or
xchg
inc
insl
pop
rcr
jns
fmull
shl
xor
sbb
inc
xchg
je
stos
jmp
mov
hlt
jge
mov
jecxz
xchg
int
adc
xor
sbb
xchg
testl
test
icebp
aaa
loope
jns
sub
jnp
inc
scas
shll
shll
fistpl
pop
jle
mov
ljmp
call
rcll
mov
repz
dec
mov
pop
jae
cwtl
iret
xchg
ja
lods
sahf
clc
jno
sub
sbb
adc
sbbb
aas
mov
pop
into
ss
aaa
imul
movsb
add
or
aam
cmpsl
rcrb
adc
js
sbbb
in
jg
mov
mov
insl
inc
sar
add
push
jg
lahf
or
jle
das
shrl
push
dec
xchg
lcall
aaa
out
stos
add
les
fcomp
mov
cmpsl
pushf
scas
arpl
dec
mov
ja
std
outsb
cmp
pop
shr
or
mov
mov
into
outsb
sti
scas
push
push
lcall
pop
xchg
jmp
insb
mov
cmc
cmp
push
and
or
cld
push
pop
jae
xchg
lods
sub
aas
fisttpl
push
dec
aam
mov
flds
lds
lahf
in
mov
jg
call
xchg
pop
jle
lret
push
inc
aaa
shll
mov
imul
aam
cld
adc
mov
pop
mov
xchg
adc
insb
lock
sbbb
rclb
sub
jb
filds
cmpsl
xor
mov
into
or
je
lods
pop
push
mov
loope
div
xchg
lcall
mov
lods
test
stos
dec
xchg
dec
and
ds
push
aam
test
scas
sarl
popf
or
jle
mov
inc
mov
jnp
cmp
fbld
fwait
jge
in
push
fmuls
xor
cltd
jl
in
push
rorb
pop
xchg
cmp
popa
fsubrl
sbb
fdivl
dec
lods
push
mov
cltd
pop
push
filds
ja
or
lods
push
les
push
loop
sbb
and
decl
push
lods
andb
movsl
addr16
ss
jno
jge
dec
nop
enter
xchg
cld
dec
test
mov
adcl
mov
outsl
xor
mov
leave
inc
xchg
outsl
mov
shrb
out
jecxz
push
test
into
loope
xchg
and
stc
adc
push
ds
and
sbb
sahf
xchg
in
lds
incl
sub
pop
repnz
jno
test
sbb
cmp
dec
pop
stos
adcl
pop
test
sub
lea
leave
dec
shl
sahf
sbb
shrl
repz
sub
fdivs
mov
stos
mov
test
mov
pop
lds
mov
jnp
mov
shll
scas
ffree
call
or
push
pushf
insl
sbb
dec
add
cmc
enter
test
lret
call
xchg
sub
push
aaa
dec
xchg
add
xor
sbb
mov
movsb
add
jmp
add
jl
cmp
push
sbb
imul
roll
shrl
test
cmp
movsl
stos
jp
test
ja
jne
je
pushf
js
push
sti
push
jns
ror
push
js
xchg
rcr
cwtl
into
xchg
xor
sbb
rol
fdivrl
cmp
adc
jae
nop
lock
int3
daa
mov
movsl
push
out
jg
enter
add
cmp
movsb
push
push
inc
fstp
fsubl
out
out
jmp
inc
cmp
cmpsl
dec
cmp
test
test
xchg
jb
inc
jbe
pop
lret
and
lcall
mov
cmp
popf
inc
scas
push
push
int
sti
mov
lahf
scas
push
lock
pop
out
fucom
sahf
dec
pop
sbb
add
push
lods
sti
add
ljmp
dec
jo
pusha
leave
in
in
pop
pushf
jmp
push
cmp
cmp
in
pop
out
or
xchg
jae
sbb
imul
mov
hlt
ja
pushf
fwait
cltd
enter
inc
xor
mov
sub
mov
fdivr
xor
sbb
xor
add
bound
mov
popf
pop
stos
jae
adc
sub
adc
jge
xchg
fisubrs
mov
gs
lcall
hlt
fdivp
test
mov
push
loop
outsl
or
pop
outsl
jne
fmuls
call
imull
les
and
jmp
jae
repnz
fs
mov
dec
xchg
das
jge
lds
std
popf
sbb
and
jp
push
js
inc
sti
pop
sbb
jbe
mov
push
nop
push
and
in
or
cmpsb
cmc
cmp
out
mov
lods
or
fdiv
jns
out
xor
addr16
push
sbb
cmpsl
sbb
xlat
push
adc
cwtl
shll
es
push
stos
add
test
out
adc
push
adc
push
jb
push
xchg
cld
popf
icebp
add
dec
push
or
scas
fcoml
mov
pop
test
sbb
and
pop
adc
mov
mov
push
pop
inc
jmp
cmc
xchg
lods
es
loope
adc
and
leave
das
lods
bound
sub
out
pushf
push
repz
pop
nop
pop
dec
es
mov
lds
movsb
xchg
add
adc
dec
inc
fdiv
cmpsl
cmc
push
pop
pop
test
xchg
sti
jo
imul
dec
lea
cwtl
push
cs
call
sub
notb
subb
pop
mov
lea
pusha
cli
xchg
cmp
xlat
psrld
add
jecxz
mov
das
out
jl
sub
adc
scas
pop
testb
mov
insl
push
js
test
loopne
xorl
bound
repz
mov
sbb
mov
loop
pop
pop
mov
flds
or
mov
aaa
rorb
lret
or
pop
sbb
sub
xchg
mov
pop
mov
fmull
lods
sub
push
loop
mov
mov
xchg
inc
jb
xchg
daa
sub
cmp
push
or
lret
iret
outsb
imul
icebp
fs
in
adc
jbe
lock
xor
mov
push
movsb
sbb
clc
inc
sbb
dec
aaa
jle
cltd
pop
pop
pop
cld
pop
test
loopne
sahf
mov
insl
scas
insl
cld
push
sbb
push
jp
xchg
mov
loope
pushf
sub
movsb
in
inc
jle
iret
inc
mov
test
fbld
stc
xlat
imul
cmp
stos
enter
xchg
mov
gs
ficomps
fidivrl
stos
mov
andb
loope
insb
cmp
push
mov
lods
divps
sbb
in
mov
dec
and
mov
sub
dec
mulb
pop
pop
or
mov
push
pop
je
xor
pop
dec
sbb
mov
xchg
pminsw
xor
lds
subl
ja
insb
sub
das
xor
lods
or
sub
sub
dec
pop
ljmp
gs
sub
andl
jo
xchg
sahf
and
pushf
lock
mov
js
push
jl
out
data16
test
aad
ret
test
lcall
add
pop
or
cli
lock
mov
add
cmp
pop
movsb
or
mov
fs
pop
or
inc
rolb
mov
inc
pop
pushf
xchg
xor
cmp
add
mov
js
lret
fsubrl
cmp
test
dec
js
mov
mov
inc
push
les
sub
and
push
and
pop
sbb
xor
xchg
mov
pop
das
packuswb
into
dec
fists
sar
mov
gs
push
in
pop
add
test
xchg
and
mov
add
subb
jae
ds
mov
lret
push
inc
fsub
mov
test
push
ficompl
sub
xor
adc
inc
jns
dec
popf
cmp
inc
inc
cmp
push
mov
enter
jge
out
movsb
popa
or
sbb
fdivr
lcall
shl
jae
jge
adc
outsb
lret
sahf
sbb
pop
sar
xchg
sbb
dec
mov
fldenv
mov
ljmp
movsl
outsb
mov
push
add
enter
insb
aaa
inc
jg
in
sahf
inc
loopne
dec
xchg
repnz
lds
push
cs
push
mov
out
fdivrs
adc
push
ficompl
dec
jns
test
pop
mov
push
inc
ss
xor
enter
pop
xchg
lea
xorl
ljmp
xchg
les
sub
pusha
movsl
pop
sahf
lods
call
orb
sub
or
cmp
xor
vcmpps
jl
aas
imul
xor
or
lret
adc
ret
xchg
mov
sub
clc
negb
add
pop
mov
adc
fcoml
mov
adc
and
icebp
mov
cmc
bound
lret
and
inc
out
loopne
std
sub
loop
dec
pop
add
pop
xchg
cld
ret
mov
xchg
jg
in
xchg
jbe
aam
clc
jg
jnp
add
mov
in
outsl
shrl
das
mov
daa
or
jg
lret
sub
push
dec
dec
mov
mov
addr16
in
lock
int
orl
dec
std
cmpsb
inc
out
lahf
and
rclb
aas
test
dec
sub
and
push
clc
lods
dec
add
rclb
jmp
stc
das
es
mov
cmp
push
adc
pop
std
xchg
xor
in
out
loop
push
push
and
in
or
shl
mov
cli
sub
lahf
pop
divb
outsl
mov
jne
mov
jp
fsubrs
stos
adc
pop
icebp
fs
mov
or
mov
sbb
xchg
inc
xor
movsb
add
jl
xchg
dec
insl
or
inc
js
or
and
mov
aam
mov
ret
mov
sub
leave
inc
dec
pop
ljmp
jecxz
fadd
cld
js
xchg
inc
jno
cltd
imul
loopne
push
rol
enter
fidivs
int3
idivb
imull
flds
cmp
in
mov
int
and
inc
mov
lea
jg
pop
xor
inc
push
leave
xor
stc
mov
sub
dec
js
mov
pop
clc
pop
xchg
out
cltd
add
es
in
cwtl
dec
mov
mov
inc
push
cmpsl
test
rcrb
mov
or
into
les
jo
ss
sub
xchg
sahf
pop
mov
or
push
call
add
xor
cmp
rclb
inc
xorb
push
pop
and
sub
lret
push
and
mov
rcll
inc
data16
sti
daa
repnz
or
fsubs
sub
mov
gs
sub
test
divl
rorl
xchg
loope
mov
mov
jp
pop
jp
daa
pushl
jno
sub
lods
popf
add
mov
pusha
jne
je
in
xchg
mov
inc
js
cmpsb
sub
cmpsl
cmp
cmc
into
adc
sub
xor
lock
popa
mov
mov
cmp
or
jg
push
add
in
js
xor
aaa
cmp
mov
or
ret
sub
rolb
lahf
mov
mov
add
lods
in
aas
aas
sub
sahf
jmp
jnp
mov
mov
call
hlt
adc
xor
fmuls
dec
repnz
int
mov
movsb
add
jecxz
out
cmpsl
sub
in
pop
xor
push
sbb
movsb
pop
test
fcompl
inc
lock
iret
adc
test
cli
mulb
call
sbb
jg
dec
xchg
pop
inc
aas
dec
xchg
mov
xchg
ficoml
sub
mov
jb
call
enter
cmp
jge
inc
clc
dec
or
bound
dec
pop
int3
imul
pusha
xchg
aad
sti
incl
adc
xchg
mov
pop
mov
jecxz
dec
add
mov
lods
pop
mov
add
jmp
test
mov
aaa
xchg
lock
xchg
leave
fildl
clc
xchg
add
jae
ljmp
xor
cld
sub
cwtl
push
xchg
movsb
push
fisubrs
cmp
mov
jle
sbb
cmpsb
xchg
and
call
cmc
mov
cmc
imul
and
es
std
pop
mov
push
add
movsl
aas
add
push
jno
xor
into
ret
pop
in
and
xchg
xlat
out
sbb
pop
fwait
inc
lahf
fwait
sub
notl
jg
int
mov
inc
adc
and
jnp
testl
and
mov
subb
pop
sbb
and
or
cli
mov
push
fwait
dec
jmp
aam
rcll
jbe
fcmovb
ljmp
out
push
pop
push
insb
push
push
or
push
mov
push
lods
xchg
jge
fcom
inc
cmc
pop
ret
dec
insb
imul
jl
addl
and
addr16
gs
sbb
xchg
imul
xor
fistps
or
dec
pop
faddl
mov
cmpl
dec
das
test
icebp
push
iret
adc
test
mov
push
or
cmp
scas
jmp
cvttps2pi
aas
sub
insb
pop
mov
sub
xor
jmp
ficomps
loopne
sahf
inc
lret
shl
mov
cltd
sbb
fwait
inc
cltd
loope
adc
lock
and
or
mov
jne
and
arpl
mov
or
cmp
loope
mov
or
pusha
sbb
nop
shlb
xor
jno
xchg
inc
fimuls
mov
stos
pop
sbb
rolb
xchg
or
mov
aad
out
push
dec
pop
adc
jle
out
pop
es
popa
inc
xchg
inc
jecxz
mov
shrl
mov
sbb
mov
pusha
jmp
dec
fsub
xor
jge
xchg
addr16
jb
stc
filds
push
adc
jp
test
dec
fldenv
ret
push
testl
data16
cwtl
outsb
fbstp
mov
jae
lods
sub
sbb
sahf
ss
add
pop
adc
nop
je
mov
jle
insb
sub
sbb
mov
icebp
mov
out
in
cli
jnp
xchg
test
dec
xchg
dec
xor
inc
jae
imul
gs
mov
xlat
dec
pop
aam
cmp
jno
icebp
popf
xor
mov
int3
lds
dec
in
iret
add
dec
or
xor
call
nop
pop
fiadds
das
fdivr
mov
cmp
dec
ja
fidivs
xor
push
add
cmpsl
push
insb
jg
xor
xor
mov
jl
stc
adcl
inc
out
call
pop
lods
mov
std
jae
or
jl
sbb
gs
fmul
adc
out
jge
sbb
cmp
mov
call
subl
dec
fstpt
and
aaa
scas
dec
sbb
add
mov
into
xor
mov
push
cwtl
adc
fwait
xchg
or
roll
loope
adcb
arpl
outsl
gs
icebp
pushf
sbb
loope
push
loop
hlt
icebp
pop
pusha
mov
cmp
les
sub
inc
aad
fs
test
sub
add
outsb
push
xor
mov
fstps
mov
imull
cltd
loop
test
xchg
mov
out
pusha
mov
or
adc
xor
shrb
fisubs
push
stc
cmpsl
push
repz
fcompp
xchg
and
push
les
sbb
mov
lds
pusha
cmp
arpl
jo
shr
or
jno
movsl
cs
dec
sbb
fadds
mov
enter
xor
adc
cwtl
jno
sub
mul
pop
sub
mov
cld
add
add
adc
ss
mov
testl
call
push
mov
adc
mov
fidivs
adc
push
jg
out
mov
dec
or
movsb
fdivl
sub
test
out
sub
sub
dec
mov
push
pusha
pop
ss
and
cmp
daa
inc
sub
ficoms
les
lret
xchg
insl
cmp
cwtl
jle
loopne
dec
mov
xchg
adc
hlt
jp
cltd
mov
hlt
push
andl
test
in
imul
push
lods
sub
add
push
ss
lret
imul
mov
lcall
jbe
pop
mov
jb
mov
leave
dec
hlt
and
enter
jcxz
adcl
bound
sbb
or
sub
into
inc
mov
ss
push
aaa
mov
in
cmp
shll
imul
xchg
fsubp
loope
jle
call
or
cmp
outsb
stc
cmp
jbe
cmp
xor
into
jge
adc
add
aam
aad
ja
push
cmp
pop
imul
shrl
push
mov
movsl
xor
out
das
pushf
nop
inc
in
jb
jmp
mov
loop
and
cli
sbb
sub
test
cmp
jae
and
adc
mov
jg
pop
stc
push
and
sub
push
rorl
les
jb
cs
lods
mov
loopne
test
dec
stc
or
loope
fs
sti
loope
in
fwait
addr16
push
xor
push
xchg
sub
cltd
mov
mov
mov
scas
rol
popf
aam
daa
shlb
or
jmp
pop
les
sbb
pushf
xchg
fistpl
mov
call
mov
ja
lret
aas
xor
dec
or
pop
lret
pop
cmp
jecxz
xor
cmpsb
in
fs
lods
pop
decb
add
cld
outsb
popa
dec
mov
or
sub
pop
in
mov
lcall
or
fiadds
std
pop
je
shrl
fcomip
lods
arpl
neg
mov
stos
lea
daa
and
push
std
sbb
fildll
add
aas
insb
mov
in
cmp
dec
pop
into
cmpsb
pushf
inc
pop
jmp
sbb
mov
mov
dec
loope
enter
xor
dec
icebp
pop
dec
mov
in
enter
fdivl
jbe
lcall
xchg
xchg
jl
jecxz
out
ds
pop
lock
push
dec
jecxz
std
cli
cmp
mov
lock
xor
fs
jns
scas
xchg
std
das
pop
or
xchg
inc
jns
push
test
test
jns
or
out
fs
mov
rcrl
mov
fwait
sub
mov
int
mov
mov
cmpsb
mov
xchg
dec
repz
mov
popa
pop
ja
lahf
repz
adc
jmp
cmp
pop
shrl
sbbb
mov
sub
fbstp
push
cmp
adcl
cmp
hlt
xchg
push
loope
popa
and
out
pusha
pop
mov
data16
insl
in
das
pop
dec
push
inc
xchg
movsb
outsb
xchg
pop
outsl
imul
imul
rcrl
fistps
add
mov
sti
mov
int
mov
sarb
mov
cmp
ds
icebp
ficomps
pop
pop
mov
push
scas
cmpl
stos
xor
lahf
aas
push
fnstenv
andl
movsb
xor
dec
sahf
mov
aam
cmp
data16
loop
in
dec
fstl
adc
hlt
jns
add
shrb
inc
push
cmp
adc
xchg
mov
imul
loope
gs
popa
out
mov
insl
inc
gs
mov
or
inc
inc
addl
adc
push
xchg
fs
xchg
mov
xor
pop
inc
outsl
fadd
mov
cmp
mov
sbb
sbb
dec
les
and
dec
rorl
mov
mov
add
lds
addl
imul
sar
js
mov
mov
mov
loopne
test
insb
arpl
ss
imulb
fdivs
lret
adc
sub
mov
jne
jns
jne
fisttpll
aam
lahf
leave
push
jne
cmc
sar
mov
or
mov
int3
or
inc
push
add
notl
repnz
sbb
adc
inc
aaa
cmp
lock
fucomip
scas
shrl
xchg
xor
lods
pop
pop
lret
jne
push
xchg
or
adc
xor
insb
mov
repz
cmp
fiadds
mov
push
iret
inc
or
dec
dec
cld
inc
mov
pop
mov
adc
sub
jg
add
out
mov
loop
and
pop
xor
fcompl
dec
sub
jge
lret
ffree
mov
dec
pop
cmp
ljmp
and
mov
add
fadd
sti
fcompl
sbb
out
mov
add
inc
cmpsb
inc
push
xchg
subl
fbstp
pop
push
fstpl
notl
ficompl
clc
sti
sub
inc
xchg
imul
jne
mov
aas
pop
lea
pop
dec
divb
fucom
jge
lret
and
push
lea
mov
les
outsl
std
mov
loop
jo
jecxz
sahf
adcl
mov
loope
jne
push
icebp
into
rorb
stos
mov
ljmp
ss
iret
stos
lods
addr16
mov
xchg
adc
xor
cmp
adc
aad
cmp
xor
push
adcb
in
dec
sub
mov
mov
ffreep
cli
aam
push
adc
jg
jno
xchg
dec
call
addl
call
pop
in
sub
jmp
mov
xchg
jg
pop
dec
mov
daa
pop
hlt
enter
aas
addr16
sbb
cs
jb
dec
push
out
loopne
push
cld
add
push
fmull
sbb
es
sbb
insl
js
mov
outsl
shr
inc
test
dec
out
push
and
push
push
loopne
std
inc
dec
stos
int3
mov
add
shr
jge
lods
cld
cli
aaa
jbe
cmpsb
aad
dec
sbb
test
adc
inc
in
in
mov
and
xchg
clc
xor
sar
fiaddl
mov
leave
adc
sbb
push
mov
pop
dec
push
xor
mov
mov
scas
jns
jle
adc
cwtl
push
push
push
xchg
jmp
pushf
pop
enter
cs
je
int
rclb
dec
aam
bound
pop
mov
pop
rclb
push
mov
out
ret
cmp
notl
lret
push
mov
lahf
push
mov
mov
ljmp
xor
xor
jle
lret
int
pop
scas
popa
push
sbb
cmp
inc
repz
sub
aad
inc
push
ret
es
shll
sbb
in
sbb
test
push
sarb
adc
sub
popa
inc
add
or
imul
cltd
jae
mov
insl
adc
and
add
movsl
inc
imul
mov
mov
pop
xchg
fisubs
movsl
mov
mov
sbb
bound
mov
fmull
int
out
push
sub
sbb
dec
cld
or
adc
js
scas
adc
fisubs
dec
out
fldcw
mov
popa
mov
bound
inc
clc
pushf
sub
loopne
imul
pop
push
call
jb
xchg
adc
jge
ss
cmp
xor
andl
inc
pusha
dec
je
sub
aad
jge
adc
ja
pop
push
push
in
mov
sar
xorl
enter
imul
gs
xchg
rorb
pop
in
lcall
fs
pusha
xor
out
sub
jecxz
sub
xchg
sbb
cwtl
push
arpl
cld
into
xchg
adc
cltd
mov
dec
fildl
gs
into
push
push
fwait
imul
mov
ret
scas
lcall
fidivl
mov
ret
inc
dec
inc
es
inc
fmuls
pop
in
sub
outsl
add
or
pop
add
test
mov
jbe
sub
xchg
in
push
mov
es
fwait
adc
mov
fbstp
addr16
jbe
mov
mov
xchg
hlt
and
mov
dec
adcl
jnp
push
shrb
xor
mov
pop
lret
jl
sti
shll
cli
scas
cld
in
in
mov
or
dec
mov
shl
adc
xchg
add
mov
xchg
push
push
mov
sti
jl
jmp
mov
inc
cmc
scas
hlt
fwait
leave
mov
stc
or
mov
xchg
cmp
mov
in
adc
mov
jecxz
jg
rclb
sub
ffreep
xor
movnti
arpl
or
adc
pop
fcomi
or
jo
mov
ret
push
push
pushf
pop
or
inc
in
xchg
mov
xchg
mov
sub
popf
jbe
jae
sbb
and
stos
or
ficoml
fiadds
pop
inc
xor
adc
dec
addr16
xchg
add
lods
inc
pop
inc
hlt
dec
dec
leave
dec
add
in
jmp
sbb
jle
imul
in
dec
cmp
add
out
repz
arpl
lods
and
jae
stc
in
ss
cmpsb
cmp
bound
xchg
mov
shlb
test
scas
fisubl
mov
sbb
movsl
mov
mov
cmpsb
mov
ret
outsl
adc
ret
add
jge
movsl
or
divb
scas
sub
arpl
mov
aas
add
je
sub
xor
loop
mov
xor
or
cltd
fimull
pop
xchg
jo
jle
and
ret
cmpsb
gs
cmp
imul
xchg
mov
sbb
mov
dec
out
xchg
popa
ja
out
mov
repz
imulb
mov
or
mov
mov
call
xchg
xor
leave
and
adc
add
stos
inc
popf
icebp
outsl
ja
arpl
push
jb
xor
pushf
loop
cmc
sub
push
inc
xchg
push
mov
jne
add
push
add
jbe
xchg
xor
dec
mov
test
fwait
out
add
mulb
jne
or
push
sub
mov
jecxz
bound
out
ss
inc
lcall
inc
inc
pop
mov
lret
add
lods
repnz
test
lock
sbb
push
test
sbb
sbb
push
push
cmp
cmpsl
push
mov
jge
push
adc
outsl
cs
cmp
cmc
test
mov
or
or
and
jns
mov
leave
dec
stos
jge
int
mov
test
out
mov
leave
in
imul
leave
outsl
sub
mov
inc
sbb
cmp
dec
pop
movsl
jne
movsb
leave
push
sbb
xor
push
sub
daa
fsubl
jae
stos
add
push
mov
outsl
mov
adcl
xor
aas
xor
int
jno
cld
sbb
inc
sub
ja
test
jg
aas
ss
pop
jae
clc
jno
lock
addr16
das
sbb
daa
jbe
mov
es
dec
and
ret
mov
cmp
lret
and
inc
mov
or
fwait
cmp
call
ret
or
sbb
xlat
loopne
pop
icebp
pop
ret
pusha
xchg
mov
insl
adc
lock
mov
imul
xor
xchg
pushf
lods
sahf
ret
and
gs
cmpsl
popf
mov
or
mov
pop
sub
mov
mov
push
scas
and
fistps
iret
in
ficompl
lock
outsb
pop
test
dec
into
jns
aas
scas
sub
xor
push
leave
jbe
mov
sub
aam
xchg
jne
fwait
mov
xor
mov
and
jp
sbb
bswap
or
xchg
je
push
bound
sbb
add
sbb
sub
movsb
mov
pop
jnp
sti
daa
xor
add
add
jmp
cld
pop
cwtl
into
mov
dec
enter
jmp
stos
das
fdivl
sub
shll
adc
nop
repz
jnp
movsl
test
bound
cli
hlt
icebp
lret
pop
xlat
divl
cmp
ds
loopne
pop
pop
xchg
lcall
sub
lock
cmp
xchg
mov
adc
hlt
lahf
add
or
inc
pop
sub
push
sub
mov
add
inc
mov
mov
mov
jne
aad
push
insl
mov
mov
test
shrl
pop
clc
cmc
loopne
loopne
mov
loope
dec
repz
rolb
dec
cmp
pop
sbbl
xor
mov
xchg
insl
sub
and
mov
loop
xchg
shl
jns
and
add
inc
imul
shll
mov
inc
out
dec
int3
fldt
in
xchg
movl
test
bound
add
stc
push
sub
jb
insl
aaa
xchg
xchg
jns
cmp
sub
xchg
out
movsl
mov
ret
xchg
xchg
in
fsubl
push
mov
ljmp
xor
aas
xchg
add
pop
insb
push
std
out
shll
jg
lret
repz
repnz
fbstp
sub
add
xchg
inc
mov
jp
add
adc
stc
int
pop
push
es
orl
mov
push
inc
out
jbe
insl
inc
sbb
ficompl
pop
or
ror
lahf
lret
sbb
test
sub
or
stos
call
js
mov
add
sahf
and
adc
call
addr16
jp
or
and
xor
fwait
xchg
stos
fwait
pop
xchg
movsl
mov
adc
xor
or
iret
add
lea
cmp
aaa
imul
add
stos
jle
add
lret
movsl
bound
fnstenv
pop
repnz
ret
jnp
push
lock
or
rolb
es
mov
push
pop
sub
xor
dec
sub
sbb
test
fwait
insb
pop
push
adc
je
jnp
jle
xchg
insl
pop
loop
mov
sbbl
mov
jbe
outsb
pop
mov
stos
xchg
test
adc
shr
mov
repnz
mov
scas
sti
lock
stos
dec
in
pop
mov
jb
push
push
cmp
adc
insb
out
inc
es
lahf
cmp
xlat
das
test
imul
push
pop
sub
push
out
in
mov
ds
pop
or
out
dec
inc
cmp
ficomps
or
popf
dec
fisubl
in
int
jae
push
out
sbb
jns
loopne
adc
dec
rorl
adc
aas
xor
hlt
scas
xchg
lock
sti
cpuid
scas
sbb
notl
addr16
xor
xchg
repnz
or
and
xor
jae
pop
mov
sar
mov
aam
in
pushf
test
fsubrl
adc
ffreep
sbb
jl
test
rcrb
gs
das
test
lret
adc
push
push
int3
stos
adc
inc
add
cmp
pop
and
push
hlt
sbb
lea
sbbb
add
cmp
imul
push
ret
cmp
in
aas
mov
mulb
jmp
xchg
cmp
cmpsl
sbb
mov
mov
or
aas
pop
scas
std
jg
jg
add
push
fwait
loopne
add
stos
xchg
mov
cmpb
xor
and
loope
xor
sub
hlt
mov
lock
sub
ds
cmpsl
adc
xchg
lahf
xor
inc
cmp
stc
sbb
add
add
mov
and
cmp
frstor
addl
mov
inc
nop
jne
outsl
inc
mov
in
nop
jmp
mov
outsl
stc
dec
or
jle
aaa
in
sbb
mov
fildll
push
inc
sbb
int
sbb
sbb
jo
pop
ds
mov
push
sbb
into
add
inc
loope
jbe
lods
mov
push
imulb
dec
imul
lods
daa
push
pop
daa
fildl
cmp
dec
ja
mov
movsb
xchg
in
in
sahf
push
mov
sub
jge
data16
shr
xchg
sub
mov
cmp
cld
das
add
jge
pop
sbb
pop
dec
xor
xchg
test
cmp
inc
adc
xor
fs
lahf
or
movsb
or
jmp
dec
and
pop
xor
aam
ja
push
push
gs
and
aas
sub
dec
xor
fwait
or
in
xor
gs
in
mov
mov
std
xchg
mov
jp
aam
push
dec
in
pop
and
rorl
divl
das
inc
out
inc
dec
inc
sub
leave
ficoms
cwtl
mov
inc
push
mov
or
fsubp
pop
rcrb
cmpsb
add
dec
inc
adc
filds
sbb
push
cmpsb
push
insb
nop
and
andb
xchg
dec
push
bound
dec
insb
repnz
je
pop
xchg
push
or
mov
inc
add
lods
pop
pop
test
xchg
mov
testb
scas
jmp
adc
fcomps
outsb
push
mov
das
popf
movsb
mov
inc
mov
sbb
xchg
pop
loop
mov
loopne
sub
xchg
push
sub
jno
pushf
xor
push
test
dec
pusha
mov
adc
lea
js
or
cmc
jp
out
xor
out
mov
pop
stos
in
sub
mov
daa
pop
mov
xchg
movsl
mov
pusha
pop
sti
sbb
lahf
mov
bound
push
test
add
gs
lods
scas
xor
adc
inc
iret
jb
dec
jmp
sub
cmp
or
in
cmpsl
or
cmp
clc
pop
lcall
or
gs
push
mov
scas
dec
out
insl
pushf
iret
test
pop
mov
ljmp
aam
mov
push
nop
adc
pushf
sahf
jge
imul
cmp
fisttps
dec
xchg
push
inc
xor
push
mov
and
sub
daa
mov
and
xchg
insb
repz
fmuls
jmp
adc
push
pop
dec
mov
mov
pushf
add
mov
or
pushf
xor
lock
lock
loope
loopne
cmpsb
sub
enter
ds
nop
adc
call
cmpsl
lds
fsubrs
xchg
fsubr
or
xchg
inc
cltd
mov
and
je
sahf
and
pushf
dec
adc
test
push
bound
push
adc
fcmovne
popf
xor
mov
sub
out
cmpsl
sub
rorb
adc
pop
arpl
jl
xchg
jmp
and
jns
adcb
rorl
clc
push
out
out
mov
push
cmp
sbb
call
jmp
repz
in
mov
mov
mov
fidivrl
xchg
cld
cmp
sarl
xor
clc
push
xor
pusha
jns
or
jns
dec
xor
aam
add
dec
xor
adc
sti
popa
es
adc
xchg
xchg
sti
or
fnstcw
inc
fistpll
shr
aad
mov
cmp
inc
mov
lahf
xchg
xchg
cmp
call
nop
sbb
stc
das
lea
test
int
neg
mov
bnd
in
mov
add
je
notl
nop
fidivrl
sub
dec
stos
adc
fnstenv
or
xchg
mov
aas
int3
dec
jbe
ret
inc
or
ja
fnstcw
lcall
sbb
stos
inc
cmpxchg8b
ret
sub
cmp
and
pop
stos
mov
add
shlb
lods
fdivr
lahf
push
mov
cld
mov
cli
and
les
pop
jne
dec
jne
cli
push
inc
xor
je
jno
scas
fbstp
push
imul
jmp
stc
pop
scas
sbb
mov
loopne
push
mov
mov
cmp
gs
and
sbb
xchg
scas
dec
iret
and
push
mov
jg
lahf
adc
jae
sbb
xchg
lds
lods
loop
shl
dec
aad
por
test
push
xor
xlat
pop
xor
test
and
jecxz
outsl
ja
jmp
push
or
pop
pop
inc
and
sbb
rcll
aaa
imul
cmc
fldt
cltd
xor
and
repz
pop
jnp
roll
pushl
mov
out
dec
out
mov
dec
xchg
std
sub
mov
push
xor
jg
jmp
pop
pop
lcall
or
shll
inc
stc
rorl
sbb
cs
sbb
jb
add
pop
sbb
aas
dec
adc
out
cmp
sub
jmp
sbbl
xchg
outsl
out
sbb
movsb
movsl
mov
lods
mov
cmp
adc
aad
ss
jae
arpl
out
lret
mov
inc
outsl
fidivs
fwait
in
push
cmpsl
mov
cs
scas
and
jns
jle
fs
adc
lods
popa
mov
mov
insb
cltd
fbstp
test
ds
jmp
push
loopne
pop
fistl
jb
lahf
addr16
cli
and
stc
lahf
xchg
out
mov
loopne
cwtl
mov
pushf
fnsave
into
or
mov
and
inc
sub
mov
in
dec
mov
repz
inc
mov
sbb
push
lret
inc
or
inc
jno
aaa
adc
add
aaa
out
jle
lods
in
hlt
push
mov
fisttpll
hlt
lret
loope
mov
mov
mov
repnz
leave
inc
xor
cmpsl
pop
push
jmp
cltd
push
push
stos
scas
pop
inc
push
dec
fwait
shlb
push
fists
mov
sbb
push
lods
sbb
pusha
ja
mov
inc
loop
mov
sbb
fisubrs
repnz
add
addr16
mov
mov
ret
cmp
std
adc
inc
or
shll
out
enter
xchg
hlt
pop
mov
dec
lret
sub
fldl
dec
lods
jne
push
push
pop
les
shlb
push
aaa
or
xor
call
xor
aam
mov
lods
mov
mov
call
dec
je
leave
push
inc
mov
mov
adc
sub
or
add
test
push
pop
sahf
sbb
lods
out
test
sbb
test
mov
push
lock
cmp
jo
lods
mov
rcr
pop
ret
jb
gs
imul
jb
lods
les
popa
cmpsb
xchg
addr16
and
xchg
or
call
or
pop
mov
dec
pushf
adc
cwtl
cmp
sbb
push
pop
stos
iret
xchg
mov
cli
mov
sti
push
mov
dec
ljmp
mov
imul
subl
and
out
jne
shll
call
mov
adc
nop
sarb
adc
in
jp
movsb
adc
adc
pop
add
cmp
mov
mov
inc
bound
xchg
roll
xchg
lahf
jl
outsb
sbb
scas
cmpsl
dec
cmc
push
scas
xchg
jne
mov
or
shlb
cwtl
cmp
test
out
ror
lock
and
add
add
lcall
fstpl
addr16
insb
or
sti
test
xor
adc
rcrb
sub
stos
cmc
loopne
cmp
iret
pop
je
xor
xchg
xchg
in
push
pop
push
rorl
mov
mov
jmp
popf
mov
xchg
jl
loop
enter
les
jg
call
outsb
inc
dec
or
lcall
cmp
lea
mov
scas
inc
stos
mov
bound
dec
push
or
pop
jg
pop
mov
imul
addl
sub
add
popf
mov
push
xchg
int3
sub
les
inc
in
fidivl
pop
inc
xchg
add
and
lcall
fwait
xchg
jns
mov
cli
sarl
mov
ljmp
in
adc
aam
lahf
jb
leave
xor
in
dec
sub
lea
outsb
ja
sub
imul
mov
addr16
pop
inc
stos
xchg
js
orl
std
and
or
movsl
mov
cwtl
push
jnp
mov
setp
je
shrb
mov
jo
push
sbb
or
push
jle
icebp
sbb
and
push
push
pop
flds
xorl
add
xchg
lods
mov
xor
cmp
lea
out
jmp
cmp
or
ret
and
mov
test
inc
iret
cwtl
outsb
dec
bnd
fmuls
out
rcrl
pop
fsts
fisubs
inc
add
inc
inc
and
pop
mov
divl
dec
mov
xor
inc
jb
jmp
cmp
add
lret
mov
pop
sub
adc
fstl
imul
bound
repnz
xchg
push
pop
std
cmp
mov
jns
int3
adc
dec
lock
jne
inc
and
repnz
out
sbb
aaa
lahf
adc
dec
push
inc
gs
into
jl
rolb
inc
cmp
repz
mov
add
inc
shrl
popf
pop
dec
enter
xor
testl
jae
pop
adc
dec
dec
mov
xor
or
or
sbb
rcr
push
cmpsb
sbb
sub
aas
or
out
sbb
mov
add
or
faddl
ror
sub
jns
ret
mov
xchg
and
subb
aam
jne
jns
frstor
pcmpgtw
scas
add
jp
ret
push
jle
sar
jl
jae
aad
insb
bound
pop
popf
stos
pop
xchg
loop
cmpsb
imul
not
dec
push
cltd
push
in
xchg
nop
mov
gs
fnstsw
in
dec
out
mov
push
stos
cmp
pushf
jl
ret
nop
mov
in
mov
fwait
xorl
push
cmp
lcall
stos
js
je
cmp
sub
xor
stos
jmp
xor
mov
xor
stc
cli
int3
int
loopne
push
dec
js
test
cwtl
test
inc
cmpsb
test
dec
xor
outsl
pop
test
enter
jecxz
inc
popf
jns
sbb
add
push
fwait
mov
mul
outsl
cmpsl
pop
sbb
cli
scas
or
shl
les
mov
ljmp
clc
jecxz
or
xor
xor
lock
dec
in
or
dec
orl
dec
lcall
and
or
or
test
rcl
mov
mov
add
mov
out
sbb
mov
cmpsl
add
push
repnz
fisubrs
data16
mov
adc
xlat
add
inc
in
adc
sub
int
xchg
push
pop
aam
lods
push
ds
shll
add
push
mov
xchg
out
jecxz
inc
cmp
push
repz
pushf
jl
out
psrld
enter
pop
jno
mov
ljmp
int3
cmp
sbb
adc
inc
andb
lods
scas
fisttpl
jl
xor
movsl
vpsraw
lods
ss
addr16
int3
fs
fs
jl
adc
cmp
loope
nop
vpmulhuw
sub
leave
std
stos
or
cmp
pop
xor
pop
fisttpll
xor
mov
std
xor
stc
stc
pop
jno
not
cli
jae
or
or
fwait
xlat
adc
enter
or
dec
cmpb
mov
mov
inc
dec
shl
jl
idivl
add
cmp
jmp
add
pop
push
mov
outsb
sbb
and
mov
adc
enter
push
push
mov
jno
xchg
inc
push
xor
fadd
repz
pop
jecxz
ljmp
fcomps
lret
test
repnz
imul
fldenv
dec
cmp
sub
lock
popf
sar
push
mov
cmp
mov
adc
out
cmpsb
imul
int
push
pop
ret
fldl
adc
jge
rorl
pop
int3
rolb
and
scas
test
outsb
mov
xorb
inc
xchg
xor
mov
shrb
xchg
je
das
insl
scas
lea
cmp
mov
ljmp
les
jg
scas
jno
pop
mov
int
xchg
or
mov
xchg
sub
inc
fucomip
adc
or
dec
out
shl
scas
in
outsb
loopne
test
js
xchg
lret
xchg
sbb
fiadds
mov
roll
ffreep
das
and
mov
mov
js
ljmp
cmp
xchg
mov
mov
adc
or
mov
js
xchg
cwtl
aas
mov
inc
inc
iret
lcall
movsl
cmp
xchg
jae
push
or
mov
aad
inc
je
shl
imul
ljmp
jg
add
mov
in
dec
mov
jmp
pop
mov
negb
sbb
sub
movsb
inc
push
pop
sbb
aam
rcrb
psadbw
fidivrl
jne
stos
jo
mov
stc
dec
stos
cmp
push
pop
xchg
stc
les
push
out
and
stos
mov
add
mov
xor
sub
aad
mov
or
fcos
addr16
jecxz
test
sahf
mov
and
pop
je
pop
insb
ss
xor
in
std
fmull
in
and
out
mov
or
daa
dec
pop
out
inc
jge
add
stos
dec
inc
or
std
cmp
hlt
lods
and
out
fildl
push
std
in
and
inc
sub
lock
xchg
add
pop
sub
jecxz
or
aam
fldenv
lods
ret
mov
movsb
cmp
and
adc
lret
add
mov
in
addr16
jne
leave
loope
sbb
bound
sub
cmpsb
pop
fnop
inc
int3
loop
popa
mov
sar
inc
es
movsb
pop
dec
nop
pop
mov
add
bswap
call
inc
add
push
aam
mov
daa
jno
jg
bound
cmc
inc
and
gs
je
adc
insb
test
add
sbb
pop
mov
repz
dec
xor
out
das
loopne
sbb
ljmp
inc
sbb
xchg
test
icebp
cmpsl
fadd
dec
lock
je
push
jl
or
adc
jmp
and
push
dec
repnz
cli
data16
cmp
jb
shlb
mov
cmp
popa
mov
jmp
sub
jl
fs
jp
movq
clc
jo
sbb
outsb
icebp
mov
add
out
pop
movb
arpl
sbb
mov
push
jmp
sub
mov
sbbl
mov
test
sub
dec
test
push
xor
push
stc
andl
xchg
pop
xchg
test
xor
pop
js
pop
mov
es
adc
out
lcall
pop
das
sbb
incb
sbb
leave
xorps
pushl
lahf
cmp
out
push
adc
fisubrs
insl
adc
and
mov
lret
fwait
outsl
je
test
mov
push
dec
add
lret
hlt
ja
out
test
or
mov
or
adc
and
push
jnp
inc
adc
scas
mov
pop
movsb
clc
in
les
lret
pop
mov
mov
xchg
push
iret
int
xchg
push
popa
ror
push
mov
mov
sahf
mov
js
rcl
shrl
imul
out
cli
enter
cmp
xchg
int
mov
jl
jge
je,pt
mov
mov
dec
xchg
adc
jp
in
les
push
xchg
push
inc
fistps
sahf
jg
xchg
aad
or
mov
push
or
mov
int
aam
adc
add
fidivs
and
movsl
sbb
outsb
mov
out
std
inc
mov
popa
out
rcrb
push
insb
aas
sbb
mov
sub
fdivrp
or
inc
add
inc
sub
pop
sub
and
cmpsb
mov
dec
add
xchg
fisubl
popa
mov
mov
pop
decb
imul
push
sub
cmpl
addr16
push
jge
jp
dec
popf
mov
mov
call
fnstcw
imul
push
fwait
bnd
mov
movsb
bound
int
das
fcomip
cmpsl
xchg
arpl
jecxz
addr16
fstl
aaa
nop
inc
in
decb
int3
xchg
jb
sbb
imul
mov
pop
lds
pop
pop
fwait
and
test
pop
sbbl
pop
xor
and
jmp
lret
outsl
fildl
xchg
je
sbb
mov
dec
dec
mov
mov
mov
add
adc
stos
test
pop
pop
adc
inc
lea
or
cmpsl
jmp
jno
cwtl
jl
add
mov
ja
pop
jle,pn
jge
ficoms
loope
scas
popa
and
mov
push
dec
daa
or
ret
sahf
mov
icebp
pushf
lret
xor
sub
mov
rcrb
gs
dec
cli
movsl
out
adc
frstor
jp
xor
cmc
cmp
sub
std
xchg
push
xchg
lods
enter
jecxz
cltd
pushf
lea
lret
call
cwtl
fisubrl
movsl
sbbb
mov
jb
stos
dec
mov
cwtl
dec
lcall
jle
notl
xchg
cmc
dec
cmp
rolb
scas
cmc
insl
mov
add
aas
jne
mov
and
push
sbb
mov
jmp
out
aam
jnp
sbb
rorb
and
cmp
mov
pop
cwtl
rorb
jno
add
lods
xchg
jl
inc
mov
and
jo
or
xchg
adc
fwait
adc
call
jmp
jnp
push
data16
ljmp
in
cmp
fwait
xlat
movsl
mulb
sarl
sbb
js
test
pop
addl
icebp
neg
imul
sub
je
out
jnp
push
cmp
inc
imul
jbe
pop
dec
aas
rolb
push
insb
ja
xchg
les
mov
and
cmp
push
mov
scas
cli
sbb
cmc
adc
and
mov
pop
and
stc
mov
jle
dec
cltd
mov
adc
cld
ljmp
mov
or
aam
movsb
or
pop
test
cmp
inc
lea
sub
xchg
mov
repnz
pushl
xchg
jno
sbb
jbe
jle
mov
repnz
sub
add
cmp
add
adc
or
jmp
rolb
adc
push
cmp
add
stos
dec
jl
dec
jmp
stos
adc
jmp
fdivrs
sub
and
loop
cmpsb
lds
cwtl
fisttpll
std
mov
mov
mov
out
push
cmpsl
jb
popf
movsl
es
xchg
and
push
mov
cmp
pop
nop
ss
jns
push
int3
mov
mov
roll
mov
dec
aaa
call
shlb
frstor
jne
mov
push
and
push
mov
invd
mov
xlat
dec
sbb
jmp
or
push
fcomp
stos
push
xor
or
fdivrs
repnz
xchg
jb
mov
enter
mov
mov
push
push
lock
shll
mov
aad
mov
lahf
mov
out
icebp
cmp
insl
imul
movsl
fsubs
addr16
inc
rcll
sub
jne
pop
loope
sub
out
cmc
std
mov
mov
outsl
loopne
adc
iret
lods
mov
jg
andl
xchg
lods
leave
cmp
lds
pop
das
xchg
fimuls
int3
ss
std
jle
loope
jmp
xchg
repz
out
mov
lret
repnz
into
cmp
lods
dec
push
sahf
sub
push
call
bswap
push
in
cwtl
pop
stos
lock
push
xor
add
and
insl
or
xchg
cmp
jg
movsl
push
imul
scas
ja
mov
inc
cltd
inc
pushf
lea
rcll
ss
pop
fdiv
or
inc
xor
push
pop
in
test
test
push
mov
push
mov
lret
scas
out
cmp
sbb
enter
dec
jae
push
into
mov
mov
into
sub
add
dec
iret
hlt
and
adc
subb
mov
int3
xor
mov
popf
lcall
cld
fmull
pusha
inc
scas
pop
push
sbb
mulps
adc
into
lock
popa
nop
mov
fisubrl
sahf
adc
and
out
dec
out
loop
and
cmpsb
and
je
mov
or
push
cmpsb
cld
xchg
push
aas
mov
ds
dec
mov
call
lahf
jecxz
pop
mov
fdivr
les
and
sub
add
clc
cmpsl
leave
sbb
stos
fsubr
fs
pop
adc
lret
stos
xchg
mov
mov
sbb
jg
test
adc
mov
add
pop
movsb
adc
fwait
js
sub
lods
repnz
pop
and
inc
cmp
and
std
pop
jae
int3
cmpsb
out
loope
mov
xchg
jnp
repz
inc
shrl
sbb
inc
mov
or
and
xchg
and
jbe
es
push
xchg
out
mov
stc
adc
cltd
inc
pop
xor
push
fsts
mov
dec
mov
lret
and
sbb
arpl
fmulp
xchg
test
cmp
sbb
jmp
testb
pop
test
out
out
stos
lods
xchg
nop
roll
jns
sub
xorb
inc
pop
add
ja
push
add
popf
in
xchg
xchg
jbe
sti
das
add
data16
fdivrs
lcall
push
in
cmpsl
cmp
pop
mov
push
and
push
das
xor
out
adcl
push
or
adc
xor
call
adc
cmp
daa
test
outsb
xchg
das
mov
mov
bound
or
pop
cltd
leave
fidivrs
cld
pop
fdivrl
inc
fstl
loopne
xor
je
jns
jnp
lahf
xlat
dec
ds
mov
mov
pop
sbb
jecxz
stos
in
into
pop
mov
loope
lret
cmpsb
popa
inc
cmp
and
scas
insl
mov
xchg
aas
sub
inc
test
jbe
or
jmp
rcrb
sbb
push
pop
imul
clc
cmp
lea
adc
add
repz
mov
das
pushf
xchg
adcl
and
je
pop
xchg
and
insl
jae
inc
imul
scas
pop
or
jns
loop
movsl
jle
mov
in
rolb
push
xchg
dec
call
add
sub
orl
sbb
cmpsb
imul
push
push
insl
mov
mov
xchg
mov
sub
ljmp
out
push
inc
mov
and
lock
iret
dec
in
mov
xchg
push
bound
or
add
and
xchg
fists
aas
in
and
and
mov
mov
or
iret
pusha
mov
jmp
test
adc
inc
push
pop
ret
mov
dec
int3
mov
cli
jecxz
inc
fstpt
pop
div
xlat
das
ror
mov
xchg
jb
cmp
sbb
pushf
fnstsw
push
add
nop
adc
inc
cmpsl
or
cmpsb
mov
xchg
push
pop
imul
bound
fstpt
jno
rorb
lock
dec
les
inc
aad
fsubs
push
into
or
jmp
mov
pop
clc
sbb
por
adc
sbb
cs
iret
xor
jecxz
mov
sbb
cmp
xor
xor
pushf
sub
xor
mov
js
sti
mov
sub
aam
repnz
aaa
das
ficoml
lds
xlat
sub
lahf
outsl
out
out
rclb
das
jmp
xchg
int3
cs
jns
mov
mov
stc
mov
aaa
leave
incl
pop
or
pusha
push
in
mov
push
cmpsb
stos
aad
test
cld
lcall
bound
jne
fdivrs
or
push
inc
sbb
sub
lods
pusha
aaa
inc
sbb
aaa
push
xchg
jg
dec
dec
or
jl
les
lock
test
bound
sbb
cwtl
iret
sub
mov
out
adc
xchg
popf
pop
fwait
in
jmp
outsl
ror
icebp
fwait
push
inc
push
sbb
aas
stos
sbb
lret
inc
xor
addr16
adc
test
xchg
out
mov
mov
add
and
adc
insb
fildll
push
and
mov
pop
arpl
or
pop
mov
rcll
js
js
push
and
xor
int3
pop
stc
arpl
loope,pn
xor
cmp
and
leave
sub
inc
adc
fstp
push
popa
iret
imul
xchg
xchg
xlat
insb
xabort
rcrl
movsb
lahf
mov
int
xchg
mov
jne
std
sbb
out
inc
ret
mov
fcmovnu
adc
andb
xor
and
or
ret
and
lahf
cmovno
loope
mov
sub
inc
in
cwtl
imul
add
mov
add
mov
outsb
cmc
fld
push
mov
insb
pop
sbb
jecxz
mov
xor
mov
add
sahf
xor
jbe
pop
movsb
mov
xchg
jecxz
mov
in
cmpsb
in
test
xchg
push
jle
sbb
jbe
shll
out
add
inc
arpl
dec
and
test
xchg
mov
scas
lods
lahf
mov
mulb
lea
out
add
jae
sbb
inc
mov
fs
nop
push
mov
mov
fsincos
xchg
lahf
pop
pushf
cli
mov
fistps
dec
cmpsb
fsubr
test
and
push
xor
add
scas
scas
dec
ja
mov
cmp
cmp
xor
bnd
push
out
pop
lea
push
fsubrs
push
mov
test
test
jmp
push
jmp
sub
mov
push
jno
adc
push
xor
sbb
std
dec
cmpsl
adc
xor
ljmp
jecxz
scas
addr16
shll
movsl
jae
and
ror
je
dec
and
jo
lods
call
pmaxub
mov
fisttpl
testl
mov
adc
icebp
repz
jecxz
sbb
push
cltd
adc
bound
jl
sbb
pop
nop
ljmp
js
mov
mov
xchg
push
in
movsl
dec
aad
xchg
test
sbb
cmp
enter
daa
xor
jg
rolb
movsl
inc
rcrl
in
mov
jecxz
mov
lock
int3
xor
je
or
mov
scas
in
icebp
fld
mov
xchg
into
or
stc
mov
cwtl
std
xchg
jmp
inc
cmp
sbb
sub
pushf
dec
xchg
or
mov
fcoml
dec
bound
rorb
loop
js
enter
jo
ret
popf
sbb
lock
negl
jmp
sbb
jne
cmp
loop
and
out
xchg
jge
xchg
pop
bound
pop
adc
testl
fisubl
icebp
xor
rep
adc
add
stc
imul
lods
sub
into
push
cld
clc
hlt
jp
pop
dec
repz
xor
jge
mov
je
bound
jmp
jb
cmp
lds
sahf
jae
cltd
inc
xchg
adc
add
or
call
pop
movsl
mov
inc
sbb
xor
dec
and
lret
adc
mov
push
fsubrl
decl
add
add
push
out
jmp
cmp
loopne
loope
pop
and
out
cmp
mov
lock
cmpl
dec
mov
xchg
xchg
daa
sub
divb
insb
repz
xor
xor
stos
pusha
push
adc
cmc
das
aaa
les
pop
xlat
jno
xchg
cmp
sbb
mov
ja
lds
xchg
sbb
mov
push
inc
dec
inc
xor
lahf
aas
pushf
pop
out
int3
push
scas
aam
push
adc
mov
lret
push
unpcklps
inc
adc
xchg
pop
lret
xchg
jno
ficoms
sbb
stos
and
out
negb
ja
pop
out
aad
movsl
xchg
inc
cli
or
mov
out
movsl
pop
pop
mov
into
sub
cltd
and
add
mov
aas
faddl
or
imul
arpl
lahf
adc
mov
ja
cli
in
cmc
or
pop
sub
ret
insb
inc
inc
je
gs
cli
clc
dec
mov
jae
arpl
subl
xchg
cmp
fists
mov
flds
flds
or
jns
adc
and
mov
mov
adc
dec
push
sub
stc
cmpsl
pop
mov
sbb
scas
lret
inc
pusha
push
mov
inc
std
and
mov
rorl
and
mov
repz
call
in
push
push
lahf
mov
jecxz
test
cmp
xchg
cmpsb
pop
imul
repz
enter
out
push
and
and
xor
sbb
add
shlb
cmp
in
out
xor
ljmp
inc
pop
enter
push
cmp
sbbb
in
mov
fnstcw
xchg
cmp
push
cmp
push
ret
jl
fdivrl
cld
pop
gs
inc
fsubrl
aam
cmp
or
pop
insl
inc
sbb
jmp
loop
push
sbb
jp
insl
push
imul
popf
jp
rcll
ret
mov
sbb
outsb
jae
push
repz
ror
push
fsts
fucomi
inc
or
pop
stos
or
cmpsl
and
cmp
adc
lahf
into
jmp
shrb
mov
mov
int3
mov
loop
sbb
fsubl
stos
inc
mov
icebp
movsb
xchg
dec
and
or
ret
icebp
push
dec
xchg
lods
mov
test
push
rcll
xlat
add
data16
addr16
lods
mov
ljmp
test
lcall
sub
xchg
iret
push
add
jle
ss
shr
xor
pop
fimull
adc
or
lods
aam
push
adc
push
pop
out
pop
and
cltd
and
je
push
pop
das
ficoms
decl
dec
cmp
mov
les
pop
fwait
lret
inc
pop
test
outsl
aam
shl
or
repz
xchg
dec
pop
aad
lock
mov
inc
notl
adc
xor
dec
xor
test
fcomps
ror
sub
stos
cmp
xchg
iret
lret
popa
leave
ret
dec
xor
les
xor
repnz
xchg
inc
lret
stos
xlat
and
mov
adcb
jmp
mov
clc
es
out
lods
shll
imul
add
test
ds
pop
cmp
repz
or
dec
sti
outsl
push
and
cmpsl
and
clc
popa
adc
cmpsb
xchg
lods
add
into
mov
xchg
xor
mov
js
mov
mov
jne
and
lock
fadd
sub
std
shll
repnz
idiv
int3
xchg
jns
stc
dec
popf
pop
clc
in
push
inc
add
mov
int
or
sub
loop
stos
les
popa
lock
cmp
cmp
mov
sbb
or
lahf
rcrl
pop
movsl
icebp
or
add
add
jle
jecxz
scas
jnp
jo
jl
aad
xor
push
and
xchg
inc
loope
pop
rol
aas
loopne
xor
jo
adc
fmuls
and
pushf
xor
and
dec
leave
xchg
pop
stos
pop
imul
les
sahf
push
dec
add
dec
push
jb
and
jno
jge
inc
and
jns
inc
dec
xchg
xchg
cmc
jmp
push
xchg
mov
divb
addb
es
lcall
fs
xchg
imul
dec
and
aaa
ds
push
stos
mov
jl
xlat
jb
adc
nop
nop
lcall
icebp
and
cmc
push
xchg
outsb
pushf
fimuls
daa
sbb
push
stc
pop
push
fs
sub
dec
outsb
imul
dec
xor
movsb
leave
loopne
cld
neg
and
scas
movsl
cli
pop
in
cmp
and
stos
mov
or
push
jb
add
add
hlt
outsl
ret
sbb
stc
in
fidivrs
es
pop
jb
stos
movsl
sub
fistpl
jno
or
xchg
insl
jmp
and
jl
jl
mov
push
aaa
push
mov
xor
pop
faddp
mov
test
sar
xchg
add
and
sub
out
test
inc
adc
mov
loopne
push
lock
ret
rorl
imul
outsl
adc
icebp
cli
xor
out
enter
mov
es
std
or
cmp
fimull
add
mov
xchg
dec
cld
mov
lods
jo
push
or
popf
jle
stos
cwtl
and
mov
sub
adc
cmp
repz
mov
stc
pushf
aam
fildll
sbbl
jnp
insb
outsl
cs
pop
std
add
ds
pop
and
mov
es
adc
sbb
xor
push
pushf
mov
test
push
out
mov
or
hlt
fistpll
call
cltd
fwait
sbb
jp
test
xor
jmp
jmp
repz
lret
and
fisttpl
jo
inc
push
addr16
lahf
les
push
push
push
jo
inc
std
jg
imul
inc
mov
shlb
lea
xlat
sub
cmp
repnz
mov
add
imul
cmc
adc
xor
adc
xlat
jo
mov
lcall
and
movsl
xchg
out
stos
sbb
mov
mov
sub
push
cmc
nop
icebp
sti
cmp
test
daa
add
fistl
jl
mov
pop
mov
int3
push
sub
inc
or
xchg
loope
aaa
call
nop
es
clc
fucomip
rclb
xchg
pop
and
rorb
fwait
in
lret
jmpw
lcall
js
sub
mov
ret
int3
leave
testl
lret
cmp
dec
add
ficoml
rorl
scas
cli
pop
jo
push
or
mov
call
sahf
pop
sub
fdiv
cmp
mov
adc
mov
fadd
sar
orb
scas
aas
add
dec
mov
inc
popf
mov
rcr
test
sbb
jne
push
cld
push
mov
cmc
int
pop
out
cli
jb
mov
mov
out
xchg
enter
add
add
push
inc
dec
sbb
js
lods
mov
xchg
mov
jmp
scas
std
sti
popf
sahf
data16
dec
xchg
mov
sbb
mov
push
fiadds
lcall
call
cltd
xchg
mov
mov
xlat
pop
icebp
outsl
ljmp
push
jmp
ret
fldcw
ds
xlat
push
or
addr16
fldcw
aam
out
sbbb
sbb
mov
jecxz
out
lods
shlb
add
and
dec
xchg
add
sub
negb
out
fcomps
lahf
gs
or
push
push
int3
ret
dec
aas
inc
mov
popa
pop
je
jo
push
mov
xchg
mov
cmp
mov
jbe
mov
fs
dec
or
lret
adc
lahf
cmc
arpl
pop
add
push
mov
movsb
lret
inc
mov
int3
ret
xor
pop
mov
sarb
mov
xlat
xchg
or
add
add
stos
xor
loopne
cmp
mov
mov
shlb
push
les
insl
fstpt
mov
and
sarl
dec
dec
adc
test
je
nop
pop
movsl
pop
ljmp
insl
scas
cltd
xchg
mov
fldt
jbe
push
push
cltd
clc
out
test
xor
jge
into
mov
movsl
mov
cmp
mov
das
xchg
nop
jle
push
int3
lcall
jns
in
inc
xor
push
xchg
pop
int
adc
out
pop
addr16
popf
push
decb
imul
adc
fwait
clc
dec
add
sti
js
lret
ret
add
mov
mov
fmul
xorb
rorl
sub
sub
icebp
mov
test
cltd
lds
inc
cmpb
xor
mov
fwait
movsl
dec
cmpb
cmp
testb
mov
int
loope
mov
lods
in
sbb
out
in
ljmp
sbb
push
hlt
push
cmp
daa
mov
xchg
jno
xchg
mov
fsts
mull
dec
push
out
sub
insl
inc
pop
mov
sub
int3
mov
mov
cli
stc
mov
sahf
mov
xor
add
and
xchg
mov
bound
test
aad
dec
push
stos
into
test
pop
cs
rcll
sub
lahf
mov
and
sbb
iret
inc
nop
xchg
clc
mov
adc
inc
adcb
sarb
dec
inc
fcmovne
gs
and
mov
mov
lcall
jg
add
inc
out
adc
out
and
xchg
mov
cltd
mov
scas
addr16
aaa
add
jnp
push
pop
add
lods
stos
std
sub
mov
mov
femms
insl
stos
jle
fisubrs
push
mov
insl
lret
or
inc
jg
rolb
outsb
bound
jb
jp
adc
xchg
add
push
adc
mov
inc
inc
jo
sbb
add
stc
in
bnd
mov
xor
and
lahf
rorl
cltd
movsb
xor
das
outsb
dec
add
hlt
jns
add
pop
fnstsw
mov
outsb
movl
ljmp
xchg
pop
cmpsb
cmp
pop
dec
adc
add
ja
or
jne
jp
pop
insl
stos
sbb
mov
cmp
repnz
push
pop
pop
push
dec
xor
xchg
add
mov
lea
or
jns
mov
or
daa
sbb
ja
dec
loop
jb
mov
out
inc
sarb
jmp
mov
sarl
cltd
mov
loope
hlt
mov
push
loop
push
fsubrs
mov
pop
jecxz
push
iret
or
lahf
leave
adc
push
cwtl
shlb
xor
pand
test
push
das
xchg
inc
in
movsl
ret
iret
scas
sti
mov
in
out
scas
ret
push
bound
clc
mov
dec
add
sbb
mov
call
mov
imul
pop
xchg
icebp
lods
das
call
push
test
pop
fmuls
push
sub
mov
and
cmp
fdivp
shlb
sub
jo
ljmp
fisttps
xchg
pop
shll
in
lods
xor
inc
sahf
sub
cwtl
jnp
lret
xor
test
push
subl
inc
xchg
add
insb
mov
data16
in
or
sbb
les
stos
sbb
fdivp
mov
daa
stc
out
jp
jno
mov
push
cmp
pop
mov
mov
ret
outsb
je
arpl
repz
jp
lcall
enter
pop
cmp
sub
fsub
bound
ljmp
ljmp
jo
sti
out
fdivl
jbe
jae
add
push
mov
pop
mov
and
aam
pop
lea
repz
adc
sub
inc
mov
mov
mov
int3
mov
mov
imul
pop
aam
and
xlat
sbb
sbb
rcll
aaa
movsl
xchg
inc
out
jle
add
inc
js
mov
stc
aam
sbb
inc
sarb
shrl
or
inc
xor
jns
aad
xor
mov
push
jno
sahf
lods
js
test
push
in
shll
movsl
cltd
cli
stos
add
push
mov
jle
aas
adc
in
xor
aam
sbb
mov
sub
std
cmp
cmp
popl
xor
mov
test
sbb
or
int
push
js
pushf
jbe
aaa
add
ret
call
into
arpl
mov
in
cmpsb
call
dec
stos
adc
mov
mov
movsl
mov
sbb
lds
adc
pushf
mov
sahf
add
pop
test
das
mov
and
mov
xlat
ds
sahf
push
mov
call
mov
out
jae
test
inc
mov
cmp
jno
inc
loop
shll
rorl
jge
push
adc
or
movb
jp
mov
and
fcomps
lods
sti
xchg
xchg
pop
xlat
pop
or
int
ret
pop
or
lret
and
sti
lahf
into
test
lds
fmull
mov
xchg
inc
test
add
int
fwait
call
mov
and
push
add
in
add
lock
inc
sbb
aad
hlt
lret
leave
or
cmp
mov
scas
xchg
roll
inc
push
cmp
iret
jle
jp
jno
daa
push
cmpsb
addr16
or
popf
cmp
js
inc
mov
adc
repnz
test
imul
imul
lcall
push
cs
mov
outsb
rclb
xchg
mov
add
or
jge
gs
mov
mov
mov
or
dec
stc
or
mov
push
or
xchg
mov
stos
jge
adc
frstor
cmp
pop
loop
jnp
xchg
imul
mov
jbe
cmpsl
jp
fistl
pop
inc
or
insb
sbb
or
xchg
sarb
inc
mov
mov
call
aaa
sbb
jbe
or
jp
jne
jg
add
lcall
addr16
and
inc
movsl
sti
shr
loope
js
sarb
pushf
push
lcall
mov
jecxz
sbb
iret
repz
movsl
shrb
loopnew
push
push
sbb
cwtl
jbe
or
xchg
jg
sbb
xor
pop
xchg
push
xchg
rcrb
push
pop
call
push
in
xor
add
push
mov
out
cli
sub
leave
es
popa
sbb
das
loopne
fstps
out
xor
jecxz
cld
loope
mov
stos
adc
pop
or
xor
mov
push
lea
pop
xor
js
and
and
psubd
fs
fistpl
mov
mov
dec
lcall
sbb
ljmp
psrlq
mov
or
mov
mov
xchg
push
hlt
mov
sbb
xchg
jne
out
data16
dec
or
pop
or
jnp
ret
mov
dec
and
sbb
or
or
scas
mov
mov
sbb
aad
aaa
sti
dec
push
xor
orl
cs
repnz
cli
xchg
xchg
lea
jp
stc
push
pop
imul
ljmp
loopne
lea
ret
push
es
xchg
xor
xchg
in
xchg
sub
in
in
imul
fs
test
lods
xchg
cli
xchg
jg
out
rorb
pop
fstpt
sar
and
nop
jge
sbb
aas
push
cs
push
mov
adcl
andb
test
jl
nop
test
inc
xor
std
add
enter
fldl
and
push
je
xchg
movsb
adc
mov
and
lock
mov
enter
insb
repnz
add
in
stos
repz
cli
sbb
push
pop
pop
or
bound
rorb
xor
xor
jns
shr
jg
jl
sbb
cwtl
mov
or
and
ja
cmp
push
movsl
movsb
fildl
pop
test
stos
rol
push
mov
xor
cmpl
jmp
cltd
push
sbb
jl
pop
sub
mov
mov
add
mov
decl
mov
adc
leave
sbb
and
out
and
lock
mov
movsl
addr16
jmp
mov
fprem1
xor
or
out
pop
cmp
xchg
out
shrl
outsb
dec
dec
inc
ret
sbb
xchg
xchg
pop
jo
mov
lock
push
aaa
sbb
cmpb
and
scas
fcoms
xor
and
adc
std
jno
test
xor
push
mov
mull
push
out
sbb
lcall
sub
pop
test
fwait
cmpsb
adc
mov
xor
hlt
dec
cmp
sub
int
outsl
add
mov
and
and
add
or
pop
xchg
push
nop
int
lret
mov
push
scas
pop
and
add
xor
push
dec
and
in
scas
or
lret
push
sub
mov
jo
dec
jns
cmp
movsb
xor
adc
sub
cmc
xor
xor
mov
repnz
jns
aam
or
enter
cmc
jb
nop
mov
xchg
hlt
pop
or
and
jbe
ss
int3
enter
iret
push
lods
andb
out
cmp
push
push
fs
roll
add
icebp
sub
ljmp
lea
mov
push
mov
popa
push
test
shrb
scas
xchg
icebp
adc
push
cwtl
aas
fsubrs
inc
add
add
cmp
mov
out
loopne
loope
jp
dec
mov
stos
dec
add
xchg
dec
or
or
xor
out
loopne
js
push
mov
xchg
out
fldl
ret
cmp
adc
nop
fs
inc
fbld
lret
dec
jecxz
sub
pop
lea
sti
pop
xlat
insb
ljmp
jae
xchg
cmpsl
lock
cli
and
rcrl
lret
mov
and
imul
fwait
adc
cmpl
or
inc
mov
loop
js
xchg
enter
pop
mov
sbb
mov
je
imul
or
out
cmpsl
cmpl
pop
mov
pop
or
mov
outsb
sub
hlt
mov
lods
dec
shlb
jo
cmp
add
adc
fmull
xor
not
pushf
pop
imul
iret
sub
xchg
pop
jns
xor
hlt
sbb
bswap
pop
scas
fdivl
mov
lcall
repz
adc
xorb
dec
out
incl
rcrb
sti
dec
lcall
movsl
jg
lock
xchg
adc
mov
jo
cmpsl
cmp
ljmp
cmp
mov
xchg
ljmp
jl
mov
subb
mov
in
lret
fisubl
pop
ficoms
int3
insl
xchg
mov
clc
mov
inc
or
aad
sahf
ret
xchg
hlt
mov
bound
xchg
push
or
sub
sub
push
pop
cmpb
mov
je
sub
xchg
pop
add
flds
push
notl
add
mov
shlb
arpl
push
js
mov
cmp
add
aad
jns
js
fidivrs
push
sbb
or
push
test
jg
gs
ret
bound
pop
jns
adc
daa
mov
sbb
adc
pop
ja
call
or
fwait
mov
jb
fldt
cmpsl
test
xchg
and
sub
dec
jne
adcl
call
mov
mov
and
mov
and
ds
mov
test
test
xor
aad
in
insb
nop
and
xchg
movsb
sbb
dec
imul
movsl
cltd
sbbl
and
jns
mov
mov
push
aas
or
inc
mov
pop
inc
mov
das
arpl
loopne
filds
icebp
stc
push
popa
cmpsb
repz
and
sub
cs
jp
add
cmpsl
jp
mov
cmp
xchg
jp
dec
inc
inc
jnp
push
xchg
or
pop
cmpsb
adc
aad
mov
inc
mov
scas
jmp
cmpsb
xor
loopne
mov
insb
push
addr16
inc
push
xchg
sbb
jnp
jnp
jbe
mov
add
ret
mov
imul
inc
mov
push
push
fpatan
sbb
shlb
xchg
xlat
jmp
mov
dec
je
call
or
mov
add
xor
sti
xchg
xor
cltd
gs
cwtl
fwait
out
and
ljmp
mov
jl
mov
fwait
imul
push
ja
movsl
xchg
inc
fs
pusha
adc
dec
push
or
push
out
mov
pusha
cwtl
leave
js
leave
adc
mov
mov
clc
xchg
jne
jnp
lock
je
stos
sti
loop
adc
jno
and
pop
aas
test
sub
xorps
insl
xor
push
sbb
add
pop
jo
shl
jb
pop
or
jg
insl
sarl
cmp
or
adc
sub
cwtl
lds
aaa
adc
cmp
mov
js
or
dec
sbb
je
adc
test
jnp
xchg
dec
adc
jl
call
fildll
xchg
scas
rorl
ret
xor
cmp
int3
gs
sub
enter
cmpsb
clc
ja
fistl
cmp
push
dec
sub
push
add
iret
movsb
or
push
imul
popa
mov
js
mov
pop
aas
in
jno
add
call
adc
push
pop
cmp
mov
clc
mov
scas
rorl
divl
mov
pop
dec
pop
lea
jge
popa
aam
dec
jmp
pop
xor
xlat
sbb
jns
push
pop
fisubs
das
ret
movsl
jb
sbb
inc
xchg
bound
xchg
mov
mov
clc
dec
push
arpl
cmp
xchg
add
out
mov
ret
outsl
pop
mov
les
mov
push
cmp
mov
cmp
inc
lcall
mov
cmp
lret
nop
mov
sub
sub
inc
dec
jp
call
mov
or
push
imulb
xchg
wbinvd
and
or
inc
push
fidivrs
inc
mov
add
xchg
mov
imul
jmp
movsl
pop
cld
daa
subps
cmp
and
jnp
outsb
jg
lahf
movsb
sbb
mov
cmpsb
pop
lea
push
outsl
sub
ret
cmp
int
jmp
cli
pop
ja
mov
sbb
pop
or
pop
aas
out
sbb
cmp
in
aad
loop
clc
mov
mov
push
stos
push
xor
xlat
push
sti
pusha
aam
cmc
outsl
daa
outsl
mov
out
mov
mov
int3
rolb
lcall
arpl
mov
leave
jp
jle
out
xchg
mov
inc
xchg
mov
xor
push
push
lcall
rcrb
ljmp
ficompl
mov
fisubrl
mov
xchg
stc
jge
or
mov
jg
f2xm1
mov
in
cmp
stc
pop
in
dec
push
push
into
ret
mov
jo
sub
in
mov
pushf
jmp
adc
pop
movsl
mov
inc
add
cmp
mov
insb
or
jp
cli
lds
stc
scas
mov
mov
sar
outsb
adc
test
mov
lds
sahf
xchg
cmpsb
movsb
addr16
mov
fcom
aam
aas
pop
mov
xor
mov
cli
test
insl
sub
push
ficoml
rcl
pushf
fcomp
mov
testb
nop
mov
and
cmpb
in
mov
into
xor
mov
cmp
stos
or
call
roll
rorl
fsubs
or
filds
leave
in
sub
mov
ret
in
add
pop
lret
rcll
data16
dec
add
pop
movsl
repz
or
mov
cmp
clc
mov
insb
gs
sub
testl
ja
xor
mov
rolb
cmp
sub
push
or
test
mov
pop
fwait
lret
mov
mov
cwtl
testl
loop
xor
push
adc
push
mov
repnz
mov
adc
adcb
dec
iret
push
test
int
scas
xchg
add
jns
divb
arpl
jae
lods
into
lock
imulb
popa
mov
sub
and
sub
add
jno
xor
popf
cwtl
pop
fnsave
scas
jne
cmpsl
sbb
rol
lock
mov
sbb
push
popa
inc
sbb
ss
and
ficoml
sbb
scas
test
cld
ficoml
lahf
andb
or
fs
mul
mov
imul
std
lahf
icebp
cmc
test
sub
mov
sub
sbb
dec
adc
movsb
rorl
cmpsb
in
bound
movsb
push
cmpsb
sti
fwait
out
dec
daa
rcrb
adc
xor
fsubrl
and
stos
inc
mov
insb
les
pop
stc
imul
jmp
dec
or
push
sahf
pop
xor
pop
and
aaa
loope
fs
add
ljmp
mov
icebp
hlt
ret
kmovw
out
mov
cmpl
icebp
add
or
clc
scas
or
lcall
test
shlb
mov
cwtl
jl
pop
mov
dec
shll
shrl
leave
pop
xor
hlt
inc
and
sub
ret
xchg
test
int
into
out
in
cmp
adc
out
mov
gs
sub
mov
int
dec
xchg
mov
pop
jmp
and
jle
scas
js
test
inc
inc
sub
cltd
iret
add
imul
mov
cmp
push
out
bound
push
mov
icebp
loope
out
inc
call
jns
jmp
jg
arpl
rcl
add
pop
push
ljmp
xlat
je
fdivrs
insb
ret
cmp
mov
je
lahf
mov
insb
xor
scas
adc
push
mov
sbb
stos
adcl
mov
fnstenv
and
and
pop
pop
jo
cli
stos
pushf
cld
mov
cmp
jl
imul
or
pusha
push
mov
jae
adc
js
xorl
sti
jecxz
mov
mov
addr16
or
sti
insb
adc
inc
sub
mov
jmp
inc
pop
dec
aad
mov
sub
mov
adc
mov
sub
adc
pusha
mov
jnp
out
orl
iret
push
lret
stos
stos
mov
out
cmp
std
into
mov
sbb
xor
xor
jo
jge
mov
inc
popa
test
fwait
pop
repnz
jecxz
mov
mov
or
nop
iret
cld
scas
testl
xor
enter
addr16
loope
add
xchg
adc
scas
xchg
push
push
or
jns
into
in
arpl
jnp
aad
add
je
cmpsl
xchg
mov
repz
xchg
popf
push
iret
and
daa
or
in
pop
fwait
cli
inc
and
pop
inc
dec
mov
pop
xor
cli
outsb
popf
out
xchg
or
stos
pop
adc
sub
sarl
or
lret
loopne
sub
sub
aas
sar
adc
sbb
xchg
adc
movsb
jbe
jno
stos
mov
pop
mov
lea
sub
mull
cmp
or
call
push
pop
mov
inc
pop
or
mov
rcrb
movsl
jns
outsl
jnp
mov
mov
pop
adc
inc
mov
shl
fists
in
in
push
cmp
movsl
push
test
out
test
or
in
inc
inc
ret
inc
or
and
xchg
in
and
dec
and
unpcklps
inc
mov
cltd
or
xor
out
cmpsl
or
push
test
ja
mov
das
cmp
sbbl
inc
and
inc
mov
imul
mov
ret
lock
mov
xlat
adc
sub
xor
mov
mov
push
pop
popf
or
int3
mov
fnstenv
ret
aas
jmp
jo
add
add
and
sarb
cmp
out
out
out
add
push
out
nop
pop
cmp
mov
cmpb
inc
dec
iret
jge
cmp
dec
rorl
nop
cmp
cmpsl
lds
stos
mov
adc
dec
adc
pop
aaa
jne
sahf
faddl
and
sahf
xchg
mov
cmpsl
inc
xor
addr16
dec
jmp
mov
or
mov
ret
xchg
and
mov
jns
inc
ds
xor
and
inc
adc
xor
je
popa
call
fldenv
mov
jo
xchg
dec
cwtl
les
and
push
push
sbb
repnz
lcall
lahf
mov
into
arpl
xchg
xor
xchg
mov
pop
dec
sub
je
int3
xchg
mov
xchg
fcoml
les
xchg
dec
iret
dec
sub
sahf
cld
push
add
ficompl
divl
sahf
js
sub
jle
loop
daa
fcomps
inc
pushf
dec
mov
jno
jl
out
push
fnsave
fwait
mov
adc
push
cmpsb
daa
jb
cmc
cli
or
jmp
shll
push
xchg
jge
loopne
cmp
add
les
jle
mov
or
rcr
ret
jecxz
test
and
add
andb
xchg
pop
ljmp
pushf
jecxz
sub
mov
mov
add
dec
clc
scas
mov
rcrb
rol
push
sub
mov
repnz
mov
sar
out
mov
push
insb
jl
imull
push
rorl
pop
xor
cmp
and
push
daa
adc
ret
sbb
or
sbb
sub
nop
ljmp
das
dec
cmp
pushf
jns
jp
jnp
fldcw
jecxz
lahf
enter
jle
mov
sub
shlb
mov
les
cmp
scas
aad
inc
xchg
aam
push
aas
aas
data16
inc
pop
bound
jge
jnp
or
stos
add
test
testl
xlat
sarb
mov
xor
cld
adc
sub
xchg
jmp
sub
jb
ljmp
jmp
rorl
xor
jmp
aad
push
in
and
lock
and
scas
test
lret
shl
cmp
sub
int
leave
outsb
pop
cli
push
xchg
jmp
cltd
xchg
xchg
sub
dec
mov
daa
lcall
cltd
xor
aas
in
lods
sbb
xlat
mov
xchg
outsl
cmp
push
pop
dec
xchg
insl
aad
pop
decl
jl
into
into
mov
jnp
test
repz
std
and
mov
cwtl
or
repnz
xor
aas
sbb
mov
and
push
lds
addb
andl
push
aam
xor
jl
lret
pushf
mov
push
adc
sub
popf
xchg
cmp
pop
or
fnstenv
cmp
stc
insl
rorb
rol
and
scas
test
mov
popl
inc
js
popf
notl
insb
call
lods
cmp
push
loope
imul
aaa
add
jp
subl
jl
fnsave
shll
fwait
inc
testl
outsb
js
jecxz
and
and
mov
test
aas
outsl
xchg
lcall
push
mov
faddl
dec
dec
sbb
lret
ja
cmp
repz
mov
xstore-rng
cmpsl
test
sarb
mov
mov
filds
pop
bound
adc
pop
xor
out
add
ss
and
xor
movsl
pop
sbb
sub
cwtl
sbb
repz
fs
dec
sbb
clc
push
push
push
xlat
inc
mov
and
inc
fnstenv
xchg
lret
mov
push
dec
push
jmp
and
mov
adcl
add
aas
mov
shrb
xchg
subb
push
adc
add
jns
test
loope
cmp
lock
mov
lea
sub
mov
in
shll
ds
scas
xchg
int
pop
fidivs
nop
dec
arpl
xor
cmpb
imul
cmp
and
jo
bound
inc
bnd
shl
jo
daa
xchg
dec
mov
sub
inc
push
loop
mov
les
sbb
xchg
mov
das
adc
sbb
ffree
cmpl
movsl
dec
or
jb
mov
pop
adcb
sub
aaa
fwait
ret
sbb
out
xchg
mov
and
stos
lret
gs
js
fdivrp
mov
arpl
adc
cwtl
outsl
sti
scas
push
test
icebp
sbb
gs
or
mov
scas
popf
mov
cs
mov
add
add
jg
jge
outsb
ja
stos
sbb
or
call
push
call
test
out
sub
daa
xorl
lcall
push
sub
mov
sub
sbb
mov
idivl
rcrl
lret
scas
movsl
or
jle
xor
cmc
inc
jp
cmpsl
insb
pop
and
pop
push
testb
sub
cmp
mov
cmpsb
repnz
shlb
push
xchg
aaa
jmp
or
jae
push
not
mov
cmp
cmp
imul
push
push
stos
in
add
out
popf
mov
xor
jge
or
jg
stc
mov
xorl
xchg
int3
dec
mov
push
jbe
or
pop
in
adc
out
or
mov
mov
mov
cli
push
mov
add
mov
push
adc
inc
js
imul
popf
pop
or
rorb
adc
inc
repnz
push
daa
push
in
ret
sbb
pop
push
jns
inc
and
pop
aad
test
fisubs
push
sub
pop
inc
pop
shr
cmc
xorb
xchg
add
stc
xchg
filds
lds
mov
dec
out
xor
das
xchg
mov
popf
pop
inc
popf
xchg
push
push
mov
push
je
sbb
pop
adc
out
mov
cmpsl
rcrl
pop
inc
jo
rcll
inc
daa
test
sub
mov
pop
mov
imul
inc
push
mov
adc
cmp
mov
push
clc
scas
and
enter
dec
and
pop
loope
and
pop
jle
dec
mov
push
call
xchg
cli
sarb
ljmp
jbe
or
inc
mov
inc
ljmp
inc
sub
fwait
dec
cmp
jno
movsb
push
inc
xchg
cwtl
mov
jb
aaa
push
and
xchg
jnp
pop
outsb
cli
cmpsb
cmp
sub
fs
stos
push
and
add
call
jb
mov
or
pushf
jno
repz
sahf
ret
enter
jmp
cmp
or
adc
cltd
out
mov
popa
xchg
or
filds
mov
call
jg
adc
xchg
or
inc
lret
xchg
push
shlb
scas
push
dec
nop
and
mov
lods
dec
jne
jmp
cmp
fwait
test
jae
xor
cs
jg
inc
scas
jo
imul
sti
cmc
pop
pushw
adc
lds
adc
fucomi
push
dec
sbb
and
mov
loop
out
in
dec
fsts
aam
and
outsb
cmp
int3
and
aam
cld
dec
js
mov
xchg
arpl
sarb
rcl
sub
pop
leave
push
mov
inc
clc
xor
cwtl
movq
lahf
adc
ss
dec
jbe
fldln2
push
mov
clc
or
lahf
push
test
push
sub
lock
add
insb
mov
mov
cs
adc
notb
adc
cmpsb
cld
push
and
es
aad
sahf
fildl
mov
and
inc
inc
in
xor
sbb
pop
stos
add
inc
daa
mov
ficoms
out
mov
aaa
xchg
mov
int3
iret
adc
jecxz
sbb
stos
pop
stos
jbe
cmpsb
xchg
ror
cmc
lods
cmp
movsb
jp
inc
mov
or
inc
negl
mov
fs
jmp
in
cmpsl
pop
mov
lods
out
adc
push
sbb
jnp
daa
mov
cmpsl
mov
cmp
ret
fnstenv
xlat
es
movsb
lret
mov
xor
mov
or
scas
jo
mov
push
mov
mov
roll
jmp
mov
cld
mov
or
movsb
sub
push
aaa
dec
or
mov
bound
repz
scas
sub
fsts
pop
or
out
fisttpll
lds
or
cmp
decl
inc
and
aas
popa
xchg
into
cmp
pop
inc
push
and
cltd
adc
out
push
push
ss
jecxz
popf
sti
xchg
test
fistpll
clc
test
or
push
andb
subl
xor
xor
or
gs
mov
movsb
int
jp
push
invd
dec
test
loope
sbb
leave
xorl
cmpsb
pop
jl
mov
push
mov
mov
inc
pop
cmpsb
dec
push
and
sub
xchg
pop
enter
in
repnz
aam
mov
mov
and
cmc
rcll
int3
xor
dec
mov
push
shlb
ljmp
ret
mov
mov
xchg
sbb
gs
loope
xor
or
ja
les
cltd
popf
and
add
sbb
rcr
divb
inc
mov
jle
mov
ljmp
adc
test
insl
lods
add
scas
xchg
inc
adc
add
mov
inc
lret
xor
and
cmp
fisttpl
lret
xor
mov
scas
inc
mov
inc
cltd
and
sahf
cmp
add
adc
ficoms
icebp
jo
push
loopne
data16
inc
cmp
mov
std
mov
sbb
cli
ds
mov
int3
jns
das
fdivr
fdivrs
das
hlt
loopne
cltd
mov
hlt
adc
into
dec
dec
pop
add
arpl
mov
push
addr16
icebp
movsb
adc
popf
pop
mov
in
loop
addr16
outsl
push
mov
ror
arpl
out
test
leave
loop
jo
mov
leave
xlat
pop
dec
arpl
mov
int
or
add
jbe
outsb
jno
sbb
subl
cmp
jbe
aaa
jmp
xchg
loopne
cmp
or
je
mov
push
daa
pop
mov
cmpsl
mov
cld
jl
data16
jmp
sub
decb
idivb
xor
into
sbb
or
and
mov
jo
jecxz
push
and
test
mov
mov
out
jno
xlat
frndint
lahf
lret
out
das
arpl
push
dec
xor
loopne
shrl
or
ss
in
cmpsl
mov
or
inc
sub
loopne
push
hlt
inc
insb
int
lock
jb
push
mov
sub
daa
inc
test
jb
out
pop
xor
xchg
lods
push
inc
xor
rcrl
jae
mov
sbb
lods
enter
pusha
cmp
lcall
jl
scas
cltd
xchg
mov
dec
sub
jp
mov
add
xorl
inc
hlt
dec
lret
push
or
dec
sarl
das
mov
or
das
push
jne
sahf
mul
sub
cmc
mov
cwtl
inc
popa
data16
lock
push
inc
movsl
dec
mov
iret
push
xchg
xchg
mov
sub
adc
push
test
cltd
sbb
or
mov
sub
pop
mov
mov
sub
scas
rorb
ret
imul
push
gs
jg
fsubl
pushf
inc
mov
cmp
in
lret
lea
xchg
leave
xchg
ljmp
in
in
xchg
ja
jno
imul
mov
jo
cwtl
ds
dec
lock
hlt
add
loope
dec
out
sahf
inc
ret
adc
push
and
pop
aas
fnstenv
inc
mov
out
mov
mov
imul
dec
je
aam
jp
cmc
arpl
add
push
jl
loop
aam
push
inc
arpl
mov
xchg
push
sub
sbb
mov
sbb
adc
popa
mov
or
mov
cmc
dec
sbb
es
icebp
mov
mov
leave
in
mov
scas
popa
movl
stc
pusha
xor
ljmp
push
mov
rol
lock
mov
test
cld
rolb
dec
inc
out
iret
mov
inc
xchg
cmpsb
cmp
add
mov
mov
adc
adc
int
lds
pop
popa
xchg
test
xor
xor
mov
mov
pop
adc
shl
clc
sti
mov
pop
call
cmp
out
movsl
fcom
and
sub
and
mov
nop
and
pusha
flds
adc
fsubr
and
enter
cmp
lcall
xor
and
dec
mov
cvtps2pd
push
mov
nop
mov
in
inc
test
push
addr16
jo
add
orl
dec
add
roll
lret
and
movsb
push
lock
hlt
imul
sbb
lcall
sbb
pop
divb
sub
sub
inc
xchg
ljmp
lods
xchg
xchg
adc
loopne
cmp
lahf
jno
jl
iret
fidivs
in
mov
xor
sbb
push
dec
test
mov
loop
aaa
adcl
ret
xchg
cwtl
into
xchg
ret
repz
inc
push
cli
lret
sbb
out
lock
push
mov
loope
arpl
cwtl
data16
sub
xor
dec
inc
jl
test
mov
js
adcl
dec
pusha
jb
ja
pusha
jbe
fbld
jo
leave
xchg
rol
jp
or
sti
mov
mov
hlt
lcall
jmp
orb
inc
jl
dec
mov
shl
xor
aaa
sub
mov
out
adc
jmp
stos
adc
jno
jle
sbb
lret
rcll
inc
repz
cmp
sub
in
les
je
xor
daa
nop
inc
xor
sub
push
mov
in
imul
add
out
xlat
pop
and
movsl
jo
and
or
gs
fwait
xchg
enter
test
adc
cmp
xor
imul
repz
out
mov
push
cltd
pop
mov
mov
mov
push
or
dec
inc
hlt
nop
aad
nop
sbb
arpl
idivl
jge
dec
orb
rclb
push
nop
sub
mov
in
cmp
jno
in
loop
pushf
pop
adc
leave
jae
popf
sub
mov
fs
scas
mov
loope
push
test
xchg
sbbb
rol
movsl
or
test
sbb
mov
and
sbb
scas
mov
xchg
pop
jb
movsl
jg
ss
mov
ret
jbe
push
std
cld
aad
movl
mov
cld
adcb
dec
jnp
sti
nop
loope
fstpt
add
arpl
mov
lock
add
mov
and
jg
adc
cmp
insb
cmc
sbb
hlt
test
jo
dec
outsb
sbb
fistps
in
pop
cmpsb
sahf
cmp
daa
movsb
movsb
push
test
lea
pop
fsubrs
in
adcl
popa
addl
lea
test
inc
cmpsl
fisubl
push
rcr
in
inc
cmp
mov
loop
inc
xor
pop
or
cmp
arpl
call
adc
inc
cmpsl
add
ja
push
xchg
mov
lcall
sub
jge
or
jbe
sti
pop
loope
pushf
loopne
int3
lds
jne
imul
dec
ficompl
add
enter
cmp
flds
cmp
cs
cmp
sbb
iret
aam
mov
dec
xor
das
mov
push
out
movsl
adc
xchg
pop
mov
testb
out
mov
push
xchg
out
mov
inc
pop
sub
push
mov
ljmp
repnz
or
test
std
inc
mov
xchg
pop
cmp
test
or
or
sbb
dec
pop
inc
or
stos
adcl
lea
mov
and
pop
lcall
pop
cmc
aas
jp
into
cwtl
xchg
and
sub
or
push
nop
ss
test
in
fwait
pop
mov
in
mov
mov
sub
ss
loopne
push
clc
push
sarl
mov
loopne
jbe
inc
xchg
addb
sarl
repnz
leave
dec
insb
mov
inc
push
or
imul
xchg
inc
cld
loope
mov
cmp
mov
mov
loope
push
movsb
xor
dec
mov
jmp
mov
enter
dec
jl
cmp
rclb
loop
pop
add
xor
dec
adc
sbb
mov
inc
and
inc
push
std
dec
ficompl
lea
into
out
sbb
pushf
test
xlat
es
push
aas
iret
test
fdivr
std
pop
in
sbb
xor
push
imul
mov
jle
popf
push
mov
ret
xchg
rorl
push
rolb
mov
test
and
aas
sub
push
jl
addr16
mov
nop
mov
aad
inc
cmp
cmp
or
push
shlb
scas
adcl
mov
lods
scas
call
inc
mov
stos
repz
jecxz
outsl
jl
stos
lret
pop
arpl
pop
mov
mov
mov
push
stos
in
jg
pop
fwait
call
test
sarb
sbb
movsl
adc
rorl
mov
mov
pop
sbb
mov
sbb
lds
hlt
mov
notb
mov
popa
jle
add
data16
sbbl
mov
xor
sbb
push
movsb
mov
adc
popa
adc
sbb
rorb
pushf
dec
inc
pop
leave
repnz
push
cmpsl
or
mov
lret
clc
repz
adc
icebp
test
popa
dec
outsl
fisubrs
daa
mov
iret
dec
int3
mov
xchg
jbe
push
jp
xor
mov
insl
xor
fcompl
lcall
jge
shlb
fidivs
push
xlat
stos
das
xchg
jb
pop
inc
int
mov
mov
out
ret
xchg
dec
and
mov
cli
add
sub
loopne
ja
fadd
jb
and
std
mov
fildll
dec
es
fdiv
outsl
ljmp
into
adc
adc
test
sbb
pushf
mov
sahf
or
add
dec
push
push
lds
shlb
pop
xor
pop
mov
pop
dec
in
pop
pop
loope
stc
rolb
fldt
jl
inc
sub
sbb
outsb
ret
inc
outsb
mov
and
mov
cmc
dec
enter
sbb
pop
xor
in
jb
mov
pop
xchg
mov
and
lods
and
cmp
xchg
jle
cmp
mov
xchg
rorb
pop
lock
outsl
dec
cmp
jl
fdiv
call
enter
aad
xchg
sahf
fldenv
movsb
push
add
jl
daa
scas
fcompl
fwait
mov
jg
or
push
mov
lock
sub
inc
push
dec
xlat
and
sub
data16
add
push
cmc
in
push
push
dec
ret
pop
pop
fiadds
int
pop
stos
mov
push
outsl
repnz
push
mov
test
fucom
sub
enter
pusha
adc
div
mov
imul
loop
loop
mov
repz
pop
mov
je
and
popl
and
fildll
add
fdivrl
fs
cmp
inc
aad
mov
pand
jo
or
lds
shl
inc
inc
pop
jmp
push
dec
xchg
ds
pop
push
lahf
or
sahf
inc
mov
fidivrs
sti
shll
scas
xchg
push
scas
cmc
aas
ja
dec
je
pop
mov
mov
or
cwtl
push
mov
test
jle
add
jnp
xor
aad
pop
andl
push
mov
inc
adc
inc
cld
pop
or
or
subb
xchg
outsl
mov
mov
sub
sbb
lahf
std
or
add
push
xor
fcmovnu
adc
sub
aam
call
cmp
imul
sub
out
shlb
push
and
mov
scas
sbb
lcall
push
or
lea
dec
sti
or
aas
mov
je
gs
jno
xor
jo
out
jl
leave
sti
and
mov
out
iret
push
jecxz
add
es
comiss
je
scas
mov
test
lods
fiaddl
sub
bound
push
addr16
push
and
mov
lock
rcrb
loopne
enter
loop
outsb
push
pop
cmp
push
jbe
dec
iret
push
xorl
test
test
sbb
repnz
mov
cli
jb
xor
sahf
sarl
sub
ja
dec
xchg
cmpsb
loope
or
dec
or
dec
lret
movl
lods
cli
repnz
outsb
scas
in
ja
mov
add
test
faddp
jmp
adc
repz
jge
add
lods
xor
xor
into
lods
jge,pn
push
loop
cmp
xor
aas
dec
mov
ja
ja
dec
call
mov
dec
mov
pusha
jle
fwait
in
ret
push
ljmp
mov
push
gs
jle
dec
cwtl
mov
jmp
push
and
pop
xlat
scas
loopne
jne
ljmp
mov
gs
pop
loope
xor
mov
mov
mov
push
scas
test
dec
lret
mov
dec
sbb
mov
inc
out
sti
xor
aaa
mov
outsb
dec
in
mov
push
xchg
jne
lret
out
push
xchg
cld
push
or
dec
je
lcall
lea
jns
xchg
fcoms
rclb
loopne
loope
xchg
adc
sbb
push
jp
icebp
dec
mov
jno
cltd
test
scas
jb
xor
outsl
leave
sbb
xchg
icebp
dec
mov
fs
dec
testl
xorl
mov
jmp
ja
mov
xlat
pushf
inc
push
mov
sti
and
lock
xor
push
add
mov
jae
push
xchg
pop
mov
jmp
dec
sub
pop
pop
sahf
call
ret
lret
push
in
stc
dec
hlt
hlt
scas
push
icebp
insb
lret
or
pusha
xchg
subb
repnz
scas
loope
int3
xchg
cmc
insb
rol
mov
out
flds
imul
fs
mov
dec
mov
xor
push
out
sahf
test
lock
sarb
inc
call
jg
push
jo
sbb
lahf
sub
into
or
adc
cmp
and
inc
xchg
arpl
jbe
popa
lock
iret
sub
inc
and
sarl
push
popa
pop
mov
add
lcall
into
lock
lret
dec
fidivrl
pusha
or
aas
outsb
lea
pushf
jns
gs
mov
jg
cld
pop
dec
mov
adc
das
inc
cmpsl
dec
add
arpl
repz
xchg
jo
lret
popa
lock
std
mov
jle
dec
and
aad
pop
loopne
cmovp
jle
pop
push
ja
add
imul
add
mov
xor
jmp
xchg
clc
lcall
fwait
pop
scas
push
jle
push
aaa
imul
loopne
cmp
js
xchg
iret
out
or
les
fmuls
loop
shrb
jbe
xor
inc
push
out
mov
mov
jecxz
inc
insb
mov
inc
sbb
mov
rep
shlb
mov
sub
std
je
imul
jg
paddsw
xchg
loop
xchg
cs
mov
dec
popa
cltd
push
pop
int3
test
fwait
push
xchg
push
rolb
sbb
fbld
outsb
pop
dec
push
and
xchg
stos
mov
jae
pop
shl
in
adc
add
xchg
sub
xchg
xchg
sbb
sub
jecxz
repz
std
xchg
and
dec
iret
out
mov
xchg
cmpsl
out
add
xchg
pop
xor
mov
pop
push
xor
sbb
pop
lret
and
test
push
fwait
and
mov
cmp
test
mov
sub
cli
std
out
mov
sbb
inc
into
mov
psubsw
hlt
mov
mov
or
jl
movsl
xchg
add
call
cmp
fnstcw
pop
fisttps
scas
jge
popa
pop
lret
xchg
enter
imul
daa
jmp
stos
xor
dec
popf
fistpll
adc
adc
rol
push
icebp
mov
dec
mov
inc
mov
jl
nop
lods
xor
pop
mov
push
and
stos
fisttpll
fimull
sbb
sbb
loopne
dec
insb
hlt
dec
mov
repz
inc
aas
loop
pop
insl
cmp
cli
push
popa
cli
lahf
pop
dec
push
outsb
pop
fwait
mov
adc
insl
das
xchg
xchg
js
sub
in
call
aas
fisubs
cwtl
pop
sbb
jns
test
outsl
and
add
js
dec
lret
scas
stc
or
sbb
sahf
js
lods
dec
ficompl
in
inc
das
cli
dec
fildll
or
push
jno
dec
test
and
sti
jle
mov
movsl
scas
and
add
ja
cwtl
push
sbbb
xchg
xorl
hlt
add
out
jbe
sub
or
or
repz
mov
into
xchg
outsb
mov
push
aam
xor
call
fwait
ja
nop
jg
int
jecxz
dec
pop
fcmovbe
out
mov
rcrl
lods
xor
in
push
cld
sub
add
xlat
add
pop
xchg
jle
mov
scas
cmpl
mov
orps
pop
popa
fs
clc
mov
fcompp
jecxz
push
dec
call
adc
push
int
cld
out
mov
mov
adc
cmp
mov
or
lahf
scas
add
push
cmc
sub
add
les
sahf
add
cmp
insb
lock
sbbb
jne
xchg
fs
or
popf
arpl
sub
lock
dec
mov
movsl
mov
lds
cltd
cli
cmpsb
adc
pop
sbb
sub
and
dec
or
movsl
inc
cmp
push
and
or
mov
in
xlat
test
ljmp
inc
push
adc
and
mov
cwtl
pop
xor
jae
inc
pop
xchg
push
icebp
mov
in
and
xchg
pushf
jp
adc
jb
sub
insl
sti
pushw
out
stos
inc
ficompl
add
je
mov
outsb
fwait
push
and
hlt
or
out
popf
cs
mov
repz
js
jecxz
addr16
jb
cmp
pushf
lods
xchg
push
mov
pop
sub
stc
loope
sti
inc
pop
cltd
mov
xor
jnp
xchg
imull
sbb
cli
cmpsl
test
movsb
sub
mov
stc
and
cmp
cmp
inc
mov
cmc
cmpsl
mov
call
mov
popf
ret
rcll
leave
mov
in
inc
gs
or
inc
mul
cmp
mov
xor
jle
hlt
out
and
jo
inc
mov
push
cwtl
cmc
mov
pop
imul
push
ficompl
fs
ljmp
jno
sub
fdivs
in
test
pop
std
scas
adc
mov
ss
scas
inc
leave
into
ret
and
sbb
lcall
cld
xor
mov
iret
das
loop
jne
jl,pn
ret
cs
mov
adc
scas
push
mov
fs
ret
mov
cmp
mov
in
or
add
lods
test
pop
jnp
ret
push
call
clc
jne
cli
jmp
pop
or
mov
push
sbb
das
xor
push
jge
xchg
mov
lods
outsl
ficoml
cmp
push
ret
insl
in
call
mov
cmp
inc
loop
push
mov
rcll
subl
mov
testb
es
push
jbe
fcomps
xor
pop
scas
adc
outsb
iret
jne
aad
sbb
inc
add
add
in
fsubl
out
loope
pop
xor
out
out
cwtl
and
shl
or
cmp
mov
cmp
cmp
ja
jnp
push
push
push
dec
and
test
test
fmul
jge
push
add
and
rcrl
ret
mov
daa
push
jmp
or
push
inc
arpl
jle
repz
ljmp
mov
cmp
xchg
sahf
mov
or
cwtl
xor
movsl
stc
insl
vpand
xchg
in
movsb
mov
sti
ljmp
popf
sub
aas
add
adc
mov
push
jge
lea
cltd
fs
enter
scas
jmp
add
push
mov
insb
pop
mov
mov
pop
fwait
test
xchg
stc
pusha
pop
jl
jl
pop
int3
jo
cmp
cld
adc
xchg
pop
fisttps
sahf
push
int
xor
jge
cld
cmp
arpl
pop
shrl
mov
js
ljmp
cltd
sbb
fptan
or
pop
sti
je
add
push
pop
mov
fildl
fstpt
gs
das
aad
clc
mov
repz
or
addb
sbb
cmpsb
xor
fcoms
and
movsb
mov
mov
xchg
sub
mov
cmpb
xchg
push
xor
enter
fstpl
push
inc
cmc
xchg
add
cwtd
std
mov
inc
xor
iret
mov
daa
out
fisubrl
cmp
xchg
pop
scas
mov
sarl
cmc
cmp
and
adc
add
fwait
movsl
mov
push
and
leave
idivb
jns
dec
mov
call
clc
lahf
subl
jle
inc
and
ret
arpl
enter
and
push
inc
sub
lea
out
adc
mov
dec
xlat
popa
mov
divb
loop
mul
fldt
add
mov
xchg
inc
cs
jns
cmp
imul
mov
xor
inc
pushf
clc
ja
fldcw
mov
jne
das
xor
dec
lcall
in
push
push
lods
adc
ficompl
sbb
pop
test
dec
jo
lss
popa
adc
aad
jmp
mov
xchg
cltd
mov
movsl
int3
and
fucomip
push
mov
sub
sbb
fsubl
jle
mov
fwait
jge
sbb
out
and
ret
mov
xor
stc
bound
push
inc
push
mov
fdivrl
dec
mov
stos
sub
push
jl
pop
xor
inc
test
int
sbb
mov
mov
mov
outsb
jl
pop
cmp
inc
ret
rcll
shrb
fwait
popfw
xchg
xlat
lea
filds
inc
pop
pop
push
clc
add
test
test
mov
mov
jo
cltd
mov
movsl
cmp
or
jb
fdivl
repz
pop
dec
mov
sbb
inc
dec
jns
jb
dec
out
clc
stos
add
js
stos
dec
and
icebp
mov
or
dec
repnz
lret
dec
mov
ja
aad
dec
and
outsl
stos
stos
dec
or
xor
in
sarl
jge,pt
fs
and
repz
mov
jb
arpl
nop
adc
pop
add
add
ret
pop
movl
mov
or
mov
jo
add
jb
in
mov
addr16
and
push
add
filds
push
lret
push
jmp
test
mov
xchg
inc
lods
inc
or
lret
push
je
scas
and
or
rolb
mov
cmp
shrl
pop
pop
inc
outsb
jbe
in
out
ljmp
scas
jnp
adc
arpl
add
dec
lock
fcom
push
imulb
aam
scas
subb
icebp
mov
mov
cmc
pop
test
dec
cmp
ja
sbb
inc
inc
lret
test
xchg
or
fisubrl
push
lret
mov
mov
sbb
mov
int
mov
push
sbb
sahf
in
daa
loopne
stos
jnp
jl
cmp
pop
and
pop
push
scas
or
cwtl
mov
xlat
sub
mov
push
jg
add
jnp
movb
fwait
xor
scas
mov
into
adc
xor
pop
mov
idiv
mov
sub
dec
mov
clc
ret
adc
jo
cmpsb
fldl
mov
pop
cmp
mov
ljmp
dec
xlat
aad
mov
cs
mov
loop
je
jb
test
imul
jae
adc
and
ljmp
mov
insl
xor
push
std
fstps
xchg
mov
jp
add
sub
sub
imul
jb
push
sub
into
outsl
push
xchg
inc
fs
sub
adc
fisttpll
out
gs
sbb
or
scas
mov
mov
jg
dec
pop
lods
lock
loop
lahf
arpl
leave
shrl
or
mov
jecxz
in
adcl
out
add
dec
jge
add
pop
push
addr16
push
pop
add
mov
jae
cli
outsl
sub
movsl
rorb
inc
aad
inc
mov
add
popf
sbb
das
or
sub
cmp
cmpsb
sbb
aas
add
lods
repz
enter
cmc
sti
cmp
insb
xchg
fldenv
jl
push
addr16
fsts
ja
pop
shlb
xchg
xchg
or
aam
mov
add
addr16
push
sbb
js
mov
repnz
cmp
inc
cltd
pop
cmc
cli
mov
aaa
adc
add
jg
fdivrl
clc
lcall
and
xchg
lahf
addr16
mov
dec
test
and
sub
inc
rorl
push
pop
mov
jge
add
js
cmp
cmp
add
push
and
mov
dec
inc
out
add
enter
sbb
jle
jl
adc
cmpsb
stc
pop
out
adc
fwait
mov
adc
stos
in
pop
outsb
fisttpl
aas
mov
jb
push
loope
xor
push
add
lret
jmp
xchg
ret
cli
cld
add
imulb
dec
jge
mov
pop
cmc
and
cmp
aam
dec
adc
mov
stos
dec
mov
insb
or
bound
sti
je
aaa
imul
mov
inc
idivl
adc
jnp
or
adc
add
fsub
push
push
or
xchg
inc
lods
gs
dec
int3
dec
dec
mov
cli
aad
outsl
jmp
imul
movsb
test
and
mov
cltd
in
iret
push
rcrl
scas
lods
mov
and
or
test
ss
mov
xor
and
hlt
dec
bound
aad
dec
add
sbb
push
cwtl
mov
ret
jmp
push
lods
jbe
lahf
cmc
lock
mov
dec
test
test
lods
lcall
add
mov
xor
adc
xor
push
mov
xchg
scas
out
xchg
push
fdivp
push
jb
add
js
fisttpl
iret
sbb
in
pop
or
push
ret
mov
dec
or
push
or
mov
jmp
mov
lret
in
aad
pop
dec
sbb
add
or
shlb
pop
std
pushf
repnz
jno
xchg
mov
mov
adc
stc
psubsw
sbb
in
addr16
clc
jmp
jb
xor
dec
push
xchg
mov
adc
cmp
mov
repz
sbb
push
push
out
sbb
jge
aam
pop
leave
jae
mov
mov
sbb
imul
fisubrl
jo
xchg
mov
mov
pop
jb
sbb
ret
int
pushf
cmp
rorl
leave
fcoml
cs
mov
push
or
adc
fcmovnu
cmpsl
in
jge
fs
cld
mov
test
rcr
in
xchg
fldl
sub
fdivrs
jne
lret
or
dec
pop
pop
sbb
add
movsb
push
or
movsl
xor
jae
idivl
pop
cld
ljmp
adc
mov
jne
enter
pop
xor
enter
jl
dec
jns
addb
idivb
mov
mov
std
adc
jge
aad
adc
mov
js
shr
mov
test
push
sub
inc
inc
add
cmpsb
jecxz
and
mov
jle
jp
lods
rolb
push
push
mov
sti
addr16
mov
mov
jecxz
push
icebp
sub
test
inc
mov
fsubr
loope
push
adc
stos
sahf
lahf
sub
pop
adc
mov
jbe
pop
xchg
and
mov
lret
mov
pop
adc
dec
xchg
cmp
xor
je
cltd
push
mov
mov
test
jge
mov
or
push
cltd
ret
jp
pop
into
or
clc
adc
mov
mov
inc
pop
aas
push
add
pop
stc
clc
fwait
lods
jecxz
fdivrl
cmpsb
es
flds
mov
push
and
dec
jo
lods
addl
ss
outsb
push
fs
add
mov
mov
pusha
iret
xchg
push
cltd
lods
call
mov
imulb
popa
or
ljmp
in
addr16
xchg
xchg
out
inc
mov
add
mov
push
and
lods
pop
push
jle
dec
addr16
aas
push
adcb
jl
mov
mov
icebp
mov
popa
aad
jg
mov
push
out
rcr
sbb
xor
movsb
add
popf
dec
dec
adc
fdivrs
sbb
inc
mov
mov
int
jmp
addr16
mov
cmp
mov
lds
loop
pop
call
xor
sbb
testb
loop
jmp
jb
add
push
dec
push
stos
mov
mov
popf
dec
mov
fcompl
xor
bound
sbb
filds
lods
sub
out
adc
or
push
sub
and
mov
sbb
test
mov
mov
pop
pop
dec
jge
out
out
ret
lahf
bound
jl
push
divl
push
sub
mov
popa
fildl
or
je
popf
inc
add
fcos
dec
cmp
sub
push
xchg
int
enter
js
pop
sbb
cmp
in
lcall
adc
add
je
jo
cs
loopne
cmp
inc
jns
pop
in
movsl
cmp
test
cwtl
mov
inc
mov
sbb
pop
testl
adc
scas
sub
jne
out
iret
sbb
xchg
or
pop
out
out
fwait
inc
int
mov
outsl
adc
iret
jp,pn
mov
decb
jne
adc
dec
cld
mov
je
xor
jb
mov
mov
cltd
daa
hlt
movsb
repz
ja
adcb
mov
roll
xchg
leave
aad
sub
xorb
xor
scas
arpl
sbb
jp
hlt
mov
mov
lds
add
mov
push
test
jecxz
push
adc
sub
sub
jns
sbb
cmpsb
repz
fnstcw
test
or
pop
daa
fimull
jp
out
sahf
jl
imul
mov
imul
ret
adc
push
jae
cs
nop
xchg
fwait
test
aaa
aas
lret
stos
adc
and
ret
sahf
pop
fisubs
xchg
in
es
test
or
jecxz
adc
sbb
lods
or
test
lcall
and
fcom
dec
mov
xor
incl
into
cmp
cli
xor
xlat
insl
jl
ss
jno
popa
pop
divb
cmp
mov
and
lods
cmp
xor
mul
cmc
gs
or
push
insb
lods
sarb
push
lret
pop
sub
mov
dec
loope
inc
sahf
std
pop
lret
jle
aaa
sbb
sub
fimuls
fdivrp
push
js
frstor
call
sub
push
sarb
daa
mov
xor
sbb
inc
loopne
sub
lcall
mov
movsb
push
mov
arpl
stos
sarb
and
incb
add
dec
jbe
pop
es
rorb
and
mov
mov
notb
cs
in
test
and
push
cmp
loopew
cltd
out
sub
neg
sub
cmp
inc
shlb
cmpsl
outsl
int
cmp
dec
pop
fdivr
lret
inc
js
xchg
enter
in
xor
lock
fstps
xchg
or
idivb
add
test
push
je
adc
pop
cmp
or
lds
jp
lret
xchg
je
lods
out
mov
cmpsb
push
push
pop
fdivrl
mov
jno
test
sub
out
xchg
sbb
xchg
add
aad
nop
mov
lds
and
movsb
mov
shlb
notb
xor
mov
dec
stos
jmp
mov
testl
push
arpl
xchg
cmpsl
cltd
test
lahf
add
mov
fcoms
mov
mov
mov
lds
xlat
lahf
ficoms
push
push
cwtl
xchg
test
adc
push
xchg
jne
pusha
mov
hlt
loopne
ds
fidivrl
jb
jl
add
xchg
lods
loop
jns
cmp
loop
daa
imull
not
arpl
sub
scas
gs
imul
add
or
daa
in
pop
pop
shlb
out
aas
cmp
imul
bound
insl
out
imul
xor
scas
cmp
test
insl
je
and
mov
mov
pop
push
mov
inc
inc
out
aad
lret
les
sbb
mov
sub
push
xor
cmp
jle
mov
mov
pop
add
sub
out
xor
stc
sub
pusha
cmc
arpl
mov
jle
lcall
xor
inc
ss
adc
and
pop
fs
popa
scas
push
pop
lock
clc
mov
or
test
cltd
cmp
loop
sbb
cmp
push
lret
pop
out
xor
pop
xor
rcrb
fwait
test
imul
fmull
mov
and
or
in
movsl
mov
push
cwtl
leave
inc
mov
adc
daa
push
hlt
dec
outsb
decl
jp
sub
mov
pop
sbb
mov
jp
pop
adc
adc
iret
out
jle
jo
fnstcw
test
add
jecxz
add
je
mov
or
cld
inc
jecxz
sbb
ds
inc
movsl
int
cmp
cs
mov
xchg
js
movb
cmpsb
pop
xchg
mov
push
insb
jno
jnp
test
daa
mov
xlat
popf
popf
push
sub
mov
or
arpl
push
out
pop
adc
pop
int
das
js
out
stos
or
xchg
sub
or
aam
mov
adc
notl
and
jecxz
mov
into
and
jnp
sbb
in
js
lret
mov
pushf
xor
pop
inc
inc
mov
pop
xlat
jns,pn
dec
xor
xchg
mov
inc
dec
shll
pop
faddp
push
adc
fdivr
daa
dec
pop
loope
shll
movsb
cmp
scas
sbb
mov
mov
jmp
js
dec
jge
mov
fbld
add
push
sbb
shl
dec
pusha
jo
cmp
addr16
lret
mov
inc
insb
cld
loopne
mov
mov
jne
jg
push
xchg
hlt
mov
push
in
jo
lret
jecxz
adc
mov
in
outsl
inc
ret
adc
arpl
cmc
fcomp
popf
enter
gs
dec
add
or
xchg
mov
adc
test
jns
jg
jbe
cmp
pop
rcrl
bsr
xor
or
adc
sarb
push
cmpsb
dec
enter
in
jae
jnp
test
daa
bound
int
mov
insl
xchg
lock
nop
hlt
dec
lcall
push
push
fstl
dec
xchg
xchg
add
jge
arpl
pop
push
or
testb
out
inc
in
xchg
loop
std
and
div
push
out
and
jle
test
sub
movsl
adc
sub
fbld
in
sbb
mov
and
out
bound
mov
movsl
je
mov
mov
xchg
sub
mov
bound
jg
dec
out
sub
out
mov
std
lock
push
sbb
jne
lahf
and
test
pop
jns
test
xlat
call
jnp
shr
mov
jmp
aas
lds
mov
xchg
mov
lods
mov
test
jmp
adc
push
inc
pop
out
std
push
adc
push
adc
popa
imul
dec
rcrl
or
cld
or
setge
xor
jle
imul
iret
or
ja
stos
pop
jmp
mov
stos
sub
pop
lds
aas
add
ljmp
jne
jmp
add
es
out
pop
cmp
mov
mov
cmp
pushf
mov
testb
addr16
mov
ret
insb
out
xchg
or
push
shlb
out
div
cmp
jp
mov
xorb
dec
fimull
sub
scas
push
out
mov
sbb
sub
subl
xchg
or
jbe
jnp
out
push
jmp
jae
aad
mov
lret
scas
inc
dec
outsb
sub
jnp
and
andl
loope
adc
add
dec
jo
sbb
clc
dec
mov
rcr
incl
movsb
and
in
enter
movsb
jmp
adcl
xlat
xchg
les
and
mov
ljmp
cltd
jecxz
mov
out
or
sbb
push
ljmp
in
out
into
cmp
into
sbb
inc
mov
in
js
adcl
lea
movsl
or
xchg
or
sbb
hlt
rcrl
xor
pop
outsb
outsl
enter
push
pop
out
xchg
das
push
out
jp
mov
aam
std
fs
inc
ja
fildll
or
mov
jae
scas
loopne
inc
lcall
or
sti
sbb
mov
daa
cmp
cmpl
aas
ss
imul
sbb
bound
mov
adcl
jmp
cmc
cld
repz
or
inc
mov
or
call
and
dec
inc
push
push
add
ret
enter
jb
in
inc
mov
sar
inc
inc
aas
out
inc
cmp
es
stos
stos
sbb
in
icebp
lea
jns
cmp
aaa
xlat
out
mov
push
fistl
jne
fcomps
scas
inc
aad
sbb
mov
popf
lcall
add
push
fiadds
rcr
lock
mov
sarl
inc
and
adcl
adc
sbb
dec
jle
sarl
dec
sbb
das
mov
movsl
jle
jp
xor
xchg
push
and
fisubrs
and
retw
mov
push
inc
jg
sub
mov
mov
or
mov
sti
rcr
adc
mov
out
dec
inc
daa
repnz
inc
test
pop
clc
je
and
mov
cmpsb
pushf
leave
stc
push
cmp
push
rcll
hlt
mov
rcrl
pop
cmp
sub
push
cmp
es
push
popa
repnz
cld
in
inc
int3
push
stos
jle
mov
movsb
inc
add
scas
push
test
icebp
and
lret
sbb
pop
jbe
or
xor
ffree
cmp
leave
mov
mov
pop
add
dec
test
inc
sarb
out
sub
clc
xorb
cwtl
mov
testb
push
xchg
fistpl
int3
and
jnp
sbb
sbbl
sub
sub
les
imul
pop
pop
mov
mov
push
addr16
and
data16
or
sub
xchg
sub
mov
push
sarb
popa
outsb
out
mov
rorl
push
sub
inc
and
bound
stos
mov
out
sub
lret
sbb
jmp
dec
stos
push
test
mov
pop
rcrb
test
out
jle
xchg
lret
xchg
sbb
mov
inc
clc
push
push
xor
add
pop
flds
scas
mov
cmc
orb
adc
push
cmp
mov
pop
aad
aam
or
lret
inc
fwait
rorb
test
mov
dec
push
add
adc
maskmovq
divl
dec
cmpsb
cmp
icebp
loope
popa
push
icebp
call
call
inc
jno
mov
shrb
and
or
jb
rclb
adc
rcrb
in
cmp
test
stos
lds
popf
push
and
lgs
mov
scas
sti
leave
inc
icebp
xchg
mov
pusha
enter
xchg
fcmovb
pop
jns
xorl
cltd
ds
scas
jns
or
adc
ds
push
jecxz
in
adc
sbb
sbb
add
dec
pop
ds
xor
push
movsl
add
pop
and
jl
loope
test
pop
ja
pop
insl
or
mov
test
es
jmp
cmpsb
fisubrs
ja
sub
mov
xchg
xchg
jns
pusha
mov
dec
daa
jae
push
jo
jl
mov
bnd
xlat
loop
ret
or
dec
int3
cmp
mov
out
jl
mov
mov
lods
mov
xor
lods
leave
adc
mov
xchg
jnp
out
shlb
jbe
push
sub
mov
sbb
push
mov
push
jmp
mov
lds
cmp
push
sti
jmp
fmull
orl
xor
pop
jle
stos
imul
jle
push
outsl
insl
mov
mov
inc
mov
int3
jns
out
mov
push
dec
add
pop
jno
pop
cmpsl
sub
je
inc
adc
imul
clc
std
inc
xchg
inc
out
adc
aam
jnp
hlt
xchg
loope
cwtl
test
or
gs
insl
leave
movsb
adc
out
cmc
loope
dec
inc
push
or
mov
and
nop
mov
pop
arpl
jno
or
add
fsubrl
nop
dec
xor
add
adc
cli
rcr
adc
js
cmp
out
and
pop
push
out
pop
adc
cmp
test
dec
imul
test
adc
stc
jecxz
aad
and
mov
ficoml
mov
loop
lcall
mov
fldlg2
mov
stc
xchg
fildl
add
inc
mov
test
pop
lods
push
pop
mov
xor
sbb
lret
lock
loopne
cli
aam
cmp
adc
loop
aad
jno
es
cmp
sti
mov
sub
cmp
sbb
xchg
mov
cmp
dec
pushl
out
dec
fwait
pop
popa
push
ss
sub
int3
jno
jae
sub
mov
and
shlb
imull
data16
jno
xor
jo
mov
lcall
je
movsl
pop
shll
mov
sbb
daa
lcall
xchg
push
inc
jne
mov
movsb
adc
cwtl
xlat
push
add
into
outsb
and
xchg
and
das
test
shrb
xchg
roll
sarl
mov
ds
adc
in
dec
inc
xorb
jl
imul
jns
bswap
scas
sub
dec
add
enter
popa
sub
cli
pop
or
test
sub
add
xor
outsb
mov
dec
insl
gs
push
clc
add
jge
lret
add
cmp
dec
out
gs
add
ss
lahf
ss
jbe
xchg
enter
test
add
mov
out
push
push
cwtl
test
mov
loopne
mov
inc
mov
addb
jo
pop
sbb
jo
pop
push
in
loopne
jge
xchg
fisubs
push
push
ss
cmc
test
scas
sub
cmp
pop
xor
scas
lret
icebp
ss
dec
xor
repnz
aas
xor
sub
lea
int3
sub
cs
ret
aas
ret
jecxz
sbbl
dec
fimull
movsb
enter
cmp
or
sbb
movsl
mov
cmc
push
mov
jne
inc
push
bound
mov
or
mov
into
hlt
and
addl
dec
movsl
addr16
packuswb
mov
iret
jmp
or
or
push
fdivrl
icebp
jmp
mov
scas
xchg
aad
lcall
sub
mov
inc
sub
sarb
stos
repz
into
repz
int3
pop
sti
inc
popa
iret
fstps
mov
jg
mov
lret
dec
testl
nop
jae
bound
out
clc
lods
inc
inc
mov
lock
movsl
push
imul
bound
xchg
iret
jle
mov
inc
and
shll
adcl
lods
iret
clc
jp,pt
pop
out
in
pop
fisttpll
gs
or
xlat
xlat
mov
push
and
negb
add
and
or
jbe
adc
fcoms
lret
outsb
dec
fldt
int3
push
cmp
adc
idivl
add
adc
stc
fldl2t
or
mov
add
fxch
mov
orl
pop
push
inc
push
sbb
outsl
mov
cs
test
ljmp
cmpsb
and
sbb
dec
push
cmp
xchg
lcall
jbe
cmp
mov
idivb
inc
scas
stos
mov
mov
cmp
pop
xchg
jge
pop
mov
push
inc
sub
out
mov
cmpsl
pop
arpl
push
in
fstpl
xor
jp
pop
incb
push
arpl
push
mov
test
rcrl
mov
or
sbb
adc
out
pop
cmp
lods
stos
xchg
loopne
aas
jecxz
insl
cmp
loope
sub
jo
cwtl
in
dec
sub
movsl
xchg
jae
pop
or
mov
fwait
jbe
jo
mov
and
dec
mov
dec
fwait
lret
addr16
gs
adc
adc
jno
or
xchg
lret
lcall
gs
or
pop
dec
loopne
out
in
out
add
xchg
jmp
push
insb
mov
and
movsl
clc
ret
in
fisubrl
ficomps
jmp
fidivl
and
leave
mov
mov
cmp
xorb
cmp
jae
mov
push
lret
mov
add
pusha
jle
repz
cwtl
mov
add
push
jbe
mov
in
and
jae
insb
mov
xor
or
mov
in
inc
adc
leave
insb
pusha
xchg
mov
push
mov
test
ja
push
xchg
fld
les
loop
popa
sbb
cmp
test
lahf
insl
or
add
pop
xchg
ret
mov
out
out
adc
bnd
xchg
std
sbb
addr16
je
arpl
pop
in
cmp
push
mov
xchg
dec
cmp
adc
inc
cli
imul
cmpl
cmp
lahf
or
pop
movsb
loopne
jle
outsb
mov
cmpsl
pop
adc
in
xor
and
ja
xor
mov
pop
mov
sub
in
push
hlt
je
loop
mov
pop
jl
outsb
insl
insl
mov
and
out
and
jl
pop
rolb
cld
pop
leave
loopne
insl
movsl
outsb
sbb
add
inc
outsl
push
cmp
test
cmp
bound
cmpsl
mov
idivb
add
dec
out
lods
xor
adc
sbb
repz
inc
pop
lock
cmpsb
jo
lahf
int3
xlat
addr16
ja
or
lds
xor
and
lock
cltd
sbb
pushl
cmpsl
sbb
imul
jp
repz
rclb
inc
lods
cli
cmp
jmp
jo
dec
dec
lcall
mov
add
add
xor
sbb
out
mov
mov
xor
ret
out
push
push
fidivrl
mov
mov
push
cltd
inc
or
sbb
mov
dec
mov
inc
out
rcl
sbb
xchg
and
pushf
aas
popf
cmpsl
neg
pop
xor
sub
jne
adcl
sbb
sub
cmp
in
lret
mov
popf
push
clc
jecxz
sbb
les
jge
xchg
sbb
addr16
rorl
xor
add
mov
test
sub
sub
xchg
add
dec
jae
outsb
or
push
test
jno
mov
mov
adc
gs
inc
sti
popf
out
mov
pop
gs
cli
jns
mov
pop
lahf
jne
mov
loop
andb
pop
lods
or
js
aad
mov
xchg
pop
mov
movsb
inc
ret
xorb
stos
movsb
aas
mov
shll
mov
cwtl
ret
lods
iret
aad
jecxz
mov
dec
imul
pop
test
mov
sbb
pop
ds
shrl
sub
scas
mov
fsubr
mov
call
mov
sbb
adc
pop
imul
xor
test
stos
xchg
dec
jl
xchg
push
mov
clc
lods
mov
ret
or
daa
push
iret
add
loop
xchg
les
dec
inc
push
in
in
sub
mov
dec
xor
jp
clc
cmp
adc
pop
xor
mov
push
pop
mov
mov
inc
loop
jl
popf
add
mov
cmp
push
fs
xor
outsb
mov
push
movsl
lret
sbb
jge
mov
out
adc
mov
pushf
sub
fucomip
addb
lahf
ja
mov
test
or
pop
inc
outsl
or
cmp
outsl
lods
or
les
adc
incb
repnz
loop
js
aad
shr
jno
sbbb
arpl
cmp
mov
rclb
fs
mov
outsl
lret
lea
out
sti
dec
pop
adc
add
push
ljmp
or
xor
loopne
loopne
jo
inc
jmp
sub
inc
lret
ret
outsl
jp
aad
repz
jnp
xchg
jp
imul
dec
xor
dec
xchg
sub
or
xchg
pop
in
mov
or
adc
mov
dec
int
pop
or
sub
push
push
in
add
fwait
add
rorl
pop
jl
inc
sbb
stc
push
and
xor
ss
xor
xchg
imul
sbb
aaa
cli
adc
inc
jecxz
push
add
and
push
sub
dec
jg
and
fxtract
mov
and
clc
arpl
mov
xchg
lcall
dec
mov
addb
fstl
mov
pop
jl
daa
pop
gs
test
cltd
jmp
arpl
popf
pop
aaa
and
sub
mov
mov
fstl
push
xor
push
in
jecxz
mov
dec
and
inc
jns
fldcw
pop
jl
lea
pop
jns
xor
xchg
leave
add
jecxz
sub
adc
adc
mov
fwait
ret
ret
or
sbb
not
in
pop
or
gs
jae
call
dec
mov
mov
mov
je
out
push
leave
mov
aas
cli
idivl
mov
lock
popa
jmp
int
sbb
sahf
push
test
mov
into
lahf
repnz
add
cmc
or
pop
xchg
bnd
dec
xorl
les
mov
popa
call
cmp
imul
jg
push
jmp
mov
cmc
xchg
in
popf
test
pop
neg
cmp
push
movsb
ror
adc
aam
cli
mov
jnp
mov
jl
pushf
lret
adc
xchg
sbb
cmp
lods
cmpsl
pushf
and
ret
clc
push
pand
dec
out
or
pop
sbb
sub
adc
je
sub
in
fs
lods
popa
sbb
les
push
dec
js
jae
inc
loope
movsl
rcrb
xchg
push
add
mov
out
jecxz
fidivrl
push
ss
int
rcrl
enter
in
mov
mov
xchg
pop
push
xor
mov
cld
out
inc
xor
push
dec
imul
jnp
jae
ja
stos
fstl
aas
cmp
pusha
add
inc
mov
aaa
mov
fcompl
pop
clc
sarb
sub
jecxz
inc
lret
daa
xchg
push
je
scas
lods
test
pop
pop
jo
lcall
daa
push
xchg
pop
mov
sbb
imul
pop
push
icebp
pop
in
push
cmc
adc
negb
out
popa
jo
sahf
stc
jl
and
inc
mov
mov
fwait
sbb
pusha
mov
sub
inc
mov
lahf
jo
mov
adc
add
mov
cs
ffree
push
xor
imul
fxch
gs
jmp
aad
imul
outsl
jne
mov
jne
dec
in
xchg
scas
pop
push
fwait
xchg
inc
fwait
mov
sti
and
jge
test
push
pop
add
pop
jl
pop
out
popf
push
xor
dec
lcall
jecxz
std
hlt
push
mov
icebp
cmp
bswap
movsl
repz
int3
sub
adc
rorb
cld
push
xchg
cmc
pop
int
dec
sub
lahf
mov
mov
mov
or
sbb
dec
icebp
mov
insl
ds
xor
or
sbb
mov
enter
movsb
pop
mov
and
ret
cmp
push
mov
enter
scas
inc
mov
dec
cmp
xchg
pop
jno
jne
icebp
xchg
cs
cmp
aaa
shll
subps
scas
adc
cmp
mov
inc
ljmp
int3
dec
clc
addb
fimuls
testl
push
mov
push
sbb
stos
pop
push
add
lret
test
sahf
adc
out
adc
cs
push
inc
call
xor
lcall
dec
pop
icebp
sbb
xchg
adc
mov
and
pop
in
enter
repnz
jg
cmc
jbe
stos
dec
mov
addr16
mov
ja
nop
jp
sub
mov
inc
xor
push
mul
push
inc
fildll
outsl
jp
bound
popf
hlt
fsubrl
mov
cmpsl
in
test
incl
das
daa
fcomps
inc
ljmp
add
fisubl
or
xor
push
push
lock
inc
xchg
mov
mov
mov
mov
xchg
push
inc
cmc
mov
popa
or
sub
cmpsb
push
sbb
call
jecxz
into
pop
orl
ja
jmp
hlt
call
fmuls
clc
push
adc
and
imul
push
iret
xchg
or
lahf
iret
lods
hlt
xchg
and
filds
jbe
pop
nop
xchg
ds
imul
in
idivb
in
sar
sahf
mov
call
out
enter
cli
push
sbb
and
dec
mov
in
inc
stos
mov
leave
lcall
sub
std
jb
imul
inc
sub
das
je
aam
mov
lea
xlat
lahf
ret
mov
adc
test
jo
or
in
mov
inc
insb
aam
sbb
scas
idivl
roll
push
xchg
xchg
jg
or
imul
sahf
sub
lret
pop
stos
push
jle
test
imul
cwtl
aam
jg
outsl
cmpsb
stos
das
or
comiss
ret
dec
fists
or
cmp
hlt
out
insl
je
xchg
and
or
aad
cld
jmp
pop
dec
cmpsl
xchg
imul
cmc
hlt
xchg
nop
fcomps
push
lret
fmul
or
in
push
mov
cmp
push
insb
fcompl
test
mov
subl
int3
cli
or
sub
insl
mov
mov
push
jno
hlt
pop
push
adc
outsl
inc
inc
lods
add
mov
dec
mov
repnz
sahf
sahf
les
or
push
ret
das
stos
adc
sub
mov
or
mov
sub
rcll
cmc
das
push
mov
mov
ja
xor
mov
and
mov
xor
mov
outsl
fistl
js
enter
xchg
push
sub
jecxz
inc
orb
nop
sbb
push
leave
push
daa
sub
lds
repnz
sub
loop
movsl
adcl
fiaddl
jle
push
and
aad
in
aaa
insb
xchg
rcll
les
cmp
test
rorl
iret
or
and
js
xor
ffreep
jns
dec
push
cmp
xchg
xchg
and
dec
mov
outsb
sbb
xor
or
imul
cmp
shll
xchg
push
inc
repz
ljmp
cmp
jne
pushf
sbb
sbb
dec
jbe
movsl
cli
in
in
mov
clc
jmp
dec
or
shrl
je
inc
and
cs
test
call
daa
or
pop
je
loopne
out
sub
imul
in
cmc
out
push
mov
xchg
cmc
add
sti
push
mov
xchg
nop
pop
push
jmp
mov
test
pushf
push
push
and
jb
add
mov
outsb
je
gs
xlat
mov
pop
pop
mov
pop
in
popf
or
mov
dec
mov
push
jle
dec
cli
push
add
inc
dec
test
mov
jle
xchg
hlt
cs
loopne
mov
xchg
loopne
in
aas
in
ret
sub
or
dec
xchg
add
mov
and
les
sub
mov
sbb
fisubl
or
mov
in
mov
adc
sub
shl
cmp
xor
rcr
jp
pusha
jns
aam
movsl
jp
xor
fdivs
mov
dec
fsubl
or
lods
es
test
negl
or
mov
sahf
mov
cmpsb
sub
adc
bound
inc
jnp
push
int3
xor
push
loope
inc
mov
mov
daa
icebp
ret
insb
cmp
daa
popa
xor
pop
lret
loop
pusha
xor
loope
sbb
fwait
fwait
bound
push
sub
push
dec
cmp
in
push
mov
cmp
psrlq
xchg
arpl
es
lahf
cmp
fnstcw
fcomps
mov
in
push
xlat
or
and
test
sbbl
jo
fdivs
mull
in
inc
stos
clc
icebp
mov
ss
sbb
arpl
fdivs
aam
std
fidivs
mov
loope
xor
push
ljmp
mov
cmpsb
jge
inc
mov
fs
jl
cltd
clc
sti
data16
mov
mov
cmp
stos
adc
mov
sub
push
lock
mov
jns
sub
mov
cmp
cmp
add
or
inc
bound
add
cwtl
ret
das
jmp
test
cld
pop
push
je
push
popf
mov
ret
mov
hlt
cmpsl
push
sbb
inc
xchg
inc
in
ljmp
jp
adc
cmp
mov
es
xor
aaa
lahf
inc
enter
sbb
dec
lea
add
jp
scas
pop
mov
divl
es
hlt
mov
je
fdivrl
push
mov
imul
or
lods
mov
dec
arpl
xchg
or
add
mov
mov
cmp
ret
mov
in
jbe
dec
ljmp
dec
lret
jge
pop
fsubs
mov
mov
rorl
fs
cld
fdivrl
jns
dec
cmpsl
push
push
mov
jbe
jne
and
mov
ljmp
mov
push
xchg
xchg
cmp
aad
mov
push
push
dec
pushf
jns
scas
dec
push
bound
jmp
adc
gs
fistpll
mov
sbb
add
xchg
pop
int
sbb
shrl
in
push
or
xor
cmp
hlt
xchg
pop
xor
jnp
mov
or
xchg
cmp
lods
adc
out
cmp
inc
and
les
dec
sub
xor
dec
or
mov
mov
jecxz
adc
mov
xor
xor
sub
sub
lcall
bound
xchg
sub
jp
sbb
cld
add
mov
faddl
dec
or
cmc
les
enter
or
outsl
fistps
call
inc
movsb
and
sbb
mov
mov
cmp
push
lods
cmp
cmpsl
mov
jne
outsb
xchg
shrb
aas
add
iret
add
cltd
mov
ja
insb
cs
stc
ret
mov
jge
lods
adc
pop
bnd
outsl
mov
in
mov
jns
pop
push
and
ljmp
and
and
or
lods
xlat
inc
lds
repnz
fdiv
adc
xor
add
add
insl
or
and
ret
dec
in
xchg
test
mov
test
in
testb
scas
cmp
xlat
mov
out
mov
xchg
push
add
stc
sub
sbb
or
sti
std
hlt
push
sub
ret
jp
jnp
fisttpll
das
jns
mov
sar
inc
dec
mov
pop
mov
xor
or
pop
xor
aam
xchg
ss
sbbl
pop
repz
jnp
jge
in
popa
sub
imul
pop
jl,pt
out
pusha
fiadds
dec
stc
push
psubb
sub
lods
sbb
sbb
lods
test
jne
sub
pminsw
cmp
xor
lock
cmpl
mov
or
jecxz
mov
mov
jl
fbstp
add
adc
adc
test
push
sbb
jecxz
xchg
aam
dec
fwait
sahf
pop
and
sub
jl
pop
shll
in
pusha
rcl
inc
sbb
lret
pop
pop
mov
jg
sub
scas
pop
push
adc
pop
out
sbb
je
mov
jmp
out
out
aam
fldenv
jge
fistpll
stos
jo
rorb
scas
jns
pop
inc
sub
aam
or
rsqrtps
and
sahf
inc
sbb
pop
rcl
ja
push
inc
jae
mov
xor
aas
in
mov
call
inc
adc
and
cli
push
or
adc
daa
jae
leave
movsl
lcall
clc
mov
cmp
push
test
or
xor
mov
enter
mov
sub
ret
cmc
out
test
lcall
push
les
cmp
or
or
aas
mov
push
mov
mov
aaa
dec
sub
lock
stos
mov
fists
pop
das
aad
test
push
jmp
xorb
mov
test
lret
push
les
xchg
mov
ret
gs
push
jb
pop
pop
ret
stos
adc
mov
inc
adc
repnz
dec
sti
ja
or
and
mov
dec
push
inc
lds
das
mov
fimuls
jle
inc
cmp
mov
scas
and
mov
inc
pushw
push
pop
mov
mov
pop
dec
enter
rcll
iret
pop
mov
stos
adc
out
movsl
lea
mov
sahf
cltd
scas
dec
mov
out
in
mov
inc
add
and
mov
stos
add
jl
lea
in
cwtl
test
xor
jns
and
gs
pop
mov
aam
aad
iret
xor
subb
jno
sub
push
xor
dec
adc
fidivl
jp
mov
sub
push
lret
inc
outsb
into
mov
stos
pop
stc
adc
pop
ja
faddl
and
push
push
test
test
in
pop
out
mov
iret
push
test
int
and
dec
cmp
popa
sbb
rcrl
ss
in
aad
dec
pusha
je
xchg
push
pop
fbstp
lcall
fimuls
and
ljmp
xor
out
test
clc
push
imul
jmp
add
das
iret
in
leave
std
add
orl
ret
push
pop
dec
pop
test
inc
out
call
setl
jl
loope
jns
loop
insb
dec
xorl
insl
outsl
in
in
jle
mov
or
fstps
xchg
mov
mov
dec
lret
out
js
pop
popf
movsb
xor
push
out
xor
jo
fstpt
or
insb
and
repz
iret
xchg
roll
es
sbb
les
mov
jg
mov
xchg
dec
es
jbe
mov
mov
lret
fldcw
hlt
out
mov
cli
cmpsl
out
mov
outsb
add
xchg
ds
push
aaa
dec
jno
or
adc
inc
xchg
and
imul
and
or
mov
sbb
jbe
lods
push
xchg
popf
test
cmp
notl
mov
cmp
lock
mov
cmpsb
adc
ljmp
cmp
imul
loope
mov
pop
add
bound
clc
daa
gs
add
cltd
mov
movsb
mov
fwait
cmpsl
aad
ss
push
hlt
sbb
mull
movsl
dec
pop
cltd
push
push
fisubl
dec
call
mov
jbe
push
test
xchg
sbb
lods
leave
mov
and
in
push
xor
test
sub
icebp
sbb
fs
enter
mov
xchg
and
hlt
fs
xor
pop
or
adc
xchg
adc
xlat
aaa
dec
sub
fcoms
cmp
out
pop
and
out
dec
lock
dec
insl
scas
lds
xchg
pop
push
mov
xor
ss
sbb
imul
popa
mov
lret
pop
icebp
and
jns
mov
xor
mov
int3
sbb
fmul
mov
pop
mov
popf
mov
or
xchg
sti
in
dec
push
inc
dec
pusha
cli
aas
mov
xor
push
jle
dec
jnp
and
mov
adc
cmp
pop
mov
lds
sbb
mov
push
pop
adc
in
stc
test
sbb
fcomp
js
mov
or
lea
cld
std
cwtl
xchg
add
lea
test
fiadds
add
xchg
push
push
mov
insw
dec
clc
daa
dec
mov
xchg
jae
dec
jne
leave
ss
idivb
push
sub
cmp
push
cmpl
adc
mov
jno
roll
stos
das
and
xchg
cmpsl
pop
xchg
mov
mov
push
cmp
lsl
inc
test
adc
popf
inc
adc
add
mov
jecxz
add
jge
cmp
mov
cmpsb
in
out
push
or
sbb
push
pusha
stos
mov
ss
in
shr
mov
mov
lea
jmp
adc
aas
jp
push
mov
pop
inc
xlat
pop
out
inc
mov
adc
fsts
repz
mov
mov
nop
mov
movsl
popf
cmp
mov
scas
into
pop
outsb
into
sbb
pop
bnd
fildll
lods
pop
jecxz
sarb
icebp
add
imul
sbbl
push
sbb
push
pop
dec
and
nop
or
sub
cmc
lods
cltd
ds
sbb
or
xchg
jb
ja
sub
loopne
sarb
rcl
in
arpl
mov
adc
push
pusha
rclb
js
roll
ret
orb
xchg
pop
dec
pop
xchg
lds
lahf
jg
xor
aaa
dec
sbb
xor
push
mov
dec
pop
ss
xor
mov
stos
rol
icebp
shll
mov
jecxz
loope
mov
fimull
loope
cmc
sub
out
call
xchg
lock
data16
mov
sti
icebp
lods
mov
psllw
mov
rolb
ret
lcall
pop
dec
adc
mov
clc
pop
xadd
cltd
daa
out
pop
xchg
stos
pop
scas
mov
dec
outsb
cwtl
pusha
mov
and
mov
dec
adc
scas
sahf
mov
out
push
dec
imul
sbbl
in
stos
mov
out
les
icebp
add
enter
popa
xchg
mov
test
adc
nop
dec
dec
inc
jo
inc
sub
ret
test
pop
push
les
sub
xchg
call
sub
mov
adc
ljmp
xor
dec
mul
aad
push
std
or
dec
lret
fwait
cmc
push
in
pop
pop
hlt
sbbl
jb
xorb
rorb
into
loope
push
ficoms
and
and
jecxz
push
xchg
dec
jbe
sbb
cmpl
fwait
cmc
cmpsb
pop
in
dec
leave
fsubrl
and
inc
js
mov
sbb
std
xchg
xchg
inc
sti
and
mov
dec
jle
bound
adc
fcmovnu
sbb
jns
pop
loop
xlat
fnstcw
mov
mov
mov
bound
scas
cmp
mov
inc
scas
mov
jnp
rcl
mov
lret
cld
mov
sbb
push
inc
out
loop
aaa
sahf
movsb
in
mov
jbe
xor
nop
inc
add
push
out
jbe
dec
jbe
or
push
sub
pusha
sub
add
sub
sti
push
pop
mov
enter
xlat
fwait
xchg
mov
fwait
mov
insb
aaa
mov
std
ja
mov
pop
mov
jecxz
add
dec
xchg
mov
out
xchg
push
adc
mov
icebp
divl
xchg
sub
mov
lods
jns
inc
dec
xchg
lods
xor
loopne
adc
in
ds
sahf
leave
mov
push
lods
jmp
cmp
lock
sbb
mov
lock
cwtl
cmpsl
dec
xlat
jg
rol
idivb
push
xor
call
lcall
mov
lock
fdivr
mov
mov
mov
push
sub
out
out
popf
lea
lahf
int3
clc
jg
ret
cld
xor
sub
jl
popf
lock
inc
in
mov
xchg
adc
pop
and
dec
mov
shrb
xor
nop
adc
xchg
aam
xchg
adc
ja
into
dec
sti
dec
mov
jmp
test
jns
in
mov
jg
mov
sbb
pop
xchg
push
xchg
and
and
dec
rcll
mov
test
jge
pop
iret
leave
push
adc
loop
and
pop
mov
icebp
movsl
jnp
jmp
gs
jae
stos
arpl
jg
jae
ss
test
sti
imul
mov
push
and
sub
cmp
cli
and
enter
or
addb
stos
arpl
cld
sbb
mov
adc
inc
dec
mov
lds
mov
je
mov
pop
fildl
inc
jp
leave
loopne
cmpl
imul
fs
bswap
bnd
pop
stos
xchg
push
cli
iret
lods
add
dec
scas
in
xchg
mov
dec
cwtl
les
in
xor
cmp
xor
mov
push
xor
enter
sti
sub
mov
sbb
out
pop
shlb
adc
imul
imul
xchg
in
push
mov
xchg
jp
and
adc
cmp
xchg
pop
out
push
jg
push
push
xlat
sbb
pop
scas
sub
fwait
aas
aam
jns
or
imul
mov
push
pushf
popf
imul
icebp
insb
pop
popf
mov
pop
jge
dec
test
cmc
fadd
xlat
jg
inc
jns
and
xchg
outsb
push
sub
outsb
ljmp
je
dec
fs
movsb
insl
dec
mov
nop
push
or
pop
insb
ret
rorb
jne
xchg
out
mov
shll
jbe
xchg
clc
pop
pop
mov
pop
das
clc
inc
dec
push
mov
cmpl
ffreep
cli
lret
pop
test
inc
xchg
mov
jae
mov
jmp
or
std
aad
xor
mov
jge
outsl
shl
je
xchg
xchg
fwait
aas
jno
pusha
jg
xchg
jno
sbb
push
in
ljmp
xchg
inc
insb
jo
pushf
sbb
sbb
cmc
mov
sbb
sub
test
cltd
jp
dec
lret
cmp
fnstcw
or
mov
enter
addr16
cwtl
es
cmp
push
push
insb
lahf
jg
pop
out
add
fwait
jmp
fwait
and
cmp
sbb
aas
sub
xor
inc
clc
out
out
ss
ret
shr
mov
pop
aam
outsl
mov
mov
pop
pop
stos
cmp
dec
das
and
mov
cli
in
in
jnp
hlt
and
out
popf
fistpll
xchg
xrstors
ljmp
sbb
cmp
subl
pop
pop
sahf
imul
cs
mov
push
movsl
pop
push
sub
xor
stos
aaa
and
jecxz
mov
idivb
call
aad
js
cmc
mov
in
mov
dec
decl
lods
inc
das
xlat
imul
out
je
xchg
mov
add
dec
sbb
dec
mov
dec
das
jg
fldcw
dec
lcall
mov
stos
sbb
ja
jbe
decb
shr
or
sub
andl
ret
xchg
sub
dec
pushf
add
adc
sub
sbb
inc
or
test
cmp
lds
sub
pop
xchg
rcrl
repnz
mov
and
test
movsl
mul
popf
xchg
jge
pusha
arpl
in
push
js
stc
pop
mov
mov
mov
sti
pop
dec
out
stos
and
jg
leave
in
xor
or
pushl
xor
shlb
jne
cld
push
sbb
mov
cmp
das
dec
mov
jle
bnd
scas
add
in
in
orb
pop
adc
inc
mov
add
xor
mov
inc
mov
pop
hlt
push
xchg
arpl
aaa
idivb
cli
out
int
out
mov
cmp
inc
lock
in
std
stc
lahf
clc
in
arpl
add
popl
int3
mov
outsl
push
nop
test
lds
add
addr16
cmp
sbb
out
sub
in
sarb
push
ret
sbbl
int
stos
std
cltd
jnp
out
lods
dec
inc
loope
inc
adc
dec
mov
jecxz
push
pop
out
leave
xchg
arpl
pop
je
dec
lea
jecxz
in
fcmovb
and
pop
or
xchg
inc
dec
lods
push
out
aaa
adc
jbe
cmp
cmc
fld
dec
sbb
js
sub
sbb
push
es
cld
mov
push
dec
dec
dec
and
jnp
outsb
lret
pushf
mov
hlt
sub
mov
jb
lcall
jnp
pop
test
jbe
sahf
in
adc
lret
out
jb
sub
mov
adc
sti
sbb
and
stos
jo
movsl
fcoms
sub
divl
sti
lods
je
das
xlat
adc
sub
and
mov
xlat
rcrb
mov
mov
jecxz
xchg
and
push
or
lahf
aaa
sbb
fcoms
popf
ja,pn
outsl
add
sbb
out
cmp
pop
stos
dec
push
jge
cmp
cli
sbb
xchg
cwtl
cmp
sahf
and
mov
leave
adc
sbb
adc
in
xchg
xlat
xor
je
nop
cmp
cmpsl
push
mov
aad
xchg
inc
cmp
sub
aam
popa
jbe
mov
scas
mov
add
loope
jle
das
scas
ds
out
mov
das
roll
outsl
push
mov
xchg
mov
ljmp
sub
js
push
loop
sarl
pushf
repnz
test
jle
sub
adc
mov
jge
pop
and
lret
outsl
pop
or
hlt
sbb
inc
sub
sarb
mov
or
push
nop
cmpsl
sti
pop
adc
fsts
xor
push
sub
mov
cmp
sub
cmp
lock
inc
push
je
add
nop
in
loope
mov
ljmp
sub
repz
repz
mov
les
push
js
inc
ficomps
loopne
jnp
std
add
mov
mov
jecxz
inc
mov
cmp
add
into
cmp
sti
mov
mov
mov
popa
mov
ss
lahf
pop
movsl
mov
dec
in
sbb
add
out
sbb
lret
mov
mov
push
inc
push
push
arpl
popf
jg
push
adc
repz
sub
pop
jp
nopl
sbb
add
nop
add
shlb
cmp
fstp
fstp
fimuls
out
out
adc
push
ja
ja
add
out
out
insb
out
xchg
ret
shll
loopne
leave
pop
std
xchg
int3
mov
gs
dec
sbb
inc
out
fs
xchg
sub
push
das
insb
add
testl
xor
aam
lea
cmpsl
xor
leave
mov
ja
fldcw
mov
mov
pop
shlb
sbb
mov
mov
lea
mov
adc
and
das
clc
jno
dec
imul
sub
fidivl
push
repnz
mov
mov
rolb
ja
or
or
inc
inc
cmp
xchg
popa
testb
mov
icebp
jb
mov
and
popf
pop
testl
inc
jle
jmp
pusha
inc
stc
shr
bound
shl
outsb
call
ljmp
addb
mov
or
sbb
inc
mov
outsb
aam
aam
and
ja
clc
clc
stos
add
push
adc
imul
mov
je
mov
cmp
lahf
xchg
sti
sbb
jbe
pop
js
and
adc
xchg
push
cmc
xchg
lds
mov
aad
xchg
ret
cmp
jo
and
xor
pop
mov
ret
push
pop
pushf
pop
mov
add
push
push
ljmp
je
sti
jg
push
loop
repnz
cs
xor
jae
repnz
adc
test
nop
rclb
stc
lcall
xor
pop
xor
mov
inc
xchg
hlt
xor
mov
add
std
out
shll
fs
setle
pop
adc
push
sbbl
jecxz
inc
in
mov
mov
adc
and
les
pop
sub
push
cmpsl
add
fstps
lods
xchg
enter
or
sbb
mov
ja
mov
push
or
push
xchg
pop
pop
rolb
ljmp
fisttpll
out
sub
dec
frstor
in
scas
clc
xor
push
aam
mov
push
in
in
test
out
add
or
mov
jb
dec
and
pop
bound
mov
decb
jmp
mov
iret
dec
rcr
jnp
jmp
fs
lock
mov
xor
sub
pop
out
inc
adc
xchg
scas
pop
pop
mov
shrw
mov
hlt
data16
pop
xlat
adc
loope
push
scas
enter
stos
mov
lock
jge
push
and
pop
cmpsl
mov
pusha
dec
sarb
and
pop
mov
lock
xorl
dec
jp
out
xchg
cs
pop
jg
mov
loope
lea
popa
push
xchg
loope
cwtl
test
push
mov
sub
mov
in
push
shlb
inc
lcall
jns
js
xchg
addb
enter
repnz
das
add
jae
and
jb
pop
mov
jge
loop
cmp
fidivl
xchg
mov
mov
xchg
adcl
inc
and
mov
stos
into
lods
dec
and
pop
shl
loope
push
movsl
gs
dec
popf
and
fidivrs
sarb
ret
mov
leave
sub
pop
sub
xchg
adc
pop
xor
add
jb
insb
xchg
les
lcall
cmp
les
imul
add
fwait
ret
or
and
lret
jb
mov
pop
dec
jb
out
cmp
fcoms
adc
outsb
jle
in
dec
outsb
pop
outsl
jbe
dec
lea
jns
sub
arpl
mov
adc
sub
mov
decl
and
inc
bound
add
pop
fwait
lods
dec
inc
mov
rcll
in
stc
or
fdivrs
cltd
pop
test
out
jb
sbb
push
arpl
es
out
shr
dec
jbe
cmp
add
in
push
push
dec
dec
pop
xchg
sub
cmpl
aas
xor
xchg
testb
out
repnz
fsubs
repnz
das
icebp
int
fcoml
out
ja
rorb
push
lahf
xchg
mov
das
shll
mov
dec
or
mov
push
into
test
push
sub
jnp
repnz
lahf
js
pop
call
xor
pushf
jl
cmp
dec
mov
and
adc
call
dec
cmp
or
or
enter
enter
mov
add
mov
mov
jns
into
js
gs
mov
and
pop
jecxz
subb
nop
aam
fcmovne
pop
cmpl
sbb
dec
addr16
jns
fidivrs
sbb
in
jg
in
dec
enter
xlat
nop
pop
rorl
out
inc
in
rcrl
pop
stc
jae
negl
paddsb
jb
mov
pop
shll
int
mov
add
cltd
add
fs
cmp
pop
sbb
sub
mov
stos
fnstsw
pop
pop
mov
jmp
aaa
in
dec
test
pop
nopl
mov
mov
and
pop
stc
adc
sub
sub
lahf
pushf
repz
xchg
jns
pop
mov
lcall
ds
cmp
int3
stos
xor
jb
sar
sub
sarl
cmpsl
fs
dec
pop
mov
dec
cli
lahf
daa
xchg
mov
lret
dec
push
jo
inc
mov
shlb
les
shlb
xor
mov
dec
subb
lcall
or
movsb
insl
sub
nop
and
lods
outsl
or
and
dec
sub
sub
sti
sbb
dec
out
xor
repnz
or
mov
test
repz
sub
pop
js
loope
test
jo
inc
loopne
sbb
jle
sbb
ret
lret
rolb
push
fimuls
sbb
push
frstor
jno
sbb
sbb
ret
and
out
shrl
xor
xchg
pop
in
inc
lret
jecxz
cmp
hlt
hlt
fisubrs
adc
adc
push
in
lea
iret
push
or
scas
scas
add
cmpl
jl
cmp
les
push
cmp
pusha
add
les
dec
iret
sti
push
outsb
movb
inc
inc
int3
push
cmp
mov
push
xor
lcall
lock
push
fsubs
fists
hlt
add
push
stos
pop
xchg
call
cmp
test
movsb
inc
mov
dec
mov
adc
stos
push
das
test
xor
mov
lods
mov
xchg
dec
cmp
int
jns
pop
push
popf
and
sub
dec
mov
mov
sub
jae
cmp
push
pop
push
cli
sbb
loope
sbb
ja
jg
mov
hlt
adc
add
add
inc
or
fwait
xchg
jbe
sub
xchg
add
pop
add
or
loopne
shr
mov
xor
iret
cmp
scas
mov
mov
mov
and
inc
sbb
js
outsl
iret
fwait
outsb
cld
ret
iret
pop
nop
scas
inc
xor
add
cmp
fimuls
test
cmp
fsubrl
or
mov
mov
xchg
xchg
popf
or
insb
mov
push
dec
repnz
dec
xchg
pop
cmp
sbb
jns
cwtl
mov
push
sbb
sbb
test
sahf
xor
jno
pop
test
add
and
add
xchg
out
and
xor
lret
outsb
mov
cmp
sub
fidivl
push
cmp
jle
dec
arpl
dec
push
in
ror
adc
xchg
stc
pushf
or
sub
bound
adc
movsb
jmp
in
push
pop
repz
dec
test
fiaddl
adc
mov
scas
cmp
fucom
sahf
popa
shl
leave
enter
mov
pop
or
stos
sub
mov
xchg
int3
mov
adc
xchg
shl
js
fildll
mov
mov
sub
and
subb
jo
add
repz
adc
sbb
cmp
xor
fdivs
hlt
mov
ss
sub
popa
mov
push
scas
ljmp
insb
add
and
xor
aam
stc
repz
repz
in
hlt
sub
in
dec
test
inc
in
clc
or
push
or
notl
cmp
out
jae
cld
ficompl
lods
and
push
je
pusha
in
push
pop
mov
iret
adc
dec
and
pop
test
out
in
mov
sub
mov
xchg
inc
dec
or
aam
fstpt
jnp
xor
popf
rorl
push
push
cmp
stos
xchg
iretw
mov
and
vpmaxub
dec
repz
mov
fisubl
scas
cmp
stc
push
sarb
cmp
sti
push
sbb
lock
mov
pop
push
cld
lahf
call
out
stc
push
xor
dec
int
stc
lahf
stos
mov
push
mov
insl
mov
fisttpll
adc
push
lds
jne
mov
inc
mov
pop
dec
enter
sbb
cltd
lret
add
fistps
lods
mov
insb
push
aad
sbb
outsl
aam
mov
movsb
cmpsb
repnz
sbb
add
inc
test
iret
fsubl
fstpl
aad
pop
xchg
icebp
sub
cmp
bound
mov
aad
mov
loope
rorl
sti
clc
xchg
imul
push
fcomps
jns
test
sahf
arpl
pop
xor
xchg
gs
lods
je
inc
jp
or
loop
pop
inc
lret
aas
loope
pop
movsb
dec
mov
movsb
pop
mov
mov
imul
xchg
inc
pop
or
pop
roll
in
lods
dec
inc
call
sub
scas
inc
add
scas
in
mov
fimuls
mov
dec
cmpsl
sub
cmp
dec
sahf
ds
adc
enter
movsl
inc
out
add
loop
mov
ret
mov
cli
pushf
daa
daa
cmp
lock
lahf
into
inc
adc
push
mov
sti
sub
sahf
pusha
inc
xor
loopne
inc
test
leave
das
test
cmp
cmp
xor
sahf
enter
lahf
lods
lea
cmp
and
adc
aaa
loope
mov
mov
ljmp
push
or
xor
mov
cs
cmp
cmpsb
jno
adc
xchg
xlat
lock
mov
push
mov
and
mov
aas
lods
lock
incb
fwait
movsl
ret
inc
and
idivb
push
push
fildl
insb
outsb
mov
bnd
add
xor
or
insl
push
cmp
and
pop
addr16
xchg
mov
rcl
xchg
in
mov
pusha
aad
adcl
jbe
aas
adc
loopne
test
aad
jge
repnz
inc
xchg
push
test
ret
jp
push
rorl
imul
push
jle
je
nop
outsl
lret
int3
add
outsl
sbbb
cmp
lea
xchg
sub
arpl
aam
push
sub
xchg
repz
push
int3
out
xchg
jnp
out
xchg
fsubrl
or
cmp
das
adc
dec
xor
gs
and
outsl
lds
out
lahf
mov
push
orl
mov
jns
call
mov
dec
mov
sub
lea
out
or
lea
setg
inc
and
insl
call
dec
js
sti
pusha
sub
add
push
mov
jne
cltd
call
scas
and
shl
sub
sbb
pop
adc
insl
push
push
xchg
and
sub
sub
adc
fisttpl
pop
xlat
push
cmpsb
das
add
add
pop
fnstcw
mov
jle
dec
aad
pusha
f2xm1
jo
clc
jae
in
xchg
cmp
inc
mov
loop
xchg
mov
or
sbb
data16
out
push
mov
fistl
int
sbb
adcl
inc
and
jb
mov
ret
hlt
icebp
popa
loop
adc
mov
jmp
push
cmp
aas
pop
jmp
sbb
mov
mov
push
mov
or
je
and
or
paddw
adc
pusha
or
and
inc
bnd
and
inc
clc
pop
scas
hlt
jmp
rorl
repz
enter
neg
ret
out
cwtl
jmp
js
push
test
out
iret
inc
mov
test
xor
cmp
mov
loop
cmp
leave
insb
push
fidivrs
repnz
pop
andl
stos
outsl
out
fnstcw
addr16
xchg
fdivrs
int3
cld
in
imul
into
inc
push
movsl
xchg
js
inc
shll
imul
push
lcall
adc
cmp
rorl
insb
mov
into
push
and
out
lods
fisubrl
mov
dec
aam
jb
repz
or
stos
fmul
xchg
inc
addr16
es
or
es
sub
out
fnstsw
popf
repz
out
idivl
or
scas
add
shrl
sbb
push
repz
xor
in
and
test
bound
loopne
xchg
cld
cmp
sbb
incl
std
jg
mov
das
mov
sub
inc
mov
xchg
pop
int3
mov
pop
shrl
add
div
push
aas
stos
adc
cmp
xchg
outsl
das
adc
scas
rorl
sub
sbb
imul
cmp
scas
sbb
movsb
push
shl
enter
inc
mov
nop
mov
divb
sub
lcall
aad
and
fildl
mov
ja
dec
iret
add
pop
jge
jne
lock
js
scas
jb
dec
shrl
xchg
lock
mov
jae
test
mov
popf
xor
push
sub
fcomp
sbb
cmp
in
xor
jb
sbb
aam
lds
iret
sbb
mov
push
mov
and
sahf
stc
mov
adc
or
sbbl
xor
xlat
adc
jl
aas
mov
cmpsl
mov
adc
push
fcompl
push
and
ret
icebp
cmp
or
jns
es
mov
cli
int
cmp
insl
jb
or
pop
dec
add
and
adc
or
mov
fcomip
inc
repnz
cltd
jge
das
cs
xchg
fisubs
mov
add
ficomps
lea
dec
pop
jb
testb
adc
insb
or
out
xor
addr16
sbb
xor
jns
loopne
scas
loope
arpl
test
inc
xchg
and
push
scas
ret
and
and
shl
jo
pop
in
add
inc
ds
mov
inc
stos
mov
mov
test
movsl
int3
test
clc
fsubs
les
sub
cmp
ror
lods
sbb
gs
aam
inc
lahf
mov
jp
jmp
scas
shl
fiadds
jbe
jno
fsubrp
call
sub
into
push
outsb
sub
lahf
test
adc
dec
aad
pop
sbb
jbe
shrb
scas
push
xchg
ljmp
stos
dec
fcompl
std
sub
adc
or
or
mov
add
cmp
cmpsl
mov
daa
xchg
stc
dec
pop
test
sub
scas
rclb
push
mov
jmp
xor
add
adc
pop
repz
jg
mov
sbb
stc
int
rcll
fildll
cmc
stos
data16
pusha
aam
int3
sbb
sub
scas
jmp
iret
mov
or
sbb
roll
jno
push
and
rcr
movsl
cmpsb
xchg
fimull
mov
stos
jns
les
sbb
xchg
sbb
sbbb
sti
adc
jg
adc
cmp
sbb
add
inc
pop
and
push
cld
popa
aaa
shll
cs
xchg
outsl
popf
in
or
lea
out
pop
ja
jne
ja
adc
in
xchg
filds
rorl
lahf
mov
cmpb
std
jecxz
jmp
dec
jmp
cwtl
cli
insl
movsb
dec
orl
jb,pt
cvtpi2ps
or
push
jg
dec
andb
shll
mov
or
fadds
lock
mov
sub
xchg
mov
pop
int3
lds
popa
ss
leave
sub
xchg
mov
pop
test
sub
icebp
cmpsb
and
shll
adc
mov
xchg
adc
pushf
mov
scas
stc
inc
jae
push
sarl
mov
sbb
or
pop
int3
inc
ljmp
cmc
push
adcl
das
orl
mov
xchg
pop
inc
iret
pop
mov
sub
cmp
pop
cmp
ficompl
cld
dec
push
xchg
es
push
pop
push
ljmp
adc
fsubrp
jno
dec
dec
adc
cmp
mov
mov
pop
aam
add
jecxz
enter
ret
js
push
push
arpl
or
adc
out
xchg
mov
imul
aad
jp
test
stc
xlat
mov
mov
aaa
push
pushf
movsl
sub
cltd
ret
inc
or
adc
test
jno
mov
jno
push
fsubrl
pop
fimull
out
pop
aam
lods
fcomi
sbb
rcrb
movl
adc
lock
sbb
jo
cwtl
mov
mov
je
and
out
pop
inc
cmp
pusha
stos
int3
cmp
mov
mov
mov
jae
pop
stos
fcoml
dec
int
mov
add
shr
xchg
bound
jmp
pop
mov
iret
add
in
jmp
xchg
mov
jmp
inc
xchg
push
hlt
repnz
aad
fldl
mov
mov
adc
ret
imul
jecxz
inc
push
in
les
mov
adc
cwtl
mulb
push
mov
je
mov
push
inc
inc
sbb
add
aad
ljmp
and
lcall
ja
jno
sub
arpl
orl
xchg
jmp
ret
mov
outsl
sbb
repz
sti
add
mov
pop
ret
and
jl
mov
xorl
push
inc
jo
loopne
mov
adc
fstpl
jmp
pop
mov
fnstsw
jb
jg
stos
hlt
sti
mov
lret
pop
into
cmp
fwait
or
pop
mov
mov
sbb
cmpsb
ljmp
out
imul
cmp
mov
js
flds
or
xchg
stos
enter
inc
rcrl
lea
mov
loopne
mov
sbbb
in
cmp
jno
mov
xlat
pop
xor
pop
adc
push
aas
cmp
push
ret
sbb
push
clc
mov
sbb
cmpsb
or
dec
add
lock
mov
aad
add
or
pusha
stc
test
in
sbb
ljmp
and
add
xchg
push
lds
sahf
jmp
leave
inc
mov
mov
adc
jecxz
ljmp
cmp
fisubl
or
mov
push
mov
dec
xchg
inc
push
cmp
pop
popf
pushf
je
push
xor
mov
nop
js
or
jb
mov
push
cmp
xchg
aad
aam
leave
add
add
mov
inc
cmpsb
sti
in
adc
jno
jmp
mov
ficoml
aam
into
cltd
shrb
adc
leave
inc
mov
popf
insl
jmp
pop
rcll
pusha
pushf
push
int3
add
cmp
mov
add
testl
or
xchg
lock
dec
pop
lds
push
rcrb
xchg
in
rorl
jo
or
mov
jbe
lds
fsubs
adc
or
adc
or
je
aad
shll
and
addr16
mov
mov
aad
rclb
cs
xchg
fiadds
scas
xor
test
inc
pop
mov
adc
cli
fwait
or
push
fldenv
popa
cld
inc
or
xchg
push
adc
dec
out
incl
insb
xor
cltd
cld
push
mov
jo
xchg
xor
rorb
inc
stc
insb
aam
ja
mov
mov
adc
mov
ror
adcb
cs
jge,pt
repnz
mov
inc
push
inc
popa
fmuls
je
mov
icebp
cmpsl
push
repz
jg
sbb
shlb
clc
dec
iret
jns
insb
xor
jo
mov
mov
push
mov
gs
clc
xor
sub
push
sub
enter
push
rcrb
imul
jmp
lock
and
jge
clc
pop
pop
popf
push
push
add
or
int
pop
xchg
fisttpll
mov
xor
sbb
scas
dec
mov
cmp
push
xor
pop
leave
lods
or
mov
cld
dec
dec
dec
mov
int3
loop
add
pop
call
subl
mov
into
loop
xor
push
or
out
inc
ja
inc
push
jno
xor
xor
mov
dec
and
dec
cmpsl
mov
dec
cmp
mov
cltd
iret
cmpsb
jmp
into
push
push
dec
ret
push
and
cmp
push
inc
bound
repz
out
lret
ficoml
mov
aas
jnp
mov
std
leave
mov
gs
fistps
imul
repz
pop
sti
test
pop
mov
cwtl
push
daa
jmp
call
fldt
xlat
jg
push
lret
sbbb
arpl
das
clc
aas
cmp
jecxz
incl
sahf
push
imul
mov
add
daa
lock
and
sbb
pop
lods
and
div
jle
mov
jnp
bound
loope
or
cmpsb
pop
lods
and
test
lea
xor
add
jg
push
jg
xchg
inc
int
xor
mov
scas
outsb
and
pop
jb
jl
loope
scas
and
xor
xchg
mov
fs
nop
mov
addr16
hlt
sub
mov
xorb
ret
add
test
mov
xchg
cmp
aad
inc
bnd
in
adc
lcall
jge
mov
scas
lret
fs
push
add
pop
add
inc
mov
aas
push
shll
insb
loop
xchg
push
es
outsl
xchg
into
and
xor
test
and
mov
xor
int
mov
inc
imull
pusha
es
daa
roll
into
ljmp
out
and
push
out
lods
push
mov
into
mov
bound
xchg
push
pop
stos
xchg
mov
std
adcb
loope
in
fsubr
push
sbb
test
push
out
pop
out
mov
adc
hlt
out
push
pop
push
pop
mov
arpl
ret
movb
insb
xchg
mov
icebp
mov
xor
jmp
push
mov
inc
out
outsb
cmpb
xor
std
out
loop
mov
pop
outsl
les
cltd
mov
and
fucomip
fwait
jns
pop
mov
stc
or
loop
push
shr
and
dec
or
pop
add
test
jge
inc
jns
pop
das
mov
jne
xor
jns
and
stc
jae
dec
fwait
inc
scas
scas
out
mov
xchg
test
outsb
decb
ret
pusha
lods
jmp
imul
stc
xchg
lods
shl
pop
xor
pop
inc
adc
pop
aas
fsubl
dec
add
pop
push
addl
lahf
lock
mov
jmp
std
sub
shll
sub
cmp
fimuls
xchg
push
jb
cwtl
sub
sbb
or
or
std
inc
jo
xchg
ds
loop
pop
das
fnstenv
mov
repnz
fists
cmp
and
sub
and
add
push
pushl
bound
cltd
lahf
mov
sub
das
bound
xchg
icebp
cli
sbb
mov
dec
cltd
sub
jo
add
or
fdivr
shll
or
sub
pop
inc
add
rolb
jbe
leave
dec
in
repnz
jb
arpl
inc
lret
xchg
dec
mov
adc
daa
ds
rorl
adc
xchg
fwait
aas
in
pusha
xchg
fildl
mov
push
call
pop
xor
gs
leave
in
mov
mov
jb
popa
cmc
movsb
mov
add
mov
jns
data16
mov
or
ljmp
adc
xchg
push
push
in
pop
xchg
js
mov
mov
cmpsb
aas
ja
and
aas
jmp
lds
sbb
mov
fcom
out
mov
mov
int3
sarb
gs
clc
es
push
pop
incl
dec
int3
sub
addr16
mov
sbb
push
jo
mov
lods
cld
mov
mov
es
add
idivb
or
fistpl
call
mov
pushf
sbb
cli
add
pop
frstor
std
es
lea
fidivrl
lock
aas
int3
and
jns
add
mulb
push
fcoml
dec
loope
cmp
ljmp
push
je
scas
sbb
add
add
shrb
cmpsl
sbbl
inc
and
mov
jnp
cmpsb
add
dec
jae
imul
xchg
xor
xchg
dec
and
jae
popa
push
lret
sub
and
cmpsl
push
pop
in
xchg
xchg
jb
xchg
cltd
jmp
jne
bound
fsubrl
pop
mov
sbb
jno
int
ficomps
adcb
movsb
pop
ret
loope
adc
push
outsb
lret
xorb
out
sub
jae
imul
addr16
and
mov
clc
int3
mov
adc
or
rolb
addr16
pop
adc
mov
mov
mov
mov
bnd
sub
ds
cmc
mov
pop
xchg
divl
or
fiaddl
jp
xor
rcrl
push
fildll
mov
push
pop
jbe
xchg
xchg
mov
jp
fsts
cmp
sbb
shlb
mov
es
or
fmuls
cmpsl
cmp
add
push
push
loop
mov
inc
add
mov
cmp
mov
lret
or
inc
repnz
rcrl
lret
add
push
stos
push
xor
movsl
pop
jbe
pushf
bound
iret
adc
incb
mov
push
cmp
cmp
lret
jae
push
orb
or
xchg
pop
mov
push
mov
or
movsl
enter
movb
mov
jl
lods
loop
push
push
xchg
ljmp
rcl
insb
mov
pop
xchg
movsl
mov
roll
sub
mov
sti
jl
adc
jecxz
cmp
std
jl
push
repz
bound
es
inc
out
in
pop
mov
dec
clc
cmp
addr16
xor
jbe
or
fsubrl
fsubp
outsb
mov
add
sub
icebp
xchg
jp
cwtl
inc
lcall
int
and
push
pop
lret
lods
pop
or
inc
inc
in
pushf
xchg
xlat
xchg
and
pop
dec
gs
push
in
loope
insl
sahf
stos
dec
cmc
push
icebp
shrb
fisubl
mov
sbb
lods
sbb
jbe
in
outsl
aad
fisubrl
cwtl
cmc
mov
pop
xchg
inc
xchg
hlt
xchg
xor
test
dec
mov
or
fnstcw
out
repz
and
movsb
push
movsb
sub
cld
sub
adc
decb
push
mov
sbb
cmpsl
arpl
jno
sbb
pop
cli
sbb
btc
jno
loop
ds
test
es
lret
mov
int3
and
sub
xchg
jl
fldenv
mov
sbb
mov
mov
cmp
add
ds
je
cmp
and
pop
sti
daa
pushf
jns
pop
inc
test
nop
into
out
insl
adc
es
inc
push
xchg
std
jl
loopne
sahf
imull
mov
inc
jmp
cld
lea
add
add
imul
cmp
dec
cmp
jmp
mov
out
shlb
and
out
js
pop
sub
lret
cmp
fcomps
test
inc
lock
jae
iret
mov
jne
push
in
lahf
inc
dec
cwtl
adc
push
cmp
shlb
mov
lcall
bound
fidivrl
push
rcrb
push
dec
js
sbb
add
test
arpl
or
or
fdivp
js,pn
fwait
mov
loope
and
sub
pop
jae
pushf
mov
in
mov
sbb
jge
sar
std
aaa
arpl
and
movsb
je
je
adc
test
lds
mov
es
popf
or
or
jbe
pop
fcmovnu
mov
jp
int
jno
xor
push
mov
lcall
dec
mov
in
xor
call
icebp
movsl
jmp
mov
add
cmp
and
lock
mov
add
lahf
jmp
pop
xor
movsl
enter
or
call
cs
cmp
fwait
lcall
xor
aam
add
mov
shrb
mov
adc
inc
pop
pop
movsl
ss
daa
pop
js
jnp
push
sbb
pushf
jo
int3
test
test
mov
dec
pop
pop
inc
and
pop
xchg
aam
jns
pop
int
in
inc
sbbb
in
jnp
insl
ja
mov
loop
out
add
sbb
arpl
cli
das
mov
jns
add
push
pop
jbe
mov
in
ret
or
sahf
popl
call
not
xchg
sub
ficomps
add
pop
lods
pop
inc
rcll
cmp
and
scas
sub
xchg
jecxz
outsl
lret
out
insl
mov
pop
mov
inc
jo
popa
outsl
sti
outsb
bound
pop
sbb
out
dec
ret
cmpsb
push
stc
xor
mov
pop
dec
sbb
in
iret
inc
jae
jne
popa
ja
loope
pop
cmp
fistps
mov
dec
fiaddl
xor
add
mov
je
pop
sub
or
ja
mov
push
inc
sahf
mov
loope
xor
aaa
nop
leave
and
xchg
mov
test
adc
lret
call
lcall
jecxz
add
mov
mov
jns
push
mov
jbe
call
adc
not
test
sbb
dec
test
cmpsb
lock
cwtl
popa
pop
adc
inc
pop
rcrl
dec
scas
mov
sub
gs
movsl
out
mov
bnd
mov
lods
mov
leave
add
test
mov
jae
inc
push
xor
mov
pushl
push
int3
jae
dec
mov
cmp
pop
imul
in
je
in
dec
in
xlat
mov
out
cmp
push
lea
dec
xchg
mov
push
mov
out
loope
stos
mov
adc
mov
jo
pop
aas
sti
mov
aaa
mov
or
or
xorb
lcall
dec
gs
lret
adc
jne
cmp
pop
inc
ljmp
inc
test
xchg
popa
cwtl
and
lock
scas
inc
hlt
bound
outsb
roll
aam
shll
lcall
sbb
out
insb
ja
loope
xchg
das
ret
or
push
dec
mov
fistpll
cwtl
shrb
xchg
js
xor
into
jns
push
outsb
je
imul
mov
fisttps
xor
cli
dec
cmp
lahf
leave
test
gs
cwtl
out
lret
mov
dec
ljmp
mov
sbb
cmc
fstpl
push
dec
mov
mov
out
sbb
lcall
js
sbb
inc
and
divb
xchg
out
lock
adc
int
hlt
decb
dec
fldl
xor
cltd
jmp
xchg
mov
mov
push
jnp
insb
testl
pop
fisttpll
fldt
xchg
dec
sub
lods
push
xchg
mov
or
imul
pop
sti
dec
jae
popa
in
pusha
dec
add
mov
je
ss
pop
sub
js
mov
daa
dec
push
push
js
in
aam
xlat
sahf
adc
pushf
cmpsb
jmp
push
push
test
mov
sahf
pop
imul
aad
mov
test
jb
jns
push
adc
mov
mov
jecxz
push
imul
dec
xchg
or
xchg
out
in
out
adc
pop
pop
jne
inc
pop
jg
push
pop
fdivl
arpl
fwait
mov
fldlg2
call
mov
arpl
std
popa
mov
pop
inc
sbb
mov
popa
jg
ja
jp
rcrb
push
push
add
inc
dec
adc
dec
popf
inc
mov
std
insb
sub
xchg
inc
sbb
lahf
sbb
sbb
and
and
jp
scas
and
mov
push
inc
test
adc
push
sbb
xchg
nop
sbb
sbb
jb
mov
jns
cmp
inc
mov
fs
fiaddl
shlb
nopl
clc
mov
rcr
cmp
xor
jmp
fmull
mov
arpl
notb
dec
adc
lret
or
shll
lods
mov
pop
clc
mov
dec
iret
repnz
cmp
push
ret
test
ja
or
dec
int
je
add
loop
fiaddl
xor
outsb
inc
ljmp
es
sbb
cmp
bound
daa
add
stos
ljmpw
xchg
jle
adc
or
roll
mov
fldcw
push
adcb
fbld
jno
int
pop
subb
jmp
pop
mov
jo
insl
loop
push
adc
and
je
imul
lcall
pop
add
fstpt
jp
sbb
test
adc
push
inc
js
jo
and
rorl
shrl
shlb
mov
pop
lods
sbb
jno
aam
mov
mov
cltd
sbb
jl
arpl
and
or
mov
inc
push
push
pop
and
xchg
ficompl
out
call
jge
inc
or
ds
mov
and
repz
mov
add
test
jmp
push
in
jl
mov
jno
add
pushf
adc
in
xor
aad
lcall
dec
imul
and
jecxz
xchg
pop
ljmp
pushf
sbb
mov
in
out
xor
pop
cmc
jg
adc
inc
cmp
cltd
addl
lahf
cwtl
cld
or
inc
cmpsb
cmpsb
dec
add
xchg
pop
out
loop
mov
ret
sub
gs
cmp
sti
pop
pop
jmp
jbe
out
stc
jne
pop
cmp
push
and
ja
loop
push
aas
push
jecxz
call
je
pop
push
mov
sbb
mov
pop
aaa
pusha
sub
into
fistpl
stc
das
dec
and
sub
push
pop
sbb
icebp
jmp
clc
in
flds
sbb
pop
inc
sbb
mov
push
fwait
sti
shrl
jge
push
ret
cwtl
pusha
hlt
jnp
sar
data16
xor
push
push
pushw
xor
cmpsl
xchg
cmp
sbb
mov
ret
inc
mov
popa
movsb
sar
inc
je
xlat
add
ljmp
out
sbb
test
jg
fdivrl
fsubrs
testb
mov
lods
pushf
enter
and
sti
or
loope
sbb
jmp
push
aad
mov
sub
jg
or
aaa
mov
scas
mov
push
andb
test
fcomps
jne
inc
in
jmp
push
xchg
adc
div
add
push
jl
fsubrs
dec
mov
adc
sbbl
push
pop
jbe
lods
jg
inc
add
outsb
or
push
or
scas
and
xchg
jne
test
sbb
imul
or
aad
sahf
in
ja
dec
adc
lret
dec
dec
xor
nop
in
repnz
or
mov
jb
or
jns
fldenv
and
push
xchg
insl
pushf
adc
push
sub
cli
fnop
and
nop
mulb
mov
aas
jnp
pop
ds
cltd
jp
orl
fimull
mov
cli
inc
xchg
cs
jns
cmp
sbb
adc
push
or
sbb
stos
adc
cltd
aad
sbb
push
mov
xor
inc
xor
jae
imul
clc
icebp
mov
push
popf
ss
push
jb
repnz
pusha
out
pop
jns
jge
out
jne
sub
dec
pop
loopne
sahf
int3
push
rcrb
packuswb
inc
fstpt
cmp
inc
test
data16
inc
out
fstl
push
add
in
mov
or
mov
mov
mov
out
jno
dec
scas
sbb
aad
scas
jge
filds
inc
xor
aad
cmp
inc
es
cmc
mov
dec
mov
ret
mov
bound
in
aaa
shl
xchg
iret
xchg
cltd
push
jmp
push
aam
mov
outsl
jno
add
dec
cmpsb
adcb
outsl
mov
sub
lahf
xchg
xor
std
unpckhps
aaa
and
sbb
push
adc
andl
push
shll
out
fdivp
repnz
push
inc
in
pop
add
dec
mov
sarl
pop
leave
jge
or
pop
adc
fbld
cwtl
cmp
jne
cmp
mov
mov
dec
repnz
arpl
mov
notb
adc
sbb
pop
pop
push
adc
test
cs
ds
adc
shlb
xchg
cmpsb
cmpsl
or
add
fistps
adc
xor
mov
lods
sbb
push
fcompp
cmp
pop
lods
add
loopne
lahf
xlat
jecxz
xchg
and
sbb
push
jmp
test
les
mov
out
aam
cmp
sub
bound
push
dec
repz
xor
lret
push
push
addr16
jno
mov
pop
jle
imul
xchg
loopne
inc
mov
cmp
lock
jo
pop
inc
fisttpl
sub
mov
in
jbe
and
loop
mov
dec
ja
lds
icebp
cld
pop
xchg
xor
cmp
pusha
or
jl
jns
jns
pop
out
xchg
pop
push
sbb
jge
sub
jae
int
ja
rcl
add
clc
dec
pop
sbb
push
shll
xor
and
dec
scas
cli
add
xchg
mov
hlt
sti
pop
mov
arpl
sti
scas
mov
sbb
inc
clc
or
mov
jle
fcompl
enter
and
jb
mov
test
pop
ljmp
cmp
lds
lcall
adc
fldenv
ret
stos
mov
lock
ds
and
xchg
ja
call
add
adc
test
pop
ljmp
stos
sub
mov
gs
imul
shll
fucomip
ud2
xchg
int3
push
jns
in
nop
pop
cld
fnsave
push
mov
push
lcall
pop
rcll
add
ret
adc
xchg
mov
dec
loop
sub
fwait
xchg
cmpsb
push
adcl
pushf
jle
cltd
lahf
xchg
xchg
clc
arpl
cs
popf
jns
lret
test
jmp
je
xorl
out
inc
and
lret
dec
fwait
pop
sbb
lock
pop
cmc
xchg
xor
incl
stc
push
lret
bound
sti
inc
inc
sbb
call
inc
aam
mov
out
push
int3
adc
jge
inc
sbb
mov
jle
icebp
jle
stos
and
jp
jb
leave
test
stc
pop
jbe
sub
lret
sub
cmp
xor
sbb
inc
fsubrs
adcb
adc
sti
pusha
add
mov
test
int3
jnp
mov
mov
push
and
or
jbe
loopne
mov
mov
mov
dec
mov
or
xor
push
sti
mov
lea
mov
adc
sbb
ljmp
push
ret
loop
adc
das
testb
negb
jle
popa
inc
leave
pop
in
bound
inc
shr
jp
jnp
mov
aam
out
fisttpl
cmpsb
sub
adc
scas
mov
test
push
stos
stos
in
arpl
and
pop
mov
mov
and
sbb
test
xor
mov
pop
into
xor
das
les
out
pop
xor
dec
fwait
repnz
fistps
inc
mov
or
fdivrp
inc
xchg
push
xchg
dec
xchg
nop
dec
sbb
and
fdivr
push
mov
jno
or
mov
loope
jmp
mov
fsubrs
xchg
xor
je
mov
xor
adc
lret
shrl
and
mov
adc
push
push
push
sub
dec
in
mov
adc
in
mov
ljmp
cmp
ds
lcall
clc
mov
lret
lret
cmp
test
fnsave
push
push
adc
dec
push
xchg
out
pop
mov
dec
sti
mov
test
mov
jne
add
cli
mov
call
movsb
or
add
in
jne
jl
jno
sbb
lock
fwait
jge
mov
dec
outsl
sub
cmpl
stc
mov
in
jg
mov
bound
mov
jne
out
fidivrs
mov
add
pushf
stos
dec
fadds
rcrl
xor
inc
jnp
and
and
insb
enter
mov
sbb
loope
dec
nop
lret
add
cmp
dec
ret
fldcw
arpl
arpl
cmpsb
mov
xchg
arpl
push
outsl
stos
sti
cmp
icebp
jne
adc
sahf
mov
inc
test
fisttps
cmc
xor
in
psrld
dec
jo
adc
inc
insl
mov
adc
inc
arpl
loop
out
and
test
cmp
adc
pop
sub
xor
ja
dec
imull
add
aas
xchg
xor
movsl
repnz
jne
pop
mov
xchg
ficoms
push
popf
cmp
mov
cltd
xor
and
sub
js
inc
dec
or
xor
out
cmp
test
movsl
jecxz
idivl
cld
cmp
mov
mov
scas
push
xor
pop
in
test
je
mov
bound
push
pop
std
add
mov
xor
loopne
scas
icebp
mov
fwait
cmp
rcr
xchg
xchg
das
daa
pop
push
mov
sbb
sbb
adc
pushf
push
fmul
in
fsubl
rcll
jo
sub
jae
std
stos
pushf
sub
mov
cwtl
cmp
jge
lret
mov
gs
loope
insb
jo
lods
mov
sbbb
jl
mov
cmp
dec
sbb
mov
shl
stc
mov
add
or
sbbb
sbb
adc
aas
into
out
popf
jg
pusha
into
jg
ds
rcll
in
pop
mov
jne
and
pop
jl
xchg
fnsave
std
sbb
ret
inc
popa
clc
fisubrl
lret
arpl
jp
test
sbb
cltd
lahf
jb
mov
scas
or
ja
or
mov
or
push
data16
xlat
or
leave
sbb
jo
sub
or
adc
add
dec
and
mov
cmpsl
or
dec
push
int
cltd
and
into
add
rorl
jbe
pop
adc
test
sub
mov
push
fdivrs
in
pop
pop
test
pop
ret
add
lock
adc
push
pop
mov
sub
test
xor
push
lcall
arpl
stos
sbb
inc
popf
les
shll
pop
fiadds
pop
sub
and
or
jno
mov
push
push
lea
push
cmp
rorl
mov
mov
xor
xor
inc
mov
fs
arpl
or
xlat
cmp
inc
xchg
or
adc
movsl
sbb
jle
movsl
sub
and
inc
clc
ds
xchg
mov
js
addl
add
mov
adc
mov
mov
js
hlt
mov
pop
arpl
aad
jp
and
xor
cs
fmuls
imul
inc
pop
lods
dec
jl
cs
xor
adc
or
add
std
pop
add
mov
cmp
test
sahf
fcomp
pop
pusha
mov
pop
inc
lret
icebp
adc
loope
div
mov
xor
rcrb
stos
mov
mov
fs
int3
into
xlat
pushf
push
and
mov
enter
aam
mov
ja
jae
mov
outsl
xor
hlt
rcr
in
repnz
mov
mov
test
push
jo,pt
jno
ret
mov
sbb
test
test
clc
push
xchg
mov
or
dec
push
xchg
and
jb
rorl
jge
imul
std
pop
loop
pop
nop
add
movsl
int
imul
mov
outsl
aam
xor
sahf
pushf
int3
push
add
mov
or
dec
cmp
out
push
iret
xchg
pop
and
dec
fstl
pop
mov
pop
inc
mov
push
sub
jo
in
fwait
cmp
jg
inc
pushf
nop
in
icebp
xor
inc
sub
filds
inc
mov
in
xchg
push
test
mov
xor
and
mov
mov
insb
and
shll
xor
push
jmp
aas
xchg
je
sub
cmp
mov
jp
movsl
push
sbb
and
std
xchg
stos
add
out
sbb
xlat
std
sbb
cltd
fadd
sahf
shrb
mov
es
and
lods
xor
call
movsb
repnz
jno
xorb
and
pop
lods
jmp
sbb
add
inc
jl
mov
xchg
mov
fldt
inc
add
inc
nop
insb
std
push
cltd
ret
or
mov
jp
add
push
adc
fsubrl
into
xchg
fbstp
cli
sarl
sarl
arpl
fistpl
jbe
pop
pushf
in
cli
xor
lock
and
and
mov
or
popa
popf
xor
test
sub
push
scas
popf
iret
push
daa
mov
jnp
pop
mov
cli
jne
mov
mov
inc
pop
dec
shrb
stos
xchg
mov
dec
inc
mov
xchg
out
mov
add
sbb
ret
xor
outsb
mov
pop
loop
mov
sub
mov
and
in
fsubl
rcll
nop
pushf
xchg
jmp
stos
sbb
incb
cltd
adc
roll
fiaddl
imul
add
ret
and
sub
pop
fmull
les
jo
out
call
icebp
jb
stc
inc
xor
mov
add
cmpsb
shrl
fcmovb
sub
cmpsb
out
popa
and
mov
movsl
shrl
shlb
xor
xchg
decb
inc
pop
scas
jne
in
jg
outsl
jle
ror
cmp
aaa
pop
mov
std
fs
stc
cmc
test
cli
inc
icebp
arpl
jecxz
scas
mov
xchg
mov
add
in
pushf
lock
push
scas
out
pop
or
mov
icebp
sbb
cmp
adc
es
pop
ljmp
add
add
popa
movsb
dec
gs
mov
xor
fistps
xor
ret
pushf
adc
popf
lds
out
pop
push
mov
sbb
idiv
in
xor
enter
ljmp
mov
jg
shrl
sbb
xor
into
lds
pop
jb
adc
cmp
or
shl
mov
out
dec
mov
lcall
sub
mov
add
mov
xchg
mov
sub
js
xor
dec
xchg
inc
cltd
sarl
ds
int3
scas
push
fidivrl
sbb
fldt
call
test
pop
mov
and
inc
add
inc
sbb
mov
fucom
sbb
sti
sarb
mov
push
add
test
jae
je
xchg
mov
lods
imul
or
xchg
mov
ret
inc
pop
jo,pn
push
aam
add
pop
adc
cmpsb
add
jmp
jmp
xchg
mov
dec
sahf
jmp
mov
mov
stos
shll
fdiv
lock
jmp
push
in
hlt
sub
test
in
xor
inc
mov
imulb
test
xor
push
les
rcrl
xchg
dec
aam
add
push
je
push
jbe
pmuludq
clc
xlat
and
sbb
and
mov
jge
movsl
js
inc
or
jmp
fisubrs
xor
movb
cmp
xchg
push
xor
and
dec
adc
pop
rcl
test
inc
push
cmp
push
outsl
xor
repnz
inc
pop
sub
popf
fnsetpm(287
imul
mov
jmp
xor
sbb
sbb
lcall
in
adc
jge
mov
pop
push
xor
pop
test
and
adc
aam
xor
jo
les
adc
push
leave
inc
or
gs
test
mov
jecxz
imul
mov
mov
and
mov
mov
fcomi
push
xchg
xor
jnp
add
hlt
pop
push
xor
pop
mov
out
inc
jle
jnp
aaa
cmp
stos
push
jp
mov
cmpsb
dec
test
imul
daa
pop
jmp
pop
xor
mov
mov
pop
pop
fs
notl
sub
lods
push
adc
adc
aam
dec
xchg
je
mov
loop
cmp
fildll
imul
mov
aad
adc
call
shrb
push
inc
sbb
sarb
mov
sarl
and
mov
pop
jns
xchg
xchg
pop
imul
cmp
pushf
int3
adc
mov
or
cltd
mov
xchg
add
sub
imul
cmc
fsubr
fsubrl
add
jmp
loopew
sbb
jg
pushf
cmp
dec
mov
jle
or
cmp
mov
hlt
xor
mov
and
pop
jb
pushf
add
xchg
outsl
pop
test
pop
mov
mov
add
mov
mov
inc
out
addr16
xor
lods
cmpsl
jl
jg
jns
aam
cmpsb
dec
sbb
imulb
mov
and
lret
pop
or
add
lret
cmp
pop
adc
xchg
and
jge
pop
test
addr16
sbb
xchg
lret
mov
mov
mov
ret
push
mov
lods
insl
into
fistpll
fdivl
test
cmp
les
cwtl
inc
fst
or
cmpsl
imulb
aad
ficoml
or
in
add
scas
add
push
pop
or
xchg
jae,pn
mov
xchg
stos
shrw
in
jno
pop
lea
das
and
or
add
sti
int
mov
int3
call
leave
mov
xlat
adc
rorb
pop
fs
sti
lcall
adc
adc
rcr
fldenv
test
sub
jns
stc
in
mov
popa
test
and
iret
push
les
movsb
and
mov
std
addr16
scas
mov
xchg
xor
test
shll
mov
rcrl
mov
xlat
adcl
shrb
jg
daa
push
push
roll
adc
inc
imul
lcall
out
dec
jle
push
sahf
fstps
mov
into
mov
jecxz
lea
pusha
jbe
inc
xchg
xchg
pop
negl
push
dec
mov
loope
or
enter
and
aaa
sbb
mov
lret
adc
push
shl
mov
cwtl
fcmove
fidivrl
addr16
mov
dec
sub
stos
insl
data16
jecxz
xor
xor
addr16
dec
notb
dec
std
xor
sbb
cld
popf
ret
or
fstps
fcom
addl
adc
inc
daa
into
out
fidivrl
shl
fldenv
dec
fnstcw
or
addl
add
dec
iret
cmp
jno
mov
mov
lcall
outsl
mov
inc
out
movsl
push
out
mov
push
pop
jmp
jne
out
xchg
mov
dec
pop
loope
ljmp
int3
sub
pop
lret
jae
lahf
jg
in
mov
fstp
xchg
jnp
imul
in
mov
loopne
and
cmp
je
adc
cmp
lock
push
cwtl
cld
lahf
scas
repnz
out
jbe
cmp
sti
push
sbb
rcrl
mov
pop
fidivs
nop
and
aaa
and
sarb
test
and
or
out
ret
sub
mov
sbb
cltd
cmp
dec
adc
push
xor
dec
lret
in
jbe
sbb
pop
push
mov
sti
adc
push
jge
xchg
sub
jle
clc
sbb
dec
sbb
fisubrl
insb
mov
jp
cmpl
adc
inc
push
jae
out
leave
xchg
mov
sub
mov
pop
popf
jne
or
movsb
clc
jle
pop
jno
or
sub
test
imul
bound
mov
push
mov
sub
adc
rol
outsl
pop
cmpsb
in
push
sbb
fcompl
dec
jp
pop
lcall
xor
jmp
mov
lds
pop
aaa
cli
jl
lcall
jle
push
pop
xorb
jl
dec
mov
and
mov
fisttpll
adc
mov
in
or
jne
sub
xchg
adc
imul
and
xor
fwait
mov
push
sbb
add
sbb
push
mov
add
jbe
imul
enter
ret
jge
inc
jo
insl
jmp
inc
xor
adcl
dec
sub
lea
jmp
pusha
mov
inc
mov
push
cmp
xor
fldt
fdivr
xchg
pop
xor
push
flds
pop
ja
clc
lcall
or
add
jae
xchg
jmp
int3
xchg
dec
mov
sbb
pop
xchg
xlat
push
lahf
cmpsl
cmpsl
dec
kmovd
sbb
adc
rolb
mov
mov
daa
shrl
lock
jl
or
leave
call
addl
outsl
or
jg
push
pop
pop
cmpsb
mov
and
add
dec
sbb
pop
or
xor
rorl
das
cmpsb
pop
lcall
int3
icebp
repz
sub
mov
shlb
in
cs
pop
and
sbb
out
xchg
shrb
pop
je
dec
sbb
pop
inc
cmp
pop
emms
or
inc
enter
das
cmp
pushf
lahf
push
pop
mov
jne
sbb
dec
and
cmp
push
sub
jecxz
push
xlat
mov
mov
pop
inc
dec
pop
pushl
push
pop
add
pop
scas
jle
cmp
insb
or
pusha
negb
lea
sub
and
jae
jl
xchg
push
jno
jg
sbb
loop
dec
xchg
mov
lret
inc
sarb
and
cmp
in
test
loopne
dec
stos
adc
lcall
dec
jns
rcrl
lret
sbb
iret
lods
je
mov
pop
sbb
push
into
popf
lds
std
fs
add
fstps
gs
xchg
out
sbb
lods
out
inc
in
adc
sub
sub
dec
shrl
pusha
sub
cwtl
aaa
sub
aaa
sbb
sbb
and
les
or
jmp
icebp
in
mov
mov
pusha
cwtl
clc
icebp
inc
or
dec
loop
lds
rcr
inc
ret
jmp
loop
inc
mov
shlb
inc
popl
scas
push
cmp
data16
add
add
lods
sub
fldt
mov
stos
and
mov
push
mov
xor
shll
shll
shrl
aaa
cld
out
xchg
out
ror
pop
dec
lcall
cltd
outsl
sbbl
pop
fmuls
adc
add
jno
lret
push
inc
jno
call
xor
cmp
sbb
pop
in
mov
jae
enter
push
mov
pop
cmp
jp
faddl
jmp
mov
inc
xor
adc
idivl
mov
xlat
xchg
push
fs
mov
outsl
mov
mov
and
or
nop
sti
cmp
cmp
or
fcoml
das
je
imul
pop
outsb
sub
imul
aaa
push
cmp
psllq
sub
in
adc
xor
xchg
push
cmp
sti
add
xlat
and
and
popa
adc
jb
aas
pop
fnsave
int
add
pop
fdivrl
jp
sbb
jp
scas
sbb
rcll
sub
sbb
pop
inc
cmpsb
call
inc
test
push
push
outsb
or
xchg
push
xchg
jle
fwait
xchg
mov
stos
fcoml
in
pop
adc
das
in
and
pop
pop
les
gs
shrl
xor
cltd
insl
lcall
pop
push
fs
fidivs
fisubrs
inc
xorl
js
inc
mov
out
and
push
add
fsts
push
into
movl
fcoms
aad
test
push
xor
cmp
ljmp
movsl
sub
dec
xchg
clc
fcmovbe
mov
jo
in
mov
lahf
int3
addr16
lds
cld
js
ds
mov
rolb
push
push
push
cmp
jle
add
ljmp
fwait
lock
push
mov
in
cmp
iret
ucomiss
jge
push
xchg
iret
mov
ror
xchg
lret
fs
push
aas
fstl
dec
in
adcb
js
out
mov
loop
sbb
mov
nop
repnz
in
into
xor
add
mov
cmp
lods
js
les
jg
fisttpll
jl
and
mov
sbb
loop
cmpsb
repz
pushf
xor
test
data16
icebp
xchg
in
jae
repnz
imul
cmc
and
sbb
mov
adc
pop
and
push
and
dec
push
int3
jae
cmp
movsb
cmp
pop
jmp
testb
and
popf
call
dec
fcmovbe
xchg
pop
out
mov
mov
mov
les
mov
xlat
inc
lcall
fnstsw
shrl
icebp
std
adc
sub
testl
dec
or
cmpsl
jns
inc
aas
fisttpll
sub
and
lods
jp
jp
xor
arpl
inc
inc
adc
jecxz
fdivp
mov
and
aad
xchg
cmpsl
ss
lret
stos
out
popa
insb
fimuls
xor
int
push
jbe
std
aad
mov
call
shl
shrb
lret
out
mov
push
rcl
outsl
sarb
push
sub
push
dec
inc
shll
in
dec
inc
sub
adc
jae
ss
arpl
add
lret
addb
xchg
stos
push
outsb
jno
pop
lods
into
push
cmp
pop
ret
aam
pop
jnp
mov
sti
pop
add
cwtl
xchg
push
mov
sub
cmp
int
or
pop
mov
fs
arpl
mov
ja
out
inc
das
in
push
fwait
mov
test
lods
ljmp
add
cmp
add
or
pop
orl
fisubl
mov
test
lods
pop
dec
mov
outsb
sub
mov
xor
pop
jo
decb
testl
inc
push
dec
arpl
clc
push
dec
in
aaa
dec
mov
pushf
dec
aam
rol
xchg
cmpsl
push
push
mov
roll
int
bound
xor
mov
cmpsb
cmc
insb
in
mov
scas
stos
repnz
hlt
movsb
mov
pop
int3
mov
pop
jl
sbb
fimuls
mov
xor
sub
aam
xchg
mov
ret
into
fsubrl
add
xchg
test
inc
inc
sbb
out
or
cmp
xchg
pushf
rclb
jmp
xor
ss
xlat
pop
test
adc
push
mov
xchg
sbb
out
popf
adc
lahf
lret
enter
in
lods
repnz
out
fmuls
xor
mov
les
jecxz
xor
jmp
cmp
mov
je
sbb
push
mov
jle
xchg
sbb
aaa
push
stos
pushf
lds
pop
adc
xorb
addr16
js
and
cld
jne
inc
pop
mov
jle
lahf
mov
ficomps
js
je
ss
xor
test
fsubl
daa
jns
jns
pushl
sbb
imulb
arpl
pop
dec
adc
xchg
jne
xor
leave
push
xor
dec
sub
jae
xor
mov
leave
jecxz
imul
cli
inc
add
data16
movsb
xor
addb
adcl
movsb
add
mov
mov
mov
movsb
lahf
push
out
lea
dec
mov
push
in
test
leave
or
jo
mov
xchg
and
ja
ret
jl
inc
mov
ret
lock
mov
jecxz
ds
icebp
dec
insb
decl
imul
adc
mov
enter
xchg
and
movsl
faddl
cld
aaa
popa
ret
dec
sub
and
orl
bound
cmpsb
int
mov
inc
pop
mov
and
xor
stos
pop
push
repz
insl
adc
or
mov
add
pop
add
or
gs
jae
dec
leave
xchg
inc
addl
ja
loopne
lcall
xor
jb
add
add
enter
and
mov
mov
pop
aad
les
roll
fwait
sub
jmp
mov
arpl
pop
dec
xorl
mov
sub
sub
int3
and
and
mov
aad
inc
pop
ret
push
xor
or
jle
outsb
mov
sbb
xchg
scas
push
mov
pop
mov
mov
arpl
pusha
lcall
jne
or
jns
mov
cltd
out
mov
jno
jb
xchg
mov
cs
xor
push
ror
push
ss
xor
negl
std
jge
push
mov
rclb
imul
mov
pusha
ret
lret
and
mov
sbb
ret
mov
repz
sbb
cmpsb
fstps
inc
movsl
ret
xchg
sbb
dec
into
fidivl
sub
pop
push
fcoms
cld
sub
or
sbb
xor
add
adc
jo
and
and
out
test
testb
and
cmpsl
and
cmp
mov
into
sarl
imul
jns
lsl
inc
das
adc
shlb
mov
idiv
push
int
lds
fwait
add
test
addl
jmp
inc
xor
push
mov
push
ja
push
mov
loope
adc
mov
or
mov
push
add
test
mov
add
iret
push
cmp
xor
adc
adc
mov
xor
insl
fs
push
rcll
call
popa
or
iret
ret
fisttps
sub
pop
or
sbb
cli
ffree
repz
mov
xchg
sub
imul
rolb
and
inc
or
push
pop
movsb
pusha
mov
push
or
ja
test
push
daa
add
adc
popa
add
and
clc
push
xchg
clc
dec
cmpsl
lcall
in
rcrb
mov
ret
int
mov
sbb
and
icebp
push
shrl
aas
and
cmp
daa
jge
icebp
daa
nop
dec
dec
ficompl
jecxz
jg
sahf
xchg
pushf
insb
mov
sbb
or
pop
bound
gs
mov
fwait
sti
jecxz
sub
push
enter
cmp
addr16
and
mov
in
mov
adc
fstp
fnclex
testb
add
fisubl
pop
orb
addr16
unpckhps
xor
in
inc
push
sbb
repnz
dec
out
enter
jg
repnz
mov
sub
out
sbb
sbb
icebp
int3
pop
mov
es
lret
fadd
sub
bound
mov
sub
rcl
or
repz
enter
jmp
mov
repz
mov
fdivr
lea
or
pop
adc
or
push
loope
mov
push
mov
mov
mov
mov
push
stc
xor
loope
fadds
inc
push
cmpsl
and
testb
push
cmp
in
mulb
push
shlb
daa
inc
scas
xor
add
pop
cmp
and
jp
pop
sbb
ret
add
insb
push
cmp
imul
arpl
push
mov
das
mov
rolb
jg
out
sub
daa
cmc
lods
loopne
pop
mov
jg
mov
pop
fcmovbe
cwtl
std
pop
mov
sbb
mov
imul
stos
push
dec
jne
jg
shrb
fmull
cmpsl
sti
testl
pop
mov
mov
cmp
adc
int3
aad
sti
mov
fisttpl
and
cli
dec
inc
add
rol
push
xchg
sub
dec
ljmp
ret
aam
test
mov
rclb
and
cmp
lret
repz
out
bound
sub
faddl
lea
sub
push
lock
sub
int3
test
rorl
loop
aad
nop
jno
pop
xor
mov
push
mov
push
scas
add
stos
mov
rolb
cmp
outsb
jge
int3
into
imul
les
pushf
push
jbe
mov
nop
mov
sub
imul
pop
jp
dec
adc
ds
inc
fldcw
xor
sub
cwtl
cli
jmp
pop
sub
or
rolb
flds
and
lcall
loop
lock
cmpsl
in
xorb
sahf
xor
stos
push
data16
ljmp
icebp
inc
and
pop
les
dec
call
stos
fbstp
fs
cltd
out
scas
jg
addr16
dec
jg
cmp
test
arpl
sbb
mov
jnp
push
mov
es
popa
pop
scas
cli
nop
arpl
jmp
jg
sbb
lahf
pop
mov
dec
cs
adcb
adc
mov
icebp
cmc
xor
js
fdivs
sbb
fiaddl
fistps
jle
test
loop
out
clc
push
aaa
cld
mov
ja
scas
pop
out
scas
shlb
mov
inc
adc
jb
fdivrl
enter
mov
mov
cmp
mov
push
and
enter
mov
stos
icebp
in
add
in
push
dec
cmp
inc
xchg
push
dec
in
leave
mov
mov
pop
ds
rcrl
popa
mov
sbb
aas
leave
std
xor
mov
js
xchg
jb
lea
sti
inc
faddp
xchg
sbb
mov
xchg
sub
enter
dec
inc
scas
lahf
cmpsl
cmp
and
rcrl
fimuls
out
add
jnp
and
in
int
jb
sbb
push
adc
stos
mov
es
stos
mov
and
mov
in
push
fidivrs
out
clc
clc
shll
or
lods
pop
aam
scas
gs
in
inc
or
lret
xlat
repz
mov
inc
in
popa
cmpsb
fstps
add
imul
or
add
jb
cmp
xor
sub
mov
and
test
lods
popa
push
jnp
inc
testl
lret
out
outsb
mov
inc
stos
and
push
fidivrs
repz
and
int3
fisubrl
mov
sub
pop
jmp
sti
inc
jp
popf
cmp
mov
dec
dec
ret
xor
stos
mov
test
and
jo
push
fcmovne
push
pop
cmp
push
xor
mov
cmp
fbld
xchg
adc
inc
mov
icebp
dec
mov
shrl
mov
jecxz
aas
adc
dec
aad
mov
jnp
mov
dec
mov
jae
andl
js
mov
aaa
mov
dec
pop
test
stc
sahf
inc
jo
popf
std
xchg
mov
pop
inc
add
inc
or
fidivrl
or
bound
jbe
pop
mov
pop
lret
adc
jp
je
add
sbbl
push
mov
les
push
imulb
cmp
pushl
xchg
xchg
nop
xor
sbb
int3
jg
fdivl
push
jmp
jecxz
jle
mov
clc
dec
mov
shrb
inc
popa
cmp
ljmp
mov
es
imul
popf
mov
divl
lahf
xor
cmp
mov
pop
pop
ljmp
imul
dec
loope
leave
in
mov
push
dec
ret
nop
mov
jecxz
ds
std
outsl
sbb
mov
push
cli
shll
xlat
mov
ret
mov
adc
cmpl
jg
mov
rcrl
ret
xor
inc
adc
and
jmp
pop
sub
mov
xchg
ss
xor
push
inc
pop
mov
fcmovne
push
jle
sbb
xor
mov
xlat
cld
cmp
and
or
pop
sbb
les
int
pop
or
icebp
push
push
and
xor
mov
stos
movsl
or
in
mov
push
pushf
fimull
ficoms
cli
cmc
lret
sbb
daa
loop
test
movsb
jge
xor
xor
scas
lret
lret
enter
sub
inc
adc
xor
xchg
mov
insl
jp
xchg
js
and
fwait
mov
dec
inc
loopne
or
adcl
out
inc
xchg
sbb
daa
fstp
adc
dec
cmc
daa
push
adc
sbb
or
pop
mov
mov
sbb
js
push
push
cmp
jne
jno
and
ret
and
insl
out
jmp
dec
idivb
dec
add
pop
fcmove
mov
mov
ret
clc
popa
pushf
out
roll
inc
cs
gs
xchg
inc
pop
out
cwtl
cwtl
outsb
imul
pop
out
push
sub
cld
or
mov
cmpl
push
adc
push
rcll
jp
int3
push
adc
stos
push
ss
xchg
fcomp
aas
push
les
sub
bound
xor
adc
sbb
or
out
out
xor
pop
sbb
or
stos
popf
cli
mov
mov
testl
add
scas
mov
loopne
add
xor
mov
mov
jp
xchg
sti
out
add
push
es
lretw
add
dec
ljmp
loop
or
push
lcall
fwait
bound
cmp
lret
and
leave
fists
xchg
sbb
adc
pop
push
xor
sbb
cmp
movsl
stos
cmp
xchg
sub
dec
xchg
sub
mov
scas
add
inc
add
dec
dec
leave
sbb
push
inc
data16
shrl
in
dec
ret
cmc
mov
jne
dec
loop
test
jae
mov
fcomp
ret
nop
cmc
mov
loop
push
pusha
bound
adc
in
or
dec
mov
jmp
add
lret
pop
cmc
cmp
stc
dec
push
or
xchg
xchg
mov
mov
jmp
test
in
add
ljmp
data16
lods
sbb
pop
test
jmp
fsubl
addl
loop
imull
jae
cmpsb
jb
xchg
mov
mov
inc
pop
pop
or
scas
cmpsl
mov
repnz
aam
push
sti
adc
rclb
mov
out
xchg
es
jns
sti
cmp
lea
ss
adc
dec
jp
mov
mov
loop
jmp
and
jecxz
cmpsl
push
clc
dec
lds
add
inc
enter
adc
movsl
mov
addr16
jns
or
movsl
or
pop
pop
xor
ja
jb
add
xchg
xchg
cmp
cmp
mov
mov
lods
mov
dec
mov
insl
jmp
xchg
xchg
js
pushf
lret
lea
inc
rolb
or
incl
jnp
jecxz
mov
xchg
ret
push
pop
cmpsb
lret
and
jl
dec
mov
xchg
adc
clc
sbb
sti
mov
int
jge
std
js
push
cli
mov
mov
cs
in
inc
imul
shll
sbb
push
sbb
ja
inc
shl
mov
adc
lds
mov
mov
pop
lods
cmp
in
xor
mov
outsl
in
pusha
jo
push
out
add
cld
ja
and
inc
les
dec
mov
ss
sbb
stos
scas
pop
sbb
inc
push
mov
mov
push
movsl
lcall
bound
add
adc
jg
xlat
dec
sti
mov
inc
loope
add
cmp
xchg
xchg
cmpsl
xchg
lods
call
xorb
jbe
fmuls
add
out
loop
xchg
push
ret
pop
adc
jb
jmp
sbb
add
cwtl
inc
les
ret
outsb
lahf
or
test
add
ret
sbb
sti
nop
int3
xchg
add
mov
dec
insb
faddl
nop
jg
out
mov
outsl
push
adc
jecxz
jnp
mov
dec
shlb
push
lods
pop
into
inc
and
jns
mov
cwtl
xor
xor
mov
adcb
pmaddwd
mov
icebp
daa
fldcw
adc
ret
cs
test
mov
pop
sub
loope
aad
xchg
mov
mov
cmpsl
fmull
adc
or
dec
lcall
mov
rorb
ja
in
xchg
sub
sahf
notb
mov
mov
sahf
dec
call
xchg
mov
mov
jg
push
rol
lods
dec
fcmove
sub
push
mov
fsubrs
lods
sti
pusha
cli
jecxz
add
add
xchg
xor
shlb
leave
insb
mov
ljmp
jno
and
add
ficomps
pusha
lds
imul
es
fcmovne
cmp
sub
sbbb
inc
aam
loop
imul
xchg
aas
inc
repz
pop
jnp
sbb
mov
daa
mov
inc
dec
sub
and
int3
add
les
and
into
enter
cmpsb
xlat
pop
out
lds
in
jp
sti
mov
aaa
mov
pushf
lods
call
call
jmp
pop
shrl
jge
push
ss
pop
aam
mov
pop
cmp
mov
sbb
push
movsb
mov
jge
loopne
xor
cmp
lds
sub
bound
or
test
jns
mov
sbb
adc
sub
jle
cmp
pop
inc
inc
mov
rorb
jmp
mov
dec
sub
insb
scas
divb
sub
js
or
into
add
adc
lahf
push
cwtl
stos
push
aaa
inc
fmulp
sub
loope
call
sbb
jns
pop
mov
das
add
lods
das
pop
insb
mov
sbb
mov
sub
or
stos
shl
cmp
sub
mov
aas
das
dec
rcll
jae
xchg
inc
jbe
mov
imul
cld
aaa
cmp
xor
xchg
repz
in
pop
push
aam
sbb
aas
nop
movsl
fwait
jne
inc
or
jmp
xchg
and
fsts
xor
sbb
cmp
inc
sbb
mov
and
dec
mov
xchg
iret
sbb
out
xchg
add
rcrl
bound
sbbb
sbb
cli
add
push
add
out
pop
mov
testb
int3
movsl
xor
jmp
lock
rorl
outsb
adc
cmp
xor
lods
or
lods
xchg
mov
mov
or
or
push
arpl
cmc
jno
and
idivl
push
pop
mov
cmp
mov
lock
outsl
andb
xor
xor
iret
or
out
add
push
aas
in
repz
dec
fnstenv
sbb
mov
dec
push
shrb
outsl
xchg
mov
scas
ss
sub
rorb
std
adc
arpl
testl
cwtl
add
stos
push
stc
jg
xchg
xchg
pop
test
loope
jbe
call
bsr
mov
dec
faddl
ja
call
mov
and
push
sbb
adcl
mov
jno
inc
mov
iret
pop
mov
cmp
into
xor
lods
fwait
push
dec
xor
push
pop
lret
pop
outsb
xchg
daa
imul
cmp
mov
sub
addb
and
btr
cs
mov
ret
jns
jo
vpunpcklwd
cs
inc
pop
nop
xchg
inc
xchg
and
mov
lds
int
lock
arpl
cld
sub
fbstp
pop
iret
cmp
push
cmp
sub
pop
cli
push
pop
jle
daa
aad
mov
jl
arpl
xor
addl
shl
or
stos
pop
hlt
and
subl
out
xchg
out
ds
dec
pop
inc
pop
mov
xchg
cmpsb
mov
mov
test
or
fcoms
repz
xchg
mov
sbb
inc
cmpl
bound
pop
cld
sub
mov
jp
loopne
sahf
idivw
wbinvd
inc
add
jb
push
js
sub
pop
xor
jo
jnp
rorb
cmp
in
push
das
jmp
outsl
adc
stos
adc
sbb
pop
mov
xchg
pop
dec
jle
loop
cmp
or
out
push
imul
sbb
xchg
cmpsl
adc
dec
mov
std
and
call
aam
fstp
xor
enter
das
repz
sub
pop
imul
push
and
jg
pop
push
loopne
rorl
jnp
shll
ljmp
mov
out
xorl
xchg
mov
mov
jmp
xchg
loopne
out
insb
jecxz
outsl
fidivrl
lods
frstor
xor
sbb
pop
arpl
out
and
jns
in
mov
outsl
jno
and
in
gs
add
movsl
movsb
aas
xchg
xchg
mov
cmp
outsl
rclb
mov
lods
bnd
test
xor
in
ret
das
push
mov
in
cmp
repz
sbb
inc
sbb
lea
sub
loopne
aaa
inc
pushf
sbbl
fcoml
lcall
cli
push
mov
repnz
cmpsl
mov
or
das
inc
pop
push
mov
push
popa
xchg
fmuls
jbe
inc
sbb
xor
hlt
cld
cs
repnz
or
inc
or
test
mov
or
aam
jp
bound
adc
jo
push
sub
fs
scas
push
adc
xor
dec
shlb
xchg
mov
xor
xchg
lret
xlat
add
scas
pop
jl
leave
int
scas
mov
sbb
xor
or
repnz
lret
dec
jg
pop
jnp
pop
and
cltd
pusha
out
cltd
pushl
inc
jns
sub
mov
rol
jecxz
movsl
movsl
add
lret
sub
stos
cmp
sbb
pop
popf
outsl
cmp
orb
mov
or
stos
xchg
sbb
sub
shll
lock
hlt
and
lret
hlt
sbb
es
and
imul
mov
mul
mov
mov
in
daa
pop
fnstenv
xchg
insl
inc
jmp
jns
mov
xor
xchg
pop
fdivrp
xchg
xchg
xchg
mov
std
mov
cld
shll
jb
adc
sbb
pop
leave
sub
das
in
xacquire
jmp
shrl
or
or
xchg
adc
dec
mov
idivl
test
pushf
out
ffree
sbb
mov
push
push
daa
fimuls
test
sbb
xor
xchg
pusha
jp
mov
out
outsl
popa
mov
or
pop
push
fisttps
shlb
xchg
aam
shlb
repz
mov
aaa
cld
adc
jae
push
gs
or
xchg
hlt
or
push
and
mov
dec
or
mov
imul
inc
outsl
cmp
add
mov
adc
sub
insl
sbbb
adc
add
dec
in
pushf
pusha
cmp
dec
mov
push
cmpl
in
inc
add
addb
ret
je
mov
xchg
add
popf
push
push
cmpsl
icebp
cmp
mov
shr
lock
stc
adc
adc
push
in
pop
jns
jb
lcall
mov
push
cmp
int
aam
jns
mov
ss
sbb
jl
fbld
icebp
jne
lret
ja
push
ss
or
shll
jbe
ret
xchg
add
nop
subl
or
mov
sbb
imul
sarb
sti
push
adc
adc
je
icebp
les
xchg
fwait
pushf
xchg
mov
daa
lret
inc
call
add
push
xor
jmp
std
xor
sbb
int3
xchg
nop
cmp
push
and
lea
xchg
xchg
cmp
jb
imul
leave
dec
push
incb
push
ret
push
rcrb
cwtl
xchg
jge
nop
adc
push
dec
aas
inc
or
mov
pop
jl
popa
mov
sub
jle
cmc
mov
sbb
inc
cmpsb
cltd
repz
rcrb
ret
cmp
xor
jge
cmp
sbb
out
testl
popf
inc
mov
movsl
mov
daa
sbb
loopne
jl
push
xlat
push
dec
jmp
mov
aam
enter
mov
cli
arpl
rolb
ret
xor
xlat
and
jne
lods
dec
js
out
psllw
xor
push
mov
push
mov
mov
and
std
and
mov
cmc
and
daa
cli
xchg
addr16
adc
dec
dec
icebp
inc
mov
hlt
rclb
bound
arpl
push
mov
pop
pop
push
mov
sarl
mov
and
push
aad
inc
adc
out
cmp
mov
dec
fidivs
adc
jmp
fwait
ljmp
mov
jo
test
aaa
movsl
inc
lcall
inc
std
or
imul
sti
xor
icebp
jmp
push
xor
ltr
icebp
hlt
inc
push
inc
dec
xor
movsl
sbb
push
js
mov
lret
xlat
loopne
sub
jns
insl
jmp
mov
mov
cmp
push
xor
mov
cmp
lea
cli
popa
adc
xchg
daa
sbbb
divb
xor
inc
mov
das
ds
insb
loop
lock
mov
shrb
aas
jae
fsubs
outsb
call
add
push
jb
inc
clc
cmp
inc
les
rol
iret
sbb
cmp
sbb
int3
xor
jns
inc
pop
lret
mov
inc
push
push
add
insl
push
test
mov
movnti
pushf
pop
push
cmp
aas
jge
insl
cmpsl
dec
fdivrl
mov
sbb
adc
add
std
call
xor
sahf
adc
fnstenv
stos
or
int3
loop
test
nop
div
xor
pop
dec
nop
xor
pop
ljmp
xor
inc
ljmp
and
sbb
jl
dec
cmp
mov
or
out
sarb
fldcw
sub
icebp
loope
sub
adc
aam
hlt
sbb
mov
mov
movsb
leave
push
adc
ds
cmpsb
imul
adc
aad
les
aad
mov
mov
aam
test
enter
repnz
cli
jg
push
jp
dec
rolb
sbb
ja
ja
je
mov
out
out
out
out
decl
cmp
xchg
xor
sahf
repz
test
xchg
push
push
ja
pop
push
push
push
pop
inc
loopne
xor
repz
lcall
cmpxchg8b
cmp
inc
dec
push
dec
jg
out
scas
pop
push
dec
lea
loop
jmp
xor
cs
and
icebp
daa
jne
xchg
inc
inc
inc
jg
xchg
repz
aas
or
jmp
hlt
pop
adc
jg
push
xchg
add
add
test
data16
mov
sbbl
sub
push
jmp
sub
int3
xchg
mov
mov
xchg
mov
sub
rorb
ds
xchg
jge
mov
pmulhw
mov
fidivrl
push
lret
mov
sub
or
fistps
imul
jo
mov
out
xchg
push
mov
jp
mov
mov
or
movsl
add
jne
stos
je
into
aas
jmp
fsqrt
aaa
loop
xor
aam
out
repnz
fcomps
or
ss
repz
mov
adc
cmp
jl
mov
pop
mov
jnp
sub
aad
cwtl
sub
dec
les
adc
dec
mov
notl
inc
ljmp
mov
jno
popa
push
ret
movsb
pop
mov
leave
addr16
xor
rcrb
jmp
loope
loope
insb
data16
inc
sbb
xor
mov
repnz
leave
inc
xor
into
jb
cmp
jnp
sub
xchg
loope
lcall
cmp
lods
adc
xchg
mov
and
popa
mov
cld
push
aam
fldt
sbb
jp
fst
popf
sbb
cmp
das
sub
lods
in
ret
push
sub
xor
add
in
nop
insl
or
lret
in
fmulp
orl
push
lds
xchg
lret
in
sbb
nop
out
and
sbb
stos
in
sbb
fisubl
nop
push
and
adc
in
jbe
adc
jecxz
jno
xor
adc
popf
ret
shlb
sub
insb
out
add
pop
inc
int3
adc
adc
in
rcl
dec
popf
sarb
rorb
aaa
push
leave
cmpsl
sbb
mov
pop
push
inc
cmp
sbb
dec
fsts
mov
mov
dec
xchg
pop
scas
enter
cmpsb
xor
and
pushf
dec
mov
pop
popf
lods
addr16
bound
jecxz
es
test
cmp
pop
push
es
call
sub
negb
jns
adc
jecxz
sbb
lahf
mov
xor
xor
dec
daa
inc
jg
add
fistps
jecxz
enter
adc
out
xor
push
and
lds
movsl
cmp
adcb
enter
add
mov
xorl
lods
loopne
ret
out
ss
repnz
hlt
push
stos
popa
aaa
push
cmp
push
and
fs
cmc
mov
into
dec
adc
mov
fsubr
arpl
xchg
or
cmp
pop
mov
mov
negl
xchg
xchg
je
or
and
ds
dec
cltd
stos
out
adc
lea
jo
mov
adc
push
or
test
ret
sub
maskmovq
imull
test
and
test
and
fisubrl
sysenter
mov
in
aam
ss
jb
scas
mov
pusha
or
xor
into
and
pop
aaa
fnstenv
outsl
outsb
add
aam
push
sbb
in
gs
jle
xchg
iret
and
mov
or
fidivrs
or
outsb
pop
fbstp
scas
je
mov
cld
in
mov
jnp
loopne
stos
jp
in
pop
fnstcw
sbbb
arpl
add
dec
mov
mov
dec
imul
pop
arpl
fcmovbe
fstl
in
movsl
sub
fldt
jae
cmpsb
push
xchg
mov
mov
adc
xchg
xor
in
push
ficoml
push
mov
lock
pop
repnz
sahf
and
scas
movsl
mov
aas
inc
addr16
int
cmp
xor
xchg
add
add
sbb
insb
sbb
ljmp
gs
dec
xor
sub
pop
test
jmpw
into
and
jmp
call
mov
dec
cmp
rorb
ret
rcrb
pop
and
dec
sub
add
sbb
testl
and
cmp
adc
lret
outsb
pop
mov
cmp
or
int3
movsb
add
inc
jle
sub
stc
push
pop
mov
mov
loopne
or
movsl
jnp
imul
add
and
out
js
cmpsl
fsubrl
xor
sbb
pop
adc
or
imul
mov
jbe
mov
xor
mov
cmpsl
js
jge
dec
jecxz
or
clc
push
push
xorb
pop
iret
shlb
adc
ljmp
xor
fs
dec
outsb
mov
pop
dec
nop
ja
mov
cmp
repz
sbb
fs
dec
push
jecxz
ss
inc
repz
inc
push
push
out
pop
sti
xchg
mov
sub
cmp
jecxz
pusha
sbb
flds
test
lods
repz
inc
dec
dec
jge
pusha
mov
xchg
and
ret
push
popa
cmp
cmpsb
inc
push
movsl
mov
std
mov
in
gs
or
jecxz
out
xchg
and
adc
sub
mov
dec
sbb
in
imul
test
call
sbb
adc
cmp
inc
mov
fwait
insl
push
mov
stc
jnp
sarl
int3
stos
adc
lahf
sbb
fnstsw
lods
imul
popa
xchg
stos
push
add
fwait
shll
imul
notl
and
mov
sub
mov
push
cs
repz
xlat
lods
mov
dec
fwait
cld
inc
jle
test
dec
jne
mov
push
xchg
addr16
popa
arpl
js
fcompl
stos
jle
and
sub
das
fbstp
pushf
orb
pop
adc
push
out
testl
test
jb
pop
iret
xchg
cmp
repz
scas
incb
mov
pop
sub
jne
jmp
pushf
fs
jge
xchg
jmp
fcmovnb
jae
add
inc
xchg
mov
sbb
clc
aam
xchg
push
jnp
mov
mov
xchg
rclb
in
lret
xchg
pusha
mov
mov
aam
push
inc
popf
fstps
std
and
std
nop
cmp
fwait
adc
ficomps
ret
sbb
adc
or
out
sub
lret
popa
or
xchg
lds
mov
clc
lret
lahf
ds
or
lret
aad
push
lock
stos
mov
mov
movsl
int3
shll
push
xor
or
mov
pop
cltd
nop
and
and
xor
shr
call
hlt
out
lret
dec
dec
daa
loop
fstpt
jb
stos
test
add
lods
mov
cmp
and
dec
inc
loope
mov
int
ja
bswap
sti
lods
xor
cmc
int
cmpsb
xchg
gs
and
or
adc
sub
push
mov
mov
mov
mov
adc
jmp
mov
or
pop
movsb
pop
mov
and
lahf
jle
cld
ds
and
mov
mov
pop
out
cmpsl
out
cwtl
les
xchg
mov
sbb
push
stc
rorl
lods
outsb
clc
or
cmp
mov
movsl
icebp
fstpt
imul
test
clc
xchg
add
pop
dec
aam
xor
es
xchg
mov
pop
xchg
push
pop
jbe
mov
mov
das
leave
loop
and
adcb
add
test
insb
push
test
xchg
test
or
mov
hlt
lods
fwait
fwait
ds
negl
rcll
popf
jne
cwtl
xor
leave
lcall
scas
iret
std
aaa
push
mov
test
in
xlat
xor
lods
lea
inc
ret
inc
daa
test
jp
push
sub
inc
jmp
fsubrl
adc
pop
sbb
cmpsl
lret
dec
jb
addl
scas
adc
push
imulb
dec
out
sub
movsb
cmovb
mov
push
out
ret
daa
jecxz
lock
scas
push
push
outsb
pushf
and
subl
imul
insb
mov
insl
xchg
pop
pop
sub
mov
ret
lea
cmp
cld
and
jg
inc
inc
pop
imul
xor
cmp
dec
pop
fbld
mov
repnz
push
mov
xchg
enter
cli
inc
cmp
adc
jne
invd
repz
xchg
dec
add
in
aaa
scas
lret
lods
cmpsb
pop
pop
xor
mov
mov
cltd
cmp
cmp
add
xchg
push
popf
sbb
cld
icebp
lret
cltd
push
je
arpl
fwait
xchg
adc
xor
pusha
and
stc
cmp
add
jmp
enter
pop
mov
or
pop
hlt
into
dec
cli
setl
jns
fdivl
cmpsl
lahf
jnp
sub
mov
cmp
sarb
loopne
in
call
gs
push
and
aam
dec
scas
je
ja
inc
data16
clc
gs
ljmp
mov
int
ja
mov
xorl
xor
mov
mov
es
jbe
sti
xor
filds
sbb
jae
fstl
loopne
sbb
ja
lcall
in
js
push
jg
cltd
and
and
aaa
xor
mov
pop
sub
imul
ror
lahf
and
lods
mov
movsl
cwtl
ret
mov
mov
sbb
mov
adc
jno
or
test
sti
sub
cmp
mov
aas
cmp
add
pop
je
pop
in
mov
enter
fmul
inc
cwtl
sub
loopne
sub
adc
insb
xchg
mov
push
dec
pop
sbb
cmp
jne
roll
arpl
or
loopne
xchg
pmaxsw
mov
icebp
and
mov
mov
pop
jecxz
popf
scas
xchg
ss
adc
into
cmp
jae
aad
jne
not
shlb
mov
fwait
jg
sub
ds
imul
stc
enter
les
fwait
inc
insl
mov
jns
xchg
sbb
cmp
jp
adc
mov
adc
pop
mov
in
je
test
scas
and
add
sbb
ljmp
sbbl
jo
and
hlt
jg
call
mov
adc
jo
lods
stos
bound
inc
pop
cmp
out
and
xchg
push
call
cmpsl
fcmovu
das
jno
fstl
rorb
out
dec
inc
sbb
cmp
push
lods
gs
sub
xlat
add
mov
mov
pop
cmp
xor
ljmp
lahf
dec
sub
mov
lahf
adc
xchg
xchg
jo
sub
sub
mov
xor
lret
fmul
int3
mov
add
push
fisubs
or
dec
out
pop
fisubrl
lea
sub
pop
fsubrp
sbb
fisubrs
mov
sahf
test
sbb
sbb
pop
jne
dec
mov
mov
pop
dec
std
pusha
ds
loop
pop
repnz
xor
pop
jns
mov
mov
cld
mov
scas
xchg
cwtl
mul
push
mov
lea
cmp
out
push
stos
pop
shll
out
test
cmovo
sarb
pop
arpl
lock
push
ljmp
adc
jecxz
cltd
add
fistpl
imul
subl
adc
cmp
cmp
lods
sbb
mov
pop
push
sbb
fs
mov
hlt
sub
out
mov
add
and
jnp
aas
into
jns
jns
pop
jb
jle
add
or
or
jmp
push
rcrb
jmp
jbe
dec
movsb
mov
dec
mov
mov
push
inc
xchg
lahf
icebp
arpl
and
mov
dec
mov
leave
jne
test
jb
cmp
push
mov
stos
jmp
sbb
jb
out
mov
mov
sarb
nop
repz
sub
inc
inc
fstps
in
adc
mov
sti
fs
lods
ljmp
jp
cmp
pop
pop
sub
lahf
mov
or
addb
cmp
mov
divl
or
inc
les
push
push
out
lret
inc
sbb
std
les
arpl
push
jg
add
mov
std
xchg
scas
inc
mov
pop
mov
lock
and
xchg
add
or
lock
mov
outsb
mov
test
sbb
cmp
push
push
cwtl
push
push
mov
pop
mov
jmp
jle
stc
xor
inc
fdivrs
xor
iret
pop
xchg
jno
push
les
and
dec
push
fistps
cmc
mov
xchg
stos
loop
cmp
xor
fucomp
fstps
sub
ljmp
outsl
dec
mov
js
xchg
push
movl
insb
cld
mov
in
mov
xlat
cli
cmp
or
in
int3
iret
mov
pop
pop
adc
and
add
insb
mov
notb
mov
cmp
shlb
fbstp
jns
cwtl
and
pop
add
stos
cmp
add
jle
lret
cmc
inc
lret
sti
into
xchg
test
stos
jge
or
cwtl
mov
fdivr
cmp
scas
sub
adc
sbb
aad
cmpsb
sub
xor
rcrl
xchg
push
sbb
xchg
add
jecxz
hlt
jbe
imul
add
add
outsb
sti
xor
jo
and
dec
xchg
mov
cld
sbb
xor
mov
pop
push
pop
pushf
add
push
scas
je
aam
jecxz
mov
outsl
ss
fistps
sbb
stos
pushf
adc
imul
pop
xlat
out
int
mov
cmp
mov
pop
push
imul
nop
mov
xor
out
jp
into
pusha
cmp
repz
lea
lret
fstps
inc
imul
out
xchg
divb
in
aas
sub
pop
jno
ss
and
push
xor
enter
mov
outsl
xor
aas
imul
add
js
mov
pusha
sarl
add
lods
pusha
mov
sbb
cld
int3
dec
loop
cmc
sub
sbb
and
add
ret
sub
xchg
add
sahf
imul
or
iret
mov
into
cmpl
mov
sbb
cld
daa
gs
mov
mov
jne
mov
fdivrp
jnp
push
jmp
leave
lods
rcrb
mov
inc
adc
pop
stos
out
loop
mov
push
aad
popa
push
shl
lock
fwait
pop
jecxz
mov
test
sbb
mov
mov
loop
rcrb
out
mov
xor
test
sarb
push
ljmp
lods
imul
jp
test
or
and
into
mov
sub
lahf
int3
aaa
ja
fdiv
out
lock
sbb
jmp
cmpsb
nop
sub
sbb
les
fisttpl
call
push
jl
sbb
pcmpgtb
or
arpl
cmc
sbb
jmp
inc
sub
push
and
rep
push
gs
push
test
mov
sub
push
lcall
int3
out
cmp
lock
enter
adc
dec
xor
xchg
in
js
or
repz
mov
mov
and
aaa
cmpl
jle
fucomip
pop
ficoml
jae
aam
pop
mov
stc
mov
aam
and
inc
push
aam
mov
mov
xchg
push
icebp
fdivl
mov
mov
sbb
sub
cltd
and
fistl
pop
jnp
jno
lcall
cmp
or
and
js
fisubl
out
das
dec
loop
cmp
in
adc
or
addl
pop
mov
lods
add
aad
mov
mov
lods
out
pop
inc
push
jnp
in
push
das
out
cmpl
push
xor
xor
dec
fidivrs
cmp
or
xorps
dec
mov
roll
std
rclb
ret
or
inc
leave
jge
scas
pop
lret
xchg
insb
xchg
add
jns
int3
push
add
adc
add
imul
sti
subl
dec
cltd
scas
jne
orl
sub
inc
rcr
cwtl
jnp
movsl
and
out
sub
lcall
mov
outsb
jbe
enter
mov
and
dec
mov
loope
jl
adc
daa
addr16
lahf
jne
sbb
dec
fwait
cmp
and
loopne
pop
hlt
pop
push
daa
inc
out
fsubl
jecxz
lods
xchg
pop
aad
cmp
dec
pop
cld
add
push
adc
dec
push
into
xor
rolb
lds
jb
or
mov
cltd
nop
pop
subl
sahf
mov
and
pushf
leave
mov
jno
sbb
dec
pop
push
push
mov
nop
add
clc
inc
enter
push
or
sbb
scas
aad
test
mov
fst
pop
mov
in
jo
add
jno
xor
inc
xchg
xor
inc
xor
out
mov
adc
add
clc
sbb
pushf
push
or
dec
dec
and
enter
std
cmp
ror
out
or
or
cmp
stos
add
inc
std
movsb
int3
cmpsb
cmp
popf
leave
push
call
movsl
jo
mov
bound
xor
xchg
fidivl
iret
fisttpl
xor
popa
jp
or
sbb
inc
lahf
or
mul
sbb
cmp
in
lahf
jg
jp
hlt
jmp
jae
mov
inc
push
xchg
inc
rcrl
mov
adc
cmp
mov
dec
int
inc
js
xor
ret
cmp
mov
test
xchg
push
in
fists
in
lea
jmp
pop
or
insl
or
inc
div
femms
sahf
in
pop
mov
pop
mov
dec
sbb
fdivrs
lods
dec
imulb
mov
xchg
and
and
loope
aaa
int3
push
ljmp
shr
add
lods
jl
arpl
imull
bound
lods
aad
adc
aad
mov
sub
insl
or
push
xchg
adc
xchg
or
rclb
mov
inc
or
das
push
fsubrs
ljmp
cmp
and
jae
repnz
jnp
loopne
mov
mov
das
loop
jle
fiadds
daa
or
enter
rcll
out
or
sti
out
loopne
outsl
loop
jns
cmp
out
inc
xorl
cltd
imul
test
idivb
movsl
cmp
pop
xor
rcrl
or
imul
clc
ret
iret
gs
stos
cwtl
mov
jbe
mov
mov
lcall
mov
cld
nop
icebp
inc
les
xchg
adc
xor
push
or
orb
out
or
test
push
call
mov
ret
and
cmp
movsb
dec
out
fnsave
push
jae
movsb
lods
jo
aam
dec
call
jg
xor
fs
hlt
xchg
idiv
imul
stos
inc
jle
or
and
lock
jmp
adc
jbe
test
or
jl
fbstp
movsl
jle
ss
push
into
dec
push
aam
ret
fs
popa
xor
or
loopne
in
inc
ret
and
xor
fcoms
addr16
nop
sub
jp
cmp
mov
fs
sbb
add
and
sahf
ret
xchg
mov
and
push
arpl
sti
movsl
inc
sbb
and
xchg
cmp
imul
jecxz
cmpsb
ja
cmp
loopne
lock
mov
std
ja
out
xor
jle
adc
ret
sub
out
cli
dec
sbb
mov
sbb
icebp
push
jnp
roll
cwtl
mov
jno
lret
movsb
inc
out
cmpsb
fyl2x
stc
adc
repz
sbb
push
push
xchg
repnz
outsb
test
aas
ljmp
push
scas
pop
pop
or
das
stos
je
popf
stos
mov
fistpl
stos
das
ret
cs
lret
dec
dec
xor
andb
jl
ja
sub
xchg
inc
inc
lret
lods
mov
sub
std
inc
xor
cld
pop
dec
jg
in
mov
xchg
jo
incb
lret
scas
fisubrs
loop
es
mov
push
repz
lock
mov
adc
jne
add
cmpsb
mov
xor
mov
movsb
xchg
dec
js
je
adc
int
in
mov
sbb
pop
jae
cmp
dec
fstl
mov
sub
pusha
jns
leave
test
xor
outsb
rol
xchg
shrb
add
in
sbb
dec
out
aas
std
jbe
shrl
or
fucomp
pop
dec
aad
xchg
movsb
xor
mov
xchg
arpl
push
fyl2x
mov
cmpl
pop
loop
mov
cmp
adc
mov
mov
adc
push
mov
mov
js
mov
adc
xchg
sbb
sub
or
movl
das
mov
adc
lret
pop
aaa
rcl
pop
call
hlt
add
addl
lock
mov
cmp
and
cmpsb
push
call
mov
imul
test
xor
jns
pop
jne
pop
adc
cmp
fisttpl
lds
add
dec
cmpsl
push
out
js
or
and
data16
sbb
mov
mov
inc
push
loope
dec
xchg
or
and
icebp
xchg
mov
pusha
pop
jb
xor
xor
jbe
sub
sar
mov
sbb
xchg
cli
cmp
inc
out
das
test
push
std
or
shrb
mov
cmp
or
cwtl
sti
cmp
test
pop
scas
cli
xchg
shlb
in
lahf
cld
sar
adc
imul
push
movsl
movsl
mov
jae
scas
pop
push
jle
and
rep
repz
mov
push
jecxz
add
push
mov
jns
cmp
jno
mov
xchg
push
iret
lcall
inc
fs
lahf
das
jl
das
subps
dec
daa
les
das
cld
xchg
lret
jno
and
mov
hlt
orb
push
xlat
sarb
mov
insl
add
pop
xchg
scas
das
incl
cli
push
fcoms
loope
outsl
and
and
mul
mov
pop
mov
hlt
frstor
cwtl
and
pop
xchg
dec
dec
and
jg
or
dec
xchg
add
dec
lods
cmp
inc
scas
imul
push
jmp
dec
lds
mul
mov
dec
push
repz
sbb
and
xchg
add
push
inc
es
push
or
ljmp
jge
mov
jbe
pop
sub
cmp
cltd
inc
aas
enter
in
push
sub
dec
or
adc
js
out
sub
inc
lret
push
and
mov
dec
xor
add
lahf
shll
pop
stc
fldenv
shrl
rorl
add
std
mov
outsb
insb
mov
int3
xor
lds
sub
sti
lahf
out
xchg
add
or
test
icebp
lcall
inc
clc
int
test
jbe
cmp
push
in
jge
or
ds
and
insb
test
mov
mov
outsb
mov
push
fists
jmp
out
test
loope
aam
fdivrl
loopne
arpl
pop
lods
sub
pmaxsw
loopne
loope
mov
movsb
lcall
pop
xor
loop
jne
divb
mov
test
cld
cmc
mov
imul
mov
sbb
repnz
sbb
out
das
mov
je
popf
fwait
lahf
push
xor
lea
jl
outsl
adc
outsb
mov
inc
mov
loope
cld
repz
popf
xchg
test
sbb
rcrl
repnz
lcall
cmp
mov
arpl
das
lods
cmp
cmp
cmc
xor
addr16
dec
jae
pusha
xchg
jl
gs
es
mov
aas
daa
out
lods
jne
xor
mov
mov
inc
xchg
loope
fimuls
lcall
dec
xor
cmp
push
shll
mov
lret
sbb
cli
shlb
pushl
mov
andb
jae
push
insl
xchg
arpl
mov
ljmp
mov
add
jb
add
std
dec
jmp
sbb
leave
push
sub
mov
cmp
call
jne
out
add
stos
out
xor
ret
or
jle
sahf
fsubrl
enter
test
adc
js
repz
dec
add
roll
dec
lea
jno
pop
repz
jmp
js
lcall
rcrb
into
dec
out
push
out
jecxz
mov
mov
mov
mov
inc
mov
movsl
pop
pop
scas
lret
stc
addr16
and
movsl
js
out
gs
in
add
stc
mov
outsl
and
repz
xor
mov
push
pushf
repz
in
ljmp
repz
ret
xchg
sbb
jmp
cmp
and
xor
pushf
fdivrp
loop
movsb
iret
xchg
jne
sbb
shrl
sub
mov
or
lret
clc
add
xor
fcomps
lods
xor
fisubs
xchg
push
ret
adc
sub
xchg
adc
pop
or
jl
jmp
es
ja
out
mov
xchg
push
mov
rol
jmp
jb
mov
cld
daa
fidivrl
dec
out
mov
jecxz
outsb
stos
aas
and
inc
and
clc
aaa
data16
lret
jl
je
dec
mov
jno
jg
jp
aad
xchg
inc
mov
cmp
adc
jmp
pop
xchg
inc
mov
ja
or
adc
adc
test
mov
pop
mov
sub
cmp
stc
jne
lret
push
jp
shrl
jge
xor
or
imul
sti
cltd
xchg
jno
dec
test
and
stos
test
lea
push
sbb
out
xor
mov
movsl
rclb
push
shrb
mov
dec
xlat
dec
mov
mov
sbb
das
cwtl
cmc
cli
push
lret
adc
push
pushf
and
aaa
insb
or
sub
call
jnp
pop
add
xor
lods
mov
lret
lret
mov
sub
sbb
js
ficomps
aaa
das
icebp
pop
mov
lret
loop
js
cmp
cld
add
cwtl
inc
pop
icebp
dec
les
pop
sub
inc
stos
cs
and
push
inc
ss
add
leave
push
inc
jae
mov
lods
repz
les
jl
lea
mov
add
xchg
pop
iret
sbb
pop
out
pop
lods
sub
jnp
rcrl
sbbb
mov
xor
cmp
imul
dec
push
sbb
int
in
add
addl
xlat
popa
pusha
adc
push
aas
lea
adc
jo
jecxz
push
cmp
push
add
sbbl
xor
loope
mov
clc
jae
ss
inc
pop
in
xor
inc
mov
mov
xor
or
cmp
je
sbb
cwtl
mov
enter
push
test
dec
xor
fs
xchg
mov
xorl
push
cmp
int3
mov
xchg
sub
xor
stc
inc
daa
mov
mov
inc
mov
inc
push
xorb
mov
sbb
jb
push
jge
and
outsb
jae
cmp
xor
loop
sub
fwait
mov
aad
jmp
aas
gs
mov
push
xchg
outsb
imulb
dec
push
push
pop
insb
pop
mov
repnz
xchg
dec
lock
shlb
fdivr
cmp
jge
andb
pushf
xor
rol
lcall
pop
dec
and
push
xchg
dec
jns
xchg
or
push
jmp
ror
dec
push
popf
pop
sbb
xchg
add
leave
pop
addl
fmuls
mov
repz
jno
push
scas
mov
scas
sub
rcrb
stos
les
mov
inc
dec
pcmpeqd
mov
jae
jne
xchg
adc
push
ja
and
mov
hlt
aad
loop
sub
mov
cmp
push
mov
xchg
subl
push
call
sbb
fimull
fistpl
bound
add
sbb
push
out
in
push
cmpl
sbb
out
add
popf
sbb
test
clc
mov
jb
into
sbb
adc
movsl
mov
sbb
jle
lret
ds
pop
pop
cmp
jns
xor
stos
fwait
call
mov
clc
andb
js
or
xchg
ficoml
pop
imul
and
fwait
lahf
xchg
sub
call
je
jl
pop
xchg
mov
ja
and
outsl
adc
stos
dec
outsb
inc
scas
push
jmp
popa
jle
or
mov
shl
stos
aam
or
repnz
push
adc
sub
xor
je
mov
fcomps
dec
xchg
in
lods
mov
dec
aad
pop
fistpll
fnstenv
add
roll
jno
xorb
popa
sahf
dec
es
and
out
leave
mov
out
cmpsl
rcrl
pop
test
mov
xor
out
mov
test
subl
ljmp
mov
cwtl
stos
inc
fisttpll
pop
int
movsl
ja
or
pop
or
aaa
or
fisttps
push
cmp
ror
fidivrl
or
mov
or
xchg
mov
hlt
push
dec
xor
dec
pushf
test
jg
fmull
mov
adc
push
dec
mov
std
jnp
sbb
inc
xlat
int
pop
adc
and
data16
mov
rcr
aam
adc
mov
inc
shrl
inc
std
jb
ret
daa
les
mov
daa
stos
repnz
inc
mov
into
push
out
in
mov
and
pop
pop
mov
ss
jno
inc
sub
cli
lods
pop
idivb
rorb
shrl
aad
popf
pop
push
negb
pusha
pop
mov
add
xor
sub
jne
dec
xchg
mov
pop
test
mov
push
orb
shll
lcall
movsb
inc
sub
imul
push
in
inc
sub
jb
dec
ret
pop
scas
fisubs
cmpsl
pop
adc
xor
in
mov
loope
enter
sbbb
addr16
jge
pop
cmp
cmp
inc
jno
pop
dec
inc
movsb
cmpsl
sbb
aaa
xor
lahf
fldl
mov
push
test
dec
shll
in
lret
or
mov
mov
pop
pop
inc
es
stc
out
xor
jge
cmp
xlat
scas
cmp
lret
push
push
fsts
or
cmovge
adc
xchg
pop
popa
push
mov
orl
leave
and
jg
int3
add
add
pusha
adc
push
mov
dec
popa
mov
movsb
daa
cmp
sub
or
push
dec
push
dec
ret
sub
sub
lret
int3
inc
icebp
push
cmpsb
data16
sbbb
outsb
ljmp
xor
daa
cmp
mov
add
push
stos
sti
push
jne
ss
insl
pop
bound
jne
js
cmpsb
in
xchg
jae
and
inc
push
cmpsl
push
mov
ret
iret
or
and
lret
sbb
lods
push
sbb
in
daa
jmp
and
insl
ja
cli
push
mov
adc
and
jecxz
cmc
xor
lods
add
mov
jbe
jb
pop
out
adc
and
cmp
filds
addl
arpl
and
cmpsl
idivb
push
scas
cmp
cmpb
lock
es
push
dec
cmp
push
and
lock
hlt
ret
loope
jmp
dec
addl
mov
jmp
scas
and
mov
scas
cmc
or
shrb
call
jns
xor
mov
js
shrb
dec
cmpsl
cltd
xor
add
adc
mov
sar
lods
leave
insb
sbb
sbb
arpl
std
cli
cli
imul
push
push
cmp
aad
dec
dec
xchg
add
lret
mov
dec
jl
mov
aam
scas
bound
sbb
gs
mov
inc
or
dec
orb
cltd
pop
jno
andl
lods
mov
xlat
ss
inc
dec
mov
xor
dec
adc
dec
frstor
es
ds
ljmp
daa
and
sahf
and
jbe
push
xchg
push
ljmp
rcrb
adc
sbb
mov
mov
jbe
mov
add
pop
xlat
int3
or
mov
jae
pusha
sbb
fwait
inc
mov
in
pop
stos
stos
shll
loopne
movsb
out
in
xchg
jne
jno
in
out
mov
adc
rcrl
jbe
aas
cli
std
lcall
imul
jne
mov
testl
fwait
push
sbb
jbe
pop
inc
addr16
push
mov
cld
call
stc
gs
push
cmp
fwait
aaa
jge
ljmp
jne
pop
int3
in
and
mov
push
test
jecxz
rcrb
stos
xchg
std
mov
pop
pop
xchg
xor
icebp
add
shl
pop
push
sbb
arpl
mov
call
jns
adc
mov
gs
jecxz
pop
cwtl
add
mov
xor
lret
push
xor
lahf
pusha
sbb
loope
cli
rcrb
mov
ret
push
pop
imul
fsubl
js
or
push
outsl
dec
mov
dec
mov
je
sub
pushf
pop
shll
add
xor
lahf
fmuls
rcl
xor
outsb
xor
mov
sahf
imul
add
push
pushf
inc
xor
jmp
out
roll
dec
xor
xor
lock
int
jbe
jbe
pop
aas
imul
pop
dec
and
fistl
push
rcll
out
test
scas
cmpsl
fucomp
push
sbb
jmp
les
cmpsb
or
lods
dec
add
dec
lcall
xor
xchg
xchg
outsl
cmc
mov
stos
loop
adc
sbb
outsb
mov
es
dec
lock
clc
push
dec
push
and
aam
jmp
cmp
lods
mov
jo
aad
jle,pn
data16
movsb
call
les
pop
sbb
sub
push
pop
stos
xchg
out
arpl
cli
fadds
fsubrs
neg
int
out
ror
inc
out
cmp
or
push
jmp
scas
pop
xor
sbb
push
xor
jb
inc
es
jp
mov
and
rolb
jge
icebp
lcall
nop
cwtl
pushf
out
jns
xchg
xchg
push
lcall
fistps
cmp
enter
enter
fcompl
adc
dec
cmp
xor
out
push
jno
inc
xor
jmp
mov
bnd
or
data16
mov
pop
xor
jo
jg
das
adc
or
mov
jnp
outsb
or
inc
jns
mov
add
scas
int3
mov
mov
mov
mov
inc
lock
sub
mov
out
xchg
hlt
jne
int3
gs
jne
push
add
iret
out
pop
inc
push
jge
sbb
lret
jmp
jg
mov
xor
fnstsw
push
cwtl
lock
pop
jae
repz
clc
xchg
lods
mov
popa
add
sbb
dec
push
stos
rolb
lahf
mov
repz
cmp
movsl
dec
fbld
mov
cli
lods
aas
or
lds
mulb
pop
in
stc
std
aam
arpl
pop
lods
insl
or
jecxz
pop
push
fiadds
mov
dec
loope
pop
xchg
shrl
aaa
dec
push
cltd
jne
test
and
sbb
into
cmpsl
dec
lods
shlb
push
xlat
cmp
btr
cs
mov
inc
test
pop
add
cmp
mov
jg
sub
enter
ss
rorb
push
cli
fwait
push
push
mov
ljmp
adc
ret
in
jb
add
mov
insb
andb
jne
movhps
add
sub
push
clc
ss
or
mov
imul
call
xor
sub
cli
jns
push
inc
cs
ja
dec
xorl
or
sbbb
shl
aas
aas
xlat
aad
mov
jge
push
adc
into
jecxz,pn
aam
adc
jg
and
mov
mov
ret
into
stc
jne
lods
data16
fcompl
incl
fnstenv
fdivl
fs
pop
lret
loop
push
push
adc
lret
mov
jmp
es
fldcw
fisttpl
xor
lods
js
lods
cmp
pop
popa
movsb
stc
daa
cli
xor
in
pushf
nop
fwait
jo
cmpsl
cltd
nop
add
orb
or
push
xchg
iret
xchg
jno
xor
into
data16
and
stos
sub
mov
scas
lret
or
lcall
cmc
dec
das
rcll
stos
into
mov
sbb
xchg
jl
stc
ret
adc
lcall
je
sub
rorb
jno
mov
mov
repz
fstps
pop
push
mov
js
es
cmp
xor
lahf
mov
in
push
incl
and
vcvtdq2ps
xchg
pop
insl
inc
push
outsb
and
or
subb
call
sbb
or
dec
push
push
xchg
loopne
movsb
stos
xor
sub
mov
int3
leave
imul
es
pop
popf
push
out
shrb
dec
cmp
cmpsb
mov
into
mov
data16
loope
dec
push
jae
pop
sahf
or
mov
push
loop
popf
jp
test
inc
mov
xor
adc
inc
dec
sub
xor
jns
sbb
clc
mov
xchg
arpl
loopw
sub
outsb
test
adc
push
push
sub
pop
xchg
jg
scas
push
daa
loope
xor
daa
pop
inc
xchg
jmp
push
sub
mov
dec
lret
out
lods
or
ljmp
push
dec
jmp
cmp
orb
rsqrtps
inc
mov
test
xchg
jno
or
out
dec
sbb
fucom
es
loope
test
rorb
mov
jns
xor
sub
sbb
aad
loop
mov
cmp
test
rorb
fwait
xor
jns
xlat
dec
jbe
fimuls
xchg
dec
adc
mov
js
js
xchg
mov
xor
xchg
mov
rcll
add
fldl
push
sub
dec
sbb
jl
push
push
jl
shrb
imul
ret
add
xchg
scas
dec
dec
cltd
xchg
push
xchg
fdivrl
outsb
cmp
inc
jne
test
cwtl
mov
data16
repz
cmp
cmp
mulps
push
mov
xchg
adcl
jecxz
loope
dec
xor
out
lock
ss
jns
insl
inc
xor
fsubs
dec
movsb
add
or
mov
insb
mov
outsb
ret
scas
icebp
addr16
inc
in
jne
iret
add
inc
jp
in
dec
pop
fadd
adc
sbb
mov
adc
int
aam
fst
xchg
pop
mov
push
addr16
imul
or
mov
mov
sbb
lods
jmp
movl
call
shlb
jge
sbb
inc
xlat
popf
inc
push
mov
cltd
mov
fwait
sbb
and
subb
cld
cld
movsb
mov
and
dec
ja
sub
jl
sahf
mov
pop
mov
inc
leave
sahf
jmp
jo
sti
pop
cmpsb
jae
mov
bound
fwait
imul
ljmp
push
push
lret
push
inc
iret
push
test
mov
dec
stos
data16
jne
lcall
lock
out
adc
int
aam
and
inc
negl
shrl
push
sarl
mov
test
cmp
int3
daa
inc
push
mov
dec
nop
pop
jne
cld
ja
popf
lcall
xchg
cmp
push
movsb
lret
testl
imul
xchg
sub
ljmp
movb
mov
ret
push
imul
cmc
popa
icebp
or
js
arpl
jae
xchg
insb
cld
or
xchg
mov
stc
pop
aas
es
mov
iret
xor
pushf
xor
outsl
sarb
in
and
fs
nop
cmp
jbe
movsl
xor
insl
outsl
je
ja
xor
fcom
lds
mov
mov
cmp
sub
dec
fsubrs
adc
inc
insl
adc
dec
pop
out
rolb
cmp
loop
movsl
pop
mov
ds
cltd
in
in
inc
push
mov
mov
jns
mov
push
fcomps
xchg
mov
ret
pop
sub
adc
xchg
aam
dec
loope
inc
lock
mov
imul
icebp
mov
push
mov
in
cmp
cmp
xchg
repz
adc
add
push
push
in
cmp
sbb
je
cmp
jne
sbb
ret
lock
push
pop
out
in
xor
and
xor
dec
cmpsl
push
sbb
enter
sub
mov
popa
ss
aam
decl
xchg
iret
jno
pushf
or
leave
add
mov
lock
pop
movsl
in
jae
jmp
cmc
adc
pop
in
dec
lds
notl
movsb
push
ljmp
cld
stos
popa
int
cmp
adc
dec
push
jnp
pop
xchg
mov
std
icebp
mov
jb
insb
adc
xchg
fdivs
test
rcrl
xorb
xor
mov
dec
cmpsl
clc
insl
lcall
pop
sub
mov
dec
sbb
movsb
pop
cmp
arpl
rolb
pop
pop
cmc
jp
jns
sub
xchg
cs
jecxz
pushf
lods
pop
aam
sbb
pop
adc
inc
bound
pop
xchg
cwtl
jl
xor
lods
mov
push
in
es
push
cmp
inc
inc
inc
mull
dec
das
xor
push
mov
mulb
mov
lret
dec
pop
sbb
ret
ljmp
mov
add
dec
repnz
or
je
sub
cmc
mov
rol
cltd
add
mov
ljmp
sub
cmp
mov
popf
insb
popl
out
hlt
arpl
push
and
lea
jae
ds
mov
adc
jl
xor
dec
aam
jns
cmp
mov
lcall
mov
cmpsb
stos
aas
cmpsl
into
inc
jne,pt
cs
icebp
xlat
outsb
xor
ret
cmpsl
adc
xchg
jg
and
loop
out
jmp
xchg
mov
mov
push
pushf
mov
mov
shll
call
iret
int
xchg
loop
dec
notb
pop
push
sbb
push
mov
lds
sub
push
les
icebp
xchg
rcll
int3
cmp
adc
cmp
sarb
mov
call
lcall
xor
cmp
inc
push
jl
jg
hlt
shll
clc
mov
lock
test
cs
push
push
xchg
inc
into
and
mov
jb
xor
jle
jl
mov
sarb
dec
mov
je
rorl
pop
leave
jge
push
push
xor
mov
pop
aas
sbb
gs
pop
jno
les
icebp
adc
in
scas
pop
xchg
mov
mov
lods
iret
roll
lds
mov
lret
sub
cmp
leave
xchg
ja
and
orl
push
sbb
push
mov
shll
loopne
sahf
rcr
mov
out
aam
fcoml
cmpb
sub
hlt
test
into
test
lret
mov
ja
lods
mov
cmp
add
or
sub
data16
sbb
mov
pop
in
jne
mov
xor
test
pop
icebp
xor
jmp
inc
or
mov
mov
fidivs
mov
xchg
xchg
iret
sub
inc
insl
ss
stc
cltd
bound
push
mov
jne
jg
mov
mov
fdivrl
add
xchg
iret
xorb
test
mov
das
or
mov
xchg
stc
repz
fsubs
sahf
cmp
dec
pop
push
das
jmp
mov
push
mov
cmp
sbb
ret
mov
mov
adc
stc
bound
xor
stos
inc
ja
iret
out
sbb
cmp
in
or
mov
lods
ds
sbb
ror
mov
addr16
lahf
adc
or
or
outsb
test
inc
insl
arpl
xor
jecxz
das
add
mov
imul
test
jns
stos
mov
mov
scas
sub
mov
mov
popf
push
xchg
pop
jns
adc
rcll
clc
add
pop
jecxz
xor
mov
push
arpl
mov
es
std
sub
and
pop
rclb
add
pop
ret
mov
popa
add
lret
test
outsl
jb
jmp
jno
cld
int
inc
xchg
dec
inc
hlt
add
stos
mov
inc
loopne
ret
push
cmp
out
fwait
add
sahf
pushf
push
pop
mov
mov
adc
xchg
jmp
mov
pop
mov
and
fstpl
pop
repnz
movsb
mov
fldt
adc
pop
push
popf
add
mov
das
mov
push
movsl
or
cwtl
xchg
cli
dec
std
rorl
push
sahf
or
and
and
loopne
lret
mov
rcll
add
int
xchg
xor
jl
xchg
jns
insb
mov
scas
les
nop
insl
or
sub
rorb
loopne
add
das
xor
cmp
jecxz
push
enter
das
lahf
push
or
sti
cmovne
faddl
out
lods
ret
dec
out
cvttps2pi
dec
mov
xor
ret
mov
push
cmp
pop
imul
fadd
mov
adc
stos
xor
cmp
lret
rcr
mov
out
cld
push
hlt
insl
sbb
inc
push
push
icebp
pop
divl
stos
lret
mov
and
roll
sbbl
xchg
in
and
in
into
sub
push
shl
ret
adc
pop
sbb
xchg
or
pop
ror
daa
push
adcl
jge
js
xchg
push
xor
in
lahf
addl
mov
cmp
xlat
inc
push
or
add
inc
and
cli
jo
es
push
adc
mov
and
je
xchg
mov
adc
xchg
leave
pusha
mov
push
outsb
sbb
lods
data16
dec
ds
inc
jo
xchg
xchg
enter
xor
es
addl
mov
xor
popa
cmc
stc
cltd
xchg
cltd
call
sahf
lret
dec
or
test
mov
in
cs
shrb
test
jmp
pop
iret
lods
add
jnp
test
call
xchg
cmp
dec
and
sbb
jne
rorb
cmpsb
push
movsl
rclb
movsl
daa
fldl
addb
daa
ret
stc
add
mov
mov
lcall
loope
jp
push
xchg
jae
aam
jae
scas
mov
or
pop
lahf
rorb
mov
lret
sti
shlb
imul
bound
cli
and
add
sbb
in
sahf
add
sarb
pop
aaa
fsubp
push
adc
out
jnp
and
xchg
jp
scas
inc
ds
dec
sub
fiadds
ljmp
out
push
clc
fmuls
mov
and
push
stos
addw
mov
subb
adc
pushf
push
shlb
mov
pushf
push
xchg
push
xchg
fdivr
jae
das
pop
dec
pushf
lea
jb
or
adc
and
clc
push
mov
lods
jae
test
and
cmp
pop
movsl
sub
test
mov
pop
mov
or
cmp
cmp
sub
daa
xchg
xchg
dec
rolb
and
addl
ficomps
sbb
cltd
adc
daa
cmp
jg
jnp
ja
mov
int3
dec
adc
in
cmp
push
jne
cli
popf
sbb
adc
loop
in
xchg
jge
push
xor
push
jno
fwait
and
jg
add
xchg
xchg
scas
cs
mov
ljmp
sub
fstl
xor
test
iret
aas
jl
in
xor
in
test
add
dec
stos
xor
pop
pop
out
push
sahf
xchg
xchg
aam
insb
add
sub
inc
out
xchg
mov
mov
and
adc
push
add
fs
fstpt
test
cltd
sub
dec
fnstenv
push
pop
pop
jmp
xor
jl
aaa
aam
mov
mov
pop
add
push
jb
adc
xor
mov
push
pop
mov
movsl
jb
scas
cwtl
or
inc
pop
idivb
pop
sti
test
subb
dec
inc
jge
mov
mov
aam
jb
mov
in
or
sub
fldt
inc
sub
jle
mov
xchg
outsb
jns
or
int
outsl
in
add
out
dec
push
mov
arpl
enter
lock
or
dec
sbb
cmc
pop
pushf
sub
divl
cltd
jns
mov
jg
iret
cmp
js
cmp
push
jge
outsb
sbb
clc
bound
cmp
in
int
sub
mov
ljmp
xor
test
pusha
mov
inc
jae
sub
dec
or
popa
mov
andb
scas
mov
insb
push
std
movsb
pop
inc
jecxz
adc
jne
jp
sub
rorl
mov
mov
jle
dec
out
stos
ss
cli
adcl
jl
jle
push
aas
insl
repz
imul
xchg
pop
adc
jge
das
fstl
fldenv
xor
ret
mov
push
mov
cmp
xchg
sub
sub
or
cmpsb
adc
cmp
jo
pusha
pop
sub
lret
cmpsl
movsb
xchg
push
push
inc
and
add
jbe
loopne,pt
test
out
pop
pop
pop
mov
adc
xchg
adc
leave
test
xchg
imul
dec
hlt
push
pop
xchg
xor
jg
mov
fisttps
cmpsb
out
icebp
cmpsb
fwait
pop
popf
dec
cmp
je
push
jecxz
mov
lods
mov
addr16
push
or
and
ret
mov
stos
add
test
and
mov
fistl
pop
ror
adc
dec
loop
idivb
rorb
xor
outsb
fxam
sbb
fsts
sbb
mov
push
xchg
das
inc
aaa
cmp
idivl
sbb
xor
sti
jge
imul
xchg
or
es
xchg
cmp
out
in
fmull
pop
jnp
xchg
dec
test
clc
xchg
pop
add
xchg
out
pop
xchg
add
push
in
addb
or
xchg
xor
test
nop
aam
push
nop
nop
push
addr16
xorl
fldl
out
and
ja
aam
xchg
cli
mov
sbb
lea
sbb
out
out
das
cltd
jmp
aaa
faddl
pop
js
pop
les
cli
scas
lock
das
xor
icebp
aam
fidivs
adc
pop
bound
mov
pop
mov
push
inc
test
inc
jl
xchg
ficoms
pop
or
cli
pop
outsb
pop
push
push
adc
cmpsb
repz
cli
and
cmp
or
cmp
bound
bound
or
push
mov
push
loop
mull
pop
pop
xor
ja
in
xor
or
fcomip
jge
shll
or
je
and
aad
test
or
and
divl
mov
mov
xor
popa
int
in
dec
in
jmp
pop
pop
mov
ret
loope
ret
mov
cmpsb
mov
mov
dec
xchg
dec
pop
lret
inc
pop
sub
or
mov
xor
xsha256
cmpsb
adc
xorb
fildll
mov
addb
ja
cmp
sbb
fldl
sbb
pop
xchg
mov
imul
inc
pop
and
cmp
repnz
sarl
ja
insb
push
lret
les
sbb
xchg
mov
ds
out
inc
jae
imul
add
mov
pusha
jnp
sar
es
out
enter
insl
mov
lahf
lods
adc
aam
xchg
mov
pop
insb
and
scas
pop
in
insl
sub
idivb
xor
inc
gs
pop
pop
dec
fisubrl
xor
lods
lds
shr
int
pusha
lcall
ds
xlat
xor
mov
stos
fwait
or
jb
jns
pushf
out
mov
xchg
addr16
jae
inc
adc
adc
mov
jne
insl
rcrb
adc
sahf
sbb
lods
addl
inc
xchg
inc
mov
pop
adc
jno
out
pushf
adc
fisttps
outsl
inc
out
test
mov
bound
push
dec
add
loop
movsl
sub
repnz
ss
xchg
addr16
mov
aam
fisubrs
xchg
and
mov
cmp
test
push
mov
xlat
les
mov
jns
pop
jns
mov
and
inc
push
mov
insl
sbb
hlt
push
aas
outsb
push
ror
or
mov
jp
mov
push
gs
xlat
fiadds
dec
bound
sbbl
outsl
cld
out
sbbb
std
sahf
loop
es
dec
cwtl
loopne
inc
pop
inc
lods
adc
inc
into
movsb
fwait
dec
push
push
ljmp
inc
mov
jno
sbb
inc
mov
push
push
cmp
les
pop
in
mov
xor
sbb
sbb
int3
sahf
outsl
fldl
gs
mov
mov
pop
out
leave
xchg
lock
cmpb
or
cli
or
jg
dec
and
mov
dec
xchg
in
stos
mov
xor
mov
and
loop
cwtl
xor
adcl
and
es
pop
pushf
bound
loopne
xor
in
sub
fimuls
fwait
gs
cltd
xor
xor
leave
out
jl
scas
and
jnp
or
and
push
imul
mov
xchg
pop
add
cmp
aas
lock
fidivl
loope
sbb
add
shrl
and
mov
pop
cmp
cmpsb
jge
aam
outsb
push
inc
xchg
in
add
ja
cli
pusha
mov
in
cmp
das
test
push
xchg
add
add
mov
cmp
sub
add
jg
test
lret
mov
mov
adc
ret
xorl
sub
sbb
cwtl
stos
adc
or
add
cmp
jne
push
sbb
fnstsw
mov
cmp
mov
mov
add
sarl
cmp
xchg
jae
rorl
dec
mov
adc
testl
and
lds
imul
mov
insl
inc
outsb
mov
inc
mov
mov
adc
add
jge
cmpsb
imul
shll
adc
jmp
ret
orl
data16
ret
sub
sbb
xor
jp
sub
mov
xchg
pop
lock
int3
in
dec
call
lcall
ret
add
sbb
divl
cmp
repz
call
clc
xchg
cld
sbb
jle
inc
push
sub
clc
pop
cmp
mov
and
lahf
jg
inc
pop
push
xchg
add
cmp
or
rcrl
incl
jg
cmp
pop
lock
loope
sub
push
xchg
aad
arpl
arpl
mov
insl
daa
xor
stc
push
or
pop
imul
movsl
mov
inc
fsubrl
fst
fwait
xlat
mov
sub
cmpsb
push
sub
mov
pop
sub
pop
pop
in
dec
adc
stos
pop
pop
jecxz
and
shrb
xchg
mov
fisubrs
jbe
jnp
in
shlb
jno
lret
repz
add
fdivs
mov
sbb
mov
xlat
fwait
mov
aad
mov
mov
jp
mov
dec
outsl
adc
xchg
aaa
int
xchg
ss
mov
jnp
sbb
pop
or
push
jmp
cltd
cmp
mov
mov
sbb
pop
and
mov
push
test
lret
inc
pop
icebp
leave
jns
lods
jae
jnp
test
aad
jg
ljmp
icebp
or
test
sbb
int
sbb
test
push
imul
test
pop
fisubrs
pop
repnz
push
xor
mov
lret
repz
inc
idivb
lods
dec
subb
sub
dec
xchg
divl
stc
jnp
push
mov
dec
pop
jg
mov
or
std
pop
shl
ds
mov
jno
fisttpll
jb
xor
std
mov
out
popf
pop
fcompl
mov
sti
enter
or
ret
inc
and
sub
std
aas
std
int
dec
repnz
and
sar
enter
inc
sub
cld
dec
iret
mov
dec
jg
rcl
jmp
test
daa
andl
es
scas
cli
iret
adc
mov
lret
push
inc
jmp
mov
in
movb
sti
rolb
pop
int3
pop
popf
ljmp
lahf
imul
jg
dec
in
mov
and
int
sti
dec
repnz
push
adc
cmp
and
mov
adc
push
mov
sub
xchg
movups
sbb
add
adc
sbb
rolb
andl
dec
icebp
pop
or
and
and
mov
xor
cmc
ja
mov
pop
daa
push
push
lret
jp
or
scas
mov
cmp
cmp
imul
fmul
rcll
int
iret
fcompl
in
inc
push
xor
int3
mov
pop
push
ret
gs
repz
sti
push
adc
lret
lahf
jg
insb
dec
repz
out
int
jge
pop
mov
subb
sbb
data16
jg
sbb
insl
fimull
pop
jg
xchg
addb
leave
push
rolb
ficoms
data16
ljmp
enter
jp
je
xor
mov
push
loop
push
cwtl
sahf
add
loope
testl
ret
fisubl
jge
shrb
ffree
or
add
sbb
sbb
sbb
and
mov
xor
mov
mov
cwtl
mov
jno
or
dec
cld
xchg
sbb
jb
pop
stos
cmp
push
insl
shll
and
pop
outsl
subb
push
xchg
xchg
sub
inc
aaa
push
sbb
cs
or
movsb
pop
ljmp
scas
mov
repz
lahf
sarb
out
xorb
cld
lcall
and
inc
jb
inc
cmp
cld
pop
leave
stc
jno
adc
add
inc
sub
mov
addr16
jp
add
cs
not
cmpsl
pushf
jg
lock
ret
or
lods
mov
and
cld
les
orb
movsb
cld
pop
push
in
popf
out
pop
adc
mov
sub
cmp
cmp
inc
sbb
jle
iret
dec
mov
js
and
or
jle
mov
fwait
aas
out
adcb
hlt
or
addl
push
out
push
xor
outsl
mov
outsb
and
int3
daa
out
mov
mov
mov
insl
cmp
bound
push
or
movsb
adc
sub
push
jo
mov
cmp
daa
cltd
pushf
xchg
xchg
xor
add
inc
adc
imul
cmpsb
lods
cmp
ret
or
jnp
dec
aam
iret
lock
mov
outsb
mov
mov
inc
stos
dec
mov
scas
dec
hlt
dec
mov
sub
mov
mov
mov
arpl
flds
mov
dec
mov
dec
adc
xchg
inc
in
aam
imul
mov
xchg
add
pop
push
fs
mov
fwait
shlb
xor
movsb
xor
les
sub
xchg
pop
sbb
int3
loopne
rcll
adc
sbb
jnp
jo
mov
enter
ljmp
mov
mov
aaa
in
or
jb
mov
and
add
xor
or
insl
call
push
sahf
mov
jecxz
push
rcrb
stc
sbb
fidivs
xchg
push
or
pop
into
cmpsl
push
test
fs
imul
inc
mov
sbb
cmpb
jecxz
sub
cmpsl
nop
addr16
pop
adc
cmp
inc
cmpsb
das
ljmp
shrb
xchg
sbb
xchg
popa
fwait
loopne
gs
ret
rcrb
cmpsb
xchg
or
mov
sbb
rolb
xor
std
cmp
cmp
sub
fisttpll
js
shrb
jecxz
mov
mov
pop
jle
xchg
and
mov
adc
and
inc
divb
mov
out
lcall
imul
xchg
mov
scas
js
test
add
insl
dec
es
stc
mov
lret
add
adc
lods
leave
mov
inc
cmp
xchg
pop
sub
mov
lcall
in
mov
insb
mov
cmp
or
aam
push
pop
sbb
sbb
sahf
pop
rorl
mov
or
test
in
int3
dec
fs
in
xor
je
mov
std
xchg
ljmp
lock
push
neg
aam
adc
mov
push
or
and
dec
jle
add
sub
int
jl
push
cmp
push
or
xchg
inc
shrl
xor
mov
dec
mov
sbb
shrl
jmp
add
hlt
psrlw
movsl
push
mov
mov
cs
push
cmp
shl
xor
outsb
ss
sti
sub
xchg
shr
outsb
fidivs
std
rcl
pop
mov
push
bound
out
mov
push
lds
sub
jae
mov
movaps
notl
inc
cmp
or
adc
sub
je,pt
pushf
mov
add
mov
pushf
pop
pop
mov
cmp
adc
mov
aad
test
xlat
push
out
jae
push
js
mov
pop
into
dec
xor
push
inc
ret
mov
dec
leave
mov
mov
jl
jp
hlt
mov
jmp
cmp
xor
dec
sbb
call
jnp
loop
inc
add
ja
lret
and
idivl
xlat
movsb
mov
xor
daa
scas
cmpsb
and
cld
pop
adc
sahf
mov
inc
jp
pop
xlat
and
cmc
mov
sub
div
jns
shll
jo
cld
xchg
push
sbb
adc
in
bound
mov
fwait
adc
lods
pop
aam
rcll
ds
in
jae
jg
testb
mov
mov
adcl
shll
dec
mov
xchg
negb
stos
ds
and
aas
adcl
cld
sub
or
div
xor
dec
fwait
sbb
movsl
pop
jl
sub
pop
xchg
mov
push
xchg
lahf
add
mov
pop
adc
cmc
flds
js
push
jle
insl
test
stos
dec
add
jmp
out
lret
ss
loopne
mov
aam
cmpsb
cli
subl
mov
push
xor
or
dec
jnp
sub
dec
sti
cld
xchg
dec
pop
xchg
pop
sarb
fstpt
pop
xor
cli
jecxz
xchg
addr16
push
inc
lea
decb
lret
enter
pop
and
lods
or
in
arpl
mov
and
and
pop
sahf
sahf
xor
jg
jnp
pop
cmp
inc
ss
dec
xchg
je
in
dec
mov
dec
mov
push
cmpsb
lods
add
add
dec
cltd
sbb
iret
negl
dec
insb
test
lods
into
jmp
xor
sub
mov
push
leave
sbb
cmp
fcoms
or
sbb
repz
push
cltd
pop
or
icebp
jae
adc
adc
fistpl
iret
add
dec
insb
xchg
lods
mov
jno
jno
out
xchg
and
fiadds
sub
inc
push
lahf
leave
ss
fadd
jmp
movsl
imul
xor
dec
push
fadds
push
push
bound
jl
pop
arpl
inc
cmp
enter
push
fildll
sbb
fwait
aam
push
inc
call
aaa
out
or
xor
or
push
bound
inc
fnsave
aaa
jp
mov
int3
or
sbb
leave
xchg
jb
sahf
sub
lcall
xchg
fidivrs
test
imul
sbb
jb
mov
push
mov
jbe
loop
or
ror
movsl
jle
iret
cmp
fs
lods
sbbl
cwtl
push
pop
jo
inc
pop
push
xchg
bound
dec
cmp
stos
dec
xor
das
mov
nop
out
dec
xor
mov
vpdpbusd
jo
fwait
outsl
or
mov
or
cmpsb
popa
inc
push
sub
inc
outsb
imul
mov
jle
push
jae
cmpsb
xor
shrb
loope
jo
int3
pop
add
imul
enter
rorl
rol
adc
sbb
in
js
push
dec
clc
insl
jecxz
hlt
add
out
inc
push
test
mov
or
adc
outsl
and
mov
cwtl
rorb
int
aad
scas
pop
scas
lahf
cld
cltd
mov
cmp
divl
xor
push
lcall
inc
int
dec
scas
xor
jnp
push
addr16
insl
push
arpl
dec
in
outsb
js
cwtl
sti
shrb
insl
pop
sbb
sub
mov
adc
dec
mov
lret
pushf
subl
jge
inc
in
xor
mov
push
fstpt
cmp
cltd
ret
in
mov
cmp
repz
sub
ss
mov
ss
pop
repnz
add
in
or
xchg
mov
adc
xor
xor
in
pop
cmp
in
out
popa
cmp
arpl
ds
jg
mov
sub
xor
pop
mov
sbb
lret
je
popf
insb
in
mov
mov
xchg
rorl
repz
lods
pop
adc
mov
mov
jmp
mov
jne
out
adc
jns
ficoms
cmp
jne
add
pop
adc
sub
cmp
adc
xchg
sahf
ret
imul
movsl
or
mov
ficoml
call
mov
lock
jg
mov
notb
enter
sbb
sub
lret
mov
xchg
gs
sbb
add
mov
negb
pop
pop
fbstp
jecxz
inc
sbb
sub
icebp
xchg
sti
inc
and
xor
fildl
ljmp
inc
mov
clc
pop
xchg
stc
fisttpll
jmp
dec
pop
pop
push
cmp
or
mov
dec
popa
jl
or
mov
ds
xorb
shl
sbb
xchg
adc
pop
cmp
jo
pop
cmp
mov
xchg
xchg
int
les
daa
iret
and
rolb
les
lret
add
push
jns
mulb
push
nop
inc
sub
out
gs
sbb
call
call
jg
fisttpll
add
imul
scas
pushf
xchg
mov
lock
int
loopne
adc
inc
push
pop
lods
inc
sbb
popa
jbe
mov
clc
sbb
mov
mov
movsb
xor
push
push
arpl
int3
jecxz
xor
fildl
or
outsl
cmpsb
xchg
jno
adc
xchg
test
and
sub
jle
push
enter
jmp
sbb
jb
lods
outsl
mov
out
loopne
insl
fsubrs
push
xchg
jnp
pop
xchg
sti
dec
ret
sti
out
mov
int3
cltd
push
dec
cmp
push
xchg
jmp
jbe
mov
mov
and
scas
outsl
in
pop
cld
or
add
mov
push
popa
jmp
aad
push
ja
jno
inc
fiaddl
add
shlb
xor
popa
xchg
xchg
jns
imul
xchg
cmpsl
xchg
shll
inc
sbb
xchg
xchg
js
mov
xorl
jno
mov
and
add
jge
wbinvd
popf
and
repz
pop
mov
mov
rolb
ss
xor
into
push
lods
mov
stos
pop
sbb
cs
sub
or
jge
loopne
out
leave
cli
hlt
jle
xchg
add
stos
add
dec
in
add
add
add
cmp
jge
jnp
lods
roll
jmp
repnz
and
insb
test
inc
dec
cwtl
test
test
pop
inc
jo
jns
shr
inc
test
out
adc
xchg
sub
jae
xchg
dec
pusha
clc
loop
inc
fidivl
pop
outsb
xor
push
mov
popa
or
jae
fnstsw
mov
ljmp
jb
xor
out
push
sbb
mov
cmp
jl
mov
cmp
and
jmp
inc
push
pop
ja
int3
mov
jge
cmp
add
scas
dec
jnp
insb
test
sbb
push
jl
aas
out
inc
das
mov
push
sub
mov
sub
aad
stc
mov
push
in
movsl
adc
insb
xchg
push
fdivs
repnz
jp
mov
lods
leave
testb
outsl
cwtl
pop
repz
mov
cmp
cs
sbb
mov
test
test
lcall
xchg
mov
xor
sub
cli
loope
ljmp
and
xchg
shrl
ret
or
cmp
adc
out
lock
mov
lock
and
push
aam
cld
aaa
cmpsb
inc
sbb
or
jne
cmc
jno
sbb
cmp
or
fdiv
and
imul
pop
sbb
arpl
jmp
mov
adcl
test
push
jne
lods
loop
pop
cmp
mov
mov
jbe
inc
fadds
mov
mov
sub
jl
pop
lea
jns
idiv
popf
outsb
les
stos
xchg
in
out
outsb
fldt
adc
ret
jns
outsl
sbb
gs
mov
lea
fst
dec
mov
lods
sbb
dec
inc
xchg
out
jbe
sub
push
inc
mov
or
sarl
push
stos
jl
test
std
out
fidivrs
nop
mov
jb
out
or
adc
mov
xor
mov
and
std
push
push
mov
stos
out
pop
jmp
iret
hlt
mov
lahf
scas
dec
jg
jmp
out
enter
and
jg
push
icebp
push
loopne
das
aad
or
adc
pop
js
jmp
jge
fwait
mov
andl
popf
adc
push
popf
jg
and
push
pop
mov
mov
pop
loop
pop
or
stos
adc
mov
jae
jbe
out
sub
in
out
scas
jl
mov
scas
pop
cmp
fsubrl
push
fisttpl
mul
mov
daa
rclb
mov
sahf
fidivl
jne
push
mov
push
xlat
xchg
rolb
mov
sti
jmp
mov
mov
cli
add
mov
xchg
mov
fmull
add
push
xor
bound
out
out
xchg
lods
dec
cmp
call
mov
xchg
cmc
mov
cmp
int3
xchg
lret
sub
inc
aaa
ret
imul
push
jae
lods
imul
push
popf
xchg
cli
dec
cmp
adc
push
dec
cltd
js
loopne
dec
jae
xchg
push
hlt
subb
shrl
or
dec
insb
fldcw
js
inc
rcl
ljmp
lcall
inc
xchg
xchg
add
jno
sub
imul
aad
mov
dec
push
pop
ss
insb
jp
rcll
out
mov
into
xchg
mov
mov
rcrb
lds
cwtl
pop
adc
test
jne
and
int3
test
addr16
mov
outsb
scas
jo
pusha
mov
leave
push
xchg
add
stc
dec
xchg
jecxz
ret
and
enter
cmp
int
stos
jno
push
or
and
scas
repnz
push
test
cvtps2pi
cli
jb
xor
jae
fmull
in
test
adc
jno
hlt
inc
sarl
jge
ljmp
cmpsb
imul
movsl
push
xor
rcll
and
mov
mul
jo
xor
es
cmp
rcl
dec
dec
repz
ljmp
test
and
fwait
jmp
in
or
push
out
imulb
lds
in
push
mov
adc
sbb
pop
jnp
int
je
xchg
push
and
inc
add
mov
or
scas
fdivl
or
or
jae
adc
arpl
repnz
lods
ds
dec
push
jge
pop
addr16
sub
insb
lds
jmp
xchg
pusha
jle
enter
scas
clc
and
mov
xchg
das
inc
push
pop
pop
je
sbb
adc
mov
mov
mov
test
cmp
ss
mov
xor
inc
mov
sbb
mov
aad
and
nop
int
mov
cs
insl
push
int3
pop
jbe
int3
jle
mov
sbb
jmp
mov
shll
les
scas
mov
mov
ss
pusha
inc
sahf
pusha
dec
xchg
repz
dec
xchg
fsubrl
xchg
fwait
popa
push
test
sub
jno
or
pop
cmc
call
mov
push
cs
jge
adc
push
fs
ljmp
xchg
jmp
cltd
pusha
or
ret
pop
jmp
adc
cmpsl
imul
fldcw
pop
dec
fisubl
push
sahf
sbb
fisubl
leave
loop
push
mov
loopne
pop
ret
divl
dec
fs
push
sbb
insb
push
push
xchg
or
xchg
and
xchg
or
fs
jmp
xchg
pop
shlb
and
adc
leave
mov
rcrl
jmp
int3
imul
pop
sbb
daa
mov
icebp
in
into
loop
pop
clc
adc
xchg
xchg
inc
mov
adc
stos
ret
cwtl
leave
stos
loop
dec
fst
cmpsl
sbb
mov
je
lahf
xchg
sbb
fstpt
jae
mov
mov
outsb
jmp
lret
inc
cmp
cmp
inc
mov
fsubs
dec
pop
lds
es
into
mov
je
out
adc
mov
inc
sbbl
rolb
test
mov
jecxz
and
test
mov
xchg
xorl
out
pop
push
jns
mov
fcompl
mov
jg
add
shlb
cli
sti
dec
mov
scas
ret
and
push
lock
fcomi
cmp
fcomps
pop
push
mov
inc
cmp
in
push
out
fcos
mov
cmc
sarl
push
mov
ss
scas
sarb
pop
in
pusha
mov
adc
and
neg
mov
adc
pop
jle
mov
ror
ja
jl
or
cli
adc
jle
xor
jnp
pmaxsw
cs
push
movsl
pop
xor
shl
repnz
sub
jle
dec
pop
pushf
ljmp
and
cmp
push
pop
pop
cs
pop
adc
sub
mov
int
inc
dec
mov
fwait
dec
and
xchg
xor
jmp
pop
imul
mov
cmp
je
mov
mov
mov
ss
addr16
sbbl
mov
mov
adc
sub
loopne
fiaddl
jbe,pn
add
mov
pop
add
roll
les
imull
cli
loopne
cmp
stos
sub
je
push
push
sub
arpl
lock
xor
adc
fcomps
negb
sahf
fistl
mov
sbb
jae
icebp
lods
lds
push
mov
call
dec
mov
imul
pop
fwait
lods
sahf
sub
pusha
xchg
cs
jb
sub
push
xchg
dec
test
inc
adc
dec
ret
jo
icebp
xor
or
pop
mov
call
leave
lret
push
aas
jp
cwtl
ss
pop
push
dec
sub
pushf
xchg
pop
or
xchg
mov
aam
popa
adc
mov
xchg
das
mov
push
cvttps2pi
xlat
pop
xchg
int3
mov
mov
xor
dec
dec
clc
outsb
mov
testb
push
cltd
mov
jg
mov
bswap
hlt
shr
jmp
or
jge
or
jecxz
test
gs
cli
mov
lods
inc
jb
filds
fs
dec
insl
mov
inc
and
fsubrs
mov
in
mov
push
imul
dec
xchg
mov
in
test
fimuls
sbbb
cmp
les
mov
push
xor
dec
add
addb
or
mov
cmp
fucomi
xchg
xor
addl
nop
test
push
jle
pop
xchg
insl
xor
fcoms
popa
mov
bound
xchg
inc
daa
cmp
lods
dec
dec
je
outsl
imull
push
mov
lds
hlt
mov
test
cmp
jns
ret
fidivrs
repnz
sbb
cs
push
fsts
inc
adc
int
lock
xor
rclb
jecxz
pop
mov
nop
adc
mov
mov
push
std
jl
shll
dec
rcrb
xchg
mov
push
rorl
jecxz
lea
add
js
data16
mov
test
addr16
xchg
jmp
cmc
xchg
jmp
bound
outsb
or
mov
fisttpl
into
andl
and
lds
pusha
mov
fldl
cmpsb
icebp
add
mov
mov
aad
bound
out
insb
ss
sub
mov
dec
pop
mov
adc
popfw
xchg
leave
adc
sbb
movb
test
fcmovnbe
push
sbb
lea
jmp
sahf
mov
cmp
shll
push
xchg
pop
xor
dec
ret
jb
lods
fbstp
fists
jns
bound
scas
and
ret
sub
mov
imull
dec
pop
hlt
stc
or
dec
or
sub
sbb
dec
sbb
nop
hlt
mov
add
dec
mov
popf
imul
or
rcl
arpl
dec
es
in
push
push
movsl
jl
movsb
push
jmp
pop
cwtl
fs
cwtl
adc
sbb
xchg
and
in
mov
or
sub
xchg
jl
jmp
loope
cmpsb
jp
add
sahf
fldcw
sbb
fldl
idivl
sub
repnz
scas
stc
mov
pop
lret
movq
lret
xor
pop
sahf
repz
xchg
mov
ljmp
mov
push
lahf
popf
lea
dec
test
adc
push
and
inc
fwait
or
sbb
orl
scas
int
mov
jle
outsb
mov
pop
ja
jge
lds
jnp
cmc
mov
push
insl
in
xlat
jnp
sub
pop
sbb
repz
rorl
push
lret
rcrl
mov
in
hlt
jbe
and
or
arpl
xor
or
jae
les
ret
popl
or
shrb
loop
add
ljmp
pause
test
test
xchg
jbe
lahf
sahf
cmp
iret
inc
mov
ljmp
loop
flds
xor
mov
or
fsubrs
dec
jl
pop
test
pusha
cmp
push
popa
in
and
push
fwait
xchg
mov
push
icebp
push
fidivrl
ds
jp
movsl
sbb
adc
lods
pop
or
mov
cmpsl
insl
ret
hlt
mov
pop
mov
xchg
sub
popl
jmp
xchg
rclb
jno
mov
fnsave
sub
lcall
int
inc
fxtract
cmpsb
mov
call
pop
sub
sub
adc
cmp
cmp
imul
push
jl
inc
sub
inc
mov
pop
dec
push
xchg
dec
mov
push
or
xchg
sbb
adc
scas
enter
mov
ja
scas
popf
fdiv
pop
ja
in
xor
mov
shll
xor
ss
pop
gs
adc
sahf
sub
lods
ret
lea
sub
jp
mov
mull
push
fs
int3
sbb
addr16
js
jmp
jmp
loop
mov
inc
iret
xlat
ja
pop
or
hlt
scas
xchg
cmp
push
ds
adc
pusha
aas
mov
mov
cmp
sbb
adc
sbb
add
mov
mov
pop
out
lods
jp
out
pushf
jmp
lret
lods
into
sbb
mov
mov
and
push
mov
lahf
cmpsb
dec
or
imul
adc
adc
fnstsw
sub
xor
add
stos
inc
cli
js
dec
xor
and
push
cmpsl
pop
inc
stc
sbb
jb
ljmp
dec
xchg
xor
sub
mov
call
sti
jae
push
add
cs
push
xor
fwait
add
lcall
pop
aaa
or
sub
mov
jne
lods
jecxz
idivb
xchg
mov
mov
sahf
mov
jb
adc
lret
shlb
inc
popf
jno
sub
xlat
xor
dec
imul
pop
mov
aad
fidivs
stos
popa
mov
outsl
fwait
or
fwait
or
mov
cltd
mov
rcll
pop
outsb
push
mov
mov
iret
js
jecxz
push
je
pop
cld
lods
jmp
mov
dec
pop
adc
test
movsb
loope
lret
jp
or
adc
pushf
int
mov
rcr
add
hlt
lahf
stos
decl
lods
inc
imul
out
fldcw
dec
cmp
jae
adc
lods
jns
or
or
jle
jbe
cmp
xchg
imul
mov
popa
inc
sub
sub
cmpsb
cmp
cli
cli
mov
sub
leave
arpl
dec
mov
aas
sub
push
cmpsb
pop
ja
dec
jo
and
loopne
sub
decl
out
mov
fnsave
ret
movsl
js
mov
cmp
add
sbb
lcall
inc
mov
lret
push
les
xchg
aaa
decl
jnp
aaa
push
iret
int3
adcl
push
dec
xlat
mov
sbb
xchg
dec
dec
sub
idivb
stc
add
xchg
fsubr
andl
sub
xchg
sahf
sbb
test
sub
clc
mov
aam
or
mov
mov
daa
sbb
mov
mov
cmpsb
dec
adc
xchg
mov
fsts
ljmp
mov
fwait
push
bound
arpl
dec
jecxz
sbb
mov
sbb
mov
loope
mov
or
inc
int3
or
push
scas
mov
das
adc
sarl
push
mov
dec
push
cmp
pushf
pop
sbb
or
rcll
lock
and
sub
mov
repnz
push
lret
fistpl
sub
in
loope
sub
mov
cmp
and
lahf
cli
jbe
or
lret
orb
push
and
ret
inc
inc
jmp
dec
pop
inc
or
leave
cmp
xlat
aaa
xchg
push
lock
jo
inc
scas
popa
dec
lock
cltd
add
add
sbb
jecxz
dec
aas
in
jg
out
int3
or
pop
out
mov
or
sbb
push
jg
mov
fs
cli
add
outsl
add
int3
out
mov
sub
in
scas
daa
sub
dec
js
ja
inc
mov
xor
cmc
xor
adc
push
xor
cmp
jl
int3
jno
sbb
mov
mov
jo
mov
stc
outsl
adc
jb
data16
mov
mov
cs
mov
jl
shl
cmp
and
jg
mov
jmp
cmp
and
xchg
out
inc
into
sub
add
mov
inc
xchg
add
aaa
lock
popa
outsl
or
adc
lods
push
imul
xor
in
rorl
in
jne
cmpl
mov
sub
mov
sbb
loopne
and
add
iret
in
arpl
ror
leave
cmpsb
data16
flds
loop
mov
sbb
mov
aad
cltd
in
or
push
sarl
inc
outsl
icebp
pop
cmpl
rcrb
push
loop
ds
sbb
sarl
jp
js
xor
fmull
sub
pop
addr16
or
xor
or
sbb
jbe
fists
sub
in
rclb
pop
out
adc
movsl
dec
arpl
enter
jnp
mov
subb
cs
sub
clc
lods
add
push
lcall
jnp
pop
es
dec
push
jecxz
push
jne
fsubs
cmp
mov
xchg
sub
sub
iret
inc
test
test
leave
pop
and
aaa
pop
mov
flds
xor
pop
in
mov
adc
xchg
jge
sbb
icebp
mov
jno
lds
cmpsl
jp
lcall
outsl
pop
rcl
scas
int
ja
js
adcb
mov
adc
ret
enter
add
xor
pop
or
mov
pop
mov
sub
movsl
or
cmp
scas
mov
adc
test
jae
mov
stos
fcompl
xchg
mov
int
pop
sbb
jae
sub
fdivrs
mov
mov
add
jo
scas
mov
ficomps
pop
sbb
loop
mov
push
test
mov
mov
out
or
jle
aaa
and
mov
lea
cmp
popa
adc
repnz
xchg
dec
rcll
jo
xchg
inc
and
dec
pop
adc
push
mov
push
popf
jae
cmp
cwtl
pop
daa
fstpl
mov
outsb
loopne
lret
daa
or
lods
sahf
or
imul
insb
pop
ja
mov
out
pop
scas
addb
aad
fsts
aas
cli
pop
mov
test
xchg
pop
std
ds
bound
push
fiaddl
add
inc
adc
rol
cwtl
repnz
ds
inc
pop
mov
mov
xchg
inc
sbb
imul
aas
mov
ja
and
sub
stos
pop
test
das
cmp
test
mov
loop
sbb
cmc
push
jne
push
pop
cmp
pop
and
stos
pop
xchg
sub
out
mov
pop
addr16
fsub
sahf
and
xchg
or
xchg
enter
into
mov
push
sub
rcrb
jge
jle
shl
lea
pop
je
fxch
stc
test
jl
cmp
sbb
sub
aas
scas
pop
loope
xlat
std
shl
mov
test
jo
dec
dec
mov
xor
and
ret
dec
pushw
ljmp
push
add
mov
in
addr16
push
sti
sbb
pop
fsub
sbb
push
cs
lods
inc
adc
xchg
and
dec
cltd
inc
dec
inc
aaa
out
cmp
push
lret
push
sbb
dec
and
jle
inc
ss
and
insl
mov
xchg
out
icebp
lret
aaa
dec
sbb
inc
fwait
push
mov
je
mov
or
aam
test
fdivrs
sahf
addr16
fisubrl
testl
sub
les
and
lahf
jmp
and
xor
xor
xor
pop
mov
inc
inc
push
jle
outsb
in
fisttpll
lret
fildll
push
into
mov
push
in
cld
mov
mov
dec
stc
cs
or
repz
lea
leave
xchg
dec
repz
inc
jnp
push
je
and
in
es
clc
adc
mov
mov
cwtl
shlb
daa
popf
mov
push
xchg
stos
and
push
cmc
xor
sbb
mov
fldenv
xor
and
jge
or
iret
test
iret
or
mov
rclb
xchg
xor
mov
pop
push
pop
loop
out
xchg
pop
pusha
lahf
add
jp
cmc
subb
hlt
dec
imul
call
lahf
cwtl
iret
lea
inc
jle
adc
mov
mov
icebp
push
mov
arpl
nop
call
mov
cmc
adcl
sarb
add
xchg
mov
addr16
lcall
cwtl
push
jne
fsubs
nop
pop
in
aad
inc
jb
jne
sbb
enter
gs
sub
ss
xor
mov
inc
cmp
pop
mov
ds
cmpsb
xchg
inc
cmp
pop
dec
jg
sub
jbe
jl
pop
push
cmpsb
sahf
pop
adc
sahf
jb
mov
fldenv
xorl
inc
les
sub
scas
cltd
mov
xor
jecxz
xchg
lods
mov
movsl
xor
pop
mov
inc
lret
push
imul
fstpt
fldl
clc
fs
call
and
push
mov
idivl
dec
xchg
hlt
js
fisttps
aaa
mov
xlat
test
jbe
fisttpll
mov
ds
sbb
call
cmp
dec
sub
inc
push
out
xchg
dec
add
ds
jp
push
sti
stos
aam
adc
pop
outsl
push
add
dec
xchg
test
lret
dec
andl
test
cld
and
push
call
cli
mov
cmp
dec
fdivr
lock
mov
dec
and
lds
dec
outsb
mov
pop
test
adc
dec
hlt
fidivrs
push
jae
in
out
pop
punpckhbw
insb
les
add
inc
and
jecxz
imul
mov
mov
idiv
inc
push
flds
mov
aas
lret
push
pushf
xor
lods
cmpsl
out
mov
jecxz
jb
inc
ficoml
push
or
push
nop
scas
xor
sub
les
arpl
cwtl
jbe
fninit
or
mov
jp
cmp
fwait
movhps
int3
cld
test
sbb
hlt
out
mov
pop
stos
lret
out
in
sahf
sub
mov
xchg
jecxz
push
mov
mov
push
pop
push
filds
mov
add
jnp
sub
ffreep
insb
insb
lods
int
sti
dec
jp
cmc
push
mov
stos
std
jge
cmc
inc
cwtl
inc
jnp
mov
bound
xchg
rcr
inc
fnstcw
leave
fnstcw
movsb
insb
fidivs
out
xor
mov
pop
fcmovbe
insl
sbb
xchg
ja
xchg
pop
imul
dec
scas
aaa
mov
or
testl
mov
mov
add
add
call
mov
addb
fdivl
push
cmp
scas
jg
je
out
inc
fstp
int3
in
pop
sub
aas
pop
pushf
adc
outsl
mov
mov
pushf
xor
pop
xchg
jge
push
out
lock
popa
mov
jecxz
inc
and
pushf
or
lods
mov
lcall
push
xchg
ret
popa
cmp
jmp
cmpsb
fisubrs
aad
clc
sub
jmp
or
push
lea
hlt
imul
movsb
hlt
outsl
fmull
jl
adc
dec
push
sub
mov
adc
aam
mov
add
push
cmpsl
out
insl
sub
test
pop
cmpb
fmull
enter
outsb
test
movaps
pusha
sbb
mov
adcl
push
xchg
fmull
cltd
xchg
xor
adc
mov
aam
sbb
push
adc
push
push
mov
mov
popa
xchg
mov
sub
sbb
xor
inc
inc
push
iret
cmp
cmc
or
jnp
sub
xor
pop
xchg
popa
andnps
cld
cmp
pop
pop
inc
xchg
or
dec
int
out
addl
cmp
les
inc
sub
push
xchg
mov
push
mov
jns
xlat
popa
fadds
mov
repnz
loop
jl
mov
fdivrl
jns
lret
mov
push
jbe
aad
xor
pop
clc
in
jmp
cmp
aad
lcall
push
neg
add
clc
test
stos
bound
out
ret
jnp
in
mov
js
mov
adc
xor
stos
and
mov
fldcw
mov
ret
mov
mov
jae
jne
addl
call
iret
fimull
dec
and
fs
in
xchg
sub
out
nop
imull
push
sbb
js
push
cpuid
fdivr
out
das
lea
push
and
outsl
movsl
fmul
sub
idivl
pop
je
ds
mov
ljmp
inc
fistps
loope
hlt
add
cmp
popa
es
cmp
mov
push
dec
out
orl
dec
or
jecxz
xor
outsl
test
jl
xchg
add
stc
call
rcll
repz
test
mov
jmp
inc
lret
out
icebp
sahf
dec
nop
lret
aas
and
jns
push
xchg
jmp
mov
and
push
push
push
cmp
jp
push
repz
push
jl
fwait
and
mov
das
push
inc
pop
outsl
cmp
push
pop
insb
out
inc
dec
fsub
or
lods
push
push
test
sub
rol
outsb
jbe
mov
mulb
aaa
int
mov
dec
cmp
xchg
pop
outsb
ret
rcll
or
jl
mov
sbb
pop
mov
inc
scas
in
cmp
mov
sbb
adc
mov
dec
js
lret
xchg
mov
adcl
or
cmp
je
and
mov
push
inc
loopne
add
not
inc
div
aam
fucomp
jge
mov
shrb
inc
push
lea
stos
cmp
loope
pop
xchg
jl
sbb
jg
fwait
mov
cmp
lods
jp
imul
punpcklbw
cli
icebp
repz
add
ja
ds
mov
bound
clc
cmp
xor
and
xor
push
xor
or
ss
imul
aaa
fsubs
add
icebp
fs
dec
in
sub
mov
scas
and
cli
jle
push
stos
jb
lahf
loope
addl
cmpsl
arpl
cmpsl
sub
inc
pop
scas
jle
std
pop
sub
jl
cltd
push
push
dec
push
scas
addr16
inc
shlb
rolb
jp
in
mov
fidivl
scas
cmp
dec
les
jne
in
cmp
rorl
daa
out
int3
mov
xchg
loopne
jmp
sub
mov
arpl
cmp
sub
pop
xchg
ds
ficomps
push
add
int3
mov
push
sti
sub
shlb
dec
jnp
jae,pn
in
dec
jbe
fcompl
mov
lods
inc
or
test
fistps
imul
inc
fnsave
adc
jne
push
pusha
call
xor
mov
loopne
pop
ljmp
cmpb
mov
jl
std
push
mov
and
mov
lods
daa
iret
pop
ja
jmp
insl
fstp
add
add
popf
sub
lds
lock
fldl2t
dec
sarl
cwtl
xor
daa
int
mov
jae
xor
mov
stos
xor
xor
jle
jmp
bound
push
es
mov
cmp
push
in
inc
ds
sbb
cmp
mov
arpl
and
dec
xchg
popf
movsl
jbe
enter
repnz
pop
xchg
sti
aam
lret
mov
xor
adc
shl
nop
add
cmpsb
cmpsb
sbb
out
leave
adc
inc
jb
mov
adc
xchg
push
cmpsl
jns
add
fildl
xchg
sub
cmp
sarl
and
vfmadd231ps
lock
pop
into
lea
jecxz
lahf
jnp
cwtl
inc
and
and
xor
loop
mov
stc
scas
ret
fldenv
repnz
iret
roll
out
sub
ds
mov
xor
in
loopne
xabort
dec
cmp
icebp
mov
adc
js
shlb
std
push
pop
xor
mov
movb
fistps
jns
push
jecxz
popf
popa
adc
pop
cwtl
push
mov
test
ljmp
add
pop
paddw
jmp
scas
mov
aaa
ficomps
pop
inc
mov
dec
and
addr16
inc
fstl
popf
and
adc
dec
in
ret
add
mov
inc
popf
dec
jp
xchg
cld
arpl
mov
adc
inc
push
stc
pop
xor
pop
add
cltd
fcompl
dec
test
mov
dec
xchg
in
scas
aam
pusha
ret
data16
dec
add
ljmp
inc
lds
orl
ja
daa
pop
int3
fs
loop
push
jno
jnp
jle
out
mov
push
lods
rcrb
pop
xor
push
lods
in
cmp
aas
js
mov
push
jnp
test
insb
jl
in
shll
jle
pop
or
mov
leave
sub
mov
dec
lret
mov
out
ret
xor
outsl
sahf
or
and
lods
sbb
out
out
sbb
add
add
sti
test
push
daa
push
mov
movsl
jl
add
jg
jg
cmp
ror
insb
cmpsb
mov
shll
cmp
movsb
adc
cmp
sbb
add
stos
enter
insl
jecxz
lret
add
cld
xor
lods
cmp
jbe
mov
mov
inc
jno
jp
jbe
pop
mov
dec
mov
or
rcl
outsb
sub
jnp
push
mov
inc
inc
pop
mov
push
leave
xchg
shll
pop
pop
jns
lahf
andl
popa
lock
mov
xchg
cmp
mov
sub
lahf
cmp
pop
push
lea
sbb
ret
inc
insl
mov
ret
xchg
inc
aaa
mov
cmp
and
xor
inc
xchg
mov
lock
ret
pop
arpl
adc
add
or
in
out
pushf
jae
and
aaa
adc
imul
imul
dec
push
inc
imul
adc
insl
mov
loop
jl
jno
cmpl
mov
mov
fwait
or
adc
iret
dec
and
mov
loopne
movsl
movsl
fnsave
test
sti
inc
sub
iret
or
push
jmp
in
jbe
enter
jnp
mov
insb
add
add
push
popf
je
mov
sub
imul
lret
sbb
call
aas
clc
rclb
adc
addb
sbb
mov
int
mov
fnstcw
seto
lods
xor
cmp
sbb
test
dec
ds
pop
xorb
imul
daa
test
frstor
or
cwtl
push
fimull
pop
inc
movsl
inc
jns
or
mov
dec
arpl
lcall
push
jge
sub
xor
adc
cmp
aad
lods
and
dec
scas
sub
and
dec
mov
ja
jl
gs
xchg
int3
mov
mov
leave
aaa
aam
cltd
int
add
hlt
cmp
out
push
cwtl
xchg
jne
enter
insl
inc
fsubr
xlat
inc
outsl
add
xor
cli
mov
xchg
imul
add
mov
movsb
dec
cmp
mov
lods
shr
jmp
insb
pop
lods
fidivrl
enter
cmpsb
mov
test
mov
add
jle
das
lcall
jb
imul
in
addr16
in
addr16
push
inc
call
je
dec
cmp
sub
out
push
ja
imul
mov
imul
pop
inc
jbe,pt
jmp
jo
sbb
jbe
mov
stos
cmp
movsl
hlt
pop
and
call
in
mov
movsb
inc
mov
inc
mov
mov
roll
lods
push
je
loope
pop
repz
inc
mov
jo
mov
or
push
or
xchg
jecxz
fwait
mov
fmuls
mov
daa
lds
jb
xchg
and
sub
mov
mov
adc
nop
xchg
mov
mov
pop
clc
and
ret
xor
and
out
mov
or
lahf
jp
idiv
dec
cld
jecxz
mov
stos
xlat
sub
lea
mov
call
sub
popa
xchg
push
sub
inc
out
cmp
dec
jne
sti
xor
bound
clc
mov
shlb
out
sub
leave
mov
jbe
stc
js
mov
fisubl
test
testl
clts
imul
mov
push
ds
rorl
pop
lods
mov
fstpl
mov
xor
xor
add
push
dec
ja
inc
push
dec
lea
jbe
fstl
xor
mov
stos
mov
rclb
inc
adcb
jbe
xchg
stos
jmp
cmpsb
mov
sbbl
add
test
jg
jl
mov
imul
jecxz
sub
out
and
lret
mov
cld
paddb
sahf
clc
lock
pop
adc
inc
inc
sub
ss
xor
inc
and
subb
adc
pop
push
outsl
adc
dec
push
jge
addb
cli
imul
xchg
jp
fisubs
or
mov
adc
fs
add
mov
mov
in
lret
adc
cmp
xchg
bound
adc
fiadds
cmpsb
add
sub
lahf
lret
xor
mov
int3
xlat
pop
jo
pusha
jg
xor
fdiv
lcall
add
aad
jne
cmc
push
jns
xor
push
sti
movsl
imul
insb
cmp
add
lret
inc
adc
add
inc
add
sub
daa
nop
mov
xchg
sti
inc
sbb
fadds
repz
je
cmp
and
sub
es
add
ljmp
lock
mov
mov
inc
leave
jp
out
fdivrs
xchg
rcll
pop
jmp
add
sbb
test
push
dec
outsb
scas
dec
cmp
fcomip
pushf
sbb
sub
cltd
jp
loopne
ds
push
sbb
bound
jnp
or
insl
cwtl
inc
push
cmc
inc
pop
mov
xor
fdiv
add
jae
repz
lds
cmp
iret
push
cmovle
das
pop
outsl
stc
les
push
aad
int
adc
addr16
mov
xlat
int
jg
mov
js
mov
jns
mov
cld
add
andl
arpl
popa
popf
dec
or
inc
jnp
ja
shrl
mov
xlat
lea
mov
pop
fdivp
lea
fisttps
loopne
nop
cmpsl
inc
xchg
push
mov
push
js
ljmp
sub
and
sub
mov
fwait
and
sub
fnsave
inc
xchg
scas
inc
xor
dec
cmpb
xchg
add
rclb
mov
jae
pop
bound
imul
cvtps2pi
cltd
adc
xor
outsl
pop
sub
jecxz
sti
mov
adc
mov
sub
data16
pop
mov
pushf
aas
push
ret
shrb
lahf
or
pop
push
push
int3
adc
xor
shrl
inc
fbld
xchg
or
xor
test
sbb
lea
cmp
into
loopne
andl
js
dec
adc
inc
xorl
mov
std
add
lock
repnz
outsb
aas
insb
pop
movsb
lods
rcll
in
sub
repz
sbb
sbb
mov
or
lea
xchg
aas
adc
mov
test
push
xor
pop
mov
mov
xchg
lret
in
dec
xlat
repz
inc
cmpb
bound
outsb
push
mov
jecxz
xorb
inc
push
sub
rcl
and
and
adc
jb
jno
subb
mov
push
inc
dec
hlt
cwtl
sbb
cmp
loopne
xor
push
cmp
add
jne
lcall
ds
pop
push
fcmovnb
test
push
jno
pusha
pushf
repz
in
xchg
arpl
jae
pop
cmpsb
pop
fildll
xchg
pop
inc
sarb
inc
dec
mov
pop
inc
add
addb
mov
insb
repnz
dec
scas
shrb
add
fildll
mov
out
stos
mov
jg
fprem1
imul
jb
in
add
addr16
jle
lahf
jns
dec
mov
inc
or
sbb
xchg
insl
das
movsl
lock
mov
or
repnz
mov
xor
data16
mov
xchg
and
vpsubq
ss
in
and
and
fstpl
out
imul
notb
dec
movsb
cli
sub
or
aam
insl
fwait
loope
rcll
flds
fnstenv
xor
inc
fwait
je
lock
jb
jmp
loopne
scas
xchg
jae
ret
mov
fisttps
rclb
out
sub
mov
ss
cwtl
or
cmpb
sbb
mov
cmp
in
push
cmp
mov
xor
ds
mov
je
lods
jmp
ds
mov
mov
inc
pop
dec
push
fisttps
mov
mov
aam
or
js
mov
cmpsb
shlb
mov
stos
xchg
ss
ljmp
sbb
les
and
ret
mov
jecxz
movsb
pop
pop
push
das
js
dec
or
mov
out
adc
mulb
out
mov
imul
in
xor
lahf
cmc
ret
push
sub
mov
inc
cmp
pop
nop
cmp
jge
lahf
inc
in
jmp
and
pushf
lods
pop
imul
das
cmpsb
movsl
imul
and
lahf
xchg
mov
mov
push
into
lods
push
out
sti
adcb
pop
pop
rolb
and
lods
fcmovnbe
cltd
dec
push
test
xchg
bound
daa
mov
aam
inc
fdivrs
mov
int
push
sti
jns
mov
push
and
jno
dec
mov
dec
xchg
jle
hlt
ljmp
mov
dec
shll
xchg
cmpsl
adc
or
sbb
mov
fldcw
frstor
cmp
inc
repz
pop
cmc
mov
jp
sub
fidivl
loop
ret
cmp
jl
inc
mov
iret
mov
ret
dec
ja
clc
sarl
inc
mov
ja
push
scas
push
dec
mov
mov
out
xchg
pop
dec
repz
jnp
mov
xor
loopne
sub
ud1
jnp
xor
stos
out
lahf
mov
lss
fistpl
cmp
cmp
sbb
mov
fnstenv
or
dec
mov
xchg
push
int
mov
mov
inc
cmp
push
xchg
mov
subb
int3
inc
stos
in
cmovl
mov
or
ret
xchg
pusha
pusha
xchg
repz
fsubrp
aad
loopne
ljmp
cmpsl
jmp
test
cli
and
jb
ljmp
push
dec
aad
scas
push
adc
fnsave
test
mov
push
in
in
lahf
and
incb
or
bound
stc
rep
lret
jle
jp
call
push
push
cmp
js
adc
sub
jnp
cltd
lods
xchg
mov
leave
daa
gs
jl
push
jae
insb
int
xor
inc
jge
mov
push
pop
ss
xchg
aas
sbbl
lcall
pop
xchg
or
cmp
stos
inc
aad
xor
into
es
xor
leave
outsb
out
or
xor
jno
pusha
dec
mov
add
mov
sar
mov
or
and
mov
sbb
push
aad
pop
bound
movl
xchg
push
aad
push
inc
mov
ret
inc
subl
outsl
adc
outsl
popa
fistps
imul
jp
dec
int3
jecxz
push
lods
test
icebp
cmpsl
push
outsl
cmp
mov
sbb
or
faddp
mov
in
cmp
dec
fcomps
push
and
push
push
cli
mov
test
mov
lods
cwtl
int
aad
loop
out
aad
pop
leave
add
cmc
mov
mov
jg
outsb
sub
shrl
in
pop
sarb
push
ss
pop
popf
not
and
sub
mov
repz
ljmp
jle
dec
push
jo
mov
push
mov
dec
xor
xlat
sti
push
inc
push
scas
push
inc
mov
pop
cmp
push
aad
out
and
cli
push
mov
mov
xor
jmp
dec
test
loopne
dec
adc
ror
mov
ret
std
cmp
or
cmp
pinsrw
push
xchg
sub
call
inc
mov
mov
pop
out
aam
sub
jmp
adc
outsb
mov
push
cmc
insb
inc
jo
mov
movsl
jmp
loop
xlat
mov
loope
cld
aad
pop
jle
xchg
es
test
xorb
or
dec
jl
pop
imul
mov
mov
pushf
jp
lds
xchg
dec
sbb
xor
pop
pop
fistpl
fdivs
xor
ret
mov
dec
inc
mov
lock
xor
adc
adc
out
inc
inc
stos
jb
cmp
inc
cmc
mov
cmp
xor
pop
pop
lret
mov
mov
adc
and
jo
mov
xchg
push
fwait
mov
inc
ficompl
andb
inc
or
sub
in
das
cmpsl
jb
add
sub
lret
mov
dec
sbb
dec
push
cld
jle
idivl
iret
sti
pop
insb
fsubrs
pop
std
xchg
aad
in
mov
imul
mov
imul
loope
aaa
jo
das
test
rcr
pop
enter
lcall
in
pop
ja
xor
stc
jge
jge
inc
or
addb
fmuls
sbbb
xor
jae
shr
sbb
jge
test
das
ja
mov
jns
pop
icebp
inc
cmc
push
gs
insl
loop
and
sbb
inc
ret
daa
xor
mov
dec
xor
addb
stos
jmp
repz
sbb
shll
ds
lock
cmp
xor
lea
fwait
pop
movsl
mov
iret
cmp
xchg
xchg
das
add
cltd
cmp
pop
push
aad
cmp
jno
lock
mov
aas
add
xchg
rol
insb
test
std
jge
cmpsb
push
push
lahf
and
pop
xchg
xor
jae
orb
mov
add
ljmp
testl
add
in
ljmp
push
add
push
icebp
inc
cmpl
add
xchg
adc
mov
mov
sbb
mov
and
or
je
push
loop
scas
cmpl
xor
pop
add
inc
xchg
outsl
test
cli
or
test
push
pop
adc
xor
xor
popf
xorl
pusha
mov
inc
sahf
add
push
cmp
movsb
mov
xchg
mov
insb
push
adc
pushf
jp
stos
movsb
mov
pop
outsb
hlt
out
inc
sbb
adc
hlt
out
push
dec
adc
mov
inc
jecxz
xor
mov
push
mov
out
fwait
lds
mov
mov
mov
cmp
in
popa
push
pop
out
dec
gs
sti
sbb
cmp
ljmp
jb
cmc
xchg
loopne
push
ds
mov
popl
pop
xchg
leave
ds
cmp
jecxz
lcall
dec
mov
je,pn
rorb
sbb
rorl
mov
or
fstpl
out
lds
orb
mov
dec
shll
loop
inc
jp
daa
lods
push
inc
lea
in
sbb
jne
icebp
cmpxchg
mov
inc
mov
sahf
dec
out
push
mov
jb
ljmp
fists
dec
movsb
inc
mov
lods
jecxz
cmpsl
negb
inc
jle
inc
add
jo
aad
mov
inc
pop
pop
and
xchg
loop
loope
int
jmp
int3
cmp
cmpsb
das
aam
mov
xchg
mov
ds
into
dec
stc
fildll
jno
scas
cld
lods
fstpt
adc
inc
push
sbb
icebp
pusha
repz
mov
push
les
xor
pop
dec
inc
les
js
nop
iret
ja
ss
mov
stos
jge
push
adc
cld
packsswb
imull
jns
mov
jle
mov
mov
iret
and
imul
xor
and
push
sub
ljmp
clc
loope
sbb
push
jmp
pop
inc
push
push
add
dec
imul
test
xor
andl
ret
or
jmp
lods
xor
scas
mov
cmpsb
push
push
movsb
ret
mov
adc
xorb
fdiv
int
addb
stc
fcmovnu
inc
std
jle
test
test
and
xchg
pop
ret
lahf
adc
or
sub
and
cmpsl
fs
dec
inc
mov
cmp
cmp
sbb
cmc
push
jge
ret
stc
aas
mov
cltd
stc
sbb
hlt
cmp
out
popf
sub
jne
pusha
pop
scas
cwtl
inc
cli
loope
mov
jecxz
jmp
pop
into
jae
push
pop
ja
jle
mov
scas
divl
mov
mov
cmp
out
push
sarb
js
sub
xchg
into
imull
push
cmp
mov
jg
enter
sbb
xchg
int3
push
movsb
aam
insb
cmp
pop
shr
stc
mov
sbb
jnp
stc
leave
popa
nop
shll
mov
notb
pushf
shl
and
loope
push
xor
or
mov
xchg
out
mov
cltd
sbb
cmpsl
aam
xor
and
out
or
cld
fsubs
repnz
pop
pop
sbb
dec
fsin
mov
mov
push
jmp
jge
xor
pop
out
or
dec
out
mov
inc
fistpll
push
cmp
mov
pop
or
insl
mov
je
cmc
push
repz
and
cmp
and
sti
das
mov
pushf
sarl
jae
cmpl
insl
sub
icebp
rorl
cmp
pusha
push
xlat
lock
out
mov
and
and
dec
jmp
push
test
push
fs
cmp
lahf
ljmp
sbbb
cmpsb
int3
das
push
jae
adc
outsl
push
and
fs
aad
pop
enter
jg
xchg
pop
js
inc
call
mov
test
cs
xor
pop
lods
xor
xor
in
cmpsl
mov
out
inc
mov
test
add
inc
add
mov
iret
rcrb
out
cmp
dec
cmpl
mov
cltd
scas
gs
popa
in
mov
jbe
imul
scas
inc
jns
scas
inc
cs
aas
and
decb
jge
clc
lods
jl
enter
out
out
adc
cmpsl
sub
sbb
jns
sub
cltd
ljmp
or
fimull
sti
cmp
cmpsl
iret
sbb
push
sub
adc
ret
mov
lods
and
scas
loop
and
call
fmull
mov
je
in
xchg
sarl
and
push
cmpsl
nop
mov
jge
xchg
pop
mov
mov
enter
jge
push
es
lea
nop
mov
out
xchg
and
cmp
nop
push
ss
imul
outsl
xor
push
pushf
ljmp
out
orb
adc
push
inc
push
mov
or
hlt
and
roll
inc
jo
outsb
sub
xchg
not
decb
adc
aas
jnp
lea
sbb
pushf
dec
inc
pop
jmp
mov
mov
mov
inc
lea
lret
out
clc
xchg
mov
xlat
push
andb
jle
xchg
xor
in
shll
dec
cmpsl
xchg
push
jmp
jae
lea
mov
ljmp
adc
loopne
push
movsb
in
push
mov
cli
add
pop
sbbb
pop
or
sbbb
push
pop
ja
fldt
sbb
xchg
sub
mov
std
jecxz
lcall
push
pop
pop
aad
popa
xchg
xchg
xor
scas
aaa
pop
xor
cmovl
aad
les
mov
push
jge
movsb
mov
clc
test
mov
sahf
add
jl
repz
inc
pop
loopne
mov
sbb
lret
fnstenv
fmuls
sub
push
mov
mov
dec
xchg
out
mulb
mov
mov
or
mov
call
repz
arpl
add
cmp
testb
out
shlb
xor
jns
popa
int
cwtl
jae
xor
xlat
fsub
or
int3
xchg
orl
cmp
or
mov
lcall
mov
mov
pop
scas
xchg
sahf
jmp
das
aas
jns
mov
mov
jg
cmpsl
frstor
lahf
in
int
jnp
push
leave
daa
cmp
add
shll
pop
jo
shll
mov
xchg
sbb
mov
mov
rcll
arpl
mov
xchg
pop
testl
sbb
cmp
pop
cli
mov
jne
mov
test
stos
scas
lods
popf
xlat
clc
gs
stos
inc
mov
or
js
fstpl
inc
ljmp
scas
pop
add
dec
out
cmc
xchg
pop
fldcw
add
push
out
hlt
test
mov
dec
xor
mov
xchg
jb
shl
xor
add
dec
sbb
sti
cmc
adc
xchg
aas
jbe
xchg
test
es
mov
ret
mov
dec
enter
lahf
dec
xchg
rcll
mov
ja
cmp
fcompl
stos
inc
dec
jmp
and
adc
pop
sub
mov
cmovnp
clc
cmp
inc
mulb
sarl
shrb
inc
or
mov
gs
push
cmc
fcmovb
fidivl
push
in
call
addr16
outsl
xor
xchg
int
or
jnp
rcll
incl
hlt
into
xor
xor
dec
movsl
pop
mov
or
sbb
not
or
pop
imul
out
xchg
mov
xchg
cmc
inc
das
aam
movsb
jb
je
dec
les
mov
outsb
mov
fldt
out
es
int3
and
dec
aas
xor
or
jne
add
jle
adc
push
aam
loopne
loopne
bound
adc
xchg
mov
lret
cmp
mov
pusha
add
stc
xchg
xor
add
aam
dec
es
lcall
jmp
cmp
jle
shll
nop
mov
jle
adc
push
lret
mov
cmovs
pop
daa
sahf
add
xchg
popf
mov
push
mov
dec
cmc
mov
test
clc
ret
cltd
call
icebp
dec
and
mov
xlat
dec
ret
or
enter
push
adc
mov
cltd
test
push
mov
and
pop
jmp
sarb
push
pop
xchg
lock
cltd
fucomip
mov
dec
sahf
sti
loopne
mov
pop
and
xchg
or
imull
cmc
iret
dec
dec
sti
push
add
aas
ret
sub
out
pop
repz
push
imul
pop
cs
ret
aas
repnz
mov
enter
mov
cmpl
adc
mov
or
mov
mov
cmp
push
cmp
mov
je
adc
xchg
ljmp
je
outsl
loopne
sbb
int
pop
jmp
xor
mov
mov
arpl
inc
idiv
cwtl
or
push
cld
mov
jle
ljmp
push
adc
sub
popf
adc
daa
mov
xchg
and
inc
xchg
inc
push
in
cmpsb
icebp
mov
mov
repnz
dec
data16
fucomp
gs
push
fwait
out
movsl
es
mov
sub
sbb
sub
je
add
test
mov
jmp
call
push
out
ret
jno
orl
xor
jno
mov
xor
outsb
js
xchg
outsl
call
out
hlt
jle
mov
xor
adc
cmc
scas
or
int3
lret
xchg
inc
mov
rolb
jno
push
pop
outsl
mov
dec
xlat
push
mov
inc
in
jno
ret
mul
ljmp
insl
pop
adc
dec
sbb
divl
jp
dec
out
loop
mov
inc
inc
outsl
xorl
loop
inc
ljmp
cmpsl
popa
gs
inc
mov
sbb
lods
jae
and
xchg
xchg
mov
mov
adc
adcb
in
sbb
sub
or
add
and
aaa
cs
inc
leave
call
stos
cmpsb
mov
into
sahf
ret
xchg
incb
js
sbb
mov
rclb
pop
cltd
fsubrs
je
dec
push
ret
jle
popf
mov
jnp
inc
jbe
and
loope
in
add
lcall
cmp
cmp
aam
stos
xchg
push
cmp
ret
or
jae
outsb
push
mov
ja
ljmp
test
pop
test
int
lods
loop
cltd
ja
sub
cmc
test
dec
sti
pop
daa
dec
repnz
mov
divb
shrb
insb
mov
ret
cmc
sub
inc
dec
hlt
and
movsb
call
fucomi
nop
xchg
push
je
or
inc
ja
cmp
test
sbb
cmp
mov
jmp
push
xchg
jno
testl
pop
in
sub
and
fisubrl
or
push
lahf
dec
cs
lcall
jmp
push
inc
mov
outsl
adc
lret
jbe
push
jg
xor
dec
popf
push
jns
mov
stos
aad
mov
dec
inc
sbb
xor
arpl
ljmp
sbb
test
ror
mov
dec
jmp
push
mov
and
or
pop
push
add
ret
push
inc
adc
pop
jmp
mov
ds
mov
xchg
insl
sub
mov
ficoms
in
jp
sbb
fimull
lea
in
pop
push
xor
lods
les
push
jmp
jb
lods
dec
sub
mov
arpl
sbb
test
cmp
lcall
adc
dec
mov
mov
mov
sarl
test
sub
les
cli
mov
xchg
inc
es
inc
popa
movsb
inc
adc
ret
add
jbe
jecxz
aam
xor
lret
fnstsw
gs
jmp
inc
in
in
out
in
or
repz
push
fisttps
or
mov
dec
ds
in
pushf
das
mov
mov
push
andl
or
test
add
imul
gs
jae
jle
or
lods
xor
add
sbb
jae
jns
add
inc
dec
das
ljmp
xor
hlt
mov
push
ljmp
push
lret
mov
inc
jp
sahf
pop
add
clc
test
cmp
dec
or
dec
aas
push
pop
add
mov
lea
and
lock
aas
push
jp
mov
jle
pop
fmull
mov
outsb
xchg
mov
lea
push
leave
push
mov
and
sub
test
mov
dec
push
cld
inc
cmp
roll
outsl
pop
pop
int3
add
sbb
xchg
js
mov
cli
dec
jns
lods
mov
enter
xorl
out
lahf
std
outsl
xor
icebp
das
sti
repz
lcall
ljmp
jbe
mov
test
shrl
sti
out
fcompl
cmp
sti
xchg
add
cld
ja
arpl
or
jb
mov
jecxz
jg
cmpsl
lret
and
iret
stc
cmp
stc
push
mov
lods
into
cmp
add
pop
arpl
outsl
mov
mov
scas
flds
or
enter
iret
bound
mov
jb
imulb
ret
shrl
lock
xchg
pushl
xchg
inc
pop
and
fwait
or
pop
cmc
repnz
imul
mov
insb
testl
push
ret
in
and
stos
xchg
cmc
mov
mov
lods
outsb
inc
push
test
lods
jecxz
sub
adc
enter
inc
or
fistl
es
aaa
leave
cmp
mov
push
lret
sbb
push
sub
jecxz
movsb
xorl
sub
add
incb
mov
sbb
add
inc
les
ret
sarl
stos
std
dec
xchg
and
adc
mov
mov
xchg
cltd
clc
popf
jge
mov
dec
push
mov
xor
call
repz
pop
pop
ljmp
xorl
jle
sub
sbb
or
jecxz
push
pop
fimuls
jb
cmpsl
dec
add
les
inc
fnstenv
jmp
repz
pop
jo
push
cmp
call
xchg
or
clc
ret
enter
xor
inc
inc
xor
mov
out
bound
xor
les
loopne
lock
imul
and
pop
ret
mov
and
xor
pop
arpl
mov
inc
fisttpll
xchg
aas
or
push
lahf
add
pop
mov
in
sub
sbb
lods
xlat
xchg
test
push
adc
out
inc
lahf
test
adc
jnp
jns
pushf
lock
cli
fldt
adc
and
cmc
or
push
fwait
divl
adcb
pushf
movsb
lea
andl
out
inc
pushl
and
lods
mov
loope
notl
dec
mov
jne
mov
inc
sbb
mov
and
vandpd
sahf
pop
mov
jbe
push
pop
int
dec
lods
jmp
mov
shrl
dec
std
test
add
mov
cmc
es
pop
mov
pop
and
movsb
add
rolb
sbb
inc
mov
sub
mov
cltd
lods
jns
adc
adc
sbb
cmp
xor
pop
das
aaa
mov
mov
imul
sub
jge
and
cmp
mulb
mov
lods
fistpll
mov
lods
popa
popl
xchg
xor
cltd
or
cmp
xlat
jp
mov
adc
push
fsts
or
lret
in
pop
pop
or
cmp
ljmp
xor
inc
into
ds
adc
stc
mov
xor
lock
add
les
insl
adc
inc
jl
sbb
and
lds
add
loopne
movsl
push
and
lahf
jae
pop
das
aam
xor
xor
sbb
mov
loopne
je
lods
daa
aaa
mull
sbb
dec
push
sahf
xchg
out
aaa
sub
inc
test
adc
adc
xor
lods
mov
sbb
leave
iret
pop
mov
mov
iret
inc
adc
out
and
int3
sahf
stc
pop
and
fadds
daa
call
sub
in
lods
aas
movsb
sahf
mov
cmpsb
inc
aam
sub
and
jl
dec
sbb
mov
sahf
pop
scas
shlb
pop
xchg
aad
sbb
mov
and
fcmovnu
add
test
inc
dec
clc
mov
orl
mov
inc
sub
sahf
test
out
movsl
mov
movsb
mov
loopne
pushf
or
jb
rcll
sbbl
pop
adc
insb
roll
or
sub
adc
pop
rcrl
dec
in
daa
sbb
sbb
xchg
xlat
mov
xor
rolb
dec
sbb
shl
jmp
fistpll
sub
mov
pop
or
sbb
mov
ja
mov
lcall
xchg
cmp
es
mov
pop
cmp
push
push
mov
xor
test
mov
fildll
cli
mov
test
xchg
in
int3
fdiv
add
mov
popf
push
mov
lcall
sub
and
int
filds
jae
clc
pop
clc
xchg
lcall
dec
mov
lea
mov
into
fcmovnb
sahf
es
jmp
and
sti
mul
leave
lock
sub
in
in
cmc
jle
sti
ja
add
jecxz
pop
pop
testl
jg
outsb
mov
pop
shll
lods
mov
js
xlat
cmp
xor
dec
xor
adc
or
movl
aas
pop
inc
push
fbld
enter
jno
xchg
je
sub
xor
jae
inc
lea
ret
xor
ljmp
into
jp
mov
stos
fisttps
addb
es
iret
loop
pushf
popf
orb
cli
mov
mov
insl
testb
in
fdiv
mov
pushf
in
cmp
jmp
push
xchg
daa
add
fs
xchg
push
mov
inc
insb
sti
mov
out
xor
gs
inc
outsl
loope
fistps
push
test
xlat
xorl
cmc
cltd
xor
in
xor
inc
cmp
lret
std
sar
loopne
je
movsb
sti
inc
add
mov
push
sub
xchg
into
out
mov
scas
shll
inc
mov
pop
xchg
mov
aas
xor
push
into
movsb
add
xor
mov
aaa
mov
outsl
aam
push
push
xchg
adc
leave
jb
fsubl
lret
test
xor
add
lahf
mov
and
lahf
cmp
ss
jbe
stos
andb
lods
ljmp
pop
mov
push
dec
xor
sahf
pop
push
sub
sbb
pop
cwtl
das
mov
ja
cmp
or
clc
add
scas
mov
pop
mov
iret
mov
out
stos
adc
jo
stos
add
inc
fmuls
in
gs
mov
stos
mov
ljmp
leave
into
mov
insl
push
pop
lret
loope
pop
out
ret
push
in
push
pop
test
and
inc
cltd
aad
sbb
sbb
enter
lret
jg
mov
lret
ss
imul
mov
arpl
sbb
cwtl
jae
xor
loope
inc
mov
icebp
outsl
mov
xor
inc
or
jne
xchg
inc
xchg
cmp
ljmp
xchg
pusha
push
mov
js
add
in
es
and
mov
shlb
inc
rorb
jnp
mov
imul
cmp
sbb
adc
stc
aas
sbb
mov
ret
xchg
adc
mov
repz
loop
pop
addr16
mov
mov
dec
mov
sbb
and
sub
or
inc
adc
iret
push
aam
es
dec
sbb
mov
inc
jne
stc
mov
repnz
and
clc
pop
pop
rolb
pop
dec
sbb
and
sbb
sbb
sbb
movsl
fnsetpm(287
mov
xchg
outsb
outsb
mov
mov
jmp
sub
cli
push
nop
lcall
imul
dec
jl
xchg
lds
pop
leave
cmp
std
mov
fadds
jg
and
cmp
jnp
jno
call
and
stos
xor
xchg
out
and
sbbl
mov
mov
lds
in
sbb
xchg
fcmovnb
daa
incl
fucomip
or
inc
shll
addr16
xchg
push
mov
loope
adc
lcall
es
jae
pop
mov
lret
lahf
xor
imull
mov
xlat
pop
cmp
and
ja
jecxz
mov
push
repz
mov
insb
pop
pusha
test
cmp
inc
inc
push
dec
sbb
and
scas
sbb
mov
xchg
fsubp
jns
cmp
jno
mov
inc
arpl
lret
and
push
push
mov
sbb
mov
popf
sbb
movsl
fmull
jmp
enter
jbe
adc
out
call
pop
addr16
imul
sub
mov
cld
adc
outsl
or
stos
mov
data16
sti
or
movsb
loope
cmp
rcrl
mov
xchg
les
xchg
mov
push
mov
jge
mov
adc
ret
pusha
popf
xlat
mov
lods
jle
xor
pop
repz
sbb
jl
sbb
push
jecxz
cli
and
in
dec
bound
imul
imul
ljmp
shlb
pop
popa
push
jge
outsb
cmc
test
pop
mov
std
mov
dec
les
repnz
or
or
popf
dec
cltd
imul
mov
mov
in
int
adc
aam
and
test
xchg
testl
shr
loopne
xchg
push
xor
xchg
add
xchg
gs
arpl
scas
sbb
mov
cmp
or
mov
cwtl
pop
ret
scas
divb
add
adcb
lret
pop
pop
xor
push
lret
pop
jns
aaa
xchg
scas
xchg
inc
cmovne
mov
push
sbb
inc
cmp
inc
std
lahf
dec
aad
sbb
out
push
cmp
mov
cmp
cwtl
in
testl
xor
insl
cmpsb
pop
jmp
enter
mov
sub
mov
in
dec
popa
ds
inc
fisubrs
mov
xor
adc
icebp
xchg
adc
inc
int3
bt
pop
and
xor
lret
lods
sbb
pop
cmp
fdivrs
fisubl
nop
in
arpl
mov
pop
inc
jb
or
in
dec
aad
push
pushf
les
cmp
inc
xor
push
das
mov
sbb
addl
sub
cs
mov
movsl
jmp
scas
inc
ret
cwtl
push
and
jbe
or
cmp
add
mov
mov
fwait
push
repz
outsl
lock
shlb
mov
fmul
fisttps
stc
mov
popf
push
adc
loope
cmpsl
in
xchg
xor
insl
mov
clc
pop
pop
arpl
xchg
jbe
test
mov
xorl
icebp
pop
push
inc
stos
sub
push
xchg
cmp
repz
stos
dec
sbb
or
punpckhwd
jg
aad
aam
out
pop
adc
sbb
std
pop
mov
and
lret
fldenv
sbb
addr16
pop
xor
icebp
imul
adc
or
in
dec
pusha
out
shlb
loop
cmpsb
lcall
testb
aas
das
ss
jnp
gs
and
pusha
xlat
dec
pop
in
loope
dec
ret
xor
xchg
jecxz
jl
pop
mov
hlt
xlat
or
mov
add
ds
dec
xchg
mov
inc
add
dec
xor
mov
lea
das
adc
adcb
jl
movsb
shrb
loope
pop
stos
jae
mov
cmp
add
insb
xchg
mov
inc
dec
lock
xchg
jbe
shl
xor
push
pop
pop
xchg
stos
sbb
jge
call
mov
das
xchg
pop
lcall
xchg
adc
xchg
and
add
ret
xchg
int3
jmp
mov
push
loopne
or
popa
loope
popa
sbb
jno
roll
xor
adc
jmp
mov
cmp
in
jge
fwait
movl
rorb
rcrl
aas
aas
mov
xor
data16
andl
jmp
jl
data16
and
mov
push
mov
ret
sub
nop
xchg
sbb
cmp
aas
dec
and
mov
negb
ds
dec
inc
mov
mov
loope
nop
dec
repz
out
int3
or
mov
in
loope
ret
ret
rol
pop
lea
pop
out
xchg
fildl
je
and
clc
frstor
adcb
mov
dec
lods
subb
or
mov
push
jl
xor
sbb
jno
sub
cmpsl
call
lahf
ret
div
out
movsl
adc
xchg
add
out
pop
adc
inc
xchg
fcoml
sarb
jo
jb
sub
aaa
outsb
mull
mov
leave
arpl
mov
ret
push
sbb
adc
hlt
lea
test
bswap
mov
mov
out
cwtl
lcall
jmp
dec
dec
xlat
pop
fistpll
jp
leave
shlb
adc
jge
adc
cmp
fdivrs
or
xor
repnz
out
cld
sbb
cwtl
pusha
out
notl
push
fwait
pop
fsubs
clc
ltr
mov
push
mov
sub
sub
in
add
addb
sbb
pop
les
in
or
jbe
icebp
and
push
jnp
hlt
fs
in
ds
add
add
sbb
xchg
testb
adc
sbb
adc
inc
jge
lcall
xor
mov
addb
push
into
cmp
xchg
mov
scas
loopne
push
add
xchg
pop
sahf
xor
pop
and
xchg
in
fcompl
push
add
and
leave
dec
loopne
add
imulb
mov
out
xor
js
adc
and
fwait
jle
sti
or
mov
inc
cmovae
shll
mov
push
or
xchg
inc
sbb
jg
xor
arpl
in
pop
xchg
mov
loop
mov
popa
in
sub
fisubl
in
dec
insl
leave
or
shl
loopne
add
mov
jmp
aad
data16
divb
bound
fistpll
add
icebp
mov
cwtl
pop
pop
fidivrl
out
push
loop
lea
es
push
dec
std
jbe
sub
cld
lea
add
sbb
aad
insb
out
xchg
int3
int3
mov
or
test
cli
rorl
push
and
pop
rclb
popa
mov
psrlw
pop
cmp
jns
outsl
adc
arpl
jg
imul
cwtl
pop
sbb
fwait
add
pusha
out
mov
or
outsb
pop
pop
mov
imul
int3
adc
cltd
je
cmp
dec
movsb
testl
js
or
add
sbb
mov
mov
ltr
and
push
adc
mov
cmp
cmp
mov
jno
outsb
sbb
xor
stc
mov
in
xchg
mov
lcall
call
daa
mov
mov
sbb
pusha
cltd
es
pop
xchg
int3
adc
jg
repnz
fsubrp
xor
movsl
adc
outsl
xor
cmpsl
push
and
mov
out
data16
dec
mov
sub
fsubrl
cmpsl
and
insl
clc
or
mov
sti
out
push
lahf
mov
push
dec
sbb
cli
imul
xchg
mov
cmp
mov
pop
in
fistpll
sbb
sar
rcr
int
mov
xor
js
inc
sbb
jno
adc
cmpsl
xchg
rcrb
xor
rcr
clc
and
loopne
mov
in
outsb
incl
iret
jl
stc
pop
xor
mov
or
pop
int3
push
popa
pop
mov
test
push
push
push
das
jmp
cmpsl
jl
mov
cltd
sbb
ficoms
int
adc
cli
xchg
cmp
lret
loope
imul
inc
dec
jmp
pop
fmull
test
jecxz
dec
or
punpcklwd
repnz
pop
ljmp
in
loope
jns
jnp,pn
mov
add
sub
xchg
jmp
mov
test
inc
jnp
cmp
adc
imulb
mov
sar
movsb
stos
stc
mov
sub
push
and
aas
mov
pusha
ret
jno
popf
mov
adc
add
lcall
hlt
xchg
dec
ljmp
iret
mov
mov
push
or
mov
sub
loopne
xor
mov
adc
mov
push
lods
or
jnp
lods
gs
sbb
mov
push
pop
js
mov
hlt
and
or
sbb
lock
out
and
es
xor
adc
adc
mov
lea
inc
cmp
pop
outsl
stc
mov
or
ficoml
scas
out
lods
mov
shl
cmp
pop
push
sarl
repz
js
jl
xor
inc
xchg
fcmovne
dec
cmp
loop
jmp
inc
cmp
adc
loope
out
insl
pop
sub
pop
ret
daa
and
and
ret
fistps
movaps
inc
push
cmp
repnz
lods
lea
imulb
dec
in
xchg
inc
jno
xor
jp
dec
fwait
in
nop
lock
stos
inc
add
cld
scas
mov
push
pop
adc
lcall
das
loopne
or
push
call
ret
cmp
sub
notl
cs
inc
xchg
mov
insb
aad
les
mov
test
xchg
and
jnp
pop
inc
adc
sti
pop
ret
xor
fldln2
jae
adc
shrb
jg
shr
icebp
mov
cli
ds
std
test
les
dec
inc
inc
adc
stos
mov
mov
adc
mov
ror
int
xor
popa
sbb
xchg
shlb
fwait
lock
cmc
add
lcall
or
lret
jmp
lea
cwtl
add
nop
ds
sub
sti
fisttpll
mov
int
dec
and
cmp
mov
xor
jp
aas
add
mov
leave
add
xor
mov
mov
outsl
in
pop
xchg
pushf
and
shrb
imul
sub
or
mov
mov
leave
mov
and
add
or
xor
je
arpl
xor
xchg
push
mov
push
pop
aad
push
dec
jo
jp
xor
ret
test
adc
xchg
lock
sub
repz
jle
cmp
mov
out
push
mov
mov
orb
push
je
inc
mov
cli
adc
test
call
pop
inc
adc
stc
mov
popa
mov
lret
std
sub
fsts
icebp
fidivrl
pop
sbb
adc
jmp
add
pushf
push
stos
stos
negl
lods
pop
pop
or
push
jecxz
bound
imul
sub
mov
pop
stc
and
jecxz
out
push
fnstsw
xchg
daa
add
insb
icebp
mov
pop
fs
mov
andl
hlt
mov
dec
xchg
xchg
dec
loop
push
inc
pop
lods
jns
negl
add
adc
adc
iret
push
call
pop
js
fsubs
xchg
push
dec
mov
xchg
inc
jns
jnp
gs
mov
sbb
or
stos
outsb
loopne
xchg
inc
lea
pushf
mov
and
test
leave
jae
clc
or
enter
sti
std
rcrl
add
cmp
push
jno
shl
and
ss
mov
add
xchg
mov
jmp
sub
add
in
xchg
xchg
stc
cmp
xchg
xor
shlb
adc
sbb
outsb
lds
arpl
repnz
inc
ds
mov
f2xm1
stc
je
mov
push
daa
dec
outsb
push
xchg
pop
inc
lea
adc
ror
gs
dec
xor
lret
mov
jecxz
clc
push
fsubs
xchg
push
ljmp
inc
and
mov
aam
sahf
dec
lds
or
xor
mov
xchg
jmp
cmpsb
shr
sbb
into
xchg
adc
fsub
rcll
pop
pop
mov
push
addr16
aam
or
cmp
add
aaa
jmp
jns
adc
stos
jge
push
or
push
dec
pop
lcall
call
leave
jl
sub
lea
mov
es
cli
push
loopne
and
mov
or
mov
inc
aaa
jmp
dec
sbb
mov
adc
mov
enter
xor
xchg
add
inc
icebp
mov
shll
and
pop
xor
leave
or
dec
bound
popf
cmp
mov
pop
push
inc
cmp
test
pusha
in
jbe
nop
jecxz
fldl
mov
xor
jnp
add
push
mulb
std
dec
pop
jecxz
fcomp
push
lods
call
frstor
cmp
fmuls
sub
jmp
jo
and
jnp
sub
mov
jmp
and
stos
mov
loop
popa
cmc
lahf
fucomip
and
push
push
sub
add
jge
sbb
pop
out
nop
rcrl
pop
sti
jbe
pop
das
loope
sarb
jecxz
dec
sbb
and
pop
mov
cltd
ds
cli
push
mov
ss
mov
xor
pop
dec
imul
lock
inc
aad
pop
lods
cmpsb
movsl
lcall
mov
test
data16
cld
cmp
xor
pop
fidivrs
in
add
cmp
outsl
add
xor
jp
xor
bound
add
pop
lret
ss
pop
xlat
mov
or
jns
inc
lahf
pop
nop
movsl
mov
push
lods
inc
add
ja
xor
shll
ja
push
sahf
push
inc
filds
mov
sti
mov
jnp
and
call
mov
lock
mov
lock
vpxor
mov
push
sbb
out
ljmp
bound
clc
repz
mov
ficoml
popf
add
mov
dec
mov
adc
sbb
out
cmp
and
ja
iret
and
popa
ret
mov
pop
mov
aad
nop
adc
jp
pop
mov
cli
jae
mov
aam
mov
push
inc
mov
jmp
js
pop
sbb
pushf
adc
dec
push
repz
add
rorl
push
push
movsb
push
or
jg
jnp
dec
aam
lods
push
add
dec
jl
adc
vpunpckhdq
ret
jns
sbb
xlat
daa
std
mov
je
in
lock
push
mov
icebp
xorb
stc
dec
hlt
lds
cmp
or
xchg
sbb
and
gs
stc
aam
and
push
loopne
loopne
cmp
xchg
sbb
out
mov
xor
cltd
icebp
out
pop
fsubrl
jp
cmp
add
lds
sbb
jns
sub
mov
testl
cmpsb
jno
mov
jns
jge
jmp
lods
sbb
dec
cltd
loopne
mov
loope
xorl
outsb
test
dec
shll
loop
int
adc
shl
je
cld
lret
xlat
movsb
jnp
jbe
pop
ficoml
jle
pop
popa
xorl
bound
cmp
sbb
or
das
cltd
scas
dec
adc
lods
and
mov
fisubl
hlt
cli
aad
scas
cmp
mov
jge
aas
or
mov
scas
inc
sub
xchg
nop
lea
or
cmc
imul
xchg
inc
nop
push
jmp
sti
arpl
subb
sub
and
mov
dec
and
jle
popf
stc
add
mov
mov
loope
dec
sub
jmp
insb
rolb
push
lret
xchg
cmp
cmp
xlat
pop
ja
cmp
cmp
dec
sbb
pop
pop
xchg
addr16
sti
cmp
fsubl
lahf
insb
in
or
into
insb
repz
add
not
jno
sti
sbb
jae
in
cli
sbb
ljmp
jo
xlat
pop
mov
clc
scas
jmp
pop
xchg
fiaddl
pop
call
inc
xor
stc
sub
shll
testb
cmp
hlt
xor
inc
js
test
arpl
iret
sti
lods
repz
mov
mov
sub
add
sbb
rorl
jg
addl
bnd
push
mov
pop
xchg
push
addb
cmp
push
repnz
subl
mov
adc
je
jg
int
push
bound
dec
xor
scas
iret
push
pop
add
data16
mov
mov
popa
dec
sub
cmp
cwtl
int3
lret
lret
adc
push
and
lods
sub
lahf
rorb
pop
aas
lds
loopne
or
mov
push
cli
xchg
dec
xorl
xchg
xchg
fistpl
xor
je
push
fucomp
pop
jecxz
mov
cmp
push
cs
call
hlt
lret
jo
pushf
cmp
adc
jbe
movsl
cltd
in
dec
dec
inc
cmpsl
test
cmp
insb
lahf
mov
dec
cld
fisubl
cmpsl
jp
lar
enter
xor
pop
push
or
int
insl
sub
addr16
cmp
cmpsb
sub
or
lahf
pop
jge
xor
ret
pop
ror
int3
notl
jne
pop
dec
aaa
lcall
insl
scas
xchg
mov
sbb
cs
mov
sub
sub
insb
dec
jl
out
ror
js,pn
test
adc
pop
and
pop
xor
push
add
ds
inc
mov
push
pop
push
pop
sbb
jns
cmp
mov
insb
inc
shr
jo
bound
sub
loopne
imul
out
pop
adc
popf
mov
ficomps
jge
adc
popa
nop
in
jne
xchg
jnp
xchg
or
mov
sbb
ret
jg
mov
lahf
out
cmp
inc
mov
ljmp
mov
push
cmovns
loope
aaa
out
adc
cmpl
sahf
loopne
jmp
push
jle
fstpl
out
add
adc
in
pop
es
scas
dec
jl
lcall
mov
push
xor
xchg
loop
repz
outsb
scas
pop
ja
mov
xor
cmp
js
fldenv
lods
sbb
push
enter
mov
addr16
aam
jmp
fxch
mov
push
in
pop
in
and
fsubl
xor
lcall
add
jmp
mov
push
add
sub
xor
sbbb
and
mov
lahf
push
adc
cmp
xchg
sahf
mov
xchg
aam
mov
pop
and
add
xlat
stos
dec
xchg
jae
xchg
dec
push
imul
gs
repz
mov
sub
ds
mov
enter
imul
addr16
das
test
inc
test
push
test
imul
and
push
add
bound
add
sahf
fildll
nop
ror
push
cmp
adc
shrb
mov
jo
adc
mov
mov
repz
inc
mov
mov
mov
adc
shll
jle
pop
jne
ret
jnp
repz
lcall
mov
nop
gs
and
push
xchg
cli
jb
mov
jmp
xchg
jmp
adc
mov
pop
sub
aad
outsl
cmp
jmp
movsb
and
xchg
test
je
dec
lret
cmpsb
call
sahf
test
jl
es
mov
lods
mov
mov
mov
icebp
inc
fwait
shr
jo
dec
xlat
iret
bound
jp
adc
dec
cmpsb
test
popa
andb
mov
repz
data16
xor
mov
jnp
outsb
mov
ret
cli
sbb
aas
call
fisubl
into
mov
enter
dec
ficomps
int3
lds
lea
test
push
add
cs
sbb
scas
imul
push
dec
pop
inc
mov
dec
fadd
add
rorb
notb
test
test
ljmp
xlat
xor
jg
or
cwtl
xchg
in
mov
rorb
mov
out
jl
mov
lock
sub
push
sub
loope
int
xchg
aad
pushf
insl
cmp
cli
sub
sbb
ds
mov
push
sbb
mov
inc
roll
pop
lods
icebp
push
add
insb
mov
insb
js
jns
sub
jmp
adc
cmp
xor
sbb
push
fldenv
dec
cmp
jg
mov
add
push
xor
mov
adc
sbb
pop
aam
or
mov
add
test
nop
lock
cmp
and
sbb
lods
mov
xchg
in
inc
in
push
xor
pop
pop
xchg
loop
insb
outsb
cmp
lods
or
cmp
shlb
inc
lret
les
cmp
insl
imul
mov
push
add
xchg
fsubs
xor
or
daa
enter
pop
dec
mov
int
cs
xor
lcall
dec
pop
cmp
clc
mov
test
jb
out
jns
mov
or
test
lret
arpl
add
add
mov
nop
xchg
pop
xchg
hlt
out
jge
sbb
mov
mov
adc
jl
inc
je
cli
repnz
stos
xor
xchg
dec
jle
dec
call
mov
sbb
sbb
in
shll
insb
or
jecxz
push
and
xor
dec
mov
ja
sbb
xchg
out
cmp
pop
sub
sbb
mov
or
sbb
out
xchg
ds
mov
or
pop
aad
mov
fsubl
mov
js
inc
xchg
cmc
dec
push
mov
insb
fists
push
hlt
test
sbb
jmp
mov
sbb
fmuls
call
jbe
out
and
inc
arpl
ffreep
fmuls
shrl
cmp
rcr
cltd
jns
xchg
cmpsb
mov
out
test
push
ljmp
adc
dec
and
xchg
mov
dec
xchg
fcomps
ljmp
fbld
jnp
stos
sub
sbb
fsubrs
pop
and
jae
bound
test
lret
push
aaa
fs
fisttps
push
fcoml
andl
push
xchg
in
fcoms
in
xchg
jo
xor
inc
and
mov
or
cmp
je
add
data16
adc
div
sarb
mov
add
ror
aam
xchg
rcrb
sub
addb
aas
test
push
out
dec
mov
mov
mov
inc
sub
inc
popf
cs
cmp
sar
pop
out
pop
mov
xor
cmp
enter
xor
pop
fldcw
int3
sbb
sahf
daa
adc
and
lea
pop
adc
out
jb
push
sub
push
dec
add
gs
iret
shl
insb
popf
leave
mov
or
add
inc
cltd
push
sub
cmp
and
jbe
push
and
xchg
mov
pop
push
cmpsb
mov
js
cld
xchg
nop
sbb
out
pop
add
fisttpl
mov
xlat
pop
ljmp
test
jns
out
scas
xchg
cmp
jnp
sbb
mov
xchg
and
and
lea
inc
cmp
fbstp
inc
lods
popa
sub
test
inc
gs
aas
add
jno
inc
popa
jp
pop
test
repnz
sahf
pop
dec
sub
fiaddl
jae
jmp
cmp
fistpll
adc
je
stc
adc
in
pop
pop
dec
inc
aaa
dec
and
into
jns
rorl
in
fisttpll
outsl
pop
adc
dec
jge
pop
pusha
or
mov
dec
data16
pop
int3
push
pop
cwtl
xchg
cwtl
add
jne
aad
rcrb
and
icebp
jo
popl
nop
mov
dec
xor
pop
ret
jge
stos
imul
test
or
lcall
mov
lods
std
sbb
sbb
das
xor
fcomps
outsl
in
mov
jo
or
scas
cmpsl
ret
push
out
sbb
mov
mov
xor
testl
outsl
lcall
or
xor
addl
jp
sub
jns
imul
mov
sarl
orl
nop
movsb
mov
aad
popf
mov
xor
push
cld
mov
mov
lahf
push
mov
out
push
xchg
jne
mov
mov
jns
lahf
cmp
sbb
xchg
and
testl
mov
outsb
jl
adc
repz
and
add
sbb
mov
and
jb
aas
pop
sbb
test
lcall
push
popa
incl
iret
and
fdivs
ds
jns
mov
add
fs
sub
ret
adc
dec
not
push
stos
stos
dec
in
fisubrl
movsl
cmpsl
pcmpeqb
xchg
jae
ret
or
nop
jg
sub
sbb
xor
outsb
xor
sub
xchg
pop
ficoms
pop
iret
mov
and
xor
arpl
inc
addl
movsb
jb
jle
push
scas
sbb
popa
mov
xchg
and
das
je
mov
jmp
mov
jb
inc
in
popa
sub
loope
fistpll
inc
jl
loop
stos
pop
fsubrl
cmp
pop
jb
mov
inc
enter
sub
push
nop
fldt
jle
dec
lahf
sbb
cmp
and
btc
sti
cmp
jb
or
ret
xchg
xor
fmuls
inc
ds
sub
andnps
xchg
or
pop
test
cmp
mov
in
stc
cmpsb
jecxz
in
push
ror
dec
mov
pop
pusha
subl
in
int3
aas
push
or
jle
push
adc
or
loopne
or
and
ficoms
mov
push
cmpsl
pop
cmc
mov
mov
jl
sarl
iret
outsb
xor
lret
imul
xor
outsb
push
ret
and
insb
test
and
pusha
sub
jge
mov
popf
jg
jecxz
es
shrl
fwait
cmc
sbb
int3
xchg
sbb
sub
fcomip
test
jns
jns
notl
xor
in
fdivrl
lahf
addl
ret
scas
push
or
imul
rcrl
ljmp
pusha
jecxz
mov
adc
add
insl
push
sub
rcll
pop
or
push
or
out
ss
pop
scas
mov
dec
xlat
cs
pop
aam
mov
mov
dec
loope
or
xor
add
dec
xor
adc
mov
testl
pop
out
fnsave
xchg
or
repnz
push
das
mov
lret
das
mov
sbb
mov
inc
int3
clc
je
jmp
pusha
sub
loopne
push
inc
lds
mov
clc
push
inc
lods
cmpsb
dec
nop
in
in
mov
mov
adc
mov
jl
fcmovnbe
out
call
adc
xchg
mov
dec
dec
enter
cli
bound
insb
and
in
stc
shr
les
out
jl
or
fldt
dec
ficomps
mov
dec
add
jl
xor
cld
cmp
dec
cmpsl
mov
ljmp
int3
sbb
fsubs
rorb
push
jnp
push
mov
sub
in
push
sbb
add
mov
loop
inc
sbb
ja
out
cmp
xor
mov
insl
stc
jge
sti
cmp
shlb
fs
divb
std
out
repz
and
loopne
icebp
jnp
pop
or
sub
inc
push
dec
mov
stc
enter
jno
pusha
out
pop
cmp
dec
cwtl
mov
lcall
movsl
in
por
or
xlat
push
testl
nop
call
aad
adc
mov
movswl
push
leave
cmc
push
mov
in
outsb
sub
and
xchg
and
jle
xor
subl
xchg
add
mov
mov
rorl
mov
cmp
fisttpl
aam
xchg
jbe
mov
pop
repz
sub
in
mov
mov
pop
jl
add
jl
xchg
pushf
pop
in
pusha
sbb
sub
jne
add
pop
repnz
mov
dec
insl
mov
sahf
push
pop
and
xchg
mov
repz
imul
repz
push
xchg
movsb
sbb
in
imul
cltd
pop
or
call
sti
je
iret
adc
scas
mov
mov
xlat
int3
mov
inc
fs
cmp
cmp
mov
ret
and
cmp
dec
sbb
fistpll
aaa
in
out
pop
jmp
pop
lret
push
cmp
dec
lret
stc
int3
adc
pop
push
jno
or
lcall
cli
insb
sub
mov
scas
or
mov
jp
mov
xor
mov
iret
stos
jbe
cmp
icebp
leave
pop
mov
in
or
lahf
push
xchg
mov
lods
mov
jnp
sbb
sti
repz
enter
add
int
mov
dec
jne
leave
inc
loopne
lock
adcb
sub
cwtl
dec
out
pop
call
jmp
push
mov
dec
outsb
pop
mov
mov
je
icebp
roll
sbb
jbe
cwtl
jl
scas
xor
fwait
sbb
mov
sub
adc
adc
jmp
inc
jbe
add
sbb
nop
inc
xor
int
sub
ja
addb
out
lcall
xor
xlat
pop
leave
je
stos
pop
xlat
cltd
push
inc
inc
inc
add
xchg
or
rcl
shll
ds
jge
sbb
in
lret
mov
sarl
std
and
aad
push
mov
flds
cmp
ja
and
bound
shr
inc
es
xchg
test
and
sbb
jp
out
mov
or
add
je
jge
out
mov
stos
jnp
mov
jne
rclb
add
push
cmpsb
mov
xchg
cmc
add
out
xor
loopne
xchg
sub
test
data16
cmp
cmpsl
xchg
pushf
pushw
dec
std
mov
loope
cmpsl
scas
adc
ret
sahf
and
mov
or
sub
dec
fs
cmp
xchg
jp
icebp
enter
adc
pop
imul
fs
negl
sub
jmp
xchg
sbb
pop
ficomps
js
imull
fists
shl
jecxz
mov
jae
push
cmpb
sub
sub
es
stos
mov
push
cmp
cli
loop
mov
jae
inc
adc
imul
fmul
add
adc
es
inc
mov
scas
mov
push
int3
mov
cmp
xchg
negb
add
mov
cmp
sub
or
test
outsb
stc
jbe
fimuls
aaa
sbb
xor
dec
adc
sub
xchg
mov
js
dec
and
sahf
mov
or
cmpl
roll
mov
cltd
repz
jno
test
or
sbb
insb
clc
int
in
inc
mov
push
int3
mov
inc
mov
lods
adc
std
xor
incb
adc
sub
lahf
shrb
fldcw
out
adc
mov
pcmpgtb
mov
push
mov
jnp
adc
lods
push
add
mov
mov
adc
fstpl
mov
add
pop
or
adc
mov
repz
fcoml
xchg
lret
std
push
inc
adc
cmp
cmc
shll
mov
hlt
mov
lds
pop
jecxz
arpl
mov
push
call
lcall
and
pop
mov
cmp
popl
dec
sar
and
out
inc
or
shll
mov
push
repnz
and
adc
jb
xchg
fsubrs
aaa
addr16
pop
sub
pop
sub
mov
sahf
xor
jbe
out
xchg
inc
int
jb
lcall
lock
dec
mov
pop
cs
cmp
inc
mov
xchg
and
in
adc
sbb
xor
pop
stc
js
mov
movsl
decl
ljmp
insl
mul
mov
repnz
aas
movsl
scas
addr16
clc
xlat
mov
jmp
and
fisubrs
clc
leave
in
or
pop
ja
fiadds
shll
cmp
mov
shll
es
sbb
mov
xchg
std
divb
xchg
jle
sbb
mov
lds
dec
aam
add
jg
mov
mov
loop
mov
gs
jg
xchg
out
es
fdivrl
test
outsb
pusha
loop
insl
jb
jl
push
leave
lock
gs
pop
cmp
or
mov
xchg
jl
in
pop
mov
popf
pusha
or
inc
cmp
cmc
ss
ss
mov
pop
in
xlat
setnp
loop
sbb
sub
sbb
iret
mov
imul
fdivrp
aaa
add
sbb
or
int
and
ret
pop
jnp
cltd
cmpsb
fcmovbe
test
fstpt
xor
add
jp
add
arpl
add
in
pushf
daa
jbe
sahf
pop
stos
cmp
xchg
push
sub
xlat
iret
into
mov
test
jbe
sbb
sub
clc
fidivs
pop
cmp
xchg
movsb
mov
ret
mov
pop
xchg
mov
test
loope
es
and
scas
or
inc
lcall
push
sub
fisubrl
scas
cmp
aad
cltd
bound
mov
in
lret
add
pop
sbb
mov
sbb
xor
sbb
fdivs
sbb
sbb
fidivl
jg
lods
mov
push
aad
je
xor
les
test
push
mov
sahf
movsl
repz
das
cld
inc
mov
leave
mov
sbb
icebp
cwtl
jmp
dec
nop
mov
push
sub
jb
cmpsl
les
scas
fnsave
pop
repz
daa
jnp
fadds
pop
jae
sbb
stos
in
pop
push
cs
and
mov
fdivrl
in
je
jmp
iret
jl
popf
sahf
insl
lcall
lods
repz
cs
idivb
sbb
xchg
test
mov
sub
mov
fwait
pop
movsb
pushf
push
scas
dec
or
pop
rep
lods
insl
pop
sarl
push
lock
test
or
add
xlat
pop
ficompl
shrb
sbb
lods
mov
stc
stos
push
stos
mov
es
dec
push
int
jge
daa
pop
enter
in
aam
hlt
fxam
jo
cwtl
add
sub
imul
cwtl
ljmp
jae
add
mov
push
pop
mov
add
pop
push
cltd
jl
test
cltd
mov
lcall
cmp
fbstp
sbb
jnp
xlat
or
fs
lods
and
jecxz
dec
imul
ja
lcall
iret
push
lahf
add
pop
shlb
repnz
mov
jge
sbb
je
pop
push
shl
outsb
imul
jmp
adc
cmp
pop
mov
or
cmp
movb
xor
test
inc
ja
push
xlat
xchg
adc
sti
jno
ja
cmp
push
push
mov
pop
mov
fs
pop
mov
loope
dec
rcrl
jp
inc
scas
xchg
fidivl
push
cmpsl
jo
addl
push
xchg
arpl
xorl
lret
cld
xor
pop
sbb
clc
cmovs
pop
push
cmp
lret
push
sbb
in
out
lea
add
sub
aas
pushf
cli
bound
jmp
dec
std
mov
and
sub
push
dec
rcr
dec
jle
mov
mov
int3
mov
jmp
pop
fs
sbbl
push
jnp
std
inc
repz
sub
jl
jns
lret
mov
iret
dec
adc
aaa
cli
scas
icebp
inc
test
mov
leave
enter
xchg
jnp
loop
fiaddl
pop
push
inc
repz
icebp
cmp
pushf
xor
mov
mov
or
in
sbb
cltd
xchg
das
sub
out
cld
add
adc
aaa
push
in
popa
enter
clc
outsb
and
incl
add
xchg
arpl
iretw
lods
mov
cmp
cmp
fimuls
dec
xlat
sbb
nop
movsb
push
xlat
imul
sub
cmpsb
sbb
push
test
mov
vmovq
in
adc
fcmovnu
add
int
cs
shlb
mov
and
addr16
fstpl
and
mov
lea
out
inc
mov
xor
sub
lret
mov
xchg
sub
adc
mov
test
pushf
imul
cld
repnz
mov
rolb
lds
and
lods
fcmovne
cmp
and
mov
xor
or
push
ret
mov
xchg
fdivrl
lahf
fcom
sbb
iret
mov
fsubr
and
in
jnp
push
mov
aaa
out
cwtl
iret
lds
movsb
out
sub
test
nop
out
push
cmpsl
aaa
rolb
aaa
jp
mov
add
xchg
imul
adc
dec
adc
mov
cmp
icebp
push
cmp
aaa
sbb
lock
push
ret
jbe
js
sub
inc
rcrb
daa
aas
cltd
jns
clc
sar
std
xor
inc
iret
xchg
mov
imul
ljmp
lods
push
cwtl
sub
test
fiaddl
push
add
sub
mov
fmuls
push
enter
fisttpll
mov
aad
jbe
lcall
jmp
xchg
lahf
and
mov
adc
pop
lods
cmp
es
adc
in
inc
dec
adc
arpl
lods
insl
mov
xor
dec
push
xchg
add
cmp
ja
dec
adc
mov
repnz
sahf
test
jg
and
pop
jge
sahf
dec
gs
inc
jg
fnstsw
pop
negl
mov
adc
or
push
dec
cmp
cmp
mov
js
sub
inc
add
rcrl
cmc
dec
dec
out
dec
out
dec
negb
mov
jp
stos
ja
in
inc
popf
out
pushf
xchg
push
cmc
sbb
data16
lods
xchg
mov
xor
imul
test
or
push
fwait
xchg
test
cmpsl
pop
cwtl
xlat
mov
push
int3
cmpsl
cmp
push
ret
or
adc
pop
or
jl
sahf
outsl
int3
mov
or
mov
jp
add
fmul
or
cmpsb
or
sub
cmc
loop
inc
cmpl
jecxz
subb
into
movsl
cmp
arpl
outsl
xchg
rclb
arpl
mov
hlt
xor
cmpsb
mov
dec
add
movsb
aad
cmp
dec
mov
ja
int
movb
or
xlat
dec
loope
lods
xchg
cmpsl
push
rcl
push
pop
dec
push
mov
int3
andb
shr
incl
in
jnp
xor
push
jmp
pop
push
imul
pop
cmp
out
outsl
icebp
lret
int3
lcall
xchg
mov
fdivl
xor
repz
push
stos
pop
push
add
xchg
loopne
adc
lret
cmc
mov
inc
push
movsb
push
xchg
mov
sbb
xchg
inc
popa
xchg
lcall
inc
neg
or
sbb
push
push
push
adc
add
xor
push
jmp
pop
mov
or
lds
push
mov
jo
mov
ljmp
insb
mov
and
pop
je
ret
pop
insl
mov
mov
mov
sahf
jge
ror
std
mov
out
add
pop
lods
clc
insb
cmp
adc
std
sbb
stc
and
into
xor
hlt
cmpsl
cmp
les
mov
jb
es
jb
mov
sahf
fdiv
fstps
shlb
jae
jbe
and
sub
fadd
out
test
push
clc
jp,pn
or
data16
jne
stos
in
data16
mov
popa
push
mov
mov
movsl
sarb
fmuls
sub
lods
out
loop
pushf
cltd
stc
xor
nop
mov
aad
xchg
fsubl
add
dec
cli
inc
in
inc
dec
addr16
dec
xlat
and
jno
lret
add
sti
call
popa
inc
mov
addr16
and
lea
test
gs
xchg
sbb
mov
jl
pusha
jp
les
cmp
mov
sub
jmp
scas
inc
jns
push
test
cmp
gs
out
or
mov
or
mov
mov
jns
loopne
mov
scas
outsl
inc
mov
popf
leave
sbb
jecxz
neg
cmpsl
inc
or
jg
cmp
int3
mov
sarb
cmp
test
pop
mov
xchg
cmp
pop
mov
xor
cmp
arpl
jo
jno
dec
dec
jbe
and
xor
decl
and
jle
repz
and
stos
inc
dec
or
sbbb
out
in
out
dec
jl
data16
test
add
inc
or
adc
dec
dec
xchg
ret
inc
mov
pop
pop
lods
out
ret
jae
nop
and
mov
xor
inc
mov
and
scas
xor
arpl
rcll
sbb
xchg
push
subl
ret
test
push
in
jge
insl
sub
int
clc
push
xlat
cmc
xor
cmp
hlt
mov
mov
push
dec
adc
mov
dec
push
imul
add
aad
nop
outsb
icebp
int
mov
cmp
xchg
and
sub
cmpsl
loopne
mov
jo
or
fcmovbe
rcl
or
fisubrs
out
addr16
adc
jp
daa
lret
push
dec
add
cwtl
rcrl
cmp
rorl
mov
inc
sbb
mov
cli
fistpll
push
adc
jne
loope
or
popa
cltd
sub
rorl
mov
cmpsb
xor
shr
push
das
and
pushf
gs
xchg
int3
mov
pop
stos
adc
data16
cmp
les
lods
adc
mov
in
leave
out
test
inc
rcrb
imul
add
cmp
imul
sbb
sbb
lret
xchg
pop
inc
popa
pop
and
cmpsl
aad
sahf
insl
fwait
adc
jb
xor
push
jl
imul
jecxz
int3
and
lahf
aaa
pusha
fstpl
das
fisubrl
in
sbb
test
push
stos
jo
das
push
rclb
mov
sbb
push
add
insl
cltd
out
add
mov
lret
mov
add
pop
lods
dec
cld
outsl
hlt
in
fdivrl
adc
inc
jmp
cmp
cld
jmp
jno
lretw
cmp
push
cwtl
dec
push
pop
mov
ret
xchg
cmpsl
ret
cmpl
sub
test
stos
popa
mov
push
arpl
shll
add
ret
lods
mov
sbb
cs
push
sti
lods
insb
call
out
rorl
sub
mov
cmpsb
mov
cli
rol
mov
insl
sbb
iret
inc
lock
add
xlat
adcb
rcrb
shrl
inc
or
jmp
add
or
xchg
es
pop
pop
addr16
cltd
imul
mov
sub
mov
mov
jl
jp
jge
lahf
fidivrl
mov
push
xor
xor
mov
call
xchg
push
xchg
aad
shll
adc
mov
xchg
shr
jne
mov
sub
xlat
mov
fst
aas
outsb
mov
data16
sub
jecxz
aaa
aas
jnp
and
bound
repz
std
xchg
mov
add
add
mov
sbb
or
je
dec
add
fst
or
ja
ja
cmp
xor
insb
xchg
daa
ss
xor
sub
fstl
inc
test
dec
adc
cltd
mov
cltd
inc
addr16
cli
addb
popa
push
iret
or
add
or
shll
or
test
cmc
aad
addl
out
inc
loopne
scas
sarl
inc
data16
ja
outsb
jbe
je
test
cld
outsl
insl
test
adc
xchg
lea
inc
jb
into
daa
xchg
dec
sbb
pop
daa
lock
fwait
xor
mov
jp
xchg
cmp
sbb
xor
leave
xchg
dec
sub
nop
popa
stc
add
sbb
xor
cltd
push
movsb
fisubrl
or
int
call
test
push
dec
add
pop
fbstp
stos
fstps
popf
cmp
neg
ret
adc
loopne
jnp
orl
and
lods
dec
test
cwtl
inc
loopne
mov
stc
sbb
lds
inc
sbb
pop
push
and
lods
dec
pushf
xor
pop
js
cmp
mov
or
pop
imul
popf
out
repz
jns
mul
jae
xchg
outsb
pop
xlat
call
movsb
das
mull
sub
imul
cwtl
out
pop
xor
ljmp
enter
push
jp
and
fistps
addr16
sub
jge
data16
jnp
scas
mov
loopne
push
leave
adc
dec
lret
insb
mov
sbb
cli
outsl
roll
jp
lds
jmp
xlat
lea
and
inc
fsubr
mov
inc
mov
push
mov
push
dec
and
push
or
lock
fwait
jmp
cmp
xchg
push
cli
arpl
outsl
inc
pop
push
mov
add
push
add
stos
in
sti
sahf
jb
pop
pop
call
pop
hlt
inc
stos
cltd
es
or
insl
mov
xor
shrl
push
or
sahf
out
sarb
aam
mov
repnz
mov
lods
add
mov
pusha
bound
out
fisubrs
cmp
push
insb
mov
clc
movsb
cmp
push
mov
cmp
add
es
jge
aad
dec
mov
xor
push
push
sbb
cld
in
push
cmp
cwtl
push
icebp
rcll
xor
or
mov
cmp
mov
xchg
lret
repnz
inc
sub
insb
test
loope
mov
sub
icebp
outsb
ljmp
mov
fwait
dec
dec
and
xchg
dec
outsb
int
inc
jmp
fdivrs
xor
inc
adc
add
mov
fcmovu
push
push
into
mov
mov
or
or
cmpsb
lahf
sub
fs
xchg
dec
mov
lret
inc
and
arpl
test
mov
inc
jnp
jecxz
or
mov
in
inc
das
clc
out
add
pop
cltd
push
adc
test
andl
push
and
push
inc
or
mov
add
daa
sbbl
pop
test
or
sub
mov
xchg
int
insb
jo
call
in
adc
push
or
rcl
jae
rol
mov
jb
jns
fstl
fmuls
sub
ret
pop
je
cmpsl
or
adc
add
stos
xor
int3
cmp
sub
push
push
push
fsubr
mov
dec
xchg
dec
aas
hlt
cmp
sti
inc
lds
movsb
cmp
cltd
sbb
cmp
lock
shlb
lods
aam
js
lock
mov
nop
sbb
out
dec
lret
in
mov
imull
aas
je
or
jle
daa
stc
out
fwait
mov
lds
lret
shl
xchg
ret
bound
xor
jbe
and
addb
movsl
sbb
jnp
cmp
mov
das
inc
les
sti
pusha
lea
mov
dec
les
sub
hlt
popa
subl
test
subl
cmp
jbe
out
into
lcall
mov
loopne
xor
push
sub
mov
jo
fldt
xor
xor
test
cwtl
inc
adc
xchg
sti
cwtl
fsubrl
inc
outsb
dec
xlat
sbb
gs
mov
xor
lahf
stc
ficompl
cltd
push
test
push
daa
dec
jp
jnp
inc
sub
shlb
xchg
pop
add
dec
js
push
xor
das
dec
test
xchg
lds
sub
lret
and
and
outsb
pushf
xchg
jmp
mov
sbb
mov
loopne
mov
push
jecxz
pop
jg
xor
cmpsl
out
push
cs
xchg
inc
sbb
jae
inc
jno
adc
mov
sub
sbb
out
mov
repz
int
cmp
rcrb
adc
int3
cmpsb
xchg
mov
out
mov
pop
cmpsl
in
test
cmp
xor
add
mov
push
shl
outsl
arpl
pop
xor
aad
lret
enter
mov
hlt
nop
aaa
sbb
xor
std
vmread
hlt
outsl
mov
leave
rcl
sub
rol
std
dec
dec
mov
dec
mov
gs
xor
mov
xchg
shrl
fiaddl
cmp
dec
inc
loop
std
cmpxchg
ljmp
add
and
cli
cmpsb
mov
daa
push
lret
fwait
rol
push
inc
push
mov
push
mov
stos
jle
jnp
jbe
or
aas
and
in
jp
mov
iret
in
daa
dec
cmp
pop
cwtl
mov
or
in
clc
pop
dec
jbe
sbb
and
je
out
xor
push
popa
jmp
dec
fsubrl
add
or
sub
add
fsubr
add
mov
sahf
mov
gs
rcrb
sub
repz
jmp
loopne
mov
sbb
je
loop
sub
xor
imull
insb
jb
aaa
les
pop
or
jnp
cmp
lods
cmpl
das
xor
pop
int
fcoml
push
pop
add
sti
jae
mov
es
incb
add
stos
or
sub
es
popa
jle
lret
push
into
cwtl
adc
fwait
insb
push
insb
mov
cld
ftst
scas
movsl
jl
mov
cmpsb
cmp
sub
ljmp
mov
orl
sbb
lock
ja
enter
out
pop
xlat
imul
rcrb
inc
das
repz
popa
stc
push
movsb
cli
mov
jmp
mov
mov
sub
lret
fldenv
xchg
aas
jns
lret
mul
or
lret
jle
cmp
loop
sahf
add
sahf
xor
push
sarl
push
xlat
daa
scas
movsb
sbb
xor
xor
fistpll
xchg
das
subl
pop
jge
in
mov
mov
push
dec
xchg
subl
xor
movsl
call
push
jns
mov
jecxz
mov
and
mov
and
in
push
jp
test
sbb
nop
lret
stos
idivl
aad
lods
lcall
cmp
pop
mov
loopne
cmpsl
xchg
ret
into
fnstsw
mov
mov
mov
into
jle
aad
loope
mov
inc
addl
inc
fisttpl
add
and
cmp
mov
ret
fcmovnu
std
cmp
push
cmpsb
mov
jg
xchg
jle
adc
xchg
cld
add
inc
lret
clc
stc
cmpl
pop
dec
and
jle
inc
mov
pop
pusha
addr16
mov
mov
xchg
xchg
imul
stos
push
cwtl
scas
or
cmc
xor
mov
xchg
repz
imulb
inc
in
fidivrs
imul
pop
push
lock
pushf
fldt
xor
test
add
push
sub
mov
aad
shrl
push
jl
dec
and
jae
inc
mov
aaa
cwtl
cmp
rorl
fsubrs
pop
add
xor
imul
jnp
sbb
cwtl
gs
xchg
push
std
fadds
dec
jo
fdivs
push
xor
repz
into
adc
lock
push
sbb
mov
jecxz
inc
jecxz
into
arpl
pop
push
loop
insb
mov
fdivp
shrb
cmpsb
and
in
fmuls
xlat
sbb
out
adc
mov
and
hlt
ret
or
cwtl
ficoml
ret
push
xlat
mov
pop
scas
sahf
jle
mov
jmp
bound
and
lret
gs
mov
push
add
arpl
mov
and
adc
dec
lahf
pop
movsl
xor
outsb
and
inc
add
cmp
push
sbb
aam
icebp
das
adc
mov
ret
mov
test
add
ja
sub
and
jmp
rcll
mov
adc
ljmp
mov
repnz
lea
xchg
jne
rolb
pushf
fsubr
mov
mov
xchg
mov
cmp
aam
repnz
xchg
push
sbb
mov
jne
mov
cmp
scas
sti
cmp
iret
adcl
test
or
ja
adc
adc
and
pop
call
out
and
jp
cmp
repnz
popa
popf
and
popf
push
adcb
sbb
leave
push
popf
adc
fnsetpm(287
dec
jo
out
sahf
lcall
ja
cmp
outsl
sarb
mov
lds
subl
mov
cmpsb
xchg
out
lret
lret
xor
and
cmp
push
addr16
js
inc
mov
xor
sub
scas
pop
lret
mov
sbb
mov
mov
sub
and
popa
fnstsw
jae
pop
inc
mov
xor
pusha
insl
xlat
adc
rcl
mov
xchg
mov
cmp
imul
mov
or
pop
push
inc
in
orl
inc
pushl
push
into
pop
inc
adc
xchg
lock
or
inc
popf
sbb
jmp
cld
cmp
or
out
aam
jmp
lods
dec
fldcw
gs
stc
xchg
jl
fwait
mov
lds
cmp
sub
xorl
sub
test
movzbl
sbb
dec
out
insl
xor
in
sub
clc
jl
mov
lods
pop
mov
sub
or
sarb
clc
xor
jl
popa
and
jge
sub
mov
jns
sahf
xor
movsb
xor
cmp
test
jns
fisubs
or
inc
sub
fisttpl
sub
xchg
mov
into
adcb
cwtl
repz
push
xor
dec
mov
and
and
dec
push
mov
push
inc
and
sarb
inc
cmp
inc
sbb
fs
rorl
popa
fsubrs
pop
and
mov
xor
inc
push
jnp
adc
out
sbb
push
push
adcb
test
imul
jno
jae
pop
mov
mov
pop
cmpsb
pop
lods
xlat
into
cwtl
cmp
out
movb
add
std
xchg
xor
adc
sbb
ds
cltd
idiv
ss
mov
cld
sub
mov
hlt
dec
mov
push
mov
sub
arpl
shrb
cltd
mov
jp
inc
mov
cltd
hlt
xor
jmp
add
fimull
inc
fiaddl
dec
insl
jecxz
mov
rcrl
pop
push
lahf
cmpsl
mov
notl
jge
out
bound
push
push
jo
jecxz
dec
clc
add
into
popf
and
sti
mov
push
push
lcall
cmp
adc
out
jne
js
cmpsb
out
test
stc
mov
outsb
or
push
xor
mov
sub
push
int3
cmp
loope
push
jbe
adc
dec
sub
adc
es
sbbb
call
cwtl
pop
and
mov
in
sar
loop
pop
add
scas
fdivs
xchg
inc
ss
inc
xorl
imul
idivl
insb
jns
test
lods
clc
add
mov
mov
les
leave
sbb
loope
mov
jecxz
lret
inc
jge
in
mov
and
xchg
jmp
pop
push
mov
lret
xor
pop
sbbb
inc
pop
pop
mov
sub
inc
pop
xor
jbe
push
rcrl
dec
out
pop
andl
ljmp
in
jbe
inc
mov
jg
inc
xchg
std
push
mov
cmpsl
push
jae
pusha
adc
shrb
rol
inc
imul
mov
movsb
scas
add
das
mov
xchg
xlat
into
std
inc
jno
repnz
pop
cmp
adc
test
dec
and
idivl
push
jg
loopne
push
mov
jmp
test
sbb
mov
fwait
mov
lret
and
movsl
lods
or
jmp
sub
testl
jae
test
mov
jno
lock
mov
and
lods
push
lds
jecxz
repnz
cmp
and
sub
pop
outsb
js
cmp
jg
roll
std
hlt
in
jg
ret
sub
movb
mov
add
or
test
push
les
cld
pusha
mov
fistps
or
shlb
sub
std
in
insl
aam
inc
out
jg
cmp
mov
adc
cltd
stc
jns
lahf
mov
insl
sub
mov
dec
pop
mov
dec
xor
lods
xor
add
and
push
fsubrs
mov
pop
in
and
iret
jmp
pop
and
fbld
shlb
dec
jbe
xchg
shll
xlat
gs
ficoml
jo
popf
ror
and
shrl
cmp
xchg
jecxz
push
pop
data16
jns
inc
mov
xor
pop
xor
rcrl
into
lret
outsl
sbb
jp
rorl
or
mov
cld
jp
pop
rclb
movsl
pop
lahf
pop
push
mov
scas
pop
into
rorl
out
mov
insl
addr16
cltd
dec
mov
push
call
aam
xor
jae
sub
sbb
fwait
ss
xchg
mov
je
imul
bound
sub
jb
adc
lock
sbb
xor
mov
push
push
xchg
xor
add
mov
loop
call
rcll
push
sub
mov
sub
jb
in
sbb
mov
les
ss
jp
pop
adc
mov
dec
sbb
adc
stos
pop
pop
xor
aad
rorl
roll
nop
mov
sbbl
js
mov
lods
inc
loop
leave
mov
lock
mov
xor
lods
add
sub
xchg
push
add
inc
lret
mov
mov
rep
test
xchg
xor
stos
jle
sub
mov
shrb
mov
lds
inc
xchg
dec
jo
push
and
test
std
dec
inc
dec
cltd
faddl
and
jbe
dec
adc
mov
mov
sbb
mov
and
outsb
fisttps
cmp
add
aas
push
adc
lcall
iret
push
xlat
sub
xchg
sbb
cmp
aas
stos
fldcw
lods
sub
loopew
out
mov
fdivs
orl
push
mov
push
aad
jp
arpl
jbe
lahf
inc
inc
in
jg
xlat
imul
ror
cs
in
lock
pop
into
cmp
fwait
jno
add
pop
fidivrs
add
jl
dec
adc
xor
mov
xchg
add
rclb
dec
sbb
mov
in
xor
push
shll
adc
int3
mov
push
and
pop
sbb
push
mov
inc
in
sub
adc
and
dec
iret
insb
and
fs
ret
mov
add
mov
test
into
mov
jae
jns
arpl
xchg
test
fmuls
xor
pushf
mov
and
gs
jecxz
out
adcb
ljmp
or
mov
sub
push
fs
in
inc
fmull
bound
pop
xor
lock
mov
xchg
ljmp
mov
jno
add
sbb
mov
ss
popf
stc
cmp
xchg
loop
xchg
outsb
sub
xchg
test
out
push
mov
xchg
pop
add
out
lock
repnz
push
mov
fstl
sbb
lret
addr16
adc
std
mov
xor
push
popa
jne
dec
cmc
adc
jmp
mov
mov
add
ljmp
mov
sbb
call
in
repz
adc
or
addr16
mov
out
jmp
ret
pop
int3
jecxz
sub
iret
lret
fwait
iret
sub
inc
in
mov
or
subb
jbe
inc
gs
test
inc
aam
arpl
push
pop
mov
test
mov
mov
jg
xchg
pop
jge
push
mov
push
and
cmp
xor
repnz
mov
test
jbe
pop
xor
jg
outsb
scas
in
out
and
data16
xor
in
inc
mov
lds
sub
push
std
push
push
shl
sub
nop
xor
inc
shlb
mov
shll
lea
mov
lahf
inc
test
test
sub
pop
mov
mov
sub
movsl
cltd
movsb
jp
dec
cmpsl
sbb
mov
std
sti
repz
jb
push
dec
jg
push
adc
jg
xchg
push
mov
popa
cmpsb
imul
lea
or
adc
mov
add
mov
fsubrl
cmc
fwait
mov
inc
orl
out
mov
leave
jbe
cltd
idivl
adc
mov
mov
ds
push
sarb
dec
mov
mov
stos
fdivrl
add
std
adc
int3
and
mov
enter
int
push
lods
sbb
repnz
push
add
lcall
jnp
mov
sub
sub
pop
bound
adc
adc
cltd
test
push
jbe
aam
dec
lret
and
mov
mov
dec
push
push
fmuls
andb
aas
jns
jo
push
mov
dec
shr
fdivp
jno
iret
ret
and
jns
test
adc
inc
xor
mov
call
pop
sti
test
xor
in
mov
xor
ret
mull
mov
jbe
pop
outsb
add
std
sarl
dec
in
sbb
stos
mov
mov
nop
inc
incl
push
das
sub
idivl
adc
xchg
mov
adc
bound
xor
push
cmp
add
ds
push
xlat
ds
enter
push
fmulp
ljmp
ret
sub
movsl
push
mov
addr16
fistps
sub
idiv
add
jnp,pn
js
jp
or
out
pop
jmp
in
xchg
adc
sarl
inc
xchg
dec
std
or
and
cwtl
fiadds
leave
xchg
aam
xchg
movsb
aas
rcr
and
insb
icebp
lret
shll
sbb
jge
clc
icebp
out
xchg
inc
repz
fucomp
sbb
pop
sbb
sbb
jns
inc
sti
int3
sub
sub
mov
daa
add
pop
pop
xor
mov
les
push
ss
add
js
dec
push
gs
insl
outsb
rolb
jb
inc
mov
ja
popf
and
sar
mov
addr16
cmpsb
add
andb
and
add
popf
jnp
int
pop
stos
inc
ss
xchg
adc
xchg
push
pop
mov
cltd
or
hlt
jo
push
jle
imul
btr
mov
adc
pop
mov
fcompl
outsb
sbb
aas
psubd
sbb
dec
xchg
mov
mov
hlt
cmpsb
adc
stos
outsb
sub
loope
inc
jmp
jns
sahf
jg
mov
pop
fs
dec
sub
xchg
out
inc
ja
cwtl
lahf
adc
and
or
jbe
or
push
in
jle
jmp
cwtl
sub
stos
or
test
sub
cwtl
cmp
pop
dec
pop
mov
cmp
cmp
mov
xlat
ret
pop
adc
mov
dec
bound
push
jmp
jns
nop
enter
push
fcom
clc
push
movsb
lods
push
js
popf
xchg
jg
aam
xchg
mov
sub
imul
jo
gs
addr16
push
inc
mov
mov
add
mov
outsb
decb
sbb
dec
int
lds
sub
test
mov
push
out
and
mov
inc
push
test
ljmp
cld
sbb
cmc
loopne
adc
imul
push
in
add
jno
cmp
mov
lea
bound
sub
shr
or
sbb
jg
push
jno
shll
out
inc
mov
ja
cmc
in
ljmp
out
dec
xor
adc
jae
fwait
sbb
pop
sbb
dec
inc
sarb
ret
cmp
in
xchg
add
mov
ficomps
lods
pop
addr16
negb
xchg
push
adc
pushf
fidivs
add
loopne
gs
cmp
mov
std
leave
in
sub
and
or
out
xchg
add
dec
lock
fld1
mov
push
or
xor
mov
push
dec
xchg
and
and
dec
insb
arpl
rcl
adc
jno
lds
int
push
and
into
insl
dec
js
inc
call
jmp
add
xchg
fcom
in
sbb
mov
int3
lret
dec
outsl
jecxz
jno
rolb
mov
roll
ljmp
mov
push
je
mov
clc
je
shll
das
jbe
je
ficomps
dec
cltd
daa
pusha
mov
sbb
xchg
fs
lds
xchg
imul
cmp
push
movl
nop
mov
sub
inc
cmp
dec
pop
addr16
push
and
aad
or
jmp
inc
cmp
ja
mov
outsl
xchg
scas
xchg
stc
dec
dec
sub
push
jbe
aad
mov
xor
pop
test
addl
mov
add
dec
and
xor
cs
jae
xor
jmp
sub
cmp
push
inc
dec
sbb
bound
popa
add
sbb
sbb
imul
dec
icebp
out
int3
jo
and
pushf
push
sbb
pop
aam
lret
jle
or
insb
sub
mov
and
int3
sbb
into
xchg
xor
int3
jmp
lahf
je
jmp
fwait
into
xor
xor
sahf
aaa
sub
cld
out
jp
std
pop
jo
add
scas
xchg
xchg
cmp
bound
jnp
ret
adc
adc
iret
shll
push
in
dec
jecxz
enter
fs
push
stos
dec
lock
js
jp
lods
rcll
fldt
sbb
xor
inc
or
dec
or
cmpsw
add
adc
clc
jmp
rcrl
jecxz
aam
stc
push
lret
push
add
lret
rol
cltd
sub
mov
test
mov
sub
into
mov
or
jmp
and
or
xchg
or
inc
mov
ljmp
sbb
xor
shl
shlb
lret
push
xchg
stos
aam
cli
mov
jp
imul
cld
cmp
sahf
sub
sahf
jne
add
cwtl
add
inc
add
leave
dec
out
movsl
sbb
push
add
aaa
scas
into
add
mov
push
add
ss
cmc
push
in
in
xchg
pop
adc
jb
inc
mov
hlt
jle
and
jb
pop
push
push
mov
pop
fsts
mov
loope
jno
mov
test
mov
out
rcl
test
cmp
rorl
inc
lds
pop
stos
jns
push
cltd
fwait
int
mov
sub
lcall
call
shlb
movsb
xchg
dec
mov
sbb
fs
mov
insb
mov
add
aad
dec
mov
pop
jno
add
jmp
or
mov
xchg
shr
insb
int
jp
push
cmp
lock
push
push
pop
push
pop
or
add
insb
shrl
das
sahf
xor
fs
je
or
sub
fisttpll
or
stos
int
pop
gs
sbb
and
pop
fcmovbe
xlat
sub
jle
test
xchg
bound
das
lahf
cmpsb
mov
fiadds
les
pop
push
jle
sti
fnstenv
pop
jnp
and
orb
jp
mull
jmp
cmp
aad
std
shr
sub
mov
jnp
jbe
push
jmp
jno
pusha
jle
push
mov
push
data16
mov
push
dec
mov
xor
out
sbb
rcrb
sbb
sbb
repz
scas
ds
dec
jo
insb
testl
cmpsl
test
pop
int3
add
in
lock
mov
hlt
imul
and
jl
dec
add
int
xchg
pop
fs
pop
dec
xchg
jl
sub
mov
mov
fcoml
mov
out
pop
ss
sub
rcl
pusha
ds
popf
adc
imul
sbb
xchg
or
inc
dec
cmp
mov
add
es
mov
enter
in
popa
cld
pop
jo
or
and
iret
loop
xchg
mov
sbb
pop
jg
movsb
push
sti
cmp
dec
das
fists
rcrb
mov
sarl
scas
ret
pusha
in
addr16
sub
scas
cmp
and
loopne
mov
xchg
and
sub
lods
and
gs
sarl
loope
pushl
gs
xchg
jmp
out
xor
daa
arpl
adc
add
lret
dec
out
fistpl
jne
pop
cld
push
dec
das
stos
mov
loopne
jne
out
mov
jg
mov
sub
fidivl
sbb
add
and
sbb
ja
inc
mov
cwtl
push
add
test
adc
shrl
cmp
xchg
inc
pop
inc
cmpsl
daa
scas
and
xor
mov
xor
cs
test
mov
xor
enter
aas
nop
lret
xor
into
xchg
jno
out
adc
jge
inc
mov
cld
lcall
shlb
addl
mov
jbe
cmp
push
std
in
xor
in
mulb
pop
mov
sbb
sahf
jge
iret
mov
insb
cmp
sub
adc
aas
sub
sti
or
shll
sub
jg
cltd
les
gs
jns
pop
test
and
std
loopne
cmp
int3
jg
pop
jle
inc
ror
xchg
jbe
test
or
cmp
aad
test
lods
inc
out
jne
scas
sub
addr16
sbb
arpl
das
cmp
mov
xor
push
js
faddp
or
pop
adcl
and
jno
addr16
pusha
mov
lret
xor
pop
pop
xchg
mov
sub
xor
and
xchg
hlt
and
mov
jo
xor
push
aaa
paddsb
sub
rcrb
movsl
xchg
js
cmc
push
xor
xchg
divl
sti
imul
sub
add
outsl
or
xor
lcall
lahf
dec
stos
lods
in
fbstp
mov
std
sbb
xor
rol
mov
sbb
push
mov
lods
fcomps
mov
pop
push
in
bound
enter
into
fisubrl
xchg
sub
cmp
sbb
rolb
test
test
roll
pop
cmpb
js
adc
fldcw
fsubp
pop
lahf
fcompl
xchg
pop
pop
xorb
xor
cmp
push
dec
dec
mov
fwait
addr16
mov
lcall
pushf
adc
jge
scas
mov
and
rorb
push
dec
dec
das
or
andl
mov
adc
jmp
pop
mov
sub
xchg
popf
gs
bound
jae
inc
adc
mov
shrl
xchg
xchg
jns
cltd
pop
shr
xor
les
ja
cld
iret
adcb
iret
fstpl
pop
fldenv
lcall
je
pop
jmp
aas
ret
lmsw
lods
pop
addl
inc
adc
push
push
dec
sub
push
xchg
mov
aam
cmpsl
or
push
cmp
xorb
push
inc
pusha
add
add
xor
and
mov
out
jmp
or
fstp
roll
ja
inc
ja
ja
jnp
in
mov
mov
mov
roll
test
push
push
adc
xchg
add
or
jmp
jecxz
cmp
xchg
mov
jae
xchg
cmp
mov
popa
aam
jmp
cmc
call
lock
add
in
mov
lcall
ds
cli
cwtl
les
xor
adc
or
push
fildll
or
xchg
sub
sbbl
mov
scas
jb
xlat
adc
mov
in
movsl
imull
mov
mov
mov
or
imul
xchg
in
mov
xor
pushf
add
shl
jo
loopne
add
rcrb
ljmp
movsb
jle
scas
cmp
fs
repz
mov
push
sub
mov
dec
jae
xor
and
rolb
insb
pushf
push
scas
dec
jno
dec
cmp
xchg
push
or
inc
negl
pop
clc
out
inc
ja
xchg
in
sub
stos
fdivrl
hlt
fsubrs
imul
subb
mov
adc
add
aam
cli
jl
in
cmp
negl
loop
mov
fcomps
in
addr16
lcall
loop
jne
addr16
idivl
clc
push
popa
and
das
pop
add
and
test
xchg
and
sub
xor
dec
xor
mov
int
rclb
jbe
test
notl
jmp
cmpsl
scas
adc
shr
sbb
ret
fsubrl
fidivl
mov
add
lret
mov
enter
in
iret
nop
cmp
fisubs
std
js
in
mov
loop
push
imul
leave
xchg
mov
cld
roll
stc
cli
push
in
push
jp
jecxz
fdivl
sbb
shlb
insb
mov
push
lods
fistpl
test
jne
mov
mov
fdivl
imul
and
ficoms
push
or
into
and
or
outsl
fiaddl
xchg
divl
pushf
push
inc
mov
lods
mov
inc
aad
dec
xchg
addr16
repz
jbe
fildll
loope
lret
cli
push
fsubs
mov
sbb
jae
push
lods
imul
cmp
dec
mov
sbb
sbb
cli
mov
call
lea
jo
mov
cmp
xchg
xchg
dec
pop
pop
ja
int
in
mov
sarl
pop
xor
push
imul
call
into
rorb
mov
mov
push
fnstsw
jl
add
adc
add
sti
dec
je
loop
jmp
mov
sub
sub
xchg
mov
orb
sub
mov
addr16
inc
inc
loope
daa
subps
outsl
push
jecxz
in
jno
imul
fwait
pop
scas
cmpl
aad
les
subl
orl
jo
mov
gs
fistpll
push
popf
push
bound
in
or
dec
lcall
mov
mov
fadd
cmpsb
gs
pop
sbb
inc
dec
aas
push
aam
rcll
leave
inc
mov
xor
clc
mov
fxch
sbb
push
mov
test
dec
add
adc
add
pushl
in
or
aas
mov
push
push
sub
mov
pop
cmp
adc
adc
mov
imulb
inc
xor
jae
xor
adc
out
cmpsl
sub
pop
stos
xchg
enter
loopne
nop
dec
dec
int3
adc
mov
jp
xchg
out
xchg
xchg
or
pop
fdivrs
movsb
cmp
xor
xchg
jb
in
xchg
inc
inc
mov
pop
popf
loop
mov
leave
mov
xor
scas
sub
xor
push
movsl
adc
dec
loope
shlb
addl
dec
adc
lret
cmpsl
inc
loope
push
jge
fistps
fstps
cli
cli
xor
rolb
daa
dec
jns
in
sbb
pusha
and
xchg
hlt
jne
push
mov
and
add
test
repnz
in
lea
xlat
fcoms
test
xor
cmp
add
xor
movsb
loopne
mov
aaa
or
add
loope
jp
adc
or
ds
aaa
fwait
loope
nop
lcall
gs
add
mov
sarb
mov
test
cmp
popa
ds
ficoml
sbb
mov
pop
ret
mov
lock
cs
sub
or
and
cmp
mov
je
sbb
jne
je
aad
add
stos
jne
cltd
jno
mov
mov
jo
mov
mov
loope
xchg
push
or
pop
inc
xlat
or
jmp
push
adc
pushf
movsb
mov
dec
out
mov
cmpsb
negl
testl
mov
testl
dec
or
push
inc
imul
pop
ljmp
and
cld
sub
push
scas
mov
add
aad
mov
mov
sbb
jp
push
adc
lcall
jo
xor
mov
rorl
cmp
mov
cli
or
gs
xor
or
jge
out
mov
push
sti
jg
cwtl
pop
jbe
es
mov
adc
popf
ds
xor
mulb
sub
pop
outsb
xor
adc
jo
test
dec
ret
sbb
cli
icebp
repnz
mov
mov
pop
test
jl
xchg
pop
add
cli
sbb
sub
sub
in
sbb
dec
cwtl
cs
jp
bound
scas
mov
lods
stc
or
sbb
add
cmp
cmp
xchg
cmp
mov
sub
es
jno
scas
rcl
pop
sub
ret
loop
je
mov
fildl
pop
insb
mov
in
jbe
push
cs
je
fidivrs
mov
mov
xchg
pop
les
jne
ja
out
test
jb
lcall
addl
mov
mov
sar
enter
into
jns
gs
mov
fsubs
xchg
lock
pop
ficoml
jmp
xchg
jb
shll
push
sbb
mov
mov
jl
lods
ljmp
pop
iret
gs
fs
or
jmp
pusha
jne
dec
adc
fsubrs
lea
dec
sahf
add
xor
pop
mov
adc
xchg
sub
xor
jmp
cmp
push
jbe
mov
cmp
roll
pop
dec
cld
mov
mov
shlb
cmp
mov
ja
lcall
pop
mov
addr16
adc
sub
mov
push
pusha
mov
or
adc
outsl
jnp
sub
fistl
in
lret
sbb
xor
jo
pop
xor
inc
out
xor
adc
outsb
arpl
adc
mov
imul
cmp
push
xchg
jge
push
incl
rorb
pop
or
cmp
stos
adc
icebp
out
subb
adc
xor
xchg
ja
dec
xor
jmp
gs
or
scas
xchg
and
int3
daa
sbb
rcr
scas
xchg
mov
xorl
das
movsl
mov
in
adc
jmp
push
xchg
in
jp
xchg
shlb
shrb
add
push
and
lret
fwait
popf
dec
addl
and
in
orl
sub
ret
mov
stc
inc
lods
sbb
dec
and
std
fwait
cltd
mov
aaa
ljmp
scas
outsl
hlt
and
add
sub
test
mov
and
cmp
iret
orl
jl
sarl
push
mov
lea
les
in
into
gs
paddsw
cld
inc
arpl
xchg
out
jnp
adc
jge
pop
xchg
fsubs
pop
popa
xor
sbbl
sub
test
xchg
int3
jb
lds
mov
add
and
push
xor
outsb
push
stos
jne
addb
pop
popl
sbb
test
aad
adc
push
lahf
ja
out
jbe
or
fwait
movsl
sub
dec
xor
cmp
lods
xor
stos
dec
mov
mov
test
cmp
lea
xchg
imul
imul
cmp
outsb
mov
push
xor
jae
sub
sarl
aas
dec
ret
in
test
jmp
push
inc
push
cmp
sub
aaa
cwtl
fwait
xchg
pop
mov
add
push
insl
jnp
mov
xor
rorb
dec
stc
sub
scas
mov
cmp
jl
sbb
outsl
or
mulb
jmp
not
jns
imul
mov
cmp
mov
and
jae
mov
sub
cmpsl
inc
scas
aad
repnz
mov
fldcw
outsb
xchg
cld
mov
jb
jbe
sti
test
add
cmp
sarl
lods
adc
in
mov
push
xor
popf
adc
mov
push
das
dec
and
or
mov
xchg
ret
or
mov
xchg
cmp
inc
out
cmp
aad
inc
pushf
stos
out
cmp
xor
aad
daa
imul
pop
cmpxchg
fwait
add
in
lock
adcb
stos
hlt
jge
lds
and
lcall
mov
icebp
sub
jmp
aaa
sbb
in
in
pop
mov
fsts
sub
bound
icebp
push
push
jg
out
testl
xchg
outsl
out
and
xor
orl
cmp
mov
mov
decl
jge
dec
in
fwait
stc
out
cld
pop
adc
lods
popf
lret
aam
inc
mov
sub
jno
dec
addr16
inc
sub
pop
xlat
loop
in
mov
in
push
jo
ljmp
mov
arpl
mov
testl
jno
and
out
inc
neg
inc
cmpsl
mov
stos
lcall
fmuls
das
cmp
push
decb
or
ror
shlb
cmp
pop
loope
dec
mov
outsb
xchg
cmp
das
loope
and
jae
jp
fdivl
or
pushf
dec
aad
data16
mov
ljmp
int3
test
inc
pop
cmp
out
ret
ficompl
and
fwait
mov
cs
mov
sbb
jle
sbb
push
cld
add
shrl
int
daa
ja
shl
sub
cmp
xor
push
movsl
jecxz
and
fcomi
sbb
mov
cmpsl
mov
out
cld
mov
mov
sarl
inc
push
fidivrl
popa
dec
scas
push
in
mov
inc
xchg
fidivrs
lcall
mov
push
fwait
aad
pop
or
xor
xor
push
xchg
sbb
pop
sub
int
sub
movsl
lods
pop
pop
out
scas
dec
mov
mov
aad
hlt
mov
mov
cld
std
sub
lret
dec
sarb
adc
sbb
enter
ss
movsb
and
shrb
mov
inc
or
mov
dec
sub
sub
gs
xor
add
ror
adc
stos
cld
lock
loope
cmp
nop
dec
les
mov
pop
sub
dec
icebp
cmpsb
sbb
or
and
adcl
addr16
shll
idivb
jge
outsb
adc
jmp
fdivl
ret
lods
jle
ret
pop
test
ret
mov
stos
ja
in
test
cmp
mov
test
sbb
adc
xlat
xchg
lock
cmp
jg
sub
jle
mov
pop
cmp
xchg
pop
mov
fcomip
sbb
mov
rcll
dec
gs
aam
repz
sahf
andb
test
or
andps
jno
pop
lods
jbe
xlat
or
inc
jbe
loope
or
sbb
mov
fxtract
test
mov
xchg
lods
fsubrl
mov
mov
pop
xchg
into
movsl
mov
js
xchg
mov
xorb
or
mov
xchg
or
jle
cmp
dec
int
jle
mov
mov
mov
xor
jmp
xchg
jae
mov
cmc
mov
jbe
mov
inc
decl
mov
mov
in
mov
fidivs
pop
fisttps
rcr
jg
shl
pop
xor
add
dec
fdiv
test
dec
push
jmp
or
xchg
pop
sbb
xchg
jmp
sbb
dec
lods
jo
fnstenv
push
shlb
xchg
call
mov
aaa
adc
cltd
jbe
dec
daa
sbb
insl
ret
bound
adc
sbb
sub
and
call
test
ljmp
and
bound
mov
movsb
into
push
inc
jbe
mov
cli
pusha
push
jecxz
mov
or
pop
cs
test
add
into
mov
mov
push
cmp
jne
or
mov
mov
mov
addr16
inc
mov
outsb
leave
xchg
lods
mov
sbb
addb
imul
repnz
or
fsubrl
les
mov
jo
daa
das
repz
mov
fcmovnu
sub
push
sahf
aad
or
xorb
sub
ds
inc
js
sub
or
jne
jo
or
fcomps
dec
push
loope
fildll
mov
sub
pop
or
lret
mov
inc
xchg
sbbl
and
mov
mov
cmp
pop
xchg
ret
rcll
push
imul
nop
xor
fimuls
push
dec
stos
push
pop
dec
adc
cmp
pop
test
std
ja
ljmp
pop
jns
jl
sti
jno
xor
pushf
sbb
push
xorl
int3
sub
fnsave
jl
fs
je
add
lret
leave
fdivl
lret
ds
pop
cmpl
mov
in
les
and
in
repz
pop
adcl
test
sbb
int3
jno
cld
xchg
xchg
mov
pop
mov
mov
insb
test
negl
pushf
sbb
and
mov
mov
insb
stc
outsb
push
sbb
iret
pop
or
rorl
out
mov
fisubrl
aaa
cs
dec
add
mov
stc
aad
movb
sbb
je
xor
ret
imul
jle
cmc
sub
notb
roll
insl
push
xor
dec
sbb
loop
cld
add
sti
or
xchg
icebp
mov
xor
aam
mov
dec
xchg
xchg
das
push
bound
mov
jmp
aas
xchg
xchg
inc
add
les
sub
or
pop
lods
cmp
enter
dec
push
in
sub
ljmp
and
sub
test
push
push
mov
pop
add
sbbl
cmp
sbb
xchg
fistpl
jmp
std
cwtl
mov
test
jp
jne
add
mov
add
je
stos
xor
fcmove
cli
jno
sarl
loope
je
idivb
hlt
mulb
xchg
dec
inc
ret
stos
lea
in
pop
mov
xlat
fbstp
outsb
or
iret
and
sbb
imul
cs
outsl
fsubr
movsb
addl
mov
cmpsb
aam
pop
fdivr
inc
or
ficoms
popa
sarb
xlat
cltd
jnp
sbb
out
cmc
push
popf
movsl
pusha
dec
cltd
mov
sbb
std
cmp
shll
stc
mov
or
test
jns
push
icebp
scas
aam
push
xchg
rclb
sbb
push
xorb
xchg
add
push
and
leave
stos
ret
test
lret
adc
cmp
adc
cmpsl
in
divb
cmp
cmc
jne
test
xchg
xchg
imul
imul
mov
xor
inc
ret
out
imul
push
jns
xor
jl
stos
cmp
sahf
xor
aad
aam
push
stos
lods
xor
cld
cmp
hlt
lahf
hlt
or
popa
ss
notb
dec
js
das
imul
jbe
mov
sbb
scas
add
push
enter
xchg
cwtl
pop
sub
mov
sbb
out
inc
xchg
pop
je
push
gs
mov
cs
xlat
daa
sbb
jge
divb
jmp
mov
dec
test
fistl
stos
add
push
push
add
int3
repz
mov
in
into
daa
cld
sub
mov
mov
xor
jl
pop
out
enter
push
ds
cmp
iret
int
popf
mov
mov
aas
fnsave
in
dec
popa
push
inc
mov
in
xchg
cmp
mov
je
test
or
aas
rolb
in
cltd
fldcw
mov
xlat
push
addr16
insb
movsl
dec
lock
dec
mov
push
cmp
add
testl
mov
int3
cmpsl
jnp
push
les
push
xchg
or
in
bound
lea
xorl
ljmp
sub
subb
dec
push
lret
stos
pushf
fmull
jg
xchg
adc
xchg
xchg
xor
add
mov
mov
je
imul
pop
mov
or
adc
add
cltd
mov
aam
dec
adc
jle
add
cmpsb
sub
fs
sbb
mov
push
lds
and
dec
rorb
add
mov
pusha
imul
ret
lret
and
loop
scas
jnp
sub
sbb
add
jbe
ljmp
clc
pushf
jae
xor
and
xor
jg
cmp
pop
jg
sbb
pop
pop
rol
adc
xchg
sub
sbb
xor
scas
cmp
shrb
lcall
sub
movsb
outsb
and
mov
cli
pop
add
push
xchg
cmp
int3
cs
mov
cmp
jmp
push
mov
pop
dec
jle
aas
sbb
adc
ss
lret
out
fldcw
ss
hlt
xchg
fistpll
test
inc
imul
mov
jne
lcall
mov
sub
push
lock
xor
test
lcall
scas
inc
xor
pop
jb
das
outsl
add
dec
je
popf
xor
cmp
pushf
pop
cmpsl
imul
dec
inc
xchg
mov
or
into
test
pop
repnz
xchg
mov
push
addr16
dec
sub
push
pop
mov
pushf
mov
popa
mov
mov
pop
mov
push
xchg
jno
xor
out
pop
sub
fistl
shlb
popf
aaa
loopne
cs
addr16
adc
or
pop
mov
and
jns
dec
jge
adc
loope
and
mov
add
gs
stos
inc
sub
add
jbe
repz
jge
mov
xchg
mov
jmp
enter
lret
adc
or
lods
hlt
outsb
and
push
mov
int3
add
and
repnz
push
sbb
xor
cmc
push
inc
cltd
aas
loopne
xlat
clc
cmc
mov
add
mov
int
nop
sti
sub
fildl
je
xor
cmp
pop
dec
xchg
and
jo
sub
xchg
sbb
sub
testl
adc
cmp
je
out
xor
js
inc
xchg
mov
test
sbb
mov
mov
mov
fadd
dec
dec
in
mov
and
dec
push
cmpsb
cltd
adc
scas
neg
into
pop
push
mov
xor
pushf
mov
imul
cmp
popf
fstp
outsb
popa
hlt
dec
ds
jb
dec
negl
dec
ja
dec
and
in
push
sbb
adc
dec
push
les
add
cli
sbb
pop
int
xchg
lahf
sbb
push
inc
mov
popa
sub
xchg
xchg
mov
mov
int3
jbe
js
jno
cmp
push
pop
movsl
and
cmpsl
cs
adc
cmp
jmp
xchg
pop
jle
int
jne
add
dec
pusha
mov
jbe
adcl
xlat
sub
movsl
mov
cs
pusha
sbb
jmp
in
cltd
jp
push
or
loopne
je
lcall
repz
jae
daa
insb
add
xchg
scas
adc
xchg
aaa
stc
xchg
mov
pop
rcrl
scas
movsl
nop
jo
cmp
lret
daa
jb
mov
ret
mov
fcomps
pop
inc
fsub
std
or
daa
bound
pop
dec
jge
jge
aaa
popl
incl
push
sub
in
cmp
inc
mov
or
fsts
cmpsb
sbb
mov
xchg
lods
popa
inc
jne
das
scas
cmp
inc
inc
lret
push
xorb
pinsrw
xchg
xchg
lahf
test
cltd
jl
push
xchg
gs
push
fidivs
dec
aas
outsb
mov
mov
pop
cs
lods
jl
dec
and
cmp
jb
lods
mov
popa
lock
bound
lret
fildll
insb
icebp
mov
nop
hlt
js
push
adc
mov
int
xor
jge
pop
xchg
stc
mov
arpl
int
dec
dec
lcall
add
sbb
xor
pop
outsl
mov
shlb
pop
mov
mov
xchg
jge
add
xchg
ljmp
xor
cmp
clc
or
dec
aam
into
lods
inc
xor
les
xor
outsb
leave
in
adc
and
iret
adc
out
loopne
mov
jo
sub
inc
movsl
aaa
jb
jmp
push
test
in
pop
orl
pop
sub
dec
les
mov
mov
sub
cmc
mov
cltd
xchg
scas
roll
cmp
mov
mov
and
aam
inc
inc
push
push
sub
jge
and
insb
sub
mov
inc
push
jmp
pop
adc
pop
mov
ds
std
cmp
shlb
mov
mov
push
pop
inc
or
call
sub
jmp
fiaddl
push
pushf
cmp
out
shll
and
sub
pushf
fmuls
inc
add
imul
push
out
notl
and
mov
adc
in
xor
mov
cmpsl
int
fstpt
push
ja
cmpsl
sub
and
in
mov
imul
fadd
sbb
sbb
pushf
leave
enter
in
std
int3
mov
xor
scas
iret
idivl
and
or
mov
stos
leave
xor
cmp
pusha
lcall
fstpl
sti
je
inc
and
lea
xor
loop
in
aaa
cmpb
xchg
int3
test
cmp
inc
push
cmp
sub
pop
push
shlb
enter
dec
jl
scas
mov
and
sub
push
mov
xor
cld
xchg
pop
jb
in
es
shlb
pop
dec
xchg
dec
mov
adc
scas
popa
jge
sub
repnz
cmp
mov
inc
mov
rcrl
js
test
sbb
inc
mov
loope
out
ficompl
adc
jnp
xlat
cwtl
jbe
sbb
or
cmp
dec
insl
mov
iret
cmp
add
cmc
adc
iret
pusha
into
pop
sbb
add
or
adcl
insb
or
test
or
jns
and
cmp
push
roll
pushf
cwtl
out
add
das
jmp
push
xor
push
stc
dec
pop
cltd
adc
in
xor
adc
stc
xchg
add
cli
add
pop
aam
sub
or
push
and
mov
sub
pushl
cmp
xchg
adc
mov
clc
adc
fucom
push
fildl
jns
and
jecxz
rol
fcoms
int
nop
mov
jb
cmp
cmp
dec
cli
xchg
daa
pop
mov
data16
fsubp
cmp
jns
inc
enter
js
std
loope
jmp
add
push
push
mov
pop
cmp
aas
scas
lds
rcr
and
mov
mov
sbb
mov
ret
insl
inc
sti
les
aad
xor
leave
test
fbstp
movsl
xor
mov
or
or
mov
fisubrl
into
int
int3
mov
xchg
ss
enter
or
cli
rcll
mov
dec
loop
mov
mov
out
les
or
inc
pop
mov
sti
scas
das
push
sbb
into
dec
mov
mov
outsl
add
push
clc
add
insl
rclb
sub
gs
xor
and
adc
mov
out
push
subl
mov
ds
and
sti
dec
std
and
cmp
and
add
jno
shl
cli
push
xor
sbb
sahf
mov
sub
mov
push
dec
sahf
dec
loopne
add
add
repz
mov
xchg
ret
push
or
or
bound
adc
lods
sar
dec
push
mov
lcall
sub
or
repz
push
sahf
ficoms
add
fcomi
xorl
push
je
inc
add
jns
inc
adc
or
jo
dec
sub
fisubs
dec
insl
mov
fistps
pop
push
mov
pop
inc
lock
push
dec
les
and
mov
outsb
sbb
sub
imul
repz
pop
or
push
stos
jl
popa
jle
lahf
or
loope
addr16
cld
push
jno
mov
ja
cmpsl
push
inc
enter
or
lock
scas
jne
rcrl
xchg
push
repnz
in
push
jns
cmc
loop
lret
pop
xchg
push
sbb
add
jne
std
loop
stos
fsubs
stos
adc
jbe
movsb
out
mov
pop
xchg
xor
subb
mov
xchg
xchg
cmp
jnp
cwtl
fwait
ss
aad
call
fwait
nop
xchg
xor
mov
xlat
cmc
outsl
test
jne
cmp
push
data16
jmp
imul
cmp
cltd
ss
mov
sub
aaa
push
xchg
stc
int
sbb
inc
mov
jns
lret
inc
jge
pop
arpl
arpl
cmp
lock
int
aaa
lds
mov
pop
push
xchg
cvtdq2ps
xchg
cmp
xchg
in
sub
cs
test
pop
mov
in
jb
push
pop
popa
je
ljmp
ret
xchg
ret
and
outsl
or
lock
dec
xchg
mov
and
fldcw
jnp
shlb
dec
movsb
sahf
push
stos
nop
or
movsb
pop
push
jle
mov
frstor
and
fcom
out
sbb
iret
pop
repz
push
and
jb
jns
loope
jne
jno
mov
cli
xchg
cs
sub
sbb
cmp
fcmovu
pop
sti
jns
popf
pop
je
pop
sarb
cmp
mov
xchg
in
jge
mov
push
aas
xadd
add
sbb
sarb
mov
lahf
icebp
dec
lock
test
add
jne
fildll
sbb
daa
pop
mov
fs
mov
in
sub
jo
popa
into
push
sbb
aam
stos
jns
es
ret
push
in
push
cli
fdivr
aam
popf
xchg
jmp
dec
adc
aad
add
rcr
add
pop
jecxz
les
or
cwtl
mov
sbb
iret
sub
popf
or
sbb
jge
imul
arpl
cmpsb
push
loop
std
cmpsb
jae
jge
jmp
jnp
in
sahf
push
and
mov
leave
and
sti
ss
test
flds
jne
mov
repnz
cld
xor
fcmovnb
or
adc
jmp
lea
xchg
jno
xchg
mov
mov
push
xchg
push
xchg
movsl
emms
mov
sbb
mov
lock
and
pop
dec
sahf
jno
push
add
mov
in
jbe
sub
push
lret
scas
aaa
nop
pop
and
callw
imull
enter
loope
shrl
fists
xor
adc
rolb
add
stos
enter
push
add
add
fstp
fstp
fstp
jo
ja
mov
sbb
push
mov
mov
jmp
mov
or
gs
into
push
xchg
aam
push
xchg
andb
inc
xor
push
inc
sub
test
popa
ret
jle
pop
jns
repnz
repz
hlt
movsl
out
stc
lods
lds
das
movsb
dec
fists
mov
xlat
out
fcmovu
dec
xchg
shrb
cltd
dec
les
out
je
pop
in
js
les
test
nop
outsl
mov
pop
out
mov
mov
push
pop
mov
out
popf
jb
data16
bound
pop
fwait
cmp
mov
lock
aam
mov
insl
cmp
test
mov
or
aas
or
mov
jge
aam
xrelease
sub
test
or
fisttps
xor
icebp
jne
mov
sub
dec
xchg
mov
inc
push
fiadds
mov
enter
out
pop
in
ds
dec
jns
mov
ss
fimull
in
push
notb
adc
out
mov
jg
fs
push
pushf
idivl
popa
xor
popf
mov
inc
repnz
test
lea
cli
mov
imull
pop
shlb
push
insl
jbe
insl
rcr
test
jmp
add
dec
cmp
jnp
and
adc
push
or
arpl
mov
arpl
hlt
lret
repz
xlat
mov
xor
std
imul
or
jecxz
sbb
xchg
out
int3
inc
fidivrl
jne
call
in
xor
repz
loop
dec
xorb
outsl
xchg
lds
mov
or
jmp
pusha
in
ffreep
cmpsb
dec
sbb
add
xchg
sti
dec
nop
push
jnp
into
adc
mov
inc
and
sub
sahf
bound
mov
pop
out
adcl
stos
jnp
clc
mov
push
sysenter
cltd
xor
enter
js
sub
sbbl
mov
mov
xor
inc
shl
xchg
stos
cmpsl
lahf
sarb
lea
pop
push
inc
jl
shlb
xor
mov
sbb
js
xor
in
xor
out
mov
cld
cmp
popa
js
hlt
xchg
out
sahf
adc
jp
hlt
adcl
adc
repz
in
cmp
add
mov
sbb
aas
lods
cmp
rolb
decl
sbb
fs
ds
jle
inc
jno
addr16
adc
clc
idivl
je
sbb
or
sub
lret
enter
dec
xchg
mov
lcall
sahf
add
decl
aas
arpl
push
leave
inc
inc
sbb
jno
imul
leave
repz
or
lea
xchg
mov
sub
add
in
jns
cs
jecxz
out
jl
dec
add
or
xor
xchg
stos
out
stos
ror
lcall
pop
push
mov
jl
dec
loopne
jns
and
nop
adc
gs
adcb
orl
lock
mov
cmpl
xchg
lret
stos
dec
mov
pop
push
inc
test
or
repz
in
jno
sbb
insb
imul
add
adc
ja
addl
rclb
stc
std
out
imul
addr16
scas
dec
out
dec
lods
fidivl
mov
mov
mov
js
in
mov
jo
arpl
shl
mov
sub
movb
add
je
push
xor
sub
pop
inc
pop
lds
inc
mov
xor
ja
push
stc
movsb
mov
dec
mov
dec
or
loop
jae
mov
loope
mov
adc
insl
lret
dec
into
mov
adc
into
xchg
test
das
sar
movb
inc
xor
dec
xchg
std
lock
or
fists
push
sub
mov
cmp
dec
inc
cmp
inc
cwtl
dec
adc
daa
xor
adc
and
inc
push
sub
push
pop
lret
jp
adc
rcll
mov
arpl
shll
add
sahf
setge
mov
mov
imul
sub
dec
pop
inc
cli
sub
inc
sub
insl
pop
pop
xchg
pop
cld
stos
xor
push
popf
cmp
rorb
iret
clc
inc
popa
dec
xlat
mov
shll
pop
stc
idivl
incl
or
loope
sbb
or
dec
loopne
cmp
js
mov
imul
inc
sub
das
fwait
xor
sbb
sub
imul
popa
inc
shl
push
push
inc
sbb
outsb
xrelease
scas
scas
jnp
int3
ret
cmp
pop
pop
subb
pop
sub
sub
sarb
clc
mov
pop
les
out
or
adc
or
jne
jno
leave
rol
mov
inc
or
aaa
mov
addb
cmpsb
mov
scas
sarb
or
mov
xor
rcr
mov
sub
incl
sahf
fsub
jge
mov
sbb
sub
data16
cmc
xchg
adc
sub
push
adc
js
fsub
fadds
fmuls
sub
movsl
lds
sub
popf
adc
inc
pop
inc
lock
mov
add
stos
and
sar
dec
adc
adc
sub
jnp
pop
mov
in
hlt
icebp
mov
dec
pop
sub
test
leave
xlat
push
sub
add
je
pop
movsb
clc
ja
pop
gs
ja,pn
push
pop
test
jg
xor
jge
sbb
push
scas
cmc
jge
rcrb
adc
stc
mov
sub
aas
clc
int3
lods
fistpl
cwtl
xchg
nop
in
loopne
ss
leave
dec
xchg
ds
lret
js
testl
dec
pop
mov
mov
faddl
xor
or
cs
iret
outsl
sub
xor
aad
fists
mov
xchg
or
or
jle
jge
icebp
cltd
cmpsb
rclb
sub
movq
dec
test
out
fcompl
and
inc
xor
aad
sti
test
sbb
in
sbb
cmp
and
inc
stc
rcl
lock
dec
out
mulb
jbe
push
mov
sbb
mov
popf
add
cmp
dec
stos
sahf
sahf
xlat
loopne
inc
mov
pop
mov
add
or
dec
jg
dec
subl
mov
pop
imul
repnz
push
jecxz
push
cltd
test
repnz
fbstp
movsb
mov
lret
in
pop
mov
xor
jl
xchg
pop
or
mov
in
adc
mov
int
and
add
adcl
and
jl
popf
dec
dec
outsb
imul
sub
sahf
shrb
xchg
inc
sub
aas
dec
hlt
lcall
gs
inc
ficoml
mov
test
sbb
and
mov
pop
xchg
jl
std
mov
outsb
xchg
dec
sbb
ja
lcall
shlb
leave
jne
cmp
jb
out
add
call
mov
jecxz
ljmp
pop
bound
ret
mov
das
jno
adc
inc
imul
cld
mov
xor
xlat
stos
loop
sbb
and
insl
jno
jmp
cmpsl
cs
mov
xchg
cli
ljmp
inc
xchg
cmp
mov
or
lds
and
sub
dec
jmp
mov
mov
pop
jmp
out
sub
lcall
cmpb
shl
xor
push
sub
xor
fcoms
aaa
sbb
in
dec
cmp
stos
sub
jnp
aad
cltd
push
sub
pop
push
jns
dec
ja
sub
mov
jl
push
sarl
push
or
cmp
sub
adc
jo
pop
mov
push
test
pop
sbb
dec
pop
pop
push
popa
mov
lds
inc
mov
dec
popa
cmpsb
jecxz
or
mov
jo
mov
out
pusha
or
cmp
lods
sub
push
call
shll
loopne
xchg
mov
das
sbb
inc
cmp
mov
sbb
pop
stc
test
or
mov
nop
inc
cltd
adc
test
dec
sahf
call
dec
and
negb
jle
jnp
pop
into
push
ljmp
lea
add
mov
sub
ja
dec
mov
xchg
add
adc
pop
scas
iret
sub
push
adc
xchg
cmp
fimull
xchg
scas
sub
mov
xor
fists
js
mov
cmpsl
aaa
fwait
and
loope
xor
jg
popa
mov
dec
push
jae
das
sarl
lret
pop
jae
xor
mov
jns
lcall
mov
cmp
sub
shrl
jge
mov
orb
or
dec
addr16
sub
lods
scas
mov
mov
pop
fst
cmp
or
push
mov
mov
imulb
out
xor
ds
pop
cmp
ja
jbe
je
mov
mov
ficompl
push
pushf
inc
sub
scas
daa
pop
cmp
xchg
or
test
lret
cmc
aas
xchg
mov
stos
mov
cmp
mov
ret
adc
js
nop
in
cmp
dec
pop
sbb
inc
imull
enter
mov
out
out
les
mov
push
jl
call
icebp
xchg
data16
pushf
hlt
jmp
jecxz
inc
js
xchg
repnz
mov
fists
xchg
xor
and
and
mov
out
and
xlat
push
inc
cmc
test
mov
mov
clc
xchg
sbbl
adc
mov
inc
inc
pop
mov
push
push
shlb
std
add
daa
mov
stos
movsl
xchg
cmp
jp
loope
int3
sti
aaa
add
aam
sub
jle
je
mov
sti
pop
mov
sbb
mov
das
jae
mov
out
aad
adc
stc
mov
les
add
or
and
or
into
push
pop
push
or
sbb
jg
cmpsl
xchg
xlat
dec
adc
sbb
inc
pushf
pop
mov
inc
lea
adc
test
mov
cmp
inc
adc
xchg
add
pop
popa
cmp
pop
mov
insl
pop
subb
les
aas
stos
into
pop
scas
jle
pop
push
test
and
adc
push
mov
pushf
add
dec
inc
xor
jp
inc
jnp
icebp
push
or
dec
decb
fs
push
mov
adc
and
xchg
push
jae
fstpt
mov
jns
sarl
cmpsb
mov
filds
cmp
leave
daa
mov
sub
cltd
fs
incb
xchg
fwait
or
inc
mov
adc
insl
xor
xor
mov
mov
cmp
mov
imul
pop
mov
add
or
mov
insb
and
mov
leave
cld
mov
xchg
in
and
inc
sbb
repz
pop
push
jo
fcoms
sub
fists
daa
fwait
xchg
or
mov
sub
stos
inc
std
push
into
mov
mov
jge
loopne
or
fs
push
pop
test
into
inc
lret
xor
ljmp
bound
jmp
mov
aad
sub
je
stos
inc
lds
sti
fdivrs
jo
push
push
mov
pusha
test
inc
lods
dec
xchg
xlat
insl
xchg
lahf
int
loopne
ljmp
sbb
pop
shrl
pop
bnd
ljmp
cmpsl
adc
fdivl
dec
pop
addl
inc
push
cmp
loopne
ret
jb
push
test
or
push
movsl
sbb
das
lret
adc
push
jns
std
cmp
jno
cmp
xchg
in
push
rol
das
movsb
cmpsb
jbe
in
jne
jl
pop
mov
nop
loopne
push
pop
rcl
std
out
push
jge
ja
xchg
sarl
adc
stos
enter
addl
stos
add
jno
pop
test
mov
int3
jmp
fwait
gs
clc
or
adc
loop
pop
xor
mov
mov
shl
fmul
and
stc
fists
push
scas
in
inc
stos
decl
outsb
pop
sub
or
push
dec
push
inc
loope
jl
add
pop
push
scas
dec
fists
jo
jmp
lcall
cmpsb
and
jecxz
mov
cmp
es
mov
inc
push
loopne
aad
movsb
idivb
pusha
adc
adc
push
mov
sub
jmp
jp
mov
dec
arpl
push
andl
popf
fs
sub
outsb
push
cmc
xchg
fucomp
stc
jbe
push
rep
and
inc
add
les
and
dec
mov
pop
fcoms
lcall
adc
repnz
insb
xor
add
pop
pop
xor
push
push
xchg
xlat
mov
test
or
lods
incb
xchg
nop
pop
push
cmp
push
cld
pop
nop
mov
iret
push
ljmp
add
and
jae
popf
jno
xchg
xchg
push
xor
xor
mov
ljmp
xor
pop
xor
push
testb
xchg
imul
pop
lds
xor
sub
inc
mov
pminsw
testl
xor
dec
test
insl
mov
int3
ja
and
nop
and
jnp
dec
loope
or
inc
insl
mov
cmp
push
std
fdiv
sub
pop
dec
jb
in
inc
dec
subl
cmp
fcmovnb
in
jmp
leave
call
in
inc
or
aam
iret
sub
sub
sahf
jb
nop
test
faddl
mov
pop
aas
push
movsb
inc
sub
fmuls
adc
arpl
lock
out
lods
lock
dec
fbld
ds
cmc
adc
cmp
arpl
arpl
inc
push
repz
nop
iret
mov
xchg
push
fcmovu
int
mov
pop
sbb
data16
adc
mov
mov
add
sub
adc
pop
mov
mov
lret
jbe
sbb
push
cltd
aas
adc
xor
insl
jb
inc
mov
jle
loope
aaa
xor
out
adc
addl
mov
sub
xchg
push
cmp
adc
xchg
shrb
cmp
or
in
push
test
pop
push
sub
pop
ret
idivb
cmp
in
xchg
jnp
pop
pusha
inc
in
fstpt
jp
adc
ja
inc
adc
je
adc
push
rcrl
push
outsl
loopne
into
lret
jge
not
les
gs
jnp
add
mov
mov
les
mov
xchg
xchg
hlt
sbb
std
aam
add
mov
jle
adc
mov
stos
popf
inc
cwtl
cmp
popf
popf
mov
imul
jnp
mov
in
push
adc
xor
adc
in
jne
lret
pop
push
sbb
pop
aam
lea
out
test
mov
inc
or
jg
or
clc
int
movsl
iret
jno
pop
or
push
mov
or
inc
fs
push
cmp
mov
insb
xor
add
sbb
xor
xor
jbe
fdecstp
notl
movsb
sbb
stc
repnz
test
pop
cli
xor
test
cltd
sbb
sub
inc
sti
xor
ja
fstl
aas
mov
insb
flds
es
push
sub
pop
loopne
fwait
lods
mov
xor
ja
xor
jbe
test
jbe
sbb
push
loop
and
push
into
pusha
or
flds
in
push
lods
xor
sarb
das
jns
movsb
mov
cld
xchg
cmpb
mov
mov
jl
int3
addb
sahf
xlat
repnz
jb
sbb
clc
mov
mov
pop
mov
mov
les
outsb
es
mov
js
nop
mov
frstors
cltd
filds
inc
mov
mov
pop
mov
sbb
lret
mov
fimuls
lods
xchg
repz
lahf
jmp
xchg
out
rclb
xlat
inc
cmpsb
add
fldcw
test
push
icebp
adc
jae
ss
scas
fwait
jne
and
fiaddl
pop
mov
subl
roll
adc
xchg
pop
rolb
sahf
adc
fwait
cmp
mov
adc
lret
xor
fnstsw
push
cwtl
ds
in
push
ds
andb
scas
sahf
movsb
xor
mov
adc
inc
adc
lock
roll
push
xchg
fyl2xp1
test
shlb
fldt
lock
xor
popf
adc
cmp
sbb
mov
sub
fdivs
mov
jge
adc
dec
int
adc
dec
test
jmp
dec
sbb
data16
or
dec
and
xor
adc
loopne
sub
jne
insb
dec
jle
neg
nop
aad
dec
insl
push
pop
imul
popf
lahf
and
mov
cmp
bound
inc
jp
test
out
dec
xchg
lds
out
pop
fcmovnbe
ret
in
sub
jns
pusha
roll
mov
push
mov
mov
push
scas
mov
sbb
pop
xor
push
add
repz
pop
jmp
mov
mov
add
lods
call
pop
cmp
and
mov
int3
clc
imul
es
dec
iret
push
push
mov
xchg
rorb
insl
ljmp
cltd
xor
fidivl
mov
dec
cmp
pop
xchg
sbb
aad
cmc
adc
cmpsl
scas
adc
inc
cmp
push
movsl
and
loop
pop
sub
pusha
daa
negl
jne
pop
xchg
outsb
dec
push
fsts
dec
fnstsw
jecxz
dec
daa
push
fcom
mov
xchg
sti
je
mov
imull
mov
sub
push
pushf
outsl
jp
xor
xchg
repz
or
cmp
mov
das
ret
jae
mov
push
mov
lcall
pop
mov
ret
xchg
stos
lods
std
rolb
jecxz
push
inc
xchg
push
fs
add
mov
test
mov
push
xchg
push
adc
insl
mov
test
int3
sbb
lret
enter
add
aam
rcl
sbb
jae
mov
shl
mov
addr16
inc
out
enter
mov
adc
call
into
push
out
sub
adc
pusha
arpl
rorl
push
jb
mov
sub
push
je
fcompl
or
into
imul
sub
pop
add
jo
int
or
xlat
sub
sbb
or
push
mov
push
inc
dec
inc
mov
sbb
and
jmp
adc
pop
pushf
data16
adc
js
loopne
adc
pop
xchg
or
push
sahf
nop
cmc
outsb
scas
lret
or
pop
xchg
aas
sbb
test
leave
fadds
fldcw
push
popa
mov
mov
mov
andl
adc
xchg
xor
arpl
addr16
dec
sub
xor
xlat
push
shrl
inc
outsl
dec
jmp
movsb
dec
and
sarl
int
rcrb
push
push
scas
or
cmp
or
xchg
sbb
sbb
out
inc
das
push
sbb
cmp
ds
jo
add
test
sub
bound
add
and
pop
fstpt
icebp
pop
mov
mov
xchg
das
mov
and
adc
pop
mov
pop
dec
pop
cmpsl
mov
push
inc
shl
sub
and
imul
sbb
jno
jmp
mov
pop
mov
mov
mov
add
mov
mov
sarl
xchg
fdivr
fimull
ret
ss
jge
add
ljmp
out
push
and
adc
das
test
ss
loop
shlb
pop
jb
repnz
and
inc
loopne
int
mov
pop
inc
fs
xor
dec
and
mov
pop
jg
xor
fucomi
rol
mov
in
and
cld
pop
xchg
mov
xchg
xor
mulb
push
mov
lahf
pop
push
cs
iret
fbld
sahf
mov
icebp
cmp
dec
jg
or
mov
push
test
mov
push
lea
es
mov
sbb
mov
xor
mov
mov
jae
lds
lock
shl
ljmp
add
xchg
adc
xor
jmp
stos
gs
pop
add
les
lods
mov
sub
mov
mov
negb
push
lahf
xor
jns
aad
movsl
inc
insl
sbb
inc
jae
stos
adc
lock
mov
dec
outsb
lods
enter
and
js
nop
xchg
push
cmp
rolb
icebp
pop
fdivl
add
rolb
rcrl
mov
sub
mov
dec
xchg
push
xchg
sbb
pmaxub
sahf
repz
mov
push
pop
shlb
cmc
in
shr
cltd
lret
jnp
xor
xchg
mov
mov
xchg
aaa
lahf
pop
cmp
fwait
into
or
lret
js
push
fstpl
push
cmp
sti
shrl
stos
or
je
adc
mov
mov
lods
mov
pop
das
std
add
in
push
sahf
inc
adc
repnz
aam
call
xchg
mulb
orl
mov
and
in
adc
ss
fidivl
sti
jnp
mov
loope
inc
out
jl
adc
mov
xor
lahf
xchg
mov
loop
xchg
jne
cmpsl
scas
rorb
ret
faddl
sti
int
dec
cmp
fldenv
add
adc
sub
loop
aam
aad
sbb
mov
sbb
shrb
or
insl
and
mov
data16
lds
in
imul
ds
mov
andl
testl
leave
rcrl
xor
sbb
xchg
orb
enter
mov
add
mov
sti
sbb
fmuls
clc
jae
rolb
sub
sbb
bound
push
lods
int3
xchg
into
mov
sti
out
clc
jmp
rcr
jae
sbb
popa
sub
sub
stos
test
lods
mov
and
adc
fidivrs
out
pop
vcvttsd2si
out
push
xchg
fidivrs
xor
repz
sbb
test
adc
cmc
rcll
shl
in
pop
mov
cmp
ds
stos
adc
ja
inc
jbe
xor
mov
jg
adc
xchg
or
lods
add
inc
es
orb
dec
fld1
mov
rcll
fisttpl
repz
mov
aad
xchg
fsub
and
mov
call
loop
push
xchg
xor
enter
insl
movsb
gs
cmp
mov
push
pusha
push
fst
xchg
mov
out
mov
out
lds
sub
pop
mov
outsb
mov
cwtl
mov
dec
mov
jb
loope
adc
lods
adc
adc
cmc
xor
adc
adc
xlat
pop
ljmp
scas
cltd
cmp
dec
cs
test
adc
sti
jb
cmp
in
mov
push
in
cmp
and
cmp
int3
mov
je
mov
xor
adc
inc
filds
cltd
je
mov
adc
divl
pop
xchg
loopne
adc
pop
inc
data16
xchg
mov
cmp
mov
xchg
lret
movsb
outsl
repz
pop
xor
stos
lcall
in
cmp
call
test
pop
std
cli
xlat
or
xchg
lds
sarb
mov
popa
aam
xchg
push
sub
jno
mov
or
mov
ja
jbe
es
lret
inc
je
push
inc
mov
es
xchg
mov
lahf
test
cs
repnz
xor
test
pushw
or
mov
sub
sbb
xor
jne
cld
ljmp
add
cmp
push
pop
xchg
fstps
push
fnstsw
mov
xchg
int
sub
jecxz
inc
mov
pop
cmp
pop
or
inc
adc
sti
mov
mov
push
xchg
das
les
and
jl
fistl
out
mov
mov
insl
lcall
jg
pop
movb
fsub
nop
xor
mov
test
lock
gs
mov
cwtl
out
pop
xchg
cmpsb
sub
mov
fs
sub
pop
pop
popf
rolb
das
sbb
mov
arpl
scas
pop
mov
xchg
popf
sbb
mov
testl
mov
sti
leave
xchg
out
insb
std
movsl
mov
in
in
mov
push
js
sub
mov
aas
add
fnsave
xor
and
and
jbe
add
mov
sbb
psubd
fnstcw
int
mov
data16
or
dec
jb
push
fbstp
fs
jmp
jg
xchg
pop
test
scas
push
inc
add
or
rcl
inc
paddd
fwait
xor
pushf
sbb
mov
cmc
mov
mov
dec
cmp
pop
in
push
ljmp
dec
div
add
shll
mov
ret
inc
adc
stos
adc
and
lret
scas
and
xchg
cwtl
aam
jg
jo
ss
adc
sbb
mov
out
rcrb
xor
and
aam
pushf
adc
sti
mov
stc
or
inc
inc
inc
in
push
and
divb
insl
jns
in
push
mov
jecxz
sbb
clts
add
adc
dec
test
std
pop
xchg
xchg
cmp
push
insl
jbe
add
pop
mov
in
jnp
push
cmp
imul
or
mov
ret
xchg
out
xor
sub
dec
pop
mov
orb
pop
outsl
shll
inc
mov
add
pushf
daa
loopne
jmp
dec
out
outsb
dec
bound
cmpsb
lret
lods
jmp
movsb
adc
ret
inc
sbb
cs
pop
sbb
daa
adc
push
stos
repz
das
test
clc
icebp
mov
loopne
mov
sub
mul
scas
inc
clc
popf
test
mov
push
insb
xor
and
daa
lock
jno
insl
dec
pop
xor
xchg
inc
add
scas
ja
lds
jae
cmp
lds
pop
sti
xchg
mov
mov
sbb
dec
pop
push
inc
jbe
mov
sbb
cli
lds
xchg
in
aad
sbb
cmp
test
sbb
shrb
inc
adc
adc
jmp
scas
mov
iret
aaa
fildl
js
pop
inc
es
aaa
inc
ds
sub
adc
popa
aad
sbb
aad
dec
adc
xchg
push
mov
fadds
jmp
xchg
sub
sub
adcl
jl
arpl
jge
inc
stos
push
add
pop
cmp
fmulp
scas
mov
out
into
push
fs
xchg
and
mov
gs
sub
fdivrs
inc
inc
jb
pop
imul
dec
adc
jo
add
pushf
inc
inc
ret
loopne
pop
push
add
mov
xor
int
push
mov
jp
and
jns
adc
mov
push
or
enter
push
aas
in
mov
scas
xor
xchg
mov
push
shr
jp
stos
add
xchg
xchg
pop
mov
inc
xor
mov
lret
loop
fadd
lods
dec
mov
out
into
cmp
push
fsubr
xchg
js
cmpsl
dec
xchg
xor
aas
std
jmp
fistps
test
jmp
jnp
mov
xchg
imul
mov
lret
mov
das
out
adc
dec
push
mov
jne
ret
aad
lahf
sub
out
fcompl
and
shrb
lcall
add
in
inc
dec
negb
js
loopne
push
arpl
pop
call
xor
lcall
lahf
cmpsb
outsb
jo
mov
fadds
add
sbb
cmpl
loope
ja
out
adc
ja
ja
cwtl
adc
ja
je
sbb
int3
mov
jnp
jns
test
lcall
mov
jge
hlt
into
push
lock
xor
pop
xchg
sub
add
pop
nop
jl
pop
pop
jmp
aam
in
mov
imul
scas
jl
jmp
dec
ja
push
rolb
or
mov
lea
lods
xchg
nop
or
mov
sub
test
push
cltd
popf
jg
push
jp
or
sub
imul
sbb
pop
outsl
scas
cli
jne
cli
pop
in
mov
icebp
inc
rcl
mov
adc
or
rcrb
adc
cli
xor
pop
pop
aas
pop
and
in
lea
pop
inc
mov
sub
pop
cmpsb
pop
out
ja
scas
sub
sub
mov
xchg
inc
pusha
xchg
fwait
es
mov
adc
out
mov
lea
add
movsb
out
mov
mov
popa
mov
jecxz
add
xor
insb
pop
adc
fidivrl
int3
adc
sysret
dec
ja
repz
stc
pop
sbb
and
pop
adc
cmpsl
repnz
pop
test
and
in
push
jae
pop
cltd
iret
js,pt
loop
push
imul
sub
shl
mov
ljmp
idivl
dec
arpl
pop
in
mov
jecxz
pop
je
lods
pop
mov
in
push
mov
mov
scas
cmp
fsubrl
es
sub
lock
shll
inc
xchg
inc
js
pop
push
mov
jbe,pn
sarb
add
mov
mov
sbb
outsb
pop
stos
sub
nop
into
add
jl
pop
mov
cwtl
xlat
cwtl
fisubl
adc
rolb
mov
inc
hlt
pusha
mov
dec
loope
iret
addl
jno
xchg
fstps
les
int
js
in
lret
ljmp
dec
jmp
sbb
or
mov
adc
gs
fsubs
sarb
xchg
pushl
test
outsl
jb
mov
ds
lret
in
pop
pusha
inc
iret
cmp
adc
inc
push
jns
mov
ss
dec
loop
mov
cmp
out
das
ret
fstps
inc
decl
mov
lds
adc
pop
js
popa
pop
das
sub
test
mov
mov
cld
or
mov
mov
jnp
inc
nop
test
jg
out
inc
orl
std
xor
sbb
daa
adc
das
imul
jnp
ja
xor
and
pushf
loop
pop
mov
orl
pop
pop
jp
sbb
push
mov
push
test
sahf
add
fwait
inc
lret
inc
jmp
and
push
jne
pusha
cld
lea
outsb
pop
bound
shll
leave
pop
pop
std
lea
popa
xchg
or
fwait
jg
jae
imul
popw
cmpl
fstpt
dec
sahf
inc
pop
mov
mov
adc
mov
inc
test
add
imul
push
mov
and
pop
or
cmp
push
push
lcall
xor
push
mov
mov
jp
dec
and
rorb
lahf
pusha
mov
mov
lcall
outsl
mov
adcl
cmp
fdivrs
jl
out
push
push
inc
popf
push
xchg
push
aad
loopne
int3
sbb
sbbl
js
pop
in
aaa
ret
pop
sub
mov
mov
and
or
sbb
leave
pushf
pop
adc
sub
and
movsb
inc
js
loope
sub
loope
daa
pusha
push
sbb
mov
sub
jnp
dec
std
jmp
lods
pop
in
rorb
or
push
out
mov
mov
cli
js
test
lock
aam
sub
pop
and
loopne
pop
push
cmp
pop
insl
enter
rorb
in
dec
movsb
add
mov
jg
jecxz
mov
loopne
cmp
dec
loope
jp
lret
cmp
cli
les
sub
xchg
repnz
fwait
xchg
cmp
fmuls
add
int
pop
lahf
add
inc
inc
add
add
jbe
push
mov
xchg
out
or
roll
cmp
jne
mov
mov
lret
in
rcrl
stc
inc
mov
jecxz
int
adc
xchg
outsb
inc
lods
xchg
push
cmp
es
push
fsubp
jne
test
and
cs
arpl
cld
lahf
sbb
dec
xchg
xchg
push
pop
xchg
incl
add
pop
es
out
cwtl
mov
int3
mov
fmul
pop
test
jl
mov
adc
inc
in
cmp
or
rorl
mov
das
xchg
mov
dec
adc
idiv
cmpsl
aas
or
mov
pusha
jno
jno
mov
dec
mov
push
xchg
int
mov
arpl
mov
ret
dec
mov
addr16
mov
dec
ret
inc
mov
stos
jns
mov
fisubrl
ret
adc
fsub
ja
es
pop
movsl
add
inc
add
jo
jne
std
into
roll
test
out
into
dec
stos
push
push
pushf
dec
jp
out
arpl
jb
lock
xchg
adc
xchg
fstps
cwtl
mov
and
pop
scas
ret
stos
cmp
pop
std
cmpsl
pop
cmc
cld
ds
pushf
lret
int3
or
out
jae
push
test
lret
or
outsb
leave
rol
adc
push
dec
mov
or
cmp
addr16
loop
mov
test
loopne
sub
cmp
xchg
fwait
ret
movsl
cld
jg
sbb
xchg
cmpsb
pop
mov
fildll
xor
jge
pusha
add
pop
mov
mov
dec
mov
push
loope
xor
sti
adcb
adc
int
or
lret
inc
pop
cli
pop
push
cs
pusha
loopne
sbb
push
movl
jl
fistpll
and
push
or
mov
jp
pop
push
stc
aam
dec
icebp
jne
add
jg
js
test
push
push
lret
mov
push
pop
hlt
mov
sti
inc
cld
clc
push
push
xchg
mov
aad
adc
into
add
adc
fdivp
out
or
sbb
pop
jecxz
loop
in
in
xchg
or
mov
lahf
mov
jno
xor
rcrb
dec
fpatan
or
inc
mov
das
mov
test
in
inc
outsl
test
into
cmp
daa
or
mov
lcall
fstps
or
mov
daa
nop
js
jb
push
fldcw
pop
push
push
ret
dec
pop
cmc
and
adc
popf
sbb
in
int3
and
xor
sbb
mov
xor
and
jmp
arpl
jns
and
int
inc
popf
add
scas
xor
cmc
lret
lcall
jne
mov
add
and
nop
dec
lahf
test
outsb
mov
fsubrl
bound
int
xchg
pop
cmc
pop
adc
sbb
mov
mov
add
sbb
jmp
idivl
and
and
cmpsl
or
repz
mov
roll
cmpsb
inc
cmp
sbb
mov
fs
xchg
jb
test
out
push
sbb
sbb
jnp
sbb
sub
xlat
xchg
add
shl
xlat
jno
loope
pop
jg
lahf
xchg
add
sbb
push
pop
push
sbb
jl
cmp
test
adcb
fdivs
inc
in
mov
inc
std
fwait
push
mov
dec
pop
or
xchg
xor
fstpt
incl
icebp
out
fmuls
mov
cmp
lock
aaa
add
jno
add
pop
xor
jae
jae
push
out
xor
xchg
ficomps
sbb
addr16
push
fsubrl
iret
ret
push
addr16
mov
xlat
sbbl
dec
and
call
movsb
xlat
jmp
inc
push
inc
jbe
or
js
adcl
cmp
jle
xor
ja
call
dec
lahf
bound
xor
pushf
jmp
xchg
and
push
adc
imul
inc
jae
frstpm(287
gs
ljmp
xchg
jmp
fcomps
lret
push
jbe
or
jecxz
jl
pop
add
push
jb
and
pushf
mov
add
lret
dec
mov
sbb
fimull
icebp
andl
mov
xor
es
int
das
ja
or
popf
in
stc
xchg
in
push
lcall
loop
sub
push
inc
mov
mov
test
nop
out
bound
xor
adcb
inc
mov
call
pushf
out
xor
daa
repnz
fs
sbb
sbb
sti
xor
add
jno
test
dec
jp
or
loope
cmp
ret
sbb
aas
lock
rcrl
push
out
or
jmp
mov
xor
movsb
jo
xor
lcall
std
mov
push
pusha
es
push
cmp
jae
mov
push
mov
sub
xor
xchg
mov
add
or
pop
pop
push
pop
sub
adc
mov
cmc
cmp
icebp
cmp
ja
xchg
test
push
sub
dec
adc
cli
pop
xchg
mov
ret
push
cmpsb
divb
mov
test
mov
adc
xchg
movsl
bound
jp
daa
movsl
adc
dec
xchg
div
push
mov
aas
xor
xorb
sub
adc
decb
mov
push
mov
lret
aaa
ljmp
sbb
add
scas
mov
xchg
int
test
push
sbb
pop
rorb
or
push
sub
add
sbb
push
push
sub
add
enter
out
dec
outsl
in
scas
rcrb
test
pop
mov
or
bnd
sbb
mov
popf
rcrb
std
dec
sbb
outsb
lods
fildl
and
lock
push
mov
or
test
stos
xor
cmp
gs
daa
fldt
imul
stos
pushw
adc
std
adc
and
mov
fsubrl
dec
pushf
out
hlt
arpl
mov
push
aam
cld
push
jecxz
push
add
sbb
and
fisttpll
mov
fsubrs
shr
mov
jbe
sbb
or
test
ljmp
cmovp
sbb
lahf
scas
lock
mov
fcmovnu
in
push
mov
and
in
pop
sbb
xchg
mov
cltd
sbbb
les
xchg
decl
dec
cmp
xchg
rcll
push
mov
jnp
xchg
arpl
mov
insb
das
out
test
jmp
push
xchg
fisttpl
jl
movsl
xchg
pushf
mov
out
lcall
lret
sub
pop
fsts
test
movsl
ret
sti
sbb
cmpsb
xor
dec
or
loope
fdiv
jle
adc
sbb
jns
cltd
in
jbe
or
mov
clc
lods
jne
cld
sarl
fidivs
andl
scas
cmpsl
mov
ror
pop
or
mov
rcrb
std
pop
mov
fbld
mov
pop
xor
push
shrb
push
xchg
adc
int3
jge
pop
negl
pusha
loopne
inc
loop
dec
xor
jle
stos
and
test
cwtl
in
shll
jo
arpl
scas
push
cmpsl
xor
sti
and
sub
push
test
jo
xorb
imul
mov
dec
and
cmp
lahf
mov
stc
repz
pop
test
push
cli
data16
xchg
insb
mov
jbe
xlat
mov
lock
mov
lcall
loopne
in
rcrb
testb
sti
loop
icebp
dec
rcll
xchg
sub
sub
mov
test
mov
clc
pop
inc
fwait
in
mov
fwait
jb
daa
inc
adc
mov
add
roll
cmp
ret
cmp
mov
jo
sbb
nop
out
xor
inc
or
cld
lock
aam
adc
xchg
out
out
adc
dec
dec
bound
push
or
daa
repz
nop
dec
mov
nop
bound
lcall
push
mov
pop
jns
data16
into
pop
shlb
imul
jne
in
sub
adc
in
add
inc
movsb
push
sarl
jnp
enter
jg
jmp
out
mov
repz
pushf
mov
in
aad
mov
dec
adcl
sub
inc
dec
arpl
push
aam
jge
push
xor
gs
and
scas
movsl
xlat
mov
xlat
sub
loop
mov
jnp
xor
sbb
jp
dec
lcall
ds
dec
xchg
mov
adc
data16
jmp
mov
push
aas
ffree
popl
push
mov
fst
pushf
into
mov
xchg
push
jo
cmc
fldenv
mov
sub
dec
adc
in
mov
or
fistpll
es
dec
test
fcoms
xchg
mov
jb
jge
cmpsl
stos
dec
dec
pop
hlt
ss
es
adc
das
xchg
jp
shrl
and
jp
sub
cmp
add
mov
adc
dec
jge
cmp
mov
sbb
stos
push
lock
mov
jne
cmp
dec
mov
pop
mov
mov
jbe
test
aaa
push
aas
cltd
pop
insb
and
inc
std
in
ret
sbb
push
push
test
fidivrs
adc
lcall
mov
or
jns
int
cs
jns
jl
ret
sbb
lds
mov
mov
adc
inc
sbb
lret
mov
mov
adc
cmc
mov
sarb
inc
jns
stc
inc
in
and
push
xchg
daa
push
add
cwtl
ss
int3
insl
addr16
sbb
dec
cwtl
out
out
mov
shl
jle
mov
cmpsb
sbb
adc
loopne
push
push
rorb
fldcw
and
arpl
dec
pop
loopew
cld
jmp
pop
mull
adc
lods
mov
int
push
mov
sbb
sub
popl
ficomps
jbe
cmp
mov
fldenv
pop
dec
push
sub
pop
or
dec
sti
in
or
inc
push
loop
xchg
inc
insb
out
aas
jo
dec
insl
jge
or
scas
jg
and
xchg
mov
sbb
rorl
movl
dec
pop
sub
xchg
sub
fnstsw
int
ret
movsl
das
push
adc
mov
dec
xchg
xchg
push
fcomps
and
pusha
mov
movsl
lea
xchg
mov
adc
test
mov
scas
cltd
dec
inc
add
mov
ljmp
mov
test
aad
sub
nop
pop
dec
push
mov
cmp
fists
data16
jb
movsl
adc
sahf
call
std
adc
or
int
add
and
testb
xchg
shrl
mov
dec
lahf
vmovupd
insl
cli
mov
test
enter
addb
sub
and
std
mov
pop
pop
cmp
mov
sbb
jns
arpl
xchg
xorl
push
les
dec
stc
mov
inc
in
lret
pop
outsb
insl
daa
test
cmc
push
icebp
std
sbb
sbb
jle
cmpb
mov
adc
mov
pop
dec
cmp
lahf
inc
inc
test
sahf
push
lds
and
lds
sub
xor
idivl
insl
movsl
notl
call
nop
mov
cmp
mov
shr
push
js
lahf
aas
mov
mov
add
incb
add
inc
test
cs
out
add
out
fsts
in
in
lret
lds
dec
push
sbb
es
inc
test
std
inc
sti
das
mov
jle
sbb
push
stc
ljmp
in
sub
cmpsb
arpl
and
loopne
xchg
es
call
fwait
std
adc
fildl
nop
int3
in
sbb
mov
movsl
sub
movsb
push
pop
insb
mov
mov
int
mov
cmp
scas
pop
scas
arpl
xor
in
sbb
fistl
adc
ds
out
push
dec
adc
repnz
xchg
xchg
add
add
jp
lds
lret
xchg
xor
addr16
in
dec
roll
mov
pop
mov
xchg
mov
pushf
mov
xchg
les
jnp
sarl
jp
loope
add
fiadds
and
mov
popa
jle
pop
fcoml
mov
inc
pop
xchg
xchg
test
sbb
inc
xchg
cmpsb
cmpsl
adc
iret
lock
lret
adcl
mov
rorb
popa
cltd
popa
dec
push
fistpll
imul
jne
mov
stos
mov
cld
push
push
ret
lods
imul
push
sub
jno
movsb
adc
add
cmc
lods
or
faddl
popf
cmp
jmp
repz
outsb
pop
lret
es
xchg
lret
mov
nop
sub
sbb
lret
xchg
std
sbb
shll
out
mov
mov
and
push
xor
push
xor
add
add
or
shr
test
sub
fsubrs
loop
in
adc
push
cmp
hlt
movsb
mov
fsubl
fcomp
andl
push
mov
test
xchg
movsb
orl
loopne
xchg
pop
pop
or
fbld
push
sbb
jb
lahf
push
out
cmp
nop
and
cmp
aam
mov
pop
xor
fwait
push
iret
bound
cmp
int
cmpsb
gs
repnz
fidivrs
in
adc
sub
mov
fxtract
or
out
mov
inc
notl
insl
mov
xor
jbe
jle
mov
fidivrs
insl
jnp
mov
fwait
mov
aaa
int3
cmp
sub
sti
jns
cli
sub
adc
sub
adc
outsl
jmp
adcl
jg
mov
xchg
sub
sub
stc
jb
pop
pop
clc
adc
or
and
aaa
sub
int3
clc
pop
leave
repz
test
xor
mov
mov
sahf
daa
mov
scas
mov
add
push
jl
jno
add
push
mov
orl
xor
or
cmp
jae
add
jp
and
lret
xchg
scas
inc
jge
jg
orl
stos
dec
lret
cmp
inc
push
inc
jmp
negl
mov
sbb
sbb
lahf
pop
rcr
adc
sub
xchg
ljmp
mov
std
add
sbb
out
mov
jmp
mov
aam
jnp
mov
dec
jmp
cmp
dec
lret
mov
lret
and
mov
push
add
lret
jae
mov
inc
xchg
cmpsl
adc
sahf
std
js
rorl
cmp
lahf
xchg
dec
ss
sbb
fstl
sub
imul
pushf
jb
adcl
mov
sti
mov
loopne
iret
cmp
dec
mov
push
xchg
jae
decl
inc
jge
jg
or
push
popa
outsl
push
jl
cli
add
in
mov
jnp
sbb
inc
shrb
xchg
movsb
and
lock
adc
inc
ja
pop
scas
push
add
clc
pop
mov
fstpt
in
adc
adc
add
jns
sub
fldt
or
negb
dec
mov
mov
mov
lcall
xchg
mov
jecxz
mov
lds
loope
adc
xchg
xor
lret
aad
jecxz
int
sbb
mov
sub
jp
mov
push
flds
cltd
push
lahf
mov
xchg
std
into
add
or
push
div
add
out
movsb
movsl
jg
adc
xchg
fdivr
in
and
or
ret
leave
add
cs
jmp
ljmp
cmp
pop
dec
jmp
das
cmp
cmp
shr
stos
das
sub
xor
aad
std
dec
movsb
mov
sbb
dec
jp
cli
fisttps
cmc
pop
dec
xchg
out
or
out
addr16
xor
cli
push
sub
cwtl
imul
in
push
mov
lea
pop
fidivrs
rolb
or
xor
insl
pop
das
push
imul
sub
adc
push
sti
rcr
int3
sbb
daa
out
sahf
xchg
fld
sub
mov
ja
shll
sub
jmp
mov
lret
icebp
adc
shrb
pop
inc
ret
test
push
and
xor
aam
mov
xchg
pop
mov
ret
xchg
inc
adcb
add
jle
and
xor
daa
mov
cwtl
or
fwait
int
movsl
jnp
xor
push
jl
popf
shll
shl
sub
into
insl
cmp
std
out
test
push
popa
lock
adc
imul
popa
rcl
pop
js
nop
xor
inc
sub
xchg
or
sub
cmp
xchg
fwait
fwait
sti
dec
lcall
jp
cli
lret
fcomip
popf
mov
push
cmc
add
jle
push
ret
xor
adc
rcrl
cltd
push
mov
imul
sbb
and
mov
lahf
xchg
pop
push
jg
das
jge
sub
fwait
shll
pop
aad
subb
ja
bound
repnz
mov
outsl
ds
push
cli
cltd
test
push
and
or
in
mov
push
out
mov
lock
sarb
or
pop
cmpsb
lcall
test
out
push
add
mov
das
xor
icebp
jae
push
stc
push
out
sahf
lods
cmp
add
popw
fcmovnb
mov
inc
call
add
add
leave
ds
clc
mov
clc
into
cltd
pop
adcb
testb
push
ror
imul
dec
sub
add
mov
mov
jno
enter
cli
xchg
jns
fwait
pmuludq
jns
addb
push
out
jle
pop
sbb
fld
ret
ret
sub
cltd
fildll
adc
imul
jp,pt
mov
mov
dec
mov
lods
or
xor
sub
mov
in
xor
pop
adc
sbb
xor
and
cltd
mov
loop
mov
jb
and
shll
jo
xchg
xor
mov
or
sbb
loopne
lds
roll
lret
mov
mov
cmp
or
xor
das
pop
pop
arpl
outsl
and
fld
jb
pop
jp
sub
fdivs
orb
ja
and
mov
lret
xor
arpl
xchg
and
nop
pop
pop
in
dec
mov
inc
imul
nop
repz
popa
jne
rcll
push
data16
adc
cmp
pop
into
jo
aas
jno
add
repz
cmp
repz
cmc
fistps
inc
adc
and
dec
ret
and
bound
es
fiadds
mov
adc
dec
push
shll
xchg
out
dec
iret
jnp
daa
inc
shll
testl
xchg
mov
xchg
test
push
enter
add
into
mov
pusha
test
cmp
std
pop
cwtl
add
xchg
das
out
mov
fcmovnb
mov
fwait
add
push
jg
inc
pop
jp
enter
mov
push
jbe
mov
ds
out
fnstcw
test
repz
xchg
xchg
push
sbbb
lcall
add
andl
push
mov
sub
add
lcall
je
test
mov
and
mov
sub
enter
cmp
cmpb
mov
push
lods
dec
iret
ret
aad
push
clc
adc
inc
mov
xchg
shll
push
jge
jnp
fnstsw
jns
iret
cs
mov
jge
fimull
in
pop
sbb
push
push
rcl
mov
sahf
leave
cmpsb
test
dec
jl
and
and
shll
hlt
xor
hlt
ds
std
xlat
add
subl
pop
push
test
stos
xor
pop
enter
stos
sbb
mov
outsb
push
jecxz
ret
mov
mov
xor
ret
shr
js
inc
sti
pop
hlt
dec
test
mov
pop
cltd
push
pop
fucom
mov
mov
repnz
mov
leave
fucomp
out
jbe
sbb
lods
xor
add
test
push
stos
call
mov
in
cld
xor
hlt
pop
push
pop
xor
mov
popf
out
data16
mov
xor
xchg
mov
jp
cmpsb
insl
adc
and
test
cli
inc
lret
adc
mov
iret
stc
cltd
adc
in
out
repnz
sti
sub
imul
adc
push
mov
pop
jbe
pop
aas
je
in
test
sub
mov
or
sar
xor
mov
bound
icebp
fiadds
test
or
shrb
lcall
pop
stos
pop
pop
or
lds
dec
jae
popa
jecxz
flds
jmp
inc
lds
sub
test
icebp
mov
popf
jbe
adc
push
jl
lret
in
mov
and
cmpsb
sarb
xchg
out
sti
xchg
push
iret
push
imul
cmc
rcll
xchg
lea
aas
cs
insl
cmp
aaa
es
outsb
ret
sti
lcall
cmpsb
das
pop
fmuls
jns
push
sbb
mov
cwtl
inc
sar
xor
stos
push
mov
pop
pop
fsts
and
in
and
fs
sub
std
out
push
push
sub
lock
das
ret
dec
test
push
jb
das
dec
push
adc
push
out
imul
sub
popf
pop
and
adc
sarb
fsubs
and
adc
jnp
repz
push
mov
add
fwait
int3
aad
mov
ja
lcall
aad
sbb
loopne
adc
mov
xchg
mov
or
aam
sub
mov
jle
cwtl
cli
mov
sub
xchg
movsl
cmp
mov
push
mov
gs
sbb
pop
xor
pop
sbb
jl
ror
imul
dec
pop
cs
inc
mov
mov
push
adc
imul
push
or
scas
ret
pop
imul
sub
popf
jge
add
jle
xchg
jno
pop
ss
mov
lcall
xor
aaa
lds
dec
je
in
iret
xchg
xchg
js
fcoml
lods
and
sbb
sub
jnp
sub
aas
cwtl
sbb
jl
or
test
out
sub
push
mov
pop
push
xor
dec
cwtl
mov
fisttpl
dec
lret
jae
jno
std
cmp
push
stos
rcll
insb
push
fwait
popf
test
mov
jb
pmaddwd
xor
out
cmp
pushf
and
enter
lahf
jecxz
pop
rcr
jecxz
or
mov
xchg
pop
jle
cld
push
jge
sbb
xorl
lahf
sbb
sub
inc
shrb
xchg
xor
adc
xchg
idiv
adc
sbb
adcb
dec
shrb
mov
jmp
lock
in
jle
and
add
idivb
adcb
jp
das
add
inc
sub
push
mov
jle
arpl
stc
sub
xchg
or
adc
dec
mov
push
jne
fwait
cmp
loopne
sub
inc
jbe
aam
inc
dec
mov
push
stc
push
push
jbe
cltd
cmpsl
das
xor
cltd
add
loopne
rcr
lea
outsb
out
cs
hlt
dec
and
and
jns
imul
imul
imul
adc
pop
dec
mov
pushf
push
hlt
pop
and
addr16
fwait
pop
in
ja
cmp
std
subb
cmc
icebp
aas
xor
aam
dec
push
or
in
cmp
mov
adcl
bswap
adc
pop
call
push
push
xchg
pop
pop
out
add
hlt
mov
fnstcw
mov
sbb
dec
inc
mov
addr16
jo
rcrl
cmpsl
dec
mov
scas
out
data16
xchg
pop
add
addr16
lea
push
xchg
or
movsb
add
mov
imul
xor
or
js
pop
lcall
shl
int3
test
in
add
sbb
in
push
mov
pushf
add
sbb
lret
rcrl
pop
jno
insl
scas
xlat
add
or
pusha
sbb
mov
mov
xchg
jbe
inc
xor
mov
cmp
dec
cmp
nop
xchg
push
adc
push
push
popf
iret
cmpsb
xor
push
cli
xor
cltd
test
outsl
and
push
std
enter
scas
repnz
aad
test
stc
rclb
mov
cmpsb
adc
fldl
rcll
mov
mov
ljmp
push
dec
roll
and
pusha
mov
xor
fdivs
xor
lret
lock
and
cltd
in
jns
or
xchg
pop
jge
filds
xchg
xchg
xchg
lcall
add
add
and
out
inc
or
jge
fstp
push
out
out
out
out
out
loope
push
mov
cmpl
pop
pushf
adc
adc
dec
mov
int3
lret
cmc
xchg
leave
popa
fs
lcall
add
std
pop
addr16
sbb
add
jae
popf
sub
pop
outsl
inc
pop
test
repnz
cmpsb
aam
outsl
stos
push
les
adcb
cmp
outsb
push
inc
or
cmp
lcall
cmp
mov
aad
inc
popf
inc
pop
sbb
roll
xchg
sahf
repz
mov
popa
movsl
inc
mov
out
jecxz
dec
mov
or
gs
jl
cmpsb
push
insb
imul
and
jo
cmc
xchg
arpl
add
out
ljmp
repz
orb
inc
cltd
lock
xor
imul
gs
dec
cmp
nop
mov
jb
pop
jg
sbb
push
movsl
fnsave
and
xor
jno
add
sahf
or
xchg
cmc
idivb
imul
mov
xor
add
xor
sbb
aaa
outsb
sbb
scas
pop
insb
pop
cmpsb
push
xlat
fmuls
in
aad
sti
lods
mov
popf
jmp
dec
ds
leave
push
pop
adc
std
jns
sbb
or
fwait
mov
hlt
or
adc
xchg
movsl
lret
dec
and
add
cmp
add
aad
pop
push
lods
ret
popa
gs
xchg
fistpll
outsl
xor
push
dec
test
int3
lahf
and
scas
cmc
adc
lds
adc
and
mov
stos
pop
adc
rorb
pop
adc
cld
xor
sbb
push
push
and
icebp
push
dec
and
jns
pop
loopne
and
xor
mov
imul
or
fbstp
or
mov
pop
or
shlb
and
mov
shll
sub
fisubl
mov
and
lea
xchg
xor
mov
pushf
sub
pop
adc
jl
aad
dec
or
jge
and
fidivs
pop
and
push
jge
lds
push
loopne
sbb
add
outsl
test
imul
cmp
pop
xor
cli
bts
pop
xchg
mov
add
jl
cmp
push
shll
sub
pop
inc
sbb
popa
mov
lret
dec
lret
jne
sub
test
in
movsb
stos
cmp
inc
lret
adc
inc
jg
or
cmp
mov
aas
mov
adc
or
adc
sti
mov
in
fwait
push
mov
fimuls
lods
pop
movsb
or
dec
push
and
sbb
push
add
mov
leave
mov
dec
dec
pop
leave
lock
cwtl
daa
push
shr
or
jle
insb
bound
in
pop
stos
loopne
test
popf
pop
cmp
mov
test
push
sarb
insl
mov
add
mov
mov
out
lock
xlat
pop
xor
ja
fstl
orl
js
or
jne
push
sbb
mov
hlt
add
das
sti
and
movsl
jmp
add
aas
sbb
jg
es
jge
sbb
fisttpll
push
sti
mov
jmp
arpl
cmp
lock
adc
mov
xchg
push
pop
sub
fnsave
xchg
sub
das
inc
push
lds
call
cmp
daa
adc
flds
cmp
outsb
dec
stos
jge
inc
fcmovbe
jg
sub
push
arpl
in
xchg
aam
hlt
add
add
adc
mov
stos
sbb
outsb
decb
ret
stos
rcr
sbb
adc
mov
fidivrl
xchg
loopne
rol
loopne
out
mov
shll
imul
cs
es
jae
sbb
push
cmp
lods
mov
popa
out
scas
jle
pop
je
fwait
notl
sbb
add
popf
mov
inc
lods
pop
or
pop
push
insl
rclb
or
and
lret
clc
xchg
orl
scas
pop
cltd
or
sub
push
loope
movsb
in
mov
stc
push
popf
cwtl
jg
jne
and
sbb
or
lock
xchg
mov
mov
mov
push
inc
xchg
mov
push
aam
adc
shll
mov
mov
call
dec
sbb
mov
call
adc
mov
jg
adc
dec
mov
mov
cwtl
xor
mov
sub
rcll
inc
shr
xchg
dec
cld
inc
aad
jl
fbld
sbb
lahf
pop
enter
out
mov
sbb
sub
jno
leave
inc
mov
out
jge
push
mov
loopne
adc
cmp
or
and
or
aad
stos
dec
push
xchg
cwtl
cmc
pop
adc
popf
shrb
push
adc
push
in
sbb
aam
int
push
xor
dec
sub
push
and
adc
lahf
mov
mov
pop
cli
lds
rol
insl
loope
out
mov
div
outsl
lcall
hlt
lods
in
call
xlat
fwait
outsb
mov
loope
xor
and
mov
mov
fisubrs
fildll
daa
loope
lahf
into
jbe
add
pop
stos
mov
jecxz
fsts
adc
icebp
popf
nop
aas
push
bound
mov
sbbl
inc
mov
mov
pop
jo
sbb
and
add
fmulp
add
jmp
sub
dec
cld
jg
xchg
dec
loope
inc
cli
insb
mov
addr16
testb
ss
mov
pop
cmpsl
shrb
dec
ret
sbb
sbb
out
data16
mov
rcll
xchg
adc
or
je
enter
popf
dec
arpl
ss
call
cmp
inc
mov
jns
fidivl
push
shlb
lea
sub
mov
sbb
out
push
dec
aaa
ret
mov
fwait
jno
cs
mov
and
xchg
cltd
popf
cwtl
cli
xor
pop
in
push
pusha
out
push
and
push
mov
pop
xacquire
jno
cmp
push
idivb
hlt
negb
hlt
lods
sub
das
lods
or
lods
xor
cmpb
jl
pop
lds
gs
sarl
dec
jae
jge
es
xchg
adc
insb
in
das
dec
cld
lock
les
adc
pop
and
shl
bound
shlb
movsl
imul
data16
add
sbb
pusha
fcmovne
cmpsb
mov
aam
cmp
xor
pop
out
push
std
in
enter
mov
cmpsl
xor
in
daa
sub
fadds
in
std
add
dec
jg
call
sbb
fidivs
pop
ret
out
iret
xor
out
xchg
push
pop
out
push
popa
pusha
adc
dec
sub
mov
xchg
insl
pop
jmp
push
aas
inc
in
aas
cmpsl
mov
repz
inc
mov
xchg
jnp
cmp
mov
jne
or
mov
jno
xchg
sub
jp
fsubrs
jp
hlt
adcl
and
fcoml
mov
cmpsb
in
xlat
imul
sbb
adc
push
insl
fsubl
shr
jp
fisttpl
inc
fistl
sbb
jp
or
xor
repnz
and
inc
push
iret
or
jl
into
shlb
stc
xchg
fnsave
shrl
stos
cld
ja
aas
adc
mov
bound
mov
fidivs
subb
daa
lcall
sahf
push
mov
popf
cmpsb
test
lret
outsl
xlat
insb
jg
lcall
js
adc
leave
dec
lds
mov
ljmp
adc
and
xchg
icebp
push
jg
outsl
pushf
cmc
xor
inc
inc
int3
fildll
fwait
mov
xor
out
mov
lock
stos
fldenv
jb
jb
or
jecxz
in
imul
push
lret
mov
mov
cmc
adc
cmp
dec
inc
sbb
push
imul
enter
cmpsb
movl
shl
mov
out
inc
call
pop
jg
cmpl
fcomps
les
fisttpll
inc
mov
sub
bound
or
sbbb
mov
adc
pusha
push
push
mov
ret
dec
and
lods
fnstcw
push
enter
rcr
xor
scas
or
aad
jnp
mov
cmp
mov
cmp
scas
cmpsl
push
pushl
stos
popa
and
in
xor
mov
xor
xlat
adc
mov
mov
jge
mov
test
or
dec
aas
xor
sbb
repz
cld
fcom
repz
or
dec
test
xor
pop
mov
jo
stos
xor
into
aad
stc
dec
jo
in
xchg
add
fadds
or
bound
sbb
and
jnp
gs
and
lods
xchg
jo
fwait
inc
mov
fistpl
test
shrb
add
xor
nop
fistpll
cmp
lret
and
pop
lahf
in
mov
test
jle
adc
aam
and
pusha
and
in
jno
dec
and
popa
shlb
bound
je
cmpsb
mov
ret
call
rclb
add
jno
mov
inc
nop
jmp
sar
aaa
adc
fbstp
jl
mov
stos
xor
icebp
cmp
cmpsb
push
popf
mov
pop
inc
sbb
push
lock
out
sub
push
sub
lcall
jbe
test
push
hlt
inc
movsl
mov
fsts
fstpt
pop
or
lret
mov
es
and
mov
inc
mov
jge
int3
cmp
mov
das
jmp
outsb
sub
sbb
sarb
fistl
jecxz
mov
outsl
jle
pop
inc
sub
add
loop
in
push
and
push
call
addl
pushf
sub
mov
push
cmp
adc
jb
jb
add
mov
mov
lods
fwait
mov
sub
pop
xlat
imul
int
out
and
inc
pop
aad
or
xor
dec
and
mov
mov
mov
fs
sbb
icebp
push
out
in
gs
jl
es
pop
movsb
cmp
stc
cmc
mov
jb
lcall
lods
bswap
lds
fstpt
outsl
shlb
incl
fiadds
and
jecxz
xchg
in
sarl
inc
and
ljmp
movsb
stc
sub
sub
pop
aad
mov
or
aaa
sub
insb
xor
pop
mov
cmp
les
add
dec
dec
outsb
jbe
imul
mov
mov
cs
mov
adc
bound
pop
out
mov
test
ret
cmp
jo
test
push
lret
jl
pop
and
aaa
jle
jno
sbb
jbe
aad
or
xor
bound
stc
add
xchg
lods
clc
sbb
adc
xor
dec
jle
std
pop
lret
xchg
imul
ljmp
xor
stos
push
xor
cmpb
loopne
add
mov
outsl
xor
sub
jp
int
movsb
cli
test
movb
pop
adc
repnz
mov
adc
imul
push
mov
imul
lret
push
fmul
aaa
jae
pushf
ret
dec
adc
mov
dec
jg
je
dec
dec
adc
enter
dec
and
lods
jg
jns
mov
loop
sub
call
into
jbe
add
adc
pop
fwait
test
pop
fnsave
int
cwtl
push
mov
dec
xor
mov
jl
bound
out
and
mov
stc
adc
jno
xor
sbb
fsts
in
push
mov
lds
pop
into
pop
push
add
add
dec
rcll
sti
mov
outsb
testl
ja
sub
xchg
ds
neg
aad
mov
xchg
addr16
rclb
movsl
sbb
pop
push
mov
int3
mov
ljmp
mov
jecxz
push
or
xor
in
and
cli
sahf
fwait
test
push
cld
xchg
fildl
mov
mov
popf
cmpsb
mov
sar
test
sub
cmc
jae
dec
nop
sbb
sti
js
int3
dec
add
adc
pusha
ret
push
inc
inc
icebp
fdivrs
fidivl
jae
repnz
inc
cmp
test
push
inc
xor
popf
loope
jmp
push
pop
or
aad
lods
xchg
lret
jg
mov
test
xlat
int
xor
inc
dec
mov
dec
cmp
cmpsl
jae
not
pop
subl
fcoms
dec
fisttpll
ds
push
fldt
ds
bound
push
xor
ret
mov
adc
mov
mov
jp
cltd
jns
cmp
mov
mov
mov
punpckhdq
mov
fstl
add
bound
xor
daa
out
scas
aas
lods
and
idivl
and
sbb
lahf
ljmp
add
inc
pop
or
adc
jnp
scas
aas
ja
xor
xchg
aam
sbbb
dec
nop
cli
push
jmp
fdivrp
test
inc
ja
lds
aas
sbb
or
rclb
lcall
mov
adc
jmp
jg
xor
adc
scas
adc
fisttpl
fsubs
inc
insb
andl
sbb
sub
rclb
sbb
cmp
filds
stc
das
inc
std
fnsave
test
mov
xchg
imulb
arpl
xor
insb
push
cwtl
icebp
or
loopne
mov
adc
xchg
fsts
xor
or
in
test
std
inc
dec
adc
lea
pop
or
add
mov
test
das
call
stos
sub
inc
xchg
hlt
popf
pop
or
hlt
je
inc
aam
mov
pop
fcoml
adc
popf
ja
jl
inc
lock
rcrl
loopne
pushf
mov
cli
cmpsb
cli
mov
xchg
adc
or
dec
test
leave
int
cmp
fst
pop
mov
roll
lcall
das
ficomps
cmpsl
popa
daa
mov
andl
sbb
mov
mov
xlat
in
or
mov
in
push
fistl
adc
cs
xchg
sarb
mov
inc
fistpll
mov
aad
subl
mov
jnp
sub
pop
pop
pop
jl
dec
sbbl
cli
mov
pop
ret
rolb
add
pop
pop
loope
aas
sti
movsl
inc
push
repnz
cld
jg
pop
stos
je
fs
cwtl
fcmovnu
in
cmp
int
popf
sbb
xor
lret
lods
loopne
fstl
sbb
push
add
jle
xchg
std
sub
cs
arpl
sarb
arpl
inc
sub
ds
mov
imul
sub
mov
orl
js
into
mov
xchg
sbbb
jno
fiaddl
or
data16
inc
popa
cli
jg,pn
movsb
popa
dec
mov
adc
cmpsb
mov
insb
pop
iret
fidivl
pop
mov
lahf
out
sbb
mov
mov
mov
pop
push
vpsrld
mov
js
sbb
sub
adc
cmpsl
push
roll
scas
mov
dec
push
jl
cld
cmc
in
mov
xchg
xchg
mov
ret
pop
ds
cmp
iret
pop
cltd
pop
loope
or
cld
mov
sbb
mov
dec
movsb
push
cli
rorl
jae
pop
insl
fwait
pop
adc
pop
jge
scas
pop
push
rolb
ret
adc
stc
sar
cmpsl
adc
xor
fwait
pusha
cs
pop
clc
sbb
mov
fstl
push
out
jg
dec
mov
rolb
push
inc
add
jge
stc
sub
mov
jno
imul
test
xchg
and
int
fdivs
stc
sub
pop
pop
mulb
inc
ror
jp
out
flds
fdivp
push
push
test
lods
and
push
in
inc
enter
in
inc
cmpsl
imul
xlat
insb
stos
sbb
dec
test
stos
mov
imul
or
popf
lock
aaa
cmp
push
xor
lds
mov
sub
lahf
mov
xchg
int
xor
and
out
inc
xorb
enter
dec
jns
test
iret
lcall
pop
and
cmp
cld
inc
ja
mov
mov
mov
jl
int
out
lahf
shl
pop
stc
adc
inc
sbb
or
and
and
pop
sbb
mov
sub
in
xor
repz
scas
pop
lcall
push
mov
mov
dec
rolb
out
insb
inc
push
lds
pop
lahf
scas
mov
xchg
cltd
sahf
push
mov
jne
divl
loop
jbe
add
cmp
xchg
mov
mov
shll
mov
mov
push
gs
jbe
hlt
dec
or
mov
sbb
xchg
jno
out
mov
xchg
lret
ja
enter
out
xor
mov
xchg
je
push
out
push
mov
je
fisubrl
shlb
cs
inc
das
jae
arpl
sbb
mov
add
insb
movsb
sub
out
into
mov
push
je
adc
stos
inc
push
xor
push
add
pop
test
nop
sbb
lods
pusha
out
std
ss
xbegin
push
ja
leave
sbb
into
loopne
xor
xchg
outsb
xchg
cmp
ss
ficomps
or
out
push
dec
sub
cmp
mov
cld
xchg
andb
xlat
clc
push
mov
lret
fsubl
jge
mov
testb
paddsb
les
loopne
call
mov
sbb
cld
sub
pop
jo
shlb
pop
sbb
ljmp
pop
cmc
outsb
pop
repnz
je
aam
pusha
sbb
leave
xchg
push
into
ret
hlt
or
xor
test
mov
sahf
pop
mov
scas
out
ja
mov
jae
xor
mov
sbb
rcrl
ficompl
cmpsb
push
pop
hlt
enter
sbbb
push
lock
jae
popa
iret
inc
dec
mov
loope
or
andl
lcall
ret
insl
sti
sbb
xlat
or
test
ror
pop
andl
pop
or
not
or
pop
jno
jle
mov
xorl
sbb
outsb
cld
pop
shll
fs
mov
scas
mov
fstps
ljmp
inc
inc
and
cmp
mov
adc
fwait
sbb
xchg
pop
add
pop
call
cmpsb
sti
jg
add
sub
sbb
and
movsb
push
add
sbb
xor
inc
int3
jae
nop
push
xor
sub
dec
aas
cmc
xchg
je
push
fldcw
cmp
sbb
in
out
int3
jge
mov
jmp
push
mov
and
cs
popf
push
cltd
loope
mov
imul
dec
jg
jp
xorb
jp
cmp
mov
sbb
xchg
int
pop
mov
unpckhps
std
movsb
adc
jmp
push
sti
test
mov
jp
xor
xchg
out
sbb
push
mov
jno
pop
test
jne
popf
dec
or
pushf
sbb
arpl
cmc
fiaddl
push
movsl
pop
mov
cwtl
sub
addr16
jmp
sti
shll
popf
push
dec
sbb
adc
cmp
push
push
pusha
out
leave
into
fwait
imul
aad
loopne
repz
dec
ret
dec
icebp
fbld
add
add
or
out
push
mov
fisubrs
ja
scas
mov
out
icebp
cmp
fists
cmpsl
xor
lahf
cmp
pushf
pop
and
and
repz
or
jmp
lods
mov
pop
flds
push
cmc
sbb
cmp
mov
ret
fsubl
out
filds
ljmp
pop
push
ret
cmc
int3
add
xor
xchg
adc
sub
repz
jbe
push
xlat
es
call
mov
push
movb
and
sbb
xchg
push
mov
cs
push
ljmp
ret
mov
inc
ret
adc
pushf
test
mov
cs
mov
call
mov
cmpsl
sub
pushf
ret
mov
dec
mov
inc
int3
stos
rcll
repz
addr16
pop
rclb
ds
jo
mov
inc
out
out
imul
in
jg
cmpsb
push
and
int3
lods
loop
mov
adc
xchg
stc
inc
lret
insb
std
lods
dec
mov
pop
pop
sysenter
xlat
push
dec
dec
loop
mov
or
jne
insl
jecxz
lret
adc
cs
fnsave
je
mov
lds
jns
fisubs
pop
test
mov
fisttpll
inc
sub
arpl
inc
cmp
call
pop
xor
xchg
aas
mov
rolb
and
mov
mov
stos
push
pop
mov
mov
inc
or
sti
inc
or
cmp
and
pop
mov
jecxz
jge
pop
jae
aaa
jle
sub
sub
outsb
sub
fwait
dec
add
es
cmp
ret
xor
sbb
cmp
fnstsw
test
pushf
sbb
stos
push
inc
inc
push
fst
inc
or
icebp
adc
lcall
lods
in
fstp
mov
daa
mov
movsb
mov
pop
dec
test
sbb
mov
xlat
sub
fistpll
test
inc
dec
outsl
and
jg
js
push
pop
xchg
mov
ja
xchg
stc
je
dec
jmp
pop
jge
stc
in
test
test
add
shlb
imul
int3
stos
nop
mov
mov
mov
pusha
rorl
and
inc
aam
mov
xchg
mov
jno
das
dec
bound
cld
push
test
dec
dec
jmp
rcrl
or
iret
sbb
inc
adc
shlb
adc
push
test
push
push
or
mov
mov
jle
arpl
or
push
xor
clc
jmp
sub
scas
xchg
aaa
mov
mov
movsb
icebp
adc
mov
mov
dec
mov
xchg
dec
out
sub
push
fnstenv
xchg
out
in
inc
dec
les
jbe
push
test
out
ja
pop
mov
mov
mov
or
pop
and
cmp
sub
and
in
xchg
mov
fsubrl
in
inc
add
and
fisubrs
dec
pop
ds
jbe
pop
fmulp
mov
push
js
and
push
fstpl
repnz
jmp
add
mov
dec
inc
push
stc
sar
andb
testb
in
lret
test
sub
adc
adc
data16
xor
fdivrs
push
fcmove
inc
xchg
dec
xor
jg
mov
shl
imul
push
insl
loop
ss
popa
jbe
xor
sub
shrb
daa
es
dec
cwtl
fcompl
mov
mov
dec
cmc
add
movsl
push
xor
test
push
lods
cli
lock
cli
nop
fildl
adc
mov
lods
dec
dec
and
cmp
setb
fisttps
xchg
sbb
mov
cli
xchg
loop
mov
dec
lods
inc
shrl
push
cmc
stc
rorb
mov
push
dec
outsl
pop
or
lret
repz
xor
sub
xchg
dec
cs
repz
jp
in
je
pop
int3
rolb
scas
and
xchg
jg
mov
sbb
pop
mov
ds
lock
dec
mov
insl
cwtl
xchg
test
sub
mov
pop
pop
rol
and
leave
imull
adcb
mov
insb
mov
jnp
jmp
test
pusha
bswap
das
and
fsts
jbe
jge
shr
stos
ss
es
repnz
stos
rcrl
imul
rcll
jg
loopne
adc
icebp
imul
loope
inc
repz
mov
notb
prefetch
scas
pop
insb
dec
xorb
loop
mov
aaa
pop
mov
jb
pop
faddl
testl
inc
push
jmp
mov
push
jo
scas
sbb
sub
or
fisubrl
jno
repnz
dec
bound
into
jno
cmp
jbe
ficoms
add
ja
cmpsl
clc
in
xchg
push
in
insl
pop
outsl
push
cmpsb
cld
cmp
sub
clc
in
cmp
or
cld
xchg
fnstsw
mov
cmpsb
ret
pop
lods
cs
sar
movl
and
arpl
fnsave
jl
xchg
cmp
sub
orl
scas
mov
add
ret
mov
pop
popl
push
sbb
shr
mov
xor
jecxz
test
cmpsl
push
aad
rorb
out
inc
jns
mov
daa
jecxz
sbb
xor
inc
mov
pusha
mov
iret
xor
fbld
out
fisubl
rclb
and
push
fsubrl
push
jne
inc
loope
aaa
push
jg
mov
in
in
mov
push
xor
fwait
sti
sub
inc
dec
mov
jl
fs
ds
xchg
aad
inc
rcrb
lret
mov
fnstenv
mov
mov
or
sub
sub
mov
dec
xor
push
aad
popf
sbb
dec
dec
je
push
lock
pop
mov
push
add
sub
cmp
test
cmc
adc
into
out
out
mov
lret
and
cmp
daa
cltd
lods
fbld
pusha
jmp
mov
out
pusha
gs
or
arpl
add
sti
dec
mov
mov
mov
dec
pop
jle
stc
fwait
add
mov
adc
push
xor
and
mov
sub
gs
adcb
jb
push
mov
sbb
cwtl
push
or
jle
push
jmp
xor
mov
nop
out
xor
arpl
lret
jns
out
inc
fxch
pop
lods
inc
or
inc
pop
lea
xchg
pop
sub
xchg
xor
scas
jmp
lods
fs
sbb
das
enter
mov
mov
jnp
pop
mov
repnz
rcl
ljmp
in
and
push
jb
popa
push
mov
mov
enter
cmpl
in
jo
xchg
jg
out
stos
inc
ret
inc
lods
mov
adc
js
mov
add
movsl
or
das
fildl
incb
mov
sbb
sbb
lods
ds
in
mov
stos
push
daa
mov
add
add
cmp
repz
push
push
xor
push
aam
incl
int3
mov
cmpsb
dec
and
scas
andb
je
mov
push
xchg
cmp
stos
fwait
cmp
fiadds
cli
int3
mov
ja
call
or
jge
aaa
and
outsl
fisttpll
shrl
imull
test
ds
push
pusha
add
or
pushf
enter
fnstsw
test
clc
and
sub
shr
lret
sbb
repnz
push
add
dec
and
push
mov
mov
xor
or
lahf
js
jp
pop
loop
ja
mov
jno
fists
push
out
mov
jb
std
cli
aaa
nop
outsb
xchg
insl
fistpl
mov
fcomi
lahf
xchg
add
adc
arpl
imul
jge
out
fld
sahf
adc
and
insl
add
gs
xor
jo
movsl
jmp
sub
jno
cwtl
inc
inc
pop
rolb
xchg
ljmp
mov
fstps
jmp
es
xchg
ret
lret
in
xor
fdivl
rcll
rcl
scas
adc
cmpl
ds
roll
or
cmp
mov
push
idivb
mov
cld
or
jle
or
aas
je
out
fists
xor
mov
xchg
cmpsl
and
xor
fsubl
stos
inc
xchg
in
ja
iret
mov
sub
xchg
dec
xor
jg
mov
inc
iret
aas
mov
sub
push
xchg
pop
les
sub
rcll
sub
push
pushl
inc
push
push
stos
mov
mov
sbb
mov
adc
and
mov
aas
dec
aam
stos
jp
cs
jg
xor
xchg
pop
into
in
mov
cmp
cmpsb
mov
dec
inc
shrb
sub
or
add
add
mov
cmp
push
out
inc
adc
fnsave
pop
cmp
lret
ss
incb
je
test
jmp
cltd
add
gs
arpl
sbb
in
push
push
cmpl
bound
pusha
fdivr
jae
cwtl
xorl
negb
cmpsl
stos
inc
sbb
sti
dec
icebp
lds
fidivl
adc
xchg
add
icebp
pop
daa
lods
jge
pop
jle
dec
cs
mov
dec
adc
test
sbb
cs
xlat
shl
xchg
hlt
mov
scas
subb
jg
cld
fucomi
pop
fwait
scas
cmp
addr16
idivl
in
inc
sbb
mov
shrb
or
loope
ret
or
jbe
jp
shll
sub
xor
add
mov
inc
cmp
mov
pop
dec
mov
xor
test
fldcw
andl
aaa
fs
push
xchg
nop
sbb
pop
mov
lods
pop
mov
es
mov
mov
dec
out
enter
inc
xchg
fs
cwtl
aas
test
push
push
jmp
je
cld
hlt
and
dec
hlt
or
pop
popa
lock
outsl
lock
popa
daa
xorl
test
fnstsw
aad
cmpsl
test
ret
je
dec
test
cli
icebp
push
pop
outsb
inc
test
push
data16
popf
inc
jp
ljmp
and
mov
shrl
mov
dec
xor
ret
int
pusha
sub
in
in
xchg
mov
lcall
das
inc
push
or
cmp
loop
cmc
ret
decb
xchg
es
aam
pop
xchg
push
add
mov
shrb
imul
xchg
dec
sub
sbb
data16
test
pop
cmpsl
xchg
fiaddl
mov
int3
lods
pusha
jns
daa
jp
add
pop
adc
lret
iret
mov
cmpsl
push
in
pop
adc
dec
adc
adc
aas
div
popa
cmc
xlat
insb
mov
ret
push
adc
aam
adcl
xchg
iret
xchg
push
mov
insb
outsl
sbb
mov
sbb
std
dec
adcl
lock
ljmp
and
and
cmp
idivb
outsl
ret
cmp
xor
mov
lea
rcrl
ret
popa
rol
jb
dec
fmul
mov
add
xor
outsb
cs
mov
sahf
fnstenv
lret
lea
sahf
movsl
cmp
xchg
fmuls
adc
bound
dec
dec
test
mov
sbb
cmc
mov
adc
cmc
mov
adc
repz
jne
stos
cmp
lock
mov
pop
nop
sub
cmp
dec
pop
xchg
push
jecxz
into
inc
sub
fsub
cwtl
and
jp
cmc
fldenv
stos
mov
fwait
js
jl
sbbb
pop
cmpsb
mov
es
add
jo
cwtl
iret
into
test
cwtl
rcrl
mov
aad
jae
loope
loop
dec
mov
xlat
add
jmp
aaa
jnp
dec
jo
push
xchg
cmp
jp
jge
ficoms
repz
sbb
imul
scas
int3
aam
cmpsl
adc
ja
push
jo
imul
mov
je
int3
fmull
in
or
jecxz
aad
push
jnp
cmp
push
aaa
dec
dec
rol
jecxz
iret
cwtl
inc
adc
in
insb
xor
sub
pop
mov
lock
test
stos
roll
mov
jno
mov
mov
into
clc
es
mov
adc
jno
aam
rorl
ret
imul
inc
and
mov
test
shrb
sbb
div
movsb
int3
sahf
and
nop
sub
fidivs
test
or
ds
push
mov
in
jno
imul
push
aam
mov
loop
pop
jle
xchg
fwait
push
mov
dec
jl
movsl
pushf
jae
push
cltd
sub
and
jge
or
mov
adc
push
and
mov
shrb
aam
mov
js
pop
cmc
and
mov
sbb
sub
pop
addr16
push
dec
jb
and
out
std
or
mov
movsl
sbb
imul
ss
stos
cs
ja
pop
push
adc
inc
fidivrl
xchg
and
and
xor
dec
dec
jnp
push
dec
mov
jae
sbb
push
inc
mov
push
lea
ja
scas
pop
inc
movsl
ja
and
cmpsb
push
addr16
push
and
adc
lret
mov
lret
lods
adc
jae
test
clc
addr16
dec
cmp
pushf
stos
negl
out
jo
xchg
push
fidivrs
mov
pop
enter
daa
mov
ljmp
mov
push
mov
into
pop
xor
xchg
shll
jne
add
inc
inc
fadds
outsl
cmp
in
cmpsb
je
pusha
mov
out
push
mov
jbe
ljmp
ja
ret
and
dec
mov
or
ss
iret
and
push
sti
popa
aaa
cld
add
jecxz
dec
lcall
cmp
shll
shll
xor
jno
cmp
je
pop
push
jl
pop
sbb
jns
jnp
inc
mov
sbb
push
mov
idivb
mov
popf
icebp
jge
test
mov
jge
lret
push
ret
add
outsl
ljmp
and
xchg
ds
mov
daa
test
das
stc
dec
leave
lahf
ss
lods
mov
insl
jne
out
adc
mov
and
in
xor
popw
xchg
mov
add
jae
sub
push
inc
xchg
fmul
jmp
out
out
xor
sbb
lcall
inc
adcl
or
cmp
adc
sbb
out
xor
fwait
dec
sub
outsl
push
rorl
loop
and
adc
push
sbb
inc
popf
pusha
cwtl
mov
mov
lea
jb
push
push
stos
imul
fsubrs
pop
dec
aam
test
test
inc
or
and
jl
cli
mov
xor
mov
scas
fbstp
inc
aas
pop
jmp
add
xchg
sub
stc
popf
mov
and
das
nop
sbb
mov
add
pop
mov
push
out
jp
lahf
loope
mov
add
pop
sub
stos
shlb
mov
stos
jo
in
shll
scas
pop
and
orl
neg
mov
mov
aaa
cmp
jecxz
sahf
pusha
pop
push
adc
lods
shlb
mov
clc
mov
cmp
xchg
dec
jne
cmp
xchg
push
pop
xchg
push
icebp
cs
mov
pop
insl
movsl
stos
rolb
popa
mov
rcrb
ss
fdivs
out
adc
push
and
push
rorl
or
jmp
pop
movsl
aas
add
mov
pop
jge
or
pop
shrl
imul
les
nop
je
mov
xorl
addr16
adc
es
mov
jle
pushf
sub
lods
xchg
xor
jecxz
lret
nop
push
jmp
rcrb
sub
mov
cmp
das
xor
imul
fdivrs
or
clc
jecxz
std
ffreep
mov
xchg
mov
test
mov
dec
outsb
mov
je
adc
push
sub
sub
xlat
push
dec
subl
jne
push
movsl
mov
call
and
pop
dec
lds
sbb
dec
shlb
mov
daa
xor
pop
adc
fnsave
add
pop
push
adc
jb
inc
fimuls
mov
sbb
jae
inc
fldcw
cld
jecxz
enter
rclb
push
xlat
sbb
inc
xor
insl
out
pop
repz
test
jg
popf
lret
xchg
lock
mov
add
int3
and
cmpsb
push
hlt
ret
and
push
roll
movsb
push
sub
lret
andb
xchg
int3
repz
and
arpl
ret
or
pop
inc
jge
push
mov
insb
pop
in
movsb
in
mov
push
mov
je
xchg
mov
test
mov
stos
xchg
cmp
push
insl
add
in
subl
andl
cld
inc
jne
mov
scas
inc
es
call
sti
cmpsl
jg
jecxz
mov
es
push
cmpsl
icebp
xor
lea
fsubr
hlt
xor
xor
mov
inc
push
aad
mov
adcb
sbb
loop
mov
lock
cld
mov
adc
sub
lods
lods
lock
ror
push
pop
pop
aaa
xchg
loop
nop
pusha
dec
jnp
hlt
aaa
pop
push
fisubs
dec
aam
les
sbb
aad
imul
test
push
gs
push
repz
and
inc
pusha
gs
push
sub
cwtl
xchg
push
push
cmpsl
cmp
sbb
hlt
leave
call
xor
pop
movsl
and
dec
pop
jl,pt
jge
into
daa
mov
jecxz
cmp
outsl
hlt
dec
mov
and
fldt
inc
mov
pop
adc
dec
scas
out
mov
lcall
popa
test
add
icebp
cli
clc
fs
mov
dec
pop
movntps
dec
xor
push
dec
mov
cltd
stos
sbb
in
and
sbbl
insl
aam
aaa
push
iret
cmp
cli
mov
ret
out
mov
sbb
test
rcrb
sbb
ljmp
rorl
in
xor
add
repnz
imul
push
jl
insb
jl
mov
ja
mov
ret
add
cmpsl
loope
jne
sbb
xchg
inc
push
in
sub
adc
mov
sub
notb
das
mov
adc
jne
das
dec
lretw
mov
or
cltd
mov
cli
xchg
arpl
movb
add
add
dec
int3
jp
sub
push
sbb
lcall
xchg
or
andb
scas
dec
loopne
mov
jmp
dec
out
jno
stos
in
cmp
out
and
outsl
dec
adc
in
es
sbb
sub
pop
mov
xchg
cli
and
add
dec
jecxz
adc
ret
push
dec
dec
push
arpl
and
movsb
and
outsb
mov
insb
and
xor
nop
mov
xchg
imul
sub
aad
loope
sbb
stc
daa
jbe
mov
aaa
aam
das
call
int
stos
adc
mov
repz
cmp
cmp
xlat
sub
mov
test
push
xorb
imul
jae
xchg
add
loop
cmp
xchg
adc
enter
dec
add
filds
lods
rclb
dec
rcll
pop
cmpsb
imul
xlat
out
mov
cmc
push
imul
mov
push
xor
sub
lcall
sub
pop
rcrb
aad
test
mov
out
xchg
lea
sub
sbb
sbb
ljmp
jbe
pop
sbb
ret
cs
mov
int3
imul
lret
mov
xor
sbb
push
mov
fs
sar
cli
adc
fisttpll
faddl
and
and
push
into
cmp
dec
cwtl
cmpsl
pop
cld
inc
call
push
push
cmpsb
mov
adc
popf
ljmp
and
in
push
popa
mov
push
outsb
iret
sub
jae
jb
stos
popf
das
jg
push
out
jl
add
arpl
push
test
mov
jge
scas
loop
xor
mov
or
test
ljmp
das
lret
mov
mov
fs
shl
cmp
add
jg
lahf
clc
or
jo
insb
mov
cmp
call
das
push
insb
sahf
sbb
xlat
test
cmp
and
mov
lea
in
mov
stos
aam
iret
inc
cmp
mov
pop
int3
dec
insl
and
sub
imulb
or
sar
sub
out
sbbb
test
nop
push
jg
fisubs
icebp
cmp
stc
cmp
aad
ficomps
fistl
xlat
sti
cmp
test
push
jns
ficoms
cmpsl
sub
stos
movsb
mov
dec
mov
stc
lods
push
xlat
add
popf
xchg
scas
loope
lea
insl
mov
sub
mov
enter
inc
out
pop
out
add
inc
pop
mov
mov
xchg
push
and
lcall
cs
adc
nop
sbb
mov
ret
subl
and
pop
dec
icebp
mov
cld
dec
enter
mov
pop
push
sub
jnp
mov
xchg
hlt
pop
mov
adcb
popa
xlat
mov
push
sbb
cmpb
sbb
aas
fildll
fists
data16
fmul
iret
imul
or
mov
mov
inc
insb
shlb
mov
adc
fst
mov
outsb
in
hlt
jmp
sub
aam
mov
sar
jb
mov
adc
mov
sti
mov
sbb
cmp
mov
sub
sbb
lret
movsb
jo
cmpsb
outsl
pop
adc
or
imull
push
js
and
les
push
popf
push
daa
add
xchg
sbb
jecxz
push
out
cmp
stos
jmp
call
inc
pop
enter
dec
inc
stos
inc
imul
mov
out
xchg
sarb
cld
lea
mov
mov
clc
ljmp
mov
data16
es
clc
fidivrs
loop
repz
and
adc
inc
push
rcl
push
inc
leave
sbb
scas
popf
scas
add
mov
mov
lock
dec
xor
inc
add
sub
push
adc
and
mov
std
add
xchg
dec
lcall
addr16
ss
aaa
and
dec
jno
out
sub
and
xchg
push
arpl
mov
out
xchg
xchg
cmpsb
inc
xchg
xchg
pop
adc
xchg
adc
push
nop
call
popa
js
cwtl
inc
out
jnp
push
push
inc
adc
add
xchg
and
jb
xchg
xchg
jo
fmulp
test
sarb
js
and
loope
add
mov
mov
inc
mov
jnp
push
imul
push
pop
pusha
cmp
sahf
pop
sub
fsubs
out
cltd
pop
add
sub
cmp
cmp
jae
ja
xchg
push
stc
fld
mov
sub
inc
jo
pop
inc
test
xchg
xchg
pop
sti
adc
jae
and
pop
jmp
popa
cltd
jmp
testb
push
sub
inc
fisttps
addl
out
jo
sub
mov
dec
adc
xor
cmpsb
orb
mov
aaa
movsl
xor
les
inc
int3
add
push
jmp
jmp
push
xlat
es
jb
push
sbb
mov
lock
lods
pop
sub
inc
adc
xchg
sbb
add
mov
cwtl
hlt
data16
sub
cmp
sub
in
push
ret
ficompl
repz
repz
cmp
shlb
mov
sbb
mov
enter
lods
enter
jg
xchg
sbb
cltd
bound
leave
call
lds
fidivs
movsb
rcr
xchg
xchg
out
and
mov
idivl
repz
imul
or
repnz
cmp
stc
int
jae
fadds
aam
stos
sbb
out
xor
nop
stc
sbb
dec
inc
test
push
imul
or
insb
lds
cmp
fnstenv
mov
icebp
jmp
sbb
iret
add
jmp
call
push
imul
jl
es
ss
fsubrs
inc
jnp
cli
cmp
ret
call
jl
or
out
fbld
push
mov
pushf
and
and
dec
fwait
xchg
mov
cmpsl
mov
sub
inc
pop
pop
into
gs
sbb
and
scas
leave
nop
gs
jbe
fstp
hlt
nop
movsb
mov
addr16
out
lea
cmpsl
xor
in
aam
adc
inc
adc
js
cmpsb
cltd
sbb
xor
inc
push
jae
outsb
mov
ds
xor
or
call
mov
mov
mov
jo
cld
mov
dec
cmp
xchg
and
sti
inc
push
push
xchg
mov
push
mov
sti
dec
enter
ja
fidivrl
das
aam
sub
push
push
mov
jge
fiaddl
adc
out
sbb
jo
and
sbb
pop
aam
rorl
adc
inc
sub
js
mov
jge
sti
xor
add
xchg
mov
sub
mov
adc
int
mov
sbb
pop
das
add
ficomps
stc
sub
sub
sub
cld
and
pop
push
adc
dec
sahf
es
inc
inc
push
push
shl
aas
aaa
hlt
xor
fstp
push
cmp
xchg
push
adcl
in
inc
out
and
in
xor
sub
sti
test
push
in
cltd
or
sti
int
jne
or
add
inc
aaa
aad
mov
leave
loop
mov
cwtl
pop
sahf
addr16
repz
aam
push
cmpsl
jo
add
sbb
mov
jae
dec
inc
loopne
sub
ja
js
mov
loopne
movsb
push
cs
das
stc
ret
and
add
popa
push
outsb
les
adc
push
push
pop
rorl
stc
fnstsw
xor
aas
push
cs
fsts
cld
jle
arpl
or
repz
scas
mov
mov
fstpl
sub
clc
sbb
push
adc
arpl
adc
dec
aam
cltd
xlat
in
repz
dec
outsb
mov
sbb
add
inc
es
in
mov
pop
sbb
std
iret
stos
sbb
dec
lretw
inc
push
dec
imul
dec
xor
push
cmp
and
out
testb
arpl
xchg
jmp
push
scas
and
in
popf
and
jle
std
es
jg
add
sub
fildl
lods
mov
dec
in
addb
mov
xchg
and
inc
scas
mov
sti
iret
mov
xor
and
lods
clc
popf
outsb
push
sub
dec
mov
mov
push
mov
rcll
push
sbb
jno
add
or
push
fidivs
pop
sbb
out
es
inc
loop
jne
jnp
pop
lods
imul
out
cmp
shlb
lock
mov
sub
or
jmp
jns
inc
cld
add
jnp
dec
loope
sub
pusha
repnz
add
or
push
push
and
pop
mov
jbe
dec
sub
adc
push
sub
test
movsb
in
xchg
jbe
sti
sbbb
jmp
stos
out
inc
inc
mov
sub
cwtl
test
inc
push
mov
mov
mov
push
rorb
sarb
imul
lcall
cmp
push
xchg
fisubrs
xor
pop
daa
jns
outsl
sbb
aaa
lods
jne
dec
and
ret
mov
test
jg
aas
mov
xor
adc
mov
dec
add
call
ja
pop
fiaddl
fisttpll
fs
shrl
fstl
fstps
push
jp
mov
dec
cmp
mov
inc
mov
out
daa
push
dec
aad
dec
jae
fmuls
pop
mov
and
push
cld
inc
test
lahf
decl
pop
aaa
sbb
xchg
jg
into
jae
imul
mov
test
mov
test
xor
aaa
mov
dec
test
int
sbb
lahf
mov
xor
cmc
leave
outsl
sahf
shrl
popf
addl
sub
lock
in
in
out
repz
dec
je
mov
mov
scas
pop
pop
mov
and
add
add
loop
ljmp
mov
xchg
dec
sbb
in
sub
push
dec
mov
or
cmp
enter
inc
scas
je
pop
insb
arpl
out
push
pop
loop
cwtl
fidivrs
rclb
out
adc
call
and
hlt
add
nop
mov
mov
dec
jbe
sub
pop
and
mov
and
or
fstps
nop
add
fsubr
repz
jno
ja
stc
fidivrl
or
insb
fmul
mov
jge
push
mov
xchg
xchg
jl
dec
and
cmp
icebp
aaa
inc
xchg
test
dec
mov
lret
lods
scas
ret
lock
sbb
pushf
dec
dec
mov
outsb
cmp
je
sti
sbb
xchg
adc
mov
movb
data16
dec
mov
sub
pop
jb
xchg
xchg
add
mov
aaa
fucom
xor
add
stos
adc
or
xor
mov
imul
dec
sbb
xchg
or
movsl
and
sub
mov
shll
pop
jb
mov
enter
inc
dec
lret
sahf
pop
mov
leave
jbe
push
jp
push
mov
jp
hlt
sub
mov
leave
mov
loope
xchg
or
jp
gs
pop
or
nop
and
inc
pop
arpl
into
sub
adc
cmp
xchg
in
xchg
cwtl
in
and
inc
adc
aaa
pop
fistpl
shlb
ljmp
cmp
shll
ret
xchg
daa
add
jmp
and
lret
mov
xchg
xchg
and
das
adc
mov
inc
xor
xchg
jne
mov
jne
xor
into
repnz
adc
repnz
cmpsb
in
dec
lds
jae
punpckhdq
cmp
jl
ss
das
int3
xchg
dec
mov
mov
call
cli
sub
fstps
mov
lcall
push
inc
mov
jp
sbb
jbe
inc
iret
insl
jecxz
cmc
lret
mov
shll
mov
std
pop
ljmp
loope
add
xor
iret
in
hlt
sub
cld
je
sbb
ds
fs
std
cmp
add
dec
icebp
mov
or
jae
mov
test
lret
dec
sti
add
adc
fcomps
dec
or
push
test
inc
inc
dec
iret
cltd
xchg
int
iret
pop
xor
inc
xor
cmp
sbb
fnstcw
shr
mov
dec
std
inc
pop
cmp
push
pop
sbb
icebp
orb
mov
fimuls
sbb
mov
xorb
idivb
popf
stos
nop
jb
cmp
mov
mov
adc
cld
lods
testb
stos
lods
pop
andb
pop
add
lret
stc
ljmp
test
pop
shr
lahf
enter
dec
cs
add
xor
insb
in
in
xchg
in
cmp
push
or
jns
add
mov
lods
add
jae
dec
push
adc
cmp
rcll
or
sub
repz
adc
xor
pop
mov
movsb
cltd
fwait
jnp
cmp
mov
in
cmp
shrl
mov
daa
mov
push
aam
test
xchg
mov
cmc
jne
mov
jecxz
jl
cld
imul
call
fwait
lcall
sbb
adcb
bound
dec
fdivrl
or
inc
arpl
cli
sub
mov
dec
cmp
add
or
xor
jo
scas
adc
popa
outsl
aas
push
movsb
mov
outsb
in
addr16
je
fwait
dec
mov
or
je
mov
mov
insb
ljmp
xchg
dec
push
push
jecxz
jecxz
or
adc
jno
push
fistpll
push
mov
xchg
imul
outsl
dec
lock
cltd
out
shr
stc
pop
pop
mov
aam
mov
cld
jne
aas
iret
fs
out
lcall
add
loopne
movsl
xchg
punpckhwd
sbb
cltd
pop
adc
or
lahf
movsb
int
lahf
fldenv
imul
pushf
inc
test
int3
cmc
je
mov
or
sub
out
push
xchg
xor
imul
movl
aam
cmp
xlat
push
aam
xchg
xor
js
addr16
adc
cmp
out
fstpt
test
sub
mov
push
push
outsb
inc
add
xchg
mov
sbb
mov
fiadds
enter
fdivr
loope
inc
sarb
stc
test
or
xor
lds
cmp
and
das
mov
pushf
int
mov
and
mov
xchg
rcrl
xlat
lahf
mov
jbe
adc
sbb
adc
dec
inc
je
in
xor
xor
adc
cmc
dec
dec
mov
scas
push
fidivs
mov
das
xor
mov
push
sbb
sbb
and
out
cmp
pop
xor
out
mov
inc
leave
cmp
outsb
addr16
push
sbb
inc
dec
add
outsb
movsb
or
push
jns
xor
push
inc
mov
ficomps
cmc
mov
mov
jecxz
push
cmp
or
xchg
add
xchg
leave
xchg
mov
mov
cli
imul
cwtl
out
loop
loop
sbb
out
pop
or
cmp
xchg
test
sbb
aas
rclb
cmp
pop
bound
test
add
cmp
mov
push
aad
clc
push
jl
test
xchg
aad
xlat
fsubs
cmp
out
mov
mov
mov
cmpsl
iret
loopne
lock
movsb
sti
pop
rcl
mov
rorb
clc
jo
lahf
jbe
jo
adc
dec
and
mov
xchg
mov
sahf
addr16
test
add
daa
je,pn
push
fstps
mov
xchg
xor
insl
adc
clc
mov
mov
unpcklps
cmp
lods
fidivrl
mov
xor
xor
pusha
push
mov
push
imul
popa
cmpsb
int3
cmpsb
dec
pop
mov
pop
push
cmpsl
jp
push
shlb
int
es
shlb
ja
cld
and
movsl
xor
push
mov
mov
sub
fcomp
and
rolb
aaa
movsl
test
jne
fildll
cli
xor
sarb
ror
mov
pop
jbe
hlt
inc
insb
outsl
mov
ss
into
xor
xor
int3
xchg
add
xchg
xchg
mov
fisttpll
call
call
fnstenv
add
data16
iret
out
ja
push
mov
cmc
pop
mov
push
lahf
push
or
lret
mov
ret
inc
les
pop
lods
imull
jle
rcrl
imul
jl
sub
test
loope
ffree
inc
xor
jno
stc
int3
dec
fs
into
xchg
cmp
add
into
pop
testb
imul
xor
pop
data16
mov
xor
jle
jge
sbb
push
xchg
push
out
sub
pop
or
aas
aam
pusha
incb
fcmove
sahf
addr16
lock
dec
cmp
cld
cli
jge
adc
movsl
mov
xchg
pop
repz
jae
sbb
fiaddl
test
hlt
add
jns
dec
dec
in
mov
add
in
mov
test
inc
add
adc
int
imulb
insb
insl
add
xchg
and
adc
in
cmp
push
cwtl
mov
dec
lahf
mov
dec
and
stc
and
mov
pop
xchg
jnp
and
push
pop
std
add
dec
shr
jl
xchg
aaa
push
mov
mov
sahf
add
or
sbb
inc
pop
mov
xchg
inc
adc
into
int
xchg
adc
add
rol
into
pop
pop
sbb
xchg
fs
stc
and
jg
lods
rep
aad
std
inc
pop
notb
mov
inc
xchg
xchg
sub
jmp
pop
sti
bound
push
sbb
sub
fcomp
subl
jmp
cs
sbb
stc
lds
rcrb
fldt
test
xchg
test
push
and
jg
xor
pop
xlat
dec
push
pop
nop
add
mov
stos
mov
test
lret
stos
xchg
mov
dec
ljmp
mov
push
out
mov
jae
add
inc
into
mov
mov
int3
mov
adc
fs
sub
cmp
pusha
dec
iret
pop
cmc
or
sbb
inc
mov
fwait
decl
push
scas
mov
in
add
les
sub
out
scas
xor
fstl
add
test
sub
pop
xchg
dec
xchg
jg
jnp
xor
mov
xchg
jno
cmp
ljmp
dec
cmp
xchg
xlat
push
and
es
sub
scas
pop
loop
jnp
insl
lret
sbbb
inc
mov
pop
sbb
mov
mov
movsl
scas
cmp
in
dec
mov
jp
mov
sbb
mov
and
ds
adc
mov
lret
pop
xor
xchg
imul
adc
sbb
imul
mov
cmpsl
add
adc
stc
sbb
cmp
add
sub
sbb
lock
cmp
dec
ja
ja
mov
addb
out
out
jmp
push
jae
sbb
lret
cmp
mov
cmp
jb
lods
xchg
jge
push
dec
cmp
fs
jg
lds
mov
ja
dec
ret
jnp
inc
jge
and
sub
sub
dec
test
lret
cltd
dec
jnp
cmp
incl
fsubrl
jb
outsl
pop
insb
xchg
arpl
nop
icebp
pop
pop
dec
or
dec
je
jp
sti
outsb
fwait
test
das
insb
mov
xchg
sbb
mov
mov
dec
mov
les
or
lods
fstenv
push
out
shll
out
jge
fadds
jnp
xchg
mov
or
pop
push
pop
into
pop
mov
sbb
fisttpll
push
pop
fildll
les
daa
sub
mov
lock
pop
add
out
lock
mov
cmp
icebp
adc
loope
sub
jecxz
sub
mov
mov
pop
push
push
dec
push
cltd
push
mov
sub
lahf
loopne
adcl
fcomps
arpl
xchg
popf
fwait
in
lahf
out
mov
push
sbb
test
bound
mov
mov
cmpsl
mov
inc
out
pushf
scas
icebp
sbbl
sti
xchg
lahf
cld
lret
fstpt
iret
enter
adc
dec
or
adc
jle
clc
sub
mov
xor
sbb
jns
add
mov
add
hlt
loope
addr16
and
mov
leave
mov
xor
icebp
lds
xchg
sbb
cmp
mov
dec
xor
and
sub
sub
xchg
sbb
inc
shl
adc
ret
mov
ret
push
sub
mov
test
xchg
aas
xor
pop
or
test
inc
test
nop
mov
or
inc
jne
sub
pop
loope
push
push
pop
lahf
fwait
test
addr16
add
out
int3
shll
icebp
ljmp
shrl
bound
neg
and
lret
push
or
sbb
insl
xor
fbstp
std
aad
pop
adc
out
mov
loop
add
push
or
pop
in
push
jae
cli
adc
and
pop
sub
and
aad
lds
push
sysret
clc
loope
out
ucomiss
sti
cmp
pop
jo
in
jp
in
ret
cmp
push
cmp
push
push
mov
outsl
arpl
fsubr
xchg
dec
rcrb
push
fbstp
out
enter
outsb
and
aad
iret
dec
push
sbb
popa
mov
and
inc
into
lods
in
jae
pop
enter
repnz
xchg
ljmp
adcb
in
in
insl
xchg
jne
push
push
pusha
mov
mov
dec
cmp
xchg
jp
pop
dec
push
ficompl
popa
imul
push
sbb
sub
loope
cmp
lcall
sub
and
push
loope
aam
pop
mov
pop
scas
testb
dec
arpl
push
mov
cmp
in
pop
jmp
mov
mov
push
je
jg
push
and
dec
or
cmp
push
inc
outsl
jb
jge
add
lret
mov
and
xchg
or
roll
int
sbb
jns
fsubrp
shld
in
lds
insl
adc
xchg
icebp
inc
popf
add
add
cmp
pusha
xlat
add
or
inc
mov
cmp
call
mov
loope
push
push
adc
xor
cwtl
pop
icebp
lds
das
dec
fnstsw
lods
and
lea
jle
push
call
push
call
orb
lcall
outsl
and
shll
and
fwait
xchg
in
mov
mov
fsubrs
add
pop
xor
inc
lcall
xchg
punpcklbw
lret
movsl
sub
fstl
sub
add
inc
cmp
jp
sbbl
insb
or
pop
fisubrl
push
add
xor
cmc
pop
pop
jmp
mov
inc
push
bnd
adc
xchg
jae
sti
leave
aad
xchg
dec
test
int
fs
cmc
and
inc
insb
in
inc
pop
imul
in
or
insl
fsubl
mov
push
ret
lret
lods
mov
pop
hlt
aam
mov
bound
cmp
jae
jge
and
out
faddl
repz
cltd
jl
or
pusha
or
loopne
xlat
cmpsb
mov
mov
fldenv
xor
aaa
xor
lahf
cmpsl
push
imul
push
ljmp
inc
pushf
inc
testl
sub
dec
pusha
hlt
cmp
cmp
cmp
dec
pop
inc
cli
repz
fwait
jne
cltd
lahf
dec
sbbl
push
jp
add
int3
or
outsl
add
loope
pop
leave
insb
mov
out
inc
mov
ss
add
sub
push
loopne
shll
stc
cmp
jbe
mov
loopne
iret
iret
mulb
jge
jge
pop
xlat
push
addb
pop
sub
into
and
movsl
loop
ljmp
inc
inc
and
js
xor
es
lahf
in
popf
push
mov
cmc
mov
pop
out
in
jne
inc
and
movsl
lar
cmc
push
ljmp
ret
cmpsl
jb
sub
dec
jge
add
mov
hlt
mov
loop
mov
dec
loopne
push
test
fimuls
rorb
cmpsb
ss
push
sub
mov
pop
cmpsl
fwait
gs
imulb
mov
nop
jbe
adc
add
and
pop
mov
mov
sarl
lea
rol
addr16
cwtl
arpl
cmp
mov
adc
icebp
cmp
das
movb
mov
push
lock
mov
daa
push
sub
jle
js
nop
stos
jns
xlat
pop
sub
mov
inc
dec
cli
xchg
sub
ds
out
shll
xchg
or
in
aas
repnz
lcall
jo
fnsave
cmpsl
xchg
or
loop
adc
nop
mov
lods
push
push
push
rcl
cmp
movsb
push
rcl
jne
ja
push
push
sbb
add
repz
mov
xor
mov
jns
adc
faddl
mov
lds
cwtl
jo
mov
movsb
repz
jnp
add
arpl
jg
jne
cmp
xchg
and
addr16
mov
sub
push
dec
add
xlat
adc
int
mov
dec
jae
out
add
insl
cmpsl
inc
inc
mov
roll
pop
je
test
out
and
dec
mov
and
es
in
cmp
notl
shl
stos
xchg
mov
push
loopne
loope
adc
adc
push
mov
aad
test
adc
outsl
cmp
push
jne
jge
xchg
xor
and
std
inc
mov
mov
adc
pop
stc
cmp
lahf
lock
push
ss
ja
jo
rclb
pushf
pop
inc
inc
xor
xchg
cmp
pop
push
add
in
popf
hlt
aam
mov
aam
out
adc
int3
inc
stc
inc
rorb
push
and
sbb
push
mov
aaa
jmp
lret
or
adc
push
notl
sbb
xchg
mov
leave
jle
jo
shlb
ret
xlat
add
jnp
mov
imul
mov
xchg
stos
call
mov
pop
ljmp
xchg
inc
enter
adc
add
xor
jbe
out
jl
cmc
push
gs
or
adc
nop
jmp
pop
imul
inc
sbb
pop
jb
repz
jbe
xchg
mov
repz
and
divb
aam
dec
aam
mov
push
mov
cmp
sarl
cld
clc
test
cmc
push
xor
pop
popf
sbbl
push
leave
jmpw
call
mov
cmp
inc
sahf
fwait
icebp
push
mov
aas
pop
lret
xchg
sub
sbb
out
sbb
inc
popa
adc
das
push
cmc
sbb
pop
hlt
cmp
sub
jp
pop
mov
fidivrl
jge
xchg
dec
cmp
cmp
inc
inc
into
jecxz
adc
leave
mov
add
outsb
sarl
and
cld
in
push
pop
sub
xchg
loopne
dec
sbb
sbb
fwait
das
bound
fmuls
mov
xchg
xchg
stos
and
clc
jl
adc
rolb
insb
mov
cmp
dec
orl
addr16
outsl
and
loope
mov
or
xchg
inc
push
je
jmp
jmp
cmp
pop
cltd
gs
std
inc
adc
insb
push
xchg
xchg
cltd
rcll
ds
mov
movsb
xor
dec
cs
adc
fdivs
ss
jp
cs
add
cmp
and
push
dec
lret
lahf
stc
test
dec
int3
or
test
cld
int3
lcall
push
pop
or
mull
test
pop
leave
dec
cmp
aaa
out
add
out
call
xor
or
mov
insb
rcll
dec
loop
jle
jg
or
mov
xchg
and
int3
imul
sbb
out
fstpt
fs
aam
inc
inc
inc
subb
dec
adc
mov
sub
jge
in
ret
sbb
sahf
daa
push
lret
jmp
in
push
lods
inc
or
jbe
ss
js
cmp
jecxz
pop
insb
insl
jns
mov
inc
nop
pop
sub
es
subl
fildl
pop
cwtl
stc
into
pushf
movnti
adc
xor
adc
cmp
minps
pop
lret
adcb
iret
dec
pop
inc
out
or
imul
in
mov
sbb
add
and
cltd
inc
cmp
pop
adc
and
jl
enter
add
xchg
sahf
jl
test
jnp
adc
and
rolb
int
or
dec
nop
push
aaa
test
push
dec
movsl
mov
fcom
xchg
fst
ret
cmp
jbe
cmpsb
loopne
adc
mov
mov
xlat
out
jg
decb
xor
push
jne
xchg
shlb
cmp
mov
divb
push
fisubrs
movsb
jbe
xor
js
jne
int
aas
psubsb
scas
xchg
scas
jp
xchg
ja
mov
ror
and
popa
lods
arpl
popf
movsl
popf
pop
push
pop
lea
out
jb
inc
xor
div
mov
mov
divb
mov
push
imul
js
mov
sub
push
mov
arpl
xchg
cmpl
dec
xchg
or
hlt
cmp
mov
jae
add
fidivs
cmp
mov
xchg
imul
cmpl
aaa
jo
xor
popf
insb
movsl
cld
or
fisubl
jno
push
sbb
xchg
sbb
rcrb
imul
mov
mov
jbe
nop
mov
fwait
mov
mov
addl
int3
jae
xchg
stc
andl
mov
jae
sub
int3
das
scas
and
sub
push
add
push
add
inc
int
xchg
dec
cmp
mov
mov
lcall
xchg
jbe
aaa
lods
bound
cmp
dec
cld
sub
jl
xor
sub
pop
imul
insl
jns
loop
mov
out
xor
cmpsl
dec
aad
popf
mov
xor
cmp
add
xor
xchg
xchg
xchg
and
mov
fwait
push
mov
jp
mov
and
xor
lea
push
and
fisttpl
xor
bound
jbe
mov
lock
insb
mov
jecxz
or
dec
ljmp
xor
pop
dec
imul
inc
clc
fstps
mov
sub
sbb
cli
scas
push
sbb
jo
fidivrl
lret
mov
neg
jne
cmpsb
mov
xchg
or
andb
dec
mov
stos
or
jne
lods
dec
repnz
pop
lea
insb
jnp
mov
movsb
stos
xor
xlat
inc
push
out
and
pop
ljmp
fdivr
dec
leave
xchg
cltd
push
ds
out
ds
mov
add
xor
daa
test
sub
jae
adc
xchg
addr16
repz
aaa
mov
pop
ret
xchg
and
imul
pop
push
inc
xor
sahf
stos
stc
daa
lret
cmp
imul
test
inc
add
pop
nop
stos
and
xchg
sub
adc
mov
inc
outsl
cmp
push
mov
aaa
ret
mov
arpl
jle
outsl
cmp
mov
rcrl
inc
mov
lods
cmp
inc
int3
rorb
push
xchg
out
mov
test
sti
imul
push
ficoms
imulb
imul
aaa
mov
negb
mov
cwtl
stos
cmp
movsl
repnz
aad
fwait
mov
cltd
mov
fcmovbe
cltd
ljmp
push
jnp
cmovae
inc
fsubs
repnz
jne
pop
inc
inc
add
xchg
add
rcr
dec
mov
xchg
cmp
or
or
lcall
or
shrb
leave
and
mov
xlat
lcall
pushf
xchg
xor
inc
test
xchg
add
lahf
test
mov
mov
push
loopne
xor
sub
pop
adc
fsubl
test
mov
push
loop
pusha
jle
xchg
and
xor
inc
roll
ljmp
mov
bound
inc
outsl
dec
mov
je
cmp
cld
ljmp
mov
fs
popa
subb
add
shlb
nop
ret
les
shlb
mov
sub
mov
fwait
pop
jae
xchg
scas
adc
xchg
stos
ljmp
outsb
push
test
and
mov
dec
loopne
jge
xor
std
mov
loope
adc
gs
scas
imul
adc
movsb
xor
sti
add
push
enter
inc
cltd
xchg
xchg
pop
add
loop
outsl
call
mov
adc
mov
sub
fstps
fnstsw
mov
shl
and
sti
lcall
fiaddl
jb
daa
rorl
sub
fwait
sub
sub
scas
jge
out
push
add
test
xchg
adc
xchg
fwait
enter
addr16
bound
jne
add
or
insl
int
jg
jl
pushf
mov
adc
outsl
mov
fimull
cmp
mov
inc
cmc
stos
push
xor
jmp
or
inc
shlb
jno
and
test
int
rorl
cmpsb
sahf
arpl
xorb
aad
jns
or
mov
das
adc
iret
dec
jg
push
daa
cmp
sti
roll
arpl
fcoms
mov
adcb
adc
mov
and
pop
dec
add
fs
stos
push
insl
repnz
in
mov
and
add
aad
mov
movsb
mov
sbb
sbb
and
push
mov
mov
lahf
inc
bound
or
push
pop
sbb
sub
inc
adc
mov
jecxz
sub
adc
cmp
and
dec
pop
push
push
and
dec
getsec
sbb
dec
in
cmp
add
insl
fwait
adc
out
lret
adc
aam
push
add
adc
jnp
stos
sbbl
mov
outsb
push
sti
push
mov
mov
sbb
daa
ret
dec
add
and
adcl
nop
xor
shr
mov
cltd
fists
ret
mov
mov
mov
adc
test
out
cmp
sub
in
rcrb
or
mov
and
xchg
loope
mov
mov
jg
inc
and
xchg
push
lock
sbbb
push
imulb
mov
je
ljmp
mul
mov
xlat
es
movsl
lahf
leave
jg
push
test
enter
cmpsl
pop
or
xchg
movsb
fcmovu
push
sub
xchg
mov
and
mov
int3
aas
cmc
sub
in
es
adc
gs
ja
shl
mov
enter
push
or
shl
sub
cwtl
out
dec
hlt
mov
mov
mov
push
xchg
inc
jmp
leave
adc
je
psrld
imul
cmp
repnz
out
add
test
mov
popf
adc
push
rorb
or
icebp
xchg
lds
subb
xchg
jne
pop
ret
ret
repz
icebp
sbb
test
push
mov
aaa
or
inc
fidivrl
int
je
jne
push
sub
push
lea
cwtl
xchg
mov
imul
lret
cmp
aas
ljmp
aad
cmp
mov
pop
fnsave
jne
loopne
in
fistps
into
ret
lret
les
ja
repnz
pop
xchg
icebp
mov
and
push
xlat
frstor
sub
shlb
jge
sbb
lods
gs
dec
push
popf
dec
out
cmpsb
push
jle
adc
orl
add
aas
fs
or
es
jae
mov
sbb
popf
subb
sbb
xor
in
fbstp
mov
jl
sbb
adc
push
mov
xlat
inc
xchg
ret
mov
test
test
jge
and
scas
leave
adc
mov
test
rorb
mov
sti
cmp
out
cmp
ss
les
push
xchg
xchg
push
mov
bnd
push
int3
movsl
mov
ffreep
repnz
mov
sbbb
adc
pop
pop
lds
out
inc
aas
test
fsts
fwait
mov
dec
adc
pop
scas
or
inc
xchg
mov
cwtl
fnsaves
in
push
cmpsb
xchg
mov
xor
push
xor
lock
loopne
jno
xor
push
xlat
and
jno
ror
or
adc
or
push
int3
pop
push
cld
lcall
cli
rorl
pop
push
lahf
movsl
mov
ss
xchg
add
in
in
push
push
lds
add
rcll
out
xor
fisttpl
dec
push
push
fistl
stos
mov
pusha
fisubrs
aaa
out
add
lret
jl
int
mov
or
mov
popa
push
imul
push
int3
loopne
adc
stos
test
inc
jg
ret
xor
rol
leave
das
xchg
movl
push
inc
inc
cltd
push
inc
lods
pushf
dec
and
fimull
adc
mov
sbb
mov
mov
jbe
ret
out
cmp
adc
xor
sub
pop
sbb
mov
scas
scas
incb
outsb
lods
adc
cwtl
xchg
lds
fmuls
hlt
sub
jmp
outsl
xchg
aas
dec
cmp
ficoml
or
dec
xchg
rcl
and
or
sbb
dec
sub
das
test
fdivl
popf
mov
jne
sarb
lret
mov
arpl
pop
fbstp
xor
repz
and
push
add
and
xchg
add
dec
loopne
repz
shl
or
adc
movsl
stos
mov
inc
pop
add
leave
mov
scas
sub
negl
fyl2x
int
iret
cmp
inc
sub
andb
adc
leave
test
fs
and
fimull
loop
pop
cmpl
lods
out
sub
adc
jnp
pushf
fdivr
inc
sub
aam
push
inc
push
mov
popa
cmp
ds
clc
and
add
or
outsb
mov
cmp
pop
call
test
sbb
fists
push
repz
xlat
in
inc
clc
rcrb
into
cmp
rclb
xchg
fstps
adc
push
adcl
jmp
mov
imul
pop
jge
jne
pop
lahf
mov
iret
inc
lret
sbb
das
ja
data16
call
call
push
jae
pop
scas
mov
cmp
dec
jno
ss
cmpl
movsl
repz
popf
add
ljmp
rcrl
inc
sbbl
frstor
jle
inc
jnp
add
arpl
popf
leave
call
mov
push
jno
xor
scas
sti
bound
mov
pop
inc
leave
hlt
lea
clc
leave
dec
inc
ljmp
movsb
mov
repnz
pop
xor
dec
into
inc
jnp
data16
add
cmpsl
jmp
popf
adc
loope
popa
add
cli
cmp
cwtl
stc
scas
cmp
in
or
lret
shlb
xchg
pop
mov
stos
aas
cmc
mov
sbb
sti
shlb
in
shl
shrb
movsb
pop
xchg
orl
xchg
mov
dec
test
mov
fcomps
orb
sub
and
aad
adc
sti
pop
enter
aam
inc
shlb
sbb
xlat
mov
ret
pop
cld
popf
push
push
mov
mov
jle
lret
imul
adc
iret
test
push
subl
or
test
ja
arpl
dec
xor
and
cmpsb
inc
mov
inc
adc
shrl
mov
in
xchg
ficomps
iret
addr16
loope
dec
scas
bound
xchg
mov
xchg
push
push
sub
sbb
xor
cmp
xchg
cwtl
iret
jecxz
ret
xchg
push
les
jl
dec
push
xor
sub
xchg
mov
jo
fdivl
ds
cmp
adc
jns
aad
mov
mov
movsb
aaa
jbe
lods
dec
mov
sahf
repnz
pop
xchg
orb
imul
fsts
add
cmc
mov
cmc
arpl
mov
mov
jle
lea
xor
pop
lahf
int3
sub
movsb
arpl
and
ror
xor
push
je
fildll
or
mov
mov
fs
fsubrl
insb
mov
sti
hlt
cmpb
movsb
mov
inc
fistps
add
fdivl
fnsave
rolb
lock
aam
mov
flds
jmp
inc
stos
fisubs
gs
ss
out
dec
in
mov
insb
stos
xor
jne
lret
pop
lret
or
loopne
add
jb
lahf
push
mov
addl
daa
jnp
xor
and
lret
jno
andl
mov
int
stc
movsb
mov
push
and
sbb
fstl
arpl
jp
xor
decl
push
cmp
pop
loop
std
mov
jns
dec
and
rcr
xchg
test
mov
fcoms
inc
sbb
outsl
lds
int3
push
xchg
and
je
sahf
cli
cmp
mov
shlb
and
adc
mov
popa
mov
or
rcll
mov
mov
inc
xchg
jge
mov
inc
mov
cmp
in
cwtl
dec
out
xor
lcall
test
imul
mov
test
jg
orps
into
sub
fsub
jl
loopne
cmpsb
xchg
mov
jg
lods
push
inc
sub
repnz
cwtl
stc
adc
out
mov
sahf
push
repnz
dec
mov
loope
and
fwait
test
orb
pop
addr16
sub
out
cmp
aam
repnz
pushf
lahf
test
je
shr
cwtl
cmpsb
cmpsb
or
shll
mov
cmc
stos
movsb
mov
ret
test
insb
cmpl
jg
in
inc
jge
push
adc
aad
dec
aad
stos
mov
mov
sub
add
xor
pop
fcoml
xor
insb
push
push
ljmp
bound
iret
jo
xor
int
out
inc
push
imul
rorl
xor
jno
cmp
jnp
ja
xor
sub
ja
imul
mov
insl
and
mov
popa
pop
stos
lock
inc
loope
std
loope
push
je
out
sub
pop
mov
les
cli
mov
cltd
adc
pop
xlat
ss
cmp
mov
imul
clc
or
ds
imul
mov
daa
ficoms
filds
jno
stc
xchg
loopne
popf
mov
into
fs
and
xor
mov
repz
push
push
jle
cmpsl
testl
mov
dec
dec
sbb
mov
add
xchg
inc
pop
lea
mov
in
sahf
and
and
cmp
insb
mov
and
shll
lods
popa
adc
sbb
iret
mov
in
ret
dec
push
call
adc
lds
hlt
loop
nop
movsl
xchg
jne
ret
pop
outsb
movsl
lods
sbb
imul
jb
out
push
xchg
test
test
jmp
jle
push
jbe
and
push
ja
or
jmp
icebp
and
mov
in
mov
sub
mov
push
jl
sub
cmc
mov
cld
adc
pop
test
div
push
jle
lods
aad
sub
lea
loop
add
int3
xor
aad
and
inc
jns
popf
or
inc
cmc
scas
lret
dec
xchg
push
pop
xchg
call
dec
adc
mov
jno
jbe
fwait
inc
test
cli
cmp
sbb
stc
clc
fcomip
faddl
or
and
or
sbb
fstps
jle
push
inc
xor
cli
xor
cmp
and
pop
inc
sbb
inc
cwtl
jno
cmpsb
push
cmp
ret
cs
je
insb
int3
sub
sti
push
sbb
jnp
xor
or
pop
and
stos
jb
dec
into
mov
lods
push
cmp
xchg
mov
ret
mov
and
scas
or
xlat
mov
ljmp
add
scas
mov
popa
daa
stos
je
pop
clc
orl
xchg
cli
sbb
fiaddl
or
shl
bound
jmp
adc
gs
xchg
push
pop
fbld
jp
xchg
dec
mov
inc
cmpsl
lock
jno
hlt
js
rorb
in
inc
into
dec
mov
filds
mov
fs
mov
push
sti
jns
dec
lea
fmuls
sub
gs
std
add
sbb
or
mov
pop
ret
xchg
jns
sbb
out
sahf
dec
inc
xor
or
mov
lahf
cmpsl
push
fs
dec
sub
pushf
loop
xchg
ret
mov
dec
mov
pop
sti
jecxz
rcrl
stos
scas
adc
mov
jo
scas
jne
xchg
mov
pushf
je
lahf
daa
cmpb
stos
inc
ljmp
jg
xchg
das
dec
lods
fsubr
movsw
xorb
icebp
xor
xchg
pushf
pop
int
ss
inc
push
mov
ficomps
xchg
push
mov
cltd
sti
cli
and
xor
jecxz
popf
lret
dec
adc
and
into
inc
adc
pop
lods
mov
mov
or
push
and
push
leave
jnp
mov
pop
push
enter
in
icebp
lock
jno
fistps
repnz
dec
cmc
gs
jbe
inc
frstor
sbb
adc
sub
pop
lock
out
xchg
add
xchg
fwait
xor
sahf
jmp
aad
inc
fcmove
mov
inc
insb
and
ja
ret
inc
lcall
cmc
jbe
jne
push
pushf
pop
mov
mov
xor
shrl
mov
sbb
mov
push
pop
sub
test
outsl
push
mov
pop
in
pop
js
and
dec
pusha
jle
jnp
in
mov
mov
mov
fldenv
sub
mov
xchg
scas
inc
leave
mov
mov
outsb
shlb
inc
jl
dec
push
pop
iret
push
or
sub
daa
imul
add
jg
push
sbbl
push
gs
ds
mov
out
adc
and
cmc
imul
repnz
clc
icebp
lret
in
roll
or
testb
cld
mov
or
ret
jbe
mov
orl
loope
xor
rcrb
daa
or
mov
dec
and
scas
out
popa
pop
push
subb
ror
sbb
stc
idiv
jge
jb
sbb
or
clc
mov
arpl
pop
lock
cwtl
popf
into
sub
push
add
pop
stos
push
and
mov
dec
pop
ja
xchg
adc
ficoml
or
and
push
mov
cmp
and
or
out
ftst
add
jle
xor
sahf
pop
dec
and
fcmovnbe
sub
ret
por
ja
cmp
imul
int
stos
xchg
ret
jb
xchg
in
xor
out
xchg
das
pop
roll
mov
rorb
test
pop
popa
and
lcall
inc
push
cmpsl
sub
arpl
fstps
pushf
int
or
int3
xor
lds
pop
push
loope
shrb
in
adc
add
xchg
fmul
push
loop
cwtl
jg
and
jo
add
inc
and
fstp
imul
ja
inc
cmpl
mov
fdivrs
mov
mov
and
xor
int3
mov
sub
daa
mov
mov
dec
jge
lods
sub
popf
decl
shrl
inc
les
movsb
push
add
jne
sbb
int
mov
loop
in
mov
sbb
xchg
pop
popa
cwtl
adc
dec
xor
dec
cmp
bound
xor
and
xor
push
jns
adc
jbe
roll
sahf
jne
fisttps
repnz
shrb
ja
mov
enter
pop
stos
inc
jle
dec
and
adc
hlt
mov
cmp
ds
xchg
loopne
outsl
push
iret
popf
xor
mov
push
lret
les
inc
aas
inc
imul
test
inc
xchg
movsl
and
cmp
es
jmp
sbb
xchg
inc
or
sbb
jne
dec
rep
add
adc
into
clc
and
mov
lcall
outsb
popf
fnstsw
lds
or
mov
mov
and
and
add
dec
outsl
xor
sub
in
fwait
mov
fstcw
shl
xchg
sub
loopne
cmp
adc
adc
or
cli
pushf
js
xor
div
fiaddl
jns
jmp
cmp
pushf
dec
cmpsb
and
jno
popa
aam
aaa
cmp
sti
insl
rcll
lods
jo
jmp
xchg
pop
cmpsb
int
test
inc
jno
xchg
cmpb
scas
lret
push
mov
lds
stc
lret
jns
dec
jle
scas
arpl
xor
loop
pop
adc
mov
xor
aas
inc
and
jbe
xchg
jno
sbb
outsl
es
xchg
push
xorb
cltd
iret
les
dec
movsl
jmp
push
pop
mov
and
add
pop
xchg
fwait
xorl
ja
test
mov
jecxz
bound
in
or
shll
pop
shrb
cmc
lcall
mov
adc
mov
inc
lret
fwait
icebp
sub
into
add
dec
xchg
mov
movsl
pop
inc
nop
test
or
imul
ss
int3
inc
insl
mov
add
pop
and
cld
add
inc
sub
dec
xor
aas
ss
int
lahf
outsl
jae
mov
push
mov
mov
and
aaa
cs
pop
xor
mov
fld1
jnp
adc
rep
sbb
xchg
mov
js
popa
aas
mov
shrl
jbe
push
fisttpll
sbb
fstl
mov
mov
xchg
movsb
scas
adc
int
xor
mov
fstpl
and
es
mov
sbb
int
arpl
jg
and
test
aam
and
and
cli
sub
loopne
push
stc
push
test
outsb
sub
das
lods
adc
lahf
push
insb
test
in
push
gs
sbb
nop
jge
sbb
stc
enter
pop
rcr
jne
sbb
xlat
jns
add
or
cmc
sar
fcmovu
xlat
mov
mov
cmp
jbe
mov
popa
xor
adc
xor
xchg
fadd
cmp
add
imul
mov
ljmp
mov
push
les
lahf
inc
sbb
mov
insl
jne
add
sub
movsl
or
cmc
test
pop
and
pushf
int3
out
add
mov
dec
pop
add
int3
inc
dec
inc
jle
rorl
stc
mov
lcall
outsb
inc
xchg
cmpsb
fwait
stos
xchg
mov
cmp
dec
xchg
ret
outsl
lahf
ret
mov
xor
pop
jae
or
push
test
cmp
dec
faddp
ret
xchg
jo
or
cmc
cmp
aas
ds
pop
fs
mov
cmp
es
jns
sbb
dec
int
lods
mov
inc
pop
mov
fsubr
test
pop
loop
pop
decl
mov
jmp
push
mov
movsb
sahf
in
cs
test
lock
mov
int3
xchg
lods
movsl
lahf
cmc
loope
ljmp
arpl
lret
std
gs
add
adcl
dec
pop
hlt
leave
dec
pusha
test
jg
add
movsl
inc
and
pop
shlb
leave
sarb
adc
sbb
shll
dec
push
repz
and
sub
xchg
mov
repnz
sbb
mov
insb
pmovmskb
mov
add
call
xchg
ja
pusha
pop
sbb
adc
int3
adc
sbb
jno
inc
call
lret
inc
inc
lock
into
bound
mov
cwtl
repz
rolb
andl
cmp
mov
inc
push
out
cmp
cmpsl
popf
outsb
sti
xchg
adc
cwtl
lock
mov
mov
lret
incl
outsb
ja
test
dec
fcmovnb
xor
movsl
lods
popa
sub
dec
ss
dec
mov
fcoms
xor
sbb
adc
adc
lea
push
dec
sub
gs
pop
mov
in
in
imul
jmp
xchg
push
pop
lahf
pop
popf
insb
pop
sbb
lret
data16
lahf
lret
xor
cmp
mov
xchg
jb
popf
in
mov
cmp
or
mov
and
inc
xchg
inc
sub
loop
or
xor
jl
or
out
xchg
jle
mov
ja
ror
lods
les
or
pop
popf
xchg
scas
out
sub
test
out
enter
lods
dec
xor
add
pushf
stos
cmp
xor
loopne
js
jge
into
mov
jge
in
jmp
jecxz
adc
inc
dec
sub
cltd
movsl
pop
push
and
fsubl
jge
addr16
cmp
loopne
and
into
call
jmp
or
in
xchg
adc
dec
fildl
inc
imul
or
loopne
lock
aaa
lahf
push
pop
in
sbb
and
mov
cmpsb
leave
xchg
push
loopne
push
js
leave
movsb
out
dec
mov
in
leave
loope
mov
lea
out
clc
hlt
in
les
xchg
mov
gs
je
icebp
xchg
adcb
iret
jae
mov
xchg
mov
jno
rcrl
push
push
lahf
inc
leave
stos
or
stc
es
iret
and
lret
and
inc
add
les
dec
nop
push
xor
xchg
mov
out
jle
jbe
push
loope
jne
aas
mov
xor
jg
pop
and
lods
push
fwait
femms
out
in
mov
inc
dec
faddp
lahf
mov
and
shrl
jle,pn
jg
test
lret
insl
icebp
pop
cmp
pop
mull
sarl
jge
stos
push
popf
push
sub
jle
push
mov
int
in
ljmp
adc
add
xchg
cli
sub
xchg
and
jmp
andb
dec
add
mov
addr16
mov
insl
sbb
push
pop
inc
mov
xlat
xchg
fsubl
mov
sbb
int
shlb
push
fidivrl
mov
test
jle
or
shll
insl
jmp
pop
mov
mov
jbe
aam
mov
addl
mov
test
xor
cmpsb
xor
sub
scas
iret
inc
jmp
cmc
pop
add
inc
aam
push
mov
mov
lret
out
mov
and
scas
cmp
mov
jnp
xchg
ss
cld
sbb
or
inc
sub
xchg
cli
or
pop
ds
cs
pop
lds
pop
and
and
ucomiss
xlat
decb
cmpsl
push
cmp
or
add
dec
inc
mov
ja
dec
std
or
int
out
sbb
mov
les
inc
popf
notl
mov
fildll
jp,pn
adc
mov
inc
mov
push
enter
aad
sub
sub
lods
icebp
inc
push
fwait
rcll
rolb
loope
adc
ret
xor
xorl
popa
in
dec
dec
fsubrs
nop
xchg
pop
out
test
scas
in
mov
adcb
xlat
int
clc
push
cs
jmp
xchg
dec
sub
in
cmpsl
jb
mov
mov
aaa
pop
mov
or
mov
sub
test
mov
mov
mov
or
movsl
add
out
aaa
adc
sbb
lock
xchg
setg
addr16
imul
cmpsb
sbb
pop
pop
shlb
dec
sub
fnstsw
sahf
lret
mov
lret
lcall
mull
loopne
test
fistpl
fst
pusha
inc
add
negl
push
fdivr
add
cmp
aad
sub
adc
xor
sbb
outsl
jae
scas
jmp
cmp
ret
sub
mov
xchg
pop
ficomps
xor
cmp
lods
int
fwait
cmp
in
pop
mov
pop
clc
inc
data16
add
push
mov
dec
mov
sahf
sub
loopne
xchg
adcb
repz
pushf
pop
or
cmp
inc
jne
cltd
clc
adc
sub
cmp
lea
mov
push
aad
dec
mov
stos
push
shlb
or
push
xchg
cmp
jnp
arpl
or
and
loope
dec
in
xchg
and
sub
xor
imul
and
lret
dec
scas
adc
je
movsl
inc
mov
insl
lahf
les
lock
inc
fsubs
adc
push
xor
pop
jecxz
dec
movsl
or
test
pop
ficoml
push
jb
dec
mov
into
aad
xchg
pop
push
lods
outsb
jmp
sbb
mov
and
or
mov
pop
sub
cltd
xchg
nop
and
daa
fnstsw
negb
rorl
movsl
stos
je
inc
out
mov
fwait
aaa
fiadds
lcall
pop
aad
pusha
rclb
in
in
and
inc
adc
enter
daa
xchg
ss
push
xchg
mov
xchg
stc
cltd
pop
or
cmp
aaa
mov
fs
arpl
push
pop
hlt
sub
inc
dec
scas
rorb
xchg
hlt
mov
ljmp
pusha
pop
movsb
pop
aas
or
xchg
xor
in
stos
jb
out
jb
dec
dec
and
nop
fldl
jae
addw
dec
inc
std
aam
fucom
adc
sahf
push
cld
dec
insb
ds
sub
imul
xor
xor
pop
cwtl
sbb
pop
stc
cmp
jg
or
popf
xor
fildl
lods
out
inc
jnp
push
testl
mov
test
cli
fistl
xchg
or
xchg
mov
jbe
push
pop
fdivrl
in
mov
cmc
js
adc
xchg
ret
add
call
cmp
addr16
sub
rcr
cmp
lock
push
or
push
mov
sub
sub
dec
clc
test
inc
add
movsb
xchg
jb
mov
sbb
mov
cmp
xchg
call
mov
das
and
dec
bound
pop
xor
mov
sbb
ret
faddp
jl
data16
mov
xchg
rcrl
add
cld
shll
int
lock
lea
andl
jge
pop
lds
aaa
pop
push
mov
dec
rorl
icebp
mov
push
jne
cmp
and
sti
pop
or
mov
jge
xor
pop
or
mov
shlb
or
mov
jo
dec
aad
je
cmp
sbbl
gs
push
push
cmpsl
dec
arpl
shll
in
cltd
mov
js
xchg
neg
and
and
jge
mov
sbb
sub
cmp
push
mov
and
cmpsl
lea
xor
lods
leave
aaa
mov
jge
fmul
xchg
popf
in
sbb
pushf
fs
xor
sub
int3
push
push
mov
mov
mov
out
mov
xchg
sbb
mov
xor
or
ret
out
stc
sbb
adc
cld
popf
int3
fucomip
jae
test
sub
push
dec
mov
sti
push
and
out
lret
leave
push
std
dec
cli
stos
std
daa
inc
and
loope
ljmp
outsl
insl
inc
loop
inc
pop
add
dec
xchg
dec
dec
add
jp
cli
popa
jnp
cmp
inc
push
shlb
inc
or
popf
aam
sub
pop
out
mov
push
cmc
ret
fcomps
mov
push
dec
mov
xchg
out
sub
mov
inc
xchg
cmp
into
pop
jnp
js
je
lahf
mov
inc
adc
push
cmc
adc
lods
stos
inc
jne
es
xchg
out
hlt
jo
lods
in
cmp
popa
jecxz
xor
enter
cmpsl
rorb
loope,pt
pop
rorl
je
adc
dec
gs
jnp
sbb
out
scas
call
jle
pop
and
into
shll
hlt
shll
jbe
clc
jecxz
jecxz
jg
aam
mov
mov
mov
movl
cmpl
sarl
adc
ljmp
fildll
jmp
cltd
cmp
push
xor
fldl2e
push
imul
push
xor
outsl
xchg
lock
xlat
and
push
adcb
mov
sahf
xchg
shl
dec
std
out
adc
push
adc
mov
jnp
je
scas
lahf
repnz
sub
pop
sbb
xchg
pop
or
cmp
inc
cmp
mov
scas
imul
jg
test
dec
sub
sub
in
arpl
test
in
idiv
inc
jo
or
js
push
shrb
pop
dec
leave
xor
lahf
adc
jbe
inc
adc
sbb
jns
adc
mov
and
hlt
jb
cltd
cmp
imul
ret
cmpsl
cli
mov
sub
dec
push
test
stc
aas
mov
xchg
and
or
sbb
insb
jg,pt
stc
xchg
or
xchg
push
push
in
dec
jmp
repnz
mov
repnz
lea
adc
aas
inc
jg
mov
into
imul
bound
pop
mov
mov
aad
in
shrl
pop
fs
test
popf
sbb
les
dec
mov
cwtl
mov
mov
xor
xor
and
cmp
movsl
sub
fidivl
add
sahf
mov
iret
out
adc
add
xor
push
imul
sti
cwtl
fcmovnbe
hlt
sub
mov
jge
ret
lds
ds
cmpsl
xchg
pop
mov
les
mov
ret
ret
mov
sbb
ss
xor
sub
aad
arpl
sbb
insl
xchg
shrl
jns
rcrb
popa
or
int3
out
shll
and
insl
loop
outsl
jb
mov
lea
mov
les
mov
into
rcrl
dec
xor
pop
jae
xor
dec
icebp
sub
mov
loopne
ja
sub
testl
les
cmp
cmp
inc
pop
mov
inc
xchg
or
jg
dec
sub
jmp
idivl
aam
lock
sbb
aas
sub
jns
pop
sbb
mov
xchg
sbb
lcall
in
mov
sti
mov
sub
mov
cs
jl
jo
cli
pop
pop
mov
notb
in
notb
inc
loop
arpl
cmpsb
or
push
out
sahf
adc
imul
push
pop
int3
mov
aad
std
xchg
pop
mov
stos
fsubl
daa
jge
sarb
es
cmp
cmp
sub
or
xchg
in
cmp
pop
mov
pop
cli
add
xorl
mov
out
insb
das
mov
aad
stos
jno
xor
mov
fs
cmp
dec
fwait
mov
mov
xchg
xchg
cmp
fadds
cmpsl
xor
pop
into
and
xor
inc
pusha
pop
adc
cmc
outsl
aaa
scas
jle
mov
out
cmp
sub
add
enter
xchg
sbb
pop
cmp
mov
push
and
jne
inc
jmp
dec
mov
or
rcr
ret
xor
or
repnz
pop
mov
fs
rol
cmp
ss
adcb
xchg
xor
push
pop
xchg
aad
mov
and
jle
jl
leave
sbb
lret
jl
cs
inc
nop
mov
mov
mov
and
mov
push
jnp
mov
pop
aaa
mov
mov
dec
lret
inc
dec
xchg
xor
sub
pop
shr
push
cmp
lcall
push
mov
inc
clc
push
jg
mov
imul
pop
inc
imul
adc
mov
mov
testb
pop
sbb
pop
sbb
stc
out
fisubrs
lds
sarl
dec
cmpsb
inc
int3
sub
jb
cli
aam
jns
stos
cmp
pop
inc
jmp
and
lahf
loop
in
pop
jp
lahf
xor
xor
sahf
sbb
push
faddl
sbb
mov
fildl
and
jb
inc
enter
fstp
pop
test
dec
or
jns
inc
popf
mov
das
pop
clc
adc
pop
mov
out
dec
sub
jb
scas
inc
jnp
xchg
mov
data16
dec
jle
sub
aad
xchg
mov
pop
sti
test
pop
mov
fcompl
fdivrs
aaa
mov
add
push
js
es
popf
into
sub
cli
imul
inc
inc
fistpl
clc
movsb
push
xchg
neg
add
cld
sti
popf
cmp
cwtl
std
jbe
cmpsl
inc
add
sub
fld1
add
jns
sti
lods
mov
sbb
mov
jge
adc
jge
jbe
mov
and
mov
or
mov
or
mov
scas
pop
cmp
imul
xor
flds
cli
div
fisttps
insb
push
and
jecxz
mov
ja
push
leave
loopne
fucomp
xchg
jo
rclb
mov
inc
popf
mov
adc
cmp
lahf
sub
pop
pop
lods
fcomi
in
mov
dec
andl
mov
insl
rclb
pop
andl
cmpb
xor
push
test
in
shlb
xor
cmpsl
mov
mov
repz
mov
addr16
mov
jae
cltd
or
jl
pop
cltd
xchg
loope
cmp
stc
mov
sub
cmp
mov
outsl
cmpsl
pop
push
push
hlt
fwait
push
rcrb
outsl
in
dec
stos
lods
sub
fistpll
mov
pop
cmp
imul
mov
inc
push
cmpsl
dec
adc
push
test
add
mov
push
mov
mov
mov
mov
add
bound
and
cmp
add
xchg
pop
pop
scas
pop
fiaddl
push
std
mov
pop
je
add
xchg
xchg
test
mov
xor
ret
aaa
loopne
pop
loope
dec
pusha
shll
jg
out
jmp
test
mov
or
cmp
enter
pop
push
pop
mov
and
rclb
mov
fisttpl
pop
jecxz
adc
jecxz
rcll
cmpsl
aam
cmp
xor
fucomp
imul
push
xor
xor
or
test
mov
adc
and
jnp
dec
scas
inc
and
sbb
in
shrb
cwtl
pop
jmp
push
inc
cmpsb
stos
dec
xchg
outsl
mov
lret
pushf
int
jge
out
loope
pusha
push
pop
pop
fdivs
cmp
dec
sbb
or
imul
inc
sarl
das
jg
aam
mov
ja
lret
in
or
cltd
fwait
xor
cmpsl
mov
mov
mov
cmp
mov
pop
xchg
roll
dec
mov
mov
es
fistps
mov
cwtl
popf
cmpsl
jl
pop
mov
mov
adc
fs
sub
iret
push
mov
inc
sub
imul
lods
js
ret
rcrl
call
test
cltd
xchg
roll
or
jne
dec
xchg
ja
adc
ss
ffreep
inc
popf
jae
push
mov
repnz
mov
data16
xor
xchg
pop
add
insl
jno
ds
dec
pop
push
or
adc
faddl
and
sub
inc
shll
add
cmp
and
lahf
jb
jecxz
push
or
das
gs
cwtl
fucompp
jp
cmp
dec
out
leave
shr
insb
xor
push
call
scas
cmpsl
lret
out
outsb
push
movsl
mov
pushf
or
lahf
mov
add
pop
pop
add
mov
in
sub
push
cmp
mov
out
pop
xor
daa
ljmp
stos
xlat
aaa
xchg
int
cmpsb
inc
test
lcall
jae
push
mov
jle
push
xor
adc
add
hlt
and
lea
mov
sub
flds
lods
js
mov
inc
mov
add
add
lds
xchg
mov
leave
lahf
adc
out
ret
xor
mov
adc
mov
xor
aam
cmp
ja
repz
jp
aam
aad
inc
imul
mov
push
mov
and
ds
or
dec
dec
push
js
pop
push
jno
inc
shlb
jg
add
mov
add
gs
stos
in
xchg
push
cmp
xchg
inc
fwait
jg
fildl
or
push
and
outsl
or
cwtl
les
outsl
jg
out
jle
mov
lds
call
sbbl
mov
cmp
push
inc
addr16
or
jl
mov
push
mov
ret
rcl
loope
mov
rorl
mov
xlat
jae
jnp
add
aaa
fsts
or
xor
js
mov
xor
xchg
outsl
xchg
inc
fs
sbb
or
test
mov
ljmp
sbb
xchg
and
out
testl
xchg
cmp
dec
cmp
jg
lahf
cmp
pop
pop
add
mov
jnp
test
and
or
cli
jecxz
sbb
xchg
cmp
adc
arpl
js
xor
movsb
cmp
cwtl
jmp
mov
adc
jmp
pop
cmp
push
xchg
jo
add
dec
fisubrl
scas
and
mov
xchg
mov
cli
push
pop
in
test
jne
insb
pop
jecxz
int3
js
inc
outsb
imul
inc
mov
rorl
popa
in
jnp
xlat
or
loopne
lods
inc
repz
cwtl
cmp
decl
gs
imul
imul
mov
pop
loopne
push
movsl
sub
fiaddl
dec
sbb
push
das
repnz
mov
sti
xchg
cmpsl
call
pop
sahf
daa
sti
push
push
sbb
sub
sub
mov
les
test
jmp
fisubrl
mov
in
into
push
sub
test
jge
mov
aaa
leave
lea
clc
fcmovne
aas
jg
rcr
js
mov
in
std
pop
jns
test
dec
lea
and
subb
fisubl
dec
and
aas
dec
xor
xchg
test
imul
pusha
sub
pop
cmc
dec
test
fsubrl
sbb
mov
and
mov
fistl
add
pop
push
stc
inc
divl
cmp
fiadds
out
icebp
hlt
cld
xchg
popa
ja
inc
andl
sahf
arpl
test
frstor
into
cmpsb
jge
int3
loope
popa
daa
mov
or
jle
loop
stc
cmp
mov
dec
pop
mov
sahf
and
inc
mov
pop
push
push
dec
xchg
xor
cmp
andl
addl
js
fiadds
sbb
jge
popa
xor
sub
cmpsb
sub
or
repz
imull
rcl
lea
clc
and
mov
jl
and
mov
lret
cld
insl
add
mov
push
lds
pusha
icebp
pusha
ss
jmp
xor
cmpl
mov
arpl
bound
aas
les
jo
out
insb
nop
cmpsl
adcl
pop
loop
xchg
loop
sbb
inc
sub
dec
push
rcr
inc
dec
aas
inc
sbb
js
enter
xor
movsl
scas
pop
push
sbb
mov
shl
bound
mov
sbb
xor
mov
cmp
test
adc
cmpsl
test
xor
popa
xchg
bnd
xor
fs
ret
cltd
push
out
std
push
cmp
fbstp
les
cli
loopne
mov
mov
dec
mov
add
mov
xor
and
lret
daa
scas
fldl
orl
push
lahf
lahf
stos
out
pop
imul
arpl
mov
pop
cmpsl
jp
pop
push
lds
push
pushf
or
pop
mov
adcb
xchg
int
stos
dec
das
jecxz
insl
fsts
inc
dec
mov
lahf
movsb
call
mov
dec
enter
stos
aaa
loop
sbb
inc
jbe
addb
cmp
cmpsl
jl
ljmp
test
mov
push
stos
inc
mov
outsb
orl
xchg
sub
cmpsl
les
sub
cltd
nop
sarl
aas
jbe
jnp,pn
inc
popf
pop
cmp
push
dec
in
movsl
xchg
je
mov
cwtl
jl
popa
add
shll
jb
stos
imul
sti
xchg
push
ljmp
xchg
mov
shll
dec
mov
ret
sbb
pusha
ds
pop
xorb
js
testb
sarb
dec
mov
out
aam
and
sbb
mov
dec
pop
xchg
popa
ds
outsb
xchg
mov
push
test
push
and
push
out
or
push
fimull
dec
xlat
adc
and
or
out
sub
pop
fs
dec
jns
ja,pn
imul
cmp
div
cmc
xchg
push
sbb
pop
mov
mov
jecxz
cltd
add
xchg
jb
push
sub
dec
jmp
mov
into
jb
mov
inc
mov
mov
or
xchg
push
loope
inc
lock
ss
mov
fnsave
push
push
imul
ja
pop
pop
pop
inc
adc
in
sbb
dec
sub
push
and
pop
cmp
lock
enter
insb
pop
add
or
lods
add
fnstsw
pop
fisttpl
js
dec
repnz
dec
mov
insb
sbb
aaa
out
mov
ret
int
sbb
roll
lcall
jl
add
dec
jge
mov
imul
cmp
pop
scas
fiadds
sub
push
popf
cmp
pop
test
pop
mov
and
push
sub
mov
add
jne
btcl
pop
inc
push
mov
sub
in
ds
call
mov
sub
and
or
xor
mov
sbb
fcomps
call
lods
xor
fbld
cmpsb
dec
xor
adc
fsubs
out
jge
roll
or
xchg
psrlq
into
push
mov
mov
nop
rcr
mov
pushl
cmpsl
xchg
dec
je
mov
cmc
add
xchg
in
cmp
sub
cmp
pop
repnz
js
inc
std
stc
lock
mov
xor
cmpsl
pop
icebp
adc
mov
mov
in
cli
or
and
fbld
inc
aas
leave
rclb
dec
push
mov
cmp
movsl
or
xchg
sbb
loop
xor
xchg
dec
xor
dec
push
cmc
inc
ret
xor
pop
dec
mov
fcomps
push
sub
xor
loop
cwtl
push
pop
iret
decl
lret
into
fscale
push
xchg
pop
mov
xchg
icebp
in
add
xchg
popa
in
icebp
or
push
in
imul
mov
or
loopne
dec
fs
or
sub
faddl
mov
xor
or
addr16
roll
repnz
mov
xrelease
fdivs
sub
pop
dec
inc
in
mov
cmc
or
iret
cmpsb
inc
dec
mov
mov
out
or
add
dec
add
aas
ds
es
xor
roll
or
xchg
lock
out
dec
sbb
jmp
cmp
jecxz
cmc
aad
inc
in
mov
xor
or
fsubl
aaa
lea
mov
insb
ret
ja
lods
or
fcoml
xlat
mov
cmpsb
in
cmp
clc
frstor
movsl
fistpl
jle
xchg
lods
push
mov
hlt
out
mov
in
jmp
gs
push
sbb
push
imul
stos
or
test
cs
jp
cmp
cwtl
or
lea
dec
outsl
xchg
mov
mov
daa
mov
push
insb
add
or
out
sub
add
mov
xchg
les
pop
xor
outsl
mov
aad
fsubl
pop
sub
cmp
cmp
adc
cmpsl
loope
fcoml
lcall
xorb
and
mov
and
push
and
mov
push
cmp
popa
mov
aam
outsb
xchg
or
loop
adc
iret
loopne
push
incl
mov
inc
outsb
xor
mov
shlb
mov
mov
inc
mov
cltd
fwait
xchg
cmp
xor
add
inc
xchg
mov
in
repz
xchg
jae
vsubpd
ja
int
jo
bound
sub
lods
insb
sub
ret
add
jmp
jg
inc
int3
add
add
lods
test
add
ret
sbb
fstp
sysret
ja
ja
add
out
out
out
out
adc
cmp
and
test
pop
lcall
rcrb
pop
fstpt
addr16
cltd
add
ja
mov
xor
pop
leave
loop
psadbw
or
cmpsb
loop
shll
iret
in
push
pop
mov
push
mov
xorb
mov
gs
test
mov
inc
dec
ja
inc
repz
cmp
xor
cmc
and
adc
lock
mov
xchg
adc
sub
nop
jecxz
aas
mov
jg
mov
fdivrp
push
in
les
jo
cmp
call
cmpsb
mov
std
mov
iret
jecxz
mov
and
or
lret
orb
fwait
inc
mov
lea
mov
xor
clc
cmp
arpl
ret
clc
aad
xchg
test
jmp
push
stos
push
mov
stos
bound
and
jge
adcl
push
mov
push
lahf
mov
lods
mov
sbb
cmp
mov
or
cld
inc
xor
pusha
cmp
dec
and
dec
fildl
sahf
adc
popa
dec
mov
cmpsl
popa
xchg
lcall
push
in
mov
dec
data16
add
mov
and
imul
adc
lock
and
dec
push
arpl
sbb
repz
das
int
aas
popf
insb
and
add
xchg
push
inc
loope
or
jmp
clc
fbstp
sbb
add
cltd
xor
mov
repnz
call
lahf
inc
mov
loop
mov
sub
dec
pop
in
loop
adcl
xchg
into
cld
call
movsl
dec
jge
or
fistpll
into
pop
xor
jecxz
rcrb
cltd
lds
pop
jg
adcb
add
xchg
or
and
xchg
xor
mov
dec
bnd
insl
xchg
jge
jp
dec
and
xchg
stos
sub
lock
adc
cmp
into
lret
dec
inc
rcl
ja
daa
mov
xlat
arpl
jae
or
push
jle
sub
dec
cmp
pop
jmp
ret
sbb
dec
es
lods
xchg
insl
push
jge
push
ficompl
cmp
mov
jecxz
or
aad
pushf
sub
xchg
insb
mov
push
fistl
imul
xor
jns
inc
test
ret
adc
jno
into
ss
xchg
lods
dec
test
fadds
pop
ret
xor
iret
in
in
aam
arpl
pop
repnz
pop
mov
ljmp
js
push
mov
test
mov
loopne
out
fsub
mov
outsb
sbb
pop
cmp
mov
cwtl
dec
clc
mov
hlt
sti
out
pop
popa
cmp
xchg
push
adc
call
push
bnd
cwtl
call
inc
subb
mov
xor
or
inc
mov
les
cmp
cld
bound
outsl
int3
out
fimull
xchg
sub
sbb
shl
mov
adc
ffreep
mov
sub
xlat
mov
jge
cmpl
cmp
pop
movsl
add
lods
mov
xchg
mov
stc
bound
ss
mov
mov
add
insl
or
mov
dec
fisttpll
mov
push
inc
fcoms
cltd
jno
add
jmp
cmp
cmp
loopne
sub
shrl
repnz
push
mov
sub
das
pop
cwtl
push
xchg
jae
rclb
push
fsubr
mov
icebp
lods
dec
cmp
jmp
jmp
cmp
sub
adc
mov
test
inc
test
lods
jp
js
shrl
movsb
fs
xchg
leave
sbb
int3
inc
subl
dec
lcall
test
icebp
xchg
stos
shlb
or
push
jl
lret
xchg
jmp
popl
test
ret
pop
mov
ss
adc
and
push
cmpsl
push
loop
mov
mov
sti
jo
imul
rcrb
ds
mov
and
sub
inc
mov
pushf
pop
xor
adc
stos
rcll
pop
sbb
je
push
push
push
jmp
lods
inc
das
out
push
mov
or
fists
xchg
les
pop
cmp
xor
ds
add
enter
add
adc
notb
inc
jge
add
pop
cmpl
xrelease
push
gs
adc
ss
cmpl
jle
inc
scas
push
sbb
pop
pop
sti
mov
pop
sub
jns
or
call
or
or
lds
jnp
daa
call
lds
jl
xchg
in
loop
cmc
sbb
jno
aaa
popa
mov
mov
sub
mov
push
pop
sti
enter
fists
movsb
xor
xchg
push
sbb
inc
push
repz
mov
bnd
mov
cmp
mov
jae
xchg
bound
xchg
mov
insb
out
ss
pop
lods
push
dec
add
xchg
std
aad
jge
shrl
push
rolb
jle
aad
sbb
movsb
call
pop
xchg
repz
imul
and
mov
adc
test
scas
das
push
xchg
hlt
mov
sbb
pushf
rclb
xchg
movsb
inc
pop
test
cs
repz
addr16
test
or
pushf
dec
inc
loope
xchg
jns
sbb
jnp
sub
inc
xchg
mov
mov
sbb
add
aas
pushf
mov
sub
push
stc
push
iret
push
ret
mov
fistl
movsl
inc
push
movsl
out
roll
cmp
cmp
add
scas
and
or
jbe
aam
pop
add
mov
inc
outsb
jne
sahf
sub
adc
and
adc
mov
jns
xor
mov
aad
movsb
xlat
push
pop
add
pop
gs
fstps
xor
dec
cmpsl
adc
ret
add
lock
inc
les
fwait
add
adc
sbb
mov
rcrl
mov
mov
mov
mov
mov
inc
xor
and
fsubrs
sbb
loopne
mov
jecxz
dec
fwait
pop
mov
push
jmp
scas
mov
mov
push
fistps
or
pop
push
jae
cmp
jmp
push
aam
fsubrl
sbb
movsb
outsb
sbb
ss
aad
xchg
xchg
int3
mov
pop
stos
rclb
lret
sub
pop
jns
jmp
andb
les
test
jo
outsb
adc
fbstp
or
dec
mov
test
in
mov
int
cmp
mov
gs
pop
cmp
push
test
loope
xchg
mov
mov
xor
pusha
sub
mov
cs
add
jbe
add
xor
aad
adc
outsl
popa
pop
addr16
and
mov
jle
mov
mov
in
jb
mov
xor
push
xchg
push
mov
mov
or
hlt
jecxz
sbbl
stos
xchg
xor
lods
jne
add
cli
fstp
and
ret
mov
cltd
xchg
and
adc
leave
sub
sbb
lods
scas
sti
mov
xor
jae
mov
int
outsl
pusha
jno
or
mov
push
sub
scas
sbb
js
xchg
ss
fsubs
stos
mov
xor
idivl
adc
lahf
fwait
insl
or
mov
mov
cmpsl
adc
popl
cmp
popf
inc
shrb
sbb
inc
movsl
adc
push
dec
mov
stos
sub
cld
mov
movsl
dec
lahf
jle
cli
mov
int
pop
pop
aas
adc
mov
fisubs
insb
push
or
xchg
add
ljmp
in
mov
jl
mov
addr16
mov
add
add
xchg
mov
and
addr16
dec
ss
add
in
mov
outsl
add
sbb
imul
outsb
xchg
das
jge
push
arpl
mov
xor
es
data16
lcall
fisttpll
fcoml
cmpsb
mov
nop
cmc
jecxz
mov
xchg
sbb
mov
cmp
mov
inc
cld
inc
adc
scas
pop
sub
in
or
mov
and
jp
pop
push
and
push
daa
out
call
mov
xor
std
repz
stc
into
das
mov
roll
sub
sbb
imul
sub
fildl
or
push
out
jmp
rcrl
in
arpl
sub
imul
popa
add
repnz
call
leave
pop
mov
dec
lods
mov
sbb
mov
out
ds
sub
ret
cld
and
jb
iret
lock
out
stos
xchg
or
push
cmp
cmpsb
shl
push
lods
sbb
test
add
cmpsl
shrb
cmpl
jecxz
pop
arpl
push
imulb
std
adc
adc
gs
or
int3
mov
mov
xor
aad
addr16
cs
inc
add
adc
push
icebp
fldz
dec
fcmovbe
fmull
addr16
inc
addl
push
add
popa
xorl
in
fcomp
xor
fwait
inc
ds
xchg
ds
push
mov
fucomp
sbb
les
xchg
inc
fstpl
stc
insl
mov
test
out
sarl
sbb
push
adc
or
dec
push
mov
js
popf
jl
cltd
scas
xor
jp
mov
inc
lock
jmp
out
shrb
or
mov
mov
sti
sbb
dec
xor
in
jp
cwtl
rcrb
mov
sbb
outsb
inc
mov
fistl
lea
sbb
and
test
mov
stos
das
insb
hlt
aaa
cmovge
imul
repnz
repnz
iret
sub
inc
int3
jp
fistpl
xchg
rclb
xor
sbb
lret
mov
xor
dec
sti
lretw
sub
xor
adc
test
pop
mov
test
repnz
adc
cmpsl
cmp
fsubl
mov
ja
ret
sbb
jp
and
ljmp
sbb
hlt
cs
mov
dec
add
fildl
outsb
mov
mov
sub
cmp
push
mov
hlt
stos
lcall
xor
pop
mov
aad
int3
pusha
cmpsb
push
add
xchg
dec
jmp
xchg
les
pop
adc
aaa
sub
jp
and
jp
mov
in
dec
ficompl
arpl
pop
ret
jle
and
es
mov
jne
cltd
jle
pop
mov
mov
xor
lcall
aaa
imul
inc
std
push
ss
jg
insl
xchg
or
inc
ss
cwtl
dec
mov
dec
xor
leave
and
out
sub
int
and
enter
cmp
xchg
jge
cmp
pop
leave
incb
sbb
imul
les
idiv
dec
sbb
pop
dec
int
or
scas
jp
add
or
add
pop
stos
jp
out
push
fmuls
mov
out
fnsave
sub
mov
subb
cmp
and
das
scas
imulb
inc
ret
mov
mov
lods
push
mov
cmp
shrl
mov
jb
inc
dec
stos
mov
bnd
jae
or
idivl
xor
lock
or
notl
shrb
or
pop
mov
mov
mov
cltd
xor
das
mov
call
mov
cmpsb
jmp
push
movsb
lds
cmp
adcl
pop
cltd
sub
stos
addl
sub
mov
lret
lds
ret
inc
les
nop
push
dec
cmp
mov
ror
cld
add
adc
fistpl
out
js
pop
int
jmp
mov
sbb
insb
inc
ds
xor
inc
push
add
daa
push
loope
push
leave
fiadds
xlat
loop
and
shrb
inc
int3
cwtl
int3
mov
lods
xchg
adc
fs
jbe
fwait
jo
pop
pop
or
ret
lods
add
mov
sahf
sbb
cmp
jb
pop
and
insl
and
scas
scas
pusha
inc
cs
je
cld
jb
testl
mov
repnz
into
je
int3
jp
xchg
jne
andl
xchg
or
push
fwait
sti
ss
das
rorl
dec
std
push
push
and
cmp
filds
shrb
push
mov
loope
ja
pop
xor
cld
lret
push
sahf
xchg
sbb
loope
mov
out
adc
jne
and
arpl
loop
add
pop
mov
cmp
inc
loopne
jns
jns
das
dec
mov
mov
sbb
inc
sub
in
jp
mov
inc
xchg
cwtl
add
out
xor
cwtl
nop
je
int
push
lahf
fwait
negb
mov
add
sub
fdivl
dec
push
pop
shr
imul
imul
lret
sbb
stos
outsl
mov
inc
hlt
sbb
xchg
mov
orl
jns
fwait
push
or
addr16
shll
jb
pusha
adc
pusha
fwait
addr16
xorl
cmp
sub
scas
popf
xor
insl
inc
rolb
sbb
push
in
sub
fs
sub
adc
inc
loope
jns
call
lds
inc
shrb
jns
out
pushf
das
cs
xlat
inc
mov
into
sub
xchg
sub
ja
pop
push
lret
inc
sub
mov
xor
iret
add
addr16
jp
mov
ds
je
sahf
sub
xlat
xor
jbe
cmp
pop
dec
adc
daa
add
in
mov
pop
lds
mov
mov
jle
outsl
test
mov
nop
rcrb
pop
xlat
jle
daa
loope
mov
icebp
cwtl
jne
movb
and
xor
jecxz
mov
xor
mov
cmp
cmpsb
xchg
iret
mov
jns
xchg
dec
pop
shll
lret
out
iret
mov
xor
push
fisubs
cmp
mov
xchg
xlat
popf
inc
lret
out
rol
test
lods
add
mov
imul
mov
jmp
pop
jne
outsb
lods
movsb
movsl
xor
ljmp
push
sub
mov
jmp
pop
mov
or
in
mov
jns
jecxz
pop
add
mov
into
sub
jle
push
lds
sub
pop
sbb
push
ds
out
cmpsb
mov
mov
fs
imul
jb
xchg
mov
shl
ss
int
ret
arpl
shll
mov
sbb
test
mov
fwait
jmp
out
in
sub
btc
dec
or
dec
loop
jns
mov
jne
mov
aam
gs
sbb
loopne
repnz
cs
mov
and
lret
das
inc
lret
lods
stos
mov
xchg
popa
cmpsb
pop
xor
pop
push
clc
xorl
ds
movsb
cmp
push
rcll
lcall
mov
cmp
xchg
adc
in
push
rcrl
and
daa
sub
repnz
incl
push
nop
sbb
rorb
pop
int
fistpll
push
push
xor
negb
sbb
inc
fisttpll
stc
jbe
dec
mov
adc
leave
pop
movsl
repnz
mov
cmpsl
scas
adc
test
inc
rcrb
dec
lock
mov
mov
jbe
lret
int
inc
xchg
jae
mov
call
cmc
gs
mov
je
xor
clc
ljmp
int3
push
cld
pop
or
cli
mov
jmp
mov
mov
mov
mov
add
and
aad
pushf
adc
push
in
sti
jg
dec
mov
imul
sbb
addr16
pusha
sahf
aaa
mov
add
push
daa
xchg
jae
lds
ret
mov
push
fiadds
daa
mov
inc
jp
pop
cmp
jp
fs
xchg
push
add
cmp
push
cli
addr16
push
popa
adc
adc
dec
mov
jmp
sub
fld
enter
int3
scas
leave
shl
shrb
xchg
mov
fldl
jle
test
push
pop
and
xchg
lods
scas
std
js
ljmp
jmp
cmp
mov
mov
and
jae
or
jnp
test
push
adc
outsb
ret
add
pop
sub
loope
mov
out
fdiv
sub
loopne
pop
push
mov
xor
dec
xchg
push
sbb
fs
pop
or
xor
fidivs
and
push
mov
addl
lea
fsts
pusha
daa
inc
mov
scas
mov
and
push
jbe
pop
aad
cld
add
jp
adc
cmpsl
inc
leave
mov
test
stos
cmc
pop
popf
rcll
fisttpl
dec
cmp
test
push
movsl
pop
jo
std
cwtl
jl
popf
pop
mov
fld1
xor
imul
and
repnz
mov
enter
add
repz
or
sbb
jb
sti
xchg
sbb
pop
lods
xor
mov
push
lahf
insl
lods
fptan
lock
pop
test
cmp
fnstsw
fsubrl
mov
mov
in
jae
pusha
add
fdivs
mov
inc
movsb
add
outsl
mov
cmp
inc
test
dec
iret
or
aad
and
sti
mov
insb
in
fdivr
popf
jg
and
in
fs
add
mov
fiadds
and
loop
adc
icebp
iret
adc
add
jno
jb
push
mov
sbb
inc
outsb
mov
or
icebp
and
pop
cmp
push
sti
lret
jl
cmp
mov
ret
sub
mov
fwait
or
pop
add
add
jo
pop
stc
repz
mov
jae
out
dec
iret
iret
mov
and
movsb
dec
cmp
pop
sbb
mov
cmp
push
pop
fidivl
cs
test
jge
sbb
lcallw
ja
loop
out
mov
dec
aad
adc
adc
gs
sbb
ds
jge
pop
shl
mov
jecxz
dec
pop
and
outsl
fwait
out
les
jo
fsub
xlat
sub
arpl
inc
jle
ja
sti
outsl
pop
ret
cmp
test
pushf
mov
pop
sbb
mov
js
cmp
xchg
add
lret
sub
mov
and
push
cmp
arpl
sbb
fildl
push
nop
mov
gs
imul
call
sbb
call
jae
mov
mov
and
or
cld
test
repz
cli
out
sarb
lods
loope
jge
andb
aaa
push
testl
xor
or
test
mov
sub
insb
mov
in
pop
cmpsb
mov
xor
in
pop
mull
addr16
je
jae
ja
jb
jmp
icebp
or
and
sbb
inc
sbb
out
cwtl
movsl
movsl
xchg
out
adc
or
dec
lcall
inc
inc
inc
mov
loop
lods
mov
mov
pop
adc
push
mov
movsb
mov
enter
mov
mov
es
clc
pop
stc
lahf
jae
cmp
xchg
stos
or
dec
outsb
xchg
fiadds
mov
shll
daa
dec
in
ss
adcl
push
and
push
leave
fwait
push
mov
push
mov
ret
mov
je
out
scas
fiaddl
lret
or
xor
adc
inc
les
cmpsb
lods
into
push
stos
sbb
out
in
jecxz
or
mov
inc
sti
cwtl
cs
movsb
cltd
mov
mov
imul
ret
jp
leave
sub
lret
xor
lret
xchg
mov
decb
xchg
jo
test
insb
xchg
add
sbbb
jg
mov
mov
ljmp
repz
jo
sub
add
out
xor
outsb
cld
aas
stos
out
fidivl
jbe
push
cmp
pop
out
push
xor
cs
jl
mov
jae
add
ret
popa
sti
nop
sbbl
js
push
fnstsw
test
cmpsb
sbb
pop
fcomip
dec
sti
mov
mov
mov
cmp
cmp
fldenv
daa
or
loopne
arpl
popf
push
mov
adc
dec
clc
imul
addr16
cmp
cli
or
add
add
loop
cmp
push
imul
rolb
in
jb
lods
adc
push
mov
sub
call
test
push
push
clc
js
jbe
jb
fcmovu
or
cltd
xor
add
mov
sahf
mov
or
loop
push
cmpsl
xchg
pop
add
dec
jbe
lock
cli
arpl
orl
pop
or
pop
pop
outsl
mul
push
jae
fists
jo
insb
sbb
inc
xchg
adc
andb
pop
sub
push
xor
xchg
int
in
inc
jae
xchg
jno
lds
dec
cmpl
pop
loope
sbb
movsb
insl
sub
pop
insl
xchg
fldl
push
imul
shrb
es
sti
les
jl
es
xchg
aam
aam
sub
loopne
sub
bound
in
rolb
mov
xchg
das
lods
mov
mov
add
nop
sti
cmp
or
push
jle
cli
push
mov
es
lods
adc
fs
push
xor
jno
sarl
lahf
mov
push
adc
or
arpl
insl
aam
inc
daa
sbb
out
cmp
andb
cli
fs
inc
push
jb
mov
into
cs
aam
mov
fisttps
cli
mov
lahf
and
ds
loope
mov
pusha
lret
shrl
inc
lods
loop
push
stc
mov
data16
fdiv
fs
and
je
or
icebp
jle
mov
adc
mov
xor
icebp
sub
inc
sbb
inc
push
mov
dec
repnz
fwait
je
filds
push
lds
push
jno
pop
lods
fmul
jno
mov
stos
add
int3
sbbl
mov
inc
fwait
jne
xor
inc
dec
addb
pop
or
or
mov
adc
in
scas
mov
push
dec
stos
mov
popf
clc
mov
sub
data16
push
pop
mov
addl
dec
mov
xchg
imul
inc
mov
in
sbb
aas
jg
push
jae
fwait
xchg
mov
subb
imul
mov
std
pop
sbb
mov
mov
push
lods
add
cli
xchg
repnz
mov
popa
push
rcr
sti
xchg
sti
outsb
clc
add
xchg
dec
lea
xchg
xchg
ret
in
test
dec
pusha
stos
sub
hlt
push
pop
cwtl
or
mov
out
arpl
push
lods
aam
lods
adc
push
and
mov
hlt
inc
cmc
mov
addr16
adc
data16
mov
lock
cli
dec
addr16
mov
movl
jle
enter
pop
adc
push
jns
sub
aas
add
lea
cmp
xchg
mov
cmpb
mov
movsl
mov
xchg
push
mov
lcall
adc
lcall
inc
push
pop
cmp
sbb
das
lcall
and
adc
mov
jle,pt
xchg
pop
addb
adc
xchg
in
pop
adc
divb
movsb
mov
sub
out
fcomp
and
xor
sub
jle
and
and
ss
lock
bnd
cwtl
adc
fstpl
movsl
dec
out
jecxz
lods
mov
in
mov
xor
inc
add
in
pop
mov
aas
sub
sbb
and
jne
mov
aam
lahf
push
fimull
mov
andl
popf
pushf
inc
adc
adc
cwtl
stos
stc
jns
xchg
loope
hlt
lcall
scas
jle
scas
out
movsb
mov
jnp
jnp
and
andl
mov
push
push
fs
out
and
shrb
out
pop
outsl
pop
dec
sarl
and
repnz
inc
dec
sbb
lea
js
sbb
mov
adc
sar
ret
push
push
mov
mov
and
pop
mov
sbb
add
int3
lods
jmp
lods
lds
testl
lods
cmc
sbb
cli
mov
outsl
xchg
adc
stos
jge
inc
fwait
push
loop
dec
les
aam
jmp
fistl
fmuls
imul
test
jb
shr
aad
and
or
stc
inc
popa
sub
dec
je
out
gs
in
icebp
andl
enter
mov
call
notb
ret
decb
cmpl
out
sbb
rorb
dec
out
lret
sub
scas
stos
mov
dec
testl
ret
sbb
hlt
mov
lods
or
mov
or
dec
inc
in
out
ret
mov
sti
mov
jo
cld
add
sub
mov
shrl
lea
mov
xchg
vphadduwd
adc
rcrl
movsb
aad
add
lret
sub
scas
xchg
mov
fists
xchg
sub
lods
cmc
xchg
cltd
loopne
sub
mov
xor
xor
push
data16
adc
push
lock
cmp
mov
es
inc
cmp
xor
mov
loop
mov
in
jmp
or
and
or
mov
fisttpl
mov
dec
in
loope
repnz
mov
add
cmp
cmpsb
ds
cld
push
int
sarb
adc
inc
mov
jle
adc
adc
repnz
enter
cs
add
idivl
and
sbb
jne
decb
je
std
push
jmp
repz
fistps
int3
scas
cmp
add
pop
xchg
jp
call
inc
inc
in
xchg
xor
loopne
pop
test
mov
test
push
cmp
or
push
sbb
jmp
loope
xor
stos
sub
out
dec
stos
sbb
add
xchg
xchg
lcall
inc
hlt
pop
sbb
orl
inc
inc
test
push
mov
jb
mov
dec
jnp
ret
push
call
mov
inc
les
cwtl
fmull
jge
xchg
ja
push
xchg
push
es
push
lret
add
dec
daa
pushf
in
out
push
pop
sub
mov
scas
jg
gs
fldl
sub
out
adc
lods
scas
sahf
xor
aaa
cltd
adc
mov
clc
es
or
xchg
out
insl
jecxz
in
repnz
int3
movsl
pop
add
pushf
sbb
insb
sub
xor
call
jb
adc
mov
cmc
shl
sub
mov
inc
sbb
mov
outsb
xchg
in
xor
popf
or
mov
cmpsl
sub
mov
lea
cmp
cmp
adc
jmp
int
test
sub
in
int
dec
pop
sub
sub
negb
sti
notb
inc
adc
hlt
or
cld
cmp
hlt
test
cs
je
cmp
cmp
lock
mov
push
push
into
ficomps
add
xchg
repnz
cmp
mov
decl
mov
xchg
lret
fisttpl
mov
dec
push
lcall
rcr
loope
pop
mov
or
mov
add
divl
mov
icebp
push
pop
pop
dec
pop
sub
fildll
arpl
fdivr
xor
adc
add
xchg
sbb
add
or
dec
aam
jo
dec
lods
ret
mov
sbb
scas
mov
push
clc
repnz
test
fstpt
pushf
jge
dec
mov
hlt
sbb
xor
enter
repz
sub
xchg
jbe
movb
clc
icebp
je
and
cwtl
push
std
subb
fdivl
fcoms
mov
inc
xchg
xor
loopne
push
mov
mov
insb
lea
mov
jns
sub
icebp
mov
mov
clc
sbbb
sub
imul
test
repnz
mov
mov
cwtl
xor
push
jno
mov
dec
stc
movhlps
xlat
lret
daa
repnz
pop
int3
sbb
and
jmp
mov
xor
loope
lods
or
jmp
idiv
sub
push
cmpsb
inc
in
pop
loopne
cmp
jmp
pop
lcall
test
icebp
test
mov
fmull
les
mov
repz
and
outsb
cmp
xchg
and
movsl
in
adc
cli
sbb
out
push
mov
pushl
push
or
sti
in
fsubp
jns
push
adc
adc
cmp
sbb
push
lahf
cs
clc
jge
icebp
ret
mov
es
push
int3
push
mov
pushf
incb
fisttps
ds
scas
xor
mov
mov
mov
fildll
add
stos
scas
xlat
clc
xor
cmp
jle
dec
xchg
rolb
inc
out
xchg
inc
stos
push
mov
inc
jle
inc
out
jle
adc
lret
call
cmpb
cli
test
cwtl
push
mov
stc
dec
and
mov
loopne
add
incb
add
add
int3
cmpsb
dec
addl
ja
push
out
in
lods
sbb
in
pop
ja
sbbb
mov
mov
xor
leave
in
push
incl
and
lahf
fs
out
fs
call
and
dec
jmp
mov
vmwrite
ret
imul
imul
push
jp
movsb
pop
push
push
add
adcb
pop
mov
pop
mov
ljmp
lea
add
cmp
fmull
mov
inc
js
mov
dec
jg
ror
sub
add
in
hlt
mov
sarb
push
mul
pop
loopne
lock
push
dec
outsb
xor
adc
aam
mov
xor
adc
sbbb
push
jns
sbbb
fucomp
sbb
sbb
pop
stos
sahf
cmp
enter
add
es
inc
xchg
mov
mov
sbb
leave
mov
into
popa
mov
adc
mov
jmp
ret
lods
cmpsl
scas
or
mov
loope
jmp
cmp
push
test
or
adc
lahf
push
lret
mov
add
xor
pushf
mov
ljmp
pop
imul
jnp
xor
stc
ja
scas
insl
sub
mov
sbb
mov
pop
jge
xor
xor
or
push
mov
out
adc
arpl
cmp
in
clc
xor
arpl
push
leave
push
stos
adc
sbb
inc
cmp
movsl
mov
bound
inc
test
fcoms
jnp
vpcomw
call
push
cmp
stos
jp
push
and
out
or
ja
xor
add
bound
add
stc
xchg
bound
mov
xor
sub
data16
cld
push
inc
or
mov
cmpsb
xchg
dec
xor
loope
mov
inc
mov
inc
jge
jnp
adc
loop
loope
mov
sti
push
inc
mov
pop
cmpsl
cmpsb
and
adc
push
mov
xor
int3
xchg
jb
sub
push
std
mov
insb
cmp
cmp
mov
pop
popl
fisttpll
dec
daa
mov
fistpll
fiaddl
rcll
adc
data16
sub
and
js
jo
ja
xor
jns
std
mov
jecxz
push
push
and
fcom
push
cmc
and
out
std
pop
jb
adc
dec
push
inc
sahf
jae
xchg
pop
push
into
sbb
adc
lahf
jne
jmp
rep
mov
icebp
xchg
mov
adc
es
sub
in
scas
push
in
push
jne
mov
pop
xchg
sbb
aam
xchg
int3
hlt
mul
adc
fldcw
dec
mov
jg
lock
and
or
pushf
cmpsl
jl
or
xlat
mov
cmc
addb
fwait
sbb
out
xor
adc
push
mov
adc
cmp
test
out
std
fs
push
push
inc
outsl
inc
mov
xlat
sub
cmp
push
jl
or
cmp
sub
loopne
xor
or
mov
aad
xchg
in
mov
jnp
xchg
inc
mov
mov
mov
jle
pop
shlb
xlat
cltd
shrl
jle
lods
jl
cmpsb
pop
in
rclb
cmpxchg
fwait
arpl
jg
jle
pusha
mov
dec
das
imul
inc
sub
out
test
nop
push
cmpsb
loopne
pop
sub
push
or
pop
adc
or
adc
nop
or
lock
and
sub
int3
std
out
in
jns
sti
das
mov
aas
aaa
sbb
sub
mov
pop
mov
adc
in
andl
imul
pop
out
push
imul
dec
push
xchg
gs
loop
mov
stos
lret
lret
cmpsl
into
jge
pop
ljmp
daa
mov
or
call
rorl
mov
add
movsl
sbb
cmp
push
call
pop
sub
mov
mov
pop
in
rorl
mov
adc
nop
push
jmp
jecxz
jne
ds
loope
sbb
inc
in
mov
addr16
or
push
dec
cmpsl
daa
pop
shlb
cmc
pop
cmp
push
push
in
xchg
and
movsl
xchg
repnz
les
fists
bound
test
xchg
andb
mov
mov
and
jmp
mov
pop
imul
inc
loop
xchg
xchg
sub
scas
push
in
dec
cltd
push
lret
mov
jp
or
mov
stos
fsubrs
jbe
scas
pop
pop
dec
repz
loopne
jle
jp
pushf
cwtl
pushf
aam
pop
mov
pop
xor
and
xchg
imull
sbb
popa
es
or
clc
popf
in
lds
inc
xchg
dec
dec
xor
lea
mov
push
ret
lock
jmp
repnz
fstl
cld
jbe
dec
nop
cmpb
pusha
lods
in
push
mov
imul
mov
xor
cmpsl
xor
inc
cmp
add
ljmp
xchg
sti
ret
out
test
sti
lcall
inc
imul
xchg
scas
aaa
popf
into
ret
into
scas
and
adc
adc
cmp
lret
bswap
mov
sub
insl
popa
xor
lcall
repz
in
mov
add
jne
cli
ljmp
ret
rorl
jle
adc
inc
xchg
inc
arpl
jae
push
lea
in
fst
stos
mov
adc
xor
jg
fisttps
push
push
into
mov
pop
jl
movsb
and
dec
mov
pusha
pop
sbb
ds
sub
std
add
adc
stos
xchg
addb
inc
pusha
sub
fsubrs
mov
push
jg
insl
mov
pop
or
pop
popf
mov
mov
gs
das
or
sub
pushf
insb
mov
call
loop
sbb
nop
xor
cmpb
lret
and
mov
ljmp
mov
jo
mov
dec
divps
sub
xchg
sahf
sbb
ret
emms
rcl
mov
es
or
push
cmc
sub
mov
test
insl
cmc
or
mov
sub
dec
mov
leave
add
mull
sbb
xor
pop
or
jmp
pop
lods
pop
roll
sahf
adc
sub
dec
fwait
or
mov
pop
ljmp
push
xchg
mov
pop
adc
mov
repnz
fisubs
pop
mov
and
mov
cmp
mov
sbb
xor
sub
lret
lods
adc
cltd
add
lods
aam
pop
flds
imull
cmpsb
imull
ret
outsl
and
rcl
cmp
out
jbe
repz
aam
psubusw
aaa
push
sbb
imul
xchg
sbb
xor
jmp
ljmp
pusha
cmpxchg
dec
cmp
and
enter
cmp
push
idivl
mov
mov
test
xchg
fucom
addr16
imulb
aad
fcoms
adc
dec
mov
jo
xor
stos
jl
pop
push
test
aad
jecxz
sub
in
pop
orb
shrl
sbb
stc
jmp
mov
lds
sub
fisttps
pop
orb
ss
xchg
fwait
mov
aad
pop
push
or
and
mov
insl
ss
fisubl
dec
jl
outsb
sbb
xchg
scas
in
jge
sahf
std
or
and
pop
inc
loop
das
bound
mov
cmp
adc
or
mov
sub
sbb
in
xlat
popf
dec
sbb
pop
lret
movsl
jne
shl
jae
mov
cmp
jno
and
push
lahf
imul
inc
testb
and
mov
cltd
sahf
lea
sahf
and
insl
and
push
xchg
in
aaa
mov
lea
daa
xchg
push
inc
and
ja
call
enter
sbb
mov
repnz
enter
lock
adcl
mov
cmp
test
or
mov
or
jg
cmp
mov
jns
cmc
pop
rclb
add
push
inc
movb
fidivrs
push
dec
pop
data16
jne
add
inc
movsb
and
jge
pop
outsb
xor
xchg
gs
and
stc
loopne
movsl
in
in
fcomps
inc
adc
mov
cmpsl
insl
pop
mov
test
pop
dec
push
pop
and
lcall
shll
xchg
jbe
or
aad
js
in
fprem1
mov
out
movsl
cmp
fnstcw
decb
dec
hlt
cmp
or
fwait
xor
out
cmpsb
dec
xlat
and
cs
shll
lret
xor
jmp
sbb
cmp
clc
lea
xor
aas
inc
aad
fsub
adc
outsl
dec
cwtl
mov
jns
mov
cwtl
or
or
stc
push
jmp
xchg
cmp
push
sub
cmc
loop
mov
fbld
and
outsl
cmpsb
or
add
loope
xor
cmpps
inc
popa
loope
sbb
cmp
inc
jp
mov
hlt
add
mov
repnz
jnp
mov
add
pushl
inc
fidivs
mov
dec
mov
mov
jnp
aaa
fwait
out
cmc
cmp
adc
or
pushf
mov
iret
add
ss
sarl
inc
jl
enter
repnz
scas
sahf
adc
insb
cmp
xchg
ja
arpl
icebp
aad
stc
sbb
mov
sbb
int
mov
pop
popa
pop
ljmp
fdecstp
cmp
push
int
hlt
shr
inc
out
sub
adc
aas
inc
mov
cmpsl
test
out
push
sbb
push
ficoml
lods
aas
mov
je
fisubrs
jge
mov
stc
pop
arpl
ljmp
sbb
repnz
lahf
fcomps
nop
into
in
cltd
icebp
pop
jp
out
mov
ficoml
es
rorl
mov
xchg
jb
xor
out
arpl
nop
out
roll
es
test
ljmp
jmp
pop
sbb
aaa
dec
jo
imul
fistpl
jno
fidivs
cmpsl
data16
jo
cld
add
stos
mov
std
cwtl
jnp
xchg
std
pop
xor
sub
arpl
repz
push
push
push
xchg
int3
iret
inc
jae
in
adc
pusha
fstpt
inc
add
pop
insb
cmp
shll
mov
ja
lods
outsb
cld
cli
leave
jge
sub
ja
popf
loop
add
lea
in
stc
es
inc
fiadds
pop
shll
leave
cmp
jp
lret
iret
cltd
sbb
and
rorb
mov
sbb
pop
stc
loope
out
mov
xchg
jge
or
push
ljmp
inc
inc
daa
or
test
scas
fsub
and
iret
jnp
outsb
cmp
sub
ds
fistpll
xchg
cld
sub
or
inc
pop
mov
xchg
add
mov
nop
popa
imul
shlb
sahf
mov
mov
dec
xchg
std
daa
out
dec
xor
add
mov
in
loopne
ja
adc
ret
sub
int3
jb
mov
mov
aam
leave
push
inc
add
aam
pop
pop
pusha
dec
rorl
cmp
adc
ja
xchg
xor
inc
enter
add
fisubrl
cmp
pop
mov
push
icebp
cmpsl
lret
mov
sbb
lods
scas
into
test
xorl
arpl
pop
jmp
lock
adc
xchg
inc
pushf
mov
cltd
jbe
mov
jbe
dec
cltd
shll
in
sbbl
add
shr
sbb
lret
test
and
lret
lar
shll
fisttpll
pop
testb
icebp
mov
sti
jecxz
push
and
dec
add
fcmovb
mov
adc
pushf
icebp
imul
jae
lahf
adc
or
call
gs
xchg
mov
push
xchg
add
js
pushf
dec
mov
add
sub
sub
sarl
mov
mov
mov
nop
or
add
popa
aaa
insl
stos
daa
cmc
icebp
jg
ljmp
mov
pop
ja
inc
and
cmpsl
mov
dec
sub
stos
xchg
or
cmpsb
mov
add
dec
cmp
mov
dec
out
cmp
rcrl
xor
bound
mov
je
pop
dec
pop
outsl
cmp
jle
jo
mov
lahf
sub
and
call
movsb
cmp
aas
pop
add
lds
and
cmp
inc
sub
mov
lcall
test
orl
pop
sbb
lea
pop
mov
das
and
adc
fwait
and
cs
mov
dec
aaa
test
daa
dec
imul
fcompl
ja
xchg
adc
ss
mov
cmc
roll
dec
cmpsb
mov
and
sahf
cmp
aad
in
rcll
or
pop
cli
jmp
lcall
daa
xor
pop
dec
ja
into
push
jmp
pop
push
mov
ret
cwtl
shl
xor
gs
pop
mov
pop
xor
popl
or
out
push
mov
gs
xchg
mov
xor
and
addr16
add
lods
lret
dec
ss
mov
and
lds
stos
pop
lock
leave
test
jl
cli
ja
aas
sub
cmpsb
mov
sub
inc
call
and
xor
es
fistpll
out
jne
inc
outsb
inc
test
jge
xlat
adc
aas
sti
dec
roll
or
aaa
inc
idivb
lret
pop
inc
adc
mov
inc
addr16
jg
cmpsl
mov
scas
jmp
pusha
aam
int
cmp
cmc
or
lods
loopne
and
jno
cld
aad
jp
add
jg
mov
int
xor
fnstsw
addl
and
lock
jp
cmc
jle
in
jg
mov
into
cmp
xchg
dec
pushf
push
xor
jno
push
dec
jecxz
int
mov
mov
mov
pop
jns
or
adc
movsb
call
je
xchg
iret
ret
test
in
pop
pop
push
imul
outsb
insb
leave
outsb
jbe
loop
out
loop
pop
out
fistpll
cmp
jne
push
loopne
cmp
mov
insl
aam
add
insb
xchg
cmp
cmp
or
xchg
xchg
mov
sub
leave
adc
cmc
cmp
loop
mov
into
ffree
xchg
ret
jecxz
lea
dec
rcll
dec
xlat
lock
cltd
dec
ja
adc
push
insb
add
jg
jae
or
cmp
sbb
lea
inc
lods
insl
ds
imul
xor
lahf
or
mov
add
adc
jg
dec
imul
mov
jno
mov
ret
mov
ja
jl
sub
dec
adc
mov
fmul
ficoml
std
mov
add
or
mov
mov
mov
int
fstpl
cltd
mov
dec
adc
sub
or
jae
sub
dec
test
mov
push
and
lahf
in
stos
push
rcrb
xchg
mov
add
cmp
inc
call
jns
push
int3
sti
sarb
loop
sbb
aas
sub
rolb
lret
mov
xor
inc
fsubrl
out
push
cltd
fdivs
cmpsb
pop
or
sub
es
mov
xchg
out
ljmp
xchg
mov
sub
xlat
jbe
out
xor
mov
and
push
inc
das
imul
mov
test
fnstenv
fcomps
jne
movsl
adcb
jae
shlb
mov
hlt
mov
mov
mov
pop
loopne
popa
mov
scas
jecxz
mov
test
jae
hlt
loope
mov
neg
repz
or
mov
xchg
icebp
lret
mov
jecxz
adc
rorl
cwtl
dec
jns
outsl
xchg
in
fldt
mov
mov
push
popf
mov
push
add
and
test
sbbb
movsl
adc
daa
sti
xor
cmp
in
sub
inc
sahf
dec
sahf
mov
test
jo
popf
add
jl
mov
stos
inc
cmp
mov
test
aam
inc
pop
mov
call
out
loope
xchg
test
test
lcall
les
loopne
lds
mov
dec
adc
inc
fdivrs
xchg
xorl
lods
bound
and
or
fcmovbe
loopne
jnp,pn
xchg
pop
adc
hlt
xchg
push
aas
xor
push
and
inc
fwait
addb
sti
xchg
into
cs
rcrb
and
rcr
cmp
in
and
push
pop
mov
mov
in
in
xorb
in
mov
or
das
cmpsl
xchg
cli
mov
loop
jp
outsb
sets
mov
xchg
aas
jle
les
cltd
movsl
or
insl
aam
cmp
dec
fcompl
imul
les
jl
mov
add
sbb
popf
fisubl
test
fcmovne
mov
jge
ds
loope
mov
popf
pop
test
mov
mov
daa
jmp
sbb
aad
mov
dec
mov
push
inc
inc
iret
xorl
outsl
mov
pop
sub
lret
movsl
out
lahf
in
out
xor
jnp
jl
ss
mov
and
jno
daa
cmp
stos
xor
test
xchg
mov
and
mov
sub
pusha
int3
out
rorb
jnp
sbb
pop
mov
push
aaa
les
pop
cmpsb
fiaddl
filds
insl
cld
jg
jo
push
imul
insl
mov
xchg
adc
rol
test
aas
testb
lock
pop
push
or
mov
jo
xor
mov
mov
loope
out
jne
mov
outsl
loop
sahf
xlat
call
mov
scas
push
xchg
or
pop
dec
hlt
pop
dec
scas
inc
je
cwtl
pop
cmp
push
mov
cmp
mov
xor
adc
sbb
fiaddl
mov
xchg
insb
or
inc
push
xor
mov
cmp
mov
addl
push
xchg
and
dec
std
popa
insb
fsubrl
xor
mov
jbe
ret
sub
xor
ficoml
cli
out
enter
sub
test
test
adc
adc
jg
xchg
adc
mov
mov
mov
push
xchg
std
test
sbb
popl
int
clc
adc
xor
push
or
dec
dec
jnp
and
xlat
push
insb
xor
idivl
adc
fwait
mov
aaa
cmp
stos
lds
insb
test
in
xor
push
icebp
test
std
jno
imul
ds
push
pop
decl
dec
cmp
data16
into
arpl
dec
dec
xor
popf
js
bound
add
xor
push
test
and
lret
add
dec
add
push
out
xchg
mov
add
xlat
mov
scas
fsubs
test
pop
jae
popa
cs
testb
stos
adc
pop
cmp
je
ss
sahf
je
fpatan
xchg
ss
mov
cmc
in
add
sbb
and
mov
mov
dec
inc
and
inc
movsb
and
roll
jge
xchg
dec
std
mov
xchg
xchg
in
mov
mov
ja
cmpsb
mov
xchg
pop
jge
sub
scas
mov
pop
fcmovu
rcll
inc
mov
outsl
cmp
mov
ss
jo
adc
loope
pop
call
sbb
inc
jne
jge
orb
add
xchg
push
lret
inc
orb
loopne
fwait
xchg
mov
mov
pop
jmp
je
out
lds
inc
xchg
shlb
pop
sahf
sub
rorb
pop
shll
add
sub
lahf
adc
mov
in
fldt
push
pop
imul
lahf
xor
pop
sbbl
add
rcl
fcoms
mov
cmpsl
inc
enter
adc
out
out
dec
std
adc
inc
insb
mov
jne
and
insb
inc
cmp
adc
and
idivl
fidivrs
test
cmp
out
sub
adc
mov
lock
int
xchg
in
push
and
inc
lds
mov
mov
icebp
xchg
and
dec
sub
sub
aaa
js
ljmp
xchg
inc
cmpsb
das
test
lahf
jle
cli
sub
push
pop
shrl
ffreep
and
pop
test
cs
sbb
xor
sbbb
loop
jbe
popf
jne
push
jle
adc
xchg
in
pop
jbe
sbb
mov
in
pushf
out
popf
cwtl
adc
icebp
insb
xor
call
push
call
sub
jle
pop
ljmp
test
cmp
or
add
out
js
push
dec
out
outsl
xchg
fidivrl
push
jge
mov
sti
mov
outsb
sbb
cmp
mov
jbe
in
mov
ror
xchg
cmp
out
inc
xchg
sub
pop
into
lods
dec
int
jecxz
push
lods
ret
enter
push
cmpsb
jmp
mov
mov
jne
jno
nop
or
fucomi
daa
sbb
fnstenv
xor
test
int3
mov
sbb
dec
jae
and
pop
pusha
das
sbb
adc
and
jne
push
mov
jnp
stos
cmp
sub
imul
aas
push
fcoml
dec
lret
aaa
out
daa
rol
cmpl
mov
les
pop
cli
mov
in
in
xchg
clc
pop
cmp
mov
rcrb
jbe
pop
ja
insb
mov
add
ja
test
and
aad
mov
mov
xchg
int3
cmp
leave
xor
adc
lds
pop
mov
rsqrtps
xlat
or
les
fnsave
imul
sahf
cmp
dec
insl
add
jbe
jmp
jae
mov
and
aaa
dec
stos
sub
or
adc
pop
lods
jno
jg
jg
scas
jmp
out
sbb
jo
mov
decb
js
pusha
mov
sahf
pop
pop
fists
popf
hlt
mov
push
icebp
dec
mov
dec
out
dec
std
mov
mov
jle
sub
insb
fldt
adc
out
dec
mov
jb
fildl
loopne
leave
fs
ja
shl
adc
mov
xchg
push
inc
sbb
fs
dec
adc
sub
push
xor
ficompl
aas
push
adc
push
xchg
add
lret
mov
cmpsl
data16
dec
out
mov
rcrb
sbb
pushf
inc
aaa
mov
cs
xchg
faddp
sahf
xor
mov
and
pop
out
sub
mov
jecxz
ja
push
and
sbb
add
dec
mov
dec
pop
outsl
mov
xlat
pop
and
cs
in
and
jo
cmpsl
push
jo
test
adc
je
jo
in
aaa
pop
inc
test
adc
dec
sub
ljmp
test
fwait
jno
cmp
jle
or
loopne
jg
pop
int
daa
mov
shlb
iret
pop
xor
je
push
lods
test
push
int
addr16
fwait
jno
push
fnstenv
movsb
fldcw
popa
in
or
push
inc
or
movsl
mov
jne
adc
jne
and
cwtl
in
popf
dec
mov
ret
int3
sub
test
dec
inc
mov
pop
xchg
mov
jmp
jno
mov
push
pop
shl
test
adc
mov
push
divl
fdiv
sub
leave
push
arpl
lcall
in
or
mov
or
repz
hlt
in
imul
lret
frndint
pushf
aam
je
xchg
sub
jne
cmc
les
popf
push
cs
test
lods
inc
fidivl
inc
insl
inc
cltd
mov
out
mov
xor
loope
lock
pop
push
sarb
int
negl
into
leave
sub
fistpll
je
in
into
sbb
push
jns
dec
repnz
cmp
ficoms
cmc
imul
inc
push
add
dec
mov
push
jno
sbb
rcrb
add
mov
in
pusha
mov
cmp
xor
xchg
xchg
jle
mov
cmp
xor
pop
lds
and
xor
ss
pop
cmpsl
daa
fisttpl
fdivr
lahf
filds
es
int3
sbb
pop
cmpsb
pop
push
push
cmp
test
push
inc
adc
push
mov
push
bound
inc
cmpl
shll
xor
sbb
mov
fstpt
lret
sbb
sub
movsb
addr16
shrl
dec
cmp
push
mov
mov
push
cmp
mov
sub
mov
cltd
inc
das
out
inc
loopne
movsl
inc
aaa
push
sub
xor
ss
stos
fsubrl
or
xor
mov
push
in
rcrb
and
loop
sub
cmpsb
cmc
ja
jae
adc
lds
lds
add
adc
mov
fnstenv
test
sub
cmpsb
and
pop
push
and
ss
lahf
orl
dec
pop
jp
sti
and
movsl
mov
outsb
rclb
xchg
adc
xor
adc
lahf
pushf
sub
ja
int3
fwait
movsb
addb
jecxz
popf
xchg
shl
std
push
jle
jp
and
xchg
sti
fadds
rcrl
or
mov
jbe
sahf
dec
mov
push
adc
jnp
sbb
fldenv
daa
jns
adc
push
sbb
outsb
mov
bound
pop
arpl
xchg
add
mov
daa
imul
xchg
sbb
mov
out
and
pushf
jg
shlb
or
xor
inc
stos
adc
aad
or
or
in
test
in
xor
in
push
fiaddl
mov
ret
addr16
dec
jl
mov
cmp
pusha
sarb
or
xor
jecxz
cwtl
shll
dec
test
sbb
popa
push
xchg
pushf
adc
mov
ljmp
push
push
adc
fs
cld
in
outsl
loope
push
popf
mov
data16
popf
stos
jge
jb
cli
push
andl
test
xchg
mov
and
cs
and
xor
fiadds
mov
pushf
xchg
seta
inc
das
mov
das
cmp
push
sbb
cli
pop
or
imul
pop
mov
rcll
dec
mov
movsb
xor
in
iret
popf
jl
mov
dec
in
shlb
cld
mov
xor
je
lret
leave
and
xchg
dec
fsubrl
jo
mov
add
mov
in
jl
test
movl
std
stos
dec
icebp
xor
mov
in
in
pop
push
ss
in
cmp
xor
sbb
adc
nop
dec
dec
andl
mov
jb
cmp
shrb
sub
push
fstp
in
lea
xchg
inc
out
cmp
ljmp
jecxz
mov
sahf
aaa
arpl
or
xor
aaa
cmp
es
sbb
pop
les
xor
xor
and
adc
add
or
cmpsl
jno
pop
fisubrl
in
cli
mov
out
stc
sahf
dec
hlt
adc
xlat
std
xchg
mov
mov
and
insl
sbb
dec
outsl
ret
and
out
mov
dec
pushf
outsb
lock
pop
aam
shrl
les
mov
xor
pop
repnz
mov
pop
hlt
mov
cmp
int3
push
fwait
dec
in
cmpb
and
jne
sub
push
out
daa
inc
int
insb
fcom
sub
lods
adc
out
jle
push
mov
pop
cmp
xchg
xchg
popa
repz
push
negl
call
pusha
cmp
pop
cwtl
pop
add
loope
test
cld
inc
sub
pop
in
xor
mov
dec
xchg
aas
fcomp
or
mov
mov
fdivr
incb
add
push
add
stos
inc
arpl
mov
mov
nop
jne
mov
xchg
cmpl
sub
sub
dec
or
cwtl
and
xchg
sbb
sti
aas
pop
fstpt
addr16
fs
in
jle
imul
dec
xor
outsl
and
pushf
test
cmc
into
dec
cli
mov
call
cwtl
mov
jne
icebp
movsw
cmp
repnz
sub
cwtl
outsb
xchg
cld
addr16
popa
imul
call
and
pop
ljmp
sbb
push
test
or
jne
sbb
in
jns
and
ja
addr16
gs
push
arpl
cmpsl
jl
jnp
clc
pop
xor
inc
je
lahf
fists
in
jno
sub
sbb
in
xor
cmp
lret
fmuls
ja
push
and
sub
popa
pop
inc
lret
ljmp
or
shrl
pop
mov
cmp
pop
rcrl
inc
or
jmp
int3
jmp
cmpsl
int
dec
dec
pop
and
push
or
or
inc
add
sbb
cmp
mov
adc
ss
pop
lock
pop
sub
bound
imul
or
cs
push
and
inc
ss
push
inc
jmp
rcl
mov
inc
pop
inc
mov
test
jns
ds
xchg
leave
push
lahf
and
xchg
pop
sahf
ret
ljmp
jne
jne
push
lcall
jecxz
es
xor
mov
leave
adc
cld
shll
cmpsb
mov
inc
push
xchg
mov
imull
je
ss
aas
sub
divb
add
jo
leave
xchg
cmp
sub
arpl
rcrb
mov
adc
or
push
scas
push
repnz
out
cmp
and
fcomi
push
das
fcompl
notl
das
cmc
mov
fidivrl
push
int3
and
lds
xchg
push
lret
or
ljmp
xchg
mov
jg
es
out
jg
bound
xor
idiv
and
int3
insl
aad
pop
mov
aaa
cs
leave
jecxz
adc
loop
jge
imul
xchg
cmc
loope
sub
sahf
pop
loop
popf
rcr
test
lret
pop
arpl
mov
mov
dec
ret
test
out
fdivrp
in
adc
popf
sti
cld
fdivs
lret
das
cltd
cmc
call
clc
movsb
xchg
jg
jle
xor
aaa
mov
xor
rcrb
xchg
adc
add
jno
xorb
mov
mov
sbb
fnstsw
outsl
fdivs
cmp
fs
sbb
or
jns
popa
xchg
jo
adc
loope
sbb
cltd
fwait
shrb
mov
mulb
lretw
mov
push
enter
xchg
push
mov
inc
or
fidivrs
les
pop
sub
dec
inc
xchg
mov
or
xchg
and
in
idivb
pop
daa
xlat
mov
jnp
add
add
and
cmpsb
jg
movsl
xor
or
dec
test
and
pusha
xor
rcr
cmp
lods
mov
push
outsl
dec
inc
dec
or
push
cmpsb
es
xchg
dec
jecxz
int3
dec
sarl
fsts
cs
cmp
or
inc
in
push
sahf
out
addr16
lds
data16
adc
jo
push
adcl
xchg
mov
push
test
dec
mov
or
pop
fldenv
adc
jnp
pop
enter
or
and
inc
jns
fnstsw
push
cmpsl
fwait
int3
addr16
nop
testl
sub
fistpl
inc
dec
aas
std
jae
inc
mov
push
jp
push
test
cmp
push
leave
rcrb
xor
mov
dec
cld
pop
fld
mov
lods
in
jns
dec
sub
xchg
stos
ss
je
mov
xchg
ja
rol
int3
mov
xor
shrb
test
jge
inc
aas
push
sbb
inc
cmp
sarl
mov
out
les
ljmp
je
cmpsl
dec
ljmp
test
xlat
pop
and
addr16
push
fsubl
push
jbe
in
adc
mov
push
jo
das
pop
adc
xor
les
sti
fldcw
das
sti
imul
inc
jo
adc
or
cmp
or
clc
test
mov
mov
pop
mov
add
dec
xor
lods
test
sbb
fwait
andb
insl
fisubrs
andb
test
repz
test
adc
es
std
mov
pop
sub
lea
push
xchg
fs
add
mov
std
aas
int3
xor
push
jmp
or
xchg
sbb
push
nop
mov
test
pop
jnp
add
aam
sar
push
mov
dec
iret
and
fbld
push
loope
and
inc
jns
xor
push
pop
out
jp
sti
pop
sahf
jmp
outsl
add
movsb
leave
aaa
movsl
inc
sbb
repz
mov
xor
add
fdivr
push
popf
cmp
lods
dec
push
push
ss
iret
push
xchg
mov
inc
hlt
pop
sahf
cltd
mov
xchg
loop
xorl
loopne
stc
inc
in
cwtl
mov
es
ss
mov
cmpb
mov
cmp
in
popf
ds
xchg
cmp
es
sar
ds
ret
and
lret
out
pop
cmp
pop
or
add
gs
or
orl
adc
popf
outsl
jecxz
mul
mov
int
mov
jg
pusha
lret
shll
lcall
dec
sbb
pop
add
lods
lea
dec
xor
aad
and
mov
pop
fmul
mov
shlb
pop
iret
movsb
pop
xchg
push
add
adc
stos
pop
clc
testb
xor
and
adc
fwait
repz
lea
sti
mov
jbe
jne
loope
cmpsl
iret
jl
xor
jmp
mov
jnp
shrb
dec
or
and
sub
xorl
lock
ficoml
daa
add
mov
les
push
test
cmp
cs
xchg
je
cmp
cltd
sbb
ljmp
out
ja
scas
xchg
sub
ret
out
jecxz
pop
sub
jno
outsl
xor
or
cmpb
out
adc
push
jge
pusha
xchg
daa
xlat
gs
push
jecxz
pop
sub
xor
or
xchg
cmc
mov
les
outsl
adc
cmp
in
in
int
outsb
mov
stos
cld
pop
or
test
push
xor
push
inc
les
mov
lods
or
push
popf
add
xchg
mov
fimull
outsl
out
movsl
xor
push
xchg
inc
mov
sahf
sub
mov
push
cmp
leave
lods
cwtl
and
dec
adc
insl
mov
faddl
cld
fimuls
cs
adc
or
fldt
add
or
and
test
pop
dec
pop
movsl
sub
xchg
aad
js
stos
roll
stos
jbe
je
test
fidivrl
mov
leave
xchg
push
and
or
dec
mov
popa
sub
call
ja
lea
stos
add
push
dec
je
inc
push
les
and
mov
enter
in
push
ds
inc
dec
insl
adc
les
rcl
jle
ds
nop
and
xchg
mov
mov
cmc
stos
std
mov
mov
outsl
push
out
mov
sub
rorl
pop
xchg
adc
sub
lea
pushf
outsl
jge
xor
sub
xor
cwtl
in
sub
inc
cmp
push
fistpl
arpl
sbb
insw
sub
mov
mov
cmpsl
mov
pop
pusha
int3
cmp
fsubr
lock
addl
subb
imul
push
scas
cmp
dec
cmp
mov
repnz
aaa
mov
es
mov
adc
mov
jmp
add
scas
mov
xchg
xchg
lahf
add
and
push
in
mov
daa
dec
mov
pop
roll
sbb
jae
pop
test
adc
mov
pop
int3
mov
push
add
into
and
stos
rcrb
sbb
movsb
and
jmp
je
cmp
out
dec
test
repnz
lea
adc
adc
xor
lret
insl
mov
mov
out
iret
jecxz
sbb
lret
inc
aaa
xchg
lret
lds
jae
leave
jnp
jo
mov
ja
push
jle
xchg
enter
sbb
stc
mov
push
lods
les
ja
cmp
sub
push
push
subl
or
roll
into
xor
add
push
test
xchg
cmpsl
sub
mov
xchg
inc
cwtl
sbb
mov
bound
mov
aaa
add
inc
sarb
icebp
sub
mov
leave
dec
scas
xchg
push
out
push
inc
test
fadds
dec
call
cltd
adc
xor
sbb
pushf
sti
rclb
ss
jle
inc
fdivrl
mov
mov
dec
cwtl
cmp
pusha
repz
cmp
inc
dec
and
jns
lret
pop
loop
sub
mov
cwtl
sbb
and
cmc
les
or
xchg
clc
pop
pop
sbb
shll
mov
movsb
sbb
cmp
mov
push
adc
push
cmpsb
cmp
ficoms
fwait
or
lret
xchg
repz
or
mov
mov
mov
jns
scas
mov
push
test
es
adc
mov
sub
in
and
cmp
insl
daa
cmp
cmp
pop
pop
xchg
sub
cmovne
shlb
jbe
enter
outsl
xchg
jmp
add
in
aas
lods
data16
xor
clc
jmp
adc
inc
test
into
ds
dec
xor
push
shrl
cld
inc
sbb
mov
cli
nop
out
popa
cmp
outsl
lahf
mov
rol
inc
cs
cmp
cmpb
scas
dec
cmp
mov
and
adc
mov
testb
dec
adc
jb
inc
lret
mov
fildl
aad
jb
rcrl
or
inc
sbb
imul
jmp
pop
icebp
push
loopne
inc
dec
in
dec
add
aaa
jbe
push
mov
in
das
roll
adc
test
pop
pop
int3
stc
xor
jns
push
aad
or
imul
adc
lret
xchg
xchg
icebp
xor
popf
aam
mov
cwtl
movsl
add
scas
cmpsl
and
ret
adc
jns
mov
jl
jo
xchg
outsb
fldt
push
jmp
sbb
jge
xchg
mov
mov
inc
jno
xorl
and
adc
repz
js
inc
mov
mov
mov
xchg
sbb
test
add
out
sti
mov
lea
pop
scas
jl
sbb
or
cmp
mov
mov
push
xor
jo
scas
jle
dec
cmp
xlat
add
jecxz
xchg
lods
fnstsw
pusha
xchg
dec
push
int
addl
pushf
in
rcrb
jbe
jl
or
inc
je
push
les
push
jp
in
call
sub
rorb
aaa
scas
pusha
jp
dec
aaa
testb
xor
push
mov
cltd
adc
aaa
scas
mov
daa
pop
rorb
and
ja
divl
sub
cmp
mov
fsubp
jno
mov
das
lods
and
jae
cmp
mov
andb
cmp
fmull
mov
cmp
ja
cmp
daa
fsincos
leave
lret
jae
js
xlat
data16
inc
xchg
andl
test
mov
sti
divb
mov
mov
or
out
orb
pop
call
sub
pop
iret
push
push
jp
mov
loope
push
movsl
adc
mov
sti
mov
int
mov
jae
lahf
dec
mov
pop
adc
repz
and
dec
ret
pop
inc
or
shrb
xchg
sbb
lock
in
push
sbb
in
sbb
movsl
sbb
mov
sub
jno
adc
into
jbe
jno
clc
mov
imul
xchg
inc
imul
and
and
cmp
neg
mov
jnp
mov
movsb
gs
arpl
mov
das
lahf
sbb
pop
dec
push
lock
lret
and
cmpsl
arpl
cwtl
sbb
adc
int3
jle
jbe
pop
enter
xor
xor
sti
push
fistpl
jl
inc
or
in
lahf
jecxz
dec
cmp
scas
mov
xchg
push
xor
or
shlb
push
mov
dec
mov
outsl
sbb
xor
pop
loopne
lea
sahf
test
addr16
cli
mov
mov
ljmp
movsb
aaa
sub
and
mov
loope
stos
sahf
mov
lea
push
sbb
mov
mov
jbe
mov
scas
xor
lcall
dec
lahf
sbb
inc
xchg
fmul
dec
push
or
add
in
imul
into
mov
push
in
sub
sub
add
adc
cmpl
popf
mov
lahf
stc
mov
sti
psubsb
or
gs
in
aad
repz
nop
pusha
insb
cmp
pop
cmpsl
xchg
xchg
pop
aam
dec
and
jle
imul
lods
lock
add
sbb
push
inc
add
frstor
jns
dec
loopne
push
fwait
mov
jmp
adc
xor
and
push
stc
inc
mov
out
int
out
or
mov
daa
mov
fisubrs
andl
dec
test
mov
push
fcmovnbe
xchg
xor
mov
mov
inc
lahf
pop
mov
pop
js
mov
add
cli
dec
dec
fcomi
jnp
mov
leave
xchg
es
imul
in
addr16
mov
adc
les
push
popf
in
push
mov
xchg
mov
cmp
inc
dec
fwait
std
nop
and
mov
cli
insb
pusha
mov
aas
sbb
add
iret
mov
cmp
mov
int3
add
mov
push
in
jle
loope
jne
push
or
push
dec
mov
xchg
shll
mov
clc
lret
leave
loop
dec
sub
mov
inc
inc
pop
and
aas
push
pop
pushf
cmp
cmp
and
xor
cmpsb
not
xor
sti
inc
pop
push
xor
inc
stos
sahf
push
sbb
push
mov
sub
nop
lods
out
push
mov
movsb
test
out
fcom
jno
mov
lret
add
stos
jge
call
xchg
cmc
cld
fcos
jmp
lods
dec
push
sub
fcmovu
mov
cmp
xchg
mov
test
push
lret
sahf
xchg
bound
jmp
mov
cmp
rcrl
sarb
inc
pop
arpl
sbb
xchg
pop
or
push
call
dec
cli
sub
aad
jle
inc
arpl
mov
jmp
addr16
in
push
movsb
sahf
mov
jae
mov
scas
lret
int3
test
arpl
xorps
imul
aaa
je
push
cmp
mov
ror
es
cmpsb
and
in
cmpsb
mov
xchg
jle
cmc
cmc
sub
fcmovne
xor
inc
pop
out
jo
xor
je
not
cmc
xor
sbb
push
dec
push
xchg
repz
mov
test
lret
movntps
mov
filds
pushf
mov
cmp
loope
push
add
lret
nop
sahf
dec
xchg
dec
fdivrl
icebp
or
add
aaa
sub
out
repnz
mov
sbb
xor
inc
ss
data16
sarl
jno
fisttpll
scas
lds
lock
push
dec
dec
scas
or
lret
xlat
push
sbb
push
fbld
jno
je
daa
lret
popa
jg
mov
mov
orl
pop
push
jae
outsb
dec
stc
jnp
scas
movsl
inc
test
in
xor
subb
ds
mov
cmpsb
cwtl
imul
sbb
sbb
fldenv
fnstenv
mov
push
dec
cmpl
adc
xchg
mov
pop
test
daa
dec
sarb
data16
and
mov
dec
mov
mov
jns
mov
push
jp
repz
push
and
push
push
daa
out
lock
dec
lods
sub
icebp
ret
pusha
lods
add
repz
lcall
dec
movsb
enter
pop
out
fsubl
stc
test
adc
cmp
inc
in
test
mov
popa
add
lret
and
test
fsubs
jae
jle
mov
cmc
pushf
adc
mov
mov
mov
daa
push
pop
addr16
movsl
out
jge
mov
cli
xor
and
adc
adc
imul
add
mov
stos
shld
ds
repz
fld
push
clc
jmp
shl
pop
pop
jno
push
push
inc
clc
add
sbbl
fsubp
pushl
insl
and
xor
adc
push
pop
movsb
xchg
or
imul
push
adc
leave
jmp
mov
jle
lahf
push
mov
cmp
dec
cld
inc
test
imul
jno
in
and
mov
and
pop
stc
adc
and
mov
push
stc
sbb
sub
mov
fldcw
int3
hlt
sbb
pop
xchg
nop
ret
movsl
jle,pt
arpl
pop
sti
mov
loopne
mov
loope
sarb
in
mov
fnsave
out
imul
shl
in
mulb
cmovne
add
inc
sahf
xchg
or
inc
test
mov
stc
aas
or
adcl
dec
push
cmp
cmp
rcrl
int3
mov
push
dec
push
je
data16
sbb
mov
or
test
idivb
and
out
jecxz
xchg
xor
bound
xchg
shll
xor
orl
push
test
stc
ret
iret
mov
add
xchg
adc
dec
je
fcomi
pop
clc
mov
imul
push
push
call
test
inc
mov
add
add
xchg
add
xchg
xchg
inc
mov
lret
lods
js
pop
or
mov
xchg
std
xchg
imul
inc
sbb
sbb
xchg
or
inc
sbb
sub
jbe
xor
das
mov
clc
mov
lods
call
jo
shrb
or
fcmovnb
sub
lret
stos
lds
mulb
xor
xor
adc
pop
cmc
scas
mov
xchg
xchg
arpl
loop
jae
fnstenv
adcb
push
mov
lret
sub
sar
jg
sbb
push
mov
push
cmp
jno
push
pusha
add
test
ret
into
jne
ret
or
bound
mov
jb
and
data16
jle
sub
icebp
les
xchg
xlat
call
mov
in
dec
mulb
mov
imul
nop
cmp
and
pop
mov
jb
pop
cld
push
cld
enter
add
jnp
ds
mov
push
enter
daa
lods
xchg
and
sub
enter
mov
cmpsb
shlb
scas
nop
adc
inc
ret
stc
data16
jb
mov
scas
leave
dec
std
xchg
pop
sbb
xorl
dec
div
cmp
jmp
imul
mov
mov
pop
bound
scas
lods
data16
or
push
add
push
jmp
xor
inc
push
xor
out
loopne
push
jbe
popa
inc
cmpb
xchg
adc
push
adc
in
mov
addb
mov
xor
adc
xor
ret
clc
and
adcl
lods
pop
sub
daa
or
test
sbb
cmp
cmpsl
jp
push
lds
inc
add
sbb
cltd
adc
xchg
addb
jo
test
ja
loopne
add
add
sahf
mov
jmp
insb
fcoms
sti
mov
insl
fadds
shlb
mov
test
adc
jno
cmp
jmp
xlat
and
push
scas
pusha
nop
and
mov
out
test
fimull
lods
dec
lcall
repnz
loopne
test
outsb
sbbb
sbb
xor
adc
inc
hlt
push
test
int3
fdivr
cmp
mov
push
sahf
inc
xchg
xchg
cmp
xchg
test
sahf
add
mov
xor
mov
sbb
fsubr
fcomi
scas
dec
and
sub
clc
push
stos
lea
insl
idiv
and
inc
push
pusha
inc
repnz
orb
xor
jb
gs
in
dec
inc
mov
cmp
push
push
sbb
add
in
mov
insb
push
adc
or
dec
push
inc
xchg
loope
cmp
rorl
cli
imul
inc
mov
pop
xchg
mov
in
jecxz
fnsave
ret
sub
data16
mov
adc
adcb
push
xor
loope
dec
push
push
outsl
cmp
jae
inc
test
cmp
andl
pop
jp
lods
inc
aam
jae
add
icebp
mov
xchg
cwtl
xor
push
sub
outsb
mov
mov
and
cmc
fidivs
into
mov
int3
movsb
cmpsl
fdiv
outsb
mov
sbb
in
pop
negl
negb
inc
or
sub
out
int
cmp
pop
push
push
jg
push
test
lods
or
dec
sub
imul
push
push
das
cwtl
mov
pop
inc
xchg
or
ljmp
pusha
add
inc
lods
push
jle
and
push
pop
cmp
loopne
pushf
cmp
pop
mov
jmp
rcll
sarl
into
leave
cli
icebp
add
xor
aas
push
cmp
or
mov
mov
jo
jae
and
push
int
and
andl
sbbl
pushf
pusha
lcall
jmp
jge
popf
hlt
xchg
daa
xchg
xor
xchg
pop
stc
inc
mov
dec
mov
add
cmp
sub
pop
add
xchg
cmpsb
in
mov
pop
mov
stc
imul
std
mov
nop
add
mov
xchg
pop
and
jo
mov
mov
lret
push
jbe
mov
lea
notl
or
jmp
sub
inc
subb
outsb
and
sbb
jne
push
mov
stos
push
sub
lods
inc
jmp
mov
adc
jmp
xchg
insl
arpl
sbb
and
inc
es
outsb
and
je
or
insl
adc
push
loopne
push
iret
aas
xchg
jae
mov
insb
push
jns
fcomi
inc
mov
rcr
cmpsl
push
mov
sbb
adc
loopne
sub
mov
ds
data16
mov
mov
dec
and
sbb
in
or
push
mov
push
and
push
lods
les
mov
ficoml
mov
and
pop
sub
gs
aaa
push
inc
fdivrl
mov
or
sub
loope
lock
xchg
mov
mov
outsl
mov
adc
out
hlt
and
hlt
add
dec
xor
repnz
aaa
lret
js
cmpsb
gs
loope
push
and
inc
xchg
ret
inc
jne
lods
jg
fstpl
test
int
xor
pop
repnz
or
js
bound
in
push
icebp
sbb
aam
test
cmp
repz
dec
pusha
push
icebp
pop
mov
push
cmc
cs
imul
xchg
sub
daa
fwait
or
mov
sbb
dec
addb
lock
mov
mov
xchg
fimull
cmp
and
mov
out
sti
mov
imul
push
int
into
add
push
cmp
mov
mull
sbb
pop
int
fwait
and
mov
dec
mov
pop
mov
imul
dec
movl
xor
cmpsl
jle
sub
out
data16
mov
imulb
jl
mov
sub
adc
sub
or
pop
sub
aam
inc
lcall
das
out
loop
mov
jmp
cmp
sub
push
inc
negl
aaa
adc
adc
inc
add
cli
pop
icebp
mov
jl
mov
cmp
mov
rcl
xor
repz
clc
movsb
inc
das
ss
and
sahf
lock
fwait
cmp
xchg
rorb
loope
mov
xor
sti
jl
int
dec
or
xor
mov
adc
inc
roll
or
orl
mov
inc
cmp
hlt
cmp
adc
push
fisttpl
cs
dec
rorl
fcoms
push
fmuls
movsl
sub
movsb
jnp
ficomps
leave
xorl
xor
mov
ficoms
test
je
ret
dec
or
sbb
dec
fstp
xor
loop
nop
push
mov
leave
xlat
mov
movsl
or
nop
movsl
jp
cmpsl
hlt
add
loop
mov
sub
dec
and
pop
fdivrl
popl
pop
mov
outsl
test
mov
mov
mov
mov
push
js
push
xchg
add
mov
sub
mov
mov
xchg
cmp
pop
int3
pop
sub
push
pushl
dec
shl
xor
data16
pop
fisttpl
out
arpl
daa
popf
aas
cltd
jbe
mov
push
or
lods
xor
cmp
mov
repnz
fimuls
dec
inc
xor
subb
inc
cmpl
adc
inc
or
call
fcoml
push
dec
and
or
ffree
sbb
orl
fld
or
leave
adc
or
mov
xchg
ret
mov
dec
push
mov
leave
and
cmp
movsb
lds
push
sahf
pusha
lret
inc
add
stos
push
mov
and
sub
mov
cli
jp
aas
cmp
adc
dec
jnp
adc
out
jle
push
lcall
xchg
fcoml
or
faddl
cmpsb
lahf
mov
psrad
es
mov
mov
dec
ret
in
xchg
inc
inc
test
jnp
adc
pop
add
int
fisubl
jnp
ret
lock
nop
jp
mov
add
test
dec
mov
fidivs
mov
int3
sub
mov
test
push
pop
or
push
xchg
push
mov
and
lcall
pop
sbb
jno
in
rclb
aam
fidivs
and
int
xor
pop
loopne
pop
jno
test
andl
pushf
ds
movsl
mov
xchg
sbb
fisttps
sbb
dec
inc
push
and
imul
aas
sbb
popf
push
icebp
mov
fstps
dec
lds
adc
inc
ret
ret
lods
and
or
lahf
push
mov
in
fnstcw
sub
loope
push
inc
sbbl
cmp
cltd
mov
leave
test
mov
jecxz
push
cmc
iret
xor
fdivrs
mov
fildl
push
mov
xor
pop
arpl
out
rcll
aad
xor
and
leave
inc
adc
dec
jne
xlat
push
sbb
ret
ljmp
hlt
push
and
stc
stc
in
mov
jae
clc
pusha
test
sbb
fcoms
or
aad
aas
mov
add
lock
arpl
or
gs
pop
jmp
lods
incb
mov
mov
lea
popa
stos
sbb
adc
xor
call
xchg
jno
or
jne
out
or
or
sbb
adc
in
in
pop
pop
sub
imul
jecxz
call
push
xor
fcmovnbe
mov
add
mov
pause
cmc
push
fcmovnb
push
scas
sbb
cmp
lds
dec
icebp
add
rcl
inc
adc
jmp
push
cli
or
cmp
push
ljmp
sbb
popa
pop
add
and
int
fsubr
cmp
dec
stos
cmpsb
cwtl
inc
int
add
int
ja
xchg
adc
je
in
mov
mov
test
cld
sub
dec
jns
jae
inc
sbb
les
push
cmp
test
adc
test
scas
jle
aam
stos
js
rcl
out
push
mov
mov
mov
aaa
les
hlt
cmp
xor
inc
fcompl
ret
enter
movsb
cmp
movsb
addr16
xchg
int3
jb
mov
jmp
cmpl
jp
jbe
lods
stos
adc
lock
test
test
ret
lea
decb
ret
lea
cmpsl
cmp
xchg
imul
xlat
rolb
mov
outsl
gs
imul
imul
cmp
push
pop
mov
inc
and
mov
popa
stos
lea
sub
xor
adc
into
pop
stc
mov
inc
add
iret
enter
nop
adc
jmp
dec
sarl
adc
lea
sub
loopne
adc
cmp
repnz
sbb
int3
xor
cmp
mov
push
mov
sub
dec
int3
fisttpl
cmp
xlat
fists
in
xchg
rcll
jae
or
popa
mov
fwait
dec
out
pop
jge
lret
dec
dec
aad
add
add
dec
cmp
ja
ja
pop
ja
mov
lock
pop
cmp
or
or
mov
in
ss
fwait
and
dec
xchg
outsl
cli
or
sahf
cmp
mov
adc
outsl
sbb
outsl
lret
mov
jno
hlt
xchg
mov
arpl
dec
xor
addr16
loopne
mov
lock
aaa
shlb
lock
adcb
imul
jp
daa
repz
ror
outsb
cwtl
jnp
and
xchg
push
idivb
test
dec
je
xchg
jp
jp
push
cmpsb
lock
cld
adc
and
sti
cmp
jge
add
cmp
or
out
inc
adc
lea
enter
and
mov
iret
pop
aad
inc
dec
arpl
xor
dec
in
in
mov
push
popf
add
mov
mov
push
stc
cli
sbb
or
xor
icebp
loope
dec
xor
ljmp
out
push
cmp
and
ja
sub
xchg
mov
lods
pop
cld
rorb
xor
or
sub
sar
out
repnz
rol
xor
int3
inc
popf
pop
ret
xchg
test
jb
add
pop
mov
shll
and
int
sarb
aam
es
rcrb
pushf
subb
adc
or
xchg
fwait
stc
sbb
rol
mov
pop
pop
mov
icebp
repz
push
mov
cltd
stc
scas
sahf
mov
inc
pop
push
data16
imul
fisubrs
jo
mov
out
cmc
push
hlt
out
sub
scas
test
xor
loope
fldcw
sti
call
inc
xchg
or
mov
in
loope
mov
pop
mov
xchg
ss
jo,pt
jecxz
imul
push
call
decl
pop
mov
lods
jg
xchg
pop
cmp
xor
sub
dec
in
xlat
inc
xor
and
mov
jmp
repz
push
rcl
and
outsb
mov
sbb
dec
adc
mov
testb
movsl
push
iret
cmp
pop
movl
xchg
lret
mov
testb
push
lret
test
cmp
inc
push
mov
pop
mov
mov
shl
cmp
push
imul
xchg
icebp
pusha
notl
dec
out
xor
aaa
hlt
popa
sbb
popa
cmpl
lret
andl
fbstp
daa
clc
test
leave
jl
pop
lea
dec
sti
and
sahf
xchg
movsl
loope
aad
icebp
mov
dec
and
add
leave
test
fnstcw
mov
mov
aam
out
pop
imul
leave
outsl
pop
sbb
movsl
rorl
lods
cwtl
jmp
jnp
xchg
xchg
jecxz
lds
inc
sub
or
sub
movsl
fsubr
push
push
push
cmp
movsb
adc
cli
call
jnp
and
inc
rcr
and
cmc
scas
mov
sub
or
adc
push
mov
addl
js
jl
mov
mov
or
push
mov
mov
sub
mov
xchg
pop
push
mov
repnz
pushf
call
shll
or
shll
pop
push
add
mov
loope
jae
std
jmp
shll
cmc
js
repnz
andl
cmp
leave
mov
js
loope
ljmp
xchg
pop
inc
cs
mov
insb
mov
out
int3
cmp
je
push
mov
fstl
lods
js
lea
es
lahf
lret
imul
lahf
or
ja
cmpsb
iret
insb
fs
pop
enter
mov
xchg
mov
sub
jae
adc
xchg
sar
fdivrl
int
jl
xor
add
into
fistl
imul
jmp
outsl
lret
out
pop
dec
jbe
xor
inc
movsb
sub
mov
jle
pop
pop
adc
jbe
push
out
mov
add
aaa
sbb
jge
cmp
sti
lret
cmpsb
stos
sub
mov
pushw
repz
mov
lods
mov
mov
adc
repnz
idivl
outsl
or
js
mov
movb
add
fisubrl
cmp
std
movsl
outsb
inc
loopne
fisubl
inc
sbb
adc
stc
int3
in
fldl
testb
mov
out
push
int3
cmp
and
jbe
frstor
call
xor
jg
out
lret
mov
mov
or
mov
sarb
pushf
and
fwait
leave
lock
fadds
pop
sub
fdivs
cmp
cmp
sub
and
mov
mov
std
cmp
mov
test
out
imul
dec
jp
mov
es
mov
push
cmp
insb
pop
push
test
repz
cs
addr16
negb
sahf
xchg
sub
jo
loopne
aam
out
cmc
or
ljmp
mov
mov
notl
in
pop
jmp
fst
insb
sub
aad
xchg
mov
ja
test
scas
mov
sarb
pop
leave
imul
fstps
cli
jge
jne
mov
inc
cmpsl
dec
sbb
cmp
shlb
and
xor
sbb
pop
fs
mov
pop
jo
sbb
add
sti
mov
sub
imul
xchg
mov
push
je
test
inc
mov
inc
repnz
sbbl
aaa
mov
adc
push
push
les
push
std
pop
push
fisttps
bound
ljmp
jnp
enter
sbb
bswap
mov
cmp
sub
in
fimuls
enter
addr16
mov
add
pushf
stos
fistl
hlt
out
mov
and
loope
pop
dec
dec
into
lea
lret
popa
jb
jo
cmpsb
or
sub
test
imul
or
adc
sub
xchg
rcr
or
mov
ljmp
pop
movntq
nop
stos
ja
pop
mov
mov
and
iret
mov
sbb
std
dec
add
cld
sbb
rcl
int3
jl
push
adc
cld
ja
and
test
out
and
movsl
test
or
ss
pusha
push
jl
xlat
pop
pop
push
icebp
icebp
mov
fs
fisubrl
js
ss
not
pop
push
adc
pop
sbb
xor
roll
sbb
adc
lret
cmp
mov
and
int3
cld
cli
xor
pop
cmpsl
repnz
cld
mov
jnp
jp
adc
mov
sub
out
out
addr16
shr
fildll
outsb
jg
jmp
psubsw
mov
cmp
cmp
sbb
ja
add
pop
daa
imul
mov
or
aas
cmp
mov
cmp
popf
sbb
or
orl
das
dec
or
loopne
pop
mov
ds
add
mov
in
clc
and
mov
emms
mov
stos
lods
push
in
add
jp
add
dec
nop
cld
pop
mov
insl
decl
push
sahf
sub
pop
mov
jle
movb
arpl
sarb
hlt
cli
sub
xchg
or
sub
and
pop
repnz
xor
cmc
mov
bound
push
arpl
cmp
adc
ret
mov
stos
xchg
inc
aam
int
mov
ja
or
sbb
fwait
sti
insb
or
std
mov
mov
sbb
daa
das
loop
popf
cmc
hlt
jmp
sub
movsb
lret
std
es
lods
adc
sub
push
inc
int
test
cmpsl
mov
into
sub
ss
test
lret
dec
inc
or
test
stc
add
pop
cs
jae
cs
cmpl
or
pushf
or
arpl
cli
pop
stos
fs
inc
out
sbb
js
pop
jb
stc
outsb
cmpsb
int3
test
mov
dec
adc
inc
jmp
icebp
jg
xchg
loope
sub
push
addr16
insl
mov
cmp
jmp
scas
stc
clc
aas
shlb
pshufw
fdivr
mov
cs
jbe
pop
pushf
push
or
or
or
push
mov
xchg
rolb
pop
cli
push
jmp
lcall
test
and
out
and
imul
es
je
ret
mov
sti
out
pop
or
pop
pop
inc
mov
aaa
ret
dec
int
inc
push
sub
cmp
pop
mov
mov
mov
sbb
mov
out
pop
into
push
sbb
imul
enter
add
in
pop
jo
imul
dec
add
pop
ja
add
aas
mov
push
repnz
addr16
sbb
sbb
fs
insl
xor
cmp
sbb
adc
cmp
test
push
xchg
imul
roll
cmp
loop
push
adc
sbb
or
inc
sub
pop
xchg
mov
mov
xchg
lock
adc
xor
cmp
lcall
push
scas
jmp
ret
lods
pop
sub
or
dec
pop
cwtl
xchg
jo
adc
inc
cmc
nop
push
clc
mov
es
lods
cld
scas
cmp
push
sub
xor
xchg
and
mov
pop
xchg
jge
mov
popa
xchg
popf
aad
mov
mov
in
fildl
mov
mov
scas
in
pusha
xchg
xor
enter
push
fbld
cmp
pop
lds
int
mov
repnz
loop
sub
sbbb
xor
sti
xchg
arpl
repz
sbb
mov
dec
cmpsb
mov
cmp
je
sbbl
scas
pop
dec
xor
jge
test
idivb
dec
push
in
jb
test
pusha
inc
mov
push
rorl
and
adc
testb
insb
mov
clc
leave
in
mov
jmp
jno
test
xchg
add
mov
dec
pushf
pusha
sti
sbb
int3
std
jp
sub
sub
adc
mov
clc
test
jmp
int
mov
adc
test
mov
nop
jae
pushf
lcall
dec
mov
or
xorb
xor
ljmp
xor
lret
push
fs
sub
out
mov
test
popa
lret
pop
xchg
fisubs
jmp
ss
pop
pop
repnz
mov
popaw
cmp
mov
cmp
sbb
out
jnp
ss
push
or
insb
mov
ja
add
scas
pop
mov
pop
fsubrl
inc
jns
in
mov
pop
pusha
cltd
jp
and
inc
or
pop
adc
xchg
mov
pop
shll
js
inc
jge
scas
mov
cs
sahf
cmp
cmp
mov
out
imul
rclb
sahf
push
pop
xchg
loopne
or
repz
xlat
daa
xchg
inc
lods
mov
outsl
insl
notb
lahf
int
mov
cmpsl
jbe
addb
pushl
xlat
cwtl
add
push
mov
inc
xor
orl
mov
sub
jl
punpckldq
jne
xor
repnz
sbb
jp
stos
push
dec
fsubrs
mov
rcl
push
xor
and
dec
xlat
repnz
lret
data16
ret
aam
jle
fnstcw
test
cltd
dec
pusha
bswap
ret
push
out
mov
mov
push
inc
jbe
or
jb
aaa
stos
dec
out
mov
and
repz
adc
add
ss
sbb
add
add
xor
xchg
lea
xchg
gs
in
fcoms
loopne
or
xorb
push
push
or
gs
daa
test
shll
scas
pop
andl
outsb
int3
ss
inc
xchg
out
sbb
mov
incb
loopne
adc
ja
jo
jmp
lea
mov
pop
imul
insl
or
pop
ret
and
dec
sbb
push
ds
mov
sub
jnp
xor
mull
dec
roll
aad
imul
xor
pop
shlb
sbb
cli
mov
xorl
lods
lcall
loope
cmc
xchg
and
std
add
inc
pop
inc
pop
inc
movl
dec
mov
cmp
int
shlb
aas
pop
fwait
mov
test
and
and
testl
fwait
lea
lcall
lods
push
ficoms
hlt
sub
cmp
and
movsl
and
test
or
cmpb
inc
fcmove
sbb
dec
inc
lahf
pop
lcall
shrb
data16
xchg
push
push
mov
or
bound
les
test
xchg
fstpt
add
inc
cltd
xor
leave
jp
psrlw
jecxz
mov
sub
cmpsb
mov
dec
pop
insb
dec
lcall
rcrb
dec
inc
push
ficoml
and
bound
iret
jl
cmpsb
fists
mov
stos
outsb
lahf
ret
inc
daa
mov
cs
test
pop
enter
cmp
hlt
cmpl
data16
inc
add
dec
mov
stos
add
or
mov
push
fildl
dec
push
xor
mov
xchg
mov
test
mov
push
es
enter
jg
test
movsb
iret
scas
fimuls
mov
cs
fcoml
jae
jo
mov
in
out
sahf
icebp
repz
dec
imul
popf
stos
xor
repnz
dec
stos
into
pop
pop
call
push
sahf
scas
push
jecxz
lahf
mov
sahf
fistps
fwait
mov
xchg
out
icebp
fldln2
lcall
jno
inc
cmp
mov
gs
cmp
mov
enter
sbb
mov
jmp
and
sub
fs
jle
and
sbb
inc
cld
mov
stos
test
mov
lds
or
das
jbe
mov
lret
pop
dec
xchg
pop
rorb
mov
aam
pop
loope
fildll
or
sbb
cmp
and
mov
inc
pop
shll
adc
loop
pop
mov
push
cmp
cltd
pop
cmpb
mov
lahf
lahf
mov
cmp
add
mov
xor
jp
sbb
and
xor
movsl
or
enter
cli
push
nop
inc
cmp
xchg
jg
xor
lods
or
lahf
inc
xor
inc
stos
rcrl
mov
movsb
bound
loope
mov
aam
sbb
loope
test
mov
add
mov
leave
addb
adc
jo
js
mov
sbb
pop
leave
xor
not
inc
pop
mov
pop
push
adc
sbb
cmp
and
xchg
movsb
jne
sub
lods
and
stc
enter
push
sub
adc
push
into
adc
repnz
adc
loope
clc
jbe
cmc
fs
cmp
push
mov
cmp
push
push
pop
cli
out
outsl
out
in
add
adc
in
mov
add
inc
icebp
cmpsl
cld
add
mov
push
jnp
dec
push
xor
or
inc
mov
mov
mov
sahf
mov
loopne
dec
push
jecxz
sub
lahf
and
nop
mov
inc
fistpl
adc
in
cmp
mov
cmpb
ds
arpl
scas
pop
in
aam
leave
mov
xchg
lea
mov
mov
push
pop
in
inc
outsl
pop
repz
xor
insl
jns
aad
popf
rcll
in
jae
sbb
inc
jle
loope
stos
sbb
shl
in
aas
mov
sub
cmp
je,pt
cli
inc
and
int3
mov
add
idiv
inc
loop
xor
cmp
sub
pop
mov
lahf
or
mov
xchg
add
sub
adcl
or
lret
iret
jb
stos
call
rcr
repnz
and
add
add
mov
or
stc
sub
fs
movsb
or
jns
jl
ret
sets
push
rorb
shrl
loop,pt
or
and
scas
and
ror
add
imul
xchg
rolb
sahf
fmuls
roll
popa
push
add
push
mov
sbb
imulb
add
mov
fsubrs
ds
push
jno
arpl
cmp
sub
jecxz
stos
je
pop
jge
mov
mov
mov
out
testl
add
iret
lcall
adcl
jle
icebp
xchg
int
pop
shr
mov
add
lds
test
movsb
js
add
dec
std
hlt
push
xor
xchg
cld
sub
pusha
inc
jg
loopne
add
adc
out
and
or
mov
pusha
loopne
xchg
pushw
cli
cwtl
out
hlt
out
xor
mov
inc
jb
cmp
popf
adc
orl
mov
mov
sub
scas
sbb
cltd
inc
icebp
stos
and
nop
lret
cmc
orl
and
fwait
push
gs
or
mov
test
dec
push
and
sbb
movsl
or
pop
loopne
cmp
ss
iret
mov
add
stos
dec
dec
imul
or
dec
xchg
xchg
subl
cltd
mull
sub
ds
adc
mov
stos
fisttpl
aam
xor
jo
jno
push
mov
pop
dec
mov
inc
adc
call
inc
mov
aad
pop
push
xor
outsb
test
inc
jge
ret
dec
out
insl
in
mov
pop
cmp
xchg
dec
lds
cmc
push
mov
in
stos
fldt
xchg
adc
xchg
xor
jmp
xchg
lahf
sbb
jge
sbb
outsl
xor
aad
cmpsl
rol
movsb
js
fst
addr16
push
xchg
mov
xor
xchg
dec
xchg
out
dec
inc
push
outsl
fdivrs
and
out
jno
fisttpll
orb
scas
and
add
sub
rcll
jnp
repz
or
and
pop
jbe
ret
lret
jecxz
add
js
fcoms
inc
inc
std
cmc
cmpsl
das
mov
sub
dec
mov
icebp
push
jecxz
imul
push
cmp
pop
in
ret
add
add
or
push
xchg
pop
cmc
pushf
dec
fwait
mov
mov
pop
in
movsl
shl
sub
push
xor
clc
cmc
adc
pop
cld
into
jae
addr16
fstps
xor
mov
pop
and
mov
inc
scas
and
inc
push
xchg
mov
sub
fucom
or
pusha
push
pop
in
arpl
dec
cmpsl
jecxz
xchg
push
shrl
imul
sub
clc
xchg
xchg
iret
cmp
push
pushl
xchg
ljmp
adc
or
lret
pop
movsl
xor
test
mov
lods
ret
push
repnz
add
imul
imul
jb
fcmovb
dec
iret
fnstsw
dec
into
sub
mov
and
or
je
dec
ljmp
sub
pusha
jg
xchg
insl
jge
stc
imul
adc
int
cmp
loopne
cwtl
sbb
inc
push
mov
sub
rclb
insb
dec
pusha
mov
jg
push
xlat
lahf
rclb
mov
push
jne
inc
sbb
fisubs
adc
xchg
cmp
mov
add
out
mov
fmuls
imul
aam
pop
push
ror
in
imul
leave
xchg
sbb
mov
mov
mov
adc
push
cmpsb
jno
sub
inc
mov
insl
and
xor
xor
inc
or
jp
in
pop
lcall
or
outsl
adc
fistps
inc
fs
xor
testl
cmp
test
mov
testb
out
jae
cmpsl
int
out
pop
xor
mov
add
jns
loopne
mov
loopne
test
xchg
pop
aam
addb
push
jecxz
nop
kortestw
in
call
mov
std
es
std
xchg
mov
pop
imul
int
xor
xchg
add
pusha
sub
addl
stc
rol
dec
jl
gs
dec
ja
xchg
pushf
or
mov
or
mov
in
std
popa
repz
pop
inc
and
mov
or
fucom
pop
xorb
mov
subl
pop
call
out
xchg
mov
stos
in
pop
adc
rorl
into
hlt
jg
cmp
jg
out
or
and
push
orb
ret
dec
adc
mov
jno
pop
pop
pop
jle
in
push
sahf
xor
lcall
and
and
imul
lcall
in
mov
pop
sub
sbb
push
lock
fisttps
mov
jno
cmp
js
shl
pop
lea
lea
add
std
sub
ret
adc
jge
scas
sub
xchg
subl
or
mov
je
int3
cmp
xlat
mov
xchg
jbe
in
pop
jp
sbb
xor
sub
push
ss
xor
mov
into
ss
mov
lret
mov
jl
lods
pop
and
cli
je
sub
jp
loopne
and
xchg
or
and
mov
in
pop
add
xchg
sbb
sub
dec
dec
ret
fdivl
push
jbe
add
insl
rol
insl
adc
int3
lret
out
xchg
sub
stos
pop
andl
leave
cmp
or
sub
mov
sahf
jecxz
mov
cmpsb
mov
mov
cwtl
cmpsb
jmp
jg
mov
mov
inc
and
add
cmp
jge
add
jb
adc
test
cld
out
call
stos
flds
pop
cmp
pop
dec
jae
loopne
scas
add
pop
mov
cmpsb
and
iret
mov
xor
lcall
sbb
mov
int3
out
mov
pop
and
jbe
scas
lds
mov
pop
inc
les
mov
push
movsl
in
ljmp
imul
jg
push
jmp
scas
pop
scas
outsl
dec
fcom
pusha
add
sub
mov
xlat
sbb
inc
and
and
lods
add
stos
mov
add
jnp
or
imul
loopne
dec
inc
cmp
das
hlt
sbb
mov
aad
pop
movsb
mov
data16
dec
test
cmp
bound
xlat
mov
daa
jo
mov
gs
sub
repnz
out
movsb
xchg
subl
test
dec
stc
xchg
sbb
sub
sahf
stos
dec
inc
and
hlt
out
aas
pop
push
rorl
mov
lds
and
jmp
push
mov
repz
call
add
aaa
sarb
popa
or
popa
inc
adc
jmp
or
add
pop
jno
and
loope
push
push
in
or
mov
mov
ret
orb
in
iret
in
gs
pusha
sbb
dec
clc
inc
hlt
or
inc
scas
mov
std
ffree
ret
ret
pop
add
fs
cmp
movsl
jle
sub
out
insb
dec
pop
pop
cmpsb
scas
out
out
insl
pop
pop
int3
adc
mov
adc
jecxz
leave
sahf
mov
xchg
fsts
inc
mov
cmpsb
inc
xchg
inc
xorl
and
mov
repnz
sbbb
nop
mov
ja
aad
add
imul
inc
sbbl
mov
cmp
cwtl
loope
cwtl
jmp
dec
incb
pop
mov
push
stos
clc
xlat
pop
lea
lock
dec
mov
mov
cld
dec
mov
movsl
push
outsl
jl
xor
dec
sub
shrb
shrl
cmc
nop
stos
push
pop
push
cmc
call
and
hlt
xor
out
inc
sbb
std
ja
lds
imul
add
fwait
mov
cwtl
and
mov
scas
cwtl
mov
xor
lret
movl
mov
jns
in
sub
in
and
sbb
xchg
or
xchg
jb
ja
sbb
scas
cmc
xor
loop
mov
pop
mov
sbbl
outsb
cmp
lret
sbb
mov
and
mov
int
loopne
add
push
loope
or
push
out
jle
cmpsb
sub
scas
mov
jnp
jnp
repnz
test
stos
mov
iret
int
je
jb
inc
add
xor
scas
pop
ret
dec
adc
sbb
aaa
xchg
dec
mov
sub
sarl
enter
jg
or
shlb
adc
into
stc
scas
jl
and
mov
push
roll
in
lock
ret
mov
dec
mov
sbb
jo
add
add
xlat
lahf
push
adc
xor
xor
and
pop
inc
push
xor
and
pop
sub
test
push
inc
bound
testl
mov
pop
shr
add
iret
repz
xchg
xor
fbld
adc
aam
hlt
mov
add
add
fmuls
dec
mov
das
xlat
rcll
xchg
in
push
mov
mov
mov
jns
lret
inc
and
or
push
je
stc
mov
jecxz
das
out
cwtl
mov
lods
xor
cmc
les
dec
xchg
sbb
adc
mov
out
je
xchg
sbb
jo
ja
jbe
xchg
cmp
pop
sbb
fstps
mov
push
daa
mov
loop
ficomps
fcmovnbe
pop
mov
aas
xor
jo
cmp
xor
inc
or
or
repnz
ficomps
add
out
outsb
loope
push
std
xor
push
fnstcw
in
mov
pop
inc
inc
xchg
add
push
mov
rclb
jo
push
movsl
jp
leave
icebp
mov
adc
sub
lret
sar
push
add
out
popa
popf
test
cmp
ss
movsl
inc
outsl
mov
jo
lea
data16
push
in
sbb
shrl
mov
popa
ljmp
das
mov
dec
sub
clc
mov
lea
jo
add
imul
lods
sahf
push
setne
in
cli
mov
ljmp
nop
mov
cs
pop
mov
dec
push
dec
or
sbb
outsb
dec
mov
xchg
pop
sub
and
pop
mov
xorl
movsl
mov
and
pop
call
cmp
bound
xchg
imul
add
push
data16
clc
stos
int
pop
stos
sub
jo
push
push
dec
or
or
daa
jecxz
adc
test
mov
dec
sbb
add
lea
ficompl
ss
ja
repz
jns
sub
add
loopne
fs
xor
iret
and
adc
shl
jns
cmp
pop
js
dec
lods
cmpsl
notb
sbb
jp
xchg
fmuls
loop
subb
dec
enter
out
mov
lock
lods
pop
add
sub
jmp
or
jg
mov
xchg
or
cmp
sahf
pop
pop
lods
pmaddwd
xchg
mov
push
fs
xchg
stos
push
pop
mov
mov
scas
mov
inc
out
int3
out
mov
call
adc
xor
adc
int
clc
sarb
add
cmp
inc
pushf
push
frstor
add
xchg
inc
pop
lcall
cwtl
mov
sbb
xlat
repz
and
add
outsl
int
sbb
mov
dec
jno
les
std
mov
mov
mov
outsb
jle
icebp
mov
rcl
xlat
sti
mov
inc
clc
negl
insb
xchg
mov
xchg
test
out
pop
pop
jmp
pop
cltd
xor
mov
aaa
inc
jge
cmp
mov
inc
mov
outsl
imul
pop
jl
cli
lcall
dec
mov
daa
stc
lret
popf
test
sbb
pop
jnp
dec
ss
sub
iret
lock
xor
fs
in
data16
add
add
inc
fs
gs
lcall
mov
sub
push
push
inc
fiadds
fildll
cmp
pop
dec
or
bound
out
push
pop
mov
out
outsb
sub
mov
insb
xchg
cmp
insb
jle
stc
shr
roll
cmpsb
adc
ds
sbb
cmp
push
push
adc
call
xor
fucom
out
out
out
nop
jbe
nop
ja
ja
addb
sbb
ja
cmpl
lock
cmpb
int3
loopne
pop
xchg
dec
sbb
adc
data16
enter
xor
out
test
lods
mov
pop
test
adc
cwtl
or
sub
aam
sbb
jmp
test
pop
test
sarl
lock
loope
nop
imul
in
outsb
push
cmpsl
mov
sub
cmp
rol
mov
dec
loopne
sti
sbb
repnz
xchg
test
imul
lahf
les
jae
cmpsb
test
and
cwtl
lahf
idivl
stos
mov
mov
mov
rorl
add
leave
ss
decb
jns
or
inc
mov
xor
jne
push
cwtl
xchg
xor
das
jbe
clc
fsubl
jno,pt
mov
roll
push
xchg
push
int3
jge
sub
out
push
inc
dec
dec
push
rolb
bound
mov
mov
mov
push
inc
rcr
adc
add
sub
or
pop
xchg
sub
frstor
movsb
notb
lock
lcall
insl
xor
pop
mov
fwait
shl
outsb
test
shl
mov
mov
mov
dec
push
dec
xchg
scas
nop
xchg
lret
and
mov
lods
mov
sub
adc
adc
mov
cwtl
inc
das
push
pop
pop
pop
insl
repnz
mov
mov
in
mov
pop
adc
jae
test
pop
sahf
adc
shrl
push
inc
push
lahf
fnsave
inc
or
mov
jge
xchg
push
roll
xchg
js
xchg
iret
adc
push
pushf
stc
mov
pop
pushf
repnz
ljmp
loopne
ror
scas
mov
sbb
lret
adc
int
sbb
pop
out
test
mov
cmp
mov
sahf
or
cs
hlt
xchg
lock
xchg
push
sub
add
xor
xchg
adc
pop
adc
imul
xor
test
scas
imull
lcall
hlt
adc
call
xchg
cltd
add
jl
repz
jno
mov
int3
mov
push
aad
imul
out
cwtl
adc
xlat
mov
xchg
pop
lahf
push
sbb
mov
push
js
xchg
orb
pop
push
call
mov
pop
jo
stc
mov
inc
sub
jp
imul
adc
scas
lock
jge
jns
fcoms
dec
ror
inc
xchg
out
in
jle
hlt
fsubrs
arpl
fimull
adc
xchg
gs
cmp
xchg
incl
xor
pop
inc
call
mov
inc
stc
push
sahf
ficoml
subl
and
mov
int3
mov
and
inc
mov
lods
xchg
das
mov
punpckhbw
adc
ficoms
sbb
movsl
mov
outsl
sub
add
dec
pop
lea
int
sub
testb
cmp
add
mov
mov
sbb
pop
fiaddl
and
mov
ja
mov
sub
aam
push
fidivrs
andb
xchg
jnp
inc
rol
and
pushf
or
lds
xchg
cmp
adc
out
mov
je
sahf
pushl
cmp
cmp
std
aaa
fmulp
hlt
add
cmp
scas
movsb
adc
jnp
cmp
out
das
movsl
sbb
jnp
fwait
notb
cmp
call
cmpsb
jecxz
jo
sub
repz
mov
jne
xchg
roll
test
imul
mov
push
gs
add
mov
loop
jmp
push
test
mov
inc
sahf
dec
mov
push
outsb
xchg
sub
movsl
or
pop
adc
shlb
flds
ljmp
data16
test
mov
icebp
das
xchg
jle
jns
cwtl
out
rorl
dec
ljmp
inc
jae
pop
cld
stc
push
and
aaa
jnp,pn
jecxz
shlb
pop
and
inc
mov
push
mov
mov
and
mov
ja
pop
loope
rcrb
xor
outsb
mov
dec
mov
jns
mov
xchg
cmp
lea
or
adc
cs
xchg
xchg
xchg
test
rcrl
lods
inc
mov
cmp
or
fidivrl
mov
shrb
mov
ficomps
pop
and
pop
lcall
cmc
sub
ss
outsb
and
int
cmc
scas
dec
mov
push
and
inc
cmp
test
adc
mov
xchg
mov
in
divl
pop
rclb
mov
popf
mov
inc
pop
add
cwtl
dec
inc
inc
addl
mov
adc
xor
fistps
in
inc
aas
add
int3
mov
ja
ja
dec
pop
xchg
out
xchg
cmp
push
decl
push
outsb
mov
out
pusha
inc
mov
push
mov
cmpb
mov
push
aam
mov
mov
ljmp
xor
adc
fidivrs
cwtl
sbb
popf
call
ljmp
xchg
mov
out
adc
bnd
fmul
jle
xlat
jmp
insb
in
stos
out
cmp
std
adc
lea
popf
xlat
les
push
or
adc
test
add
in
mov
in
mov
jge
pop
aad
pop
or
mov
sahf
js
mov
xor
out
and
push
push
jo
sbbl
xor
aaa
push
out
mov
test
aaa
leave
arpl
adc
xchg
insb
and
lret
mov
imul
push
xchg
add
push
xlat
dec
mov
xchg
mov
mov
push
push
jbe
loop
add
xor
or
adc
cmp
cmp
xchg
sahf
xor
insl
sub
sub
sub
dec
pop
loope
lret
mov
push
daa
movsb
mov
or
leave
xchg
inc
inc
cmc
js
ret
das
outsb
ja
es
and
in
pop
xchg
mov
fidivrl
cld
xlat
int3
imul
int3
in
addb
push
xlat
sbb
inc
decl
inc
mov
iret
js
adc
lcall
clc
xor
sub
cli
xchg
mov
filds
test
iret
jecxz
test
and
mov
aas
daa
mov
mov
sub
xlat
mov
sbb
xchg
fs
ret
xchg
lret
stos
aaa
pop
mov
xchg
xorl
mov
out
pusha
ret
mov
out
shlb
leave
pop
cmp
je
icebp
xchg
mov
mov
pushf
loop
pop
pop
cmp
push
mov
shlb
mov
jp
mov
fildll
inc
int3
test
sub
mov
repz
insl
loope
insb
aam
int3
clc
pop
mov
jl
out
mov
dec
xor
jbe
mov
inc
cwtl
mov
pop
dec
pop
fstpl
daa
fwait
pop
jecxz
mov
pop
lret
lods
idivb
dec
or
notl
sti
ja
jae
daa
xchg
cli
sub
lock
ficompl
jns
inc
out
imul
jae
cmpsb
shl
or
mov
xor
ss
cmp
mov
jg
mov
and
xchg
xchg
mov
mov
inc
stos
insl
xor
push
dec
imul
cmp
mov
imul
mov
dec
inc
daa
jge
sbb
pop
adc
stc
outsb
inc
inc
push
inc
int3
or
ss
fs
xor
mov
shrb
dec
xchg
jmp
lea
enter
mov
test
clc
and
clc
xchg
je
mov
daa
sahf
xor
xchg
std
addr16
popa
lods
fstl
rcrb
js
adc
loopne
dec
ds
test
xor
jae
xchg
xchg
or
ja
loop
cmp
or
xchg
lds
movsl
push
es
push
in
in
mov
fs
mov
cmp
fldcw
nop/reserved
push
push
lock
orb
out
cmp
aas
push
pop
dec
fisubrs
xchg
mov
popf
mov
push
sahf
pop
inc
push
mov
pop
xchg
out
sub
jbe
hlt
adc
subl
mov
cld
movsl
jbe
mov
aas
and
subb
push
jae
dec
stos
test
pop
dec
cmpsl
aad
dec
xchg
out
push
repz
or
ja
sbb
sub
pop
push
lcall
in
mov
xchg
mov
mov
ret
out
or
clc
cmp
fnstsw
pop
dec
int
push
aas
push
fnstsw
pop
mov
das
rolb
mov
xor
subb
addr16
pusha
cmp
jp
dec
xchg
jmp
scas
insl
iret
jge
lret
pop
loope
lret
aas
stc
mov
pop
out
cmp
jmp
mov
clc
cmp
ljmp
in
cmpsb
test
rcr
mov
imull
inc
or
xchg
mov
scas
lcall
push
add
or
mov
mov
push
jge
adc
sub
jg
add
cmp
movsb
icebp
sbb
pop
ss
jno
push
sbb
mov
mov
int3
and
jl
mov
icebp
test
sub
sahf
test
xor
ja
xor
jl
jne
xchg
xor
and
xor
daa
ret
xchg
lret
je
xchg
aam
shll
out
bound
push
xchg
or
pushf
lret
outsl
jmp
outsl
das
ljmp
mov
loop
rcl
jg
ret
inc
jge
sbb
xor
jo
dec
mov
rcl
shlb
mov
adc
pop
push
push
fcom
mov
cmp
cmp
in
adcb
rcrl
popl
sarb
mov
cmp
aad
or
inc
repz
inc
push
mov
jle
push
jne
or
or
in
stos
mov
jno
mov
jns
aas
or
daa
dec
test
stc
scas
lds
xor
xchg
shlb
rcrl
xchg
jg
push
jno
xlat
daa
imul
jne
rcrb
decl
cmp
cli
mov
push
push
mov
repnz
pushf
dec
and
mov
jns
mov
add
in
push
mov
inc
sbb
xor
mov
jmp
notb
push
pushf
repz
fnstcw
in
loop
loopne
cmp
xor
mov
sub
enter
pop
sarb
inc
sbb
notl
in
adc
xchg
mov
mov
cmp
mov
push
push
push
or
enter
jnp
jae
lods
call
or
cmp
mov
inc
test
xor
fstl
popf
lea
hlt
lods
jg
lods
sahf
xor
push
inc
into
mov
lcall
ja
add
cld
repz
pop
ror
lret
out
mov
add
mov
fs
inc
sub
adc
mov
xor
in
or
pop
movsl
popf
xor
loopne
repz
cld
sub
adc
test
xor
sub
xor
out
addr16
shlb
in
dec
and
or
push
loop
fidivrs
inc
dec
mov
mov
cmp
test
hlt
mov
fnstenv
sub
sub
inc
adc
mov
sbb
jbe
mov
fdivrs
lret
pop
xchg
cmp
jl
xchg
and
ja
push
and
lret
sub
cmp
outsl
fnstsw
adc
sub
or
inc
pop
jne
pop
inc
sub
rclb
jmp
pushf
ror
into
pop
or
inc
pop
in
cmp
and
sbb
sub
add
dec
mov
mov
lods
pop
add
xchg
sbb
jl
cs
cs
lods
add
les
and
nop
shrl
in
inc
pusha
xor
mov
add
mov
jae
pop
cmp
or
sbb
cwtl
adc
adc
dec
pop
es
mov
ret
mov
mov
dec
movsl
mov
and
ja
test
cli
test
outsb
fcmovbe
cmpsb
jecxz
stc
xor
test
jae
test
mov
add
movsl
stos
xlat
cmp
xor
test
in
lock
popf
push
in
repz
push
cmpsb
adcl
push
jle
loope
rolb
pop
dec
or
and
stc
mov
xor
xchg
cmpsb
add
or
ror
mov
push
adc
fistl
out
daa
das
mov
repnz
add
add
out
and
shlb
push
push
or
adc
dec
dec
mov
std
sbb
aaa
rcl
in
xchg
mov
sub
or
scas
shll
hlt
sub
jp
into
adcl
sti
js
dec
push
lret
imul
cmp
xchg
ret
daa
std
test
repnz
add
add
adc
shl
cmp
cmp
push
mov
shl
push
test
sub
jo
in
jl
xchg
fmuls
jmp
test
fdivrp
insl
pop
or
fwait
push
stos
call
dec
ljmp
in
lods
adc
xor
in
test
mov
push
sar
or
mov
mov
clc
sbb
popa
je
push
adc
push
mov
fmul
cwtl
xor
rorb
mov
add
xchg
ss
dec
inc
cmp
jo
cmp
stos
repnz
xlat
fucom
add
jp
repnz
and
sbb
and
notb
int3
xchg
jecxz,pn
and
mov
sti
hlt
std
dec
adc
sub
xor
add
add
test
jl
test
push
test
lds
sbb
outsl
lods
mov
lock
jbe
dec
js
jl
call
pop
push
jnp
cmp
ja
scas
leave
or
fsts
sub
jae
call
pop
pop
aam
repz
push
xchg
cs
into
dec
jae
sarb
push
push
mov
add
xchg
xchg
ss
xor
out
adc
out
mov
fistl
sub
loop
sub
fildl
movsb
mov
dec
push
mov
dec
pop
push
inc
ljmp
ret
xchg
popf
xchg
rcl
repz
push
imul
mov
test
aam
pop
jne
inc
loop
sub
out
mov
pop
xchg
movsl
lret
sub
shll
pop
adc
jecxz
dec
push
or
js
pop
in
xchg
cmpsb
or
scas
mov
imul
mov
sbb
lret
cltd
jle
shlb
inc
or
xor
test
mov
mov
cli
in
ret
rolb
loope
adc
int3
clc
insb
loope
test
mov
loopne
jnp
cltd
fistps
test
std
fisubrs
adc
cmp
leave
in
mov
adc
pushf
scas
jp
push
mov
fstps
rolb
mov
adc
daa
adc
repnz
cmpsl
adc
dec
and
jae
jl
xor
cmp
add
inc
mov
adc
pusha
adc
ljmp
push
jecxz
mov
loope
cmpsb
loopne
sbb
popf
stos
fldenv
outsb
loopne
in
fistpl
lds
scas
faddl
mov
pop
xor
add
xor
dec
adc
lock
xchg
inc
and
insb
sub
sbb
cmp
inc
mov
into
insl
mov
lods
lahf
jns
in
call
jecxz
call
add
sbb
out
scas
es
hlt
mov
xchg
pop
or
fsubs
mov
sub
add
cld
push
push
sarb
sbb
cmp
jae
cmp
mov
fs
mov
imul
fbld
cld
xchg
out
shrb
fisttpl
and
repnz
nop
ret
movsb
adcl
xor
mov
mov
and
repnz
lret
cmp
iret
ss
rorb
adcb
in
and
pop
xor
aad
scas
sti
push
adc
out
inc
push
or
cli
xchg
test
movsl
loope
cmp
in
scas
scas
adc
sarl
push
out
mov
cld
int3
lret
testb
cs
or
loopne
add
aam
fld
lods
dec
xor
lds
mov
movsb
jle
jb
lods
imulb
fsubr
push
out
mov
push
add
addr16
std
mov
inc
aaa
pop
mov
mov
xchg
xor
minsd
xchg
in
insl
adc
mov
inc
jp
in
inc
mov
iret
jp
das
mov
sahf
sbb
and
sbb
mov
mov
pop
add
mov
sarl
inc
fs
mov
enter
stos
pop
cmpsb
mov
or
iret
inc
or
int
data16
aam
xchg
add
lods
mov
sti
pop
frstor
inc
jge
pop
fisttps
mov
into
or
xchg
cmp
push
and
out
jb
jae
lahf
pop
lret
mov
mov
jl
xor
lahf
mov
add
xor
sub
fists
mov
sti
push
lret
mov
imul
xor
mov
sti
fldenv
inc
out
loop
loopne
inc
pop
lea
push
ljmp
cmp
lds
sti
add
xor
adc
pop
rclb
arpl
or
scas
push
test
cmpsl
leave
dec
cs
je
adc
cmp
and
or
cld
xor
adc
clc
aam
pop
sahf
add
and
int
mov
fistpll
ja
insl
pop
push
mov
in
xor
or
cli
jecxz
xchg
pushf
fldt
and
shll
mov
div
mov
out
jp
and
hlt
outsb
pushf
jmp
jbe
push
repnz
js
or
popa
mov
xor
aam
std
pop
imul
jl
cmp
push
mov
pop
filds
inc
push
add
iret
das
inc
push
cwtl
add
mov
xchg
nop
shrl
cmpl
mov
std
sbb
fs
jb
xor
mov
or
jg
adc
mov
jmp
bound
xor
push
fsts
xchg
or
cmp
adc
push
inc
fs
or
adcb
mov
repz
cwtl
fdivs
add
movsl
mov
inc
scas
fldcw
int
fadd
nop
sbb
jne
mov
xchg
adc
and
hlt
pop
mov
push
jle
stc
lods
pop
data16
fidivrs
pop
iret
pushf
js
pop
clc
hlt
cli
dec
js
jnp
xor
fsubl
mov
in
jmp
ljmp
fimull
and
mov
jl
es
inc
mov
cmp
and
leave
ljmp
test
test
int
icebp
mov
idivb
pop
add
sbb
imul
call
in
jecxz
mov
xchg
fdivrs
divps
dec
mov
pushf
sub
stc
dec
ljmp
jecxz
hlt
mov
pop
mov
and
add
mov
mov
hlt
xchg
frstor
push
and
lea
or
and
push
mov
out
dec
inc
inc
ficoml
push
inc
rcl
push
insb
mov
add
movsb
and
xchg
leave
loope
pop
push
mov
movsl
cmp
dec
fs
jbe
adc
or
hlt
pop
adc
cmp
lea
cltd
xchg
fucomip
lret
imul
into
push
arpl
mov
pop
lret
adc
adc
sbb
test
or
xchg
jle
stc
xchg
xchg
fists
pop
rcrb
scas
mov
mov
test
cmpsl
push
pop
fbstp
cmp
adc
shr
cmpsb
fistps
imul
dec
push
jg
ljmp
pop
or
sub
aam
inc
test
shr
fwait
mov
and
testl
testl
adc
lcall
repz
sub
push
out
pop
mov
adc
add
cmp
or
cwtl
pop
or
clc
and
cmp
push
push
xchg
add
stos
das
loop
lret
xor
pop
shlb
in
xchg
mov
ja
je
lods
dec
pop
movsb
jmp
and
mov
ffreep
enter
jl
push
pop
lret
jp
fwait
ret
adc
jno
pushf
inc
inc
pushf
std
pusha
sbb
lods
adc
sahf
push
std
cmpsl
jne
sub
stc
pop
shrl
int3
insl
jle
aas
pop
and
out
movsl
test
cmp
push
pop
popf
jo
loope
sbb
gs
lret
js
pushf
das
aas
pop
stos
negb
outsb
sbb
push
adc
or
stc
clc
popa
jg
inc
or
mov
clc
pop
ds
testb
pushf
xchg
xor
in
pop
pop
xor
sti
xor
addr16
mov
inc
adc
adc
std
dec
es
xor
je
sbb
push
xchg
xchg
adc
dec
mov
xor
push
sbb
jl
jno
add
data16
cld
dec
jecxz
outsb
sti
dec
sarl
jl
in
lods
xchg
jb
sub
add
lds
sbb
les
insl
cmc
xchg
inc
out
xchg
sub
sbb
mov
push
add
mov
mov
inc
outsl
lea
mov
jo
out
or
icebp
mov
into
int3
dec
xor
lret
movsb
dec
imul
js
inc
xchg
fdivs
test
out
mov
mov
adc
lock
je
xchg
lods
arpl
fistpl
pop
jbe
push
jle
out
ret
xor
mov
push
jp
cmc
adc
pop
xchg
pop
addr16
inc
icebp
sub
cli
sub
jno
imul
xchg
sub
jne
cltd
fnstcw
dec
iret
repnz
jle
aam
insl
enter
sti
push
fwait
inc
ficomps
rorb
lret
sub
pushf
xor
push
push
addb
cmp
fs
jge
lds
call
cmp
fstpt
push
jp
jg
pushl
jno
and
mov
mov
lret
mov
xchg
mov
scas
pop
test
sub
mov
hlt
std
inc
scas
inc
push
jl
xor
ret
into
cmpsl
mov
or
or
adc
jno
jb
test
aaa
push
out
stc
pop
pop
mov
dec
int
fwait
sahf
mov
pop
and
int
jne
fsqrt
jnp
xor
fsubs
push
mov
sub
mov
mov
adcb
gs
sbb
sub
lret
mov
inc
fistpll
bound
inc
vandpd
fbld
push
jno
lods
and
fwait
xchg
inc
jg
int3
call
fcoml
loop
fstps
out
adc
loop
insl
cmp
std
call
mov
mov
add
xor
lcall
mov
pop
mov
lcall
dec
inc
inc
rol
push
mov
fstps
push
and
cmpsb
cmp
js
and
loopne
xor
movsl
stos
and
ret
stc
lods
cs
mov
loope
sarl
sbb
xor
lods
sub
ret
jp
jmp
xor
sbb
cmp
lock
mov
sub
sub
inc
mov
cmc
xlat
xlat
ljmp
jne
fimuls
pop
clc
stos
mov
loope
add
cmp
bswap
or
or
das
popl
push
inc
mov
cmp
das
lods
lock
fstpl
cmp
jp
jae
xchg
repnz
dec
lret
add
dec
mov
mov
testl
push
xchg
iret
xchg
mov
scas
add
sbb
jne
jo
cmp
push
sarb
sbb
roll
push
sarl
add
dec
lret
jp
adc
mov
clc
mov
fimull
sbb
push
mov
cmp
xor
add
cmp
lods
jbe
insb
aad
jge
push
aam
lods
jecxz
adc
pop
mov
cli
push
test
in
movsb
mov
lea
fcmove
loop
fistps
adcl
ss
push
loopne
popf
jp
stos
sbb
rol
divb
or
or
mov
scas
lods
ret
xchg
cmp
sbb
ret
mov
cli
cwtl
in
adc
and
jne
and
sbb
call
call
and
jnp
cmp
lods
ja
sbb
mov
fwait
mov
lcall
dec
sbb
adc
and
pop
sub
rcrl
mov
cmp
mov
mov
xchg
mov
pop
jnp
lods
add
shll
test
nop
shrb
cmpsl
les
outsl
inc
xor
fldt
shl
or
out
je
and
cmpsl
xor
iret
xor
mov
inc
cwtl
add
pusha
je
adc
ss
push
inc
sbb
jae
aaa
js,pt
mov
and
xchg
jp
cli
add
lahf
nop
cmp
lret
sbb
cmpsb
mov
insb
mov
jno
mov
test
dec
add
xchg
orl
pop
pop
add
clc
or
or
mov
cmp
aas
sub
add
lcall
push
sbb
inc
pushf
mov
cwtl
or
adc
adc
xchg
xor
dec
push
fs
lret
sahf
mov
cmp
cmpsb
sbb
mov
stc
mov
mov
enter
mov
xor
mov
and
addr16
jo
push
cli
dec
icebp
in
jb
sbb
mov
outsl
dec
aas
or
dec
mov
scas
mov
jg
sub
push
cmpsl
imul
and
push
adc
sub
and
fcompp
movsb
adc
sbb
mov
sub
push
and
jg
xchg
xor
jg
fldt
sub
mov
jno
rcl
scas
orb
pop
test
lret
or
in
rcl
insb
adc
daa
xchg
mov
cmpsb
adc
push
pop
decl
fldcw
mov
stc
dec
jecxz
inc
cli
inc
cwtl
hlt
daa
in
dec
or
int
movsl
popf
pop
jns
rcrb
mov
jg
cwtl
push
lock
push
aad
js
int
daa
mov
jno
dec
and
jg
dec
pop
scas
adc
stos
jge
add
testb
fs
or
hlt
insl
imul
dec
xchg
pop
cmp
add
inc
movsb
cltd
mov
outsb
pop
lret
mov
adc
lret
rcrb
das
sti
cmc
cmc
push
ds
sbbl
das
mov
xchg
push
sub
dec
in
lock
arpl
add
sub
inc
mov
mov
adc
xchg
push
fnstcw
addl
and
gs
stos
shr
and
sbb
inc
in
xchg
jmp
xchg
enter
or
sub
inc
xlat
aaa
inc
cld
push
in
xor
jne
cwtl
inc
shll
jmp
mov
insb
sarb
xchg
jl
mov
mov
pop
mov
add
cwtl
mov
lret
xchg
lret
les
pop
add
push
ror
adc
scas
aas
andb
adc
adc
hlt
dec
iret
mov
lret
loope
and
or
repz
in
gs
mov
jl
cmc
mov
in
gs
fldenv
pop
or
loopne
cltd
sbb
insb
dec
mov
mov
call
mov
xor
push
movsl
mov
sbb
add
orl
dec
mov
mov
cmpsl
cmp
and
fcompl
cmp
daa
lea
xor
sbb
test
and
push
mov
push
pop
iret
test
lock
and
repnz
mov
xchg
dec
jl
jmp
les
jns
push
sub
out
jge
dec
inc
insb
mov
push
adc
lods
data16
mov
out
je
jbe
nop
and
shll
mov
add
mov
cmp
cmp
pop
cmp
sub
dec
jecxz
lods
iret
call
bound
sub
pop
icebp
xchg
and
xchg
cltd
rcll
add
popf
cmp
and
xchg
insl
fs
and
push
scas
lods
movsb
roll
inc
xor
mov
jae
in
or
fnstsw
cltd
fbld
pop
fnstcw
out
jle
pop
sbb
add
aaa
testl
dec
rol
adc
push
ret
mov
sub
pop
sbb
jmp
or
sbb
add
xchg
out
inc
fildl
and
pop
dec
lret
xchg
outsb
shll
sub
mov
fisubrl
xor
xor
nop
enter
xor
fisubl
sub
loopne
pop
mov
mov
movsl
xchg
lea
mov
mov
add
scas
xchg
in
xchg
lahf
subb
pop
fimull
mov
enter
mov
mov
fisttps
pop
shll
dec
push
pop
pushf
loopne
inc
pop
lods
cmp
jp
test
add
js
mov
cs
xchg
jo
rol
mov
repnz
ja
inc
xor
fstp
jbe
nop
jne
mov
or
sbb
mov
out
pop
addl
and
addr16
aas
lock
mov
jnp
push
jle
std
addr16
pop
mov
push
dec
inc
loope
dec
sti
fcomi
rcl
sub
shll
sbb
sbb
test
data16
in
out
scas
inc
pop
gs
inc
data16
dec
mov
mov
jae
insl
pop
mov
in
push
pop
into
mov
push
arpl
push
pop
push
es
aad
sahf
mov
jb
jne
dec
mov
mov
sbb
xchg
jae
push
cltd
dec
mov
sub
xor
inc
in
mov
xchg
inc
scas
pop
filds
aas
dec
mov
pop
jae
dec
pop
rorb
jg
pop
xchg
fwait
mov
insb
add
daa
test
int3
sub
movl
pusha
ja
ds
movsb
mov
mov
mov
pusha
leave
sub
arpl
push
int
fwait
das
sahf
leave
mov
sub
lods
inc
jg
jle
mov
jle
cmp
loope
fimuls
test
mov
roll
ss
mov
dec
pop
adc
dec
lahf
push
jl
lea
iret
xor
sub
mov
xor
stos
jmp
cmp
inc
int3
add
ss
enter
jb,pn
ret
repz
clc
ds
sbb
cmp
dec
test
les
mov
push
and
sbbb
push
fs
dec
push
dec
sbb
test
bound
mov
ficoml
push
jle
xor
mov
aad
lahf
adc
pop
mov
aam
and
push
ficomps
fcomip
pop
fidivs
pop
mov
int3
pop
mov
pop
mov
repz
loopne
cli
aad
ljmp
or
jle
outsb
mov
jle
xor
faddp
add
pop
test
pop
stc
lahf
lret
inc
or
adc
hlt
pop
loop
ds
mov
xor
leave
lcall
mov
or
push
std
adc
pop
sub
fwait
add
sbb
dec
and
pop
xchg
add
call
jno
pop
arpl
push
rep
gs
inc
out
out
inc
mov
sbb
xchg
dec
push
lcall
sbbl
inc
insb
or
pop
stos
std
jle
in
pop
andl
lret
or
rorb
adc
stc
in
mulb
sub
cmp
stos
popf
jo
or
ret
test
dec
cld
cltd
dec
arpl
mov
shrb
xor
pop
xchg
mov
xor
push
mov
in
out
leave
faddp
xor
movsl
fs
add
aad
frstor
sar
pop
test
int3
shrb
jnp
jmp
sub
and
int
jbe
add
lret
popaw
hlt
test
sub
and
add
or
addr16
jmp
rorl
cmp
jno
popf
mov
inc
les
fists
xchg
sti
out
and
push
test
adc
pop
jne
imul
das
xor
repz
or
or
out
lods
movsl
mov
sahf
sub
inc
xor
fdivr
rcll
int3
jns
dec
mov
hlt
dec
cmpsl
xor
lcall
pop
add
jns
add
in
dec
imul
sbb
les
shl
dec
sub
popa
dec
ret
loope
cwtl
inc
pop
js
out
mov
popa
mov
add
sbb
outsb
in
adc
jo
lods
mov
pop
xchg
divb
out
mov
sub
lahf
aaa
cli
into
mov
fdivl
call
icebp
push
pop
jmp
enter
insl
int
xchg
or
stc
das
rolb
jecxz
fmuls
cmp
mov
dec
xor
or
out
push
stc
cmc
pop
shll
pop
out
mov
shll
inc
mov
sub
mov
jns
mov
les
out
int3
adc
jb
push
xor
sbb
cmp
add
mov
push
cmp
in
jbe
stos
out
out
mov
ret
push
and
gs
fstl
iret
jp
mov
dec
adc
cmp
loopne
push
flds
mov
mov
push
jns
adc
push
out
jo
adc
imul
mov
test
fwait
jle
outsb
jo
daa
clc
ss
cmp
sub
mov
shll
cmp
insl
sub
jl
addb
pop
inc
push
adc
and
dec
aad
cmpsl
push
fnsave
adc
les
inc
jno
jbe
cmp
dec
mov
das
xchg
xor
gs
imul
cmp
jne
cmc
xchg
inc
lahf
dec
clc
jbe
cmp
sub
xchg
imul
hlt
xorb
out
cs
bound
testl
sbb
cmp
push
xor
rcl
js
pusha
fstps
dec
lret
rcr
lea
enter
pusha
cmp
sbb
push
jg
jle
cmp
jne
out
aas
std
call
stos
xlat
push
mov
nop
movsb
push
xor
scas
mov
cmpsb
in
icebp
fs
aam
adc
mov
into
loope
into
dec
popa
sbb
mov
cmp
push
movsl
and
add
or
pop
cmp
insl
push
loop
adc
mov
lods
xchg
dec
mov
adc
dec
test
in
inc
shlb
into
xor
out
cwtl
sbb
dec
ret
jae
xchg
push
out
mov
sub
roll
out
sahf
xchg
pop
inc
fldenv
in
xor
out
inc
andl
add
xor
leavew
push
in
pop
out
enter
lcall
cmp
jge
es
idiv
mov
lods
fwait
mov
test
aaa
mov
mulb
and
mov
outsl
dec
mov
pop
xor
flds
loopne
xor
mov
fistl
and
lahf
dec
dec
ficoms
lock
aas
push
or
hlt
lods
mov
xchg
sub
sub
mov
mov
mov
and
and
dec
xchg
je
clc
cmp
push
or
jb
loope
cmp
outsb
inc
addr16
int
fildl
int3
das
call
xor
mov
cmpsb
push
movsl
ds
xorb
and
pop
idivb
jl
mov
test
jge
repnz
mov
xor
pop
out
mov
jecxz
mov
xor
mov
rcll
mov
mov
addr16
js
in
cmpsl
and
or
adc
pop
dec
push
fcomps
pop
push
rol
push
rcrl
stc
push
jle
addr16
or
shl
mov
stc
or
mov
lds
lcall
out
xchg
testl
mov
jb
sahf
xchg
jno
push
xchg
inc
sbb
mov
scas
es
faddp
cmp
push
push
es
or
stos
bound
jp
insl
mov
mov
jo
jb
xchg
add
cmp
xor
hlt
sub
pop
dec
or
sub
mov
arpl
insb
cmpl
xchg
cli
cmpl
xor
arpl
sub
insl
dec
push
mov
inc
or
cmovnp
fsub
sahf
sub
xlat
sti
imul
dec
xchg
adc
jno
out
xchg
fildll
xor
sar
ja
leave
adc
rcl
jno
mov
lcall
shll
rolb
push
std
stc
push
xor
inc
pop
sub
pop
mov
das
adc
data16
stos
cmp
mov
push
or
add
nop
mov
xchg
push
jle
jno
ss
jae
sar
mov
pop
mov
insl
hlt
lods
lea
loop
mov
mov
imul
mov
ja
sti
imul
jmp
stos
xor
sbb
into
lret
mov
das
jge
push
bound
mov
leave
jbe
push
pop
sbb
xor
mov
icebp
lea
test
std
mov
or
mov
mov
mov
sahf
adc
sub
inc
daa
lret
and
mov
sub
jle
jmp
insl
loop
or
ret
imul
in
shrb
xchg
lea
adc
arpl
lcall
cwtl
sahf
mov
mov
fldl
js
adc
int3
rcll
outsb
movsl
inc
stc
mov
outsb
popa
dec
add
and
int3
addl
mov
test
xchg
xchg
enter
int
or
push
xlat
lcall
xlat
jne
shr
repz
xlat
cmc
not
jmp
jns
mov
lods
dec
xor
mov
fsubrs
push
cmp
xor
and
lds
mov
xor
add
aaa
pushf
sbb
xlat
aam
loope
inc
sarl
sarl
pop
scas
push
leave
or
arpl
nop
cmpsb
aas
sahf
jp
pop
xchg
ds
mulb
mov
loop
out
and
daa
loope
sub
dec
pop
in
xchg
in
hlt
sbb
mov
xor
clc
es
mov
iret
lahf
in
int
jmp
sub
mov
das
dec
loopne
insl
jge
push
pop
and
out
adc
loope
fmuls
aas
cs
sub
test
jb
out
pop
xor
dec
dec
or
jmp
push
adc
inc
mov
ss
hlt
addr16
add
push
add
push
dec
jne
sub
mov
mov
pop
cmpsb
filds
pop
xchg
bound
pop
pop
outsl
aam
adc
mov
mov
mov
inc
jecxz
loop
mov
das
popf
pop
scas
faddl
popa
dec
cmp
cmc
cmpsb
leave
xor
sbb
jno
shlb
pop
xchg
pop
lret
popa
fstpt
mov
dec
jb,pt
and
inc
iret
sar
sub
pop
nop
cwtl
daa
jg
xchg
push
jmp
adc
cmp
mov
cmc
sti
dec
add
mov
add
xor
lret
jp
add
loope
push
mov
pop
and
test
mov
stc
mov
xchg
fists
push
pop
dec
popf
mov
pop
aaa
cmp
xor
xor
movb
or
jb
inc
push
jb
and
cmc
iret
push
mov
sbb
std
in
int3
or
lods
movsl
stos
out
inc
and
aas
jnp
and
mov
subl
adc
fsubl
sbb
adc
loopne
jo
add
or
cmp
adc
pushf
xlat
pop
sahf
add
dec
and
jmp
shlb
lods
imul
mov
xor
dec
in
mov
into
loop
sbb
inc
fiadds
roll
and
or
adc
das
jae
push
adc
xchg
loope
push
loope
mov
into
lods
sbb
and
dec
shl
and
jbe
outsb
subb
mov
repz
jno
inc
jno
xor
mov
dec
cmp
mov
stc
test
clc
in
cmp
sub
mov
add
mov
xchg
iret
jo
ret
or
cmp
inc
jl
cmpsb
sar
or
into
inc
and
in
call
adc
adc
aad
push
loope
clc
in
pop
push
dec
and
rol
pop
sub
pop
sbb
add
jne
or
popa
or
cmpb
cmc
js
not
mov
movsl
mov
jmp
leave
orl
mov
out
mov
dec
push
xchg
or
fcmovu
push
movsl
aad
lahf
adc
in
enter
fadds
mov
jle
sarb
fsubr
loop
imul
test
lcall
aad
dec
leave
filds
cmp
nop
fmuls
adc
sub
orl
int3
mov
aad
xchg
inc
rcll
push
push
dec
aad
cmp
out
std
lea
jbe
add
ror
push
push
mov
and
pop
cwtl
pop
and
dec
orl
cld
inc
int
leave
push
rcr
in
sbb
insl
and
pop
push
xchg
and
xlat
pop
or
or
jno
cli
sbb
mov
bound
fcmovnb
xor
dec
leave
ljmp
push
and
xor
iret
lea
jno
mov
nop
test
mov
sti
add
xor
imull
and
fcomip
jmp
xchg
scas
hlt
daa
mov
fdivp
sbb
arpl
mov
sarb
aas
mov
cmp
cmp
pushaw
cs
subb
in
xchg
fsubrl
sahf
pop
js
xchg
or
iret
cld
lahf
cmc
stos
mov
inc
ljmp
push
xor
jo
push
and
push
lcall
xchg
es
repnz
inc
cli
ret
daa
push
xor
int
sti
fwait
pop
mov
mov
add
mov
das
pop
lock
cmp
dec
inc
fs
and
mov
cld
fildll
jns
shll
dec
cmp
dec
mov
rcr
jno
dec
fcoms
stc
inc
jp,pt
adc
add
fcom
dec
cmc
xchg
mov
outsb
ret
mov
dec
cwtl
out
mov
pop
and
clc
add
dec
ret
adc
aaa
or
mov
dec
rolb
inc
and
imul
add
mov
pop
icebp
out
hlt
loop
push
xchg
inc
shrl
fidivrl
mov
jae
pop
mov
push
or
xchg
mov
sub
insb
push
mov
outsl
sahf
lea
repnz
imul
imul
xor
fwait
jecxz
das
gs
pop
repz
loopne
cmp
mov
pop
inc
aas
cmp
in
outsb
sbb
pop
adc
xchg
mov
cmpsl
cwtl
je
mov
cmc
mov
mov
dec
leave
daa
loop
es
or
mov
out
test
fcomi
arpl
ds
iret
aas
adc
sub
cli
aad
bound
pop
xchg
adc
xchg
leave
xor
bound
in
jns
js
lcall
adc
loop
inc
stc
or
push
mov
lods
jl
xor
dec
loope
iret
data16
iret
push
add
add
mov
mov
push
movsl
push
sub
dec
mov
cmc
xchg
idivl
fmul
xchg
jp
jp
jg
mov
push
mov
les
movsl
jae
call
xchg
push
push
loope
xchg
stos
sub
sub
cmpsb
ret
filds
cltd
sbb
or
mov
leave
inc
push
cmpb
dec
jne
mov
cmp
sub
iret
jmp
sbb
int3
into
jb
icebp
movsb
leave
xor
mov
xchg
mov
mov
in
sbb
pusha
daa
mov
lahf
repnz
push
mov
mov
std
dec
jmp
jb
mov
mov
mov
mov
sbbb
xchg
mov
inc
mov
sbb
inc
or
or
int
pop
sbb
fsubrl
sahf
cmp
std
xchg
adc
pop
lret
mov
xchg
dec
out
sub
or
cmp
cmp
sahf
adc
jg
push
xor
mov
jl
in
cmp
cs
cs
stc
lods
mov
or
xchg
xchg
insb
push
addr16
xor
bound
push
sbb
cmp
cmpsb
mov
in
jb
mov
xchg
mov
and
insl
cltd
adc
test
and
in
inc
movsb
jmp
xchg
or
sbb
das
lods
sbb
int
and
imul
adc
pushf
sub
pop
cltd
add
int
cs
std
shr
add
jg
pop
es
push
rol
daa
and
testl
fwait
adc
not
fwait
mov
push
vmovd
xor
cmp
xlat
sub
leave
iret
or
iret
out
add
and
iret
test
mov
adc
add
dec
and
icebp
aas
mov
int3
in
inc
jg
and
mov
adc
fidivl
inc
xor
add
mov
sbb
jnp
adc
adc
push
stos
stc
clc
int3
std
xor
sub
in
mov
imul
xchg
inc
aad
int3
pop
loopne
push
mov
aas
sbb
and
in
repnz
lahf
lahf
clc
aad
movsl
jns
ss
xchg
test
push
test
std
testl
mov
sub
into
and
sar
mov
imul
push
test
addr16
loop
aad
leave
repz
int
cmp
sub
fildll
add
test
bnd
scas
mov
cmp
xor
mov
pop
push
std
dec
jae
call
test
inc
sti
idivl
notb
lods
inc
in
mov
xchg
mov
xchg
das
mov
and
jl
pop
sarl
loope
jp
sti
in
cmp
bound
xchg
pop
xor
addl
divl
shr
dec
sbb
cmp
mov
cmp
xor
pop
jmp
xor
mov
scas
ja
sbb
lods
xor
cmp
gs
ss
xor
jmp
jp
popf
sbb
cmp
jp
push
mov
popf
fs
xchg
jmp
lea
bound
fsubr
ds
mov
mov
aaa
mov
jl
mov
adc
scas
push
pop
in
push
xchg
jne
data16
mov
aaa
sbb
cmpsl
in
add
ss
pop
push
leave
sbb
or
push
stos
sarl
pop
ret
outsl
dec
sub
sbb
lahf
aad
mov
lods
xchg
inc
pop
addr16
shrb
sbb
clc
sbb
and
lret
xchg
dec
test
or
sub
out
movsb
cmp
cld
pusha
notl
cli
lea
mov
cltd
add
ret
jp
lahf
push
cmc
push
mov
xor
fcomps
lods
fiadds
stos
andb
lods
cmp
sbb
xor
mov
or
test
rcrb
inc
or
and
aaa
xor
dec
and
add
pop
jle
jge
pop
leave
cmp
into
lock
ss
out
jecxz
mov
push
xor
ret
jns
push
inc
fsts
pop
mov
mov
jae
ret
nop
sub
das
inc
fs
insb
lock
lods
stos
mov
and
lea
mov
mov
adc
push
fcomps
pop
add
mov
jns
mov
dec
rcl
push
push
daa
stos
jg
xlat
xor
push
sub
adcl
dec
add
aaa
sbb
adc
mov
clc
test
or
jne
dec
sbb
add
pop
lea
enter
aaa
inc
pop
loopne
xor
xor
lahf
inc
mov
ja
pop
enter
cmp
fs
sti
arpl
ficompl
adc
rcrl
cld
add
subl
imul
aam
cmp
es
mov
sti
xchg
pop
xor
enter
in
adc
popa
ret
sub
and
xor
xor
mov
jmp
scas
popf
or
mov
stos
pushf
sbb
ja
mov
popa
mov
jle
inc
adc
cmp
das
aad
jno
xor
jmp
inc
cmc
mov
xchg
pop
mov
popf
inc
dec
jge
cmc
jmp
dec
fidivs
lcall
in
enter
je
and
lahf
test
fcoms
dec
andl
inc
sbb
jnp
and
jp
pop
adc
inc
popf
adc
xor
pop
movsl
mov
test
fistpl
push
mov
inc
mov
mov
add
mov
mov
push
fidivl
adc
inc
adc
jno
inc
pop
inc
jl
mov
inc
subb
test
test
xor
dec
repnz
xlat
loope
jp
cmpsb
inc
insb
loopne
sahf
lods
imul
fidivrl
mov
ret
dec
mov
in
sub
mov
inc
push
sbb
pop
jl
mov
cmp
rorl
or
jb
out
xor
adc
pop
ficompl
mov
fidivrs
xor
push
hlt
pop
push
mov
mov
ds
or
outsl
inc
jne
and
xchg
sti
mov
mov
out
daa
cmpsl
in
xchg
clc
push
lret
sbbl
add
mov
int
or
popf
xor
in
xchg
jle
in
mov
jecxz
push
push
test
mov
inc
popf
jae
pushf
pop
lahf
cwtl
mov
cmp
aaa
mov
aas
les
sarb
mov
lods
cmp
add
xor
inc
mov
xchg
mov
adc
jns
movsb
lahf
sub
push
add
pop
sbb
movb
fcmovnb
jg
in
es
jp
pop
jb
cmp
jg
inc
xchg
fbstp
iret
imul
fisttpll
iret
mov
test
cmpsl
mov
mov
cmp
pop
push
cmp
jb
add
pop
insl
int
andl
jbe
push
dec
adc
fs
insb
popf
int3
xor
adc
push
dec
mov
std
test
xchg
ret
jp
push
cmc
dec
test
sbb
sbb
fcoml
subl
loopne
mov
xchg
in
push
jae
pop
sub
dec
or
dec
inc
jle
jns
mov
cmp
sbb
stc
std
jns
scas
mov
sbb
sbb
das
test
ds
andl
adc
sub
push
mov
or
shl
xor
pop
in
pop
add
add
mov
dec
mov
mov
or
pop
ljmp
inc
das
in
fsubrl
pop
pop
cmp
ss
in
repnz
mov
mov
mov
mov
js
jl
cli
outsb
mov
adc
repz
push
cli
dec
enter
push
mov
inc
fs
push
mov
pop
or
adcl
sbb
xor
pop
xor
xor
mov
jne
mov
mov
popa
xlat
leave
loopne
pop
pop
imul
loope
sub
sbb
fs
sbb
ss
xor
inc
and
mov
loop
lds
fisttps
jns
lea
xchg
push
jg
iret
insb
push
idivl
inc
adc
push
sbb
test
mull
mov
lods
push
jle
fidivrl
jb
mov
or
int
aad
mov
or
hlt
enter
test
out
jle
jl
stos
dec
xor
inc
sbbl
fisubrs
dec
inc
lods
push
xchg
xchg
outsl
inc
in
leave
dec
cmp
add
mov
shl
pusha
and
xchg
xlat
jecxz
sti
xchg
jne
leave
popaw
jno
loop
lds
sub
leave
lock
inc
jb
nop
xchg
fcomip
pop
mov
lods
sub
fsts
dec
inc
sti
arpl
dec
int3
push
mov
jne
fisubl
sbb
or
inc
imull
out
jp
ret
ljmp
loopne
mov
xor
xchg
daa
enter
dec
and
and
cmp
add
xchg
dec
mov
frstor
jno
mov
pop
aas
les
sbb
adc
test
aaa
ljmp
adc
pop
cmp
mov
mov
lret
or
jae
dec
fistps
cmp
cwtl
imul
dec
imul
aam
and
pushl
sbb
cmpb
mov
and
test
or
insl
xor
test
mov
jns
pusha
adc
fadd
add
lea
leave
mov
daa
mov
in
iret
and
jnp
xor
aas
sti
xchg
sbb
test
xchg
in
decl
lods
pusha
loope
aaa
into
mov
in
std
cltd
push
lods
or
fcmovnb
ret
ja
pusha
dec
je
or
pop
sti
ljmp
xor
scas
cld
icebp
loope
mov
popf
ret
jne
add
repnz
mov
test
imul
sbb
pop
pop
jb
sub
sub
push
mov
cmpl
xor
mov
ljmp
rol
add
dec
lds
xor
xor
ljmp
fildl
xchg
inc
xchg
lret
arpl
push
push
jbe
insb
cmp
inc
jne
repnz
cmp
icebp
mov
cmp
pop
mov
adc
cld
pushf
mov
cmc
pushf
jp
sbb
jp
pop
lcall
insl
xlat
int3
dec
hlt
mov
mov
inc
mov
je
popf
mov
in
mov
hlt
imul
pop
gs
movsb
mov
mov
jbe
pop
outsl
xor
rolb
push
dec
fcom
hlt
mov
add
cmp
call
cs
mov
daa
sbb
int
out
xchg
pop
add
mov
sub
xchg
leave
push
lods
cmp
xorb
fnsave
pushf
add
call
mov
sub
in
xchg
data16
mov
imul
and
lahf
adc
xchg
jae
mov
or
and
aaa
mov
push
ja
jne
push
outsb
popf
insl
xor
roll
sbb
loope
test
cld
sub
test
lret
pop
and
outsb
mov
or
fsubr
insb
pop
loopne
mov
push
cwtl
das
sahf
ret
insb
fcmovnbe
pushf
loope
fidivrs
dec
pusha
inc
sbb
or
and
add
xchg
ret
mov
popl
ljmp
cmpb
movsl
pusha
sub
cmpsl
pop
gs
xor
mov
pop
bound
ret
ja
push
add
sti
and
pshufw
mov
fs
lea
mov
aam
fstps
repnz
movsl
arpl
movsl
loop
fstpt
push
lcall
push
inc
outsb
mov
loope
lcall
dec
sub
add
mov
int3
push
in
insb
popf
movsl
stc
fistl
hlt
fistps
pop
es
cwtl
out
xchg
icebp
add
adc
mov
mov
mov
mov
leave
mov
push
fcoml
and
call
adc
test
jo
jns
xlat
in
mov
jge
cwtl
mov
std
jnp
daa
gs
push
dec
out
push
and
jl
aaa
jnp
cmp
in
xchg
rcrl
fcoms
or
shrl
ja
sbb
mov
arpl
mov
pop
mov
sbb
test
scas
mov
ror
nop
icebp
loope
pop
jbe
jnp
inc
call
fucomp
mov
cmovno
push
push
push
shrl
xor
repnz
in
lds
pop
cmp
popl
int3
scas
lret
cltd
stc
inc
cmpsl
and
lret
sbb
ds
outsl
sbb
jnp
repnz
iret
fistps
pop
jne
out
es
scas
inc
in
pop
icebp
repz
xor
cmp
adc
pop
inc
mov
add
inc
ds
aad
push
mov
add
add
mov
sbb
rol
pushl
lods
ficoms
mov
cmp
jge
add
mov
out
leave
lods
out
push
repz
cli
cmp
push
xchg
mov
jbe
loope
mov
sub
cpuid
mov
pop
inc
jle
addl
out
or
jge
dec
push
sub
hlt
nop
add
icebp
dec
mov
jg
sbb
or
out
cmpsb
pop
mov
lods
jl
mov
mov
xor
sbb
cwtl
clc
movsb
jle
out
cmpsb
lcall
push
sarl
mov
in
int3
lods
out
or
or
testb
pop
adc
into
testl
out
jmp
data16
fbld
outsl
or
pop
aaa
mov
sbb
cmp
dec
pop
aad
cmp
fnstenv
pop
sub
pop
xchg
es
shll
aad
push
pop
inc
es
mov
iret
mov
sbbb
adc
add
lret
jmp
add
mov
mov
pusha
dec
scas
mov
rcrl
lret
leave
xor
gs
and
and
or
inc
mov
sub
sbb
lret
enter
test
stos
cmpsb
add
and
fwait
mov
lret
fsub
repz
push
loop
push
or
out
into
cwtl
add
xor
hlt
pop
stos
mov
bound
mov
addr16
jl
or
jae
das
push
mov
xchg
or
mov
cmp
push
mov
adc
inc
shlb
inc
xchg
xor
or
add
adc
xor
out
rcll
dec
cmpl
or
inc
mov
xor
repz
repnz
cmc
int3
in
cmpsl
hlt
shufps
inc
or
mov
inc
scas
jae
in
and
lcall
dec
fadds
add
sbbl
ds
jmp
ja
or
movsb
sbb
out
in
loopne
out
out
out
out
out
inc
mov
inc
push
jge
sarb
mov
xor
hlt
pop
int
xchg
dec
cmp
jnp
hlt
into
push
xchg
inc
cmp
push
loope
add
aam
push
push
lret
outsl
fnstcw
jbe
cli
dec
and
mov
push
mov
or
xchg
sbb
jnp
test
jge
fstpt
or
popf
in
jl
pop
mov
inc
cmp
mov
cmpsb
cmp
push
fiaddl
mov
ljmp
imul
lock
xchg
cmp
pushf
cmp
jns
pushf
push
iret
lcall
bound
inc
icebp
inc
pop
int
and
in
jo
push
jo
jecxz
rcll
sub
mov
fadd
cmp
xchg
lea
arpl
jg
daa
test
and
inc
inc
hlt
mov
mov
fildll
xor
jl
push
xor
cltd
mov
cli
sbb
ljmp
jno
jns
pop
cmp
iret
faddl
lahf
adc
mov
xor
or
push
sbbb
pusha
push
xchg
jne
loopne
in
dec
sbb
test
imull
jp
fdivr
jb
sbb
stos
xchg
jae
inc
out
ficoms
pop
enter
xchg
jle
loope
cmp
jo
mov
call
fwait
aas
ret
gs
in
shlb
lock
jle
pop
add
sti
test
in
xor
mov
sbb
jo
scas
mov
push
popa
aam
lahf
lahf
jns
popa
sub
pop
pop
dec
jmp
xchg
or
out
outsb
cld
xor
out
xchg
xor
lods
sub
pop
adc
int
lcall
ret
in
pop
adc
mov
aam
add
repz
mov
enter
imul
sbb
xchg
fs
push
outsl
mov
mov
and
and
jb
jno
pop
test
mov
dec
jno
loope
dec
repnz
enter
ds
in
test
repnz
push
pop
ret
xchg
xchg
fs
andl
cmp
adc
xchg
sbb
into
std
jmp
adc
and
jnp
xchg
sbb
push
push
xchg
jbe
cmp
pushf
out
test
fs
inc
sub
adc
mov
pop
hlt
sbb
lods
adc
xor
enter
sub
aas
jp
lods
jle
or
cmc
xlat
in
stos
das
mov
sbb
jno
xchg
ret
pop
fbstp
lds
jo
outsb
inc
stc
orps
subl
inc
mov
or
decl
or
mov
mov
out
call
mov
fs
cmc
pop
pop
out
inc
inc
lea
iret
mov
fs
mov
jle
movsl
xor
jnp
or
dec
jno
mov
mov
mov
fmul
push
xor
bound
inc
sti
sbb
repz
adc
fstpl
lds
lods
repnz
mov
xor
dec
sbb
shr
adc
jecxz
sub
xchg
lahf
pop
xchg
sub
push
xchg
pusha
xchg
es
jns
lock
push
or
cmp
xor
iret
sub
aad
push
test
jecxz
aaa
scas
adc
push
pop
mov
iret
je
push
push
pusha
iret
mov
xchg
jecxz
push
push
sbb
pop
inc
push
or
je
or
jmp
daa
sahf
lds
repz
popf
in
add
or
aas
inc
jle
dec
and
or
out
mov
push
lds
in
pop
sbb
int3
addr16
lods
inc
dec
pop
in
inc
inc
jae
cs
addl
xor
jg
and
mov
sti
shlb
push
lods
in
in
pop
jmp
dec
or
mov
sub
sahf
jge
jns
test
pusha
mov
lret
fneni(8087
test
xlat
ficomps
jbe
jl
call
cmpsl
pop
lods
fisttps
in
pusha
ds
test
mov
js
mov
cmp
pop
aas
mov
add
xor
sar
aaa
std
pop
jle
cmp
lods
push
les
insl
mov
iret
in
dec
mov
push
hlt
cmpsb
and
xor
nop
jae
cmp
xchg
mov
in
movnti
loope
insl
shll
add
cmpb
lret
ror
shll
push
mov
int3
lock
sbb
outsl
pop
jp
jnp
xor
inc
add
stc
pop
outsl
mov
or
shrb
loopne
cmp
loop
or
and
test
arpl
fisttpl
pop
stos
imul
test
fiaddl
add
jecxz
jge
shlb
lret
jmp
xchg
jnp
enter
into
add
ljmp
rolb
in
pop
imul
or
xchg
pop
fs
fisubs
in
cmpsb
adc
inc
add
inc
test
xor
fsubrs
sbb
dec
movsl
sahf
loop
jl
jo
sub
imul
push
bswap
pop
in
fwait
jle
adc
pop
repz
mov
sub
push
mov
lods
cmp
add
int3
lret
sbb
and
and
outsl
xchg
or
test
testb
pushf
xchg
mov
inc
pop
ret
enter
fcmove
dec
add
ja
pop
shl
jb
andb
pop
or
pop
xchg
loope
xor
and
xor
cli
sub
test
nop
int
lea
movsb
sbb
pop
xlat
aaa
data16
in
cmp
mov
mov
dec
das
sbb
xchg
lods
push
lock
xor
mov
xor
clc
cli
pop
mov
mov
xor
or
push
xchg
stos
xor
in
cmc
test
gs
mov
jecxz
jp
js
sub
pop
jmp
xor
sbb
loopne
rcr
xlat
xchg
mov
mov
testb
into
push
adcl
dec
cmpb
aaa
and
dec
pop
cwtl
push
xchg
push
push
xor
arpl
mov
mov
jmp
es
adc
add
gs
push
push
es
test
stc
gs
or
push
ss
into
push
std
repz
mov
sti
je
add
iret
mov
mov
scas
dec
sub
fcoml
mov
add
les
jne
add
mov
xorl
cmp
jp
inc
andl
imul
sbb
outsb
jae
cli
jecxz
mov
test
ss
mov
dec
mov
out
int3
jbe
rorl
outsl
jl
dec
push
jecxz
mov
shrl
sub
mov
stos
lcall
dec
in
pop
add
push
mov
movsl
jb
fsubrs
xor
pop
fisttps
insl
cmp
sub
fistps
xchg
bound
pop
sub
push
push
sbb
mov
movsl
cmc
mov
movsb
jg
mov
daa
push
pop
lahf
hlt
ret
scas
mov
xor
push
jle
add
inc
stc
xor
mov
jp
jno
test
out
push
andl
sbb
sti
push
mov
mov
call
and
aad
sbb
sub
ret
mov
mov
setle
and
fimuls
ret
pop
fwait
roll
movsb
rcrl
test
mov
mov
jmp
inc
testb
outsl
jb
mov
pop
push
js
test
shll
or
sti
pop
dec
cmp
xor
in
jbe
aaa
cmp
cmc
jbe
out
data16
sub
xchg
adc
pop
cmp
cli
test
or
push
jnp
xor
inc
in
mov
push
adc
movsl
jp
jne
shlb
push
and
adc
xchg
push
daa
push
cltd
jbe
and
mov
inc
adc
adc
jmp
sbb
mov
or
test
mov
sbb
sbb
enter
rcrl
xor
movsl
popf
mov
dec
dec
sub
xchg
mov
leave
adc
sbb
faddl
or
jno
inc
or
sbb
or
stc
cmpsb
sub
and
jl
xor
pop
xor
push
ret
aam
add
push
dec
sahf
mov
clc
pop
scas
addr16
jmp
xlat
xor
in
mov
inc
or
add
data16
mov
adc
xchg
pop
jecxz
pop
in
je
inc
cmpsl
insb
iret
cltd
fimuls
or
push
push
mov
jns
pop
cmp
and
popa
cmp
sbb
mov
fwait
push
mov
mov
xor
pop
imul
jl
inc
push
test
cmp
jmp
push
mov
and
movsl
pop
mov
sarl
repnz
mov
jnp
dec
mov
pop
xor
sbb
jne
and
fbstp
and
jno
jae
bound
xlat
rol
lds
sub
leave
mov
popa
in
loop
mov
xor
xchg
nop
jmp
sbb
aas
mov
rcrl
cmp
push
addr16
lahf
ss
repz
test
inc
mov
out
ljmp
inc
repnz
aas
inc
sbb
inc
pop
pop
mov
pop
dec
mov
jge
js
adc
lods
cmpsb
sbb
mov
sub
sub
cmp
cmpsl
movsb
sti
or
mov
mov
sbb
imul
mov
xchg
xlat
inc
xchg
ret
dec
sub
js
pop
pop
jp
dec
in
adc
pusha
cmp
mov
add
loope
mov
mov
jge
in
stc
mov
popf
fsubrs
jecxz
or
in
hlt
loopne
mov
mov
mov
je
cmp
sub
out
call
daa
push
cmp
cmp
stos
jne
adc
inc
sbbl
test
jecxz
sbb
jae
movsb
push
test
inc
or
and
or
or
loop
mov
mov
jo
out
test
mov
pop
pop
shrb
mov
adc
sbb
cmp
sbb
sbb
xchg
xor
add
mov
push
sbb
dec
out
sbb
xchg
shlb
ljmp
movsl
cmp
mov
xlat
sbb
lret
xchg
es
lcall
hlt
jae
sbb
movsb
xor
cmc
ljmp
or
movsl
cmp
sbb
movsb
mov
mov
sbb
jg
pop
lea
rolb
enter
mov
dec
adc
dec
push
lds
cld
xchg
dec
inc
fucomp
sub
add
jnp
push
mov
popf
in
push
aas
jbe
aaa
shl
push
mov
dec
xor
adc
jge
fsubrl
push
pop
cltd
xchg
mov
daa
cmpsb
push
mov
or
or
and
or
fistpll
cmpsb
fisubrs
mov
icebp
negl
outsl
xor
mov
in
loopne
push
pop
in
fstps
hlt
test
jns
adc
scas
jbe
movsb
mov
rcll
sub
movlps
sub
test
xchg
pop
dec
mov
jg
clc
in
xchg
sbb
popa
pop
inc
sti
push
dec
addb
test
fwait
xor
inc
mov
bound
mov
fistpll
jne
or
ficoml
or
sahf
jecxz
xchg
cmpsb
rcll
xchg
addr16
pushf
jge
xchg
mov
stc
pop
add
pop
ret
ljmp
inc
push
fldcw
out
pop
pop
dec
mov
pop
and
rolb
js
or
lcall
mov
fwait
mov
lahf
loopne
xchg
mov
push
pop
rolb
inc
test
push
jp
push
cs
popf
add
push
add
jno
mov
add
push
into
adc
and
xchg
cwtl
mov
pop
outsb
xchg
mov
lds
enter
push
out
je
jbe
std
mov
movsl
mov
inc
stc
roll
fadd
cmp
sbb
pop
mov
out
je
mov
aaa
int
je
mov
ret
test
iret
pop
call
pop
jne
and
adc
outsb
pop
cmp
stc
fs
addl
outsl
divl
fidivrs
cmp
bndstx
out
adc
mov
or
push
lcall
pushf
out
insb
ljmp
adc
mov
cmp
nop
js
mov
insl
sti
adc
jb
push
aad
dec
or
jmp
cld
mov
daa
std
push
pop
cmp
subb
arpl
jle
sahf
or
pop
popf
add
cmpsl
jnp
mov
lds
icebp
lock
inc
xchg
loopne
jl
daa
adc
popf
lcall
aas
in
jb
loopne
jmp
jnp
iret
setbe
cmp
mov
movsb
mov
je
fcompl
cli
jle
negl
xchg
es
test
push
dec
inc
cmc
mov
int3
mov
aad
mov
add
cmp
pop
out
and
lds
lcall
rclb
les
mov
lret
js
dec
call
insl
cs
arpl
push
pop
cld
jg
dec
cmp
imul
sub
hlt
dec
jp
sti
imul
dec
dec
test
test
mov
cmp
adc
sbb
or
in
mov
cwtl
sub
icebp
xchg
mov
mov
testl
sbb
jg
mov
mov
push
ss
in
imul
jbe
bound
data16
repnz
ret
dec
stos
aaa
push
jge
call
or
hlt
mov
andb
jecxz
int
imul
ficompl
cmpsb
stos
pop
inc
cmp
sar
iret
test
movsb
mov
int
outsb
fs
lret
mov
fsubl
jo
sbb
push
cmpxchg
fwait
sbb
xor
xor
mov
pop
pop
pop
xchg
mov
jmp
insl
mov
fsub
clc
mov
mov
cmpsl
imul
call
pop
mov
clc
adc
les
cmp
fcomi
mov
fldl
jg
sti
fsubl
xor
jge
fmuls
mov
insb
adc
sbb
xor
mov
or
adc
fsubrs
in
sub
rcrb
out
push
stc
fmull
fadds
test
stos
dec
lds
xchg
out
push
popl
dec
neg
xchg
and
arpl
push
jmp
shlb
iret
cmp
xor
jecxz
out
pushf
inc
mov
fwait
mov
aaa
mov
cmp
mov
rcrb
cmp
aas
mov
loope
pusha
divl
push
cmp
cmp
mov
or
sbb
stos
and
inc
sbb
imul
jo
xor
push
cmpsl
js
iret
sbb
add
xchg
out
insb
push
jg
jecxz
cmpsb
fstpl
aas
jge
stc
lock
in
subl
cmpsl
cmp
repnz
mov
xor
mov
in
and
adc
not
or
call
mov
xchg
frstor
push
add
subb
mov
fs
inc
jmp
mov
xor
div
popl
outsl
pop
adc
stos
cmpsb
mov
add
jb
mov
jp
mov
scas
pop
loopne
fisttps
add
out
pusha
je
cmp
pop
inc
lcall
mov
sub
enter
inc
pusha
push
adc
add
lret
jb
cmc
fsubrs
pushw
divl
arpl
jp
cld
jg
pop
dec
subb
or
jge
xchg
add
sub
popf
testl
jle
test
sub
scas
xchg
or
xchg
outsl
xlat
nop
sbb
xlat
fsubrl
bound
ljmp
fcomps
mov
jg
das
sbb
ds
movsb
rclb
and
cmp
xchg
fildl
out
scas
dec
and
inc
push
repnz
movsl
or
test
pop
pop
push
sub
xchg
mov
out
shl
mov
sub
or
repnz
mov
scas
out
jl
rcrl
inc
test
std
dec
xor
fsub
mov
movsl
sub
data16
mov
jl
fwait
xlat
dec
fnstsw
ret
and
ret
push
sub
andb
shlb
adc
xchg
pop
cmp
pop
cmp
inc
jg
jge
add
mov
idivl
cwtl
ja
mov
push
and
push
mov
ficoms
fstl
in
in
mov
shrl
mov
popf
and
pop
inc
mov
jge
xchg
push
sub
jns
push
mov
add
lret
sub
xchg
dec
sahf
ds
loope
jnp
lcall
fstp
mov
addb
in
aas
not
jb
cmp
mov
cs
mov
push
cmp
out
ja
je
lods
out
cmp
adc
cwtl
js
dec
ret
pop
or
daa
jp
cmp
xchg
mov
jnp
test
adc
jnp
mov
mov
pop
mov
push
xor
jns
pop
cwtl
stos
fs
cmc
loop
int
add
daa
mov
xlat
adc
popa
mov
xchg
mov
insl
mov
jecxz
cmp
mov
fsts
inc
jne
leave
loope
stc
jmp
lock
out
adc
ss
mov
dec
push
xor
jmp
pop
sti
movb
adc
imul
push
push
or
sub
stc
lods
or
lods
adc
jge
adc
sub
outsb
jecxz
leave
jecxz
xchg
out
aas
dec
add
inc
dec
mov
xchg
or
inc
cwtl
inc
call
and
fldl
ja
xor
jae
xchg
lods
mov
loop
loopne
xor
leave
jl
daa
mov
pop
cmp
or
xchg
sub
mov
add
push
push
int
push
loopne
mov
mov
xchg
adc
sub
fists
pusha
push
jnp
pop
dec
xchg
outsl
clc
push
jecxz
pop
jmp
and
rcl
xchg
xchg
push
aam
aas
mov
out
xor
into
and
stos
push
shlb
aaa
repnz
cli
lret
into
adcl
mov
push
pusha
pop
fisubrl
jl
jbe
pop
mov
adc
test
jns
dec
cli
mov
or
lock
cld
call
xrelease
out
xor
push
mov
sbb
test
iret
sti
cwtl
sbb
inc
push
ret
scas
push
and
cmc
jns
push
out
arpl
int
movsl
enter
push
xchg
and
int
jmp
fmull
loope
dec
cs
int3
lds
mov
dec
fsubs
pushf
test
in
clc
mov
adc
xor
ds
push
test
int
jg
ret
mov
fs
inc
fstps
adc
xchg
xor
mov
xchg
scas
call
xchg
push
ret
xchg
mov
xchg
into
in
test
sahf
lds
rcrl
mov
jb
cmp
iret
loop
lahf
aas
nop
fimuls
xchg
jne
inc
inc
pop
cld
fmuls
subl
cmp
cmp
aas
mov
icebp
jp
leave
into
inc
pop
push
or
sub
xor
shl
shl
mov
inc
mov
aam
adc
push
test
jno
neg
push
and
xchg
lret
dec
jl
shrl
ljmp
push
repnz
les
or
inc
add
xchg
dec
adc
pop
arpl
std
push
sub
and
mov
adc
inc
lret
std
test
fwait
test
add
ja
xchg
in
in
arpl
mov
mov
loopne
aam
pop
add
fadd
jns
adc
jmp
daa
dec
jno
lods
movsb
mov
cmpsl
ds
roll
cmc
int
add
out
mov
imul
loop
mov
fwait
push
sub
lea
mov
or
int
cli
pop
imul
cmpsl
mov
mov
jle,pt
movsl
popf
cli
jg
dec
push
popa
jecxz
adc
inc
xchg
mov
dec
xchg
icebp
fs
sub
push
push
or
xchg
mov
andl
fwait
mov
pop
adc
mov
sub
push
icebp
xchg
sbb
js
mov
mov
shl
ss
imul
xor
movsb
jmp
jle
push
loopne
push
fildl
adc
vorpd
dec
scas
adc
stos
aaa
sti
arpl
jp
dec
or
push
lods
fisttps
ret
jmp
leave
loopne
pop
call
enter
adc
xlat
mov
cmpsb
or
jbe
lds
mov
mov
lret
cmpsl
lock
mov
fildll
adc
sub
jp
mov
int3
jo
and
lcall
decb
daa
cwtl
sbb
push
lret
sub
aad
fstpl
xor
mov
repz
push
cmp
loope
int3
insb
dec
int
je
pop
add
mov
cmp
mov
inc
imul
xor
xor
mov
daa
and
pop
dec
jns
shlb
imul
mov
popf
clc
cmp
call
ja
mov
das
stos
sbb
shlb
mov
fdiv
mov
shll
scas
lods
aad
pop
jno
sti
push
pushf
cs
pop
push
out
inc
add
scas
sbb
inc
adc
lcallw
sub
push
jl
test
push
pop
arpl
mov
push
mov
pop
mov
jl
mov
lods
hlt
jge
lock
pop
push
jp
fists
fsts
bound
cmpsl
xor
ds
push
add
ljmp
jmp
stos
roll
aaa
mov
sarl
or
jge
jnp
fsubr
push
mov
dec
loopne
pop
fistps
push
test
call
jae
jmp
sbb
shrl
push
repnz
pop
cli
scas
scas
fsubrs
pop
lret
jne
fadds
lds
fsubs
out
mov
gs
cmp
or
jmp
and
ja
out
push
inc
mov
xor
sbb
mov
adc
xor
fldenv
add
xlat
inc
dec
in
test
jp
mov
jmp
push
repnz
adcl
jp
mov
adc
rolb
mov
test
in
enter
negb
xchg
inc
iret
sub
and
aad
jge
out
mov
pop
push
adc
daa
jbe
push
adc
mov
stos
push
xlat
adc
mov
jle
mov
ss
daa
cli
fnstenv
test
and
int3
loop
bound
das
jmp
dec
cmp
sub
aaa
jmp
mov
dec
dec
out
ljmp
ja
mov
fnclex
lods
push
and
clc
dec
les
iret
and
cld
cltd
lds
xlat
mov
pop
and
sbbl
jg
mov
pop
add
repnz
mov
lahf
add
cmp
and
insb
or
scas
jmp
jno
add
leave
ljmp
adc
arpl
add
adc
movsl
mov
clc
adc
hlt
cmp
sbb
pop
mov
popf
push
lods
jo
cld
mov
call
jmp
and
scas
mov
jbe
pusha
test
mov
fwait
popf
xlat
mov
pop
into
incb
adc
push
fs
dec
xor
stos
imul
inc
push
sbb
jecxz
adc
xor
dec
and
std
and
sub
in
aam
dec
shrb
and
adc
jp
imul
sub
dec
mov
shll
jae
pop
js
sarb
jl
test
ret
bound
xor
call
scas
add
in
lods
out
loop
xchg
movsb
aas
inc
adc
jbe
push
clc
ret
mov
sahf
cli
jg
pop
xchg
int
loope
mov
cs
pop
aas
leave
popa
mov
or
fstpl
rorb
scas
lods
pop
stos
push
int
int
pop
jmp
cmpsb
adc
out
dec
push
filds
cmpsl
adcb
jmp
pusha
pop
test
mov
mov
fwait
xchg
incl
mov
loope
sub
gs
jmp
adc
inc
into
int
sub
push
flds
push
jle
xchg
ficomps
inc
je
xchg
imul
pxor
ror
xor
sub
push
sbb
mov
inc
xchg
or
xchg
adc
pop
fwait
popf
fwait
push
arpl
mov
out
stc
test
pusha
cmp
inc
pop
jl
loopne
fwait
in
adc
add
jbe
shl
sub
mov
lcall
testb
inc
push
inc
cmp
and
dec
cmp
dec
jg
test
ljmp
lahf
jne
dec
data16
jb
sarl
aaa
jno
mov
test
outsl
mov
stc
push
mov
dec
dec
xchg
add
pop
push
in
ja
shlb
movsb
fs
sub
push
repnz
mov
lret
mov
ljmp
jbe
inc
adc
xchg
out
xchg
jp
xor
mov
push
cs
in
adc
nop
pop
adc
neg
dec
adc
jbe
adc
lds
jg
das
cmpb
out
cmp
sbb
lret
scas
push
pop
xorb
pop
sub
rcr
int
hlt
out
mov
pop
ja
movsl
xchg
scas
dec
mov
mov
mov
test
inc
aam
jp
inc
aas
mov
sub
xlat
pop
pop
cmp
out
out
push
int
pop
ljmp
ss
enter
jnp
test
inc
inc
call
pop
lcall
lcall
cmpsl
shlb
xchg
addr16
ret
js
rolb
xchg
frstor
enter
push
mov
pop
iret
and
pop
popf
add
and
cltd
mulb
or
sarb
gs
es
ret
std
pop
sar
sbb
adc
sub
aas
cmp
sar
into
clc
divl
lcall
bound
test
out
roll
imul
sbb
movl
add
loope
push
mov
and
dec
iret
sbbb
xchg
mov
xlat
notb
andb
xchg
fldt
aad
jne
mov
add
enter
adc
mov
cli
xchg
adc
pop
jmp
push
adc
stc
sbb
shlb
movsb
hlt
mov
in
or
test
and
lret
scas
and
mov
jl
add
out
sbb
inc
dec
movsl
scas
aam
mov
out
push
cmp
sbb
jb
fldcw
jg
test
sub
out
sub
dec
insl
inc
mov
lds
mov
sub
daa
jo
lods
stos
cli
cltd
pop
push
insl
imul
fisubl
and
inc
into
rclb
popa
addb
roll
data16
lods
fcomps
inc
xchg
jg
jae
outsl
mov
daa
adc
fcoml
fldcw
clc
pusha
pushf
shl
ja
mov
inc
stos
pop
push
push
jne,pn
jp
mov
sub
cmp
js
xchg
lods
mov
push
fimull
int
movsb
sbb
pop
mov
sbb
mov
xchg
leave
lret
mov
jle
jo
dec
mov
out
sahf
jmp
xchg
lods
add
les
ds
xchg
in
in
cld
inc
inc
testw
adcl
mov
fnstsw
mov
jbe
pusha
std
jae
sbb
cmp
insb
xor
and
mov
aas
and
insl
lret
mov
cmp
int
imul
cmc
inc
in
orb
push
or
and
mov
or
and
fiadds
and
sti
test
insl
add
lds
xor
pusha
push
or
mov
pop
and
jmp
pop
jmp
adc
lret
sub
jns
fisubrl
out
les
cltd
jae
test
push
pop
xchg
mov
incl
pushf
les
gs
scas
xchg
xor
adc
xor
aas
mov
xchg
and
js
scas
add
and
adc
mov
pop
mov
push
es
in
rcrb
sarl
out
push
sub
movsl
mov
mull
sbb
xor
out
push
not
xchg
inc
sahf
mov
rorb
jmp
pop
adc
xchg
sbb
in
jle
dec
jmp
pop
jmp
addb
add
sbb
ja
push
push
out
out
xorl
cmp
out
inc
fstp
pmaddwd
mov
push
push
sbb
mov
dec
fdecstp
test
pushf
cmc
xchg
mov
sar
dec
shll
cmpsl
inc
or
jmp
stos
sub
popf
xor
test
mov
jecxz
mov
hlt
movsb
sub
cs
loopne
cli
cmp
push
dec
cmc
or
push
sti
dec
mov
mov
leave
out
xchg
sub
adc
aas
mov
mov
pop
jle
stos
xchg
test
vpunpckhbw
jno
xor
lea
mov
fbld
jo,pn
ljmp
enter
rclb
ret
cwtl
idivl
es
mov
add
xchg
test
inc
pusha
repz
sti
jae
sub
arpl
call
jbe
bound
mov
xchg
mov
es
adc
mov
cmp
and
push
in
dec
jbe
aad
mov
sub
xor
push
inc
fsubrs
insl
pop
mov
xchg
andl
mov
addb
mov
mov
and
xchg
sbb
or
mov
cltd
loop
or
clc
mov
int
or
mov
xchg
int
xor
push
lea
dec
rcr
inc
aad
idiv
ljmp
mov
shlb
incb
xchg
rcll
push
xchg
xchg
sahf
inc
outsl
push
inc
lcall
stos
push
leave
adc
push
mov
jle
test
out
or
ja
lock
mov
pop
or
fists
push
jae
push
mov
cmpsb
test
test
sub
xchg
into
xor
movsl
mov
add
xchg
mov
fwait
cwtl
scas
repz
insb
mov
stc
cltd
daa
into
mov
xor
adc
adc
dec
dec
pushf
cmp
pop
loope
push
arpl
jae
xchg
mov
js
sarl
dec
movsl
int
adc
in
cmp
pusha
outsl
add
enter
lcall
in
jno
enter
xor
jo
pop
or
mov
dec
aas
xor
call
mov
dec
loop
mov
or
push
iret
or
pop
rcrb
scas
dec
jp
rcrb
xchg
and
lret
push
jbe
pushf
fadd
hlt
int
or
out
pop
je
or
outsb
push
shlb
xchg
cld
loopne
adc
out
shrl
mov
adc
mov
xor
shlb
jb
jne
lock
xchg
mov
push
dec
xchg
jnp
cmp
decl
xor
cmc
mov
loope
mov
arpl
stos
add
sbb
jle
or
add
ss
jg
mov
stos
jo
sub
add
daa
movd
mov
mov
mov
add
adc
es
adc
mov
das
insb
add
mov
lea
xor
lret
pop
mov
cmpsb
in
xor
js
jecxz
mov
jae
jecxz
mov
add
xchg
or
pop
pusha
mov
pop
jne
ror
lock
in
clc
mov
jp
mov
push
sub
cli
scas
sbb
cmp
popf
jecxz
lahf
lock
clc
in
mov
or
sarb
fistl
mov
sub
cld
arpl
das
lock
jnp
lock
adc
std
xchg
js
lahf
mov
repnz
adc
adc
ds
cmp
jnp
jg
or
jge
push
stos
decb
dec
jb
mov
int3
or
mov
outsl
sub
lods
pop
pushf
cmp
test
lds
pop
sbb
push
lods
imul
ljmp
add
enter
sbb
xchg
or
testl
jmp
sub
dec
or
lds
cmp
repnz
gs
or
repnz
dec
sub
fadd
cmp
mov
xchg
pop
inc
dec
xchg
in
sbb
es
sub
cld
call
hlt
sbb
cltd
ret
xchg
jmp
mov
movsb
mov
cmp
es
jge
cld
adc
jb
pop
loop
mov
nop
movsl
adc
shl
dec
je
fdivrs
pop
pop
mov
into
xor
ja
add
xchg
iret
jmp
add
or
dec
int3
shr
jl
inc
adc
insl
sbb
adc
roll
sbb
jp
add
jns
iret
push
rorl
subb
cmp
adc
push
dec
and
dec
xchg
in
sahf
xchg
test
lahf
or
movsb
outsl
mov
pop
xchg
cmpsl
mov
xor
in
cmc
push
hlt
push
xlat
add
pop
dec
shr
lock
mov
mov
jle
xchg
in
out
cmp
mov
lods
xchg
stc
add
arpl
adc
stc
jbe
lods
fcomps
cwtl
jb
incl
dec
push
outsb
lcall
pushf
push
push
dec
add
movsb
adc
cmpsl
ret
insl
aaa
mov
inc
stc
fldl
hlt
fwait
adc
cli
and
sarl
leave
xor
faddl
cwtl
out
add
push
sub
dec
lods
shll
sbb
pop
pop
dec
sub
js
cli
sub
cs
mov
icebp
pop
xchg
cmp
sahf
dec
pop
mov
aam
mov
sbb
in
pop
or
iret
fdivs
push
xor
in
enter
mov
xor
xorl
mov
daa
xor
popf
mov
mov
fistpl
sahf
gs
mov
xchg
out
dec
and
pop
lds
pop
cmc
inc
sbb
loop
cmp
mov
mov
arpl
pop
push
pushl
test
ss
add
cmp
mov
pop
or
daa
std
mov
mov
sub
es
lret
loopne
and
xor
idivl
lret
sarb
int3
stc
outsb
lods
xlat
cmp
push
lock
fnstcw
movsb
push
scas
jnp,pt
and
cmc
lods
jmp
outsb
es
iret
or
outsb
rcrb
xchg
mov
ret
xor
mov
mov
jp
fnsave
sbb
add
in
jl
dec
cmp
and
xor
sub
sub
pop
shl
mov
icebp
mov
jno
test
rclb
sub
std
addr16
ret
add
movsl
or
mov
xorb
stos
test
jg
out
xchg
in
pop
jge
fldlg2
insl
push
lds
xchg
data16
dec
stos
jge
movsb
mov
pushf
or
mov
loop
and
hlt
cmp
int
leave
mov
in
adc
popa
out
or
mov
fistps
fcompl
dec
or
in
mov
les
add
adc
leave
pushf
cmp
cmp
xor
jl
push
stc
test
mov
push
insb
jae
insw
inc
les
btrl
adc
leave
scas
ds
jne
imul
movsl
stos
xchg
pop
repnz
popa
inc
mov
cmp
jno
insb
mov
mov
inc
pop
and
insb
fstpt
adc
lds
xlat
jb
or
stc
das
pushf
dec
in
pusha
pop
fiadds
stc
mov
sbb
xchg
mov
out
cltd
mov
cs
dec
stos
xor
xchg
add
or
jg
xor
inc
movsb
sbb
imul
pop
pop
test
inc
mov
adc
fidivs
pop
nop
inc
cld
inc
or
and
dec
sub
xchg
imul
pop
cs
fcmovb
sarb
push
repnz
jns
in
fidivl
add
mov
imul
xchg
push
hlt
add
add
fbld
lcall
xchg
jno
inc
frndint
lea
daa
mov
or
xchg
cwtl
mov
mov
jae
xor
xlat
scas
push
dec
or
mov
push
cmp
in
add
jo
dec
xor
ja
xchg
jo
test
into
enter
movsl
jmp
inc
push
int3
push
add
outsl
jns
pop
pop
rorb
inc
ficompl
pop
mov
lret
cmp
fists
pop
add
xchg
out
xor
or
dec
mov
in
jge
gs
in
or
inc
mov
cmpsl
adc
xor
into
mov
adc
mov
outsl
in
lret
fsub
jnp
cmp
das
jno
mov
aam
stos
aaa
push
std
mov
cmc
and
lret
je
jno
xor
pop
pop
inc
aad
out
mov
inc
inc
xor
inc
out
mov
sub
xor
outsl
xor
pop
jl
mov
cmp
or
xchg
push
mov
pop
stc
lock
scas
pop
mov
fcmovbe
mov
adc
aaa
clc
inc
sub
xchg
cmp
mov
call
dec
and
aad
sub
aam
gs
fucomip
shll
mov
xchg
mov
lret
or
xor
cmp
cld
pop
aad
shlb
jne
lods
lods
in
aas
js
hlt
mov
adc
cld
scas
bnd
and
xchg
stc
adc
fsubrl
and
push
adc
jle
mov
out
inc
dec
rcr
enter
push
sbb
rclb
cwtl
sbb
sub
sub
dec
cmp
jl
roll
into
mov
inc
jp
clc
outsl
inc
sub
xorb
cmpsl
ljmp
jne
in
es
out
out
jo
dec
icebp
and
inc
jle
fsubp
xor
test
dec
mov
cmc
push
insb
orb
and
fwait
negl
mov
ljmp
dec
or
test
jg
xor
fucomip
mov
push
dec
jmp
ss
push
mov
mov
sub
scas
inc
popf
fdivrl
push
pushf
dec
enter
mov
les
push
mov
lds
cmpsb
out
jmp
int3
adc
push
das
xor
mull
pop
movsb
lods
cmpsl
icebp
movb
ljmp
mov
mov
jne
pop
fstl
push
addb
fisubrl
into
mov
shll
enter
xchg
loop
and
movb
xor
push
ss
sub
dec
mov
fstpl
outsb
ret
jl
xchg
pop
jmp
sub
into
jg
and
mov
lock
or
fnstsw
dec
adc
adc
movsl
aad
in
mov
or
ds
fidivrs
push
push
out
push
lea
jns
pop
pop
inc
jns
mov
nop
in
into
inc
pusha
call
mov
shll
sub
and
scas
in
jg
mov
mov
or
dec
jo
mov
jno
cmpsb
cli
add
xchg
negl
cli
push
push
xor
xchg
pop
fdivrl
add
test
xchg
outsb
push
inc
and
ss
es
ret
sub
adc
and
jle
imul
mov
sbb
mov
mov
gs
dec
icebp
sub
mov
insl
cmp
lret
sbb
fsubr
push
xchg
xchg
sub
xor
or
sub
bound
jne
sbb
into
pusha
outsl
int
dec
es
pop
imul
nop
dec
jns
out
xchg
push
jae
pop
lret
fucomip
outsb
in
xchg
jo
jp
enter
int3
jno
rorl
mov
fwait
adc
jo
test
fdivrp
stos
dec
xor
sbb
sbb
add
js
jae
das
jge
in
pop
xchg
sub
pop
dec
cld
cs
pop
adc
out
push
in
aaa
or
mov
dec
mov
fistps
jmp
and
in
inc
sbb
sar
push
and
shl
insl
pop
jbe
addr16
clc
mov
pop
mov
push
adc
mov
sahf
jecxz
lea
cwtl
in
pop
cld
xchg
sub
loop
mov
movsb
int
les
add
dec
push
inc
adc
pop
adc
jge
push
or
pop
pop
sahf
adc
addl
orl
add
mov
aad
mov
or
sub
xor
push
cmp
jbe
fisttpll
pop
pop
cwtl
clc
xor
pop
test
lds
xlat
push
je
mov
add
fcoms
jmp
int3
adc
rorl
pop
mov
mov
es
in
mov
mov
sbb
cltd
into
push
in
mov
sbb
pop
lds
xchg
into
push
daa
mov
rcr
push
fs
cwtl
mov
lods
add
xchg
arpl
and
mov
mov
mov
imul
push
add
and
out
pop
mov
add
arpl
and
negl
adc
push
stos
arpl
dec
loop
mov
arpl
int3
shl
dec
cmp
cmp
mov
out
pop
ss
xchg
xor
popf
fdiv
pop
ljmp
pop
test
mov
data16
pop
xchg
flds
aaa
push
test
movsl
orl
add
pop
sub
fs
or
push
call
loopne
test
xchg
and
dec
and
xchg
inc
mov
and
iret
jo
call
cmc
and
dec
mov
jbe
dec
movsb
inc
lahf
pushf
sbb
movsl
int3
rorl
inc
push
xor
test
fiadds
cmp
cmp
fdivr
outsl
mov
iret
push
mov
push
loop
pop
ss
cmpsl
push
dec
xor
in
shl
push
and
adc
mov
testb
fcmovbe
dec
cmp
out
subb
mov
sti
leave
xor
cmpsl
sti
inc
or
xchg
jbe
test
mov
sbb
scas
icebp
test
in
mov
popa
fs
or
fistl
xchg
push
push
loop
mov
repz
jp
sub
shrb
in
jge
adc
nop
mov
mov
outsb
aaa
inc
cmpl
mov
mov
xor
jge
mov
or
fdivp
mov
enter
mov
jbe
in
data16
jmp
out
adc
pop
dec
mov
ja
cwtl
dec
push
cmpl
cli
cli
sub
inc
push
push
enter
aas
xor
add
into
call
shll
imul
dec
and
pop
les
daa
cmpsb
and
sub
jnp
js
mov
scas
arpl
into
in
sbb
inc
xchg
mov
xchg
adc
adc
xor
movb
cmp
rdpmc
lods
hlt
insb
ret
jns
sub
sub
imul
lret
pop
and
test
bound
into
jo
rolb
pop
lahf
dec
imul
mov
lret
and
push
xchg
decl
addl
hlt
xchg
xchg
loop
jns
sbb
arpl
cld
inc
add
arpl
loopne
jno
bound
frstor
cmpsl
sahf
push
adc
out
xlat
leave
adcb
jns
pop
sbb
jmp
loope
mov
mov
push
sbb
leave
std
and
mov
cmp
rorl
fcompl
and
dec
jbe
in
and
cmc
push
cmpsl
push
test
aad
subl
leave
jbe
xchg
xchg
sbb
mov
rorl
cs
aad
mov
jns
ljmp
fsubrs
push
ja
xchg
mov
stos
cmp
sub
fmuls
inc
addr16
iret
jne
mov
fxch
push
rcl
pop
aaa
cmp
repz
jmp
bound
addb
mov
push
jmp
mov
jg
jnp
arpl
fnstcw
in
jae
in
test
jmp
mov
mov
push
dec
mov
scas
rorl
xor
pushf
sub
cmpsb
out
jge
xchg
outsb
push
aas
punpckldq
xchg
mov
aaa
dec
jo
push
xor
adc
sub
repnz
cmp
shl
loope
xor
cmp
xchg
xor
push
sbb
add
pushf
xlat
mov
das
xchg
aam
jg
jge
and
inc
dec
stos
mov
mov
mov
fdivl
scas
leave
add
push
push
xchg
bound
push
pop
shlb
cmp
add
sub
repz
cmp
stc
lds
ljmp
jne
fs
and
xchg
or
mov
inc
xchg
sub
or
sbb
push
mov
add
pop
ror
fstps
sbb
and
add
loopne
dec
inc
sbb
mov
leave
jmp
shl
lds
call
outsl
enter
mov
jae
pusha
lea
jae
sbb
push
cmp
add
hlt
xchg
sbb
cmpsl
in
bound
cs
inc
adc
jmp
dec
pop
sarl
pop
mov
cmpb
lds
rolb
stc
movsb
lea
push
sub
fstps
dec
aam
add
in
repnz
pop
add
xchg
dec
outsl
fdivr
or
mov
les
pop
mov
fs
sub
repz
inc
cmp
fisttps
or
sbb
clc
push
clc
aad
pop
dec
in
ficomps
ss
mov
call
test
inc
loopne
jmp
cmp
lods
mov
xor
adc
das
lock
dec
jl
fwait
push
gs
fcomip
fmuls
adc
cmp
push
pop
imul
jae
dec
in
out
push
inc
mov
cmp
les
insl
mov
addr16
inc
es
mov
pop
insb
inc
mov
mov
xchg
xor
push
pop
mov
stc
adc
nop
cmp
movb
scas
pop
aad
test
lahf
mov
push
std
pop
out
ljmp
adc
adcl
nopl
fnstcw
dec
adcb
and
xchg
cmpsl
and
ds
adc
pushf
sti
notl
icebp
test
pusha
fisttps
sub
stos
inc
mov
pop
test
sbb
jmp
xor
iret
rcll
mov
fstl
pop
mov
dec
dec
and
mov
lock
mov
into
xchg
xor
aam
fs
add
cltd
add
mov
cmc
scas
lock
aas
mov
fldl2e
mov
xchg
inc
pop
out
sub
mov
ss
dec
mov
push
inc
fistps
in
and
push
lahf
add
subb
rol
adc
test
mov
jb
cmpsb
xchg
leave
mov
adc
mov
in
cmpsb
fimuls
in
test
je
insl
subl
cmp
jno
fwait
int3
dec
jne
or
mov
push
jmp
addr16
mov
or
fildl
lret
clc
mov
pop
movsl
in
pop
xlat
nop
lcall
jbe
mov
das
adc
stos
push
outsl
fsubrl
jg
cmpsb
cmp
fcmovb
jg
add
es
into
push
adc
cltd
jae
ljmp
and
scas
xor
xor
sbb
std
lods
dec
sahf
push
test
enter
addr16
adc
std
dec
subb
and
test
pushf
mov
cmp
lock
stos
in
pop
mov
stc
jns
cmp
ret
add
stc
or
adc
call
repz
outsl
loop
cwtl
adc
outsl
in
dec
jg
lods
aad
adcb
inc
xor
test
jecxz
leave
jg
in
rcl
outsb
fmul
push
gs
repnz
or
movb
mov
test
gs
scas
call
lret
cmp
lret
jns
dec
out
imul
push
out
inc
mov
popf
pop
push
notl
sbb
es
pop
or
rcrb
sti
xchg
pop
ljmp
pusha
shrl
xor
rol
add
je
dec
sar
mov
fimuls
sub
mov
sub
and
rcll
xor
pop
and
in
or
mov
sub
push
test
push
shlb
test
fwait
cmc
test
xchg
push
sar
sahf
insl
mov
sub
divl
sahf
push
cmpsb
test
sub
sub
xlat
aas
inc
adc
jmp
insb
dec
inc
push
mov
xor
jp
mov
cmp
pop
xor
or
fadd
push
xor
scas
xchg
lret
fmul
mov
mov
aam
push
enter
dec
stc
xchg
insl
xchg
cmc
mov
mov
movsb
add
sbb
cli
push
sub
push
jb
lret
test
andl
jb
pop
xchg
out
push
aaa
ret
daa
outsl
mov
clc
jnp
mov
and
sub
xchg
add
sbb
roll
fst
cmpl
sub
aad
dec
sub
sub
jp
mov
cmpsl
outsl
sub
xchg
pusha
les
leave
xchg
mov
imul
sbb
add
jne
lret
cli
dec
push
xchg
jnp
in
insb
leave
and
stos
or
hlt
xchg
jo
pop
shl
pop
mov
pop
inc
jo
jo
adc
mov
adc
pop
sbb
std
iret
jno
cmpsb
mov
dec
lods
sbb
decb
mov
icebp
mov
dec
xchg
and
cmovle
mov
push
stc
xor
test
lds
in
mov
mov
enter
xchg
mov
push
aam
std
daa
repz
mov
adcb
int
or
adc
fmuls
arpl
push
mov
enter
popa
ljmp
pop
cltd
sub
rcrl
xor
and
and
inc
popf
or
xor
ds
mov
adc
add
mov
shl
and
stos
and
sub
into
sti
push
jbe
mov
outsb
push
mov
jae
jns
es
lea
adc
xchg
mov
das
nop
movsl
or
pop
int3
aad
in
aas
add
mov
xchg
adc
lret
inc
rolb
xor
mov
test
scas
push
push
push
lea
aas
test
pop
dec
cld
mov
negl
add
cmpsb
sbb
adc
iret
fcom
inc
pop
in
mov
in
insl
leave
in
and
jb
scas
cmp
jecxz
jae
les
imul
jmp
sub
arpl
in
mov
pop
pop
outsl
fimull
loope
dec
aas
and
adc
cmp
push
das
push
sub
in
cli
sbbl
and
lock
dec
in
fwait
cmpsb
add
in
lods
sub
sub
mov
pop
adc
movsb
and
gs
or
cmp
sbb
cmc
sub
or
adc
pop
daa
aaa
push
xor
mov
add
sbb
ss
in
xor
fwait
sbb
add
mov
shlb
mov
dec
clc
mov
adcl
scas
sub
and
or
mov
jbe
xor
mov
dec
and
fs
dec
decl
dec
shrb
loopne
xchg
jp,pt
rol
icebp
or
push
and
mov
add
mov
jo
stos
loopne
shll
and
mov
mov
je
push
fsubl
mov
push
xor
das
hlt
pop
aam
rorb
in
or
push
mov
lods
gs
fstps
fstl
push
mov
test
cmpsb
add
sbb
fmuls
mov
or
push
scas
lods
dec
jle
shrb
das
insb
dec
cmc
int3
aad
rcll
push
pusha
repz
add
pop
iret
jmp
cmp
mov
divl
pop
push
jbe
shll
push
dec
leave
lret
push
and
or
test
fiadds
insb
xchg
adc
lret
mov
xor
in
aaa
std
sub
mov
sub
cld
lds
push
test
inc
sbb
imul
or
bound
mov
loopne
inc
inc
repz
push
dec
repz
jl
fisttpl
hlt
jmp
and
sti
repnz
mov
cwtl
cmpsb
rcrb
mov
loope
into
mov
dec
push
fdiv
mov
in
xchg
in
or
xor
push
pop
dec
stc
dec
jmp
adc
jmp
pop
enter
repz
or
dec
lcall
sbbl
mov
xchg
dec
pushf
lods
mov
int
adc
cmpsl
outsl
aaa
sub
jecxz
cs
rorl
mov
mov
adc
push
and
mov
sub
lock
push
and
insl
xchg
je
push
xchg
imul
mov
lret
ret
inc
xchg
mov
nop
lret
cltd
mov
arpl
inc
out
jb
out
pop
dec
popf
imul
xchg
hlt
mov
mov
lahf
or
push
push
dec
out
sub
in
mov
cmp
mov
fisubrs
movl
cld
mov
xchg
sbb
jnp
loopne
push
push
adc
lock
bound
dec
ds
push
aaa
jb
rorl
cmp
mov
push
sbb
push
sub
hlt
jge
sbb
test
cmp
pop
adcb
lret
jl
sub
xlat
gs
xor
mov
andb
fs
sahf
shl
jne
in
rcrb
mov
sub
sti
jbe
loope
pop
or
mov
int3
pusha
pop
out
cmp
sbb
inc
cmpsl
ljmp
sbb
ret
mov
int
pushf
cmp
mov
xchg
mov
call
cmc
xchg
add
dec
rcl
test
pop
fs
cli
sbb
test
inc
sarl
or
jecxz
mov
cmp
orb
mov
fnstsw
push
mov
pop
jmp
mov
data16
jg
fisubrs
xor
jbe
cmp
add
movsb
sbb
scas
or
inc
jo
in
imul
xchg
jg
sub
xchg
inc
mov
fmuls
mov
sahf
in
int
lock
xchg
push
es
mov
leave
mov
jle
dec
inc
je
sbb
ficompl
pop
xchg
push
stc
mov
movlps
xor
dec
lods
jecxz
lret
fidivl
xchg
pop
test
xchg
and
jbe
and
mov
and
jg
outsb
int3
imul
adc
lcall
in
aam
mov
in
sahf
jg
test
fmull
adc
mov
aam
add
adc
bound
fs
mov
shrb
xchg
sbb
push
xchg
fbld
ret
inc
aas
fnstenv
and
mov
xor
jge
push
and
incl
cld
in
sti
fwait
outsb
push
enter
insl
lret
or
sbb
jmp
je
jge
fists
and
fwait
jp
sub
mov
fdivs
fildll
jo
fbld
outsl
sbb
les
pop
cmp
inc
adc
int
push
pop
adc
or
push
pop
je
aad
dec
rol
je
notb
icebp
jle
fisttps
mov
fdivrl
aas
mov
add
inc
filds
in
sbbb
inc
frstor
repnz
sbb
outsl
push
enter
mov
push
into
cmpsl
lea
icebp
jnp
push
jmp
shrb
fcomip
mov
mov
test
jnp
add
clc
ret
rcrb
and
mov
dec
mov
cmpsl
cmc
lds
cs
cmp
in
lret
imul
outsb
add
ljmp
js
fstpt
cmp
mov
cli
cmp
sub
movsl
pop
icebp
cltd
push
cmp
mov
xor
ds
stos
pop
lret
outsl
std
push
xor
sub
xchg
sub
and
ret
cmpsl
adc
xor
cmpsl
jno
sahf
pop
pop
push
mov
movsb
int
jae
mov
sbb
je
aas
mov
push
das
dec
pop
out
in
mov
int
xchg
bound
sbb
jge
adc
push
int3
test
xorb
xchg
aas
iret
push
outsl
jg
mov
xchg
push
aas
fsubl
sub
and
fldenv
movl
add
outsb
frstor
call
gs
mov
xchg
in
into
dec
jg
mov
xchg
jbe
sub
loope
inc
stos
push
jg
fdivr
es
fnsave
add
hlt
mov
dec
pop
clc
mov
ficompl
test
pop
frstor
add
push
lahf
dec
fs
lds
dec
inc
mov
shrb
dec
push
jmp
daa
lods
js
xchg
fmuls
xor
cmp
stos
jmp
jb
sahf
push
push
iret
cmpxchg
fnstcw
pusha
call
mov
mov
mov
ja
ja
push
out
out
inc
and
out
jmp
rcr
sub
addr16
and
cmp
xor
push
lahf
divb
ss
lahf
scas
cli
test
ds
pushf
jo
jo
shrb
sbbb
rclb
ret
add
dec
push
adc
xor
and
pop
arpl
ja
stos
shl
popa
insl
pop
inc
lods
bound
push
int
aas
push
ret
jp
pop
adc
jmp
jbe
jp
mov
jbe
adc
xchg
test
pop
andb
jle
pop
stos
movsb
mov
dec
add
cmp
pop
jl
jge
pop
popa
ds
cld
pop
arpl
out
dec
stc
aad
push
jbe
jle
icebp
mov
fists
jp
inc
dec
xchg
inc
lods
adc
cmpsl
xor
jae
pop
or
fdivr
mov
outsb
out
cltd
cli
lds
jnp
mov
ret
pop
stos
cld
dec
jae
xchg
aas
mov
add
sbb
loop
push
cmp
dec
lods
out
lds
js
jnp
cld
push
xchg
mov
cmp
stos
inc
mov
jb
mov
loope
daa
fstl
out
adc
dec
mov
mov
and
cmp
iret
dec
es
mov
cmp
sbb
bound
push
sub
aad
ss
adc
icebp
ljmp
mov
mov
mov
mov
or
add
push
mov
and
cli
xchg
test
jbe
xchg
nop
jge
stc
test
stc
pusha
adc
std
mov
xor
sti
pop
orl
loope
addr16
and
sub
mov
daa
test
xor
add
push
in
xor
cmp
and
fwait
test
adc
test
or
dec
test
out
pop
or
jnp
and
jl
sbb
lret
bound
adc
bound
andl
jl
mov
test
adc
call
push
or
mov
fisubl
out
lcall
push
cmpsb
das
or
and
mov
in
push
int
sub
test
sub
pushf
mov
cmp
nop
int
xchg
lea
outsb
xor
stos
push
sbb
add
call
push
inc
add
insb
mov
add
cmp
dec
xchg
add
push
xor
cmpsb
incl
rorl
jle
lret
pop
cmp
ljmp
aas
jne
popa
les
mov
repnz
dec
call
mov
fstpl
das
or
sbb
aas
stos
pop
std
mull
xor
repz
ja
mov
mov
cmp
stc
push
sub
in
jno
sti
xchg
add
movsl
jmp
mov
and
pushf
mov
mov
hlt
movsb
movsl
lock
dec
pop
inc
sbb
imul
clc
lods
sbb
lret
fwait
sbb
cs
scas
movsl
jnp
lcall
bound
mov
arpl
adc
jbe
cld
push
or
cmpsl
dec
mov
pushf
xchg
and
push
ret
dec
ret
repnz
jp
ds
mov
jns
push
push
pop
sub
xchg
add
repz
sub
xchg
cmc
mov
push
loopne
jb
inc
rcrl
loop
inc
andb
pop
cmc
jge
or
add
adc
or
ret
add
xor
jge
out
add
shrb
movsl
sbb
stc
ja
sub
inc
sub
ss
mov
dec
imul
or
ds
es
cmp
jmp
dec
aas
sbb
pushf
lock
ficompl
adc
mull
data16
and
mov
jae
adc
scas
popf
scas
cmp
cmp
sbb
mov
sarb
lar
and
lods
es
int3
ffreep
shrb
les
pop
fldl
les
negl
jb
ret
push
mov
mov
ret
loope
jl
xor
ret
dec
mov
sub
test
jno
mov
sub
das
outsl
imulb
push
mov
lods
pushf
jmp
cld
add
mov
loopne
and
pop
outsl
or
and
mov
xorl
scas
push
filds
std
or
out
adc
mov
xlat
dec
addb
imul
in
mov
aas
pop
and
cmpsl
or
data16
pop
cmp
pusha
call
jo
rcll
lcall
or
jns
in
orl
je
leave
es
xchg
pop
push
xchg
pop
popa
and
cmp
aad
push
jle
xor
call
dec
iret
and
std
xor
mov
lcall
pop
les
imul
fistps
lds
sub
icebp
leave
cmp
dec
out
mov
sbb
loopne
xchg
and
jnp
imul
shlb
pushf
aad
xchg
mov
pop
jecxz
pop
fwait
sbb
fsubr
mov
orb
mov
cmpsl
ja
dec
or
push
mov
push
iret
clc
mov
jle
push
stc
inc
cmp
xor
cmp
andb
out
push
es
repnz
mov
enter
dec
mov
jecxz
ret
pusha
sub
fdivrs
shl
push
lret
je
fwait
jno
xchg
push
dec
and
imul
adc
in
pop
test
xchg
test
jae
bound
pusha
sti
fwait
lahf
cmp
adc
jg
or
subl
pushf
es
dec
pop
fnstcw
je
push
add
cmc
pop
orps
push
in
cli
popf
cmp
bound
fnstenv
adc
es
je
add
cmp
adc
mov
sub
out
inc
sbb
cmp
mov
mov
lcall
xor
out
movsl
ljmp
mov
jae
mov
and
pop
lret
rcrb
test
mov
fsubs
repnz
ret
icebp
lock
fwait
push
stos
inc
test
out
shll
push
pop
push
pop
jne
aas
adc
call
add
jae
stos
mov
adc
mov
add
aaa
sbb
ds
jnp
ds
leave
jge
test
movsl
mov
stos
outsl
das
movsb
mov
mov
jecxz
mov
call
adc
aas
hlt
lods
dec
push
mov
xor
and
fildl
adc
daa
xchg
lds
cmpl
mov
cmp
test
inc
pop
jecxz
push
and
stc
inc
adc
cs
popf
cli
cld
pop
pop
dec
lret
clc
aaa
js
and
cmp
rorl
mov
and
icebp
call
mov
scas
shll
arpl
cmp
lds
aad
std
mov
pusha
test
ss
xchg
xorl
mov
iret
dec
test
lods
sbbb
ljmp
aam
push
imulb
mov
xor
sbb
imul
test
fs
inc
out
loopne
and
sub
or
decl
sub
popf
loope
aam
rol
stos
jmp
mov
add
lods
enter
mov
fsub
jns
xchg
repnz
mov
inc
xchg
test
jl
sbb
push
cmp
and
jo
jp
xor
je
jb
and
cmp
mov
xchg
test
add
cs
fwait
movsl
out
mov
mov
stos
mov
sbb
pop
out
mov
push
dec
fsubrl
pop
or
je
jne
xor
lcall
outsb
inc
mov
pusha
pusha
add
push
lret
in
adc
out
popf
xchg
and
and
inc
fidivrl
daa
or
push
sbb
mov
jae
xchg
inc
scas
mov
dec
ja
mov
push
dec
pop
jno
in
out
dec
xchg
push
in
add
push
mov
lds
jp
jno
jmp
cli
shll
dec
ds
add
fisttpll
jmp
push
xor
or
add
fisubs
notb
mov
dec
imul
loopne
lahf
jl
jb
pop
push
lods
mov
cmp
in
mov
jle
sbbl
mov
jno
fcomp
add
or
pop
shlb
enter
fiadds
dec
fstl
push
pop
js
rolb
lock
aaa
fdivr
pop
cwtl
in
sar
inc
in
insl
cmc
add
call
aad
pushf
sbb
stos
es
push
jnp
sbb
int
outsl
push
mov
xor
inc
outsl
daa
cmpsb
jb
sub
dec
cmp
push
mov
cltd
cs
xor
push
xor
xor
cwtl
clc
mov
mov
popf
or
mov
cmpsb
loop
pop
cmp
stos
mov
imul
shlb
fdiv
or
xchg
adc
and
jmp
in
rcl
mov
cld
fldenv
in
push
inc
push
push
lods
test
into
fadds
push
mov
cld
lods
jae
imul
inc
push
jecxz
fcom
test
inc
adc
ror
jns
jge
test
xor
jae
mov
xchg
xlat
icebp
mov
push
jl
inc
or
and
adc
test
add
leave
mov
lahf
mov
inc
inc
or
lret
enter
in
fistl
fstpt
loop
fdivrs
fadds
das
out
pop
outsb
and
mov
lahf
imul
add
dec
sub
mov
movsb
call
mov
xchg
sub
loopne
mov
rcll
scas
xchg
and
imul
jecxz
dec
int
sub
mov
rcrl
or
in
ret
jp
xor
scas
push
stc
ja
std
js
xor
sub
lock
insb
outsl
imul
inc
sub
test
xor
inc
cli
pop
movsb
test
pop
mov
xchg
aas
inc
sbb
dec
or
mov
arpl
outsl
jnp
and
ret
stos
mov
insb
mov
sarb
pop
mov
inc
test
pop
mov
adc
loop
and
stc
mov
and
push
push
inc
dec
mov
sbb
sar
je
jbe
adcb
pop
push
jns
repz
or
call
in
mov
cmp
and
ss
mov
dec
xchg
dec
out
mov
xor
cmc
push
adc
add
sar
pop
out
aad
sbb
sub
mov
flds
inc
incb
and
js
jns
sbb
pop
and
fs
mov
xchg
fidivl
xor
outsl
out
mov
inc
add
mov
mov
mov
cmp
out
push
add
adc
mov
mov
daa
shll
pop
cmp
push
mov
mov
jo
or
xchg
dec
xchg
arpl
sub
sbb
jl
dec
imul
jno
inc
je
adc
nop
inc
pop
subl
push
pop
imul
or
popa
pushf
or
fbld
jb
mov
aad
les
js
movsl
and
ret
or
cmp
mov
push
push
push
mov
xchg
mov
sub
outsl
mov
push
mov
pop
ja
sub
test
push
movb
pusha
loopne
call
jle
jae
pop
loope
jmp
jbe
jno
out
cmpsl
add
mov
nop
aam
ficompl
scas
jnp
mov
mov
aas
sbb
out
shl
in
jmp
push
jmp
pop
popf
xor
push
mov
loopne
in
and
movsl
pmaddwd
adc
insb
shlb
loope
add
call
repnz
cmp
jle
mov
and
fmulp
rcrl
aas
ds
decb
das
add
movsb
mov
add
and
mov
ficomps
add
xor
dec
insl
push
test
dec
xor
daa
jnp
mov
lret
mov
rcrl
subb
lock
push
cmp
adc
xor
mov
shrb
fwait
xchg
push
shl
jle
sub
push
in
fists
xchg
cmpb
addr16
std
inc
into
in
lods
std
imull
aad
decl
mov
mov
insb
mov
leave
data16
sti
xchg
sub
mov
mov
dec
mov
dec
pusha
sar
hlt
fwait
sub
test
les
jmp
cmp
cmp
stc
outsl
imul
in
shlb
cltd
adc
outsb
mov
sub
sbb
jl
int
cld
sub
and
stos
out
mov
cmovne
shl
xchg
test
out
or
inc
mov
rcrb
mov
pushf
jmp
fsubrs
mov
cmp
cmp
mov
sub
lods
cli
xchg
lea
pop
je
or
dec
mov
add
push
rolb
loopne
push
aas
mov
cmpsl
je
cmp
push
out
imul
pop
mov
jp
mov
fidivs
arpl
push
mull
cmp
mov
fiadds
ret
mov
addl
dec
sub
mov
push
sbb
cmp
push
leave
int3
je
cmp
push
pushf
scas
dec
ret
push
scas
mov
cmp
inc
push
fstpt
sub
jae
jae
xchg
das
ds
les
mov
mov
out
imul
sub
ret
inc
stos
pushf
insl
fistl
sub
in
and
or
add
ret
and
ficoml
inc
or
xor
jnp
mov
cli
adc
test
std
xor
sahf
cmp
or
add
fstpl
sub
add
xchg
push
lock
dec
in
dec
popf
fwait
mov
sub
pop
inc
jle
jmp
ss
sbb
mov
rcr
push
movsl
lahf
cmp
insb
fucomi
cmc
mov
mull
or
jo
xchg
test
addr16
filds
dec
push
add
or
popf
aaa
pop
cmp
popf
jo
xor
mov
xor
adc
arpl
mov
inc
out
out
adc
faddp
push
mov
sarl
scas
das
in
mov
movsb
addr16
push
imul
cmpb
push
jg
sti
add
mov
jmp
dec
push
rolb
lret
daa
pushf
mov
pop
lods
movsb
lods
fcmovnu
cmp
push
xchg
pop
lock
movsl
cmp
data16
inc
divps
sbb
fstpt
add
jecxz
inc
les
push
sbb
sub
cmpsb
enter
xor
shlb
jb
pmulhw
imul
mov
cmp
push
fildll
test
lahf
std
test
aaa
or
xchg
pop
or
lcall
ja
push
daa
imul
dec
outsl
out
cmc
sbb
lcall
lods
push
jmp
fs
adc
pop
cmpsl
repz
mov
adc
aam
jmp
sbb
daa
das
loope
test
mov
lods
mov
mov
repz
cmc
cli
test
jecxz
xchg
dec
sbbl
add
jns
pop
mov
lds
pop
push
cmpsb
jns
das
imul
push
pop
pop
adc
mov
jne
nop
ss
dec
pop
ds
xchg
push
inc
xchg
inc
pop
and
jae
testl
xchg
mov
bound
sub
lods
lods
stos
or
stos
ja
sti
cltd
les
mov
mov
pop
ss
hlt
or
lods
mov
cwtl
mov
mov
xor
ret
shlb
cmpsl
fidivrs
cmpsl
pop
jbe
lret
xlat
pop
shrb
sub
xchg
pop
mov
pop
mov
movl
out
gs
popa
pop
dec
cltd
sti
sahf
jne
pop
stos
xor
mov
repnz
aad
jg
sub
sbbl
popa
inc
adc
scas
pop
or
dec
das
push
mov
cwtl
dec
mov
ret
xchg
cmp
sbbb
adc
mov
push
nop
cmpl
mov
xor
mov
dec
neg
and
cmp
out
sub
xor
xlat
mov
test
mov
int
ljmp
cmpsb
push
rorb
dec
mov
mov
mov
inc
xchg
dec
push
les
insb
mov
out
in
mov
into
aaa
movsl
addb
orl
int3
rclb
sbb
jnp
fildll
movsl
aad
push
lock
mov
jecxz
or
push
mov
adc
clc
xlat
fld
and
sub
fdivrs
add
hlt
or
pusha
or
aaa
push
mov
fld
fs
cmc
jbe
or
inc
or
loop
fs
lcall
adcb
dec
adc
and
rorl
test
dec
inc
pop
fnsave
fcoms
mov
lock
and
xchg
jb
inc
les
jno
cli
fidivrs
call
cmp
inc
fadds
push
push
daa
or
movsb
mov
push
adc
xchg
cmp
fdivrl
cmpsl
mov
push
cmc
mov
xchg
pushf
mov
insb
add
and
sarb
loop
pop
mov
inc
fwait
adc
nop
jp
sahf
sub
jns
pop
jne
push
add
sbb
scas
push
push
jl
mov
int3
fmull
cmp
xchg
dec
xor
push
rep
adc
ja
jo
inc
sbb
dec
push
mov
aas
pop
mov
out
cltd
int
arpl
mov
adcl
mov
out
pop
outsb
stc
nop
mov
idivl
pop
jle
add
cld
jnp
pop
pop
addr16
and
int
imul
jo
lret
jle
fstl
pushf
negb
orl
ror
push
repz
sbb
aam
jo
and
sahf
or
xchg
arpl
stc
push
cs
xchg
pop
mov
lds
out
pop
hlt
inc
mov
xchg
ja
dec
repz
pop
imul
lret
push
lahf
daa
movsb
popa
divl
cmp
or
adc
push
aaa
push
add
xor
mov
adc
push
sar
lods
fidivs
lds
int3
scas
sbb
das
xchg
ljmp
sub
mov
dec
and
push
mov
pop
jle
js
inc
push
ja
sahf
ds
stc
jge
adc
out
js
rcrb
or
out
pop
loop
loop
add
insb
leave
lods
and
xchg
pushf
mov
mov
hlt
cmp
pop
adc
push
mov
dec
jne
outsb
in
cltd
add
cli
inc
notb
inc
shlb
pop
or
stos
jge
add
leave
mov
js
mov
ror
lods
push
aam
repz
adcb
sbbl
out
mov
jne
popl
das
je
hlt
jbe
stos
xchg
popf
cmp
repnz
iret
ja
dec
or
mov
pop
daa
ljmp
pcmpgtb
cs
notl
xor
rol
je
mov
sub
fstpt
push
and
adc
lock
xchg
jmp
push
push
test
or
ljmp
push
shll
jns
cs
movsb
jecxz
dec
inc
dec
int
and
popa
fisttpll
ljmp
inc
and
mov
adc
sub
sub
leave
dec
or
arpl
cmpsb
and
cwtl
js
rclb
inc
out
lret
xchg
push
xchg
fisubs
cli
in
pop
mov
xchg
inc
pushf
lods
mov
pop
shrb
in
mov
lret
shll
aad
sub
inc
mov
inc
out
mov
es
scas
les
pop
mov
sbb
mov
decl
pop
ja
jnp
fmul
bound
mov
cmc
pop
into
and
out
lret
xchg
jno
js
lds
test
cmpb
es
lock
jno
mov
je
addr16
lds
into
lea
idivl
and
andl
sarb
mov
inc
dec
xor
and
scas
or
out
xor
ret
or
sub
out
mov
test
int3
pop
orb
mov
mov
out
std
cmpsl
mov
sub
push
aad
insb
jmp
pop
jnp
cs
inc
dec
je
negb
stos
dec
pop
mov
enter
jl
xor
mov
inc
cmpsl
gs
and
sbb
mov
mov
fadd
lock
testl
pop
xchg
stc
std
add
mov
mov
rolb
and
scas
push
andb
push
jns
inc
cmc
shll
mov
pop
orl
cmp
arpl
xchg
or
adc
mov
add
xchg
gs
shr
jg
jae
test
push
mov
lahf
jbe
mov
ds
cmp
and
ljmp
call
imul
add
sbb
xchg
loope
sub
mov
sti
sub
and
stos
inc
ret
cmp
mov
popf
lcall
add
cmp
add
sub
call
out
jb
push
outsl
push
xchg
test
mov
jle
add
and
movsl
jmp
add
arpl
add
adc
popf
pop
push
jg
imul
mov
adc
lahf
jnp
dec
or
jge
pop
jl
iret
das
jbe
cmp
dec
stos
cmp
inc
rolb
or
icebp
mov
mov
stos
insb
inc
dec
lahf
cli
arpl
push
in
or
mov
ja
movsl
cmp
pop
cli
pop
dec
and
call
movsl
mov
xor
int
outsl
adc
loop
je
inc
dec
jle
push
stos
inc
fiadds
pop
ja
hlt
imul
jo
mov
imul
adc
sub
into
sbb
shll
rol
movsl
adc
ds
aam
and
pop
sub
shr
pop
fistpll
mov
cmpsl
or
stc
push
je
ss
cmp
jle
mov
mov
dec
lcall
jo
aad
sbb
mov
lock
jns
lods
or
xchg
cmpl
pop
fdivrs
mov
pushf
cmp
pop
mov
inc
xor
sub
add
or
dec
js
insl
adc
imul
jecxz
fnstcw
xchg
pop
adc
scas
dec
fs
pop
in
mov
mov
cwtl
aaa
xchg
mov
cmpsb
push
inc
or
popf
and
dec
sub
cmpsb
ret
and
pop
push
movsb
es
cmp
pop
dec
ds
push
xchg
pop
loop
cmp
add
mov
mov
iret
inc
mov
jge
fisttpl
xchg
inc
and
lahf
test
jno
out
cltd
arpl
cmp
repnz
loop
mov
popf
scas
shrl
push
add
leave
jp
push
into
mov
mov
js
xchg
inc
push
mov
add
pop
mov
out
addl
test
lcall
ficoml
dec
ror
adc
sub
sar
pop
mov
pop
std
xchg
mov
xor
and
xor
adc
les
jp
addl
ljmp
and
loope
in
pop
xchg
repz
jl
out
cmpsl
jp
pushw
inc
push
and
pop
hlt
push
sub
fcmovnb
stc
mov
push
cld
xchg
and
fs
repnz
or
aaa
cmpsb
leave
imul
aad
arpl
dec
loope
cmpsb
pop
mov
pop
and
or
fadds
xchg
xor
rcrl
ds
push
jg
mov
add
movsl
push
data16
in
xlat
push
mov
adc
inc
jo
mov
scas
idiv
sbb
jns
popf
popf
dec
jne
lcall
cmp
negl
rep
stos
jl
sub
cmp
outsl
push
outsb
dec
xchg
mov
dec
nop
or
ficoms
xchg
lods
scas
aas
cmp
push
insl
jo
adc
jo
outsl
adc
add
mov
lahf
jecxz
out
pusha
sar
or
popf
cmp
dec
test
dec
mov
mov
adc
ljmp
mov
aas
cmp
pop
adc
hlt
ja
push
mov
test
xchg
push
int3
mov
repnz
and
cmp
fcomi
pop
or
or
sti
fwait
out
mov
je
clc
ds
shlb
xor
ror
sbb
aas
sti
and
xchg
mov
pop
push
or
mov
cltd
and
xchg
dec
sbb
icebp
mov
adc
imul
mov
jne
ds
mov
mov
lahf
mov
scas
pop
lahf
cld
xchg
out
lods
mov
adc
add
or
mov
or
adc
in
test
mov
cmp
jg
xchg
sbb
add
ds
inc
sub
lcall
add
jb
jbe
clc
jg
js
arpl
and
int3
jbe
jo
mov
dec
or
cmpb
int3
xchg
cld
test
mov
scas
outsb
xchg
mov
or
or
mov
mov
sbb
in
mov
iret
sub
mov
mov
mov
xchg
fiadds
cwtl
aaa
dec
test
stc
sub
inc
scas
push
lret
jne
lcall
mov
aas
jb
inc
and
mov
arpl
popa
btc
and
mov
aad
call
scas
jle
fists
push
dec
das
je
iret
add
jo
ljmp
leave
fwait
adc
adc
mov
pushf
ret
jecxz
faddl
mov
sahf
xchg
inc
call
loop
pop
xchg
shlb
fwait
push
mov
lea
loopne
dec
enter
dec
int3
test
pop
cmp
std
jb
fistpll
jge
icebp
inc
and
out
repnz
pop
daa
adc
lds
mov
jmp
cmc
xor
pop
fmull
cwtl
xchg
loope
ljmp
orl
push
adc
mov
push
add
mov
clc
jg
fistpl
jbe
arpl
add
inc
sbb
test
mov
push
push
add
clc
les
mov
popa
ljmp
stos
jno
lahf
or
daa
xchg
mov
ja
and
sbb
push
subb
clc
xchg
push
stos
cmp
dec
jmp
adc
fcmovb
mov
sub
push
gs
shll
sbb
xor
adc
mov
xor
sbb
sub
dec
xor
in
dec
outsl
and
push
je
stos
data16
pop
in
mov
xchg
mov
jo
jecxz
push
in
mov
jge
sbb
xor
jbe
fsubrs
in
fdivrs
scas
cmp
xor
test
das
movl
outsb
aas
dec
lock
les
jnp
aam
clc
mov
pop
jb
inc
or
push
sbb
add
cmpsb
inc
xor
cmp
notl
fisttps
add
repnz
repnz
xchg
sbb
push
push
mov
push
jbe
inc
add
xlat
lock
ja
cmp
add
lret
sbb
add
andl
xchg
jge
sub
jmp
sub
hlt
mov
xlat
sahf
fcmovnb
cld
cmpsl
and
inc
push
push
xchg
inc
cld
xor
mov
and
sub
test
rcr
mov
ror
and
adc
hlt
add
push
test
inc
repz
inc
sbb
add
lock
xchg
out
les
or
cld
movd
push
scas
mov
repz
mov
addr16
sbb
fwait
sbb
dec
pop
sub
jecxz
xor
adc
mov
lods
xlat
sub
jl
lock
pop
lcall
stos
push
sub
aaa
push
xor
pop
adc
in
mov
cmp
shl
cwtl
testb
lods
dec
ret
adc
sub
inc
and
and
dec
push
mov
mov
cmp
adc
test
and
movsb
aas
jmp
ds
cmp
mov
push
fld
cmp
xchg
mov
insl
int3
out
xchg
arpl
aam
sbb
cmp
loop
mov
cmpsb
xchg
and
or
sub
movsl
mov
mov
adc
xor
fsubs
mov
inc
mov
xor
inc
inc
push
jle
in
mov
inc
int3
mov
loope
shll
cmp
mov
push
rorb
inc
pop
ret
test
shlb
cld
ficoms
or
stos
mov
lahf
or
test
test
add
adc
pop
in
cmp
dec
sbb
scas
out
inc
inc
clc
scas
mov
xor
lods
xchg
mov
xor
stos
push
addb
das
dec
outsl
loopne
mov
imul
push
xchg
add
gs
dec
in
push
pop
or
repnz
or
mov
pop
cmc
add
add
sub
test
mov
cmp
test
scas
sbb
hlt
bnd
mov
addr16
scas
xchg
pop
pop
pushf
cmp
fucomip
popf
rorb
sbb
lock
inc
lea
xor
adc
jg
or
or
stc
sbb
add
lods
ja
fildl
and
and
pop
xchg
lea
inc
mov
or
mov
inc
mov
and
xchg
ret
stos
ret
inc
int
pop
imul
sbb
dec
nop
xchg
xchg
inc
xchg
lock
mov
mov
pop
cmp
xchg
xor
hlt
imul
bound
and
fs
or
inc
xlat
idivl
pushf
jmp
mov
dec
out
sti
cltd
push
in
das
pop
sarb
cmp
out
stos
xor
dec
out
imul
sub
and
fldcw
ret
mov
test
clc
daa
dec
xchg
and
out
aas
test
add
push
in
mov
xchg
xor
rcl
mov
sbb
daa
les
bound
xchg
push
gs
xchg
sbb
icebp
les
cmc
ficomps
mov
fdivr
ljmp
cmp
xchg
int3
je
movsl
filds
sbbl
insl
shr
lret
cs
nop
cmpsb
xchg
daa
mov
cwtl
dec
adc
or
ljmp
sbb
xchg
jnp
subb
addl
shl
lods
leave
xor
xchg
mov
push
mov
cmp
pop
mov
mov
sahf
cltd
adc
aas
dec
push
adc
xor
iret
or
adc
cwtl
lods
cmpb
scas
xor
cmpsb
cwtl
roll
std
xchg
mov
cmp
rcll
inc
jecxz,pt
mov
in
pushf
push
inc
out
test
lods
scas
add
jnp
lods
aas
inc
mov
xchg
bound
add
in
loop
lock
mov
mov
inc
inc
cwtl
adc
rorb
push
sub
dec
adc
and
cli
dec
mov
rcl
notb
incb
add
loopne
lret
andl
out
in
pop
ja
ja
ja
and
in
push
out
pop
ja
subb
mov
mov
xchg
pop
xchg
ja
data16
test
iret
cmp
sub
std
outsl
ja
nop
add
clc
dec
adc
sub
jns
or
inc
or
aas
aaa
js
adc
cmp
cmpl
imul
dec
js
mov
jno
adc
dec
test
insl
and
dec
mov
sahf
ss
xchg
pop
mov
int3
mov
jle
inc
cmpsl
mov
jno
fwait
xchg
out
mov
jmp
rclb
xor
cld
clc
dec
jle
lea
push
out
mov
out
in
out
lods
xor
rcll
xor
push
pushf
in
inc
icebp
rorb
lcall
cli
pop
push
orl
mov
mov
push
inc
mov
inc
in
outsb
push
push
and
and
sub
xorl
inc
into
call
push
add
adc
enter
into
add
xchg
ret
insl
mov
fcmovu
xchg
push
mov
mov
fsubrl
cmc
jns
and
mov
aad
sbbl
cmp
pop
movsl
and
das
popf
xor
or
cmc
cltd
mov
clc
pop
sub
js
fildl
or
sbb
out
push
pop
xchg
cltd
movb
xor
mov
mov
call
clc
inc
jb
gs
jmp
fists
jb
lahf
iret
insb
and
sub
das
sbb
sahf
xor
pop
lock
ljmp
jbe
out
sub
mov
fbld
shl
cmpsb
iret
xchg
ljmp
cmp
push
scas
jbe
fcmove
fwait
in
sub
xor
pop
or
mov
mov
hlt
into
fmuls
pop
push
or
sbb
mov
push
push
mov
adc
popf
iret
test
dec
callw
fisubs
out
jmp
out
aad
cmpsl
repnz
dec
out
pop
jns
xchg
in
lods
xchg
arpl
int3
shll
fisubs
mov
aad
cltd
push
xchg
dec
pop
das
jle
inc
mov
popf
arpl
dec
mov
lahf
and
pop
pop
pop
adc
test
mov
inc
in
setno
out
cld
lock
clc
jae
and
pop
mov
and
inc
fdivs
adc
mov
add
push
cmp
sti
xchg
pushf
test
xor
mov
cmp
mov
mov
jge
push
clc
add
imulb
pop
mov
fists
in
pop
insb
aaa
aas
or
cmp
repz
push
test
and
pop
fdivr
insb
add
daa
mov
and
jp
imul
icebp
pop
inc
sahf
mov
int
xor
leave
push
xchg
xlat
xchg
not
pop
jge
rcrl
inc
pop
mov
adc
cmp
rcl
push
push
lea
xor
fcmovnbe
xchg
adc
scas
jle
ficoml
mov
sub
adc
insl
rorl
add
dec
loop
stos
aad
mov
mov
mov
jae
sub
mov
dec
xor
and
pop
mov
and
ror
dec
in
push
sbb
xchg
fstpl
and
xchg
or
arpl
stc
mov
fsubr
mulb
hlt
push
mov
popa
sbb
or
jg
int
sub
mov
fistpl
fisubrs
hlt
pop
pop
loope
aaa
push
xlat
cmp
fsubl
sti
mov
sub
mov
inc
xchg
xchg
push
je
inc
xor
insb
sub
imul
stos
daa
mov
cltd
sti
outsl
out
adc
jmp
pop
popa
nop
fldenv
mov
xor
mov
aad
xchg
clc
and
sub
add
in
shll
test
or
cli
in
popa
and
movsb
ja
mov
mov
cmp
sbb
mov
lret
mov
inc
ja
imul
test
dec
mov
pop
jmp
mov
addl
repz
push
outsl
mov
xor
aas
pop
cmp
hlt
xlat
adc
sbb
mov
lods
jae
pop
imul
dec
dec
xor
cmc
or
fdivs
jne
or
sbb
jne
fists
and
sub
imul
dec
push
add
pusha
addr16
lahf
or
and
aad
xchg
popf
mov
lret
movsl
mov
mov
pushf
inc
mov
arpl
xor
loope
lret
in
mov
std
mov
sbbb
and
lods
sub
sub
fwait
mov
testl
cmp
inc
jl
pop
lock
ret
pushf
cltd
jns
xor
test
mov
orb
cmpb
rorb
pushl
loopne
inc
inc
out
jg
inc
repnz
ret
outsl
repz
fistps
rcrl
ret
ret
mov
fs
dec
jb
jge
stos
or
stos
std
dec
ljmp
mov
mov
imul
xchg
lret
and
enter
add
add
pop
mov
into
pushf
test
cmp
call
inc
mov
out
and
or
xchg
insl
hlt
push
push
or
test
add
pop
and
dec
fdiv
jno
inc
pushf
ljmp
enter
cwtl
pop
loop
jl
xchg
into
fisttps
shll
adc
cld
cmp
hlt
mov
inc
pop
mov
sbb
jp
and
mov
dec
aad
sub
mov
mov
sub
incb
mov
mov
repz
movb
dec
xchg
or
dec
xor
pop
lret
mov
adc
dec
xor
gs
out
arpl
mov
sbb
fdiv
jg
call
incb
out
rclb
inc
pop
jae
fildll
arpl
ja
popf
enter
repnz
push
push
movsl
repnz
test
fistpl
mov
mov
mov
push
out
data16
sbb
in
ror
popa
repz
inc
and
cmp
das
xlat
mov
mov
or
jb
or
mov
adc
mov
xchg
sub
lock
mov
dec
pop
insb
mov
cmpsb
stc
inc
jg
mov
popf
push
int3
repnz
jne
or
push
lahf
jbe
or
xchg
add
lea
sub
and
mov
ljmp
repnz
mov
int
push
add
pop
dec
sub
out
es
hlt
or
jno
popf
cmpsl
inc
mov
into
movntps
mov
pop
add
clc
stos
test
adc
jns
cmp
mov
scas
lcall
or
enter
popf
sbb
mov
jno
sub
jo
shrl
push
repnz
addr16
lods
cmc
xchg
mov
bound
rcrl
inc
or
out
pop
hlt
inc
hlt
sbb
push
lret
push
jl
int
outsb
pop
loop
mov
pop
cmc
cltd
pop
adc
or
adc
push
inc
lret
mov
push
std
test
popf
lods
xor
fstps
icebp
in
not
jp
and
es
lods
mov
mul
dec
push
test
aaa
xlat
outsl
push
dec
pop
mov
jge
arpl
cmp
cmc
pop
pop
aam
aam
xor
dec
stos
cli
rclb
cwtl
loope
jmp
js
mov
fsubrl
mov
jns
xchg
or
out
dec
cmp
das
sbb
clc
inc
data16
lods
dec
add
mov
pop
dec
or
xchg
pop
gs
ret
stos
xor
fwait
loop
lds
in
int3
lret
add
pop
dec
in
icebp
jno
out
roll
push
add
jns
data16
xor
xchg
adc
movsl
sbb
inc
xor
arpl
xchg
out
das
lret
ret
xchg
mov
mov
cmc
pop
stos
in
sbb
in
test
or
notl
test
in
sarl
iret
repnz
mov
ljmp
lods
mov
int3
cmc
cs
mov
lret
and
or
outsb
add
das
jg
aad
push
int
icebp
aam
or
ss
lods
cwtl
nop
push
in
aas
jo
fisubrs
push
icebp
and
stos
sub
sbb
pop
pop
add
push
push
cmpsl
dec
fwait
bound
adc
mov
insb
mov
xor
imul
std
jp
psrlw
adc
pop
jl
xchg
cmp
test
fsubrl
ss
push
testl
cmp
outsb
inc
sbb
jp
push
cmc
xor
test
inc
daa
push
mov
push
add
sahf
inc
std
mov
xor
xchg
mov
test
mov
lcall
fimull
stos
fadds
cli
adc
mov
inc
push
push
test
inc
repnz
in
and
add
int3
xor
sbb
fmuls
shlb
or
rol
pop
push
sub
lock
stos
lahf
cmpsb
pop
mov
pop
jns
test
xor
mov
jge
jbe
aaa
sti
paddq
mov
loopne
ret
mov
push
scas
mov
ss
fimuls
ljmp
into
or
add
loope
or
lcall
outsl
pop
rcrl
mov
int3
cmpb
pop
xchg
lea
cltd
lea
jae
rcll
jns
push
dec
xchg
scas
mov
sub
pop
rcrb
dec
jp
pusha
nop
es
imul
out
mov
shll
cmc
clc
daa
lods
cmc
flds
jno
pushl
mov
cmp
jecxz
sub
sub
lcall
stc
pmuludq
mov
dec
stc
loope
imul
inc
adc
push
cmpsb
mov
loop
out
dec
je
stos
adc
push
jo
sbb
imul
mov
sar
jecxz
jge
imul
and
sub
sti
push
xorl
add
mov
data16
mov
test
mov
sub
shll
and
loope
xchg
in
aaa
or
movsb
mov
xchg
jbe
and
dec
mov
rcrb
jbe
jp
add
xchg
subl
sub
pop
dec
movsb
in
cmpsb
lret
xor
lcall
inc
sbb
mov
pop
cmp
xor
jmp
and
insb
enter
xor
xor
ret
ret
inc
shlb
cmp
mov
xchg
jnp
les
cmp
push
inc
dec
pop
pop
outsb
xorb
mov
scas
xor
fstl
jmp
fdivs
jecxz
clc
stos
leave
gs
aas
xchg
inc
and
test
fdivrp
test
mov
movsb
mov
inc
adc
sti
pop
jp
dec
mov
push
cmc
push
je
sub
mov
adc
or
sbb
repnz
mov
stos
pushf
mov
dec
imul
test
inc
rolb
jne
add
mov
push
cld
mov
aam
jl
xor
fwait
add
icebp
mov
mov
adc
imul
jno
stos
dec
adc
out
aad
bound
out
roll
stc
cmp
mov
or
inc
aam
jg
imul
push
pop
shl
das
mov
adc
lcall
arpl
arpl
sub
outsb
mov
mov
adc
repnz
dec
into
ja
push
insb
aas
inc
ret
jne
mov
mov
daa
xorl
in
push
outsl
testb
loope
fistl
inc
jmp
jae
test
mov
imul
mov
out
bound
add
sbb
push
pop
cmp
enter
dec
test
fwait
fwait
adc
rol
dec
add
push
mov
push
jbe
push
out
outsb
movsb
cmp
push
or
jo
sti
mov
lds
daa
rorb
push
xchg
fwait
out
outsb
sbb
inc
fucom
mov
out
lret
adc
cmp
mov
dec
jae
addl
add
cli
clc
test
push
mov
incl
paddq
cwtl
sub
out
cs
jae
clc
dec
or
scas
or
dec
pop
test
sub
sub
ss
push
je
call
inc
cmp
out
mov
jle
loopne
outsl
clc
cmc
fwait
lock
mov
aaa
mov
mov
inc
lods
cmp
inc
mov
or
xchg
xor
hlt
imul
mov
shll
adc
lret
push
lahf
inc
sub
pop
push
rcl
dec
cli
xor
xor
cmc
cltd
jne
inc
cli
sub
cld
dec
or
xor
movsb
out
int3
dec
jl
fidivs
lds
dec
subl
rol
cs
lods
popa
push
dec
in
pop
bnd
mov
mov
stos
out
xor
loope
scas
sub
out
mov
mov
push
lock
or
rcrb
xor
stos
mov
cmpsl
cmp
pop
hlt
dec
cmpsb
sbb
shlb
cli
xchg
mov
movsl
sub
int
loope
xor
repz
xchg
pop
scas
sbb
jno
xchg
stos
pop
mov
cmpl
and
pushf
inc
pop
or
loope
in
mov
xor
mov
es
hlt
cli
bound
jp
lds
icebp
orl
cmp
push
add
cmpsb
or
mov
in
cltd
mov
ss
mov
lret
or
stos
adc
pop
sbb
leave
rcll
test
sbb
mov
les
jle
or
ficoml
je
pop
adc
jae
cmc
mov
clc
fidivs
fisubrl
and
add
cmc
push
push
fimuls
mov
lock
mov
lock
lds
addr16
and
gs
rolb
fiadds
sbb
into
jb
mov
push
gs
mov
or
scas
mov
lret
ljmp
jnp
movsl
ss
push
scas
movsl
sub
leave
pusha
or
pushf
mov
inc
inc
push
mov
mov
jg
inc
sbb
in
xchg
aam
ljmp
enter
or
addr16
fadds
xor
lret
add
ror
shll
pop
in
xchg
adc
jmp
dec
fnsave
imul
mov
xchg
jge
xlat
inc
pop
test
or
outsb
shlb
je
lahf
jle
jae
sbb
das
in
ret
imul
or
in
fcomi
hlt
icebp
dec
inc
dec
cmc
dec
int
mov
lahf
and
mov
inc
insl
xchg
pop
push
addr16
adc
scas
adc
test
jne
xorl
dec
sbb
add
mov
rcr
add
push
loopne
incl
inc
push
dec
scas
adc
jmp
xchg
xchg
aaa
push
ja
pushf
xor
inc
movsl
adc
psubq
daa
mov
std
jo
dec
lea
push
dec
das
mov
pop
jnp
xor
sahf
dec
addl
into
sbb
mov
rcll
sub
jnp
pop
sbb
je
je
lcall
xor
je
les
sbb
into
lret
push
mov
adc
pop
jmp
and
rorb
test
push
jne
testb
push
mov
sub
mov
cwtl
push
sahf
sbb
mov
add
inc
push
les
cli
arpl
into
mov
mov
and
xchg
fnstenv
push
mov
mov
xor
clc
pusha
fwait
cmpsb
test
sahf
pushf
aaa
xchg
testb
in
or
push
dec
inc
sbb
rorl
sbb
rcrl
cwtl
aas
adc
andb
inc
mov
sbb
adc
and
lcall
add
leave
mov
xor
dec
sahf
mov
imul
psubsw
insb
test
mov
scas
nop
jle
push
lds
mov
sahf
fstl
cmpsl
ror
mov
push
out
pop
xor
push
out
push
pop
adc
sahf
out
int
adc
mov
aaa
ret
insl
pop
mov
xchg
xchg
nop
mov
lods
pusha
xor
sbb
add
popf
cmp
jns
push
addr16
call
test
pop
hlt
push
repz
mov
test
icebp
in
pop
ficompl
loope
mov
jl
rclb
loope
cmp
lret
sbb
cmp
push
outsl
jbe
repnz
hlt
fsubr
and
mov
adc
gs
sbb
ficomps
adc
push
incb
xor
nop
sbb
lods
pop
rcr
mov
stos
test
push
pop
or
sti
aad
jbe
sbb
pmuludq
std
mov
pop
scas
push
lock
sbb
movsl
mov
mov
sbb
jbe
mov
or
mov
popf
mov
or
jne
cs
notl
int3
mov
jmp
dec
pop
mov
push
add
faddl
push
and
push
xchg
rolb
jns
int3
jns
or
loope
push
jbe
ja
in
cltd
es
adc
pop
xor
dec
xorb
and
sbb
movb
mov
das
add
mov
xchg
cmpsl
cmp
xchg
jbe
fisubrs
cmpsb
in
idiv
lret
adc
xor
sbb
sti
in
xor
dec
mov
imulb
fisubs
clc
push
in
mov
ds
ret
sub
leave
loopne
jo
xor
xchg
sti
and
pop
jp
dec
daa
sbb
xchg
adc
in
jecxz
and
sti
adc
test
mov
add
inc
mov
sub
call
test
loop
pop
push
sub
int3
stos
mov
adc
sub
mov
movsl
into
sbbl
jns
push
imul
inc
adcb
imul
inc
xchg
sbb
mov
mov
xchg
sub
sahf
or
fimull
test
sbb
loop
aaa
popa
test
cli
dec
and
dec
push
cld
notb
dec
cmc
jle
and
and
in
sahf
and
test
xchg
push
sbb
dec
pop
and
xchg
pop
push
mov
inc
movsl
xchg
lock
icebp
test
lea
test
fs
jle
sarb
xchg
inc
in
insl
sbb
inc
dec
andb
repz
sbb
nop
mov
xchg
nop
and
xor
daa
add
adc
push
push
out
shlb
test
cs
dec
popa
and
shlb
repnz
cmc
and
and
fsubrl
bound
xchg
fidivrs
mov
sahf
rorb
sbb
push
into
jne
and
mov
lds
in
mov
aad
sub
mov
in
mov
and
loopne
in
out
jl
jno
cwtl
inc
divl
leave
mov
xchg
fisubrl
btr
scas
in
aas
stos
js
xor
mov
repnz
mov
loop
icebp
inc
popf
pop
cltd
adc
push
jle
dec
jge
cmp
inc
push
jle
test
mov
js
aas
sub
loopne
or
xchg
scas
mov
iret
xor
jmp
xor
rcr
stc
cmp
ja
cmp
int3
or
push
push
les
lret
adc
xchg
push
lahf
test
dec
lahf
mov
pop
or
ffree
in
jg
rol
add
mov
hlt
sub
jno,pn
jl
bound
ss
in
fbstp
test
add
pop
or
inc
or
lret
mov
stos
cmp
cmp
or
adc
lret
mov
mov
bts
sub
cmp
sub
rep
shrb
xlat
gs
faddl
sbb
mov
mov
leave
jp
jp
mov
sbb
ret
icebp
add
xchg
push
mov
jne
cwtl
cli
mov
fldt
scas
jbe
sub
vunpcklps
sbb
fisttps
xor
out
mov
jb
subb
push
out
leave
mov
fimull
data16
hlt
ret
mov
pop
mov
leave
sbb
ja
stc
bound
inc
xor
rolb
shlb
fldenv
mov
pop
jp
sub
sub
xor
shll
ljmp
pop
enter
and
xchg
les
jno
cmpsl
sbb
cmp
mov
dec
jae
ss
jl
dec
addr16
or
inc
arpl
lahf
xchg
mov
test
nopl
cltd
mov
sbb
dec
inc
ja
mov
and
adc
pop
pop
jbe
or
xor
leave
pop
rcrl
nop
mov
push
xlat
lret
rorl
xchg
mov
sbb
inc
push
mov
lahf
pushf
outsb
mov
jp
cmpl
xor
push
rclb
xor
repnz
cmp
and
jecxz
adc
add
mov
mov
ret
fiadds
jp
sub
subl
sub
mov
mov
xchg
inc
xor
nop
lcall
ret
fimull
ja
or
push
pop
sarl
add
lahf
ja
les
lahf
pushf
je
pop
mov
or
jle
mov
and
hlt
xorb
xchg
inc
mov
insb
lret
sub
lea
je
sub
pop
or
test
pop
cmpsb
enter
lret
repz
pop
mov
xchg
lea
push
xlat
inc
sbb
cmp
mov
ljmp
in
jge
xchg
arpl
mov
pushf
aas
sbb
out
inc
test
fisubl
fimull
sub
jb
xor
inc
jg
add
shl
mov
mov
cmp
outsl
sarb
mov
movsl
xchg
add
aad
xchg
das
testb
push
adc
scas
add
xchg
pop
pop
mov
adc
sbb
mov
jno
fbstp
mov
jle
jmp
mov
mov
ljmp
cli
imul
pusha
cli
mov
cltd
aam
ljmp
lods
pop
lods
dec
sahf
and
out
fwait
lahf
adc
ss
fs
aam
into
popa
cli
mov
fnsave
sbb
icebp
jge
mov
mov
dec
xor
xorb
push
fsubs
dec
out
daa
mov
enter
push
test
gs
and
push
push
cmp
imul
scas
add
and
shrb
xchg
lds
jne
dec
mov
js
dec
xor
dec
mov
jge
ret
aas
xor
sub
xchg
adc
sub
leave
or
mov
sub
mov
lcall
das
mov
inc
push
xchg
push
test
cmp
sub
xor
jns
jne
adc
iret
xchg
lcall
fsubs
pop
or
loop
sbb
sbb
mov
adc
imul
add
aam
pop
add
sbb
cmpsl
dec
jmp
sbb
add
jns
cltd
out
xchg
pop
shrl
jecxz
negl
push
rcrl
mov
push
out
arpl
clc
repnz
or
fs
pop
pop
jo
adc
pop
lret
mov
mov
sub
jb
xor
mov
insb
fnstenv
ljmp
ss
aam
dec
cmpsb
push
popa
jmp
inc
cli
fimull
cltd
mov
in
lods
popa
test
mov
mov
test
lds
xor
fsub
fcmovb
stos
pop
mov
cli
icebp
jae
push
std
jle
cmp
jae
jo
or
sub
movsl
and
sbbl
dec
jo
ja
lahf
mov
shll
shll
inc
shll
cmove
inc
pop
sbb
mov
mov
icebp
pop
test
lds
pop
movsb
lds
shlb
fstl
add
or
fwait
stc
add
push
lcall
and
mov
inc
mov
popf
movsl
int3
inc
shr
jns
mov
pop
ja
ds
cmc
mov
daa
or
jl
loop,pt
cmp
adc
add
aas
stos
cmp
test
push
inc
mov
xor
mov
xchg
mov
cli
dec
js
bound
outsb
sbb
pop
loope
and
out
popl
and
cmp
int
mov
adc
aas
cld
fwait
inc
adc
in
jbe
cmp
jmp
out
jle
or
jae
jo
loope
loop
lret
loopne
ret
cli
sub
pop
rolb
je
adc
into
popf
mov
xchg
js
adcb
in
mov
out
rolb
inc
xchg
mov
adc
push
imul
xor
push
arpl
mov
pusha
xor
imul
cmp
or
test
in
cmpl
pop
jne
scas
insl
add
pop
xor
dec
loope
push
push
popw
jle
mov
mov
add
push
push
add
imul
lea
mov
sub
mov
daa
cmp
push
iret
pusha
push
repnz
divl
dec
fists
push
push
out
mov
add
shl
sbb
xor
and
sti
stos
sub
xchg
mov
or
mov
add
mov
dec
int3
gs
pop
mov
jmp
imul
xchg
inc
mov
out
push
xor
inc
les
pop
mov
jns
fsubs
fs
icebp
repnz
roll
mov
fsubrl
pop
and
mov
mov
out
or
in
xchg
ja
sub
sbb
les
push
popf
dec
js
lcall
cmc
cs
iret
fcomp
fidivs
mov
mov
mov
cmp
or
shr
inc
push
es
sub
push
adc
adc
mov
scas
jle
and
pop
mov
pop
loop
push
inc
jle
mov
idivb
dec
mul
out
out
ss
adc
outsl
and
pop
int3
jne
mov
pushf
pop
xchg
ja
movsl
int3
adc
or
mov
movsb
sub
fs
test
repnz
cli
fiadds
aam
push
das
cmp
test
or
mov
je
insb
xlat
jl
mov
nop
popa
in
mov
push
clc
and
push
mov
push
jle
movl
fcoml
push
xchg
pop
jno
jns
test
cli
std
in
stos
sub
je
jbe
mov
andl
or
addr16
pop
idivb
lods
filds
nop
hlt
nop
imul
jmp
stos
inc
lock
int3
addl
inc
mov
testl
cmc
and
push
mov
cmp
xchg
aas
push
orb
mov
pop
shr
cmp
movl
inc
in
lret
xchg
cmp
mov
jbe
popf
push
scas
inc
aad
fdivrl
push
cmp
pop
pop
imul
jle
or
push
loopne
mov
dec
add
sbb
add
pop
xlat
xchg
inc
dec
cmc
bound
sbb
mov
sbb
scas
and
int3
lods
mov
dec
mov
dec
inc
push
insb
loop
xorl
test
int3
dec
xchg
pusha
xchg
out
push
adc
jnp
mov
lds
xchg
insl
inc
pop
ljmp
bound
stos
ljmp
mov
orl
es
cwtl
icebp
push
aam
insl
outsb
int3
push
test
mov
paddq
adc
insb
mov
fs
lcall
lret
stos
fst
sub
adc
mov
adc
push
aaa
cmp
pop
or
jle
shll
ja
pop
jecxz
jnp
les
std
enter
enter
add
mov
mov
pop
mov
imul
adc
mov
ror
outsb
ss
xchg
sub
divl
mov
sbb
add
jecxz
lcall
jl
shrb
push
cmp
sahf
xchg
test
and
xchg
jno
stos
and
xchg
jmp
sbb
push
and
mov
cmp
ror
aad
cmp
fnstenv
dec
fcmovu
lahf
cmp
xchg
rol
pop
jae
mov
cs
pop
pavgw
aaa
clc
mov
mov
mov
inc
inc
pushl
or
xchg
test
add
lock
jg
or
inc
fwait
cmp
push
popf
cmp
xchg
das
aam
mov
mov
out
xchg
sbb
inc
loope
jo
lods
dec
cmpsl
inc
pusha
insb
mov
mov
ret
lock
push
adc
xchg
mulb
mov
push
repz
jmp
jo
lods
add
and
fwait
or
jmp
adc
loopne
xchg
stos
popf
mov
jmp
cmp
jno
pop
aad
push
loope
xchg
mov
in
push
lds
mov
jne
js
or
insl
sub
iret
lret
inc
popf
xor
xor
lcall
sub
test
test
daa
or
subl
inc
inc
push
pop
mov
or
inc
imulb
outsb
add
dec
pop
pop
int
mov
bound
shrb
or
ror
xchg
dec
inc
jp
pop
sub
mov
add
js
mov
jl
sbb
icebp
push
mov
adc
loop
sub
inc
sahf
jae
lret
mov
inc
inc
mov
mov
clc
andb
stos
fildl
in
xchg
dec
or
or
xlat
xchg
inc
xchg
ret
sub
faddl
jl
repz
mov
jns
out
xchg
in
cmp
mov
or
mov
int3
cmp
bound
movl
popa
xchg
shl
push
push
inc
and
cmc
xlat
mov
jl
dec
aaa
ja
ja
cmp
jo
sbb
jo
lock
int
xchg
sub
ja
popf
fisubrs
scas
mov
pop
lock
cs
inc
mov
fwait
add
fs
test
add
jbe
movsb
int3
cmpsb
mov
push
leave
xchg
dec
loope
mov
stos
lods
fwait
or
mov
fistpll
outsb
cli
jmp
sbb
and
lret
xlat
mov
fs
movsb
push
pop
xchg
sub
frstor
push
sbbl
std
mov
xchg
aas
and
pop
cmp
div
in
xchg
and
into
adc
jb
mov
and
jl
lcall
bound
mov
fisubrs
pusha
lea
clc
fcoml
mov
cmpsl
lret
fmul
inc
jae
inc
push
dec
jns
dec
and
sarl
mov
adc
sub
jecxz
outsb
int
lea
cmp
jecxz
mov
inc
xchg
int
and
mulb
jns
nop
fdivs
stc
sbbb
sbb
hlt
stos
mov
mov
pop
lret
push
repz
fimuls
les
lcall
in
mov
inc
jmp
movsl
pop
mov
lret
xchg
iret
inc
adc
adc
jle
push
pop
outsl
push
xor
push
push
inc
inc
sbb
sbb
mov
cmpl
fstp
fstp
fisubl
and
pop
push
addr16
fwait
es
dec
mov
cmp
shll
push
pushl
pusha
or
fildll
fbld
fwait
js
sub
stos
outsb
xor
cmp
mov
dec
leave
inc
push
mov
or
data16
iret
sahf
nop
cltd
movsb
jl
jge
push
sub
dec
sub
pusha
les
bswap
sub
push
arpl
sbb
out
jl
mov
test
sbb
jo
nop
int3
daa
test
ret
cmp
rclb
mov
js
pop
pop
xchg
mov
adc
jae
push
rorl
jge
in
inc
xor
movsb
fwait
cmp
mov
push
push
add
dec
js
daa
jg
add
jp
push
ja
inc
push
push
mov
cmp
aaa
or
cld
mov
dec
pop
loop
mov
jnp
enter
popl
movsb
rcrl
or
fidivs
add
and
sub
lea
fs
cmp
jo
shll
push
imul
add
clc
stos
jp
into
add
add
out
pusha
push
pop
cli
nop
orb
test
jecxz
xor
cs
adc
jb
cmc
lock
adcb
out
addr16
lret
xchg
sbb
ljmp
mov
rcrl
sbb
je
scas
push
mov
in
dec
insb
jg
mov
fstpl
jb
fdivrs
aad
dec
push
mov
call
adc
adc
push
xchg
scas
xchg
xchg
cmp
pop
hlt
jmp
fldt
jle
out
sbb
push
and
idivb
stc
mov
mov
loope
ja
sbb
jne
sbb
insb
lods
push
addr16
pusha
fldl
pop
xor
dec
pop
fiaddl
mov
js
mov
ret
insb
push
mov
mov
xor
ret
cmp
pusha
xlat
movsb
insl
out
imul
sti
cli
es
or
xor
adc
mov
stc
mov
ret
lock
lcall
xor
das
fiadds
add
test
mov
lret
pusha
mov
div
mov
in
mov
andl
dec
mov
pusha
lea
sub
rcrb
lret
pop
pop
sbb
fstps
mulb
mov
hlt
jne
sbb
stc
mov
test
pop
cltd
push
add
test
mov
pop
lea
sub
les
adc
call
mov
or
jno
leave
cmp
ds
stos
es
pushl
xor
sar
insl
sub
into
xor
in
mov
mov
clc
ficoml
lcall
push
imul
std
xchg
mov
jecxz
jp
rorl
stc
rorl
pop
inc
inc
add
inc
icebp
mov
xor
push
and
icebp
xchg
out
mov
ss
and
sub
cwtl
pop
mov
repnz
mov
mov
xchg
into
imul
jmp
mov
or
push
je
mov
pop
pop
cmpb
adc
cmp
in
cmp
ret
cmp
fcmovnu
je
arpl
jbe
sbb
sub
push
push
mov
lods
jge
xor
sub
imul
and
jmp
mov
stos
cli
lock
iret
cs
lret
scas
mov
icebp
in
sub
test
jnp
or
iret
and
sti
sub
gs
mov
imul
or
xchg
jne
ss
push
xor
sti
xor
xor
inc
or
sar
adc
dec
inc
inc
rcrl
cmpsl
inc
stos
add
adcb
cli
push
jbe
lahf
lcall
negb
add
lods
mov
lea
jge
inc
add
push
filds
inc
add
xorb
fsts
mov
inc
js
push
in
inc
loopne
nop
cmp
fldl
lods
fadds
fwait
and
shr
mov
add
mov
out
mov
mov
in
es
push
lret
xlat
inc
sbb
shll
shl
push
xchg
cld
xor
mov
and
test
sbb
inc
sub
jno
jge
mov
xchg
ficompl
fidivl
orb
jnp
inc
loop
jnp
xor
jge
add
mov
stos
sub
pop
inc
int
xchg
adc
popa
sub
in
loop
call
inc
jns
enter
in
iret
in
mov
cmc
jmp
cmp
pop
fiaddl
push
xor
and
inc
mov
dec
adc
adc
dec
icebp
push
popl
add
xor
cld
cmp
push
mov
cs
fcompl
mov
in
sbb
cld
nop
scas
pop
jmp
mov
push
pushl
and
or
mov
jge
pop
test
sar
arpl
xor
ret
and
in
mov
cmpsl
add
in
cld
xor
xchg
lret
imul
in
mov
mov
jae
divb
out
sbb
pop
cmpsb
add
push
loopne
dec
lock
out
fisttpl
adcl
cmp
sbb
rep
loopne
push
test
xor
mov
imul
add
outsb
mov
mov
adc
mov
add
xor
jge
xchg
inc
mov
sbb
sbb
arpl
fcoml
xor
jnp
cmp
adc
aaa
inc
jmp
in
xlat
jbe
sti
mov
inc
xor
orl
push
movsb
movsb
cmpsb
cmp
in
scas
xchg
and
cmp
xchg
test
dec
lcall
lahf
sub
lock
rcll
mov
pop
sub
scas
inc
call
jecxz
ds
push
test
rorb
xlat
in
push
stos
jmp
dec
int
adc
pop
lods
shll
adc
or
adc
adc
sbb
clc
adc
fiaddl
arpl
xchg
andb
scas
int
cli
jae
mov
outsb
push
ds
fucom
popa
out
jl
repz
add
push
inc
sub
js
in
in
lods
or
test
or
ds
into
xchg
lock
xlat
outsb
in
and
std
vpaddsb
push
pop
les
sbb
adc
negl
sbb
mov
lret
xchg
je
mov
and
pop
outsb
cwtl
add
inc
addb
sarl
xor
dec
adc
push
dec
fidivrl
outsl
pop
mov
xlat
push
inc
cmpsl
loope
mov
fdivl
ror
dec
jp
js
dec
jmp
jae
or
js
testb
repz
push
outsb
sbb
xor
daa
mov
fisttpll
daa
lds
or
shr
inc
mov
pushw
aam
inc
cltd
stc
mov
mov
and
lcall
fisttps
add
outsb
idivl
aam
je
fidivs
stos
inc
or
enter
push
jle
imul
jno
dec
clc
push
xchg
jno
les
scas
and
xchg
mov
inc
sar
gs
lds
xor
push
sahf
insl
and
addr16
jbe
scas
in
cmpsb
inc
xor
test
cmp
std
cmp
adcl
loope
pop
scas
insl
mov
mov
es
jl
imul
add
lock
fs
iret
sbb
jg,pn
sub
repz
shl
les
xchg
jne
push
push
xchg
sub
fld
ljmp
es
jbe
and
ret
aas
cs
pop
bound
enter
xor
iret
fildl
dec
sbb
lods
pushf
mov
xor
stc
add
sbb
bound
pop
movsb
aaa
jno
mov
popf
cmp
inc
sbb
inc
dec
or
and
arpl
cli
mov
sub
jp
pusha
xor
inc
lret
arpl
mov
out
jecxz
jb
js
xchg
push
test
dec
test
popf
push
fimull
mov
cmp
icebp
and
lods
lret
push
cmc
or
jle
gs
or
dec
sbb
mov
pop
int3
push
jbe
lret
js
pop
lahf
popa
push
call
mov
sti
inc
sbbb
sbb
nop
cs
pop
mov
mov
jl
xor
ret
insl
add
sbb
jnp
je
sbb
mov
sbb
push
inc
or
cmpsl
pop
jmp
xor
jmp
sahf
mov
jle
loopne
mov
loop
add
push
dec
jbe
inc
mov
test
ja
pop
mov
inc
pop
and
mov
inc
scas
adc
insb
daa
pop
or
leave
and
mov
pop
xor
lret
add
iret
dec
jns
and
and
or
push
xor
xchg
inc
mov
jmp
daa
mov
shr
bound
sub
stos
bound
adc
mov
test
daa
push
push
push
mov
xor
jp
inc
adc
loopne
mov
stc
les
sub
repnz
sbb
jl
push
icebp
inc
loop
add
add
int3
dec
adc
cwtl
push
push
insb
pop
jbe
loopne
xchg
cmp
fisttps
cmp
pop
mov
rcl
fcoms
mov
movsl
xorb
push
jge
jmp
push
lahf
mov
clc
test
hlt
jns
and
jmp
aaa
cmc
mov
xor
adc
push
popf
inc
js
mov
subb
mov
arpl
in
sub
repz
fdivrl
repz
out
popf
scas
ja
inc
xor
repz
push
gs
jo
leave
jp
inc
in
adc
jbe
mov
mov
push
and
in
arpl
and
loope
add
incl
add
mov
ja
in
jnp
imul
push
mov
mov
mov
cwtl
push
stos
xchg
inc
shll
sbb
mov
loopne
cmpsl
cmp
popf
sbb
popa
in
addr16
mov
neg
adc
movsb
and
sub
out
mov
gs
pop
sub
push
mov
inc
lods
cmp
or
fldenv
rcll
arpl
lea
test
or
inc
cltd
fdivp
mov
add
and
sub
jno
inc
mov
data16
outsl
push
pop
sbb
lock
xchg
dec
and
mov
mov
stos
aaa
fsubr
sbbl
inc
ret
inc
mov
mov
push
cmpsl
push
push
mov
sbb
shl
fnstenv
mov
push
aad
fnstcw
aas
push
insb
notl
arpl
test
aas
out
jns
sbb
enter
fisubrl
xor
cli
mov
adc
test
xor
mov
addr16
lods
sahf
xor
outsb
sub
fwait
mov
cltd
xchg
outsl
or
icebp
mov
roll
wrmsr
push
cli
clc
leave
xor
imul
or
inc
jecxz
push
lret
xor
lea
pop
cmp
mov
push
test
out
push
mov
ret
repz
pop
pushf
js
dec
fbld
xor
popf
cli
icebp
adc
lahf
push
xor
movsb
data16
pop
lds
mov
leave
or
addr16
pushf
and
mov
inc
mov
mov
test
add
xchg
addr16
je
pushf
inc
mov
les
xor
add
xchg
jne
mov
or
push
xor
jne
int3
push
test
imul
sbb
aam
out
addr16
add
outsl
fidivrl
jmp
and
jmp
frndint
cmp
push
mov
push
fdivrl
popa
jae
in
loopne
pop
popa
mov
xor
add
sbb
inc
sbb
jnp
ftst
dec
cmp
js
fwait
mov
jg
adc
cmp
mov
out
inc
test
pop
cmp
sti
in
cs
xor
fsts
jmp
in
test
ret
sub
push
in
icebp
lock
push
adc
push
mov
arpl
lods
out
jmp
sbb
adcl
sub
xor
ss
push
mov
and
mov
outsb
xchg
push
mov
or
imul
and
mov
xchg
add
mov
cltd
clc
insb
xlat
mov
xchg
repz
scas
mov
xor
or
xchg
repz
inc
in
sbb
mov
xor
jecxz
sub
cwtl
out
dec
jo
lea
and
repnz
dec
movsl
insb
or
repnz
pop
or
mov
pushf
jae
addr16
test
aad
ss
xlat
insl
jg
mov
mov
shl
loop
xchg
in
cwtl
jbe
xor
adc
pop
or
inc
cmp
ret
xchg
jge,pn
or
out
dec
es
int
pop
imul
and
jbe
push
sub
pop
scas
mov
cmc
je
fisubrs
pop
jl
mov
lock
sub
xchg
add
pop
push
push
inc
inc
fnsetpm(287
inc
test
jmp
adc
mov
test
outsl
mov
sbb
in
cli
cmp
cmp
aam
lods
dec
lcall
push
insl
arpl
jle
rorl
jno
mov
dec
dec
es
push
cmp
loopne
add
in
pop
push
pop
xchg
xchg
adc
add
fistl
lret
imul
adc
sbb
sti
ss
cli
fcompp
cmc
jge
mov
pop
mov
cli
add
sub
or
push
pandn
jne
mov
add
insb
sbbl
scas
test
pop
shll
insl
push
sbb
loope
cwtl
addr16
or
mov
aas
ja
mov
into
cli
pop
int3
sub
psrld
inc
sti
mov
push
jge
dec
jb
add
nop
cmpsl
mov
xchg
mov
out
push
mov
push
imull
mov
enter
sub
shlb
or
sbb
lahf
ljmp
or
mov
iret
mov
pop
ja
jmp
ljmp
push
xchg
xor
xchg
mov
je
aad
rcll
xor
aas
test
xor
fwait
or
data16
stos
inc
jb
leave
cmp
rclb
das
add
jl
lock
scas
leave
jle
iret
data16
fdivl
popl
ds
sbb
push
mov
sub
mov
xchg
xchg
pop
xchg
mov
lock
mov
mov
aas
ret
pop
and
sub
test
pop
adc
les
sahf
dec
fisubrl
into
lods
mov
jecxz
pcmpeqw
insl
and
inc
xchg
lret
data16
aas
mov
fwait
aas
rorb
push
rorl
popf
mov
mov
jnp
imul
testb
mov
xchg
test
inc
gs
adcl
loop
sti
push
popa
mov
adc
outsb
cld
hlt
mov
push
cld
aam
xchg
pop
pop
inc
sub
mov
dec
outsl
sti
push
and
jg
or
or
fidivl
and
aas
adc
hlt
xlat
outsb
aam
pop
jb
inc
inc
and
push
xlat
enter
rorb
push
sub
push
aad
mov
push
sub
mov
into
shlb
sbb
divl
xor
daa
stos
inc
popf
fcom
or
in
cmp
cmp
lods
rolb
ds
div
jmp
mov
shl
jno
xlat
clc
lods
push
outsb
xor
mov
adc
sahf
xchg
push
hlt
inc
or
sbb
pop
jmp
cwtl
xor
push
xor
mov
dec
adc
adc
testl
jae
iret
jns
pushf
mov
push
movb
icebp
outsl
mov
mov
stos
xlat
pop
lods
sub
mov
rcrb
mov
cmp
pusha
std
dec
cs
cmc
out
lret
jl
pop
push
pop
fsub
clc
inc
xchg
arpl
mov
pop
mov
adc
lahf
and
fmull
icebp
rcrb
rcl
mov
sub
shl
jp
push
test
add
dec
push
sub
stos
stos
add
sub
inc
mov
loop
or
scas
in
mov
adc
sub
jl
inc
or
mov
sbb
jo
dec
pop
cmp
inc
aam
lods
shl
es
push
cmp
cmp
pop
addr16
mov
mov
adc
pop
fadd
repnz
or
lret
fdivr
aad
jmp
cmp
ftst
aaa
rorb
into
call
pop
shrb
ljmp
insb
mov
and
fnstsw
and
or
insl
jb
push
dec
mov
hlt
pop
movsl
outsl
insl
sub
fwait
mov
inc
adc
insl
cmp
adc
enter
mov
aas
push
add
imul
push
pmullw
out
pop
js
outsb
jnp
inc
xchg
ret
scas
push
push
mov
cmp
mov
pop
fldcw
xchg
or
dec
lahf
daa
fldenv
aas
into
sbb
jo
dec
adc
cmpsl
inc
test
fsub
sub
xchg
nop
xlat
int
stc
dec
out
sub
dec
loope
nop
sub
mov
mov
ljmp
or
femms
in
inc
loopne
pop
jecxz
mov
popf
sub
cmp
movsl
out
jge
adc
mov
jb
cltd
cmp
sbb
push
fisttpll
mov
out
gs
mov
rcrl
jle
ss
jns
ljmp
xchg
xchg
xor
pop
mov
cmpsl
ja
mov
add
stos
adc
cs
sbb
mov
outsb
sbb
push
ret
xchg
pop
icebp
mov
push
jecxz
add
jmp
data16
mov
cld
jae
inc
lods
xor
test
add
hlt
jp
clc
loop
pop
xchg
mov
mov
mov
mov
outsb
daa
test
mov
scas
pop
fistpll
sub
cltd
in
fdivs
gs
sarb
dec
aaa
inc
gs
cmp
and
mov
pop
push
mov
rorl
out
movb
mov
stos
or
aam
sub
and
ret
loop
mov
xor
stos
lods
xchg
test
lds
repnz
enter
or
in
cld
mov
mov
loope
fbld
jmp
test
mov
sbb
mov
mov
xchg
clc
sub
and
fbld
xor
idivb
jmp
mov
xor
arpl
cld
out
and
push
and
in
addr16
aad
enter
pop
loopne
pop
inc
cmp
sub
insb
addl
lods
jecxz
pop
mov
iret
jbe
notl
in
jecxz
push
movsb
mov
and
jmp
pop
mov
mov
xchg
movsb
in
mov
jae
push
jb
dec
xchg
sbb
rorl
imul
jecxz
sub
popa
cli
cmc
pushf
shl
jle
loope
sbb
in
outsb
xchg
fcompl
lret
mov
jno
push
inc
pop
lock
jnp
jg
call
mov
in
imul
push
popf
jp
jle
jmp
mov
aaa
mov
arpl
imul
xor
mov
mov
jae
pushf
and
mov
out
fldl
push
xor
dec
aaa
ljmp
mov
pop
mov
fwait
cmp
rorl
dec
fldenv
addb
out
fdivrs
or
xchg
daa
jbe
mov
xor
repz
and
cmp
sbb
ljmp
das
jmp
cs
add
int3
xor
int
dec
jb
mov
js
fisttpl
je
js
rclb
dec
stc
in
dec
in
into
and
xor
js
add
sub
add
adc
sbb
ljmp
leave
push
ja
xchg
out
xor
mov
lahf
es
ja
orb
mov
bswap
mov
ret
test
jns
dec
repz
jg
andb
xchg
cmpsb
idiv
notb
mov
cld
inc
cld
xchg
adc
mov
icebp
scas
mov
jmp
dec
jno
les
xchg
sbbb
lea
dec
ret
or
push
mov
fnstenv
xchg
in
cmp
xor
int
push
dec
cmc
cmp
add
lods
adc
cltd
shll
mov
stos
push
ret
xchg
xchg
inc
xor
int
cmp
ds
lea
mov
shld
hlt
mov
ljmp
mov
scas
push
adc
call
outsb
test
in
jne
inc
bound
imul
sti
rorb
arpl
sub
sub
xchg
mov
push
insl
mov
test
jo
movsb
in
cmp
test
push
inc
xchg
add
mov
test
shlb
cmp
jae
aam
add
movsl
ljmp
mov
inc
adc
aaa
imull
push
dec
ds
js
xchg
sbb
jo
xor
ljmp
push
cltd
pop
in
sub
popa
mov
cltd
or
outsl
lds
imul
mov
scas
adc
mov
cmp
and
fldl
cli
mov
in
push
aas
adc
ss
sub
addl
mov
int
out
mov
xchg
xor
push
mov
and
xor
push
sub
mov
xorl
testl
rorl
sbb
je
jecxz
inc
or
repnz
cli
mov
inc
les
sar
lahf
mov
fsts
hlt
inc
inc
stc
or
mov
push
cltd
push
bound
test
mov
xchg
pop
vmovlpd
jbe
pop
push
jnp
sub
cld
insb
or
jle
push
pop
ljmp
sbb
xchg
jmp
jle
data16
cmp
mov
mov
ret
push
cld
mov
into
pop
cmp
int3
mov
lret
sub
lods
lcall
sbb
mov
shlb
int3
mov
mov
inc
xchg
les
nop
es
cmp
repz
add
dec
dec
add
mov
inc
push
push
scas
inc
pop
fnstcw
jae
and
mov
cmp
clc
pusha
ret
test
cmc
out
fldcw
jno
js
sti
out
loop
sbb
pop
push
cs
ljmp
pop
mov
loop
mov
lock
aad
mov
nop
push
dec
ja
and
cltd
mov
cmpsl
cltd
pop
or
aaa
std
loop
mov
cmp
aaa
faddl
sarb
fidivs
jne
movsl
lret
jns
jb
dec
xchg
sarl
pusha
mov
jmp
jge
stc
in
sub
mov
out
jnp
dec
sub
cmpsb
out
jg
movb
mov
jmp
sbb
ret
mov
movsl
mov
outsl
sub
xchg
xchg
adc
jl
adc
or
test
inc
mov
lock
mov
fimull
fucomip
std
int3
sub
xchg
mov
xor
ljmp
iret
int3
enter
jl
pop
bound
xchg
sub
push
cmp
and
sub
aaa
cmc
inc
inc
es
mov
mov
and
orl
pop
inc
cld
fldcw
aaa
out
cmp
js
pop
dec
push
icebp
mov
inc
shlb
pop
cld
and
or
in
push
add
mov
mov
outsl
std
sub
addb
ds
cmpsb
aaa
sbb
lea
arpl
inc
fsubs
sbb
push
push
mov
sub
cmp
mov
sahf
dec
aad
inc
hlt
sti
dec
or
leave
pop
imul
loope
imul
shlb
mov
stos
popa
es
stos
mov
xchg
jp
cld
mov
jp
stos
ret
xchg
test
jbe
jb
popa
sub
push
mov
es
into
lods
xor
jno
outsl
es
pop
fdiv
loopne
loopne
lea
aas
fisubrl
mov
es
and
fnstsw
or
out
cmp
test
lods
jle
faddp
mov
pop
mov
mov
jns
stos
mov
sub
mov
jecxz
shl
xchg
insl
mov
repz
mov
dec
add
jmp
jp
les
push
ja
adc
sarl
test
test
and
push
sarl
leave
popf
mov
fbld
sub
cmp
inc
fwait
aam
outsl
dec
insl
std
fdivrp
movsb
xchg
cmp
pushf
imul
mov
imul
adc
orb
std
push
ljmp
pop
int
cmpsb
push
fists
mov
mov
cmp
stos
inc
inc
inc
jle
jl
adc
cmp
adc
outsb
jo
test
das
ljmp
mov
pop
fs
fs
cmpb
jnp
and
fwait
xchg
pusha
xor
test
ret
fiadds
lods
mov
and
les
int3
cmp
sub
adc
popf
in
in
in
adc
sbb
dec
das
pop
inc
sbb
int
cltd
push
movsb
sub
cli
sub
adc
insl
nop
mov
pop
jecxz
dec
xchg
and
or
and
inc
pop
fimuls
dec
mov
xchg
push
or
push
out
js
std
shrl
pop
int
mov
fildll
mov
push
decb
cwtl
negb
cld
push
lods
mov
xor
int3
mov
sub
push
cwtl
sahf
dec
je
push
ja
rcll
add
lret
mov
jnp
test
pop
je
and
mov
stos
loop
xor
out
out
xorl
hlt
xorb
mov
jns
addr16
jp
lods
out
jg
pop
test
or
in
scas
lods
movsl
lea
ret
addr16
out
sub
in
aad
rcrl
arpl
in
addr16
clc
inc
ror
sbb
sub
rcrb
jecxz
push
xchg
cs
sub
sub
flds
insb
xchg
popf
test
and
cld
sub
cmp
stos
enter
xchg
xor
sbb
dec
sub
out
push
lods
loop
adcl
sbb
xorb
pop
xchg
jecxz
adc
fstpt
jmp
mov
jne
jns
cmp
add
insl
aaa
push
add
popf
jmp
sbb
pop
imulb
out
ds
sub
shrb
xor
fildll
dec
cmp
repnz
mov
adc
lods
jnp
jp
xor
pushf
sti
stos
stos
push
add
lahf
out
gs
xor
lds
xchg
push
out
push
cli
mov
ss
pop
fidivrl
daa
popa
mov
push
and
mov
pop
jle
outsl
fwait
dec
or
daa
and
push
das
mov
ret
cmp
out
outsl
adc
das
sbb
inc
arpl
mov
push
inc
push
mov
add
out
out
mov
pop
mov
test
sar
pop
sub
push
sbb
or
ss
arpl
xchg
fsubrs
sti
inc
out
pop
test
push
pop
aam
push
cltd
adc
add
ret
enter
cmpsb
addr16
xor
jmp
sbb
lret
jns
add
mov
mov
xor
fsubl
out
mov
cmp
out
test
enter
inc
call
iret
stc
fcmovu
mov
inc
sarb
mov
pushf
mov
mov
adc
frstor
sub
sub
ljmp
xor
jmp
scas
sbb
icebp
add
sbb
insb
inc
cmp
push
aad
fwait
mov
cld
xlat
insl
jae
pusha
push
out
lds
and
leave
pop
in
add
mov
and
fisubrl
insb
rcl
adc
enter
outsl
loop
xor
movsl
outsb
lcall
inc
repz
movsb
fistps
add
add
pop
sub
js
cmpsl
or
into
mov
movd
mov
aad
icebp
in
push
popa
mov
rolb
les
cwtl
mov
pop
sub
test
dec
inc
xor
sbb
xchg
out
sub
and
push
jne
cmpsl
lods
dec
pop
enter
jae
push
inc
pop
ret
lcall
int
dec
outsb
nop
bound
std
push
xchg
clc
xor
jo
inc
mov
adcl
push
js
popf
inc
cmp
and
pop
xlat
mov
imul
dec
inc
jae
jne
or
pop
mov
jb
add
inc
mov
adc
into
icebp
push
stos
sti
arpl
shll
sub
push
call
xor
jl
call
push
hlt
rorl
mov
lret
scas
jb
aas
lret
fimull
outsl
or
insl
test
jbe
pusha
idivl
ja
adc
cli
sti
stc
mov
adc
movsl
call
xchg
ret
dec
pop
movsb
mov
push
jnp
mov
pop
lods
in
test
add
out
int
inc
lods
push
sub
or
sub
cmc
push
dec
sbbl
push
pusha
push
xchg
adc
test
lret
movl
jecxz
nop
imul
jecxz
outsb
add
lods
cmp
sti
mov
and
sub
popf
daa
scas
mov
cmpsb
popf
add
shr
out
stos
cltd
repnz
nop
dec
shr
int3
push
ret
push
push
sub
xor
pop
lea
rcl
icebp
xlat
movsl
mov
int3
push
push
in
movsl
lods
xor
fisubrs
ljmp
cltd
gs
mov
cmp
xor
pusha
iret
xchg
xchg
inc
andl
insb
pop
test
dec
ss
and
inc
and
bound
mov
pop
add
mov
and
pop
mov
sti
jmp
mov
movsb
mov
test
adc
mov
xchg
imul
out
call
lret
dec
and
movswl
daa
dec
sub
add
xchg
ss
jns
stos
dec
ret
cmp
cltd
pop
pop
cmp
insl
pop
bndldx
push
and
inc
das
nop
iret
scas
loop
fistpll
cld
mov
dec
mov
inc
push
das
pop
xor
push
scas
xor
xchg
sub
ja
lea
or
inc
push
int
popf
sarl
testb
inc
push
sub
sub
dec
ljmp
cwtl
enter
fs
dec
xor
test
mov
dec
inc
sub
iret
out
push
push
dec
insl
xchg
mov
cmp
aaa
int3
xchg
jp
dec
dec
rcrb
arpl
push
fidivs
fidivs
xchg
mov
mov
xchg
lods
aam
mov
push
and
movsl
sub
hlt
leave
enter
push
call
cwtl
sbb
and
xor
jns
xor
lret
cmp
mov
mov
orb
cld
xlat
cmp
add
fcompl
sub
jl
push
and
push
add
push
jnp
fwait
push
mov
popf
dec
jb
imul
adc
mov
js
outsl
js
or
dec
mov
sahf
insl
test
es
push
mov
sub
or
sbb
sub
jnp
out
jg
mov
push
pushf
test
out
cmp
je
js
xlat
jno
mov
pop
push
adcl
cmpsb
out
push
pop
jmp
fbstp
xchg
sub
ja
or
fcoms
les
inc
testb
cmp
mov
test
pop
rolb
sub
inc
mov
sbb
add
lods
mov
scas
dec
push
in
pop
push
add
jb
jmp
into
push
lret
subl
inc
mov
mov
mov
lahf
cmpsb
inc
mov
popa
mov
lret
xchg
out
or
scas
mov
out
popa
sub
push
ret
jno
pushf
stos
bnd
es
repnz
out
clc
xchg
mov
adc
test
xor
loop
ret
fcmovu
push
mov
cmp
push
pop
out
rorb
dec
sbb
cmp
jne
mov
or
inc
nop
sbb
fwait
push
cli
inc
xor
movsl
inc
pop
xor
shlb
movsl
mov
add
xor
cmp
push
jbe
push
pop
mov
mov
xchg
movsb
mov
arpl
aaa
addr16
imul
mov
xchg
adc
adc
rorb
sub
outsl
insb
or
shll
and
mov
cmp
call
shlb
jge
shlb
jp
das
cmp
dec
dec
cmp
gs
dec
pop
rcl
mov
data16
mov
fwait
call
outsb
in
jle
sbb
test
mov
inc
rorl
aas
xlat
dec
push
mov
outsb
cmp
dec
add
stos
adc
cmp
sahf
imul
das
cld
sub
cmp
inc
mov
sub
loopne
cmpl
loope
pop
out
push
add
adc
xacquire
fdivrl
push
cs
cmp
rorb
loope
es
push
jo
mov
mov
fiadds
xchg
fcmovbe
cmc
add
movb
push
adc
xchg
adc
rcll
cli
xor
ljmp
cltd
ds
adc
or
jmp
hlt
movl
mov
add
cwtl
jl
sbb
push
push
popf
mov
sub
ljmp
mov
mov
gs
stc
dec
or
in
cmp
stos
movsl
lahf
fbld
movl
jmp
inc
sbb
fldenv
jbe
and
or
bound
inc
mov
or
adc
daa
out
fcomps
sbb
jmp
repnz
in
push
cwtl
orl
xor
add
test
and
add
cmpl
cwtl
out
fdivrs
mov
cmp
rorb
out
out
aad
imul
cmp
addr16
es
in
insb
ss
push
xchg
addr16
cli
inc
or
cltd
in
sti
int3
cmp
ficomps
xor
jmp
dec
xor
xchg
add
mov
std
and
sub
enter
jecxz
or
sub
sti
lock
mov
sbb
mov
mov
or
adc
ds
dec
xchg
loopne
dec
mov
aas
pop
loopne
or
pop
ret
xor
js
or
push
pop
ja
stc
mov
xor
call
rcrb
cmpsb
std
add
test
xchg
push
xlat
adc
xchg
stos
fucomi
or
popf
sbb
cltd
xchg
xchg
adc
rcl
push
lcall
sub
out
test
cmp
and
cmp
dec
out
xchg
push
test
mov
loope
daa
outsl
les
jnp
fsubp
repnz
adc
mov
shl
repz
test
xchg
push
mov
adc
inc
movsb
adc
jg
movsl
std
int
mov
pop
lcall
mov
in
sub
add
push
mov
and
xor
sbb
jns
popf
xorl
jecxz
jnp
mov
movsl
pop
inc
scas
jl
mov
ret
dec
mov
xchg
jp
in
repz
insb
ss
cmp
lea
pop
cmp
nop
cmpsl
movl
cld
fs
and
push
enter
pusha
int
ljmp
pop
repnz
dec
filds
pop
or
sub
sub
in
push
mov
jb
cmc
push
xor
pop
sbb
test
pop
fcoms
imul
nop
icebp
aas
pusha
mov
into
cmp
aas
mov
adc
adc
out
dec
pusha
notb
push
fneni(8087
sub
inc
rcl
lcall
cs
iret
pop
pop
mov
xchg
mov
test
inc
dec
les
xor
cmp
movsb
and
adc
xchg
cmpsl
jle
jecxz
loopne
das
loope
cmp
pusha
sbb
outsl
rolb
stos
shrl
aas
inc
pop
popa
sahf
divb
sub
daa
pop
insb
sbb
mov
pop
adc
and
in
cs
scas
jns
cmpsl
int
inc
jns
mov
mov
sbb
repz
mov
insb
xor
sbb
or
stos
hlt
or
xchg
push
in
loope
adc
int3
jg
gs
mov
xor
sub
xor
ficoms
sub
stc
sub
and
sahf
test
dec
imul
jb
lret
dec
fistps
mov
ja
or
pop
data16
test
mov
in
fwait
stos
mov
mov
xor
push
xor
imul
or
inc
mov
xor
xor
push
leave
loop
push
imul
js
mov
aad
mov
into
int3
pushf
bndstx
sbb
or
mov
subl
jmp
das
push
es
and
rclb
mov
ret
mov
adc
fs
and
inc
push
jne
rclb
enter
ds
addr16
and
push
xor
cltd
fs
lock
mov
repz
lret
movsl
jp
dec
push
rcr
bound
xchg
mov
or
jnp
add
cmp
sbbb
stos
ucomiss
mov
mov
mov
adc
add
pushf
fcomip
shll
insb
fcmovnbe
mov
cltd
aam
and
lcall
mov
cmpsb
inc
push
pop
mov
mov
aas
add
scas
push
pushf
sahf
int
xchg
push
pop
and
fcmovne
or
mov
inc
push
push
mov
add
mov
sub
push
sbb
push
cmpsb
mov
fidivrl
iret
mov
push
push
and
shlb
pop
mov
scas
cli
xchg
jl
scas
sahf
outsl
or
cmpsb
cli
cmp
dec
mov
scas
int
or
int3
push
cmp
ljmp
in
mov
pop
xchg
repz
mov
jg
cmc
jae
scas
xlat
sbb
movsl
out
cwtl
lods
and
lds
ljmp
jb
outsb
mov
mov
and
mov
inc
xor
xchg
loope
std
push
jle
int3
fcompl
xrelease
ja
cmp
mov
mov
inc
mov
data16
test
data16
xchg
jle
cmp
test
lret
int3
lret
add
in
scas
jns
js
mov
dec
cmp
adc
fmuls
not
inc
fwait
outsl
test
outsb
pop
sbb
or
cmp
and
mov
scas
fs
bound
cmpb
pop
stos
bound
testl
imul
inc
arpl
and
ja
je
mov
test
xchg
stc
rclb
es
nop
xor
jecxz
loop
shr
adc
xchg
stos
rorb
cmp
arpl
sub
orps
push
leave
xchg
bound
int3
leave
sbb
lret
lds
sbb
jb
pop
mov
mov
call
push
aaa
pop
mov
mov
xchg
mov
popf
test
push
popf
jp
jecxz
je
sbb
in
lcall
shl
in
fcmovb
mov
mov
ss
fbstp
dec
mov
xor
es
loop
inc
cmp
insb
mov
jns
test
mov
lahf
aam
fs
sbb
and
jmp
mov
fucomi
dec
loop
lea
mov
out
cmp
out
roll
into
push
inc
insl
cmp
sti
jno
mov
mov
subps
enter
dec
add
loop
add
add
idivl
adc
mov
and
je
gs
push
dec
adc
orl
movsb
push
int
enter
and
fcom
jbe
daa
pop
pushf
mov
stos
ds
sahf
in
inc
jo
aas
into
sti
mov
fdivl
xchg
push
aaa
jg
or
and
dec
insb
ja
pop
mov
push
and
cmp
aas
test
daa
lret
sbb
gs
imul
repz
hlt
xchg
push
mov
rcll
push
push
test
mov
mov
incl
shr
jg
repz
jnp
fbld
cmp
fldt
mull
add
aam
out
push
pop
add
mov
add
ret
ss
clc
mov
sub
rclb
jecxz
aam
pop
pop
loope
push
daa
add
lds
sbb
xor
fucomip
ja
js
mov
aam
cltd
loope
insl
mov
incb
jne
shlb
cmp
xor
push
xor
or
cwtl
inc
fldt
add
aas
xor
dec
mov
les
adc
cmp
xchg
jns
sbb
add
jne
mov
iret
mov
in
mov
ds
data16
lods
fistps
inc
fwait
stos
dec
out
repnz
inc
inc
cmpsl
movsl
call
jl
ljmp
mov
fcmovu
stos
std
test
xchg
and
and
dec
outsb
sarl
das
int
int
iret
lea
out
andl
in
arpl
add
jp
xchg
aam
lea
pop
and
je
stc
dec
mov
ret
gs
imul
cld
pop
xchg
xchg
fs
fs
push
jecxz
stos
ss
mov
add
sub
lods
stc
push
jmp
cwtl
in
push
jmp
cs
into
push
repz
dec
xchg
xor
mov
mov
cmp
inc
dec
xchg
idivl
sub
mov
adc
fists
aad
in
int
nop
ss
repz
push
pop
das
leave
je
cmp
mov
stos
jge
outsb
jp
ficoml
jle
mov
icebp
gs
int3
xor
inc
adc
cmp
jbe
xchg
js
into
sbb
es
les
shlb
mov
cmp
bound
jg
pop
cmp
pushf
ret
nop
lods
cmp
push
mov
and
out
cmpsl
incl
dec
popf
push
mov
and
cmpsl
fldt
es
mov
mov
lods
jmp
sbb
clc
aaa
add
jb
sub
cmp
cmpsb
mov
fwait
test
addb
sub
pop
daa
aad
outsl
inc
mov
aam
mov
pusha
xor
das
push
cs
std
xchg
sti
inc
aaa
inc
push
ljmp
bound
filds
jns
js
xor
adc
das
dec
jne
lahf
inc
jo
push
xchg
scas
in
push
adc
or
and
lahf
repnz
std
hlt
add
mov
icebp
xor
xlat
dec
push
mov
push
inc
std
cmp
scas
lcall
pop
test
and
fadd
sub
dec
adc
mov
jb
xor
xchg
out
xchg
push
testb
mov
dec
cmc
or
add
jne,pn
std
dec
popf
scas
fdivrs
mov
xchg
aas
rorl
mov
cmp
mov
mov
cmp
jbe
es
mov
add
pusha
mov
stos
sbb
and
movsb
aas
dec
inc
and
or
pop
mov
in
lods
xchg
sbbb
mov
nop
int
jmp
adc
or
xchg
xchg
xchg
xchg
or
pop
adc
aas
daa
lcall
aad
cltd
push
mov
push
mov
cmp
ds
ja
cmp
cs
or
outsl
push
jle
cmpsl
insl
push
or
jge
out
shrb
orb
mov
stos
push
and
pop
mov
addr16
repz
mov
or
dec
add
out
lea
mov
jp
insb
push
or
js
stos
test
fmull
dec
and
loope
mov
mov
jp
xor
inc
loope
daa
add
cmp
add
jg
xchg
in
or
mov
insl
jbe
adc
adc
add
ffree
jnp
mov
shrl
test
lahf
xor
sti
cmp
sbb
ret
pop
out
sbb
insl
or
mov
out
push
xchg
adc
loopne
mov
cmpsb
fists
imul
mov
or
inc
lds
dec
cld
gs
pop
adc
mov
fcomps
outsb
xchg
and
shlb
and
test
movsl
int3
or
mov
sub
push
xor
mov
insb
mov
daa
rorl
ja
test
jp
lret
mov
test
jo
js
pop
shl
or
inc
mov
movsb
jge
lock
les
aad
mov
adc
inc
mov
push
and
cmp
ret
out
sbb
xchg
xchg
xlat
dec
cltd
addr16
sub
push
shrl
add
xchg
sahf
push
aad
clc
cmp
cmc
in
mov
popf
ret
sub
push
or
sarb
repz
sbb
sub
lods
cwtl
adc
cwtl
in
lods
cmp
push
mov
cs
dec
in
add
mov
scas
ds
outsb
outsl
xor
stos
test
pusha
lods
adc
jmp
jmp
pop
cltd
es
mov
push
jae
push
scas
sti
in
mov
sbb
movsb
push
mov
fsubl
loop
and
rclb
mov
sub
cwtl
daa
cs
mov
xor
das
addr16
das
outsl
in
ds
sub
aas
sub
jg
inc
fwait
dec
mov
push
into
popa
insl
shlb
sub
in
xor
out
popf
push
roll
jp
js
pop
pop
movl
inc
in
jmp
test
sub
push
sub
dec
shl
mov
roll
fisubrl
pop
out
mov
xlat
and
pop
cmp
mov
xor
adc
test
mov
sbb
xor
add
shll
jbe
mov
sbb
xchg
out
mov
pop
xor
fisubl
push
rolb
mov
leave
adc
out
test
stos
call
pop
pop
repnz
stos
das
dec
imul
cmpsl
mov
inc
sbbb
jmp
aaa
leave
push
dec
cs
decb
dec
jp
loop
mov
jp
mov
mov
dec
or
inc
cld
jno
fnsave
shrl
outsb
push
cli
ja
fbstp
sbb
scas
ss
out
xor
sub
call
mov
jne
pop
negb
or
jl
ja
and
js
sub
loopne
loop
push
mov
inc
pop
adc
lea
ljmp
push
pop
nop
mov
jmp
mov
inc
cmp
push
mov
cltd
cmp
mov
xor
int3
pop
bound
mov
pop
push
movsb
sbb
push
fnsave
hlt
into
das
jecxz
jno
out
lret
dec
add
cmp
pop
sbb
xor
ret
lods
or
adc
xor
nopl
cs
cmovp
xor
out
push
mov
sbb
add
or
ret
inc
mov
mov
addr16
inc
enter
ja
inc
ds
xlat
sbb
sbb
adc
popa
mov
jl
scas
mov
mov
adc
jg
loopne
repnz
mov
and
pop
sub
outsb
idivb
js
xchg
push
leave
and
mov
lret
rol
xor
xor
cmc
test
lock
or
lret
push
dec
mov
xor
cmpsl
fs
push
dec
arpl
fdivs
jbe
push
mov
or
ret
add
jbe
adc
mov
stos
xchg
call
movsb
xchg
adc
loopne
push
outsb
stc
icebp
pushf
sub
dec
add
xlat
dec
push
jecxz
pop
popa
hlt
and
pop
out
rol
mov
cs
std
popa
fs
inc
add
jnp
rolb
xor
xor
cmpl
sub
out
popf
push
dec
mov
adc
sub
xchg
jle
cmp
jbe
inc
sbb
fwait
ljmp
hlt
nop
iret
jns
out
js
jl
mov
divl
sub
add
push
xchg
mov
rcr
mov
add
out
pop
jno
cwtl
sbb
js
in
rcll
adc
jne
sub
push
mov
inc
cld
cmp
push
pop
sbb
dec
loopne
lock
or
adc
leave
jge
push
pop
ds
fimull
out
aas
aad
mov
popf
loope
pop
fs
lret
push
sti
xor
jle
inc
sbb
dec
sahf
fst
add
int
mov
mov
mov
push
mov
bound
mov
repz
test
lds
xchg
add
xchg
adc
pop
enter
daa
inc
ds
jno
or
cs
arpl
loopne
int3
lahf
sub
cwtl
in
cmp
add
sbb
dec
std
ljmp
cmp
out
stc
sub
cwtl
fsubrl
popa
inc
mov
inc
cld
cmp
dec
in
out
pushf
xchg
outsb
das
add
je
popa
mov
dec
sbb
int
pusha
ret
jo
aaa
jl
sbb
pop
stos
aas
pop
xor
lods
int3
sbbb
hlt
add
jmp
movsb
daa
jae
call
xchg
fnstcw
adc
lods
dec
in
jns
mov
add
inc
in
mov
rcrb
xchg
in
add
mov
xchg
clc
movsl
mov
xchg
mov
shlb
lret
scas
mov
pusha
jmp
leave
sbb
sahf
mov
fs
imull
icebp
adc
mov
push
stc
js
test
shll
cmc
cmp
movsl
mov
sbb
pop
jg
mov
xor
and
adc
cmpsb
pop
jecxz
mov
fimull
pop
dec
mov
mov
es
inc
out
shll
cmpsb
movsb
pop
add
sbb
rorl
int3
or
dec
fs
pusha
jae
leave
adc
xchg
icebp
adc
or
mov
outsl
imul
inc
insb
jb
xor
push
hlt
test
lods
repz
add
sub
mov
cmc
cmpsl
pushf
shr
inc
loop
dec
inc
into
pop
call
xor
cmp
push
or
mov
shr
dec
xchg
push
mov
imul
push
sbb
pmaxub
fcoms
lcall
hlt
push
imull
popa
cmpl
xchg
sahf
in
pop
jae
lahf
push
mov
in
pop
xor
dec
jp
sub
xchg
aad
lret
rorl
es
dec
jp
dec
mov
sub
pop
cwtl
test
push
cmc
jne
in
roll
loopne
out
and
dec
scas
pop
xchg
fistl
or
cmp
clc
je
jne
and
lret
add
mov
dec
xchg
scas
rcll
call
sub
push
add
xlat
out
loopne
hlt
or
lea
insl
sbbl
mov
add
cmp
sub
and
jns
aas
jge
lcall
out
gs
insb
jo,pn
sbb
dec
shr
std
stc
sbbl
jae
rcl
rcll
mov
out
or
test
stc
or
push
mov
pop
cmp
movsb
or
aas
adc
outsb
pop
dec
shll
add
inc
cmc
movsb
pop
ror
scas
sub
inc
inc
repz
js
jp
add
bnd
pop
dec
mov
cmp
sbb
xlat
jbe
mov
add
fidivrl
mov
ljmp
mov
dec
and
mov
nop
or
push
push
push
shlb
movsl
xlat
or
mov
lock
jp
in
je
sbb
mov
jl
adc
adc
cmp
pop
es
mov
ficomps
mov
cmp
sub
xchg
mov
cwtl
ss
js
dec
sub
in
bound
jnp
lret
je
dec
mov
sub
inc
push
mov
scas
xchg
and
inc
inc
xchg
pop
shll
cmp
in
outsb
add
inc
inc
lock
xor
inc
dec
lea
and
cmp
pop
add
cltd
inc
cmp
inc
test
sub
dec
stos
push
jo
jne
inc
adc
push
test
mov
sbb
out
xor
mov
gs
pop
and
clc
cmp
xchg
adc
cmp
mov
push
int3
subb
rcll
sbb
mov
mov
into
push
xor
test
arpl
jge
push
lea
add
in
cli
gs
pop
loopne
mov
and
pop
icebp
xchg
movsb
pop
xorb
insb
scas
shrl
and
dec
call
fisttpll
lcall
jl
dec
xor
in
roll
je
push
cmpsb
mov
lea
ret
mov
adc
mov
or
lahf
test
mov
xchg
das
sbb
push
aam
lods
add
leave
pop
jno
jo
call
mov
js
shll
mov
mov
xor
lret
cld
push
movsl
cli
pop
test
adc
into
stos
hlt
jb
in
xchg
sbb
in
jb
pop
paddq
in
xchg
jle,pn
dec
jae
dec
mov
rorl
xlat
sbb
jbe
sbb
roll
dec
mov
push
jns
mov
push
leave
mov
mov
push
mov
xlat
iret
std
stos
ret
repz
push
xchg
in
push
mov
mov
mov
mov
je
cwtl
push
mov
outsl
repz
cltd
or
bound
cltd
push
push
lret
pop
mov
xchg
aad
mov
je
js
cmp
mov
pop
jae
inc
cs
sbb
pop
inc
sub
neg
sar
or
and
cmp
sub
cmp
jle
push
xchg
xchg
fsts
cmpb
fdiv
jmp
mov
inc
shlb
pop
cld
sub
pop
movsl
sti
jp
pop
lods
push
adc
lahf
dec
inc
das
mov
cmp
outsl
insb
test
mov
xor
stc
pop
shlb
ror
ds
ret
loop
xchg
sahf
mov
leave
dec
int3
push
jg
daa
inc
stc
out
jg
and
mov
push
stos
mov
shl
sbb
int3
iret
fsubp
icebp
test
out
addb
push
push
push
mov
clc
add
int
mov
mov
push
mov
call
mov
lea
cmp
jecxz
jp
push
clc
xchg
icebp
cmp
sub
orb
into
push
or
add
jp
mov
stc
pop
rcrb
sbb
nop
ds
cmc
loope
cmc
dec
insb
frstpm(287
std
clc
int3
mov
test
icebp
adc
insb
popf
stos
inc
ss
pop
jmp
push
sbb
xchg
scas
repz
jo
push
or
xchg
xor
sub
xchg
pusha
movsb
enter
divl
popa
jno
je
cmp
js
cmp
jae
shl
ror
lcall
mov
jns
jp
test
movsl
adc
push
daa
cld
mov
outsl
std
xor
adc
sbb
lods
mov
inc
and
stos
adc
xchg
jae
jb
xchg
cmpsb
lahf
or
lods
pop
xor
ljmp
add
enter
xor
push
out
lods
subb
dec
adc
jl
sub
add
shll
addr16
fildl
mov
in
inc
ljmp
push
in
std
fdivs
popa
scas
adc
mov
in
cmp
push
test
scas
mov
dec
pop
lds
cs
jg
leave
push
mov
pop
pop
scas
cmpsl
push
pop
mov
lret
mov
jbe
inc
sbb
xchg
or
into
aam
jo
imul
dec
cmpsl
xchg
jbe
fwait
add
repnz
rcrb
lods
int3
subl
gs
cmp
test
inc
push
inc
mov
mov
mov
fidivrs
jbe
nop
pop
mov
mov
pop
mov
test
les
loopne
sbb
mov
ljmp
sbb
test
rcl
mov
scas
jnp
dec
xor
notb
xlat
repz
aaa
mov
enter
addb
mov
lahf
mov
outsl
test
inc
add
cmc
pop
ljmp
sub
lcall
xchg
or
pop
jecxz
test
jno
aaa
rcrb
sbb
sbb
add
dec
insb
inc
adc
stc
jge
cmp
cli
cmc
pop
loope
add
push
popf
ret
inc
outsb
outsb
xor
mov
or
cmc
sti
jno
sbb
repnz
stc
xlat
jecxz
push
mov
lret
sbb
in
jae
push
daa
cs
repnz
adc
lds
in
and
andl
inc
add
xchg
call
push
subb
xchg
add
inc
popw
mov
mov
mov
xchg
push
dec
pop
or
icebp
js
adc
not
pushf
in
mov
sbb
aam
hlt
aas
fstl
push
or
arpl
add
insb
inc
clc
xchg
mov
je
cltd
mov
loope
lods
xchg
sub
stos
lret
mov
hlt
mov
inc
dec
mov
out
mov
dec
add
sahf
mov
in
negl
sub
inc
mov
insb
fdivs
lret
xchg
and
xor
out
inc
jg
and
xchg
aam
mov
jg
hlt
ret
jne
inc
sahf
leave
stc
int3
cmp
push
dec
pop
jnp
jb
jl
test
andb
sahf
jae
cmpsl
xor
and
cs
xchg
push
sub
in
and
cmp
clc
repnz
inc
mov
in
xchg
imul
xor
inc
xchg
sbb
add
pop
call
js
adc
fisubl
pop
push
out
sbb
movsb
dec
inc
nop
push
test
mov
mov
add
shrl
aaa
sub
test
pusha
xlat
out
jmp
out
jle
iretw
mov
cmp
sbb
xchg
dec
in
push
dec
test
shl
repnz
fldpi
push
inc
cltd
sbb
movsl
test
xor
xchg
into
jg
aad
mov
imul
jecxz
mov
aas
daa
movsl
leave
or
mulb
xor
push
iret
leave
add
cmp
cmp
dec
dec
in
cmp
movsb
out
push
loope
xor
xchg
loope
pop
xchg
gs
out
mov
stc
int
jmp
sbb
dec
jge
xchg
es
mov
cmp
jnp
rcrb
fwait
roll
jo
in
cmpsl
xor
sti
mov
cld
mov
sub
cmp
int
sub
fistl
mov
jne
pop
xchg
sarl
cmpsl
inc
pop
les
mov
out
push
das
out
dec
aam
inc
mov
dec
test
pop
jge
mov
or
sbb
and
xor
iret
rorb
cmp
pop
xor
jne
sbb
adc
and
push
pop
icebp
shll
dec
shlb
or
xlat
lcall
dec
adc
jl
in
js
addb
xchg
sbb
mov
cltd
sub
mov
mov
call
push
je
adc
pop
xchg
call
add
mov
xchg
or
aas
jp
clc
lcall
sub
iret
xchg
fldcw
inc
fidivrl
mov
ud1
scas
jbe
pop
fmuls
mov
shl
fiadds
inc
insl
cli
loopne
cmp
sub
test
adcb
aaa
cmpsb
push
and
mov
daa
push
inc
push
fadds
clc
in
xor
cmp
cli
fidivrs
loop
insb
rcl
rep
imul
jle
stc
or
add
stos
jb
lret
add
fs
fadds
mov
std
xor
adc
shl
and
into
sahf
popa
bound
cld
imul
cmpsl
push
cmp
jo
test
mov
xor
imul
scas
and
sbb
inc
daa
les
and
sbb
xor
push
mov
lds
int3
jmp
int3
and
adc
gs
fsub
cmpsb
pusha
imul
fwait
clc
jno
mov
movsb
addr16
das
ret
addr16
fcoms
sti
insl
fbstp
push
jmp
and
pop
lock
or
fs
push
lahf
xor
inc
pushf
clc
xchg
pop
insl
pop
inc
dec
aas
pop
imul
lahf
mov
cltd
mov
jmp
leave
xchg
insl
imul
icebp
sbb
jecxz
popf
ret
mov
lea
or
movsl
add
add
mov
sbb
rclb
sbb
mov
popf
cmp
sub
insb
test
mov
leave
fmull
lcall
inc
cmp
popf
fsubs
adc
lods
ret
cmpl
pusha
stos
outsb
repz
jnp
insb
pop
in
rcrl
xchg
enter
enter
sahf
fbstp
xchg
cmp
repz
js
stos
inc
or
adc
rorb
mov
mov
cmp
push
or
dec
popf
inc
or
les
mov
ror
clc
cli
or
push
cli
imul
or
mov
sbb
imul
lcall
sbb
cmp
dec
add
xchg
lea
add
xchg
jb
xor
jae
sbb
fwait
xchg
dec
mov
pop
mov
adc
sub
cmpsl
push
int
into
popa
sbb
push
cld
xchg
sbb
fcoms
dec
adcb
cmpsb
aas
jne
in
push
hlt
loop
fwait
lock
fstpl
cmp
mov
adc
mov
lea
jnp
mov
rorl
es
jp
aas
test
scas
mov
scas
cltd
xorl
into
inc
xchg
lock
mov
or
scas
cmpsl
mov
and
or
adc
jg
add
add
lock
icebp
and
jb
int
ficoml
mov
or
jmp
popf
insb
lret
aam
hlt
cmpsl
jmp
adc
sub
inc
enter
xor
lods
loopne
es
xchg
push
arpl
cwtl
jns
in
mov
add
in
dec
in
out
test
int
cli
cmp
cmp
adc
ja
fs
dec
test
and
sti
pop
clc
fisubrl
cmp
test
rorb
pop
push
ja
xor
adc
cltd
and
or
mov
stos
mov
flds
leave
js
or
or
add
mov
mov
ds
icebp
jl
mov
out
cld
mov
mov
dec
mov
pop
inc
xor
dec
push
dec
repz
adc
ja
inc
shll
inc
jmp
repz
push
push
or
pop
fwait
orb
scas
or
cmpsb
loope
and
adc
loopne
fwait
divb
adc
std
pop
xchg
repnz
mov
jle
and
push
adc
cmp
mov
popf
loop
fistl
int
dec
adc
pop
mov
ljmp
repz
mov
push
push
inc
lds
dec
xchg
mov
push
xor
xchg
cmp
mov
pop
out
fbstp
stos
rclb
testl
push
shlb
bound
adc
pop
insl
inc
les
test
fistpl
sbb
dec
cmc
sub
pop
sub
and
sbb
loop
push
mov
or
cmpsb
adc
jmp
or
movsl
nop
mov
jno
les
test
dec
das
lret
lret
in
inc
movsl
cmp
in
int
or
jmp
jo
jnp
xchg
rcll
or
roll
das
mov
in
dec
scas
pop
xchg
xchg
inc
sbb
push
pushl
test
inc
inc
push
fisttpll
fwait
stc
and
cmp
sbb
cvtps2pi
stos
or
mov
jg
or
dec
gs
ljmp
inc
jl
and
addl
xchg
movsl
fistps
dec
push
pop
adc
cmpsl
out
loopne
ja
sub
int3
in
mov
adc
lods
inc
push
mov
jbe
sub
inc
aaa
in
unpcklps
daa
cwtl
addr16
das
xor
mov
sbb
iret
pop
aaa
inc
lret
inc
shl
push
inc
pop
dec
pop
rclb
jne
je
and
in
dec
jmp
cmp
pop
cmpsb
jmp
mov
cmp
jno
adc
test
cli
daa
jb
fistps
sbb
mov
shrb
and
add
jne
and
cmpl
mov
ja
or
ja
ja
ja
dec
pop
in
popf
rolb
fwait
sub
sahf
push
push
gs
hlt
daa
jmp
scas
aaa
xchg
add
fs
jae
push
jae
adc
fistpl
imul
inc
js
ds
push
inc
dec
jp
mov
jecxz
mov
es
jo
mov
and
mov
mov
mov
sahf
test
clc
mov
mov
mov
lret
dec
aam
fnstsw
push
sbb
gs
ja
pop
mov
lret
sub
pop
xchg
repz
cmp
dec
shl
jne
push
jmp
test
pop
out
or
stc
mov
xchg
daa
fs
dec
mov
xorb
dec
cmp
popf
or
in
pop
test
adc
sbb
movsb
cmp
add
mov
cmp
ret
pop
clc
push
add
rclb
shrb
mov
into
xor
nop
or
test
ja
jg
push
cmp
bound
enter
out
mov
icebp
in
mov
cmpsl
xchg
loope
testb
sbb
mov
xchg
mov
rcl
leave
fdivr
nop
mov
inc
bound
dec
pop
lods
cmp
fdiv
dec
fidivl
mov
mov
shld
int
push
cmpsl
mov
mov
mov
inc
in
les
jmp
inc
aas
xchg
addr16
push
xchg
cwtl
jge
setp
mov
mov
push
cmpsb
fstps
cmp
jbe
sbb
add
cmp
push
pop
repnz
arpl
mov
cmp
sbb
fs
dec
sub
and
cmp
lcall
notl
movsl
dec
rclb
jecxz
jb
adcb
shlb
outsl
std
jo
sbb
es
xchg
or
pop
mov
pop
scas
jmp
imul
xor
adc
inc
dec
or
mov
mov
stos
cs
jo
add
xlat
mov
push
gs
lahf
clc
popl
clc
pop
cmp
sub
cmp
sbb
ret
fbstp
or
mov
negb
cld
adcb
and
decb
sbb
sbb
movsl
pop
lea
or
cmpl
adc
shrl
jmp
dec
adc
mov
mov
sub
mov
rcl
xchg
adcb
or
mov
imul
cmp
jecxz
inc
cmp
xor
jae
mov
fs
push
or
add
mov
loop
stos
cli
cld
pop
int
cmp
cmp
lods
inc
cltd
int3
fildll
mov
push
jnp
or
int3
aaa
or
xchg
nop
aas
and
or
enter
jns
sub
jnp
inc
cmp
adc
xor
mov
push
dec
push
pop
dec
outsb
or
outsb
movhps
xchg
shl
test
pop
mov
and
or
or
test
pop
push
imul
into
pop
sub
push
stos
dec
sbb
fadds
call
movsl
cmp
inc
pop
das
add
or
aaa
pop
in
xchg
into
das
mov
push
mov
pop
xchg
adc
fs
mov
mov
fistpl
jl
cs
scas
test
mov
add
and
leave
mov
fmulp
xor
sub
nop
jp
sub
jns
out
jno
xor
ss
jecxz
or
inc
clc
adc
test
mov
push
mov
sbb
mov
std
mov
loope
sub
aas
repnz
test
dec
lcall
orb
pop
loopne
add
adc
mov
jns
mov
outsl
inc
dec
mov
insb
xchg
adc
adc
pushl
pop
fs
dec
dec
pxor
jecxz
sti
cmp
push
xor
sbb
jo
mov
movsb
ss
outsl
cmp
xchg
dec
push
sbb
inc
cli
pop
cmpsb
popa
sbb
sarb
mov
mov
push
jecxz
movsl
lret
repz
testl
xchg
rclb
dec
clc
mov
aam
mov
xchg
sbb
push
inc
jecxz
and
std
clc
xor
rorb
add
mov
stos
out
dec
cmp
xor
mov
xor
xor
mov
sub
inc
pop
pop
mov
dec
add
mov
cmp
fwait
jno
mov
nop
lods
pushf
mov
lea
sub
sub
stc
mov
sbb
pop
lds
clc
push
pushf
ret
fldcw
mov
cmp
inc
jmp
mov
fstps
movsl
xadd
xor
inc
dec
jg
pushf
mov
mov
cs
test
int3
es
insl
test
lods
dec
fidivrs
inc
popf
and
cmp
rcl
inc
ffreep
push
jmp
loop
pop
fidivl
out
cmc
subb
movsb
jle
es
test
lahf
jge
and
push
cmp
mov
adc
movsl
inc
mov
cld
adc
pushf
xor
cmp
insb
inc
fwait
sbb
es
mov
or
aad
add
jecxz
and
sbb
mov
aad
insl
or
enter
repnz
loopne
fsubr
cmp
jns
insb
push
jae
push
and
fidivs
xlat
inc
aas
mov
inc
add
jb
es
out
js
lds
sub
sbb
push
and
pop
and
pop
xor
inc
cmp
icebp
and
mov
xchg
cmpb
pop
repz
mov
mov
pop
cmpsb
dec
popf
ficoms
in
pop
popa
leave
push
fs
cmp
popf
fdivs
inc
ret
xchg
int
lods
mov
push
mov
pushf
sbb
push
mov
stc
shlb
jae
clc
call
xchg
mov
popf
push
sbb
movsb
sub
inc
xor
cmpsl
cwtl
sub
daa
out
jbe
hlt
mov
lret
add
inc
mov
out
mov
mov
xor
ja
sbb
dec
imul
in
out
pop
mov
and
lcall
mov
or
adc
inc
pop
leave
inc
jmp
insb
fxtract
sbb
mov
outsl
test
aas
mov
inc
mov
jg
adc
fiaddl
loopne
xchg
aad
adc
push
std
in
xor
lea
repz
movsl
mov
or
mull
xorb
sar
and
cmpsb
mov
mov
insb
pop
std
lock
jle
mov
lret
mov
in
imul
jle
enter
adc
mov
jp
mov
lret
push
sets
lock
dec
fsubs
fdivrp
cmp
stos
mov
mov
and
dec
xchg
fisubl
xchg
dec
push
sbb
cwtl
sbb
mov
push
push
daa
lret
repz
sbb
xchg
and
xor
jo
dec
mov
out
pusha
mov
mov
test
fs
ficoms
inc
daa
pusha
lds
aam
rolb
xchg
xchg
filds
push
push
xchg
repnz
gs
aad
push
jns
ds
xor
lea
test
sbb
dec
repz
lret
enter
pushf
repz
push
ss
sbb
pop
jb
xchg
pop
insb
dec
aaa
mov
movsb
insl
scas
xchg
pop
xchg
sbb
data16
call
inc
mull
jae
mov
cltd
sub
loope
push
cmp
fstps
andl
scas
xor
repnz
cmp
andb
insl
xchg
shrb
xor
or
adc
sbb
ljmp
out
or
rep
sub
lahf
xor
out
mov
scas
popf
or
adc
out
adc
push
push
mov
lods
mov
or
push
adc
xchg
mov
jno
mov
lea
cmp
xchg
or
mov
pop
les
inc
mov
and
cmpsl
sbb
fsub
rclb
ja
push
xor
jo
scas
loope
imul
and
or
fs
test
stos
popa
jb
lods
popf
xchg
adc
jo
mov
fisubrs
push
iret
jge
xor
inc
push
movsb
std
jo
push
xlat
mov
pop
add
stc
sbb
and
sub
filds
lock
pushl
pop
fisttpll
insb
fdecstp
push
enter
bndstx
adc
add
push
sub
add
add
test
lcall
dec
ficoml
stos
rcll
jmp
mov
dec
and
pop
ret
xor
jecxz
sahf
sbb
cs
imul
loopne
mov
popa
mov
int
idivb
into
shl
mov
push
scas
jnp
loope
mov
cmp
mov
dec
gs
repz
or
dec
mov
and
xchg
xor
push
xchg
arpl
or
adc
dec
imul
or
pop
dec
mov
into
mov
inc
das
outsl
sbb
scas
lock
stos
inc
inc
pusha
mov
mov
inc
jge
cli
xor
sbbb
test
out
jb
mov
pop
nop
je
jne
push
mov
jg
cwtl
xchg
ret
pop
loope
mov
xlat
bound
cmc
cs
sbb
and
aad
das
into
pop
inc
call
test
mov
sub
fisttpll
add
loope
icebp
ljmp
jbe
popa
mov
add
jnp
pcmpeqd
push
addl
mov
out
lods
xchg
in
sub
jb
sub
mov
gs
rcr
and
cltd
pop
xor
xchg
incl
xlat
ds
dec
sbb
mov
scas
shlb
out
push
data16
hlt
rcr
lret
xorl
cmc
cmc
jle
xor
dec
xor
push
lds
pushf
fldt
cmp
push
iret
sbb
cltd
push
push
addr16
mov
adc
cmpsl
fidivs
sub
jg
fwait
xchg
stos
std
mov
inc
in
mov
push
jnp
cld
leave
and
lret
sarl
and
dec
jbe
in
scas
mov
aad
xchg
and
sbb
imul
mov
scas
fldt
mov
aas
or
rcrb
or
loop
mov
jl
rorb
imul
test
fidivrs
pop
dec
pop
mov
pop
inc
push
jp
mov
or
test
mov
fnstsw
cmp
fiaddl
int3
xor
mov
cmpsb
repnz
pop
and
stc
pminub
push
mov
loope
or
push
sbb
xchg
in
shlb
aas
mov
into
xchg
mov
mov
mov
mov
xor
add
test
addr16
mov
xchg
inc
xchg
fsubr
pop
pop
outsl
insb
icebp
roll
inc
ds
repz
fcom
es
and
sbb
insb
dec
xchg
pop
adc
sub
mov
ja
xchg
shlb
adc
lret
push
shlb
xchg
in
cmpsl
mov
cmc
or
cmpsl
adc
rcrb
test
jl
sbb
jl
cmp
dec
xor
cmpsb
xor
fwait
dec
cmpsl
dec
push
mov
jg
rcl
loop
mov
and
lods
cltd
dec
sub
lret
aaa
push
xchg
jecxz
inc
insb
pusha
xlat
add
pusha
pop
sbb
jns
gs
nop
int
cmc
mov
push
ss
mov
stos
ss
jbe
das
movsb
lock
mov
ds
mov
nop
aaa
xchg
fisttpl
xchg
pop
pop
imul
pop
lods
dec
aam
call
rorl
cmp
push
in
add
jno
xchg
xor
push
out
cmp
jg
inc
sub
and
rcll
pop
inc
and
jle
adc
dec
rcll
int3
and
adc
sub
xor
sahf
jno
rol
in
mov
fdiv
pop
adc
xor
push
inc
lcall
cltd
rcl
fisttpl
loop
cmp
push
xchg
insl
mov
icebp
shll
mov
sbb
dec
inc
scas
dec
cli
ficoml
add
stc
sti
test
daa
sub
inc
call
pop
rcr
mov
in
cmp
mov
cmp
ljmp
ja
clc
add
ret
scas
xor
call
and
dec
int3
add
xor
inc
jge
fwait
ds
in
aam
mov
mov
jl
jge
dec
int
test
scas
xchg
mov
mov
in
adc
push
push
arpl
cmp
mov
aad
jb
push
cli
stos
add
push
test
lock
cmp
sub
cmpsb
pop
mov
cmc
xchg
mov
mov
push
push
add
repnz
aaa
mov
test
or
pop
pop
fcompl
pop
leave
fstpt
cmp
mov
pop
xor
and
pushf
add
add
lds
xchg
loope
sub
and
push
sub
aad
and
idivl
cmc
jg
sub
stos
cmp
sbb
pusha
pop
lds
xor
rorl
cmp
pop
filds
cmp
jp
lods
outsb
inc
aas
jo
sbb
mov
push
mov
in
push
sub
aam
les
cld
mov
mov
into
mov
xor
je
push
jl
inc
aad
into
bound
pop
cmp
dec
rcrb
jbe
jl
push
mov
sub
sub
jae
push
mov
push
cmp
mov
pushl
cmp
imul
xor
xor
shl
mov
pop
enter
adc
jnp
push
xor
sbb
gs
bound
mov
ss
xor
jnp
dec
pop
popf
test
cmp
jns
inc
aam
paddsb
or
shll
cltd
arpl
rorl
mov
push
inc
or
mov
add
xor
sub
orl
or
add
mov
xor
adc
divl
mov
sub
dec
xor
mov
out
dec
xorb
sub
icebp
sub
scas
jne
cmp
add
lods
andb
aas
cmp
gs
pop
mov
insb
mov
cltd
xor
mov
pop
mov
mov
push
mov
mov
negl
pop
int
dec
out
mov
mov
inc
push
dec
adc
jnp
dec
repnz
bnd
call
repz
insb
jge
push
rcll
rcll
enter
sub
pop
ret
inc
outsl
xchg
imul
pop
jecxz
out
es
aad
and
repz
xor
scas
pusha
out
add
mov
rcr
int
adc
sbb
jp
sub
data16
push
sbb
lods
mov
test
jmp
hlt
push
cs
gs
pop
sbb
enter
ja
xor
fidivrl
sub
loopne
scas
std
xchg
andb
xchg
lds
fs
cvtps2pi
jle
jne
sub
fidivl
add
mull
in
push
or
movb
std
inc
lock
rclb
ljmp
sub
pop
lods
push
mov
and
std
aam
mov
jb
icebp
adc
pop
xchg
outsl
daa
pushf
mov
icebp
push
push
hlt
mov
dec
sub
js
mov
xchg
out
cmp
adc
jb
sbbl
cmp
rclb
lods
jmp
jge
sub
adc
aaa
lcall
pop
stos
shll
jno
repnz
cli
push
les
flds
mov
sub
cmp
test
loop
jmp
inc
mov
aam
pop
in
mov
es
dec
imul
adc
cmpsb
jae
shlb
aas
mov
mov
lret
fsubl
cld
pop
test
mov
loope
and
cmpsl
mov
shll
mov
in
movsl
sub
cmp
mov
aaa
nop
mov
aad
mul
xchg
cltd
mov
mov
sub
mov
mov
jbe
xchg
fimull
jbe
mov
cmpsl
pusha
rclb
inc
mov
int
movsl
xchg
and
fs
sbb
popf
outsb
add
jno
add
fstp
inc
loope
adc
in
es
sub
mov
ja
jle
gs
out
addr16
and
mov
cli
test
inc
mov
xchg
or
xlat
sbb
adc
sbb
cmp
das
mov
jg
xor
xchg
xchg
es
lcall
xchg
xchg
cltd
arpl
bound
sbbl
cltd
push
adc
inc
sub
xchg
loopne
out
lahf
xchg
adc
xor
inc
push
add
jb
mov
or
imul
gs
lcall
sub
insb
bound
jbe
cmc
xorl
xor
mov
cmpsl
mov
pusha
out
sub
loope
out
inc
adc
loope
xchg
push
pop
mov
sub
sbbl
aas
mov
jno
sti
add
push
xchg
test
mov
les
sbb
cmpsl
pop
pop
and
jb
cli
arpl
add
dec
fsubrs
jge
sub
fsubrl
in
sub
adc
adc
mov
jecxz
loop
cmp
pop
nop
out
mov
sahf
cmpsb
fistl
jb
scas
stos
xor
cmpsb
test
js
jecxz
fmuls
lret
cmp
mov
dec
ss
pop
push
xchg
sub
mov
inc
fidivrs
stos
ret
int
adc
mov
mov
inc
pop
es
hlt
ret
adc
outsl
flds
dec
shll
sbb
fdivl
xchg
ja
scas
and
lret
jge
divb
cmp
add
addr16
mov
mov
jno
icebp
push
out
push
das
adc
jo
sbb
push
arpl
xchg
cmp
or
nop
jp
jno
flds
shlb
sarb
mov
and
shrl
pushf
enter
add
mov
gs
xchg
sub
sub
sbb
pop
and
out
lods
push
adc
push
pop
xor
les
pop
xor
loop
cmp
sti
lds
jo
outsb
dec
jb
adc
xchg
mov
cwtl
sbb
mov
sbb
mov
pusha
mov
cmpsb
in
adc
int3
xchg
movsb
fsubrl
xor
add
xchg
push
push
mov
pushf
xchg
test
sub
jns
std
jno
push
dec
shrb
dec
pop
imul
pop
scas
xchg
cmp
fnsave
inc
jmp
pop
lock
sub
xor
jne
rcrl
rcll
int3
push
dec
lods
fnstcw
dec
scas
jge
gs
jo
leave
mov
sbb
inc
call
addr16
test
lds
xchg
xchg
cmp
xor
jge
in
or
lret
and
and
std
fmul
ret
nop
les
mov
sbb
orb
mov
dec
pop
dec
into
xorl
and
adc
jecxz
lahf
jl
cmp
push
push
lcall
mov
xor
iret
cli
scas
and
mov
loope
ret
test
or
dec
leave
or
add
filds
pusha
lods
mov
mov
lahf
inc
hlt
jne
cld
es
xchg
adc
mov
inc
mov
div
jnp
out
ret
aaa
xchg
std
add
cmp
testb
out
xor
mov
xor
and
or
lods
in
test
test
inc
pop
push
addr16
or
mul
pop
dec
ja
sub
mov
xlat
imul
int3
cwtl
pop
lcall
jmp
jnp
imul
ret
mov
loope
leave
inc
pop
cmp
in
add
cmpsl
es
mov
mov
lahf
pop
in
xlat
into
paddq
popfw
jnp
mov
mov
scas
mov
aas
imul
jno
sahf
out
jns
sub
idivb
std
push
cmc
iret
inc
loopne
add
std
shr
notb
lahf
test
out
push
xchg
outsb
pop
int
push
lods
pop
sbb
mov
pop
and
inc
jne
out
add
pop
test
dec
push
hlt
sbb
mov
mov
inc
inc
vpshufd
xchg
or
std
fsubl
pushl
int3
or
movsb
lods
popa
iret
mov
and
pop
mov
rorl
pop
cmc
enter
loop
icebp
js
lahf
xor
lock
inc
pop
pop
loope
std
pcmpeqb
mov
cltd
push
jne
in
mov
sub
jmp
mov
push
les
in
xor
sub
jo
jno
and
lret
ret
push
fcomps
push
es
push
ret
jle
stos
xor
aad
out
push
cld
lds
or
cmp
stos
stos
sub
mov
xchg
push
inc
mov
fiadds
rcr
cld
enter
icebp
inc
mov
scas
negl
push
jg
sub
sbb
push
dec
push
adc
cmpsl
pop
jo
cmpsl
ljmp
push
out
insb
push
das
repz
dec
mov
shll
rcr
into
push
dec
les
adc
jbe
lods
push
jo
jo
cmp
or
js
inc
pop
xchg
and
fidivs
adc
dec
cltd
and
dec
push
mov
call
lea
out
js
mov
inc
rcrb
inc
testl
das
out
mov
subl
movsb
dec
adc
fxtract
popf
mov
pop
mov
inc
data16
adc
imul
inc
addr16
out
flds
adc
fiadds
lds
and
mov
pop
sub
imul
xchg
arpl
daa
enter
xchg
push
sbb
popa
dec
mov
cmp
fwait
aaa
cmc
sarb
pop
cmpsb
cli
push
cwtl
jbe
sbb
cmpsl
mov
push
push
bound
adc
jecxz
mov
xchg
mov
and
adc
cmc
inc
sbb
inc
das
mov
pusha
inc
dec
sbbb
push
lret
jae
scas
jle
es
ret
mov
mov
inc
jae
push
test
mov
jbe
xchg
inc
call
mov
mov
leave
out
popa
std
fiadds
hlt
jnp
lods
imul
pop
add
xchg
jb
lcall
pop
nop
shrl
rolb
and
and
lea
dec
sbbl
xchg
icebp
aam
loopne
cmp
jg
lret
lcall
or
jle
ja
lea
sbb
mov
fwait
cmp
sub
pop
xchg
cmp
shrb
mov
dec
ljmp
inc
jno
ja
xor
sti
scas
test
pop
das
addb
and
push
call
aaa
or
testb
pop
cwtl
jmp
inc
mov
xchg
repnz
mov
mov
and
mov
cmp
xor
xchg
fwait
jo
cmp
arpl
sub
fldt
testb
int
sbb
enter
int
inc
and
lock
mov
cmpsb
loop
addr16
inc
or
sbb
data16
inc
push
testl
in
pop
icebp
jge,pt
lods
mov
rolb
and
repz
fwait
mov
add
or
inc
add
rcrb
push
mov
arpl
mov
dec
add
jno
cmp
push
stc
add
add
push
adc
add
insb
inc
lret
out
push
or
iret
out
inc
call
cs
sahf
mov
cwtl
lea
jno
sbb
out
push
fisubl
xor
pop
icebp
icebp
sbb
test
pop
es
xchg
fwait
shl
or
das
sarb
push
pop
into
imul
pop
mov
cld
mov
mov
aaa
ss
movsl
imul
add
in
popf
scas
mov
cmpsb
mov
sub
fsubl
xchg
mov
fwait
test
jle
bound
and
add
push
mov
dec
cmp
in
orb
pusha
aaa
mov
shr
and
dec
jns
ret
and
sti
out
fstps
lock
idivl
sar
cmc
sbb
das
stc
mov
or
mov
jl
bound
loope
mov
push
mov
jl
scas
xor
inc
push
adc
inc
fcmove
rclb
cmp
mov
mov
bswap
mov
call
sbb
rep
adc
sbb
test
inc
or
lods
dec
bound
inc
loope
outsl
or
ss
test
add
stos
pop
or
add
mov
shrl
jno
sbb
sub
sub
mov
xchg
in
sub
pop
xor
fidivs
push
scas
mov
sub
xor
pop
and
mov
pusha
jnp
adc
xor
or
mov
pushf
xchg
dec
mov
nop
cmp
mov
mov
mov
jmp
lahf
push
imul
fisttps
sahf
pop
xor
push
idivb
mov
subl
mov
in
outsl
insb
or
adc
aam
jnp
cli
imul
loope
int3
push
rorb
dec
mov
enter
cmpb
je
push
xlat
sbb
xchg
jne
data16
push
jge
cld
ja
fwait
jbe
cltd
test
mov
mov
out
and
cmp
push
or
and
stc
stos
sbb
and
js
sti
cmc
fimull
iret
sbb
repz
pop
or
cmp
mov
lods
pop
jb
xor
lret
cs
jecxz
incl
outsb
test
es
cmp
lds
and
pop
push
mov
adc
jb
inc
stos
pop
cs
xchg
mov
lock
adc
jecxz
add
ss
inc
jge
ds
mov
pop
scas
inc
sub
jmp
int
imul
lock
ja
add
fwait
lds
adc
jp
xor
sbb
stc
repnz
out
jne
cs
pop
lock
repnz
lods
js
icebp
mov
insb
aaa
pop
ljmp
shll
pop
or
aaa
movsl
mov
lock
test
jecxz
or
and
sahf
mov
pop
fwait
xchg
mov
mov
xchg
ret
test
aam
xchg
mov
xor
jbe
cmp
pop
jnp
cmp
dec
adc
push
jbe
lock
adc
jg
add
in
fxch
daa
push
cmp
cmpb
loopne
test
popf
stc
std
icebp
xor
test
push
sub
ret
and
pop
pop
lods
pop
lods
and
adc
pop
lcall
bound
mov
cmc
das
mov
jecxz
dec
adc
pushf
loop
shlb
inc
cmp
sbb
adc
ret
das
lock
mov
xlat
cmp
sub
push
scas
adc
mov
jg
dec
xchg
xor
lret
sahf
sub
sub
inc
mov
mov
mov
jnp
repnz
pop
cmp
mov
push
or
cmp
rcrl
xchg
adc
cmpb
out
dec
pop
ficomps
leave
jge
jb
push
xor
xchg
jle
xor
sbb
inc
aaa
rcrb
lahf
add
cmp
add
and
pop
push
enter
jmp
loope
out
and
xchg
stc
push
inc
inc
push
cld
sar
mov
decl
sub
mov
pop
pop
dec
divl
sub
or
lock
shrb
dec
lret
mov
fwait
das
pop
or
cmpsl
sbb
dec
aas
jg
call
xchg
cmp
bound
cmp
pop
push
lcall
add
dec
lock
ja
loopne
popf
aam
xchg
adc
and
loop
daa
stos
lret
lds
sbb
roll
sub
cwtl
std
lss
or
cltd
jmp
icebp
loopne
xchg
icebp
ja
sub
mov
xchg
inc
mov
imul
pop
and
idiv
pop
sbb
inc
aad
hlt
stc
inc
daa
jo
hlt
fimull
repnz
ljmp
iret
popa
mov
je
loop
pop
sub
daa
mov
cmpsb
jp
outsb
adc
aas
lods
outsl
inc
enter
or
insl
xchg
push
xchg
sar
cmp
or
and
dec
cmp
sub
lcall
mov
jecxz
test
fwait
pop
pop
mov
or
pushf
cmp
sbb
fisubrs
lds
cli
out
xchg
je
mulb
lcall
and
adc
jge
sub
jp
xor
das
mov
aad
mov
push
fisubrs
mov
xchg
mov
push
mov
lcall
gs
sbb
push
pusha
movsl
pop
out
imul
add
out
mov
popf
and
cmp
std
mov
repnz
out
add
mov
pop
jp
xlat
in
lcall
inc
mov
loop
adc
mov
jge
ja
or
xor
xor
jbe
pop
sbb
adc
rcr
add
je
arpl
js
or
mov
mov
and
mov
add
mov
clc
sbb
and
sbb
xchg
fimull
pop
mov
push
push
dec
fwait
sbb
outsl
cmp
mov
or
and
ror
jg,pt
pushf
xchg
test
addb
enter
mov
dec
sub
sbb
lret
push
mov
in
jp
xchg
add
mov
lods
out
lds
jge
jp
dec
loopne
xchg
clc
inc
inc
jb
addr16
lret
xchg
or
loop
inc
jg
or
cwtl
and
mov
push
mov
lds
add
in
outsb
arpl
xchg
adc
push
aam
inc
scas
cld
pop
arpl
push
fcmovbe
cmp
add
xchg
ja
leave
ja
cld
sbb
fisttpl
pusha
jne
cmp
cmp
xchg
dec
leave
test
aam
test
pop
xchg
les
stc
ljmp
mov
add
jae
jno
inc
xchg
shll
sbb
fs
dec
inc
mov
sti
sub
or
cmpsb
shrl
sbb
arpl
jnp
es
xor
call
cltd
jmp
inc
mov
jecxz
jp
inc
test
push
dec
mov
fsubrl
add
lret
xchg
or
inc
or
pop
sti
push
sub
dec
xchg
jo
ficoms
loopne
rcrl
loop
inc
dec
adc
roll
dec
dec
xchg
enter
sbb
out
push
push
jmp
bound
sbb
xchg
push
jecxz
test
lea
push
xchg
iret
pop
scas
mov
scas
adc
jge
dec
add
dec
add
xor
insl
movsl
jmp
repz
add
add
xlat
aaa
mov
call
nop
push
inc
pusha
mov
xchg
mov
push
ds
int3
rorl
mov
jmp
pushf
loopne
out
mov
adc
adc
pop
stc
scas
and
shl
and
mov
in
imul
add
mov
arpl
or
ss
pop
mov
mov
xchg
je
jne
adc
push
iret
cmp
decb
loopne
xchg
cmp
outsb
pop
nop
lcall
sbb
add
or
andps
adc
jns
imul
and
sub
mov
in
stc
pshufw
data16
inc
shlb
faddl
adc
aam
test
xchg
lret
sbb
out
inc
rolb
outsb
pop
cmp
and
mov
inc
rcrl
aad
rcrb
jbe
sbb
lcall
cli
mov
cmpsl
out
int
aam
inc
arpl
or
orl
aaa
pusha
stc
mov
addl
addb
or
push
xor
jbe
add
scas
test
xorb
push
in
gs
jno
push
scas
sbb
cmpsb
sbb
cmpl
outsb
jg
pop
xchg
popl
push
repz
ret
shrl
fistpll
jno
pop
cmc
bound
loope
pop
jecxz
pop
enter
into
mov
imul
mov
fcomps
imul
in
sub
jb
lahf
mov
jo
insl
stos
es
mov
cmpsl
leave
aad
sub
dec
das
push
jmp
ja
add
pusha
je
and
mov
movsb
push
push
inc
inc
ja
js
lcall
pusha
out
loope
mov
sbb
adc
push
xchg
je
fsubl
je
rcrb
movsb
inc
mov
repz
out
loopne
fistl
mov
lods
inc
aam
xchg
les
pop
add
push
inc
iret
cmp
xchg
inc
lods
fldenv
lods
cmpsb
dec
push
cwtl
dec
mov
test
mov
xchg
sbb
stos
mov
xor
mov
mov
cmp
mov
mov
into
jno
push
push
movsl
insl
rorb
push
inc
xor
stc
push
scas
ja
inc
mov
sbb
jno
pusha
jb
mov
xor
jecxz
loopne
cmp
popf
pop
test
adc
sbb
fildll
add
or
movsl
xchg
outsb
push
adc
ds
scas
ret
aas
inc
out
jbe
cli
mov
sub
fisttpl
xchg
cwtl
xchg
stos
xor
adc
into
jb
outsl
enter
jge
and
nop
adc
cmp
push
push
shrl
call
mov
je
pop
clc
repnz
xlat
xchg
je
movsb
mov
ror
add
cld
sbbl
sar
test
adc
aas
adc
xor
into
jge
cmp
and
data16
or
or
ljmp
sbb
jge
mov
adcb
xor
mov
mov
dec
xchg
arpl
dec
pop
mov
in
bound
mov
xor
lahf
add
jo
ret
dec
fcompp
xorb
out
lods
xor
in
adcl
outsb
aad
gs
dec
sbb
or
jne
pop
sub
das
les
jno
mov
push
and
mov
inc
mov
addl
mov
lahf
xor
sbb
jp
bound
jecxz
cld
js
xchg
cld
and
int
lret
int
or
nop
or
lahf
cmp
mov
es
xor
mov
pop
mov
mov
cmp
adcl
repz
cld
rcll
add
fstpt
add
sbb
test
mov
sub
data16
popa
jns
mov
mov
movsb
xor
xchg
mov
cmp
lret
push
and
nop
lods
mov
scas
dec
sarl
aam
sbb
std
mov
sub
push
icebp
int3
cmp
icebp
cmp
shlb
pop
test
lahf
dec
jecxz
push
sarb
pop
out
and
shll
push
sub
adc
or
in
cli
ret
xchg
inc
mov
pop
sbb
cmpsb
outsb
push
inc
cmp
inc
inc
sub
test
pop
cmpsl
xorl
pop
scas
aam
pop
ret
adc
jbe
enter
dec
lea
pop
pop
popa
xchg
fldcw
fnstenv
in
js
pop
stc
pop
mov
adc
sarb
clc
pop
add
cs
pop
jne
cmp
subb
into
fsubrl
lds
sti
mov
sahf
dec
mov
mov
insb
mov
or
dec
leave
imulb
add
out
notb
popa
add
cmpb
and
cmp
arpl
push
inc
and
mov
mov
xor
scas
dec
xchg
adc
add
pusha
sbb
sti
push
adcl
sbb
outsl
inc
in
lds
or
mov
movsl
cli
jge
clc
ja
jge
mov
insb
lcall
ja
push
ja
cwtl
pop
test
fisttpl
xchg
and
cmpsl
insl
test
outsl
in
das
push
in
jecxz
xlat
pushl
sti
mov
or
jg
js
mov
dec
orl
in
std
mov
mov
aad
vxorps
dec
sbb
push
js
cmp
fisubrl
xor
push
xlat
or
scas
cld
sbb
insb
push
push
lcall
fwait
les
dec
sbb
pusha
lods
and
sub
inc
call
jl
adc
mov
pop
stos
outsl
int
aad
hlt
sub
js
push
xchg
lock
mov
leave
mov
out
push
sbbl
movsb
insb
outsl
sti
fwait
inc
cmpb
fnstenv
daa
repz
adc
jl
jecxz
cmp
push
pop
fbstp
adc
js
inc
loop
adc
push
xchg
pop
push
icebp
mov
bound
sar
pushf
out
or
add
movl
shl
sub
stos
push
lahf
pop
push
notl
stos
xchg
or
les
and
pop
pandn
dec
mov
daa
psraw
xor
xchg
sbb
push
imull
add
clc
jo
xchg
mov
cmp
fsts
add
into
stc
hlt
popa
add
cli
sbb
scas
dec
loopne
and
cwtl
inc
dec
jge
pop
rolb
inc
pop
hlt
and
icebp
cmp
or
jl
mov
xchg
dec
push
clc
clc
cmp
cmp
outsb
fs
scas
clc
popa
arpl
stos
aas
das
inc
mov
mov
mov
jbe
outsb
jmp
cmc
push
xor
frstor
xchg
mov
push
add
fidivl
sub
push
inc
arpl
pop
cltd
push
xor
push
lea
adc
push
and
popf
mov
and
rolb
push
inc
ljmp
popf
mov
cmp
fdivr
popf
roll
or
mov
cmpsb
test
xchg
mov
fmul
cltd
movsb
int3
int
fstpl
fwait
call
fldcw
dec
mov
popf
pop
add
sbb
mov
pushf
ret
push
and
fldcw
inc
jle
pop
fsubrs
mov
cmpsl
mov
dec
dec
push
shl
dec
mov
stos
scas
ja
std
sbb
pop
ret
sbb
mov
and
fisttpl
dec
sbb
xor
loope
lods
jne
imul
dec
cltd
xbegin
push
fwait
imul
mov
std
mov
cmp
pop
xor
push
mov
ljmp
mov
mov
pop
xchg
lock
push
aaa
lret
cwtl
jnp
imulb
pop
pop
add
fwait
mov
in
xchg
stos
and
xor
mov
sub
sbb
sbb
and
pop
andl
cld
mov
push
popa
mov
adc
xchg
das
cli
sti
sbb
mov
cvtps2pi
inc
ret
cld
push
pop
ret
out
sbb
mov
aaa
xorb
mov
sub
cli
mov
divb
xor
sub
aas
bound
dec
push
and
dec
lret
push
or
push
xchg
orb
push
sub
sti
pop
mulb
cltd
sbb
jle
pop
je
and
call
push
loopne
insb
jmp
adc
add
pop
fwait
movsb
mov
inc
rorl
dec
dec
fcomip
mov
xchg
inc
clc
mov
test
xor
test
adc
add
add
inc
pop
xchg
nop
outsl
movsb
adc
dec
xchg
add
mov
mov
inc
jge
les
lcall
xlat
jp
cmp
cmc
repz
pop
icebp
leave
sbb
lahf
pop
push
loope
cmp
std
fcomps
xor
dec
aad
je
xchg
lret
cmp
mov
out
cli
mov
ja
mov
inc
jle
jbe
leave
mov
test
ret
shlb
adc
mov
into
ja
test
negl
mov
outsl
pop
divl
popa
push
das
pushf
adcb
lds
clc
ja
lods
cli
scas
sbb
ds
jg
out
into
mov
mov
mov
ss
adc
cmpsb
mov
mov
cli
sti
dec
fcmovnb
lcall
sbbl
push
cmc
xor
inc
inc
inc
lcall
cmp
adc
ss
jbe,pt
mov
les
mov
push
sub
jae
jb
inc
dec
shl
cltd
mov
push
ret
mov
in
mov
jle
fisubrs
jne
cmp
out
je
adc
shll
mov
ss
sbb
and
inc
test
or
dec
inc
dec
lahf
movsl
mov
mov
ffree
cmpsb
pop
cmp
push
icebp
mov
aam
and
insl
and
aad
jnp
xchg
cmpsb
les
outsb
loope
push
or
idivl
pop
mov
push
ja
fnstsw
jns
adc
enter
xchg
adc
mov
shll
jp
stc
movsb
sarb
scas
push
mov
mov
pop
push
stos
dec
inc
push
call
dec
ret
test
xor
imul
mov
mov
and
iret
pop
imul
roll
mov
mov
and
sub
cltd
loop
fnsave
fwait
push
mov
xor
jge
pushf
filds
mov
xor
stc
jl
lret
lcall
push
sub
movsl
or
mov
mov
idiv
jne
push
lret
fists
test
cli
in
andb
lahf
sbb
jge
xor
mov
xchg
loop
add
dec
neg
scas
stos
repz
adc
adc
jnp
add
adc
mov
sbb
mov
data16
pop
pop
adc
and
add
jmp
jp
scas
mov
cmpsb
mov
lea
and
ret
jp
dec
out
push
inc
ds
rcr
jg
inc
mov
adc
push
xor
aad
xchg
call
sbb
in
xor
push
adc
ds
mov
ficomps
lret
mov
cltd
jo
sbb
stos
stos
pushf
call
lret
or
dec
cmc
fiaddl
mov
cld
mov
mov
dec
out
ja
js
int
sub
mov
ss
push
mov
dec
out
aam
stos
repnz
aam
notl
xor
and
add
push
popaw
mov
addl
pop
jb
xchg
xor
ds
push
pop
ret
mov
add
sbb
mov
adc
popf
lock
pushf
inc
mov
pop
and
ljmp
cmp
jp
cmpsb
add
out
xchg
sti
or
and
xchg
loop
pop
in
push
int
pop
mov
std
mov
push
or
inc
sub
xchg
leave
xchg
inc
mov
jmp
popf
mov
jo
repnz
xchg
cmp
xchg
xlat
xchg
inc
cmp
sarl
jl
xchg
xor
mov
jmp
inc
sarb
jno
enter
rcll
cwtl
push
js
xchg
loopne
in
mov
stos
cmovne
xchg
out
mov
in
add
out
sbb
popa
leave
xchg
sarl
leave
shll
sbb
scas
jo
repz
es
rcll
jmp
int3
cmp
jbe
iret
sbb
pop
lock
je
js
daa
out
fs
jl
mov
inc
inc
dec
aad
scas
js
mov
adc
or
cwtl
lcall
lea
sub
sti
inc
lea
mov
pusha
adc
jg
scas
sbb
xor
jno
dec
repz
mov
test
lea
iret
jg
hlt
in
mov
sbb
lahf
xlat
and
sub
fstl
xchg
leave
pop
sbb
leave
mov
aam
arpl
inc
xchg
lds
jb
fcoml
loopne
push
jle
mov
cmp
adc
mov
test
or
sbb
xor
cmpsl
fisttps
imul
movsl
out
mov
fwait
adc
xchg
xorl
jmp
aam
xchg
mov
and
ljmp
xchg
rcr
pusha
rcl
xchg
mov
andb
test
jl
or
arpl
fidivs
stos
popf
xor
test
cmp
andb
xchg
gs
nop
ret
nop
pop
cmp
jo
push
data16
cmp
push
and
cmpsb
sub
mov
xor
push
and
or
or
jbe
push
loope
push
push
inc
xor
daa
and
xchg
mov
dec
out
shrb
push
xchg
lods
push
es
icebp
into
ja
fdivrl
shlb
cmp
sahf
scas
cs
cmp
mov
xor
push
mov
pop
mov
cmp
loope
xchg
cld
decb
leave
mov
dec
inc
jl
out
rcrl
ss
jmp
cmc
lahf
pop
push
ss
dec
dec
dec
push
xor
xor
cmpl
jmp
lods
aad
mov
loope
jmp
frstpm(287
xchg
push
aad
push
aas
lock
mov
jne
shl
imul
fiadds
inc
stos
and
lcall
pop
aas
sarb
push
jp
push
mov
lds
sarb
cmp
push
add
push
mov
jns
adc
cmpsl
cli
inc
jmp
ljmp
push
movl
mov
movsl
mov
or
xor
ss
fdivrl
dec
sub
in
xor
xchg
pop
jo
xchg
test
call
mov
nop
cmp
mov
and
popa
inc
pop
in
repnz
mov
lock
pop
xor
cmp
jnp
lds
hlt
pusha
fdivs
stc
xor
mov
sbb
out
xchg
roll
in
dec
xchg
mov
lret
into
xchg
cmp
adc
xchg
mov
shl
push
adc
sbb
iret
dec
xchg
xor
sub
lea
jmp
mov
enter
cmp
and
pop
imul
lcall
shll
into
popf
lret
es
xlat
fisttpll
shll
push
sarl
mov
andb
cs
hlt
stc
jne
lret
or
cmp
test
jmp
mov
outsl
mov
dec
repz
icebp
hlt
sahf
bound
xchg
xchg
loop
jmp
scas
int3
pop
adc
mov
ffree
addb
sub
jg
pop
ja
jae
lea
add
ds
jg
add
sub
imul
mov
push
out
adc
in
imul
push
mov
movsb
shll
cld
adc
jae
jge
fisttps
push
in
cmpb
cmpsl
fcom
loop
cmpsl
not
mov
cmpsl
dec
dec
adc
lret
or
iret
sbb
fs
dec
fisttpl
push
in
push
mov
jg
mov
sub
mov
subl
ds
gs
jae
xor
inc
dec
sbb
shr
adc
add
jp
push
lods
pop
xchg
repnz
pop
repz
ja
sub
fldcw
rclb
sbb
arpl
fsub
in
xchg
ds
inc
test
mov
jns
sub
call
popf
arpl
test
bswap
les
xor
mov
mov
pusha
sub
cli
sahf
daa
or
xor
out
push
xlat
sub
aas
rolb
lret
movsb
cli
lcall
loope
aas
xchg
and
not
adc
subb
or
rorb
cld
dec
adc
movsl
dec
adc
sub
rclb
lods
in
pusha
repnz
daa
xchg
rclb
or
push
fdivrs
ficoms
addr16
jno
jns
xchg
sbb
push
mov
ds
cmp
lock
cmpsl
out
loop
xchg
into
push
aad
jmp
mov
lea
push
mov
jae
mov
or
xchg
fdivr
or
fisubs
dec
or
movsl
stos
daa
loope
movsl
inc
jno
sub
dec
fdivrs
ljmp
adc
mov
js
inc
stc
fidivrs
in
aad
loopne
push
stos
ljmp
push
dec
aam
xchg
sahf
rcrb
add
aas
pop
add
loopne
add
xchg
dec
fs
push
pop
push
movsb
fidivl
inc
mov
and
sbb
mov
clc
out
inc
faddl
dec
out
sub
pop
into
nopl
mov
adc
push
push
imulb
in
cmp
pop
mov
mov
sbb
movsl
or
pop
inc
scas
dec
push
pop
mov
orb
ja
fidivrs
lock
jge
fbstp
lret
shl
pop
out
out
ja
push
repnz
sbb
dec
stos
scas
mov
rclb
cs
scas
sub
lcall
inc
outsl
jnp
movsb
sti
sbb
and
sbb
ja
xchg
push
push
inc
xchg
sbb
sbb
mov
stos
xchg
movsb
sub
fstps
lcall
mov
mov
push
push
scas
pop
jne
shlb
lret
je
add
inc
sub
cld
pop
iret
fs
setb
loopne
fsubl
push
jne
jp
or
mov
push
cli
lock
rcrl
push
mov
bound
cli
xchg
push
adc
inc
shlb
into
out
mov
mov
jns
adc
sbb
mov
lret
pop
rcrb
mov
iret
jp
pop
aas
inc
in
pop
dec
adc
ret
lahf
aam
xchg
push
xchg
lret
stos
das
mov
pop
in
pop
shrl
dec
sahf
jbe
in
add
mov
xchg
push
cmpsb
fbstp
pop
subl
push
dec
stc
or
xchg
jle
popf
sub
add
push
vmovsldup
cld
blsic
jmp
jl
cli
movsb
jnp
call
push
xchg
jg
leave
movsb
jl
jmp
mov
daa
inc
movsl
dec
jl
test
pop
adc
aas
loopne
imul
in
sbb
stos
js
repnz
push
icebp
jg
loopne
sbb
shlb
add
push
cmp
jbe
pop
mov
lods
faddl
sets
inc
cld
mov
push
and
cli
fs
xor
orl
lcall
inc
xchg
pop
nop
hlt
pop
mov
jae
adc
aad
mov
popf
mov
push
test
xchg
dec
xor
or
push
ja
mov
out
std
out
cmp
xchg
xor
lods
dec
call
rolb
rolb
fcoml
ret
insb
jns
mov
cwtl
rorb
bound
cmp
shrl
gs
out
jbe
ljmp
cmp
or
jb
adc
iret
dec
sbb
rolb
cmpsb
dec
cmp
lea
out
loopne
iret
mov
popa
mov
inc
nop
dec
sbb
rep
and
mov
imul
nop
sahf
pop
inc
in
mov
or
or
shlb
push
inc
scas
in
dec
add
xlat
in
add
test
xor
jae
and
cmp
fimuls
pop
enter
dec
test
and
push
stc
cld
sub
sbb
out
pop
lcall
dec
jb
xorb
jno
and
out
sbb
daa
add
mov
xlat
xor
or
neg
movsb
stos
cmpsb
bound
jnp
lcall
iretw
add
das
mov
cmp
adc
popa
shlb
mov
test
xchg
into
inc
dec
mov
inc
jb
negl
sub
jbe
in
test
clc
add
or
cmp
mull
loop
out
and
or
pusha
lahf
test
sub
cs
add
mov
jns
dec
inc
outsl
pop
js
jnp
cli
test
stos
fldl
mov
mov
mov
cmp
cmp
daa
out
xor
adc
xchg
jg
or
fmul
dec
jns
addr16
cmp
mov
fisubrl
jmp
mov
testb
mov
sbb
je
mov
xor
out
mov
insl
imul
xchg
inc
fmulp
dec
mov
fstpl
rcll
push
or
scas
mov
fs
icebp
push
les
fdivrl
inc
fimuls
mov
popa
in
mov
add
stc
shl
stc
sbb
mov
arpl
xchg
lcall
mov
popa
cmp
jp
cmp
xchg
lcall
lods
jge
stos
leave
inc
or
cltd
xchg
mov
rclb
shr
sti
cli
sbb
xchg
fsub
jno
xor
mov
xlat
xchg
mov
mov
movsb
inc
jb
inc
push
lret
test
loopne
ja
ss
jmp
icebp
xchg
and
inc
jge
cmpsb
ss
shrb
in
daa
mov
sub
mov
outsl
idivl
sub
or
fsubs
pop
dec
cli
push
xchg
fmulp
ds
mov
popa
lahf
in
dec
sub
cmp
mov
jne
sbb
xchg
add
fidivrs
cmpsl
fstpl
ret
rcrb
and
dec
scas
in
movsw
loope
call
xor
add
popa
push
fmuls
xchg
hlt
mov
xchg
sub
inc
out
icebp
outsl
xchg
mov
rclb
scas
push
inc
into
jp
push
jne
movzwl
dec
rcl
sbb
adc
mov
scas
lahf
xchg
sbb
fdivrl
jne
ja
rol
mov
jmp
xor
xor
sbb
fisttps
je
jno
cmp
cmpsb
stc
xchg
scas
mov
adc
push
dec
and
adc
jae
push
scas
inc
in
pop
mov
clc
popf
movsl
std
punpcklbw
jo
inc
dec
or
xor
jl
in
test
jno
mov
sbb
daa
push
xchg
leave
dec
push
js
ret
lahf
lcall
jle
dec
dec
push
inc
pop
mov
xor
aam
mov
jns
fildl
jg
loope
cmc
cmp
test
sub
or
sbb
cli
out
sub
push
mov
in
aas
lret
iret
fs
and
and
ror
ret
and
xor
loope
jno
inc
mull
ret
lock
xchg
xor
nopl
out
push
jg
jae
call
jnp
fcoml
jecxz
pop
aas
push
jno
in
xchg
lret
lcall
jnp
test
push
andb
jae
jp
lahf
sub
nop
js
cltd
push
cmp
int
jnp
mov
fwait
insl
and
stos
jnp
add
movsl
aaa
icebp
xor
repnz
int3
jecxz
lret
js
jne
push
xor
fnstcw
xchg
sbb
fstpt
shll
in
cmp
sti
and
cmpsb
lods
testl
xchg
iret
add
aas
jl
inc
mov
jp
popf
jns
rcr
daa
and
pop
dec
mov
gs
add
movsl
mov
xor
clc
in
xchg
mov
or
and
cltd
rorb
pop
mov
xchg
data16
jne
lret
addr16
aas
adc
inc
test
fisubrl
pop
lcall
testl
mov
jb
ljmp
or
mov
xchg
in
cli
loope
jbe
dec
das
add
push
cmovnp
stc
lds
ds
jmp
pop
lea
mov
aas
std
scas
push
cmp
in
ss
add
mov
push
mov
call
mov
xchg
shlb
sbb
inc
jns
and
ss
sahf
shll
inc
lds
push
into
das
loope
lcall
push
stos
sbb
loopne
fsub
movsl
dec
lods
inc
je
pusha
jbe
nop
or
mov
outsb
lods
out
gs
ljmp
ss
jge
pop
sti
shrl
sbb
inc
fcomps
jne
jbe
pop
insl
cmp
fisubl
xor
rorl
sub
push
test
xchg
and
out
cmp
lods
negb
or
pop
test
adc
mov
inc
leave
inc
jl
push
pop
push
imul
and
sbb
push
add
test
adc
lahf
add
loope
stos
mov
shll
addr16
and
mov
dec
jne
xor
push
pop
lods
stos
ficompl
push
cmp
jg
mov
push
push
xor
adcb
je
xchg
das
pop
sub
loopne
gs
iret
push
push
movsb
push
cmpsl
jmp
aad
xchg
aas
cmpl
inc
nop
push
sub
stos
dec
mov
add
or
sbb
mov
ror
addl
inc
mov
movsb
stc
fldt
ret
push
je
sti
fisttpll
ds
add
cmp
lods
js
neg
push
in
inc
inc
mov
fisttps
pop
sahf
std
filds
and
aaa
negl
sub
mov
rcrl
or
ja
hlt
mov
xchg
pop
sub
ret
adc
ja
sbb
loop
shrl
xor
cmp
mov
repnz
out
mov
and
dec
adc
addb
inc
std
decl
sbb
pushf
shrl
pop
movsl
sbb
mov
aas
add
sub
push
and
movsb
sbb
mov
cltd
pop
stos
iret
stos
jo
mov
mov
pop
sbb
cmpsb
cmc
dec
out
pop
xchg
inc
sub
popf
sub
pop
ja
test
xor
dec
nop
inc
pusha
lock
dec
mov
pushf
idivb
cwtl
cmp
and
icebp
dec
xchg
sbb
push
aas
or
adc
inc
xchg
dec
xchg
mov
mov
mov
decl
pushf
gs
aam
pop
sub
push
fincstp
inc
pop
lods
dec
sahf
aam
inc
jno
jecxz
dec
nop
pop
movsl
ret
push
sub
push
js
push
push
pop
cmpl
pop
divb
or
mov
int
sub
out
lods
push
inc
ret
std
gs
call
jne
mov
pop
jecxz
adc
jne
dec
mull
sbb
out
lods
loop
sub
pop
jp
jle,pt
outsl
or
nop
test
lret
adc
lcall
mov
jmp
sub
jno
and
jg
aas
in
adc
jle
ss
in
cmp
add
cwtl
rcll
aad
adc
orl
sub
je
mov
lods
push
outsb
mov
push
dec
fwait
sbb
jp
ret
push
addr16
sbb
stos
lahf
adc
ss
and
daa
lret
pop
mov
dec
cwtl
js
add
out
push
pop
xor
sbb
fsts
xor
mov
xchg
or
jnp
leave
sub
dec
push
repnz
xor
inc
inc
mov
pop
jno
addr16
pop
push
mov
pop
imul
push
dec
cmpxchg
inc
lds
push
addl
mov
xchg
ror
ss
sahf
mov
mov
int3
nop
cmpsb
mov
out
movsl
and
or
sub
stos
lea
pop
xor
sbb
jnp
loope
and
out
cwtl
movsb
stos
cli
in
push
cs
sbb
xchg
mov
je
lcall
push
lods
jg
and
js
mov
ss
or
enter
sub
jnp
mov
mov
imul
fmull
sahf
test
bound
js
inc
sbb
add
dec
xchg
sbb
fstl
adc
mov
mov
mov
andb
mov
arpl
mov
ror
test
push
fsubl
pop
outsl
mov
jmp
fbstp
scas
setge
add
lea
jg
jno
mov
lods
push
test
cmp
ficomps
sub
cli
enter
enter
loopne
mov
fs
push
ret
inc
xor
cmpsl
outsb
mov
mov
aas
mov
lods
adc
popf
sbb
repnz
jge
cmpsl
pop
xor
mov
popf
fwait
stos
or
xchg
int
daa
aam
test
jae
push
inc
mov
loopne
push
mov
cld
fidivl
mov
mov
mov
inc
lahf
movsb
les
insl
cmp
pop
arpl
pop
adc
inc
xchg
push
mov
pushf
pop
push
or
lods
mov
aad
jo
repnz
or
sbb
cmp
xchg
ds
jbe
pop
sbbl
mov
pop
popa
or
mov
push
push
sub
scas
popf
jge
ficompl
jge
pusha
test
or
test
cltd
or
cmp
ds
or
pop
cmc
shlb
aam
loopne
sbb
push
push
ret
in
outsb
lahf
loope
daa
les
mov
fsub
cmp
push
xor
pop
dec
sbb
and
inc
sti
mov
inc
xchg
xchg
push
imul
std
mov
rol
divb
out
repnz
mov
mov
scas
and
popf
sar
and
pop
mov
xor
sti
push
fisubs
pop
inc
pop
dec
lods
fcompl
mov
call
in
insb
xor
fisttpl
rolb
lret
jg
cmp
and
dec
xchg
arpl
push
inc
xor
cltd
or
leave
aaa
inc
stos
xor
mov
out
shll
adcl
jo
jg
subb
cmp
xchg
lahf
jno
in
jae
cmp
sub
out
lcall
cmp
mov
mov
arpl
fildll
scas
clc
mov
mov
and
lret
jmp
sub
xor
cmpsl
sahf
mov
xchg
cmp
sbb
gs
xchg
aam
pop
ret
mov
call
pusha
in
iret
out
and
ss
inc
fdivrs
xor
shrb
dec
sbb
out
rcr
push
lock
fs
int3
jl
fdivrl
bts
call
leave
adc
xchg
lret
imul
cltd
or
scas
rcl
cmp
cmpsb
sbb
adc
enter
dec
cld
aam
and
jnp
enter
in
stc
and
mov
inc
mov
out
out
loope
mov
xchg
cmp
inc
shr
out
out
push
popf
push
sahf
jmp
xchg
in
sbb
pushf
xchg
xor
cltd
es
decb
xchg
add
jecxz
lret
sarb
es
aas
pop
es
add
push
into
fidivrl
pop
stc
fcmovnu
push
iret
pop
insl
out
out
inc
repnz
add
das
mov
imul
cwtl
pushf
adc
aad
ret
mov
adc
jo
jmp
cld
sahf
xchg
dec
ja
nop
or
ja
jo
inc
mov
pop
cmp
aad
and
test
mov
pop
mov
ficompl
pop
mov
and
xchg
adc
fmuls
test
lar
jge
jnp
jg
stos
fs
pop
fcmovbe
mov
inc
mov
push
sbb
jg
dec
mov
push
push
mov
mov
aad
data16
imul
aas
jg
mov
dec
test
sub
cmp
jno
int3
sub
push
mov
jns
flds
lock
pop
shrl
fnstsw
add
mov
out
rcll
out
pop
inc
push
adc
dec
mov
dec
stos
in
mov
cmp
push
adc
rdtsc
push
pop
inc
xor
and
jmp
dec
dec
and
sub
movsl
ljmp
stos
sbb
mov
xor
stc
push
pop
sbb
mov
sub
push
fnstsw
adc
xor
add
fidivl
movsb
xor
inc
or
sub
inc
lods
cmp
sub
xchg
repz
cmp
lods
in
sub
rcll
push
test
frstor
and
outsl
mov
or
int3
push
sar
std
inc
frstor
xchg
sub
ret
pop
jg
mov
lds
sahf
dec
inc
cmp
pop
repnz
movsl
or
or
xchg
ja
fs
push
cmc
daa
jne
add
in
rorb
add
sub
mov
cltd
xchg
inc
sbb
mov
shll
sar
mov
jmp
pop
arpl
aad
inc
pusha
call
js
mov
or
scas
push
push
lret
push
lahf
ja
cld
jge
in
xchg
and
rorb
mov
pop
mov
xchg
call
imul
jbe
xchg
jge
imull
leave
inc
jae
outsl
add
ss
xchg
sbb
cld
jmp
inc
js
adc
mov
cmp
jae
mov
sbb
mov
xchg
shll
dec
mov
scas
jge
and
or
repnz
cli
popl
or
cmp
cltd
sahf
scas
movsb
popf
mov
call
scas
add
fs
xor
pop
test
pop
lock
in
fisubl
rep
pop
out
in
fcoms
sbbl
popf
mov
scas
dec
push
addl
mov
shlb
pop
or
inc
dec
pushf
out
mov
cmp
jb
jne
les
cmp
pop
sub
dec
in
out
sarb
movb
mov
enter
pop
and
mov
lea
inc
lahf
dec
fcoml
ja
mov
into
dec
add
leave
test
addb
filds
std
test
cmc
jne
in
dec
and
nop
sbb
jmp
sub
shl
jns
add
lret
adc
adc
gs
xchg
stos
sbb
in
sub
aad
mov
test
shll
cltd
mov
ret
sub
leave
jbe
mov
pop
shr
fstpt
push
fidivs
and
stos
push
neg
je
or
lahf
movsb
xor
mul
enter
cmp
pop
and
adc
pusha
ret
dec
lods
inc
loope
movd
test
stos
xchg
mov
mov
ret
adc
in
stc
popa
dec
ss
pop
iret
mov
sbb
sub
decb
xlat
fildll
sbb
lea
dec
mov
inc
shl
adc
or
inc
mov
dec
daa
das
mov
popa
cli
push
jae
inc
loope
lods
stos
mov
xor
loopne
xor
dec
and
js
fstpl
xor
jl
and
add
mov
push
stc
popa
lock
mov
inc
inc
insl
fs
sahf
mov
lret
frstor
ffree
mov
test
jge
sub
data16
sahf
test
in
mov
hlt
fldlg2
popl
lock
pop
sarb
inc
inc
push
loop
jo
cmp
je
fisttpll
add
scas
mov
add
insb
sbb
popl
das
mov
pop
xor
mov
imul
mov
pushf
xor
mov
popf
mov
adc
sbb
xchg
rolb
or
lock
cmp
jnp
cmp
jg
inc
test
jae
sub
loopne
sbb
mov
dec
mov
sbb
cmp
lahf
rclb
mov
jg
mov
cwtl
or
out
adc
push
cmpsb
dec
data16
xor
cltd
inc
cli
call
xor
mov
addr16
hlt
xorb
add
fisttpl
jle,pt
movsb
popf
jecxz
repnz
out
and
les
dec
fwait
xorb
sbb
sbb
push
fs
sti
inc
in
cwtl
xchg
dec
jmp
inc
xchg
outsb
sub
aad
push
sub
xchg
cli
dec
sqrtps
jmp
outsb
pop
mov
sub
jp
add
and
call
adc
cmp
mov
movsb
xor
cwtl
adc
daa
sub
xchg
iret
pop
push
xchg
loopne
add
jae
out
or
insl
add
cmp
loop
push
sbb
sbb
je
enter
sub
sbb
lcall
mov
inc
in
iret
sahf
inc
sub
cld
fwait
or
dec
mov
xor
iret
push
xchg
stos
lds
pop
andl
out
cs
subl
leave
sbb
add
or
sti
push
fwait
decl
push
dec
cmp
subb
mov
sbb
lret
and
xor
ljmp
push
mov
or
jnp
or
push
fwait
pop
sub
in
mov
orb
lods
jg
stc
adc
mov
fwait
je
sbb
fisttpll
clc
mov
lret
xchg
in
fstpt
and
jae
mov
mov
adc
pop
pushf
aaa
cmpsl
dec
add
sahf
stos
ds
xor
jne
outsb
repnz
jo
ficompl
xor
sbb
hlt
push
jns
mov
and
xor
push
dec
push
gs
outsl
jno
in
sbb
push
imulb
pop
xchg
stos
imul
dec
push
popf
mov
jae
xlat
cmp
test
inc
and
icebp
subb
iret
mov
lods
mov
mov
mov
jecxz
push
sti
fsubrs
test
outsl
push
push
add
dec
or
stc
fs
aaa
xchg
sahf
or
in
jo
mov
fldt
mov
lods
data16
sub
call
sub
gs
nop
call
mov
xor
out
pusha
add
mov
inc
fnsave
pop
cmp
cmc
test
repnz
xorl
fnsave
mov
aaa
pop
or
jnp
hlt
js
pop
xchg
push
mov
inc
cmp
outsb
loope
xor
sbb
cli
mov
and
repnz
dec
test
push
lds
push
mov
aaa
out
lret
push
or
mov
push
and
jbe
mov
sti
and
aam
or
in
cs
jne
sbb
or
insb
push
test
repnz
ss
js
sbbl
adc
mov
lds
mov
jmp
adc
mov
jne
lret
icebp
xchg
je
sub
aaa
or
sbb
rcrb
in
jge
test
decb
push
fimull
mov
adc
adc
lods
sub
rcr
lds
mull
pushf
and
daa
fwait
or
sbb
test
sub
stos
dec
stos
xchg
shlb
cmpsb
arpl
scas
sbb
sbb
adc
into
sbb
int
push
les
jo
addr16
jl
outsl
or
aam
xor
add
loopne
inc
cli
mov
push
and
rcr
out
mov
fistl
fadds
outsl
dec
ss
notl
dec
xlat
mov
cmp
in
das
test
shlb
mov
jl
mov
iret
and
out
jl
into
mov
mov
lods
pop
cmp
jecxz
loop
mov
aam
das
mov
test
push
popa
out
inc
cwtl
lahf
cmp
pop
and
adc
jnp
cmp
add
nop
pushf
shrl
sbb
movsl
sbbl
loope
lds
adc
jl
loope
mov
fwait
int
shl
mov
mov
pop
shlb
fs
push
inc
test
adc
pop
std
add
mov
shl
mov
cmpsb
rol
or
pushf
out
imul
xor
add
mov
loope
xor
sub
pop
push
mov
push
xlat
push
lea
push
and
outsl
out
movsb
fiaddl
adc
sub
fcomp
fwait
mov
xchg
sub
mov
add
add
dec
mov
jne
les
inc
jnp
dec
inc
fsubrs
or
lret
divl
gs
mov
jb
insb
cs
inc
daa
repz
iret
pusha
lods
adc
addr16
push
sub
fists
sub
jl
adc
push
data16
jg
fldt
out
cmp
gs
pop
loope
lods
dec
lcall
xchg
cli
or
cmc
aad
fsubrs
out
insb
int3
push
mov
out
mov
les
push
jle
xchg
sti
adc
in
mov
lret
repz
or
test
or
movsb
shlb
jp
mov
or
in
mov
xchg
mov
cmp
sti
mov
adc
shll
mov
psraw
outsb
loope
cmp
dec
fcoml
jbe
push
xor
pop
pushf
bound
mov
sub
fucom
shl
es
lret
inc
cmp
push
outsb
push
push
iret
pop
call
add
sub
add
add
cli
sti
negl
fnstcw
jo
std
jle
sub
jnp
lods
js
inc
inc
in
push
and
lcall
mov
outsl
add
inc
popf
in
adc
sub
aas
push
into
mov
cmpsb
jae
lea
dec
xchg
mov
lods
repnz
arpl
mov
inc
add
push
stos
notb
in
fs
ja
pop
sti
add
aas
and
jg
sahf
fsub
mov
arpl
jo
das
mov
push
pop
dec
push
dec
out
add
xlat
jmp
cmpsb
push
mov
in
scas
mov
inc
je
clc
sub
jle
out
lret
cltd
pop
cltd
test
sarl
daa
adc
jnp
jecxz
xchg
push
stc
push
sahf
push
cmc
jl
xchg
dec
ret
jbe
aam
xchg
js
aam
jl
fsubrl
fsts
movsb
xor
push
cmp
insl
dec
adc
mov
outsl
jl
popa
lret
mov
fimuls
inc
nop
les
ljmp
leave
push
jge
pop
shlb
mov
adc
or
jp
xchg
or
std
sti
inc
xchg
or
push
je
xor
adc
mov
jno
xorb
pop
jb
js
sarl
repz
bound
ljmp
mov
adc
movsl
jb
xchg
ds
ret
mov
rcrl
push
gs
lock
aam
cmp
mov
int
jno
or
mov
sub
cmp
inc
je
sti
pop
decb
pop
mov
cs
and
in
push
lds
pop
pop
call
sbb
mov
xor
adc
sub
mov
iret
adc
aad
xchg
test
cltd
mov
cmpsb
testl
fnstenv
test
inc
mov
xchg
lock
jo
mov
jo
push
ss
and
stos
sub
lea
cmp
imul
ja
inc
imul
cmpsb
mov
inc
adc
push
stos
xor
push
sub
sbb
add
mov
sub
sarb
pushw
dec
shll
mov
push
xor
adc
testl
clc
ret
sub
dec
cmpl
xor
scas
xchg
out
dec
pop
mov
sub
push
mov
fidivs
inc
cli
xchg
and
outsl
xchg
and
pop
mov
scas
movsl
shll
jecxz
incl
test
aad
out
or
idivl
mov
lods
ljmp
pop
mov
cwtl
xor
cli
lods
cs
or
and
js
imul
ljmp
xchg
cwtl
xor
or
xchg
sbb
and
push
mov
dec
insb
dec
pop
push
or
cmp
dec
jmp
out
dec
mov
mov
dec
sahf
stos
inc
jmp
xlat
push
xchg
mov
mov
jecxz
arpl
stos
lret
mov
push
out
lock
repz
push
hlt
push
pusha
aad
push
jl
mov
xor
inc
andb
xor
test
addl
xchg
mov
dec
scas
fs
jl
adc
pop
push
adc
fcoml
pop
add
jb
add
adc
push
jo
call
fs
out
jge
mov
je
cli
sub
aas
les
jbe
add
inc
popa
and
lods
int3
sub
mov
jl
mov
mov
into
fmull
rcll
xchg
loop
mov
sub
popf
sbb
bound
mov
int3
jecxz
sub
sbb
xchg
int
mov
cmp
test
add
push
push
flds
mov
cmpsb
mov
rorl
mov
fcmovnu
jo
mov
insb
sarl
lahf
dec
pop
dec
lret
sahf
mov
xchg
cmp
adc
lcall
jge
fisubrl
xlat
js
mov
hlt
das
pop
mov
push
imul
dec
and
dec
and
mov
rorb
pushf
pop
into
mov
insb
mov
fcomps
mov
push
jae
cmp
mov
xor
push
addr16
subl
sti
sub
mov
inc
popf
cmpsb
in
int
shrl
inc
ret
outsl
or
jp
shr
pushl
mov
or
inc
ret
dec
gs
and
mov
notb
add
xor
mov
mov
imulb
popf
pop
mov
jns
lds
ret
cld
insl
mov
dec
push
lods
out
jle
sahf
pop
dec
imul
int
push
lcall
add
imul
jae
decb
test
in
inc
clc
push
mov
xchg
mov
xchg
and
test
in
xchg
popf
cld
aam
cmc
dec
movb
push
fcmovnb
lods
out
cmp
aas
out
pop
out
or
test
and
or
mov
or
sub
arpl
pop
inc
aaa
fs
mov
pushf
repnz
cld
pop
inc
or
and
test
aam
repz
cmp
xchg
cmpsl
push
sti
dec
mov
dec
mov
shl
js
in
sbb
sti
push
loop
and
dec
pop
sbb
adc
adc
pop
xchg
ficomps
lds
mov
ljmp
into
sub
cwtl
in
and
push
push
loope
mov
shrl
adc
and
add
je
stc
xchg
mov
in
xor
sbb
add
xor
push
mov
push
jae
xchg
mov
cmpsl
jbe
pop
xlat
xor
mov
cmpsl
jp
hlt
adc
ss
loop
stos
mov
sub
push
mov
das
data16
or
mov
inc
sti
sti
adc
or
or
cmp
fiaddl
push
mov
jp
das
xor
jbe
adc
sub
rsm
mov
into
stos
jns
lea
lds
adc
add
inc
jne
mov
fdivrp
xchg
gs
mov
inc
insb
sub
mov
jg
aad
int
and
out
sub
sbb
xchg
cmpsb
sbb
leave
std
sub
sub
xchg
into
sbb
stos
cmp
adc
fisubl
hlt
push
adc
xor
bound
xchg
adcl
out
fldl
pop
aad
xchg
jnp
push
jmp
loopne
push
inc
das
daa
roll
aas
out
loope
daa
dec
or
sbb
xor
roll
cmc
mov
pop
push
push
sub
cmp
xchg
scas
xchg
sbbl
lret
roll
ret
xor
sub
test
or
repz
xchg
mov
xchg
fisttpll
inc
pusha
in
pop
push
bound
mov
xchg
imul
test
jae
dec
sub
xchg
pop
popf
nop
pop
jmp
or
cmp
sbbl
mov
imull
lret
xlat
add
ljmp
fnstcw
movsb
cwtl
adc
push
repz
push
dec
insb
rdtsc
push
cwtl
lcall
add
std
arpl
in
les
insb
xchg
dec
jb
mov
push
adc
popa
stc
rorb
lods
inc
es
movsl
xchg
push
mov
dec
cmp
or
jp
jle
sbb
pop
push
mov
pop
div
stos
nop
aad
dec
daa
mov
xorl
xor
enter
rcrl
outsl
pop
das
hlt
jecxz
cmp
push
sub
cmp
push
push
xchg
shr
cwtl
daa
les
pop
mov
or
repz
dec
xlat
cmp
add
xor
sub
cmpb
leave
xchg
insl
loope
mov
test
rclb
int
dec
rorl
sbb
jge
insl
inc
xor
mov
sbb
inc
mov
pop
test
popf
jmp
mov
ret
fadd
movb
jbe
or
mov
test
es
cmp
test
movsb
mov
mov
sbb
std
sbb
ljmp
fbld
dec
sub
js
add
pop
dec
rclb
lods
aam
lods
dec
sbb
test
lock
mov
out
imul
xchg
sub
jp
cli
push
iret
dec
insl
push
xchg
sarb
test
jo
push
and
aam
repz
test
jle
imul
mov
aas
and
xchg
dec
out
and
test
test
push
das
xor
xchg
or
idiv
cmc
mov
push
inc
mov
int
lock
mov
mov
push
dec
add
and
adc
jno
or
xor
push
cmp
jnp
int
and
test
insb
jnp
scas
add
or
out
mov
fwait
jno
jo
and
std
test
mov
jge
pop
add
add
dec
push
adc
lods
jmp
cmp
aam
sub
and
outsl
scas
mull
jnp
dec
jne
mov
fbstp
jae
das
or
push
xchg
aam
repz
stos
aam
inc
and
jnp
sub
in
or
in
enter
sahf
in
mov
add
incb
std
lock
add
or
or
jle
insb
mov
mov
jne
sbb
pop
push
out
sub
dec
cmp
xor
scas
jno
dec
lds
daa
testl
in
fmul
mov
out
sub
or
test
aad
insl
pop
mov
lock
cmpb
je
xchg
push
mov
fxch
cmp
adc
mull
addr16
jb
or
jge
arpl
aam
ror
fdivp
and
cltd
or
push
ret
fcoms
fs
popf
paddusw
cld
mov
mov
scas
push
push
enter
cwtl
adc
scas
ret
or
in
jge
adc
pop
mov
out
sarb
inc
faddl
pop
and
mov
mov
or
cs
cmc
dec
mov
jns
stos
sbb
cs
in
pop
sbb
mov
pop
int
add
incl
fadd
std
test
sub
cmp
mov
xchg
les
inc
inc
adc
inc
cmp
pop
cltd
mov
add
xchg
stc
pop
je
in
mov
dec
sbb
cmp
ljmp
adc
xchg
lods
pop
fidivl
test
fwait
sbb
insb
fs
sub
inc
adc
and
mov
in
inc
hlt
add
sbb
sbb
mov
cmp
sub
loopne
xchg
jbe
dec
adc
pop
loop
cmp
sbb
sub
ror
or
push
dec
add
jecxz
ror
add
outsl
xor
push
inc
dec
pop
and
and
cmp
xchg
jle
test
popa
add
pop
jbe
or
push
push
aas
lods
jno
sub
pop
mov
add
cs
bound
sahf
jle
mov
cwtl
push
je
push
cmp
sbb
fwait
cmpsl
jns
stos
sbb
mov
jg
adc
sbb
pop
into
lret
repz
pop
icebp
data16
jmp
pop
mov
insb
xchg
cmc
inc
add
inc
adc
push
add
test
xor
cmp
inc
mov
dec
js
lods
je
jo
and
movsb
cmc
cmp
out
mov
push
push
lahf
loopne
in
mov
inc
test
xor
int3
xchg
push
and
movsl
cmp
lahf
lret
daa
hlt
adc
aam
stc
imul
jle
fisttps
add
fwait
sub
jmp
iret
les
inc
mulb
xorl
out
mov
lret
inc
cld
push
sub
sub
fdivrl
shlb
inc
pop
les
sub
lea
sbb
sbb
in
pusha
sub
pop
inc
or
add
ds
adcl
pop
orl
adc
imul
scas
adc
and
pushf
add
and
jb
insl
stos
ds
and
mov
imul
mov
xchg
mov
mov
push
jbe
mov
aad
int3
pop
mov
rcl
dec
push
jg
lea
daa
dec
mov
hlt
test
test
jle
adc
xchg
aad
in
cmp
in
mov
jnp
sbb
cli
rclb
loope
sbb
sarb
jne
bound
inc
push
lcall
fimuls
test
out
sti
lret
mov
jae
lods
movsb
sahf
dec
fidivrs
iret
xor
ja
inc
aam
xchg
leave
fwait
and
pop
mov
stos
mov
aad
and
push
jno
dec
into
push
test
jo
mov
add
cmp
add
loope
push
inc
xchg
mov
jl
inc
mov
lods
xor
jp
mov
and
ret
add
in
aam
andw
enter
mov
fldenv
out
jo
fdivrl
repnz
mov
out
insb
rcl
rcl
and
out
aam
dec
repz
cmp
in
inc
jle
cs
testl
paddusb
int3
xchg
mov
pop
nop
lahf
jb
std
aad
mov
cld
mov
aas
inc
mov
mov
inc
inc
mov
mov
lcall
xchg
stc
lret
fildl
cmp
adc
cmp
jb
bound
mov
dec
sahf
jge
loope
testl
xchg
stos
daa
mov
push
xchg
sbbb
sahf
mov
jne
neg
xchg
insl
xor
sub
mov
add
test
stc
add
pop
mov
stos
leave
ja
jo
sub
dec
xchg
fs
xor
cmp
xor
scas
pop
xor
dec
jne
jo
jge
dec
inc
bound
ljmp
pushf
shrl
lock
xor
movsb
shl
xchg
outsl
and
xlat
hlt
mov
cltd
pop
hlt
gs
arpl
out
pop
stos
and
jno
frstor
jb
or
icebp
iret
add
and
add
mov
stc
add
dec
push
pop
xchg
jnp
insl
arpl
mov
frstor
mov
mov
pop
mov
outsb
cltd
add
jo
pop
out
out
add
test
bound
mov
repz
faddl
inc
pop
scas
push
push
out
in
mov
sti
jp
pop
vaddss
push
cld
sbb
or
shll
sub
loopne
add
scas
inc
mov
mov
sub
inc
dec
xor
inc
rorl
mov
hlt
fmulp
add
sbb
lret
ja
pop
movsl
ja
int
dec
pop
aas
inc
addl
das
loop
adc
notl
cli
jle
sarb
adc
clc
dec
rcrl
inc
mov
sub
shr
adc
inc
pop
pushw
or
mov
rcrb
mov
sub
rcll
mov
inc
add
hlt
xchg
inc
rcr
push
pop
pop
scas
pop
out
push
inc
inc
movsb
jge
scas
dec
cmp
fs
leave
mov
jg
in
test
sti
rcrl
aaa
xor
mov
push
xchg
dec
scas
out
push
insb
cli
xchg
lock
cli
cmp
loope
loop
mov
xchg
dec
inc
dec
push
mov
dec
sbb
push
stos
testl
pop
mov
aad
dec
aam
cld
aaa
xor
mov
inc
adc
notl
push
adc
cmp
xchg
imull
mov
mov
mov
and
push
imul
mov
loop
and
adc
jg
movsl
loopne
jbe
gs
in
push
cmc
loope
inc
push
hlt
jae
jno
into
push
shrb
or
pop
ljmp
jne
test
xchg
cltd
call
sbb
mov
loopne
mov
int
push
dec
pushf
pop
jne
push
int
sahf
xor
lock
sub
cmp
adc
iret
jns
push
mov
xchg
fistps
dec
cmp
cld
stos
shr
dec
pop
dec
add
mov
jge
and
inc
filds
or
xor
or
pextrw
and
mov
cmp
dec
mov
sub
bound
mov
push
xchg
mov
push
mov
les
mov
imull
inc
int
push
adc
pop
icebp
ds
adc
loope
xor
cmp
xchg
cs
cmpl
sti
cmp
sub
pop
and
sbbl
cmc
mov
adc
sub
pop
cwtl
sub
js
into
lock
decl
enter
test
or
pop
enter
aam
sbb
push
test
xlat
mov
int3
scas
inc
or
adc
xchg
xchg
add
mov
and
or
xor
in
fldl
lcall
mov
jbe
pushf
push
inc
push
mov
pop
push
xchg
xchg
insb
sbbb
sahf
pop
pop
sti
mov
and
hlt
sbb
arpl
and
pop
fmull
lea
push
stc
push
leave
inc
jp
pop
xchg
pop
fcmovu
pop
filds
push
pop
cmpsb
inc
adc
fsubl
test
stos
jmp
mov
mov
ret
fs
push
or
and
adc
pop
inc
scas
jno
out
jp
scas
push
jne,pn
test
jmp
lcall
rorb
repnz
scas
imul
or
jae
jae
and
or
pop
sub
and
mov
push
add
leave
enter
jo
mov
xor
aad
orl
loop
dec
fimuls
lret
push
jmp
adc
mov
lret
and
scas
in
adc
negb
stos
out
push
test
popf
and
setbe
add
test
imul
fucom
fidivs
insb
adc
sbb
cltd
mov
jns
cs
sub
packsswb
clc
mov
push
movsb
movsb
pushf
out
fsubr
cmpsb
sub
pusha
xchg
call
test
jne
xor
nop
push
data16
lock
fbld
nop
mov
ds
das
xor
adc
rcll
hlt
xor
jno
and
jecxz
cli
sti
add
scas
mov
scas
sbb
pop
out
lret
push
inc
cmovb
jmp
popf
les
dec
sbb
xchg
cmp
dec
xor
add
push
fsts
or
sbb
jno
in
fimuls
add
mov
rorl
insb
add
dec
cmp
dec
sarl
lods
push
jecxz
push
jb
xchg
int3
mov
rorl
ret
leave
pop
scas
je
dec
ds
xrelease
mov
decl
jg
cmp
loopne
cmp
xor
sub
and
lahf
fistps
stc
and
mov
imul
or
iret
push
or
add
lods
popf
test
sahf
mov
ss
aam
cmc
shll
int
fdivp
in
test
pop
lret
or
push
aam
aas
popl
lahf
rolb
test
add
inc
mov
pop
pop
inc
add
push
push
cmp
std
mov
add
jo
adc
mov
xchg
loop
sarl
roll
mov
lods
scas
arpl
sub
insl
sahf
bound
sbb
mov
push
jg
shrb
icebp
adc
insb
test
rcr
push
push
push
add
mov
fimuls
mov
sbb
sub
lcall
dec
dec
pop
dec
gs
sub
inc
inc
cmp
mov
clc
out
mov
jmp
fcmovb
cmp
dec
stc
jmp
hlt
add
xchg
push
loop
add
xchg
clc
pop
and
cli
xlat
pop
loopne
inc
in
nop
push
loop
scas
mov
sub
out
xchg
int3
stos
out
in
rorl
mov
pop
xor
stos
inc
push
jl
enter
ss
ds
push
jmp
dec
ja
jne
xchg
ljmp
xor
fmuls
jnp
xchg
pop
jns
push
ret
movsb
ficompl
lret
dec
bswap
ja
and
or
subb
into
addl
xchg
repz
loopne
pop
inc
cltd
frstor
mov
sub
imul
mov
mov
in
inc
stc
push
imulb
sub
dec
jle,pt
xchg
xor
inc
jl
insb
ret
shll
mov
jae,pn
jl
decb
jbe
push
push
mov
push
bound
dec
xchg
pop
inc
hlt
aad
xor
lods
jae
cmp
and
out
lods
fstps
dec
jmp
xchg
push
mov
scas
or
sbb
lods
xor
aam
nop
adc
into
out
into
iret
sbb
add
push
push
mov
icebp
push
mov
mov
lods
imul
sub
push
pusha
popf
dec
push
mov
sbb
cmp
jp
aad
sbb
push
inc
aad
loopne
add
and
push
or
stos
or
insl
or
xchg
adc
stos
int3
adc
xchg
jns
lret
divb
cwtl
hlt
int
mov
mov
fldt
test
rcl
or
inc
sti
or
fwait
or
adc
xor
adc
pop
pop
xor
fiaddl
add
mov
pop
scas
jge
aas
pop
lret
or
insl
imul
imul
push
push
sub
orl
lret
scas
and
mov
mov
vsqrtss
jno
cmp
sub
into
fwait
cwtl
and
and
leave
inc
jle
jge
out
inc
test
nop
inc
es
lret
popf
out
ret
lret
push
cmp
mov
pop
mov
cld
arpl
mov
xchg
test
jecxz
mov
int
pushf
adc
sahf
mov
rcrb
push
imul
mov
dec
movsb
cmpsb
lahf
jne
mov
or
test
jmp
sbb
cmpl
out
in
int3
sti
mov
mov
cld
dec
inc
and
cwtl
pushf
sub
cwtl
sub
lods
outsb
stc
fnstenv
into
fimull
xor
and
sub
stos
xor
inc
bound
iret
pop
jmp
es
mov
mov
inc
pop
aad
test
fnstsw
ja
add
mov
xchg
mov
mov
and
mov
push
push
push
add
cmp
pop
push
stc
adc
stc
and
xchg
loop
jo
dec
cmc
push
xor
insl
rcrb
pop
add
out
test
xor
jle
add
mov
add
cld
addps
sub
dec
shl
lahf
mov
es
sbb
pop
cwtl
iret
fsubr
insb
aam
pushf
mov
loopne
xchg
mov
push
scas
pop
jae
mov
xor
push
rclb
sbb
out
imul
popa
out
shrl
pop
mov
loop
push
movsb
in
fsubrs
mov
leave
es
push
mov
sub
add
arpl
outsb
pop
jmp
push
add
or
mov
fisubrl
sbb
mov
dec
cmp
ja
ja
ja
cs
leave
dec
sub
out
xchg
lods
xchg
dec
or
xchg
sbb
clc
mov
add
ret
pop
jmp
push
out
insb
fldcw
push
push
cltd
sbb
or
or
cmc
nopl
jge
push
lret
cwtl
ss
or
inc
repnz
pop
push
sbb
roll
dec
pop
aaa
sub
rcrl
push
aas
idiv
push
mov
dec
xor
lods
in
sub
in
xlat
cs
bound
aas
push
pushf
pop
inc
iret
dec
aas
pop
cmp
lods
push
mov
push
in
out
sbb
fmul
fucomip
pop
and
pop
out
fisubl
adc
cwtl
movl
repz
cmp
jp
movsl
stc
cmp
xchg
dec
jnp
lods
push
inc
pop
lea
jge
out
pop
dec
out
xchg
sbb
movsl
leave
mov
jno
dec
shlb
pop
adc
or
adc
add
cltd
and
subb
sbbl
xchg
push
pop
xor
pop
rol
pop
jmp
ret
enter
sub
nop
cmp
pusha
mov
out
ljmp
pop
ret
xchg
sbb
pop
pop
and
dec
bnd
mov
or
or
stc
mov
mov
bound
scas
test
enter
dec
loopne
ficomps
ficompl
lahf
adc
xor
dec
pop
xchg
and
outsl
add
out
lcall
xor
je
arpl
cli
jbe
fucom
inc
loope
inc
leave
loopne
movsl
int3
pop
lcall
call
pop
fwait
inc
mov
in
jne
inc
dec
add
aad
push
mov
test
fcomps
mov
lods
insl
rcll
out
ret
mov
pop
pop
ss
mov
std
ja
out
fneni(8087
loop
push
in
sub
sub
sbbl
and
enter
sub
dec
pusha
insb
lods
push
adc
xchg
dec
ret
cmp
in
cmpsl
rorl
mov
push
mov
sub
fisubl
movsl
ficoml
jmp
mov
ja
inc
pop
mov
add
mov
dec
ljmp
mov
dec
lea
xchg
inc
test
adc
xor
mov
insb
in
js
js
pop
mov
mov
adc
loopne
ret
int
subb
mov
mov
test
xchg
mov
jmp
cld
xor
cld
xor
sub
aad
cmp
mov
inc
lods
lret
mov
data16
dec
and
pop
xor
jmp
aad
lods
cmpsl
sbb
mov
sub
mov
popf
popa
adc
call
dec
xor
stos
jbe
hlt
insl
iret
call
and
pop
idivl
mov
je
cmp
ret
sbb
pop
xor
push
cli
cld
or
shrl
adc
fwait
jo
movsl
sbb
mov
xchg
xchg
outsb
scas
dec
mov
cs
pop
mov
pop
es
add
sti
aaa
adc
mov
fsubl
nop
or
or
testb
push
adc
pop
cwtl
repz
outsl
cmpl
stos
subl
push
shlb
mov
cmc
pusha
stc
imul
sbb
pop
xor
add
adc
leave
pop
mov
repnz
adcl
sarl
outsb
fsubrl
je
in
push
xchg
dec
pop
inc
stos
sbb
xchg
mov
xor
addr16
out
mov
push
ficoml
das
jmp
rcr
or
push
test
mov
adc
and
mov
pop
cmc
jp
xorl
xchg
loopne
jp
ret
add
int
jae
add
pushf
jo
lods
jae
mov
out
hlt
cvtdq2ps
cmp
and
mov
cwtl
pop
bound
lret
mov
lea
je
inc
inc
inc
mov
addl
mov
mov
mov
add
sub
in
icebp
push
loope
jl
rcrl
pop
es
imul
mov
pop
push
mov
fsubrp
sahf
xchg
popa
test
sbb
mov
test
pop
jmp
add
fcoms
repnz
out
jb
frndint
jo
cld
push
jbe
aaa
mov
push
add
out
incb
icebp
pop
int3
ss
rcr
dec
mov
add
fstp
lods
fimull
cmpl
mov
imull
xchg
adc
mov
pop
mov
ss
lret
in
mov
and
ret
lahf
ljmp
dec
mov
dec
sbb
dec
mov
dec
lret
into
adc
mov
jnp
fbld
fstps
or
xor
dec
push
out
sahf
jnp
push
and
and
add
lods
mov
cltd
pop
xor
into
sbb
mov
mov
mov
pop
mov
jbe
jle
js
mov
dec
lds
jle
mov
sbbl
outsl
pop
lods
or
loope
mov
in
imul
fstpt
aam
jmp
ja
test
arpl
call
jmp
cmp
pop
arpl
in
mov
clc
xchg
lret
imul
jle
nop
mov
cmpsl
nop
pushf
test
test
adc
rcrl
sbb
or
movsl
push
ds
inc
mov
sbb
sbb
aad
push
pop
insl
push
call
daa
jo
ficoms
adc
movsl
inc
cmp
sbb
fdivrl
daa
das
shr
pop
dec
out
mov
mov
addb
sahf
out
sbb
mov
and
mov
dec
sub
cmpb
or
adc
mov
insb
fidivl
fstpl
cmp
fnstenv
frstpm(287
push
cwtl
ja
in
xor
int
sahf
mov
sub
test
adc
mov
es
fcomip
jne
pop
int
adc
pop
mov
inc
loope
repnz
out
loope
pop
adc
mov
cltd
aas
out
dec
sbb
xchg
bound
xor
bound
das
sub
sbbl
lock
loop
gs
jno
test
out
lcall
lock
test
int
cmp
dec
sti
lods
rdpmc
pop
mov
jb
popf
test
cltd
sbb
in
xchg
xor
leave
and
fnstcw
std
mov
lcall
iret
xlat
jle
mov
mov
sub
ds
nop
pusha
into
ret
push
mov
lea
test
lret
fisubs
rorb
cmp
mov
jne
cwtl
sar
adc
xchg
xor
adc
adc
xor
pop
icebp
xchg
imul
jns
into
push
mov
fsubrs
jae
add
dec
mov
ds
rclb
outsl
xor
sub
sbb
sbb
scas
cli
ss
xchg
and
leave
out
cmpsb
xor
jp
js
loope
daa
add
sahf
sbb
cli
mov
fwait
jbe
aas
mov
in
mov
fmulp
je
xor
repnz
inc
mov
fwait
test
cmp
jnp
aam
mov
test
sbb
shl
mov
in
xor
fdivs
lock
es
or
mov
mov
in
aam
sbb
cmc
xchg
stc
dec
outsl
shll
gs
dec
push
jns
xchg
shrb
mov
xchg
inc
mov
dec
out
pop
aam
jecxz
rcrb
std
jmp
pop
sbb
pop
mov
jle
lret
dec
and
add
sub
xor
repnz
ljmp
inc
fisubs
loop
cli
hlt
addr16
fsts
ds
cwtl
jo
popa
mov
and
not
test
imul
xor
sub
jne
lds
stos
or
nop
or
mov
mov
iret
xchg
in
lock
rorb
sbb
test
xchg
mov
sbb
dec
and
int
and
data16
jmp
adc
test
aad
in
ss
mov
xchg
mov
and
mov
fists
ljmp
stos
xlat
dec
cmp
dec
fcoml
ss
adc
lea
add
push
ret
fwait
popa
jge
mov
loop
addr16
rorl
add
inc
dec
roll
int
jo
and
xor
cmp
push
adc
int3
inc
mov
pop
ret
fs
add
jne
cmc
mov
pushf
xor
push
testl
sbb
shrb
or
add
adc
jl
arpl
pop
mov
repz
xor
or
push
sub
adc
insb
daa
ja
movsl
movups
cwtl
mov
jg
or
iret
jne
cmp
sbb
xor
sub
cmpsl
dec
xchg
add
dec
ljmp
roll
xor
inc
mov
push
pusha
pop
jl
mov
push
jno
fdivrl
pop
loope
or
xchg
scas
fldcw
insl
enter
mov
es
mov
andb
dec
jg
mov
cmpsb
fsubs
xor
in
out
ljmp
xchg
cmc
jno
das
pop
and
dec
push
out
pop
pop
ss
xorl
movsl
mov
int
mov
pop
int3
pop
adc
mov
pushf
jle
xor
lret
ljmp
fsub
mov
call
mov
ret
aad
xor
scas
jp
mov
dec
mov
push
int3
or
dec
push
enter
ja
jo
pusha
pop
mov
adc
mov
xor
cmp
inc
divb
jns
mov
cmp
inc
std
ss
adcl
gs
push
sbb
pushf
mov
sub
cmp
xchg
pushf
mov
or
aaa
sub
push
leave
add
mov
in
jg
insl
movnti
clc
add
adc
stos
fmulp
shll
sub
test
cmc
popa
pop
bnd
jmp
and
xchg
mov
inc
pop
xchg
or
pusha
cld
ljmp
push
xlat
nop
stc
xchg
xor
rolb
inc
lahf
lea
push
std
push
pop
fmul
and
mov
xchg
add
icebp
inc
es
insb
shll
push
jns
outsl
clc
or
mov
push
xchg
sbb
ds
lock
cmc
mov
hlt
mov
pop
stos
js
or
adcb
jmp
cmp
xchg
pop
popf
sbb
or
fcmovb
and
sbb
sub
sbb
and
push
lahf
xor
cmp
jns
mov
into
aas
mov
pop
loopne
rcrb
in
mov
psubsw
int
or
sbb
mov
mov
lock
push
cmpsb
dec
negl
movsb
pusha
rcr
mov
xor
and
cmp
pop
mov
mov
jne
enter
movsb
in
movsb
mov
sub
fcoml
sub
jl
fwait
inc
sub
lea
lret
fwait
aas
xchg
inc
or
popa
aam
cmpsb
xchg
fmul
jp
arpl
aaa
sbb
cmpsl
loopne
and
je
aad
mov
sub
push
or
and
fndisi(8087
mulb
adc
lods
jge
sbb
in
ljmp
ja
cmp
push
adc
out
push
cmp
in
rol
fmulp
sbb
adc
lea
bound
cli
je
jecxz
push
fiaddl
xchg
sub
repz
pop
lahf
mov
or
inc
fildl
or
jo
sbbb
movsl
pop
dec
xchg
stos
sahf
pop
pusha
pop
fimull
add
arpl
xchg
add
push
std
and
jno
jp
lcall
test
int3
pop
andl
nop
arpl
xchg
andl
test
mov
loop
mov
cmp
or
test
mov
dec
addr16
lret
lds
pop
cwtl
mov
sbb
mov
scas
mov
mov
dec
jg
pop
jge
test
xchg
pop
or
and
or
dec
scas
testb
ret
adc
mov
loop
mov
andl
cmp
fidivs
xchg
pavgb
push
pop
dec
rorb
pop
push
jb
mov
jo
fcoml
push
das
sar
cmp
sbb
sub
test
mov
mov
hlt
sbb
inc
fnsave
adc
and
test
jae
push
sub
out
dec
mov
xchg
cli
scas
or
cmpsl
cmp
aaa
insl
mov
push
jae
pop
push
and
sbb
icebp
aas
mov
popa
add
ss
add
xchg
scas
xchg
mov
jb
mov
and
test
in
jae
jp
or
js
or
fstps
inc
aaa
ret
cmp
arpl
and
cld
lahf
mov
mov
jbe
cmp
or
mov
imul
push
mov
imul
mov
in
xchg
pop
stos
jp
cwtl
ss
pop
stos
cmc
movsb
jnp
fadds
pop
jbe
cmpl
push
sti
lahf
and
jecxz
push
shl
mov
jae
ss
std
or
pop
in
fistps
add
movl
outsb
outsb
inc
sbb
out
add
mov
cmc
rol
sbb
lcall
outsb
push
dec
ds
outsb
psraw
sbb
out
cmp
xlat
mov
or
or
inc
jp
jb
and
pop
repz
push
inc
dec
xor
mov
mov
jne,pt
rorl
adc
aas
aam
mov
inc
xor
ret
jmp
es
test
sbb
xor
inc
sbb
repnz
sti
mov
fistpll
xor
lahf
sbb
xor
add
push
jno
and
jns
sub
mov
ljmp
mov
xlat
out
dec
or
mov
ja
push
dec
dec
or
imul
mov
mov
flds
push
cmc
inc
jle
mov
roll
inc
xor
jge
xor
cltd
ss
dec
faddl
and
jmp
mov
pop
add
jle
mov
repnz
jb
scas
pop
rolb
gs
cli
cmp
push
outsb
stc
pop
jo
cmpl
xchg
sub
sbb
inc
daa
ds
mov
mov
cld
inc
jae
scas
fisttpl
jp
lea
out
cmp
lods
cmp
jge
mov
int3
faddl
xor
xlat
adc
lock
fistl
ret
shl
loopne
scas
fdivp
aam
mov
std
mov
lds
insb
call
xchg
push
xor
bound
cs
pop
inc
out
dec
inc
inc
out
std
int
cmp
lea
or
repz
push
dec
cmp
xchg
cmpsb
xchg
popa
or
xor
aad
mov
loop
fdivrs
pop
lods
mov
int3
and
lcall
pop
mov
addr16
stos
daa
sahf
out
mov
sbb
xor
repnz
mov
pushf
cmp
popa
jne
bound
dec
mov
jmp
lods
movsb
mov
test
sarb
mov
dec
dec
pop
call
mov
out
pop
cmp
out
ret
push
sub
stos
testb
jg
jae
xor
xor
inc
sbb
pop
dec
push
aas
mov
ljmp
mov
fs
xlat
lret
push
sub
das
int3
xchg
pop
hlt
push
mov
movsb
cmpsl
add
inc
and
cmpsb
jp
js
in
ret
mov
pop
pop
mov
xor
test
cmp
call
js
test
lds
xchg
sbb
lods
loopne
int
out
lds
iret
cmp
pop
fs
adc
push
daa
cmc
lcall
cs
xchg
mov
ds
stos
inc
imul
popf
xchg
and
xchg
test
int
enter
inc
push
std
scas
push
or
cs
leave
fistpll
sub
outsl
enter
mov
push
adc
mov
fidivl
add
pop
cs
or
cmp
aas
ds
fucomi
sbb
mov
ja
and
pusha
fwait
and
push
and
ljmp
outsl
mov
pop
ficomps
in
mov
in
fdivrl
subb
out
jb
sbb
dec
dec
mov
push
imul
sbb
add
and
xchg
jae
iret
repz
mov
rorl
adc
xchg
jg
xor
je
jbe
repz
push
in
ret
in
sbb
mov
add
mov
lret
mov
jg
cmp
call
scas
pop
test
fmuls
and
push
test
fstpl
push
push
jmp
ret
cwtl
pop
lock
mov
sub
btc
pop
out
out
sub
mov
mov
shrl
in
cwtl
push
jle
stos
adc
ret
repz
push
mov
adc
jl
iret
js
sbb
jmp
jns
sti
push
insb
mov
inc
mulb
xor
sub
orl
mov
cmpsb
and
lcall
sub
repz
sub
push
out
sarl
jecxz
sbb
fisubs
dec
or
pop
rcr
imul
mov
fiaddl
sarb
lods
cmpsb
jmp
sub
je
shll
mov
les
ljmp
hlt
mov
cs
stc
fimull
push
jbe
mov
adc
or
sbb
mov
pop
sbb
mov
sbb
mov
sub
jg
or
adc
xchg
outsl
push
fmuls
leave
mov
mov
push
lcall
in
test
movsb
jns
sahf
mov
arpl
dec
shlb
cmp
data16
adc
imul
xchg
addr16
sahf
lret
cwtl
sti
int
cmp
js
pop
jmp
pop
or
inc
xchg
inc
pop
push
inc
out
cmp
mov
enter
mov
xchg
fsubl
jbe
pop
loopne
outsb
jg
push
pop
nop
mov
adc
and
jns
dec
push
nop
cli
loopne
and
sahf
mov
push
mov
inc
inc
or
push
ds
call
jge
mov
pop
dec
out
fisubl
mov
aad
inc
or
jmp
dec
adc
cs
ss
sub
sub
or
das
push
push
cmp
add
movsb
mov
xchg
xor
incl
out
out
cs
std
mov
cmpsl
xlat
ljmp
stos
jo
adc
push
cmpsb
lea
in
push
dec
adc
pop
int
or
lock
imul
loop
jo
shrb
xchg
ljmp
lahf
lock
dec
cmp
pop
fcoml
popf
int3
pusha
dec
sub
xchg
or
mov
mov
fildll
dec
adc
daa
add
clc
mov
mov
sub
xchg
out
cltd
test
shlb
movsl
mov
es
mov
cmc
ret
xchg
nop
mov
xchg
sub
lea
lahf
xchg
mov
jo
outsb
sub
leave
xchg
int
dec
out
mul
ss
fistps
or
mov
and
xor
xlat
mov
mov
mov
movsl
jns
sub
ss
jmp
lcall
outsb
adc
test
popa
rcll
pusha
idivl
pop
push
jge
jns
pop
into
xchg
imul
aam
arpl
push
cmp
xchg
arpl
mov
add
arpl
addr16
sbb
cmp
xor
xchg
dec
fwait
andl
sub
or
pushf
mov
or
fs
cmp
pop
rcrb
mov
and
or
add
rcr
das
mov
mov
loope
xchg
aam
or
mov
push
sahf
xor
movsl
push
fsub
sbb
das
xlat
sub
push
out
xor
pop
mov
in
outsl
and
xor
popf
jns
iret
test
inc
ljmp
jmp
inc
push
call
push
mov
imull
imul
addr16
ds
xchg
xchg
cmpsb
dec
iret
lret
lods
jns
jmp
imulb
fldl
repnz
lahf
mov
imul
test
cltd
stc
sub
dec
cltd
and
out
or
inc
popa
jb
or
add
sub
sbb
or
iret
iret
dec
and
and
jnp
jecxz
xor
jnp
out
sarb
jno
scas
adc
and
out
pop
mov
loop
je
push
sub
jmp
xchg
xlat
aas
push
sahf
mov
mov
inc
xchg
adc
jnp,pn
ljmp
sub
rcrb
mov
add
rolb
and
scas
jno
insl
cmp
pop
in
sbb
xchg
rclb
push
cmc
pushf
popf
idivb
rorl
push
lods
jmp
ret
lret
cmpsl
cwtl
stos
adc
mov
pop
add
daa
or
mov
movsb
arpl
xlat
in
pop
push
fisubrs
and
mov
sti
cmc
fdivs
mov
filds
loopne
cwtl
pop
int3
or
pusha
fucom
repz
mov
sbb
adc
adc
mov
aaa
jns,pn
xchg
call
sub
jns
mov
test
and
sub
fiadds
mov
inc
mov
lcall
and
xchg
outsl
orl
mov
mov
or
stos
cmpsl
insb
jecxz
sbb
shrl
push
lea
scas
into
les
popf
and
repnz
test
scas
inc
ja
nop
xor
pop
loope
arpl
imul
fwait
pop
inc
scas
enter
inc
gs
je
cli
pop
int3
xchg
push
and
fistl
add
roll
loopne
add
out
pop
cld
mov
pop
lods
dec
inc
xchg
adc
or
mov
add
aas
pop
lods
sbb
notl
sbb
fisubrs
inc
fmull
mov
mov
not
daa
push
fwait
add
int3
mov
adc
jp
cmc
bound
adcb
pop
inc
jns
in
fbstp
stos
mov
aam
mov
imulb
fwait
and
outsb
subb
and
outsb
push
repnz
or
bound
push
xor
and
ret
in
pusha
mov
cli
test
movl
mov
popa
xor
mov
xor
cmc
mov
add
loopne
push
dec
lods
cmpsl
nop
mov
jmp
and
sbb
jg
jg
push
xchg
mov
les
outsl
mov
in
pop
push
add
clc
sbb
jb
pop
lods
or
pop
fnstcw
or
outsl
cltd
ror
mov
xor
or
cmc
imul
call
cmp
inc
dec
sbb
mov
adc
xchg
adc
and
mov
inc
xlat
pop
loopne
cs
pop
sti
lea
mov
out
lock
add
test
leave
pop
test
enter
push
fucomp
lahf
data16
pop
mov
sbb
mov
inc
out
xor
jg
shll
pop
insb
adc
pop
lea
in
ret
icebp
jge
lods
pop
pop
ret
leave
mov
and
mov
pop
mov
and
out
in
mov
xlat
adc
mov
cmpl
out
adc
outsb
push
ret
outsl
and
adc
xchg
test
outsl
push
xchg
add
scas
sub
jle
dec
inc
std
sub
lods
dec
insl
sar
jle
sbbb
xchg
pushf
fldl
push
lret
mov
sbb
dec
aaa
push
xchg
popa
lock
inc
je
aaa
shr
repnz
aas
outsl
xchg
push
pop
sbb
pop
lret
cmpsb
xor
jno
mov
push
lea
ror
hlt
xlat
scas
xchg
sbb
mov
jnp
push
in
mov
adc
cmp
insl
inc
shrl
ja
mov
jb
dec
jge
repnz
lret
cld
adc
push
cmpb
jecxz
ret
jne
cmp
push
int3
pop
loop
pusha
cli
jne
xchg
fsubl
out
outsl
ljmp
lcall
test
push
mov
add
repnz
mov
push
mov
sub
adcb
xor
or
push
pop
pop
xchg
jle
adcb
sub
xchg
adc
jns
test
jne
in
enter
pop
ret
loop
sub
mov
push
sbb
add
fs
lcall
jle
inc
or
mov
jbe
dec
sahf
cmp
push
or
insb
mov
push
add
notb
mov
aaa
jb
push
mov
mov
sarl
or
int
test
das
xor
mov
movsl
add
cwtl
jmp
imul
popf
cmp
cmpsl
mov
pmulhw
add
pcmpeqd
out
imul
jle
xchg
cmc
sbb
mov
jbe
and
cmp
sbb
push
mov
push
adc
cwtl
mov
fs
shrb
cld
andl
add
iret
cmp
xor
bound
lcall
jo
cmpb
aas
lods
sbbl
loopne
fs
mov
scas
mov
adc
push
nopl
xchg
imull
mov
push
divb
shll
adc
push
lahf
scas
mov
xchg
inc
and
in
call
mov
movsl
pusha
push
cmpsl
sbb
fistpl
xchg
ret
xor
arpl
jle
orl
push
clc
js
outsb
outsl
cmp
iret
inc
jo
in
fcoms
add
jge
add
jmp
jo
mov
in
xchg
mov
cld
loopne
jle
pop
mov
dec
mov
sahf
cmp
cltd
or
ret
xchg
das
pusha
cmpsl
ljmp
out
inc
int
adc
dec
repnz
sbb
mov
mov
cmp
aam
mov
add
sub
inc
in
cmp
imul
test
int
aam
dec
push
add
repz
aad
jo
sbb
fdiv
jb
subl
sub
jmp
test
roll
jmp
pinsrw
push
jae
movl
outsb
xor
pop
mov
setb
fists
and
xchg
popa
cmp
loop
sub
dec
push
scas
xchg
add
push
fmulp
fisttpl
leave
popa
add
push
cld
test
mov
popf
cmc
loope
shlb
push
out
jns
ljmp
mov
mov
mov
mov
add
sub
hlt
aad
pop
mov
xchg
mov
sar
enter
dec
push
jmp
mov
lea
insl
add
dec
stos
add
add
sub
in
or
xlat
pop
int3
data16
mov
xor
int3
xchg
add
inc
xor
lods
xorl
js
mov
inc
and
inc
sarl
aaa
pop
fisttpll
in
cld
out
cwtl
adcl
pop
add
stos
pop
bound
pop
in
push
or
sbbl
add
insb
loope
clc
ja
cmc
pop
adcb
int3
add
aaa
movsl
mov
pop
loope
iret
lods
mov
fwait
int3
push
cmp
add
inc
mov
jg
xchg
pop
and
dec
fstpl
leave
pop
int3
pop
push
push
xchg
fistpl
add
add
xchg
call
cmpsb
lds
xor
xor
xchg
arpl
decl
xor
dec
hlt
and
adc
dec
adc
negl
mov
std
or
dec
subb
pop
lock
in
dec
sbb
sbb
jp
dec
adc
mov
repz
popf
cld
fistps
scas
xor
shrl
add
push
sbb
jle
outsl
and
fdivrl
test
push
stos
mov
and
dec
sub
cli
xchg
int
xchg
cwtl
out
jge
jl
dec
das
or
cmp
pop
out
cmp
jge
mov
pop
int3
cld
jb
push
ss
aaa
out
xchg
inc
adc
loop
rcr
xchg
sbb
push
cmp
addl
loop
sub
repz
adc
mov
pop
mov
jae
cmpb
repnz
adc
testb
test
das
stos
arpl
out
add
iret
repnz
adc
leave
es
pop
add
js
mov
sahf
pcmpeqw
lods
xor
pop
cld
imul
fisubrl
cmp
stc
pop
lret
out
pop
mov
test
popf
test
dec
dec
js
pop
jae
mov
loop
mov
mov
jb
pop
lock
push
adc
outsb
add
stc
xchg
pop
hlt
mov
push
lret
push
into
mov
jns
shr
das
jb
imul
jg
ss
ret
xor
mov
pop
jnp
lcall
stc
mov
add
insl
mov
leave
xchg
mov
ss
inc
fldt
insl
mov
insl
mov
popf
out
test
popf
mov
jp
lods
lcall
mov
jge
xor
pop
sub
mov
shlb
dec
pop
and
jg
ret
mov
bound
jbe
nop
and
mov
movsl
cs
sbb
dec
aam
rclb
in
mov
dec
inc
sbb
mul
aad
add
lcall
cmp
jae
outsl
sub
jle
xorb
inc
push
cmp
push
xor
adc
ret
addl
out
mov
lods
repnz
pop
jmp
popa
bound
cmp
adc
int3
fldcw
cmp
inc
dec
xchg
pushf
mov
clc
rcl
pop
fs
in
movsl
decl
cmp
adcl
aaa
jmp
adc
das
inc
and
in
push
gs
insb
mov
mov
jbe
dec
xor
jae
dec
pusha
xor
mov
out
mov
sub
enter
jle
mov
repz
out
outsb
shl
pop
cmpsl
jae
mov
imul
xchg
ret
loop
subl
sahf
outsl
in
jo
sub
scas
out
scas
dec
and
pop
xor
pop
pop
push
xchg
mov
adc
jmp
push
inc
adc
ret
or
or
mov
mov
out
orb
popa
imul
mov
push
dec
cwtl
decl
cmp
mov
mov
push
mov
in
add
push
repnz
and
adcl
jo
mov
movsb
call
dec
push
loop
mov
sahf
xchg
jmp
das
xlat
fidivrl
insb
in
ja
pop
xchg
stc
xchg
test
push
andl
sbb
int
arpl
pop
outsb
pop
ja
push
repz
int3
mov
in
scas
lret
mov
lods
mov
je
test
dec
arpl
pop
lea
add
fldl
pop
icebp
mov
jl
pop
and
fnstcw
call
pop
icebp
inc
test
shll
cmp
xor
xchg
mov
adc
mov
jmp
cltd
repz
jp
cli
jecxz
push
add
rclb
or
ja
icebp
push
lods
rcrl
dec
sub
add
aam
test
inc
inc
ds
add
xor
add
lret
and
lea
push
mov
stos
mov
pop
jle
sarl
dec
or
rolb
add
add
testb
bound
push
mov
mov
fcomps
dec
cs
ret
lock
mov
iret
add
and
pop
mov
sbb
jns
bound
sbb
loopne
out
fcompl
insl
gs
and
arpl
jecxz
in
sbb
jo
dec
push
sahf
push
lock
roll
orb
sub
cld
mov
fisubl
sbb
jne
and
sbb
repz
cmpsb
insb
dec
mov
insb
and
jmp
mov
or
fisttpl
int
xor
out
xchg
enter
jno
xor
mov
inc
outsb
rol
fwait
std
xor
jns
test
in
push
mov
cli
lods
std
clc
aam
outsb
xlat
stos
mov
sbb
jnp
xchg
das
xchg
or
jo
dec
jae
nop
lods
jg
inc
addl
sbb
imul
mov
mov
inc
xchg
mov
and
mov
mov
pop
mov
mov
into
push
xlat
adcb
enter
and
clc
dec
in
js
test
std
and
push
js
imul
mov
push
aad
imul
nop
mov
sub
jle
pop
clc
cltd
sbb
push
mov
mov
sbb
dec
mov
fnstenv
iret
mov
push
push
and
mov
into
pushf
loopne
pop
daa
loop
shr
aaa
mov
jle
in
ficompl
inc
lock
inc
mov
mov
mov
jp
push
dec
and
scas
jp
movsl
jo
ljmp
cmp
cmp
arpl
jecxz
lds
aas
popf
lret
or
mov
scas
cmpsl
scas
cld
adc
sbb
filds
add
push
lcall
mov
call
aad
movsl
push
mov
mov
mov
jp
cltd
pop
mov
enter
ljmp
imul
xor
push
in
adc
adc
jns
insb
in
outsl
mov
ljmp
mov
adc
subb
imul
andb
mov
adc
sbb
jge
xchg
loop
rcll
orb
mov
mov
xor
pushf
daa
mov
cmp
cmpsb
stc
xchg
cmp
mov
out
fs
pop
orb
or
inc
sbb
sbb
cs
std
or
push
orb
dec
cmp
out
or
loopne
cmpsb
and
outsb
aad
pop
movsb
cmp
movsl
scas
out
sti
cwtl
mov
pop
jae
push
push
pop
pop
lea
sbb
cmp
inc
into
push
dec
inc
sahf
mov
jbe
mov
loop
mov
enter
add
inc
inc
mov
inc
scas
mov
arpl
aam
add
sub
mov
jl
xchg
pop
mov
pop
dec
clc
add
daa
iret
jae
sub
mov
mov
cmp
dec
mull
ljmp
add
jo
mov
popf
lds
outsl
xchg
pop
sbb
mov
dec
cs
add
bound
mov
je
movsl
add
adc
mov
or
out
or
std
pushf
push
add
sub
jns
and
aad
aas
ret
fistpl
cmp
push
test
gs
aam
imul
decb
scas
push
mov
imul
mov
mov
add
xchg
sub
lds
out
dec
fldcw
or
addr16
adc
lods
in
mov
addl
jp
push
dec
jnp
cmp
test
inc
mov
lahf
and
clc
cmp
enter
add
mov
sahf
cmc
lods
lret
mov
xor
pmaxub
sub
mov
pop
test
scas
xor
pop
dec
out
ss
inc
dec
xchg
xor
cli
dec
mov
aad
jle
negb
cs
out
lret
sbb
xchg
or
cmp
add
mov
addb
ja
fs
xchg
loope
fs
push
inc
dec
stos
in
movl
xorl
in
test
mov
into
mov
addr16
pop
inc
mov
in
jno
popa
aas
or
pusha
jmp
sub
les
and
lret
add
hlt
ljmp
jmp
cmp
sub
scas
pop
mov
push
mov
cmp
rorb
in
das
push
faddl
lods
and
mov
or
aam
lods
lods
inc
jnp
pop
stc
dec
cltd
mov
in
xchg
vprotb
pop
cmpsb
lods
inc
adc
xor
out
adc
shl
repnz
sub
xchg
mov
or
mov
xchg
xchg
inc
inc
mov
iret
push
inc
mov
rdtsc
xor
aam
cmp
fwait
sbb
inc
push
xchg
dec
xor
push
xchg
rcll
cmp
std
cwtl
add
xchg
aad
cmp
inc
addr16
in
ds
push
pop
stc
xlat
or
inc
xchg
fnsave
cmp
stos
incl
sti
or
sbb
dec
or
lret
push
push
test
dec
cmpsb
jge
outsb
push
stos
shlb
sub
jne
sbb
ret
dec
xor
and
fbld
mov
or
push
dec
inc
repnz
pusha
jge
push
jns
sub
and
or
add
add
inc
add
sub
xchg
nop
sbb
xchg
mul
test
cmp
xor
hlt
push
adc
mov
push
pop
ret
jg
call
sahf
outsl
cmp
lods
cmp
enter
or
sarl
repz
sbb
test
xor
divl
mov
xchg
and
mov
mov
imul
jp
jge
leave
div
mov
pop
pop
adc
insl
lret
dec
mov
lret
es
jns
lret
xor
xor
inc
jp
addr16
mov
pusha
jo
test
scas
rcrl
xchg
js
push
test
push
and
sbb
cmp
or
mov
mov
and
jae
out
and
mov
das
cmp
loopne
fbld
out
ljmp
jecxz
mov
push
nop
mov
and
push
sbb
mov
movsl
js
inc
push
shlb
push
rol
shr
mov
pop
lcall
scas
add
in
inc
sub
mov
push
push
repnz
rol
rcrl
popa
sbb
scas
fbstp
outsl
adc
sbb
cmp
pop
shrl
mov
mov
push
and
pop
jg
aad
sub
bound
ljmp
or
cmp
mov
cmp
inc
mov
inc
stos
push
xlat
inc
add
adc
fldcw
push
cmpsb
out
push
dec
jg
mov
xor
jle
out
dec
mov
pop
ret
xor
ret
or
cltd
xchg
das
stos
jg
and
cmp
and
lods
test
inc
cwtl
adc
call
or
cs
xor
stc
lods
sbb
or
ja
cmc
mov
xchg
les
cmp
lcall
test
jno,pt
dec
fnstsw
pushf
push
or
leave
testl
dec
and
pushf
push
das
mov
lret
ja
das
adc
lock
in
sahf
inc
mov
xchg
inc
ja
stos
pop
sub
xlat
cmp
cltd
out
insb
and
xor
pop
lea
test
fsubl
jmp
xchg
sbb
mov
mov
icebp
xchg
addr16
stc
sub
enter
enter
ret
inc
test
sbb
scas
push
jb
xchg
out
jle
fcoml
or
cmp
and
icebp
sub
cs
add
movsb
push
xor
xchg
imul
outsb
jl
mov
aaa
or
mov
fisttps
pop
cmpsb
ja
mov
shll
loopne
pop
mov
inc
jl
push
mov
fldl
or
cmpsl
mov
test
jl
mov
xchg
dec
mov
push
fldlg2
or
mov
setnp
or
inc
mov
ljmp
mov
insl
sbb
adc
jb
sub
fnsave
xlat
icebp
insl
pop
inc
push
xchg
cld
push
mov
and
xor
push
mov
inc
pusha
divl
cmpsb
fs
es
jecxz
sub
inc
fstps
les
icebp
es
mov
movsb
add
or
add
inc
ficomps
hlt
add
ds
and
jl
test
jp
and
push
jg
outsb
popa
decl
dec
leave
mov
cld
sarb
dec
cli
ret
les
cltd
decb
xchg
mov
cmpsb
aad
push
fiaddl
dec
out
jge
jo
xor
jecxz
mov
popf
xchg
cmpl
js
xlat
push
and
cltd
movsl
scas
outsl
cmpsb
adc
pop
xor
push
cmpl
fistpl
rorb
dec
lret
fbld
add
out
add
mov
xchg
xor
repnz
inc
cs
mov
mov
clc
lock
or
sti
mov
pop
leave
cs
mov
jnp
pop
inc
push
push
dec
cltd
xchg
mov
jnp
dec
lea
mov
outsb
jmp
add
inc
push
loop
je
dec
mov
shl
je
lods
jmp
popf
cmc
push
pop
scas
sub
sub
push
and
sti
popf
test
xchg
dec
sub
mov
in
cmp
dec
add
jne
leave
fs
test
ret
or
dec
xor
jb
or
fcompl
add
xor
cmp
inc
pop
sbb
jl
pop
out
mov
xor
rcrb
fst
inc
xchg
nop
incl
or
fadd
xchg
sti
shl
out
dec
aaa
dec
out
jmp
sarb
mov
negl
notb
jo
aad
and
and
jecxz
dec
movsb
mov
sar
loopne
enter
scas
add
lods
xchg
cmpsl
jecxz
jge
or
or
or
mov
std
push
inc
jge
and
xchg
pop
push
sub
or
fstp
fbstp
shll
jne
vpmacsdqh
dec
push
pop
xchg
div
ljmp
loopne
push
mov
and
mov
mov
add
fnstenv
loop
mov
add
and
lock
push
cmpsb
loopne
mov
outsb
sub
arpl
sbb
inc
xor
test
push
xor
arpl
aam
jp
mov
mov
repz
inc
ljmp
add
and
mov
sub
aad
jnp
not
in
add
sbb
lret
cmpb
mov
into
ds
es
adc
out
lock
jle
push
xchg
cmp
xchg
jecxz
fistpll
outsl
xor
mov
enter
lret
sbb
jge
jg
daa
mov
pop
shlb
in
cmp
insl
push
ret
push
scas
dec
cmpb
mov
ret
cmp
jle
into
lock
ds
in
loopne
push
push
sbb
repnz
jae
sbb
daa
jecxz
xchg
fbstp
inc
jnp
int
xchg
repnz
and
aam
loope
sub
daa
xchg
sbb
sarl
outsb
jno
sahf
insl
jnp
insl
outsb
xlat
fcmovnu
add
push
jb
mov
mov
sbb
orl
and
mov
push
mov
imul
inc
push
pop
lock
mov
aam
push
jb
mov
cs
aad
cmp
pop
out
and
jmp
rclb
out
sarb
stc
and
loopne
sahf
push
mov
cs
dec
repnz
stos
xor
and
adc
pop
pop
inc
test
adcl
insl
int
inc
mov
insl
clc
cmpsl
mov
popf
sbb
ja
pop
call
mov
popa
not
fsts
rorb
lock
aad
fs
test
test
xchg
xor
in
scas
mov
std
stc
cld
push
scas
xor
imul
push
mov
call
jo
cmp
lock
sbb
in
or
fisubrs
xchg
cmp
int
pop
stc
dec
sbb
call
cmp
in
pop
pop
fistpl
pop
cmp
aas
xor
or
mov
mov
enter
and
xchg
fs
or
mov
xchg
mov
jb
or
int3
std
or
mov
imul
cmpsb
push
ds
inc
or
test
cld
jnp
jns
daa
adc
inc
push
or
and
pop
popf
jle
jg
ja
mov
add
jge
int
imul
or
int3
jg
sub
or
fildll
aad
loop
sub
test
imul
pop
clc
enter
repz
rcrb
push
es
leave
xchg
add
push
pop
dec
pop
sti
adcl
pusha
dec
in
and
outsb
rcrl
shrb
xchg
lret
xlat
cmp
fcoml
mov
adc
adc
sub
into
inc
imul
aam
sbb
int
cmpb
cmp
dec
mov
or
mov
fxch
or
mov
and
inc
push
push
imul
mov
into
in
pusha
cmp
arpl
fcompl
popf
mov
mov
add
inc
in
sub
lods
mov
repz
push
adc
add
xchg
ret
nop
test
rcr
dec
outsl
fimull
and
icebp
out
mov
outsl
repz
jae
retw
stos
stc
xor
fs
shll
pop
stos
int
cli
fstpl
mov
cld
test
std
jecxz
pop
pop
outsl
int3
mov
sub
ljmp
push
fnsave
xor
daa
scas
jbe
sbb
xor
sbb
out
ja
mov
test
pop
rcrb
dec
lret
rcrl
mov
lret
sub
jb
adc
xchg
pop
enter
ret
lds
dec
pop
jnp
fiadds
inc
lock
jne
cmp
xchg
repnz
fdivs
adc
push
lods
into
je
outsb
dec
faddl
bound
les
sbb
cmp
cmc
mulb
cmpsb
cmp
popa
adc
push
ljmp
and
aaa
sbb
push
or
jno
outsb
pop
pop
adc
xorl
movsb
cs
popf
cltd
cmp
repnz
loopne
dec
lods
xor
test
popa
daa
test
inc
in
out
das
adc
push
push
jo
mull
sbb
or
rcl
ret
cmp
mov
cmp
bound
pop
push
mov
dec
add
loope
push
cmp
push
or
jle
shl
inc
jp
jmp
in
pop
push
dec
xor
push
lock
cmpsl
add
inc
ss
inc
ret
or
movsl
sti
push
sbb
nop
or
into
dec
adcl
mov
ljmp
scas
fcmovbe
inc
push
pop
insl
test
push
jno
mov
arpl
ret
lahf
iret
daa
xlat
repnz
popf
mov
ljmp
sub
pop
sub
adc
push
out
nop
sbb
fnstcw
aam
ror
int3
int
cmc
popa
in
sub
rclb
cmp
push
fisttpll
sub
inc
mov
test
dec
rol
sbb
jmp
out
mov
outsb
pop
adc
nop
mov
sub
cld
or
sub
movsl
fucomip
pop
add
sbb
shll
xchg
jmp
call
mov
subl
testb
mov
js
add
or
rorb
fildl
imull
push
fsts
inc
or
imul
test
aam
mov
aas
sbb
sti
les
mov
add
and
scas
push
arpl
ret
xor
pop
inc
data16
les
mov
add
push
hlt
push
dec
clc
jno
imul
loopne
test
pop
mov
rorb
mov
test
xor
add
ret
push
into
rorl
aam
adc
sbbb
pushf
aam
jno
call
aas
hlt
scas
adc
lods
sbb
xor
jb
movhlps
icebp
mov
mov
push
xor
insb
repnz
movsl
test
bnd
push
push
pop
adc
add
inc
in
xchg
mov
scas
ljmp
pop
dec
inc
xor
sti
fidivrs
fwait
test
mov
es
imul
pusha
test
fcoms
fcompl
mov
cwtl
cmp
sub
int3
cltd
or
pushf
sub
and
add
mov
push
in
incl
xor
cmpsb
mov
das
call
jbe
and
stos
push
lea
lea
pop
add
or
ret
adc
and
pop
out
scas
pop
divb
sbb
dec
scas
addb
jne
xlat
fistpl
je
inc
mov
lret
pop
dec
jne
inc
pop
and
test
fidivrl
fcoml
nop
adc
push
nop
push
and
ret
test
mov
push
or
sbb
das
dec
xchg
mov
loop
fistpll
lock
push
js
mov
in
inc
jnp
stos
push
adcl
push
inc
and
int
mov
in
addl
scas
jns
adc
or
std
orl
adc
pop
popa
jecxz
ret
dec
test
xabort
shrw
cwtl
push
das
add
sbb
mov
or
pop
cmp
dec
jne
and
iret
push
outsb
scas
fldcw
loope
clc
xchg
pop
adc
in
inc
popa
jg
mov
xchg
bound
in
xlat
adc
mov
icebp
fcmovnu
test
push
jne
pop
jno
adc
cmp
adc
inc
mov
mov
mov
sbb
cli
pop
lcall
inc
lods
lret
jl
push
lock
scas
inc
push
and
ljmp
lds
cmp
stc
mov
inc
shufps
in
xor
xor
mov
cmp
outsb
subl
or
pop
and
sbbl
pop
push
inc
mov
lock
jl
in
xlat
arpl
push
pop
es
dec
push
insb
in
negl
or
imul
jge
shlb
xor
push
cmpsl
incb
sub
outsb
adc
arpl
aam
mov
in
xor
shlb
xchg
pop
push
aam
or
sub
or
add
lock
ret
xor
xchg
pop
xchg
mov
push
and
sub
cmpsl
fisttps
test
fwait
ret
and
or
mov
adc
aas
ret
inc
lds
or
sub
lahf
mov
push
xor
scas
mov
pop
inc
pop
push
adc
inc
sub
popl
pop
and
std
mov
adc
dec
nop
jno
push
inc
mov
jmp
sub
or
adc
fsubrs
je
int
and
testl
lret
rolb
test
data16
push
jnp
jge
cmp
xchg
lea
lock
push
pop
int3
es
mov
dec
cmp
in
iret
mov
enter
ret
dec
hlt
add
idiv
aaa
insl
fwait
sbb
sbb
lret
mov
gs
inc
scas
scas
loop
cmp
lock
mov
sub
enter
inc
mov
pop
rorb
rorl
xchg
fst
insb
out
lds
movsb
js
push
insl
lcall
movsb
loopne
pop
push
repnz
mov
orl
out
in
push
xor
aaa
daa
add
push
fidivrl
pop
stc
or
mov
pop
cmpl
ret
adc
test
lcall
pusha
jo
mov
add
sti
cmp
lcall
ror
mov
arpl
mov
mov
imul
arpl
xor
shll
aas
mov
jo
sarl
pop
dec
shlb
dec
ret
pop
push
addl
fdivp
aad
cmp
daa
and
mov
popf
inc
std
cwtl
stos
int3
ds
das
outsb
imul
ja
setne
ss
xchg
das
and
mov
mov
xchg
push
pusha
mov
add
pop
push
js
int3
rcr
mov
pop
xchg
call
loopne
push
push
push
mov
inc
cs
add
call
outsb
iret
jns
inc
insl
mov
std
aaa
lahf
pop
sbb
fmuls
in
test
mov
test
or
ds
mov
dec
adc
inc
fistl
jle
mov
mov
pusha
cwtl
xchg
mov
in
cmp
push
lds
or
jb
add
mov
frstor
test
nop
fisttpl
xor
dec
sahf
imul
in
mov
or
xchg
das
jne
cmp
leave
outsl
les
xorb
mov
add
jmp
mov
jno
rcr
xchg
dec
enter
imul
adc
xchg
rorb
sbb
data16
xor
jbe
adc
repnz
inc
scas
shlb
loope
je
test
and
lcall
jno
sub
mov
add
bound
pop
aam
jae
test
xchg
sbb
cli
push
jmp
xchg
popf
iret
sub
xchg
or
stos
sbb
lds
popa
lea
in
lock
mov
dec
xchg
shr
and
movsb
xchg
inc
inc
andl
jo
jae
popa
cld
lods
cmp
les
testl
jae
into
call
mov
cld
push
nop
test
int3
sub
xchg
push
mov
out
mov
in
fdivl
les
pop
sbb
xchg
stos
dec
out
jge
aas
std
xor
cld
jo
mov
jno
test
popa
scas
jge
xchg
rolb
sbb
mov
sbb
sbb
mov
pushf
xlat
mov
aad
pop
mov
sbb
xor
fs
ficomps
pusha
and
or
dec
test
lahf
mov
adc
aas
call
sub
mov
sub
test
mov
jae
iret
push
or
mov
push
dec
ljmp
addr16
fisttpll
mov
or
xchg
sbb
cmp
jo
xor
jg
jne
adcl
imul
in
or
sti
jne
aaa
cmp
mov
cmpsl
mov
lods
scas
jne
test
cmp
outsl
test
jp
jo
or
loopne
out
mov
outsb
mov
inc
cwtl
icebp
cmpsb
add
xchg
xchg
jne
mov
jmp
lahf
enter
dec
jecxz
cmc
pop
les
cmp
fmuls
jns
push
sub
push
sub
dec
fistpll
or
fisubs
fs
adc
rcrb
test
add
xchg
sbb
or
push
cmp
xchg
xchg
pop
shll
push
push
sub
sub
push
ror
lahf
push
sbb
jo
or
dec
xor
imul
insb
jnp
mov
lret
dec
pop
stc
insb
scas
sbb
movsl
lcall
add
fmull
pop
or
or
and
orb
rcll
aad
in
sub
mov
popa
push
cli
sub
xor
testb
mov
dec
inc
sub
stos
fnsave
ds
mov
dec
mov
xchg
push
imul
cmp
scas
jns
sub
cmp
shlb
inc
cld
fnstenv
pop
lcall
adc
pop
or
les
and
jmp
mov
mov
sub
fcom
cmp
dec
xchg
test
push
cmp
fiaddl
xor
fistpll
or
ret
pop
popa
pop
sbb
cmpsl
lods
fdivrs
in
push
aaa
xchg
mov
push
cld
ss
outsl
mov
fadd
lea
xlat
pushf
cmp
fiaddl
dec
xor
and
xlat
iret
adc
inc
inc
es
sti
repnz
adc
imul
push
lea
mov
sbb
cwtl
shll
and
mov
pop
out
iret
sub
std
mov
push
mov
rcr
and
cmpsl
mov
jnp
loop
sbb
fwait
dec
xchg
and
in
sti
jle
daa
shl
test
ss
sub
ret
push
sub
ud2
sub
lock
or
neg
lret
stc
inc
dec
inc
nop
sbb
popf
add
shlb
or
sysexit
ret
and
repz
hlt
sbb
jno
push
inc
add
add
sbb
and
data16
jbe
push
xor
xchg
adc
stos
pop
fildll
out
int
adc
inc
jp
sbb
cmp
dec
int
or
notl
sbb
add
shll
push
bound
enter
shll
dec
sbb
repz
sbb
stc
arpl
out
and
xchg
xor
dec
repnz
jb
in
stos
int
dec
or
lea
or
mov
and
mov
push
scas
in
or
push
or
enter
sahf
mov
enter
out
or
inc
scas
ja
les
lcall
inc
popf
mov
mov
pusha
popa
int3
inc
gs
les
sbb
out
mov
ret
xor
andl
cmp
scas
in
jecxz
scas
fildll
pop
das
pop
out
jno
xchg
fmuls
jg
lret
push
cmp
pop
lds
push
stc
enter
pcmpgtb
in
lahf
dec
push
aas
cmp
xlat
or
gs
xor
loop
cmp
mov
dec
or
xorb
lret
movl
jp
pop
dec
test
dec
stc
gs
xchg
gs
out
push
adcb
movsl
or
mov
pop
xchg
mov
pop
add
mov
mov
into
je
pop
dec
aam
jp
inc
add
test
sahf
sub
cld
sbb
add
pop
mov
pop
cmp
xchg
clc
mov
in
jmp
sub
les
mov
add
push
test
test
in
outsl
iret
push
pop
shrb
fprem1
jecxz
and
pushf
int
add
or
and
and
lea
mov
repz
out
inc
clc
xor
sub
mov
repnz
aad
repz
adcl
pop
sub
mov
arpl
jge
mov
jp
push
negb
mov
scas
push
or
leave
push
pushf
dec
ljmp
mov
cmp
into
punpcklbw
add
cmp
cmp
cmp
jae
add
push
add
lds
fs
push
sub
sbb
imul
and
pop
bnd
std
jmp
jle
mov
dec
lcall
cmpsl
and
push
jae
testb
pop
push
addl
push
jne
data16
int3
mov
adc
sub
imul
push
push
push
imul
sbbb
je
sbb
mov
push
popf
ljmp
mov
or
stc
dec
push
pop
mov
xor
sahf
hlt
int
mov
lahf
jae
loop
jbe
nop
xor
and
ja
outsl
sbb
mov
dec
lahf
out
inc
out
outsl
in
mov
pop
or
mov
popf
and
push
mov
and
cmpsl
sub
mull
dec
shlb
jbe
cmp
insl
mov
xchg
shll
push
mov
xor
pusha
fdivrl
outsl
sbb
jnp
adcl
mov
into
xchg
adc
bound
push
adc
movsl
mov
leave
mov
mov
inc
or
in
stc
and
or
fbstp
cld
jmp
aam
fsubrl
mov
movsl
loop
test
js
clc
test
push
dec
push
fidivrl
cmp
nop
popl
or
loope,pn
arpl
xchg
mov
cwtl
popf
xor
sahf
arpl
divl
ficoml
icebp
lret
mov
lret
push
ljmp
mov
mov
ret
mov
loopne
int
mov
data16
shll
and
outsl
push
mov
xchg
mov
cmp
ja
cmp
push
notl
push
lahf
inc
xchg
jle
dec
mov
adc
mov
stos
xchg
mov
jae
gs
pop
jns
mov
and
aaa
push
lret
mov
cwtl
cld
jbe
pop
test
xor
push
xor
leave
jge
je
cmp
jo
or
test
addr16
test
stc
push
into
imul
pop
push
movsl
out
loope
mov
test
mov
movsl
ret
movsb
popa
xchg
inc
jl
push
mov
roll
jp
dec
popa
sbb
out
seta
and
mov
mov
cwtl
ficomps
sub
mov
aaa
or
jge
cld
pop
cmpsl
cmpsb
adc
cli
cmp
mov
inc
cmpsb
inc
cwtl
dec
test
or
pop
dec
scas
mov
ss
cmp
divl
or
les
mov
mov
out
and
stc
ja
fidivl
xchg
push
loopne
mov
negl
add
mov
imul
mov
mov
fsubl
lahf
in
xorl
les
inc
sbb
jg
mov
mov
mov
daa
adc
in
je
addr16
cmpsl
xor
add
outsl
jmp
pop
inc
pop
xor
xor
adc
xchg
movb
lret
ljmp
imul
insl
aas
mov
jl
jp
sub
loop
jle
rclb
pop
insl
gs
push
cmp
mov
ja
jp
imulb
gs
sub
mov
dec
mov
leave
lret
in
stc
jae
aad
and
ficompl
fmuls
or
data16
add
add
xor
imul
ret
xor
xor
xor
movsl
adc
xchg
cli
lds
jnp
in
adc
lods
std
addr16
sarl
cmp
std
mov
xor
xchg
cld
jmp
add
push
notb
adc
scas
push
iret
add
and
lret
xor
jno
inc
push
sub
sbb
sub
testb
ret
addr16
jp
mov
add
loop
sti
repnz
rcrl
fildll
ss
scas
sbb
stos
cmpsb
mov
loopne
daa
xor
jmp
in
das
xchg
js
stos
lret
mov
sbbb
mov
sahf
add
jmp
inc
lods
cmp
jae
loop
fadds
mov
cld
insb
mov
jne
inc
cwtl
adc
or
rolb
mov
mov
cmp
sbb
or
mov
idiv
in
adc
inc
imul
mov
sar
cmpl
xchg
outsl
outsl
cmp
mov
dec
dec
out
mov
jg
jl
sbb
xor
fcmovb
mov
cli
add
adc
aad
adcb
sbb
adc
sarl
aam
jg
inc
jp
push
jge
xchg
cli
dec
fstps
setb
inc
js
dec
pop
and
das
sub
mov
nop
mov
lret
insl
adc
adc
insb
pop
popa
cmc
rcrb
aam
mov
mov
lea
add
push
aas
cmpsl
repz
sbb
aad
jmp
subl
aaa
negb
stos
cmp
mov
les
fwait
in
push
scas
mov
iret
cmpsl
dec
push
pop
ja
lea
aaa
mov
stos
scas
push
fwait
repz
addr16
sub
subb
dec
or
xor
in
shll
flds
test
sbb
mov
das
jp
fs
xchg
mov
out
enter
add
push
ret
sub
push
movsl
aaa
repz
les
push
mov
ret
loopne
aad
jno
ja
aas
ja
sbb
aam
js
dec
xor
jae
test
or
and
shrl
imul
push
cli
pop
out
dec
push
dec
jecxz
mov
outsl
std
jo
repz
push
inc
or
sub
dec
pop
ljmp
std
jae
mov
dec
inc
inc
out
ja
push
ds
mov
xchg
and
ljmp
pop
mov
pop
push
mov
fisubs
aaa
test
into
xchg
sub
mov
lea
sub
mov
fdivs
mov
ljmp
inc
add
fs
mov
out
call
add
cwtl
sub
arpl
lds
jae
mov
idiv
mov
test
jmp
addr16
pop
rorl
sbb
sahf
aad
add
je
popf
xorb
inc
pop
mov
test
push
jo
std
dec
push
inc
add
cs
fwait
jg
rorb
leave
pop
push
mov
adc
jl
leave
adc
std
jno
sbb
pushf
out
sti
or
inc
push
pop
rcll
xlat
push
test
pop
fcompl
xchg
cmp
add
sbb
cmp
xor
fwait
pushf
xchg
dec
cmp
inc
jl
pop
xor
aad
sub
nop
loope
mov
in
sbbl
repz
adc
out
mov
and
mov
xchg
adc
mov
inc
stos
imul
cmpsl
sbb
arpl
pop
nop
sub
xor
addb
sub
xor
add
repz
scas
ror
in
shrb
adc
push
icebp
outsl
outsb
out
in
xor
sahf
xchg
jmp
test
xor
in
repz
imul
nop
push
cwtl
pop
lods
xchg
or
push
pop
negl
lahf
outsb
jl
arpl
inc
and
cmp
xchg
or
insb
mov
add
loope
test
imul
jno
loope
dec
lea
jne
cmp
gs
in
mov
in
jo
inc
sbb
adc
inc
or
cmp
lahf
cmp
pop
out
mov
xor
mov
jns
add
lods
lock
test
jno
fwait
cmpsb
cmpsb
dec
ffreep
iret
jbe
cmpsb
adc
lods
in
imul
pop
xor
pop
daa
jmp
mov
out
mov
dec
sar
imull
push
arpl
stos
test
icebp
enter
mov
js
adc
call
ss
int3
jb
std
cld
pop
adc
testb
inc
shr
jp
inc
dec
cmpsl
mov
and
addr16
stos
push
mov
ror
xor
adc
out
push
xchg
lock
xor
sub
sbb
push
arpl
nop
enter
dec
inc
fwait
inc
xor
add
sbb
lock
out
shl
adc
jmp
fdivrs
and
sti
ljmp
xchg
and
repnz
sarb
lods
jo
adc
cmpb
jmp
pusha
loopne
neg
insl
fisubl
out
cmpl
sbb
cltd
xchg
clc
vmovq
mov
push
cmp
ficoml
pusha
pop
xchg
mov
add
iret
fistps
outsb
jb
mov
loope
mov
inc
dec
popf
inc
icebp
call
cmp
pop
and
mov
push
jmp
sub
add
mov
addb
sbb
xchg
fsubrl
inc
movsl
or
je
xchg
cli
aaa
outsl
dec
bound
in
pop
leave
inc
mov
mov
pop
inc
andb
mov
je
sub
ss
sbb
mov
sti
pop
jg
xchg
sbbb
pop
pushf
mov
fnstcw
push
mov
repz
jo
jnp
push
inc
lods
add
jle
or
xchg
dec
inc
jmp
cmpsb
sub
int3
mov
popl
xchg
les
jl
stc
mov
push
gs
repz
mov
jnp
adc
mov
mov
jge
ja
ret
clc
mov
insl
cmp
sti
and
cltd
mov
jle
addr16
mov
sbb
shll
sbb
jo
jne
or
lcall
pop
lret
sub
fst
sbb
and
push
cmp
pushf
or
lret
ja
mov
push
pop
or
cmp
hlt
cmp
sarb
cmp
xor
insl
in
les
ds
nop
loop
stos
int3
orb
inc
xor
lods
inc
jo
imul
or
push
inc
fwait
mov
adc
push
test
loope
pxor
daa
mov
or
mov
pop
add
xlat
ds
mov
fs
and
arpl
mov
mov
xchg
add
ds
sbb
pusha
fsubl
cmpsl
mov
lcall
inc
jge
sub
mov
xor
and
in
cmp
fmul
aad
ret
inc
xor
xchg
lret
sbb
dec
cwtl
out
push
jecxz
cmp
inc
jbe
jecxz
aam
mov
lret
jae
push
mov
loopne
js
jbe
xor
dec
xlat
inc
lahf
cmc
pop
jne
or
filds
cmp
bound
sub
inc
stos
insl
push
sub
lret
pop
and
out
inc
mov
xchg
mov
sbb
pop
jnp
loop
add
jg
push
divl
popf
aaa
adc
scas
aaa
dec
mov
pushl
lcall
add
insb
push
icebp
test
mov
jge
xchg
ss
jns
pop
inc
ret
adc
xor
mov
testb
or
pop
dec
pop
clc
in
and
push
call
mov
pop
dec
xchg
jb
imul
add
lods
int
or
daa
adc
sub
jo
sbb
mov
push
adc
shrl
jg
adcl
or
icebp
in
lahf
push
pop
xor
mov
cs
mov
xchg
pop
or
pop
mov
ret
out
dec
add
push
jnp
or
or
jg
push
mov
push
xchg
mov
jecxz
mov
scas
data16
flds
sub
ja
std
sarl
dec
inc
mov
or
clc
xor
into
jbe
clc
push
cmpsl
lcall
out
movsl
inc
roll
leave
jne
mov
jno
cmpsb
push
pop
cmp
ret
roll
jmp
loop
into
inc
mov
push
xor
popa
mov
pushf
test
cmp
pop
and
cmp
js
out
ja
fistpl
imul
movsl
stos
mov
pop
and
scas
ljmp
cmpsb
fbld
cwtl
sub
mov
fstp
sub
aam
mov
idiv
xor
fcoml
push
ljmp
sub
inc
lock
iret
mov
cmp
pop
mov
lcall
mov
in
xor
mov
xorb
jg
not
cmpb
pusha
sbb
gs
cli
aaa
add
adc
cmp
jo
push
pop
test
or
cmpb
mov
jp
outsb
push
add
xor
inc
mov
jl
fwait
addl
push
adc
rcrb
xchg
dec
adc
mov
repz
mov
shlb
mov
push
mov
dec
scas
jecxz
out
notl
mov
cmp
xchg
xchg
pop
cmp
cmp
adc
mov
roll
jne
and
push
lea
push
lea
gs
ficompl
cmp
jne
and
sahf
call
xchg
add
cwtl
pop
sub
decl
xor
clc
inc
adcl
sbb
mov
xor
es
jae
shll
inc
aas
fidivrl
bound
test
in
xchg
in
dec
ss
leave
xor
inc
xlat
shll
js
cmpsl
dec
mov
rorb
aas
xchg
scas
insl
sub
or
dec
movsl
scas
or
or
ret
stos
leave
pop
sub
xchg
push
test
and
sub
jl
inc
leave
cmpsl
insl
mov
lods
call
pusha
xor
fs
es
aad
dec
ja
in
xchg
gs
pop
imul
test
ja
mov
mov
mov
xchg
mov
repnz
ja
dec
ret
sbb
sbb
fwait
repz
dec
test
aaa
cwtl
push
ljmp
sub
call
ja
sarl
les
pop
xchg
movsb
stos
pop
add
scas
ret
mulb
adc
outsb
sub
cld
xor
push
outsl
into
xchg
jae
cmc
cmpsb
dec
fcompl
cwtl
lahf
xor
jno
scas
mov
xor
aaa
test
pop
out
je
cmpsl
inc
sbb
stc
leave
push
or
ljmp
lods
pushf
xlat
in
mov
sti
outsl
inc
jmp
pop
incl
jg
cmp
repnz
clc
imul
inc
inc
imulb
mov
jecxz
outsl
das
mov
add
inc
mov
outsl
xlat
push
and
cmp
xor
ret
pop
out
or
fdivs
sbb
div
call
pop
cmc
insl
jo
cmp
pop
push
in
out
stc
and
jge
iret
cmp
pop
mov
push
jbe
fisttpl
sbb
rcll
outsl
jge
push
xor
lret
in
movsl
or
and
sbb
xor
add
push
inc
jge
inc
jno
or
mov
xor
mov
movsb
push
xchg
int
loopne
repz
cmp
fmul
inc
pop
loop
shl
lcall
mov
ja
and
loope
out
adc
shl
sbb
xchg
fiaddl
popa
out
dec
sbb
pop
mov
jno
icebp
lea
xchg
fs
mov
sub
xor
rclb
mov
mov
lds
xchg
jb
cmp
std
dec
mov
or
fmuls
pop
lock
jne
ds
cmpsb
mov
in
sti
add
cwtl
pop
scas
repnz
notb
aaa
add
xchg
ss
test
jl
pop
stos
aam
and
push
fs
clc
mov
or
or
xor
add
aad
sbb
jbe
lods
xorl
pop
jp
sub
or
bound
mov
xor
out
inc
and
lcall
stos
lods
push
xchg
jle
outsb
cmpsl
sti
pop
mov
nop
popf
fptan
inc
shr
jp
mov
movsb
push
lcall
add
jge
adc
mov
dec
movsb
cmp
out
test
or
pop
sub
mov
dec
pop
aaa
mov
scas
sub
and
nop
xchg
or
imull
adc
cmpsb
dec
or
clc
mov
jmp
ficompl
push
xor
ds
or
jge
push
xchg
arpl
xlat
sbb
out
fidivl
cmpsb
or
addr16
pop
and
stos
je
xchg
decl
ds
push
xrelease
mov
lea
test
outsl
xor
jecxz
in
in
test
jbe
adc
mov
ror
fsts
xchg
aad
sub
or
fs
fwait
xor
and
jae
inc
std
mov
out
lods
nop
sahf
insb
stos
adc
fs
jnp
xchg
loop
jns
adc
mov
adc
adc
sub
out
test
cmp
xor
ss
insb
sbb
pop
sub
je
lods
roll
shrl
loope
pop
pop
test
mov
dec
in
sbb
jo
movsl
out
xchg
sbb
adc
mov
push
gs
adc
mov
stc
xor
flds
or
push
icebp
clc
fdivrl
mov
outsb
fcmovb
sub
jecxz
cmp
hlt
clc
in
dec
icebp
xor
movsb
xchg
xchg
aam
repnz
sub
mov
outsl
sti
xlat
repz
add
jno
sarb
pop
pop
mov
shrb
adc
leave
roll
std
sbb
andl
xor
inc
jg
outsb
ss
xchg
scas
shrb
shll
lods
dec
ret
cwtl
cmp
mov
jecxz
jo
xor
iret
popa
je
fsts
ljmp
in
repnz
fwait
sub
cmp
adc
and
aad
mov
mov
push
sub
clc
call
jnp
into
inc
sbb
lret
and
cmpsb
lcall
lcall
push
mov
lcall
shll
or
mov
dec
adc
add
enter
icebp
lcall
out
fidivrl
inc
subl
inc
cli
fcoml
xchg
fwait
enter
add
das
std
xchg
in
jno
bound
add
dec
js
xchg
mov
jne
sbb
ret
data16
subb
cmp
fs
inc
ljmp
cmp
sub
mov
dec
jecxz
out
enter
push
adc
xchg
sub
sbb
outsb
repnz
imul
sbbl
mov
push
popf
scas
xor
xchg
jns
sbb
fstl
xchg
jle
push
adc
test
mov
iret
and
cmp
xchg
into
ds
xchg
and
loopne
cmp
shll
movsl
pop
jae
loop
in
mov
leave
push
mov
mov
pop
xchg
jmp
mulb
jmp
aas
or
sbb
enter
shl
sub
hlt
xor
mov
xchg
xor
or
jecxz
cld
mov
xchg
int
jns
pop
and
in
xchg
pop
mov
shlb
push
dec
ret
mov
inc
jl
pop
shlb
leave
push
shl
imul
insl
aam
push
push
mov
movsl
lret
push
cmpsl
imul
push
scas
into
fdivp
mov
xor
jbe
in
jne
mov
jne
je
fdivs
sub
push
aad
dec
dec
lret
rclb
lret
fdivrl
lock
scas
xlat
push
or
mov
xor
subl
fcoml
jne
hlt
popf
not
cmp
jle
pop
inc
mov
or
jmp
clc
sti
xchg
mov
or
insl
lea
inc
inc
repnz
xor
pop
push
inc
push
ja
inc
lret
es
cli
and
inc
mov
and
out
inc
sti
inc
xchg
and
xor
mov
rorl
push
sbb
and
mov
xchg
out
ss
or
pusha
repnz
aas
jnp
adc
repnz
xchg
dec
and
lods
xchg
mov
xchg
add
popa
subb
pop
imul
out
aaa
jb
enter
pop
mov
jmp
fisubrl
jo
cmp
fs
xchg
lea
add
jno
mov
mov
and
jno
xor
test
xchg
mov
test
cmpl
mov
and
push
or
stc
sbb
add
mov
jg
push
adc
addr16
xlat
mov
sbb
les
mov
inc
mov
or
xchg
enter
sub
loope
aad
sbb
adc
subb
mov
mov
das
int
push
aam
out
lcall
stos
andb
bound
scas
aam
pop
test
test
cltd
push
xchg
hlt
mov
pop
jge
adc
inc
or
notb
pop
movsb
shrb
push
out
xor
sbb
fldlg2
xchg
adc
fsubrl
adc
cltd
pop
nop
add
outsl
jp
sahf
mov
fildl
mov
fwait
or
add
pusha
mov
sub
cltd
stos
je
pop
cmpsl
ljmp
stc
fs
std
pop
dec
movb
jmp
loopne
adc
popf
xchg
testb
repnz
jns
or
sbb
mov
jno
in
sub
cli
fisubrl
pop
sub
fsubs
jbe
jns
int3
cmp
decl
cltd
pusha
add
add
inc
cmp
jmp
sub
mov
dec
aas
js
sbb
cmp
cmp
jge
or
pop
mov
loope
jle
pop
ret
pop
cmpsl
mov
movsl
ljmp
jne
rcr
ljmp
testl
jmp
dec
xchg
sbb
js
sahf
fs
mov
lahf
sub
orb
cmpsb
nop
rcrb
outsb
pop
xchg
int3
int
and
mov
lock
sub
cwtl
xchg
lock
ret
lds
gs
pop
inc
mov
mov
adc
or
mov
xor
adc
mov
mov
aam
mull
jnp
xchg
pop
hlt
xor
faddl
jbe
stos
xor
adc
or
cli
mov
es
scas
cmc
dec
adc
cs
push
lret
push
into
cmp
ja
sub
or
sub
fsub
std
outsb
int
les
and
clc
loopne
pop
lock
dec
lret
es
ja
push
aaa
insb
loop
xchg
imul
stos
xchg
std
repnz
int3
mov
sub
stos
jle
fwait
test
in
or
xor
shrb
lret
sbb
fmuls
aas
adc
push
popf
fdivrl
xorl
loope
in
dec
cmp
leave
in
and
fstpl
icebp
popf
xchg
pusha
sbb
inc
sub
in
out
adc
shll
dec
mov
loope
sub
sbb
xor
in
test
call
je
dec
mov
movsb
sub
ja
sbb
test
lret
insl
ffree
xchg
jnp
mov
mov
adc
ret
pop
out
ja
xchg
in
in
mov
movsb
dec
outsb
sti
xor
sbb
mov
adc
pop
pop
imul
ss
cmp
or
pushf
cs
pop
movsb
outsl
pop
push
scas
ret
xchg
sub
int
sbb
and
enter
jb
or
pop
pusha
add
into
nop
rcrl
jge
jle
fildll
pop
mov
popa
cltd
fisubl
push
or
dec
cmp
stos
xchg
imul
and
mov
std
push
scas
aam
add
push
jg
pop
push
pop
out
sahf
scas
ret
in
scas
sub
fucomi
lret
mov
andl
mov
das
push
push
mov
sarb
adc
sub
fcoms
mov
mov
cmp
movsb
les
mov
or
push
js
mov
dec
lods
lcall
jmp
loope
sbb
push
pop
fs
mov
push
out
push
lods
cmp
pop
push
fsubrp
scas
roll
aas
pop
loopne
jl
out
sub
stc
adc
ljmp
or
mov
ss
mov
fwait
out
adc
xchg
jmp
dec
cld
fcoms
mov
fstpt
jo
adc
sahf
inc
aaa
jb
gs
hlt
mov
loope
aad
adc
scas
dec
pslld
ja
or
xchg
adc
shrb
sub
mov
mulb
push
push
xor
pusha
testb
cmpsb
mov
and
leave
adc
or
int
mov
xor
xor
and
cmp
xchg
inc
mov
repnz
mov
add
add
pushf
inc
addb
aaa
sbb
sbb
mov
ja
rcl
int3
add
fildl
pop
fisubl
shlb
xor
pop
aam
call
inc
mov
mov
daa
mov
pop
ljmp
movsb
mov
mov
jbe
dec
fsubs
test
gs
adc
push
mov
sub
dec
adc
jb
xor
mov
lds
pop
aad
sub
sbb
arpl
xchg
mov
push
xor
jno
jne
xchg
xchg
lds
jb
shrb
mov
or
mov
adc
cmp
and
loopne
shl
dec
stos
cwtl
fidivrs
xchg
inc
sbb
popf
add
push
sbb
jp
mov
movsl
cmp
jmp
or
add
cmp
inc
leave
nop
push
jnp
jae
dec
adcb
or
mov
ja
or
mov
rcr
xchg
push
movsb
dec
std
pusha
cmp
ja
fiaddl
jl
addr16
push
fcoms
sbb
mov
jl
call
jg
push
mov
rol
xchg
bound
out
gs
pop
jl
in
lea
jnp
out
fwait
rolb
add
or
sub
push
je
push
bound
je
insl
mov
mov
lret
addb
jmp
outsl
lcall
mov
pop
and
push
pop
aad
push
jp
addr16
lods
scas
adc
xlat
inc
fs
scas
aad
fisubl
pop
lahf
sbb
xchg
mov
sub
jg
mov
xor
insb
test
xchg
inc
addr16
mov
inc
sbb
hlt
xor
fsubrs
scas
popf
jecxz
fdiv
addr16
sub
nop
out
jmp
push
stos
mov
fcomps
xor
addb
push
mov
inc
mov
or
fistps
mov
stos
neg
je
push
dec
push
and
pop
dec
rorl
adc
lock
mov
cli
ljmp
xchg
xlat
xchg
imul
mull
ss
lods
jno
push
jmp
mov
loop
fnstenv
jge,pt
pushf
push
leave
aad
pushf
enter
ljmp
xorb
xchg
aaa
imul
push
imul
mov
xchg
push
jg
fcomip
xchg
fdivrl
insl
loopne
insl
mov
lahf
out
push
push
addb
call
xor
add
fs
mov
ljmp
cmc
mov
cmp
testb
shlb
jbe
lea
ja
jl
fstpt
sub
fbld
cld
test
enter
popf
in
andb
xor
cwtl
cmp
jne
dec
adc
repnz
mov
mov
xor
jl
jb
mov
pop
std
in
ficoms
jp
test
jb
test
push
push
shlb
sbb
in
daa
iret
cmp
xor
je
lods
mov
xchg
mov
syscall
sbb
mov
nop
mov
das
pop
fnstenv
pusha
jae
ss
jb
rcll
insb
adc
mov
cltd
and
fs
fs
xor
add
inc
cmp
xor
or
and
data16
popf
dec
aaa
xchg
in
dec
and
or
fdivl
jge
in
mov
aaa
xorl
sub
pop
sbb
loop
xchg
pop
xor
lea
subl
mov
aaa
mov
in
fwait
cmp
cld
mov
or
dec
add
mov
orb
sub
leave
mov
and
xchg
jle
stc
xlat
imul
fcompl
pop
out
fdivs
or
movsb
sub
and
mov
ss
cli
mov
jns
loope
inc
out
mov
adc
jb
xchg
xchg
adc
push
push
scas
lret
aam
and
ss
sub
jnp
pop
sbb
loope
mov
push
cmp
ja
jo
nop
in
adc
push
jmp
push
addb
in
ss
lods
jge
ficomps
lcall
mov
sub
clc
cs
push
jmp
or
jns
add
ret
inc
add
stc
push
jl
add
sbb
mov
mov
mov
xlat
cs
pop
xor
insb
fsubs
jge
xor
pop
push
sahf
pop
daa
add
fistps
adc
out
push
outsl
mov
lock
movsb
jg
jecxz
lahf
push
inc
jne
cmp
inc
daa
arpl
push
and
sahf
sarb
cs
cs
add
and
inc
clc
cltd
subl
sbb
mov
sbb
repz
insl
ds
mov
sub
gs
fstl
data16
pop
aam
js
add
pushf
hlt
lods
orb
sbb
adc
pop
daa
imul
sub
in
xchg
push
inc
sbb
in
imull
mov
in
add
andl
xor
stos
jne
pop
cwtl
repnz
in
fucom
add
inc
xchg
sbb
dec
mov
or
div
push
movsl
test
inc
pusha
cmpsl
mov
pop
jbe
cmp
inc
out
mov
xor
and
sub
rolb
lahf
call
cmc
enter
fldl2t
jae,pt
lds
jnp
imul
idivl
pop
jnp
lds
enter
or
mov
int
push
cwtl
mov
fiaddl
fistpl
add
cmc
movsb
xor
cmp
enter
and
jg
aad
mov
shl
add
test
jecxz
sub
mov
mov
add
pushf
lds
mov
lret
jb
in
divl
mov
cmp
xchg
cmp
ficoms
inc
call
dec
repnz
in
mov
dec
adc
testl
lret
xor
pop
adc
fsubl
rclb
inc
int
add
dec
xorl
ficomps
popa
out
mov
notl
ficompl
mov
mov
jl
stc
pop
pop
in
xchg
aad
aam
and
popa
or
inc
jmp
adc
std
sub
and
xor
imul
and
push
add
cmp
aas
and
pop
jl
mov
mov
cmp
int3
xchg
dec
subps
movsl
ljmp
out
dec
sub
popa
fldcw
mov
adc
push
push
loope
adcl
sti
sub
stc
jecxz
insb
fsubrs
std
leave
rorl
pushf
lods
sahf
popf
or
xchg
imul
xchg
cmp
imul
mov
lahf
push
pop
iret
sahf
popf
pop
fldl
xlat
push
pop
ret
pop
dec
and
cmpsb
test
jno
pop
mov
xchg
xchg
out
insb
cmp
mov
or
inc
imul
scas
stos
and
sbb
int
jecxz
shlb
mov
jmp
notb
dec
out
mov
imul
mov
je
mov
mov
xchg
inc
mov
inc
lock
adc
xchg
sub
insb
loopne
rcrl
or
adc
lods
push
int
pop
xor
cmp
sub
nop
jns
pop
mov
cmc
xor
pop
aas
dec
inc
pop
inc
and
mov
aad
stc
mov
popa
inc
add
out
lahf
icebp
pop
insb
adcb
cmpsb
adc
mov
lret
insb
shlb
mov
or
hlt
and
cmpsl
and
stos
loopne
outsb
out
cwtl
shll
inc
bound
out
and
mov
in
in
pop
xor
cmpsl
push
xor
mov
cwtl
push
push
rcrb
fwait
xlat
jge
mov
xadd
nop
xchg
stc
repnz
xor
sbb
into
sub
dec
rcr
aaa
adc
pop
ds
xchg
loop
stos
cwtl
shld
lock
pop
out
cmc
cmp
gs
into
pop
mov
jo
mov
movsl
stos
js
or
in
dec
sar
aas
stos
mov
and
cmp
adc
and
test
mov
stos
ljmp
inc
imul
pop
lods
rcl
icebp
push
add
mov
push
mov
add
sbb
cli
sub
mov
dec
std
lret
out
mov
icebp
mov
adc
dec
out
lods
cli
pop
movsb
loope
outsb
popf
mov
ljmp
dec
and
add
push
push
cmp
xchg
rcrl
and
push
pop
and
aam
dec
inc
ljmp
add
das
push
fdivs
mov
cmp
and
jb
inc
ret
sub
adc
push
push
dec
dec
sub
fucomp
push
loop
pushf
mov
fsubl
int
jbe
or
push
add
cmp
sbb
movsb
fs
fxam
lcall
fmuls
dec
pop
addb
jnp
or
cmp
pop
jge
mov
lcall
outsb
pushf
sbb
popa
std
adc
scas
xlat
adc
mov
out
sti
jle
jmp
cmp
fidivs
insb
pop
dec
sub
repz
xchg
mov
mov
nop
cltd
mov
lret
movl
repnz
mov
je
js
iret
add
sub
or
jle
je
cmp
or
fwait
mov
mov
jecxz
pop
das
div
xor
pop
sub
ds
popa
call
and
mov
std
adcl
insb
mov
mov
xchg
jp
lea
push
aas
xchg
nop
xchg
mov
dec
adc
in
cmpl
cltd
xchg
jg,pt
jg
mov
shlb
xorb
lock
mov
fldcw
mov
jecxz
inc
push
lock
push
adc
adc
std
sbb
iret
jmp
jno
roll
loope
outsb
inc
dec
mov
jmp
jnp
push
cmp
pop
cld
insb
jg
pusha
popf
sbb
sub
mov
push
out
cmp
xor
jb
dec
pop
xchg
jnp
into
push
in
xchg
fldpi
cmpsl
jno
xor
faddp
mov
push
push
jbe
mov
clc
fadds
push
jae
mov
daa
scas
je
repz
xlat
push
and
jmp
cmp
je
cmp
lcall
mov
cmp
jecxz
aam
sbb
xchg
bound
xchg
sub
scas
mov
stos
pop
lret
push
lock
fwait
and
jge
jns
fstl
movb
adc
jne
mov
adc
adc
lahf
fstps
xlat
lahf
mov
and
mov
sub
sub
xchg
imul
pop
adc
aas
add
lods
and
mov
jle
out
xor
loope
xlat
adc
test
mov
mov
push
cmp
push
loope
pop
dec
adc
iret
jle
ret
xchg
xor
pop
imull
xor
mov
adc
cwtl
stc
movb
cmp
fisubl
icebp
lcall
lret
or
out
pusha
pop
adc
scas
jl
push
xor
pop
sbb
inc
xor
fldt
out
decb
fs
hlt
and
adc
or
das
hlt
decl
fwait
aaa
mov
es
xor
xor
std
mov
or
scas
ret
mov
dec
inc
mul
fdivrs
popa
pop
adc
enter
add
inc
insb
rcrb
test
sbb
pop
cmp
push
mov
adc
cmpsb
ret
mov
gs
insb
pop
mov
ja
ret
cwtl
vpcomuw
mull
dec
mov
xlat
xchg
adc
aas
les
mov
cltd
adc
jge
out
jno
stos
mov
push
jbe
jne
in
cmp
je
fsubs
das
add
cli
dec
and
fs
dec
cmp
xchg
push
out
push
in
xor
movsl
pop
dec
out
or
xlat
xchg
adc
cmp
sub
or
movsb
loop
xchg
mov
sub
cltd
in
dec
rolb
add
sbb
ja
ja
js
cmpl
ja
ja
jb
fstp
fstp
ret
add
sub
and
in
adc
test
fisubrs
push
jp
or
jae
xor
jl
arpl
mov
or
dec
or
hlt
jb
shll
xor
xor
jecxz
push
lods
test
mov
repnz
dec
mov
scas
jecxz
push
rcll
out
xor
cltd
sbbl
in
mov
xchg
test
mov
xor
test
lea
je
mov
jo
add
cmpsl
mov
addl
sub
mov
cmp
iret
test
or
enter
imul
push
in
xor
adc
in
sti
dec
mov
sub
mov
int3
add
inc
xchg
cmpsl
jns
ds
hlt
stos
pop
jae
xlat
sbb
roll
iret
sbb
mov
xchg
rcll
jbe
cmpsb
mov
pop
test
mov
cltd
xlat
adc
jno
xorb
xor
ret
mov
js
dec
pop
mov
movsl
jp
lret
inc
adc
rorb
out
pop
sbb
sahf
movsb
sub
bswap
cltd
pop
pop
pop
add
pop
cmpl
mov
imul
inc
out
pop
in
call
bound
and
adc
add
lret
sub
int
aas
rcrl
and
sub
push
push
ror
and
adc
cltd
aas
xchg
add
stos
fcoms
stos
out
std
aad
in
inc
push
jl
add
int3
mov
das
push
mov
mov
push
fwait
jmp
mov
pop
imul
xchg
imul
mov
call
mov
cmp
jecxz
ds
test
cmc
and
fdivl
pop
inc
imul
movd
imul
shr
and
inc
cmp
test
in
dec
sbb
cmp
ja
fcomps
mov
xor
jns
and
mov
sub
xchg
and
data16
mov
dec
mov
cltd
sub
xor
dec
scas
xor
mov
call
mov
sub
loope
jbe
jmp
cmp
jp
cmpsl
movlps
addb
sbb
adc
imul
outsl
movsl
out
or
dec
call
push
loop
add
into
sub
rcrl
cmp
movsb
dec
pop
sarl
mov
cmpsb
fdivrs
addr16
xchg
and
mov
jnp
data16
jecxz
lds
xchg
movsb
jnp
and
in
sub
pop
xlat
fdivs
jnp
dec
or
and
pop
or
into
nop
sar
scas
lods
clc
sbb
mov
gs
addr16
and
lock
jmp
dec
mov
xchg
adc
scas
xor
cmp
sbb
movsb
jp
int
or
imul
inc
fs
test
adc
test
jle,pn
push
sub
out
pop
fsubs
inc
test
push
mov
mov
shlb
inc
xchg
bound
pop
mov
cmp
jne
add
shll
pushf
cmp
pop
sub
pop
mov
pop
js
dec
push
andb
push
mov
jecxz
lret
inc
adc
inc
loope
aad
pop
test
push
popf
out
movsl
jnp
xorl
data16
shll
inc
mov
out
mov
adc
inc
in
pop
sub
movsb
jge
xchg
or
mov
inc
xchg
pop
cmpl
xor
mov
pop
daa
fwait
lahf
add
fbstp
out
loop
push
xor
push
out
test
xchg
sbb
ljmp
jl
xchg
push
mov
andl
mov
sub
mov
out
shlb
jbe
mov
in
aas
mov
enter
and
bound
icebp
add
out
jg
adc
jno
into
cmp
fadds
jecxz
pop
mov
shl
fwait
ja
push
jecxz
fildll
fsubrl
cmp
or
stc
addb
outsl
les
cs
or
insl
jns
test
andl
jb
fmull
daa
xchg
push
push
addr16
or
test
pop
orb
mov
pop
shll
in
ds
xor
pop
cmp
out
scas
popf
mov
cmp
test
mov
inc
adcl
imull
insl
hlt
inc
pusha
icebp
mov
cmp
imul
rcrl
cld
leave
and
imul
jo
add
xor
rcrl
aaa
scas
dec
and
jge
xchg
aad
xchg
jae
jns
dec
add
jb
pop
push
push
xlat
mov
call
dec
xor
dec
loopne
leave
jbe
pop
pop
or
insb
jno
fwait
das
idiv
ljmp
hlt
mov
mov
stos
xchg
pop
ja
mov
lcall
sbb
xor
xchg
int3
jnp
push
pop
arpl
adc
and
mov
xor
jns
outsl
fsubrl
push
dec
push
fiadds
js
sbb
xchg
lcall
dec
orl
push
mov
add
cs
lcall
or
outsl
mov
pusha
fs
pop
imul
rcr
sbb
je
pop
adcl
or
and
and
xchg
pusha
dec
jb
and
mov
pop
outsl
out
mov
je
push
sub
les
xchg
inc
pop
fstl
out
sbb
add
insb
and
lcall
adc
outsl
cli
mov
adc
jp
jp
sub
xor
dec
push
adc
scas
lret
xlat
mov
clc
or
fstpt
movsl
in
fnstsw
pop
jns
dec
aam
mov
jne
bound
pop
lods
mov
lea
scas
push
pusha
mov
mov
data16
pop
dec
pop
add
loope
aas
mov
out
sbb
das
cmp
aam
mulps
fwait
or
sarb
mov
push
sbb
and
mov
adc
push
xor
add
or
xor
xor
fisubrl
add
xchg
adc
jb
jmp
jne
jno
xchg
mov
insb
sub
xchg
add
daa
filds
roll
sub
xor
leave
dec
push
int3
sub
or
mov
imul
xchg
cs
push
or
xlat
push
popa
jnp
lea
cmp
cmpsb
jge
ljmp
stos
mov
pop
add
stos
icebp
inc
cmpsb
int3
jecxz
loope
or
xchg
sbb
lods
xor
popf
fs
lret
movsl
add
and
pop
mov
mov
mov
mov
into
lods
add
xor
sbb
sar
sub
popf
and
jg
stos
cmc
xor
xchg
xchg
mov
loop
in
dec
dec
sbb
sub
test
mov
lds
pusha
pop
imul
xchg
movswl
popa
adcb
and
in
daa
loop
cltd
ficompl
xchg
cld
lret
test
pop
out
icebp
adc
enter
push
adc
test
adc
cmc
mov
and
rcl
jg
and
es
pop
adc
mov
push
pop
addb
in
adc
xchg
and
sub
xor
fdivl
mov
repnz
jae
andl
cmp
inc
clc
jmp
insl
jbe
xlat
adc
push
cld
inc
sbb
sub
test
lods
in
jp
jne
mov
movsl
es
jle
push
push
outsl
mov
pop
dec
ret
jg
pop
jne
dec
adc
and
and
int3
sub
std
mov
negl
lahf
ret
shr
mov
inc
or
push
rcrb
mov
push
mov
pop
push
popf
scas
mov
push
pop
add
inc
stos
movsb
clc
int3
jne
stos
sub
hlt
sti
mov
jl
insb
int3
xor
ds
in
mov
jecxz
aam
cmpsl
aam
push
pop
das
jnp
int
fs
pop
ret
jmp
jno
jnp
sbb
xchg
or
pop
mov
lock
scas
loopne
add
mov
xor
int3
fldt
shll
or
daa
mov
push
inc
cmp
inc
in
add
pop
cli
cs
cmpsb
daa
xor
pop
adc
daa
ja
add
clc
loope
adc
mov
call
sub
repnz
testl
adc
mov
push
fisubs
inc
sbb
xchg
dec
movsl
int3
jno
sbb
je
sub
fldl
mov
cmp
dec
mov
lea
in
shll
imul
lds
mov
mov
push
mov
mov
loop
hlt
push
sahf
mov
add
sti
cmp
jo
or
mov
and
mov
addr16
icebp
jl
cltd
pop
lock
mov
inc
sub
inc
push
mov
or
pop
cmpsb
in
dec
imul
sbb
cli
das
and
pushl
insl
mov
and
out
mov
push
cs
pop
dec
arpl
imul
call
lods
jg
cwtl
test
cmpsl
dec
dec
mov
daa
inc
shl
adc
stos
adc
cli
shrb
and
dec
dec
lahf
jp
stos
popf
adcb
ja
adc
dec
imul
or
jae
lret
inc
jmp
or
scas
sahf
jo
adc
jmp
xchg
mov
jae
or
lahf
or
push
leave
adc
faddl
xorb
lock
xor
pop
xor
fwait
outsb
call
xchg
movsl
mov
jle
jns
pop
sub
add
push
in
cmp
cltd
pusha
sub
ret
dec
in
imul
cmp
int3
cs
xchg
and
loopne
sub
inc
sub
cli
pushf
adc
fs
sub
notl
fbstp
orb
push
cmpsb
or
push
aaa
iret
xchg
jno
inc
xchg
xchg
or
xor
or
lds
push
dec
mov
adc
lret
dec
cmp
mov
jns
pop
dec
jne
call
cmpsb
iret
jp
dec
into
sbb
sbb
cmp
repz
push
xor
mov
mov
xchg
movsb
aam
aam
ja
lcall
rclb
dec
je
and
xchg
jmp
stos
nop
out
mov
ss
cmp
adc
add
or
repnz
xor
movsl
or
call
ret
sti
adc
pop
push
in
push
mov
test
or
ss
and
cltd
sub
rclb
imul
push
xchg
dec
mov
jb
popa
push
sub
xchg
fs
int3
mov
mov
push
mov
mov
scas
xchg
insb
xchg
in
enter
sbb
dec
sub
xchg
mov
and
fs
and
xor
inc
js
add
dec
popf
push
dec
cmp
hlt
cmc
js
mov
xor
ss
aas
or
call
addr16
stos
sbb
sbb
pop
imull
xchg
jno
inc
jbe
lcall
lret
mov
fldcw
xchg
psrad
pop
shrb
jno
or
jmp
mov
push
lahf
xor
xchg
fisubrs
xchg
mov
mov
dec
sbb
cltd
stos
dec
lock
leave
mov
jle
ja
dec
incb
push
lods
ljmp
fidivrs
inc
push
int3
pop
out
cmp
sti
mov
add
daa
pushf
lcall
and
add
inc
jecxz
pop
ficoms
sub
ds
dec
xor
mov
ret
mov
fildl
jne
gs
iret
pop
sbb
add
into
movsl
das
stos
mov
push
mov
cwtl
xor
dec
in
xchg
mov
mov
jne
jmp
or
sbb
cmpsb
rsm
mov
divl
imul
icebp
mov
cmp
sub
lea
sub
add
add
mov
test
mulps
int3
iret
lock
fsubrs
mov
xchg
orb
pusha
mov
out
add
adc
mov
bswap
ja
jno
push
fs
adc
scas
pop
int3
es
gs
shlb
dec
jg
hlt
mov
xlat
aam
pop
shlb
sub
mov
fldt
pop
mov
ss
jmp
mov
sub
pop
clc
mov
cmp
dec
xchg
mov
pop
sub
pop
lods
jnp
and
or
add
adc
insb
xchg
sahf
test
daa
xchg
in
adc
mov
aam
aad
or
out
mov
inc
adc
out
shll
jge
mov
mov
cmpsl
jne
inc
scas
jne
mov
shll
jns
popf
movsl
lods
push
xchg
cmp
xor
stos
push
adc
and
cltd
aad
ljmp
aam
xchg
lds
sbbl
pop
por
in
arpl
scas
inc
inc
xchg
mov
movsl
test
cltd
stc
das
mov
pop
push
in
imul
mov
test
or
cmc
lcall
lcall
enter
mov
stos
jnp
jbe
and
mov
adc
frstor
push
movsl
jb
mov
lret
rorl
test
inc
out
call
hlt
mov
xchg
dec
mov
mov
fiadds
sbb
inc
mov
push
mov
fst
adc
mov
cmp
push
pop
pop
rcrb
pop
and
lock
mov
in
insl
nop
fists
pop
and
cmp
xor
addb
adc
ss
xchg
lea
imul
pop
mov
sbb
cmp
mov
lds
insl
hlt
sbb
lods
mov
xchg
cltd
cwtl
push
adc
sbb
movsl
stc
jb
cmp
pop
enter
out
cltd
and
or
pop
sbb
aaa
insb
push
or
lret
movsl
sti
shl
into
aas
dec
jno
adc
imul
pop
push
mov
std
or
and
mov
out
rorb
fstps
aaa
mov
pop
int3
jle
inc
fimuls
mov
push
xor
test
jg
dec
fistl
lods
fs
fwait
loope
stc
sbb
mov
cltd
mov
lcall
and
mov
mov
lahf
inc
xor
or
arpl
xor
sub
jle
xor
cs
push
sub
sbb
sbb
call
add
cmpb
cmp
sbb
xchg
xor
test
push
cmp
mov
xor
inc
and
repz
dec
fdivs
in
inc
sub
pushf
inc
and
pop
jae
pop
pop
pop
pop
adc
mov
push
inc
sbb
inc
dec
aam
imul
fidivrs
mov
add
cmp
das
les
out
cmp
out
pop
testb
jo
xchg
mov
or
cs
jecxz
popf
pop
nop
and
test
daa
xchg
push
add
rcrb
add
sarb
fisubrs
test
and
outsb
aam
mov
xchg
sub
jne
push
adc
cmp
cltd
inc
and
or
jecxz
inc
in
daa
ja
adc
xor
adc
lcall
xchg
add
insl
inc
sahf
cltd
mov
sbb
adc
pop
stos
mov
jg
lahf
aam
or
xor
fidivl
jbe
loope
loopne
sbb
ds
imul
call
call
mov
jg
push
stos
fcoms
xchg
scas
jmp
mov
jmp
ds
movsb
sbb
ljmp
mov
imul
data16
jmp
aad
cmp
int3
inc
cmpsb
jmp
pop
push
lahf
pop
push
inc
xor
push
push
dec
mov
inc
int3
jnp
adc
callw
ja
sti
add
inc
mov
into
lods
mov
cmpsl
shlb
mov
daa
in
push
push
call
jnp
lcall
cmp
add
lret
nop
inc
out
stc
sub
inc
push
pop
movsl
pop
popf
push
mov
add
lahf
jecxz
in
pushl
pop
inc
jmp
leave
sbb
jo
test
xlat
pop
push
jp
stos
movsl
sub
rorb
cmp
fdivs
ficoms
mov
cwtl
scas
cmpl
loop
xchg
int
dec
sub
lahf
cmp
daa
adc
insl
out
or
fs
cs
cwtl
push
dec
sbb
mov
cmpsl
mov
repnz
pushf
mov
inc
jbe
add
in
rcrl
xchg
iret
mov
push
cmc
pop
loopne
push
shll
popf
cs
fwait
repz
or
adc
push
fwait
xor
cld
xor
mov
inc
inc
imul
xchg
pop
loopne
jb
xchg
lret
push
xchg
outsl
sti
cmpl
xor
jle
pusha
inc
dec
push
pop
fwait
aas
push
out
xchg
mov
ss
xor
mov
cld
dec
in
add
into
jo
xlat
pop
push
sub
mov
mov
inc
test
in
ret
inc
rcrl
ds
rcrb
dec
xor
jnp
rcrl
scas
add
shlb
sbb
cs
insb
int
adc
aaa
out
pop
ret
outsl
push
mov
enter
and
xchg
comiss
and
fbstp
cmc
cmpsl
in
adc
mov
adc
out
movsl
cmp
loop
arpl
outsl
and
mov
inc
xor
lock
xor
rcrb
mov
inc
ja
dec
stos
fnstcw
push
and
sub
pop
sti
popf
lcall
psubusw
jge
push
adc
pop
mov
pop
mulb
fs
xor
mov
adc
arpl
scas
and
xchg
fisubs
jg
inc
pop
notl
jbe
dec
pop
mov
push
stos
and
pop
popf
sub
jl
aaa
adc
sub
ror
decb
std
and
mov
addr16
sub
pop
into
dec
ss
adc
insl
lret
outsl
flds
dec
or
arpl
xor
lret
mov
or
push
mov
idiv
cmp
and
xor
add
push
cmp
add
or
pop
ja
in
iret
es
pusha
inc
pop
cmp
rcrl
dec
jnp
xor
es
pushf
mov
jecxz
lret
pop
cmp
inc
movsb
pop
jo
mov
add
push
ret
shrb
loop
bound
mov
xlat
lods
mov
fildl
mov
fcmovnu
add
cmp
add
repz
aam
jg
mov
adc
repnz
push
sub
cmc
fistpl
icebp
and
or
call
arpl
inc
into
loope
in
stc
nop
inc
in
js
push
jnp
out
imul
cmp
pusha
lret
adc
lea
popl
sbb
fmul
jno
es
pop
outsl
sbb
adc
test
lahf
push
mov
and
and
push
in
xchg
push
add
pop
mov
mov
or
dec
stos
push
pop
dec
aad
mov
mov
inc
mov
mov
sub
jle
add
in
bound
rcll
aad
ret
mov
test
addl
and
push
push
sbb
imul
and
cmp
in
adc
or
loopne
orl
loope
add
mov
pop
pop
loopne
jae
fdivrp
popf
leave
lret
jp
mov
push
jb
xchg
outsl
fists
sbb
and
stos
rcll
mov
outsl
add
repz
flds
dec
lret
add
incb
adc
movsl
dec
push
sub
pushf
jp
dec
and
stos
insb
imul
iret
mov
mov
dec
mov
push
inc
or
enter
jle
sub
mov
mov
je
add
xor
xchg
shrl
fwait
jno
jo
cld
xor
scas
aam
adc
xchg
sbb
xor
test
jno
inc
syscall
rcll
ljmp
fisttpl
and
in
mov
xchg
repnz
jl
cmp
lods
sub
lret
mov
lods
popf
lods
xchg
in
movsl
cwtl
lea
arpl
mov
mov
and
sbb
aaa
out
test
mov
pop
xchg
movsb
mov
movsl
mov
push
hlt
std
fstps
dec
lcall
pop
push
mov
push
fcoms
mov
and
jge
lea
lret
in
push
stos
addr16
push
inc
scas
pop
mov
mov
arpl
jns
fldenv
mov
out
psadbw
lret
cmp
adc
orl
test
lds
push
push
fstpt
or
pop
xor
ds
icebp
inc
adc
adcb
cmpl
test
lds
xchg
pushf
shll
adc
inc
std
ja
add
dec
lds
fstps
sub
add
xor
mov
mov
adc
mov
stos
cli
push
pop
cmc
sub
ja
sbb
leave
stos
push
jg
stos
mov
pop
insl
dec
imull
adc
push
sbb
cmp
scas
inc
sahf
and
das
mov
dec
add
repnz
mov
xchg
xchg
test
pop
testb
cmc
hlt
aad
dec
push
add
aam
adc
das
loopne
adc
out
jbe
pop
pop
call
inc
jmp
pop
push
fcomp
cmp
sbb
pop
sub
pop
and
mov
cmp
mov
fnsave
jo
jb
pop
cmp
sahf
sbb
out
inc
jns
lcall
and
dec
adc
or
jnp
push
sbb
mov
gs
jecxz
push
jne
pop
sti
lahf
add
aam
dec
xlat
mov
adc
sub
shll
sti
add
fists
fs
ds
dec
xchg
pop
imul
out
fistl
call
les
adc
sub
push
xor
ror
lret
jge
fwait
xchg
mov
mov
pop
js
fstpl
jge
push
ret
out
pop
mov
or
filds
push
in
les
lret
sub
add
or
jecxz
add
fisubrs
or
in
inc
mov
iret
xor
fs
mov
sbb
add
xor
or
inc
push
xor
dec
mov
adc
test
cmpsb
and
push
and
lcall
pop
xor
iret
pop
mov
xchg
in
mov
outsb
arpl
sub
fistpll
cmp
iret
test
cld
cmp
jnp
xchg
bound
mov
inc
rcr
out
mov
mov
mov
xchg
adc
cld
jmp
or
mov
sti
jle
lods
jo
fidivl
sub
mov
or
scas
push
imul
cmpb
aam
and
inc
add
push
fmuls
xchg
jl
int
adc
inc
fdivrl
ror
aas
sub
pop
sbb
icebp
pop
adc
xor
ret
ss
int
in
push
sbb
sbb
repz
rcr
cmp
jmp
ret
pop
fsubs
popa
xchg
or
adcl
or
jmp
sub
jae
and
sahf
push
insb
adc
stos
stc
mov
repz
inc
roll
repz
or
pushf
xor
rcll
enter
push
pop
imul
dec
pop
popa
or
push
iret
arpl
xor
mov
arpl
test
sgdtl
sbb
inc
cmc
out
loope
lret
lret
push
jne
fists
mov
dec
in
fcoml
stos
and
xor
sub
add
lock
pop
cmp
lcall
iret
lea
int3
inc
jg
inc
lret
scas
fstpt
push
pop
ss
add
sbbb
pusha
inc
xchg
add
icebp
mov
mov
adc
andl
mov
jae
or
popl
icebp
inc
idivb
insb
out
push
mov
pop
sbb
cmp
and
lods
and
sbb
mov
ret
push
mov
sti
dec
fsubrs
cmpsl
push
bound
mov
in
inc
adc
inc
aaa
fwait
out
push
test
inc
shll
icebp
addr16
dec
mov
or
movb
icebp
xlat
inc
nop
ja
cltd
lods
cmpsb
das
in
dec
out
rcll
mov
hlt
loopne
rcrb
into
ljmp
xchg
fimuls
adc
fcoms
mov
fisttpll
mov
fimuls
inc
and
arpl
cmp
mov
xor
mov
test
js
cmpsb
pop
cmpsl
push
mov
adc
out
decl
mov
xor
out
xchg
js
sbb
jns
xor
add
nop
dec
inc
pop
sbb
cmpsb
add
rolb
lret
sahf
aaa
lret
pop
or
in
sti
xchg
xchg
sbbl
mov
sti
or
mov
test
pop
xlat
pop
jmp
leave
jno
in
dec
aam
push
sbb
or
add
or
and
xor
xor
fwait
sbb
arpl
popa
nop
ficoms
xchg
jo
or
mov
mov
mov
sub
ret
mov
imull
in
les
xor
sub
sub
jge
xor
jg
pop
push
pop
lds
sub
fucomp
push
fisttpll
cwtl
dec
sti
test
ds
clc
insb
out
jle
pop
push
xor
push
cmp
fcmovne
jb
int
outsb
jne
sbb
scas
cmp
sti
clc
push
pop
loopne
jmp
mov
sti
clc
rclb
gs
push
das
insb
and
xchg
xchg
add
jb
stos
add
shl
mov
or
adcb
into
cmc
repz
test
jmpw
fwait
movl
lret
sbb
sub
cmp
push
inc
les
rol
push
xchg
or
fidivrs
aaa
inc
in
xor
pop
add
lods
push
cmc
xchg
cltd
clc
sub
add
xor
jne
std
clc
or
inc
fdivs
int3
jp
sub
xor
adc
stos
jle,pn
mov
out
dec
jbe
xor
pcmpeqw
pop
sbb
dec
mov
or
lods
aaa
dec
mov
lret
sub
cmp
jbe
je
push
imul
pop
repnz
or
sub
or
rorl
and
shrb
daa
cmp
aad
cmp
lock
mov
outsb
xor
sbb
cmc
mov
arpl
loop
mov
and
in
mov
xor
das
aam
sub
adc
adc
imul
or
jno
fiadds
addl
out
out
aad
mov
movsl
cmc
push
xchg
cmpsb
incb
adc
sub
fidivl
fsts
xchg
dec
and
dec
filds
jbe
dec
aaa
jmp
out
je
in
push
test
xor
lea
or
out
mov
sahf
les
cmpsb
ja
jb
into
jo
inc
mov
jae
fdivr
dec
cmp
outsl
insb
mov
dec
movsb
aad
xchg
loopne
lock
loop
cmp
aaa
and
subb
addr16
scas
push
lock
push
js
pop
int3
xchg
mov
adc
pop
sbb
adc
ds
sbb
dec
dec
bound
sti
loope
shlb
inc
xchg
pop
cmp
dec
cmp
in
clc
jge
jbe
mov
mov
xor
pop
add
icebp
ror
outsl
cmp
xchg
mov
adc
pop
fsubl
mov
out
aam
out
push
add
mov
cmp
jb
push
push
jge
push
cmpsl
pop
pop
inc
or
adc
mov
push
cwtl
sbb
add
mov
pop
arpl
push
push
dec
or
jp
int
icebp
jae
jp
and
repz
dec
mov
cltd
or
inc
stos
cmp
dec
in
lods
jp
and
cld
dec
orb
sbbl
cmc
test
mov
jmp
ret
pop
ljmp
adc
add
push
xor
mov
lds
in
push
stc
jb
lret
jae
mov
popa
or
inc
lock
or
mov
mov
sub
gs
cmpsb
cwtl
jo
repnz
test
mov
les
test
pushf
in
xor
bound
stc
ljmp
push
jb
sub
fstpt
add
sub
lcall
jo
hlt
inc
jae
lea
sbb
mov
in
loop
push
jbe
pop
sub
roll
mov
dec
cmpsl
mov
cltd
mov
or
cmpsb
cmc
std
shrb
and
add
lcall
mov
sbbb
pop
push
jle
out
outsb
aas
jno
cltd
inc
pop
inc
push
arpl
out
jge
in
sbb
fwait
lahf
ror
gs
push
lahf
pushf
push
inc
jo
xchg
fsubl
call
and
or
mov
and
dec
sahf
ss
in
mov
aam
addr16
pop
mov
cmp
sbb
pop
jnp
jge
adc
std
dec
js
lcall
outsl
add
mov
lods
in
and
stos
popa
repnz
or
jo
shl
add
repz
or
cmp
call
xchg
push
push
xor
inc
lahf
push
test
and
inc
xchg
and
jmp
icebp
out
mov
std
mov
imul
xchg
out
pop
add
das
add
loop
xor
mov
or
jmp
or
mov
sub
popa
nop
jle
das
add
mov
xchg
and
cltd
shrl
sbb
xchg
mov
sub
adc
mov
inc
ss
cmp
clc
test
mov
xchg
movsb
test
imull
mov
iret
faddl
add
out
rcrb
cmp
lahf
inc
fs
jbe
mov
inc
mov
movsl
xchg
mov
add
pop
call
mov
flds
jg
in
cmp
negl
rcrb
adc
sub
lea
loopne
fnstsw
fistpl
fs
in
cli
and
xor
mov
mov
enter
daa
jbe
mov
cwtl
gs
xor
lea
dec
lock
push
mov
inc
xchg
sub
mov
aam
cmp
xchg
or
in
rorb
test
xchg
mov
inc
inc
addb
fcomps
in
mov
outsl
inc
lods
pop
lods
push
add
dec
popa
inc
xor
stos
dec
jecxz
out
movsl
pop
and
xchg
sbb
aas
inc
mov
dec
push
push
cwtl
cli
inc
fldcw
insb
mov
pop
xchg
lea
push
out
mov
mov
jmp
dec
or
and
xlat
dec
out
mov
cwtl
dec
push
sbb
jnp
fcoml
cmp
xlat
xchg
pusha
or
pop
adcl
lea
les
jl
in
jmp
xor
add
daa
ret
adc
mov
xchg
mov
push
xchg
stc
sbb
iret
cmp
out
shll
dec
ret
sub
jb
pop
push
fmul
jp
pop
pop
in
dec
push
es
out
inc
pop
fidivrs
push
jno
dec
ret
and
mov
add
push
cmp
add
mov
in
fcomps
loope
lret
mov
repnz
jnp
lea
rep
jecxz
pop
mov
jg
cmp
insb
test
inc
cli
roll
xchg
adc
pop
and
sbb
ljmp
jne
mov
outsl
push
js
mov
add
xchg
add
or
ret
in
popf
movsl
mov
popa
stos
pop
jl
sbb
jb
lds
sub
cld
inc
mov
popf
cld
and
jecxz
xchg
mulb
testb
cmp
sbbb
fdivs
jae
push
jmp
iret
xchg
jle
lds
popf
movsl
xlat
mov
mov
cmpsb
inc
add
or
sbb
sbb
pop
jge
popf
inc
dec
stc
hlt
cmpsl
scas
jmp
scas
mov
faddp
adc
mov
js
mov
jp
lock
add
int
sub
add
lret
xor
inc
push
sub
pop
cmp
push
xchg
sarb
test
andb
mov
ljmp
jns
lods
push
lret
push
push
addr16
stos
mov
dec
daa
cltd
dec
ret
mov
jge
sub
push
cmp
sub
hlt
loope
in
imul
jmp
insb
out
add
ror
test
addl
push
cwtl
cmp
out
out
out
shlb
cmp
fimuls
jmp
shll
sub
xchg
pop
cmc
xchg
lods
mov
xor
ja
xchg
add
js
cmpsb
popa
dec
call
jle
lods
jge
lret
aam
cmp
loope
push
xchg
mov
cmp
out
inc
xlat
or
shll
xchg
into
push
and
and
sub
out
in
mov
js
out
int3
jmp
mov
inc
movsb
loope
push
cmp
imul
mov
fcoml
cmp
sbb
fldenv
cmp
nop
lock
nop
lea
aaa
sub
aad
ss
out
insl
test
gs
in
cs
pop
mov
mov
ret
push
test
pushl
jns
idiv
and
leave
addb
push
adc
push
imul
mov
dec
add
dec
out
out
push
adc
push
fsubrp
jnp
ja
xchg
pop
icebp
xorl
push
xchg
mov
leave
xchg
icebp
loop
sbb
inc
addr16
pop
enter
in
aaa
mov
loope
sbb
nop
iret
jnp
xor
outsb
and
dec
pop
shrl
lods
sub
mov
out
mov
push
sbb
orl
les
adc
mov
sub
ror
mov
or
and
pop
orb
fldt
loopne
addr16
je
imul
push
mov
out
iret
inc
cmpsb
adc
dec
mov
outsb
or
adc
in
in
lods
repz
mov
inc
addr16
adc
cmpl
dec
or
lds
xchg
jns
ret
dec
add
mov
cmp
hlt
lcall
sarb
adc
or
clc
in
popf
pop
add
add
pop
popa
cmp
jns
insb
out
and
sub
mov
or
lds
dec
xor
mov
dec
jno
loop
jb
jle
sub
mov
or
int
adc
outsb
mov
popf
lcall
aad
inc
jno
je
fucomi
in
inc
stos
das
mov
les
push
test
movsl
mov
add
jle
jne
cmpsl
icebp
jp
cmc
and
pop
lock
xchg
mov
stos
bound
and
gs
bound
inc
inc
testb
sub
iret
mov
sbb
or
std
pusha
int
pop
unpcklps
hlt
sub
mov
xor
cmp
pop
adc
loope
enter
fdivrp
mov
jo
lret
je
xor
cmp
test
loopne
loopne
xchg
subb
adc
dec
loope
add
sbb
les
xchg
addb
sub
sub
mov
jno
dec
sub
add
jg
sbb
fs
add
jb
es
pop
subb
mov
and
push
cmpsl
fdivrl
pusha
cmpb
add
in
popa
aam
push
test
mov
mov
inc
sti
pop
std
stc
fnstsw
sub
addr16
movsb
pop
insb
pop
pop
testb
jb
adc
pop
adc
pop
mov
mov
cmpsl
add
lret
or
push
aaa
cwtl
getsec
testb
inc
push
xlat
mov
mov
dec
cs
cs
add
push
sahf
cli
inc
leave
jne
hlt
add
and
and
pop
ret
cmp
mov
iret
adc
and
icebp
dec
or
jns
out
ss
xchg
aas
pop
stos
aad
cltd
rcl
mov
int3
negl
lods
ss
lret
dec
xacquire
jne
adc
adc
jb
pop
mov
lahf
lret
loop
fisttpl
stc
inc
mov
sub
ja
fwait
rclb
notl
sub
pusha
dec
lahf
mov
pop
sbb
mov
cmpsb
sbb
dec
lock
notl
insb
jbe
dec
xor
mov
insb
adc
jne
pop
movsl
push
mov
push
scas
stc
jae
frstor
push
aaa
ss
and
pop
dec
lods
mov
sub
int3
nop
js
lret
out
fistl
ret
sbb
int
decb
jae
push
xchg
or
subl
nop
jbe
cmp
aaa
sahf
clc
pop
aad
cli
pop
cmp
jecxz
jle
pop
mov
fsubl
jge
sbb
loopne
adcb
or
and
movsb
stc
int3
inc
mov
mov
add
sbb
out
and
outsl
lea
leave
imul
push
adc
xchg
in
data16
jmp
push
add
out
mov
call
and
and
push
push
xlat
add
cmp
cmpsb
xor
adc
push
push
inc
push
out
sbb
mov
sbb
divb
push
rcr
imul
int
dec
push
insl
sub
dec
gs
xor
dec
call
xchg
lods
and
scas
jmp
mov
pop
sahf
ljmp
inc
and
push
enter
adc
vpmuludq
loopne
icebp
xchg
int3
ret
sbb
jl
stos
adc
out
dec
xchg
jg
add
sbb
pop
sbb
mov
pop
mov
shl
pop
fidivs
pop
movsb
xchg
fiaddl
or
arpl
insb
bswap
adc
pop
cmc
adc
gs
idivb
insb
jne
and
cmp
das
push
fwait
xchg
cmp
loop
fs
insb
je
cli
dec
fstp
movsb
jecxz
fwait
dec
imul
mov
scas
cld
jo
std
data16
push
mov
pop
cmp
mov
das
jo
xchg
inc
sbb
js
and
addr16
test
jp
add
xlat
pop
pop
jle
pop
push
jno
daa
fldt
push
push
inc
iret
mov
in
aas
adc
mov
mov
inc
ret
mov
daa
shlb
xchg
mov
sbb
shrb
pop
outsl
sarb
push
jmp
out
shrb
mov
loope
jne
jae
fmul
sub
insl
mov
ja
push
cld
pop
sbb
popf
movsl
into
call
rcr
sbb
into
or
or
push
das
or
loopw
in
sub
inc
in
or
mov
push
xchg
and
pop
orl
cwtl
in
sbb
shll
fsts
js
mov
sub
adc
arpl
xor
pop
pop
push
lret
repnz
mov
cmp
add
cmp
movsb
push
push
and
dec
arpl
iret
pusha
push
xchg
clc
lods
fiaddl
or
push
dec
imul
into
loope
dec
xchg
loope
sbb
sar
mov
add
into
pusha
test
push
lret
cli
jl
inc
in
adc
pop
or
push
jg
xlat
lret
cli
xchg
ljmp
fiadds
fsubp
adc
inc
std
add
bnd
mov
xlat
push
stc
xchg
dec
adc
adc
popa
pop
pop
mov
xor
push
and
loope
lret
sbb
sti
pop
loop
mov
lcall
insb
adc
outsb
mov
and
lahf
push
mov
add
arpl
and
or
jne
xor
test
mov
lret
cmp
sarl
fwait
and
xchg
and
enter
scas
push
fmuls
xchg
in
and
xchg
leave
add
sahf
and
lea
insl
inc
jno
fs
sbbl
dec
jmp
addr16
push
mov
pop
repz
call
les
mov
iret
mov
cwtl
mov
repz
in
lret
push
lret
mov
aam
push
repnz
ljmp
lods
push
sbb
test
ret
dec
xchg
mov
jnp
dec
sbbb
pusha
pusha
sub
aas
mov
sub
sbb
fmul
jmp
movsl
add
scas
stc
repz
xor
ret
movsl
add
repz
pushf
test
inc
cmp
sbb
adc
and
inc
pop
sbb
lock
loopne
movsl
stos
mov
push
imulb
icebp
push
mov
leave
fstl
inc
adc
icebp
scas
outsb
scas
cltd
daa
sub
xchg
je
adc
jb
xchg
lahf
mov
call
sbb
addb
pop
or
int
je
mul
dec
mov
adcl
out
dec
push
popa
sub
xchg
test
ja
add
ret
xchg
xor
popl
adc
popf
pushf
in
leave
fdivrl
jns
inc
adc
lds
in
push
lahf
mov
and
push
or
lcall
and
jmp
ffreep
inc
fs
imul
push
loop
jo
pop
inc
push
shlb
xchg
loopne
pop
push
push
dec
test
push
shll
lret
xchg
mov
lods
and
aad
shll
jae
inc
psraw
adc
lret
aas
daa
test
flds
adc
mov
pop
or
mov
push
out
jo
loopne
xchg
in
int3
lods
mov
adc
push
inc
shlb
insb
fwait
in
add
mov
mov
pop
outsl
loope
sbb
sub
cmpsb
and
push
gs
cwtl
inc
xchg
fidivrl
sbb
push
shll
sbb
test
fimull
inc
je
mov
fwait
pop
mov
cmp
ret
jle,pn
jns
out
pop
dec
aaa
mov
test
or
lret
sar
xor
aas
push
loopne
xlat
js
fcoml
push
aaa
add
add
inc
popf
test
xchg
mov
jmp
fwait
push
or
mov
cmp
push
dec
jne
fists
arpl
call
das
mov
mov
roll
add
sub
lock
xor
loopne
arpl
xor
repnz
pop
sbb
test
les
cmp
xchg
add
push
subb
xchg
es
js
sub
aad
push
pop
mov
mov
ret
xchg
aam
adcl
adc
push
cmc
shrl
jne
dec
cmp
enter
adc
gs
xchg
iret
mov
test
or
cmp
mov
fs
es
mov
xorb
clc
shrl
cmp
cmp
sub
inc
and
xchg
jb
addr16
out
xor
jle
pop
aam
xor
pop
shlb
lret
adc
call
js
pop
mov
scas
push
int
das
xor
dec
add
stos
test
insb
dec
out
mov
or
mov
mov
push
sub
shlb
cmpsb
sarl
push
or
xor
jmp
pop
sbb
xchg
push
push
mov
xchg
sub
test
cmp
scas
addr16
mov
test
fisubrl
iret
ficoml
iret
adc
cmp
push
xor
imul
cmpsl
lods
xchg
aaa
xchg
or
mov
in
cmp
xor
mov
pop
cltd
cmpsl
icebp
ja
mov
xor
scas
mov
pop
push
loope
mov
scas
mov
addb
lods
call
adcb
bound
fbstp
add
leave
mov
out
jbe
or
sub
je
in
test
mov
sub
pop
sbb
rcrb
shl
pop
addr16
dec
icebp
enter
in
inc
sbb
cmp
sub
out
fwait
popf
je
mov
lret
cld
loope
cwtl
jg
aaa
cs
out
ja
push
pop
adc
into
push
cld
pop
add
jo
add
fidivs
xchg
mov
cmpsb
fadds
add
sub
cmc
push
lea
dec
inc
xchg
gs
push
data16
jns
lahf
mov
inc
adc
adc
xor
sti
ss
rcrb
cli
loope
pop
shl
lahf
hlt
loop
js
lods
sarl
shrb
and
out
ljmp
in
or
xchg
cmp
pop
sub
push
popa
sub
nop
cmpsb
lcallw
inc
cmp
adcb
jmp
xchg
lods
insl
pop
js
int3
icebp
jg
push
sbb
push
adc
scas
xor
test
jno
data16
lock
pop
cld
dec
xor
ret
faddp
out
mov
dec
jge
loopne
push
int3
pop
and
cmp
popf
adc
fcmovnu
cwtl
mov
xchg
sub
std
mov
or
inc
test
rolb
sbb
mov
and
push
sbb
test
or
stos
and
dec
mov
icebp
cli
sbb
bound
dec
mov
cmpsb
cmp
jmp
dec
xchg
cs
rcrl
sub
add
fmull
mov
dec
sar
jge
jo
add
mov
inc
ficoms
repnz
in
in
xchg
in
sti
call
shlb
or
and
mov
scas
and
fstpl
sbb
faddl
adc
sahf
idiv
mov
stos
pop
sub
jb
int3
dec
sbb
imul
repnz
and
jno
pop
xchg
mov
adc
xchg
jnp
negb
sbb
cmp
subb
mov
inc
sbb
movsb
cmp
xor
mov
cmp
sub
scas
dec
in
add
movl
mov
mov
pushl
shll
push
lods
mov
ja
and
js
subl
iret
test
mov
mov
dec
mov
jmp
ljmp
pmuludq
iret
es
or
shlb
pusha
test
pushf
movsl
mov
jge
nop
mov
sbb
jg
xchg
negl
out
xor
push
mov
jecxz
lahf
sbb
cmp
dec
stc
loope
dec
jb
lcall
das
js
add
mov
sarl
xchg
dec
nop
lods
dec
dec
repnz
pusha
mov
add
pusha
dec
sti
fisubs
jl
out
cmp
sub
jnp
push
mov
mov
popa
add
sbb
pop
sub
jecxz
and
sub
push
popf
mov
shlb
add
mov
mov
sbb
out
and
test
cmp
fldt
push
cli
push
mov
stos
mov
subb
in
jle
jge
mov
scas
iret
xor
jge
sahf
addr16
ss
das
push
mov
cmpsl
push
jl
or
test
roll
int3
pop
dec
inc
add
mov
xchg
mov
mov
ljmp
pop
push
mov
adc
loop
fisubl
mov
dec
aad
test
stos
comiss
mov
mov
imul
loopne
pop
adc
sti
or
nop
lds
out
dec
adc
mov
stos
fimuls
jne
repz
loop
rcrl
inc
stos
xchg
sti
xchg
fbstp
ds
sub
dec
fs
cmpsl
ficomps
daa
lahf
pop
movsl
stos
shll
dec
sub
xor
dec
repz
mov
mov
int
xor
jmp
fcoml
daa
in
push
mov
repnz
push
je
lods
add
loope
out
mov
popf
mov
clc
jo
and
xor
dec
jge
push
cmpsb
add
push
fisttps
mov
rcl
dec
cltd
mov
test
sub
std
or
loop
inc
mov
ret
xor
fistpl
xor
ret
jb
test
out
fistps
xchg
ss
or
in
and
and
pop
inc
mov
cmp
dec
sbb
xor
icebp
and
inc
pop
cmp
add
sub
add
cltd
out
popa
mov
sub
ret
lods
loopne
pop
push
outsl
test
and
pop
cmpsb
mov
repnz
mov
and
pop
test
in
add
cmp
pusha
repnz
push
int3
push
pusha
jle
call
sbb
mov
add
mov
push
ljmp
mov
ja
xchg
adc
test
clc
jmp
adc
adc
insl
ret
ss
cmpsb
mov
test
sub
bound
jp
sti
or
dec
mov
pop
and
sbb
mov
add
sbb
jne
or
mov
cli
pop
jecxz
and
dec
cmp
push
xor
aas
int3
je
nop
mov
out
decl
arpl
test
dec
lea
mov
and
pop
fstpl
mov
adcl
stos
adc
es
jno
mov
jo
dec
lcall
add
outsb
sub
inc
xor
scas
adc
or
dec
adc
int3
push
xor
cmp
adc
and
xor
push
cmp
nop
rorb
in
sbb
sub
xor
aad
mov
imul
push
stc
sarb
sub
scas
cwtl
push
rcrb
flds
icebp
popa
movl
inc
fwait
mov
test
idivb
adc
dec
lock
lods
repz
pop
xchg
add
pop
cmpsb
pop
jecxz
rcrl
jae
mov
push
and
pop
adc
in
scas
or
mov
mov
in
lock
and
add
cmp
jecxz
xchg
and
lds
dec
scas
adc
xchg
aaa
xchg
popa
adc
xor
inc
mov
scas
mov
jge
sub
fstpl
scas
mov
loopne
shlb
mov
mov
mov
jp
mov
cmpsb
xchg
pop
clc
push
mov
repz
sub
ja
pop
jle
jle
pop
ja
jno
sti
aaa
das
or
inc
xor
cmpsl
rcl
sub
jo
movsl
sub
and
cmpsl
out
sti
rolb
inc
sbbb
leave
sub
bound
seto
lcall
push
cmp
cmc
imul
lcall
pop
cmovno
sub
adc
add
inc
pop
push
mov
xchg
mov
mov
addr16
imull
fnstenv
aas
icebp
xchg
iret
sub
inc
int
ljmp
xor
iret
fwait
int
mov
out
xchg
cli
into
clc
test
and
mov
mov
out
push
sbb
and
jns
pop
jbe
pop
lret
sbb
dec
mov
shrl
test
xchg
loopne
data16
popf
jae
clc
shrb
mov
pop
push
adc
cmpsl
push
rorb
jge
js
es
lahf
popa
nop
or
xchg
add
push
push
mov
or
adc
test
and
add
ljmp
mov
add
sub
lds
movl
ljmp
imul
shl
add
mov
dec
inc
stc
sahf
jb
iret
lds
sub
aaa
inc
or
add
pop
sbb
inc
jno
xor
stos
je
add
cs
cmp
int3
pop
adc
cmpb
repnz
icebp
cmpsb
in
xor
and
push
dec
and
add
jns
or
test
repz
scas
sub
mov
shlb
out
cmp
repnz
enter
sbb
cwtl
jno
push
repnz
pop
enter
lods
push
jne
or
inc
dec
jnp
cld
push
stc
clc
stos
in
mov
dec
sub
cld
fimull
icebp
cmpsb
dec
stos
dec
ret
addr16
and
xlat
loop
mov
pavgw
ret
sbb
dec
adc
ret
pop
pop
jl
das
imul
or
iret
iret
inc
scas
add
jecxz
in
scas
fldcw
aad
inc
movsl
mov
mov
push
and
inc
ss
out
in
loop
fisttpl
xchg
outsb
sbb
add
xchg
pop
lret
js
add
mov
scas
faddp
add
push
call
aad
mov
movsl
test
jge
dec
pop
jo
clc
cwtl
bndldx
lret
adc
data16
push
jae
mov
arpl
dec
cltd
or
test
dec
jo
xchg
pushf
sti
xor
les
lock
xchg
outsb
scas
inc
lahf
imul
dec
cld
enter
mov
add
leave
jnp
inc
daa
mov
in
fsts
pop
sub
stos
push
sbb
inc
jp
xorb
and
xor
icebp
out
shll
mov
jecxz,pt
xchg
scas
xor
pop
fdiv
jle
cs
adc
daa
xor
xor
mov
sbb
inc
jo
loopne
and
call
push
arpl
les
dec
fs
mov
mov
push
push
lods
imul
sbb
in
movsl
sub
push
mov
movsl
cmp
ffreep
pop
call
rcll
shrl
mov
ja
mov
fs
out
sahf
add
mov
jmp
lock
popa
mov
jae
enter
js
stc
fadd
orb
mov
pop
dec
out
in
mov
fwait
pop
sbb
scas
and
pushl
movsb
clc
xor
or
and
lods
adc
cli
fidivrs
stos
push
dec
les
lods
push
push
hlt
rorl
lahf
add
inc
fsubrl
cwtl
adc
test
movsl
les
jge
pop
fstpt
lods
jae
cmpsb
xor
cmp
and
lahf
jge
fists
lahf
push
ds
leave
mov
and
mov
movsl
test
lret
cmc
sbb
mov
in
pop
sub
mov
aaa
sub
fdivrl
dec
push
push
addr16
repz
rorl
addr16
fbstp
addr16
rorb
out
das
out
mov
add
sbb
fdivr
mov
adc
bndstx
fs
setl
pop
or
enter
into
hlt
je
lret
nop
jecxz
je
cmpsl
lods
xlat
push
aaa
jns
out
cmpsb
and
test
push
xchg
dec
into
daa
into
loope
cli
jecxz
fdivrs
pop
cmp
cmp
push
adc
mov
popa
sbb
cld
adc
inc
loop
mov
xchg
sub
arpl
sbb
sub
cmp
aaa
idivl
das
mov
pushf
ss
cmpsb
add
jne
sbb
fucompp
fwait
movsb
dec
leave
aas
int
cli
flds
fwait
callw
test
int
sub
lea
cmpsb
pop
mov
js
pop
cmp
add
xchg
dec
scas
in
sub
adc
dec
mov
lods
dec
jb
sbb
std
mov
roll
lock
sbb
mov
add
movsl
or
fs
mov
je
sbb
jnp
pop
test
subb
mov
add
pop
jmp
dec
mov
mov
xlat
js
neg
dec
nop
cltd
fdivp
mov
scas
fstpl
scas
leave
lock
dec
mov
test
add
push
or
into
out
test
xor
add
xor
lret
imul
popa
loope
push
dec
sbb
sti
popa
push
inc
lret
pop
cmpsb
add
pop
sub
cmp
or
push
sbb
mov
and
loop
int3
dec
sub
pushf
lret
int3
fsubl
stos
mov
or
adc
mov
or
cmp
sub
push
pop
sbb
jno
lret
mov
push
mov
rcrb
and
xchg
sarb
loopne
add
js
adc
push
fdivrs
int3
aad
mov
adc
sbb
xor
sub
jne
jne
dec
out
out
xchg
push
ja
ret
adc
xor
vpunpckhbw
lcall
pusha
and
mov
fidivl
fs
mov
mov
les
flds
push
das
sbb
stos
js
fnstsw
xor
repnz
cmp
lcall
pop
inc
and
push
int
pop
push
pusha
sbb
jmp
jns
lds
inc
dec
jo
sbb
mov
out
mov
mov
stos
cld
pop
inc
dec
dec
fsubs
jb
push
xchg
xor
pop
enter
mov
test
add
jp
mov
cmp
push
stc
push
dec
xor
movsb
push
push
inc
add
jae
aas
xchg
push
jl
jo
aaa
mov
popl
lock
dec
lret
xchg
rclb
ret
lods
sub
addr16
sbb
and
pop
cmp
cmp
jb
adc
fwait
xchg
adc
loop
scas
pop
adc
pop
lods
cwtl
ret
and
xor
push
lods
inc
mov
and
cmp
filds
dec
leave
stc
fs
int
pop
xchg
aaa
mov
fwait
push
xchg
lea
sbbl
leave
inc
xor
push
sahf
rorl
lret
je
out
cmpb
mov
cmc
clc
mov
adc
aaa
mov
mov
push
cmp
add
out
xchg
or
sbb
ljmp
cwtl
sbb
sbbb
test
enter
popf
mov
jmp
fstpl
pop
push
mov
adc
xor
notl
pop
mov
sti
add
xchg
add
sbb
dec
xor
jno
and
xor
pusha
add
movsl
sbb
test
xlat
scas
or
push
push
call
fldt
cmpsb
jecxz
dec
stos
mov
push
cmp
adc
sarb
push
jnp
test
jb
das
mov
repz
push
mov
cmpsl
xor
dec
cmpsl
xchg
popa
sbbb
enter
lcall
inc
outsl
mov
out
leave
xchg
jb
fwait
adc
int
in
mov
xor
cli
es
in
negl
sbb
jge
fs
scas
jne
or
dec
lds
xor
mov
pushf
mov
adc
addb
mov
test
jecxz
movb
psubusw
mov
sahf
lods
ss
and
mov
adc
sub
push
enter
pop
scas
mov
inc
scas
dec
out
stc
add
sub
dec
outsl
fdivrl
popf
push
inc
pop
jb
and
dec
movsb
pop
jle
jne
shl
jge
add
dec
testl
sbb
and
sbb
in
adc
jne
inc
dec
inc
mov
xor
pop
xchg
in
xor
jle
jmp
insb
jmp
addl
jno
in
fsubrs
scas
xchg
push
clc
out
lea
xchg
cmp
cmpsb
cmp
jb
lea
push
cltd
rsqrtps
cmc
mov
jle
push
fsubs
ss
mov
adc
mov
lret
sub
dec
push
add
sbb
imul
or
ljmp
dec
ds
and
inc
mov
and
pop
xchg
lcall
repnz
fdivr
lds
daa
xor
push
cli
lods
mov
lret
cmp
adc
das
gs
dec
mov
imul
mov
xor
sti
sub
or
lea
movsl
mov
add
mov
dec
outsb
lds
dec
mov
orb
xchg
popf
arpl
inc
rep
shlb
enter
lock
push
cs
or
test
add
mov
cli
es
arpl
ja
push
xor
mov
xor
stos
push
mov
cmc
dec
in
and
adc
cmp
mov
rcl
sti
aam
cmp
aas
insb
fs
leave
aam
in
test
jne
inc
inc
mov
lret
or
xchg
xchg
lcall
adc
repz
std
jne
das
jne
mov
jne
lret
out
dec
or
inc
push
mov
sbb
popf
gs
iret
sub
mov
jl
mov
addr16
sbb
negb
sub
add
in
pushl
cld
jg
xchg
fwait
mov
aad
shrl
add
ds
and
iret
and
mov
xchg
out
cmp
and
stos
int3
outsl
push
mulb
std
addr16
push
lret
stc
add
cmp
daa
mov
insb
aas
enter
dec
and
inc
pop
inc
and
pop
sbb
in
fxch
sbb
mov
mov
ds
mov
sub
cmp
sub
or
dec
in
icebp
lods
shll
mov
dec
push
sbb
popa
cmp
xor
int
xchg
push
mov
jns
cmp
je
or
rcll
cmp
lods
xor
mov
pop
mov
out
hlt
lret
pop
xorb
xchg
dec
aas
xor
ja
sar
fs
add
cli
xor
cmp
pop
cld
or
movsl
divl
mov
cmp
cmp
iret
repz
cmpsb
test
test
sub
cmpsl
dec
mov
mov
and
int
adc
xlat
arpl
lock
fcomp
test
out
sahf
js
and
insb
mov
lahf
xlat
sbb
popa
cmp
scas
xor
add
pop
mov
sub
dec
shlb
fwait
loopne
iret
jbe
and
or
adc
jp
out
lahf
jno
sbb
call
xchg
in
dec
loop
inc
adc
mov
xchg
les
mov
xchg
xchg
ja
mov
fadds
sub
shlb
jge
sub
aaa
pinsrw
xlat
mov
loopne
movsl
sbb
sub
jg
cmpsb
sbb
cmp
jbe
mov
dec
in
out
dec
and
push
mov
xchg
shl
pop
rorl
mov
adc
das
int3
mov
cmp
ret
aam
push
roll
arpl
sub
std
mov
mov
jg
mov
jg
imul
or
jns
je
in
sbb
sub
pop
in
xchg
loopne
or
in
lock
inc
adc
pop
push
push
mov
pop
aas
pop
in
aam
int3
dec
mov
lods
aas
out
lock
daa
ret
dec
dec
cmc
push
aad
movl
dec
add
cmp
or
inc
mov
and
popa
repnz
adcb
mov
mov
daa
cmp
mov
fwait
outsb
jae
jae
mov
rcll
das
and
inc
out
xchg
mov
or
cwtl
aam
xor
in
pop
xchg
jge
mov
ret
test
fiadds
stos
cmp
add
pop
pop
lahf
push
sti
jecxz
loopne
push
les
in
jno
sahf
repz
dec
out
pop
jge
jp
mov
sti
pop
push
push
add
xor
rol
addb
rcll
lea
fiadds
insl
mov
or
mov
insl
mov
arpl
fs
and
push
in
pushf
mov
dec
mov
jmp
mov
mov
inc
dec
mov
in
and
arpl
popf
mov
lods
adc
add
fcomps
and
inc
loop
sub
jmp
cmp
loop
jge
mov
inc
dec
cmc
jg
add
outsb
or
fists
frstor
in
push
mov
inc
sub
les
lods
push
mov
dec
rcr
stos
push
movsb
sti
jle
pop
push
dec
pusha
lcallw
ret
addr16
sub
cmp
int3
das
js
int3
cwtl
push
test
mov
and
loop
xor
dec
loope
ljmp
hlt
call
mov
imul
jnp
fistl
rolb
ljmp
adc
jp
iret
jbe
dec
fwait
out
in
xor
daa
imul
sbb
mov
ss
aaa
dec
dec
cmc
test
xchg
jo
rorl
rcrl
adc
mov
and
hlt
sub
shl
or
cmpsl
in
mov
sbb
jbe
rorb
jne
push
sbbb
and
cmp
inc
movsb
xchg
aaa
jle
out
fists
in
pop
popf
pop
rcl
sbb
ja
cmp
adc
sahf
repz
xor
xchg
dec
cmc
push
in
inc
inc
mov
ljmp
pop
mov
xor
sarl
sub
scas
je
push
int
lock
dec
fcmovnb
add
inc
and
test
jne
xchg
add
repz
add
mov
scas
fisubs
mov
push
jmp
dec
sbb
or
or
mov
fbstp
loope
mov
out
in
mov
cs
test
out
and
xor
lods
inc
in
cmp
mov
xchg
inc
outsb
fdivl
je
pop
mov
aaa
int
mov
push
flds
lcall
sub
aas
inc
into
out
mov
add
aas
sub
jae
out
hlt
lret
dec
or
adc
lcall
add
stos
or
sub
cmp
hlt
nop
push
jg
inc
adc
or
aad
dec
cmpsb
incb
mov
adc
outsl
jbe
or
cmp
out
push
imul
pop
or
cmc
or
sub
outsb
ljmp
adc
mov
mov
lret
daa
mov
or
sub
dec
pop
sbb
add
pop
mov
std
mov
inc
sub
dec
and
or
fsts
push
xor
lret
push
lea
in
jl,pn
or
imul
pop
daa
popa
xchg
aam
int
pop
xchg
das
aad
jb
pop
std
mov
sbb
je
adc
adc
xor
mov
cwtl
lock
add
adc
xor
int3
out
fwait
arpl
inc
add
pop
lahf
jns
xchg
jno
imul
mov
xlat
sbb
xchg
mov
xchg
scas
sbb
loopne
add
cmpsb
sub
jp
js
faddl
sbb
jg
jg
imul
mov
cmp
adc
dec
push
mov
je
ficompl
daa
dec
push
or
clc
jb
push
jbe
push
sub
jne
test
movsb
stc
fs
push
xor
mov
scas
or
mov
push
les
sbb
hlt
outsb
lds
ds
cmc
push
dec
fcompl
inc
dec
pop
xor
xchg
fcom
xlat
push
rcrb
roll
push
cmp
outsb
pusha
push
fsts
dec
inc
lcall
clc
adc
outsl
cmp
pop
sti
mov
js
xor
addr16
dec
adc
aam
leave
sbbl
or
xchg
lcall
sub
push
mov
test
fs
adc
test
push
pop
popa
cs
and
sub
sahf
scas
ljmp
push
ja
adc
xor
push
fwait
jmp
sarl
mov
ror
aaa
xchg
push
pop
jmp
sbb
pop
outsb
sbb
js
mov
nop
mov
xchg
jmp
call
cmpsb
or
mov
in
fstps
adc
pop
dec
mov
jge
xor
mov
sub
enter
mov
dec
int3
popf
lock
insb
icebp
mov
jnp
xor
xchg
or
mov
scas
jb
test
mov
jae
out
inc
sub
call
adc
orl
dec
inc
popf
fistl
dec
or
aad
push
movsl
pushf
mov
jae
into
hlt
add
mov
jne
shlb
push
xor
mov
ds
xchg
cmc
ret
fidivl
pusha
lock
dec
xchg
sbb
xorb
and
rol
adc
iret
dec
lahf
sar
mov
dec
pop
repnz
orb
xor
mov
mov
mov
movsl
xchg
int3
aas
icebp
addr16
arpl
sbb
xlat
and
mov
scas
adc
sub
xor
pop
cld
mov
jecxz
jle
ss
jns
mov
divl
sub
popa
insl
ret
in
fdivr
lret
subl
popa
enter
std
adc
inc
adc
lds
push
leave
out
aas
dec
mov
add
nop
jns
mov
or
cmc
dec
out
arpl
cmp
adc
mov
jnp
lret
mov
es
sub
push
lods
mov
xchg
push
pop
or
push
push
out
lret
adcb
and
adc
lods
dec
pop
icebp
loopne
inc
mov
loope
lds
inc
dec
cmpl
add
pop
adcl
and
lea
fs
ja
addr16
mov
aas
xchg
xchg
cmpb
pushf
insb
mov
xchg
push
dec
mov
aaa
dec
fs
jmp
push
out
and
ss
subl
repnz
int
ds
jb
cwtl
sbb
xchg
mov
mov
and
and
ljmp
mov
insl
xchg
mov
sbb
shrb
add
cmp
loope
adc
das
push
daa
sahf
jl
movsl
scas
mov
fildll
dec
push
jmp
mov
adcl
cmp
repz
pushf
dec
fnsave
mov
scas
and
sub
movsl
add
in
mov
cwtl
jmp
mov
jb
xlat
ljmp
aaa
ss
xor
nop
adc
jbe
insl
cmc
xchg
jmp
mov
pop
pop
add
call
sbb
push
int
dec
push
scas
and
push
cli
dec
push
ja
shll
aad
cwtl
subl
inc
aas
mov
mov
cmc
jno
xchg
jecxz
adc
jecxz
daa
inc
cmp
das
in
imul
lret
ret
push
faddl
rclb
sub
xchg
push
pop
xchg
shrb
mov
cmc
adc
and
fwait
test
jge
andl
lods
mov
mov
jo
in
mov
jle
subb
cmp
xor
insl
movsl
jg
push
movsl
cmpsl
push
sbb
lret
in
jp
lea
push
inc
sti
mov
and
adc
jne
xchg
cmp
es
add
mov
ds
scas
cmp
popa
out
cmp
xor
data16
and
rcr
nop
fmull
xor
inc
stos
insb
push
fstpl
add
ljmp
in
rorl
ljmp
lods
subl
out
xor
cmpsb
push
pushf
jle
mov
xchg
out
xchg
cli
mov
iret
sahf
ret
out
js
mov
out
xchg
hlt
push
test
cmp
mov
sbb
jl
cmpsl
add
rorb
add
cltd
lret
dec
arpl
ror
andb
aad
faddl
cmp
cmp
dec
inc
or
nop
addb
lcall
dec
pop
cmp
sahf
lcall
test
lahf
rclb
xorb
aad
and
push
xchg
pop
pushf
mov
jae
cmc
cmpl
lods
in
xchg
mov
and
sub
daa
leave
mov
xchg
cmpsl
pop
enter
add
popf
adc
scas
mov
aam
out
fstpt
cld
pop
xchg
stos
xor
xchg
fsubs
xor
fs
les
pop
dec
jl
add
popa
mov
pop
mov
jae
jp
and
cmp
insl
xor
clc
fwait
jge
jle
hlt
lahf
and
cmpsb
clc
repz
pusha
push
cli
pop
test
push
inc
adc
push
dec
inc
mov
movsl
loop
aaa
test
cmp
jb
std
scas
jle
fwait
and
or
xlat
test
negb
test
xchg
test
in
pop
fsqrt
fdivrl
cmp
pop
xchg
pop
test
and
jecxz
push
outsl
test
push
scas
sbb
mov
add
pusha
icebp
xchg
clc
repnz
ds
xchg
sbb
jb
add
mov
iret
or
stos
imul
je
mov
daa
xchg
push
fbld
push
out
cmp
jge
lret
fsts
out
repnz
sahf
jno
xchg
sbb
xchg
popa
mov
cltd
scas
mov
push
adc
push
cmp
add
mov
mov
cmp
cwtl
mov
lods
xor
mov
movsb
pop
mov
mov
repz
rorb
scas
repnz
mov
nop
inc
popa
xor
loope
lds
vmread
and
jp
out
jb
mov
xchg
push
stos
adc
mov
push
lret
jnp
jge
sub
aad
push
movsb
sub
out
mov
addr16
neg
mov
lock
or
enter
push
pop
aas
xchg
sub
inc
xor
iret
dec
jmp
fstpt
jo
lods
cmp
test
fmull
hlt
adc
inc
lret
push
sbb
imul
lds
stos
popf
dec
add
jo
and
insl
loopne
lahf
xchg
scas
test
dec
xchg
cld
dec
jle
push
push
mov
shll
daa
xchg
int3
or
mov
pusha
mov
bound
or
dec
std
xor
mov
mov
jns
call
in
add
insl
lods
mov
xchg
xor
push
jb
out
dec
imul
inc
xor
and
xchg
sub
roll
cmp
lahf
mov
leave
hlt
test
push
cmp
add
stos
push
sub
roll
mov
leave
cltd
lods
fwait
push
cli
mov
movsb
dec
loope
filds
loope
icebp
jg
ljmp
lods
push
insl
in
xchg
hlt
out
es
push
xor
jne
and
jne
xor
call
lea
jle
pop
mov
dec
hlt
mov
push
leave
jbe
lahf
mov
shll
imul
fcomi
loope
xchg
pop
jns
or
mov
imul
jnp
sub
lret
or
mov
jb
add
movb
mov
jl
outsb
mov
out
sbb
and
stos
shll
cs
out
inc
push
adc
sar
repz
fadd
mov
hlt
clc
xchg
sbb
xor
sub
mov
scas
movsb
jmp
xchg
jp
addb
mov
dec
mov
jge
inc
and
add
icebp
outsb
test
popf
jp
int
fs
add
shl
sbb
mov
repnz
jp
pop
mov
fdivp
xor
int
xor
sti
pop
rcr
push
adc
test
lds
cmp
iret
lcall
icebp
icebp
push
sbb
dec
js
out
movsl
push
pop
scas
jne
scas
cwtl
arpl
inc
pop
sbb
or
mov
add
js
mov
add
mov
jbe
mov
dec
and
imulb
pop
scas
mov
jmp
movsl
hlt
and
inc
push
gs
sub
repnz
lret
fwait
popa
push
or
ret
inc
mov
mov
jbe
outsb
jmp
push
rcrb
lahf
lcall
mov
hlt
xor
sub
in
mov
xchg
jno
ret
push
push
sti
push
insb
dec
jns
push
or
adc
lods
test
push
inc
dec
imul
pusha
sahf
xchg
push
inc
mov
lock
jmp
inc
jns
xor
sub
jmp
cmp
sbb
mov
in
or
sub
lods
adc
push
xor
movl
insl
shrl
jmp
sub
xchg
test
jecxz
jmp
ds
push
and
sbb
pop
int
jo
mov
cwtl
mov
and
jb,pt
inc
inc
fnstcw
or
mov
dec
inc
loop
repz
andl
pop
in
jl
sub
pop
nop
sbb
lods
ljmp
jo
pop
pop
cwtl
sbb
cmp
pop
mov
dec
mov
sbb
mov
popa
inc
fs
lock
enter
shll
loopne
push
mov
ret
push
adc
sbb
sub
arpl
push
adc
add
mov
xchg
mov
inc
pop
jle
dec
nop
inc
dec
push
enter
dec
sub
fistpl
push
rolb
repz
jns
fsts
das
pop
dec
lret
cmp
test
fnstcw
test
inc
icebp
mov
mov
and
mov
std
sti
mov
in
cwtl
fs
ss
bound
shrl
fldln2
cmpsb
mov
mov
or
cli
jle
xlat
fcmovnbe
dec
fidivrs
dec
xlat
test
and
xor
addr16
pop
jge
es
pushf
jb
stos
mov
lret
jbe
cmpsb
or
into
shl
cld
xor
out
cmp
pop
inc
outsb
cwtl
mov
adc
out
xchg
in
into
jecxz
or
hlt
dec
jmp
and
scas
mov
out
ljmp
mov
inc
push
and
mov
cmp
xchg
lds
stc
daa
add
ret
push
xor
push
push
adc
dec
and
adc
dec
cmp
rcrb
push
lret
and
in
xchg
push
fistps
bound
rclb
push
push
adc
sub
ret
or
mov
rcl
xlat
call
jmp
mov
push
jg
or
rcrl
cmp
mov
adc
push
or
jnp
pop
sub
ss
mov
mov
xchg
push
nop
pop
call
mov
test
mov
mov
rcll
sbb
mov
pop
or
lods
mov
repz
and
pop
divl
mov
mov
adc
pop
jge
sbb
lock
or
inc
and
push
mov
repz
fimull
fildll
incb
mov
push
dec
jmp
daa
push
test
xor
mov
pop
xchg
test
jb
mov
shl
out
fcmove
fwait
pop
mov
fldl
subb
in
fwait
mov
int3
add
dec
or
lods
scas
repz
lret
rcrb
fsubl
mov
dec
mov
icebp
adc
dec
das
ret
cli
imul
sbb
cmp
mov
mov
outsb
test
mov
movsb
adc
pop
mov
inc
loope
rclb
jle
adc
inc
pop
out
aad
es
rcl
jmp
fbld
std
js
cld
imul
jmp
add
loopne
leave
mov
xorl
xor
fbld
push
jg
lahf
mov
jb
loopne
outsl
ficoms
mov
dec
testb
clc
pop
push
push
and
test
dec
add
data16
fldl
cmp
dec
mov
sub
mov
jecxz
mov
xor
stc
and
inc
mov
pop
dec
fistl
fs
test
lods
jg
mov
out
xor
mov
in
test
fldenv
dec
test
int
lds
cmp
rcrb
sarb
divb
loopne
sti
dec
cmp
jo
mov
mov
sar
mov
int
out
imul
je
or
adcl
fildl
push
push
pop
sbb
xor
or
ljmp
dec
push
dec
dec
push
dec
das
fiadds
mov
cmpsb
mov
xchg
or
mov
outsl
dec
push
setne
scas
mov
sub
pusha
ret
mov
addr16
fbstp
mov
xchg
out
popf
test
rcll
push
std
idiv
sub
mov
push
mov
push
adc
enter
pop
xor
dec
sbb
add
sbb
cmpb
dec
jle
pop
nop
add
sub
dec
or
js
dec
and
xchg
sbb
notb
mov
cmc
fwait
jo
repz
loop
int3
nop
jge
dec
adcb
cmp
xor
pushf
xchg
mov
jae
int
adc
or
inc
mov
push
out
jno
xor
pushf
lods
cld
jecxz
mov
dec
bound
mov
addr16
fistps
adc
or
les
data16
mov
dec
clc
fadds
fwait
imul
adc
add
dec
xchg
mov
or
xchg
cmpsb
jge
iret
js
stc
shl
lods
js
sbb
jne
loope
jmp
pop
xchg
pop
jns
rcrl
sti
in
test
add
add
mov
xor
imul
dec
adc
pop
cmp
int3
cmp
fldt
dec
sti
addr16
into
sbb
inc
xor
jg
mov
movsl
rolb
cli
test
mov
pop
rorb
shlb
inc
subb
out
cwtl
pop
outsl
lret
loope
mov
mov
nop
clc
sub
cmp
pop
ljmp
in
sub
dec
cmp
push
xchg
inc
mov
ljmp
pop
adc
add
pop
sub
in
pop
lods
sti
add
lcall
gs
popf
cmc
insb
das
and
outsl
xlat
out
mov
pop
icebp
xor
adc
lock
outsl
stc
mov
es
push
or
lock
jp
imul
push
stos
mov
sbb
dec
in
inc
fcompl
mov
call
mov
xchg
push
cmp
jae
dec
ja
sti
jp
mov
rolb
scas
dec
xor
sahf
sbb
push
lahf
test
pop
cmp
jl
aas
ret
pop
xchg
cld
faddp
ljmp
push
xchg
in
cmp
push
push
add
aaa
test
add
sbb
jmp
mov
stos
and
notl
cld
sub
sbb
xchg
pop
jg
stos
dec
sbb
movsl
lahf
push
lods
mov
sub
or
add
mov
inc
sub
mov
xor
stos
js
fildl
ffreep
enter
dec
jmp
xchg
cmp
mov
dec
push
inc
inc
notl
push
dec
jecxz
adcb
mov
mov
daa
outsb
std
xor
std
push
or
sub
mov
add
xor
and
idivl
enter
jns
cmp
leave
sub
or
xor
mov
sub
shl
enter
mov
arpl
inc
jg
ret
call
push
jp
xchg
inc
xor
inc
xchg
and
lret
sub
jp
xor
xlat
loope
mov
fcomps
in
sbb
pop
xchg
adc
add
push
pushf
cmpsl
xchg
pop
mov
pop
je
lods
mov
enter
fildll
xchg
cmp
cmp
imul
mov
dec
jb
lds
cmp
and
xor
aad
jp
cmp
bound
ja
add
jne
frstor
les
sbb
bnd
or
lods
inc
icebp
cmp
sub
fidivs
mov
das
sub
jns
push
fcoms
dec
lret
xchg
push
xchg
out
push
cwtl
lea
lcall
adc
and
xor
cmp
jae
mov
mov
inc
cltd
inc
push
jae
xor
cld
rol
adc
stos
mov
mov
notl
shrl
add
icebp
into
pop
jl
fwait
inc
in
repz
inc
sbbl
popa
nop
cmp
int
jecxz
adc
cmc
xchg
cmp
add
cli
xlat
ret
push
push
lahf
mov
adc
pushf
inc
pop
xchg
faddp
jp
shll
loop
ds
push
mov
icebp
inc
shlb
dec
aas
mov
insl
xchg
inc
outsb
pop
push
adc
jo
and
sub
mov
mov
or
jecxz
repnz
pop
xorb
hlt
rcr
cmpsb
inc
adc
std
test
dec
jne
xchg
inc
inc
mov
das
repnz
sbb
lahf
test
js
loopne
orl
push
data16
push
lock
shlb
fmull
pop
mov
andl
cmp
cmp
fdivrl
lcall
outsb
je
mov
lds
push
pop
dec
in
inc
or
mov
mov
repnz
scas
int
add
fsts
sbb
sbb
jmp
fsubrl
sbb
mov
mov
push
loopne
adc
add
cli
pop
cmp
xor
into
orl
pop
loop
xlat
out
cmpsl
jecxz
xor
xchg
jnp
inc
pop
outsl
mov
test
mov
xor
pop
mov
insl
add
mov
outsb
add
int
popf
cmp
dec
sub
sti
data16
pop
insl
push
lock
std
push
push
xor
sub
call
mov
or
push
adc
aam
dec
push
inc
xchg
lret
xor
lods
fstpt
xchg
and
mov
cmp
cmc
mov
clc
mov
data16
dec
pop
dec
rolb
cmp
xchg
mov
xchg
into
sub
push
cmp
sbb
insb
sbb
stos
pop
ljmp
or
cmp
stc
call
mul
sysenter
in
push
out
cmp
pop
ret
jno
jae
mov
repz
inc
mov
cs
add
cli
aam
cli
je
xchg
je
pop
or
popw
jmp
jg
mov
push
cmp
out
ficomps
mov
and
xchg
dec
jecxz
jg
cmpsl
mov
scas
xor
xchg
add
jp
popa
jne
jno
pop
fsubrp
inc
test
mov
mov
insb
stos
xchg
jnp
inc
outsb
test
ljmp
push
jle
jg
cmc
notrack
pushf
cmp
adc
sbb
and
mov
lods
mov
insl
jmp
adc
pop
xchg
outsb
cmp
jns
leave
add
pop
jecxz
inc
pushf
mov
scas
repz
jae
dec
push
shr
cmp
mov
das
lcall
cs
int
jo,pt
add
and
inc
icebp
jnp
xchg
or
dec
mov
push
ror
outsb
sbb
aas
out
dec
dec
enter
jg
xchg
out
add
out
lock
or
jp
push
lret
inc
cli
shll
stc
sub
adc
ss
lret
decb
sbb
loopne
movsl
jl
jnp
cmp
jge
jmp
add
fstpt
fldl
cmp
ret
fists
xchg
ret
xor
ja
and
addr16
jo
outsl
in
out
addr16
or
lods
mov
cli
out
mov
in
xor
test
mov
jl
adc
scas
xor
cwtl
jle
adc
jbe
pop
cmp
xor
add
sub
addr16
mov
mov
scas
nop
jbe
in
enter
xchg
sbb
imul
ret
cmp
or
mov
xor
jo
lea
mov
je
sbb
or
or
push
mov
mov
imul
mov
pop
pop
addr16
fistl
mov
leave
inc
jo
push
js
xchg
push
push
mov
cmpl
xchg
push
nop
rorb
pop
dec
or
push
mov
adc
test
adc
mov
imulb
or
mov
shl
add
jp
cmp
aam
out
xchg
test
fldt
mov
mov
mov
and
mov
enter
outsb
das
js
add
jg
mov
add
jnp
push
inc
cld
dec
cmpsb
lahf
inc
or
test
jae
or
cmp
movsl
cmc
arpl
push
lods
lcall
mov
scas
cli
jecxz
push
add
scas
jae
inc
dec
adc
loopne
std
cmp
mov
xchg
mov
dec
jle
rolb
sub
push
sub
cwtl
add
pop
jmp
mov
hlt
adc
adc
int3
or
push
xor
into
and
lock
xchg
enter
mov
jle
lods
push
lds
cltd
pop
jmp
int3
and
jmp
das
jno
jmp
nop
and
scas
cltd
mov
in
xor
push
test
es
lahf
iret
js
pop
pop
movsl
repnz
mov
ja
xor
push
xor
fstpt
aas
lret
xorb
fs
dec
pop
dec
dec
mov
and
insl
cmpsb
arpl
pop
adc
add
leave
xchg
mov
stos
inc
xchg
jecxz
sbb
in
mov
push
lds
fwait
mov
and
or
jg
ffreep
mov
leave
and
addr16
ret
push
inc
shrl
jmp
cmp
mov
inc
lds
jnp
lcall
in
push
dec
lods
je
mov
xor
fs
sbb
inc
adc
fidivs
jg
inc
pop
arpl
ljmp
leave
cmp
dec
movsb
test
jnp
pop
mov
mov
test
xchg
push
in
fwait
arpl
adc
mov
jle
into
xor
jecxz
popa
loope
mov
pop
xor
and
sbb
ficoml
dec
js
adc
dec
pop
ljmp
mov
adcb
push
adc
inc
mov
xchg
jp
xchg
inc
mov
lods
les
and
repz
rclb
jg
fnstcw
cltd
gs
add
cltd
movsb
push
dec
pushf
lods
add
xorb
mov
das
mov
and
xchg
stos
fwait
lcall
hlt
cmp
inc
mov
adc
xchg
movsb
sahf
in
rcll
xchg
cmpl
lcall
mov
add
fwait
add
daa
gs
lret
popa
cwtl
mov
sti
push
inc
movsb
adc
test
jo
in
shl
adc
xor
pop
push
int
jp
cld
add
mov
hlt
inc
sub
call
xchg
fsubrl
add
push
or
adc
into
out
test
jp
cmp
js
add
cmp
test
sbb
adc
sbb
out
add
dec
sub
int3
inc
mov
mov
fwait
or
jecxz
fsts
fimull
mov
sahf
fsts
fdivrs
mov
lahf
and
xchg
and
mov
mov
inc
ret
stc
ficoms
outsb
idiv
and
cmpsl
aaa
stos
push
popf
outsb
adc
aad
pop
xchg
ret
push
mov
add
cmpsb
jle
jl
aad
pop
int3
ret
inc
mov
cwtl
fldt
jb
mov
mov
pop
rcrl
imul
stc
add
ds
fistl
push
push
mov
cmc
imul
xlat
ret
in
aad
mov
ficompl
and
sbb
sub
adcl
nop
js
lods
subb
mov
add
sahf
rcl
dec
push
pop
repz
cld
pop
mov
fsubrl
lock
int
xchg
or
roll
out
mov
aas
fsubs
mov
sub
jb
cli
xlat
popa
loope
sub
inc
mov
add
jb
movsb
mov
faddl
pop
or
jle
mov
mov
shl
and
jno
scas
pop
idivb
pop
lods
xor
enter
in
or
bswap
sbb
cmp
stos
movsb
sub
inc
and
popa
das
sbb
mov
xor
add
jge
stos
fistpl
and
adc
popa
sbb
pop
sbb
cmp
std
jns
xchg
movsb
mov
pop
and
adc
cmpsl
sahf
jae
pop
mov
insl
jmp
hlt
shlb
imul
push
jg
imul
adc
mov
push
call
into
loope
xchg
mov
ljmp
add
mov
pop
pop
pop
and
or
sub
lea
je
mov
xchg
pop
inc
es
aad
dec
mov
out
add
stc
pop
sar
cli
mov
andl
mov
imul
ds
jno
sbb
into
insb
jne
mov
jno
fstpl
and
stos
gs
lcall
mov
mov
int
test
imul
lahf
repnz
xlat
out
into
int
sti
mov
cli
inc
stos
imul
cld
adc
lods
leave
out
or
sub
or
pop
loope
cmp
jecxz
rcll
pushf
mov
loop
inc
lahf
mov
push
lret
movsl
pushf
and
mov
mov
cld
pop
add
cmp
push
jg
jno
xor
mov
clc
xchg
dec
std
sbb
dec
cmpb
js
or
ret
mov
cmc
movsl
mov
sarb
mov
mov
lret
aaa
repz
push
ja
jae
push
sbb
fsubrl
add
jmp
dec
mov
pusha
mov
pop
clc
or
test
mov
aad
jne
add
inc
insb
addr16
xor
dec
in
xor
std
cmp
mov
and
mov
out
icebp
adc
iret
hlt
pop
gs
call
add
inc
test
inc
cmp
push
sub
imull
lods
test
mov
sbb
dec
push
or
push
out
or
fcoml
sub
mov
inc
shrl
jno
push
das
and
sub
cli
loop
cmpsl
pop
js
jp
xor
gs
enter
dec
jmp
aas
ja
cwtl
jnp
push
pop
in
adc
rcrb
pop
pop
xor
xor
jno
cwtl
aas
fldl
shlb
dec
cmc
call
repnz
insl
fwait
nop
jge
mov
xchg
loop
aas
test
test
mov
popa
ljmp
mov
mov
loop
daa
test
repnz
fwait
movsl
jge
mov
sub
vdivpd
xchg
sub
inc
sarb
in
cli
mov
test
xchg
lods
pop
fiaddl
inc
push
mov
pop
cmp
ds
lods
imul
insl
pusha
jl
adc
int
pushf
pop
add
fldl
adc
clc
aas
shl
inc
scas
dec
xchg
sub
fsubrp
pusha
xchg
fldcw
test
dec
xchg
inc
pusha
into
dec
pop
nop
or
add
lret
je
and
pop
pop
cmp
add
add
mov
pop
jne
mov
pop
and
dec
arpl
mov
and
push
xchg
aas
mov
mov
push
push
imul
popa
nop
jle
lea
icebp
in
mov
lret
scas
xor
out
clc
or
data16
or
mov
iret
pop
xlat
jae
das
fs
leave
loope
pushf
dec
fadds
jp
or
outsl
sbb
cmp
dec
loopne
les
jg
pushf
ss
jbe
mov
sub
pushl
inc
pop
test
ret
push
cmpsb
mov
adc
lods
scas
mov
outsl
inc
push
pop
xchg
dec
fdivl
scas
loope
push
insb
pop
xchg
inc
imul
iret
bound
fidivrs
jl
out
and
lods
cld
test
scas
in
adc
fld
mov
or
jp
pushf
cmp
pop
sbb
or
loopne
jl
push
push
cmp
nop
add
jne
dec
xchg
adc
push
or
sub
jmp
aaa
gs
inc
adc
mov
das
pop
or
adc
cmp
pop
shrl
lret
jge
jne
subb
cmc
sahf
push
mov
rcll
push
and
loopne
adc
jae
push
js
and
ljmp
or
cmp
fwait
cmp
jecxz
or
repnz
dec
add
jmp
sbbl
sbb
mov
adc
stos
outsb
jmp
jns
loopne
push
sub
mov
lcall
shl
cld
mov
int3
mov
inc
push
push
imul
cmp
mov
scas
push
sub
outsb
pusha
mov
inc
xor
cwtl
cld
xchg
scas
pusha
adc
mov
ret
push
lock
aam
sbb
mov
flds
inc
lcall
and
stc
and
mov
and
xor
sub
lock
jne
mov
clc
inc
jns
cmovl
das
testb
xchg
test
cs
repz
mov
dec
pop
push
lret
xor
int3
jp
add
adc
aaa
in
out
repnz
aas
mov
aad
mov
inc
icebp
lret
lods
xlat
xchg
xor
sahf
push
mov
inc
push
pusha
push
jl
dec
adc
dec
jp
jne
jle
ja
shrb
mov
mov
ljmp
or
scas
sub
push
and
mov
mov
mov
mov
pop
stc
arpl
ss
cmp
add
dec
pop
fmuls
das
xor
xchg
inc
loope
dec
sbb
pop
xchg
lods
sahf
cmp
loopne
sub
addr16
pop
aad
andb
push
mov
mov
push
and
cmp
insb
bound
shlb
xchg
and
ja
jns
add
push
xorl
dec
add
lds
xor
sahf
scas
cmp
sbb
ret
push
mov
cmp
push
cmpsb
sbb
loope
xchg
push
add
sub
jno
xchg
ret
xor
loope
insb
mov
mov
sbb
fisttpl
popf
scas
icebp
pop
cmpsb
mov
lods
es
sub
add
leave
sub
aas
dec
jg
fwait
xor
fldcw
xchg
cmp
mov
xor
mov
inc
cli
sar
jecxz
inc
cmpsl
xchg
sbb
insl
iret
add
mov
xor
jo
aam
rcl
adc
cltd
popa
popa
jge
adc
rorl
outsb
into
test
lods
sub
jb
iret
movsb
mov
mov
mov
les
adc
loopne
pop
dec
xor
loope
pop
mov
call
fs
hlt
les
cmpsl
test
push
loope
dec
sarb
mov
sti
leave
dec
leave
insl
adc
nop
hlt
enter
stos
add
rolb
out
iret
imulb
jns
push
outsl
push
lods
push
movsl
add
nop
out
xchg
lock
jle
mov
mov
repnz
adc
rcrl
and
and
add
xor
lea
ljmp
fidivl
outsl
sbb
mov
sbb
fcmovnbe
repz
sub
sti
aad
sarl
and
insl
cmc
mov
dec
orl
bound
push
nop
arpl
vpcmpeqd
outsb
pusha
test
insb
push
imul
dec
cwtl
loope
pop
cmp
mov
push
jp
push
xlat
push
or
mov
xchg
outsb
pop
decb
sarl
inc
and
or
add
jle
in
sbb
pop
and
stos
enter
sub
mov
shrl
out
cs
push
fsubr
pushf
adc
jo
movsb
repz
js
les
inc
mov
mov
mov
mov
faddl
push
call
inc
jne
mov
aam
or
nop
cmp
mov
add
enter
dec
rcr
stos
dec
and
push
dec
add
lahf
movsb
sbb
push
scas
mov
aaa
sbb
cwtl
sti
outsl
test
dec
sbb
scas
aaa
sbb
popa
enter
movsb
notb
jb
inc
imul
lcall
aad
cs
xlat
and
fisubrl
mov
mov
mov
xchg
imul
movsb
push
test
in
add
outsl
aaa
push
mov
popa
xor
sbb
iret
xor
dec
dec
ds
hlt
mov
cli
xchg
addl
mov
shll
scas
mov
add
xor
add
repz
iret
push
icebp
adc
sbb
mov
nop
sbb
sub
pop
loopne
dec
daa
pop
mov
push
leave
push
mov
ret
add
incl
les
sub
jle
insl
dec
mov
cmpsb
sbb
fstl
in
mov
dec
xor
or
lods
sahf
mov
stos
pop
sub
ret
mov
dec
subb
add
lods
sbb
movsb
sahf
addr16
ljmp
xchg
adc
shl
ja
sub
mov
inc
outsl
nop
jne
jmp
xchg
push
cli
cld
lea
add
xchg
cltd
nop
lea
dec
cmp
shll
call
dec
mov
pop
xor
js
mov
pop
pop
pop
sub
pop
in
xchg
lretw
xor
into
fcomps
xchg
iret
sub
fimull
mov
sarl
add
cmp
shlb
out
loop
test
adc
repnz
xchg
xor
adc
or
xor
arpl
push
cmc
add
aas
ret
pop
mov
jle
fninit
push
sbb
xchg
inc
cmp
mov
inc
adc
out
add
clc
push
shrb
stos
fidivrl
xchg
mov
xor
roll
push
adc
jno
xor
or
lahf
in
sahf
iret
jns
xlat
lods
push
out
cs
jmp
jl
xor
sub
and
xor
mov
mov
fistpl
sub
orb
ret
scas
out
mov
scas
pop
sbb
sbb
or
cmp
js
ljmp
mov
inc
rorl
outsb
mov
ljmp
xor
dec
cmp
jbe
cmpsl
popa
clc
lret
dec
mov
fimuls
hlt
movsb
xor
std
sahf
sbb
jne
cltd
leave
inc
into
inc
cli
inc
jnp
test
popa
pop
mov
push
add
shlb
pop
cmp
in
cltd
mov
sub
xchg
xor
add
js
leave
xor
push
sti
pop
lcall
int3
adc
xchg
hlt
lret
cmc
push
adc
add
pop
inc
xor
popa
fmull
aaa
push
push
pop
in
sti
daa
dec
jne
mov
mov
arpl
aas
pop
mov
pop
pop
mov
xchg
mov
add
add
pushf
inc
fdivl
pop
and
sbb
dec
test
adc
nop
fldcw
cmp
jmp
pop
mov
sti
mov
lahf
sahf
add
mov
std
and
cs
jbe
imul
scas
addr16
dec
sti
xchg
loopne
pushf
mov
in
adc
imul
lods
push
es
fsub
dec
mov
cmpsl
dec
fmulp
or
icebp
fwait
add
mov
pop
in
sbb
lds
cmp
and
fnstenv
cmp
adc
nop
sub
mov
add
sub
xor
je
lock
lds
movsb
dec
mov
orl
sub
fwait
mov
leave
add
push
out
xor
lret
ja
shlb
push
gs
jb
jge
jmp
data16
jmp
daa
icebp
test
in
and
inc
pop
sbb
mov
inc
repnz
and
test
dec
xor
leave
adc
xor
xlat
inc
test
cmpsl
and
cbtw
lods
fsts
xor
out
mov
loope
movsl
sbb
jae
cltd
bnd
les
pop
push
mov
imul
mov
pop
sub
push
adc
mov
cld
xchg
dec
shrb
in
mov
mov
sbbb
in
ja
enter
movsb
scas
sbb
cwtl
xchg
and
dec
and
mov
cli
mov
mov
cmpsb
dec
push
orb
sbbb
push
rcr
pop
out
inc
cmc
dec
int3
in
mov
push
push
sbb
mov
mov
aaa
nop
push
inc
mov
or
xor
jns
fmul
sub
arpl
movsb
and
lahf
int
ret
loope
insl
movsl
sbb
ret
rcr
xchg
mov
sub
xchg
xchg
aaa
jecxz
or
jp
cmc
or
add
inc
out
inc
xchg
sub
mov
sbb
mov
int
sub
sub
sub
outsl
xchg
mov
pop
in
xchg
mov
repz
xor
test
into
shll
insb
xchg
iret
mov
ljmp
push
aad
dec
sub
mov
push
add
test
sti
fwait
cmp
in
leave
aaa
push
lods
nop
scas
push
ss
repnz
psrlw
mov
jns
fadds
ljmp
cmp
hlt
push
jl
fcompl
push
mov
iret
sar
out
repnz
sahf
jns
adc
dec
adc
mov
ds
cli
inc
push
inc
dec
scas
shl
dec
popf
fs
inc
rclb
dec
fadds
dec
shl
mov
inc
inc
cmp
sbb
lret
cmpsb
pop
and
xchg
jmp
test
jae
sar
push
xchg
pop
push
mov
adc
adc
push
push
loope
pop
rorb
mov
xor
ffree
aas
xchg
cmpsb
mov
push
clc
gs
cld
sub
bswap
inc
xor
or
xchg
pop
fucomp
mov
outsl
push
je
ret
push
shl
test
push
cmp
jo
loopne
sub
adc
pop
add
mov
cmpsl
fs
push
dec
loope
cmpl
adc
mov
dec
push
shll
dec
insb
push
clc
test
clc
jnp
cwtl
loop
test
movsl
cmp
fnstsw
mov
xlat
in
aad
fbstp
test
lods
mov
or
lods
stos
sbb
fnsave
mov
xor
cmp
outsb
mov
in
xor
repz
test
popf
xchg
push
pop
fsubrs
ljmp
add
in
sbb
mov
ljmp
decl
movsb
adc
mov
add
push
jae
add
inc
cmpsb
xchg
adc
pop
data16
jmp
hlt
mov
jmp
xchg
mov
xchg
test
xchg
jge
pop
idiv
xor
adc
lods
xchg
in
xor
shlb
pop
xchg
daa
xlat
gs
jle
xchg
and
arpl
cld
or
jge
fwait
pop
mov
das
jnp
in
mov
mov
outsl
add
stos
dec
outsl
fisubrl
stos
cli
mov
cmp
xchg
cmpsb
xor
out
shlb
inc
aad
mov
aam
divl
mov
ret
pusha
icebp
jmp
fcmovne
std
lahf
mov
sbbb
aas
lds
jg
aaa
lea
dec
pop
cmp
jae
sbb
xor
nop
pop
push
cmp
jns
push
mov
leave
pop
inc
stos
clc
jmp
cmp
sub
jae
xchg
fisttpl
inc
mov
dec
mov
dec
mov
repz
outsl
push
cmp
int
lea
pop
jecxz
pop
push
popf
jnp
je
ljmp
mov
add
jo
std
lea
jg
push
jno
mov
fnsave
xchg
aam
roll
ss
aad
es
cmp
out
dec
jbe
addb
xchg
outsl
pop
movsl
pushf
xchg
and
gs
push
lock
dec
gs
fs
dec
sub
sub
mov
popf
loopne
or
mov
mov
push
mov
mov
pop
mov
in
or
mov
sahf
cltd
push
and
iret
sbb
fsubs
rolb
test
cld
xor
aam
mov
mov
add
pop
mov
adc
xchg
mov
addr16
xchg
pop
int3
ljmp
mov
or
and
ret
jnp
xor
inc
inc
or
adc
in
sub
aaa
int
adc
jnp
push
std
aam
insl
jmp
and
loope
repnz
sub
xchg
imul
dec
and
into
push
sbb
push
insl
orl
push
loop
or
pop
sahf
rolb
neg
cmp
mov
stos
fs
push
in
popf
cmp
or
xchg
insb
out
mov
cmpsb
mov
push
sbb
mov
xchg
xchg
mov
push
sahf
aas
jp
mov
sbb
sbb
adc
das
into
and
lahf
jmp
mov
cmp
inc
xchg
jno
mov
ret
pop
xor
mov
jnp
pop
clc
jns
cs
mov
mov
push
xchg
cmp
inc
subl
ret
fstpt
pop
cwtl
cmp
cmp
sbb
leave
in
aam
or
stos
ror
das
jb
fsubr
lods
mov
mov
int3
rolb
add
dec
add
xlat
pop
rcl
pushl
dec
push
nop
loopne
cmpsb
sbb
xchg
pop
jp
jmp
es
adc
in
loope
in
xor
je
mov
insl
xchg
pusha
xchg
repnz
pmulhuw
fisttpll
loopne
insl
addr16
jg
lods
adc
popf
push
ds
mov
sbb
rcll
stc
sub
and
dec
adcl
pop
push
gs
out
dec
xor
outsb
jge
sahf
sbb
cmp
in
dec
stc
repnz
shlb
pop
gs
xchg
cs
je
mov
in
and
iret
nop
das
out
cmp
jns
jp
fisubs
xlat
arpl
pop
mov
jbe
dec
jne
out
sbb
adc
adc
mov
mov
stos
jb
dec
in
pop
sub
jl
dec
insl
insb
cld
push
or
lods
es
dec
or
hlt
jnp
xor
push
jp
imul
jmp
dec
mov
ficoml
mov
inc
icebp
in
addr16
shlb
nop
sbb
jae
fwait
bnd
addb
call
push
pop
shlb
inc
fwait
enter
jg
adc
xor
stos
or
outsl
inc
dec
shrb
and
pop
outsb
out
fldenv
xlat
push
mov
jno
mov
jb
jnp
lea
test
outsb
out
or
sub
xchg
repnz
push
pop
call
mov
das
sub
aas
or
push
inc
mov
aam
adc
xor
orl
insb
mov
xchg
push
xchg
dec
addr16
mov
or
jg
stc
cmp
jp
sbb
pop
cmp
sub
xor
dec
xor
movsl
leave
jge
xchg
pop
rcr
mov
shrb
xor
shlb
pushf
and
mov
sub
xor
or
js
divb
je
daa
bound
jl
pop
lahf
mov
mov
out
cmpsl
xchg
xor
ljmp
aam
fs
loope
scas
cmp
inc
mov
loop
cmp
fists
pop
jg
adc
sub
push
and
js
std
xor
adc
mov
addr16
sti
ljmp
lahf
pop
add
mov
sbb
cmp
icebp
imul
and
push
cmp
mov
xchg
xor
ret
cmp
cwtl
xchg
push
push
aas
jmp
and
xlat
lahf
outsl
fiadds
cli
das
add
push
leave
mov
xchg
rcrl
cmpsl
std
out
sub
je
popa
lret
hlt
clc
stc
cwtl
mov
and
addl
mov
cwtl
jne
inc
not
insl
jle
ss
xchg
pop
lcall
cwtl
lock
pop
cmp
dec
lock
mov
movsb
jg
push
add
inc
lret
enter
push
int3
push
fisttpl
lahf
cmp
aam
mov
push
shll
bound
loop
adc
popa
sub
jnp
push
ret
movsb
adc
gs
mov
leave
mov
pop
test
dec
xor
scas
popa
or
adcb
subl
push
cmp
aad
sarb
jl
or
or
shrl
ljmp
sub
aad
pop
out
jne
dec
push
cmp
xchg
ficoms
jo
mov
outsb
and
popa
mov
sbb
dec
mov
je
loope
test
push
movsl
repz
jmp
mov
xchg
mov
imull
or
fisubrl
fs
mov
cmpb
in
push
push
shl
clc
std
cmp
lds
dec
cmp
loop
inc
cmp
xchg
lret
sub
sahf
xlat
xor
rcrb
mov
scas
add
in
and
push
push
pop
add
addr16
es
stos
xchg
test
adc
xchg
mov
sbb
es
orl
out
sbb
mov
xor
push
and
jnp
add
dec
jl
in
push
cmp
and
test
shl
orl
lds
adc
cli
shr
mov
enter
jg
mov
xor
or
test
or
mulb
inc
jp
lea
das
out
jno
comiss
hlt
xor
adc
or
xlat
in
loope
fildll
iret
sbb
cmp
or
imul
xor
mov
arpl
scas
add
fiadds
push
pmaddwd
decb
into
out
mov
loop
test
sub
xchg
xlat
and
insl
adc
jne
testb
or
pause
idiv
lret
fadds
insb
fs
jo
mov
jnp
inc
or
fs
ret
push
fcmovnu
repz
mov
or
push
int
test
mov
adc
sbb
jb
gs
ret
and
inc
inc
popf
cmp
dec
inc
movsl
jbe
aam
stos
clc
ljmp
pop
lret
inc
push
push
xor
loop
push
fwait
xor
mov
mov
and
out
stos
lods
inc
dec
mov
pop
adc
mov
inc
adcl
ljmp
xor
mov
scas
cld
insl
mov
test
fs
lahf
in
flds
sub
mov
xchg
xchg
je
sbb
push
xor
out
popa
xlat
add
aam
movsb
inc
in
rol
pop
subl
mov
arpl
rcrb
inc
clc
into
mov
dec
pop
and
outsb
repz
movsl
pop
cmp
mov
movsl
xchg
out
xchg
xchg
pop
cmp
inc
outsb
cmp
or
dec
xor
jns
lcall
aam
and
and
sbb
pop
fadd
push
cmpsb
pop
scas
dec
dec
or
lret
adc
push
mov
push
mov
jns
xchg
enter
enter
xchg
push
mov
mov
mov
mov
pop
mov
pop
cli
int3
outsb
int3
loop
mov
or
mov
and
mov
push
jb
out
stos
jge
mov
lods
sub
sub
js
pop
sbb
clc
xor
jae
push
into
cmp
dec
add
xchg
lcall
cmp
pop
xor
push
and
add
mov
xor
or
stos
loope
pusha
adc
sbb
aas
mov
adc
inc
add
push
jb
jge
or
adc
mov
movsl
cmpsl
les
in
pop
outsl
cmpsl
fbstp
popa
stos
or
addr16
sbb
and
and
push
cli
iret
lret
loopne
adc
push
inc
insb
push
stos
aam
daa
fs
je
adc
sbb
cmp
es
xor
xor
cltd
in
add
mov
lretw
mov
push
jnp
mov
push
pop
add
and
das
das
or
mov
pop
test
adc
sbb
repz
inc
clc
jne
loopne
add
subb
inc
xor
cli
into
cmp
and
mov
push
sub
cmp
je
push
into
ja
cmp
sar
mov
div
je
mov
lcall
mov
fdecstp
pushl
ret
and
pushf
movsb
jge
test
add
push
sbb
inc
cmp
xchg
add
es
aam
jbe
ficoml
cmpsl
jge
cmp
lea
insl
xor
insl
test
scas
inc
adc
or
adc
push
dec
pop
lds
in
mov
std
mov
cmp
lret
bound
mov
out
or
xor
aaa
rolb
imul
mov
rclb
popa
mov
push
dec
mov
sbb
xchg
pop
adc
loop
mov
in
sahf
cmp
cmc
mov
cmc
je
std
sahf
scas
xchg
int3
mov
aas
jg
mov
xchg
mov
push
sbbl
xchg
adc
fcmovbe
xchg
mov
or
stos
stos
pop
or
sub
cld
mov
mov
sub
test
pop
add
cs
ss
lea
cltd
mov
and
popa
push
add
inc
lock
bound
pop
xor
jle
sub
dec
fs
adc
pop
jge
aaa
leave
mov
mov
dec
insb
pop
add
call
subl
aam
pop
sbb
lods
lahf
lret
sub
push
pop
mov
sbb
inc
mov
xor
add
mov
lret
cmp
push
dec
cmp
stos
or
rcll
call
out
and
out
insl
lods
aaa
mov
dec
cmp
pop
mov
insl
outsb
jnp
push
jno
jne
sbb
mov
jmp
jecxz,pn
inc
xchg
ret
sub
jl
pop
imul
sahf
sub
xchg
xchg
testb
xor
cmpsb
and
jp
ret
xchg
incb
imul
out
ds
mov
jbe
lock
mov
les
lret
dec
sbbl
aad
leave
jns
aam
or
iret
ficoms
cmc
fisubrl
jae
or
sbb
filds
or
push
mov
push
mov
and
and
ss
jae
mov
sub
mov
mov
xchg
scas
add
lfs
sbb
outsb
loope
xchg
mov
mov
dec
shrb
jg
mov
sti
arpl
cld
xchg
hlt
pop
mov
sti
mov
mov
lds
mov
leave
aas
out
rclb
test
add
xor
sub
mov
loopne
xor
or
mov
scas
and
jp
mov
push
sbb
repz
loope
dec
jns
mov
mov
jno
imul
adc
push
fimuls
xchg
adc
mov
cmp
pop
dec
cld
pushf
push
scas
mov
js
cmp
test
bound
mov
js
cmpsb
mov
xchg
roll
imul
clc
cmpsl
cmpsb
lods
imul
scas
in
fwait
ds
xchg
push
dec
and
loopne
push
xchg
dec
or
pop
mov
fwait
pop
pushl
cmp
inc
cs
jmp
and
sbb
cmp
sbb
and
mov
fwait
dec
jecxz
arpl
ljmp
loop
jmp
cmpsl
xchg
sbb
jbe
icebp
mov
push
call
pop
out
jp
ljmp
in
cmp
add
jbe
jecxz
mov
rcrl
aam
sub
xchg
mov
sti
xchg
and
lds
xchg
jbe
loop
adc
fisubs
fiadds
std
or
dec
xor
jge
cmp
fistpll
mov
fildll
mov
cmp
xor
jge
movsb
insb
insl
insb
je
xchg
or
adc
cld
jae
cli
add
fcmove
cwtl
jno
push
fisubl
shll
mov
ljmp
fisttpl
push
xchg
popf
mov
divl
mov
jo
xlat
sub
cmp
xchg
arpl
sub
outsl
push
inc
lcall
cmp
pop
sti
fistpll
mov
or
jno
pop
push
and
movsl
pop
sub
notl
add
pop
stos
movsl
jg
mov
and
sbb
out
fildl
jg
mov
jge
pop
mov
nop
and
insb
stc
jp
or
rorl
cmp
daa
or
aad
add
jg
mov
jmp
fists
push
lret
rorb
add
adc
cli
mov
pop
dec
popa
roll
ljmp
mov
int
push
push
popa
jmp
loop
add
jmp
aam
test
mov
cmp
fstpt
outsl
insl
data16
or
mov
inc
fnstsw
lahf
shlb
in
push
cmpl
sbb
call
jle
and
xor
jae
inc
mov
in
je
in
aam
loopne
mov
cld
nop
sub
popa
test
jle
roll
fnstenv
fwait
cltd
jo
jmp
mov
push
xor
jmp
dec
dec
push
lock
or
mov
adc
push
fstps
les
imul
movsl
pop
inc
mov
inc
mov
pop
adc
jl
add
pop
pop
bound
pop
sbb
sti
icebp
insb
ret
shrb
jge
cmp
ret
xchg
mov
pop
cmp
push
outsl
sbb
lret
xorb
aam
scas
push
stos
or
jno
in
inc
inc
call
pusha
xchg
and
lock
push
xchg
jo
loopne
rcrb
mov
sbbb
addl
jge
add
sbb
sbb
scas
call
dec
mov
inc
repnz
out
push
ror
sbb
sbb
add
push
loopne
aaa
fcomi
adc
pop
and
add
or
lea
popa
mov
mov
adc
pop
icebp
aaa
ljmp
mov
push
add
jmp
mov
mov
mov
ljmp
sub
adc
pop
insb
repnz
xchg
push
leave
mov
ss
mov
xlat
xchg
in
inc
cmpsb
cs
pop
repz
cwtl
inc
mov
or
stos
loop
in
testb
aas
mov
fwait
xor
in
xor
jmp
mov
gs
in
or
pop
jp
mov
xor
stos
and
jmp
ljmp
mov
imul
sbbb
dec
mov
add
mov
xchg
pop
inc
ljmp
adc
out
mov
int3
push
in
lret
shr
lret
xlat
sbb
iret
loopne
push
or
fcomps
negl
leave
out
stos
lods
into
rclb
es
loopw
sub
cmpsb
scas
dec
lret
out
mov
shlb
jae
adc
inc
jnp
add
mov
and
cmp
or
ret
jmp
aas
shll
js
mov
jmp
dec
cmpsb
adcl
ds
lret
sub
bound
mov
ret
mov
mov
ss
ja
mov
pop
bound
xchg
fisubs
aas
add
js
mull
ret
push
jbe
fistps
ret
push
push
sub
hlt
or
dec
call
arpl
cmpsb
inc
cltd
rcll
aaa
jo
dec
or
popa
aas
xchg
adc
pop
sbb
xchg
mov
out
dec
int3
mov
or
insl
cli
outsl
test
pop
xor
dec
inc
flds
xor
imul
lret
sbbl
or
adc
sub
push
fldcw
adc
enter
xor
lret
inc
divb
aaa
adc
or
or
ret
pusha
cmp
xchg
xor
mov
shl
dec
inc
scas
jo
inc
into
mov
fwait
push
rcll
bound
xor
rol
iret
out
mov
mov
mov
fnstsw
es
scas
or
stc
stos
and
pop
jb
dec
sub
aas
sub
leave
jge
arpl
fdivrl
loopne
es
stos
fiaddl
enter
and
das
push
leave
pop
movsb
jno
push
xor
pop
out
lret
enter
jmp
mov
sub
movsl
cmp
in
add
scas
jns
fwait
mov
rorb
dec
and
jmp
in
adc
adc
pop
push
or
into
xor
js
enter
mov
inc
sub
sub
iret
sarb
xchg
xchg
stc
repz
cmp
mov
and
fsubs
out
ds
mov
push
and
addb
or
das
addb
addr16
push
cmp
fdivrs
and
add
test
js
jmp
xor
punpckhbw
sub
sbb
fildl
sti
xor
cmp
xchg
in
pop
test
icebp
mov
mov
add
inc
iret
div
outsb
xchg
ret
sbb
cmp
faddl
test
loop
xor
push
and
xor
and
imul
jge
xlat
xchg
lret
pop
lods
into
ffree
pop
mov
outsl
add
jo
or
xor
sub
pop
and
xchg
dec
jb
xchg
add
in
icebp
cld
int3
in
jp
push
xor
cmp
out
test
test
xchg
cld
sub
cld
push
scas
loopne
pop
dec
mov
shll
lds
mov
push
jge
mov
js
lods
adc
into
mov
mov
call
mov
hlt
gs
mov
rorb
push
in
lret
or
or
aas
mov
aaa
mov
call
mov
cld
sbb
es
sub
stos
lret
mov
addr16
sub
sbb
test
add
mov
jmp
inc
cmp
outsb
pop
inc
rcll
test
push
enter
int
je
and
cli
mov
jbe
sub
outsl
out
addr16
addr16
leave
push
cli
faddl
add
mov
or
mov
repnz
out
adc
push
fabs
aad
inc
subb
fnstcw
add
sub
sub
into
and
pop
leave
insl
pop
ret
pop
leave
insl
cmc
inc
ret
or
testl
dec
call
imul
ret
in
pop
stos
cmp
pop
jle
push
push
xlat
pop
movsl
mov
pop
int
stc
js
lods
push
mov
jo
add
sub
and
push
mov
sbb
sbb
sbb
nop
cmpl
ret
imul
dec
cmpsw
cmp
out
inc
inc
lahf
mov
cli
xchg
movsb
push
cmp
lahf
in
fadds
cmp
fidivl
inc
popf
add
movsl
clc
push
test
inc
ret
mov
out
or
mov
sbb
sbb
les
ljmp
test
cmc
das
jbe
call
pop
cmp
stos
mov
les
lea
jl
shll
add
push
pop
push
rcrl
pop
popf
cmpsb
push
popf
jo
push
push
pop
repz
or
gs
xchg
int3
aad
test
jo
mov
das
and
scas
loopne
mov
outsl
dec
and
test
mov
ret
mov
pop
insl
push
cltd
lcall
jns
mov
shll
shl
icebp
jp
mov
leave
lods
sarb
fnsave
into
cmp
pop
pop
add
sbb
push
pusha
inc
jle
ljmp
adc
pusha
xor
xor
inc
movsb
jnp
or
clc
push
cmpsb
sub
fstpt
or
int
push
cmp
packsswb
mov
jle
push
sub
xchg
dec
lcall
cld
xchg
push
stos
sbb
stc
sbb
mov
jge
aaa
aam
push
sbb
lahf
add
inc
stos
pop
subb
add
mov
andl
inc
pop
pop
test
lds
stos
or
mov
shrb
jp
cs
pop
xor
xor
cld
inc
xor
push
mov
data16
in
in
les
jno
ficomps
xor
adc
hlt
xor
loopne
scas
jb
or
cmpsl
jle
add
sbb
ja
shll
sbb
fdivl
sbbl
in
push
out
jae
mov
fiaddl
push
enter
pusha
stc
pop
pop
sub
push
push
or
mov
movsl
lock
or
adc
push
and
repz
mov
in
xor
incb
test
loopne
cmp
addr16
nop
mov
out
mov
cmpsl
cld
add
push
ret
sbb
imull
jb
adc
cs
lods
incb
mov
data16
in
jge
pushf
int
mov
aas
sbb
jns
dec
fidivl
or
stc
mov
and
pop
mov
aaa
xchg
mov
call
movsl
lret
fstpt
cmp
jbe
sbb
icebp
cld
sbb
push
xor
push
les
rclb
enter
scas
lock
aad
sub
sti
sub
in
cwtl
add
sarl
mov
outsb
mov
imul
call
cwtl
jae
add
ret
out
insb
xor
cmp
dec
or
movsl
xchg
or
fdivrp
mov
out
adc
in
js
sahf
jle
insb
adc
outsb
inc
hlt
in
aas
mov
jge
push
xchg
xchg
lret
lods
fadds
pushf
shll
repz
cmp
mov
fdivp
mov
lea
js
dec
popf
scas
insb
ret
in
xor
fdivl
pushf
mov
stos
cmpsb
mov
jbe
push
test
scas
sbb
iret
sbb
cwtl
xchg
pushf
jp
add
mov
mov
xchg
mov
mov
mov
xor
das
or
sub
sbb
lods
sbb
sub
popf
scas
dec
and
subl
pop
in
imul
int
std
push
rcrl
ret
mov
lods
mov
cmovb
or
pop
mov
xor
ss
sti
cwtl
cmp
xchg
or
stc
lahf
loopne
jg
out
lret
adc
out
jno
adc
jne
fdiv
xchg
dec
pop
rcrl
cmpsl
mov
das
jle
repnz
rol
outsl
mov
in
push
xchg
mov
jg
sbb
push
mov
and
or
mov
mov
jno
shrl
scas
popa
jl
faddl
ret
or
push
cltd
iret
push
jmp
jo
inc
scas
repnz
inc
repz
loop
in
das
fcomi
or
mov
lods
cmp
cmp
adc
out
cmp
stos
or
add
mov
out
push
fnstenv
test
popa
jge
je
sbb
pop
psadbw
pop
mov
mov
lcall
lods
out
pop
push
pusha
in
mov
sarb
mov
mov
mov
stc
push
jmp
pop
lock
add
out
jp
sub
dec
pop
xor
jne
pop
mov
std
adc
mov
insl
add
addr16
mov
jno,pt
repnz
cmc
xor
lahf
int
add
mov
cmpsb
in
jg
sti
adc
fs
fistps
nop
out
mov
mov
lods
xchg
fisttps
sbb
es
push
xlat
xor
pop
lcall
pop
sarl
test
outsb
fidivrs
pop
dec
sbb
outsl
and
jmp
clc
push
jnp
fcompl
pop
sbb
push
xor
aad
jno
aam
aam
sub
pop
aas
cmpsl
mov
add
scas
xchg
lea
dec
cmp
popl
push
mov
ljmp
add
enter
adc
cs
pop
and
lods
int
popa
jmp
iret
sub
xlat
sbb
jbe
in
push
addr16
test
std
mov
clc
adc
cmpsl
xchg
jmp
push
mov
popf
adc
ficomps
jnp
sti
mov
add
jle
ljmp
xchg
call
lret
jne
sarb
inc
cmp
shlb
pop
and
loopne
dec
sbb
fadd
mov
xchg
test
cwtd
pop
xchg
xchg
pop
out
pushf
xor
mov
add
sbb
adc
cmp
sub
ljmp
lcall
inc
jnp
sbb
cli
sti
ljmp
pop
dec
xor
lret
mov
add
and
add
add
loopne
out
in
add
out
pop
ja
sbb
out
sbb
fadd
fucom
out
out
add
sbb
mov
dec
cmp
and
pop
jmp
popa
popa
std
jg
outsl
std
and
lock
xchg
repnz
adc
mov
out
dec
and
dec
shlb
js
and
inc
or
mov
lcall
push
sti
lahf
iret
lods
dec
push
xor
jbe
lcall
lock
xchg
je
popa
decb
sti
dec
nop
ret
xchg
cwtl
jnp
adc
outsb
shrl
js
inc
imul
sub
outsl
es
out
xor
cwtl
sub
xchg
xchg
mov
dec
dec
mov
int3
add
add
push
jno
iret
inc
mov
mov
pop
addr16
imul
sbb
imul
into
das
xchg
shl
pop
sti
testl
lods
xor
and
fnstenv
and
or
and
leave
dec
jo
fwait
and
out
lahf
cld
shlb
ret
cmp
lret
inc
or
mov
push
cwtl
rolb
sbb
pop
push
subb
fists
movl
cwtl
fnstcw
add
loop
cld
lahf
xor
outsl
shlb
fs
movsb
xor
add
jg
push
jecxz
adc
pop
mov
mov
and
sub
pop
mov
jnp
sub
es
mov
repnz
stc
int
mov
mov
enter
pop
xor
mov
mov
xchg
lret
out
lds
mov
cs
push
jne
jbe
xor
sbb
push
stos
aad
xchg
fs
inc
xor
scas
testl
ja
sbb
mov
ljmp
cmp
xlat
repnz
rep
std
mov
and
cli
jmp
inc
insl
sarb
jge
jne
aad
inc
sub
sbb
fnstsw
mull
and
cmp
push
test
inc
xlat
push
xor
test
popf
jecxz
cld
out
xor
sbb
fmuls
stc
stos
roll
repnz
xchg
add
out
push
jmp
movsl
push
push
sahf
ljmp
shl
popf
and
cli
dec
int3
xchg
xor
jbe
je
pop
outsb
movb
icebp
adc
sbb
rolb
cld
mov
mov
mov
in
movsl
loop
lea
push
fildll
fisubrl
mov
das
or
ja
and
mov
incl
andl
and
sahf
stos
mov
pop
inc
fbstp
into
xchg
rcrb
jo
mov
out
push
imul
pop
jbe
dec
shlb
xor
repnz
clc
pushf
repz
out
xchg
xor
mov
sub
idivb
outsb
ja
dec
dec
daa
cmpsb
insb
les
pop
gs
and
bnd
sub
andb
and
int
xchg
out
popf
lret
adcl
or
mov
sahf
xchg
sub
ret
je
ret
cld
movsl
icebp
push
mov
mov
stos
sbb
mov
xchg
mov
int3
pop
add
repnz
mov
popa
jno
push
imul
int3
mov
or
sub
sub
stos
sub
in
mov
testw
outsb
sbb
hlt
cmp
arpl
mov
ret
es
outsl
leave
mov
js
adc
and
mov
push
mov
mov
fcoms
loop
xchg
fidivrl
movsl
ficomps
popa
inc
aas
mov
loop
or
adc
xchg
jge
inc
std
fists
jg
pop
nop
mov
and
aaa
in
daa
mov
adc
xchg
scas
mov
sbb
sub
addb
inc
or
in
into
std
aas
ret
mov
jecxz
pop
je
xor
dec
jp
xor
dec
pop
xchg
mov
into
cmpsl
and
fcmovu
mov
sub
pop
xor
push
mov
push
sbb
dec
push
dec
xor
cwtl
test
pop
mov
pop
mov
mov
mov
bound
dec
mov
mov
push
mov
push
dec
sbb
mov
jno
xlat
fistps
mov
scas
push
adc
mov
push
xchg
jae
cs
mov
idivb
and
pop
xchg
jg
in
imul
xlat
push
mov
pop
stos
movsb
outsb
xorl
adc
lcall
pop
cmp
jno
jmp
push
xor
inc
mov
push
xchg
iret
orb
or
adcb
and
cld
inc
adc
mov
push
ljmp
jae
stos
xor
jo
fildll
pop
xchg
sbb
inc
cmp
sub
repnz
sahf
add
push
incb
sbb
cwtl
sub
adc
rolb
mov
int
sub
pop
jle
fwait
enter
enter
dec
stc
adc
mov
adc
jge
fisubl
push
imul
pcmpeqb
jl
jno
pop
test
cwtl
aad
sar
xor
pop
js
cwtl
sbb
xchg
sub
scas
dec
mov
pop
scas
dec
cmp
mov
add
dec
and
mov
pop
test
mov
ror
adcb
loope
sub
insl
iret
je
pop
jmp
aas
fisttpl
sbb
xchg
out
sub
xchg
out
push
mov
add
clc
dec
or
jecxz
shll
ss
xor
fisubl
sub
pop
in
xor
clc
aas
movsb
addb
inc
add
jns
sbb
outsb
pop
pop
or
push
shl
popf
mov
sbb
jb
mov
jns
cmp
push
push
lds
mov
sub
popa
fistpl
ljmp
cli
mov
pop
sub
or
push
ja
dec
shlb
jp
dec
pop
cmp
lret
bnd
or
cld
insl
daa
jne
fldcw
xchg
sbb
pop
fistpll
mov
pop
push
in
scas
or
aad
add
cmc
outsl
iret
ljmp
mov
adcb
sub
push
roll
add
inc
mov
adc
xorl
loopne
jp
jmp
mov
jb
fwait
icebp
movsl
mov
add
imul
push
popa
or
fs
leave
pop
add
insl
dec
mov
jo
loop
sti
xchg
push
pushl
cs
dec
xchg
sub
aas
pop
movsl
into
pop
mov
mov
pop
adc
jle
lahf
dec
pop
aas
mov
dec
cmc
mov
ja
or
insl
inc
iret
fsubr
push
adc
ja,pt
pop
inc
sub
add
jecxz
fisttpll
mov
push
cmpsl
mov
mull
out
stc
iret
or
xchg
shrb
int
xchg
repnz
mov
pop
cli
or
xor
mov
mov
xchg
push
adcl
cmp
pop
jp
test
sbb
out
cmp
outsl
int3
fisttpll
or
scas
insb
and
aas
sbb
pop
sub
xor
sbb
cmp
out
dec
inc
add
push
inc
jmp
mov
ja
ja
aas
push
xchg
fisubl
adc
mov
push
mov
pop
add
aad
lret
ja
and
lret
push
and
push
shlb
ss
pop
test
pushf
insl
sbbb
sub
ss
cwtl
aad
or
std
dec
inc
out
pop
mov
jmp
add
addr16
cwtl
lea
xchg
mov
xchg
jle
mov
add
dec
clc
out
mov
adc
fdivs
jns
jecxz
frstor
stos
in
mov
scas
inc
and
lds
and
mov
cltd
outsb
ror
fdivrl
pop
mov
push
jmp
je
mov
adc
imul
pusha
js
push
xchg
int
lds
in
sub
mov
out
cmpsl
push
sti
or
sbb
jge
or
pop
xchg
nop
adc
pop
sar
stc
out
xchg
lahf
jp
lods
sbb
inc
mov
cmc
sbb
jae
cmp
dec
jecxz
push
xchg
cmpsl
dec
in
sbb
inc
pop
imul
add
cs
xchg
imul
mov
and
test
push
push
out
cld
ds
daa
cltd
lret
mov
repnz
popf
dec
dec
pop
xor
dec
and
sub
xchg
shll
or
popa
lcall
test
cmc
push
rcll
mov
cmc
out
pop
sbb
push
jecxz
xor
iret
movsb
into
and
incl
xor
lret
sbb
cmpb
mov
xchg
lret
shrb
adc
cltd
sbb
fnstenv
push
push
frstor
rcll
cmpl
jl
dec
ret
leave
xchg
adc
outsl
push
add
lods
iret
mov
cmpsb
adc
push
mov
je
rdpmc
inc
cltd
data16
stos
dec
adc
and
out
fcoml
mov
fdivr
and
aas
out
scas
jmp
lret
push
cmp
mov
addr16
cld
lock
mov
xlat
sbb
arpl
nop
mov
inc
push
into
pop
stos
adc
outsl
mov
mov
cmp
lock
dec
sti
loope
mov
push
xchg
rcll
jb
and
cmp
arpl
mov
scas
ret
out
add
sbb
sbb
mov
mov
ds
jnp,pt
and
cmpsl
cltd
hlt
pop
sbb
icebp
loope
xchg
sbb
cld
jecxz
or
xchg
or
jg
inc
popf
inc
add
ret
pop
sbb
sub
dec
dec
popf
and
push
jns
movsb
fcomi
mov
lods
push
lret
push
js
dec
inc
repnz
mov
mov
pusha
xor
cmp
mov
repz
inc
aaa
iret
ja
xchg
add
fcmovb
divl
mov
ret
repz
sahf
aaa
push
pushf
loopne
xchg
jne
je
xor
loope
inc
inc
cmp
test
mov
in
outsb
push
aad
stos
enter
xlat
popa
mov
cwtl
jg
mov
adc
adc
and
mov
adcl
std
les
inc
xlat
push
faddl
cmpsb
ljmp
mov
xchg
movsb
lcall
ret
mov
cmp
mov
add
adc
sub
pushf
sbb
in
out
push
or
mov
fwait
pop
cmpsl
ljmp
jno
jp
jns
jb
outsl
dec
pop
test
adc
mov
inc
add
pushf
and
fbstp
aas
dec
mov
push
lock
fcomps
mov
push
mov
mov
cmpb
mov
jo
pusha
push
pop
push
dec
ret
sub
push
sahf
call
xchg
jl
pop
loopne
add
leave
sub
ds
outsl
mov
cmp
and
pop
add
sbb
inc
and
inc
aad
pop
cmp
pop
in
inc
push
cltd
hlt
stos
mov
pop
mov
cmp
mov
mov
cs
add
das
pop
pop
nop
dec
pop
add
mov
repz
shlb
inc
push
lock
mov
push
ja
cmpsl
ds
dec
popf
push
and
rclb
sti
data16
jns
or
test
push
sbb
pusha
notb
push
mov
mov
dec
cmp
rol
fwait
push
sub
mov
dec
nop
cmc
add
loopne
and
lods
xchg
jmp
jne
daa
xchg
out
ss
and
test
jns
pop
sarb
sub
inc
mov
test
pop
outsl
and
pop
fdivl
lret
int3
mov
aam
mov
cltd
xor
in
arpl
in
mov
pop
and
out
cvtpi2ps
mov
cmc
xchg
xor
mov
fiaddl
mov
in
adc
fdivr
fidivs
nop
dec
mov
xchg
sbb
ja
mov
sub
xor
sub
test
sub
mov
in
leave
testb
or
pop
or
mov
jb
gs
or
sub
flds
es
test
mov
fstpl
mov
test
dec
sarl
jbe
xor
jl
inc
rorl
dec
mov
ljmp
or
adc
push
mov
mov
jbe
ds
and
fnstcw
iret
out
cmp
hlt
enter
in
push
insb
lods
jl
mov
lods
pop
mov
jae
or
nop
inc
sub
rclb
or
addl
sbb
add
jb
jge
push
xchg
js
loopne
or
xor
cld
xchg
repz
out
and
hlt
mov
or
push
push
inc
or
jno
or
out
mov
mov
sub
mov
mov
inc
fstl
repnz
mov
mov
push
mov
call
dec
cmp
jl
clc
pop
sub
popf
pop
in
sbb
repnz
fisubs
shl
dec
hlt
outsl
sub
imul
fsubs
or
dec
xchg
inc
jns
mov
sarl
loope
jbe
getsec
xchg
xlat
leave
mov
and
dec
fbld
notl
cmpsl
outsl
sahf
xchg
je
push
clc
sbb
cmp
loope
and
in
and
cli
xadd
lods
cmp
add
mov
mov
cli
jg
out
cmc
shr
fnstenv
push
mov
clc
jns
cld
fsubs
mov
xor
inc
mov
ret
and
mov
push
xchg
cmp
lock
or
jno
xchg
or
pop
jecxz
iret
xor
bound
mov
inc
dec
push
adc
loope
stc
pop
adc
outsb
pop
daa
lcall
and
jl
push
jl
pop
jmp
or
jno
fisubl
andl
push
mov
ret
dec
cmp
xchg
dec
pop
sbb
or
mov
dec
dec
es
xor
stos
push
out
add
pop
popf
add
inc
inc
sbb
pop
mov
jle
mov
xchg
xchg
add
adc
add
lret
or
push
cmp
and
pop
aas
push
call
cld
popf
push
subb
jmp
lret
fld
dec
es
dec
dec
pop
jg
and
inc
mov
xchg
aaa
xor
and
adc
push
jecxz
xchg
and
pop
inc
jno
shll
insl
mov
or
mov
and
add
into
flds
mov
je
xlat
or
inc
sub
testb
stos
inc
cmp
jge
jo
enter
cmp
cmp
fiadds
sub
adc
shlb
pusha
mov
iret
jl
mov
aam
pusha
inc
cli
jp
xor
mov
in
fidivrs
pop
push
sub
adc
push
pop
xor
icebp
rol
mov
pop
cmp
jb
cmpb
roll
cltd
js
aas
mov
push
push
mov
mov
in
mov
cmpsb
and
dec
icebp
aam
push
dec
enter
test
flds
xchg
cltd
into
insb
sti
test
subl
push
outsl
ljmp
sahf
scas
jmp
jae
and
jbe
testb
xchg
xor
scas
daa
xchg
arpl
push
adc
or
lea
movsb
dec
xor
or
inc
mov
mov
hlt
adc
std
sub
cwtl
xor
addr16
sub
mov
hlt
add
in
inc
jmp
jl
mov
pusha
mov
std
or
frstor
rcll
sar
int3
inc
iret
inc
xor
jecxz
js
lret
adc
cli
pop
xchg
xchg
movsb
ffree
mov
jle
repz
xchg
mov
test
jle
mov
test
xor
mov
xchg
imul
push
cmp
mov
jmp
mov
fdivl
call
int
or
inc
xchg
dec
sbb
cmc
mov
mov
stc
push
or
or
ljmp
cmpsb
pop
jmp
negl
mov
and
leave
lods
scas
mov
jo
xor
ret
lret
xchg
jp
xchg
adc
pusha
mov
icebp
bound
arpl
stos
mov
int3
pushf
add
sub
adcb
mov
or
mov
fadds
adc
cmp
mov
fcompl
mov
rcr
into
adc
andl
in
pop
and
sbb
pop
inc
aas
pop
in
adc
hlt
jbe
dec
pop
out
mov
adc
shll
out
lods
push
aam
pop
out
out
mov
xor
fstps
arpl
popf
xor
mov
push
sbb
dec
arpl
jmp
je
sbb
icebp
jnp
and
mov
iret
enter
fcomip
fdivrs
loope
jbe
sub
xchg
sarl
pop
cmp
and
sti
adc
in
sbb
daa
mov
mov
push
dec
pop
ret
lods
ljmp
repz
xor
mov
pop
dec
ljmp
pop
dec
push
insl
ret
aam
dec
stos
push
leave
lret
std
lret
xlat
iret
fs
jae
cmp
or
subb
imul
mov
jo
in
movsb
out
inc
lahf
pop
imul
sbb
out
push
cs
leave
rorl
adc
scas
lahf
ret
inc
or
cltd
and
daa
jmp
xchg
cli
fwait
jns
dec
scas
xor
mov
out
cs
pop
push
cmp
pusha
xchg
sbb
xchg
pushf
dec
or
mov
xchg
and
insl
shll
mov
jne
jnp
xchg
test
dec
fisttps
mov
js
mov
pop
lock
xchg
fdivrs
stc
aad
xor
push
rol
sbb
loope
sub
adc
cmc
sub
les
cmp
lcall
testl
adc
push
jge
rorb
imul
sbb
aam
mov
ss
adc
push
inc
insb
pop
sub
bound
das
and
loope
in
aam
fisttpl
mov
insb
sbb
daa
scas
jge
adc
pop
jg
fldt
loop
scas
idivl
pushf
xchg
into
test
cmp
xchg
push
insl
pop
out
cmp
jecxz
jmp
mov
inc
mov
adc
sub
push
mov
test
xor
mull
adc
pop
sub
sbb
jns
popf
rcll
cmp
fisttps
adc
mov
int3
fstl
xor
stos
xchg
add
xchg
mov
mov
or
clc
insl
pushf
bound
jp
cmp
pushf
and
imul
sbb
inc
gs
stos
sbb
pop
push
mov
add
mov
push
push
sub
cli
lea
pop
nop
mov
add
mov
mov
push
arpl
cmpsb
add
xchg
lods
xchg
dec
lods
jo
std
sbb
stos
imul
mov
data16
lock
cmp
xor
mov
jno
mov
cmp
sbb
paddq
xchg
inc
mov
sti
cs
cmp
mov
mov
lock
int3
stos
dec
subl
and
fsubrs
lods
jle
xor
mov
mov
scas
mov
imul
jb
push
xchg
and
xchg
aam
push
and
inc
subl
mov
inc
dec
mov
sti
or
xchg
nop
add
and
je
enter
mov
fstl
scas
enter
push
mov
lods
jns
pop
repz
int
sub
dec
cmpsl
pop
sbb
scas
xchg
stos
daa
sbb
cwtl
inc
rolb
adc
scas
pop
cmp
ret
mov
mov
mov
pushf
or
pushf
xchg
sahf
lret
inc
xchg
lods
push
pop
pop
fisubrl
arpl
pop
lcall
and
push
xlat
sti
push
outsb
clc
pop
lret
jecxz
sub
mov
pushf
icebp
stos
addr16
cs
mov
cmp
mov
int3
cmc
out
and
repnz
inc
xor
and
sbb
inc
push
or
adc
fimull
iret
and
out
shlb
jb
pop
ja
sbb
xor
pusha
mov
les
and
repz
and
cmc
imul
pop
jecxz
cs
pop
scas
lret
ss
sbb
pop
xchg
adc
jle
cltd
sti
ret
inc
aad
sbb
xchg
outsl
xor
xchg
daa
imul
popf
out
sub
rorl
inc
cmc
sbb
lods
int
ljmp
jp
xor
or
stos
pusha
or
jmp
adc
mov
decl
repnz
negl
es
popf
push
push
push
mov
add
ja
pop
lret
xchg
mov
jb
arpl
pop
pop
xbegin
fsubrl
cs
pop
cltd
cmp
xchg
ds
nop
imul
rcrb
bound
pop
jmp
popa
sub
icebp
das
and
aas
push
mov
and
fiaddl
adc
and
sti
xchg
rcll
repnz
sbb
int
and
sbb
test
pop
xchg
hlt
sub
std
add
ror
subl
popf
pusha
adc
lahf
hlt
xchg
jnp
push
jg
dec
sbb
and
gs
out
cmp
scas
lcall
lock
rep
cmc
xchg
sbb
inc
in
push
push
jp
fdivs
adc
xchg
pusha
and
mov
or
fiaddl
mov
fdivs
push
push
ja
pop
xchg
movsl
subl
xchg
ret
sbb
add
push
jno
testb
and
sub
jbe
inc
xchg
nop
pop
xchg
test
pop
pop
in
loope
fucomp
imul
pop
mov
pop
inc
fidivs
sarb
insl
aam
aaa
push
fs
popl
testl
sub
add
outsl
ljmp
ds
xchg
lock
mov
or
mov
jge
push
adc
pop
scas
pop
and
dec
rcr
fisubrl
xchg
mov
xchg
jae
push
in
mov
or
mov
mov
ret
hlt
sbb
insl
inc
icebp
imul
mov
mov
inc
add
sbb
sbb
loope
out
jecxz
jp
daa
push
iret
xor
mov
mov
clc
jl
mov
out
and
dec
out
push
je
outsl
and
sub
test
pop
cmp
cmc
push
push
inc
xor
xor
add
in
ret
aas
pop
adc
mov
loope
inc
mov
aas
jae
call
cmp
aaa
out
ss
push
jo
xor
mov
test
pushf
pop
ljmp
adc
shlb
mov
aaa
mov
aad
and
adc
push
lock
rcl
sarl
in
inc
cli
cmp
adc
jmp
test
mov
lcall
int
dec
scas
int3
dec
adc
xor
fchs
aad
push
sub
scas
imul
pop
add
or
cmp
pop
fwait
jnp
fstpl
push
sub
or
mov
cltd
mov
mov
pop
popa
sbb
lea
cmp
mov
sbb
mov
or
push
mov
pop
hlt
cltd
out
add
std
out
or
fs
rcrl
out
test
xor
les
pop
and
fiadds
add
xchg
rcrl
xor
or
sbb
leave
sbb
add
and
popa
mov
jle
fists
mov
repnz
jno
test
not
loope
lea
in
jmp
xor
dec
lods
mov
ret
pop
pop
cmpsb
std
into
mov
add
mov
xor
pop
aam
negb
mov
imul
popa
enter
mov
xor
or
inc
push
push
fidivrs
sub
mov
scas
nop
cmp
or
ja
xor
pop
sbb
fistpl
sbb
out
in
in
outsl
stos
xchg
mov
jmp
add
into
jecxz
fs
dec
mov
jnp
hlt
loopne
sub
scas
jmp
mov
lods
dec
push
stos
inc
fisttpl
stc
sbb
dec
push
mov
push
push
out
xor
scas
popf
cld
orb
outsb
pushf
imul
jmp
in
jns
aaa
add
xor
adc
shlb
jb
mov
push
imul
loop
test
inc
outsl
es
pop
mov
scas
mov
in
into
pop
int3
in
shll
sbb
mov
xor
es
es
into
mov
scas
jne
sbb
mov
movsl
mov
shrl
cmp
enter
inc
dec
sbb
or
add
fdivl
lret
cli
push
nop
mov
mov
rcr
gs
gs
or
pop
and
push
dec
jl
and
xor
cmp
out
test
adc
fs
pop
push
cmp
push
mov
and
add
mov
mov
fbld
inc
sub
jns
pop
movl
adc
cmp
int
cmc
iret
or
lcall
and
adc
fs
repnz
and
iret
lods
jmp
push
call
xor
push
jl
add
sbb
push
dec
outsl
repz
scas
ljmp
stos
xchg
xchg
test
cmp
pushf
mov
inc
sti
xchg
mov
out
dec
jmp
jg
lret
dec
mov
mov
dec
sub
mov
jecxz
popf
push
scas
rcrl
int3
mov
mov
sti
inc
jo
cmp
sbb
sub
loope
js
in
mov
in
mov
push
cmp
xchg
mov
test
mov
fs
adc
cwtl
jne
pop
xchg
insl
sbb
pop
xlat
mov
jb
cmpb
int
movsl
mov
loope
xchg
sti
inc
fisubrl
ss
mov
inc
dec
and
mov
dec
roll
fildll
filds
rcrl
nop
es
sar
cmpsl
jp
xchg
ret
sti
fadds
or
jp
cmp
dec
cltd
push
mov
cmp
fdivrs
cwtd
sub
pop
nop
cltd
and
push
cmpsb
dec
jecxz
xchg
out
loopne
imul
sbb
jl,pn
or
or
pop
mov
push
inc
jmp
aad
lcall
cmp
push
inc
loopne
add
cld
je
aaa
ficoms
aas
rolb
mov
xor
js
or
dec
adcl
popa
xor
xchg
jbe
push
cwtl
gs
popf
dec
mov
loope
lahf
int3
ja
enter
cmpb
rcll
pop
mov
lret
divb
scas
addr16
xor
out
push
dec
pop
xchg
addr16
enter
dec
jo
pushf
sub
push
movb
cltd
mov
rcll
sbb
cmpsb
lcall
push
in
test
jle
xchg
jns
or
push
call
out
sub
icebp
pushf
mov
add
pop
xrelease
and
icebp
add
icebp
jmp
sahf
js
jnp
xchg
decb
int
lret
mov
mov
loope
fisttpl
sub
mov
xchg
sbb
insb
ds
jb
mov
js
adc
lods
sbbb
xchg
xchg
mov
adc
ljmp
icebp
pop
jno
and
nop
cmpsb
sahf
push
inc
mov
mov
pushl
scas
test
xor
addr16
lods
arpl
push
lcall
push
push
lods
outsb
xor
pop
jge
repnz
pop
push
sub
sbb
mov
popa
mov
aaa
mov
xorl
lds
dec
in
adc
stc
mov
fs
repz
sbbb
out
jmp
jno
andl
mov
jle
xchg
push
sub
mov
jns
stos
xor
fisubl
adc
xor
lret
add
xor
mov
ret
cmp
cltd
es
and
mov
pop
cmp
ljmp
and
jmp
sar
and
dec
cltd
jns
mov
jns
cltd
or
xor
insl
rcrb
mov
pop
aas
fiadds
push
cwtl
mov
adc
xor
daa
lcall
adc
xchg
jb
sub
insb
inc
push
or
cltd
mov
test
arpl
mov
jp
cld
mov
jnp
cmp
dec
xor
out
mov
jo
cmc
add
push
sub
sub
les
xchg
mov
andl
inc
and
mov
and
in
jecxz
adc
xchg
nop
pop
es
and
jl
rorl
fnstenv
xor
rolb
push
mov
fiadds
loop
insl
adc
lds
push
outsb
ret
loopne
mov
cs
push
movsl
xchg
jecxz
cmc
fadds
adc
adc
and
mov
push
push
fsubr
xchg
and
fldl
lahf
popa
inc
mov
fisubrl
rolb
sti
cmpsb
pop
jnp
pop
inc
mov
je
mov
pop
push
mov
cmp
jo
test
pop
mov
push
imul
pop
mov
test
orb
sbb
out
out
cli
xlat
sbb
jmp
pop
sbb
cmp
dec
push
lods
stos
mov
push
cld
mov
mov
cmc
imul
add
inc
mov
and
sub
je
jb
mov
bound
in
out
pop
std
movsb
push
js
in
fucom
mov
cmp
mov
jg
aam
adc
pop
xchg
jge
pop
push
ja
fdiv
jbe
xchg
scas
call
or
out
or
pop
into
ret
in
rcl
addb
test
insl
mov
dec
popa
add
outsl
rcr
lret
dec
jo
jns
push
fld
sub
test
lret
dec
stos
push
or
mov
fidivs
out
dec
dec
mov
movsbl
mov
pop
xchg
xchg
aam
icebp
adc
mov
pop
jmp
out
adc
je
mov
jmp
shlb
xchg
cmp
cmp
xchg
cwtl
cs
popf
insw
aad
cmpsl
jo
jo
fistl
rorl
jo
xchg
push
in
into
xor
xchg
xchg
adc
vpmacswd
loopne
stos
cs
iret
add
mov
loopne
or
or
cmp
dec
inc
cmp
xor
ja
cld
lea
add
add
nop
lea
push
inc
je
cmp
leave
sbb
out
jmp
jo
or
mov
out
out
mov
js
sbb
mov
mov
xchg
dec
xor
ljmp
sbb
jnp
in
sbbb
fstps
daa
shll
mov
xchg
rcll
push
cmpsb
inc
dec
inc
andb
subl
and
cs
mov
xchg
mov
pop
data16
dec
sbb
mov
mov
cwtl
or
test
fidivs
jge
lea
out
out
bound
xchg
fsubrl
xchg
xor
out
xchg
xor
popf
pop
xchg
jne
mov
mov
dec
pop
addb
push
xchg
pop
icebp
pop
aaa
inc
bound
ss
inc
mov
test
rol
sti
adc
mov
xor
loope
mov
lcall
lcall
fwait
cmp
popf
lahf
fwait
lods
inc
imul
jecxz
scas
lds
bound
mov
test
dec
popa
ret
shrb
and
imul
loope
jbe
mov
les
es
cmp
sbb
mov
roll
mov
jl
repnz
push
dec
push
jne
repz
cmp
pop
mov
xchg
fnsave
cwtl
outsb
lods
cmp
mov
cmp
dec
mov
ljmp
movsb
stc
cltd
jbe
push
cmp
ljmp
mov
xchg
idivb
pop
sbb
lea
mov
arpl
push
xchg
xchg
cltd
shrb
cld
mov
js
mov
mov
scas
fldcw
pop
and
movsl
xor
xchg
fimull
adc
push
xchg
lcall
pop
jl
arpl
mov
insb
mov
iret
sarl
iret
push
add
outsb
insb
cltd
adc
mov
adc
mov
addb
push
jno
mov
shr
xor
dec
pop
popl
ds
loopne
mov
les
je
movl
mov
popl
clc
lea
pop
daa
cmpsb
dec
sub
mov
je
sti
mov
pop
dec
mov
xor
xchg
and
repz
mov
mulb
push
insl
xchg
xchg
dec
outsl
jmp
stos
js
leave
out
sbb
and
iret
imul
pop
xor
mov
adc
bswap
movsb
bound
pop
insb
es
or
pop
inc
adc
popa
jnp
cmp
nop
aam
mov
push
insl
xchg
sub
mov
mov
mov
loope
dec
mov
and
mov
call
imul
rcrb
mov
mov
inc
test
popa
in
movsb
or
addr16
call
xor
in
push
sbb
xchg
std
into
loopne
ror
jl
scas
nop
add
jecxz
dec
xchg
inc
push
pop
bnd
addr16
adc
inc
mov
pop
out
test
xor
inc
cwtl
out
adc
pop
or
rorb
add
movsb
pop
sub
call
aad
sub
dec
mov
sbb
pop
mov
arpl
lds
jmp
or
popf
adc
std
mov
cld
ljmp
xchg
loope
dec
and
stos
pop
sti
sub
leave
xchg
mov
into
lods
dec
pop
sub
pop
xchg
xchg
jb
je
push
inc
loop
push
popf
addr16
inc
inc
mov
rcrl
add
lds
movsb
cmc
dec
sbb
dec
xorl
arpl
rorl
leave
push
stos
sub
lea
or
adc
or
pop
fs
cld
jbe
jmp
mov
adc
je
sub
or
pop
mov
cmp
xor
inc
leave
cmp
rcrl
insb
pop
stos
lahf
xor
xchg
pop
lods
fisttpll
mov
das
movsl
jp
xchg
and
orl
dec
jo
lds
xor
dec
call
push
daa
ss
sbb
iret
dec
fildl
lahf
dec
ss
lret
loop
adc
adc
stc
mov
aad
sub
dec
pop
loopne
clc
call
jle
pop
jmp
nop
mov
mov
ds
enter
jo
addr16
jno
test
and
loope,pt
rcll
and
hlt
xchg
scas
jge
cmp
sbb
je
mov
pop
sahf
lcall
sahf
loop
mov
xchg
je
sub
mov
jnp
mov
and
lret
not
cltd
pop
xor
bound
push
loop
dec
jle
mov
enter
jbe
add
rol
fistpl
insl
fistl
lret
ss
pop
inc
jle
ss
stos
cli
sbb
or
stos
mov
or
pop
lea
bound
jmp
cli
inc
xchg
adc
jb
fists
mov
mov
call
adc
fnsetpm(287
xor
inc
in
lds
xlat
mov
pop
mov
repnz
dec
adc
mov
popf
ret
jmp
in
xor
mov
cmp
pop
cmpb
jne
or
mov
aad
push
and
stos
mov
mov
test
cli
jmp
fstl
inc
jae
test
mov
cltd
mov
enter
sub
cmp
sbb
add
mov
idivl
mov
mov
ror
dec
jecxz
pop
das
cli
pop
das
mov
mov
rcl
ret
inc
repz
push
pushfw
mov
out
gs
call
test
repz
adc
das
iret
mov
jae
jne
in
insl
lret
cmc
out
jbe
stc
leave
fadds
sbb
inc
ja
and
loope
cmp
jecxz
stc
jbe
sahf
push
add
xchg
or
daa
std
xchg
andb
xchg
push
mov
and
ret
cmc
push
into
imul
xchg
std
lock
jno
jmp
inc
sbb
lahf
dec
daa
xchg
das
jge
pop
aas
sbb
pop
fisubl
test
and
jne
js
mov
sbb
push
fwait
loope
enter
mov
mov
sahf
push
fldcw
add
ljmp
pusha
push
test
fisttpl
mov
cmp
popa
add
mov
sbb
sahf
mov
pop
sbb
mov
jge
or
inc
push
xor
outsl
dec
cli
adcb
das
sti
out
jp
and
mov
frstor
imul
insl
gs
psubusw
mov
sahf
fstpt
inc
sbb
mov
pop
cmp
jle
cmp
lea
dec
outsb
iret
pop
ss
add
cmp
fucomp
cmp
cmpsl
mov
stos
and
mov
divw
or
scas
or
adc
andl
mov
xor
sbb
cmp
decb
movsl
mov
jnp
sub
jb
sub
xchg
sbbl
leave
bound
push
mov
sbb
push
lock
mov
and
xorl
mov
addb
lret
sub
enter
add
mov
es
cwtl
notb
push
xlat
fwait
out
imul
stos
lret
jo
imul
hlt
jb
stc
mov
pop
adc
fcompl
push
jmp
shr
test
mov
test
mov
movsb
shr
leave
imulb
popf
out
es
movsb
inc
rorl
adcl
sti
sbb
jp
daa
insb
notb
daa
lods
hlt
push
sahf
repnz
jg
jge
xor
enter
jae
dec
cmp
ret
mov
inc
xchg
xchg
imul
jae
add
sbb
inc
mov
inc
mov
push
fnsave
loope
je
adc
out
loop
arpl
cmc
cmp
jbe
in
adc
cli
repz
sbb
push
mov
sub
mov
jns
sub
and
add
aad
mov
rorl
test
jmp
mov
lea
stc
test
cs
and
xchg
inc
pop
push
mov
adc
cmp
in
pop
xchg
adc
pop
mov
sbb
neg
push
icebp
jb
shl
pop
test
pop
icebp
push
mov
mov
cmpsb
adc
xor
mov
mov
xor
mov
out
cmc
pop
push
cmc
xchg
int3
fwait
das
add
xchg
sbb
xor
or
add
sub
outsl
jns
les
lret
and
push
popa
xchg
and
mov
je
dec
sub
clc
jnp
andb
xchg
sti
fiadds
call
sub
xor
xor
leave
adc
sub
inc
int3
add
jno
fiadds
jns
xor
inc
movsb
outsl
into
and
sbb
ljmp
inc
mov
jo
bound
jle
xchg
cs
mov
decl
lds
imul
pop
and
into
adc
adc
lds
adc
fcompl
jecxz
pop
adc
adc
in
out
jnp
jns
cmp
push
and
push
ret
and
addr16
imul
add
addb
push
sti
int
jp
mov
inc
xchg
cs
inc
dec
adc
push
addb
push
pop
push
mov
mov
push
mov
mov
imul
imul
and
mov
xchg
cmp
mov
xorb
scas
mov
sbb
cmpsb
sbb
cli
jno
jge
adc
cmp
std
pop
sbb
pop
repnz
popa
adcb
nop
xchg
pop
fs
cmpsl
adc
jge
jno
sahf
movsl
pop
arpl
cmp
rorb
mov
leave
cmp
jle
push
xor
jl
push
sti
sub
xor
xchg
pop
push
imul
movsl
rcrb
sub
dec
and
fdivl
in
pop
fxch
dec
sub
xchg
loope
addr16
sbb
mov
pop
les
mov
push
add
cmpsb
xor
lods
testl
inc
stos
xor
or
lret
sbb
sub
leave
daa
mov
add
sahf
and
inc
test
into
dec
mov
jl
sub
or
mov
xchg
cmp
sbb
push
bound
cmpsl
mov
imulb
xchg
cwtl
or
or
jge
pop
pop
in
out
jg
es
ss
aam
mov
out
mov
loope
shr
out
loope
cmp
lods
shrl
ret
stos
scas
sarl
or
dec
test
pop
jb
mov
pusha
int
lret
cmpsb
push
xchg
dec
xchg
xchg
mov
jl
in
mov
into
loope
pop
push
sub
lret
lret
xchg
mov
ljmp
fsts
mov
lods
lcall
fcmovbe
push
xor
loop
sarl
xlat
cmp
fdivrs
pushf
das
popf
add
mov
mov
cmpsb
ss
fimull
mov
or
xor
nop
call
mov
test
xor
xor
movsl
push
iret
test
pushl
loopne
or
popa
pop
outsl
enter
pop
mov
loope
cmp
mov
ficomps
mov
mov
adc
pop
lods
test
cli
pop
mov
test
in
lcall
ret
andl
adc
cmp
dec
in
push
pop
xchg
mov
sub
imull
lret
adc
scas
pop
imul
cmp
xlat
fnstsw
lret
inc
scas
adc
add
inc
sbb
xor
popa
mov
and
jno
or
shr
iret
sub
fwait
inc
test
sub
pop
fmull
mov
pop
mov
add
dec
loop
pop
or
fwait
imul
mov
fs
xchg
ljmp
mov
stos
add
pusha
loopne
je
das
leave
mov
xor
adc
in
cmp
ja
icebp
sbb
push
cmpsl
into
test
sbb
insl
or
add
lcall
aad
stos
jmp
dec
mov
aad
mov
inc
call
aas
mov
jbe
mov
pop
int3
test
and
jns
ljmp
mov
out
test
add
push
enter
inc
div
cltd
repz
and
fwait
cs
mov
fiaddl
sbb
addr16
mov
enter
pop
dec
mov
jp
fiadds
lods
out
in
jg
call
mov
xchg
inc
rorb
shrl
aaa
mov
outsb
imul
subl
int
addr16
test
sbb
push
int3
imul
out
aam
xchg
cmpl
arpl
into
jae
inc
or
jg
jp
aam
inc
xchg
in
or
mov
pop
inc
jno
hlt
sbb
jae
std
rcr
mov
enter
shll
popa
adcb
cld
and
mov
cld
and
push
add
repz
inc
pusha
iret
cmp
aaa
jmp
and
loopne
mov
mov
mov
lahf
jp
mov
adc
aaa
dec
cli
dec
and
lock
into
jo
call
imul
fbld
xchg
sub
test
dec
nop
jg
shl
cmp
lea
pop
dec
mov
lds
push
mov
fcompl
pop
pop
cwtl
jge
add
cld
ficomps
test
icebp
dec
fisttpl
lods
cmp
icebp
lds
mov
scas
lcall
leave
add
inc
add
lock
popa
mov
inc
out
div
ljmp
push
insb
rorb
xchg
push
inc
and
mov
cmp
adc
shll
mov
scas
cmp
shl
das
lahf
push
mov
out
sahf
inc
icebp
and
sub
mov
out
pop
add
adc
sub
adc
xchg
or
aaa
dec
daa
adc
sbb
xor
jl
sub
cmp
flds
addr16
sbb
sahf
mov
and
or
or
xor
gs
sbb
mov
dec
mov
mov
mov
sbb
lret
pop
push
ja
scas
call
sahf
lret
fsubs
mov
jnp
adc
ret
jl
mov
mov
test
in
mov
ret
or
lds
mov
inc
leave
and
clc
xchg
mov
and
cmp
mov
lds
loopne
es
xchg
mov
mov
orb
cmpsl
sub
cli
mov
push
inc
mov
mov
xor
insl
xchg
xor
or
movsl
jmp
mov
shr
notl
nop
xor
sub
pop
adc
push
ret
mov
adc
xlat
cld
notl
scas
call
test
push
lcall
sub
cmp
test
xchg
jnp
sbb
mov
sbb
dec
sbb
cmp
jp
inc
sbb
repz
insl
pop
movsl
jae
cld
and
xchg
rclb
cs
ss
xor
sub
pop
jmp
movsbl
adc
or
loope
loope
daa
push
clc
cwtl
xchg
sbb
add
xchg
xlat
test
sbb
cmp
idivb
insl
mov
mov
das
adc
into
push
sarb
mov
jl
es
mov
dec
cmp
js
cmpsb
jnp
cmp
cld
jmp
iret
cmpsl
cmp
nop
mov
lods
jge
pop
jne
or
push
imul
repnz
neg
push
xchg
dec
sahf
mov
sub
pop
sbb
sub
inc
mov
jo
test
dec
test
in
movsb
add
cwtl
int3
fwait
popf
nop
jmp
push
enter
lea
adc
xor
incl
pushf
mov
inc
test
js
ss
out
sbb
mov
test
adc
std
inc
sarb
push
pop
out
jl
cmp
les
loop
pop
lea
dec
jmp
movb
xchg
dec
sub
loopne
push
cmp
push
loope
fdiv
fcomps
lcall
push
push
cmpl
lods
sbb
mov
pop
jae
rcrl
pop
or
xor
jle
or
bound
mov
add
jl
xor
int
frstor
fcomi
enter
repnz
push
xchg
jae
cmp
repz
mov
and
fisttps
push
jnp
push
mov
in
xchg
jg
ss
lret
lcall
addr16
sub
lret
das
or
in
mov
ret
mov
ret
into
cld
outsl
xchg
xchg
inc
mov
cld
add
outsl
cltd
out
inc
dec
ret
pop
lea
lahf
jle
hlt
push
lods
fadds
fdivrl
mov
out
call
stos
jmp
ljmpw
popa
cmp
dec
mov
rolb
test
and
cmpsl
push
mov
loop
or
pop
dec
in
xor
enter
inc
sub
inc
mov
pop
mov
mov
mov
out
or
xor
or
in
sbb
dec
ljmp
fs
rcll
sub
mov
add
gs
scas
rcr
aam
fwait
stc
dec
mov
xchg
lds
xor
imul
mov
jg
dec
in
ljmp
mov
cmpsl
hlt
mov
pop
adc
lret
rcrb
pop
xchg
sahf
xor
push
into
mov
dec
dec
push
xchg
jle
std
aaa
pop
adcb
and
mov
aam
enter
ret
inc
or
pop
sbbb
dec
ret
mov
mov
push
mov
mov
pop
bnd
add
fistpl
sub
insb
outsb
or
cld
jne
or
and
mov
add
xchg
jp
xchg
cmpsl
movsl
push
push
rorb
mov
xlat
and
cmpl
xchg
test
mov
xor
xor
movsb
cmp
ljmp
popf
push
push
inc
sbb
hlt
gs
sbb
sbb
add
mov
ss
rorb
add
cmp
mov
xor
call
int
push
test
push
mov
fwait
sbb
aad
xchg
aaa
ror
sti
dec
bound
push
sbb
addr16
frstor
cmp
push
add
add
push
push
push
outsb
je
sbb
jae
testb
pop
cmpsb
xor
mov
or
and
aaa
pusha
cmp
xchg
jmp
pop
imull
dec
aad
sub
inc
shrb
scas
pop
inc
orb
test
enter
pop
cld
sti
pop
je
dec
pop
stos
and
movsb
data16
repz
lods
push
or
cmp
jbe
scas
xchg
subl
mov
jno
cli
pop
jbe
movsb
inc
adc
push
scas
addr16
fcomps
push
xchg
cmp
and
sub
adc
dec
xchg
adc
adc
dec
je
mov
push
je
lods
ss
cmc
fnstsw
or
fwait
push
leave
bound
push
aas
pop
pushf
jg
data16
out
mov
mov
push
mov
sub
dec
mov
daa
jp
imul
jecxz
repnz
mov
push
push
outsb
popa
std
pop
jl
out
stc
and
js
fidivrs
out
pop
insl
jge
jl
sbb
movsb
test
mov
frstor
pop
into
inc
cmp
and
add
scas
movsl
push
iret
inc
shrl
arpl
inc
test
cmp
cmp
push
loop
or
push
imul
iret
push
leave
sub
push
mov
pop
loope
daa
bound
cmpsb
loopne
les
jne
adc
jbe
pop
mov
sub
imulb
add
inc
mov
fisttpl
inc
test
outsb
jne
jg
rcll
pop
ds
rdrand
ds
and
adc
fdivs
sub
xor
sbb
fstl
lock
dec
pop
hlt
out
jmp
jno
push
ljmp
mov
daa
sahf
lods
scas
inc
fucomi
mov
jl
adcb
and
cmp
and
lcall
xor
lret
mov
fsubr
push
mov
mov
jns
push
jno
mov
pushf
fs
pop
repnz
clc
loope
pop
add
imul
lcall
inc
psllw
mov
push
movsl
in
fimull
mov
cmp
sarb
arpl
pop
lret
pop
insb
sbb
push
scas
add
pop
lea
add
cmp
jno
pop
xchg
addr16
mov
mov
addb
loop
test
xor
mov
lods
out
shlb
jge
inc
cwtl
mov
rolb
hlt
and
mov
and
xchg
mov
jns
or
cmpsl
das
in
push
fs
das
adc
movsl
mov
mov
sahf
xchg
shll
clc
and
adc
addr16
insl
inc
insb
loopew
stc
aam
jecxz
mov
xor
lahf
cwtl
test
mov
pop
dec
dec
jne
shll
pushf
fsubrl
icebp
mov
mov
roll
or
fisttps
and
loope
jno
call
cwtl
mov
add
mov
cltd
fcomps
mov
cs
in
stos
fldcw
arpl
xchg
adc
ds
addr16
mov
scas
mov
test
mov
ja
mov
sub
xorb
outsl
and
jno
aam
iret
mov
lahf
in
roll
cwtl
in
sti
cmp
and
movsl
push
pop
mov
test
push
cmpsb
mov
int
sarl
xchg
xlat
cmp
mov
daa
cli
mov
push
outsb
push
iret
dec
out
cli
popa
ret
lahf
cmpsl
jl
mov
mov
out
push
lahf
lcall
inc
jae
jmp
fwait
xlat
bound
fucomi
scas
xor
stos
mov
mov
cmc
mov
xchg
and
add
or
inc
or
inc
pop
pop
xor
xor
ss
lods
lods
xor
cmp
push
inc
repz
or
rcrl
sub
xchg
scas
sahf
xorl
out
push
ret
pop
push
stc
mov
push
mov
push
cltd
jp
mov
push
ret
mov
dec
ds
push
mov
in
scas
popl
pop
insb
repz
adc
mov
xchg
fnstsw
lret
shlb
and
pop
shr
cwtl
pop
push
push
jle
mov
rorl
mov
and
xchg
or
in
xchg
xchg
dec
cmp
test
push
fistpll
or
pop
dec
xchg
movsb
sub
mov
loopne
loopne
mov
cmp
cmp
cmc
psubusb
pop
cs
mov
mov
fs
adc
jo
xor
push
lea
xor
iret
mov
push
popa
lods
add
shl
push
cmpsl
les
pop
mov
cmpsl
icebp
int
cmpl
cmp
mov
sarb
push
cwtl
call
in
lods
inc
popa
nop
xor
lret
add
imul
bound
sbb
xor
sti
adc
adc
sbb
insl
cmpsb
or
ret
cmc
mov
push
jnp
cmp
mov
lcall
aaa
pop
inc
icebp
sub
mov
sub
das
mov
xor
mov
push
cmp
xor
lea
mov
sub
xor
mov
cmpsl
or
addl
push
mov
cld
mov
pop
cmp
aam
shr
inc
xlat
lock
stos
imul
and
pop
mov
dec
push
movsb
shlb
in
jo
cmp
ret
sbb
and
sub
into
movsb
fildll
shrb
ficompl
imul
fisttpll
xchg
movsl
push
stos
mov
jecxz
fists
gs
xchg
aaa
cltd
xor
aas
push
mov
jmp
adc
mov
dec
xchg
dec
mov
mov
mov
repnz
aaa
int3
movsb
adc
xor
and
inc
mov
mov
scas
jl
mov
push
sbb
ljmp
fsts
add
mov
nop
mov
rol
lock
cld
cmp
adc
add
movsb
sub
push
cmp
test
or
jmp
sub
xlat
int
xor
jmp
xor
ret
test
jg
or
xchg
xchg
leave
sub
leave
lock
arpl
mov
shl
lret
fiadds
jns
xchg
inc
and
sub
gs
repnz
xchg
or
int3
inc
rol
fisttpll
sub
lret
jns
xchg
lds
shl
xor
sahf
in
mov
cmp
sbb
mov
sbb
test
adc
mov
clc
in
xchg
fcmovnu
lea
mov
leave
cmp
movb
jno
adc
inc
notb
xchg
mov
cmp
outsb
xchg
addl
cmp
js
in
cmp
iret
stos
outsb
in
bound
insl
pop
idivl
jecxz
and
push
loop
or
push
xor
cmp
xchg
imull
jg
fstpl
mov
pop
and
subl
cmp
jmp
sub
mov
mov
xchg
gs
push
cmp
sub
sarb
out
jne
ret
dec
lahf
pop
inc
push
sub
int3
dec
push
jae
or
or
mov
jge
cs
cmp
leave
dec
jecxz
test
ljmp
nop
cmp
inc
add
jbe
into
aas
push
test
cmp
cmp
sub
cltd
push
pop
ret
dec
sub
out
lret
and
insb
aas
les
scas
or
inc
outsl
mov
cs
add
js
push
fmull
scas
fstp
cmpsb
out
scas
xchg
xchg
call
popa
movsb
incl
inc
in
les
push
aam
popa
out
mov
ret
push
inc
mov
adc
out
mov
jo
mov
aam
daa
jmp
sti
adc
loop
adc
ljmp
movl
mov
jb
push
scas
arpl
shlb
xor
mov
mov
or
xor
jns
int
or
adc
sub
cmp
or
inc
stc
or
aaa
and
hlt
inc
mov
xor
xor
leave
mov
mov
xchg
movsb
lea
mov
cmp
ss
cmp
iret
inc
mov
das
enter
and
sar
mov
jle
ficoml
movsl
mov
cmp
repnz
jne
out
cmp
dec
je
cmpsb
mov
popf
shlb
pop
shlb
push
ds
jle
jecxz
out
push
shr
out
imul
daa
and
popf
fs
mov
icebp
into
pop
add
stos
lods
cmpb
jmp
fldl
push
xchg
lods
cmp
outsl
xchg
int
or
mov
int3
shll
lods
outsb
cld
push
stc
jl
outsl
cmp
out
inc
imul
jb
in
aad
or
adc
cmp
push
mov
mov
pop
adc
aam
cmp
and
xor
insl
test
xchg
testl
dec
fucomi
aas
xchg
mov
inc
iret
and
insb
jnp
pop
popa
pop
pop
inc
dec
sub
arpl
ds
jne
xchg
fwait
cmp
aas
mov
mov
int3
sarb
insl
inc
sub
arpl
imul
fsubp
mov
loopne
mov
mov
ret
xorl
adc
cwtl
dec
lcall
pushf
mov
cmp
adc
adc
jg
add
cld
movb
sbb
arpl
fs
gs
insl
jbe
mov
push
cmp
pop
cs
sub
subl
addl
jmp
mov
ds
jl
push
out
out
add
sub
sbb
jns
cmpsl
dec
push
xlat
jge
mov
hlt
mov
pop
mov
test
sbb
inc
sbb
outsb
sub
pop
jge
lock
js
pop
ret
push
aam
mov
outsl
daa
or
jg
popa
daa
dec
sub
jbe
in
or
test
mov
aas
pop
adc
lret
fisubrs
pop
lret
fmuls
sub
or
into
add
mov
xchg
mov
add
jge
push
and
js
outsl
icebp
push
repz
adc
call
mov
pop
test
pxor
test
push
cltd
ja
sbb
pop
pop
xchg
xchg
add
jne
pop
sub
xor
pushf
scas
push
bound
pop
fwait
pop
cmc
sub
push
and
dec
add
adc
xchg
push
xor
cmp
out
or
js
popf
sahf
sbb
dec
not
xchg
out
xor
jbe
sahf
imul
push
jp
sbb
stos
enter
lock
adc
sti
sbb
add
inc
mov
pop
mov
push
stc
rorb
test
cmovs
lods
je
sbb
arpl
out
jns
icebp
jmp
dec
cmp
xchg
sub
cs
loop
cwtl
nop
dec
aad
or
mov
inc
fsubrl
fsubrl
bnd
xchg
jne
ja
sbb
fstpl
pop
mov
mov
cli
aas
popa
lods
cmpsl
ret
dec
lock
les
cmp
jae
jbe
mov
pop
fisubl
imul
sub
jge
negl
test
push
add
les
xchg
jge
sbb
mov
andb
shll
out
aam
ja
out
cmp
popf
push
push
iret
imul
cmpsb
shll
mov
rcll
clc
pushf
sbb
insl
or
push
xor
mov
inc
aas
push
sub
loop
sub
aaa
adc
mov
xor
cmp
sti
add
daa
cs
or
xor
push
pop
negl
pop
ret
cltd
std
icebp
loopne
cmp
fnstsw
ss
mov
xchg
pop
or
adc
sub
mov
dec
shll
loop
jo
push
pop
sub
test
je
jne
shrl
out
adcl
fwait
out
faddl
fcompl
test
nop
lea
lds
xchg
lock
loope
sub
sbb
push
aam
sbb
push
ficomps
ja
fisttpll
pop
mov
push
loopne
lret
mov
ss
fldt
inc
fldt
fldt
xor
fldt
lods
xchg
dec
cmp
mov
xchg
in
sahf
cmp
xchg
jnp
xchg
gs
pop
fstpt
pop
in
out
rclb
dec
pop
into
imul
xchg
push
imul
outsb
cmp
add
jns
fnstcw
pop
cmp
dec
inc
inc
mov
insb
mov
adc
sub
stos
ret
pop
dec
and
fnstsw
mov
sbb
flds
enter
push
and
or
mov
loope
inc
jne
inc
sbb
enter
cmp
pop
xchg
sbb
sahf
add
jae
xor
or
js
rcll
xor
dec
ret
sub
jle
mov
fiaddl
repz
dec
jne
mov
and
xor
push
push
js
in
shlb
out
lock
mov
out
dec
enter
dec
aam
jle
cmp
jge
sub
xchg
sti
cli
mov
push
sub
stos
pop
jo
push
mov
pop
shll
and
enter
test
xchg
or
cmp
movsl
lret
lret
jp
or
sub
loop
sub
push
in
pop
or
lret
jns
pop
mov
das
or
xchg
roll
gs
push
repnz
arpl
adc
push
icebp
imul
stc
pop
xlat
mov
push
add
sub
jp
jns
decl
or
in
xor
or
pop
sub
or
xlat
cmpsl
add
sti
sti
icebp
fstp
stos
adc
or
fcoml
in
xchg
sti
mov
jb
mov
mov
loop
mov
enter
mov
out
faddl
inc
and
ljmp
rcr
pusha
loop
push
jb
inc
pop
mov
aad
test
addl
push
sbb
push
fstpl
jbe
mov
mov
test
lods
out
addl
dec
js
jno
sub
pushf
xchg
add
in
add
out
sbb
je
sub
aas
sub
ja
gs
jmp
ds
js
insl
orl
xchg
repz
and
and
loope
hlt
lods
push
arpl
popa
sub
push
add
ss
inc
loopne
mov
add
ret
imul
cltd
push
scas
cltd
lock
outsb
xor
insb
fsts
mov
pop
stos
mov
add
lds
pop
pusha
mov
aam
mov
dec
in
in
cmp
jne
adc
add
nop
std
mov
or
scas
pusha
pop
inc
mov
xor
mov
dec
shll
dec
sbb
sahf
into
imul
popa
in
repz
push
int
mov
sbb
test
lea
sbb
mov
mov
dec
repz
mov
mov
mov
fiadds
leave
aas
out
sbb
test
mov
fistpll
push
cltd
xchg
mov
pop
popa
mov
mov
call
xor
mov
in
rcr
clc
out
sti
jg
clc
push
sbb
stc
and
pop
or
xchg
test
ljmp
mov
int
push
or
arpl
pop
xchg
mov
sahf
mov
popa
mov
jo
icebp
pusha
ja
jo
jle
mov
in
or
outsb
mov
sub
sbb
xor
cli
pop
mov
push
insb
add
fildll
out
jnp
lret
mov
add
push
bound
cmp
push
popa
test
mov
dec
cmp
mov
rorl
pop
mov
xor
scas
push
lret
xchg
mov
outsb
fstps
sub
push
flds
push
aas
mov
popf
mov
pop
dec
loope
add
stos
outsl
jecxz
ret
push
jno
add
in
lea
mov
push
jle
aad
dec
sbb
lret
sub
test
popa
sbb
xchg
sbb
es
or
pop
cmp
and
outsb
or
je
xchg
mov
stos
rorb
loop
or
cwtl
adc
aas
cmc
cltd
cmpsl
push
adc
mov
adc
pop
nop
gs
adc
mov
lret
repz
and
jg
adc
cmp
sub
addb
adc
jecxz
jbe
adc
xchg
or
cmpsl
cmp
cmc
rorb
iret
xor
mov
sarl
mov
aad
xorl
sub
dec
add
mov
add
sbb
jne
gs
xchg
scas
jno
jmp
dec
repz
and
loop
cltd
and
or
pop
push
dec
aas
ret
sti
dec
testl
popa
dec
xchg
inc
sub
dec
popf
addl
loop
test
sub
add
lods
and
sar
add
xchg
cltd
mov
pop
jae
pusha
fcoms
jge
out
ja
or
pop
jnp
push
xor
dec
or
iret
cmp
dec
cmp
or
loope
dec
xchg
xorl
mov
insb
sub
and
ljmp
push
adc
int3
jne
xchg
dec
out
mov
jae
stos
in
loop
mov
mov
xor
cmp
repnz
pop
sbb
xchg
outsb
jb
stos
fidivs
sbb
std
xchg
pop
insl
xchg
xor
jge
push
jbe
popa
hlt
jmp
repz
negb
or
lret
outsl
adc
cmp
lods
pushf
insl
sti
jae
into
aam
jo
mov
lock
into
mov
mov
pop
jns
xor
adc
pop
xchg
xchg
js
imull
dec
fucomi
neg
dec
pop
fidivs
cmp
mov
xchg
dec
cld
jo
dec
fnstcw
lret
inc
cmp
shll
fwait
stos
fistps
jne
pushf
sub
sti
jno
pop
fisubrl
cmpsl
cmpsb
inc
push
mov
xchg
leave
in
test
idiv
scas
and
data16
mov
mov
jmp
jae
cmpsb
inc
repz
dec
lods
lret
bound
fstl
fisttpll
adc
les
jo
mov
dec
jmp
test
push
or
lock
lds
and
mov
and
pop
dec
jb
jns
xchg
or
xchg
add
mov
push
mov
outsb
les
sbb
nop
mov
xchg
cmp
daa
or
xor
ds
call
movsl
mov
dec
push
xor
and
and
into
sar
cmp
outsl
or
mov
push
into
movsb
or
xor
loopne
in
fdivs
aas
and
mov
movsb
rcrl
jle
mov
les
cs
outsb
int3
scas
leave
test
pop
mov
test
add
dec
stc
mov
push
divl
mov
lods
popa
clc
and
jl
sub
or
push
push
cwtl
test
rcll
lret
imul
mov
pop
mov
inc
cmpsl
sti
les
inc
ljmp
xchg
repz
jo
outsb
or
jp
out
cs
bound
or
mov
xor
xor
pusha
xchg
into
fs
ss
fadd
xor
jno
loop
mov
pusha
cmc
fiaddl
rcll
inc
fwait
sub
imul
xchg
lods
dec
pop
mov
xchg
fucompp
adc
mov
lcall
cld
push
icebp
cmp
cmp
cmp
mov
add
cli
cmp
inc
sbb
adc
dec
sub
dec
sub
mull
movsl
cld
fdivrs
pop
push
xchg
jo
fwait
clc
and
mov
orl
aaa
call
xchg
sub
icebp
in
jnp
and
sub
fldl
xlat
js
sub
lret
sbb
cmc
cmp
push
pop
xor
dec
out
fwait
cmp
in
push
ret
adcl
movsl
ds
je
xlat
es
mov
int
clc
imull
mov
fsubrl
add
or
notl
in
push
test
pop
mov
sti
arpl
pushf
push
xchg
js
mov
hlt
aas
mov
xchg
nop
or
lds
test
sbb
popa
das
test
data16
fwait
scas
jmp
add
fld
mov
in
aam
and
test
loop
loopne
mov
sub
test
sbb
dec
push
jmp
pop
ljmp
ss
push
inc
test
mov
jp
adc
mov
and
cld
mov
sbb
popf
lea
mov
popa
pop
jge
or
push
jmp
call
stos
fildl
mov
jmp
add
ljmp
add
xchg
pop
jne
adc
leave
lea
arpl
mov
test
imul
adc
gs
ret
jmp
adc
lds
scas
mov
int3
mov
xchg
lds
jmp
repnz
jp
enter
inc
xchg
push
dec
or
dec
hlt
loopne
xor
clc
mov
insl
xor
pop
adc
fistpll
frstor
dec
pushf
daa
scas
fucomip
imul
jns
addr16
aam
lds
lret
in
insl
stc
insl
fisubrl
and
iret
pop
enter
jg
mov
aad
sub
mov
movsb
push
out
cmp
xorb
xchg
inc
scas
mov
mov
and
ret
xchg
lods
cmp
je
sti
push
pop
shrl
pop
mov
mov
cli
std
daa
xchg
sub
xchg
inc
cmpsl
mov
fldcw
and
lea
inc
mov
cmp
mov
or
repnz
sub
je
mov
xlat
iret
cmpsb
xchg
mov
test
idivb
inc
nop
xor
and
jl
sti
ss
dec
jge
das
cmp
jb
psrld
aam
ficoml
xchg
push
push
jnp
xor
xlat
push
inc
shl
xor
xor
nop
stos
and
ljmp
out
clc
xor
jmp
mov
testb
pop
scas
add
pop
jle
inc
iret
lods
mov
jno
sub
mov
push
stos
icebp
jecxz
repz
cmp
push
pop
cmpsl
push
cmp
pop
dec
mov
in
ss
lcall
jo
subl
outsb
push
sarb
test
inc
jp
fdiv
dec
jmp
not
clc
mov
inc
imul
mov
adc
in
arpl
insb
pop
aam
out
sub
and
mov
push
lahf
bound
loopne
subl
fiadds
xlat
pushf
mov
fldcw
sti
adc
jbe
cmp
cmp
imul
test
in
push
mov
sub
and
ja
ja
sbb
pop
jb
inc
mov
push
imul
fstpt
mov
arpl
and
mov
jl
sub
aam
dec
xchg
jg
test
aaa
rorl
cmp
sub
js
arpl
test
mov
sti
and
lods
xchg
jl
mov
cmp
jns
jnp
sub
in
dec
mov
arpl
xchg
out
stos
shl
dec
mov
les
sbb
cmpsl
adc
adc
sbb
add
insb
daa
sbb
je
inc
dec
stos
fst
ljmp
sub
pop
je
xchg
imul
push
adc
pop
test
dec
adc
sti
push
out
outsb
daa
xchg
cltd
sbb
pop
mov
movsl
add
jle
icebp
inc
dec
push
les
add
inc
mov
xorl
push
adcl
adc
lods
mov
cs
add
shlb
loope
roll
dec
cld
push
rcrb
mov
adc
mov
jmp
or
lods
mov
in
call
scas
jnp
adc
sar
mov
and
cmp
cmp
mov
xchg
xchg
jb
xchg
in
xor
mov
push
mov
push
sahf
pop
pop
sahf
adc
xor
aam
dec
dec
rorl
mov
jg
cs
mov
sarl
rcrl
adc
mov
or
add
jge
cmp
jmp
imul
into
imul
sub
in
and
mov
push
push
mov
into
sahf
movsb
jg
cmp
test
sbb
ja
mov
popl
pop
lret
sbb
mov
jbe
pushf
mov
sub
jae
xchg
rdpmc
dec
inc
lcall
mov
repz
pop
insl
pop
in
movq
aad
push
mov
insl
fldcw
mov
insl
add
subb
stos
mov
push
jns
jns
leave
xor
lods
les
xchg
mov
push
sub
in
in
test
rol
insb
or
xor
cmp
fwait
dec
pop
sbb
adc
jbe
mov
mov
stc
aad
stc
sbb
cwtl
dec
jae
pop
push
out
xor
test
ds
ljmp
cmp
les
xchg
sub
mov
outsl
repz
js
in
orb
mov
pop
bound
lock
data16
pop
dec
xor
int3
jo
pop
cmovl
jae
jbe
dec
mov
add
or
and
enter
out
mov
mov
jnp
pop
xor
dec
cmp
ljmp
test
or
xor
ds
add
or
insl
push
movsl
insb
and
mov
mov
xchg
nop
cmp
into
inc
loope
pop
push
loopne
push
in
sahf
sahf
sahf
arpl
iret
test
stos
jnp
data16
jbe
inc
dec
mov
adc
xchg
rorb
loop
es
sbb
orl
and
jmp
add
jbe
js
stos
out
fs
pushf
and
out
jmp
bound
hlt
lcall
icebp
mov
cmp
fstps
xchg
or
jbe
test
pop
out
mov
dec
pop
jmp
push
push
jbe
insl
outsl
lahf
xchg
fstpt
cltd
push
push
mov
fidivs
int3
mov
subb
dec
nop
dec
sub
and
and
mov
or
xor
cmpsl
or
lds
inc
movsl
and
pop
test
mov
xchg
mov
ret
hlt
daa
push
and
fstl
inc
mov
out
pop
sub
sti
lods
push
cmp
rolb
repz
or
out
mov
mov
pop
in
repz
es
movb
lahf
pusha
adc
xchg
lock
loop
rclb
mul
add
popf
test
in
pusha
cmp
out
in
inc
pop
roll
in
xchg
pop
movsb
sub
jmp
xchg
push
push
cmp
cs
popf
cmp
and
in
push
out
sahf
repz
jo
inc
pop
inc
testl
shlb
or
fldcw
test
loop
lods
push
cwtl
and
and
push
das
push
movsl
loopne
in
sti
ret
pop
mov
xchg
mov
test
add
jae
mov
mov
mov
aam
cmp
rcrb
int3
xchg
sub
jo
mov
mov
mov
xchg
leave
push
js
std
out
push
jne
add
pop
in
xchg
filds
mov
insb
push
cmp
loope
mov
shlb
adc
push
outsl
xchg
rorl
into
or
dec
push
jge
cs
inc
jecxz
jmp
jns
decl
pop
or
and
sub
and
cltd
xchg
addb
rolb
daa
pop
xchg
test
jmp
inc
xor
mov
addl
in
imul
daa
mov
cmp
and
mov
jle
and
inc
aaa
fstpt
pusha
adc
jne
lret
in
es
je
push
mov
outsl
xchg
outsl
fwait
jno
dec
and
sahf
mov
test
jmp
push
out
fucomip
inc
or
cltd
mov
out
fsubrl
ret
cltd
dec
inc
mov
xchg
mov
xor
xchg
mov
mov
pop
nop
xor
cmp
popf
loope
push
das
inc
outsl
out
mov
fsubrs
fs
sarl
rcrl
jmp
loop
imul
test
loope
lods
xchg
out
xor
repz
outsb
jnp
mov
push
sahf
jns
or
lods
hlt
imul
cmp
mov
clc
jae
mov
xlat
sbb
and
pop
daa
out
test
xor
ja
repnz
arpl
stos
mov
sub
xchg
je
inc
cmpsl
es
dec
sbb
std
sub
adc
pop
out
je
sahf
jl
call
mov
icebp
sti
fimull
mov
nop
mov
call
test
push
push
adc
mov
popf
andl
aad
lods
sub
dec
aam
subl
jle
cld
jl
fnstcw
and
fbstp
pop
ret
aas
xchg
popa
fbstp
aam
nop
or
stc
jb
sub
cwtl
cmpb
arpl
mov
cmp
inc
lahf
in
repz
push
push
push
jmp
in
xor
cli
shr
mov
add
jne
cwtl
rcr
loope
aad
push
mov
test
xchg
jecxz
fisttpll
out
test
add
stc
notb
cmp
jb
lods
push
arpl
xor
insl
in
stc
sbb
dec
push
mov
in
es
cmp
daa
nop
and
push
js
sbb
lahf
adc
fcmovbe
ja
mov
inc
repnz
mov
lock
jno
mov
jle
lock
aad
cmpsl
mov
and
xchg
ds
jge
insl
shrl
shll
enterw
out
jo
daa
lods
sbb
sbb
lods
rorb
cmpsb
add
clc
mov
ror
test
mov
and
test
pop
das
xchg
inc
pop
adc
cmpsl
jle
mov
sahf
ja
into
pushf
sahf
je
mov
fwait
loopne
cmpsb
mov
sbb
out
icebp
pop
sub
data16
adc
xor
sbb
cmp
cmpsb
pop
jge
jo
jns
outsl
ret
rolb
inc
push
dec
mov
mov
pop
movsb
ffreep
inc
cmp
aas
fs
xchg
mov
rclb
pushl
xchg
fnstcw
jbe
cmpsl
icebp
imul
inc
scas
cmpxchg
or
loop
sbb
mov
add
xor
ret
repz
lock
popf
or
clc
sub
fistpll
test
mov
or
insl
cmp
popf
sti
insl
and
add
in
push
ljmp
sbb
out
fcompl
scas
inc
in
pop
inc
xor
lcall
cltd
xchg
inc
inc
fidivs
je
imul
leave
adc
out
ljmp
mov
mov
mov
mov
gs
aam
int
lret
test
sub
sub
xchg
mov
sbb
mov
cmpsb
popa
mov
insb
push
cli
mov
repz
testb
in
pop
das
outsl
mov
fmull
push
and
push
cmp
adc
sub
out
adc
subb
lea
xchg
adcb
xchg
cmp
cmc
clc
faddl
mov
mov
aas
push
lcall
push
and
xor
xchg
inc
push
in
wbinvd
xor
xor
pop
lahf
test
push
andl
fdivrp
gs
and
and
cmp
xor
popl
out
fwait
and
cmpsb
mov
mov
outsb
xchg
mov
ret
loop
sbb
and
cld
out
dec
mov
inc
lcall
pusha
gs
sbbb
jno
xor
sti
mov
rclb
ja
sti
and
fistps
mov
testl
ja
cmpsl
or
xor
xor
lahf
jecxz
loope
and
cmpsl
sbb
add
ret
cltd
cmpsb
addb
sbb
dec
pop
push
fisubrs
imul
sub
push
xor
push
enter
daa
push
mov
arpl
or
xor
popa
js
ffree
mov
testb
outsb
mov
push
mov
xorb
mov
sarl
sbb
dec
pop
mov
test
subl
ja
mov
icebp
fists
dec
cmp
push
cmp
loope
out
popa
fs
into
rorb
jnp,pn
mov
mov
shufps
xchg
mov
inc
xor
test
sub
mov
sahf
and
cmc
aaa
and
movsb
scas
and
mov
popf
jnp
test
lret
dec
or
dec
je
xor
xor
and
js
xor
cld
mov
ss
stos
inc
jbe
sbb
pop
inc
adc
out
jae
insl
jl
dec
xor
imul
cmp
nop
test
push
push
mov
xchg
sub
and
sbb
jnp
xlat
insl
insl
imul
lcall
sbb
add
jp
cmp
ret
fs
push
add
push
insb
mov
enter
or
int3
pop
jbe
js
push
adc
call
adc
fldl2e
movsb
setl
insb
out
fldcw
mov
add
push
bound
or
dec
add
cld
clc
add
loop
cmp
and
pop
nop
jno
dec
mov
std
and
sahf
call
xchg
imulb
inc
decl
ljmp
lret
jecxz
sub
cs
imulb
test
xchg
sbb
or
pop
ret
sbbb
mov
jo
movsl
stc
mov
dec
loopne
push
mov
adc
aas
movsb
dec
xor
stc
cli
loope
mov
mov
fdivr
loopne
xchg
int3
xchg
cli
es
jg
sub
es
cmpsl
std
xlat
mov
repz
push
scas
pop
push
jns
aad
xchg
push
repz
pop
loope
leave
out
fwait
hlt
addr16
cmp
cltd
mov
mov
ret
add
jp
in
sub
scas
add
pop
idivb
lret
xlat
jns
inc
stos
cltd
sbb
jb
add
xchg
or
outsb
mov
or
inc
inc
mov
das
movsl
ret
aad
outsl
out
fcmovnbe
mov
hlt
insb
gs
nop
ret
pop
je
cs
bound
cmp
mov
rol
add
sub
ja
repz
push
mov
scas
jle
xor
mov
mov
pop
lcall
out
nop
cmp
mov
in
notl
pop
and
andl
lods
lahf
lods
aas
roll
imulb
repnz
mov
test
pop
mov
push
or
cmpsb
mov
mov
ljmp
inc
sub
push
adc
push
xor
lods
and
test
pop
ds
leave
js
mov
mov
or
call
pop
pushf
out
xchg
fwait
mov
cmp
sub
or
dec
xchg
into
jmp
jbe
loopne
aam
test
loopne
outsl
outsb
cwtl
popf
int
scas
psubb
rorb
lods
mov
sarb
ds
mov
repnz
adc
or
mov
xorb
pop
and
test
icebp
pop
cmc
test
sub
adc
xchg
sub
scas
sbb
insl
outsb
in
cli
and
int3
cmp
xchg
ss
pushf
mov
scas
mov
in
stos
mov
xlat
andl
inc
call
rcrl
adc
pop
and
jae
lods
test
lock
push
in
rclb
mov
xor
cmc
push
ja
aaa
sbb
xor
in
std
or
out
mov
mov
and
mov
cmp
addr16
xchg
or
shrb
xchg
push
call
call
negb
cmp
cmp
roll
aam
sub
lahf
xor
rcl
and
and
pop
sub
push
pop
dec
dec
cwtl
sti
lret
xor
sar
jae
es
inc
call
insl
aas
inc
pop
loopne
jecxz
fucomip
inc
dec
mov
out
push
aad
lods
std
push
and
sbb
divb
sbb
sub
movsl
sub
addl
push
adc
xchg
pop
pop
iret
in
enter
adcb
adc
repz
mov
cltd
lods
dec
sti
jmp
push
jno
xor
int
inc
sti
add
les
sbb
ficoms
mov
mov
inc
jp
in
sbb
test
sub
xor
daa
jns
sub
stc
popf
outsl
in
js
shrl
mov
int3
pop
xchg
adc
int
jae
mov
jl
mov
popa
push
and
fnsave
fadd
jge
xor
out
jmp
sub
testb
push
xor
and
push
in
cltd
xchg
sbb
out
shrb
dec
jo
gs
mov
adc
cmpsb
outsl
push
add
imul
orb
dec
inc
fstl
aad
xor
push
sub
xor
mov
call
lret
and
inc
xchg
jmp
push
sarb
lret
cmpsb
add
icebp
push
lret
xchg
aam
push
arpl
mov
and
sub
or
adc
stos
lcall
inc
mov
rcll
enter
test
jb
pop
imul
xor
inc
add
push
sbb
test
sub
stc
sbb
fisubrs
aad
lock
sbb
in
orb
ja
xor
push
sbb
push
test
in
jle
sub
mov
xchg
and
test
cmpsl
xchg
xchg
mov
aam
inc
sub
jno
jge
leave
loope
dec
mov
mov
aas
out
rorl
mov
cmpsb
insb
jmp
pop
icebp
adc
roll
mov
jl
push
inc
fcomps
mov
fimull
dec
sub
scas
lahf
stos
mov
cltd
syscall
rol
and
fucomip
jo
cmp
xor
arpl
xchg
in
lods
xor
cltd
stos
xor
les
pop
xchg
jg
sti
leave
stos
fidivrs
mov
outsb
pop
mov
in
das
nop
es
pop
xchg
cmc
adc
mov
jg
or
and
sub
lret
xor
push
ret
test
add
lods
xchg
jle
fdivr
push
cmpsb
idivl
mov
pop
mov
or
dec
out
add
cmp
icebp
loop
mov
flds
repz
cld
rorb
dec
nop
adc
push
js
scas
xchg
stos
or
mov
rcrb
das
inc
xor
xchg
or
cmp
in
stc
sbb
adc
adc
test
jno
pushf
outsb
sbb
sar
stos
fsub
loop
and
test
fnstcw
sub
int3
lahf
and
lds
xchg
adc
or
push
loopne
push
int3
or
fnstsw
dec
int
jl
incl
pop
push
jl
in
imul
idivb
push
or
arpl
dec
fs
xor
mov
mov
clc
test
xchg
pop
stos
gs
and
xchg
ret
lea
icebp
in
scas
mov
loop
mov
xchg
mov
sbb
xor
call
dec
jnp
sub
push
aam
push
inc
or
mov
adc
jp
inc
jg
adc
pop
jns
mov
sub
pop
or
aam
test
push
push
std
jmp
add
fsubs
push
sub
fwait
addr16
std
outsb
popa
test
sbb
dec
lock
divb
or
rclb
mov
or
rcl
ja
cltd
das
xchg
test
mov
mov
in
xchg
xchg
fwait
lahf
les
cld
imul
call
pop
testb
in
mov
dec
dec
sbb
pop
ja
dec
or
movsb
clc
into
fwait
sub
lret
test
ja
add
es
sub
repnz
push
faddl
and
push
sbb
inc
lahf
jnp
aaa
or
dec
test
mov
dec
or
test
cmp
xchg
jns
push
retw
xchg
in
cmp
lcall
cmp
fidivrl
repnz
jle
push
add
in
or
jnp
mov
into
aas
shlb
push
test
test
jmp
rcrl
mov
out
idiv
jae
sbb
into
gs
subb
movsl
aas
mov
es
pop
sbbl
push
push
and
cmp
jne
mov
pushf
dec
lods
sub
push
jb
frndint
and
inc
jmp
repnz
icebp
ret
mov
xor
int3
in
jne
or
sub
loop
out
rclb
shrl
cmp
movsb
pop
mov
lret
scas
mov
lods
add
push
mov
mov
jg
insb
cmp
loop
aaa
nop
pop
fstpl
inc
xadd
or
inc
sahf
or
addb
adc
push
movsl
jle
cld
mov
loop
dec
mov
dec
lcall
out
push
mov
add
push
aaa
jg
push
aaa
std
sub
add
dec
xlat
out
repnz
xchg
mov
test
idiv
test
cmp
jle
xor
call
ds
xor
xor
mov
scas
dec
and
bound
fisttpl
mov
scas
lea
and
clc
or
xchg
fnstsw
jmp
inc
push
xchg
gs
ret
mov
cwtl
adc
out
stos
addb
push
fcmovne
pop
int
jmp
lods
mov
inc
lea
cmc
fstl
jb
int3
cwtl
jmp
cmp
push
mov
jne
out
sub
xor
fnsave
mov
ret
lds
sbb
ror
icebp
jbe
sub
pop
push
rcrb
shrb
jo
stos
test
sub
adc
lods
pop
cmp
mov
xchg
mov
push
adc
aam
jge
push
pop
push
adc
test
nop
cld
sub
fsubp
jo
movsl
xchg
lret
mov
cwtl
pop
jo
and
pusha
inc
xor
leave
push
add
out
jmp
mov
mov
sub
inc
lds
add
push
pusha
pusha
shlb
loope
ljmp
fwait
cmpsl
and
nop
sub
xor
sbb
fidivs
lock
es
hlt
dec
out
jnp,pn
cmp
das
fwait
jle
dec
mov
adc
cmp
movsl
fdivrp
push
mov
popa
mov
jb
std
or
jo
and
test
fwait
adc
push
jge
inc
dec
adc
mov
sbb
repz
inc
stos
mov
xlat
iret
cmpsl
pushf
mov
push
fldenv
cld
add
mov
sub
xchg
aam
mov
negb
xchg
fistpl
xor
push
mov
shr
push
xchg
shl
cmp
push
cmpsb
jno
fisubs
es
cli
push
adc
cmp
out
aam
or
pop
mov
mov
mov
movsb
push
out
loope
movsl
and
fnstsw
js
insb
xchg
jno
dec
mov
dec
xor
jp
and
xchg
push
xchg
data16
pop
mov
cmp
sbb
cmp
popf
fiadds
mov
subb
out
adc
adc
xor
jle
aas
sbb
scas
xchg
ds
and
mov
icebp
test
sti
mov
dec
insb
or
xchg
or
filds
push
aad
xlat
sar
push
pop
mov
add
fcomps
lds
nop
pavgw
js
or
mov
cs
inc
arpl
ss
mov
add
pop
xor
add
or
clc
das
into
and
out
or
cmpsb
pop
xor
push
addr16
jecxz
push
in
scas
cltd
xchg
add
xor
sbb
aad
call
jl
xchg
fildl
arpl
jge
aas
push
test
movsl
dec
dec
dec
pop
std
cmp
mov
outsl
mov
popf
push
call
mov
jg
or
jae
or
adc
mov
pinsrw
xchg
aaa
fsub
xchg
push
ficoml
pop
and
roll
xchg
fstps
mov
lret
cmp
inc
push
inc
adc
sbb
shlb
faddl
je
push
sub
pand
mov
repnz
add
sahf
mov
mov
fwait
pop
and
ficoml
in
jmp
lea
test
pop
push
mov
jnp
pop
aad
lret
add
sar
jo
mov
push
dec
cmp
aad
mov
mov
out
jmp
shll
push
gs
push
jno
das
popf
lea
js
int
cmp
repz
sub
cmpb
iret
mov
es
or
xchg
out
lret
jle
sbb
push
sub
lret
push
repz
lods
sub
lcall
out
push
cmp
sahf
lock
movsl
sbb
mov
add
addr16
jl
dec
mov
lret
test
pop
mov
iret
mov
test
adc
pop
or
push
repnz
and
leave
cmpsb
popf
mov
sub
mov
xchg
aad
or
lds
sbb
in
stos
mov
cli
lret
cmpsl
inc
cmc
and
push
push
sub
jo
sub
imul
add
aaa
cmp
repnz
lods
push
push
push
adc
mov
cli
mov
icebp
and
mov
sbb
sti
andl
stc
aas
adc
nop
rolb
outsb
outsl
or
pop
sub
sbb
mov
repz
lods
imul
repz
out
adc
leave
jnp
mov
cli
icebp
jbe
ds
pop
inc
nop
arpl
stos
or
push
sbb
jno
pusha
filds
dec
repnz
fadds
std
pop
arpl
mov
sub
sbb
ss
and
sbb
cmp
mov
sbb
ja
jno
jnp
mov
mov
lock
fwait
mov
incl
adc
dec
aad
push
int3
jbe
bound
stos
push
repz
cld
pusha
adc
hlt
and
in
and
add
pushw
ss
mov
bound
jge
or
jno
int3
xchg
mov
lods
in
mov
rclb
dec
push
cmpsb
mov
gs
sub
cmp
je
nop
adc
inc
loopne
dec
inc
imulb
xchg
cmp
jle
out
aas
add
push
das
stos
push
dec
mov
in
and
popf
sbb
and
insb
dec
fs
lock
sahf
enter
mov
add
cmp
inc
add
cmpsb
pop
xchg
inc
push
jg
jb
sbb
jle
in
out
xchg
fdivl
mov
inc
jno
pop
xchg
hlt
mov
test
sti
jmp
push
add
xchg
and
cmp
lret
test
and
sbb
lahf
cmp
push
push
dec
mov
push
gs
sbb
hlt
aaa
test
lds
daa
outsl
and
ret
inc
pop
je
sbb
cmpsb
mov
repz
insl
test
test
cmp
mov
dec
sarl
xor
or
add
sbb
cmp
std
inc
andl
scas
mov
sub
mov
sub
push
aaa
jns
inc
repz
stos
fiaddl
mov
fpatan
in
mov
test
mov
popf
imul
dec
push
fbstp
xchg
out
lret
push
pop
xchg
mov
daa
mov
cmp
mov
and
adc
mov
insl
daa
mov
mov
or
mov
push
aas
insb
pop
adc
inc
aam
cwtl
jns
dec
or
rorb
push
je
pop
scas
inc
les
mov
bound
aas
lock
not
xor
test
sbb
lret
inc
pushw
fs
and
inc
pop
addb
xor
leave
jecxz
sub
imul
call
mov
imul
jp
bound
addl
dec
aad
das
lods
int
test
mov
sar
out
push
cwtl
mov
in
jmp
and
jae
bound
push
repz
inc
sub
jbe
inc
or
je
orb
lahf
test
dec
lahf
push
adc
into
dec
loope
xor
pusha
mov
and
pop
sub
imulb
xchg
inc
repnz
incb
dec
movl
add
int
and
pop
jle
ret
fbstp
jecxz
pop
sbb
push
mov
insb
shrb
mov
push
adc
subl
lods
pop
xchg
jnp
inc
loope
add
in
pop
fisttpll
inc
mov
adc
jge
sbb
stos
or
sti
pop
nop
xorb
or
nop
mov
test
xchg
push
and
adc
push
punpcklbw
dec
xor
push
pop
xchg
push
inc
clc
push
adc
rcrb
aad
add
ljmp
stc
ret
fwait
cmp
push
jmp
sbbb
rcll
int
imul
cmp
xchg
leave
cld
mov
xor
jg
or
xor
and
aaa
cmpsb
or
push
lock
js
inc
repz
fists
adc
imul
aaa
mov
add
add
cmp
pop
jns
lret
pushf
sbb
cmp
pusha
mov
stos
test
mov
out
jmp
cmp
sbb
push
nop
ja
ja
ja
or
ja
mov
xor
pop
lcall
push
je
adcb
cmpsb
call
add
xchg
jl
cmpsl
mov
lock
mov
pop
mov
cmp
sub
stos
jb
jmp
xchg
mov
leave
arpl
repz
mov
add
dec
xchg
movb
out
sbb
cmp
sar
enter
jp
lods
pop
mov
sub
outsb
movsb
std
adc
xor
arpl
pushw
or
xor
xchg
sub
jae,pt
push
xchg
pusha
xor
sbb
ljmp
sbb
jl
pop
dec
jmp
xor
inc
loop
ret
loope
mov
add
mov
xchg
sub
pop
mov
lock
outsl
mov
pop
xchg
enter
rorb
sti
mov
xchg
jbe
fadd
movsb
or
es
or
gs
add
cltd
lock
mov
testb
mov
cltd
dec
int3
push
hlt
add
outsb
cmp
outsl
fsubl
cmp
cmp
mov
sub
inc
jmp
test
pop
adc
mov
inc
pop
xchg
jb
mov
mov
sbbb
pop
shr
lcall
inc
inc
dec
mov
mov
enter
aas
std
jp
jp
mov
pop
cld
roll
pushf
pushf
lock
inc
dec
dec
jecxz
add
pop
push
aam
jns
inc
xorb
mov
scas
jp
sub
repnz
mov
adc
out
xor
mov
sub
xlat
sbb
pop
das
iret
push
cltd
pop
cli
push
jp
mov
stos
ret
scas
push
pop
ja
add
repz
jnp
out
mov
xchg
xchg
fistl
inc
rcrb
repnz
pop
xor
ds
pop
mov
pop
inc
cmp
popf
and
fisubrs
pop
cmpsb
mov
mov
iret
jmp
or
sub
cmp
aas
sbb
retw
imul
pop
jg
in
add
shl
cmpb
push
adc
scas
ja
dec
xor
gs
pop
ror
dec
adc
jle
popf
ds
test
dec
sub
rcll
rcll
negb
sysret
pop
dec
outsl
push
iret
mov
les
fiaddl
test
jbe
loopne
jne
std
adc
movsl
in
mov
dec
std
rcrb
xchg
cmpsb
sarl
push
sbb
cmp
out
pop
jns
ds
repz
addr16
ss
jnp
sarb
sti
enter
mov
pushf
ret
push
movb
clc
addb
stos
or
dec
adc
cs
leave
push
jne
mov
lods
gs
jne
adc
push
aam
xchg
jecxz
pop
cmpsl
popa
jns
pop
sbb
stos
jb
pop
push
js
jge
xorb
inc
mov
and
pop
shll
push
xor
adc
pusha
inc
loop
inc
into
dec
mov
pop
add
jno
jg
mov
xchg
gs
jmp
push
in
add
dec
cmc
scas
jmp
pop
sarl
mov
aaa
adc
loope,pt
ficoml
cltd
rolb
xchg
iret
hlt
popf
pop
cmc
sbb
jns
shlb
dec
xor
mov
fcom
sbb
fwait
addr16
pop
aaa
jnp
adc
int3
cli
cmp
mov
fsubs
xor
loop
outsb
fdivrp
lahf
adc
bound
leave
jne
jl,pn
inc
jo
les
ja
les
sub
loope
mulb
mov
sbbb
mov
mov
pop
scas
jecxz
fstl
xchg
adc
hlt
aad
push
mov
mov
test
and
jae
xlat
sbb
push
dec
into
cltd
insb
lret
lods
imul
ficoms
incb
testl
mov
in
adc
jge
jl
pusha
mov
push
pop
mov
ja
mov
test
in
cmp
cmp
aam
je
jo
mov
fidivrl
inc
dec
fsubs
ficoms
bnd
xchg
out
jge
dec
dec
adc
xchg
fnstcw
cmp
mov
cmpsb
popf
scas
lods
stos
push
adc
cld
sbb
mov
pop
bound
arpl
mov
enter
pop
sub
lahf
mov
sub
jno
jl
jno
xor
and
out
aad
cmc
stc
ljmp
movsl
cmp
bound
pop
test
jp
pop
fwait
push
push
or
lahf
pop
and
xor
fimuls
insl
and
xor
dec
enter
dec
and
jno
sahf
pop
inc
adc
pop
leave
gs
cli
das
push
push
pop
stos
jge
fildll
cmp
in
ret
les
push
fldl
imul
inc
dec
iret
jo
sub
push
jns
inc
repz
pop
stc
jne
push
add
and
addr16
test
sub
sarl
xor
push
mov
pop
sbbl
xor
fcoms
ret
inc
dec
pop
xor
or
dec
adc
scas
andb
mov
sti
scas
lods
lcall
in
jb
or
cmpsb
loopne
les
sbb
mov
ds
sub
ficoms
adc
mov
cwtl
std
add
jno
jno
aad
xlat
sub
inc
push
jmp
imul
outsl
sbb
xchg
sub
xor
out
or
sbb
jae
insl
dec
and
pop
ja
test
inc
pop
adc
in
inc
inc
mov
notb
mov
or
xor
nop
adc
mov
repnz
mov
scas
repnz
daa
lods
pop
mov
popf
sub
ret
mov
xchg
pushf
or
push
dec
pop
inc
test
and
fs
sub
push
or
and
arpl
cs
dec
out
fcmovnu
mov
ret
push
adc
adc
mov
repnz
loope
sbb
cmpsl
add
adc
pop
dec
jb
test
int3
push
push
cmpsb
jns
test
outsl
and
rolb
pushf
ret
movsb
test
sbb
fistpl
xchg
shr
nop
test
or
xchg
insl
ret
fstpt
or
lods
out
in
imul
ss
mov
cmp
add
imul
push
fidivrl
pop
clc
push
dec
or
clc
imulb
ret
mov
lods
rolb
fsubr
sti
push
test
dec
push
jmp
lret
add
dec
outsl
dec
and
mov
aas
lret
push
lea
push
or
cmpb
lock
push
inc
push
add
pop
push
mov
mov
mov
js
aad
sub
mov
and
fiaddl
nop
jl
in
lock
in
xchg
test
outsl
pop
jnp
repnz
pop
fisubrl
jo
mov
adc
subl
mov
adc
mov
dec
xor
add
dec
sub
fmuls
dec
xchg
jecxz
push
in
lret
inc
sbb
test
pop
repnz
jl
lcall
test
mul
outsb
push
ds
or
fisubrl
repz
push
xchg
mov
popa
adc
in
adcb
mov
cmpb
push
cmpsl
gs
cmp
int3
inc
imul
pusha
pop
sub
sub
and
mov
or
and
movb
add
and
dec
mov
popa
dec
xor
int
scas
jg
cmp
push
jbe
mov
test
mov
lock
daa
adc
ficompl
sub
filds
hlt
in
pop
sbb
pop
and
icebp
fdivs
loopne
and
inc
jmp
mov
push
jg
imul
jmp
sbb
xorb
repnz
adcl
cmc
mov
repnz
xchg
addr16
push
in
test
cmp
pop
pop
shr
sub
dec
sar
sbb
std
sbb
add
pop
push
data16
cmp
or
incb
fiadds
lcall
mov
les
icebp
aaa
out
std
or
imul
adc
movsb
push
stos
xor
movsl
sti
mov
sbb
add
add
pop
inc
mov
mov
jbe
ret
popa
lods
daa
dec
aam
cld
in
mov
inc
or
sarb
cld
daa
sub
out
gs
cmp
mov
mov
lcall
jae
mov
pop
leave
mov
xchg
sub
sbb
inc
push
mov
sub
mov
testl
and
cmc
pop
sub
pop
push
icebp
xchg
or
sub
push
sbb
xor
fdivrs
icebp
pop
es
inc
sbb
arpl
mov
push
ds
fists
mov
in
outsb
hlt
loope
sub
jmp
sub
mov
jns
repnz
and
add
je,pn
xchg
sbb
scas
jmp
mov
aam
xchg
rcrb
pop
fwait
nop
outsl
daa
push
and
clc
lahf
xlat
push
ror
mov
das
add
cmp
or
inc
sbb
ja
xchg
int
sbb
mov
mov
xchg
inc
sti
pop
push
sub
mov
fs
ja
jecxz
jnp
push
sbb
pop
adc
mov
inc
xchg
sub
loopne
dec
into
jmp
popa
loope
mov
incb
out
ja
mov
mov
pop
mov
cmp
dec
inc
xor
out
sbb
arpl
cmp
das
jb
sbb
in
mov
xor
fsubrl
sti
lods
or
push
std
es
xchg
xor
sub
add
xlat
push
xchg
push
xor
dec
repz
sbb
in
inc
and
iret
pushf
shlb
cmp
jecxz
fwait
sahf
jb
adc
scas
roll
and
stc
push
iret
aad
adc
xchg
aam
out
or
fistpll
pusha
inc
pop
nop
sti
push
loop
enter
xlat
scas
cs
sub
jae
inc
xchg
test
sbb
adc
jle
push
fwait
loope
int
stc
cs
push
arpl
xorl
jbe
mov
stos
mov
mov
pop
test
clc
fildl
cmc
jbe
faddl
mov
mov
outsb
bound
sbb
icebp
lds
out
xlat
jbe
push
js
cmp
xchg
cld
push
pushf
testb
cmp
inc
or
popf
data16
xor
movsl
mov
aam
adc
xor
scas
dec
sbb
test
nop
inc
mov
bound
cs
cmc
and
int3
in
push
jnp
push
bound
xor
fcmovnu
mov
jmp
mov
cwtl
xor
dec
dec
sub
mov
rorl
es
add
push
fdivr
std
sub
cmp
push
xchg
xchg
insb
mov
enter
pop
add
aas
adc
mov
inc
or
inc
imul
xchg
adc
cmp
pop
pop
sbb
int3
mov
push
aas
sahf
hlt
jl
mov
es
push
out
dec
loope
daa
aam
insl
and
and
push
push
out
lahf
bound
rcll
test
cs
mov
and
mov
sub
pop
add
dec
bound
jns
mov
notb
jge
mov
pop
sbb
push
jb
sub
jno
in
cmp
lret
cs
or
push
fwait
and
inc
xor
iret
fs
sbb
dec
add
cltd
jmp
inc
xchg
mov
into
mov
cmp
incb
aad
bound
call
jge
jb
xor
fistpl
int
jecxz
mov
mov
and
iret
mov
pop
rcr
inc
pop
mov
js
jae
add
cmp
loope
pop
jl
mov
xchg
inc
test
add
mov
jne
fadd
gs
jge
and
or
pop
fildl
xor
mov
xor
inc
xor
js
fsubrs
ficomps
jo
ljmp
jbe
dec
fwait
mov
add
sarb
pop
stos
test
stos
shll
pop
daa
sub
mov
out
mov
lods
adc
or
divl
adc
stc
aas
jb
ljmp
add
cmp
jnp
andl
or
xor
cwtl
je
jno
jge
aas
fmul
adc
mov
cmp
mov
cmp
mov
mov
lods
jg
test
mov
mov
push
rcl
pop
add
push
push
push
sbb
scas
jg
mov
mov
loope
ret
sub
push
adc
mov
push
fistpll
xchg
test
mov
push
push
mov
inc
sub
out
push
imul
gs
aas
rol
movsl
add
inc
mov
scas
repnz
mov
xor
lods
dec
sti
fwait
bnd
jecxz
jb
dec
outsl
and
ja
xchg
mov
mov
fcmovnu
leave
push
cli
ss
repz
arpl
fsub
inc
aaa
lret
repz
lret
sbb
clc
and
fwait
inc
cli
push
xor
and
add
out
push
jl
in
cmp
in
push
add
cwtl
push
cltd
lods
and
mov
jnp
repnz
sub
dec
gs
lods
ds
insl
xor
repnz
push
fisubl
mov
rcl
scas
testl
pushf
scas
pop
loop
push
jae
cltd
inc
jb
push
lret
mov
push
push
add
mov
adc
cmc
or
dec
adc
mov
jl
mov
mov
jb
dec
adcb
push
ror
mov
ret
cmp
inc
or
sti
ljmp
cmp
push
into
mov
lods
adc
push
cmpsb
clc
pop
inc
and
jb
enter
or
add
lcall
inc
push
sarb
sub
fcomps
scas
ret
fsubrs
pop
adc
in
outsb
dec
or
push
inc
shl
jno
mov
adc
clc
mov
jmp
stc
fsts
and
sbb
push
cmpsl
scas
je
pop
xchg
lret
add
dec
push
rclb
das
sub
imul
xor
xor
mov
push
adc
jg
mov
sbb
mov
lret
fcompl
int3
push
aam
jns
mov
in
push
daa
js
push
loop
push
shrl
int3
mov
add
out
dec
jp
nop
hlt
sub
loop
ror
negb
aad
sarb
bound
fs
cmc
inc
jl
inc
pop
rcrb
push
xor
mov
inc
inc
jbe
loope
or
pushf
cli
mov
xchg
ds
and
cld
pop
push
add
xchg
or
ja
sub
lahf
nop
mov
push
push
push
shlb
daa
jne
mov
rcrl
xchg
adc
cmp
sbb
push
pop
cmc
repnz
mov
aam
stc
jle
inc
pop
push
lcall
add
icebp
pop
enter
push
lea
dec
mov
ret
jae
or
and
adcb
daa
jae
xchg
sbb
mov
loop
dec
cs
sbb
jle
push
sub
mov
inc
mov
je
xlat
or
icebp
cmpsl
cmp
jo
xchg
push
mov
add
ror
test
out
out
push
fistpll
out
mov
xor
jg
fldenv
bound
add
shlb
and
sub
push
dec
mov
fistl
add
sub
fsub
sbb
cmc
int
adc
subb
icebp
test
and
lcall
add
mov
pop
hlt
mov
jge
xchg
push
lret
jo
add
jb
dec
dec
pop
out
nop
push
pusha
test
and
cltd
dec
nop
cmp
or
pop
arpl
inc
mov
mov
jns
ret
fcomps
push
js
pop
push
jge
sub
sbb
stos
inc
or
adc
inc
mov
inc
cmp
or
mov
jnp
test
out
sbb
outsb
mov
popa
mov
xchg
jmp
or
jp
cmp
in
fnclex
mov
sbb
push
ss
mov
mov
add
xchg
add
pop
add
in
ret
jl
xchg
rclb
mov
fimuls
inc
repnz
mov
cmpsb
and
sbbl
addl
in
mov
cmp
cli
ja
pop
pop
sbb
and
ds
iret
jmp
in
nop
xchg
mov
cld
out
push
call
xchg
add
cmpsl
sbb
adc
pop
and
scas
adcb
jp
inc
inc
xchg
aad
jge
jmp
and
call
dec
xchg
nop
aam
je
jnp
cmp
add
mov
lds
xor
xchg
mov
cmp
sbb
std
push
pop
shrl
hlt
rclb
inc
repnz
rclb
mov
icebp
mov
xchg
outsl
pop
adc
mov
or
adc
ljmp
jno
insl
or
cmp
mov
xchg
jle
cmpsl
sub
outsb
push
dec
mov
inc
aas
fldenv
mov
stos
pop
aad
and
cli
iret
mov
loop
push
lahf
cmp
cmp
imul
insb
pop
in
int
shlb
pop
cwtl
or
test
inc
push
fstpl
and
vminss
ret
jns
arpl
cmpsb
push
push
push
call
ds
test
xchg
jb
and
fyl2x
out
mov
adc
gs
fsubr
mov
cmp
outsl
unpcklps
jle
adc
inc
mov
xchg
and
cmp
ret
and
pop
dec
adc
pop
mov
or
imul
sub
jae
dec
sbb
leave
test
int
imul
add
inc
adc
fwait
sbb
adc
test
movsb
bnd
dec
mov
jmp
cmpsl
cmp
xchg
addr16
jge
lock
lods
mov
rcll
jb
loopne
mov
cmpsl
pop
out
cmp
mov
ja
mov
mov
mov
sti
ret
pop
mov
test
loop
pop
popf
adc
sarb
cli
xor
fs
adc
sahf
and
lahf
test
daa
out
cmp
loope
fcmovnb
and
cmc
clc
inc
sbb
and
push
test
fld
push
rcr
sahf
addr16
leave
add
mov
mov
data16
icebp
mov
imul
xor
cld
scas
gs
test
mov
xor
and
shrl
cmpsb
test
out
dec
in
and
daa
sbb
xor
push
dec
mov
cmp
mov
jo
lods
shll
pop
dec
cs
add
cltd
sub
adc
lods
in
or
sbb
and
inc
in
xor
jo
insl
push
lock
dec
xlat
and
dec
shl
and
je
pop
fcompl
jge
jb,pt
fnsave
cmp
test
or
mov
sbbl
jp
and
pop
sbb
in
rorb
shll
jns
cs
pop
mov
repz
cmp
pop
cld
fists
testb
dec
sti
rorb
mov
and
jle
dec
add
inc
adc
sub
das
jg
dec
test
mov
popa
pop
pop
xchg
lret
and
gs
push
adc
repnz
and
inc
dec
jo
sbb
clc
ret
inc
jle
jns
cmp
jnp
mov
cltd
dec
push
jecxz
and
lods
push
pop
sbb
out
cmpsb
add
xor
push
push
push
lea
je
rclb
sbb
push
dec
ds
fisttpl
popf
add
out
into
push
or
fucom
imul
mov
pop
mov
int
push
xchg
pop
push
loopne
mov
jge
sarb
clc
lahf
cmp
push
inc
jno
cmp
jecxz
push
jle
rcrl
push
push
pop
fs
inc
lea
pop
loope
stc
cmp
lahf
jae
add
mov
popa
cltd
mov
jns
ds
fisttpl
inc
xchg
pop
arpl
imul
mov
fwait
inc
subl
bound
clc
xor
cmpsl
lcall
lea
jnp
jge
push
iret
ds
or
pop
pusha
jb
cmp
enter
out
xor
xchg
mov
imul
call
mov
lods
sbb
mov
shlb
mov
test
scas
dec
cwtl
jmp
jg
jne
mov
int3
push
data16
pop
push
into
pop
shrb
out
pop
xor
mov
cmp
enter
inc
mov
inc
sub
cld
enter
jmp
pop
inc
mov
aas
jp
insl
sbb
mov
out
test
mov
test
mov
xor
xchg
ret
jmp
pop
fimull
jl
outsb
mov
jg
in
dec
iret
insb
push
enter
inc
cli
push
or
sti
filds
mov
mov
sub
mov
xchg
push
mov
jl
cmp
dec
test
leave
mov
adc
sbb
std
test
outsb
pop
xchg
adc
popa
loop
mov
loop
jl
pop
aas
das
data16
xor
test
mov
and
jbe
lock
sub
xchg
inc
mov
imul
sub
mov
and
inc
mov
pop
mov
sub
jl
mov
insl
inc
sarb
movsb
sarb
mov
sbb
aad
mov
test
scas
adc
mov
fistpl
adc
add
xchg
movsb
and
idivb
bound
scas
pop
shrb
xor
sub
pop
js
inc
pop
outsb
sahf
xchg
nop
aam
adc
adc
ret
es
inc
xor
adc
jns
mov
pop
adc
mov
xchg
xor
fs
pop
cmp
dec
dec
incb
cmp
cmp
sbb
mov
sub
mov
shrl
popf
mov
divb
roll
mov
mov
xchg
and
jp
xor
push
movsb
scas
shll
jns
push
inc
test
mov
stos
imul
xor
or
push
mov
push
push
xor
fnsave
iret
jb
push
sub
ficompl
js
cmpsb
andb
notb
ss
int
clc
sub
and
ret
cmc
push
xor
cmp
add
int
cmp
pop
pop
push
imul
lahf
jl
or
mov
inc
cld
lea
les
rorb
add
jne
ds
push
inc
fisttpl
bound
pop
clc
xlat
xchg
add
mov
ljmp
pop
and
pop
loope
arpl
in
insb
bnd
xchg
add
fwait
in
inc
daa
push
loope
xchg
and
dec
addr16
lahf
mov
outsl
enter
js
mov
push
std
test
loop
mov
cmp
jns
test
ds
mov
repnz
sbb
and
adc
outsl
cmp
out
add
pop
dec
mov
je
jne
pop
adc
scas
sahf
and
push
inc
rorl
mov
mov
jg
std
jns
pop
adc
insb
test
notl
mov
xlat
test
inc
ss
lea
xor
push
dec
pop
loope
pop
cmp
sbb
movsb
scas
cmp
inc
popf
xor
pop
std
xor
lcall
inc
iret
pop
pop
imul
cmp
out
insb
mov
out
adc
scas
and
fs
or
aaa
aad
arpl
push
lods
hlt
push
push
testl
lret
and
not
lods
movsl
cltd
mov
dec
jo
jp
mov
fstps
mov
mov
mov
jle
add
ljmp
popa
nop
shrl
and
pop
repnz
cmp
sub
adc
adc
cmpsb
out
mov
jmp
mov
pusha
das
insb
jmp
stc
loop
mov
aas
push
xor
sub
in
loope
xor
jno
pop
adc
push
sbb
and
hlt
fwait
or
jmp
outsb
fs
cwtl
cld
mov
jmp
mov
lods
push
sbb
adc
push
ficompl
std
ret
out
mov
imul
pop
loope
mov
inc
sti
cmp
dec
and
cli
lock
arpl
and
jg
cmp
xchg
sbb
dec
xlat
mov
out
jmp
int
les
insl
jmp
push
jno
lock
adc
rcrb
mov
xchg
push
push
notb
lcall
add
in
fsubs
push
out
cli
pop
xchg
pop
or
aas
xor
mov
dec
jl
mov
out
mov
pop
sbb
mov
mov
call
fisttpll
cmpsl
lods
fs
xchg
lahf
jmp
pop
inc
test
xor
aad
dec
sbb
push
adc
mov
fmull
mov
jno
fwait
mov
movsl
xor
or
fsubs
in
xchg
inc
shl
and
mov
std
imul
int3
sarl
sbb
mov
enter
cmp
scas
popa
and
inc
add
sbb
mov
or
cmpl
fwait
push
add
lcall
out
cmp
leave
ja
xchg
mull
mov
inc
xchg
testb
cli
faddp
mov
call
push
int
in
mov
push
daa
cmp
ss
lock
xor
cmp
add
mov
mov
push
test
pop
cmp
stos
movb
bound
ficompl
lret
jo
push
pop
cli
inc
mov
lods
mov
popf
cmp
out
mov
pop
iret
mov
sub
lar
out
pop
pop
insb
and
icebp
stc
dec
pushf
and
std
pushf
push
cmc
movsl
jns
std
pop
push
cltd
loopne
xor
ljmp
inc
mov
mov
loop
jecxz
mov
dec
xchg
pop
fidivs
inc
shlw
jecxz
mov
cld
loop
loopne
std
or
roll
dec
shr
repnz
mov
mov
adc
inc
inc
inc
inc
push
xchg
arpl
jg
xchg
inc
fcmovu
xor
cwtl
aam
jb
jle
jge
shrl
pop
cmc
jg
je
jno
pop
adc
mov
aad
dec
inc
gs
dec
aaa
xchg
adc
arpl
xor
jne
mov
mov
ss
rcrb
xchg
mov
add
fidivl
out
add
cld
sbb
xorl
bound
daa
sbb
stos
scas
aaa
pop
jg
jmp
xlat
fdivrs
or
sbb
daa
loopne
jo
std
push
jmp
push
lds
adc
mov
pop
sub
mov
adc
jle
jmp
test
cmpsb
jo
ja
mov
or
in
jp
test
nop
sbb
test
push
call
jmp
das
push
add
pop
outsl
sub
rcrb
xchg
nop
push
inc
jecxz
and
mov
sbb
subb
mov
or
out
inc
movsb
mov
not
in
inc
jo
mov
add
int
sbb
add
iret
push
movsb
sbb
push
mov
in
sbb
cmp
lcall
or
jae
cltd
adc
pop
and
ja
jb
mov
test
add
push
mov
fiadds
jl
and
shll
repz
mov
rcrb
arpl
clc
out
jmp
clc
inc
mov
int3
and
push
fsubrp
jno
mov
pop
sub
mov
inc
pop
and
jle
out
add
dec
imul
mov
mov
or
aam
xchg
daa
das
sub
push
push
adc
mov
fisubs
jns
cmp
fisubs
jbe
lcall
xlat
pop
jmp
xor
sub
mov
fnstcw
ret
mov
xchg
mov
xor
sbbl
xchg
pop
cltd
push
xchg
xlat
mov
das
mov
pmullw
xor
in
push
loop
adc
ds
loop
pop
imul
push
loop
push
test
push
add
and
sub
push
xor
hlt
xchg
adc
sub
ljmp
inc
lock
cmc
iret
jle
pop
pop
shrb
js
dec
idivl
mov
adc
dec
jmp
mov
cs
std
mov
push
inc
cmc
sbb
mov
js
push
adc
jp
mov
lock
dec
mov
std
pop
nop
leave
cmp
sarl
movsb
movl
movsl
sbb
lret
xchg
in
scas
lock
xlat
mov
fs
sbb
outsb
scas
push
adc
fstpt
lahf
pop
jae
repnz
fstps
pushf
fldl
xor
pop
xchg
xchg
ja
xchg
ljmp
out
enter
sti
dec
jnp
in
mov
mov
sbb
add
into
jg
out
or
jge
pusha
ja
cmp
call
sbb
bound
push
test
jb
pop
mov
mov
sub
dec
xchg
sahf
loop
inc
jo
cmp
inc
sbb
aaa
pop
lods
outsl
xor
and
adc
cld
or
jbe
loop
rorl
scas
ss
lret
xchg
cmpsl
insl
data16
sti
or
xchg
mov
pop
jns
adc
cmp
xchg
sub
leave
nop
pop
pop
inc
test
out
adc
das
pop
ficoml
sub
out
scas
add
outsb
jg
dec
mov
mov
sbb
sub
sahf
roll
sbb
andb
sbb
jo
pop
rclb
jecxz
jl
mov
jge
gs
test
jns
xchg
insl
scas
push
cs
jp
cmp
test
cmp
aad
nop
push
mov
rol
dec
dec
fs
or
call
lods
add
out
icebp
jle
jge
cmp
xor
mov
scas
lret
aam
push
sbb
pop
nop
daa
ret
lcall
xor
orl
sbb
test
insb
sub
mov
jecxz
nop
pusha
mov
pushf
mov
pop
or
jecxz
lret
dec
push
inc
fsubr
loope
push
jge
scas
mov
add
arpl
mov
adc
adc
sbb
pushw
out
mov
stos
outsl
mov
pop
inc
test
push
pop
sub
mov
sti
xchg
inc
jmp
arpl
out
icebp
and
mov
mov
lret
cltd
out
insb
in
sub
jno
cltd
bnd
sbb
inc
sti
cmp
jbe
add
jne
call
movsl
mov
inc
adc
dec
sarb
push
xchg
xchg
pop
mov
les
xchg
pop
push
leave
mov
push
out
jmp
insb
add
add
or
fstp
fst
push
jmp
jo
mov
fstp
bt
test
jge
ss
loopne
fsubrl
out
xchg
add
mov
dec
bound
jl
sbb
cli
sub
push
imulb
cltd
add
sbbb
ds
stc
xchg
pop
push
mov
mov
push
sbb
cmp
aad
mov
fisubs
ret
or
into
cmp
sub
testl
xor
mov
pop
xor
mov
jp
mov
gs
mov
jecxz
cld
shll
push
shll
sub
into
xor
xchg
dec
popf
or
cld
jo
leave
aas
int
jb
dec
xor
dec
xor
cs
mov
mov
and
icebp
add
push
fwait
cltd
xorl
stos
jmp
shl
add
or
aaa
push
cmp
int3
and
ffree
dec
jge
in
loop
sbb
insl
rcpps
jb
shrb
sahf
lock
or
stos
sarl
fsts
xchg
xor
ret
mov
lea
jae,pn
xor
cmpsb
mulb
les
out
push
push
and
mov
vxorps
cli
mov
pop
fmuls
rep
cmp
cld
int3
imul
test
dec
and
pop
dec
add
stos
push
xor
dec
iret
lds
or
jb
ret
cs
aaa
nop
stos
lcall
sub
out
gs
cltd
sub
jno
sub
sbb
out
and
xor
cmp
or
push
adc
out
stc
inc
inc
addr16
daa
pop
mov
movsb
into
aam
and
gs
cmp
out
pushf
xor
loopne
stos
mov
mov
push
mov
sbb
mov
push
clc
pop
and
and
mov
push
dec
fiaddl
fisttpl
lcall
cmp
push
push
mov
in
ljmp
popf
inc
mov
mov
pop
pushf
jns
jecxz
and
mov
loop
fs
push
mov
ja
dec
sbb
inc
inc
fwait
andb
xor
inc
dec
jae
mov
mov
cmpsb
push
repz
or
fildll
rcrl
icebp
xchg
mov
jae
mov
cmp
into
push
pop
dec
inc
xchg
mov
mov
jp
push
add
test
pop
ret
inc
loope
and
imul
jno
out
nop
and
ljmp
jns
xchg
sti
dec
in
mov
add
lods
jmp
and
jecxz
push
inc
and
std
movsb
cmp
js
add
jno
mov
mov
or
or
pop
mov
mov
push
out
xchg
cwtl
fs
mov
movsl
inc
les
aas
lock
mov
and
dec
clc
ret
pop
add
push
mov
jo
xchg
xor
int
push
movsb
xor
fcmovnu
loop
outsl
shrl
negb
gs
mov
xchg
lock
sarl
xchg
mov
gs
ljmp
and
test
sahf
in
adc
arpl
pop
xchg
lcall
popa
out
rcrl
divl
aam
sub
sbb
in
addr16
test
pop
sarl
std
std
mov
mov
lods
adc
neg
mov
dec
es
jno
mov
jo
cmp
add
jnp
add
cmp
test
lahf
pop
imul
dec
mov
stos
push
out
sbb
push
sahf
scas
add
xchg
leave
cmp
mov
cli
xor
jne
xchg
cwtl
fcmove
int3
and
mov
mov
inc
sahf
jne
and
mov
lods
or
inc
fdivrs
add
jl
ss
pop
sbb
push
inc
mov
or
shlb
stos
in
das
scas
stos
in
or
xchg
xor
fmul
push
test
mov
xchg
cmpsb
divb
jo
push
sub
mov
into
ds
rorb
adc
fildl
mov
pop
or
lock
dec
jmp
pop
nop
pop
cmpsb
sub
jo
nop
cmpsb
jne
insl
sub
stos
dec
clc
cmovle
and
add
sahf
push
xor
lock
mov
iret
adc
ljmp
rorl
hlt
mov
push
adc
mov
inc
add
jne
adc
mov
cwtl
stc
mov
stos
mov
mov
cmp
stos
lock
ja
or
mov
cli
je
push
ds
nopl
roll
push
sbb
dec
scas
hlt
gs
push
pop
enter
dec
inc
in
fidivs
ret
inc
sbb
setno
std
inc
fcmovb
jns
jne
fildl
cmpsb
push
push
cmpb
into
and
lock
sbb
add
mov
mov
movsb
cmp
test
pop
dec
jae
int
sub
rcrl
ret
and
jno
cmp
cmp
and
inc
push
inc
and
int3
sti
loope
mov
fisttps
stos
nop
inc
xchg
popf
clc
gs
lock
mov
imul
cwtl
fs
xor
int
out
data16
push
xchg
jmp
adc
xchg
ret
jl
push
out
sub
fldenv
call
lock
pop
pusha
cmp
dec
fimull
dec
fists
mov
popf
dec
mov
insl
mov
nop
sbb
cwtl
cmpsb
mov
add
xor
pop
xchg
pop
mov
daa
fimull
jnp
stos
aam
divb
cwtl
jmp
int
sub
mov
rclb
xor
bound
popa
sub
push
cmp
fucomip
aam
test
push
aad
sub
pusha
scas
or
repnz
mov
add
dec
ds
add
cmp
adc
pop
sti
sub
fwait
mov
stos
dec
in
repnz
movsl
cld
daa
and
insl
add
and
mov
cli
xchg
jne
xor
out
es
ss
dec
movb
xorl
fistps
sub
jno
fwait
sti
rclb
je
push
fnsave
or
jecxz
mov
lods
sbb
dec
in
jo
addr16
adc
mov
jecxz
add
cmp
sub
sub
fiadds
pusha
movsl
ret
shll
jno
lods
inc
popa
movsb
jb
insl
inc
xlat
in
mov
int
pop
xchg
xchg
mov
fsubr
scas
adc
push
out
cli
lahf
pop
loope
push
mov
and
add
test
subb
dec
ret
leave
xorl
sub
sbb
into
movsb
dec
imul
mov
mov
mov
test
push
arpl
push
test
xchg
mov
insb
dec
pop
lea
mov
mov
scas
loope
orb
pop
inc
ljmp
cmp
pop
xchg
lahf
jg
and
mov
jae
mov
mov
pop
les
adc
addr16
imul
in
mov
dec
pop
in
sbb
lea
jne
shrl
dec
insb
gs
in
mov
std
dec
outsl
out
push
in
faddl
dec
push
pop
xor
ss
ljmp
popa
push
dec
addr16
cmp
cmpsb
pop
and
cmp
mov
dec
jg
or
test
test
jnp
insb
test
and
cmp
pop
mov
cmpb
mov
sbb
shlb
leave
lods
shlb
sahf
sahf
and
jp
and
mov
push
cltd
hlt
lods
mul
mov
push
pop
inc
movsb
pop
nop
scas
dec
sbb
adc
push
js
mov
cmpsb
push
push
pop
in
xchg
xchg
test
outsb
jle
push
push
dec
pop
insb
pop
push
daa
in
adc
cmp
or
mov
sub
xchg
inc
mov
testl
cmpsl
xor
adc
push
filds
mov
lods
jmp
imulb
notl
jge
adc
int
out
jmp
pushf
inc
dec
adc
dec
cmpsb
scas
ds
and
cld
cli
shr
insl
push
mov
cmp
fsts
sbb
and
lods
pop
icebp
push
or
dec
rcrb
scas
cwtl
sbb
mov
mov
push
jge
cwtl
dec
xchg
sbbl
or
cmc
repz
add
jnp
js
pusha
inc
ja
add
and
imul
aam
inc
and
mov
dec
xchg
xchg
cmp
jbe
clc
jmp
add
sahf
in
cmp
std
and
fldt
mov
lcall
adcb
cmp
cmc
mov
sbb
mov
push
cmc
test
or
mov
mov
fwait
push
fcompl
adc
adc
xor
ficompl
iret
or
leave
adc
imul
frstor
repz
js
inc
call
dec
or
lret
jmp
cmp
push
xchg
mov
ret
cld
enter
mov
lahf
scas
and
in
mov
fmull
imul
xor
popa
xchg
lahf
pop
subb
ret
adc
loope
xchg
rol
mov
ret
aaa
adc
ja
pop
mov
outsl
adc
dec
pop
aad
mov
sbb
insl
mov
fs
xor
je
mov
shrb
stos
mov
insl
test
xchg
enter
loope
sub
iret
insl
fnstenv
pushf
pop
lds
cmp
sub
push
movsb
test
jb
test
mov
lods
push
imul
ficompl
add
dec
into
pop
call
jno
xchg
cmc
les
or
jne
sbb
lea
push
jne
add
lods
enter
dec
nop
mov
js
cli
iret
lret
inc
sahf
lods
and
pop
or
popf
push
xor
jne
aam
aaa
outsl
repz
mov
and
sbb
decb
popf
push
and
push
int3
fdivl
pop
cmpsb
cmp
sbbl
sahf
mov
stos
inc
test
cmp
fwait
sub
adc
jbe
jmp
pusha
cmc
mov
cli
adc
loop
cltd
andl
xor
and
mov
test
and
inc
and
jnp
sbb
cmp
sub
sub
movsb
bound
ss
pop
and
mov
in
leave
jge
inc
int
push
scas
adc
repnz
mov
sbb
clc
sahf
rolb
mov
leave
arpl
inc
sbb
cli
cmp
in
mov
add
mov
outsb
sbb
in
push
dec
jae
ja
stc
adc
fimull
ds
sbb
stc
out
addl
in
popa
xchg
mov
inc
inc
pop
jb
ljmp
add
xor
xchg
or
gs
mov
cli
jae
imul
mov
mov
pop
xor
pop
add
cmp
inc
pop
cmp
mov
enter
xor
ret
rolb
pop
test
js
jmp
add
call
ljmp
pop
mov
pop
fcmovnbe
test
mov
jb
hlt
xchg
or
xchg
imul
xor
std
mov
mov
mov
push
in
push
or
cmp
inc
pop
loope
add
push
imul
mov
ljmp
or
sbb
mov
movsl
xchg
mov
and
lret
sti
add
loop
fldt
push
nop
loope
cltd
fildll
lret
mov
pop
shll
mov
aas
inc
decl
push
xchg
mov
sub
repnz
or
dec
enter
lahf
movsb
sbb
rclb
xchg
push
bound
ret
test
lds
pop
sbb
xor
in
pop
pop
xchg
stos
es
pop
pop
movsb
xchg
imul
inc
movsb
pusha
xchg
es
cmpsl
mov
ljmpw
cmpsb
and
mov
pop
pop
mov
sbb
faddp
cmp
mov
jl
outsl
push
mov
xchg
xchg
mov
xchg
mov
push
mov
push
lea
xlat
fdivrs
xor
lea
dec
xor
add
sbb
xchg
aas
pusha
mov
sub
frstor
flds
repz
lock
nop
inc
dec
mov
xor
ja
sub
aas
xor
sti
popa
aad
mov
dec
mov
arpl
mov
cltd
rorl
test
data16
pusha
stos
jne
and
lea
daa
clc
in
mov
or
cs
jecxz
pop
mov
inc
cwtl
add
mov
daa
dec
cs
sbb
mov
in
mov
gs
xor
out
dec
xchg
inc
mov
inc
sbb
xor
jle
sti
scas
push
sbb
inc
push
or
lcall
ds
insl
loop
insl
jmp
cld
jp
sub
std
insl
stos
cmp
cwtl
lret
into
jge
mov
xchg
mov
mov
shrl
dec
movsb
jnp
mov
test
loopne
cmp
ret
aam
jbe
out
jecxz
cmpl
sti
jmp
jge
xchg
dec
cs
aam
dec
ja
sub
loope
movsb
sub
into
sbb
adc
dec
jne
push
aad
add
fdivp
out
fisubl
sbb
dec
imul
in
repz
jl
out
out
push
hlt
frstor
pause
rclb
ret
fs
aam
cmp
loopne
pop
mov
outsl
dec
cs
xchg
mov
push
push
xchg
ja
dec
mov
shlb
aaa
inc
sbb
push
inc
and
out
inc
mov
sub
movsb
jae
in
xchg
cs
push
add
mov
inc
bound
push
mov
jle
mov
js
lods
dec
rorl
gs
repz
sbb
lock
xor
adc
call
leave
sbb
sbb
loope
aad
test
outsl
inc
dec
push
cmp
xor
dec
roll
mov
xchg
pop
push
movsb
lock
mov
lcall
mov
dec
inc
push
cmp
pop
pop
repz
fwait
mov
sub
add
mov
cs
clc
out
and
lea
shrb
aas
enter
xchg
sar
loop
inc
add
rorb
int3
cmpsl
and
ss
imul
or
pop
sbb
jbe
insl
fs
push
or
lds
sarb
add
add
rcl
cs
sbb
lcall
ljmp
daa
mov
lea
mov
cmp
fsubrl
in
jbe
arpl
cli
lock
stos
js
je
push
fcomps
arpl
and
shl
mov
xchg
sub
mov
adc
pop
mov
add
mov
dec
and
pop
mulb
mov
xchg
lods
mov
pusha
mov
push
add
in
sbb
push
mov
adc
sahf
cmc
leave
xchg
cmp
scas
das
mov
xor
jmp
ret
pop
in
mov
jns
stos
out
repnz
repnz
jge
inc
xchg
mov
cmp
popa
fnstcw
movsl
lcall
mov
dec
popf
cmp
rorb
xchg
xor
add
loope
and
stos
paddusw
dec
inc
cli
daa
loop
cmp
mov
sbb
cmpsb
mov
xor
jge
dec
or
inc
pop
imul
inc
cmp
mov
xchg
pop
jge
test
insl
lret
jo
mov
push
and
pop
pop
jbe
and
into
subb
mov
icebp
mov
aaa
in
sbb
test
movsl
jp
loope
push
cld
inc
hlt
adc
fistl
mov
xor
adc
ss
and
and
mov
mov
ret
jae
fcompl
popa
sub
cmp
mov
js
and
movsb
mov
clc
decb
sub
push
xor
lea
mov
cmc
lret
in
jmp
dec
xor
out
addr16
sub
fists
mov
popf
clc
jbe
js
xlat
stos
push
inc
fcmovnbe
jnp
pop
cmp
inc
xchg
enter
outsb
or
push
cmp
fsubrp
insb
cmp
mulb
push
and
add
mov
and
enter
in
div
jecxz
inc
push
pusha
mov
adc
lret
mov
push
lds
scas
sub
leave
aad
cmc
mov
pop
loop
and
or
push
jl
fldt
shrb
push
cmp
sbb
jp
push
andl
xchg
or
nop
inc
nop
ret
lahf
stos
and
jnp
push
sub
sub
cmp
mov
mov
pop
mov
pop
in
mov
push
mov
sub
mov
and
xchg
fimuls
lea
inc
les
xchg
pop
shlb
mov
and
jle
adc
mov
rcrl
hlt
lcall
mov
sbb
dec
in
jnp
outsl
call
push
jl
dec
dec
push
push
cmp
push
adc
xchg
mov
fs
loopne
imul
mov
sub
sub
scas
push
lods
inc
sti
cmp
or
cmc
jbe
aaa
aaa
mul
pop
pop
lods
inc
dec
jne
cwtl
xchg
inc
clc
dec
mov
push
and
repnz
js
sbb
lods
ja
and
nop
das
notb
pop
fcmovbe
and
leave
mov
daa
scas
add
dec
mov
push
ret
in
pop
cwtl
xchg
shrl
enter
mov
add
cs
stc
and
pop
and
sub
jo
lods
jno
into
cmp
fbld
das
inc
dec
cld
dec
fstl
imul
lods
movsb
xor
add
scas
inc
sti
cmp
fldenv
pop
xor
inc
push
sub
pop
imul
push
cmp
xor
push
outsb
dec
test
loop
sti
mov
sti
subl
enter
test
ror
fwait
push
xchg
ret
sub
xchg
mov
shll
inc
movsl
mov
push
sub
push
pop
ljmp
push
rol
and
insb
sbb
loopne
jo
cltd
sbb
inc
popf
mov
mov
push
test
pop
rcll
fildll
cmp
lock
adc
xchg
mov
ret
loop
lea
insb
adc
pop
movsb
push
and
or
movl
add
nop
in
inc
xor
or
jmp
or
or
xchg
fprem
mov
aaa
mov
fidivs
jbe
adc
jnp
or
rcr
jns
test
mov
fstpt
add
cli
jecxz
nop
push
das
cmp
and
mov
ja
sub
pop
xlat
jecxz
lds
mov
shrb
aaa
push
in
sbb
insl
mov
lcall
int
movsl
in
lahf
adc
push
popf
shlb
mov
dec
add
push
sahf
jg
adc
add
jecxz
pop
dec
dec
rorl
add
enter
inc
jp
in
or
pop
int3
mov
xchg
popf
pop
mov
outsl
ljmp
cmp
fisubrl
cmp
imul
ja
aaa
mov
inc
push
int
jge
adc
sub
and
sub
sub
scas
pop
and
add
sub
mov
and
xor
push
jno
out
jecxz
ljmp
push
xchg
mov
push
xchg
into
jbe
or
jmp
shlb
and
mov
orl
jmp
cltd
mull
cmc
jne
cltd
or
or
out
mov
mov
xchg
stos
std
add
jnp
push
xor
shrb
mov
or
std
std
push
stc
dec
xchg
cli
sbbl
pop
and
mov
cmp
xor
es
imul
cwtl
mov
sub
ljmp
adc
inc
add
bound
adc
inc
inc
jge
jmp
cld
bound
arpl
adc
push
or
ja
xor
jge
pusha
add
adc
aam
and
xchg
or
mov
inc
rorl
pop
shrd
ss
inc
bound
sarl
xchg
jbe
in
pop
or
mov
test
cmp
movsl
jns
fidivs
jmp
enter
enter
inc
push
fisttps
test
cli
popf
lods
mov
inc
xchg
out
mov
dec
repnz
shr
mov
push
xlat
imull
xchg
add
lods
dec
loope
mov
fsubl
sbb
mov
call
mov
dec
out
jecxz
ret
sub
out
pop
pop
pop
dec
fst
push
jb
es
in
lds
jg
or
xchg
pop
orl
stc
outsl
mov
xor
movb
popa
jg
pop
xchg
mov
imul
sbb
pop
push
insb
addr16
inc
adc
mov
xchg
pop
ficompl
aad
loopne
sub
imul
cld
dec
push
cmp
cmp
call
dec
pop
sarb
mov
dec
insl
scas
lock
xor
popf
rcrl
sbb
pusha
insl
or
xor
push
sahf
jo
dec
in
aaa
insb
xorb
int3
jp
es
jbe
test
sub
shl
xchg
mov
sbb
push
sub
jle
sti
fimull
adc
test
jo
jo
imul
test
loope
aam
jae
nop
dec
mov
push
or
lods
movsb
gs
pop
imul
outsb
sub
lret
push
pop
dec
fldl
or
int
mov
out
hlt
leave
arpl
int
pop
sti
inc
mov
inc
in
cwtl
xchg
xor
lods
enter
scas
dec
sub
popa
ret
sti
push
cmp
adc
aam
nop
jg
test
jmp
and
adc
mov
mov
pop
push
pop
push
mov
jno
repz
inc
xlat
sbb
notb
repnz
in
xchg
push
rcr
mov
add
xchg
in
mov
in
ja
lret
fists
aam
test
rclb
and
push
repnz
iret
lea
xor
cmc
inc
ficompl
and
mov
jns
mov
cmp
cld
jmp
mov
lock
les
jnp
shr
in
xor
bound
inc
loopne
lods
test
pop
lret
push
push
stos
fists
xchg
jmp
es
rorl
daa
idivb
jl
mov
dec
mov
jle
inc
sti
lret
jg
mov
fcomps
sbb
pop
adc
sbbb
mov
and
sbb
mov
pusha
push
gs
cmpsb
loope
arpl
lret
adc
imul
not
call
je
or
add
mov
jp
test
and
loop
jbe
jno
cltd
ss
push
fildll
test
xor
sub
dec
push
inc
rclb
je
ja
dec
dec
btr
cmpsb
dec
iret
ret
add
das
jecxz
rolb
popa
jae
int3
mov
movsl
dec
pop
cmp
rcr
sti
jmp
or
xchg
clc
adc
subb
or
pop
xor
fidivrl
or
lds
and
jle
mov
jle
aam
sub
clc
gs
jne
sbb
roll
sarb
cmp
imul
inc
pop
mov
fnsave
icebp
sub
aas
inc
ds
xorl
sub
out
movb
mov
lods
imul
pop
sub
cmc
xor
push
push
rclb
icebp
mov
add
xchg
xlat
gs
jl
xchg
jmp
fwait
xchg
push
jecxz
sbb
and
push
jne
aas
add
and
pop
sub
sub
mov
out
daa
loope
out
and
ss
les
adc
call
mov
sbbl
fldl
outsl
push
jle
jne
lahf
ss
dec
cmp
outsb
jno
sbb
fidivrs
xor
cmp
incl
out
add
cmpsl
aam
aaa
cmp
pop
jb
xchg
shr
hlt
stos
sbb
push
ret
sub
clc
loopne
inc
cld
jecxz
fdivrp
cltd
sub
xchg
and
imul
pushf
dec
imul
sbb
scas
sarb
pop
dec
repnz
cmp
dec
cmpsl
adc
jecxz
xchg
jp
jbe
pop
inc
ffree
cmp
enter
sbb
lods
cli
cmpsb
sbb
push
mov
adc
xchg
shrl
clc
mov
mov
push
fsubrs
imull
inc
data16
mov
outsl
js
jno
xchg
inc
mov
lahf
mov
in
add
jecxz
xor
sahf
pop
cld
jg
add
aad
dec
lret
inc
xchg
data16
push
xlat
outsl
cs
and
imul
mov
mov
pop
mov
int
jmp
test
aad
add
insb
out
xor
dec
add
sub
daa
adc
sar
cmp
lods
add
into
loope
cmp
das
jne
stc
mov
dec
stos
lret
fistpll
add
mov
lret
cmp
xchg
outsl
or
test
movsl
jmp
fisubrl
fs
insl
lock
inc
loop
and
mov
inc
cmp
aas
mov
xchg
sbb
jb
cmp
jno
cld
add
inc
int3
sbb
adc
div
sub
push
mov
xchg
loope
jne
mov
movsl
test
sub
pop
out
lret
lcall
and
ja
icebp
shll
clc
roll
xor
rclb
push
fistl
adc
or
dec
push
jbe
fdivrl
jmp
inc
lds
sub
ret
shrl
inc
push
and
out
jp
add
xchg
sbb
xchg
fs
rcll
ret
inc
enter
mov
xor
out
shlb
leave
in
cmc
dec
dec
mov
sub
mov
fadds
push
inc
imul
cmp
fstps
clc
imul
jge
adc
test
cltd
add
sbb
pop
push
sbb
cmpsb
dec
or
push
push
ds
and
out
outsb
jnp
pop
mov
inc
inc
fdivrs
decl
sub
jne
mov
mov
sbb
cmpsl
sahf
push
pop
insl
outsb
sbb
insb
ja
gs
testb
leave
lea
test
and
mov
mov
pop
fst
sub
out
xor
push
or
cltd
ds
shlb
inc
ljmp
out
popa
jecxz
loope
mov
add
in
std
mov
mov
jp
aam
push
add
push
push
std
bound
sbb
repnz
mov
and
movsl
lds
jecxz
add
stos
push
push
jge
out
mov
push
jp
adc
lret
push
lahf
cmpsl
xchg
mov
cld
pop
clc
gs
lock
fadd
fstpt
std
push
jmp
mov
mov
push
sbb
jge
inc
ret
mov
stc
sub
enter
or
or
outsl
sbbb
sahf
dec
mov
inc
push
outsb
mov
lcall
push
leave
sbb
pop
cli
scas
adc
push
mov
or
adc
call
cmp
cs
dec
int3
mov
dec
fbld
mov
stos
dec
das
aas
mov
and
sti
outsb
jb
enter
sti
lret
mov
jne
loope
out
pushf
xchg
popf
outsb
xchg
adc
mov
inc
or
test
mov
mov
enter
cmpsb
nop
pop
aam
adc
lret
mov
sbb
pushl
mov
sbbl
scas
push
pop
sahf
mov
pop
sbb
fildll
sub
cmc
das
mov
pop
xor
mov
ss
daa
cltd
adc
or
arpl
sub
push
pop
dec
mov
in
push
jbe
out
mov
sbb
xchg
and
jg
or
xor
lcall
orb
sbb
jl
lahf
out
or
mov
or
cmc
fs
add
jge
sub
cli
or
push
testb
lds
loope
sti
shl
int3
lret
or
call
mov
scas
rcrb
out
sub
scas
pop
xor
mov
stos
or
push
daa
mov
mov
test
mov
mov
lahf
jp
test
sbb
scas
fwait
xor
xor
rcrl
in
repnz
iret
lret
mov
cmp
push
inc
pop
gs
ret
notb
and
les
jne
adc
adc
push
xor
pusha
add
cmp
cmp
and
stos
int3
stos
xchg
rcll
mov
mov
ja
mov
cld
xor
pop
rorb
xor
test
cmp
ficoms
es
cmp
mov
pop
inc
inc
js
call
daa
jno
out
pop
into
addr16
xchg
rorl
icebp
gs
xor
and
or
ljmp
cmpsl
push
adc
test
retw
inc
lret
mov
rolb
insb
push
sbb
push
test
ss
pop
repnz
cmp
cltd
pop
enter
sbb
mov
jg
mov
dec
fldt
rcll
mov
cmc
out
sbb
rcrl
push
ljmp
push
xor
mov
repnz
mov
sbb
cmc
add
repnz
fisttpl
pop
mov
push
je
mov
int
adcb
jp
dec
inc
lcall
cmp
pop
mov
rolb
fidivrl
inc
cmp
adc
test
out
mov
xchg
lcall
daa
insl
lret
inc
sub
inc
cmp
das
orl
pop
xchg
mov
mov
rcrl
dec
pop
inc
mov
fcomp
int3
mov
or
or
testb
fsubrs
int
or
dec
aaa
stc
add
and
inc
in
lret
out
je
mov
fsub
movsb
xor
or
cs
cmpsl
mov
sbb
loop
and
mov
mov
into
shlb
lea
loop
mov
call
icebp
cmp
dec
subl
inc
add
out
mov
loopne
fadd
mov
clc
mov
lahf
mov
mov
push
nop
sti
pop
sub
mov
and
jg
shll
int
pop
mov
xchg
sub
mov
insl
cmp
addr16
xor
cmp
add
mov
xor
cld
and
or
cmpsl
ficompl
xor
data16
ja
popa
popf
sub
ljmp
push
jp
pushf
adc
iret
iret
in
hlt
shrl
mov
mov
xchg
cmp
add
adc
dec
stos
cmp
incl
stos
cmp
movsl
adc
push
in
imul
or
push
push
or
data16
outsl
clc
std
pop
push
dec
mov
imul
stos
mov
sbb
inc
sbb
nop
pop
movsb
jo
mov
xor
jmp
and
cwtl
outsb
je
iret
jp
sub
ljmp
and
mov
pavgw
xor
sub
cltd
dec
rolb
lods
xlat
adc
inc
xor
shr
fwait
pushf
popa
fisubl
outsb
jmp
ret
cltd
out
sub
mov
mov
sbb
push
sub
mov
cli
cmp
jae
scas
xor
mov
sub
adc
outsl
xchg
push
test
movsb
inc
pop
enter
cmpsl
cmp
jecxz
stos
clc
or
xor
inc
or
fwait
das
jno
and
fwait
popa
mov
stc
push
out
add
mov
scas
pop
mov
mov
push
dec
or
aad
imul
push
shll
mov
movsb
rclb
sti
mov
das
div
or
aad
movsb
iret
mov
inc
jecxz
pop
inc
jge
movb
mov
fadds
fnstcw
in
jmp
add
test
loop
sbb
jg
mov
stc
pop
mov
fwait
push
ret
stos
cmp
out
call
aas
ja
outsb
push
rcrb
mov
jge
rcrl
ret
stc
mov
loop
mov
out
or
cmp
aad
popa
imul
mov
adc
push
aad
dec
test
sub
arpl
jle
mov
push
rorl
and
ret
scas
out
cmpl
cmp
add
dec
aas
int3
jo
sti
mov
inc
out
cmp
lods
lods
mov
adc
pop
imul
xchg
test
in
rcll
iret
aaa
sub
xor
in
sbb
imulb
xchg
pop
lret
dec
movsb
mov
sub
xor
in
movsb
add
dec
add
les
cli
xor
cmpsl
sbb
into
scas
xlat
test
jbe
pop
lods
push
xchg
fmull
mov
fbstp
test
mov
mov
push
add
dec
es
loop
mov
dec
and
dec
fildl
inc
add
inc
lcall
dec
sub
fisttpl
sahf
mov
es
outsb
cmp
addr16
mov
lea
shl
scas
mov
jbe
push
int
push
or
mov
roll
ja
or
push
pop
stos
stos
out
lods
xchg
les
mov
aas
scas
sbb
push
fmulp
leave
lds
leave
mov
jo
icebp
ret
cld
iret
xchg
out
cmp
shr
fcomps
in
dec
mov
pop
fwait
hlt
ja
pop
sbb
mov
mov
aaa
cwtl
or
inc
out
xchg
fsts
out
test
negl
cmp
repz
rclb
xor
dec
repz
jl
imul
repz
inc
sbb
push
pop
mov
outsl
cmp
jns
sbb
ds
out
lret
adc
xor
xor
xlat
sbb
loopne
shlb
out
shlb
sub
sub
and
add
sub
std
fisubs
adc
dec
sbb
aad
js
rolb
ljmp
fsubl
add
lods
pop
scas
mov
arpl
popf
xor
lds
cs
mov
pushf
ja
mov
xchg
inc
xlat
fstl
push
or
jns
pop
adc
push
mov
mov
xchg
lods
int3
xor
xchg
mov
add
std
inc
xlat
test
imul
aad
mov
jp
stos
not
jl
cmp
mov
rclb
mov
xor
sti
pop
push
aam
lret
out
in
dec
int3
add
jge
pop
outsb
adc
int3
add
sahf
popf
sbb
dec
lds
dec
hlt
mov
leave
out
inc
xchg
mov
mov
push
int3
dec
cmp
xor
stos
push
mov
adc
mov
mov
fcoms
lret
cmpsl
sbb
test
scas
adc
insl
cltd
mov
mov
mov
add
xlat
insl
mov
inc
cmpb
popl
mov
cmp
orl
push
sbb
mov
sub
mov
andb
and
xor
ds
cwtl
call
add
mov
pop
dec
jecxz
push
jne
xor
pop
aam
push
mov
pop
sbb
push
iret
mov
pop
add
push
in
sbb
sub
cmp
icebp
addr16
or
lret
cmpsb
adc
mov
sbb
cs
add
js
and
sahf
xchg
popf
out
icebp
into
popf
int3
mov
hlt
xchg
sbb
cmp
xchg
aas
xchg
adc
addb
stos
aam
ret
cmpb
xchg
outsb
mov
je
adc
pusha
icebp
cli
xlat
movsl
cmp
cmp
outsl
inc
negl
mov
push
mov
xor
jo
sti
mov
push
subl
mov
mov
addb
out
adc
xchg
sbb
and
out
jbe
add
cld
dec
jno
movsb
xor
jo
mov
fs
aaa
inc
pop
cs
in
cmpsl
out
pop
mov
jp
cmp
jge
inc
push
fidivrs
add
dec
adc
or
mov
test
repz
xlat
adc
or
cmp
adc
bound
xor
cld
clc
xchg
imul
jecxz
push
cld
xchg
shrb
push
and
sub
clc
fnsave
pop
push
sbb
out
cli
push
sbb
sbb
fisttps
dec
ds
pop
roll
out
jmp
fcompl
fimuls
dec
mov
push
add
mov
jo
pop
stc
mov
mov
mov
jmp
adc
jno
cmp
es
add
sar
mov
lret
push
sbb
cwtl
dec
out
dec
inc
mov
jmp
jmp
xor
adc
mov
jns
and
int
xchg
jnp
cmc
push
jne
das
mov
mov
loop
inc
sbb
jnp
inc
in
xchg
xchg
push
sub
or
jnp
js
xchg
in
out
movsb
jns
shrb
fadds
jbe
adc
push
cmc
out
dec
enter
imul
jmp
out
pop
dec
push
and
gs
inc
aas
and
dec
xor
xor
jmp
sub
loop
imul
iret
pop
pop
inc
cmpsb
jns
push
js
jmp
jl
bound
lret
cmpsl
leave
aaa
mov
jns
idiv
icebp
sti
cld
fstpl
xchg
push
outsb
mov
dec
pop
icebp
jecxz
repnz
mov
bound
cltd
test
mov
jecxz
in
out
addr16
outsb
inc
mull
in
data16
sub
mov
mov
lcall
dec
mov
outsb
mov
lret
mov
mov
sub
pop
stos
imul
mov
pusha
push
ret
jmp
pop
add
arpl
add
mov
stos
mov
xchg
dec
adc
into
fmul
cmp
cmp
cmp
out
imul
mov
mov
in
dec
scas
jp
xor
mov
fldl2e
push
shrb
filds
movsl
push
lds
push
mov
popa
out
aaa
xchg
filds
pop
mov
add
int3
mov
out
cmp
jns
sbb
lret
cwtl
popf
in
pop
cmp
arpl
dec
jp
pop
insb
outsl
cmpsb
push
addl
test
push
dec
ja,pt
push
arpl
sub
test
add
ja
xchg
xor
sub
xor
daa
cmpsl
jle
pusha
dec
xor
imul
lret
stos
pop
sbb
pop
aam
cld
insl
and
std
pushf
add
push
sub
pop
mov
js
pop
add
aas
jp
arpl
or
sarl
pop
jbe
push
lret
mov
test
cs
aas
or
jmp
shrl
repz
ljmp
mov
adc
or
add
stc
pop
push
call
xchg
into
mov
flds
in
jmp
lods
icebp
fldl
mov
stos
decl
std
mov
out
and
mov
pop
push
and
jbe
leave
out
mov
idiv
dec
sub
das
int
xchg
or
iret
daa
out
mov
mov
sbb
mov
xor
shll
jne
add
xor
adc
pop
xor
mov
xor
fcompl
lods
mov
fwait
popl
movl
fwait
or
aaa
push
in
jno
cli
sbb
leave
popf
gs
xor
and
adc
push
push
push
int
mov
sbb
cmpsl
leave
and
adc
lret
call
or
jbe
stc
pop
lret
sarb
sbb
cmp
popa
xor
dec
movsb
sbb
dec
out
mov
int
fsincos
mov
push
les
push
push
in
inc
ffree
mov
popf
dec
imul
movsb
in
push
pushf
lea
mov
int3
jl
or
ja
adc
test
sbbl
push
scas
call
filds
lcall
and
rorb
pushf
and
mov
adc
push
sbb
arpl
xchg
arpl
fldl
mov
lret
adc
pop
ss
push
dec
cld
mov
lods
dec
sahf
push
xchg
ljmp
ljmp
jle
addr16
mov
sbb
je
outsb
inc
mov
arpl
add
push
jmp
outsl
mov
lahf
xor
aad
or
pop
xor
mov
adc
popf
xchg
push
aas
aad
xchg
clc
inc
shl
push
pop
push
jns
ficoml
roll
fwait
mov
push
icebp
sbb
addr16
or
in
fmul
addr16
icebp
push
imul
inc
bound
dec
xchg
jne
cmp
push
sub
mov
xchg
and
xor
push
sub
sbb
push
and
aad
or
or
xchg
lret
mov
push
cmp
jmp
sub
shll
sahf
sahf
adc
dec
xchg
rol
fistl
lock
or
or
and
rorl
adc
inc
cld
cmpsl
out
sub
popa
ljmp
sti
iret
sub
icebp
cmp
orl
call
pop
pop
xchg
dec
dec
shlb
or
sbb
add
lods
cmp
insb
pop
sbb
lock
pushf
sub
adc
pop
pop
ljmp
lds
daa
add
fistps
or
sbb
xlat
push
sub
icebp
or
sbb
out
dec
cs
loopne
or
jp
fiadds
dec
adc
xor
push
add
ljmp
stos
adc
adc
enter
fisttpll
clc
mov
fdivrs
inc
push
fcomps
jo
pop
jmp
or
mov
dec
cmp
incb
add
rorb
enter
nop
ja
out
out
out
out
out
jmp
out
out
loope
jo
rcr
lock
mov
cmp
cmp
and
xchg
jb
fs
push
jge
lock
incl
repz
sahf
push
push
imul
dec
xchg
hlt
dec
xor
sti
out
adc
addb
push
out
adcb
and
int3
inc
aad
ljmp
inc
jmp
or
mov
movsb
push
xchg
pop
pop
fstps
sbb
push
in
fwait
pop
pop
insb
lock
add
pop
mov
mov
int3
sbb
adc
sbbl
sub
sbb
imul
loope
icebp
out
les
inc
cmc
mov
int
mov
sub
icebp
cs
mov
add
inc
xchg
xor
jbe
popf
fs
inc
or
mov
loopne
mov
scas
mov
test
cmp
aas
push
gs
jmp
push
pop
out
dec
jb
push
pop
in
and
lret
call
out
xchg
push
or
cmpsb
inc
pop
mov
adc
out
cli
ja
dec
sahf
xor
mov
seto
push
jb
mov
add
xchg
loope
jmp
mov
mov
arpl
lods
les
cmpsl
ficompl
lret
inc
data16
in
push
push
ss
ds
xlat
sub
jb
inc
cmpsb
xchg
ds
add
fnstsw
dec
in
jl
stos
js
shll
jno
ss
pushf
cmp
test
jmp
jmp
mov
xor
dec
inc
push
xchg
lock
inc
dec
and
jle
call
shlb
inc
push
clc
pop
movl
xchg
cmpb
movsl
xchg
lock
icebp
xchg
das
cld
and
push
enter
or
mov
cmp
cli
lea
enter
aam
loop
xor
dec
enter
jne
shrb
push
sbb
js
xchg
rcrl
jl
loope
sti
sbb
adc
jnp
ficoms
cmp
popa
sti
into
sub
sbb
bound
push
adc
pop
dec
inc
inc
pop
rolb
nop
push
inc
aaa
and
push
dec
ljmp
jne
pop
cmp
jmp
jge
push
mov
jno
sub
aad
stc
lock
mov
adc
xor
jg
pop
inc
adc
inc
rcrl
aas
add
sub
test
jl
cwtl
jno
mov
shl
pop
jno,pt
out
imul
out
xchg
daa
xchg
xchg
lahf
lcall
scas
sarl
sbb
jae
sbb
rcll
jmp
add
mov
lret
int
push
adcl
mov
ss
dec
xchg
sbbb
fstl
mov
jp
iret
lock
aas
and
repz
add
repnz
mov
push
pop
pop
fimull
fdivp
xor
outsb
sub
int
sub
aam
jne
dec
lock
fistpl
push
jbe
fwait
cmpsl
inc
rorl
sbb
push
xchg
push
out
test
gs
mov
jl
inc
pop
mov
sbb
dec
fwait
icebp
es
adc
pop
xor
test
fs
push
cwtl
add
push
das
test
cs
stos
adc
jmp
cmpsb
loopne
cmc
adc
ret
out
adc
ret
pushf
pop
jo
test
inc
sbb
mov
xchg
orl
cltd
shlb
xchg
fnstsw
iret
cmpsl
pop
movsb
aaa
insl
fucom
mov
and
xchg
icebp
mov
mov
xchg
fmull
scas
leave
mov
cmpsb
test
or
jp
call
sbb
into
cli
rolb
dec
xchg
add
stos
or
sub
call
ret
std
repz
and
add
enter
subb
lds
aad
xor
or
pop
inc
mov
pop
add
fdivrs
mov
xchg
xchg
mov
leave
addr16
jge
push
push
lods
test
xor
lahf
mov
xlat
leave
ret
lret
pop
push
inc
testl
pusha
sub
pop
mov
stc
mov
test
and
in
push
jbe
shrb
sbb
ja
incb
jg
pop
lahf
sub
aaa
adc
dec
adc
negl
add
ljmp
sarb
adc
pop
push
jbe
pop
push
or
insb
stos
fstpl
icebp
sub
jb
xor
mov
push
iret
pop
jp
orb
je
xchg
std
jge
daa
push
cwtl
in
cmp
mov
je
fdivl
jge
fmul
cmp
lret
xchg
pop
fists
cmp
xchg
fdivs
mov
adc
xchg
iret
mov
add
dec
adc
cli
cmp
dec
xchg
inc
sub
adc
adcl
inc
sub
cmp
je
adc
and
stc
lahf
into
ret
mov
insb
inc
sbb
rcrb
fimull
aas
loope
pop
test
jl
dec
cmp
xchg
and
ret
xchg
jp
cmp
cmp
dec
push
nop
lret
inc
std
xor
pop
sahf
adc
xchg
leave
adc
jo
aam
cltd
repz
andb
lods
mov
pusha
push
inc
stos
sbb
jp
jle
lcall
jne
push
lods
xor
out
les
lcall
fs
mov
out
loop
or
jmp
sub
mov
out
int3
xor
xchg
add
pop
sbb
iret
push
data16
adc
aad
repz
arpl
xchg
dec
pop
mov
mov
jb
repz
movsb
into
or
dec
inc
ja
lcall
xchg
inc
pop
cs
orl
and
es
or
ret
arpl
push
adc
mov
adc
and
mov
jb
dec
fldcw
scas
cmp
xchg
mov
mov
pop
das
icebp
shlb
adc
repnz
pop
rcl
ret
rcrl
push
sub
sti
cmp
push
pop
shlb
mov
mov
das
in
daa
mov
xchg
adc
test
stos
call
lret
pop
and
add
sarb
mov
jge
jmp
sub
fstps
jg
jg
into
pop
or
cltd
cmc
or
mov
push
mov
outsb
test
addl
ljmp
dec
in
push
dec
jo,pn
add
jecxz
adc
out
xor
mov
push
mov
fbstp
int
inc
arpl
sbb
cmp
push
dec
or
pop
in
jmp
push
adc
lret
cmp
inc
sti
xchg
daa
jns
mov
in
movl
xor
xchg
test
icebp
sar
jbe
ret
pop
mov
popa
cmpsl
add
roll
stc
cmp
cld
xlat
cmp
adc
sarb
mov
jno
aaa
push
pop
cwtl
pop
gs
xlat
mov
lret
cmp
fnstcw
and
pop
ss
into
sbb
xorb
push
sub
add
jne
fnstenv
out
jns
push
push
inc
push
fsubp
fucomp
mov
js
sahf
in
add
or
rorb
outsb
outsl
sbb
push
sbb
and
mov
cmpsb
mov
lods
push
or
push
pop
in
aad
or
enter
or
leave
adc
test
fsubs
and
jg
js
jns
jl
jne
or
mov
sub
outsl
sub
inc
mov
mov
mov
imul
pop
icebp
cmp
ret
in
sbb
and
movsb
rcpps
call
fdivrl
and
add
mov
sub
fwait
daa
dec
lret
xchg
add
add
xlat
cwtl
add
jns
dec
lahf
sbb
js
lea
cmp
push
push
out
aad
stos
sub
jl
lods
sti
jg
xor
push
dec
push
mov
xor
dec
loop,pt
sar
js
or
aaa
cwtl
add
loopne
imulb
sti
adc
mov
dec
cmp
arpl
iret
das
call
or
pop
js
inc
mov
pop
xor
test
and
push
adc
rcrl
jns
or
xor
xchg
rcrl
sbbl
adcl
pop
dec
adcb
mov
test
mov
adc
and
jbe
inc
int3
ljmp
push
push
popf
je
inc
cmpl
push
fildll
sbb
addr16
sbb
shl
xor
fdivs
and
sahf
add
xchg
mov
mov
xor
inc
popa
in
test
adc
loopne
in
push
sub
pop
in
nop
fsts
ret
add
fidivrl
ret
mov
sub
ret
shl
xor
dec
mov
shl
jo
vpunpcklqdq
xor
test
sub
sub
cmpsb
pop
cmp
shrb
jns
jae
or
cmp
mov
cmp
dec
imul
sbb
pop
test
mov
mov
add
scas
cltd
mov
xchg
pop
mov
push
mov
aas
lea
push
fldenv
inc
aaa
out
jge
mov
ljmp
orb
or
iret
test
and
mov
inc
and
and
shlb
dec
std
inc
xchg
daa
mov
inc
push
loope
cmp
mov
jg
xor
mov
dec
inc
xor
mov
int
lea
out
rcll
js
inc
add
mov
dec
arpl
por
mov
sahf
cmp
popa
or
loope
pushf
sti
pop
mov
repz
pop
jnp
mov
icebp
aad
mov
inc
dec
scas
xlat
ljmp
sbb
scas
cmp
and
loope
sbb
mov
into
lret
and
lcall
ss
push
cwtl
insb
xchg
or
sti
xor
jbe
or
insl
aam
stos
and
or
popa
jecxz
mov
xchg
push
jno
js
cs
mov
xor
jno
jb
es
cmpsb
leave
add
test
out
push
rclb
jl
imul
sub
stos
push
push
jge
mov
lret
push
push
or
fisubrs
dec
xor
and
out
mov
add
sarl
push
fs
test
imul
dec
mov
sbb
dec
push
dec
mov
lret
cwtl
rclb
pop
add
mov
loope
sbb
stos
cmp
mov
push
mov
je
loopne
cmpsl
mov
int
inc
lahf
je
cld
sub
pop
imul
call
xlat
int
xchg
rolb
jo
roll
jbe
mov
fwait
rorl
sub
mov
mov
ret
push
adc
ret
lret
jne
dec
jp
mov
jle
bound
lcall
sub
sbb
pusha
cmp
mov
cmp
mov
push
out
pop
sub
testb
leave
add
aaa
sbb
xor
scas
mov
adc
aam
push
divb
aam
movsb
pop
es
dec
ljmp
adc
cmp
aam
xor
cli
xchg
icebp
int
loope
xchg
add
cmp
rcr
add
sub
mov
test
and
ret
and
andb
pxor
adc
adc
jge
clc
mov
inc
call
sbb
dec
push
and
or
dec
sbb
mov
sbb
inc
in
stc
pop
in
xchg
notb
add
sti
add
jns
mov
mov
add
loopne
in
jb
xor
cmp
jp
or
nop
scas
xchg
fimuls
popa
push
movsb
adc
ja
imul
mov
jno
and
mov
out
lock
fmuls
xor
pop
jne
and
enter
js
cmp
jno
xchg
mov
jmp
push
and
dec
cmp
xchg
dec
xor
mov
loopne
xlat
cwtl
cld
lret
outsl
ret
fildl
dec
in
inc
sbb
cmp
push
in
imul
inc
jle
mov
mov
mov
dec
or
pop
xlat
test
or
xchg
into
lcall
pusha
sbb
fiadds
test
xchg
push
jge
pop
and
add
add
or
pop
imul
mov
das
cmpsl
mov
push
mov
mov
inc
mov
jo
or
int3
sub
insl
push
cmove
mov
and
jl
pop
add
mov
mov
sub
mov
dec
cs
push
mov
movsl
cmpsb
shrb
adc
mov
fwait
mov
push
cmpsl
xchg
or
sbb
arpl
mov
fsqrt
cmp
stos
aas
adc
loope
js
dec
jb
cmpsl
out
imul
sbb
fs
sahf
orl
fstpl
push
aaa
mov
jge
pop
scas
add
imul
inc
pop
bound
test
or
jecxz
xor
add
iret
popa
ss
mov
mov
enter
jmp
ds
js
loopne
xor
lods
mov
push
cmp
push
les
and
push
daa
cli
and
inc
rcll
adc
outsl
in
stos
fistl
dec
dec
dec
test
xor
sarl
mov
fisubl
into
mov
popa
das
push
je
mov
xchg
jno
pusha
fnsave
addb
inc
add
sub
in
dec
call
push
scas
icebp
es
out
lahf
movl
xchg
ret
stos
xor
cwtl
mov
ret
mov
das
xor
js
mov
inc
dec
xchg
mov
lea
cmp
mov
sbb
addr16
sbb
mov
shrl
mov
subb
jnp
aam
adc
cmp
xchg
jl
sbb
sub
cli
andl
jne
xchg
sbb
pop
pop
in
add
push
mov
jnp
xor
dec
stos
inc
pop
lret
lahf
or
or
stos
mov
and
fisttpl
pop
mov
in
sti
jge
xchg
sub
sbb
popf
mov
sub
xor
xor
fwait
lock
xor
in
gs
sbb
arpl
add
mov
sub
xor
jmp
mov
sub
mov
mov
push
test
lcall
test
pop
outsl
cmc
mov
mov
sbb
xlat
xor
nop
mov
jns
std
addb
mov
insb
pop
dec
inc
dec
cld
lods
mov
aaa
dec
sahf
xchg
stos
push
xor
pop
dec
lods
push
mov
cli
mov
jns
push
fsubrl
popa
out
dec
movsl
xorl
inc
addb
inc
out
cltd
and
mov
ds
xchg
iret
into
popa
fcomps
adc
mov
and
sbb
inc
outsl
mov
imul
jae
rcr
aam
dec
data16
jo
std
das
movb
in
fists
cmc
sahf
lods
fisubl
outsb
sub
jle
cmp
out
ret
cwtl
movsb
test
fldt
jo
insl
add
pop
cmp
push
int3
mov
cmpsb
sahf
push
ljmp
popa
mov
mov
fs
xchg
ljmp
inc
test
and
xchg
out
cld
pusha
jno
mov
inc
fwait
lcall
jns
ljmp
mov
lea
scas
add
and
dec
arpl
adc
cmp
fmul
mov
xlat
into
inc
addb
inc
jbe
jp
in
add
sarb
insl
push
inc
dec
sbb
mull
imul
in
jbe
mov
inc
xor
mul
and
fs
push
test
das
imul
dec
test
mov
aas
mov
jae
jmp
xchg
and
inc
cmp
sahf
call
jns
arpl
ret
jp
cld
leave
test
mov
jmp
ja
and
fsubrl
icebp
hlt
andl
lds
sti
aad
pop
incb
loope
and
jb
in
inc
daa
xchg
mov
movsl
or
sbb
sub
scas
or
mov
movsb
test
dec
xchg
pop
sbb
out
inc
mov
pop
xchg
xchg
ja
push
cwtl
std
add
and
fwait
sbb
and
divb
lcall
mov
inc
mov
mov
data16
and
nop
lret
das
andl
sbb
jbe
jg
out
hlt
xor
dec
das
cld
testl
or
push
ljmp
and
mov
pop
lock
cltd
cmp
or
out
mov
stc
add
dec
dec
rdpmc
mov
invd
out
jb
int
xchg
xor
fisubl
xchg
mov
sub
pop
push
cs
ss
repnz
sbb
adc
mov
enter
std
jle
or
fistps
ja
xor
sub
xchg
mov
ret
pop
dec
sub
call
std
leave
fdivrs
push
aam
dec
jne
js
push
sbb
xchg
test
sbbl
xor
test
test
neg
sbb
xchg
jge
sarl
pop
pusha
mov
dec
int
stos
jle
shll
mov
xor
or
and
pop
aaa
call
cltd
ret
and
push
sbb
cmp
ffreep
mov
punpckhbw
inc
std
mov
pop
in
push
fwait
aad
xchg
cmp
inc
dec
popa
mov
push
sbb
cmp
or
cmp
fisubrs
jge
sub
push
mov
test
ja
test
sub
push
sbbb
dec
xor
sbb
mov
popf
xor
mov
das
clc
shrb
adc
ret
mov
sub
lods
mov
sub
sbb
xor
imul
mov
loope
add
in
into
adc
sub
pusha
fistpll
mov
cmpsl
mov
les
inc
loop
push
test
push
or
push
daa
gs
adc
mov
gs
dec
and
sti
rorb
in
push
xchg
aas
fdivrs
push
std
or
or
mov
repz
pop
divb
add
mov
fmuls
mov
dec
and
in
push
push
inc
adc
mov
rolb
mov
push
jne
xchg
je
fwait
std
int3
adc
sub
stos
jae
ficoms
test
mov
jae
jle
daa
jl
out
pop
pop
mov
sub
xlat
or
pop
xchg
mov
pop
mov
jne
nop
aam
lods
loope
mov
jne
mulb
cwtl
mov
mov
adc
pop
aad
pop
and
cmpl
test
mov
test
stos
lcall
or
fst
inc
pop
jbe
in
cwtl
jl
sar
pop
push
jne
and
in
cmpb
jmp
add
ds
movsb
xchg
dec
in
pop
dec
in
push
stos
clc
cmp
lret
fdivrs
int
das
inc
xchg
out
test
mov
pop
imul
mov
lret
lea
not
dec
mov
popf
inc
dec
lret
push
stos
and
xlat
mulb
ret
fstps
outsb
cmc
jg
mov
add
ret
mov
mov
mov
xchg
pusha
dec
mov
mov
ret
sbb
mov
inc
cmp
inc
xor
lods
das
jb
imul
and
jecxz
dec
cmp
add
shrb
ja
lods
mov
rcrl
lods
xor
and
and
ss
jge
mov
mov
or
xchg
cmp
mov
clc
xchg
push
je
mov
sub
xchg
cld
and
add
and
push
cltd
pop
xor
fstps
mov
mov
jae
in
xlat
mov
mov
mov
jecxz
adc
inc
in
sub
add
subb
mov
cmp
aas
push
das
inc
cmp
cltd
pop
aaa
or
or
mov
data16
pushf
in
jmp
aam
mov
sbb
sti
push
mov
ljmp
and
push
jmp
fimuls
lcall
jae
nop
xlat
cwtl
lds
arpl
imul
in
and
push
ror
fs
out
push
pop
pop
push
push
or
in
jge
fsubs
loop
push
jle
cmc
dec
xchg
sbb
push
ret
into
in
mov
lret
cs
adc
or
vmovmskpd
xor
jl
cli
cld
mov
outsl
jo
repz
test
pop
inc
psubusw
imul
xor
dec
outsb
sbb
jae
gs
jo
dec
xchg
mov
dec
lcall
sbb
sub
ds
mov
mov
shrb
add
and
repz
in
adc
mov
xchg
decl
stc
repnz
sahf
sbb
sub
out
dec
pop
stc
pop
xor
in
xchg
cmp
imul
adc
mov
iret
pop
mov
rclb
add
push
inc
xchg
subl
testl
out
arpl
stos
leave
sbb
fdivrl
out
fcmove
push
pop
aad
cs
lods
pop
nop
push
adc
mov
sbb
cli
mulb
cmpsl
test
stc
int3
lds
dec
push
shlb
xchg
mov
xchg
inc
dec
and
testl
clc
test
iret
cld
pop
sbb
and
mov
sub
repnz
inc
cmp
sub
lods
nop
repz
rclb
aam
xor
aas
andb
jl
jmp
jno
in
push
repz
gs
in
dec
push
loopne
sub
ret
andb
out
js
cmp
imul
fldenv
ljmp
shll
push
xor
ret
mov
xlat
cli
xor
into
inc
push
subl
or
ret
jns
das
addb
or
call
jnp
fs
ljmp
inc
sub
mov
pop
xor
scas
pop
xor
pop
jae
mov
test
in
inc
jecxz
mov
lret
jo
xor
test
mov
fmuls
mov
adc
daa
add
or
lahf
inc
mov
pop
pop
popf
stos
outsl
mov
jbe
jg
inc
rclb
mov
mov
and
dec
psadbw
addr16
sub
fldcw
mov
inc
daa
add
lcall
aaa
jno,pn
sub
movsl
and
sub
out
sahf
xchg
test
in
mov
fiaddl
pop
outsb
add
arpl
or
add
cli
xchg
repnz
sbb
adc
lods
pop
xchg
movsl
jp
imul
mov
out
jl
mov
and
std
aas
stos
lods
inc
mov
adc
jp
and
mov
movsl
mov
inc
lds
fsubl
mov
jl
daa
or
and
maskmovq
imull
int
test
mov
filds
xchg
jno
mov
roll
pop
outsl
jo
jno
lock
mov
mov
int3
fwait
adc
ljmp
sub
imul
push
push
mov
sub
cmp
sub
lods
cld
es
or
loop
jl
pop
cli
int
loop
pop
sahf
jns
pslld
mov
cmp
adc
cmp
insl
and
jecxz
add
xor
adc
cmp
sahf
mov
cld
and
fwait
in
sbb
dec
adc
jb
test
popa
das
scas
xor
xchg
jg
add
xchg
dec
mov
push
pusha
fsubrl
repnz
sub
xchg
or
ficoms
lock
push
jmp
popf
jle
insl
popf
push
pop
add
out
aam
mov
xchg
sar
cmp
mov
inc
adc
or
lods
fsubp
repnz
add
stos
xchg
xor
lock
pop
push
mov
sub
ret
xchg
pop
int3
fiaddl
les
adc
mov
mov
xor
fldt
jl
inc
xor
dec
fstl
xor
pop
adc
aas
fstpl
add
mov
push
cmp
clc
mov
or
ret
lret
pop
mov
inc
incb
jnp
and
andl
pop
or
mov
and
jbe
mov
mov
nop
subb
inc
adc
or
insb
adc
loopne
and
mov
pop
cmp
push
sti
faddl
iret
out
xor
mov
add
repnz
or
mov
repz
loop
incl
shll
add
in
xor
mov
je
loop
bound
lret
je
imul
out
pop
clc
loopne
nop
sbb
jmp
push
roll
add
mov
adc
fildl
cmpsb
dec
dec
mov
or
pop
clc
mov
jnp
sbb
adc
outsl
xor
lods
add
std
adc
xchg
cltd
rcl
mov
shl
jb
cmp
jecxz
jne
scas
test
and
xor
jnp
sub
or
addl
and
pop
sti
hlt
xor
add
imulb
mov
xchg
movsl
es
in
fsubrs
jmp
inc
loopne
xchg
jg
push
pop
mov
sbb
in
adc
pop
xchg
xor
add
mov
jmp
xchg
lds
lea
inc
dec
insl
in
adc
jns
add
dec
lods
sbbb
mov
xchg
or
sub
aad
xchg
adc
fsubs
and
cmp
mov
ret
sbb
test
mov
mov
pushf
dec
loop
push
stos
std
sbb
rclb
mov
pop
sahf
mov
in
push
scas
fcmovnu
mov
imul
dec
test
ljmp
addb
cmpb
je
daa
jne
inc
sbb
xor
and
int
push
rorb
js
inc
cmc
rolb
dec
cmp
divl
push
inc
cmp
ret
sbb
adc
push
ret
aad
cmp
movsb
add
pop
mov
mov
add
mov
push
test
lahf
jmp
pop
mov
or
or
fs
jle
aaa
pushf
cmp
add
push
sub
cltd
mov
cli
cld
and
dec
sub
push
push
xor
mov
dec
clc
fdivrs
cwtl
xor
js
mov
sbb
pop
cmp
xchg
test
mov
add
sbb
sbb
or
pop
ret
and
fmull
and
dec
ret
push
sbb
adc
mov
jge
subb
fdivp
pop
xor
outsl
stos
cmpsl
imul
mov
test
repnz
jg
out
jo
or
mov
xchg
jmp
pop
mov
jg
shll
dec
and
roll
xlat
out
mov
xor
test
inc
loopne
jl
jg
mov
xor
cmp
imul
or
cli
mov
std
add
mov
pop
pusha
mov
lcall
jle
jbe
add
inc
sahf
inc
bnd
fistpl
out
lock
aaa
lret
mov
hlt
jo
xchg
ret
mov
mov
hlt
jp
inc
jmp
mov
adc
add
ret
scas
dec
lods
inc
popa
aaa
movsl
lock
xchg
sub
mov
push
aam
or
fsubrs
outsb
roll
inc
fidivrs
pushf
inc
jne
and
movups
shll
aas
or
jne
dec
push
sub
aam
test
jge
cmp
add
sub
fdivl
jecxz
mov
ljmp
leave
js
xchg
dec
xor
and
hlt
movsb
jne
inc
sub
and
xorb
repz
std
mov
insl
out
gs
push
mov
push
add
in
push
in
xchg
mov
and
jp
cmp
ss
push
loop
inc
popa
pop
dec
and
inc
mov
mov
mov
popw
fstps
fidivs
jmp
mov
sub
lea
popa
or
add
and
adc
outsb
jnp
adc
pop
add
inc
fcomps
int
in
adc
add
push
cltd
movsb
imul
pushf
loop
jp
ja
arpl
lods
mov
rcrl
adcb
lea
or
pop
scas
out
mov
add
insb
int
jb
jbe
sub
add
leave
mov
push
mov
incb
data16
pop
cld
mov
jno
push
movb
jae
xchg
cli
jns
sub
leave
add
sbb
jecxz
sub
sbb
push
push
push
adc
dec
adc
jnp
xor
popfw
out
and
xchg
movsl
xor
sbb
pop
mov
sub
mov
cmp
outsb
sbbb
icebp
push
pop
fwait
pop
int
pop
sub
fcoml
jae
stos
cmp
mov
inc
je
stos
jae
cmp
xor
fisttpl
push
gs
mov
sbb
stc
push
mov
mov
arpl
loop
dec
jg
mov
jp
inc
mov
inc
and
pop
lcall
aaa
cmp
cmp
sbb
in
jp
dec
add
movsb
xor
paddsb
lods
insb
inc
scas
and
push
jge
int3
mov
sub
pushf
into
std
pop
mov
dec
insl
push
xchg
imul
clc
xlat
inc
je
in
add
push
mov
ja
inc
cld
sbb
adc
inc
addr16
arpl
std
inc
ljmp
jo
imul
leave
jp
out
push
or
push
mov
jb
xchg
add
sub
es
xchg
cmc
lock
loope
aam
adc
xlat
das
dec
add
mov
jge
lods
ret
cmpsb
movsl
sahf
stc
lcall
pop
or
mov
mov
lock
into
fs
push
mov
cli
add
sbb
nop
cmpsl
imul
dec
jmp
jge
jecxz
in
push
outsb
hlt
jnp
jecxz
mov
pop
adc
pop
sbbb
fstpl
jecxz
hlt
dec
fwait
xchg
xchg
imul
sbb
icebp
negl
mov
lcall
ljmp
mov
pushf
add
mov
addr16
test
cmpsl
movsb
xchg
mov
xchg
inc
int3
xor
xchg
ffree
cmp
leave
out
stos
cmc
arpl
shlb
mov
dec
inc
sbb
stos
lea
iret
aas
cltd
mov
stos
jl
shlb
xchg
push
ds
jp
lret
push
lcall
lahf
pushf
mov
xor
mov
jmp
call
mov
hlt
enter
rcrb
repz
or
and
push
mov
out
sub
mov
push
dec
fsubrs
cmpsb
sahf
mov
aas
imul
addl
xchg
stos
jecxz
jecxz
sbb
mov
pop
jmp
add
in
jge
mov
ret
mov
add
dec
bound
stc
sbb
or
mov
dec
xlat
jge
test
pop
aas
mov
popf
cmp
stos
or
call
jo
mov
xchg
push
dec
repz
pop
faddl
ja
inc
lds
jns
sbb
repz
sbb
mov
fidivrs
das
popa
jnp
les
push
sbb
push
or
lds
jae
shlb
sbb
sbb
std
push
int
mov
mov
cld
loopne
test
cmp
popf
out
dec
xor
int
test
xchg
add
cwtl
jmp
hlt
dec
movsl
mov
sub
gs
xchg
mov
push
mov
iret
add
cmp
cmp
xchg
mov
mov
fcmovnu
fprem
adc
dec
adc
out
xchg
sbb
sbbb
mov
add
aad
jne
int
insb
cs
scas
popf
xchg
ja
rol
mov
dec
insl
mov
gs
rorb
ffree
mov
cmc
sahf
pushf
jle
clc
pop
fwait
jne
xchg
clc
mov
mov
arpl
jl
sar
inc
dec
dec
cld
ret
mov
shrl
sbb
sub
jmp
hlt
and
sti
ret
fbstp
mov
sub
adc
jecxz
dec
pop
push
lret
push
jge
inc
testb
jmp
shrb
pop
sti
inc
or
movsl
push
pop
jge
sub
xchg
ds
xor
and
xor
adc
in
lahf
cs
filds
mov
cltd
mulb
cltd
xlat
xchg
xchg
sarl
mov
xor
ljmp
out
mov
popa
push
xor
xchg
mov
ljmp
sub
mov
sub
dec
push
repnz
jle
inc
or
lea
xchg
dec
aad
sub
ret
call
sbbl
adc
cmp
mov
test
cmpsb
push
push
movsb
inc
les
mov
cmp
fcoms
jp
jmp
xchg
mov
xor
push
std
cmc
movsl
mov
mov
cmc
int3
stc
aaa
pusha
repnz
movsb
mov
push
stos
fisubrl
push
jge
cmp
mov
mov
xor
ja
or
sarb
fsubs
push
inc
jns
outsb
dec
push
inc
inc
mov
inc
in
mov
imul
mov
loopne
adc
add
mov
cmp
or
insl
xor
cmp
mov
push
pop
xlat
repnz
jp
aas
push
inc
fs
test
cwtl
loop
add
loopne
and
aam
cmp
mov
jae
mov
or
push
adc
cmp
shrl
mov
add
movsl
popa
nop
leave
mov
fsubs
dec
push
cmp
add
repnz
cmp
mov
lods
cld
loopne
jp
pushf
sub
lock
and
sub
xchg
dec
mov
push
std
movsl
cmpsl
and
mov
shl
push
loop
test
lock
ljmp
jnp
clc
les
loop
js
lcall
test
or
sahf
mov
xor
sahf
lock
into
aam
mov
adc
pop
iret
push
cmp
push
mov
add
sbb
stc
mov
sbb
divb
es
jmp
orb
lock
inc
daa
pop
and
aad
les
jne
inc
jle
dec
clc
or
arpl
mov
pop
inc
or
sti
mov
shlb
cmc
fcmovnb
dec
cld
fsubrl
fbstp
addr16
fdivr
cmp
sbb
ss
push
je
adc
mov
cmp
repnz
dec
pop
out
jnp
addr16
adc
and
push
cs
jnp
jp
lcall
leave
ss
jle
cltd
aaa
push
push
push
mov
inc
pop
pop
jg
int
cmp
pop
dec
mov
lock
push
andl
sbb
insl
mov
pop
repz
or
pop
fistl
aam
je
mov
aad
lahf
pop
pop
xor
shr
js
push
xchg
lret
and
jg
dec
rcll
dec
call
mov
sahf
in
jg
pop
jnp
daa
and
or
ret
dec
dec
xor
mov
out
mov
fidivs
dec
xchg
aas
mov
inc
or
mov
aaa
xchg
sub
cs
nop
int3
insl
shl
pop
or
jl
clc
sub
mov
sbb
sub
sub
jl
cmc
cmp
imul
mov
sahf
xor
or
mov
pop
scas
jne
adc
or
pop
mov
cwtl
push
icebp
ret
notl
stos
loopne
mov
inc
pop
stos
call
mov
cld
xchg
sbb
pop
cmpl
push
mov
mov
loop
adc
pop
icebp
mov
out
mov
cwtl
lea
jns
add
stos
jg
sub
fcmovnb
adc
xchg
sarb
jo
push
jp
enter
add
repnz
or
push
xchg
fdivp
mov
adc
xchg
out
jb
in
sbb
add
repz
sub
push
mov
movsb
mov
in
stc
cmp
mov
jno
xchg
paddusb
or
jno
clc
push
sub
in
sbb
ficomps
jle
push
sbb
dec
out
mov
cmp
js
mov
pop
add
mov
push
xor
cs
or
mov
mov
pop
push
mov
or
xchg
popf
cli
in
cmp
lds
cmp
jmp
in
mov
xor
cltd
lahf
sub
nop
sbb
jnp
cmp
popa
inc
fimull
repz
sub
adc
xor
ret
fwait
je
jae
repz
je
fstl
insb
loopne
pusha
cltd
data16
lcall
inc
mov
pop
repnz
pop
repz
das
shl
mov
mov
pop
jp
lea
pop
enter
push
rorb
mov
mov
xchg
hlt
xchg
pop
dec
jl
lret
pusha
nop
test
add
sbb
mov
mov
mov
lret
pop
mov
scas
cmpsb
mov
repnz
jg
popf
xchg
sub
je
push
outsb
mov
dec
jo
add
mov
cld
dec
ja
neg
loope
fisubrl
xlat
and
mov
das
inc
adc
xorl
xor
shll
iret
xchg
insl
adc
fsubrl
jbe
int
inc
arpl
mov
pop
adc
fadd
pop
xor
sbb
cmpl
xor
std
andl
or
add
mov
add
mov
in
xchg
or
push
adc
in
dec
jne
mov
nop
in
mov
sub
mov
sbb
fildl
jle
mov
and
das
cs
lds
test
dec
leave
push
xor
cli
test
jmp
mov
add
int3
and
mov
xchg
nop
sar
fmull
jbe
ret
dec
xchg
xor
test
dec
lcall
mov
mov
test
mov
mov
jg
daa
mov
jl
lea
jae
sahf
lods
int3
inc
jp
call
enter
jbe
xor
lret
int
dec
adc
int3
add
arpl
inc
mov
insb
mov
xchg
ret
xchg
or
push
dec
cld
nop
add
stos
or
or
iret
or
addl
ljmp
xchg
push
ss
loop
xchg
out
sub
and
addl
mov
xor
aam
inc
xchg
adc
jg
inc
xchg
stos
jae
iret
jnp
jnp
mov
jge
cld
aam
jmp
mov
add
jp
xchg
push
daa
sub
pop
scas
and
rdtsc
bound
pusha
out
aaa
and
sbb
xor
popf
adc
aaa
push
mov
inc
mov
pushf
mov
in
mov
div
test
test
aad
inc
cmpsl
adc
das
les
cld
inc
repz
ds
daa
rolb
sub
loope
xchg
xor
psrad
mov
lret
call
cmp
adcl
pop
jbe
mov
ror
add
scas
nop
jne
rclb
std
or
and
es
shr
in
xchg
ret
repz
adc
negb
popa
cmp
call
xor
cwtl
push
test
inc
adc
fists
or
dec
ja
call
sbb
mov
mul
adc
out
cmp
xor
push
or
push
test
ret
add
xor
mov
clc
and
xchg
in
mov
cli
xchg
inc
jg
mov
sbb
push
js
enter
out
xchg
leave
cmp
mov
lods
nop
aad
in
xor
into
pushf
xchg
mov
mov
xchg
mov
pop
in
cmc
fs
xor
das
xor
test
cmp
pop
dec
jmp
inc
fs
ficompl
mov
adc
jno
mov
hlt
adc
pop
and
sub
xchg
loopne
aad
pop
xchg
xchg
aaa
lea
or
or
test
mov
fmulp
mov
int3
addr16
xchg
dec
popf
loopne
add
jae
pop
push
jl
test
aam
push
insb
xor
fwait
xchg
cmc
jmp
lea
sub
dec
or
pop
sub
insl
cmc
dec
fdivr
or
xchg
cld
movsl
mov
es
or
clc
in
jo
pop
mov
push
test
lret
sub
roll
or
sub
mov
les
int
nop
mov
mov
imul
jo
lods
mov
add
xchg
sbbl
dec
inc
out
and
je
sub
sub
test
lock
inc
xor
push
add
outsl
mov
inc
hlt
out
xor
mov
shr
xchg
insl
inc
mov
call
xor
inc
in
adc
push
push
jl
in
mov
mov
xchg
cli
mov
fnsave
xchg
das
mov
or
add
push
and
fyl2xp1
add
push
dec
xchg
lcall
or
lret
ljmp
jmp
rep
das
cmp
xor
into
cmp
dec
inc
mov
int3
adc
mov
shl
mov
mov
fadd
scas
rorl
nop
jl
shr
pop
jnp
add
sub
int
cmp
pusha
imul
push
or
gs
pop
in
adc
sar
jb
lods
dec
jle
sbb
pop
and
xchg
mov
les
lea
imul
push
std
scas
dec
scas
pop
pop
int3
adcb
push
adc
push
lea
inc
test
test
aad
in
add
adc
out
cmc
push
in
pushf
loop
pop
pop
orl
add
enter
loope
and
push
popf
cli
stc
mov
jge
rcll
jno
push
jno
daa
test
and
lret
fsts
and
out
inc
dec
or
test
repnz
xor
std
out
gs
movsl
push
cmp
hlt
xor
pop
push
mov
mov
mov
adc
arpl
rorl
or
mov
scas
adc
pop
mov
mov
outsb
sub
rorl
ja
fstps
rorl
push
in
mov
push
and
mov
sub
outsl
filds
dec
into
mov
gs
or
sbbl
test
aad
out
loopne
pop
xchg
mov
jb,pn
adc
xor
push
out
xchg
sbb
push
jb
push
xchg
mov
int
andb
add
adc
pop
test
pop
inc
push
jo
xor
fisubs
hlt
mov
negb
bound
adc
push
pop
pop
in
fmuls
cli
aad
xchg
and
and
nop
mov
add
or
in
lret
in
hlt
and
pusha
popa
imul
mov
jmp
sub
and
push
lds
into
jge
sarl
mov
jle
pop
jne
mov
aad
dec
in
mov
scas
stos
sub
jle
ss
xchg
lods
aaa
mov
add
jb
dec
pop
cwtl
pop
jecxz
std
jb
xlat
sbb
or
std
out
subl
push
lahf
jl
aam
int3
inc
scas
in
mov
stos
jne
mov
movsl
shll
scas
adc
xchg
xor
fstps
lret
push
xchg
and
daa
adc
cs
inc
push
or
sub
ss
and
inc
push
mov
jecxz
int3
cmp
int3
popa
xchg
push
outsb
jecxz
pushf
jecxz
sbb
dec
xor
dec
jle
insb
clc
faddl
inc
mov
sarb
xchg
iret
test
iret
out
aad
pop
out
push
outsl
xor
std
adc
adc
xor
pushf
fisubs
sbbb
push
out
adc
ret
sbb
xor
stos
push
sub
adc
inc
sub
inc
test
mov
cmpsb
data16
insl
xor
call
cmp
mov
je
jmp
test
aaa
and
push
or
mov
mov
cli
mov
inc
fcomps
inc
mov
cld
lcall
lods
push
adc
push
mov
jne
xor
cltd
imul
outsb
or
xor
add
and
or
icebp
jl
incb
lods
insl
fbld
sbb
mov
stc
ret
addr16
shll
xor
jo
add
mov
xchg
insb
clc
jge
in
cmp
cli
arpl
xor
xchg
pop
shlw
test
test
pop
scas
sbb
lahf
pop
shr
sbb
inc
sub
addr16
pop
xor
addr16
cmc
test
mov
xchg
xor
adc
xchg
xlat
loop
push
out
loope
loop
adc
mov
lea
fidivrl
xchg
movsb
aad
scas
cmp
mov
add
imul
dec
lret
daa
mov
nop
jbe
lahf
xor
int3
int
aad
inc
bound
push
dec
bound
push
imul
xchg
pop
out
test
shl
push
jl
xor
imul
jp,pt
cmp
push
dec
orb
xlat
jp
inc
and
not
fmulp
xor
test
daa
sbb
aad
in
jb
xchg
in
lods
popf
repz
ret
cmp
jg
test
sbb
daa
adc
jbe
sti
repnz
rol
xchg
loopne
sbb
jecxz
sbb
movsb
fwait
sbbb
push
lea
lea
imul
adc
aam
cs
repnz
leave
movb
and
fcmovnu
pop
cltd
mov
out
lret
push
push
pusha
mov
repnz
popa
mov
xorb
cmp
or
inc
lcall
data16
sub
and
ficomps
push
popf
jg
pusha
sub
push
pop
stos
cmp
jae
xchg
je
aam
xor
leave
sub
out
inc
out
das
mov
xchg
mov
out
sarb
mov
jae
clc
in
negb
cwtl
add
add
sarl
push
mov
out
push
aam
inc
sub
sub
mov
xchg
mov
in
lcall
cmp
lods
repz
call
js
xchg
and
jecxz
repnz
sub
mov
sub
data16
xor
cmp
push
inc
push
pop
xor
pop
aas
je
data16
test
mov
shlb
lods
ljmp
mov
mov
dec
test
adc
fbstp
adc
mov
mov
shl
out
mov
adc
call
imul
gs
xchg
fildll
add
lods
xlat
insb
and
push
dec
mov
xor
loop
or
dec
pop
adc
out
and
int3
mov
idivl
dec
sbb
xor
nop
jecxz
mov
mov
sbb
xor
aas
arpl
in
loope
pop
push
pop
cmp
jae
mov
mov
mov
mov
inc
mov
inc
aad
lods
data16
repz
dec
jle
stc
movsb
inc
jne
cs
sbb
into
xchg
mov
ss
outsl
in
dec
daa
loopne
movsb
mov
jp
xchg
xor
push
pop
add
mov
addr16
sbbb
gs
cmc
rdtsc
fdivrl
shlb
outsb
adc
aam
add
mov
sub
sti
imul
pop
enter
lcall
and
sbb
mov
mov
pushf
dec
cmp
pop
and
stos
cmp
pushf
sbb
daa
sbb
test
mov
mov
xchg
add
int3
mov
faddl
test
es
mov
outsl
inc
xchg
outsb
pusha
in
data16
push
lods
sbb
int3
test
mov
popa
pop
arpl
push
sbb
ja
popf
andl
in
enter
lcall
sar
std
xchg
dec
sub
setne
sti
xor
mov
xor
bound
cmp
mov
aam
inc
dec
fildll
sbb
lea
sbb
pushf
mov
dec
fisttpll
jp
fsubrs
divl
sbb
cmp
ljmp
lret
mov
xchg
push
leave
mov
xor
mov
mov
add
bound
push
stc
xor
lahf
fsubrl
or
mov
jg
test
or
hlt
inc
pop
xor
mov
je
inc
faddl
loop
cmp
dec
cmc
jl
pushf
outsl
js
xor
add
stos
gs
fisttpl
sub
or
stos
mov
lods
jb
jae
xchg
mov
ret
mov
cltd
shlb
bound
leave
cs
mov
into
sti
fcompl
pop
dec
push
std
push
call
jb
out
mov
lret
jae
or
dec
shll
movsl
stc
xor
mov
nop
incb
imul
adc
in
pusha
ljmp
sub
sub
inc
stmxcsr
imul
test
out
into
movsl
test
in
push
aaa
pop
pusha
out
mov
fadds
dec
sub
sub
sub
xor
and
mov
cmp
and
loop
out
push
inc
jo
in
bound
cmp
mov
dec
mov
mov
mov
insb
xor
xchg
ret
lea
cmc
xchg
movsb
sbb
sti
pop
push
clc
cmp
inc
mov
movsb
mov
pop
inc
or
stc
add
iret
fsubl
xchg
inc
and
shl
jmp
dec
ja
in
stos
lods
lea
jge
sbbl
jmp
addr16
adc
push
hlt
lret
xchg
lahf
mov
jmp
xor
and
repnz
mov
cld
push
or
adc
push
push
shr
or
push
fcompl
cmp
xor
es
cmp
mov
add
orl
jp
push
insb
shll
pop
jecxz
add
fcomps
int3
sahf
scas
test
shlb
scas
das
movsl
and
addr16
xor
jnp
xchg
fistpl
adc
cs
pusha
adc
sbb
xor
cwtl
jno
ja
push
mov
mov
ljmp
sub
leave
lret
sbbb
mov
adc
mov
idiv
push
cmp
clc
sub
and
sti
inc
push
shrb
into
cmc
testl
pushf
ret
test
ja
movsb
sti
push
add
fcoml
lret
jo
jb
insl
mov
fisttps
fwait
jb
cs
mov
les
inc
jb
movsl
fcompl
loopne
aas
sub
scas
out
sub
mov
inc
cmp
cmpsb
movsl
inc
lock
mov
add
mov
scas
loop
xorb
popl
out
and
dec
cmp
lret
adc
sbb
xor
push
jo
mov
pushf
pop
imul
test
sti
pop
pop
jle
and
loope
ljmp
jbe
and
pop
and
iret
cmp
mov
mov
mov
pop
sbb
jecxz
jle
add
mov
lret
hlt
xchg
mov
out
pop
ret
cmp
or
jmp
mov
sbb
jp
cmc
lock
dec
shl
add
movsl
adc
sbb
cmpsb
ret
imul
adc
xor
daa
aas
addr16
mov
mov
inc
xor
cmp
popf
icebp
sub
rcrl
fucomi
sbb
jg
dec
adc
inc
in
int
test
loopne
mov
ljmp
inc
into
out
leave
cli
xor
out
dec
arpl
and
jno
cmp
nop
imul
test
je
rorl
sub
push
jp
pop
mov
pop
aas
mov
adc
jnp
xor
push
mov
cmp
test
pusha
outsl
jb
out
mov
jns
pushf
fs
adc
shrb
fsubrl
subl
cmpsl
out
aaa
pop
jl
mov
lret
cmp
cmp
and
mov
and
ds
cmp
stos
jle
rolb
lods
js
cmp
sub
pcmpeqw
stos
popf
or
cmp
push
pop
jge
mov
testl
xor
jmp
mov
xlat
dec
push
ret
iret
jne
in
fsubrl
pop
cmpb
mov
xchg
dec
push
adc
sub
int
rorb
out
inc
jo
push
mov
mov
leave
inc
lcall
jge
mov
ss
pop
roll
hlt
pushf
repnz
ja
mov
inc
mov
test
jo
movsl
sbb
push
push
pop
mov
jae
lods
test
shlb
pusha
or
sbb
xchg
nop
popa
jb
push
sub
filds
jb
sub
adc
bound
out
ror
mov
ja
jmp
pop
adc
xacquire
jae
sbb
mov
add
xchg
xor
adc
inc
add
leave
or
mov
insl
jl
rcl
ja
popa
cmp
testb
xchg
jbe
pop
dec
out
jbe
xor
xor
into
push
mov
in
cli
xchg
adc
pop
pop
xor
sub
mulb
push
lods
pop
jmp
decl
iret
fimull
adc
fistpl
inc
ret
mov
cltd
push
ret
sbb
cmc
or
shll
or
lea
sbb
inc
xlat
push
stos
pop
fisttps
call
roll
test
movsb
cld
jb
and
mov
icebp
xchg
push
xor
lcall
pop
sub
mull
sbb
pop
aas
rorb
sti
xor
fstpl
pop
setns
out
mul
test
aad
js
rcll
and
lcall
xor
out
out
xchg
inc
pop
cmc
adc
fidivrl
cmpsl
jbe
push
repnz
lds
mov
mov
or
cmp
daa
data16
jmp
sub
mov
mov
mov
mov
cmpl
mov
fisttpl
and
inc
fsubrs
or
jo
scas
xor
mulb
mov
or
loope
xor
jmp
test
push
xor
std
adc
cmc
icebp
xor
jecxz
lret
fs
dec
ret
xlat
sub
sub
in
into
aaa
movsb
mov
loopne
rclb
lods
into
dec
adc
in
inc
cmp
pop
hlt
push
cmpsl
aaa
incl
loopne
mov
test
repz
dec
pop
cmpsb
xorb
cmp
sub
add
rclb
pop
bt
xchg
jae
cmp
mulb
sub
pushl
mov
sbb
std
mov
leave
and
or
sbb
pop
fidivs
mov
jp
aam
fldt
inc
or
jmp
ja
andb
sub
rclb
xchg
pop
js
mov
flds
pop
cltd
notb
jae
imul
test
and
in
cmp
lahf
pop
scas
in
sub
pop
not
gs
es
jle
in
test
inc
adc
sub
add
sub
sbb
inc
jecxz
std
outsb
cmp
popf
lea
add
fistpll
scas
icebp
mov
aad
pop
and
sarl
sub
push
and
jmp
push
inc
sbb
lods
int
mov
mov
test
int
add
mov
fadds
add
pop
mov
testl
pop
loope
jns
mov
aam
push
xchg
and
jns
mov
das
gs
and
cmp
bound
xor
test
add
pop
jb
jae
repz
adc
test
mov
clc
je
and
lcall
fdivrs
cmp
das
push
ffreep
in
mov
test
push
dec
add
outsl
xchg
sti
sub
push
and
dec
xchg
fcoms
and
pop
icebp
inc
sub
cmp
aad
sbb
out
sub
jne
mov
push
sub
shlb
sbb
stc
js
ficoml
mov
imul
aaa
out
fistl
lds
xor
aad
jnp
jns
aad
xchg
int3
test
pop
idivb
adc
jge
cld
cmp
push
cmp
lahf
stos
test
rcrl
scas
cmp
sarb
in
add
pop
cmp
movsl
imul
fmuls
dec
mov
test
cmp
leave
sbb
ret
mov
dec
mov
mov
aam
insl
mov
mov
sub
lahf
push
adc
mov
push
imul
aaa
enter
jbe
mov
pop
add
inc
dec
adc
dec
mov
cmp
lods
int3
je
cmp
stc
jl
aad
and
and
fcmovb
mov
fs
adc
cmp
outsb
sti
subb
das
add
xor
and
rcrb
cmp
incl
fadds
sbb
movsl
in
push
in
data16
loope
imul
push
pop
mov
test
pop
mov
and
sbb
idivb
or
mov
aam
xchg
xor
push
xor
lds
es
mov
dec
sbb
arpl
rcl
dec
movsb
inc
sbb
scas
sbb
jle
push
mov
jae
scas
mov
dec
push
lret
mov
xlat
jns
cli
add
iret
cmp
imul
sub
sub
call
push
jb
fistpl
xchg
dec
sbb
call
loop
data16
pushf
repnz
push
cmp
cmp
jns
dec
testb
ljmp
jb
pop
dec
inc
imul
pusha
outsb
mov
lahf
stos
and
pusha
leave
fldcw
rcl
jp
cmp
and
sub
pop
sub
outsl
mov
lock
fdivrp
aaa
repnz
lret
jno
xchg
sbb
stc
ret
pop
mov
xlat
add
dec
xchg
lds
scas
aad
inc
jle
push
xor
sbb
ret
ficompl
inc
pop
mov
ds
cmp
cwtl
pop
mov
popa
fildll
cmpsb
xor
clc
pop
mov
rcr
inc
or
cmp
cmc
scas
mov
data16
enter
outsb
fs
cmc
lahf
repnz
pop
out
popf
push
inc
outsl
sbbb
hlt
xchg
xchg
subb
idivb
dec
test
jo
dec
movsl
push
push
dec
cld
ficoml
jmp
in
pop
cld
iretw
rcl
fwait
imul
das
and
inc
cmc
scas
movddup
mov
movsl
cmpsb
jmp
pop
out
andb
cmp
sbb
out
adc
roll
loope
cmp
movsl
push
xor
sahf
mov
xor
push
jle
loopne
push
rolb
fsubrs
mov
aad
es
aaa
ljmp
jns
or
dec
repz
inc
mov
scas
mov
xchg
mov
jp
sub
stos
rcll
mov
mov
dec
mov
push
dec
aas
inc
dec
test
cmp
addr16
inc
dec
sub
bound
push
cmp
cli
test
push
pop
mov
jb
sbb
add
mov
inc
push
fistpl
xchg
xchg
loop
mov
xchg
fiaddl
sti
push
lcall
std
jp
loope
sub
stc
clc
leave
lods
cld
sbb
jle
int
in
bound
jle
movsl
push
shlb
test
and
push
adc
sahf
sub
mov
mov
sti
mov
pop
sarb
sub
inc
mov
outsb
xchg
pop
loope
mov
repnz
add
into
cmpsb
ss
xchg
sbb
rorl
stos
into
outsl
or
push
cwtl
loope
mov
popa
and
ja
fs
stos
fimuls
inc
js
or
sbb
mov
jmp
out
ds
test
flds
jl
and
and
push
cmp
mov
rorb
lret
arpl
test
push
pop
mov
ds
xchg
sub
push
and
loop
dec
pop
mov
shlb
cmp
repz
cmp
push
mov
dec
dec
add
xor
stos
lahf
orl
mov
int3
sti
cmc
dec
jne
push
jmp
addr16
cmp
adc
push
aad
insb
shlb
jo
xchg
sbb
les
mov
test
icebp
shll
sbb
pushf
fidivl
daa
ss
cmp
mov
push
xchg
inc
and
lret
ljmp
xchg
mov
imul
add
inc
mov
inc
xchg
or
hlt
dec
arpl
jno
fcomps
mov
or
xchg
push
subb
sub
mov
out
lret
inc
and
add
imul
sbb
xor
cmc
fwait
stc
shr
mov
mov
dec
sbb
cli
pop
mov
stos
lea
mov
fcoml
adc
das
mov
in
xor
push
inc
adc
insb
fstpt
jge
adc
loope
xor
arpl
mov
adc
xchg
xorb
mov
and
stos
xlat
and
insl
xor
popl
add
xor
push
negb
pop
jns
lods
pop
add
jmp
xor
adc
iret
repnz
jmp
mov
popf
fcmove
jne
inc
cmp
jge
imul
stc
pushl
xor
divl
dec
neg
mov
sub
jle
mov
pop
cmp
fs
ljmp
outsl
mov
fs
adc
aaa
lahf
inc
imul
in
shl
aad
vmwrite
jge
dec
in
incb
sub
push
inc
pop
push
and
fwait
adc
push
add
aam
imul
or
mov
inc
xchg
sbb
or
cs
mov
fldcw
mov
sbb
fstpt
dec
and
popl
push
insl
push
pop
sub
stos
hlt
out
scas
sbb
nop
mov
cmova
jbe
pop
arpl
cli
mov
call
sbb
mov
xchg
inc
push
inc
popf
std
jle
adc
inc
cmp
mov
out
xlat
ds
and
test
mov
rclb
pop
cltd
lret
mov
testl
sbb
loop
xlat
inc
inc
hlt
dec
in
inc
jle
insl
sarl
loop
xchg
mov
out
and
adc
add
cmc
xchg
mov
pop
push
pushf
jmp
popf
mov
hlt
jle
fistpl
mov
es
xor
fnstcw
xor
xor
cmc
xor
cwtl
mov
jb
adc
mov
and
or
pop
push
int
int3
push
stc
push
out
es
mov
sub
inc
xchg
lea
push
mov
and
adc
loopne
bnd
add
adc
pop
dec
das
in
and
inc
lea
cmp
and
aaa
jno
lret
xchg
cli
lods
jnp
orl
adc
out
loope
or
jg
test
pop
ds
xlat
rorl
xor
sbb
es
and
sbbl
cli
mov
jmp
add
ss
xlat
mov
mov
je
ret
push
jle
dec
outsl
mov
in
xchg
and
sbbl
mov
mov
test
pusha
pop
lret
jo
rol
sar
cmc
mov
fistl
sbb
jg
sbb
cmpsl
mov
cltd
cli
xchg
jae
push
push
popf
jno
loope
lock
add
call
adc
xchg
sahf
dec
fisttpll
iret
jge
cmp
sub
subl
pop
jns
adc
pop
inc
lahf
sbb
cmp
mov
and
test
jns
pop
push
inc
push
pop
sbb
sub
pop
and
xor
jo
inc
jns
cmpsb
push
cmp
popa
jo
std
mov
cmp
loopne
call
inc
adc
scas
scas
gs
xchg
aad
dec
mov
jo
lods
movsb
xchg
popf
xlat
jnp
rolb
sti
rclb
dec
add
mov
sahf
popf
pop
lahf
add
iret
cwtl
xor
mov
cmp
ret
loope
orb
stc
loopne
out
mov
xor
mov
cmc
push
xorl
cwtl
jmp
fwait
test
movsb
jb
js
in
jns
pop
mov
dec
mov
xor
jecxz
test
mov
sub
inc
cmpsl
pop
dec
adc
pop
mov
add
push
xchg
mov
fildll
dec
and
or
sahf
or
mov
push
mov
mov
xor
adc
add
lods
or
mov
mov
mov
jb,pt
dec
dec
jge
xor
sahf
pop
fidivl
pop
xchg
mull
test
cmpsb
into
insl
inc
out
iret
mov
add
dec
lock
xor
test
xor
push
mov
cmp
sar
movsb
adc
mov
dec
fnstsw
sbb
loopne
rcrb
mov
mov
dec
fsubrl
push
cltd
dec
xchg
and
xchg
enter
mov
xlat
jmp
dec
rolb
xchg
push
push
push
jb
sub
pop
mov
pop
xorl
addr16
xchg
pushf
sbb
aaa
dec
pop
jno
xchg
rolb
xchg
mov
rorb
insb
mov
mov
subb
sbbb
outsl
fisttps
sub
and
jmp
cmp
fbld
js
mov
incb
or
or
jp
and
pushf
lea
sti
into
lods
jno
and
xor
std
add
sub
mov
imul
and
push
mov
xchg
mov
sbb
bound
out
cltd
das
inc
and
mov
inc
lods
stc
fstl
pusha
xor
mov
cmc
mov
push
mov
popa
mov
aas
js
outsb
dec
cmp
cmp
outsl
add
cmp
cwtl
call
repnz
xor
mov
pop
or
popf
jg
mov
ds
sbb
sub
mov
lods
mov
fistps
adc
push
and
in
dec
lret
outsl
negl
es
and
loopne
mov
inc
scas
pop
xchg
fistpll
pop
ja
sub
sub
mov
xor
mov
dec
lret
xchg
aam
fnsaves
inc
or
push
mov
inc
sub
insl
xchg
jg
xchg
dec
cmc
push
jnp
push
sbb
xchg
ss
fisubrs
add
jl,pn
mov
adc
aam
pop
xor
inc
ficompl
loop
jecxz
cwtl
cmpsl
xor
or
fs
fidivl
jmp
pop
popl
mov
out
pop
cmp
pop
outsb
cmp
fnstsw
test
stc
js
adc
push
jle
arpl
out
push
je
pop
stos
cmpsb
je
inc
pusha
adc
mov
dec
rorb
in
push
mov
pushl
mov
inc
dec
mov
cmp
std
xchg
loopne
mov
cwtl
inc
pop
lret
dec
dec
and
pusha
test
jb
jae
pushf
jae
insb
jmp
cmp
in
pop
cmp
lea
fistpll
or
stos
and
and
jmp
in
mov
outsl
clc
xor
nop
cmp
aam
jno
pop
or
add
sbb
div
sarb
fwait
jns
and
dec
cmp
adc
jecxz
pop
mov
cs
cmpsl
xorl
shrl
sub
cld
popa
fldt
pop
clc
testl
cmp
or
inc
scas
pop
mov
push
adc
mov
jl
sub
pusha
in
ss
pop
sbb
mov
push
xchg
aas
jo
lock
push
lock
add
rclb
add
cmp
mov
jo
mov
cmovs
mov
addb
mov
sub
out
sahf
sbb
ja
ja
push
or
inc
into
pop
xor
test
cmp
popf
mov
xchg
jbe
data16
xchg
add
incl
in
jmp
push
test
cmp
fisubs
jg
repz
push
cs
pushf
mov
mov
jbe
push
mov
out
js
push
insl
sbb
outsb
out
pop
push
xchg
es
nop
rcrl
xlat
jo
xor
insl
fistpll
pop
mov
insb
loope
in
mov
sub
loopne
dec
sub
rcr
jmp
ja
xlat
in
mov
inc
lds
pop
dec
jo
pop
rcll
ret
ljmp
push
insb
cli
hlt
fs
outsl
rorl
fnsave
test
sub
adc
or
mov
add
cmp
mov
dec
push
ret
dec
lret
push
enter
add
pop
sub
push
ss
xor
stc
jp
inc
mov
add
jg
pop
in
fdiv
cld
cmp
xorb
imul
scas
push
rcpps
pop
inc
sbb
cli
movsb
aas
cs
jecxz
add
or
jp
les
inc
mov
fiaddl
cli
pop
jecxz
pop
sub
jp
mov
sbb
imul
jle
hlt
push
sub
push
push
add
loope
pop
xlat
pop
test
inc
scas
xchg
pop
test
into
and
or
push
rcl
mov
fcoml
push
dec
dec
cld
push
imul
in
ljmp
int
repnz
incb
iret
sbb
xchg
add
lahf
or
mov
jbe
rorl
xor
pop
imul
xchg
pop
jns
sbb
xor
mov
cwtl
mov
mov
lret
sbb
pop
iret
gs
xchg
pop
push
arpl
mov
pop
or
ret
or
xchg
loopne
outsb
cmp
into
iret
fidivl
and
stos
rcll
aas
mov
or
dec
push
lahf
cmpl
insl
lds
pop
xor
mov
xor
arpl
out
xchg
rcrl
stc
fldl
jg
inc
out
sub
jnp
fidivs
aam
pushf
mov
pop
jge
das
sahf
daa
lea
jae
dec
int
cwtl
xor
mov
addr16
aas
les
sbbl
outsb
and
cmc
shlb
fs
inc
mov
cmpsb
testl
jle
aam
mov
jno
xchg
xchg
shl
jne
cld
xorl
xchg
xchg
sbb
nop
push
xchg
xlat
cli
pop
out
cmp
xor
mov
lea
sbbl
int
test
cmp
mov
mov
jo
pusha
dec
stos
add
icebp
cmp
ret
int3
nop
outsl
repnz
sbb
mov
hlt
xchg
push
sbb
and
cltd
imul
cmpsl
leave
out
dec
mov
fnsave
mov
notl
sub
xor
mov
mov
pop
incl
cmp
cmp
js
arpl
jge
xchg
mov
icebp
or
xchg
dec
daa
xchg
pop
je
cmpl
mov
in
nop
fidivrs
out
sbb
sbb
add
xchg
sub
push
inc
sub
or
fists
sti
mov
push
test
and
pop
push
movsl
mov
lcall
add
xchg
inc
loop
ds
popa
push
xchg
icebp
cmp
xlat
nop
stc
mov
xlat
repz
mov
nop
lret
lret
xchg
rcrl
and
cld
adc
test
pushf
jle
vmulss
sub
cmp
loope
mov
mov
in
dec
jle
shll
in
lret
shr
jmp
pusha
or
pop
mov
or
repnz
int3
outsl
shrb
mov
jle
mov
mov
subb
loope
jg
adc
xor
mov
sbb
test
jbe
dec
cmp
adc
jnp
sbb
pop
pop
mov
push
shll
sahf
cmp
lret
std
enter
mov
lahf
jecxz
push
cwtl
jne
jns
mov
test
pop
inc
jns,pt
cmpsb
in
and
sbb
pop
outsb
fiaddl
js
pop
je
dec
test
inc
insb
sbb
jns
jmp
sarb
into
cwtl
adc
cwtl
out
les
movsb
pop
test
inc
push
je
faddl
aad
xchg
incl
dec
sub
in
sub
add
cltd
pop
sbb
neg
pop
addr16
stos
push
cld
sbb
stos
lcall
data16
lahf
movsl
aad
clc
add
sti
xchg
sbb
leave
push
push
sbb
adc
andb
pop
ret
bound
cmp
jno
loopne
fisttpl
shll
lods
call
icebp
push
inc
jae
cld
mov
xchg
repz
scas
adc
jo
not
lret
xlat
push
in
ljmp
pop
push
repnz
xchg
cmpsb
test
adc
push
or
jp
cltd
nop
ficoms
jnp
out
jp
pop
xor
ds
movsl
sbb
popa
xlat
sbb
loope
or
sub
push
test
xor
dec
outsl
loopne
lods
push
faddp
rclb
xor
dec
jno
lcall
mov
sub
sahf
adcl
mov
inc
cmp
add
xchg
call
jne
or
sbb
fs
in
adc
cmpsl
dec
mov
dec
push
pop
scas
xorl
sbbb
and
inc
mov
pop
ja
jb
hlt
cli
in
cld
stc
es
cmp
inc
stc
outsb
add
negb
cld
popf
jmp
cmpsb
jae
out
xlat
and
test
pop
shrb
jnp
push
mov
imul
sbb
xchg
mov
xor
icebp
pop
mov
sbb
add
cli
cmc
fisttps
popf
jo
mov
and
test
jbe
lods
into
jge
jge
aad
xor
sbb
or
adc
xchg
lds
cmc
cmp
shrl
insb
pusha
inc
mov
lea
js
push
mov
xchg
mov
xor
jecxz
lock
fstpt
mov
shlb
xor
pop
test
cmp
pop
jmp
nop
cmp
sbb
or
sub
fldt
pop
mov
mov
mov
pop
insl
movsl
decl
out
sub
adc
mov
sbb
adcl
out
mov
sar
sub
xchg
stos
sbb
test
xor
arpl
jbe
adc
xchg
xor
subl
sbb
mov
xchg
fdivr
insb
lock
push
and
mov
lock
xor
cmpsb
out
and
xor
xchg
cmp
push
fmull
cmp
xchg
lea
push
mov
cmp
out
js
cli
fsubrs
in
xlat
mov
lret
out
lods
and
and
icebp
cwtl
cmp
imul
and
pop
and
imul
cld
sub
int3
sbb
nop
les
jne,pn
mov
ljmp
jp
jmp
mov
adc
sub
or
push
mov
dec
jle
std
pop
or
les
jo
pusha
ja
cmp
mov
movsl
fldt
lret
ret
fdecstp
mov
mov
inc
mov
jge
dec
jno
xchg
out
lret
mov
jo
xchg
fucom
sahf
rcll
fdivrl
push
push
mov
sbb
imul
lret
push
jp
ret
sub
test
gs
hlt
stos
sahf
sub
push
mov
insb
into
outsl
repnz
mov
cmp
jmp
adcl
leave
outsl
loope
fiaddl
call
jmp
loopne
mov
pushl
sbbb
jmp
imul
sbb
mov
bound
sbb
lret
lret
rcl
or
stc
fnstcw
mov
pop
mov
pusha
jns
fcmovbe
jl
jle
xchg
int3
add
xor
shrb
hlt
out
ds
fldcw
fs
jmp
mov
pushf
arpl
add
pop
int3
mov
repz
sar
and
pop
mov
fs
jp
sub
test
xchg
shrb
ds
inc
je
xchg
icebp
jp
enter
mov
fldl
int
sub
movsl
test
jae
mov
add
insl
leave
in
adc
sti
dec
jno
sbb
cmpsl
std
inc
cs
lods
out
inc
test
sarb
fmuls
sbb
lea
mov
pop
pop
xor
mov
imul
jg
push
lret
outsl
dec
mov
popa
dec
outsb
in
mov
lock
or
pop
test
test
push
jg
adc
mov
push
fwait
dec
sub
sub
aam
lahf
dec
test
mov
jo
dec
inc
movsb
cs
scas
and
inc
mov
test
cmp
add
mov
out
popa
out
and
pop
inc
jmp
lret
mov
adc
sarl
mov
or
outsb
jp
cs
iret
dec
data16
jmp
pop
xchg
and
movsl
cmp
pop
icebp
dec
shrb
lock
hlt
jb
sti
jmp
bound
jne
sbb
leave
sbb
out
lret
aaa
and
out
push
mov
lret
bnd
jmp
mov
lds
fsubrs
mov
or
or
adc
sub
mov
enter
mov
push
stos
iret
inc
mov
lods
in
aam
push
in
jp
xorb
jge
shrb
pop
pusha
xchg
push
cmp
xor
test
xchg
mov
dec
out
rcl
idivl
call
mov
std
in
fs
test
or
test
xor
xlat
adc
fcoms
fsts
push
dec
shrb
ss
pop
adc
push
cmpsl
sub
xchg
push
icebp
lcall
mov
fcmovu
mov
jmp
icebp
jae
push
mov
sub
sub
test
adc
bnd
pop
xor
scas
icebp
clc
add
outsl
push
and
pop
pop
adc
fs
mov
inc
fisttpll
ljmp
xlat
lods
inc
not
in
or
repz
into
cmp
cwtl
das
jl
ds
mov
scas
adc
mov
cmpsb
sahf
mov
xchg
jne
push
clc
fnop
add
mov
mov
and
jae
push
stc
or
inc
nop
mov
mov
les
in
nop
add
cs
sbb
xor
fwait
iret
inc
fstps
xchg
clc
stos
test
arpl
jne
push
mov
and
push
sub
icebp
subb
xor
mov
movsb
inc
ror
jns
dec
push
mov
and
in
rolb
test
cmpsb
pop
into
sub
lock
xchg
mov
mov
inc
adc
xor
adc
lret
jnp
inc
mov
cwtl
mov
jne
cmp
mov
lret
add
mov
int3
cmp
mov
jae
push
jge
shr
pop
adc
or
or
imul
adc
or
pusha
rcr
cwtl
data16
or
sub
jge
xchg
jns
adc
rol
fwait
out
dec
dec
and
daa
and
push
xor
jg
fstp
daa
sub
xor
push
out
loope
popf
sbb
lods
cli
push
int3
insb
xorb
pop
sub
mov
cs
mov
dec
sub
shlb
push
jl
out
arpl
sub
cmp
push
and
out
scas
sub
mov
sub
adc
inc
fcompl
in
leave
sbb
push
fcoml
scas
sub
out
xor
cltd
movsl
jns
lods
addr16
push
dec
incl
mov
xchg
sub
dec
pop
ror
cmp
add
daa
lods
jo
push
repz
jo
cmc
and
mov
and
xor
jnp
cmpsb
lcall
dec
test
cltd
ficoms
inc
or
ret
xchg
mov
sub
mov
dec
shl
bound
cmp
mov
jno
push
inc
mov
sub
cld
aam
jb
cwtl
fsubrs
push
out
or
or
adc
clc
clc
mov
inc
popa
lcall
and
lods
push
fsubl
jecxz
mov
inc
cltd
fldcw
rolb
mov
and
push
mov
dec
cli
lcall
push
stc
and
das
dec
insl
ret
mov
sar
push
cli
xor
rcrb
jae
push
cmp
fidivrl
hlt
ss
sub
fdiv
mov
popa
movsb
int3
add
sti
xchg
push
push
push
mov
ja
mov
repz
je
dec
lods
and
stc
push
mov
mov
sbb
ds
jnp
adc
push
loop
push
into
dec
inc
or
call
adc
stos
aam
mov
sub
push
sahf
lods
daa
pusha
js
loopne
scas
enter
push
inc
orl
sub
out
ljmp
js
insb
repnz
sahf
sbb
lds
pop
mov
je
fldl
leave
push
leave
pop
dec
out
ds
fs
xchg
sarb
roll
jecxz
gs
int
in
sbbb
shll
fwait
cmp
sti
sbb
jns
es
inc
sti
mov
repz
jp
dec
fldcw
cmp
fnstsw
loop
mov
je
sub
movsb
inc
mov
fldenv
xchg
cmc
outsb
ljmp
std
xlat
cltd
aam
stc
fidivrs
in
mov
or
pop
push
xchg
enter
popa
push
shrb
adc
adc
push
mov
xchg
vphaddubq
sub
repz
cmpsb
inc
nop
jb
adc
leave
sub
testb
mov
fadds
pop
push
movsl
xor
dec
and
pop
push
pop
sar
cmp
aad
pop
adc
xchg
jb
cli
icebp
cld
pusha
sub
scas
pop
jg
dec
ret
daa
cli
adc
jl
out
jns
or
fsubp
mov
pop
lock
xor
int
bound
out
xor
test
popa
pop
shr
lcall
xchg
sub
push
xlat
cli
repz
andl
xor
pop
dec
xor
pop
fucomi
repz
cmp
orl
dec
add
ret
out
bound
jnp
add
mov
xor
pop
arpl
dec
inc
scas
outsl
repnz
push
mov
icebp
in
scas
sbb
xchg
xor
das
or
and
stos
mov
repnz
scas
pop
stc
jge
les
out
enter
and
nop
stos
jbe
rorl
sbb
mov
mov
jmp
dec
pop
jns
lods
or
fisubl
inc
pushw
pop
add
xor
shlb
cmp
test
loop
shll
bswap
add
push
mov
inc
gs
sarl
mov
adc
iret
ret
jae
cmp
xchg
jbe
fstpt
lods
jg
icebp
sahf
aaa
sahf
pop
arpl
inc
fistps
ja
jb
mov
jg
push
mov
lds
mov
rcll
shlb
xchg
jnp
jle
and
pop
popf
dec
pop
neg
mov
adc
jne
xchg
test
dec
push
cmpl
popf
xor
sub
inc
cmp
popa
adc
div
mov
add
movsl
mov
leave
clc
repz
mov
sub
and
cmc
pop
add
or
les
sbb
gs
call
pop
sub
filds
stos
ss
mov
push
dec
mov
jg
lock
or
movsl
rcll
mov
scas
push
aam
fnsave
pop
ret
xchg
clc
sahf
nop
insb
add
es
xchg
cmp
or
popa
or
jns
subb
in
adc
cli
mov
test
das
xchg
jnp
in
mov
lret
mov
mov
fwait
mov
iret
leave
ss
mov
into
xchg
out
in
or
in
mov
mov
ret
imul
pop
mov
loop
and
and
and
lret
fsub
cmpsl
lahf
cmpsl
mov
in
jns
repz
sbb
add
scas
imul
adc
movsl
dec
fistpll
sub
and
adc
xor
and
adc
or
pop
fstpt
push
pusha
push
cmp
jns
lahf
or
int
hlt
pop
xchg
cmpsb
ljmp
xchg
and
push
mov
cli
mov
cmp
loopne
inc
add
push
imul
pop
outsb
jbe
sub
adc
lahf
not
out
push
or
or
mov
sub
scas
or
adc
pop
jmp
and
jecxz
jecxz
out
sar
cmp
ret
clc
mov
push
push
mov
mov
inc
mov
xor
test
shlb
sbb
xor
sub
aas
inc
loope
repnz
cmc
xor
pop
fwait
ljmp
test
aas
push
mov
push
add
jmp
aam
mov
add
int
sub
sahf
pushf
cwtl
pop
jbe
decl
mov
lahf
stos
loope
or
or
pop
fbld
out
cmpsb
and
fs
iret
es
mov
and
inc
std
sbb
inc
push
pop
sbb
sbb
cmp
jb
ja
fidivrs
adc
mov
fwait
leave
jle
mov
add
sbb
xlat
mov
pushf
clc
icebp
cmpb
pop
int
pop
ss
rorl
mov
lret
dec
jp
pop
outsb
jae
xchg
inc
mov
dec
sar
push
test
cmpsb
mov
sub
gs
lods
add
rorb
loopne
je
test
cmpsb
and
xchg
stc
mov
xor
sub
and
cmp
outsl
bound
shrb
and
js
xchg
xchg
adc
fwait
inc
mov
xor
and
cli
incl
xchg
fimuls
mov
xchg
dec
pop
xor
aad
loope
ljmp
lds
mov
and
ja
xchg
stos
pop
push
adc
cmp
mov
xor
push
lods
testl
and
lds
out
adc
stos
dec
pop
insb
jnp
jb
xor
shl
cmpsl
mov
pop
push
aad
fldl
hlt
push
and
pop
add
add
add
pop
outsb
cmp
mov
jno
jbe
dec
adc
loope
xchg
mov
imul
inc
pusha
jnp
das
mov
clc
cmp
inc
sub
sub
daa
sub
cwtl
cli
pop
ficoms
icebp
add
push
lods
outsb
cmp
mov
or
shlb
out
fs
roll
push
int3
roll
addb
imul
cmp
add
out
shrb
inc
inc
mov
jmp
xchg
sbb
jmp
loop
add
push
gs
repz
aam
stos
push
dec
and
sbb
ja
int
dec
jae
mov
xor
aaa
mov
adcb
stos
jl
cmc
mov
in
or
inc
mov
fwait
pop
sahf
enter
and
jne
pop
popf
cltd
mov
fnstsw
out
jg
xor
xor
mov
lods
fildl
adc
and
lds
lret
cli
push
mov
test
mov
cmp
inc
sbb
test
inc
adc
push
add
push
pop
sub
xchg
shl
cmp
ds
xor
jmp
arpl
fnstsw
das
adc
inc
pop
or
jo
xchg
sub
xchg
cs
sub
pop
lea
jno
cmp
in
bound
jno
pop
clc
sub
repz
loope
out
mov
push
jb
mov
cmp
ljmp
addr16
sti
sub
and
cwtl
add
push
and
sub
sbb
push
mov
ror
sbb
pusha
cmp
bnd
dec
in
mov
movsb
dec
cltd
jae
movsl
sub
loope
push
pop
dec
or
lret
or
insb
nop
sbb
push
sub
inc
mov
mov
dec
lcall
jg
stos
out
and
mov
mov
inc
and
stos
xchg
icebp
outsl
sub
push
adc
stos
xchg
xor
jbe
mov
jbe
xor
dec
mov
popa
and
pop
neg
xchg
sbb
notb
popf
push
clc
hlt
lods
or
fstpl
mov
mov
xchg
jmp
sbb
test
mov
das
in
xor
ret
and
call
lods
fdivs
mov
mov
xor
addr16
and
rcl
nop
xchg
jne
jle
in
pop
out
inc
sub
aad
ds
mov
pop
cld
fdivrl
sub
fnstenv
out
add
int3
xor
jo
and
sbb
movsl
dec
mov
and
clc
inc
lds
inc
inc
adc
fistl
sbb
mov
sbbl
aaa
sbb
jecxz
pop
xor
fwait
lcall
aam
mov
push
xor
mov
mov
in
adc
jg
stos
jmp
xor
pop
loope
cwtl
mov
inc
out
lods
daa
add
or
test
or
and
scas
js
jbe
inc
sbb
jecxz
lea
fdivs
leave
xchg
loopne
sarb
out
imul
popl
mov
adc
movsb
scas
push
jecxz
xor
outsl
pusha
in
les
add
fmul
xor
and
xchg
fsts
pushf
iret
cmp
mov
and
les
dec
push
cli
out
loop
rcr
mov
mov
and
imul
ss
cmc
xchg
test
pop
repnz
push
pop
xlat
push
outsl
xchg
pop
mov
in
push
loope
push
mov
data16
jp
pop
xchg
pop
pop
cmpsl
imul
mov
leave
fwait
add
and
jg
xchg
jae
jg
sbb
add
inc
mov
pushf
in
addr16
cmp
test
inc
inc
inc
push
lods
cld
sbb
mov
sbb
out
add
cmpsb
mov
mov
xchg
add
jns
je
push
cmp
std
and
xlat
lret
cli
xchg
not
enter
xor
clc
je
cmp
add
and
cmp
outsl
nop
add
sub
lahf
lcall
pop
or
popf
pop
mov
fmuls
loope
sahf
xor
cmp
cmpsb
mov
pop
xor
lods
aam
mov
repz
xchg
mov
push
hlt
mov
out
ja
adc
or
lock
push
xchg
test
fxch
cmpsb
ret
xchg
cld
push
mov
mov
inc
cmp
push
aaa
std
daa
pop
insl
mov
xor
imul
data16
sbb
dec
dec
mov
push
push
push
sbb
sbb
push
xchg
lods
icebp
data16
sahf
lret
mov
or
sbb
push
sbb
outsb
add
fmull
mov
loop
jb
cmp
test
mov
mov
pop
mov
std
jne
and
aaa
dec
inc
sub
or
cmp
inc
mov
std
testl
fsts
mov
push
test
cld
fs
repnz
jne
je
dec
pop
jae
dec
or
xchg
imul
mov
leave
mov
insl
and
cwtl
push
lcall
pop
push
dec
pop
fistl
daa
mov
cmpsl
test
fmul
mov
shlb
push
xorl
cs
sbb
inc
movsb
shll
push
cmpsl
fsubrp
sbb
and
add
in
fstp
ss
pop
lret
or
add
mov
sub
push
jle
ljmp
pop
clc
lock
pop
test
push
mov
pop
pushf
fstps
popf
in
dec
jl
ss
or
jns
push
ss
xchg
mov
sbb
dec
in
inc
jns
notb
inc
cwtl
cltd
subl
pushf
cmp
xchg
and
int
fnstsw
ss
loop
imul
pop
and
cmp
lcall
add
clc
push
out
mov
fnstenv
hlt
jno
dec
jbe
jbe
sub
xor
negb
mov
pop
mov
xor
fisttpll
cltd
push
addr16
inc
jecxz
mov
mov
cmp
in
sub
cltd
mov
adc
cli
sarb
adc
inc
jle
outsl
mov
mov
popf
cmpb
sbb
dec
pop
inc
dec
in
sbb
aas
xchg
dec
outsb
aas
push
dec
or
movb
jp
imul
push
adc
shr
mov
cmp
jmp
rcrl
adc
fdivrl
sub
jnp
mov
and
jmp
es
inc
aam
test
xchg
sub
pop
xor
fdivr
xorb
jge
push
fwait
ret
jnp
push
lock
and
lock
cld
and
sahf
lret
xor
sbb
xchg
loopne
xor
and
mov
out
pop
or
add
jo
mov
daa
cli
add
inc
fiadds
mov
pop
jmp
xor
jg
xchg
arpl
xor
test
fwait
xor
cmp
adc
push
std
pusha
mov
shrb
call
pop
aaa
pop
mov
or
inc
sub
xchg
push
hlt
es
outsb
sub
push
adc
inc
push
addb
or
inc
loop
lock
aam
mov
sbb
mov
mov
aas
jbe
loope
stos
hlt
lcall
inc
test
das
int3
ja
in
iret
inc
int3
aam
arpl
arpl
xorb
cmpxchg
xchg
sbb
cld
dec
adc
outsl
stc
push
inc
mov
subb
dec
xchg
mov
jmp
aam
sub
push
dec
xchg
xlat
and
add
rep
mov
jmp
hlt
inc
enter
jge
mov
insl
push
jb
adc
aaa
arpl
mov
shrb
sub
mov
cmp
in
jp
aad
daa
add
popa
sbb
jmp
or
sbb
xor
outsl
xchg
push
cli
out
xor
sbb
mov
xor
popa
in
adc
jmp
repnz
ss
addl
aas
add
xlat
aam
and
push
clc
test
lret
cmp
imulb
scas
enter
int
xchg
cmc
inc
inc
notl
hlt
lock
and
arpl
push
jmp
adc
repnz
mov
sahf
inc
dec
int3
das
or
mov
mov
adc
inc
sbb
xor
lea
mov
test
push
jg
mov
insl
lock
lods
mov
push
test
dec
ljmp
adc
dec
xchg
xor
xor
mov
fildll
push
sub
mov
add
push
add
iret
mov
cmp
call
jne
inc
or
push
hlt
lods
rcrl
int
add
push
sbb
out
xchg
fadd
ret
jne
pop
orb
and
push
pop
outsb
mov
adc
pop
push
call
or
jl
repz
xchg
shll
lret
mov
xchg
jbe
and
jmp
lea
cmp
add
rolb
adc
pop
jg
les
div
cld
imull
push
sub
addr16
insl
sub
cld
les
pushf
inc
dec
sub
jo
mov
fwait
dec
cmp
sub
pop
pop
cmpb
jns
imul
addr16
mov
aaa
jecxz
scas
pavgw
ja
mov
cmc
add
inc
dec
sti
push
push
test
iret
and
xor
cs
testb
sbb
inc
push
out
and
das
dec
out
lods
mov
xchg
mov
mov
push
imul
imulb
xor
stos
or
mov
jle
mov
sub
loopne
inc
mov
push
in
jge
push
push
imul
sbb
rcll
insb
loop
rolb
movsb
jnp
add
push
in
test
stos
jns
sub
and
push
loope
js
icebp
adc
pop
pop
iret
adc
in
cmp
arpl
dec
adc
or
flds
push
jo
add
cli
xchg
mov
shll
das
cmp
xlat
xchg
rorl
adc
jl
mov
int
and
push
push
add
push
lcall
insl
popa
mov
push
and
push
jp
mov
pop
ja
mov
bound
std
hlt
sub
or
add
mov
scas
fxch
je
insb
xlat
in
xchg
hlt
mov
jle
rcl
jb
fisttpl
jg
push
out
dec
cmc
mov
adc
or
adcb
add
in
iret
out
mov
cmp
cmp
lea
cmp
into
lods
jno
sbb
pop
negl
lods
lahf
mov
sarl
shlb
sbb
xor
mov
xchg
pop
dec
mov
mov
mov
repnz
les
fistps
emms
sti
mov
mov
push
xor
js
mov
insb
int3
and
mov
mov
mov
call
and
aas
cs
mov
mov
dec
sbb
pop
rcl
lcall
rolb
fcmovnbe
pop
movsl
stos
mov
push
ds
ror
inc
xlat
jbe
sar
out
inc
pop
and
mov
cs
aas
pop
jae
xor
fisubrl
movl
and
pop
push
jnp
sbb
inc
mov
stc
xor
xchg
xchg
and
cmp
mov
or
aam
push
mov
mov
pop
mov
add
bound
xchg
icebp
mov
inc
aaa
cmpsl
cmp
and
and
outsl
xor
lds
inc
mov
movb
int3
adc
mov
pop
int
fmull
jmp
push
xor
cmp
rcr
lds
push
mov
mov
and
or
lcall
pop
in
test
xchg
sub
push
sbb
inc
push
lret
dec
aas
pushf
cmpsb
adc
dec
push
das
dec
or
mov
jp
test
fidivs
sti
jl
or
mov
negl
fwait
inc
jbe
jle
mov
adc
sbb
mov
push
andb
cmp
xor
lods
ds
repnz
sti
xor
lock
jp
jb
insl
dec
movl
mov
test
mov
ds
int3
push
lds
mov
icebp
popl
lods
mov
and
inc
jo
fadds
inc
js
pop
jnp
dec
movb
ret
xchg
enter
and
test
lock
in
daa
jg
jg
fdivl
jmp
mov
pop
sub
adc
insb
cld
repz
stos
xchg
mov
mov
ljmp
stos
test
loope
pop
fcompl
pop
test
pop
or
push
inc
icebp
fistl
inc
fidivl
xor
clc
pop
mov
mov
jo
lods
cmpsl
pop
insl
cmp
int
dec
loop
test
xchg
pop
mov
sti
mov
outsb
mov
jge
cmp
sahf
aad
sbb
shrd
ds
lret
popf
ret
fstp
shl
lds
stc
stos
loope
xor
dec
shrb
daa
lock
push
cmp
adc
iret
lret
cmp
push
pop
bound
scas
mov
imulb
dec
xchg
fisttpll
rorl
int
in
adc
fadds
xchg
mov
and
enter
cs
outsl
mov
daa
mov
push
mov
andb
pop
xor
in
add
jecxz
inc
insb
mov
scas
inc
and
das
cmp
sarb
inc
xor
xchg
add
loopne
xor
bound
and
mov
loop
xor
sbb
and
adc
out
dec
cmpsl
rcll
stc
dec
les
jp
ret
sarl
push
mov
mov
jne
push
stos
cmp
mov
add
sarl
arpl
and
push
dec
push
nop
inc
inc
lret
jb
in
xchg
jns
adc
int3
js
icebp
orl
add
sbb
out
nop
dec
cmp
fstp
fstp
and
loopne
fstp
fstp
fucom
out
out
mov
rcrb
ja
out
xor
popa
xchg
in
sahf
mov
xchg
dec
shlb
gs
notb
incl
iret
les
iret
xchg
push
mov
insb
mov
sahf
add
in
push
mov
dec
adc
xor
scas
pop
dec
insb
adc
dec
fdivrs
sub
jmp
pushf
sbbb
popa
jge
dec
fistpl
in
adc
hlt
rorl
inc
lods
and
mov
dec
mov
ret
inc
mov
mov
cmp
in
out
or
inc
div
push
out
push
cmp
outsl
xor
scas
cwtl
inc
push
fdivp
dec
or
dec
test
outsl
jmp
inc
pop
out
cmp
aas
ds
mov
jle
push
out
aaa
xor
repnz
std
mov
rolb
cli
fdiv
rorl
or
fwait
movsb
jne
insb
adc
shll
adc
lcall
mov
or
loope
inc
cmp
jmp
in
dec
mov
out
jle
inc
jmp
sbb
movsl
dec
add
fildl
xchg
stc
cmpsb
test
pop
ret
push
jmp
leave
mov
dec
sub
sahf
inc
cmp
mov
xchg
inc
jmp
pop
outsl
sbb
pushf
in
jecxz
pop
out
cmp
mov
push
inc
inc
stc
push
jns
push
push
leave
push
or
xchg
push
aaa
movsb
adc
push
jno
dec
leave
ds
js
push
push
cmp
add
mov
push
fxch
cmpsl
add
cmp
imul
sub
adc
clc
mov
or
fstps
fadds
enter
out
nop
jmp
xor
push
ret
movsb
add
cmp
and
fnstcw
fnsave
rorl
mov
jnp
push
inc
inc
mov
pop
fists
mov
pop
cld
nop
imul
movsl
in
outsb
jbe
out
push
out
mov
cmp
pop
mov
test
iret
xchg
xor
xlat
sbb
testb
imul
sbb
or
out
leave
testl
rorl
fcmove
dec
scas
pop
jae
and
mov
leave
movsb
cmpsb
rol
lahf
mov
pop
cs
adc
fcompl
pop
insl
jne
mov
pop
mov
lahf
push
add
incb
add
pop
ret
fwait
gs
mov
mul
push
jg
push
pop
xchg
lret
pushw
sbb
mov
mov
mov
in
test
in
lds
js
sbb
cwtl
adc
sti
outsl
pusha
insl
xchg
add
or
push
jnp
pop
idiv
sbb
clc
hlt
test
shl
jno
inc
sub
cmp
and
sub
iret
fisubs
mov
std
shlb
mov
jmp
shll
loop
xchg
in
pop
dec
addr16
jg
inc
fwait
icebp
out
repz
je
pop
pop
and
clc
repz
sub
mov
pop
inc
addr16
aam
xor
icebp
imul
mov
fcoms
push
dec
cmpsb
mov
lret
pop
jns
push
aam
xlat
mov
cmp
sub
xchg
fadds
push
or
push
and
sbb
call
mov
or
dec
aam
push
cmpb
xchg
lahf
shrl
add
inc
subl
cwtl
repnz
aad
in
mov
in
sub
or
xchg
mov
rolb
or
sbb
or
cmpsb
pushf
cmp
jg
jne
mov
lcall
push
or
push
ja
gs
enter
imul
pop
and
iret
mov
dec
ja
and
fsubl
cmpsl
and
mov
push
ljmp
shlb
mov
shrl
mov
dec
mov
aam
add
sarl
leave
xor
incl
mov
sub
mov
jecxz
push
mov
fmuls
pop
lret
fiadds
push
jp
imul
das
inc
jo
leave
mov
push
out
sar
xor
or
cltd
push
and
xchg
loope
ret
inc
xor
push
sbb
dec
adc
push
sti
dec
sbb
push
inc
sbb
and
mov
lret
repz
shl
mov
hlt
push
mov
ss
out
sbb
fildll
inc
push
cmpsb
in
sub
sbbb
pushf
loope,pt
push
sub
hlt
ja
sub
in
mov
stc
sub
dec
in
jns
sub
sbb
pop
jle
sbb
mov
movsb
addr16
mov
pop
pop
fmul
sbbl
pop
sub
cmp
fldt
push
mov
fmull
and
cld
xchg
pushf
and
pop
xchg
pop
mov
shl
sahf
roll
lret
mov
inc
mov
jb
xor
xlat
scas
xchg
jns
stos
inc
push
inc
fdivs
test
out
and
loop
lahf
xor
push
add
shlb
jge
push
push
js
mov
jp
push
pusha
test
xchg
jl
xor
mov
inc
cld
js
adc
fs
loope
insb
lock
cltd
pop
in
in
mov
loope
sbb
loope
cmp
adc
xor
mov
leave
push
mov
inc
xchg
std
lret
push
aam
pop
test
push
lret
xchg
adc
push
imul
xorl
cmp
lret
and
push
xor
add
or
in
cli
jo
and
mull
data16
sets
pushf
jbe
dec
fwait
mov
add
lahf
sbb
mov
sti
decl
lea
xor
in
and
cmp
adc
adc
scas
test
int3
cld
cld
jmp
pop
or
push
scas
sbb
cmp
arpl
add
loop
add
ret
mov
inc
push
shrb
dec
xor
jle
xor
push
adc
fsubl
icebp
pop
daa
jno
sarb
pushf
push
in
loopne
jl
lods
inc
sbb
inc
mov
xchg
push
inc
jle
mov
jp
inc
dec
inc
sbb
fnstcw
mov
pop
mulb
jmp
icebp
mov
es
jmp
sub
out
dec
cmc
ficomps
icebp
mov
cmpsl
rorl
cs
add
and
push
movsb
leave
repnz
fucomi
ds
sbb
iret
stc
sub
repnz
mov
push
jp
inc
int
mov
addb
ja
or
outsl
lods
and
fdivr
sti
jmp
mov
sbb
or
cmpsb
pushf
test
cwtl
sbb
daa
or
inc
pop
adc
mov
jl
or
movsb
subb
mov
ret
das
shr
scas
sbb
outsb
xchg
lea
iret
xchg
mov
fidivrl
xor
and
mov
mov
mov
frstor
cmp
inc
push
pushl
xchg
addr16
pop
arpl
sbb
xor
ret
int
movsl
testb
push
push
pop
out
or
sbb
scas
or
add
add
insl
and
gs
adc
daa
jne
cli
out
jecxz
mov
cwtl
sub
sub
dec
mov
test
adc
hlt
push
push
adc
cmp
imul
lcall
and
lret
lahf
popa
scas
movsb
pop
ds
or
test
pusha
dec
imul
popl
sub
ror
mov
xchg
add
mov
xor
movsb
aaa
jmp
xor
mov
lahf
add
mov
aas
mov
pop
sbb
addl
jecxz
inc
xchg
lea
cmp
fwait
ss
dec
sbb
loop
ss
repnz
lods
xchg
or
pushf
cld
rcl
adcl
sub
xchg
mov
sub
push
pop
rol
andl
and
cmpsb
jns
shlb
cmp
mov
aas
fistps
jns
sbb
nop
mov
add
lds
sbb
and
daa
jns
loop
sbb
pusha
into
sub
leave
or
and
mov
ljmp
mov
jne
adc
pop
outsl
sub
inc
test
mov
nop
sbb
add
and
into
pop
cmpsl
negb
aaa
enter
test
sahf
xor
lcall
add
push
test
mov
out
adc
adc
jnp
adc
mov
lcall
xor
mov
dec
clc
cmc
test
inc
sub
into
sbb
push
push
aad
movsl
in
cld
xchg
pop
fiadds
mov
clc
inc
pusha
push
push
xlat
mov
out
jecxz
cwtl
inc
clc
add
lcall
push
xor
fadds
jmp
and
push
pop
pop
insl
adc
sbb
adc
lret
sti
rcll
rcrl
mov
fisubrs
aam
shl
movsb
add
ret
inc
ret
ss
pop
scas
orl
sarb
out
test
add
test
sbb
fdivs
mov
xchg
pushf
movsl
clc
mov
xor
mov
push
cmp
mov
popf
adc
mov
push
aam
arpl
xor
add
jae
std
xchg
bound
push
in
pop
cli
popa
lret
stc
ret
adc
insb
stos
jbe
push
movsb
movsl
jae
enter
adc
dec
mov
pop
or
inc
aam
ds
cmp
push
mov
shrl
add
jmp
sbb
inc
int
pop
mov
fucom
lock
xchg
in
gs
and
sub
push
jecxz
pop
insl
es
xchg
inc
je
cld
mov
mov
cmp
std
arpl
and
sar
scas
mov
call
and
sbb
icebp
add
cmc
jo
mov
sub
xchg
or
addr16
push
lods
inc
mov
rorb
dec
test
lahf
xchg
adc
xlat
jecxz
jnp
mov
add
lcall
jmp
int
cs
sbb
sbb
repz
popf
aad
xchg
lods
mov
test
enter
jae
cli
inc
insl
dec
pop
inc
rorb
in
or
fs
xor
lods
mov
mov
sub
js
aas
outsb
adc
xor
notl
add
or
sub
fwait
add
test
lock
mov
jp
mov
mov
inc
adc
push
cmp
data16
mull
add
push
repz
jmp
jns
cmp
dec
sub
mov
js
cmp
int3
push
push
aas
repz
xchg
cld
jg
fldl
enter
push
stos
pop
mov
lds
mov
and
pop
inc
pop
shlb
hlt
dec
jp
sahf
fdivl
rsm
mov
outsb
cmp
popa
sub
cmp
pop
sbb
sub
jp
adc
cmp
push
push
arpl
pop
daa
cmp
stc
mov
pop
aaa
xor
sbb
lcall
dec
add
add
cmp
or
lods
push
xor
adc
pop
enter
insb
les
jb
xchg
jl
sub
push
xchg
cmc
popf
jmp
adcb
push
lahf
push
iret
jnp
sahf
jbe
and
imul
int3
aam
mov
push
push
jecxz
jg
mov
loope
pop
cs
dec
jmp
jo
gs
fdivs
cmp
and
popa
push
sbb
and
cmp
mov
dec
xchg
push
jge
jbe
add
testl
adc
cwtl
jmp
adc
or
mov
subb
and
cmpsl
mov
cld
imul
cli
mov
popa
cltd
inc
jmp
mov
mov
lods
shl
mov
xchg
push
pop
popf
mov
cmpsb
fiadds
inc
add
or
adc
sub
ja
pop
aam
inc
xor
xor
pop
jp
ret
test
mov
mov
sub
cmp
cmp
adc
cwtl
orl
repnz
aaa
cmp
and
les
faddl
xlat
sub
mov
test
rol
fnstenv
clc
lcall
pop
and
insb
notl
ja
mov
addr16
std
pop
push
jle
dec
sub
xor
and
addb
or
mov
push
jmp
outsl
dec
aad
movl
imul
fwait
adc
aas
mov
lret
popf
or
fistpll
jnp
leave
les
xor
jnp
je
jbe
push
pop
pop
fsubrs
add
pop
lods
sub
insb
dec
insl
insb
mov
fcmovu
iret
cmp
fdivl
imul
mov
jns
adc
pop
sahf
int3
add
inc
dec
insb
jp
not
cmpb
push
pushf
lret
aam
adc
cwtl
jg
jle
dec
in
lock
mov
xor
stos
mov
or
add
and
add
lds
push
push
xchg
outsl
lods
rcrb
push
sbb
dec
mov
shrl
pop
repz
add
les
sahf
mov
mov
ljmp
clc
gs
inc
sbb
and
dec
sub
or
jne
cmpsb
sbb
cli
add
xchg
push
cmp
sub
add
fs
rcrl
mov
je
add
lods
push
cmp
pushf
or
jle
pushf
call
js
mov
sbb
pop
inc
dec
shlb
xor
jne
insl
mov
add
pop
lcall
stos
fnstsw
stos
imul
pop
sub
or
mov
jle
pop
jnp
fld
mov
inc
xchg
inc
xchg
pop
ss
jo
or
jb
aam
jns
enter
into
cmpsb
test
pop
dec
scas
pop
sahf
in
adc
aad
addr16
lock
lock
mov
cmp
hlt
imul
popf
clc
mov
jge
push
repz
adc
scas
inc
xchg
push
fisubrs
in
or
fistpl
fildll
pop
cmp
jl
push
sub
push
mov
cmpsl
mov
cmp
rcrb
mov
mov
inc
in
sbb
push
dec
jno
push
std
mov
push
mov
out
js
xor
cmp
push
mov
xor
daa
fldl
xor
outsl
and
loopne
lock
lcall
push
lret
and
push
mov
pop
dec
imul
stc
int
pop
in
notl
movsl
sub
sub
out
inc
push
mov
test
addl
push
cmpsl
cld
push
push
adc
mov
cmp
xchg
cld
push
movsl
inc
roll
sahf
subl
and
pop
push
cs
cli
sub
jle
cs
inc
out
push
ss
js
inc
cli
push
push
clc
mov
mov
cwtl
dec
cmp
rclb
jge
push
push
sub
push
pop
imul
push
xchg
xor
in
inc
push
insb
jl
notb
rorl
mov
mov
cmp
cmp
cmp
or
xchg
out
das
mov
movsb
sub
das
inc
dec
loopne
and
cmc
int
push
mov
jnp
fiadds
xor
xor
cli
mov
adc
mov
inc
loop
mov
loope
adc
xor
jbe
aam
push
pop
leave
lds
roll
and
mov
stos
or
jbe
enter
xchg
js
ficomps
sbb
mov
cmp
push
jnp
sahf
mov
mov
mov
push
xor
int
cwtl
mov
imul
xchg
sarl
inc
cltd
mov
inc
iret
pop
mov
ljmp
push
shlb
adc
xchg
ds
mov
pop
xchg
xchg
cmpsb
ja
push
mov
clc
test
in
add
jnp
pop
sub
pop
or
pop
mov
ror
push
pop
jno
mov
js
lods
dec
pusha
mov
mov
mov
lds
frstor
push
lret
imul
jecxz
std
xlat
push
popf
daa
repz
and
shll
addr16
leave
cmp
pop
ljmp
inc
and
imulb
movsb
popf
cmp
xchg
adc
popa
adcb
je
mov
and
cmp
push
mov
leave
push
or
imul
cmc
adc
jecxz
or
cmp
jbe
push
sub
xor
adc
cwtl
arpl
dec
inc
sub
or
pop
test
mov
je
mov
daa
adc
sub
fildll
cwtl
dec
push
inc
gs
out
sub
lahf
in
sub
jge
inc
push
stc
inc
pusha
cmp
push
inc
xchg
insb
inc
mov
es
ja
dec
stc
popl
pop
jno
arpl
jne
jo
icebp
loope
mov
xor
inc
test
pop
xchg
xchg
aaa
adc
dec
jge
je
add
ljmp
or
sub
clc
aad
pop
mov
imulb
xor
iret
sbb
sub
or
aam
int3
mov
test
adc
outsl
jmp
movsl
inc
mov
outsb
push
gs
xor
popf
push
ss
pop
push
lret
out
xor
ficompl
out
loope
test
test
lret
lret
jmp
aas
hlt
or
mov
jmp
test
addr16
cs
xor
cli
int3
into
mov
xchg
dec
pop
adc
fldl
dec
rorb
adc
pop
or
mov
sub
shlb
sub
mov
mov
adc
xchg
pop
adc
mov
lret
sbb
imull
sub
push
nop
nop
movsb
or
pop
add
dec
lods
push
and
pop
outsl
jns
pop
imul
jne
and
push
loop
subb
fidivs
add
daa
jbe
sahf
push
xor
and
cmpsl
test
call
jg
out
mov
jecxz
cwtl
cmpsb
inc
mov
jge
mov
pushf
les
push
push
fisttps
rclb
dec
jl
sbb
pop
jno
xor
icebp
lock
ljmp
out
rorl
mov
lret
mov
fbstp
cmpsl
cmp
mov
jne
cmp
cmpl
add
push
flds
mov
test
cmp
sti
mov
rcrl
lds
pop
and
push
lds
inc
ret
in
into
inc
mov
inc
jb
sub
dec
test
sbb
lods
inc
xchg
sti
lds
mov
loop
jbe
xor
adc
inc
jo
jecxz
cmc
into
ja
inc
sahf
or
or
xor
stos
push
inc
dec
aad
gs
inc
cltd
fldt
dec
cmp
iret
push
push
and
negl
pop
je
insl
and
or
adc
mov
push
vphminposuw
imull
xor
inc
mov
call
scas
cld
bound
xchg
roll
push
jae
jecxz
jo
movsl
repz
dec
lret
inc
mov
adc
nop
addr16
mov
ss
cmc
cld
ss
mov
cmp
lahf
int3
lret
test
leave
rcrl
leave
mov
aas
push
push
mov
jne
cmpsb
fisttps
test
push
lret
push
inc
cs
sbb
and
cltd
inc
add
je
cmp
jne
fdivr
xor
in
mov
inc
adcb
sbb
js
adc
pop
mov
and
fs
mov
repnz
outsl
shl
and
fucomip
mov
mov
shlb
aas
adc
cmpsw
cmp
arpl
data16
mov
faddl
fiaddl
mov
push
clc
jl
stos
push
fwait
sbb
xor
mov
jmp
adc
dec
xchg
loop
xchg
xor
or
icebp
cmpsb
jo
mov
mov
or
or
push
outsl
cmpsl
hlt
adc
incb
xchg
iret
fld
aam
lcall
sbb
pop
xor
add
lods
sub
sar
inc
push
inc
sub
ss
shll
pop
sub
fldcw
adc
dec
test
popa
xchg
ljmp
jecxz
outsb
je
jp
dec
subb
pop
xchg
inc
cld
jmp
hlt
adc
push
mov
pmulhrsw
out
sahf
mov
std
data16
fwait
incb
fucom
jmp
cs
lods
lods
aam
call
testb
adcl
jg
sub
xchg
push
gs
stc
in
call
pop
loop
inc
jp
insl
inc
mov
push
insl
pusha
jg
push
mov
ds
mov
cmp
movsb
inc
test
mov
addr16
or
insl
lds
outsb
add
icebp
pop
stos
andl
outsb
les
mov
cmp
add
xchg
les
push
decb
jno
scas
xchg
mov
sub
test
mov
inc
pusha
jno
sbb
inc
inc
scas
into
test
repz
mov
mov
and
mov
adc
mov
shrb
add
pop
fs
jle
sub
xor
mov
aas
jae
fcomps
iret
rorl
pushf
lea
lret
movsb
cmp
lds
lods
aad
call
jae
mov
dec
lcall
dec
inc
adcl
aaa
test
stos
inc
cwtl
in
pop
fildl
lea
int
je
cmc
jp
push
push
adc
cmp
inc
cmp
push
and
cli
xor
dec
lea
cmp
sub
add
iret
inc
mov
dec
imul
pushf
das
pop
pop
jle
lock
mov
xchg
test
add
test
addr16
cmp
fidivrs
mov
jmp
push
nop
shll
cli
or
mov
inc
fs
cmp
push
lret
out
fs
sahf
mov
jne
inc
mov
jnp
push
lods
mov
cmpl
addb
push
repnz
push
das
add
adc
xor
rolb
cmpsb
fs
adcb
pop
jg
into
jl
lods
xchg
add
push
dec
pop
and
movsb
pop
sbbl
pop
hlt
in
sub
adc
mov
and
jge
popf
ja
das
jecxz
shlb
scas
inc
mov
and
cld
cmp
cmp
mov
movsb
out
icebp
nop
popa
aam
xor
lock
sbb
push
adc
xchg
imul
push
enter
sub
push
cmp
dec
dec
xor
rcll
mov
repnz
cwtl
xchg
test
inc
add
xor
aam
jb
stc
mov
and
cmp
xchg
push
cmc
out
cwtl
lock
andl
or
pop
inc
fs
call
popa
mov
mov
loopne
dec
mov
push
or
fstl
shlb
jbe
out
ret
sub
les
das
cmp
mov
xor
cmpsb
or
mov
add
mov
mov
mov
jne
ret
mov
mov
cmp
insb
jnp
pop
dec
add
dec
cmpsl
sub
test
pushf
or
add
es
das
mov
cmp
dec
sbb
dec
sub
ret
cwtl
mov
mov
es
jge
gs
and
adc
mov
out
sbb
daa
fbstp
jmp
sbb
push
daa
cmp
add
aas
xchg
add
jnp
in
adc
fistl
mov
repnz
ficomps
xchg
push
stos
jnp
aad
jg
lcall
fucomip
cmp
enter
xchg
jae
jnp
fwait
ret
sub
outsb
xor
call
int
test
stc
fildll
sub
dec
rcrb
cli
sub
pop
mov
xchg
or
pop
cmpsb
and
ss
leave
dec
popf
mov
inc
sbb
push
xchg
in
sub
data16
lret
ss
add
enter
out
mov
mov
dec
sti
cmp
pop
jno
arpl
pop
and
inc
mov
add
inc
movsb
push
mov
inc
jno
repz
sbb
inc
or
inc
decl
cs
push
or
mov
mov
lahf
pop
fsub
ja
or
pop
cmp
test
bound
cld
adc
imul
in
mov
sbb
dec
sbb
jno
test
jmp
js
adc
aaa
test
xchg
fisubrs
mov
sbb
mov
and
inc
enter
and
or
jo
ffree
or
push
pop
ror
popa
das
lods
fstl
das
aas
sub
jle
pop
lahf
mov
xchg
lea
mov
lock
sbb
add
stc
dec
push
into
xchg
pop
fists
repz
push
fs
jp
adc
adc
xchg
sub
cmc
out
sub
out
fwait
xchg
mov
push
mov
mov
aaa
icebp
lds
jle
lret
ds
cmp
adc
xchg
pop
addr16
mov
lret
mov
pop
xchg
in
cli
ljmp
std
jb
add
mov
in
push
lret
sbb
in
cmp
fnsave
addr16
dec
add
ret
push
repz
popa
add
scas
lcall
sbb
mov
aas
inc
xchg
xor
xchg
shl
pop
xor
adc
pop
mov
adc
jne
adc
push
inc
fmull
xor
pop
jae
out
dec
adc
repnz
sbb
pop
push
jle
adc
addl
mov
popa
leave
lods
xchg
push
mov
cld
div
xor
into
and
imul
sbb
xor
popa
fisubs
xor
fstpt
sbb
mov
dec
lcall
cmc
dec
fistpl
lret
adc
and
xlat
push
jp
sub
rcrb
mov
ret
aad
das
and
dec
js
dec
jecxz
ss
dec
mov
push
in
or
jns
adc
fisubrs
adc
sbb
enter
lods
add
and
mov
test
xchg
gs
adc
jmp
mov
push
sbb
test
das
mov
pop
cwtl
inc
cli
lahf
mov
mov
mov
mov
adcb
sbb
fstpt
cmc
jecxz
xorb
fs
lret
pop
sub
dec
out
in
xchg
sub
xchg
cmp
test
and
xchg
ds
sbb
cwtl
xchg
lock
out
aaa
out
aam
sti
cmp
pop
insl
dec
push
jb
aad
aad
cs
dec
fidivs
arpl
push
movsl
lret
flds
pushf
mov
stc
xchg
fwait
sub
and
push
add
add
enter
mov
pop
fcomps
shrb
sbb
push
or
stos
mov
and
push
in
dec
push
push
mov
mov
adc
rcr
or
xchg
push
push
mov
in
mov
es
mov
pop
fsub
mov
shll
stos
loopne
xchg
pop
dec
hlt
js
sub
ds
adcb
inc
adc
push
sub
jnp
pop
sub
cs
or
xchg
flds
adc
cmp
jbe
sti
mov
js
jno
test
jno
and
mov
call
test
dec
push
daa
lcall
mov
ret
mov
push
outsb
push
fiaddl
pop
mov
insl
lar
xchg
xor
jmp
mov
fs
aad
arpl
mov
pop
mov
dec
es
sub
mov
xchg
fcomps
jo
icebp
addb
inc
adcb
ficoml
inc
lahf
and
jg
inc
xchg
jb
test
add
ret
std
pop
mov
flds
xchg
xchg
cmp
xchg
sbb
scas
jnp
rcrb
das
jns
adc
scas
outsl
aas
sbb
xor
pop
daa
inc
loop
in
xor
push
cli
out
pushf
jae
xor
dec
cmp
das
jg
das
fisttpll
dec
in
add
mov
mov
add
sbb
jl
fnstenv
sbb
push
mov
xchg
xchg
aad
pop
dec
pop
stc
pop
mov
test
sbb
push
cmp
lods
lahf
cmc
push
mov
iret
je
and
pop
sub
das
jl
out
inc
push
cmpsb
mov
cmp
mov
add
popa
enter
mov
dec
adc
outsb
mov
cmpl
mov
push
sub
xchg
add
mov
sub
and
push
adc
cmp
icebp
cmp
in
cmp
int
in
dec
scas
push
adc
andb
xchg
jno
cli
and
sbbl
repz
mov
adc
mov
and
add
pop
test
lahf
in
cmpsb
pop
lahf
stc
inc
test
out
jns
adc
mov
jne
data16
cmpl
sub
int
sbb
add
les
push
cmpsb
out
sub
add
push
cmp
jmp
xchg
push
ja
pop
ret
xor
mov
lret
sarb
mov
stos
scas
add
std
test
mov
jb
rcll
stos
xchg
dec
cltd
das
pop
lret
jmp
jmp
out
movsl
add
adc
mov
mov
mov
fwait
out
inc
mov
pop
sbb
mov
enter
aas
or
jle
mov
aas
sbb
ffree
dec
or
shrl
ljmp
pop
sahf
std
sbb
xchg
adc
adc
cltd
int
adc
sbb
dec
sbb
mov
fisttpll
fcom
in
bound
cmp
sub
lods
imul
xor
sbb
scas
cld
imul
or
xchg
loopne
xchg
mov
pop
cli
add
mov
adc
sub
std
mov
cmp
lods
test
adc
rcrb
enter
sbb
sbb
mov
mov
mov
pop
insl
nop
xchg
cmp
ljmp
dec
jl
shl
outsb
adc
mov
movsb
adc
mov
insb
out
dec
das
ljmp
out
je
mov
xor
sub
sub
ljmp
test
sbb
jne
loope
jmp
mov
ljmp
cltd
push
fwait
xchg
pop
and
incb
pushf
jne
jmp
cld
aad
scas
fwait
rcl
add
fists
fwait
test
idivb
lcall
or
gs
cmp
jge
inc
shll
dec
jle
xor
in
push
dec
xchg
ds
push
out
lcall
xchg
and
js
push
pop
es
and
cmp
cli
daa
jp
outsb
push
sub
fists
cmc
sbb
mov
xor
jnp
lds
lahf
mov
sub
sar
xchg
pop
cmp
inc
xorps
xchg
push
xchg
jmp
outsl
movsb
adc
add
lcall
dec
add
imul
push
mov
lods
mov
push
test
arpl
insb
pop
push
jg
jecxz
ss
mov
inc
movsb
out
sub
cmpsl
fbld
insb
cmc
les
clc
rcll
sbb
xchg
and
sahf
xlat
inc
daa
xchg
jne
insl
xchg
pop
fidivs
or
xchg
dec
cmpsb
pop
mov
xor
jmp
mov
popf
or
add
push
fnstsw
dec
sbb
push
cltd
mov
sub
aaa
loope
pop
fsts
sbb
outsl
rep
insl
or
and
jns
rcrb
sahf
push
out
roll
adc
push
inc
cmp
std
repnz
popf
add
sub
and
sbb
lret
ret
inc
mov
dec
dec
sbb
mov
ss
imul
sarl
out
test
inc
movsb
js
in
lods
mov
pop
mov
push
sub
pxor
outsb
fcmovu
roll
add
xchg
mov
push
sub
or
data16
cmpl
mov
push
sbb
sub
mov
repz
adc
mov
cwtl
rolb
inc
push
jge
or
xor
fldenv
imul
mov
scas
pop
mov
hlt
inc
sbb
or
int3
sub
in
push
jae
bound
pop
pop
popa
insb
jmp
jno
repz
jae
jle
cltd
inc
sub
sbb
dec
inc
xor
jecxz
cmovp
pop
sbb
and
xor
ljmp
xlat
rolb
push
out
xlat
mov
std
into
in
pop
sahf
popa
lods
inc
repz
std
fsubs
adc
lods
outsl
sub
adc
dec
pushl
xchg
mov
inc
inc
jmp
pop
cmp
xchg
addb
dec
push
adcl
adc
out
dec
or
lock
lods
lret
mov
mov
sbb
push
xchg
inc
nop
jge
out
mov
cmc
push
lcall
out
imulb
je
shl
cli
cs
aaa
jnp
jg
mov
outsl
inc
fcomps
pop
pmaxub
arpl
enter
xchg
icebp
jmp
cmp
cwtl
dec
adc
mov
pop
es
inc
in
mov
push
aas
inc
ss
jb
in
popa
scas
jns
fmuls
fadds
stos
jl
lock
mov
fs
and
jb
loop
and
fistpll
pop
push
adc
dec
and
in
and
inc
aad
setg
rclb
push
jecxz
sub
aas
sarb
addr16
inc
fbld
outsl
cmpsb
iret
ret
jg
movsl
sub
sbb
arpl
jl
sub
push
lds
jp
mov
or
movsb
mull
adc
fld
inc
sub
push
lock
stc
repz
stc
aad
lret
pop
pop
insl
loope
lret
adc
sbb
pushf
js
ret
lahf
cltd
sti
jp
inc
rorb
cld
sti
or
cmp
or
outsl
add
jns
and
setns
outsl
dec
fidivs
mov
mov
push
adc
test
sbbl
aaa
loope
testl
push
pop
mov
lods
sub
loope
scas
pusha
mov
pop
inc
cmp
mov
out
movsb
xchg
sbb
mov
jg
mov
fimull
add
xlat
sbb
sbb
fwait
mov
push
sub
push
dec
daa
fisubrl
mov
pushf
mov
fcmovnbe
dec
loope
outsb
pop
sub
jo
add
mov
rcrl
pop
pop
pop
and
inc
mov
jb
sub
jle
xchg
cltd
loope
mov
jecxz
lock
aas
xor
jmp
or
or
iret
outsb
cmp
xchg
in
xor
dec
inc
movsl
pop
mov
pop
xchg
jmp
xor
adc
sbbb
sbb
jg
pop
imul
inc
int3
sub
cmc
dec
sbb
inc
sub
sti
jbe
jl
inc
out
sub
mov
mov
jne
xor
sub
enter
lock
sbb
jmp
imul
and
enter
cmpsb
test
aaa
inc
out
mov
xchg
cmp
push
push
mov
fisubs
jbe
ret
push
movsl
jno
mov
lahf
xchg
rorb
sarb
jl
sub
daa
or
testb
inc
push
add
mov
fildl
cmp
out
cmp
inc
pop
xchg
mov
dec
outsl
imul
je
pop
stos
or
repnz
mov
fcoml
or
jge
sub
inc
or
hlt
ja
popl
jp
loop
gs
inc
stos
in
data16
int
scas
xor
pop
pop
inc
dec
dec
xchg
lods
dec
mov
and
xchg
mov
fbld
push
out
loopne
pop
sbb
ret
inc
adc
mov
popf
pop
mov
jp
cwtl
mov
outsb
cmp
imul
add
cmp
mov
sbb
sbb
and
and
cmp
jbe
xlat
jne
jo
insl
sarb
mov
mov
mov
imul
adc
mov
getsec
popa
repz
ret
inc
std
cmp
mov
dec
mov
out
adc
fisttpl
movsl
or
adc
mov
mov
and
adc
fildl
das
pop
loopne
imul
push
lcall
daa
push
fmull
mov
and
fisttps
push
lret
sbb
add
or
movsl
outsb
push
cltd
mov
mov
dec
cmpsb
lea
inc
inc
sub
mov
jns
xor
ljmp
push
pop
push
fscale
in
adc
enter
xchg
nop
rolb
imul
imul
xlat
xchg
inc
jp
ljmp
hlt
sub
clc
sbb
dec
pop
xlat
mov
push
in
sbb
in
or
push
loope
iret
jp
sub
push
cmp
pop
jo
jo
out
int3
mov
push
inc
mov
pop
jle
fistps
in
xchg
lret
adc
push
pusha
enter
pop
inc
cltd
xlat
jmp
scas
ja
jl
inc
lods
adc
inc
xchg
cltd
inc
in
cli
inc
sub
jecxz
cmpsb
cmp
xchg
daa
stc
sub
gs
xorl
xchg
enter
mov
fcmovu
add
ja
jbe
mov
icebp
scas
add
in
pop
lods
sbb
cmp
ds
sbb
ror
sub
jns
xor
sbb
stos
call
sbb
aaa
arpl
mov
mov
push
xchg
mov
aam
pop
mov
stos
mov
mov
in
inc
and
leave
add
les
xor
pop
dec
loop
fwait
xlat
sbb
mov
jbe
test
leave
pop
mov
mov
test
loope
mov
or
test
cmpb
sub
inc
mov
jecxz
gs
lods
stc
cmp
popf
test
sti
xchg
cmpsl
ss
dec
mov
lock
cmp
cs
loop
mov
inc
adc
sbb
xor
aam
and
jecxz
mov
push
ret
jl
sbb
mov
push
jge
mov
mov
iret
out
mov
jns
daa
imul
pop
jne
pushf
int3
push
jg
push
push
shrl
push
add
rorb
sbb
mov
or
jo
jp
xchg
popa
repnz
cwtl
aas
outsb
add
daa
mov
ret
pop
pop
mov
aad
add
pop
cmpsb
lret
mov
cmc
mov
inc
insl
stos
sbb
mov
in
sti
push
inc
mov
push
cli
lods
jns
ja
add
movsl
inc
push
dec
mov
inc
mov
push
enter
fistpll
clc
mov
mov
rcr
jnp
jae
dec
mul
nop
repnz
mov
and
push
lahf
enter
div
sti
or
push
xor
push
test
xor
dec
ret
es
lret
inc
lret
scas
mov
adc
and
inc
jo
cmp
add
aam
cmp
addb
movsl
xchg
mov
scas
in
jp
cwtl
push
in
adc
and
in
xchg
hlt
pop
adc
lock
je
xchg
repz
adc
cmpsb
mov
fists
xchg
repz
dec
mov
inc
mov
outsl
push
lds
jge
pusha
pop
imul
jne
pop
pop
jns
sbb
cmpsl
and
sub
pop
sub
pushf
loopne
jmp
pop
sbb
test
lea
sub
jecxz
into
mov
popa
imul
mov
dec
shll
mov
fs
push
and
inc
orl
les
ljmp
repz
cmp
bound
mov
xchg
in
and
test
into
aam
mov
jle
push
mov
int
rol
loopne
test
push
xor
inc
add
test
cmp
lcall
add
mov
push
inc
mov
ja
movl
adc
in
out
and
popf
stc
jp
into
jns
push
cmp
movsb
push
mov
and
enter
mov
and
inc
sub
jae
jo
ljmp
xchg
test
mov
out
or
or
and
aam
xchg
arpl
ret
test
mov
add
lock
outsl
inc
movsl
addl
and
sbb
popf
sub
inc
mov
sub
mov
mov
in
push
or
cmp
subb
sbb
ljmp
mov
push
cli
mov
cs
cld
fildl
adc
xor
xchg
xchg
xchg
rorl
xchg
dec
dec
repz
stos
fidivrl
stos
ja
movsl
add
mov
add
dec
incl
repz
add
les
mov
pop
out
sbb
sub
jne
cmp
ret
cmp
sub
xlat
es
nop
add
call
fiaddl
push
fsubr
dec
mov
push
shll
mov
cmp
push
imul
pop
jp
or
repz
out
mov
loopne
outsl
dec
cld
iret
movsb
cli
cmp
xchg
xor
or
fwait
jns
mov
cmpsb
lret
in
je
call
jno
sahf
sarl
xchg
enter
in
stos
std
lods
rcrb
test
xchg
cmpsb
inc
inc
rorb
mov
or
or
push
cmp
jbe
pusha
mov
cmp
arpl
adc
shlb
jmp
sub
std
mov
fmull
out
pop
sarl
sti
or
pop
push
in
andl
bnd
fnstsw
mov
nop
adc
pop
xchg
adc
adc
sub
push
cmp
int
and
js
mov
pusha
and
lret
mov
es
mov
cmpsb
and
call
and
cmp
cli
push
punpcklwd
js
out
imul
clc
sbb
and
push
ss
je
jno
and
or
jmp
pusha
add
add
je
mov
ja
ja
cmp
rcrb
sbb
out
jmp
dec
cmp
mov
stos
jnp
mov
popa
pushw
lods
sub
cmp
xchg
dec
jmp
ds
xchg
inc
dec
add
pushf
or
mov
loope
mov
sub
loop
test
sub
aaa
fwait
push
inc
orb
adc
push
sub
xchg
mov
movsl
jbe,pt
test
jecxz
add
xchg
jge
inc
sbb
lret
inc
mov
xor
rolb
pop
lea
mov
hlt
repnz
test
daa
push
add
mov
addl
clc
les
nop
fwait
jno
pop
pop
mov
push
ljmp
nop
sbb
inc
pop
adc
push
fs
and
data16
cmp
mov
cmc
dec
or
xchg
hlt
push
jb
daa
fildl
jecxz
lahf
js
shld
cmpsb
fbstp
mov
movsb
mov
lea
push
cli
ljmp
int3
fnstenv
movsl
out
outsl
cld
jg
bound
popa
dec
std
inc
push
stc
jne
push
add
push
lret
xor
jne
stos
xchg
lock
inc
mov
ret
lea
lock
or
lret
mov
mov
fcmovb
push
lcall
pusha
pop
jb
xchg
icebp
push
popa
inc
ret
je
sbb
rclb
leave
push
inc
inc
addr16
add
xchg
lcall
ja
lahf
in
inc
inc
add
mov
mov
sbb
jmp
pop
imul
in
cmc
jmp
or
stos
outsb
mov
insl
cld
sub
xlat
add
mov
and
cmpsb
xor
fwait
sbb
dec
or
or
fwait
daa
mov
sbb
xchg
adc
jle
mov
fcmovnu
scas
xor
call
xorb
arpl
scas
rcll
mov
es
movsb
sbb
outsl
rol
xor
cmc
ss
pop
adc
int
mov
sub
int3
popf
inc
jb
dec
sti
mov
sti
mov
cmpb
insl
shlb
mov
in
cmp
and
sbb
sbb
add
push
scas
nop
fisttps
inc
xor
or
or
xor
push
pop
test
cmp
daa
jl
std
pop
in
adc
call
fisttpl
shlb
lods
mov
jle
movsl
inc
fcoms
jecxz
fidivs
inc
sub
imul
mov
push
popa
cmpsl
mov
mov
test
mov
mov
test
jae
cmovns
sub
push
mov
push
mov
dec
aas
mov
sub
popa
push
insb
inc
lret
or
icebp
sti
repnz
andl
add
xchg
cli
stc
adc
out
add
jg
fildl
push
stos
dec
mov
insl
scas
into
inc
and
loopne
or
jb
shrl
cli
mov
cmp
in
adc
sbb
lds
inc
aam
sub
inc
mov
mov
stos
adc
xor
out
cli
ret
into
inc
sbb
xchg
xchg
outsb
pop
sub
push
es
jo
add
enter
aam
subps
adc
or
fsubrs
in
daa
mov
dec
xchg
mov
jo
pop
inc
in
pop
test
jmp
loop
lods
stc
scas
adc
add
aad
lret
fldcw
sahf
jbe
ds
dec
sub
pop
enter
insl
push
loopne
arpl
jecxz
inc
jp
dec
cmp
add
mov
out
pop
add
cmp
sbb
xchg
andb
in
cmp
insb
lea
lcall
jbe
sub
bound
jge
push
xor
add
pop
stos
dec
jne
adcb
call
xor
pushf
test
sub
mov
mov
icebp
mov
lds
loop
xor
enter
xor
push
lcall
in
lods
mov
mov
bound
xchg
cmp
sbb
lds
test
pop
in
push
das
lahf
movsb
mov
cmp
and
popf
dec
jecxz
and
ss
rorl
pop
xor
push
sbb
mov
inc
movsl
jne
sub
xchg
scas
mov
sub
movsl
push
pop
push
or
notb
pop
xlat
or
inc
or
daa
bound
and
mov
xor
aas
jg
in
stos
mov
mov
sbb
cmp
stos
xorb
dec
push
ljmp
mov
hlt
inc
out
push
add
and
sbb
or
mov
into
clc
push
push
jb
movl
negl
ret
sbb
fdivrp
cltd
jbe
inc
stc
call
adc
shrl
out
ds
seta
push
pop
cltd
movsb
pop
lcall
fistpl
mov
pop
ficompl
pop
bound
sahf
push
xchg
cmpsl
and
or
lret
jb
out
jae
dec
dec
xchg
dec
or
add
sub
testl
jl
nop
roll
jecxz
jle
fs
andl
sbb
mov
xchg
jbe
fwait
ss
loop
jecxz
jo
cmp
int3
push
lret
lahf
mov
ja
jmp
jo
xor
xor
pop
lds
pop
mov
xchg
popa
mov
out
mov
test
mov
popf
cmp
movsl
popf
push
pop
xor
inc
iret
and
out
mov
cmp
jge
cld
xor
hlt
mov
testl
cmp
jo
idiv
insl
sbb
cmp
ffreep
cmp
mov
insb
es
cmp
or
dec
adc
test
insl
jo
fwait
mov
fisttps
xor
add
aas
push
jmp
loop
outsl
xor
andl
jae
loopne
ret
hlt
call
pusha
fisttpll
inc
out
pushf
jae
imul
call
repz
fdivrl
and
dec
jg
or
sbb
outsl
adc
xor
xchg
push
je
sub
incb
mov
adc
cld
sub
add
add
cmp
xor
test
insl
es
out
push
push
sahf
push
mov
dec
div
and
dec
call
lret
jns
outsb
pop
push
cmp
mov
lds
popa
test
push
aad
push
xor
dec
pop
shl
or
jne
stos
mov
and
sti
xchg
andl
mov
jb
or
call
aaa
loop
mov
jo
and
mov
roll
imul
xchg
push
sub
lods
jmp
in
out
stos
scas
fldl
add
popa
imul
loop
cmp
aas
out
cmpsb
inc
jb
sbb
or
dec
push
mov
lcall
aad
mov
jnp
sbb
or
fcomps
icebp
xchg
stos
pushf
add
divb
push
lea
sbb
test
or
aad
scas
adc
push
cwtl
or
sub
stos
jmp
sbb
in
fcmovnu
xchg
xchg
loop
jns,pn
sbb
int3
mov
ja
jae
push
or
jg
int
loope
inc
fimull
or
std
cli
mov
inc
mov
sub
push
mov
cmp
shld
lea
divb
ja
and
mov
loop
pop
das
mov
mov
mov
adc
stc
adc
es
mov
jne
rclb
fidivl
cli
rcl
sbb
sbb
mov
or
clc
mov
adc
and
mov
gs
scas
push
std
xchg
sbb
xchg
add
adc
mov
adc
cmc
nop
xor
scas
sbb
lods
test
loop
lret
stos
sub
dec
jle
xchg
mov
pop
ja
mov
cmpsl
mov
jmp
sub
js
sub
adc
dec
into
fcmove
xor
inc
and
xorl
dec
add
rcrl
mov
stc
lea
xchg
pop
cmp
sbb
loopne
cmp
lods
daa
cli
jae
dec
scas
lret
sub
lods
and
out
or
test
cmp
fildl
out
stc
sub
jge
in
lock
ds
in
icebp
outsb
lret
push
adc
loope
mov
dec
xor
or
cli
sub
dec
loopne
cwtl
pop
jbe
dec
loope
and
dec
mov
loopne
loop
cmpsl
cmp
jg
stos
pop
jge
add
xor
xor
sub
mov
mov
test
push
lret
xchg
jp
lahf
xchg
xchg
jb
in
jle
or
pop
sbb
mov
mov
mov
hlt
lods
push
push
divl
jl
or
mov
xor
jle
stos
sti
push
leave
in
pop
sbb
pop
punpcklbw
push
fdivl
cmc
xchg
sub
push
mov
cmpsl
jp
cli
xor
test
cmp
jmp
pusha
ljmp
popf
pop
cmc
bound
mov
or
mov
inc
push
jl
and
sub
cmp
mov
mov
mov
pop
loop
sbb
sub
sahf
lock
loope
loop
test
push
mov
ja
pushf
in
jge
pop
mov
jno
ret
test
lret
repz
je
leave
jo
mov
sbb
das
test
cmpsl
fwait
lock
push
jmp
daa
cmp
pop
imul
je
mov
shl
out
xchg
and
dec
cmpsl
push
or
xchg
scas
jo
mov
mov
rolb
ljmp
ljmp
sarl
mulb
cld
pop
adc
jns
dec
fidivl
into
test
stos
stos
xlat
jns
mov
in
push
addr16
jb
fs
sbb
mov
sahf
lea
test
push
lret
dec
mov
arpl
fucomi
add
xor
or
lods
inc
inc
or
pop
and
inc
jmp
bound
enter
lea
xor
push
js
out
int3
es
jnp
pop
mov
test
cmpl
stos
xlat
stos
xchg
cmpsl
stos
pushf
test
xor
adc
push
and
ljmp
test
fwait
inc
or
cmc
mov
in
stos
push
xlat
xchg
in
jb
stos
test
xor
out
sbb
outsb
rcrb
fs
and
aam
cs
or
adc
mov
mov
pop
mov
inc
adc
pop
xor
xor
mov
xchg
movsb
mov
push
dec
push
addr16
mov
pusha
cmp
jle
push
fstpt
data16
sub
scas
fistpll
mov
lret
mov
lock
add
pop
aam
cltd
ja
dec
lds
inc
inc
aas
ret
fistpl
xchg
clc
aad
pop
mov
mov
repnz
repz
xchg
and
cmp
andl
push
pop
aaa
daa
xchg
jge
scas
mov
orb
inc
fldt
xor
xorl
xchg
leave
dec
test
dec
mov
xchg
dec
adc
cmp
xor
push
adcb
push
aas
add
iret
loop
hlt
jge
add
stos
xchg
lcall
cmp
pushl
fcompl
dec
loopne
xchg
add
sbb
popa
cmp
mov
cmp
lahf
gs
push
cmc
jo
jge
push
movsb
sub
jg
mov
or
arpl
ljmp
sub
movsb
int
jo
sbb
insl
clc
mov
lret
xchg
call
and
sbb
xchg
jmp
ret
dec
lds
adc
in
cmp
jb
sti
inc
ret
mov
fcoml
ds
mov
pop
loope
pusha
test
fsubr
fstp
stc
cmpsl
rolb
pop
xchg
pop
inc
dec
fisubrs
outsb
pop
call
jecxz
mov
je
call
mov
xor
and
adc
out
cmp
fcomps
or
cmpsl
xchg
push
dec
sbb
shrl
xchg
pop
sbb
enter
mov
xchg
lret
stos
push
cmc
sti
scas
sarb
fstpl
out
fld
insb
xor
cmp
cmc
sar
dec
fstpt
add
hlt
mov
out
inc
clc
mov
jg
sub
subb
jno
scas
inc
lea
decb
sub
into
xchg
movsb
in
push
xchg
int3
pop
outsb
dec
dec
sbb
cld
xor
data16
sbb
daa
sbb
and
mov
shrb
std
pop
xchg
jg
push
or
sbb
mov
icebp
sti
mov
test
cmpsl
cmpsl
hlt
aas
mov
push
movsl
push
sbb
movsb
flds
add
setno
sbb
mov
mov
fucomip
xor
xor
inc
pop
enter
mov
adc
and
adc
scas
xor
repnz
cli
mov
mov
mov
push
lea
lods
les
jmp
popw
push
shll
mov
int3
add
rolb
arpl
mov
data16
mov
add
mov
out
push
repnz
pop
mov
addb
mov
sub
cwtl
mov
inc
fisubrl
pop
ret
leave
cltd
insb
fists
adc
sub
mov
daa
mov
ret
jno
push
sbb
mov
xor
lret
dec
lock
cmp
jbe
icebp
sbb
imul
add
loope
mov
sarl
incb
cmp
clc
mov
ja
bound
xchg
pop
pop
jne
in
mov
aaa
jle
mov
cmp
or
in
or
insl
bound
or
add
or
adc
jnp
fidivs
out
jmp
in
mov
mov
shrl
sbb
push
or
pop
and
imul
stos
fstl
jecxz
lret
inc
movsl
cmp
mov
iret
cmp
pop
fsubrs
int
test
jbe
ficompl
mov
cld
rcrb
lea
imul
xor
push
test
fsubrl
jmp
or
xchg
rol
inc
dec
adc
hlt
add
hlt
jo
xchg
out
sbb
inc
pop
in
pop
stc
loopne
in
aas
pop
cmp
insl
jl
js
lcall
sbb
and
pop
cmpsl
adcl
cmp
shlb
push
push
or
shr
inc
sub
and
cmpsl
jmp
lcall
idiv
mov
shll
bound
xlat
sub
cld
dec
or
aam
mov
in
ja
mov
ret
ja
mov
inc
xor
aas
dec
jno
dec
pop
sbb
cld
ds
mov
cli
mov
pop
aaa
or
lcall
fiadds
xchg
cmp
adc
js
sub
push
cltd
push
pop
test
bound
loop
pop
mov
scas
cmp
in
les
rcll
shlb
ds
aad
rol
jmp
in
out
inc
jl
mov
leave
xor
cmp
aam
pusha
push
fwait
pop
insb
dec
lock
mov
jecxz
nop
mov
xchg
xlat
and
mov
xchg
arpl
jge
out
fsubrl
loopne
adc
lea
jo
ficoml
std
idivl
jg
icebp
test
shrl
push
shrb
pop
je
pusha
and
xchg
jae
mov
push
into
add
sub
out
das
pand
mov
lcall
popf
popf
test
adc
rcrl
mov
mov
cmpsb
pop
cmpsl
pop
arpl
clc
ss
arpl
clc
lret
repz
test
cmp
adcl
xchg
dec
aam
mov
testb
out
add
inc
cltd
jmp
out
mov
mov
jne
lahf
daa
fldl2e
dec
sub
push
pop
adc
sahf
mov
in
mov
mov
fcomps
std
adc
jp
push
cltd
bnd
cli
pop
xor
lock
scas
cmp
lcall
mov
aam
xlat
pop
pop
sub
sub
stc
loope
divl
xor
mov
aaa
test
and
or
loopw
xor
mov
cs
fcomp
mov
out
jg
and
mov
popf
cwtl
add
lds
or
imulb
repz
mov
or
lahf
xor
es
in
sub
dec
pop
repz
jae
fs
mov
lods
cli
cs
jp
add
das
or
test
xchg
daa
iret
sub
out
add
jb
jo
ficomps
pop
in
out
xor
dec
imul
mov
mov
lret
pop
outsb
popf
adc
enter
sbb
rcr
scas
pop
cld
jg
je
aad
jecxz
test
mov
dec
shl
cmp
int
push
xchg
push
jne
mov
push
sub
lahf
popa
xlat
mov
subl
or
or
jne
cmpsl
xchg
das
cs
mov
aaa
js
push
cmc
arpl
xlat
or
sbb
lahf
push
test
jmp
sub
and
mov
test
jge
push
addr16
sahf
push
push
mov
push
mov
ret
push
das
es
mov
idiv
xor
daa
addr16
std
out
add
push
daa
sbb
ja
fildll
jge
shlb
mov
out
adc
fwait
lods
lock
fidivl
das
add
cmp
and
mov
ss
ljmp
daa
das
jecxz
lret
jmp
mov
or
ficoml
mov
dec
test
in
jge
jle
pop
push
sub
push
shll
adc
fs
pop
cmp
test
sbb
out
push
and
jge
sahf
jmp
mov
fwait
lcall
fisubl
xor
push
mov
fs
jnp
xchg
dec
das
mov
push
and
aad
dec
aam
aas
aaa
mov
leave
insl
mov
insb
loop
mov
mov
jbe
mov
repz
lock
xchg
rorl
movsl
jge
and
mov
femms
xchg
adc
pop
in
int3
and
fnstenv
lds
imul
mov
sub
loope
push
in
jae
mov
pop
movsb
sbb
jp
mov
jbe
shl
jb
sarb
out
xchg
js
xbegin
cli
cltd
dec
dec
lods
arpl
mov
je
pop
mov
ss
fcmovu
int
popf
sbb
aaa
iret
mov
fdivrs
and
mov
shll
or
pop
mov
orb
inc
je
into
outsl
mov
pop
add
adc
xchg
arpl
xchg
lock
xor
pop
iret
dec
pop
jne
movsb
push
mov
mov
inc
mov
hlt
push
stc
jg
pop
imul
mov
mov
sbb
xlat
clc
icebp
xchg
fcmovu
js
add
lcall
mov
sbb
ficompl
xchg
push
data16
mov
jl
dec
jge
adc
adc
mov
sub
std
mov
add
minps
mov
div
js
jns
call
dec
mov
dec
pop
nop
data16
sub
jmp
bound
push
fsubrp
clc
insl
loopne
int
shll
pop
popf
faddl
imul
inc
pusha
in
std
xor
addb
mov
ja
ret
sub
or
dec
mov
xchg
jl
dec
mov
sub
sbb
mov
xchg
jg
adc
mov
popa
fcoms
repz
in
std
xor
xchg
ds
incb
hlt
jmp
stc
push
shrb
jmp
mov
sbb
xchg
call
mov
and
xor
mov
xor
imul
cmpl
das
jmp
cmp
jne
mov
sub
xor
mov
dec
and
jl
repz
iret
inc
pop
dec
cmp
inc
xchg
mov
in
daa
mov
ds
adc
jb
add
jecxz
js
jno
cltd
jne
mov
cmp
lret
nop
test
into
addr16
aaa
inc
mov
hlt
lods
bound
daa
and
mov
add
clc
mov
sbb
popa
cmpsl
nop
sbb
shrl
xchg
mov
mov
xorb
iret
addr16
pop
fmull
or
rol
mov
adc
in
or
jmp
fidivrl
sub
pop
test
adc
jle
mov
pop
dec
daa
or
mov
aad
call
cmp
push
in
add
cmp
cmp
xchg
push
loop
shll
pop
pop
or
cld
push
mov
sub
cli
mov
xor
jge
jne
lods
fstpl
je
mov
idivb
fdivrp
or
mov
inc
jo
gs
xchg
cmpsl
adc
inc
rorl
jecxz
roll
out
arpl
cmpsl
xor
addr16
xchg
jnp
out
in
andl
sbb
enter
dec
mulb
adc
mov
dec
pop
fdivp
pop
insl
repnz
aaa
shll
xor
mov
inc
jae
es
sbb
mov
cmp
out
jne
cmp
sahf
push
ret
ret
testb
cli
jmp
mov
pop
daa
popa
shrb
mov
mov
mov
mov
je
mov
push
mov
fst
insl
dec
jl
fwait
and
sub
mov
rcr
cmpsb
mov
fcoml
mov
cmpsl
pop
push
dec
loop
xlat
aad
lret
adc
ja
inc
or
or
dec
jmp
cmpsl
sub
in
mov
sbb
xlat
in
push
dec
xor
mov
sub
shr
xor
or
in
insl
std
cmp
xchg
jge
lods
das
vmulpd
push
negl
xor
and
imul
call
or
rcr
inc
fldcw
mov
xchg
inc
or
mov
adc
mov
pop
xchg
adc
scas
mov
adc
or
mov
shrl
stos
nop
add
aaa
jg
jns
arpl
jno
jno
pop
push
imul
aas
lea
add
pusha
fs
push
popl
mov
push
mov
mov
aas
imul
jae
insl
xchg
add
inc
icebp
adc
cmc
and
xor
inc
rcrb
imul
leave
test
insb
lret
xchg
test
mov
in
push
mov
int
add
lcall
push
test
aad
or
dec
in
fisttpl
outsb
xchg
cltd
adcl
mov
xor
fcmovnbe
lods
mov
test
in
sub
jb
imul
mov
shl
negl
push
mov
cmc
js
insb
popa
inc
pop
cmp
mov
js
jnp
cmp
call
adc
leave
adc
push
in
rclb
js
fcmovnbe
xchg
add
sub
ljmp
imul
mov
scas
push
adc
js
dec
cmp
dec
cmp
push
ret
lock
fcoml
mov
das
mov
lret
jae
lcall
push
adc
jo
fstl
lcall
sbb
scas
lea
popa
mov
xor
insl
inc
jbe
mov
sti
adc
mov
push
cli
in
test
cmp
jg
dec
add
xlat
inc
mov
and
mov
ljmp
jb
cmp
mov
cs
mov
and
test
mov
pushf
jae
rolb
lock
mov
arpl
sbb
adc
add
adc
push
add
dec
mov
xchg
out
scas
jle
mov
ret
arpl
out
mov
push
dec
add
inc
imul
add
adc
aaa
xchg
adc
rolb
js
mov
fistps
leave
mov
hlt
adc
jbe
enter
in
pop
sub
cmpsl
jb
popa
cmc
sub
outsb
xchg
jl
enter
test
in
mov
icebp
mov
xlat
adc
sbb
rolb
sub
fcoml
xchg
outsb
fiadds
imul
mov
jno
out
pop
or
mov
dec
dec
stc
cmpsl
push
loope
test
pop
out
jnp
xchg
push
mov
dec
add
jo
pop
cld
fistpl
roll
or
push
jecxz
jp
xchg
fdivl
mov
jl
addr16
into
mov
mov
push
ret
mov
add
jecxz
lea
pop
push
stos
add
in
push
xchg
iret
nop
les
ljmp
shl
add
xchg
jmp
jp
mov
in
fimuls
int
roll
out
jae
aad
lods
pop
adc
loope
add
cltd
inc
mov
inc
int3
mov
outsl
pop
pop
jb
hlt
inc
sub
jle
ja
mov
aas
test
sbb
lods
bound
test
addb
xchg
shr
push
lret
cmp
scas
lock
push
test
mov
and
scas
lret
add
frstor
pop
mov
lret
icebp
lret
and
dec
adc
shlb
jl
ja
fwait
jb
sbb
lret
cwtl
inc
jb
orl
mov
mov
lock
out
inc
ljmp
imul
lods
pop
in
adc
scas
mov
outsb
dec
dec
jns
dec
mov
shrl
fdivrs
out
or
mov
ljmp
push
push
loop
popf
aad
add
lock
push
push
mov
pop
mov
insb
mov
adc
test
je
shl
js
js
lret
addr16
xchg
push
fimull
or
rclb
lcall
xor
inc
out
and
flds
adc
xor
inc
sub
jb
xlat
test
mov
mov
inc
out
and
pop
xchg
and
adcl
and
mov
jecxz
inc
sbb
pop
push
push
pusha
push
inc
addb
stc
cmc
insb
mov
pop
mov
sahf
outsl
cmpsl
push
aas
adc
js
pop
push
push
rorb
jg
adc
in
pop
jae
jl
sbb
ljmp
jo
lds
mov
mov
xchg
push
test
fists
xchg
into
xchg
xchg
xor
mov
and
out
sub
mov
xor
dec
shl
push
push
jmp
or
or
cmp
out
mov
loop
lods
jge
pop
subl
inc
cwtl
mov
mov
jns
test
nop
xor
mov
insl
popf
push
or
ja
insl
aam
aaa
rcr
or
jno
push
jae
jo
xor
xchg
push
sub
xchg
mov
push
mov
and
out
repnz
jno
sub
call
movsl
xchg
in
std
pop
pop
mov
xor
cmpsb
out
xlat
sub
outsw
les
sub
xor
push
ds
xrelease
xchg
aas
xchg
movsl
xchg
jns
and
inc
inc
mov
pop
jp
std
lcall
ljmp
dec
in
xchg
imul
mov
mov
xchg
cwtl
cbtw
mov
sub
shl
stc
mov
mov
popa
jle
bswap
jle
andl
fsubs
loop
mov
fildll
stos
push
cmp
inc
enter
sub
in
xor
jp
inc
lds
inc
and
xor
es
xor
cltd
mov
mov
test
fnstenv
popf
les
dec
fwait
stc
pop
fnsetpm(287
pop
xchg
cmp
add
stc
mov
stc
dec
lcall
cmp
int
xor
cltd
mov
test
out
cmp
mov
imul
bswap
or
leave
lea
fistps
fdivs
aam
sub
jge
jle
int
jno
xchg
sbb
loop
loop
and
scas
cmpl
or
jp
rol
into
fistl
ror
or
in
cwtl
xor
mov
dec
les
jmp
test
movsl
int
jl
test
fs
scas
xor
add
test
ret
cmp
insb
insb
icebp
mov
adcb
in
sub
push
sbb
inc
mov
mov
jg
xor
mov
mov
cmp
pop
repnz
lahf
testb
shll
lods
je
xchg
jns
movb
cmc
adc
cmpsl
push
xlat
xchg
lds
pop
fcmovb
test
leave
popf
mov
inc
sbb
stos
sbb
inc
cltd
jbe
sub
outsl
scas
lcall
les
rcrl
lret
es
call
outsl
repnz
lret
jae
fists
nop
insb
stc
cmpsb
sbb
iret
sbb
das
sub
mov
ljmp
add
sti
pop
mov
lea
cmc
mov
xor
std
pop
inc
jecxz
and
sbb
lahf
hlt
sub
lahf
je
aas
lahf
adc
inc
aaa
sbbb
addb
out
mov
in
shrl
hlt
pop
jecxz
cs
daa
hlt
subb
ds
cs
jge
adc
scas
push
jmp
iret
jl
lods
mov
push
into
dec
add
mov
mov
xor
push
push
adc
mov
ja
hlt
pushf
mov
sbb
jbe
and
or
mov
dec
subb
stos
arpl
stc
adc
ret
je
push
and
push
xor
fucomp
sub
push
mov
ljmp
negl
call
adc
lods
mov
rorl
into
sbb
jb
xchg
cmp
insl
mov
andb
and
bound
xor
leave
mov
icebp
lds
adc
or
test
mov
test
or
fcom
mov
xchg
jg
sbb
pop
lcall
mov
jle
ljmp
icebp
push
dec
mov
call
outsb
and
ja
testb
add
aad
in
and
leave
and
out
sub
ret
pop
call
cmpl
adc
out
lock
jbe
mov
rorb
cmp
push
push
sbb
sub
adc
dec
incl
mov
cmp
nop
xor
loope
hlt
cli
imulb
adc
dec
icebp
push
cli
xlat
inc
ret
mov
cwtl
push
jg
mov
ss
test
repnz
in
mov
mov
xor
leave
mov
mov
mov
in
fsubs
lods
outsl
in
nop
sbb
lods
cmpsb
inc
hlt
ja
mov
sub
insb
std
sbb
mov
add
divb
test
aad
stc
fimull
ljmp
push
outsb
pop
lock
les
sub
xlat
or
mov
sub
outsb
adc
aas
lods
add
mov
mov
xchg
adc
lcall
enter
xlat
sub
arpl
test
pmaxsw
fstpt
add
adc
push
adc
aad
popf
adc
popl
jnp
ss
push
push
push
daa
loop
mov
test
push
cmp
in
in
xlat
sarb
cmp
mov
cld
and
xor
stos
loope
jge
mov
movsb
push
add
lock
jne
fsubr
sub
imul
jge
and
push
dec
jbe
dec
fs
shl
in
mov
mov
sub
ljmp
push
bound
aas
adc
mov
xor
dec
xchg
push
add
xchg
jb
lret
adc
leave
imul
test
popa
cmc
into
test
movl
jmp
sub
insb
lods
jge
cmp
sbbb
sbb
into
leave
jl
sbb
adc
inc
xchg
lods
dec
add
stos
aaa
push
mov
fisttps
jmp
pop
pop
idivb
dec
mov
es
mov
sub
or
sub
xchg
jae
fwait
mov
scas
jg
fisttpll
mov
testb
decb
mov
xchg
imul
insl
inc
data16
mov
mov
fbstp
sbb
inc
and
in
fcompl
ljmp
sub
shrb
fbstp
cmp
mov
sbb
pop
testl
out
fdivrl
mov
movsl
jbe
mov
mov
sub
outsb
jb
adc
lea
xchg
fwait
jbe
xor
push
fdivrp
lods
test
add
sub
inc
movsb
xchg
xlat
aam
notl
xchg
xchg
ss
pop
loope
rcl
xchg
bnd
mov
pop
pop
insb
fnstenv
clc
sbb
jb,pt
test
sahf
dec
in
repz
pushf
pusha
jnp
cs
aas
jecxz
xchg
cld
les
sbb
fadds
stos
pop
mov
bound
lods
pop
frstor
inc
pop
sti
jl
mov
pop
push
push
arpl
stos
or
out
fs
mov
mov
mov
imul
outsb
test
dec
adc
xchg
movsl
pushf
and
test
arpl
leave
aam
sbb
sub
push
das
in
out
and
jmp
daa
cmpsl
rcll
jo
iret
das
addr16
and
xchg
je
mov
imulb
hlt
repnz
jo
sub
and
dec
stc
repz
adc
mov
push
and
add
inc
loope
iret
in
and
pop
xchg
add
dec
mov
and
into
xchg
inc
jl
addr16
push
int3
out
pop
push
subl
test
xor
icebp
pusha
inc
and
inc
imul
cmp
adc
rolb
pop
add
jno
dec
mov
inc
ja
pop
dec
dec
hlt
push
fimull
out
cwtl
jecxz
shlb
push
into
and
mov
call
jbe
arpl
shrb
fsubrp
shl
inc
daa
lea
cmpsl
adc
fisttpl
mov
xorl
xchg
sbb
icebp
xchg
pop
repnz
push
and
mov
imul
mov
rcpps
fcomps
outsl
inc
adc
sbb
and
fadds
jmp
push
out
cmp
dec
and
add
fnsave
fcmove
pop
dec
imulb
mov
or
or
pop
xor
hlt
sub
cmp
clc
jo
rorl
insb
out
inc
xorb
push
xor
sub
adc
lock
fwait
mov
bound
fists
or
orl
test
shrb
pop
xchg
je
cmpsb
xlat
jbe
aaa
sbb
jno
jb
jne
adc
je
cmpsb
push
aas
fsubrp
inc
fistpl
cmp
mov
adc
aam
add
mov
rol
sbb
ret
dec
andl
outsl
cli
jae
cmp
aam
xor
pop
das
jg
sbb
out
mov
xlat
cmp
scas
inc
out
shlb
ljmp
scas
cmp
sub
mov
or
jmp
int
testb
mov
push
mov
pop
sub
xlat
push
lahf
push
daa
negb
xchg
cmp
dec
mov
push
loop
pusha
jmp
push
rcr
inc
xchg
stos
add
fldenv
jbe
js
popf
and
mov
fdivrl
cmpsl
test
out
shll
mov
mov
pop
imul
jl
push
mov
push
add
mov
inc
or
mov
jnp
add
dec
xor
arpl
fldcw
pop
lock
push
popa
das
out
adc
jle
sarb
cmpsb
iret
mov
cmp
pop
nop
movsl
add
push
testb
cmp
in
ret
jbe
push
sbb
cmp
ljmp
test
test
stc
xchg
mov
out
jae
adc
jno
mulb
jb
adc
jo
mov
cmpsl
adc
mov
aaa
cmp
pop
mov
jno
stc
pop
cwtl
sarb
jae
inc
add
aaa
jns
out
pop
lahf
mov
pusha
repnz
jle
pop
mov
stos
lea
mov
mov
xchg
cmp
outsb
mov
fcoml
in
stos
outsb
push
rorb
icebp
sub
cld
push
fstps
imul
xchg
loop
int
nop
mov
sub
loope
sub
les
shl
popa
cwtl
mov
xchg
mov
loop
jge
lahf
sbb
sbb
xor
jbe
mov
lcall
imul
cld
stos
out
sarl
outsl
shrl
xor
loope
and
cmp
nop
xor
test
popa
inc
push
das
nop
cmp
inc
jno
sarl
punpcklbw
sbb
ss
jg
fstpl
test
mov
aaa
mov
ret
or
push
loopne
insb
mov
jl
icebp
dec
dec
pcmpgtw
sbb
mov
into
lods
xchg
sub
pop
sbb
jb
sub
xchg
int3
sbb
or
sahf
int
sahf
push
mov
xlat
mov
cmp
xor
div
rolb
std
mov
dec
and
sbb
xchg
fs
cmp
dec
loop
scas
xchg
std
push
ss
int
add
cmp
flds
xchg
mov
inc
pop
lock
or
jle
aas
repnz
mov
mov
dec
jne
dec
lret
je
lods
adc
jbe
and
pop
adc
inc
jbe
ja
ficomps
push
test
jle
add
cmp
rolb
aam
loope
rcr
movsl
push
es
xor
and
pop
iret
or
gs
sbb
push
push
xor
bt
dec
popf
inc
sbb
fwait
xchg
pop
adc
jae
xchg
in
cmp
dec
cmpsb
scas
fadds
mov
test
dec
cmpb
add
in
mov
or
cmp
add
cmp
lds
ja
mov
leave
pop
xchg
repz
pop
sub
imul
movsl
pop
clc
insb
xchg
mov
mov
addr16
cs
stc
in
and
ret
movsl
dec
test
xchg
test
js
dec
or
hlt
add
lock
cwtl
int
sub
out
fdiv
xor
pop
xor
lea
xor
jg
movl
sbb
xor
cltd
lods
push
in
xchg
xchg
or
movsb
and
and
push
xor
scas
in
sub
repz
pop
jae
xchg
push
je
push
movsb
push
div
push
scas
sub
pop
push
mov
daa
out
insl
sbb
sub
jmp
xchg
pop
cmp
cmp
rorl
xchg
out
dec
mov
mov
push
mov
cmp
mov
scas
cltd
cli
hlt
sbb
push
pop
xlat
mov
in
ja
push
repnz
push
push
lds
sti
lock
ja
addl
xchg
clc
sarl
fs
iret
mov
dec
cmp
dec
mov
add
xchg
in
lods
xor
inc
mov
add
ljmp
clc
test
sub
lret
xorl
inc
data16
dec
jnp
xchg
cmp
pushf
loope
and
add
pop
shr
mov
adc
hlt
fldt
arpl
sbb
xor
sbb
ret
aaa
or
jge
dec
add
adcb
int
insl
sahf
ss
call
ret
pop
scas
cmp
sub
sub
jne
pop
mov
push
mov
cmpsl
lea
pop
and
mov
adc
jbe
jle
mov
faddl
jnp
sub
jle
out
aas
dec
jp
push
push
insl
leave
in
sub
ja
or
xor
mov
fcomps
stc
clc
std
cmc
imull
jae
xlat
dec
cmpsb
inc
mov
cmp
mov
sbb
fs
sahf
jo
mov
and
lahf
cmc
daa
in
gs
icebp
mov
movsl
xorl
xchg
insb
pop
mov
cmp
out
rcrl
negl
rorb
and
std
pop
dec
cmp
pop
loopne
adc
out
cmpsb
les
push
pop
xchg
ja
out
ffree
pop
pop
fcmovbe
je
sub
xor
imul
mov
pop
lods
add
push
fcomi
int3
lahf
fwait
add
pop
addb
imul
stos
cmpsb
mov
inc
or
jecxz
push
mov
cwtl
cwtl
jecxz
inc
pop
and
icebp
enter
imul
rcrb
push
mov
xchg
cmp
arpl
scas
mov
lods
scas
mov
nop
jno
jp
dec
cwtl
pop
pusha
stc
cmp
or
xor
arpl
mov
leave
dec
pop
dec
jle
rcrb
cmp
mov
bswap
cmp
hlt
shrb
loopne
lahf
add
jl
mov
lock
push
andb
push
push
push
dec
mov
xor
fcom
les
inc
push
test
scas
sub
adc
jle
mov
mov
push
mov
push
and
xchg
les
push
sub
add
xchg
sub
aam
decb
dec
cmp
xchg
out
mov
xor
pusha
cmpsb
xor
fwait
into
int
lods
cwtl
sbb
mov
rolb
jae
sbb
push
mov
out
sub
jb
rcrl
je
adc
mov
pop
cmp
fistl
inc
ret
pop
sbb
pop
fdivr
fstl
pusha
outsl
cmp
cld
test
push
in
mov
std
fcmovb
loope
popa
daa
or
xchg
xor
bound
les
call
aad
cltd
jae
aad
sub
cmp
add
jp
xor
cmpsb
mov
stos
call
xchg
jb
fsub
or
mov
loop
jg
jmp
jae
mov
roll
negb
adc
aad
and
fsubrs
fcoms
xchg
dec
push
in
dec
xor
loopne
or
sub
in
daa
jno
inc
aam
sahf
or
lds
shrl
sbb
icebp
lret
int3
mov
sti
inc
test
data16
ss
jo
sub
js
mov
fs
cmpsl
push
xchg
aam
pop
xorb
sbb
fdivrs
xchg
pop
js
out
aaa
xchg
sahf
sbb
aas
adc
fwait
out
xchg
add
mov
pop
jne
inc
mov
lock
sbb
notb
or
rclb
jne
mov
or
rcll
bnd
xor
xor
scas
jae
fld
mov
fwait
bound
xchg
nop
leave
pushf
or
and
dec
mov
ret
ja
push
gs
imul
mov
dec
in
xchg
test
mov
sub
add
shlb
jle
orb
fisttpll
pop
outsb
les
jnp
cmpsb
int
stos
cmc
jnp
into
cld
loope
add
sbb
push
adc
movsl
in
aam
bnd
fldl
push
jbe
out
adc
jne
sbb
adc
mov
cmp
sbb
fisttps
and
movb
js
sub
rorb
dec
es
arpl
mov
ret
or
les
mov
xchg
ja
test
cmpsb
popf
mov
je
cwtl
lods
stc
aas
imul
pop
mov
dec
jecxz
add
negb
ret
adc
test
xlat
scas
mov
movsb
icebp
addr16
aaa
dec
push
stos
xchg
mov
push
jbe
or
call
in
stos
mov
mov
cs
aad
mov
call
loopne
inc
loop
jmp
icebp
clc
push
push
aas
jnp
mov
lds
ljmp
adc
pop
jmp
pop
rcrb
outsb
fmul
and
inc
add
in
add
lods
dec
lcall
push
rol
inc
es
scas
lods
lret
jmp
test
lds
les
push
aaa
cmpsl
lret
xor
sbb
mov
ja
fisttps
or
and
out
call
xchg
sub
and
or
jmp
mov
filds
dec
jne
test
test
or
sub
fldl
jmp
test
cmpsl
push
das
lret
adc
inc
std
dec
push
in
and
and
bound
es
pop
mov
cmp
cmovne
or
add
arpl
gs
fwait
dec
xchg
push
adc
pop
or
bswap
dec
mov
xchg
les
mov
into
stos
ljmp
lds
ret
xchg
out
lds
xor
cmp
aam
cmp
fdivrs
out
insb
inc
cmp
cli
or
mov
dec
mov
jmp
ds
arpl
ja
jne
loope
pop
loope
scas
mov
mov
stos
daa
out
mov
cmp
stos
push
dec
mov
cmp
inc
adc
pusha
in
push
mov
add
or
cmpsb
in
dec
mov
adc
mov
enter
and
outsb
cltd
outsb
in
and
jl
pop
shlb
ljmp
inc
sarb
inc
mov
or
int3
ret
adc
and
xorb
xchg
cld
sar
sbb
mov
decl
in
cmp
sbb
jns
jecxz
les
and
mov
jg
pop
fwait
and
sbb
cltd
jne
in
push
xorl
sub
cmp
cltd
nop
rcrl
lcall
test
xchg
lahf
in
dec
fldl
inc
push
mov
sub
mov
mov
push
xchg
xchg
sub
inc
xchg
jl
insb
lcall
repz
fimuls
and
je
pop
push
out
add
pushf
ja
mov
dec
pop
lods
push
and
subl
cmpsl
lods
dec
insl
aad
pop
iret
cld
popf
out
cs
xchg
sti
fildll
cmp
add
and
inc
inc
mov
pop
push
pop
fwait
std
mov
fs
enter
data16
fcomi
fdiv
bound
fsubr
cmpsb
orb
jns
aas
pop
dec
pslld
xchg
shr
push
push
jg
repz
mov
and
jb
mulb
and
jecxz
and
sub
adc
inc
jb
stos
and
mov
clc
jmp
xor
jge
sahf
push
stos
and
popf
xor
cmp
shl
mov
mov
adc
stc
xchg
pusha
cmp
and
test
jle
inc
in
jns
jo,pn
rorb
xorl
xchg
xchg
jno
into
xchg
fcoml
mov
bound
jge
shl
push
push
push
ss
arpl
les
fbstp
loopne
sbb
pop
adcb
xchg
xor
push
loopne
xchg
rclb
push
xchg
dec
xor
push
in
mov
pushw
test
fwait
jp
clc
mov
xlat
stos
aaa
movsb
outsl
sbb
pop
sbb
into
mov
aas
loope
or
adc
mov
push
outsl
dec
push
push
mov
push
mov
aam
loopne
nop
xor
mov
leave
cmpsb
repnz
sub
out
dec
pop
xchg
xchg
sub
iret
stos
pop
in
ficoml
cmp
push
xor
xchg
out
pop
xlat
or
iret
mov
gs
jnp
push
mov
pop
push
les
inc
data16
or
mov
xor
fsubl
or
pop
mov
scas
mov
mov
into
jle
mov
dec
enter
lahf
cld
adc
push
cld
in
jmp
xchg
das
dec
xor
icebp
ljmp
fistpl
nop
lea
mov
mov
sti
and
add
and
int
call
lds
iret
pop
into
mov
insl
lret
mov
jge
adc
scas
cmp
pop
stos
mov
das
sub
das
mov
pop
ss
stos
aad
aas
mov
mull
inc
xor
or
mov
dec
or
aam
pop
add
aaa
xchg
add
std
xor
cli
jle
xchg
call
mov
scas
loope
mov
mov
test
pusha
or
push
pop
jmp
dec
les
add
stos
jno
js
push
ds
jp
out
cmpsb
nop
mov
inc
repz
iret
out
sub
xchg
sbb
mov
mov
adc
aam
frstor
loopne
mov
cli
push
fidivrl
mov
lret
pusha
mov
int3
aad
test
inc
imul
test
pop
mov
arpl
lahf
jle
popa
push
fdivl
test
out
je
subl
nop
push
dec
pop
xor
fldt
les
movsb
cmpsl
mov
dec
es
ja
jg
es
jbe
dec
xchg
or
xchg
ja
push
insl
inc
cmp
test
xor
sub
ror
pop
xor
stc
xchg
pop
out
ds
hlt
scas
inc
imul
push
sub
aam
addr16
adc
stos
mov
jae
std
cmpsb
and
push
sar
hlt
pop
mov
iret
push
xlat
or
cmp
xchg
cmpsb
ljmp
call
add
jecxz
test
das
jl
mov
sbb
jmp
data16
add
testl
cmp
add
out
mov
mov
jl
mov
out
adc
stos
mov
mov
adc
xchg
push
push
inc
into
mov
lcall
mov
mov
push
shr
or
test
lods
paddusw
cmp
add
jmp
imul
xchg
out
dec
test
push
and
cmp
cmp
sbb
dec
pop
sbb
adc
stos
cmp
scas
hlt
push
clc
dec
adc
pushf
aas
stc
push
mov
push
loope
pop
fcmovne
push
movsb
movsb
pop
in
ret
cmp
notl
fimuls
mov
in
pop
movsb
mov
pop
dec
mov
aas
dec
add
shr
es
inc
xor
jmp
xor
repnz
push
add
push
mov
pop
xchg
mov
neg
pop
bound
xor
add
push
out
imul
and
jmp
inc
cmp
clc
jbe
adc
push
mov
cmpl
mov
dec
mov
jle
dec
push
pusha
xchg
mov
xor
fiadds
stos
in
mov
pop
mov
ja
out
enter
lcall
testl
mov
or
inc
cmp
jecxz
loopne
aam
loop
and
dec
push
dec
mov
xor
push
mov
subb
iret
push
inc
shll
jl
and
std
and
cmp
mov
mov
cltd
xor
xchg
rcll
sarb
in
jmp
punpcklwd
lods
test
into
mov
movsl
mov
sti
add
sub
dec
movsl
outsl
adc
rcrb
and
loopne
pop
sub
test
inc
jae
out
inc
push
dec
pop
sbb
sti
scas
add
in
scas
test
adc
fdivrl
les
out
arpl
pop
addr16
xchg
xchg
mov
jmp
movb
ja
xor
aad
int
xchg
sub
das
adc
adc
xor
adc
sbb
repnz
nop
xor
mov
mov
mov
gs
dec
inc
and
aam
popf
cwtl
fistps
test
out
and
fisttps
inc
sti
xchg
mov
jle
pop
ds
xchg
inc
and
cmp
sub
enter
mov
aaa
test
xchg
and
jmp
sbbl
cmp
add
clc
inc
mov
into
mov
out
push
sbb
rol
fwait
sbb
push
jne
and
and
pop
mov
xor
xchg
add
mov
sbb
push
mov
cmp
mov
sahf
mov
arpl
cmc
and
sbb
out
imull
dec
movsl
repz
push
repnz
inc
sub
mov
ror
cld
cli
fdivrp
imul
sahf
ret
sbb
mov
mov
inc
fsubrs
sub
in
popf
ret
adc
lahf
xchg
imul
cmpsb
das
dec
imul
mov
sbb
inc
icebp
lods
incb
ljmp
sbb
add
shlb
pop
cmp
pop
inc
fsubrs
push
xor
or
sbb
insl
sbb
sub
pop
cmp
cmp
cld
out
or
or
adc
pop
in
cld
xchg
jnp
pop
clc
jbe
ss
std
test
xor
pop
mov
jae
jmp
jb
fistpll
sbb
push
mov
add
scas
pop
nop
mov
jb
xchg
mov
ret
test
push
mov
cli
out
mov
sub
jo
jns
dec
push
out
scas
cmp
push
inc
mov
imul
stos
xorl
fistpll
insl
mov
ret
xor
popf
addb
push
and
out
pop
ljmp
push
std
test
pushf
xchg
cmpsl
push
loope
imul
mov
jle
sub
cmpsb
rclb
pusha
sbb
jne
mov
stos
subb
or
adc
in
stos
pop
cltd
andl
cli
int3
das
inc
in
xor
das
call
xor
je
pop
movsb
pop
arpl
std
push
push
jmp
insl
push
leave
sbb
out
jae
pop
lret
jl
and
stos
xor
lcall
ljmp
testl
adc
add
lcall
scas
jb
xchg
fmull
in
push
mov
inc
bound
cmp
cmpl
imul
lods
mov
out
mov
and
pop
je
icebp
and
cmpsb
movsl
mov
mov
jp
cmp
add
leave
call
cmp
adcl
pop
mov
lods
icebp
dec
lea
xchg
jmp
mov
sub
fs
lods
xor
notl
popa
xchg
jge
sbb
sbbb
pop
mov
psllq
mov
iret
icebp
stos
int3
add
push
outsl
rsm
outsb
aam
jle
pop
in
ret
push
jae
test
xchg
or
andb
jb
jge
sti
subb
mov
push
lcall
and
push
cltd
outsl
sub
popf
inc
sbb
dec
sub
dec
push
out
and
cmp
pop
xchg
js
test
jmp
arpl
or
sub
jecxz
shlb
scas
mov
inc
repnz
fistpl
mov
xchg
pop
mov
icebp
dec
imul
mov
xor
push
ret
push
lods
jp
cmpl
mov
xchg
lret
jge
inc
cmpsb
std
cmp
adc
stc
sbb
cmpsb
cmp
pop
loopne
pop
mov
dec
adc
bound
stos
xor
pop
sub
lea
push
ficoml
adc
push
jbe
rorb
add
les
shlb
or
mov
xor
fcomps
cli
cltd
xor
and
inc
call
ss
sbb
push
in
sub
out
fsubrs
out
sbb
nop
xchg
pop
lods
popl
movsl
dec
mov
lods
scas
jecxz
nop
jnp
mov
fidivrl
iret
test
adc
or
idivb
hlt
adc
imul
xor
fstl
pop
cwtl
insb
popa
rol
xchg
and
pushf
pop
mov
pop
out
ja
scas
ja
fnstenv
jmp
pop
mov
imul
push
fcmovbe
lea
sarb
and
test
cmp
mov
or
inc
lock
push
push
cmp
lcall
push
sub
aad
movsl
push
adc
mov
decb
shll
mov
sti
shll
gs
mov
fadds
sbb
loopne
cltd
pop
mov
or
lcall
add
pop
pop
ja
loop
push
jbe
aas
fisubrs
fnstsw
enter
xchg
push
pop
movb
stc
int
ret
add
cmp
push
sarb
push
pop
mov
setns
jnp
jne
pop
xor
mov
data16
hlt
mov
jne
repnz
jg
jmp
popa
add
aaa
jbe
icebp
xchg
adc
adc
mov
mov
in
enter
add
xchg
and
jo
sub
sbb
mov
imul
pushf
lcall
xchg
dec
and
adc
push
xor
fldenv
pop
push
mov
or
cmp
add
or
push
ja
jns
fisttps
hlt
push
mov
aas
push
mov
cmc
pop
cmp
mov
cld
inc
pop
gs
sbb
mov
jno
lock
push
insb
mov
rcrl
adc
ficompl
jne
in
mov
int3
imul
out
repz
cmpsl
jbe
inc
in
lea
dec
lods
jg
call
in
adc
pop
shrl
mov
adc
push
in
dec
cmp
jl
push
nop
in
flds
sub
jns
push
sti
mov
clc
call
jmp
cltd
mov
cwtl
dec
sub
push
dec
add
mov
add
mov
repz
pop
les
movsl
mov
inc
pop
fldt
into
outsb
mov
mov
push
cmp
sub
and
enter
das
mov
xor
sti
out
or
loop
loope
movsb
jno
fstpl
sbb
xchg
divl
aaa
sub
push
push
mov
cmp
jo
mov
mov
push
pop
pop
or
lods
aad
dec
out
js
leave
fadd
dec
sbb
mov
adc
int3
dec
fcmovb
xor
xor
ds
dec
fs
mov
shll
shll
jbe
inc
popf
sbb
xor
xor
frstor
xor
das
pop
mov
daa
jae
sbb
jmp
sub
inc
mov
cwtl
test
lahf
test
pop
aad
ret
sbb
mull
sbb
out
push
or
in
hlt
jmp
pop
adc
push
mov
decb
jl
adc
xchg
rorb
imull
xchg
dec
sub
stos
lock
jno
or
and
aaa
nop
mov
imul
mov
sub
sar
mov
sub
add
add
jecxz
or
ja
es
sbb
mull
imul
adc
lea
cmp
jae
cltd
mov
popf
jg
sub
stos
xchg
shl
stc
or
lret
imulb
and
or
fcoml
inc
cmp
in
dec
stc
pop
cmp
js
inc
mov
or
loop
sbbl
lcall
xchg
inc
sbb
cmp
lea
mov
in
pop
imul
test
into
mov
sahf
shl
repnz
mov
mov
scas
push
gs
fildll
xchg
pop
xor
pop
dec
mov
insb
adc
jo
mov
arpl
mov
add
dec
jae
lcall
and
jle
jns
adc
sbbl
add
sti
ror
mov
std
pop
inc
rorl
popa
lahf
and
inc
andb
xor
addl
add
std
mov
cs
jg
mov
dec
cmp
and
neg
add
imul
xchg
push
clc
imull
jl
in
out
xor
sub
stc
sbb
xor
cmp
sub
jmp
push
push
out
adc
push
out
adc
sbb
mov
mov
test
and
cmp
lods
cmc
gs
test
lcall
mov
adc
jle
mov
out
out
arpl
mov
fldcw
xabort
dec
scas
ret
cmpsl
cmpsb
jno
getsec
out
push
sbb
stos
test
push
stos
mov
xor
in
and
popa
mov
in
mov
pop
mov
xchg
call
sub
xchg
notl
cs
lock
xlat
xchg
push
xor
jne
movsl
xor
cs
dec
xchg
loope
and
jle
xor
xchg
loopne
inc
or
push
and
idivb
scas
stos
cli
movsl
call
jbe
mov
mov
fisubrl
call
lock
push
dec
loope
mov
ds
add
push
sub
hlt
and
cmp
mov
shr
adc
cmp
popf
lods
jo
sbb
aam
jns
sub
mov
jl
sbb
pop
inc
mov
jns
sarl
enter
push
cmp
sub
sub
and
in
sub
jmp
rcrl
xor
xor
scas
lds
cltd
jle
inc
sbb
sub
mov
fwait
cs
movsb
cltd
movsl
jge
jge
imul
mov
xor
insb
bound
xor
lock
es
jmp
in
fdivrp
pop
xchg
cli
mov
ljmp
adc
sbb
je
sbb
sbb
dec
dec
dec
xor
add
nop
je
ja
call
ja
lock
call
inc
jne
std
arpl
lret
gs
shlb
xor
movsl
test
dec
outsb
mov
xlat
mov
sub
ret
js
mov
aas
mov
test
xchg
push
fsubrl
mov
xchg
scas
cld
or
sbb
jne
repnz
jecxz
or
aam
xchg
in
fcomp
cmc
insl
cmc
aas
ds
rcr
pop
jb
stos
outsb
xchg
test
inc
adc
cmp
mov
leave
daa
iret
xor
xchg
or
and
mov
and
imul
movsl
lods
mov
inc
sbb
or
aam
cmp
mov
adc
es
push
pop
mov
dec
jecxz
mov
mov
jno
xchg
pop
add
inc
daa
aam
sti
push
and
jb
inc
fwait
leave
inc
scas
rcrl
mov
push
jge
cwtl
ret
mov
xchg
ss
icebp
mov
mov
adc
gs
shll
cmp
out
xlat
or
xchg
lock
mov
sti
das
imul
popa
sub
pop
cmp
mov
imul
mov
ja
pop
repz
xor
enter
xchg
jb
xchg
decl
mov
sub
cmp
in
and
sahf
xor
js
shl
mov
or
mov
call
out
es
lret
cmp
mov
xor
pop
lret
outsb
jo
xchg
cmpsb
pop
sbb
or
shl
dec
dec
mov
xor
sbb
mov
xor
outsl
and
ficomps
xchg
rcrb
lret
lods
cmp
jl
hlt
fs
jnp
stos
lcall
int
jle
or
mov
ficompl
test
icebp
jnp
mov
cmp
jp
mov
out
fistpl
push
jecxz
jno
daa
scas
aad
jecxz
adc
sub
adc
insb
jns
pop
test
dec
pushf
ss
lcall
test
popf
in
movsb
mov
sbb
je
cmp
sub
rorb
sti
cmpsl
xchg
pusha
ffreep
cmpsb
xchg
cmpsb
into
scas
sub
pop
jle
mov
gs
mov
push
aad
and
or
or
push
cli
jbe
sbb
pop
fwait
mov
cmp
xchg
mov
add
mov
cmpsl
fsubl
push
jb
add
sbb
jmp
cmp
cmp
xchg
add
push
pop
xor
imul
clc
mov
les
sbb
xor
pop
dec
daa
fstps
jae
jmp
add
adc
sar
mov
in
sti
jl
cmp
adc
iret
movsl
das
pop
xchg
inc
cmc
adc
sub
mov
in
cmp
xchg
pop
sbb
insb
mov
stos
mov
out
xchg
sub
add
add
jbe
daa
repz
cmpxchg8b
outsl
insb
jo
lahf
sub
sbb
insl
cmp
push
mov
out
lcall
mov
jge
scas
pop
mov
jg
cli
jne
mov
mov
incb
inc
xchg
add
or
adcl
adc
xor
ja
inc
add
adc
loope
insl
mov
pop
mov
fldl
xchg
adc
adc
mov
mov
out
inc
int3
rorl
pushf
pop
addr16
loopne
and
inc
add
or
cmp
ret
and
cmc
and
pushf
bound
xor
mov
fstpl
jnp
push
andl
mov
push
inc
add
jnp
out
mov
stos
loopne
xlat
cmpsb
rcr
arpl
inc
xor
in
sti
iret
out
testb
inc
pushf
fwait
xor
cmpsl
sbb
ja
insb
ficoms
mov
ss
fadd
lods
mov
push
adc
fidivs
int3
mov
iret
sub
xor
outsl
mov
pop
subl
fidivrs
jp
adc
rcl
fwait
pop
fs
xchg
add
sub
rcrb
xor
mov
incb
fbld
cli
cmp
aad
mov
or
dec
xchg
rclb
mov
xor
and
stos
jg
xor
test
or
mov
popa
lea
jge
cwtl
popa
pop
mov
lds
add
out
lret
jle
jnp
cmp
sub
imul
emms
push
pop
sub
out
lcall
cltd
cwtl
xchg
mov
adc
pusha
push
aad
jecxz
sbb
cwtl
jl
int3
lahf
shll
sbb
shrl
pushf
mov
xor
ror
incl
test
hlt
orl
mov
pop
out
loopne
ljmp
sbb
or
mov
in
inc
ror
jae
mov
sbb
lods
je
dec
jno
out
call
add
pop
pusha
and
or
inc
inc
adc
and
add
and
dec
add
hlt
and
sub
js
jo
es
lds
shrb
inc
pop
cmovno
mov
fsubrs
mov
xchg
mov
jp
rcll
cmp
push
and
jns
in
sub
sti
es
inc
subl
test
mov
inc
cmpl
movsl
nop
push
mov
popf
fcomip
adc
lock
pop
es
fisttpll
or
negb
mov
jb
popf
xchg
sbb
js
cs
andl
sbb
das
fcmovnbe
mov
pop
add
clc
mov
lahf
fisubs
dec
adc
lret
jnp
pop
push
xchg
mov
jge
mov
movsb
jae
or
fiaddl
ret
xchg
jecxz,pt
into
adc
fs
sbb
loop
cmp
lcall
push
pop
mov
jmp
mov
int
add
push
mull
loop
push
add
scas
test
hlt
sub
xchg
mov
fistpl
call
dec
fisubl
and
int3
int3
mov
adc
aam
pop
cmpsl
adc
mov
push
addr16
adc
aam
lcall
xchg
fs
cmp
bound
cwtl
popf
scas
loop
mov
in
push
jb
cld
and
cmp
int
sahf
pop
sarb
jno
sarb
out
sbb
xchg
push
sub
lds
add
sbb
enter
mov
dec
mov
dec
cmc
sbb
mov
popa
out
dec
jmp
mov
js
nop
shl
dec
out
imul
or
icebp
stos
gs
push
cmp
outsl
or
sub
mov
int3
mov
aad
out
cltd
xor
jbe
loop
or
lret
jno
dec
jmp
and
xchg
jl
lods
push
pop
sub
jg
sub
cmp
jmp
pushf
cmpsb
sti
sbb
call
gs
pop
mov
cmp
jge
sarb
insb
nop
or
dec
push
xor
sub
jnp
aad
outsb
data16
lea
addr16
mov
pop
push
rcrb
jg
imul
insb
lahf
cmp
repnz
cmp
ss
add
pop
into
das
adc
sbb
int
add
insl
pop
xchg
sub
pop
pop
xchg
and
xorl
xchg
test
lret
and
andb
ljmp
xor
mov
pop
test
aas
jle
stos
add
sub
out
jo
addl
mov
jg
xor
movsb
adcl
out
test
dec
shll
sub
push
fsubrs
test
jmp
jne
mov
cmpsl
sub
in
insb
and
bound
std
cmp
adc
inc
pop
push
mov
mov
xchg
inc
sbb
xor
das
mov
and
daa
pop
movsl
orb
push
repz
mov
sub
std
cld
adc
leave
cmpsl
sarl
dec
outsl
test
mov
jns
test
jo
sahf
repnz
push
lods
inc
outsb
iret
popf
mov
call
mov
cld
scas
jle
mov
mov
popa
jmp
pop
xchg
mov
sub
out
repz
fldt
adc
push
xchg
mov
adc
adc
aas
xchg
mov
pop
scas
test
in
outsl
lds
fcoms
jo
sbb
pop
stos
ljmp
repz
mov
jle
jmp
fisttps
cmp
adc
mov
aam
jnp
adc
data16
ret
aam
psadbw
lods
call
mov
mov
in
xchg
mov
loope
xchg
out
add
lods
jg
stos
mov
fmulp
fcoml
out
xor
rcr
ret
stc
enter
push
add
ja
dec
inc
testl
add
insb
and
ljmp
test
pop
shrd
sbbb
std
push
add
stos
inc
push
shrb
mov
mov
pop
dec
lock
pushl
push
notb
outsb
das
stc
insl
jne
cltd
or
add
insl
loope
xchg
ror
stc
test
or
cs
push
pop
in
push
xor
cld
jle
dec
add
sbb
mov
int
mov
pop
cmc
jp
cmpsb
jb
fadds
ss
cli
lcall
jns
sbb
loope
sub
cmpsl
and
pop
jno
jbe
xor
sbb
imul
push
leave
mov
sahf
lock
loop
xor
repz
xchg
addr16
mov
mov
pop
inc
ret
int3
add
je
xchg
scas
loope
fildll
cmpb
jae
mov
push
testl
mov
in
pusha
xor
dec
push
mov
fisubl
ret
daa
scas
mov
sub
scas
and
xchg
ss
mov
stos
je
ret
push
adc
popf
pop
adc
test
cmpsl
imul
scas
lea
pop
sub
inc
xchg
or
jmp
xlat
lock
push
pusha
sub
ds
test
dec
mov
inc
popf
mov
jb
enter
mov
jb
sbb
dec
shll
loop
inc
movsb
std
out
js
sbb
cwtl
push
xor
xchg
stos
inc
sbb
push
pop
cmp
enter
or
out
push
or
mov
rolb
sbb
inc
jmp
out
in
les
call
dec
jne
xlat
pop
out
outsl
lret
addr16
iret
clc
ficoml
out
cld
ret
pop
dec
cmp
add
jge
inc
push
dec
sub
aam
fucomp
sbb
ret
mov
into
icebp
je
je
fcmovu
into
pop
push
call
mov
mov
outsb
sub
and
add
fstpl
shr
sarb
push
and
adc
in
lret
ja
jmp
push
lret
std
movsl
dec
inc
push
arpl
dec
xchg
int
jecxz
aaa
clc
pop
fildll
pop
xor
clc
loop
rcrb
bound
outsb
lahf
std
and
jp
imul
adc
add
inc
lret
xchg
inc
sti
daa
pop
cmpsb
dec
adc
stos
xor
mov
lods
add
test
addr16
jle
ret
and
shlb
xchg
psubw
or
push
aas
pusha
lds
shl
mov
test
and
hlt
and
decb
push
out
lret
dec
fsubs
shrl
loope
xor
out
xchg
repz
stos
jmp
adc
pop
xor
sub
scas
xchg
in
xor
push
data16
in
add
and
fdivrs
hlt
mov
dec
ljmp
pop
gs
fdivrp
lahf
fistps
imul
dec
sti
shl
js
es
insb
ret
bound
fwait
sbb
mov
fwait
push
pop
ss
or
push
add
pop
cli
gs
daa
xchg
in
outsl
mov
mov
inc
cld
mov
pop
lea
xor
jle
out
push
hlt
dec
dec
cmp
mov
xor
loopne
push
call
or
and
inc
les
mov
js
mov
sub
mov
or
sbb
xchg
movsb
lods
cmp
jbe
pop
out
call
add
xor
jg
iret
shlb
sar
dec
andb
outsl
pop
lcall
std
cmpl
les
lea
aam
sub
daa
clc
mov
xor
js
and
dec
add
leave
and
sub
adc
arpl
dec
or
mov
aas
out
mov
outsb
iret
pop
cltd
xor
xchg
xor
std
jbe
sbb
in
lcall
jo
test
sub
aad
mov
xor
pop
mov
sub
sub
xchg
xor
movsl
mov
dec
mov
andb
jae
imul
in
ds
mov
sub
test
jns
mov
mov
xchg
gs
rep
mov
xlat
pusha
dec
pop
jp
in
add
adcb
jmp
xchg
test
pushf
push
mov
popf
sub
fiadds
addr16
inc
loop
pop
rcr
cld
enter
movsl
sbb
into
mov
mov
sbb
jp
ret
sbb
lret
je
nop
sub
fwait
lock
ss
add
push
out
pop
and
fsubl
pop
pop
inc
inc
mov
in
and
dec
cmp
movsl
cmp
loop
dec
sahf
pop
mov
test
pop
sub
das
cmp
push
add
cmp
push
aas
push
loop
mov
dec
aad
fsubrl
stc
clc
xor
loopne
xchg
aad
cmc
in
je
enter
pop
dec
call
pop
fldcw
cmp
mov
out
mov
cmpsb
and
call
jno
jno
sub
mov
mov
popa
orb
push
loopne
xor
and
iret
mov
push
add
out
popf
add
ss
adc
jns
outsl
insb
cltd
imul
inc
stos
fs
loopne
mov
fs
or
pop
shll
and
mov
and
aam
dec
push
lea
ds
dec
int
sbb
sti
pusha
adc
cld
mov
insl
repnz
mov
decb
popf
dec
or
jg
mov
dec
stos
daa
mov
pop
jae
popa
sub
jl
psubusb
push
pop
gs
out
test
dec
add
stos
test
shl
mov
addr16
daa
stos
mov
push
mov
jnp
enter
sbb
enter
or
outsl
movsl
in
scas
repz
mov
rclb
lahf
sub
jbe
mov
mov
hlt
mov
mov
or
mov
adc
pop
repz
mov
sbb
push
mov
daa
leave
clc
cmp
push
push
inc
xchg
jle
mov
or
sub
dec
imul
popa
xor
and
jbe
loope
mov
sahf
call
in
push
mov
inc
test
jnp
xor
dec
cltd
dec
mov
pop
mov
sti
jmp
sbb
cmp
push
bndstx
jns
scas
jl
cwtl
popf
push
xchg
cmc
je
cmpl
mov
pop
call
jae
push
mov
mov
shl
jae
cs
sub
iret
fucomip
jmp
mov
xchg
test
add
xor
mov
ds
sahf
cmp
or
mov
stc
push
sbb
add
sbb
push
gs
in
icebp
sbb
xchg
mov
mov
pop
in
xor
movd
out
loop
into
jne
pop
iret
test
lret
loopne
mov
inc
ja
lret
nop
dec
adc
imul
lods
pushl
jle
dec
mov
shlb
lcall
aam
lock
scas
loope
xchg
xchg
mov
sti
jle
sub
rclb
das
mov
loope
xchg
and
cs
adc
repnz
jbe
xchg
pop
lcall
jmp
popa
xlat
dec
jle
mov
repz
ljmp
pop
in
xchg
pop
jecxz
loopne
lahf
movl
sbb
jnp
and
lods
dec
out
mov
xchg
jno
mov
cmp
and
cmp
ret
mov
repnz
sbb
xor
loop
js
xchg
xor
cld
ja
mov
cmp
push
fwait
loop
mov
mov
inc
jle
rorl
imul
rcrl
cmp
aaa
les
push
add
push
int3
pop
ret
loop
inc
iret
pop
iret
call
loop
lahf
push
shll
mov
lcall
xor
gs
js
jns
fsubl
sub
adc
mov
or
in
ret
jns
cmp
popf
in
dec
mov
add
inc
iret
stos
cmp
andb
pop
pop
dec
outsl
push
jae
lea
cld
stos
and
shlb
or
mov
mov
cmpsl
scas
shll
mov
aas
mov
add
in
mov
add
xchg
mov
cs
cltd
and
cmpsb
cmp
mov
lods
pop
pop
pushf
repz
mov
dec
movsb
xlat
mov
fldenv
stc
mov
shl
sub
popa
je
pop
scas
test
subb
and
and
movsl
xchg
sub
stos
js
cmp
push
leave
aas
push
fldenv
inc
pop
jae
movsl
clc
std
lret
mov
cmc
jnp
mov
jne
fidivrl
inc
xchg
insb
push
mov
mov
sbb
dec
pop
xor
xchg
aam
cld
mov
mov
pop
leavew
in
mov
jmp
enter
testl
cmpsb
addl
push
xchg
mov
mov
fs
jmp
js
sub
test
cld
sti
test
mov
pop
inc
ret
sbb
mov
jns
jae
shll
dec
out
add
mov
jl
hlt
mov
sti
mov
test
mov
cmp
ljmp
lods
outsb
add
movsl
into
in
jo
repz
insl
xchg
pop
cmpl
inc
jnp
sbb
push
int
arpl
xor
lahf
shlb
mov
pop
and
vrcpps
cmp
subl
arpl
dec
xor
lods
outsl
xlat
xchg
or
jno
cmp
xchg
inc
mov
adc
icebp
dec
lods
mov
dec
jne
xchg
mov
or
mov
cmpsl
add
xor
mov
enter
daa
pop
pop
pop
ficoml
insb
testb
lods
stc
outsb
js
pop
pop
lret
jne
call
addr16
dec
stc
fnstsw
not
pop
cmp
inc
ret
fcomps
mov
add
sbb
or
enter
add
shrl
mov
sub
xor
adc
lock
lea
push
shl
inc
sahf
call
push
sbb
aam
add
inc
inc
mov
subl
lea
rolb
les
jbe
shlb
dec
or
pusha
test
outsb
jno
sti
inc
and
dec
sbb
or
push
lret
pop
loop
aas
mov
inc
shlb
adc
out
sub
in
mov
shlb
lret
jle
jg
dec
sub
cmp
scas
fwait
mov
int
and
and
cmp
xor
incl
mov
pushf
mov
jp
lock
mov
and
cld
cli
bound
pop
cmp
int3
out
jecxz
ja
mov
lock
fidivs
cmp
fmull
sti
mov
arpl
xor
push
cmp
inc
out
out
mov
push
jge
and
xor
das
rorb
pop
add
jae
xor
dec
insl
push
mov
mov
mov
and
mov
sti
mov
fadd
sub
popa
or
adc
cli
in
loopne
iret
popf
dec
push
xlat
out
popf
scas
jb
sbb
es
scas
push
cmpl
xchg
arpl
mov
xchg
fwait
gs
xor
inc
sub
jecxz
or
or
lods
mov
jne
xchg
inc
adc
aas
pop
adc
out
inc
rcr
mov
pop
leave
out
dec
sub
fnsave
or
pop
and
jge
in
cmp
aam
adc
adc
jno
mov
xchg
rcl
xor
xlat
xlat
jp
jle
shl
popf
xor
inc
call
and
xchg
push
or
iret
aad
dec
mov
xchg
jno
adc
inc
dec
sarb
loopne
test
mov
cwtl
xchg
xchg
scas
ret
jl
sahf
outsl
stos
loopne
adc
repz
inc
mov
imul
fildll
push
mov
call
fscale
or
push
repnz
imul
sub
jle
mov
sbb
idivl
jbe
insb
pop
fsubl
cmp
inc
push
cltd
pop
or
jle
xchg
push
call
mov
outsl
lret
pusha
and
cld
mov
adc
imull
jns
imul
cltd
in
lret
dec
sbb
shll
sub
mov
lret
test
addl
xchg
jbe
cmp
ljmp
aaa
push
cmp
adcl
fs
inc
xor
aas
cwtl
mov
sbb
push
cmpsl
add
mov
iret
push
imul
inc
int
mov
test
ds
rol
sub
addb
push
push
ja
addb
adc
sbb
stos
push
jbe
add
sbb
rolb
and
fs
cmp
pushf
test
lahf
scas
xchg
stc
sbb
pop
sub
mov
mov
cwtl
les
jmp
sbb
out
test
es
add
inc
mov
pop
add
adc
loope
or
daa
das
sub
aam
or
fs
adc
inc
mov
aaa
mov
enter
inc
cmp
push
cltd
mov
sub
adc
sub
xchg
adc
ss
loop
imul
shrl
lcall
stos
jg
sbb
xchg
pop
mov
leave
mov
push
lds
mov
popa
scas
dec
je
push
mov
test
lds
xor
stc
cmp
inc
xorb
lcall
das
lock
sbb
stos
sbb
testb
jg
stos
dec
stc
pop
sbb
mov
fldt
lock
pop
jp
ds
scas
lods
dec
lods
in
adc
fdiv
mov
xor
jnp
inc
mov
pusha
fwait
pop
jl
push
jbe
add
movsb
mov
jge
pop
cmc
stos
ja
pop
push
inc
inc
subb
xlat
and
push
or
sbb
fildl
cmp
int3
mov
les
jge
dec
int
int
add
mov
add
sub
add
dec
inc
and
xor
stc
repz
cmpl
nop
jbe
pop
outsb
jnp
sub
lret
add
sub
add
xor
or
add
adc
jmp
sbb
fimuls
insl
mov
xor
in
es
aaa
popf
outsl
leave
imul
lahf
mov
add
test
add
cmpsb
mov
or
sub
mov
ljmp
fistpl
aam
dec
gs
sbb
xchg
arpl
push
cmp
pushf
mov
fisttpl
pop
fadds
rcrb
sbb
cmp
nop
mov
mov
popf
pop
nop
mov
or
sbb
inc
aam
cltd
pop
mov
mov
hlt
add
dec
add
xor
jmp
movl
mov
data16
xchg
in
and
sbb
mov
out
and
pop
xor
pusha
jp
test
mov
inc
push
sub
xchg
cltd
popa
test
lock
mov
mov
fwait
test
outsb
stc
xlat
push
push
mov
mov
mov
cltd
and
ja
outsb
cli
mov
ss
loop
gs
lods
test
cld
out
xchg
sub
push
lods
cwtl
push
pop
inc
sub
bound
xor
cmp
mov
iret
loop
xchg
sub
repnz
pop
adc
andl
sahf
stos
scas
mov
cmp
hlt
mov
pusha
jbe
out
pop
jne
dec
push
cld
fucomip
inc
dec
loop
loope
pop
ds
leave
js
adc
mov
ljmp
sub
adc
mov
push
sbbl
mov
addr16
ljmp
call
push
insb
jmp
or
mov
fwait
ja
cmpsl
pusha
cli
data16
or
inc
jae
mov
inc
mov
sbb
dec
fdivrl
repz
jl
jecxz
shlb
inc
ffree
pushf
sub
xchg
mov
add
fmulp
jno
cmp
roll
shrb
jns
dec
sbb
inc
xchg
ret
repnz
or
mov
je
pop
sub
add
adc
xor
stos
cmp
jae
lods
ja
jo
mov
shrb
or
xchg
sarl
aaa
and
repz
test
scas
ja
repz
dec
sub
xlat
inc
popf
mov
test
cmp
xor
mov
mov
imul
stos
scas
in
mov
or
add
mov
mov
mov
sub
stos
int3
lods
pusha
and
lret
fbld
sub
testl
cmpsb
mov
push
pop
xchg
mov
aam
jmp
fisubrs
jmp
pop
adc
sti
rorl
int
pop
data16
scas
push
aad
cmpsb
jnp
jl
xor
mov
icebp
divl
aas
jle
mov
ljmp
add
pop
push
dec
xor
loope
nop
jns
cmp
push
js
pop
pop
pop
sub
lods
fwait
decl
ss
leave
xchg
rorl
stos
pop
xor
test
mov
roll
dec
ljmp
xor
out
mov
mov
js
cltd
mov
xchg
add
xchg
xchg
sub
scas
lods
stos
mov
arpl
outsl
sbb
int
pop
adc
pop
fs
movsb
and
xchg
ror
clc
pusha
int3
lret
and
es
movsl
icebp
mov
mov
ss
loope
mov
repz
jle
dec
jge
mov
arpl
cwtl
dec
pop
jns
lcall
mov
xchg
icebp
mov
and
push
jbe
insl
dec
gs
lret
push
mov
ss
outsl
test
imul
sti
scas
xchg
adc
out
cmp
pop
mov
sub
adc
out
dec
in
jne
or
mov
stos
leave
cwtl
in
cs
cmpsb
fldenv
mov
imul
flds
fs
fsts
sub
int3
rcl
dec
lds
mov
cli
and
jg
push
movsl
mov
jge
std
int
shrl
jnp
push
push
xor
xchg
xchg
cmp
or
mov
mov
pop
lods
push
push
xor
jg
dec
mov
popf
or
cmp
jmp
cmp
mov
or
lret
lock
pop
pop
jo
mov
sbb
adc
xlat
add
ds
xor
dec
jmp
inc
adc
jno
cld
jns
mov
test
dec
je
sbb
insl
loop
fstl
dec
loopne
xor
lods
cmp
fs
or
push
inc
cltd
cli
jb
nop
dec
adc
or
jns
adc
xchg
jns
daa
add
cli
enter
bound
ret
gs
cmp
cmp
dec
out
inc
enter
lret
mov
push
adc
in
sbb
sarb
dec
add
movsb
shll
icebp
into
cltd
and
call
scas
add
in
xor
fldl
or
call
rcrb
pop
dec
fidivl
jg
test
jne
adc
dec
adc
fcmovne
and
arpl
bnd
std
faddp
testl
mov
push
imul
jp
fisubl
popa
or
hlt
sbb
mul
push
mov
push
mov
jne
js
cwtl
nop
dec
mov
aaa
aad
xlat
ret
adc
xchg
xchg
enter
ja
nop
mov
sub
data16
xchg
ljmp
sarl
lods
jge
mov
lods
inc
lcall
mov
inc
mov
xor
addr16
icebp
int
loope
outsl
aas
dec
loopne
add
fsubs
dec
sub
js
mov
jae
mov
fwait
ja
mov
dec
out
aad
mov
sub
jle
in
pop
cmp
outsb
je
fstl
repz
mov
subl
rcrb
mov
sbb
lcall
inc
jbe
into
pop
and
cld
jmp
sub
movsl
test
call
dec
push
cmovge
out
mov
js
fcoml
sbb
shll
pop
adc
out
sub
push
out
ljmp
sti
fstpt
fisttps
cmp
fldl
adc
mov
mov
or
out
adc
dec
mov
das
lods
ja
lret
lea
jmp
push
cmp
fadds
in
pop
imul
cld
loopne
test
push
mov
ss
xor
adc
push
test
sub
dec
cmp
sbb
cmp
popf
xor
dec
pop
aad
adc
popf
sub
scas
ret
test
out
mov
in
movsl
sbb
lods
mov
sahf
dec
sti
pushf
sbb
mov
repnz
mov
pop
iret
mov
inc
jbe
push
xor
sbbb
test
push
mov
adc
sub
rcrl
and
aad
mov
add
int3
push
ja
mov
lea
inc
fidivrs
shll
aam
cwtl
sub
sahf
in
in
and
lcall
mov
les
cli
push
mov
ss
cmp
lcall
jo
and
adc
xchg
into
cld
mov
hlt
xchg
faddl
pop
std
divl
dec
cs
loop
adc
stc
cmp
out
inc
mov
addr16
sub
dec
and
fwait
mov
push
mov
adc
into
adc
mov
lahf
adc
jno
std
js
sbb
clc
aad
sub
test
or
enter
sbb
jmp
inc
sbb
enter
inc
mov
insb
push
inc
cmpsl
out
repnz
ja
dec
scas
aas
enter
mov
mov
add
mov
aam
dec
fsts
scas
add
inc
scas
and
inc
outsl
mov
and
and
xchg
xchg
or
imul
xchg
jg
lock
mov
imul
xchg
mov
ljmp
hlt
cwtl
dec
std
out
mov
pop
xor
shl
adc
incb
mov
movsb
mov
mov
sbb
push
xor
dec
daa
lods
pop
insb
xchg
sbb
dec
inc
jae
sti
adc
shl
out
adc
mov
inc
jae
xor
subb
loopne
iret
mov
xchg
hlt
or
call
adc
sub
inc
xchg
test
and
movsl
hlt
outsl
jg
int3
rcl
cmpsl
fwait
das
jb
mov
pop
pop
jle
xor
lcall
add
inc
mov
jns
cld
lahf
inc
dec
add
sbb
ja
pop
add
mov
jge
ja
mov
xchg
lahf
lret
sbb
adc
lods
repnz
mov
pop
shr
ficoml
cmpsl
nop
dec
es
adc
aad
dec
dec
subb
mov
fucomip
in
aas
les
rcrb
push
pop
loopne
cmpsl
insl
out
insl
xor
daa
dec
or
movsl
cmpsb
jg
xchg
out
lahf
adc
adc
loope
xchg
mov
mov
lret
rcl
inc
lods
ficompl
jo
xor
xchg
pop
dec
outsl
pop
jp
sbb
ljmp
and
lret
fwait
jno
into
xchg
xchg
inc
xchg
test
mov
gs
xchg
jnp
frstor
test
cmp
sub
in
jbe
mov
xchg
ja
pop
fdivl
into
int
icebp
into
pop
daa
lea
sbb
jle
cmp
dec
bnd
mov
lock
jg
movsl
inc
push
fsubrl
jae
cltd
and
mov
push
in
sahf
and
dec
adc
xchg
lods
mov
cld
stc
shrl
push
outsb
add
loop
sbb
xchg
mov
dec
xchg
jecxz
mov
cmc
xor
lret
loop
adc
jg
clc
ljmp
and
add
std
mov
and
cmp
sub
mov
fsubl
adc
stc
xchg
insb
xor
dec
bts
xchg
inc
daa
or
jae
jne
xchg
loop
and
mov
fisttpl
js
bound
xor
jp
cs
xchg
in
leave
add
leave
push
cmp
and
arpl
sbb
push
adc
call
je
dec
mov
std
iret
mov
sbb
call
lds
mov
xor
xchg
mov
ljmp
imulb
and
push
jnp
mov
ja
sub
stc
cmpsl
movsl
push
lahf
mov
fimuls
pop
adc
jno
shlb
pop
sbb
pop
xor
lods
and
and
ficoms
in
mov
inc
ficompl
inc
push
sbb
xchg
cltd
mov
dec
cmp
mulb
stos
aam
mov
lret
out
out
bound
mov
addl
mov
in
push
mov
aad
inc
push
test
mov
and
push
test
mov
push
pop
std
jo
int
rorb
jnp
jmp
mov
loop
int
push
push
sub
pop
ljmp
push
xlat
stos
or
xchg
cli
arpl
jne
mov
and
jnp
push
je
sbb
pop
scas
jnp
shrb
repnz
jl
mov
js
lea
dec
iret
mov
imul
or
fisttpl
rorl
add
push
fs
std
jo
sti
mov
add
lds
lea
cmp
outsb
sub
movhps
outsl
jne
lds
cli
inc
in
lcall
push
ret
fisttpl
ret
jbe
movsb
inc
xor
sub
orb
cli
outsb
sub
insb
cltd
hlt
mov
and
cmpsb
mov
test
out
or
vmovhps
mov
cwtl
or
pusha
jne
aad
js
adc
push
mov
fisttpll
es
push
ja
rclb
addl
xor
mov
orb
adc
mov
mov
gs
sahf
test
fldl
inc
xchg
xchg
test
cmpsl
jb
fdivrs
adc
call
je
stos
fistps
pop
int3
iret
mov
mov
mov
pop
pop
jmp
and
ja
mov
mov
mov
lods
or
jmp
aam
dec
mov
push
bound
add
adc
loope
adc
or
repz
adc
sbb
push
leave
mov
sbb
cmpsl
es
dec
dec
cltd
inc
fcmove
add
stos
int3
xor
mov
fcmovne
xchg
loop
adc
xor
int
mov
sub
in
jmp
mov
lret
pushf
setl
xchg
stos
adc
test
pop
sahf
sbb
dec
ret
dec
sbb
xor
add
jl
hlt
xchg
cmpsb
sbb
dec
inc
jbe
push
mov
sbb
out
pop
ret
pop
popa
out
cmc
sbb
mov
xor
dec
fisubrs
add
push
in
aad
fcmovnb
popf
gs
xor
addr16
imul
sarl
loope
into
jp
xor
int3
mov
dec
jne
mov
xor
xchg
jbe
scas
xchg
lret
push
test
aad
push
adc
jb
inc
push
pop
mov
xchg
sti
and
cmp
mov
mov
mov
in
fisttps
add
mov
ret
jbe
jp
push
icebp
cmc
xor
pop
repnz
cmp
add
arpl
loopne
fsubs
sbb
inc
fimuls
rolb
jnp
sbb
outsl
cld
repz
into
shl
fsub
push
in
cmp
cmp
mov
out
lock
sti
pop
push
or
inc
pop
std
add
insl
fxam
add
mov
push
mov
fs
mov
mov
xchg
adc
pop
cmp
xlat
cld
je
shlb
mov
lock
xchg
pop
sbb
xor
lret
push
sub
xor
jmp
loopne
dec
popa
xchg
sub
mov
pop
imul
ja
mov
xchg
pop
mov
xor
sbb
insl
movsb
outsl
adc
out
adc
mov
pop
jbe
cld
inc
jl
scas
and
cmp
insl
sub
cltd
imul
mov
lahf
ljmp
push
xor
sub
out
sub
inc
xor
lock
hlt
imul
incl
aam
cs
je
adc
jns
into
lea
hlt
dec
push
pop
mov
pusha
pusha
cmpsl
scas
and
push
idivl
add
xor
and
jge
sub
sbb
dec
repz
xchg
sbb
rcrl
lahf
out
ljmp
add
mov
mov
bound
sub
mov
test
je
mov
popf
dec
or
push
and
nop
gs
popf
dec
xchg
call
lahf
cli
in
cld
mov
rolb
rcl
lea
add
nop
ja
ja
cmp
fsubl
pop
ja
cmp
and
push
dec
xor
in
shll
push
jnp
outsb
push
xchg
push
push
insl
test
or
push
inc
inc
loope
lcall
jae
mov
gs
insl
cmp
xor
push
stos
mov
lea
cmpsb
fcmovu
pop
out
lret
inc
lds
cwtl
movsl
pop
jmp
psrlw
push
js
pushf
lcall
movswl
sti
inc
and
dec
icebp
fdivl
pop
inc
dec
dec
inc
add
mov
pushf
pop
jae
cmpsl
pusha
push
mov
and
vmovq
sbb
inc
lret
test
adc
fsubl
bound
inc
dec
ficomps
iret
add
sbb
adc
mov
cwtl
cmc
dec
repz
pop
mov
mov
nop
out
outsl
jne
or
jnp
xlat
fistpll
xor
mov
ret
subl
xchg
ljmp
xchg
push
gs
jle
dec
xchg
sub
and
push
testl
inc
arpl
ss
imul
sbb
ror
fnstsw
dec
rclb
push
xor
in
int
data16
fidivl
and
mov
pushf
jecxz
cld
xor
adc
in
adc
aad
or
pop
scas
addr16
ss
clc
dec
mov
push
and
data16
mov
dec
jne
cmpsb
test
addr16
sbb
int
xor
xor
jnp
in
inc
jge
sbb
loop
out
cmp
movsl
out
sub
mov
nop
sbb
jecxz
adc
mov
divb
sbb
xchg
or
dec
fwait
pop
ret
lret
pop
inc
sbb
push
cmp
sbb
and
inc
dec
mov
fcomi
and
loope
xchg
rcl
jne
js
in
push
push
imul
or
fs
adc
leave
pusha
pop
int3
adc
push
cmp
jp
aas
jle
in
sahf
sarb
sarl
lds
pop
pop
add
or
xor
sub
loop
sar
or
fsts
add
mov
xor
cltd
xchg
arpl
repnz
add
adc
out
jecxz
sbb
jg
gs
pop
roll
and
pushf
in
das
std
ljmp
xchg
push
and
pop
jp
sbb
addl
fcmovnu
rolb
xor
pushf
leave
aas
cmp
out
cli
mov
icebp
mov
pop
inc
add
xchg
pushf
and
push
xchg
jo
jg
fwait
es
push
dec
add
pop
test
mov
fsub
fdivs
jecxz
sbb
sbb
inc
inc
pop
sub
mov
dec
arpl
mov
adc
adc
or
nopl
jmp
jge
rclb
push
sub
jmp
sbb
xor
sub
sbb
cs
ret
sub
sbbl
imul
hlt
adc
mov
mov
int3
inc
idivb
xor
scas
aas
adc
cmpb
or
adc
outsl
push
das
mov
pop
shrb
mov
lcall
push
jbe
int
add
lods
arpl
or
dec
dec
xor
mov
and
rorl
in
test
push
xchg
loope
inc
stos
outsb
movsl
push
fidivrl
adc
and
dec
mov
and
inc
push
dec
das
aam
adc
pop
sbb
pop
sbb
daa
aaa
mov
mov
pop
jl
pop
jnp
test
sub
add
test
ss
flds
rcr
sbb
jecxz
sbb
repz
push
out
in
sbb
inc
subb
or
dec
lahf
xchg
add
jae
mov
dec
push
lock
out
mul
jnp
sub
fidivrs
xchg
inc
fisttps
jbe
dec
mov
fwait
jnp
mov
inc
dec
lahf
xor
add
add
adc
lahf
fcomp
in
dec
test
mov
adc
add
adc
fcompl
aam
int
push
push
ss
sbb
notb
popf
xchg
fwait
cs
scas
mov
dec
mov
push
pop
xchg
aaa
outsb
mov
test
stos
push
sub
cmp
shll
jmp
loopne
dec
inc
leave
jmp
mov
div
jo
movsb
push
or
xchg
jl
in
mov
mov
sti
aam
out
push
dec
stc
adc
push
lret
xchg
or
dec
xor
in
jl
push
int
cmp
add
lret
jbe
push
dec
insl
dec
xor
fcmovu
inc
aam
negb
jle
repz
jnp
mov
lret
jmp
aaa
lret
dec
sub
mov
aad
lcall
test
sbb
scas
jecxz
adcl
jle
shr
mov
test
shrb
jmp
adc
std
insl
dec
imul
dec
nop
arpl
dec
mov
dec
ds
mov
sti
fcom
inc
xchg
mov
dec
mov
rolb
into
aam
add
push
loope
adc
inc
push
inc
push
fwait
lods
aaa
jo
lea
mov
push
cmp
cmc
arpl
cs
hlt
loopne
sbb
xor
dec
pop
pop
pop
lods
sbb
mov
cli
pop
inc
xchg
push
movsb
lea
mov
movsb
das
stos
into
aad
mov
dec
mov
in
pop
inc
xchg
and
xchg
in
popa
fdiv
pop
jg
dec
mov
lret
or
pop
sub
ja
push
or
inc
sbb
pop
ds
jecxz
mov
push
popa
fisubrl
out
cmc
dec
out
bound
mov
or
mov
repz
ds
xchg
push
dec
ret
mov
xor
je
pop
xor
mov
bswap
mov
xchg
cli
sbb
push
push
gs
ret
mov
lods
jae
cmp
sbb
stos
sbb
fnstcw
mull
push
loope
add
dec
jmp
push
push
xabort
xlat
rclb
adc
pop
iret
in
sbb
icebp
lret
or
pop
mov
rcrb
fdivr
rol
test
or
jo
sbb
xor
insl
pop
jno
mov
imul
addl
dec
fsubrs
in
sti
sbb
icebp
imul
fisubs
out
xchg
sti
leave
adc
or
mov
jl
jo
inc
jmp
jb
gs
cmp
push
mov
dec
mov
mov
fistpll
push
sub
add
jne
aad
cmp
jno
les
sub
pop
pusha
aas
in
push
orb
movsl
out
repnz
cmpsb
syscall
and
mov
out
xor
aam
add
pushf
sub
mov
pop
scas
aas
into
movsb
push
andl
cltd
xchg
leave
sub
cli
mov
cmpsb
cmp
mov
pusha
fs
mov
lock
or
xchg
nop
adc
mov
pushf
lock
fstpt
addl
sub
dec
rol
sti
sub
mov
fbstp
addr16
ljmp
xchg
arpl
clc
notl
pop
and
adc
and
jecxz
or
repz
rclb
push
aad
jecxz
ret
add
out
dec
adc
pop
adc
cltd
cmpsl
fwait
testb
aaa
test
push
sub
mov
cld
test
add
mov
add
mov
inc
adc
adc
dec
jb
hlt
dec
push
pop
pop
and
or
js
dec
ja
lds
idivl
sbb
cmp
add
add
pop
jns
ljmp
jb
ljmp
cvtps2pd
sti
lret
mov
je
jp
add
loop
mov
neg
xchg
mov
sub
mov
fs
fwait
pop
inc
and
insl
xlat
cmp
mov
jecxz
mov
cmp
pop
and
neg
mov
push
in
inc
inc
mov
popa
xor
pushf
xchg
sbb
jb
mov
push
jecxz
jp
jl
in
cwtl
lods
jno
cli
pop
mov
cmp
and
xor
bound
xchg
arpl
out
jl
jle
xor
cmp
movsb
jo
lea
mov
sbb
filds
xor
arpl
mov
jno
pop
pushf
ljmp
and
out
cmpsb
in
iret
adc
push
jge
cld
jmp
flds
sbb
out
mov
mov
cmp
ja
test
aaa
jae
int3
out
mov
in
jnp
cmp
push
inc
loop
cmpsb
dec
scas
cmc
psllq
and
dec
xchg
nop
jmp
fcomip
adc
nop
xor
sub
lahf
sahf
aaa
rcll
add
jne
xchg
outsl
push
ret
sub
fsub
xor
out
lock
jl
cmp
lock
les
loope
mov
sub
add
shlb
std
or
jp
pop
cmp
scas
cmpsl
mov
pushf
fs
cmc
scas
xor
mov
rol
andb
xor
dec
mov
push
movb
rclb
xchg
rorl
sbb
xorl
add
repnz
outsl
loopne
mov
pop
stos
loop
repnz
xor
jnp
push
cmp
subb
mov
into
rcrl
jnp
data16
jmp
xor
aad
push
imul
loopne
xor
sbb
fwait
rclb
sahf
in
ja
push
dec
lret
dec
jo
mov
sub
fcoml
inc
insb
mov
mov
cmp
insl
aas
sbb
cs
faddl
loopne
xrelease
inc
add
mov
rorb
lock
loopne
pop
ret
pop
xor
pushf
dec
pushf
inc
fldt
repz
pop
fdivl
out
nop
rolb
mov
andb
lcall
add
icebp
xorb
loopne
lock
mov
mov
cmp
xchg
cld
ljmp
dec
or
and
arpl
loopne
dec
mov
fistpl
jmp
mov
clc
pushf
pushf
popa
pushl
gs
or
push
pop
movsl
add
loop
or
outsl
call
adc
dec
test
out
cld
dec
cmp
in
sbb
negl
repz
xchg
aas
adc
daa
mov
loope
addl
mov
cmp
popf
enter
or
aaa
pusha
adc
into
mov
mov
sbb
xchg
xchg
lret
cli
mov
insl
fs
push
or
cmpsb
sub
cmp
and
pop
das
or
iret
mov
in
sub
inc
xor
sti
enter
dec
enter
insl
push
loop
stos
out
cmp
psrad
pop
cmovl
fnsave
and
sub
out
pop
stc
sti
repz
int
int
adc
iret
cmpb
shlb
sub
sahf
and
adc
in
pop
dec
mov
push
mov
lds
in
je
out
jae
xchg
push
fs
inc
push
popf
out
sub
jl
incb
and
dec
mov
fucom
inc
add
xor
out
shrb
pop
xor
aad
cs
and
js
pop
int3
icebp
cmpl
stos
jno
push
fadd
cmp
pop
and
mov
iret
insb
mov
lcall
loop
xchg
push
mov
xchg
adc
xor
addr16
pusha
cld
aaa
loopne
push
mov
clc
xchg
ljmp
sbb
int
mov
aad
lods
pop
adc
std
or
testl
mov
clc
mov
push
cwtl
cs
mov
ret
dec
cmpsb
imul
pushf
inc
das
push
mov
mov
mov
int
mov
daa
add
xchg
pop
movsl
lods
mov
or
mov
shll
jecxz
jbe
and
dec
jbe
dec
loop
out
mov
and
in
or
adc
jne
cmp
and
xchg
ret
repnz
vpshaw
scas
stos
test
jo
sbb
or
dec
push
xor
and
fmuls
xchg
enter
unpcklps
xchg
jbe
in
mov
inc
clc
cmp
dec
sub
jae
clc
fldl
or
inc
fnstenv
sahf
push
pusha
test
das
fwait
push
mov
stos
ret
or
imul
das
lcall
into
lods
mov
add
xor
jae
in
insb
xlat
adc
add
and
add
std
mov
cmpsb
adc
push
or
jmp
nop
das
inc
out
sbb
imul
ja
dec
aad
cmpsb
jecxz
push
aaa
mov
loopne
inc
mov
test
roll
aas
neg
jl
fcoms
dec
andl
ljmp
dec
dec
push
cmc
mov
mov
jno
pop
push
mov
adc
aad
sub
dec
inc
mov
js
out
mov
xor
pop
pop
lods
and
movsb
pop
cmp
aad
push
pop
arpl
outsl
cwtl
popa
fildl
push
mov
inc
cmpsl
gs
and
loope
xchg
imul
jle
xor
movsb
pop
or
and
imul
mov
ds
js
xchg
leave
pushf
dec
scas
lret
sub
into
es
mov
ret
push
mov
fildll
mov
ljmp
cmpsb
add
pop
xlat
pop
inc
xchg
mull
js
movsl
ret
cmp
sbb
lahf
sub
or
cmp
push
sbbb
test
fucomi
sub
sahf
ja
pop
mov
subb
add
ret
jle
push
mov
or
mov
sbbb
cltd
push
dec
ds
jmp
call
lea
cli
sub
mov
push
ret
sub
movsl
jb
test
cmp
add
pushf
or
jp
and
mov
fsts
cmpsl
inc
jle
pop
push
and
or
iret
out
push
repz
je
xchg
xor
adc
dec
push
xor
adc
mov
notb
push
das
push
imul
cmc
mov
loopne
xchg
mov
pop
xor
cmpsb
xor
cwtl
sub
outsb
sti
negl
dec
repz
push
gs
idivl
cli
jae
fsubl
loope
push
xlat
push
pop
mov
xchg
into
dec
pop
jg
add
mov
adc
add
add
or
aad
push
test
jb
xor
lea
out
outsb
xor
rolb
scas
popa
jb
mov
sub
cmpsl
push
xchg
sbb
fsts
in
adcl
icebp
ss
push
mov
pop
sub
push
sbb
repnz
sbb
mov
fisttpl
or
and
sbbl
loop
push
addl
push
stos
dec
arpl
adc
sahf
fdivr
hlt
pop
imulb
cltd
repz
call
push
fnsave
mov
movsl
or
cwtl
adc
jl
inc
scas
fwait
pop
inc
dec
mov
cld
xchg
mov
sub
mov
mov
xlat
out
idivb
scas
dec
jne
mov
out
leave
clc
push
sub
loop
sar
sub
in
jp
pop
arpl
jmp
data16
xor
in
inc
and
je
lods
es
mov
test
pop
or
test
gs
pusha
or
sub
xchg
inc
lods
lods
mov
and
aaa
jb
mov
mov
mov
mov
das
mov
mov
imul
mov
out
lea
or
and
push
pop
lock
inc
push
fmulp
pusha
rcr
xchg
or
movsl
push
lea
inc
jmp
in
imul
lods
aam
sub
jno,pt
jb
xor
fs
xor
jp
ss
xchg
xor
cmp
dec
jle
ficoms
jp
pop
std
push
lods
push
shlb
jnp
jl
xor
mov
ror
dec
jp
into
fs
inc
shrb
dec
push
imul
xchg
xchg
pop
dec
lea
insl
mov
into
imul
xor
int
cmp
popf
sub
out
cltd
jbe,pn
mov
outsb
cmp
cmp
xor
les
and
adc
gs
or
push
inc
mov
subb
mov
aas
push
adc
xor
sbb
mov
cmp
dec
loopne
sbb
and
sbb
iret
inc
push
cmp
and
mov
ljmp
dec
sahf
jnp
cmp
and
ret
pop
clc
mov
mov
jae
mov
rcrl
movsb
dec
add
ljmp
ss
cmp
and
mov
bound
subb
dec
add
xor
inc
out
ret
outsl
sbbb
push
scas
dec
cmp
mov
repnz
adc
cmp
fisubl
jmp
push
mov
bound
inc
mov
lea
repz
mov
inc
icebp
frstor
out
mov
loopne
daa
mov
or
sub
xor
sbb
xchg
inc
xor
dec
int
push
js
aas
repz
push
iret
mov
pop
mov
jb
or
inc
ret
das
addb
imul
punpckhwd
mov
mov
insb
mov
subl
push
cs
out
xchg
or
or
loop
and
stos
and
int
aaa
mov
or
and
in
mov
das
fists
lahf
push
mov
xchg
inc
movsb
dec
inc
test
mov
mov
cs
lock
aad
into
dec
mov
adc
xor
cmp
movsb
lods
ds
jl
mov
fidivs
sub
add
lods
sbb
lea
in
filds
push
jmp
push
xchg
fiadds
xchg
aas
cmpsl
jp
aam
xchg
dec
int3
in
add
imul
in
mov
jp
mov
mov
fbld
xor
mov
jl
and
ss
sub
enter
fs
pop
jns
mov
xchg
and
xor
fstl
push
out
and
mov
fucomp
mov
xchg
in
icebp
lods
sbb
mov
std
push
inc
dec
xchg
in
dec
fdivrs
aaa
jp
inc
outsb
lret
ljmp
dec
ds
imull
mov
into
imull
subb
dec
cmp
divl
adc
mov
pusha
loope
fnsave
rorl
xchg
push
adc
ds
cmp
packuswb
pop
inc
sbb
ret
arpl
push
dec
aam
js
ret
in
jl
cmp
cmpsl
pop
jo
sbb
push
in
xor
lods
sarb
mov
push
jnp
xchg
mov
dec
repz
push
loopne
and
xchg
das
sub
cmp
jge
subb
fimull
mov
jns
pop
jmp
cld
ror
mov
push
insb
mov
adc
jnp
nop
jecxz
pop
ret
dec
push
add
mov
and
aas
pop
neg
and
bound
out
iret
xchg
or
sub
cmpl
pop
loopne
pop
pop
test
dec
fcoml
test
leave
pop
pop
mov
stc
imul
lahf
push
sub
jmp
push
vdivss
mov
leave
fsubr
sub
sbb
lret
das
add
lds
hlt
lock
bound
or
pop
and
add
and
pop
push
mov
cli
pop
repz
pushf
fldln2
aaa
mov
ficoms
sbb
lods
dec
ret
das
lods
dec
xor
mov
int
fisubrl
lods
push
lea
fwait
popa
cmp
int
mov
lock
cwtl
popa
inc
push
mov
out
push
mov
mov
mov
sbb
sub
push
pop
and
cmp
add
push
das
jnp
int3
test
sar
cltd
mov
sub
mov
jmp
push
push
mov
fs
jo
jge
sub
bnd
or
xchg
jae
jle
add
adc
cmc
leave
push
sub
or
or
xchg
roll
xchg
cmp
lods
les
sub
aad
ds
xchg
mov
adc
aad
dec
mov
cmc
mov
test
iret
mov
xchg
nop
repnz
pop
add
add
hlt
daa
ret
popa
fnsave
inc
imul
lds
mov
sahf
and
xchg
xchg
push
call
inc
push
and
push
mov
cmpsb
mov
pop
mov
fiadds
push
ljmp
add
roll
stos
mov
and
pop
xchg
fdivs
inc
xlat
stc
int3
test
jb
push
sahf
xchg
xor
int
cwtl
loope
pushf
inc
dec
mov
fadd
int
mov
jecxz
push
aad
adc
fsub
sub
pop
cld
jae
shl
sbbb
adc
xchg
fisubrl
addb
stos
mov
xchg
sub
or
jo
sbb
pop
xchg
cs
repnz
and
rol
loopne
dec
into
pop
jg
jle
in
sar
scas
fstpt
mov
lcall
int
jl
pop
test
cli
pop
adc
loopne
push
imul
ss
out
popf
rcrl
std
jecxz
sti
mov
gs
nop
sbb
and
add
xlat
loop
pop
lret
xor
repz
mov
mov
adc
outsl
pushl
mov
in
jbe
lods
or
and
fptan
push
movsb
sub
das
and
pop
aam
mov
dec
push
fists
mov
push
jle
arpl
arpl
jno
push
out
test
xor
dec
mov
mov
pop
cmp
cmp
xchg
mov
sub
inc
mov
jo
dec
mov
fimull
insb
js
movsb
mov
jnp
roll
xchg
cmp
push
fdivr
orb
adc
dec
leave
xor
das
fs
scas
lds
mov
push
push
repnz
mov
push
adc
sbb
mov
jae
jne
push
or
cmpsb
push
mov
cmp
in
adc
fmull
and
mov
xor
jmp
lcall
and
sbb
or
or
xchg
mov
dec
xchg
jmp
inc
popf
mov
shrb
inc
and
decb
ljmp
cld
push
mov
or
pop
int
mov
mov
cmc
xchg
mov
mov
outsb
push
loopne
rclb
inc
jmp
add
out
mov
xchg
sub
mov
lods
loop
test
mov
lret
add
mov
stc
out
call
dec
or
jge
mov
mov
mov
outsl
mov
mov
or
cmp
lret
fcom
aam
mov
stc
cld
dec
out
and
xor
mov
jle
sbbl
cs
pop
repnz
fwait
ret
mov
out
mov
movsl
aas
aaa
mov
dec
push
fsubrl
add
repz
mov
xchg
mov
inc
or
dec
rcll
and
add
fisttps
mov
decb
lods
push
sub
mov
sub
xchg
xchg
rolb
sub
into
pop
mov
xchg
mov
and
add
xlat
and
frstor
mov
ds
add
and
sub
fistpll
shll
insl
sbb
jo
loopne
lret
and
mov
lods
add
mov
insl
inc
mulb
popa
sbb
add
adc
and
bound
pop
test
add
jbe
pop
sbb
shl
out
mov
adc
or
mov
jl
xor
inc
and
push
jbe
cmp
out
outsl
test
dec
push
inc
jne
jg
ret
dec
sub
jecxz
cmpsl
sbb
and
or
loop
add
jae
lods
sub
push
xchg
mov
test
mov
test
std
mov
gs
mov
movsb
mov
mov
ja
outsb
xchg
mov
lea
fmulp
mov
stc
mov
push
popa
xor
out
in
jae
sbb
aad
ljmp
in
inc
xor
fcompl
jge
lock
or
aas
inc
push
scas
out
mov
add
and
fs
ja
gs
and
pop
ffree
int
mov
repz
dec
imul
stos
in
out
xchg
lods
aas
sbb
rcrl
test
and
jle
jae
pop
jb
roll
mov
mov
push
jle
jmp
gs
cld
addb
scas
dec
mov
pop
jmp
sub
xchg
sbb
sub
fnstsw
cmc
daa
insl
jl
sub
mov
fistps
cmp
push
inc
mov
sbb
bound
insl
xchg
add
cmp
push
adc
int
pop
jecxz
in
xor
popa
xchg
fbstp
movsb
out
pushf
movsb
je
repz
gs
or
jno
aad
test
adcb
out
mov
dec
xchg
fsubl
jbe
imul
lret
mov
pushf
iret
fs
mov
loopne
push
cmp
inc
jl
or
in
add
add
sub
cmp
fdivs
xchg
repz
adc
pop
xorl
icebp
mov
xchg
mov
cli
stc
dec
dec
shrb
xchg
insb
dec
clc
xchg
mov
push
cmp
scas
gs
mov
and
sbb
int3
mov
rcrl
mov
cmpsb
hlt
cmp
fdivrs
in
lea
push
jnp
cmpsb
dec
mov
pop
js
addr16
dec
or
fneni(8087
mov
push
mov
pop
mov
cltd
sub
int3
push
sbb
outsb
sub
insb
in
imul
and
pop
call
xchg
lcall
outsb
and
or
mov
out
test
pop
dec
jae
cltd
sarb
sti
mov
mov
ret
lret
inc
sti
mov
xchg
adc
jge
pop
out
sahf
stc
out
rcll
loopne
stc
mov
or
cwtl
sbb
add
ret
push
bound
movsb
or
xchg
insl
xchg
sbb
rcrl
xor
js
daa
add
pop
andl
xchg
scas
mov
lds
jmp
out
mov
jo
outsb
jo
sub
jle
cmp
inc
call
inc
aad
push
out
dec
add
dec
fimull
mov
pop
std
push
jno
and
sahf
mov
and
insl
aad
jo
inc
add
pop
mov
inc
pop
es
xor
sahf
pop
xor
add
xor
std
orl
jg
mov
call
sbb
call
into
pop
dec
stos
mov
xchg
mov
fcomi
inc
sahf
enter
sub
and
xchg
jae
adc
in
mov
scas
xchg
cmpsb
inc
flds
adc
inc
push
xchg
repnz
jp
cmp
xchg
mov
mov
call
lods
es
aam
ret
aad
inc
xorl
push
shll
ss
sub
ss
cmp
jb
ret
mov
fiadds
jo
xchg
popf
jns
mov
jl
mov
jae
ljmp
jne
dec
add
cmp
xchg
lods
repnz
xchg
xchg
mov
push
fdivrs
int3
ret
pop
fiaddl
jnp
lret
int
rorl
das
dec
mov
lds
rclb
leave
push
out
jno
insl
cmpl
xor
je
mov
and
fstpt
and
mov
fst
xchg
push
dec
enter
mov
call
mov
xor
out
cmpsl
cmc
addr16
pop
repz
in
push
jp
or
pusha
xchg
jae
pop
fmuls
rcrl
lret
mov
cmp
lret
scas
rcrl
xchg
into
pop
cmpb
mov
mov
jle
imul
fisttps
push
push
lea
cmpsl
jp
xor
rolb
fcmovnbe
dec
call
add
or
mov
xchg
insb
movsb
xlat
cmp
xor
ret
xchg
adc
push
into
jecxz
scas
repnz
sbb
push
sub
repnz
std
push
idivb
sbb
ret
push
dec
or
sub
xchg
mov
pop
shl
push
sub
lret
jne
insl
aad
fninit
or
adc
or
outsb
cmc
xchg
mov
insb
daa
jmp
lods
dec
fisubrs
rcrb
roll
stc
ja
xor
loope
mov
lock
out
rcl
decb
ds
iret
aaa
test
mov
xchg
and
pop
push
mov
rcrl
mov
leave
int3
or
iret
out
in
sub
xchg
or
fldcw
mov
xchg
sbb
insb
ljmp
loope
mov
mov
test
sub
dec
or
sti
push
cwtl
loope
jge
lods
fs
and
shlb
mov
iret
dec
adc
mov
inc
fists
lret
dec
jae
or
jae
push
push
mov
inc
mov
out
mov
sbb
jecxz
pop
cmp
pop
add
cwtl
aam
mov
jl
aad
cld
data16
imul
fidivrl
imul
jle
ds
mov
mov
cmp
inc
in
jmp
imul
loop
ficoms
pop
dec
shrl
mov
mov
ljmp
mov
mov
mov
mov
ret
mov
cs
les
xlat
ret
in
jge
icebp
jle
lock
or
xchg
test
sbb
outsb
jae
insl
in
mov
outsl
movsl
pusha
aas
xchg
jnp
mov
adc
subl
movsb
cmp
lods
push
stc
loope
pop
sub
jo
pop
sbb
lds
mov
ljmp
fsubr
jmp
mov
push
push
pop
rcll
sbb
out
pushf
cmpsl
sub
and
add
mov
mov
in
or
scas
mov
pop
fimuls
repz
gs
addr16
scas
pop
pushw
out
cs
mov
adc
es
xchg
pushf
pop
jecxz
xor
es
xchg
inc
fbld
std
ds
inc
mov
or
jmp
jnp
pop
ss
lret
jecxz
rcrb
imul
mov
push
jge
or
xchg
mov
repnz
ds
mov
icebp
outsl
inc
cltd
or
addr16
repz
xchg
repz
jbe
mov
cmp
in
sub
adc
push
mov
add
lcall
lret
daa
or
insb
cmp
addl
fldenv
pop
add
jg
aaa
pop
jmp
xor
xchg
sbb
iret
xor
inc
lds
inc
cmc
mov
sub
push
and
fiaddl
inc
mov
dec
push
xlat
inc
push
aad
pop
sbb
cmp
cmc
dec
ss
inc
mov
push
lahf
cmc
adc
sbb
aad
stos
adc
js
rcll
and
xchg
ret
or
roll
mov
fwait
int3
mov
jne
arpl
les
jno
xchg
push
add
mov
mov
sbbb
cwtl
mov
dec
cmpsl
sbb
in
subb
sarb
in
shll
daa
inc
adc
mov
mov
push
shll
jno
jecxz
and
dec
sub
add
lret
cmp
sub
push
movsb
adc
rorb
outsb
add
roll
ss
iret
add
orl
push
jne
subb
pop
mov
in
movsl
fsubr
mov
add
fcoml
out
cmp
bound
test
test
decl
cmpsb
int
cmp
icebp
mov
pop
pop
cld
push
jmp
inc
pop
add
sbb
shr
push
out
insb
add
mov
out
xor
inc
pop
mov
in
mov
sub
mov
hlt
rorl
adc
jae
fs
movsl
out
mov
fisubrl
cwtl
loopne
push
lcall
mov
sbb
movsb
cmp
nop
adc
ret
cmp
inc
mov
cli
divl
add
dec
xor
xchg
clc
jl
sbb
out
adc
xor
rcl
sbb
or
inc
cmp
hlt
fwait
sahf
pop
lret
stos
push
popa
in
pop
pop
mov
inc
stc
call
mov
in
ret
pop
imul
aad
fisttpll
mov
mov
xor
mov
enter
mov
mov
cmp
jo
stc
xor
pop
fadds
add
jbe
push
inc
xor
ja
ja
outsl
les
out
out
out
out
out
out
out
inc
rorb
out
clc
cmp
ja
xlat
mov
popa
cmpsl
jns
or
test
push
jmp
dec
out
repnz
ljmp
or
or
mov
pop
or
movsb
inc
mov
pop
aad
mull
jge
sub
fwait
outsl
call
and
or
fcompl
mov
shll
outsl
mov
mov
jl
push
loope
adc
and
add
hlt
jp
pop
fisubrl
pop
or
mov
push
int
sbb
test
push
dec
jnp
pop
lds
testb
push
sub
inc
mov
pop
pop
add
add
push
mov
push
les
aad
adc
jne
or
and
test
mov
add
xchg
xchg
mov
mov
cmp
adcb
xor
inc
inc
inc
sti
pop
lahf
xchg
iret
jmp
push
xor
movsb
cmp
dec
jbe
rcll
les
xor
daa
repnz
out
orb
aaa
cli
inc
inc
adc
outsl
lret
xlat
arpl
outsb
push
dec
or
mov
fwait
mov
jl
enter
call
scas
xor
mov
das
and
mov
mov
cmp
dec
cmpsb
ljmp
xchg
fwait
and
add
dec
mov
sub
cld
imull
sar
jge
sub
jle
xor
jge
jg
fs
mov
sub
in
mov
pop
jecxz
xchg
xchg
cld
sbbl
imul
rorl
mov
bound
jns
and
sahf
ror
cmp
jb
and
int
lret
and
popa
lock
das
in
xchg
repz
fistpll
jns
inc
add
mov
dec
sub
add
adc
jae
add
cli
in
push
mov
out
lret
or
jb
lret
fsubrs
mov
arpl
push
nop
inc
jae
in
std
insl
in
arpl
cs
cmc
pop
lock
and
xchg
pop
call
lods
inc
mov
sbb
sarl
mov
or
hlt
fistpll
cmpsl
add
or
cli
push
xor
ja
lahf
insb
xchg
in
inc
outsb
and
dec
bound
ss
test
sti
movsl
dec
xlat
or
xor
aam
ja
fcoms
insl
push
jne
cmp
dec
push
xor
pop
and
mov
repz
jmp
mov
jle
push
in
xor
hlt
pusha
adc
mulb
out
push
mov
xor
fadd
shrl
fwait
ret
push
jecxz
adc
pop
insb
cmp
push
push
rolb
out
adc
mov
cld
cmpsl
icebp
xchg
mov
push
cmp
jno
test
pushf
pop
lds
cmpsl
cmc
test
xorl
mov
mov
pop
movsl
xor
jae
loopne
add
sbb
rolb
mov
jl
push
data16
and
movsl
cmpl
xor
hlt
js
sub
mov
cld
inc
std
das
cli
dec
test
jle
popf
inc
mov
mov
pop
xor
push
push
jo
out
ret
mov
push
pop
jo
scas
jp
xor
mov
cli
mov
push
push
inc
daa
adc
inc
pop
xlat
arpl
sbb
xchg
imul
jns
ljmp
imul
pop
jo
mov
inc
filds
or
fstpt
mov
icebp
arpl
js
inc
jmp
cmp
xchg
outsl
in
or
sti
or
retw
xchg
je
sbb
mov
adc
fimuls
xchg
fcompl
pop
sbb
xchg
adc
xorl
data16
mov
mov
jb
ret
xchg
jo
adc
ret
pop
cs
jecxz
mov
mov
inc
hlt
sarl
sbb
lret
insb
mov
nop
shll
xchg
rcl
fnstsw
into
push
cli
gs
sbb
int
add
adc
scas
adc
divl
sahf
inc
cmp
jmp
dec
pop
xchg
or
dec
mov
mov
xchg
xor
data16
xchg
jnp
xchg
daa
lea
pop
push
cmp
ret
pop
pop
mov
dec
iret
inc
or
pop
and
mov
cmp
mov
data16
lret
push
imul
in
xchg
jl
ds
data16
jg
pop
dec
xor
pushf
shlb
sub
push
nop
stos
mov
imul
pop
insl
add
mov
jmp
adc
adc
cld
shrl
and
loopne
mov
cmp
sarl
push
lret
call
lcall
adc
inc
add
in
pop
jno
lahf
xchg
jge
out
jo
arpl
xchg
sbb
mov
pop
lahf
ds
mov
pop
xlat
and
imul
mov
push
movsl
scas
aaa
fs
iret
mov
pop
mov
xchg
xor
push
xchg
inc
lock
cmpsb
pop
dec
imul
pop
int
push
mov
int3
mov
xlat
popf
adc
mov
push
push
andl
int3
sbb
and
fisttps
and
jne
shll
add
jle
sbb
push
sub
inc
lea
mulb
and
movsb
call
jle
lds
or
imul
mov
xchg
outsl
and
iret
and
leave
push
xor
andb
jne
iret
test
mov
mov
pushf
sub
lods
mov
and
pushf
jle
lret
mov
fstpt
xchg
ss
xchg
call
fbld
mov
pop
xchg
and
ja
inc
aas
push
inc
xchg
in
test
add
lret
pop
aas
sbb
inc
xchg
add
cltd
xor
pop
pusha
cltd
jp
loopne
test
mov
iret
jne
or
inc
ficoms
sbb
filds
inc
sub
ja
mov
push
gs
xor
xor
cmpsl
add
push
hlt
sbb
out
imul
and
int
jnp
adc
addl
push
and
and
adc
xchg
or
mov
test
int3
mov
xchg
add
in
mov
mov
pop
out
or
push
jno
test
int
pop
aaa
sub
adc
std
fucomp
cmc
pop
imul
in
dec
cmpsl
jns
mov
cmp
xor
dec
adc
pop
stos
lock
mov
leave
push
mov
pop
mov
push
sbb
cld
fisubrs
and
xor
lahf
xor
cmpl
out
or
call
adc
push
outsb
mov
cmp
imulb
or
adc
jmp
add
in
shrl
sarl
lods
out
inc
ret
and
cmp
push
push
jne
dec
pushl
xor
pop
mov
jno
sub
xchg
loope
test
xlat
adc
aaa
push
cmpsb
push
xchg
or
inc
xchg
xor
or
sti
and
sbb
gs
jmp
jno
jge
lock
sbb
jne
mov
fs
jmp
js
icebp
lods
pop
dec
into
sbb
dec
adc
jge
ds
or
pop
lret
bound
stos
inc
sbb
pop
loopne
popf
push
sahf
hlt
push
pop
mov
xor
inc
nop
xor
adc
cmpsl
jge
mov
das
mov
ss
xor
lods
add
test
xchg
pop
cmpsb
std
fldenv
push
sub
cmp
push
pop
hlt
mov
mov
popa
into
cmp
inc
jb
add
std
xorb
out
jb
jp
fidivs
iret
mov
xchg
daa
sbb
mov
mov
fisubrl
push
fwait
mov
cmp
mov
insb
mov
inc
into
adc
jo
aaa
rol
fs
movsb
sub
stos
addr16
lds
insl
mull
mov
sbb
leave
jmp
adc
cwtl
lock
fwait
inc
shlb
mov
and
or
repz
push
lahf
mov
or
or
fs
dec
and
lds
xlat
rorb
jne
scas
bound
outsb
mov
cli
xor
hlt
dec
mov
jle
out
sub
sbb
mov
push
mov
jle
in
cltd
faddl
xlat
add
sub
in
idiv
ja
aam
das
fcompl
pop
jle
sbb
sub
sub
faddp
inc
jne
xchg
arpl
inc
fiadds
xchg
sbb
push
pop
push
pop
xor
push
test
negl
ret
mov
shll
sub
mov
hlt
sahf
aad
push
sti
xor
ret
es
and
adc
outsb
fiaddl
outsb
sahf
ret
shrl
inc
lock
cli
adc
pop
ljmp
pop
or
or
mov
cld
out
into
xor
shlb
and
pushf
jmp
mov
push
sbb
mov
mov
mov
jecxz
push
imul
out
cmp
xchg
lods
stc
mov
mov
ljmp
fnstsw
dec
lahf
cmp
hlt
cli
shrb
push
or
pop
fdiv
lds
add
repz
scas
pop
adc
jo
loop
xchg
into
jg
mov
cmp
stos
jmp
seta
sti
cwtl
pop
sub
mov
mov
cmp
add
xchg
push
cmp
add
push
xor
mov
jo
jno
addr16
jle
fidivs
std
mov
mov
xchg
mov
popaw
inc
dec
mov
dec
lahf
xchg
mov
cmpsl
xorb
std
mov
jne
divb
jmp
stc
fldcw
and
fucom
or
ja
inc
cmc
push
or
dec
iret
push
fdivs
dec
mov
test
dec
jg
cwtl
and
leave
cmpsb
into
jl,pn
sub
and
xlat
std
repz
or
aam
sbb
jl
jo
lock
adc
gs
and
xlat
sub
cmp
fisttps
push
mov
leave
jo
jl
leave
xchg
pusha
add
dec
sbb
unpckhps
inc
iret
pop
rcll
mov
shll
dec
cltd
xor
cltd
pop
sub
mov
xor
lret
xchg
pop
inc
push
sbb
sti
xor
inc
outsl
ja
cmpsb
pop
mov
mov
idivb
outsl
aas
jns
pop
and
movsb
mov
sti
dec
sub
ss
xor
shll
push
adc
mov
sbb
fidivrl
cs
mov
clc
pop
or
ljmp
cmc
cmpb
or
fs
int
sbb
cld
sbb
cli
lahf
insl
inc
rolb
inc
pop
sti
sub
xor
enter
rorb
data16
xor
dec
xchg
sti
ds
shlb
and
jno
int
jne
adc
cld
dec
jbe
adc
shrb
dec
lods
xchg
lds
lods
aam
fmuls
ret
bound
xor
repnz
lock
data16
inc
test
xor
mov
cli
push
dec
adc
mov
arpl
mov
je
aas
out
mov
roll
push
mov
movb
push
xchg
stos
mov
dec
pop
hlt
xchg
movsb
or
ljmp
or
add
xor
pop
add
cmp
xchg
loopne
aam
mov
push
pop
out
mov
cmp
or
push
jp
sbb
pop
or
pop
pop
mov
xchg
imul
push
aad
cmpsb
andb
or
jmp
mov
mov
jge
fwait
xor
push
stos
push
adc
in
ret
je
push
inc
mov
mov
mov
leave
shll
sub
outsb
nop
dec
test
in
loopne
out
push
ds
xor
ljmp
cmc
xchg
daa
mov
lcall
into
ficompl
fisubl
and
rcrb
mov
mov
push
mov
out
jl
push
adc
imul
sbb
call
stc
out
adc
push
outsb
cmp
imul
mov
cwtl
and
push
sbb
in
mov
sbb
push
sub
push
jecxz
jno
in
adc
dec
inc
push
add
call
add
sbb
popa
popa
sbb
cmpsb
arpl
jne
inc
jnp
push
or
jmp
lret
mov
sub
out
hlt
xchg
and
sub
sbb
movsb
inc
je
sub
inc
lret
ss
outsl
sarl
scas
fsubrp
pop
sbb
call
jmp
bound
leave
inc
sub
popa
add
push
jb
pop
mov
outsl
xor
stos
sbb
pop
push
jno
mov
sub
dec
jecxz
pop
adc
sub
pop
push
jl
push
scas
add
dec
out
in
push
push
mov
xor
hlt
dec
leave
cmp
outsl
cmc
sbb
cltd
cmc
push
push
jb
pop
ss
inc
sub
pop
or
mov
xlat
pop
push
idivl
mov
nop
aad
jb
lds
push
mov
test
sbb
lods
in
sbb
ud1
fcoms
sub
cmp
cmc
mov
insl
stos
dec
dec
mov
fiaddl
les
inc
add
cs
xor
xchg
or
mov
lds
sti
in
mov
clc
jbe
adc
out
std
jp
adc
mov
xor
fldcw
fdivrp
xchg
fisubrl
fidivrl
jbe
lock
iret
xchg
lahf
mov
imul
inc
aam
sbb
ds
icebp
pop
xor
pusha
mov
outsb
jae
cmp
mov
in
loopne
loop
cwtl
cmp
and
lock
pop
and
lods
push
cld
xor
loop
into
jne
xor
or
movsb
cld
or
jmp
stc
aam
push
xchg
or
leave
adc
jb
aaa
sti
lahf
or
inc
push
dec
add
je
xchg
push
loope
or
pop
scas
adc
cmpsl
aam
mov
adc
and
xor
inc
sub
jb
in
mov
out
ret
in
xor
xchg
push
adcl
push
lock
mov
xor
decb
in
adc
addr16
pop
imul
or
xor
inc
xchg
fstpt
xchg
mov
push
cmp
jge
fistpl
mov
ficompl
aad
subb
jae
pop
jmp
xchg
addr16
ret
mov
mov
lcall
fsubrs
mulb
sti
xchg
jo
aad
scas
push
ret
and
inc
loope
lods
fmuls
leave
inc
xlat
mov
addr16
add
out
subl
sti
stc
stos
pop
cmp
pop
sub
in
mov
scas
ja
jp
std
nop
push
subb
addr16
sbb
jl
or
test
jge
ret
clc
mov
stos
jne
jle
test
cli
movsb
push
lock
inc
cli
adc
repz
and
dec
push
pop
mov
cmpsl
push
dec
pop
and
testb
mov
das
pop
mov
mov
add
lea
int
imul
fdivrp
movsb
imul
fxch
jmp
inc
mov
stos
negb
add
fisubs
cli
sub
add
cmpsl
idivb
or
pop
xchg
jne
scas
and
cwtl
hlt
jb
inc
mov
aas
fdivp
mov
inc
xchg
push
sar
clc
les
es
std
subl
mov
les
loop,pt
popa
dec
adc
dec
push
jge
shlb
std
les
push
gs
push
mov
shlb
xchg
icebp
inc
pop
jg
push
adc
xchg
adc
int3
adc
into
sbb
pop
call
sub
pop
cmp
sti
outsl
aaa
add
xlat
mov
mov
pop
push
and
mov
cmp
xchg
lods
mov
inc
movsl
cmc
subl
jecxz
repz
adc
pop
rolb
push
hlt
inc
or
icebp
popa
jle
inc
adc
aad
inc
mov
mov
std
mov
push
loopne
push
loopne
iret
movsb
roll
dec
mov
sub
test
dec
mov
sbb
popl
pop
pop
rorl
jnp
xchg
xlat
xchg
repz
test
and
xchg
hlt
mov
fists
add
sub
push
cs
aas
data16
pop
subb
mov
pop
lods
divl
stc
cmc
dec
sub
or
je
dec
xor
ja
ljmp
dec
pop
movb
xchg
pop
and
out
bound
sahf
es
mov
in
mov
xchg
repnz
call
fidivrl
pop
iret
xor
fwait
xchg
push
in
rcll
xor
and
xor
test
dec
mov
sbbl
out
push
pop
adc
jg
shl
cmp
stos
inc
and
rcll
pop
call
andb
sub
jmp
aas
mov
mov
pusha
jno
inc
out
or
sti
push
shlb
xor
xchg
shll
repnz
pop
subb
loopew
pop
xchg
lret
pop
aas
mov
xor
push
test
scas
adc
clc
add
add
out
arpl
and
inc
jecxz
mov
stos
enter
sbb
pop
xor
cltd
stc
fs
out
stos
adc
jnp
and
popa
mov
cmp
cli
xchg
mov
add
mov
xor
add
lods
cmp
test
idiv
sub
sub
or
mov
inc
pop
or
nop
mov
add
int
mov
pop
sbb
sbb
add
sub
outsl
arpl
xor
das
inc
ficoms
inc
fucom
sub
pop
xchg
ficoms
imul
aaa
cmp
push
mov
sti
test
xor
xor
mov
pushf
mov
inc
fcmovbe
push
sbb
lds
xor
sbb
push
xchg
adc
loop
or
lahf
rcrl
xor
jmp
ljmp
lods
pop
test
sbb
je
rolb
sti
dec
sub
sbb
push
dec
xorb
ljmp
xchg
std
pop
in
fsts
popf
xchg
sbb
pop
or
icebp
rcr
movsl
pop
clc
pop
popa
dec
jp
ds
xor
xlat
add
aas
test
lock
test
or
orl
in
xor
call
xlat
and
lods
pusha
insb
sbbl
fbstp
in
pop
sbb
cmp
and
in
imul
adc
add
inc
outsb
fwait
pop
jbe
jns
push
enter
out
sbb
test
or
mov
repz
mov
arpl
jmp
rorb
insl
icebp
fcomps
imul
rcl
pop
xor
or
das
mov
js
adc
mov
movsl
mov
add
pusha
stc
xchg
and
cmp
push
xchg
pop
mov
push
inc
stos
adcl
cld
mov
lret
js
cmp
adc
and
mov
pop
cmpsb
gs
daa
inc
sahf
pop
pop
repz
push
lods
mov
stos
jp
dec
sub
mov
add
cmpsw
mov
iret
mov
lahf
jmp
pop
sti
fsubs
jne
pop
inc
clc
sahf
jge
lret
jmp
mov
stos
in
add
into
and
in
or
lock
push
xor
push
mov
cmp
push
repz
inc
iret
sbb
rol
cli
sbb
jae
popa
add
insb
push
and
jo
mov
fwait
and
mov
xchg
dec
aaa
ljmp
sahf
pop
mov
cmp
dec
aas
cltd
pop
pushf
fnsave
movq
push
mov
jle
jo
sub
int
mov
xor
in
mov
xor
cmpsb
repz
arpl
ret
xchg
aas
inc
adc
and
push
les
nop
inc
shrb
inc
sbb
mov
or
loop
xchg
nop
das
mov
or
and
mov
xor
mov
fwait
xchg
loope
jb
pop
pop
or
xor
dec
cmp
jle
push
inc
cld
lods
in
pop
push
xchg
jp
icebp
jecxz
mov
sbb
push
cli
stos
and
adc
adc
dec
cmc
enter
cmpsl
push
xchg
adc
inc
mov
and
xor
or
test
out
lds
push
insl
test
adc
ret
jge
outsb
and
movsb
pop
mov
cmp
pop
xchg
fwait
cli
pushf
sbb
and
nop
cmpsl
repnz
pop
xor
mov
fcoml
xlat
or
add
jle
pop
les
cltd
outsb
inc
cli
sub
jnp
out
sbb
adc
loopne
mov
and
cmp
mov
subb
aas
loopne
rcrl
repnz
or
cmpsl
scas
inc
lea
cltd
fsubl
jne
iret
mov
je
stc
push
sahf
repnz
incl
jno
pushf
fwait
jnp
subl
outsl
adc
jne
adc
call
aam
inc
push
in
and
dec
jno
cmp
insb
push
sub
inc
or
std
xor
cmp
add
dec
popf
jmp
push
outsl
push
or
mov
cmp
gs
and
pop
inc
cli
shrb
inc
pusha
repz
xchg
jns
pop
adc
jo
in
test
movl
xchg
xchg
mov
push
aaa
testl
test
pushl
adc
pop
jo
clc
sub
stc
js
and
loope
repnz
les
pop
nop
in
and
outsl
out
aaa
mov
mov
jo
in
inc
or
mov
sbb
cmovle
mov
shlb
dec
lret
push
loope
aam
outsb
and
or
leave
or
xchg
jns
push
test
cmp
jno
test
lea
call
pop
cmp
mov
cmp
jae
sbb
call
aam
jmp
inc
ret
mov
idivb
inc
sti
cmp
std
mov
mov
and
scas
es
jns,pt
jle
aas
xchg
lods
push
mov
mov
mov
xchg
xchg
bound
xchg
xchg
dec
filds
xor
mov
fistpl
icebp
jecxz
xor
lods
mulb
arpl
inc
adc
mov
mov
inc
es
fidivl
sahf
sbb
xchg
sub
pop
pushf
insl
bnd
jp
or
out
lods
push
notb
stc
and
loope
xchg
mov
xor
cltd
xchg
jg
int3
mov
out
jno
xchg
data16
dec
fstpl
fistl
or
pop
stc
cmpsl
adc
lret
loope
push
or
testl
ret
mov
xchg
inc
in
in
pop
jns
and
push
es
pop
push
mov
cmp
mov
fcompl
cmpsl
adc
add
test
xor
dec
mov
in
push
add
fincstp
dec
lret
adc
xchg
jecxz
shll
pusha
jmp
incl
push
xor
in
and
pop
push
xor
xlat
ret
mov
adcl
dec
rclb
push
nop
push
mov
sub
xlat
and
pop
cmp
inc
mov
xchg
in
iret
test
wbinvd
js
push
jbe
mull
mov
stos
and
cwtl
hlt
out
in
xor
push
add
adc
mull
in
inc
les
lock
and
in
jno
and
fimull
sbb
loopne
sub
ja
cmp
fnstenv
sub
jle
mov
in
and
sub
cmpb
xor
mov
popa
test
jb
jne
add
xor
popa
cmp
rcrb
sub
xor
or
inc
pop
or
or
inc
fsubs
inc
call
push
dec
xor
mov
or
clc
sti
fwait
inc
jns
jl
mov
sub
xchg
lahf
call
sub
jecxz
push
out
pop
cmpsb
sahf
stc
push
pop
mov
jnp
mov
mov
cmp
lea
clc
xchg
jns
and
daa
rolb
loop
leave
pop
shrb
scas
das
pop
ljmp
pop
add
fcmovnb
push
call
mov
movntq
push
cld
jno
xor
test
dec
fistps
ja
clc
mov
xchg
movsl
push
jo
pop
add
ret
arpl
xchg
fwait
shrl
ljmp
mov
out
pop
ret
lcall
add
xchg
mov
inc
pop
imul
fwait
scas
pop
adc
call
pushf
mov
ljmp
std
dec
mov
popa
and
inc
mov
mov
inc
data16
inc
fmulp
test
add
inc
out
adc
pop
ret
aad
and
aaa
lods
jle
push
xor
enter
dec
inc
sub
iret
insl
pop
mov
sbb
outsb
lods
sar
ja
pop
mov
sub
call
stos
mov
xor
mov
out
mov
cvtpi2ps
lods
andb
js
push
test
ljmp
insl
mov
sbb
repnz
and
and
negb
hlt
sbb
mov
icebp
pop
fwait
orb
mov
imul
cmpsl
push
jp
test
ds
xchg
insl
fldl
sub
les
cs
imul
sarl
inc
mov
stos
incb
or
cmpsb
mov
push
mov
fsubl
lea
std
cmp
jge
push
stc
dec
hlt
in
or
imul
sub
push
rorw
xor
push
sbb
jle
test
sar
mov
inc
inc
xchg
repnz
ret
lret
mov
test
stos
xchg
sbb
test
or
aas
int3
cmpsl
pop
pop
mov
mov
fidivrs
xchg
sub
xchg
ds
imul
sub
fmull
dec
aad
insb
xchg
xor
aam
ret
and
pop
out
add
sbb
pop
or
adc
xchg
xor
js
pop
inc
orb
sarl
adc
loope
loope
les
outsb
mov
add
or
mov
mov
inc
addr16
int
je
sub
mov
shlb
shll
sub
ja
xchg
leave
dec
jb
sub
push
sbb
mov
mov
inc
add
daa
cmp
jp
stos
mov
pop
xor
std
nop
adc
int
out
lahf
push
jne
lret
rcrl
into
push
inc
cmpsb
jmp
mov
enter
xchg
fisubs
nop
fnsave
and
mov
ljmp
lods
dec
mov
and
pop
jmp
sahf
jno
mov
xor
insl
movsb
out
and
push
je
outsl
hlt
aaa
and
adcb
sbb
pop
inc
es
inc
jl
ljmp
mov
insb
mov
push
call
ja
add
subl
dec
dec
repz
push
ljmp
adc
and
cld
dec
jecxz
push
inc
sbb
cltd
lea
loop
jg
cli
icebp
insb
rcrl
inc
iret
addr16
in
fnstsw
test
imull
jbe
cld
enter
xor
std
bnd
push
dec
and
add
loop
sarl
dec
sbb
push
int
cmp
add
jnp
repnz
cltd
add
mov
ja
inc
lea
push
xchg
jns
cmp
push
inc
and
inc
adc
lcall
push
lock
aas
mov
mov
sahf
sarl
out
xor
inc
and
in
cmc
aad
rcll
add
out
pop
add
test
pop
fsubs
push
pushl
outsl
or
mov
test
and
ret
push
cmp
pop
clc
fwait
mov
mov
sub
repz
inc
pop
fucomp
outsl
xchg
push
sub
inc
xchg
jbe
fcomp
aaa
jnp
cltd
xchg
in
push
popa
push
push
subb
sub
pusha
loop
mov
jecxz
inc
push
xor
push
mov
mov
in
std
js
mov
inc
ja
pop
push
adc
incl
fnstcw
xor
xor
mov
stc
inc
mov
in
arpl
inc
frstor
adc
sub
xchg
pop
test
ljmp
jae
adc
xchg
pop
or
ds
in
out
push
outsb
gs
imul
xor
lods
or
cmp
push
loope
jnp
outsb
call
inc
push
fs
mov
jge
cmp
int
pop
shlb
mov
mov
imul
movsl
in
mov
out
xor
mov
add
and
push
shll
iret
outsb
xchg
push
jecxz
cli
cmpsl
inc
mov
fwait
pop
gs
mov
or
pop
movsb
aam
mov
outsl
sbb
fcoms
xchg
xchg
cmp
or
inc
cmp
mov
xor
imul
pop
add
sbb
push
push
or
in
sti
push
stos
mov
add
in
or
addl
in
in
sbb
sbb
or
cld
lret
mov
push
ljmp
mov
dec
jecxz
cmp
pop
mov
push
jns
inc
or
div
or
aaa
inc
lret
cmpsb
ja
inc
mov
les
sti
adc
sbb
std
mov
xor
outsb
mov
pop
mov
test
pop
lcall
xorb
stos
js
pop
inc
shlb
adc
clc
xor
xchg
lea
xor
insb
sbb
adc
inc
cmp
cmp
xchg
scas
hlt
dec
roll
mov
and
and
movsl
inc
mov
push
daa
mov
cltd
fsubr
daa
sbb
xor
xchg
jp
mov
lods
xchg
imul
fcompl
pushl
xlat
shll
dec
repnz
cltd
sub
xchg
push
divb
mov
xchg
leave
dec
mov
aam
pop
sbb
int
fwait
shl
inc
jp
jp
insl
outsb
dec
sub
inc
mov
and
mov
pop
js
mov
fisttpll
call
in
fmul
test
out
or
sbb
shlb
out
lods
bound
out
loope
iret
push
fmull
dec
pop
pushaw
or
push
dec
fistl
sbb
xor
sbb
scas
pop
mov
fildl
xchg
fsubp
jne
divl
clc
aad
adc
fcomi
cmp
inc
cmc
inc
or
out
sub
fcmove
jno
test
push
lahf
mov
mov
dec
mov
mov
jo
jge
xorb
pusha
fildll
mov
mov
push
ret
rcl
mov
xchg
in
repz
lret
sarl
imul
sub
bound
and
in
push
mov
jnp
pop
addr16
clc
dec
mov
scas
cltd
jge
mov
popf
adc
test
pop
pop
insl
xorl
outsl
mov
sbb
adc
push
xor
push
jl
xor
ds
in
cmp
mov
sub
inc
mov
push
xchg
insb
sahf
xor
jno
and
inc
jno
xor
jp
jle
imul
pop
ljmp
sbb
lcall
adc
notl
icebp
mov
in
jp
shrb
pop
lods
aad
xor
mov
bound
call
stc
insb
faddl
dec
add
adc
movsb
push
decb
mov
pop
cmpsl
roll
cmp
xor
inc
pop
add
mov
push
daa
push
out
pop
xchg
loope
inc
test
cmp
popf
push
lock
pusha
add
sti
scas
mov
mov
sahf
add
fdivs
stc
jae
imul
pop
xor
clc
test
push
mov
add
leave
rorb
adc
mov
cld
jae
xchg
xor
inc
dec
fisubs
or
xor
push
cld
cltd
and
shl
inc
push
popa
inc
or
jns
fstpt
popf
std
stos
decb
mov
fcmovnbe
jnp
push
or
hlt
cwtl
inc
xchg
cmp
xchg
arpl
sub
lock
jnp
stc
lahf
xor
xor
sub
insl
leave
jmp
pop
mov
shlb
inc
dec
and
icebp
push
jnp
out
inc
in
dec
mov
loope
cmc
mov
cmp
inc
lcall
push
sub
inc
mov
stos
cmc
mov
jb
adc
jbe
sub
xlat
iret
stc
arpl
mov
xorb
adc
js
push
dec
fimuls
add
sbb
into
mov
adc
cmp
out
out
out
out
in
push
jmp
xor
xchg
push
dec
es
adc
addr16
pop
fcmove
adc
push
pop
fadds
cmc
scas
sbb
lcall
sbb
xchg
adc
mov
movsl
ja
call
in
test
dec
inc
lods
xchg
push
dec
stos
lret
daa
inc
imul
cmp
xor
adc
and
inc
jl
test
ja
jo
mov
sbb
and
decl
pop
lock
xor
rclb
icebp
xchg
ds
jb
adc
or
movsb
mov
inc
iret
mov
cmp
xchg
and
mov
jmp
inc
ret
mov
popf
sub
dec
and
aas
pop
rcrl
adc
test
subl
and
pop
add
dec
jno
shlb
adc
mov
adc
lcall
inc
mov
xor
xchg
jno
repz
nop
filds
stos
xchg
jmp
mov
pop
shlb
out
data16
add
jecxz
rcll
dec
sbb
mov
push
stos
inc
call
sub
jg
mov
mov
sbb
mov
inc
fadds
lock
push
idivl
cmp
pusha
loop
iret
mov
scas
add
popf
mov
jl
rol
dec
add
aam
dec
adc
pop
aam
shlb
ss
inc
lret
inc
push
jnp
loop
sub
dec
pop
ret
xchg
mov
inc
insb
mov
dec
es
mov
and
mov
mov
xchg
insl
scas
xchg
dec
push
or
jae
outsl
leave
jle
movsb
hlt
test
mov
add
pop
sbb
fcoml
jbe
dec
or
insb
mov
movsb
lods
insb
sbb
mov
pop
notb
sbb
test
lock
xchg
inc
inc
sub
and
push
sbb
xchg
add
add
fs
ror
stos
lcall
lret
lcall
inc
sti
inc
jae
icebp
inc
mov
xchg
mov
mov
cmp
mov
stc
gs
adc
push
and
adc
inc
xchg
mov
mov
push
arpl
jbe
lock
pop
cmp
inc
xor
cmp
cmp
test
sbb
mov
pop
sbb
jecxz
int3
add
outsl
test
test
mov
mul
test
inc
xchg
jae
lods
ret
adc
xor
xlat
ret
aaa
add
mov
pop
sub
pop
mov
inc
sahf
pop
mov
pop
vsqrtss
pop
push
pop
pop
mov
mov
ret
jno
lcall
mov
mov
push
xchg
dec
jge
mulb
bswap
add
insb
mov
add
mov
lds
divb
repz
push
sahf
push
push
xor
xchg
sbb
sbbl
rcrl
push
ret
mov
out
hlt
jne
mov
push
fiaddl
lock
add
bndldx
call
lds
sub
mov
lcall
pop
sub
pop
stc
push
mov
mov
out
fnstsw
daa
jb
pop
push
add
mov
push
out
dec
xchg
add
out
cmp
cmc
push
out
push
push
add
hlt
mov
mov
pop
inc
sbb
push
pop
mov
std
or
push
cmp
lods
jge
lahf
push
mov
imul
dec
mov
pop
and
aaa
insb
cli
push
ds
adc
ljmp
pusha
pop
jne
xchg
pop
mov
aad
sub
dec
xchg
adc
sub
add
dec
shll
mov
stos
mov
pusha
out
ficoml
fidivs
cmp
mov
mov
xchg
jg
push
jp
test
sbb
inc
bound
mov
inc
inc
jne
es
mov
push
or
sti
fsubrl
mov
cmp
or
add
jg
inc
or
lret
or
mov
sub
daa
ds
add
cli
dec
pop
mov
xchg
inc
movaps
inc
adc
mov
dec
rorl
add
loop
clc
cmp
or
dec
clc
cmc
ror
inc
and
fcomps
xchg
lahf
fwait
jnp
add
push
das
xchg
into
adc
xchg
insl
dec
or
push
sbb
movsl
addr16
hlt
les
and
sbbb
sbb
movsl
pushf
xor
cs
iret
add
stc
push
mov
jmp
pop
scas
lds
sbbl
dec
cltd
lcall
push
dec
xor
fwait
popf
xor
xor
inc
xchg
addl
rcrb
push
xor
jns
iret
dec
mov
inc
stos
mov
loop,pn
call
push
sbb
sub
out
push
push
push
jmp
mov
rorb
call
xlat
popf
dec
pop
sub
add
mov
ffreep
ret
sbb
jo
repz
and
stc
shll
lock
repnz
mov
mov
scas
cmp
pop
es
mov
cmp
scas
or
sub
or
iret
adc
nop
mov
ret
add
xor
loopne
dec
ljmp
mov
cmpsb
sbbl
jle
sub
xchg
xchg
jno
push
test
nop
outsl
xchg
into
mov
mov
mov
mov
pop
mov
inc
pop
xlat
repnz
outsl
or
xchg
lret
pop
outsb
cmp
xor
lock
cmp
orl
out
adc
or
out
addr16
repnz
scas
shlb
cmc
movb
popf
push
test
inc
nop
mov
jle
jmp
call
insb
xor
xor
inc
sub
cmp
add
jecxz
xlat
jge
pop
dec
sahf
repnz
adc
imul
sbb
sub
mov
xor
and
xor
test
aam
push
inc
cmp
sub
xchg
xchg
or
popf
bound
out
popf
and
cmp
sub
fmull
push
dec
scas
push
inc
push
pop
test
xchg
icebp
std
xor
cmp
cs
into
push
adc
jnp
cs
jmp
and
jp
into
in
and
xchg
xchg
shl
sbb
and
or
inc
inc
test
daa
inc
fwait
sti
xchg
lret
xchg
addr16
sub
pusha
adc
in
xor
lret
or
sub
ret
js
dec
vmread
stos
pop
cmpsb
push
dec
jbe
rcr
lods
rclb
js
ret
pop
popf
jge
xor
push
jno
inc
and
sbb
int3
mov
icebp
xor
repz
jnp
lds
rcr
iret
fdivrp
and
cwtl
push
addl
push
sti
dec
dec
xlat
loopne
outsb
cs
gs
lret
hlt
test
push
rorl
mov
mov
addr16
adc
repnz
int
rol
cmp
lret
mov
in
pop
pop
xor
popa
push
popf
cltd
or
xchg
das
mov
sbbb
aam
cmp
and
stos
push
lahf
mov
icebp
xor
and
mov
ljmp
lret
mov
fwait
xchg
data16
add
xor
test
sbb
test
lods
data16
clc
cltd
add
mov
push
mov
xor
add
repnz
hlt
inc
sbb
jno
lret
cli
lcall
clc
adc
inc
rcr
pop
scas
adcl
rorl
iret
mov
jge
int
dec
xchg
es
mov
or
leave
jecxz
lds
decb
or
fimull
dec
inc
nop
mov
lock
scas
pop
push
xor
int3
lock
pop
mov
mov
inc
push
jno
cwtl
xor
sbb
int3
pop
mov
icebp
mov
cmc
stc
lcall
aam
pop
scas
pop
sahf
mov
adc
sub
lahf
pop
mov
mov
or
ret
push
mov
sub
shl
lcall
leave
imul
sbb
xor
mov
lods
jne
ljmp
or
into
lock
ljmp
aam
sub
fsub
or
test
and
add
dec
sub
xchg
sti
cmp
pushf
cmc
add
push
icebp
mov
ds
in
add
cwtl
or
call
jg
les
mov
xor
in
enter
xchg
and
mov
insl
xchg
aad
add
insl
jge
inc
mull
into
addl
xchg
icebp
pop
jp
test
push
sahf
sbb
inc
xor
cmp
fiadds
lds
mov
jge
mov
jne
repnz
push
and
xchg
sbb
inc
aam
xchg
out
fcmovnbe
cld
repz
inc
lock
cmpsb
stc
pop
mov
mov
jae
cmpsb
lds
sub
daa
mov
hlt
push
cltd
imul
xor
mov
mov
jae
les
add
dec
pop
fwait
icebp
cld
pop
shrl
push
mov
and
add
int3
sbb
test
into
add
loopne
cmp
call
jb
lea
cmc
jo
pop
push
ror
jg
test
out
sub
stos
adc
pop
jl,pt
inc
mov
in
dec
adc
lcall
xor
xlat
aaa
mov
lods
jg
sub
add
dec
sub
inc
xchg
push
lahf
cld
sti
sub
jno
js
or
mov
fmull
jne
dec
mov
daa
adc
ljmp
pop
icebp
jge
cmp
clc
push
push
add
xor
sub
in
in
mov
shll
incl
movsl
mov
mov
pusha
cld
sub
add
stos
jge
xchg
hlt
out
dec
add
out
in
or
fxch
sahf
loop
outsb
xchg
lds
xorl
push
cmpsb
xor
pop
lock
in
inc
push
sbb
dec
lods
mov
mov
sub
mov
xchg
out
mov
test
and
jno
lds
sub
scas
xchg
xchg
movb
sbb
dec
push
xor
mov
arpl
push
xchg
and
fidivl
stc
mov
pop
adcb
cli
mov
cmpsl
loope
xor
sbb
out
std
cli
fistpll
movsl
insb
aas
mov
inc
cmp
lcall
movsl
fisttps
fmulp
mov
mov
cmp
sbb
mov
mov
iret
inc
push
push
call
fldl
or
xchg
int
popf
inc
aas
pop
js
stos
and
fcmovnb
push
jge
adcl
push
fisttpl
fwait
pop
add
and
mov
push
and
fnsave
jg
clc
xor
cltd
fdivl
mov
sbb
icebp
jecxz
pusha
daa
fs
fmul
xor
test
into
dec
jnp
push
outsb
repz
js
por
push
mov
rdpmc
sbb
outsl
mov
add
lods
test
jno
add
mov
mov
js
sbb
nop
pop
fwait
cmp
xchg
js
mov
repz
test
fmuls
pop
inc
inc
mov
addr16
movb
jne
sub
mov
xchg
fstps
stos
stos
push
push
push
js
dec
not
das
inc
sbb
mov
cltd
std
arpl
jno
pop
inc
in
lods
movsb
fsubr
and
mov
mov
aam
je
inc
sbb
pop
pushf
int3
pushf
adc
mov
inc
loope
fst
xchg
xchg
mov
and
outsb
es
notb
inc
jae
mov
in
mov
adc
jo
and
in
inc
sbb
cld
push
les
mov
out
fistpl
mov
in
xchg
mov
int
cmpsb
daa
pop
enter
push
xor
popf
mov
test
mov
or
add
xchg
fistpll
mov
testb
xchg
adc
ret
andl
cmp
cs
aaa
loopne
leave
call
mov
rcrb
or
inc
test
das
shrb
sub
lock
testb
sbb
add
sahf
call
mov
fcoml
fnclex
cmp
sub
lcall
fstps
fs
adc
cwtl
enter
mov
mov
jno
push
nop
pop
ret
inc
pop
call
push
xor
sub
inc
stos
test
mov
mov
mov
leave
mov
movsl
insl
inc
mov
mov
popl
pop
clc
sub
inc
in
enter
outsl
jl
sub
pop
ljmp
cmp
inc
jne
mov
mov
mov
iret
sub
jns
cltd
aaa
lcall
fucomip
stc
push
xchg
lds
jnp
repz
or
mov
scas
push
xchg
roll
cmc
test
fucomi
test
xor
dec
shlb
jo
lock
icebp
or
stos
jle
push
movsl
movsl
jne
push
fistl
cli
sbb
and
lods
mov
pop
jnp
aad
jnp,pn
cltd
frstor
xchg
clc
push
les
pop
mov
popa
cmpsb
fildll
lret
add
iret
scas
inc
in
addr16
gs
mov
xor
inc
add
dec
ja
jns
repz
add
and
stos
roll
loopne
lret
popf
dec
bound
cmp
sarl
cli
addb
jo
inc
jecxz
enter
aaa
push
call
mov
fistpll
out
jbe
mov
inc
fs
decb
pusha
imul
inc
stc
lea
jo
mov
sub
push
sti
adc
shlb
add
rcrl
test
jae
fcomps
loope
push
sub
mov
sti
mov
cmp
mov
jbe
jge
lock
call
loop
inc
daa
fsubrs
iret
mov
adc
mov
adc
add
inc
mov
fistpl
mov
pop
sahf
xchg
aam
adc
sbb
xor
addb
mov
shlb
fadds
mov
popa
jecxz
loop
pop
dec
hlt
decl
and
mov
push
jae
test
fistpll
sbb
jl
in
out
iret
sahf
movsl
cs
scas
jmp
sbb
gs
cmpl
aam
push
out
iret
jb
mov
sbb
aam
js
lret
inc
inc
or
sub
imul
sub
filds
pop
or
dec
or
add
popa
lea
mov
adc
or
inc
push
out
xor
in
test
dec
xchg
xchg
xor
std
js
and
ds
shll
xchg
insb
fucomip
test
jecxz
push
sub
lea
xchg
dec
and
mov
jle
cmp
sbbb
mov
les
cmp
xlat
push
addr16
ds
push
lea
mov
mov
sbbl
xchg
dec
sub
jnp
lods
rcrb
mov
pop
and
jnp
mov
ds
jbe
or
add
and
sbb
fwait
movsl
frstpm(287
inc
push
fwait
sbb
xor
dec
mov
in
roll
outsb
imul
ret
es
xorb
mov
gs
jmp
push
mov
sub
or
dec
dec
fists
mov
adc
fs
leave
dec
popf
pusha
cmp
bound
dec
and
in
pop
mov
xchg
sub
mov
or
mov
cmp
cmp
ljmp
mov
jp
mov
xchg
mov
and
clc
add
movsl
movsl
cmpsl
pop
push
cltd
out
xor
test
jmp
loopne
pop
js
mov
jnp
mov
out
xor
sub
lds
xor
mov
test
fcoml
lret
loop
push
jne
das
cmp
repnz
sbb
stos
fcmovb
ret
mov
push
or
dec
pop
das
outsb
test
mov
pop
push
jle
popa
mov
mov
scas
sbb
lahf
pop
test
ret
xchg
push
dec
lcall
jno
jne
scas
ss
push
dec
out
jmp
ret
in
xchg
xchg
cmp
and
cmpsl
daa
xchg
out
sub
xorb
addr16
imul
adc
jbe
pop
gs
xor
int
jne
adc
or
sarb
jb
jge
out
xlat
adc
jp
mov
daa
dec
fwait
push
add
push
mov
loop
subl
jg
fwait
mov
js
xor
mov
push
mov
jl
in
jnp
or
jecxz
ret
inc
xor
jb
push
addb
mov
imul
dec
pop
ja
fsubs
mov
sub
push
dec
adc
push
sarl
std
jbe
sub
lret
scas
int3
stos
inc
and
rcrb
xchg
and
jbe
and
jp
mov
aad
and
cli
nop
cmpsl
jecxz
sub
and
rcr
es
mov
daa
fs
test
cmp
ror
movsb
repnz
test
cmp
cmp
int
push
mov
shlb
add
call
lcall
addr16
pop
mov
mov
mov
into
daa
loopne
xchg
setle
or
inc
fwait
mov
sub
sbb
sub
jmp
loopne
je
push
push
leave
lea
push
push
mov
sbb
cmpsl
xchg
pop
adc
mov
out
aad
add
sbb
xor
bnd
lock
adc
mov
int
jmp
cmp
and
ljmp
and
cmp
sbb
jnp
gs
insl
pop
and
dec
aas
ja
je
ret
idiv
lahf
inc
cmpsl
xor
and
dec
and
mov
sbb
sub
or
push
sub
loope
jnp
sub
xchg
add
jno
cmp
dec
mov
test
mov
push
ja
cmp
mov
push
rorl
sub
in
xchg
cmpsl
mov
push
pop
mov
inc
pop
rol
pop
mov
sub
mov
pop
push
dec
jl
xchg
sbb
mov
pusha
cmp
fneni(8087
aas
fbld
sub
jg
movsl
xor
jge
das
jno
mov
les
sub
pop
outsb
pop
adc
xchg
not
fimull
and
and
mov
in
aas
xor
mov
pusha
ljmp
and
and
lret
or
cmp
mov
divl
cwtl
sub
sub
mov
push
push
jle
nop
mov
adc
cmc
push
mov
test
inc
and
shlb
insb
add
jl
sarl
add
add
sti
sbb
notb
push
into
inc
iret
pop
jnp
lods
cmp
in
sub
enter
test
les
mov
push
std
add
fcmovnb
and
push
shrl
inc
out
dec
sub
and
leave
add
call
lret
add
outsl
incl
dec
jecxz
adc
pop
call
inc
arpl
clc
cli
scas
mov
punpcklbw
mov
pop
inc
iret
xor
cmp
pop
jnp
mov
push
mov
dec
add
stos
adcl
stc
pop
in
pop
pop
and
push
xchg
jb
cltd
xor
push
push
clc
out
or
add
repnz
xor
aam
test
adc
add
lock
imul
insl
lea
imul
test
es
pop
ds
xor
sbbl
mov
lahf
sbb
pop
jo
mov
xor
push
sbb
movsl
cld
cmp
jg
pop
dec
mov
shrl
inc
jbe
xlat
jg
cmpl
push
adc
lods
pop
push
fcomip
xchg
cmc
int3
iret
sbb
dec
sub
mov
test
pusha
or
ljmp
mov
lret
sub
je
pop
mov
add
ror
clc
push
in
adc
and
notl
in
xchg
xor
mov
arpl
divb
mov
jg
add
fidivrl
mov
pop
mov
lock
jb
lret
imul
repnz
mov
test
sbb
jb
call
sbb
sub
and
push
jb
or
pusha
outsl
jb
sbb
cwtl
push
xchg
adc
sub
sbb
push
arpl
mov
push
scas
shrl
in
ss
pop
cmc
fadds
adc
mov
xchg
add
shl
mov
xchg
mov
sbb
and
push
jmp
cmpsl
mov
adc
mov
out
jp
insl
mov
mov
dec
iret
ret
push
pushf
lahf
or
cmp
sarb
icebp
mov
flds
inc
shr
int
out
or
inc
fstpl
fcomi
stc
fildll
incl
ss
xor
cmpsl
pop
out
push
ja
sbb
dec
loop
fildll
add
pop
mov
shrl
loopne
fnstenv
xor
mov
je
mov
fdivp
mov
imul
pop
add
call
loope
inc
shl
cmp
fisttpll
ss
ret
mov
repnz
fisttpl
jnp
push
add
mov
into
leave
out
add
dec
dec
pusha
inc
stc
mov
xor
in
decl
or
aam
sub
stos
xchg
adc
je
mov
add
sbb
shrb
out
cmp
mov
outsb
push
ljmp
jb
repz
sbb
enter
push
inc
sbb
and
cmpsl
jmp
pushf
xchg
jae
jbe
cmp
or
push
lret
pop
mov
cltd
aam
push
lret
test
mov
inc
data16
fsubrl
pushf
roll
cmp
pop
je
or
fcompl
imul
add
xor
fidivl
and
ja
xchg
xchg
popa
out
int3
out
js
call
dec
pusha
sub
fnstsw
sbb
call
aad
insb
xchg
lea
mov
dec
mov
jmp
insb
pop
xchg
add
xchg
fldt
in
in
andps
cmp
add
push
mov
xchg
loope
les
scas
cmc
fimuls
push
sbb
adc
jge
cmpsb
and
and
mov
jne
mov
cmp
icebp
scas
jo
and
adc
xchg
cs
jbe
jl
cmc
push
sbb
cmp
dec
inc
addl
mov
pop
imul
outsl
mov
in
fcoml
mov
pop
mov
arpl
xor
notb
xlat
cld
shlb
add
enter
inc
loop
mov
mov
lea
sti
cmpsl
inc
cmp
dec
xlat
push
mov
std
popa
iret
rolb
and
mov
hlt
or
ja
cmp
and
sbb
cmpsb
mov
stos
sbb
shlb
xchg
pop
fstps
jecxz
xchg
call
in
and
lahf
jo
pop
mov
xchg
fiaddl
ds
popf
add
repz
mov
stos
out
ljmp
mov
adc
sbb
jo
ud0
sbb
leave
daa
sub
mov
mov
test
mov
paddb
push
adc
jecxz
leave
inc
and
out
lcall
aaa
lcall
call
cmpsb
or
pop
dec
daa
cld
sub
mov
fiadds
jo
in
fistpll
add
sub
or
bound
mov
lret
xchg
jb
xor
xchg
div
or
mov
in
mov
inc
in
loope
in
pop
inc
jle
pop
lods
mov
inc
add
adc
add
sub
int3
out
aaa
mov
mov
nop
outsb
adc
sbb
cmp
bound
aad
ds
mov
leave
mov
negb
test
sub
push
ss
pop
pop
popl
ficoms
in
jp
fdecstp
xlat
outsb
int
out
scas
popf
dec
jg
jb
mov
ss
jne
xchg
imul
xchg
leave
pop
pop
hlt
mov
pop
xchg
and
iret
lock
mov
fisttps
aaa
testl
push
lods
or
ljmp
pop
push
int
push
jb
aam
lods
iret
cld
xchg
pop
xchg
call
imul
int3
int3
mov
push
pop
dec
outsl
loop
push
dec
xor
push
repnz
test
repnz
adc
push
test
std
mov
push
sbb
lods
adc
dec
in
add
ljmp
enter
mov
and
insb
adc
sub
xlat
and
outsl
clc
out
pop
test
movsb
dec
fs
fwait
or
xor
js
cltd
fisttpl
cmp
stos
lds
pop
or
movsb
or
stos
out
and
or
push
xchg
mov
pop
pop
cmp
insl
or
and
les
nop
push
adc
jb
fstpl
sub
cmc
lcall
pushf
cmp
add
adcl
xor
add
or
add
das
fnsave
idivb
sub
cmp
clc
loop
sar
int
push
cmpsl
pop
sub
xor
sti
dec
xchg
frstor
das
test
sbb
jbe
sbb
cmpsb
jle
outsb
sub
in
mov
dec
adc
mov
add
outsl
sub
repz
cmc
xchg
or
es
lret
out
lea
cmc
and
adc
add
in
fildll
arpl
cli
lods
outsl
dec
inc
loop
shll
cmp
and
xchg
mov
std
icebp
xchg
inc
lds
shll
push
lcall
xchg
inc
mov
std
out
rcrl
cmpsb
fildl
push
in
mov
rclb
xor
jno
jmp
and
daa
mov
shl
repz
shll
and
fnstenv
out
loope
cmp
add
pop
jle
test
pop
sti
fwait
add
pop
mov
rcrb
mov
popa
neg
lea
enter
sbb
cs
pop
dec
dec
xor
adc
lea
push
push
dec
lods
movsb
push
mov
xor
cmp
cmp
call
or
loopne
sti
int3
cmp
loopne
std
insb
shl
enter
mov
loope
ret
clc
imul
aam
je
imul
pop
sahf
cmp
jbe
cmc
xchg
pushf
mov
loope
mov
stc
popf
in
xor
js
push
add
dec
cmp
xchg
ja
dec
lds
repz
mov
pop
flds
jno
mov
push
movsl
jns
enter
adc
stos
les
cmp
sbb
in
data16
sbb
iret
leave
adc
adc
push
loope
and
scas
js
push
xor
nop
es
xor
add
mov
jmp
dec
mov
out
mov
fs
jo
add
add
jb
aas
cmp
cmp
lods
adc
inc
mov
int
jo
lods
xor
dec
das
sub
sub
cmp
xor
inc
int
fldl2e
or
inc
push
test
neg
sbb
push
test
enter
push
sub
test
xchg
imul
repnz
sbb
dec
stos
pop
test
arpl
or
adc
lock
push
test
std
dec
xchg
roll
jl
or
cmpsb
les
mull
mov
lock
arpl
outsb
repnz
add
inc
sbb
std
push
cmp
xchg
int
hlt
pusha
loopne
inc
loopne
lahf
lea
xchg
inc
shlb
cmpsl
and
mov
push
movsb
sbb
jbe
xor
stos
sub
xchg
xchg
mov
fcmovnb
nop
fwait
sti
paddw
mov
scas
fwait
mov
sub
ja
pop
shl
mov
mov
out
add
push
iret
lahf
call
repnz
jnp
sub
sub
xlat
int3
rorl
icebp
fs
cmpl
sub
add
scas
scas
pmulhw
divb
and
movsb
pop
sti
and
cmp
mov
rcr
mov
mov
pop
aad
mov
mov
lds
xchg
mov
pop
mov
mov
in
repz
sbb
outsl
test
adc
push
movsl
rorl
jl
pop
loope
loop
mov
mov
and
inc
icebp
popa
sti
ds
out
adc
movsb
mov
sbb
push
aad
test
ret
stc
mov
jne
mov
lahf
addl
jo
ljmp
dec
mov
jp
jo
cmp
adc
ljmp
shll
xor
loope
add
sub
jbe
mov
rcr
aas
in
popf
iret
sub
cmc
sbb
scas
popf
xlat
mov
and
loopne
mov
sti
lds
decl
or
dec
pop
sarl
clc
pop
adc
nop
into
sbb
ja
dec
add
inc
sbb
push
lods
fsts
jle
fsubrs
pusha
and
rcrb
and
ret
loopne
push
fwait
addl
sahf
xchg
push
out
pop
lods
mov
and
cltd
clc
sbb
pop
jecxz
fstpl
imul
ficompl
cmp
sarl
mov
aam
in
popf
push
jmp
ja
dec
mov
push
and
addr16
sub
movsl
push
fcoml
fs
pop
outsb
lea
aam
jg
mov
pop
xor
push
sahf
mov
push
pop
jg
jecxz
mov
push
adc
xor
xor
mov
nop
xchg
pop
mov
aas
out
pop
call
jecxz
mov
add
add
cmc
nop
mov
mov
or
inc
jno
dec
mov
inc
xor
cs
xchg
inc
xor
mov
dec
lea
outsl
mov
sbb
cmp
ja
push
aad
sub
mov
sti
out
out
arpl
shrb
test
adc
sbb
push
xchg
push
xchg
add
or
sbb
lods
int3
sbbl
cmp
jnp
sbb
cs
mov
cmc
movsl
xchg
cld
and
push
cli
push
imul
sbb
out
bound
mulb
das
nop
mov
sbb
in
iret
stc
cmp
mov
test
test
imul
and
mov
inc
ss
ror
mov
insl
gs
cs
ret
adc
in
in
js,pt
ret
jle
sbb
mov
jne
divb
mov
xchg
das
cmp
inc
mov
lret
addr16
imul
pop
dec
inc
pop
mov
xchg
lock
aas
xor
fwait
je
add
leave
sti
fisttps
lret
or
data16
enter
mov
mov
or
scas
enter
or
pop
in
sbb
cmp
push
inc
or
jnp
xor
cli
add
icebp
cmp
je
xchg
jl
lods
jo
mov
adc
push
push
push
in
sbb
stos
dec
insl
std
pusha
aaa
pop
lret
inc
xchg
aam
or
push
int
ret
dec
rcll
or
stos
outsb
add
adc
out
mov
sbb
dec
test
hlt
mov
lods
sub
jae
negb
clc
pop
sbb
fcompl
pop
es
stos
lods
negb
arpl
repz
and
mov
jb
inc
sbb
pop
je
jecxz
mov
cmp
aam
cld
and
shll
adc
xor
imul
cmpsb
xlat
inc
mov
clc
mov
scas
aad
push
push
dec
sbb
stc
leave
cmp
mov
sbb
and
jne
pop
push
push
jbe
rol
mov
shll
and
iret
sbb
or
or
cmp
jl
in
xchg
sbb
sbb
jmp
push
inc
out
div
popf
test
into
nop
cmc
sbb
popf
push
xchg
push
jo
jbe
jb
nop
mov
add
pop
pop
jnp
xor
dec
rorb
scas
fistps
dec
out
pop
pop
ljmp
inc
mov
out
push
hlt
ds
mov
push
fidivrl
hlt
insb
sub
inc
insb
cld
mov
mov
ret
mov
pop
add
pop
or
jge
pop
scas
test
push
add
adc
and
jp
jp
loopne
sbb
mov
int3
xchg
mov
in
ret
loop
pop
pop
cmp
rolb
leave
and
aad
clc
xchg
and
les
frstor
xchg
fucomip
add
mov
fwait
orb
pop
clc
push
rorb
mov
stc
jnp
dec
mov
adc
mov
pop
lds
fucomip
jle
pop
push
insl
xchg
cltd
cmpsb
or
call
lret
adc
and
fcoms
push
in
xor
insl
dec
pop
xchg
cli
pop
or
cmpsb
and
pop
mov
push
loop
and
push
lret
cmp
sbb
adc
pop
bnd
mov
into
pop
sub
andl
test
jle
lcall
out
aaa
xor
sbb
lock
loope
xor
iret
xchg
or
aas
or
inc
sbb
lcall
jl
in
adc
repz
sti
mov
or
fdivs
mov
aam
int3
popa
xchg
lods
es
xchg
out
dec
int
sub
sbb
testl
push
enter
and
js
fprem1
inc
cmpsl
mov
add
dec
in
in
mov
loopew
std
pusha
out
dec
xchg
mov
xchg
cltd
dec
pop
lods
lds
xor
add
shr
cwtl
and
lret
mov
adc
js
mov
xchg
lahf
hlt
ljmp
insl
mov
dec
hlt
mov
push
sub
pusha
addr16
loopne
imul
das
push
or
pushf
or
cmpsb
sub
adc
out
dec
int3
adc
cs
test
call
mov
icebp
pop
jno
enter
sbb
cltd
loop
loope
sub
hlt
ja
xchg
adc
cmc
xor
inc
ret
xlat
push
push
dec
xor
xor
adc
cmc
movsl
add
int
sub
in
jo
daa
out
sub
mov
jecxz
ja
testb
sbb
scas
inc
sbb
pusha
dec
pop
inc
test
and
les
jno
mov
daa
mov
mov
cs
adc
jae
mov
jmp
cmc
loopne
and
iret
rcl
js
pop
mov
addr16
aad
cmc
jmp
add
aam
jg
jg
xor
outsl
stos
push
jne
mov
je
fwait
test
out
mov
push
or
cli
movsl
dec
mov
lock
and
push
je
jle
add
lret
popf
push
ss
cwtl
dec
adc
pop
mov
mov
mov
mov
and
fdivrl
and
aas
sbb
jmp
inc
inc
and
xorb
hlt
cmp
icebp
mov
aas
fimull
sub
add
xlat
inc
push
jle
or
sub
outsb
mov
lods
shlb
xchg
rolb
mov
mov
sub
cmc
ret
cli
pusha
std
mov
aad
aaa
sbb
xor
inc
xlat
test
mull
add
adc
xchg
sub
and
loop
test
inc
ret
call
aad
movsl
cmp
outsl
in
adc
mov
xchg
test
dec
push
outsb
iret
ret
push
sbbl
mov
insl
scas
cmpb
lds
cwtl
leave
fidivrs
es
jbe
cs
xchg
test
sub
jo
sbb
xor
test
gs
inc
xchg
sahf
aad
call
and
incl
mov
jge
mov
sbb
fs
test
sbb
xor
fnsave
and
in
jnp
xor
cmp
jne
pop
in
pusha
dec
inc
xchg
xor
adc
add
jnp
jl
aad
addr16
mov
adc
mov
and
xor
repz
xlat
cmp
inc
mov
in
movsb
xchg
ret
jns
xchg
leave
fnsave
xchg
mov
dec
lds
aas
shll
stos
iret
xor
xchg
in
mov
xchg
push
fiadds
pop
mov
dec
cmp
lea
xchg
cmp
inc
int3
and
jg
in
in
in
hlt
hlt
sub
fcoms
inc
out
adc
shrl
jecxz
daa
mov
cmp
mov
mov
scas
push
inc
cmp
popf
pushf
jns
lahf
lret
and
outsl
stos
fwait
jecxz
cmpsb
sbb
xchg
mov
rcl
xchg
xchg
adc
fnsetpm(287
fbstp
push
cmp
mov
jo
add
scas
mov
lock
xchg
shlb
push
mov
fisttpl
jmp
mov
aaa
stc
aaa
ljmp
xor
pop
sbb
xchg
mov
fdiv
aam
push
inc
pushf
pop
jno
hlt
cltd
repz
dec
sub
fimull
mov
xor
stos
fstpl
cmp
sahf
sar
ljmp
insb
or
jecxz
fistpl
movsl
hlt
dec
and
aas
add
mov
inc
push
jp
mov
fnsave
push
cmp
testl
testb
push
aad
jge
ret
pushf
xchg
aaa
adc
sub
adc
divb
std
jge
add
adc
mov
scas
paddq
jo
in
jb
xor
inc
jb
xlat
push
mov
push
adc
or
sti
push
inc
daa
jnp
stc
push
sub
adc
mov
cmp
mov
mov
clc
jp
pop
fs
jecxz
mov
faddl
add
or
push
jle
and
add
scas
dec
xchg
xchg
xchg
ds
xor
pop
int3
sbb
rolb
out
mov
stc
add
mov
out
int
out
ljmp
jmp
lods
dec
and
jl
dec
out
fwait
inc
push
lret
stc
and
sbb
mov
dec
aaa
lret
xchg
xchg
jae
mov
mov
cmp
and
and
xchg
dec
je
jecxz
iret
jo
loop
aad
or
in
mov
enter
lcall
mov
or
stc
jo
pop
pop
in
and
in
movsbl
or
mov
adc
add
push
bound
fistpl
inc
jmp
jecxz
lods
cmpsl
cmpsl
jbe
cmpsb
mov
adc
bound
jge
xchg
fildll
xchg
rol
vunpckhps
jmp
out
pop
push
xlat
lcall
pop
xchg
std
lods
lret
xchg
dec
cli
jp
int3
xor
mov
test
lods
add
call
test
fs
pop
das
jle
stos
mov
mov
sub
mov
hlt
adcl
rorl
sti
fnsave
pop
andl
dec
dec
sbb
pop
outsb
stc
icebp
test
cli
sar
lods
call
and
mov
mov
dec
and
out
pop
cmp
pop
cwtl
jge
mov
in
xor
xchg
call
sar
addr16
ficomps
icebp
push
inc
jae
sub
dec
clc
pop
sub
in
int
fildl
xor
pop
fcoml
test
xchg
fcmovb
add
xchg
fcom
in
pop
cmpsb
add
addl
rcrb
add
and
xchg
or
out
ret
jb
out
mov
adc
or
jb
jbe
je
out
dec
sub
imul
jne
xchg
popa
pop
add
scas
mov
lahf
push
out
sub
insb
inc
cmp
fisubrs
ds
cltd
pop
bound
jo
popf
insb
call
mov
vpsubb
sub
xor
inc
xlat
mov
js
sbb
stos
cld
popf
mov
gs
in
push
sahf
xor
gs
fildll
or
pop
test
adc
sbb
pop
xchg
arpl
jns
or
sbb
mov
xchg
inc
adc
fcoms
leave
cmp
ret
loopne
cli
cwtl
rcrb
in
xor
add
xchg
scas
out
imul
lar
xchg
clc
andb
xlat
outsb
add
mov
xor
popf
rcrl
in
std
pop
ss
clc
or
cmp
sub
test
clc
in
sub
fists
ljmp
add
dec
ljmp
je
into
cli
or
mov
mov
add
ffree
lock
test
popf
mov
imul
cmp
inc
lock
ss
jge
es
dec
inc
push
lea
pop
mov
lahf
xchg
shll
lds
mov
jl
xchg
and
mov
inc
pusha
repnz
xchg
loopne
subl
loope
lcall
mov
sbb
push
out
xor
cmpsl
sbb
or
xor
sub
push
sub
mov
push
ret
or
mov
test
and
pop
je
bound
loope
mov
add
or
cmp
add
cmp
xchg
mov
add
mov
out
out
mov
je
out
out
out
mov
cmpl
mov
push
cltd
shrl
int3
jmp
push
cltd
inc
addr16
jmp
cmpsl
aam
xchg
sbb
ljmp
shll
sub
frstor
clc
in
jmp
pushf
div
cmp
lds
push
pushf
jle
pop
ljmp
mov
inc
mov
sub
inc
clc
mov
mov
movsl
mov
lods
sub
mov
movl
sbb
add
pop
xchg
into
popf
jecxz
inc
xchg
bound
jns
and
mov
into
iret
out
testb
into
pop
inc
mov
insb
hlt
aam
daa
int3
shll
aas
stc
xor
into
int
fcmovne
jp
push
call
pop
fmul
pop
stos
add
cmc
test
out
sti
mov
fs
int
lcall
out
mov
dec
dec
int3
sub
jnp
ja
xchg
xchg
xor
addb
das
sub
jb
mov
adcb
adc
cmp
adc
data16
adc
test
int
aaa
xchg
lods
fildll
fdivrp
sub
mov
mov
xchg
loope
dec
adc
loop
ja
jl
xchg
out
dec
in
push
dec
lds
insb
ret
xor
movsb
xchg
mov
jne
clc
scas
pop
push
cmp
dec
in
ljmp
pop
dec
pop
lahf
std
fnstsw
orl
fdivrs
fwait
enter
push
dec
xor
mov
pop
mov
cmp
dec
sub
pop
jbe
cmp
pusha
jge
lret
pop
or
repnz
movl
inc
or
ljmp
rcll
loop
pop
mov
mov
nop
aaa
mov
sbb
jg
fistpll
sub
lods
dec
push
js
xor
xlat
sahf
cmp
int3
mov
jg
aad
cwtl
mov
add
aad
iret
aam
push
jg
mov
sarl
jbe
mov
ret
insl
andb
jmp
jl
in
lahf
cltd
jnp
sub
into
inc
mov
cwtl
lea
les
dec
loope
pop
xchg
or
xchg
inc
mov
repz
or
cmpsb
pop
nop
cmc
int
aas
jae
insl
daa
sub
sbb
fistpl
pop
sti
outsb
ja
and
fwait
jg
mov
out
inc
jmp
sbb
je
dec
into
data16
ss
push
dec
inc
mov
pop
and
call
loop
or
fbld
sbb
movsl
pop
xchg
loope
pop
dec
add
leave
or
xor
insb
subl
gs
rcrl
mov
mov
bound
jne
cltd
shr
je
jmp
mov
xchg
adc
pop
int
aam
adc
subl
dec
inc
jmp
loopne
mov
inc
fistpll
imul
lret
in
rclb
sarb
adc
push
pop
sbb
in
adcb
ret
sbb
stos
xchg
loopne
pop
cmp
and
sub
jne
sbb
sbb
xchg
inc
xchg
mov
cli
mov
push
jecxz
push
or
es
imul
sbb
and
les
jno
push
sbb
std
sbb
dec
inc
push
enter
ret
in
push
lea
push
pop
dec
push
xchg
test
adc
push
enter
xor
rcll
faddl
sar
addr16
jecxz
cmp
jmp
push
ljmp
mov
scas
fiadds
mulb
enter
jg
repz
pop
test
cmpsl
data16
aam
jne
daa
mov
sbb
movsb
cmp
jne
mov
daa
es
lods
movsl
int3
outsb
int
nop
aaa
jnp
imul
nop
mov
mov
xor
sbb
test
psrad
es
adc
cwtl
pusha
jb
sub
mov
scas
push
sub
out
pop
inc
dec
and
add
pop
jge
inc
pushf
lock
jge
fs
sub
addr16
test
jns
cmpsb
out
movsb
std
fistpll
insb
hlt
aad
inc
inc
add
mov
nop
stos
stos
in
lcall
sbb
int3
or
cli
push
dec
cld
push
mov
push
jne
sbb
movsl
xlat
pop
test
push
out
into
sub
popf
stos
dec
sti
cmp
icebp
sbb
popf
stos
mov
pop
jno
stos
addl
jno
nop
imul
xchg
or
cmp
pushf
ret
std
dec
xor
jb
ja
inc
inc
jp
mov
dec
lahf
dec
sbb
jns
sti
lock
sahf
inc
or
adc
jp
addr16
addb
loope
mov
pop
and
mov
dec
xor
pusha
add
sbb
cs
adc
add
sub
movsb
pop
int
mov
and
out
loopne
lea
sbb
fwait
mov
test
mov
lahf
incb
movsb
repnz
cli
je
xchg
enter
fidivl
mov
jle
shrb
add
addr16
int
sub
xor
mov
jge
adc
inc
jbe
icebp
jecxz
out
mov
stc
arpl
jne
mov
push
sub
xor
dec
push
adc
fnstenv
lea
xchg
cmp
cltd
imul
dec
ss
add
lods
pop
inc
mov
mov
lcall
xlat
stc
xor
pop
lods
insl
jns
mov
mov
fwait
adc
and
pop
mov
notb
mov
pop
push
aam
ret
nop
pushf
insb
mov
test
xchg
sub
addr16
shlb
xchg
dec
mov
xchg
mov
fistl
jns
ror
aam
hlt
inc
ficomps
xlat
cmpsl
lcall
mov
mov
repz
pop
xor
push
dec
pop
cld
leave
movsb
adc
lods
fcoml
mov
mov
mov
das
mov
mov
popf
lods
jnp
jmp
testb
loop
lret
stos
xchg
push
rcl
hlt
clc
inc
mov
lds
push
jbe
fistpl
sub
jp
xlat
mov
xchg
xchg
out
inc
in
sub
jp
mov
dec
fucom
mov
xchg
testb
and
lret
es
fistpll
pop
add
sbb
xor
adc
add
xor
adc
cmp
dec
pop
lock
xor
push
ret
in
dec
and
test
inc
xor
push
add
cmpsb
sbb
andb
pushf
test
scas
or
xor
mov
mov
test
cmp
mov
jmp
cmpl
cld
enter
imul
mov
ficoms
andb
daa
dec
imul
or
pop
adcb
xor
rol
cmp
outsl
inc
std
stos
sub
mov
int3
movsl
ret
sbbb
inc
jae
fidivl
in
add
sti
aaa
cvtps2pd
cli
xchg
push
out
xchg
sbb
jbe
frstor
stos
pusha
mov
in
add
xor
inc
sbb
jbe
lcall
adc
jecxz
xchg
lods
pop
ljmp
fcoms
push
lods
adc
push
lret
mov
int3
rclb
mov
xchg
lock
xor
add
push
and
cmp
mov
cmp
cmp
add
cld
xorb
jmp
fisubrl
int3
push
das
movsl
scas
push
mov
push
inc
jp
adc
insb
xor
pop
dec
test
adc
sti
std
je
mov
mov
add
outsl
cmp
mov
mov
inc
mov
push
xor
mov
xlat
loop
xchg
xlat
push
mov
cmp
cs
jnp
outsb
iret
or
aaa
out
ja
xchg
movsb
movl
orl
hlt
fisttpl
cmp
lcall
cmpsl
jbe
push
adc
jp
fs
and
enter
inc
lds
jns
in
cltd
inc
push
pop
push
hlt
cmp
aaa
push
aas
gs
lret
pop
inc
lret
fnsave
popf
in
mov
xor
repz
dec
loopew
repnz
push
inc
ds
fldenv
imul
xor
dec
aas
push
jge
sub
xor
gs
fsubrs
xchg
lret
shl
or
aam
xchg
lahf
add
pop
out
and
mov
out
jnp
fisubs
stc
cli
xchg
sbb
push
lahf
inc
hlt
sub
sub
and
inc
repz
cmp
pop
shll
je
cld
push
sbb
jo
roll
adc
cmpsl
mov
cmpsb
mov
push
inc
mov
scas
int3
jnp
fsubs
pop
jne
clc
and
pop
and
movsl
movsl
aad
addr16
cmp
push
cld
mov
cmpsl
lea
lock
shrl
jne
pop
sbb
iret
into
subl
hlt
imul
add
and
jecxz
mov
xchg
shll
push
mov
dec
mov
xor
pop
and
and
adc
iret
repz
sbb
xchg
push
adc
and
cmp
les
ds
xor
xchg
xor
mov
cmpb
push
out
dec
fadds
bound
hlt
shr
fisttpll
mov
mov
imul
sbb
xlat
bound
xor
pop
shr
sbb
jecxz
cmpsl
aad
icebp
jg
ret
jl
inc
cmp
outsb
xor
xchg
in
jnp
sub
or
xlat
xor
lods
xor
push
dec
sbb
orl
ljmp
push
sub
dec
dec
mov
mov
pop
or
es
jl
adc
jo
inc
es
call
lods
stos
stc
dec
stc
std
add
fnstsw
enter
scas
sub
scas
scas
into
test
cs
nop
faddl
dec
lcall
enter
push
push
jns
cmp
xchg
xor
inc
and
xchg
mov
inc
negb
or
inc
test
repnz
jp
gs
mov
or
push
cmp
sub
dec
adc
or
jbe
pop
pop
mov
repz
lcall
and
in
cli
mov
loop
les
insb
jecxz
xor
negb
out
inc
push
into
cmp
sbbb
in
jno
and
ret
xchg
or
pop
ret
call
mov
dec
mov
dec
inc
sbb
leave
sub
xor
xchg
ficoml
cwtl
test
mov
xchg
in
xor
pushf
pop
mov
sar
dec
in
data16
sahf
add
jmp
add
mov
jmp
fdivl
cmp
shlb
adc
or
mov
lahf
icebp
mov
push
aas
xchg
mov
jg
in
das
or
loope
sbb
movsb
push
mov
xchg
inc
pop
out
mov
sbb
pop
mov
mulb
jne
outsb
movsl
or
in
mov
mov
pop
pop
insb
out
mov
cmpsl
xchg
push
fsts
test
ljmp
inc
cmpsl
mov
push
add
mov
jecxz
xchg
sbb
repz
cmp
push
or
les
mov
and
add
and
jp
adc
and
icebp
lret
dec
testl
cmp
push
popa
jne
ss
xchg
jge
movsb
dec
cltd
sub
repz
repz
aas
or
jle
and
in
lods
std
fnsave
add
lret
fcmove
push
add
es
in
xchg
xchg
add
mov
sub
pop
lods
sahf
mov
ret
mov
jb
mov
mov
or
ds
cmp
pop
js
xor
add
sbb
stos
add
xor
mov
mov
fwait
das
sub
mov
inc
xchg
scas
or
dec
dec
int3
mov
dec
fs
xlat
add
or
test
mov
das
gs
sbb
ud2
roll
js
sbb
aam
js
scas
iret
push
inc
lods
adc
shlb
imulb
mov
push
ficompl
mulps
cmp
push
in
shl
or
and
aad
jb
xchg
cwtl
data16
in
adc
popf
sub
mov
fidivrs
cli
dec
and
fwait
xchg
stos
imul
fcmovbe
fucomip
scas
loope
gs
mov
cmp
and
fs
push
and
push
lahf
cltd
xchg
xor
xchg
xchg
fidivrl
incb
push
pop
xchg
pop
int3
dec
test
or
ss
mov
pop
sbb
aad
out
adc
push
ret
push
icebp
out
and
cmpb
mov
lahf
pop
fstp
pop
out
enter
dec
mov
hlt
mov
inc
cs
xchg
pop
std
call
in
pop
and
cmp
mov
scas
pusha
xor
mov
add
pop
enter
push
push
leave
sbb
sbb
jno
and
imul
add
sub
pop
int3
sub
rol
jmp
pop
inc
xchg
or
repnz
leave
dec
lds
or
or
daa
icebp
sahf
jnp
mov
and
in
sub
outsl
out
cli
ja
les
sbb
pop
test
shlb
pushf
imul
sub
mov
out
lea
sub
pop
jo
imul
imul
or
sti
popa
insb
or
push
push
dec
add
sub
mov
cwtl
mov
hlt
push
popf
ljmp
or
mov
and
or
adc
cs
sarl
push
out
sub
sbb
mov
mov
jle
into
jbe
mov
pushf
jbe
and
outsb
out
or
stc
pop
arpl
cmp
addr16
xchg
ja
inc
cwtl
jp
xlat
jl
inc
mov
les
in
outsl
cmp
sarl
mov
es
inc
incb
xor
arpl
mov
xor
test
loope
mov
jnp
shrl
ret
inc
je
pop
sub
sbb
push
cmc
dec
mov
daa
fdivrl
push
jns
cs
xchg
stos
jo
jo
pop
scas
gs
data16
sub
aaa
int
vucomiss
fs
sub
jnp
out
shrl
fadd
repnz
push
flds
jmp
jp
insb
jo
scas
repz
scas
jle
outsb
std
mov
xchg
clc
das
mov
call
cmp
pop
fucom
fiadds
pop
test
lds
pop
popf
or
repnz
outsl
int
imul
lahf
addr16
sahf
lret
rcrl
add
shll
dec
mov
pop
incb
sub
mov
lds
fstps
out
pop
testb
sub
mull
add
or
sub
push
sbb
adc
cmp
sbb
cmp
fcmovnb
jecxz
push
fdivrs
dec
rcl
inc
js
xchg
loop
mov
inc
xlat
xchg
fisubrl
andl
sub
das
aaa
ret
lret
pop
adc
sbb
in
adc
in
cmp
insl
add
out
mull
jge
mov
mov
ror
jbe
loop
jmp
mov
cmp
mov
mov
pop
cltd
jge
inc
sbbl
gs
fisttpl
ds
dec
xor
pop
inc
lea
pop
jg
dec
dec
mov
adc
dec
mov
in
add
jge
sahf
push
loop
std
sub
mov
dec
sub
faddl
stc
scas
mov
push
dec
pop
inc
inc
mov
mov
mov
sbb
lcall
addr16
enter
sti
lahf
ret
xchg
lds
jbe
inc
icebp
xor
testb
loop
out
icebp
jle
loope
or
jmp
lcall
mull
sbb
dec
stos
sbbb
or
aam
ds
imul
mov
nop
mov
lcall
imulb
scas
fidivrl
mov
cs
push
jecxz
pop
mov
ret
push
or
repz
dec
cltd
data16
and
push
mov
frstor
jmp
mov
ja
add
push
fs
mov
decl
inc
push
insb
or
push
add
or
mov
cmpsl
xor
dec
in
ds
mov
les
jno
out
std
aaa
sub
mov
mov
cmp
or
and
sbbl
xchg
jp
pop
mov
jg
pushf
and
pop
pusha
fdiv
pushf
mov
add
mov
mov
fisttps
outsl
fdiv
imull
inc
fsubrl
xchg
out
adc
or
jmp
jne
inc
idivl
inc
jle
push
imul
insb
inc
mov
mov
mov
mov
sarl
mov
rorl
subb
and
into
pop
add
mov
movb
sbb
push
movsl
out
mov
xor
insl
push
add
pavgw
in
fsubl
fxsave
leave
mov
orl
add
pop
addl
ficomps
lahf
insb
and
repnz
ss
pop
mov
push
aam
or
or
incl
inc
out
xchg
cmp
sbb
jecxz
std
cld
fldcw
cmp
dec
jp
insl
clc
out
fs
dec
xor
mov
xor
pop
sbb
xor
fisubrs
jg
push
mov
mov
loope
dec
das
jae
adc
mov
repz
sub
jne
mov
jae
enter
imulb
scas
adc
jl
outsl
inc
dec
push
sub
cmp
lret
xchg
int3
lock
outsl
push
mov
sti
test
popa
inc
jae
mov
lcall
test
insl
insl
arpl
adc
outsb
mov
xchg
adc
or
cmp
push
mov
cli
insl
mov
lcall
pop
jns
mov
xchg
jmp
mov
mov
das
push
rcrl
fdiv
mov
jp
add
mov
daa
mov
xor
mov
mov
or
mov
shl
in
loop
testl
fcoml
imul
xchg
jne
fiadds
stos
jecxz
aas
mov
imul
lods
jbe
pop
lods
sub
int3
or
push
jecxz
loop
add
dec
rcrl
fsub
jge
popf
daa
lcall
or
rorb
mov
mov
pop
mov
inc
adc
repz
xrelease
loop
nop
cmp
sub
jmp
test
or
movb
flds
mov
mov
aas
addr16
jbe
mov
fcoml
cmp
lods
aaa
call
mov
sub
push
jecxz
cs
xchg
int
dec
pushf
lock
mov
ljmp
xor
outsl
sbb
jmp
inc
inc
pop
pop
xor
jg
std
fcmovnb
adc
sub
dec
jb
mov
cmpsb
push
mov
jae
mov
push
sub
test
jae
aam
out
pop
push
lods
pop
or
push
cmpsb
fistpll
int3
jns
sbb
or
pop
pop
cmp
ret
and
push
mov
inc
push
jg
add
xchg
sbb
xchg
outsl
mov
sub
jmp
sbbb
xor
jno
enter
das
js
sbb
xor
dec
and
scas
sub
daa
sub
or
push
sub
nop
sub
stos
cld
mov
repnz
scas
lods
shrl
xchg
cmp
aam
or
sbb
adc
or
mov
dec
mov
jnp
in
lods
sbb
push
mov
dec
jb
addb
mov
sub
adc
data16
add
adc
inc
leave
xchg
mov
pusha
sbb
out
dec
xchg
push
shr
mov
adc
xor
negb
mov
sarb
cmpsl
loope
xor
out
inc
ds
aam
xchg
cmpsl
dec
dec
sbb
andl
sahf
sti
adc
inc
jbe
test
jbe
xor
loopne
push
outsb
jo
dec
insl
jne
add
sti
imulb
shl
cmpsb
mov
fldenv
loope
popf
testl
or
or
popa
andl
add
xlat
in
cmp
pop
add
add
aaa
or
fbld
shll
in
inc
sub
xchg
std
adc
ror
sbb
jl
repz
pushf
xchg
faddl
lock
push
mov
mov
sub
pop
pop
dec
or
aas
cld
andl
repnz
and
and
ja
mov
iret
mov
add
loop
push
jnp
dec
inc
add
jo
xor
enter
xor
push
test
add
pop
cmp
cmp
mov
cmc
js
add
popl
daa
out
stos
sbb
je
lret
rol
mov
outsl
pop
and
mov
rcrl
pop
shlb
pop
pop
mov
sbb
jle
inc
cmp
outsl
or
xor
jmp
in
dec
fstpl
loopne
xlat
fists
xor
sbb
shl
mov
and
lret
cmpsb
incb
mov
jae
add
cmp
div
mov
aad
push
dec
adc
push
cld
cmp
jne
pop
jno
nop
shl
pop
push
and
mov
addr16
xor
pop
incb
stos
mov
pop
dec
mov
mov
mov
out
stos
rorb
int3
add
decb
xor
dec
add
and
add
orl
scas
dec
inc
and
cmp
pop
pop
jbe
inc
push
sarl
lock
push
xchg
xchg
xchg
mov
lcall
cmp
sahf
cmpsb
data16
andl
nop
push
add
pop
rcrb
pop
aaa
decl
pop
mov
test
xor
sbb
cmpl
pop
xchg
sub
jle
jge
adc
cmp
pusha
push
js
imul
push
lods
loope
out
mov
xor
mov
hlt
sti
or
mov
inc
mov
dec
stos
pop
sbb
test
dec
push
ds
xchg
sahf
jne
into
std
sbb
dec
dec
out
xlat
mov
in
outsb
aam
ds
cs
shl
inc
jp
loope
mov
aam
mov
loop
insl
mov
ss
sub
mov
inc
repz
jl
dec
es
jno
adc
rclb
sbb
test
shlb
cmp
std
push
xchg
fdivr
cs
and
icebp
cmp
push
scas
cmp
sub
and
cmpsb
or
mov
into
test
pop
fmul
mov
icebp
xchg
subl
add
aas
testb
imul
mov
sub
cmpl
subl
jae
stc
mov
mov
dec
aas
inc
clc
add
mov
int3
movsb
aaa
cmpsb
cli
jae
add
ret
mov
inc
mov
mov
mov
sbb
cli
bound
loopne
dec
or
push
add
pop
leave
gs
rcll
push
mov
adc
or
push
arpl
ret
popf
push
pop
lret
xor
addr16
das
subl
addl
sbb
nop
sub
push
or
dec
xor
mov
stos
loop
xchg
lcall
or
pop
xor
inc
shlb
cmc
and
sahf
add
and
cmp
mov
push
mov
incl
xor
sbb
pop
test
fcmove
adc
dec
imul
or
shll
test
bound
pop
or
test
pop
shld
sub
popf
aas
sahf
mov
sbb
xchg
hlt
or
or
or
dec
in
movsl
negl
ss
xchg
sub
jg
add
test
into
jae
les
sbb
call
sar
mov
sub
jnp
rcr
ret
add
mov
popf
xor
idivl
xchg
push
pop
push
out
in
push
pop
push
in
and
mov
into
sub
push
and
jl
imul
dec
inc
loope
mov
lret
cwtl
push
fldt
pop
inc
jns
loopne
gs
mov
lods
repnz
mov
fcomp
lods
mov
xchg
xchg
in
mov
pop
pop
inc
insl
cli
test
arpl
enter
push
adc
fdivl
mov
enter
aam
imul
test
shlb
leave
inc
lret
jb
push
ret
xchg
sbb
ds
fisttpll
mov
andb
iret
and
fucomp
adc
lds
sbb
adc
ffreep
xchg
data16
sbb
mov
fmull
imul
jnp
mov
or
lcall
jbe
cmp
out
jle,pt
xchg
aas
out
cmp
adc
cmpsb
jo
mov
data16
mov
ret
arpl
adc
insb
xchg
xchg
jle
es
and
lods
lods
stos
es
cmp
mov
enter
leave
insl
jb
mov
xor
adc
mov
dec
mov
ret
out
jmp
in
inc
cli
leave
loopne
jmp
or
loopne
in
pop
je
js
xchg
cmpsl
negb
aaa
or
cltd
fdivr
rol
sub
cmpsb
sbb
adc
mov
push
mov
sbb
push
sbb
or
xchg
jp
jbe
and
scas
ljmp
test
aas
inc
adc
xor
ffreep
stos
addr16
mov
cmp
ret
xor
xor
adc
mov
sub
scas
cltd
adcb
xor
andb
andb
inc
popf
std
repnz
icebp
dec
push
lock
roll
or
push
and
fsub
mov
cmpsl
lods
sbb
xchg
or
clc
sbb
cmpsl
fsubl
push
pop
inc
pusha
shrb
and
xchg
sub
cmp
and
lret
andl
cmp
icebp
push
repz
pop
lahf
pop
dec
sti
sbb
sbb
out
jb
jmp
ljmp
sub
orb
clc
adc
jg
inc
loop
roll
xchg
scas
in
call
push
test
jb
push
jne
scas
push
fstpt
xchg
pop
jl
mov
mov
int3
out
dec
cli
pop
int
aas
pop
out
sbb
sahf
call
mov
out
mov
sti
cs
lods
add
cmc
push
adc
pop
sbb
pop
cltd
icebp
dec
push
sarb
cld
or
fdivrl
test
sti
insl
adc
popf
lods
xor
cs
adc
push
orl
push
ret
into
mov
jl
leave
sub
jl
mov
jbe
repz
mov
dec
sbbl
int3
inc
sbb
test
stc
jmp
or
xlat
jno
and
cmp
daa
push
and
lods
daa
ss
inc
mov
daa
xchg
iret
insb
insl
or
dec
out
pop
testl
movsl
std
sub
or
jl
mov
jae
mov
aaa
mov
mov
mov
and
cltd
inc
xchg
stos
lret
sub
sbb
fs
cmp
add
push
sub
xlat
bound
push
pop
cmpsl
dec
add
sti
sub
and
add
inc
push
clc
mov
fcom
cwtl
push
adc
push
pop
xchg
sbb
sbb
push
fsubrp
popf
in
sub
cmp
dec
adc
outsb
popf
test
dec
fbstp
xchg
stos
les
popf
push
fwait
shr
pushf
daa
pop
pop
and
loope
shrb
loop
popf
sub
lea
fimuls
or
aam
pop
adc
and
stos
dec
jns
pop
mov
imul
je
cltd
mov
pop
outsb
mov
clc
sub
loopne
xchg
outsl
add
daa
add
xchg
data16
mov
dec
mov
enter
cmc
mov
dec
test
mov
repnz
xorb
sub
cld
jecxz
ror
sub
mov
push
jle
xlat
es
mov
fiadds
scas
add
xchg
outsb
mov
movsb
xor
fstpl
clc
pushf
enter
lods
jg
and
inc
add
cli
addr16
in
xor
outsl
mov
add
and
mov
nop
in
fildl
cmp
adc
jg
mov
pop
jmp
mov
pop
je
pop
cwtl
mov
xor
push
mov
mov
adc
xchg
repz
cmp
fcompl
xor
out
loop
or
or
push
loop
out
cmp
xchg
mov
in
vpackssdw
dec
sar
outsb
mov
sbb
popa
ja
ja
jo
aad
dec
lods
push
lock
into
mov
repnz
push
lods
mov
sub
cmp
fldenv
jecxz
sub
jmp
mov
cmp
sbb
insb
lahf
fildl
cmp
pop
mov
aas
sub
movsl
lds
fwait
jne
ljmp
mov
sub
sbb
sub
rcl
pushf
imul
pop
inc
xlat
sub
and
mov
pop
dec
mov
cmp
pop
outsb
cmpsl
jae
rorb
ret
fisttpll
clc
in
inc
mov
adc
and
or
dec
mov
mov
mov
ljmp
xchg
insl
jg
cwtl
and
dec
or
pop
pop
dec
mov
mov
jg
test
cmp
ss
adc
loop
jge
fistpll
mov
pop
mov
cwtl
mov
pop
faddl
add
mov
js
dec
sbbl
xor
lea
das
pop
inc
in
scas
in
loopne
sub
stc
pop
push
mov
inc
inc
inc
repnz
adc
inc
mov
add
dec
pop
mov
push
lds
inc
adc
add
mov
insl
lods
mov
movsl
out
fadd
inc
jmp
enter
sahf
fcmovb
adc
xor
jae
push
icebp
mov
add
inc
shlb
std
jl
mov
cmpsl
cmc
mov
and
and
push
je
pusha
push
push
mov
sti
and
sbb
int
adc
mov
xor
data16
mov
lret
adc
daa
inc
jle
adc
out
jecxz
movsl
aam
xchg
xchg
cmpsl
jae
bound
outsl
sbb
pop
fcmove
pop
dec
jl
add
rorb
cwtl
sub
mov
mov
pop
sub
adc
and
xor
aam
jo
imul
mov
divb
mov
push
in
dec
cmp
or
sbb
dec
mov
movb
xor
cmp
sbb
mov
aam
pop
dec
in
sub
pop
aas
push
js
pop
sbb
shrb
jno
fs
icebp
lods
xchg
popf
lds
mov
in
and
scas
cmp
add
and
mov
mov
fistl
jns
mov
mov
into
mov
into
out
dec
jg
call
mov
pusha
jmp
es
stc
or
test
sub
mov
mov
fistps
mov
or
outsb
push
nop
mov
cmp
xchg
das
sub
push
push
or
push
mov
inc
lods
xor
pop
icebp
xchg
xchg
bound
fs
push
push
sarb
in
cmp
daa
push
pop
jno
fimuls
out
or
pop
jecxz
cmp
dec
mov
pop
xchg
hlt
jb
cmc
ss
out
fsts
jg
or
loop
ret
and
mov
mov
pop
js
cltd
dec
dec
test
jmp
xchg
loope
enter
inc
lahf
sar
mov
loope
gs
dec
adcl
cs
push
and
push
cs
jno
repz
popa
lret
call
pop
sub
insb
gs
xchg
fmull
mov
iret
pop
mov
test
popf
sbb
fadds
jge
push
xchg
xchg
pop
mov
push
out
mov
pushf
push
call
mov
mov
push
sub
sub
enter
outsb
ss
dec
lods
mov
stos
cmp
xchg
arpl
mov
inc
cmp
or
shl
xor
in
daa
mov
sbb
subb
fstpt
std
push
pop
sarb
jg
lret
inc
cltd
cli
push
dec
lock
adc
push
popf
mov
fst
mov
iret
out
shll
sbb
jb
push
adcl
cmpsl
pop
sbb
jns
jge
fwait
push
mov
cmp
jnp
stos
jbe,pn
cmpsb
rcll
sbb
movb
data16
and
cs
data16
pop
arpl
insl
pop
jecxz
mov
mov
lret
pop
dec
in
or
imul
das
inc
jg
jmp
cltd
jecxz
in
mov
rcr
ds
out
sbb
icebp
dec
xor
stos
gs
inc
cmp
and
insl
mov
xchg
in
mov
dec
mov
in
mov
xor
dec
lret
mov
xchg
push
or
mov
daa
or
mov
loop
outsb
jns
ds
int
jp
push
shr
sub
aaa
ljmp
stc
mov
lods
lock
mov
test
jle
out
lret
dec
pop
push
aad
mov
inc
push
push
sarb
mull
mov
jb
pop
jo
sub
gs
mov
xchg
in
mov
or
pop
sub
insl
push
mov
mov
lea
sub
test
xchg
fsubrs
jnp
cmpsl
cwtl
push
xchg
cld
mov
je
dec
stc
add
push
lods
std
lods
addr16
div
adc
xor
stos
cmp
mov
lahf
mov
add
test
lahf
add
popf
scas
outsb
pop
lcall
xchg
mov
setne
mov
jmp
test
cmp
mov
lods
daa
ja
pop
sbb
mov
out
cmc
sub
ret
js
pop
push
mov
push
cmp
and
xchg
arpl
pop
mov
rclb
iret
jne
fs
scas
cmpsl
icebp
call
sarl
adc
push
pop
lcall
push
push
push
cmp
xchg
das
adc
mov
xchg
cmp
rolb
mov
lds
mov
stos
pop
cmp
repz
mov
mov
ficoms
loop
sbb
pushl
adc
neg
push
mov
jbe
fisubrs
int3
cmp
mov
aad
add
adc
enter
cmc
fs
sub
sub
fmull
and
push
push
std
add
dec
sbb
cltd
sub
xor
pop
insl
inc
les
movb
mov
sar
lods
outsb
inc
test
pop
dec
or
jp
push
daa
cmp
mov
inc
fldt
arpl
adc
push
imul
je
stc
nop
xchg
inc
std
addr16
int
add
mov
arpl
outsl
jb
cld
cs
cmp
add
pop
sub
adc
clc
shll
pop
adc
outsl
push
mov
rcl
push
les
aaa
xchg
mov
mov
sub
clc
adc
popaw
ret
mov
call
adc
add
shlb
jp
shl
rcll
sahf
mull
cmc
jns
dec
ret
pushf
or
mov
pop
pop
adc
mov
jl
push
fs
pusha
pop
lds
fwait
sub
cs
inc
scas
jl
inc
push
fistpll
adc
xchg
xchg
sub
jle
push
pop
mov
dec
xorl
cmp
mov
imul
dec
pinsrw
sub
push
mov
imul
jbe
rcl
outsb
pop
or
into
mov
imul
mov
xchg
mov
nop
jbe
dec
in
push
cmp
data16
les
cmpsb
test
movsl
xor
lahf
gs
lahf
mov
and
mov
jle
popa
jmp
push
lods
xor
xor
fwait
subb
inc
sbb
popf
jmp
popa
cmp
repz
loop
xchg
add
or
and
es
lock
xchg
add
mov
icebp
clc
sub
sbb
shrb
shlb
cmp
test
jmp
mov
add
in
dec
push
mov
sarl
loop
push
adcl
fisttpll
iret
in
xchg
mov
xchg
pop
mov
push
imul
ret
pop
push
push
or
insb
fwait
jnp
sbb
push
mov
mov
shlb
mov
sbb
jne
push
pop
dec
mov
jg
sti
lret
bound
cmpsl
sahf
inc
in
fcomps
loop
jecxz
mov
cmc
fisubrl
lret
out
and
and
inc
ljmp
mov
stos
incl
jl
jp
movsb
dec
scas
mov
pop
fildl
pmaxub
insl
xor
in
in
pop
inc
sahf
jl
push
test
pushf
test
hlt
test
in
repnz
xchg
out
jl
mov
lods
sub
mov
jp
lcall
and
cltd
sbb
dec
popf
xchg
xor
mov
jmp
cmpsb
aam
test
ds
jbe
and
mov
mov
mov
inc
mov
hlt
das
jg
lret
test
cmp
xor
adc
or
xchg
je
out
pop
fxam
adc
dec
lods
mov
inc
mov
stos
push
mov
aad
int3
aaa
clc
mov
xor
mov
call
mov
mov
dec
pushf
sub
sbb
push
push
iret
dec
xchg
popa
dec
addr16
std
dec
clc
mov
xor
insb
fs
mov
xchg
and
jnp
add
pushf
int3
ret
xor
inc
sbb
stos
popa
add
mov
scas
idivl
roll
mov
xor
mov
out
xor
dec
fildll
push
addr16
outsl
sbb
and
xchg
pop
enter
sbb
pop
pop
lods
test
mov
int
pop
aad
mov
xor
xor
or
and
ja
or
pop
and
call
mov
xchg
stc
cltd
mov
jne
jne
in
mov
das
dec
mov
lret
loopne
xchg
adc
mov
lea
lea
gs
mov
mov
and
adc
in
pushf
add
add
sbb
jbe
outsl
push
cmp
out
mov
outsb
xor
je
xchg
dec
pop
cltd
add
insb
mov
shll
adc
call
mov
adc
mov
int3
push
sti
ret
pop
push
ret
cwtl
jae
jmp
lcall
xchg
ja
xlat
mov
push
add
adc
adc
adc
loopne
mov
push
leave
dec
mov
test
shlb
stos
in
aaa
arpl
ror
and
loopne
roll
mov
mov
xlat
call
push
ret
push
ffreep
rcrb
enter
inc
cltd
outsb
negb
adc
xor
mov
sub
push
test
mov
movsb
sub
mov
scas
mov
sar
ds
adc
pop
mov
lret
pushl
add
mov
cli
mov
cmpsb
sti
and
jae
je
push
push
scas
xchg
mov
out
sarl
mov
mov
idivb
mov
xchg
mov
mov
div
cmpsl
mov
pop
mov
hlt
bound
mov
dec
and
dec
sbb
enter
xchg
push
mov
ret
dec
pop
pop
out
in
ss
dec
cli
push
adc
bound
daa
repz
mov
repz
or
in
testb
add
sbb
sahf
data16
jecxz
mov
xchg
dec
pop
sahf
mov
js
pop
cmpl
inc
lcall
in
cmpsl
mov
cmpsl
popa
jns
inc
mov
jbe
dec
lods
cmp
ficompl
ljmp
xor
cld
mov
or
shlb
pushf
out
sub
aaa
adc
jge
lret
sbb
mov
sbb
mov
mov
ja
xchg
test
jmp
hlt
or
les
cmpsl
mov
push
cmp
jns
cwtl
loop
jp
out
push
inc
stos
dec
fs
movsb
pop
xor
push
and
jp
test
jp
es
pop
mov
mov
jns
cmp
push
iret
sub
scas
arpl
mov
in
jmp
std
pop
or
mov
out
js
push
in
clc
push
out
outsb
test
in
aam
lcall
sbbb
nop
add
jp
sub
mov
icebp
movsb
lret
outsl
adc
and
mov
ljmp
jl
cmpsb
mov
popa
sbb
inc
push
movsl
in
jge
popa
ror
mov
out
cwtl
fisttpll
lds
imul
dec
xor
imul
scas
sar
ja
sbbl
xor
dec
or
stos
inc
pushf
cmpsb
pop
xor
pop
test
dec
sbb
fwait
int3
mov
fxch
pop
stos
push
call
mov
push
out
popf
sub
lods
jmp
repz
loope
inc
jbe
pop
not
xor
andb
and
shl
loope
mov
and
adc
sbb
js
std
jnp
clc
inc
jb
fnstenv
loope
stc
push
shlb
lret
pop
xchg
ljmp
lea
mov
mov
mov
fcoms
dec
xor
xor
and
mov
rcr
xchg
dec
adc
jl
stos
xchg
lock
inc
stos
je
test
sar
xchg
mov
adc
fsts
pop
sbb
push
xor
fstps
or
or
mov
inc
mov
sub
adc
or
inc
dec
xchg
jg
ret
fnstcw
push
stc
and
mov
or
mov
mov
push
pop
dec
add
add
fstps
shlb
fldt
fxch
fldt
fistpl
cmp
cltd
sbb
pop
movsl
out
out
test
into
fldln2
pushf
mov
in
addr16
iret
cli
adc
test
outsw
std
adc
xor
cwtl
daa
lds
aam
negb
inc
aad
or
icebp
pop
sbb
mov
pop
nop
cli
lock
push
fs
aad
mov
or
dec
jmp
stc
rcr
mov
mov
sub
mov
xchg
lock
es
shlb
test
sbb
iret
mov
mov
jecxz
das
data16
adc
enter
and
fstl
dec
sub
inc
cmc
pop
lcall
sub
pop
dec
rcr
sub
push
ret
xor
fcomip
pop
mov
adc
xchg
enter
mov
jecxz
pop
adc
pop
loope
mov
cmc
push
mov
xor
cmp
fiadds
cmc
cmp
inc
leave
mov
cmp
insb
cmp
mov
sti
xor
jp
dec
andl
out
std
fstpl
mov
cmp
iret
add
clc
push
pop
ljmp
in
push
js
std
dec
push
ja
insl
aas
jl
loopne
push
mov
lock
push
mov
push
mov
pop
sbb
mov
pop
mov
rclb
push
add
pop
int
lcall
mov
jnp
push
add
arpl
or
or
mov
xlat
or
mov
pop
add
call
std
dec
mov
or
gs
xor
aad
loop
or
shrb
adc
xchg
push
cmpsb
mov
int
sar
cmpsl
pop
popa
xor
add
cmpb
sahf
das
scas
or
movsb
jmp
add
test
insb
repz
dec
pop
in
mov
lods
arpl
lret
fs
popf
pusha
aas
dec
xchg
or
push
dec
dec
pop
xor
out
add
lahf
ja
sbb
jl
js
je
lahf
aas
push
push
mov
jo
dec
xchg
mov
sti
jle
cmpl
addr16
pushf
adcl
lcall
lods
push
push
or
pusha
mov
pop
test
aad
or
sbb
jmp
push
lret
push
or
mov
inc
fwait
out
mov
fcomps
cmpsb
mov
outsl
fmuls
and
and
loop
jl
jl
in
adc
pop
andl
mov
xlat
sbb
subb
and
inc
inc
cmp
cwtl
mov
shl
loop
mov
std
sub
es
add
lcall
and
fs
enter
ret
pop
lds
daa
cs
push
imul
aas
stos
sbb
cmpsb
pusha
jne
adc
std
lods
xchg
jbe
pop
or
aad
push
shrb
xor
adc
mov
xchg
loopne
jmp
incb
dec
testl
shll
pushf
in
add
dec
jae
xchg
pushf
es
rol
arpl
xor
hlt
pop
jae
dec
mov
insl
jge
mov
push
ret
int
in
push
daa
push
data16
lods
scas
mov
neg
push
mov
gs
or
pop
push
leave
les
add
pop
mov
cmp
and
push
pop
mov
and
fxch
jp
mov
aas
cmp
js
subl
outsb
cmpsb
jg
je
enter
dec
nop
xlat
adc
cli
or
jns
add
addl
jecxz
cmp
inc
cmp
rcrl
mov
mov
stos
push
or
int
adcl
xor
push
sbb
das
sbbl
sbb
das
arpl
test
adc
jbe
js
mov
and
enter
fimuls
ror
rcll
mov
and
jns
add
shll
push
btc
jne
jg
enter
ss
and
push
dec
jl
out
sbb
push
inc
out
call
push
cmp
pop
mov
in
test
inc
xor
stos
sub
repnz
add
xchg
xchg
dec
sbb
lock
pop
mov
insl
jae
leave
dec
xchg
cmc
lock
mov
jle
fldl
mov
test
cli
popa
dec
repnz
cmpsb
subl
out
in
cmp
dec
into
pop
cs
jg
rclb
push
adc
je
aaa
mov
sub
dec
test
in
mov
faddl
xchg
lcall
mov
gs
or
fincstp
lds
shrb
cwtl
nop
or
out
es
add
push
popf
pop
pop
mov
xchg
test
push
and
jo
in
popf
imul
mov
cmp
push
fs
notb
sbb
pop
lahf
out
sahf
xchg
movsl
sbb
add
fbstp
mov
pop
adc
pop
sbb
in
or
fstps
jno
repz
outsl
xchg
push
fdivrs
or
in
lock
pavgb
pushf
xor
aas
add
mov
test
aas
jl
shlb
loope
cmp
lcall
mov
fcomi
adc
test
pushf
gs
dec
stc
mov
les
jp
jge
push
dec
arpl
inc
pop
cmp
jne
and
jne
imul
lock
js
adc
cmp
push
jle
and
push
aam
ljmp
and
add
pop
jge
lods
mov
pop
push
lea
jmp
inc
adc
inc
sbb
test
inc
into
ss
inc
push
outsl
cltd
sbb
adc
addr16
jge
mov
mov
mov
add
xor
stc
fdivs
cmp
cli
bound
mov
xchg
hlt
push
data16
repnz
scas
test
jmp
enter
int
int3
dec
pop
dec
mov
imul
pop
inc
out
fldenv
fsub
and
pop
lret
imul
imul
lret
xor
ds
pop
inc
cltd
out
fists
cmp
push
loopne
testb
mov
cmp
sti
test
daa
pop
in
pushf
daa
fdivs
dec
push
lahf
xchg
inc
adc
fcompl
out
imull
push
and
in
sbb
leave
inc
repnz
jno
xchg
inc
mov
in
testl
dec
outsl
rcr
jge
xchg
mov
pop
or
cltd
mov
cmp
dec
cwtl
cmp
mov
scas
xor
imul
std
push
cwtl
aam
sbb
or
xor
sub
out
ljmp
pop
inc
jo
loop
out
pushf
push
adc
pusha
shrl
fwait
popa
test
and
nop
jmp
icebp
lds
insl
jmp
or
js
mov
scas
ja
and
jns
dec
aam
cli
cwtl
sbb
mov
std
mov
loope
mov
adc
outsl
dec
rorl
sub
lahf
jo
out
mov
jne
notb
pusha
ja
push
dec
ficoms
mov
fwait
in
pushf
imul
in
rorb
xor
into
test
andl
mov
jge
rolb
pop
xor
mov
or
mov
push
push
pop
sub
in
cwtl
add
loope
mov
push
jne
and
roll
lea
pop
sub
scas
or
lods
cmp
pop
mov
std
jne
mov
adc
push
sub
in
loopne
lret
idiv
and
mov
mov
enter
lods
push
push
sub
clc
mov
mov
repz
dec
scas
pop
pop
mov
and
cmp
lcall
add
cmp
cmp
xchg
dec
test
aaa
inc
add
shlb
pop
xchg
mov
testb
aaa
sarl
cmpsb
cmpsb
pop
insb
and
cld
ror
mov
pop
mov
in
pop
pop
mov
fildll
pop
ja
stos
inc
aas
mov
xchg
push
stos
push
mov
aaa
shr
adc
sub
daa
je
shrb
cmp
jno
push
or
hlt
mov
or
pop
roll
popa
lahf
pop
lahf
lret
mov
fnsave
mov
jnp
jge
roll
fdivrl
jge
push
bound
mov
jno
cwtl
cmp
loop
or
sbb
xor
inc
or
mov
adc
xor
sbbb
cmp
and
pop
cmp
out
pop
out
dec
pop
enter
ret
jnp
popf
mov
cmpsl
loop
fcompl
out
inc
pop
or
jo
out
and
or
xor
push
lcall
dec
out
cmc
call
insl
pop
rep
nop
cmp
frstor
inc
mov
add
xor
clc
jg
cltd
roll
imul
mov
mov
test
mov
sbb
pusha
or
lea
out
cwtl
in
flds
cmc
sbb
cmp
xchg
fldcw
jbe
stos
lock
sbb
push
mov
pushf
movsl
cmp
arpl
sbb
out
xlat
lret
scas
out
cmp
scas
cli
jne
push
fidivrs
mov
repnz
dec
ret
or
jbe
inc
xchg
jp
lea
cmp
mov
inc
xchg
pop
cmpb
shll
jle
leave
flds
jo
jg
cmpl
xchg
cld
or
cmp
mov
movsb
test
lcall
js
iret
cmpsb
fwait
add
mov
fcmovnb
hlt
xchg
push
and
clc
mov
aad
movsl
and
pop
ds
push
push
cmp
aaa
sub
xchg
lods
dec
push
mov
stc
enter
jns
sbb
lea
divl
mov
rclb
movsb
insb
adc
mov
add
fstps
les
mov
cwtl
lods
mov
push
ret
nop
cwtl
scas
mov
and
cltd
sbb
out
push
fldt
hlt
mov
jae
or
pop
enter
je
or
jg
push
jo
xor
xor
int3
mov
jns
cmpsl
clc
mov
clc
xor
sbb
outsl
fidivrs
int
ret
cli
popf
sbb
inc
mov
js
dec
inc
lods
mov
scas
jg
jne
adc
xor
fnstsw
mov
cli
fistl
andb
mov
ss
xchg
cltd
push
movb
add
inc
cmpsb
or
or
cwtl
cli
jg
repnz
pop
mov
filds
or
cmp
sbb
aas
aad
sub
popa
mov
mov
div
xchg
imul
fwait
mov
in
sub
lahf
sbb
sahf
stos
mov
js
pop
adc
icebp
fwait
sbbl
imul
rorb
popf
adc
xchg
call
pusha
jae
sub
test
pop
add
mov
xchg
loop
and
daa
jb
adc
shrl
test
in
and
dec
jb
out
js
fnstenv
dec
adc
add
cmpsb
shrl
lret
add
inc
out
mov
lcall
sub
out
into
test
jmp
cs
jmp
and
pop
rorb
dec
aaa
pop
mov
xor
push
push
sbb
add
fcoml
xchg
or
out
xchg
lret
pop
xor
xor
and
xchg
cmp
push
push
push
pop
mov
mov
dec
cmp
and
sahf
dec
lahf
in
jmp
jl
test
jp
mov
popf
xchg
mov
inc
imul
xchg
inc
mov
iret
out
sub
in
mov
sbb
cmpsl
in
or
xor
in
mov
inc
jne
adcb
inc
adc
in
shlb
jl
sbb
push
lahf
push
xchg
lock
rorb
popa
cli
sti
rcr
or
movsb
xor
js
cltd
test
mov
divl
or
ret
jne
pop
out
std
fwait
ja
and
fs
and
xchg
shll
insl
in
and
jnp
xor
filds
mov
mov
inc
jne
pop
loopne
aaa
mov
aaa
shr
in
or
mov
cmc
and
outsb
cmp
cli
xchg
clc
lret
out
sbb
lock
mov
push
sbb
insb
int
les
fs
inc
xchg
sub
mov
enter
mov
insl
xor
adc
mov
mov
call
or
pop
xor
dec
dec
fisubrs
jecxz
imul
jecxz
mov
cltd
aam
push
repnz
into
bound
jae
ficompl
lea
mov
sub
xor
out
mov
out
or
cmpsb
aam
pop
out
or
in
loopne
sub
mov
mov
popf
jb
mov
call
hlt
mov
ds
loopne
orb
adc
dec
fidivrl
stos
cmp
adcb
dec
xor
sub
push
test
inc
outsl
dec
push
inc
xchg
push
sti
pop
arpl
movsl
out
or
int
ljmp
and
test
sbb
mov
testl
cmp
mov
ds
jmp
add
jl
or
jmp
mov
push
pop
xlat
and
or
es
int
adc
ja
sbb
out
sbb
push
cld
lret
das
jne
pop
ss
lock
nop
and
dec
and
repz
stc
and
pop
test
xlat
dec
les
pop
pushf
das
aaa
mov
jle
mov
adc
jns
es
loope
sti
push
stos
sahf
pushf
and
scas
xor
mov
movsl
push
mov
pushl
add
cs
xor
lret
stos
cmpsb
jo
lcall
shll
dec
int3
ret
iret
push
push
push
out
push
test
push
in
pop
loop
out
mov
xchg
mov
iret
pop
iret
mov
int
mov
iret
fsubrl
add
out
cmovle
aad
and
or
adc
ljmp
in
and
xchg
cld
cmp
or
fyl2xp1
pop
mov
push
sub
incl
xchg
fcmovbe
lret
push
xchg
lcall
les
xor
lret
cli
ljmp
test
pop
not
or
cmp
xchg
xor
xchg
cmp
nop
in
sub
fdivrl
mov
in
leave
or
andl
test
repnz
xor
das
out
fwait
ja
add
shrl
fcompl
out
call
ss
out
or
pop
cmp
imul
adc
cwtl
mov
movsl
sarl
mov
sub
sbb
jns
cwtl
cvtpi2ps
sub
addb
sub
sbb
xchg
pop
adc
dec
flds
push
xor
jae
scas
push
mov
pop
out
jne
leave
aaa
sti
stos
addl
fs
mov
lret
push
pop
hlt
push
lahf
push
stc
insl
and
movsl
stos
jmp
add
test
in
sub
xor
inc
into
mov
pmaxub
dec
out
sbb
mov
outsb
faddl
lahf
stos
and
mov
jge
sub
inc
icebp
push
inc
adc
xchg
iret
cmp
push
arpl
push
sub
inc
insb
adc
mov
add
imul
push
int
mov
cmpsl
ret
repnz
out
mov
fisttps
dec
cs
mov
jle
xor
jge
popa
jmp
mov
fwait
sti
xor
xchg
test
decl
test
je
ja
sahf
dec
jbe
mov
add
mov
or
xor
sub
cmp
clc
scas
push
sbb
xchg
jb
scas
cmp
cmp
or
in
adc
ds
pop
mov
push
push
sbb
mull
cltd
ljmp
testl
ljmp
pop
insb
sub
das
ss
sti
pop
jns
adc
inc
test
ss
add
int
and
sub
adc
sub
out
test
mov
std
dec
xchg
aad
pushf
jbe
jns
iret
push
mov
rol
mov
cmpsb
loope
xor
mov
notb
mov
repz
mov
fnstcw
add
enter
iret
sbb
and
mulb
or
jb
adc
insl
inc
fldenv
outsl
ds
cmp
imul
clc
adc
arpl
or
xchg
out
sarb
pop
vandps
cmp
test
out
jo
xlat
cmp
jo
cmp
iret
jg
ret
fnsave
shrl
dec
out
xor
scas
adc
pop
add
lock
popa
subb
add
mov
pop
or
test
xor
das
jae
xor
loopne
push
imull
test
jge
pop
dec
aad
inc
fwait
pop
call
xchg
out
aas
dec
imul
xchg
mov
cmp
stos
jmp
jecxz
xchg
jno
push
dec
push
xchg
mov
and
std
inc
xlat
xchg
push
test
xchg
mov
mov
lea
xchg
testb
cltd
mov
and
je
mov
push
push
push
ds
out
mov
ret
ja
sbb
shr
add
out
aad
mov
mov
or
xchg
popf
int
lea
pop
outsl
mov
ss
push
loop
movsl
std
test
push
mov
das
cli
fisttpll
hlt
push
mov
sbb
xchg
dec
mov
repnz
mov
les
nop
inc
lock
pop
jge
out
cwtl
pushf
fs
in
shrl
or
push
and
or
push
sbbb
pop
std
push
sub
mov
xchg
xor
lret
scas
das
fcom
aas
mov
testb
push
xchg
mov
add
xchg
mov
loope
addb
mov
dec
imul
push
jp
add
loopne
mov
inc
jmp
cld
cmp
mov
test
mov
enter
pop
jae
xchg
bound
notl
xor
jl
cmp
clc
icebp
cmpsl
dec
stos
out
repnz
out
imul
incb
call
sbb
jl
rclb
or
mov
jp
lret
jp
lahf
jg
out
cmpsl
sbb
xor
cwtl
clc
ljmp
mov
dec
pop
pop
ret
out
or
shlb
or
stc
sar
cwtl
push
sub
mov
filds
mov
or
nop
sbb
arpl
sbb
and
insb
out
loop
pop
cmp
pop
ja,pt
fcompl
cmp
mov
mov
push
and
and
fisubl
movsl
incb
jne
mov
mov
sbb
xor
imul
adc
shlb
mov
and
fstpl
lret
lcall
aam
xchg
pop
mov
das
mov
lret
jle
pop
in
xlat
dec
inc
divl
mov
sub
in
adc
ljmp
call
ljmp
lock
scas
mov
push
pop
sti
jge
sbb
jle
jl
in
outsb
int3
cmp
pop
aad
mov
mov
push
stos
push
rcll
pop
dec
jae
data16
or
pop
pop
add
xchg
or
mov
mov
test
pop
clc
jge
int
dec
fists
pop
roll
adc
mov
lock
repnz
jbe
ja
mov
popa
mov
cmc
pop
inc
mov
dec
iret
adc
aad
lock
adc
nop
loopne
test
ret
aaa
aas
mov
jecxz
mov
push
loopne
xor
repz
push
or
xchg
filds
adcb
mov
pop
xor
rol
fwait
cmpb
arpl
ljmp
sub
push
cmp
mov
les
stos
mov
jmp
jns
mov
or
cmp
xchg
xchg
ljmp
out
push
push
imul
jle
orb
popf
push
dec
sub
push
fisubs
xchg
icebp
or
inc
sbb
xchg
mov
jmp
repnz
inc
fimull
adc
shlb
or
loopne
mov
mov
pop
jbe
das
cwtl
xor
xor
push
lds
mov
call
xchg
notb
enter
mov
and
in
lods
jns
dec
xchg
rclb
jnp
arpl
inc
mov
ret
pop
mov
push
aad
push
dec
lret
mov
push
add
adc
fcompl
pop
ds
push
in
aaa
scas
inc
inc
inc
repz
pop
xlat
cmpsl
ljmp
xchg
push
lods
negl
mov
cld
push
lock
pop
fcompl
add
add
cmp
pop
imul
push
jg
mov
xor
pop
or
inc
jmp
jb
sbb
cs
xor
dec
or
dec
dec
into
test
sti
sub
mov
jl
adc
mov
pop
inc
ret
jb
dec
add
and
stos
dec
fwait
xlat
fistps
test
loop
insb
add
pop
ret
sbbl
inc
mov
push
aad
jle
lock
int3
jl
xchg
jp
out
in
mov
mov
pop
mov
mov
in
imulb
pop
sbb
imul
push
stos
sub
int3
scas
push
roll
inc
and
stc
mov
dec
fistpll
aam
xor
jne
adc
dec
bound
data16
mov
mov
mov
push
imul
in
push
mov
pop
pop
imul
fisttps
fsubrs
daa
push
mov
je
adc
mov
out
sbb
mov
jecxz
stos
aam
mulps
xor
inc
lods
movsl
loop
cmpsl
cs
shlb
hlt
and
xor
cwtl
rorb
push
push
out
xor
mov
push
adc
mov
push
push
imul
cwtl
or
insl
inc
jns
lods
jl
dec
shl
sub
fsubrp
and
or
push
int3
loopne
cs
push
imul
insb
adc
mov
outsl
cmp
test
dec
jno
fistpll
mov
jecxz
fsub
stos
insl
xchg
pop
mov
loop
negl
icebp
push
sub
bound
fwait
jg
inc
mov
std
outsl
jg
in
xor
jbe
fs
xchg
cmpsb
and
aam
jmp
inc
jnp
dec
test
into
jecxz
mov
mov
lock
xor
sub
sub
and
xor
cmp
jbe
fwait
dec
cld
dec
xlat
daa
pop
out
pushf
icebp
imul
push
mov
pop
call
ss
add
or
xchg
fidivl
out
sahf
inc
inc
ss
mov
mov
in
push
mov
aam
cli
add
jae
popl
in
lret
dec
sub
stos
scas
sub
bnd
repnz
add
mov
add
movsb
dec
daa
inc
popf
movsl
cmpl
addb
mov
mov
iret
dec
mov
ret
cmpsl
mov
sar
cltd
mov
pop
ror
scas
push
call
lds
fdecstp
imul
inc
sarb
add
hlt
xchg
in
push
call
mov
push
xchg
out
push
jbe
in
cmp
cmc
in
stos
dec
addr16
jbe
mov
jnp
cld
movsl
adc
lods
jmp
inc
psubd
cli
xchg
or
popa
mov
in
jecxz
aas
cmc
movsb
out
repnz
pop
push
repz
in
xchg
int
pusha
ret
sub
insb
xchg
pop
add
icebp
cmp
and
jecxz
push
daa
pushf
or
insl
fbstp
xchg
adc
imull
xchg
std
lea
aaa
jmp
enter
cmp
out
test
popf
aad
iret
sub
loope
inc
jae
outsb
jmp
mov
ja
sub
sub
inc
fsubrs
jle
arpl
aas
es
test
adc
sub
imul
mov
mov
adc
es
test
jne
jbe
inc
sarl
xchg
fstpt
and
mov
jg
push
je
push
pop
iret
movsl
insl
xchg
out
popa
test
addr16
std
cmc
xchg
fcoml
dec
sbb
xchg
inc
out
xchg
pop
sub
hlt
sub
mov
outsl
add
cmp
bswap
cmp
fwait
sub
test
jmp
lcall
jo
add
and
dec
or
and
sub
lea
sub
test
cmp
cmpsb
sbb
shr
jne
call
push
scas
repz
pop
add
dec
lea
lcall
aam
in
jecxz
or
clc
pop
filds
mov
insl
fnstcw
sbb
aam
xorb
adc
repnz
cltd
insl
aaa
pop
mov
fdivl
repnz
enter
push
hlt
pop
push
mov
xchg
and
shrl
jne
jo
pop
loope
cmp
mov
inc
cmp
xchg
dec
sbb
mov
jge
add
and
mov
pop
int3
adc
push
ret
dec
std
xor
loope
xlat
mov
in
icebp
inc
rol
mov
dec
cmp
push
aad
add
sbb
outsl
and
imul
inc
mov
fistps
js
test
xchg
lret
sub
xchg
xchg
cltd
xor
push
fbld
inc
popa
mull
pop
mov
xor
iret
aad
xchg
insl
dec
pop
lahf
call
aam
mov
jmp
insl
add
inc
call
inc
sbb
rcrl
test
mov
mov
mov
mov
icebp
mov
adc
fs
test
test
dec
ss
popa
cmp
addr16
mov
ret
jo
push
mov
mov
sub
cmp
subb
sub
das
inc
test
or
imul
mov
int
lret
push
cmp
ja
push
dec
jmp
xor
in
push
xchg
xor
mov
stc
out
pop
adc
xchg
mov
test
lods
nop
cld
mov
jne
pop
int3
scas
xor
out
addb
into
jbe
int
cwtl
mov
stc
cmc
clc
mov
mov
inc
sar
imul
loope
cmp
jne
hlt
xor
pop
adc
xchg
cmp
lock
lods
or
imul
xchg
push
out
pop
rcrb
push
sahf
ret
sub
sbb
pusha
jns
lret
lds
mov
aam
xchg
jb
xchg
pusha
xor
movsb
pop
fwait
mov
data16
jle
pop
add
pop
or
push
xchg
xchg
xchg
sub
divb
dec
into
jbe
in
mov
jae
mov
jmp
push
test
mov
pop
cmpsl
repnz
inc
or
inc
push
nop
sbb
icebp
sub
adc
ret
sahf
ret
lahf
fadd
pop
cwtl
daa
dec
inc
psubq
int
mov
xchg
inc
int3
sub
fdivl
cli
xchg
outsl
popa
mov
mov
lret
imul
inc
xor
addr16
stc
pop
sahf
adc
mov
fst
cmp
push
cmc
sbbb
mov
js
shr
fldcw
dec
push
push
fs
pop
sub
mov
pushf
xor
mov
pop
adc
int3
sarb
push
cwtl
rorl
aaa
repnz
mul
and
jbe
and
pop
xor
ficomps
lods
xor
mov
xor
idivb
cmp
sti
inc
and
fdivrl
fsubl
out
aas
mov
xlat
es
jg
data16
das
cmp
mov
adcb
mov
mov
add
fucomip
dec
push
testb
pop
ja
inc
ds
mov
ds
into
fbld
fsub
push
sbb
pop
inc
stos
dec
fs
das
lret
jle
inc
pusha
pusha
mov
call
sbb
test
inc
sti
inc
sarb
neg
shl
sub
xor
fcoms
mov
lock
fwait
jge
adc
adc
push
negl
jne
int
push
push
in
es
dec
imul
pop
push
mov
cmpsl
and
cmp
mov
cmc
popf
sub
bound
out
out
inc
sbb
scas
push
sbb
pusha
add
push
bound
test
enter
jg
mov
sbb
push
dec
cmp
cmpl
or
pop
arpl
clc
pop
xor
fists
xchg
jne
enter
popf
fadd
fs
ljmp
push
or
lahf
jne
mov
mov
in
sbb
xchg
scas
cmp
jle
dec
jns
dec
xchg
adc
xchg
and
dec
add
mov
dec
lods
dec
jbe
lods
pop
dec
mov
or
dec
xchg
pop
adc
subb
xchg
sbb
cli
fsub
mov
xchg
jle
loope
xchg
dec
lds
scas
xchg
lcall
nop
push
lret
mov
jns
cmp
and
sbb
out
cmp
jns
fidivrl
popa
push
xor
icebp
xor
std
fisubs
adc
loopne
mov
in
mov
jg
pop
aas
mov
addb
lcall
cmpl
push
xor
lods
lods
leave
test
loop
pop
xchg
xor
lret
jg
and
inc
in
lods
test
cmc
popf
jno
andl
repz
mov
inc
mov
dec
dec
enter
mov
pusha
and
fistpll
mov
add
je
arpl
mov
inc
xchg
push
pop
mov
dec
mov
push
je
movsb
mov
cmc
push
mov
insb
mov
push
cmpsb
and
jmp
lahf
lea
int
push
adc
jge
push
xor
push
lea
filds
mov
dec
dec
xchg
out
popa
pop
loope
or
bound
dec
int3
hlt
push
push
fmull
dec
push
mov
and
iret
xor
and
xchg
xchg
sbb
divl
outsb
jne
int3
scas
mov
leave
mov
mov
je
or
add
push
imul
scas
inc
repnz
ljmp
inc
lret
imul
es
inc
das
scas
sti
or
push
inc
mov
cmp
add
iret
jl
mov
fiaddl
pop
mov
mov
jns
movsb
in
cmc
fistps
fmull
xchg
scas
sub
mov
mov
inc
iret
pop
or
push
pop
shlb
and
clc
push
dec
sbb
scas
adc
or
cmp
mov
mov
shrb
imulb
insl
lea
sub
aad
sbb
int3
cld
jbe
fsubl
sti
shl
mov
jo
in
es
push
mov
hlt
cmp
into
fucomip
xchg
icebp
xchg
cmp
xchg
insb
rorb
test
xchg
mov
fs
in
arpl
push
and
test
repnz
push
loop
fcmovnu
aad
rcl
test
sbb
mov
mov
lret
ret
pop
int3
hlt
mov
sbb
sub
jnp
push
stos
mov
nop
sti
cmpsl
dec
xchg
jne
mov
sbb
mov
in
pminub
xchg
sahf
clc
xchg
sub
lahf
cltd
cld
mov
fwait
pop
gs
andl
shll
cmp
push
sbb
int
jecxz
mov
rcll
repz
cltd
pusha
mov
scas
test
es
lods
in
rep
fcmovb
sub
stos
mov
ss
mov
in
cli
test
aad
inc
jbe
jbe
push
lcall
mov
adc
jge
daa
adc
mov
ljmp
test
mov
es
fcoms
add
mov
or
dec
mov
out
adcb
adc
inc
inc
test
test
imulb
js
adc
mov
pop
fmuls
js
pop
lods
lret
sti
add
addr16
sahf
pusha
pop
and
ds
iret
shll
mov
jge
push
mov
je
sbbb
lret
out
shll
aad
and
sbb
jl
push
lahf
adc
and
or
jge
add
mov
mov
and
out
mov
fisubrl
and
cmp
scas
add
or
lret
push
pop
add
mov
aaa
mov
out
push
xchg
xor
leave
and
scas
jle
xor
jbe
jnp
cld
test
jmp
jbe
js
aaa
in
mov
xchg
push
std
cltd
pop
in
ror
aaa
nop
mov
pop
xor
adc
add
and
jmp
xor
sbb
dec
rclb
scas
sub
into
nop
mov
cs
add
in
dec
call
hlt
sbb
out
loope
jp
mov
dec
jne
add
test
fisubrs
pop
add
sbb
pop
pop
adc
outsb
loopne
movsl
scas
mov
mov
push
xor
xchg
mov
mov
pop
arpl
sub
test
push
pop
cwtl
ficompl
adc
mov
lahf
int
aad
and
pop
frstor
sub
test
xchg
cmp
enter
rcrl
adc
data16
lret
test
or
sahf
aam
adc
xor
test
outsb
shlb
flds
push
roll
fwait
sbb
sub
jnp
mov
xor
outsl
add
fcoml
cli
cmp
adc
jmp
mov
dec
cltd
cmp
jno
ja
pop
sbb
dec
aas
imul
je
adc
and
rcrb
mov
and
push
fadds
push
js
dec
jb
push
shlb
push
sbb
into
sbb
sbb
loopne
rep
xchg
xchg
enter
mov
ret
stos
sub
icebp
mov
mov
lahf
pushf
jnp
cld
clc
aam
jne
dec
adcl
scas
sahf
and
imul
dec
jmp
lret
pop
fcomp
dec
pop
adc
ds
mov
sbb
xor
gs
ficomps
sbb
gs
or
mov
inc
mov
jg
dec
mov
and
sahf
or
lods
xchg
sub
adc
inc
sub
lcall
adc
loope
jmp
sub
scas
rcll
enter
lret
push
shlb
dec
or
and
push
sbbb
insl
sub
fwait
xchg
fistl
or
add
cs
cli
pusha
fdivs
xor
pop
add
and
bound
inc
mov
xor
leave
push
int3
andb
mov
jl
les
mov
cltd
xor
pop
inc
jp
test
dec
and
xchg
fstl
xlat
stc
mov
addr16
mov
aaa
xchg
ja
mov
pop
arpl
fnsave
mov
push
mov
push
insb
sub
mov
cmc
idivl
dec
sub
test
pop
mov
repnz
clc
and
aas
popa
adc
popa
mov
decl
adc
xlat
fldenv
or
mov
call
repnz
scas
lret
adc
cli
jg
mov
imul
xor
push
cmp
aad
addr16
add
add
inc
mov
arpl
pop
sti
adc
daa
and
cltd
loop
pop
sub
sar
fimull
addr16
lret
addr16
iret
sbb
jle
dec
mov
push
lock
ret
pusha
shlb
repnz
inc
cltd
inc
mov
leave
add
lret
add
push
into
lds
pop
mov
in
sbb
pop
test
cli
mov
jbe
sahf
or
movsw
adc
fnstcw
cs
jecxz
mov
test
sbb
addr16
lods
adc
push
stos
cmpsl
jbe
mov
add
push
dec
lods
loopne
jbe
out
inc
mov
sub
cs
pop
add
cwtl
push
jg
dec
test
push
ljmp
in
jo
xor
dec
iret
sub
ret
push
arpl
mov
stos
cmp
push
xchg
int3
sarb
fwait
add
dec
add
xor
sahf
or
sub
or
arpl
push
xchg
lods
aaa
adcl
sbb
mov
sbb
pop
push
jnp
hlt
and
ret
mov
lock
mov
inc
sub
fdivl
outsb
in
icebp
mov
adc
or
sbb
add
ljmp
sub
sub
sub
cs
adc
pop
fisttpl
flds
roll
cld
push
add
dec
jecxz
dec
lcall
push
xor
pop
adc
add
add
js
scas
pop
lret
mov
roll
jp
xlat
xchg
addr16
mov
rcl
pop
or
xchg
lret
cmpl
hlt
xor
dec
sbb
ficompl
xchg
lahf
fbstp
push
sbb
xchg
leave
popa
jmp
scas
es
mov
xchg
mov
xchg
mov
arpl
mov
xlat
adc
call
iret
inc
in
cld
dec
daa
inc
cld
pop
fcmovnb
lahf
and
inc
sub
fwait
roll
xchg
lock
jle
dec
or
mov
jl
xchg
sub
jg
push
test
adc
xor
push
decl
jne
scas
pop
lret
cmp
mov
in
push
push
repz
cmp
mov
cli
lret
xor
fnstenv
xchg
mov
push
push
mov
jecxz
dec
xor
push
mov
fs
dec
add
mov
hlt
repnz
jnp
xor
imul
dec
ja
and
sub
xchg
adc
cmc
call
xor
cmp
mov
jl
daa
dec
ret
mov
pushf
fucomip
sub
lock
dec
add
aam
ja
dec
loope
shl
jnp
sub
fisttpl
mov
cmp
push
out
inc
lahf
orl
or
mov
lods
xchg
js
lock
gs
cmpsl
sahf
lahf
xchg
mov
and
cs
out
iret
mov
decl
cmc
cli
push
out
adc
pushf
loop
insl
push
nop
dec
ja
movsb
xchg
lret
cmpsb
add
outsl
dec
mov
rcl
shrl
or
adcl
imulb
imul
jl
mov
xchg
rorb
lock
sub
add
jl
push
mov
mov
lahf
xchg
adc
fists
jne
lds
or
aam
jns
pop
mov
out
je
in
es
mov
push
repnz
sti
mov
lods
aaa
fstpl
and
push
fldt
cmp
pop
out
mov
mov
aas
mov
loopne
push
fimull
repz
push
aas
mulb
call
dec
xlat
add
cmp
adc
dec
sub
in
xchg
lds
xchg
outsb
push
or
adc
pop
mov
cmp
fisubs
ss
fwait
jge
rcl
punpckhdq
adc
adc
mov
sbb
jnp
cmpsl
pop
das
inc
insb
nop
repz
cmp
pop
fwait
xchg
daa
fsubl
mov
pop
stc
les
in
mov
and
add
xchg
in
jmp
sbb
sahf
sahf
pop
dec
xor
out
lds
icebp
rcll
ds
dec
jnp
and
orb
subl
stc
push
neg
roll
iret
outsl
mov
cwtl
mov
stos
pop
rcl
mov
movsb
div
inc
fwait
xchg
hlt
and
and
es
stos
xchg
xchg
aam
jl
cmpsl
fs
add
add
popa
jno,pn
repnz
icebp
ds
adc
hlt
add
std
push
jne
ja
push
mov
adcb
cld
push
rorb
sarl
push
int
sbb
jg
pushf
inc
pop
add
stos
adc
mov
mov
mov
and
lds
imul
mov
cltd
gs
cld
std
popa
jae
into
pop
sub
adc
repz
or
fcoml
mov
pusha
xor
subb
dec
out
ljmp
shrl
inc
adc
sbb
loop
outsb
mov
sub
or
sbb
add
fldl
imul
xor
scas
dec
pop
mov
cmpl
in
cmc
imul
jmp
sahf
nop
mov
jne
mov
jl
or
js
inc
mov
cld
hlt
xlat
jno
aam
xchg
or
xor
repz
xchg
in
or
lods
jnp
test
or
aam
mov
jnp
push
dec
fsubs
cltd
push
adc
push
dec
add
or
test
pop
add
arpl
pop
mov
repnz
into
cmp
dec
andl
push
adc
pop
xor
dec
sub
mov
pop
xlat
inc
icebp
sbb
sbb
daa
mov
sbbb
out
bsf
mov
or
xor
mov
jb
fldenv
shl
jmp
jns
cmp
fldl
adc
dec
stos
outsl
pop
xchg
xchg
jp
icebp
xchg
sbb
xchg
lea
cmp
pop
cmp
loopne
into
into
out
jno,pt
cmpsl
bound
int3
mov
add
fcoml
push
and
and
mov
orl
mov
in
mov
pop
stos
jo
dec
std
pop
imul
jbe
inc
in
jg
cmp
or
cmp
aam
nop
push
rolb
mov
jge
aas
mov
and
repz
mov
push
or
mov
mov
cli
and
ss
sbb
popf
dec
test
mov
adcb
mov
xor
pop
push
test
pushf
mov
incl
push
cltd
push
jbe
jb
xchg
push
cmpsb
cli
sarb
and
xor
faddl
cmp
pop
sub
rcr
daa
repz
icebp
sub
lock
adc
fwait
dec
cmpsl
adc
or
xor
adcl
jo
dec
in
sub
jmp
leave
hlt
nop
inc
dec
pop
sti
push
pop
fistl
xor
cmp
outsl
jp
int3
lret
inc
dec
out
cltd
icebp
lret
and
std
jmp
jl
inc
movsb
dec
les
les
loop
push
dec
sarl
jo
sbb
je
push
push
fldcw
lcall
mov
dec
iret
test
bnd
popa
dec
mov
sub
adc
adc
sub
sbb
and
movlhps
adc
and
inc
and
iret
mov
mov
inc
sub
or
fstps
sbb
lcall
push
mov
push
add
add
push
inc
xor
mov
jbe
mov
fst
push
pusha
out
in
or
mov
dec
cmp
pushf
mov
push
xchg
iret
pop
pop
pop
xchg
dec
xor
into
jbe
jbe
in
idiv
aam
push
xor
fcomps
pop
int3
mov
std
jecxz
push
jp
pop
cld
out
icebp
mov
and
jno
inc
aaa
fwait
gs
cmp
xor
pushf
scas
ret
sbb
mov
cld
add
out
gs
gs
jle
mov
fnsave
push
dec
add
adc
xor
or
ret
add
cs
cmc
mov
enter
or
leave
mov
js
js
jns
shll
sub
sub
push
xor
pop
ds
fistpl
xor
fidivl
repz
in
jb
adc
mov
int
mov
sahf
mov
sarb
or
aam
sahf
push
lock
enter
mov
inc
lcall
adc
jecxz
clc
jns
add
in
fstpl
and
mov
sti
mov
ljmp
push
mov
sti
mov
int
pop
mov
push
pop
push
inc
mov
stos
test
cmc
cmpsb
mov
lahf
dec
sub
lock
sbb
pop
ret
in
ret
push
mov
adc
sub
aas
cltd
cmpb
shrb
jmp
cmp
pop
enter
cmp
sub
cmp
mov
cmp
cli
push
pushf
mov
sti
ret
adc
xor
out
int
or
arpl
xor
mov
scas
sub
leave
in
xchg
inc
sub
popf
mov
xor
jle
pusha
inc
das
or
fnsetpm(287
ds
lock
jecxz
push
dec
call
stc
add
xor
es
inc
and
inc
pop
out
jne
add
mov
and
inc
or
xadd
jle
pop
mov
push
or
cmpsl
sub
jne
or
inc
scas
adc
push
dec
dec
fsts
xchg
xchg
add
xor
iret
mov
xchg
mov
lods
mov
jmp
xchg
movsl
mov
ljmp
add
repnz
inc
ret
dec
sbb
xor
mov
jnp
stos
jnp
imul
rclb
or
add
push
jnp
lock
jbe
loopne
mov
aaa
imul
gs
mov
js
mov
fimuls
xor
xchg
dec
scas
mov
mov
push
in
xchg
mov
inc
mov
jnp
xlat
push
jbe
cmp
mov
jbe
movsl
inc
int3
loop
inc
aam
mov
cld
and
movaps
lds
or
cmp
fstps
lahf
sbb
mov
push
daa
stos
adc
xchg
ja
inc
pop
sti
popa
cmpsb
jle
cmp
or
sbbb
test
xchg
addb
outsb
inc
pop
and
stc
nop
bound
dec
iret
adc
dec
pushf
shlb
scas
and
aaa
cmc
std
mov
mov
sarl
test
cmp
jle
mov
jb
push
sbb
mov
xor
jno
mov
inc
push
loope
mov
xchg
or
push
loope
outsl
repz
inc
inc
outsb
mov
xor
adcb
test
cmc
pop
andb
sahf
or
enter
or
les
mov
insl
aaa
shrb
mov
cmp
lahf
push
xor
ljmp
dec
jg
call
loop
int
incl
push
or
add
jno
out
mov
push
leave
pop
mov
int
mov
outsl
pop
xchg
mov
popf
add
adc
sub
mov
mov
sar
jge
out
jb
subb
enter
ficompl
imul
js
mov
mov
insb
gs
xchg
mov
mov
push
add
aam
xchg
imul
pop
xor
out
mov
shl
int
aad
push
inc
sbbb
mov
repz
jmp
dec
xor
lds
ja
cmpsl
clc
push
nop
mov
push
add
jecxz
outsb
rcr
xor
icebp
in
jmp
fdivrl
mov
mov
and
xorl
cmp
sub
retw
jp
es
cld
mov
inc
sub
pop
mov
fsub
and
movsb
je
mov
call
lds
test
ja
xor
hlt
cmp
ja
call
cmp
cli
adc
stos
add
sub
lea
arpl
mov
jecxz
adc
add
in
aas
pop
test
in
cmp
repz
insb
sub
iret
sbb
aam
push
dec
push
jmp
mov
cmp
dec
decl
cmp
mov
sub
inc
data16
mov
out
jge
popf
xor
sbb
add
push
xorb
push
cmp
es
cmc
xchg
jns
xchg
aaa
dec
sarb
test
mov
imul
xchg
rcr
sub
mov
push
push
fcmovne
adc
mov
or
rclb
ficomps
mov
insb
add
mov
cli
fisubl
xor
addr16
jns
add
or
cli
mov
mov
sub
in
inc
insl
ja
and
mov
das
shll
push
es
mov
mov
lock
jno
shrl
push
fadds
fnstenv
jnp
clc
lods
mov
pop
sbbb
xor
push
pop
adc
sbb
imulb
call
iret
sub
cmovns
insb
jns
and
push
shll
neg
pusha
or
sbb
ja
je
mov
jg
cmp
dec
inc
or
push
in
mov
mov
push
repnz
sti
dec
enter
insb
fstl
repz
lods
push
das
xchg
fs
mov
and
movsl
xor
lret
or
cmpsb
and
clc
lods
xchg
xsavec
test
insb
or
popa
jle
popa
pop
bound
out
mov
stc
cmc
jp
subb
pop
in
push
sub
test
dec
add
pop
sub
push
adc
mov
mov
and
outsb
sub
call
incl
or
jo
daa
popf
fisttpll
or
addr16
sti
dec
fcoml
sbb
iret
cs
aas
adc
lret
std
push
mov
pusha
jns
int
scas
xchg
stos
cltd
or
push
and
sub
mov
xchg
mov
test
and
cmp
xchg
loope
and
jmp
mov
ja
scas
pop
cmp
jbe
and
stos
fcmovnb
inc
mov
dec
or
sub
inc
aas
cmc
ret
mov
xchg
xchg
or
sub
int3
mov
outsl
mov
fistl
cmp
lret
dec
push
add
cmpsb
scas
mov
insb
push
adc
rolb
shl
add
stos
ds
inc
push
sub
es
iret
popa
fsubrl
negl
arpl
adc
cmp
lds
push
pop
insl
lcall
enter
inc
outsl
jo
cmp
ficoms
ss
repnz
xchg
adc
stos
sub
clc
loop
lock
sbb
loop
stos
loop
sub
popw
push
inc
iret
fists
dec
in
inc
inc
out
fdiv
sti
fistl
xor
into
jmp
xchg
sbb
std
jl
aam
sub
push
popf
adc
mov
sub
mov
dec
loopne
shl
push
inc
movl
cltd
and
imul
aas
sarb
stos
lea
and
jno
xor
jle
outsb
cmp
subl
push
test
adc
stos
sbb
sbb
mov
push
mov
add
ret
push
mov
mov
jmp
mov
std
sub
insl
jae
sbb
cmp
aam
cwtl
jno
pushf
bound
sbb
cmp
repz
bts
movsl
lds
outsb
jmp
outsb
push
cmp
push
orl
sti
ja
dec
test
into
push
mov
push
out
fs
push
dec
ret
insb
cld
mov
sub
xchg
pop
test
mov
mov
pushl
push
jo
pop
add
icebp
dec
mov
pop
mov
cwtl
in
cli
out
xchg
and
push
xor
mov
push
dec
add
add
push
icebp
stc
dec
mov
and
inc
and
les
sahf
int
xlat
pushf
sti
mov
in
xchg
clc
mov
imul
insl
insb
sub
hlt
cwtl
pop
test
ljmp
ficoml
cltd
pop
loop
jae
push
aaa
jecxz
push
xchg
pop
inc
flds
xchg
cwtl
adc
scas
das
addr16
sub
clc
ja
dec
jne
stc
out
or
cmp
cmp
xor
sub
fcoms
sub
mov
stc
mov
jg
addr16
insl
jns
inc
pop
push
daa
loop
ss
inc
cld
or
ret
jbe
dec
add
mov
lcall
cs
scas
sub
adc
outsl
arpl
in
xor
fs
and
mov
lret
sbbl
addr16
jb
rol
pop
pop
je
test
stos
outsl
xor
out
sbb
icebp
sbb
mov
cli
xor
cs
lahf
inc
and
jb
shrb
pop
push
loope
jp
lret
test
jp
pop
mov
cltd
fiadds
push
pop
sbb
dec
xchg
sbb
scas
clc
outsl
xchg
icebp
push
popf
and
ret
std
add
fildl
ljmp
push
loop
in
add
or
mov
dec
inc
cmp
in
push
lods
mov
or
dec
ret
or
aam
dec
lahf
pop
xor
inc
xchg
adc
push
add
add
inc
jne
sub
or
fwait
and
cmp
jl
call
cltd
test
push
inc
js
ds
cmp
adc
mov
mov
sub
leave
mov
and
mov
mov
mov
lea
sub
lret
jbe
jmp
dec
inc
shr
sar
dec
aam
jl
icebp
push
adc
dec
std
gs
xchg
lret
mov
mov
lret
xchg
cli
test
das
mov
in
mov
scas
push
sbb
enter
test
or
xor
mov
push
idivl
pop
xchg
sub
inc
fdiv
dec
dec
fwait
movsl
and
inc
sub
pop
test
sbb
shrb
arpl
mov
and
xchg
je
pop
in
aad
xor
insb
das
lock
ljmp
fistpl
addl
gs
test
repz
mov
ret
add
int3
pop
push
jp
jae
jg
les
into
pop
insl
fs
mov
mov
xor
fistpl
mov
or
mov
jmp
xchg
sbb
pop
pop
add
mov
push
xchg
pushf
xchg
push
ret
dec
jno
sbb
or
xchg
adc
dec
xor
lret
mov
pop
enter
lock
pop
prefetcht1
jge
dec
cltd
mov
ret
adc
mov
pop
rcrb
jo
call
ljmp
mov
and
mov
xor
jge
mov
das
in
and
cwtl
out
enter
lret
push
int3
frstor
cmp
and
pop
add
fwait
sbb
add
xchg
add
push
sub
adc
out
mov
sbb
xor
scas
std
add
popf
xchg
pop
aam
pop
xchg
lea
cwtl
push
fldenv
lret
in
outsl
das
fisubrl
sar
pushf
pop
fs
pushf
sub
or
cmp
xchg
and
xchg
mov
dec
hlt
mov
stc
add
pop
inc
movsl
jle
rcl
cmp
dec
cli
jmp
xor
mov
fldenv
cmc
mov
xor
nop
test
mov
lret
xchg
push
inc
mov
ja
xchg
push
in
add
call
jae
outsl
mov
dec
fnstcw
aaa
dec
ja
mov
cmp
inc
inc
sub
cmpsb
jge
adc
enter
movb
in
pop
test
gs
rcrl
into
mov
fisttps
mov
out
sbb
pop
hlt
sbb
mov
mov
insb
xor
pushf
dec
mov
int
inc
rcrl
addr16
loope
mov
in
fmuls
adc
jne
adc
rcrb
push
and
or
fisubrl
lods
enter
pop
xchg
fnstcw
cmp
arpl
nop
sub
xchg
fbld
xchg
jge
dec
data16
inc
sub
cli
pop
jmp
add
mov
std
shlb
movsl
cltd
inc
and
mov
insb
xor
pop
sbb
lret
adc
pop
xchg
aas
cmpsl
dec
lahf
add
push
inc
popa
loop
jmp
lea
fcoms
pop
xchg
dec
cmpsl
nop
aam
out
jbe
imul
in
movsl
popf
addr16
fistl
xor
add
cmp
sub
sbb
xor
mov
sub
adc
pop
xor
push
les
loop
cwtl
push
pop
jmp
sbb
push
push
sub
lret
or
lods
xchg
repnz
repz
dec
lods
lret
insl
jmp
aad
repnz
inc
mov
ja
out
pop
lret
adc
inc
mov
iret
inc
icebp
and
push
mov
xchg
mov
jmp
push
mov
mov
mov
cld
mov
aas
ror
aam
add
idiv
sub
nop
icebp
cmp
mov
js
fcomp
fsubs
adc
dec
dec
jbe
ljmp
push
adc
stos
bound
fisttps
scas
icebp
pop
std
dec
mov
out
dec
test
lock
mov
cmp
mov
fbstp
ret
adc
cld
xchg
fistpll
aad
add
sarb
insb
andl
dec
repz
adc
pop
inc
jo
std
pop
cmc
lcall
pop
loopne
sbb
mulb
push
mov
push
jne
sub
push
fcomps
pop
loope
mov
hlt
or
sahf
fldcw
cmc
popl
jle
jmp
cmpl
xor
dec
insb
pop
pop
and
xor
lret
es
jae
mov
jne
fistpll
adc
or
inc
mov
loope
fmuls
jl
pop
in
xchg
cmp
push
mov
mov
insb
push
sub
scas
lahf
push
jmp
and
nop
subb
ds
pop
adc
inc
sbb
lods
sub
in
add
std
js
cmc
shl
std
mov
mov
adc
movl
inc
scas
sarb
lahf
xchg
mov
mov
test
cli
jb
loopne
cmp
push
imul
popa
hlt
lahf
into
dec
in
jle
test
xor
leave
ljmp
ss
cmp
in
sbb
push
sub
testb
arpl
sbb
sahf
xchg
imulb
jo
ljmp
and
dec
outsl
test
in
pop
inc
xchg
movsl
mov
push
dec
mov
aas
mov
pop
sub
hlt
js
push
ja
jg
jne
sub
sbb
dec
ss
jmp
ss
shrl
cltd
out
mov
dec
inc
orb
sbb
das
mov
add
arpl
sbb
fsubrs
sub
add
pop
mov
push
aad
pop
inc
jge
adc
add
shl
jg
mov
or
mov
cld
call
add
fcoms
push
adc
fcmovnu
mov
lcall
inc
fnstenv
cmp
mov
out
xor
mov
push
inc
xchg
fs
jo
jae
iret
jo
sbb
shlb
nop
cld
dec
push
frstor
fwait
pop
rcrb
xor
sub
enter
ljmp
dec
push
rorl
sbb
cmp
imul
iret
and
dec
orl
push
xchg
push
pop
les
inc
leave
clc
scas
push
dec
jno
xor
outsl
xchg
push
test
and
add
push
cmc
mov
popf
cmc
jg
hlt
cmp
sti
cmp
imul
push
cmp
fnstcw
sub
xor
icebp
jmp
adc
movswl
aad
mov
movsl
inc
dec
push
iret
cld
inc
je
arpl
fmull
int3
cld
add
in
repnz
and
add
sub
cmp
mull
pop
jb
mulb
imul
jnp
leave
push
fdivrs
stos
je
mov
mov
sub
jns
push
adc
sahf
cmpsb
xor
jae
in
jmp
fadds
cmp
movsb
cmp
es
iret
xchg
sub
jae
bound
aaa
add
add
xchg
clc
xchg
ror
cli
popf
test
sbb
xor
xchg
or
sahf
or
adc
and
out
pop
fs
mov
test
adc
fstpl
incb
fstpt
add
in
adc
popa
je
int
sub
loop
push
daa
pop
repz
sbb
pop
cmp
jno
inc
sbb
mov
dec
les
mov
ja
aad
loope
mov
les
pop
shrl
pop
xchg
out
fwait
xor
fs
fwait
mov
lahf
stos
jb
data16
mov
mov
fisubs
test
jge
fucomi
jno
stos
pop
mov
adc
stos
or
and
fsubl
fdivrs
cmpsb
in
shl
and
inc
stc
ja
aas
rorb
jl
cmp
dec
inc
xor
fldcw
pop
mov
add
aad
push
xchg
sub
movsb
dec
mov
lods
xor
lods
xchg
stos
int
popf
lahf
jno
adc
mov
jg
jg
mov
xchg
int
sahf
das
cmp
ljmp
or
popf
cmp
mov
push
jo
jle
in
test
mov
adc
or
xchg
xchg
mov
andb
fildl
insb
and
sahf
inc
cmp
hlt
push
enter
xor
push
into
fisubrl
or
es
or
test
cltd
pop
add
inc
sbb
loope
lret
sbb
aaa
sbb
mov
inc
fwait
stos
imul
mov
cltd
cmp
push
pxor
sarb
push
fistps
es
cld
xchg
inc
cmp
sbb
xor
sbb
inc
and
scas
xchg
aaa
fnstcw
push
mov
sub
rorb
xchg
cmp
xor
push
scas
inc
adc
inc
ret
push
dec
xchg
aas
loop
sarl
ret
loop
or
loope
jns
cld
pushf
xlat
lcall
adc
jno
sti
scas
or
sub
fiaddl
arpl
pop
pop
lret
jmp
push
cmp
ss
mov
notb
inc
add
sub
sbb
and
shll
adc
bound
test
inc
or
js
aad
stos
fwait
out
sahf
out
repnz
insl
mov
leave
pusha
dec
jl
iret
hlt
dec
sub
inc
iret
fnstenv
stos
popf
sbbb
fwait
iret
into
and
mov
mov
loope
sub
shl
cld
pop
pop
outsb
jmp
sub
stos
xchg
adc
sarl
int
stos
ret
sub
pop
mov
aaa
mov
aam
jns
fstpt
jge
pop
xchg
loopne
in
aas
insl
mov
aad
push
push
test
push
stc
adc
rorl
dec
inc
lods
sub
cmp
inc
push
push
xchg
clc
cmpsl
mov
cmp
fwait
mov
cmc
inc
mov
mov
test
outsl
decl
sahf
mov
lock
test
cmp
push
cmc
dec
inc
sbb
fnsave
repnz
xchg
cmp
les
jl
cmp
shll
testb
mov
movsb
mov
in
sub
xchg
int3
mov
cs
repz
aas
inc
pop
scas
jecxz
mov
dec
mov
xor
out
sbb
jnp
es
jge
jbe
test
aas
lock
dec
cmc
out
lods
sub
scas
pop
or
mov
in
adc
mov
or
lds
stos
jle
jb
xchg
inc
jge
and
pop
inc
scas
jmp
insl
nop
sbb
shl
xchg
dec
push
jecxz
and
insb
in
sub
test
inc
sub
mov
add
sub
mov
adc
stos
dec
mov
and
lret
mov
cmpsl
loop
add
aaa
mov
mov
inc
or
into
inc
xchg
mov
loop
and
adc
cli
mov
pop
imul
mov
sub
test
jbe
rcll
enter
mov
lahf
call
dec
inc
cli
fnsave
xchg
ret
fmuls
push
lods
push
push
sbb
js
jg
push
fstps
in
out
rcll
dec
data16
scas
push
mov
xchg
lahf
outsl
cltd
cmc
popa
dec
ss
insb
mov
fildll
xor
or
and
leave
fisubrl
roll
push
xor
push
jge
push
or
push
sti
fwait
mov
jecxz
mov
pushw
sti
loopne
rolw
lock
push
notl
mov
jae
aas
sbbl
jb
repz
test
sub
sub
fcomps
push
fs
inc
rclb
add
jg
out
pop
js
push
mov
sbb
rcl
loope
clc
dec
add
jmp
rcpps
outsl
cld
movsb
clc
sbb
sub
stos
dec
and
mov
mov
mov
mov
ja
mov
sbb
ds
lods
jo
or
inc
nop
addl
mov
outsb
nop
push
xchg
fldt
sbb
jecxz
jns,pt
or
pop
stos
sbb
data16
jo
push
mov
dec
mov
sbb
push
popf
test
sar
sbb
sbb
inc
in
add
daa
push
shrl
ret
insl
push
scas
add
push
aaa
sarl
scas
mov
int
mov
and
xchg
push
ficomps
mov
mov
out
jg
movsl
cltd
sbb
cmpsl
xchg
cmpsb
sbb
mov
xchg
stos
dec
mov
repnz
lock
repz
mov
and
add
icebp
mov
xor
sbb
xchg
lds
stos
add
sbb
sahf
lods
push
mov
filds
int
sub
jg
js
fs
push
mov
mov
adc
dec
mov
repnz
cmpsb
jge
jnp
cli
ljmp
add
xor
loop
mov
mov
cwtl
mov
sub
cmc
std
inc
adc
cwtl
loope
in
push
shll
adc
dec
cmp
lea
lcall
out
out
and
mov
xchg
addr16
pop
aaa
adcb
mov
mov
gs
and
jge
or
ja
ljmp
aas
popa
fadds
and
xor
mov
and
adc
sub
ret
popf
mov
and
xchg
xor
cmpsb
in
lcall
xor
fcmovb
adc
cmpl
insl
sbb
add
mov
dec
adc
addr16
push
ss
mov
mov
or
inc
mov
fisubrl
mov
out
les
dec
daa
jae
stos
and
cmpsb
aam
dec
cmp
push
inc
sub
inc
xor
cmpsb
dec
adc
movsl
shl
push
shlb
test
idivb
push
jmp
arpl
sbb
adc
adc
inc
dec
or
loopne
xchg
dec
jecxz
sub
insl
mov
jb
cmp
iret
and
jno
movsb
xchg
pop
lret
outsb
dec
jl
dec
and
mov
add
inc
jp
sub
movsl
gs
in
int
je
iret
aad
push
push
mov
xor
cmp
movsl
xlat
adc
sub
int3
inc
scas
adc
std
bound
rorl
in
jecxz
test
mov
loope
inc
lea
pop
or
enter
push
test
fs
adc
cli
cmp
daa
mov
and
inc
das
jmp
lds
push
or
call
aaa
ss
push
push
aas
inc
pushf
and
sahf
out
push
adc
addr16
cmp
push
cmp
xlat
jmp
and
cmpsl
pushf
call
mov
ret
push
adc
push
rorl
lea
sub
rcrl
nop
andl
jle
jne
insb
dec
jmp
in
xchg
into
pop
xor
xlat
aam
out
loop
adc
push
inc
xor
adc
outsb
insl
fwait
scas
xchg
jns
movsl
or
imul
sbb
mov
jmp
std
int3
popa
inc
jbe
mov
mov
jmp
mov
shrb
sahf
push
mov
cmp
cmp
les
xchg
xchg
pop
icebp
push
mov
test
iret
sarb
pop
into
leave
inc
test
xchg
nop
xor
jle
arpl
sub
mov
mov
das
push
out
or
and
mov
mov
xor
cli
xchg
and
dec
in
test
cmpsb
popf
xchg
imul
test
ret
aam
popa
subl
scas
sbb
fdivl
daa
and
bsf
aam
shll
fcoms
mov
mov
mov
push
fnsave
dec
dec
fwait
xor
pop
and
and
icebp
inc
nop
shlb
xchg
xor
lret
mov
bound
push
mov
push
mov
adc
faddl
jae
and
xor
jmp
shr
jns
rcl
imul
in
jl
cmpsl
imul
and
cmpsl
outsb
stc
mov
jge
ror
cmp
jbe
cltd
sub
subl
xchg
fstpt
cltd
js
xlat
adc
push
pop
inc
cmp
lcall
add
xchg
jp
aaa
mov
push
sub
jb
in
sbb
push
lahf
mov
cwtl
push
cmp
xor
imul
pop
ss
inc
xchg
cmpsl
test
sub
clc
fdivs
fdivl
dec
push
ja
insl
push
shlb
out
pop
pop
loopne
adc
sarl
fcompl
cmpl
jns
andl
xor
adc
sbb
or
inc
inc
or
jo
dec
dec
out
mov
sbb
out
loopne
movsl
push
xor
ljmp
cld
mov
mov
mov
fwait
shl
in
popa
xor
cmp
mov
jae
pop
jmp
int
sub
xchg
lcall
aad
add
jbe
or
sub
pop
ja
xchg
mull
call
in
sbb
pop
orb
add
dec
adc
mov
into
out
dec
into
adc
cwtl
sub
repnz
jno
pusha
dec
fistl
push
imul
sahf
test
xor
test
movsb
inc
mov
fstpt
xchg
mov
push
push
jne
test
mov
xchg
adc
outsb
sub
mov
test
jle
test
or
test
jg
lahf
inc
sbb
in
jmp
pop
out
xchg
test
mov
mov
decl
cmpsb
insl
dec
sub
dec
subl
lds
notb
fisubrl
pop
push
divb
push
outsl
imul
cmc
enter
fwait
loop
dec
adc
inc
push
sahf
test
jns
outsb
dec
idivl
decl
pop
xchg
add
xchg
mov
push
dec
in
push
dec
jne
call
rorl
fldl
and
lea
pop
pop
mov
and
sub
sbb
adc
sub
mov
ss
cmp
sub
stc
adc
inc
pop
push
dec
lods
popf
pop
push
push
cmp
iret
div
mov
cmp
and
jno
stc
cwtl
ljmp
cwtl
loope
inc
rorl
ja
popf
shlb
xor
outsb
repz
pop
mov
adc
adc
mov
mov
cmc
add
xor
test
sarb
out
decb
adc
insb
repnz
push
xor
inc
ret
call
loope
pop
mov
dec
std
int
jecxz
scas
mov
jl
std
and
push
add
pop
xchg
leave
jno
pop
mov
or
jecxz
pop
lret
push
push
outsb
push
pop
aad
add
mov
xchg
outsl
and
cmp
insb
push
lock
adc
ret
in
int
dec
shll
mov
orb
cmp
outsl
fs
nop
adc
test
xor
lcall
cmp
xlat
shrl
jo
xchg
xchg
out
xor
and
das
das
insb
mov
int3
je
aad
ss
push
cmpsb
xchg
mov
inc
std
sbb
out
sub
dec
pushf
test
testl
xor
scas
push
shlb
mov
lods
dec
jo
mov
xchg
cli
popa
adc
xor
jnp
lahf
pop
cmp
lods
aam
aad
lahf
jnp
mov
sahf
loope
shlb
bound
sub
mov
stos
jle
ret
push
orb
ljmp
data16
das
adc
shlb
popf
xor
xchg
xchg
inc
push
mov
dec
sub
icebp
iret
int
notl
loope
pop
bound
xchg
test
cmp
cmp
test
xor
loop
xchg
fstpl
sub
mov
mov
or
push
adc
daa
cmp
jo
pop
inc
push
xchg
outsb
out
jle
ss
xor
inc
mov
fdivrl
cmp
mov
sub
xor
xchg
aad
cmpsl
adc
sub
cmp
or
lret
aaa
sub
repz
insl
sbb
push
mov
mov
mov
fcmovnu
repz
push
add
jnp
aam
lds
idiv
inc
mov
inc
mov
cld
shrb
xor
mov
loop
popf
je
inc
outsb
cmp
out
lds
adc
pop
mov
xor
push
in
mov
cmp
inc
xchg
mov
mov
jo,pt
movsb
jg
test
sub
push
leave
jmp
dec
and
dec
jg
pop
push
adc
push
jo
int
hlt
xchg
out
add
pop
fmuls
push
repz
insl
dec
mov
cltd
lds
mov
push
imul
mov
pop
out
mov
lea
add
jmp
xchg
stc
dec
dec
push
push
mov
movsb
xor
adc
pop
outsl
lods
jge
cmpb
movsl
ret
inc
fsubrl
pusha
and
rorl
mov
and
mov
push
push
subl
cmp
cmp
std
sarl
test
fisttps
xor
push
push
mov
push
popa
push
lea
imul
adc
mov
or
ds
cmpsl
mov
add
out
jne
mov
mov
and
jg
stos
jae
xor
cwtl
mov
test
sbb
lret
ds
or
fnstcw
loope
int
loop
dec
pushf
repz
divb
or
cmp
pop
and
int
jnp
pop
cmp
push
scas
cs
lcall
or
iret
mov
das
mov
xor
cmp
jg
adc
inc
insb
cmpsb
aaa
cltd
dec
pop
into
or
or
insb
movsb
cmp
mov
xchg
jg
mov
and
add
fiadds
out
ret
inc
xchg
xlat
fsts
or
jle
mov
dec
mov
jo
cmp
mov
push
scas
mov
loope
stc
add
or
mov
je
hlt
ja
xchg
les
mov
mov
int
ja
xchg
add
xchg
enter
xor
scas
pop
test
popa
roll
inc
and
mov
cmp
nop
in
lds
mov
adcl
sbb
inc
ljmp
lahf
sarb
sbb
xor
gs
xchg
and
lea
dec
mov
mov
rolb
adc
movsb
mov
negb
lret
fstps
and
lock
sbb
pop
data16
dec
push
psubsb
out
push
enter
and
adc
push
scas
adc
lret
lret
aaa
nop
pop
daa
je
jae
popf
add
or
cmpsb
call
js
sbb
aam
pop
ja
imul
xchg
fsqrt
pop
lds
test
popa
cmp
and
test
jnp
and
std
inc
std
and
pop
xor
loop
pop
sahf
in
lock
mov
xchg
sub
adc
push
mov
mov
inc
iret
mul
pushf
jl
xchg
jnp
test
jno
fisttpl
mov
and
or
cmp
push
push
sub
inc
and
out
mov
in
xchg
xchg
insl
pop
sti
out
shll
fwait
xchg
inc
cwtl
jle
mov
sbb
jmp
bound
dec
mov
test
std
dec
mov
dec
cmp
mov
scas
imul
jne
inc
das
fwait
dec
lds
gs
cmp
push
fiaddl
test
andb
mov
adc
pop
pop
cmpsl
out
cmpsb
inc
inc
lock
mov
popl
lcall
bound
sarl
pusha
subb
add
fldenv
das
into
std
xor
jmp
cmp
test
nop
push
pop
sub
mov
inc
rcll
scas
dec
push
jmp
sbb
jle
andb
jbe
daa
insl
stos
stos
pop
daa
mov
pop
and
ret
scas
lock
dec
out
mov
movsl
ja
out
das
std
adc
mov
cmp
push
push
inc
test
insb
xchg
add
es
mov
pop
xchg
jb
int3
dec
mov
dec
adc
cmpsb
nop
in
pop
mov
aad
faddl
lods
inc
pop
inc
inc
shl
jo
iret
mov
enter
addr16
test
gs
gs
dec
je
enter
shrb
ljmp
jne
pop
dec
rolb
ss
add
mov
loope
cmpsl
add
mov
icebp
test
pop
mov
out
sbb
cmp
xchg
fs
test
std
push
jnp
cmp
cli
call
or
jns
rclb
ds
in
imul
popa
jge
cltd
lea
inc
adc
sbb
mov
sub
cwtl
inc
dec
mov
xchg
or
jb
sub
add
xchg
push
nop
mov
add
popf
add
outsl
sub
pop
inc
push
push
cmp
or
hlt
pop
icebp
mov
xchg
into
push
ja
jg
xchg
in
inc
push
cmp
adc
push
pop
or
bound
and
xchg
cmpb
cmp
mov
cwtl
jnp
or
xorl
mov
add
sbb
cmp
cmp
in
in
stos
mov
cmp
inc
mov
dec
inc
adc
push
xchg
std
push
dec
jle
aaa
push
mov
jl
cmp
cmp
aam
inc
fsubp
add
mov
pop
add
in
daa
test
cmp
cmp
and
lret
xchg
jns
xchg
or
dec
popf
cltd
enter
and
mov
lea
or
push
rcr
inc
mov
cmc
rorb
jo
jmp
negb
sbb
movsb
dec
jge
lea
arpl
ficoml
and
push
xor
mov
mov
scas
push
stc
xorb
add
sub
mov
mov
fstl
fistl
lcall
fs
mov
inc
xchg
xor
sub
rcr
xor
aam
lcall
push
sub
and
jns
mov
push
jecxz
dec
add
add
or
stos
lcall
and
cwtl
add
pop
or
and
test
adc
lds
flds
clc
sbb
cmp
jg
jae
cmp
xor
mov
mov
and
mov
xchg
popa
jle
add
outsb
sub
shlb
cmc
in
xchg
add
inc
cmpsb
cmc
sub
sbb
adc
push
pop
xchg
and
mov
xor
push
and
lea
movsb
jbe
fnsave
mov
jae
lcall
push
out
dec
sub
push
xchg
xchg
dec
sub
dec
arpl
mov
dec
fcoml
aam
pop
sahf
mov
jb
dec
mov
nop
in
xor
xchg
test
pop
mov
mov
mov
adcb
repnz
push
xorb
insl
cwtl
pop
jae
outsb
cmp
inc
fldcw
mov
repz
in
dec
dec
jg
push
push
mov
setbe
or
cld
cmpsl
lahf
add
out
aaa
out
in
and
leave
jb
outsl
bound
inc
fs
sahf
movsb
mov
stos
daa
je
inc
push
or
push
lret
ffreep
mov
sbb
pop
aad
cmc
lock
push
jp
test
aaa
fs
mov
mov
mov
dec
jnp
ja
pop
add
mov
insb
jmp
sbb
fsts
das
aam
stos
test
sbb
mov
out
js
dec
cmp
fstps
cmc
dec
inc
lret
jb
xor
sahf
lds
test
jg
stos
lahf
fdivr
aaa
test
add
or
mov
aam
and
adc
out
jb
insb
fs
pushf
mov
loope
scas
jns
imul
stos
pop
mov
xchg
in
mov
sbb
test
lea
xor
sti
dec
mov
cs
mov
int
add
sub
jg
cs
shlb
ss
scas
mov
out
mov
lret
adc
xchg
cmp
lds
pusha
lods
mov
push
pusha
mov
imul
adc
clc
das
adc
add
ret
mov
lcall
out
pop
jecxz
fcoml
cmp
push
push
shr
jne
mov
pop
ret
sbb
dec
and
iret
movsl
jb
lea
nop
lea
mov
fs
cmp
mov
bound
pop
inc
outsb
nop
sub
pop
jbe
scas
xchg
mov
fcmovnb
adc
aad
nop
pop
and
jge
lods
inc
movsl
dec
push
imul
cltd
xchg
sub
inc
push
pop
mov
loope
xchg
insb
and
sbb
cmp
loopne
movb
ds
mov
js
les
mov
mov
mov
mov
adc
sub
sub
aad
xor
mov
dec
scas
loop
test
mov
cmpsl
xchg
mov
dec
das
push
test
push
xchg
xor
jecxz
push
push
shll
lods
cmp
decb
addr16
std
push
cli
out
cmc
jg
lcall
sbb
frstor
jnp
inc
sub
fimull
sti
mov
inc
jmp
or
int
repz
mov
pop
xchg
mov
stos
aas
xchg
sbb
mov
mov
loop
cld
or
sti
aaa
cltd
clc
lds
push
add
lcall
add
mov
ljmp
xor
mov
fs
sub
mov
adc
int
ljmp
and
inc
add
ret
cltd
sbbl
push
outsl
orl
sbb
pop
les
or
xor
xor
mov
pop
or
out
dec
lret
jmp
mov
fs
mov
mov
adc
ljmp
mov
pop
enter
sbb
int
stos
sbb
xchg
daa
push
jne
lcall
pop
ret
adc
lcall
es
fdivs
gs
dec
adc
outsl
or
shl
in
repnz
sar
cmp
outsb
add
loopne
cmpsb
int
inc
fdivl
aam
pop
sbb
shlb
sub
int
scas
push
jbe
inc
cmc
add
jecxz
dec
xchg
in
cltd
clc
sbb
fstpl
cwtl
cli
mov
jl
insb
mov
adc
les
fadds
sub
and
out
shll
mov
lret
sti
insb
call
and
pop
push
cld
xchg
stos
mov
leave
int3
test
dec
pop
sub
cmc
push
in
out
add
insl
inc
incb
inc
dec
jns
aas
loop
sbb
sar
lcall
cmp
test
les
fcomip
cmpsl
je
cmp
cmp
and
mov
jmp
mov
cmp
push
cs
fwait
es
dec
gs
mov
pop
cld
jmp
fdivrl
cmp
push
scas
lods
cmp
in
adc
mov
daa
repnz
jle
push
mov
pop
les
inc
pop
sbbb
sti
movsb
stos
inc
add
js
dec
adc
imul
jmp
and
es
roll
add
insl
dec
push
scas
cmc
pop
outsb
in
dec
and
xor
pop
ret
pusha
sub
or
jo
lret
lds
pop
out
out
add
in
sub
and
sub
add
jno
mov
mov
jb
lds
scas
call
fs
fistps
sub
out
cmp
jge
loop
push
outsl
sbb
mov
dec
sub
pusha
ret
mov
call
jo
in
hlt
mov
cmc
or
push
xlat
sub
and
sbb
aam
int
mov
pusha
inc
push
or
lret
insl
pop
pop
cmp
fwait
and
xchg
outsb
cmp
sub
add
in
mov
decl
sbb
lds
jno
jg
sti
and
xchg
mov
mov
xor
jae
ret
sbbl
cmp
andb
orl
dec
push
pop
call
mov
xchg
bound
and
enter
add
pop
cmp
jmp
test
frstor
add
mov
mov
pop
sub
iret
sub
and
jnp
cmp
xor
mov
scas
sub
lcall
ja
call
add
xor
in
loop
ret
pop
outsb
push
push
add
mov
lock
testb
sub
push
push
out
dec
out
inc
jo
iret
cmp
jle
sbbb
mov
xor
and
aaa
sub
icebp
ret
push
mov
and
lods
ret
arpl
fsubrs
adc
aas
mov
mov
mov
cmp
jle
stos
cmp
pushl
jg
mov
cmpl
in
dec
lahf
ret
ret
mov
or
test
shll
add
es
pop
hlt
sbb
push
bound
js
pop
and
adc
sti
add
fwait
mov
adc
mov
adc
or
xor
popf
sub
xor
out
nop
push
popf
mov
enter
cli
adc
cmp
push
or
aam
mov
in
xchg
sbb
push
mov
arpl
es
add
mov
movsb
sbb
xchg
or
mov
in
xor
mov
shlb
int3
add
or
jg
mov
sti
mov
pop
iret
inc
and
call
mov
jne
dec
lods
std
push
stos
inc
lret
and
dec
jbe
insl
adc
mov
dec
icebp
jo
lcall
popw
imulb
out
dec
mov
jl
test
or
stc
lret
dec
ret
and
push
mov
push
hlt
or
adc
xor
cmp
inc
add
xor
push
mov
and
enter
pop
and
inc
sub
xor
cwtl
in
jg
mov
jmp
aaa
xlat
adc
dec
stc
push
cli
mov
in
xor
or
roll
rol
add
adc
fdivrs
lock
xchg
ficompl
add
loope
pop
fcompp
cmp
mov
add
xor
xor
jle
pop
push
xchg
sbb
or
enter
mov
jecxz
sbb
add
mov
addb
ljmp
xlat
dec
scas
cmp
loop
andb
mov
mov
mov
lahf
clc
jge
cld
mov
testb
cmc
or
fs
rol
mov
scas
inc
filds
or
loope
lock
fcmovnu
rorb
mov
nop
leave
or
ljmp
int3
bound
mov
jns
and
inc
fimuls
push
repz
in
xchg
push
jp
dec
dec
icebp
push
hlt
shll
js
jne
cmp
cmpsb
in
mov
mov
jne
sti
push
insb
jb
jg
aad
iret
pop
inc
or
in
cmp
pop
fwait
clc
mov
fdivp
icebp
ret
popa
sub
ret
adc
imul
pusha
jp
mov
loope
and
in
cld
dec
inc
jmp
iret
xchg
xchg
lahf
xorb
mov
push
adc
lea
mov
rolb
cmp
mov
popa
mov
mov
cmpl
insb
jns
inc
mov
cmc
xchg
mov
push
mov
dec
cmp
mov
jo
cmpsb
pop
int
clc
xchg
xchg
test
mov
fldenv
push
cmp
int3
push
jae
sub
dec
dec
mov
aam
sub
lods
repz
jb
inc
cwtl
stos
js
xchg
daa
cmpb
adc
fwait
cmp
into
imul
inc
movsb
pushfw
adc
scas
add
pop
stos
sahf
jae
push
dec
mov
and
push
dec
insb
cmp
addr16
push
push
and
inc
or
jecxz
xchg
scas
xor
nop
call
xor
mov
lret
xor
xorl
push
in
jle
and
loope
mov
pop
dec
das
in
dec
lcall
int
mov
or
dec
lcall
mov
mov
jb
dec
mov
mov
inc
dec
dec
adc
ss
aam
push
cmp
inc
jp
pop
lcall
inc
test
stos
lds
addr16
xchg
das
xor
test
sbb
shll
xchg
xor
mov
cmpl
sbb
add
jg
cmp
fs
clc
inc
push
push
pop
xor
loop
shlb
test
imul
in
push
lea
lcall
jg
cmp
inc
push
pop
ljmp
pop
iret
and
lret
and
incb
js
stc
xchg
aam
jae
sahf
add
mov
imul
jecxz
loope
movzbl
adc
mov
add
shlb
int
and
pop
xchg
scas
nop
xchg
cmc
mov
and
dec
fs
or
mov
mov
mov
inc
or
int
rcrl
lea
pop
jmp
icebp
xor
add
or
nop
ljmp
int
sbb
pop
nop
mov
and
enter
inc
in
stc
cli
push
ret
sub
adc
xor
test
push
sub
stos
sub
loope
pushf
outsl
imul
xchg
mov
mulb
push
xor
rcr
mov
dec
push
dec
or
fimuls
mov
mov
mov
imul
xor
xchg
xchg
stos
mov
fisttpll
push
rcrb
dec
adc
cld
mov
enter
or
mov
cmp
cmp
nop
or
cmp
dec
out
sbb
fnclex
ret
sbb
xchg
shlb
gs
imul
inc
aad
int
call
sbb
add
int
pop
popa
mov
cmp
cmpb
imul
repnz
and
adc
fndisi(8087
add
testl
aad
pop
mov
adc
sbb
add
push
fsubs
popf
xchg
sbb
sub
sub
xchg
push
xor
inc
xchg
sub
sar
mov
fistl
pop
in
sbb
pop
jnp
mov
pop
add
jb
mov
xchg
test
mov
int3
sarl
push
scas
movsl
scas
repnz
ds
lods
mov
add
pop
mov
cli
insl
or
orb
arpl
jecxz
push
shr
sti
aas
pop
cli
stos
xorl
inc
add
dec
inc
jnp
in
movsb
pop
mov
cmp
inc
movsb
sti
rolb
mov
in
bnd
xchg
int
std
pop
add
mov
jge
sbb
dec
or
movsl
mov
shlb
das
cld
sahf
les
ljmp
fbld
push
xchg
popf
roll
add
cmp
cld
les
push
push
jbe
loopne
popa
lods
int3
int
nop
outsl
cmpsb
fnstenv
data16
pop
mov
dec
jb
cmp
out
sbb
push
loop
pminsw
mov
outsb
pop
mov
sarb
or
js
sub
sti
xor
and
iret
stos
pop
inc
pop
popa
movsb
mov
mov
mov
mov
sahf
xor
sbb
or
xchg
cmp
mov
call
outsb
push
lcall
xchg
sub
adc
inc
lret
or
insl
lcall
ret
loopne
push
mov
cmp
sbb
and
adc
cmovns
xchg
and
int
add
mov
mov
int3
inc
stos
mov
cs
in
dec
jo
stos
sub
jne
hlt
std
and
xor
push
cmp
stos
int
mov
out
cmp
mov
orl
xchg
mov
sub
cmp
mov
adc
and
push
fcmovnu
jno
negb
pop
jmp
cwtl
add
cmp
mulb
out
mov
or
int
mov
test
push
setno
sbb
shl
lods
imul
insb
jecxz
scas
sbb
xchg
add
jae
mov
cmp
loop
jo
mov
inc
push
or
icebp
pop
mov
aad
add
pop
lret
xor
fs
pop
cmp
iret
pop
fistl
mov
cmc
jne
inc
orl
pop
out
or
lcall
sbb
pop
pop
fwait
sub
scas
pop
xchg
icebp
mov
sbb
inc
testl
sti
push
das
imul
mov
push
lret
push
out
lcall
roll
push
or
dec
rolb
mov
sbb
xchg
adc
sub
dec
in
insl
mov
xchg
popf
mov
mov
dec
adc
std
mov
mov
mov
jl
dec
mov
data16
jg
adc
test
dec
ret
jge
mov
bound
cmp
out
inc
pop
push
or
cmp
pop
and
cmp
in
cli
sbbl
std
pop
iret
dec
xor
pop
or
scas
or
and
inc
and
xchg
cmpsb
sbb
test
repz
mov
push
mov
add
push
aam
loop
aas
dec
leave
xchg
cmp
pushf
mov
faddl
movsl
pop
cmp
xchg
adc
jge
pusha
mov
imul
iret
pop
leave
clc
iret
test
jb
dec
sahf
decl
pop
pop
dec
and
repz
dec
or
mov
aas
scas
sbb
pop
adc
fwait
xor
and
test
imul
jg
push
or
xchg
inc
rclb
mov
add
xchg
iret
push
adc
push
pop
sbb
fbstp
in
sti
mov
lahf
push
jp
xchg
inc
cmc
jmp
test
ffreep
xlat
cs
cmp
sarl
mov
lods
pushf
jb
imulb
inc
cmpsb
rorb
and
sahf
ret
sbb
das
push
frstor
out
cmp
fiaddl
aam
in
fadds
lret
inc
ds
int
xchg
cltd
frstor
mov
cld
aaa
aas
cli
mov
cld
adc
xchg
sub
xor
add
xor
das
mov
cli
xor
ljmp
arpl
mulb
xchg
or
aam
or
ret
stos
call
insb
push
mov
js
cli
into
insl
sbb
sub
pop
cmp
mov
xor
movsl
shr
test
and
rcrl
popa
int
lea
mov
and
lods
mov
outsb
add
test
xchg
mov
or
xchg
sub
pop
bound
mov
mov
push
cmp
or
cmp
mov
out
adc
jns
idivl
fcoml
out
filds
iret
mov
or
ss
push
mov
inc
roll
aaa
push
jl
ficoms
xor
inc
fwait
cmp
ret
leave
into
cmp
jbe
push
int3
push
push
pop
cmp
inc
test
pmulhw
mov
jg
or
push
and
mov
add
jbe
xchg
mov
incb
es
ljmp
fimuls
mov
or
loope
lret
ss
inc
jo
outsl
xor
xor
cmp
mov
add
fisttpl
clc
lahf
ja
dec
imul
in
lret
mov
fdivrl
fs
ljmp
aas
push
imul
cmpsb
mov
shll
idiv
outsb
mov
lret
in
xchg
jmp
aam
push
shl
push
cmc
mov
adc
movsb
dec
repz
cs
clc
sti
int
sti
imull
sbb
inc
popf
ss
int3
pop
movsb
pop
push
scas
mov
mov
pop
sti
mov
fdivrl
dec
cmp
pop
outsl
lods
mov
or
sub
inc
mov
mov
test
hlt
lock
sbb
andb
lret
add
inc
cli
fwait
lods
cli
enter
jge
cmp
ret
cwtl
insl
insl
scas
pop
mov
cmc
cltd
fcompl
mov
adc
xchg
inc
pushf
dec
add
je
movl
or
jo
jmp
imulb
mov
jnp
sarl
icebp
cmpb
ja
pop
dec
xor
jbe
cs
adc
lcall
mov
inc
insl
pop
xchg
scas
add
test
mov
add
fdivrl
xchg
pop
jno
xchg
cmpl
jg
dec
repnz
clc
sub
ja
aad
or
ret
adc
in
adc
test
stos
jno
leave
mov
jae
xchg
push
fistl
jne
adc
and
xchg
sbb
xor
pop
stos
stc
clc
push
xchg
mov
add
mov
ret
pop
idivb
mov
ret
and
pusha
adc
fldl
mov
dec
movsl
push
fnstsw
je
incl
nop
sbb
push
ljmp
and
cmpsl
in
mov
les
dec
and
cmp
mov
mov
push
adcb
call
pop
push
jb
mov
jnp
add
dec
clc
cld
fs
out
mov
cmpsl
addr16
sbb
or
and
aaa
or
push
decl
insb
lcall
lret
push
or
addr16
pushf
aam
not
aam
aad
in
lock
xor
std
in
mov
hlt
hlt
cwtl
cmc
jmp
data16
in
outsl
ljmp
mov
aad
cpuid
dec
and
add
jb
lods
loopne
and
in
lret
xlat
jb
or
cmp
movsb
int
or
mov
sub
push
xchg
subl
in
jo
bound
into
inc
pop
jbe
mov
add
subb
pop
mov
xchg
jae
and
jns
push
fisttpll
cmp
divl
in
adc
mov
jb
jmp
repnz
sub
cmp
sbb
clc
pop
xchg
cmp
sti
scas
cli
sub
add
jbe
addl
fmull
cltd
je
clc
jbe
add
pop
popf
mov
mov
out
sbb
jl
add
and
sbb
test
jp
aad
inc
pop
cmp
xchg
outsl
pop
lahf
addl
out
movsl
sahf
jae
dec
push
cmc
mov
je
sub
fisubrl
mov
imul
cwtl
inc
push
push
test
xlat
arpl
xor
dec
std
orl
icebp
cmpsl
addr16
aad
int3
push
outsl
test
das
iret
or
cli
and
shrl
pop
lahf
cltd
rcr
lds
test
push
imul
jge
scas
push
push
arpl
out
fldenv
out
push
cmp
arpl
fisubrs
aam
mov
push
sub
dec
mov
data16
xchg
cmp
jb
fcoms
fnstsw
neg
mov
jmp
test
push
aad
jnp
repnz
adc
fisttpl
out
lock
xchg
es
pop
push
mov
cmp
daa
pop
sbb
mov
out
lret
add
pop
sub
jae
cmp
sub
inc
cltd
pushf
sbb
jno
push
aas
push
push
ljmp
sub
frstor
addb
xor
xor
mov
bound
xor
push
and
mov
test
out
cmp
aam
xorb
pop
enter
in
jnp
and
gs
or
stos
pop
xor
gs
jno
rclb
add
popf
data16
mov
jbe
push
mov
xor
stos
jne
es
push
mov
dec
jp
or
pop
das
into
xchg
inc
std
gs
sahf
inc
xor
fidivrl
cmp
fldenv
ret
mov
scas
mov
out
jge
cmp
pusha
into
sub
dec
je
int
and
mov
movsb
cmp
push
pop
xlat
jns
or
pop
sbb
je
pop
jae
mov
dec
xor
arpl
dec
dec
push
fiaddl
sub
ret
and
out
jp
add
jbe
jle
mov
lret
adc
pushf
inc
jmp
popa
fucomip
outsb
out
imul
mov
push
dec
leave
adc
outsl
jp
sbbb
lea
mov
divb
mov
adc
ror
frstor
xor
adc
sub
sub
imul
inc
cli
fcom
pop
pop
out
divl
pop
adc
stc
xchg
or
xchg
inc
lock
mov
adc
cmp
jp
imul
or
adc
bnd
jg
dec
and
push
dec
es
xchg
xchg
push
faddl
int
jnp
mov
push
in
dec
or
popa
sub
shll
popf
sbb
inc
lds
xchg
pop
and
jg
inc
jae
imul
ja
mov
mov
subl
aaa
sbbb
arpl
inc
mov
aas
loop
xchg
mov
mov
data16
je
lock
in
sahf
jne
ljmp
aam
mov
sub
insb
adc
xchg
lcall
xlat
in
inc
int3
and
roll
fnstsw
ljmp
imulb
test
stos
popa
mov
icebp
lods
xor
mov
bound
pop
fsubs
or
aad
shr
frstor
orl
mov
mov
movsb
stc
sbb
das
sub
rorl
andl
shl
dec
cmc
mov
sbb
add
mov
arpl
xchg
mov
mov
incl
in
mov
dec
xor
inc
xchg
in
cmp
push
jp
cmp
out
rclb
fisttpl
add
movl
inc
fs
ret
push
and
ja
stos
nop
mov
xor
or
aam
dec
mov
idivl
pop
pop
mov
xor
add
cmp
mov
push
jbe
mov
sbb
inc
gs
fwait
or
lea
or
imul
lea
jno
and
inc
iret
inc
add
push
imul
int
jmp
imul
cwtl
pop
leave
xchg
xchg
dec
pushf
mov
daa
pop
in
push
jg
adc
aam
push
sub
incb
popf
and
das
inc
mov
push
sub
loope
pop
int
int
mov
or
ljmp
iret
js
test
push
in
add
jge
push
enter
es
divl
mov
lds
mov
pop
daa
std
lret
add
lods
sub
fistps
dec
or
aam
fnstenv
test
fists
cli
xor
inc
addr16
xchg
mov
fwait
outsl
sub
notb
xor
lods
pop
int
adc
ret
repz
jmp
pop
ds
sub
add
movsl
mov
xchg
fs
dec
fsubl
mov
jnp
pop
in
and
inc
rorl
lods
outsb
rclb
pop
aad
mov
lds
testb
je
mov
adc
rcll
shrb
mov
inc
and
gs
in
shl
dec
xor
bound
or
pop
xchg
adc
sbb
jle
or
movsb
lahf
nop
sub
fwait
into
sbb
aas
jns
in
fsubr
jle
mov
dec
imul
bound
jnp
jge
mov
mov
xor
adc
pop
je
push
push
cmp
pmaxub
mov
sbb
pop
into
sbb
pop
imul
lds
addr16
xlat
mov
adc
aaa
sti
dec
lock
jbe
loope
dec
mov
icebp
sub
jl
sahf
sbb
out
or
push
pop
stos
aas
aas
mov
sbb
mov
imul
in
pusha
fsubs
xchg
cwtl
mov
add
sub
imul
aas
dec
mov
lahf
pop
jns
xchg
cmp
pop
pop
mov
dec
push
fs
enter
arpl
push
ss
mov
cmp
mov
ret
jmp
pop
mov
inc
push
mov
iret
scas
lds
pop
push
push
test
mov
jae
mov
call
aam
insl
cmpsb
adc
scas
sbb
xchg
fucomp
push
mov
xchg
pop
cld
das
jns
mov
test
jge
pushf
mov
not
pop
aam
nop
pop
mov
aas
fs
xchg
aam
jae
cli
jmp
mov
in
shlb
mov
lock
scas
pop
jmp
push
xor
mov
aas
push
call
rcrb
roll
jae
adc
loopne
mov
lret
ljmp
insb
inc
cld
cmpsb
xchg
push
out
je
dec
lods
mov
fidivrs
popa
in
or
xlat
inc
test
inc
mov
dec
xor
add
lahf
mulb
stos
in
lods
sub
negl
fs
xchg
push
jg
fimuls
cmpsl
and
in
or
js
xchg
test
jb
adc
lods
sub
cwtl
dec
notb
das
add
cmp
lock
outsb
xchg
iret
xlat
shlb
scas
ss
and
and
stos
lods
loop
aaa
loopw
adc
outsb
in
jae
and
dec
call
nop
lahf
icebp
xchg
shlb
fisubl
fstp
ja
cmp
sar
les
outsb
sbb
ss
xchg
sbb
push
stos
shl
mov
dec
rclb
jne
cmc
jno
lds
cmpsl
add
adc
xchg
das
cmp
pop
jmp
insl
pop
dec
stos
cmp
inc
cli
mov
pop
shrb
pop
cmpb
jbe
cmc
fdivrs
lea
aad
insl
bound
aas
bound
sarb
hlt
nop
pop
and
js
outsl
lret
in
push
popa
pop
or
lock
call
test
mov
add
loopne
gs
fstps
stos
in
xchg
shl
jno
mov
push
push
add
sbb
pop
push
insl
test
pop
push
or
clc
cmp
mov
dec
and
insl
sub
cli
cmp
adc
pop
push
adc
xchg
aam
test
in
mov
mulb
lock
push
pop
xchg
test
push
mov
jp
addl
mov
mov
and
cmc
xchg
mov
and
addr16
and
std
jecxz
jnp
xchg
sbb
xor
push
ss
sbb
and
out
jle
push
mov
cmpsl
in
jbe
into
aam
push
fdivrl
add
and
fstps
xor
inc
in
and
stos
push
js
mov
mov
xchg
cltd
push
int
fucomp
push
aas
jecxz
add
or
xchg
test
sbb
mov
mov
adc
mov
sbb
pop
scas
cs
dec
hlt
fwait
and
outsb
adc
ljmp
push
test
cmp
aas
pop
in
fcmovnu
pop
lret
mov
cmp
repnz
arpl
hlt
xchg
sarl
dec
push
sub
pop
scas
aaa
push
mov
inc
sbb
pop
aas
jg
leave
xchg
shlb
adc
mov
mov
add
test
test
pop
inc
add
inc
leave
and
mov
xchg
pop
das
arpl
mull
aam
and
pop
sub
and
push
ret
xchg
and
adc
lcall
dec
and
lds
lcall
push
fisubl
aaa
fwait
pop
xchg
and
test
push
fldt
das
mov
mov
mov
in
lcall
ret
or
in
call
jecxz
jmp
jge
mov
fstpt
pop
test
test
data16
or
dec
cmc
stos
bound
mov
dec
dec
xchg
cmp
stc
mov
push
pop
push
dec
cmp
std
jnp
repz
jns
push
jne
and
aas
lsl
loopne
nop
lds
mov
movsb
push
and
gs
test
loope
cmp
xchg
leave
xchg
mov
jno
sub
lret
xor
pop
jo,pt
repnz
cmp
int
movsl
mov
jl
std
call
and
cmp
xor
mov
inc
and
push
push
jp
cltd
push
adc
push
movhps
or
adc
mov
pushf
add
sub
in
jl
jno
lock
sub
movsl
outsb
cmc
fsubs
stc
or
jae
orb
int3
insb
sub
adc
xchg
lock
daa
jns
insl
jo
mov
xchg
cmpsl
mov
scas
int3
xchg
mov
mov
insb
addl
jmp
movsl
inc
xchg
mov
add
fsubrl
mov
dec
in
jmp
movsl
ret
or
enter
dec
aas
and
dec
mov
jmp
mov
xchg
xlat
in
cwtl
out
jns
ret
and
adc
ror
xchg
xchg
adc
daa
lahf
mov
xchg
xchg
fadd
enter
std
sbb
sbb
dec
cwtl
pop
aaa
xor
clc
adc
or
fisubl
add
sti
xchg
mov
push
ud2
mov
imul
mov
cmp
cmpsb
jbe
clc
ficompl
cwtl
sbb
mov
cld
sbb
enter
inc
icebp
int3
daa
dec
cmp
xchg
cmp
sbb
cmc
ja
loop
sti
cmp
je
mov
sub
sbb
and
mov
jle
inc
inc
mov
aad
loope
movsl
mov
imul
and
mov
mov
cmc
or
fwait
pop
dec
insl
loopne
cltd
xlat
es
pusha
cmpsl
mov
bnd
pop
cmpsb
rorl
jmp
push
pop
jg
jbe
test
addr16
rcrb
and
addr16
xchg
nop
and
fiaddl
cmp
cmp
daa
inc
insl
mov
or
mov
hlt
mov
fstl
xchg
outsl
jmp
push
sub
adc
test
jbe
lods
dec
push
enter
fiaddl
arpl
xchg
mov
std
nop
and
mov
fldpi
mov
daa
fdiv
push
pop
in
xchg
je
mov
sub
add
test
adc
pop
push
or
sbb
lahf
les
sbb
fmuls
dec
dec
mov
or
or
cli
jbe
add
fisttpll
mov
xchg
push
scas
lret
cmp
mov
adc
mov
jg
sub
hlt
and
jge
in
pop
jb
and
stos
pushf
jmp
jmp
adc
negb
lret
insl
jb
adcl
inc
xchg
daa
adc
sbb
pop
mov
jno
call
adc
test
mov
imul
sbb
push
hlt
fwait
sbbb
sbb
icebp
or
dec
lock
pop
lods
adc
or
pop
in
les
popa
sahf
push
mov
sbb
lahf
inc
add
jo
ret
push
test
fstps
jge
cld
push
mov
sbb
or
push
pop
daa
cli
sbb
and
popf
xchg
dec
scas
lods
adc
mov
push
jbe
es
or
fcomp
cmp
mov
dec
std
adc
cmp
ja
jne
fisttpl
mov
mov
out
and
fldenv
inc
es
out
cmpb
inc
in
test
idivb
mov
dec
outsb
cli
sbb
add
cmpsl
lods
lahf
jo
push
pop
or
adc
mov
xchg
add
sti
xlat
cwtl
iret
pop
fwait
push
lods
fidivrs
mulps
add
adc
sbb
jno
sahf
rclb
sub
lret
sbb
loope,pn
out
shlb
add
jnp
movsb
in
xor
lods
pop
xor
adc
or
mov
sbb
popa
add
cs
mov
mov
pop
adc
pushf
notb
test
ja
or
pop
cwtl
repnz
dec
jecxz
jo
mov
into
lock
shl
mov
addr16
in
sbb
mov
stos
divb
hlt
ja
stos
jne
jnp
fsts
sbb
js
add
test
pop
or
js
jl
pop
and
pop
movsl
mov
jg
push
pop
xchg
hlt
subb
cmp
in
mov
inc
jmp
mov
push
insl
cmp
mov
mov
cmp
inc
xlat
jecxz
movsl
add
adc
popl
stc
pusha
cld
inc
dec
pop
push
cmp
lock
in
ret
mov
jbe
mov
inc
enter
add
repnz
inc
iret
pop
int3
xchg
jp
out
out
idivb
jae
jno
rcll
enter
repnz
sub
xorl
and
dec
inc
sbb
mov
sbb
push
mov
inc
lea
mov
dec
sbb
daa
sbb
cwtl
ds
fdiv
dec
mov
scas
and
push
xorb
xchg
stos
in
mov
mov
add
stos
mov
fcompl
lock
push
dec
nop
outsl
xor
stc
mov
inc
inc
mov
test
or
out
jge
shr
jge
in
adcl
setbe
dec
mov
daa
jle
or
and
in
aam
sti
in
jne
stos
sahf
push
int
mov
dec
cmp
push
jecxz
pusha
repz
aad
cld
xor
sbb
call
xlat
sahf
adc
push
pushf
jno
and
lret
add
pop
mov
mov
enter
mov
sub
push
pusha
test
subl
jno
jmp
xor
daa
lret
loopne
and
inc
in
lahf
iret
xchg
in
jmp
push
lcall
or
inc
fwait
inc
cltd
aam
inc
outsl
gs
in
icebp
aas
nop
push
push
add
xor
stc
cmp
or
mov
pop
mov
mov
adc
xchg
das
dec
and
pop
xor
mov
add
lahf
xor
xchg
dec
dec
outsl
and
xor
aad
pop
out
fbstp
cmp
in
or
fldenv
hlt
leave
sub
test
test
daa
mov
cmp
mov
ficoms
mov
ret
mov
or
inc
add
ficompl
sub
jnp
xorl
pop
fstps
cltd
pop
dec
jnp
out
xor
cmc
sub
mov
arpl
dec
daa
and
adc
loop
mov
cmp
dec
mov
xchg
pop
mov
frstor
fists
sbb
loopne
outsl
mov
sarl
mov
sarl
mov
scas
push
bound
add
in
lret
mov
in
aam
pop
lret
inc
jecxz
shrb
xlat
rcl
into
mov
push
jmp
cwtl
imul
dec
lret
push
es
lret
scas
std
sub
ret
rcr
outsl
hlt
loope
add
sbb
xchg
shl
pop
lcall
das
cltd
or
dec
mov
popa
mov
sbb
and
xor
jo
add
or
das
dec
icebp
adc
and
leave
and
pop
jb
push
loope
or
xchg
popl
int3
shrl
arpl
add
cmp
fisubrl
fcompl
jnp
mov
jl
sbb
add
push
pop
xchg
lods
les
xchg
sub
jns
test
out
dec
adc
inc
lcall
aam
cli
out
dec
xlat
add
subb
lods
sbb
mov
iret
jp
clc
sti
subb
sub
fwait
pop
and
nop
mov
fnsave
stos
mov
stos
cmp
cwtl
mov
rolb
or
scas
les
lret
aas
dec
sbb
int3
pop
or
out
shll
jmp
loopne
or
fs
stos
leave
pop
ret
sub
leave
loopne
and
pop
or
push
jmp
sbb
sahf
jo
leave
or
stos
or
cmpsl
and
scas
push
and
push
pushf
ja
mov
test
pusha
pop
dec
xor
bound
pop
in
xor
add
mov
mulb
repnz
sbb
mov
loope
adc
aaa
sub
sahf
aam
mov
sahf
mov
mov
lahf
and
dec
daa
pop
sti
popf
lods
lea
daa
adc
out
loopw
insl
loopne
outsl
xchg
cltd
mov
lods
push
push
pop
jge
rol
lea
jno
jg
lds
stos
rorl
and
movsb
push
xor
add
ljmp
fcoml
add
in
cmp
sub
jmp
lret
or
dec
imul
mov
gs
repz
push
daa
aaa
orb
push
jns
lcall
out
lock
jp
stc
cmp
dec
icebp
dec
inc
mov
fldl
iret
dec
cmp
mov
jmp
ja
sub
movsb
cld
arpl
hlt
shll
adc
pop
loopne
jle
lret
jb
sub
sahf
push
xorb
ja
test
mov
mov
push
dec
stc
inc
outsl
cltd
test
sub
adc
xchg
scas
repnz
mov
es
cmp
xchg
loope
outsl
movsb
fdivs
mov
out
jmp
repnz
jno
in
test
sub
cs
xchg
fwait
pop
cltd
aas
data16
ss
repz
xchg
fstl
push
mov
subb
test
stos
push
inc
mov
aas
int3
test
mov
xchg
in
and
xchg
divl
xor
pushf
jmp
lds
or
jle
push
movsl
xor
sub
roll
add
dec
adc
fisttpll
lds
cli
xor
popa
sarl
cmp
cwtl
popf
cmc
test
imul
pop
xor
ljmp
sar
push
xor
cltd
add
test
dec
mov
lahf
pop
and
rcll
mov
or
and
xlat
cs
push
fidivrl
insb
xlat
push
pop
or
adc
test
lret
shll
sar
or
js
push
test
iret
int3
lds
insl
cmp
enter
mov
ja
test
mov
xor
std
pusha
pop
cli
cmpsb
aad
aad
push
mov
faddl
adc
xchg
pop
pop
hlt
aam
lahf
scas
xor
mov
stos
stc
xorl
cmp
cltd
adc
cmp
stc
add
cmpl
mov
xor
out
adc
lret
outsl
mov
xorl
das
or
pop
testb
and
loop
pop
xor
mov
cmp
mov
dec
and
sbb
clc
jle
adc
call
out
das
stos
adc
insl
mov
pop
loopne
call
pop
pop
js
push
pop
sti
sub
adc
xlat
cs
add
push
sub
mov
test
mov
push
cltd
xor
mov
nop
or
call
loope
xchg
sub
les
mov
dec
xor
aaa
dec
ficoms
inc
fsub
scas
sbb
fmull
repz
or
cld
sbb
mov
mov
pusha
ficompl
arpl
sbb
cmp
test
xchg
lahf
sub
aaa
pop
sbb
sub
push
test
pop
add
jp
scas
insb
leave
movsl
in
sub
xor
ss
cmpsb
and
mov
out
pop
call
pop
adc
dec
and
ficompl
and
ss
divb
pop
out
popa
aaa
lcall
inc
and
ficompl
mov
leave
sarb
fldcw
icebp
xor
pop
cmpsl
nop
jne
pop
iret
mov
add
mov
into
pop
jp
in
push
jne
jns
mov
xor
cmp
mov
out
cltd
das
pop
sub
mov
in
sub
rclb
pop
pop
mov
fwait
push
sti
and
add
aas
xchg
mov
jae
es
add
adc
stos
xor
cmpsb
in
dec
mov
sar
pop
daa
pop
sbb
cmpsb
sub
repnz
xchg
mov
cmp
cli
jne
add
pop
xor
insb
mov
pusha
stc
pop
cmp
xlat
xchg
outsb
ret
jg
adc
enter
daa
ljmp
insl
cmc
adc
insb
dec
sub
out
or
std
push
arpl
shrb
test
clc
mov
and
jno
mov
mov
or
shlb
test
adc
mov
inc
ss
push
ss
ror
mov
movq
push
mov
mov
shrb
rorb
sub
jbe
mov
cmpsb
inc
std
test
push
jg
dec
popa
jl
inc
loopne
jne
dec
scas
xchg
out
jge
jecxz
shll
pusha
dec
mov
add
fildll
cwtl
call
cmp
outsb
outsb
pusha
cld
adc
rcrb
loopnew
and
test
and
xchg
pop
xchg
addr16
push
aaa
mov
jb
xchg
adc
mov
repz
lea
xchg
fwait
jecxz
mov
xchg
je
fwait
mov
sbb
push
orl
or
mov
dec
mov
inc
fwait
push
xor
lret
decb
mov
aam
add
xchg
insl
xor
dec
cli
cmp
ja
sbb
cmp
xor
adc
inc
mov
das
xchg
test
xor
sub
fnstsw
and
jb
jge
arpl
push
popa
scas
call
negb
mov
inc
icebp
and
add
pop
pop
fiaddl
jno
sbb
lock
mov
mov
dec
pusha
adc
pop
xchg
add
xor
mov
push
aaa
jge
inc
dec
or
icebp
mov
jg
mov
xchg
loope
out
dec
rep
out
popf
popa
inc
cli
sbb
shll
outsl
pop
or
shlb
ret
xchg
jge
add
jp
fsubrl
orb
add
sbb
inc
mov
mov
adc
xchg
pop
xchg
test
or
sti
dec
sub
fmuls
outsl
fstl
sbb
sbb
cmp
loop
mov
pop
jg
call
stc
out
sub
test
cmpsb
push
sub
dec
jmp
fwait
ljmp
cmp
add
mov
aad
cld
mov
cmpsl
stos
jmp
fwait
or
pop
ljmp
jle
insl
mov
or
lods
cmp
mov
xor
sbb
ljmp
jnp
cmp
enter
cmpsb
js
sbb
js
add
push
xchg
push
mov
mov
and
adc
mov
stos
mov
mov
cmp
xchg
adc
orl
sahf
ret
pop
and
lea
mov
test
rorl
mov
pop
cmp
mov
sub
mov
mov
movsb
xor
mov
outsl
dec
scas
and
shlb
imull
pusha
ss
aam
add
pop
into
pop
aam
cmp
push
mov
fldl
js
fists
sub
test
mov
mov
aaa
mov
arpl
pop
add
frstor
xor
mov
pop
shrl
rorl
and
shrl
daa
out
insb
mov
sub
xchg
pushf
pop
cmpsb
sti
sahf
inc
pop
xor
sahf
xchg
pusha
jo
mov
and
sarb
pop
inc
or
add
sbb
add
adc
lret
es
movsb
pop
movsb
cmpsl
mov
push
dec
pop
pop
xor
sbb
mov
xchg
cmpsb
cmp
mov
fistps
je
push
call
loop
cmc
popa
je
clc
mov
jp
pop
dec
jl
push
test
or
stos
pushf
mov
mov
data16
lock
ret
dec
popa
in
or
aas
xor
in
int3
and
xor
and
jb
rcrl
and
leave
test
and
pop
ret
and
and
leave
sbb
mov
negl
and
jp
mov
jo
add
int3
pop
mov
call
mov
xchg
stc
es
lret
rclb
aas
and
movsb
or
or
arpl
addb
mov
mov
jp
xchg
sbb
push
shlb
testl
jno
push
cmp
popf
stc
push
push
lret
or
add
mov
ja
jno
into
fwait
mov
es
push
cmp
fidivrl
cmp
aam
add
mov
pop
xor
call
mov
js
mov
insl
pop
out
xchg
pusha
rolb
shrl
test
xchg
out
jg
mov
sub
mov
ret
sub
roll
int3
xchg
jl
cltd
push
insb
dec
push
icebp
cmp
scas
xor
clc
xchg
mov
adc
fs
insb
mov
stos
mov
push
pop
sbb
fwait
lret
pop
rol
outsl
das
sbb
mov
out
inc
cmp
xchg
xchg
lock
sub
xchg
sbb
adc
dec
test
test
xchg
pop
cmpsb
lock
pop
xchg
scas
lahf
xchg
mov
lret
adc
mov
rorl
jbe
pop
push
in
hlt
in
xchg
in
pop
sbb
push
ret
iret
xchg
and
inc
imul
mov
hlt
mov
outsb
mov
pop
mov
mov
gs
push
and
dec
sbb
jne
push
fistpl
cmp
jb
cmp
sti
push
in
fdiv
nop
lahf
push
mov
or
popf
sarl
cmp
in
mov
sbb
shlb
sub
jp
div
inc
aam
xor
cwtl
outsb
movsb
xchg
cmp
imul
cli
mov
fadds
jne
enter
icebp
lcall
and
xchg
sub
or
cmp
jle
lea
cmp
insb
test
lods
insl
cmpsb
xor
lock
adc
pop
cmpsb
dec
jge
test
loope
addr16
fistps
mov
xchg
fsubl
cmc
push
daa
xchg
adcl
lods
lcall
mov
and
pop
out
mov
aad
adc
mov
inc
hlt
in
jmp
in
test
pop
mov
das
mov
ss
mov
ret
push
mov
clc
mov
push
in
sbb
adc
outsl
or
dec
push
cli
fs
aaa
enter
sub
lret
jno
and
inc
xchg
add
mov
and
lret
inc
add
jp
inc
outsb
xor
push
scas
cltd
xor
shl
imul
out
fists
in
jg
mov
inc
fists
push
lods
adc
mov
cltd
mov
iret
test
xchg
xchg
sbb
pop
or
insl
je
stc
cmp
xor
ljmp
adc
pop
scas
adc
and
add
mov
les
mov
fdivl
inc
insb
push
push
int
dec
mov
lret
dec
push
cmp
mov
inc
ss
adc
pop
mov
sub
xchg
push
xchg
mov
lahf
jmp
insb
push
add
rorb
orb
lds
fistl
fldt
sub
mov
insl
mov
lret
shrl
sti
orb
cmp
out
cmp
in
fwait
cmp
fdivrp
ret
and
xchg
ret
and
mov
or
dec
jmp
push
jmp
les
in
ret
sbb
mov
lret
xchg
adc
shl
sahf
mov
cld
scas
mov
xor
inc
js
ljmp
lods
dec
and
fnstsw
outsl
aad
jb
popf
daa
hlt
pop
cmp
fstpl
add
test
icebp
std
pop
bound
add
inc
inc
sbb
xchg
cmc
cltd
cld
out
ljmp
and
mov
movsl
mov
shrl
inc
lock
mov
jl
dec
rolb
or
cmpsl
pushw
and
fsubrs
dec
inc
dec
mov
ret
out
push
adc
add
leave
icebp
shlb
pop
jl
mov
addr16
pushf
aam
or
jp
and
push
inc
cmp
jns
xor
data16
fistl
test
scas
rorl
xchg
add
dec
daa
mov
frstor
mov
add
add
sbb
out
sbb
shrl
sbb
adc
sub
dec
jnp
int3
pop
sub
addb
pop
mov
rolb
fdivrl
inc
sarb
mov
mov
pusha
and
dec
mov
inc
sbb
cmc
dec
shrb
fadds
push
inc
sub
and
repz
ret
and
aad
mulb
pop
nop
jp
fnstenv
add
sti
sub
pushf
jle
addb
lahf
mov
cli
pushf
cmp
jnp
notb
jge
push
out
sarl
pop
int3
dec
xchg
fsubr
mov
test
imul
mov
xor
jle
xchg
push
mov
cmc
push
add
out
scas
sub
in
fidivrl
xchg
imul
cmp
xor
mov
or
xchg
jecxz
jo
add
push
sahf
bound
cmp
je
lea
jbe
dec
fbstp
cmpl
cld
repz
mov
jae
into
push
push
arpl
or
je
push
aad
adc
inc
mov
ja
and
lds
push
cmp
cmp
mov
andb
jecxz
ss
leave
or
push
or
mov
data16
push
ret
std
mov
pop
in
xchg
mov
cmc
ret
std
negl
fimuls
dec
or
into
loope
neg
mov
cmc
adc
adc
shlb
lods
or
and
lret
lock
movb
pusha
push
jbe
pop
hlt
add
push
repnz
adc
or
jecxz
cli
lret
xor
and
dec
test
iret
ret
sbb
and
mov
or
mov
sarb
fstl
or
add
clc
mov
sbb
repnz
movsl
push
rcr
sbb
outsl
not
ja
or
mov
call
je
lea
add
xchg
sbb
mov
mov
add
aas
sub
lret
out
out
mov
jecxz
mov
test
pop
outsl
sub
xchg
jl
add
roll
mov
cmpsl
push
arpl
inc
stos
js
int3
and
sbb
popf
in
fcom
inc
pop
xor
sti
mov
push
dec
xchg
movsb
loop
lods
mov
jo
adc
scas
lret
cmp
call
jecxz
inc
sbb
and
mov
filds
imul
sub
pop
inc
mov
cli
push
loope
mov
pop
bsf
mov
cmp
push
or
mov
sub
jnp
add
fwait
ret
popa
and
or
pop
fcoml
push
gs
push
in
mov
pusha
nop
push
loope
sub
push
xchg
daa
ret
xor
rclb
addr16
call
hlt
or
push
mov
mov
xor
sbb
mov
jge
fidivs
loopne
dec
cmpsb
mov
fnsave
scas
lods
test
sbb
cld
mov
push
cli
cs
cld
xchg
jge
or
xchg
pop
loop
mov
mov
cmp
cmpsl
out
lret
mov
shrb
in
sbb
into
mov
push
es
stos
xor
imul
aam
jg
adc
ds
mov
stos
sahf
testb
sub
hlt
pop
jnp
mov
clc
and
jmp
xchg
adc
xchg
imul
jmp
and
pushf
jbe
jnp
int3
out
pushf
push
test
jnp
ljmp
pop
pop
mov
es
inc
push
lock
pop
ljmp
jmp
fiadds
push
jmp
push
pushf
scas
ret
test
mov
or
sbb
add
xchg
mov
shlb
aas
cmpsb
push
test
dec
popf
movsb
insb
ds
stos
arpl
dec
ss
in
mov
movlps
hlt
push
xor
js
pushf
dec
mov
mov
pop
sahf
pop
out
xor
stos
gs
cmpsl
pop
cli
out
lret
xor
iret
test
sub
out
inc
lods
xchg
sbb
jae
imul
sbb
xchg
xor
in
lds
leave
rolb
in
dec
loopne
outsb
outsb
or
je
jl
arpl
sub
clc
jmp
pop
mov
les
pop
jmp
nop
mov
inc
idivb
loop
mov
xor
sub
xor
dec
dec
loopne
dec
inc
sbb
hlt
push
jae
push
jp
xor
imul
int
ds
mov
xor
mov
pop
outsl
mov
or
iret
rcr
and
out
xor
clc
cmp
adc
xor
jecxz
sahf
out
in
data16
and
xor
inc
xchg
ret
pop
outsl
loope
jl
test
adc
setle
ljmp
xor
outsb
mov
frstor
das
out
or
jbe
mov
ja
dec
push
pushf
hlt
xlat
lds
das
pop
and
pop
jbe
filds
ljmp
mov
xor
xchg
das
les
into
mov
dec
push
xor
mov
jbe
sub
sbb
lea
push
mov
std
xor
mov
mov
xor
mov
and
cmp
in
jmp
sahf
dec
jg
add
dec
sbb
add
movsb
in
js
repz
icebp
and
add
cmp
and
fcompl
out
popl
mov
adc
adc
les
repz
out
mov
out
in
in
push
dec
jmp
adc
jg
addr16
mov
mov
push
adc
push
jmp
xchg
ficoms
cmp
stos
fsubl
je
shrb
out
cmp
lods
lcall
das
push
in
adc
mov
sbbl
mov
std
dec
adc
sub
es
test
mov
icebp
dec
ret
push
shlb
js
pop
mov
test
in
int
stos
push
sbb
das
mov
stos
lcall
pop
das
push
pop
xor
or
jne
repnz
jp
fnstenv
push
xchg
test
cmp
mov
andl
aad
cmpsb
pop
dec
je
inc
test
mov
add
sub
stos
enter
inc
pop
mov
inc
es
out
clc
jae
stos
and
lahf
loop
and
call
in
mov
popa
xor
aad
adc
jl
adc
adc
push
stos
adc
lret
pop
mov
mov
push
iret
fldt
out
sub
pop
insb
jbe
lods
pop
loop
dec
push
pop
push
inc
das
repnz
push
decb
in
test
mov
jno
push
clc
mov
popf
cmp
sub
btr
push
mov
js
lds
jl
loopne
fdivs
fbstp
in
xchg
fiadds
lds
push
mov
xchg
lahf
jge
fcmovnbe
mov
popa
push
cltd
scas
popf
adc
stos
ds
pop
jbe
sub
data16
outsb
es
mov
add
lock
sub
outsl
cmc
mov
or
xchg
lcall
xchg
xor
add
and
pop
add
pop
mov
and
mov
sbbl
dec
inc
inc
nop
sub
adc
aaa
adc
xchg
sub
ds
loope
dec
es
adc
sbb
and
mov
fcompl
in
pop
insl
and
shll
jo
add
gs
adc
les
xchg
aam
daa
pop
loop
mov
or
insl
nop
dec
pop
loopne
mov
cltd
xchg
es
js
push
sub
sub
mov
push
sub
loope
lahf
push
pop
int3
sbb
ss
sbb
dec
std
fdivl
lret
out
adc
push
dec
repnz
dec
inc
inc
popa
scas
cmpsb
push
js
daa
test
lods
jo
mov
mov
xor
push
mov
mov
jns
ret
cmc
imul
mov
dec
xchg
imul
icebp
shrb
mov
mov
add
andl
push
loopne
or
dec
mov
loope
dec
popa
cmc
mov
jae
jl
mov
pop
dec
inc
shrb
xor
pop
nop
incl
add
int
testl
clc
dec
pop
push
fwait
mov
sub
mov
cmp
mov
testl
adc
stos
sub
repz
notb
adc
xchg
dec
jmp
cmp
movsl
jae
test
xor
hlt
add
sahf
push
jmp
mov
rorl
pusha
out
dec
push
sbb
out
imul
and
sti
push
sahf
mov
inc
sub
mov
pop
dec
imul
add
jno
xchg
lret
and
popl
inc
ja
adc
mov
mov
rol
lds
pop
ja
add
mov
rol
test
jle
push
pop
push
les
push
cs
lds
jmp
std
outsb
inc
push
pop
sub
mov
mov
outsl
and
fdivl
lods
mov
popa
fwait
mov
jl
and
push
sbb
inc
lods
cmpl
ds
aad
mov
loop
and
in
shl
inc
shrl
fiadds
mov
push
bound
dec
call
and
lds
sar
dec
push
out
gs
mov
fimuls
xor
movsl
stos
xlat
inc
out
loopne
mov
cmp
roll
and
jp
je
pop
js
xchg
adc
inc
out
pop
scas
rcr
mov
lds
in
int3
out
or
loopne
ret
and
sbb
in
mov
mov
pop
pop
push
loopne
movsb
mov
pop
add
xchg
mov
dec
dec
dec
pop
mov
inc
sbb
and
cmp
jae
mov
mov
push
jbe
inc
sub
adcb
adc
xchg
sbbb
pop
in
mov
jbe
inc
loopne
ds
insl
xchg
sub
pop
inc
pop
push
push
cmpsl
rcll
inc
adc
and
leave
or
out
mov
push
jg
lods
mov
mov
pop
sub
push
bound
stos
push
pop
dec
ss
lcall
fidivrs
test
mov
test
dec
add
xchg
bound
jns
int3
mov
call
fistl
mov
mov
mov
xor
jno
ret
and
aam
stos
xchg
and
scas
cmp
xor
loopne
push
xchg
out
mov
dec
mov
cli
shrb
mov
mov
movsb
subb
notl
push
push
cwtl
sub
push
dec
sbb
orb
clc
dec
push
inc
pop
sahf
add
ss
pushf
test
cs
popf
cmp
cmpsb
inc
scas
in
inc
ret
negl
repnz
sbbb
sub
ljmp
pop
fisttps
add
stc
aad
lods
xchg
pop
adc
insb
pop
cmp
mov
fs
add
loopne
cwtl
int
inc
jl
push
mov
mov
xchg
jecxz
shll
adc
dec
cmp
ss
inc
push
movsl
xorb
mov
mov
adc
sbb
pop
imul
xor
outsl
and
dec
pop
subl
rolb
das
cmp
dec
sti
inc
mov
leave
sub
mov
mov
bound
aaa
add
sub
ret
sub
or
das
mov
clc
and
or
xchg
mov
fprem
pop
sbb
cmc
and
ja,pt
pop
test
dec
out
sbb
cmp
out
pop
jge
mov
xchg
pop
jae
es
test
daa
enterw
jbe
pop
int
aam
lock
imul
movsb
loope
popf
jae
popa
xchg
test
xchg
and
pop
es
dec
mov
ljmp
clc
xchg
fisubrs
jne
xchg
and
xchg
loopne
lcall
data16
in
mov
fwait
call
sbb
xchg
movsb
push
loopne
xor
mov
xor
push
jmp
jb
jp
scas
repz
push
lret
sarl
data16
push
test
out
pop
rol
dec
xor
or
aas
pusha
fsubrl
loope
adc
les
inc
lock
ss
sbb
sbb
jge
lahf
mov
xlat
aam
rclb
dec
notl
into
sub
sbb
adc
sbbl
sub
mov
xchg
cmpsb
aas
out
stos
xor
mov
jge
stc
movsl
mov
dec
mov
mov
add
fwait
cmp
xor
loop
lds
xor
jmp
out
std
or
icebp
sti
test
inc
mov
mov
lret
mov
jecxz
ret
outsl
scas
shrb
out
in
cmpsl
pop
test
stos
mov
movsl
inc
cmpl
loopne
xor
mov
call
mov
imul
imul
mov
imul
add
adcb
repz
push
cmp
repz
test
inc
jmp
or
pop
leave
in
test
xchg
mov
push
mov
bndstx
dec
and
lds
push
mov
aam
and
pop
adc
cmc
or
cld
mov
fiaddl
adc
movsb
pop
clc
push
inc
mov
sub
cmpsl
orl
jmp
xor
lret
add
lcall
stos
xchg
int3
or
push
pop
xchg
pushf
push
ret
mov
cmp
sub
push
and
fisubrl
scas
aaa
hlt
aad
adcb
movsl
mov
mov
fistpl
add
adc
addr16
cmc
xor
lahf
cmpsb
jo
out
jns
push
shl
es
les
nop
xchg
jp
fmulp
mov
inc
aaa
push
mov
cmp
push
lock
adc
or
js
sahf
mov
jb
arpl
inc
imul
jle
stos
jmp
jnp
add
hlt
jg
cltd
mov
iret
clc
out
jo
mov
test
ss
cmp
in
js
idivb
jmp
push
jno
imul
addl
sbb
fs
mov
and
mov
ret
dec
jmp
adc
daa
scas
adc
aas
push
xor
mov
mov
pop
ret
rcl
xchg
jnp
dec
dec
xchg
pop
jecxz
icebp
mov
outsb
fs
fdiv
subb
inc
ja
lret
dec
in
push
loop
mov
int
hlt
mov
dec
std
fs
or
cmp
test
lcall
push
outsl
jge
in
daa
outsl
or
push
loop
dec
subb
jno
or
xchg
mov
pop
outsb
lock
test
sbb
cmp
aas
dec
sti
mov
pop
cmp
push
pusha
mov
push
call
and
mov
stc
cmc
inc
mov
mov
lods
aam
mov
push
mov
and
or
cmp
les
cltd
mov
dec
cmc
addr16
dec
lea
imul
inc
or
mov
cltd
push
mov
or
mov
repnz
leave
adc
dec
mov
jmp
xchg
clc
aas
inc
fists
cmp
lahf
pop
std
xchg
sbb
push
out
icebp
std
sub
adc
nop
or
sar
lcall
fcmovu
js
fwait
lahf
lret
cmp
mov
push
jae
mov
or
clc
or
mov
add
mov
pop
sti
pop
int3
push
aam
insb
jl
mov
mov
xor
adc
or
xor
sub
jecxz
dec
and
pop
adc
cmp
ret
sbb
push
rdseed
adc
jle
hlt
lcall
xchg
push
adc
stos
cmp
sub
leave
aaa
inc
nop
cli
and
fs
xlat
jns
cmp
pop
or
sbb
repnz
loope
aad
cmp
mov
and
adc
mov
insb
xchg
xchg
mov
xchg
jne
xchg
jne
push
mov
movsb
mov
inc
or
push
ret
or
fadds
pop
scas
lahf
add
push
lcall
enter
filds
aam
shll
imul
dec
out
mov
push
outsb
mov
dec
inc
scas
mov
jle
cmp
imull
pop
mov
insb
mov
or
pop
or
lret
adc
add
dec
sti
or
pop
xchg
jge
push
mov
in
inc
stos
idivl
jns
jecxz
cmp
lods
mov
fildll
lret
cli
xor
xchg
jmp
push
testl
call
test
cmc
inc
dec
pop
xchg
sub
shr
pop
cltd
out
leave
cmpsb
jnp
sub
loop
ret
jae
ds
pop
out
lcall
cmp
pop
adc
inc
shlb
pop
inc
adcb
aad
adc
mov
int3
loope
in
addl
mov
sub
nop
cmc
imul
call
jnp
jne
inc
lahf
jno
cmpsb
xchg
sub
sbb
mov
xchg
inc
adc
mov
mov
pop
stos
jbe
mov
fcomp
ljmp
xor
stc
fsubrs
mov
and
jne
mov
inc
jge
sub
js
sub
std
fnstcw
mov
imul
test
pop
movsldup
and
fisttpll
out
out
inc
iret
mov
cmp
xor
or
ret
fwait
or
push
inc
ljmp
jp
dec
jmp
xchg
sub
push
or
pop
mov
daa
andb
ljmp
test
out
inc
mov
pop
out
scas
or
outsl
pop
xchg
pusha
jg
pop
sbb
add
test
cmpsb
cs
and
or
inc
repz
mov
jae
sbb
sub
push
xchg
cwtl
outsl
clc
jmp
and
inc
mov
cld
pop
jecxz
int
rcr
mov
xchg
daa
push
cmp
fdivrl
inc
sbb
pop
es
lret
jge
adc
sti
sbb
and
aas
mov
inc
ror
inc
aas
push
xor
data16
icebp
cmpsl
out
add
pop
pop
repnz
movsl
push
sub
mov
or
test
aam
xor
push
cmp
mov
push
add
or
stos
das
xchg
scas
addb
nop
iret
pop
lea
cmp
mov
loop
cld
popa
fwait
sbb
push
dec
mov
divl
data16
xor
mov
push
mov
xchg
mov
sub
xor
movsb
dec
out
jnp
ss
push
scas
rcr
cwtl
pop
fstpt
push
stos
rcrl
mov
jmp
cmpsb
xchg
inc
xor
mov
mov
sbb
aaa
leave
mov
fsubrl
shll
mov
icebp
lea
mov
cwtl
pop
outsl
imul
or
jnp
shlb
leave
adc
into
imul
fs
mov
movsb
lahf
imul
xchg
aam
adc
pop
and
nop
lcall
xchg
insb
mov
xchg
mov
add
loop
leave
sarb
ficoml
or
pushf
xchg
cmp
and
cli
fwait
pop
sub
imul
push
push
sub
int3
jp
ret
adc
jb
inc
mov
xchg
out
sbb
and
pop
xchg
mov
dec
cmp
lret
sbb
dec
inc
lock
cmc
je
mov
cmp
int
enter
arpl
mov
data16
mov
rolb
push
scas
jl
mov
imul
mov
iret
xchg
push
shll
insl
loop
xlat
cmp
sub
fsts
out
and
movsl
jb
ljmp
mov
jecxz
scas
or
cmp
pop
pop
sbb
pop
sbb
cmp
pop
repnz
cmp
cmp
mov
add
sbb
aaa
mov
pop
adc
jg
imul
int3
movsl
inc
negl
scas
push
test
mov
add
sub
enter
mov
popa
int
das
loopne
jb
mov
shlb
lahf
repz
push
into
scas
sub
mov
cmpsb
push
sub
ds
out
in
pop
or
iret
or
pusha
dec
cmp
ficoml
andl
pop
sahf
dec
shrb
add
nop
lds
inc
cmp
inc
jae
lods
xchg
or
dec
orl
push
out
ret
add
adc
leave
rorb
out
jmp
gs
dec
mov
cmpsb
imul
mov
sar
stos
enter
insb
xlat
add
sub
shll
sbb
add
jnp,pt
cmpsb
cli
jg
jo
mov
les
cltd
lahf
xlat
out
jno
inc
lds
sub
fdivrs
imul
outsl
or
pop
cmp
or
sbb
mov
pop
popf
push
jle
push
inc
shlb
pop
lahf
ret
mov
inc
push
ret
dec
fnstenv
push
xchg
and
lret
popa
into
add
add
pop
add
add
sub
negb
lods
adc
mov
jl
push
int3
data16
add
mov
ret
lods
fs
inc
xchg
cmp
inc
mov
ret
faddl
call
push
daa
das
sub
insl
jo
pop
pushf
lret
add
adc
inc
loop
sar
add
mov
test
adcb
pop
out
xor
movsl
repz
jo
add
push
mov
icebp
scas
mov
and
jmp
lcall
push
push
push
cmp
push
js
jg
cli
xor
hlt
dec
sub
mov
pop
lea
loopne
or
push
aaa
filds
mov
and
mov
xchg
sbb
add
stos
js
sbb
mov
ret
mov
ret
or
xor
je
shll
inc
mov
cwtl
hlt
dec
pop
fistl
in
mov
repz
jnp
out
dec
insb
das
mov
scas
ret
fnop
mov
sub
lahf
lret
xor
jge
outsb
je
leave
or
mov
inc
ja
in
rolb
lods
test
add
mov
leave
fdivl
jb
adc
andb
dec
push
dec
inc
adc
xchg
jnp
shrl
push
sbb
icebp
cmc
movsl
retw
xor
cmpsl
sahf
sub
push
adc
add
cmp
es
pop
addl
mov
xchg
jns
in
xor
push
bound
js
in
cmp
je
jecxz
mov
loopne
adc
pushf
mov
jo
xchg
adc
out
mov
mov
or
cmp
jle
or
or
add
cmpsb
das
sub
repz
push
dec
loopne
mov
xchg
into
std
jp
pop
cmp
adc
dec
pop
xor
sub
xor
bound
popf
or
pop
sbbl
fildl
sarl
les
inc
enter
push
jo
movsl
aaa
fucom
push
repz
sahf
pop
call
es
push
mov
jle
jns
pop
lcall
ret
mov
dec
rcrl
jo
cli
sbb
divb
cmp
leave
fwait
sub
ja
rcrb
lds
push
add
sub
push
nop
push
jecxz
jmp
jae
movsl
fldl2t
mov
aad
dec
in
dec
fcoml
dec
mov
dec
cmp
fnstenv
xchg
xor
test
rcll
mov
cmpsl
cmc
fdivrl
mov
xor
imul
mov
repz
dec
push
adc
jmp
cmp
les
es
xor
loope
test
movsl
sub
push
idivl
scas
jl
in
jecxz
movsl
xchg
outsb
sti
and
jb
sahf
push
fwait
test
in
jp
mov
icebp
adc
inc
loop
pop
cltd
pushl
cmc
repnz
jp
pop
xor
vmovaps
mov
or
add
push
xor
stos
insb
lock
inc
in
fimull
lret
repz
jb
test
outsb
lods
movsl
scas
push
xchg
pop
adc
pop
and
cmpsl
and
mov
aas
jns
pop
fists
stos
mov
mov
adc
movsb
cmp
push
inc
push
iret
xor
fwait
jns
xchg
jg
dec
mov
movb
mov
rdpmc
jle
xchg
ret
js
mov
inc
add
push
mov
fidivs
cltd
cld
adc
or
pop
outsl
out
jb
pop
pop
popa
cli
pusha
or
and
and
and
sub
xchg
outsl
xchg
cmc
lock
lods
pop
lret
add
es
cmp
or
add
inc
es
or
push
call
orl
pop
cltd
scas
cmpsl
sbb
arpl
stos
ret
fisttpl
or
dec
jecxz
mov
cmp
mov
movsl
adc
aam
and
sub
lahf
fcomps
shrb
iret
dec
out
dec
pop
mov
and
dec
dec
int3
fdiv
mov
es
push
add
inc
sub
rcll
pushf
bound
dec
aaa
lahf
mov
dec
sub
mov
stos
int
jno
xchg
or
dec
cmp
mov
add
incl
jns
nop
push
test
cmpsl
push
mov
push
clc
push
repz
in
out
mov
icebp
xadd
cwtl
mov
mov
sbb
lcall
lock
repz
mov
fcmovb
or
rcrb
data16
jae
mov
xor
sbb
in
push
sbb
rolb
jl
and
sub
and
loop
fcomi
shr
xchg
aad
cmpsb
inc
out
insb
orl
sbb
sub
scas
and
out
or
pop
jl
push
adc
xchg
pop
cmp
adcb
popa
push
mov
push
inc
insb
incl
loopne
lds
fs
aam
movsb
sbb
mov
testl
cmp
stos
arpl
aaa
sub
pop
cwtl
fsubl
insb
cmc
insb
xor
out
mov
pop
jl
or
das
sub
daa
insl
push
fiaddl
movsb
bound
mov
aam
cmp
mov
stc
imul
imul
mov
shlb
sbb
jno
mov
mov
pushf
mov
out
xchg
imul
xchg
stc
out
inc
xor
cmp
jl
sub
dec
inc
idivl
test
mov
jnp
sbb
fstpl
jne
je
cmp
clc
out
and
cli
xor
xor
pop
pop
cmp
int3
loopne
push
fwait
test
jmp
ss
or
lea
and
rorl
orl
js
push
push
xchg
push
xchg
sbb
mov
jmp
dec
fcomip
and
push
out
rcll
adc
xor
insb
push
or
mov
scas
imul
sbb
adc
mov
adc
inc
data16
cli
in
push
aad
inc
fsubr
push
in
push
mov
mov
popf
inc
cmp
pushf
xor
pushf
adc
cmp
movsl
xor
cwtl
insb
fsubrl
mov
mov
mov
orl
add
xchg
push
in
dec
push
jb
jmp
sahf
mov
cld
add
dec
adc
orl
push
adcb
outsb
jle
jl
cli
add
cmp
pop
in
push
pop
ss
jns
or
xchg
add
dec
lods
lock
lret
jnp
push
shld
vmovsldup
jne
repnz
cli
adc
leave
dec
fisttpl
pop
sbb
dec
xchg
mov
cld
add
xchg
int
cld
adc
inc
pop
dec
in
out
push
data16
dec
inc
inc
cmp
xchg
add
mov
cmp
jl
mov
cmp
stos
clc
adc
sti
mov
mov
testb
sbb
xchg
frstor
push
jne
jnp
imul
inc
imul
or
xlat
jge
out
xchg
cmp
mov
and
pop
shlb
mov
cmp
cmp
shrl
jbe
xchg
cmp
pop
or
pop
jl
cmp
jmp
test
fsubr
cmp
fisubs
subb
push
fidivrl
icebp
out
push
hlt
jae
lahf
imulb
mov
inc
shrb
imul
loopne
xor
stos
inc
ret
in
dec
jp
push
jle
jbe
shrl
test
push
pop
sbb
cmp
aas
lret
ja
mov
out
xor
or
jno
sub
arpl
ret
and
stos
test
inc
push
and
ret
hlt
cli
jae
or
mov
add
aaa
or
add
icebp
repz
arpl
fdivrl
sbb
aaa
arpl
test
sbb
mov
dec
mov
cld
sbb
mov
mov
repnz
and
lret
and
xchg
dec
out
mov
inc
push
sti
mov
in
pushf
mov
jns
jmp
push
aas
je
into
mov
jle
popf
dec
xlat
fimuls
mov
mov
test
sbb
test
jno
sahf
stos
stos
lcall
daa
cltd
sbb
addb
dec
pop
mov
and
lock
aas
mov
inc
arpl
inc
xchg
jo
inc
push
push
jne
cmp
mov
mov
jbe
cmp
mov
adc
sbb
ds
sbb
cltd
and
out
jnp
loope
scas
pop
sub
adcb
call
outsb
sub
loope
jmp
mov
mov
pusha
jl
jns
ljmp
fs
in
out
outsl
sbb
mov
loope
adc
sahf
jle
cmp
dec
add
xor
or
pop
xchg
in
push
iret
xor
jns
xlat
stos
lock
arpl
dec
lods
mov
ss
cmp
out
repz
mov
cmovno
out
jg
pop
xor
cmpsb
mov
dec
sahf
or
mov
adc
popa
sub
lds
insl
rorl
shrl
sub
repnz
lret
xor
dec
mov
pop
std
adc
stos
dec
inc
inc
clc
dec
sar
or
cld
fstpl
jae
out
dec
sbb
mov
cmp
or
lcall
push
les
je
subl
pop
push
stos
ds
clc
cli
cmp
ret
cmp
stos
sbb
jo
jmp
adc
xor
pop
cmp
scas
mov
mov
adc
jns
cmpl
mov
int3
mov
adc
daa
std
pop
dec
push
imul
add
fldl
jo
negb
cmp
and
sbb
std
sub
incl
xor
pop
jne
jge
mov
jbe
sub
or
in
push
not
test
dec
popa
mov
gs
dec
or
adc
xchg
cmpsl
push
out
movsb
cmp
xor
push
stc
cmp
idivb
xor
push
scas
xchg
repnz
xchg
stc
jo
gs
nop
daa
push
ret
sub
jmp
and
push
mov
push
adc
mov
jge
repz
clc
js
clc
lods
mov
jp
mov
inc
cmc
loop
test
and
jmp
pop
xchg
aam
pop
pop
jmp
pop
mov
cmp
push
mov
movsl
repz
or
mov
fdivr
daa
dec
mov
fwait
jo
dec
dec
stos
in
cli
mov
pop
adc
fsubp
lods
scas
cltd
sub
sahf
sbbb
jp
and
mov
xor
lock
xchg
fstpt
outsl
jne
nop
inc
fwait
mov
mov
adc
pushf
jo
pop
mov
ret
push
sub
leave
adc
xchg
mov
jg
sub
add
gs
mov
arpl
push
inc
es
jae
jecxz
push
and
push
sbbl
xlat
add
dec
iret
cmp
jo
out
inc
test
push
or
lds
xor
inc
fdivr
xchg
dec
dec
jmp
dec
outsb
xchg
iret
push
icebp
cwtl
lods
in
xor
adc
inc
stos
push
xor
lods
aad
cmp
stc
mov
mov
rorb
mov
cmpsl
in
test
mov
addr16
in
xor
test
stos
outsb
inc
lret
cmp
jo
leave
adc
call
jle
stos
in
pusha
mov
mov
shll
aad
popa
adc
pushf
mov
sti
sub
cwtl
sbb
xor
inc
pop
mov
gs
je
cmp
int3
mov
enter
les
imul
ja
push
in
out
mov
or
loope
adc
jno
leave
push
jnp
or
mov
or
mov
dec
push
inc
rolb
test
sub
cmp
ret
xchg
mov
jnp
mov
adc
cltd
dec
loope
xchg
mul
movsb
mov
sbb
and
stos
mov
sub
andb
lret
fnstcw
cmp
pop
hlt
movsb
scas
lcall
stos
sub
jmp
ret
movsb
push
jl
loopne
pop
cltd
jmp
dec
jae
ret
test
lret
scas
dec
ficompl
mov
jne
push
mov
xchg
cmc
dec
pop
lock
pushf
xor
jmp
xchg
stos
loopne
imul
pop
push
pushf
and
daa
mov
dec
add
and
jmp
add
cld
xor
sbb
push
imul
iret
push
mov
or
mov
pusha
in
xor
sub
xor
adc
lret
xchg
pop
dec
xor
jno
add
mov
outsl
jno
or
loope
mov
sahf
stos
mov
shll
pop
in
mov
inc
xor
sbb
xor
jno
push
lods
out
pop
push
lds
test
xchg
sbb
mov
fcompl
or
inc
arpl
je
sbb
push
in
popa
jl
dec
mov
stc
fwait
lea
mov
iret
pop
adc
or
icebp
dec
pop
aad
js
jmp
adc
dec
adc
jp
sbb
outsb
stos
fiaddl
lcallw
xor
icebp
test
ret
xchg
jo
add
jne
popa
xor
out
mov
xor
fmul
fldt
insb
in
mov
mov
sarb
dec
cmp
mov
jb
cmp
mov
testb
pop
sub
push
idivl
sbb
stc
ljmp
adc
xchg
nop
test
lock
mov
cli
xor
push
icebp
lea
icebp
dec
push
xchg
jecxz
dec
ds
inc
pushf
bound
pop
cmp
cs
loope
icebp
xlat
sub
fwait
jae
push
std
das
inc
stos
push
test
add
pop
mov
mov
lahf
ror
daa
lods
mov
loop
popa
pop
ss
int
push
addl
and
mov
call
insl
mov
ljmp
out
rcrb
dec
dec
xchg
pusha
pop
out
cmpb
jmp
cmpb
cmp
imul
add
fisubl
repnz
and
data16
add
push
dec
add
mov
dec
pop
mov
test
mov
int
add
lock
sub
xchg
scas
imul
push
out
xchg
dec
inc
xchg
xchg
jbe
mov
push
clc
mov
mov
pop
lret
leave
adc
js
adc
jo
dec
scas
xchg
scas
pusha
cli
mov
negl
lret
ja
xchg
mov
je
cmp
push
pusha
mov
pop
sbb
sub
lret
lods
and
pop
add
icebp
nopl
adc
movsl
mov
push
repz
inc
ja
or
mov
mov
xchg
xchg
push
btr
decb
imul
pop
sub
nop
pmaddwd
bound
push
out
je
inc
dec
inc
push
nop
int
mov
cmp
kmovb
mov
or
xchg
xlat
push
loop
sub
mov
push
into
jecxz
xor
or
and
sbb
fidivrs
fisttpll
jne
and
cmp
mov
test
ret
jecxz
xchg
loop
mov
xchg
mov
xchg
adc
in
adc
push
pushf
sub
xor
adc
sbb
addr16
cmc
fs
sub
mov
int3
push
shl
dec
cmp
cs
sub
loopne
push
and
jge
inc
add
push
stos
xchg
outsb
mov
jle
and
aad
sbb
mull
pop
ret
test
in
or
movsl
sti
out
adc
pop
dec
adc
fmuls
lcall
adc
adc
cld
cmp
insl
rcrl
inc
mov
pop
push
mov
shll
data16
addb
and
or
mov
cmpsb
cmp
cmp
loope
loopne
nop
sbb
or
jg
mov
lea
and
jp
jge
in
shrl
push
lcall
jbe
dec
nop
into
xchg
clc
fisubs
sbbl
std
push
mov
notl
push
notl
inc
jne
shrl
repnz
fildl
and
ss
pop
jae
loopne
xor
mov
xchg
push
sub
push
test
xchg
imul
pop
stos
cmpsl
cmp
icebp
xor
jbe
ss
jge
adc
pusha
icebp
mov
rcll
ss
jp
aam
sub
dec
push
icebp
jns
shlb
lock
es
aas
pop
push
mov
and
in
in
xor
dec
xlat
lods
jbe
test
pop
cltd
push
mov
cmc
arpl
xchg
hlt
cmp
xor
in
inc
aas
xor
rep
or
cmp
lock
idivb
xor
pop
mov
aad
push
notl
std
adc
test
xor
lods
push
pop
fcmovnu
mov
adc
ficoms
pop
jecxz
call
ret
pop
cmpsb
pop
pop
imul
call
adc
iret
rcrl
call
or
sub
scas
sbb
out
cmp
imul
jae
pop
loopne,pt
or
icebp
dec
mov
push
data16
in
mov
aad
test
pop
jl
push
enter
lea
stc
adc
nop
and
mov
push
ss
jno
push
jbe
jecxz
mov
xchg
out
dec
leave
mov
lds
mov
movsb
push
sbb
mov
out
testl
xchg
fdivs
arpl
int3
test
push
mov
pop
inc
pusha
xchg
sar
adc
or
shl
shll
shl
int3
leave
dec
movsl
lods
mov
jge
shll
sub
sub
arpl
and
or
cwtl
fadd
pop
movsb
and
std
daa
cmp
push
lods
repnz
div
adc
dec
bound
mov
adc
sahf
aaa
arpl
pop
cmpsb
es
popf
push
lods
mov
push
das
lods
cmp
cld
jb
jl
loopne
sub
sahf
test
inc
and
call
add
jns
xchg
and
dec
mul
cmp
cmp
dec
cltd
out
ret
repnz
in
das
mov
fidivrl
fldcw
dec
pop
inc
sub
jo
fdivrs
lret
dec
repnz
pop
mov
jnp
jns
inc
stc
or
test
jle
xchg
jecxz
fwait
bound
loopne
xchg
lock
lods
repz
jnp
mov
ror
stos
je
pop
scas
inc
shlb
inc
lea
xlat
not
jno
es
mov
lods
ja
cmpsb
aas
and
xchg
jne
inc
iret
jb
mov
push
leave
ss
mov
cld
outsl
dec
fiaddl
mov
outsl
mov
jmp
je
sub
stc
pop
std
dec
gs
test
dec
dec
cmp
jb
shll
jnp
repnz
movsb
or
call
hlt
cmp
jl
push
cltd
popf
xchg
dec
pop
les
pop
mov
mov
stc
daa
sbb
decb
xor
jns
mov
stos
or
jae
por
data16
and
jae
cmp
subl
add
outsb
xor
and
mov
mov
pop
lahf
popa
mov
in
mov
xchg
fwait
repnz
and
or
lods
into
lahf
cltd
daa
test
lods
jne
xor
cmpsb
and
stc
lret
jb
xchg
out
pushf
data16
popl
jae
or
subb
lahf
pop
sbb
dec
out
mov
orb
outsb
or
push
std
cmp
inc
addr16
in
sub
test
je
mov
mov
fldt
xor
jp
ljmp
imul
jo
insb
xlat
push
mov
cmc
mov
xor
mov
jl
sub
xor
xchg
or
sbb
sar
vmptrld
mov
incb
faddl
sarb
jge
add
inc
jnp
mov
add
push
decl
loop
dec
fldl
mov
loope
xchg
mov
sub
xchg
and
mov
loope
fcomip
xchg
pop
int3
jnp
adc
mov
mov
sbb
cmp
dec
enter
leave
mov
xor
out
cmpsb
subl
push
insb
push
mov
lods
xchg
out
push
sbb
xchg
or
sahf
sub
cmpsb
mov
inc
jp
cwtl
hlt
mov
xchg
movsb
xor
push
jecxz
adc
sub
xchg
bound
mov
pop
add
push
mov
into
and
or
mov
inc
scas
mov
pop
sub
sbb
loop
test
sub
cmp
mov
mov
cli
mov
fs
fimull
sti
fcmovnb
xchg
pop
jecxz
mov
cmpb
sub
push
sti
jne
inc
mov
push
add
ljmp
rcrb
clc
outsl
cli
mov
fisubl
cmp
ljmp
loope
fbstp
xor
push
bound
jbe
add
iret
inc
push
sbb
xor
pop
jge
inc
jl
xor
push
fucomip
shll
and
sarb
ds
adcb
sub
jae
dec
dec
jns
mov
sub
adc
jnp
mov
cltd
packsswb
cmp
lret
push
roll
xor
mov
insb
std
lss
pop
ss
sarl
dec
loop
sarb
adc
push
subps
xor
xor
ljmp
pop
pop
mov
call
std
pop
push
push
mov
lods
push
mov
testl
ret
fwait
popa
push
rorb
filds
lahf
xchg
jl
sbb
test
inc
push
push
sbb
repnz
rcr
lds
pop
int3
sbb
xchg
test
rcrb
aam
sahf
aam
dec
lahf
out
adc
mov
movb
cmpsl
pop
dec
or
inc
jl
stos
add
enter
jg
adc
pop
cltd
imul
lds
out
inc
call
xchg
jge
mov
dec
leave
sbb
mov
xor
les
nop
fisttpll
pop
cltd
mov
aad
pop
adc
mov
leave
aam
xchg
dec
outsl
push
dec
xchg
lret
pop
lods
push
push
jae
fnstsw
or
cmpsl
lret
push
test
pop
cwtl
fs
fwait
lock
add
push
sub
test
cmpsl
test
jbe
xlat
scas
dec
movsb
jae
imulb
ret
and
inc
mov
repz
popa
dec
push
lret
mov
test
movsl
mov
push
out
mov
mov
and
out
ja
mov
fwait
dec
and
mov
popa
pop
mov
cs
pop
adc
jl
fisubrl
or
xchg
or
mov
xlat
push
cmp
fsubr
pop
icebp
fistps
inc
mov
dec
les
push
cli
and
in
cld
fsubs
push
dec
xchg
add
inc
shrl
add
or
or
int
loopne
pop
push
mov
fsubs
enter
stos
pop
adc
int3
xchg
or
int3
inc
push
push
inc
mov
testb
dec
push
sub
push
les
jge
and
adc
mull
jg
jbe
cltd
repnz
in
iret
pop
push
add
jmp
push
pop
adc
imul
lret
aaa
pop
testl
subl
fs
jge
sub
negb
adc
xchg
xchg
xchg
jns
fdivrl
fistpl
mov
ja
inc
repnz
jl
xchg
inc
mov
enter
jo
adc
loopne
mov
cli
fadd
adc
iret
std
je
lahf
adc
sbb
add
test
pop
shll
lret
mov
and
cld
dec
mov
pop
xchg
dec
mov
sbb
pop
mov
or
pusha
bound
aam
imull
cwtl
arpl
adc
cmp
mov
xor
insb
mov
cmpsl
inc
cmc
and
and
sbb
xchg
je
mov
test
mov
push
and
enter
rcr
mov
mov
les
das
insl
andb
push
lahf
and
xchg
dec
xlat
or
pop
outsb
mov
fdivl
jns
mov
ljmp
stc
lods
idivl
js
lahf
lahf
cwtl
mov
dec
inc
popa
loopne
add
xor
int
or
xchg
popf
adc
jl
clc
push
push
adc
and
jmp
test
daa
mov
popf
dec
push
enter
push
mov
lock
movsb
xorb
add
test
in
sub
xor
add
orb
sbb
subb
adc
test
fisubrs
and
or
sarl
incl
cmc
cmp
xor
inc
adc
adc
ja
mov
mov
push
out
inc
movsb
dec
leave
xchg
inc
pop
insb
ror
mov
push
mov
out
jns
je
mov
jns
xchg
push
and
icebp
mov
fsub
and
xor
jge
lcall
lahf
js
fmull
or
iret
es
mov
lret
lretw
adc
add
mov
pushf
loop
negb
push
cmp
mov
sbb
jne
lcall
mov
and
xor
test
sbb
rcr
lds
lods
lret
out
js
imul
aad
das
dec
cmp
inc
rcrl
sbb
data16
lcall
dec
daa
pop
outsb
push
jp
mov
mov
jo
xlat
sub
and
enter
lea
jle
add
sub
pop
mov
inc
mov
jns
lock
mov
mov
xor
std
xor
mov
push
cld
test
ljmp
mov
out
inc
push
aad
pop
add
sbb
jns
mov
jae
into
les
jae
fnstsw
jl
mov
inc
xchg
sbb
lock
into
mov
outsb
inc
cmpsl
and
jne
add
jmp
mov
dec
mov
test
xor
leave
movsb
dec
pop
fs
or
push
out
cs
js
fsub
or
in
inc
imul
pop
lock
inc
shll
push
mov
outsl
sub
mov
mov
push
add
or
pop
adc
mov
push
xor
faddl
hlt
jns
mov
ret
mov
dec
roll
jnp
daa
or
fidivrs
mov
pop
das
cmp
out
arpl
sub
mov
or
ljmp
sbb
popa
stos
xchg
sbb
cmp
sbb
je
mov
ret
jo
push
cli
inc
xchg
stos
imul
shll
in
lock
mov
addl
rcr
in
sti
sbb
mov
scas
bound
or
mov
in
daa
sub
je
push
and
insl
rclb
icebp
inc
test
repz
mov
loopne
ja
fsubs
out
lahf
sbb
mov
mov
and
test
cwtl
les
mov
add
stos
hlt
and
cld
inc
stc
cmpsl
add
jl
pop
dec
movsl
scas
pop
dec
sbb
dec
push
push
mov
fs
xchg
movsb
lcall
xchg
imul
mov
xor
enter
ja
mov
sbb
sbb
js
push
jns
xlat
fs
dec
outsb
mov
inc
test
jl
int3
push
scas
dec
dec
enter
cltd
not
jno
cmp
xchg
dec
filds
lret
arpl
and
push
pop
cmc
push
xchg
mov
add
outsb
pusha
out
pop
out
xchg
mov
mov
out
dec
das
inc
loope
fmuls
sahf
and
ret
ficompl
jns
push
mov
addr16
fs
int3
cmc
repz
mov
inc
sub
stos
xchg
aaa
xchg
adc
ret
mov
mov
or
aas
xor
push
jb
sub
arpl
xchg
mov
push
loopne
jecxz
mov
test
mov
test
and
int
enter
je
and
push
fildl
dec
aam
nop
mov
mov
jecxz
sbb
and
cmp
mov
fimull
adc
or
xor
add
and
movsb
fs
and
aas
adc
in
jo
push
sbb
fdivrp
in
lock
mov
push
pop
ss
xchg
roll
enter
bound
loopne
mov
outsl
push
add
add
outsb
jne
and
addr16
pop
inc
mov
fcmovnbe
push
fs
and
mov
nop
cmp
lods
data16
push
out
icebp
xor
add
xlat
call
int3
push
fcmovnu
mov
mov
mov
pop
in
fcoms
pop
loop
fisttpll
cmp
push
sarl
inc
pop
jmp
imul
adc
lahf
jbe
icebp
fwait
xchg
gs
cmpsb
scas
cmc
cld
lcall
mulb
out
scas
sbb
dec
jge
inc
jns
mov
push
cmp
sbb
or
add
daa
jg
push
inc
mov
popf
dec
cmp
aad
in
jmp
lcall
cld
imul
lahf
pop
les
xchg
mov
jl
aad
ret
mov
cmpsl
or
or
or
aad
out
sub
es
inc
sbb
adc
cmp
mov
popl
push
fstpt
xchg
adc
test
test
sbb
push
or
xchg
int
xor
sub
mov
sbb
mov
out
mov
mov
fs
sbb
lcall
cmp
cmpsl
jns
mov
repnz
jmp
ljmp
lods
xchg
pop
mov
ret
inc
lods
adc
outsb
inc
sub
xor
adc
addl
enter
pop
sbb
add
cmp
arpl
pushf
es
ja
jmp
ret
sahf
and
orb
enter
jb
in
gs
adc
fbstp
out
js
push
mov
mov
sysret
in
outsb
clc
xor
mov
xchg
sbb
xchg
cmp
push
mov
int
div
insb
mov
dec
mov
arpl
adc
pop
fwait
mov
call
out
ret
jp
mov
adc
or
out
pop
rorl
or
push
jno
lea
out
dec
cmp
sub
mov
xchg
sub
in
jae
and
sub
and
ja
dec
stc
std
test
jb
adc
adc
xchg
hlt
sbb
scas
in
pop
sub
dec
mov
jbe
pusha
mov
das
mov
test
and
pop
imulb
add
fnsave
in
lcall
arpl
data16
outsb
lret
inc
xchg
jp
loope
imul
test
xchg
into
imul
cmp
xor
fisubrl
jae
mov
stos
lea
jmp
lea
cmp
in
outsl
xchg
popa
push
popf
data16
mov
dec
lcall
loop
push
psubd
lods
hlt
or
ljmp
into
cmp
xor
out
js
ljmp
xchg
sbb
jle
test
jecxz
iret
add
mov
xor
mov
pushf
mov
mov
cs
mov
lods
fwait
outsb
and
jg
ficomps
cli
iret
andl
push
sub
stos
cwtl
pushf
sbb
dec
mov
lock
popa
movsb
outsb
mov
arpl
pop
pop
xchg
dec
jae
lret
hlt
push
dec
stc
mov
ss
int3
cmp
fwait
test
xchg
lods
pop
leave
jle
nop
jae
pop
ret
mov
leave
inc
mov
push
mov
lock
cmp
jle
iret
mov
mov
sub
inc
cld
fidivs
fildll
je
jmp
cmp
in
mov
push
adc
sbb
pop
stos
repz
rcrl
pop
dec
lahf
dec
or
adc
adc
js
cwtl
inc
scas
jb
addr16
int
pusha
xchg
fsubs
xchg
sub
loope
mov
dec
cli
push
cmpsl
loopne
adc
cs
das
add
jge
push
fwait
dec
adc
out
lds
shrl
stc
or
mov
and
pop
aam
fnstsw
cmp
loopne
or
les
popf
or
jg
jno
lock
movsl
mov
clc
es
mov
pop
mov
scas
sbb
loope
sbb
pop
mov
ss
rorb
add
xor
cmp
xor
jecxz
or
fwait
xor
sbb
lock
enter
mov
call
stos
mov
pop
test
mov
test
enter
add
addr16
outsl
push
mov
fstl
xor
push
aam
inc
imul
sub
or
xchg
aas
inc
dec
sub
imulb
mov
movsl
adc
fidivs
int
push
mov
stc
into
insb
aam
out
jp
sub
es
aam
jge
cmp
add
cmp
out
sbb
out
jae
adcl
pop
arpl
mov
stos
sahf
inc
jnp
cmp
les
ja
adc
pop
inc
shlb
sub
jmp
loop
movsb
mov
push
xchg
shrb
in
jnp
jp
ss
faddl
xchg
repz
mov
jno
pushf
mov
push
mov
lcall
out
mov
mov
jecxz
nop
xor
or
dec
or
stos
loope
into
dec
and
pop
jnp
sbb
adc
add
sub
pusha
sbb
roll
or
in
ja
xchg
mov
mov
jno
pop
sub
xchg
in
shll
arpl
stc
mov
or
adc
sbb
adc
outsb
cltd
std
enter
xor
pop
jp
jl
xchg
jbe
xchg
int
test
mov
xchg
dec
daa
add
or
aaa
mov
cwtl
dec
ljmp
jb
jmp
pop
mov
test
adc
pop
and
jae
add
sub
scas
rcrl
in
mov
inc
adc
push
or
cs
rolb
push
push
jp
es
xchg
push
pop
sub
insb
jne
mov
jnp
jae
test
mov
sub
xchg
mov
inc
jle
bnd
jecxz
adc
bound
mov
cli
fs
aaa
in
fwait
xor
jo
push
cmp
call
pmuludq
lcall
mov
cmc
imulb
mov
push
lret
dec
test
sub
movsl
xchg
cld
mov
cmpsl
push
movsb
jbe
lret
data16
cmpl
sti
jnp
les
loope
mov
cmovb
movsl
cmpsl
xor
xchg
or
adc
enter
lods
or
mov
push
pushf
mov
push
adc
and
movsl
push
rclb
xchg
sub
pop
jno
dec
negl
popa
inc
enter
iret
loopne
cmp
jl
cmpsb
cmpsl
stc
mov
movsb
pusha
lret
push
repz
lea
cld
add
xchg
lcall
push
lret
dec
fstpt
cmp
xchg
ret
pop
xchg
sub
mov
jl
sbb
cmpsl
rorl
add
or
pop
xchg
arpl
mov
push
xor
sub
fwait
sub
pop
call
sbb
and
add
movsb
lods
js
add
mov
sbb
dec
jg
sub
jbe
or
hlt
stos
imul
insl
add
pop
orb
push
mov
jb
mov
push
outsl
shrl
xchg
add
bound
dec
push
int
lret
pop
add
adc
mov
mov
rol
es
jne
ds
in
push
pop
cmp
std
xor
or
lds
pop
push
pop
xchg
pop
push
mov
insl
lret
mov
enter
loope
negb
mov
jbe
outsl
enter
or
mov
hlt
jns
mov
add
sub
jb
mov
jbe
xchg
std
out
sbb
pop
sub
lds
cmp
jl
jle
inc
lret
push
fnstsw
arpl
push
and
aam
mov
xchg
push
mov
enter
adc
lcall
clc
xchg
cmp
add
sbb
xchg
js
jle
add
in
out
decl
push
loope
in
ret
mov
pop
mov
in
mov
lcall
or
cwtl
sub
test
js
sarl
hlt
pop
pop
and
jne
jle
dec
dec
xchg
xor
cld
pop
sbb
icebp
lods
inc
dec
fdivr
notb
aas
cld
mov
cmpb
jo
cmc
fwait
outsl
mov
or
mov
lret
imul
cld
sbb
mov
stc
les
cmpsb
lret
lret
dec
cmp
or
adc
adc
cmp
push
mov
pusha
xchg
imul
mov
or
icebp
repz
mov
push
sbb
and
lods
vsqrtss
ljmp
in
inc
mov
adc
xchg
sub
popa
gs
xchg
bound
push
movsb
ss
or
imul
addr16
gs
gs
adc
iret
jle
or
pop
mov
add
dec
push
mov
mov
loope
sub
hlt
or
pop
popf
xor
add
jns
sub
orl
test
bound
shll
nop
jne
ds
mov
out
mov
inc
call
inc
lcall
orb
mov
add
daa
adc
lcall
das
test
adc
out
mov
cmp
lcall
jae
inc
cmp
add
add
test
js
adc
fstpl
andb
add
mov
xor
test
sbb
jne
jo
mov
adc
pop
mov
mov
adc
pop
lret
mov
adc
add
add
pop
cli
mov
pmaddwd
movsb
pop
and
rcrb
pop
ret
jno
into
add
stos
xchg
push
sub
cld
push
sbb
rcr
mov
dec
call
or
pop
out
push
mov
jge
jns
push
arpl
pop
outsl
ds
mov
inc
xchg
les
inc
pop
std
xor
rcrl
cmp
cltd
dec
outsl
push
sub
pop
inc
scas
dec
out
push
imul
frstors
or
lret
sti
mov
pop
sti
shll
xorl
fadd
or
mov
aas
ds
pop
dec
inc
les
jne
scas
arpl
lret
repz
cmc
pop
dec
jecxz
in
fsubl
xchg
pop
loop
js
insb
push
add
push
ret
cld
ja
hlt
fadd
mov
outsb
cmpsb
fildll
mov
push
cwtl
fstpt
sahf
mov
and
push
gs
mov
in
and
movsl
jbe
ret
lea
xor
jbe
mov
fildll
inc
pop
outsl
cmp
je
stos
push
and
je
pushf
xchg
addb
and
mov
xor
jl
aam
lret
lcall
adc
pop
mov
test
push
cltd
sti
gs
cmpsb
dec
loop
mov
push
push
clc
inc
pop
xchg
sub
scas
cli
lahf
xchg
daa
jb
and
fcmovnu
pop
addr16
push
rcl
in
bnd
test
aas
loopne
dec
mov
insb
adc
mov
push
xchg
insb
inc
pop
outsb
adc
fmulp
jne
fldenv
mov
mov
jno
rolb
sub
cld
sub
lret
lcall
mov
jns
inc
shrb
leave
jecxz
xchg
call
int
adc
lds
mov
push
jmp
fmuls
mov
xchg
xor
popf
add
nop
mov
rcll
subb
rcr
mov
mov
scas
out
movsl
movsl
in
test
in
pop
cltd
jmp
nopl
les
xchg
subb
xchg
ds
pop
scas
icebp
push
test
add
inc
mov
fidivrs
pop
push
je
jne
or
jo
stos
jae
icebp
ds
mov
aam
mov
sub
jg
or
stos
lods
adc
insl
or
sahf
sub
inc
sub
add
inc
xchg
imul
fadds
div
pop
sbb
out
xchg
std
mov
out
lahf
mov
dec
popa
mov
cmc
cltd
jmp
iret
mov
test
fcomip
into
mov
scas
xchg
inc
sub
cmpsl
xor
or
testb
hlt
mov
push
stos
mov
sub
cmc
insl
notb
cli
cltd
out
dec
popf
pop
or
inc
dec
mov
inc
fs
xor
sub
jle
and
sbb
cmc
pop
add
out
in
add
lds
mov
inc
cs
inc
sarl
sti
cli
xchg
sahf
aas
sub
gs
sub
loop
push
and
rolb
aam
push
sbb
in
enter
pop
add
testl
fcomi
andl
xchg
in
push
sub
stc
cli
fistpl
xchg
mov
int3
xchg
pop
jg
jne
and
js
xchg
mov
je
leave
daa
ja
in
pop
mov
or
aad
xlat
outsl
out
xor
rcll
pop
leave
and
sbb
jns
jp
fmull
adc
sub
add
pmuludq
arpl
inc
lahf
iret
jge
lret
cmp
sbb
adc
jmp
aam
lock
mov
push
pusha
sti
repnz
sbb
pushw
daa
loopne
gs
mulb
cltd
testl
jg
dec
lock
subl
ret
mov
fisubrl
inc
scas
sbb
aas
push
std
test
jp
mov
jle
pop
or
scas
add
ja
fldl
push
or
cmpsl
or
repnz
push
pushf
sub
pop
pop
mov
popf
out
sbb
push
push
pop
xchg
pop
xchg
dec
subb
jbe
ret
pop
xor
cmpsb
in
outsb
xchg
mov
ret
mov
dec
popa
add
adc
cmp
in
fstpt
out
xchg
aas
mov
adc
arpl
pop
push
adc
inc
sti
dec
jne
xchg
jecxz
shlb
cmp
loope
rol
shlb
adc
mov
sahf
push
mov
jmp
dec
jo
push
mov
gs
rol
xor
mov
fldz
aas
xchg
push
ljmp
jg
pop
lret
xor
out
or
lock
imul
inc
inc
jecxz
sub
xchg
lret
mov
adc
lret
xor
inc
enter
xlat
sub
test
data16
jecxz
adc
add
cltd
dec
mov
ficoml
nop
stos
and
orl
fs
shrb
mov
lock
inc
lahf
test
push
xchg
punpckhdq
adc
jne
or
test
inc
xchg
jb
jmp
lods
jecxz
int3
add
loopne
lcall
push
push
pop
add
xchg
or
mov
aam
xor
shll
arpl
sbb
or
or
das
mov
into
push
dec
xor
pop
jle
fldl
sti
fcomp
jmp
stc
add
add
pop
int3
pusha
lcall
pop
mov
and
std
jne
dec
xchg
mov
xchg
dec
or
addr16
popf
xchg
fnstcw
popf
jo
push
mov
sub
sub
push
xor
xchg
mov
xchg
push
or
jb
fildl
add
pop
shl
mov
cmp
mov
sub
cs
loope
nop
jne
cmp
in
test
mov
adc
jg
inc
lods
mov
jb
in
int
dec
hlt
sub
cmpsb
xchg
sbb
lock
cli
sub
imul
add
mov
add
test
add
lea
push
and
fimuls
pop
js
sub
lods
push
jmp
loopne
or
pop
jl
jl
repz
cwtl
loop
jp
in
dec
xchg
jae
jecxz
rcr
xor
jb
or
pop
out
push
sti
sbb
jo
mov
or
jp
aam
mov
push
mov
dec
movsl
outsb
xor
and
popa
lds
fistpll
mov
sbb
inc
cli
dec
add
bound
leave
out
or
inc
push
mov
sub
push
xchg
lcall
jg
and
mov
xor
mov
das
icebp
adc
dec
pop
es
das
sub
mov
in
fnsave
and
and
xchg
aad
mov
fs
push
inc
cli
xlat
xchg
add
in
or
in
es
push
aaa
iret
xlat
cmp
movsb
icebp
dec
inc
rcll
and
imul
jle
adc
mov
sub
fdivrl
fbstp
movsb
mov
add
mov
imul
mov
aas
xor
sub
adc
add
loope
addl
daa
lret
mov
jmp
cmp
adc
mov
jle
push
mov
push
js
js
add
int3
rcll
aas
jns
jge
jp
pusha
add
sahf
in
inc
rolb
adc
inc
mov
mov
jg
dec
loop
mov
sbb
ret
xchg
cmp
pop
test
loop
sbb
pushl
sarl
inc
xor
ja
cltd
imul
cmp
pop
mov
repnz
fmul
pop
mov
lock
xor
xchg
fcoms
push
pop
cmp
hlt
ljmp
dec
pop
lea
add
in
push
mov
push
fistps
and
dec
addr16
jno
addr16
es
pop
ret
add
jge
dec
jnp
scas
popf
xchg
outsl
jmp
js
iret
adcb
ret
or
je
cmp
fimull
popf
lea
fcomi
dec
outsl
pop
mov
outsl
lret
outsb
subl
xchg
jo
call
mov
or
pop
icebp
jle
pop
rcrl
pop
sub
sbb
add
shrb
repz
jbe
inc
clc
or
mov
mov
and
and
adc
mov
stc
sti
lods
clc
adc
sbb
jge
rcrb
mov
enter
pop
cltd
mov
nop
push
inc
adc
insb
ret
sub
push
scas
test
mov
cmp
sahf
add
jp
dec
and
mov
mov
add
outsl
cmc
jne
mov
andb
push
cmc
mov
and
jecxz
fldenv
push
inc
stc
loop
loop
xlat
fisubrs
jecxz
bound
rclb
lret
jo
adc
mov
lret
mov
push
pop
insl
fsubs
dec
gs
pushf
lods
cmpsl
outsb
adc
sahf
pop
xchg
gs
mov
incl
cmp
adc
lret
dec
push
insl
pop
jb
mov
out
js
mov
inc
repnz
lret
adc
xor
or
out
stos
lock
ficompl
daa
adc
les
xchg
cmp
lea
ja
and
inc
stc
cmp
pop
push
lods
lds
loop
cs
pusha
xor
lds
and
jns
jb
mov
mov
test
std
or
sub
pop
aad
mov
sbb
je
inc
cmc
xchg
mov
jecxz
call
mov
add
aas
pop
rcr
mov
add
scas
or
push
pusha
ja
imul
nop
es
mov
bsr
add
notb
mov
xchg
jns
int3
lret
clc
outsb
inc
icebp
sbb
test
sub
jns
cld
inc
cwtl
sbb
jo
icebp
test
mov
out
dec
fsubrs
xchg
jp
vpmadcswd
mov
push
out
dec
shlb
stos
in
pushl
push
push
rcr
inc
adc
fistpl
adc
dec
add
fimull
xchg
pop
in
sar
mov
pusha
popa
sub
xchg
enter
mov
test
filds
cmpb
push
arpl
xor
add
imul
arpl
and
push
imulb
mov
pop
push
aaa
xchg
xchg
jp
inc
jnp
xchg
mov
fwait
sti
mov
ljmp
movsl
jge
mul
out
movsb
sub
pusha
loopne
js
pop
cmpsb
dec
push
mov
in
xor
add
decb
enter
lds
jge
jl
imul
sub
fstl
push
dec
sub
jne
jmp
cltd
fnsave
hlt
sbbb
cld
pop
mov
ljmp
cmp
push
inc
mov
arpl
fwait
jg
icebp
jmp
stos
pop
stos
aaa
mov
add
add
dec
mov
mov
call
call
jge
jns
mov
fiadds
out
notb
pop
bnd
xchg
loopne
jae
inc
test
push
pushf
es
xor
icebp
mov
adc
gs
cmp
jae
mov
lods
jmp
push
dec
push
push
dec
pushl
popa
lcall
cmp
iret
andb
pop
sub
sub
aaa
stc
pushf
jmp
pop
es
out
out
imul
xchg
pop
xlat
jp
jge
add
pop
rorb
pop
fcmovu
sbb
andb
pop
mov
pop
sti
mov
daa
arpl
insl
shrb
cmp
fs
cli
sbb
lock
mov
mov
out
sahf
loopne
add
stc
out
popf
push
sahf
lret
movl
push
andb
cmp
ret
push
mov
les
sbb
shll
addr16
mov
add
pop
xor
or
out
or
stc
rol
add
jno
xchg
in
add
fildll
notb
pop
cmc
popf
jl
jg
stos
aaa
shrb
out
stc
mov
jo
lea
inc
icebp
mov
test
push
gs
cmpsl
cmpsb
add
xchg
push
jg
and
jp
push
mov
jl
mov
and
sub
mov
inc
push
rcll
mov
mov
fs
fstps
popf
je
cmpsb
aas
dec
xchg
sub
jo
repz
dec
inc
jns
aaa
and
fistps
aas
lret
adc
nop
enter
inc
movsb
fdivl
inc
scas
cmp
adc
mov
mov
push
dec
or
mov
dec
sbb
out
pushl
mov
stos
gs
mov
jp
xchg
mov
pop
enter
pextrw
imul
scas
mov
outsb
dec
inc
adc
sti
pusha
test
jmp
xchg
mov
add
test
mov
pop
adc
pop
add
inc
ret
gs
add
lret
lea
mov
insl
dec
jg
jg
das
adc
cmp
ficoml
sub
jp
and
xchg
cwtl
mov
insl
lds
out
and
inc
out
jnp
inc
fs
mov
enter
cs
cli
data16
mov
and
push
adcb
shll
or
cmp
sub
popa
mov
pop
or
mov
add
iret
jp
jle
jl
stos
mov
cmp
sahf
mov
jb
sti
or
and
mov
js
dec
dec
adc
mov
test
and
hlt
rclb
in
lods
js
and
xchg
neg
adc
cmpl
mov
xor
mov
dec
jns
cld
mov
in
pop
xchg
fs
inc
rclb
lock
adc
mov
sbb
inc
jno
sbbb
xchg
or
in
mov
cltd
js
mov
mov
xchg
push
jge
movsl
mov
inc
mov
xchg
call
or
lcall
movsb
shlb
inc
ds
mov
xchg
orl
pop
subl
call
cmp
movsl
and
push
jae
lahf
jnp
xchg
subb
sub
daa
mov
or
push
and
mov
add
sbb
jnp
roll
cmpsb
sbb
int
pop
int
ret
xor
inc
cmp
dec
leave
mov
mov
xchg
repnz
mov
lahf
test
in
sub
xor
pop
leave
xor
sbb
xlat
jle
add
cmp
cmpsb
jo
iret
sub
adc
iret
sub
out
test
jae
roll
lret
jne
adc
insl
and
dec
addr16
lahf
mov
fnstenv
cmpsl
les
daa
xlat
mov
sahf
mov
adc
clc
xor
jl
popa
pop
jecxz
rcr
adc
pop
sbb
ds
es
sub
jge
jb
into
and
inc
and
mov
gs
test
hlt
dec
xor
dec
mov
mov
fiaddl
fisubs
mov
jnp
push
mov
push
dec
jbe,pn
cmp
rorl
lock
cmpsl
jmp
xor
mov
notb
jne
pop
psubd
mov
mov
sarl
fisttps
add
mov
hlt
or
flds
inc
mov
xchg
lret
mov
push
adc
sub
push
test
pusha
out
lcall
out
jecxz
adc
adc
outsl
add
push
jmp
jge
mov
gs
jle
dec
sbb
dec
mov
mov
dec
cmp
pusha
push
push
clc
fdivs
lcall
jno
xchg
or
cs
loopne
call
in
add
xor
aas
addr16
cmp
and
sub
outsb
andl
mov
mov
lock
xor
cs
sahf
std
bound
mov
stos
int3
inc
pushf
lret
cwtl
lock
push
nop
xchg
aaa
jne
inc
dec
adc
sti
and
imul
out
cmc
xchg
xor
xchg
cmp
sar
repz
pop
jmp
cwtl
jge
adc
or
jo
add
adc
push
mov
xor
insb
inc
jg
mov
nop
mov
xor
sub
es
jl
adc
xor
sub
inc
add
stos
and
dec
lret
mov
dec
mov
dec
pop
subl
mulb
dec
test
jecxz
xlat
call
subl
mov
jne
dec
std
sub
and
pop
rcrl
testb
pop
pop
xchg
cmp
xchg
pop
pop
jns
pop
xor
sub
pop
sub
icebp
mov
das
push
adc
shrl
xchg
test
loopne
jo
mov
fiaddl
jmp
add
xor
data16
adc
dec
loop
xlat
repnz
or
and
sbb
cmp
scas
pop
sub
jae
das
xchg
dec
mov
pop
dec
loopne
inc
ds
dec
out
pop
and
lahf
lods
orb
fnstenv
adc
into
cli
lods
sbb
xchg
mov
sti
stos
dec
cmp
add
push
insb
or
or
pushl
sub
pop
testb
sub
jle
jo
push
pop
adc
lahf
xchg
cmpsl
xor
xchg
jge
shrl
or
cmpsb
jecxz
out
aas
xor
mov
inc
add
mov
ret
mov
stc
rol
pop
fmull
lret
dec
pushf
pop
lcall
add
mov
jns
mov
enter
fldt
out
fldt
lea
inc
dec
sahf
mov
fsts
out
int3
mov
xchg
daa
mov
fldcw
dec
xchg
std
add
sti
out
jg
xor
pusha
inc
sbb
push
lret
sti
inc
mul
dec
xchg
ljmp
xchg
jae
dec
push
mov
popf
inc
inc
andl
lcall
sbb
cltd
jp
lahf
clc
je
out
gs
outsl
and
imul
sar
sbbl
out
outsb
inc
mov
xchg
dec
jp
xchg
cmp
sub
fisttpl
inc
add
rol
sbb
sbb
push
xchg
and
insl
jae
ja
jl
xchg
out
mov
xor
push
cs
adc
ljmp
addr16
pop
in
jmp
sahf
jecxz
fcmovb
insb
aas
aaa
inc
cmc
xchg
adc
mov
adc
hlt
push
push
push
xor
in
mov
inc
negl
mov
aad
xchg
sbb
jb
jb
leave
in
adc
lock
mov
mov
and
pushf
jo
sub
pop
lods
push
insl
cmp
mov
xchg
push
sub
outsl
fs
sbb
xchg
daa
xchg
mov
cmpsb
rolw
fsubr
je
dec
ror
sub
cmp
sti
ficomps
xchg
mov
fidivs
push
xor
lock
je
out
mov
ret
mov
fcoml
dec
dec
mov
out
sub
imul
ret
cmp
sbb
mov
movsl
inc
test
mov
test
and
ficoms
mov
aaa
sbb
lock
out
inc
push
mov
jge
ja
fisttpl
movsl
ja
and
or
in
loop
pop
sar
jns
data16
inc
pushf
pushf
lretw
clc
adc
jecxz
repz
mov
jnp
or
cmpsb
push
in
mov
fs
mov
inc
pop
lods
lock
adc
pop
in
cli
popw
in
push
pop
and
je
mov
xchg
std
xor
cld
xor
outsb
leave
pusha
mov
xchg
sbb
insb
movsl
xchg
jo
lcall
mov
leave
sub
adc
wbinvd
cmp
je
or
or
jns
mov
jmp
pusha
std
ss
pop
push
mov
pop
divl
ret
xor
hlt
lcall
xchg
push
in
or
sub
xchg
scas
pop
in
sbb
sub
in
aad
inc
xchg
lahf
sbb
inc
mov
inc
mov
clc
ret
pop
push
and
loopne
jbe
lock
imull
inc
sahf
iret
mov
sbb
jge
jmp
decl
test
into
rolb
cmp
mov
inc
jnp
inc
jp
xchg
mov
mov
iret
inc
sbb
mov
jp
adc
fcoml
fs
sar
aad
mov
in
fmull
fwait
dec
loopne
jge
aas
ds
in
adc
sub
data16
sysenter
or
cmpsb
xor
xchg
cli
in
negl
jnp
shlb
addr16
ret
adc
out
mov
adc
jl
ret
ss
sahf
jp
push
push
sbb
mov
lock
jnp
loopne
lret
lock
pusha
data16
add
mov
jne
imul
mov
dec
sub
mov
xchg
imul
cli
mov
in
sbb
cld
fcomps
sub
and
push
popa
test
jno
aas
lds
iret
inc
mov
inc
bound
fisubs
mov
xchg
sub
xchg
jg
mov
lea
xchg
dec
and
movsb
xor
jnp
icebp
push
xor
mov
and
add
pop
ljmp
flds
add
xchg
xor
sbb
pop
mov
xor
xlat
adc
and
and
test
fdivs
iret
push
scas
mov
mov
rcrb
ss
pop
pop
cmp
ja
and
sub
jl
jnp
cld
dec
mov
mov
xchg
setns
mov
xchg
mov
test
inc
fsubs
popf
mov
divb
test
fisubrl
pop
addr16
and
stc
ficoml
addr16
xor
das
jb
adc
stc
out
in
push
mov
in
add
mov
popl
dec
or
xorb
mov
adc
popf
and
insl
jle
into
sub
dec
cmp
jbe
lods
adc
push
movsb
out
lods
and
mov
jae
jge
sbbl
push
cmp
lds
faddp
stc
fmull
push
loopne
out
rol
les
int
dec
ds
jns
sbb
pop
ret
sub
and
jnp
xchg
inc
or
push
cmp
fwait
daa
nop
and
pop
mov
bound
add
sub
sbb
mov
cwtl
std
xchg
push
adc
xchg
stos
or
and
add
jg
pop
xor
scas
sbb
cmp
mov
out
push
push
push
sbb
movsl
out
jbe
repz
into
lret
or
popa
cmp
enter
add
lahf
jp
sbb
mov
fxch
dec
xchg
outsb
mov
js
add
dec
aaa
jg
jae
repz
mov
push
imul
push
xor
loope
mov
insb
pop
sub
jno
loope
aas
cmp
push
push
adc
fs
push
outsb
add
lock
lea
dec
pop
out
cmp
xchg
adc
sti
mov
imul
andb
repz
pop
cld
add
and
loop
in
xchg
sbb
lahf
dec
push
rcl
push
mov
mov
loop
push
rcl
mov
les
sub
sub
pop
loopne
dec
mov
sbbb
adc
mov
fs
out
fs
jmp
adc
ret
add
add
sub
cmp
es
lods
xor
jl
lds
orb
jns
or
jnp
mov
sahf
mov
sub
jb
dec
out
std
jg
jecxz
fdivl
movsb
lods
adc
ficompl
sub
ficoms
stos
xchg
mov
lea
icebp
hlt
cmp
or
push
hlt
xor
lret
movsl
out
xchg
stos
insl
clc
ficomps
cmc
push
sub
xor
pop
insb
jnp
fs
in
mov
jo
leave
or
pop
pop
mov
fsts
cmc
loopne
orl
or
adc
mov
negb
rcl
push
pop
push
fbld
out
mov
lods
je
mov
xorl
mov
sbbb
cs
adc
or
daa
sbb
mov
jb
in
inc
jecxz
mov
xor
sbb
or
pop
jns
loop
hlt
mov
call
leave
dec
jmp
pop
cmpsb
inc
sub
xchg
out
push
pop
pop
push
iret
daa
shlb
push
pusha
mov
xlat
pusha
push
lret
pop
mov
or
mov
jne
xorb
outsb
xor
aas
xchg
inc
pop
sti
xchg
adc
inc
js
imulb
arpl
iret
jecxz
dec
jg
scas
jo
adc
sbb
rclb
out
das
cmp
push
jne
sti
insl
ds
std
inc
xor
adc
inc
or
fmull
mov
lock
les
xchg
test
dec
mov
out
dec
aaa
ljmp
inc
cltd
push
je
jns
mov
imul
das
mov
jge
mov
sahf
leave
cwtl
sub
fwait
push
into
ljmp
jo
cmp
or
mov
out
jp
faddl
sub
pop
stc
inc
lret
ficoms
add
cli
mov
pop
lock
ficoml
mov
cmc
gs
hlt
or
in
add
call
orb
das
mov
test
in
push
xor
lods
adc
xchg
mov
jle
das
pop
pop
ja
daa
lds
push
movsb
cltd
fwait
xchg
push
jno
loopne
mov
into
aad
fistl
popa
scas
jmp
ds
call
mov
rcrl
xor
pop
stc
and
lahf
push
or
pop
xor
xorb
cmpsb
lods
cli
icebp
jb
cltd
dec
jno
call
and
popa
mov
lret
test
xchg
xchg
dec
adc
and
out
mov
test
pop
jnp
add
pop
or
int3
add
orl
inc
call
xor
mov
pop
testl
or
add
shrb
test
dec
jb
cld
inc
sub
xor
sbb
jne
mov
jmp
xor
mov
or
inc
fists
pop
sbb
push
pushf
xor
mov
pop
fcomps
testb
int3
hlt
pop
rclb
pop
test
fwait
icebp
cmp
sub
sbb
mov
sbb
arpl
into
js
and
dec
outsb
jecxz
lea
scas
push
test
xchg
mov
outsb
mov
mov
mov
es
cmc
repnz
inc
pop
hlt
push
test
rol
mov
push
cmc
lret
mov
cmp
mov
jp
pop
push
pusha
movsb
mov
push
clc
adc
dec
mov
test
inc
xor
insb
inc
cmp
sbb
ret
xchg
lret
and
stc
scas
dec
mov
es
mov
std
fs
xchg
out
imul
or
cmp
jmp
addr16
jno
andnps
roll
pop
mov
or
test
imul
lcall
adc
clc
lcall
or
add
or
ss
mov
mov
pop
adcl
mov
nop
mov
jne
stos
sahf
cwtl
push
fsubrs
scas
lcall
frndint
pushf
rclb
push
sub
es
and
xorb
dec
imul
jl,pn
mov
mov
cmp
sbb
fwait
outsl
fwait
mov
jp
notb
inc
jnp
sub
adcb
push
inc
inc
inc
or
xchg
imul
cmp
fcmovbe
lds
mov
dec
in
lahf
jmp
sub
jnp
test
mov
popa
cmovp
inc
cwtl
stc
fcoms
xlat
lods
push
cmp
arpl
insl
mov
add
add
add
test
push
mov
shlb
pop
xchg
sti
mov
ljmp
incl
std
out
sbb
in
pop
icebp
xor
fcmovnbe
decb
adc
and
push
stc
outsb
jge
ret
int3
jle
pop
dec
fiaddl
mov
dec
inc
sbb
sbb
hlt
cmp
mov
pop
popa
adc
jns
mov
or
mov
jae
sbb
stc
xlat
dec
and
pop
jl
fs
mov
xchg
ficoml
sarl
clc
inc
iret
icebp
jns
adc
xchg
pusha
push
cmp
sub
mov
sbb
loopne
daa
lock
mov
loope
orb
cmp
cld
push
dec
mov
or
loope
cmp
or
dec
movsl
imul
xchg
or
or
or
mul
pop
sbb
imul
das
push
xchg
insb
push
push
pop
and
add
inc
mov
rolb
outsb
push
add
les
bnd
imul
mov
xchg
js
add
aad
bound
ds
or
adc
lds
push
push
or
mov
sub
stos
jns
icebp
scas
aad
dec
jmp
cmp
rcll
cltd
fldt
pop
je
sub
scas
lret
sub
xchg
cmpsb
lcall
lea
mov
xchg
insl
fdivl
fsubrs
and
adc
pop
inc
mov
faddl
xor
pop
inc
out
out
add
xchg
xchg
jecxz
or
push
dec
lret
adc
jno
lea
aad
mov
or
aaa
jge
std
xchg
bnd
bound
stos
pop
stos
jae
jae
push
jno
mov
test
mov
decl
insb
mov
mov
add
jge
jge
fwait
pop
jmp
pusha
cmp
nop
push
adc
loop
fs
jle
das
jnp
loope
pop
adc
push
sbb
inc
mov
mov
pushf
out
in
xchg
addr16
push
aaa
jmp
jnp
or
inc
xor
and
je
adc
insl
push
push
inc
in
loope
sub
mov
loope
lcall
into
xchg
add
mov
jo
sub
in
jl
repnz
rcll
in
push
and
xchg
iret
test
xchg
mov
lds
xor
jmp
jg
int
aam
mov
push
cmp
xlat
sbb
jno
dec
inc
sbb
mov
xor
stos
jle
push
and
mov
lahf
pop
sub
xchg
dec
lods
fadds
xchg
jmp
or
pop
in
jp
loop
sbb
mov
clc
test
decb
leave
sbb
iret
xchg
xlat
fmulp
sti
andl
popa
cmp
fnstcw
and
aas
mov
pop
jne
sub
mov
jnp
cmp
push
enter
push
jno
insl
jno
push
shl
iret
sub
push
sub
add
clc
cmp
mov
mov
mov
mov
mov
mov
xor
add
and
fadds
in
fadd
adc
int
xchg
push
mov
mov
fstps
adc
xchg
cmp
rclb
cld
cmpsb
sarb
stc
mov
addr16
gs
mov
xor
stos
xchg
cmpsb
push
sbb
fxch
bound
jb
fsub
mov
ljmp
sub
adc
inc
mov
lds
loopne
jp
scas
dec
addb
cs
outsb
pop
repnz
int3
mov
shl
dec
jae
push
sbb
test
inc
pushf
fisttpll
les
xchg
push
subl
mov
mov
test
cmp
outsb
popa
mov
xor
shll
and
test
push
cmp
add
clc
push
std
inc
stc
sub
mov
es
jmp
cli
mov
push
lret
mov
or
push
sub
fwait
jmp
rorl
sub
outsb
xchg
cmp
out
push
stos
bound
sahf
rcr
push
lods
xor
or
inc
sbb
rcrb
pushf
addl
pusha
je
or
nop
ljmp
adc
movsb
lret
push
sti
ja
imul
add
mov
in
ljmp
xchg
popf
std
jo
loop
sub
shlb
jecxz
repz
add
mov
jmp
je
loopne
xchg
sub
mov
push
imul
dec
jmp
inc
out
push
mov
sub
aas
cltd
push
mov
or
adc
rcll
fucom
fsubl
jne
nop
cmp
pop
and
fists
pop
aad
std
cmpsl
inc
cld
bound
mov
inc
stos
push
push
cmc
sahf
mov
xchg
pop
add
popf
sbbl
mov
daa
mov
mov
imul
cs
push
mov
fcmovu
push
cmpsb
or
mov
push
adc
add
sub
popf
cmp
pop
scas
and
push
mov
je
imul
mov
js
mov
shrb
loop
lock
push
push
xor
mov
mov
mov
mov
imul
jp
mov
sub
adc
ljmp
cli
das
and
mov
mov
sbb
push
sbb
in
xlat
aam
mov
lock
fwait
sbb
jmp
mov
inc
pop
jmp
sub
mov
shrb
sbb
loopne
imul
sti
pop
repnz
imul
es
add
adc
mov
mov
add
dec
insl
push
inc
aas
adc
es
adcl
pop
imul
imulb
and
sub
loop
cmc
lds
lods
mov
call
and
pop
mov
std
loope
in
js
sub
xor
and
push
adc
mov
cmpsb
cmp
out
daa
ret
pop
sti
or
cmc
and
ss
imul
in
pop
popf
das
cmpsl
inc
add
mov
cmp
subb
xor
and
jb
add
xchg
movsl
repnz
es
pop
gs
ss
sahf
lahf
aas
xor
lea
icebp
aad
xchg
pop
repz
xchg
add
pusha
or
outsl
ret
mov
dec
int3
notrack
xor
lcall
je
fildll
xor
mov
cwtl
xorl
sti
int
mov
fwait
leave
pop
push
iret
sub
add
loopne
xlat
clc
imul
repz
repz
mov
mov
mov
jns
mov
jmp
shll
sbb
ret
add
dec
mov
loopne
ljmp
insl
out
mov
push
out
dec
pop
cwtl
and
cmp
popa
es
cmp
insl
in
mov
adc
lods
pop
jb
arpl
arpl
les
into
cwtl
in
dec
int3
sbb
out
roll
jns
jne
outsb
or
cmpsb
leave
jge
push
sbb
popf
xor
pop
rclb
fiaddl
leave
out
cli
shl
ja
shlb
hlt
dec
xchg
pop
outsb
or
rcll
popa
leave
pop
std
xchg
mov
push
loop
xor
test
into
ds
std
mov
or
mov
xchg
jmp
lock
data16
pop
dec
lcall
mov
mov
add
shll
dec
imul
jmp
cmp
jmp
imul
jl
xchg
mov
add
or
cmpsl
inc
jne
sbbb
inc
pop
test
sub
inc
cmpsb
lcall
dec
inc
sub
mov
pushf
test
xchg
pop
pop
in
pusha
decb
mov
cmp
fwait
mov
daa
jecxz
dec
hlt
and
sub
pop
xchg
movsb
cmp
in
add
mov
roll
pop
insb
fcoml
aaa
out
cmp
inc
mov
mov
push
ss
mov
stc
sbb
cld
jnp
outsb
ret
lahf
or
lea
sub
test
clc
pop
add
and
aam
jae
ja
xor
movsb
test
shll
sbb
lods
jmp
test
les
sub
jl
mov
mov
int
je
fstl
push
test
jge
and
mov
and
adc
dec
mov
add
sbb
dec
add
push
push
inc
notl
xchg
repnz
aad
divl
cmp
push
in
rorb
jl
adc
cltd
sbb
or
pop
inc
clc
lock
mov
add
lods
jbe
push
jge
divl
dec
sub
xor
lods
mov
mov
push
loopne
fcoms
inc
sub
mov
jmp
arpl
in
pop
xor
stc
lock
cmpsl
popf
dec
pop
xchg
aad
aam
js
cmpsb
int
mov
push
in
outsb
fwait
pop
cs
mov
aaa
cwtl
dec
loope
and
lds
push
and
push
int3
jno
cmp
out
cmp
push
pop
cmp
fneni(8087
das
adc
aaa
sbb
push
and
movsb
inc
jb
stc
pop
ss
mov
adc
aam
leave
popf
cmp
xchg
sarl
scas
jg
xchg
cli
sub
push
xor
dec
jo
in
jb
iret
pop
lcall
addr16
mov
test
repz
stos
iret
push
cmp
pop
insl
inc
pushf
or
testb
mov
pusha
cmp
lret
pushf
add
push
pop
std
test
inc
mov
jle
cmp
xchg
add
bound
or
mov
inc
jne
mov
ljmp
pop
divb
mov
sub
sub
sahf
jb
fwait
cmpsl
mov
les
lcall
xlat
jns
ss
pop
gs
push
push
lea
inc
sbb
sbb
pop
mov
aam
dec
xor
jg
test
pop
inc
push
fstpl
cmp
test
ds
cmp
inc
xor
movsb
inc
es
in
arpl
push
mov
or
lock
adc
in
and
xlat
shll
addr16
dec
jle
pop
jae
sub
cmpsl
lods
cmc
out
fwait
push
dec
pop
mov
add
jae
in
pop
andl
cmp
shlb
xchg
mov
pop
mov
fwait
sti
arpl
inc
outsb
xchg
xorl
or
mov
pop
js
pushf
cmp
int3
js
cli
dec
push
aad
xor
adc
jae
dec
stos
adc
dec
outsl
mov
dec
push
jp
mov
push
andb
sub
imul
jo
adc
loop
pop
sub
pop
mov
hlt
push
cltd
mov
ret
jae
nop
inc
inc
cwtl
lret
sar
push
jmp
fisttpll
fbld
rclb
scas
lods
adc
xchg
fisttpll
pop
repnz
insb
inc
imul
sbb
roll
mov
pop
movsl
je
jg
into
inc
test
addl
xor
inc
adc
cltd
jne
xor
imul
in
outsb
adc
divl
test
jg
in
sub
pop
pop
arpl
test
nop
sbb
adc
mov
adcb
icebp
push
mov
cli
inc
inc
xor
add
or
cmc
pop
repz
or
test
jo
cs
imul
dec
popf
add
in
and
mov
sbb
js
pusha
adc
xchg
call
push
outsb
cld
test
adc
fidivrl
mov
inc
mov
fcoml
lods
ja
and
pushf
ljmp
lds
push
lock
or
cmp
ss
push
int3
sbb
xor
lock
jmp
xchg
notl
lea
xor
sbb
sbb
repnz
or
mov
ljmp
mov
mov
sti
stos
mov
popf
adc
jnp
jg
paddw
test
xchg
gs
iret
decl
lahf
or
test
gs
les
jbe
add
sbb
imul
xor
push
insl
nop
dec
je
pop
or
fldcw
std
cmpsl
sarb
popf
mov
cmovle
int3
push
adc
cmc
xchg
and
repz
pushf
sub
mov
sbb
mov
jb
inc
ds
jbe
lret
stc
cmp
pusha
push
mov
in
stc
xchg
js
je
test
sub
cwtl
add
repnz
inc
dec
cmp
inc
cli
repnz
fimull
jge
movsl
mov
subl
movsl
in
sub
fwait
inc
in
mov
xor
ja
push
pop
hlt
je
mov
inc
pop
inc
mov
stos
popf
lods
mov
movb
in
pop
les
push
test
mov
cli
fld1
and
mov
xchg
scas
outsb
movsl
stos
imul
sarb
xchg
call
fldenv
jg
mov
adc
jmp
movsb
inc
mov
rcrl
shll
and
lock
xchg
out
stos
inc
pop
arpl
add
or
mov
or
repz
mov
or
cmpb
repnz
cmc
or
test
pusha
insb
adc
insl
inc
dec
fdivp
sub
fdivrl
imul
test
xor
xor
test
sbb
jnp
repz
int
ret
sbb
sbb
ja
add
lds
sub
fstl
test
cwtl
xor
jp
sbb
and
pop
cli
xchg
jp
sti
push
mov
test
mov
inc
nop
adc
out
fucomp
cs
jl
lahf
cltd
adc
mov
ffree
and
sub
pop
negl
sub
jnp
jl
and
mov
ret
mov
pop
or
cli
icebp
jmp
and
scas
clc
add
mov
jg
stos
add
xor
sub
pusha
stos
cmp
ljmp
jp
sbb
cmpsl
pop
cmp
es
movsl
pop
and
xor
cwtl
in
sbb
out
xchg
jo
jno
fistpll
mov
push
repz
test
hlt
jns
test
les
cmp
push
pushl
jg
pushf
jne
js
outsb
outsl
roll
mov
je
iret
ja
mov
cmp
or
or
dec
mov
mov
push
jns
es
mov
mov
add
push
or
jae
or
bound
jmp
mov
push
and
mov
loop
push
or
or
dec
inc
add
adc
mov
pushf
loopne
push
ss
sub
xor
sbb
cmp
pop
and
add
jmp
xor
push
push
lret
lret
mov
sbb
push
loop
xchg
imul
sub
cld
jp
cmp
jb
out
jne
or
inc
in
sbb
dec
push
pop
int
aam
cmp
xchg
push
push
or
loop
dec
fs
pop
xlat
lcall
or
popa
scas
jne
js
or
fs
push
pop
jecxz
or
pop
dec
ret
out
stos
insb
popa
pop
jb
mov
push
push
call
stos
and
sti
scas
inc
lds
lahf
mov
mov
sub
daa
sub
int3
gs
mov
enter
mov
xchg
out
dec
mov
xor
jecxz
mov
in
rcrb
test
xchg
mov
xchg
scas
out
sbb
aad
add
cmpsb
cmp
fwait
sub
push
jmp
jbe
cld
ret
push
lods
fistpll
jnp
lret
cmpsb
push
mov
and
pop
mov
rsm
mov
adc
cmp
repnz
mov
pop
repnz
out
inc
outsl
pminub
or
jbe
loope
sub
out
in
and
push
xor
int
push
xor
cmc
int3
fwait
push
inc
popf
pop
pop
aaa
pop
push
das
ljmp
stos
rcrb
sbb
sbb
sbb
clc
xchg
bound
addr16
nop
xor
mov
cli
ret
mov
jnp
aam
mov
mov
dec
out
jb
mov
and
adc
inc
inc
lods
shll
mov
out
out
sub
mov
ds
cmp
pminsw
sahf
ja
lcall
pop
sub
gs
lods
jb
jge
rcl
movsl
test
mov
add
in
rcl
mov
cmp
xchg
insb
dec
mov
lea
pop
cwtl
adc
into
lods
in
mov
cmp
lcall
enter
cmp
jge
out
ljmp
pusha
xor
jp
push
adc
popa
dec
xchg
stos
mov
jmp
pop
pop
pop
and
cwtl
insl
jno
xchg
es
mov
adc
jle
movsb
dec
lahf
loop
lret
cli
push
das
cli
out
cld
push
xchg
test
mov
xchg
mov
sbbl
pop
mov
out
jp
mov
sub
sbb
inc
or
jecxz
call
lret
lret
into
movsl
jmp
pusha
popf
ret
inc
pop
outsl
sub
xor
scas
les
adc
xchg
aam
sub
adc
in
mov
loopne
dec
fisttpll
loope
or
pop
pop
mov
dec
sar
sti
and
and
cld
cmpl
add
jbe
mov
dec
add
sbbb
adc
std
repz
push
pushf
fisttpll
pop
cmp
push
push
nop
and
push
sbb
out
ficoml
and
push
sbb
push
movl
rolb
roll
jbe
adcl
jle
push
or
iret
je
test
sub
lret
xchg
xlat
mov
sub
orl
mov
imul
aad
loope
rorl
mov
popf
sub
in
cltd
shrl
jns
or
or
mov
shlb
inc
addl
icebp
daa
outsb
lds
dec
lret
and
data16
push
jo
adc
xor
and
fcomi
faddl
inc
fldcw
lods
leave
jmp
fs
xchg
sub
ljmp
push
popa
mov
lret
push
add
sub
mov
push
out
dec
aaa
xchg
imul
fnstsw
in
ret
dec
icebp
xor
out
adc
aas
pop
aas
hlt
arpl
dec
and
mov
jb
insb
xor
or
xchg
mov
xor
aam
daa
cmp
fdecstp
xor
ja
loope
adcl
inc
outsl
inc
insb
aas
jns
push
movsb
and
icebp
jl
mov
add
or
orb
jle
testl
or
xchg
mov
push
cmp
daa
push
fidivs
imul
mov
mov
movsb
pop
cltd
jmp
adc
mov
test
mov
mov
mov
aaa
ret
dec
popa
lods
sbb
bound
hlt
sub
fstps
jecxz
add
sub
insl
or
aas
jecxz
cmp
int
mov
cltd
enter
sbbl
and
popa
daa
inc
filds
aas
mov
jg
shl
fsubl
shlb
lock
push
jbe
test
adc
adc
rolb
sub
xor
push
xchg
add
andb
stos
dec
out
icebp
fs
adc
and
pop
mov
jp
mov
call
jo
or
hlt
jp
adc
cmp
outsl
int
add
dec
dec
jge
es
push
push
xor
cmp
js
lcall
jle
xor
pop
imul
pop
ds
cmpsl
mov
cltd
ss
mov
fsubl
lock
repnz
sarl
jg
test
cld
jo
cmp
dec
push
adc
add
adc
mov
das
inc
in
push
xor
pusha
add
stos
inc
cmp
sahf
sbb
cs
mov
test
movsl
cmp
in
sbb
lret
je
inc
push
pop
pusha
les
inc
sbb
sbb
test
hlt
add
inc
mov
test
out
mov
xchg
or
lret
jno
div
outsl
mov
repnz
pop
push
cwtl
mov
imulb
mov
jmp
mov
fsubl
xchg
jnp,pt
iretw
push
cmp
mov
lret
pop
pop
push
adc
fcoml
pop
add
xchg
rolb
jne
sub
faddp
mov
dec
push
lods
and
sub
jo
cs
xor
dec
xor
dec
ds
lods
pop
dec
daa
xchg
xchg
jle
mov
lret
rorb
ja
andb
mov
fdivs
loopne
inc
je
xchg
xor
push
fstps
xor
and
arpl
mov
enter
sahf
mov
xchg
mov
cmp
inc
jnp
into
or
push
mov
adc
mov
mov
jl
repz
mov
pop
fwait
aad
out
cmpsb
add
test
jl
lods
filds
xor
stc
fmull
rorb
pushf
adc
adc
sub
into
jl
mov
in
shrb
ss
inc
mov
fcoml
xor
movsb
cltd
sub
push
sbb
rcrl
sbb
lds
push
insl
ljmp
or
jl
ljmp
sub
ds
cmp
and
stos
xchg
cbtw
hlt
lcall
rorl
sub
xchg
mov
into
aam
repz
inc
movsl
fwait
test
in
fs
and
int
scas
subl
aaa
fs
push
adcl
repnz
nop
mov
push
and
and
inc
call
pop
add
cmp
in
sbb
iret
jb
dec
add
lahf
lcall
fwait
in
or
shll
test
inc
inc
fs
mov
push
xor
mov
or
lahf
loopne
push
pop
clc
inc
jne
jle
out
icebp
popa
or
int
sbb
push
mov
jmp
sbb
pop
outsb
inc
sub
push
adc
adc
pop
push
into
stos
arpl
xchg
aad
imul
sti
mov
push
cli
jmp
leave
adcb
js
sahf
fs
cmp
sbb
lods
cmp
mov
ss
push
movsb
mov
aas
inc
dec
jb
adc
and
aam
mov
xchg
push
pop
mov
jp
int3
mov
sahf
push
stos
flds
lcall
cmc
push
rol
jno
lret
jl
fs
dec
cmp
sub
call
in
test
fcoml
mov
mov
jl
stos
xor
xchg
jmp
mov
mov
push
jno
xchg
mov
push
jns
pop
data16
fmul
lret
mov
mov
mov
mov
pop
ljmp
daa
mov
outsl
les
stos
in
cmp
cmp
fs
xchg
inc
mov
jmp
mov
stc
or
movl
or
jg
pop
divl
es
pop
aad
arpl
mov
stc
sarb
outsl
lock
jmp
cld
movsl
pop
ss
pusha
out
pop
bound
icebp
pop
shl
pop
push
jge
into
lea
mov
aas
mov
push
enter
test
push
sbb
jp
cmp
adc
and
jns
mov
pusha
fdivr
fidivrl
call
cld
fsubrl
jno
cltd
fstpt
xor
jle
nop
sbb
iret
sbb
cmpsl
loop
pop
jmp
adc
sti
add
mov
movsb
sbb
or
mov
jne
mov
sub
mov
mov
in
test
shll
mov
jle
pop
sub
sub
add
es
cmpsl
mov
mov
adc
mov
cmpsl
sbb
fbstp
cld
cmpb
aad
ficompl
cmp
mov
add
shll
leave
nop
mov
push
mov
cmp
and
cwtl
aad
out
shlb
push
mov
and
adc
imul
pop
ss
cmp
mov
testb
adc
adc
mov
in
adc
cmovns
in
lock
icebp
in
enter
jmp
mov
jle
cmp
push
out
xor
xor
jmp
lahf
aaa
daa
rcrb
pop
out
cmp
cmp
filds
jbe
or
stos
mov
pop
mov
pop
in
popf
sbb
jbe
lret
loopne
xor
mov
fcompl
or
mov
add
mov
adc
mov
push
push
dec
es
sub
xchg
mov
sub
mov
jne
gs
scas
rclb
outsb
jp
mov
and
movsb
sbb
imul
mov
pushf
mov
cmp
rorl
fsqrt
mov
pusha
scas
icebp
shlb
add
lea
pop
nop
iret
popf
and
or
loope
push
dec
sub
mov
mov
repz
mov
xor
dec
xor
data16
push
and
push
fistps
sub
stos
pop
push
std
dec
in
push
jle
push
test
lcall
mov
cmp
mov
inc
mov
pop
mov
jae
out
inc
idiv
lods
dec
and
xchg
sbb
mov
int3
inc
or
fildl
cmp
pop
inc
int
sub
outsb
insb
dec
xor
fwait
jg
das
fstpt
cmp
dec
mov
sbb
inc
add
dec
fnsave
cltd
daa
repz
into
aad
xor
imul
ja
fimuls
in
sbb
cwtl
jb
pop
out
xchg
call
xchg
aad
dec
js
idivb
fdiv
loop
sub
dec
dec
imul
pop
jecxz
mov
int3
push
in
enter
lcall
sub
inc
cmp
subl
xchg
or
icebp
xlat
lcall
out
stos
mov
inc
out
outsl
ret
cmp
mov
pop
jnp
push
push
scas
fimull
out
js
mov
in
xchg
lods
mov
addb
sub
std
dec
cmc
xchg
repz
iret
jnp
dec
decb
pop
clc
push
lock
xor
mov
inc
test
or
add
je
pop
or
push
sbb
xor
or
cmp
imul
or
outsl
shl
lret
cmp
sbb
pop
sub
dec
mov
arpl
insl
mov
ja
test
push
jmp
xor
sahf
mov
pusha
push
cmp
sbb
je
push
mov
scas
sub
mov
dec
leave
sahf
sbb
mov
sbb
push
cmp
out
fbld
loop
stos
dec
mov
adc
test
arpl
add
enter
pop
dec
and
aas
and
or
jbe
ds
leave
jb
push
insb
or
jge
inc
adc
pusha
subl
rcll
inc
movsl
dec
push
push
jno
push
inc
std
clc
inc
pop
in
cmpsl
sub
fistpl
jne
xchg
lea
and
jb
mov
mov
push
aad
inc
movsb
and
xchg
cmp
mov
and
jg
test
movsb
xor
in
sbbl
roll
xor
je
scas
xor
jbe
and
cwtl
lds
sub
test
cli
dec
jb
dec
sub
pop
xchg
adc
das
aam
add
loope
push
lcall
cmpsb
and
jle
inc
push
stc
adc
ret
sub
mov
in
dec
inc
push
out
xchg
mov
inc
xor
out
push
jmp
sbb
lahf
pushf
adc
mov
cld
js
std
cmp
rorl
push
jns
xchg
lods
jmp
xor
fcomps
or
sbb
test
or
add
xchg
cmpsl
cmp
and
xchg
lret
pop
repnz
insb
mov
dec
add
aas
loop
fbld
mov
hlt
bound
cli
imul
stos
mov
mov
hlt
sarb
movsb
or
dec
add
dec
mov
pushl
arpl
lea
jecxz
xchg
add
push
inc
push
adc
xchg
paddusb
cmp
fstps
arpl
pop
mov
mov
jl
enter
iret
loopne
xor
cld
aas
push
test
rcrb
clc
or
pop
fiaddl
add
mov
or
dec
test
arpl
pop
dec
out
les
stc
mov
jp
bound
inc
or
add
pop
xchg
icebp
cmp
push
les
mov
in
sbb
xchg
push
fwait
mov
or
lods
test
hlt
sub
or
jg
sub
aaa
into
cmp
adc
lcall
scas
ret
xchg
and
mov
test
outsl
xchg
mov
mov
out
push
ljmp
cmp
mov
sbbl
ficomps
adc
aam
pop
in
insb
lock
leave
sti
cmc
es
mov
mov
or
fcmove
jecxz
dec
jle
push
clc
bound
inc
jge
mov
inc
xchg
pop
je
mov
dec
push
int
adc
xchg
sub
push
xchg
mov
xchg
pop
xor
jmp
test
xchg
cmp
call
int3
lret
adc
das
and
fstl
sub
adcb
dec
mov
mov
mov
aad
and
xchg
mov
mov
xor
sub
sub
daa
aad
cmpb
and
pop
xchg
mov
out
roll
les
jo
sub
push
xorb
fdivrl
add
dec
push
push
call
push
mov
out
sar
arpl
mov
not
shrb
dec
pop
hlt
sbb
dec
in
bound
or
adc
push
pop
movsb
mov
aas
test
adc
xchg
dec
cmp
mov
lods
sbb
aas
xor
jmp
jmp
mov
xchg
xchg
in
push
shr
jns
repz
test
ss
mov
rolb
jmp
movsl
jb
or
mov
cmpsb
jle
pop
pop
dec
jg
shrb
pop
jb
cwtl
cmpsl
inc
add
xchg
xchg
inc
inc
dec
mov
fidivs
bound
add
adc
enter
rcr
sahf
sub
adc
pop
js
jbe
jne
sbb
add
push
inc
sti
scas
dec
inc
add
add
xor
xchg
mov
add
incb
sbb
pop
jnp
shrb
ss
movsl
daa
mov
lods
and
imul
out
int3
adc
or
mov
xchg
or
ret
or
lods
jp
mov
setbe
jns
add
pop
out
call
dec
add
addr16
dec
loopne
mov
sti
ret
lods
in
pop
xchg
dec
xchg
lock
xor
pop
jge
fidivs
aam
insl
mov
xchg
mov
cmp
ljmp
test
fs
rorb
pop
divb
out
mov
push
mov
mov
adc
dec
lret
into
cmpb
sub
mov
test
ret
sub
lods
mov
dec
scas
pop
pop
insl
dec
jle
sbb
xadd
push
adc
test
xchg
or
scas
and
out
pop
dec
and
test
cmc
lahf
push
jmp
loopne
in
or
add
nop
ja
cmp
mov
and
out
out
fadds
fstp
sbb
or
into
fldcw
or
xor
ret
push
repnz
pop
lret
cmp
xor
adc
sub
std
fs
cmp
out
std
adc
cltd
in
ds
push
cmp
andb
lcall
adc
inc
xchg
in
jle
mov
mov
dec
cmc
lds
ds
push
jno
leave
cmp
jnp
push
daa
sbb
ret
pusha
repz
loope
mov
imul
ss
loop
lods
mov
insl
data16
and
add
js
pop
imul
dec
jne
or
adc
hlt
mov
push
pop
cmp
iret
test
sub
mov
pop
aaa
dec
push
dec
sbb
inc
or
add
shl
fstpt
push
and
mov
cmp
or
mov
pop
imul
adc
mov
push
cltd
clc
ja
cmpsl
jmp
cld
mov
inc
inc
mov
push
scas
sbb
pop
mov
and
and
loope
inc
jne
cmp
into
push
xchg
jns
js
cmpsb
cs
imul
call
cltd
jnp
mov
or
fcoms
xchg
jp
push
rcrl
xchg
int3
call
cmc
sarb
xor
adc
sbb
xchg
jbe
je
lds
sahf
adc
inc
arpl
ja
lahf
or
ret
fldl
shll
or
and
jo
dec
sbb
mull
flds
ljmp
inc
xchg
cli
sbb
in
insl
xlat
sub
push
and
pop
inc
loop
cli
cmpsl
das
leave
out
sub
bound
cmc
sub
or
outsb
lock
xchg
cmp
aam
js
xor
xchg
jmp
scas
aaa
loop
imul
mov
sbb
into
cs
cmp
stos
mov
je
jb
in
cmp
aam
dec
xchg
fadds
aas
loop
xchg
push
xorl
add
mov
xchg
data16
leave
out
out
stc
ss
and
imul
lcall
mov
cmpsl
and
popf
dec
xchg
imul
inc
mov
pop
cmp
push
fcoms
and
inc
loopne
cltd
je
sub
sbb
xchg
aam
jne
add
cwtl
push
clc
fnstenv
cltd
jg
enter
jge
xchg
jns
mov
or
mov
cmpsb
fsubrs
jmp
outsl
or
pop
or
xchg
push
xchg
lods
inc
je
jecxz
cwtl
push
rcrb
mov
xor
pop
arpl
cltd
jb
xor
enter
es
inc
push
or
adcb
cmp
popf
jnp
ja
movsb
adc
mov
aam
out
push
push
jmp
xchg
mov
fdivrs
int3
jp
mov
movsl
pop
xchg
pop
lock
stos
dec
mov
stc
xchg
sub
pop
jae
mov
jge
pop
sub
roll
mov
sbb
jge
adc
ret
pop
mov
mov
and
je
sbb
cli
xchg
mov
jmp
pop
dec
jge
mov
lds
pop
movswl
leave
pop
and
negl
sub
xor
add
jg
imul
or
push
movsb
push
dec
clc
rcll
insl
mov
sub
sub
mov
mov
cs
add
fistpl
repz
cmpsb
cwtl
mov
mov
std
stos
jb
xchg
jge
test
and
psrlw
ret
pop
insb
dec
ror
loope
adc
movsb
cmp
dec
aaa
xchg
push
fidivrs
adc
js
jo
ja
ljmp
arpl
scas
movb
daa
ret
push
mov
mov
cmpb
adc
jne
aad
aas
xrelease
fisttps
fs
dec
je
cs
iret
jmp
sbb
das
pop
or
stos
pop
mov
das
mov
jae
or
test
sti
movsl
fdivs
mov
mov
xchg
cltd
or
jg
in
call
cmpsb
jo
jb
sub
mov
fs
or
push
mov
cmp
mov
cmp
sbb
mov
insl
inc
nop
loop
mov
pop
cmp
shrl
shlb
jg
leave
push
mov
inc
lahf
sbb
or
cld
adc
adc
repnz
xor
mov
jnp,pn
or
pop
mov
push
fidivrs
dec
sub
mov
sub
loop
jne
pop
pop
movsl
cmp
push
mov
sbb
and
xchg
jno
out
pusha
imul
nop
xchg
lock
loop
lods
sub
mov
cmpb
mov
push
jle
dec
jns
jns
fs
mov
inc
pop
bound
pop
jg
ret
jg
or
pop
shll
js
ja
sahf
cmpl
arpl
lods
adc
fidivrs
test
push
jno
or
insl
in
push
pushf
leave
lcall
mov
sbb
dec
sbb
inc
pop
dec
sub
xchg
dec
fsts
pop
mov
sbb
cmp
dec
repnz
lret
fs
cmp
pop
jb
ret
jl
inc
hlt
xchg
pop
add
rorl
repz
adc
xor
pusha
push
nop
jecxz
into
loopne
xor
add
aas
pop
lds
out
negl
outsb
fwait
mov
jge
fsubrs
mov
push
jg
xchg
sbb
add
push
xchg
sahf
imul
out
mov
adc
fwait
push
push
inc
repnz
lret
arpl
in
in
lods
inc
pop
stos
mov
mov
and
xchg
in
jno
repz
mov
xor
xchg
and
mov
outsb
stos
jno
adc
bound
inc
jbe
out
cmpsl
out
cld
cmpsl
pop
hlt
cmpsb
sub
lcall
repnz
shrl
rcrl
movsb
out
dec
cmpsl
mov
jae
jo
ljmp
sub
mov
repz
cmp
das
sbb
js
fs
icebp
mov
mov
add
jo
and
in
jp
fsubrl
sbb
mov
inc
js
dec
mov
outsl
test
cs
ja
push
and
fwait
dec
out
xchg
out
out
into
rcr
decl
daa
xchg
shl
rclb
hlt
test
out
and
add
jae
dec
cmp
insb
aad
add
lea
insb
out
cmp
notl
mov
jnp
cs
icebp
jo
xchg
mov
dec
and
cmc
push
sbb
mov
and
out
movsb
cmp
shll
into
imul
int
adc
mov
inc
hlt
mov
add
jmp
xor
cmc
aas
jb
sub
mov
inc
daa
xor
and
gs
xor
sub
add
pop
jae
lock
pand
cmp
outsb
les
mov
pushf
xchg
sbb
push
and
push
test
adc
in
dec
cli
stos
adcl
lea
cmp
sub
out
mov
addb
or
push
mov
repnz
mov
inc
iret
lds
js
or
shl
jnp
pop
mov
pop
fcom
sbb
adc
sub
push
xchg
mov
jno
cmp
xchg
inc
mov
dec
add
outsl
inc
pop
dec
shll
mulb
cs
loopne
jmp
push
leave
or
sarb
clc
and
sub
pop
add
mov
jae
hlt
jno
outsl
xor
pusha
and
ret
lret
frndint
rorb
je
bound
add
int
mov
in
xchg
jo
test
in
sbb
fimuls
dec
lcall
jge
lret
or
pop
jo
shll
xlat
stos
dec
or
pop
mov
and
lcall
not
jnp
jb
adc
stc
cltd
pop
into
decl
xlat
ret
ret
cmp
negb
rcr
cld
outsl
mov
push
mov
std
je
outsb
mov
ret
cmp
xorl
dec
test
pop
push
jno
fiadds
js
adc
lea
push
push
mov
aad
das
jge
scas
in
ja
xchg
pop
lret
jno
mov
sub
stc
and
cmc
add
lea
stos
iret
mov
mov
addr16
pushf
inc
les
xchg
adc
dec
cmc
je
into
sub
jp
pop
mov
fwait
sub
mov
popa
hlt
dec
mov
sub
mov
js
out
mov
add
lcall
mov
lods
mov
rorb
lret
mov
test
adc
mov
push
xchg
jmp
adc
and
mov
cmpsl
outsb
int3
cmpsb
adc
push
xorl
pop
lea
loop
cwtl
mov
outsb
std
xor
mov
in
pop
lods
dec
or
cld
test
mov
sub
mov
dec
add
mov
or
and
push
ja
pxor
mov
adc
loop
mov
jmp
jb
push
xor
enter
xchg
xor
loope
imul
mov
popf
test
pop
cmp
xorl
pop
mov
cwtl
jbe
lret
cmc
inc
je
sbb
jl
xor
or
xchg
addb
out
inc
inc
jno
mov
push
or
jmp
int
loopne
inc
inc
mov
adc
outsb
enter
fists
adc
fcoms
xor
xchg
dec
scas
mov
popa
outsl
fs
push
loope
jnp
jae
jbe
push
push
pop
mov
ficoms
mov
add
push
cmpsb
mov
xor
repnz
jae
sbb
cwtl
or
cli
xchg
mov
and
out
mov
push
or
xchg
insl
out
or
shl
sbb
stos
ret
mov
dec
push
cmp
xchg
cmpsb
lods
ja
or
sahf
dec
repz
sbb
outsb
add
xchg
fmull
dec
xchg
ret
and
push
adc
dec
mov
sbb
dec
test
push
mov
push
push
sub
inc
in
in
es
sbb
push
fstpt
xchg
clc
xchg
ficompl
pushf
in
push
inc
fidivs
pop
dec
aas
xchg
sub
push
jb
xor
sbb
fnstenv
xchg
jo
fwait
inc
mov
mov
or
jne
in
mov
lods
popf
xor
mov
and
sub
xchg
inc
mov
iret
aad
cmpsb
cmpl
aaa
arpl
in
inc
aaa
mov
pop
pushf
nop
dec
cld
mov
pop
in
pop
jbe
and
xchg
loope
jb
addb
lods
mov
rcll
fisubrl
inc
in
inc
xchg
cmp
cs
cli
push
lret
xchg
cli
adc
insl
jbe
cmp
lds
dec
add
push
lock
or
lahf
xchg
add
test
das
nop
lret
into
xchg
ljmp
cmovns
lock
inc
mov
mov
lret
push
mov
scas
jns
push
shrb
xchg
mov
xchg
jne
lods
nop
mov
in
jnp
std
nop
nop
stos
repz
data16
inc
aam
adc
sti
in
xchg
out
lret
mov
jmp
int
rorl
pop
sbb
xchg
data16
inc
or
in
mov
dec
lds
push
xorl
sarb
fnstenv
sbb
das
xchg
es
clc
test
inc
cwtl
call
sub
loop
push
adc
test
jmp
push
mov
pop
dec
fisttps
out
mov
adc
loopne
jmp
lret
sub
dec
mov
xchg
jns
imul
rclb
in
or
mov
inc
xlat
int3
inc
bound
xchg
xchg
add
aam
cmpsl
sbb
and
enter
loope
add
push
push
loopne
pop
cltd
sub
mov
jmp
push
aas
std
data16
and
mov
das
xchg
pushf
xchg
sub
jo
in
mov
pop
xor
cltd
out
jl
add
outsb
sahf
mov
xor
stos
lods
repnz
lret
jle
mov
inc
adc
arpl
aad
shr
or
mov
lods
ss
aas
or
testb
jbe
movb
in
xchg
inc
push
inc
push
add
xchg
fiadds
addr16
push
mov
pop
out
dec
adc
cmp
fbstp
std
mov
bound
pop
pop
fmulp
lods
out
bnd
repnz
cld
popa
add
test
test
mov
ret
mov
out
sbb
jmp
lods
sarl
imul
fnstenv
pop
or
jmp
int
dec
cmpsb
lcall
and
gs
popf
ret
jb
jne
rcr
repz
push
out
mov
and
xchg
test
sub
xchg
lahf
dec
out
and
aam
mov
mov
aas
mov
je
mov
fisubrs
adcb
ror
out
jne
pusha
lret
sarl
pop
out
insb
mov
xchg
in
shll
sbb
sbb
shll
sbb
stos
popf
xor
lods
nop
loopne
aam
out
adc
mov
scas
add
push
cltd
mov
mov
xor
lock
xchg
inc
icebp
and
pop
dec
mov
cmpsb
pop
cmc
jp
xchg
adc
and
pop
mov
ja
jle
push
and
jnp
jle
orb
mov
mov
push
rcrl
insl
test
jg
xorl
and
outsb
mov
imul
mov
adc
cmpsb
jg
movsl
sub
adc
mov
leave
jg
adc
mov
mov
out
inc
sahf
arpl
testl
test
xchg
sub
addr16
xor
out
mov
or
pop
xor
inc
inc
push
jle
mov
push
fidivs
sbb
aas
mov
jnp
cmp
inc
and
sbb
lds
and
sqrtps
push
adc
and
fdivrs
or
and
lock
mov
dec
cs
loope
pop
mov
ror
pop
mov
push
idivb
pop
outsb
pop
neg
push
into
add
dec
int3
cmpl
and
jge
and
jmp
jbe
and
inc
xor
mov
dec
xchg
insl
push
mov
repnz
pop
jns
in
dec
stos
or
out
mov
imul
lret
sub
in
in
pusha
sub
out
xor
in
mov
daa
sbb
mov
cmovne
es
adc
xor
leave
sahf
in
cmp
sub
inc
add
mov
dec
popa
sarb
inc
adc
inc
push
or
cs
xor
pushf
loope
push
lahf
in
dec
add
int
dec
or
lods
cmpsb
sub
pop
repnz
or
lret
xchg
lret
jmp
jmp
jp
gs
and
xchg
inc
clc
rorl
movsb
sub
push
xchg
pop
mov
dec
or
popa
inc
out
dec
inc
ss
inc
popa
cmp
adc
sub
movsl
lea
or
mov
pop
mov
and
xor
xchg
out
sbb
insb
dec
sbb
cltd
and
aad
mov
loop
inc
or
xor
dec
rorb
es
and
ja
jo
jns
mov
repz
gs
dec
push
pop
mov
test
sub
insb
dec
add
mov
jo
mov
cmp
mov
add
ret
mov
out
ja
popf
mov
push
pop
cmp
dec
pop
cmp
cld
aad
or
and
cs
mov
xchg
dec
loope,pt
add
sahf
test
inc
popa
dec
mov
repnz
or
lods
jbe
push
lret
push
movsl
xor
kandnb
mov
sbb
mov
cltd
jle
movsl
and
mov
adc
outsb
inc
addr16
test
or
outsb
jl
jbe
das
pop
je
or
mov
dec
bound
jbe
sub
cmc
test
mov
loop
add
jns
sbb
xorb
adc
sbb
loopne
outsl
test
adc
outsb
cmp
or
xor
shr
or
inc
daa
fs
iret
lret
les
movsb
xchg
mov
stos
push
adc
adc
xor
repnz
sbb
push
lcall
xchg
lods
lock
cmp
nop
out
fbld
sub
test
jge
loope
push
icebp
call
fcmove
sbb
shr
stc
pusha
sbb
pushl
jg
ds
in
arpl
mov
mov
sbb
out
add
in
pushf
out
jle
push
cmpsb
ud2
in
sbb
loopne
sub
testb
inc
mov
cs
sarb
push
mov
jb
mov
lret
sbb
call
pushf
dec
and
mov
shrb
jo
push
cli
adc
mov
adc
idiv
cmp
lock
dec
or
movsb
ficoms
bnd
scas
daa
test
jmp
aam
testl
arpl
imul
es
scas
mov
or
enter
lret
jne
fcompl
cli
mov
adc
pop
dec
movsb
orb
jle
call
inc
into
cli
cmp
pushf
mov
push
cmp
shll
xchg
js
cmp
inc
shll
imull
pop
clc
fdivr
pusha
lods
mov
notl
lock
mov
ret
push
xor
fcomps
and
mov
cltd
in
test
xchg
sub
push
sbb
clc
cmp
adc
insl
fimuls
pop
adc
addl
jmp
sub
popf
aam
adc
or
dec
add
mov
rcrl
push
fildll
push
add
movsl
adcl
or
pop
sbb
aam
fwait
and
xchg
icebp
hlt
dec
and
int3
cwtl
xchg
dec
adc
xlat
xor
inc
shr
stos
in
repnz
dec
cmpsl
mov
push
dec
repz
mov
sarb
xor
arpl
sti
sbbb
hlt
mov
test
jl
fnstsw
jne
nop
aas
adc
sbb
cmp
jg
mov
mov
les
scas
sub
cwtl
jp
adc
jp
lret
mov
jge
imul
loope
dec
jg
in
aam
mov
mov
pop
insl
sbb
mov
ds
cwtl
ret
jg
stos
cli
cltd
adc
sahf
mov
push
lds
loop
mov
les
aas
pop
adc
push
das
jg
ds
fxch
push
pop
shlb
movl
icebp
sbb
data16
jge
sub
aas
mov
out
sub
daa
sub
push
ljmp
pusha
movsb
insb
or
aam
test
rclb
imul
push
push
mov
jae
pop
add
into
adc
rcr
sub
add
out
mov
scas
push
inc
xor
add
inc
shll
push
pushf
outsb
out
push
inc
mov
andl
out
mov
mov
mov
ja
add
js
dec
sbb
fs
xchg
xchg
pop
mov
aam
inc
je
out
jne
fdivp
les
mov
sahf
dec
pop
pop
jae
inc
jbe
dec
scas
pop
bound
mov
data16
and
push
pop
insl
lock
pop
fists
mov
jecxz
push
add
decl
pushf
je
jbe
and
adc
lds
lds
dec
lods
add
popf
fsubl
ds
or
xchg
lret
pop
popf
cmpsl
lret
xor
xchg
mov
pop
inc
loop
fildll
jmp
xor
mov
pshufw
cmpxchg
pop
cmc
cmp
movsl
dec
out
mov
int
dec
xor
sub
jns
pop
cmpsl
adc
aas
or
in
xchg
sarl
movsb
jnp
cmovg
mov
xchg
cmp
jae
iret
pop
xchg
xlat
jne
xchg
xor
or
jo
or
movsl
cmpsl
cli
mov
push
or
lods
in
popa
pushf
into
mov
fs
mov
pop
xor
sub
and
out
out
insb
ffreep
jo
inc
repnz
popf
cli
xor
rcrb
aam
in
dec
xor
gs
pop
imul
js
or
cmp
jecxz
sahf
pop
js
push
adc
xchg
xchg
or
add
loop
out
jae
and
pavgb
add
je
jmp
xor
jne
inc
lcall
lcall
repz
shr
inc
xchg
push
xchg
pop
rcr
push
xlat
xor
ss
lret
xchg
loope
xor
mov
cld
push
xchg
xlat
adc
cmpsl
pop
das
cli
adc
jns
ds
xchg
jmp
cmp
stc
and
push
data16
jae
or
cmp
repz
cmpsl
dec
aad
out
pushf
push
xchg
xchg
sub
push
or
jecxz
dec
add
lock
shll
dec
jo
call
xchg
mov
repnz
idivb
stos
xor
aam
push
push
jl
andb
xchg
mov
or
or
pop
mov
adc
dec
fimuls
jle
mov
cmpsl
and
mov
lahf
popf
mov
popa
adc
adc
iret
aad
into
or
fdivl
or
nop
sub
adc
int
leave
sub
out
push
push
push
int3
call
fwait
mov
push
daa
jmp
adc
jne
inc
popf
xor
addl
pusha
jl
outsb
inc
mov
lods
out
outsb
dec
test
mov
pushl
icebp
mov
fcomps
outsb
ja
shl
sub
xorb
jo
outsl
loopne
in
outsb
jnp
mov
sbb
test
in
pop
fsub
xor
pusha
pop
push
addr16
inc
repnz
out
xchg
sbb
and
sbb
fsubrs
shrl
bswap
adc
lock
sub
add
add
cmpsb
and
rcrb
push
adc
rcrl
daa
rcrb
stc
fldcw
aaa
xor
outsb
in
fsubl
push
stos
mov
daa
pop
mov
sbb
add
or
jl
lods
mov
mov
mov
add
call
repz
ret
fsubrl
imul
dec
sub
popa
dec
push
js
scas
adc
daa
inc
push
pop
inc
and
fstpt
add
push
je
scas
cli
xor
add
imul
sub
rcrl
and
mov
push
out
push
fsubrs
mov
inc
pop
je
in
test
in
xchg
mov
in
sbb
data16
ds
icebp
mov
mov
sbb
xor
out
daa
mov
mov
dec
repz
jne
in
fcompl
testb
mov
mov
inc
push
push
lods
daa
sahf
cltd
mov
mov
jno
or
xor
xchg
dec
or
xor
outsl
mov
cmp
test
testb
inc
rolb
jns
mov
daa
sub
xchg
push
sti
mov
push
inc
cmp
adcl
xchg
and
mov
clc
jl
mov
or
and
fbld
xchg
mov
dec
pop
in
mov
xor
sbb
jp
inc
stos
mov
orl
outsl
xchg
sbb
xor
push
in
jle
rolb
mov
inc
push
fwait
add
mov
xchg
out
fbld
jge
mov
push
dec
jl
jne
jb
clc
cmp
std
push
dec
push
pop
push
push
lcall
push
xchg
mov
leave
in
jo
fnstsw
loopne
in
xlat
add
push
jno
dec
sbb
add
adc
aas
out
dec
inc
add
lret
xorb
iret
xor
sbb
mov
xorb
repz
les
mov
jbe
pop
ljmp
int
imul
fwait
pop
unpckhps
nop
mov
jle
loope
pop
xchg
lret
push
and
add
xor
push
in
mov
inc
dec
fidivrl
push
sbb
or
addr16
fcoml
mov
clc
insl
xor
mov
xchg
fistpl
lret
jb
push
cli
lret
cltd
pushf
loopne
movsb
push
nop
push
loopne
movsl
push
pushf
mov
cli
mov
add
scas
outsl
inc
repz
pop
popf
je
push
cmp
push
mov
sub
lea
cld
aas
popf
mov
xchg
aam
mov
aam
or
aad
ljmp
das
hlt
cmp
inc
adc
and
sub
flds
mov
imul
mov
push
xchg
inc
repnz
rcrl
arpl
das
call
test
mov
std
sbb
das
jl
sub
int
jo
add
push
loopne
int
std
push
jp
lock
dec
mov
dec
dec
add
add
pop
jp
mov
cs
cs
adc
daa
stc
sbb
in
mov
cld
ret
shrw
cmpsb
mov
divb
ret
push
into
mov
jno
dec
mov
loope
pop
inc
lock
pop
dec
cli
int3
cli
int
inc
js
sub
jno
outsb
ret
lds
cli
pop
adc
sub
sub
pop
mov
lcall
lcall
mov
mov
inc
pop
mov
fbld
xor
push
lock
int3
repz
lcallw
push
xchg
jge
sbb
jg
xchg
out
add
xchg
add
xchg
adc
xchg
sub
pushf
pop
shll
jb
mov
in
fcmovbe
mov
shl
ja
jmp
and
addb
and
andl
sub
fimull
hlt
popf
add
mov
add
loop
mov
push
insb
jbe
mov
ret
pop
xchg
addl
subl
dec
xor
dec
adcl
and
mov
dec
adc
push
les
cmp
and
fs
test
push
subl
fndisi(8087
das
or
mov
mov
pop
addb
int3
push
in
xchg
stc
jle
cmp
mov
mov
leave
lds
sub
dec
lods
mov
in
xchg
icebp
hlt
loopne
into
fcmovnbe
push
inc
out
insl
pusha
inc
addr16
pushf
add
sub
xor
inc
mov
push
ret
inc
ficompl
push
lock
cmc
jge
or
fisttpl
cmp
sbb
sub
jg
dec
push
leave
jmp
in
add
dec
leave
test
loopne
add
adc
inc
es
adc
xor
jg
pop
inc
fndisi(8087
loop
xor
cmc
mov
fisubl
mov
dec
push
out
fucomip
or
das
dec
xor
push
outsl
cli
outsl
movsl
icebp
sbb
aaa
in
shll
dec
ljmp
lock
jmp
mov
andb
jle
mov
adc
jnp
repnz
cmp
xor
fists
add
mov
or
add
shl
and
add
dec
jnp
cmc
and
jle
inc
into
jns
or
mov
sbb
icebp
jo
mov
test
cltd
filds
adc
mov
mov
lret
fisttpll
fmulp
jo
aam
cld
push
ljmp
fdivr
out
daa
es
insl
mov
lret
andb
js
test
cmp
sti
xor
sbb
adc
mov
sub
mov
sarl
jmp
xchg
jg
fildll
xor
or
push
push
stc
shll
scas
dec
aam
stc
aaa
cmp
iret
arpl
int
mov
stos
xchg
shrl
mov
sbbb
stos
arpl
and
or
andb
sub
sbbl
mov
cld
fdivs
das
lea
sub
fwait
cmp
lret
mov
dec
lds
add
pop
mov
daa
sarl
jg
andl
outsb
subl
xchg
sub
adc
xchg
and
cmp
cmp
sbb
push
movsl
or
fistpll
and
mov
jae
jo
and
stos
dec
mov
pop
sbb
call
lret
xchg
sbb
ss
pop
xchg
xchg
jg
inc
lods
jmp
sahf
mov
dec
cld
ss
sbb
ja
shld
inc
aad
sub
inc
jno
pop
adcb
sub
movsb
ss
mov
mov
jp
hlt
jg
lds
mov
sub
aam
aad
cmpsb
daa
mov
sub
xlat
add
lds
jnp
jb
mov
loope
test
pop
fdivrs
pop
add
xor
and
int
cmp
mov
cmc
mov
enter
mov
xchg
push
dec
imul
add
sub
cld
inc
mov
jp
andl
inc
jo
test
shl
rorb
les
xchg
or
jae
repnz
mov
bound
call
xchg
add
shr
dec
ret
jb
inc
dec
adc
jae
ror
enter
mov
pop
call
in
aam
iret
lret
mov
mov
ljmp
sub
or
xchg
rep
dec
lock
fcomps
xchg
fnsave
adcl
not
pusha
add
loop
mov
inc
cmpsb
push
adcb
jno
mov
sahf
push
jns
push
pop
inc
test
cwtl
push
sub
pop
sub
lcall
cmp
les
std
pop
xchg
xor
push
int3
into
out
dec
push
data16
js
dec
inc
jo
loope
icebp
lret
jno
pop
lds
repnz
ss
cmp
into
push
and
push
daa
in
jno
out
mov
pop
xchg
push
les
and
mov
or
dec
int
xor
mov
lret
mov
enter
sub
sbb
ss
dec
sbb
pop
mov
push
inc
mov
out
xor
adc
xor
addr16
xchg
adc
cs
dec
nop
pop
dec
lods
shll
mov
add
int3
push
cmp
xor
out
and
add
xor
incb
shll
int3
fcompl
mov
mov
pop
nop
pop
xor
pop
ja
push
push
push
mov
dec
xchg
xchg
lods
mov
insl
or
inc
and
frstor
shrb
sti
or
mov
mov
and
stos
test
sbb
stos
pop
in
nopl
mov
xor
inc
or
iret
gs
leave
pop
sub
popf
movsl
push
aam
mov
mov
dec
js
jmp
out
mov
daa
imul
jge
jns
leave
or
push
sub
lods
dec
jnp
dec
push
and
sub
out
jmp
imul
push
clc
shll
mov
loopne
jge
or
sbb
cltd
scas
les
sahf
mov
xchg
adc
pushf
dec
adc
ret
pusha
cmp
mov
lret
repnz
and
inc
jmp
test
mov
inc
pop
adc
lods
cmp
das
xchg
call
jmp
push
mov
pusha
jnp
mov
pop
leave
xchg
lcall
das
and
arpl
pusha
dec
out
test
ljmp
insb
fistpl
mov
xor
lods
sbb
imul
mov
insl
jp
xlat
adc
lcall
xor
out
outsl
frndint
lret
mov
xor
push
hlt
popf
add
repnz
jae
cmp
sbb
jns
jbe
aam
dec
pushf
sub
inc
ja
mov
xor
add
pop
stc
pushf
imul
stos
mov
cmp
inc
test
mov
adc
mov
ret
mov
out
negl
mov
sub
mov
fcom
mov
push
pop
xchg
mov
adc
loop
std
into
int
inc
imul
lds
jp
inc
and
clc
xorl
out
cmp
out
ja
std
repz
push
cmc
out
daa
fdivl
cmpsl
adc
cmpsb
xor
out
xchg
inc
popa
add
adc
in
call
jno
add
sbb
subl
xchg
pop
imul
fdivr
lea
xchg
sti
mov
andb
push
cld
add
dec
dec
sahf
pushf
aas
push
ret
leave
std
push
dec
and
adc
adc
jb
or
lea
jns
jo
adc
jb
xor
loopne
push
mov
cmp
fucomp
insb
lods
inc
fmull
mov
std
repnz
cld
pop
sub
imul
xchg
xor
loop
ficoml
cmp
in
orl
adc
lods
add
dec
jl
lock
sub
cltd
pop
call
adc
xchg
das
mov
push
jo
stos
cwtl
ret
inc
fnstsw
shrb
jl
aam
jbe
adc
bnd
add
mov
mov
mov
mov
jo
ss
rorb
mov
lds
dec
jge
pop
push
fs
mov
popa
or
les
outsw
scas
cmpsb
xor
jmp
xlat
pop
push
xchg
imul
push
pop
jp
sub
sub
adc
sub
cmp
loop
xchg
cmp
jae
and
rorb
xor
mov
in
fcompl
mov
enter
adc
xchg
xor
sbb
stos
xor
fidivs
adc
sub
and
lock
popa
arpl
aas
arpl
mov
jnp
pop
mov
mov
aam
jb
push
psubd
push
and
mov
and
mov
xchg
or
add
ror
decb
sarb
ljmp
xor
mov
mov
cmp
cmp
sti
push
insl
in
fildll
js
xchg
gs
push
mov
call
ds
aas
imul
pop
lods
and
adc
rol
ja
loop
inc
adc
pop
mov
loop
dec
mov
cmp
mov
cmpb
pop
loopne
sbb
jge
mov
jecxz
test
and
jae
test
cmp
das
rclb
push
xchg
popf
out
jo
dec
in
mov
shr
jle
mov
inc
dec
lods
mov
test
stos
mov
shll
fisubs
add
call
stos
pop
xchg
filds
ret
andl
fldl
insl
stos
or
jbe
cli
test
push
xor
cld
pop
shll
dec
xor
pop
in
ljmp
add
push
sbb
dec
pop
cmp
add
sub
pop
repz
dec
divl
jb
repz
mov
int
mov
pop
scas
movsb
outsl
mov
imul
pop
mov
and
cld
cwtl
cmp
testl
stos
aas
popa
adc
or
fwait
sbb
xchg
mov
test
pop
inc
cmp
js
jg
pusha
xor
addr16
in
sbb
xchg
out
roll
sahf
popf
mov
dec
iret
loopne
pop
sbb
xchg
xor
mov
daa
fsubrp
testl
inc
mov
cli
pushf
sarl
scas
popf
cmp
jle
repz
shlb
stos
mov
mov
out
lea
cmc
js
movsl
jbe
push
call
jae
jb
jmp
pusha
mov
lods
daa
add
inc
xchg
ret
jle
push
jl
lea
or
into
mov
negl
lret
and
das
movsl
int3
add
or
outsb
pop
rorl
sub
dec
divl
aam
sbb
lock
test
xchg
test
mov
cmp
xchg
aad
lds
cmp
into
and
int3
rorl
add
mov
mov
loop
out
cld
js
int3
popf
fwait
lret
pop
enter
add
fwait
hlt
test
mov
xor
xor
insb
push
pusha
insl
add
fdivs
ljmp
popa
and
push
aad
jmp
fucomip
pop
adc
fsubs
xchg
shrb
fisttpll
jae
stos
ficomps
inc
js
adc
movsb
inc
sti
xchg
call
dec
cmp
dec
fstpl
insb
rorl
stc
jle
fcoml
adc
mov
inc
push
gs
addl
cwtl
cmc
xchg
dec
imull
cmp
push
or
loop
xor
fstl
mov
ret
xorl
xchg
mov
shrb
leave
mov
jb
pusha
loopne
pushf
push
jnp
adc
inc
pop
pop
jp
jae
std
lods
lahf
pop
ljmp
mov
je
push
adc
fs
mov
mov
sub
mov
push
out
sub
in
jmp
out
stc
not
insb
gs
lock
call
ds
lret
movb
scas
and
test
pushf
imul
adc
scas
xchg
jecxz
lods
movsl
addl
xor
mov
in
jg
push
test
or
add
jo
aam
jl
dec
cwtl
mov
sti
das
call
pop
jbe
and
pop
jl
and
and
jmp
dec
or
das
icebp
shll
or
inc
lret
call
hlt
mov
ja
jo
leave
push
jmp
mov
enter
inc
push
sahf
pop
mov
std
movsb
adc
inc
ljmp
dec
mov
js
int3
jb
xor
je
sub
jecxz
loope
pop
jge
incb
xor
xchg
je
mov
mov
add
stos
mov
ljmp
xchg
je
mov
ljmp
push
mov
lahf
cli
xchg
sbb
aad
data16
scas
push
add
test
push
mov
sbb
int3
xorb
mov
push
cmc
testl
xchg
sub
push
mov
and
lods
add
fld1
clc
dec
or
test
popf
pop
xchg
insb
adc
mov
icebp
js
jge
jmp
ja
dec
pop
cmpsl
adc
and
jge
mov
call
loop
out
mov
jnp
idivl
pop
outsl
sub
adc
test
inc
inc
or
pop
test
push
and
xchg
inc
ficompl
mov
insl
mov
addr16
cs
jle
push
mov
repz
adc
xchg
les
jbe
dec
jmp
loop
clc
mov
fwait
test
in
cmp
mov
iret
repz
xchg
and
data16
outsl
inc
add
xlat
movsb
adc
gs
and
pop
jae
pop
pop
fwait
push
lret
sarl
and
int
pop
repz
xlat
scas
adc
std
xor
push
xchg
mov
mov
push
add
add
repnz
mov
lock
pop
sub
sub
xor
add
mov
pop
lahf
ss
push
imul
fldl
lods
in
out
test
push
xor
pop
lea
call
push
inc
lock
xchg
sub
popa
pop
test
mov
mov
xchg
mov
outsl
mov
mov
cmp
sti
idivl
cwtl
clc
xchg
jecxz
cmpsb
fcompl
xorb
cmp
test
cmp
js
push
push
rcll
ss
xchg
inc
imul
mov
ss
mov
xor
and
sbb
xor
cmp
pushf
fisubl
pop
jge
add
cmp
test
int3
lcall
das
mov
gs
xchg
xchg
pop
in
popa
xor
rcrl
lds
call
daa
repnz
in
mov
test
jae
push
sbb
inc
sub
movsb
xor
or
lret
mov
pop
pop
mov
ja
pop
sub
mov
pop
push
loopne
adc
daa
sbb
and
cmp
addr16
and
and
xlat
add
add
int3
xchg
cmp
inc
test
js
sahf
add
lret
ret
xlat
add
jo
orb
jmp
add
pop
aas
aas
gs
loope
adc
pop
test
cwtl
mov
loopne,pt
jne
icebp
out
jmp
repnz
andl
pop
pushf
sub
mov
int
dec
push
inc
dec
mov
add
adc
jmp
lods
add
fsubp
add
pop
test
loope
sbb
jae
push
popf
stos
and
je
mov
mov
je
or
enter
dec
hlt
clc
jae
xor
cmp
lret
push
dec
xchg
sbb
push
mov
mov
xchg
push
shrb
xchg
push
or
test
movsl
lea
jl
cmp
stos
push
unpckhps
lret
lods
popa
ljmp
das
addr16
inc
bswap
outsl
addr16
je
ljmp
icebp
mov
adc
in
push
lea
xor
imulb
ret
jns
cmp
sbb
pop
pop
int
mov
push
cltd
subl
cmc
xchg
mov
adc
test
gs
rorb
insl
or
xchg
or
imull
aaa
mov
insl
scas
lock
shrl
out
mov
sbb
lret
pop
cmpsb
mov
jmp
inc
frstor
lret
fisubl
mov
xor
pop
jb
xchg
mov
xchg
xchg
xchg
adc
iret
adc
fdiv
js
rorl
inc
rclb
pop
imul
into
push
push
jns
mov
daa
push
xor
xchg
enter
cs
pop
xchg
addr16
mov
lods
xor
dec
add
inc
pop
xchg
mov
xchg
mov
mov
xchg
xor
lahf
ja
lds
or
out
lret
jg
andb
or
imul
aaa
nop
jmp
pop
jb
outsb
mov
dec
push
popf
fiadds
cmp
or
xchg
lret
inc
movsb
or
jl
rolb
test
repnz
pop
in
inc
fidivl
out
aam
mov
mov
int
push
inc
push
addb
shlb
or
filds
arpl
shlb
scas
cmpsb
bound
push
mov
aad
rclb
pop
mov
mov
out
jg
in
mov
pop
test
cmc
stc
idivl
dec
pop
cld
xchg
xchg
and
xchg
loopne
mov
and
adc
jae
adc
adc
je
sbb
mov
outsl
mov
outsb
lods
pop
out
fcomi
cmpsl
jae
dec
ljmp
mov
mov
mov
sub
pusha
shrl
in
out
jmp
fcoml
sub
ljmp
jl
clc
pop
push
sti
outsb
mov
push
sub
and
mov
cs
ret
mov
aaa
into
sub
stos
sbb
jmp
insl
cmp
hlt
ret
pop
sbbl
lcall
jno
ds
mov
into
outsb
jbe
push
xchg
loop
int
cld
loop
add
add
aam
ja
ja
sub
out
out
out
in
add
cmp
fcomps
sahf
sarl
pop
bound
cmp
addr16
lahf
sub
dec
out
ror
ret
outsl
clc
add
jg
in
mov
xchg
scas
xor
lds
jmp
pushl
xchg
fwait
cs
or
add
sbb
aaa
dec
xorb
dec
push
pop
in
or
inc
jno
leavew
cmp
js
movsb
push
mov
or
insl
pop
jecxz
enter
sahf
mov
jno
xor
repz
fs
je
xchg
cmp
movsb
jle,pt
jl
pop
or
pop
adc
pop
ja
jl
xchg
sarl
das
dec
cmc
cwtl
xor
sbb
mov
mov
scas
fs
test
iret
ss
and
sub
imul
dec
pop
enter
repz
push
inc
jns
movsl
adc
cmc
mov
sbb
hlt
sahf
xchg
out
mov
nop
mov
dec
sub
sub
std
repz
cmpsl
cwtl
enter
fwait
bound
ret
mov
xor
divb
push
lahf
xabort
add
push
inc
insl
jo
sbb
in
mov
lcall
add
sti
add
nop
lods
jnp
lods
xorl
sbb
sarl
push
adc
in
sti
nop
inc
shll
loopne
or
xor
mov
sarl
push
xor
jo
or
daa
add
aad
add
lahf
std
les
sahf
fmuls
icebp
test
inc
add
lahf
ds
xchg
dec
insl
cmp
outsb
fiadds
xchg
or
push
adc
mov
test
rorl
mov
jbe
or
aad
cmc
jnp
lea
sub
test
notl
pop
and
test
popa
addr16
mov
pop
or
mov
adc
popf
ja
jecxz
out
in
jb
xchg
fisubrs
aaa
outsl
pop
xor
xchg
out
in
and
cltd
cmp
push
cli
lods
jbe
xchg
jbe
arpl
test
sub
sbb
addr16
and
loope
das
adc
jnp
dec
insl
pushf
mov
push
inc
popf
inc
mov
roll
fmull
sub
cld
cmp
mov
inc
push
mov
rorb
mov
bound
xchg
hlt
and
pop
mov
sbb
push
jmp
xor
outsb
minps
cli
sub
idiv
pop
ret
leave
ss
movsb
fwait
xor
push
jb
js
xchg
inc
and
pop
dec
nop
mov
adc
jge
mov
setbe
jp
mov
shlb
jno
xor
push
mov
sub
fsubl
add
ja
rcrb
push
aaa
adc
inc
and
and
xchg
mov
mov
arpl
xor
outsw
scas
push
push
xchg
and
xorl
movsb
mov
dec
mov
les
ljmp
dec
xchg
cmp
xlat
jne
loopne
mov
shl
fldt
in
in
jmp
test
push
imul
pop
mov
sbb
and
pusha
inc
rcrb
sahf
sbb
lret
in
xchg
aad
int3
xor
shrl
xor
sti
divb
mov
mov
aad
push
sar
cmp
inc
shlb
icebp
sub
or
jb
in
call
dec
icebp
in
insb
jb
dec
mov
and
mov
xchg
adc
pushf
jl
outsl
cmpl
or
pusha
cmpsl
pop
imul
stc
setg
das
in
mov
inc
mov
add
sub
push
cmp
xor
mov
sbb
and
mov
sbb
fnstsw
sarl
jne
mov
mov
pushf
pop
pop
ror
out
jns
xchg
jp
dec
bnd
push
lret
mulb
aam
pop
fcoml
sub
hlt
xor
mov
pop
or
decb
jo
or
or
push
repnz
adc
aam
cwtl
in
popf
mov
xchg
cmpsb
xor
cmp
and
mov
jmp
cs
inc
inc
mov
inc
ja
mov
xor
push
std
imul
push
pop
out
stos
sub
mov
gs
test
push
or
xchg
iret
pop
icebp
cmp
xchg
dec
cli
outsb
pop
call
mov
jg
sub
shll
mov
stos
sahf
shr
scas
add
rol
xchg
aaa
pop
and
push
loop
inc
repz
xchg
lods
ja
test
movb
out
dec
mov
shrb
sbb
cli
imul
add
xor
xchg
aaa
popf
sbb
mov
xchg
aaa
sbb
cmp
aam
xor
lahf
lea
in
into
inc
sub
inc
mov
and
stc
shrl
sub
stos
fsubs
rep
xor
jg
gs
in
das
ja
mov
dec
mov
out
fidivrl
xchg
push
insb
push
or
mov
std
sbb
cmpsl
dec
cmp
mov
lcall
dec
fldenv
arpl
test
icebp
stos
movsb
enter
and
test
cmc
gs
xchg
add
add
aam
inc
les
and
mov
mov
mov
sbb
leave
or
out
sub
ret
sbbb
xchg
mov
fimuls
fmull
in
test
mov
imul
dec
pop
rcl
xlat
es
inc
int
mov
or
mov
inc
repz
repz
pop
std
add
adc
inc
test
xchg
int
mov
pop
and
pop
cltd
rcr
lahf
test
movl
idivb
dec
xchg
ror
loop
daa
mov
mov
adc
idivb
subl
push
pop
xchg
fstps
pop
inc
dec
or
push
push
and
sub
jbe
xor
xchg
and
leave
pop
cltd
dec
sbb
sbb
bound
dec
sahf
sbb
and
mov
or
and
pop
rcll
sbb
cmp
inc
cmpsb
fmuls
push
add
ret
mov
jle
xchg
cli
pop
fwait
lret
outsl
add
sbb
or
movl
push
fstl
mov
pop
fdivs
sbb
mov
xchg
out
sbb
lcall
fwait
push
or
mov
sub
fcomp
stc
jbe
sti
lcall
xlat
iret
divb
mov
dec
pop
scas
ljmp
shll
mov
pop
cltd
inc
pop
cmp
mov
outsb
movsl
and
push
shll
cld
push
add
jnp
aaa
imul
lcall
fsubrs
push
pop
or
sub
cs
stos
leave
out
jecxz
jbe
out
cmp
rolb
fstl
adc
sbb
inc
dec
out
cld
jp
movsl
mov
faddp
jl
repz
mov
xor
pop
mov
je
add
mov
jbe
xchg
xchg
mov
gs
scas
jg
out
mov
cmpsl
xor
push
and
pop
pop
mov
add
push
out
idivl
lahf
mov
push
outsb
sbbl
and
jnp
pop
gs
jb
pop
sub
cld
ffree
stc
lret
adc
fcoml
loopne
pusha
dec
sub
pop
cmp
mov
adcb
cmp
ljmp
fucom
mov
lret
pop
adc
mov
push
add
cmp
mov
xchg
fwait
xchg
rcrl
or
ja
mov
and
mov
mov
and
push
pop
mov
nop
fstpt
jb
lret
mov
xchg
push
mov
and
lea
call
push
or
mov
and
loop
xchg
cs
pop
sarl
dec
push
cmp
ljmp
sbb
fldcw
sbb
jno
cmp
and
loope
dec
pop
inc
push
xchg
mov
dec
lret
pop
fcom
in
jecxz
add
popf
fs
insl
data16
fiaddl
imul
fmull
addr16
or
mov
adc
clc
or
pop
in
and
mov
ljmp
push
loop,pn
xor
xchg
sub
xor
inc
pop
xor
enter
mov
sub
mov
dec
int3
das
xor
mov
mov
push
popa
iret
in
cmp
sbb
sub
lea
data16
sti
pop
std
xchg
pop
mov
in
push
daa
sbb
adc
or
pop
and
ret
call
cmpsl
adc
imul
aad
popa
or
loope
add
add
adc
adc
inc
cwtl
addl
addr16
ljmp
shll
jae
pushf
sub
inc
jno
jae
js
stc
xorl
xor
mov
inc
mov
nop
push
sarl
jge
xchg
int
jmp
lods
xchg
mov
dec
out
fldt
xor
ljmp
in
sbb
ret
ss
test
mov
pop
add
scas
repnz
lods
xor
repz
inc
sub
clc
jl
jle
test
dec
dec
push
enter
jbe
xchg
dec
loope
roll
call
mov
ds
movsb
cmpb
xor
jae
pop
mov
pop
daa
sub
daa
movsw
sahf
test
stc
mov
jl
jmp
leave
jne
daa
xor
scas
push
lahf
adc
jbe
hlt
pop
negl
in
jmp
adcb
and
nop
les
aaa
mov
mov
jo
lcall
repz
cmp
xor
mov
in
dec
pop
mov
dec
jns
inc
mov
mov
add
repz
pop
pop
mov
in
inc
xchg
jecxz
rcr
in
or
and
xchg
and
adc
sub
xchg
pop
pop
pop
arpl
das
mov
push
mov
xor
aas
xchg
ljmp
lods
pusha
pop
or
pop
and
dec
aam
pop
mov
cmp
xchg
ds
and
test
daa
cltd
flds
inc
stos
add
pusha
pop
enter
mov
imul
or
lret
mov
mov
pop
bound
adc
les
arpl
dec
adc
adc
enter
lret
lea
test
pop
pusha
inc
insl
or
sbb
mov
out
and
shrl
sti
imul
imul
popa
xchg
jmp
test
pop
push
rcr
cmp
shrb
divl
pusha
mov
scas
sahf
or
test
fildll
jno
imul
ret
add
in
fiaddl
sbb
test
lahf
insl
aad
xchg
sub
adc
lods
xchg
mov
dec
jae
dec
mov
jbe
xchg
cs
add
cmp
push
ror
sahf
jecxz
hlt
scas
cld
loopne
jmp
inc
or
or
mov
sti
push
test
jle
inc
andl
or
loope
push
jb
stos
cmp
fnstcw
pusha
mov
or
out
sahf
mov
sbb
cmp
inc
or
cwtl
nop
fsubs
and
ja
mov
das
xchg
jmp
sbb
pusha
cli
push
dec
xchg
mov
cmp
sub
ret
test
je
mov
ljmp
xchg
inc
mov
jbe
cmpsb
gs
in
shl
and
mov
in
inc
fdiv
and
psubsw
stos
and
xor
dec
daa
cmc
adc
xchg
jmp
jns
xchg
xor
lahf
xor
repz
pop
hlt
mov
test
dec
and
rorl
es
lea
push
lea
push
sub
cli
ja
popa
aaa
push
lret
ja
insl
stc
mov
sub
and
dec
adc
mov
movsl
sbb
pop
scas
xchg
repnz
sub
push
aam
mov
pop
push
mov
cwtl
fsts
jmp
imul
cmc
inc
push
mov
mov
insb
test
fsts
xchg
push
sbb
cwtl
dec
mov
push
adc
cmp
pop
fstps
dec
dec
outsb
jle
inc
lret
stos
push
and
fistpll
lret
lods
xchg
in
icebp
dec
sub
out
mov
add
inc
or
and
or
fmull
mov
adc
jp
jno
sbb
pop
jno
rolb
jmp
mov
and
ret
sub
test
in
imul
outsb
cmc
xchg
test
shll
mov
cmp
pop
iret
pusha
out
sub
aaa
rcrb
xlat
pushf
popa
faddl
cmpsb
das
enter
add
ror
mov
add
or
jo
sub
pop
fildl
adc
mov
js,pn
repnz
pop
vpsllq
pop
inc
sarb
push
dec
cmpsb
jg
repnz
mov
out
mov
cmp
dec
pop
pop
cli
aas
je
push
call
loope
sbb
mulb
andl
mov
imul
mov
xlat
push
add
cmp
mov
mov
xor
iret
dec
cmp
push
push
sti
sarb
test
inc
xor
fidivl
inc
sbb
lahf
sbb
cmp
fnstsw
mov
xor
adc
xor
test
pop
mov
xchg
cmpsl
fdivr
add
or
repz
lods
push
mov
sahf
imul
inc
jle
push
insb
cmp
jge
jae
pop
outsl
daa
sub
inc
add
es
adc
push
xor
sbb
ljmp
mov
inc
shl
adc
outsb
popf
repnz
and
pop
shll
test
clc
ret
dec
cmpsb
push
push
add
into
div
mov
stos
add
or
mov
or
call
cltd
imul
dec
lret
dec
jnp
jecxz
cli
pop
mov
xchg
mov
push
fwait
push
dec
scas
jp
push
push
fistl
add
into
jb
push
mov
push
test
pop
inc
sub
or
fisubl
push
mov
fcoms
mov
dec
dec
pusha
lods
mov
fidivl
popf
fistps
mov
mov
imul
je
idivl
int3
mov
cwtl
inc
outsl
stos
push
aam
rcrb
nop
xor
lret
mov
fnstsw
xchg
mov
jb
movsl
div
and
icebp
sbb
jl
fiaddl
xchg
push
lods
ret
fbld
sbbl
push
jb
jecxz
xchg
pushw
cmp
fdivp
pop
lret
test
mov
add
push
lods
jg
and
push
popa
outsl
xchg
gs
fstl
lock
popa
gs
inc
push
jnp
and
enter
add
add
push
jmp
sub
cwtl
push
cmp
jae
stos
imul
pop
mov
cmp
xchg
hlt
pop
sub
mov
es
dec
jg
iret
les
and
aad
inc
sub
push
imul
push
daa
adc
mov
or
repnz
imul
sub
enter
out
or
jae
xor
push
inc
jne
xor
adc
adc
inc
scas
mov
daa
mov
in
mov
repnz
add
pop
cmp
mov
mov
sub
or
test
and
inc
lcall
mov
adc
dec
push
aam
lret
dec
outsb
ljmp
jb
dec
push
das
adc
inc
add
leave
stc
mov
push
leave
lret
xlat
repz
jl
lea
jmp
pop
das
test
lret
mov
cmp
xchg
jne
cli
or
fidivrl
sbb
pop
fs
sub
xchg
pop
xchg
mov
rcll
jo
or
cmp
rcl
popa
push
or
mov
push
lock
xor
js
test
jmp
test
inc
and
call
jns
push
cmp
mov
out
cld
imul
enter
adc
add
and
push
dec
std
mov
ljmp
inc
sbb
std
ljmp
cmpsb
test
ret
popa
push
xor
xchg
xchg
cltd
add
jl
pop
xchg
sbb
mov
pop
cwtl
enter
imul
js
lods
cmp
xor
sub
or
adc
inc
pop
cs
dec
cld
xor
sbb
shrl
fsts
loope
hlt
int3
pop
push
jl
ljmp
out
test
fs
xchg
pop
sub
testb
ja
cmp
shlb
mov
inc
and
dec
call
inc
repz
inc
call
sti
mov
push
mov
jns
stc
in
repnz
popf
nop
insb
xchg
adc
add
popa
jmp
sub
imul
and
add
pop
daa
mov
mov
push
or
fwait
out
inc
lock
out
in
stos
fwait
mov
jo
aad
dec
andl
fst
xor
dec
scas
adc
data16
mov
into
int3
inc
sbb
jnp
ja
and
lret
push
lods
xor
les
test
inc
pop
ljmp
adc
lahf
mov
adc
xchg
shll
leave
sub
push
cmpsl
lret
in
mov
jle
jae
scas
lret
addr16
cmc
int
imul
lods
jl
dec
pushf
out
movsl
cltd
movsl
fstpl
andb
repnz
nop
movq
jl
push
xchg
cmpsl
insb
sti
les
mov
loop
xlat
out
dec
mov
xor
jle
dec
popa
sbbb
sti
addl
push
in
inc
stc
int
jne
movsb
gs
mov
jb
push
pop
and
and
jbe
cmpsb
mov
xor
fildll
or
sub
in
push
xor
aaa
dec
sub
or
xchg
cmc
mov
xor
dec
aad
test
push
pop
cmp
cmp
call
call
sub
xchg
xchg
ss
pop
pop
or
ds
sahf
sub
mov
mov
loope
mov
and
hlt
mov
out
lret
sub
jg
insb
push
pop
xchg
mov
pop
incl
sarl
inc
mov
aas
fcoml
js
xor
cwtl
sbb
xlat
inc
mov
sbb
pop
sub
fisubl
or
movsl
xor
dec
sbb
push
int
push
pop
in
mov
mov
jae
push
and
jbe
dec
aaa
leave
mov
inc
test
mov
imul
fisubrs
ret
pop
call
test
mov
cmpsb
xor
jecxz
cmp
sbb
push
mov
push
adc
movsl
xor
and
sbb
stos
add
test
bound
decb
dec
pushl
mov
test
push
mov
dec
shl
pop
xor
adc
in
sti
rolb
movb
movsl
dec
or
adc
push
ret
movsb
adc
cmp
arpl
or
cmp
ljmp
mov
xor
sbb
mov
xor
int
rcl
adc
dec
pop
outsl
dec
xchg
jbe
cmc
cmc
pop
lahf
xchg
mov
sbb
and
stos
sub
mov
hlt
mov
cmp
mov
insb
mov
inc
jmp
shlb
jg
xor
add
dec
sbb
push
push
xchg
inc
push
jbe
lods
sarl
stos
movsb
aam
pop
mov
inc
jmp
lret
pop
inc
xor
pop
out
test
cs
cwtl
inc
cs
mov
mov
mov
push
push
arpl
loope
pop
mov
push
icebp
out
xchg
cmpsb
movsb
test
push
and
and
inc
ja
and
mov
mov
mov
sar
movsl
cs
push
inc
jno
addb
je,pt
mov
scas
and
andb
test
add
sti
sub
jp
ds
fxch
scas
fmuls
sahf
sbb
jnp
mov
mov
lods
cld
sub
rcll
inc
adc
push
pop
fists
fwait
addb
nop
adc
or
lahf
pop
adc
adc
pop
mov
les
mov
xor
addr16
js
or
cmp
fs
leave
inc
mov
add
sbb
and
test
and
loop
cmp
xchg
pop
fs
or
ror
ret
inc
mov
add
imul
fmul
repnz
pop
adc
cmp
adc
mov
in
and
fwait
aam
test
jno
xchg
out
xchg
push
and
repnz
sbb
in
cmp
das
push
call
ret
cmp
inc
inc
clc
pop
jl
push
pop
negl
xor
xchg
mov
movsb
pop
aad
and
sub
aaa
imul
cmp
cmc
fwait
loopne
mov
call
test
dec
sti
dec
punpckhbw
dec
add
cs
or
cmp
je
mov
and
adc
fisubrl
pop
cmp
jmp
nop
loope
repnz
mov
decb
sub
cltd
cs
dec
sbb
mov
mov
jle
std
sub
sub
fdivrp
sbb
pop
adc
ja
adc
sbb
call
dec
jg
outsb
jp
aaa
jnp
dec
enter
and
pop
test
pop
jge
in
int
sub
nop
sahf
inc
add
movsb
cmp
cmc
fistps
mov
ljmp
dec
push
les
addl
fisubs
and
xorb
add
loopne
inc
fildl
cmp
mov
jmp
repz
dec
sbb
stos
rcrl
push
cld
jae
dec
rorb
les
mov
js
outsl
pop
popf
xor
int
out
cltd
popa
daa
pop
sbb
sbb
imul
sbb
inc
inc
cwtl
push
popl
out
in
fimuls
leave
addb
push
pop
xchg
xor
outsb
or
xor
jecxz
scas
jp
loop
rcr
jl
in
and
adc
loope
pushf
aad
xchg
add
and
aas
ja
xchg
sbb
mov
mov
push
pop
pop
lret
sbb
mov
dec
cmp
lret
jmp
xchg
fisubl
pop
test
incl
inc
adc
fninit
inc
pusha
ret
rcrb
jecxz
jnp
mov
and
testl
shr
lods
mov
arpl
sbb
shrl
push
mov
xor
test
mov
push
push
cmpsl
std
jl
push
data16
outsl
stc
cmp
xlat
inc
jb
ljmp
iret
imulb
pop
sub
dec
stos
push
cld
out
sub
jbe
movsb
mov
dec
and
lds
jecxz
xchg
mov
push
push
xlat
adc
test
call
out
cmpsb
pop
pop
jbe
pop
push
cwtl
xchg
jecxz
mov
outsl
es
es
lock
cmp
daa
jl
lcall
loope
ret
fistl
xchg
fsubrl
test
icebp
cmp
mov
pop
leave
adc
push
and
icebp
imul
out
or
xchg
or
dec
or
xchg
sbb
or
fcomip
sbb
loop
jae
xor
inc
shrl
lret
sbb
add
add
and
or
lahf
pop
lret
add
adc
scas
mov
js
sub
push
jmp
ret
nop
cmp
mov
sahf
lret
scas
fidivrl
clc
icebp
mov
fwait
dec
sbb
adc
scas
test
cltd
pop
ffreep
ret
mov
sahf
adc
sub
cmpl
test
add
cmp
jge
xor
rclb
jb
jecxz
add
cmp
mov
mov
jb
mov
and
dec
sbb
fwait
xchg
cmpsl
repnz
ljmp
inc
es
cmp
insb
scas
les
xor
mov
testb
sub
mov
test
fwait
and
lock
cmp
fdivl
pop
aaa
ljmp
add
es
mov
mov
popa
ret
mov
cs
jbe
addr16
push
dec
push
lea
hlt
sub
pushf
test
sbb
xor
aaa
push
jecxz
xor
cld
adc
test
in
inc
pop
cwtl
mov
cmp
insb
cwtl
stos
and
subb
out
xchg
fwait
push
icebp
sbb
aam
mov
jnp
fcomp
cmp
in
andb
fdiv
shrb
xor
mov
add
sbb
xor
jp
pushf
dec
and
inc
sub
or
pop
adc
inc
sbb
fsubrs
outsb
xor
daa
jp
dec
imul
lock
hlt
mov
sti
mov
push
out
inc
and
mov
mov
add
cmp
pop
xchg
inc
cwtl
test
cmp
xor
fwait
dec
mov
mov
push
das
ljmp
add
into
or
inc
push
add
fcoml
mov
mov
lock
sub
movb
cld
inc
push
icebp
cltd
inc
insb
push
ss
push
mov
xchg
push
aam
xor
imul
inc
pusha
push
inc
popa
sub
das
mov
add
movsl
sahf
aaa
fidivl
mov
ja
push
addl
mov
cs
hlt
negb
mov
dec
nop
addb
mov
push
mov
fadd
mov
bnd
mov
xchg
and
out
jns
std
jecxz
adc
push
xchg
cmp
jo
add
movsl
dec
pop
mov
scas
mov
lret
xchg
jge
in
andb
shrb
mov
aas
cmpsb
push
es
movsb
test
xchg
inc
out
push
bnd
out
std
idivl
loopne
jl
jno
sbb
inc
mov
jl
and
cltd
outsb
xor
andb
pushf
js
aam
cmpl
fildll
cmpsl
ret
push
repnz
movsl
stos
xchg
addl
inc
mov
into
xor
hlt
jnp
pop
or
gs
pop
lcall
jle
dec
cld
rep
xchg
pop
push
push
jns
mov
adc
push
mov
pop
push
repz
xlat
ss
adc
dec
sbb
adcl
jecxz
xor
jae
andl
sbbb
adc
sub
and
sbb
mov
out
ret
leave
outsl
loopne
cmp
pop
inc
jno
movsl
bound
lahf
je
sub
shrl
not
lods
shl
mov
mov
sti
add
jg
rep
add
test
mov
aam
and
js
pop
sti
lock
jge
adc
push
ja
and
lea
ljmp
enter
aaa
xor
into
sub
mov
in
repnz
shrl
loopne
push
adc
dec
nop
jbe
not
cmpsl
xchg
jnp
rolb
les
add
adc
sub
sub
mov
mov
xchg
fists
lcall
sbb
and
out
out
or
xchg
mov
push
sbb
movsb
test
nop
pop
mov
jne
cmp
xor
sahf
clc
rorb
add
and
in
dec
jecxz
test
dec
mov
xor
mov
mov
xor
xor
ds
aam
mov
imul
sti
popf
cld
fldcw
xor
and
iret
dec
dec
les
movsb
jle
es
xor
int3
or
faddl
rolb
scas
mov
stos
cmove
lahf
mov
mov
pop
arpl
jl
divl
sbb
sarb
fmuls
popf
sub
dec
je
xchg
push
ret
insl
rorl
dec
lret
xor
or
js
sub
jnp
xor
orb
sbb
jge
pop
test
add
in
lock
mov
fisttpl
unpckhps
jnp
cs
je
loope
in
add
loopne
mov
rorl
or
mov
mov
popl
clc
pop
xchg
and
push
xchg
or
mov
movsb
xchg
sti
add
jns
pop
pop
sbb
insb
add
adc
inc
fcmovnu
notl
iret
jb
ss
aad
test
mov
mov
xchg
call
dec
lea
orb
out
fldenv
iret
jns
sbbl
inc
sbb
mov
scas
pop
jb
jno
dec
cmp
mov
ljmp
inc
xchg
xchg
pushf
in
sbb
push
mov
fdivs
fldl
sbb
and
mov
ror
push
or
insl
hlt
push
into
push
iret
inc
shl
ljmp
movsb
ret
mov
insl
or
outsl
lds
add
mov
dec
or
xor
push
sub
xchg
xchg
mov
cmp
in
fbstp
pop
inc
lods
mov
ds
xor
enter
sub
stos
ret
pop
inc
adc
sbb
xor
popf
jno
jp
out
xor
push
mov
sub
cmp
mov
mov
mov
daa
stc
sbb
popaw
or
jl
movl
cs
push
mov
dec
jno
mov
js
cmp
mov
sar
jle
stc
mov
out
mov
pop
stc
add
aad
clc
pop
js
dec
adc
jmp
stc
sub
fsubrs
xchg
addr16
push
cltd
ret
mov
mov
or
ret
testl
pop
jnp
cmpsl
adcb
cld
mov
cmc
and
es
jp
push
push
inc
adc
xchg
sub
jl
ret
mov
cmc
jb
lret
adc
pushf
in
iret
addr16
xchg
fstpt
xorb
test
fwait
fs
push
ljmp
inc
scas
fiadds
sub
xor
xchg
jo
lods
stos
xchg
sarl
mov
in
sub
lahf
add
and
inc
adc
xor
add
addb
aad
pop
dec
pop
push
aas
pusha
dec
popf
in
mov
mov
data16
jnp
sub
orl
mov
jbe
sahf
sub
mov
test
cmpsl
jbe
adc
je
daa
pop
sbb
mov
fsubl
inc
sub
out
adc
stos
repnz
lods
sbb
cmpsl
outsb
push
in
popa
lret
shrl
insl
pushf
sbb
ret
jmp
fstpt
sub
mov
xchg
rolb
cmp
fldl
repz
movsb
adc
lea
std
dec
mov
xchg
cmpsb
xor
pop
xlat
xor
call
push
test
cwtl
fldl
jge
jp
dec
add
mov
sbb
dec
and
adcb
outsb
inc
das
push
push
add
inc
js
gs
adc
data16
mull
nop
pop
mov
xchg
in
add
jno
inc
divb
xor
iret
cmp
lret
dec
jl
sbb
cmp
pop
sub
jbe
call
bnd
dec
push
cltd
jmp
and
jne
scas
jo
mov
mov
imul
lret
sbb
into
ficomps
ja
cmpsb
pop
les
adc
push
cmc
jmp
icebp
je
stos
inc
or
test
push
popf
or
clc
pop
xorb
sbb
fidivrs
pop
add
jno
push
inc
andl
inc
xchg
inc
loope
aad
adc
or
mov
xor
inc
aaa
mov
mov
push
pop
xchg
hlt
push
or
xchg
aaa
mov
sub
das
fcmove
rcrl
mov
adc
inc
xchg
mov
lret
fs
stos
cmp
sbb
pop
pop
in
orl
loop
pop
xor
mov
mov
into
test
jmp
test
addr16
mov
sahf
pop
loope
dec
mov
mov
loope
jbe
cmc
mov
cli
repz
mov
stc
or
xchg
int3
push
pusha
push
sub
xchg
data16
or
test
or
and
cmp
push
in
mov
test
sahf
das
pusha
cmpsb
fwait
pop
add
das
dec
es
sarl
mov
add
dec
dec
lret
mov
dec
in
insb
push
mov
out
fcom
mov
shrb
or
out
scas
testl
dec
mov
es
out
xor
movl
ficomps
adc
xchg
mov
fs
frstor
popf
test
add
jp
in
pop
jb
dec
pusha
lods
stc
and
jmp
dec
gs
mov
xor
xchg
jl
push
shl
nop
xchg
sbb
fisttps
lds
inc
test
stos
mov
enter
or
lret
dec
aas
lods
out
push
outsl
adc
insl
inc
pop
or
enter
xchg
pop
inc
push
dec
fcomps
mov
sub
push
daa
test
negl
jge
fisubrs
ret
cltd
movsl
adc
jl
hlt
ds
cmp
adc
and
push
pop
jmp
out
push
cmp
movsb
mov
push
js
addr16
in
mov
cmp
outsl
xor
mov
out
dec
mov
dec
ret
pop
sub
or
dec
jecxz
xor
int3
repz
mov
shr
stos
mov
stos
xchg
dec
data16
xlat
imul
ja
pop
ror
inc
cld
lock
xchg
mov
dec
das
cwtl
or
mov
hlt
in
ss
inc
js
mov
pop
jl
sarb
mov
ret
mov
imul
pop
fimuls
pusha
lds
mov
aaa
mov
cmpsb
fadd
rcrl
push
and
inc
push
sbb
ja
gs
cmp
mov
push
cltd
xchg
and
jge
movsb
ja
enter
rclb
lea
ss
cli
rolb
mov
jbe
fildll
pushf
mov
push
adc
jnp
sbb
cmpsl
dec
push
out
into
sbb
scas
cmp
push
test
inc
pop
orl
lods
sahf
repz
xlat
enter
push
xchg
sub
adcb
les
inc
nop
xor
int
cmp
mov
sbbl
test
out
sbb
lea
pop
xchg
mov
repnz
cld
or
test
mov
push
and
jle
fdivrs
mov
sbb
push
iret
xchg
mov
mov
bound
xchg
xchg
xor
leave
icebp
arpl
mov
sub
cmp
lock
mov
sub
arpl
sub
aaa
divb
popa
stos
add
hlt
sbb
fists
lahf
sub
in
push
adc
add
fsubrp
arpl
mov
in
inc
mov
subb
rcrl
cwtl
jae
andb
and
dec
jns
fwait
cmp
cmp
je
in
dec
push
push
mov
mov
xor
lods
cmpsb
mov
inc
shll
cmp
test
mov
mov
and
sti
jo
add
adc
xchg
sub
jne
push
mov
sahf
sbb
js
aam
sbb
les
mov
xor
pop
stos
ret
xor
cmpb
or
or
fwait
daa
nop
inc
js
push
lods
sbb
mov
enter
test
mov
fsubrp
adc
lcall
dec
xchg
ds
jb
gs
mov
stos
adc
push
sbb
and
mov
out
aaa
shll
jae
mov
dec
xchg
push
pop
pop
pusha
xor
rclb
imul
sbb
xor
shr
test
daa
sahf
dec
icebp
mov
pop
clc
mov
fmul
fstl
test
in
lds
inc
xchg
mov
mov
push
or
or
fldcw
icebp
ficoms
xorl
add
cmpsb
jmp
hlt
xchg
lret
cmpl
mov
std
or
data16
sarl
outsb
dec
adc
lret
mov
fsubs
or
sbb
xor
fiaddl
subl
dec
shl
or
jo
cltd
lret
xchg
jnp
pop
cmp
test
inc
dec
xor
pop
jbe
aas
jle
cltd
lea
cli
lret
icebp
xor
addl
clc
mov
xchg
xchg
pop
test
pop
les
insb
sub
push
aaa
mov
lcall
pop
sbb
sbb
ret
std
mov
xchg
push
rclb
idivl
cmp
orb
or
xchg
mov
shlb
sbb
shrl
dec
mov
ja
jns
xor
inc
jmp
sbb
inc
dec
testl
outsb
push
mov
mov
sub
adc
jno
or
jge
aad
pop
popa
push
push
int3
sub
jbe
test
mov
arpl
cmp
xor
pop
mov
jecxz
cmp
movsl
xchg
imul
push
add
or
ja
jb
ret
dec
mov
push
insl
lret
iret
jecxz
in
mov
xchg
sub
sub
sarb
mov
fcomps
pop
popa
sbb
imulb
lahf
xchg
dec
pcmpgtw
dec
or
imul
repnz
mov
loope
icebp
lret
dec
and
jnp
mov
stc
lgs
mov
sub
mov
in
outsb
pop
and
movl
inc
test
jno
cltd
jmp
jnp
dec
add
push
loope
hlt
xor
fimull
shrb
repz
jbe
sahf
imul
dec
xchg
push
jle
cmp
shlw
xor
dec
std
pop
mov
cld
mov
and
add
push
pop
push
sbb
idivb
mov
mov
jle
fimull
or
pop
mov
lret
imul
mov
lea
mov
js
and
jne
mov
aas
ds
mov
push
jle
fs
cmp
adc
jne
and
xor
cs
adc
inc
repnz
jns
cltd
xor
icebp
inc
ja
test
arpl
jp
dec
xchg
out
mov
jg
mov
mov
shr
nopl
jmp
shlb
push
loopne
add
pushf
repz
push
xor
filds
es
in
mov
add
mov
jne
insl
addr16
fisttpll
cmp
mov
gs
in
std
cltd
adc
mov
cwtl
add
movsl
dec
xchg
jecxz
repnz
iret
push
push
sub
sbb
in
add
leave
jle
xor
xor
or
push
pop
pusha
int3
jo
jle
mov
bound
push
movsb
adc
mov
not
rcrb
push
xor
incl
dec
add
mov
or
mov
popf
in
lods
pusha
lret
mov
rcl
mulb
pop
mov
pop
jb
ret
pop
mov
cmp
push
adc
les
imul
lock
lahf
push
sbb
dec
push
movsb
clc
pop
jbe
shl
sbb
or
das
adc
dec
jae
call
push
mov
ja
scas
xchg
push
sbb
pop
pop
mov
div
pop
pop
mov
adc
sub
jnp
notl
push
mov
pop
lock
sub
aas
and
cmpsb
xchg
rorb
fidivrs
repnz
loopne
ror
test
sub
call
pop
pushf
test
jmp
xor
insb
or
fwait
and
mov
inc
in
jp
push
xchg
jbe
mov
pop
cmp
aad
shrb
sub
cmp
mov
fists
lea
jmp
das
jle
ds
cli
inc
outsl
out
mov
or
ds
ficompl
jmp
mov
push
jae
dec
xor
sahf
dec
ret
mov
inc
inc
adc
lds
out
ja
mov
test
xchg
sti
inc
xchg
xor
lret
movsl
cmp
dec
or
add
fistps
nop
andl
adc
add
jne
cmp
push
and
cmp
mov
push
xor
push
jbe,pt
shlb
adc
movsl
dec
jle
repnz
test
outsb
xor
or
idiv
jo
xor
sbb
movsl
sbb
popa
dec
mov
adc
data16
push
xchg
jg
or
xchg
popf
cmp
pushl
cmp
jp
pop
outsl
movsl
adc
mov
mov
lea
inc
insl
dec
and
rorb
or
sbb
in
cltd
inc
icebp
aam
out
dec
lahf
cmpsb
xchg
pop
mov
mov
cmp
ret
push
mov
mov
cmp
aam
jae
jmp
sbb
fnstcw
fadds
aad
sbb
outsb
cmp
or
mov
mov
ds
xchg
push
fsubrl
shll
lret
je
data16
addr16
xlat
jl
mov
insb
cmpsl
sti
inc
sbb
xchg
jp
xor
ljmp
adcb
and
sarl
addr16
cmc
cmp
sar
ret
out
lret
arpl
mov
fcompl
adc
and
sahf
sbb
mov
xchg
test
ret
negl
ss
sub
lret
push
and
cmpb
jae
fwait
movsl
push
push
or
lret
arpl
outsl
fcomp
stc
mov
mov
sub
cmp
sub
mov
mov
add
adc
jnp
iret
mov
js
pop
int3
mov
and
dec
fsubrs
ret
int
sbb
add
sub
ds
sub
mov
cmp
iret
mov
les
rsqrtps
call
subb
adc
sbb
out
out
out
out
out
out
mov
ja
cmp
lock
rorl
inc
jbe
mov
cli
iret
push
ret
pop
xchg
gs
pop
pop
xchg
gs
rcrb
mov
jge
lock
push
aaa
inc
in
jae
jp
and
fldcw
mov
add
mov
dec
cmp
lahf
add
inc
mov
maxps
push
mov
and
cmp
pop
mov
sbb
test
in
dec
push
sub
pop
add
lahf
dec
jo
ret
rolb
imul
push
push
rol
inc
or
mov
stc
mov
fnstcw
aaa
loop
jnp
sbb
mov
pop
arpl
aad
lahf
mulb
pop
cmp
inc
sub
decl
adc
popa
std
cli
fiaddl
jbe
outsl
lcall
and
xchg
ffreep
shll
mov
push
jo
jno
ja
das
sarb
sbb
or
movsb
das
sub
mov
jnp
pop
pop
aad
cmp
sbbb
rcrl
insl
jns
pop
addb
inc
mov
mov
shlb
xchg
or
stos
in
xor
fisttpl
add
rolb
std
cmp
lret
mov
push
lea
pop
push
sbb
and
mov
jl
cmp
roll
dec
xchg
add
mov
sub
daa
xchg
jl
jle
cmc
xchg
mov
xchg
xor
xor
fldl
cmp
push
sub
mulb
lea
insb
sub
and
idivb
adcl
xchg
mov
rol
cmp
jg
ret
mov
cmc
inc
cmp
test
xor
fmuls
loopne
scas
fadds
ja
pop
push
add
pop
fsts
xchg
repz
pand
dec
fyl2xp1
xor
xchg
mov
loope
test
xchg
aaa
or
mov
outsb
fdivp
mov
mov
loope
int3
test
in
xor
lret
pushf
cwtl
jae
and
cmc
adc
xchg
add
mov
sarl
cwtl
push
cmpsb
jecxz
shll
scas
push
push
sbb
mov
cltd
cmc
push
mov
push
in
sbb
mov
mov
xchg
lock
enter
mov
cs
add
pusha
dec
rorb
cmp
jae
rcll
sbb
dec
add
stos
popf
out
pop
sbbl
mov
mov
xchg
outsl
jno
or
loope
ja
fwait
aas
scas
sub
jge
bound
aam
jge
pop
sarb
into
cmp
addr16
pop
xchg
mov
push
std
pop
in
push
ljmp
imul
push
aaa
repnz
inc
stos
jb
pop
xchg
or
int
adcb
je
inc
bound
pushf
out
lds
cmp
shrb
out
mov
and
push
loopne
lods
xor
jb
push
sub
cmpsl
push
cli
les
mov
push
es
jbe
loope
mov
and
pop
sub
pop
mov
lret
popa
inc
test
mov
jle
lcall
repnz
dec
inc
jae
mov
fdivs
adc
add
xchg
inc
mov
rcr
stos
scas
out
outsb
lret
and
je
pop
or
sbb
insb
add
imul
mov
cmp
fists
sub
or
xor
hlt
inc
xor
in
aas
dec
push
sub
adc
insl
fstpl
xchg
ret
pop
xlat
ds
cmp
out
xor
insl
inc
fchs
imul
fsubs
mov
cmc
lret
xchg
sub
xor
scas
sub
mov
arpl
xchg
std
rclb
sarl
pop
fnsave
dec
adc
pop
dec
clc
daa
fsubr
sysexit
and
xor
jp
adc
inc
or
pop
lods
pusha
xor
mov
ficoms
jecxz
fisubl
and
gs
outsl
and
dec
int3
js
lret
sbb
push
fxtract
xchg
les
gs
shl
dec
or
pop
repz
arpl
add
mov
adc
mov
mov
addr16
xchg
into
push
dec
mov
imul
sub
cmp
or
test
adc
mull
and
out
fidivs
or
jae
ret
in
scas
shrb
push
jnp
shrb
out
in
jge
push
cmp
mov
popf
xor
ss
push
aaa
pop
daa
push
insb
aas
xchg
xchg
adc
sub
rclb
mov
inc
cltd
mov
push
test
mov
sahf
adc
hlt
and
dec
jp
gs
sub
fucomp
sbb
ds
rorb
pop
inc
jl
pop
fisttpl
adc
rcl
mov
or
adc
shrl
xchg
mov
testb
add
int3
insb
pop
push
inc
popa
repnz
cltd
pop
push
bound
and
lods
push
cld
lret
or
imul
jecxz
pop
repz
fsubrl
lret
cld
ljmp
or
and
xchg
adc
lcall
cld
sbb
xor
das
arpl
clc
and
and
fs
addr16
pop
out
and
stc
pop
and
cld
lock
pop
sub
lahf
mov
pop
add
pop
inc
test
lret
loop
stos
loopne
cmp
out
cld
dec
shll
gs
js
scas
repz
ror
sub
push
or
aam
fnstenv
push
add
pusha
and
jae
bound
pop
pop
jb
out
imul
mov
movsl
sub
pop
daa
adc
cmp
mov
push
xchg
sub
or
pop
xor
ja
ja
sti
xchg
xchg
add
or
ds
pop
jns
pusha
inc
cwtl
or
mov
icebp
add
sub
movsb
pushf
jo
out
hlt
in
es
cmc
decl
add
xchg
sbb
cmp
mov
subb
or
mov
sbb
add
inc
jb
mov
jecxz
fcomip
mov
outsl
mov
push
iret
data16
in
or
fadds
cli
or
push
cmpsl
jg
insb
xor
shlb
mov
es
push
sub
shrb
imul
pop
into
repnz
addl
mov
sub
pop
enter
dec
out
ret
lock
inc
or
lahf
fimuls
lret
add
dec
mov
lea
jmp
test
push
push
pop
into
adc
xor
cmpsb
xchg
test
push
xor
subb
fwait
sbb
into
inc
movsb
jp
xchg
out
arpl
add
mov
adc
inc
sbb
cltd
cmp
mov
sub
mov
int
outsb
sahf
fucomp
fs
xchg
and
xor
in
cmc
push
iret
cmpb
js
or
cmp
nop
out
mov
ret
jnp
fnstcw
sub
xchg
cltd
jmp
lahf
dec
hlt
jne
jae
jno
adc
filds
mov
stos
imul
insl
sbb
pop
stos
xchg
mov
jae
or
or
mov
push
call
test
inc
sub
mov
popa
jg
pop
stos
lret
dec
insl
incl
sub
dec
xchg
xchg
loope
push
mov
int
cld
xchg
pop
xchg
mov
sub
in
pop
mov
ds
cmc
out
cwtl
sub
cmc
mov
repnz
jecxz
ret
add
cmp
inc
lcall
xchg
mov
cmpsb
lock
int
dec
call
cli
mov
rorb
hlt
fimuls
add
cmp
js
jl
orl
incl
out
fsts
fimuls
pop
data16
mov
testb
dec
mov
lock
shlb
popa
mov
in
iret
dec
ljmp
sbb
test
inc
scas
dec
push
fmuls
and
xorb
sti
sbb
push
inc
mov
in
aam
push
aas
je
pushl
loope
roll
inc
and
xchg
mov
cmpsl
les
aaa
mov
adc
cmp
roll
mov
cmp
jmp
jne
sti
repz
shll
sbb
inc
dec
fcompl
ja
dec
loop
ss
sbb
jl
dec
inc
loop
cltd
stos
mov
adc
les
mov
sub
mov
inc
js
sbb
test
sub
insl
push
xchg
push
push
inc
or
js
pusha
test
cmc
lcall
xchg
jle
lret
add
mov
testb
jmp
mov
mov
add
and
and
mov
jno
and
push
iret
lds
out
or
addl
ficompl
dec
add
aas
dec
mov
mov
lret
popf
mov
mov
jge
repz
ret
ds
and
js
jne
cmp
push
out
xor
mov
popf
and
ss
xor
hlt
iret
mov
out
adc
jae
out
xchg
gs
imull
test
and
rcrl
push
inc
call
xlat
mov
add
es
xchg
rcl
jo
pop
xchg
std
jmp
lods
jo
bound
mov
sbb
inc
in
xchg
les
into
add
shll
in
xchg
call
daa
enter
lock
or
inc
test
xchg
cli
in
lods
mov
pop
cmpsl
js
sbb
js
jge
mov
cmpsl
out
dec
aam
fisubs
lahf
lahf
adc
cmpb
xchg
ja
fcmovbe
adc
iret
mov
push
into
and
gs
fldt
clc
pushf
xchg
sub
fstpt
xchg
pop
push
repz
xchg
fstpt
push
push
cmp
jb
repnz
cmp
out
sub
fwait
bound
sub
std
jle
cmpsl
rorl
dec
cmp
in
xchg
rorl
mov
arpl
loop
pop
decb
movsl
int3
popf
sub
jg
cmp
aas
push
xchg
inc
xchg
cmp
inc
test
stos
lods
mov
jns
dec
xor
icebp
iret
mov
or
and
outsl
hlt
mov
ja
jbe
imul
adc
xlat
cmpsl
stos
pop
or
xchg
leave
je
aam
or
pop
jb
pop
aas
jge
lea
xor
xchg
out
mov
mov
and
mov
aaa
repnz
fstps
cmpsb
imul
test
lods
gs
or
jg
fiaddl
cmp
sub
dec
ret
lcall
adc
inc
fstps
scas
rcrb
into
cmp
and
push
mov
dec
and
pop
clc
call
sub
and
leave
fs
gs
into
inc
int3
push
add
sbb
arpl
dec
stos
icebp
dec
clc
xchg
xlat
push
paddsb
in
arpl
inc
mov
outsl
ljmp
pop
cmp
icebp
jmp
ljmp
ret
stos
dec
jne
xor
movsl
inc
and
jb
pop
lods
fdivs
ds
cmc
in
mov
push
jno
mov
imul
outsb
insl
mov
jbe
adc
sbb
or
pop
pop
popf
fwait
popf
add
mov
imul
incl
sbb
cmpsl
mov
push
in
sub
mov
pop
movsl
sub
test
fs
sti
inc
jno
fsubr
mov
pop
sbb
add
insl
in
insl
fisubs
push
inc
sti
mov
push
mov
xchg
lret
mov
test
out
mov
or
cmp
xchg
or
push
lods
pop
lds
mov
das
push
mov
bound
add
cmp
push
push
out
push
lcall
aad
push
lods
mov
mov
jg
pushf
mov
cmp
push
arpl
je
push
jno
je
ror
popa
add
push
aaa
mov
pop
into
pop
add
jle
sti
enter
mov
or
es
pop
pop
push
xor
and
push
repz
ret
add
cmpsl
push
inc
icebp
outsl
cmp
cs
jnp
mov
push
in
pop
dec
aaa
ss
sub
mov
pop
int3
jns
mov
movsl
dec
xchg
in
mov
dec
test
imul
outsb
loope
lods
icebp
fmull
sub
ficomps
xchg
je,pn
mov
fwait
std
jmp
out
adc
jnp
insb
fisttpll
aaa
add
mov
mov
sar
mov
addb
mov
xchg
lret
fcomps
push
jae
call
imul
xchg
mov
add
inc
ja
xchg
aad
fcompl
inc
bound
jp
jle
xlat
mov
lock
cld
cmp
stos
imul
mov
lds
mov
add
inc
add
outsl
dec
mov
inc
cmpsb
icebp
scas
cmp
lods
lcall
inc
fadds
jmp
faddl
jne
cmp
or
cmc
mov
inc
imul
daa
sbb
icebp
jb
fcoms
xchg
out
xchg
ja
pop
cmc
lock
jg
adc
fs
push
dec
lret
push
in
cltd
cs
popl
xor
lahf
push
dec
mov
add
pop
ljmp
in
sub
lret
pop
std
iret
push
sbb
addl
pop
or
xchg
sbb
je
loopne
outsb
leave
lods
loope
gs
loope
add
mov
pop
and
mov
outsl
out
cmp
cli
dec
mov
subl
ljmp
clc
pop
and
and
imul
or
pop
test
sub
sub
push
and
dec
sub
adc
inc
test
jmp
push
and
fidivrs
cltd
jb
or
xchg
push
jg
shlb
rclb
incl
mov
and
out
lea
sbbl
shrb
icebp
or
jecxz
xor
fisttps
pop
lret
dec
sub
lret
mov
dec
aas
jp
pop
int
xchg
lods
push
jnp
int3
stos
or
jecxz
fistpl
mov
or
mov
xchg
jmp
add
jo
aaa
sbb
inc
pop
pop
or
xor
cmp
adc
mov
or
push
repz
jge
sbb
dec
add
push
mov
icebp
sub
test
mov
cmp
lea
pusha
xor
push
mov
pop
daa
movsb
push
jle
or
mov
jno
hlt
aas
in
fisttpl
loope
and
aaa
out
hlt
inc
add
or
xchg
inc
push
xor
xchg
xlat
pop
dec
je
mov
jae
lea
test
enter
xchg
cmp
fcoms
data16
rcrb
cs
data16
sub
mov
imul
sbb
stos
or
icebp
loop
js
ja
sti
ss
sbb
mov
mov
daa
mov
adc
jns
loopne
inc
insl
cmpsl
mov
sub
clc
or
mov
mov
fdivrs
pop
xchg
jle
mov
mov
push
rorl
rorl
mov
addb
lea
sahf
cli
mov
or
push
loopne
inc
lock
sarb
mov
or
adc
mov
outsb
jae
mov
mov
fistl
fdivl
or
xchg
out
imul
sti
ret
out
xorb
fxch
sub
jne
es
adc
fsts
das
cmp
inc
gs
inc
mov
imul
iret
mov
sub
lea
mov
pop
imul
pop
jge
push
aas
test
inc
lahf
popa
inc
and
inc
push
lods
mov
enter
mov
jl
cmp
cmp
jge
pop
lret
adc
jo
repz
test
insb
sub
pop
scas
mov
out
and
jno
or
xchg
xor
hlt
popf
mov
lea
orl
stos
movsl
mov
add
aam
adc
or
push
lea
out
xchg
outsl
mov
lock
rcl
push
repnz
or
aas
out
sub
fcomps
mov
or
test
fcoms
sbb
test
test
test
sbb
test
mov
push
xor
or
inc
loop
outsb
and
scas
sbb
xchg
fwait
icebp
cmp
jo
scas
dec
jo
std
adc
xor
std
stos
adc
cmpsb
mov
bound
fcoms
stos
inc
ja
sbb
add
icebp
out
xchg
cmp
and
mov
sub
fildl
cld
idivl
cmp
mov
or
mov
insl
adc
das
xchg
xchg
xchg
cltd
shrl
sbb
adc
add
in
fldl
mov
imul
adc
stos
add
cmp
sahf
mov
xlat
jmp
jo
xchg
repz
ja
mov
jmp
icebp
pop
xchg
jo
xor
roll
pop
xchg
pop
ljmp
test
add
mov
sbb
push
das
sub
jle
addr16
sub
mov
inc
pop
mov
arpl
rep
fbld
jo
add
mov
cmc
ret
mov
rep
add
push
std
dec
pop
imul
inc
ret
mov
sahf
daa
and
mov
pop
push
xor
xchg
jmp
jl
cwtl
js
add
iret
sub
out
fwait
jbe
mov
movsb
xchg
dec
sbbl
bound
xchg
in
push
bt
mov
jne
xchg
mov
shl
popf
and
lret
ror
nop
iret
mov
inc
xor
sbb
mov
inc
cltd
mov
jp
xor
fs
cld
imul
inc
aas
or
into
dec
pop
and
outsb
xchg
shrd
loope
mov
jmp
jne
out
pop
loope
mov
loop
lods
pop
orb
push
sahf
dec
aam
enter
lock
adc
xlat
les
push
push
jnp
push
rolb
mov
jmp
mov
loope
pushf
scas
sub
cld
fadds
mov
lea
data16
jo
pop
jne
sbb
add
adc
xor
shll
dec
xchg
mov
sarb
stc
jno
das
ret
push
jo
sub
pushf
mov
cmpsl
pushf
mov
jne
movl
cld
mov
pushf
jbe
std
push
pop
lret
mov
pop
in
xchg
jnp
shl
seta
lret
dec
cmp
dec
mov
mov
test
ja
sub
lds
xchg
push
ret
outsl
mov
jmp
mov
push
mov
sbb
add
add
push
add
pop
inc
push
andl
cs
and
imul
or
mov
push
push
lret
aas
fildll
icebp
adc
hlt
jae
or
xchg
in
jmp
dec
aam
xorb
jnp
or
sbb
out
mov
push
adc
lcall
mov
and
inc
cwtl
sub
jmp
cmp
and
sbb
aad
jge
mov
push
movsb
push
jns
xchg
cwtl
inc
dec
jp
lahf
cli
xchg
cld
inc
or
jo
loop
ltr
cmc
aas
sbb
cltd
add
outsb
pop
add
mov
mov
or
sti
test
addr16
jl
and
lgs
push
mov
mov
cmp
insb
mov
adc
cmpsb
cmp
cmpsl
js
push
shll
and
pop
lock
insl
mov
sub
cmp
hlt
mull
mov
jae
test
imul
cld
xchg
call
pop
clc
in
es
xlat
fisubrl
mov
daa
and
inc
loop
insl
call
imul
imul
sbb
je
pop
sbb
cmc
push
lcall
pop
mov
and
cli
pop
and
pushf
mov
repnz
sub
and
cwtl
outsl
push
pop
das
lret
outsb
in
aas
stos
add
mov
scas
jmp
in
divb
pop
add
jl
push
sub
sbb
fs
bound
sbb
and
lahf
sbb
aam
negl
aas
sti
xchg
push
jne
rorb
mov
scas
push
dec
push
cs
in
jecxz
decb
jae
scas
jo
inc
mov
imul
xor
andl
rol
xchg
insl
adc
pop
mov
and
jle
cmp
mov
loopne
cmp
das
lret
mov
insl
or
test
xchg
bound
mov
test
sbb
mov
push
aaa
fldcw
jmp
cmp
sub
push
hlt
mov
or
cmp
scas
addr16
sub
pusha
lret
jo
fcmovbe
in
and
sub
pop
push
lods
sbb
push
std
gs
scas
les
cwtl
push
out
movsb
and
sbb
push
inc
lock
jo
dec
mov
or
leave
add
jne
xchg
outsl
cld
jne
js
aaa
insb
lret
rclb
adc
jae
ret
inc
or
pop
mov
in
call
cmp
push
int
cmp
ror
and
pusha
icebp
mov
mov
sarb
cmp
push
adc
leave
xor
push
aad
mov
ds
and
icebp
sbb
sahf
andb
andl
xchg
xchg
mov
adc
bound
rorl
sbb
xor
adc
out
mov
outsl
stos
push
lea
xlat
mov
lods
stos
or
aad
scas
adcb
adc
js
push
test
dec
and
inc
ret
in
or
inc
mov
in
dec
out
jle
jae
outsb
shlb
sub
pushf
int
or
xchg
jl
lods
dec
std
push
mov
setae
daa
popa
and
jmp
push
repz
adc
arpl
xor
xchg
mov
movsl
mov
push
xor
mov
ret
std
mov
decl
and
ret
add
xor
pushf
adc
cltd
adc
mov
es
enter
cmpb
xchg
mov
sbb
or
fsubrl
xchg
ret
je
cwtl
xchg
jmp
aas
sti
cmc
cmp
mov
rcpps
sbb
push
aaa
sub
xchg
dec
gs
in
xchg
xchg
iret
fildl
adc
add
out
repz
push
jl
xlat
cmp
aam
pop
mov
dec
xchg
insl
es
std
repnz
mov
std
pop
aam
pop
arpl
add
fwait
xor
cmp
mov
jo
mov
imul
sbb
mov
push
out
add
mov
mov
cmp
jbe
mov
push
cmpsb
out
lock
sbb
xchg
das
dec
push
lret
pop
scas
js
xchg
xchg
add
clc
imul
cmp
stc
outsl
mov
scas
jmp
mov
sbb
ret
mov
rcrb
div
or
dec
ja
mov
add
mov
rcl
cmp
push
and
mov
jb
pop
push
daa
add
xchg
negb
mov
add
mov
test
loop
sub
cwtl
jl
pop
in
mov
adc
int3
test
shll
jno
cltd
inc
add
mov
xor
sub
sarb
ljmp
xchg
stos
xor
stc
fcoms
sbb
mov
adc
pop
mov
dec
jecxz
enter
pop
dec
cmp
neg
mov
loop
inc
xchg
and
push
repz
shll
fwait
mov
push
int
dec
inc
dec
stos
jge
psubd
dec
mov
fisubs
out
fwait
inc
addr16
and
mov
cltd
xchg
cmp
in
mov
mov
mov
and
pop
aaa
outsb
je
inc
add
mov
sbb
popa
lock
pop
push
adc
pop
push
dec
jns
es
stos
push
push
pop
mov
iret
jmp
int3
rcrl
insb
lcall
xchg
push
adc
out
clc
sbb
pushf
lret
roll
push
mov
mov
mov
ss
add
or
in
cmpsl
cltd
loop
cld
dec
jmp
inc
cltd
mov
xchg
cwtl
fwait
mov
call
jnp
cmpsb
sarl
push
popa
xchg
mov
pushf
cmp
call
mov
adc
push
in
sarb
cli
js
jnp
stc
stos
dec
sbb
insl
dec
sbb
sti
inc
dec
cmp
js
mov
outsb
lea
push
lret
insl
adc
scas
aaa
mov
adc
in
in
jb
out
and
mov
sbb
mov
mov
jae
inc
inc
out
jmp
mov
lock
jns
arpl
jns
inc
mov
popa
mov
push
xchg
jp
out
mov
add
call
mov
cmp
dec
push
xor
sub
cmovs
gs
stc
popf
jnp
push
lock
cmp
mov
dec
in
mov
mov
cmp
rcrl
inc
mov
pop
lods
sub
jnp
xor
cmp
out
out
loope
cli
cmp
jno
mov
into
jo
xor
or
movsb
mov
or
mov
ret
push
push
imul
nop
mov
loope
inc
jg
cmp
or
pop
lods
and
movsl
outsb
add
adc
leave
xlat
inc
mov
mov
test
mov
xor
pop
mov
fucomip
aas
fisttpl
mov
scas
mov
loop
insb
int3
mov
lods
enter
inc
xor
popa
mov
jg
popa
pop
aam
or
and
cmpsl
mov
stos
shrb
mov
sarb
fistl
mov
mov
in
lods
xchg
bound
mov
fabs
or
mov
sub
pop
out
push
sahf
pop
lea
mov
push
jb
rolb
or
test
add
add
je
jae
out
add
aad
arpl
xchg
into
out
pop
xchg
jbe
mov
mov
xor
test
sbb
sbb
das
je
xchg
std
add
bound
mov
pop
jo
out
push
out
hlt
jo
out
push
scas
add
fwait
mov
jmp
out
inc
push
testb
sub
adc
xor
enter
or
fnstcw
aad
hlt
push
cs
daa
es
movsl
add
fsubs
or
rolb
push
into
movsl
cmp
push
or
sarb
lcall
daa
sub
sbb
fidivl
pop
test
stc
out
imul
mov
push
and
mov
pop
out
sarb
divb
out
xlat
add
loope
and
mov
fistpll
inc
add
sbb
or
adc
jo
loope
insl
int3
add
sahf
jns
jns
jle
test
dec
cmc
sub
test
xchg
clc
ret
xchg
xchg
jae
pop
xor
hlt
sub
int
es
arpl
fmulp
cli
mov
inc
mov
push
out
pop
call
fstpl
loop
ffreep
imulb
cmp
les
or
pop
aas
outsl
inc
into
enter
push
lret
gs
insl
add
inc
ret
xchg
push
fsubl
mov
or
lea
clc
cli
push
dec
inc
imul
jmp
test
and
popa
inc
add
jmp
inc
adc
and
out
pop
imul
sbb
mulb
lods
xor
jo
lock
and
push
dec
jo
pop
cmc
xchg
ja
xor
xchg
pop
das
out
ret
mov
push
fstpl
loopne
pop
push
hlt
or
xor
sub
lods
cmp
into
jno
push
sbb
shrb
rcrl
les
imul
cmpb
mov
rcl
or
pushf
orl
xchg
int3
repz
fnsave
outsb
mov
arpl
fcoml
push
mov
lahf
ja
ss
sub
sti
xlat
lods
inc
xchg
rcl
mov
lock
jge
hlt
enter
pop
outsl
outsl
or
ljmp
adc
stos
inc
pop
inc
mov
jno
cmpsb
xchg
int
clc
pusha
rorb
add
mov
das
fisubs
fs
cli
shll
inc
cld
sub
iret
dec
cltd
push
lahf
inc
sub
out
push
fcomps
leave
imul
lret
stos
sbb
push
nop
xorb
jmp
or
aas
pop
out
xchg
ds
sbb
pushf
mov
nop
outsl
mov
mov
inc
outsb
leave
add
cmpsl
sub
je
outsl
jge
fs
loopne
das
jne
add
mov
fstpl
shll
fisttpll
clc
test
mov
jp
rclb
ret
in
lods
xchg
xchg
aam
fcmovb
int
mov
cmpsl
bound
dec
repz
scas
mov
scas
inc
ja,pt
push
fiadds
sbb
mov
inc
scas
out
xor
scas
in
cmp
ss
int3
jne
scas
js
pop
inc
sbb
mov
xor
movzbl
push
sub
fisubs
aam
ds
out
in
add
and
sbb
rorb
mov
jp
repnz
inc
jp
jecxz
sub
sarb
loop
jg
inc
in
sbb
sbb
repz
test
inc
sbb
push
insb
aaa
inc
fs
mov
and
aad
stos
icebp
jp
lods
mov
js
cmp
mov
sbb
and
je
mov
mov
js
inc
ds
lock
xchg
lea
filds
pop
pusha
mov
push
cmp
pop
fcoml
das
xchg
push
mov
push
fs
loop,pn
fdiv
pop
cmp
push
outsb
into
insb
sbb
jb
dec
push
push
int3
jbe
cmp
jo
push
out
sarl
out
pop
inc
jno
mov
inc
loope
mov
push
lahf
mov
sbb
xchg
clc
ds
outsb
gs
mov
movsl
push
cmp
pop
and
addl
push
cltd
jl
xor
or
ss
adc
xchg
jle
fwait
mov
sbb
pop
sbb
sbb
popf
or
in
xchg
repz
xorb
ror
aaa
pop
sbb
fs
xchg
mov
daa
pop
mov
fs
mov
adc
inc
in
cmp
mov
mov
push
or
das
pop
ja
inc
imul
lods
dec
popf
cmc
lahf
clc
push
negl
cmc
lods
pop
out
rclb
lcall
xchg
mov
ja
loop
dec
inc
mov
dec
stos
mov
bound
loopne
cli
dec
outsb
jae
mov
test
faddl
push
pop
outsl
lcall
lods
push
int
ja
inc
add
call
movl
add
lods
xor
pop
jg
loope
jbe
mov
leave
or
lret
mov
mov
cmp
or
gs
push
cmp
xchg
outsb
sub
sub
lods
lds
xor
fdivrp
lods
sbb
out
out
xchg
xchg
subb
adc
sti
jnp
lret
fldenv
pusha
pop
pop
fwait
int3
xor
mov
cltd
push
lds
pop
jl
cmpb
lods
fucomp
pop
mov
and
sub
in
jns
push
fstl
inc
mov
pop
mov
inc
mov
int3
add
movsb
sbb
inc
movsb
addr16
and
out
adc
pop
mov
roll
cwtl
cmp
dec
push
dec
xchg
sbb
jbe
fnstsw
test
call
dec
bound
and
xchg
jae
lock
sub
push
mov
mov
mov
mov
aas
jl
fsubrl
dec
je
in
xor
rcll
jmp
out
mov
sub
movsb
mov
xchg
dec
loope
scas
mov
scas
imul
rcrl
jbe
pop
jecxz
orl
sub
mov
pop
outsl
in
test
jmp
cmpsb
sub
hlt
cmp
dec
orb
pusha
xor
xchg
les
sbb
movsb
in
in
xor
jmp
sbb
sbb
fcmovbe
gs
add
lret
int3
or
xlat
mov
or
inc
push
xor
cli
xchg
cmc
aam
sbb
inc
in
lock
push
mov
gs
xchg
mov
scas
nop
into
arpl
mov
pushf
fimuls
out
mov
les
fcmove
xchg
mov
popa
pusha
or
sbb
xorl
xor
out
test
dec
pop
mov
clc
arpl
or
jb
xor
daa
add
movsl
sub
enter
or
inc
xchg
shlb
mov
mov
add
xchg
mov
adc
jns
roll
pop
sub
push
repz
jns
mov
lret
jl
iret
push
sub
jne
mov
mov
dec
mov
inc
test
sbb
or
sbb
out
cmp
jge
rclb
in
data16
mov
mov
jecxz
cmp
jae
xor
xchg
loop
push
outsl
and
dec
push
dec
test
negl
cmp
sbbl
mov
dec
or
ret
sub
jecxz
dec
scas
lcall
mov
sbb
repz
popa
and
stos
cmp
pop
div
clc
sub
push
or
or
sub
fistpll
cmpw
test
in
bound
dec
arpl
rclb
popf
push
sbb
cmpsb
sbbb
mov
push
imul
insl
mov
dec
enter
es
jmp
jmp
push
ljmp
and
lods
cli
outsl
enter
inc
xrelease
nop
in
in
lret
shrl
fsts
mov
pop
mov
push
inc
test
sub
mov
inc
inc
mov
stos
mov
xchg
inc
cmp
and
mov
dec
pop
movsl
push
cmc
mov
test
or
sbb
sti
aaa
and
pop
cmp
imul
mov
mov
rorl
cmpsl
std
mov
mov
sti
sti
jnp
xchg
or
dec
in
mov
push
and
pop
xchg
adc
std
pop
dec
divl
leave
andl
hlt
rolb
mov
jns
xchg
call
or
lahf
dec
rcll
xchg
aas
pop
mov
dec
push
jne
lahf
pop
adc
jp
push
push
dec
mov
lock
mov
into
mov
xchg
push
ss
nop
fdivl
mov
or
push
xchg
repz
sbb
dec
push
xchg
mov
inc
mov
pop
fcmovnu
ss
jl
loopne
into
lea
push
xor
sbb
xchg
jo
test
jo
jb
ljmp
cmp
fimuls
jmp
shlb
cmpsb
ss
fstps
sahf
sbb
out
and
mov
lcall
add
imul
and
xchg
sub
sbb
jg
pop
sbb
cli
sbb
xchg
frstor
int3
roll
jle
test
test
and
in
jp
cwtl
jle
outsb
das
bound
sub
add
dec
pop
fdivrp
imul
inc
shll
xchg
cmp
cmpsb
or
sbb
push
xchg
int
mov
jmp
xchg
adc
add
into
loope
addr16
cs
inc
fdivrs
enter
mov
mov
dec
cmpsl
or
mov
inc
add
pop
or
push
fidivl
outsl
sub
sbb
outsb
or
mov
push
mov
pminub
push
sbb
fisubrs
movsb
fisttps
adc
lods
adc
push
cmc
mov
ja
in
pusha
jnp
sbb
aam
andb
dec
inc
bound
pop
pop
push
insl
cli
and
sub
outsl
cs
and
orl
mov
pop
les
push
insb
pop
push
xchg
imul
std
jo
cmp
int
test
or
aam
pop
ret
call
inc
popf
mov
cs
mov
mov
inc
movsl
jge
loop
cmp
hlt
outsl
adc
loop
jle
insl
ljmp
push
push
and
orl
xchg
hlt
xchg
call
push
xor
bound
cmp
imul
cmp
out
dec
sub
pop
in
push
shl
inc
mov
lahf
lret
in
in
fstl
jmp
andb
adc
stc
xchg
push
pop
shll
mov
adc
add
or
popf
ror
jae
or
xchg
repnz
mov
lcall
dec
inc
aam
pop
mov
cli
scas
aad
inc
xchg
cltd
xor
insl
movsb
mov
cmpsl
cs
cs
in
leave
mov
out
popa
je
lods
and
fistl
outsb
cmc
and
mov
xchg
inc
push
mov
enter
and
jne
push
xchg
mov
inc
inc
adc
popf
dec
push
dec
hlt
inc
enter
add
push
sbb
idiv
pop
clc
mov
pusha
push
outsb
adc
daa
xchg
mov
mov
pop
sub
mov
mov
fcoms
mov
roll
sub
pushf
leave
push
push
xor
out
fnsave
add
mov
pusha
adc
and
daa
mov
push
sbb
mov
orl
out
xlat
loop
scas
mov
enter
test
inc
js
sahf
or
stos
testb
pop
nop
adc
sbb
adcb
pop
ficompl
std
fcmovnb
or
in
add
pop
mov
sub
addr16
adc
push
xor
popf
adc
nop
push
inc
jbe
out
mov
stos
mov
mov
xchg
jb
or
leave
mov
shll
xor
into
insl
pop
and
or
push
add
in
jp
mov
in
pop
bnd
lahf
out
sub
adc
xchg
mov
int3
cmp
cltd
cld
hlt
push
mov
cmp
pop
ret
in
push
sub
xchg
int
cmp
sahf
inc
xchg
push
lds
mov
adc
ljmp
cmpsb
push
jb
adc
mov
das
test
scas
xor
das
xor
push
pop
dec
scas
mov
cltd
lcall
cmp
bnd
loope
sbb
jne
clc
loopne
add
lds
ret
dec
fisttpll
dec
xchg
or
lret
jb
add
mov
jne
aad
les
imul
stc
dec
into
fmuls
adc
repz
mov
cmp
loop
xchg
inc
mov
inc
or
ds
mov
cli
bound
enter
and
mov
cmp
insl
std
xchg
push
out
or
xor
inc
sub
jle
xchg
add
aad
fcoml
fidivrs
xchg
fistpll
ds
cmp
insl
jge
out
jbe
add
mov
mov
add
les
lea
out
pop
js
sbb
push
xchg
enter
test
jl
cmp
or
not
push
jne
add
adc
push
hlt
arpl
fidivs
aaa
repnz
sub
rclb
fwait
js
push
or
sub
iret
push
lds
pop
popf
pop
rcrb
flds
mov
pop
aam
pop
or
mov
in
adc
pop
daa
cltd
jmp
cs
repz
mov
jnp
outsl
sti
jmp
sub
leave
add
mov
cmp
sbb
movhps
xchg
push
xchg
iret
and
stos
fcoms
push
mov
jecxz
push
cs
and
inc
jbe
mov
les
into
jno
cli
inc
push
andb
jle
jl,pt
mov
insl
add
ret
and
jge
cmpsb
xor
push
test
movl
movsb
stos
mov
mov
mov
add
xchg
or
push
lcall
imul
lds
stc
leave
shrb
cmp
and
push
mov
mov
sbb
adc
aam
adc
icebp
jne
push
bound
dec
adc
incb
fs
repz
in
push
pop
and
cmp
push
test
cli
sahf
das
and
jl
push
jo
pop
dec
xor
mov
adc
cmp
cmp
pop
or
in
data16
arpl
xor
addb
cmp
sub
popf
mov
fadds
in
data16
in
scas
mov
icebp
add
push
mov
inc
test
jecxz
sub
scas
push
stos
xchg
imul
push
loope
out
jmp
pop
lods
rolb
cmp
add
stos
and
adc
popf
push
and
mov
xchg
adc
subb
push
pop
xchg
outsl
mov
cmp
into
jp
hlt
mov
mov
test
cwtl
scas
and
xorb
push
push
out
add
cmc
cmp
stos
andl
jns
cmpsl
movsb
ljmp
pop
xor
adc
outsb
xor
push
mov
and
into
inc
cmp
mov
xor
jge
cmp
push
repnz
adc
mov
inc
xor
inc
mov
or
cmp
ficomps
lods
stos
addl
fcomps
or
ret
xorl
ss
xchg
push
leave
mov
pop
sahf
out
add
jge
hlt
ljmp
push
adc
mov
nop
and
psrld
sub
ss
dec
sbb
sub
fistps
data16
sub
cmp
mov
xchg
pop
lods
adc
je
pushf
ljmp
add
dec
cltd
outsl
mov
loop
and
mov
shl
mov
and
movsl
mov
scas
aam
jbe
pop
loop
cli
shrb
mov
aaa
movsl
xchg
sbb
lret
mull
push
mov
sub
repz
repz
mov
je
lock
xor
fsubs
or
rep
sbbb
lcall
pop
test
jns
xchg
and
incb
add
push
push
test
inc
mov
out
out
inc
dec
mov
out
out
out
jmp
push
out
adc
cmpl
pop
lret
cmp
mov
mov
insl
xchg
leave
inc
rcll
pop
loope
pop
pop
sub
in
test
rorl
paddb
cmp
stc
cltd
mov
add
sti
mov
jmp
push
push
daa
push
std
jns
cmc
add
scas
cmp
and
popa
stc
mov
aam
mov
xchg
stos
cmp
jb
ljmp
loope
les
cmp
sbb
dec
fsubl
movsb
loope
dec
ja
icebp
fmul
pop
or
adc
inc
jne
ljmp
mov
jg
and
mov
pop
lds
hlt
sarl
shrb
mov
mov
rcrl
nop
adc
and
jbe
mov
dec
cmp
push
add
leave
sub
mov
adc
aaa
xchg
fcoml
int3
or
dec
int
mov
aas
push
push
rcl
inc
test
or
int3
lods
or
aad
hlt
jge
inc
movsb
jl
idivl
push
into
push
adc
popf
outsl
pop
fucomip
subb
jg
insl
mov
push
mov
inc
in
push
mov
cmp
push
imul
cmpsb
movsb
lret
ret
or
and
mov
pop
mov
int
rorl
pop
pop
xor
adc
dec
popf
fiaddl
movsl
insl
mov
xchg
outsl
sub
and
add
pop
stc
loope
in
jecxz
push
push
sub
lret
cld
lods
lods
and
inc
shrb
push
push
xor
push
xlat
adc
loopne
lds
add
mov
jb
data16
lods
hlt
ds
push
add
or
cwtl
mull
xor
push
mov
roll
mov
cmp
lahf
mov
imul
leave
mov
xor
iret
dec
leave
pop
js
or
clc
aas
mov
ljmp
and
xlat
jle
mov
cmp
and
imul
movsl
mov
lret
push
movsl
xchg
and
and
add
lock
inc
ljmp
mov
lret
lcall
inc
adc
and
ficoms
stos
int3
cmp
mov
add
cmpsb
pushl
into
movb
lock
cmp
aad
inc
in
push
adc
je
mov
dec
pop
rol
jge
mov
insb
fsubrs
out
inc
int
insb
loope
push
out
repnz
dec
sbb
mov
testl
jbe
lahf
ret
push
lods
mov
xchg
xchg
adc
xor
or
mov
fwait
lret
jne
outsb
pop
mov
je
jbe
insb
test
adc
xchg
rcll
inc
or
ret
and
add
lock
pop
jnp
lret
out
inc
add
repz
fmulp
and
or
clc
pop
shrl
popa
jnp
pushf
jns
jo
popf
std
fsubrl
mov
addr16
inc
pop
dec
xor
cs
mov
adc
test
dec
ret
dec
stc
xor
adc
or
in
cmp
gs
fsubrs
adc
call
into
out
jo
sbb
in
or
mov
inc
test
les
push
aaa
jns
je
push
pop
fucomp
scas
push
sarl
inc
sub
popf
shll
mov
mov
push
pop
pop
fs
fwait
jne
popa
out
fildll
jbe
aam
xor
aas
push
cmpsb
rcrb
adc
cmp
lods
jle
xorl
mov
sahf
add
das
outsb
sub
sti
roll
push
pushf
insb
dec
loope
dec
lahf
add
mov
sub
mov
scas
outsb
sti
add
nop
xor
nop
fbld
cmp
or
xchg
push
fwait
mov
add
or
imul
movb
test
cli
xchg
xor
jae
fnsetpm(287
insb
fistpll
push
imulb
xlat
into
sbb
or
std
bound
push
mov
xor
adcl
dec
dec
push
jl
fcoml
mov
push
out
bound
adc
inc
adc
inc
frstor
rcl
rol
mov
jne
movsl
push
mov
lds
out
loopne
add
pop
or
imul
in
test
sub
pop
sub
jae
cld
movsl
hlt
and
push
push
mov
or
and
and
shll
notl
push
add
push
jle
mov
stos
add
push
icebp
pop
scas
insl
imul
mov
jb
mov
movsb
mov
pop
sbb
xchg
and
xchg
or
cwtl
jle
sub
jmp
lret
std
arpl
fisttps
dec
pop
cmp
adc
outsb
test
or
in
xchg
rcr
adc
int3
btc
dec
scas
mov
mov
mov
sbb
bound
sti
adc
push
and
jle
out
sbb
stos
xchg
jge
stc
xor
push
stos
fdivs
sub
lock
sub
pushf
mov
enter
push
and
and
push
pop
sbb
xchg
ja
add
lcall
imul
fldl
or
mov
dec
test
testl
sbbl
pop
jge
mov
repz
cmpsb
mov
push
cwtl
xlat
das
and
jle
mov
cli
dec
inc
inc
aas
cwtl
mov
jl
adc
in
inc
test
pusha
xchg
and
jl
in
or
data16
lds
xchg
in
aad
inc
push
push
jl
sbb
sub
adc
adc
call
lock
inc
cmpsl
xchg
mov
push
xchg
jbe
inc
js
das
cmp
outsb
cld
dec
jle
xor
xchg
mov
mov
fnstenv
cld
push
inc
xchg
stc
ret
cmp
outsb
js
stos
pop
mov
in
and
sub
hlt
out
fsubs
sbb
and
je
xor
addr16
sbb
xchg
orl
mov
int
push
insl
add
add
sbbb
cmpsl
and
mov
rcll
pushf
inc
sub
fisttps
push
xchg
sub
push
inc
xor
out
mov
xor
and
into
daa
mov
jle
add
or
mov
jmp
mov
cmp
push
cltd
aam
adc
arpl
andl
inc
xor
imul
jae
inc
inc
rorl
gs
jp
arpl
sub
in
scas
jno
shll
ja
cmp
xor
fisubrl
ficomps
add
sbb
and
repnz
sub
les
add
adc
inc
mov
mov
cmp
xchg
mov
lock
xor
or
adc
jecxz
dec
or
jmp
push
leave
sbb
push
fs
stc
cwtl
loopne
push
mov
sub
adc
je
jne
xchg
sbb
or
sub
scas
push
mov
inc
sbb
les
das
cmpsl
or
cltd
xor
adcb
clc
push
add
xchg
sbb
xor
jnp
inc
mov
sar
mov
rclb
pop
les
dec
nop
sar
rclb
pop
jnp
out
sbb
push
cmp
pop
ss
sbb
sbb
test
xchg
inc
pop
leave
jge
adc
cmpsl
push
mov
jp
adc
jp
inc
lock
cmp
test
or
sbb
cld
xchg
inc
icebp
or
fisttpll
mov
and
inc
pop
dec
xchg
cmc
mov
dec
test
in
mov
cs
test
bound
fwait
mov
xor
xchg
pop
dec
mov
insb
cmpb
pop
mov
or
jg
xor
popf
cwtl
pop
lea
xchg
stos
mov
cld
xchg
lock
rcll
pop
fxch
sbb
jae
mov
sub
add
call
push
clc
iret
pop
add
jg
rep
jno
stos
adc
xchg
jg
lcall
cwtl
and
cwtl
push
push
ljmp
add
inc
stc
adc
push
mov
adc
shll
xor
mov
test
js
in
adc
imul
movsb
xchg
loopne
inc
pop
pop
dec
in
add
push
adc
xchg
sub
ds
sbb
mov
lea
leave
push
or
iret
js,pn
ljmp
in
inc
xor
sbb
push
mov
enter
dec
lret
mov
cltd
fists
ljmp
adc
sbb
nop
lds
push
dec
cmpsb
mov
lds
in
push
loopne
sub
hlt
popf
daa
jge
daa
xlat
shlb
les
xchg
adc
fwait
int3
lahf
pop
loop
dec
xorl
mov
mov
xchg
xchg
or
imul
xchg
in
jmp
jbe
adc
out
dec
xlat
repz
mov
out
mov
cmp
mov
dec
div
dec
inc
jnp
dec
aas
lahf
cs
push
loopne
mov
pop
xchg
outsl
mov
cltd
xchg
push
mov
test
adc
popf
sub
add
subb
mov
icebp
das
ret
cmpl
xchg
movsb
mov
fs
dec
std
test
popa
push
pop
or
pop
sbb
inc
es
push
nop
mov
inc
lods
cmpsl
stc
js
and
lock
daa
popf
mov
lahf
ds
fwait
jg
jno
cli
in
inc
adc
es
shll
jg
or
lds
push
addps
push
sbb
mov
jb
test
leave
lret
and
push
xor
mov
fcoms
push
stos
xchg
sbb
jnp
cmp
cmp
inc
sub
mov
pop
popa
mov
push
ljmp
inc
push
andb
inc
cmp
sub
daa
out
enter
ror
lea
loop
fbld
sarl
in
stos
cmp
pop
sub
bound
int
mov
xchg
in
push
and
aaa
adc
insb
mov
imul
arpl
stos
add
int
sti
fsub
repnz
jge
inc
sbb
or
sbb
outsb
lock
and
gs
and
ljmp
cmp
adc
xchg
inc
ljmp
int
outsl
loop
cmp
push
je
dec
loope
loop
test
loope
es
aaa
fidivrl
xorb
loop
jecxz
stos
pop
ret
sbb
or
arpl
fcomi
xchg
mov
xchg
orb
push
int
ja
sbb
dec
stc
hlt
test
je
loopne
mov
outsl
push
fwait
lods
std
push
je
and
pusha
xchg
jle
shr
ja
lods
jge
add
fistps
or
add
xchg
mov
mov
ds
mov
leave
das
stos
push
fists
xor
sbb
xor
jp
inc
stos
xchg
cmp
rcll
inc
xlat
jnp
mov
pop
mov
or
sti
jge
mov
orb
adc
or
mov
adc
test
imul
xchg
mov
arpl
dec
rcll
cli
arpl
and
ret
lods
add
mov
add
dec
sbb
add
mov
out
mov
lea
stc
jno
negl
out
lds
dec
cmp
mov
push
gs
out
and
lret
js
mov
sbb
jno
ret
aam
sub
inc
leave
jge
cltd
push
dec
ja
mov
leave
mov
xor
dec
cltd
add
pop
nop
or
xchg
or
clc
fcompl
fwait
sbb
or
inc
lret
pop
std
pop
bound
xor
mov
jb
mov
xor
ja
adc
scas
sahf
cwtl
cwtl
jp
xor
shr
movb
aam
ljmp
or
cmpsb
cmp
data16
xchg
sbb
and
andl
pop
orl
inc
fsubl
bound
sarb
jo
cmp
cmp
add
test
testb
push
mov
ja
mov
outsb
xchg
mov
push
inc
lea
xor
xor
movsb
andb
mov
mov
and
sbb
inc
push
mov
jne
fisubl
mov
xchg
lds
mov
aad
into
inc
addb
aad
cld
mov
or
inc
jl
jne
inc
xchg
add
repz
mov
daa
sti
mov
mov
inc
inc
mov
out
mov
hlt
xchg
jle
cmp
xchg
out
jge
fcomp
hlt
push
push
pop
xchg
lahf
icebp
pop
or
xchg
xchg
test
cmp
xor
cltd
and
mov
cs
xchg
dec
xorl
outsb
mov
add
hlt
dec
inc
pop
adc
xchg
push
imul
push
vmovshdup
jo
aaa
mov
xchg
and
inc
mov
mov
fistpll
jae
xlat
rol
dec
mov
out
mov
data16
in
cli
addr16
jbe
sbb
mov
adc
ret
hlt
push
pop
xor
xor
or
scas
jae
jno
in
out
fmull
add
mov
dec
arpl
enter
sbb
lret
cmp
jl
mul
mov
in
call
test
and
mov
and
das
daa
cmp
scas
inc
ljmp
arpl
jecxz
sbb
fisttpll
mov
xlat
fadds
subb
cs
or
lea
enter
hlt
in
inc
sub
aaa
sahf
sbb
scas
fisttpl
mov
bound
cmc
cmc
aaa
push
ljmp
mov
xor
insl
pop
xchg
or
xchg
cmp
pushf
push
fists
lock
xor
inc
insb
in
scas
mov
sbb
push
add
sub
push
or
hlt
or
pop
mov
fwait
js
cmp
mov
sbb
jle
mov
pushf
ljmp
sbb
lret
push
lahf
mov
movsb
cld
mov
fiaddl
in
mov
sti
add
push
ljmp
bound
mov
dec
jbe
insl
sbb
mov
push
ss
pop
movsl
fcomps
xchg
inc
push
rcrl
xchg
cmp
js
pop
sbb
xor
gs
mov
js
sbb
jno,pn
fidivs
inc
add
imul
loopne
addr16
fsubrs
test
add
and
xchg
mov
xchg
sbb
repnz
jle
inc
push
dec
mov
mov
xor
stos
gs
jg
cld
imul
sbb
cmpsb
cmc
jge
adc
jb
pop
sar
push
cltd
pushf
pushf
test
pop
psrld
and
call
inc
mov
in
pop
fists
push
xlat
ja
loope
nop
sbb
jecxz
cmp
pop
mov
mov
pop
adc
popl
jg
xchg
in
and
rclb
jp
dec
loopne
pop
mov
loopne
inc
pop
ds
inc
ds
ja
mov
cmp
cmpsb
daa
fldcw
pop
cmp
push
sbb
and
jge
loop
jne
fs
std
xchg
mov
xchg
push
cmpps
loope
lods
add
push
push
xor
sbb
mov
mov
mov
xor
call
push
add
ss
jb
xchg
es
push
jnp
push
mov
cmp
stos
stos
adc
rorb
jge
or
xor
addr16
lahf
mov
sbb
std
pop
loop
pop
lds
fidivs
adcl
mov
lcall
xor
in
std
lods
jl
mov
and
sub
js
push
push
and
adc
sub
and
pop
cli
mov
mov
or
mov
pop
sub
repz
mov
sar
push
mov
xchg
jns
test
in
push
xor
add
aaa
and
jnp
push
mov
xor
lock
push
in
push
out
jbe
cmp
mov
outsb
or
loopne
push
mov
fsubs
clc
movsb
scas
lret
cmpsb
ret
movsl
sub
dec
mov
and
adcb
sub
xchg
fwait
scas
jbe
cmpsl
push
mov
stc
clc
push
fldl
sbb
int3
in
dec
or
sti
sbb
je
pushf
inc
aam
or
mull
push
cld
icebp
push
mov
adc
es
mov
nop
repz
pusha
loope
lea
xlat
aas
add
dec
imul
mov
std
jge
sub
xchg
lods
lahf
mov
das
sbbb
ret
movb
arpl
pop
push
test
mov
mov
bswap
ljmp
jns
sub
call
icebp
or
les
add
jle
mov
mov
out
cmpl
mov
xlat
aam
icebp
sti
repz
pop
dec
jbe
push
sbb
pop
sbb
and
out
cwtl
outsl
inc
cmpsb
sub
pop
test
cmp
mov
and
je
clc
mov
xchg
pop
add
xor
imul
jns
and
inc
xor
cmp
aam
lock
mov
mov
mov
std
sub
mov
adc
inc
lahf
sbb
xor
adc
add
sub
adc
lods
xchg
adc
aam
jmp
rorl
mov
dec
mov
fdivs
dec
inc
xor
pop
addr16
mov
pop
jns
sahf
xchg
dec
sbb
icebp
add
or
and
mov
lods
mov
jbe
rclb
add
or
addr16
and
push
call
imul
mov
aad
popf
decb
add
movsb
cltd
jae
fmull
xor
nop
pop
mov
stc
ror
je
mov
pusha
ret
push
jl
mov
push
lods
loope
xchg
ficompl
xor
adcl
leave
sbb
test
out
orb
loop
jno
repnz
mov
iret
cmp
xor
das
xor
push
mov
in
js
xchg
in
sbbl
scas
gs
pushf
inc
inc
ret
add
sub
fwait
cli
test
hlt
test
into
mov
loope
std
xchg
adcb
mov
jno
outsl
adc
xchg
hlt
xor
dec
push
mov
out
dec
mov
push
inc
pop
xchg
add
lods
mov
repnz
mov
bound
stos
ss
nop
xchg
push
lods
mov
insb
push
cmc
in
leave
fmuls
lods
mov
xchg
pop
out
cs
or
cmpb
jno
sti
cmp
or
sub
dec
and
dec
adc
push
add
mov
sub
or
fistpl
cwtl
in
pop
rcrb
fsts
mov
xchg
pop
push
pop
sti
adc
test
fistps
mov
push
xor
xchg
pop
pop
inc
jns
jo
xchg
mov
pop
rol
or
push
pop
in
lock
iret
xlat
sub
mov
pusha
test
pop
mov
aad
les
fwait
stos
imul
jecxz
lock
repz
cmc
push
push
jbe
aad
inc
sub
pusha
jne
jmp
mov
in
movsb
and
sub
leave
or
sarl
rolb
adc
dec
ljmp
inc
daa
das
inc
sbb
cmp
test
xchg
mov
jne
xchg
pushf
nop
cmpsl
insb
les
loope
inc
addr16
add
out
outsb
vpmadcsswd
inc
leave
and
add
push
ja
jp,pt
or
adc
arpl
sarb
jo
cli
insl
dec
add
mov
push
or
cmp
fwait
pop
ret
ljmp
sti
and
sub
jbe
or
out
sbb
addr16
xchg
das
push
pushf
fsts
sbb
add
push
daa
add
jno
pop
idivb
sub
mov
fmuls
jl
push
test
jno
outsl
and
fsts
cmp
push
xchg
jl
ret
stos
push
xor
add
shrb
mov
imul
inc
popf
pop
pop
es
cmp
notl
mul
leave
lods
and
cwtl
add
adc
lret
cmpsb
mov
xorb
arpl
jo
je
mov
inc
jns
add
inc
sbb
add
pusha
out
fnstenv
dec
adc
lea
jg
fcoml
movsb
pop
popf
les
mov
jmp
stos
cmp
insb
ljmp
push
inc
cmp
pop
cmp
popa
xor
imul
add
loop
dec
jmp
insl
fldcw
mov
push
data16
sahf
pop
dec
fsubrs
int
sub
cmp
stos
mov
jecxz
and
in
stc
push
adc
loope
pusha
std
or
mov
in
je
sbb
lcall
je
sahf
jnp
xor
loop
adc
ret
push
jmp
add
vmwrite
xchg
lods
push
mov
fmull
gs
in
addr16
fstp
sti
adc
aas
xor
mov
aaa
je
loop
adc
fidivl
insb
je
mov
fbld
xor
lock
or
sub
lods
jecxz
dec
lret
ficoms
mov
xor
xchg
or
loopne
ret
cld
js
lock
push
sub
loope
sbb
pop
dec
or
aam
xchg
sub
cmp
mov
sti
push
xor
mov
ja
and
push
test
data16
in
ret
jecxz
push
pusha
pop
in
mov
mov
pop
dec
mov
gs
inc
andb
dec
test
imul
imul
sarb
xchg
and
mov
sti
sub
jge
loopne
mov
jl
adc
imul
mov
stc
fidivl
mov
push
lock
cmp
jmp
hlt
adc
ret
stos
popf
out
jo
jnp
icebp
push
in
in
test
jmp
adc
push
call
je
mov
mov
sub
imul
pop
sbb
je
xchg
repnz
std
pop
movsb
testl
mov
insl
mov
and
cmp
mov
insb
xchg
push
xor
xor
jno
jle
sti
fldt
xor
push
adcl
in
repnz
dec
mov
sbb
stos
add
ret
mov
scas
insb
xor
mov
cld
ja
dec
frstor
bound
mov
test
dec
jecxz
inc
adc
orl
fcompl
std
push
mov
pop
cmp
jp
fndisi(8087
loop
test
add
push
pop
int
or
aaa
fsubrs
xor
pop
jbe
stos
ret
xchg
stos
cmc
add
push
jnp
shrl
mov
ja
mov
das
inc
pushf
mov
int
push
loope
mov
les
push
std
push
sar
dec
xchg
sub
or
jne
inc
mov
jl
in
ja
lahf
insl
sti
cld
aas
jle
test
xor
cmpsb
inc
mov
fbld
push
push
jmp
or
jns
pushf
in
mov
stos
enter
and
push
loope
mov
jb
jecxz
inc
orl
sub
bound
push
or
paddsw
push
sbb
cmp
cmpsl
mov
xchg
ss
das
mov
pop
mov
mov
jns
hlt
loopne
or
imul
push
imul
lret
lock
jmp
repnz
fsubrs
call
dec
test
es
repnz
stc
mov
or
push
cltd
out
pushf
rorl
out
sub
fbld
xlat
js
pop
dec
inc
xchg
xchg
pop
and
cmp
jae
lock
jecxz
sub
imul
bswap
xor
test
imul
inc
dec
es
cmp
idiv
cwtl
into
js
xor
inc
jo
pushf
sbb
jl
testb
lock
icebp
pop
icebp
jns
adc
pushf
outsl
ds
loop
inc
call
or
jnp
xlat
jae
daa
or
add
mov
sub
pop
pop
mov
adc
adc
mov
popa
sbb
jmp
js
loopew
ret
lret
lret
stos
iret
cmp
lock
in
mov
and
fld
mov
cmp
mov
lods
cld
inc
mov
pop
cmpsl
mov
hlt
ret
out
mov
pushf
mov
xorb
mov
repnz
cltd
sub
mov
add
mov
adcl
dec
cmp
sti
or
addb
pop
shll
iret
sahf
sahf
sbb
mov
jbe
mov
addr16
add
adc
out
sbb
mov
pop
insl
mov
js
bound
test
dec
inc
xor
ret
jecxz
and
mov
sub
mov
mov
mov
adc
mov
dec
sbb
cmpsl
pop
sub
fisubl
adc
mov
push
add
ja
iret
incb
jp
pop
aad
out
jns
add
cmp
pop
out
cmp
sahf
pop
stos
or
test
bsf
imul
mov
ret
fistpll
movsb
outsl
dec
xor
jge
ret
xchg
or
inc
ret
aad
pop
fs
stos
mov
fs
lret
insl
outsb
std
pop
rcll
lock
pushf
sar
sub
fdivr
or
clc
dec
nop
cmp
repnz
push
stos
sbb
lret
pop
jle
mov
pop
enter
jl
add
mov
movsb
lea
sub
cmp
js
inc
outsl
mov
xor
push
inc
sbb
lods
data16
add
cmp
and
jns
sti
adc
dec
lds
or
mov
and
dec
dec
xchg
nop
movsb
and
fstp
push
or
mov
aas
push
test
ds
sbb
movsl
adc
mov
icebp
sbb
in
icebp
pop
iret
pop
es
sbb
fmuls
fwait
xor
shll
push
jp
adcl
lock
pop
xchg
jns
pop
mov
pop
adc
enter
shrl
iret
inc
and
shrb
stos
aam
xchg
cmpsl
repnz
adc
mov
out
jge
sbb
adc
lock
cmp
aas
sub
xchg
repz
dec
mov
add
ja
pop
sub
or
adc
bound
xchg
add
fimull
xor
imul
cmp
add
shl
into
shll
rolb
lcall
idivl
pop
xor
lds
ss
add
daa
sbb
xchg
adc
pop
dec
add
sbb
and
imul
sbb
dec
stos
shrb
and
adc
data16
mov
nop
aam
xchg
mov
in
lahf
push
add
jg
push
fadd
stos
xchg
rcll
cmp
fcmovne
ja
mov
inc
adc
imul
pop
rclb
xchg
pop
pop
or
es
xchg
out
mov
mov
and
popa
push
pushf
filds
mov
shrl
shr
gs
mov
insl
mov
ror
subl
jnp
inc
jne
in
sti
out
rcrl
in
cmpsb
add
sub
inc
fcomps
adc
lock
jb
jl
iret
call
jecxz
mov
sbb
outsl
cmp
dec
jb
fldl
outsl
insb
adc
dec
mulb
sbb
push
cmpsl
dec
in
inc
stos
sbb
mov
xchg
sbb
mov
cmp
adc
mov
push
pop
out
lahf
dec
add
aad
arpl
pop
inc
xor
ds
fldt
call
jl
inc
pop
stc
fdivs
cli
pop
lcall
pop
orb
test
out
adc
push
mov
cmpsl
push
inc
call
adc
hlt
int
mov
gs
loop
sbb
mov
cmp
ds
inc
push
jp
inc
enter
push
clc
inc
ljmp
shr
dec
lret
mov
cmp
aam
andb
push
push
pop
dec
push
iret
lods
in
and
push
int3
fcmovne
out
jle
and
mov
imul
xchg
sbb
fstps
xor
mov
movhps
fs
testb
js
or
int
std
sti
adc
sub
shl
inc
sub
fxch
lea
cmp
arpl
mov
add
ds
mov
sahf
push
or
sbb
cs
jo
add
lret
sub
lds
or
movsl
pop
int3
movsb
jp
pop
xchg
fcmovb
and
lods
daa
out
mov
cwtl
add
aas
popa
cmp
cmpsb
xchg
xchg
xor
dec
jle
popa
cmpb
outsl
rcr
push
mov
xor
in
push
or
mov
icebp
jne
cmpsb
xlat
xor
xor
inc
mov
ss
mov
out
fs
mov
aad
ret
sub
shll
dec
dec
push
inc
mov
icebp
add
pushf
add
sub
mov
icebp
fstpl
mov
fwait
jp
cmpsl
out
sar
in
sahf
pushf
and
pop
add
add
pop
inc
push
lods
pusha
je
push
push
jnp
shrl
int3
movsl
ret
out
cmp
jnp
leave
push
pop
out
mov
fstps
sbb
jae
iret
call
test
shlb
cmpsb
and
dec
jnp
nop
jae
jae
lods
cmp
jle
das
jnp
bound
gs
lret
sub
addr16
pushf
xlat
push
cwtl
movsl
mov
dec
xchg
mov
insl
xor
pop
cmp
xchg
xor
or
push
pop
mov
xchg
loopne
jmp
neg
sbb
sbb
mov
adc
int
pop
or
jecxz
pop
mov
adc
test
cmpsb
xchg
mov
jo
mov
nop
add
dec
loopne
int3
addr16
shr
iret
fisubrl
loope
insb
or
push
lods
jp
aas
mov
xchg
and
and
push
jns
jg
and
and
imull
push
or
jno
les
movsb
cmp
sahf
int
mov
movsb
dec
pop
or
inc
mov
lods
xor
cltd
testb
sbb
push
gs
jmp
std
push
fwait
and
jmp
je
dec
inc
lret
es
or
inc
cmp
repnz
mov
mov
addl
aas
push
out
mov
ljmp
test
pop
lds
xlat
and
mov
xchg
idivl
aas
xchg
sbb
fidivs
and
pop
mov
cmpsl
dec
adc
push
mov
push
addr16
mov
pop
push
mov
sbbb
jmp
push
mov
and
int
call
mov
fst
mov
arpl
out
or
scas
adc
cli
lcall
sub
or
sahf
lcall
cwtl
xchg
xchg
pop
cmp
jne
or
in
cmp
shll
sbb
jne
aaa
jno
clc
sub
loop
mov
jno
lock
js
test
and
test
inc
repnz
cmc
loopne
bound
inc
push
mov
jmp
xlat
push
sahf
in
test
and
in
lahf
stos
out
and
addr16
mov
add
sub
imul
adc
jo
imul
lret
dec
ja
mov
and
inc
ja
mov
xor
in
mov
sbb
push
out
mov
push
dec
mov
xlat
cmc
cmpsb
js
daa
jne
lahf
sub
loopne
shrl
jbe
pop
and
add
iret
cmpsl
int3
sub
and
sbb
mov
pop
and
cmp
lret
mov
dec
jb
push
je
xchg
adc
imul
pop
popf
jp
cmp
mov
xlat
lcall
pop
push
or
add
fistpll
mov
fsubrl
jge
mov
mov
notl
nop
das
mov
in
and
lret
scas
cs
lret
ror
mov
call
clc
inc
cs
push
stos
movl
insl
xor
jp
cmpsb
sub
clc
aas
inc
mov
pop
call
lahf
inc
sub
out
rcll
mov
pushf
inc
shrl
lahf
lret
jmp
xor
mov
push
call
test
push
cmp
in
push
jns
pusha
icebp
mov
or
add
or
pop
push
mov
fucomp
rol
mov
mov
movsb
movsl
in
test
push
adc
dec
cs
xor
pop
cmp
test
adc
xchg
xor
xchg
std
pop
dec
jle
jno
scas
std
aam
ret
jno
dec
sub
cmc
iret
push
int
and
dec
stos
inc
or
cmpsb
cmp
scas
out
mov
inc
lods
scas
add
mov
lods
lods
sti
shlb
xor
in
sbb
lock
lods
daa
mov
dec
pop
xchg
mov
or
mov
and
jmp
enter
fnstcw
insl
fcmovu
mov
pop
xor
jge
xchg
sub
xchg
push
lret
sbb
and
cmp
loopne
pop
dec
insl
pop
mov
lock
leave
xchg
imul
testl
fldl
push
push
dec
push
pop
adcb
adc
mov
jne
sub
out
fsubl
mov
jmp
adc
xchg
mov
sub
les
in
mov
pop
jmp
out
ljmp
jecxz
jecxz
xor
dec
inc
pop
inc
fnstcw
mov
insl
movsb
iret
call
int3
inc
sbb
xor
dec
cmp
pop
push
js
insb
mov
or
adc
sbb
pop
xchg
filds
cmp
adc
int3
hlt
cs
xchg
stc
hlt
test
cwtl
in
rcr
cmp
jnp
or
inc
imul
push
push
inc
sahf
mov
cltd
sbb
mov
sahf
sahf
sbb
xor
dec
sbb
les
das
into
ja
pop
mov
and
pop
movsl
aad
lods
notl
ljmp
mov
test
loopne
sub
and
xchg
inc
cltd
aad
jmp
ljmp
pop
sub
jl
pop
mov
popa
ljmp
jg
jge
aam
insb
mov
fistl
pushf
add
enter
jne
ljmp
int3
movsb
dec
loop
add
loope
mov
mov
arpl
cmpsl
lods
divb
jmp
cmp
out
add
cwtl
leave
inc
mov
in
rcl
jl
jg
shrl
dec
ljmp
je
btc
stos
or
mov
sbb
outsb
pop
xchg
adc
in
mov
stos
scas
daa
iret
stos
mov
jae
sbb
repnz
mov
shll
jmp
mov
push
inc
dec
outsl
cmp
jmp
sub
dec
pop
shrb
mov
icebp
mov
xchg
mov
nop
js
inc
mov
fsubrl
adc
data16
pusha
loop
mov
daa
sbb
jae
push
rcrb
sub
sbb
dec
lock
xor
popf
add
sbb
cwtl
clc
or
psubsb
add
jne
xor
in
inc
rcrb
add
flds
scas
jbe
pop
imull
dec
sbb
adc
inc
addr16
dec
add
push
push
out
subl
mov
dec
pop
xchg
sbb
lcall
xchg
movsb
sub
pushf
and
adc
mov
jo
xor
jge
fidivrs
xchg
hlt
pop
lret
cs
mov
sbb
enter
jmp
mov
jp
mov
test
in
test
pop
scas
leave
mov
dec
sub
stos
sub
xchg
or
ret
mov
adc
stc
test
clc
pop
sub
push
adc
loop
negl
lret
jl
or
out
pop
adc
or
pop
std
sub
dec
push
mov
xchg
fldcw
rorl
les
jle
aas
shll
mov
cwtl
mov
add
orb
push
fisttpll
cmp
fisubrs
fsubr
pusha
sbb
mov
dec
mov
adc
mov
nop
jmp
jno
mov
mov
fiaddl
jle
js
cwtl
sbb
jne
adc
mov
mov
mov
and
and
mov
push
icebp
in
lret
stos
sbb
adc
pop
sarb
jmp
and
pop
push
es
dec
inc
sbb
jg
pop
sub
mov
mov
fistpl
imul
push
ljmp
aad
adc
xor
or
stc
pop
ljmp
fs
mov
mov
in
sbb
pop
mov
xor
nop
mov
xorl
add
inc
mov
sub
inc
mov
mov
inc
inc
sub
or
cmp
orb
adc
js
mov
into
pop
scas
sbbl
pop
aam
rolb
shlb
inc
loop
in
sbb
es
sub
inc
sub
outsl
mov
sbb
mov
rcr
fwait
xchg
pushf
les
sar
and
in
or
mov
mov
das
xor
xor
cs
dec
sbb
dec
jecxz
xor
push
xchg
cld
xor
or
jp
push
inc
inc
hlt
stos
add
xchg
cmp
iret
inc
ja
iret
dec
inc
scas
hlt
jns
rcrl
cli
pop
pushf
pop
divl
cmpb
or
lret
repz
stos
push
lock
pop
mov
popl
jae
add
add
mov
sub
es
aas
rcll
out
pop
cmpb
out
sub
cmp
cmp
loop
jo
push
cmp
subb
cmp
push
test
cld
push
or
cmp
std
pop
sub
pop
cmp
jg
sub
mov
lahf
roll
push
into
xor
mov
adc
adc
mov
lret
ds
mov
jmp
inc
sti
jne
push
je
mov
je
push
jecxz
jmp
test
and
loopne
in
fisttpl
xchg
mov
adc
shrb
cmpb
scas
icebp
cmp
rcrl
movsl
in
stc
cmp
lods
cmpsb
daa
add
dec
lahf
jg
adc
push
and
inc
mov
pop
mov
das
push
push
std
addr16
adcl
inc
mov
outsl
dec
idiv
ficoms
iret
fisubrl
clc
xor
decb
jl
mov
or
adc
mov
sbb
sbb
cmp
aam
lret
out
lods
fs
jmp
stc
push
jmp
fldt
stc
popf
and
shll
stos
push
add
and
lret
aaa
cmc
mov
mov
aam
push
test
pop
xchg
cmpb
adc
cwtl
enter
repz
aaa
fisttps
jb
cltd
insb
dec
xchg
cltd
sahf
or
push
jl
test
fimuls
in
stos
fildll
stc
and
negb
clc
shll
std
jecxz
sub
das
sub
outsb
jmp
ret
sub
stc
mov
testb
cmp
pop
xor
pop
sti
repz
sbb
mov
inc
xchg
leave
popf
bound
sbb
sbb
test
scas
fistl
and
sub
jno
inc
xor
lret
shll
add
sbb
loope
movb
or
int3
pop
les
insl
dec
xchg
pushf
cwtl
mov
push
inc
mov
inc
bound
jae
jae
lahf
jbe
xorl
add
std
xchg
outsl
mov
mov
out
lock
jg
xchg
aas
mov
jg
insl
mov
push
fcom
inc
ds
not
jge
mov
or
or
fcomps
and
inc
push
loop
lret
insl
shl
sbbb
test
popa
xchg
test
int
outsl
outsb
xor
sub
fcomip
xchg
jbe
fstpt
cmp
sbb
add
cli
lods
dec
lahf
fucomi
fidivl
cld
stc
or
dec
cmc
cmp
cmpsb
or
jns
mov
or
data16
xor
mov
fwait
lret
cmp
fists
sbb
pushf
jne
aas
scas
dec
icebp
and
mov
or
movsl
ret
jl
pop
aas
push
adc
dec
daa
ljmp
dec
pop
sbbl
cmp
jo
jg
push
stc
mov
mov
dec
outsl
aaa
xchg
dec
sbb
iret
lock
inc
mulb
out
inc
aas
ljmp
rorb
sbb
cmp
aad
jmp
sarl
test
pop
lret
push
sub
ss
rcl
jo
std
imul
nop
roll
add
out
sbb
subl
or
in
jmp
faddl
sarl
out
pop
mov
repz
aas
mov
cmp
xlat
int3
jo
pushf
lods
ror
das
incb
clc
mov
jmp
in
jg
adc
aas
lcall
mov
mov
xor
loop
fcomps
aas
fidivrs
aad
in
or
aas
jecxz
push
jb
fs
out
mov
jecxz
shll
jmp
and
mov
dec
jns
nop/reserved
addr16
dec
test
pop
das
jp
and
dec
mov
out
push
cld
cmp
mov
leave
daa
aad
shrl
js
jns
jl
xchg
mov
or
mov
cwtl
mov
sub
xchg
clc
lahf
int3
push
add
cmp
mov
loopne
dec
add
arpl
sub
into
test
ljmp
push
or
lock
or
jmp
scas
stc
push
mov
out
push
out
icebp
or
enterw
mov
or
inc
dec
pop
add
test
sub
push
cmp
in
adc
sub
mov
jno
adc
add
push
adc
jle
adc
addb
sbb
push
sti
jmp
and
sub
ja
loope
fcmovnb
sub
or
inc
addr16
xchg
mov
pop
inc
mov
adc
mov
inc
cmc
or
js
ja
jmp
lret
in
lcall
test
loope
inc
in
push
dec
in
enter
jmp
popa
insb
jmp
sub
enter
dec
jg
lahf
mov
mul
mov
lock
xchg
cli
stos
test
mov
call
call
xchg
cmp
mov
cmp
sti
xor
ljmp
std
aaa
lock
jmp
jno
aam
leave
push
aaa
cmpsl
jle
pop
and
iret
sar
sbb
sub
inc
lret
jl
lock
pop
ds
movsb
xchg
das
out
imull
scas
sbb
test
gs
aam
jmp
or
cwtl
cs
movsb
cwtl
mov
lahf
xchg
adc
xchg
stc
loopne
cli
lcall
mov
lods
je
lahf
jmp
or
sub
imul
jg
mov
loopne
fstps
mov
sbb
add
and
addl
inc
aad
cmc
and
imulb
mov
addl
mov
inc
sti
out
cwtl
sti
add
xor
scas
inc
jecxz
cmp
hlt
dec
dec
sti
int3
lds
movsb
xchg
xor
add
mov
fidivrs
dec
fisubs
sbb
jne
insb
cwtl
test
sbb
mov
mov
shll
mov
cwtl
gs
mov
push
mov
xchg
sahf
shl
movb
mov
fdivs
cmp
imul
sbb
repnz
and
jge
ljmp
push
ret
jnp,pt
dec
mov
and
push
pusha
xorl
push
cmp
mov
je
jno,pn
push
cmp
sbbb
int
cltd
pop
jg
jecxz
add
out
push
or
adc
push
jecxz
push
andb
ret
movsl
cltd
insl
and
stos
mov
aam
add
cmp
xlat
aam
adc
fstl
cmp
mov
nop
jo
pop
mov
ret
mov
cmpsb
pop
lahf
aam
cs
add
push
lea
call
dec
and
clc
stos
loop
outsb
leave
mov
jne
out
push
mov
mov
daa
sbbl
pop
or
aam
out
push
out
pop
into
testl
ja
mov
out
dec
mov
pop
sub
jecxz
push
xchg
cmp
int3
in
xchg
or
in
dec
ret
xchg
scas
movsb
xor
fisttpll
mov
adc
in
pop
ja
mov
jp
jae
push
les
sub
adc
xchg
dec
sub
loopne
mov
mov
mov
push
clc
push
je
test
mov
jmp
add
or
mov
add
enter
daa
adc
xchg
stos
push
out
dec
jge
push
push
loop
mov
push
cmp
xlat
pop
xchg
mov
shll
sbb
out
iretw
call
cmp
pushf
inc
xchg
lea
int3
dec
bsf
fcoms
mov
repnz
sbb
enter
aas
inc
inc
imul
pop
pop
scas
sahf
int3
xlat
adc
xor
repz
xor
push
jg
push
xchg
mov
xor
repz
lods
mov
cmpsl
dec
pop
in
mov
call
jecxz
cmc
enter
jae
arpl
mov
mov
cmpsb
loope
sbb
incb
adc
fildl
sub
xchg
sub
jge
ljmp
ret
gs
mov
inc
pushf
scas
or
lret
adc
int
cmpsb
mov
dec
fadds
and
jl
cmc
mov
std
sahf
loope
push
mov
or
jp
cmpsb
ja
xor
shlb
aad
sti
inc
lds
fdiv
scas
aad
push
jmp
std
fucomp
gs
jbe
fdecstp
lea
mov
sub
mov
fcom
aas
mov
and
push
add
xorb
and
mov
jmp
insb
std
mov
dec
sub
test
outsl
jbe
rcl
aas
xchg
mov
and
daa
mov
int
arpl
or
stc
and
sub
mov
mov
stos
mov
xor
cmp
push
int
xchg
or
pop
push
arpl
xchg
aad
pusha
lods
ljmp
scas
push
mov
xchg
mov
in
dec
mov
loop,pn
aad
daa
cmp
loop
xchg
lsl
pop
push
push
imulb
jns
stos
aad
sub
mov
push
out
lds
jnp
and
mov
pop
leave
push
in
push
out
lds
fsub
jno
enter
pop
adc
scas
test
lods
punpckhbw
or
push
ud1
andb
outsl
cmp
ret
push
mov
daa
stos
nopl
in
dec
aaa
jne
fsubr
loopne
jnp
repnz
inc
adc
shlb
popa
into
call
les
xchg
jp
pop
mov
jle
cmp
sbb
dec
mov
sbb
mov
add
movsl
ja
ret
into
push
out
xor
das
push
int
cmp
les
seto
out
idivl
imul
xchg
imul
mov
ss
mov
outsb
enter
or
dec
gs
mov
mov
jno
inc
leave
out
insl
rol
cmp
cmp
xchg
cltd
dec
cvtps2pd
adcb
sti
fistpll
jl
les
jge
mov
push
jecxz
sti
add
jp
dec
cmpsl
pop
loop
or
adc
mov
sub
popl
mov
pop
rclb
inc
divl
fsubs
pop
jb
neg
pop
bound
fistps
fcoms
in
fnstcw
jns
ja
in
and
jecxz
lods
pop
addr16
gs
enter
pop
mov
jbe
fwait
pop
in
xor
ljmp
lods
adc
enter
pop
push
rcrl
dec
ret
push
add
pop
divl
fcoml
int
daa
ss
in
imul
test
xor
sbb
in
adc
aas
pop
inc
in
xchg
scas
adc
and
ds
jnp
out
jmp
fists
int
jne
in
lods
or
lcall
inc
cmpsb
int3
int
xorb
hlt
int3
in
lea
sti
mov
lret
push
nop
sub
jge
pop
mov
idivb
out
out
sti
mov
mov
cmp
lods
clc
fldl
pop
mov
insb
mov
xchg
pop
adc
xchg
xor
inc
sbb
in
test
js
add
popf
adc
jmp
int3
add
cmp
mov
jge
aad
ret
sbb
mov
into
cmc
loop
push
incb
push
dec
pop
lods
lds
rcr
lcall
das
or
dec
and
rcl
repz
push
ds
out
clc
sti
les
xrelease
enter
adc
mov
test
push
cmp
cmc
jnp
push
sbb
xor
je
fwait
cmp
mov
mov
lcall
movsl
mov
ror
or
mov
mulb
rcrl
fnsave
dec
dec
add
fdivl
adc
and
cmpsb
and
sbb
add
ret
push
jp
mov
and
or
push
sub
inc
jp
adc
push
lea
xchg
jnp
popa
push
lods
xlat
mov
ds
and
iret
pop
cmc
psraw
jge
cltd
mov
fwait
inc
fcmovnbe
xchg
adc
in
pop
push
add
aam
in
add
xor
lahf
mov
xor
sbbl
jl
push
lea
sub
adc
mov
xor
sbb
sbb
aam
imul
jo
push
das
js
xor
outsb
jl
sarl
int3
and
dec
sbb
dec
je
in
sub
imul
sub
das
dec
out
je
or
aaa
lds
mov
pop
das
push
jbe
movaps
scas
cmc
adc
stos
aaa
sbb
add
xor
or
adcl
inc
dec
cmp
add
xor
das
push
aas
imul
es
ficompl
mov
cltd
mov
popa
sub
popa
mov
sub
pop
sub
sbb
sbb
mov
mov
push
pop
and
jmp
lcall
jle
and
mov
es
mov
out
xor
out
mov
xor
or
aas
push
popf
test
dec
fwait
adc
fistpl
sbb
sub
outsl
mov
push
push
pop
pop
cmp
clc
popf
je
pop
dec
xorl
iret
fwait
xchg
fldcw
outsl
mov
outsl
mov
sub
sub
sbb
add
fwait
loop
idivl
mov
loop
cli
out
xchg
jbe
mov
call
sub
xchg
popf
jge
leave
nop
xor
sbb
or
add
mov
mov
in
mov
sub
lcall
fwait
sbb
mov
mov
add
sbb
in
jmp
sub
int
rcl
mov
push
ret
stos
lods
and
jle
lods
cld
sub
xlat
and
xor
mov
int
mov
xchg
cmpsb
pop
cmp
mov
jne
and
loope
mov
inc
imul
push
popf
xor
xor
dec
push
adc
cwtl
lret
cmp
pop
mov
movsl
arpl
mov
aaa
out
adc
out
popl
pop
cmc
inc
in
clc
mov
or
xchg
sarb
insl
xor
cmp
sub
lcall
adc
pop
andb
ficomps
gs
xor
jecxz
fbstp
cmp
push
push
sbb
scas
or
or
jno
push
pusha
stos
sbb
sahf
cltd
push
mov
pop
sbb
mov
dec
arpl
mov
ret
cli
cmp
ss
fcmovnbe
pop
icebp
daa
mov
sub
sbb
mov
stc
xor
mov
dec
mov
xor
jp
and
testb
mov
ljmp
insb
cmp
push
loopew
mov
repz
cs
pop
ja
push
sub
repz
ret
mov
int3
sarl
addr16
adc
test
jl
test
in
xor
push
cmpsl
call
iret
push
ret
xor
xor
sbb
inc
out
xchg
les
inc
or
pushf
jb
mov
lea
mov
imul
out
test
or
es
adc
into
mov
add
in
or
pop
or
mov
insb
in
pop
clc
arpl
aad
loopne
xchg
pop
jecxz
ss
cmp
sti
xor
jno
xor
xchg
sbb
adc
mov
mov
sbb
out
jae
push
mov
je
insb
push
cmp
imul
lea
adc
mov
out
pop
lock
sbb
cmpsl
ds
or
in
fwait
inc
jae
aam
nop
xchg
ror
lahf
inc
jo
sbb
jle
mov
and
or
pop
repnz
repz
xor
dec
push
inc
and
js
fimuls
sub
loope
fmulp
push
popf
cwtl
loopne
mov
push
adcb
fldenv
mov
xlat
cld
int3
pop
jmp
xchg
adc
pop
xor
ds
xchg
lock
jmp
sub
jo
sbb
fnstcw
add
ret
inc
mov
ja
cld
daa
pop
xor
adc
mov
xor
mov
pop
sbb
orb
inc
iret
sbb
jnp
mov
fstpl
outsl
cli
lret
pslld
lcall
push
lret
push
xchg
pop
fdivs
leave
add
xor
and
into
bnd
pop
mov
fisubrl
lods
inc
fwait
cmp
fildl
test
pop
jge
push
sbb
dec
test
add
sbb
mov
xor
shlb
add
jb
dec
xor
mov
mov
sbb
mov
insb
adc
stc
dec
cmp
add
or
das
or
sub
jbe
add
xchg
movsb
sti
outsl
and
aaa
jb
mov
sub
push
decl
xchg
adc
repnz
pop
loope
pop
jno
pushf
sbb
and
bound
int
push
add
data16
imul
dec
cs
xchg
xor
mov
int
enter
subl
mov
ss
pop
xor
ret
mov
outsb
xchg
js
push
in
dec
xchg
adc
xchg
test
sahf
xor
pop
push
push
push
int
cmpsb
stc
dec
test
fldl
cli
jp
shll
jg
imul
int
popf
lods
fwait
rol
pusha
mov
xchg
jmp
aas
int
popf
mov
cs
jecxz
or
mov
ljmp
js
cmpsb
cli
pushf
jb
adc
xor
addl
cs
jle
lods
clc
lcall
sbbb
aas
xlat
xchg
mov
pop
dec
cmp
aam
imul
ljmp
test
add
mov
mov
ret
mov
into
add
mov
push
test
loopne
loope
fists
mov
popf
and
pop
mov
ficoms
outsl
pop
js
addr16
pop
aas
fistps
jecxz
jg
imul
stc
mov
das
lea
dec
mov
inc
nop
push
js
cmp
fs
popf
or
push
jge
jno
addb
dec
xchg
ret
xor
mov
cld
or
in
sbb
add
inc
in
shrb
rep
test
insl
push
fdivrl
adc
or
daa
insl
mov
ret
cmpsb
xor
fisubs
push
add
or
adc
and
gs
ss
scas
jp
insb
outsb
and
fildll
mov
dec
jle
cmpl
lds
or
and
push
push
testl
push
imul
mov
pop
push
daa
mov
and
mov
es
mov
adc
dec
and
enter
sub
sbb
sub
adc
inc
inc
inc
cmp
mov
ja
in
push
pop
stc
cmpl
mov
mov
test
or
repnz
mov
mov
test
sbbb
push
adc
xor
lods
adc
test
and
fnsave
dec
add
fwait
gs
push
outsb
inc
add
lcall
mov
fsts
sti
fnstsw
ja
pop
dec
shl
adcb
add
dec
dec
outsl
cmpxchg
cmp
rclb
cmpsl
and
sahf
test
xor
jne
inc
je,pn
pop
xchg
pop
or
add
xchg
sub
hlt
mov
adc
or
addl
jno
psubsb
test
test
xor
lcall
in
sub
aad
xlat
ja
sbb
sub
lahf
stos
rcrl
ret
dec
jge
nop
mov
mov
icebp
jle
or
icebp
nop
mov
ret
or
out
out
pop
push
outsl
insb
test
stos
dec
mov
jle
pop
aam
test
pop
or
jmp
ljmp
xchg
xchg
dec
cltd
mov
les
pop
ds
mov
mov
arpl
sbb
sub
and
jo
out
and
sub
sub
int3
xchg
js
push
inc
pop
pop
and
xchg
fisttps
mov
add
loop
out
jle
or
repz
roll
mov
fcomps
aas
adc
push
loopne
dec
outsl
enter
lcall
inc
add
adc
nop
sahf
fisttps
push
mov
cltd
dec
fwait
push
xchg
cmp
call
fwait
or
jbe
cmp
sbb
or
outsl
jbe
and
gs
ljmp
lcall
mov
xchg
xor
hlt
sbb
xlat
xor
out
pop
xlat
lock
xor
ljmp
sbb
jo
faddl
and
jb
pop
ror
lock
iret
mov
das
leave
pop
mov
or
pop
mov
inc
repz
sahf
lcall
call
push
stos
rcrb
sub
jmp
pop
inc
push
push
mov
addb
stos
xchg
and
inc
lods
add
cld
insb
mov
jecxz
cmp
gs
mov
mov
fisttps
das
mov
push
or
into
mov
dec
pop
jmp
outsl
or
mov
fimuls
testb
xor
pop
es
loop
xor
add
in
cmp
xchg
pop
mov
jne
int
jbe
ret
addl
sbb
add
mov
repz
add
dec
xor
push
lods
mov
aaa
lahf
add
stos
stos
push
jle
add
xor
sub
icebp
jecxz
cli
cld
dec
and
jns
xchg
xor
inc
js
jb
call
sahf
aaa
divl
imul
push
es
mov
sbb
and
cmp
pop
cltd
mov
xchg
inc
push
sub
lods
mov
mov
and
mov
out
sub
rcll
or
movsb
xor
and
push
int3
mov
dec
rcrb
pushf
leave
mov
mov
inc
cld
push
test
dec
pop
inc
cs
loop
jo
fdivl
stos
lds
inc
xchg
mov
pop
xchg
push
add
cwtl
mov
jmp
adc
sub
sarb
std
lods
push
enter
mov
clc
out
cld
dec
add
lcall
nop
ljmp
jge
cmpl
int
cmpsb
pop
in
divb
ss
in
sub
in
mov
loop
adcb
les
lret
mov
fwait
dec
ss
fiadds
or
mov
inc
sub
mov
and
or
inc
ljmp
hlt
int3
scas
test
in
scas
jns
jae
mov
jg
repnz
sti
inc
cmp
cmp
arpl
lahf
jmp
cld
jno
inc
push
mov
dec
and
ftst
call
in
pop
idivb
sub
aas
ss
pop
cltd
loope
mov
mov
stc
lds
jge
sbb
sub
push
iret
cmpsb
loop
adc
jb
xchg
add
jnp
dec
sub
mov
cmp
test
sbb
dec
sti
ljmp
dec
add
inc
sahf
cld
cs
sti
lods
jo
and
pusha
cmpsl
stc
xor
nop
jg
negb
cli
loopne
adc
in
xlat
jbe
jno
cmp
jae
lods
out
in
mov
mov
and
xchg
fnstsw
pop
add
push
mov
pop
into
in
sub
mov
fcomps
inc
lock
test
inc
sbb
push
push
and
stos
lahf
inc
or
mov
inc
sub
and
stos
mov
popf
mov
sahf
fmuls
mov
or
mov
cld
mov
xlat
xchg
fcoml
test
jge
pop
mov
shlb
push
lret
daa
test
or
adc
push
clc
loope
dec
jmp
ds
call
pop
insl
rorl
lods
in
loopne
out
and
loope
aad
push
aas
and
jae
cmp
icebp
cmpsb
dec
xor
mov
cmpb
pop
jbe
dec
jb
dec
movsb
pop
xor
test
movsb
or
adc
mov
push
sahf
mov
jno
stc
out
and
sub
hlt
das
jp
xor
fwait
shl
fwait
rol
adc
jo
lahf
ja
outsl
mov
xlat
push
xor
in
test
fwait
cld
xchg
lock
fcmovne
shll
push
aad
and
mov
jb
ss
cmp
sbb
inc
ds
and
outsb
fistl
add
imul
outsb
je
and
mov
xor
cmp
or
adc
mov
dec
mov
sub
sbb
out
cmp
bnd
inc
rcrl
lea
jge
and
nop
adc
sbb
rcr
insl
jbe
and
add
jge
push
fs
sahf
mov
arpl
mov
out
and
pop
in
stc
xchg
insl
lret
dec
dec
cmp
cmp
cmp
mov
popf
cmc
jecxz
adc
xchg
shlb
sbb
xchg
in
shlb
mov
sbb
add
mov
loop
pop
shlb
mov
xor
add
mov
jecxz
js
outsb
rorl
sbb
sbb
xor
rcrb
sbb
out
sbb
pushl
outsl
fucom
imul
or
hlt
fbld
std
push
ljmp
xor
mov
enter
xchg
mov
mov
in
je
fistl
mov
jg
dec
jnp
lea
adc
inc
inc
push
mov
and
js
xlat
or
xor
dec
cmp
repz
std
insb
stos
adc
dec
inc
test
shlb
loop
fsubl
mov
aad
clc
imul
sub
cwtl
mov
cmp
rorl
les
or
mov
cli
pusha
ja
add
or
jns
popf
xchg
jno
xchg
push
pop
out
sbb
and
and
out
jl
loopne
out
pop
jno
daa
pusha
inc
popa
xor
adc
inc
enter
roll
dec
out
cmp
popf
pop
dec
pop
int3
js
mov
adc
jne
stos
dec
and
lret
sbb
inc
imul
mov
lahf
mov
lds
push
ficoms
ror
push
loope
or
insl
cmpsl
sbb
xlat
cld
add
leave
sub
add
mov
sub
cltd
popf
mov
fisttps
aas
pop
leave
inc
mov
xchg
push
rcrl
popa
inc
outsl
cmp
mov
xchg
inc
jmp
in
in
fwait
sbb
sbb
push
adc
stc
nop
pop
sbb
stc
mov
outsb
dec
push
fisttps
or
lods
arpl
filds
or
lea
stc
cmp
push
mov
mov
sub
in
inc
jg
and
xorl
mov
dec
leave
out
lahf
dec
mov
pop
lret
or
inc
mov
sub
pop
lods
ljmp
std
sub
xchg
sahf
inc
push
pusha
call
ja
mov
sbb
fcomip
pop
fbstp
sub
jle
jo
jg
clc
mov
xorb
inc
xor
icebp
mov
jecxz
jbe
adc
js
pop
icebp
cmpsb
push
stos
add
or
imul
push
sub
or
mov
js
lods
mov
and
in
jns
loopne
hlt
inc
xchg
cmpsb
or
std
xchg
ds
rcrl
inc
movsb
mov
jns
daa
sbb
mov
pop
xchg
mov
clc
jbe
sbb
shll
xchg
mov
sahf
fdiv
sbb
xchg
xor
mov
int3
push
jg
push
push
pop
pop
fs
add
out
jno
stos
add
subb
cli
stc
cmp
inc
and
stos
mov
cmp
adc
out
pop
dec
dec
mov
add
hlt
out
out
mov
mov
fsts
pushf
xchg
add
aas
mov
push
dec
cmpsb
fwait
cmp
fidivrs
cmp
aas
in
xchg
mov
pop
mov
xchg
imulb
sti
dec
cmp
pop
nop
mov
jb
pop
adc
dec
sub
fwait
cmp
xor
add
imull
enter
enter
addr16
pop
mov
test
pop
test
cmpsb
out
addr16
inc
call
lods
pop
fwait
jo
fxch
mov
xchg
cmp
xor
pop
sbb
cmovne
sbb
cmp
je
fcomps
dec
arpl
mov
mov
dec
mov
mov
xchg
inc
lods
lds
jno
mov
or
pop
dec
sub
mov
dec
aaa
loopne
dec
jns
xchg
aaa
scas
xchg
aam
test
test
sbb
mov
out
mov
movsb
xchg
insl
popa
inc
lds
bound
mov
mov
xchg
call
out
dec
pop
imul
jmp
sbb
test
or
mov
and
cmp
cmp
mov
pushf
mov
sub
jbe
mov
leave
cmp
lcall
sbb
pop
popa
xacquire
iret
push
addb
ljmp
sbb
jae
and
into
divl
push
dec
sub
loope
vpandn
or
rcl
insl
sbb
sbb
mov
ficompl
scas
adc
std
shrl
sbb
push
cld
in
icebp
ds
fcompl
cltd
push
fdivrl
pop
xchg
iret
sbb
mov
insb
gs
or
je
clc
xor
or
xchg
inc
cmp
pop
mov
or
xorb
mov
mov
xlat
es
outsb
lret
rcr
popa
int
pop
lock
movsl
pop
and
lcall
enter
xchg
push
es
xor
cld
sbb
mov
or
clc
xchg
jmp
sbb
push
test
out
sbb
mov
data16
dec
add
cmc
push
aad
sub
neg
fnsave
out
inc
push
inc
aad
movl
xchg
mov
sub
inc
je
je
xor
sub
xor
adcl
xor
loope
shr
jns
sub
push
and
inc
orl
data16
std
or
inc
sbb
data16
pushf
pop
loop
and
loop
cmp
mov
dec
das
fst
aaa
mov
sti
cmp
cwtl
enter
mov
xchg
ret
or
mov
and
sarl
sbb
out
jp
ds
sub
mov
mov
leave
std
sub
or
fnsave
cwtl
lret
cmp
mov
insl
pop
pop
pop
icebp
mov
es
sub
add
or
xchg
repnz
mov
or
and
inc
imul
pop
adc
mov
sbb
out
push
lahf
loope
addr16
les
sub
mov
jmp
inc
mov
cmp
pop
test
fdivrs
cmp
call
cs
xchg
push
sbbb
sahf
fdivrs
sbb
dec
outsl
cld
push
push
jae
ficoml
fiaddl
mov
xlat
outsb
insb
inc
jbe
fdivrs
dec
add
popa
adc
stos
jne
xchg
lods
in
int
icebp
push
bswap
push
rcrl
shrb
fdivs
xchg
les
push
mov
push
ss
xchg
pop
xchg
adc
das
adc
sub
pop
sbb
int
cmp
rolb
fld1
fisubl
xchg
call
shl
mov
xor
push
filds
rcr
out
cs
mov
xchg
mov
jecxz
aaa
pusha
pushf
cmpsb
sbb
cmpsl
push
add
jbe
inc
mov
jnp
push
out
pop
sahf
add
in
cmp
xor
push
popf
daa
mov
or
icebp
mov
int3
dec
cmpsb
mov
repnz
jne
insl
mov
sahf
jbe
mov
push
fcompl
dec
add
or
pop
lods
dec
xchg
push
jmp
pusha
out
pop
lret
cmp
add
add
lods
into
push
aad
loopne
sti
dec
stos
aam
xchg
lcall
mov
jb
imul
lods
push
repnz
adc
adc
pop
and
adc
mov
jnp
xlat
mov
lods
clc
ret
push
stos
mov
sub
stos
scas
cmp
and
mov
adc
loope
jbe
aad
mov
jnp
or
and
out
cmp
out
mov
insl
jae
jl
test
addb
lds
outsb
or
add
mov
sub
push
leave
insb
test
das
imul
pop
fs
std
dec
xorb
mov
mov
fidivrs
fstpl
popa
mov
stos
into
pop
icebp
shll
mov
inc
xor
sub
test
repnz
push
and
icebp
fstpl
ds
xchg
cmpb
cmpsb
xchg
jmp
addr16
inc
jno
and
mov
jge
cmc
cmpsb
imul
mov
push
clc
stc
das
push
cmp
inc
xchg
jge
aaa
ljmp
xchg
decb
inc
ljmp
push
jae
int3
add
mov
je
int3
mov
jmp
cmc
sub
push
xchg
dec
sbb
jl
loop,pn
addb
loopnew
mov
dec
adc
or
xor
sub
or
in
mov
pop
jl
add
out
and
cwtl
fxch
repz
loope
idiv
hlt
adc
pop
out
add
mov
daa
ret
adc
push
adc
in
test
mov
int3
xchg
stos
adc
mov
mov
repz
pushl
arpl
push
or
inc
dec
xchg
jnp
hlt
enter
and
pop
fwait
mov
mov
pop
push
xchg
lcall
out
cltd
mov
inc
out
daa
das
add
jp
jns
pop
jge
mov
fs
out
mov
cmpsl
mov
test
stos
cmc
mov
jmp
es
sbb
dec
test
push
mov
or
add
push
inc
out
ja
lea
and
aaa
cli
out
rorl
inc
repz
dec
fistpll
xlat
xchg
xchg
fisttps
mov
jmp
push
fisubrl
inc
insb
aad
dec
mov
push
sub
mov
test
and
push
xchg
mov
cli
out
lahf
or
pop
or
or
scas
xorl
out
imul
push
pop
inc
mov
push
adc
cmp
inc
inc
xlat
inc
iret
xchg
push
jge
jge
cli
pop
hlt
pop
rorb
loop
sbb
lcall
cmp
mov
shlb
jmp
mov
adc
pop
stos
pop
aaa
add
sub
stos
adc
jb
and
imul
or
mov
xchg
andl
pop
mov
mov
call
gs
cmpsl
lods
cmpsl
fisubrl
mov
mov
cmpsb
lods
daa
sub
in
fistps
dec
test
fcoms
icebp
fimuls
fidivs
and
icebp
inc
adc
mov
pusha
in
mov
and
lcall
cltd
inc
mov
cmp
mov
and
add
xlat
sarb
jne
jle
cmp
fwait
xor
lcall
test
imul
xchg
push
icebp
shrb
sbb
dec
push
sbb
or
xchg
inc
les
inc
jmp
repz
js
xor
push
inc
cmp
pop
push
cmp
ljmp
mov
pop
addr16
test
jp
fs
add
add
dec
jecxz
jmp
jmp
jns
repnz
pop
shlb
dec
xchg
sub
iret
aad
stc
mov
lcall
sahf
addr16
cmp
or
ss
xlat
call
shlb
jmp
in
in
mov
mov
mov
out
inc
fisttps
sub
testb
or
xor
jge
lret
adc
mov
in
add
gs
das
pop
xchg
adc
jl
sbb
mov
sub
cwtl
rcr
sbb
and
mov
mov
in
sbb
mov
cmp
adc
cmpsl
mov
pop
cmp
xor
jmp
jnp
push
inc
mov
xchg
push
sbb
mov
cmc
inc
mov
cmp
push
or
mov
pusha
mov
push
or
inc
stos
mov
adc
ret
insb
pop
jecxz
or
testb
into
imul
mov
int
addr16
mov
negl
inc
fmulp
adc
dec
mov
icebp
rol
mov
int3
and
push
imul
sub
mov
jb
lahf
jnp
cmpsb
int3
int
loopne
add
xor
sbb
jg
cmp
outsl
mov
adc
fmull
movsb
sbb
and
pop
repnz
inc
dec
cmp
fnstsw
mov
jo
push
mov
loopne
xchg
push
sti
stc
test
test
lock
push
add
imul
out
mov
nop
dec
sub
or
jle
repnz
inc
dec
xchg
sahf
lods
inc
jae
add
adc
mov
ret
or
outsl
sar
xor
movsb
dec
adc
sbb
pop
jl
icebp
mov
out
xor
mov
and
fcomip
or
xchg
jecxz
jns
test
adc
dec
pop
mov
in
clc
rep
lahf
add
loopne
mov
ss
dec
add
cmp
imulb
xor
es
add
jb
mov
adc
test
mov
or
roll
mov
inc
lret
mov
stc
cmp
insl
mov
mov
xchg
push
scas
mov
imul
lods
gs
add
in
fnstsw
cmp
movsb
cmp
fbstp
fsub
ljmp
dec
stc
dec
pop
dec
aaa
cmp
repz
adc
addr16
mov
popf
xor
les
bound
testl
fcmovb
jmp
daa
jge
mov
repz
pop
and
subl
cmp
pop
popf
js
and
xchg
jo
push
mov
add
lret
sbb
divb
or
pop
call
scas
fidivl
xor
adc
fwait
and
cmpsb
cs
addr16
lcall
adc
jnp
cmp
jo
lahf
mov
mov
dec
cs
dec
mov
pop
pop
in
sarl
push
xchg
insl
and
and
les
int
pop
push
sub
jge
ror
push
stos
icebp
bound
fldt
cli
sarl
sbb
xchg
enter
repz
mov
stc
cmpsb
ficoms
dec
cltd
fdivs
cwtl
bound
pop
or
std
dec
or
arpl
popa
leave
lods
lret
test
cmpsl
mov
or
pop
inc
scas
shl
push
mov
inc
cltd
out
rcr
dec
mov
jp
xchg
xchg
es
hlt
inc
and
popf
fildll
sbb
test
jne
inc
arpl
sbb
or
es
fcmovnu
stc
pop
pusha
cmp
sbb
out
outsl
jnp
in
ja
js
mov
ja
dec
fisubrs
add
out
ret
repz
mov
or
add
dec
sbb
dec
mov
cld
cwtl
sbb
rorb
mov
and
out
fisttpll
sbb
mov
dec
outsl
je
add
sbb
xchg
fistps
jbe
sbb
scas
das
or
leave
mov
xchg
or
rorb
mov
xor
mov
dec
xchg
mov
sbb
and
cli
jne
test
aam
and
jecxz
xchg
lea
lock
movsb
loop
push
jge
orb
scas
ficoml
sub
adc
fistpll
in
aas
sbb
sbb
push
and
fimull
scas
and
pop
pop
mov
out
add
lods
sti
sbb
rorl
mov
jno
lahf
out
ljmp
repnz
or
pop
arpl
mov
stos
sbb
jbe
icebp
sahf
out
mov
pop
out
dec
sub
gs
sbb
pop
pop
es
jmp
cltd
pushf
les
out
push
sqrtps
push
cmc
dec
pop
cmp
mov
insl
mov
push
in
shrb
mov
jno
mov
lret
jl
mov
push
popl
push
lods
xor
xor
or
ficomps
ja
sbb
in
jbe
dec
cmp
inc
stos
cmp
or
jb
out
std
sub
mov
aaa
push
sbb
dec
je
lcall
fcmove
gs
roll
xor
les
mov
mov
hlt
jnp
add
cltd
call
jmp
das
cmp
dec
js
mov
sub
shl
sbb
mov
jae
mov
fnsave
xor
int3
cltd
mov
stos
mov
or
inc
loope
sarl
and
and
jne
add
loopne
jns
gs
mov
xor
sub
in
mov
add
dec
shlb
ja
nop
and
dec
inc
xor
nop
jnp
mov
xchg
popf
inc
pop
cmp
loop
mov
lock
jmp
ljmp
lcall
add
inc
fists
xor
xchg
jnp
mov
jne
push
mov
out
fucomp
outsl
hlt
push
repnz
imul
cmp
sarb
mov
cmp
push
adc
xlat
and
xor
mov
or
dec
imul
aaa
outsl
or
adc
jbe
push
pop
cmc
sbb
lcall
loope
jae
xlat
test
lea
lea
icebp
in
xor
dec
imul
inc
xchg
pop
cmovl
fdiv
pop
lods
adc
shl
jb
stos
mov
pop
cmp
test
cmp
nop
inc
push
out
mov
pop
mov
dec
adc
pop
adc
sbb
addb
adc
sbb
mov
xor
push
ret
dec
lods
inc
addb
add
cmpsb
pop
push
xchg
bound
and
mov
loope
add
and
add
popf
jg
mov
sbb
sub
mov
filds
out
jmp
lods
rcrb
movsl
add
push
scas
mov
test
in
adc
insb
xchg
mov
cmpl
pop
fadds
pop
leave
mov
push
cli
stos
out
movl
inc
xchg
into
dec
cmp
int
and
ss
xlat
out
movsb
push
shr
cld
push
inc
add
in
xchg
dec
in
mov
outsl
mov
push
es
mov
into
movsl
js
mov
push
dec
mov
xor
lods
mov
les
xchg
in
mov
sbb
scas
rolb
fistps
pop
push
std
shrb
icebp
imul
roll
mov
aad
xlat
xchg
mov
pop
sbb
cli
gs
sub
fmuls
outsl
pop
mov
mov
bound
pop
or
cli
lds
test
shr
adc
jg
test
xchg
ret
cltd
in
mov
gs
mov
xor
push
das
and
fimull
shll
repnz
subl
sti
aam
in
sub
repz
inc
daa
clc
dec
loope
push
cmp
cmpsb
pop
imul
push
xchg
xor
inc
jno
cmpsb
mov
lock
fsubp
pusha
movsb
pop
lcall
out
insl
jbe
mov
mov
sbb
adc
lcall
mov
in
das
icebp
call
jecxz
xor
cmpsb
xchg
mull
xchg
into
mov
ja
popa
sub
icebp
jmp
bsf
jmp
xchg
xor
xchg
cld
xchg
dec
jnp
mov
pop
test
in
sti
mov
sbb
jmp
in
mov
outsb
shll
mov
fisubrs
xlat
push
push
mov
adc
jmp
mov
movsl
mov
pop
daa
gs
stos
inc
adc
pop
and
outsl
leave
push
sbb
pop
push
out
sbb
jp
fldz
imul
pop
loop
jle
imul
das
mov
ss
fldl2e
cmc
jl
pop
and
lea
movsb
out
sub
xchg
hlt
ss
jp
jno
imul
fs
push
inc
movsb
sub
movb
mov
push
mov
adc
int
les
pop
xchg
fsubs
sub
or
shll
cmp
loopne
sbb
clc
mov
lcall
inc
sbb
add
mov
std
mov
popa
insl
int3
out
arpl
xchg
xor
ds
jo
and
jno
jmp
xchg
dec
xchg
mov
jae
dec
mov
sti
sbb
andb
out
in
push
pop
cmpsl
adc
lods
pop
pusha
mov
mov
leave
fucomp
add
push
cmp
lret
mov
cmp
xor
test
imul
xchg
lock
mov
pop
repnz
xor
jno
jp
cmp
fildl
mov
sbb
rcll
xor
pop
inc
pop
sbb
iret
lahf
xchg
mov
iret
call
std
outsl
push
je
lcall
push
jl
divl
push
jne
add
dec
xorb
lods
cld
test
ret
jo
ss
adc
movsb
cmp
mov
test
clc
mov
jmp
mov
lock
mov
mov
inc
jmp
fcmovnbe
jo
push
inc
stc
pushf
ljmp
sub
cmp
insl
dec
and
mov
scas
mov
mov
mov
fnstcw
inc
dec
xor
jmp
sbb
jp
mov
fs
ljmp
outsb
popf
in
incb
les
mov
outsl
or
ficomps
dec
dec
sahf
or
aad
insl
outsl
cmp
push
add
insl
mov
xchg
fidivl
jmp
lret
divb
mov
cmp
dec
xor
dec
and
in
mov
push
jnp
popf
daa
mov
or
lock
mov
mov
dec
and
fisubs
ficoms
xchg
push
jmp
in
scas
jecxz
lock
xor
fs
rcpps
jg
push
xor
enter
xorb
inc
jb
mov
mov
xchg
xor
ljmp
stc
gs
lret
subb
filds
and
mov
and
insl
mov
jnp
push
pop
loopne
or
jle
cmp
mov
and
nop
cmp
or
cwtl
add
shll
into
jo
inc
xchg
push
xchg
add
dec
adc
das
shll
loop
mov
gs
xchg
pushf
leave
stc
mov
gs
xchg
imul
loopne
and
fistpll
push
out
mov
loopne
enter
repnz
push
inc
xchg
mov
jb
push
lret
mov
nop
int3
inc
rclb
and
pop
xchg
js
leave
fs
mov
and
or
dec
fistpll
mov
fistpll
popa
into
xchg
dec
dec
add
cli
pop
lods
pop
std
adc
ja
cmpsl
aam
cmpsl
push
or
jb
push
pop
push
fsubrp
jo
repnz
test
aaa
inc
roll
aas
push
shlb
dec
mov
jno
jmp
shlb
cmpsb
test
call
pop
push
push
lods
or
sbb
jnp
jno
adc
jle
mov
scas
rolb
xor
jb
cli
aas
sub
or
lods
pusha
push
addr16
sbb
cmp
jecxz
rclb
adc
seta
xchg
push
jl
sarl
push
adc
int
stos
negl
lods
ret
rclb
adc
cmc
jp
mov
pop
outsl
xchg
repnz
test
lea
mov
mov
add
sbb
push
loopne
lods
cmp
ds
js
fcoml
and
add
cmc
dec
not
jg
scas
mov
popa
or
insl
pusha
cmp
shll
sub
jb
popa
push
pop
das
add
mov
hlt
gs
mov
add
imul
dec
lods
adc
gs
js
mov
mov
mov
inc
andb
mov
sub
shlb
mov
push
outsl
pop
add
and
imul
icebp
roll
bound
je
loopne
add
fsubrs
dec
mov
or
lahf
fcmovnbe
mov
dec
xchg
inc
pushl
call
jbe,pn
mov
sbb
lret
pushf
mov
fsts
or
imul
cmp
mov
aad
xor
xor
jae
mov
jns
jle
adc
mov
cmc
fbld
out
out
lcall
sub
loopne
fnstsw
mov
test
jmp
popa
dec
dec
imul
out
sbb
sub
jbe
ljmp
ja
popfw
ret
shrb
ljmp
stos
pop
sub
mov
jno
ds
push
out
pop
pop
shrl
jae
insb
pop
or
push
fdivrl
jns
test
fidivs
aam
push
ja
adc
pop
addr16
inc
jno
in
jmp
push
jmp
rorb
jle
cmp
hlt
or
mov
cld
sbb
xchg
jb
popa
outsb
lret
test
fstps
jo
rcl
imul
popa
jge
gs
sub
mov
ljmp
fsubs
repnz
cmp
fcomps
adc
xor
push
cmpsb
lods
divb
lahf
inc
into
jge
push
ljmp
loope
test
push
cmpsl
pop
sbb
cltd
jnp
mov
bound
fcomps
pop
loopne
add
mov
or
stos
out
jg
xor
mov
mov
push
ljmp
sub
jecxz
pop
adc
or
and
inc
and
xor
bound
xor
push
push
test
sub
jl
mov
or
jg
mov
mov
mov
int3
ss
int
adc
bound
test
shll
xchg
xchg
push
out
add
call
popa
ja
inc
shr
icebp
imul
shrl
test
fildll
dec
in
es
sub
push
fdivs
add
xchg
loopne
testb
enter
adc
leave
dec
and
loop
lcall
cltd
ljmp
aaa
or
sbb
in
lds
lret
sti
add
fistpl
iret
imul
or
arpl
xor
sbb
in
xchg
or
test
cmp
xor
xchg
sti
into
push
lock
fxch
sbb
xlat
adc
xor
inc
xchg
mov
add
lds
scas
ja
mov
loopne
rcrl
mov
data16
mov
push
xchg
xchg
and
loope
mov
push
xor
pop
dec
inc
enter
pop
in
sub
insb
jno
dec
fdivrl
xor
sub
popf
xchg
jne
stc
fcomi
xor
aas
je
aas
nop
pusha
dec
data16
fsubr
into
in
popf
jmp
cmpsl
fildll
test
mov
lcall
sti
xchg
inc
dec
loop
push
sbbl
push
mov
ja
jmp
mull
scas
mov
xor
or
dec
fldt
jmp
push
xchg
shrb
mov
or
xchg
icebp
and
pop
fsubrl
pop
xor
xor
addr16
mov
fstpl
mov
pushl
les
data16
in
cmp
pushf
dec
neg
ret
jbe
outsl
inc
mov
xchg
mov
cmp
cmp
lods
sbb
imul
lods
fnstsw
push
or
mov
pushf
ja
movsb
shll
pusha
cmpsb
mov
sbb
leave
push
push
jl
scas
sub
mov
loop
hlt
push
scas
or
negb
xchg
popf
mov
xchg
stos
test
add
cmc
sahf
lret
scas
push
outsb
sbb
in
stos
or
jl
push
mov
test
mov
xor
or
mov
sub
sub
cmp
jb
cmp
in
mov
push
mov
cmp
xor
jmp
sub
push
push
pushf
repz
lock
push
and
xor
in
outsl
fsubr
jae
push
cmp
jbe
sbb
add
ljmp
outsl
push
std
dec
sub
pop
sub
xor
fidivrs
mov
rcl
cmp
pop
mov
pop
dec
add
mov
inc
jge
xor
in
test
jne
mov
cli
mov
dec
sub
scas
pop
push
push
sbb
das
xchg
mul
lock
mov
xchg
arpl
pop
sbb
lods
push
push
arpl
outsl
xchg
adc
xor
lahf
add
nop
push
cmp
repnz
mov
cmp
sub
push
mov
inc
push
into
mov
cwtl
mov
in
cmp
mov
insb
push
xlat
cmc
mov
pushf
jecxz
in
in
sub
stos
leave
dec
loope
or
sbb
and
push
cmpsl
movsl
mov
xchg
push
enter
dec
inc
sub
jno
les
repz
or
pop
dec
es
scas
or
push
ds
push
sbb
mov
roll
mov
inc
hlt
scas
xchg
add
sub
sarl
push
movsb
loopne
insb
js
nop
cld
inc
ret
outsb
dec
mov
fnstsw
inc
ret
test
pop
adc
push
test
ficompl
shl
mov
movsl
sub
mov
loopne
push
insb
fiaddl
mov
sub
cli
leave
aaa
jno
mov
push
dec
lods
test
cmp
addr16
push
data16
adc
ljmp
gs
stos
fcoms
bound
jb
insb
adc
push
imul
repnz
push
jne
aam
dec
mov
hlt
push
outsb
jbe
aas
push
jmp
add
popf
je
mov
frstor
daa
les
mulb
addr16
mov
dec
pop
jne
jg
push
pop
jbe
fistpl
lret
mov
sub
mov
push
mov
std
mov
imul
or
mov
mov
sbb
xchg
pop
and
movsb
or
adc
ret
cltd
push
dec
mov
inc
and
push
adc
movsl
nop
cld
jb
adc
out
cltd
cmp
std
fcomp
data16
lock
ds
mov
xchg
jne
mov
mov
fcoms
dec
lds
mov
arpl
jno
jae
pop
sbb
fadds
iret
jbe
stc
orb
mov
cmpsb
cmp
adc
xor
cmp
or
popf
mov
test
jbe
mov
test
cmpsb
mov
mov
mov
cmpsl
mov
in
idivl
cli
shl
mov
into
cmpl
pop
lea
sub
lahf
push
push
lahf
or
cmp
iret
inc
jae
notl
in
jbe
cmpsl
lock
push
sti
and
lcall
pop
xchg
das
cmp
jbe
fwait
gs
or
out
cltd
ja
xor
fdivl
xchg
mov
mov
adc
and
out
in
hlt
cmp
stos
sub
adc
daa
cmp
push
pop
dec
outsb
shlb
ds
lods
test
rcr
adc
nop
cmp
xchg
test
inc
js
dec
jbe
sahf
pop
mov
pop
jae
xchg
fisttps
notb
dec
loop
lock
mov
or
pop
repnz
shl
add
pop
scas
and
or
clc
je
push
aaa
movsl
or
jae
lods
or
jne
mov
in
mov
inc
ljmp
cld
test
arpl
push
outsb
dec
in
mov
sub
cmpsl
inc
push
mov
push
jge
dec
cs
sbb
add
jle
lcall
mov
into
lcall
sub
movsl
aam
out
cmp
and
sbbb
and
cli
mov
pop
jbe
mov
popf
popf
pop
sbb
xor
xor
imul
lahf
je
xchg
icebp
mov
dec
mov
icebp
iret
sbb
sbb
dec
push
mov
inc
pop
ja
shll
jl
xlat
mov
lock
push
out
bound
fdiv
xchg
insl
add
and
shl
inc
imul
dec
fisubl
fsubs
fs
mov
pop
into
pushf
jnp
fwait
popl
sub
cmp
jns
int
call
sub
insb
sbb
mov
mov
arpl
icebp
js
stos
lods
adc
insb
sbb
pop
nop
icebp
pop
cmp
into
sahf
sbb
in
out
inc
sub
int
pop
arpl
jecxz
movsl
into
fldenv
push
pop
xor
xor
insl
adc
sahf
in
xor
inc
mov
gs
ljmp
out
gs
movsl
lods
ja
ss
or
aaa
fs
lret
cmp
filds
loope
sbb
jle
push
lea
jg
in
negb
cmp
cltd
clc
and
sub
mov
in
xchg
fnsave
loopne
adc
sbb
rcrl
shrb
and
inc
mov
cli
mov
inc
push
leave
mov
das
mov
push
in
mov
inc
sub
es
and
and
xor
jnp
rcpps
iret
rcrl
push
fisubl
add
mov
dec
cmpsl
dec
dec
add
stos
mov
cli
scas
ret
jle
loopne
lods
mov
fs
dec
jae
jle
xchg
arpl
mov
fisubrs
aas
dec
xchg
cmc
dec
inc
test
inc
movsb
ja
xchg
repnz
movsb
mov
ja
pop
adc
es
movsl
push
fmull
mov
stc
mov
add
lahf
cwtl
mov
sub
pop
cmpsl
fmul
mov
jp
push
pop
es
addr16
jecxz
mov
sarb
add
xchg
sub
and
mull
ljmp
sti
sti
add
aam
mov
push
fldcw
test
and
aam
cmp
insb
sahf
mov
push
in
ss
in
out
mov
setp
rcrl
and
mov
add
aaa
jb
ja
add
lock
sbb
pop
loop
rcrb
sub
gs
adc
sbb
rorl
inc
mov
outsl
sub
dec
sahf
xchg
and
je
adc
adc
lock
xchg
mov
lcall
imul
repnz
push
xorb
sub
addr16
push
jno
popf
xor
dec
sub
shll
in
insb
sahf
mov
pop
or
jb
ret
lret
fst
lret
ss
xor
adc
jb
test
jae
in
sbb
cmpsl
lods
subl
sbb
mov
scas
mov
out
ja
insb
imul
aaa
mov
xlat
pop
movsl
aaa
xchg
cli
stos
xor
fs
mov
ret
jnp
pusha
rolb
xor
std
inc
movsl
roll
jnp
pop
push
lods
leave
push
inc
sub
inc
inc
inc
xchg
shll
mov
xchg
dec
jecxz
mov
mov
fcmovne
out
mov
cmpb
push
jle
adc
push
mov
repz
push
pop
push
rorb
sahf
xor
test
pop
ds
pushf
addr16
shll
stc
mov
jb
mov
out
ljmp
mov
mov
mov
lahf
lds
test
sti
fldcw
mov
gs
lret
gs
mov
xor
add
daa
pop
lock
or
xchg
jg
or
call
rol
into
mov
movsl
mov
mov
inc
mov
ja
in
andl
jns
fildll
mov
push
les
into
sub
in
ficoml
mov
inc
roll
test
sub
roll
stc
cmc
stc
push
or
gs
js
movsl
xor
sbb
adc
out
aam
mov
hlt
adc
adc
sbb
sub
mov
nop
push
outsb
push
cmp
dec
pop
es
fcomp
leave
push
push
sub
pop
jp
pop
jnp
loopne
adc
mov
mov
push
xchg
dec
inc
lods
imul
les
push
pushf
into
das
hlt
cmp
in
xchg
add
mov
lds
aaa
inc
lret
cmpsl
call
jecxz
addb
mov
jnp
xchg
adc
sub
out
arpl
push
into
sbbb
lods
xchg
sbb
xor
lahf
ljmp
cmp
sub
shl
les
sub
push
and
adc
cmp
sbb
dec
enter
xor
jle
dec
jne
call
pusha
sti
inc
push
mov
jecxz
das
out
xchg
xor
xor
scas
mov
and
rorl
or
cmpsb
sbb
adc
scas
enter
mov
inc
pushf
cmp
int
call
adc
aam
jbe
sub
sub
inc
leave
add
into
add
push
inc
mov
dec
repnz
pop
cltd
gs
shl
adc
dec
iret
or
mov
xlat
lret
and
sarl
inc
sbb
dec
add
mov
call
adc
xchg
push
sbb
sti
push
cltd
ret
nop
popa
dec
ja
dec
cmpl
xlat
andb
out
push
or
push
or
sbb
adcb
inc
sub
fucom
and
idivb
sub
stos
mov
mov
or
xchg
pop
mov
push
sub
add
push
mov
test
jp
sub
in
fs
mov
adc
lock
lds
add
push
push
adc
dec
insb
or
mov
shll
dec
movsb
fimuls
sub
gs
add
mov
mov
pushf
cli
arpl
inc
cs
push
notb
mov
dec
mov
xor
stc
int3
or
sub
mov
stos
push
enter
loop
adc
hlt
dec
pushf
int3
sub
inc
dec
sti
aas
sub
xor
jno
dec
orl
and
out
pop
and
data16
pushf
fs
jae
jns
mov
cmp
pusha
push
inc
sub
aad
hlt
leave
xchg
out
push
ljmp
rclb
and
push
outsl
inc
pop
cwtl
push
jecxz
inc
or
push
clc
cld
das
cmpb
sti
xor
sbb
hlt
movsb
jbe
xchg
jmp
or
loope
pop
jle
ror
movsb
inc
xchg
push
loope
sbb
xchg
adc
cmp
sbbl
int3
mov
jecxz
cmp
xchg
adc
jmp
xor
lds
hlt
dec
fucomp
inc
xor
rcrl
jle
enter
add
ljmp
int
fwait
jge
or
xor
loope
das
test
rcll
and
push
push
sub
or
rolb
or
gs
jb
inc
add
lea
int3
dec
test
popl
push
and
aad
adc
cld
cmp
push
push
fiadds
jmp
loope
sub
or
dec
pop
cld
leave
lret
test
push
mov
push
inc
out
push
mov
js
sub
popf
ret
adc
xor
fwait
jo
aaa
es
sbb
dec
fisttpl
push
imul
fwait
mov
mov
ret
jle
mov
dec
mov
adc
gs
cmp
lahf
sbb
dec
xchg
push
movsl
xor
pop
dec
jge
adc
imul
ds
cmp
outsl
sub
xchg
push
push
xchg
cmp
mov
sub
pop
inc
xchg
addl
lock
mov
push
inc
cmp
neg
jge
dec
xor
and
fwait
es
sub
add
mov
or
mov
in
cmpsl
add
cld
xor
jmp
sbb
movsb
pop
pop
xchg
dec
cmp
jbe
dec
outsl
adc
and
pop
jno
fiaddl
add
pop
push
inc
in
xchg
adc
inc
mov
popf
jle
jno
dec
gs
mov
outsl
lret
mov
mov
push
sub
mov
adc
test
pop
sahf
lds
shlb
nop
cld
xor
mov
clc
sti
push
out
pop
xchg
fiaddl
enter
or
js
out
call
adc
popa
in
movsl
xor
es
clc
sbb
cmc
clc
xchg
sbb
loop
nop
mov
hlt
fsubrs
xlat
inc
cmpsl
and
or
loopne
mov
dec
push
xor
cwtl
lods
xlat
nop
push
add
mov
arpl
mov
movsl
orb
inc
bound
xchg
add
mov
cmp
shr
stc
push
push
sbb
cmp
jg
and
sbbb
sti
inc
cmp
dec
cmp
lcall
ret
jbe
popa
daa
dec
jg
push
cli
rol
dec
mov
xchg
roll
lret
add
movsl
aam
mov
sbb
cli
mov
in
imul
sbb
ffreep
fidivl
sbb
mov
jle
insb
pusha
push
ja
lret
cmp
and
xchg
jl
xor
lods
mov
pop
mov
lret
repz
int3
sub
mov
sbb
lret
xchg
inc
popa
mov
mov
inc
xor
mov
mov
add
addr16
fadds
mov
mov
sub
pop
mov
sub
xor
leave
jle
clc
cmp
inc
rorl
paddb
dec
fadds
outsl
cli
popa
inc
xor
xchg
sbb
pop
mov
xchg
xchg
daa
call
push
cmp
adc
sbbl
inc
outsb
sahf
lret
repz
add
movb
int3
sub
dec
mov
or
sub
fdivr
scas
into
cmpsl
cltd
fadds
ret
je
inc
add
push
imul
inc
fnstsw
int
cmp
jns
cmpb
dec
xor
es
cli
push
inc
pop
data16
push
and
scas
adc
push
and
ficoml
xor
xchg
insl
xor
push
shlb
mov
xchg
shlb
xchg
mov
push
data16
loop
xchg
sahf
xor
lods
mov
mov
lahf
and
sbb
ficomps
cmp
sbb
imul
cmpsb
pop
xchg
in
outsl
cli
xchg
jl
jnp
dec
inc
sub
xchg
sub
in
fsts
cmpsl
inc
test
adc
xchg
or
or
imul
icebp
fimull
data16
clc
cli
or
dec
xor
mov
add
ficoml
out
xchg
cmp
mov
mov
cmpsb
fwait
pusha
sti
push
jb
sub
and
cltd
std
xor
and
adc
sti
cwtl
jge
loope
rorb
outsb
mov
and
inc
fdivr
das
push
xor
out
cmp
je
lock
rorb
fs
and
xor
shll
cmp
adc
scas
mov
cmpsl
xchg
lea
mov
repz
ret
cmp
xor
filds
dec
int3
xlat
xchg
fimuls
outsb
add
fildll
jp
push
sub
nop
xor
mov
cmp
lods
mov
sbb
jae
mov
mov
ljmp
fcmovne
lea
jne
ljmp
inc
fucomp
mov
aam
mov
adc
cmp
insl
add
in
in
bound
lods
or
sub
lea
mov
sbb
and
outsl
push
addl
addr16
loop
roll
cmp
addb
sahf
sub
pop
pop
in
cld
inc
imul
or
mov
jns
mov
ds
add
mov
insl
mov
pop
loop
inc
or
sbb
testl
cmp
bound
push
jg
aam
cwtl
inc
sub
into
insl
jmp
lea
ss
test
mov
xor
loop
or
movsb
sub
aaa
xchg
mov
insb
sub
xchg
cmp
jmp
loopne
imul
pop
cmp
mov
ret
cmc
add
jmp
mov
push
mov
hlt
iret
ljmp
repnz
mul
dec
sarb
adc
cmpsl
decl
lods
fisubs
and
arpl
leave
and
add
fldcw
test
and
adc
dec
stc
mov
mov
push
cmp
mov
loopne
sahf
nop
sub
jl
sbb
fcmovbe
mov
test
aaa
jae
call
lahf
lock
out
in
xor
push
adc
daa
test
jo
ss
dec
scas
jl
shl
inc
in
sbb
fcmove
mov
dec
xchg
dec
outsb
push
repz
cmpsl
mov
scas
xchg
or
xchg
scas
clc
enter
fwait
hlt
xchg
pop
cmp
imul
ret
xchg
dec
jle
mov
mov
daa
shll
cmp
sahf
inc
scas
push
arpl
out
mov
dec
add
mov
icebp
in
inc
adc
cli
mov
push
mov
or
jge
std
add
adc
in
xor
pop
outsl
add
mov
lret
in
add
pop
roll
dec
inc
inc
rclb
fidivs
insb
mov
pop
or
and
jle
xchg
mov
lea
pop
sbb
cmp
add
jecxz
ret
imul
mov
dec
dec
and
cmp
cmp
adc
add
jg
sbb
cmp
add
in
mov
pop
adc
lds
lcall
daa
sti
test
push
or
sbb
sub
cli
xchg
shlb
pop
lods
dec
popf
mov
mov
lahf
hlt
sub
push
out
inc
sbb
lret
outsb
pusha
bnd
xor
andl
fcmovne
xchg
cmp
or
sahf
cld
pop
test
mov
mov
lods
or
fnstsw
insl
int
or
imul
clc
cmp
dec
insb
mov
pop
aaa
repz
arpl
cltd
add
mov
pop
movsl
mov
psubsw
or
insb
test
out
pop
enter
ficompl
inc
fistps
fsts
mov
adc
sbb
int3
gs
popa
sub
and
add
inc
lods
movsl
outsb
rclb
addr16
pop
pop
dec
popa
inc
mov
out
lea
imul
mov
mov
lret
pusha
jmp
shll
pop
mov
adc
xor
in
xor
enter
xchg
dec
dec
addl
mov
clc
out
or
adc
push
nop
xor
push
jbe
sbb
addb
or
adc
repz
jb
shrl
sbb
cwtl
and
or
jns
mov
and
mov
stos
lods
adc
sbb
dec
cmpsl
nop
mov
push
shrl
mov
push
mov
jecxz
xor
cmp
dec
push
push
pushf
adc
ficomps
inc
sub
pop
inc
fsts
rcrl
jb
mov
fstl
addr16
push
inc
das
mov
sahf
std
and
in
inc
mov
jno
shll
push
sub
dec
push
out
pop
imul
jb
xchg
pop
filds
jnp
mov
push
flds
sub
cmp
adc
lea
enter
call
ljmp
xchg
int
cmp
aas
mov
jne
or
out
test
mov
mov
imul
push
sub
xor
bnd
lea
imul
mov
aaa
sbb
enter
pusha
bound
aaa
push
mov
adc
aas
adc
jb
sub
jge
or
mov
insb
mov
pusha
imul
mov
pushf
loop
dec
cwtl
jp
int3
push
nop
pop
loope
mov
cmp
ja
and
outsb
mov
iret
fwait
inc
lea
data16
je,pt
sub
rorb
xorb
dec
mov
jge
inc
dec
pop
int3
sahf
ret
jo
into
mov
test
fs
xchg
mov
dec
scas
stc
fcmovnb
rcr
mov
jp
in
dec
loop
xorl
dec
fistpll
das
sbb
fwait
dec
fiadds
clc
cmpsl
push
inc
test
out
ja
inc
dec
out
or
std
dec
ja
lahf
mov
ja
push
push
jno
insl
jnp
push
cmp
dec
jae
movsb
jle
inc
add
loope
repnz
mov
sbb
pop
xchg
cmpsl
mov
inc
movsb
sub
loopne
mov
pop
sub
imul
repnz
js
jno
test
out
push
inc
scas
repz
xor
pop
mov
lcall
sahf
sub
sarl
mov
sub
inc
and
xor
inc
movsl
or
push
scas
push
adc
std
enter
pop
fsts
inc
push
inc
rcrl
lea
jge
inc
inc
jns
or
jg
dec
pop
pusha
fs
cmp
inc
pusha
scas
sbb
fistpll
lahf
and
in
jge
in
and
or
jo
or
push
xchg
mov
dec
sub
jecxz
ficompl
dec
xor
pop
adc
xchg
or
ficomps
sbb
and
mov
mov
and
inc
mov
inc
mul
aaa
repnz
inc
pop
sub
add
pop
jge
dec
insb
in
mov
fcoms
mov
scas
sbb
insl
loop
adc
sub
xchg
test
sbb
rol
push
push
inc
shlb
push
xor
add
fnop
popa
inc
jecxz
arpl
mov
test
aad
out
jno
jo
mov
sbb
mov
cwtl
dec
ret
mov
pop
mov
dec
ret
mov
jg
out
adc
data16
jbe
hlt
call
movsl
rcrl
mov
int
add
xor
paddd
xchg
repz
mov
popa
loopne
push
mov
mov
jbe
inc
mov
xor
popf
xchg
sub
sahf
add
cmp
lcall
mov
loope
shlb
push
push
jg
xlat
mov
popf
xor
cmp
xor
add
test
xor
shll
adc
mov
adc
push
mov
push
sbb
cld
xchg
shll
out
dec
in
push
inc
stc
enter
shrb
dec
les
in
mov
inc
cmc
cmp
add
lcall
out
loope
das
adc
sub
pop
mov
xchg
rcll
mov
fwait
pop
call
bound
sub
addl
xchg
lret
push
add
and
push
in
adc
push
inc
cld
push
mov
syscall
mov
scas
pop
mov
mov
out
pop
sbbb
mov
push
mov
cmp
dec
pop
push
ds
sbb
push
pop
and
pushf
lret
push
pop
cmp
pushf
scas
push
scas
xchg
jmp
sbb
repnz
test
stos
add
xchg
add
fnstcw
mov
inc
dec
sbb
lds
cmp
push
test
addr16
daa
push
loop
test
sub
push
jb
lds
or
push
mov
sbb
pop
lea
fsubs
add
cmp
fldl
inc
and
cli
xchg
dec
cwtl
test
loopne
sti
lea
arpl
and
and
or
int
rclb
addr16
test
xor
mov
sti
mov
xlat
cld
cmpsl
xchg
fsubr
ss
int
repnz
cmp
jmp
push
cmp
aad
mov
movsb
sub
rcrb
repnz
or
adc
inc
repz
lea
inc
adc
and
push
add
sbb
ja
movsb
adc
inc
ret
cli
pop
ds
and
sti
lods
xchg
mov
mov
pop
xchg
popa
inc
xchg
mov
lahf
adc
sub
syscall
test
fidivl
movaps
push
pop
mov
or
cmp
adc
xor
fcoms
movsb
dec
mov
je
fwait
jbe
inc
mov
mov
rep
into
imulb
jo
in
lea
xchg
and
ds
leave
xor
loope
mov
insb
pop
or
push
cld
pop
xchg
inc
adc
jp
lahf
call
push
fimull
mov
pop
or
sbb
lods
sub
aaa
inc
xor
sahf
in
and
jmp
add
sbb
fmulp
test
loope
mov
punpckhdq
rol
decl
arpl
sub
mov
scas
adc
pop
negb
jo
div
push
and
ds
jl
out
loopne
inc
xchg
testl
xor
pop
sbb
fildll
add
ljmp
xor
mov
cmp
jmp
sub
and
sbb
arpl
inc
ljmp
dec
pop
push
or
mov
fisubrs
or
or
pop
cmp
cmc
adc
push
dec
inc
lcall
lret
addr16
je
loopne
sti
jle
sbbl
mov
xor
pop
fs
pop
iret
cwtl
cmc
mov
jo
push
cli
and
icebp
mov
inc
rcrl
mov
roll
mov
aam
fdivp
cmp
cmp
pop
push
fcoml
jl
lea
enter
jb
cmp
or
mov
push
lods
movb
mov
in
je
jne
aad
fs
in
xor
add
loopne
addr16
arpl
mov
test
xlat
xchg
dec
push
sbb
shl
jg
mov
push
loopne
xchg
or
int
or
add
test
insb
sbb
mov
cltd
inc
mov
call
icebp
push
push
subl
popl
xor
mov
jle
jo
inc
ljmp
mov
enter
or
daa
in
push
addr16
repnz
mov
mov
pop
loopne
aaa
jp
sbb
loopne
sub
jno
adc
hlt
mov
mov
orb
cld
push
adc
test
mov
fimuls
aas
dec
dec
shlb
stos
mov
push
hlt
and
xor
xchg
jg
and
clc
mov
lcall
sub
sbb
test
lock
sub
std
sub
jl,pn
lods
inc
add
dec
pushf
cmp
sti
je
pushf
sbb
adc
lcall
and
push
or
ret
and
sahf
sbb
les
bound
jno
and
adc
test
imul
push
loope
adc
mov
dec
jg
push
or
add
loop
cmpsl
xchg
rcll
push
adc
incb
inc
and
or
sub
cmpsb
cmp
and
or
jns
cmp
xchg
test
icebp
std
push
inc
inc
or
inc
sbb
repz
into
add
imul
leave
enter
jmp
jb,pt
xor
add
or
cmp
sub
out
sub
or
popa
ds
and
repnz
inc
movsb
lods
inc
lcall
fwait
push
xchg
sub
aam
es
loopne
aas
aad
pop
ret
sbb
loopne
xchg
in
pop
out
cmp
jp
xor
stos
xor
sub
cmpsb
or
into
loope
es
sarb
fcomps
test
pop
cmp
leave
cmp
cmp
jge
dec
lods
dec
mov
in
or
jno
pop
imulb
js
sbb
pop
jne
mov
ret
dec
push
xor
inc
movsl
sarb
rol
popf
mov
fldcw
mov
lret
icebp
out
fs
lret
scas
lret
mov
xor
lea
lds
into
mov
xchg
dec
cmpsl
xchg
stc
jno
loopne
or
int
gs
cli
daa
jo
loop
int
jne
jle
loop
jg
ja
mov
jnp
pop
adc
push
push
es
pop
andl
pop
gs
jp
sbbb
addr16
sub
mov
jge
scas
pop
fnstsw
add
rcrb
lret
aaa
push
aas
into
cld
ja
ret
scas
sbb
stos
lock
mov
les
sar
sub
ja
mov
shrl
mov
mov
sbb
xchg
lods
or
lds
dec
pop
std
adc
jle
adc
or
int3
inc
push
in
inc
lcall
int
push
push
jae
xchg
cli
xchg
inc
ds
xchg
repnz
adc
xlat
pop
jae
pop
lret
jmp
pushf
nop
aaa
mov
cmp
cmpsb
mov
push
add
add
xor
scas
cmpsl
movsl
int3
inc
add
cmpsl
sub
fiadds
mov
xchg
sub
test
adc
les
mov
std
test
push
xchg
dec
ret
testl
in
mov
es
adc
dec
sbb
fmull
aad
fdivrl
paddq
mov
ljmp
mov
fisubrl
mov
popf
cmp
cmp
push
jno
pushf
jecxz
add
mov
add
xlat
addr16
sub
stc
mov
lds
movsb
pop
testl
arpl
cmp
lret
movsl
inc
xchg
xchg
rep
mov
shrl
adc
out
and
xor
mov
dec
test
addr16
mov
or
jp
jnp
lret
jl
add
sbb
int3
inc
sti
add
fs
mov
inc
movsb
test
lods
cs
xchg
mov
leave
test
fs
xor
mov
jp
lds
mov
mov
mov
or
mov
cwtl
std
cmp
adc
jae
mov
mov
out
icebp
inc
and
testl
xor
std
or
sti
push
xor
push
lea
pop
cmp
imul
mov
jecxz
out
adc
shl
push
in
pop
sbb
in
mov
lret
jecxz
into
dec
cmp
push
ljmp
cmc
ss
gs
adc
inc
add
scas
lcall
xchg
jle
popa
stc
data16
roll
inc
and
sti
outsb
aaa
sub
sbb
insb
cmp
inc
mov
roll
arpl
xchg
push
jmp
adc
jae
in
pop
clc
pop
rorl
cmpsl
push
cli
xor
nop
outsb
test
pop
fistpll
mov
je
and
daa
repnz
movsb
nop
nop
mov
push
mov
dec
push
cmp
add
push
push
ljmp
cmp
lea
lahf
pushf
lods
loop
cmp
push
es
pop
sbb
loopne
subl
mov
cmp
mov
fidivl
jae
cmp
pop
mov
shl
shll
rorb
lods
inc
cmpsl
xor
jnp
loop
dec
scas
ds
pop
jo
jg
or
cmpsl
pop
data16
insl
pop
adc
lds
mov
cmp
iret
arpl
cmp
cwtl
outsb
or
rcrl
cmpsb
jns
ds
mov
ss
mov
cmp
ret
iret
push
xor
roll
cmpsb
xchg
add
shrl
sub
add
jmp
stc
jns
imul
pop
pop
mov
sub
fldl
std
jo
popa
push
loopne
lret
mov
xor
sarl
sbb
arpl
cli
and
cld
inc
fnsave
or
repz
cmp
and
adc
repnz
sbb
imul
lea
das
hlt
jo
clc
pop
ds
xchg
mov
jns
xor
inc
push
push
mov
das
add
xchg
jg
mov
enter
ficoml
mov
cs
sub
hlt
dec
pop
dec
xchg
ljmp
inc
int3
push
push
add
cmp
xor
pop
sub
adc
push
or
or
push
and
adc
jne
call
xor
rorl
dec
data16
out
lods
or
mov
fldenv
dec
es
out
push
iret
outsl
mov
aaa
fwait
cltd
jae
data16
icebp
and
out
shll
dec
mov
movsb
lods
iret
cmp
push
mov
out
in
out
test
mov
sub
push
pop
adc
ret
lahf
loope
repz
adc
scas
lahf
movswl
adc
sti
div
ds
addr16
cmpsl
mov
cmp
mov
cld
sub
xchg
sti
pop
pop
out
pop
mov
lcall
push
mov
jb
lahf
repnz
cmp
popa
daa
out
xchg
sahf
cmpsl
xchg
outsl
fwait
out
jb
stc
fistpll
xchg
cs
push
sahf
ss
repnz
mul
repnz
jns
jns
sub
lret
sar
out
fptan
fbstp
jle
jle
in
jns
pop
enter
outsb
arpl
push
dec
add
iret
rorl
jne
mov
cltd
loop
mov
repnz
mov
cmp
xor
cld
insl
scas
mov
jns
mov
hlt
fmul
mov
mov
sti
sarl
jl
mov
cmp
mov
fists
incl
mov
das
std
out
jne
mov
sbb
add
xor
into
xchg
lcall
jle
cmp
cld
arpl
push
mov
jbe
inc
jno
cmp
or
ficompl
fldlg2
idivb
and
out
xchg
std
mov
mov
fmuls
pop
negb
ja
jge
in
mov
cmpsl
std
dec
insl
cmp
sahf
divb
mov
shr
xchg
or
or
ja,pt
mov
fmul
dec
pop
aaa
bound
sbb
aad
cmpsb
sbbb
jne
out
lds
pop
test
int
xor
sti
jl
jne
aaa
cmp
mov
js
jb
mov
jb
cli
lret
in
repz
mov
aas
repnz
imul
je
outsb
arpl
repz
push
xlat
sbb
dec
dec
int
sbb
push
pop
arpl
mov
sarl
mov
mov
in
leave
sahf
in
int
out
ret
icebp
inc
jecxz
cld
dec
mov
or
es
in
repnz
negl
pop
mov
je
cmp
lods
shrb
fisubrl
adc
fisttpll
incb
mov
std
cmp
jae
xchg
adc
jmp
cmp
test
cmpsl
aaa
std
cs
mov
dec
mov
shlb
cmp
mov
ret
xchg
jbe
jnp
push
iret
outsl
jns
roll
mov
rep
int
xor
mov
je
cmp
popf
cmpsb
out
xchg
xorl
mov
daa
xor
mov
xchg
fwait
jg
dec
pushf
cmp
jmp
pop
in
out
dec
jb
xlat
xor
out
cld
adc
es
mov
dec
cmc
cmp
cmp
dec
hlt
mov
rcrl
iret
dec
cmp
rcr
cmpsl
jp
mull
jae
jae
mov
ficoms
test
pushf
out
jbe
push
cmp
test
mov
push
ja
jle
pop
cmp
push
fbld
cmc
cli
out
jle
pop
jo
pop
pusha
pop
cmp
inc
mov
jmp
cmp
fcmovbe
jae
jmp
ret
out
incl
iret
pop
lock
pop
addr16
std
imul
jg
out
fisubl
xchg
bnd
das
into
jp
jae
and
test
out
cmpsb
mov
andl
xchg
lcall
std
data16
imul
mov
divb
cmpsl
mov
divl
or
adc
sti
push
pushf
fiadds
cmovns
div
or
or
filds
repz
pop
pop
loope
std
xor
mov
sub
lcall
lea
and
jmp
cltd
cmp
ds
fwait
cmpsb
cs
int3
loope
stos
in
pop
cmp
mov
out
leave
popf
neg
pslld
jae
mov
mov
aas
daa
call
jb
xchg
repnz
mov
sbb
cmc
cmp
out
stos
in
cli
pop
xor
cltd
mov
jnp
mov
jnp
mov
aad
pop
mov
push
xor
lahf
cltd
repz
icebp
xchg
adc
sbbl
idiv
mov
mov
mov
popf
jae
cli
mov
cmpsb
scas
shll
mov
xchg
xlat
call
rcrl
xchg
leave
divb
test
es
negb
cli
mov
push
jle
cmp
cmp
jge
jnp
dec
dec
adc
in
repnz
arpl
or
add
fprem1
cmp
imul
mov
pusha
int3
xchg
adc
and
gs
flds
cld
in
rorl
adc
test
xor
push
xorb
dec
jg
xchg
dec
aad
cmpsb
lret
stos
or
jns
pop
jecxz
xchg
pop
xchg
inc
cwtl
aam
cmc
out
mov
adc
pop
xchg
pop
push
js
cmp
sbb
lahf
ret
loope
sub
ja
scas
mov
out
in
test
mov
ret
rclb
loop
and
ds
push
mov
and
sbb
adc
xchg
repz
pop
hlt
add
pop
add
add
add
or
pop
dec
movsb
mov
or
sbb
lods
sarb
test
dec
add
cmpl
push
adc
lock
and
sbb
sbb
xchg
pop
das
ja
pop
loope
jno
jmp
pop
xchg
loopne
ja
mov
shl
xchg
adc
sbb
sub
js
and
sbb
inc
lret
mov
and
or
add
inc
rcrl
cmp
rorl
mov
orb
sub
clc
in
nop
dec
mov
mov
jmp
xor
sahf
push
inc
cmp
dec
cmp
addb
aad
aas
and
xchg
ret
lea
and
dec
push
jecxz
lret
sbb
or
fwait
sti
insb
mov
inc
lock
push
mov
xor
lea
cltd
inc
rolb
and
scas
sub
inc
int3
and
jne
inc
push
std
shl
adc
push
imul
mov
iret
pop
jnp
xlat
imul
cwtl
insb
mov
add
dec
daa
movlps
shr
and
hlt
mov
jbe
cmp
in
xor
sbb
mov
loope
sahf
mov
pop
out
mov
mov
add
loope
push
inc
rolb
pusha
sbb
adc
xor
pop
inc
into
in
lock
sahf
cmp
sbb
add
imull
sbb
inc
adc
test
ja
daa
pop
mov
and
xchg
sub
jecxz
rorb
in
xor
sub
mov
mov
das
loop
push
sbb
and
rol
jge
add
sub
or
out
sbb
jns
clc
arpl
jg
dec
cmp
xchg
sbb
into
inc
xchg
leave
jmp
pop
inc
mov
inc
loopne
sbb
inc
mov
sbb
inc
jge
push
bound
enter
es
push
pop
pop
mov
mov
lock
push
inc
adc
xor
sti
fldl
out
adc
add
or
add
sub
xchg
loop
loope
imul
fidivs
add
shrb
push
mov
mov
pop
int3
cli
ss
popa
inc
jg
mov
mov
dec
lret
pop
movsl
or
add
call
pop
jne
pop
gs
cld
gs
adc
and
xchg
pop
mov
pop
les
or
sub
ret
pusha
or
and
leave
shl
scas
push
scas
pop
flds
and
fists
add
sub
popf
std
sbb
repz
stos
cmp
mov
repnz
mov
scas
repz
xchg
add
mov
fimull
inc
sbb
and
inc
adc
les
fs
inc
scas
pop
mov
xchg
mov
mov
dec
int3
dec
pushf
xor
adc
aas
cwtl
pop
inc
repz
add
mov
mov
sub
cmc
xchg
shr
sbb
ret
movsb
jge
in
jns
xchg
cmc
push
incl
gs
cmp
sbb
push
insb
push
inc
xchg
and
pop
loopne
mov
jmp
inc
icebp
or
xor
xchg
push
loop
sub
xchg
test
or
mov
push
into
mov
dec
pop
and
pop
pop
mov
enter
add
mov
inc
outsl
mov
lods
sti
mov
mov
push
xor
add
iret
and
sub
jae
sub
add
lret
jecxz
jns
pusha
call
and
jo
push
clc
movsb
dec
jno
mov
fidivrl
add
mov
sbb
dec
mov
shl
and
cmp
mov
hlt
stos
inc
or
or
lahf
loopne
sub
add
lret
aaa
jle
mov
fwait
lret
and
push
and
cltd
mov
mov
mov
dec
push
cld
mov
mov
cmc
cmc
jbe
ret
mov
leave
or
and
leave
dec
setg
xchg
mov
and
pop
popa
push
in
xor
and
movsb
popf
test
sub
not
xor
adc
pop
lods
lds
mov
sti
mov
cmp
rolb
dec
adc
mov
mov
lods
and
xchg
add
into
or
xchg
outsb
jno
xchg
or
xor
xor
test
xchg
add
jno
ss
mov
in
gs
cmp
out
outsl
mov
cli
test
xor
mov
test
add
mov
outsb
adc
add
pop
jle
in
jnp
fdivr
cmpsb
mov
pop
mov
clc
xorl
pop
jnp
push
inc
inc
and
push
and
xchg
sbb
in
or
sbb
icebp
adc
shlb
jmp
mov
roll
pop
sbb
mov
pop
jle
lret
out
push
mov
push
pop
hlt
and
and
adc
or
jb
or
inc
loopne
data16
xor
pop
cmp
ljmp
push
sub
sbb
aad
add
cs
mov
inc
pop
pop
lds
mov
repnz
mov
scas
adc
cltd
inc
jmp
inc
xor
mov
pop
or
pusha
inc
scas
nop
xor
mov
xchg
cmpsb
push
outsb
sub
pop
adc
enter
push
and
push
out
push
dec
xchg
dec
jnp
mov
shrb
xchg
sahf
icebp
int3
sarl
jo
push
add
fs
mov
inc
mov
inc
mov
jo
jmp
rorb
lcall
dec
xchg
daa
push
and
inc
les
testl
clc
rcll
in
into
or
pop
dec
leave
dec
xchg
push
push
jmp
cli
test
aam
sahf
mov
sti
stos
aad
shll
mov
lock
cli
out
stos
inc
jmp
or
movsl
rclb
cmpsl
and
test
push
inc
add
sbb
pop
jmp
rcr
pop
sub
push
pop
sbb
mov
fdivs
mov
adc
or
bound
jns
enter
repz
xchg
and
ret
cmp
out
pop
lret
sbb
pop
hlt
or
mov
cwtl
sub
and
mov
jns
sbbb
sbbb
and
pusha
popa
jp
xchg
mov
hlt
movsb
push
fwait
into
nop
into
lcall
insl
pop
push
cmp
dec
mov
xchg
and
movsl
jnp
pop
inc
pop
sbb
jne
mov
pop
lret
push
mov
xor
and
mov
pop
push
fisttpl
cld
inc
push
xchg
shrb
push
iret
inc
aam
push
pusha
ljmp
repnz
xorl
js
add
stos
loop
xchg
jmp
pop
test
stos
jmp
xor
xor
jne
dec
les
xchg
and
or
outsl
scas
scas
sbb
push
call
push
sahf
int3
sbb
shll
in
mov
jne
sub
jge
sti
and
in
cltd
lods
test
push
mov
fwait
lods
pushf
cmp
sub
test
dec
ret
push
and
cmpsb
call
add
cmp
nop
repz
adc
jb
xor
pop
and
cmp
enter
out
pop
les
adc
xchg
inc
sbb
push
pop
lcall
jae
xchg
jns
jne
mov
inc
enter
dec
xchg
sub
adcb
inc
and
cwtl
test
sarb
lret
mov
inc
cmp
dec
mov
cwtl
xor
stos
shrb
cmp
or
lock
lahf
adc
cmp
push
sahf
xchg
dec
mov
or
pop
xchg
jmp
and
pop
jns
cltd
arpl
xorl
aam
adc
jne
mov
out
addl
jae
xchg
pop
std
jle
ror
rorl
mov
loop
aam
stos
cmc
mov
adc
mov
mulb
push
inc
mov
fldl
inc
sahf
test
gs
sub
mov
jns
xchg
lods
scas
dec
xchg
pop
jle
mov
xchg
or
fwait
sbb
inc
hlt
and
jne
mov
sbb
lretw
push
xchg
das
sbbb
adc
stos
xor
mov
dec
pop
or
mov
int3
xor
das
sarb
repz
insb
rcll
mov
in
adc
in
sub
and
or
add
or
pop
rcll
mov
enter
imul
out
xor
push
outsb
popa
sub
hlt
cmpsb
sahf
pop
mov
gs
sub
pop
popa
push
and
adcl
cmpl
cmc
cs
ror
mov
sbb
mov
adc
das
movsl
pop
sub
cltd
inc
repnz
mov
xchg
cmp
jle
frstor
adc
js
jno
stos
xchg
pop
mov
aam
mov
xor
out
loope
enter
enter
fsub
add
popa
das
lds
mov
cld
es
mov
xor
mov
or
and
or
shl
div
scas
loopne
sub
pusha
mov
test
sub
cltd
xchg
lock
mov
inc
aas
or
mov
cmp
jmp
xchg
sub
push
jns
movsl
push
pop
mov
adc
xor
mov
es
mov
cmp
ljmp
aaa
pop
cmp
push
push
xchg
es
push
and
repnz
pop
and
jo
cmpsl
lcall
pop
jnp
call
dec
add
dec
mov
nop
rcrb
shlb
adc
or
mull
mov
repz
jae
inc
add
xchg
pop
sub
mov
or
ljmp
int3
and
xor
inc
cmp
popa
mov
push
inc
icebp
cmpsl
lret
lret
insl
in
or
inc
testb
jnp
sahf
dec
and
or
fwait
int
test
mov
pop
xor
repnz
xchg
fcoml
pop
jg
imul
bound
and
outsl
das
fiaddl
test
jnp
adc
and
xor
push
jg
adc
push
adc
fdivs
cli
btcl
mov
jp
negl
in
aam
aad
ret
xorb
cmove
andb
inc
sbb
dec
lret
dec
mov
je
and
shll
loope
movsb
adc
shll
or
cmp
sbb
xlat
mov
fwait
icebp
pop
mov
shll
test
mov
pop
jo
jb
push
sbb
xchg
pop
add
add
push
fwait
adcb
or
sbb
test
pop
sbb
push
ja
sti
jbe
inc
es
push
dec
popf
fiaddl
xchg
pop
push
jl
xchg
lods
gs
push
cmpb
pusha
push
adcl
mov
cltd
mov
in
inc
popa
fists
mov
inc
add
xor
push
das
mov
xor
or
fcmovb
xor
stos
sbb
xor
add
cwtl
mov
pop
repz
mov
and
mov
cmpsb
push
push
popa
stc
pushw
jne
cmp
or
xchg
ret
sub
sbb
mov
dec
imull
sbb
lock
push
mov
loop
cwtl
jns
out
dec
xorb
insl
push
pop
xchg
inc
rcrl
sbb
mov
gs
test
mov
orb
ret
and
fs
sbb
in
dec
cmpsb
dec
adc
or
lret
push
mov
push
fisttps
add
push
dec
dec
pop
pusha
lcall
pop
jne
inc
push
mov
xchg
das
xchg
sbb
das
xchg
pop
hlt
jnp
mov
and
mov
xchg
dec
rorb
rorb
cmpb
lods
push
ljmp
sbb
sti
sub
test
jge
addb
push
enter
loopne
enter
xor
stos
aaa
popa
sub
movsl
sub
loope
jo
add
or
ss
adc
xor
cli
das
loope
or
or
data16
lahf
repnz
mov
arpl
aam
shll
jnp
sub
mov
mov
imul
mov
mov
sub
pop
xchg
xchg
in
cmpsl
mov
mov
jb
arpl
push
push
filds
add
xor
jmp
and
push
jae
push
jnp
decb
mov
out
inc
shrb
ret
sbb
fdivrs
mov
mov
pop
add
mov
dec
sbb
insl
sbb
jnp
jns
xchg
movsl
inc
xor
or
xor
mov
xchg
lods
mov
pop
loopne
fdivrp
mov
loopne
dec
pop
sub
lret
inc
cmp
int
adc
pop
xchg
cwtl
jp
jne
shll
pop
and
add
mov
in
pop
mov
sarb
adc
cltd
fsubl
cmp
jp
icebp
sbb
adc
sbb
mov
push
fmulp
adc
sbb
xor
inc
and
inc
fmuls
lea
add
mov
aas
and
enter
je
jmp
popf
xchg
push
pop
add
cli
aaa
sub
mov
mov
pusha
mov
mov
push
scas
mov
mov
dec
hlt
inc
jmp
imul
inc
lahf
pop
dec
mov
cmpsb
sub
inc
xchg
mov
fucom
mov
lods
shl
and
mov
inc
repnz
inc
into
lods
in
adc
icebp
push
xchg
cmovg
cltd
and
mov
ret
lret
into
mov
mov
jo
mov
push
mov
jp
idivl
xor
or
stos
fidivl
sub
mov
xchg
nop
cmp
mov
iret
ds
loopne
jmp
dec
push
aaa
es
ss
add
shlb
jo
je
push
mov
mov
repnz
ja
sub
xor
cmp
add
xlat
cwtl
lods
or
sbb
ljmp
adcl
fisubrs
hlt
xchg
dec
mov
sbb
stc
add
call
xchg
je
or
outsb
insl
jae
cmp
lock
cli
jno
mov
cmp
jb
aaa
shrb
rcrb
int3
adc
adc
aaa
lods
xor
fbld
sbb
jne
inc
adc
jge
cmc
xchg
int3
xabort
sub
sbb
push
xor
push
xchg
dec
sahf
movsb
aas
sbb
xor
lods
jb
out
aas
lds
rcrb
out
xchg
mov
mov
pop
gs
shrb
mov
aaa
mov
or
xor
cmp
popa
std
push
lock
xorb
mov
clc
outsl
jecxz
inc
test
mov
adc
xor
mov
pushf
bound
mov
ss
cwtl
movsb
fcoms
cmpsb
jle
mov
jo
ljmp
mov
dec
ljmp
xchg
test
sarb
and
ret
ds
xchg
cmc
ljmp
sub
filds
subl
loope
lcall
dec
ficomps
xor
sbb
loope
push
jo
add
stos
inc
xacquire
les
xor
inc
mov
inc
fnstenv
add
lret
push
scas
pop
adc
push
mov
cmp
pop
push
jp
inc
xorb
test
cmpb
sbb
popf
xchg
out
sbb
inc
mov
mov
adc
push
xchg
sub
les
fdivrl
bound
popf
stc
inc
cmp
leave
fcomps
sub
push
mov
lret
push
mov
lods
outsl
mov
pop
push
mov
lock
adc
jl
divl
leave
or
sub
push
add
pop
or
jb
fldcw
jno
arpl
xchg
push
mov
adc
add
mov
addr16
mov
jae
push
jo
jg
les
test
xlat
sub
cmpsb
in
data16
add
ds
pop
sbb
cmpsb
clc
int
sarl
push
sahf
out
jmp
mov
push
repnz
int
inc
cmpsl
inc
and
lahf
test
and
imul
jae
test
or
jo
lcall
sbb
push
in
aaa
les
and
nop
mov
ret
test
pop
test
xchg
mov
movsl
mov
cmovbe
pop
cltd
sbb
mov
adc
push
mov
add
loop
es
dec
mov
jo
pop
sub
sbb
sbb
rcrb
pop
and
xchg
mov
lahf
xor
jb
int3
gs
lret
push
sbb
inc
aas
sbb
pop
loope
or
adc
sub
pop
jb
rorl
and
pop
stos
mov
inc
jmp
lcall
imul
and
pop
jmp
sahf
jle
cli
call
dec
push
out
dec
or
icebp
lds
or
pop
cltd
pop
pop
inc
lods
lahf
in
into
xor
lret
sbb
std
xor
enter
cmp
jg
aam
mov
aad
inc
scas
adc
cmpb
ret
adc
arpl
xchg
push
inc
ss
pop
sub
jmp
dec
sub
ss
sbb
daa
shl
push
pop
or
xor
jno
jns
test
imul
bound
lods
and
push
xchg
and
xor
mov
push
cmpb
mov
lods
sarl
push
fsubrs
and
jns
pop
test
and
cmc
in
or
ret
mov
int3
cmp
bound
xchg
jnp
pop
cmp
scas
jp
shll
push
xchg
pop
insb
ds
daa
jg
jmp
cmp
call
das
hlt
mov
adc
in
xchg
mov
sub
and
enter
push
push
add
lret
sbb
xor
stc
sti
adc
push
loopne
scas
xor
xchg
push
notb
sbb
dec
adc
stos
jnp
and
shrb
lea
inc
dec
pop
mov
push
mov
push
or
or
or
popf
iret
jb
aaa
add
dec
xchg
and
and
clc
int
push
or
mov
jne
decb
in
std
add
leavew
popa
mov
xlat
push
lods
popa
jp
push
pushf
sbb
jp
mov
jbe
adc
cltd
sbb
mov
xchg
add
xorl
push
mov
cmc
dec
hlt
mov
out
and
pop
cmp
jg
mov
dec
insb
mov
call
sbb
lcall
add
movsb
arpl
icebp
jle
dec
mov
into
mov
outsl
je
xchg
and
popa
mov
dec
push
pop
jl
xor
or
ds
xor
lods
test
out
mov
inc
cwtl
fmuls
jo
sbb
ret
pop
std
or
cli
adc
out
test
sub
shufps
insb
push
add
xor
lods
sahf
mov
push
cmp
or
aaa
scas
dec
or
mov
mov
aam
lock
iret
sub
inc
mov
or
lods
into
pop
inc
out
add
out
and
arpl
sub
aad
dec
enter
scas
pop
pushf
inc
xchg
in
xchg
cmp
xchg
je
loopne
sub
aaa
jmp
inc
inc
mov
aaa
dec
pop
mov
adc
je
stos
adc
xor
adc
dec
jnp
push
push
data16
inc
insl
pop
movsb
das
xchg
cmpsl
xlat
xor
je
leave
data16
pop
ficoms
and
jnp
inc
ljmp
pop
adc
cmp
mov
mov
int3
pusha
and
movsl
fistpl
int3
fistps
inc
inc
icebp
pop
cmc
push
jo
add
inc
ds
repnz
cmpsl
in
je
mov
cmp
int
andb
push
pop
sub
jnp
inc
cld
mov
sub
inc
sub
cmc
pop
bound
mov
push
dec
inc
test
sub
cmp
cwtl
insl
loopne
imul
cld
js
mov
push
and
ja
pop
add
push
andb
adc
xor
cmpsb
or
jnp
mov
outsb
adc
mov
cmpsl
dec
or
push
out
xchg
jns
loopne
je
adc
add
jns
xor
lea
and
aad
iret
xchg
pop
push
fnstenv
fdivr
pop
mov
aaa
jp
jg
insb
shr
fs
jo
fwait
push
jmp
ret
jae
lret
out
dec
rcll
add
popf
dec
clc
mov
popa
mov
ds
dec
test
lahf
add
rorb
or
lahf
das
push
sbb
scas
dec
lods
lahf
or
pop
ds
ds
fsubrs
fs
lahf
sub
jbe
mov
push
cmp
jne
popa
mov
daa
lret
lods
cwtl
push
sti
xchg
ss
or
jne
loope
mov
jmp
shr
gs
jae
sbb
and
add
aad
sbb
jl
and
jmp
movsl
and
jmp
ret
jae
cmp
jnp
imul
retw
jno
push
xchg
lret
cmpsl
ret
adc
xorl
insb
clc
mov
call
sub
shrb
mov
cs
aaa
pop
sub
cld
or
aaa
inc
jg
pushf
lods
leave
mov
and
pop
aad
pop
mov
mov
dec
lods
xchg
or
sub
or
jmp
ret
jno
push
aaa
sub
insl
mov
int
inc
in
out
mov
inc
test
mov
cs
aaa
dec
push
std
lret
out
mov
das
int
dec
lods
xchg
or
repz
fsubrs
shl
sub
mov
ret
jno
gs
mov
aaa
dec
fnstenv
cmp
pop
push
pop
xchg
pop
sbb
scas
stc
push
out
out
scas
mov
jb
idivb
shr
xchg
insl
pop
shlb
xor
cmpb
mov
aaa
sub
stos
push
insl
insl
adc
inc
js
in
mov
xchg
cmp
loope
sub
xor
insl
mov
clc
lret
push
jb
repnz
xchg
pop
sbb
lret
scas
pop
ds
jg
dec
xchg
pop
sbb
aad
fdivr
aam
outsb
pop
imul
cmpsl
ret
jne
imul
in
mov
lods
lahf
or
leave
cs
sbb
jl
xor
lret
cmpsl
leave
shrl
pushf
fwait
xchg
pop
push
sbb
xchg
fnsave
mov
ds
fiaddl
lahf
and
jnp
shr
fs
jne
leave
lret
addr16
cwtl
jo
je
jmp
daa
negl
lret
hlt
mov
bound
mov
sti
insl
shr
lret
cmpsl
iret
sub
cmp
dec
test
xlat
movsl
int
ljmp
xor
nop
lret
jmp
xor
bound
mov
pop
push
sbb
lods
lahf
or
lahf
and
jae
cmpsl
leave
pop
aam
fptan
dec
dec
jae
cmpsl
leave
cltd
out
cmp
pop
jmp
sub
add
add
add
sbb
jmp
in
aam
and
or
mov
push
or
sbb
push
adc
orl
push
test
push
test
xchg
ja
data16
in
repnz
scas
out
movsl
leave
fndisi(8087
mov
leave
xchg
popf
mov
icebp
jecxz
fildll
loop
repnz
mov
cmp
xchg
ja
mov
mov
cmpsl
das
fwait
mov
out
sbb
icebp
xor
jae
sti
in
fildll
jmp
lcall
scas
fbld
icebp
ljmp
aaa
cmp
pushf
mov
arpl
scas
jmp
rcr
mov
jge
xchg
or
out
xchg
in
call
jl
int
out
ror
hlt
or
jnp
jmp
jle
cmpsl
loop
nop
sbb
and
add
jle
mov
push
arpl
hlt
inc
arpl
cld
inc
mov
popl
dec
xor
cmp
jmp
or
jmp
cmc
push
push
cmpsl
ljmp
arpl
jnp
sub
cmpsl
loope
adcl
mov
push
arpl
shr
idivb
icebp
adc
inc
cmpsl
cwtl
and
pop
dec
cmp
push
sub
add
testb
add
cmpsl
flds
push
mov
nop
and
add
push
push
sbb
dec
adc
jle
ja
arpl
repz
arpl
orl
xor
push
sub
cwtl
hlt
inc
cmpsl
fdiv
pop
rolb
push
mov
fdivr
inc
test
mov
jp
test
sti
push
arpl
std
inc
cmpsl
mov
clc
add
repz
pop
cmpsl
fdivr
inc
cmpsl
jmp
or
sub
inc
ret
cmc
add
jns
andl
lahf
arpl
andl
add
adc
fisttpll
dec
jo
aas
mov
inc
test
lahf
test
pop
mov
dec
shl
add
les
add
repz
jg
inc
xchg
xor
xor
xchg
ja
cs
xchg
jp
inc
and
xorl
mov
movsb
inc
nop
cwtl
or
or
rcrb
pop
push
loop
jge
jecxz
gs
leave
pop
mov
movsl
xchg
insb
mov
ret
mov
aas
sbb
push
dec
pushf
fs
cmp
inc
mov
mov
dec
push
lret
mov
sub
mov
ja
push
outsb
data16
inc
mov
mov
out
inc
jno
and
add
inc
and
aaa
pop
mov
jnp
adc
ffree
cmp
jno
pop
jno
data16
and
leave
mov
adc
mov
xchg
jno
ljmp
jnp
pop
push
cli
insb
std
xlat
jg
stc
repz
cmp
into
addr16
cltd
iret
ja
jg,pt
xor
sbbl
xor
testb
iret
jle
addl
sub
jo
sub
das
sti
in
cld
rorl
push
adc
cmp
and
imul
jbe
pushf
mov
jp
jnp
je
jae
cmp
std
mov
fcmovnb
mov
mov
mov
and
leave
lods
sbb
mov
and
call
sahf
jge
pop
push
mov
aaa
popf
or
push
mov
or
inc
out
ss
js
cltd
inc
fmuls
dec
ja
sub
mov
pop
je
xchg
dec
and
pop
jle
outsl
fcomi
mov
dec
adc
out
fmull
jno
popa
lcall
lods
cs
or
jmp
cltd
xor
aam
adc
out
xor
outsb
mov
ret
mov
mov
jle
or
pop
push
fsubrp
mov
jle
push
xchg
arpl
fbld
shrl
adc
popf
ficompl
std
pop
xor
mov
mov
std
aad
cwtl
std
or
dec
es
mov
imul
aad
push
in
inc
das
adc
push
adc
repz
es
lret
pop
icebp
pop
xchg
fldcw
mov
adc
stos
xchg
std
loop
cmp
testl
sub
movsl
dec
leave
decb
sahf
sub
pop
and
fimull
or
dec
ds
call
push
cs
jg
sbb
push
out
outsl
push
mov
in
mov
leave
imul
fs
mov
pop
lcall
jle
xor
test
jbe
lahf
sahf
jge
pusha
pushf
jno
inc
fidivrs
sahf
rcrb
pop
ret
int
xor
ficompl
insb
sub
fsubp
stc
outsb
dec
mov
dec
lds
jecxz
jecxz
push
lret
sub
icebp
loop
sbb
mov
mov
lret
aam
cmp
fwait
loop
xchg
popf
dec
mov
add
test
sub
imul
sbb
xchg
fsubr
shll
push
orb
sti
fadd
pop
cmp
mov
repz
test
jne
imul
out
cmp
push
jle
fsubs
rolb
sbb
hlt
jae
xchg
popf
cmp
inc
iret
lcall
insb
add
cmp
cmp
aas
adc
loopw
icebp
pop
clc
lods
cld
push
jle
aas
adc
loopw
icebp
pop
xor
arpl
in
pop
fwait
xorl
lods
enter
lods
cmp
lret
fisubs
addl
xchg
xchg
mov
push
and
es
or
mov
or
mov
fdivrl
sbb
adc
cmpsl
cmpsl
push
shrb
mov
or
xorl
and
jns
ficompl
xchg
mov
sub
sub
xor
xchg
push
fistpl
pop
or
ret
lret
iret
insl
add
or
test
int
sub
mov
and
add
xchg
movsl
cmpsb
dec
mov
jl
mov
dec
fwait
adc
jae
mov
jg
pop
dec
jge
mov
loop
jae
fs
mov
push
orl
daa
mov
sbb
mov
lods
push
push
adc
cmp
lods
pop
jmp
mov
mov
cmpsb
rcrb
jmp
adc
xchg
dec
test
inc
push
shlb
lods
insl
dec
ret
sarl
inc
pop
dec
scas
lods
push
push
loope
shl
dec
xor
xchg
jns
inc
insl
sub
enter
sbb
cmp
inc
in
lea
out
in
icebp
repnz
pop
sbb
dec
lea
stos
rcll
mov
es
std
shlb
out
js
into
je
push
inc
outsb
sarb
mov
fisttpll
add
and
push
xchg
arpl
adc
cmpb
aad
mov
lahf
cld
aas
lock
jg
xchg
dec
xor
jne
xchg
pop
adc
mov
or
aas
jb
fldcw
call
and
out
jl
mov
lcall
nop
cwtl
out
nop
inc
rcll
xchg
insb
ljmp
popl
inc
sarl
fcomps
sub
or
int3
ds
sub
ret
or
fisubrl
push
ja
das
and
lret
dec
mov
pop
loope
xor
push
icebp
jge
adc
sub
aas
pop
pop
jb
clc
movsl
lret
jmp
jo
cmp
lods
test
jl
fcomps
jns
mov
mov
adc
add
dec
inc
outsb
inc
push
push
push
fldcw
or
add
addr16
mov
pop
adcl
jp
pop
shlb
inc
subb
pop
inc
add
pop
in
jne
xor
mov
push
add
adc
in
lds
xor
not
xor
cmp
ja
loope
sub
ja
js
jns
popa
int3
dec
cld
in
pop
movl
cmpsl
mov
mov
push
mov
arpl
dec
adc
mov
repz
bound
or
dec
test
fmuls
mov
inc
mov
inc
cwtl
das
cmpsl
icebp
push
mov
inc
sbb
jl
sbb
dec
add
dec
jb
xorl
xor
push
enter
inc
repnz
xchg
in
ret
daa
ljmp
pushaw
dec
add
daa
and
jne
xor
xor
dec
movsl
mov
jge
hlt
mov
into
cs
add
out
mov
sar
cmpsb
adc
je
inc
inc
xchg
sub
inc
sub
push
xchg
add
fcompl
mov
movsl
inc
jb
sti
and
int
ja
out
cmp
loopne
in
data16
jae
xor
shlb
leave
clc
mov
test
cmp
pushf
add
sbb
pop
dec
loopne
leave
push
push
sar
cmp
cwtl
ss
gs
pop
pop
jmp
pop
mov
mov
inc
sub
ljmp
mov
lahf
or
add
lods
call
scas
dec
outsb
mov
mov
outsb
repnz
test
xchg
push
jns
sbb
push
inc
ja
or
hlt
inc
and
push
stc
repz
sbb
mov
mov
inc
cs
add
out
xor
push
shlb
adcl
popa
push
jp
mov
mov
push
enter
xchg
cmp
push
pusha
adc
and
dec
or
pop
sub
sub
xchg
sbb
fwait
call
jmp
xchg
sbb
jge
cltd
imul
enter
jmp
push
sub
imul
adc
sub
fistps
inc
xor
fisttpl
mov
aas
faddl
cltd
inc
cld
cmc
shrb
inc
test
xchg
orb
xor
inc
fwait
mov
testb
sbb
xor
cmpsb
dec
sub
cmpb
scas
inc
and
test
into
add
sbb
jl
push
repz
sub
jae
sub
adc
pop
and
rcr
mov
test
jae
mov
sbb
cmp
pop
mov
lcall
jns
pop
sub
test
adc
imul
push
sarb
lods
add
inc
adc
arpl
stos
jg,pt
and
mov
jmp
and
lds
pop
sahf
aas
pop
dec
int3
adc
loope
cmpl
xchg
xchg
cmc
and
xchg
cwtl
mov
add
xchg
jl
jnp
inc
dec
jb
mov
cld
dec
test
and
xchg
or
xchg
xchg
aam
sbb
add
xor
xor
addr16
add
lods
imul
out
or
lret
loop
xor
out
pop
push
iret
loopne
fimuls
adc
in
and
loope
jge
addr16
data16
cltd
movl
sub
sub
js
inc
and
xor
mov
jae
ljmp
sbb
xor
call
add
cmc
mov
or
scas
xchg
dec
pop
mov
cmc
sbb
and
fldl
pop
dec
mov
adc
xor
and
adc
push
sub
in
pushf
jmp
stos
popf
sub
push
nop
out
test
add
inc
int3
cli
aas
ss
mov
call
and
mov
mov
mov
mov
mov
push
push
sbb
and
pushf
push
mov
das
xor
in
inc
or
push
push
fcom
mov
cmpsb
push
mov
xchg
sub
data16
in
or
or
or
cmpsl
push
flds
mov
add
cwtl
mov
inc
mov
push
or
sub
xchg
sbbb
mov
sbb
leave
jb
movsb
call
mov
cli
xchg
xor
in
mov
jp
test
sbb
dec
pusha
jbe
or
mov
inc
in
int
aad
cmp
aaa
orps
jle
add
and
fsubl
jnp
and
out
faddp
push
in
ja
int3
cmpsl
dec
ss
dec
adc
jno
mov
jecxz
add
lods
lcall
lds
xchg
es
sub
pop
dec
xchg
mov
push
and
add
inc
add
adc
in
arpl
sub
pop
push
in
incb
lds
pop
subl
mov
cmpl
pop
aad
ficomps
fldl
jg
data16
aas
pop
cltd
andl
add
mov
aam
lcall
and
add
rcll
fcompl
outsl
jns
or
scas
mov
jns
aas
jle
or
outsb
mov
pop
nop
and
dec
mov
mov
sbb
leave
push
addl
dec
mov
and
sub
mov
adc
in
imull
cwtl
add
shlb
fidivrl
jne
outsl
add
jbe
sbb
gs
push
jl
xor
mov
add
jne
jnp
xchg
or
fsubs
inc
xchg
mov
inc
mov
scas
inc
mov
repz
sbb
fstl
jmp
jae
insl
pop
sbb
xchg
jo
push
mov
nop
outsb
push
stos
inc
sub
std
popa
ret
cmpb
inc
addr16
sbbl
jo
outsb
movsb
pop
hlt
jb
lods
test
mov
sub
inc
mov
inc
shll
hlt
pusha
arpl
jmp
rcll
fstpl
add
fbld
and
es
xchg
cmpsl
xor
jo
fsub
cmpsb
push
sub
ret
aaa
aaa
push
mov
pop
stos
cmpsl
repnz
or
lock
xor
cmpsl
int3
lret
imul
in
push
setg
jl
pop
inc
xor
pop
pop
cmp
jbe
aam
adc
stos
mov
cld
pop
xchg
mov
mov
loope
mov
es
repnz
outsl
cmp
scas
adc
mov
call
out
sbb
imul
sbb
mov
mov
mov
out
sub
movsl
je
pop
or
hlt
jle
and
pop
inc
sub
imul
lret
rclb
aas
mov
mulb
jp
dec
jl
lea
xor
hlt
addl
mov
add
or
adc
pop
adc
add
push
shrl
dec
jb
outsl
cmpsb
decl
sbb
mov
loope
cmp
shrb
sbbb
pop
pop
mov
mov
or
sbbb
push
adc
fsubrs
pop
scas
mov
or
pushl
jmp
les
and
add
sub
push
test
xchg
mov
pop
push
enter
or
add
mov
or
imul
or
pop
jbe
dec
xchg
cli
inc
push
dec
mov
add
out
sbb
rorb
cmp
sub
add
rcrb
sti
les
xchg
imul
sbb
movsb
mov
sti
movsb
rcrb
and
enter
jmp
mov
sbbl
and
xchg
loope
fstl
mov
xchg
mov
mov
push
loop
jmp
jle
dec
movsb
sub
iret
das
adc
jne
sbb
inc
sbb
sbb
fstps
xlat
rcrl
sar
fisubs
sahf
icebp
mov
out
repz
mov
dec
xlat
pop
or
aam
into
out
daa
in
dec
cltd
pop
mov
mov
call
mov
in
xchg
adc
cs
inc
mov
movsl
adc
ja
mov
call
pop
push
testb
sub
add
int3
pushf
sbb
adc
push
sbb
je
push
xchg
bound
jmp
mov
test
pushf
adc
scas
es
inc
inc
cld
test
jg
push
aam
stc
add
adc
mov
and
pop
jecxz
lds
cmp
push
lcall
xor
inc
xchg
sub
sub
xchg
lahf
imul
ret
std
jge
sub
out
sub
xchg
or
out
jp
dec
add
in
mov
inc
mov
scas
into
shlb
pop
in
and
jno
sti
sub
inc
ljmp
push
negl
or
fadds
daa
or
nop
loopne
fwait
jns
mov
sub
pop
fisttpll
in
mov
bound
lea
mov
cmpsb
lods
xchg
mov
inc
add
js
mov
mov
push
cltd
inc
arpl
jg
pop
inc
jne
add
cmpsb
sub
pop
lods
mov
push
cs
test
vcomiss
fs
cltd
lcall
ret
scas
ss
pop
gs
add
pop
ljmp
cwtl
mov
push
xor
mov
mov
or
dec
pop
xchg
and
add
loopne
bound
mov
test
push
lods
xchg
push
and
ffreep
mov
loope
int
add
add
les
out
fwait
xor
mov
negb
jg
mov
leave
popf
inc
das
stos
adc
bound
mov
add
jo
jbe
push
imul
shll
mov
sbb
popf
jne
decl
pop
dec
sub
or
lds
xchg
mull
mov
xchg
dec
jae
and
sub
mov
cmp
fwait
lcall
pop
push
add
adc
sbb
inc
or
lea
jmp
jg
sbb
xor
or
scas
mov
cmpsl
adc
ja
mov
fucomip
jl
insl
mov
in
lods
iret
xchg
scas
push
mov
mov
or
jmp
scas
mov
pop
daa
stc
push
jmp
in
out
xchg
std
lret
pop
jmp
inc
aaa
xchg
cmp
cld
xchg
pop
push
test
faddp
cmpsb
push
push
or
jecxz
imulb
jo
push
fwait
push
clc
frstor
clc
pop
and
mov
pop
inc
adc
loopne
sbb
xchg
cmc
fs
xchg
mov
cmp
xchg
lds
mov
les
jg
jle
fldt
xchg
popf
push
call
sbb
mov
insl
cld
sub
and
rcrb
ds
insb
sbb
imul
cmp
push
popa
je
pushw
pushf
out
add
xchg
cmp
fistpl
in
lock
aam
repz
mov
gs
aas
xchg
aas
loopne
inc
jg
addr16
sahf
and
pop
or
jg
mov
test
dec
xchg
repz
mov
cmp
lret
pop
xor
hlt
call
popa
std
outsb
xchg
push
popf
fstl
fdivrs
iret
lea
jns
repz
or
pushf
shl
inc
push
xlat
leave
sbb
in
and
rclb
jbe
pop
shlb
fwait
int
xchg
sub
insl
dec
sbb
mov
jge
pop
lods
jnp
cmp
iret
add
pop
sarl
mov
inc
mov
push
xor
mov
mov
sub
pop
sbbb
lea
pop
and
push
mov
lock
adc
insb
enter
or
lret
mov
sub
shrl
test
rorl
movsw
jle
mov
jle
adc
pop
jb
out
mov
mov
cltd
cmp
jg
or
cmp
arpl
shll
dec
jne
das
mov
rorb
cmpsb
dec
mov
loop
xchg
cmp
ljmp
push
loop
sbb
js
into
repz
insl
fiaddl
inc
xor
call
push
imul
ds
leave
xchg
bound
ret
in
out
cmp
aam
loopne
sbb
test
addr16
and
jg
sti
outsb
or
movsl
inc
cmp
add
in
mov
shrl
mov
cwtl
outsl
inc
pop
rcl
lds
mov
js
jb,pn
mov
sub
pop
outsb
jne
dec
in
cmp
shr
scas
loope
push
lcallw
sbb
inc
icebp
fldt
and
fstpl
or
or
jns
lahf
mov
ret
pop
outsl
jnp
push
mov
inc
das
aas
popa
mov
fsubs
push
dec
rcrb
pushf
xorl
js
xlat
ficompl
add
xchg
push
nop
imul
push
mov
cld
sub
enter
insl
mov
sub
inc
std
sub
push
push
andb
fmull
outsl
iret
add
jmp
xchg
jns
fidivrl
lods
mov
aaa
lret
sbb
inc
mov
mov
int
lods
mov
mov
adc
test
or
xor
dec
jns
fsub
loopne
xchg
rcrl
xor
or
jae
mov
lret
aaa
add
lds
mov
dec
jecxz
xor
mov
add
testb
mov
loope
pop
ss
cmpsl
cltd
adc
or
add
add
cwtl
add
mov
movsl
xor
pop
icebp
xor
cld
mov
ret
adc
leave
sbb
mov
in
pop
repnz
repz
pop
jae
cli
fcom
mov
fsubrl
cs
outsl
sbb
jl
mov
inc
arpl
ficompl
out
push
push
test
aam
xchg
stos
fwait
sub
or
xchg
imul
and
repz
jg
pushf
mov
pop
lock
imul
add
sbb
sbb
add
jl
or
mov
add
fidivrs
jmp
ret
push
jo
stos
sub
jmp
in
jnp
sbb
xchg
mov
data16
push
inc
out
adc
fisttpl
lock
mov
mov
int
jnp
inc
in
je
aaa
dec
cld
inc
adc
xor
cmp
sbb
xchg
jge
pushf
cs
or
cltd
les
shrl
jne
fisubs
sub
xchg
test
popf
cli
cwtl
movsl
lock
lods
addr16
cmp
add
sbbl
shr
neg
sub
pop
mov
clc
or
loopne
test
jae
pop
dec
mov
aas
add
mov
in
stos
aad
sub
lock
adc
shll
enter
popa
clc
movsl
or
mov
xchg
or
push
mov
ljmp
sbb
pushf
xor
jg
and
mov
push
or
inc
leave
push
mov
and
je
test
push
ja
push
xchg
jmp
mov
mov
movsb
outsb
push
add
xor
pop
mov
ljmp
movsl
out
das
jns
or
adc
dec
int3
adc
and
shlb
dec
mov
shll
and
out
push
sub
sbb
jmp
push
out
xor
rcl
insl
xchg
push
and
aam
gs
pop
or
mov
mov
mov
and
and
outsb
cmp
lds
cmpsb
mov
mov
loope
test
push
or
mov
inc
push
mov
jg
rcrb
js
out
addr16
cwtl
mov
jae
es
das
mov
repz
jge
xor
cmp
add
inc
xor
push
mov
xor
int
push
mov
nop
cmp
lahf
fistpl
neg
xchg
adc
adc
fnsave
sarb
or
push
jecxz
jo
cmc
sahf
xor
add
inc
dec
inc
mulb
aaa
enter
notb
outsl
jmp
sahf
mov
inc
mov
mov
push
shr
jns
insb
add
sbb
orb
les
jbe
mov
test
xchg
xlat
xchg
mov
in
mov
icebp
aam
xor
js,pn
xchg
loope
inc
dec
fsubl
add
adc
fisttpll
xchg
add
mov
jl
nop
lock
jecxz
pop
sub
mov
scas
add
adc
pop
sub
pop
push
xchg
pop
mov
or
fwait
mov
jo
or
xchg
fildl
sub
lret
lret
pop
xor
repz
adc
adc
dec
adc
adc
inc
sbb
stos
lret
dec
push
dec
or
sbb
fs
mov
roll
shl
aaa
pop
fsubrl
push
cmp
loopne
sbbb
xor
in
adc
loope
sbb
cmp
ret
addr16
stos
ja
loop
loop
cwtl
sbb
mov
outsb
inc
stc
scas
stc
push
jp,pt
fwait
sub
pop
pop
and
push
popa
inc
xchg
imul
test
fbld
icebp
and
cltd
inc
sarb
pop
dec
and
addr16
jbe
rorl
jg
in
sub
pusha
ljmp
adcl
ja
mov
in
sub
in
mov
xchg
daa
mov
dec
dec
test
cmp
xor
or
cmc
jnp
add
mov
sub
mov
pop
lock
mov
int
int
jns
dec
int3
cmp
sub
icebp
xchg
mov
aam
aam
pop
ss
pop
out
data16
bound
inc
out
pushf
std
mov
cmp
std
aaa
or
sbb
mov
jge
sbb
push
mov
mov
add
push
mov
in
popa
hlt
in
ljmp
and
xchg
mov
mov
in
sarl
jge
sbb
pop
push
aad
ja
xchg
dec
test
dec
sbb
sub
adcl
add
movl
mov
decb
inc
mov
ja
xor
enter
pop
inc
mov
pusha
data16
insl
cmpl
insb
pop
sub
mov
cli
je
out
paddsb
outsl
xor
insl
fcompl
mov
lret
xor
add
call
mov
cmp
int
cld
xor
add
int
sbb
sbb
sbb
es
cmp
ljmp
mov
test
dec
fisttpll
imull
jle
movsl
inc
repnz
arpl
mov
lea
cmp
aad
sub
das
test
int3
jae
les
out
push
cmp
push
pop
adc
push
mov
ljmp
shll
pop
cmp
inc
adc
ljmp
or
filds
dec
addl
imulb
pop
rcl
insb
and
andb
xor
mov
cmpsb
adc
mov
mov
jmp
jmp
and
adc
call
imul
sbbb
inc
mov
push
jge
xchg
shll
testl
outsl
inc
inc
jnp
icebp
mov
xchg
sub
adc
pop
adc
movsl
out
decb
mov
ss
enter
repz
out
mov
cwtl
rcl
aas
or
aam
xor
push
add
xor
or
or
push
mul
add
push
cmp
daa
and
mov
mov
mov
cmpsb
imul
sub
jmp
mov
cmpsb
icebp
cmp
std
rclb
push
mov
cmp
negl
add
popa
lcall
jb
sbb
pop
out
rcrb
insl
sbb
int3
fdivp
pop
pop
xchg
sub
arpl
test
ljmp
mov
push
das
mov
push
movsl
push
cmp
jmp
scas
inc
mov
aam
lods
mov
es
inc
into
adc
sbb
divb
push
jns
add
popa
leave
adc
jne
jle
pop
pop
enter
inc
dec
mov
pusha
pop
jns
loopne
mov
mov
push
add
adc
dec
cmpsl
ret
cmc
addr16
popf
pop
sub
mov
outsl
int
and
frstor
ret
pop
lea
movsb
inc
xchg
mov
iret
sbb
movsb
adc
lods
mov
push
jnp
xor
lea
clc
iret
jl
pop
mov
push
mov
rolb
loope
mov
xlat
stc
nop
test
repz
xchg
adc
test
cli
sbb
cltd
mov
jl
mov
pop
mov
push
and
ss
mov
push
cmp
clc
mov
xchg
test
imul
aad
sub
mov
test
test
lds
aad
add
stos
clc
enter
cmpsb
cwtl
in
and
dec
mov
push
inc
or
mov
insb
ror
dec
mov
repz
xor
xorl
or
jo
xor
les
rcll
push
adc
setbe
inc
cmp
cs
ss
add
shrl
push
jl
ds
fwait
addr16
clc
mov
mov
nop
ficoms
es
arpl
cmp
mov
insl
adc
mov
jnp
mov
mov
dec
out
push
xor
scas
jecxz
dec
mov
pop
cld
cmpsl
cmp
push
stos
ja
das
or
cmp
pop
lahf
gs
dec
mov
cmpsb
push
movsl
cld
and
add
jns
sbb
mov
bound
mov
push
jp
jb
in
int3
xchg
mov
adc
cltd
dec
gs
mov
dec
mov
xchg
or
adc
in
xor
es
fmull
mov
scas
ds
pop
ja
sbb
iret
jle
mov
movsb
incb
xor
jmp
mov
cmp
push
push
sub
rcl
cltd
lea
into
fstpl
sub
scas
fists
and
out
aas
xchg
lcall
jae
mov
and
test
dec
in
adc
std
dec
arpl
cltd
out
movsb
sub
sarb
pop
das
loope
fisubrl
jge
push
and
pop
cmp
fwait
push
stos
movsb
and
xchg
jmp
pop
pop
mov
xchg
frstor
stos
sbb
cltd
mov
jmp
aaa
shlb
rorl
xor
pusha
cmc
fistpll
cmpl
cmpsb
or
mov
cltd
in
in
outsb
scas
shl
dec
and
jne
jg
rcll
add
rorl
or
xchg
out
aaa
rcrl
inc
rcrb
mov
xchg
cmp
mov
push
mov
aad
or
adc
mov
or
adc
pop
loope
repnz
sbb
dec
nop
dec
xorl
adc
adc
lea
out
and
hlt
lods
or
les
gs
cltd
xlat
and
xor
inc
mov
xor
push
aad
rclw
push
stos
xchg
or
lock
push
xchg
hlt
sti
sbb
pop
push
testl
jg
stc
inc
sbb
fildll
dec
mov
fs
loop
mov
add
xchg
lahf
xor
cmp
sahf
enter
addr16
gs
cmp
mov
js
inc
gs
imul
push
cli
stos
cmp
cmp
addl
sub
das
jns
test
loop
testl
in
loopne
imul
pop
push
push
stc
inc
dec
jne
push
xor
scas
adc
pop
movsb
pushw
inc
sarl
enter
cli
fwait
and
sbb
push
ljmp
sub
int
or
or
icebp
mov
jbe
or
stos
xor
fwait
orl
adc
js
int
in
pop
ljmp
loop
sub
sti
jns
inc
sahf
call
int3
adc
mov
inc
data16
sub
mov
dec
xchg
sub
scas
ret
fldt
xchg
cmp
jp
dec
arpl
out
cltd
dec
push
stc
cltd
test
insb
cmp
lods
scas
in
xchg
mov
fnstsw
fmulp
cmp
call
stc
mulb
ret
xor
push
jo
pop
jg
push
daa
ret
inc
popf
inc
leave
fstl
pusha
jmp
xchg
in
mov
sahf
data16
adc
orb
xchg
adc
iret
aam
sub
jmp
dec
mov
idivb
pop
stos
and
adc
std
jge
outsb
test
jo
inc
inc
xor
movsl
shlb
add
or
pop
ss
cmp
insl
test
cmp
lds
call
popa
mov
mov
jne
jo
jne
stos
jmp
pop
adc
jl
xor
fildll
push
mov
mov
jne
cmp
pop
bound
mov
push
cwtl
push
pop
or
jp
faddl
jl
inc
lret
push
add
xor
mov
add
xchg
adc
sarl
xchg
or
std
movb
and
pop
or
mov
inc
mov
in
fisttps
cmp
inc
pop
dec
xor
mov
fistps
or
int
pop
sub
les
and
dec
jns
sub
jbe
jae
clc
cmc
les
nop
jle
cmc
pop
movsl
lret
mov
add
push
int3
test
jne
cmp
outsl
inc
sbb
cs
icebp
out
xchg
push
pop
mov
jl
daa
mov
loopne
dec
test
lock
stos
push
sub
cmp
repnz
dec
pop
insb
int3
pop
int3
xor
jno
ret
or
ror
std
cmp
add
repz
insb
push
jbe
inc
in
or
add
or
dec
cmp
dec
and
ds
push
jb
stos
cmpsl
in
xchg
add
push
aam
imul
mov
ret
and
push
aas
mov
lcall
leave
xor
xchg
dec
or
or
cmp
dec
icebp
jmp
jne
in
lods
andb
cwtl
fidivrl
fidivrl
jge
adc
mov
ss
shr
jp
nop
push
mov
in
jbe
outsl
mov
icebp
or
inc
pop
mov
mov
xchg
adc
mov
js
mov
inc
pop
bound
mov
pusha
dec
stos
push
jl
es
cmpsb
dec
inc
push
and
cld
jae
and
fistpl
sbb
mov
in
and
jmp
jl
push
jne
outsb
scas
ret
mov
rcr
test
outsb
in
or
jl
sbb
push
outsl
and
xor
jl
movsb
or
cmpb
test
pop
dec
paddsb
cmc
popa
imul
jp
icebp
mov
and
imul
shll
push
jecxz
mov
cmp
loopne
dec
mov
mov
jp
aas
cwtl
push
add
add
xorb
loopne
in
in
jmp
xor
mov
test
iret
xchg
mov
or
mov
hlt
dec
inc
jg
mov
mov
or
das
add
ret
out
cmp
and
mov
mov
punpckhdq
iret
hlt
mov
lods
add
sbbb
add
mov
xchg
adc
iret
jne
pop
lea
push
insb
lods
jle
test
adc
sbb
insl
jae
xchg
cmp
pop
bound
jg
out
je
shl
ds
imul
int3
xchg
icebp
aas
test
les
xchg
movsb
pop
push
pusha
cwtl
jl
sbb
pusha
xor
clc
pop
je
jb
adc
jg
or
in
mov
lock
sahf
lods
jo
ud0
pop
and
repz
mov
xor
pop
pop
fbstp
mov
cmpsl
ds
or
or
enter
push
es
sub
dec
adc
sub
ja
xchg
jecxz
sub
leave
mov
push
outsb
aaa
loop
push
mov
adc
clc
xor
mov
dec
ljmp
add
fmull
movsb
in
stc
jle
xchg
jo
jno
jl
out
mov
in
inc
fsubrs
cmp
movsb
jl
test
mov
out
add
push
fwait
stc
add
push
popa
mov
jge
jg
jg
dec
ret
add
addb
sub
add
cld
xchg
stos
and
pop
pop
jno
or
dec
es
mov
pop
cmpsl
push
mov
push
lahf
cmpsl
mov
cmp
pop
leave
shlb
andb
mov
insb
lock
ret
add
or
test
jb
incl
movsl
cmpsl
xchg
dec
incl
push
neg
fstpt
rcll
xor
out
lea
jnp
jb
or
inc
leave
pop
sub
adc
dec
cmp
mov
je
cld
push
in
xchg
cmp
jne
lds
push
xor
pop
cmp
xchg
cmp
adc
jno
jmp
test
in
loope
pusha
mov
into
mov
pop
pop
cmp
scas
decb
loope
dec
mov
push
loope
std
add
sbb
lret
xor
lock
inc
pop
ficompl
jecxz
leave
jl
adc
mov
dec
xchg
lret
push
jl
rcr
push
insl
sar
pushf
cmpsl
loopne
push
mov
or
cmp
pop
dec
jo
pop
adc
cmovne
adc
sub
xchg
bnd
mov
inc
dec
in
insb
test
in
pusha
push
shrb
or
es
pop
les
cld
ja
loop
push
mov
sahf
inc
mov
call
sbb
mov
dec
aas
aam
hlt
jg
mov
push
das
rcr
adcl
aam
movsl
cmpsb
stc
cld
test
ret
jmp
or
aad
je
je
cli
jecxz
jmp
push
lret
aas
jne
loope
dec
nop
push
imul
mov
cmp
stos
cmp
xchg
sbb
adc
mov
sahf
adc
mov
cmp
jmp
inc
fimull
push
fsubrs
decl
xor
repnz
and
pop
adc
add
ret
jp
xchg
ficoml
or
pop
push
add
add
push
idivb
pushf
test
addl
xchg
jle
cs
mov
and
or
test
cltd
mov
pop
mov
xlat
out
out
cmpl
arpl
ret
inc
sbbl
sub
dec
inc
xchg
jo
das
inc
insl
mov
push
or
repnz
out
loop
loope
shll
ficoms
adc
shl
int3
mov
je
xchg
loope
jno
lcall
rorl
outsb
add
push
sub
inc
in
sub
aad
cltd
aas
pop
push
out
movsb
out
rcrb
ret
rcrl
je
xor
jle
mov
mov
sub
mov
mov
jg
fs
rolb
loopne
and
xchg
addr16
and
cs
adc
aas
stc
jl
and
dec
loope
out
add
sbb
inc
pop
in
push
call
push
lods
sahf
sub
scas
sahf
adc
andl
int
lcall
ljmp
or
mov
popa
push
out
mov
popf
pop
dec
mov
push
or
pop
arpl
les
insb
fstl
pop
mov
mov
jge
jge
popa
outsb
in
xchg
test
or
rorl
es
xchg
and
dec
push
xchg
sub
add
jb
addr16
cmpsl
cmp
xlat
dec
stos
js
mov
scas
jae
lahf
test
mov
inc
dec
ljmp
scas
out
push
das
inc
subl
inc
cltd
icebp
sbb
enter
incb
mov
je
lcall
mov
add
loop
test
insb
pop
in
pop
aas
mov
aaa
cmpsl
ljmp
insl
lods
adc
jo
lods
imul
fdivrl
adc
mulb
aad
mov
or
sbb
ds
cld
pushf
xor
sub
faddl
mov
pop
pxor
mov
fwait
mov
mov
sbb
shl
dec
mov
jne
adc
addr16
dec
push
test
aaa
arpl
mov
jmp
push
notb
mov
fisubs
fdivrp
lret
or
push
loop
add
push
push
mov
push
mov
sbb
xchg
xchg
frstor
dec
flds
xor
jne
popa
stos
pop
push
inc
pop
lahf
inc
movb
push
stc
sbbl
pop
pop
push
test
lock
out
pusha
outsl
cmp
fwait
out
stos
std
fstpt
std
or
icebp
pop
lret
pop
mov
sahf
fwait
pusha
push
sbbl
sub
les
fstp
mov
out
or
pusha
std
sub
dec
sub
jge
sub
xor
fimuls
jns
insb
loopne
iret
cmp
std
scas
lcall
cmc
cmp
lods
and
pop
inc
ret
loopne
or
lock
mov
push
pcmpgtd
pop
and
xchg
mov
or
cld
sbb
rclb
pusha
or
cld
lock
mov
xchg
faddl
insb
mov
pusha
jl
adc
nop
arpl
add
pop
add
lret
add
movsl
cmp
std
push
xchg
mov
movsb
in
movsb
fmull
stos
cmpsl
rorl
mov
addr16
jg
mov
outsl
push
jle
or
push
mov
stos
mov
and
adc
or
test
adc
add
outsb
scas
test
dec
push
and
dec
test
stos
insl
mov
mov
lret
jae
lret
mov
dec
mov
push
frstor
cmpsb
push
sub
inc
jl
sbb
leave
jnp
pop
sbb
cmp
add
xchg
pop
push
ss
cmp
jno
mov
sub
push
adc
or
xchg
ret
sub
lret
aad
jns
adc
cmp
lock
into
jb
dec
dec
dec
in
ds
cltd
lcall
jmp
mov
out
ja
in
int3
idiv
sbb
int3
hlt
lahf
shrl
xor
dec
sar
cmc
jo
dec
icebp
jge
mov
lahf
mov
pop
stos
aaa
fsubl
cmp
ds
ret
test
aas
adc
or
mov
ret
jo
lret
cli
dec
int
daa
rcrb
stc
aaa
out
mov
lea
ja
mov
lahf
push
jnp
loopne
aad
out
push
fisubl
test
mov
jb,pn
cltd
or
enter
jl
pop
fwait
mov
push
jo
es
or
mov
shlb
fists
pop
shlb
leave
mov
in
xchg
xor
rcrb
lods
repnz
xor
mov
fnsave
test
ja
mov
shr
insb
nop
mov
dec
xchg
in
fwait
mov
icebp
mov
xchg
shl
mov
or
mov
loopne
outsl
push
inc
add
in
push
repz
mov
inc
fdivrl
or
popf
call
pop
adc
es
sub
mov
rcl
stos
jle
pop
rcr
mov
in
jns
dec
jnp
and
es
loop
data16
mov
bound
xor
mov
xor
mov
mov
jle
add
mov
loop
mov
mov
xchg
int
fld1
push
lahf
imul
out
add
sarl
popa
push
fisubrs
fs
mov
call
jne
mov
cwtl
xor
jae
add
shl
mov
ja
aaa
not
repnz
dec
je
scas
outsl
xor
sub
sub
stc
lds
hlt
int
jnp
pop
jle
dec
cwtl
dec
sub
dec
xor
xor
mov
loope
mov
mov
add
aas
push
shll
out
sbbl
push
push
push
adc
cmp
icebp
sti
cwtl
pop
sub
sbb
ret
push
xor
lahf
dec
sar
stos
jg
and
dec
xor
sti
mov
pop
lcall
adc
jmp
sbb
push
pop
or
leave
jo
mov
enter
cmp
lret
cmpb
and
xor
cli
mov
mov
cmpsb
jno
pop
and
mov
lea
adc
stc
lcall
dec
xlat
jbe
cwtl
mov
faddl
sub
sub
sbb
hlt
movsl
sbb
sub
jp
scas
xlat
jg
pop
lcall
sbb
add
jae
cmpb
testb
and
ret
push
push
mov
insb
ret
lock
popf
jnp
je
in
xor
sbb
xor
addr16
push
adc
sbb
mov
jmp
les
popa
call
inc
lcall
or
psubd
into
push
lods
mov
insl
pop
and
in
mov
mov
push
pop
mov
insl
adc
lcall
hlt
and
or
pop
inc
outsb
push
sub
inc
cmp
int
sub
mov
fdivrl
jbe
jbe
mov
mov
inc
fwait
and
jns
popa
jmp
mov
sub
movsb
jl
pop
mov
xor
dec
adc
shll
sub
jne
push
rorl
xchg
cli
gs
ja
out
jo
xor
aas
lea
xchg
lahf
pop
rclb
mov
mov
mov
in
jne
push
pop
inc
fwait
jmp
jb
sbb
movsl
cmp
in
push
popa
ljmp
mov
jae
inc
arpl
pop
loop
xchg
pusha
mov
rep
jp
fdivrl
mov
loope
pop
pop
dec
lods
in
fdivrl
gs
aas
aaa
leave
jge
add
outsb
shlb
jg
mov
inc
cmp
test
cltd
sub
daa
daa
je
les
push
dec
fists
call
or
cmp
lods
cmpsl
rol
push
mov
pushf
xor
loop
ret
sbb
mov
or
xchg
aam
popa
xchg
stos
stos
pop
pop
push
aad
dec
xchg
pop
add
in
adc
or
dec
dec
fistl
pop
repz
shlb
jne
stos
hlt
jecxz
push
dec
fsubrp
dec
mov
ja
movsb
hlt
cmp
shrl
negb
push
scas
std
sbbl
insb
jecxz
adc
rolb
lahf
and
or
jl
ds
in
sbb
jp
mov
jo
dec
pop
gs
jge
and
mov
sub
faddl
fldcw
mov
rcl
repz
imul
push
fs
mov
testl
jne
int3
jecxz
lds
sbb
fiaddl
pop
imul
xor
roll
mov
mov
fwait
sbb
int3
cmp
das
mov
pop
jo
test
jnp
int3
mov
xchg
add
jmp
or
das
scas
pop
xchg
inc
dec
ss
push
inc
sbb
stos
jns
mov
pusha
jno
jnp
cs
sbb
je
or
outsb
push
fucom
sbb
das
js
mulb
or
pop
aad
pop
lcall
mov
cmpsb
mov
jno
cmpsl
sub
mov
rcr
inc
cmp
fldenv
jns
clc
jg
aaa
sbb
fists
out
orb
cs
jge
cmc
add
das
or
fs
roll
xchg
xor
pop
lods
out
loopne
addl
mov
mov
hlt
cmp
jo
fldt
cmp
jbe
out
movl
xchg
pop
push
into
inc
jo
push
int
subl
cmpsl
push
out
jmp
ja
das
pop
lret
fstp
sub
mov
aam
pop
roll
inc
outsb
fisubs
mov
sahf
sbb
das
xchg
sti
pop
mov
insb
sbb
pop
hlt
push
out
dec
mov
rorb
fwait
cmp
mov
icebp
ficomps
pop
cmp
pop
pop
pop
pushf
rcrb
xchg
fidivl
bswap
bound
ds
dec
jno
sub
xchg
xor
ficoml
jne
adc
mov
int3
adc
sbb
stc
xchg
jl
sbb
iret
mov
js
in
push
push
lods
movsb
jg
xor
add
pop
idiv
mov
int3
or
test
adc
repnz
mov
rorb
in
xor
inc
mov
mov
cmpsb
xorl
pushf
mov
imul
xchg
je
mov
cmp
pusha
jmp
ret
loope
xor
push
mov
arpl
lock
jmp
outsb
and
or
jo
mov
inc
aam
out
mov
lock
sub
adc
mov
movsl
movsb
sbb
in
adc
aas
adc
add
mov
mov
loop
test
or
inc
shl
leave
or
sub
roll
cmc
sbb
rolb
xor
cmc
push
adc
or
inc
pop
pop
daa
lods
fstpl
outsl
xor
sbb
inc
aaa
push
jo
mov
js
mov
push
arpl
aam
sbb
jno
sub
push
adc
mov
cmpsl
and
xor
mov
sbb
or
into
js
stc
sbb
xor
xchg
add
addr16
and
jnp
push
imul
ljmp
enter
fisubs
jno
xor
push
data16
pop
inc
cld
and
jae
pop
lds
dec
xlat
ljmp
out
js
sti
adc
jp
das
int
cmpsb
sbb
lahf
pop
shl
adc
iret
add
inc
js
repnz
pushl
or
enter
and
cmp
cmpsb
jno
and
and
push
push
in
bound
mov
ror
enter
iret
hlt
xor
pop
xor
aam
add
out
mov
add
jp
mov
xchg
insb
fisubs
movsb
shrb
jae
lock
sbb
outsl
fcomi
out
in
xchg
cmp
cltd
cmp
cmpsl
mov
pop
sub
xchg
mov
jno
mov
jg
and
cmp
or
push
mov
pop
loop
cmpsl
mov
rcrl
pop
outsb
sbb
mov
mov
daa
adc
sbb
movsb
idiv
enter
add
icebp
mov
bound
mov
cmp
mov
dec
xor
jl
jb
mov
xchg
out
push
sub
bound
add
lea
fisttpl
mov
xchg
mov
mov
cmc
jnp
into
sub
pop
xchg
jp
xchg
xor
iret
jbe
fstl
pop
fistpl
es
ret
jns
add
sub
sahf
push
bound
cmp
dec
fnstsw
lods
pop
jnp
mov
lcall
es
iret
adc
movsl
mov
lods
mov
cmp
mov
sub
leave
fcmove
test
lcall
imul
mov
in
pop
mov
andl
out
cmpsl
jmp
pop
ret
xor
das
inc
push
es
cmp
scas
icebp
add
cs
outsl
enter
or
inc
lret
test
lods
jno
add
push
pop
push
xchg
lods
cmp
push
xchg
mov
or
dec
or
aam
inc
aam
popf
leave
imul
data16
cwtl
leave
jae
mov
out
add
aad
stc
lahf
mov
fstp
int
push
popa
sbb
jle
or
xchg
inc
jns
cs
mov
adc
jno
mov
mov
mov
and
mov
clc
cmp
ret
out
cmc
and
mov
pop
lcall
ds
lods
push
iret
popa
lcall
jle
mov
call
jg
sar
push
adc
int3
jno
outsb
add
cmp
sbb
xor
cwtl
cltd
ret
call
fildll
sub
ret
lock
test
daa
loope
or
dec
daa
sti
push
adc
dec
xor
rclb
dec
xchg
roll
sbb
jo
push
mov
fimull
mov
sar
xchg
mov
or
rclb
bound
sarb
push
inc
addr16
mov
xor
inc
add
cwtl
push
add
push
cmp
and
stc
imul
xor
add
cld
flds
push
cltd
xor
stc
mov
sbb
mov
cmpsb
imul
shlb
push
mov
mov
xchg
jp
push
leave
shll
push
adc
decl
sub
adc
push
xlat
push
popa
cld
bound
sbb
sbb
rcr
fmuls
cmp
dec
mov
adc
push
pop
and
xchg
lcall
in
cmpsb
dec
clc
dec
dec
xor
mov
xchg
adc
shrl
mov
adc
cmc
movsl
push
jle
fildll
test
pop
bound
push
mov
pop
rcl
mov
push
mov
jmp
mov
clc
add
mov
mov
inc
fisttps
sbb
adc
or
stos
pop
cld
sar
inc
mov
mov
sbb
mov
mov
add
mov
cmc
les
xchg
push
pop
inc
mov
push
std
insl
adc
shlb
icebp
jno
mov
mov
mov
sbb
inc
lods
jae
xchg
adc
mov
loop
mov
adc
jmp
popf
inc
lret
test
pop
std
es
and
xchg
mov
mov
movsb
mov
push
xor
push
cmp
xor
jle
and
inc
mov
mov
cld
rcrb
aad
push
ret
mov
and
jbe
pushf
push
sti
mov
and
ret
arpl
jnp
js
dec
nop
pmaxsw
lods
mov
xlat
aad
mov
cld
roll
cmp
test
jnp
xchg
incl
rolb
lcall
es
push
cmpb
insl
setno
or
xor
ds
jg
jge
in
repz
lods
sub
pop
adc
sub
pop
and
hlt
les
xchg
push
xlat
ljmp
lret
lods
stos
mov
push
lcall
imul
mov
sbb
mov
cmp
inc
rcrb
into
sub
sub
in
cmpsb
jmp
mov
mov
dec
pop
xchg
inc
sub
leave
push
lods
insb
lea
push
mov
in
fisubl
mov
leave
imul
sbb
js
nop
mov
nop
push
pop
push
jns
dec
pop
popf
sub
mov
dec
stos
dec
inc
movsb
fwait
std
adc
pushf
fbstp
and
inc
mov
nop
sub
mov
ret
mov
add
dec
lcall
movsb
fldenv
mov
jne
repnz
xchg
mov
sub
jae
pop
and
popa
ss
mov
push
push
push
jg
movl
sbb
xchg
mov
mov
mov
arpl
add
les
scas
clc
repnz
pop
out
ret
sub
stos
mov
add
lcall
sub
pop
lret
xchg
cmp
repnz
insb
mov
mov
push
dec
idivb
cld
dec
dec
jl
sbb
sub
insb
aam
xchg
jle
xor
lods
dec
shlb
push
mov
mov
mov
aas
rolb
je
adc
adc
cwtl
gs
iret
ficompl
ret
push
and
faddp
ret
lret
mov
jns
int3
je,pt
pop
cmp
push
faddl
into
jae
lock
inc
lahf
jns
xlat
jnp
mov
ljmp
insl
mov
cmpsb
je
mov
or
mov
cmpsb
mov
jge
cmp
jns
push
mov
sbb
sbb
daa
loop
jne
ss
ss
jb
popf
dec
popf
mov
jmp
jl
xlat
push
jg
lds
cmc
xor
jmp
stc
dec
cmp
in
sbb
addr16
nop
pop
inc
push
test
in
push
xor
shrb
mov
sti
sbb
sub
iret
int
sti
fcmovb
jle
pop
test
pop
jnp
clc
or
add
add
add
loop
adc
nop
inc
cmpb
cmpsl
enter
jp
push
aaa
int3
jge
imul
and
cld
aas
subl
jle
ds
test
pop
pop
add
jmp
movsb
inc
lcall
repnz
inc
mov
lcall
dec
dec
mov
push
or
aaa
mulb
xor
sbb
lret
xchg
pop
loope
mov
ret
sbb
je
inc
sub
sbb
sbb
add
dec
add
xchg
and
add
push
xchg
adc
fldl
push
and
or
pop
out
out
xor
out
aas
or
jb
int3
loop
or
mov
inc
inc
add
stos
push
sub
xor
out
ret
aam
and
xchg
or
ret
jmp
cltd
cmp
push
and
es
adc
daa
xor
fmuls
and
add
and
adc
and
adc
push
daa
xor
mov
mov
add
test
pop
cmp
lret
jg
outsb
fstp
mov
nop
push
jns
mov
pop
jecxz
fildl
inc
test
mov
dec
inc
or
sub
out
iret
bound
inc
push
fcoml
dec
mov
gs
xor
fidivrs
xchg
lods
or
pop
pop
xchg
inc
jns
pushf
movsl
ret
lahf
adc
test
or
dec
ret
lock
test
daa
loope
or
dec
ret
lock
test
daa
loope
or
dec
ret
lock
test
daa
loope
or
dec
ret
lock
test
inc
loopne
hlt
das
adc
es
shrb
xorl
add
xorb
aas
lea
fdivl
lret
dec
add
bound
jae
sub
and
jle
imul
push
cld
mov
mov
xchg
cmp
pop
testl
mov
orb
xchg
fwait
movsl
xchg
testl
mov
xor
xchg
mov
out
arpl
jb
xor
fwait
out
popa
sbb
mov
push
addr16
add
pop
or
add
inc
insl
or
pop
add
loopne
sub
fmull
loopne
adc
jge
fwait
mov
sub
cmp
rclb
push
add
add
adcb
popa
imul
insb
in
cmp
shl
jl
push
sub
xchg
pop
mov
adc
notb
cmc
fiaddl
mov
rorb
lahf
jne
add
xor
or
addb
cld
adc
enter
sub
pusha
ss
outsb
pusha
mov
xchg
add
clc
dec
ret
clc
and
pop
and
into
mov
inc
mov
stos
adc
inc
enter
rclb
or
fs
xchg
jl
andb
and
dec
imul
pop
dec
pop
leave
jp
push
adc
pop
dec
add
and
mov
mov
scas
dec
dec
or
dec
test
inc
div
jg
popa
lcall
rcrb
or
push
inc
stos
mov
adc
sbb
and
push
adc
int3
pop
ss
mov
mov
mov
pop
rcll
rorl
dec
push
or
and
loope
enter
in
lds
cwtl
mov
popa
cmp
bound
sbb
sti
pop
and
mul
int
jne
cmc
push
mov
sbb
sarb
or
es
inc
jl
sbb
push
sbb
pop
shrl
mov
dec
int
mov
loopne
jg
xchg
mov
imul
adc
fmul
outsb
je
dec
pop
fists
mov
les
in
jae
adc
mov
sbb
leave
dec
icebp
dec
or
mov
jns
mov
pop
cmpsb
cs
imul
call
scas
icebp
sub
dec
adc
mov
sub
push
nop
sub
icebp
mov
lock
in
out
lcall
mov
fmuls
stc
and
and
cltd
inc
push
and
push
sti
sarl
jg
pop
fdivrs
inc
ret
es
push
mov
mov
or
das
xor
xor
andl
sub
xlat
push
lahf
test
mov
mov
sbbl
cmp
mov
scas
or
popa
sbb
lea
sbb
pusha
test
push
bound
mov
add
and
lods
pop
xchg
xlat
leave
in
and
leave
mov
movsl
mov
int
jb
mov
outsb
jmp
test
push
notl
pop
pop
mov
movsl
sbb
addl
cmpsl
fwait
sub
push
iret
adc
or
jp
inc
adcl
stos
imul
sub
out
cmp
dec
xchg
test
xchg
fisttpll
mov
leave
adc
xor
or
jb
loop
fs
lock
pop
pop
scas
es
pop
and
test
stos
mov
lods
das
mov
xlat
pop
into
das
xlat
xlat
clc
in
inc
sub
aad
sub
push
sub
pop
mov
mov
mov
fisttps
dec
pop
mov
jo
popf
or
xchg
and
mov
outsl
add
pop
pushf
ret
popa
mov
push
or
movsl
xchg
cmpsl
xchg
test
xchg
outsb
dec
pusha
loop
enter
icebp
imul
dec
push
insb
in
inc
fisttpl
xchg
jo
mov
fmull
adc
leave
fcomi
xchg
push
out
and
xchg
pop
mov
adc
xchg
dec
mov
je
ljmp
in
jne
mov
pop
jae
lret
rclb
lock
dec
and
push
pop
es
ljmp
mov
and
stc
jge
jl
std
or
or
push
mov
loop
add
inc
test
sbb
cwtl
repnz
cs
pop
popw
xchg
mov
jecxz
std
addl
test
test
test
push
das
fwait
insl
mov
xchg
mov
inc
bound
xchg
sub
push
xchg
hlt
dec
jle
ret
xchg
ds
xor
imul
pop
push
fsts
mov
movsb
mull
xchg
jle
fwait
push
fdivp
mov
pop
mov
lret
int3
push
arpl
push
sub
jo
andb
push
clc
push
arpl
imul
lret
mov
stos
movsl
imul
lods
lods
scas
or
push
repnz
push
pusha
mov
lea
cmp
movsl
lock
pop
fsts
insl
lret
out
jmp
and
or
or
cmp
jns
lcall
jae
jmp
movsl
ljmp
add
out
test
bnd
sbb
popa
movsb
lds
jecxz
sbbl
ret
flds
jecxz
xchg
adc
add
pop
sub
mov
imul
repz
lea
dec
jo
aam
fstps
addr16
dec
mov
imul
mov
lock
popa
xor
dec
push
std
adc
aad
outsl
int
pop
fcoml
stos
jnp
adc
adc
push
or
xlat
mov
mov
test
add
pop
jns
mov
inc
hlt
mov
adc
dec
pop
xchg
leave
and
xchg
mov
ljmp
dec
in
ljmp
sbb
dec
ror
rorb
mov
int3
cmp
popa
in
push
push
sub
fdiv
push
or
and
test
xchg
cmpsb
xchg
test
push
adc
push
insl
sub
jmp
gs
inc
fldt
sub
ficomps
mov
mov
clc
hlt
pop
in
mov
popw
mov
adc
daa
loope
or
dec
ret
lock
xchg
mov
inc
in
jo
sti
fistps
scas
fsubrl
push
jbe
mov
jne
inc
lcall
mov
jne
roll
mov
jne
cmp
loopne
decl
mov
and
sub
adc
inc
rcl
and
test
xchg
mov
push
sub
mov
mov
mov
inc
rorb
xor
shll
pop
mov
push
cmp
adc
arpl
clc
sub
sub
loopne
pop
cmpsb
fists
xor
lock
xor
scas
sbb
lcall
dec
imul
fisttpll
daa
mov
jmp
scas
adc
test
movsb
test
scas
shlb
cmpsl
inc
mov
flds
aaa
sbbb
jb
xchg
mov
sub
adc
inc
dec
cmpsb
rcrb
adc
dec
xchg
test
add
or
shlb
scas
sbbl
cmpsb
arpl
xchg
enter
dec
test
outsl
mov
movhps
flds
aam
les
cmp
outsl
fidivs
jo
stos
push
and
movsb
push
cmp
push
jcxz
insb
aas
out
insl
sub
pushf
xchg
jmp
mov
xchg
aam
inc
insl
and
lods
sbb
cmpsl
pop
pop
aam
popf
fs
rcrb
lcall
adc
xchg
jl
popf
lcall
xor
lret
sahf
aad
or
jge
mov
aad
dec
ss
icebp
loope
addr16
and
jns
cmpsl
stos
sub
xchg
cwtl
test
pop
mov
inc
push
shrl
jno
subl
test
sub
mov
mov
movsb
cmp
repz
imul
jne
fwait
and
add
mov
je
in
aas
dec
jo
sub
mov
int
xlat
mov
movsb
xchg
and
icebp
cwtl
pop
sbb
sahf
repz
fcomps
cmp
mov
cli
call
aam
in
adc
jne
sub
fs
adc
inc
in
cmpsl
cwtl
mov
dec
movsl
xchg
loopne
lcall
rcrl
xchg
imul
shlb
jbe
int
mov
push
je
mov
mov
cmp
and
cmp
jge
or
lcall
dec
add
sbb
sbb
gs
mov
pushf
imul
das
test
mov
mov
pushf
pop
push
dec
insl
mov
nop
cltd
and
imul
pop
rcrl
std
jbe
aam
sti
and
mov
cwtl
lcall
lods
arpl
xchg
mov
in
mov
ljmp
out
jnp
sub
int3
ds
mov
or
dec
push
in
xchg
cmp
dec
sbb
adc
fs
mov
lea
jle
sbb
arpl
ss
jbe
popf
lcall
test
pop
cltd
insb
popa
int3
aas
xchg
leave
pop
aad
push
jb
pop
pop
enter
mov
mov
and
dec
fisttpl
adc
fidivrl
int3
xor
aaa
daa
cmp
xchg
popf
mov
and
and
cli
pop
push
jp
into
stc
in
dec
test
aaa
ja
fs
lds
stos
xor
ret
cmpsb
lds
mov
adc
cli
xchg
mov
lock
inc
stos
ja
mov
pop
lods
arpl
mov
insl
adcl
ss
mov
xor
shlb
adc
push
jle
mov
and
mov
inc
cmp
inc
imul
push
addb
fsubr
or
pop
jbe
movsl
fwait
sbb
xchg
xchg
mov
mov
das
negb
loopne
add
es
jae
sub
imulb
xchg
idivb
xorl
mov
icebp
mov
movsl
or
ss
roll
ds
xchg
cmpl
push
daa
pop
pop
aaa
fmul
mov
pop
arpl
push
or
cmp
fdiv
lcall
pop
js
dec
bound
jo
or
notl
scas
push
loope
fldl
fcomps
call
stos
xchg
cmc
push
mov
imul
mov
lods
orb
sbb
xchg
pop
imul
mov
aad
mov
cs
add
xor
stos
mov
xor
pop
mov
lock
sub
stc
mov
nop
les
sub
sbb
scas
inc
dec
sbb
mov
xchg
pop
push
outsb
mov
or
jb
jle
scas
mov
jmp
cld
jbe
add
xor
arpl
and
push
xlat
xor
pop
lds
pop
fidivrs
roll
or
test
xor
sbb
fbld
stos
adc
dec
rclb
xchg
jl
les
test
pop
add
dec
fs
ss
scas
or
sbb
pop
or
adc
dec
or
jle
mov
and
fidivs
mov
or
cmp
dec
idiv
ret
and
shrb
idiv
pop
mov
repnz
mov
mov
mov
repnz
je
cmp
push
ljmp
fs
mov
test
and
add
out
xchg
sbb
mov
adc
sbb
fldl2t
jg
add
xchg
addb
into
inc
nop
in
rcl
nop
cmp
push
mov
and
lret
or
jge
test
dec
loopne
add
inc
add
lock
cmc
lods
mov
mov
out
icebp
mov
and
sbb
xor
pop
lret
push
lcall
ja
insb
dec
insb
push
into
push
push
and
and
add
mov
jo
cs
cmpb
and
xchg
roll
cmp
lret
mov
icebp
lock
ret
sbb
cs
call
insb
jg
stc
lret
leave
fcmovnu
pushf
and
sbb
dec
dec
daa
icebp
insb
popf
in
mov
sbb
sahf
jmp
jne
insl
xchg
lds
sub
add
int
push
fstps
fisubrl
mov
cmp
popf
sbb
cltd
mov
jbe
jnp
push
jp
mov
adc
xor
repnz
cmc
xor
ss
lret
stos
out
das
ret
or
push
or
or
sti
add
out
ss
fwait
ss
sbb
dec
jge
cltd
out
pop
sub
add
rorb
or
mov
lds
mov
int
fwait
lahf
cmp
scas
push
jmp
push
lret
inc
mov
enter
and
xchg
jb
xor
ret
stos
in
mov
pop
add
sti
push
adc
ret
in
sbb
cmpsb
cmp
fisubrl
jl
js
xor
call
sahf
imul
xchg
sbbb
pop
mov
xchg
fs
pop
shll
adc
mov
and
inc
add
adc
xchg
adc
leave
ret
jecxz
divb
mov
movsb
sub
jle
push
daa
dec
cmp
data16
fcoml
lret
jo
jecxz
xor
pop
add
and
push
pop
ja
addb
mov
mov
add
jo
ret
push
mov
xor
std
mov
xchg
lods
jmp
adc
dec
movsb
cmpsb
insb
mov
ljmp
dec
jl
mov
fs
lock
mov
pop
movsb
cwtl
cmc
xchg
les
test
popf
fs
popa
mov
add
sbb
xor
cmc
aam
sub
xchg
das
mov
lods
sbb
out
in
cmp
je
sub
enter
cli
cmp
lret
jmp
xor
mov
push
xor
cld
pop
pop
aaa
mov
push
pand
sbb
shrb
mull
pop
aam
xor
cmp
data16
outsl
mov
out
mov
sub
dec
cmp
fsubs
test
sub
push
aas
repz
and
sub
jbe
mov
iret
shlb
xlat
imul
adc
sub
inc
jne
dec
mov
stos
push
ss
and
sub
sub
ds
and
xor
mov
cmp
je
shr
mov
xor
sarb
dec
jo
push
cmp
imul
fstpt
jnp
pop
sbb
movb
das
sti
or
fdivrs
cltd
rcl
pop
jecxz
jp
out
add
and
dec
mov
mov
int
cltd
imull
jnp
in
mov
aam
sahf
or
mov
pop
jns
jp
jp
bound
in
or
jns
adc
daa
cmp
xchg
lret
rorl
jbe
fstpl
jnp
inc
lods
mov
enter
xor
and
xlat
jne
sub
dec
mov
inc
jg
push
mov
fidivl
movb
mov
fimull
mov
push
std
ss
or
lcall
xchg
in
cmp
push
fwait
cmp
pop
jb
mulb
lock
test
dec
pop
or
pop
imul
fs
sub
mov
jnp
test
push
stc
movsl
lods
repz
movsb
xor
mov
jae
cwtl
jbe
stos
xchg
mov
add
sub
jo
out
sbb
adc
pop
sbb
imulb
cmp
lea
loop
lock
mov
adc
gs
ret
cmpsb
movsb
rcrl
push
cmp
leave
sbb
insl
ljmp
cmp
pop
lcall
xchg
ljmp
push
mov
xor
push
inc
inc
push
mov
call
xor
or
push
add
add
pop
or
push
add
shlb
lods
shrb
push
inc
enter
add
pusha
or
pop
add
jl
cwtl
and
or
out
imul
in
lret
push
test
scas
outsb
push
mov
mov
push
inc
lock
enter
push
or
pushf
sbb
popa
lea
jle
xor
lret
xor
push
pop
rolb
inc
movsl
and
pop
inc
dec
mov
lods
loopne
fisubrs
and
dec
fisttpll
mov
push
push
push
inc
sbb
sbb
xor
cmp
adc
mov
sbb
jbe
int
call
add
jae
out
sub
sub
jg
add
or
jb
out
repz
push
sbb
testb
mov
xor
xor
sti
cmp
jns
loop
push
add
dec
ret
xchg
in
and
push
add
inc
jo
mov
lods
clc
mov
jmp
popa
stc
cmc
pop
fs
dec
sub
cmp
lods
pop
cwtl
ss
std
xor
daa
shl
cmp
sbb
shll
mov
xlat
enter
lahf
mov
sarb
pop
leave
bound
adc
adc
mov
flds
pop
sbb
ja
outsb
rcll
push
add
jnp
sbb
idivl
sub
push
cmp
inc
add
jb
js
addl
lret
adc
push
cmp
cmp
sub
mov
sub
push
sub
jle
pop
in
dec
adc
lret
push
add
andl
test
xchg
dec
inc
dec
xor
mov
shl
pusha
inc
pop
inc
and
push
or
hlt
dec
inc
decl
mov
js
sarb
out
or
push
pop
mov
shlb
mov
xor
faddp
mov
test
sbb
ret
negb
out
testl
push
push
rcr
and
mov
loop
or
sbb
rclb
or
pushf
push
mov
mov
sbb
and
adc
and
push
push
pop
xchg
sahf
mov
sbb
mov
shrb
add
jbe
mov
pop
mov
sbb
std
mov
inc
mov
mov
pushf
or
sbb
lds
xchg
inc
add
gs
inc
lcall
xchg
call
add
xchg
sub
repz
stc
cwtl
sbb
ja
pop
daa
or
mov
mov
pusha
cmp
adc
sahf
scas
inc
xchg
fucomp
and
sub
or
push
push
int3
cvtdq2ps
loop
fdivp
add
jp
fisttps
inc
aas
mov
std
mov
fldenv
pop
loopne
lret
push
dec
into
shll
ret
and
test
sbb
pop
outsl
xor
nop
loope
push
outsb
sbb
pusha
sub
shl
jbe
mov
in
je
sbb
mov
or
sub
push
ljmp
push
or
xorl
shrl
out
ljmp
hlt
adc
movb
movb
jecxz
or
jl
outsb
in
outsl
sub
loop
fstl
cmp
sbbb
imul
sti
rclb
jo
cli
and
dec
ret
aad
add
jne
inc
out
cmpsl
add
and
mov
and
and
loopne
push
pop
mov
scas
dec
in
and
mov
sub
adc
sbb
lret
cmp
add
bound
hlt
int3
daa
dec
inc
jge
into
hlt
adc
sarl
or
sub
jp
and
mov
or
pop
sbb
mov
mov
cmp
pop
add
iret
mov
adc
inc
adc
cmp
mov
mov
adc
mov
ret
inc
dec
scas
outsb
jo
mov
daa
or
adc
push
out
jb
and
or
loopne
push
test
mov
les
addb
cmp
and
pop
daa
rcrb
dec
gs
or
les
mov
pop
loopne
jle
dec
cmp
push
dec
jno
push
jae
cld
cmp
call
adc
cmp
push
jle
or
in
icebp
fs
insb
mov
mov
mov
loop
mov
popf
dec
dec
jp
mov
aam
testl
mov
out
shrb
add
pop
in
and
mov
xor
sub
movsl
loope
dec
mov
or
cmpsl
add
rclb
push
mov
add
outsb
adc
or
dec
rcll
push
cltd
pop
orb
adc
inc
add
jnp
cli
adc
lds
and
adc
adc
add
xor
mov
or
rol
xor
add
adc
xor
out
data16
test
add
jnp
jmp
add
in
inc
add
and
xchg
popf
leave
outsl
int
xchg
push
sbb
call
lcall
push
push
test
test
or
push
outsb
pop
scas
mov
out
in
or
mov
and
cmp
jge
call
and
shll
test
push
andb
xchg
mov
scas
and
leave
inc
outsl
call
fistpll
incl
ffreep
mov
into
dec
in
adc
js
mov
fisttpl
add
push
xchg
cmp
add
mov
pop
ret
fcoms
push
jg
cmc
dec
fadd
sbb
jnp
jnp
sbb
push
cli
sbb
jbe
push
xor
push
sbbb
mov
fistpll
mov
shrl
mov
sub
fnsave
push
lea
sbb
jecxz
inc
test
inc
pop
sahf
pop
fdivl
daa
or
repz
mov
or
outsb
mov
inc
in
push
sti
iret
clc
adc
xchg
dec
movsl
ds
cmp
cld
subb
int3
xor
mov
jo
jg
or
cld
repnz
or
pop
mov
das
fiadds
aas
sub
pop
jmp
lret
repz
lret
dec
out
cmp
out
xchg
pop
cld
call
test
loop
cmp
mov
mov
bound
insb
mov
add
mov
iret
test
cwtl
jno
xchg
fcomip
xchg
push
xor
outsl
sbb
dec
mov
dec
cmpsl
nop
stos
cmpsb
incb
lds
sub
xchg
jae
push
fisttpll
pop
mov
out
push
in
loop
lea
cmp
dec
sbb
dec
pop
mov
fbld
test
jl
ds
fsubl
test
aas
add
cmp
xchg
jl
rclb
stos
decb
inc
sbb
xchg
daa
xchg
ljmp
dec
lds
lds
xchg
push
mov
sub
pop
inc
jmp
jecxz
push
sub
or
ljmp
mov
xchg
sub
bound
stc
sti
add
addr16
sti
gs
jno
repnz
xchg
adc
inc
loop
outsb
mov
mov
mov
jl
test
jecxz
cmp
xchg
orl
cmpsb
sub
test
jns
je
xchg
xchg
add
jg
mov
js
js
jg
sbb
push
inc
inc
test
adc
pop
push
xchg
lods
aas
sbb
aas
daa
insb
out
or
or
lahf
dec
sbb
jl
das
mov
pop
daa
cmp
fidivrs
jno
scas
sbb
dec
add
mov
mov
pop
or
xchg
xchg
fcomps
int3
jmp
pop
adc
cmp
mov
xor
in
out
mov
mov
cmp
xchg
adc
or
dec
sbb
jmp
push
sarb
add
aam
xor
js
outsb
dec
sbb
jb
iret
js
fdivp
dec
inc
push
sbb
mov
aas
cli
cld
dec
es
sbb
jmp
mov
lods
xchg
into
je
jg
in
push
rcll
xchg
bound
dec
and
lods
cmp
in
mov
xor
add
push
xor
clc
fcoml
icebp
cmp
sub
adc
dec
lret
int
outsl
pop
daa
ret
int3
repz
push
push
xchg
adc
xchg
test
repnz
push
test
movsb
push
push
jne
jae
sub
ret
gs
lahf
shrl
daa
sub
lcall
lock
test
xchg
mov
add
out
ja
loopne
test
fisubrs
divl
cld
out
inc
mov
in
mov
gs
aam
adcl
fwait
cli
pop
lahf
hlt
sub
roll
daa
aad
repnz
hlt
push
or
cmpsb
and
aaa
lret
dec
cltd
jge
jle
insb
pushf
jbe
addr16
jnp
pop
push
idivl
stc
stc
popf
repnz
lret
fcoml
cli
xchg
call
add
sub
dec
sti
dec
outsl
clc
jp
out
in
into
sti
out
sahf
stc
sti
lds
fists
mov
fs
mov
inc
hlt
daa
cmc
scas
mov
stc
inc
outsl
mov
add
in
cmp
das
xchg
inc
push
cs
sti
inc
or
loopne
repnz
in
out
outsl
xchg
addr16
negb
ret
nop
iret
pop
xchg
jg
test
addr16
jp
jno
cli
imul
nop
mov
unpckhps
adc
mov
push
out
out
push
jge
shl
repnz
roll
iret
jmp
sub
into
daa
in
out
clc
adc
dec
jno
jns
vmovntps
xchg
jb
jno
repnz
out
sbb
hlt
sbbl
jp
or
pushf
ja
ret
cli
pop
mov
scas
inc
pop
daa
mov
sbb
jnp
lret
aad
daa
xor
pusha
xor
add
mov
out
movb
jp
clc
imul
shlb
loop
out
fstpl
pop
xor
mov
cmpsl
orl
sbb
pcmpgtw
loopne
cmp
xchg
imul
mov
dec
pop
clc
push
sub
int3
pop
inc
std
sarb
js
jb
repz
rcll
jmp
repz
sub
mov
push
pop
ds
in
xchg
push
xor
cmpsl
icebp
mov
mov
sub
shlb
cmp
fcomip
pop
jmp
or
outsb
daa
jl
pop
mov
test
sbb
ja
daa
mov
add
daa
push
sahf
inc
rolb
pop
shlb
xchg
adc
daa
push
sahf
inc
jge
add
jo
and
or
ret
mov
mov
jbe
inc
test
adc
push
add
shufps
add
mov
sbbl
push
and
faddl
stc
sbb
adc
ss
das
fiaddl
jne
out
lods
adc
sbb
repnz
addr16
and
or
aaa
or
mov
or
lods
je
mov
cmpb
inc
mov
cmp
sub
je
shlb
pusha
or
repz
shlb
sbb
dec
add
pop
cmp
cwtl
or
stos
subb
enter
add
push
add
or
cmp
push
adc
test
add
pusha
push
inc
push
inc
js
rolb
xlat
inc
popa
add
add
inc
add
sbbb
or
pusha
mov
and
cmp
faddl
adc
in
xor
add
jae
test
xor
fldl
in
stc
mov
out
shll
rorb
mov
mov
fwait
mov
loopne
nop
pop
xor
cmp
fsubrs
cmpb
ds
pop
rcrb
jmp
roll
addl
or
ljmp
sub
pop
mov
lock
ljmp
push
or
inc
add
mov
bound
or
jo
add
adc
xorb
fcomps
inc
jmp
xor
push
jecxz
xlat
sbbl
pop
jge
inc
sbb
fcom
testb
enter
cli
ljmp
mulb
xorl
shlb
push
pusha
adc
ror
cmp
mov
add
add
cmp
mov
xor
enter
mov
push
mov
aas
les
mov
pop
dec
outsl
push
lock
lret
cmpsb
mov
and
push
sbb
in
pop
lds
add
jo
add
sub
mov
out
mov
jnp
ja
cltd
addr16
stc
mov
out
dec
add
or
lock
cmp
add
ret
jno
jmp
jae
andb
faddl
xchg
jbe
loopne
inc
loop
jp
dec
mov
mov
sahf
cmp
adc
inc
add
or
add
or
mov
and
and
and
stos
mov
sarl
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
and
sub
roll
sarb
add
inc
inc
push
mov
adc
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
nop
pop
and
mov
and
and
and
cmp
and
add
add
cmp
or
inc
testb
and
pop
sub
enter
or
mov
jo
jo
test
orb
mov
orb
mov
andb
and
push
and
push
and
push
xor
push
and
lock
cmp
or
loope
and
add
and
mov
add
dec
add
dec
add
dec
jle
mov
subl
subl
push
add
xchg
or
adc
adc
adc
adc
test
lock
add
inc
add
daa
pop
push
add
add
or
mov
movaps
push
cmp
inc
inc
mul
inc
mov
inc
mov
loopne
mov
cmp
push
stos
cmp
daa
jge
shrd
fisttpll
sbb
sub
ds
loopew
xchg
mov
push
fnstsw
les
outsb
lahf
ja
fldl
into
cli
std
jns
sarl
xor
jb
push
xchg
pop
xchg
mov
incl
repz
xor
inc
dec
jg
and
cmp
imul
repz
sahf
push
adc
inc
and
rcrl
cmp
jae
pop
mov
mov
mov
notl
incb
mov
lds
mov
aam
addr16
and
in
adc
push
xchg
xchg
repz
sub
popa
loop
dec
aas
neg
hlt
jne
paddw
loope
lea
sahf
mov
sbbb
cmp
mov
fsts
pusha
push
lret
jl
mov
test
mov
imul
fisubrl
mov
stos
sub
out
inc
dec
mov
outsb
stos
inc
imulb
stc
pop
jg
icebp
push
cmp
imulb
roll
pop
outsb
mov
mov
lods
sbb
popa
sbb
push
mov
xor
cmp
adc
test
inc
stos
mov
inc
pop
fiaddl
incl
or
adc
jo
popa
dec
mov
es
mov
ret
cmp
clc
sub
pop
lahf
adc
out
jb
insb
and
cltd
imull
in
mulb
les
movsb
and
mov
push
out
das
xor
pop
inc
sbb
mov
jbe
shlb
cld
shrb
xchg
jns
cli
xchg
jne
icebp
jmp
push
push
sti
stos
mov
add
insl
outsb
outsb
cld
xor
inc
jbe
dec
pop
xchg
mov
add
xchg
ljmp
lods
cmpsl
ret
pop
mov
int3
std
jae
std
call
add
pop
adc
mov
lahf
dec
jecxz
pop
out
inc
jg
push
shll
flds
push
xlat
lret
fwait
in
pop
adc
mov
cmpsl
pop
movsb
cmpsl
pop
movsb
xchg
pop
cmpsl
addr16
cmpsl
daa
push
cmpsb
push
sbb
cwtl
jne
mov
test
lret
lcall
xchg
mov
sub
repz
adc
aas
or
xor
iret
ret
aas
or
xor
iret
ret
aas
or
xor
iret
ret
aas
or
xor
iret
ret
aas
or
xor
iret
ret
aas
or
xor
iret
ret
aas
or
xor
iret
ret
aas
or
aaa
repnz
test
fldl
in
neg
or
push
mov
jge
repz
mov
lock
jle
loopne
add
fists
lock
js
pop
ljmp
lock
insb
ret
pop
adc
push
orl
mov
or
sub
daa
or
sub
dec
cmpb
daa
jo
xorb
es
inc
inc
clc
inc
rorb
add
adc
inc
inc
mov
popf
or
movsl
add
pop
ja
jecxz
push
test
cmpb
call
sub
fwait
clc
pop
sub
push
lcall
or
push
stc
dec
xor
inc
repnz
and
cmpsb
adc
iret
xchg
ficoms
sub
lods
mov
js
test
mov
mov
loop
sbb
addr16
mov
lret
mov
imul
dec
ucomiss
mov
pop
test
ficoml
add
push
test
inc
addr16
mov
jl
add
int3
aas
call
rcll
sub
cwtl
mov
xchg
call
or
pop
fcompl
fstpl
int3
data16
push
movsl
mov
or
or
cltd
jnp
and
pushf
cmp
arpl
in
adc
mov
das
sub
push
pusha
adc
bound
bound
sbb
sbb
mov
inc
or
push
mov
bt
sub
mov
decb
mov
sbbl
sub
cmp
jnp
and
movsl
or
das
subb
das
cltd
das
pop
xor
imul
push
sbb
push
and
fsubrp
fstl
mov
sbb
pop
push
pop
push
cmp
mov
bound
cmp
push
into
xlat
push
hlt
and
fldcw
je
rcrl
pop
leave
sbb
outsb
jnp
movsb
minps
sahf
cmpb
cmp
shl
cli
arpl
arpl
mov
mov
ret
dec
cmp
or
lret
insb
nop
js
or
inc
xchg
test
nop
in
arpl
cmp
scas
push
in
cli
in
sub
push
in
rorl
mov
rorl
cmpsb
je
shlb
pop
inc
mov
pop
lret
cmp
mov
cmpsb
jl
cltd
outsl
add
lock
jmp
ljmp
in
out
add
or
inc
sub
loopne
fistps
cmp
jge
aam
cwtl
lret
cwtl
xchg
xor
popf
xor
xor
into
sub
lcall
or
pop
or
push
mov
push
js
in
arpl
cld
xchg
dec
sbb
dec
jne
xchg
bound
into
lods
out
and
pop
jbe
in
popa
fsub
mov
rolb
inc
cwtl
sbb
mov
xor
inc
mov
inc
lea
in
enter
push
pusha
shll
movsl
adc
insb
inc
xor
push
cmc
adc
cmp
ds
pop
xor
inc
xor
addr16
push
hlt
bound
jnp
add
test
stos
test
test
test
jno
jae
jbe
jbe
outsb
cmpsb
xchg
inc
cmp
test
cmp
dec
ret
daa
sub
out
jge
nop
mov
sub
mov
pushf
test
enter
lods
pop
cmc
je
xor
fdiv
call
loope
adc
call
lahf
out
xor
test
mov
or
jns
stos
sbb
push
push
test
and
and
inc
cltd
adc
movsl
push
pop
fs
push
lret
test
mov
lret
sbb
fiadds
push
pop
xchg
mov
mov
cmp
mov
inc
push
pusha
scas
lock
sbb
cs
sbb
mov
jae
xchg
cmp
mov
xchg
movsb
int
int
ret
and
aad
stos
adc
jbe
ja
outsl
and
aaa
jle
adc
int
fwait
ret
fwait
sbb
push
jb
jno
loop
nop
daa
xor
lahf
cmp
test
popf
and
test
sbb
add
scas
pop
pop
mov
dec
add
pushf
repz
and
jp
jbe
sar
rcrl
jecxz
pop
arpl
in
dec
clc
push
lahf
or
mov
inc
jmp
adc
popf
mov
cmp
inc
push
push
or
sbb
push
daa
inc
hlt
push
movsb
push
xor
les
pop
ljmp
jge
and
loop
in
stos
lahf
sar
cmp
add
dec
or
xchg
sub
xchg
pop
cmc
or
sub
fcoms
and
rcrb
pop
push
mov
push
mov
push
cwtl
sarl
out
js
xchg
test
mov
nop
aam
lods
popa
lods
leave
stos
test
sahf
nop
inc
call
mov
pop
jmp
popf
jmp
or
mov
orl
jle
xchg
leave
mov
push
subl
xchg
add
mov
rol
movsl
lret
dec
push
inc
dec
push
mov
inc
in
mov
xor
lret
sbb
xlat
out
and
add
fs
xchg
mov
push
pop
xor
jns
and
int
sahf
das
inc
pop
mov
ret
inc
xchg
jecxz
xchg
push
xchg
popa
clc
add
cmp
es
shrb
popa
mov
popl
sub
pop
adc
sub
or
fs
ljmp
cmpsb
pop
mov
repnz
out
int3
dec
cwtl
mov
cltd
xchg
xor
pop
int3
mov
jecxz
es
lcall
sbb
lcall
mov
push
dec
imul
xchg
mov
push
aam
enter
and
aam
test
jmp
popa
and
lea
add
fisttpl
in
leave
icebp
xor
data16
les
xor
jns
adc
in
and
or
in
mov
cmp
jno
jecxz
leave
xor
rorl
jecxz
xchg
mov
cmp
jb
in
enter
cmp
jb
xchg
xchg
leave
mov
add
aas
lods
pop
pop
mov
xlat
add
test
pop
and
sub
cs
data16
mov
inc
mov
gs
int3
sbb
adc
push
or
nop
push
insl
cmp
jns
repz
xchg
push
jle
mov
adc
hlt
pop
call
dec
dec
push
xchg
cmp
fldl2t
jecxz
daa
mov
mov
dec
andb
adcb
nop
inc
repnz
pop
xchg
pop
sub
daa
xchg
sbb
and
push
pop
or
aas
cmp
xchg
addl
xor
and
mov
andl
in
cmpsl
pop
mov
pop
xchg
sub
xor
flds
and
inc
cmp
xchg
into
xor
inc
rolb
adc
sbb
push
jb
mov
pusha
rol
mov
sub
sub
sbb
xchg
jp
inc
dec
adc
es
or
adc
in
add
in
hlt
sbb
mov
sub
push
xor
adc
movsl
cld
pop
in
sub
mov
ficoml
mov
xor
inc
add
mov
xchg
mov
sbb
cmp
call
mov
mov
xchg
icebp
sub
test
mov
sub
dec
xchg
ljmp
push
aam
lds
jecxz
inc
loop
add
repz
cmp
xchg
inc
and
adc
ficoml
xchg
inc
je
in
xor
xchg
or
mov
bound
adc
lret
xchg
sub
pop
xchg
fnstenv
push
js
or
mov
fs
pop
mov
lcall
stc
inc
xchg
es
dec
aam
lret
push
push
push
jp
es
data16
mov
xchg
xchg
mov
pop
inc
dec
repnz
bound
push
jno
sbb
orb
push
xchg
add
cmpsl
dec
push
jns
mov
xchg
cmpsb
pop
xchg
mov
decl
pop
push
mov
dec
jbe
mov
xchg
mov
shlb
and
popl
fsts
and
cmc
and
jp
cmp
enter
in
adc
ret
aas
or
xor
iret
ret
aas
or
xor
jmp
clc
mov
addr16
xchg
sub
push
mov
mov
pop
es
jmp
sub
cmp
das
inc
incb
dec
call
fisubl
prefetcht2
shll
pop
inc
aas
inc
nop
cld
cmp
and
outsb
and
stos
iret
imul
stc
or
cltd
add
lea
or
das
sub
xor
pop
pop
nop
lea
loop
or
push
mov
scas
dec
jo
in
push
inc
fnop
ja
sbb
loop
jle
adc
sbb
mov
insb
mov
popa
jbe
xlat
mov
cmp
testb
cwtl
xchg
loopne
lret
adc
and
and
xlat
add
push
stos
jnp
movsb
gs
lcall
mov
lret
ss
mov
xor
repz
or
sbb
xlat
xor
es
cmp
cmp
and
testb
jbe
shr
jae
in
outsb
negb
iret
clc
cmp
dec
xchg
addr16
dec
mov
mov
jae
cmp
bound
cld
dec
add
lea
lahf
popa
int
dec
cmpsl
push
sbb
fwait
jne
fs
scas
lea
push
je
adc
lods
les
imul
popa
mov
mov
jnp
inc
pop
jbe
push
push
sbb
inc
mov
adc
int
lods
and
xor
mov
ret
aam
mov
iret
adc
pop
inc
add
mov
sub
sub
xor
sub
enter
adc
es
and
xchg
jb
movsb
mov
fs
or
cmpsb
pop
sarb
std
or
sbbb
fisubl
sbb
lahf
inc
lahf
ret
fs
sub
insl
or
xchg
lcall
out
faddl
stc
jp
repnz
dec
daa
nop
push
mov
cs
adc
mov
inc
pop
push
mov
in
test
adc
loope
xor
sbb
cmp
lods
xchg
sub
cmp
mov
xchg
fisttpl
int3
or
sbb
fsts
pop
jne
frstor
push
mov
out
nop
addr16
fs
mov
pop
mov
and
jb
push
inc
cmp
mov
insb
popa
xchg
mov
or
sarb
inc
mov
test
xor
xor
mov
jb
das
outsb
iret
push
push
bound
test
jno
das
sub
cmpl
and
xchg
jnp
mov
mov
outsb
sub
pushf
mov
test
lret
scas
xor
or
jle
jne
outsb
stos
inc
fbstp
mov
ds
push
xchg
int3
dec
addr16
dec
and
int3
int
dec
lods
mov
mov
inc
or
jmp
adc
inc
je
xchg
pop
jo
jae
pop
xlat
mov
xchg
mov
dec
fistpll
mov
pushf
push
pop
mov
jno
pop
aam
insb
das
xlat
mull
pop
jl
in
add
arpl
inc
aam
icebp
test
mov
adc
xchg
pop
fwait
std
xchg
push
cmp
mov
dec
sti
popa
sbb
in
loop
mov
rol
mov
into
mov
xor
fcoms
xchg
jge
mov
clc
roll
xor
cmp
and
rcl
jns
in
scas
adc
das
loopne
ficoms
xchg
leave
xchg
cmpsl
push
sbb
lret
movsb
sub
fimuls
gs
test
in
mov
in
xchg
mov
mov
repz
add
es
addr16
push
sub
rclb
scas
mov
inc
out
negb
xchg
divb
jp
scas
popa
cmp
push
jnp
cmpb
dec
inc
xor
orl
lock
mov
and
sbb
mov
xchg
not
sub
cmpsl
adc
out
lds
push
addl
ficomps
push
loop
and
push
ds
mov
lods
cmp
dec
mov
fsts
add
stos
fs
insl
loop
and
insb
sbb
lret
lea
pop
lahf
shrl
and
in
fsubr
aam
xchg
mov
jge
jae
pusha
mov
repnz
jge
ror
inc
xchg
incb
or
out
imul
div
xchg
lret
push
stc
jge
ror
xchg
adc
lods
fstpl
xchg
sarl
jne
cmpsl
or
popa
movsb
xor
lock
jo
jmp
push
sbb
cmpsb
imul
fisttpll
cmc
jns
sub
inc
jns
shr
imul
xchg
xchg
or
cmp
int
xor
adc
mov
dec
adcl
mov
mov
adc
inc
and
mov
into
popa
mov
andl
rclb
pushf
push
mov
mov
test
add
cmpsb
lahf
insb
mov
xchg
jne
sbb
sbb
or
pop
out
rclb
sbb
sub
int3
jl
pop
jns
xor
jae
adc
movsb
sub
pop
cmpsl
aad
out
notb
or
dec
jge
lods
pop
fsts
mov
arpl
lds
lcall
fistpl
mov
out
jae
out
mov
std
sbb
jmp
push
or
cmp
imull
aad
and
jmp
mov
daa
insb
out
sti
aaa
inc
xor
lcall
push
roll
outsb
adc
jmp
aas
pushf
push
pop
pop
xchg
outsl
pop
mov
jge
test
movsl
pop
cmpsl
imul
xor
enter
in
test
lahf
fucomp
cwtl
dec
fdiv
xchg
jb
sbb
fisttpll
jl
imul
mov
xchg
out
cmp
popa
jb
or
stos
lcall
fdivs
popf
pop
sti
pop
mov
cmp
into
arpl
push
sbb
das
push
dec
insb
stos
push
imul
js
cmp
and
shrl
mov
push
insl
stc
pop
dec
dec
subl
les
xchg
cmp
adc
fs
daa
pusha
cltd
sbb
mov
jp
stos
cmpl
ficomps
push
mov
repnz
cmp
xlat
mov
pop
cmp
pop
ret
cwtl
rcrl
jl
into
add
dec
imul
jmp
push
or
cli
fstl
pop
addr16
out
lods
sub
sbb
in
xchg
in
sbb
push
cmc
out
pop
gs
adc
xor
mov
shrd
cmpb
adc
mov
fstps
icebp
cmp
hlt
mov
cmp
gs
rcll
mov
fidivl
push
mov
adc
pop
xor
arpl
loop
das
fnstenv
jb
or
fmul
dec
fsubl
stos
ds
test
je
pop
or
pop
stos
cmp
ljmp
sub
insl
xor
push
mov
mov
in
lods
pop
ret
jle
movsl
subl
cmp
aaa
push
mov
ja
dec
sub
fwait
sbb
sbb
fimuls
xor
mov
hlt
int3
loop
mov
out
std
lock
fstps
hlt
popf
push
addr16
pop
ss
iret
aaa
cli
lret
test
loope
add
mov
pusha
xchg
xchg
aaa
pop
cmpsl
cmp
jne
mov
mov
and
jmp
push
aaa
js
andb
outsl
imul
mov
movsl
pop
fst
cmovle
mov
cmp
mov
repz
movsb
faddl
pop
outsl
imul
or
jecxz
and
hlt
std
es
pop
sbb
jo
out
xchg
lret
cltd
jne
inc
dec
ficompl
sub
and
je
imul
fisttps
mov
ret
fmulp
pop
jp
lds
xchg
sub
movsb
outsl
pop
je
xchg
pop
xchg
shl
std
cmpsl
lods
mov
cltd
imul
jo
pop
mov
cmp
popf
lods
hlt
jmp
xlat
js
shll
cs
add
xchg
jbe
outsb
scas
imul
inc
xor
leave
cmpsb
in
xor
inc
lret
sbb
push
dec
hlt
lret
xchg
xchg
in
movsb
movsl
mov
fimuls
cmp
fisubrl
popa
mov
xlat
mov
adc
jecxz
sbb
jmp
dec
fwait
mov
pushf
rcl
idiv
pop
test
ret
les
stos
mov
mov
popf
sbb
out
into
inc
aad
sbb
and
stc
imul
int
xor
cmpb
dec
mov
adc
shl
fidivrs
mov
mov
ds
leave
pop
dec
int
mov
add
iret
jne
mov
dec
push
shr
lcall
fldt
ja
add
dec
ret
fneni(8087
jnp
and
sub
ljmp
sub
bound
mov
cli
das
push
ret
xchg
fcmovnbe
push
divps
pop
leave
cmpsl
mov
dec
insl
imulb
cmpsb
add
push
mov
scas
mov
xlat
outsl
or
imul
jno
test
push
call
call
dec
stc
pop
cltd
rcrb
ja
mov
clc
push
and
xchg
test
bound
jae
cmc
inc
in
and
clc
sbb
mov
leave
and
fsubrl
xchg
popa
mov
push
sti
pop
dec
leave
cmp
or
insl
mov
mov
cmp
rcrb
iret
sbb
enter
fstpl
pop
outsb
sub
mov
sbb
gs
sbb
mov
addr16
std
mov
xchg
jge
out
mov
insl
js
scas
xor
out
lret
in
sti
in
std
adc
jo
rcrl
xchg
jge
push
stc
xlat
dec
push
pop
fdecstp
flds
je
lahf
popf
out
iret
xchg
fwait
cmp
shrl
pop
rorl
xorl
add
adc
insl
lods
jle
adc
scas
outsb
sub
pushf
adc
cmc
xchg
cs
mov
sbb
adc
xchg
adc
lcall
push
inc
movsb
call
sbb
aaa
add
dec
fwait
sbb
mov
lret
insb
fs
mov
xlat
scas
pop
outsl
leave
and
movsb
addr16
pop
lahf
cmp
icebp
pop
test
icebp
adc
aad
pop
int3
aam
pop
inc
mov
xor
sbb
jp
cmp
add
add
pushf
sub
mov
in
pop
negb
xchg
lods
popa
pop
out
fs
das
clc
adc
xorl
data16
lods
xlat
int
test
xchg
rcrl
add
push
ficomps
btsl
fwait
lea
lods
sub
popf
dec
ret
dec
cwtl
jge
frstor
pop
sub
jne
rorl
inc
xor
cltd
daa
movsb
adc
iret
int
nop
lcall
fnclex
sahf
xor
adcl
sbb
int
jne
or
dec
mov
xchg
mov
int
cs
and
jge
mov
iret
pop
fsubs
sbb
cmp
mov
push
lods
imul
dec
jne,pn
hlt
pop
or
out
mov
mov
ja
shll
mov
cmp
jns
jbe
cmpsb
call
sbb
lds
pop
repz
repz
mov
ret
int3
mov
enter
test
jno
frstpm(287
cs
mov
mov
mov
hlt
push
push
fcomps
lahf
dec
shrl
push
popf
icebp
fcoms
push
stc
mov
imul
pop
sbb
push
icebp
hlt
xlat
loop
xor
mov
imul
pop
jnp
dec
mov
xor
xor
mov
sub
mov
sbb
pop
test
insb
out
fcomi
pop
scas
mov
insb
mov
das
cmp
cltd
xor
lock
stos
cs
cmp
fistpl
mov
mov
into
imul
mov
iret
into
sbb
xor
loopne
movsl
pop
xchg
dec
popf
shlb
adc
fstpl
pop
push
fwait
in
jo
repz
push
push
cld
xlat
mov
cmc
lret
mov
bnd
jbe
rcl
push
inc
aam
mov
fnstenv
push
outsl
push
imul
dec
cli
or
ja
mov
ret
lea
das
aaa
and
sbb
jmp
nop
leave
adc
outsl
jne
sbb
in
adc
es
cmp
fisubs
popf
xchg
mov
and
mov
cmpsl
mov
popa
cmpsl
dec
jne
cmp
arpl
ret
leave
divl
inc
mov
loope
shlb
or
lret
mov
push
jo
xchg
sub
cmp
sub
cltd
fisttpll
mov
sub
lds
dec
sahf
mov
fisttpll
cli
mov
lret
pop
sub
push
jnp
inc
sub
scas
loop
fstps
iret
arpl
push
xor
pop
jge
jecxz
les
imul
mov
adc
insb
mov
mov
das
xor
inc
add
je
adc
and
mov
jne
test
in
cli
jle
push
add
sbbb
stos
jno
mov
xchg
in
and
push
or
aaa
daa
xchg
ljmp
aam
or
xchg
test
mov
mov
mov
inc
mov
out
add
push
test
push
push
aad
push
int3
sub
test
mov
add
adc
les
aam
sbb
add
add
xchg
lods
mov
xor
and
push
and
and
fnsave
imul
cmpsb
mov
mov
lahf
mov
jo
jnp
insl
scas
pop
repz
push
lret
add
pushf
loope
shr
ja
std
inc
lret
and
cmp
loopne
pop
ljmp
insl
sbb
lret
repz
enter
sbb
mov
jl
int3
lds
mov
cmpsl
out
dec
ljmp
mov
outsl
pop
push
push
xor
push
mov
mov
popa
add
mov
pop
lods
arpl
and
xchg
inc
add
add
push
inc
sbb
cmpl
sub
jecxz
lods
sub
xor
cmpsl
xor
mov
lcall
fisttpll
repz
loopne
and
subl
insb
in
cmp
pop
add
test
xchg
xor
push
je
xor
jl
pop
gs
push
pop
ror
lcall
inc
jg
bound
dec
aad
xor
jle
in
filds
xor
mov
mov
xor
aaa
out
sarl
ret
adc
adc
cmc
pop
inc
lock
add
movsb
jmp
dec
rol
pushf
fwait
addl
fidivl
xor
xchg
push
xor
int
stc
divl
or
dec
inc
jno
fcmovnbe
jle
pop
cmp
xor
inc
mov
loopne
sbb
lock
hlt
pop
xchg
fcomi
lret
cmp
jmp
push
out
xchg
mov
mov
hlt
inc
mov
or
out
or
jbe
jnp
cli
cmpsb
push
and
push
pop
stc
ss
mov
pushf
sti
or
sbb
cmp
cld
nop
je
push
out
dec
fsubl
or
ret
popf
iret
aaa
jno
mov
adc
mov
mov
repz
mov
cmp
js
cmc
daa
cmp
ret
in
lock
mov
jb
mov
mov
jp
mov
jle
sar
add
sub
adc
xor
xchg
in
push
fdivl
fdivrs
mov
mov
add
push
sbb
dec
xchg
and
mov
or
pop
mov
je
hlt
lods
xchg
jecxz
movsb
sarb
pop
aaa
fwait
les
lods
push
rcrl
add
and
divl
sbb
dec
lods
sahf
rorb
jmp
mov
push
cltd
loope
test
cwtl
pop
and
sar
fnstsw
out
mov
or
stos
call
out
std
jecxz
jp
sbb
cwtl
cltd
push
stos
mov
pop
push
mov
scas
adc
leave
cmp
out
cmp
stos
adc
push
sbbb
xor
inc
xchg
test
cld
out
cmp
je
test
pop
lret
mov
pop
inc
fcoms
jmp
push
rorl
rcrb
jb
mov
jmp
imul
sbb
sti
sub
mov
push
aad
mov
mov
xchg
push
mov
arpl
lahf
xchg
xlat
ja
mov
les
fstl
test
and
aam
pop
ja
cmp
std
adc
test
lret
jecxz
push
pop
xor
ret
push
and
rclb
shrl
arpl
xor
mov
mov
bound
lahf
out
out
test
mov
cmp
bound
mov
sbb
out
fidivs
xor
and
repnz
sbb
aas
adc
in
xor
adc
push
mov
stos
pop
aam
sub
out
mov
sub
cmpsb
loop
push
iret
pop
mov
push
xor
out
rorb
mov
arpl
jge
push
jmp
mov
mov
cltd
jle
js
lahf
sub
mov
push
jge
pop
lds
xchg
mov
repnz
cli
imul
pop
xchg
aaa
iret
enter
sbb
pop
sub
out
mov
imul
insb
outsl
pop
je
pop
mov
mov
scas
jl
xchg
sbb
jecxz
mov
fst
mov
mov
push
lock
xchg
in
push
sbb
pop
jbe
nop
sbb
jbe
popa
jns
jno
int
popa
xor
pusha
sarl
xor
fadds
mov
loope
mov
in
add
sti
sahf
mov
call
pop
int
or
lret
jo
jg
outsb
insl
mov
sahf
insl
sbb
mov
inc
and
cmp
or
movsb
stc
mov
popa
dec
leave
cmpl
in
aam
ficoml
pop
call
sahf
addr16
fnstcw
adcl
mov
push
insl
movsl
cmpsl
call
iret
lock
scas
jg
pop
rorl
dec
insb
jo
mov
cs
xchg
and
pushf
ja
pop
aaa
cmp
addr16
or
mul
xchg
pop
add
testl
adc
lcall
rorb
jp
xchg
aam
mov
adc
add
mov
bnd
lods
ret
dec
les
aad
push
or
js
push
inc
bound
les
fs
jp
pop
js
or
ret
xor
jbe
adc
xchg
loop
sub
jmp
inc
jbe
jae
cmpl
loopne
inc
outsb
cld
hlt
sbb
sbb
fcmovnb
push
dec
pop
pop
cs
pop
nop
out
fwait
lods
mov
xchg
pop
mov
gs
mov
sbbl
andb
pop
dec
add
xchg
xchg
jg
xchg
mov
imul
jp
lahf
cmp
mov
xor
sarb
aad
inc
xchg
mov
mov
fdivs
insl
insb
leave
das
mov
push
pop
fidivrs
aaa
in
in
dec
aad
mov
outsl
push
cld
mov
cmpsb
cmc
stos
fmull
cmpsl
out
jg
in
in
mov
mov
jnp
out
scas
scas
cwtl
pop
push
pop
cltd
cmp
and
adc
test
cmpsl
mov
add
add
sub
repnz
push
push
cltd
xlat
rcr
add
sbb
pop
mov
in
jne
mov
jl
adc
push
je
out
or
std
xor
ret
push
dec
daa
lcall
xchg
cmpsl
cwtl
loope
dec
mov
cs
add
outsb
clc
or
cmp
insl
into
cmc
xor
in
inc
and
sub
aaa
mov
fldt
fldcw
push
adc
repnz
xor
flds
aam
test
fdivrl
lret
rcr
call
cmp
sbb
dec
or
cmp
je
mov
stos
jle
mov
mov
mov
mov
push
push
iret
test
inc
cs
call
dec
xor
pop
mov
push
fucom
rolb
push
sbb
xchg
sbb
sbb
pop
mov
cli
xor
dec
jl
imul
jl
sbb
and
mov
shrl
push
clc
push
mov
aad
jmp
dec
int
and
into
xchg
stc
fidivs
nop
inc
fcos
add
aad
mov
int3
dec
push
sub
mov
mov
scas
fs
into
cmp
cli
mov
xor
dec
or
aad
mov
or
stc
mov
add
fsubrl
cltd
mov
rcrb
mov
adc
pop
mul
mov
aam
sbb
mov
dec
dec
aam
adc
mov
and
push
mov
addr16
xor
push
push
nop
pushf
fdivl
rcll
ret
adc
in
cmpsb
xchg
dec
fcom
mov
push
popf
lds
cmp
fisttpll
sahf
inc
pop
stc
cltd
inc
out
test
mov
and
adc
add
in
push
pop
inc
push
adc
into
mov
cmp
test
xor
aaa
addr16
cmp
and
fbstp
das
and
cmp
lock
movsl
nop
dec
clc
lret
and
xchg
popf
imulb
adc
and
hlt
cmp
insl
arpl
aaa
bound
into
mov
mov
fwait
jbe
fwait
mov
add
jne
jae
lods
stc
add
mov
adc
dec
int3
nop
andl
jb
inc
xor
jno
std
aad
lahf
test
inc
push
push
or
push
push
cmc
mov
movsb
fwait
push
xchg
mov
jae
mov
and
imul
gs
jmp
push
fdivr
aam
jnp
adc
ja
ret
sub
push
jecxz
mov
lahf
xchg
iret
push
or
lock
push
fidivs
outsb
lea
add
xchg
push
xchg
fisttps
and
mov
les
mov
fbld
mov
xorb
pop
fwait
aam
in
and
xchg
jge
inc
dec
orb
push
aad
xor
dec
jl
or
outsb
adc
bound
and
or
aad
lock
xor
cwtl
icebp
dec
cmp
frstor
pop
sbbb
jne
rclb
shl
shr
pusha
xchg
push
ret
dec
popf
sbb
xchg
loope
std
adc
sbb
cmc
add
add
sbb
movsl
scas
mov
adc
dec
jns
xor
psrlq
lcall
dec
and
dec
in
stos
cmp
lea
push
icebp
bound
cmp
push
inc
pop
cmp
insb
mov
ss
js
jmp
stc
dec
scas
int3
and
jnp
in
jg
aas
fnstsw
inc
cmp
jle
mov
scas
mov
jbe
movsl
mov
inc
loop
mov
aaa
ja
inc
jp
shlb
dec
sbb
outsb
xchg
jae
imul
mov
out
push
mov
sub
xor
and
dec
inc
jae
daa
frstor
icebp
and
ljmp
cmpsl
push
xor
cwtl
jnp
ret
enter
sbb
out
sub
int3
test
dec
loopne
xchg
mov
call
pop
into
mov
mov
imul
lods
shl
fwait
popa
sub
aaa
mov
and
in
and
push
cld
lods
jge
cmc
fstpl
mov
sbb
inc
ret
jne
sbb
dec
sub
das
push
movsl
xchg
dec
inc
popa
insl
je
popf
lods
pop
fwait
enter
imull
inc
stos
std
mov
adc
mov
inc
push
inc
pop
lret
testb
addr16
sbb
or
outsb
jg
adc
stos
adc
or
leave
mov
decb
add
dec
pop
cli
push
ret
in
nop
inc
je
jge
add
repz
lret
sub
loop
mov
in
jae
mov
testb
fwait
inc
or
test
adc
out
mov
mov
mov
sub
jl
je
xchg
jne
mov
outsl
imul
icebp
mov
icebp
lahf
inc
pop
sbb
jmp
sbb
jle
add
in
lcall
add
std
cmc
aad
mov
mov
xchg
pushl
enter
lret
lock
jbe
test
mull
insb
mov
pop
shl
dec
out
loope
jns
loopne
imulb
mov
fdivl
push
aas
pop
pusha
stc
mov
loopne
pop
sti
sti
out
testl
push
int3
fbld
scas
adc
push
int
push
dec
xor
sahf
lock
sbbl
std
mov
fidivs
adc
or
xchg
incl
mov
loop
xor
outsl
or
jg
fidivs
sbb
xor
mov
dec
adc
mov
fs
ficomps
ljmp
enter
cltd
movsl
mov
call
xorl
xchg
jecxz
and
sbb
fidivrl
lock
aaa
add
loopne
sahf
inc
std
xor
loop
loope
cmp
mov
inc
jnp
pop
pop
cmc
mov
cmp
rcrb
xchg
jl
pushf
mov
adc
cli
sub
cmpl
jae
mov
pop
mov
pop
sbb
mov
movsl
pushf
test
lcall
cld
loope
insl
stos
popf
addb
jns
test
in
call
push
jmp
js
mov
and
fwait
test
scas
xchg
cltd
inc
or
push
push
int3
xchg
pop
inc
sbb
pop
jnp
xchg
or
outsb
test
out
out
and
sub
popl
pop
mov
adc
jmp
imul
push
call
xchg
in
adc
imul
ja
fstpl
xor
mov
shll
inc
pop
mov
xchg
pop
shr
xor
cmp
or
les
adc
in
shrl
push
out
add
mov
roll
rcll
push
adc
sub
pop
data16
adcb
or
mov
loopne
dec
lahf
xor
cmp
repnz
hlt
xchg
cmp
outsb
xchg
les
movsl
or
and
lods
mov
dec
xor
adc
inc
xchg
loopne
cli
sbb
test
pushl
pop
sub
int3
pop
cmpsb
xchg
cwtl
and
bound
mov
or
mov
jg
mov
xchg
loopne
mulb
mov
test
mov
mov
add
mulb
inc
jmp
cmpsb
outsl
jns
cmp
sbb
dec
xchg
xor
dec
cmpsb
pop
push
daa
ffree
pop
sbb
jge
fcompp
stc
and
mov
xor
and
shrl
and
mov
stc
mov
fdivl
pusha
outsl
jp
dec
add
hlt
mov
addl
cmc
adc
movsl
aam
enter
aam
or
mov
std
pop
out
out
xchg
push
push
jmp
mov
dec
rcrl
pop
lret
jp
cmp
stc
call
xor
xchg
adc
push
xchg
fldcw
dec
cltd
jmp
push
sti
cmp
iret
pushf
add
add
and
jo
adc
call
sbb
ss
cmp
mov
loop
or
jns
inc
ja
imul
cli
push
subl
mov
aad
xchg
push
xor
dec
xchg
out
fwait
fistpll
mov
pop
jl
nop
mov
aad
pop
dec
out
jae
mov
cmp
insl
data16
rclb
daa
int
sub
sub
mov
mov
mov
mov
shrl
sbbb
cs
adc
dec
jmp
rcr
cmpsb
lcall
mov
scas
ret
fimuls
fucompp
inc
jnp
inc
sub
leave
loop,pn
js
inc
jecxz
pop
cmpsl
inc
lods
xchg
sub
stc
inc
mov
push
mov
outsb
in
scas
pop
fs
pop
mov
cmp
in
adc
pop
push
loope
ss
push
lea
loopne
fwait
sub
lods
mov
dec
sub
clc
ljmp
loopne
mov
and
fimull
jge
sahf
add
popa
ss
push
in
cwtl
mov
out
xlat
dec
jg
dec
adc
mov
mov
testl
dec
and
outsb
pusha
mov
pop
loop
sub
movsl
dec
mov
out
push
and
mov
test
pop
mov
sub
inc
xchg
pop
sbb
cmp
cmpsb
adc
add
dec
rorb
or
cmp
je
dec
xchg
jnp
dec
xor
imul
jmp
and
pop
xchg
pop
xchg
fsubrp
in
xlat
jp
push
mov
insl
xor
mov
sbb
cli
ret
jmp
js
lcall
or
mov
mov
or
cwtl
pop
pushf
sarb
pop
shrb
jle
bound
push
insl
mov
popf
scas
lahf
pop
aas
lcall
in
scas
aaa
pop
shl
insl
mov
pop
sti
out
mov
and
push
in
call
inc
aas
stos
enter
or
jno
movsb
mov
outsl
and
outsb
test
push
push
adc
mov
adc
sbb
mov
in
idivl
into
mov
mov
lret
inc
mov
aam
cs
and
insl
mulb
and
shr
movsl
adc
into
mov
sub
mov
sub
push
js
xor
pop
and
dec
sbb
jns
inc
push
mov
mov
gs
add
adc
or
adc
stc
les
mov
movsl
pop
cltd
pop
mov
jmp
add
jl
loopne
ss
inc
jle
repz
push
movsb
fsubrl
jmp
lcall
repz
pop
lods
test
push
cmpsb
and
or
lds
and
add
sbb
mov
outsb
icebp
mov
jmp
repnz
cli
pop
cmpl
push
fisubrl
cld
pop
add
jge
sub
inc
les
xchg
jecxz
insb
mov
dec
add
xlat
cmc
roll
or
jo
xor
jbe
pop
adc
leave
fsubrl
adc
dec
scas
jb
test
jo
stc
scas
scas
out
mov
sub
jo
mov
mov
movsbl
gs
in
xor
inc
sub
into
xor
mov
das
cli
popa
pusha
push
insb
pushf
push
sbb
shlb
mov
sbb
xorb
adc
in
out
movsl
sbbl
adc
popa
mov
push
add
mov
pop
xchg
mov
push
push
les
sub
js
and
rolb
shll
push
mov
cmp
clc
fistpl
in
sbb
lea
sub
arpl
shll
push
sbb
cld
cmpsb
mov
cld
xor
jl
repz
fsub
into
push
test
xchg
push
cmpb
je
sbb
cmp
insl
mov
cmp
add
jge
out
lret
inc
jnp
add
idivl
jecxz
movsb
push
sbb
fcmovb
and
adc
or
adc
xchg
xchg
in
push
adc
add
in
mov
pop
sbb
adc
cmp
je
test
rcll
cmpl
push
sbb
faddp
popa
mov
xor
mov
icebp
mov
in
mov
mov
dec
xlat
inc
imul
iret
mov
in
mov
sub
cmp
mov
cmp
mov
mov
or
aas
pop
jle
mov
inc
push
cmpl
test
sub
lcall
sub
and
lods
inc
jp
dec
xor
and
pop
sbb
inc
inc
ret
sbb
or
xlat
in
loop
in
insl
sarb
push
inc
mov
shr
fimuls
lock
decb
fwait
push
inc
mov
push
fdiv
mov
aas
fnsave
fsubrp
mov
adc
in
mov
repnz
dec
dec
sub
pop
jge
dec
adc
inc
enter
pop
pop
outsb
add
push
xlat
mov
inc
jns
mov
arpl
in
hlt
push
sub
roll
cmpsl
das
fistpl
fs
xchg
adcb
push
dec
jo
jecxz
jo
fst
arpl
push
mov
sub
mov
scas
push
push
loope
mov
das
clc
sbb
xchg
aaa
loop
pop
pop
repnz
out
cmp
mov
inc
or
gs
add
jnp
lahf
cmpsl
clc
lcall
xchg
std
mov
sub
cwtl
aam
jg
xchg
jge
js
mov
mov
add
test
mov
xchg
lret
xchg
push
pop
jne
jmp
xchg
adc
push
imul
dec
push
dec
notb
push
call
push
test
shr
fwait
jp
les
cmc
je
cmp
lret
arpl
mov
mov
mov
inc
mov
sbb
inc
and
fwait
and
or
ljmp
sbb
inc
shll
inc
lds
fcoml
mov
movsb
mov
sub
daa
rcr
push
aad
fistpl
pop
mov
mov
cmp
ljmp
pop
mov
jno
scas
aam
ret
xor
adc
lret
ret
cmp
mov
add
xchg
xchg
lds
sti
mov
popa
scas
add
xchg
pusha
sahf
cmp
or
imul
lods
xchg
adc
jae
push
adc
stos
ljmp
and
and
xchg
and
hlt
mov
adc
adc
out
or
dec
das
add
fcomip
pop
in
fdivp
test
mov
xchg
aaa
dec
and
fstpl
push
or
mov
in
cs
xchg
push
aam
push
adc
int
int3
push
and
pop
imul
test
popa
add
fsubrs
and
jecxz
push
mov
jmp
orl
pop
sub
jno
or
push
fisttps
dec
jmp
scas
jg
xchg
mov
push
dec
pop
and
sbb
xchg
shll
scas
rcll
into
mov
sub
mov
fcmovnbe
and
mov
es
xor
jl
jp
fsubp
stos
and
mov
popf
ja
pop
outsl
push
xlat
loope
test
lods
jmp
imul
cmp
mov
aad
cld
inc
xchg
mov
js
fwait
fwait
imul
cmp
xchg
xchg
out
aaa
push
sbb
sbb
getsec
fidivrs
xchg
adc
mov
cli
jmp
lahf
xchg
xchg
jl
mov
mov
loope
dec
pop
push
das
addl
fucomp
lods
rorb
xchg
es
add
pushf
sti
int
jnp
mov
and
pop
or
ret
loope
idivl
mov
sub
mov
rclb
test
nop
call
sbb
pushf
mov
movsl
stos
ret
scas
xchg
pop
imul
push
and
and
imul
sub
dec
fistpll
shl
inc
scas
aaa
les
clc
loopne
bound
addl
mov
std
repnz
push
mov
sub
cmp
inc
repz
mov
roll
pop
or
xchg
mov
incl
sbb
clc
mov
clc
add
out
test
push
add
into
roll
xor
cli
mov
mov
pop
out
psubsb
cmp
add
aaa
pop
or
pop
out
push
fs
adc
mov
xchg
and
pop
add
jbe
ljmp
das
jmp
xor
pop
xor
cmpsb
aas
push
xchg
popa
or
or
push
popf
mov
sub
adc
push
inc
fldcw
mov
bound
das
iret
xchg
mulb
mov
mov
ret
or
inc
add
ret
add
pop
bound
stos
adc
repz
xchg
testl
push
cmp
jb
push
aas
subl
mov
mov
imul
mov
jl
jl
bsr
mov
fdivs
jle
xchg
mov
pop
and
xor
xchg
xchg
xor
leave
inc
pushf
jo
outsl
jmp
push
movb
fwait
sub
add
fimuls
shll
aad
mov
dec
xor
insl
leave
cmp
nop
addr16
jecxz
sahf
out
arpl
mov
adc
inc
jbe
push
inc
xlat
or
sub
push
pop
mov
pop
popa
jp
stos
ja
cs
js
cmpsl
hlt
jns
loope
stos
jle
push
cmp
push
andb
pop
inc
ret
adc
lock
adc
lods
fwait
jns
dec
push
bound
loopne
mov
jle
mov
insl
mov
add
push
leave
mov
xor
mov
cld
lods
sti
pop
xchg
mov
xchg
adc
jg
mov
sbb
fstpl
xchg
sbb
daa
data16
and
adc
jecxz
into
xchg
jno
inc
mov
cld
icebp
adc
jecxz
xchg
iret
mov
inc
in
leave
xor
lcall
leave
mov
xchg
jo
pop
mov
call
in
das
mov
loop
sub
jp
js
aas
mov
xchg
and
or
mov
hlt
stos
ds
and
sahf
sahf
fcoml
fisubrl
cltd
and
and
mov
lahf
sbb
pop
jno
sub
pop
in
clc
stc
pop
outsb
test
sub
or
mov
xor
xchg
fmull
jae
jbe
das
scas
or
jge
ljmp
xor
imul
dec
dec
decb
jns
mov
push
shlb
jl
dec
in
inc
jns
cmp
je
jle
adc
add
pop
pop
jecxz
pop
adc
push
loope
adc
sub
pusha
xchg
outsb
pop
mov
ljmp
sti
xchg
pop
inc
fcmovnu
dec
xor
xchg
and
xor
clc
leave
cli
adc
popa
sub
and
clc
lds
into
dec
mov
pop
push
push
jo
push
fisubrs
fidivl
mov
xor
mov
sub
inc
popf
add
push
popa
sbb
inc
orl
xor
jecxz
cwtl
incl
jg
into
jmp
cmp
mov
sub
cs
jb
push
pop
lea
aaa
pop
mov
loope
mov
inc
dec
cmc
test
push
pop
jle
stos
outsl
lods
ljmp
and
add
dec
arpl
iret
je
push
mov
lods
mov
push
sub
inc
and
faddl
push
sahf
minps
cmp
push
jnp
addr16
test
call
push
jb
mov
xchg
lcall
mov
ja
fwait
mov
fcomip
aam
mov
adc
lods
dec
or
int
mov
push
pusha
jo
sbb
ficompl
scas
lods
popf
pusha
pop
lds
in
xchg
cmp
or
cmpsb
out
fdivrs
pusha
andl
dec
xor
sub
test
into
push
jbe
jo
dec
ret
xlat
adc
mov
inc
push
test
out
dec
arpl
lea
cltd
push
cmp
int3
sub
mov
mov
and
test
adc
out
pop
xorl
xchg
ds
jmp
and
mov
stos
les
js
fdiv
repnz
sub
aam
xor
pop
fcmovne
xor
aam
insl
das
jne
mov
jge
mov
jmp
fst
or
ljmp
pop
mov
xchg
jge
adcl
lahf
and
popa
jns
shll
aad
sub
mov
pop
jle
call
incl
loopne
sti
xchg
push
cwtl
aaa
or
add
shl
movsl
jno
stos
mov
enter
xorl
xchg
inc
jae
xor
mov
arpl
ds
repnz
pop
or
les
lea
pusha
cwtl
adc
mov
add
xchg
stos
xchg
sub
es
ss
test
leave
mov
inc
and
pop
mov
leave
les
jo
ret
rcll
lea
or
out
repz
sub
andl
lret
sarl
andl
in
xchg
mov
aad
jecxz
mov
cmp
int
repz
jl
or
push
mov
mov
test
sbb
in
std
fisttpl
dec
sarl
stos
and
ret
les
sbb
outsl
mov
mov
push
xchg
or
push
push
fs
decb
mov
movsl
add
cli
mov
sbb
cmp
or
mov
mov
sbb
arpl
sbb
xchg
sbbb
pop
mov
mov
push
adc
sub
cmp
lock
jp
mov
push
xor
dec
pusha
inc
cmp
add
shll
mov
mov
inc
jg
fildl
aam
ljmp
loopne
inc
jle
lret
addr16
hlt
dec
mov
loop
add
or
nop
imul
mov
or
add
enter
lret
pop
addr16
push
inc
jecxz
daa
iret
mov
addr16
add
pop
popa
scas
les
jb
mov
outsl
adc
sbb
sets
fmuls
out
gs
data16
push
fistps
jb
pop
push
mov
jae
cmp
loop
push
mov
fnstcw
add
das
mov
mov
fprem
fimuls
lcall
mov
push
pop
pop
movsl
mov
mov
pop
cmp
mov
push
push
sbb
push
aad
adc
push
repz
jle
std
or
inc
js
dec
pop
cs
stos
sbb
bound
pop
mov
fdivs
mov
push
inc
cmp
adc
data16
sarl
xchg
mov
push
mov
jb
jg
fsts
sahf
mov
push
and
push
test
out
mov
lods
or
jge
jns
int3
out
sub
aam
mov
ret
sbb
ja
mov
out
imul
out
loop
mov
jmp
faddl
out
jl
ret
sub
mov
movsb
out
pop
add
sarl
scas
and
add
cmp
divb
xchg
iret
pop
icebp
xchg
out
ljmp
out
adc
imul
hlt
jae
dec
stos
sub
pop
hlt
int3
or
mov
cmp
sub
adc
cmp
dec
mov
pop
out
xor
out
jg
mov
push
mov
mov
mov
cmp
adc
arpl
xor
cmp
sar
test
sbb
jg
push
addr16
mov
inc
nop
mov
push
call
pop
arpl
adc
pop
adc
mov
ret
fcmovbe
jecxz
fwait
push
pusha
mov
cli
xchg
test
xchg
stc
mov
out
lcall
aaa
ja
addr16
jmp
aas
and
sar
leave
adc
pop
test
rorb
cmc
clc
adcl
xchg
sub
aam
xor
fiadds
mov
mov
shr
jge
test
bound
hlt
lock
jge
cld
xchg
enter
in
mov
xlat
mov
fisubrl
mov
leave
mov
lods
mov
out
dec
call
sbb
dec
dec
xchg
fsubr
rcll
adc
dec
leave
outsl
lret
out
mov
fisttpl
push
jnp
and
jnp
addr16
sbb
jo
sub
pop
pop
add
mov
jb
stos
sbb
lret
mov
icebp
movsl
add
popa
cmp
mov
ss
xlat
or
push
jg
test
popa
imul
dec
aaa
aaa
xor
cmc
mov
stos
or
cmp
xchg
pop
xchg
dec
rcrb
fldenv
repz
add
rep
push
stos
lea
lahf
repz
ljmp
imul
jecxz
push
jb
cmp
lahf
jns
bound
cmc
aad
icebp
inc
xor
icebp
in
add
cmp
jle
xchg
push
push
loopne
dec
sub
xchg
mov
dec
loope
mov
scas
sti
push
ficoms
shlb
sbb
lret
loopne
sti
adc
fidivl
mov
push
movl
sbb
or
cmp
std
mov
and
adc
jae
lcall
xchg
xlat
or
mov
add
mov
xchg
jne
fidivrl
mov
fstps
shrl
orl
stos
adc
out
ja
test
sub
in
sub
scas
andl
or
cmp
add
mov
jae
mov
cltd
inc
mov
mov
push
sub
or
test
push
sbb
fldcw
loop
mov
inc
cmpsb
fwait
insl
les
cmpsb
mov
je
cmp
daa
cmp
sbb
es
sahf
daa
je
fwait
movsl
jo
je
aas
add
mov
jno
cmp
push
aaa
xor
imul
jmp
popf
xor
pusha
int
dec
pusha
jo
popf
fisubs
movsl
out
sbb
sahf
in
sub
pusha
fistps
xor
mov
dec
idivl
dec
and
mov
mov
iret
popa
sti
mov
dec
lret
mov
sub
jne
jne
push
std
mov
cmpsb
lret
mov
pop
aaa
dec
mov
ljmp
mov
lret
sub
jb
sbb
inc
xchg
add
pop
xchg
sbbl
mov
pop
push
inc
jbe
test
add
push
sub
xor
cmp
ret
in
fs
fstps
pusha
xchg
cmp
filds
arpl
pop
inc
jg
cmp
sbb
fnstenv
test
daa
inc
sbb
sbb
addl
pop
dec
or
leave
cmc
xor
xor
dec
shll
sub
xchg
add
shlb
test
mov
ficompl
shrb
dec
jmp
add
cltd
rol
ljmp
inc
adc
mov
aad
ss
add
and
ja
loopne
fidivs
bnd
loopne
into
inc
adc
imul
sub
lcall
push
nop
xchg
cmp
out
loope
ja
jp
outsb
mov
push
inc
fwait
pop
ljmp
push
adc
cwtl
mov
mov
data16
cwtl
mov
sub
jp
xor
mov
scas
bound
aaa
lods
add
sbb
push
inc
xchg
sbb
jbe
cmp
out
rorl
arpl
inc
popf
xor
jg,pn
mov
mov
gs
lock
push
cmp
inc
popa
mov
mov
add
nop
jmp
dec
je
jecxz
loopne
xchg
call
sbb
xchg
lods
xor
pop
add
popf
fistpll
mov
push
cmp
mov
and
sbbb
cwtl
rorl
mov
testb
lds
mov
loope
mov
xorl
inc
mov
ja
fnsave
push
inc
mov
jp
add
rorl
and
jb
lds
mov
sub
stos
mov
add
adc
in
or
mov
lods
mov
in
repz
mov
lret
xchg
fwait
out
and
and
gs
cmp
cmpsb
aam
mov
jns
adc
mov
mov
or
sub
sbb
ljmp
sub
les
imul
jp
sub
inc
xor
or
mov
scas
sbb
sub
mov
xor
lea
mov
inc
inc
mov
lods
and
mov
jmp
mov
idiv
leave
or
icebp
mov
repnz
xor
setbe
std
jae
pop
xchg
jbe
shrb
scas
pop
and
mov
cmp
xchg
sahf
js
shrb
mov
nop
sub
aas
jle
or
push
adc
cmp
cwtl
xor
jbe
jp
out
push
jg
pop
out
mov
incb
nop
mov
jl
add
and
pop
fbld
les
mov
xor
sahf
add
pusha
pop
sub
and
sub
push
adc
push
mov
sub
dec
pop
pop
mov
jo
in
aas
dec
jno
xchg
ja
leave
dec
sub
inc
inc
test
xchg
xor
scas
mov
cltd
aas
xchg
and
adc
xor
insl
cmpsb
jmp
mov
nop
stc
xchg
pop
sarb
push
jno
mov
xchg
pop
int
mov
in
and
add
mov
out
pop
mov
adc
iret
fists
mov
aad
xchg
loopne
mov
mov
xchg
xchg
ret
enter
rorl
xlat
faddl
xchg
aas
xor
cmp
cld
ret
push
pop
cmp
push
or
pop
call
popa
jecxz
xchg
scas
aam
push
incl
enter
sub
sbb
bound
testb
aas
repz
jmp
nop
adc
cmp
inc
or
adc
mov
jne
sbb
jg
out
pushl
loop
shrl
cmp
movsl
outsb
or
mov
daa
ljmp
dec
cwtl
xchg
pop
push
iret
inc
lret
repz
pop
or
rcrb
push
mov
add
lods
roll
sub
cvttps2pi
mov
sbb
pop
mov
mov
leave
sub
add
std
int3
mov
jnp
lock
sahf
lcall
mov
cli
cld
ss
lea
out
and
xchg
push
cwtl
add
push
roll
mov
sbb
js
mov
add
mov
add
dec
sbb
daa
adc
shlb
int3
inc
pop
iret
mov
dec
xor
mov
scas
pop
icebp
pop
add
sbb
mov
push
xchg
fdivl
mov
pop
xor
mov
shll
sub
insl
aaa
mov
aam
add
adc
dec
ljmp
jnp
xor
xchg
lret
mov
daa
fmull
jge
fsubrl
lods
cmpsl
sti
push
dec
lock
icebp
mov
xor
ds
mov
sub
shl
dec
pop
leave
and
lock
xchg
push
pop
inc
or
mov
fmuls
cmc
shrl
pop
sub
aam
outsb
mov
cwtl
test
pop
pop
scas
jp
pop
push
mov
popa
and
mov
fwait
or
jb
push
out
repnz
mov
mov
xchg
gs
pop
xchg
xchg
fwait
int3
push
and
call
inc
js
push
mov
gs
jbe
mov
ror
lret
adcb
inc
enter
jbe
add
jne
sbb
xchg
in
sub
adc
sbb
jg
je
cld
js
mov
adc
insl
inc
cmp
pop
mov
decl
fisttpl
or
popa
inc
clc
aaa
cltd
ja
mov
ja
cmp
test
push
incl
loope
aas
cld
sub
ja
pop
shlb
aas
xor
pushf
aas
sub
inc
mov
inc
jge
lea
jb
hlt
cli
adc
ret
lds
test
fistpll
iret
addb
and
mov
cmp
jl
inc
leave
stos
inc
fucomip
mov
cwtl
pop
adc
add
cmp
fstps
or
out
cmpsb
mov
fldl
push
int3
int3
jmp
adc
adc
jl
jb
mov
mov
pop
dec
out
shlb
xchg
pushf
push
jmp
and
aam
in
mov
repnz
rorl
popf
and
outsb
push
imul
sub
sub
in
xchg
xchg
sbb
ret
test
pop
stc
push
clc
ror
shll
out
push
add
popa
cmp
mov
mov
cld
and
mov
out
jns
xchg
repz
mov
push
enter
cs
ss
push
mov
mov
mov
pop
mov
pop
div
jp
xchg
mov
mov
lret
sub
movsb
hlt
xchg
pop
mov
add
test
lea
xchg
cwtl
jbe
mov
push
jmp
idivl
out
fstpt
pop
sbb
jnp
or
pop
dec
loop
outsb
movsl
xchg
pushl
jge
mov
stos
add
into
push
frstor
lods
mov
mov
notb
imul
pop
arpl
test
in
or
lret
push
push
push
xor
ret
ja
push
dec
ja
repz
stc
push
aad
add
test
mov
sar
cmc
scas
sbb
call
xor
je
stc
cmp
sbb
dec
sub
repz
movsb
aad
mov
popf
cmp
mov
jmp
jno
xchg
imul
sbb
int3
sub
leave
rorl
xor
sbb
ja
mov
mov
repz
mov
test
mov
les
pusha
push
jo
imul
inc
mov
jle
jnp
jle
dec
xchg
outsb
arpl
adc
stc
and
add
outsl
mov
adc
xchg
insb
out
fs
je
xor
aaa
repnz
popw
iret
fsubp
cmp
outsl
add
outsl
rcl
sbb
mov
repnz
inc
push
iret
push
inc
jb
pop
movsb
adc
pop
clc
mov
mov
mov
jb
es
test
inc
xor
jle
dec
pushf
cmc
aad
jl
leave
sbb
cmp
loopw
push
xlat
hlt
mov
neg
inc
test
cmp
dec
loopne
xor
loope
jne
jle
loopne
jnp
cli
or
pop
lock
inc
and
idivb
sub
aam
leave
lock
ljmp
pop
sbb
sub
gs
test
cmc
nop
test
test
test
dec
int3
mov
dec
leave
mov
test
mov
adc
pop
js
repz
sbb
ds
ret
iret
insl
push
sbb
pop
or
fists
adc
cmp
mov
mov
clc
fstps
xchg
aaa
ljmp
adc
mov
fcomps
int
mov
fldt
and
push
hlt
cmp
stos
lods
insb
in
popf
testb
mov
mov
out
scas
shr
sub
cmpsl
mov
mov
sub
xchg
out
ret
bound
fstpl
and
mov
dec
or
pushf
imull
mov
or
rclb
adc
pushf
or
cld
dec
and
add
loopne
or
addb
mov
aaa
dec
mov
push
dec
and
dec
jne
sub
adc
sbb
test
sbbb
dec
stos
inc
andb
lahf
jns
jmp
lahf
out
into
pop
rcl
mov
popl
iret
add
das
dec
lock
lahf
mov
decl
sbb
sarl
cmpl
imul
jbe
popa
ficoml
mov
sub
and
and
popa
in
cmc
movsl
in
enter
pop
pop
stos
jl
push
sub
gs
pop
inc
inc
icebp
dec
mov
mov
cmpb
into
push
xor
jmp
xlat
icebp
in
push
imul
shld
subb
lahf
adc
popf
scas
sbb
lods
jge
cmp
test
aas
bound
iret
xchg
sbb
add
jge
pushf
sub
mov
xor
mov
mov
je
sub
push
vpackssdw
or
push
xlat
xchg
or
mov
push
jno
iret
ds
adc
out
mov
ror
jne
aaa
aaa
les
lret
stc
jae
mov
mov
popa
cmp
push
andb
mov
xchg
gs
xchg
test
fcoml
adc
push
jbe
cld
xchg
test
pop
push
imul
push
loop
flds
jnp
push
push
jp
lret
mov
cmc
or
cld
mov
xchg
ret
les
call
mov
mov
bound
ljmp
sub
jle
xor
mov
sbb
jg
pop
data16
mov
sub
in
loopne
jl
mov
or
mov
or
dec
xchg
sbb
negl
xchg
inc
daa
push
lcall
mov
movsb
ret
mov
sbb
pushf
arpl
dec
popa
xor
mov
repz
mov
loop
mov
inc
dec
jg
mov
mov
mov
jns
pop
ljmp
mov
cmp
ds
mov
loope
jb
sub
iret
or
loopne
push
xchg
push
imul
pusha
dec
pop
jp
aas
add
out
mov
jbe
pop
xchg
add
pop
out
jbe
adc
xchg
bound
jecxz
in
pusha
mov
inc
ret
jo
xchg
stc
pushf
mov
xorb
or
or
addr16
push
mov
ljmp
xchg
sub
scas
inc
xchg
jnp
das
inc
push
daa
jno
cmpsb
lahf
xchg
jmp
ljmp
sbb
mov
cmp
push
ss
addb
pop
adc
in
dec
push
dec
stos
dec
adc
ret
cld
or
add
loopne
push
daa
xchg
popf
aam
cmc
mov
rorb
mov
xchg
ret
popa
cld
jge
icebp
in
pop
inc
cmpl
xchg
push
or
adc
push
dec
adc
mov
clc
cli
or
es
push
das
xrelease
sub
decl
add
test
xor
call
lret
sub
mov
icebp
mov
push
test
fwait
push
mov
movsb
arpl
iret
decl
adc
dec
imul
mov
cmp
push
imul
fdivrl
scas
cmp
imul
mov
sahf
imul
mov
jg
add
in
ret
inc
cmp
xor
jg
push
mov
ss
xor
mov
mov
ret
jbe
sub
cld
and
and
adc
or
pop
jns
adc
jg
flds
xlat
out
pop
mov
scas
mov
in
sbb
push
lret
inc
cs
cmp
cmc
sub
andl
incl
sbb
scas
pop
dec
mov
push
inc
mov
inc
mov
pop
loopne
rol
xchg
mov
stos
stos
insb
orl
out
fabs
xchg
sbb
cwtl
jge
or
adc
pop
pop
push
push
push
sub
cli
push
push
std
sbb
lahf
mov
mov
lea
jae
das
xlat
push
xchg
lea
push
insb
xchg
dec
inc
xchg
in
popf
dec
adc
adc
lock
push
mov
bnd
pop
aaa
roll
mov
push
mov
pop
pop
and
push
inc
or
inc
pusha
mov
das
cltd
lahf
jne
add
pop
sub
push
ja
scas
pop
push
mov
sbb
mov
addb
mov
adc
dec
into
inc
dec
push
movsl
loopne
ljmp
mulps
out
shrb
pop
lcall
and
and
jae
jle
cli
clc
ret
icebp
lahf
test
jno
loopne
ret
sbb
jb
push
notb
pop
js
and
jo
bound
or
jge
xchg
insl
sub
fstpl
add
insl
adc
inc
jae
push
dec
cmp
ja
dec
pop
fwait
std
in
dec
or
jo
stos
es
mov
lret
add
ljmp
mov
dec
sub
dec
inc
scas
push
leave
mov
mov
pop
or
xchg
inc
scas
sub
decb
les
pop
addr16
fiadds
jne
outsb
call
enter
pop
into
sar
jp
loopne
push
aas
xor
aas
test
hlt
xor
jp
icebp
or
cmpsl
jmp
xchg
je
or
loop
cwtl
mov
pop
jecxz
or
mov
push
icebp
sub
ljmp
mov
push
js
movsl
add
mov
pusha
gs
sub
jne
lret
dec
out
neg
test
ja
add
xchg
dec
in
es
insb
mov
pop
mov
cmp
add
popl
stc
jg
or
inc
mov
cmp
jb
in
addl
pop
test
cmc
fdivrs
movsb
gs
mov
pop
out
stc
nop
shrl
adc
enter
dec
sti
mov
rorb
outsl
jno
mov
push
mov
icebp
aas
ss
bound
sbb
sbb
fstl
out
jecxz
mov
mov
roll
push
jg
inc
es
imul
cld
jg
jns
paddd
pop
jmp
xchg
add
rcr
addl
arpl
cmp
stos
lret
mov
imul
loop
pop
and
push
fwait
mov
leave
fbld
out
xor
mov
sbb
jmp
pop
or
push
orl
add
outsl
lret
out
and
out
xchg
and
gs
add
rcr
sbb
js
adc
jns
push
sbb
xor
in
push
cmp
cmc
addr16
push
cli
mov
adc
std
cli
or
hlt
cmpsl
popf
dec
js
jbe
in
fadd
pop
mov
int
enter
inc
xor
jo
lcall
sub
bound
xchg
in
in
mov
clc
dec
sbb
dec
dec
mov
dec
out
test
xchg
outsl
inc
or
xchg
and
inc
jl
mov
push
ljmp
fs
loopne
xchg
scas
push
or
inc
jmp
lods
nop
sahf
mulps
or
adc
cmp
das
es
ljmp
or
adc
push
xchg
inc
jno
jns
mov
imul
jae
cld
inc
pop
sbb
jne
add
mov
and
jg
shll
stc
cmpsb
rep
jg
fists
pusha
clc
dec
xchg
xor
mov
xchg
jae
scas
add
dec
and
adc
adc
and
es
adc
nop
xchg
dec
movsb
or
mov
xchg
hlt
mov
aam
inc
or
in
xchg
cmpsb
or
in
scas
mov
negb
pop
fidivs
xor
popf
lea
push
xlat
add
pop
mov
dec
aaa
push
in
rcrl
std
mov
popf
pop
aad
ficoms
or
push
ffree
cmp
and
gs
xchg
push
clc
or
sti
bound
add
scas
pop
add
mov
sti
inc
add
fmulp
cmp
outsb
mov
pop
adc
mov
adc
inc
mov
and
cmp
cltd
cmpsl
xlat
fwait
ret
xorl
pusha
adc
xchg
mov
or
mov
pop
arpl
mov
or
xor
mov
cmc
xchg
orl
lods
sbbl
sbb
push
xor
jbe
sbb
jmp
andl
cmp
fsubl
sbb
mov
push
dec
xor
in
xchg
ja
test
out
adc
dec
xor
clc
mov
adc
imul
out
and
std
es
xor
push
insb
sbb
in
cmp
ficompl
fcmovb
adc
jp
rclb
mov
push
hlt
adc
cmpsl
mov
mov
xchg
jecxz
xor
inc
outsb
lret
outsb
int
or
xchg
out
mov
sub
mov
mov
jb
into
ljmp
and
inc
or
jb
fxch
push
loope
and
push
push
icebp
shlb
mov
fs
mov
out
mov
sub
push
ficoml
mov
lret
xchg
pop
dec
mov
sbb
or
es
jae
or
fwait
movsl
fmull
movsb
pop
mov
jb
jno
or
cltd
mov
dec
sarl
adc
xlat
dec
push
push
pop
fwait
jl
dec
lods
pop
fwait
push
sarl
sbb
sbb
or
loope
shl
sarl
scas
xchg
vpsraw
data16
shrb
xor
test
xor
fcoml
pop
aad
rol
iret
sub
aam
rclb
lods
adc
mov
and
lods
xchg
pop
xchg
shll
aam
lretw
mov
lea
cmpsb
push
xor
dec
sub
sbbb
pushf
add
stc
pop
dec
shll
xor
test
into
mov
sub
in
jo
cmp
sub
dec
rcl
cmp
pop
mov
enter
or
dec
div
sarb
dec
xor
add
xchg
mov
and
int
xor
out
pushf
mov
js
loop
dec
aad
jecxz
or
mov
or
out
adc
es
adc
in
mov
and
inc
aas
jo
orl
mov
popf
mov
inc
dec
mov
pop
jo
ja
pop
push
in
jl
jle
pop
jmp
dec
cmpsb
icebp
pop
gs
inc
mov
mov
cmp
les
ret
pop
dec
out
loope
dec
dec
pop
mov
jnp
pop
scas
leave
xchg
jbe
xchg
pop
mov
int3
out
cmp
push
ja
in
xchg
aaa
inc
fnstenv
jmp
pop
bound
insl
jns
pop
gs
in
push
mov
dec
push
mov
xchg
call
xor
inc
mov
push
xor
add
pop
ret
xchg
jbe
pop
pop
test
sbb
cmp
dec
cli
push
jmp
sbb
xchg
insl
rcrl
cmp
aam
loop
sbb
dec
jno
in
sbb
sbb
mov
mov
sub
dec
idivl
pop
inc
pop
imull
mov
inc
jp
cmpsl
pop
pop
xchg
adcl
push
stc
inc
push
out
adc
jl
jo
and
out
push
mov
scas
push
lea
icebp
dec
sti
outsb
adc
sub
jbe
mov
sub
dec
lea
adc
jle
jmp
lods
jnp
mulb
or
mov
dec
xchg
xchg
inc
rcrl
mov
jns
repnz
mov
cltd
cld
sub
push
rol
or
call
test
enter
mov
xor
js
loop
sub
dec
cld
in
cmp
mov
push
dec
les
adc
mov
dec
sbb
aas
aaa
sti
lea
xor
mov
mov
enter
out
stos
xor
or
insl
test
mov
cmpsb
sti
jne
cli
ljmp
lock
nop
lcall
add
insb
push
stc
movsl
subb
pop
in
rorl
jo
xchg
cld
mov
lret
out
mov
mov
sbb
in
cli
push
jg
pop
sahf
out
and
or
dec
fs
inc
add
out
cmp
pop
andl
out
cmp
pushl
jae
cltd
mov
shrb
test
ljmp
fistpll
stos
cmp
imul
jb
outsb
cwtl
dec
lea
int
inc
out
cmp
and
dec
idiv
sub
mov
or
add
stos
mov
stc
add
xchg
inc
sbb
sti
and
adc
mov
sub
jbe
xchg
push
jle
notb
cli
jmp
popf
inc
mov
lret
cmp
jmp
loope
fs
imul
rorl
iret
xchg
outsb
aas
jmp
dec
add
outsb
out
cmp
push
je
inc
incb
arpl
jo
cmpsl
das
jb
sbb
ljmp
pop
shr
mov
pushf
mov
adc
mov
inc
movsb
mov
jg
rcll
and
push
sbb
pop
inc
rorb
jecxz
jnp
cmpsb
adc
sahf
jecxz
aad
dec
ljmp
rorb
loope
ret
ret
mov
mov
aaa
insb
daa
movsb
jb
dec
dec
rcll
mov
out
mov
jnp
jl
dec
out
rol
insb
fcom
std
mov
mul
in
mov
sbb
negb
sarb
shrl
push
pop
outsb
mov
sbb
mov
lret
adc
jns
sbb
push
movsb
jecxz
leave
jl
leave
mov
jnp
lahf
add
push
adc
lahf
leave
pop
pop
repz
dec
xchg
stc
lea
mov
in
jbe
add
pop
cwtl
jge
dec
pop
rol
in
call
adc
jmp
cmp
dec
sbb
gs
xor
es
mov
sub
jnp
out
test
inc
aas
push
mov
pop
adc
dec
rcll
mov
pop
andl
incl
fldl
dec
imul
sete
push
jns
push
std
mov
testb
mov
insb
push
dec
fimull
popa
popa
movsl
insl
sbb
cmp
mov
fistpll
jne
int3
dec
mov
lcall
xor
loope
out
or
loopne
sub
aas
daa
fdivl
sub
dec
lods
mov
mov
mov
add
sbb
out
and
cltd
inc
aas
sarl
inc
movsb
mov
cmp
scas
or
mov
mov
mov
test
mov
cld
in
sarl
repnz
in
pop
gs
loopne
mov
arpl
fbld
mov
movsb
cmp
in
mov
dec
xor
xchg
push
push
mov
jne
or
cs
jle
leave
mov
mov
std
push
push
or
insl
cmp
jbe
mov
scas
push
jns
inc
mov
and
bound
test
add
test
rcr
dec
dec
fs
jnp
and
daa
pushf
cmp
pop
push
loopne
das
mov
sbb
pop
les
jae
lods
inc
mov
push
jmp
jb
outsl
mov
in
push
pop
in
lret
push
je
sub
or
xchg
cmp
das
add
sub
sti
xor
sub
std
lods
cmp
mov
add
fisubs
insb
dec
outsl
fcomps
gs
dec
stc
in
dec
and
imul
fistpll
aaa
iret
pop
sub
outsl
push
cmpsb
sub
lods
mov
pop
fsts
fwait
sbb
inc
imull
push
shl
add
jle
xor
ljmp
push
test
mov
test
mov
leave
jecxz
push
push
int
push
or
rol
ds
mov
mov
je
dec
cld
es
mov
pop
pop
insl
es
leave
pop
test
into
out
std
jmp
push
addr16
cmpsl
push
mov
lods
cltd
dec
mov
jbe
push
push
ljmp
adc
aas
pop
push
pop
movsl
cmp
push
mov
push
push
dec
jne
scas
imul
sub
mov
bound
push
popa
aaa
ret
mov
sahf
icebp
pop
add
mov
mov
cmp
lret
jge
adc
xlat
adc
add
lods
cmp
jae
jle
xchg
aam
add
adc
mov
cmpsb
inc
bound
lret
icebp
pop
loop
in
add
loop
test
mov
sub
cmp
aas
bound
cld
inc
dec
clc
sub
fwait
addr16
jle
jno
and
inc
mov
fdiv
inc
pop
push
cltd
jl
jl
in
adc
push
cltd
mov
iret
stos
loopne
mov
hlt
sub
ror
dec
jp
and
pop
aaa
jae
mov
add
sti
inc
push
mov
vaesenc
xchg
loopne
ljmp
test
mov
js
mov
into
mov
sahf
je
inc
sub
arpl
hlt
mov
enter
das
pop
and
dec
mov
sub
aad
jae
fildl
bound
scas
test
addr16
aaa
add
lret
xchg
shll
cli
mov
adc
lret
je
or
jbe
jge
sbb
sbb
pop
pushf
mov
xchg
pop
mov
cmp
arpl
mov
push
fcmovnbe
test
roll
pop
xor
or
sub
xchg
insl
sbb
shll
mov
test
or
push
aad
mov
or
lea
dec
mov
jb
mov
push
jmp
inc
dec
fmull
lock
test
sahf
xor
cmp
add
jne
in
aas
movsb
sub
pop
jo
sub
loope
push
enter
cmp
sbb
jo
push
imul
cld
and
out
cmp
add
imul
mov
out
icebp
ror
daa
sub
mov
lds
inc
xchg
or
jmp
mov
fwait
inc
clc
add
call
push
popf
push
ret
add
and
jl
xchg
clc
hlt
js
dec
ss
xor
sbb
and
loope
repnz
dec
inc
fwait
adc
mov
ja
cmpb
xchg
mov
mov
outsl
sub
mov
fidivl
sbb
dec
push
test
inc
loope
mov
xlat
mov
xchg
out
movsl
stc
cwtl
repz
jo
pop
movsb
pop
push
jno
mov
pop
mov
mov
es
jne
popa
inc
out
adc
loope
mov
and
jge
push
rcrl
mov
out
xor
xchg
add
adc
inc
pop
sub
pop
daa
sarl
call
mov
loop
push
nop
and
inc
das
inc
fcomps
adc
lea
jl
aam
fcmovne
cli
outsb
gs
fsubs
xlat
jnp
jns
pop
popf
mov
fdivrl
xor
inc
mov
cltd
sub
cmp
dec
mov
sub
jg
fstpt
cmp
mov
mov
adc
fmul
aaa
ficoms
test
addr16
movsl
mov
dec
es
cmp
stc
cld
int
add
lods
xchg
mov
clc
cmp
ficompl
mov
aad
call
jecxz
mov
pop
addr16
ds
inc
sub
cmp
test
roll
mov
adc
into
or
xchg
push
xor
mov
dec
ret
loopne
jg
pop
sub
pop
mov
xor
jnp
adc
xchg
jnp
and
mov
jmp
mulb
sahf
inc
adc
sub
mov
xchg
aam
or
sub
xchg
mov
cmp
sbb
jge
add
loop
sti
push
xchg
and
inc
dec
xor
inc
adc
mov
test
pushf
scas
test
or
mov
into
aaa
cli
fcmovnu
sub
test
xor
inc
add
sbb
or
push
xchg
insl
cmp
arpl
arpl
sub
adc
cld
mov
pusha
pop
xchg
cmpsb
shl
aam
lods
fidivrl
jl
adc
jmp
add
fnstenv
xchg
add
scas
repnz
sbb
fcomps
push
pop
aas
mov
fidivl
or
out
sbb
lret
jmp
fildl
cmc
ja
add
or
sbb
xlat
fnsave
clc
sbb
xlat
sub
shlb
clc
sbb
inc
aad
into
mov
sbb
mov
sahf
fwait
or
cmpsl
into
mov
jnp
inc
les
inc
push
jl
stos
daa
jo
lock
mov
or
sbb
mov
in
dec
inc
dec
adc
cmp
je
scas
jge
jae
clc
push
and
pop
insl
push
repz
popf
adc
adc
data16
pop
and
lea
push
and
xor
mov
icebp
sbb
sbb
adc
cmpsb
or
jg
arpl
jle
xor
sub
cmp
cmp
clc
mov
std
push
test
cmp
or
fimuls
movsl
xchg
out
int3
xchg
jge
pop
out
ja
addr16
xchg
call
add
or
sti
dec
mov
adc
ss
sbb
test
push
call
fbstp
ja
push
lahf
fdivrl
or
aam
inc
sti
sub
dec
rorb
test
pmulhw
mov
pminsw
xor
adc
jnp
sti
aaa
add
loope
and
insb
jb
cmp
push
jbe
loop
sub
or
int
shll
pusha
icebp
dec
into
add
fs
mov
push
je
jnp
jg
xchg
jle
xchg
popf
sub
jne
fmul
mov
push
pop
fnstcw
outsl
xor
shrb
decb
icebp
je
jmp
in
sbb
loope
fwait
push
cmp
mov
dec
jno
out
jmp
insb
dec
enter
push
sub
add
popf
sub
push
pop
inc
lods
mull
lds
mov
pop
push
std
rorl
inc
mov
jge
aaa
sub
mov
movsl
xchg
mov
scas
rcrl
mov
inc
out
ficoms
scas
xlat
cli
mov
ljmp
dec
enter
xchg
cmp
scas
stc
mov
aaa
and
sub
mov
bound
add
test
inc
stc
int
sbb
fsubrs
mov
mul
dec
int3
mov
push
sahf
fadds
add
push
mov
cmpsl
pop
lock
sub
jl
xor
imul
lock
inc
es
pop
pop
leave
orl
xlat
sub
mov
shl
lahf
push
push
aad
pmulhw
bnd
push
repz
jmp
out
push
jecxz
cmp
outsl
pop
fsubp
mov
sbb
cmp
xor
mov
insl
outsl
add
stos
jae
xchg
or
jb
jecxz
lret
in
ss
mov
xor
mov
cmp
mov
popa
xor
mov
lock
xlat
sub
ficompl
sbb
pop
xchg
xor
iret
cs
insb
xor
add
lcall
andl
xor
jb
jne
js
cli
xchg
test
push
cld
lock
pop
pop
mov
in
je
leave
sub
and
xchg
imul
push
lods
loop
fnstcw
jge
fcmovu
pop
mov
pop
popf
adc
push
pop
lahf
dec
insl
fsts
dec
ja,pt
aas
out
mov
mov
pop
cmc
push
or
adc
pushf
push
jnp
sarl
shlb
mov
or
fwait
lock
js
xchg
repnz
push
rcr
leave
lds
lcall
mov
js
outsb
xchg
repz
mov
pushf
loopne
xor
dec
bound
mov
sub
sbb
adc
cmp
fstp
pop
cmp
adc
cmp
dec
rcll
in
push
cmp
imul
int
fsubl
xor
dec
inc
test
jle
cli
sub
xor
mov
stos
popf
jmp
mov
mov
sbb
decb
sbb
ljmp
test
lds
ljmp
xorb
imul
jecxz
insb
and
dec
xor
dec
xor
lret
ljmp
outsl
mov
mov
mov
movsb
jle
mov
adc
bound
popa
cmpsl
aas
outsb
outsb
mov
mov
adc
jge
pop
push
push
jp
iret
popa
pop
ja
pusha
enter
repnz
int
out
push
inc
outsb
sub
iret
xchg
xchg
cld
in
cltd
cs
sbb
inc
dec
and
clc
aad
xor
lea
lret
movsb
xchg
cmpsl
hlt
push
mov
hlt
js
and
adc
das
dec
jp
lcall
cld
mov
push
jb
inc
movsl
pop
shlb
cmp
xlat
test
repz
xor
mov
xchg
inc
mov
adc
outsl
leave
adcb
pop
fdivs
test
sub
pop
push
pop
daa
jmp
xor
and
push
aad
pop
push
mov
jle
adc
ret
xor
pop
adc
push
ja
pushf
fcomps
notb
mov
dec
pop
lahf
cmp
mov
cltd
cld
cmpl
test
stos
inc
pop
adc
add
jbe
push
mov
fldenv
call
and
sti
sbbl
mov
loop
movsl
arpl
xchg
insl
ljmp
aaa
and
aas
popf
std
mov
lods
fwait
hlt
cld
ffree
shll
dec
ds
enter
mov
jno
cltd
mov
mov
int3
mov
cmpsl
repz
push
leave
cmp
movsl
and
sti
push
icebp
mov
rol
push
fildll
dec
xchg
ds
cmp
xchg
xor
push
xchg
lods
fsubs
dec
lods
inc
aaa
fstl
loope
and
jbe
mov
push
mov
cmp
sub
inc
jnp
scas
outsb
imul
imul
int3
mov
or
and
popa
iret
out
adc
jno
xor
frstor
fstpt
rep
dec
mov
pushf
adc
scas
in
dec
stos
in
and
mov
repnz
andb
rolb
lods
or
mov
sbb
lock
xchg
rclb
aad
mov
lret
xchg
dec
mov
aam
add
pop
sahf
cmp
pop
mov
inc
cmpsl
leave
stos
add
cmovnp
cmp
mov
add
pop
movsb
add
pop
sbb
fimull
stos
or
fxam
nop
scas
inc
and
mov
xor
sub
or
je
xchg
and
sub
cli
or
int3
xchg
jno
push
xor
je
into
sub
sti
mov
push
ss
pop
push
fsts
cmpsl
jae
jo
movb
sbb
xlat
jns
cmp
pop
sbb
inc
xchg
dec
sub
subl
rcrb
pop
add
lret
cld
xor
inc
out
xchg
cmp
inc
and
xor
sub
and
jb
sbb
mov
adc
sub
ret
mov
test
popf
pop
mov
mov
movb
inc
insl
divl
mov
out
lods
mov
sub
movsl
pop
or
icebp
loope
adc
dec
inc
pusha
xor
adc
sub
shrb
cmpsl
mov
pop
inc
adc
mov
fcmovne
stos
inc
xor
sbb
rorb
lcall
or
push
insl
js
scas
cwtl
xor
xor
push
xchg
inc
movsb
sti
adc
add
dec
xchg
repz
mov
jmp
imull
jnp
push
cli
push
xchg
adc
sub
roll
clc
pop
or
pop
cmp
fs
gs
mov
fisttpll
jmp
rcrb
fcom
mov
insl
enter
pushw
mov
sbbb
push
mov
sbb
mov
sub
lahf
lea
jge
loopne
idivb
xchg
xchg
and
mov
jbe
dec
fldenv
fldcw
cmp
ret
movl
test
fdiv
xchg
push
rcll
fucomip
ljmp
arpl
bound
add
stc
out
dec
std
lret
imul
sbb
dec
pushf
ret
insl
mov
sub
outsb
hlt
mull
cmpsl
and
push
inc
inc
pop
divl
cmp
flds
cwtl
ret
mov
ret
xor
cs
cmc
or
xor
pop
pushf
mov
rol
es
mov
call
dec
push
xchg
mov
cmc
addr16
jb
inc
jg
imul
push
mov
aad
or
add
rcll
cwtl
inc
sub
loope
sub
imul
test
int3
xor
lds
out
lcall
push
xor
daa
loop
mov
jb
or
ja
outsb
and
sbbb
sub
xchg
loope
push
jg
cld
and
or
insb
or
loop
pusha
cmp
or
ret
sub
pusha
fdivr
in
dec
in
loope
push
mov
leave
outsb
add
or
adc
aas
xor
outsb
hlt
jmp
jnp
mov
cmp
xchg
rcl
adc
test
jg
sahf
lcall
adc
cmp
sub
adc
inc
push
iret
loopne
xchg
daa
xor
cmp
mov
cltd
das
push
pop
jp
xor
push
push
sub
and
mov
cmpsl
test
add
ja
add
sub
pop
or
gs
stos
aas
xor
adc
and
push
and
push
mov
daa
cltd
fistps
das
push
cs
ljmp
cmp
sub
add
sbb
loop
lret
adc
aad
in
sbb
xlat
into
mov
or
mov
push
push
sbb
lea
ds
div
je
xchg
sbb
adc
bound
adc
leave
jae
adc
xorb
ljmp
or
jp
lock
jge
cli
mov
lret
jnp
rorb
xor
fwait
mov
clc
je
push
sub
lds
mov
sti
mov
inc
or
xor
stos
aad
loop
cmpsl
or
test
xchg
and
jl
neg
mov
xor
pop
push
jo
punpckhdq
xor
mov
or
push
test
push
stos
cltd
and
push
cltd
pop
shll
bound
js
loop
arpl
mov
call
insb
jbe
xor
loope
arpl
mov
jns
pop
js
je
or
xor
popa
jae
cmp
into
lds
in
mov
mov
mov
aaa
cmp
pop
jp
cltd
mov
jge
std
and
ret
jg
ljmp
sbb
das
movsb
pushf
addr16
movsb
jmp
gs
sahf
cmp
xchg
mov
jbe
mov
and
rorb
sahf
sub
mov
jmp
std
enter
fidivs
mov
jge
and
sti
shrl
fldcw
xor
aad
sub
xor
jns
push
xor
fnstenv
ret
inc
sahf
mov
jecxz
dec
iret
xchg
test
ja,pn
push
add
bound
dec
incb
add
fwait
in
fidivs
in
cmpsb
lods
test
call
fld
mov
pop
or
xor
mov
lock
repnz
dec
or
mov
add
dec
sub
dec
adc
mov
insl
inc
xchg
out
fldcw
jl
js
mov
adc
add
add
test
xchg
daa
add
xlat
ds
ja
xor
jmp
or
jmp
stos
mov
xor
pop
mov
scas
in
xchg
cmp
ds
adc
std
ja
test
adc
jo
xor
test
lcall
call
jge
pop
sub
cmp
or
mov
xlat
add
out
adc
insb
arpl
pop
xchg
movsb
mov
push
hlt
sbb
fsubl
xor
arpl
enter
icebp
mov
jb
ret
je
lods
mov
dec
jp
mov
add
and
cs
lret
push
test
addw
or
out
in
into
cltd
xchg
loop
repnz
fmulp
pop
cmp
rcrb
adc
imul
bound
std
test
xor
mov
jecxz
mov
inc
addb
call
jb
jno
inc
das
sbb
fwait
pop
icebp
fildll
pop
mov
les
push
out
sub
rorb
mov
add
rcrl
hlt
mov
mov
addr16
sbb
nop
sbb
inc
dec
lods
push
repnz
fisubs
cmp
sahf
arpl
fmuls
xor
jne,pt
push
xchg
cmp
stc
stc
outsl
lret
mov
icebp
add
cmpsb
sti
sub
and
jae
mov
adc
pop
push
adc
movsb
add
inc
cltd
repnz
in
es
movsl
jp
pusha
insb
inc
pop
adc
xor
jae
lods
xchg
cmp
aas
dec
movsb
dec
xchg
jnp
cmc
push
mov
cmpsl
dec
and
arpl
aaa
xor
leave
daa
inc
daa
fiadds
jno
stos
mov
inc
mov
clc
lahf
sbb
push
in
dec
sub
push
in
pop
repz
lods
xchg
std
ds
mov
xor
jp
data16
shr
mov
mov
mov
repnz
cli
jb
dec
add
aam
sub
ds
xchg
in
sbb
cmp
sub
jl
lds
or
outsl
mov
aam
mov
arpl
testb
jo
jle
inc
adcl
sarl
push
mov
add
movsl
push
das
xchg
adc
jecxz
rol
hlt
push
iret
sarl
cld
pop
call
ja
mov
in
push
or
imul
rcrb
add
pop
mov
shlb
aad
and
ret
jnp
cwtl
daa
iret
fs
psubsb
jb
sbb
cmp
std
xor
out
jge
in
cli
add
jnp
dec
mov
add
stos
push
mov
lods
lods
inc
sahf
out
push
jg
aam
mov
sub
out
sahf
xchg
fnstsw
jo
je
xor
icebp
test
xchg
mov
push
dec
aas
lds
mov
mov
loop
jbe
repnz
int
pop
mov
jmp
push
mov
mov
insl
adc
repnz
rcrl
flds
add
add
es
jp
xor
sub
sub
sbb
xchg
aam
les
repz
mov
pop
push
gs
dec
addr16
xchg
filds
jp
sub
lods
pop
fisttpll
fucomip
adc
sbb
sahf
cld
enter
push
shlb
dec
push
inc
pop
adc
inc
pushf
out
rcl
popl
cmp
sbbl
mov
mov
xchg
add
ja
test
repnz
add
push
jno
cmp
mov
sub
jbe
out
ret
mov
in
mov
lods
in
jl
and
pop
mov
xchg
dec
inc
ljmp
cmpsl
les
or
pusha
popf
ror
addb
mov
mov
iret
pop
gs
aam
pop
sub
aaa
test
fsub
jbe
fimuls
lret
pop
inc
pop
gs
cmp
aaa
sub
inc
pusha
fmul
cmp
call
jg
mov
popf
xor
push
gs
in
mov
dec
loopne
enter
jg
xchg
fs
sbb
xchg
push
push
repnz
in
aas
aam
repnz
sarb
test
xchg
cmpsb
out
cmp
insl
test
push
addb
test
push
test
cmp
push
and
and
xchg
sbbl
iret
scas
andb
adc
pop
adc
test
xorb
xor
mov
aas
sbb
sub
out
adc
push
sub
xorb
mov
cwtl
cli
inc
pushf
insb
popa
hlt
xlat
lock
inc
push
dec
addr16
mov
fs
push
jle
and
adc
aad
adc
stos
rcrb
lock
enter
into
xor
xor
into
ja
mov
xchg
or
fcmovnbe
push
mov
xchg
stos
xor
dec
decb
push
xchg
lods
xor
sub
loope
nop
mov
icebp
les
cmp
mov
into
sbb
jns
repnz
out
xchg
mov
xchg
movsl
mov
push
fimuls
mov
or
xchg
lahf
stc
mov
leave
aad
ljmp
out
xchg
push
adc
mov
lret
adc
stos
movsb
pop
aam
pause
loop
xchg
mov
repz
aad
inc
add
or
aas
push
add
lret
or
dec
mov
aas
movsl
imul
orl
mov
shll
sub
jne
les
or
and
push
mov
cmp
adc
sbb
cli
mov
push
pop
sarb
int
lods
cmpsl
jns
push
mov
mov
cmp
mov
fsts
repnz
push
add
add
pop
pop
mov
and
or
in
push
fistps
fsubp
jmp
jmp
sub
test
cmp
sbb
outsb
ss
lock
pop
mov
in
inc
rcl
daa
hlt
adc
add
or
data16
cld
add
insb
mov
xchg
pop
out
scas
jg
push
mov
adc
inc
xchg
jno
mov
xchg
mov
cmp
cmp
push
push
sbb
rcrl
psrad
cmpsb
cmp
jmp
mov
mov
sub
mov
inc
jg
rol
into
push
jno
test
stos
dec
pop
dec
inc
scas
sub
outsb
bound
out
push
cmovo
repz
lret
loopne
sbb
rcll
jns
sub
cmp
adc
sub
add
scas
jecxz
int
cmp
adc
shrl
cmpl
or
jge
popf
xchg
add
mov
or
enterw
repz
out
mov
dec
fldenv
xor
dec
fs
dec
push
sbb
js
xchg
dec
cltd
mov
sbb
hlt
xchg
jl
mov
clc
dec
inc
scas
in
notl
mov
mov
sbb
in
sbb
mov
add
jecxz
fbld
add
dec
into
sbb
xchg
test
cmp
xchg
xchg
aad
jecxz
cmp
pop
inc
pop
mov
cmp
repnz
out
test
clc
mov
jae
jae
popf
std
scas
pushf
imull
insb
stos
repnz
sub
in
lods
jb
dec
inc
dec
lds
mov
mov
ficomps
xor
sti
lea
out
or
inc
dec
push
mov
loopne
hlt
fists
lea
cltd
mov
adc
clc
in
fisubs
push
inc
in
lahf
imul
cld
adc
out
cmovnp
test
les
cmp
lods
gs
movsb
jg
jecxz
push
jno
cs
xor
pop
mov
sub
and
mov
inc
cmp
jo
nop
dec
test
loopne
jo
sarb
in
lock
fs
cs
orl
ja
test
mov
js
or
aas
shl
cmpsb
in
pop
aas
outsl
out
sub
movsb
loop
pop
jecxz
mov
push
xor
lret
in
fsts
sub
mov
dec
xchg
mov
icebp
mov
popa
jns
out
mov
xor
mov
jne
lahf
outsl
cli
fdivs
mov
aas
pop
sahf
loope
nop
and
inc
push
rorb
add
add
xchg
mov
mov
cltd
cwtl
sbb
outsb
add
jnp
addr16
mov
sbb
popa
cmp
xchg
sub
ficoml
adc
jno
daa
bound
pop
bnd
dec
dec
push
mov
jae
rorl
add
mov
cmp
lds
orb
push
pop
divl
sub
enter
stos
gs
iret
xor
lahf
cmp
aas
sbb
shll
cmp
insb
lahf
fidivs
std
out
lods
nop
cwtl
push
sarb
cmp
es
ror
ja
icebp
mov
popa
sub
mov
mov
loop
es
sub
ljmp
scas
xchg
add
fisubrs
daa
fxsave
or
mov
dec
xor
outsb
xlat
lret
out
cli
push
xchg
lea
mov
push
adc
test
stos
fmuls
sbb
cmp
inc
test
lock
repz
push
lahf
movsl
ret
sub
hlt
cmc
in
or
push
cmp
or
nop
jae
mov
or
jb
lds
push
cli
test
cwtl
fstpt
mov
adc
cld
addb
aas
std
add
push
sarb
cmc
adcl
rcrl
les
cmpsl
xorb
std
xchg
inc
sub
aaa
loopne
ret
pop
sti
mov
in
dec
stc
aas
fbstp
rclb
sbb
and
std
mov
call
mov
cmp
adc
inc
leave
loope
aaa
push
inc
lea
cld
repz
or
pop
mov
pop
inc
outsl
mov
pop
xor
mov
mov
xchg
sbb
fimuls
dec
xchg
push
mov
mov
sub
sbb
and
js
mov
mov
lods
xchg
ret
imul
adc
xchg
add
dec
cmc
sti
mov
ja
sbb
fstpl
sarb
test
sbb
mov
pop
mov
fwait
fwait
mov
fdivrp
cmp
iret
pusha
aaa
push
jl
cmp
mov
mov
iret
add
sbbl
xor
inc
dec
xchg
push
xorl
mov
sahf
xor
sarl
outsb
mov
sub
add
stos
mov
fsubrl
dec
push
mov
mov
jmp
insb
loopne
add
out
scas
push
or
lret
sub
or
popf
xchg
lcall
push
xor
lods
inc
add
mov
dec
andb
jmp
out
inc
es
insb
insb
mov
jg
fisubrs
mov
repz
out
cmp
sbb
lcall
idivl
movsb
roll
ljmp
jns
fmulp
dec
loope
shlb
mov
jae
fwait
rcl
cltd
jp
daa
sub
inc
into
jp
mov
xor
int3
mov
cmp
cs
push
mov
push
lret
sbb
sub
cmpsl
mov
aas
xor
shlb
pop
inc
dec
mov
jnp
inc
cmpsl
mov
or
push
outsl
ret
outsb
mov
pusha
jo
push
out
cmc
pusha
sbb
push
dec
mov
popa
outsl
mov
test
jmp
movsl
in
lret
fildl
cmp
outsl
sub
lret
push
xchg
lret
pop
cmp
push
icebp
push
les
xor
stos
je
jmp
mov
or
aaa
cwtl
mov
loopne
pusha
push
bound
push
cmp
ret
pop
pop
push
in
or
and
loope
add
daa
add
lret
push
and
xchg
lahf
or
or
inc
ds
js
xchg
repz
and
and
or
adc
jmp
push
push
dec
inc
scas
mov
les
lock
jae
stc
int3
and
out
test
xchg
icebp
mov
fsubr
icebp
adc
jns
inc
je
or
test
push
stc
repz
jbe
es
ljmp
jle
push
into
test
push
imul
push
popf
int
fcoml
and
rcrl
inc
sbb
push
daa
inc
sub
pop
into
fistpll
mov
xor
int
or
sbb
mov
int3
dec
mov
sbb
sbb
adc
shll
int
mov
lahf
pop
ficompl
ja
rcrl
cmp
daa
mov
aam
sbb
mov
std
aad
dec
pop
test
add
xchg
pop
outsl
push
or
filds
fld
push
das
xlat
test
xchg
add
sub
sahf
sarl
clc
aas
imul
push
les
cwtl
and
push
pop
ret
repz
mov
mov
xchg
add
fimuls
and
sbb
ret
pop
aas
sub
test
push
jmp
clc
add
mov
mov
sahf
mov
and
lret
push
shll
imul
popa
shr
jnp
xor
test
lods
insb
loopne
out
mov
lds
shll
push
dec
mov
cli
jnp
mov
stos
jns
test
xrelease
jae
rol
sub
out
sub
or
push
fisttpl
stos
ss
movsb
dec
push
aas
adc
test
notl
int
dec
roll
mov
mov
scas
jp
in
jo
popf
aaa
stos
inc
hlt
ret
mov
inc
xchg
int
dec
and
jo
mov
aam
hlt
pop
dec
push
xchg
push
cmp
adc
sbb
rclb
fxch
mov
mov
or
insb
and
cmpsl
xchg
push
sbb
dec
push
jne
sbb
sbb
adc
xchg
push
cmpsb
jg
out
fwait
sub
jecxz
push
jo
aaa
pop
ret
add
scas
das
fwait
push
add
test
xor
inc
xchg
xor
scas
pop
push
push
shll
and
sar
sub
and
push
fwait
adc
ficoms
and
and
lea
inc
ret
addr16
in
jle
rorl
cmpsb
outsb
adc
or
aam
push
push
xchg
jecxz
push
loop
inc
inc
pop
test
ret
adc
into
je
bound
daa
das
movb
add
data16
mov
mov
and
stos
pop
imul
sar
cltd
loopne
push
adc
repnz
or
adc
cmp
sti
test
shlb
push
call
dec
std
lock
jle
mov
dec
xchg
jmp
out
repz
mov
mov
cmpb
xlat
push
nop
sbb
mov
loopne
or
bnd
mov
dec
dec
mov
or
out
ret
lahf
les
ret
test
dec
mov
pop
punpckhdq
push
dec
adc
mov
and
mov
cmp
dec
sub
jmp
jge
outsl
sub
sub
clc
jmp
mov
mov
out
pop
aam
add
adc
hlt
mov
jne
jnp
in
sbb
dec
push
gs
xchg
gs
std
incb
loope
push
jl
les
add
or
push
ljmp
dec
mov
mov
mov
cmpsb
sarl
mov
test
xchg
cmpsb
int3
data16
add
notl
mov
mov
ds
ljmp
into
jbe
sbb
mov
les
and
sbb
pop
mov
stos
push
in
pop
jns
cmpsl
lds
adc
shlb
insl
mov
inc
lret
cmp
mov
dec
fsubrs
add
fildl
mov
xor
jge
pop
sbb
push
or
cmp
loopne
push
loope
repnz
ja
push
push
inc
cltd
ja
int
fidivrs
pop
clc
and
cmpsl
pop
inc
dec
shrb
push
in
hlt
test
jg
push
data16
ret
push
bound
imul
movsb
call
xlat
jo
xchg
xor
clc
cmp
jl
jge
jp
jecxz
and
in
call
mov
push
sbb
jb
sahf
mov
jl
or
fistpl
jl
nop
cltd
add
sbb
out
loop
ljmp
cmp
not
movsl
shl
cmc
mov
std
add
cmp
adc
dec
movsb
mov
enter
pushf
pminub
iret
inc
mov
adc
mov
div
movsl
pop
sub
inc
inc
pop
adc
loop
out
mov
cwtl
jmp
fidivs
push
imul
xchg
add
pop
adc
and
pop
xchg
lahf
mov
push
adc
push
fistpll
pushf
std
lret
inc
es
cmpl
rolb
push
aam
push
or
fstps
push
xor
fwait
mov
inc
lahf
add
cltd
scas
sub
clc
adc
mov
pop
xor
ljmp
bound
sub
std
sub
adc
push
xchg
xor
pop
jecxz
aam
xchg
ret
mov
outsb
mov
xor
mov
in
arpl
out
in
sbb
jo
push
pop
mov
jns
bound
leave
adcb
xchg
xchg
je
mov
aas
rorb
inc
and
push
mov
jbe
xchg
dec
mov
pop
pushf
imul
jbe
jmp
dec
push
ret
mov
adc
mov
push
jge
jmp
out
movsl
ret
je
inc
std
push
xchg
xchg
cmp
inc
cld
mov
pop
sti
dec
rol
popa
dec
bound
aad
cmc
movsl
xor
mov
pop
mov
test
outsl
ret
dec
xchg
mov
push
out
inc
inc
push
push
lahf
xchg
lret
leave
sub
imul
pop
mov
fmull
push
sti
bound
nop
dec
fisttps
fisubrs
pop
inc
pop
jg
inc
pop
push
into
call
mov
mov
xchg
sub
xchg
push
gs
orl
les
repnz
dec
mov
inc
scas
xchg
pop
pusha
jne
pop
inc
mov
mov
out
outsl
in
ret
sub
cwtl
lea
mov
mov
aad
dec
aas
jbe
jg
inc
push
loopne
cld
pusha
fsubp
out
in
repz
lret
icebp
movl
pop
adc
xlat
pop
jecxz
cmpb
ds
test
mov
adc
sub
cmp
fnsave
push
mov
inc
add
sbb
inc
pop
or
popf
mov
stos
jo
mov
scas
push
in
and
movsb
add
and
mov
or
test
adc
fisttpll
rolb
imul
cmp
mov
fldl
inc
cmp
pop
cmpsb
mov
pop
mov
daa
mov
iret
xor
out
sbb
testb
push
or
xlat
popa
cmp
xor
stos
mov
scas
mov
jae
idivl
je
mov
adc
mov
insl
mov
hlt
popa
sbb
dec
insb
jae
cmp
mov
pushf
pushf
mulb
add
jp
scas
js
lahf
bound
pop
iret
push
dec
aad
xor
jle
jno
mov
ja
mov
nop
imul
sbb
gs
xchg
add
sub
cmpl
cmp
add
loopne
inc
into
sub
jo
shl
das
mov
jne
push
fiaddl
push
stos
mov
negb
cmp
sub
test
sub
js
xchg
fdivrs
in
fnstsw
in
dec
mov
stos
ljmp
les
xchg
outsb
xor
inc
mov
aad
inc
test
push
aaa
mov
mov
pop
cli
idivb
cli
cmp
dec
mov
ss
or
dec
mov
lea
jge
ja
add
xor
movl
add
dec
xchg
sbb
inc
clc
pop
sub
daa
je
hlt
adc
fadd
push
jne
fisubl
xchg
ror
mov
and
outsb
enter
loopne
fadd
dec
mov
cmp
dec
push
sbb
mov
filds
jle
inc
adc
dec
in
ja
xor
xchg
ret
cs
jle
add
inc
push
mov
outsb
ret
sbb
adc
mov
stc
dec
movsl
lea
movsl
xchg
or
loopne
test
mov
cmp
mov
add
sbb
pop
add
xor
and
lods
add
cmp
imul
ja
jge
mov
clc
daa
dec
add
or
push
outsl
dec
out
leave
inc
insb
lea
xor
aam
jo,pt
fadds
fildll
mov
pop
scas
pop
xchg
into
clc
sbb
movsb
imul
add
xchg
jb
arpl
xchg
xchg
sbb
mov
or
rcrl
xchg
pop
mov
sbb
or
jge
lret
lock
cmpsl
scas
mov
push
xor
dec
jl
hlt
lahf
sub
testb
lds
lret
push
and
fcomps
mov
mov
lock
int
lcall
loop
je
jnp
mov
stc
sbbl
or
ret
or
sbb
and
test
add
cmp
in
or
sub
sub
sub
fnsave
adc
or
roll
test
xchg
jle
orl
les
out
jl
std
jae
mov
push
add
mov
dec
xchg
mov
cmc
jl
add
movsl
roll
mov
cmp
outsl
stos
mov
jns
fists
xchg
pop
inc
lea
imul
stos
sub
bnd
ds
cmp
cmc
rcrb
mov
xchg
jnp
mov
addr16
arpl
daa
leave
inc
and
mov
cs
mov
mov
sub
out
hlt
mov
xchg
xchg
rcll
xor
push
lret
sub
lods
and
cmp
pop
adc
rorl
cmp
lret
xchg
sub
dec
gs
loop
out
aas
ljmp
in
sub
ret
fdivl
aas
mov
data16
inc
mov
add
out
js
aaa
mov
icebp
dec
repz
inc
inc
mov
mov
sub
push
aam
xorb
nop
dec
imul
enter
sti
xchg
push
lret
push
or
dec
dec
mov
mov
shld
xor
or
or
ss
pusha
pop
mov
xchg
mov
out
fstpl
dec
cmp
ja
fnstcw
divb
test
je
mov
out
pop
lds
inc
movsb
or
cwtl
xchg
push
sahf
cltd
int
pop
xor
out
jl
inc
inc
cmp
icebp
mov
rcrl
je
pop
mov
xchg
inc
add
add
mov
mov
xchg
inc
push
mov
jmp
push
inc
cltd
dec
adc
cwtl
pusha
lcall
xor
loopne
in
insb
adc
mov
nop
insl
scas
inc
enter
ret
xchg
cmp
loop
lods
lahf
pop
test
cmp
pop
jno
mov
mov
dec
test
jge
jnp
cmp
jmp
jmp
push
xor
pop
bound
jg
jg
decl
pushf
inc
sahf
iret
adcb
push
mov
pop
negl
xor
cwtl
sub
out
pop
aam
push
or
mov
add
es
mov
loope
mov
xchg
out
xor
jno
test
lds
pop
mov
push
jns
xchg
in
jne
popa
pop
push
or
jns
inc
sub
pop
rcll
push
mov
rorb
pop
and
sti
mov
sbb
sti
mov
rcll
adc
mov
sahf
call
imul
inc
push
sarb
clc
cmp
lret
inc
cmpsb
scas
out
pushf
xor
push
dec
dec
nop
add
scas
gs
lds
ja
inc
mov
cld
jbe
push
xchg
fwait
stc
jmp
out
popa
aad
cltd
nop
in
dec
enter
fbstp
or
cltd
cmpsb
jle
jecxz
sub
pop
jecxz
scas
insl
push
stc
push
test
movsl
xchg
nop
scas
bound
sub
out
icebp
mov
stos
gs
sub
mov
push
dec
ret
stc
lcall
dec
aaa
xchg
fidivrl
mov
push
shrb
cmp
dec
hlt
aam
les
mov
xor
andl
lret
aaa
dec
xlat
xchg
fidivrs
cs
inc
mov
daa
mov
xchg
cmpsl
xchg
pop
orb
leave
add
outsl
es
aad
cltd
iret
sbb
xor
mov
cmp
arpl
js
aas
add
iret
push
ret
mov
dec
dec
stc
icebp
arpl
add
mulb
and
add
lock
aam
dec
fdivrs
xchg
lret
repz
test
and
pop
enter
cmpsb
adc
shll
adc
popf
mov
gs
sub
icebp
add
mov
sahf
mov
push
es
or
decb
leave
dec
rclb
movsb
cmp
adc
push
push
sysret
daa
push
sbb
xchg
mov
xchg
mov
sbb
popf
in
or
in
sub
jmp
cli
in
iret
stos
mov
inc
js
fcmovbe
out
pusha
pop
ja
ljmp
js
mov
inc
mov
sub
repz
sbb
pop
mov
loopne
fistpll
sbb
jae
sbb
xor
push
adc
movsb
mov
scas
or
ret
cwtl
sbb
pushf
push
repz
mov
das
in
js
mov
roll
xlat
hlt
shlb
lock
mov
lock
pop
jg
cmp
aas
cmp
cmp
cld
mov
push
insb
lret
jg
cltd
shlb
aaa
repz
pop
data16
pop
aam
movsb
and
or
pop
jmp
sbb
or
mov
xchg
adc
adc
push
fcmovnb
cmc
pop
inc
leave
mov
jg
fistpl
mov
xor
add
int3
fwait
bound
mov
fldl
push
stos
add
dec
shll
inc
cmc
sub
push
jl
mov
xorb
mov
push
stc
mov
loop
mov
ss
ljmp
jg
bound
push
mov
orl
sub
in
pushf
bound
xchg
jno
xor
mov
xor
cmc
mov
repnz
mov
xchg
push
push
cmp
cmp
xor
repnz
pop
std
outsl
jle
cltd
sbb
mov
sub
mov
in
or
in
adc
cmpsl
pop
in
jle
pop
sub
sti
jo
sbb
sbb
jge
aas
out
mov
bound
cmp
sahf
lods
push
dec
push
pop
inc
jg
mov
les
daa
sub
sub
stos
mov
pushfw
cmpsl
mov
mov
sbb
jns
out
gs
xchg
jae
filds
xchg
test
and
mov
lcall
jecxz
inc
enter
pop
jnp
xchg
and
clc
ficompl
ja
jmp
mov
mov
jg
adc
dec
adc
addr16
popl
cmp
xor
ror
negl
and
subb
fisubs
jmp
mov
pop
fisttps
push
xchg
roll
and
cmp
scas
jg
lret
and
add
push
adc
xchg
sbb
popf
cmpsb
adc
adc
jbe
lcall
imul
jns
sbb
or
and
nop
les
fwait
int
jecxz
pop
mov
aaa
into
add
mov
dec
insl
loopne
mov
insl
fnstcw
test
push
pop
inc
in
sbb
lcall
in
sbb
push
xor
sub
sbb
aas
mov
aaa
sahf
aas
movsl
pop
mov
stc
mov
mov
push
jnp
enter
gs
mov
sbb
xor
lds
sbb
cli
cmc
or
lret
sub
adc
fmuls
adcl
enter
lret
enter
mov
enter
xchg
rclb
lcall
lret
fstpt
fwait
mov
xor
xchg
push
imull
xchg
xchg
sub
js
fcmove
fcmovnbe
add
rcll
in
cmp
or
divps
mov
or
bts
push
add
push
roll
scas
xor
int3
jmp
pop
xlat
das
inc
shll
jg
lret
insl
xor
push
dec
out
dec
lods
inc
test
dec
cli
mov
mov
imul
hlt
xor
mov
in
adc
mov
jno
aaa
dec
xlat
cld
pop
test
pop
push
hlt
mov
rol
divl
jnp
adc
lcall
inc
insl
sbb
mov
mov
pop
nop
adc
lahf
inc
call
icebp
rclb
into
dec
stos
add
add
fadds
out
jecxz
mov
inc
stos
mov
sbb
test
cmp
mov
dec
shlb
scas
loop
aaa
jb
push
adc
sub
test
mov
jcxz
mov
gs
inc
pop
jbe
loope
into
and
mov
fstl
and
xchg
and
popa
xor
sti
fists
mov
jb
sbb
testb
sbb
xchg
push
nop
test
push
push
mov
call
imul
and
cld
fwait
sub
cmp
mov
imul
add
sbb
dec
insb
xchg
outsl
insl
lahf
fnstenv
dec
jg
and
jo
ja
arpl
fwait
mov
fistpl
push
xor
test
scas
imul
cmpsl
das
sbb
insl
clc
movsb
negl
testl
jle
fadds
ffreep
hlt
mov
cmpsb
xor
sarb
lahf
sbb
outsl
add
dec
mov
sbb
shrb
test
mov
sbb
push
mov
ret
outsl
push
pop
mov
push
inc
mov
mov
test
pop
mov
std
lods
adc
and
pop
cs
cmp
xchg
inc
push
fs
xchg
mov
mov
pop
les
in
cwtl
in
mov
repnz
daa
adc
add
sub
stc
mov
jno
pushf
mov
shl
es
mov
mov
test
dec
iret
mov
or
out
add
dec
mov
fstpl
and
pop
aam
push
xchg
repnz
fwait
js
insb
inc
adc
adcl
sub
xchg
aaa
pop
jmp
pop
ds
ret
mov
jl
dec
enter
mov
pusha
jnp
add
icebp
jge
jl
outsb
inc
idivl
lret
out
int
je
clc
fcoml
stos
ret
out
enter
push
out
testb
mov
icebp
in
addl
or
mov
enter
ds
in
push
push
mov
fwait
aaa
or
daa
in
mov
jmp
out
fistpl
adc
pop
insl
cltd
xchg
mov
cs
mov
and
xchg
mov
fdivr
pop
mov
outsl
adc
add
xorl
mov
mov
dec
jb
cmp
sbb
mov
mov
sub
fadd
sbb
ret
stc
jg
mov
aaa
cld
inc
dec
loopne
jne
mov
out
inc
leave
movsb
fstps
mov
inc
mov
repz
sbb
arpl
aas
xchg
aam
test
xor
gs
loopne
push
push
fidivrs
add
jne
iret
cli
or
sub
popl
rcll
rcrb
jmp
pop
negl
xchg
imul
xor
aas
pop
adc
aaa
sbb
faddp
out
jl
dec
mov
mov
xor
data16
out
mov
leave
jecxz
sub
bound
cmp
jge
lds
mov
hlt
jecxz
pop
fcoml
mov
add
dec
ds
rcrb
mov
popa
int
push
int3
xchg
mov
sub
add
pop
jp
je
pop
cmpsl
sub
daa
mov
push
xchg
xchg
pop
adc
ret
push
jno
push
fcomi
nop
inc
sub
jp
xchg
xor
sbb
sbb
sbb
mov
out
mov
push
xchg
mov
cmp
aaa
push
adc
push
mov
test
sarl
cmp
xor
dec
and
or
sbb
push
stc
jge
sub
dec
and
fiadds
mov
inc
dec
call
cmp
mov
test
js
jb
aam
jne
xchg
lds
jmp
fdivrl
outsb
pop
je
inc
mov
icebp
out
jnp
mov
cs
cmpsl
push
std
call
les
mov
and
daa
push
mov
iret
aam
xchg
cltd
jmp
test
adc
aaa
dec
mov
std
dec
mov
cmp
pop
sbb
dec
pop
cmp
mov
scas
pop
lock
lcall
int3
add
xchg
les
push
push
jne
in
stos
lcall
sbb
dec
xchg
xorl
aam
std
test
mov
lahf
push
mov
or
push
or
into
subl
faddl
fwait
dec
sub
fsubrl
in
ljmp
push
in
adc
stos
cltd
xchg
cmpl
pop
arpl
add
mov
popf
dec
lahf
ljmp
pop
cmp
dec
sub
addr16
cli
faddl
jno
out
sbb
jg
lcall
mov
iret
std
push
dec
stos
adc
adc
push
mov
mov
sub
pop
cld
cli
insb
xchg
lea
jmp
mov
push
add
lea
ror
stc
ret
and
hlt
and
int
ja
repnz
jns
enter
shlb
mov
enter
dec
xchg
adc
or
ficomps
adc
js
xchg
scas
addr16
mov
xor
leave
insl
jecxz
fmuls
cwtl
cmpsl
loop
das
sbb
test
lods
push
iret
addl
ljmp
jnp
imul
clc
mov
cli
inc
sbb
divl
inc
jb
cmp
cmpsb
mov
in
inc
or
pop
xchg
test
lahf
out
div
inc
xor
adc
stos
cwtl
cltd
arpl
insb
popf
popf
adc
daa
out
fldcw
mov
cmp
and
mov
orb
pusha
stos
push
adc
sar
or
rorl
in
lcall
pop
mov
out
movsb
sbb
arpl
xor
mulb
hlt
pmuludq
inc
dec
add
jb
mov
test
dec
shl
push
mov
mov
mov
int
and
dec
push
mov
loop
xchg
push
mov
popf
push
loop
dec
jae
cmp
lea
xchg
adcl
movsl
and
jae
mov
hlt
imul
out
in
xorb
push
in
std
mov
pop
and
mov
fwait
mov
inc
lret
hlt
add
das
add
mov
in
iret
sbb
std
pusha
cltd
xor
xor
push
loopne
inc
jmp
xchg
imul
fneni(8087
cld
xor
rcrb
test
lret
xor
or
inc
das
lds
mov
out
jbe
stos
xorb
shrb
sbb
sbb
pop
adc
ret
call
mov
ficoml
xchg
inc
roll
repnz
cmpsb
out
adc
lcall
fldl
or
pop
inc
lds
add
loope
push
loope
lret
iret
aam
cmp
xor
js
loopne
aam
mov
mov
push
ljmp
cmp
inc
jns
rolb
mov
daa
or
adc
cmpsl
sbbb
out
pusha
pop
dec
and
mov
mov
add
in
push
xor
into
in
add
mov
jno
fwait
aaa
dec
mov
mov
icebp
sub
mov
inc
fldcw
fmull
mov
push
push
insb
xor
jmp
repnz
sbb
cmpsl
xchg
inc
and
loopne
mov
dec
cmc
xchg
outsb
pop
inc
faddp
push
ret
pop
cwtl
xchg
push
push
out
mov
add
mov
jecxz
rcll
jne
mov
pop
cmpsb
clc
pop
fistpl
mov
mov
aaa
mov
lahf
outsl
or
lods
imul
pusha
lahf
loopne
jb
jns
xchg
mov
std
and
lods
or
push
or
imul
pop
xchg
aaa
sub
lcall
fucomip
pop
cmp
mov
into
addl
repz
xor
jae
arpl
gs
lret
xchg
nop
loop
cmpsb
xor
pop
or
shl
push
fisubl
xchg
jmp
stos
imul
dec
pop
movsb
mov
sub
mov
xchg
js
pushf
enter
mov
xchg
push
leave
push
call
sub
es
in
stos
push
sti
leave
dec
outsb
mov
cmp
sti
and
xor
mov
add
jb
mov
into
xor
insb
push
std
mov
movsb
ds
andb
jns
mov
cmp
mov
outsb
cmp
pop
cmp
pop
lods
push
shl
or
lcall
mov
push
adc
or
sbb
sbb
pop
and
daa
arpl
push
enter
push
pop
sbb
add
adc
outsl
add
mov
xorb
and
jge
xchg
and
xor
add
adc
scas
popf
mov
vsqrtss
and
in
jno
push
cmpsb
stos
add
bound
out
in
repz
je
mov
pop
call
std
and
sbb
cmp
fidivl
imul
pop
sti
mov
dec
lret
mov
lds
popf
outsl
push
push
cmp
in
jp
dec
push
in
test
push
jge
mov
bound
addr16
jbe
cmp
int3
jl
adc
mov
adc
ljmp
lods
mov
push
push
repnz
add
mov
in
cmc
push
inc
cmp
or
lds
mov
mov
mov
fsubs
gs
cmpsl
imul
push
lret
dec
push
sbb
push
lahf
mov
jb
insl
push
inc
jecxz
mov
and
push
pop
imul
loopne
pop
es
scas
add
inc
movsb
pop
lock
sbbb
test
lcall
add
cli
cmpsb
movsl
stc
inc
inc
push
insl
mov
lods
pop
outsb
aas
xor
inc
test
stc
pop
movl
int
add
and
data16
push
fstpt
inc
outsb
push
adc
push
and
js
sbbl
push
pop
push
dec
jmp
ret
test
sbb
lret
out
mov
fistpll
lock
stos
das
push
sub
idivl
xchg
outsl
lcall
fldcw
negl
aam
aad
inc
cltd
loop
push
stc
icebp
cmp
and
add
or
jno
push
test
aad
cmovbe
jmp
sti
test
adc
faddl
mov
movsb
push
lods
sub
mov
or
or
dec
gs
outsl
std
loope
mov
mov
inc
add
hlt
cmpsb
stos
psubusw
subb
negb
add
adc
int3
inc
mov
add
movsb
call
fldenv
dec
out
xor
fisttpll
rcr
stos
push
enter
rcrb
dec
push
dec
jle
xor
sbb
xor
in
shll
xor
gs
lahf
or
popa
sub
mov
das
jecxz
mov
fcmovne
jle
jbe
push
jge
insb
mov
outsl
pusha
pusha
mov
or
and
cmp
or
bound
outsb
imul
int
lods
mov
out
imul
or
lret
lock
mov
dec
xchg
ss
mov
push
loop
stos
push
mov
es
and
dec
bound
insl
or
mov
sbb
mov
xchg
in
mov
xchg
fcmove
mov
addr16
mov
shlb
pusha
sub
fidivs
sub
lahf
xor
jmp
sbb
cmp
xor
repnz
sub
aam
in
adc
fiaddl
push
adc
push
mov
divb
inc
ja
bound
dec
frstor
mov
mov
sbb
out
jmp
ja
and
pop
clc
pop
pop
or
xor
popf
add
xor
ffree
mov
inc
fld
push
mov
fsubs
push
mov
ret
or
and
lret
jae
ds
loopw
test
cmp
mov
push
pop
and
sti
or
fstps
imul
fst
loopne
xor
jmp
xchg
out
xor
push
stos
sbb
jecxz
jo
cmc
sbb
jae
xchg
test
loopne
int3
jmp
sbb
call
fmul
xchg
roll
mov
out
icebp
rcl
add
sbb
mov
jge
sbb
mov
add
loope
cld
push
test
sub
jae
jae
call
push
adcb
or
jae
xchg
addr16
imul
fildl
mov
add
pop
add
lds
data16
stc
xor
sub
cmpsb
data16
hlt
add
bound
fstpl
inc
dec
add
in
sbbl
lahf
xchg
and
cmp
xchg
lahf
mov
insb
loopne
push
pusha
out
mov
mov
mov
xor
xchg
mov
ret
iret
push
bswap
mov
xchg
push
mov
xchg
sub
push
mov
xor
mov
sti
lahf
or
jae
push
sbb
push
imul
arpl
cmc
push
xchg
inc
test
daa
stos
in
pop
jmp
mov
and
mov
ret
cmp
or
and
jbe
add
outsb
mov
xor
xor
and
aad
or
sbb
cmp
cmp
cmp
cli
lret
or
mov
ds
popf
inc
scas
xchg
push
adc
push
inc
mov
call
or
cwtl
push
xchg
mov
jb
mulb
push
out
push
cmp
popa
out
push
js
sub
and
roll
shll
xor
and
in
cmpsb
jg
sets
add
adc
sbb
in
jge
aas
repz
imulb
loopne
push
test
jo
push
ljmp
xchg
mov
dec
sbb
add
pop
xchg
lahf
and
xchg
and
mov
fwait
mov
jge
adc
leave
inc
fwait
popa
in
jno
mov
add
imul
imul
roll
add
push
xor
test
push
sbb
aad
hlt
xor
popa
mov
repnz
icebp
lods
mov
pop
mov
sbbb
cld
sbb
xchg
add
push
lret
lret
shrb
mov
dec
out
and
jb
arpl
sti
iret
in
sbb
push
mov
sbb
jl
mov
and
test
div
daa
ss
les
ljmp
icebp
les
scas
pop
push
mov
dec
lahf
clc
adc
enter
cmp
sti
xchg
imul
mov
scas
stos
cmp
test
inc
cmpsl
cmp
push
and
clc
gs
inc
test
pusha
cltd
cmp
les
jno
add
and
push
imull
repnz
stos
popa
adc
mov
xlat
mov
lret
jb
dec
mov
mov
xchg
idivl
pop
cmp
das
in
lret
jns
xor
xor
pop
mov
imul
xchg
sbb
mov
test
xor
jo
pop
repnz
xchg
push
stos
scas
jb
fstp
jl
xchg
ds
mov
cld
push
aas
pop
push
out
in
sbb
sub
fsubr
ljmp
pop
and
aas
mov
inc
push
mov
push
faddl
sahf
outsb
push
shlb
sbb
sub
lock
lret
in
and
xchg
push
xchg
pop
andl
sub
cli
in
ja
repnz
test
repnz
hlt
xchg
in
inc
cmp
loopne
adc
and
aas
sub
fidivrl
jbe
or
inc
dec
add
adc
push
out
or
andl
push
sahf
xchg
ror
ret
dec
adc
inc
inc
arpl
iret
lret
mov
stos
adc
sbb
out
jl
or
mov
xor
adc
sbb
out
iret
jle
inc
leave
lods
popa
ljmp
xlat
cli
mov
rol
sbb
add
neg
add
push
addb
loope
ss
popl
lods
mov
punpcklwd
nop
dec
and
jnp
jbe
jns
clc
push
pop
mov
cmpsl
nop
xchg
sar
push
aam
aam
sub
lahf
mov
aaa
aaa
call
adc
stos
out
xchg
out
movsb
adc
mov
mov
es
in
testl
push
arpl
push
mov
popa
adc
cmp
xor
mov
nop
mov
shrb
mov
daa
es
shrl
idivb
insb
shrb
inc
push
inc
mov
sbb
in
call
add
adc
scas
dec
jmp
cmp
dec
xor
insb
in
mov
pop
lods
arpl
in
insw
addr16
ficomps
xlat
cmp
xor
sarb
mov
daa
mov
pop
test
inc
jb
dec
xchg
add
cltd
inc
mov
pop
outsl
les
ret
mov
jg
and
loope
or
cli
inc
jmp
xchg
inc
inc
jbe
jb
xchg
push
or
inc
lods
sub
sahf
out
and
popf
mov
in
shlb
test
adc
jo
jg
hlt
bound
loopne
push
sar
stos
lock
pop
adc
stos
cli
sbb
out
sub
and
or
cmp
test
dec
clc
mov
stos
out
je
aaa
lods
or
mov
aaa
adc
or
repz
aas
or
orb
mov
dec
mov
add
or
fildll
add
mov
add
mov
push
ds
jl
pop
inc
sbb
inc
cltd
dec
out
sub
stc
fildll
movsl
mov
add
cld
sti
in
sub
or
pop
lea
scas
xchg
inc
popa
inc
lock
xor
mov
add
cmpsb
jo
fisttps
or
inc
fstl
and
push
bound
cli
hlt
ret
push
out
cmp
imulb
adc
es
clc
xor
movsb
mulb
add
mov
mov
lds
mov
push
cmc
mov
jl
loope
into
lcall
jne
dec
pop
cmp
subb
pop
data16
scas
sub
inc
add
shl
hlt
lods
cld
xor
addr16
mov
inc
or
in
lea
int3
mov
movsl
push
sub
insl
cmp
adc
mov
test
pop
mov
cmp
jg
shll
and
test
or
int
in
jbe
pop
xchg
jae
mov
roll
imul
arpl
xchg
cs
test
mov
sub
pop
int3
mov
inc
inc
xchg
inc
inc
push
dec
adc
loop
gs
lcall
cld
repnz
jns
xchg
daa
test
xchg
push
lods
outsb
xchg
aaa
cmp
add
loope
dec
test
enter
fisubrl
ret
leave
pop
popa
sub
jns
fiadds
jecxz
xchg
push
mov
cli
xor
enter
rcrl
mov
mov
jnp
mov
vpmullw
cmpb
jo
sbb
cltd
add
pop
pop
adc
fsubl
and
fs
sub
ret
inc
addb
xor
pusha
xchg
vunpcklps
or
inc
rcl
adc
jle
mov
lahf
xchg
fisubl
jmp
sbb
sbb
xor
jp
xchg
xchg
subl
mov
xor
lret
shlb
fwait
and
aas
or
sub
addr16
sahf
add
enter
stc
mov
xchg
mov
mov
sarl
cwtl
adc
mov
call
pop
jecxz
pop
rclb
cmpl
ret
cmpsl
leave
dec
inc
mov
pop
mov
inc
insb
jns
roll
adc
aad
insb
push
inc
ret
cmpsb
inc
mov
nop
cwtl
jg
push
test
aas
mov
mov
lods
fnsave
imul
inc
and
mov
popf
popa
imul
push
sbb
jae
les
jmp
jmp
push
push
sub
js
ss
popf
add
mov
or
mov
shr
idiv
shr
ret
mov
cmpsb
shrl
ljmp
mov
inc
popa
jl
dec
or
jae
or
sub
rcrl
dec
sbb
adc
mov
xor
insl
inc
xchg
add
icebp
bound
jo
or
xor
outsb
inc
aas
cmpsl
or
in
mov
ret
das
rolb
mov
in
xor
inc
xchg
push
fcoml
xor
popa
loopne
insl
jb
cltd
sbb
dec
mov
xor
dec
dec
popa
popf
iret
shr
sub
cmp
sti
sub
sbb
push
imull
mov
repnz
inc
xor
fbstp
or
iret
pop
stc
outsb
mov
dec
into
cwtl
test
inc
adc
cltd
jbe
xor
sub
addr16
push
outsl
mov
jg
adc
push
fisubrl
mov
sub
icebp
push
and
dec
cmpl
jo
or
or
hlt
out
mov
inc
inc
jns
fsubrs
jl
fcompl
mov
rcr
in
jmp
sti
repnz
push
jae
arpl
out
dec
pop
and
rcrb
pop
mov
ret
std
mov
cwtl
xor
dec
push
pop
popf
mov
sti
mov
sub
inc
push
fiadds
add
cmp
orb
pusha
mov
cwtl
xor
ret
mov
je
pop
jmp
repnz
xor
scas
push
hlt
in
in
adc
out
mov
mov
in
pop
popf
cmp
cmp
push
mov
dec
inc
iret
enter
ja
into
add
pop
jns
mov
stos
arpl
movsl
movsl
ret
sub
xor
push
clc
aam
dec
fidivrl
or
clc
int
sub
lods
cltd
test
xor
lock
aaa
aas
je
test
mov
ljmp
repnz
and
mov
stos
int
and
fdivrp
aad
mov
pop
cmpsl
in
add
in
lcall
lcall
ficoms
or
or
insl
xchg
xchg
pop
cld
mov
andl
ja
jecxz
inc
cwtl
mov
push
mov
inc
ja
mov
pop
lret
popa
dec
xchg
jnp
fucomi
out
and
push
jno
lahf
fucom
out
cs
test
sub
jbe
insb
xor
inc
shl
mov
mov
lahf
ficoms
lcall
sar
fwait
cltd
cmc
popa
add
js
or
mov
or
cmp
out
insl
jle
icebp
pop
xchg
fistl
add
mov
dec
ljmp
pop
outsl
mov
loop
rcrb
push
rcl
gs
dec
movsb
outsl
pushf
jle
pop
je
mov
icebp
bound
inc
lds
jp
mov
adc
bound
addr16
aas
jbe
aas
lret
and
test
sar
out
xchg
xor
jne
xchg
push
scas
dec
xchg
jo
xchg
xor
std
adc
sub
in
nop
jnp
push
out
in
xchg
mov
out
cmp
mov
into
fcmovnb
fnstenv
sub
mov
js
adc
push
push
dec
xor
js
pop
cmpsb
rcll
xor
dec
hlt
or
mov
pop
inc
dec
lock
jge
rcrl
inc
lds
jae
ret
scas
scas
lahf
mov
mov
loop
mov
scas
js
ss
andb
icebp
ss
add
adc
sahf
inc
jns
inc
add
int
sbb
inc
xor
pop
push
xor
mov
add
into
mov
inc
mov
or
inc
push
sbb
pop
xchg
gs
xchg
lret
mov
idivl
ds
fcomp
out
or
push
loopne
sti
es
idivl
aas
loop
jae
rclb
in
adc
std
mov
ficoms
jecxz
sbb
cltd
hlt
xor
push
sbb
enter
cmp
mov
mov
sbb
fldl
ret
and
lret
cmp
jae
add
test
mov
mov
adc
sub
test
sub
mov
mov
pop
push
cld
pop
sbb
jg
sub
std
adc
jmp
sbb
jnp
pusha
imul
clc
inc
aam
lods
mov
and
cltd
or
xchg
pop
lds
dec
mov
mov
inc
adc
test
addl
dec
cltd
testb
cwtl
fwait
test
outsl
testb
popf
and
dec
push
lods
out
and
js
sub
hlt
mov
arpl
call
dec
sbb
push
aad
fcmovnu
out
jmp
cwtl
jmp
jp
daa
xchg
pop
cmc
cmp
fwait
adc
adc
mov
push
das
jnp
shlb
test
cmpsl
mov
cmp
insl
and
xchg
outsb
fwait
lea
push
popa
dec
xchg
ljmp
pop
mov
sub
mov
jmp
xlat
push
adc
test
or
xchg
filds
lds
jecxz
mov
out
out
loope
scas
into
jge
pop
outsb
jne
mov
fwait
xor
lods
repnz
fisubs
push
jno
pop
or
cli
inc
test
push
mov
dec
loopne
std
rorb
jl
movsl
lds
in
movsb
es
cmp
xor
lea
sbb
loop
ljmp
pushf
in
jmp
jae
mov
mov
jp
lods
mov
fst
and
lds
test
xchg
pop
out
ficoml
shlb
inc
call
stos
push
icebp
pushl
jg
add
stc
orb
jl
lcall
cmp
mov
or
es
cmpsb
pusha
cltd
in
fs
out
lds
mov
cmpsb
jne
jo
dec
cmpsl
int3
shlb
adc
cs
or
xchg
fists
ficomps
fcoml
test
ss
sbb
sbb
cli
sbbb
or
or
push
pop
sbb
movsb
nop
mov
jne
faddl
cwtl
jmp
in
stc
leave
or
in
test
loop
xor
sbb
push
mov
ja
and
or
std
cwtl
mulb
fistl
sub
arpl
xchg
and
push
imul
sub
and
mov
jno
std
stos
jmp
mov
inc
cmp
mov
stos
pop
jmp
and
clc
addr16
jmp
in
push
int3
sbb
mov
mov
xor
mov
and
fmull
jmp
push
mov
add
fsub
aam
jo
adc
stos
sbb
jns
dec
and
and
pop
fistpll
insb
inc
popa
clc
and
inc
xchg
xchg
test
jge
lret
cmp
add
dec
and
inc
popf
xchg
sub
and
cs
dec
aaa
lods
cmp
lods
xchg
addr16
rcrb
xor
ljmp
inc
out
pop
jb
rcr
mov
sbb
dec
push
lods
sbb
push
cwtl
leave
jl
mov
dec
adc
push
jle
add
dec
cli
out
sbb
lea
mov
mov
ljmp
push
dec
js
loopne
mov
pop
dec
mov
test
bnd
adc
outsl
mov
mov
push
push
incl
mov
es
push
pusha
add
ficompl
mov
out
adc
jg
push
bound
dec
sub
je
add
js
aam
push
test
jne
sar
pusha
mov
mov
inc
xchg
vpmacssdqh
test
rol
fbld
outsl
inc
cmp
and
les
inc
pop
fdivl
xchg
sub
mov
into
test
xchg
scas
inc
fstpl
mov
push
add
rclb
into
loopne
mov
sub
ljmp
out
sub
cli
sbb
xor
sub
ljmp
test
lds
insl
or
dec
xor
in
pusha
and
fldenv
stos
pop
test
and
jno
sahf
jnp
fldpi
lret
sbb
cmpsl
push
mov
ss
push
mov
std
lods
repnz
mov
xchg
cltd
lods
xchg
fcmove
lea
cmpsl
mov
loop
scas
adcl
jo
cmp
lods
testl
and
pop
dec
subb
dec
jg
mov
xchg
repz
inc
jns
mov
fwait
shlb
shr
test
nop
imul
insl
xlat
mov
mov
mov
filds
ds
sbb
aam
stc
sub
shrl
mov
add
xor
out
sub
leave
test
adc
in
imul
cmp
test
and
idivl
sub
push
lods
jo
jbe
stos
push
or
mov
addr16
cs
adc
xchg
pop
xchg
or
aam
cmpsb
mov
xor
dec
xor
out
enter
sbb
pushf
mov
push
dec
or
inc
pushf
dec
clc
sbb
push
jge
pop
add
int3
xor
jo
lcall
or
xor
cmpsb
js
enter
lcall
jle
int3
sbb
pushf
imul
arpl
add
push
push
shll
ret
xchg
cmp
push
jp
test
iret
dec
mov
mov
loope
loopne
xchg
xlat
mov
sti
and
ret
movsb
popw
mov
fcmovnbe
mov
push
jg
mov
mov
sub
pop
xor
push
sbb
ficoms
shld
push
inc
inc
inc
mov
orl
lcall
add
sbbl
frstor
stos
add
jge
inc
stos
or
mov
jns
mov
mov
popa
mov
sti
cmp
xor
add
mov
jb
sti
jmp
sub
and
sbb
push
test
xchg
sub
ja
arpl
jp
or
gs
jmp
jbe
or
add
push
loop
imul
mov
jmp
mov
int3
cmp
jne
shl
xchg
sti
add
xor
pop
jne
mov
imul
xorb
rcll
xor
xor
mov
sbb
outsl
pop
xchg
aad
dec
out
push
mov
mov
mov
rcrl
cmc
hlt
ret
cwtl
cmp
inc
adc
mov
mov
push
or
mov
jmp
in
std
cwtl
xchg
inc
and
fldcw
mov
pop
inc
or
inc
mov
jmp
adc
lea
dec
push
movsb
sub
lds
shll
stc
or
jnp
aad
dec
stos
iret
xchg
pop
icebp
aas
imul
negb
nop
pop
test
mov
push
stc
push
sbb
test
cmc
xor
pop
dec
mov
out
lods
push
imul
push
pop
sbb
or
or
mov
inc
cmp
ds
addr16
sahf
pop
and
xor
cwtl
push
dec
fsubrl
jmp
ret
stc
xchg
adc
sarb
add
xor
push
add
mov
push
xor
xlat
rolb
mov
jnp
fidivrl
push
sub
arpl
mov
dec
xchg
icebp
sti
mov
or
mov
lret
or
push
mov
jmp
dec
test
ficoms
stos
pop
push
xor
xlat
popf
and
sbb
cltd
mov
ds
insb
fadd
loopne
jecxz
pop
inc
test
xor
or
fs
rolb
jl
pop
sarb
in
bound
stc
and
mov
enter
add
xchg
inc
adc
mov
sbb
out
ja
ja
pop
dec
mov
cltd
mov
and
out
sbb
mov
repnz
sbbb
mov
jne
xchg
mov
repnz
mov
into
scas
rcrb
inc
adc
jge
and
out
and
add
hlt
negl
cmpsl
xchg
test
inc
decl
adc
pop
fsubs
xchg
stc
jge
jnp
das
imul
push
fwait
cwtl
out
out
int3
bound
out
mov
sbb
int
ret
xchg
jbe
nop
bnd
push
into
xchg
fmulp
mov
mov
xchg
jmp
sbb
and
jle
or
cli
pop
and
pop
xchg
inc
out
push
add
ret
out
jle
dec
mov
mov
bound
push
lock
outsl
into
imul
push
or
xor
in
jge
xchg
jb
xor
lret
lds
dec
out
adc
cmpsb
loopne
xchg
cmp
lahf
jg
push
fsubrs
xor
jae
cmp
sbb
and
xor
lds
pop
sub
mov
dec
push
jo
shl
or
enter
mov
cli
mov
jge
lcall
stos
ret
pusha
gs
mov
cmpsb
lock
xor
out
movsl
std
out
mov
ss
cmp
scas
or
aaa
sub
das
lds
jmp
loope
xchg
or
cmp
dec
sub
repz
mov
mov
mov
addr16
dec
jecxz
inc
in
pop
fidivrl
fs
adc
and
inc
adc
adcl
test
mov
cltd
add
mov
cwtl
ret
add
mov
add
pop
sbb
jo
mov
mov
loope
jbe
inc
testb
popa
rclb
jae
out
stos
jne
fadd
mov
push
outsl
scas
aam
nop
mov
ja
push
jp
mov
sub
lcall
jnp
xchg
lock
and
jg
bound
fs
sarl
pop
fstpt
lret
not
xchg
mov
mov
mov
rolb
sahf
sbb
cs
inc
out
stos
out
repnz
mov
test
ja
cmp
pusha
mov
jg
inc
and
jae
sbb
sti
imul
mov
outsb
xchg
mov
add
mov
shlb
jecxz
lret
das
fidivrs
jle
ret
add
mov
mov
es
sub
das
cmp
lahf
popl
pop
call
or
add
or
inc
in
adc
xor
mov
movb
adc
iret
test
add
fs
cmp
imul
sub
xor
mov
add
fwait
mov
lea
addr16
xchg
mov
lret
pop
aaa
push
dec
lahf
inc
push
xor
inc
fsubl
ret
scas
jo
bound
pop
icebp
pop
icebp
pushf
mov
fsubp
mov
add
leave
test
negl
outsb
pop
or
pop
ret
nop
scas
xlat
inc
sub
out
mov
fidivrl
gs
fimull
mov
ja
out
lds
out
push
mov
daa
fs
cmpsl
ljmp
das
test
insl
sub
xchg
shlb
mov
mov
das
add
and
arpl
test
sarb
jnp
sbb
scas
jne
popf
std
push
lods
flds
push
cmpsb
stos
push
mov
and
les
in
lret
sbb
cmp
mov
cs
data16
and
mov
cmp
and
lea
mov
sti
push
sti
lods
and
add
xchg
sub
movsl
aam
or
jle
pushf
jg
icebp
sti
ds
cmp
jmp
ss
js
push
adc
inc
scas
ds
stc
add
push
lret
mov
mov
or
mov
pop
gs
repz
fsubp
mov
dec
mov
dec
jno
xchg
stos
jns
xchg
fcmovu
dec
push
ret
and
sarl
fiaddl
mulb
push
test
icebp
push
pop
jg
pop
out
call
test
xchg
std
in
insl
and
std
push
fidivl
mov
movsl
xchg
add
fs
cmpps
pop
push
xchg
mov
stos
enter
mov
or
pop
out
rclb
dec
test
cltd
loope
mov
std
pop
shll
scas
imul
aad
test
rorl
xchg
into
loop
jno
mov
mov
push
and
shrl
pushf
xchg
cli
insb
addb
jne
ja
cmp
mov
xor
xchg
mov
cmp
mov
lods
fists
into
cmp
pop
inc
or
add
mov
mov
xchg
shr
mov
cld
fucomp
fisubl
cmp
imul
cmpsb
mov
pushf
xor
cmc
test
sbb
int3
stc
inc
push
add
jle
mov
scas
bound
stos
push
jecxz
or
outsl
push
adc
lret
adc
stos
out
or
lea
cmpsl
mov
imul
test
scas
and
xor
xchg
dec
add
xor
adc
lods
out
push
lret
rol
stos
pop
xorb
loope
iret
lret
and
fildll
inc
fdivl
pop
cmp
icebp
cmpsl
in
sarb
iret
sbb
fdivrp
xchg
cmp
mov
leave
in
in
aad
pop
fsubrl
out
fidivs
mov
fmul
cmp
shrb
clc
mov
jno
sbb
pop
cld
inc
add
insb
adc
test
mov
sub
pop
jecxz
mov
add
or
movsl
adc
fldenv
mov
xor
fdivs
imul
cmp
jl
hlt
subb
xor
fisttpll
sbbb
movsb
aas
mov
movl
popa
lds
jmp
and
cmpsb
jae
mov
cmp
andl
aaa
std
push
dec
out
in
inc
imul
push
out
lock
mov
xchg
sti
xor
addr16
test
shl
cwtl
cmpsl
inc
mov
inc
jmp
cmpsb
addl
js
sub
loope
mov
xor
pop
jns
pop
lds
pop
fildll
fwait
scas
push
add
nop
cmp
test
bound
mov
pop
fdivl
cmp
and
stos
dec
inc
jecxz
push
jg,pn
in
and
mov
lcall
adc
jns
dec
mov
lcall
sbb
stc
push
idiv
jge
dec
inc
adc
cmpsl
fiaddl
gs
addr16
data16
int3
lods
stc
and
outsb
pop
mov
cmp
je
push
add
sub
fldl
nopl
adc
test
dec
jno
orl
arpl
rol
adc
sbb
cmpb
xchg
in
fcmovnu
ficompl
dec
lcall
ficoml
pop
data16
adc
cmp
out
fisubrl
testb
xchg
dec
adc
in
js
xchg
imul
inc
fdivrl
jno
xchg
jl
enter
dec
loopne
nop
inc
cmp
jecxz
cltd
adc
test
xorb
outsl
test
test
dec
and
and
loope
fst
push
fdivl
dec
int3
pop
addb
dec
jnp
push
stos
jmp
inc
jp
xor
sub
int3
cmp
pop
jl
cmpsb
xor
ret
adc
push
mov
test
ja
iret
leave
scas
xor
mov
nop
ret
adc
fdivrs
inc
call
jae
mov
mov
mov
repz
outsb
rcll
add
jb
aaa
in
in
sub
inc
ficompl
dec
pop
push
xor
cmp
out
pop
add
mov
js
mov
jno
jle
mov
jl
mov
divl
enter
stos
in
leave
xorl
cltd
add
loope
sbbb
repnz
xor
shll
call
mov
ja
xchg
shl
pop
ss
jmp
push
cltd
imul
int
fs
pop
mov
cmpsl
stos
push
mov
pop
and
xor
loope
adc
jb
cmpsb
inc
les
jle
xorb
jge
int
lcall
mov
push
stos
and
loop
daa
test
jne
into
mov
in
sbb
inc
gs
loop
cmp
cmp
fpatan
jg
add
lea
pop
xorl
das
lds
push
pop
jns
orb
inc
test
out
outsl
xchg
lret
movsb
js
mov
pop
mov
fstl
mov
inc
repnz
xor
mov
test
outsl
sub
xchg
inc
mov
sub
dec
iret
enter
out
testb
imul
mov
mov
mov
xchg
jg
xchg
mov
les
sarb
adc
mov
xlat
jo
adc
jno
xorl
push
inc
cld
or
mov
xor
adc
push
and
xlat
push
sahf
add
pop
jmp
and
pop
mov
and
push
cmp
in
mov
addr16
xchg
sub
addr16
es
mov
in
mov
int
jge
mov
add
pop
movsb
xchg
add
cmc
xor
int3
xor
sub
and
mov
in
incl
and
out
out
sub
mov
adc
dec
les
test
mov
repnz
mov
jg
fwait
dec
shll
les
sbb
jns
pop
pushl
inc
ret
and
out
repz
push
push
mov
push
jae
sbb
leave
movsb
mov
outsl
inc
xchg
icebp
lret
add
jne
inc
jmp
fmuls
in
outsl
shrl
aam
arpl
push
dec
cli
add
pop
outsl
mov
fsts
mov
movsl
cltd
and
outsb
xor
dec
je
pop
mov
xchg
test
cmp
inc
insl
lock
pop
lds
test
push
lret
jns
jmp
and
adc
lock
sbb
in
outsl
pop
inc
xlat
mov
lahf
xchg
or
push
sub
jmp
dec
and
and
enter
mov
jo
inc
cmp
cli
inc
les
out
mov
push
sti
xor
leave
stos
cli
dec
sub
inc
lret
je
lds
in
pop
cmp
cmpsl
mull
sub
jnp
and
in
repz
test
out
pop
mov
jne
fadds
or
jne
test
lcall
pop
rcrl
cmpsl
notl
jge
mov
dec
out
sarb
pop
jbe
push
idivl
mov
into
pop
test
das
int3
bound
int
or
fstps
or
rcl
andl
or
shlb
push
dec
pop
rcl
pop
adc
outsl
inc
fbstp
or
pusha
rorl
mov
cwtl
cli
call
xchg
jle
inc
aam
imul
es
xor
sub
popf
cs
adc
sarl
pop
mov
mov
ja
and
cmp
out
dec
jecxz
mov
in
or
ret
js
test
mov
clc
lahf
ja
loopne
movsb
xchg
and
sbb
lcall
inc
push
adc
hlt
pop
sub
lds
push
movsl
in
faddl
fildl
cli
mov
std
imul
mov
jmp
arpl
inc
sbb
sarl
inc
push
push
jno
sbb
adc
scas
xchg
pushw
xor
in
stc
add
jno
add
sbb
loope
jnp
out
fiaddl
cmp
dec
xorl
imul
push
scas
cmpsb
leave
and
adcb
das
xor
fisubl
or
sbb
xchg
jle
adc
xlat
fcmovb
jne
lcall
aad
sub
andl
stc
insb
sarl
xor
inc
mov
les
or
test
orl
cmc
mov
push
push
dec
jb
adc
mov
xchg
add
insl
pop
and
mov
fstpt
cmpsb
sub
push
sbb
xchg
idivl
mov
pop
in
xchg
outsb
push
clc
or
add
leave
mov
out
mov
jp
mov
insl
and
pop
imul
aaa
add
sbb
pop
jne
addl
or
jg
pop
mov
cli
scas
mov
push
xchg
fadds
lret
dec
xchg
bound
pop
clc
adc
test
or
lods
dec
jecxz
je
push
inc
insb
je
outsb
push
pop
or
and
mov
dec
pop
mov
sbb
pop
sbb
lret
xlat
and
or
push
std
mov
sbb
mov
or
inc
mov
adc
shr
pushl
xor
xchg
dec
xlat
imul
and
repnz
jb
in
sub
dec
scas
adc
xor
xor
cmc
pop
push
nop
push
fsubs
xor
std
jne
pop
lods
addr16
ja
mov
add
iret
addb
mov
arpl
addb
sarb
lods
insl
icebp
cli
jne
cmp
iret
jg
test
nop
xchg
pop
pop
out
mov
subl
out
mov
sbb
or
xchg
sbb
add
mov
outsb
sub
mov
pusha
jae
imul
sub
mov
sbb
mov
mov
jo
leave
jae
loop
adc
adc
ds
aas
lock
mov
int
xchg
xlat
mov
xlat
inc
or
insb
inc
fistpll
leave
jbe
leave
and
mov
pop
cwtl
add
mov
xor
mov
mov
and
mov
xor
enter
rclb
addr16
cmc
cmp
ja
in
fldl
rorb
and
int3
pusha
xchg
mov
mov
idivb
mul
mov
lds
jmp
xchg
xchg
and
fs
xchg
imul
lret
dec
push
out
stos
insb
popa
lea
xorb
add
and
cmp
outsb
jp
cmp
popf
imul
and
dec
dec
faddp
orb
mov
xlat
bound
xchg
mov
je
xchg
mov
sbb
je
testb
add
xlat
les
add
sbb
fcoml
mov
ss
out
push
icebp
lds
and
in
dec
jp
mov
cs
xchg
jnp
pop
repz
mov
ds
sbb
adc
cmp
and
daa
aam
adc
sbbl
add
xor
outsl
cmp
fdivrs
jmp
add
mov
orb
jge
fcompl
ljmp
out
dec
adc
and
cmpsb
sbbb
popf
jae
pop
sbb
mov
pop
lret
std
ljmp
mov
data16
adc
add
outsb
cwtl
dec
scas
repz
fstl
or
xchg
mov
or
push
dec
rol
fwait
jb
ret
out
js
outsl
or
pop
and
inc
int3
mov
xchg
ficompl
dec
insl
or
jp
test
inc
lret
je
setg
mov
pop
inc
and
stos
push
xchg
int
into
push
fdivr
imul
mov
sbb
pushf
mul
sbb
das
jecxz
out
or
rcrb
test
call
mov
test
sub
mov
lret
xor
ret
test
pop
in
xor
fucomp
xlat
xchg
ret
rcll
mov
lods
outsl
mov
push
out
aam
enter
pop
fnstsw
xchg
lea
outsb
push
push
adc
inc
jl
imul
cld
bound
cmp
out
fnsave
xchg
outsb
dec
mov
cli
pop
inc
jg
cmp
je
addb
xchg
shrb
loop
test
mov
mov
lcall
jle
add
outsb
lea
insl
xor
mov
mov
sbb
in
pop
ds
movsb
sub
pop
sub
call
out
sbb
frstor
or
jae
lcall
sbb
jge
fnstsw
mov
mov
sub
push
jl
add
repnz
insl
add
cltd
inc
idiv
mov
pop
sbb
push
jnp
cld
incl
mov
scas
sarl
mov
ret
add
push
xchg
dec
shrb
and
pop
je
xchg
adc
pop
xchg
andb
out
aam
xlat
test
sub
xor
shrl
shll
pop
cmp
movsb
ficoms
jne
test
gs
ljmp
mov
cmp
iret
adc
ja
ljmp
or
push
inc
cmp
jg
insb
out
cmp
xor
aaa
pop
lock
aad
cmp
pop
ljmp
and
mov
xchg
lock
pop
or
jbe
stos
loopne
mov
inc
popf
imul
add
xor
lods
adc
int
xlat
sbb
pop
adc
imul
data16
mov
xor
inc
js
sbb
mov
push
pusha
pop
shll
cmp
push
loope
stc
ds
xor
xor
cmp
adc
std
jae
push
pop
lcall
rcrl
movsb
cmp
mov
sbb
movsl
aaa
popf
and
mov
rcll
mov
or
or
movups
jne
xorb
and
out
cmpsl
xlat
pop
mov
jecxz
xchg
sub
pop
stos
lret
les
lock
in
clc
push
mov
insl
jnp
insb
pop
mov
loope
repnz
push
test
cltd
div
mov
sti
les
xor
outsb
test
stos
hlt
dec
bound
fldcw
pushf
push
inc
sbb
dec
lcall
lcall
repz
sbb
add
dec
addl
push
add
xchg
enter
sbb
push
dec
negb
dec
scas
je
jne
mov
insb
jmp
xchg
mov
xor
jle
insb
test
dec
fsubrs
pop
js
repz
sbb
mov
mov
cmp
adc
mov
ss
jo
sbb
fwait
adc
movsb
imul
data16
jns
xchg
sbb
scas
adc
pop
iret
dec
or
lods
xchg
mov
mov
aaa
mov
xchg
lahf
pop
mov
add
xlat
jl
jle
adc
adc
nopl
dec
lret
sbb
mov
sti
lahf
mov
xor
insb
jo
pushf
daa
cmp
roll
repz
or
or
cmc
repnz
scas
shlb
cmpsl
cmp
lahf
and
lods
ss
mov
mov
gs
adc
jp
insl
stc
sub
mov
aaa
xchg
test
jnp
cmp
cld
daa
mov
add
and
mov
and
pop
sub
sub
dec
mov
fldcw
ret
ret
inc
jle
leave
mov
int
push
stos
insl
sub
test
cmpb
aad
sbb
mov
lcall
or
jp
inc
xor
outsb
addb
orb
cmpsb
lods
pop
mov
cmp
mov
iret
push
dec
mov
inc
fsubrp
xor
xor
gs
mov
lods
ja
lcall
aad
mov
sahf
in
cmp
dec
imul
inc
cmp
faddl
loope
jl
jns
jg
loop
push
mov
pusha
jp
mov
dec
lret
jne
aam
xchg
cmp
cmc
add
adc
repnz
in
xor
call
mov
jl
icebp
adc
cli
mov
jne
lahf
pop
sbb
jmp
xchg
mov
ret
pushf
xchg
sbb
in
ss
addb
mov
loopne
sbb
pop
cwtl
in
out
add
mov
jg
fs
mov
movsl
push
pop
pop
mov
cmp
fdivs
fcoms
pop
pushf
ja
adc
test
xlat
nop
lods
sbb
mov
sub
add
add
cmp
mov
pop
mov
mov
pop
int3
clc
aaa
fidivrl
push
imul
pop
sbb
int
jge
rol
jl
mov
cmp
ss
fnstcw
mov
mov
cmp
inc
sbb
dec
popa
andl
mov
sub
mov
pop
repz
movsl
pop
pop
push
and
subl
repnz
xchg
repz
icebp
xchg
cmp
jns
daa
inc
and
mov
aas
push
mov
dec
stc
cltd
inc
cwtl
or
mov
pop
mov
in
cld
push
pop
lods
cwtl
push
xor
into
dec
and
or
fldt
rorb
xchg
push
mov
or
scas
fs
jno
sti
push
mov
sahf
repz
fs
jmp
xchg
daa
loop
mov
jmp
inc
pop
push
repz
sbb
pop
jge
dec
pop
cs
int3
xchg
cmpb
add
ja
pop
mov
std
push
sti
insb
inc
jge
jge
xchg
or
or
xor
mov
in
stos
adc
cmp
mov
pop
dec
jb
notb
xor
mov
pop
out
into
sbb
sbb
jecxz
pop
subl
mov
mov
pop
push
je
dec
mov
ret
mov
fnstenv
fidivl
or
xchg
dec
or
or
push
sbb
dec
jns
cmp
loope
in
mov
mov
adc
push
das
das
xchg
cmp
inc
jnp
sahf
cld
xchg
data16
inc
out
repz
cmp
and
push
cmp
cmc
xchg
aam
pusha
aas
jno
es
mov
mov
jl
and
add
in
sbbb
aad
push
xchg
fs
pop
sarb
adc
cli
mov
das
or
dec
dec
mov
mov
inc
lea
aas
inc
mov
xchg
cmp
fwait
inc
cmc
or
adc
or
or
xchg
addr16
or
mov
push
dec
and
sbb
inc
cmp
mov
cs
push
mov
lret
pop
fmull
mov
pusha
dec
popf
or
jecxz
mov
movsb
jno
add
addr16
pop
sbb
popa
mov
inc
fwait
stos
mov
jno
and
pop
movaps
sub
mov
cmp
pop
add
rcl
xchg
clc
add
jmp
and
sti
out
insl
testl
les
enter
mov
cmp
cmpsl
ror
pop
inc
jl
call
add
add
xor
or
aaa
xor
xchg
and
mov
xor
sbb
or
pop
push
pop
enter
sub
jg
xchg
pop
addr16
and
jmp
out
and
std
es
cld
aaa
repz
ja
test
cli
hlt
inc
mov
leave
pop
jge
nop
inc
ljmp
inc
add
or
jmp
fs
in
cmpsb
add
mov
jmp
lcall
dec
jbe
jg
scas
jecxz
add
mov
pop
or
inc
mov
add
cmp
jne
outsl
data16
and
mov
dec
insl
dec
mov
and
out
pop
addr16
xor
cli
adc
mov
and
fldt
out
negb
andl
push
lock
mov
cmp
enter
inc
cmpsb
add
imul
xchg
jl
fiaddl
adc
and
adc
stc
std
pop
xor
push
testl
xchg
sbb
dec
jnp
stos
divb
or
rclb
jns
data16
mov
push
movsl
mov
push
aad
mov
pop
xlat
sbb
sub
pop
add
clc
mov
fstps
add
lahf
repz
cmp
arpl
test
sahf
test
pop
pop
ret
jo
notl
scas
jl
nop
mov
pushf
inc
ss
jae
cltd
mov
xor
cmp
push
orb
mov
xchg
jne
lods
inc
cmp
fnsave
lahf
mov
int3
cmc
divb
clc
gs
mov
cli
out
xor
aad
mov
inc
push
sbbb
inc
mov
mov
popf
pop
decl
pop
stc
rclb
inc
cmp
pop
jle
inc
imul
in
mov
pop
std
sbb
lock
mov
cltd
lock
fcom
sti
shl
mov
lret
dec
cmpsl
dec
jae
inc
stc
sarb
mov
jnp
add
jmp
js
in
enter
inc
outsl
or
outsl
fimull
dec
imul
cmc
aam
mov
jb
add
inc
popf
sbb
lret
in
or
loope
push
pop
mov
rolb
cmp
and
and
push
mov
and
insb
dec
xor
and
push
movsb
mov
aas
pop
repz
test
mov
bound
popf
jge
add
test
add
mov
mov
fwait
bound
jge
cmpsb
push
lods
mov
mov
pop
test
jno
and
lea
dec
fiaddl
or
ds
push
mov
int3
mov
xchg
add
stc
jbe
mov
pop
sahf
stos
adc
popa
hlt
mov
push
inc
lods
xchg
loope
adc
std
lahf
dec
inc
adc
jl
cmc
mov
mov
outsb
push
cmp
mov
pop
cmpl
mov
jl
lret
add
xor
or
outsl
test
rorl
adc
out
rol
out
shl
push
std
je
ljmp
in
cmpsb
faddp
bound
sbb
xchg
lahf
cmpsb
das
jne
cmp
out
mov
pop
or
inc
push
cmp
xchg
pop
dec
addr16
dec
pop
stos
loopne
mov
dec
insl
dec
mov
adc
dec
stos
pop
sub
std
popa
ret
mov
cmp
rcll
dec
cmc
xchg
xchg
cmovno
shlb
cli
adc
mov
out
fadds
cmp
mov
xchg
dec
into
dec
ret
lock
inc
mov
adc
push
stc
and
push
xor
mov
and
call
adc
cmpsl
sahf
jp
int
shlb
mov
mov
jno
mov
inc
mov
pop
push
adc
pop
jne
test
sub
and
andb
cltd
in
push
pop
orb
ds
incb
sbbb
and
adc
add
in
push
and
repnz
scas
in
and
jl
enter
ret
jno
adc
cmpl
rcll
cmp
cmp
cmpsb
cmpsb
sub
lahf
jp
cmpsb
rclb
mov
sbb
push
push
lret
inc
inc
iretw
cs
mov
mov
mov
xor
mov
test
mov
gs
imul
aas
js
push
repnz
iret
xor
fwait
pop
imul
ret
mov
jge
cltd
out
push
mov
inc
adc
dec
in
mov
lods
pushaw
clc
shr
sub
incb
daa
dec
jmp
push
movl
push
clc
popl
cmp
je
cltd
cltd
mov
incl
rcrl
mov
test
xor
out
orb
imul
cltd
mov
push
and
pop
mov
test
cmp
mov
mov
roll
lods
mov
js
push
cmp
repz
xchg
xor
lds
xchg
pop
out
fsts
push
int3
pushf
inc
adc
fcoms
jb
insl
lods
sahf
clc
push
cltd
loopne
rclb
into
in
mov
mov
mov
push
dec
iret
lock
aaa
mov
aad
loopne
push
hlt
jl
sub
mov
jnp
sub
dec
stos
xchg
dec
pop
mov
leave
test
mov
and
push
mov
xor
sbb
hlt
cmp
hlt
inc
int
stc
sahf
sbb
push
ss
mov
dec
popf
push
lea
cmpsb
cmp
xchg
gs
ret
dec
test
jno
addr16
cmp
js
icebp
sarl
push
mov
pop
push
pop
add
arpl
leave
sbb
das
mov
jle
iret
and
mov
js
rcrl
enter
pop
xchg
loop
rclb
nop
adc
inc
je
cmp
stos
cmpsl
cmp
add
add
scas
int
inc
and
stos
cmpsb
inc
push
or
movsb
gs
cmp
push
mov
fdivr
lcall
push
adc
mov
jp
sub
cmp
mov
pop
int3
ficomps
shrb
fsubp
es
push
paddb
test
notl
dec
push
dec
outsl
ja
std
sbb
cli
and
lods
jmp
cmp
out
jo
inc
hlt
mov
lret
insl
push
fsubr
dec
and
fdivrs
mov
ds
pop
cmp
xor
rolb
movsb
jnp
xlat
xorb
pop
call
cmp
aas
push
cmp
int
add
in
jg
and
add
nop
xchg
pop
xchg
test
stos
lock
fnstenv
pop
stos
lock
jg
jl
and
jmp
fucomp
mov
lods
sbb
mov
and
sbb
imulb
sub
outsl
jne
dec
mov
pop
xchg
dec
dec
test
fidivrs
mov
sbb
std
jo
pop
inc
push
jae
hlt
add
enter
pop
addr16
mov
ds
ja
lcall
notl
bswap
lock
inc
outsb
or
in
xor
loop
and
int3
lods
pop
push
xor
xchg
arpl
sbb
call
lret
sbb
bound
icebp
add
push
sti
sub
jecxz
inc
lcall
inc
mov
decl
or
cs
in
in
mov
xchg
or
scas
scas
mov
push
jb
add
std
mov
adc
scas
dec
lock
dec
jbe
ja
sahf
inc
jne
fldcw
stc
in
arpl
sub
add
aam
cs
jge
mov
rclb
cmpl
cmp
pop
mov
push
push
addb
fucomi
shll
jae
int
fst
mov
cmpsl
fwait
jmp
rep
call
xchg
sub
push
push
fcmovnu
andl
pop
and
and
add
adc
insl
mov
adc
push
cld
insl
push
cmp
pushf
aas
adc
pushf
xchg
xchg
add
clc
mov
push
mov
je
xchg
loope
jnp
jle
pop
adc
mov
insl
mov
cli
cmpsb
or
cmp
push
sub
inc
push
nop
mov
push
leave
call
jp
mov
inc
cmpsb
cltd
pop
push
adc
sbb
push
mov
test
fnstsw
mov
leave
imul
mov
inc
rcll
xlat
daa
notl
push
mov
jg
out
xchg
ror
iret
rcrl
add
iret
xchg
sahf
lahf
rcr
popa
inc
jg
push
dec
and
mov
loope
dec
andb
je
cld
cmp
inc
xchg
sub
rcr
dec
imul
sub
xor
jne
cmp
fisubs
aaa
pushf
aad
and
dec
push
adc
xchg
pop
sbb
mov
ss
mov
dec
cltd
pop
ret
jbe
ficoms
sub
mov
bound
lea
sbb
add
inc
out
xchg
aad
je
jp
loop
add
push
adc
les
fsubrp
jge
sti
test
mov
in
xchg
and
sub
and
daa
in
lret
jo
hlt
mov
aas
shlb
mov
pusha
pop
shl
fildl
mov
fnstcw
cwtl
xchg
add
shlb
pushf
dec
jle
add
cmp
cwtl
cmp
nop
push
inc
cmp
pop
and
shll
mov
pop
lods
xlat
dec
iret
je
nop
pop
lea
out
rcrl
jecxz
push
push
setae
hlt
aad
mov
arpl
xor
or
call
je
icebp
outsl
out
mov
mov
cmpsb
mov
sbb
in
sub
mov
sbb
popf
movsl
lock
dec
pop
int3
addr16
cmp
jmp
popa
out
add
mov
sub
and
pushf
ret
bound
cmp
movsb
inc
daa
ja
addr16
sbb
ljmp
insb
cmpsl
lret
divl
adc
sub
cmpsl
cmp
jb
jbe
push
pop
jecxz
mov
dec
fwait
mov
add
jle
jne
in
sbb
mov
jne
out
jns
mov
adc
je
das
jno
mov
cmpsb
inc
push
add
out
subb
into
push
push
and
int3
daa
sbb
ja
ja
jmp
add
lods
sahf
pop
jle
mov
pop
mov
orl
hlt
in
movsl
outsb
mov
bound
add
outsb
cmpl
movsl
jle
add
arpl
stc
push
arpl
push
insb
mov
add
ret
js
adc
stc
pushf
imulb
repnz
stos
addl
xchg
mov
xlat
mov
inc
cld
dec
rolb
sbb
sbb
add
mov
or
sub
cmp
push
add
inc
int3
mov
cltd
mov
add
pop
fs
enter
xchg
cld
and
stos
cmp
insb
pushf
adc
mov
xchg
sti
xchg
jnp
cmp
mov
out
sbb
cmp
mov
arpl
add
push
test
movsl
xchg
outsl
cmp
mov
push
movsb
sub
in
and
repnz
lret
jbe
push
rorl
inc
in
jge
ficoml
adc
sti
in
mov
movsl
das
imul
into
les
pop
mov
mov
std
or
loope
jae
pop
aaa
out
in
inc
aas
rorl
aas
push
xlat
mov
enter
jmp
xor
cmp
dec
pop
jg
fsubs
push
hlt
mov
mov
movb
inc
sbb
imul
cmp
xor
mov
fdivrs
jns
lret
sub
inc
or
xchg
cmp
pop
test
push
out
into
loope
aaa
fnstsw
in
repz
adc
jecxz
fistpll
cli
test
inc
and
ljmp
adc
out
movsl
sahf
mov
imul
jbe
or
fndisi(8087
in
pop
les
jge
orb
cli
divb
lret
aad
inc
testl
addr16
stc
dec
pop
sub
push
xor
mov
push
pop
add
jns
add
push
add
test
push
jae
sub
jnp
in
xchg
push
outsl
push
jmp
mov
cmp
outsb
js
icebp
scas
jns
adc
les
inc
pop
mov
sahf
and
js
sub
scas
cmovl
mov
imul
lret
push
jne
gs
mov
pop
inc
dec
xchg
idivl
cmp
inc
sub
jg
sub
mov
mov
fldt
lcall
lcall
dec
stc
fildl
cmp
fcoml
scas
cwtl
daa
int
sbb
pop
sbb
sarb
mov
jns
jge
jnp
push
pop
lcall
ret
jge
mov
gs
stos
cwtl
cmp
mov
and
adc
cmpsl
mov
movsb
out
push
jp
movsl
sar
pop
adc
mov
adc
mov
sub
sti
iret
shrb
push
push
xchg
stos
test
lea
icebp
mov
stos
rcrb
or
mov
sbb
mov
inc
or
inc
cli
jp
inc
add
mov
fdiv
mov
out
xor
xor
je
fwait
dec
je
or
mov
cmp
jne
out
push
das
ret
pop
mov
pop
in
repz
mov
pop
rorb
sbb
pop
mov
mov
dec
sar
scas
shl
int
jecxz
in
mov
rorb
xchg
int
je
pop
leave
cmp
jns
mov
pop
pushf
add
jge
fdivrl
mov
repnz
adc
mov
out
jge
in
test
movl
mov
test
in
pusha
xor
loopne
daa
jne
fwait
pop
cmp
push
sahf
mov
sbb
and
and
mov
push
xor
pop
push
bound
es
shrb
ret
adc
out
xchg
mov
int3
mov
mov
pop
pushl
sub
pop
dec
arpl
test
sub
orb
adc
and
dec
jle
mov
bswap
ds
ja
aam
ljmp
outsl
cmpsl
out
fwait
cmp
gs
pop
test
cmpsl
popa
xchg
adc
cld
jns
and
push
into
mov
dec
jo
push
cli
loopne
jle
ds
mov
mov
sbb
outsb
enter
scas
mov
inc
cmpsl
lods
cmp
add
lea
int
adc
shl
cld
clc
dec
jb
sbb
pop
punpckhbw
pop
or
pop
shlb
mov
rcrl
das
push
loop
jo
add
mov
pushf
jg
mov
lcall
mov
aad
dec
adc
jg
popa
push
call
mov
cmp
das
mov
sbb
out
inc
leave
jb
rclb
in
pop
shlb
outsb
cs
or
enter
fldenv
jns
adc
adc
pop
mov
outsb
shll
lea
mov
mov
adc
or
in
push
inc
jo
dec
out
popf
mov
mov
jb
lahf
pop
fstl
ret
add
scas
add
js
lock
jb
jmp
movsb
cwtl
and
adc
adc
and
stc
fisubs
mov
xchg
xor
ret
movsb
mov
mov
aad
lcall
stos
pop
ror
adc
mov
sbb
fsubp
int3
int3
cmp
dec
ljmp
popfw
push
pushf
cli
or
inc
mov
sahf
gs
or
adc
mov
jg
outsb
xor
ret
outsb
cmp
bnd
fdivrs
mov
fs
or
push
notb
sarl
repnz
andl
divl
js
xor
cmp
lcall
sbb
andb
inc
mov
and
adc
inc
iret
jo
inc
mov
fwait
out
xorb
test
ret
sbb
dec
cs
push
push
ret
push
clc
or
int
xor
sarb
xchg
ja
fnstenv
mov
out
lret
es
cli
in
sbb
aas
fidivrs
mov
jl
sbbb
or
mov
jnp
sub
movsb
xchg
gs
pushf
or
pusha
and
fwait
mov
adc
aad
mov
imul
pop
push
ljmp
scas
test
stos
scas
lcall
daa
cli
jns
mov
and
call
inc
out
fisubs
inc
mov
or
cmc
mov
sahf
mov
pusha
cmpsl
xchg
in
ja
jg
xchg
ss
xchg
mov
stos
or
mov
xlat
loope
lcall
mov
mov
or
orl
outsb
pop
adc
fwait
cs
sbb
scas
xchg
lds
pushf
xor
cwtl
aad
mov
imul
insb
adc
dec
mov
xchg
xchg
adc
out
jo
adc
jp
cmp
inc
dec
mov
jg
aas
stos
pusha
xor
pushf
test
and
jbe
mov
ret
and
xchg
imulb
xor
cmp
adc
adcb
or
insb
sbb
push
lock
pop
push
inc
jmp
popa
shll
insl
inc
push
popf
andb
call
push
inc
push
push
shll
adc
adc
jbe
lods
cmp
dec
push
sbb
loopne
cltd
inc
cld
push
inc
not
roll
push
bound
cmp
popl
xorl
out
cmp
or
sub
push
decb
loopne
jo
ja
movsb
dec
dec
jmp
scas
add
mov
scas
aas
mov
mov
ror
jp
or
loope
inc
out
test
insl
mov
insb
js
loop
mov
xchg
adc
and
and
xor
xchg
arpl
rcrl
ja
mov
jg
out
call
sub
sbb
cmp
fldl2t
enter
ds
insl
inc
lret
dec
leave
xchg
cmp
sti
mov
lret
inc
mov
data16
dec
jmp
repnz
int3
jl
push
sbb
cmp
mov
mov
inc
push
cmpsl
jb
and
xlat
dec
push
jb
cmp
xor
add
pop
jne
out
testl
mov
test
nop
xor
outsb
popf
mov
push
and
xchg
iret
out
lods
jl
loopne
push
xchg
inc
add
stos
push
incb
pop
ret
push
mov
and
mov
jg
dec
or
dec
mov
popa
cld
movsb
outsb
inc
repz
lock
std
push
cltd
add
imul
fsubrs
andb
test
scas
ljmp
in
dec
dec
aaa
mov
jmp
mov
mov
stc
ds
in
cmc
cmp
inc
in
xchg
inc
sub
fwait
sti
insb
insl
or
mov
xlat
imul
int
sbb
xchg
sub
je
pop
jp
roll
inc
cmovbe
mov
xchg
mov
xor
add
inc
mov
jae
adc
shr
inc
test
pop
cmp
je
sar
test
jno
add
lcall
ffree
dec
inc
repz
sub
jmp
mov
sbb
cmpsb
add
adc
dec
aad
inc
jne
cmp
jns
lods
mov
shl
cmpsl
mov
lret
rep
stc
clc
scas
pushfw
jmp
mov
ds
adc
xor
mov
lahf
fldl
ja
mov
push
sbb
mov
fisubl
js
adc
sahf
out
stos
arpl
sub
mov
dec
cltd
inc
pop
cli
or
sbb
clc
andb
push
jnp
push
dec
test
aad
pop
nop
cmpsb
push
push
loope
fwait
push
adc
cmpsl
lds
pop
add
lea
jmp
jl
into
outsb
inc
add
mov
fs
mov
mov
push
cmp
inc
pop
iret
or
jge
adc
xchg
stos
mov
scas
jb
arpl
mov
mov
dec
mov
jmp
lret
lcall
div
mov
cmpsl
cwtl
subb
pop
adc
mov
dec
jge
xor
popa
mov
lea
jne
push
jecxz
stc
test
leave
jae
cld
xchg
js
lret
xor
xor
mov
sbb
mov
mov
or
cmpsl
xor
icebp
fsts
push
pusha
inc
test
addb
int3
loop
push
cld
adc
in
xchg
inc
mov
ljmp
adc
lods
cli
push
mov
cmp
xchg
push
in
btr
fildl
or
jne
add
popf
cs
andl
dec
mov
jns
jmp
pop
insb
out
cld
sub
test
push
cli
jae
xchg
pop
fwait
addr16
js
xor
int3
testl
mov
loope
and
push
sbb
mov
xchg
popa
inc
or
and
rolb
imul
insb
xchg
aas
fnsave
xchg
jns
xor
or
dec
mov
lea
sub
sub
icebp
push
mov
xchg
fildl
ret
jecxz
sahf
mov
sub
add
out
and
jmp
pand
loop
bound
in
push
xor
mov
imul
dec
mov
push
cmpsb
int3
xchg
xchg
int3
mov
mov
fucom
dec
dec
ret
fucomip
and
ret
mov
leave
cmp
pushl
outsb
fdivrp
jne
mov
and
hlt
mov
jne
in
daa
pop
mov
dec
addr16
ljmp
stos
mov
adc
or
out
mov
push
lret
insl
fcmovbe
cmp
imul
ror
xchg
xor
adc
xchg
movsb
xchg
cmp
cld
aas
pop
ficoms
push
nop
mov
mov
cmp
outsb
stc
jge
add
and
icebp
pushf
pop
dec
mov
in
xchg
xchg
shrl
pop
mov
fistl
mov
fwait
mov
sbb
out
lret
and
cltd
sbb
mov
jns
xchg
fmuls
lcall
rol
xor
std
and
sbb
jns
xchg
fstpt
test
push
sbb
mov
pop
out
stos
push
mov
mov
cmc
add
incb
in
xor
in
xlat
ficoms
mov
lret
xchg
dec
push
ds
lret
js
out
cmp
pop
cmpl
jns
sbb
scas
movsb
and
jmp
xor
adc
jbe
shrb
loope
lods
and
fimull
lahf
adc
loope
out
jae
and
bound
pop
fdivl
xorb
hlt
mull
and
insb
or
mov
outsb
es
dec
inc
lret
dec
dec
pop
or
mov
int
pop
fwait
iret
jmp
ret
or
cwtl
add
xor
xchg
mov
add
mov
das
pop
xorl
outsb
ljmp
push
cmpsb
insl
int3
sbb
push
adc
stos
cmp
add
dec
mov
lock
outsl
pop
imul
cmp
jl
xlat
psllw
jecxz
std
sub
roll
pop
insb
js
or
push
mov
adc
mov
insl
mov
les
int
in
xchg
inc
test
nop
mov
inc
mov
add
push
ret
push
repz
fmul
mov
jp
leave
xlat
push
mov
repnz
shr
insl
ret
out
adc
jno
mov
dec
test
mov
je
scas
or
or
push
mov
xlat
and
mov
cli
push
xchg
ja
or
cmp
mov
pop
aas
jnp
push
ja
rcrb
popl
xor
icebp
in
ljmp
andl
lds
cltd
sti
xchg
test
lahf
and
pop
in
xchg
js
ret
lock
push
dec
xor
loopne
sub
movsl
daa
cmpsb
pop
loop
movsl
cmp
xor
mov
data16
outsl
xor
jae
les
pop
push
insb
stos
int3
and
push
push
sbb
pop
sbbb
movsl
adc
add
sub
jge
pop
or
aam
mov
mov
jge
movsb
fucomp
and
push
int
push
lock
icebp
icebp
int3
imul
fidivrl
inc
mov
mov
or
rclb
nop
mov
insb
mov
inc
inc
jns
repnz
std
stos
scas
movsl
pop
movsl
jmp
insb
leave
nop
or
jg
sub
fidivl
imul
stc
ret
int3
mov
push
push
rcrl
fildll
xor
fnstcw
imul
cmp
push
push
adc
inc
mov
push
test
jp
ja
leave
loop
popf
lock
mov
jne
add
sbb
repz
scas
cmc
stos
mov
pop
push
insb
je
mov
push
rorb
sub
into
js
shlb
das
rorl
jmp
add
out
pop
ljmp
fwait
or
pop
outsl
and
pop
inc
fxch
bound
pop
popa
in
imul
adc
dec
test
cld
leave
fs
push
sub
dec
loope
jg
adc
inc
ret
dec
mov
es
aad
in
lea
out
dec
push
sub
lods
sbb
push
pop
in
orb
inc
out
pop
mov
sti
mov
lods
das
imul
aam
aas
notl
jnp
std
movsb
inc
divb
sub
mov
lret
inc
cwtl
add
call
leave
and
insl
pop
sub
push
inc
cld
pop
cmpb
mov
cld
lret
mov
adc
inc
ret
add
js
push
movsl
jnp
popaw
ret
push
outsb
data16
pop
arpl
or
inc
inc
dec
lcall
gs
clc
mov
pop
out
xchg
fwait
mov
push
mov
pop
stc
and
mov
stc
rcr
dec
push
mov
aaa
pop
es
jle
jecxz
out
push
cmp
mov
mov
xchg
subl
push
dec
popf
cmp
pop
std
push
dec
push
push
mov
push
pop
mov
adc
ljmp
mov
cli
mov
ficoml
pusha
mov
leave
cli
les
xor
mov
imul
dec
dec
daa
xor
scas
mov
xchg
movsl
fs
push
nop
mov
mov
push
push
aad
adc
lods
xor
aaa
repnz
mov
fldcw
subb
adc
insb
mov
lahf
jnp
pusha
lret
lods
adc
enter
loopne
xchg
adc
cmp
xor
mov
push
jge
lahf
dec
repz
pushf
or
arpl
jmp
xchg
ret
ret
xor
loop
push
ret
xor
ss
mov
repz
xchg
pop
ljmp
dec
imul
mov
jl
ficompl
mov
cmp
pop
popl
adc
mov
mov
daa
or
mov
or
nop
pop
sub
push
mov
pop
pop
ljmp
cli
aad
or
movsb
mov
or
and
aad
stos
mov
jmp
mov
ja
outsb
repz
jbe
jp
jnp
scas
dec
lahf
dec
imul
and
les
add
or
fdivrl
push
pop
add
jmp
mov
imul
sbb
cmp
movsl
mov
sub
aaa
pop
shll
add
mov
insb
sub
adc
lret
rcr
int
mov
lock
add
hlt
mov
mov
lds
cmp
jns
xor
dec
add
test
sbb
dec
dec
adc
imul
fadds
je
xchg
insl
xor
or
test
ja
daa
outsl
add
jbe
fcomps
adc
jb
dec
inc
jecxz
hlt
loopew
cmp
and
das
mov
mov
pop
aas
lahf
inc
pop
loop
ret
fdivrs
and
or
push
sub
fcompp
or
pop
shl
sbbb
sahf
out
shl
cmpl
sbb
mov
aad
adc
pop
add
dec
xchg
mov
lcall
cmp
rcrb
mov
cmc
add
jmp
push
jno
gs
loopne
icebp
imul
nop
mov
xchg
xchg
lahf
jecxz
ja
ss
rorb
jle
inc
push
js
into
add
ret
mul
xor
xchg
outsb
mov
sti
insb
movsl
dec
xor
sub
imul
xchg
stos
ss
aaa
imul
and
or
mov
xchg
fnstsw
hlt
sbbb
popf
cld
and
int3
fimuls
int3
jbe
xchg
and
xchg
dec
ljmp
sbb
arpl
dec
int3
dec
lahf
cwtl
loopne
ljmp
nop
fs
push
inc
dec
ret
cld
sbb
and
or
xor
jle
insl
je
jl
xchg
cs
or
subb
xchg
out
data16
jmp
test
dec
push
or
or
push
xor
insb
cmp
or
push
test
lods
je
dec
cmp
sbb
push
adc
mov
add
aas
fdivp
in
faddl
sbb
leave
jmp
movsl
faddl
in
loopne
and
xchg
mov
shrb
push
jae
xor
insl
sub
mov
in
jmp
xchg
imul
popf
cmp
loopne
cmp
aas
mov
daa
mov
inc
cs
jge
add
mov
add
sbb
lods
scas
push
leave
jmp
clc
mov
jae
dec
pop
imul
shlb
fmuls
pop
lods
imul
ret
add
pop
add
xchg
dec
mov
aam
push
sarl
dec
dec
dec
or
inc
mov
cmp
mov
orl
mov
push
stc
repnz
loop
or
imul
push
mov
inc
mov
push
push
out
and
push
outsb
xchg
xchg
mov
div
test
stos
ja
jmp
cltd
iret
js
bound
cmp
pop
cmc
inc
cmp
xchg
inc
push
clc
ljmp
test
push
push
mov
sub
cmp
ret
out
mov
nop
pushf
aam
scas
lcall
cmp
aas
jnp
xchg
push
push
leave
sbb
dec
mov
inc
adc
or
cmp
jmp
jl
cmp
push
ret
jmp
fs
mov
push
test
and
mov
es
stos
and
arpl
xor
mov
sub
aaa
leave
jo
push
pusha
mov
in
ljmp
pushf
iret
mov
sbb
fwait
mov
fistpl
sti
ror
mov
cmpsb
daa
xchg
sub
adc
fisttpl
js
sarb
sbb
shl
aas
mov
fldenv
mov
or
mov
adc
dec
push
gs
test
and
sahf
xchg
jg
mov
or
mov
mov
xor
in
add
shlb
pusha
cld
movl
rol
pop
sub
mov
push
jle
xchg
imul
jnp
push
sub
or
out
pop
cld
mov
pop
in
mov
fcompl
cs
xchg
xor
jns
push
and
outsl
pop
mov
fcoml
bound
test
push
sbb
aad
push
adcl
push
mov
mov
mov
rcll
dec
movsb
popf
dec
addl
filds
pop
mul
int
loopne
sub
jnp
aas
dec
adc
xchg
js
cli
pop
shl
sbb
mov
out
mov
and
sub
rol
xor
sub
mov
pop
xor
es
leave
test
mov
fnsave
std
jecxz
push
inc
cmp
ds
cwtl
icebp
cmp
jecxz
mov
out
push
and
mov
pop
mov
jecxz
jo
pop
fwait
dec
cmpsl
jle
fsub
mov
popf
and
cwtl
inc
stos
mov
and
fimuls
jnp
sub
fmulp
dec
sbb
cmp
or
and
jne
jne
shl
je
add
mov
nop
or
in
stos
sub
sub
in
mov
fisttpll
add
add
fcoms
xor
push
lcall
jae
dec
lahf
push
daa
rcl
stc
inc
jb
cwtl
cld
pushf
ljmp
repnz
das
mov
push
popa
or
les
xchg
rclb
mov
sbb
imul
dec
mov
pop
or
out
fnstsw
sub
test
loope
dec
mov
leave
mov
mov
adc
dec
sarb
hlt
xor
rclb
int3
sub
imul
push
rcrl
fldcw
mov
repnz
inc
bound
mov
pop
cltd
repz
stos
loopne
leave
lods
movsb
fs
and
push
ljmp
mov
sub
or
or
ret
ja
cld
test
sbb
mov
mov
push
imul
pop
dec
push
test
pop
inc
dec
int
js
adc
aad
dec
sbb
int
and
lds
push
sbb
sbb
mov
sarb
aam
imul
or
scas
xor
pushf
sahf
pop
loop
fwait
std
aas
int3
xorl
cli
jge
xchg
inc
mov
mov
add
xor
mov
or
cld
arpl
and
push
cmc
or
dec
popf
sbb
roll
out
mov
dec
insl
mov
icebp
repnz
push
int3
fsubs
and
sti
clc
or
lods
and
jb
jb
mov
fidivrs
inc
aam
jle
add
hlt
test
cwtl
mov
frstor
bound
jnp
scas
xchg
iret
and
cmpsb
push
cmp
out
lcall
xchg
mov
cmp
or
ds
pusha
pop
lahf
in
sub
test
add
cmpsb
incb
popf
into
push
ds
into
cmp
cltd
rcl
divl
shl
push
xor
sbb
imul
mov
pushf
incl
pop
int3
mov
push
mov
enter
jb
jge
lock
sbb
shlb
dec
jmp
sbb
rol
push
lds
inc
mov
subb
repz
pop
mov
ds
in
adc
sbb
loopne
xor
fldl
loope
pop
enter
daa
sub
cmpsl
add
pop
mov
lret
out
jmp
mov
cmp
mov
xchg
dec
jo
leave
or
nop
xchg
mov
adc
in
out
inc
xchg
jae
cmp
push
push
imul
mov
xor
dec
mov
fisttps
dec
cmp
pop
jae
cmpsb
dec
clc
add
push
mov
and
in
inc
jle
in
cli
sbb
ds
jecxz
stc
xor
gs
xchg
and
fmull
sarl
cmpsb
jg
test
add
imul
repz
clc
mov
cmpsb
xor
and
pushf
pop
shr
repnz
jb
cmpsl
rolb
mov
push
push
ss
mov
mov
cmp
sbb
add
mov
xchg
jp
je
ljmp
jns
mov
dec
xchg
sahf
mov
mov
jnp
or
stc
ret
xchg
xlat
mov
push
pop
mov
scas
leave
js
and
inc
pop
pop
inc
outsb
test
cld
mov
in
add
pop
insb
rcl
icebp
lods
loop
xchg
mov
or
cli
inc
mov
roll
or
lea
scas
fs
lods
jb
mov
inc
iret
aad
lahf
in
gs
inc
and
dec
push
inc
ss
les
out
arpl
pop
pusha
or
jl
test
ljmp
nop
loopne
stos
data16
jbe
and
faddl
aas
test
out
bnd
ret
xor
frstor
sub
push
aas
repnz
std
adc
or
adc
push
inc
daa
fadds
cs
adc
inc
cmp
mov
ret
xor
sub
int3
pusha
dec
mov
inc
inc
dec
sbb
mov
sbb
pop
sub
iret
cmp
sbb
addr16
adc
mov
mov
scas
testb
sbb
int
repnz
sbb
das
inc
xlat
aam
aas
cli
std
or
xor
jmp
mov
int
or
imul
imulb
mov
inc
xchg
fistps
inc
mov
fdivrs
scas
mov
sbb
push
iret
jmp
addr16
xor
mov
mov
sbb
pop
inc
mov
cmp
push
dec
mov
dec
lret
mov
mov
sub
and
leave
lahf
lds
mov
adc
jmp
xchg
adc
mov
cmp
mov
lret
cmc
out
int
rcr
push
adc
jb
mov
mov
push
mov
mov
and
repz
lods
int
cli
test
daa
test
shlb
shlb
add
int3
adc
pushl
sub
pusha
outsl
xchg
mov
arpl
xchg
mov
hlt
mov
mov
mov
add
jns
rclb
dec
mov
insb
roll
ds
movsl
inc
push
in
mov
mov
mov
pushf
add
cltd
inc
jecxz
xor
inc
jo
int
testb
outsl
adc
or
sub
mov
daa
or
push
pop
dec
mov
cmpsb
mov
stos
out
dec
xor
jle
shll
and
testl
jl
lret
jg
dec
aaa
sub
push
frndint
push
inc
divb
dec
repnz
xor
ja
cmp
gs
lods
dec
dec
jl
adc
mov
insl
pop
test
mov
mov
xchg
cwtl
hlt
push
lds
cmp
pop
cld
mov
in
jl
dec
and
jmp
mov
push
ret
cmp
lret
stos
jb
add
ds
mov
shl
pop
push
ret
scas
cs
push
inc
mov
rorb
pop
or
mov
icebp
push
out
roll
xchg
dec
mov
iret
je
and
out
cmp
loope
stc
divb
cmp
js
sti
push
jae
add
outsb
out
fdivs
fisttpll
jns
xlat
mov
ja
xchg
jle
xchg
push
inc
sbb
in
popl
popf
test
rcrb
push
cmp
insl
pop
scas
mov
out
jle,pn
outsl
insb
mov
mov
out
dec
cmp
mov
mov
es
xor
or
les
pop
bound
mov
adc
cwtl
pushf
rcll
test
sbb
cmp
sbbb
pop
sbb
mov
cltd
inc
cmp
ret
jmp
mov
aad
mov
xchg
test
cmc
jnp
mov
xchg
movsb
mov
dec
xchg
pop
pop
add
mov
push
lcall
inc
outsb
out
push
jp
push
mov
stos
lret
mov
jb
add
dec
daa
cmp
adc
rcll
mov
int
push
movsb
pushf
out
dec
dec
jg
lea
fnsave
add
in
jb
loope
sbb
bound
jbe
adc
bound
xor
ret
jne
in
ss
mov
into
bound
jecxz
ret
fistpl
mov
fbld
movsl
stos
mov
sbbb
pop
addr16
fnstenv
mov
into
jge
out
push
dec
fdivrs
stos
push
stos
fdivs
jg
mov
imul
fcom
jmp
push
rcr
icebp
mov
sub
fsubp
pop
jo
push
adc
cld
mov
jge
cmp
clc
dec
loopne
pushf
push
cmc
cmp
je
in
ret
fucom
xor
cmp
aaa
scas
add
jb
stc
xor
push
scas
adc
and
lret
cltd
inc
arpl
outsl
cmp
test
lock
lds
pop
mov
cmp
jmp
loope
dec
xor
jmp
dec
dec
test
pop
sub
iret
jge
sbb
cmpsl
push
push
cli
ret
xchg
insl
nop
xchg
mov
into
imul
imul
sti
xor
jmp
out
cmp
lods
gs
xor
mov
mov
jae
cwtl
dec
imul
or
mov
lock
les
aam
cmp
call
cmp
adc
cmp
daa
das
jp
imul
or
lods
push
push
push
xor
insl
cli
fdivl
dec
xor
xor
cs
and
hlt
cld
ds
je
mov
out
int3
xlat
stos
das
jne
movsb
nop
lret
dec
pop
shll
sbb
cmc
adc
mov
fisubrl
ja
sbb
jno
dec
pop
or
mov
push
sti
jae
gs
pop
dec
xchg
jmp
mov
sub
mov
add
xor
call
stc
repz
inc
and
and
pop
mov
fstl
pop
lods
dec
add
insb
or
mov
out
and
add
push
push
push
nop
sbb
xor
add
xchg
roll
std
inc
sub
mov
or
pusha
loopne
popf
test
ret
or
add
mov
icebp
loopne
dec
data16
insb
xor
aas
mov
or
into
mov
mov
adc
xor
xchg
call
sbb
pop
je
outsb
xor
mov
std
leave
aaa
aas
add
stos
sub
into
jge
leave
add
xor
mov
aas
ss
jns
jge
jno
popa
cmp
cmp
adc
cli
add
pop
pop
sbb
inc
adc
loop
xor
add
in
iret
mov
fs
jne
xor
inc
cmpsb
in
icebp
push
lds
xor
ss
into
xchg
mov
pop
mov
and
repz
rorl
mov
xchg
mov
mov
xchg
push
jbe
cmpsb
adc
push
jne
add
mov
sub
inc
mov
lock
pop
push
stos
cmp
lret
mov
xor
mull
jg
mov
cmp
inc
lret
jg
mov
xor
dec
jl
fsubrl
cwtl
lods
adc
in
inc
add
sahf
push
out
sar
cmp
repnz
das
das
pop
sub
mov
or
pop
cs
aam
pushf
andb
cmc
rclb
mov
mov
pop
pop
mov
inc
jle
push
sti
sbb
adcl
fucomip
mov
pop
movsb
stos
imul
into
sarb
int
test
mov
add
divl
xchg
nop
mov
xor
pop
lret
test
sub
out
out
cmp
mov
jp
imul
testl
sbb
mov
clc
scas
fwait
pop
push
dec
sbb
test
push
cmp
int3
or
pushf
sub
loop
faddp
mov
in
fucomip
or
dec
jns
jmp
mov
mov
hlt
cwtl
jl
cmp
cmpsl
das
stos
jmp
aad
addr16
sbb
test
dec
xorl
bound
pop
jp
movl
lret
fistl
dec
ja
or
mov
mov
lret
push
xchg
cmp
inc
mov
stos
popa
popa
clc
das
sarl
movsb
sub
inc
jmp
mov
or
mov
fdivs
inc
fldt
jmp
lret
out
jb
add
sbb
clc
repz
xor
xlat
jl
cs
cmp
push
subb
lcall
xchg
mov
add
mov
loopne
add
fneni(8087
and
jle
add
adcb
or
clc
cltd
out
fsubr
insl
sbb
mov
mov
and
cmp
mov
pop
scas
jo
arpl
rol
sar
cld
mov
cmp
mov
add
f2xm1
out
mov
mov
inc
insb
sti
ljmp
jo
adc
dec
xor
rcrb
inc
test
hlt
outsb
iret
nop
insb
insl
mov
test
sbb
cmp
inc
cmp
mulb
and
and
ret
pop
and
ds
cmpsb
jns
add
pop
and
jp
xchg
jmp
xor
leave
fmul
out
jne
inc
mov
insl
out
sub
push
push
and
sahf
test
xchg
gs
add
les
mov
xchg
loopne,pn
xchg
sub
out
sti
add
insl
push
cmp
jne
or
incb
adc
mov
cmp
or
lods
mov
sahf
les
adc
int3
test
push
cmpsl
pop
out
shll
or
jge
push
ljmp
or
mov
add
lret
movb
dec
pusha
std
sbb
or
stc
nop
dec
xchg
adc
xor
add
shll
aam
or
xor
shlb
ret
mov
cwtl
adc
aaa
jbe
andl
push
push
sti
fidivrl
outsb
lock
mov
ret
shlb
pop
ss
roll
mov
push
sti
xor
dec
insl
int
mov
inc
ljmp
das
btr
mov
rorb
or
shrl
mov
and
outsl
fadd
mov
out
shl
push
cmp
fdiv
ret
imul
push
daa
push
pop
pop
dec
mov
inc
push
in
xor
sbb
pop
dec
shrl
aas
shll
mov
adc
mov
lret
push
outsl
mov
or
call
cmc
mov
call
push
std
scas
pop
hlt
xchg
cltd
dec
mov
pop
jle
scas
push
fstpt
or
outsb
out
fcmovnu
xchg
aam
ja
aas
push
dec
std
mov
test
cmc
pop
jae
xchg
test
aaa
int
decl
pushf
lcall
add
stc
jne
je
lds
cmp
mov
sub
xor
rcrb
or
imul
inc
imul
out
xor
inc
xor
inc
shlb
xor
pop
xlat
mov
push
in
sub
inc
sub
cltd
idivl
fistpl
test
adc
mov
outsb
test
mov
add
or
in
pushf
in
out
and
ja
cmp
mov
enter
in
loop
jl
dec
sbb
loop
mov
push
es
xlat
bound
mov
outsl
outsl
or
xchg
jp
rolb
mov
or
lret
js
andl
pop
or
pop
xor
out
jmp
xchg
add
xor
inc
mov
shll
sahf
pop
mov
xchg
mov
adcb
mov
xchg
test
out
dec
and
push
pusha
or
ss
test
rcrb
movsb
and
aaa
in
mov
movsl
lret
mov
popf
push
adc
aaa
fmuls
xchg
jg
mov
lret
cmc
cmc
mov
mov
mov
and
jl
sub
mov
xchg
mov
aam
pop
aas
inc
adc
push
jmp
mov
imul
push
arpl
add
rcl
repz
sbbb
mov
pop
xchg
and
repnz
mov
aam
push
pop
push
shl
mov
inc
cmpsl
sub
lret
fcom
mov
jp
push
mov
hlt
add
mov
mov
loop
pop
sbb
ss
mov
inc
enter
adc
rolb
cmp
adc
test
mov
gs
inc
xchg
jns
cmpsb
pop
xlat
iret
clc
cmpsl
pop
fnstcw
into
mov
inc
mov
push
xchg
adc
orb
clc
pop
jge
or
cmc
or
stc
sbb
ja
clc
dec
ss
shl
mov
or
popf
bound
cwtl
adc
pop
add
popf
js
les
aam
xchg
orb
jo
pop
fmull
es
out
mov
inc
mov
repnz
xchg
sti
push
cmpsl
lcall
fcompl
jae
xchg
sahf
pop
jmp
cmp
lar
and
push
cmp
sti
popa
mov
ljmp
das
int3
repnz
xor
inc
lret
ret
das
push
jnp
jmp
jns
push
mov
and
lret
xor
lret
push
xor
popf
cmp
in
pop
push
dec
test
popf
mov
insb
les
das
popf
in
in
pop
xor
lds
mov
jo
pusha
lods
sub
add
pop
sti
cmp
notl
push
jecxz
mov
test
psubw
jmp
out
dec
dec
inc
pop
jg
sub
mov
jg
shll
leave
ja
push
test
loop
mov
sub
and
xlat
pop
cmp
stos
loope
adc
jb
in
mov
lret
pop
xchg
lock
ret
jp
adc
clc
sbb
cld
ja
sub
movsb
adc
adc
lea
mov
fldl2t
cwtl
fs
push
jp
jp
dec
aaa
xor
js
notb
push
adc
xchg
xor
testl
mov
out
xchg
pand
shrb
mov
sub
mov
jmp
or
aas
js
add
mov
cli
xor
sub
cld
inc
insl
outsl
movsb
add
insl
mov
js
out
andl
adc
and
call
cmp
cmovg
fwait
mov
jle
pusha
cwtl
or
call
cltd
aaa
xchg
mov
jae
mov
inc
imul
pop
inc
sete
dec
out
pushf
xorb
ljmp
std
dec
sti
cld
pop
popf
mov
lods
cmc
and
call
bound
jl
outsb
popf
orl
lds
inc
mov
mov
cs
xchg
out
push
hlt
ds
push
lods
sar
cmp
ret
jb
sti
mov
shll
or
jno
mov
xchg
adc
pop
sub
xchg
mov
gs
pushf
dec
fisubl
jge
push
xor
insl
fs
ficompl
clc
dec
stos
mov
repz
in
mov
je
scas
mov
int
pop
roll
dec
xchg
addb
fidivrs
insb
insl
cwtl
shll
dec
int3
inc
lcall
mov
daa
xlat
popf
rol
push
mov
sarl
mov
popf
cmp
leave
mov
jp
add
insl
ja
pop
mov
insb
aaa
rcrb
es
and
pop
push
pop
cmp
bound
into
loopew
dec
repnz
in
cmp
sub
sbb
test
in
push
jge
in
push
jmp
mov
cmp
xor
and
push
push
sub
or
sti
popa
xchg
dec
ljmp
addr16
xchg
sbb
adc
mov
outsb
sbb
fiadds
stos
rorl
cli
sub
mov
add
ror
mov
hlt
sub
jb
pop
mov
scas
mov
sub
add
pop
adc
loope
jno
out
inc
or
mov
pop
test
mov
push
pop
push
and
test
imul
inc
clc
sub
push
js
push
je
daa
sahf
loopew
add
notl
shl
ss
out
ret
xlat
adc
pop
mov
add
out
cmp
rclb
stos
in
mov
insl
sbbb
cs
stos
mov
int3
out
cmp
in
aad
lret
mov
lahf
jecxz
insb
jno
xchg
or
xchg
sbb
leave
inc
imul
imul
pop
enter
shlb
daa
mov
sbb
pusha
test
xchg
data16
add
shrl
sub
fs
or
adc
in
out
sub
das
pop
mov
minps
in
xchg
lcall
lea
add
test
sti
xchg
sbb
addl
inc
test
add
mov
inc
int
cmpsl
push
sarl
jns
xor
pop
daa
adc
xor
mov
jmp
insl
mov
aaa
xchg
addr16
stos
mov
scas
cmpsl
popa
mov
repnz
loopne
or
inc
mov
dec
pushl
pop
jb
in
inc
mov
adc
repz
xchg
enter
mov
outsb
mov
mov
xor
int
inc
leave
gs
inc
mov
stc
iret
or
cmpsl
pushf
stos
dec
enter
repz
add
cmc
cmpsl
add
insl
movsl
aad
jae
cmp
sbb
jg
mov
and
out
inc
loop
add
add
nop
rcll
add
inc
outsb
mov
adcb
out
addb
dec
push
aam
sbb
pop
push
insl
xor
sbb
mov
add
mov
out
pop
lahf
std
sub
into
outsb
cltd
shl
int3
out
rcrl
ds
pop
cltd
shlb
popf
xor
pop
cmp
cmp
dec
out
shl
fsub
loope
dec
mov
and
adc
cmp
std
dec
scas
mov
pusha
aaa
icebp
lea
mov
jo
xchg
js
mov
insl
lds
in
scas
and
jg
mov
insb
xrelease
rcr
mov
push
dec
adc
loop
fistl
push
lea
mov
mov
in
je
cmp
std
xchg
movsl
mov
stos
mov
fadds
mov
inc
or
push
bound
mov
lahf
inc
xchg
mov
lahf
loop
push
add
outsl
jno
rcrl
cwtl
iret
das
xor
mov
rcrl
and
xlat
cmp
cmp
out
scas
fstpt
arpl
negb
dec
xor
dec
sahf
jge
lret
out
xor
fstpt
pop
cmp
lds
in
xchg
out
cmpsb
cld
aam
stos
mov
stos
xor
loopne
mov
add
mov
loop
add
and
mov
bound
adc
out
test
imul
hlt
faddl
mov
pusha
iret
cmpsl
packsswb
das
ror
dec
aas
push
testb
mov
popf
lcall
xor
inc
adc
aad
test
fsubs
mov
loopne
testb
and
jecxz
outsl
fs
mov
mov
cld
xorb
mov
push
xchg
out
imul
addr16
fildll
in
or
dec
xor
out
clc
xor
add
iret
cld
add
jnp,pn
pop
jecxz
nop
and
mov
dec
loopne
sti
xchg
or
fs
int
sar
or
mov
into
push
fidivrs
or
fadds
push
jmp
push
mov
cmp
mov
call
and
subb
cltd
sti
out
pop
xchg
cmp
mov
or
mov
insb
adc
pushl
shrb
rcll
mov
xor
sbb
mov
in
das
movb
mov
mov
add
pop
cwtl
jle
stos
lds
xor
sarl
cmpsl
cli
pushf
jl
shrb
mov
cmp
pop
mov
adc
jp
int3
sub
scas
inc
test
test
mov
icebp
rcl
jp
stc
mov
lods
into
mov
xchg
loope
mov
arpl
js
sbb
adc
in
mov
dec
mov
or
push
rcrl
fnsave
mov
push
pop
sbb
sahf
fisubrl
push
sub
mov
imul
outsl
or
out
ljmp
outsb
aad
enter
in
lret
jnp
icebp
jge
das
add
aas
sbb
out
xor
testb
pop
into
inc
in
push
or
loope
leave
cld
push
and
shrl
mov
lret
notl
sub
mov
ja
ss
cltd
lds
insl
test
fdivs
pop
sarl
xor
xor
mov
mov
or
iret
fisttps
aaa
or
mov
adcb
pop
push
gs
aaa
cwtl
shll
push
mov
jl
push
mov
adc
adcb
mov
sub
xor
in
mov
mov
add
dec
xchg
scas
or
js
pop
imul
data16
dec
pop
add
movsl
xor
inc
jns
in
fwait
pop
cmpsb
movsl
arpl
pop
and
jecxz
loop
or
repnz
rcrb
dec
mov
enter
and
pop
inc
dec
mov
pop
fnstcw
jne
or
mov
loopne
jg
mov
sbb
orl
ss
fimull
sbb
mov
mov
into
mov
lret
adc
inc
adc
or
sub
add
movsb
imul
repz
jge
js
xor
adcl
pop
lret
cli
push
std
add
sub
jb
mov
arpl
test
lcall
jbe
dec
in
sbbb
push
decb
repz
and
lret
test
in
cmc
fcmovb
mov
ljmp
lds
mov
add
sbb
jns
mov
shl
mov
loop
loopne
test
jp
pop
cs
pop
xor
mov
push
test
shlb
push
subl
data16
pop
in
mov
add
pop
lock
test
rclb
sub
mov
mov
cmc
jp
push
xchg
out
call
mov
cmpb
ds
testb
jl
sub
and
fstps
pop
push
cmp
cli
mov
jno
lea
mov
stos
add
repz
dec
outsl
in
mov
mov
lock
xchg
cmp
popf
push
sahf
movsl
mov
or
loope
rorl
stos
sub
fistpll
icebp
pop
je
pushf
cmp
stc
or
jo
sub
shrl
and
outsl
sarb
jle
mov
in
add
movsb
or
into
pop
adc
loope
ja
loop
lock
repnz
push
inc
pop
xor
lret
sbb
scas
loopne
dec
repz
pop
push
rcr
ljmp
divl
mov
fwait
xchg
test
pop
dec
mov
jne
push
das
push
arpl
outsl
cmpsb
jle
pop
iret
ret
mov
popa
cmpsb
xor
sahf
stos
adc
sub
inc
push
push
pop
jno
mov
imul
cmp
into
and
faddp
test
dec
sub
sub
js
mov
xchg
js
push
pop
mov
push
dec
ljmp
and
jl
add
mov
inc
popf
test
dec
push
inc
mov
pop
ret
sarl
lods
and
sbb
das
bswap
scas
in
xor
sub
push
aam
xchg
mov
out
jns
stos
and
out
int
jo
mov
cmp
xchg
sti
add
inc
inc
test
mov
jp
mov
cmpsl
cmp
adc
popf
cmpsb
movsb
in
mov
mov
fisubrl
into
sbb
movsb
add
sbbb
addr16
mov
popa
sbb
cs
lock
lods
mov
xchg
lods
daa
jge,pn
mov
push
arpl
out
adc
xchg
push
pop
loopne
sbb
movsb
add
cltd
fmuls
lea
cmp
orb
flds
mov
push
sub
jmp
jl
sbb
call
cmp
cmp
add
cmp
ret
jp
fdiv
sbbl
adc
mov
rol
xorl
add
fdivs
popa
jg
test
jmp
jle
sbb
xor
xor
in
and
fdivrp
xchg
sarb
insb
add
movsl
inc
and
rorl
dec
jno
mov
sbb
mov
or
jmp
inc
or
fs
mov
mov
pop
sub
shrb
es
dec
and
cmpsb
lcall
sbb
out
dec
mov
push
loop
push
push
cltd
jno
sub
ljmp
sahf
cmp
mov
cmc
or
sbb
out
out
lret
pop
jb
dec
idiv
lret
sbb
dec
jle
add
mov
lcall
loop
dec
sub
addb
smsw
mov
mov
sbb
movsb
lds
push
add
addr16
mov
shlb
roll
popa
jp
inc
jno
mov
xor
adc
jmp
xor
mov
sbb
test
lahf
xchg
xor
in
jbe
gs
pop
dec
insb
test
inc
push
or
add
aad
xchg
fwait
lock
fisttps
jno
cmpsb
sbb
ds
lea
js
std
xor
cld
fdivs
sbb
sub
sti
lret
mov
cli
push
aad
repz
test
mov
outsb
call
jmp
mov
dec
xchg
insb
stc
xchg
push
mov
cmpsl
div
inc
cmp
sbb
mov
pop
int
int3
jmp
mov
dec
push
mov
adc
arpl
cmp
jmp
cwtl
lods
loope
roll
cmp
pop
repnz
pushf
push
call
test
jno
movsb
sub
lea
push
adc
cli
push
gs
adc
movsl
lods
data16
adc
int
xchg
pop
jg
scas
adc
leave
sub
xchg
add
jge
and
inc
in
popf
mov
call
idivb
sbb
imul
xor
mov
das
sahf
pop
insl
mov
clc
shl
jecxz
cmp
or
add
rorb
stc
mov
pop
test
push
pushf
push
mov
test
iret
mov
pop
push
xor
scas
xor
push
lock
xchg
pop
jne
and
lahf
and
cmp
cmp
jl
popf
ja,pt
pause
xlat
scas
xor
pop
xchg
and
leave
jmp
sbb
bound
push
mov
mov
lret
in
dec
xchg
insl
adc
pop
add
dec
jmp
dec
adc
dec
xchg
aam
shlb
xor
mov
cwtl
decl
lahf
mov
push
pop
testb
lcall
stc
fidivl
or
aam
clc
loop
jae
or
xorb
arpl
mov
cmp
and
pusha
push
jb
or
fildl
pushf
inc
fsubs
adc
bound
dec
adc
fsubs
out
loope
bound
xor
out
stc
call
sbb
adc
sbb
test
test
ret
cmp
std
inc
or
ret
and
pop
cmp
cmc
lods
jae
mov
int3
sti
and
xchg
lock
mov
hlt
push
cmp
les
jne
insl
lahf
push
and
std
std
faddl
shll
push
mov
pop
test
add
mov
pop
imul
call
cld
lds
aaa
stos
jno
lds
mov
fwait
jb
sbb
jg
cmp
scas
xchg
push
popf
clc
mov
push
aam
mov
clc
mov
movzbl
dec
insl
dec
hlt
mov
mov
aaa
push
push
fiaddl
inc
clc
gs
inc
fnstcw
xchg
test
sbb
add
jg
pushf
and
stos
add
popf
fimuls
pop
lods
dec
fiadds
cmp
adc
xor
push
mov
ret
jmp
shr
ds
cmp
jnp
cmp
loop
push
mov
mov
inc
mov
inc
insl
movsl
jp
pushf
xor
mov
push
inc
jbe
sub
xor
stos
xchg
xchg
or
add
mov
pop
mov
push
mov
inc
cmp
das
ds
mov
cwtl
inc
popf
fsubl
or
xor
xchg
repz
pop
dec
push
push
fs
ret
mov
test
dec
push
cmpsl
out
ss
nop
rcll
add
sub
mov
stos
int
dec
pushf
fsubs
pop
add
cld
and
fsubr
popa
push
cmpsb
aad
or
stc
jnp
loope
sub
cmpl
loopne
sub
loopne
stc
ret
xchg
add
sahf
cmc
shr
xchg
add
ficompl
push
ljmp
and
xor
lock
ja
rcrl
adc
xchg
or
mov
dec
or
pushf
sbb
jne
aas
mov
push
data16
push
leave
sahf
dec
mov
sub
lea
mov
xor
scas
into
dec
aaa
jmp
mov
push
xor
and
iret
popf
call
test
ljmp
insl
pop
mov
inc
cmpsl
cmp
in
aaa
xchg
fnstsw
or
int3
shrb
mov
ljmp
mov
xor
adc
jle
fmuls
dec
inc
ret
sub
lret
add
leave
mov
and
cmp
push
cwtl
xchg
jl
jbe
bound
movsl
add
lret
mov
cmp
jge
push
inc
jg
test
pop
mov
icebp
es
mov
pop
divl
cltd
repz
pop
outsb
push
leave
xor
xchg
into
rorl
inc
cmp
push
sbb
pop
xor
iret
xchg
movsl
test
mov
xchg
mov
lahf
repnz
add
or
dec
dec
imul
jmp
pop
and
push
adc
inc
add
xchg
adc
pop
fdivrl
pop
mov
ds
xchg
div
mov
je
sub
push
fcoml
movsb
aaa
loop
push
loope
pushw
xchg
ret
and
push
lds
iret
cmp
inc
iret
in
sahf
scas
sarb
jae
daa
add
dec
jmp
sub
popa
xchg
mov
jns
jg
cmp
xchg
pop
sub
pop
repnz
daa
iret
adc
pop
add
and
das
mov
xchg
test
mov
enter
mov
cmpsb
ss
imul
iret
cmpsb
jbe
push
pusha
inc
into
cmpsb
out
push
cmp
frstor
push
or
pop
sbb
or
inc
loope
mov
fiadds
stos
xor
iret
jmp
xor
xor
aam
imul
xor
xchg
fstl
inc
nop
xchg
inc
out
jne
loope
daa
cmpsl
mov
sub
push
bound
xlat
pop
dec
out
lret
jnp
xor
pop
cmp
sub
imul
jl
dec
sarl
repz
scas
sbb
ja
movsl
push
jbe
cmp
jne
xchg
pusha
aad
push
mov
jp
push
or
push
xor
mov
sbb
push
insb
inc
push
addr16
cmpsb
sbb
mov
mov
pop
jns
push
push
xchg
adc
mov
jl
xor
jb
sub
jmp
cmp
and
mov
xchg
movsl
roll
push
and
shll
dec
fwait
xor
xlat
jl
gs
push
xchg
aad
rcl
xor
and
xchg
or
faddl
iret
outsb
dec
sub
arpl
or
cli
or
nopl
shll
call
lods
mov
jmp
mov
hlt
repnz
mov
inc
imul
sub
dec
xor
fistps
into
sub
mov
mov
fsubs
aas
push
pop
ret
and
add
dec
lock
xor
imul
jmp
jno
int3
inc
cmpl
je
fimull
gs
sbb
int
jbe
rorl
push
dec
and
test
pop
sbbb
mov
xor
mov
loop
sti
sub
pop
lds
add
and
ljmp
mov
faddp
pop
clc
cld
pop
sub
bound
daa
subb
and
enter
into
cld
stc
inc
sti
dec
scas
inc
push
jae
add
push
pop
jae
inc
jg
jle
jl
dec
xor
mov
frstor
jnp
jle
fbld
xchg
and
mov
dec
or
adc
jnp
mov
dec
ja
mov
inc
jp
not
icebp
push
mov
mov
jnp
sub
or
add
xor
out
popf
or
xor
sub
mov
xchg
sahf
cli
xchg
sub
adc
dec
xlat
lret
pop
and
add
fisubrs
shll
jle
pop
sbb
jne
mov
mov
mov
mov
mov
dec
frstor
fidivrs
ljmp
push
inc
andl
cmp
xor
aas
xchg
sahf
fisubl
dec
aas
iret
sub
ror
mov
test
add
inc
sub
sbb
into
enter
outsl
mov
repz
jae
or
dec
call
jne
sbb
fnsave
dec
movsl
or
cmp
adc
mov
sbb
or
fsubrp
mov
fsts
sub
js,pt
cmc
mov
cmp
lods
cmp
mov
push
sahf
call
push
cwtl
jne
jle
jp
shlb
add
and
push
jo
dec
pushl
cmp
mov
xchg
cmp
popa
ljmp
add
scas
xchg
loope
mov
or
stos
xorl
lods
out
mov
mov
xchg
cs
insl
lret
mov
aaa
sub
mov
cld
jne
cmpsl
les
pop
lock
sub
das
out
pusha
mov
imul
idiv
or
push
ss
mov
pop
or
test
or
in
mov
xchg
imul
mov
or
ja
negl
negb
inc
mov
orb
fsubs
lea
aam
push
imul
into
fucom
leave
addr16
aam
mov
addr16
mov
push
push
in
mov
cmp
data16
js
or
sub
mov
movsb
mov
in
mov
push
std
adc
and
or
cmc
loope
pop
test
stos
int
nop
sbb
ret
xchg
stos
stc
xchg
pop
mov
mov
jmp
dec
scas
sub
mov
push
andl
xor
stc
cwtl
and
dec
push
mov
daa
and
lcall
rcll
and
fs
push
mov
scas
cltd
imul
mov
jne
leave
scas
out
movsb
icebp
pop
cltd
mov
pop
lods
mov
pop
inc
and
or
out
mov
pop
fstl
xor
push
push
iret
scas
inc
cmpb
push
movsb
frstor
fisttpll
mov
movsb
clc
sbb
add
cs
fdivr
xchg
iret
inc
sbb
mull
push
fucomip
inc
mov
jg
lods
leave
mov
mov
lods
cmc
sbb
iret
movsb
fnstenv
inc
outsb
faddl
lcall
sbb
pushf
test
add
in
xlat
push
inc
sarl
arpl
cmp
mov
in
and
dec
fisubrs
jno
ljmp
sub
pop
loop
pop
push
pop
lret
stos
sub
int3
movsb
scas
test
outsb
cmpl
fwait
lahf
pop
add
sub
pushf
xor
sub
xlat
mov
xchg
test
cmp
aaa
int
jne
out
inc
xchg
iret
mov
xchg
sub
fcmovne
scas
mov
pop
cmpsb
out
sti
test
mov
dec
pop
lock
mov
adc
fildl
clc
xor
cmp
mov
lcall
outsb
cmpb
lret
lods
pushf
push
mov
push
xchg
jne
scas
cltd
imul
lds
jge
fistps
into
imul
ja
jb
les
imulb
or
stos
fucom
inc
add
mov
ficoms
jg
or
xor
scas
jb
jge
pshufw
negl
mov
inc
pop
pop
inc
fsubl
or
jbe
sbb
mov
pop
inc
or
ljmp
sti
jp
push
outsl
rorb
push
ljmp
lret
sub
mov
popa
and
lahf
mov
push
jo
rclb
daa
cmp
push
mov
lcall
rcll
call
pop
mov
add
jge
pop
push
push
movl
jge
or
or
sbb
xorl
jle
es
aaa
mov
xchg
imul
dec
xchg
add
push
adc
sbb
adc
push
xchg
scas
es
je
xor
imul
push
stc
fcomps
fisubrs
cmp
cmp
push
mov
add
push
pop
xchg
xchg
or
fcomi
rol
fisttps
sbb
inc
in
mov
mov
fsubl
inc
test
clc
push
repnz
pop
fsts
mov
or
sbb
roll
inc
or
fiaddl
or
mov
inc
imul
cmp
mov
pop
pop
xor
pop
jle
sub
xor
push
lock
mov
adc
loop
mov
gs
int
clc
test
jl
ficoms
mov
rcrl
insb
mov
cmp
lea
push
jp
leave
push
cmp
shrl
lcall
jge
xor
imul
jo
movsl
jg
dec
or
stos
rorl
push
es
adc
sbb
mov
mov
in
add
fidivs
mov
jge
cmpsl
xor
ret
jnp
mov
leave
jbe
sub
mov
pop
adcl
jns
icebp
cmc
add
fcompl
stos
mov
enter
inc
fisubl
xor
and
mov
fiadds
jns
ss
imul
out
cmp
jle
sar
add
jnp
add
roll
dec
xor
cli
jae
xchg
or
or
push
dec
cmpsl
mov
mov
jnp
jb
addr16
cmpl
loop
mul
and
cmp
popa
js
sub
xor
push
xchg
and
mov
dec
xchg
imul
dec
mov
dec
jp
pop
lock
frstor
xchg
testb
mov
inc
cmpb
fstpt
les
cmpb
sbb
xchg
sub
or
jnp
mov
ret
dec
out
pop
mov
xchg
out
jb
movl
lock
or
xor
inc
sahf
outsl
cli
lahf
dec
push
fisubl
push
adc
sti
mov
mov
push
xabort
js
adc
sub
sub
push
bound
ljmp
fcompl
cld
sub
xchg
ret
bound
pop
inc
lock
cmpsl
push
js
xor
jle
ja
sub
loopne
xchg
imul
and
jge
pop
imul
inc
mov
je
mov
mov
hlt
stos
cmp
inc
outsb
push
roll
mov
jne
sti
repz
pusha
push
aaa
mov
icebp
cld
arpl
repnz
mov
sbb
add
sub
xchg
sbb
int3
sbb
lods
inc
loopne
adc
dec
cmp
xchg
cltd
int
jb
cs
mov
jne
cs
xchg
sub
out
jae
xor
mov
xor
cmp
dec
daa
les
jno,pt
mov
ficoms
pop
fistpll
ds
xor
fldln2
jmp
aam
sub
lds
dec
in
push
pop
pusha
xchg
ds
mov
sbb
cmc
sbb
hlt
pushf
shrl
insb
cmp
int3
call
scas
adc
test
adc
call
xchg
rcrl
cmp
jle
aad
push
sbb
sbb
mov
mov
mov
inc
jbe
cmp
es
test
xchg
pop
xchg
cltd
loopne
push
loope
pushf
not
into
lds
sub
mov
rclb
fidivs
inc
push
mov
sub
cmp
test
push
pop
pop
insl
fiadds
or
test
sub
sbb
iret
cs
mov
push
sub
sbb
xchg
adc
inc
xor
push
dec
lcall
sbb
lods
lds
pop
xlat
adc
scas
enter
sub
adcb
std
fists
fidivs
lods
scas
sbb
cmp
sbb
mov
cmpsb
lret
sbb
push
fsubp
adc
fstl
in
jp
in
pop
xorb
dec
xchg
pop
imul
aam
xor
out
mov
dec
lock
push
scas
aam
popa
lods
icebp
lea
out
cmpsb
xchg
fsubs
adc
dec
js
jp
int3
popf
sbb
mov
mov
xor
sub
test
insb
gs
les
jge,pn
jmp
test
xchg
add
sub
das
xchg
jno
mov
cmp
mov
dec
stos
ret
lds
int3
mov
jne
add
int3
rol
iret
push
mov
lret
insb
jb
lcall
push
popa
pop
mov
mov
xchg
testb
out
mov
dec
cmc
adc
stos
pop
push
ds
mov
fwait
mov
pusha
mov
jecxz
hlt
andl
xor
lods
fcomi
inc
cmc
xchg
pop
mov
xor
or
lea
jno
mov
pop
sbb
lock
mov
jns
cmp
push
aaa
inc
aad
xor
leave
shrb
adcb
add
mov
cmpl
xchg
pop
lret
scas
sbb
xchg
popa
mov
movsl
pop
mov
pop
pop
jns
test
daa
jle
mov
xor
pop
mov
dec
mov
jge
insb
adc
pop
or
or
adc
xchg
stc
es
cld
pop
stos
and
mov
mov
repz
sub
sbb
fists
neg
pop
out
adc
push
or
in
rcr
jno
ljmp
mov
sti
aad
shlb
in
test
cmp
jecxz
push
cli
dec
pusha
stos
jo
and
dec
mov
shrl
arpl
cmp
cmpsl
pop
mov
stos
cs
insl
inc
mov
push
mov
in
jecxz
jns
mov
sub
or
inc
aad
cli
aaa
and
data16
repnz
fimull
outsl
jno
movsb
or
fldl
int
in
cltd
sbb
les
loop
dec
sub
adc
daa
out
cltd
dec
lret
out
lret
mov
xor
mov
sub
cltd
or
add
adc
aas
inc
mov
mov
ljmp
mov
jb
iret
outsb
xor
adc
pop
inc
daa
jg
xor
sub
cmp
fwait
dec
out
adc
fisubrs
movsl
pop
xor
jge
hlt
mov
ljmp
xor
jl
mov
push
xchg
jg
xchg
and
cmp
je
push
cmp
lret
cmc
popf
cmc
inc
imul
cmp
and
and
xor
jbe
sti
jmp
mov
dec
xchg
loop
out
push
les
mov
jne
jns
mov
and
pop
ds
ss
sub
rolb
cli
insb
stc
mov
js
jae
fiaddl
aas
in
inc
popf
clc
mov
lret
lcall
inc
xor
repz
hlt
outsb
mov
out
rcrb
div
sti
inc
pop
inc
mov
mov
arpl
add
dec
add
dec
xor
call
mov
call
jns
sbb
xlat
xor
pop
add
push
in
jg
mov
push
shrd
in
loopne
stos
push
imul
cmp
test
test
fsubrs
cmpsb
fidivrl
cmp
or
cltd
and
inc
imul
cmp
or
sub
loop
sub
lahf
ljmp
jl
mov
ret
or
into
andl
inc
repnz
sub
sbb
outsl
les
jp
jnp
mov
popf
adc
jecxz
cmpsb
sbb
mov
jg
les
cmp
mov
xchg
pop
in
cmpsb
and
movb
in
dec
mov
ret
jmp
or
cmp
jg
aam
in
shlb
adc
pusha
out
or
shl
aaa
cmc
lahf
adc
movsb
mov
push
out
add
push
call
stos
idivb
or
cli
pop
cmp
or
add
sub
mov
xor
xorl
and
test
stos
rcll
mov
push
decb
inc
int3
hlt
and
jbe
push
fcompl
push
mov
xorb
lea
out
xchg
daa
ja
add
dec
jl
fucomip
push
scas
and
pop
and
add
ja
mov
dec
jo
es
and
ja
and
es
out
sbb
in
aas
cmp
sub
arpl
sbb
call
mov
ja
in
sub
stc
mov
or
or
fdivrl
cmp
inc
and
push
xchg
dec
mov
lea
jecxz
mov
jmp
adc
je
xor
lods
popa
sbb
cwtl
shrl
into
add
nop
out
mov
mov
sahf
pop
fsubl
mov
cmpb
jae
fwait
cmpsl
subb
or
out
dec
mov
and
cli
push
scas
repz
pop
mov
shll
mov
into
outsb
daa
daa
pushf
outsl
adc
or
push
mov
or
call
test
loop
cld
xor
fldl
lea
dec
fwait
adc
cmpsl
lret
sub
sbb
fnstcw
sub
push
in
sahf
xchg
fistl
js
push
lcall
jecxz
jle
hlt
push
sub
dec
inc
and
cmp
ret
test
pop
jmp
mov
adc
rcl
rcr
lock
pop
outsb
cmpsl
cmc
subl
sbb
jecxz
push
pop
inc
jecxz
add
and
and
je
dec
fstpl
in
inc
jecxz
ds
push
sti
dec
jg
xor
popf
ja
data16
incl
mov
and
ret
aaa
mov
outsl
leave
and
out
adc
shrl
dec
stos
inc
sysenter
pop
das
stos
inc
insb
sbbb
mov
mov
lds
out
je
mov
dec
jb
decb
pop
jl
out
or
sbb
aas
repz
dec
movsb
dec
std
clc
and
mov
inc
mov
lock
push
in
dec
inc
std
sbb
xor
mov
push
pop
cmp
mov
push
mov
shlb
stos
fisttps
iret
inc
xor
mov
lods
lcall
arpl
sbb
mov
imul
fwait
in
fstps
pop
scas
mov
dec
int
push
cmp
jmp
push
lea
jae
mov
movl
in
sub
outsl
mov
xchg
sub
cmp
lods
inc
movsl
add
fldenv
mov
adc
dec
out
imul
in
jp
xorb
xchg
call
xor
daa
or
add
inc
inc
mov
pop
enter
and
mov
sbb
stos
scas
ret
mov
pop
jnp
sbb
xor
scas
xchg
push
or
imul
or
shr
pushl
fistpll
sbb
bound
or
pop
insb
movsl
negl
push
xchg
arpl
xchg
jge
mov
mov
jmp
aad
shl
sbb
mov
das
ret
cmp
and
xor
mov
mov
daa
jp
mov
pushf
add
inc
and
movsl
cmp
adc
sbb
gs
jle
mov
adc
das
or
out
sub
scas
sbb
push
and
test
cmp
sub
divl
cmpsl
mov
cmp
pop
add
lods
aaa
jle
fs
int3
cmp
xlat
jle
mov
pop
jle
dec
and
sbbl
jecxz
jl
add
pop
inc
push
es
pop
mov
les
ficomps
jge
js
pop
std
push
outsb
je
xor
jge
insb
dec
xor
mov
cmpsb
je
arpl
dec
aaa
call
movsl
lret
mov
pop
pop
into
fs
push
jl
mov
fadds
cmc
fs
mov
and
dec
push
lcall
rorb
popf
andb
std
xor
repz
cmp
cmp
or
sub
mov
lcall
rcrb
mov
lcall
mov
rcl
inc
std
cwtl
mov
mov
mov
movsl
std
or
jnp
xchg
pop
les
mov
les
or
shrb
jae
cli
adc
mov
xchg
in
scas
scas
sbb
pop
test
mov
imul
hlt
in
clc
in
sub
xchg
aad
outsl
scas
dec
pusha
pop
push
dec
cmpsb
mov
xor
je
je
arpl
popf
test
pop
mov
outsb
jp
sub
sbb
or
cmp
mov
mov
mov
ljmp
mov
cmp
pusha
das
popa
jne
and
cmp
rclb
xchg
data16
stos
clc
inc
scas
andl
into
push
add
xchg
fldln2
jle
rcll
scas
xor
cld
and
out
mov
pop
sbb
fucomp
mov
frstor
inc
es
je
push
mov
push
es
jno
dec
repz
mov
and
out
fwait
in
jecxz
inc
cmp
ret
jb
ljmp
mov
popa
mov
mov
dec
imul
jns
js
jo
pop
and
addr16
xor
cmp
cltd
loopne
cmc
and
push
mov
adc
rcrl
cmp
lahf
cmp
push
pop
add
sbb
lock
inc
and
and
ficomps
mov
mov
pushf
cli
daa
cs
call
push
dec
inc
cmp
mov
jns
mov
rolb
jle
clc
cli
arpl
mov
mov
pusha
pop
test
xchg
rclb
dec
sub
mov
sbb
pushl
mov
out
stc
loope
add
js
popf
mov
sbb
sbb
jnp
jne
sahf
cmp
sahf
and
adc
pop
or
lahf
and
cmp
pop
mov
ficoms
daa
cld
mov
xchg
sub
cmp
aas
stos
ret
inc
add
in
mov
cmp
pop
out
movsl
inc
inc
cmp
mov
or
mov
sahf
popa
xorb
addr16
and
jge
pop
and
dec
sbb
pop
dec
and
orb
jno
inc
in
pop
outsb
sbb
xchg
addb
inc
adc
cmp
mov
fsubr
scas
push
arpl
sahf
jmp
aas
jno
mov
arpl
sbb
push
in
lds
adc
mov
sbb
push
mov
int
mov
xchg
jo
mov
and
push
jns
push
aaa
cmpsb
inc
cwtl
cmpsb
jae
daa
mov
cmp
imul
out
mov
lahf
ljmp
into
push
shlb
addb
rol
add
or
lods
imulb
inc
out
stos
lock
pop
mov
xchg
mov
imul
pop
pop
stos
pop
push
xchg
icebp
cmp
das
jo
aaa
lret
cmp
mov
fdiv
xchg
add
enter
jno
lret
xlat
add
popa
mov
pop
jae
pop
fdivp
xor
cltd
dec
inc
int
push
add
add
cmp
add
fnstsw
dec
popa
je
imul
pop
or
mov
inc
sbb
arpl
inc
bound
xor
xor
cli
jb
loope
mov
push
repnz
and
iret
cmp
int3
movsl
negl
xlat
pop
loope
enter
mov
movsb
lods
pop
or
adc
lret
icebp
add
mov
mov
movsl
jo
cltd
stos
lods
adc
inc
mov
push
ljmp
scas
and
fcoml
sub
jno
and
pop
dec
push
pop
add
daa
jnp
mov
fcmovu
fnsave
jns
ds
lret
and
leave
cmc
cmpsb
imul
sub
jne
and
pushf
push
loope
jae
fsubr
push
cmc
push
dec
fnstsw
shll
pusha
sub
not
aam
pop
jbe
pop
mov
sub
inc
add
cmp
mov
lock
push
fcompl
pop
popf
xchg
or
lea
test
xchg
ljmp
sbb
adc
cli
mov
out
push
push
sbb
aas
aam
xchg
je
ja
repnz
and
shlb
cmp
jmp
fs
push
mov
cmpsb
pushf
addb
test
jae
add
dec
xchg
xorb
xor
gs
arpl
xchg
dec
jmp
mov
call
cmp
mov
sub
and
inc
sub
push
xchg
scas
and
push
push
mov
xchg
mov
pop
js
mov
push
stc
jp
out
adc
mull
push
stc
inc
dec
add
test
push
cmpsb
stc
jmp
ljmp
dec
je
jg
test
mov
insl
and
stos
sub
dec
xor
enter
into
or
insl
push
xchg
xlat
adc
les
jmp
movsb
dec
rcrl
aas
inc
push
jg
call
filds
lret
test
jne
bound
jp
and
in
lods
imul
dec
mov
stc
cmp
ss
cmpb
pop
jo
out
dec
gs
fsubrl
jno
or
xchg
sub
cli
outsb
xchg
ret
mov
bound
xchg
ret
data16
fcomps
shlb
xor
ret
add
pop
je
inc
or
add
mov
test
inc
cmpl
sub
push
rclb
ds
movsb
push
push
xorl
adc
dec
mov
push
push
pop
xor
xor
push
inc
jns
dec
jp
mov
lds
xorb
sbb
hlt
pushf
push
test
jl
shrl
jmp
gs
cmc
sbb
iret
roll
cmp
and
mov
dec
push
cmp
sahf
icebp
popf
and
inc
add
icebp
pop
jle
jae
jns
hlt
push
jle
pop
xchg
adc
pop
call
xchg
inc
movsb
lret
shll
out
lods
sub
fwait
js
ja
int3
arpl
inc
mov
in
out
mov
std
fs
fsubs
mov
pop
les
loopne
test
loop
mov
imul
pop
das
adc
and
fwait
pop
out
xor
pop
fucomp
xor
jb
mov
outsb
int3
mov
in
jp
fidivl
fisttpll
inc
lret
out
insl
mov
pop
and
xor
mov
sbb
cli
ficomps
neg
push
mov
jb
xchg
lcall
push
pop
xor
pop
fsubr
add
sarl
inc
imul
stos
outsl
cld
cwtl
pop
add
aas
mov
sbb
and
lcall
cmpsl
dec
jmp
mov
jbe
out
cwtl
in
jl
pop
push
scas
mov
js
ret
and
sub
lret
dec
shrb
xor
leave
push
cmpsb
nop
test
repz
sar
cs
negb
inc
and
mov
pushf
mov
in
push
or
loop
or
sbbl
sub
mov
jne
mov
leave
aas
orb
mov
mov
pop
subb
mov
mov
xchg
sub
lcall
ja
inc
test
pop
cmp
sbb
cmp
sbb
icebp
push
jg
imul
lock
aad
sbb
inc
and
mov
jg
jbe
pop
jle
jnp
rcrb
in
push
inc
fstps
inc
dec
into
push
mov
add
lods
add
enter
test
arpl
cmp
mov
xchg
cmp
or
out
outsb
dec
add
dec
add
xor
mov
sar
push
mov
push
out
add
xchg
aad
iret
jo
mov
mov
loop
mov
rorb
imul
xchg
shl
call
sbb
adc
or
leave
sbb
test
roll
push
loope
bound
xor
jecxz
lods
das
imul
sbb
pop
push
pop
movsl
mov
mov
adc
leave
adc
outsb
lret
outsb
inc
xchg
xor
lret
pop
xchg
les
call
push
stos
les
mov
mov
sub
iret
dec
jb
xor
sbb
clc
fs
sub
into
cmp
scas
inc
pushf
or
pop
cmc
loope
adc
push
xchg
ljmp
fcoms
jb
mov
xchg
mov
repnz
mov
push
cmp
pop
mov
jnp
xor
int3
ljmp
jns
add
ljmp
inc
jge
push
jmp
fnsave
inc
pop
xchg
add
push
sahf
stos
addr16
bound
scas
shr
fwait
mov
bound
pop
and
test
rcrl
pushf
inc
sbb
shr
sbb
adc
pusha
icebp
shlb
cmp
test
inc
pop
inc
mov
pop
cs
sbb
ffreep
fmuls
sub
ss
jmp
ficoms
add
icebp
sbb
cmp
out
leave
repnz
adc
or
call
mov
out
addb
jmp
nop
add
testb
jecxz
sarl
addl
xchg
mov
in
bound
cmpsl
push
xorb
or
ds
insl
hlt
les
and
lahf
cmpsl
pop
data16
xchg
push
jnp
mov
push
insl
ljmp
call
mov
add
sub
int
push
dec
std
jne
int3
ds
add
inc
mov
sbb
sbb
push
push
icebp
insl
jg
lahf
sub
stos
xor
dec
enter
mov
cmp
movb
mov
mov
push
loop
cmpsb
scas
enter
mov
mov
xchg
pop
int3
jae
cmp
nop
pop
fiaddl
xor
xchg
mov
outsb
sub
jb
sti
sti
cmpsl
ret
icebp
dec
enter
aas
cmp
sub
mov
outsb
insb
lds
mov
mov
mov
clc
fwait
add
add
mov
and
inc
lods
xchg
gs
movsl
and
sub
fimull
push
stos
movsb
push
lds
and
inc
push
inc
xchg
stos
fldt
movsb
inc
sub
pop
mov
add
xchg
cmp
xchg
and
stos
loop
mov
xchg
shr
imul
cli
out
iret
cli
xchg
pop
pushw
andb
xor
xlat
ss
imul
mov
sbb
sbb
lcall
jge
push
loope
daa
sbb
and
repnz
outsl
push
inc
mov
jmp
mov
int
sti
sarb
dec
mov
scas
out
xchg
jo
ret
arpl
loope
iret
sbb
sub
sbb
ret
mov
dec
sub
dec
sub
stc
and
mov
jl
popf
push
fwait
aam
gs
incl
jge
xchg
popf
adcl
hlt
jp
imul
fsubrl
cmp
jo
jns
mov
stos
bnd
clc
imul
fiaddl
and
adc
outsl
or
inc
aaa
fbstp
fisubrl
std
insb
dec
inc
cmp
xchg
mov
popf
inc
cmp
std
fs
aas
sahf
daa
mov
fiaddl
sbb
mov
xchg
mov
mov
cmc
and
dec
dec
gs
push
bswap
sbb
and
cmpl
jae
loopne
icebp
lods
jge
and
xor
mov
xchg
xchg
hlt
push
lahf
xchg
ja
loopne
push
sbb
dec
jg
in
loop
lock
pop
das
aas
movsl
dec
dec
cmp
cwtl
xchg
xchg
movsl
pushl
stc
iret
bnd
mov
ljmp
scas
mov
adc
mov
arpl
cld
mov
lea
xor
xchg
stc
lock
imul
xchg
pop
icebp
inc
orb
mov
outsb
fstps
or
mov
pop
push
xlat
push
mov
je
hlt
mov
scas
lret
scas
out
testl
scas
imul
xchg
fiadds
outsb
xchg
pop
push
int
out
test
add
jecxz
into
jg
or
mov
or
imul
mov
dec
lods
add
jne
inc
cmp
fwait
lds
clc
push
in
repnz
jmp
cwtl
jmp
gs
or
out
mov
popa
jb
fistpl
fidivl
sub
xchg
mov
dec
sti
ret
and
inc
rcrb
jecxz
bound
mov
test
fsubp
mov
xor
push
mov
xchg
movsl
or
lods
enter
mov
stos
fldcw
xlat
push
sbb
sbb
push
push
lods
nop
jb
aas
std
add
jg
fsubr
mov
dec
push
out
fbstp
cmc
repnz
mov
xchg
sbb
out
aas
mov
mov
out
sbb
adc
sbb
fwait
cmpsb
sbb
xchg
push
dec
xchg
fs
push
sar
dec
test
cld
outsl
daa
lods
xor
stos
mov
imul
push
pop
je
inc
cmpsl
stc
popf
aam
incb
mov
sahf
jae
or
filds
in
lret
pop
dec
aaa
or
cmpsb
sti
mov
xor
ja
idivb
jmp
ja
mov
cmc
mov
and
adc
ficoms
sbb
fnstcw
fst
out
pop
mov
pop
ss
jbe
mov
push
lods
cmpsl
pop
decb
scas
repnz
cli
pop
retw
sub
fwait
popf
ljmp
cli
daa
pop
pop
push
es
mov
push
mov
sub
gs
xchg
insb
dec
cld
test
dec
gs
push
in
mov
lcall
push
aad
cltd
insl
dec
sub
sub
popf
and
pop
cmc
adc
in
movsl
icebp
loop
dec
cmp
and
push
aad
sub
mov
xchg
test
iret
pop
mov
or
test
repnz
xor
push
imull
mov
es
enter
cmp
pop
les
pop
inc
inc
inc
jmp
incl
mov
out
mov
vdivss
out
data16
and
inc
mov
in
dec
int3
imul
pop
mov
lods
xlat
out
lret
mov
adc
in
stc
fcmovnu
data16
pop
jl
hlt
loop
rorl
inc
bound
call
sub
xchg
add
stc
fimuls
aaa
nop
movsl
mov
scas
gs
add
xchg
add
iret
mov
and
push
data16
sub
inc
insl
or
sbb
jbe
push
mov
lea
mov
sub
bound
fs
insb
and
fdivrl
pop
or
mov
fisubl
jle
inc
or
xchg
push
push
mov
leave
scas
mov
xchg
xor
or
sti
dec
pop
lret
int3
lret
pop
push
rolb
jmp
gs
xor
pop
push
or
push
xor
dec
aam
inc
int3
shrl
rorb
jo
cmp
push
out
enter
sbb
test
and
mov
mov
jns
lcall
es
fdecstp
aam
jecxz
insb
dec
dec
mov
and
push
mov
rol
repz
push
in
pop
add
imul
aad
sub
aad
call
repnz
addr16
scas
fcmovnu
int
out
in
cli
sub
and
enter
outsl
mov
repnz
cmp
cmp
nop
ljmp
mov
ss
jno
or
popf
or
pop
lret
sub
in
sbb
rol
xchg
fsubl
cmpsl
into
adc
xorb
mov
jle
mov
das
stos
adc
add
push
test
or
in
sub
mov
pop
rorl
lea
jb
sub
out
repnz
in
sbb
fists
sbb
in
inc
adc
sbb
imul
pop
ret
mov
dec
push
push
push
push
aad
cmp
rorb
lahf
hlt
into
scas
imul
popf
push
jg
jne
mov
lcall
jl
loope
mov
insl
es
int
sti
ja
loopne
sbb
sbb
decb
das
sbb
imull
sbb
icebp
push
imul
mov
in
add
mov
push
loopne
mov
jno
mov
add
test
mov
jo
push
xor
sub
adc
outsl
cmp
adc
adc
cmp
mov
je
je
cmp
jo
or
lret
lods
mov
insb
shll
ret
push
xor
and
mov
sbb
arpl
push
insb
xchg
out
dec
rorl
pop
ficoml
xorb
into
ficompl
push
clc
sbb
and
cmp
ret
push
icebp
cmp
cmp
adc
daa
out
xor
sub
rolb
test
pop
inc
das
imul
push
cmp
iret
test
jge
cmp
mov
sub
repz
pop
sub
ds
or
in
lcall
lods
xor
std
or
popf
xchg
cld
inc
aaa
adc
or
call
cmc
xchg
or
les
in
mov
orl
ja
inc
fsubrp
dec
xchg
je
adc
or
test
mov
mov
adc
inc
int
cltd
mov
push
mov
pop
push
add
push
and
xlat
pop
int
lods
orl
mov
push
mov
sbb
fmuls
sub
cld
sbb
imul
out
sub
lret
mov
inc
stos
mov
imul
cmp
adc
mov
xchg
int3
push
xor
sub
into
or
pop
pop
lds
ds
std
adc
pushl
cmp
fists
iret
call
push
nop
sub
mov
cmp
mov
movb
loope
rorb
add
push
sbb
and
push
imul
jle
nop
jo
in
add
lods
push
inc
push
push
sbb
jno
std
add
jp
inc
and
outsb
dec
ret
pop
data16
test
dec
test
cmp
out
rorl
icebp
xchg
shl
das
out
stc
or
std
stos
jp
cmp
sbb
mov
inc
orb
jbe
pop
fs
mov
lret
jbe
jg
jae
xor
jle
into
jp
jnp
call
lcall
test
adc
leave
outsb
and
test
sub
leave
sub
mov
sub
stos
mov
lock
inc
dec
ljmp
idivl
or
sub
sti
and
in
inc
cmp
fiaddl
add
leave
mov
xlat
push
xchg
hlt
mov
hlt
push
cmp
add
cmp
jg
movb
cld
push
bound
jo
movsb
std
js
ficoms
or
sub
xor
mov
pusha
dec
add
add
into
out
out
enter
sbb
nop
adc
sbbl
outsb
mov
or
dec
mov
jb
push
push
insb
dec
inc
jle
xchg
dec
outsl
mov
pop
xor
xor
jno
leave
fs
adc
lds
loop
push
repnz
ja
insb
cmpb
pop
and
inc
pop
inc
lcall
mov
repz
ret
leave
mov
testb
dec
shrl
lcall
jbe
sbb
pop
popa
cmp
and
mov
mov
repz
adc
add
lods
mov
mov
add
les
out
outsb
lods
push
xor
roll
pop
and
mov
pop
nop
nop
push
out
or
mov
gs
dec
hlt
xchg
jecxz
jecxz
es
xchg
mov
ja
adc
into
test
dec
jge
sub
fimuls
mov
stos
mov
and
cmp
mov
punpckldq
xor
pop
sarb
mov
pop
aad
fnstcw
push
mov
dec
and
jno
cs
das
xchg
sbb
stos
out
movsb
gs
popa
cmpsb
incl
outsl
aam
sbb
lods
pop
imul
sub
inc
aam
icebp
lock
outsb
pop
mov
in
dec
cmpl
jge
imul
sbb
xor
mov
mov
jno
pop
mov
dec
mov
mov
inc
add
lds
add
add
sub
clc
cmc
iret
xchg
jb
adc
addb
xor
cmp
push
xlat
fdivrl
orb
mov
std
popf
and
in
rcrb
pop
mov
xchg
adcb
add
or
xor
mov
outsb
inc
dec
pop
jl
cs
mov
add
imul
test
add
dec
jecxz
mov
dec
dec
pop
lahf
dec
icebp
ds
ljmp
repnz
push
in
cmp
or
push
xlat
push
inc
ficompl
pop
jae
or
mov
xchg
adcb
cli
jl
push
sbb
adc
xor
push
out
mov
xchg
lahf
pop
sub
cmpsl
cli
repnz
xchg
imul
pop
cmp
jmp
hlt
xor
shrb
or
mov
mov
idivl
test
adc
js
movsb
push
cmpsl
bound
xchg
out
cmp
incl
shll
pusha
std
cmpsb
push
jbe
or
loop
rcl
lods
in
or
add
adc
mov
xor
and
in
and
stc
les
xchg
dec
xor
mov
pushf
push
mov
sarl
test
dec
stos
scas
sti
cmp
clc
pop
cmpsb
arpl
es
xor
outsl
jp
xlat
push
loopne
sub
inc
inc
lds
sub
movsl
fnsave
into
cltd
je
ja
daa
sbb
xor
out
push
add
sbb
fs
insl
shrb
and
pusha
int
out
fildl
push
fninit
adc
push
pop
pmullw
hlt
int
jle
sub
shll
adc
divb
mov
jecxz
leave
pop
je
mov
mov
out
pop
xlat
sbb
mov
push
loop
dec
jmp
jle
lods
jae
mov
ss
test
imul
cmp
repnz
fsubs
ja
dec
xor
sbb
adc
int
xor
push
out
insl
mov
fwait
inc
jbe
dec
jp
imul
fwait
in
xor
mov
xchg
cmp
mov
dec
push
jo
test
iret
in
fists
fiaddl
adc
jecxz
mov
icebp
sbb
decb
jp
sbb
imul
out
inc
inc
repz
mov
scas
int
into
jbe
ds
inc
cmc
dec
adc
out
in
fisubrl
dec
pop
mov
movsb
xor
sbb
mov
mov
and
shl
test
enter
mov
sarb
outsl
xchg
xchg
imul
jmp
push
aad
mov
and
jno
rorl
fsts
push
push
push
xorb
insl
outsl
mov
xchg
or
repz
or
add
mov
pop
mov
sbb
dec
inc
xor
and
addl
mov
bound
pusha
ror
adcl
jns
push
xchg
adc
adc
push
adc
add
mov
xlat
cmpsl
sub
inc
lea
xor
lods
pusha
popl
es
pop
ja
test
int
add
popa
in
or
leave
sti
loopne
mov
jecxz
xor
jge
pop
loope
inc
and
sbb
inc
push
dec
bound
aad
movsl
mov
lret
stos
orb
pusha
popa
and
mov
out
or
loopne
in
int
xlat
hlt
in
cmpsb
push
in
pop
pop
in
icebp
cmc
stc
cld
mov
or
or
test
gs
dec
dec
int
out
jbe
shl
sbb
sub
out
xchg
xchg
lcall
stos
ficoms
imul
add
test
mov
pop
jge
jbe
mov
int3
mov
jns
lds
cmp
sbb
ds
das
adc
arpl
repnz
mov
cli
popf
pop
mov
mov
fxch
sti
jb
pop
cltd
mov
mov
pop
pop
repz
jle
sahf
jge
inc
cmpsl
aad
idivb
fidivrl
std
das
ficoml
jae
inc
fwait
neg
jo
bnd
cmpb
aas
and
push
adc
add
sub
sbb
popf
push
fcoml
mov
loopne
xchg
leave
push
imul
and
ds
push
lock
std
adc
aas
jmp
xchg
push
repnz
mov
jnp
repnz
inc
and
push
mov
fstp
shl
push
dec
ds
push
std
imul
leave
ljmp
mov
mov
leave
adc
mov
out
rol
xchg
jbe
cli
nop
push
mov
jae
mov
inc
push
mov
mov
mov
and
inc
sbb
fwait
pop
lock
and
mov
add
fwait
ds
add
sub
sbb
ljmp
xchg
adc
dec
dec
roll
test
push
add
fcmovnu
xor
cmpsb
fdivs
enter
sub
cmp
xchg
loope
pushf
adc
ret
test
mov
dec
jne
dec
jmp
push
inc
js
xchg
jmp
imul
fistpll
in
hlt
jne
das
push
out
into
ja
cmp
mov
call
aas
add
rolb
sub
lock
mov
sub
sub
jae
lahf
xor
push
aam
out
scas
or
jb
xchg
ja
out
cmp
mov
daa
std
out
stos
arpl
cld
mov
stos
mov
mov
fisttps
out
push
jmp
out
fsubrl
fiaddl
in
sub
adc
xor
outsl
add
inc
scas
out
mov
rcll
mov
in
jae
hlt
std
mov
mov
inc
cmpsl
cmp
dec
fisubrs
sahf
je
aas
out
aad
jns
push
sub
jl
push
cmp
sub
push
mov
inc
add
cli
cmp
mov
ja
aaa
js
cmp
cwtl
aam
out
lods
adc
bound
std
sbb
mov
mov
inc
int3
and
mov
jnp
xor
xor
cs
outsb
or
inc
out
sub
adc
divl
xor
cmc
add
rorl
icebp
or
push
jnp
fldt
fwait
cmp
adc
cmpsb
cwtl
cmpsl
mov
ss
and
add
pop
pop
outsb
mov
ret
push
fmuls
int3
jb
dec
dec
xor
loope
add
push
xchg
outsl
data16
out
cltd
pop
xor
xor
sub
xchg
xlat
movsl
adc
aas
stc
push
je
push
fwait
bound
sti
jb
out
mov
cmp
popf
jl
sbb
push
dec
in
rclb
add
or
bound
mov
lds
mov
jae
push
js
pusha
xlat
lret
mov
jmp
mov
jmp
aam
loope
jbe
dec
pop
cmp
lock
negb
mov
cmp
ljmp
dec
xchg
mov
bound
push
xchg
push
and
or
cltd
dec
push
cmp
jmp
sbb
jae
xchg
jge
inc
inc
sbb
add
outsl
aaa
mov
jg
imul
aam
or
add
test
scas
int3
mov
aas
add
adc
inc
dec
mov
sbb
test
fadds
arpl
loopne
mov
gs
data16
pop
dec
fs
or
daa
lods
nop
push
jbe
adc
call
pop
clc
iret
bound
mov
jbe
fsubrs
sbb
sbb
pop
scas
stos
mov
cmp
mov
push
and
push
push
jbe
and
lods
add
and
dec
test
daa
mov
xlat
mov
or
add
adc
out
cmpsl
test
xchg
clc
push
mov
mov
or
sbb
ss
gs
je
sbb
add
cltd
hlt
enter
cmp
call
popf
negl
inc
fs
pop
inc
dec
jb
scas
jo
stc
mov
add
shlb
orb
test
add
inc
xor
cld
in
rclb
cmp
sub
mov
ret
xor
iret
fisttpll
int3
es
dec
daa
lock
xor
xorb
lcall
in
push
push
cltd
or
push
and
mov
movsb
xor
pop
es
sbb
out
in
xchg
add
daa
dec
insl
imul
rep
adc
loope
inc
lret
mov
gs
sbb
adc
lods
jno
xor
or
mov
imul
ja
jns
push
int3
enter
pop
inc
sahf
pop
unpckhps
jecxz
lahf
cs
stc
ret
aam
push
insb
jecxz
aad
or
pop
movsl
push
test
mov
xorb
stos
outsb
jecxz
inc
mov
dec
jg
pop
jno
mov
push
neg
cmc
in
sub
add
jecxz
xor
call
cli
jg
fsts
dec
mov
mov
xchg
les
pop
lahf
xchg
outsl
test
shrl
mov
fcompl
jnp
data16
sbb
cmp
fxch
inc
mov
or
aaa
xchg
and
xorl
jmp
and
fisttpll
jbe
data16
push
movsl
adc
jg
nop
cmc
mov
sub
sbb
and
xlat
mov
lds
push
jne
xor
pop
outsl
mov
xchg
sarb
and
xchg
xor
pop
subb
mov
or
in
mov
xchg
ds
outsb
jno
subl
adc
lds
and
sbb
jne
and
pop
inc
gs
shlb
or
mov
add
sbb
mov
sub
pop
data16
jl
mov
xor
enter
divb
loopne
scas
sub
lods
sbb
lods
push
test
lret
cwtl
sbb
and
pop
or
cmc
fnsave
push
lret
dec
cmpsb
xor
je
push
or
rcr
mull
or
mov
sbb
xor
lret
push
mov
xchg
inc
call
or
sarl
rcll
imul
sub
aad
and
icebp
mov
xchg
popa
inc
fistps
cld
fwait
fwait
sub
mov
mov
call
xor
inc
mov
pop
mov
pop
cli
insb
insl
jecxz
sub
insl
insb
or
xchg
add
xchg
fimuls
pop
cmpsl
sbb
test
adc
and
inc
jp
inc
es
std
icebp
add
repnz
cli
inc
jecxz
xchg
mov
std
ja
mov
gs
arpl
xchg
pop
and
sbb
jle
mov
das
pop
mov
sub
ljmp
pop
out
movsl
push
arpl
cmc
mov
popa
adc
mov
loope
gs
jecxz
nop
mov
adc
pop
roll
imul
mov
dec
call
inc
enter
scas
and
inc
imul
or
push
stos
push
fwait
stc
inc
push
fimull
sbb
daa
dec
in
into
rcrb
in
or
test
sbb
call
jecxz
mov
rclb
aad
mov
lahf
cmp
mov
ljmp
bound
push
pushf
lret
ss
lahf
ja
fdivs
imull
push
push
nop
cwtl
sub
enter
outsl
jbe
xor
js
rcrb
and
shlb
push
out
cmp
movl
push
inc
out
repz
pop
lret
pop
dec
stos
fimuls
filds
sub
jb
and
jg
and
repz
mov
jns
push
xchg
and
xor
push
scas
pop
fsubl
jmp
pop
mov
xchg
xchg
test
sub
repnz
pop
mov
pop
pop
fwait
push
aam
push
inc
and
cld
ja
mov
dec
pop
lret
jecxz
push
and
pushf
cmp
cltd
push
jb
data16
pop
or
adc
or
push
test
addr16
mov
inc
pop
cmp
iret
sub
rolb
sub
xor
shlb
fneni(8087
es
jnp
imul
leave
and
cld
mov
adc
mov
mov
fwait
and
mov
leave
or
and
lods
movb
or
inc
pop
sbb
lcall
adc
mov
xchg
sub
aas
bound
faddl
testl
sbb
lods
ret
rcll
adc
inc
sbb
pop
sbb
fsubrl
xchg
pop
icebp
out
sarb
dec
jb
into
call
dec
and
popf
jl
ds
imul
pusha
push
cwtl
fcom
mov
add
daa
adc
jg
ficoml
inc
arpl
add
bound
inc
loop
push
mov
push
and
xchg
in
js
mov
cmp
xchg
lods
lret
sub
xchg
add
fisttpll
adc
push
stc
xchg
in
push
pop
and
lds
int
loop
sbb
xchg
fmull
in
movsl
sbb
iret
imul
sti
inc
js
or
stos
or
repnz
xchg
xor
stc
js
xchg
fs
inc
cmpl
hlt
cmp
lods
push
adc
sbb
test
or
popa
jl
insb
nop
and
cmp
mov
or
mov
push
insl
pop
inc
xchg
ret
adc
xlat
in
mov
ds
lock
and
div
call
adc
jg
lea
outsl
fwait
and
sbbb
cltd
ret
int3
and
movsb
dec
sbb
pop
divl
das
das
mov
xchg
ret
xchg
loop
sub
int
aam
in
jb
pop
jge
movb
add
stc
shrb
or
and
inc
fisubs
jge
insb
cmp
mov
insl
or
stos
sub
stos
lods
andb
sbb
jle
adc
cwtl
arpl
xchg
sub
xchg
ljmp
inc
sbb
in
lods
cld
inc
xchg
out
mov
out
cmpsl
push
adc
incb
popf
dec
in
add
cmpsl
push
push
dec
add
jecxz
mov
cltd
loope
pop
cwtl
fnsave
cwtl
jae
sbb
pushf
push
gs
cmp
pop
jnp
enter
out
inc
xor
outsl
sub
ret
lds
or
mov
fmuls
popf
pop
lds
and
movq
jb
lcall
fsubrl
jae
repnz
sub
mov
jno
xchg
jb
mov
mov
in
gs
and
sub
sub
sbb
push
inc
mov
fistpll
push
pop
push
adc
nop
jbe
pushf
scas
pop
stos
out
lock
out
jb
lea
sub
repnz
mov
and
stos
cli
inc
push
pop
mov
setg
je
lods
dec
imul
mov
mov
gs
imul
jp
cmpb
lea
xchg
xchg
lea
adc
jecxz
sub
xchg
sbb
mov
jne
imul
pop
mov
pop
xchg
and
cli
adc
cli
mov
jl
mov
inc
loop
popa
xchg
shl
imulb
mov
addps
or
jmp
aad
add
mov
adc
incl
or
mov
les
arpl
in
cmc
cli
iret
sub
sahf
js
ret
mov
ljmp
fldt
pusha
fwait
mov
test
xor
sti
scas
das
adc
mov
push
inc
pop
mov
inc
and
sbb
pop
int3
nop
push
sub
data16
sbb
mov
push
lret
inc
cli
xor
mov
push
adc
addr16
or
mov
cmp
xlat
mov
mov
push
ficoml
pop
mov
ljmp
jno
jne
pop
insb
in
loope
push
sbb
daa
cmp
inc
sub
out
sbb
xor
inc
stos
fwait
push
imull
aaa
pop
xchg
bound
sbb
jb
xchg
mov
cmp
add
sbb
mov
push
jne
sub
stos
xchg
cmp
jp
nop
enter
fisttps
mulb
cmpsl
xchg
aaa
push
and
mov
roll
movsb
jae
cmp
sbb
mov
pop
jge
scas
fnstsw
dec
fcoms
ffree
out
leave
lcall
and
sub
jle
xchg
xor
mov
lret
inc
push
xchg
icebp
push
loop
mov
fmuls
lret
leave
insb
ljmp
sub
es
jno
jbe
cmc
outsl
clc
test
mov
insb
scas
call
pop
lret
xchg
sbb
dec
cli
pusha
repnz
inc
xchg
xchg
std
push
stc
jg
push
dec
or
xor
or
out
jp
inc
push
iret
arpl
les
not
cmc
xchg
lods
inc
fstpl
add
pop
mov
jmp
sub
arpl
pop
or
mov
ret
in
out
cmp
je
sahf
pop
xor
xchg
jle
cmp
andl
aas
mov
mov
add
imul
jmp
and
push
and
int
inc
add
jl
cmp
mov
or
mov
decb
sarb
dec
stos
add
lret
pop
clc
in
int
dec
add
call
jne
sahf
das
jecxz
mov
ficoml
rclb
sub
outsb
pop
lcall
sbb
mov
xor
or
sub
repz
and
testb
sbb
lods
ljmp
jo
lcall
mov
mov
mov
pop
mov
cmp
ret
pop
sub
shll
loop
sub
and
cltd
lret
pusha
fidivrs
mov
xor
cmpsl
pop
push
pop
sbb
mov
bound
or
xchg
outsl
dec
lret
fs
push
mov
or
mov
xor
jmp
inc
stos
mov
xor
pusha
pop
dec
js
xor
aaa
push
jmp
sub
lahf
cwtl
aad
es
mov
push
mov
dec
and
cmp
das
mov
mov
xlat
dec
cltd
dec
and
jo
out
mov
test
daa
xor
aas
jne
jbe
cmp
test
cmp
mov
mov
mov
push
enter
fistps
imulb
decl
gs
dec
stc
divb
mov
pop
cmp
jg
shr
repnz
jecxz
stos
jmp
notl
dec
aaa
stc
lds
inc
lods
sar
test
ror
repz
int3
test
xchg
out
repnz
insb
push
outsl
lock
inc
mov
scas
mov
aam
adc
pop
inc
aaa
dec
mov
mov
loop
xchg
shr
lods
and
loop
xchg
scas
sbb
adc
mov
mov
in
sbb
adc
push
daa
out
pop
popf
cmp
inc
mov
inc
lock
sahf
cmp
fbld
push
xchg
repnz
aam
cmpsb
or
push
es
and
fwait
or
xchg
pop
inc
sahf
adc
out
mov
push
rcll
mov
daa
pop
jp
mov
cmp
cmp
or
push
leave
cmp
jo
adc
fbstp
js
adc
jns
lea
cwtl
stc
loope
mov
aam
add
sub
in
cmpsl
xchg
xchg
add
es
scas
outsb
mov
and
sub
xchg
sarl
or
mov
xor
inc
jne
push
daa
popf
out
pushf
hlt
xchg
jecxz
and
int
cs
fucomi
int
lcall
pop
inc
mov
push
push
jmp
insl
xchg
xor
xor
es
pop
mov
and
and
xor
js
in
imul
pop
pop
mov
inc
or
jae
scas
test
sub
test
fidivrs
cltd
mov
out
mov
cs
jmp
test
pop
push
pop
pop
in
xchg
lock
jbe
mov
test
lahf
pop
cmp
push
jp
into
cs
or
ret
dec
pop
jb
outsl
pop
call
sbb
inc
or
inc
cmp
bound
mov
aaa
dec
or
pop
scas
inc
inc
test
std
popf
cmp
inc
push
xlat
pop
fucom
aad
push
xchg
and
sub
es
push
xor
and
dec
push
xor
inc
sub
mov
nop
cld
mov
imul
lds
fbstp
mov
test
and
leave
cmpb
fmull
jle
cmp
repnz
es
das
pushf
into
add
push
jnp
clc
lret
test
fisttpll
jbe
movsb
xchg
mov
movsl
and
mov
aaa
push
or
jne
negb
inc
pop
mov
mov
fcoms
pavgb
arpl
xchg
xor
rolb
lret
das
push
pop
cltd
sbb
cli
xchg
push
xchg
loope
notb
sti
adc
insl
xchg
push
and
aaa
dec
and
mov
xchg
in
ds
or
movsl
inc
ljmp
sub
push
lret
or
into
sar
jmp
mov
call
or
test
pop
push
shrb
shrb
mov
sbb
dec
nop
jmp
mov
xor
cmp
cmp
outsl
or
jae
clc
xchg
inc
dec
dec
jecxz
jne
mov
jb
sub
or
jb
cmp
xchg
xchg
xchg
push
add
mov
out
push
out
push
pushf
pushf
inc
daa
mov
dec
imul
inc
cmp
lods
pop
mov
lea
in
jp
call
rorl
ret
in
sbb
add
xchg
sbb
scas
push
dec
fnsave
jmp
nop
dec
pop
andl
sahf
xor
xchg
inc
js
mov
js
iret
push
scas
ljmp
and
lock
aam
jecxz
add
sub
loope
sbb
movsl
jmp
pop
popl
add
and
mov
adc
sbb
cmc
adc
inc
push
icebp
mov
fadds
in
outsb
call
sub
loope
xor
jbe
mov
pop
xor
cmp
fsubl
mov
pop
sbb
lods
repnz
fnstcw
sub
xor
lea
dec
xor
adc
inc
sub
ficomps
cmp
stos
mov
aam
popf
popf
mov
sarb
cmp
sub
mov
inc
cwtl
xlat
push
cltd
dec
nop
xchg
mov
jmp
fidivs
loopne
shll
jno
or
icebp
or
mov
hlt
imul
out
xchg
cmp
into
dec
pop
sub
dec
add
jmp
push
mov
mov
or
icebp
mov
mov
in
in
mov
das
adc
mov
lea
int
movsb
idivl
je
loope
inc
ss
mov
dec
xor
mov
jns
fnstenv
or
pop
mov
or
jg
lds
xchg
lahf
push
jmp
sub
dec
cmpsl
cltd
jno
rorb
mov
inc
sbb
add
std
cmp
lcall
test
sbb
in
ret
aam
inc
nop
dec
cmc
pop
pop
sub
sbb
mov
in
test
jl
add
sub
mov
mov
nop
mov
mov
aam
fwait
inc
mov
leave
lods
ds
mov
sub
comiss
lods
repz
mov
push
lods
nop
sbb
mov
and
fimuls
inc
push
addl
gs
lea
iret
dec
add
xchg
cmpsl
lcall
nop
inc
add
xor
xchg
movsl
dec
icebp
fdiv
xchg
insb
push
cmpsb
mov
out
mov
jo
push
cmp
mov
mov
imul
add
in
imul
stos
xor
add
push
lds
inc
aam
lea
subl
lret
in
jnp
je
cmp
mulb
cltd
jbe
sbb
xchg
mov
out
push
loopne
insb
jmp
xchg
or
dec
and
testl
xor
sub
sub
sub
int
lea
or
mov
inc
sbb
push
fs
out
movsl
dec
mov
data16
lret
or
cmpsl
lods
adc
cmp
mov
orl
cmp
xlat
cli
in
mov
fwait
xchg
pushl
push
adc
mov
mov
inc
cmp
sbb
jnp
cmc
in
sbb
cmp
adc
sbbb
push
test
add
lret
xor
lret
dec
lods
aam
in
out
xor
in
add
fsubrs
push
loope
es
push
addr16
mov
test
ljmp
add
mov
adc
inc
mov
mov
cmpl
lret
popf
jne
les
jae
inc
icebp
or
adc
test
in
repnz
nop
in
jne
cli
fisubl
sub
out
xchg
das
mov
lahf
out
push
sbb
into
addr16
fsub
fs
lea
and
jb
cltd
dec
mov
cltd
sbb
sahf
add
mov
xor
loope
arpl
pop
add
xor
jmp
mov
scas
lret
repnz
xchg
inc
jne
push
lahf
fimuls
into
mov
dec
pop
cmp
mov
popa
shlb
jb
pop
fs
shll
int3
cwtl
and
sbb
mov
mov
mov
and
mov
jl
jne
and
push
jb
xchg
push
dec
aaa
loop
and
pop
jnp
out
lea
and
in
push
or
jg
add
mov
add
ljmp
jbe
leave
flds
add
mov
test
xchg
notl
adcb
in
insl
into
add
testl
push
sbb
mov
mov
push
fistpll
adc
pop
in
xor
sar
pusha
dec
or
jl
test
shll
add
mov
stos
fdiv
js
xchg
mov
sar
push
and
dec
fstps
push
ss
std
pop
inc
cli
int
adc
pop
xchg
ficomps
scas
ljmpw
dec
xchg
fwait
popf
mov
out
dec
push
pop
mov
add
scas
loop
cmp
mov
ret
fildll
pop
or
jnp
jle
imul
outsb
xchg
cmc
inc
mov
adc
cmovne
lcall
xchg
add
roll
std
out
jbe
stos
rcrl
les
dec
cwtl
sahf
cmp
movl
into
fwait
adc
mov
and
pop
sti
dec
mov
mov
cmovae
seto
aam
sub
imul
mov
mov
cmc
int
cmp
xchg
push
sti
popf
dec
out
mov
xchg
mov
loop
cmp
pop
testl
add
mov
xchg
imul
sti
and
flds
xor
iret
jns
sbb
add
prefetch
mul
inc
push
imull
jge
gs
cli
push
loop
mov
insb
loopne
js
xor
test
fnstenv
jmp
xorl
xlat
jecxz
aaa
adc
pop
sarb
xchg
and
pop
adc
popa
inc
dec
scas
cmp
push
cmpsl
jns
xcrypt-ofb
cmpsl
sub
les
xchg
push
push
pop
and
mov
mov
mov
in
mov
jmp
sbb
popf
and
jl
or
cmp
out
xchg
leave
in
xchg
sub
pushf
mov
fwait
mov
jmp
cmp
inc
int
mov
fcmovnbe
mov
imul
adc
aad
jmp
jge
sub
mov
stos
sbb
push
ljmp
shrl
ljmp
fwait
add
dec
stos
shl
cmc
jle
scas
inc
cwtl
mov
mov
sbb
jns
sti
test
fwait
dec
gs
js
cwtl
jecxz
jnp
neg
int3
int
outsl
mov
scas
xchg
cmp
mov
push
xchg
push
pop
push
lods
inc
mov
inc
fidivrs
sub
out
mov
dec
addb
or
das
pop
scas
pop
mov
mov
bound
and
dec
and
inc
jmp
add
cmp
ret
in
sub
push
ret
mov
dec
cmpsb
popf
pop
push
dec
pop
push
mov
data16
push
cmp
lods
mov
out
add
jbe
jecxz
je
mov
jno
jge
scas
xlat
ror
push
xor
fisttpll
sbb
cmp
mov
pop
cmpsl
mov
adc
inc
lcall
test
getsec
push
and
mov
lahf
stos
mov
sbb
punpcklbw
jge
stc
mov
jbe
shrl
or
xchg
imul
pop
arpl
push
fsubr
or
or
inc
repnz
or
jge
aad
insl
pop
adc
outsb
pop
lea
mov
xchg
xor
jl
sbb
and
icebp
jg
mov
or
and
or
jp
ja
jns
cwtl
stc
jne
test
push
pop
pop
fildll
push
ds
push
xchg
push
or
stos
mov
mov
daa
sti
call
sbb
sbb
push
jl
xchg
fldl
mov
xchg
clc
inc
xorb
pop
call
stc
lods
xor
ffreep
or
or
rorl
pop
push
jnp
shr
loope
mov
data16
pop
sub
and
sbb
mov
inc
pushf
cmp
sub
jge
out
cmp
sbb
xor
ljmp
cld
adc
std
xor
test
movsb
xor
js
jg
andl
lea
push
push
sti
or
loop
test
ret
jo
jge
aas
xorl
in
cmc
inc
test
addr16
repz
insb
or
sbb
int
loopne
pop
xor
mov
shll
pop
outsl
pop
loopne
jp
cmp
cmp
negb
mov
in
outsl
test
ds
cmpsb
mov
cmc
jecxz
inc
fsubr
sbb
ss
pushl
in
pop
dec
divb
adc
out
sbb
shrb
faddl
repz
mov
pop
inc
push
jge
rcrb
sub
ret
pop
ss
negb
xchg
mov
lret
jbe
aam
cmp
orl
add
xor
mov
bound
or
mov
lods
cmp
pop
push
movsb
cwtl
mov
insb
ja
shl
push
push
push
in
mov
and
pop
jo
fisttpl
jnp
push
jnp
push
rcll
adc
mov
jl
push
adc
push
lock
shlb
push
dec
mov
out
test
fs
stc
cmp
pop
and
mov
pop
pop
sub
jo
in
lcall
cli
movsb
repz
sub
repnz
xor
jne
pop
sbb
mov
cmp
push
das
imul
jmp
pop
mov
fistpll
movsb
jg
cmp
mov
push
hlt
mov
inc
xchg
sub
pop
mov
or
je
scas
inc
fwait
jecxz
idivb
jns
aad
cs
push
insl
and
xchg
je
lret
notb
cmp
dec
daa
ds
fidivl
je
mov
xor
inc
add
cwtl
clc
push
out
arpl
xor
add
push
inc
xchg
pushf
sbb
xor
sbb
cmp
or
insb
mov
and
mov
add
add
addl
add
mov
sbb
insb
push
jb
sbb
iret
cwtl
xor
or
inc
sub
mov
stos
cwtl
xchg
ljmp
aad
lcall
mov
jb
fistl
xchg
jnp
sbb
or
dec
push
pop
lds
imul
daa
mov
bound
cmpb
fdivs
call
xchg
sub
push
negb
fcmovu
lret
in
popf
xchg
mov
fistpl
sarl
fstps
ljmp
out
ljmp
sti
out
jl
out
push
scas
stos
mov
sahf
jle
cmp
push
or
lcall
test
mov
adc
repz
sub
filds
mov
mov
pop
cmp
adc
dec
shll
mov
gs
jl
sbb
and
dec
push
fwait
mov
push
aam
stos
add
fnstcw
sub
and
cmpsb
xchg
aam
add
mov
inc
imul
dec
mov
push
test
lret
jb
int3
scas
movsb
xchg
jge
cs
mov
lret
jns
outsl
sarl
sub
jnp
push
dec
mov
call
or
cmp
ljmp
xor
dec
cmc
xlat
push
fimull
out
sbb
pop
addr16
push
xor
mov
test
movsl
add
movsl
out
shl
mov
fidivs
or
push
dec
sahf
daa
shlb
sub
adc
push
sbb
sti
push
fnsave
outsb
adc
xchg
push
mov
in
sti
jbe
mov
pop
pop
ja
push
in
popf
push
rol
insb
mov
cmp
xor
pop
pop
xchg
addr16
lods
in
stos
mov
pop
in
or
mov
mov
add
loop
push
je,pt
shl
int3
dec
insl
jmp
push
std
xchg
fsub
popa
mov
cli
movsb
push
popf
mov
ljmp
sub
lods
mov
jno
cmp
mov
into
sarb
aam
lahf
xor
stos
cmp
fcoms
mov
ja
enter
sbb
fwait
dec
push
inc
inc
adcb
sbb
stc
fdivrl
in
xor
push
dec
cmp
and
scas
mov
or
jge
mov
test
xorb
mov
jne
jmp
mov
jb
xor
fcompl
sub
in
dec
adc
fwait
jge
or
fsub
push
jle,pn
std
ss
xor
dec
mov
and
sbb
lret
push
fistl
adc
in
lcall
lahf
sub
lcall
mov
cmpsl
sbb
movsb
cmc
adc
adc
ja
out
stos
push
cmpsl
je
int
mov
shll
stc
inc
dec
int3
cli
adc
or
pop
jecxz
lcall
stos
pushf
aad
out
testl
jg
add
insb
into
repnz
sub
mov
das
pusha
xchg
and
lret
jmp
cld
jmp
mov
jle
mov
repnz
sub
cmpsb
mov
imul
shrl
gs
jbe
lahf
fcoml
hlt
in
pop
pop
lret
inc
inc
dec
dec
mov
das
cmp
push
sub
les
push
jo
xor
cmp
lret
ss
pop
sub
ljmp
add
fdivrl
stos
pop
fdivs
jbe
mov
loopne
lods
xchg
sub
xor
scas
addl
lcall
iret
mov
and
lret
or
pop
adc
mov
and
pop
push
sub
sub
push
xlat
shlb
mov
shrw
stos
cmpsb
and
pop
cmp
xor
push
cmpsl
mov
cltd
xor
lcall
xor
int
inc
inc
es
dec
mov
mov
push
mov
insl
cmp
bound
push
fdiv
mov
je
cwtl
pop
mov
hlt
fucomi
inc
jo
arpl
mov
call
cmp
lahf
ja
les
mov
jne
jmp
cmpb
bound
pop
pop
jmp
andb
stos
cmc
xchg
ljmp
add
lret
test
shlb
and
mov
scas
lods
add
lds
out
jns
int
pop
shll
jp
imul
pop
or
cltd
xor
mov
addr16
ror
out
mov
push
pop
fisubs
mov
imul
aam
jge
enter
popa
insl
mov
dec
xchg
jbe
adc
xchg
push
mov
dec
push
jno
xchg
mov
hlt
or
and
pop
adc
dec
pop
movsl
mov
out
push
pop
pushf
out
mov
or
xor
test
mov
jo
sub
gs
xor
dec
imul
imul
cmp
inc
mov
sub
ficompl
xor
mov
mov
neg
lahf
pop
outsl
mov
mov
lret
sbb
and
test
hlt
ljmp
mov
nop
adc
jl
fsubl
lock
and
arpl
sbbb
dec
lods
push
add
ljmp
movsb
dec
mov
xor
xchg
xchg
push
mov
cmc
sbb
in
aad
gs
jmp
mov
cld
jne
and
loope
imul
mov
leave
setns
cs
repz
add
in
shrb
xor
std
push
push
pushf
in
cmpsl
popf
inc
push
aam
addl
sbb
lahf
lea
push
pop
jne
dec
inc
rorb
cmpsl
dec
dec
cmc
lcall
lcall
fcomps
jne
aad
lods
icebp
dec
adc
scas
pop
sbb
mov
or
sbb
inc
ret
call
adc
dec
test
inc
xchg
in
inc
and
xor
enter
sbb
dec
sub
xor
jl
cmp
add
mov
dec
out
jb
adc
mov
fstpl
jp
fdivl
mov
je
sub
movsb
in
popf
push
inc
sub
icebp
dec
mov
fimuls
inc
arpl
inc
pop
cmp
mov
mov
dec
popa
xor
cmp
in
movsb
daa
insl
xor
adc
data16
iret
inc
jo
push
sahf
leave
or
jge
mov
push
ret
xor
insb
dec
fwait
push
jae
inc
rcrb
enter
es
int
dec
dec
mov
push
int
xlat
sahf
xor
loope
dec
mov
pop
xchg
test
push
in
pop
lret
cmpsb
ja
cmp
push
jg
mov
jmp
gs
fistpl
jae
push
cmp
mov
xor
jmp
push
loop
cmpsl
inc
imul
xor
pop
cs
lods
or
mov
gs
sbb
js
les
shrb
aam
adc
and
and
sarb
lret
loop
lret
ds
ret
mov
xor
in
push
push
fs
dec
inc
xchg
loopne
jae
adc
mov
ss
std
push
mov
test
sbb
lcall
shll
hlt
mov
test
and
xchg
cmpsl
jb
jne
imul
dec
das
push
jp
xchg
outsb
icebp
out
addr16
inc
sarw
lods
cmp
pop
imul
add
testb
xchg
sub
test
xchg
and
pop
icebp
gs
repz
bound
push
adc
xchg
push
sti
addr16
jno
sub
xor
incl
insl
pop
mov
mov
das
imul
sbb
mov
jp
shrb
sub
jns
ljmp
das
fsts
outsl
test
and
inc
sub
lret
pop
inc
mov
dec
stos
xor
and
xchg
loopne
xor
mov
or
inc
stos
push
cmpsb
push
scas
push
dec
dec
dec
mov
fsubl
inc
stos
in
fidivrl
xor
push
mov
repnz
jl
sub
mov
mov
and
addb
dec
hlt
std
xor
in
aad
in
push
inc
insb
adc
sti
or
mov
or
sub
movsl
cwtl
lahf
cmp
lds
inc
inc
out
jae
popa
jno
mov
jmp
jae
sbb
loope
movsl
cmp
sub
test
sarb
call
movsl
ss
lret
icebp
mov
ljmp
mov
shl
push
sahf
insl
jb
mov
sub
inc
lcall
mov
int3
std
aaa
inc
sbb
xchg
mov
dec
pop
push
mov
test
mov
test
mov
jge
cmp
movb
test
pushf
dec
test
xor
cli
mov
cmp
push
xchg
mov
gs
icebp
sbb
out
in
inc
clc
cmp
aad
ret
xor
loope
stc
sbb
mov
shrb
xchg
xor
push
push
shlb
scas
rcrl
movzwl
xor
scas
push
out
xchg
dec
sub
cmpsl
mov
cmpsl
hlt
adc
jl
out
mov
jg
addr16
addr16
lret
pushf
add
shrl
loopne
aad
repz
rol
jne
gs
lret
mov
mov
adc
int3
cmpsb
test
jae
popf
sbb
inc
push
imul
ds
jnp
xchg
sub
sub
lret
xor
fdivrl
insb
adc
or
adc
dec
in
rcrl
test
xchg
jle
inc
aas
push
lret
pop
lcall
mov
je
inc
test
mov
xchg
test
lahf
stos
test
push
xchg
pop
mov
repnz
repz
imul
enter
sahf
shll
mov
stos
xchg
dec
adc
mov
and
sbb
dec
xchg
orl
int3
mov
push
cmc
cmp
test
imul
fcmovnu
xor
gs
inc
cmp
mov
pop
jmp
push
xor
aas
cwtl
in
cmp
in
or
jmp
push
push
push
inc
stos
mov
fldcw
sbb
xchg
inc
pusha
jl
fnstenv
scas
lret
push
mov
cmp
outsl
cmp
or
stos
dec
pop
mov
enter
pop
fsts
sbb
mov
test
into
rclb
cli
imul
adc
pop
inc
mov
xor
pop
sbb
mov
sub
call
push
inc
out
aas
push
sbb
adc
lret
fwait
mov
xor
setp
cltd
sahf
jb
lret
inc
inc
push
cmpsl
jmp
repz
pushf
adc
out
sahf
push
sbb
sbb
jmp
lods
out
lcall
jbe
jbe
dec
lahf
push
scas
test
lahf
mov
addr16
in
xor
mov
jg
test
movsb
ljmp
or
mov
mov
jmp
aas
jmp
sub
icebp
sub
xchg
jae
dec
cs
fdiv
push
dec
pushl
mov
sub
push
sti
lahf
test
lea
dec
sub
or
aaa
ja
push
inc
pop
or
cltd
popf
aad
das
and
scas
push
aad
mov
sahf
mov
pop
imul
jb
fcompl
and
shll
out
inc
sub
cmp
cmp
popf
shll
mov
push
push
popf
mov
xor
hlt
jl
xchg
cmpsl
xor
pop
pop
subb
andb
pop
push
movsl
adc
add
push
dec
test
sub
test
stos
mov
jb
out
jae
adc
into
cli
sahf
mov
pop
fdivl
scas
int3
ljmp
and
sbb
sarl
rcll
je,pt
and
cltd
lds
mov
inc
aad
cmp
mov
and
or
mov
mov
ficomps
cld
repz
xchg
sub
mov
inc
xchg
movsb
int
scas
mov
scas
into
xchg
lcall
dec
popa
imul
push
sub
insb
xchg
rclb
mov
jno
iret
stc
in
pop
call
and
out
fnstsw
fwait
push
out
dec
dec
loope
push
bswap
xchg
push
ds
lea
lret
out
mov
jo
inc
in
cli
xchg
pop
jmp
in
push
xor
pop
rcrl
jmp
mov
add
jp
aas
loop
popa
in
add
rol
cmpsl
addr16
fstl
jo
mov
popa
add
xlat
jbe
push
mov
push
pop
xchg
pop
inc
aam
in
xchg
fnstsw
ficomps
lret
into
test
jnp
hlt
and
test
shlb
insb
ljmp
xor
sub
idivl
push
cwtl
call
vpmaxuw
leave
jecxz
jnp
notl
call
mov
rcll
inc
int
fidivrl
sbb
aaa
fisubrs
ret
out
jle
cli
inc
enter
outsb
mov
sarb
or
jg
sbb
mov
pop
cmp
ja
dec
jg
cli
or
sub
aas
pushf
pop
and
daa
sbb
incl
push
test
mov
adc
cmp
repnz
into
das
insl
xlat
sbb
mov
dec
sti
cmpsb
fsubs
push
test
in
mov
addr16
ss
repnz
mov
sbb
fdivrl
fiadds
mov
std
jge
mov
push
je
xchg
cmpsl
ret
push
mov
dec
jo
dec
mov
pop
mov
dec
aad
ficoms
adc
fsubrs
and
push
pop
inc
sbb
or
mov
cmpsl
aas
pop
pop
inc
xor
in
outsl
lahf
mov
inc
nop
movsl
aam
adc
push
call
mov
aam
test
pop
pop
hlt
jecxz
jns
adc
inc
icebp
out
das
enter
sbb
arpl
popa
sbbl
adc
in
les
cmp
out
cmp
adc
dec
xchg
sarb
adc
movsb
inc
adc
push
aas
push
les
xchg
cmp
dec
push
in
lret
or
sarb
adc
in
int3
adc
add
loopne
xchg
xchg
ds
imul
mov
and
dec
lahf
cmpl
repnz
or
inc
inc
cmp
dec
imul
ss
std
fnstsw
or
pushf
test
pop
and
lret
jecxz
or
js
inc
mov
jle
dec
push
aaa
sbb
dec
pushf
and
mov
nop
sahf
mov
call
insl
push
loope
lock
push
ret
and
stos
or
inc
and
adc
add
xchg
sub
jo
sbb
nop
and
div
or
fcmovnu
add
dec
lea
stos
popa
rclb
xchg
jmp
ljmp
mov
nop
sub
add
inc
xchg
popa
sub
inc
aam
push
pop
imul
popa
arpl
add
add
push
add
pop
fdivrl
ljmp
sbb
inc
sub
fdivrl
pushl
adc
xchg
loop
jbe
lock
push
sbb
insb
adc
push
inc
out
lods
push
cmp
outsl
orb
and
pop
xor
stos
popl
cwtl
or
and
xadd
cs
add
rcrb
test
mov
stos
pop
es
in
pop
xchg
add
cmp
jb
cmp
icebp
inc
xchg
or
sbb
inc
out
test
mov
add
test
icebp
lock
xchg
inc
and
popa
ret
out
jae
push
mov
mov
dec
sub
ja
lret
mov
andl
pop
rolb
jns
pusha
int
mov
fwait
pop
pop
sar
stos
add
inc
cmp
xchg
orl
cmc
pop
inc
xchg
popf
cmp
xchg
test
inc
mov
add
jns
dec
add
loopne
adc
cld
or
xchg
shll
loope
push
ret
mov
jge
mov
mov
rcll
inc
nop
jp
and
jl
add
or
xchg
or
or
sub
sbb
mov
xchg
adcl
or
into
cwtl
or
sub
xor
int3
mov
sbb
jmp
sub
andb
xchg
add
mov
popa
ret
or
push
add
inc
nop
and
inc
and
andb
jmp
lret
xchg
sbb
or
sbb
xchg
push
filds
repz
and
sub
fwait
mov
mov
dec
sub
xchg
popl
pop
lret
push
sub
mov
jnp
fiadds
notb
pop
xchg
rcrb
xchg
jle
out
xor
or
cmp
sub
pop
mov
out
adc
lds
xor
mov
imul
inc
mov
cmp
roll
add
sub
js
sub
mov
je
repz
jg
test
pop
sbb
push
or
and
xchg
xor
inc
aad
xor
pop
xor
sbb
xor
sub
mov
push
mov
test
sub
lods
sbb
xchg
mov
shlb
pop
mov
mov
jle
in
hlt
test
mov
add
mov
cli
arpl
pusha
mov
push
xor
mov
rol
dec
stc
rolb
in
dec
sbbl
pop
inc
js
iret
fsubr
dec
add
fidivl
test
cmp
imul
dec
imul
ss
fdivrp
in
add
aam
pop
lahf
push
xor
push
or
sbb
cmp
or
mov
xchg
inc
sbb
cmp
jae
dec
add
sbb
jb
in
aad
inc
or
out
lcall
and
mov
xor
pushf
push
and
pop
mov
add
fadds
lds
clc
enter
addl
push
sub
push
loopne
jo
lret
sbb
lock
inc
or
cmp
int3
adc
xchg
pop
js
push
out
push
iret
add
jno
addr16
sub
and
push
pop
inc
scas
sbb
xchg
rorl
xor
or
add
lds
inc
sti
inc
mov
cmp
out
ret
in
into
xchg
imul
adc
xlat
lea
or
and
add
inc
in
pop
ror
jg
movb
cltd
xchg
fs
inc
mov
sbb
push
stos
out
popa
shl
pop
or
ret
xchg
jnp
adc
sub
push
adc
call
push
pop
addps
xchg
mov
adc
gs
xor
cli
stos
xchg
dec
or
cld
xor
pushf
inc
in
or
adc
and
in
mov
pop
bound
std
add
mov
inc
push
cmp
imul
insb
loopne
jg
scas
cmp
xor
pop
add
jnp
sbb
xlat
rcr
movsl
mov
or
mov
dec
stc
repz
mov
mov
mov
test
data16
xchg
inc
mulb
les
push
cld
xchg
and
push
dec
adc
pop
aaa
sbb
and
or
adc
sub
std
scas
add
decb
clc
sbb
mov
jno
ret
into
gs
enter
mov
xlat
fbld
xchg
or
nop
jnp
ds
xchg
pop
leave
insl
loop
out
mov
pop
mov
cmpsb
add
xchg
sbb
push
loop
add
xchg
mov
rclb
enter
popa
xchg
or
fs
xor
sub
sbb
aas
stc
clc
mov
insb
fisttpl
or
negl
xchg
orb
data16
out
fdivrp
out
repz
mov
call
arpl
dec
bnd
jge
scas
add
jnp
out
mov
lods
shrl
add
adc
cmpb
leave
push
insl
mov
xchg
daa
repz
push
cs
inc
sti
or
jns
xor
stc
sbb
mov
sbb
fldenv
xchg
addr16
mov
cmpsl
lods
adc
mov
sbb
repz
adc
or
jecxz
les
jae
dec
out
sbb
in
sub
lahf
mov
mov
sub
dec
aaa
enter
addl
les
ja
mov
sar
cmc
test
jns
lcall
push
xor
jmp
adc
lods
sbb
xor
pop
aas
push
xchg
lods
jle
out
stos
outsl
das
push
je
ficoml
mov
nop
mov
int
pop
pusha
cmp
stos
push
repnz
xchg
or
imul
pop
lcall
insb
sahf
lods
aaa
aam
mov
out
insl
xchg
and
push
imul
pop
push
push
lret
mov
mov
mov
fsubrs
decl
js
repnz
js
popa
pop
lods
cmp
mov
es
jno
nop
cli
push
mov
mov
punpcklwd
testl
dec
aaa
aad
in
mov
xlat
or
scas
xchg
mov
xchg
push
sbb
xlat
gs
adc
pushf
and
mov
inc
cmp
test
jecxz
aam
in
and
mov
std
lods
mov
sahf
mulb
cmp
pop
xchg
mov
mov
in
movsb
and
inc
mov
stos
adc
fs
inc
stos
jo
inc
ss
gs
mov
aaa
adc
sarb
jmp
subl
aaa
sbb
int
mov
dec
cmp
jge
dec
call
or
cld
cmp
ja
shl
or
rcll
loope
mov
jmp
fwait
jb
dec
cltd
and
lret
ret
pop
adc
gs
in
or
xchg
adc
std
lcall
jle
mov
inc
add
jae
in
iret
adcb
mov
dec
and
es
xor
gs
xor
enter
adc
inc
daa
mov
repz
call
lock
cmp
inc
and
pusha
dec
sbb
prefetcht2
fbstp
xor
add
jg
or
xor
adc
mov
imul
mov
push
or
mov
xlat
es
ds
dec
ljmp
jl
mov
adc
cli
loope
stc
bswap
or
push
cmp
stos
js
pusha
test
mov
cmp
imul
clc
inc
jl
adc
mov
mov
xchg
adc
pop
setns
insl
lcall
mov
arpl
loope
adc
mov
or
inc
lock
and
mov
and
push
imul
aaa
test
lahf
imulb
xor
fcmovnb
out
cmpsl
sahf
aad
pop
mov
jecxz
mov
sbb
adc
std
push
loope
cmp
cmp
cmpl
imul
pop
jp
std
fnstcw
ss
or
lds
adc
adc
inc
out
add
push
loop
lods
xor
imul
xor
movsl
ljmp
xchg
hlt
popf
jnp
icebp
jo
mov
repnz
dec
and
dec
es
mov
popl
adc
loope
push
daa
in
jo
outsb
repnz
ret
daa
es
and
dec
outsb
cmp
push
pop
add
push
jns
nop
inc
sti
inc
data16
in
sbb
and
subl
mov
repnz
and
out
out
jae
insl
sti
ja
loop
mov
pop
test
in
pop
mov
andb
jnp
xlat
cmp
jle
dec
loope
pop
aaa
out
sbb
inc
cmp
xor
pop
in
int3
inc
sub
xchg
clc
bound
pop
xchg
std
fnstcw
pop
add
mov
pusha
mov
push
mov
xlat
ret
dec
push
xchg
inc
mov
sub
icebp
xor
or
cmpb
hlt
xchg
js
jns
stc
mov
and
test
jne
filds
add
mov
in
dec
shll
jno
pop
dec
loopne
sub
mov
loopne
or
dec
and
pop
inc
adc
xchg
dec
adc
dec
cmp
pop
push
adc
and
dec
adc
push
push
in
and
jae
sbb
mov
inc
andl
xchg
mov
mov
push
mov
add
repnz
mov
negl
mov
jno
pop
dec
js
aas
pop
sbb
pop
aad
cltd
pop
pop
fninit
add
dec
test
jg
addr16
sub
mov
hlt
mov
jp
adc
mov
cli
clc
std
jl
mov
adcb
sti
pusha
subl
mov
push
daa
xchg
clc
xchg
or
add
pusha
add
mov
mov
test
loopne
jnp
xor
add
add
orb
fsubrl
jecxz
xchg
mov
xor
pop
int3
out
aas
lahf
les
pop
lods
aaa
inc
daa
addr16
sub
idivl
jg
mov
cmp
fdivrs
xor
xor
fsubr
jne
pop
mov
mov
outsl
dec
push
pushf
push
pop
mov
pusha
cmp
ret
inc
outsb
js
sub
fisttps
in
cwtl
gs
cltd
pushf
fcompl
movsb
jne
lods
aas
leave
negl
sbb
push
add
mov
dec
or
pop
movsl
sub
jmp
ror
mov
xchg
xchg
mov
in
jo
pop
mov
mov
and
cmpl
out
fcoml
sub
das
pop
sub
imul
popa
out
out
int3
out
iret
out
xor
aas
ffree
lods
xchg
ret
sub
jb
adc
movsl
mov
wrmsr
ret
adc
loop
loope
out
push
xchg
push
aas
xor
mov
fistpl
mov
pushf
cmpsl
sub
jmp
aaa
push
test
out
cmc
dec
rcrl
stos
jbe
mov
dec
shrb
and
movsl
xor
jmp
push
mov
cmp
adcb
insb
test
ret
popf
sub
in
ret
mov
adc
jge
popf
fbld
nop
sbb
data16
mov
cli
jl
pop
loop
cmpb
xor
pop
icebp
mov
jno
pusha
repz
xor
xor
mov
out
popa
or
ret
arpl
sbb
xchg
leave
call
gs
push
pop
add
stos
sbb
dec
sti
sbb
loop
iret
mov
jmp
mov
aad
into
aam
inc
sbb
sarl
mov
inc
or
outsb
cmc
lret
xchg
out
dec
fnstsw
outsl
adc
outsl
cmp
jl
pop
fsubrl
into
and
add
sub
xchg
dec
gs
movsl
js
dec
or
mov
mov
ljmp
mov
daa
sahf
imul
movsb
sbb
pop
dec
sub
or
push
mov
push
mov
dec
and
fiaddl
inc
addr16
sub
sub
sub
into
xor
pop
pop
lahf
mov
fistpl
pop
lea
in
add
add
fcmovnu
lock
pop
cmp
pop
jno
aad
pop
xorl
and
push
test
loop
sub
arpl
xor
test
mov
aaa
negl
cmp
js
aam
stc
popf
jne
cltd
lods
dec
inc
inc
jne
sub
push
mov
push
pop
dec
bound
fwait
and
and
scas
push
es
scas
addl
insb
mov
fiaddl
daa
mov
pop
icebp
adc
xor
cld
lret
pop
lret
idiv
dec
rcl
das
lods
insl
cli
jne
icebp
bnd
sub
mov
add
add
and
in
iret
data16
arpl
pop
pop
aad
aad
icebp
lcall
shr
pop
loopne
mov
gs
jae
pop
aaa
shlb
pop
movups
cltd
or
push
test
or
sub
lods
push
ret
movsb
cmp
pop
pusha
and
adc
xchg
push
cmpsb
outsb
faddl
jb
inc
outsb
push
jne
cld
fidivrs
sbb
inc
jae
sbb
sbb
lahf
or
mov
pmovmskb
jmp
cmc
icebp
jmp
mov
or
push
pusha
mov
mov
cmc
icebp
lcall
aad
pushf
aad
cmp
pop
mov
sub
mov
pop
mov
xchg
lods
jge
jno
mov
pop
lret
pop
jmp
mov
xchg
push
sub
push
inc
push
lret
and
inc
mov
xchg
mov
hlt
or
loopne
add
xor
or
lahf
inc
or
pop
cwtl
pop
orl
adc
lds
xchg
subl
jnp
popf
lods
in
push
push
jne
jnp
loope
push
adc
icebp
lahf
mov
dec
push
hlt
lahf
clc
lahf
push
xchg
ja
lea
adc
jg
not
adc
or
adc
cmp
sub
pop
sub
and
mov
cmp
outsl
js
dec
add
mov
xchg
pop
and
pop
mov
stos
cmp
or
popa
repz
clc
movl
mov
lret
pop
adc
outsl
or
push
sbb
repnz
or
jp
sahf
sbb
xor
push
inc
cwtl
int3
int
daa
stos
pop
mov
scas
xor
mov
imul
clc
call
nop
sub
mov
push
jnp
dec
add
mov
push
inc
sbb
push
inc
adc
mov
test
jle
sub
loope
cmc
push
jge
cmp
adc
repnz
in
testb
inc
mov
scas
pop
pop
and
pop
inc
xchg
or
dec
arpl
push
mov
sub
enter
stos
mov
inc
ss
mov
xchg
hlt
pusha
mov
pop
push
orl
ja
adc
rol
ss
into
jp
scas
sub
addr16
pop
mov
or
pop
jne
mov
out
xchg
mov
ficompl
icebp
pop
sbb
daa
lretw
into
ret
mov
ficomps
ljmp
daa
jnp
shlb
pushf
repnz
arpl
mov
daa
cs
std
popf
pop
ret
rcrl
mov
cmp
xchg
sti
dec
mov
mov
cltd
mov
pop
xor
pop
fwait
push
icebp
aad
push
cs
xrelease
popa
ljmp
cmp
jg
roll
xor
fwait
shlb
ss
xchg
sbb
or
mov
cwtl
getsec
rolb
xchg
jne
fnstcw
and
jl
pop
imul
out
ret
sti
xchg
cld
popa
jne
inc
jmp
cmc
icebp
cli
stc
mov
push
dec
and
sbb
cmp
pop
mov
rorl
pop
mov
out
xchg
xlat
neg
jo
add
fistpll
pop
les
jmp
pop
add
jmp
das
adcb
add
add
hlt
cwtl
dec
push
inc
sbb
or
movb
push
lds
pusha
pusha
jb
int3
out
aas
lahf
int
hlt
jns
inc
mov
jne
in
inc
jge
push
popa
inc
test
jp
aaa
ja
shlb
cmp
adc
lcall
nop
addb
scas
push
cmc
std
cld
push
push
push
ss
mov
nop
jnp
loop
pop
pushf
dec
cld
push
fsub
mov
mov
jae
call
lcall
std
sahf
aam
imul
jbe
mov
xor
nop
orl
jae
dec
mov
scas
cmp
cmpsl
arpl
sbb
imul
pop
cmpsl
pusha
leave
push
sbb
lea
in
imul
mov
adc
inc
adc
pusha
idiv
push
cmp
jmp
imul
insl
inc
jbe
inc
cmp
ja
fnstsw
call
cmc
data16
pop
lret
cmp
fnstsw
jle
lahf
sbb
neg
or
pop
mov
push
cmpsl
in
test
arpl
fdivrs
mov
xchg
test
sub
stos
fs
fisubrs
out
push
cmc
jg
lahf
fidivrs
mul
das
push
or
mov
mov
aam
test
in
movsl
out
movsl
sbb
pop
push
xadd
add
mov
std
cwtl
xorb
cmp
cs
xorb
outsl
stos
xchg
and
sub
or
xor
pop
push
sub
sub
fcoml
push
mov
adc
std
test
mov
lock
out
ss
dec
scas
stos
int
cmc
xlat
pop
shlb
mov
scas
jno
out
pop
xor
adc
icebp
movsl
dec
inc
mov
add
xor
scas
mov
xchg
and
mov
jnp
and
adc
scas
jl
xchg
test
mov
inc
fwait
pop
scas
or
dec
out
push
repz
dec
sbb
lock
lods
pusha
add
bound
cmp
test
mov
fbstp
xor
int
test
jno
outsl
pop
xchg
and
xor
push
imull
subb
scas
idiv
movb
fcmovb
jo
adc
je
in
mov
mov
mov
mov
lret
xchg
jb
ss
mov
mov
rolb
jg
clc
idiv
jbe
inc
mov
inc
or
xchg
sti
mov
xchg
jecxz
cmp
jnp
ret
mov
push
gs
ret
mov
lret
imul
pop
mov
xchg
aaa
pop
mov
movsl
shll
or
scas
jo
pop
mov
gs
jge
fbstp
xchg
mov
push
ds
aad
clc
int3
xor
cmp
jbe
adc
std
int3
fsubrp
inc
movsl
ret
push
pop
mov
ljmp
sub
adc
and
fdivr
cld
lods
add
outsb
xor
pusha
mov
jl
and
mov
cmp
stos
arpl
fsubrl
dec
add
dec
es
insw
stos
loop
bound
fldz
mov
data16
dec
cs
cltd
jl
lods
stos
mov
or
fisttpl
fistpl
push
flds
xor
sub
adc
mov
pushl
pusha
pop
mov
mov
repnz
fistpll
inc
rorb
out
pop
sub
mulb
movsb
cmp
in
rclb
sub
lods
out
inc
xor
aaa
js
decb
leave
orb
ds
jbe
xchg
xorl
and
jl
and
ja
bound
mov
jae
repnz
and
aam
sub
gs
mov
dec
pop
test
push
mov
adc
shlb
cmp
xchg
ja
adc
js
movnti
outsl
out
ljmp
sub
cmp
sbb
jl
or
call
adc
das
lret
adc
enter
or
jmp
repz
inc
imul
pop
popf
repnz
mov
xor
sub
push
add
aaa
leave
xchg
mov
add
pop
xchg
hlt
fcmovb
bnd
xor
inc
jg
int
pop
xor
add
loope
pop
int3
stc
push
negl
scas
mov
dec
adc
push
mov
pop
push
xchg
adc
test
cld
aas
fidivs
pop
mov
xlat
ret
aaa
xchg
xlat
dec
sub
adc
mov
or
negl
jb
or
arpl
jmp
lods
push
xchg
mov
movsl
sub
pop
sub
push
push
incl
pop
pop
bound
sub
js
cmp
cmpsb
movsb
test
xor
or
add
add
daa
test
pop
fcmovb
out
push
or
xlat
dec
mov
orb
xor
dec
mov
mov
mov
lcall
enter
mov
lds
and
sbb
clc
pavgb
addb
inc
add
sbb
add
dec
ret
mov
pop
shrb
pop
jae
push
pop
cs
sub
pop
or
aad
inc
or
mov
fstpt
mov
arpl
out
jae
sub
imul
xor
mov
cmp
push
adc
inc
jp
imul
jae
mov
mov
mov
jmp
sub
and
push
ja
adc
test
pop
fisubs
xor
sbb
outsb
arpl
dec
popa
repz
and
ret
cmp
inc
in
mov
push
jp
or
adc
dec
test
loope
jo
pushf
push
or
add
in
push
std
in
enter
rorl
sub
mov
sub
movsb
push
jp
mov
inc
out
sub
jae
xor
mov
mov
stos
and
repz
xchg
pop
fdivrl
movsb
mov
mov
sub
xlat
dec
and
cwtl
pop
or
adc
inc
stos
mov
lret
outsb
cli
mov
sub
mov
jmp
fnstcw
push
jns
or
in
jge
pop
cltd
pop
dec
out
insl
dec
mov
jl
std
sti
jmp
lahf
jns
div
lahf
mov
lahf
cmp
out
xor
jg
psraw
dec
sarl
xor
imul
or
adc
les
dec
cs
outsb
jle
pop
inc
repz
dec
fnsave
mov
xor
lcall
dec
shl
ljmp
lods
jg
clc
push
stos
add
icebp
jne
push
pop
mov
sti
arpl
xor
lret
lret
testb
mov
loop
pop
cmp
incl
je
sbb
push
xchg
xor
out
xchg
mul
xor
sbb
orb
inc
shlb
xchg
add
add
pop
adc
adc
dec
jae
sbb
add
sbb
cmp
mov
loop
or
and
ds
push
loopne
jmp
add
add
shrl
dec
push
cmp
push
fiadds
out
vcvttsd2si
out
lret
jecxz
inc
cmpsb
inc
in
add
xor
in
xchg
mov
nop
pusha
stc
sub
lea
push
xchg
call
cmpsl
adc
push
and
int3
xchg
mov
cmp
decl
pop
ss
jo
sub
sub
pop
pusha
int
aam
subb
adc
mov
mov
sbb
insb
sbb
pop
cmpsl
insb
xlat
and
std
inc
xchg
push
inc
jo
stos
dec
push
add
incl
add
cmp
mov
and
xor
rolb
pop
sti
inc
inc
pop
push
fdivs
dec
dec
andb
fimuls
push
dec
inc
mov
insl
push
cld
mov
push
js
stos
cld
rolb
adc
pop
sbb
sub
rorl
push
push
add
sbb
sti
dec
inc
mov
add
js
push
ret
push
add
out
pusha
sbb
xor
push
inc
jne
frstor
fimull
pushf
cmp
cmp
aad
and
mov
sahf
bound
shrb
out
clc
or
pusha
bound
cmpsb
inc
push
outsb
xchg
arpl
cmp
mov
in
scas
icebp
pop
cwtl
mov
xchg
faddl
sti
inc
jns
jno
pop
mov
add
insl
lods
xchg
aam
pop
ljmp
outsb
add
out
insl
adc
and
repz
mov
in
arpl
adc
js
mov
add
pop
or
out
mov
xor
cmpsl
insl
push
inc
daa
aaa
push
mov
add
push
iret
ja
arpl
lcall
cmp
adc
pushf
out
sbb
popa
mov
mov
push
dec
pop
mov
xchg
je
pop
xchg
stc
enter
add
push
repz
test
mov
dec
xor
aas
xor
lret
test
punpckhbw
dec
jb
push
out
mov
out
inc
pop
push
and
mov
mov
mov
sub
clc
out
jb
sub
dec
shr
mov
push
sbb
jle
sbb
sbbb
ret
movsl
adc
daa
cmc
xchg
ss
adcl
pushf
mov
jecxz
cs
jnp
xor
fstps
sbb
inc
cmp
dec
jp
xchg
fldenv
add
dec
xchg
sbbl
jle
inc
jnp
in
or
push
push
add
pop
out
adc
lahf
inc
dec
sti
pusha
mov
mov
push
insl
pop
iret
adc
lret
ja
dec
lahf
mov
add
and
insb
xor
sbb
push
add
cmp
inc
rorb
inc
dec
call
ds
cmp
out
loop
jp
xor
sbb
xchg
pop
orl
mov
rcrl
xchg
je
sbbw
addr16
loope
jo
sub
inc
shrl
jmp
sub
sub
aam
in
std
fwait
sbb
mov
data16
sti
enter
insb
sbbl
mov
cltd
jg
inc
dec
add
mov
ja
mov
loop
or
mov
mov
inc
sbb
aam
je
lret
aad
repz
subl
imul
mov
fistpll
cmp
mov
into
xchg
jge
add
mov
sarb
fwait
aaa
cld
dec
sub
mov
inc
in
cmp
test
xchg
loop
lahf
fwait
and
clc
or
mov
scas
jno
les
fisubrs
cmpsl
in
inc
and
jae
inc
xor
mov
push
popw
or
imul
aaa
xor
sub
out
and
pop
or
arpl
dec
lock
sub
lods
add
hlt
mov
cmp
cmpsb
out
push
mov
jno
pop
mov
insl
mov
call
ret
or
mov
pop
mov
jno
pop
pushw
enter
iret
stos
xchg
mov
pop
sahf
add
pop
hlt
xor
fs
lods
test
lock
mov
je
jbe
push
test
incb
jl
push
jmp
out
repnz
cmp
scas
xor
repz
popf
inc
mov
ret
cmovs
lea
mov
fistl
fsubs
scas
jmp
subb
mov
push
push
jno
repz
xchg
arpl
jnp
mov
mov
nop
jge
repz
jnp
loopne
movsl
pop
mov
test
mov
orl
jecxz
clc
ljmp
mov
cmp
scas
daa
xchg
jle
bound
jb
pop
xchg
leave
insl
mov
sub
sbb
stc
scas
pop
jge
sbbb
xchg
sbb
dec
jo
mov
ljmp
pop
fldl
mov
xchg
cmp
fcmovnb
push
xlat
fiaddl
bound
out
add
sub
test
sub
addr16
ja
icebp
inc
mov
aaa
sahf
adc
daa
jbe
pop
dec
xchg
mov
int
sub
sbb
jmp
lahf
lahf
push
out
adc
xchg
jo
scas
or
stos
dec
push
jne
data16
mov
daa
insb
inc
loop
cwtl
dec
sub
sbb
iret
aaa
test
adc
test
adc
rolb
jecxz
add
out
stc
cmp
loopne
jnp
iret
test
push
clc
scas
test
mov
and
xchg
push
cld
push
lret
mov
fs
and
or
addb
sub
popa
sub
call
mov
fisubs
adc
cmpsb
mov
cmp
mov
movsl
mov
add
call
jbe
rorb
enter
outsb
inc
cmp
sub
mov
imul
or
mov
dec
faddp
jl
das
rcrl
xor
xrelease
or
out
sbb
cmpsb
sbb
adc
sub
ret
jg
sbb
mov
xchg
aas
sbb
insl
imul
jl
or
and
pop
inc
dec
js
ds
in
roll
data16
imul
mov
shrl
fnsave
pop
pusha
push
push
xorb
test
test
mov
ss
xlat
jo
pusha
dec
cmp
repnz
dec
jnp
mov
add
imul
sbb
lahf
add
xor
pop
mov
sbb
add
in
dec
inc
xlat
jae
lahf
xlat
test
pop
pop
add
adc
add
push
mov
xchg
jnp
mov
push
pop
inc
mov
jo
or
mov
fwait
jns
lcall
inc
mov
mov
test
pop
movsb
scas
jae
aas
mov
aaa
test
adc
mov
cld
or
cmp
in
cmp
dec
lcall
clc
ds
or
xchg
xchg
in
cli
lahf
xor
fcompl
pop
jl
sahf
dec
or
ds
inc
mov
jg
cmpsb
sbb
or
cwtl
push
mov
pop
cli
and
jmp
sbb
int
jno
add
mov
mov
jmp
lret
mov
adc
lret
pop
pop
clc
pop
cmp
mov
push
push
pop
cmp
xor
mov
pop
cmp
jge
mov
jae
sub
rorb
scas
js
loop
add
push
sbb
and
sub
cwtl
cmp
aaa
data16
push
iret
dec
pop
in
push
push
sub
mov
dec
fsubr
jge
add
jl
inc
cmp
xchg
out
scas
mov
dec
out
fcmovnbe
leave
push
jge
mov
mov
adc
pop
dec
inc
xchg
jo
sub
add
mov
insl
movsl
mov
push
call
lret
push
xchg
jle
pop
mov
inc
aam
addr16
je
inc
dec
jp
lea
ja
pop
repz
add
lods
mov
inc
in
decb
add
push
fwait
jle
adcb
dec
pop
pop
dec
push
mov
mov
jae
out
mov
add
push
fildl
outsl
dec
rol
shl
mov
and
pop
xor
xchg
adc
mov
mov
mov
popf
inc
dec
add
pop
add
cwtl
aas
test
inc
rclb
jmp
push
je
ret
aaa
xchg
xchg
add
jg
loope
mov
xor
ret
adc
sub
mov
mov
in
push
push
dec
jbe
imul
push
and
pop
enter
xchg
push
negb
cmp
xchg
mov
clc
and
stc
inc
and
push
test
int
or
loope
fsts
fadd
fidivrs
scas
ret
fiadds
fmul
je
scas
inc
mov
xchg
xchg
push
pop
bound
adc
sbb
push
ja
sub
orl
ljmp
pop
xor
jmp
lods
popf
outsb
xchg
push
js
clc
mov
cmp
lcall
sbb
xchg
mov
push
sub
enter
sbb
dec
rcrb
es
fwait
push
sbb
pop
outsl
xchg
push
bound
push
xchg
push
dec
push
int
pushl
test
movsl
mov
push
cltd
lock
fcmovu
mov
mov
flds
lret
movsl
inc
lret
adc
cmp
cmp
filds
push
notl
push
int3
mov
cmp
dec
adc
clc
pop
stos
fisttpll
fisubs
mov
fcoml
xchg
pop
int
mov
jge
xchg
xor
pop
inc
ret
ja
shrb
lret
cmp
mov
push
inc
inc
aaa
in
mull
iret
jle
jmp
mov
sbb
cmpsl
fldl
outsl
in
push
sbb
mov
dec
js
stos
xchg
and
dec
les
mov
std
mov
movsb
dec
adc
cmpsl
bound
lods
stc
sbbb
int3
inc
sbb
xlat
add
repnz
fmull
orl
sbb
ret
xor
sub
cmp
movsb
dec
sarb
adc
mov
push
mov
pop
xor
push
or
adc
outsl
out
fs
sbb
dec
jb
enter
mov
aas
orb
int
push
xor
xor
push
or
mov
int
mov
rclb
pop
and
ja
mov
insb
ret
push
in
bound
jle
inc
and
scas
dec
jl
jl
sbb
or
mov
inc
adc
das
add
xor
out
mov
ret
mov
divl
cwtl
cmc
stos
cmp
test
std
iret
mov
push
test
pop
lahf
fdivrl
inc
popf
mov
mov
out
aaa
sti
ret
in
mov
ficoms
ja
mov
lds
sti
shlb
ds
and
sbb
in
rolb
or
add
mov
sbb
mov
into
faddl
dec
adc
fcoms
popa
inc
ss
push
or
or
pop
xor
arpl
daa
popa
and
divl
in
push
and
daa
test
push
jne
insl
fisttpl
jge
lods
lds
frstor
push
push
popa
sbb
add
repnz
pusha
dec
add
push
xchg
dec
push
addb
popa
or
mov
dec
add
adc
dec
fildll
xor
int
jne
sbb
mov
lods
inc
sbb
pusha
jnp
int
xlat
jae
or
rcll
inc
xchg
ss
insl
sahf
aam
sbb
mov
inc
adc
fxch
push
sbb
add
ljmp
sbb
roll
jecxz
cmp
push
push
mov
pushw
or
outsb
fistps
pushf
shr
adc
cltd
mov
out
stos
dec
out
jnp
sbb
sbb
fsub
push
cmp
cmc
jo
push
aad
pusha
fwait
jmp
mov
xlat
lock
adc
jp
push
fs
dec
mov
pop
mov
lea
xlat
push
mull
jge
jl
push
add
faddl
and
aas
cs
addl
cmpsl
mov
mov
in
cs
mov
lods
lock
pop
sbb
adc
mov
iret
daa
mov
je
ret
out
push
mov
xchg
arpl
mov
or
sbb
sub
dec
outsl
sbb
js
ror
jno
mov
repz
out
cmpsb
jnp
xchg
lds
pop
xlat
and
add
scas
dec
les
jo
push
add
mov
and
repnz
test
out
inc
cmp
dec
mov
or
pop
in
cs
mov
sbb
push
loopne
testl
and
sbb
xchg
mov
inc
pop
shlb
stos
ss
adc
push
mov
sub
mov
test
sbb
push
insl
icebp
mov
fmuls
and
adc
xor
lea
fldt
or
push
cmc
add
xor
and
push
push
push
mov
shl
inc
pushf
sbb
lds
arpl
dec
daa
mov
pop
inc
inc
notl
mov
inc
mov
jnp
ret
push
fisttpl
pushf
imul
mov
fcoml
mov
call
mov
inc
xor
int3
outsb
rorl
stc
sub
cli
mov
sti
pop
cmpb
inc
fsubl
mov
rolb
outsl
push
addl
inc
and
sbbb
int
mov
xor
insb
and
popa
jne
push
sbb
xlat
nop
adc
sub
lds
loop
push
scas
es
pop
aaa
outsl
xor
push
xchg
mov
inc
movsl
jne
add
stos
js
cmp
xor
jno
mov
mov
out
pop
inc
test
add
mov
and
mov
dec
mov
pop
lret
insl
sbb
bound
pop
enter
pop
mov
or
imul
rclb
dec
mov
mov
out
mov
push
adc
adc
pusha
xchg
mov
fisubs
jae
pop
lock
aaa
adc
les
clc
outsl
shlb
ficoml
xchg
in
or
andl
fisubrs
loop
mov
popl
mov
adc
mov
dec
icebp
daa
jg
adc
ja
mov
ss
mov
jl
lea
or
jo
add
enter
inc
or
sbb
jecxz
pop
mov
jb
adc
xor
jg
fisubrl
mov
mov
movsl
cmp
and
mov
xor
ds
fucomp
or
ljmp
cmp
sbbl
sbb
xorb
sti
icebp
push
push
cmp
sub
pop
clc
mov
add
sarl
jne
cmpsl
out
cmc
push
in
push
fbld
jge
jne
and
cmc
xchg
xchg
push
or
xor
frstor
push
icebp
ror
pop
mov
fistps
xor
and
jle
push
jns
js
leave
stos
mov
dec
and
pop
ds
inc
fsts
mov
xchg
or
movl
les
jne
inc
fisubs
pop
sarl
jp
mov
nop
outsl
add
addl
push
xchg
and
cmpsb
loopne
lock
pop
and
call
push
sahf
fcompl
scas
xchg
cmp
into
xor
mulb
std
or
enter
mov
lahf
enter
mov
cmc
push
xchg
std
or
sti
lds
imul
xchg
adc
pusha
mov
sbb
pop
addr16
divl
lea
cld
push
ret
mov
dec
mov
fdivs
fistl
ret
and
mov
jbe
das
jecxz
out
inc
sti
int3
xor
jg
out
add
cmpb
dec
mov
xchg
out
stc
xchg
into
repnz
mov
mov
sbb
inc
dec
jbe
add
or
rorb
movsb
inc
lods
push
test
ret
mov
out
add
cmp
sarl
pop
fsts
cmp
call
mov
sbb
pop
push
into
xchg
mov
ja
fwait
stc
movsl
sub
pop
mov
xor
push
shlb
mov
push
adc
jge
loop
subb
push
std
arpl
cwtl
inc
jno
dec
loope
lock
mov
clc
bound
push
add
out
into
movsb
outsb
add
cmp
lods
fistl
jns
pop
xchg
mov
add
adc
je
cmpsl
fldt
iret
cmpsl
lcall
sti
adcb
jle
icebp
daa
mov
hlt
lahf
and
mov
clc
jl
and
rcrl
cmp
in
inc
pop
out
cmp
jp
push
sbb
or
fldenv
mov
fimull
fiadds
pusha
mov
loope
sbb
movsb
insl
shrd
cmp
in
jae
gs
lret
add
sahf
sub
inc
cmp
cmpb
push
inc
stc
rolb
ret
in
je
pusha
pop
xchg
std
aaa
jno
out
lea
xchg
ja
fidivrs
and
push
push
repnz
push
pushf
lea
mov
adc
pop
mov
and
mov
adc
mov
push
into
and
mov
push
xchg
inc
inc
xchg
add
adc
cmp
hlt
inc
mov
mov
sub
or
cmp
insb
jno
insb
adc
jbe
rorl
mov
lcall
xlat
movsl
fimull
nop
sarb
mov
xchg
cmc
out
lock
jg
andl
ret
sbb
and
fisubl
fcompl
and
mov
pop
push
cmp
jnp
cmp
cltd
fwait
mov
pop
adc
add
sub
int3
jecxz
loopne
ret
inc
sahf
rcl
cmpsb
xchg
in
sbb
jo
mov
adc
adc
add
aad
ss
push
imulb
stc
out
pop
rcrl
lahf
or
adc
scas
repnz
mov
sbb
ffreep
mov
jl
xor
fcmovnb
mov
push
in
sbb
xchg
inc
int
push
jg
and
sub
pop
lret
cmp
out
data16
test
jmp
es
mov
ja
jne
mov
adc
dec
mov
sti
xor
decb
or
jo
dec
pop
xor
in
mov
cmpsl
fwait
xchg
sub
mov
pop
pop
dec
aad
jg
sub
xchg
sahf
cmpsb
dec
pop
sahf
fcomps
imul
inc
dec
sar
nop
aam
pop
cmp
pushf
movsl
mov
fsubr
pop
popa
sub
bound
sti
push
fcompp
outsb
jle
cmpb
mov
xchg
mov
rolb
std
and
movsb
mov
je
fimuls
mov
pop
or
cmp
sub
fwait
mov
cli
lret
pop
sub
push
cmpl
and
adc
jmp
push
dec
push
addr16
inc
fcomip
mov
addr16
mov
pusha
xchg
xchg
add
jl
jge
cld
sub
dec
cmp
sub
push
fucom
loopne
gs
cmpsb
ljmp
dec
dec
repz
mov
jp
adc
push
adc
js
std
dec
in
push
lock
outsb
shr
jp
das
cwtl
mov
pop
push
test
bound
sti
pop
lock
clc
fidivrs
loopne
pop
adc
into
out
test
popf
push
test
adc
inc
mov
iret
insb
jb
jmp
adc
adc
mov
and
rcl
adcb
std
shl
add
and
mov
rcl
ss
sub
in
rcrl
insl
mov
or
aam
popf
enter
shr
pop
pop
iret
cmp
jnp
jo
popf
mov
in
jnp
jg
mov
test
shufps
loope
fildll
ret
in
enter
mov
add
pop
leave
jge
jae
fnstsw
imul
ss
jp
cmp
mov
pop
mul
mov
xchg
std
into
inc
pop
mov
lods
in
fists
sahf
fdivrp
in
pusha
mov
sahf
inc
adc
push
mov
sbb
clc
das
testl
sbbl
loopne
xchg
add
lock
mov
jl
cmp
rorl
pusha
lret
mov
xor
mov
xor
ja
inc
mov
movsb
cmpsb
jl
or
rol
mov
les
mov
pop
cld
xchg
jae
jp
and
mov
xchg
outsl
or
pop
xor
out
fidivs
out
sbb
lahf
jbe
push
daa
int
lods
xchg
sbb
xlat
inc
pop
insb
pop
or
out
cs
fcmovb
shrb
xor
ja
aas
mov
fistpll
dec
cmp
cwtl
mov
addr16
and
mov
nop
jns
dec
sti
ret
and
jns
lods
pushf
test
dec
adc
outsb
fnstsw
xor
lea
daa
dec
loope
dec
sti
repz
jno
les
or
push
xor
add
add
into
dec
jnp
fidivrl
pop
shr
clc
adc
cltd
adc
mov
mov
dec
addl
inc
inc
ds
dec
int3
fisttpl
es
into
dec
int
outsb
sbb
push
enter
cwtl
xlat
xor
and
cmc
pop
test
dec
inc
jge
cli
xchg
mov
jae
jg
fldenv
mov
jne
push
adc
and
jae
or
lret
xor
add
enter
xchg
mov
xchg
or
inc
add
popa
mov
sbb
and
lahf
add
sub
cli
mov
inc
out
roll
fnstcw
aas
xchg
or
mov
xchg
into
fidivl
dec
imul
sbb
fwait
lcall
lahf
cld
out
jnp
adc
sub
je
pop
inc
inc
clc
sar
mov
mov
out
testb
adc
arpl
and
mov
in
xlat
hlt
and
mov
jnp
jnp
pop
pop
and
push
adc
icebp
stc
roll
cltd
int3
test
out
dec
push
cmovae
dec
jmp
in
ret
mov
call
pop
jge
mov
jge
rcrl
popf
outsb
dec
in
add
push
fidivs
pop
hlt
int3
fs
imul
cmp
imulb
les
mov
into
jae
add
rorl
xchg
add
xor
mov
and
cmp
aad
cmp
pop
mov
cmp
cli
rclb
ret
mov
xor
mov
aad
mov
inc
push
outsl
mov
dec
push
ss
mov
mov
and
stos
out
and
jge
pop
jle
aaa
fistl
mov
add
xor
psraw
inc
xor
adc
lahf
cld
repz
bound
popf
in
push
and
movsb
out
inc
mov
cmp
and
aad
and
clc
sbb
cltd
sub
dec
jle
lea
inc
in
sbb
in
adcl
jmp
dec
and
inc
imul
in
cmp
adc
cmc
push
sbb
inc
mov
inc
xchg
inc
data16
in
data16
flds
and
ret
xchg
mov
idivl
shl
jbe
cld
rorb
jno
or
mov
daa
mov
push
cmp
jg
daa
mov
aas
or
repz
dec
scas
or
mov
addl
xchg
and
cmp
cmp
push
jp
test
jbe
js
fcoml
jmp
push
repz
jl
dec
stc
add
or
xor
dec
xchg
jns
popf
mov
inc
jns
cmpsl
lret
inc
insl
xlat
imul
in
push
cwtl
mov
ja
mov
mov
cmpb
rorl
repz
nop
pop
cmp
scas
and
loope
repnz
jge
rolb
mov
pop
test
iret
mov
pop
adc
fisttps
shll
mov
jle
fnsave
or
pop
lock
pop
or
dec
add
lea
dec
add
call
stc
call
cmp
inc
cmp
add
aam
mov
pop
jg
xchg
xchg
popf
sbbl
loopne
or
jl
adc
cmp
lahf
mov
add
xchg
test
fwait
out
jno
notl
xor
dec
jnp
mov
mov
push
rorb
ja
pop
loop
lret
lcall
dec
stc
dec
popf
addr16
rcl
mov
and
ficomps
mov
imul
mov
jl
jmp
loopne
testb
loope
adc
push
inc
mov
cmp
std
dec
rol
inc
movsb
clc
shll
pop
jb
add
and
pop
pusha
pop
push
lock
sub
and
jg
lds
mov
or
ret
xorl
xchg
leave
or
test
jno
lret
das
in
pop
or
mov
jmp
jo
or
and
aam
cltd
negl
cmp
xor
aas
mov
cmc
xor
xchg
adc
fbstp
cmpsb
ds
add
es
jl
mov
pop
jmp
test
sbb
aam
pop
adc
jnp
idivl
cmp
and
mov
xchg
loope
ror
enter
nop
cld
mov
jae
movsl
pop
or
int
flds
clc
xchg
leave
dec
lcall
sti
movsb
fucomp
outsb
jl
jae
jp
loop
sahf
dec
mov
fs
daa
in
cltd
cmc
cmovbe
inc
enter
movsb
daa
add
stos
iret
ljmp
mov
int
mov
mov
mov
xchg
jmp
push
mov
pop
push
adc
in
fstps
push
popf
mov
dec
xchg
sbb
pop
add
add
mov
incl
fnstsw
xor
repnz
jl
data16
lods
inc
out
push
test
mov
aad
pop
rorl
insl
or
jge
jmp
outsl
mov
mov
xchg
lcall
xor
cmp
and
dec
movsl
or
cwtl
test
mov
or
adc
and
sbb
add
loope
cltd
mov
xchg
xchg
movsl
push
repz
adc
cmc
cmpsl
repz
dec
arpl
mov
cmp
test
push
cmc
mov
lods
and
xchg
movsl
inc
test
fcompl
fs
jbe
into
iret
in
dec
cwtl
dec
addr16
call
inc
sbb
pop
jae
dec
mov
iret
adc
addr16
pop
sahf
enter
sarl
int3
xchg
mov
stos
pushf
in
fldcw
in
mov
iret
outsl
es
jmp
aad
adc
jne
add
cmp
push
cmp
push
dec
push
or
cmp
arpl
xor
sub
dec
push
movsl
xor
sbb
out
xor
or
dec
movsl
loope
enter
cmp
xor
xchg
jmp
mov
shl
push
lret
push
sub
and
out
mov
cld
sbb
or
int3
das
mov
jb
xor
push
add
mov
adc
pop
dec
out
insl
dec
add
xchg
icebp
ljmp
leave
sub
fdiv
adc
ja
lret
mov
jb
test
inc
icebp
xchg
mov
test
test
sub
mov
xchg
cmp
cmp
xchg
test
xchg
jmp
and
mov
repnz
fnstenv
mov
jbe
sub
idivb
sub
jp
add
insl
sub
push
mov
cwtl
push
dec
mov
xchg
mov
in
pop
push
mov
in
loope
and
lret
scas
sbb
shrb
loop
sbb
add
lahf
mov
sarl
jne
lret
aaa
jnp
dec
and
add
inc
dec
sahf
test
leave
add
jno
mov
mov
inc
push
cmp
pushf
outsb
in
inc
out
repz
and
pop
lea
cmp
push
push
sub
mov
dec
lcall
int3
bnd
sbb
in
and
mov
fidivrl
hlt
movsl
and
cmpsb
mov
sub
push
xchg
into
cmc
push
out
mov
adc
scas
cmovge
or
adc
lcall
fs
call
dec
ds
xor
jmp
cli
arpl
and
sub
sub
cli
pop
cmp
movsb
sbb
inc
hlt
push
or
loopne
adc
js
decl
bound
cmpb
aam
arpl
xchg
pop
push
aas
sahf
das
fwait
arpl
sub
mov
lret
js
into
sahf
sahf
mulb
aam
dec
pop
addr16
add
xchg
pop
xchg
pop
test
push
inc
scas
push
mov
mov
shlb
pop
jg
or
sub
out
js
push
cmovp
ss
lret
ja
rcrl
mov
das
push
mov
shr
xor
fiadds
xchg
cmpsl
fsubl
in
mov
jg,pt
push
aas
and
mov
xchg
data16
int3
mov
leave
ljmp
fs
sbb
push
imul
xchg
call
es
jbe
fwait
imul
or
rcl
push
dec
xor
jne
push
mov
out
ss
aaa
pop
das
enter
push
popa
mov
pop
mov
jno
inc
cmpsb
mov
scas
xchg
pop
imull
int3
addl
fs
jmp
adc
subb
rclb
leave
in
test
scas
divb
clc
cld
jp
andb
aas
lods
push
nop
in
inc
pushf
mov
shrb
icebp
add
inc
ficompl
popa
iret
pop
pop
vprotq
imul
cmc
and
adc
mov
scas
pop
inc
jmp
dec
lds
cltd
push
push
and
jmp
jae
insl
mov
daa
mov
stos
fsubrl
popa
sub
test
mov
sahf
inc
inc
push
push
pop
dec
lahf
std
cli
xchg
sub
xchg
stos
mov
aad
jo
cwtl
sub
push
cmp
push
dec
mov
es
pop
stos
push
loop
sub
sub
in
cmpsl
cwtl
lea
pop
aaa
or
gs
cmp
and
xchg
insb
subl
mov
mov
cmp
mov
popa
mov
repz
aad
stc
adc
je
cwtl
sahf
cmp
icebp
scas
jae
pushf
popf
add
push
aam
aad
or
dec
push
test
das
mov
sahf
pop
mov
mov
scas
xor
add
enter
jne
xlat
xchg
xor
js
jge
aam
inc
xchg
cmova
jle
inc
pop
inc
ds
xchg
arpl
adcb
inc
xchg
jns
test
mov
test
add
jne
push
mov
fwait
xor
mov
out
imul
pushf
adc
or
xor
mov
xchg
cmp
xchg
mov
ds
aam
cmp
mov
jmp
mov
mov
jge
sub
jnp
xor
inc
push
mov
cmpb
mov
sub
sarl
lods
fsubrl
or
sbb
sub
xor
pusha
filds
cmp
and
leave
push
repnz
cwtl
jmp
pop
inc
hlt
mov
adc
sub
jbe
jp
repnz
pop
hlt
mov
aam
bound
jae
mov
addl
xchg
movsb
fnsave
xchg
mov
iret
jmp
adc
inc
xchg
arpl
mov
sbb
and
daa
mov
cmp
push
push
rorl
or
lea
imul
movsb
push
adc
inc
frstor
cltd
es
je
add
daa
arpl
jo
mov
mov
jnp
fs
sbb
lcall
stos
and
ret
popa
jg
push
push
mov
add
fildl
jb
inc
xorb
jns
sti
ds
mov
lcall
mov
lods
push
add
push
mov
out
push
bound
cltd
and
sbb
add
cwtl
test
add
adc
stos
int
sub
cmp
mov
imul
pop
cli
test
popf
aam
jns
push
in
xor
xor
lods
dec
sub
test
repnz
stos
hlt
or
sbb
imul
ret
test
imul
insl
mov
push
rorl
out
test
pop
aam
mov
scas
mov
int3
hlt
mov
jg
outsb
lds
and
xchg
pop
sub
xor
lcall
movl
les
mov
jmp
fmuls
xor
or
scas
sbb
mov
push
out
std
push
ds
in
out
std
sbb
and
out
mov
cwtl
jns
test
pop
adc
mov
sahf
mov
in
push
add
cmp
inc
pushf
int3
mov
sub
jmp
leave
and
jb
cwtl
mov
inc
cmpsl
fcomp
fisubl
adc
or
adc
xor
push
outsl
mov
push
add
arpl
cmp
mov
jmp
sbb
ret
shr
xor
shl
push
push
arpl
aam
daa
xor
rcrb
ljmp
adc
mov
xchg
shrl
fnstenv
les
sbbb
fs
xchg
inc
sbb
or
or
cmpsb
pushf
mov
sbb
nop
and
out
xor
stos
into
dec
les
out
cmp
xchg
sbb
sub
xlat
hlt
test
and
sub
add
push
lahf
lret
cltd
inc
mov
gs
cmp
push
lret
lret
mov
shll
test
lret
lea
mov
dec
int
dec
imul
mov
ss
fimuls
sub
jp
lcall
fwait
lds
popa
jbe
jb
pop
push
push
pop
xchg
xchg
mov
sbb
sbb
stos
daa
and
jne
cwtl
loope
xchg
dec
sub
dec
int3
jae
loope
lock
gs
mov
jbe
mov
scas
adc
xchg
fdiv
xchg
mov
xor
scas
cmp
jbe
sbb
cmp
jbe
xchg
divb
pop
xchg
loop
push
pop
int
das
loopne
lods
popl
in
scas
shrl
inc
mov
lret
cwtl
push
jae
add
das
mov
cwtl
je
and
dec
jae
push
or
mov
and
lea
push
pop
pop
ds
add
arpl
cmpsl
jb
lock
adc
sbb
pop
icebp
push
es
sahf
mov
sbb
out
aaa
popf
xor
das
xor
ds
sbb
rclb
aas
inc
cwtl
frstor
mov
pusha
pop
rorl
mov
imul
nop
adc
push
jmp
jle
stos
xor
out
adc
stos
mov
pop
xchg
aad
xor
lods
mov
mov
sbb
mov
mov
mov
adc
test
insl
jl
pop
stos
sub
popa
in
cltd
scas
sub
loop
mov
sbb
aas
mov
mov
xor
clc
sar
dec
stc
pop
xor
es
das
scas
arpl
jnp
mov
pop
mov
jns
pushf
sahf
pop
nop
lods
mov
pop
mov
adc
adc
pop
push
lret
jns
mov
pop
adc
add
out
xor
sbb
repnz
xor
aas
add
or
stos
jecxz
xchg
shrl
push
push
mov
arpl
loope
std
mov
into
jecxz
call
cmp
xlat
stc
pop
iret
stos
mov
jp
xor
xor
push
or
xchg
fprem1
cmp
testl
jg
mov
xchg
cmp
xchg
jp
pop
pop
call
xchg
add
dec
adcl
scas
cmp
lds
jb
imul
repnz
pushf
out
mov
dec
clc
jnp
push
jbe
scas
dec
in
dec
movsl
stc
or
sbb
xchg
push
jae
sar
ja
gs
mov
inc
adc
popa
push
push
cltd
cmp
das
nop
fdiv
in
mov
add
imul
pop
lods
rclw
xor
cmp
pop
pop
or
scas
pusha
mov
or
jb
sbb
pop
rolb
fisubl
mov
cli
push
sub
lds
push
int3
ret
dec
repz
mov
insb
pop
dec
mov
inc
push
sbb
or
iret
popf
and
bound
sub
mov
mov
mov
sbb
and
or
push
iret
mov
enter
mov
push
sbb
xlat
lock
in
movsl
lret
sub
sbb
sbb
ja
adc
into
lods
scas
add
fsubs
pop
inc
push
xchg
adc
adc
pop
repz
fmull
push
push
test
icebp
dec
cmp
mov
ret
xchg
das
mov
add
bound
scas
push
add
imul
jnp
dec
ret
pushf
dec
cmp
cmp
sahf
stos
push
mov
dec
jns
pushf
cmp
popa
fmuls
scas
fmulp
push
push
pop
outsb
adc
jecxz
xlat
inc
sti
sahf
jne
jg
jp
pop
mov
jne
and
xchg
and
sarl
mov
cmp
mov
sbb
aaa
jns
mov
addr16
pop
cmpsl
rep
sub
pop
in
imul
pop
bound
lods
imul
jp
ret
imul
lret
rcrl
mov
popa
mov
and
mov
sub
jg
push
mov
pop
xor
lods
mov
iret
gs
testb
out
fsubrs
iret
mov
or
fldt
xor
or
int3
jne
es
adc
xchg
les
divb
adc
arpl
mov
sub
mov
insb
pop
imul
adc
fs
mov
mov
and
inc
xor
pop
sub
sbb
mov
test
xor
cmpsl
loope
cmp
cmp
mov
xchg
mov
cmp
sub
pop
bound
dec
and
mov
ds
xchg
fstpt
out
push
push
adc
bound
popa
out
cmc
fnstcw
int
xchg
xchg
pop
xchg
das
lret
stc
pop
dec
cmc
jg
mov
lret
jb
fbstp
fldl2e
inc
push
fwait
inc
cmp
cmp
lods
and
stc
shll
pop
mov
fisubs
fidivl
out
xchg
push
fs
in
loop
shll
dec
ret
and
call
xchg
sub
lcall
cwtl
push
mov
and
mov
sbb
mov
mov
lret
jbe
jo
addr16
out
jbe
mov
push
cltd
rcrb
sub
int
lods
dec
xor
add
pop
cmpsb
inc
fwait
hlt
fdivrs
mov
push
aaa
mov
jo
pop
sub
xchg
push
rorl
xchg
es
les
movl
insl
dec
ret
cmp
pop
daa
imul
imul
jno
pop
inc
inc
cld
in
aad
sub
and
bound
aaa
pop
and
scas
xor
stos
cmp
into
enter
inc
loope
rcrl
decb
inc
dec
xchg
popa
dec
pop
pushf
sub
jae
fstps
bound
push
in
cltd
and
inc
lods
mov
xor
divb
or
cmp
xchg
adc
or
sbb
fwait
adc
test
adc
bound
mov
push
test
js
push
rolb
xlat
jl
shl
push
mov
jns
adc
xor
push
outsl
arpl
cmp
aaa
sub
jmp
adc
jne
adc
fs
jge
mov
inc
stos
inc
repz
pusha
mov
pop
out
test
and
in
rcrb
dec
test
push
repz
push
adc
lds
popf
add
cmc
enter
je
into
fsts
add
fidivl
fsub
lds
in
fnstsw
imul
xor
sub
subl
or
fs
adc
lds
shlb
xor
sti
pop
rcll
pop
jae
sub
or
xor
jmp
cmp
or
xchg
cmp
pop
push
cwtl
ret
rcrl
jl
fdivs
and
jns
fstpl
mov
push
xor
into
cs
mov
lods
xor
push
pop
negb
dec
mov
mov
ss
pop
mov
hlt
ret
bnd
cmp
xor
in
push
sbb
adc
je
lret
push
call
mov
pop
iret
adc
imul
xchg
push
inc
outsl
cmp
in
jns
imul
in
movsb
push
mov
hlt
push
outsl
ds
mov
or
pop
loopne
mov
xchg
pop
stos
lock
mov
xlat
stos
xchg
in
and
sub
or
bound
andb
add
cmp
ljmp
or
push
sub
push
dec
push
fstl
pop
cs
xor
movsb
fmuls
jp
pusha
arpl
ss
fisubs
adc
lahf
cmpsb
push
test
testb
sub
jge
cmc
jle
and
dec
out
push
mov
pop
mov
movsl
daa
mov
ljmp
aaa
into
and
bnd
xchg
popf
pop
dec
dec
mov
inc
mov
je
cltd
dec
aas
and
dec
invd
push
lret
loop
xchg
iret
scas
xchg
cmp
std
test
pop
cs
xor
leave
movsl
jnp
ror
lock
cmc
sarb
daa
pusha
sahf
mov
jns
aam
sub
mov
dec
out
dec
and
adc
or
push
jmp
js
cld
outsl
add
sub
in
push
sbb
inc
mov
mov
dec
sbbb
cmpsb
inc
dec
imul
adc
xchg
rcrl
gs
flds
mov
pop
ja
mov
ljmp
loope
das
xor
sub
lods
ret
lds
in
fs
mov
mov
lods
or
push
pop
mov
mov
dec
leave
xchg
test
add
lods
mov
xorl
pop
or
inc
out
jmp
inc
mov
lock
mov
movsl
sbb
pop
and
addl
xor
add
es
and
add
pop
jl
loop
out
mov
mov
shlb
es
jg
xchg
cwtl
sbb
or
mov
stc
add
imul
es
mov
cltd
addl
xchg
xor
fisubrl
mov
cltd
gs
pop
in
push
xchg
pop
push
stc
pop
in
jne
pop
mov
dec
lret
int3
loopne
mov
lret
and
std
xchg
int
fs
fs
stc
scas
das
jmp
jmp
cld
repz
mov
xchg
mov
sbb
fistpl
inc
push
mov
bound
sarl
push
sub
push
jp
or
sub
ds
mov
jnp
inc
dec
dec
mov
cs
sbb
movsb
lret
or
aas
lock
imul
sub
pop
mov
mov
pop
insl
iret
mov
out
cmp
xor
in
iret
add
xor
push
push
mov
lret
call
jnp
mov
cmp
shll
out
addr16
jb
hlt
jns
jmp
mov
aaa
jge
lahf
sbb
roll
xor
aas
or
push
test
packuswb
cmp
sbb
mov
roll
mov
loopne
pusha
mov
loopne
mov
movsb
cmc
scas
cmp
outsb
and
popw
lcall
shlb
outsl
movsl
mov
dec
sbb
shl
adc
or
clc
rcl
das
push
popf
mov
and
aam
push
adc
mov
xchg
ret
stc
cmp
inc
jge
jnp
jecxz
push
xchg
jl
out
push
mov
test
shl
cmp
mov
dec
mov
jge
dec
loop
pop
lret
lahf
sbb
repz
jge
std
outsl
popf
scas
fcmovnbe
ljmp
adc
push
mov
dec
mov
dec
shrl
cmpsl
adc
inc
test
xlat
pusha
push
xor
or
fmull
ss
cmp
out
pop
pop
cwtl
add
call
iret
push
inc
mov
xor
scas
jl
mov
sub
lret
cmp
rcrl
cld
mov
test
xchg
lcall
add
imul
push
sub
dec
insl
and
push
test
out
xor
inc
mov
push
sbb
push
sbb
cmpsl
dec
sbb
cmpsb
xchg
mov
inc
fs
mov
jns
xor
aaa
or
arpl
add
mov
xor
fldl
push
mov
mov
or
leave
into
filds
addr16
push
jnp
addl
loope
mov
xchg
and
add
pop
movsb
pop
push
lret
pop
add
loop
mov
pusha
in
mov
xlat
ljmp
movsl
nop
xchg
ljmp
jle
cmp
roll
pushf
mov
push
ret
sbb
dec
push
bound
lcall
mov
repnz
cli
and
popa
and
jbe
insl
add
jne
add
inc
jmp
mov
mov
jmp
xchg
xchg
add
sti
dec
sub
pusha
push
mov
adc
or
and
cs
fdivrs
push
movsl
in
cmp
shl
test
jae
cmp
push
pop
pop
inc
cltd
jg
scas
pop
mov
call
cmpsl
ds
inc
push
js
xchg
xor
push
xor
test
push
and
subb
int3
movsl
inc
int
add
enter
pushf
or
mov
cmp
dec
mov
xchg
jg
and
sbb
inc
sub
mov
fldt
xor
dec
out
outsb
cmpsb
push
jg
loop
adc
add
out
xsave
je
mov
sbb
mov
in
push
nopl
mov
jns
mov
jb,pt
adc
push
sub
stc
jp
xchg
push
mov
int
xchg
jl
and
pop
movb
out
nop
leave
xchg
xchg
push
xor
jns
xor
shr
int
and
cmc
xlat
pop
jle
int
sub
cmc
pusha
push
outsb
xchg
inc
lods
scas
cmpsb
jb
ja
jnp,pn
sub
push
add
jg
outsb
mov
imul
inc
xor
mov
xchg
addb
pop
loope
mov
add
jns
xchg
lret
cmp
ret
bound
stc
adc
add
mov
and
pop
daa
jg
fisubrs
jne
xchg
lods
and
mov
add
xchg
into
xchg
in
or
ljmp
movsl
dec
dec
jmp
out
loop
cmp
xorb
sbb
jae
jmp
pop
inc
pop
mov
movsl
fidivrs
mov
dec
arpl
jmp
nop
fcmovnbe
push
sbb
mov
push
xor
aaa
ljmp
and
ss
iret
cmp
loopne
pushf
cwtl
aad
pop
mov
sar
mov
sbb
push
xchg
popf
and
cld
sub
push
sbb
repz
adc
test
cmp
push
movsb
add
lret
xchg
imull
sub
mov
lock
adc
push
add
inc
imul
jns
into
adc
adc
cli
pop
add
ljmp
mov
lret
xchg
jnp
mov
outsb
popf
fcmovnb
lods
addr16
jnp
xor
add
mov
cmc
std
test
sub
int
pushl
lcall
das
fildll
subl
xor
sub
pushf
xchg
push
movsb
add
jge
mov
sub
dec
mov
rcll
fs
repz
stos
mov
scas
pushw
mov
scas
add
xor
cs
rcrl
int
fistl
imull
sbb
out
mov
and
int
out
sarb
fadd
enter
inc
mov
mov
inc
dec
adc
in
jge
lcall
loop
sti
pop
push
lock
bound
or
ret
xor
cmp
daa
jg
test
insb
push
popf
sbb
js
shrl
mov
nop
sbb
push
test
gs
adc
and
das
or
sbb
int
cmp
inc
xchg
inc
xchg
dec
sub
fldt
xchg
pusha
clc
mov
and
or
rorl
mov
sub
pop
mov
lock
jne
int3
or
in
and
out
pop
jb
rorb
movsb
jl
daa
push
push
inc
xchg
mov
in
cmp
pop
in
enter
popf
mov
mov
jle
js
cmpsb
sbb
pop
loop
jns
or
cmp
iret
and
out
fimuls
cld
in
faddl
inc
in
pop
jo
adc
popa
lods
pop
fdiv
pop
adc
cmp
xchg
xchg
lahf
aad
bound
movl
xlat
jmp
or
push
mov
jle
xchg
shrb
inc
jne
mov
mov
in
movsb
cwtd
pushf
adc
xor
add
scas
sub
fildl
in
mov
jle
fnstsw
sbb
push
inc
pop
pop
pop
adc
xor
or
imulb
and
fwait
daa
xor
pop
xor
pop
mov
sbbb
das
add
outsl
insl
outsb
sub
shl
jmp
lea
scas
movsb
lods
xor
loopne
les
xor
pushl
scas
lret
push
mov
mov
stos
mov
mov
fisttps
mov
or
mov
cmp
and
dec
sbb
hlt
mov
xlat
out
insl
mov
jnp
daa
sub
push
cli
push
inc
add
cmp
mov
addr16
push
cld
dec
loop
fldl
push
dec
ficoml
push
dec
int3
out
lret
addr16
mov
jns
fdivr
ret
pop
jo
lcall
into
push
or
mov
rcl
dec
movsb
ficoml
jecxz
mov
popl
dec
pop
or
out
or
xchg
xor
in
pop
es
cli
loope
jecxz
fadds
dec
out
jp
ljmp
andb
pop
subl
insb
push
stos
daa
or
shlb
add
addl
in
and
stos
push
jnp
cmpsb
xor
and
mov
ds
cwtl
cs
sub
jnp
cwtl
xchg
xor
js
xor
lret
pop
dec
xlat
and
movsb
mov
sbbb
rcr
dec
pusha
std
outsl
cmp
scas
aaa
out
dec
xchg
ja
push
mov
inc
int3
pop
popf
ja
xor
lcall
mov
inc
inc
icebp
add
addr16
inc
mov
jo
test
push
push
adc
shl
add
cmp
mov
or
cltd
or
call
jno
mov
mov
out
add
sysenter
lock
push
mov
leave
int
lds
push
pop
mov
and
and
repz
repnz
add
xlat
enter
pop
adc
out
push
push
mov
mov
lods
aas
mov
out
jae
jns,pn
xchg
push
mov
push
sti
outsb
push
js
ljmp
xchg
sbb
sub
add
pop
jne
cli
loopne
jno
adc
mov
cmp
aaa
in
jge
or
cmpsl
in
mov
push
jg
addr16
into
aaa
mov
insb
aaa
sbb
mov
adc
mov
ss
cmc
loope
dec
frstor
jne
sub
cmpsl
adc
scas
bound
test
lods
xchg
jge
and
popf
pop
stos
sbb
jge
push
shlb
imul
push
pop
push
dec
mov
xor
push
pop
cli
stos
mov
mov
mov
dec
mov
ja
pop
ljmp
mov
mov
not
and
push
jns
sahf
out
outsb
push
lcall
cltd
xchg
cmc
mul
add
sbb
movsb
test
int
ret
outsb
sub
popa
mov
mov
inc
mov
lods
lcall
outsb
out
add
out
out
hlt
out
ret
cmc
jno
push
mov
mov
fistps
test
push
stc
out
repz
push
mov
mov
outsb
add
fldl
mov
dec
jp
cmpsl
mov
pop
mov
inc
push
gs
ret
inc
xchg
rcrb
push
icebp
xor
xchg
jno
lret
negl
inc
mov
xchg
shr
sub
and
dec
dec
mov
mov
xorb
insl
lret
outsl
lret
test
cmp
cmp
fcomp
jge
popa
jp
fsubs
pop
int3
add
push
ret
mov
mov
mov
push
mov
imul
cmp
sbb
push
push
and
lcall
fnsave
and
inc
cld
and
fcmovb
lahf
mov
jb
stos
divl
gs
cld
popf
and
es
xor
jno
push
test
add
and
cmp
cmp
bound
mov
jne
and
or
pop
into
xchg
mov
fucomi
stos
mov
popa
loop
cltd
lods
and
stos
out
js
or
fsubp
jb
insb
pop
mov
or
mov
cld
add
hlt
stos
jecxz
ret
fidivrl
inc
rcrl
push
fcomps
popf
xchg
fiaddl
xchg
in
xchg
fs
push
pop
adc
sahf
jl
dec
iret
pop
sbbb
hlt
test
fwait
clc
jo
inc
movsb
jno
rcrb
fwait
add
add
pop
inc
out
sub
xchg
repnz
push
sahf
shlb
sbb
fwait
inc
imul
nopl
aaa
cmc
sbb
jp
and
jnp
mov
add
pop
xorb
into
pop
push
outsl
xor
negb
and
shll
dec
inc
int3
rcrl
pop
jnp
jmp
add
scas
test
loope
add
fldl
xchg
adc
stos
test
add
mov
outsb
mov
int
icebp
fwait
push
test
leave
aaa
mov
dec
push
cmp
jnp
loope
jno
cmp
andl
shll
ds
mov
push
mov
sahf
jae
cwtl
dec
cmp
xchg
fstpt
pop
xorl
xor
es
jp
mov
jbe
dec
stc
movsb
movsb
or
popa
orl
push
inc
loopne
inc
cmp
push
cmp
shll
rorl
arpl
aad
repnz
mov
xchg
sbb
mov
loop
int3
mov
cmp
mov
ds
sarb
pinsrw
pop
ret
int
rorl
pop
test
xlat
jb
ret
out
pop
mov
and
inc
pop
pop
ljmp
bound
adc
cmpl
xor
xor
push
xor
sbb
mov
push
sbb
fstps
mov
aas
ss
out
cmc
fs
add
rorl
push
arpl
push
pop
xchg
push
je
mov
mov
or
pop
mov
iret
ss
dec
sbb
data16
pusha
cmp
adc
push
cmp
test
mov
push
add
or
and
adc
lret
imul
test
inc
jge,pt
es
xorb
dec
jo
push
and
mov
xchg
mov
xlat
or
int
sbb
mov
pop
mov
test
dec
sub
scas
jne
fwait
outsb
sbb
stos
je
sarb
mov
xchg
in
loopne
in
and
or
inc
loope
fwait
das
push
mov
loop
filds
add
dec
pop
mov
push
xor
int3
push
movl
or
mov
cmpsb
mov
aaa
cltd
orl
mov
fisttps
in
clc
push
sarb
and
sub
push
mov
aad
ss
add
test
xor
rcrl
push
mov
sbb
xlat
outsb
int
mov
or
add
fsts
dec
mov
aam
sahf
sbb
xlat
dec
test
adc
jg
icebp
sub
in
mov
xor
xchg
insb
outsb
mov
sub
mov
add
scas
lret
aaa
rcl
dec
into
inc
sub
ds
inc
into
sbb
es
pop
es
leave
mov
pop
sbb
outsb
sbb
mov
addr16
push
aad
ret
sub
push
cmp
add
jae
push
in
aas
es
cmpsl
fsubl
cmc
aad
xlat
ljmp
fs
pop
push
dec
call
sub
lcall
popf
cmp
push
xor
jl
xor
xlat
jmp
pusha
dec
xor
mov
mov
pop
adc
push
add
dec
mov
pop
test
push
daa
stos
fmuls
dec
cmp
test
fiaddl
sahf
sub
out
dec
sub
jle
loop
cmp
inc
adc
shrl
mov
sub
das
cmp
add
cmpsb
mov
pop
popa
repz
mov
mov
add
mov
mov
mov
push
pop
out
inc
cmp
test
and
sub
test
shll
scas
xchg
adc
or
mov
test
cwtl
pop
je
mov
adc
fisubl
les
loopne
xchg
jbe
les
dec
cwtl
jb
mov
mov
cmc
jmp
mov
jl
iret
leave
leave
cmpsl
stos
js
adc
out
mov
ret
rep
jmp
lds
inc
pop
in
pop
sub
sbb
jle
push
call
add
mov
testb
in
ss
push
aad
jl
sbb
lret
fists
and
jl
sub
sub
dec
outsb
dec
in
rcll
aas
mov
add
insb
insb
ret
xor
jg
sub
lret
sbb
jo
lcall
push
jae
out
scas
data16
call
push
cmp
lods
jnp
mov
cs
in
hlt
push
mov
cmp
add
in
sti
ss
xor
lods
test
push
out
jle
mov
popl
mov
push
xor
call
shl
push
and
fdiv
clc
and
or
insb
stc
xchg
dec
inc
mov
lods
dec
adc
inc
inc
ret
insb
in
jae
test
lock
enter
push
ret
dec
std
insl
fwait
popa
mov
or
hlt
lret
jg
inc
lcall
xor
int
inc
fildll
cwtl
sti
fdivrs
test
test
cmp
and
lea
subb
nop
out
les
push
scas
adc
iret
adcb
xor
mov
sbb
sbb
inc
mov
hlt
push
inc
adc
pop
ror
out
mov
in
inc
je
fdivs
push
fxch
mov
movsb
movsl
jge
dec
rcrb
or
repnz
mov
loope
shrb
cmp
rclb
jo
sbb
fnstenv
loop
mov
push
out
arpl
add
mov
mov
cmpsl
xor
test
jns
aas
sub
shrl
inc
repnz
int
sbbb
lcall
jbe
jle
aam
stc
inc
notb
repz
in
cmovb
rorl
lahf
test
cmp
sbb
fmul
mov
inc
js
hlt
mov
cmp
mov
gs
cmp
rcrl
fs
mov
mov
xor
xchg
dec
lods
ficoml
adc
jmp
or
jle
and
es
sub
mov
sbb
popf
push
lahf
int3
mov
and
dec
sahf
push
jne
xchg
mov
cmp
fidivrs
jb
cmc
loopne
jmp
cltd
xchg
popa
adc
jecxz
rcr
adc
sub
mov
cmc
test
pop
sarl
fsubl
dec
pop
pop
loopne
push
notb
ss
sbb
adc
dec
pushf
pushf
pop
icebp
sarl
mov
mov
fwait
data16
ljmp
jmp
pop
aaa
ret
inc
jge
pusha
fsubrl
push
dec
pop
sbb
fadds
or
les
or
or
adc
repnz
lods
gs
jle
ret
xchg
cmp
and
insb
jmpw
rcrl
jnp
cmp
jb
fdiv
push
mov
sub
lret
pop
add
cld
xlat
dec
inc
mov
push
and
psubsw
dec
cltd
and
cmp
push
enter
lcall
jae
mov
mov
in
and
aas
mov
inc
into
sbb
movsl
iret
or
add
les
sub
lea
mov
incl
jmp
inc
xchg
stos
popa
das
dec
adc
mov
lcall
addr16
in
cltd
jbe
xchg
jle
lds
xor
aad
std
pop
mov
jg
mov
pop
jge
fimuls
adc
adc
in
out
fisubl
in
xor
dec
inc
jle
mov
or
and
mov
jne,pn
mov
push
push
push
loopne
fbld
push
push
in
addr16
fistps
pop
movsb
xchg
xchg
pop
and
aad
or
jb
push
es
mov
lea
mov
js
cli
xchg
xchg
jno
test
add
mov
cltd
inc
lds
dec
scas
fdivrs
xchg
mov
mov
xchg
cmp
lods
ret
push
mov
sbb
cmp
mov
sub
jge
mov
je
pop
sbb
into
sahf
sub
inc
scas
cmp
pop
xchg
lods
shl
pop
int
das
inc
pop
pushf
setne
jbe
test
aam
aam
in
or
pop
notb
cli
jp
and
push
bound
push
call
int
sbb
inc
sti
mov
xor
xor
ret
fidivl
int3
int
insl
adc
movsl
dec
pop
shlb
pop
mov
cli
in
ret
sub
stc
jbe
or
icebp
std
andl
rolb
shlb
jae
into
add
sbb
fsubrl
add
imul
mov
mov
add
or
mov
stos
adc
imul
into
adc
and
ds
sarl
pop
cmp
jb
dec
out
loop
inc
ljmp
mov
or
xchg
icebp
xlat
push
lods
cmp
outsl
push
mov
dec
jnp
mov
inc
push
pop
mov
mov
popf
pop
lea
mov
and
jp
dec
push
mov
mov
fnstsw
jl
cwtl
inc
aam
mov
lds
add
sbb
inc
inc
iret
test
or
push
clc
cmp
in
dec
je
lahf
decb
dec
cmp
push
repnz
mov
ljmp
pop
ds
ficomps
lcall
lds
mov
push
pop
cmpsb
daa
ret
mov
jmp
loopne
mov
les
lock
aas
ret
rclb
sbb
mov
or
fcompl
mov
pop
into
xor
mov
sarl
and
ja
mov
inc
pand
ss
sub
je
sub
je
push
sbb
or
test
lock
push
in
dec
push
add
test
shll
xor
jmp
dec
or
pushf
dec
jno
push
sbb
and
jecxz
mov
test
aas
sub
mov
bound
sub
in
cli
out
mov
push
testb
and
dec
xchg
imul
jmp
sub
jno
and
or
jo
cmc
xor
sbb
orb
jecxz
mov
cmp
out
fistpl
rcll
into
je
out
dec
pop
cld
jmp
nop
stos
dec
pop
xor
arpl
mov
aam
add
rcrb
inc
loop
mov
dec
sub
push
cli
pusha
aam
mov
xchg
je
mov
jns
lea
pop
xchg
pop
fistpll
loopne
or
pop
int
jp
cmp
inc
repnz
and
mov
mov
cmp
outsl
inc
pop
and
add
pop
jbe
or
inc
jo
filds
stc
push
sbbb
cmp
scas
mov
adc
repz
repnz
push
sahf
jge
xor
mov
pop
int
int3
push
loop
scas
lock
xchg
roll
cwtl
loopne
xor
lret
stos
adc
mov
dec
inc
into
add
test
in
stos
sbb
cmp
movsb
push
dec
jbe
jne
clc
sub
fistps
mov
rol
mov
ds
mov
push
xor
adc
ljmp
push
jmp
cmp
test
push
aaa
pop
movsb
jb
inc
clc
hlt
out
mov
dec
jl
pop
cmp
dec
cs
fnstcw
pop
out
xlat
scas
add
jns
dec
es
movsl
inc
test
jle
add
jne
adc
inc
mov
addr16
cmpsl
push
cmpsb
mov
push
in
add
xchg
mov
xor
andb
xor
rolb
aas
test
adc
loope
jmp
insl
fisttpl
mov
or
xor
add
inc
test
xor
xchg
inc
mov
lods
lret
and
mov
add
arpl
packsswb
and
enter
cltd
mov
fidivrl
jmp
dec
mov
push
imul
in
or
jne
nop
or
add
inc
incl
scas
in
mov
inc
xor
pop
ds
inc
imul
xlat
fstl
mov
push
out
insb
int3
into
mov
outsb
xchg
nop
push
pop
pop
sbb
push
dec
rcrb
jl
nop
fcoms
push
out
fcmovnbe
push
push
enter
adc
aad
loopne
adc
cmp
clc
mov
jecxz
bound
shll
mov
push
insl
xor
je
mov
jns
lret
sbb
loopne
roll
int3
out
adc
lods
and
into
jb
xchg
push
stos
out
cmp
in
or
or
mov
lcall
push
mov
jge
lret
outsl
cwtl
cmp
sbb
addl
aas
xor
jno
mov
dec
jae
test
rorl
mov
adc
adc
xchg
test
adc
cs
je
mov
out
cld
mov
movsb
xchg
mov
adc
aam
sub
cmpsb
test
jne
jno
mov
or
or
imul
xor
lret
outsl
out
add
and
scas
push
popa
inc
push
daa
out
shrl
sti
lcall
sub
cmpsl
pcmpeqd
and
inc
out
ja
sbb
adc
add
add
inc
inc
xchg
xor
push
mov
sti
scas
jg
inc
or
sub
push
or
int3
repz
leave
movq
mov
into
sub
call
test
xchg
and
stc
cmpb
push
filds
mov
das
rorb
push
les
cmc
cltd
mov
adc
test
pop
inc
or
adc
xchg
mov
testl
insl
mov
js
stos
and
jl
pop
mov
jae
push
sbb
jge
sbb
sub
ljmp
or
test
mov
in
sbb
or
mov
mov
pop
push
lods
outsl
rcll
and
fisttpll
mov
mov
fimuls
dec
jmp
mov
cmp
lcall
pop
xchg
iret
loop
mov
mov
dec
xor
xor
ret
sub
xor
push
outsl
subl
out
inc
mov
add
cs
adc
ret
lret
movsb
cs
xor
imul
adc
pop
jnp
inc
xchg
ret
cmp
cmpsl
mov
mov
xor
shll
lea
mov
lea
and
mov
in
pop
xor
in
fsts
arpl
jmp
popa
or
xchg
mov
sbb
jge
fcomp
adc
and
in
cmp
add
add
cwtl
ds
jns
and
movsb
ja
out
or
cmp
roll
jmp
fcoms
mov
push
mov
mov
orl
pop
push
xor
xor
out
add
mov
mov
jo
xchg
xorb
iret
test
sbb
mov
push
push
shrb
lods
stc
insb
inc
sbb
adc
emms
adc
dec
pop
pop
repz
addr16
call
dec
adc
clc
xchg
inc
pop
lods
push
gs
frstor
sub
sahf
or
mov
sbb
or
enter
add
cmp
fildll
fwait
aas
in
cmc
sarb
ret
mov
cmp
push
lds
aas
lahf
loopne
jo
js
xor
mov
dec
lret
jge
add
jno
xchg
out
xchg
rolb
mov
mov
or
int
je
mov
cltd
insb
lret
xor
sub
pop
dec
mov
push
stos
mov
add
out
push
adc
inc
mov
cs
cmp
mov
dec
cmp
jns
xor
jmp
das
and
insl
js
jnp
sbb
sub
aaa
repnz
iret
push
vmptrld
xchg
sub
ds
and
xor
push
sbb
es
fs
sar
in
sub
ja
in
cmpsb
cmc
fimull
xchg
lcall
and
inc
sbb
mov
sbb
adc
scas
adc
fs
ds
xchg
inc
xchg
push
cmp
call
adc
sbb
lea
dec
xlat
inc
jae
jnp
pusha
mov
xchg
std
cmp
mov
jo
gs
repz
jp
sub
cmp
lods
add
cs
popf
les
inc
ficomps
outsl
pop
cmp
jnp
mov
fwait
or
adc
movsb
outsb
pop
lret
ja
mov
dec
adc
jbe
or
sahf
sti
xor
or
es
leave
add
jae
dec
mov
pop
roll
push
push
inc
in
xchg
inc
dec
outsl
imul
repz
mov
gs
cli
sbb
inc
or
and
repnz
mov
sub
mov
movsb
imul
andl
enter
orl
sti
test
shll
pop
arpl
mov
jno
ret
jg
dec
lahf
mov
mov
dec
int3
rorb
or
outsb
push
push
outsl
lea
std
dec
dec
nop
call
mov
into
mov
dec
xor
mov
dec
sub
dec
lret
out
push
push
jmp
gs
test
cmp
push
adc
in
int3
scas
pusha
pop
roll
mov
push
daa
jno
cmpsl
mov
dec
les
cmp
loopne
jae
outsb
pop
mov
xlat
xor
pop
popa
movsb
sub
mov
shrb
mov
mov
lret
xor
or
imul
mov
cmpb
shlb
add
sub
jle
add
or
fnstcw
repz
pop
jno
mov
jmp
test
jns
adc
and
sbb
dec
cltd
cmp
or
in
cmp
test
pop
mov
or
inc
adc
and
mov
mov
lds
out
and
test
aam
lock
ret
std
mov
idivb
pop
jno
xor
ret
subl
cltd
lods
lock
mov
movsl
fdivrs
repnz
xchg
and
int
add
push
mov
fwait
cmp
cmpsl
inc
xor
push
xor
sub
xor
xchg
push
xor
add
inc
ss
test
dec
mov
roll
or
xchg
mov
mov
jecxz
ficompl
cmp
push
dec
mov
mov
jns
adc
cmp
icebp
jle
test
clc
mov
pop
inc
or
dec
out
fsubrs
daa
mov
insl
fs
sub
cmc
popa
incl
pop
int
jnp
xorl
and
pop
icebp
adc
mov
pop
fisttpll
movsl
test
mov
mov
clc
pop
jmp
dec
xchg
push
cmpsb
mov
add
lods
enter
data16
pushf
cmpl
iret
mov
or
aam
dec
je
xchg
lods
ficoms
push
cmpsl
imul
cmp
cmp
cmc
pop
xor
mov
and
jae
enter
push
cwtl
or
outsb
sbb
push
mov
cmpsl
push
xor
ret
jl
ficoml
sub
insb
mov
cli
or
cmpsl
mov
punpcklbw
and
or
dec
mov
pop
xchg
or
lock
call
scas
jge
dec
ss
ja
pavgw
inc
cs
and
pop
ljmp
push
es
sub
mov
xchg
je
jbe
lods
int3
mov
and
jp
cli
out
sbb
cmp
fdivs
cld
movsl
scas
js
mov
and
js
and
dec
mov
sbb
pop
xlat
popa
add
sub
call
adc
pop
jmp
cwtl
notb
pop
imul
pop
sub
push
aas
xchg
idivb
mov
and
ficompl
lods
sbb
sub
fadds
mov
pop
into
push
lock
int3
mov
cmp
ret
push
fidivrl
push
notb
and
test
sbb
pop
jp
push
xor
jmp
fcom
mov
stos
cmc
hlt
fldt
cmc
push
test
and
fiadds
jmp
dec
daa
sub
adc
ds
xchg
stc
pop
mov
sbb
sti
xchg
jge
xor
xchg
sbb
pop
ja
daa
sub
outsl
mov
dec
out
sub
inc
lret
lods
or
and
mov
xchg
sti
mov
scas
jmp
xor
pop
fildl
int
cmp
cmc
dec
jmp
aam
cmc
sbb
scas
push
les
or
lcall
cli
pop
mov
dec
fidivrl
out
mov
xchg
jne
mov
aas
fcoms
in
adc
jmp
push
xchg
movsb
aas
sub
popf
test
sub
inc
mov
cmp
sub
jp
jl
jno
out
sub
pop
leave
xchg
clc
js
mov
mov
ret
mov
push
aam
fcmovnbe
aaa
and
jne
test
sub
inc
in
ds
cmp
adc
ret
mov
and
fcoml
movsl
xchg
mov
jle
adcl
test
push
pop
iret
push
mov
push
jo
sbb
sbb
out
mov
sbb
lret
mov
bound
push
inc
jne
add
lock
mov
adc
adc
inc
and
stos
mov
adc
pop
adc
jns
pop
inc
movsb
fidivrs
xchg
aaa
fidivrl
insl
pop
ret
ficoml
iret
jnp
xor
push
shl
cld
adc
xor
pushl
test
jmp
aam
cs
cmpsb
cmp
push
incb
cmp
in
addb
jp
mov
scas
xchg
movsb
xor
test
push
xchg
inc
cs
and
or
fimull
add
cwtl
lretw
out
dec
sub
sub
jg
ds
iret
cmpsb
cmc
call
jns
out
push
adc
sub
arpl
jl
inc
into
cmp
lcall
stos
dec
sahf
int3
sahf
enter
jns
or
sbb
iret
xor
cmp
idivb
push
push
int
push
outsl
push
and
dec
out
and
add
test
xchg
cmc
fcoml
sub
outsl
in
gs
outsl
scas
cli
xchg
lea
push
jge
jb
pop
pop
lds
outsb
adc
pop
pop
stc
add
push
addr16
add
icebp
aaa
mov
stos
sbb
jb
mov
sub
xlat
cmpsb
xchg
push
push
mov
and
adc
repz
pusha
hlt
fistl
orb
cs
mov
fistps
jb
inc
add
addb
adc
out
imul
mov
inc
jne
inc
adc
ljmp
fdivr
filds
fcmovne
pop
fstl
add
es
xchg
dec
orb
outsl
sbb
ret
dec
mov
mov
ret
nopl
adc
sub
lock
mov
cs
das
xchg
lret
mov
pop
pop
jg
addr16
nop
mov
xor
cmp
xor
ljmp
add
lods
cmp
push
cli
sub
mov
jmp
mov
outsb
jg
cli
lds
or
stos
imull
hlt
xor
xlat
call
mov
jg
xor
jmp
shr
out
insb
dec
jmp
jne
outsl
std
xlat
ds
bound
dec
pop
jle
inc
mov
out
mov
mov
sar
sbb
xor
popf
or
sbb
int
mov
push
cs
sub
leave
and
mov
cld
xor
clc
in
das
loopne
push
in
divl
daa
inc
outsl
mov
std
fldcw
std
nop
ret
jbe
pop
mov
sti
mov
and
mov
mov
push
std
lea
ret
call
jl
mov
mov
ljmp
outsl
jns
aaa
clc
cmp
insb
call
mov
push
fdivl
jle
popf
mov
outsl
loopne
add
stc
setnp
stc
aaa
xchg
iret
fistpl
jg
xchg
gs
dec
repz
pushl
dec
fisubrs
repnz
jae
jl
pushf
and
pushl
mov
nop
aas
icebp
out
clc
ds
arpl
xchg
mov
xchg
push
ja
fiadds
push
push
pop
mov
hlt
xchg
cmovle
test
fdivrp
xchg
das
out
sbb
push
sbb
push
sbb
popf
into
iret
fsubl
xchg
ja
dec
std
ret
gs
jg
mov
sbb
aas
pop
pop
jg
xchg
stos
pop
bound
ds
jle
negl
mov
idivl
jo
pop
xor
ja
pop
fwait
scas
out
cli
scas
js
in
out
in
testl
out
push
out
fdiv
push
nop
jle
mov
roll
inc
fcompl
pop
repz
loopne
mov
inc
paddb
ret
xbegin
xchg
loope
test
movsb
lahf
loope
call
xchg
int
mov
fsubl
decl
in
ret
or
ss
dec
sti
jmp
xor
adc
pop
cltd
dec
mov
inc
jb
fistpl
and
jbe
loopne
mov
dec
addr16
fildll
or
jmp
ss
jge
insl
or
cmp
sahf
or
fnstsw
andb
repz
jb
pop
pop
jo
addl
repz
fsubr
fs
in
lock
jmp
jecxz
iret
pusha
push
mov
mov
testb
dec
insl
lea
xlat
pop
insb
shlb
push
loopne
out
cmp
call
jae
adc
bound
divb
and
and
xchg
fists
mov
mov
cmp
sarl
in
pop
test
cld
pop
and
mov
jmp
outsb
out
inc
push
fwait
jnp
cmp
dec
xor
imull
call
add
aaa
lock
or
rcr
clc
scas
jge
or
insl
fwait
ds
pop
pop
push
mov
push
fistpll
aad
push
mov
insl
repz
push
cld
mov
fwait
cmp
jg,pt
lcall
lcall
mov
scas
mov
jge
push
gs
xchg
inc
divb
adc
xchg
sar
je
mov
jle
xchg
mov
pop
pop
mov
insl
ja
lods
andl
mov
mov
adc
mov
icebp
int
cwtl
addr16
xchg
addr16
sahf
shlb
rclb
push
dec
mov
int3
mov
sub
push
es
cmpsl
outsb
mov
in
xlat
adc
mov
loopne
repz
lret
ret
and
out
scas
scas
ret
xor
ljmp
mov
pusha
and
lahf
xchg
call
std
shlb
sbb
repz
pop
cwtl
xchg
xchg
push
stc
das
add
sbb
cmp
les
fcmovne
mov
or
mov
pop
lock
nop
dec
add
out
cmp
dec
addl
cmp
loope
cmp
arpl
ds
mov
std
fst
lods
test
and
dec
dec
pushf
outsl
call
hlt
dec
addb
pop
cmpsl
stos
insl
and
test
xchg
cld
aas
sbb
or
ret
inc
sbb
mov
insb
cmp
int3
clc
inc
dec
cld
pop
lock
clc
jg
imul
int
call
test
mov
loope
hlt
xchg
dec
filds
aam
ja
sub
mov
sbb
push
mov
mov
pop
icebp
jo
mov
inc
add
or
sub
sbb
inc
enter
or
outsb
sbb
fmuls
inc
pop
cmp
inc
clc
inc
pop
lds
mov
insl
dec
test
xor
push
mov
in
push
mov
call
or
push
jl
jns
push
mov
lods
inc
imul
loop
pop
add
xor
decb
lock
or
cmp
outsl
fdiv
adc
jno
adc
in
mov
out
adc
rcrb
mov
fsubr
iret
dec
out
daa
mov
outsb
sub
jl
inc
subb
mov
adc
push
cmp
lods
es
js
mov
sbb
out
add
loope
into
cmc
ret
xchg
cli
adc
ret
fs
lea
sbb
push
out
shlb
aaa
daa
aaa
aas
int
outsl
dec
popf
inc
push
into
and
leave
add
fistl
add
addr16
pop
shl
stc
je
sbb
mov
cmc
pop
pop
rorl
or
ljmp
sub
jno
imul
int
loope
outsb
lret
dec
adc
jmp
mov
rcr
loop
cwtl
ds
sti
jge
nop
xor
out
and
xorb
leave
addr16
jg
fistl
lods
push
loopne
and
fwait
adc
shr
pop
adc
repnz
cmp
lock
int
repz
lock
cmc
sbb
cli
ficoml
cmp
cltd
xchg
pop
shrb
cmp
push
dec
lcall
fdivrs
inc
in
cmp
cwtl
cld
loopne
cmp
xor
adc
std
pop
fstpl
repz
inc
insb
or
xor
dec
cltd
inc
ljmp
out
enter
cmp
js
sbb
in
cwtl
cli
cwtl
test
loope
negb
dec
push
and
fnstenv
push
aad
cmp
dec
add
xor
es
popa
xchg
push
inc
xor
sbb
test
mov
pop
lods
ds
gs
in
xor
jbe
jecxz
hlt
xchg
out
enter
cmp
js
or
fstpl
sub
pop
add
cltd
cmp
test
add
adc
call
pop
inc
test
adc
pushf
pop
aad
mov
jbe
leave
sbb
pop
bnd
enter
fwait
js
cwtl
sub
sbb
dec
push
mov
dec
pop
or
mov
mov
and
popa
imul
and
adc
outsl
jne
shlb
push
jne
fwait
xlat
mov
jns
inc
mov
add
xor
das
mov
addr16
push
jg
sbb
mov
and
xchg
stos
pop
adc
out
cmp
test
jae
or
add
xchg
or
and
or
stc
andb
jne
repz
fsubrs
scas
adc
xchg
sbb
inc
xor
les
pop
and
and
outsl
aas
push
add
in
mov
jmp
test
mov
popa
sub
jmp
push
jp
push
jecxz
jp
popa
notl
jg
cld
mov
add
sbb
popa
add
adc
or
mov
adc
adc
jno
roll
or
adc
sti
and
rclb
xor
adc
gs
fcoml
or
mov
or
sbb
sbb
int3
lret
sub
pop
arpl
mov
pushl
xchg
xchg
gs
in
jl
jecxz
icebp
ds
fstps
pop
mov
popf
imul
push
insl
cmc
in
fisubrl
fstpl
sbb
fnstcw
push
mov
icebp
ljmp
inc
mov
cmp
add
mov
ret
mov
and
andb
outsl
mov
movsl
and
inc
orl
inc
xchg
data16
xor
sub
popa
inc
cli
mov
fwait
sbb
cs
cmpsl
push
ret
pop
stos
pop
mov
iret
xor
jecxz
cld
lcall
lea
mull
data16
add
cmp
sbb
lahf
data16
push
aas
dec
imul
or
insb
and
jg
mov
cmp
cmpsl
xor
leave
pop
xor
sti
fdivrs
dec
cmp
sbb
adc
and
jp
inc
pop
xor
jecxz
lods
jle
mov
inc
aad
testl
and
add
aam
out
xchg
fcmovb
cmp
cmp
cmpsb
test
cmp
cmp
into
ljmp
into
lret
fdivrl
jle
cmc
insb
xchg
jae
or
es
xor
push
fs
push
outsl
out
pushl
ret
leave
cmp
xchg
xchg
mov
cld
lods
mov
ljmp
jbe
mov
test
dec
pushf
pushf
mov
lock
jbe
ret
sub
or
dec
sbb
adc
push
mov
outsb
and
les
mov
arpl
movsb
lret
insb
cmpsl
xor
inc
les
outsb
popa
push
xor
aas
xchg
stos
and
push
out
icebp
dec
test
cmpsb
push
idiv
call
scas
in
push
pusha
xlat
std
int3
inc
aaa
fstpt
call
push
inc
sbb
scas
int3
outsl
hlt
xchg
scas
jns
and
lods
insl
mov
add
xchg
stos
lock
mov
add
roll
mov
fistpl
shlb
sar
outsb
sahf
sti
and
xor
pop
xchg
lret
dec
mov
notb
jne
jnp
fisubs
cs
js
stos
add
xchg
dec
in
inc
scas
and
outsl
jecxz
push
dec
mov
nop
sbb
xchg
in
test
outsl
in
jp,pn
fcomi
popa
aas
ret
int3
jmp
cmpsb
out
pusha
lock
pop
ljmp
mov
jle
lea
dec
inc
roll
out
jns
mov
xor
dec
sbbb
movsl
imul
cmp
pop
mov
add
xchg
hlt
cltd
divl
mov
adc
push
mov
ljmp
cmp
int3
stos
ja
or
inc
nop
into
stos
jmp
clc
hlt
inc
jmp
inc
or
iret
repz
pop
push
inc
lret
dec
shl
dec
jmp
int
mov
jmp
lahf
rorb
jbe
out
xchg
hlt
adc
fwait
pop
jnp
xchg
and
jecxz
adc
pop
movsl
fmull
es
adc
inc
add
adc
lods
ret
add
notb
add
adc
push
and
imul
roll
test
lret
dec
pop
pop
stc
pop
inc
ret
popf
lods
ss
cld
sarl
test
cmpsb
imul
cmpsl
mov
jns
int3
test
push
jno
add
push
mov
and
dec
sti
idivb
or
sbb
push
xchg
or
jge
mov
outsl
jecxz
mov
out
jl
pop
enter
js
sbb
into
xchg
sub
inc
daa
jl
sbb
xlat
lret
cwtl
sbb
jge
inc
mov
or
push
hlt
mov
sti
out
hlt
pusha
ljmp
or
push
inc
or
xor
mov
or
xchg
cmpsl
aam
femms
xor
or
xchg
adc
adc
xor
xchg
sbb
jbe
push
aas
pop
ja
xchg
rclb
and
sub
push
cwtl
lret
idiv
arpl
push
sbb
lock
cmc
xor
rcr
gs
dec
sbb
dec
mov
testl
sbb
pop
xor
test
out
mov
stos
in
cmpsb
outsb
jecxz
sub
mov
leave
fdivrl
enter
or
pop
jl
lods
icebp
in
sbb
mov
inc
loope
mov
sbb
dec
out
inc
jne
push
in
mov
jecxz
pop
xchg
mov
pop
add
iret
sbb
cltd
lahf
pop
cmc
push
cmp
jb
insb
cmp
jmp
inc
lret
pushl
clc
ret
pop
sub
stos
mov
push
pop
push
fidivl
lahf
sub
push
xchg
cmp
fs
pop
outsb
push
mov
cli
pushw
ljmp
imul
mov
jns
ljmp
into
nop
ficoms
mov
nop
fucom
xor
fisubrl
mov
mov
jg
mov
loopne
lods
mov
xlat
ds
pop
cmp
mov
rclb
shr
scas
rcrb
xchg
cmp
or
in
inc
test
test
cmpsb
stos
int
lret
xlat
push
out
ljmp
xchg
repnz
mov
stos
iret
sub
pop
icebp
pop
push
cmp
movsb
cmp
cltd
sbbl
in
ss
or
lret
pop
outsb
dec
push
fwait
cmpsl
enter
or
enter
aam
lods
pop
push
push
rsqrtps
imul
mov
sbb
xor
loope
add
loop
adcb
dec
xchg
mov
jbe
fldt
xchg
dec
popf
pop
incl
mov
mov
push
popf
or
cmp
inc
lods
in
mov
in
or
mov
adc
sbbl
test
and
mov
mov
flds
mov
push
push
dec
ret
imul
inc
movsl
xor
or
or
mov
push
iret
cmpsl
adcl
cmc
mov
dec
dec
dec
insl
jmp
incl
fildll
cwtl
loopne
mov
sbb
ja
xchg
xor
mov
icebp
movsl
aas
jne
outsb
xchg
out
mov
push
adc
lods
cmpl
stos
out
and
out
cmpsl
sub
sbb
sub
cmp
icebp
pop
jae
in
lock
out
mov
jge
mov
std
push
sub
sahf
inc
stos
pop
cmpb
cmp
outsb
pusha
cli
push
jle
jno
push
mov
neg
rorb
mov
or
popf
and
mov
insb
push
dec
ficomps
mov
test
cltd
or
xchg
xor
fadd
push
adc
inc
mov
adc
cltd
aas
cmpsl
mov
aaa
xor
fnstsw
cmpsl
cmpl
mov
mov
stos
lret
xchg
pop
push
xchg
test
and
cld
add
lcall
pushf
je
jo
outsb
fisttps
or
aas
xchg
fstpt
mov
enter
and
jle
jns
mov
inc
push
gs
cmp
wbinvd
ljmp
lods
mull
out
pop
aaa
icebp
cmpl
push
lods
mov
jp
adc
stos
lahf
add
lods
aas
mov
pop
mov
leave
jmp
or
cmpsl
push
adc
cmp
xor
subb
mov
ss
or
xchg
fildll
sbb
test
add
ret
movsb
mov
inc
fildl
test
jns
ret
or
lcall
mov
xor
addr16
sub
xlat
xchg
mov
pop
dec
in
add
mov
ljmp
jle
lock
lret
cmp
add
outsl
repz
movsb
adc
xchg
pop
dec
lock
mov
adc
mov
imul
div
pop
lret
jg
dec
cmc
scas
or
mov
push
adc
lods
xchg
addr16
idiv
imul
push
sub
test
in
push
mov
lods
dec
sub
ljmp
rcrl
lods
out
imull
enter
data16
or
out
add
inc
stc
xor
push
ret
sahf
mov
adc
cmp
pop
pop
in
and
popf
movsl
icebp
int
pusha
jnp
xchg
push
pop
xor
mov
inc
das
sbb
sub
push
and
mov
xchg
test
xchg
lahf
das
xor
testb
shld
insl
les
jne
inc
pop
pop
sub
and
stos
ficoms
mov
mov
ret
jne
fistps
dec
sub
lahf
push
fs
and
cld
push
xor
jbe
outsl
push
aad
lcall
push
in
outsl
ljmp
xor
mov
aam
cmc
mov
mov
orps
ds
mov
ljmp
sbb
dec
or
cli
pop
xor
cmp
popa
dec
mov
leave
jne
in
cmpsb
in
aaa
jmp
jno
int3
jno
mov
jl
add
jl
pop
lea
adc
insb
sub
add
lds
fsubrs
rcrb
dec
ds
sbb
or
mov
scas
aam
cld
pop
or
inc
push
ficoms
xor
mov
inc
dec
jge
pop
mov
cmc
and
dec
sub
sub
iret
adc
xor
mov
fwait
orb
dec
movsb
out
mov
xchg
cltd
xchg
stos
push
adc
jnp
cmp
jmp
daa
jl
xor
aad
shlb
call
mov
in
sysret
push
dec
and
mov
inc
jg
lret
push
lahf
ret
std
jle
cmp
ja
ret
popa
paddw
sbb
dec
sti
adc
rcr
jecxz
add
pushl
jl
jnp
adc
iret
outsl
inc
cmpsl
mov
pop
jecxz
xchg
add
pop
int3
mov
bound
outsb
push
lahf
sbbl
pusha
stos
and
js
jg
sbbb
mov
test
std
popa
add
out
popa
addr16
mov
loopne
mov
ret
xchg
xchg
decl
push
adc
xlat
xchg
shrl
sarb
cmp
adc
in
jo
mov
mov
and
add
mov
cmpsb
bound
lret
call
xor
pop
jl
pusha
lahf
inc
test
repz
insb
mov
pop
in
imul
push
mov
test
add
jecxz
mull
adc
pushf
insl
shlb
inc
push
adc
or
cld
loop
lods
out
sbbl
adc
es
imull
popf
jmp
and
stc
xor
sar
dec
cltd
stc
outsb
dec
mov
mov
adc
mov
push
mov
outsl
idiv
sbb
aam
xlat
push
setg
inc
adc
inc
pop
mov
sbb
add
or
adcb
mov
mov
push
cmp
mov
stos
pop
lret
add
xor
push
sub
inc
cmovl
lcall
push
sub
mov
jg
push
mov
sub
lcall
inc
insb
pushl
pop
repnz
bndstx
pop
shll
dec
loope
fadds
std
cs
dec
sbb
xlat
lret
sbb
mov
inc
push
aas
or
idivb
pop
inc
ret
cli
nop
dec
pop
call
test
enter
pop
push
cli
adc
jl
adc
sub
dec
add
sub
push
fldenv
mov
add
mov
adc
mov
repz
aam
pop
add
lea
cmpl
xor
push
add
insl
sub
insb
sub
lret
testb
nop
lods
push
jmp
pop
ljmp
pop
or
lock
pusha
pushf
or
add
jg
adc
shr
and
xchg
leave
jbe
cmc
push
scas
sarb
dec
scas
repz
arpl
hlt
cmpsb
adc
dec
popf
in
jb
or
rcll
adcb
dec
xlat
ss
lahf
imul
fisubs
addl
sahf
les
and
outsl
xchg
std
adc
cli
cwtl
pop
xchg
lret
pop
test
jecxz
mov
push
mov
xor
jecxz
pop
mov
gs
fdivrs
and
and
add
xor
aas
mov
fdiv
sub
jp
inc
pushf
imul
fs
cwtl
pop
sbb
sub
jb
xchg
jecxz
pop
cmp
scas
inc
push
mov
mov
ja
addl
ficoms
lret
inc
je
or
dec
das
pop
sub
rcr
repnz
scas
cmp
inc
cmpsb
pop
cmpsl
mov
out
mov
jle
xchg
jne
ret
jno
scas
inc
clc
mov
pop
sbb
repz
popf
shr
and
lcall
das
sub
xchg
pop
xchg
jnp
xlat
bound
lea
outsb
pop
mov
and
push
mov
push
ficompl
jp
imul
cmc
popf
shl
adc
cltd
cmp
loop
lret
pusha
jne
js,pt
adc
lock
xor
cmp
in
scas
lahf
push
popa
sub
out
xor
repz
mov
sub
das
inc
pop
xchg
in
shr
xchg
mov
push
add
int3
adc
dec
mov
lock
xor
push
mov
sahf
adc
ja
out
inc
or
sbb
add
lds
pop
repnz
in
xor
push
stos
lahf
aam
and
and
fisttpl
arpl
rol
or
xor
outsl
xchg
mov
not
filds
jp
jge
fisttps
mov
ljmp
insb
sbb
pop
ja
sub
mov
push
push
movsl
fs
fimull
inc
mov
stos
cltd
repz
lods
lahf
sbb
and
sub
mov
lahf
stos
lret
xlat
cmp
jle
mov
rorb
shrl
mov
jl
adc
popa
std
cmp
out
aam
lcall
pop
call
inc
dec
sbb
pop
add
lret
fisubl
jbe
shrb
mov
push
dec
rorl
xlat
push
popf
xchg
mov
mov
pop
hlt
stos
mov
or
jne
out
mov
jge
in
and
jecxz
pop
jg
inc
repz
in
jne
add
sub
fidivl
pop
mov
stos
push
es
push
ljmpw
lret
aad
loop
in
ds
adc
pop
add
call
repz
fs
or
jnp
fsubrl
or
adc
dec
xchg
xor
imul
jb
stc
jnp
adc
movsl
and
sub
pop
rcrb
lds
lock
test
icebp
push
xor
adc
sub
and
icebp
push
aaa
std
sbb
mov
shl
sbb
repz
xor
dec
cmp
sbb
out
fists
push
xchg
in
stos
adc
insl
xlat
jecxz
imul
ljmp
sub
aaa
addl
iret
xchg
xchg
cwtl
lock
pop
je
data16
sub
jo
jb
cmp
push
pop
daa
lcall
inc
ror
mov
incb
push
xor
in
push
cmp
int
push
jnp
push
aad
cmp
and
pop
push
pop
sbb
fnstcw
mov
inc
icebp
ss
je
imul
int
mov
ljmp
std
fildll
jle
adc
in
loope
fildll
cld
xlat
push
imul
adc
sub
adc
mov
stc
stos
mov
std
sbbl
cmp
clc
or
les
dec
and
xchg
popf
mov
jno
push
and
sub
xchg
cs
sbb
mov
sbb
inc
ds
xchg
aad
sbb
lcall
adc
ljmp
ds
jp
loope
clc
lret
mov
add
in
cmp
ja
jl
mov
test
les
mov
ret
addr16
xchg
fs
test
cmp
xor
scas
cmp
jnp
add
push
dec
jne
mov
jbe
pusha
push
cmp
sbb
push
jo
rorl
jmp
mov
in
test
data16
in
bnd
out
subl
mov
jno
pop
ds
push
mov
cmpsb
xchg
xchg
or
outsl
mov
pop
leave
jl
adcl
les
pop
mov
loope
sti
nop
add
xchg
clc
in
shll
xchg
aaa
stos
jbe
std
add
fwait
les
inc
inc
or
mov
mov
orb
dec
push
pop
fsubl
mov
aaa
jg
es
push
pop
nop
aaa
leave
dec
mov
or
jno
jns
xchg
xchg
jecxz
push
popf
jne
fwait
mov
aas
xchg
sub
mov
repnz
sbb
rdmsr
cmpb
mov
inc
cmp
xlat
jbe
mov
xor
pop
aaa
shrl
mov
orb
push
cmpsl
pop
jae
cmp
pop
imul
push
sub
mov
jmp
loopne
pop
push
pop
jnp
mov
xor
test
shll
mov
jecxz
in
pop
jo
pop
adc
test
push
mov
jl
push
sub
xor
shrl
or
jge
ds
mov
out
xor
btr
push
push
adc
imul
sbb
and
adc
pop
jg
sub
jno
sub
repnz
pop
push
xchg
popa
in
cmp
je
stos
js
mov
xor
dec
into
data16
sub
sub
addr16
xor
mov
inc
test
leave
xchg
inc
daa
dec
mov
dec
xchg
lret
das
je
outsl
dec
pop
notb
ljmp
negl
xchg
repnz
scas
and
mov
out
push
add
push
es
lock
aas
cli
jo
mov
mov
orl
mov
sub
adc
cmp
lea
pop
sti
mov
mov
shrl
aas
in
scas
ret
loope
xchg
ret
mov
movsl
test
inc
mov
ja
cmpsl
jecxz
imul
ljmp
cld
movsl
sub
push
xlat
mov
mov
cmp
es
mov
sub
push
je
scas
mov
out
jp
nop
out
test
cwtl
mov
and
out
jmp
lret
repz
pop
lret
push
sbbb
lret
arpl
fimuls
outsl
xor
repz
mov
inc
mov
fstpl
xchg
adc
ret
idiv
adc
mov
shrb
pop
sub
test
je
pop
sub
imul
adc
cltd
arpl
add
pop
mov
lcall
lret
or
inc
inc
jmp
enter
jno
fdivl
xchg
ficompl
cmp
pop
push
inc
add
fcomps
leave
outsl
das
and
push
mov
mov
mov
pop
sbb
sbb
movsl
dec
ret
vmovhpd
cmpsb
jns
jb
jmp
mov
jge
push
ret
push
repnz
xchg
and
shlb
cmpsl
pop
push
sub
or
pop
jmp
in
push
mov
test
push
addl
out
es
sbb
gs
clc
xlat
addr16
ror
fs
icebp
mov
stos
xchg
popf
push
cmpsl
xchg
pop
adc
adc
or
je
push
and
push
fcompl
and
fidivs
mov
sbb
js
pop
sub
sbb
push
hlt
inc
jae
shlb
enter
lock
lds
sub
int3
lret
in
add
cltd
sahf
cld
mov
mov
pop
jnp
push
jae
scas
test
stc
cmp
push
mov
push
push
lods
sbb
lock
testb
adc
lds
dec
popa
cmp
jmp
loop
aaa
dec
ljmp
cmp
jbe
ljmp
cld
mov
enter
xchg
xor
out
movsl
jb
lea
shl
inc
lahf
jmp
pop
jbe
or
out
adc
xchg
sbbl
jmp
push
xchg
and
mov
mov
pop
or
mov
jbe
jecxz
testb
sbb
movsl
sbb
and
pop
fldt
sub
cmp
test
sub
in
jae
je
fwait
sbb
lahf
xor
mov
adc
push
data16
inc
inc
mov
mov
pop
cli
add
subl
ss
dec
add
mov
in
scas
pop
inc
push
das
xor
mov
stos
popa
push
mov
pop
dec
pop
sub
test
push
fistpll
das
add
jo
aam
outsl
or
icebp
imul
inc
or
rcr
cli
lods
repz
enter
lret
adc
fidivrl
lret
mov
lret
dec
lods
js
test
mull
pop
ja
sbb
popf
icebp
cmp
push
or
shl
jecxz
addb
mov
icebp
and
int3
fiaddl
sub
cmp
mov
push
xorl
or
ret
cmp
inc
lock
popl
mov
inc
and
rorb
loop
pop
in
cmp
pop
xchg
sbb
pop
mov
push
test
testb
mov
adc
xor
push
daa
xchg
fldenv
loope
mov
mov
dec
movsl
mov
test
mov
mov
or
sbb
iret
xor
test
and
mov
or
test
xchg
ret
pop
pop
repnz
and
add
sub
scas
shl
mov
sub
mov
sbb
scas
xchg
pop
dec
lods
or
ja
mov
lret
data16
test
lahf
pop
fcmovnbe
sbb
loop
push
imul
jbe
lret
mov
rcll
add
hlt
out
pop
out
add
sub
cmc
ret
xor
test
add
sahf
inc
sbb
leave
js
jp
shlb
lock
aam
mov
scas
mov
dec
stos
push
daa
popa
jl
in
cli
pop
out
cmp
ret
inc
call
mov
fldl
sbb
sbb
outsl
clc
add
dec
and
ss
push
int3
pop
testb
pop
sbb
les
and
mov
inc
sbb
stos
mov
sub
fdiv
add
stc
fnstenv
push
mov
pop
adc
iret
adc
roll
jno
lock
add
or
cmp
imul
or
jnp
pop
jl
pop
mov
cwtl
test
inc
ficomps
sub
push
adc
clc
inc
mov
mov
stos
in
mov
mov
cltd
mov
dec
repz
xchg
pop
cltd
je
push
unpckhps
mov
xchg
jno
gs
xchg
xchg
sub
scas
mov
fisttpll
inc
xor
push
out
jge
xor
inc
ja
cvtpi2ps
cli
sbbl
jl
data16
xchg
popf
sbb
sub
daa
sub
inc
pushf
pushf
fisttps
add
frstor
dec
enter
sbb
jns
pop
mov
ret
xor
push
stos
mov
les
push
cmp
out
call
roll
lret
fcomi
mov
inc
test
into
pop
lcall
adc
pop
ret
out
and
jnp
jbe
or
clc
mov
imul
in
cmp
xor
cli
adc
xor
or
jns
push
pop
pop
and
mov
xorb
mov
or
sbbl
cs
or
adc
mov
int3
mov
lret
dec
sub
out
sbb
mov
jle
andl
jae
call
jne
loopne
mov
imul
xchg
jae
mov
scas
mov
mov
xor
dec
std
push
or
lret
push
mov
stos
hlt
rclb
adc
lods
fdivs
lds
inc
js
ret
dec
jg
into
cmp
xor
sbb
mov
into
ret
push
xchg
fnsave
hlt
xchg
iret
mov
inc
lock
in
iret
testl
cld
shrb
fstl
jle
subl
inc
std
cmc
je
iret
mov
inc
loop
mov
cmpsl
mov
cmp
jno
rcr
aaa
inc
icebp
adc
shl
pop
stc
cli
dec
mov
popa
mov
xchg
and
std
jl
push
push
pushf
or
xchg
in
sbb
push
rcr
dec
out
cmp
mov
mov
jae
jb
push
dec
inc
int3
call
pusha
test
call
mov
daa
adcl
cmpsl
into
int
and
push
in
pop
mov
lret
dec
test
loope
xor
mulb
add
mov
mov
lret
mov
fcompl
add
lahf
ss
add
inc
mov
scas
mov
fcompl
popa
data16
clc
xchg
out
sbb
push
inc
push
mov
test
cmc
sbb
pop
dec
add
jne
mov
ds
not
mov
mov
movsl
and
dec
xchg
add
into
sub
sbb
xor
jbe
sbb
movsb
mov
cld
outsl
dec
mov
jne
cmp
test
popa
or
pop
loopne
sbb
ljmp
push
mov
add
ret
daa
jbe
inc
adc
fsubs
inc
xor
cmp
inc
jmp
push
jle
sbbl
add
sub
or
mov
adc
or
in
xchg
repnz
mov
or
bound
cltd
into
push
sbb
mov
xchg
push
pop
sub
fdiv
or
xor
lods
decl
inc
and
seta
pop
xor
sub
cli
pop
fwait
and
mov
loope
sbb
and
sbb
or
dec
jnp
dec
xchg
int3
ret
dec
add
mov
dec
imul
sti
das
adc
pop
fwait
iret
js
xor
mov
and
jbe
call
stc
jns
repz
daa
push
and
clc
mov
or
cmpsl
add
ret
and
mov
imul
mov
lock
mov
in
jbe
in
sbb
cli
movb
cmpsb
sarb
or
xchg
sbb
xor
lock
clc
xor
scas
aad
mov
outsl
ficompl
xor
mul
sbb
jo
arpl
mov
out
idivl
mov
pusha
mov
rcl
in
movsl
xor
dec
inc
dec
add
jns
push
lds
dec
push
test
rcr
ss
adc
scas
cli
das
add
fsubs
inc
fidivrl
popf
out
mov
xchg
xor
loop
shlb
add
ret
mov
jl
cmp
loopne
or
sahf
sbb
movsl
pop
sub
movsb
lods
pop
enter
push
mov
imul
mov
xor
sahf
inc
sbb
fwait
jmp
arpl
pop
xchg
cmc
xor
xchg
daa
cmp
mov
mov
cmc
out
icebp
cmp
outsb
fwait
lds
xchg
lock
jbe
or
fistps
or
icebp
add
and
cmp
fidivs
aam
jb
cld
push
pushf
mov
arpl
mov
sub
pop
add
add
addb
data16
in
dec
pushf
mov
cli
jge
mov
cwtl
je
push
or
xchg
jo
or
aam
jo
add
mov
xor
sbb
jno
das
xorb
xor
into
test
rorb
xchg
iret
scas
xor
inc
add
popw
mov
das
call
repz
test
mov
jle
xchg
test
repnz
sahf
push
jne
dec
mov
mov
daa
push
dec
outsb
fistpll
push
xor
call
insb
jecxz
mov
fdivrl
push
enter
daa
lea
adc
xchg
test
cmp
repnz
jo
mov
sub
negl
jecxz
pop
xchg
mov
mov
ror
aad
mov
insl
add
fs
push
inc
adcl
add
pop
mov
xlat
scas
loopne
and
push
jp
jl
rol
xor
jge
cmpsl
lea
hlt
add
inc
pop
stc
fimull
sysenter
pop
push
fstpt
popf
and
ljmp
cld
xchg
mov
sub
pop
pop
inc
xor
mov
mov
mov
xor
cmp
pop
sbb
and
popa
sbb
pushf
jmp
mov
es
jmp
push
cmp
addr16
push
imul
movsl
cmp
jmp
and
outsb
lds
shll
jmp
out
and
mov
add
xor
repnz
cmp
push
or
jp
mov
adc
incb
ljmp
and
xchg
data16
hlt
shll
pop
ret
xchg
sbb
clc
pop
mov
inc
ja
or
jp
incl
jne
inc
xchg
inc
cltd
push
sbb
cmp
insl
cs
ret
out
aad
sbb
loop
scas
bound
or
adc
fucomp
shl
out
dec
lds
call
lret
lahf
mov
sbb
icebp
mov
xchg
pop
cltd
fs
mov
sub
imul
xchg
imul
push
scas
push
and
dec
xlat
std
je
in
shll
cmp
or
xor
stos
loopne
cmp
xchg
mov
loop
adc
mov
xlat
lea
lods
mov
lret
cmp
je
cld
inc
dec
add
push
fistpl
dec
pop
dec
dec
mov
mov
cmpsb
loope
pop
mov
popa
xchg
mov
dec
mov
outsl
sub
or
popf
mov
mov
leave
or
sub
sbb
imulb
into
dec
je
mov
and
pop
out
sqrtps
fiadds
ret
or
cmp
cld
scas
stc
mov
pop
pop
jecxz
jne
adc
aam
xor
xor
fbld
push
mov
push
sahf
sub
int
stos
sahf
ret
scas
inc
cmp
cs
js
movsb
push
sub
mov
adc
ret
in
negb
lret
push
jae
fwait
add
push
cmp
mov
popf
rcll
das
stos
dec
cmp
iret
pop
xchg
inc
sub
ss
xchg
sub
pop
hlt
jecxz
fimuls
mov
push
cmpsb
push
adc
aaa
mov
mov
jno
adc
outsb
or
sub
inc
lcall
jno,pn
jg
js
fwait
cmc
dec
adc
and
nop
in
jae
fdivrs
jne
add
out
cwtl
not
mov
jg
pop
pop
call
or
xchg
jl
xchg
dec
mov
mov
push
xorb
or
dec
ds
test
add
cltd
aad
push
test
dec
mov
arpl
cmc
jp
mov
adc
out
in
in
inc
mov
into
das
pop
push
pop
fisttps
xor
fbld
sub
sbb
in
stos
outsb
test
daa
xchg
jne
outsl
and
cs
mov
test
and
cmc
mov
mov
je
aas
push
fadds
fbstp
lahf
dec
push
imul
in
clc
fcom
and
fidivs
aam
mov
and
ret
and
f2xm1
outsb
outsb
push
xor
and
push
lods
aaa
push
shll
inc
cmc
mov
sti
push
and
xor
mov
ljmp
sbb
scas
mov
xchg
ja
and
and
loop
dec
es
push
xchg
mov
je
add
xchg
fcompl
adc
mov
inc
push
xor
xor
xchg
mov
dec
mov
sbb
push
movb
lahf
jb
jecxz
pop
ret
lock
mov
cli
hlt
dec
ds
push
jg
xchg
inc
xor
test
pop
testb
call
mov
mov
push
or
mov
test
test
fwait
pop
xor
gs
mov
push
cmpsl
sar
jno
sbb
cmp
movsl
pushf
std
xchg
push
popa
les
xchg
loopne
dec
or
inc
enter
mov
mov
js
lcall
inc
sbb
pop
push
popa
pop
leave
add
jnp
inc
cmpsb
incb
cwtl
das
cwtl
mov
shll
imul
mov
cld
sbb
aaa
fidivs
inc
pop
jae
lret
cmp
lds
mov
testb
js
jno
ss
sahf
ret
pushf
xor
nop
daa
mov
call
xchg
enter
out
sub
sub
mov
mov
aam
lahf
xchg
cld
test
dec
in
mov
in
push
testb
dec
sbb
xor
mov
stos
pop
mov
lds
sbb
mov
ljmp
inc
dec
stc
ret
pop
add
lea
or
test
loope
mov
jmp
jmp
in
mov
leave
rcr
aad
mov
enter
ret
push
lea
sti
fdivrl
in
xchg
mov
pop
hlt
and
jnp
shl
test
push
inc
push
rolb
xchg
dec
jnp
cmp
lret
mov
lahf
fdivrs
fwait
cltd
pop
add
xorb
filds
repz
fistps
pop
loopne
mov
dec
dec
mov
inc
cmp
xchg
sti
insl
xlat
jno
popf
push
pop
popa
xchg
xchg
ret
dec
mov
ret
dec
test
lds
push
test
push
lds
sbb
add
pop
insb
jbe
jg
stos
and
in
sbb
jae
call
jmp
jge
adc
push
or
out
sbb
stos
insl
mov
xchg
cli
and
fildll
stos
sarl
repnz
pop
push
inc
mov
call
cmpsb
cmp
dec
aad
xchg
into
xor
cmp
mov
inc
sub
outsb
xchg
push
mov
xor
push
or
aad
mov
hlt
xchg
mov
jl
jle
cmp
mov
mov
sub
mulb
and
or
xchg
xchg
pop
cmp
ss
enter
push
test
jmp
nop
mov
jle
adc
out
movsb
jno
push
sub
push
lret
cmpsb
in
cmc
mov
or
out
dec
cmp
and
jbe
fistl
mov
ds
and
out
xchg
lea
aam
adc
ljmp
ljmp
sub
mov
leave
or
stc
and
int
adc
movsb
data16
in
test
mov
add
xor
jo
sbb
stos
jo
push
jnp
cwtl
push
sbb
repnz
lock
cmpsb
decl
cmpsb
sti
out
in
jae
je
insb
aam
shrb
jae
pop
out
out
cld
cmpb
pop
scas
aaa
sbb
adc
fcoms
xorb
sub
sti
fidivs
or
xchg
ficompl
push
and
ljmp
jmp
or
jg
sub
movhps
push
loopne
jo
aas
mov
jbe
inc
pushf
rcl
mov
cwtl
mov
jp
pop
bound
adc
push
sub
xor
lock
add
out
lret
int3
ljmp
pop
xchg
pop
ljmp
and
lret
adc
aaa
fbld
outsb
stc
shll
enter
cmpsb
fstpt
mov
stos
les
pop
push
andb
lods
outsl
jae
jne
lock
cmp
inc
mov
mov
or
sbb
in
inc
adc
add
test
or
xchg
test
xchg
fldcw
lock
xorl
sbb
inc
push
cli
ds
mov
sahf
jl
mov
fucomi
jb
cmp
lods
push
cmp
sbb
mov
sbb
pop
ja
xchg
or
xchg
outsl
ret
mov
scas
mov
std
scas
cli
mov
sub
cmpl
jo
xor
jns
pop
or
pop
cmp
gs
out
std
test
jmp
sbb
sbb
pusha
sarl
xor
scas
sahf
sbb
jne
lea
xchg
outsb
sti
hlt
add
daa
scas
sti
or
call
rcr
lahf
js
push
ljmp
pop
adc
pop
mov
xchg
mov
das
sarl
stos
loopne
lods
push
call
inc
js
jns
and
cmp
negb
and
pop
dec
add
movsb
dec
jns
pusha
push
ret
jmp
push
test
pop
imul
dec
push
fwait
movsb
add
adc
jns
aad
test
aaa
sbb
rcl
pushf
in
movsb
mov
cmp
mov
push
and
sbb
jl
ret
sbb
out
xchg
pop
ficomps
notl
inc
sbb
mov
lcall
mull
jbe
lods
daa
lea
cmpsl
inc
mov
push
jmp
mov
xchg
or
pop
addl
js
mov
imul
popa
mov
test
mov
addb
repnz
lods
test
sub
stc
and
pop
xchg
out
cltd
test
rcrl
hlt
dec
add
mov
xchg
ss
gs
push
mov
leave
pop
jle
xchg
out
jl
ret
mov
sbb
movsl
std
inc
fs
sti
fcoml
inc
bound
rcr
loope
fstps
inc
inc
sarl
mov
imul
jae
lret
adc
test
jcxz
push
or
sbb
out
fiadds
cmp
cmpsb
sub
sub
in
xchg
push
or
loopne
mov
sbb
jl
adc
cld
lret
test
push
shll
icebp
fcoml
and
xlat
leave
cwtl
pop
shll
int
inc
mov
lds
sbb
cmovs
pop
subb
xchg
push
sbb
mov
sbb
cmp
jns
mov
stos
xchg
xor
rolb
popf
pop
cmp
inc
lds
mov
pop
idivb
jo
sti
mov
jmp
push
data16
in
je
jg
jbe
out
repnz
xchg
xor
lcall
iret
xlat
mov
cmp
aaa
je
push
cmp
test
jge
jns
jge
fcoms
or
pop
lods
mov
ficompl
rcll
out
rcr
push
push
pop
xor
nop
or
fbld
or
mov
mov
in
ficomps
outsb
fisubl
mov
push
testl
mov
inc
push
sub
mov
test
fisubl
sub
lods
push
add
sbb
sub
cli
pusha
lock
incl
ds
aam
cltd
mov
ror
add
push
into
in
push
dec
sbb
mov
mov
cld
mov
pop
es
loopne
ficompl
ja
add
test
push
imul
out
mov
cmpsl
mov
cmp
loop
sub
jg
fcompl
sbb
pop
outsl
mov
out
sbb
addr16
pop
inc
lds
mov
je
scas
push
jns
add
jne
mov
mov
scas
push
bound
stos
popf
test
sub
jbe
jg
dec
sub
inc
mov
lods
inc
xchg
cmc
xchg
arpl
cli
pusha
xchg
fcoml
cli
lods
es
hlt
incl
je
adc
fidivrl
xchg
push
enter
sbb
outsl
dec
lods
add
add
push
inc
jnp
repnz
popa
lea
loopne
shr
xchg
xchg
add
push
out
sub
test
xchg
repnz
int
aam
sbb
xchg
cli
mov
stc
cmp
scas
ficoml
mov
fucomp
mov
xor
in
jl
sub
jle
sub
je
loop
xor
subb
test
jno
pop
xchg
out
push
xchg
and
loopne
push
daa
inc
adc
cmc
loop
jae
scas
ret
add
in
in
ficompl
roll
mov
mov
mov
lea
push
sbb
jne
xchg
shl
test
popa
mov
jb
sub
outsb
cld
push
add
lods
jle
jno
pop
fistpll
ficoml
jnp
mov
popa
xchg
jecxz
jo
cld
repnz
dec
dec
sbb
mov
dec
divb
loopne
mov
and
scas
and
jnp
xchg
test
xchg
sbb
inc
mov
pop
jmp
data16
push
out
sbb
push
adc
pop
loopne
lock
push
shl
data16
push
xchg
adc
adc
pop
int
shll
jo
mov
inc
inc
jo
push
sti
mov
shr
ret
sbb
cmp
jmp
mov
adc
push
adc
shrb
je
mov
out
movsl
cld
push
inc
cmpsl
jbe
jmp
insl
mov
adc
mov
push
xor
mov
test
fnstcw
mov
cmp
fstl
jne
aad
je
cmp
aaa
gs
adc
ljmp
stc
shrb
loope
pusha
push
xchg
cli
mov
adcb
push
mov
mov
inc
test
inc
jle
mov
lock
jge
shll
mov
cmp
mov
inc
sub
cmp
lock
fdivrl
dec
pushf
stos
push
sub
jb
jbe
xlat
shrb
ljmp
iret
pop
daa
pop
int
and
cmpsb
mov
xchg
je
sahf
dec
repz
jg
and
cmp
setle
jb
addr16
in
js
int
sub
dec
lods
insb
das
mov
adc
pop
cmp
push
insb
mov
and
sub
shrb
popa
int
mov
int
cs
cmp
cmp
std
push
cmpsl
jmp
nop
test
outsl
push
insb
jb
cmp
test
aam
test
sbb
in
in
mov
dec
inc
sbbl
push
cmpsl
ja
xor
jg
add
sbb
adc
pop
adc
rolb
fsts
or
jns
adc
adc
jno
lcall
cmpsb
rorl
addb
jo
mov
inc
adc
dec
pusha
dec
xor
dec
icebp
add
mov
pop
or
fxch
jo
out
mov
sbb
insb
in
outsb
fnsave
insb
jl
out
mov
repnz
mov
fmul
lret
out
mov
sbb
xchg
out
gs
cwtl
cmp
insl
jge
mov
cmp
cmp
jl
mov
add
xor
movsl
jg
repnz
or
pop
xchg
ljmp
icebp
pop
xor
cmpsl
aas
jle
dec
ljmp
or
sub
and
push
push
pop
adc
mov
mov
jmp
scas
cld
jo
fstl
lock
out
jl
lcall
mov
rcrl
fnstcw
popf
fbstp
mov
fcompl
or
mov
inc
jge
mov
inc
xchg
mov
les
scas
lahf
pop
into
and
fucomip
mov
mov
sub
cmpsb
pop
daa
movsb
xor
dec
lcall
sbb
mov
and
mov
stos
sbb
cmpb
cmp
cmp
jg
pop
subb
and
mov
loope
inc
mov
push
mov
mov
mov
push
cwtl
pop
jge
jno
enter
into
in
daa
movsb
ja
icebp
sbb
pop
jp
mov
lock
sub
jne
xchg
lret
xor
cmp
mov
or
pop
mov
sbb
jno
cmpl
adc
ret
popa
adc
hlt
js
int3
jl
mov
jns
xor
push
gs
and
mov
sahf
sub
movsl
jb
mov
push
inc
adc
push
outsl
mov
cmp
fstpt
not
sub
sub
sub
stos
mov
mov
adc
lea
sbb
and
pop
add
sbb
mov
inc
xor
nop/reserved
xor
mov
loop
lret
lds
sub
xchg
mov
cltd
shufps
xchg
adc
daa
inc
jl
and
repnz
jp
repz
push
iret
dec
or
pop
xchg
orb
icebp
add
adc
cmp
jge
mov
cmc
mov
push
mov
cmp
pop
mov
sub
in
lcall
neg
es
es
cltd
adc
mov
cmp
mov
xchg
int3
ja
es
lods
cld
lret
push
out
cli
ja
add
sub
mov
mov
xor
or
dec
adc
and
jne
mov
andb
jl
aad
scas
xchg
jp
sbb
in
fwait
test
test
mov
into
adc
cmpsl
das
add
xchg
pop
xchg
inc
ljmp
and
js
jne
inc
div
in
hlt
idivl
jge
les
mov
cmp
mov
xlat
stos
adc
add
movsb
push
mov
and
fdivs
xor
sbb
cld
aam
repz
and
pop
sahf
ffreep
rorl
arpl
shlb
jnp
mov
shlb
inc
and
pop
and
dec
xchg
push
add
lret
cmp
mov
popf
push
fs
and
mov
jnp
and
jae
scas
shll
fiaddl
pop
lahf
leave
adc
in
pushf
xlat
mov
icebp
iret
add
or
stc
fcmovu
push
xor
adc
pop
pushf
test
ficoml
inc
mov
scas
inc
stos
mov
je
stc
pop
pop
and
cld
mov
push
out
jns
ja
imulb
sub
stc
xor
lods
je
enter
daa
imul
stos
mov
dec
rorl
loop
mov
xchg
push
test
mov
ret
into
ret
int3
jnp
or
push
mov
loopne
int3
pop
jle
cld
adc
mov
pusha
test
jge
fs
adc
ret
out
xchg
mov
push
jnp
dec
xchg
xchg
mov
ds
rcrb
cmp
cmp
aam
jl
jbe
fdivr
dec
dec
test
add
popa
push
ds
push
int3
dec
xchg
dec
les
cmp
add
adc
pop
xchg
pop
rorl
outsl
and
daa
pop
xchg
notl
sub
rcll
scas
jae
orl
inc
repz
mov
and
xchg
lret
push
jne
daa
mov
aaa
dec
sbb
ds
lds
inc
push
fidivs
add
ss
in
mov
aad
inc
jno
mov
movsb
pop
mov
mov
ss
frstor
movsb
ss
out
enter
jnp
push
rorb
cmpl
push
pushf
sbb
xorb
pop
mov
cmp
mov
aad
jecxz
mov
cmp
aas
pushf
fsubl
gs
and
inc
mov
rorb
pop
cmp
sbbl
dec
add
cmp
and
mov
shrb
push
pop
movsl
les
inc
nop
cmp
inc
or
stc
jge
test
fcmovnbe
fsubrs
das
dec
mov
fs
cs
pop
mov
jp
dec
add
xor
movsl
or
mov
jae
aam
icebp
test
fiaddl
and
add
out
cmp
xchg
or
xchg
mov
pop
cmp
mov
insb
cli
add
insb
icebp
inc
push
cmp
cli
inc
mov
pop
aas
insl
out
add
xor
xorl
dec
sub
pop
ss
daa
es
dec
lock
pop
icebp
sbb
dec
inc
cltd
dec
test
outsl
mov
stos
imul
cmp
adc
cmpb
adc
mov
pop
adc
nop
cmp
out
jno
xor
inc
fnstsw
lea
iret
out
lds
inc
aad
imul
or
dec
nop
imul
sbb
push
jle
lods
call
mov
jne
xchg
call
insb
adc
cmpb
insl
popf
out
and
push
adc
andb
inc
faddl
in
or
scas
sub
mov
in
clc
bound
jmp
cwtl
in
cmc
out
enter
decb
or
pop
addr16
in
pop
or
inc
imul
dec
cli
dec
push
insl
xor
push
pop
daa
mov
lret
inc
jne
lahf
sbbl
fidivrl
lock
lods
pop
sarb
ja
rcll
jns
mov
test
hlt
fst
aad
mov
movsl
jmp
cwtl
fiaddl
out
out
fcmove
iret
cmovbe
insb
shrl
or
pop
inc
xchg
ret
lret
jl
loop
mov
stos
jno
jmp
es
rorl
xchg
cld
stos
cmpsl
xchg
ret
dec
add
xorl
dec
mov
dec
pushf
xchg
and
stos
sub
daa
cwtl
xlat
aas
push
in
out
sub
pop
std
sub
xchg
xor
mov
mov
fcmovb
push
push
popa
repnz
stos
or
arpl
mov
and
xchg
pop
out
mov
arpl
adc
imul
in
ja
adc
and
scas
mov
cmpl
pop
lcall
mov
insl
mov
imul
dec
mov
test
cmp
jbe
ja
inc
in
jmp
jo
ffree
sub
insb
xor
adc
cld
inc
xor
cmp
inc
mov
pop
daa
or
popf
shr
jb
cmp
jno
mov
ret
mov
cwtl
or
mov
fidivs
mov
cli
fmull
xorl
les
xlat
rcll
cwtl
shll
add
addr16
ss
or
push
pop
mov
popf
lea
pop
test
cmp
or
cmp
lcall
int3
dec
adc
jne
and
pop
rcll
ja
out
or
repz
push
popa
jb
adc
ljmp
lret
add
or
imull
ds
xchg
jmp
rcl
sub
cmp
and
sbbb
test
pop
push
xor
add
adc
in
repnz
cmp
nop
stc
and
mov
sbb
sbb
sti
xchg
adcl
lret
mov
push
loopne
pop
cltd
sti
dec
jnp
fcmovnu
and
loope
lahf
stos
or
mov
outsb
pop
cs
push
sbb
xchg
jae
inc
ja
imul
xchg
aaa
stos
inc
jns,pn
jno
sub
movsl
mov
jnp
mov
rolb
inc
mov
mov
pop
xchg
inc
imulb
mov
pop
xor
gs
or
mov
je
mov
sarl
or
pop
push
call
dec
cltd
pop
cs
sbb
loopne
jno
cmp
inc
xchg
fwait
mull
and
repnz
mov
int3
out
jle
mov
mov
adc
inc
and
add
mov
aad
rsm
sbb
dec
mov
xchg
imul
nop
inc
jno
dec
or
jecxz
iret
or
and
pop
fnstenv
push
cwtl
je
int
sub
sar
jb
or
loop
lds
jb
sub
fwait
xchg
add
ja
mov
pop
cli
out
bound
loopne
pusha
dec
adcl
dec
xor
inc
nop
test
mov
mov
mov
vshufps
loop
mov
sti
movsb
cwtl
lcall
cmp
dec
inc
inc
popa
or
ret
roll
xlat
mov
xchg
test
pop
xlat
rorl
test
mov
dec
loope
cltd
cli
inc
xor
mov
mov
fmuls
jno
dec
pop
aam
mov
or
pop
adc
sbb
movsl
mov
xchg
js
mov
hlt
stos
test
adc
xchg
shlb
rcll
icebp
push
rcll
addr16
hlt
mov
stos
cmc
jns
int3
adc
dec
int3
pop
sbb
or
test
movsl
adc
ljmp
add
sahf
add
xor
cld
mov
in
lret
mov
sarl
sub
ljmp
loope
int3
aaa
jp
ja
fcmovnu
mov
stos
adc
das
aad
inc
inc
fmull
loope
fdivrp
jb
lock
push
push
sub
inc
int
aaa
jmp
dec
stc
push
cli
adc
jl
jbe
ljmp
popa
outsl
lock
ja
pop
push
push
test
les
cmp
mov
daa
jecxz
and
mov
dec
push
aaa
xlat
addb
je
inc
pushf
daa
fs
and
fldenv
pop
xor
sbb
mov
sub
sbb
lock
rcrl
fmuls
sbb
idiv
lds
ret
push
sbb
lds
mov
in
mov
or
and
jae
popf
lds
ljmp
test
cltd
dec
adc
test
and
adcb
mov
jecxz
inc
dec
sahf
mov
inc
xchg
movl
and
cmp
mov
or
mov
movsb
lcall
jbe
sbb
stos
enter
cmpsb
std
inc
dec
hlt
inc
add
dec
sbb
shlb
popf
xchg
and
and
inc
movsb
mov
mov
ds
cmp
inc
pop
sbb
and
cmp
sub
xchg
imull
inc
mov
and
push
pop
test
lods
xor
pop
pop
jns
fsubs
loope
rolb
cmp
shl
fs
jmp
int
mov
add
loope
mov
push
int
test
movsl
aaa
add
cmpsl
add
and
jne
fs
mov
lock
test
int3
movsb
pop
mov
xchg
xchg
and
sbb
test
sbb
call
outsb
insb
shll
fiaddl
int
ljmp
mov
mov
arpl
out
and
testl
cmp
mov
lods
pop
mov
shll
cmpsl
jns
xchg
das
or
fdivrl
jno
pop
mov
mov
adc
insl
popa
xor
sbb
mov
add
sub
xor
jns
loopne
xchg
aam
jno
inc
and
push
mov
insb
mov
in
in
fwait
jmp
push
inc
mov
enter
push
lret
insl
aaa
not
lock
cmp
add
inc
push
imul
aad
inc
mov
mov
pop
jno
mov
cmp
test
cltd
faddl
into
sub
and
dec
mov
add
fstpt
mov
das
imul
cmp
mov
fsubl
inc
push
mov
dec
pop
pop
adc
fsubrl
inc
daa
dec
and
jnp
test
or
in
and
lahf
sbb
xchg
flds
loop
fs
out
das
aam
cli
js
cmp
idivb
ret
cmp
sub
lods
push
out
pop
jmp
cmp
clc
aam
xchg
sub
pop
ds
mov
inc
add
pop
mov
shll
mov
insb
repnz
loop
push
and
mov
cmp
mov
or
andl
mov
fcomps
xchg
das
dec
insl
xchg
jecxz
jp
pop
inc
cmp
and
mov
scas
cmp
les
data16
cmp
and
sar
fucom
sub
cmp
push
xor
into
movsb
dec
cmp
mov
jb
js
add
xchg
jbe
cmp
test
dec
cmc
out
rcrl
pusha
pop
cmp
xchg
loope
ret
add
fdiv
lods
or
and
jne
sub
enter
insb
nop
dec
dec
jmp
dec
sti
fdivs
pop
jbe
inc
aaa
sbb
inc
movsl
rcll
mov
fdivl
dec
push
popf
push
xor
stos
jns
push
pusha
repnz
daa
fs
or
lods
inc
repnz
cmp
rorl
push
cmp
cwtl
jp
push
insb
mov
or
repz
shl
mov
aam
push
lcall
mov
sarb
add
repnz
fwait
aam
cld
add
and
mov
pop
aam
jl
push
inc
xor
int
push
sbb
outsl
xor
mov
pop
outsl
jb
movl
sarl
cmp
xchg
test
in
dec
dec
clc
sub
leave
jp
mov
sub
fmull
sub
adcb
push
out
sbb
lcall
lret
push
std
scas
or
sbb
call
ret
sub
out
lds
arpl
lret
test
cli
in
mov
mov
sub
push
inc
scas
call
cmp
popa
mov
pop
cmpsl
fimuls
and
lds
inc
clc
lds
mov
xchg
jno
cmp
ss
nop
pop
add
repnz
pop
mov
and
jbe
in
inc
xor
pop
mov
cld
std
test
xchg
cltd
cwtl
jne
cmp
add
push
dec
mov
pop
mov
repz
dec
or
and
or
add
lret
lea
adc
pop
leave
mov
sub
stos
cwtl
mov
mov
push
xchg
xchg
mov
mov
jae
sti
mov
lds
pop
dec
cmp
sub
mov
call
mov
jne
push
cmpsl
xchg
popa
cwtl
cmpsb
clc
icebp
rorb
cmp
add
roll
cltd
int
mov
pop
inc
leave
out
cmpsl
repnz
into
ret
xchg
sbb
es
xchg
es
fs
lret
add
aaa
sbb
sub
mov
add
pop
mov
xlat
mov
cmp
xchg
rorb
or
pop
insb
cld
push
lret
dec
xchg
sarl
push
ja
mov
in
int3
pop
and
or
jmp
pop
std
cmpsb
xor
stc
pop
cmpsl
and
push
movsl
xor
push
sub
cwtl
adc
xchg
add
pop
sbb
test
sahf
add
shll
add
pop
push
mov
xor
mov
inc
inc
call
movsb
lret
xlat
mov
popf
lods
dec
or
cmpsl
test
das
mov
sbb
mov
nop
fidivrl
out
jo
jecxz
nop
push
mov
xor
sahf
call
mov
dec
xor
pop
cmp
pop
testb
inc
xchg
nop
jl
mov
inc
dec
leave
mov
decb
jno
mov
jg
aaa
inc
mov
call
fs
mov
and
jl
pop
cwtl
fwait
push
mov
popa
mov
mov
mov
icebp
inc
mov
pusha
outsl
pop
mov
data16
lcall
aam
dec
jnp
mov
xor
loope
ds
iret
xor
repnz
imul
pop
add
pop
ficompl
nop
mov
sarl
imul
or
ds
addr16
fs
mov
mov
fldenv
pushf
jmp
cmpl
ss
sub
sahf
or
in
fdivrl
movsb
or
je
pushf
aad
stc
scas
repnz
cs
mov
daa
bound
and
and
enter
bound
jp
pop
jne
lea
cltd
test
mov
jae
icebp
sbb
add
out
cmp
sbb
cmp
mov
and
movb
out
les
mov
and
ror
xchg
div
cmp
or
adc
sahf
repnz
jg
push
mov
sahf
pop
stos
mov
aas
or
dec
inc
xchg
or
push
repz
dec
mov
or
in
les
pop
xchg
mov
pop
jae
sbb
xor
mov
hlt
mov
and
rcr
inc
dec
mov
mov
pop
sar
popa
mov
scas
xor
dec
xor
mov
std
nop
sbb
lods
frstor
and
sub
dec
adc
movsl
sub
jp
lea
sbb
stos
xchg
cmp
xchg
mov
dec
pop
in
nop
dec
jb
fsubl
xlat
mov
popaw
push
dec
xor
mov
jecxz
leave
sahf
add
dec
xchg
fisttps
lret
mov
fsubrs
lret
loop
cltd
in
repz
movsb
ljmp
out
xchg
loop
stos
outsb
push
out
rorl
aaa
sti
aas
int
cmpsb
xor
pop
and
in
adc
gs
lcall
cmp
push
dec
jo
mov
push
jmp
xchg
mov
dec
in
out
pop
dec
gs
mov
fs
sahf
sbb
cld
data16
jp
xor
pop
hlt
inc
xchg
call
jae
iret
add
jae
dec
pushf
mov
mov
dec
pop
dec
mov
and
in
sbb
int3
mov
outsb
mov
iret
cwtl
mov
mov
jmp
in
je
inc
fstpl
xchg
cld
dec
das
pushf
cmp
stos
jmp
shl
and
pushw
sahf
inc
test
push
insl
sbb
aas
add
inc
int3
pop
std
jne
loope
sub
mov
adc
xor
mov
imul
fbld
xchg
push
xor
js
cs
xor
je
popl
and
in
iret
sti
call
aad
add
push
pushf
inc
inc
jne
pop
dec
or
and
mov
popa
inc
rcrl
xchg
mov
mov
add
outsl
lahf
mov
int3
xchg
adc
outsb
pop
push
lcall
mov
ret
pop
adc
mov
repz
push
jge
or
in
pop
imul
mov
xor
push
aaa
mov
stc
es
cmpsb
push
mov
rcrl
xchg
imul
cmp
mov
aaa
aaa
es
mov
sbb
repz
dec
or
adc
jge
push
inc
push
jmp
xchg
mov
mov
jne
je
adc
js
mov
jge
roll
scas
fimull
push
jb
dec
daa
add
out
test
or
push
iret
lahf
cmpb
xchg
jle
stc
cmp
pop
xlat
dec
cmp
dec
fsts
sarb
pop
jne
int
push
push
leave
rorl
add
sbb
mov
pop
fs
fld1
sub
sub
pop
mov
push
push
and
sub
stos
xchg
lret
outsb
and
and
in
cmc
scas
out
jbe
mov
lahf
pop
xchg
fsubl
in
inc
cli
ss
cmpsb
pusha
loopne
jo
movsb
test
ret
popf
je
out
xlat
outsb
in
cmp
add
sbb
in
cmpsl
loopne
in
lret
mov
and
fisubrl
andb
movsb
decb
outsb
and
add
mov
sbb
mov
lea
das
inc
lcall
or
sub
adc
cmp
mov
jb
ret
mov
jmp
mov
xchg
fbld
push
mov
ret
aad
mov
push
fisttpll
jnp
and
mov
pop
mov
fmulp
xor
andl
sub
add
pop
jl
nop
int
in
mov
pop
mov
in
fcmovu
lods
cmp
scas
mov
jecxz
adc
imulb
ret
fsubrs
repz
mov
stc
inc
inc
mov
mov
mov
loopne
outsb
mov
dec
cli
pop
push
jle
push
lods
and
inc
in
fs
ljmp
pop
faddp
inc
cs
jnp
in
pop
pop
scas
ret
shlb
imul
add
or
ja
dec
cmp
clc
push
popf
xor
mov
xchg
dec
sti
int3
in
sbb
out
cmpsb
loop
out
push
dec
or
imul
cmp
mov
pop
daa
fstl
aas
clc
xchg
jmp
pushf
inc
inc
stos
and
outsl
mov
jne
mov
pop
rol
push
xchg
xor
inc
push
mov
aad
sbb
out
adc
aad
int3
sub
daa
cmc
push
or
mov
dec
jne
push
dec
jbe
out
cmp
fsubl
cmp
divb
mov
inc
inc
xlat
pushf
xchg
rorb
pop
sbb
lret
inc
repz
test
test
sub
sbb
push
lcall
into
repnz
jb
lcall
ja
mov
shlb
sti
jns
int
popf
adc
outsl
push
jg
dec
add
call
inc
pushf
rcrl
mov
mov
and
xlat
leave
ds
sub
jnp
sbbl
out
les
pop
push
xchg
inc
fstpt
mov
lea
push
pop
inc
pop
call
imul
rcl
jecxz
cld
adc
repnz
ficompl
test
sahf
jbe
cmpsb
inc
repz
mov
pop
lcall
xchg
fs
fucomip
loop
mov
add
movups
cli
cmc
jge
adc
sbb
and
imul
cmp
pushf
test
sub
cs
or
shl
mov
rclb
pushf
sub
ja
jmp
push
inc
and
xor
aaa
aam
push
imul
dec
fs
inc
add
and
daa
pop
sub
jp
lcall
mov
ret
xchg
shrl
out
in
cmp
add
adc
sub
add
pop
idiv
pop
gs
aaa
sar
loop
icebp
fildll
jl
sub
popf
fsubrl
jle
jmp
gs
int
adc
int
test
or
ss
dec
jp
add
pop
bound
into
add
out
lea
cmp
dec
int3
imul
stc
mov
cmpsb
mov
andb
pop
out
pop
dec
sub
sub
jg
xchg
or
xor
add
aas
jp
sti
add
dec
sub
gs
icebp
and
xor
addr16
stos
enter
sar
add
jecxz
cli
xchg
test
out
jne
test
into
jle
lea
mov
inc
std
mov
fcomi
mov
pusha
inc
add
mov
test
xchg
out
aad
fmulp
jmp
insl
push
pop
jle
iret
idivb
xor
sub
popa
mov
inc
fstl
call
mov
cmpsl
dec
xor
shlb
mov
mov
pop
lahf
in
in
push
pop
jmp
adc
xlat
je
push
push
mov
decl
push
arpl
std
jno
jge
push
clc
inc
pop
repnz
mov
adc
sar
dec
dec
mov
jle
aaa
in
iret
fcomp
jl
dec
lahf
push
adc
dec
in
xor
jns
pop
fisubrl
xor
or
push
aam
outsl
push
mov
push
push
mov
jl
jge
cwtl
aaa
and
pop
test
adcl
cmc
push
jp
jp
push
sub
add
clc
jo
cmp
or
sbb
ret
addl
add
xlat
icebp
stc
mov
dec
repz
in
stos
aad
nop
pop
clc
inc
push
repz
rolb
ret
stos
insl
aaa
lret
pop
push
cmpsl
into
jle
adc
jle
jl
mov
js
push
fidivrl
xchg
sbb
jecxz
pop
pop
dec
adc
pop
jg,pt
idivb
in
in
pop
in
dec
jge
sbb
jecxz
xor
fwait
sti
cli
lea
pusha
dec
mov
jne
aas
xor
and
mov
pop
jbe
aad
pop
pop
aad
jg
mov
in
sti
inc
cli
mov
test
push
cmpsw
lret
in
std
jne
pop
ja
call
dec
sbb
lods
jle
mov
out
pop
cmp
pop
jmp
ljmp
sbb
cli
aas
mov
inc
aaa
in
sub
outsl
fmuls
jle
int3
imul
push
xor
jge
cltd
or
jmp
sub
mov
pop
adc
lods
fistpll
fsubrl
cmpsb
popf
aas
lahf
je
das
pusha
ds
jecxz
enter
mov
loop
sti
adc
aam
int
push
fisttpll
lahf
push
mov
ja
push
xor
mov
stos
and
pop
sub
test
cmovl
cmp
adc
outsl
cs
scas
sbb
repz
push
jo
cltd
jbe
inc
negb
sub
push
dec
test
fidivrl
mov
inc
out
push
dec
push
mov
dec
cwtl
out
or
popf
xchg
push
sbb
fnstcw
in
add
sti
jge
cli
adc
or
sbb
jg
fisubrs
mov
mov
jnp
cmp
lcall
xor
imul
es
jecxz
scas
leavew
incb
fiadds
lahf
rcrl
sbb
or
sbb
addb
je
cli
ds
aaa
jg
outsl
xor
xchg
mov
pop
mov
hlt
lret
cltd
jg
pop
cmp
pushf
shrl
cmp
adcl
in
aad
mov
xlat
jno
cs
jno
mov
cmc
cmp
fwait
lds
inc
aam
pusha
sti
adc
loop
jbe
xchg
fdivrp
inc
shr
data16
adc
stos
sub
jg
pop
cmp
outsb
mov
pop
in
ret
push
pop
lret
pop
pop
push
hlt
mov
cmpsb
pop
pop
stc
das
jnp
mov
cld
pop
frstor
les
repz
dec
scas
stc
lcall
rclb
sbb
sbb
mov
mov
sbb
add
jb
in
loopne
insb
jp
adc
xchg
jg
sti
syscall
ljmp
inc
mov
sarl
mov
pop
jns
sub
mov
aas
jmp
cmp
xchg
xor
cld
ret
mov
fisubl
fstpt
ret
scas
cld
movntq
test
xlat
sub
mov
bound
xlat
mov
jbe
mov
movsl
adc
test
pushl
icebp
jno
xlat
jge
or
sub
scas
mov
xchg
cmp
xchg
cmpsb
js
mov
ljmp
loope
cmpsb
mov
addr16
pop
sub
jg
xchg
daa
lea
rcl
adc
jle
jae
dec
push
sub
test
pop
push
std
jge
fnstcw
mov
insb
fnstenv
inc
inc
push
aam
xlat
addb
dec
and
fadd
cmp
pusha
insb
jle
clc
js
out
lahf
das
leave
jg
xlat
scas
loope
movsb
addb
sbb
fsubrl
test
fdivs
icebp
push
je
pushf
pop
jp
popa
mov
mov
fdivrs
inc
in
push
mov
xor
push
jne
jp
inc
xor
sbb
sbb
icebp
sub
jmp
mov
enter
adc
pusha
cwtl
sbb
sbb
stos
push
push
inc
add
sbb
mov
xchg
push
in
dec
mov
cmp
aam
arpl
mov
add
lret
mov
sub
add
jns
jle
lods
sbb
inc
cs
adcl
mov
and
add
mov
and
push
shl
and
loop
lods
addr16
int
outsb
sub
out
es
add
jns
mov
arpl
sub
imul
cli
inc
cmp
lret
sbb
stos
mov
add
pop
xlat
mov
in
dec
daa
jno
add
testl
adc
stc
jae
neg
lds
jecxz
xor
out
jns
cmpl
rcrb
add
aam
push
cmpsb
ljmp
subb
sub
testl
jp
cmp
leave
sub
movsl
fld
shlb
jne
bnd
int
test
scas
sbb
cmpsb
push
stos
mov
clc
mov
in
xor
dec
push
pop
mov
lret
mov
popa
loopne
enter
popa
daa
fs
push
testl
into
mov
jns
loopne
mov
jno
sub
and
outsb
dec
lock
stos
int3
dec
and
inc
cmp
add
mov
ss
sbb
mov
nop
push
mov
jge
xor
ret
jb
push
lahf
test
leave
mov
mov
mov
test
adc
sub
or
jmp
into
push
rol
mov
cmp
shld
ja
push
xchg
push
ffree
jge
xor
scas
pop
xor
pop
andl
mov
jns
lcall
jbe
sub
repz
push
xchg
mov
adc
fists
jp
pop
inc
rcll
mov
in
movsl
xlat
popa
fs
xchg
adc
ljmp
mov
fmuls
cmp
sub
gs
mov
push
pop
cmp
adc
out
mov
sbb
push
std
sbb
push
ret
pop
mov
and
add
and
cld
lods
lret
lock
cmpsl
sarb
shlb
add
cmc
scas
fstps
push
push
dec
mov
test
repz
cmp
into
pop
and
leave
aas
loopne
stos
cmc
mov
insl
xor
mov
mov
or
xchg
sbb
pushf
add
out
addr16
scas
ret
outsb
sbb
jb
scas
and
scas
mov
repz
xchg
in
cli
adcw
adc
lret
aad
rcr
add
out
insb
loop
or
and
addr16
xor
mov
out
fsubl
inc
and
mov
mov
imul
insb
in
cvtps2pd
adc
pop
cmpsb
adc
lahf
and
aaa
dec
mov
jg
inc
mov
xchg
into
andl
mov
sub
lea
push
sbb
jns
popa
sbb
cmp
sbb
imul
dec
cmpl
fiadds
xchg
inc
aas
add
pop
push
daa
mov
out
in
aaa
cli
mov
out
mov
dec
adc
jne
jge
adc
mov
add
cmc
push
jne
repz
shr
lcall
xchg
xchg
mov
popa
xor
fdivr
xchg
jo
jns
adcb
mov
repz
inc
insl
lret
adc
and
rcl
inc
or
cmp
daa
jmp
mov
lret
mov
mov
jp
dec
sbbl
dec
cmpsb
imul
jb
inc
clc
or
popf
sbb
mov
push
insb
mov
cmc
dec
test
test
mov
fld
xchg
sub
loopne
mov
fidivrl
inc
fstpl
out
orl
ficomps
test
les
js
sub
rorl
ret
jb
mov
add
rcll
outsl
or
pop
mov
jmp
das
jge
movsl
loop
out
incl
fcmovnbe
mov
mov
dec
mov
adc
xor
jl
pop
mov
aaa
inc
sti
and
popf
push
aas
xor
xchg
fucom
icebp
dec
dec
jnp
outsl
lods
pop
leave
lahf
mov
in
loopne
add
jmp
testb
cltd
scas
imul
mov
aaa
pop
mov
stos
fistl
xchg
fistps
xchg
adc
add
out
popf
fistps
das
or
jb
scas
fildll
movsl
setbe
dec
subl
cmpsl
lock
loope
stos
dec
add
adc
mov
jmp
shll
jp
shlb
fnstcw
push
loopne
or
in
jge
jmp
sub
outsb
mov
stos
test
adc
dec
jo
adc
test
jl
xchg
adc
cmp
rcl
jle
out
cmp
sub
mov
test
ret
cmp
push
fists
cli
in
xor
aam
fnstsw
inc
pushw
mov
sub
mov
sbb
add
jle
pop
xor
int3
cwtl
clc
xchg
add
sub
pop
cmpsl
pop
dec
dec
shlb
mov
lods
fsubr
insl
xor
push
js
jp
sbb
fisubrl
jb
iret
add
add
jnp
ljmp
inc
leave
loope
test
dec
test
je
adc
lret
rcll
xlat
jbe
inc
jecxz
mov
xlat
dec
nop
mov
mov
lahf
cltd
test
in
das
cmc
lahf
int3
mov
ds
movsl
enter
mov
sbb
mov
dec
test
es
sbb
push
adc
jl
mov
dec
sti
cwtl
daa
lcall
mov
les
mov
cld
mov
push
and
mov
addr16
mov
xlat
ljmp
xchg
sub
sub
clc
rol
pop
push
and
adc
lret
mov
xchg
lock
out
inc
xor
pushf
sub
shlb
lcall
push
or
ret
insl
push
adcb
in
xchg
mov
repnz
sbb
dec
dec
xchg
add
pop
and
mov
pop
ljmp
push
sbb
loopne
and
outsb
push
inc
test
or
sub
fsubrs
movsb
cmp
push
or
sub
les
iret
ss
and
repz
fistps
les
lods
and
mov
sbb
mov
sub
cmp
loopne,pt
or
fs
ss
mov
scas
js
mov
mov
sahf
movsl
cmp
mov
cli
mov
std
roll
movsl
mov
inc
mov
sub
xchg
cmp
xor
push
loop
mov
ret
lods
sub
mov
xor
jmp
mov
jge
lcall
xchg
dec
lods
dec
mov
ss
or
xchg
test
inc
lods
pop
pop
sbbl
popa
int3
inc
clc
cmp
push
nop
shl
in
pop
hlt
dec
mov
pop
nop
push
div
mov
jecxz
dec
lea
ja
inc
gs
and
pop
push
jp
fnstcw
push
push
int3
push
mov
mov
roll
fs
arpl
mov
fmuls
jb
lcall
pop
and
arpl
push
test
nop
mov
pusha
xor
leave
xor
lds
fcoms
data16
aad
iret
jae
mov
dec
clc
rolb
in
pushaw
in
or
and
mov
into
pop
ljmp
lock
jl
out
lahf
and
sub
out
or
xlat
test
mov
cmc
sub
jbe
fcompl
js
shll
clc
outsb
sbb
jge
lret
jo
sbb
dec
jno
pop
xor
dec
adc
mov
addb
dec
out
ret
mov
lock
pop
fs
cmc
jmp
fidivrl
add
insb
stc
fcom
mov
and
cltd
testb
popa
xor
ret
fsubrl
das
dec
out
xchg
or
out
testb
sti
mov
hlt
stc
cmc
in
iret
adc
inc
out
fsubrp
inc
and
lea
pop
jo
and
sbb
out
cmc
scas
mov
sahf
sbb
fistpll
sub
mov
mov
sub
inc
loopne
ja
pop
xor
xchg
into
dec
popa
loopne
popf
jno
and
xor
xor
sbb
inc
xor
cmpsl
mov
out
sbb
dec
out
jb
shl
fildll
mov
stos
jo
les
sti
push
xchg
inc
sbb
mov
cwtl
pusha
jne
and
and
lret
and
cmp
fldcw
pop
ljmp
in
jo
pop
das
in
lods
cmp
add
xchg
jp
mov
dec
lds
push
shll
aas
enter
imull
sbb
xchg
push
mov
jp
mov
mov
fimuls
lahf
and
mov
movsl
cmp
or
enter
mov
sbb
nop
jmp
xchg
lds
push
test
je
gs
cmpsl
data16
jne
push
xor
push
sbb
fbld
push
cmp
xchg
and
adc
ret
inc
les
fsubs
std
lret
inc
mov
in
xor
call
test
cld
jmp
in
addb
pop
jno
imul
mov
jg
leave
out
movsb
ret
hlt
cwtl
cli
mov
call
rclb
repz
dec
popa
sbb
ret
mov
adc
cwtl
imul
das
push
cmc
push
out
mov
and
cmp
add
fistpl
cmp
es
loop,pt
sti
xchg
jo
xchg
icebp
loopne
mull
cmp
fs
jo
ficompl
dec
cmpb
sbb
movsb
inc
xlat
in
cltd
into
in
scas
daa
cmp
dec
clc
mov
or
pop
and
adc
mov
out
or
popa
insl
cmp
or
testl
pushf
and
lea
sub
lcall
mov
dec
pop
mov
cmpsl
aad
jae
cltd
scas
out
test
sub
jae
rcrl
ret
arpl
sbbl
test
lret
pop
mov
bound
cmp
nop
push
out
int3
mov
ret
sub
cli
jecxz
ljmp
in
and
mov
mov
nop
and
dec
repnz
push
or
cmp
xor
std
repz
mov
aad
lret
enter
addr16
fucomp
mov
bound
roll
mov
sub
lret
mov
pop
cmc
mov
xchg
dec
or
leave
mov
xchg
lret
pop
xchg
dec
push
pop
mov
sbb
out
popf
lahf
xchg
leave
fidivrs
inc
cmpl
fsubs
popa
dec
and
pop
cmpsb
fisttps
movsl
push
scas
aaa
ret
scas
push
lret
lret
insb
bound
push
push
sub
cli
adc
jge
outsl
scas
ret
jbe
iret
sub
mov
shlb
or
mov
leave
dec
paddusb
sbb
dec
push
adc
fbld
rorb
nop
mov
dec
pop
ljmp
push
ja
in
out
xchg
mov
scas
inc
jno
and
pop
ficoms
sub
and
sahf
inc
cs
mov
mull
test
adc
fstps
mov
mov
call
insl
in
icebp
test
pop
pop
mov
jo
cltd
pop
cwtl
jmp
ret
daa
xchg
pop
pusha
pusha
in
pop
arpl
mov
mov
sahf
lods
aam
mov
test
sub
in
push
mov
cmpsb
xor
shlb
scas
dec
rcll
push
int3
fldpi
push
rorl
push
and
mov
cmpsb
and
and
add
and
and
dec
adc
or
or
adc
lcall
lret
in
pop
data16
lods
js
sti
movlps
jae
sub
push
mov
cmp
push
orl
or
push
jp
cmp
jnp
pminub
sbb
jbe
into
pop
lods
jbe
rcrl
cmp
clc
jbe
mov
xchg
sbb
cmp
push
es
mov
lods
dec
sbb
jmp
scas
fwait
mov
inc
mov
mov
inc
jb
xchg
sub
movsb
leave
dec
dec
das
nop
fdivrl
or
rol
dec
popf
ficompl
push
cmp
jno
movsl
int3
test
pop
lcall
out
xchg
sbb
add
sbb
ret
push
in
mov
imul
pushf
lcall
ja
jmp
lret
inc
add
add
and
pop
out
and
ret
scas
jnp
inc
push
out
mov
lock
sbb
dec
call
jge
leave
inc
dec
and
push
or
lret
cltd
sbb
outsb
jnp
jns
call
dec
add
js
movsl
add
stc
pop
shrb
es
test
popl
test
aas
ds
xlat
test
in
or
es
fidivrs
and
iret
dec
cld
aaa
cmp
xchg
pusha
inc
lea
out
mov
ret
dec
outsb
cmpsl
aaa
and
in
xchg
adc
fisttps
mov
pop
mov
sub
push
cmp
repnz
jecxz
pushw
cld
out
movsl
jno
push
out
notb
and
mov
mov
dec
stos
lock
inc
stos
jnp
pop
push
outsb
xchg
mov
jo
ja
es
or
hlt
inc
jg
and
arpl
mov
hlt
neg
sbb
dec
fwait
bound
dec
push
cmc
in
in
std
xor
cmpsb
repz
imul
jecxz
jb
sub
leave
outsl
lods
into
mov
xlat
push
int
cmp
cld
dec
not
leave
dec
in
push
cli
mov
lock
pop
decl
jne
jo
mov
xor
dec
push
mov
adc
pop
loopne
cmpsl
fsubr
ds
inc
cli
imul
adc
xchg
mov
push
sub
iret
stos
dec
test
xchg
clc
mov
adc
insl
lods
stos
adc
shr
jno
jne
fdiv
lret
push
jo
xchg
bound
aad
out
push
pop
mov
imul
or
movsb
sahf
cmpsb
push
movsl
in
jg
dec
or
outsl
add
fbld
fisubs
xor
lahf
popf
sub
and
test
movsb
jge
in
xchg
jo
pop
mov
ss
in
xor
dec
push
fiaddl
xchg
push
xchg
std
push
dec
or
sub
lods
lcall
shr
shlb
std
xchg
jb
cmp
out
mov
pop
sub
sub
push
cmp
sbb
in
sub
cmp
cld
pop
outsl
push
cmp
scas
ss
inc
je
test
in
mov
xor
ret
out
rcll
movsl
movsl
or
adc
cmp
mov
lahf
outsl
xchg
stos
mov
add
enter
adcb
lret
lahf
in
sbb
cmpb
mov
xor
hlt
inc
imul
mov
mov
test
dec
xor
adc
or
outsb
xlat
in
rclb
call
push
add
out
mov
stc
outsb
outsl
jbe
push
icebp
stc
xlat
or
mov
mov
cmp
xchg
xchg
outsl
imul
ret
cltd
dec
xchg
call
sbb
lcall
jge
lods
xchg
mov
sbb
out
shlb
call
and
not
add
out
int
sub
cmp
stos
insb
pop
sbb
out
lods
pop
xchg
xchg
repnz
sub
out
dec
ret
pop
inc
inc
mov
shll
mov
sahf
lcall
idiv
add
xlat
imul
rolb
jmp
jae
mov
loopne
mov
das
mov
loop
lret
call
lea
jecxz
xchg
pushf
cmp
jmp
lds
pop
and
scas
flds
aas
xor
aad
adc
pop
movsl
xchg
cwtl
dec
push
iret
stos
shrl
rol
subl
rol
fldl
pop
xor
inc
sub
sbb
popf
pop
gs
jne
jb
adc
not
arpl
std
add
lret
cmp
jl
imulb
and
pop
push
lcall
std
int
xorl
insb
adc
cmc
cmp
adc
test
mov
inc
sarb
pop
inc
in
inc
cmp
inc
fistps
pop
sbb
mov
mov
in
xchg
push
cmp
shr
push
jnp
imul
repnz
clc
fdivl
js
rcl
xchg
xor
xchg
mov
or
add
movsb
out
sbb
fisttpl
scas
and
push
fstl
inc
call
cltd
inc
adc
cmpb
js
add
jecxz
sub
les
scas
out
mov
scas
jnp
or
cltd
pusha
dec
add
hlt
xchg
cmp
mov
push
ljmp
jne
mov
es
push
cmp
sbb
shll
les
inc
xchg
mov
pop
aaa
add
mov
mov
add
pop
and
test
mov
mov
add
fnstcw
pushf
stc
lahf
gs
sbbb
inc
and
push
jno
fcoml
in
lahf
pop
jg
pop
adc
xor
sarb
fisubrs
xor
inc
push
pushf
push
push
xchg
cmp
dec
sbb
pop
and
lret
inc
into
sbb
mov
push
pop
mov
stc
dec
aam
ljmp
and
lret
fxch
lea
cmp
inc
jge,pt
push
pop
jb
cwtl
mov
add
cmpsb
or
in
push
or
adc
scas
xlat
ffreep
mov
movsl
imul
decl
sbb
test
pop
leave
add
shll
insl
add
popa
aas
xchg
mov
in
mov
cmpsb
shrl
adc
mov
dec
repz
adc
bound
adc
subl
xchg
popf
mov
jmp
xor
ds
jno
adc
jge
push
into
into
or
sub
loop
and
xchg
push
aaa
sub
cld
fsubrl
not
mov
or
sbb
mov
fwait
cmp
xlat
mov
orl
cwtl
sar
jno
mov
js
add
lds
pop
daa
sbb
inc
mov
push
jno
push
push
ss
or
sysexit
ljmp
dec
out
ficoml
inc
rcrl
add
xchg
sti
fsubl
out
into
sbb
jbe
xchg
xor
adc
xchg
rclb
adc
shl
cmp
inc
imul
orl
inc
mov
cmpsl
loope
les
push
pop
sbb
lret
sahf
mov
fdivs
scas
fistl
ficomps
xlat
ds
imul
test
cli
fwait
sub
and
lahf
sbb
lods
enter
pop
jmp
xchg
fcmovne
ret
dec
dec
scas
lcall
jo
ret
aas
mov
sahf
push
inc
mov
cld
aaa
lcall
pop
mov
aam
mov
or
popa
sub
cmp
jge
call
mov
pop
lock
shlb
add
sbb
ror
incl
js
sbb
dec
adc
pop
insl
pop
mov
jo
repz
out
jecxz
js
or
pop
adc
lods
sti
fiadds
out
mov
fsubrl
xlat
out
jp
push
or
rcr
jo
rclb
ficomps
cmp
in
push
test
stos
pop
fimull
dec
push
push
rcll
pop
adc
ret
pop
mov
repz
movsl
stos
adc
rcr
mov
imul
mov
pop
popf
add
add
leave
mov
push
movsw
fld
lret
push
lods
pop
ss
es
or
mov
movsb
sbb
jns
addr16
fistps
fldcw
inc
ds
testb
out
sarb
mov
inc
xchg
add
cmp
ja
test
out
out
lods
decl
pop
xchg
stc
push
sub
mov
arpl
stc
xlat
pushf
ljmp
insl
iret
and
mov
in
movl
xchg
hlt
or
pxor
sub
aad
insb
mov
stc
pop
mov
jno
imull
sub
xor
in
ljmp
or
mov
mov
ffree
test
sbb
sarl
into
das
mov
clc
jnp
inc
fsubrs
mov
int3
mov
icebp
dec
std
pop
inc
mov
inc
jmp
sti
cmpsb
or
popf
mov
fwait
popa
and
std
int3
add
lea
add
shr
stc
mov
fs
dec
imul
xor
shr
cli
jmp
icebp
rcrb
insb
xchg
into
jp
mov
shll
jmp
sbb
xchg
fidivrs
outsb
ficoms
cmp
sub
mov
add
nop
dec
mov
mov
cmp
sbb
add
and
xchg
daa
sub
daa
xchg
cmpsb
pop
mov
dec
fistl
out
aam
pop
push
aam
fs
inc
pop
gs
dec
out
jecxz
xor
add
hlt
xor
xorl
sbb
push
repz
xchg
dec
add
push
adc
je
ja
sbb
jmp
stos
or
inc
movl
adc
mov
and
inc
in
in
mov
or
in
das
pop
mov
mov
out
rol
cmp
out
dec
lcall
jae
xlat
in
mov
leave
fwait
cmp
mov
mov
sti
es
dec
test
xchg
pop
pushf
inc
out
or
test
jle
fwait
into
insb
inc
push
sbb
stos
jg
mov
out
in
adc
pop
sub
adc
into
pop
push
xor
mov
mov
xor
pop
test
jp,pt
fcoml
ficompl
push
push
cmp
mov
out
dec
test
insl
and
adc
out
jmp
pop
jne
js
lock
cltd
dec
call
or
mov
push
lock
dec
rol
ret
adc
add
ljmp
mov
into
lret
sbb
adc
rcl
pop
pushw
daa
push
pushf
lods
mov
inc
ds
jp
fnstsw
cmp
sub
ss
jge
leave
jb
adc
add
sub
icebp
xor
divl
sub
pop
xchg
pop
adc
fcomps
dec
mov
jae
mov
lcall
push
sub
lret
int
inc
out
add
adc
rolb
xchg
mov
ljmp
jne,pt
out
mov
sbb
fmul
push
jp
sti
push
dec
adc
sbb
pop
cmp
lahf
ja
nop
es
jno
call
dec
test
jo
shr
jl
enter
lret
add
cltd
aam
jbe
aaa
daa
scas
ret
enter
jb
pop
mov
fs
rcr
negb
dec
out
dec
pop
sbb
push
push
pop
mov
push
aaa
addl
gs
push
add
mov
std
fisubs
imul
mov
fcoml
in
adc
push
xor
mov
call
cmp
sahf
popf
std
into
cmpsl
fildl
xchg
roll
pop
sahf
sbb
inc
pop
fcomi
pushf
inc
mov
xor
or
xor
pop
imull
xchg
int
in
dec
jmp
adc
mov
inc
lods
aaa
sub
jb
adc
xchg
out
dec
aaa
and
scas
inc
ss
or
dec
mov
inc
jo
mov
adc
sub
jnp
out
cs
mov
outsb
jg
lret
xchg
scas
jbe
push
shll
idivb
insl
cli
cmpsl
mov
jb
adc
divl
sbb
jo
lret
cmp
movsl
fwait
aas
lock
jae
adc
xchg
xor
xchg
xchg
enter
xchg
sbb
lahf
mov
cmp
pop
jl
jb
xchg
inc
rclb
mov
js
lret
xor
cmp
test
les
imul
push
push
clc
dec
mov
push
inc
mov
ljmp
pushf
inc
mov
jl
negb
sub
sar
push
movsl
mov
mov
out
jmp
jb
std
sub
lahf
das
push
jg
sub
divl
push
sub
xor
out
je
or
inc
cltd
into
adc
imul
jb
repnz
jecxz
sbb
xchg
out
in
xor
int3
stc
inc
jle
aam
data16
mov
or
rcrb
pop
rclb
das
jnp
mov
filds
inc
dec
sub
add
test
addl
and
pop
nop
pop
xchg
pushf
shrb
xchg
loope
cltd
imul
mov
dec
js
xchg
inc
ja
mov
mov
shll
sti
std
cld
in
pop
add
xchg
mov
fwait
xchg
mov
jnp
rcr
addr16
mov
mov
fwait
cmp
sub
popa
and
mov
mov
push
jle
fs
pop
outsl
cli
lds
ret
movsl
or
stos
test
inc
sbb
jl
mov
psubusw
das
cmp
mov
test
and
mov
scas
lods
testl
test
aaa
out
sbb
loope
es
mov
mov
mov
insl
mov
mov
and
or
jl
jg
rcrb
xor
pop
test
out
std
dec
sbb
sub
add
pop
sbb
or
hlt
icebp
mov
ror
stos
loope
xlat
stos
jae
rcl
es
enter
mov
jns
pop
add
xor
dec
push
jns
enter
scas
ds
push
push
leave
pop
push
lock
xchg
addb
repz
mov
pop
cmpsl
gs
mov
xchg
sbb
aaa
pop
pop
mov
ljmp
cs
repz
dec
pop
mov
sub
gs
stc
imul
sahf
or
in
rcrb
call
mov
ret
jmp
clc
lods
adc
fsts
ret
dec
cmp
mov
das
scas
shrb
inc
loop
jmp
stos
aas
cmp
add
inc
cmc
movsl
jo
xchg
mov
test
pusha
xor
daa
into
mov
stos
mov
jo
movsl
inc
inc
or
pop
pop
es
fucomip
xor
pushf
adc
stc
bound
lret
jns
mov
xchg
pop
lahf
mov
arpl
scas
lods
lods
roll
out
ja
xor
jbe
nop
scas
cltd
pusha
sbb
leave
daa
arpl
cmc
ret
sbb
cmp
jae
bound
inc
sbb
jecxz
div
push
pop
dec
in
cmc
cmpl
adc
mov
imul
hlt
cmp
js
aad
pop
xor
and
pop
rcll
adcl
das
mov
push
stc
and
icebp
inc
cltd
fisttps
cli
xor
ljmp
mov
sbb
pop
lret
int3
loop
cmpsl
and
dec
bound
negl
pop
pop
mov
mov
ljmp
xor
test
gs
enter
shl
aaa
repnz
andl
xor
inc
sti
xor
cmp
aaa
push
lret
cltd
push
lcall
clc
inc
lahf
dec
dec
or
imul
sub
sub
out
mov
shrl
mov
jae
jecxz
ja
outsl
mov
ret
xorb
push
sar
push
mov
imul
xchg
xchg
dec
shrl
mov
sahf
mov
rcrl
nop
fs
fildll
rcrl
inc
fs
dec
push
pop
mov
lcall
xchg
bound
add
xor
adc
mov
insl
or
jno
adc
leave
xor
stos
add
in
xchg
ds
or
call
add
adc
dec
mov
stos
jb
push
sbb
popf
fisttps
mov
fbld
je
cmp
outsb
aaa
pop
sub
adcl
cld
sahf
ja
in
or
out
mov
push
mov
xchg
jnp
mov
xchg
hlt
hlt
clc
cmp
les
sbb
xchg
insb
mov
lea
sub
add
mov
rorl
pop
push
lods
nop
add
pop
push
negl
push
fldl
add
cld
push
enter
js
and
and
cs
in
fsts
dec
mov
out
jge
rcl
mov
push
fadds
stos
rorl
pop
arpl
mov
pop
adcl
addl
jne
mov
and
mov
ja
push
xchg
cld
wrmsr
dec
mov
out
lret
xor
ret
loope
aas
jl
insl
movb
out
ret
sub
orl
decl
adc
jl
sti
mov
aam
pop
das
xchg
sub
in
leave
cmp
xchg
jmp
popf
sti
sarb
mov
push
scas
in
mov
subl
xor
div
aaa
loop
cmp
push
mov
and
outsb
jge
xchg
inc
lods
mov
arpl
xor
fwait
out
lahf
je
jno
sub
xchg
sti
sbb
pop
repnz
or
iret
or
mov
mov
dec
jmp
mov
mov
pop
add
test
push
test
jecxz
loopne
push
cmp
popf
push
je
aaa
fdivs
arpl
or
cs
xor
mov
mov
orl
add
call
loope
fwait
sarl
xor
mov
negl
and
mov
mov
pushf
sbb
mov
out
or
movsl
shrl
push
pushf
mov
xchg
and
lcall
arpl
mov
nop
imul
adc
xchg
in
fisttpl
daa
flds
movsl
mov
imul
cwtl
subb
inc
push
sbb
xor
cmp
fs
mov
push
mov
or
movsl
mov
das
inc
mov
sarl
testb
push
mov
leave
popf
in
mov
mov
cmpsl
mov
cmp
cmp
mov
mov
add
mov
aam
ljmp
jp
lods
test
xor
jnp
shlb
andb
mov
and
lret
jns
push
lock
imul
pop
push
cmp
adc
xchg
mov
out
out
lds
mov
out
in
mov
out
xchg
addr16
xchg
setb
inc
ret
scas
push
cs
ficoms
lret
scas
cmp
jg
daa
xchg
divl
jl
push
pop
sbb
cld
pcmpgtb
imul
ds
jmp
das
or
dec
insb
inc
test
aaa
pop
out
mov
or
jle
and
std
adc
or
rorl
fdivrl
push
fs
sub
aas
pushf
xchg
enter
mov
insb
sub
xchg
add
sub
std
jno
cmp
jo
inc
mov
dec
dec
jge
lds
lods
outsl
sbb
ljmp
jns
push
test
je
jge
inc
pop
push
sarl
ret
sub
lods
ljmp
int3
adc
dec
pusha
pop
jnp
cld
sub
xchg
lcall
test
pop
sbb
incl
jmp
hlt
mov
loopne
fmul
mov
sub
cmpsb
int3
jl
jne
aas
out
fisttpl
lret
mov
test
movb
cmp
addr16
sbb
addr16
or
mov
mov
cli
inc
ret
scas
insl
scas
xor
push
pop
mov
add
jmp
or
push
adc
inc
dec
mov
arpl
xor
jge
insl
fnstsw
lods
cli
scas
inc
test
in
pop
and
sbb
push
sub
dec
push
test
inc
je
or
popa
xor
xchg
mov
sbb
sahf
dec
jno
lods
loop
std
xchg
sbb
test
push
movl
sbb
movq
clc
outsl
jmp
jmp
adc
add
cld
and
sub
mov
xor
out
pop
jae
sub
test
pushf
xor
cmpsb
fdivrp
icebp
push
pop
in
dec
and
jae
icebp
imul
push
pop
pop
dec
ja
out
call
lcall
aaa
mov
je
pop
jl
iret
fidivs
cmp
scas
insb
dec
sub
adc
push
mov
out
jns
scas
inc
or
lock
jecxz
add
repnz
inc
lods
scas
sti
dec
cmp
neg
mov
cmp
std
pop
aaa
adc
fwait
pusha
and
std
push
add
cmpb
mulb
dec
xchg
sbb
fsubr
lock
insb
push
cld
mov
icebp
sar
xorl
inc
shlb
inc
stc
xor
push
cwtl
add
stos
es
loope
je
cltd
std
adc
and
ficoml
jo
xchg
pop
out
mov
shrb
xchg
addr16
push
adc
enter
and
out
push
or
pop
arpl
xchg
xor
dec
aad
sarl
xor
mov
jl
iret
dec
mov
lds
mov
mov
sbb
pop
js
or
fcomp
ljmp
push
aas
adc
outsl
sub
sahf
cmp
aam
popf
loop
xchg
mov
mov
cs
dec
bound
mov
out
fnsave
xor
and
nop
rcll
test
out
int
imul
xchg
xorb
jns
mov
sarl
test
lret
adc
gs
push
and
mov
insb
xchg
xchg
lahf
lods
hlt
jle
mov
pop
test
and
cmp
push
ret
bound
pop
aam
mov
popa
pop
pop
xchg
xchg
pusha
xchg
out
popa
push
cmc
jecxz
mov
iret
ret
push
sub
and
push
out
imul
fstpt
xchg
ja
fadd
sbb
shr
dec
jl
cmpsb
mov
adc
or
scas
popa
adc
and
imul
or
fdiv
mov
rcrl
pop
test
mov
andl
inc
mov
jae
insb
stos
mov
out
int
inc
push
movsb
cmp
mov
lahf
imul
data16
mov
insl
lea
punpckldq
inc
pop
add
fistl
enter
jnp
push
mov
lods
dec
enter
inc
in
movsl
cli
test
loope
out
mov
push
dec
cmp
repnz
mov
adc
cmp
das
das
lret
les
aam
fstpt
jecxz
loopne
add
data16
data16
xor
mov
adc
imul
aas
test
dec
mov
or
push
in
test
dec
mov
dec
mov
lret
sar
and
ret
adc
sub
pop
jmp
add
cmp
ds
fidivl
add
mov
das
ljmp
aas
idivl
out
sti
add
push
sbb
aaa
scas
pop
lods
cld
push
fwait
pushf
xchg
cmpsl
popa
divb
bsf
jae
enter
iret
push
inc
daa
xchg
roll
xor
frndint
push
jae
push
xchg
push
sub
adc
pop
jno
sub
inc
mov
add
shrl
mov
sahf
out
jne
dec
test
fisttps
fwait
bound
cs
sub
fimuls
mov
add
push
cmpl
sti
xchg
jnp
orb
je
mov
shlb
test
mov
mov
pop
ja
cmp
outsb
lock
push
or
dec
rolb
stos
mov
mov
insb
aaa
jg
lahf
iret
push
fucom
jbe
repnz
repz
lods
es
xchg
ficoms
push
into
push
cs
adc
lret
ret
jl
mov
cmp
sub
inc
mov
js
divb
addr16
rcll
fidivl
push
fadds
int3
mov
ret
mov
lcall
add
out
lods
inc
mov
std
mov
loope
test
mov
mov
in
rcr
enter
outsl
bound
lods
jle
lods
cmpsb
lahf
jp
mov
inc
add
mov
xlat
in
sub
mov
shl
sub
mov
movsl
icebp
stos
add
push
arpl
sbb
fstl
xor
sbb
fisttpll
movsb
jno
add
test
movsl
rcrl
pop
daa
mov
jle
fmull
mov
call
and
inc
out
std
cltd
aad
int
xchg
dec
mov
or
shr
jle
jns,pn
xor
out
mov
lods
xor
xor
lea
mov
test
ret
call
int
lret
cld
cltd
pusha
imul
sub
mov
dec
jns
addl
and
sti
cli
pushl
aaa
mov
outsl
ficomps
aas
pop
icebp
or
shrb
mov
nop
es
xchg
add
dec
clc
xchg
fiaddl
sbb
je
lods
cmp
imul
xor
jmp
adc
pop
cmp
scas
imul
arpl
stos
stos
mov
dec
pusha
ror
ljmp
lahf
out
and
cli
nop
jae
out
sub
paddw
aaa
pop
ljmp
add
cli
loope
loope
and
lock
cmp
in
cwtl
sub
imul
lret
stos
mov
mov
std
xchg
fisubl
pop
mov
fistpl
fmull
fstpl
mov
push
shll
mov
lcall
aaa
movsl
push
sub
xchg
scas
loopne
popf
jl
cmc
xchg
out
jecxz
mov
mov
push
pop
and
or
scas
mov
and
add
or
adc
fidivl
std
ds
inc
dec
outsl
mov
sbb
lahf
je
lcall
lret
mov
in
outsl
add
cli
jle
and
mov
imul
clc
pop
js
cli
sbb
push
out
sbb
xor
jns
pop
lahf
or
movsl
jle
dec
arpl
xor
shll
jbe
cmp
popf
mov
ror
das
inc
sub
cmpl
mov
das
jle
jp
roll
mov
sbb
in
lock
arpl
push
jne
shll
jno
gs
mov
xchg
pop
out
cmp
leave
dec
or
xor
add
int
mov
pop
inc
inc
mov
sbb
andl
es
sarb
add
movsb
jnp
push
test
adc
inc
cmp
sub
xor
add
add
call
lahf
add
jmp
cs
pop
out
fisubrl
pop
or
std
xchg
in
insl
out
pusha
pusha
enter
rep
mov
incb
mov
pusha
dec
cmp
sbb
cltd
stos
and
and
out
inc
pop
cmp
into
mov
mov
inc
adc
outsl
xor
out
mov
aas
cmc
jle
pop
push
mov
push
std
cmp
mov
rorb
cmp
shr
aad
pushf
loop
lcall
nop
dec
hlt
lods
das
inc
das
inc
sbb
xchg
jl
mov
mov
test
orb
sub
stos
popa
mov
mov
cld
dec
sbb
or
jecxz
mov
sarl
loope
push
in
sarb
cmp
in
leave
lcall
cmpsb
inc
dec
into
addb
mov
fcmovbe
mov
ret
inc
sub
xlat
shll
inc
push
jmp
jge
jl
xchg
cmc
mov
or
cmp
dec
pop
ljmp
std
lea
pop
xor
inc
paddsw
ds
bound
sahf
xchg
in
pop
leave
cmp
sarw
pusha
jnp
adc
cmpsb
push
push
sub
mov
aaa
jnp
jnp
lcall
add
xchg
mov
icebp
add
add
mov
jmp
das
in
loopne
nop
outsb
int
mov
xchg
or
dec
lret
jnp
sti
mov
adc
mov
stos
rcrb
rclb
pop
adc
mov
test
mov
and
push
cmp
movsb
mov
daa
pop
movsb
pop
pxor
push
push
jnp
mov
sub
push
shl
stos
add
and
jne
int
sbb
xchg
stos
add
adc
or
data16
mov
rclb
shr
or
test
sub
inc
inc
lods
add
cmc
xchg
sub
add
sbb
and
jecxz
and
mov
outsl
xlat
mov
fwait
sbb
dec
pop
jl
pop
loope
lods
popa
imul
shll
and
ret
and
or
xchg
dec
add
or
mov
lahf
fstpl
pop
cld
stos
jbe
dec
mov
in
popa
jecxz
ret
cld
fildl
popf
data16
pop
mov
call
clc
into
cmp
jmp
sahf
das
pop
ss
stos
call
cmpb
sbb
jno
in
add
andl
cld
cmpsl
sbb
ds
mov
sub
adc
or
hlt
movsb
aad
aam
pop
jns
repnz
stos
push
enter
cmpsb
popf
push
insb
push
aam
out
addr16
push
sbb
fwait
jmp
or
scas
rcr
out
fs
pop
je
mov
xchg
dec
lods
or
aaa
cmp
mov
jmp
push
adc
or
push
inc
clc
insb
push
mov
scas
push
adc
push
notb
outsl
cmp
enter
sub
sub
test
cmp
and
loope
pop
stos
jno
sbb
aam
inc
pop
fwait
add
clc
xor
and
xor
aas
xlat
negb
push
xlat
fdivrp
aas
fiadds
add
mov
testl
pop
fdivrp
jnp
ret
and
or
stos
inc
icebp
mov
cmpsl
and
xor
xchg
pop
das
xchg
xlat
scas
imul
jl
adc
mov
mov
clc
push
out
sbb
cli
sbb
cmp
stos
shlb
xchg
arpl
mov
lahf
out
fs
roll
fsub
xchg
cmpsb
adc
bound
dec
push
adc
pusha
pop
push
jne
sarb
mov
jb
inc
int3
ljmp
in
test
xchg
mov
mov
ja
ret
jo
xlat
push
ror
arpl
loop
add
mov
and
cmp
pushf
repz
in
mov
test
mov
jno
js
cltd
adc
add
cmc
in
xor
pusha
fisubrs
rolb
pop
cmp
jg
adc
mov
rcrb
pop
mov
int3
jp
out
int3
imul
sbb
xchg
or
mov
and
orl
icebp
push
push
les
loope
xchg
out
cwtl
push
adc
push
andb
lods
inc
loop
cltd
movsl
cmp
push
das
cwtl
mov
jno
loopne
loopne
fcomps
pop
mov
fcmove
setne
cli
call
xor
ret
cmp
stos
rorl
fbld
jb
js
fimull
sub
sub
or
cmp
into
movsl
cli
dec
fisttps
lods
sub
push
add
aad
push
ret
jge
jp
test
dec
icebp
in
lret
or
mov
or
loopne
les
mov
iret
sbb
fcom
push
into
cmp
inc
push
popa
mov
test
push
outsb
xorb
repnz
test
jl
icebp
js
jecxz
cmp
das
pop
sub
xor
out
fucom
cmpsl
add
out
jge
pop
mov
in
movsl
repz
fstps
adc
out
cmp
test
dec
cmp
out
lds
leave
divb
cwtl
push
xchg
addr16
hlt
push
pop
xor
jns
imul
mov
pop
std
mov
dec
pop
push
pusha
inc
jno
push
push
bound
imul
ds
popa
out
sub
xor
mov
out
inc
call
clc
dec
cmp
and
ds
lods
enter
test
aaa
daa
insl
add
fimuls
pop
outsb
xchg
jecxz
mov
jo
sahf
sbb
ret
lods
outsl
inc
jns
xchg
imul
daa
rcl
and
data16
push
and
push
jp
mov
xchg
in
mov
fsubrl
in
out
out
mov
sti
sahf
cmp
sbb
xor
ja
mov
in
pop
lods
sub
sbb
in
lock
mov
mov
and
jns
and
xorl
stos
loope
mov
push
mov
out
cmc
dec
jo
cmc
inc
inc
insb
lcall
arpl
add
xchg
aad
fwait
ljmp
dec
lcall
jns
pop
rcl
scas
xchg
push
adc
or
in
xchg
mov
jp
push
std
scas
and
aas
lret
pop
mov
dec
mov
addr16
cmp
cli
orb
ficomps
pop
lods
mov
push
out
loop
fwait
or
shrl
pop
fcomp
fildll
mull
shrl
enter
pop
mov
inc
sub
enter
push
adc
daa
fld
mov
inc
jb
je
shl
adc
xchg
mov
leave
icebp
out
push
in
out
pop
pop
out
jbe
fstl
pop
xchg
xor
les
xor
mov
inc
rcll
cmp
or
xor
clc
xchg
mov
stc
aaa
sub
jmp
and
fcomps
bound
mov
ficomps
daa
push
cwtl
out
cmp
sahf
and
in
and
cld
xor
dec
cmp
pusha
aaa
fstpt
inc
jmp
pusha
gs
push
aas
jge
jmp
mov
loop
mov
outsb
js
push
mov
jp
and
arpl
rcll
jbe
mov
sbb
mov
into
sti
sub
pop
rorl
mov
fcoml
cmpsb
lret
aam
and
or
adc
dec
fnstenv
lods
pop
sahf
adc
jo
mov
inc
mov
xchg
dec
incb
loope
sar
cmp
inc
xchg
dec
dec
stos
mov
push
cmp
movsl
sub
jecxz
fldenv
stos
xchg
fstps
mov
push
popa
sub
dec
dec
mov
movd
pop
sar
mov
insb
lret
ret
sbb
xlat
mov
outsl
sbb
mull
std
pop
xor
aad
cmpsl
jne
stos
mov
out
imul
decb
jae
js
jp
outsl
cmp
push
dec
fwait
adc
adc
loope
push
push
xchg
movsb
cmp
call
pop
ret
pop
fcomip
dec
iret
push
xchg
pop
xchg
mov
call
sub
inc
push
addr16
repz
add
sbb
cmc
fs
fcom
insl
mov
mov
outsl
sahf
jl
sub
mov
out
addl
insb
mov
pop
test
cmpsl
push
inc
icebp
dec
xlat
test
jno
cmc
loope
jge
jo
dec
cmpsl
mov
dec
dec
cmp
mov
loop
push
lcall
rol
push
mov
xchg
mov
loopne
addr16
add
push
movsb
jo
into
push
sti
or
rcl
call
xor
imulb
int
mov
int3
stos
cltd
insb
jo
mov
cmp
jae
xchg
shlb
dec
notl
pop
iret
mov
loopne
inc
sub
ss
and
int
filds
sbb
mov
insb
notl
jb
dec
push
icebp
mov
adc
jmp
or
fisubrl
aad
dec
cmpsb
sbb
cmovae
push
adc
cmp
cmp
push
test
push
fcmovnu
scas
pop
push
cmc
scas
xchg
bound
push
hlt
and
xchg
shll
scas
adc
scas
inc
add
adc
and
lock
test
outsb
insb
add
hlt
fbld
ljmp
arpl
ret
cmpsb
mov
pop
jmp
data16
test
push
scas
and
mov
pop
mov
jle
stos
int
adc
pop
mov
push
data16
pusha
cmovns
push
addr16
mov
sub
push
sbb
push
push
stos
sub
dec
xor
and
loope
fmull
xlat
xlat
adc
ss
jo
push
mov
mov
push
jmp
das
imul
in
cmp
adc
ret
icebp
test
outsb
inc
pushf
jns
loopne
outsb
pop
jecxz
pushf
mov
outsl
and
xchg
lahf
fistpll
loopne
xchg
in
dec
pop
add
iret
or
xchg
and
mov
adc
xor
int
mov
adc
xchg
pop
mov
xchg
cmpsb
ss
out
jmp
fdivs
cltd
push
mov
mov
jle
mov
push
or
mov
fisubs
mov
cltd
inc
testb
and
push
jns
flds
daa
xor
pop
testb
fcoms
out
mov
lahf
arpl
stc
inc
mov
add
sub
jae
add
movb
test
loope
sbb
jo
std
dec
mov
and
aad
stos
insb
je,pt
movsb
in
sub
mov
mov
dec
outsb
adc
sbb
scas
xor
ss
in
repz
inc
in
aaa
in
shl
mov
and
mov
add
cmp
sbbl
cmpsl
test
dec
pusha
push
sub
xchg
sub
imulb
fisubrl
cli
jne
and
jmp
jle
mov
je
fs
mov
jl
pop
loop
xchg
or
or
lock
imul
push
mov
mov
sar
dec
enter
push
loop
push
jns
cld
mov
inc
pop
pop
xchg
insl
push
add
dec
imull
sar
or
add
rorb
add
jae
xor
icebp
push
xor
pop
cmp
ja
mov
inc
ja
insl
mov
and
imul
enter
fisubs
in
inc
ljmp
xor
outsb
outsl
jns
jns
mov
out
jp
inc
pop
stos
test
or
ret
xchg
aaa
pop
cmove
push
cmp
out
rolb
testb
inc
dec
mov
lret
in
and
psubsb
push
ret
das
loop
jle
inc
fcompl
testb
jg
xor
popf
adcl
and
std
cmp
icebp
cmp
aas
ds
dec
mov
fwait
cmp
out
repz
jo
mov
in
xchg
and
sbb
arpl
pop
pop
pop
inc
xor
mov
test
jo
lea
lea
test
inc
nop
cmp
aam
xchg
xor
imul
dec
inc
jnp
inc
inc
ds
pushf
jmp
rcrb
std
lock
outsb
sub
dec
ds
xor
ret
xor
jnp
lds
gs
aaa
pop
inc
clc
xor
push
mov
test
sub
mov
adc
jno
xchg
dec
ja
add
xchg
lret
pop
mov
repnz
hlt
cmpl
faddl
dec
fisubrs
push
mov
lret
leave
mov
into
mov
ss
das
push
popf
ja
mov
mov
pop
jp
jle
lret
popa
cs
dec
pusha
rcll
jno
pushf
insb
pop
pusha
xor
mov
flds
fsubrl
les
cli
cmp
xor
adc
adcb
xchg
cwtl
xchg
sbbl
fldl
mov
fildl
push
and
lds
pop
jle
mov
outsb
mov
es
xchg
sbb
sbb
inc
pop
sbb
fists
stos
adc
inc
or
leave
sub
arpl
xchg
adcb
subl
ret
cmp
dec
std
jmp
leave
mov
sbb
push
sbb
dec
cmp
inc
shr
xlat
pop
or
mov
sbb
test
mov
jl
and
faddp
pop
fisubrs
push
incb
loopne
add
int3
xchg
sbb
add
dec
bound
or
mov
jae
nop
xorb
mov
dec
jae
out
into
or
imul
mov
fcmovbe
lods
test
xchg
or
call
ljmp
movsb
imull
fbstp
mov
in
arpl
in
repz
pop
inc
addr16
adc
sub
xor
or
xchg
inc
test
xchg
jge
pop
xchg
shlb
push
xchg
fadds
jne
das
fcoml
int
and
or
daa
push
and
cmp
inc
shll
out
out
popf
xor
call
push
xchg
into
mov
mov
ret
mov
loop
push
adc
jg
pop
mov
aam
pop
pop
insb
pop
jo
and
mov
lock
and
shl
mov
mov
xor
fistpll
sub
adc
mov
cli
and
jecxz
mov
xchg
mov
and
jae
cmpsl
fwait
adc
cmp
mov
add
js
push
mov
bswap
addb
cmp
and
or
jno
pop
mov
mov
push
loope
mov
lcall
test
xlat
or
repz
arpl
insb
add
pop
xlat
addr16
hlt
cmp
pop
xchg
push
mov
lahf
mov
pop
mov
repz
push
out
cmp
push
inc
inc
jns
mov
cmp
mov
mov
or
cmp
push
fisubl
mov
icebp
ret
mov
lods
je
stos
push
into
shlb
adc
mov
aad
pop
pop
mov
lods
xor
sbb
sbb
mov
cltd
mov
cmp
push
xor
jge
adc
mov
xor
test
sub
pusha
fsubrl
in
ljmp
sub
mov
in
jb
stos
loop
mov
mov
push
call
sbbl
in
ret
bound
les
push
push
pmuludq
mov
pop
xchg
leave
mov
fsubl
es
iret
xor
movsb
xor
sub
and
arpl
xchg
rol
sbb
sbb
mov
add
mov
mov
and
or
cmc
mov
jmp
mov
and
imul
bound
mov
add
test
xchg
xchg
in
xor
ljmp
xor
push
ds
shlb
js
adc
jecxz
incb
dec
jge
sti
leave
sbb
fs
and
mov
enter
sbb
fstpt
push
mov
imul
sarl
das
pop
loopne
xchg
mov
or
addl
push
ljmp
mov
inc
imul
xor
imul
fwait
scas
das
adc
outsb
outsb
ret
push
outsb
std
pop
iret
into
into
dec
pop
fadds
bound
adc
mov
mov
ds
inc
sbb
mov
lcall
xor
mov
sbb
adc
sbb
dec
insl
dec
repnz
jp
inc
xchg
aam
mov
jbe
aaa
push
jne
addr16
lock
add
push
cld
fnstcw
mov
lods
ja
lret
gs
in
mov
stos
inc
cld
cmp
mov
scas
pop
lods
mov
xorl
sub
icebp
ljmp
mov
jl
pop
stos
jne
dec
and
jmp
out
lds
cmp
aaa
and
xchg
cmp
lcall
clc
rorb
or
push
cli
dec
aas
sub
into
and
and
sub
lcall
cmpsl
decl
jmp
out
mov
pop
pop
mov
stos
outsl
sub
mov
add
xchg
jne
stc
call
sub
push
fidivs
xor
or
pop
repnz
mov
jecxz
cmp
mov
xor
dec
pop
test
mov
clc
call
pop
xorl
int
repz
and
mov
dec
insb
pop
in
xor
in
out
addl
add
leave
or
leave
scas
cltd
xchg
adc
pop
or
cmp
insb
imul
jmp
aam
adc
sub
mov
and
call
inc
stos
shlb
jge
andl
xchg
out
stc
call
ds
sbb
add
push
fcompl
in
adc
mov
mov
lea
jge
roll
in
push
and
jbe
les
aaa
or
mov
cs
sub
out
xchg
add
imul
lahf
or
or
bound
loop
or
xchg
jmp
fnstenv
sub
push
nopl
sahf
jmp
fldcw
out
dec
xor
jno
in
xorb
push
das
mov
dec
inc
lea
jmp
imul
insl
xchg
mov
jns
leave
int
pop
gs
pop
push
enter
mov
xchg
push
loopne
sub
test
sbb
lods
lret
fs
in
dec
xlat
push
cmp
xchg
jp
sti
dec
setb
adc
aaa
test
jmp
addl
test
mov
adc
push
sbb
test
aas
jle
push
fisttpll
sbb
mov
cmp
cmp
pop
dec
je
fisttps
idivb
push
ljmp
sub
imul
pop
jno
xchg
insb
sub
mov
adc
jmp
insl
ljmp
adc
push
jecxz
jbe
sub
mov
jmp
jae
es
mov
push
out
jle
dec
subl
inc
shll
nop
push
mov
gs
imulb
fmulp
and
mov
inc
push
lahf
lret
sbb
addr16
pop
cwtl
and
or
mov
insl
aas
pop
sub
sub
jo
imul
jae
out
inc
and
movb
stos
mov
mov
xlat
dec
aad
stos
mov
lea
movsb
sti
mov
sbb
push
xor
inc
sub
or
imul
inc
and
loop
rol
pop
iret
xor
aam
dec
test
test
fldcw
nop
loopne
dec
cmpsl
nop
pop
cmp
push
xchg
inc
out
arpl
into
mov
push
add
mov
aam
cmp
sbb
outsl
imul
mov
sbb
adc
repz
pop
inc
push
jp
add
cmp
inc
rolb
xchg
mov
jl
fs
dec
inc
hlt
enter
lea
inc
rol
stos
out
sbb
mov
cmp
dec
fsubr
daa
hlt
push
shrl
cmp
repnz
inc
ja
stos
ret
pushf
in
or
and
inc
adc
out
popa
mov
jb
pop
xchg
sbb
mov
jae
mov
fcoms
mov
pop
loope
mov
subl
mov
mov
mov
mov
cld
add
cmp
adc
xor
pop
cltd
mov
inc
push
ffreep
leave
mov
mov
push
test
out
std
cmp
shl
in
fistl
mov
xchg
pop
add
movhlps
cltd
fs
or
dec
push
cmpsl
cmpsl
mov
xor
js
jmp
leave
jbe
cli
xor
scas
pop
ss
mov
sarl
jo
shl
mov
pop
sbb
inc
stos
and
mov
les
sub
lret
ss
lcall
xor
pop
mov
ds
pop
arpl
data16
dec
rorb
adc
jge
mov
mov
cmpsb
cmpsl
das
mov
andl
mov
jns
imul
hlt
je
movsb
stc
add
lret
fnstenv
subb
cmpsl
inc
es
jae
sub
push
mov
mov
pop
pop
pop
lret
ficomps
insl
mov
ret
cmc
sbb
push
push
push
add
push
push
mov
leave
or
sub
mov
xor
push
dec
clc
testb
les
adc
bound
xor
mov
dec
sub
rcrl
stos
imul
jg
sub
adc
pusha
mov
repz
pusha
imul
lds
jo
push
pushf
pusha
test
lcall
incb
jl
sub
fwait
push
ss
xor
jnp
ss
mov
mov
sbb
push
jecxz
push
cwtl
outsl
dec
inc
jecxz
mov
push
and
imul
ja
xor
sub
jbe
mov
repz
pusha
sti
mov
jmp
fld
out
cmc
add
cmp
inc
outsl
fistpl
dec
into
pushf
jp
or
std
lods
dec
repnz
inc
js
dec
int3
fcomps
xchg
push
sub
in
add
iret
lods
cmc
push
scas
xchg
mov
sbb
mov
inc
sarl
ret
xor
push
xor
jne
sbb
mov
roll
xchg
dec
jns
push
frstor
push
and
push
xor
fistpl
negl
decb
dec
stos
adc
jo
sbb
mov
jp
stos
ljmp
ss
shl
jae
fwait
out
and
xchg
cmp
fistl
dec
ficoms
add
add
jp
and
inc
pop
sahf
into
js
fsubrl
sub
adc
test
jnp
push
sahf
xchg
dec
sahf
scas
ds
int3
xchg
xor
mov
aaa
cmpsb
dec
mov
mov
int
mov
xchg
daa
js
sub
ror
and
testb
jo
jbe
adc
or
fwait
push
hlt
out
es
and
push
inc
loope
xchg
mov
jecxz
mov
and
push
sub
adc
cmpsl
xor
adc
mov
xor
add
xor
divb
jmp
add
sub
jnp
loope
or
int3
vprotw
or
lods
add
addr16
decl
cltd
fs
je
fsubrl
sarb
in
popa
hlt
gs
sti
scas
jecxz
leave
mov
add
push
jmp
and
jmp
inc
loope
test
stc
pop
sbb
lahf
loop
clc
mov
movsb
add
pop
je
pop
xorl
out
fcmove
cmpsl
inc
iret
cli
or
and
popa
shrb
jg
repz
mov
mov
cmp
dec
ret
mov
push
jge
enter
inc
cli
ror
fidivl
fists
stc
in
jbe
cltd
arpl
inc
push
test
or
adc
repz
fs
out
jl
and
and
cmp
shl
popf
push
jmp
ret
inc
lret
fists
lock
test
dec
mov
into
aam
shr
push
fldt
mov
pop
dec
cmpsb
push
lret
xor
fstpt
push
sub
inc
mov
movsb
test
pop
cs
jge
mov
in
inc
je
xor
fcomps
iret
js
push
ljmp
sub
cmpsb
dec
dec
test
and
nopl
mov
or
xchg
push
pop
sbb
mov
inc
lret
fists
xchg
xchg
lock
pop
sbbl
out
repnz
mov
xchg
mov
sbb
cmpsb
cs
outsl
add
sub
sbb
mov
mov
cli
cmc
pushf
in
xor
push
jle
out
std
sub
xchg
sub
and
mov
jp
push
aaa
lret
push
ss
pusha
ret
push
adc
inc
or
aaa
dec
cmp
int
dec
xchg
leave
adc
dec
or
sbb
fidivl
std
fsubs
adc
pop
fwait
mov
inc
xchg
xchg
lods
lock
das
dec
mov
movsl
or
and
mov
xor
outsl
adc
jp
ss
ret
jge
scas
jae
rorb
inc
mov
add
cli
lahf
lods
adc
jle
out
adc
dec
adc
stos
out
mov
paddusb
cmp
mov
test
sub
call
push
test
pop
jo
push
loop
pop
imul
fnstcw
or
xor
stos
xchg
outsb
aad
pop
sti
mov
pop
jmp
lcall
fistpll
sbb
filds
outsb
test
dec
sti
ret
dec
mov
mov
cmp
arpl
test
cmpb
addr16
mov
xor
xchg
ret
orb
push
push
jb
sub
fiaddl
or
icebp
notl
inc
fstpl
icebp
sub
decb
mov
lds
iret
jo
outsl
mov
div
mov
mov
cmpsl
loopne
or
xor
enter
pushf
xchg
ret
jmp
lods
push
ret
test
pop
jle
rcll
scas
mov
xor
loop
imul
jl
in
inc
mov
js
pop
pop
ja
and
adc
stc
sti
pop
mov
jl
xor
jnp
stos
jb
mov
js
adc
test
mov
ljmp
push
mov
jl
cld
gs
and
loope
push
test
pop
cmp
add
pop
in
les
outsl
pop
cwtl
ds
pop
xchg
add
nop
add
cmp
cmp
sub
int
gs
cmp
loop
lahf
mov
fstl
cmp
dec
push
orl
lcall
dec
dec
lods
psubsw
adcl
daa
in
leave
sbb
mov
pop
xor
sbb
jmp
pop
lret
es
mov
adc
pop
std
les
inc
push
int3
popa
ljmp
ds
in
cmpsb
sbb
clc
jae
cli
call
movsb
cwtl
xor
fsubl
xchg
stos
scas
xchg
lahf
adc
hlt
inc
jae
or
sub
imull
js
jo
mov
inc
imul
mov
jne
xor
outsb
push
inc
push
mov
push
cltd
adc
scas
lods
sahf
inc
out
jo
mov
cwtl
xor
xchg
popf
jbe
outsb
leave
stc
dec
jl
pushf
jne
jg
std
sbb
aad
mov
xchg
enter
inc
popf
loop
push
push
push
mov
sahf
jb
inc
aam
dec
jg
cwtl
cmp
js
xchg
push
push
xchg
aas
cmp
movsb
imul
lcall
jl
push
dec
out
cltd
xchg
scas
stos
sub
push
ljmp
sub
cmp
scas
stos
jbe
loopne
jbe
loopne
movsl
stc
ficompl
enter
mov
adc
in
push
rcrb
push
and
test
xor
xchg
xchg
pop
ss
or
out
hlt
sbb
sahf
arpl
fs
aad
sbb
push
pop
xchg
jmp
push
scas
inc
into
aaa
mov
scas
mov
push
inc
inc
pusha
scas
scas
mov
dec
jae
idivl
and
loop
jno
hlt
xor
push
jae
jo
mov
out
popf
mov
push
inc
or
fisttps
jecxz
pop
jae
in
scas
inc
cmpsl
scas
push
mov
jmp
cwtl
cwtl
mov
fs
popa
or
stos
enter
or
dec
push
mov
lahf
jmp
cwtl
in
lods
stos
mov
pushf
bound
push
push
loope
push
test
jp
push
rcrl
aas
jmp
pop
push
jp
mov
addr16
pop
scas
dec
jp
push
xor
xor
mov
pushf
xor
add
and
xchg
cmp
cwtl
cmc
adc
das
out
mov
icebp
push
insb
rcrl
fimull
popf
xchg
cmpsl
adc
xchg
rcll
mov
add
stc
xor
mov
sbbb
and
pop
fcmovbe
or
push
mov
stos
sbb
mov
cmp
dec
xchg
sub
into
inc
xor
mov
pop
cmpsb
dec
leave
gs
clc
xor
inc
mov
mov
sar
inc
pop
in
into
dec
adc
push
push
iret
js
push
and
push
push
lcall
out
jl
ss
mov
add
sbb
aas
push
icebp
mov
pop
es
aas
mov
push
and
xchg
in
ja
mov
fst
add
and
ret
stc
dec
and
mov
or
xor
sub
or
xchg
fsts
leave
jg
nop
jp
cmp
push
sub
ret
dec
xchg
inc
jnp
outsl
stc
and
cmp
lods
jecxz
dec
outsl
faddl
mov
mov
leave
outsl
dec
mov
inc
push
lods
loope
xchg
sub
test
xchg
rorb
xor
jne
int
shlb
dec
shlb
pop
ljmp
outsb
sub
and
imul
loopne
dec
iret
or
xor
and
pop
test
push
into
jl
pop
ss
or
mov
or
pop
jnp
and
and
xor
push
sahf
jnp
fldcw
and
xor
stos
xchg
mov
add
pusha
roll
bound
sub
xchg
imul
lock
xor
aaa
iret
cmp
out
lods
and
aad
and
leave
xchg
daa
xor
inc
sbb
lds
mov
xor
fdiv
xchg
nop
stc
xor
mov
sbb
adc
xor
pop
fldt
push
and
xchg
leave
fidivl
outsl
dec
divb
mov
mov
mov
add
mov
pop
arpl
push
sub
sbb
sahf
insl
aad
jp
setns
and
in
mov
cmp
sbb
push
cvtps2pi
stos
push
mov
shrl
cmp
movsb
inc
mov
push
sub
test
xchg
sbb
xor
sub
inc
addb
or
push
xor
sbb
inc
adc
sub
push
or
inc
dec
das
hlt
mov
popa
arpl
xor
pushl
or
loopne
pushf
aam
push
xor
sub
popa
je
add
sbb
lret
jno
in
xchg
mov
lods
mov
into
xor
in
jne
mov
loopne
aad
ret
ret
into
mov
mov
push
sbb
inc
lahf
fs
repnz
sub
adc
mov
mov
insb
mov
xchg
push
movb
add
push
push
pop
loopne
jl
cld
cmp
loope
adc
dec
mov
jle
pop
rclb
fistpll
nop
xor
dec
insb
xchg
lret
popf
mov
jbe
adc
adc
xchg
cmp
insl
mov
jl
mov
push
sub
pop
sbbb
pop
dec
or
dec
adc
or
and
icebp
push
sub
ljmp
jmp
in
fidivs
jg
push
mov
push
es
rcrb
aam
scas
mov
cmpb
inc
insl
xor
sbb
fsubrs
dec
add
xor
cmpsb
decl
dec
in
mov
jmp
dec
xor
testl
lds
lods
dec
imul
mov
push
sub
mov
lret
pop
dec
sbb
jge
nop
mov
dec
loope
push
cwtl
loop
into
fdivrl
dec
sbb
outsl
cmp
aas
adc
dec
xchg
sbb
aas
cmpsb
pop
sbb
popa
in
arpl
lds
mov
fcoml
sahf
mov
jmp
clc
scas
lds
out
push
inc
dec
int3
loope
pop
or
stos
mov
clc
sahf
and
pop
push
push
mov
mov
pop
rcll
in
insl
jno
jp
mov
push
mov
jg
inc
sbb
scas
mov
pop
or
add
rolb
lods
mov
sbb
popf
arpl
mov
dec
mov
ljmp
mov
mov
std
and
xor
jnp
sahf
loope
cmpsb
imul
pop
fisttps
sbb
lea
xor
push
sub
outsb
pop
ror
pandn
mov
int3
adc
pop
ret
mov
fsubs
jo
daa
push
cmp
lods
nop
xor
or
lods
add
rorb
pop
xchg
xchg
cmpsb
mov
adc
cmp
in
sti
cmpsb
mov
push
call
jb
mov
inc
movsl
fdivs
pop
lret
add
xlat
je
rep
push
cmp
imul
fstpl
adc
leave
mov
mov
sbb
mov
pop
mov
mov
dec
stc
leave
cmp
fidivrl
or
cmp
sbb
outsb
popa
xchg
mov
ret
xor
repz
ret
std
jns
fnstenv
mov
rorb
outsb
push
aam
mov
add
or
pop
and
int
ficomps
xor
jmp
repnz
dec
enter
mov
in
inc
xor
js
xchg
jno
clc
js
add
mov
add
dec
fistl
dec
add
in
sbb
push
adc
mov
fistpll
pop
in
iret
cli
mov
adc
insb
insb
rcrl
aam
xlat
stc
stos
icebp
mov
je
cltd
adc
sbb
push
mov
sbb
les
jl
nop
inc
jnp
push
paddusw
nop
sahf
mov
push
fcompl
pop
xchg
je
jge
aam
pop
sub
push
or
sub
les
xchg
pop
mov
xchg
mov
jl
aaa
add
mov
fdivl
jb
sub
test
cmp
xchg
inc
fimuls
fprem1
or
rcr
cmp
cld
sbb
dec
dec
sbb
lea
mov
mov
pop
fidivrl
mov
cmp
test
or
sbb
test
cld
push
arpl
lea
sbb
lds
je
cmpsb
lret
pop
addr16
xchg
in
popa
xchg
outsb
xor
std
push
and
in
push
mov
xchg
jecxz
cmp
inc
lods
mov
out
sub
xchg
fdivp
cmp
in
mov
loopne
sbb
mov
add
mov
push
aam
dec
gs
sub
push
in
insb
aam
xchg
or
pushf
push
or
xchg
ja
xchg
mov
jns
xor
adc
sbbb
mov
mov
cmp
jae
or
movsb
insl
sbbb
push
push
stc
inc
xor
jecxz
xor
xchg
test
cltd
sub
sbb
inc
lods
mov
jae
in
mov
jns
rcrl
mov
mov
iret
rcrl
int
rorl
jp
lods
scas
inc
dec
lods
fwait
xlat
shll
push
pop
pop
or
sahf
js
or
jge
in
in
pop
jo
jl
mov
lret
dec
and
mov
fldl
mov
jae
cwtl
ficoms
xchg
dec
dec
orl
fnstenv
in
movsl
dec
push
dec
aas
fcomps
push
gs
or
iret
dec
dec
movsb
cmp
lcall
imul
push
cltd
shr
or
ds
aad
xlat
xchg
cs
imul
jp
push
lahf
jae
lea
fisubs
push
push
push
add
sbb
movsl
or
sub
fiaddl
mov
pop
or
add
dec
aad
jecxz
aad
pop
mov
movsl
es
xor
mov
xor
rcrl
repnz
enter
aad
out
sysenter
aad
jmp
jae
jae
sbb
jne
aam
shll
mull
inc
loopne
adcb
push
sbbl
mov
xchg
inc
mov
loop
lahf
cmc
mov
mov
popa
sahf
inc
dec
shlb
fsubr
push
inc
out
leave
push
sub
ja
popf
push
mov
lret
xchg
pop
fistl
mov
inc
cld
sbb
push
pop
jge
daa
sub
in
fimull
cmp
call
mov
aad
and
pop
pop
daa
or
pushf
or
mov
sub
push
xchg
mov
out
mov
add
dec
jbe
inc
call
cmpsl
jp
arpl
lods
push
pop
push
enterw
ja
out
aad
nop
mov
ret
js
adc
rcll
ret
dec
lock
mov
in
sti
sbb
out
cmpsl
adc
pop
pop
stc
pop
jb
aaa
rcll
insb
das
lret
subl
outsb
adc
fadds
iret
fsubrl
jecxz
push
outsl
pop
mov
mov
stos
dec
out
scas
fucom
jo
pop
jo
xchg
push
mov
aam
xchg
cmp
lods
fmul
dec
fidivrl
aaa
sub
shll
cmp
negl
push
std
inc
fsubs
pop
pop
pushf
imul
inc
sub
cmp
jecxz
pushl
push
imul
jbe
fisttpll
mov
neg
push
fistl
sti
out
lds
ljmp
das
xor
mov
jbe
dec
cli
out
loope
cmp
mov
ror
imul
cltd
push
adc
es
mov
jge
adc
jns
inc
mov
pmaxub
or
mov
sti
arpl
add
xor
cmpsb
push
sub
jne
adc
pop
jg
dec
mov
ficomps
push
aam
mov
mov
aad
dec
xor
stc
xor
or
jmp
pop
inc
into
cs
lds
push
sbb
xchg
dec
and
js
pop
lret
js
in
inc
mov
aas
mov
and
jns
outsl
mov
jae
push
pop
in
jnp
push
cmp
sarl
jnp
aam
ja
lret
mov
fcmovnu
pushw
hlt
cmp
pop
or
pop
push
out
and
aad
and
fadd
adc
mov
xor
lock
sbb
les
outsb
xor
dec
leave
dec
in
add
rorl
int
xor
scas
mov
mov
stos
test
or
inc
sbb
in
cmpsb
adc
stc
bound
push
xchg
movsl
and
mov
adc
pxor
ss
mov
cmp
fnstsw
rclb
inc
adc
inc
daa
call
cmp
cs
ja
into
lea
lds
dec
inc
pop
adc
add
nop
cmp
popf
sub
rorl
sub
rcll
daa
out
fsubrl
xor
repz
adc
pop
mov
jbe
or
xor
pop
fdiv
add
push
mulb
sub
mov
dec
xchg
ja
lea
or
fwait
jbe
ja
sbb
jmp
cmpsl
inc
test
dec
add
or
jno
sbb
aad
jmp
addr16
push
out
lahf
cmp
jns
mov
mov
adc
movsl
jecxz
inc
mov
loope
add
dec
pushf
sar
add
aaa
popf
fstpt
pusha
mov
cmpsl
cmp
stos
cmpsl
vmovss
clc
add
dec
ja
popa
jnp
fwait
mov
call
lds
aaa
xchg
int3
mov
es
inc
and
adc
dec
fldt
ds
cmp
push
iret
xchg
test
lock
ljmp
sar
paddb
and
inc
dec
add
lea
aam
daa
testb
jg
popf
cli
xchg
gs
cmp
les
pusha
mov
xor
int3
fcomi
pop
roll
mov
shlb
xchg
sub
xor
fwait
mov
mov
xchg
hlt
ljmp
shll
sub
clc
por
ret
jnp
cmp
adc
lcall
push
mov
data16
adc
mov
add
xlat
xlat
add
jae
pop
je
movsb
jb
inc
aaa
fbstp
sbb
inc
repnz
sbb
jns
movsb
mov
jle
mov
cmpsb
jecxz
or
outsb
sarl
or
shlb
lods
mov
mov
imul
push
cmc
scas
mov
jle
arpl
and
or
jnp
movsb
xorl
std
mov
jns
push
jg
pop
sti
jl
cmpsl
daa
cwtl
std
xchg
into
and
sub
cmp
inc
add
adc
xlat
or
rclb
jle
cmp
pop
movsl
xchg
add
push
aam
insb
sahf
or
sub
test
enter
push
pop
pop
adc
dec
sub
lea
fs
iret
popf
movsl
or
or
and
mov
mov
adc
or
push
das
push
push
mov
and
out
sbb
mov
mov
and
sbb
mov
loopne
lret
mov
mov
pushf
das
daa
add
or
and
push
sub
bound
frstor
mov
cmp
jnp,pn
rcrb
pop
adc
lahf
sub
fbstp
fsub
fistps
dec
sub
push
test
pop
pushf
js
out
popa
mov
scas
push
adc
push
mov
sbb
pop
in
in
rclb
mov
pop
sub
insl
fsub
push
mov
xchg
pop
das
ficoms
jno
mov
std
out
add
mov
loop
add
adc
int3
adc
test
in
sub
cli
sub
inc
insb
sub
and
inc
cwtl
call
mov
inc
inc
pop
cmp
fs
sub
cmc
sbb
pop
bound
add
sub
mov
lods
arpl
decl
sbb
pop
into
push
add
xchg
inc
test
xchg
scas
insl
or
daa
jo
lcall
mov
lods
xchg
sub
lea
out
adc
ds
fldt
lock
cs
push
push
push
and
fcoml
xlat
or
sahf
jmp
loope
in
jecxz
mov
pop
lret
std
loop
loope
dec
repz
add
insl
aas
test
mov
sti
call
sbb
sti
inc
ret
jle
xchg
iret
insb
loope
aas
xor
scas
and
daa
roll
lahf
insb
mov
jge
jne
mov
cmp
xchg
sbb
xchg
cs
mov
sbb
cmp
mov
inc
mov
or
subb
imul
xor
mov
arpl
or
inc
pop
ds
jne
cmp
xor
sbb
sti
popf
sahf
ds
cmp
in
dec
test
push
sbb
pop
stos
dec
cld
insb
push
mov
scas
mov
mov
dec
orl
sub
mov
mov
arpl
pop
inc
mov
adc
cwtl
arpl
fcmovb
sub
or
and
push
sbb
test
fwait
int
fildl
adc
lods
mov
hlt
repz
sbb
jp
push
xchg
jge
xor
jecxz
mov
iret
add
mov
fadd
iret
inc
pop
mov
pop
push
inc
sahf
into
aad
jbe
test
and
and
std
loope
aad
popa
inc
or
mov
mov
pop
push
add
or
cmpl
xor
jg
cli
sti
jns
idivl
cmp
xchg
mov
inc
sarl
test
sbb
or
or
add
in
xor
mov
pop
ja
sub
jl
cmp
ficompl
iret
lds
push
scas
stos
ret
inc
lret
sub
stos
adc
cmpsl
sbb
test
addb
pop
cmp
out
aaa
and
push
and
jo
shrl
cmp
and
pop
lea
jg
push
mov
sbb
xchg
pop
cmp
ss
push
inc
in
popa
jae
mov
sbb
into
mov
mov
leave
xor
stos
mov
hlt
pop
popf
mov
or
lahf
jmp
lret
xchg
xchg
pop
js
lock
outsl
or
inc
ljmp
test
imul
mov
lea
xchg
es
in
xor
push
inc
test
mov
loopne
push
mov
adc
xor
shrl
push
lods
cmpsl
cmp
lret
ret
dec
mov
out
ret
dec
mov
push
cmovle
inc
stc
sarb
leave
ficomps
add
leave
test
mov
xlat
incl
mov
cmp
xchg
clc
adc
fiadds
add
and
mov
xlat
insl
repnz
leave
xor
mov
mov
inc
outsb
pop
jge
jbe
js
mov
inc
add
rorb
adc
add
cmp
xchg
xchg
add
outsl
pop
cmpsl
out
scas
cli
xchg
push
pop
rolb
imul
mov
push
cmpsb
sub
pop
in
aad
lcall
int3
rcrb
inc
roll
mov
popf
mov
sbb
cmpb
jb
jo
fsts
pop
ret
enter
and
xor
es
ljmp
aad
jge
in
ljmp
pop
outsl
jno
hlt
sbb
fiaddl
mov
cli
cmp
xchg
lcall
cs
scas
mov
ds
mov
pop
or
mov
in
sub
jp
sbb
outsb
inc
mov
cwtl
and
dec
rol
push
add
lret
xchg
iret
js
dec
mov
push
pop
push
mov
int3
fidivrs
jl
test
cmpsb
lds
mov
jae
add
dec
insb
enter
sbb
outsl
xor
rorl
dec
xchg
loope
cmp
ja
je
pop
or
scas
mov
add
cwtl
push
cmpl
and
adc
push
scas
push
fbstp
fnstenv
filds
or
dec
mov
pop
jl
push
nop
sbb
xchg
pop
pop
ret
fidivrs
lds
insl
mov
das
loop
or
mov
cmp
insb
or
mov
mov
test
sbb
cmp
sub
pop
es
loop
sbb
add
inc
cmpsb
fisubrl
push
filds
idivb
das
mov
loopne
aad
fs
xchg
test
lods
jge
pop
sarl
leave
out
adc
mov
into
push
fwait
data16
mov
aaa
aad
insb
nop
or
in
pop
fadds
out
add
mov
mov
icebp
fwait
shl
or
mov
adc
jp
and
push
loope
xchg
sarl
add
fadds
lods
popa
inc
outsb
std
loopne
mov
or
lcall
das
inc
das
movsb
sbb
mov
xor
scas
jmp
fisttpl
push
inc
ret
pop
and
pop
push
cmp
xor
xchg
cmp
fcmovne
jge
test
jbe
jmp
arpl
push
or
enter
sbb
popf
int3
pop
adc
or
and
rolb
xor
inc
pop
lods
ret
ret
jns
inc
xchg
and
xchg
add
jnp
loop
aad
jle
ss
mov
incb
cmp
cmp
ss
and
xor
mov
scas
and
addl
pop
dec
inc
sbb
cmp
cmp
int3
ljmp
adc
cwtl
or
or
dec
ja
mov
dec
add
mov
sbb
push
mov
cltd
sub
mov
rclb
aad
dec
popf
xchg
bound
and
xchg
sahf
stos
mov
adcl
dec
test
mov
test
ja
mov
pushf
clc
sbb
pusha
aaa
rdpmc
mulb
in
push
mov
adc
out
icebp
mov
xor
or
sbb
cwtl
les
mov
push
mov
iret
ss
nop
mov
nop
xchg
jg
lods
lock
or
idivl
nop
or
arpl
xchg
adc
and
lret
cmc
fucomip
ljmp
sub
mov
jne
sub
into
insl
pop
inc
outsb
fsubrl
imul
jno
int
xchg
pop
jb
popa
adc
out
test
xchg
or
xchg
loope
cwtl
mov
leave
iret
jl
push
out
cmp
jg
fcmovnb
push
fistl
add
or
mov
js
xchg
mov
stos
lcall
sub
jmp
add
mov
push
les
dec
cmp
in
pushl
mov
in
inc
pop
cmp
enter
popa
add
mov
sbb
mov
push
loope
mov
negb
iret
push
dec
stc
pop
xor
adc
push
jae
out
stos
or
xchg
sbb
lock
mov
inc
test
pop
cmp
mov
cmp
jae
bnd
add
fmull
add
and
aaa
test
inc
test
sbb
arpl
fmul
int
jae
mov
leave
mov
sbb
out
mov
cltd
jle
test
push
mov
mov
idivb
aam
in
jnp
push
shll
hlt
mov
push
pop
pop
pop
orb
divl
adc
inc
inc
in
into
loopne
dec
arpl
stc
fldt
push
incb
lret
scas
int
ret
lock
pop
cmpl
and
xlat
sub
scas
lretw
aad
cmp
sahf
cmovb
test
jg
push
push
mov
mov
vpackssdw
pop
ficoml
or
xchg
dec
repz
xchg
mov
xchg
aas
mov
scas
scas
decl
mov
xor
mov
sbb
js
popa
xchg
sahf
inc
in
test
mov
push
shrb
push
ljmp
cmp
push
repnz
loop
iret
gs
lret
pop
pushf
push
arpl
out
adc
and
lds
inc
and
in
int3
cmpsb
aam
pop
das
push
clc
push
mov
shlb
hlt
cwtl
or
popf
mov
push
inc
mov
sbb
push
in
in
inc
negb
inc
leave
and
cmp
or
leave
and
push
lret
push
push
lods
rcr
sub
sub
imul
add
std
scas
xchg
push
jbe
arpl
ficomps
pop
std
subb
ja
mov
test
and
repz
repz
fwait
cmp
xchg
repz
push
hlt
adc
sbb
out
insl
ljmp
js
jg
aad
push
jl
test
clc
stos
xchg
adc
jp
xor
sahf
in
dec
in
hlt
mov
scas
inc
inc
pop
or
cmpsl
and
std
or
sar
mov
adc
xchg
sub
mov
adc
ss
shlb
sbb
adc
and
sbb
mov
out
adc
aaa
mov
sbb
enter
pop
mov
fists
test
or
out
pop
xor
aad
aad
pop
sbb
push
int
mov
negb
jo
push
lahf
cmpl
jl
mov
xchg
mov
call
push
test
xor
push
jmp
nop
bound
enter
aam
loop
lds
shrl
fstpl
std
hlt
jge
into
pushf
push
stos
fidivs
sbb
insl
cmp
or
mov
sbb
xor
xchg
push
or
mov
inc
jno
fbld
mov
push
gs
inc
xorb
ds
lcall
es
inc
out
sbb
pop
mov
clc
neg
sub
push
ret
jl
cmp
add
shr
add
sbb
and
push
sbb
lds
into
outsl
rcll
lahf
sbb
cmp
lret
fldt
mov
shrb
jg
aaa
cmpsb
pop
sub
inc
and
xor
inc
and
and
ds
mov
mov
cmp
push
cld
inc
lods
jl
dec
mov
and
sub
loop
jns
sub
pop
adc
lods
xor
mov
mov
dec
ficoml
mov
jne
jbe
adc
shr
dec
cmp
mov
cli
cmp
lret
insl
sti
xchg
into
pusha
ljmp
ds
mov
cmpsl
lcall
or
hlt
pushf
outsb
xchg
sub
lea
test
notb
je
std
jl
rcll
test
mov
push
test
out
into
pop
inc
cmovle
cmp
stos
push
fcomip
jl
inc
jmp
push
loopne
mov
flds
inc
insb
pop
aam
add
movsl
push
sbb
fadds
movsl
jl
mov
orb
sarb
je
xor
je
pushf
inc
ret
ss
dec
daa
ljmp
aaa
inc
jle
lods
in
ret
shl
pop
cmpsb
jmp
scas
sahf
push
jo
jb
xchg
insb
cmpsb
mov
adc
or
push
leave
shlb
out
pop
and
popa
push
and
push
mov
cld
sbb
or
jbe
test
pop
cmp
js
hlt
mov
push
sahf
sbb
inc
je
cli
enter
push
js
and
jo
jne
jecxz
outsb
add
cmc
add
lahf
lea
dec
cmpsl
loope
aad
cmp
lock
repz
push
add
xor
push
outsl
js
push
test
das
lret
xchg
insl
pop
cmpsw
data16
fwait
adc
call
test
sti
into
xchg
rcl
sbb
orb
shll
sub
or
int3
or
shrb
cmp
push
inc
insl
cli
jb
cmc
popl
lock
imul
push
xchg
sub
aaa
stos
sub
ds
cmpsl
add
xlat
mov
jmp
enter
mov
mov
jecxz
fistl
xchg
lock
xchg
inc
pop
les
incb
fmuls
outsl
cmp
sbb
stc
insl
call
hlt
xchg
push
mov
mov
out
fcoms
sbb
sarb
push
mov
lock
out
jnp
mov
pop
and
outsb
arpl
stc
sbb
lcall
mov
or
add
adc
pop
fidivs
mov
rorb
add
sub
or
in
or
adc
add
xchg
js
push
or
push
mov
into
lcall
mov
push
outsb
ss
je,pt
pop
nop
in
out
adc
aaa
enter
int3
sbb
andl
mov
popa
and
insb
orb
lods
dec
cwtl
mov
fs
sub
xchg
in
arpl
xor
imul
mov
stos
xor
nop
pusha
mov
dec
pop
aam
cmpsb
mov
stc
scas
or
leave
out
repz
and
or
push
fisubrl
fisubl
jnp
int
or
push
sbb
xchg
popf
lods
inc
jge
push
lcall
xor
pop
lret
and
lods
jbe
test
and
rol
scas
push
int3
outsb
int3
aad
insl
into
mov
ljmp
mov
fdivl
movsl
call
in
ficoml
test
xchg
mov
imul
or
cmp
push
and
cld
bound
imul
mov
insl
xchg
shll
push
push
xor
fiaddl
aad
aad
jb
sbb
mov
adc
xor
push
test
repz
jnp
arpl
cld
shrb
je
or
inc
dec
int
stos
lea
jmp
xchg
and
mov
aad
cmp
mov
fwait
adc
js
sub
dec
insl
jb
or
or
xor
les
pop
sub
mov
mov
ficoml
fldt
lahf
lock
push
shlb
cmc
mov
pop
push
ja
addr16
mov
cmp
xchg
ja
loope
add
push
sahf
jge
arpl
loop
mov
jnp
stos
cmpsb
lea
jo
fs
mov
stos
leave
sub
xchg
hlt
pop
adc
aaa
push
inc
cmpsl
adcb
mov
or
mov
sbbl
sub
fsubrs
roll
push
out
lods
sub
xlat
pushf
jp
add
sbb
popa
movsb
popf
pop
xchg
xlat
les
int
push
pop
dec
cmp
xchg
stos
in
pop
ficomps
stos
dec
lahf
negl
sub
dec
adc
mov
data16
and
fs
push
or
xlat
lea
pop
pop
cmp
icebp
loope
jb
dec
add
and
dec
xchg
jo
add
mov
lcall
push
jecxz
test
scas
jp
in
test
xchg
cmp
cltd
ja
mov
pop
sbb
dec
fcmovbe
push
cmp
jne
shlb
push
dec
mov
xor
test
cwtl
lcall
xchg
inc
mov
adc
push
inc
or
js
imul
mov
test
and
mov
xor
pop
outsl
pop
pusha
stos
and
fnstsw
jae
ret
push
aas
int3
pop
in
sub
stc
adc
jl
and
xchg
add
jp
les
jl
stc
mov
adc
das
mov
cmpsl
pop
jmp
cli
and
sbb
mov
push
dec
jb
mov
push
xchg
stos
fisttpl
lods
fcompl
add
fdivl
xabort
or
and
cmp
hlt
faddp
pop
mov
mov
mov
int
jne
inc
ss
adc
je
lds
mov
add
pop
dec
test
add
mov
mov
pop
mov
dec
sahf
in
cs
mov
xchg
dec
subb
rclb
jmp
xchg
push
stos
in
cwtl
jge
les
xchg
cmovnp
xlat
adc
mov
xchg
out
add
cmp
xchg
mov
inc
out
mov
aad
mov
fucomp
in
lods
and
es
cmpsb
adc
dec
add
mov
addr16
or
test
inc
inc
cmp
dec
call
xor
push
test
stc
jno
cmp
rorl
icebp
push
adc
ljmp
cmp
js
in
push
mov
jecxz
mov
xor
dec
adc
and
test
xchg
test
pop
sahf
sti
movsl
xchg
and
xor
repz
data16
xchg
in
mov
out
leave
push
insb
movsl
jp
xchg
pop
fsubs
out
mov
in
fwait
cwtl
outsb
movsl
mov
dec
lock
andb
fstl
rorb
sub
sbb
fcom
and
ss
repnz
fidivrs
loopne
cmc
test
dec
fdiv
ret
push
lret
arpl
enter
inc
add
lock
in
pop
xchg
cmpsl
mov
cmp
and
lcall
imul
test
pop
fildll
sti
cmp
pop
jle
xchg
enter
test
leave
aas
adc
inc
mov
jnp
outsl
push
dec
test
lods
jns
or
in
sub
imul
popa
jp
mov
hlt
inc
xchg
jmp
mov
sti
mov
sahf
adc
or
aas
xchg
aam
aaa
inc
sahf
mov
pusha
bound
test
xchg
mov
adc
adc
cmp
shll
add
jo
jbe
popf
hlt
icebp
testl
imul
movsl
mov
xchg
dec
dec
leave
sbb
and
add
sub
out
mov
or
ds
mov
mov
mov
mov
jno
outsb
orl
test
mov
push
push
mov
jne
jne
sub
jnp
cmp
pop
lea
sahf
movsl
push
mov
push
insl
fcomps
xchg
sub
loope
fndisi(8087
adc
push
lods
sbb
dec
scas
sbb
jbe
mov
std
dec
xor
push
dec
mov
jp
ljmp
push
lea
sbb
sub
cmc
nop
jno
sub
xchg
xchg
adc
adc
sub
add
or
test
xchg
dec
outsb
sub
leave
cmp
out
sbb
and
and
lea
pop
or
cs
adc
sub
mov
cmc
xor
inc
mov
xchg
leave
int3
das
mov
dec
mov
hlt
mov
xchg
dec
jb
sub
aam
roll
inc
adc
lret
cmp
xorl
mov
loop
ror
insl
mov
sbbb
pop
or
xor
inc
and
shr
pop
xchg
push
or
mov
cld
cli
in
sbb
sahf
adc
sbb
dec
jae
dec
pop
lahf
push
dec
popf
scas
cmpsb
js
jecxz
ret
mov
ret
jns
ja
dec
gs
pop
push
sub
xlat
leave
out
daa
stos
jo
sub
mov
fimull
je
std
jnp
fistps
jno
mov
xchg
int3
xor
fiadds
push
or
iret
xchg
loop
outsb
dec
cmp
lret
loope
cwtl
call
in
popf
jo
push
push
aam
lcall
xchg
fmulp
jno
cmp
mov
mov
ss
mov
pop
loope
jp
dec
movsl
repnz
mov
and
mov
xor
jo
jns
les
shlb
xchg
push
stos
iret
mov
jb
pop
insb
xchg
push
fcoms
inc
mov
mov
subb
pop
cs
mov
xor
mov
cmp
std
jae
shrl
cmp
or
out
dec
stc
in
push
xchg
fdivl
lret
sahf
vrcpps
stos
or
scas
ljmp
js
scas
mov
cmp
dec
fucomi
dec
mov
xchg
cs
xor
inc
dec
xchg
xor
sbb
leave
ret
xchg
fstps
xchg
sti
lds
mov
push
mov
fsubrs
jmp
lods
imul
in
sbb
inc
cltd
cmove
push
pop
popa
pop
dec
xor
test
test
in
pop
sbb
cmp
sbb
mov
mov
andb
xchg
jle
inc
movsb
sbbl
jle
add
sbb
xchg
pop
mov
stos
adcl
cmpsl
divl
jge
dec
int
jge
fsubs
push
jb
and
movsl
test
flds
icebp
mov
cmp
ljmp
inc
arpl
mov
repz
and
mov
popf
mov
and
jge
push
jno
mov
test
gs
js
push
adc
lret
mov
sub
sti
mov
daa
push
or
lea
adc
mov
in
jp
orb
pop
xchg
loop
rcr
mov
and
sbb
lret
mov
nop
pop
jne
cmp
aaa
sbb
shrb
jo
shll
lds
int
addr16
adc
les
movl
mov
xor
mov
sub
push
scas
jns
pushf
mov
pop
aam
daa
mov
inc
inc
pop
popf
js
push
jle
scas
jp
nop
into
mov
dec
loop
dec
out
adc
mov
icebp
mov
inc
dec
fistpll
mov
fcmovb
nop
repz
lods
xchg
jmp
and
jns
lea
adc
cmp
push
aad
sbb
test
lock
cs
xor
ljmp
pop
pusha
sahf
mov
mov
mov
adcb
addr16
cmp
stos
cmp
in
jmp
sbb
adc
pop
jle
dec
or
xlat
mov
sub
rcrb
scas
cltd
xor
ss
or
xorl
repz
jno
lret
out
out
das
cmp
into
pop
adc
mov
mov
int
ror
push
ret
dec
pop
inc
push
pop
jno
jp
movsb
cmc
out
inc
aad
jmp
repnz
push
insb
dec
cmc
insl
add
imul
sarb
inc
data16
leave
pop
ja
leave
xor
fwait
inc
pop
fisttps
or
fwait
arpl
inc
pop
mov
into
sbb
xor
jmp
fcompl
xchg
out
xor
mov
add
dec
imul
pop
push
out
negb
fnstsw
and
jns
xchg
popf
mov
outsl
aaa
add
out
insb
fistpll
fimull
sarl
sbb
push
notl
mov
xor
mov
jne
pop
push
sbb
insl
pop
inc
sub
fstp
mov
or
cmc
mov
add
sbb
scas
inc
xchg
push
jmp
push
imul
pop
mov
ret
jmp
or
jl
adc
cmp
pop
xlat
sub
scas
mov
sub
lret
rorl
sbb
in
je
ja
and
and
ret
xchg
push
jo
dec
mov
jae
lret
test
or
mov
cmp
andb
mov
dec
pop
lods
mov
insb
addr16
jne
fdivrs
xchg
ja
jle
push
mov
notl
pop
sbb
sar
nop
in
xor
je
sub
or
bound
jno
and
les
lods
or
je
sub
jmp
xchg
xchg
sti
xlat
pop
sub
aaa
mov
push
jmp
cmp
pop
pushf
mov
es
mov
jmp
xor
dec
mov
adc
and
adc
cmp
mov
jbe
push
pusha
mov
jmp
es
movsl
popl
aad
stos
lds
das
mov
cmpl
cld
push
xchg
cmp
push
jle
pop
adc
jo
je
push
mov
ficompl
jg
jb
jno
movsl
stc
lcall
xor
and
pop
jns
pop
std
notl
push
into
and
cwtl
outsb
mov
xchg
cmpsl
fildll
push
mov
sbb
dec
jno
push
sub
sbb
dec
mov
fbstp
add
add
push
and
adc
pop
imull
jae
lret
dec
mov
mov
dec
jbe
xor
fwait
pop
lret
push
adc
std
mov
insb
or
and
pop
dec
mov
sub
fsubp
inc
mov
xchg
push
ret
ss
jecxz
iret
push
test
mov
dec
les
jmp
outsl
outsb
mov
jmp
cmpsl
pop
inc
scas
mov
fwait
cmp
into
out
dec
enter
cmp
or
mov
int3
ss
shl
incl
fsubr
out
out
or
ljmp
cmpsl
dec
cmp
add
push
xchg
scas
lock
push
adc
in
loope
fcmovnu
movsb
adc
mov
inc
xchg
or
pop
das
das
xchg
or
shl
pop
xchg
bound
lret
xchg
xchg
rcr
xchg
adc
and
xchg
dec
dec
add
sbbb
and
or
jb
mov
jl
pusha
fildl
outsb
lcall
xchg
in
sbb
fisubs
push
rorl
mov
lods
pop
out
pushf
lret
shrl
ss
jl
ds
sahf
cmp
inc
imul
pop
cwtl
sahf
call
mov
std
popf
sub
mov
mov
pop
stc
pushf
loope
mov
xchg
add
jne
push
or
inc
push
std
mov
inc
mov
push
cmp
xchg
testb
inc
pop
add
xor
das
ds
dec
mov
xor
test
sub
pop
push
popa
sbb
add
jb
xlat
gs
movsb
add
movsb
pushf
mov
xor
mov
mov
sub
and
or
inc
xor
sub
es
in
cmp
mov
mov
mov
xchg
inc
loopne
shrb
xchg
or
mov
mov
in
outsl
add
jbe
lds
fimuls
sub
mov
and
jo
mov
inc
insl
idivl
popf
ljmp
mov
aam
sbb
pop
out
or
push
out
inc
xor
out
xor
inc
pop
pusha
xchg
aaa
movsb
jbe
xor
cs
jmp
inc
es
add
lock
insl
lret
cmp
ret
push
rolb
inc
sub
in
loopew
adc
sbb
inc
dec
mov
cmpsl
ret
ret
lods
in
jae
xchg
negl
add
add
pushf
or
sub
imul
insb
mov
ja
pop
mov
cmp
pop
add
pop
sarb
dec
cmp
jb
sbb
cmp
add
jmp
cltd
jbe
test
jl
pop
and
repnz
scas
enter
insl
repz
mov
inc
add
or
aaa
dec
lods
mov
fwait
pushf
std
xchg
lds
aad
push
subb
pop
cs
dec
add
outsb
outsl
fnstenv
sub
stc
sub
xchg
cmc
cmp
out
test
int
imul
cmp
mov
push
out
cmp
push
jae
shlb
es
cltd
push
sbbb
push
dec
mov
xchg
add
jo
lods
cwtl
xchg
in
andl
movsb
das
cmp
pop
and
mov
dec
cwtl
jbe
inc
and
arpl
mov
or
xlat
dec
pop
dec
cmp
cmpsb
sbb
sub
sbb
jg
test
mov
es
jne
daa
add
xor
inc
pushf
in
sub
and
pop
jmp
xchg
jle
mov
lock
cmp
cli
mov
lods
mov
bound
dec
sub
sbb
push
sub
outsb
inc
pop
pop
push
pop
cs
sbb
pushf
dec
arpl
addr16
jecxz
xor
ficoms
lea
popa
pusha
lods
lods
loope
outsb
popa
sub
std
popa
js
pop
ds
lods
xchg
and
ljmp
ss
aas
ficompl
les
mov
sub
sub
stos
cmp
or
mov
lret
pop
insl
ljmp
insl
pop
clc
add
mov
inc
add
push
fisubs
lds
lret
sbb
inc
loop
pusha
icebp
xlat
pop
or
lods
cmp
push
sbb
jb
popa
outsb
inc
sub
je
cmp
and
pop
out
mov
mov
cmp
es
movsl
out
lods
and
pushf
je
scas
aas
addr16
arpl
xor
jg
pop
lods
arpl
fst
add
sbb
fisubrs
add
mov
pushf
sub
loop
dec
arpl
call
call
fnstsw
cmpl
sbb
adc
movsb
push
or
rorb
add
shll
pop
push
ds
es
setns
dec
scas
mov
out
xlat
xor
loop
iret
movsb
add
xchg
xor
jnp
xlat
mov
aam
jae
fildll
in
in
insb
movsb
test
mov
aas
inc
dec
jecxz
push
int
insl
mov
push
aas
imul
ss
dec
push
push
sub
ss
test
ror
data16
mov
mov
sbb
inc
sahf
xor
add
cwtl
xor
push
sbb
add
pop
push
jl
test
cmp
mov
ret
lock
mov
lea
int
cltd
inc
pop
xor
sbbb
pop
addr16
sub
dec
cmp
scas
xor
xor
iret
mov
adcl
addr16
les
add
xor
push
shlb
cmpsb
sbb
in
cmpsb
pushf
faddp
pop
or
pop
dec
xchg
cmpsl
aaa
inc
frstor
icebp
cmp
or
loope
mov
mov
mov
push
xchg
push
xchg
xchg
ficomps
orl
pop
pop
in
or
mov
cmpsb
cmpsl
jns
dec
push
test
add
push
aaa
jg
pop
mov
std
adc
adc
add
mov
adcb
fsubr
mov
outsl
dec
add
test
jmp
push
imul
jne
jbe
arpl
lods
loop
jecxz
sub
sub
inc
mov
cmpsb
lret
mov
lcall
cmp
out
pop
or
jb
mov
mov
inc
pop
dec
movb
ds
jg
xor
scas
jnp
dec
mov
dec
adc
add
fstpl
out
push
ds
ja
pop
mov
mov
mov
or
sbb
and
jb
stos
rorb
add
lods
mov
xchg
fwait
push
sbb
rorb
shr
pusha
cmpsl
adc
fisubs
ret
test
arpl
ja
fsub
mov
adc
out
sbb
xor
ret
and
mov
and
pop
mov
inc
jb
clc
pusha
in
push
fnsave
and
jo
cmp
and
outsl
mov
xorl
pop
stos
movsl
sbb
aam
loope
mov
cmp
sti
jo
jle
iret
mov
in
dec
lods
and
adc
lock
dec
sbb
jnp
sub
and
add
in
cmp
add
mov
rcrb
fdivs
inc
dec
mov
mov
ret
push
outsb
adc
inc
add
inc
loop
jb
xor
push
jns
fbstp
movsb
scas
icebp
stos
imul
push
lret
mov
scas
cld
lcall
add
mov
scas
mov
test
and
adcb
mov
pop
jg
mov
or
cs
in
leave
add
fnsave
in
jle
xchg
cmpsl
push
pop
insb
or
jb
cmp
clc
push
rolb
in
aaa
sub
adc
mov
dec
add
das
xchg
mov
xlat
pop
ret
mov
test
fidivrl
sbb
fwait
dec
out
or
adc
add
imul
sti
ljmp
rolb
inc
enter
add
fisubs
cmp
xchg
adc
xor
dec
shll
subl
adc
loop
rol
je
test
xor
fistps
icebp
and
ja,pt
lahf
cmp
lods
mov
repz
stc
sahf
or
lods
mov
sub
cmpsl
and
inc
std
push
sbb
cli
lea
hlt
dec
rorb
mov
stos
inc
int
int
leave
in
sti
in
xor
adc
fsubr
out
push
push
jmp
cmp
dec
aaa
push
popf
add
adc
adc
push
dec
and
xchg
out
inc
dec
xchg
xchg
ljmp
or
mov
jbe
and
add
jbe
push
mov
sub
fsubrs
sub
jecxz
shlb
cmp
scas
jo
mov
pop
jb
xor
pop
lret
stos
incl
mov
sbb
push
and
faddl
cwtl
jb
cmc
adc
cmc
outsl
push
cs
adc
imul
inc
mov
cltd
sbb
test
notb
push
hlt
xor
je
add
dec
mov
push
dec
nop
mov
gs
mov
xchg
imul
pop
xchg
ljmp
pop
xchg
jnp
outsb
xor
push
jle
sbb
push
or
adc
push
adc
in
fldl
lods
inc
push
aad
sbb
add
out
add
and
sbb
push
out
or
test
daa
inc
jle
stos
ss
fsubrl
pop
in
mov
push
aaa
addr16
lds
idiv
xchg
mov
shl
mov
ss
icebp
pop
xchg
repnz
outsb
push
xchg
or
hlt
inc
push
das
or
sbb
push
or
jle
je
out
test
jecxz
jmp
movsb
sub
fdivrl
or
inc
aam
cmpsb
mov
push
dec
lcall
inc
subl
out
xchg
xchg
jge
insl
cmpsl
or
ret
and
divb
mov
adc
inc
pushf
and
jnp
out
xchg
or
cmc
adc
call
inc
add
mov
sub
pop
cmpsb
sar
insl
jbe
jne
sbb
lods
and
xchg
mov
or
clc
push
inc
ficompl
push
lea
into
bound
push
outsb
fsubs
mov
ss
add
inc
pushf
icebp
cmp
clts
jl
dec
or
mov
sub
ret
gs
mov
out
add
push
pop
or
adc
sub
sub
ljmp
into
daa
popf
push
lret
pop
dec
mov
inc
sub
clc
insl
lods
ret
out
unpcklps
insl
pop
push
test
rcll
shr
add
mov
into
iret
jne
add
inc
push
xchg
out
sbb
js
stos
inc
cmpsb
xor
or
xchg
fcmovu
dec
xchg
cmpb
cmpsb
mov
xchg
jmp
jmp
xlat
push
out
daa
inc
add
stos
lds
xlat
jo
enter
inc
mov
jge
xor
testl
inc
insl
lock
cmp
inc
dec
fsubp
pop
mov
fstps
fnsave
lds
pop
mov
testl
ret
inc
in
add
mov
outsb
cmp
push
test
and
push
pop
pop
jmp
adc
lock
psubb
pop
jmp
push
and
xchg
hlt
iret
push
push
mov
sub
dec
roll
enter
and
insl
ds
das
addr16
gs
push
stc
out
mov
mov
fidivrs
loope
xor
js
cwtl
push
in
pop
xor
aad
jne
inc
and
cltd
add
adcl
pusha
or
inc
mov
add
add
add
jbe
adc
cld
pop
xor
jge
and
pushf
fisubl
test
add
fs
cmp
fnstsw
sbb
call
push
push
mov
int3
mov
pop
outsb
jge
inc
lret
test
jle
lds
mov
mov
in
loope
lock
xor
sub
lcall
xchg
mov
shlb
aad
sub
subb
push
hlt
inc
sahf
xorb
jmp
mov
mov
jl
aam
mov
movsl
repnz
lea
mov
add
ds
in
adc
in
cmp
and
fwait
test
xlat
cmp
xor
cmpsb
adc
jl
test
or
push
lret
pop
pop
cmp
dec
mov
aam
jns
arpl
sti
outsb
or
xchg
xchg
and
push
sub
bound
inc
xor
mov
or
es
push
sbb
daa
call
mov
fwait
mov
inc
ljmp
lahf
mov
add
xor
jmp
imul
jp
out
aas
xor
sbb
mov
aam
pop
jg
aad
movl
daa
fsub
mov
xchg
xchg
mov
out
pop
lds
jp
and
cltd
cmpsl
mov
or
xor
mov
jno
fstl
push
pop
cmp
push
aam
pop
inc
and
pop
popf
test
mov
push
aam
stc
jo
iret
cs
sbb
pop
push
lock
repnz
sub
mov
mov
in
lods
cmp
adc
lret
dec
adc
pop
sahf
aaa
cmp
clc
sahf
or
pop
pop
stos
imul
out
ss
out
push
xor
ror
repz
pop
fwait
pop
sahf
pusha
movsl
push
jno
imul
mov
cmp
cli
push
fidivl
lea
xchg
das
fwait
mov
hlt
push
int3
adc
xchg
add
aam
xor
mov
scas
push
sub
mov
fldt
mov
enter
cmpb
mov
aas
add
rol
push
push
pusha
jnp
xchg
inc
mov
fwait
or
xchg
daa
data16
or
std
mov
sub
add
xchg
jnp
out
mov
xor
int
lods
std
inc
inc
fwait
pop
and
dec
lret
lret
seta
adc
pop
jo
mov
in
push
out
mulb
jle
clc
pushf
out
scas
add
enter
sub
pop
mov
dec
data16
lea
outsb
js
test
xor
test
mov
faddl
pop
sub
jne
mov
cmp
cwtl
xchg
mov
mov
insb
cmp
xchg
cmpsb
sbb
roll
aas
scas
sub
inc
sbb
xchg
jne
addr16
jmp
lret
xlat
mov
jecxz
les
jns
mov
stos
ljmp
xor
mov
xor
scas
cmp
adc
iret
add
add
xchg
or
repnz
sub
lock
into
pusha
cmp
sbb
xchg
mov
and
test
dec
pop
movsl
sub
cmp
daa
push
fistl
aaa
add
in
loope
add
xchg
clc
push
xchg
jne
or
mov
mov
ljmp
icebp
cwtl
mov
push
int
retw
inc
nop
or
jbe
mov
xor
xchg
pop
xchg
add
mov
ret
decl
inc
out
dec
jae
sbb
inc
jbe
sub
lods
jns
sub
ja
cmp
mov
test
inc
cmp
outsl
scas
xchg
insb
lcall
mov
adc
bound
inc
int
cmp
and
lret
imul
repnz
cmp
mov
pop
std
rorb
or
testl
popa
and
roll
push
pop
inc
inc
mov
and
mov
or
adcb
mov
cltd
cmp
fs
and
aas
fs
iret
xchg
xor
jecxz
outsl
push
jecxz
mov
mov
add
hlt
push
idivb
pop
sar
bound
jae
scas
mov
fs
xchg
gs
fwait
xor
arpl
fs
add
cltd
popf
pop
sbb
mov
add
sub
subl
xchg
scas
movsl
jg
out
cwtl
sub
mov
inc
mov
inc
hlt
and
loop
sbb
inc
xchg
pop
outsl
mov
or
mov
out
inc
mov
fst
bound
pusha
push
push
inc
xchg
loope
dec
mov
andb
in
int
ja
fstpl
xor
and
push
orb
test
inc
insl
inc
cmp
jecxz
shlb
cmpsb
sti
add
testl
in
adc
cwtl
scas
dec
je
stos
mov
enter
lock
xor
leave
daa
pop
cwtl
cmp
imul
xchg
cli
mov
jl
clc
push
lret
dec
cmp
cmp
fmul
sub
in
xor
in
outsl
stc
leave
das
daa
sbb
pop
out
testl
cmp
fstps
rorl
or
scas
aad
outsb
jno
pop
scas
push
pop
popa
dec
jb
jne
cli
jno
xlat
fwait
ja
xchg
push
cs
sbb
rol
and
bound
and
in
or
add
mov
jno
rorl
cmpsb
pop
push
mov
sub
pop
cmp
hlt
lret
lret
xor
out
data16
jo
inc
mov
dec
cmpsb
int3
fwait
shll
xor
or
mov
movsb
and
xor
js
mov
in
sub
andb
repnz
enter
mov
ret
mov
mov
popa
sub
iret
mov
mov
je
xor
jmp
pop
rcrb
jp
popa
sub
ret
cmpsl
outsl
xchg
mov
mov
insl
sbb
jns
and
jl
xchg
adcb
in
scas
nop
leave
cmpsl
dec
cld
dec
pop
inc
jge
or
cmpb
cmp
dec
jbe
pop
inc
sahf
push
or
sbb
adc
stos
divb
iret
sbb
pop
push
sub
ficompl
jnp
stos
fsubs
jmp
aam
gs
aaa
nop
sarb
int3
push
pop
mov
flds
fs
popf
dec
mov
imul
stc
insb
aad
les
dec
mul
ret
push
lcall
test
mov
lcall
iret
mov
lock
xchg
cmp
rolb
mov
je
out
imul
hlt
in
push
cli
shl
jmp
sbb
hlt
or
inc
outsb
cli
loopne
cld
inc
in
dec
or
pop
add
repnz
adcb
xchg
movsb
dec
orb
idivb
fistpl
stos
scas
js
push
mov
lretw
xor
out
insl
shll
jno
jnp
sarl
xchg
add
add
fwait
mov
aad
xchg
dec
clc
aad
pop
xor
adc
icebp
mov
xchg
mov
aam
pop
sub
scas
adc
pop
rorl
mov
bound
aad
mov
pop
scas
push
cltd
mov
cmp
pop
int
test
dec
int
cwtl
ljmp
add
into
ja
sbb
repz
sbb
arpl
jp
inc
push
mov
push
dec
xchg
push
or
adc
in
adcb
xlat
fstpt
leave
fnstenv
test
lahf
pushf
xor
fcmovnu
xchg
es
adc
xchg
dec
adc
fisttpl
or
xorb
adc
mov
jne
pop
aam
sub
lret
mov
mov
fiaddl
hlt
out
and
into
out
je
shrl
adcl
jmp
and
lods
or
rcrl
pop
pop
fcoms
adc
xor
jecxz
pop
pop
xchg
push
aad
add
mov
cmp
push
lret
fs
inc
mov
cmp
xor
stos
jp
mov
out
iret
in
mov
aas
adc
xor
aam
movsl
adc
mov
mov
ret
in
cmp
pop
leave
mov
adc
sub
sub
adc
cmp
pop
dec
imul
pop
dec
sub
negb
insb
jno
adc
arpl
dec
in
cld
std
ljmp
cs
repz
loopne
repnz
popf
sbb
cli
iret
lock
or
hlt
cmpsb
sahf
xchg
popf
push
jmp
jle
and
pop
neg
sbb
out
mov
clc
shl
pop
push
ror
clc
popa
cmp
mov
fstpl
ret
imul
cli
lods
xchg
mov
add
mov
jg
aas
lods
das
inc
scas
push
pop
fwait
in
push
mov
loopne
and
out
xor
pop
sub
idivl
out
aaa
add
fisubrl
push
mov
or
and
push
testb
out
jmp
bswap
mov
add
fistpl
iret
popf
add
mov
push
aas
mov
cld
sub
fistpll
mov
xor
rorl
outsl
sti
insl
push
decb
and
and
xor
cmpsl
and
data16
outsb
insb
mov
jp
popf
out
leave
inc
idiv
imul
test
into
out
ljmp
add
sarb
std
std
mov
xor
cwtl
outsb
pop
jmp
jl
lock
jle
cld
mov
jle
aam
sbb
sub
xchg
pusha
ja
test
and
jno
cld
test
pop
inc
xchg
aas
aam
into
mov
mov
dec
xlat
cmp
pop
jno
into
dec
scas
das
out
out
and
mov
sbb
mov
sbb
outsl
rorl
clc
out
cwtl
lock
mov
decl
stc
cmp
jl
aas
stos
pop
clc
xor
or
cmp
dec
jle
hlt
movsl
test
xchg
int3
icebp
pop
movl
cmp
cmc
popa
into
dec
clc
jmp
cld
pushf
das
repz
std
xor
xchg
std
jl
cmpsl
insb
or
xchg
jo
push
cmp
xor
std
jb
pop
sarb
pop
mov
movsl
int
rorl
cmpsl
loopne
das
xchg
negb
pop
dec
loop
xchg
notl
pushl
mov
lret
shlb
cltd
loope
fstl
xor
xor
adc
es
xchg
add
adc
enter
les
or
addr16
adc
push
add
add
iret
sbb
pop
out
das
lcall
push
jp
icebp
lcall
pop
jle
xor
cwtl
popf
int
stos
lret
cmpsl
jnp
xorb
push
sub
xlat
insl
inc
xorl
sub
and
push
into
in
xorl
pop
jp
mov
push
ret
out
xchg
mov
jl
cmp
xor
ret
hlt
mov
data16
add
sar
pushf
xchg
lret
inc
jl
add
cs
mov
in
sti
repz
out
mov
shrb
fbld
pop
in
mov
adc
xchg
leave
cmp
leave
jo
fdivrs
out
mov
jmp
lods
cltd
push
imul
imul
lahf
testb
inc
lock
into
in
fildll
mov
mov
cmpsb
je
ds
lret
add
dec
or
leave
pusha
adc
or
xor
jmp
xchg
cmp
or
gs
mov
add
jb
int3
mov
inc
add
lock
push
nop
mov
rolb
add
cltd
std
loope
pop
mov
mov
add
xchg
fstl
xor
push
enter
bound
test
insl
sbb
idiv
sub
jg
mov
pop
repz
jecxz
cld
cmp
mov
mov
fadds
imul
rorl
stc
cmp
mov
in
sbb
xchg
enter
cld
les
push
mov
repz
pop
icebp
sbb
nop
cwtl
lahf
js
outsl
out
mov
out
or
xchg
in
nop
repnz
into
fsubs
mov
fs
push
cmp
lret
mov
ja
pop
pop
int3
outsb
aas
icebp
outsl
push
push
push
or
mov
negb
adcb
ficomps
adc
lods
jg
add
mov
bound
cmp
jmp
out
std
mov
cld
scas
mov
rclb
pop
jl
xchg
mov
rorb
push
xchg
arpl
fsubrl
sarb
out
mov
int
mov
mov
pop
push
xor
or
lret
sbb
sub
fcoms
mov
mov
xor
add
pop
pop
jnp
js
mov
mov
push
out
dec
les
test
repnz
in
in
loop
jb
push
sub
or
sarb
paddw
and
adc
and
pop
jmp
jmp
shrl
mov
les
or
xor
add
cmpsb
bound
or
cld
or
mov
out
pop
fldl
cmp
cmp
mov
push
xor
scas
sbb
aam
pop
pop
int
lock
clc
xor
jo
add
inc
push
inc
cmp
xchg
mov
addr16
ja
xchg
pop
ficompl
inc
mov
out
jno
mov
jle
loopne
add
nop
insb
stc
pop
scas
fidivrl
add
imul
pop
dec
xchg
push
notl
stos
add
push
scas
jecxz
pop
mov
add
outsb
mov
push
imul
xchg
inc
pop
dec
add
int3
inc
ljmp
imul
lds
or
gs
mov
push
add
jg
pop
lret
xor
pop
popa
jg
add
cmp
iret
xchg
dec
sbb
mov
add
fwait
add
aad
movsl
or
bound
mov
inc
mov
xchg
in
cmpl
shr
push
dec
xchg
fistpll
jno
out
hlt
ret
das
fwait
mov
pushf
cmp
repz
push
into
cmc
repz
subb
ja
sbb
and
cs
ja
push
subb
je
sbb
sarb
inc
das
popa
shrb
test
mov
jno
pop
push
or
jae
je
cmp
gs
loop
into
iret
nop
fstl
push
mov
fbstp
adc
cmc
dec
rcrl
and
cmpsl
addr16
inc
inc
mov
xlat
pop
and
into
iret
cltd
cmp
cli
mov
dec
cwtl
cmc
xchg
clc
sarb
inc
cmp
sub
lods
negl
xor
jmp
add
std
inc
lds
jmp
in
int
icebp
jle
filds
nop
inc
fbstp
xchg
jne
lahf
test
fs
jae
and
lcall
xorb
repz
sbb
sbb
outsl
out
cmp
fnstcw
popa
add
add
jo
jno
sarl
in
xchg
rcl
mov
mov
pop
mov
pcmpeqd
jl
dec
lcall
loopne
pop
rclb
jmp
pop
mov
out
sub
cmpsb
inc
cwtl
jb
test
jne
push
pop
cwtl
add
sub
call
cmpsl
ds
hlt
xlat
lock
mov
inc
jl
loop
lret
pop
jns
adc
mov
mov
jecxz
push
dec
arpl
clc
cld
ret
push
xor
lcall
clc
adc
jl
cmp
mov
int
fnstenv
and
pop
ljmp
ljmp
jmp
stos
fadds
imul
and
mov
mov
mov
shrb
mov
fwait
cwtl
and
inc
mov
jle
scas
cmpsl
sub
pop
cmp
nop
rolb
sbb
add
adc
andb
gs
popf
add
add
add
jmp
in
or
addr16
cmp
add
jno
mov
pop
shl
sahf
and
xor
xchg
cmpb
xchg
xlat
inc
aam
push
cmp
repz
pushf
add
add
test
add
lds
add
shlb
cmp
add
aaa
lods
add
inc
repz
ja
push
cmc
fyl2x
inc
pop
and
cmpsb
loope
pop
lahf
adc
xor
in
popf
inc
xor
insb
xchg
rcrl
xchg
ja
aam
insl
cmc
lahf
addr16
cmp
inc
jp
testl
pop
jae
scas
test
test
std
xchg
aad
xlat
add
xchg
jmp
push
jne
hlt
dec
pop
lahf
xor
sub
cmovb
aas
movb
lahf
ja
mov
int3
mov
repz
push
mov
fisttpl
xchg
jae
xchg
ds
fisubs
cmpb
jbe
jg
sbb
jg
sbb
mov
test
jge
cli
out
into
lret
mov
lods
divb
or
clc
lds
nop
push
fistps
mov
pop
push
pushl
gs
mov
inc
cmp
cld
sbb
clc
cmpsl
xchg
cmp
sahf
pushf
sahf
sbb
adc
out
incl
cmp
mov
mov
popa
jnp
in
andl
or
dec
and
adc
lahf
lret
insl
cld
in
xchg
test
sarl
mov
or
std
sub
jnp
fstps
pop
sahf
push
xor
mov
test
outsl
push
jg
arpl
test
leave
sbbl
mov
loope
mov
sub
stos
scas
faddl
loope
mov
imul
ljmp
arpl
movb
subl
fdivp
mov
aaa
cmp
div
mov
roll
jle
scas
mov
repnz
in
test
pushf
dec
in
les
mov
mov
outsl
mov
clc
sub
mov
sbb
aas
pop
clc
int
aas
repz
lock
cld
mov
jle
les
imul
movsl
popf
cs
insb
push
mov
loop
cmp
mov
sub
fldl
lahf
sbb
ljmp
xchg
mov
pop
ret
or
callw
out
jle
mov
sbb
or
mov
jl
mov
mov
popf
pop
fisubrl
sbb
dec
insl
jle
xchg
push
jb
mov
fwait
lods
mov
decb
mov
rorl
aad
mov
dec
or
push
inc
ljmp
test
addr16
xchg
adc
xchg
cmp
dec
rorl
mov
aad
std
leave
repnz
mov
scas
mov
cld
movsb
ffreep
pop
cmp
popf
std
leave
clc
pop
adc
arpl
daa
jl
aad
push
aam
push
jle
push
inc
stos
sub
push
jmp
inc
or
jg
iret
clc
inc
repz
inc
jno
adc
push
mov
xor
mov
jp
sti
loop
push
idiv
cmc
xchg
xor
jnp
inc
jb
js
xchg
inc
repnz
or
xor
and
std
mov
loope,pt
rcll
cmp
stos
adc
sbb
xor
dec
jne
push
aas
sub
or
pop
or
add
aas
test
das
inc
test
js
mov
cmc
clc
addr16
xor
inc
inc
ds
loope
xchg
stos
inc
push
out
xlat
loope
lret
out
push
jb
loopne
xlat
nop
jge
ret
pop
mov
jno
mov
int
pop
and
xchg
cmp
and
outsl
mov
sahf
pop
add
or
jg
in
pop
jnp
hlt
bound
cmp
movsb
ds
in
lcall
mov
sub
rorb
add
jg
mov
fnstenv
adc
or
sar
popa
insb
inc
push
and
jns
fcmovnbe
bound
enter
ja
jmp
lea
or
rclb
xchg
mov
imul
jne
dec
bound
jl
xchg
pushf
cmpsl
mov
cmp
mov
aam
jne
and
loopne
out
push
push
adc
loope
mov
jle
mov
jno
inc
notb
mulps
lret
mov
or
push
icebp
add
les
fidivs
addr16
pop
aad
aas
lods
dec
xor
test
dec
lret
lahf
add
and
adc
stos
mov
push
cmp
lret
jl
pop
xor
xor
scas
mov
in
rcrb
es
and
dec
loope
pop
stos
mov
jns
mov
leave
stc
cmp
mov
push
push
sub
nop
jo
fisttpll
inc
mov
mov
jl
imul
ds
xchg
jp
sub
or
dec
out
jae
test
push
sub
cmp
rcrl
xor
outsb
pop
sub
sbb
sub
fsubr
lahf
cmp
or
dec
sbb
push
test
dec
outsl
pop
and
call
mov
push
fsub
fimuls
or
ja
in
int
inc
add
es
xchg
inc
scas
rorb
inc
fcoms
xlat
push
repz
adc
and
mov
popf
and
push
daa
repnz
aam
xor
into
sti
std
test
add
dec
and
andl
in
testl
lea
pop
inc
enter
dec
jle
aam
rorb
int3
jp
inc
fwait
mov
fldl
insl
rclb
loop
add
inc
daa
pop
scas
mov
ret
stos
dec
pop
add
outsl
cmp
popa
mov
insb
mov
popa
cmpsl
jmp
into
and
cmp
xor
inc
sti
ja
movsl
sbb
adc
sub
cmp
pop
iret
xchg
jmp
xchg
and
add
ror
push
imul
imul
or
fcomps
dec
xchg
cwtl
inc
in
mov
adc
int
xchg
cmp
xchg
add
movsb
pushf
stc
stos
or
and
daa
enter
iret
dec
mov
clc
sub
dec
pop
cs
aam
xchg
dec
adc
mov
imul
cmp
sbb
inc
xchg
ret
loope
sbb
stos
fists
mov
stos
sub
add
call
and
jg
lret
cwtl
xor
jne
leave
leave
loope
pop
sbb
xor
addr16
std
or
out
aam
out
adc
xchg
mov
cbtw
and
or
sub
cmp
jmp
sbb
inc
into
mov
sbb
hlt
loop
fs
jb
adc
sbb
test
into
and
xorl
or
mov
add
pop
iret
pop
test
scas
mov
xor
out
cwtl
popf
fisttpl
fsubl
nop
cli
ret
xor
int
mov
push
sarl
dec
ljmp
dec
push
cmpsb
inc
loop
out
pop
push
adc
push
and
push
inc
push
lods
push
mov
movsl
ret
jl
and
xchg
aam
inc
iret
rcll
pop
pop
xor
cli
and
or
lds
inc
ja
in
mov
fisubrl
out
divl
cmp
lock
enter
dec
mov
aad
push
loop
subb
mov
push
mov
mov
xchg
repnz
stos
mov
loop
and
lret
jb
loopne
and
test
jle,pt
cmp
in
mov
in
jnp
sub
dec
imul
sbbl
test
bound
incb
or
xchg
push
pop
ss
jae
push
das
cs
gs
inc
mov
mov
imul
ret
in
cmp
call
sahf
xlat
fistpll
out
aam
inc
adc
xchg
or
cmp
test
adc
fisttpll
jns
adc
pop
inc
mov
flds
mov
xchg
lea
scas
stos
sub
int
push
stos
inc
pop
push
pop
iret
dec
test
int3
xor
dec
inc
xchg
xchg
enter
xorb
shll
cmp
or
add
xchg
jmp
push
stos
jno
fildll
mov
pop
stc
ss
sahf
push
fdivp
xor
int
cmp
xchg
pop
loop
adc
cmp
jge
and
lret
sub
mov
mov
lret
out
pushf
and
mov
call
and
mov
mul
xor
mov
lock
cmpsb
data16
push
data16
sub
mov
sahf
mov
test
fmuls
pop
dec
push
cmp
out
push
inc
je
fwait
mov
lods
je
gs
mov
push
add
dec
mov
pop
out
imul
cmp
mov
ret
loopne
ljmp
insl
push
sub
ds
flds
xor
fstl
sub
cmpsl
movsl
sub
pushf
insb
mov
cmpsl
and
jb
jns
jnp
call
sub
insl
sbb
fiaddl
outsb
pop
test
adc
bound
mov
lcall
adc
test
add
jge
sahf
sbb
and
jno
daa
jle
mov
cmp
cmp
mov
dec
mov
je
mov
sub
jns
out
jb
js
push
hlt
pop
sub
add
cwtl
into
notl
sbb
fwait
mov
mov
ret
mov
mov
mov
js
jb
lea
mov
cwtl
cmpsl
sbb
imul
or
push
mov
outsb
mov
mov
jmp
scas
and
pop
mov
cs
add
or
sub
push
sbb
push
jno
mov
mov
jb
scas
outsl
and
roll
mov
pop
loopne
add
xor
roll
push
push
sub
jae
jle
test
pop
mov
pop
and
iret
and
dec
cltd
pop
pop
lods
mov
das
aad
call
jno
jno
xor
fs
fmull
cmc
dec
dec
push
fcmovnb
shlb
leave
sbb
pop
jge
mov
inc
out
inc
mov
sbb
aad
adc
add
scas
popf
inc
jecxz
mov
aad
and
int3
mov
cmp
pop
pop
or
sub
cmp
and
aad
mov
push
stos
in
movsb
pusha
les
or
std
pushf
jmp
push
loop
jno
dec
pusha
cs
inc
push
cmp
outsl
ja
cmpsl
popf
jge,pt
out
aaa
adcb
addr16
lea
cmp
sub
pop
jo
pop
mov
js
sbb
xlat
inc
imul
aas
dec
fwait
int
pop
and
xchg
insb
jl
xchg
rcll
stos
or
orl
clc
int
icebp
pop
sahf
sbb
hlt
jb
stc
neg
pop
adc
testl
sub
or
xchg
sti
push
cmp
repnz
dec
xchg
jns
mov
arpl
mov
or
push
dec
fcmovu
add
or
loopne
add
inc
divl
nop
push
cmpb
std
lods
mov
or
lret
cltd
test
outsl
xlat
add
rolb
add
mov
jb
mov
adcb
gs
rorl
mov
es
sahf
sub
popf
mov
lds
fwait
push
jle
mov
jo
xor
in
adc
xchg
mov
jg
ret
fs
mov
lea
mov
nop
fnstenv
stos
popa
loop
orb
cwtl
jo
shl
js
or
cli
sub
clc
pushf
cmp
pusha
out
cmp
mov
and
aam
movsl
in
jne
movups
add
icebp
sti
cmp
ja
pushf
jmp
bound
lock
sub
dec
jle
sarl
dec
rclb
or
xchg
cmp
hlt
mov
mov
xchg
repz
pop
sahf
sbb
cwtl
sub
fsubrs
mov
push
cs
lret
dec
data16
mov
lock
rcrb
aam
jecxz
inc
xor
call
aas
aas
popf
push
cmpsb
in
imull
movl
add
jmp
cmp
dec
cmp
mov
or
dec
dec
inc
mov
jne
adc
sbb
adc
aas
adc
movsl
push
sbb
cmpsl
push
mov
mov
xchg
sbb
jne
data16
pop
mov
lock
dec
sbb
cmp
and
jo
sbb
push
jo
or
cmp
gs
xchg
movb
jmp
sub
movsb
and
push
scas
or
out
dec
jns
stos
jp
adc
sbb
fists
enter
pop
lahf
hlt
popf
sub
push
scas
cs
fs
test
mov
pop
arpl
fnsave
jge
je
add
ficoml
arpl
sub
out
js
lahf
jo
dec
mov
sub
je
jo
dec
xchg
push
adcl
mov
mov
dec
subl
adcl
and
xchg
int
aad
mov
adc
sbb
pop
jp
sbb
jmp
imul
popa
out
and
xor
mov
sbb
popa
mov
pushf
lock
faddl
add
xchg
cmpl
fcmove
xchg
popa
mov
subl
loop
loop
jns
push
pop
push
test
pop
cmp
sub
and
and
push
mov
xor
insb
mov
in
sub
cltd
call
aaa
jnp
pop
push
addr16
jnp
lret
pop
and
test
mov
insl
mov
ds
call
mov
mov
pop
pusha
or
jmp
aad
mov
dec
lock
in
lea
mov
mov
fld
fldt
xor
test
mov
xlat
arpl
or
enter
jl
mov
jb
push
scas
dec
push
sbb
jl
jmp
sub
repnz
inc
mov
aad
jl
out
mov
hlt
sub
outsb
xor
mov
fists
add
std
stos
xlat
xor
jo
int3
and
repnz
push
into
je
inc
pop
inc
mov
push
mov
fidivrl
arpl
in
pushf
and
xor
stos
sbb
mov
sub
sbb
push
sbb
imul
jl
ret
xor
lds
jae
push
xor
lret
hlt
xchg
and
adc
pop
xchg
sub
and
xchg
jmp
bound
andl
mov
pop
cmp
mov
jg
or
adc
repz
fmuls
push
ds
jge
mov
dec
iret
mov
in
test
call
cli
sbb
les
mov
rolb
jno
scas
jne
jmp
inc
jbe
and
pop
ja
mov
adc
and
xchg
das
or
ficompl
inc
dec
pop
sbb
out
fstps
mov
movsb
xchg
les
xchg
call
movsl
neg
notl
data16
andb
mov
es
popl
mov
aas
jno
xor
lds
clc
outsb
ss
mov
dec
push
xchg
movsb
sub
lds
pushf
inc
movsl
test
xlat
push
in
mov
test
push
popf
push
cmp
lea
and
arpl
mov
pop
loopne
inc
rcl
or
fisubs
push
stos
mov
mov
icebp
sub
xor
aad
mov
loope
fucomi
cli
test
xor
or
push
inc
pop
movl
lock
iretw
adc
xor
test
adc
cmp
cmpsb
test
inc
mov
and
sub
stos
mov
addb
mov
sub
in
cmp
jns
mov
aad
dec
leave
pop
in
sub
cwtl
cmp
lret
sub
push
or
jg
sub
dec
fcomps
push
fcompl
movsl
and
xor
and
ss
cmp
xor
lods
hlt
push
mov
stc
loope
cs
xlat
data16
daa
mov
sbb
sahf
mov
or
sbb
test
test
rorl
xor
xchg
sarb
aam
and
mov
jbe
imul
cmp
pushf
pop
mov
mov
mov
loope
cwtl
aam
movsb
xor
xchg
jne
push
mov
xor
mov
adc
adc
jecxz
filds
jo
mov
mov
push
lock
popf
xor
data16
insl
loope
fnstenv
fwait
pop
in
sbb
mov
dec
mov
int3
out
pushf
or
ret
cmp
xor
mov
push
inc
ficompl
xchg
push
cmp
mov
sbb
in
aam
stos
loopne
dec
push
jnp
out
jae
lods
inc
fcomps
xor
insl
js
sbb
in
out
xor
mov
mov
jns
pop
jnp
or
stc
mov
es
fwait
push
enter
pop
sarl
movsl
jecxz
loope
loopne
mov
loopne
push
xlat
push
cmovno
jo
sub
lcall
scas
adc
popf
and
or
adc
fimuls
pop
add
mov
mov
nop
mov
dec
mov
pop
test
std
push
int3
mov
cli
jo
pushf
pop
out
arpl
pop
dec
sbb
ljmp
ljmp
mov
out
pop
popf
shrl
dec
push
aam
insb
mov
test
xor
mov
lahf
sbb
addr16
mov
addr16
xchg
stos
mov
lret
test
xchg
outsb
pop
and
testl
cmp
stos
pop
inc
pop
fwait
mov
cmpsb
jns
push
push
cmpsb
push
xor
xchg
lods
dec
arpl
jno
sub
sbb
imul
fidivl
add
sbb
and
push
jecxz
adc
dec
in
sbb
sbb
mov
bsf
cld
insb
xor
add
adc
push
test
dec
lods
mov
ret
mov
jns
cmpsb
sbb
adc
push
lret
lcall
mov
fisttpll
sub
mov
xchg
call
mov
data16
movsl
hlt
or
dec
xchg
popf
xchg
mov
jns
sti
lret
in
data16
pop
push
mov
aaa
fwait
daa
adc
xchg
int
leave
out
jb
inc
push
cmpsl
adc
cli
ret
pop
mov
sbb
pop
out
push
pop
loope
dec
sbb
daa
cmp
cmp
aaa
add
xchg
daa
dec
enter
int3
mov
iret
das
xchg
pop
enter
add
imull
out
ja
dec
hlt
jnp
lods
add
sbb
pop
pop
mov
push
pop
or
into
lock
adc
sub
mov
sahf
dec
out
xchg
xor
push
dec
xor
mov
adc
cmp
mov
xor
out
jne
mov
dec
gs
test
dec
and
cmp
cwtl
in
fninit
push
jae
leave
and
xchg
cmpsl
rol
nop
dec
cmp
out
xor
fwait
std
loop
add
pop
movsl
mov
stos
xor
mov
cmp
sbb
xchg
cpuid
lock
call
inc
push
sub
es
mov
xchg
mov
movsb
jns
loope
addr16
pop
movsb
lret
shl
sarb
dec
mov
jecxz
push
sbb
ret
ret
lret
sbb
insb
dec
and
and
xchg
jle
sub
jnp
hlt
scas
sarl
mov
ret
push
sbb
shlb
imul
mov
adc
insl
test
cmc
jb
ret
je
insb
xchg
addr16
push
das
xchg
ja
ss
jbe
mov
pop
or
insl
orl
pushf
out
push
hlt
pushf
arpl
mov
push
cmc
jns
aad
xor
mov
push
shll
lods
in
inc
push
push
add
pop
pop
and
scas
mov
shl
sbb
mov
int3
movb
push
rcll
and
dec
addr16
push
dec
mov
repnz
sub
push
xchg
jno
dec
push
xor
clc
and
es
push
test
xchg
or
inc
jb
xor
test
lods
hlt
inc
mov
aad
int
mov
ss
sahf
adc
jo
int3
jge
sbb
aaa
and
shrl
jb
aas
xor
mov
add
lret
mov
push
pushf
push
gs
xchg
adcb
inc
out
cltd
sarl
cmpsb
jo
pop
rclb
sub
push
add
out
mov
loop
ret
dec
xchg
jge
loope
pop
mov
sti
adcb
push
adc
push
testb
popf
imulb
out
sbb
adc
out
test
loop
mov
mov
push
jnp
dec
js
repz
xchg
xor
call
loope
loop
cwtl
mov
xor
pop
loope
ds
dec
dec
sarl
sti
lods
jb
mov
pop
out
subb
jl
jno
cli
add
pop
sbb
imul
loopne,pt
jle
and
in
sbb
mov
divb
jg
add
add
add
or
adc
and
inc
rorb
jl
clc
adc
and
inc
rorb
cld
clc
mov
push
iret
pop
pusha
pop
fs
mov
sbb
mulb
pop
out
scas
shrl
pop
jnp
cltd
push
das
sbb
popa
jmp
xchg
lcall
jns
jg
sbb
arpl
mov
xor
fdivr
xchg
push
inc
aam
fmuls
outsb
inc
add
in
popa
fstpl
adc
push
mov
repz
leave
testl
cs
adc
ret
scas
nop
jns
xlat
pusha
cs
xchg
test
adc
out
fsubs
incb
rorb
fs
adc
cwtl
jle
es
and
mov
jne
in
loope
sti
mov
sti
fwait
inc
mov
mov
test
inc
mov
mov
ljmp
iret
lret
aas
sar
pop
cmpl
mov
or
mov
loope
flds
xor
adc
shrb
push
pop
and
sbb
inc
daa
fistpll
out
fdivr
sbb
mov
lods
pop
mov
jo
mov
or
jns
xor
lods
adc
and
adc
mov
lods
jno
xchg
aam
out
sbb
sub
xchg
dec
push
testb
scas
inc
adc
jle
lcall
int3
arpl
or
stos
cmp
pop
ror
cltd
cmp
pop
and
push
cltd
or
and
hlt
cwtl
add
or
sub
aas
subl
insl
imul
mov
mov
push
nop
and
push
lods
icebp
or
jmp
mov
cmp
jnp
movsb
xchg
cmp
cmp
aas
dec
mov
xchg
dec
mov
inc
aam
or
lods
int
inc
stos
ja
lods
js
cmp
andl
mov
and
into
sbb
stos
xchg
int
or
jle
adc
rcrb
pop
mov
hlt
pop
push
out
ret
jge
xchg
fucomi
pop
pushf
pushw
or
mov
push
cmpsb
jnp
cmpsl
sbb
and
xchg
pop
shlb
aam
lcall
push
addr16
pop
decl
stc
cmp
xchg
mov
dec
pop
xor
sbb
aam
shr
xchg
aaa
test
movsb
jnp
jne
ja
mov
mov
cmp
jnp
sub
dec
lods
outsb
sbb
jo
jne
mov
fwait
push
and
aad
and
mov
pop
fidivrs
fsubl
xor
xchg
pop
lock
add
lahf
mov
push
xchg
cmpsb
push
les
and
fst
mov
gs
xor
int3
into
lret
inc
mov
je
outsb
in
inc
in
aad
inc
leave
cmp
jl
mov
lahf
enter
or
mov
add
and
data16
push
int3
dec
adc
cmp
mov
jno
fldl
and
and
sti
orb
pusha
lock
push
mov
loopne
sbb
push
sti
or
jo
fisttpll
sub
pop
rclb
subl
sbb
cmp
scas
imul
mov
and
mulb
xchg
mov
jb
cmp
stc
or
fxch
js
cs
outsl
inc
mov
pop
leave
mov
xchg
out
popa
mov
ds
lea
popf
stos
fldl
cmc
push
xchg
divl
insl
test
in
roll
and
icebp
dec
sbb
pop
xor
sti
push
adc
out
cld
test
adc
mov
in
nop
cmp
sbb
les
cmp
dec
inc
push
cmc
scas
or
outsb
fld
jb
jecxz
mov
popf
inc
ret
insl
imul
cwtl
mov
repz
nop
fsubr
pop
mov
dec
mov
push
lea
gs
jno
ret
mov
or
mov
adc
sti
popf
ljmp
aam
test
jne
ds
sub
je
add
push
push
outsl
jle
cltd
xchg
jle
mov
jl
xchg
shlb
sbb
mov
and
push
repnz
out
sub
andb
cmpsb
shlb
leave
ss
fistps
jo
mov
mov
dec
xor
aam
adc
std
sbb
or
fcoml
xchg
add
repnz
adc
mov
insb
popf
std
adc
aam
aad
or
adc
push
jl
cmpsb
imul
adc
and
lahf
popf
dec
pcmpgtb
jo
or
shl
mov
jae
pusha
mulb
movsl
test
adcl
mov
jo
inc
mov
rcr
push
aaa
mov
xor
xchg
xchg
sub
adc
pop
fisubrl
hlt
stos
cmpsl
sub
mov
je
or
cs
mov
push
cmp
sbb
loop
push
inc
hlt
movsl
nop
and
xor
sub
stc
andl
push
insl
xor
sbb
outsl
insl
add
pop
cmp
xchg
fistpl
pop
jg
shll
in
addr16
sub
orb
addr16
insl
mov
add
pop
leave
mov
and
popl
loopne
and
sbb
in
stc
in
lock
rorl
jecxz
rol
dec
or
rorb
call
fildl
mov
push
dec
daa
xor
push
scas
fwait
les
scas
pop
mov
out
pop
push
in
adc
cmpsl
cmp
fimull
aam
mov
fisubl
test
inc
jne
int
aam
jo
pop
imul
gs
or
in
leave
jbe
ja
cmp
push
ss
movsb
xchg
into
in
add
cmpsb
xchg
mov
imul
sub
comiss
sub
jge
pop
jmp
int3
push
and
mov
movsl
scas
in
and
dec
mov
fidivrs
xor
ja
movsl
mov
sub
fnsave
arpl
lods
mov
stos
je
int3
or
fnstenv
jns
mov
push
jb
lcall
adcl
or
xor
popa
rcrl
xchg
jne
pop
in
mov
push
mov
fisubrl
js,pt
xor
cmc
add
aad
mov
aam
sub
in
gs
xor
js
push
or
stc
enter
call
mov
sahf
lahf
add
push
insb
cld
and
adc
leave
in
or
fimuls
dec
lahf
int3
sub
nop
popa
and
dec
xor
sbb
ret
pop
repnz
push
cmp
cmpsl
lods
push
js
imul
xchg
sbb
in
xchg
jnp
fildl
jmp
arpl
das
xor
insl
test
enter
xchg
xor
dec
icebp
or
push
xchg
dec
dec
dec
lock
add
daa
xor
cltd
and
and
test
mov
adc
insl
lods
jae
mov
bound
mov
not
jo
js
mov
push
lods
pop
js
add
mov
in
mov
cmc
sbb
aad
inc
adc
aaa
or
pusha
mov
scas
and
cmp
cmpsb
dec
jne
push
repz
cmp
mov
sbb
or
jbe
lret
sahf
pusha
clc
bound
cmp
loopne
inc
ret
fidivl
lea
xchg
fstpl
sub
loopne
push
shlb
xor
sbb
mov
push
arpl
loope
jo
fcompl
mov
jmp
sbb
icebp
push
pushl
gs
pop
xor
es
fidivs
pop
mov
pushw
push
xchg
dec
mov
sbb
mov
pop
xor
pop
nop
pop
xchg
mov
es
jl
mov
mov
in
test
xor
lret
sbb
adc
and
xchg
nop
add
addr16
adc
xor
jmp
int3
dec
sti
cld
dec
jnp
add
sub
cmpsb
cmp
sub
sbb
sbb
insl
xchg
add
repz
sbb
out
dec
xchg
ficomps
mov
cmp
inc
sub
jae
xchg
cs
xor
xor
dec
sub
and
jb
leave
test
sub
dec
dec
pushf
adc
rcll
icebp
lods
xor
jmp
outsb
sub
fidivrl
sbb
pop
mov
pop
test
push
jge
push
mov
push
xchg
adc
pop
loop
adc
cmp
stc
fprem1
gs
jns
aad
mov
in
js
cwtl
popf
pop
cs
aam
mov
mov
and
xor
sub
xorb
xor
sub
push
dec
test
mov
rorl
dec
and
cmpsl
push
cmc
in
push
test
stos
repz
out
in
jns
test
mov
jecxz
dec
or
mov
imul
insl
jnp
arpl
jb
pop
dec
and
push
adc
lahf
jns
xchg
test
push
jbe
rorl
mov
leave
cli
xchg
repz
push
fnstsw
data16
stc
push
dec
call
push
xchg
movsb
xchg
shl
test
and
xchg
sub
or
sbb
jecxz
pop
push
cmc
pop
xchg
push
adc
push
xlat
mov
mov
pop
adc
adcb
dec
ret
fwait
dec
lret
call
les
gs
popa
inc
lds
and
xchg
adc
mov
ljmp
dec
sbb
and
xchg
add
mov
mov
outsl
mov
cmp
xchg
movsb
out
pop
xor
ret
push
rorb
mov
or
adc
mov
adc
sti
xlat
and
mov
xor
out
je
int
addb
adcb
insl
inc
mov
or
bound
jp
dec
shrl
out
mov
daa
jno
jmp
pop
inc
lock
stc
add
pushf
xchg
ss
cwtl
push
shrb
inc
mov
jo
aas
mov
aaa
pusha
xchg
pop
and
jge
mov
loopne
pop
jmp
add
fs
xor
push
js
lods
pop
cmp
push
xor
cmpsb
inc
sub
and
xor
mov
dec
mov
gs
sbb
mov
out
ret
int3
bound
and
mov
idivb
lock
popa
sub
rcr
mov
das
xchg
aas
cmp
inc
jae
adc
bnd
cmp
inc
in
xor
push
pop
jns
rcrl
hlt
jo
lret
daa
loope
ficoms
fstpl
pop
clc
dec
data16
loop
mov
and
notb
xchg
cmp
movsl
or
les
jbe
ja
and
sub
mov
jae
mov
aam
sahf
adc
aam
and
adc
mov
stos
push
xor
ljmp
cltd
sbb
mov
repz
fs
fimull
cmpsb
mov
mov
sbb
xchg
dec
jecxz
int3
push
xchg
xchg
dec
push
add
ds
outsl
popa
call
inc
int3
lods
add
lods
mov
sbb
loope
pop
mov
push
pop
stos
out
cmp
mov
scas
cmc
cmp
xchg
stc
rcrb
test
iret
xchg
push
jecxz
lock
pop
xor
sub
and
mov
dec
sbbb
jmp
or
fmulp
sub
xor
pop
and
mov
push
xchg
rclb
adc
movl
sbb
inc
adc
outsl
dec
stc
add
pop
xchg
mov
jecxz
mov
out
and
aaa
out
repnz
daa
mov
lods
addr16
stc
push
jp
sbb
dec
cltd
cmpsb
data16
jmp
mov
pusha
xchg
pop
mov
sbbb
das
mov
ss
sbb
or
xchg
sahf
pop
lret
pop
xchg
sahf
test
cli
push
call
popa
cmc
pop
jle
hlt
adc
sub
cmp
jns
lea
push
call
lods
in
out
dec
adc
adc
cld
pop
cmp
sahf
loope
or
dec
mov
mov
inc
mov
xchg
push
dec
aaa
inc
xchg
or
pop
and
notl
cmp
mov
imul
mov
jbe
adc
jb
inc
ret
dec
pop
push
out
inc
es
jmp
ret
out
mov
jl
pop
dec
mov
and
call
dec
pop
pop
xor
imul
and
push
jae
adc
imul
mov
sbb
addl
xor
mov
push
imul
sbbb
lret
mov
cmp
and
inc
shll
adc
bnd
or
mov
adc
mov
xor
rcrb
inc
mov
cmpsb
test
or
mov
mov
inc
orb
xchg
push
xchg
jp
xor
pusha
inc
es
out
mov
mov
or
cmp
sbb
push
divl
mov
xor
pop
jo
lds
xchg
lods
loope
jge
mov
mov
popa
mov
in
push
outsl
mov
scas
xchg
mov
xchg
icebp
dec
in
mov
into
sar
mov
sub
jo
fildl
ss
test
dec
jmp
pop
xorb
pop
cmp
add
hlt
lahf
mov
xor
in
push
push
add
jae
push
fistpl
repnz
mov
dec
stc
mov
push
dec
and
xchg
test
and
jbe
test
mov
or
push
mov
lods
dec
mov
pop
incl
scas
aad
repz
pop
dec
push
divl
mov
lods
not
out
inc
cmp
or
push
sub
test
filds
pop
xchg
xchg
cmpsl
rcr
or
adc
mov
or
ljmp
ret
shlb
out
xchg
popf
cmp
sbb
cmp
std
sbb
bound
rcr
mov
lcall
jl
add
ret
mov
and
pop
mov
pop
jmp
lods
jns
in
pop
mov
out
loopne
cmp
inc
jl
xor
mov
or
mov
jns
dec
pushl
fisubl
xor
dec
stos
out
pop
aam
xchg
sub
xchg
pop
mov
mull
add
push
orl
xor
cltd
in
icebp
mov
xor
sarb
cmp
fyl2xp1
ret
inc
cmp
aad
push
popf
push
mov
data16
mov
pushf
fdivrs
mov
jl
jne
sbb
je
xor
ss
pushl
xor
insl
inc
add
cmp
insl
sti
or
ljmp
mov
pop
mov
dec
jmp
shl
fisttpl
mov
into
xor
in
push
cltd
cltd
jns
mov
xor
mov
mov
dec
andb
and
push
or
enter
or
movsb
fsts
xlat
mov
das
mov
dec
negl
push
sarb
test
cmpsb
lahf
lahf
pop
lcall
sti
mov
lods
lds
adc
jb
cltd
push
mov
repz
ret
cmp
out
rcll
lahf
xchg
cmpsl
sbb
and
dec
arpl
mov
aad
dec
stos
and
shr
aam
pop
mov
or
enter
bnd
sbb
fsts
add
gs
lods
movb
or
and
fiadds
pop
mov
inc
cmp
cmpsl
inc
mov
jae
mov
xor
jmp
out
inc
clc
mov
xor
sub
pop
int3
cmp
ljmp
mov
xchg
dec
std
mov
decb
inc
and
adc
rcrl
jmp
sub
test
stos
popf
ja
out
mov
mov
leave
cld
lret
xchg
add
outsb
push
push
inc
in
jno
ss
jl
or
push
xchg
mov
adc
cmpsl
test
jb
jl
sarl
addr16
enter
inc
fnsave
mov
ror
and
mov
dec
shlb
mov
rep
sbb
adc
in
push
test
incl
or
mov
and
or
mov
xor
pop
push
pop
add
fistps
xchg
adc
and
or
mov
mov
fdivl
pop
xchg
bnd
ret
or
jecxz
es
aaa
aad
push
mov
xchg
out
and
scas
sbb
rolb
das
ffreep
lea
dec
pop
out
jb
aam
cmp
int
cs
adc
in
mov
add
sahf
and
lds
or
mov
insb
dec
adc
mov
dec
xchg
pop
push
jg
mov
xor
pop
cltd
jg
xor
mov
xlat
leave
out
pop
imul
sbb
dec
hlt
inc
pop
gs
fst
out
in
mov
jb
dec
mov
or
nop
sbb
jge
cmp
das
shll
ret
shl
mov
pop
dec
faddl
sysexit
jo
jbe
dec
push
lcall
fildll
cmpsb
lock
in
test
push
pop
jae
out
repnz
cltd
call
movsl
jno
fstpl
rcrl
jle
shr
pop
sub
iret
cltd
fistps
in
adc
in
imul
addl
movsl
fcom
or
xchg
into
sbb
mov
push
cs
mov
in
std
push
int3
mov
mov
adc
sub
outsb
in
out
sbb
cmc
loopne
pop
jmp
iret
jecxz
stc
pop
jns
cmp
adc
in
inc
ds
jle
xchg
aas
pop
lret
cmpsb
mov
jns
mov
mov
sub
sbb
push
add
push
xor
daa
movsl
pop
aam
mov
fidivrs
filds
mov
in
fyl2xp1
push
and
xchg
xor
mov
inc
inc
pop
or
push
hlt
mov
int3
jp
xchg
push
jne
cmp
pop
lods
loopne
push
mov
bound
pushf
dec
ret
mov
out
sbb
xchg
xchg
jo
outsl
int
dec
sub
pop
xchg
jecxz
arpl
aad
cld
jns
inc
jnp
popa
xchg
test
lods
sub
in
jge
sub
in
sbb
and
imul
mov
rcrb
inc
inc
jecxz
dec
vphaddubq
adc
and
lret
test
dec
dec
lret
cmc
inc
scas
dec
jecxz
ja
addr16
cmpsl
je
mov
xchg
pop
xchg
test
imul
sub
sub
xor
mov
inc
mov
in
jl
mov
in
rcll
scas
testb
cltd
dec
jo
je
leave
hlt
lods
adc
jle
xchg
outsl
mov
add
rorl
inc
movsl
xchg
dec
and
jno
or
cld
pop
leave
aas
jb
dec
pop
stos
sub
lods
sub
mov
xchg
test
cmpsl
ss
fdivrs
out
ret
sbb
xchg
jecxz
sbb
sbb
and
jge
aaa
in
es
stos
insl
mov
xor
sub
add
mov
mov
push
out
jle
dec
pushf
jmp
inc
push
mov
icebp
inc
fimull
jbe
rcl
imul
repnz
inc
cmp
loop
inc
cmpsb
cmpsb
data16
adc
pop
inc
pop
fistps
je
rcrl
pop
inc
mov
push
jo
fs
hlt
aaa
fwait
sbb
sub
sbb
inc
fwait
hlt
dec
jne
push
fcmovnu
sub
outsl
jecxz
mov
aad
mov
mov
fwait
cmp
sahf
lret
mov
pop
les
test
mov
xchg
mov
imul
lcall
dec
fcoml
and
lds
cli
sti
mov
out
fadd
and
js
jl
ret
cld
push
aas
ljmp
adc
mov
popa
cmpsl
or
rcl
cwtl
je
in
fcmovnu
negl
jno
pop
jl
sub
clc
cmp
xor
test
dec
sub
jno
xchg
cmpsb
or
das
push
out
push
dec
pop
xchg
movsb
xlat
jo
ret
sbb
push
cmp
outsb
jns
mov
xchg
popa
mov
jmp
mov
lahf
cmp
roll
jb
cmpsl
mov
adc
cmc
jno
adc
and
sbb
int3
and
mov
cmc
fs
or
cmp
es
cwtl
push
lret
mov
sub
sarb
push
pop
sahf
je
sub
les
push
push
loope
insl
dec
movsb
insb
mov
call
inc
arpl
push
aas
in
inc
push
fidivrs
pop
adc
scas
loope
add
icebp
push
out
xchg
insb
lods
sar
cs
cmpsb
or
test
sbb
adc
insb
or
pushf
or
outsl
gs
add
imul
cmp
cmp
icebp
ret
inc
dec
cld
or
mov
cmp
jge
mov
xchg
mov
insb
icebp
sbb
mov
adc
std
aas
mov
rolb
and
aas
pop
in
mov
push
xchg
hlt
outsb
mov
out
imul
mov
test
pop
iret
xor
movsl
lea
rcr
call
jp
iret
cli
setnp
jmp
jae
sbb
pop
jge
push
jmp
ret
push
imul
push
sub
into
rcll
test
dec
mov
push
mov
mov
fimull
jae
mov
aad
jnp
inc
pop
adc
mov
adc
or
ret
and
inc
push
inc
pop
nop
pop
inc
xor
fs
cmp
std
stos
dec
lahf
inc
lods
in
and
sbb
cltd
fisubrs
pop
in
mov
int3
and
pop
scas
jae
xchg
xchg
mov
jle
dec
jecxz
sub
inc
insl
fcoml
sahf
fistpl
mov
andb
mov
sbb
call
je
mov
push
popa
leave
leave
fbstp
adc
lret
mov
repnz
popf
xchg
leave
mov
psllw
mov
or
outsb
mov
imul
sbb
push
cmpsb
jp
sub
movl
inc
je
push
insl
and
inc
adc
aas
adcb
mov
jmp
xor
mulb
cwtl
test
lods
inc
xchg
jne
mov
mov
jecxz
adc
pop
std
test
mov
add
push
ljmp
cmp
add
rcrl
push
dec
imul
rorb
push
je
fcoms
in
xor
xor
jno
movsb
sarl
add
add
mov
mov
fimull
mov
std
fwait
ret
or
dec
into
in
shlb
cmpsl
sbb
insb
add
fwait
pop
add
and
mov
stos
xor
sub
dec
stos
adc
or
xchg
pop
mov
call
dec
mov
sbb
inc
outsb
add
fs
push
or
mov
cmpsl
loop
inc
cld
sub
jnp
xlat
sbb
aad
and
mov
lret
sbb
mov
jno
icebp
sahf
cmp
push
les
sub
notl
xor
dec
xor
fidivs
xchg
cwtl
push
jnp
scas
push
insb
or
pop
in
pop
jae
lods
shrb
pop
call
ds
jg
mov
xor
stos
mov
push
jp
cmp
adc
inc
cwtl
daa
fwait
in
adc
sbb
lret
enter
push
enter
sbb
lahf
xchg
ds
out
scas
scas
add
orl
lock
movsb
or
jle
mov
cmpsb
mov
push
aas
sub
stos
clc
rorb
mov
jne
sbbb
add
mov
clc
movsl
loop
lret
add
daa
movsl
pop
add
dec
dec
fcoms
scas
call
xchg
cwtl
push
or
int3
mov
icebp
or
loopne
cmpsl
xchg
dec
lret
outsb
push
or
push
mov
mov
fcoms
jnp
mov
insl
out
enter
out
ljmp
inc
and
stos
arpl
rcrb
sti
xor
rcrl
insb
das
jo
pop
xor
dec
cmp
mov
and
mov
stc
ja
jne
inc
mov
push
and
add
dec
and
push
aam
sbb
jbe
loopne
inc
clc
jl
out
and
xor
sbb
jb
into
outsb
icebp
int3
push
imul
jne
adc
push
jmp
mov
adc
stos
call
aaa
xchg
xchg
popa
push
push
leave
push
xchg
cmpsb
adcb
mov
xchg
mov
xor
pop
inc
pop
pop
mov
into
iret
push
dec
sti
pop
sub
push
cmp
mov
cmpsl
movsl
cmp
fyl2xp1
sub
inc
cltd
inc
mov
and
cmp
insb
jge
in
hlt
jge
sbb
sbb
and
iret
sbb
fldt
rcll
jmp
adc
dec
lds
jb
roll
std
mov
shlb
adc
mov
cld
xor
mov
and
mov
fs
mov
sub
push
jns
push
idiv
pop
jge
add
cmp
mov
cltd
in
test
popa
out
lcall
dec
inc
adc
pop
push
out
mov
xchg
sarl
popf
addr16
mov
sbb
push
pushf
cmp
cmp
pop
aaa
fbstp
pop
and
jb
cmpsb
rol
ljmp
stc
int3
dec
push
sub
out
ja
repz
xchg
pop
lea
sbb
imul
in
jbe
and
lret
icebp
pop
cltd
lcall
cmp
sbb
xor
xchg
lcall
dec
add
pop
adc
popf
out
push
sub
int3
add
jne
mov
addb
jge
roll
enter
fisubrl
add
xorb
dec
mov
test
xor
daa
ret
and
dec
cld
lcall
and
dec
push
pop
sahf
lcall
scas
pusha
sti
add
pop
stos
les
push
and
std
sub
or
mov
jmp
nop
out
popf
cmp
mov
rclb
clc
fsts
pop
cmp
inc
sbb
mov
mov
lds
inc
loop
inc
mov
mov
dec
aad
mov
cmpsl
punpcklbw
add
outsb
mov
lahf
xor
enter
cltd
int3
lahf
in
enter
pop
nop
sub
movsl
pop
jb
ds
mov
add
mov
mov
add
pop
push
inc
pop
adc
insb
mov
push
test
movsl
mov
mov
scas
push
pusha
lods
out
repz
iret
pop
and
daa
popf
movsb
mov
popf
sbb
jmp
into
jb
not
mov
mov
cmp
sbb
pop
sub
jb
aad
stc
cmp
nop
push
std
xor
push
xchg
adc
pop
dec
popa
aaa
out
cmpsl
ljmp
push
repnz
dec
cmpsl
and
rolb
mov
cmpsb
mov
in
scas
test
xor
fstpl
popf
push
push
inc
arpl
out
jle
fidivs
std
ret
xchg
xor
push
int
hlt
push
adc
and
mov
fwait
or
loopne
cmp
sub
xorl
imul
mov
sti
sbb
mov
aad
mov
nop
enter
add
dec
push
or
test
xor
stc
dec
push
pop
add
push
enter
cmp
jb
mov
scas
lcall
and
cwtl
mov
cwtl
mov
sbb
and
ret
insl
addr16
dec
dec
xor
shll
push
sbb
adc
sahf
fistps
pushf
fwait
jb
mov
subb
pop
in
push
shlb
lea
insb
push
icebp
push
jp
in
nop
pop
jge
push
mov
fisubl
push
mov
ret
stos
jg
mov
js
shrl
inc
push
cmpsb
shrb
subl
sbb
pop
frstor
push
inc
cmp
fdivrp
pop
mov
je
xchg
jne
cli
dec
or
repz
xchg
lea
imul
mov
jo
pop
ror
popf
movsb
negb
cmp
dec
mov
loopne
cmp
xor
stc
int3
stos
adc
inc
jl
cmp
mov
inc
stos
push
dec
and
jo
repnz
scas
stos
pop
cmp
adc
fistpll
jp
adc
or
aam
push
mov
fidivrl
mov
add
outsb
call
int
xchg
jl
sbb
xchg
jno
fdivrl
stos
push
and
pop
mov
adc
stc
inc
je
xchg
jp
mov
sbbb
std
adc
sub
mov
sti
in
popa
movsl
aam
add
cli
push
movsl
push
rcr
in
ret
adc
iret
lcall
pop
pusha
cwtl
mov
daa
add
jecxz
mov
add
dec
mov
fildl
pop
xor
mov
into
push
inc
add
add
aaa
fcomip
xlat
fucomp
inc
daa
test
lret
sub
rcrl
jns
in
pop
jle
mov
and
int3
test
lea
imul
jecxz
xchg
adc
sbb
or
mov
sbb
mov
jnp
dec
pushf
test
out
scas
mov
cmpsl
cli
pop
jle
lods
into
rorb
test
jp
mov
xor
sub
add
dec
mov
mov
and
xor
mov
lea
jne
xchg
shl
test
fsubr
ja
mov
mov
inc
jecxz
pop
mov
cmp
pop
xchg
lods
cltd
call
add
rol
push
or
lahf
outsl
in
out
adc
xor
push
push
push
ret
imulb
jmp
es
mov
mov
aas
mov
int
cmp
into
out
jne
xor
fwait
shll
jmp
arpl
sub
mov
lock
pusha
rorl
cs
lret
mov
add
ret
stc
frstor
ss
hlt
and
inc
inc
xchg
dec
popf
pop
mov
inc
popf
shrl
fidivrs
and
cmp
add
bnd
cmp
ss
fcoms
aaa
mov
inc
pop
add
mov
push
stos
lea
mov
adc
xchg
lods
xchg
mov
sub
xchg
popf
addr16
and
fwait
xlat
enter
js
ds
xchg
xchg
leave
fidivs
and
inc
imul
jbe
cmp
test
jno
mov
fs
xchg
mov
subl
lcall
xor
iret
test
mov
mov
sbb
rcrb
sub
adc
sub
inc
inc
jg
or
push
fistpll
ret
fadd
jg
sbb
or
or
ss
subb
push
mov
pop
enter
jmp
xor
and
and
inc
fadd
dec
je
out
add
xor
ja
cmpsb
and
enter
push
out
inc
bnd
or
sti
cmp
sti
es
les
mov
xor
sub
scas
mov
das
ret
add
sbb
mov
gs
ret
jp
fdivl
sbb
loope
add
out
jne
outsb
cmp
cmpsl
lods
mov
fstpl
mov
or
movsb
push
adc
mov
mov
dec
insl
fs
push
jo
int3
push
inc
aas
rcrb
imul
dec
sbb
push
mov
inc
mov
out
or
pop
and
std
fistps
inc
popf
test
stos
mov
in
or
jmp
cmc
int
add
in
push
xor
jecxz
jp
popa
mov
aad
and
xor
cmp
mov
jns
or
mov
cli
xchg
inc
lods
pop
mov
je
and
fsubr
sahf
ds
inc
xor
in
testl
in
jp
and
and
repz
fs
mov
add
dec
das
ret
xchg
xchg
pushf
hlt
adc
inc
jne
mov
pop
daa
lret
test
pop
mov
sbb
mov
test
test
call
cwtl
rol
or
push
push
mov
xor
sbb
mov
or
call
fmull
sbb
add
scas
int
jnp
mov
xchg
inc
or
rolb
imul
xchg
xor
loopne
or
mov
loopne
cmc
mov
ja
adc
mov
rolb
sarb
mov
js
mov
or
add
jl
repnz
and
push
xchg
sbb
xchg
add
mov
movsl
mov
adc
add
filds
in
inc
or
cmp
cmp
repnz
imul
enter
les
xchg
out
lret
xor
and
ret
rorl
add
dec
fdivrl
add
adc
int
mov
jp
mov
fidivs
jmp
fldcw
xor
inc
mov
loop
mov
cmp
or
jne
test
testb
sbb
jmp
inc
imul
dec
push
dec
add
mov
sub
xor
jb
sahf
sbbb
mov
cwtl
mov
adc
push
xor
cmc
xor
pop
popf
int
and
jnp
out
jl
jnp
iret
or
push
mov
into
dec
iret
out
aas
adc
adc
sub
in
cmpsl
cmp
loopne
sub
mov
push
aaa
mov
ljmp
divb
pop
test
test
outsl
push
and
mov
lret
pusha
dec
mov
divl
scas
pop
cmp
xor
pop
cmpsl
sbb
call
std
addr16
aad
cltd
mov
into
andb
and
xchg
je
or
jge
les
inc
pop
push
jno
dec
fwait
mov
lds
mov
test
sbb
outsb
xchg
sub
xor
mov
push
fcoml
subl
sub
out
and
lods
sti
aas
aaa
insl
ret
pop
addr16
and
mov
loop
dec
mov
mov
in
mov
sbb
adc
mov
xchg
xchg
inc
push
jne
mov
xchg
inc
fwait
enter
shr
mov
in
les
stos
xor
scas
lods
stos
and
sbb
push
pop
and
jae
iret
push
fldt
push
pop
cmp
jae
aaa
divb
mov
jnp
leave
int3
outsl
sub
mov
jl,pn
mov
xor
cs
inc
push
xchg
fwait
jmp
data16
sub
orb
add
xlat
lcall
dec
cli
ja
xor
scas
mov
adc
ficoml
cli
pop
jne
and
adcl
xchg
mov
adc
and
outsl
ss
movsb
fisubrs
and
in
jl
popa
dec
sbb
pop
subl
gs
ja
or
xlat
mov
push
out
mov
xor
jle
frstor
insl
call
fsubrl
sbb
or
cmc
add
and
movsb
jecxz
pushf
mov
cmpsl
dec
ja
repnz
imulb
shrb
in
pop
dec
bnd
xchg
dec
mov
shll
pop
inc
mov
or
and
cmpsb
ret
mov
stos
cmpb
mov
dec
sub
stc
aaa
xor
fs
repz
adc
movsb
aam
xor
mov
fidivrs
mov
sub
lock
mov
mov
ja
push
or
jo
outsl
dec
mov
imul
shll
movsb
xlat
dec
add
sub
test
cmp
bound
dec
cmc
das
xchg
mov
mov
loop
sbb
aaa
push
clc
sti
sub
mov
jae
xlat
imul
mov
adc
inc
adc
adc
jb
push
and
mov
shrl
leave
mov
insb
mov
xchg
inc
xchg
xlat
pusha
push
mov
loop
mov
jp
out
mov
ret
pushf
in
icebp
cmpsl
fbld
sti
and
adc
outsl
imul
or
hlt
outsl
and
shrl
test
mov
aam
mov
sbb
scas
stos
repnz
cmp
cmp
mov
mov
pop
xchg
out
push
mov
in
cmp
mov
jne
nop
or
mov
jge
push
cmp
xor
sbb
xchg
push
push
jg
pop
aas
cmp
fistl
fidivrl
push
icebp
into
fidivrl
mov
mov
sub
popl
leave
movsl
or
pusha
fists
test
shlb
xchg
mov
jp
sarb
ficoml
outsl
sbb
loope
jno
into
sub
shrl
nop
lahf
movsb
inc
testl
dec
and
cmp
jo
stc
bound
push
jnp
add
popf
ja
test
imul
mov
sub
pushl
or
add
push
push
xor
fstl
push
enter
jne
shr
repz
jge
iret
cld
stos
test
pop
mov
mov
movsl
and
gs
cmp
push
pusha
aad
sbb
inc
cmp
lods
lcall
add
push
jo
xchg
xchg
in
sbb
fdivl
add
ja
and
sbb
cltd
gs
das
or
add
rcll
jns
paddq
jns
js
clc
xchg
sub
scas
dec
push
pop
pop
clc
scas
shl
mov
adc
hlt
cmc
push
mov
lahf
fdivs
pop
cmpsl
aas
aad
rclb
and
mov
mov
push
test
test
lds
mov
ljmp
cwtl
xor
ror
dec
aam
mov
push
inc
enter
inc
add
mov
dec
mov
mov
dec
popf
xor
xlat
sbbl
or
sub
addb
sbbl
out
rorb
or
push
xor
leave
jnp
leave
cmpsl
or
push
adc
stos
sbb
mov
je
push
add
insl
int3
les
jae
mov
mov
push
fcmovbe
sbb
aaa
fiadds
testb
clc
pop
stc
and
gs
shll
pusha
jb
je
pop
cmc
vmaxpd
andb
ljmp
js
mov
push
mov
scas
pop
mov
add
loope
xor
pop
mov
hlt
mov
xchg
pushf
inc
outsb
xchg
mov
inc
dec
insb
cs
add
es
push
jmp
mov
clc
shll
pop
divl
es
sub
outsl
test
and
push
jb
push
movq
iret
test
pusha
into
mov
lea
jecxz
lret
repnz
mov
push
stos
aad
lret
add
arpl
nop
sub
out
mov
jge
lahf
push
ret
pop
neg
or
mov
scas
sbb
adc
lock
add
lds
insl
dec
mov
pop
add
test
adcl
pop
lds
and
sbb
jb,pt
in
ficomps
xchg
mov
fbstp
or
shl
push
or
in
out
mov
push
and
shll
test
push
mov
pop
pushf
daa
cld
mov
sub
psllq
mov
fdivr
push
mov
ljmp
aaa
outsb
std
xchg
repnz
dec
cli
add
jns
fimull
fucomip
sbb
insl
orl
push
adcl
adc
jnp
add
inc
cmp
roll
mov
or
jbe
rorl
lahf
pop
pushf
cs
mov
xchg
jg
mov
ljmp
ret
and
sbb
jge
stos
xor
fsubr
popf
popa
xchg
and
dec
adc
cmc
fiadds
stos
pop
test
fs
mov
xchg
xor
inc
jle
int
pop
insb
and
sbb
repnz
popa
inc
jmp
je
xor
add
shrl
iret
test
stos
imul
add
jbe
xchg
loopne
mov
cmp
mov
inc
mov
add
movsl
inc
xor
addr16
xlat
in
push
fnsave
jmp
push
sarl
jae
fmul
jp
pop
fnsave
adc
imul
sub
jae
leave
adc
dec
mov
aaa
in
pusha
imulb
imul
jnp
sbb
or
mov
mov
inc
iret
mov
sub
mov
jmp
daa
jle
mov
dec
jl
dec
adc
fwait
loopne
adc
lock
mov
cmpsl
xchg
xor
jge
mov
xor
xor
leave
insb
cmp
pusha
cmpsb
sub
out
xchg
cmc
or
and
incb
sub
push
mov
push
stc
dec
pusha
popa
adc
xchg
ss
fadds
fstpl
xorb
adc
fcompl
jmp
xor
inc
stos
pop
movsb
int3
in
lahf
xor
int
icebp
xor
out
push
add
adc
xchg
adc
xor
cmp
or
mov
cmpsb
or
out
or
call
mov
mov
sar
inc
arpl
ret
in
inc
imul
xchg
aad
stos
sub
and
std
cltd
or
xchg
cmp
stc
dec
jmp
mov
and
orb
cmp
repz
loopne
dec
testb
in
out
jns
jle
mov
iret
cmp
cmp
sbb
pop
mov
bnd
or
out
sarl
jbe
aaa
mov
jmp
outsb
add
sub
push
pop
lods
adc
ficompl
adcb
mov
das
and
incl
pop
lcall
cmp
scas
and
add
push
push
push
jge
mov
lock
dec
dec
stos
push
stc
xchg
mov
add
das
shrb
sub
pop
mov
pusha
and
sub
fildl
inc
jg
and
pop
popf
dec
cwtl
mov
pushf
cmp
mov
cld
add
pop
lods
pop
imul
or
movsl
dec
pop
es
mull
mov
jg,pt
in
jg
movsl
or
ret
mov
fwait
test
cs
pop
ret
ret
aad
jbe
mov
lret
jp
insl
xchg
popa
push
add
xor
jnp
pop
jbe
jbe
dec
cmp
movsb
les
ss
mov
push
int3
lds
hlt
mov
push
cltd
pop
scas
add
roll
xor
mov
cmp
icebp
lahf
pusha
dec
cmpsb
int3
xor
hlt
in
mov
sub
testl
dec
scas
cmpsl
sbb
fs
mov
mov
enter
sub
or
arpl
add
pop
fdivp
pop
pop
pop
sub
lahf
jmp
pop
xchg
mov
mov
mov
outsb
in
jecxz
dec
in
cwtl
sbb
cs
sub
mov
inc
stos
jmp
popa
daa
cmpsl
mov
loopne
bound
popf
push
mov
xchg
insl
roll
xor
sarb
in
dec
nop
test
lods
mull
rolb
mov
pmaddwd
cmp
mov
mov
test
adc
js
lea
les
into
mov
fwait
jg
pushl
in
test
jp
xchg
jo
jl
inc
daa
ret
loop
fnstcw
xchg
pop
out
xchg
outsl
adc
mov
pop
mov
and
xor
cs
scas
lret
outsb
inc
xchg
aad
fwait
test
mov
pop
cmp
sub
jno
lods
mov
clc
les
mov
daa
mov
or
adc
insb
fistps
mov
repnz
mov
jne
fstpt
mov
leave
add
add
frstor
ss
jp
dec
out
in
jg
mov
lock
loopne
shll
xchg
inc
xchg
cld
sub
jle
dec
std
pop
mov
push
pop
div
mov
scas
jp
out
call
pop
jnp
mov
aad
aam
loope
out
ss
push
dec
and
mul
jb
push
int
fstps
jb
lcall
mov
lds
sub
add
lahf
push
sbb
leave
pop
mov
sub
aad
jp
sbb
cld
lods
pop
jb
stos
out
mov
xor
xchg
sub
pop
jae
cmp
divb
jge
jmp
push
pop
or
fsubrs
inc
das
mov
mov
xor
lock
cmp
sub
dec
mov
cli
out
jnp
sbb
ret
sub
sbb
and
stos
xlat
pop
aas
adc
gs
xor
mov
ror
jp
loope
xchg
xlat
adc
jnp
stos
mov
inc
xchg
jp
push
xchg
popf
icebp
jo
add
xor
ret
jge
push
inc
cwtl
jno
int
inc
int3
popa
iret
and
cmp
lcall
outsl
inc
inc
hlt
mov
insb
xlat
cwtl
stos
je
cmp
mov
cmp
and
push
mov
stos
rsm
mov
pop
mov
mov
addr16
push
lcall
mov
push
test
inc
dec
fistpl
xor
add
mov
fcoml
jg
loope
rclb
ljmp
xor
call
into
cli
pop
inc
push
pop
sub
mov
lcall
mov
mov
pop
fstl
add
cwtl
outsb
and
mov
data16
xor
sbb
cltd
push
sbb
jl
mull
sub
jae
ljmp
adc
mov
jmp
jns
ss
jmp
insl
daa
into
cmp
sbb
pop
out
mov
jg
mov
and
jo
mov
pop
pop
stos
repz
push
das
inc
sbb
out
cld
and
fnstenv
jnp
dec
jo
inc
mov
lock
mov
and
jno
jge
xchg
cmp
cs
lahf
rorl
shl
xor
inc
repnz
adc
and
inc
pop
and
jne
jg
aaa
loopne
jbe
xchg
lods
sub
dec
pop
enter
loopne
xchg
daa
or
mov
push
adc
push
inc
cld
jge
mov
outsl
divb
fdivp
lods
push
popf
push
or
in
jge
fs
lahf
lds
mov
movsl
sbbl
arpl
push
aaa
rorl
jnp
es
jl
scas
push
sub
push
jle
xor
mov
or
cmc
fsubp
mov
je
xor
sar
mov
xorl
adc
aad
xchg
inc
or
dec
xor
dec
xor
sub
clc
mov
shl
push
mov
lahf
jmp
mov
clc
mov
pop
pop
jb
mov
xor
push
push
or
sub
cmp
or
loop
inc
lret
xor
jnp
and
mov
mov
iret
xchg
pop
lea
cs
loopne
xchg
pusha
jecxz
sbbl
nop
sub
cli
jbe
xor
cmp
cmovge
scas
out
pop
bound
test
xchg
pop
and
mov
ss
mov
mov
mov
push
ss
rsqrtps
pop
dec
pushf
lods
in
imul
mov
push
dec
mov
aas
leave
pop
mov
into
sarb
cld
stc
or
stc
ds
xchg
std
push
xchg
xchg
negl
add
xchg
es
jg
jp
outsb
push
pop
dec
xchg
addr16
subl
pop
push
movsb
stos
xchg
data16
pop
negb
dec
adc
repnz
inc
movsl
jo
mov
test
ljmp
mov
pop
xor
outsl
loope
aam
pop
pop
gs
xchg
cmp
sub
loopne
xchg
add
roll
stc
mov
xor
add
dec
xor
pcmpeqb
sbb
daa
dec
adc
dec
add
adc
fsubrl
sbb
mov
ljmp
enter
sbb
dec
lods
mov
incl
aad
pop
pop
and
mov
mov
xchg
push
insb
rcll
negb
mov
inc
arpl
and
push
add
dec
xchg
rorb
aas
adc
jae
lods
clc
movsb
mov
pop
das
es
insl
cmp
lahf
es
xor
push
das
xchg
dec
lcall
xchg
fnstcw
add
fnsave
or
sbb
jae
push
adc
hlt
push
fbld
pop
addl
pop
shr
mov
mov
push
jo
call
dec
jl
mov
lret
nop
jne
mov
jge
test
dec
shl
stc
out
push
enter
push
loop
imul
test
pop
js
dec
pop
mov
scas
jnp
movsb
mov
add
cmpsb
mov
cmpsb
stos
dec
push
or
push
aaa
mov
xchg
sbb
nop
jne
addr16
loopne
in
shrb
and
loop
ficomps
ret
ja
and
xor
cld
mov
lret
fbld
fistpl
aad
out
aam
gs
mov
fistpll
inc
pusha
das
out
das
jg
inc
mov
mov
mov
jg
and
dec
into
test
leave
out
movsl
popf
into
dec
inc
das
inc
jmp
clc
lret
test
out
loop
out
cld
andl
jle
movsb
fmuls
cltd
push
mov
addr16
mov
adc
and
push
push
das
sarb
cmc
mov
daa
mov
les
mov
or
ret
xchg
mov
pop
adc
out
hlt
mov
popa
mov
repnz
aaa
dec
jecxz
inc
pop
cmp
fistpl
mov
xchg
incb
int
dec
pop
sbb
inc
gs
mov
sbb
pop
movl
mov
push
out
inc
cmpsb
lds
test
insb
in
aad
and
fwait
inc
movaps
lcall
leave
mov
decl
out
fmul
aam
call
cmp
jnp
mov
cmc
fstl
mov
scas
xorb
xchg
xchg
stc
rcll
hlt
aam
mov
pop
mulb
mov
data16
xor
lret
daa
js
lock
cmpsl
mov
pop
inc
push
test
jp
aas
imul
mov
cmc
in
xchg
ret
sub
push
clc
cwtl
push
bound
bound
push
movsl
add
mov
add
pop
jge
add
cmpsb
mov
fstp
int
scas
out
adc
aaa
mov
cld
push
sub
push
and
repnz
ljmp
xchg
mov
sahf
jbe
imul
iret
jno
les
pushf
cmp
sub
adc
push
sub
cmc
loope
loop
divb
sub
mov
shlb
xor
adc
xchg
js
pop
in
fsubr
loopne
out
pop
push
xor
mov
aad
arpl
pop
pop
jno
pop
mov
xchg
rcll
sbb
sbb
xlat
push
pop
jp
cmc
mov
rclb
fsub
adc
movsb
inc
insl
mov
rcll
pop
push
mov
mov
sahf
fwait
stos
inc
nop
push
shr
or
mov
mov
dec
mov
out
flds
pop
push
shrb
shll
outsl
pop
loope
adc
inc
pop
push
cmpsl
or
dec
addr16
call
add
pop
pop
fs
arpl
adc
mov
inc
mov
mov
mov
lods
pop
cli
dec
mov
enter
rorl
std
sti
cmovb
dec
ror
dec
fwait
rcrl
arpl
sbb
dec
jecxz
xor
pop
jns
pop
repz
repz
addr16
cld
mov
ret
sbb
xor
sbb
cmpsl
ficomps
repz
filds
negl
xlat
jnp
lds
xor
lahf
xor
xchg
ret
pusha
mov
adc
xchg
pop
mov
cmove
fidivrl
cmp
push
int3
pop
inc
push
cmp
adc
or
mov
add
dec
aad
push
lcall
adc
mov
out
mov
mov
mov
and
cli
inc
pop
pop
test
cmpsl
repnz
xchg
out
addb
in
xor
pop
fmull
pop
push
shr
sub
mov
mov
mov
jge
xchg
xor
das
sbb
mov
inc
rclb
add
mov
push
mov
shl
addr16
outsl
dec
inc
or
orb
cmp
mov
xor
inc
fmull
int3
adcl
and
sub
gs
insl
fdivl
cmp
jns
bound
mov
invd
or
mov
pop
sub
and
push
popa
sbb
add
test
push
arpl
out
dec
je
mov
xchg
out
loopne
pop
xchg
mov
sti
mov
mov
mov
aam
call
cmp
push
stc
icebp
cmpsb
je
or
ss
ja
lcall
mov
imul
decl
and
mov
fldt
movsb
mov
shll
mov
sbb
jmp
subb
sbb
loope
bound
add
push
int3
int
rcrl
xchg
or
dec
shll
popf
lret
push
fs
cmp
lods
imul
divb
mov
or
xchg
and
sub
adc
loop
sub
cld
add
gs
les
gs
push
cmpsl
ret
jno
xchg
cmc
mov
cmc
out
dec
xor
nop
stos
repnz
inc
mov
pop
dec
mov
cs
pop
daa
js
sub
cs
xchg
xchg
mov
adc
cmpsl
cmpsl
addr16
stos
mov
scas
pop
mov
ss
rcr
and
mov
cmp
lret
cmp
icebp
les
push
mov
adc
mov
in
jbe
ja
inc
or
rcrb
pop
and
mov
repnz
xor
es
ret
xchg
or
fsub
shlb
mov
mov
popa
lods
xchg
mov
loop
sbb
jecxz
cltd
lods
mov
mov
xorb
xchg
and
sbb
add
add
add
dec
cmp
or
cmp
je
and
stos
inc
mov
pop
sbb
or
movb
adc
sub
leave
jecxz
js
inc
shll
jb
xchg
pop
jg
ret
scas
shrb
cmp
into
leave
jo
mov
xor
mov
xchg
inc
in
inc
xor
add
add
cmp
or
decl
movl
jb
sbb
jecxz
mov
add
in
int
cwtl
lock
xlat
insl
dec
leave
daa
mov
jge
or
sub
pop
mov
push
mov
std
fdivrl
mov
in
ljmp
and
push
popa
movsb
incb
cmp
mov
sbb
xor
nop
dec
pop
push
cmp
sbb
push
xlat
sub
rorl
lea
je
jmp
data16
mov
ds
pop
aam
xchg
jnp
pop
mov
xchg
mov
int3
hlt
in
add
push
fisubs
mov
cmp
aad
fdecstp
gs
cmp
or
inc
sub
add
mov
jae
cmp
loop
dec
rolb
ficoml
imulb
xchg
pop
or
jp
push
jecxz
lock
or
mov
sub
cmp
xchg
xor
cmc
out
xchg
pop
cmp
mov
outsl
andb
and
sub
cmp
lahf
scas
add
imul
xchg
jne
insb
out
cmpsl
lahf
mov
leave
xchg
mov
cltd
in
fisubrl
pop
mov
pop
in
cmp
mov
mov
pushf
cs
dec
rcll
dec
pushf
or
xchg
fcoml
fcoml
insl
nop
inc
mov
lret
pop
ljmp
arpl
insb
subl
dec
out
xchg
movsb
inc
sub
loopne
mov
cwtl
push
pop
dec
pusha
int3
out
mov
les
movl
add
imul
mov
pop
mov
pop
call
push
fs
xor
fistps
mov
sti
dec
lods
popa
lods
cmp
rorl
pop
in
into
in
enter
mov
icebp
push
jp
ret
outsb
pop
popf
scas
cmp
pop
int3
dec
add
movsb
fsub
xchg
out
mov
dec
in
ja
mov
xchg
or
stos
out
push
xchg
mov
testl
rolb
xlat
dec
clc
jecxz
cs
sub
in
test
mov
xchg
mov
je
scas
rorl
push
rcrl
cmpsl
mov
mov
jno
sahf
sbb
loopne
mov
dec
inc
nop
mov
jmp
push
sbbb
ficomps
lret
jns
push
dec
adc
imul
clc
aas
fimuls
loope
push
sbb
jg
clc
inc
std
fcos
fsubrs
dec
add
and
and
jle
mov
hlt
fsin
test
push
int3
popf
lahf
cltd
jecxz
sbb
cli
outsb
out
mov
dec
push
xor
adc
repz
or
pop
cld
cmp
leave
add
pop
ret
arpl
xchg
add
ds
jecxz
adc
imul
imul
push
insb
xor
insb
pop
shrb
loopne
sbb
jge
push
inc
aad
jbe
xchg
arpl
jne
mov
sahf
les
mov
xor
aas
aad
jp
cmp
rolb
into
add
pop
cmc
cltd
dec
jne
push
and
ret
pop
inc
sub
mov
jns
aad
pop
push
stos
xchg
notl
inc
leave
ljmp
xor
dec
test
xchg
jg
rolb
ds
and
pop
push
imul
jle
in
pop
ss
mov
cmc
jo
scas
xchg
dec
scas
test
mov
add
xchg
push
mov
sub
push
movsl
movsb
jl
inc
lods
jns
shr
inc
mov
out
aaa
mov
add
cmp
or
inc
mov
cwtl
mov
addr16
test
add
test
cli
lret
shrb
xor
movsl
call
xchg
cmp
cmp
xchg
out
pop
fldl
pushf
cld
ljmp
inc
jns
popa
cmpsb
and
mov
andb
rolb
mov
pop
xor
popf
fmuls
stos
shl
jp
sti
movsb
and
mov
adc
jge
mov
js
das
xchg
cmpsl
cld
cmpsb
xchg
inc
fnstsw
popf
fs
rcll
jae
es
cmp
mov
adc
or
loope
or
jp
repz
ljmp
enter
pop
jmp
xchg
xchg
pop
sbb
mov
test
or
cmp
je
fwait
dec
ret
imul
push
pop
inc
das
cmp
neg
test
mov
roll
out
adc
or
xchg
pop
aam
jae
js
je
jne
negb
and
cltd
in
inc
imul
test
cmpsl
stc
xchg
les
pop
inc
gs
stos
ss
lret
push
push
or
orl
fcomps
mov
in
arpl
push
int3
cmpsb
ficoml
add
hlt
dec
or
outsb
shl
pop
ljmp
inc
push
pop
shlb
ss
hlt
mov
lahf
cli
mov
mov
iret
imul
jne
push
out
sahf
inc
ds
push
cmc
xchg
xor
js
jo
inc
cli
xor
arpl
jno
cmp
in
popa
gs
xor
or
data16
or
pop
ljmp
add
rolb
jnp
add
sbb
psubq
dec
pop
jne
mov
mov
mov
ljmp
lock
xchg
mov
and
sahf
fnstenv
and
sub
in
xchg
cmpsb
lea
or
aas
pusha
jle
test
pop
popf
sub
lea
stos
ret
pusha
mov
pop
jle
pop
fwait
pop
mov
jl
lods
mov
inc
dec
ror
sbb
xchg
cmpb
lea
lea
mov
mov
lahf
push
mov
aas
je
and
push
cwtl
popf
sbb
add
cmpsb
sbb
pop
or
mov
es
push
push
add
int
movsb
aam
mov
cwtl
gs
stc
cmp
nop
inc
hlt
push
or
jb
into
xor
in
xlat
movsb
xchg
mov
ret
mov
sub
mov
roll
sub
data16
aam
aad
jge
fisubrs
and
fldl
adc
mov
sbb
xchg
xchg
mov
jmp
jge
sahf
pop
push
push
dec
popa
insb
xchg
loopne
xor
sti
mov
adc
sub
jl
or
dec
sahf
lods
inc
subb
push
add
sbb
repz
and
lcall
inc
pop
aam
std
or
add
cmp
mov
pop
mov
jb
loope
mov
xchg
xchg
jae
gs
pop
and
cltd
xor
mov
lret
sbb
cmp
inc
ret
adc
mov
lahf
dec
cltd
test
ljmp
repz
pop
jbe
ficomps
add
sbb
enter
sub
sub
call
inc
inc
in
das
push
ja
movsl
or
into
stc
sbb
push
out
pop
cmp
cmp
fpatan
rcrl
pop
shl
loopne
ljmp
in
push
mov
mov
pushf
sub
fs
mov
sarb
add
mov
ja
addl
and
std
xchg
push
movsb
loope
stc
xchg
sti
add
mov
inc
sbb
in
cli
fldenv
cmp
pop
les
iret
mov
sub
jns
mov
adcl
dec
or
mov
pop
pop
push
jbe
flds
sbb
xor
dec
out
pop
adc
rolb
ja
loop
lret
sbb
lods
and
mov
pusha
je
shll
es
jmp
adc
fcmovnb
or
js
jg
divb
jge
clc
adc
pop
mov
int
outsl
pop
repz
sub
xchg
adc
xchg
out
inc
das
inc
adc
cs
xchg
xor
mov
jne
mov
mov
push
sahf
test
mov
mov
ret
mov
ds
mov
inc
push
sub
in
pop
pop
addr16
pusha
mov
loopne
jmp
insb
inc
dec
xchg
clc
sahf
leave
push
pop
jbe
movsl
adc
or
add
xchg
or
popa
ret
pop
sbbl
jle
jge
jge
out
loope
mov
push
jge
mov
and
mov
scas
mov
je
mov
mov
shlb
mov
mov
mov
inc
sub
outsb
push
sbb
outsl
cmp
sub
fstps
dec
out
push
mov
add
loopne
popa
xchg
repz
rcll
sbb
cmpsl
pop
push
addr16
mov
shrb
call
nop
xchg
in
and
loopne
mov
sbb
cmp
insb
sub
inc
mov
jnp
lret
bound
xor
push
mov
lret
shrb
test
scas
outsl
push
outsl
push
sub
cmp
push
fwait
xor
je
lcall
aam
iret
loop
mov
mov
mov
push
nop
or
fidivl
dec
sbb
push
push
ja
inc
lods
lods
mov
sbb
loop
sbb
mov
cltd
cs
fdiv
push
jne
pop
mov
insb
push
push
icebp
aas
mov
add
lret
sub
ror
add
fiaddl
mov
test
not
sbb
rcr
pop
adc
lahf
ljmp
pop
mov
mov
addr16
jnp
out
leave
xchg
mov
cs
in
into
stos
enter
push
loopne
insl
dec
cmp
push
mov
and
inc
ficomps
adc
cmp
scas
mov
sbb
ljmp
es
push
fnstcw
fwait
xor
ficoms
in
mov
add
gs
aas
sbb
and
or
mov
cmc
bound
push
and
les
testl
or
out
push
pop
jp
or
mov
and
push
lea
push
fcom
cwtl
mov
movsl
add
lahf
inc
leave
add
fwait
std
enter
hlt
jp
in
sbb
pusha
dec
adc
jg
aaa
adc
scas
rorl
icebp
push
js
mov
or
bound
pop
dec
push
push
scas
mov
aaa
stos
inc
in
insb
jle
imul
lds
or
dec
out
inc
push
test
arpl
leave
pop
dec
lret
and
cli
js
addr16
jnp
loopne
ss
ds
jg
mov
out
mov
insb
inc
shrl
insl
pushf
fadds
ja
mov
shll
fldenv
sbb
adcl
dec
cbtw
xchg
movsl
sub
jo
inc
jno
std
daa
loopne
push
scas
jno
ret
je
mov
pop
jns
dec
mov
add
icebp
add
xchg
jg
dec
dec
out
lock
stc
sbb
cli
cmp
fldl
jmp
aaa
push
arpl
jne
aam
lods
pop
or
stos
sbb
dec
jp
dec
fistpl
shrl
repz
test
stos
sbb
and
jne
jnp
mov
adc
insl
loop
jge
imul
pop
ret
fs
int
or
dec
mov
mov
lret
shll
repz
mov
inc
adc
and
mov
inc
cmpsl
imul
dec
mov
popf
sarl
stos
sub
mov
mov
xorb
mov
les
jnp
int3
xor
inc
xchg
fcoml
and
and
mov
sub
in
pushf
nop
mov
test
add
outsl
sbb
outsl
and
dec
xor
sub
cmpsl
push
dec
xchg
sbb
ret
movsb
sahf
int
mov
jno
adc
xor
adc
lcall
je
lock
outsb
fcomi
sbb
inc
cli
std
rcr
bound
sbb
and
jp
std
outsl
push
and
shrl
pop
imul
ja
xor
sbb
jp
popa
jge
pop
ret
xchg
adcb
lock
andb
aas
lret
sar
inc
cmpsl
jns
fsts
insl
push
cmc
mov
jno
pop
aaa
dec
dec
xchg
lahf
or
jae
sub
test
bound
cld
xchg
jb
insl
call
inc
cld
outsb
enter
std
xor
pop
insl
inc
xor
scas
push
mov
jno
fs
mov
test
mov
call
mov
or
mov
jb
mov
xchg
je
xor
in
xor
xchg
mov
mov
aad
call
sbb
pop
sbb
icebp
pop
xor
test
xor
push
push
test
loop,pt
adc
fcmovnbe
sbb
ja
mov
push
movsb
mov
push
xchg
scas
imul
test
outsb
dec
cmp
pop
test
mov
xchg
notl
shlb
cmpsb
jbe
pop
arpl
or
hlt
filds
data16
dec
cmc
lret
movsl
lock
jp
jp
cmp
mov
adc
sahf
sbb
and
add
testb
push
sbbb
lahf
das
jecxz
mov
sub
je
fidivs
insl
inc
sarb
adc
repnz
fdivrs
scas
adc
cmpsb
dec
jmp
or
cli
xor
loop
lahf
fwait
std
arpl
jo
mov
inc
sti
add
mov
aas
xchg
fstps
and
icebp
movsb
mov
data16
cltd
push
mov
das
sbb
push
xchg
ret
jne
mov
jae
mov
cmp
sbb
fidivrs
loopne
dec
or
or
and
jo
inc
push
stos
cld
jbe
stc
fsubl
jge
clc
outsb
push
dec
xchg
jno
pop
sbbl
mov
xchg
negb
cltd
bound
fucomip
xchg
popf
xchg
fyl2x
scas
cmpsb
in
fdivr
xor
mov
pop
sub
rorb
adc
faddl
out
je
mov
aam
call
push
or
shll
push
aad
jns
push
test
cwtl
stos
test
mov
cmp
cmpsb
dec
add
enter
inc
in
cmp
mov
mov
dec
xchg
mov
int
hlt
xor
call
mov
sbb
jmp
test
mov
push
mov
aaa
scas
push
pop
sbb
int
xor
add
je
add
iret
sub
jl
dec
outsb
fs
rcr
push
aaa
push
mov
push
mov
fistl
dec
mov
dec
lods
jnp
mov
rcll
sub
push
int3
adc
leave
jecxz
push
call
aam
sub
jp
inc
inc
movsb
jmp
pop
arpl
xchg
cmp
lret
test
arpl
xor
push
in
xchg
gs
mov
fildll
xchg
pop
cmp
cld
xchg
ja
aad
subl
dec
pop
push
repnz
testb
inc
movsl
cld
inc
cmp
jg
fistl
xlat
in
dec
sti
pop
dec
push
scas
sti
addr16
outsb
inc
gs
into
cli
out
xchg
aaa
cmc
ds
xlat
call
testb
icebp
loope
pop
daa
aaa
filds
sub
cwtl
xor
dec
pop
rcrb
xchg
ficoml
adc
movsl
stos
inc
adc
pop
pop
call
push
pop
sub
fwait
cmp
daa
cmp
jnp
out
xchg
push
addr16
push
aam
imulb
xchg
push
popa
in
push
das
test
ret
ret
aaa
cld
or
xchg
sbb
test
xchg
lret
loopne
mov
mov
decb
cmp
fildll
sub
or
jl
xor
mov
jp
daa
mov
pushf
jmp
mov
js
js
or
insb
call
adc
sub
sarl
xchg
xchg
dec
adc
sbb
fisttpl
inc
std
mov
cmp
xchg
jns
mov
jg
xchg
lods
popf
jo
adc
sarl
cmp
pop
rcrb
fnstcw
dec
push
adc
fisubs
in
insl
fldcw
cmpl
gs
insb
inc
push
mov
jne
inc
mov
aam
and
xor
call
or
subb
cmpsl
js
cmp
push
loope
mov
mov
mov
std
cmp
sar
pop
pop
pushf
loop
aas
cmp
pop
jae
xor
pop
ja
fcomps
dec
mov
pop
aad
xorl
in
stc
push
and
in
lcall
jp
cmc
adc
je
push
fsts
lds
push
out
and
xchg
and
dec
insl
sub
or
mov
ja
nop
adc
sbb
bound
outsb
int3
mov
sub
xchg
fdivl
sbb
xchg
scas
imul
and
mov
scas
cwtl
fdivr
adc
mov
lds
adc
icebp
rolb
push
adc
or
pushf
or
xlat
push
mov
push
cmc
lret
or
popf
orl
mov
jno
lret
and
inc
jecxz
push
dec
es
call
xlat
inc
adc
push
out
lods
mov
jmp
push
fsubr
inc
add
inc
pushf
lea
pop
stos
scas
pop
sarl
xor
lea
or
mov
int3
push
scas
cmp
ja
and
or
cwtl
pushf
jg
inc
mov
call
mov
sub
or
adc
pop
push
out
pop
push
movsl
jle
test
mov
cmc
adc
or
outsl
xor
mov
xor
aad
testb
or
rol
daa
lcall
sub
cld
stc
push
and
jb
dec
insl
loop
aaa
jns
das
mov
mov
inc
mov
leave
icebp
movsb
jns
cmp
out
dec
hlt
jae
pop
les
aaa
jb
sbb
and
enter
cmp
test
adcl
jnp
lods
sub
xor
push
je
xor
xchg
dec
add
pop
dec
fisubl
inc
xchg
dec
mov
cli
dec
push
mov
ss
out
inc
jge
cmp
daa
xchg
add
or
push
xchg
mov
fst
inc
dec
andb
jmp
adc
pop
add
jnp
xlat
pop
lock
test
stc
dec
fcmovb
mov
jge
add
cmpl
mov
aad
daa
icebp
jge
cwtl
cltd
adc
dec
dec
pop
sbbb
imul
mov
repnz
lcall
loopne
fs
pop
leave
sahf
enter
es
mov
dec
loopne
jle
add
nop
adc
mov
std
and
movsb
imul
pop
add
mov
ja
xchg
dec
cs
jo
inc
and
jecxz
out
cmp
movsl
push
sub
dec
stos
daa
test
mov
and
ja
push
or
xor
adc
leave
xchg
add
and
test
adc
enter
jo
pop
iret
loope
or
rcrl
lods
jp
es
mov
outsl
mov
mov
mov
mov
fsubs
lret
dec
scas
test
imul
test
push
arpl
and
and
adc
divl
add
insb
lods
adc
out
mov
jbe
out
jg
dec
jg
cmp
sub
adc
pop
aam
scas
popa
addr16
jo
cmc
inc
mov
cltd
push
adc
adc
js
inc
fcoml
inc
fistl
fldl
adcl
lods
les
jne
inc
xor
cmpsl
call
mov
mov
lret
out
xchg
add
xchg
adc
mov
imul
ret
stos
sbb
push
adc
mov
stos
jno
sub
mov
inc
and
jbe
or
repz
or
scas
pop
shll
add
outsb
dec
lret
lds
or
imul
ret
pop
pop
lock
mov
push
adc
lret
xchg
enter
pop
in
and
rorb
jmp
testl
int
aaa
outsb
lea
xchg
sbb
push
pop
sub
cmp
cmpsl
sbb
repnz
add
jnp
test
js
mov
out
inc
or
cwtl
je
and
ss
popf
mov
xchg
sub
push
add
cmp
push
sbb
jae
dec
jle
pop
push
ljmp
cmp
aad
movsl
insb
mov
clc
fidivrs
cmp
or
mov
fidivrl
sub
jmp
lea
std
xchg
mov
mov
xor
fists
loop,pt
sbb
mov
dec
xchg
cmp
popf
xchg
rcrl
out
push
bound
movsl
inc
jo
push
rcll
and
in
in
or
mov
sbb
adc
mov
std
cltd
xor
rorb
sbb
fisubrs
mov
stos
push
testl
pop
and
sbbb
popa
jmp
and
daa
out
jbe
int
fnsave
cmpsb
jg
aam
daa
mov
ljmp
aaa
mov
in
xor
inc
aaa
push
repnz
out
insb
xchg
mov
mov
pop
cmp
inc
ss
mov
leave
add
fistpl
mov
hlt
rorl
cmp
les
or
int3
xchg
ret
xchg
jge
outsl
mov
and
mulb
mov
pusha
stos
outsl
dec
mov
push
jl
xchg
inc
sub
imull
ja
lcall
xchg
dec
inc
popf
or
jecxz
cmc
adc
pop
popa
fstp
data16
sub
pop
fisttpll
jo
clc
xchg
fcmovne
cmp
insb
jnp
mov
cli
aad
lret
add
cmp
imul
sub
or
mov
fs
rcrl
rclb
aaa
push
push
out
jns
testl
ja
cmpsl
adc
xbegin
push
popf
lret
popf
in
push
push
pop
mov
inc
sub
sub
sahf
jb
adc
loopne
xchg
adcl
rcrl
add
mov
enter
aas
xchg
dec
jp
inc
xchg
icebp
pop
jbe
xor
pop
je
mul
fisubrl
ret
shl
mov
iret
inc
out
loope
aaa
leave
cmc
in
or
sub
test
dec
and
clc
mov
or
mov
xchg
cmp
das
int3
repnz
adc
loopne,pn
ret
enter
out
mov
iret
pop
popa
adc
sbb
test
sbb
insb
nop
sub
int
aaa
mov
xchg
xlat
push
dec
jae
bnd
sub
inc
dec
xchg
sti
aam
inc
adc
xchg
push
cmpsl
fsubrl
xor
sub
dec
in
js
jnp
cmpsb
shrb
mov
sub
mov
adc
repz
rorl
out
aad
pop
movsl
xorl
fldcw
mov
pusha
rcll
mov
dec
mov
inc
adcb
mov
xchg
inc
pop
push
mov
fxch
dec
mov
fs
in
test
mov
inc
adc
aas
xchg
mov
and
ret
icebp
shlb
movsl
mov
rcll
lock
pop
bound
rclb
js
add
daa
shll
cmp
fidivl
ja
sbb
out
inc
inc
pop
pop
in
sbb
xchg
imul
jnp
ds
out
sbb
fidivl
repz
pop
jg
jmp
xchg
jg
mov
inc
arpl
cs
sbb
push
dec
sahf
cmc
pop
jne
mov
jge
mov
xchg
sbb
insl
mov
inc
test
lea
or
aaa
mov
jmp
mov
pop
ret
mov
xor
and
pop
iret
out
ss
test
ret
idivl
div
adc
hlt
xchg
ss
je
cli
and
sub
enter
push
dec
push
mov
push
and
test
aam
xchg
or
pushf
and
push
in
mov
cwtl
js
orl
rcrl
adc
or
jg
sbb
insb
adcb
xchg
lds
mov
stos
cmc
add
fs
fnstcw
int
xchg
loop
cmp
mov
mov
dec
outsl
test
scas
dec
or
clc
sbb
cmp
enter
or
dec
insl
fld
outsl
lock
mov
iret
and
or
imul
icebp
mov
sbb
inc
mov
fnsave
mov
mov
and
aad
int3
push
cmpsl
mov
jle
mov
fmul
xchg
test
xorb
push
jle
les
dec
sbb
push
dec
into
jae
pop
test
add
decl
insb
adc
rcr
stos
insl
sbb
mov
jne
mov
pop
ret
lcall
push
mov
shll
pop
add
movsl
fstps
insl
push
mov
dec
sbb
sbb
and
sbb
shl
addr16
in
mov
jnp
mov
push
dec
sub
sbb
es
fidivs
cmp
push
mov
inc
into
jmp
xor
sbb
fwait
or
clc
and
mov
xor
pop
cmpsl
mov
adcb
push
out
push
pushf
das
mov
test
cmp
xchg
inc
inc
pop
add
es
std
mov
adc
outsb
stos
loope
call
pop
ds
sbb
xchg
pop
movsl
aam
jb
in
xor
repz
xor
xor
mov
orb
xor
jb
and
dec
mov
or
xor
insb
mov
popf
movsl
jle
add
enter
icebp
add
test
aad
push
sar
jl
stc
loopne
mov
aam
sub
xchg
insb
andb
out
pusha
pusha
nop
cli
xor
mov
pop
mov
dec
xor
xchg
jo
shlb
aas
das
jg
and
es
and
popf
inc
mov
je
sti
sahf
xchg
iret
xor
pop
mov
add
in
mov
lods
cltd
jno
push
jnp
jo
jnp
and
dec
mov
popa
add
sbb
out
test
fisubrl
sbb
sahf
mov
fnstsw
push
xchg
mov
inc
call
repnz
cmp
mov
jecxz
or
cmpsl
je
test
rorl
push
adc
mov
jp
sub
jnp
rcr
jae
cmc
fisttpll
xchg
arpl
mov
push
and
xchg
and
sbb
loop
inc
fdivrs
mov
outsl
outsb
aam
stos
mov
and
add
mov
shlb
lcall
and
sub
and
xchg
popf
repz
fmull
std
or
cmp
push
pop
sub
lea
push
ror
fs
arpl
movsb
pushf
mov
test
jo
or
ds
imul
rcll
insb
lock
mov
imul
jnp
adc
push
inc
pop
mov
and
bound
push
arpl
lds
int
in
sahf
jle
repz
mov
adc
xchg
pop
push
mov
insl
sbb
inc
sbb
pop
clc
pusha
push
adcb
pop
test
or
loope
das
pop
int3
imul
adc
repz
mulb
ret
sbb
and
mov
adc
push
lds
lods
loop
mov
pop
jnp
subl
popf
clc
mov
mov
cwtl
jo
pop
inc
rorb
stos
call
or
cmp
mov
lahf
dec
jnp
pop
and
std
lahf
shr
or
or
pop
stos
mov
aad
hlt
ds
cmc
cmpsl
cmp
xchg
xchg
je
leave
jb
xchg
push
mov
pop
xchg
dec
or
mull
sbb
dec
adc
mov
mov
ds
cs
arpl
dec
jge
inc
jo
mov
and
pushf
int3
xchg
push
pop
scas
mov
adc
mov
aam
inc
popa
stos
lods
dec
testl
push
hlt
sarb
aam
dec
insl
popf
jne
pop
ffree
push
int
cs
movb
lret
daa
pop
mov
cmc
mov
mov
es
jo
roll
inc
nop
fwait
sti
adc
arpl
jg
out
xorl
dec
or
imul
ja
push
push
or
repnz
testl
jo
mov
xor
fwait
pop
jmp
xchg
pop
sub
int3
push
popa
and
adc
outsb
mov
rcrl
pop
loope
dec
pusha
inc
idivl
int3
adc
add
mov
or
int
pop
das
push
push
stos
fistpl
cmp
mov
icebp
inc
lock
add
xchg
push
scas
fisubs
mov
or
repnz
ror
xchg
mov
lahf
rol
rorl
out
stc
sbbl
or
imul
pushf
cmp
dec
hlt
repz
mov
xchg
mov
addr16
xor
adc
inc
xlat
xchg
sbb
movsb
dec
ret
adc
mov
mov
pop
jno
sub
jns
sub
ja
test
push
lahf
lea
sub
push
pop
and
loopne
repz
mov
cwtl
pop
jbe
ja
mov
mov
aas
sbb
xchg
sbb
jp
test
pop
cmp
mov
dec
mov
fs
jnp
cs
push
and
sbb
jne
cmp
out
push
cmp
xchg
xchg
dec
ja
cmp
lret
mov
and
add
out
dec
or
stos
or
shlb
add
rcr
mov
pusha
or
in
in
loope
push
add
push
push
stc
pop
inc
dec
pop
pop
cmc
jmp
mov
push
inc
mov
or
lods
out
jne
adc
sysenter
mov
adc
clc
out
clc
push
lahf
mov
cmp
stos
or
push
inc
push
test
mov
adc
xor
insb
int
ss
cmp
out
orl
movsb
mov
fistps
sahf
jbe
cmp
dec
sbb
loope
sub
in
push
and
cli
or
mov
pop
insb
fs
sbb
push
cs
xor
jle
dec
mov
icebp
xlat
mov
bound
cmc
inc
pop
orl
stos
add
test
in
mov
loop
push
ficomps
ljmp
subl
lcall
xorb
sub
push
dec
scas
out
push
dec
outsl
dec
pusha
shll
pushf
xchg
pop
push
sahf
mov
cmp
mov
pop
cld
sub
mov
cld
xor
mov
or
fdivs
push
jle
in
pusha
cmc
jb
or
sahf
mov
rcl
xorl
mov
pop
lret
push
cmpsb
sub
mov
pop
in
ret
frstor
lds
sbb
fisubrl
mov
and
pop
adcb
jo
testl
popl
fiadds
inc
mov
xlat
inc
je
xchg
or
call
cwtl
cmpb
je
xchg
iret
lock
aad
loope
xlat
stos
ss
jmp
mov
jle
mov
jnp
rolb
jmp
and
repnz
cltd
sbb
adc
and
mov
xchg
sbb
inc
icebp
mov
scas
pop
xchg
lahf
outsb
sbb
mov
mov
lahf
inc
mov
jno
leave
mov
into
nop
ss
lods
iret
mov
ret
ficompl
ret
cld
cmpsb
push
and
jl
and
imul
sti
cmovo
ja
lods
sub
lret
arpl
outsl
lods
cmp
int
mov
nop
ljmp
aas
bound
jns
sbb
mov
jge
add
dec
sub
stos
cmpsb
je
mov
mov
add
imul
inc
sbb
pop
push
in
jge
js
or
out
xchg
das
xchg
repnz
push
mov
cwtl
jo
sbb
call
fs
shll
rolb
out
sahf
xor
add
dec
add
pop
adc
push
dec
push
insw
sahf
pop
mov
icebp
aas
xchg
pop
push
xchg
ja
jg
jg
iret
iret
dec
add
lret
pop
or
sti
sub
outsb
mov
inc
dec
pop
push
inc
xor
cmpsb
jg
lods
cmp
mov
rcrb
add
add
aas
jmp
push
pusha
add
push
add
push
mov
adcl
pusha
roll
cwtl
add
and
daa
xor
xorb
xor
dec
jno
es
and
mov
inc
stc
addr16
daa
data16
pop
sub
sbbl
push
repnz
repnz
lret
xor
or
jmp
insb
push
push
ds
xchg
addr16
stc
popa
popa
addr16
lods
call
in
fxam
lahf
sti
lods
mov
or
gs
xlat
repz
xchg
repz
into
xchg
dec
and
outsb
das
int
shlb
or
cmc
stos
daa
cmp
repz
idiv
enter
nop
jae
scas
jno
andl
cwtl
sbb
pop
test
rclb
mov
jle
pop
insl
push
adc
cli
pop
jg
lea
imul
daa
jle
in
test
xchg
mov
cltd
rcrb
mov
es
xor
testl
dec
inc
jo
jns
imul
nop
int
adc
xchg
arpl
mov
fildll
push
lcall
sub
push
mov
lds
sub
std
outsl
push
repz
push
jbe
call
inc
adc
es
cmp
clc
mov
lret
inc
jl
xorb
jecxz
in
movsb
rolb
nop
cld
movsl
push
jp
lods
in
rorl
inc
inc
loopne
xchg
sub
das
lods
and
fdivrs
insl
mov
mov
cmp
push
lods
cltd
insl
inc
mov
mov
stos
mov
movsb
push
call
xchg
in
push
cs
mov
adc
push
test
jnp
loopne
push
fistpl
insb
mov
sub
shlb
repnz
dec
inc
cmpsl
jecxz
fsubrl
push
pop
push
jmp
loopne
and
data16
jle
cltd
mov
in
jmp
test
fwait
out
negb
adc
sub
jbe
cmc
sysret
mov
and
jmp
std
inc
xor
or
in
or
push
ds
sub
sbb
out
mov
xchg
repz
out
hlt
jo
mov
std
mov
push
inc
repnz
mov
sub
sbb
cwtl
imul
je
int
mov
lds
add
mov
aas
outsb
mov
xlat
adc
pop
mov
push
mov
enter
and
jp,pn
repz
push
aaa
and
inc
adc
sar
fsubrl
out
cs
and
jp
mov
adc
insb
or
loope
outsb
pop
ljmp
xchg
addr16
fbld
pop
and
or
nop
push
sub
add
mov
lret
xchg
mov
out
lahf
gs
shr
jbe
pop
cmp
pop
cmpsl
mov
cmp
repz
inc
mov
add
loope
in
push
stc
push
pop
or
push
pop
mov
mov
movl
addb
mov
add
in
loop,pn
push
xlat
test
es
ljmp
cli
rclb
dec
jae
push
sub
jne
or
cmp
add
cs
hlt
sub
sub
dec
mov
imul
sbb
xchg
andl
fidivrs
jno
das
dec
or
fdiv
sbb
xor
in
fcmovu
mov
push
test
cmpsb
loopne
mov
fidivl
ficompl
pop
cltd
push
dec
xchg
sahf
jne
push
jge
mov
gs
repz
adc
dec
stos
adc
cmp
stos
sbb
addr16
mov
jno
sbb
or
ret
mov
mov
sahf
movsl
sbb
or
test
mov
ficomps
aaa
push
add
push
jae
jb
out
inc
mov
jge
pop
inc
or
sbb
scas
mov
mov
repz
test
cmp
cmp
stc
jmp
mov
push
loope
mov
ds
int
dec
popa
dec
mov
pop
js
adc
mov
aas
sbb
mov
or
lods
push
imul
repnz
das
aaa
mov
push
pop
in
cmc
mov
fndisi(8087
lods
pop
call
push
push
push
iret
pop
and
repnz
jg
and
pushf
imul
mov
mov
aas
cld
fcompl
xchg
adc
cmp
dec
or
and
loope
pushf
inc
inc
sbb
icebp
and
fdivrp
lret
lahf
cmp
iret
mov
leave
mov
dec
xchg
cmpsl
out
xor
out
gs
ret
and
cltd
adc
or
jns
in
in
xchg
mov
fdivrp
jmp
frstor
dec
ret
nop
mov
test
shl
aas
sub
xchg
dec
in
into
lcall
pop
sub
sahf
leave
sub
push
mov
sbb
mov
hlt
mov
dec
cmpl
add
mov
cmp
stos
jge
pop
add
mov
adc
outsb
sbb
pop
pushf
fsubrl
sub
mov
and
xlat
xchg
pop
outsl
loop,pt
mov
pop
into
jne
sub
jne
mov
xor
scas
push
data16
add
jb
fs
mov
push
inc
mov
insl
mov
cltd
ja
sti
rorb
pop
lods
inc
sub
clc
mov
mov
fldl
inc
cmpsb
jne
mov
mov
sub
dec
xor
jl
das
or
push
xchg
icebp
ljmp
sub
cmp
jmp
push
or
movsl
pop
and
cmpsb
mov
adc
ret
iret
daa
movsl
push
cld
lcall
adc
lret
int3
addr16
cmpsb
iret
cld
and
push
rcl
jmp
jno
mov
sub
and
cli
mov
sub
pop
fwait
aaa
stc
cmp
jmp
rorl
lea
in
sub
fimuls
and
mov
jl
jne,pt
xor
scas
dec
repz
shrb
adc
pop
popf
sbb
addl
es
cmpsl
and
mov
gs
stos
in
pop
dec
sub
test
mov
call
loop
mov
in
inc
push
and
outsl
rcl
popf
cmp
mov
mov
fisubl
imul
mov
aaa
inc
xlat
scas
jb
pop
out
cmp
xlat
imul
add
mov
ja
outsb
xchg
cmc
or
pop
pop
gs
mov
or
mov
decb
xchg
inc
or
das
loop
sbb
divb
jmp
jmp
into
xcrypt-ctr
cmpsl
pop
pop
push
jnp
add
call
gs
push
xor
push
add
adc
scas
into
jge
sbb
insl
sbb
sub
lods
jns
jns
clc
cmc
push
out
ficoms
into
ja
into
cmp
mov
lock
mov
int3
xchg
les
jmp
mov
push
add
sub
sub
sbb
cwtl
lahf
adc
or
lods
add
lock
xchg
in
sbb
inc
insb
lret
xchg
inc
insb
push
push
lcall
mov
cmp
sbb
fidivrs
sbb
dec
and
push
sub
test
add
push
and
nop
lret
mov
cmp
xchg
fs
mov
adc
outsb
sub
lds
push
iret
shll
insb
sub
cmpb
dec
mov
imul
in
sahf
fcoml
inc
scas
sbb
cltd
ficomps
clc
dec
faddp
testl
aam
int
add
jnp
mov
aas
or
lahf
je
pop
ss
pop
mov
pop
xlat
jp
pop
push
inc
and
xor
fstl
pop
cmp
shr
andl
jb
in
jl
sbb
pusha
pop
scas
mov
jp
pop
pop
test
pop
idiv
jg
xchg
arpl
xchg
test
clc
insb
aaa
outsb
je
mov
mov
fistpll
cmp
push
movsb
xor
cmp
iret
sub
icebp
jp
std
inc
jbe
mov
call
fucomip
jg
call
jno
imul
in
insl
and
ret
adc
xchg
out
adc
lods
mov
dec
std
pop
xchg
scas
sarl
or
iret
xchg
insl
notl
fmul
cmpl
dec
jecxz
sub
mov
je
add
cltd
stos
xor
xchg
icebp
ss
inc
mov
mov
addr16
xchg
mov
add
cltd
stos
scas
or
jecxz
inc
and
push
lock
popf
rcll
sub
mov
push
sbb
xchg
jae
je
lcall
bound
pop
push
sbb
inc
add
mov
jge
mov
inc
gs
pop
dec
outsb
xchg
sti
out
inc
stos
jbe
mov
dec
mov
push
xchg
and
shr
lret
pop
fwait
int3
mov
xor
mov
mov
icebp
fnstenv
and
jnp
sbb
dec
xor
cli
jb
jl
pop
sar
arpl
mov
push
jp
cmp
cmpsb
sbb
sbb
cltd
int
popa
cld
xchg
aaa
adc
push
clc
cli
mov
dec
cmp
insl
sbb
push
subl
push
mov
xchg
push
popf
icebp
mov
adc
mov
or
and
mov
push
cli
gs
mov
mov
mov
je
int3
and
sahf
mov
cltd
xorl
roll
lea
or
negb
ljmp
gs
in
mov
leave
call
addr16
cld
notl
fldcw
imul
cmp
inc
xchg
pop
popf
adc
jnp
push
icebp
pop
ss
int3
sub
sarl
xor
ja
sbb
into
fmul
aam
cli
push
mov
mov
push
push
out
jns
xchg
mov
mov
scas
xchg
dec
popf
sahf
jbe
call
inc
fwait
dec
pop
mov
xor
xor
shlb
push
jns
stos
fidivs
sub
inc
pop
jbe
mov
inc
andb
addr16
test
ret
sbb
adc
jb
adc
bound
xchg
je
sti
notb
or
adc
popa
pop
xchg
ja
insb
push
test
clc
mov
test
lock
push
jmp
pop
sbb
aas
pop
add
cmp
xor
push
rcll
mov
sub
lea
mov
sarl
adc
in
xor
cli
add
cmc
data16
pop
cmp
mov
push
orb
pop
mov
mov
or
or
sub
adc
lret
gs
inc
cmp
dec
xchg
repz
or
sub
xchg
lds
test
dec
push
pop
and
jecxz
orb
arpl
mov
mov
outsl
dec
jecxz
shlb
cmp
shll
mov
pop
sbb
lcall
push
fnstcw
add
adc
cmp
sbb
lahf
sbbl
inc
cmp
imul
push
push
xorl
inc
xor
lahf
mov
mov
inc
jb
and
and
xchg
lret
mov
or
cmp
adc
in
ret
in
fildll
sbb
movsb
dec
int3
pop
das
popa
and
jnp
pop
lret
sub
and
imul
ja
fwait
test
jl
push
gs
sub
das
xor
mov
lahf
ret
mov
int
out
lea
clc
mov
mov
sarb
es
xchg
cld
popa
movsl
jne
clc
mov
xchg
xchg
and
test
mov
dec
scas
imul
subl
pop
lds
das
pusha
fs
lock
insl
aad
mov
pushf
cmp
inc
lret
fisubrl
xor
aaa
push
sub
inc
in
outsl
push
sahf
mov
bound
repz
fildl
cli
mov
aaa
std
adcb
or
cwtl
fisttpl
aas
xchg
test
fidivrl
in
repnz
pop
outsl
gs
mov
lods
loop
add
movsb
adc
test
jnp
pop
jmp
jecxz
xchg
rorl
into
mov
mov
push
xchg
stos
push
xchg
ljmp
jne
xchg
pop
cmp
cmp
scas
stc
dec
out
jb
stos
lods
cld
push
pushf
push
jl
data16
mov
ss
jnp
loopne
jl
addr16
sub
movsl
sbb
mov
xor
shlb
insb
bound
fwait
cmp
fcomps
ret
nop
xor
ljmp
sub
scas
out
sub
inc
mov
sahf
mov
xor
shl
sbb
movsb
push
stc
fisubrs
sub
jns
jns
mov
add
sub
outsb
repnz
cmpsl
xchg
cmp
push
je
es
dec
aad
push
pop
jnp
lcall
outsb
out
fldenv
push
cmc
sahf
push
loop
fstps
xor
adc
fidivl
and
jnp
push
push
je
inc
and
fwait
aam
cmp
pop
test
mov
test
add
xchg
pop
shll
enter
cld
push
and
popa
or
mov
or
mov
addr16
lcall
add
sbb
fwait
iret
xor
ret
fcomps
mov
or
mov
rcll
sub
cmpsl
pushf
sbbl
xor
loopne
mov
jl
or
push
jl
je
jmp
lcall
xor
fbstp
nop
rcr
cmp
leave
jb
mov
lods
mov
push
xorb
test
mov
push
int3
test
mov
cmpsb
pushf
xor
jb
lea
push
stos
movsl
int3
fwait
incl
mov
adc
aaa
cmpb
push
or
mov
mov
jp
mov
dec
sti
mov
cli
xor
nop
std
and
jbe
inc
mov
fldt
adc
lea
cs
push
scas
jne
scas
sbb
insl
and
aas
outsl
hlt
xchg
cmp
enter
pop
icebp
popa
mov
push
xchg
mov
aas
or
fs
mov
add
imul
shll
adc
xor
stc
fs
push
sbb
lods
cmp
dec
cltd
stos
inc
inc
popf
mov
cmp
std
sbb
int3
xor
mov
inc
jecxz
xlat
test
inc
mov
jno
cld
test
add
orl
inc
push
add
fiaddl
pop
inc
cld
cmpsb
xor
cli
sbb
push
rorb
mov
rclb
movsb
pop
stc
movsl
pop
adc
jle
mov
ftst
arpl
and
addr16
std
fstpl
lahf
pop
add
xchg
cmp
jge
push
adc
jg
push
push
sbb
cltd
divb
lods
cs
pop
ror
sub
mov
repnz
adcb
das
jecxz
scas
jb
adc
add
into
xlat
jnp
imul
jl
fdiv
mov
jns
sub
mov
add
mov
add
push
mov
aad
js
add
ficompl
push
sbb
or
mov
mov
dec
lds
out
loope
mov
aam
lods
icebp
pop
xchg
push
test
movsl
and
js
mov
mov
jl
and
ja
pop
xlat
cwtl
insb
daa
mov
aas
cmp
arpl
jbe
xchg
push
mov
jo
push
add
lods
push
push
cmp
ds
sbb
mov
cli
sub
cmpsb
mov
push
pusha
jmp
mov
mov
pop
popl
push
jnp
mov
mov
or
mov
lret
outsl
mov
lea
or
sbb
mov
out
les
daa
sbb
add
xchg
daa
jne
std
cmp
loope
sub
jae
dec
or
push
jg
sub
fcomip
and
lock
sbbl
pop
aaa
loopne
lcall
xor
inc
dec
push
or
jo
mov
inc
out
stos
mov
xor
jecxz
mov
dec
repnz
xor
rcrb
lret
pop
aad
sub
lret
xchg
sub
fstpt
inc
mov
jl
aas
scas
cmc
in
repz
jp
push
mov
mov
in
inc
xchg
xor
outsb
sahf
push
push
inc
stos
test
dec
adc
test
and
fisubs
mov
push
out
addr16
je
insl
cmp
mulps
hlt
loop
sbb
sub
xor
jne
dec
jnp
adc
mov
mov
loop
lods
pop
imul
loop
mov
lods
sarb
or
mov
iret
insl
dec
out
xchg
out
out
lcall
lods
mov
loope
inc
adc
mov
movsb
enter
popf
popa
mov
push
or
add
mov
mov
cmp
imul
lods
test
movb
lea
mov
mov
mov
or
pop
add
xchg
fwait
insb
leave
loope
sub
lcall
adc
cmp
jg
lahf
fists
or
xchg
data16
call
insb
dec
ret
aas
inc
iret
inc
adc
mov
jg
add
fidivrl
out
insl
pop
insb
lock
push
cmc
or
add
mov
push
lret
sub
xor
jle
cmpsl
cmpsb
pop
adc
xchg
js
mov
clc
sti
jmp
cwtl
ja
rcrb
dec
call
dec
dec
pushf
roll
ror
inc
enter
out
mov
ficomps
mov
sbb
in
sbb
adc
into
loope
or
rcrb
stc
add
sti
mov
xchg
pushf
out
sbb
pop
sub
repnz
add
inc
das
push
pop
shrb
test
push
ljmp
andb
into
bound
mov
nop
mov
gs
aad
outsl
shlb
xor
leave
or
lret
sbb
loopne
repz
rcl
je
jle
adc
push
cmpsl
test
loop
test
js
cwtl
sbb
fwait
out
adcb
cmp
sub
scas
and
inc
mov
aaa
cltd
lds
cmp
pop
inc
jns
negl
push
and
mov
int
lds
dec
adc
and
or
in
out
mov
sub
into
gs
fs
repnz
lods
imull
mov
cwtl
mov
repnz
aam
stos
in
push
shll
add
outsb
into
fstl
pop
loope
addr16
mov
rcrb
cli
and
xchg
icebp
or
mov
fldt
dec
andl
mov
in
mov
shll
jo
mov
lods
nop
cmp
arpl
push
push
sarb
xor
inc
jl
fldcw
lret
inc
mov
cld
mov
gs
xchg
add
pop
xchg
sti
fcmovnb
mov
dec
lret
sbb
mov
cmp
cmp
xor
lcall
adc
cs
fcmovbe
loopne
ss
enter
ss
ds
outsl
or
scas
lock
repz
int3
pop
fwait
test
mov
add
or
add
int
inc
ja
pop
fs
pop
stos
lods
stos
cmovle
stos
pop
jnp
popf
jne
jp
xor
mov
js
or
sub
repz
shlb
add
in
movsl
lahf
add
sub
ss
inc
daa
push
fnsave
imul
daa
jmp
sbb
mov
push
in
jge
cmp
sbb
movsl
inc
or
pop
xorl
scas
add
push
sub
data16
inc
int3
outsb
incb
lock
sbb
jle
xor
inc
frndint
cmp
inc
cltd
aam
insl
aad
pop
das
push
andb
add
ret
jge
sbb
out
pop
cwtl
mov
in
cltd
xor
pop
std
mov
and
cli
loop
aas
iret
aas
inc
fadds
dec
pop
jne
xchg
shlb
fldcw
imul
aaa
shll
and
imul
mov
jnp
in
lret
mov
pop
add
or
lods
idivb
lcall
mov
sbb
pop
mov
call
imul
lock
mulb
sub
out
jg
mov
cld
ja
and
or
xor
mov
xchg
shl
lcall
adc
jmp
adc
das
mov
repz
sub
mov
push
jl
cmp
ret
std
and
jnp
mov
lea
ret
insl
fisubrl
lcall
push
xlat
xchg
lock
sti
sahf
out
gs
mov
jo
mov
jge
addr16
cli
insb
push
out
in
and
xor
dec
jo
sti
repz
pop
inc
ljmp
in
pushf
pop
lods
adc
out
jl
roll
repz
in
clc
imul
adc
daa
enterw
iret
aad
lcall
imul
add
or
gs
jl
jbe
mov
shl
dec
test
or
outsl
and
jl
sub
hlt
cwtl
gs
outsb
cmpsb
test
stc
pop
aas
out
imul
jno
js
adc
push
jns
cmp
in
adc
imul
or
push
jl
jg
pusha
ja
lods
push
dec
sub
jge
lods
pusha
cli
sbbl
or
jecxz
ffree
cwtl
sbb
cmp
imul
aam
dec
cmp
add
lods
xchg
mov
pop
and
add
les
mov
test
mov
push
inc
dec
outsb
movsb
loopne
jg
and
sbb
popa
mov
push
lret
and
lret
xchg
jp
jbe
sahf
icebp
jbe
pop
std
or
push
xchg
sub
mov
sub
add
lret
mov
das
and
mov
add
xchg
fs
xor
mov
gs
cmpsb
stos
aaa
inc
lods
and
das
pushf
dec
dec
push
int3
and
cmpsl
add
insb
ficoml
jno
pop
xchg
inc
cmp
scas
in
cmpsl
xor
and
shr
sahf
ss
mov
mov
orl
push
iret
lahf
sub
imul
iret
xchg
call
ja
adc
jae
mov
xchg
nop
arpl
jns
push
into
aad
jp
sub
jecxz
test
jo
jno
iret
jg
xchg
xchg
aad
fwait
sub
xlat
imul
decl
mov
mov
pop
and
dec
pusha
mov
pop
dec
jae
xchg
adc
or
xchg
xor
dec
pop
push
mov
xchg
sbb
xor
pop
inc
mov
not
faddp
icebp
adc
cwtl
ret
test
mov
icebp
ret
cli
sub
addl
xorb
push
icebp
jp
lods
dec
roll
mov
jp
leave
jns
cmpl
and
inc
jmp
adc
lods
mov
pop
dec
out
mov
pop
adc
rclb
clc
stc
stos
pop
repz
stos
and
cmpsb
lods
mov
test
loopnew
mov
mov
mov
test
testl
in
stos
xor
sti
dec
inc
mov
testl
jl
push
daa
in
mov
xchg
inc
cmp
fildl
jo
sbb
inc
jmp
jbe
jb
add
dec
mov
outsw
pop
jnp
jbe
mov
movsb
icebp
cmpsb
addr16
sarb
mov
fnstenv
pand
int
push
fwait
mov
jge
cmpsl
pop
sub
mov
xor
enter
test
addr16
dec
sbb
pushf
aad
mov
jg
rclb
jnp
dec
inc
sbb
loope
dec
stc
jb
repz
es
outsl
pop
in
jge
or
loopne
cs
and
loope
push
insl
and
dec
xor
popf
sti
fsubrs
outsb
pop
outsl
jno
fistl
dec
ljmp
in
into
pop
mov
clc
rcrb
push
push
movsl
jmp
jle
popl
add
es
mov
rolb
jmp
jl
mov
je
dec
repz
test
hlt
addr16
add
cmpsb
lea
dec
mov
xchg
fcompl
add
insb
inc
ret
adc
stos
dec
scas
aad
sbbl
cwtl
mov
and
adc
fsubrs
push
xlat
cmp
cli
mov
xorb
dec
fwait
add
mov
dec
adc
sbb
sub
inc
scas
pop
mov
js
lret
mov
jo
cmp
iret
bound
or
push
xchg
mov
imul
outsb
loope
mov
or
sbb
adc
pusha
negb
add
insl
repnz
mov
clc
lret
lcall
popf
mov
lret
or
xor
jg
fstp
add
mov
aas
ffreep
fwait
testb
jae
loop
or
repnz
xor
dec
jb
and
popa
bound
mov
iret
cwtl
jbe
add
stos
test
lock
push
jg
dec
lret
mov
lock
psubw
dec
jle
mov
sub
xchg
pop
inc
xchg
mov
push
mov
fsubs
dec
inc
outsl
lahf
mov
and
inc
cmp
adc
jmp
js
push
outsb
mov
xchg
cmpsb
scas
fmul
lods
jno
test
mov
scas
cmp
jbe
jecxz
repz
xor
add
mov
inc
xor
lcall
cltd
cmpsl
test
test
inc
inc
outsb
sbbb
dec
inc
fstps
fs
xchg
sbb
loope
movsl
push
mov
stos
in
add
in
sub
nop
push
or
jno
xlat
jne
ret
sbb
fimuls
fdivrl
std
cltd
and
sbb
cmp
stos
mov
jp
fcmovnu
fldlg2
popf
sub
pushl
retw
mov
ror
dec
mov
in
faddl
lock
jae
into
addr16
pop
xor
pop
add
outsl
and
mov
dec
mov
test
mov
movsb
jecxz
cmp
jecxz
pop
bound
jg
outsl
notl
xor
inc
arpl
sub
adc
pop
jle
inc
xchg
pop
fidivs
mov
dec
aaa
lea
sti
xchg
movsb
outsb
add
jl
into
sub
rep
lcall
leave
xchg
inc
mov
in
movsl
push
or
xor
int
ja
push
mov
cmp
pusha
stc
xchg
movsl
movsl
cmpsl
test
cwtl
outsl
adc
movsl
xor
cmp
jae
xor
jmp
imul
and
mov
scas
mov
mov
xchg
addr16
das
js
bt
enter
dec
xchg
rcl
pminub
xor
mov
adc
scas
sbb
lods
jp
mov
sahf
movsb
fcoml
xchg
cmp
sbb
lods
xlat
in
mov
roll
or
sub
nop
scas
loop
gs
cmpsb
mov
mov
mov
pop
fst
mov
xchg
jno
and
or
mov
fiaddl
popa
aaa
pop
cmp
jecxz
push
dec
cli
mov
cli
or
adc
call
dec
enter
add
ss
inc
aaa
enter
or
sbb
adc
stos
jno
adc
jmp
jle
movsl
in
sub
stc
sbb
pop
repz
orb
fcmovu
or
dec
test
ss
or
mov
mov
dec
pop
mov
push
or
stc
pop
outsl
sbb
push
cmp
fdivr
lock
xor
mov
jns
es
dec
enter
call
mov
mov
test
mov
scas
xchg
scas
pop
mov
mov
scas
popa
lock
shlb
insb
jnp
mov
push
out
les
inc
movsl
lret
repz
xor
cmc
push
xor
or
or
xlat
jecxz
mov
push
sub
inc
sti
mov
les
movsb
sbb
adc
lea
inc
jg
sahf
mov
imul
popa
scas
inc
cmpsb
sub
dec
or
pop
dec
mov
cmp
sbb
sahf
in
xchg
cmp
mov
or
mov
jle
jp
mov
inc
jo
cmpsb
and
mov
xor
mov
jb
adc
xor
loopne
mov
stos
xchg
std
icebp
and
shll
jg
adc
inc
xor
call
push
adc
dec
and
jle
xchg
out
stc
cli
sbb
fdivrl
repz
cmp
pop
or
and
and
int
dec
sbb
xorb
sarb
jl
dec
xor
xchg
cmp
bound
dec
and
xchg
test
adc
xor
repz
sub
cmp
icebp
ret
adc
dec
xchg
mov
mov
rcrl
cltd
jl
mov
pop
lea
cld
inc
movsb
stos
movsl
cwtl
adc
imul
adc
cmpsb
ljmp
dec
scas
pop
fdivrl
leave
hlt
or
imul
sarb
stc
xchg
xchg
push
fwait
sahf
lret
pushf
stos
lret
adc
daa
in
daa
leave
imul
mov
mov
repnz
pop
inc
lret
jbe
sti
inc
lret
pop
jle
xchg
pop
push
xchg
filds
push
cli
popa
cmp
push
sbb
ljmp
sub
mov
push
movsl
fistpll
std
movsl
cmp
inc
dec
inc
ror
bound
xchg
mov
pop
add
or
gs
and
lcall
and
cltd
xor
jl
lret
cmp
insl
lahf
fists
or
cmpsb
shrb
lret
fucomip
dec
sarl
scas
iret
mov
mov
cmc
adc
fs
jo
xor
aad
mov
mov
insb
insb
les
bound
repz
pop
add
mov
lds
and
jecxz
sahf
inc
xor
cmpsb
into
xchg
dec
test
lcall
push
test
ljmp
jnp
stos
push
cmp
fwait
mov
fisubs
std
mov
mov
pop
lret
cmpsb
outsb
test
in
pop
dec
or
cmp
cli
test
int
imul
loopne
dec
sti
loopne
and
sbb
mov
leave
add
push
xchg
mov
aam
or
cwtl
loop
insl
aad
mul
push
sub
shlb
in
and
imul
loopne
add
xchg
dec
mov
dec
int
andb
mov
inc
pop
mov
add
jne
rcr
loop
popl
sbb
and
sub
jmp
stc
xlat
popa
sub
stos
sub
push
jle
imul
and
arpl
add
jo
pop
lods
mov
shl
leave
out
ds
jns
push
inc
pop
ja
add
xchg
jne
bound
dec
dec
outsl
mov
movsl
fs
xor
add
mov
lock
loop
hlt
mov
out
sbbl
inc
or
mov
lods
mov
sbb
mov
lret
inc
cmp
sbb
dec
or
cmp
mov
mov
cmpsb
and
ljmp
push
mov
adc
pop
rorl
ljmp
fldpi
lcall
pop
add
arpl
iret
outsb
addl
cmpl
jae
mov
and
cmp
cs
adc
sub
push
mov
clc
lods
mov
mov
fcmovnu
mov
daa
in
fcmove
mov
sub
imul
jg
mov
sbbl
adc
cmp
js
lds
inc
inc
pop
mov
adc
shl
pop
fbld
ret
out
xchg
sub
jb
rcll
sub
jl
xor
adc
push
cmp
xchg
addb
out
jo
sbb
nop
push
ljmp
add
icebp
popf
stc
pop
jl
mov
mov
xor
iret
ss
rcrb
xor
shll
dec
outsb
gs
add
pop
int3
inc
fiadds
nop
std
xchg
pushf
jne
cmp
inc
pop
adc
cs
out
pop
popf
rcrb
push
rcr
jb
aad
pop
pop
inc
jp
mov
mov
xor
sbb
incb
mov
lea
outsl
in
xchg
fists
mov
mov
cli
outsl
lea
jge
ficoml
push
and
mov
lods
rorl
sbb
inc
scas
or
jge
xchg
push
lcall
bound
fcomps
lods
test
cmp
push
fsubrs
jae
out
pop
adc
jmp
repnz
ja
cmpsb
ljmp
push
gs
xchg
sbb
imul
fcoms
mov
daa
out
jnp
lret
push
push
adc
mov
aaa
add
xor
aam
out
sbb
inc
xchg
out
adc
ja
lcall
stos
rorb
out
cmp
dec
fisttpl
out
push
inc
ja
stos
pop
mov
jae
out
lods
addr16
adc
and
mov
sbb
mov
push
fnstsw
daa
and
lods
sbb
sub
cld
xchg
xchg
jge
inc
mov
mov
sub
and
mov
arpl
dec
sbb
push
xchg
pop
mov
sti
testl
cld
imul
inc
ds
xor
mov
lds
push
or
jp
scas
je
jge
ljmp
and
addr16
push
dec
xor
arpl
mov
xor
stc
aas
sti
test
std
cmp
and
sahf
mov
pop
push
cmc
test
cs
loop
gs
imul
and
sbb
lcall
shl
daa
daa
xor
or
xlat
movsl
mov
hlt
out
cmp
test
clc
or
lahf
test
out
cmp
lret
js
sbb
ja
gs
jnp
pop
and
sub
cmpsl
pop
mov
es
mov
pop
xor
sub
in
daa
push
cmp
mov
xchg
dec
push
imul
xchg
push
in
sahf
aaa
jp
daa
scas
mov
lcall
cmp
mov
pop
ret
and
pusha
inc
test
insl
jmp
iret
inc
mov
cmp
imul
xchg
testb
push
sbb
add
xchg
int
fstps
inc
cmp
mov
push
xchg
sahf
mov
mov
wbinvd
adc
lods
dec
imul
pop
sar
sub
rclb
cmp
adc
mov
outsb
sub
add
insl
pop
mov
adc
push
xlat
push
imul
ret
fmuls
cmp
out
notl
int3
outsb
orb
cmp
popa
pusha
cmc
and
repz
or
movsb
adc
icebp
out
incl
adcl
ja
subb
outsl
sub
loopne
lcall
dec
xor
xchg
sub
add
push
mov
cltd
cmp
stc
push
mov
scas
int3
repnz
aaa
test
jecxz
xchg
imulb
cwtl
xor
sbbl
push
es
pop
in
adc
das
dec
jl
pop
xor
mov
outsl
ret
push
stos
in
popa
in
and
lret
into
jbe
fcomip
lock
jecxz
pop
outsb
clc
mov
mov
mov
je
rep
push
inc
push
ret
and
xchg
cld
in
lret
mov
mov
jns
jl
enter
and
push
mov
inc
xchg
mov
push
or
cmp
push
ds
es
mov
or
pusha
mov
sub
pop
jnp
cmp
clc
add
fildl
outsb
sbb
adc
add
xchg
adc
add
push
subl
xchg
testl
add
idivl
jnp
idivl
lds
test
nop
pop
test
add
sbb
cmp
adcl
pop
pop
lock
xchg
cmp
cmp
xchg
fs
push
jae
call
add
add
imul
lods
push
mov
jle
dec
sbb
pop
clc
push
jp
mov
lahf
push
push
cmpsl
sub
jns
test
sub
cmpl
or
fisttpl
xchg
jl
dec
pop
stc
sub
xor
sub
sub
inc
push
insl
xchg
and
fisubrl
int
lret
lahf
mov
imul
pop
mov
push
call
pop
enter
insl
inc
adc
stos
mov
aas
and
xchg
sbb
aas
jae
testl
adc
add
insb
xor
sbbb
or
jl
or
lret
loopne
mov
mov
xor
cmp
in
mov
fdivs
leave
sbb
mov
sbb
mov
sbb
test
enter
mov
add
adc
cmc
addb
cltd
push
test
xchg
jb
out
js
int
adc
or
je
xchg
push
pop
dec
sti
xor
cmpsb
fsubp
mov
shlb
adc
frstor
call
dec
insl
mov
jne
les
mov
inc
out
add
idivl
jmp
hlt
xchg
dec
fisttps
lock
stc
jae
mov
or
xchg
xlat
mov
outsl
in
sti
push
mov
clc
push
or
jge
call
lahf
mov
pop
jns
sahf
push
xor
mov
adc
mov
inc
fnstsw
pop
loop
into
loopne
cld
dec
dec
pop
test
lods
pop
or
cld
addr16
dec
aad
add
sahf
jbe
call
xchg
aas
stos
shl
push
xchg
or
lcall
sbb
mov
adc
sbb
add
push
and
inc
sbb
inc
mov
add
dec
fs
lock
mov
lcall
in
arpl
cld
arpl
out
mov
stc
cmp
dec
iret
mov
sub
ja
sbbb
jmp
aas
std
call
xchg
call
pop
add
loop
lret
cli
jecxz
jg
and
add
call
jecxz
lods
dec
flds
shrl
out
test
pop
sarl
or
scas
loopne
bound
int
xchg
fsubrs
sub
dec
lcall
int3
into
jne
insl
push
and
bound
jecxz
sbb
jge
mov
movsl
push
data16
or
lahf
call
addl
xchg
shll
push
sub
icebp
outsl
mov
ficoml
loop
shr
dec
push
mov
xchg
fucom
dec
mov
dec
mov
dec
cmp
xor
dec
dec
out
dec
rcrb
adc
or
test
cmp
lock
gs
sbb
inc
add
fimull
je
mov
insb
pop
lret
cmp
add
jp
jg
nop
popa
jae
imul
push
imul
inc
lds
test
repnz
into
xor
rorl
fldl
mov
clc
gs
inc
xchg
rol
cmp
mov
popf
popa
test
push
or
pop
orb
pop
ljmp
dec
jmp
lcall
mov
dec
sahf
lds
jns
or
sbb
gs
xchg
mov
xor
push
jb
mov
fbld
mov
xor
es
inc
jp
pushf
aad
mov
dec
mulb
into
loope
dec
popa
mov
scas
mov
sahf
movsl
das
add
or
inc
push
dec
mov
push
push
or
push
cmp
daa
and
sbb
or
dec
sub
mov
add
aam
xlat
test
dec
ret
das
js
or
sbb
lea
jmp
sbb
mov
jnp
ljmp
mov
dec
fwait
cmp
xchg
aas
xchg
call
insb
lods
pop
sarb
dec
and
pushf
or
mov
mov
roll
jle
arpl
fs
js
jge
or
mov
test
fstpt
mov
xor
mov
leave
adc
jno
add
movsl
dec
test
mov
jns
shll
and
faddl
sub
mov
ds
mov
dec
and
xlat
xchg
hlt
dec
insl
pop
push
pop
aas
push
and
sub
cs
push
xchg
jnp
and
addl
or
hlt
fbld
push
bound
icebp
jge
pop
add
shrb
sub
jns
push
mov
mov
jnp
jmp
out
cld
adc
stc
cmp
inc
fimuls
test
push
int3
cmpsl
adcb
xor
pop
dec
mov
cmpsb
pop
push
aam
adc
cmpsb
sub
inc
inc
popf
cmp
into
lods
ror
sbb
jmp
icebp
push
scas
jle
jge
imul
sbb
mov
icebp
aam
addr16
cwtl
pusha
mov
dec
xchg
xchg
or
mov
push
leave
pop
xchg
fnstcw
mov
hlt
lods
jo
sbb
insb
in
lcall
dec
xchg
imul
adc
cmp
push
pop
lea
jno
movsl
adcl
mov
cmpsb
mov
pop
jns
mov
xor
sbb
loop
mov
sub
into
or
fidivrl
cld
push
fldcw
and
push
stc
cmc
ret
ret
in
inc
and
mov
notb
int3
subl
cmpb
arpl
rcr
cmp
mov
sbb
movsl
pop
sbb
adc
sbb
push
pop
arpl
leave
and
push
fildl
jnp
adc
pop
mov
iret
inc
test
add
pop
jle
mov
dec
out
rcrb
push
cmp
movsb
push
insb
pop
pop
cs
ret
int3
int
data16
sarb
arpl
push
cmpsb
lock
fcmovbe
mov
sbb
jecxz
das
cwtl
mov
js
dec
pop
jb
js
call
imul
in
push
in
icebp
imul
outsb
into
pop
mov
and
inc
adc
arpl
pop
or
imul
movsb
out
pop
testl
xchg
nop
sub
fdivs
ficomps
push
cmp
lcall
movsl
cmp
sub
lods
add
xchg
cli
shl
pop
add
gs
mov
pop
mov
test
mov
pusha
sub
shr
out
push
addl
add
and
mov
and
mov
lods
in
mov
adc
sub
jo
pop
scas
push
jp
leave
jge
movsb
jmp
dec
xchg
je
or
mov
mov
test
mov
add
add
mov
ja
pop
mov
inc
pop
rorb
fsubs
mov
hlt
cmpsb
sbb
je
cmc
inc
xlat
and
cmp
test
out
or
pop
jbe
std
loop
outsb
pop
in
push
pop
hlt
xor
dec
adc
ss
jle
and
cmc
or
insb
push
xchg
jmp
sahf
stos
aam
out
dec
gs
and
xchg
nop
jle
jp
dec
mov
xor
xor
stc
cmpb
les
jecxz
xor
dec
lahf
jns
push
lods
stc
imul
movsb
arpl
lods
sub
repnz
sub
incl
add
add
xchg
xchg
rcr
out
inc
and
mov
xchg
es
repnz
and
aaa
inc
sbb
sub
sarb
cmp
je
fisubl
sbb
pop
dec
scas
icebp
mov
loop
sbb
push
loop
dec
jmp
cmp
testb
push
mov
and
clc
ret
xor
xor
movb
ret
repz
mov
mov
sub
inc
in
adcb
ds
imul
jae
push
movsl
jle
dec
test
adc
xchg
and
popa
shl
dec
les
in
dec
sub
cli
or
pop
stos
lods
or
andl
xlat
js
and
sub
mov
sar
js
sahf
jo
stc
int
sub
mov
pop
and
loope
mov
pop
pop
ret
test
jbe
pop
push
je
shll
jns
in
and
mov
out
xor
and
mov
iret
stc
sub
push
xor
ret
or
ja
jecxz
inc
movsl
fisttpll
shrb
test
pop
repz
push
in
dec
cmc
inc
repnz
inc
lcall
dec
xchg
dec
inc
movsl
cmp
in
in
jns
push
dec
les
popf
inc
scas
lret
adc
je
xchg
lods
push
test
or
dec
fdivl
repz
cwtl
imul
sbb
cwtl
jnp
mov
lods
adc
cmp
jo
sub
sub
cvtpd2ps
add
adc
pop
xor
dec
imul
stos
sahf
sbbl
and
dec
outsb
sahf
mov
fmulp
shlb
add
xchg
sub
sub
out
sub
fsubp
xor
shlb
xchg
sub
push
dec
repz
pop
cmpsl
test
xor
adc
cli
cmc
enter
addr16
push
cmp
mov
push
pushf
sub
daa
loopne
testl
pusha
stos
sahf
mov
jl
mov
and
add
mov
lret
mov
clc
sub
mov
pop
dec
insb
push
sarb
mov
arpl
sbb
sub
enter
inc
call
push
mov
dec
xchg
sub
stos
in
scas
mov
rcrl
inc
push
mov
pop
stc
fwait
mov
fdivrs
outsl
jnp
stos
cmp
outsb
ret
std
addl
jl
test
pop
pop
mov
mov
dec
mov
icebp
jmp
imul
mov
repz
jmp
jns
pop
pop
and
jge
bound
popf
mov
fwait
into
jns
jns
mov
xor
scas
stos
lcall
push
add
adc
and
xlat
cmp
outsb
cmp
pop
cs
fstpt
mov
mov
arpl
shlb
jecxz
cltd
ss
mov
mov
mov
sub
xchg
imul
jbe
sub
inc
cltd
lock
lock
das
ds
jb
aas
dec
hlt
pop
jae
push
das
testl
shl
shl
popa
push
or
out
daa
jo
mov
jle
adc
cli
xchg
in
xor
sub
xchg
outsl
push
sub
sub
inc
gs
stos
mov
mov
mov
mov
sbb
mov
testl
lds
lahf
enter
out
mov
mov
dec
aam
or
jl
adc
std
das
imul
jmp
dec
pop
movsl
jge
fistps
or
jg
mov
mov
insl
cmpsl
in
cwtl
sub
scas
shlb
jl
lea
push
mov
fistps
call
clc
jns
cwtl
sbb
pop
jns
jmp
adc
push
aaa
or
jg
inc
repnz
push
ret
fimuls
pop
push
pop
pop
aam
sub
ret
clc
mov
and
cmp
cmp
jg
ret
push
sahf
push
mov
test
jp
xchg
fdivrs
and
mov
mov
sbb
fdiv
mov
mov
scas
movsb
mov
lahf
lea
cmp
shll
jae
js
mov
mov
cld
jl
das
fcoml
mov
sti
ja
mov
sub
cmc
test
or
jnp
jp
int
inc
inc
sarb
cmp
or
clc
push
lds
clc
dec
icebp
stc
xchg
mov
xor
ss
jge
fcomp
mov
sub
xchg
aas
test
cmp
add
sti
les
leave
cmp
pop
icebp
or
xor
sahf
jbe
push
or
jmp
cwtl
lahf
testl
push
pop
xchg
or
decb
cld
in
cmpsl
loop
pop
in
leave
repz
jmp
out
jb
rcll
cmp
dec
mov
inc
push
adc
jne
dec
cmp
jns
sbb
mov
jecxz
sbb
and
xlat
stc
shlb
aam
fcmovnbe
xchg
les
fs
push
adc
inc
push
mov
cmpsl
xor
sbb
std
add
stos
jbe
cmp
add
push
jo
xor
in
mov
out
dec
imull
jb
test
loop
shl
xchg
scas
ja
jns
jmp
repz
ds
lds
xchg
lret
xor
mov
push
mov
das
mov
imul
and
punpckhdq
jl
es
and
or
lock
loop
dec
mov
sbb
sbb
pop
mov
es
mov
and
xchg
xchg
push
insb
popa
mov
shlb
or
in
iret
push
daa
fs
jg
inc
and
mov
push
imul
push
push
and
repz
xorl
lods
shrl
cmp
mov
movsl
dec
mov
and
adc
inc
pop
fistps
cmp
inc
pop
sub
out
js
imul
adc
mov
mov
out
ja
shrl
in
int
rclb
pop
jnp
xchg
mov
jp
stos
dec
mov
int3
fdivl
xchg
std
push
push
sahf
lea
jne
inc
push
nop
sbb
ret
test
rolb
jbe
fdivl
mov
sub
pop
adcb
jmp
mov
js
rcrl
jmp
adc
sub
lret
push
lahf
cmp
or
shlb
push
jge
cmp
movsl
shlb
int3
mov
mov
mov
dec
or
imul
into
insb
adc
out
aad
ret
mov
in
ret
xlat
xchg
fldt
xor
and
test
pop
xchg
cli
mov
dec
std
jmp
mov
mov
shr
sar
or
fdivl
addr16
in
mov
adc
rcr
scas
or
jmp
sbb
enter
mov
cltd
lea
jae
addr16
sub
and
lahf
push
pop
rclb
push
sbb
aad
xchg
and
mov
mov
mov
and
shlb
insb
sub
pop
mov
cmp
mov
xor
popa
fidivrs
push
pop
fs
out
xchg
xor
dec
sbb
adc
cmp
and
lahf
icebp
push
arpl
lcall
cmp
jle
popa
cmp
inc
ret
mov
rorl
iret
sbb
lahf
push
movsb
test
cltd
dec
mov
mov
idivb
mov
adc
repz
push
sub
inc
leave
mov
imull
push
nop
fadds
add
jg
xlat
and
in
add
mov
imul
cmp
xor
jge
mov
fwait
push
cwtl
xor
mov
filds
sbb
sub
stos
pop
sarl
mov
jl
ds
jp
push
fstl
out
and
stos
mov
sarl
mov
or
xor
jbe
xor
stc
jg
mov
jb
jmp
bound
mov
pop
cmp
jae
fstps
rol
push
sahf
or
and
dec
xor
in
push
and
xchg
push
jmp
sahf
pop
cli
xchg
loopne
outsb
aad
lahf
xor
inc
cmc
mov
cmp
mov
push
out
xchg
cmp
mov
inc
sbb
js
sahf
cs
add
popf
inc
hlt
test
sub
dec
pop
data16
jge
mov
cmp
jne
mov
out
cs
cltd
mov
sub
pop
jno
pop
sbb
mov
in
mov
push
shlb
cld
push
nop
test
in
int3
out
call
shll
data16
lea
fadd
insb
out
movsl
inc
stos
xchg
mov
rorl
nop
adc
pop
xchg
aam
hlt
cmpsl
movsl
inc
push
mov
fwait
fs
inc
nop
sbb
adc
xor
rorl
sbb
cmp
mov
push
cmp
pop
movsl
mov
and
or
mov
xchg
fucomp
add
dec
lods
sbb
arpl
leave
sahf
adc
out
or
dec
clc
rorl
pop
ja
sub
in
mov
adc
hlt
fs
aam
inc
sbb
mov
mov
jmp
addb
lahf
adc
push
push
fcmovb
pop
test
inc
push
sarb
movsb
xchg
add
neg
xlat
pusha
fistl
fisttpll
data16
mov
jl
in
lds
dec
insb
push
push
mov
lods
push
inc
es
test
inc
rclb
mov
mov
subb
nop
sahf
mov
xor
popa
clc
lea
mov
addr16
idivl
sub
sahf
pop
and
aaa
enter
xor
push
popa
dec
lds
mov
loope
jmp
lock
mov
andl
loopne
fcoml
pop
scas
cmp
xor
lods
jb
add
or
inc
das
call
bound
or
adc
ret
adc
cmp
lock
mov
stos
shll
dec
mov
je
call
jge
ja
ljmp
ljmp
push
out
daa
movsb
mov
ds
fwait
mov
lods
mov
repz
in
dec
fsts
mov
sbb
aad
je
pop
sub
xchg
mov
cmp
mov
cmp
ficoml
add
iret
scas
adc
outsl
adc
pop
test
stos
sub
mov
mov
std
push
inc
jae
jl
cmpsl
aas
mov
pop
insl
mov
dec
sahf
fscale
fildl
xchg
push
xlat
cmp
xchg
mov
pop
loopne
or
nop
shll
pusha
xchg
mov
cltd
daa
mov
adc
add
rep
dec
jecxz
in
mov
insl
sahf
rcrb
mov
jp
pusha
fsubr
cmp
negb
adc
rorb
inc
dec
negb
jnp
add
xlat
or
xlat
mov
sbb
pop
xor
shll
or
punpcklbw
xor
inc
lea
inc
xlat
pop
pop
mov
je
arpl
mov
leave
scas
outsl
jge
cmpsl
stos
scas
add
cltd
adc
xchg
dec
daa
dec
xchg
lahf
scas
xchg
push
imul
sahf
subb
and
and
mov
and
pop
xchg
mov
scas
push
ficompl
lea
outsb
add
sbb
pop
scas
xor
pop
and
add
ds
sbbl
push
sub
cli
into
jbe
out
adc
push
scas
jae
pop
mov
mov
jne
mov
repz
dec
dec
in
and
push
stos
popl
sbb
sub
cmpsl
shll
mov
bound
jae
mov
dec
lahf
lods
rcr
cmp
je
push
xchg
out
cmp
out
push
push
dec
cmp
lods
cwtl
jge
inc
fisttps
xchg
cmp
inc
adc
pop
push
mov
aam
mov
cltd
sti
pushf
mov
mov
iret
sub
cmp
in
mov
and
jns
paddq
cli
aaa
ljmp
enter
add
pop
sub
cmp
lahf
add
mov
shl
dec
arpl
fwait
pushf
pop
cs
mov
inc
jno
sub
int3
shrb
add
mov
mov
cmp
addr16
push
or
dec
add
nop
and
shl
push
cmp
pop
dec
cmp
repz
sub
inc
or
shr
mov
mov
mov
or
pop
cmp
stos
stos
cld
cwtl
stc
aas
sbb
pop
das
add
jo
sbb
xor
pushf
adc
rcrl
ret
adc
inc
stos
fsubs
std
in
out
add
rcll
jb
jb
out
test
push
int
nop
mov
jl
mov
and
cltd
lcall
mov
fcmove
cmp
xchg
mov
in
into
out
pop
add
xor
clc
dec
push
cli
pop
mov
imul
lret
xlat
inc
fsub
mov
jle
pop
stc
sub
ja
in
rorb
jae
add
dec
and
pop
adc
mov
mov
xchg
mov
or
enter
cmp
and
mov
pop
mov
jne
insl
and
stos
ljmp
sbb
clc
movsl
cmp
pusha
pop
and
stos
dec
mov
dec
cmp
push
add
sub
adc
lret
filds
into
jg
and
dec
sub
fisttpl
iret
xchg
sbb
or
into
orl
or
pop
enter
jnp
rcrb
insb
or
in
ja
pop
je
in
jnp
lcall
daa
push
sub
dec
leave
repz
pop
adc
fimuls
sarl
stc
and
ret
movups
push
icebp
leave
shlb
in
pop
xor
or
cli
mov
and
mov
dec
loope
mov
fildll
and
add
lret
shlb
aaa
sub
sahf
test
mov
add
cs
adc
aas
and
pop
xor
cmpsl
in
jle
movsb
arpl
mov
xchg
popl
test
jl
aad
nop
jmp
sti
cmp
outsb
ja
and
fmull
push
mov
daa
in
xor
mov
in
mov
jnp
mov
pop
inc
xor
xchg
dec
jnp
push
into
jmp
aas
mov
xlat
repz
mov
mov
mov
mov
pop
shrl
sarb
sbb
push
push
mov
xor
sbb
shrb
pop
adc
sub
imul
xor
jg
pop
jecxz
push
aas
xlat
or
shrb
dec
outsb
inc
sub
mov
dec
push
fsubs
push
or
js
ret
pushf
mov
loop
les
pop
pusha
cmc
mov
notb
add
xor
jne
mov
xor
inc
inc
popf
loope
loope
xchg
cmp
movsb
dec
pop
fisttps
lret
xchg
xor
or
mov
subb
pop
mov
mov
lock
xchg
pushf
sub
jge
xor
sub
xchg
pop
jnp
hlt
push
dec
jmp
ret
pop
adc
inc
orl
sub
mov
and
loope
sahf
push
js
lret
cli
fadds
or
push
xchg
sbb
or
in
xor
dec
fimull
inc
imul
mov
popw
addr16
pop
int
movsl
jns
iret
je
loope
push
pop
mov
sub
push
roll
push
popa
push
lcall
dec
add
jbe
leave
out
pop
cwtl
out
mov
fadd
pushf
mov
push
dec
dec
cli
gs
and
push
jne
push
or
out
xchg
mov
mov
aad
sbb
sbb
out
ss
lock
test
insl
cmpsb
shll
pop
sbb
in
ljmp
inc
adc
and
shrb
popf
dec
sub
and
xchg
jl
sub
rcrl
clc
jmp
ja
hlt
pop
or
leave
and
push
lret
cmp
les
outsb
xorb
push
dec
out
les
shll
addr16
leave
sbb
inc
hlt
jbe
inc
fistl
add
mov
lahf
cli
popl
jne
lret
dec
xor
mov
push
ja
arpl
inc
out
leave
push
mov
dec
in
rorl
push
sbb
mov
loopne
xchg
push
aas
lahf
adc
inc
mov
add
cmc
out
cmpsb
ja
cmp
inc
sbb
outsl
hlt
xor
aam
js
mov
sbb
aad
jecxz
pop
jle
fsubp
ja
add
std
repz
push
inc
or
push
jmp
pop
cmp
cmp
push
jb
ret
mov
dec
in
cmp
sub
dec
fnstenv
dec
fmuls
sub
push
ljmp
pop
notl
fmull
fiadds
int3
pop
cmp
loopne
pop
mov
aas
or
fxch
sub
insl
push
icebp
out
cmp
lods
fsubrs
popa
cmp
stc
push
rcr
mov
mov
enter
js
pushf
mov
mov
cmp
lds
and
xor
insb
sbb
sahf
xchg
ds
xor
and
mov
and
jle
mov
or
pop
add
les
mov
or
push
pop
jns
pop
add
daa
sub
xadd
jmp
cmp
es
jae
inc
sub
jbe
lea
sbb
cmc
mov
xor
or
hlt
loopne
jo
adcb
call
mov
icebp
movsl
sub
vshufps
mov
xor
loope
adc
pusha
outsb
ljmp
adc
test
pop
stos
ja
xor
mov
mov
idivb
data16
in
lods
ljmp
fcoms
sbbb
adc
inc
push
and
push
data16
not
mov
add
popa
imul
mov
pop
aaa
push
mov
ret
pushf
movsl
mov
mov
xchg
andl
pop
jecxz
lahf
or
inc
add
xchg
jg
jg
mov
lcall
rcll
mov
dec
out
and
outsl
inc
lods
xor
cltd
daa
popa
adc
popa
cmp
add
xchg
add
mov
push
push
cs
lahf
in
mov
ret
dec
ja
negb
or
mov
mov
decl
fldenv
mov
and
repnz
popf
fmull
mov
xor
icebp
shrl
pop
pop
xchg
outsl
or
sub
out
shrb
fnop
cmpsl
iret
sbb
xchg
or
mov
ja
or
aas
xor
outsl
add
add
insb
cmpsl
out
sub
stos
sahf
pop
mov
mov
imulb
cltd
sub
das
aad
out
or
cmp
enter
out
mov
inc
bound
push
pop
rcrb
mov
adc
push
ja
inc
frstor
loopne
dec
dec
and
dec
gs
push
cmpsl
dec
dec
arpl
mov
sbb
shlb
hlt
shll
mov
imul
cld
pop
enter
fsubs
sub
mov
iret
mov
xor
out
es
mov
cmp
pusha
imull
sub
sarb
dec
repz
icebp
cld
sub
test
add
sti
mov
push
mov
jle
sbb
and
jmp
pop
jg
lods
jb
arpl
sub
cmc
xchg
popf
inc
push
scas
dec
in
je
rclb
vmwrite
sbb
pop
cmc
add
cmc
pop
mov
mov
mov
mov
imul
jl
push
and
mov
jnp
mov
dec
mov
jge
cmp
fdivp
mov
imul
cmp
inc
fimuls
pusha
sub
movsb
popf
inc
jns
mov
mov
jmp
or
xor
ret
xchg
jo
inc
push
jp
or
fdivrl
mov
stc
insb
xchg
je
xchg
out
adc
jp
jp
xchg
cmp
lcall
loop
push
fcomi
dec
or
add
cmp
cmp
ds
xlat
inc
aas
mov
and
dec
mov
mov
mov
sub
mov
mov
xchg
jae
test
mov
fs
adc
mov
add
arpl
test
sub
cmp
xor
decl
pusha
in
lods
mov
out
push
add
adcb
insb
test
pushf
rorb
fcomip
and
adc
loope
movsl
cli
outsl
or
push
push
jge
in
nop
sub
fwait
mov
test
mov
gs
push
sbb
adc
push
out
pusha
mov
cmp
cmp
in
sbb
push
jmp
cmp
adc
sarl
rolb
scas
enter
sub
add
jg
sbb
mov
mov
dec
jmp
pop
cmp
sbb
lret
xor
cs
cmp
xorl
pop
pusha
loope
ljmp
fbld
and
fisubrl
std
lods
fdivr
or
pusha
lcall
cld
loope
jns
xchg
jg
repnz
mov
lods
adc
xchg
ljmp
mov
xor
mov
imulb
mov
call
xchg
movsb
das
movsb
pop
jl
inc
mov
sbb
fwait
cmp
nop
das
adc
out
sbb
shlb
mov
dec
mov
insb
mov
rclb
mov
pop
or
pop
cmp
fdivs
pushf
in
fstp
cltd
mov
clc
jnp
bound
or
jl
jae
das
xchg
hlt
outsb
add
push
and
jmp
fsubrs
cmp
sbb
pop
xor
pushf
sub
call
repnz
jnp
adc
imul
push
movsl
stos
inc
mull
push
loopne
xor
lods
xorb
cltd
pop
push
lea
dec
mov
loope
mov
sarb
mov
clc
pop
mov
cwtl
mov
push
stc
xchg
lcall
mull
mov
adc
jns
mov
add
mov
mov
sub
inc
aam
in
add
dec
in
dec
arpl
xor
fidivrs
sub
pop
jae
adc
int3
inc
mov
cwtl
loope
mov
inc
inc
outsb
ret
dec
mov
loope
dec
xchg
les
rcll
dec
sbb
movsb
push
sbb
call
sub
test
out
loop
cmpsb
mov
adc
xchg
out
loop
xchg
gs
push
cltd
fistpl
mov
mov
ljmp
lcall
and
push
das
pop
push
stos
pushw
in
sub
mov
dec
jnp
and
and
cld
or
xor
pop
popl
pop
loope
scas
pop
ljmp
aas
fcmovnbe
fwait
lcall
and
filds
pop
imul
or
jl
out
cltd
or
pop
inc
into
mov
es
fwait
cmc
push
xor
push
mov
in
rdtsc
or
xchg
sub
stos
mov
sahf
test
mov
mov
andl
and
fwait
and
lea
pop
push
dec
dec
cmpl
enter
cmpsl
add
push
push
dec
loope
shrb
sub
push
test
push
ficompl
dec
out
and
xchg
es
add
xor
addl
bound
imul
pop
mov
jle
push
add
in
jecxz
push
xchg
adc
xor
mov
mov
fwait
sub
sub
xchg
cmp
flds
xchg
dec
inc
cmc
dec
or
mov
test
pop
in
push
test
sub
insl
ret
test
fs
xor
mov
jnp
cmp
mov
fs
inc
cmpsl
adc
or
push
mov
test
mov
xchg
xlat
add
sbbl
iret
push
int
xchg
ss
in
adc
mov
js
iret
outsl
cmp
xchg
push
loop
gs
mov
cmp
fs
rol
lret
mov
pop
fstpt
pop
enter
mov
and
data16
inc
enter
or
mov
mov
in
adc
mov
add
sub
dec
adc
in
ds
pop
xchg
flds
mov
mov
test
sub
mov
or
and
cld
test
roll
je
jle
cli
lret
sbb
inc
push
xor
cmpsl
inc
popf
jge
insb
bound
push
rorl
and
cld
imul
dec
cmp
push
jp
cmc
mov
adc
insl
push
jmp
ficoms
sub
mov
nop
out
mov
xchg
and
lea
inc
xlat
add
call
insb
repnz
xchg
iret
push
mov
cmp
dec
notl
xchg
movsb
stos
and
incl
cmp
adc
cs
mov
movb
dec
loop
sbb
xor
sahf
fistpl
push
mov
jle
cmp
ja
dec
imul
or
push
lods
xchg
mov
sub
mov
push
out
rolb
clc
sub
sti
ja
mov
iret
add
cmp
cs
rcrl
pushf
xchg
xchg
adc
add
rcr
out
daa
adc
cltd
inc
les
sbb
cmpsl
jp
fcomp
lret
sarl
add
cmpsl
aas
dec
ss
fwait
pop
dec
push
adc
daa
pop
flds
push
stc
outsl
bound
xchg
repz
jge
ja
cltd
dec
mov
inc
and
mov
add
sub
movl
pusha
ja
daa
cmp
loope
sub
push
push
mov
subb
mov
divb
loopne,pn
cmp
or
lcall
mov
outsb
ljmp
and
lods
xchg
sbb
jno
xchg
xor
xor
pop
data16
les
adc
dec
das
enter
adc
sbb
scas
pop
sarl
cmpb
aas
xor
mov
inc
cmp
sub
sbb
and
or
adc
jg
sub
and
pop
enter
popa
mov
xchg
clc
mov
pusha
mov
and
xor
mov
shl
lret
pop
dec
into
inc
jecxz
or
or
mov
pop
lret
ret
lea
ss
hlt
gs
mov
out
push
sbb
sub
xor
dec
and
xor
jbe
loopne
jle
pushf
mov
jle
xchg
fwait
xor
push
mov
or
pop
pop
push
inc
int
push
xor
in
sub
cmp
push
ss
aam
outsl
sbb
out
ret
push
lcall
or
inc
sub
js
jge
sub
addr16
ret
cmp
xor
mulb
mov
test
jo
sub
mov
adc
nop
inc
xchg
out
pop
in
push
mov
aam
int3
pop
fimull
pop
outsl
cmpl
rol
bound
push
stos
inc
mov
dec
fs
add
sti
and
lret
inc
data16
aam
ljmp
mov
jb
push
stos
jge
pop
adc
pop
push
int
inc
sbb
hlt
inc
mov
mov
fwait
sub
insl
or
int3
push
inc
lret
cmp
xchg
adc
into
enter
ja
ljmp
mov
je
jo
dec
mov
fcmove
clc
cmp
sub
cltd
ret
aaa
scas
mov
jmp
xor
push
repnz
cwtl
mov
rcrl
cmp
jne
push
pop
outsb
xchg
fcoml
scas
xor
call
mov
pop
ja
lret
test
lods
insl
adc
sahf
push
mov
xor
aaa
dec
fs
mov
sub
sub
movsb
xorb
dec
into
ljmp
mov
mov
push
rcrb
sbb
push
test
enter
daa
testb
and
in
fisubrl
jb
mov
mov
jbe
jg
push
imull
cmp
aaa
cmp
add
add
pop
dec
push
lods
js
addr16
dec
mov
scas
pop
lea
inc
pop
pop
and
test
adc
sbb
les
xchg
and
outsb
mov
or
dec
jb
in
and
pop
cwtl
pop
aam
mov
lcall
pop
mov
cmpl
pop
push
adcb
adc
mov
std
lcall
push
xor
sarl
lods
dec
aam
sub
lcall
mov
cltd
jo
enter
mov
insb
das
mov
mov
xlat
push
sbb
jb
push
cmp
in
dec
mov
in
dec
pop
mov
repnz
push
mov
mov
sbb
xor
mov
adc
mov
out
push
or
or
movsl
sub
imul
in
and
xor
mov
cmp
xchg
dec
xor
push
int
sbb
push
mov
movsl
jl
dec
pop
pop
jg
fisubrl
outsb
cs
xor
pop
dec
adc
lahf
loope
ss
push
arpl
lods
sbb
dec
pop
xorl
xchg
xchg
jecxz
mov
sarb
pop
shlb
or
ss
cmc
loopne
fnstcw
mov
mov
cmp
xchg
mov
sbb
insl
inc
iret
aas
adc
loop
pop
or
mov
into
push
jmp
or
stos
push
lcall
push
pop
dec
and
mov
mov
xor
test
mov
out
adc
push
clc
jp
mov
mov
pop
movsl
or
sub
je
je
jecxz
or
cli
shl
neg
add
shll
mov
or
scas
pusha
fmulp
jb
aaa
and
sbb
push
pop
ss
jecxz
pop
dec
mul
xchg
int3
ja
dec
inc
push
popa
iret
das
xorl
aaa
jp
cmc
dec
pop
aam
adc
jno
mov
jmp
fistpll
mov
xor
or
mov
fistpll
jne
dec
lahf
xor
adc
mov
or
inc
lods
pop
inc
ret
dec
xchg
cmp
jg
inc
mov
test
in
mov
sbbb
adc
in
or
adc
lds
fistpl
lcall
push
lock
ljmp
test
xchg
sub
adc
mov
jmp
xor
insb
adcl
rcr
lea
gs
imul
push
add
cli
dec
movsb
ret
testl
popa
subl
pop
jmp
inc
in
jl
mov
push
out
imul
mov
push
fcoml
popa
sbb
jge
repz
aam
leave
mov
sub
xchg
lcall
inc
add
push
lcall
mov
and
daa
inc
xorl
lret
dec
pop
inc
mov
scas
push
imulb
cmp
push
push
jg
sub
xchg
addr16
push
inc
xlat
cmc
jns
push
mov
aaa
sub
xchg
mov
loopne
jo
add
cltd
inc
jge
jle
add
leave
in
sbb
addr16
imul
xor
arpl
das
or
or
jge
sub
and
push
xchg
movsb
ret
icebp
xor
ss
dec
xchg
jb
rorb
divb
je
movb
push
add
pop
mov
mov
into
aam
mov
ret
minps
mov
lret
jb
pshufw
sti
or
stos
rcll
fimull
dec
mov
jne
pop
shlb
mov
mov
xchg
ljmp
je
pop
pop
push
jae
xor
cmc
dec
sarl
cmp
std
add
rcll
iret
push
add
push
in
sbb
xor
inc
jg
in
mov
into
int3
test
xchg
and
mov
or
into
push
dec
jno
out
dec
jae
add
and
adc
adc
nop
nop
sub
inc
movsb
popf
scas
pop
mov
scas
jns
or
add
pop
repz
std
std
stos
push
sbb
jnp
mov
je
fld
outsb
stc
roll
xchg
lret
ret
clc
add
ljmp
cmp
add
pusha
into
cmp
sbb
leave
xlat
pop
cli
enter
jns
xchg
jae
imulb
cmpsb
push
int
mov
xor
hlt
push
sbb
dec
xor
lret
sti
movb
xlat
fistps
addr16
add
ret
daa
cmp
sbb
jb
dec
in
push
dec
add
sub
rorl
jle
or
ja
repnz
push
and
enter
mov
std
jle
lret
dec
cmpsl
out
add
push
mov
rcrb
repz
or
mov
fidivrs
pop
mov
add
call
loope
cmp
shr
or
out
xor
adc
call
stos
insb
inc
adc
sahf
ret
jge
adc
xor
js
imul
mov
cli
movsb
cmp
cmpsl
pushf
sub
push
mov
and
cmp
push
gs
xchg
jp
sub
push
stos
out
dec
and
enter
je
dec
lock
push
mov
in
xacquire
push
jnp
and
adc
imul
mov
cwtl
mov
ret
xor
decl
mov
cmp
pusha
push
pop
push
mov
cmp
cmc
subl
mov
loope
mov
mov
sarb
sub
lcall
cwtl
sbb
shlb
stos
push
pusha
out
int3
in
lcall
mov
mov
and
aad
inc
iret
movsb
lcall
les
xchg
sbb
rcl
popf
push
fistpll
xchg
ljmp
dec
dec
test
lea
mov
xchg
push
cli
je
and
jae
and
sub
xchg
stos
inc
mov
and
push
adc
xor
inc
or
mov
loopne
adc
push
mov
sub
popa
push
clc
addr16
jns
popa
jmp
mov
aad
pop
dec
inc
dec
and
sbb
push
movsl
mov
jl
push
popa
dec
sbb
add
imul
loop
cmpsb
jmp
ljmp
imul
mov
xchg
aaa
mov
mov
sub
sbb
aam
lods
out
insb
bound
and
fcmovnu
int
popf
mov
sbb
xor
loope
xor
mov
push
mov
inc
mulb
lods
mov
dec
jg
stc
mov
jmp
movsb
xchg
and
adc
repnz
and
push
sub
sub
lock
mov
insb
add
sub
std
sbb
jns
loop
fstpt
sub
or
fnstcw
pop
bound
jb
mov
xchg
xchg
or
outsb
lds
sub
push
sub
into
or
dec
xchg
jge
prefetch
in
or
or
mov
inc
dec
cld
jnp
mov
mov
inc
sar
inc
pop
test
in
into
pop
sbb
call
out
inc
dec
stos
ja
sub
mov
neg
pop
pop
mov
fimull
inc
leave
sti
xchg
mov
mov
nop
lds
es
jnp
dec
dec
mov
jmp
inc
sub
jb
scas
mull
mov
inc
mov
clc
pop
inc
cmp
jae
movsl
mov
ret
sbb
jmp
test
imul
adc
adc
sbb
loope
and
fstpl
adc
scas
fadds
jae
pop
inc
lea
sete
data16
dec
xchg
inc
jp
mov
ja
sbb
ud1
push
push
xchg
mov
out
dec
cld
jmp
hlt
aaa
add
xchg
pop
test
pop
push
and
jg
mov
bts
sbb
sbb
fisubl
xor
loopne
adc
test
les
xor
jb
dec
scas
aam
scas
shrl
addr16
imul
mov
jno
cltd
xchg
sahf
mov
orb
out
cmc
pop
or
movsl
jae
xlat
lret
cs
inc
lahf
xor
mov
aad
pop
nop
movsb
je
jb
xor
push
movsb
loopne
mov
adc
push
sbb
xlat
pusha
mov
ret
ret
test
andb
mov
xchg
jmp
insb
dec
aaa
mov
shr
insl
cmc
ds
into
jb
arpl
aad
popa
push
dec
dec
ret
pop
movl
in
add
pushf
out
outsb
mov
clc
fadds
mov
push
mov
ljmp
adc
insb
xor
jl
dec
adcl
es
jne
aam
add
jge
pop
sbbb
dec
mov
mov
or
adc
push
and
lods
xchg
pushf
cmp
lret
xorb
or
pushl
inc
mov
das
cwtl
out
cmp
test
mov
cmp
adc
adc
addb
xchg
cmp
xor
xor
sub
in
ljmp
clc
lret
shll
shlb
push
jo
repnz
test
daa
ds
mov
jp
adc
sub
mov
lds
mov
cmp
inc
pop
xor
inc
mov
aad
fcoms
popa
jo
outsl
jle
sti
jb
xchg
or
mov
inc
test
inc
push
jno
jmp
and
and
fiadds
pop
out
mov
push
cmpsb
mov
mov
or
push
or
ja
mov
push
jno
jp
jg
jb
dec
fdivp
push
dec
xchg
mov
and
sub
ds
scas
hlt
stos
test
or
les
jmp
sub
pop
inc
jg
push
dec
pop
stc
bound
andb
mov
or
pop
int
cmp
jnp
mov
faddl
xchg
mov
jno
shlb
lock
imulb
cwtl
dec
cmpsb
icebp
ja
push
fistpl
dec
dec
es
dec
outsl
xchg
cmpsl
jge
or
xlat
push
outsb
or
dec
lods
test
xchg
pop
or
or
pop
scas
shll
repz
or
mov
popa
xchg
inc
lcall
dec
dec
out
addr16
addr16
jbe
jge
pop
mov
ss
and
int3
jae
jo
faddl
subl
sbb
cmpl
out
cmp
test
mov
fadds
mov
fisubl
inc
ljmp
mov
mov
in
pop
rorl
xor
xor
roll
xor
nop
push
xchg
out
fsubrp
cmp
rcr
or
lea
movsl
lods
push
jbe
fsubs
cmpsb
pop
lahf
mov
inc
ljmp
movsb
mov
and
nop
btr
push
enter
rorb
pop
out
add
pop
or
add
in
cli
lret
adc
out
movsl
enter
mov
shl
dec
xor
pop
loopne
loope
pusha
inc
hlt
cmp
jno
push
imul
jmp
push
enter
push
cs
sub
lea
jmp
sti
pushf
jmp
notb
jns
lods
mov
subl
pop
imul
jno
outsb
sbb
sti
jp
in
shrl
imul
push
sbb
ja
mov
int3
push
les
sbb
testl
pop
and
cld
pop
inc
ficoml
mov
add
jg
imul
imul
inc
cmpsl
sbb
xchg
daa
xlat
into
mov
insb
sarl
mov
push
add
push
jae
loope
jp
imul
xchg
cmp
ss
testb
jne
cltd
pop
pop
jg
out
jo
xor
shrb
pop
fbld
push
dec
rcll
or
add
adc
mov
add
loope
stos
rcrb
movsb
pop
xchg
cwtl
cmp
xchg
popf
mov
shlb
push
dec
jecxz
mov
imul
das
sub
int
aad
ss
cmpsb
ret
jmp
and
aad
out
mov
inc
ljmp
lret
addr16
jns
in
ss
inc
lret
dec
push
jmp
popf
mov
fwait
xchg
add
test
mov
cmpsb
xor
sti
aas
arpl
and
pop
aam
xchg
imul
pop
pop
push
pop
subl
push
rclb
imul
push
cli
adc
or
cwtl
or
push
inc
call
arpl
lret
call
or
in
cmc
pop
or
jnp
push
dec
inc
adc
es
xor
rcrb
das
cmp
cmp
or
mov
xor
fstps
lods
loopne
roll
cli
rolb
mov
sub
xor
sub
push
or
das
cmp
addb
inc
repz
sub
mov
mov
icebp
insl
out
sahf
jl
pop
sbb
inc
xchg
sub
jns
push
adc
arpl
cwtl
call
pop
sbb
dec
jne
ljmp
fwait
dec
add
rorl
push
pop
mov
js
outsb
test
or
adc
stos
adc
fwait
cmc
dec
jl
and
inc
sahf
xchg
cmp
shll
add
fnsave
add
and
inc
mov
push
mov
xchg
lock
mov
dec
rcrl
mov
mov
scas
sahf
hlt
xchg
jae
icebp
push
jle
mov
and
sahf
jnp
sbb
jmp
or
imul
sub
hlt
xchg
hlt
xchg
mov
and
shr
sub
jne
xlat
jecxz
popa
in
dec
adc
nop
movsb
sbb
inc
out
mov
movsb
call
addr16
rcrl
test
sub
fdivl
sub
add
dec
cmp
xchg
mov
mov
xchg
loope
fisttpl
or
pop
and
sub
sbb
push
es
push
sub
add
fs
outsl
popa
jne
lret
and
push
loop
or
and
leave
mov
cmp
or
shl
and
jbe
push
movsl
test
pop
or
mov
in
push
xchg
sub
ja
cmpsl
imul
imulb
leave
bound
mov
sub
sub
xor
roll
rcr
mov
clc
scas
sbb
jge
mov
xchg
ja
lds
fnstcw
pop
enter
xor
add
faddl
jmp
loopne
repz
js
push
mov
popf
cmpsl
jmp
clc
mov
fldt
push
in
pop
rolb
mov
ljmp
mov
inc
adc
push
outsb
loopne
lea
mov
mov
or
jmp
mov
test
fsubrs
xchg
dec
xchg
icebp
out
jns
xor
sbb
ror
fcompl
add
xor
pushf
sbb
xchg
lret
cmc
lcall
je
scas
xchg
test
jnp
movsl
mov
movsb
jb
mov
cwtl
cmpsb
sub
adc
outsl
push
ljmpw
fs
mov
inc
popf
sbb
shrl
or
ja
mov
test
orl
out
adc
jecxz
pop
imul
push
in
inc
hlt
mov
or
js
cwtl
pop
and
jns
int3
mov
sbb
rcrl
add
cwtl
pop
out
xchg
je
pop
out
pop
fstps
pop
gs
pop
shll
fidivs
xor
xlat
flds
mov
cmc
lahf
push
jle
test
push
aas
push
jb
insl
mov
jmp
pop
les
jl
push
movsl
mov
test
mov
filds
pop
push
inc
push
and
xchg
inc
sbb
fdivrs
out
pop
gs
pushf
gs
cwtl
out
xchg
mov
jge
test
lret
cmp
fcmovu
iret
sub
dec
call
shl
stc
push
jg
mov
mov
shll
and
shr
xor
hlt
sub
rcr
mov
in
mov
call
enter
cmp
pushf
lahf
mov
jno
cmc
jae
mov
inc
mov
fmull
pop
int3
mov
lahf
mov
insl
dec
mov
std
inc
mov
push
add
stos
jge
jle
test
nop
push
fmuls
mov
ret
mov
xchg
das
and
push
lahf
cmp
and
les
jno
add
shlb
mov
fistl
fwait
sbb
mov
xchg
pop
jno
adc
sub
xor
jnp
insb
shlb
add
cmp
movsb
je
mov
imul
or
mov
inc
jbe
push
mov
inc
in
dec
imul
inc
addr16
leave
pop
pop
jl
fistpll
xchg
aam
jno
mov
outsw
mov
mov
jp
mov
js
mov
roll
lcall
xor
cmp
pop
add
lcall
sub
jg
leave
pop
leave
cmp
pop
mov
insl
lods
hlt
in
jle
add
jnp
ret
addr16
mov
fmul
xor
scas
push
roll
sub
addl
mov
pushf
cs
jecxz
inc
sbb
idivb
xchg
sub
cmp
mov
andl
cli
pop
sub
jns
repnz
fidivrl
adc
xchg
or
test
loope
push
movsl
lcall
ds
lods
pop
insl
mov
pop
inc
and
movsb
jmp
into
add
mov
mov
sub
aam
aaa
jp
jmp
mov
mov
xor
mov
xchg
ror
or
testl
mov
dec
lahf
push
sbb
mov
xor
mov
cmp
hlt
xor
std
std
imul
test
sbb
movsb
jp
scas
pop
and
mull
inc
cli
adc
jb
mov
gs
psubb
inc
out
in
xchg
sbb
cmpsb
in
lods
enter
sti
mov
ret
faddl
mov
rcr
lret
xchg
inc
movsb
pop
xchg
pushl
pop
push
int
push
xchg
mov
test
insb
aad
nop
or
ror
mov
inc
dec
out
dec
jle
cmp
imul
rol
xor
repnz
dec
adc
pushf
sti
lret
mov
in
fcoml
in
dec
or
aas
mov
test
shr
push
data16
or
mov
jl
lds
and
repz
pop
adc
jb
sahf
loop
in
pop
or
js
mov
push
push
ficomps
inc
mov
nop
es
insb
xorb
cmp
sbb
mov
pop
push
push
es
mov
orl
xchg
or
aam
or
mov
adcb
and
test
cs
xchg
mov
notl
lret
cltd
mov
aam
in
out
xchg
mov
push
dec
xchg
ja
cmp
push
mov
inc
xor
add
loopne
jge
jl
iret
nop
mov
xchg
andb
leave
call
add
mov
dec
inc
jno
in
sub
mov
cmpsb
std
loopne
lock
jae
stos
sub
dec
sbb
cmpsb
pop
aas
adc
mov
aam
push
jnp
scas
push
scas
add
xor
inc
ja
cmpb
cmp
cmp
push
mov
and
push
mov
outsl
xor
js
stos
cmp
and
dec
xchg
mov
mov
mov
and
je
xor
lods
and
sub
jbe
test
ret
mov
outsl
jmp
vpmullw
add
push
mov
push
cmpb
dec
cltd
cwtl
mov
mov
xchg
or
and
xchg
sub
push
or
xchg
es
add
pop
pusha
test
jmp
leave
dec
mov
jp
je
ds
jae
add
in
movsb
mull
sbb
rcll
sub
mov
and
shr
test
ss
sub
pop
xor
and
sbb
test
xor
push
jp
mov
jno
inc
cmp
sbb
inc
fcoms
mov
insb
in
xchg
fidivrl
lret
sti
xchg
test
jae
pop
push
fwait
loopne
xor
fstpl
adc
add
xlat
cwtl
mov
mov
mov
test
fsubrl
and
xor
adc
mov
nop
dec
hlt
sub
dec
ficompl
ljmp
sub
ja
inc
or
sbb
mov
xor
or
out
mov
and
xchg
xchg
xchg
or
xor
aaa
xor
jno
push
adc
sbb
xor
and
sub
les
pusha
das
les
xchg
xchg
jb
add
out
jl
mov
outsl
mov
pop
pop
push
lea
dec
ret
ds
push
jae
cmp
dec
add
push
xchg
jmp
xchg
inc
dec
and
or
or
jge
add
sbb
or
mov
psrlw
icebp
inc
xchg
cmp
outsl
insl
dec
std
in
frstor
jns,pt
int
out
aaa
xor
fwait
test
dec
sub
lret
dec
jle
inc
mov
pop
andnps
mov
mov
negl
into
dec
mov
loope
xor
push
sbb
xchg
dec
mov
inc
jb
sub
jmp
pushf
mov
add
pop
xchg
pop
mov
push
lret
out
inc
mov
lahf
jmp
mov
dec
xchg
sbb
pushf
xor
sbb
in
jmp
ljmp
dec
leave
fldcw
pop
dec
orl
cmc
add
dec
dec
rol
aas
lret
jno
fisubs
rcr
mov
bound
jae
mov
repnz
leave
push
mov
jb
push
stos
scas
xor
bound
loopne
lahf
adc
ret
jbe
test
mov
push
nop
xchg
fidivl
dec
in
hlt
in
mov
add
jmp
mov
jae
rcrl
xorl
mov
lods
mov
push
push
lcall
lea
jecxz
je
pushf
mov
decl
mov
insl
xchg
fidivs
sti
jno
push
outsb
jae
mov
push
les
and
repz
xor
mov
sub
stos
rcl
sbbb
stos
sub
push
mov
test
dec
imul
cmp
daa
lret
test
inc
das
out
xchg
sti
ljmp
adc
add
loopne
sbb
xchg
int
dec
push
xlat
jo
es
push
fwait
repnz
sarl
add
rclb
sti
mov
aas
mov
add
test
pop
rorb
sbb
push
or
loopne
lahf
xchg
cmp
cld
shrl
jmp
in
and
out
jmp
mov
out
test
jl
mov
mov
push
dec
lock
loopne
lahf
xchg
mov
xlat
cmc
adc
xchg
mov
add
out
mov
pop
sbb
mov
mov
fcmove
cli
insl
out
pop
mov
aaa
ret
lock
mov
lods
repz
mov
sti
test
lahf
in
inc
ret
call
loopne
push
ret
aas
xchg
sbb
xchg
sbb
pop
test
pop
loop
pop
in
movsl
pop
out
push
xor
in
bound
stos
mov
cmp
sbb
mov
aas
mov
jge
js
decl
pop
xor
pop
jo
es
cltd
mov
cmc
das
mov
lock
test
adc
cmpsb
sbb
jecxz
out
jg
mov
cmpsl
and
out
mov
test
pop
lret
aas
movsb
pop
cld
pushf
jnp,pn
rcrb
jg
inc
and
dec
push
out
push
fcomps
nop
xlat
fidivs
jnp
aam
scas
xor
and
dec
outsb
out
jnp
ja
push
fcmovne
mov
js
arpl
sub
inc
aad
xor
cmp
cwtl
lret
mov
mov
inc
fmuls
inc
pop
imul
cld
inc
fs
stc
cmpsl
and
aas
xchg
mov
repnz
movsb
lods
or
call
insb
jae
jae
arpl
lret
adc
outsb
out
fiadds
xchg
out
sbb
das
mov
notb
jb
pop
sar
push
sbb
nop
jge
jnp
xchg
in
movsb
in
push
jl
imul
mov
xchg
xchg
push
jnp
xor
jp
sbb
mov
cwtl
loop
sub
repnz
bound
jno
mov
lret
ret
jns
pop
push
pop
or
or
lret
loopne
in
aam
cmp
sub
test
rcrl
out
push
dec
fcoml
xor
scas
inc
mov
fisttpl
cmpsb
cs
daa
out
push
jl
dec
jmp
leave
mov
pop
adc
sub
mov
repz
leave
cld
repnz
dec
pop
pushf
int
fisubrs
adc
cli
daa
in
mov
pop
outsl
aad
pop
imul
mov
xchg
sbbl
mov
out
data16
mov
sbb
push
mov
xor
fs
sar
scas
popa
jae
pop
push
cmpsl
xor
mov
push
ret
movsl
adc
xor
sbbl
dec
js
xor
push
dec
out
lret
in
mov
cli
xlat
add
cld
xor
shll
add
jecxz
insl
mov
mov
sub
cmp
popf
push
lock
out
dec
out
xchg
aas
stc
daa
je
lcall
push
arpl
jnp
dec
shr
mov
shrb
jle
xchg
fwait
jb
push
std
add
cmp
mov
cwtl
mov
xchg
mov
lahf
out
push
sahf
ret
shl
fnstenv
mov
mov
fsubs
push
push
jb
fistpll
adc
negb
push
inc
jno
add
cmp
incl
pop
xchg
fistps
scas
enter
mov
ror
fwait
push
clc
hlt
fstl
int3
add
xor
fnstsw
add
inc
add
adc
push
pop
pop
fiadds
out
imull
mov
dec
aaa
xor
shlb
ror
xchg
popf
dec
in
fcomip
test
cmp
mov
cmpsl
ret
inc
cmpsl
loopne
shr
dec
out
push
es
or
mov
xchg
xlat
lods
test
inc
fldenv
sti
mov
mov
inc
or
bound
jno
mov
call
or
stc
add
andb
ljmp
clc
and
pop
das
sub
shrl
roll
arpl
pusha
cmpsb
fidivl
mov
lret
ljmp
xor
adc
adc
outsb
adc
pop
out
gs
inc
scas
lock
cmpsl
leave
ficomps
pop
dec
ffree
std
aaa
jmp
shrb
push
in
jns
aad
test
add
fwait
jecxz
imul
lock
jnp
popa
sti
push
cmp
repnz
fnstenv
cmpsl
cmp
and
sahf
mov
incl
dec
ror
fwait
insl
pop
jbe
push
and
pop
shlb
stos
mov
jmp
mov
cmp
jno
push
inc
dec
fldcw
stos
lds
hlt
cs
pusha
sub
xor
outsb
xor
xchg
sub
sub
ds
xchg
push
stc
xlat
xchg
fisubl
popa
cli
adc
jecxz
sbb
mov
pop
stc
in
jg
lods
popa
stc
lahf
call
cld
out
out
int3
ds
dec
out
shll
bound
test
js
xchg
fdivl
daa
mov
ljmp
sub
mov
shlb
das
pop
outsb
cmpsb
iret
lods
rclb
leave
mov
ss
cmp
clc
jbe
mov
xchg
cmp
shl
jne
fsub
xor
out
pop
out
cwtl
in
mov
xor
cmc
cwtl
stc
in
fnsave
sbb
xor
mov
ja
lods
mov
sub
ljmp
jl
iret
adc
test
lds
xlat
mov
shrl
mov
jle
out
cld
fwait
iret
enter
mov
cld
popf
jecxz
in
cmpb
ss
aam
sub
cmp
cmp
inc
icebp
in
hlt
loop
in
push
iret
imul
mov
outsl
test
mov
nop
in
sbb
xor
xor
test
insl
add
push
sub
leave
cs
jbe
inc
jg
pop
fildll
mov
xlat
jl
xchg
cld
mov
and
adc
loop
cmp
push
pop
jecxz
push
ja
out
std
jo
adc
ret
jl
rcrl
scas
clc
pop
in
mov
movsb
jl
pop
adc
fbld
cmp
mov
lret
sarb
sbb
mov
rcll
push
xor
nop
jae
push
icebp
les
fcmovbe
mov
push
insb
sbb
out
adc
xchg
fbstp
sub
popa
mov
mov
jle
cmp
sbb
mov
in
pop
movsl
scas
lret
jmp
jnp
fstps
mulb
jno
cld
ret
pop
call
aad
and
popa
cld
icebp
sbb
jb
add
sar
mov
imul
cwtl
aas
mov
push
pop
xor
xor
in
mov
lods
xor
stc
inc
jne
jae
sahf
and
loope
into
loopne
inc
enter
push
or
dec
mull
inc
out
scas
push
sub
and
out
adc
pop
adc
andl
adc
jmp
mov
mov
mul
inc
stos
push
call
pop
jp
aaa
mov
inc
pop
or
xor
push
fbstp
cli
mov
iret
adc
out
xchg
lcall
je
cmp
cmp
out
jnp
push
jae
pop
fnstcw
hlt
push
gs
popfw
mov
add
xchg
jle
inc
mov
xchg
mov
nop
scas
mov
aas
dec
adc
insl
pop
divb
lcall
test
or
sbb
ds
or
lret
mov
enter
shl
xorl
mov
push
mov
gs
aas
push
mov
mov
pop
cld
testl
loop
fdiv
pop
xchg
sbb
ja
stos
jb
mov
inc
js
cmc
cmp
int3
jns
jle
aaa
je
xor
daa
xchg
mov
xchg
mov
scas
and
push
imul
sahf
in
mov
dec
pop
xchg
movl
push
jecxz
mov
mov
int3
test
insb
dec
xchg
popa
sarb
gs
push
gs
push
push
nop
jb
pushf
data16
inc
mov
mov
insb
xchg
aam
iret
ljmp
xchg
jno
cmp
pop
and
push
fmull
psubd
mov
les
mov
in
lret
nop
mov
addr16
cmp
lret
mov
aad
and
xor
inc
sbb
and
mov
push
loop
cmc
mov
lds
mov
mov
push
loop
xchg
inc
rcll
push
sbb
fimull
cwtd
dec
fadds
sbb
into
cmp
dec
push
out
push
stc
mov
dec
jle
push
jg
mov
cs
insb
adc
push
pop
xchg
lods
inc
push
sbb
mov
bound
mov
push
mov
pop
cmpsb
inc
push
daa
mov
mov
addb
mov
sbbb
aam
leave
or
inc
or
or
xchg
imul
divl
mov
pop
mov
pop
mov
jmp
xor
xor
sbb
icebp
rolb
jo
mov
xor
in
push
call
mov
nop
jle
and
lret
ss
cmpsb
pop
mov
out
jmp
jp
jne
in
cli
mov
jge
jecxz
lahf
lods
mov
out
xchg
addr16
adc
jle
inc
iret
imul
fiaddl
movb
bound
sarb
jne
sub
mov
sbb
and
cmp
adc
cmpsl
xchg
push
and
and
push
xlat
stos
imul
push
push
and
xor
repz
arpl
pop
pop
lret
or
daa
cmp
test
jbe
cmp
ds
popf
fdivrl
push
das
add
cmpsl
test
add
pusha
adcl
cld
xor
xor
pop
add
sahf
sbb
stc
cltd
cmpsl
lret
int3
sbb
or
ret
sbb
inc
insb
jo
dec
adc
iret
loope
pusha
adc
add
pop
rcl
inc
adc
into
xchg
add
movsl
add
adc
sbb
dec
sbb
movsl
xlat
stos
jmp
and
xchg
sub
xor
pusha
pop
sub
or
or
or
fdivr
shlb
cmp
xchg
lahf
mov
les
rcrl
out
cmp
into
fistpl
pop
sbb
incl
adc
xor
pop
ret
cs
nop
mov
xor
inc
jle
or
arpl
arpl
push
hlt
add
lock
test
mov
cmp
xchg
into
push
mov
push
xchg
jo
adc
adc
jecxz
mov
lea
mov
lea
in
adcl
jmp
outsl
xchg
inc
and
and
sbb
adc
adcl
xor
mov
movsl
mov
cmpsb
mov
popf
mov
std
aas
push
xchg
sahf
lea
into
sahf
and
icebp
nop
mov
mov
mov
scas
push
test
movl
sub
push
aas
pop
lahf
in
mov
lods
jnp
mov
pop
dec
cmp
stos
sub
xchg
adc
jp
negb
pop
jge
out
push
cmp
cmp
lods
cmp
push
jae
mov
in
mov
bound
inc
pop
or
or
push
or
add
data16
pop
jg
repnz
add
arpl
xor
push
inc
push
inc
jne
add
scas
orl
rorb
ret
xor
fildl
add
out
inc
dec
insl
add
fwait
mov
mov
or
and
or
and
pop
in
loopne
xchg
loopne
or
pop
mov
pop
cmp
in
loop
fs
popf
dec
or
mov
stc
and
xchg
cmp
sbb
cld
mov
std
fdiv
or
mov
jne
aam
imulb
aaa
fld
dec
mov
mov
loopne
jl
pop
xchg
negl
sub
inc
adc
inc
imul
fstps
cmc
sub
mov
or
lret
test
mov
add
mov
push
in
push
negb
and
mov
adc
movsb
xorb
add
loope
orb
dec
xchg
orb
push
add
adc
xor
mov
mov
or
mov
mov
sub
das
push
jae
push
jne
pop
jnp
jbe
inc
jle
dec
adcl
dec
lods
inc
dec
insb
ss
insb
adc
lods
jnp
imulb
push
mov
push
lea
xchg
lret
into
popfw
shrb
push
outsb
mov
mov
mov
lret
push
mov
sarl
lcall
jge
pop
in
inc
jne
mov
into
iret
push
cmp
sahf
mov
lcall
ss
jmp
and
pop
inc
cwtl
pop
xchg
sahf
push
push
pop
add
pop
add
ret
inc
nop
xchg
sbbb
lock
xchg
rcrb
xorb
or
aas
or
lock
inc
mov
gs
and
lcall
dec
pushf
and
lods
test
jo
rorb
pop
ja
pop
je
pop
jae
pop
jne
cmc
sahf
aaa
arpl
jg
imul
mov
nop
push
test
in
lret
ljmp
cmpl
out
xor
push
sti
cmp
cmp
pop
mov
test
xchg
mov
lcall
xchg
mov
fbld
ljmp
out
aaa
xor
pop
in
inc
jne
mov
into
iret
push
cmp
lcall
icebp
adc
jmp
popf
jle
das
imul
mov
stos
dec
jecxz
lea
dec
and
add
ljmp
nop
ret
and
ret
xor
mov
popa
add
and
push
adc
push
sbb
push
sbb
push
sbb
outsb
xlat
scas
mov
xor
pop
ja
fs
imul
test
mov
mov
xchg
mov
into
cmp
iret
cmp
insl
sahf
gs
daa
sub
sub
stos
bound
and
and
push
adc
dec
scas
rorb
xchg
lods
mov
pop
cmp
int
xchg
movsb
xadd
mov
cmpsb
int
insb
repz
fld
into
pop
je
pop
cmp
in
cmc
jae
iret
xchg
xchg
or
adc
and
popf
and
pop
shlb
cmp
stos
or
inc
rcrl
dec
cmp
je
adcl
cmp
das
cmp
xchg
mov
and
xchg
add
stos
subl
pop
stos
nop
clc
adc
lods
mov
orl
out
xchg
jmp
xor
adc
fs
and
adc
out
ss
daa
cmp
sub
test
in
stos
jbe
push
jno
xchg
mov
mov
cmp
jp
dec
mov
pop
lcall
sti
jns
or
sbb
jecxz
iret
fnstcw
aad
test
jg
mov
xor
out
outsl
mov
pushf
mov
jae
iret
es
ljmp
in
pusha
test
ds
rcrl
nop
fistpl
sbb
sbb
cwtl
sbb
pop
sbb
fimull
xchg
pop
enter
push
rcll
dec
or
imul
int3
nop
jno
adc
in
sub
adc
int3
cmpsb
xchg
or
mov
rolb
out
inc
and
dec
inc
aaa
xchg
jmp
jb
adc
adc
inc
adc
xorl
mov
cmp
or
xchg
add
and
imul
sub
lods
mov
std
lods
mov
icebp
pushf
ret
fimuls
jae
repz
xchg
sbb
or
in
xor
sbb
test
imul
lcall
dec
push
adc
stos
adc
les
push
int3
xor
sub
loop
hlt
push
push
pop
jmp
int3
in
mov
mov
lret
hlt
sti
iret
jle
icebp
cmp
cmp
js
jle
popa
inc
push
loope
push
scas
sbb
pusha
push
stos
loopne
jg
lcall
in
pop
xor
ljmp
cmp
xor
cmp
jmp
xchg
movsb
lahf
paddb
imul
xchg
inc
jbe
and
mov
mov
mov
push
mov
lcall
aad
pop
mov
mov
mov
jno
push
xor
lret
cs
shrl
ja
lret
mov
arpl
jmp
jecxz
mov
push
imul
jle
fcompl
mov
mov
and
or
fimull
push
inc
xor
mov
dec
xor
push
mov
scas
add
mov
cmp
shlb
inc
mov
mov
or
andl
vpshufhw
les
popf
cmc
jl
jmp
ljmp
xchg
icebp
and
repnz
into
add
repnz
orb
clc
cmc
mov
mov
int
sub
in
cwtl
gs
sbb
jp
clc
ret
sub
mov
cmp
ja
mov
out
or
es
movsl
aas
mul
mov
test
mov
push
popa
aad
daa
outsb
mov
aam
xor
pop
dec
lcall
dec
jbe
add
sarb
jb
push
xlat
add
fs
add
jg
outsb
arpl
mov
icebp
or
push
mov
sub
inc
xor
and
das
or
rcll
and
sub
mov
dec
test
or
dec
mov
gs
add
pop
movsl
neg
cmp
cmp
mov
pop
loop
push
mov
xchg
in
lods
loop
ss
test
mov
nop
pop
jb
repz
popf
shll
inc
mov
fldpi
clc
les
repz
pop
daa
lock
repnz
add
js
sahf
sub
cli
shll
and
mov
push
rcrb
and
out
insb
outsl
lea
pop
loope
roll
je
divb
pop
and
iret
fcoml
push
push
cmpsl
cmp
lock
dec
mov
test
pop
mov
jecxz
fwait
pop
insb
cld
cmp
inc
jecxz
stos
js
jbe
mov
lds
cmc
jl
or
adc
loop
cmc
lods
push
loop
mov
pop
lds
pop
sbb
jo
or
jne
push
in
push
sbb
dec
mov
mov
pop
pusha
adc
cltd
in
cmp
rclb
pop
dec
arpl
cmpsb
jbe
push
lea
outsl
xchg
loope
stc
pop
pop
pop
nop
pop
xor
mov
dec
jp
jbe
loope
push
test
lret
mov
fwait
mov
inc
inc
nop
push
cmc
jbe
lods
lods
pop
or
and
inc
mov
ret
outsl
xor
aas
js
out
jnp
pop
pop
hlt
push
dec
inc
ja
mov
push
fildl
loope
aaa
inc
outsl
cmpsl
push
pop
dec
ja
mov
in
scas
repnz
out
outsl
fbstp
or
sbbl
scas
leave
sahf
lds
test
mov
cld
movsb
push
inc
mov
or
add
repz
or
out
mov
movsl
sahf
scas
ret
or
lcall
dec
mov
mov
gs
fcoms
mov
inc
mov
lods
and
jne
xchg
enter
mov
rep
adc
cmp
push
jmp
sbb
inc
sbb
jne
cmp
xchg
xor
fldt
pop
mov
adc
or
add
dec
dec
or
mov
pop
mov
outsl
push
les
push
movsl
cmp
mov
shrl
push
add
lods
clc
mov
jnp
pop
ss
ret
imul
sub
lcall
add
cltd
ja
cs
in
mov
lds
call
xlat
sbb
jle
cmp
les
dec
sahf
aaa
xchg
das
add
scas
cli
pop
xchg
mov
adc
arpl
or
mov
out
arpl
pushf
cmp
xor
adc
dec
loopne
cmp
add
sub
fstpt
add
cmp
xor
mov
jne
adc
push
xor
cmp
xor
fcmovnu
cmpsl
and
and
out
int3
xchg
xchg
or
jecxz
in
imul
push
cltd
adc
cld
sub
sbb
xlat
xchg
inc
aad
inc
pushf
cwtl
int3
call
lret
or
dec
adc
add
imul
lds
scas
push
xor
ficompl
or
sbb
jnp
stos
in
stos
push
mov
xchg
xchg
mov
mov
push
sbb
stos
xor
xor
nop
repnz
cli
sarb
cmp
movsb
push
pop
shlb
sbb
mov
fs
shrl
jo
fprem1
mov
or
mov
push
fsub
add
dec
fnstcw
add
add
dec
mov
aaa
movsl
in
push
in
mov
xchg
mov
fidivrl
lods
out
cltd
sahf
fidivl
adc
mov
out
mov
mull
xor
aaa
pop
aam
pushf
fsubp
mull
rolb
in
fwait
xor
rcrb
lahf
push
aad
sbb
stos
jmp
add
add
cli
push
jg
ja
loopne
ja
repz
push
add
push
ds
inc
call
jb
lret
mov
addr16
mov
pushf
stc
out
scas
js
leave
sahf
jecxz
inc
jp
sti
xchg
fildll
xor
fistpl
push
imul
bound
shlb
and
or
stc
rcrb
mov
mov
xor
sbb
rclb
movsb
pop
mov
js
inc
push
inc
or
mov
jp
mov
lods
cmpsl
lds
mov
ljmp
mov
cmpsl
jno
mov
pcmpgtb
jg
mov
aas
cld
jo
jmp
repz
popf
adc
mov
fists
cmp
clc
into
mov
cmp
lret
aad
jne
cwtl
mov
test
push
adc
test
aad
inc
inc
mov
gs
leave
jbe
cmpsl
mov
xchg
push
divl
test
mov
mov
push
adc
gs
ret
jnp
popa
inc
mov
jnp
jnp
push
push
lret
inc
in
cmp
push
cwtl
adc
std
imul
mulb
cs
dec
inc
lods
cli
stos
add
mov
addr16
jge
add
and
std
fisubrl
add
aam
sahf
fisubrl
pop
leave
outsl
mov
cld
addr16
jo
mov
daa
fdivl
mov
sbb
fcoml
jne
sub
inc
and
scas
cltd
call
inc
divb
aaa
mov
lea
pop
cmp
cld
mov
or
movsl
lret
xchg
mov
adc
int
out
insb
cmpsb
sub
mov
adc
test
xor
jg
lds
add
mov
jae
test
add
repnz
out
adc
inc
scas
sbb
mov
xor
in
shl
lods
rorb
adcb
xor
inc
loope
in
fdiv
adc
ret
dec
enter
jns
repnz
arpl
jecxz
mov
popf
and
pop
jne
dec
push
sub
jmp
push
arpl
xor
sub
xorl
xchg
lea
ret
aas
mov
add
and
push
clc
js
xor
or
fdivl
cmp
mov
popa
inc
inc
pop
int3
mov
fwait
mov
cmpsl
jmp
push
mov
push
hlt
in
sub
xor
xchg
insl
fdivp
stc
inc
jnp
pop
adc
aaa
out
fists
mov
addl
sti
loope
out
sbb
jle
adc
mov
or
and
pushf
fs
jle
mov
mov
push
jo
clc
cmp
movsb
gs
pop
inc
insl
fisttpl
dec
inc
repnz
bound
outsb
int3
xorl
inc
jp
pop
sbb
test
dec
adc
mov
aas
outsb
xor
lret
popa
int
lret
cwtl
add
mov
sbb
cmp
ljmp
mov
xchg
push
mov
pop
lock
inc
sbb
add
arpl
hlt
mov
cld
pusha
cmp
pop
stos
or
jl
sub
ss
cmp
jg
dec
mov
inc
xchg
cmp
test
nop
adc
mov
push
cmp
inc
or
pop
sbb
sbb
or
push
in
add
pop
inc
push
gs
lret
aaa
cmp
jb
mov
xorb
mov
repnz
jne
pop
rcrb
fadd
sbb
pop
in
pop
in
fildll
xorb
out
shrl
add
add
aam
push
das
push
or
out
cmp
call
xchg
pop
out
mov
push
inc
cmc
mov
shlb
jns
cmp
push
push
pusha
dec
jb
mov
jecxz
mov
xchg
hlt
jns
fistpl
cmp
incb
xchg
mov
in
cmp
push
add
jmp
add
outsb
sub
and
adc
jle
push
sarl
mov
xchg
sub
jmp
mov
out
jb
insl
int3
dec
scas
cli
stos
ljmp
pushf
add
das
inc
out
adc
std
add
mov
jns
jno
cmp
inc
jg
rol
call
mov
push
fdivrp
ljmp
int3
sbb
mov
ja
push
jp
lret
sti
lock
out
mov
out
into
notb
shr
mov
mov
fsubrs
mov
jle
xor
outsb
jb
sbb
dec
fidivs
insl
sbb
shr
add
cltd
sbb
dec
movsb
mov
sub
test
mov
push
mov
sbb
cli
les
mov
ljmp
inc
fisubs
sbb
test
aas
ds
outsb
jo
insl
cwtl
scas
adc
cld
xchg
inc
or
push
pop
lods
mov
pusha
and
repz
stos
sub
jae
ja
ja
sbbl
dec
jp
add
adc
mov
arpl
out
lcall
cltd
lret
dec
dec
jp
pop
jbe
dec
out
lret
push
jp
fbld
or
ret
lahf
pop
add
pop
inc
mov
cmp
push
add
or
aaa
inc
cld
sub
stos
lock
ljmp
add
hlt
mov
rorb
jmp
adc
fstpl
dec
mov
into
out
cmp
nop
cmp
mov
rorb
sub
and
int3
sbb
xchg
push
shl
popf
out
stos
call
xlat
cld
jno
daa
out
js
mov
into
push
jl
inc
mov
xchg
mov
iret
dec
stos
jbe
ret
add
lea
pop
cmp
lock
mov
xchg
xor
cs
ret
lret
and
jno
pop
test
mov
enter
push
cltd
push
adc
cmp
adc
aaa
sub
inc
clc
adc
scas
shrb
scas
aaa
mov
movsl
mov
movsl
or
addr16
ds
iret
xchg
lahf
or
outsb
xorl
and
rolb
inc
xchg
add
push
or
push
subl
dec
add
adc
mov
or
mov
sub
fwait
mov
mov
aas
and
stc
ret
inc
add
dec
rorb
jo
xchg
pusha
or
iret
mov
adc
rolb
dec
inc
mov
add
add
std
add
dec
in
or
or
inc
dec
lahf
add
sub
sub
out
adc
mov
inc
nop
push
out
mov
mov
roll
test
push
mov
adc
add
sub
sub
mov
mov
add
outsb
lods
push
pop
jecxz
push
je
xchg
inc
push
mov
sub
push
daa
push
adc
cld
shlb
fnstcw
fists
xor
sahf
pop
cld
test
imul
shlb
push
cltd
cmp
xchg
mov
cwtl
ja
inc
or
xor
xchg
pusha
movsl
inc
push
and
xchg
pop
or
push
loopne
jne
add
sahf
push
inc
inc
test
and
sti
sahf
sub
ljmp
fcompl
mov
sahf
jo
adc
xor
inc
in
mov
pop
fucomp
icebp
mov
pop
add
fisubrl
imul
mov
xchg
das
lods
adc
inc
jecxz
xor
mov
xor
mov
lea
push
sti
ds
push
push
lock
ljmp
sarl
jl
xchg
stos
dec
insb
in
fmull
test
add
cmp
repnz
sub
adc
xor
pop
push
ds
sub
out
sbb
addr16
ds
iret
xchg
ror
mov
loope
ds
iret
xchg
lahf
or
addr16
ds
hlt
out
xchg
xchg
ljmp
mov
ret
jne
push
or
xchg
sbbl
ljmp
cmp
inc
loop
push
jge
pushf
std
mov
adc
jnp
scas
sahf
and
fbld
hlt
lods
adc
sbb
mov
and
aad
adc
jl
push
push
dec
rorl
push
sub
add
out
test
and
inc
test
add
repnz
aad
mov
test
ds
inc
dec
inc
pop
pusha
inc
mov
popa
jecxz
and
xchg
insl
inc
dec
stos
add
cwtl
call
mov
sub
dec
stos
rorb
mov
jmp
movsl
fadds
mov
and
add
adc
adc
and
out
push
inc
jg
xchg
or
negb
test
push
or
push
push
leave
sti
dec
xchg
adc
lods
dec
adc
dec
adc
sbb
clc
mov
xorb
and
or
add
sti
inc
jne
lods
push
sbb
pop
add
push
add
cmpsl
pop
inc
pop
mov
push
iret
dec
add
mov
add
xchg
fisubs
push
push
push
out
movsl
add
scas
adc
or
mov
add
aam
fs
mov
xchg
pop
mov
add
aas
dec
mov
int3
dec
cmp
dec
add
shll
adc
sub
repnz
ds
iret
xchg
lcall
lret
in
mov
xor
daa
jmp
lock
xchg
lahf
or
addr16
ds
rcl
subb
or
cmpsl
addb
jnp
rclb
out
sub
ret
push
jb
pop
lahf
add
jp
icebp
adc
adc
xchg
or
mov
mov
data16
pop
mov
dec
stos
add
pop
aaa
stc
popa
adc
int3
sti
test
sub
dec
js
dec
imul
mov
and
cmp
jns
sbb
icebp
add
xor
mov
insb
cld
pop
mov
cld
inc
call
mov
pop
scas
push
xor
testb
outsb
mov
cmp
insb
mov
popf
pop
xor
insb
mov
cmpsb
sbb
and
test
push
stos
icebp
loopne
movsl
add
cltd
dec
ret
mov
mov
adc
mov
xor
jg
dec
push
push
test
mov
mov
add
and
hlt
sub
jbe
lahf
xchg
dec
push
loopne
orl
std
xchg
addr16
jns
dec
inc
scas
cmpsb
out
mov
subb
gs
sbb
loop
testl
jecxz
cmpb
je
inc
cmc
mov
insb
in
mov
jecxz
xchg
or
addl
xchg
js
sar
inc
aad
in
ret
jge
jmp
xor
stos
je
cmp
and
je
or
push
insb
ja
ja
das
stos
fildll
push
or
sub
or
add
js
sahf
fs
repnz
push
mov
dec
mov
addr16
ds
iret
xchg
jl
sub
lahf
or
addr16
ds
iret
xchg
xchg
add
rolb
adc
pusha
inc
cmp
add
pop
loopne
add
das
pusha
push
daa
push
fwait
cltd
fwait
test
out
or
or
popa
xor
cmpb
dec
pop
cwtl
cmp
cmp
xlat
iret
lret
inc
movsb
cmp
js
mov
add
mov
xor
xchg
orb
add
push
or
les
and
cmpsl
dec
movsl
push
sbbl
in
dec
or
lock
pop
shll
and
mov
mov
pop
and
push
add
or
mov
icebp
sbb
js
xchg
push
cmp
into
xchg
jns
cmpsb
adcl
iret
add
movsl
add
js
xchg
push
or
sbb
add
cltd
call
adc
test
cmp
sub
add
cmp
add
cmp
in
mov
repnz
clc
and
jno
scas
sbb
dec
in
lcall
add
mov
fs
push
pop
cwtl
mulb
mov
and
daa
mov
adc
add
add
xor
cs
sti
mov
xchg
loope
or
addr16
ds
iret
xchg
testl
push
push
cmp
jl
loope
or
addr16
ds
iret
ret
aaa
inc
dec
jo
xchg
cmp
das
xor
cmc
lahf
mov
mov
mov
nop
insl
pop
das
adc
imul
lea
xchg
dec
fistpl
mov
xor
imul
xor
mov
dec
faddl
push
outsl
aam
out
pop
dec
xor
adc
xor
mov
adc
insb
push
imul
fadds
sar
adc
sbb
cltd
xchg
sarl
mov
add
lret
adc
or
push
mov
jbe
lret
jne
push
nop
jecxz
add
dec
fildl
jnp
iret
and
sti
dec
mov
sbb
mov
roll
outsb
pop
add
xor
repnz
leave
pop
idivb
mov
sbb
aaa
sub
xor
mov
xor
sub
cmp
cwtl
popa
xchg
jmp
mov
push
pop
subb
fisubs
dec
dec
mov
and
ret
rclb
arpl
rcrb
pop
fdiv
sbb
xchg
jnp
rcr
cmc
sahf
shl
and
mov
or
dec
adc
lret
dec
push
rcrb
stos
clc
xor
pcmpeqw
adc
rcrb
mov
jo
mov
pop
add
aaa
sbb
or
inc
popf
dec
jo
cmp
frstor
repz
add
iret
sub
ror
xchg
lahf
or
addr16
ds
iret
xchg
lahf
or
addr16
ds
in
in
jp
out
or
stc
add
pop
cwtl
jbe
jge
insl
mov
add
lock
insb
push
in
addl
pop
push
push
lret
subl
lret
lret
das
push
jge
cmp
push
cmp
lds
dec
dec
dec
inc
jle
adc
dec
sbb
cmp
stos
rcrb
shlb
lret
inc
sbb
addr16
or
lods
add
fildl
lcall
adc
cltd
xchg
rcrb
cltd
xchg
sarl
out
icebp
addr16
jle
adc
insb
push
imul
ss
adc
add
push
aas
mov
sub
lcall
pop
ds
inc
adc
xorl
lds
je
int
cmp
push
enter
rorl
mov
clc
cmc
xor
fsubs
push
cmpsb
cmp
adc
cltd
fsubs
dec
and
jns
mov
push
in
add
les
int
adc
inc
outsb
xor
cmp
mov
lock
pop
mov
in
xor
cld
jle
dec
xorb
and
addl
jne
mov
pop
rcl
cmpsb
add
movsb
add
sbb
movsl
inc
popf
sbb
jns
out
cmp
fsubrl
adc
int
inc
jbe
adc
rcrb
andb
jae
lahf
or
addr16
ds
iret
xchg
push
ret
lock
rcrl
jl,pt
add
xchg
lahf
or
addr16
ds
cmc
add
sub
add
add
xchg
aas
ficompl
mov
add
sbb
adc
mov
sub
lea
inc
or
ret
test
or
xor
pop
insb
sub
and
loope
clc
or
lock
jae
push
push
out
ret
rcl
outsb
push
ret
cltd
insl
xchg
adc
xchg
xchg
shll
push
cmpsb
ret
pop
fildl
and
sub
inc
and
dec
loop
popf
stos
push
jmp
mov
push
call
adc
fs
mov
into
jae
jne
repz
push
jle
mov
aad
mov
ja
add
mov
or
mov
je
aas
cltd
cmp
inc
or
inc
sub
push
stos
clc
xor
jge
push
jmp
xor
lahf
das
sbb
insb
adc
cmp
add
or
adc
sub
stos
add
inc
push
push
filds
adcb
repz
add
dec
int3
ljmp
jmp
push
shrl
lcall
jo
hlt
aam
cmp
mov
andl
add
clc
jae,pt
and
jae,pt
adc
imul
or
daa
sub
add
cmp
decb
lods
inc
das
movsl
shrb
and
lahf
addb
jns
aam
repz
loopne
jle
out
push
adc
jbe
xor
mov
jp
xorl
neg
add
ds
sbb
mov
and
jg
jno
jge
sub
or
add
push
daa
push
push
adc
je
push
xchg
iret
filds
repnz
test
inc
jl
out
jne
out
test
adc
cld
jae
mov
push
jle
mov
pop
jb
adc
sub
enter
xor
jmp
adc
ljmp
shl
pop
push
mov
pop
lahf
rcll
aaa
cmp
add
jae,pt
jmp
sbbb
pop
push
test
adc
mov
dec
add
or
adc
popw
aad
hlt
mov
mov
pop
jns
sbb
mov
jmp
mov
insl
clc
daa
mov
jmp
add
js
imul
or
inc
or
daa
mov
lods
add
cmc
jle
mov
icebp
pop
xor
jns
test
insl
cmpl
inc
push
rcl
or
sbb
sbb
fldcw
pusha
inc
xchg
lret
ret
inc
add
add
push
divl
add
imul
pop
xor
and
faddl
sahf
push
mov
add
imul
cmp
mov
pushf
pop
cmc
sbb
push
dec
cmp
in
lcall
mov
nop
dec
scas
fcoms
pushf
xchg
aad
jo
cltd
loope
inc
jo
xchg
into
lret
jp
jae
enter
sar
fs
add
cli
inc
xor
or
adc
jns
lock
cmp
inc
cmp
mov
addb
xor
jnp
dec
push
inc
loop
add
shl
decb
lret
sar
xchg
in
dec
insb
push
push
repnz
add
jmp
sti
xchg
out
scas
jl
fimuls
pop
sbb
test
shl
pop
pop
shl
test
adc
clc
jae,pt
xorb
push
lret
and
movsb
in
and
sub
add
xor
stc
lret
add
pop
jnp
mov
inc
xchg
add
mov
sti
gs
mov
cmc
xor
or
cmp
add
mov
sbb
jmp
inc
gs
mov
add
rolb
or
daa
or
mov
ret
xorb
jo
lcall
inc
bnd
cmpsb
cmp
test
push
push
roll
lods
mov
dec
pop
daa
adc
sub
push
dec
subb
xchg
shr
lret
ficomps
xchg
xchg
and
mov
add
insb
adc
sti
sub
addl
movsb
sbb
jmp
movsb
fistpl
imul
add
sbb
out
xchg
mov
xchg
pusha
or
sahf
mov
xchg
jo
inc
push
int
fs
jbe
mov
out
imul
add
call
mov
pop
enter
pop
iret
jbe
mov
aad
dec
add
dec
xor
fsub
jle
hlt
aas
push
or
ret
stos
movsb
and
jae,pt
out
jecxz
adcb
mov
jl
pop
shl
pop
pop
lds
int
js
ss
lahf
fwait
mov
or
sarb
xchg
or
push
xchg
jmp
jo
lock
loop
mov
daa
xchg
dec
sbb
frstor
lods
jne
sbb
mov
es
push
or
sub
gs
test
add
addl
jno
mov
aad
add
jnp
sarb
cmc
cmp
xchg
xchg
data16
lahf
xchg
sbb
scas
jl
adc
add
jmp
ds
nopl
cmp
jnp
js
popf
test
stc
jge
stos
mov
lods
and
push
pushl
push
in
fisubrs
dec
add
add
jae
and
jae,pt
and
repnz
aas
xchg
push
notl
xchg
xchg
test
cmp
cmp
cmp
nop
inc
lock
cltd
jne
and
pop
and
daa
mov
add
push
and
xchg
rolb
xchg
popa
das
roll
or
dec
inc
mov
int
iret
aam
ret
add
mov
push
rolb
push
in
gs
mov
scas
cwtl
ljmp
pop
mov
add
fists
add
lods
cli
ja
ret
mov
sbb
jl
xlat
pop
mov
mov
cmpsb
jl
pop
shl
pop
pop
stos
jle
cld
outsl
popa
fnstenv
rcrb
nop
jl
pop
shl
pop
pop
shl
bound
flds
add
aad
subl
jno
or
adc
and
adc
cmp
xchg
cmp
popa
or
mov
bound
das
xchg
pop
sub
mov
sub
add
jo
push
cmpl
push
push
mov
int
add
dec
es
cmp
je
adc
xchg
add
dec
add
fistpll
inc
adc
xchg
gs
loope
xchg
dec
mov
gs
pushf
rorb
lcall
es
push
pop
pop
and
leave
ss
cltd
mov
icebp
out
jp
inc
sub
inc
cmp
cld
adc
flds
lcall
out
rolb
pop
fs
movsl
cmpsl
leave
mov
jns
js
pop
iret
daa
dec
add
cs
lods
imul
clc
sub
out
int
popf
stc
dec
mov
mov
or
lret
cmp
or
add
aam
fidivs
test
stos
fimull
popf
push
pop
gs
and
test
jl
pop
shl
pop
pop
shl
pop
pop
shl
pop
outsl
in
xchg
out
dec
repnz
mov
nop
dec
shll
pushf
ss
mov
fsubrl
fsubs
mov
inc
sti
sahf
mov
mov
mov
ja
adcl
adc
jb
mov
pop
andb
ret
js
lcall
fdivs
push
shlb
xor
rcl
dec
loopne
insl
push
jg
mov
fldt
xor
test
sbb
nop
add
movsb
fldenv
bound
outsb
fstps
daa
xor
data16
sbb
sub
shll
cmpsb
int3
adc
sti
mov
arpl
shll
repnz
add
sbb
mov
fsubr
xorl
js
rorb
les
mov
jno
add
movsl
xorb
inc
loope
jle
pop
push
pop
arpl
int
dec
pop
daa
jl
mov
inc
test
fmulp
cmc
pop
cmp
jmp
jmp
add
inc
xor
add
pushf
jecxz
xor
jmp
dec
and
sbb
enter
arpl
shll
dec
and
fmull
dec
and
gs
xlat
sbb
arpl
fdivl
test
movsl
fimull
adc
push
inc
test
dec
mov
movsl
aaa
loopne
adc
stos
adc
shl
sub
inc
mov
icebp
stc
jmp
push
jno
inc
in
push
or
clc
aaa
jne
cmp
insl
dec
adc
dec
mov
dec
leave
mov
mov
mov
aam
lds
sub
shrl
imul
adc
rcrb
aad
rcll
jmp
push
cli
or
or
add
cltd
data16
dec
imul
lock
aas
xchg
mov
lahf
in
push
jns
out
cmp
xor
cmp
jnp
out
aas
ja
cmp
pusha
pop
or
add
cld
sbbb
repz
loopw
sbb
leave
clc
daa
and
or
dec
ret
lock
xchg
shll
push
gs
cwtl
inc
mov
fcompl
mov
inc
bnd
lods
xchg
movsl
push
jmp
mov
dec
addr16
pop
push
dec
aaa
cmpsl
cmc
and
push
lock
sub
scas
mov
sbb
out
pop
sub
or
xchg
ror
out
or
mov
inc
sub
dec
gs
fbstp
jge
xchg
cmp
pop
fnsetpm(287
jmp
in
daa
inc
sarb
aas
cmpsl
mov
adc
sbbl
test
xorl
cli
cmp
xchg
push
sbbl
std
xchg
sbb
mov
cmpb
push
cmp
xchg
dec
scas
add
inc
or
xchg
jae
les
test
ror
pop
mov
adc
fimull
jb
xchg
inc
inc
dec
or
inc
outsl
and
add
popa
sbb
xor
mov
out
and
mov
leave
or
jl
cmp
in
ss
repz
mov
fiaddl
inc
lds
mov
loop
cmpsl
jmp
mov
mov
loop
stos
les
sti
aad
imul
mov
pop
insl
ja
addl
push
sub
xor
lods
sbb
ss
sub
push
add
loop
in
adc
int3
mov
fsubrp
ljmp
adc
leave
mov
sub
xchg
xor
outsb
lcall
push
xchg
fwait
mov
dec
dec
mov
mov
cwtl
dec
stc
mov
dec
stos
xchg
jmp
xchg
in
lock
or
cmp
mov
push
mov
fmull
lea
sub
xor
test
iret
xchg
sub
sub
jns
imul
push
jge
bound
jb
insl
add
sbb
je
repnz
and
or
or
aad
in
inc
sub
lods
sbbb
lahf
push
imul
sub
or
je
jbe
cmc
jp
mov
push
lret
lods
loop
out
fwait
movsl
xchg
int3
icebp
arpl
xchg
adc
scas
xchg
sbb
inc
cmp
and
call
pop
cmp
mov
imul
into
int3
push
out
sub
in
call
push
add
nop
inc
lret
sub
push
or
repz
aad
in
bound
sub
out
xchg
jmp
and
ror
xchg
test
or
push
cmp
mov
in
xor
mov
lds
std
lret
mov
push
cmp
adc
icebp
push
sub
jo
popa
xchg
lock
cmp
or
mov
cs
pusha
arpl
je
ret
sub
dec
dec
lea
test
jo
mov
fucom
scas
les
shrb
jo
ja
stc
inc
mov
dec
xor
iret
dec
mov
dec
fs
dec
push
and
xor
jae
inc
push
out
jl
movsl
imul
xchg
adc
jl
or
addr16
cmpsb
daa
popf
shll
into
and
xlat
in
jo
mov
popf
adc
and
fdivrl
es
pop
loop
rcrb
sub
popf
xor
dec
xlat
mov
and
test
je
inc
mov
gs
inc
pop
daa
pop
push
mov
sub
push
dec
push
cltd
sub
cmc
int
xor
out
push
iret
xor
cmp
dec
lahf
rcr
lods
xchg
cmp
stos
add
adc
and
sti
nop
hlt
pop
pop
add
pushf
scas
aas
pop
call
es
pop
hlt
jno
lods
ljmp
jno
add
push
jmp
xor
test
mov
call
cmpsl
sbb
in
insl
lahf
out
loop
jnp
out
frstpm(287
xorl
xchg
daa
jnp
jge
idivb
ljmp
dec
xchg
xchg
push
pop
xchg
fcompl
fisubrs
fcmove
mov
dec
sub
mov
add
pop
insb
adc
push
dec
sbb
fwait
scas
add
pop
push
icebp
sbb
int
outsb
sbb
sahf
sbb
sbb
cwtl
shll
sub
inc
stos
rclb
popa
jns
enter
test
ds
mov
mov
in
rcr
xchg
pop
pop
mov
sbb
idivb
in
sti
outsb
inc
xchg
in
push
inc
jmp
icebp
fdivl
jmp
call
jns
scas
push
leave
mov
icebp
mov
xchg
jno
test
adc
mov
sbbb
leave
in
and
jl
mov
dec
lret
jbe
lock
je
xor
xlat
imul
or
rcl
sbb
pop
ret
cmpsl
js
inc
in
subb
mov
popa
repnz
js
push
lock
dec
sub
xchg
mov
push
jle
mov
dec
fldenv
test
jmp
push
iret
jns
jbe
bound
call
daa
jbe
jp
imul
pop
mov
mov
rol
jmp
arpl
mov
fdivrs
dec
scas
add
iret
sub
sbb
popa
inc
cmp
mov
dec
dec
inc
lock
pushf
lcall
mov
jecxz
jb
icebp
outsb
orb
fistpll
jne
pop
scas
xlat
call
jg
loopne
hlt
pop
aad
adc
fnsave
insb
sub
adc
in
fiadds
adc
mov
ja
cmp
jns
in
sbb
add
jecxz
adc
clc
inc
sub
out
push
adc
aas
pop
rcrl
aam
ja
into
fldpi
lds
mov
mov
or
pop
in
xchg
inc
push
pop
out
adc
lcall
push
push
jb
mov
jo
pop
fmul
jae
pop
push
mov
outsb
push
push
call
inc
outsl
jne
out
sub
es
and
lods
or
insb
ret
sbb
xor
push
adc
sbb
jecxz
jns
mov
add
mov
fimull
lahf
cmp
mov
cmp
rclb
sbb
insb
mov
mov
icebp
out
lcall
jne
sub
fisubl
mov
nop
dec
imul
addr16
push
lahf
arpl
mov
pushf
faddl
jae
inc
and
sbb
nop
cmpsb
xchg
add
nop
adc
mov
fnstenv
pop
pop
dec
aad
lahf
push
push
mov
dec
and
orb
xchg
cmpsb
outsl
shrb
dec
cmp
lods
mov
je
test
lahf
loopne
mov
lretw
pop
lock
inc
addr16
out
fmulp
mov
mov
cmp
iret
stos
sbb
lahf
movsl
scas
subl
gs
insl
ret
mov
sbb
add
test
scas
ret
sub
scas
push
add
insl
sbb
dec
sub
cmp
lahf
mov
xchg
lret
stc
cmpsb
or
out
lcall
dec
jnp
pop
ret
xor
dec
fdiv
leave
pop
loope
mov
pop
arpl
lods
test
and
int
mov
in
push
sub
xlat
jge
sub
es
in
mov
icebp
pusha
shrb
xchg
popf
rorl
or
sarb
sahf
xor
clc
adc
xchg
push
aaa
mov
xchg
fdivs
inc
adc
and
mov
ficoml
orl
fisubrl
loope
or
mov
xor
lods
jno
mov
mov
and
xchg
xchg
mov
icebp
cld
adc
sub
mov
and
cwtl
imul
ljmp
add
cwtl
inc
fildl
shrb
sbb
divl
out
daa
add
into
dec
insb
aad
sbb
jg
mov
sub
mov
aas
js
adc
mov
js
out
aas
add
pusha
pop
stc
jne
out
mov
pop
mov
out
inc
je
test
lock
lods
push
xorl
pop
pop
jmp
and
sbb
in
inc
popa
mov
test
cmp
icebp
inc
push
mov
jl
insb
pusha
pusha
or
cmp
clc
adc
shll
outsl
xchg
arpl
sbb
arpl
mov
cmp
adc
vsubsd
and
fisubrs
dec
sarb
js
xor
into
sbb
addr16
jae
out
push
adc
adc
jg
sbb
xor
jle
mov
xor
movsb
adc
movsb
jmp
mov
clc
xor
push
lock
adc
ds
push
lock
bound
lcall
mov
lods
and
clc
movsl
jo
mov
out
xor
stos
xchg
leave
push
xchg
mov
mov
sub
xor
je
push
lea
sbb
xor
ret
imul
cltd
cmpsb
notb
pop
push
mov
or
dec
sti
es
and
or
mov
mov
push
in
push
xor
ljmp
test
popf
cwtl
loopne
jmp
adc
jae
push
in
mov
das
stc
cli
mov
addr16
cwtl
pop
dec
cmpsb
adc
adc
jb
push
clc
cmp
mov
xor
xchg
adc
and
sub
add
in
mov
fistps
xor
rcr
adc
mov
sbb
xchg
out
push
xchg
lret
or
bound
and
push
pop
mov
mov
cmp
jne
aas
icebp
test
pop
cltd
sub
rclb
insb
mov
sbb
sti
imul
popa
mov
call
icebp
sbb
and
mov
dec
push
dec
ret
mov
mov
fstpt
push
aad
pushf
faddl
push
dec
aas
push
add
mov
loopne
push
pop
push
xchg
jge
popf
mov
pop
xchg
adc
push
inc
add
jg
ds
mov
aad
sbb
lcall
push
pop
inc
mov
movl
in
je
mov
arpl
mov
movsb
adc
or
sbb
push
nop
out
testl
insl
mov
ret
xor
ficoml
jb
cmp
outsb
inc
pop
stos
xor
xor
in
pushf
jl
shlb
mov
pop
push
int3
ja
dec
fwait
fwait
mov
arpl
in
repnz
mov
xor
loope
shlb
roll
adc
fdivl
insb
pop
pop
jle
loop
push
xchg
mov
cwtl
sbb
iret
add
not
in
cld
xlat
cld
mov
xchg
int3
stc
ds
mov
in
adc
std
mov
jl
lret
cltd
fwait
and
dec
and
jge
ficoml
xchg
movsl
mov
cmpl
or
xchg
mov
pop
adc
jle
cmp
scas
imul
mov
lea
fstps
mov
mov
cltd
mov
adc
dec
cltd
fadds
cmp
push
cltd
mov
pop
cmp
and
dec
jb
lods
aam
cmp
lds
rolb
adc
jmp
jno
xchg
pop
cltd
icebp
push
or
sbb
lret
loope
xor
add
shll
cmc
out
insb
and
jg
repz
xlat
mov
orl
imul
jnp
stos
jle
or
fstl
or
jmp
jae
cltd
xchg
and
fimuls
mov
sbb
xor
sub
mov
aas
push
xlat
mov
sbb
loop
rcrb
jg
stos
mov
test
dec
fisubs
cltd
pusha
add
jo
add
leave
rclb
mov
insb
cmp
lds
mov
push
inc
imul
cmp
mov
push
mov
imulb
aad
jle
add
xor
out
imul
pusha
or
dec
mov
push
jns
imul
jg
dec
add
lock
cmp
jmp
sbb
cmpsl
xor
inc
inc
je
lods
gs
add
clc
pop
adc
sub
lcall
xor
leave
andl
mov
sbb
ss
pop
cmp
filds
cwtl
sti
push
inc
addr16
daa
cmpsb
or
jl
mov
addr16
out
push
mov
addr16
out
mov
insb
cli
sbb
add
sub
adc
jne
pop
inc
pushf
into
and
xchg
dec
mov
xor
ds
insb
es
stos
ds
lahf
add
dec
add
add
jmp
mov
sbb
clc
push
testl
aaa
fldl
or
and
je
and
jo
push
outsl
ljmp
cmp
cmc
pushf
in
add
call
ja
or
add
xor
insb
jmp
or
mov
xchg
imulb
mov
aam
sub
jns
testl
outsl
mov
in
xor
ds
stos
mov
cs
cwtl
mov
pop
and
lea
mov
or
dec
pop
mov
push
movsb
mov
xlat
adc
cmpb
repz
mov
push
pop
sub
aad
arpl
push
adc
xchg
pop
xor
add
dec
or
test
and
mov
mov
test
sub
lods
fidivrl
jb
mov
cmp
mov
gs
test
push
psubb
xchg
cmpsl
leave
int3
mov
std
and
popa
mov
movsl
cmp
adc
repz
mov
int
movsb
loopne
mov
jae
xchg
inc
jge
shlb
test
or
xor
fisttpl
test
cli
cmpsb
and
pop
imul
inc
mov
fstps
rcrl
fisubrl
sbb
std
fnstcw
lods
jl
shr
adc
pop
stos
in
adc
dec
xchg
lret
pop
pop
mov
pop
aas
mov
dec
and
mov
pop
pop
or
pop
sub
dec
sbb
xchg
and
int3
or
mov
ss
push
inc
ljmp
inc
inc
inc
rolb
xchg
lea
mov
mov
adc
adc
xchg
inc
push
out
mov
cwtl
ret
push
mov
fisttpll
divl
lahf
xchg
jae
roll
xor
test
out
leave
addr16
lock
scas
cld
mov
jge
addr16
stc
mov
mov
and
pop
cmpsl
fs
lods
jns
pop
push
jge
scas
sub
and
fwait
push
and
xchg
dec
rol
xor
dec
add
nop
fs
mov
in
fsin
rorb
xchg
subl
lcall
jp
shrb
dec
xor
jmp
es
shrl
dec
sub
or
mov
xchg
fsubrs
nopl
or
stos
dec
stc
rcrb
mov
adc
xorl
jmp
pop
add
sbb
test
fidivrl
inc
rol
addl
jns
mov
push
adc
jle
mov
dec
mov
pop
mov
insb
dec
repnz
cmpl
sarb
mov
jnp
or
jl
xchg
sbb
sti
fidivl
imul
out
repnz
dec
jle
notb
ss
insl
pop
and
sbb
shl
mov
push
push
lods
shlb
mov
xchg
pop
mov
addr16
int
xchg
xchg
lret
jne
mov
pop
aad
test
dec
push
mov
stos
cmp
xchg
fcmovbe
mov
push
loopne
pop
insb
lret
adc
mov
aas
mov
lcall
cmp
mov
dec
or
push
lcall
sub
repnz
in
lods
sub
mov
popl
xor
imul
cmp
icebp
pop
xlat
pop
dec
ffree
push
or
repnz
dec
xlat
mov
repz
cmp
push
cmp
lahf
ret
xor
lea
mov
fimull
inc
xchg
jp
fcmovu
in
loopne
loopne
pop
mov
aas
in
or
and
int3
sub
push
js
push
jae
push
dec
ret
rep
addl
pushf
movsb
daa
loope
inc
icebp
sub
or
xor
sub
sub
push
adc
add
cld
and
sub
shrb
cmp
pop
iret
loope
sbb
xchg
add
xor
repz
jno
mov
cmp
push
xor
aas
movsb
push
jae
aas
fld
out
sub
call
cmpsl
sub
adc
in
lods
fs
push
pop
sub
cmpsb
push
or
pop
int3
add
in
xchg
lods
movsl
xchg
jns
repz
xor
scas
and
inc
repz
pusha
jmp
popa
aad
mov
mov
addl
mov
imul
pushf
sti
xor
lahf
je
jb
mov
test
jle
xchg
jecxz
cltd
inc
idiv
das
fs
xchg
imul
jb
js
insl
jmp
xor
test
sarb
sar
push
rclb
repnz
scas
in
add
push
jns
jmp
mov
push
hlt
mov
pop
xchg
fistl
shl
pop
cwtl
pop
pop
aaa
lret
in
mov
mov
mov
jmp
fstpl
repz
mov
inc
frstor
add
popf
mov
add
jecxz
mov
pop
or
repnz
cs
gs
mov
sti
lret
xchg
mov
xor
mov
pop
pop
and
pop
rcrl
mov
xor
mov
aad
inc
scas
sbbl
fidivrl
push
add
and
in
negl
pop
sti
loope
cmp
fbstp
pushf
sarl
fildl
cmpsb
mov
lea
sbb
mov
pushf
in
xor
leave
push
mov
leave
jl
add
push
sbb
shll
jae
lahf
test
daa
loope
and
sub
and
or
add
mov
adc
inc
adc
sub
push
pushf
push
jae
push
dec
adc
cmc
jmp
adc
mov
sub
bound
sub
es
mov
sbb
das
jnp
adc
push
mov
mov
jnp
sti
push
pop
fnstcw
fiadds
pop
mov
das
inc
int
subl
rcrl
and
jp
or
scas
jp
out
jmp
mov
add
sbb
in
imulb
cmova
push
jle
pop
cmp
pop
jnp
cmp
sbbl
and
push
pop
sub
movsl
dec
mov
lea
jmp
mov
icebp
gs
adc
call
push
lds
xchg
addl
in
cmp
stc
stos
or
movsl
test
add
mov
aas
test
dec
jnp
ja
mov
push
out
mov
push
or
add
pop
add
mov
add
ret
lcall
cmp
adc
mov
adc
cmp
and
loope
gs
mov
scas
push
and
aam
xchg
cmp
out
inc
cld
leave
popa
gs
idivl
xchg
xchg
lock
inc
push
dec
inc
add
xchg
bound
enter
pop
xor
push
mov
push
sub
mov
lds
or
stos
xchg
lcall
fldenv
lret
and
imul
xchg
mov
filds
dec
push
scas
or
ss
mov
pusha
jmp
cmpsb
movsb
and
adc
cmc
test
fidivrs
adc
pop
mov
push
aas
and
pop
xor
std
orl
sbb
xor
push
sahf
push
leave
cs
dec
cmp
test
jno
pop
int3
push
idivl
mov
lock
jmp
fimull
out
fnstcw
jbe
mov
fs
xchg
lret
sub
dec
leave
shrl
outsb
out
aaa
lret
faddl
dec
in
pushf
mov
fnstenv
insl
stos
imul
and
cmp
push
pusha
clc
mov
in
push
ret
jl
jg
pop
insb
mov
aas
pop
into
movsl
insl
ret
pop
test
xor
and
mov
mov
jno
std
jg
mov
dec
xor
xchg
clc
xor
cmp
push
fbld
test
scas
jo
outsb
outsb
cmc
movsb
xchg
fcmovnb
push
popf
push
mov
cmpsl
lods
out
scas
in
xchg
dec
xchg
adc
mov
cli
repz
out
jle
out
adc
mov
cld
shrl
jb
pop
cmc
dec
clc
xor
mov
xchg
pop
fisttps
cmp
lock
mov
lret
mov
repnz
or
and
jns
jo
imul
or
adc
sub
int3
pop
pop
loop
in
sub
out
lds
bound
nopl
test
push
xchg
mov
clc
repz
cmp
int3
pop
out
clc
scas
sarb
jno
test
fs
ret
arpl
in
cmp
cmpsl
push
cmp
or
add
test
cmp
and
and
shlb
adc
mov
cmp
fcomps
in
pop
inc
cmp
mov
push
fistpl
shl
add
fildl
jns
aam
push
mov
jno
jo
adc
insb
ficompl
ss
mov
mov
movsl
add
pop
jbe,pt
test
push
jp
xchg
inc
push
out
dec
cmp
inc
sbb
inc
cmp
or
test
or
mov
or
lock
push
ljmp
jmp
inc
dec
mov
jle
and
fidivl
gs
jne
pop
jl
xor
icebp
push
repz
xchg
xor
sbb
cmp
push
clc
sbb
mov
pop
mov
ficoms
and
pop
or
adc
mov
repz
sub
dec
in
out
vmwrite
mov
mov
xchg
repz
jb
mov
call
cs
lock
cmp
clc
dec
test
insb
mov
popf
call
jbe
add
add
sbb
adc
cmc
loopne
cmp
push
jne
repz
aaa
pop
mov
callw
push
and
lds
cwtl
loopne
sub
repnz
adc
pop
mov
fistpl
push
mov
decl
cwtl
dec
jo
mov
dec
aas
xchg
xchg
or
inc
xor
sbb
aam
inc
mov
scas
jge
or
hlt
and
pop
cmp
data16
popa
loope
inc
pop
xor
icebp
xchg
rcll
movsl
fbstp
add
mov
dec
mov
mov
cmp
fidivs
jno
enter
call
add
jb
into
dec
adc
dec
daa
jl
popa
sahf
cmpsl
arpl
sbb
into
ffree
adc
in
xchg
add
mov
xchg
mov
add
or
test
and
cmp
adc
sub
mov
mov
add
xor
sub
adc
adc
mov
sub
imul
outsb
cli
cli
adcb
lahf
cmc
pop
js
dec
icebp
lods
fcmovne
shrb
jo
iret
inc
aad
pop
insl
nop
lea
add
call
adc
int
pushf
inc
xchg
mov
data16
movsb
add
or
pushf
faddp
push
movl
insl
mov
xchg
movsb
pop
ret
rcl
out
sti
push
lock
or
inc
testb
mov
xchg
pop
clc
nop
stos
sub
mov
iret
out
pop
xor
int
faddp
inc
mov
push
leave
pop
or
mov
push
sub
pop
int
lods
or
adc
xchg
std
and
aas
lahf
xor
ret
add
dec
insl
mov
setne
cs
data16
mov
test
cmp
andb
fistps
dec
push
les
scas
rcll
mov
adc
push
loop
xchg
paddsw
add
rclb
or
mov
les
jle
and
add
jnp
insb
inc
hlt
movsl
cmp
add
push
mov
mov
push
ficompl
jno
popf
jns
pop
add
pop
flds
scas
scas
mov
add
sub
std
mov
sahf
inc
pop
xchg
leave
das
adc
lea
shlb
push
es
nop
xchg
pop
es
xor
roll
test
cmpsl
jle
and
outsb
stos
push
movsl
sti
mov
aad
gs
push
fistps
xchg
bound
shlb
cmc
jo
mov
out
movsb
cld
sahf
sbbl
inc
ret
lods
test
cmpsb
lret
pop
out
in
popf
pop
xchg
inc
inc
adc
das
mov
lods
dec
leave
sbb
xlat
ror
or
add
push
lcall
and
xor
popa
imul
jmp
push
nop
mov
cmpl
enter
adc
cmpsl
into
addr16
dec
das
or
mov
test
ljmp
mov
sahf
aaa
xchg
aaa
inc
and
jo
ljmp
ret
pop
ds
and
aad
repz
addr16
into
insb
cmp
inc
sti
sbb
xor
jb
push
ss
sahf
rcrb
sbb
sahf
push
xchg
add
mov
push
in
xor
or
sarl
cmp
add
fwait
mov
inc
les
sub
push
push
jne
dec
fdivs
jno
mov
iret
xor
mov
sbb
cli
add
sarb
inc
hlt
outsb
jo
hlt
cmc
and
push
jns
insb
add
or
add
in
mov
popf
xor
sub
rolb
push
mov
xchg
pop
inc
pop
xor
cltd
aas
pop
or
pop
add
dec
cmpsl
dec
clc
repnz
cs
out
push
mov
adc
cmp
sub
or
pop
and
pop
pop
jb
pop
inc
lds
enter
or
fs
dec
inc
or
cltd
jge
out
push
inc
pop
cwtl
xchg
inc
push
xlat
xchg
pop
add
fnstsw
push
mov
daa
push
push
sub
jl
xchg
xchg
push
mov
xlat
mov
adc
cli
lods
lahf
mov
or
vcvttss2si
aaa
mov
mov
pop
gs
pop
sti
mov
roll
fnstsw
or
fstps
pushl
dec
lods
dec
cmc
push
imul
dec
xor
movsl
push
mov
pushf
sub
lcall
and
xchg
pop
ss
pop
sub
addb
shrb
lcall
dec
sti
pop
jge
pop
in
mov
imul
enter
cmp
repnz
or
jmp
mov
mov
push
aad
push
mov
adc
mov
scas
gs
add
loop
and
cwtl
jb
jecxz
adc
and
loopne
cmpsb
enter
and
sti
mov
iret
call
ret
pop
add
shr
popa
or
dec
and
xchg
push
lahf
xchg
cmp
clc
fwait
cmp
fmul
lcall
aad
pop
lahf
xchg
jae
xchg
sub
push
repnz
mov
jb
dec
mov
fidivrs
inc
out
loop
ss
jnp
cmpl
cli
mov
mov
push
xlat
mov
mov
ficomps
sbb
dec
jecxz
fcom
sti
xchg
pop
xor
xor
xchg
stos
pop
or
add
aas
and
outsb
lods
dec
js
or
loope
and
fiaddl
out
mov
sub
xchg
scas
cmp
ret
xor
jo
orl
fiaddl
xchg
notl
xor
dec
out
fiaddl
lret
iret
in
pop
daa
imulb
int3
mov
add
sub
or
repz
ds
jno
movsb
outsb
in
fcmovne
mov
jle
arpl
mov
push
mov
es
stos
repnz
dec
inc
mov
sub
dec
loopne
add
mov
ds
adc
jb
insl
dec
mov
mov
loop
cs
xchg
xlat
inc
push
xor
xchg
add
jmp
pop
lcall
add
rclb
push
xor
push
stc
or
and
adcl
mov
js
mov
arpl
xor
pop
push
addr16
mov
bound
adc
pusha
xchg
add
ret
lret
cltd
cmc
mulb
push
pop
mov
push
dec
add
lds
icebp
imul
or
jb
jmp
inc
adc
imul
xor
lret
loop
push
out
cwtd
int
std
scas
fdivs
and
decb
mov
fstpt
cmp
divl
cld
aaa
shll
in
add
push
mov
lcall
fisttpll
add
adc
sbb
iret
inc
and
and
dec
rcrl
fcomps
push
lahf
lret
jp
adc
mov
les
les
xchg
sbb
or
mov
test
imull
push
decl
daa
ds
fdivrl
test
andb
or
sahf
out
dec
popf
rcll
rcr
cmp
stc
fdivr
ljmp
ret
fmull
mov
dec
push
inc
ret
stc
dec
xor
outsl
jae
mov
xchg
pop
bound
andl
mov
iret
scas
jle
add
mov
clc
je
mov
inc
pop
push
xchg
in
lock
sub
dec
mov
movsb
cmp
es
std
dec
push
loope
adc
hlt
inc
inc
pusha
ja
stos
jle
sub
dec
je
pop
xchg
mov
jp
xor
mov
xchg
cwtl
es
fwait
popf
pushf
pop
push
jle
jecxz
cs
xchg
add
mov
dec
xlat
jb
pop
mov
test
mov
push
into
cmp
dec
in
xchg
into
shrl
cmc
push
test
adc
out
inc
enter
sbb
or
xor
and
push
jl
jp
push
mov
cli
mov
add
lcall
iret
enter
fstpt
dec
notl
ret
or
repz
xchg
addr16
xor
dec
adc
test
jge
push
sbb
inc
jp
push
jno
loope
inc
sbb
sbb
pop
outsl
in
aam
mov
out
inc
pusha
movsl
or
inc
fnstsw
jnp
mov
dec
sub
adc
fildll
sahf
mov
repz
sub
pop
mov
incb
pop
push
cmpsb
pushf
cmp
push
push
stos
xchg
cltd
roll
sub
inc
inc
jno
jb
scas
cmp
xchg
mov
jae
xorl
lea
stos
int
xchg
sbb
push
pop
loopne
inc
add
jle
and
icebp
mov
popa
iret
or
data16
jp
inc
sub
ss
fwait
aam
or
out
adc
filds
int
ret
push
lahf
rcrb
pusha
fnop
cmp
dec
repz
mov
mov
test
popf
pushf
daa
cltd
mov
es
outsl
adc
xchg
loopne
and
daa
cwtl
orb
pop
mov
cmp
mov
cmpsl
or
scas
ja
inc
fnsave
or
pop
stos
jbe
sub
scas
mov
sahf
and
ret
xor
test
popf
lcall
xlat
divb
testl
jl
push
addr16
loopne
push
loop
pop
jmp
insl
ret
insl
add
mov
pop
repnz
add
movsb
jae
jbe
xor
les
fwait
fs
lods
mov
sahf
leave
pop
in
sub
adc
les
lods
xchg
stos
fwait
cld
mov
and
cmp
adc
in
push
cwtl
cmp
xchg
pop
hlt
lret
adc
repnz
jmp
inc
pusha
sub
shll
xor
sbb
xor
in
inc
pop
mov
iret
out
adc
cmp
dec
popf
into
pop
inc
dec
outsl
shl
movsl
pop
add
lds
pop
xchg
xchg
cmp
xor
je
jbe
and
push
pop
dec
js
and
or
gs
mov
jge
push
jg
dec
xchg
add
mov
pushf
mov
add
add
sbb
in
je
pop
shll
leave
mov
call
add
lea
out
add
cltd
cltd
lods
insl
xlat
pop
call
xchg
sub
mov
adc
and
out
les
dec
jg
in
movl
lock
insb
add
mov
cmp
sub
jae
xor
cmp
ja
pop
dec
jmp
push
mov
sbb
adc
repz
inc
cmp
insl
cld
xor
aam
jmp
jae
clc
dec
in
jle
test
es
sub
and
lods
push
pop
enter
fiaddl
aam
sahf
mov
jns
or
mov
ret
jbe
jmp
mov
lahf
iret
filds
mov
popa
adc
or
mov
lcall
pushl
push
sub
sub
pop
shrb
mov
mov
ret
pop
jae
xchg
dec
fisttps
xchg
cli
jg
pop
mov
ret
jbe
test
sbb
xchg
lods
dec
adc
adc
fdivs
mov
xor
dec
inc
sub
dec
cmpsl
jge
xlat
or
dec
roll
dec
xchg
xchg
sub
negb
jo
sahf
mov
jg
test
int3
mov
jo
jecxz
out
or
arpl
mov
call
and
or
in
shr
cwtl
inc
sub
and
pop
and
push
xor
add
pop
ret
dec
ss
jg
push
push
out
bound
dec
jle
jp
jnp
push
push
aad
popf
pushf
pusha
ja
cmp
sub
xchg
fildl
mov
imul
loopne
and
pop
lcall
js
shrb
cwtl
cmp
mov
cmp
cmp
sub
ret
sub
stos
xchg
hlt
xor
aas
in
add
adcl
lea
push
or
ffree
out
dec
ss
adc
inc
cltd
imul
shll
in
pop
pop
mov
mov
movsb
pop
push
sbb
jns
mov
rclb
bound
addb
and
push
jp
das
and
jbe
mov
sahf
sbb
pop
pop
add
sbb
repnz
cmp
push
mov
adc
or
cld
inc
jno
or
push
dec
pushl
cwtl
pop
inc
movsl
adc
sbb
lahf
rcll
lahf
cld
jne
mov
sub
notb
and
or
inc
and
adc
pop
arpl
sbb
jecxz
xlat
and
call
mov
fisttpl
mov
insl
stc
sbb
push
mov
mov
lds
aad
adc
into
xchg
xor
popa
stos
xor
inc
test
add
repz
push
cwtl
dec
lahf
cli
popf
loopne
and
fwait
cltd
cmp
pop
inc
dec
loope
mov
push
or
jp
adc
lods
mov
inc
and
es
push
stos
xchg
addb
sti
pop
in
addr16
bound
fbstp
stos
and
movl
jo
inc
negl
add
mov
inc
xlat
popa
in
mov
mov
int
push
mov
dec
push
cld
loopne
sbb
adc
jl
add
loop
mov
jno
icebp
sub
rolb
je
push
das
sbb
mov
push
fcoml
inc
mov
push
shll
adc
dec
dec
movsl
pop
adc
cmpsl
cmpb
mov
inc
push
out
pop
inc
rorl
stos
pop
xchg
mov
or
pop
jp
lds
cmp
jae
popl
sub
xor
and
mov
xchg
insb
lret
cmovl
in
cmpsb
scas
out
loop
idiv
or
sub
lahf
cmpsl
aad
mov
mov
jl
mov
testb
adc
xadd
scas
adc
mov
lea
xor
mov
inc
int3
jmp
das
pop
cmp
pushf
call
pop
pop
dec
cmp
or
in
insl
lret
inc
adc
jmp
fldenv
mov
fistps
in
dec
insl
sub
or
mov
out
aad
push
adc
arpl
jge
pusha
mov
int3
cli
inc
xor
and
mov
mov
shl
xchg
in
outsl
and
sub
xchg
mov
divl
test
arpl
pand
mov
xchg
xchg
sti
nop
insl
sbb
rolb
out
mov
dec
sarl
mov
mov
sbb
mov
icebp
loope
mov
leave
jae
dec
cmp
pop
mov
cmpsl
js
jp
out
hlt
dec
mov
cmp
dec
stos
mov
ret
cmp
outsl
add
mulb
xchg
mov
cmp
mov
cmp
movsl
pusha
mov
ds
loope
xchg
imul
xor
add
jmp
ja
loope
insb
cmpsl
mov
popa
loop
sub
shl
sub
mov
jno
scas
pop
cmpsb
mov
aad
int3
lret
mov
inc
fdiv
pop
imul
mov
data16
jns
push
adc
inc
clc
sub
mov
push
pop
scas
cmpsl
pusha
ret
mov
shlb
dec
sbb
pop
daa
cmpsl
xchg
inc
mov
cmp
jbe
pushf
inc
out
mov
insb
pop
xchg
stos
mov
mov
jg
int
jno
jo
shrl
stc
mov
into
xlat
adc
mov
cmp
xchg
xchg
mov
mov
jno
negb
ret
scas
pop
test
enter
jnp
push
xor
jmp
loope
test
push
scas
inc
rolb
mov
lods
mov
repz
fisubl
or
dec
cmp
sbbl
cmp
inc
xlat
mov
into
cmp
lret
js
cmp
inc
movsb
out
stc
push
into
xchg
testb
das
xchg
sti
xchg
outsb
xor
jae
ds
les
hlt
add
pop
or
int3
mov
scas
sbb
push
ret
sti
pop
rol
lea
push
inc
push
popa
push
mov
or
mov
pusha
shl
mov
pop
arpl
adc
fwait
pop
movsl
sahf
and
and
ffreep
shll
sub
popa
mov
mov
fdivrl
je
int3
push
mov
das
cmp
insb
push
mov
jg
push
jle
in
cld
adc
pushf
cld
jo
xchg
lods
add
ljmp
dec
mov
add
ja
inc
xchg
add
mov
arpl
xor
cmpl
in
add
imul
or
sbb
push
pusha
push
loopne
push
pop
mov
push
fists
decb
out
loopne
loopne
lcall
call
cwtl
or
cmp
lahf
cmp
push
stos
inc
sub
pop
les
mov
or
inc
push
popa
sbb
sub
mov
in
jo
shr
pop
jbe
xor
xchg
js
xchg
pop
dec
ss
addl
mov
pop
pop
pop
pop
fldt
sbb
std
sub
jge
dec
adc
jle
orl
or
push
xchg
stos
push
inc
js
pop
pop
cmc
stos
scas
fsubl
ds
and
aas
add
fwait
loop
mov
pop
mov
out
cmp
cmp
iret
sbb
add
in
jnp
jg
imul
jmp
outsl
addl
xorb
sbb
aad
jmp
stc
mov
fmuls
adc
popf
jo
popf
dec
dec
sahf
cld
xchg
xlat
scas
pop
lea
inc
fcmovbe
xor
pop
push
inc
shrl
rorb
cltd
xchg
mov
pop
shr
pop
fimull
xchg
xor
mov
popa
icebp
outsl
sbb
iret
les
push
ss
adc
pop
nop
sbb
stos
test
iret
bound
aam
sahf
dec
adc
push
shrl
fsubrp
sar
cmc
sub
cmpsl
fldcw
jge
ja
cmp
mov
push
fnstsw
mov
mov
negb
mov
xlat
push
ljmp
sub
push
lcall
push
sbb
push
dec
mov
into
hsubps
add
fdivs
adc
mov
scas
sbb
cmp
mov
fisubrl
fnstcw
movsl
inc
xchg
pop
lds
jo
pop
xor
inc
aad
push
adc
sub
enter
dec
adc
roll
mov
jno
sub
mov
mov
data16
test
and
pop
jo
rorb
imul
xor
xor
mov
popf
pop
mov
data16
lcall
scas
daa
std
xchg
cltd
mov
xor
sbb
sarb
push
inc
push
push
sti
mov
cvttps2pi
xlat
jmp
cmp
hlt
push
pop
aad
or
outsl
mov
dec
repnz
mov
mov
hlt
jne
sub
push
cltd
add
add
iret
in
pop
pop
movsb
mov
movsb
mov
in
adc
adc
sub
lret
cs
stc
ret
mov
mov
pop
xchg
out
inc
leave
push
mov
pop
push
xor
cli
mov
jle
rcr
inc
xor
jle
sti
add
es
jbe
xchg
mov
add
mov
mov
mov
adc
into
push
adc
push
inc
xchg
fsub
or
mov
xchg
cmp
sub
jb
and
pop
das
out
and
in
push
repz
pop
cltd
lret
cs
imul
fildl
stos
mov
adc
test
mov
mov
dec
mov
addb
insl
inc
mov
cmovp
aam
arpl
add
jns
daa
and
pop
dec
lock
int3
jb
jno
mov
inc
movsl
scas
mov
lret
mov
dec
mov
cmp
ret
popa
and
push
inc
lock
icebp
adc
iret
outsl
lahf
push
andb
hlt
rorl
dec
push
leave
jno
and
dec
stos
xor
and
in
sahf
jle
inc
xor
out
mov
clc
lds
mov
aad
popa
dec
mul
or
pop
jecxz
cli
mov
iret
frstor
jae
iret
ja
mov
lahf
dec
sbb
pusha
mov
stc
cmpb
add
call
jnp
aad
call
in
repz
or
sahf
mov
je
sbb
sub
mov
repz
push
imul
cmp
std
fnstenv
repz
xor
sbb
movl
insb
movsl
inc
in
call
scas
imul
fwait
xor
push
lods
mov
into
xchg
push
pushf
stos
sti
sbb
fwait
mov
in
test
outsb
xchg
in
mov
insl
cmp
outsb
addr16
lret
push
sub
mov
cltd
insl
pop
insb
cmpsl
es
add
sbb
aad
cmc
push
scas
inc
enter
push
sbb
xor
stos
leave
shlb
in
jns
repz
cmp
mov
fsubr
shrl
dec
jmp
jp
push
push
mov
mov
mov
data16
cmp
popa
add
push
movsl
jne
xchg
jne
mov
mov
jle
rcrl
into
cmp
lahf
adc
and
fbld
bts
jae
mov
outsl
hlt
adc
mov
fldl
data16
add
cltd
stos
outsb
aaa
fisubrl
lcall
popa
pop
std
pop
les
pop
stc
sub
and
add
insl
popf
leave
je
int
adc
leave
js
cmp
xor
sub
cltd
out
aam
jae
jnp
or
into
pop
jge
add
mov
dec
negl
and
mov
sub
sub
mov
push
aaa
mov
jmp
pusha
push
imul
fwait
lcall
cmpsb
out
notl
mov
mov
mov
out
inc
outsb
inc
scas
insl
pop
ret
inc
and
lahf
adcl
push
push
pcmpgtw
push
js
out
lods
push
cmp
adc
fisubs
cs
test
xchg
pushf
pop
and
lcall
jne
ja
es
sub
les
das
sub
loop,pt
outsl
in
or
fisubrl
or
shlb
enter
mov
subb
and
pop
mov
sbb
cli
cld
mov
lock
adc
aad
mov
rcll
lods
pop
cmp
iret
sub
jecxz
pop
ss
inc
mov
jb
loop
jo
inc
in
fs
aaa
lea
xor
aam
loope
icebp
jg
pop
das
jb
shll
popf
pusha
xchg
push
xor
aad
sahf
xor
dec
js
lret
fstpt
adc
in
pop
sbb
ljmp
adc
xor
mov
jl
mov
cmc
mov
scas
xchg
sbb
pop
sbb
push
test
ds
mov
cmp
or
cmpsb
pop
pop
xchg
push
daa
aam
cmpl
adc
mov
cmp
push
sub
popa
scas
sbb
cltd
hlt
inc
or
das
sub
xor
pushf
fcmove
pop
and
inc
imul
lret
scas
push
imul
shlb
in
push
jge
dec
dec
pop
imul
popa
mov
fadd
std
push
add
bound
arpl
jge
pop
add
sbb
aas
sbb
jbe
push
mov
push
call
or
or
sbb
inc
pop
add
bsf
ret
sbb
add
xchg
shr
mov
jnp
and
std
bound
imul
movsl
jge
add
js
ss
fildl
addr16
cmp
xor
xchg
scas
xchg
rorl
lods
pop
std
sbb
mov
mov
push
int
push
mov
inc
imul
xchg
mov
imul
push
xlat
mov
sbb
push
xchg
and
push
popa
imul
jecxz
pop
or
lahf
mov
lock
jo
subb
addb
push
jp
cmp
jecxz
add
mov
stos
mov
enter
adc
dec
aas
jnp
xchg
inc
xor
cmp
xchg
cmp
cmpsl
xchg
stc
emms
into
mov
and
in
dec
sbb
mov
xchg
mov
cmp
jno
cmpsl
popf
cmp
into
add
lahf
sub
cmpsb
cmc
fld1
fimull
lcall
and
or
adc
push
loope
test
data16
fwait
cmp
ret
outsl
pop
rorb
inc
pop
leave
ret
adc
or
sbb
jnp
xor
mov
jae
adc
xchg
pop
push
xchg
sub
leave
jp
push
or
sbb
test
push
cmp
jo
ljmp
mov
mov
mov
cmp
js
xchg
xchg
nop
dec
adc
sbb
push
pusha
mov
cmc
jno
testl
stos
mov
push
jno
jae
mov
dec
push
adc
pop
mov
movb
aas
pop
pop
push
adc
jl
xchg
pop
xchg
jbe
ret
pop
sub
xchg
out
neg
mov
inc
movsl
fisubrs
fistpll
mov
push
aas
inc
sarl
xor
test
xchg
mov
or
ds
mov
jb
aas
test
push
shrl
mov
xlat
stos
sub
xchg
or
or
outsb
sbb
pop
pop
push
jb
adc
testl
lahf
leave
sub
jae
lcall
mov
push
or
in
enter
cmp
repz
sub
pop
add
and
inc
or
insl
roll
cltd
xchg
dec
lea
and
popf
xor
mov
sti
loopne
mov
mov
cs
bound
dec
stc
inc
scas
scas
lcall
scas
jmp
daa
pop
sub
pop
cld
ret
repnz
or
jge
pop
stos
or
jg
adc
xchg
in
mov
sbb
inc
jg
insl
popf
mov
adc
lock
out
les
adc
push
andb
jns
jle
adc
pop
lock
out
es
jecxz
pop
sbb
mov
fsubp
rcr
jecxz
jne
xor
lods
jne
icebp
xor
mov
xchg
sub
test
mov
cli
jo
dec
push
xor
dec
sub
lds
pushf
mov
pop
stc
or
dec
and
fbstp
push
lret
adc
ljmp
in
push
cmp
dec
pop
loopne
push
mov
data16
mov
imul
jno
in
cmp
pop
push
xchg
das
into
sub
cld
and
sahf
in
jmp
std
loop
xor
leave
inc
or
xor
fbstp
insl
and
cmp
sub
test
cmp
lock
dec
out
pop
pop
dec
inc
pop
mov
gs
dec
cmc
pop
test
add
inc
mov
hlt
push
push
jbe,pn
pop
pop
fs
pop
sub
sbb
mov
dec
cmp
nop
ficomps
hlt
lods
fcmovnbe
cmp
jns
cmc
xchg
shlb
dec
pop
pop
xor
notl
xlat
pop
push
icebp
jns
jns
or
lea
lahf
adc
adc
add
mov
mov
outsl
cmp
shrl
repnz
xor
xor
jle
push
and
pop
pop
hlt
shrb
and
mov
pop
sbb
ljmp
dec
xchg
add
unpcklps
lock
lods
sti
imul
inc
cs
inc
xor
xor
push
cmp
pop
das
bound
subl
and
xchg
pop
iret
jbe
je
push
xchg
loopne
mov
inc
inc
xchg
inc
mov
outsl
sbb
or
lods
repnz
test
aaa
test
mov
adc
cltd
add
enter
xchg
mov
cmpsb
jmp
add
adc
sub
call
inc
or
outsb
mov
imul
cli
addr16
scas
out
dec
das
inc
arpl
sub
lock
ss
lret
das
mov
ret
bound
xchg
push
add
add
mov
rclb
mov
mov
push
mov
xor
jg
pop
sub
xchg
mov
loop
pop
inc
add
push
cli
sbb
decb
xchg
cs
ljmp
cltd
add
dec
xchg
dec
call
inc
or
cmpsl
loopne
mov
xchg
pop
ret
in
jnp
lahf
push
int3
lods
cli
lods
jg
mov
std
sub
push
mov
stc
push
ja
add
fisubrs
fcoms
or
subl
mov
mov
xchg
shl
repz
mov
ret
push
xchg
test
cmp
movsb
shl
jg
sub
mov
divb
xchg
outsl
xorl
je
push
rcl
dec
clc
adc
gs
dec
push
add
cmc
std
and
lret
ficoml
insb
jl
push
and
mul
jl
mov
iret
lret
mov
test
adc
fidivrl
cmp
es
addb
ficomps
pop
rcrl
or
push
mov
inc
pop
fcoml
lods
pop
arpl
push
aad
test
movsb
xchg
cmpsb
and
add
or
inc
das
mov
add
adc
insl
outsl
cmpb
and
mov
clc
jne
mov
mov
scas
pop
xor
mov
lods
lock
ss
pop
dec
lods
mov
pushf
adc
mov
imul
ficoml
mov
jbe
mov
out
lahf
jl
out
ljmp
loope
add
in
xor
sub
mov
inc
stos
in
inc
out
mov
dec
or
rcrb
hlt
sub
hlt
xchg
bound
jp
adc
mov
inc
jg
dec
inc
jge
fistpll
ds
mov
sub
js
xchg
clc
rcr
sub
shll
flds
push
sahf
jmp
xchg
xchg
xor
adc
adc
jo
add
jl
fs
mov
cmp
fdivrl
pop
ret
lds
sub
or
dec
insl
popa
cltd
mov
inc
mov
aaa
sahf
ror
inc
test
jbe
pop
adc
out
dec
stos
ss
mov
scas
dec
sub
xor
mov
movsl
test
movsb
orb
add
mov
sub
pop
loop
xchg
ss
jmp
mov
nop
int
mov
negl
cld
shlb
jns
inc
dec
add
lods
and
mov
das
xchg
icebp
pop
jl
rorb
adc
inc
dec
lods
out
inc
fimull
push
mov
test
iret
sarl
push
jo
cmp
and
mov
adc
loopne
add
rclb
cld
and
fabs
xlat
dec
loop
or
mov
mov
xchg
push
inc
fsubrl
sti
mov
lcall
stos
and
mov
data16
pop
mov
pop
arpl
jne
jns
sbb
pop
sti
rorl
sti
jns
mov
xor
jno
add
xor
shrb
ss
and
rcrl
sti
dec
inc
inc
cltd
lods
mov
sbb
lcall
inc
gs
xor
in
lret
bound
cwtl
ret
repz
cld
inc
cltd
aaa
xor
or
aam
xor
inc
out
adcl
pop
insl
mov
mov
testl
adc
push
or
fimull
inc
mov
inc
push
push
popf
rorl
es
jo
mov
mov
or
sbbl
dec
decl
in
add
xor
mov
lahf
add
inc
rcrl
pop
sar
test
das
sub
or
mov
scas
icebp
sub
and
pushf
lret
xchg
stos
cltd
sub
mov
inc
fists
pushf
or
scas
pop
fdivr
lret
pushf
inc
scas
jp
mov
push
mov
push
push
inc
dec
hlt
mov
inc
cli
mov
notl
iret
hlt
push
sub
nop
nop
mov
push
jmp
sbb
ja
pop
gs
jg
mov
dec
pop
adc
adc
pop
std
xor
sub
and
sbb
icebp
sti
loop
gs
out
ret
ljmp
gs
mov
cmp
enter
push
es
sub
inc
and
lock
cld
jle
fld1
lret
ja
push
mov
push
jecxz
ljmp
les
dec
loope
test
ja
aaa
cltd
mov
jmp
cmp
inc
mov
sub
test
gs
xor
loope
mull
es
xor
push
fmulp
in
arpl
loopne
lcall
or
out
inc
cmp
scas
jge
in
cwtl
std
cmp
push
cmp
inc
in
loopne
mov
xchg
add
leave
and
sbb
sub
mov
cmp
add
movsb
je
cmp
enter
sbb
dec
ss
dec
inc
clc
push
inc
sub
adc
hlt
cmc
sbb
in
jmp
sahf
mov
sti
fcmovne
mov
push
movsl
daa
lret
insb
push
nop
pop
push
mov
mulb
popf
outsb
cwtl
sar
insb
push
stos
test
sub
ret
inc
ds
dec
pop
push
cmp
addr16
mov
subb
mov
sub
sub
sub
test
inc
js
aad
inc
xchg
add
mov
out
addr16
inc
adc
imul
movsb
sbbb
dec
dec
out
mov
repz
sti
imul
mov
outsl
pop
jne
rclb
mov
stc
dec
and
pop
dec
jnp
and
repz
enter
jnp
adc
cmpsl
out
nop
ret
inc
sbb
mov
sahf
int3
iret
cmc
ss
xor
add
hlt
lea
mov
and
shrl
push
fdivrs
pop
lret
and
add
cmp
adc
clc
mov
inc
add
inc
add
xchg
and
adc
into
adc
fwait
adc
test
ds
push
cmpsb
xchg
and
push
popf
lea
mov
incb
adc
data16
repnz
clc
jae
adc
mov
fwait
sarl
leave
mov
lahf
jbe
jb
add
xlat
mov
je
negl
test
jge
insb
rcrl
sbb
jmp
and
mov
cmp
loopne
ret
xor
sbb
adc
aaa
out
shll
cwtl
addl
xchg
mov
mov
mov
pop
test
ljmp
mov
inc
push
or
mov
xlat
xor
mov
adc
pop
xor
scas
aad
dec
outsb
add
or
mov
xor
orb
mov
sub
pop
mov
aad
shll
add
xchg
push
arpl
inc
push
xor
adc
ja
mov
shl
cmp
push
adc
cmp
std
or
jo
sarb
in
out
test
add
jge
popa
cmp
jnp
add
cld
cwtl
fs
rol
test
in
pop
popa
ret
nop
scas
dec
dec
inc
dec
or
test
mov
cmp
xor
push
xchg
jl
stc
data16
ss
mov
and
jmp
add
in
sbb
add
pushf
pop
sti
stc
cld
sub
nop
das
aas
sbb
lret
jae
sbb
cltd
int
hlt
add
inc
cld
inc
mov
lcall
cmp
jnp
inc
jb
test
mov
fnstsw
cmpsl
and
jmp
inc
or
inc
mov
jb
fstp
imul
movsl
pop
sub
and
adc
not
pop
mov
jne
mov
es
mov
mov
mov
stos
mov
adc
xchg
mov
call
mov
and
ds
iret
bndstx
mov
scas
in
add
pusha
sub
pop
ret
add
fwait
js
inc
imul
push
cmp
inc
lods
test
mov
fld
popa
stos
icebp
mov
cmp
and
pop
mov
les
fisttpll
imul
mov
add
xor
adc
mov
mov
and
and
sti
out
icebp
push
or
pushf
ljmp
std
fidivrs
mov
or
add
shll
mov
push
and
call
and
xor
xorl
cltd
loopne
push
inc
push
sbb
add
clc
jb
sbb
mov
test
push
loopne
jbe
testl
sar
adcl
lds
and
stc
xchg
cmp
jo
cmpsb
fldenv
jecxz
test
cmp
and
jle
loopne
xorb
xchg
in
add
inc
jmp
lahf
sahf
in
sbb
mov
cmpsl
test
bound
mov
mov
clc
cmpsb
add
in
les
sub
fisttpll
movsl
into
inc
scas
sti
cmp
xchg
xchg
mov
xchg
adc
hlt
sahf
mov
cs
daa
hlt
jge
xchg
clc
sub
xchg
cmp
add
xor
fs
xchg
jge
bound
les
je
pop
inc
popa
cmp
mov
add
aad
int
shrb
sbb
sub
lret
shlb
rol
push
aam
push
xchg
adc
adc
movsb
jle
fstl
ja,pt
incl
pop
or
jo
pop
aam
test
sub
ficoml
jno
push
fwait
mov
or
mov
xchg
push
in
sbb
and
xor
lret
gs
daa
jmp
in
mov
xor
lret
out
scas
or
and
pop
mov
fldcw
mov
mov
popl
mov
out
sbbb
lock
jo
aaa
scas
sbb
mov
lea
inc
in
cmp
loop
fdivr
push
jns
aas
add
cli
or
in
sarl
pop
fdivl
xor
pop
sahf
sub
dec
mov
hlt
test
movsl
mov
insb
jmp
jmp
es
adc
pop
mov
cmp
or
push
in
sub
rorb
cwtl
je
pop
cmp
mov
data16
fidivl
jg
xchg
jmp
test
mov
data16
sarb
inc
std
in
sti
mov
add
orb
outsl
sub
nop
jg
rclb
shl
jne
jne
mov
sub
xchg
lcall
shrb
jb
scas
or
mov
les
pushf
sub
sbb
fstp
sbb
lock
push
daa
test
into
sbb
sbb
rcrl
add
in
dec
inc
vpavgw
and
and
jae
sub
bound
movsl
add
mov
sub
rclb
inc
call
pop
sarb
jae
jbe
adc
mov
xchg
lods
outsb
mov
sbb
pushf
jg
inc
fs
lret
jne
fistpll
jae
add
hlt
sar
jae
out
sarb
ljmp
dec
inc
push
rcrl
vdivps
mov
in
inc
sbb
mov
lods
xchg
mov
aas
cmpsl
ds
cmp
int
adc
imulb
mov
mov
call
mov
sub
sub
neg
mov
sub
inc
adc
adc
and
out
adc
out
adc
lret
and
cli
mov
cld
sti
in
in
mulb
jbe
outsb
push
push
aas
repnz
scas
je
test
int3
arpl
xlat
sub
cmp
inc
cmp
xor
out
push
pop
arpl
adc
in
mov
cmpsb
push
stos
imul
push
mov
rep
sub
rcrl
aam
popa
leave
cmp
shl
lods
mov
loope
loope
out
mov
ljmp
insl
scas
fsubs
push
rorl
nop
and
xor
es
int3
fcmovnb
pop
insl
add
sti
or
or
pop
ret
push
pop
fistps
in
xchg
mov
sbb
mov
bswap
clc
mov
aam
adc
lahf
mov
lods
gs
jbe,pt
sub
in
dec
pop
sbb
pusha
sub
mov
das
mov
pop
stos
push
sbb
fstpl
insl
add
inc
in
fldl
lret
jb
and
and
sahf
pop
lods
mov
dec
sarl
dec
pop
mov
popf
mov
push
mov
push
or
dec
cmp
fstps
and
xchg
dec
movsb
push
mov
aam
imull
lds
mov
mov
or
rcrb
ficomps
movb
jecxz
xchg
loop
into
xchg
sub
dec
jo
lods
insl
jge
mov
icebp
fdivrl
pop
push
cs
or
les
inc
push
add
mov
outsl
inc
bound
fcmovb
lcall
dec
arpl
or
pop
lods
mov
shl
dec
les
leave
push
add
inc
push
inc
leave
lea
push
and
dec
xor
mov
add
mov
sti
sbb
pop
push
and
jle
popa
paddsb
xchg
mov
pop
add
mov
cmpsb
rclb
sub
xor
sub
std
subb
adc
xchg
and
clc
shl
sub
xchg
push
push
jg
test
ss
jns
js
jno
repz
pop
adc
and
mov
and
xchg
addr16
inc
insl
call
jge
mov
out
sahf
addr16
lret
add
das
dec
dec
aad
pop
mov
dec
add
mov
cmp
movsl
or
mov
das
inc
or
lods
jecxz
aad
and
insl
mov
dec
inc
fwait
lock
bound
mov
sub
aas
rorl
lret
sbb
mov
rcr
or
jne
rolb
pop
or
test
adc
or
rorl
pop
mov
lock
mov
xlat
and
adc
adc
fsubl
fs
mov
sbb
cmc
xchg
je
hlt
dec
icebp
jecxz
inc
inc
lock
das
mov
dec
hlt
sbb
mov
stc
xchg
out
sti
mov
gs
add
cmpl
mov
mov
inc
cmp
pop
int
test
add
setne
shlb
and
lret
enter
mul
or
xor
pop
mov
ret
dec
cmp
xchg
add
out
fcoml
fs
test
ljmp
adc
pop
out
icebp
sbb
loope
sub
cmpsb
addr16
jnp
xchg
pop
loope
aas
iret
mov
out
lds
jbe
mov
mov
insl
jbe
je
test
jae
leave
sbb
das
mov
es
out
cli
jno
mov
xorb
inc
mov
pop
loope
stc
int3
sub
rclb
mov
mov
xchg
push
fstpt
add
and
xor
mov
outsl
push
scas
jae
pop
mov
cmpsl
pop
xchg
shlb
mov
cmpsb
cmpsl
sbbl
fdivl
push
pop
arpl
cmp
aam
jmp
scas
movsb
stos
icebp
xchg
movsl
inc
xchg
mov
dec
clc
jne
rcr
mov
sahf
mov
sbb
mov
shrl
jbe
jge
mov
lods
sub
jbe
dec
cmpsb
sbb
cmp
mov
repnz
out
dec
pop
mov
or
adc
xor
xor
adc
add
mov
movl
out
iret
es
adc
fwait
cmpsl
push
roll
jle
and
or
insb
aam
jns
add
sub
push
lock
fdivs
stos
xchg
call
shrb
les
push
xor
int
jle
je
rcr
push
adc
cmp
pop
iret
sbb
daa
mov
cmpsl
sahf
xor
mov
adc
rolb
xor
int3
das
inc
insl
and
fisttps
inc
outsb
cmp
imul
addr16
outsb
test
aam
jp
in
out
lea
imul
lcall
bound
mov
mov
stos
adc
aad
into
andb
aaa
push
nop
mov
xor
xor
fsub
repnz
cmc
cmp
in
inc
xchg
push
jecxz
mov
jecxz
pop
push
enter
jmp
pop
gs
std
or
lds
loope
cmp
pop
jb
dec
xchg
pop
dec
fwait
mov
mov
lods
mov
push
mov
ret
in
cmp
cmpsb
or
mov
pop
jae
call
lret
xlat
push
ss
xor
inc
jecxz
jmp
sbb
int3
cs
cmp
int
and
fcmovne
cmp
adc
mov
enter
fnsave
pop
sti
inc
ds
jecxz
les
js
lret
sub
repnz
pop
test
cwtl
mov
add
ljmp
sbb
xlat
rcll
mov
ret
pop
pop
mov
xchg
add
mov
pop
outsb
ret
and
jb
pop
imul
movsb
add
mov
in
test
pushf
add
icebp
adc
inc
xlat
mov
fnstsw
and
lods
inc
pop
loopne
gs
loope
aam
test
out
movl
jo
ret
add
and
adc
les
adc
sbb
xchg
shrb
les
adc
pop
out
push
jl
mov
mov
push
ja
cld
cwtl
outsb
popf
mov
sub
jns
cmpb
popf
pop
test
xorb
int3
jb
and
fimuls
jae
hlt
clc
movsb
aam
aad
inc
jns
mov
out
inc
mov
cmpsb
fwait
jle
insl
subl
lcall
outsb
ret
xor
cmpsb
add
mov
lods
test
mov
inc
mov
mov
pop
hlt
std
jle
mov
or
xlat
mov
mov
xor
rorb
lea
or
cwtl
jp
xlat
int3
lods
fildll
cmp
popa
adc
sbb
iret
or
fdivrs
iret
les
lret
cltd
sub
leave
mov
mov
sub
mov
mov
cmp
cmp
push
int
lods
movl
jmp
mov
mov
mov
dec
push
xchg
mov
lods
iret
in
or
sbb
lcall
and
mov
iret
addr16
dec
mov
push
sub
mov
mov
pop
dec
cmc
fidivl
cmc
inc
lcall
cli
incb
mov
int
mov
pop
imul
xchg
jae
dec
aaa
movsb
sbb
ljmp
sub
into
mov
mov
mov
mov
mov
dec
cli
mov
mov
out
push
ds
push
xlat
jge
mov
jle
cltd
scas
pop
aaa
lods
ss
fcomps
cli
outsb
xchg
adc
iret
outsl
lds
repz
inc
jge
insl
or
push
pop
repz
pusha
mov
cmc
add
ljmp
popf
inc
push
iret
nop
sti
push
sbb
outsb
in
dec
push
xchg
xchg
or
fwait
mov
jmp
pop
fdiv
ja
xlat
movsb
push
gs
int
inc
xchg
add
mov
sub
aaa
daa
mov
sub
faddl
adc
outsl
pusha
lcall
gs
cmp
xlat
jo
mov
and
jnp
pop
fdivl
cmp
xchg
cld
mov
lods
jg
jae
rcrl
jno
fcompl
dec
cmp
test
jae
sub
std
xchg
mov
xchg
fdivrs
add
add
in
sub
or
imul
inc
mov
adc
dec
sahf
shl
hlt
lahf
jae
ja
je
leave
je
and
xchg
popf
outsl
mov
pushl
sti
rclb
gs
pop
rorb
lahf
je
pop
insl
mov
lcall
adc
fs
aaa
cmp
jge
shlb
in
cmp
cli
pop
mov
add
jmp
jne
jnp
in
adc
lret
sub
and
push
sarb
int3
jp
std
mov
pop
mov
jl
mov
shrl
data16
shr
mov
fwait
stc
aad
int3
xchg
dec
lock
cltd
bound
mov
pop
xor
loopne
push
jp
int
in
bnd
dec
adc
imul
mov
out
je
push
adc
mov
cmp
mov
push
popf
popf
movsl
cmpsl
lret
ret
or
loope
test
popl
dec
jecxz
adc
imul
dec
pop
or
pop
and
pop
xchg
push
pop
push
push
fisubrs
insl
add
test
je
mov
mov
into
out
adc
lock
add
sahf
lret
enter
push
ret
jae
fdiv
sahf
inc
or
jae
lret
notb
in
das
pop
jp
xor
shl
xlat
popf
into
outsl
sub
push
in
test
cld
mov
push
in
xchg
inc
cmp
call
and
int
negl
dec
push
mov
lods
push
sub
lcall
dec
dec
scas
xor
jge
in
neg
std
mov
rcrl
cmp
stos
mov
push
dec
cmp
loop
push
cmpsb
ret
sub
cmp
jg
outsb
adc
stos
sub
and
das
xor
bound
imul
aad
pushf
add
adc
fucom
mov
xlat
inc
adc
xor
lahf
dec
pop
pop
aad
sub
dec
aam
sub
mov
daa
aam
sub
enter
repz
daa
lock
cmpsl
imul
iret
jno
fwait
or
lret
lret
addr16
mov
mov
je
imul
jge
dec
shrb
jns
dec
and
pop
out
xor
cmp
and
and
pop
push
mov
insl
xchg
out
mov
adc
push
outsb
test
test
pop
mov
xchg
cmp
iret
pop
xchg
cmp
push
sub
xor
cwtd
cmp
in
sub
jne
inc
mov
dec
mov
jmp
or
push
jle
inc
adc
add
push
gs
loope
fistps
sub
ret
pushf
push
fucomi
ds
push
call
je
loope
mov
fstps
mov
adc
rolb
pusha
stos
loop
lcall
push
sahf
insb
jne
repnz
repnz
push
or
fdivrs
jle
pop
lods
mov
jo
ja
xor
imul
pop
mov
incl
mov
daa
hlt
push
jbe
mov
or
jmp
lods
fsubrs
gs
cmp
xor
jbe
mov
addr16
mov
into
mov
cmp
pop
int3
stc
movb
and
fisubl
add
jns
into
mov
ret
sbb
into
dec
pop
cmp
mov
sahf
jo
daa
rolb
cs
inc
mov
xchg
idivl
scas
insb
and
adc
repz
lret
cmp
push
enter
sub
out
jl
adc
jg
and
dec
dec
xor
mov
cltd
in
out
push
fnstsw
dec
mov
fwait
pop
jl
lea
cli
in
test
jns
daa
js
daa
jecxz
dec
nop
push
jb
divl
or
dec
arpl
iret
push
sbb
aaa
push
mov
inc
adc
daa
int3
pop
outsb
inc
pusha
andb
mov
or
rol
mov
cmp
add
mov
xchg
cmp
movsl
cmp
test
and
fistpll
pop
mov
sbb
mov
and
popf
enter
push
test
fdivl
aaa
sti
mov
fcmove
push
xchg
or
push
jb
pushf
fs
jb
repz
sub
aas
pmaddwd
mov
jae
scas
dec
dec
pop
cmpsl
sbb
and
test
mov
adc
pop
add
roll
call
js
add
mov
or
sub
pop
jge
fisubrl
dec
daa
and
js
sub
outsl
xchg
insb
rcrb
add
daa
es
mov
xor
into
sbb
les
cmp
mov
pushl
sti
pop
or
pusha
pop
ja
leave
test
mov
dec
ficomps
fwait
mov
adc
inc
jnp
jle
sub
ja
jae
imul
gs
adc
dec
cmp
add
fadds
xor
xchg
js
in
test
xor
int
ljmp
inc
fdivr
mov
popf
sub
sbb
mov
ret
xor
inc
ficoml
icebp
fmuls
addr16
cmp
jecxz
and
xchg
test
mov
cwtl
in
out
icebp
pop
jmp
mov
mov
subl
jnp
adc
test
inc
push
dec
mov
or
xchg
dec
orl
xor
clc
fldcw
mov
ret
fwait
mov
addl
sub
stos
dec
fwait
aaa
sub
rolb
lret
fwait
xchg
and
bound
pop
dec
out
pop
cwtl
xchg
sti
sub
loopne
mov
decb
push
mov
pop
inc
inc
aam
aad
int3
jecxz
outsl
insl
cs
jle
out
jmp
push
jmp
cltd
scas
scas
addr16
sahf
addb
pop
adc
int3
insl
dec
mov
pop
jge
xchg
and
ret
lods
jle
enter
cmp
jns
dec
jge
loopne
mov
add
fdivrl
add
jbe
imul
arpl
mov
sbbb
push
adc
pop
mov
jp
push
jle
mov
pop
mov
pop
cli
sub
les
int3
mov
ret
xor
xchg
lahf
mov
xchg
dec
mov
shll
jne
mov
cwtl
add
aad
mov
cmp
adc
xchg
mov
inc
adc
and
std
aas
mov
and
adc
mov
xor
or
stos
xchg
popf
or
js
add
dec
or
xor
cmovl
push
xchg
pop
addb
pop
or
ret
nop
xchg
or
sbb
sbb
push
xchg
xlat
cmp
cmp
jmp
repz
rcr
push
adc
mov
xor
and
cmp
ds
sub
xchg
jmp
or
arpl
int3
inc
jg
mov
cmpsb
or
pop
pop
fistpll
sbb
pop
add
repnz
imul
xchg
les
mov
cmpsl
icebp
jmp
push
push
dec
or
sbb
cltd
leave
scas
fidivrl
pop
mov
push
push
and
insl
cmp
notb
dec
movsb
push
mov
repz
xchg
fwait
mov
add
xor
cmc
or
fucomp
jo
stos
fs
xchg
push
je
sbb
push
jnp
int
aas
dec
mov
ss
addl
add
xchg
cmp
pop
mov
data16
pop
stos
sub
and
cli
cmp
push
data16
sbb
pushf
jg
dec
xchg
nop
enter
mov
jg
jle
inc
xor
mov
push
sbb
hlt
ss
sub
push
int3
rol
cmp
xchg
mov
xchg
jg
mov
mov
mov
addb
cmp
test
jns
mov
and
pop
or
cli
mov
dec
gs
adcb
dec
jecxz
ret
or
push
add
jge
xor
add
ja
loope
movsb
mov
jmp
mov
outsl
test
xchg
push
mov
pop
mov
jnp
pop
sti
in
mov
dec
adc
shlb
cli
cmc
pop
mov
xchg
std
adc
insl
mov
std
ja
jecxz
push
dec
and
or
andb
add
lods
mov
adc
sub
js
sub
jae
mov
loope
jg
call
scas
pop
sar
xor
mov
idivl
push
push
js
loopne
mov
popf
cwtl
scas
pop
sub
sahf
aaa
mov
push
mov
dec
cli
and
imull
lods
pop
push
cmp
jns,pn
cmp
sub
pusha
rorb
jnp
out
fisubrs
sbb
push
mov
out
ja
hlt
int3
inc
push
dec
mov
sti
jg
cwtl
and
loope
filds
mov
adc
std
loopne
inc
fisttps
inc
into
fisttpll
lret
jge
sbb
stos
sbb
push
cmpsl
pop
mov
mov
xchg
jp
or
jp
sbb
or
jns
and
mov
cmpsb
sbb
out
xor
test
mov
jno
jb
xchg
aas
shrb
out
mov
mov
leave
jbe
dec
xchg
cmp
adc
sub
inc
push
sub
shrb
sti
pushf
mov
ss
outsb
les
in
add
pop
dec
fwait
mov
test
aam
sbb
push
loope
sbbl
testl
lahf
cmp
andl
cmp
pop
jg
pop
outsl
scas
mov
mov
sbb
inc
adc
gs
test
ja
scas
and
out
mov
and
sub
test
enter
lret
hlt
push
mov
push
add
adc
aam
or
fiaddl
icebp
repz
mov
xchg
xchg
xchg
sub
or
sbb
stc
and
add
out
mov
adc
rcr
iret
insl
jo
sbb
or
lret
pop
or
les
movsb
loopne
xchg
mov
cmp
test
filds
out
push
stos
jl
jnp
std
pop
arpl
push
stc
xrelease
pop
jnp
or
fldt
pop
mov
adc
xor
and
mov
fst
call
bound
sub
cmpl
jbe
mov
add
pop
out
mov
pusha
mov
push
outsl
jl
xchg
adc
mov
dec
jmp
movsl
shr
mov
mov
inc
adc
arpl
jb
mov
push
inc
fisubs
jb
mov
dec
push
aas
stos
jns
mov
outsl
and
xor
fildll
and
or
ret
xor
icebp
adc
push
cmp
test
lret
scas
jp
mov
jp
jo
call
insb
and
sbb
or
divl
xchg
jle
mov
shlb
or
jae
jmp
or
jg
cmp
adc
push
dec
pop
dec
dec
fdivrs
cmp
aas
ds
std
push
test
jge
xor
mov
hlt
inc
push
lahf
sub
mov
iret
pop
fs
orl
cmp
xor
loop
insl
xchg
xor
dec
insb
or
out
ss
push
test
aas
push
sbb
popf
ljmp
aad
in
cmp
sub
aas
mov
cmp
xchg
inc
jmp
xchg
je
xor
imul
adc
push
repz
adc
mov
adc
mov
and
pop
inc
and
cmpl
cmp
jg
sub
loopne
push
pop
mov
pop
stc
cwtl
cmp
cmp
inc
into
bound
repnz
cmp
push
jl
fnsave
daa
inc
mov
fisubrs
inc
rcrb
mov
cltd
in
aaa
xor
xchg
inc
pushf
testb
xchg
cli
sub
sti
imul
ja
popa
ja
xor
ret
mov
add
test
rorb
add
movsb
xchg
dec
xchg
jmp
lods
iret
xchg
xor
out
in
adc
lcallw
call
mov
movsl
mov
loop
jbe
mov
pop
mov
mov
iret
inc
ret
add
popa
ret
mov
xor
fcomp
mov
jg
xchg
loope
out
cs
in
sar
mov
lds
jbe
je
call
mov
out
mov
gs
or
stos
adc
xor
mov
arpl
cmp
push
sti
dec
fisubrs
faddl
push
jnp
mov
pop
add
push
iret
out
lret
insl
and
test
leave
roll
int3
and
mov
push
inc
fistpll
jae
mov
repz
mov
das
stos
inc
mov
sbb
lods
jecxz
add
mov
mov
test
cmovl
out
out
popa
aad
sbb
pop
xor
xor
dec
sub
xchg
push
xor
pop
dec
std
ret
mov
ss
faddl
shr
es
mov
das
inc
popa
jns
mov
push
cmpsb
lret
ja
aaa
xchg
cmpsb
inc
imul
mov
out
in
or
adc
xchg
or
in
jecxz
inc
jle
loopne
cmpsl
dec
lret
ds
push
cmp
pop
in
mov
and
mov
jns
mov
scas
fidivrl
jne
out
out
jl
in
test
push
dec
mov
sbb
and
imul
sbb
push
sahf
dec
mov
push
push
adc
mov
mov
adc
mov
sub
int3
adc
pushf
jnp
out
adc
pop
cmp
ds
out
pushf
adc
mov
rcll
xor
sahf
mov
aas
mov
add
mul
enter
incl
call
shrb
ljmp
scas
lods
jp
cmpsl
jg
adc
popf
mov
jg
push
mov
loop
lcall
mov
sbb
rolb
mov
movsb
ja
pop
xor
ds
mov
sub
cmp
jb
das
add
or
dec
mov
out
inc
das
jne
pop
push
dec
or
inc
and
push
push
push
or
push
pop
xor
clc
mov
or
mov
push
pop
jbe
bound
and
xlat
fs
fdivrl
cmp
sbb
arpl
jmp
stc
subl
aaa
push
clc
insb
cmc
repnz
les
mov
shrl
mov
dec
lock
mov
pop
shlb
je
leave
fstps
cwtl
sarl
in
xchg
test
lahf
push
out
push
pop
fdivrs
fs
pop
in
mov
mov
arpl
out
insl
jne
movb
mov
mov
mov
pop
push
push
fisubs
cmpsb
loop
xchg
mov
mov
xor
push
in
aad
mov
icebp
filds
sahf
bound
push
sti
sub
mov
jae
cmp
dec
adc
mov
leave
xorl
adc
dec
loop
cmp
jo
rclb
push
fsubp
pop
adc
or
cmp
and
jbe
mov
cmpb
movsl
out
add
inc
inc
adc
push
jge
int3
std
mov
dec
cmp
sahf
sub
dec
mov
push
xchg
leave
int
xchg
loopne
sub
in
icebp
cltd
jnp
dec
xchg
xor
and
mov
out
mov
inc
add
leave
std
loope
pop
xor
sbb
mov
mov
aam
mov
jge
xor
pop
daa
mov
xchg
in
clc
xor
idivb
stos
add
cli
cmp
fbld
sbb
add
sub
les
or
iret
shll
loope
nop
stos
xchg
sahf
pop
jmp
adc
pop
daa
sbb
lds
adc
xchg
aad
inc
xchg
stos
shrb
xor
nop
aad
or
out
push
mov
stos
lret
push
mov
jl
and
and
repz
and
inc
adc
jecxz
stc
fcoms
jns
std
xor
pop
jo
cltd
in
aas
pop
shl
shlb
and
mov
ss
pmulhuw
call
sbb
lret
adc
mov
ds
xor
fisttpl
popa
jle
cmp
or
inc
mov
pop
jae
inc
stc
bound
or
xchg
mov
sbb
mov
cmp
outsl
inc
fs
es
test
gs
ret
arpl
ds
sbbb
cmp
stos
in
ja
lret
push
inc
fldt
ds
mov
arpl
hlt
and
pop
cpuid
xchg
fsubr
and
jns
jge
push
test
rorl
push
lds
iret
mov
insl
bound
jg
mov
daa
mov
das
jmp
push
add
out
shrb
add
cmp
xchg
xchg
lods
iret
or
and
shlw
push
sbb
je
mov
and
adc
fdivs
fistps
mov
push
pop
aas
jne
mov
shll
les
jns
push
lret
fucomp
dec
inc
pop
andb
mov
add
ret
rolb
outsl
xchg
into
jno
sti
out
mov
inc
pop
xchg
rclb
inc
pop
mov
rcr
aaa
icebp
push
clc
sarl
mov
mov
test
mov
dec
lock
sub
cli
out
push
loopne
icebp
sub
jbe
in
fldcw
ja
sbb
sub
add
nop
xchg
ds
pop
or
cmp
mov
shlb
int
addl
movsb
and
cmc
jmp
andl
lods
rorl
lea
dec
cmpsb
pop
push
pop
nop
xor
mov
inc
pop
adc
mull
aam
mov
out
sub
ds
mov
jecxz
shr
jne
mov
mov
andb
lret
cmp
mov
stos
sub
call
push
sbb
jne
or
bound
inc
cmp
nop
add
movsb
insl
mov
lahf
add
mov
cmp
adc
sub
es
out
adc
outsb
mov
fcmovnb
outsl
xor
test
insb
negl
mov
add
and
fmuls
rcll
add
test
mov
and
jns
dec
lcall
das
mov
and
in
add
xchg
cmp
mov
add
cli
pusha
loopne
mov
cli
ficompl
std
out
test
inc
loop
out
or
pushl
shlb
pushf
dec
jl
mov
mov
outsl
xchg
xorb
scas
and
xchg
inc
xchg
or
or
adc
aad
push
addb
xchg
jns
sar
outsb
aas
nop
iret
test
gs
popa
dec
push
idivb
push
dec
bound
js
xchg
jbe
push
mov
cld
cmp
xchg
mov
bound
push
fildll
popf
or
mov
test
je
push
pop
mov
test
and
std
movsb
mov
das
ja
in
pop
push
scas
rol
dec
sbb
ja
or
jmp
mov
adc
xor
sub
bound
in
xchg
movsl
shlb
lret
cwtl
test
repz
in
cmp
mov
aam
mov
rcrl
inc
push
or
xchg
push
sub
daa
and
push
call
sub
ds
andl
adc
cli
test
jecxz
outsl
mov
ljmp
mov
stc
out
xchg
sub
mov
in
fwait
movb
out
lods
stos
xchg
adc
and
adc
icebp
clc
inc
adc
jle
notl
sahf
fwait
xchg
push
loopne
mov
stos
jns
or
cltd
nop
adc
fsub
testb
pop
aad
cmp
inc
testb
dec
addr16
xor
insl
lock
cmpsl
lret
adc
add
cld
mov
inc
add
ss
jl
xchg
lods
sbbl
test
xor
pop
mov
cmp
xor
imul
imul
xchg
jne
jns
clc
adc
adc
sub
xchg
repz
fmull
mov
pop
mov
rcrb
shl
mov
iret
sti
or
lea
clc
lds
sub
cmp
push
imul
push
out
or
mov
pop
test
xor
imul
push
mov
testb
fistpl
mov
mov
and
xor
stc
fistl
push
mov
xchg
mov
repnz
loope
enter
or
das
push
adc
jns
ret
jnp
sti
push
popf
ljmp
xor
lcall
fbld
gs
hlt
test
mov
jle
pop
push
repz
jbe
test
dec
les
ja
arpl
outsl
mov
roll
je
push
mov
inc
and
es
cmp
cs
push
adc
xchg
ja
divl
rolb
mov
je
inc
jl
iret
leave
mov
loop
int3
loopne
out
push
idivl
push
lahf
sbb
shlb
push
mov
in
pop
xlat
jge
int
call
subb
xchg
inc
out
int3
outsl
loope
xor
ret
ficoml
insb
adc
inc
popf
ss
imul
data16
call
enter
loope
adc
sub
divb
sahf
in
in
fnstsw
xor
sub
out
aam
repnz
mov
in
call
jl
aam
adc
aas
mov
rcrb
jecxz
sub
xchg
bound
or
pusha
pop
inc
popf
mov
cmp
outsb
fidivrs
insb
xchg
test
stos
sub
mov
lds
mov
xlat
inc
mov
adc
or
lock
clc
cmp
push
sbb
xchg
dec
stos
mov
jg
add
sub
lds
pusha
mov
and
xor
mov
lods
movb
dec
xor
popf
les
pop
inc
sbbb
lahf
stos
push
xchg
push
mov
jl
push
dec
fnstcw
and
jg
push
xchg
lea
insl
add
add
adc
mov
jmp
cmp
test
inc
xchg
jg
paddusb
jle
push
dec
mov
or
dec
pop
pop
test
aaa
inc
je
dec
jmp
mov
lret
push
orb
gs
mov
call
test
sub
lock
jnp
lods
movb
jge
pop
sbb
test
add
mov
xchg
lret
pop
sub
add
fisttps
jmp
pop
lods
and
lret
xchg
sub
into
xor
xchg
dec
sbb
mov
jle
in
adc
add
test
adc
inc
mov
add
leave
dec
jl
cmp
sub
int
cltd
jl
pop
out
cmp
gs
push
jae
lret
stos
adc
clc
pop
xor
mov
fucomip
sbb
push
xor
cmp
xor
jno
mov
adc
addb
xchg
sub
inc
aad
and
test
stos
insb
add
dec
bound
pop
ds
cmp
je
jmp
std
pop
mov
jmp
out
imul
mov
sbb
cmp
movsb
stc
stos
fiaddl
js
or
pop
fwait
ret
adc
dec
adc
cmp
fisubl
push
mov
mov
mov
loopne
scas
mov
sti
mov
int
sub
mul
cmp
lods
mov
xlat
subl
sbb
test
jmp
push
jns
mov
fucomip
adc
cmpb
xchg
iret
jb
jne
gs
jmp
jmp
and
xchg
lret
out
xor
test
cmp
rcrb
xchg
repz
sbb
jne
mov
ret
test
sti
or
inc
and
pop
sti
or
popf
push
lea
dec
loope
mov
push
xor
lds
push
shrl
movsb
mov
lods
jge
inc
lods
rolb
popf
out
jg
mov
andb
xor
movb
xorl
xor
jb
xor
clc
mov
imul
jo
mov
xchg
inc
push
jb
jl
fimull
lcall
mov
mov
xchg
mov
out
add
inc
push
je
fabs
jno
aas
call
mov
dec
jge
in
inc
pop
mov
fcmovne
jne
mov
mov
test
enter
or
nop
jmp
enter
inc
out
es
outsl
jle
jns
xor
enter
dec
hlt
jno
push
rclb
and
stos
enter
xlat
cmp
pop
aaa
jmp
sub
lods
stos
pop
adc
lahf
xchg
out
mov
xor
loopne
pusha
sahf
ljmp
pop
loop
mov
movl
loope
stos
push
in
mov
sub
pop
icebp
jmp
and
xor
mov
push
cmp
adc
add
adc
das
mov
jnp
xor
leave
cwtl
mov
mov
jbe
in
sub
mov
add
adc
fists
sbb
in
data16
and
dec
adcb
or
lret
int3
nop
clc
xor
fstpt
dec
jge
sub
and
stc
xchg
inc
mov
fildl
mov
out
ljmp
cs
shl
mov
rcr
sarl
les
popa
daa
popa
mov
jnp
adc
pop
mov
sbb
mov
js
pusha
scas
std
insb
daa
imul
je
shlb
scas
inc
jo,pt
repz
fdivr
mov
push
out
mov
cmp
sbb
js
rcll
lcall
mov
adc
and
cmp
jecxz
rol
addr16
mov
and
orl
stc
mov
insb
stc
ja
stos
mov
fidivs
push
jns
push
repnz
sub
xor
lea
inc
movsb
mov
mov
xor
stc
inc
aad
shrb
iret
aam
popf
rorb
jns
jmp
and
jle
jmp
pop
inc
and
cltd
pop
jbe
sbb
sar
push
cs
xlat
pusha
adc
les
fiaddl
adc
popf
cs
shlb
cmp
imul
xchg
and
enter
dec
and
in
mov
mov
mov
sarb
mov
mov
daa
push
out
mov
xchg
pusha
scas
pop
sbb
inc
sub
in
push
dec
lock
push
jecxz
mov
xor
sub
xchg
sahf
jae
cwtl
or
jo
popa
mov
cmpl
dec
xchg
mov
xchg
test
mov
lcall
shlb
imul
daa
popf
jmp
cmp
out
lds
lods
or
mov
imul
jnp
bound
mov
dec
sub
xchg
punpckldq
pop
imul
movsb
mov
and
lahf
cmp
pop
mov
dec
sub
sub
pop
aad
or
sbb
pop
movsl
loopne
mov
das
adc
and
lret
mov
xchg
adc
xchg
popa
sub
lret
imul
cwtl
or
ljmp
xchg
stos
cli
testb
repz
shlb
cmpsb
lret
cli
arpl
test
lock
mov
mov
sub
shrb
pop
mov
cmp
pop
push
ss
sub
sbb
lcall
cmpsl
push
ficoml
in
mov
lret
jbe
aad
cmp
popa
push
cmpsb
inc
arpl
jae
jae
data16
mov
lahf
fucomi
sbb
scas
les
rclb
jb
fs
into
icebp
pop
mov
adc
scas
dec
fwait
je
repz
pop
jne
icebp
lcall
adc
sahf
cwtl
push
loop
sub
xor
mov
push
jno
outsl
subl
fsts
pop
mov
out
hlt
lret
jno
xchg
testb
fucomp
cmp
dec
push
or
jb
adc
enter
push
jo
inc
xchg
incl
je
mov
fidivs
adc
sub
xor
fidivs
iret
pop
out
xchg
inc
pop
jo
inc
mov
mov
addr16
inc
sti
dec
in
mov
dec
bound
pop
jecxz
les
mov
mov
push
and
notb
cmp
xor
xor
ja
or
jo
lret
fcomps
pop
mov
loop
jp
rcr
arpl
mov
and
out
xchg
mov
test
xchg
out
pop
test
add
loopne
push
pushf
ret
fwait
pop
pop
pop
clc
adc
out
pop
cmp
sbb
mov
cmc
add
jb
jns
mov
pop
loop
test
cs
aad
push
js
dec
pop
aaa
pop
shl
sbb
push
call
out
xchg
push
cltd
stc
repz
shrl
stos
in
xchg
pop
cli
push
in
xchg
add
loop,pt
and
leave
cmpsb
insb
push
add
ds
pop
out
pop
lods
lods
xor
ljmp
pop
cltd
mov
pop
test
sbbl
cmp
enter
push
cs
cmc
iret
pop
push
push
notl
cmp
lods
movsb
and
insl
adc
push
mov
out
int3
popf
mov
add
imul
fbstp
dec
outsb
mov
mov
aas
das
mov
ds
sbb
xchg
sbb
in
out
lahf
adc
daa
jmp
push
arpl
sarb
add
std
cli
in
cmp
fnstenv
cmp
jb
das
leave
rcl
leave
loopne
rorl
dec
jecxz
inc
mov
mov
jmp
adc
in
and
loop
lds
jmp
arpl
xchg
sub
mov
repnz
jl
std
lea
repnz
and
sub
jp
push
clc
fcmovbe
add
cmpsl
xor
push
dec
mov
cltd
jp
lock
dec
xor
xchg
pop
cmc
add
gs
mov
xor
loopne
arpl
inc
cltd
jp
movsl
cmpsl
loope
std
jae
rorl
rorb
or
or
cmp
xor
adc
or
mov
xchg
popf
push
push
pmulhw
add
int
xchg
xchg
sub
push
mov
sbb
xor
call
idiv
mov
mov
add
lods
lret
pop
leave
scas
dec
mov
cmpsb
in
xchg
shlb
jb
adc
sbb
sub
addl
das
fildll
mov
lock
ret
xor
pushf
fstpt
sub
sbb
aas
xor
jae
shl
imul
dec
aas
pop
bound
arpl
into
pusha
cmp
out
in
pop
xchg
out
notb
out
leave
inc
cmp
out
fs
fdivr
dec
sbb
dec
dec
xchg
push
jge
mov
bound
inc
sub
gs
jne
fisubrl
pcmpgtd
fidivs
int
xchg
pop
outsb
fstpt
add
fdivrs
bound
ljmp
mov
lret
cld
mov
jle
out
lcall
adc
lret
xchg
mov
js
stos
jle
lea
das
sti
and
jo
jno
call
sub
sti
outsl
cmp
je
sbb
nop
lcall
push
pop
insl
xlat
mov
lret
stc
xchg
and
rcll
adc
pop
test
cs
cld
dec
sbb
add
xchg
loop
out
rcrb
daa
mov
mov
push
mov
addb
cmc
mov
lret
movnti
roll
mov
dec
in
test
gs
pushf
or
fisttpll
jb
mov
arpl
pop
movsb
sub
dec
mov
jne
cli
repz
add
sbb
pusha
mov
push
mov
filds
push
cld
dec
or
mov
stc
sbb
adcb
int3
lret
xor
adc
int
leave
mov
test
push
xchg
push
xor
push
outsb
push
and
jmp
add
loope
loop
mov
lods
fwait
cld
fwait
xor
out
cmp
inc
add
or
clc
ret
xor
and
into
shrl
jmp
or
add
sbb
flds
orl
in
repz
je
mov
scas
cmp
icebp
or
dec
inc
imul
pop
mov
and
push
sbb
mov
lea
inc
xor
aas
adc
or
imul
cmp
push
out
pop
adc
pop
sti
dec
scas
dec
js
push
popa
cmpsb
xchg
dec
int3
mov
out
push
mov
adc
clc
sbb
mov
dec
inc
lock
fcomps
xor
cmpsl
pushf
je
insl
subb
xchg
sub
or
mov
mov
repz
movsl
inc
loopne
sub
mov
xchg
or
push
lea
test
cmp
sti
xchg
bound
mov
jbe
cmove
or
lods
push
ds
xor
and
push
dec
push
fdivrs
inc
push
mov
aad
pop
sub
in
add
and
ds
cmp
jae
sub
stos
lahf
pop
mov
push
int3
out
adc
sbb
fmull
mov
in
dec
cli
xchg
mov
and
xor
sbb
dec
jnp
mov
ss
cltd
push
dec
mov
mov
cmpsl
dec
leave
inc
xor
pop
inc
sbb
movsb
inc
into
sub
cltd
outsb
call
popa
mov
insb
xchg
or
mov
mov
insl
scas
daa
add
test
pop
cmc
push
iret
cltd
inc
fs
cs
out
pop
sbb
clc
scas
data16
insb
jl
filds
sub
and
or
or
sub
sub
js
dec
or
sbb
jg
bound
push
sbb
xchg
dec
xor
out
mov
add
and
mov
sbb
or
and
stc
sub
dec
pop
cwtl
sub
mov
fisubrl
icebp
ja
aam
cld
shll
clc
xor
push
push
pop
mov
or
xchg
and
pop
ds
jbe
imul
pop
mov
outsl
cmpsl
sbb
clc
mov
ss
ljmp
or
inc
jb
add
inc
sti
sub
arpl
xchg
das
dec
adc
ja
mov
cmp
pop
nop
sbbl
sahf
or
dec
lea
sub
aam
dec
and
lret
out
mov
or
pop
inc
fdivrs
cmpsb
or
push
inc
add
xorb
inc
mov
repz
xor
push
not
cwtl
xorb
jle
in
pop
pop
mov
mov
ljmp
mov
sub
jecxz
pushf
xchg
add
pop
in
cwtl
cli
xlat
mov
scas
cli
movsb
lret
xor
inc
lods
jecxz
adc
repnz
aaa
or
bound
xor
dec
stos
call
negb
sbb
bnd
add
jmp
and
dec
mov
mov
pop
dec
test
dec
enter
popa
popf
mov
cmc
ficoml
ror
rcr
push
hlt
clc
dec
jb
mov
push
cmp
jnp
push
push
cmp
jge
pop
iret
and
into
notl
xchg
mov
andl
xchg
push
movsb
lock
mov
push
ret
push
stos
fwait
add
jp
ss
int3
adc
lods
fldl
and
jle
jno
xor
cs
sbb
sbb
lret
sbb
and
mov
dec
push
inc
xlat
dec
andb
dec
js
out
fisttpl
daa
push
pop
ja
cmp
mov
out
sti
data16
fs
outsb
stc
jnp
pop
inc
test
pop
ficompl
inc
stos
cmpsb
lcall
out
int3
fcoms
push
adc
pusha
js
lcall
sbb
stc
je
adc
popf
call
jmp
mov
mov
fnsave
stos
jl
add
fsubr
mov
pop
lock
repz
push
xor
push
pop
lret
add
loopne
shl
out
jp
push
in
pause
push
push
jae
mov
lahf
sub
adc
scas
aam
in
cmc
ss
push
xor
adc
and
push
sub
mov
lds
pop
scas
jne
fisubl
imul
mov
mov
add
fildl
in
push
dec
inc
add
mov
xor
cmc
push
or
inc
and
adc
movsl
shl
scas
cmpsb
fsubs
js
jl
xchg
jns
popa
mov
jmp
hlt
jp,pn
cmp
daa
add
pop
dec
or
push
stos
sarb
bound
imul
fmull
cmp
lcall
movsl
cwtl
dec
sbb
mov
mov
xchg
roll
in
inc
bound
add
sbb
in
addl
xchg
xchg
push
ljmp
push
icebp
mov
into
cwtl
cmc
cmp
stos
push
dec
stos
fisubrs
int3
jns
dec
repnz
xchg
insl
xchg
clc
sub
mov
shl
xchg
dec
arpl
xchg
jb
xchg
gs
mov
or
sbb
pop
cmp
lds
and
xchg
inc
loopne
lods
gs
cld
insl
repnz
jo
xchg
mov
adc
std
cmc
outsl
sbb
adc
and
leave
int
out
push
mov
pop
outsb
add
inc
add
or
js
add
cmpsb
pop
add
fxch
jo
mov
sbb
subl
xor
xchg
dec
add
pop
sbb
mov
xchg
int3
pop
mov
movsb
add
data16
iret
adc
push
and
icebp
inc
insb
xchg
xor
jno
int
push
mov
or
lods
iret
imul
mov
and
fmuls
pop
sbb
js
movsl
pusha
jl
or
inc
test
fwait
push
cmp
pop
push
and
mov
mov
sub
bound
add
mov
cli
mov
nop
pop
jmp
pop
stos
xor
cmp
xlat
pop
pusha
push
mov
pop
add
imul
mov
aad
sub
fidivl
sbbl
xchg
pusha
daa
sub
lcall
in
xchg
add
xchg
imul
ss
cmpsb
dec
hlt
adc
div
cmp
arpl
inc
in
pop
push
ret
cmp
and
push
insl
jno
mov
cmp
cs
add
popf
dec
push
mov
data16
add
jl
mov
fdivl
pop
imul
out
or
sub
cwtl
adc
call
and
icebp
enter
xchg
pop
dec
adc
cwtl
lock
sub
movsb
add
sbb
inc
clc
fisttps
and
xchg
fs
shrl
and
imul
push
aad
insl
adc
pop
or
mov
sbb
xchg
test
push
mov
sbb
cmp
fildl
push
outsb
test
pop
loop
jp
mov
sbb
and
cmp
xor
jmp
stc
idiv
dec
mov
enter
inc
sbb
mov
mov
jmp
addr16
jne
imul
dec
pusha
addb
push
jbe
inc
nop
push
pop
jp
sub
dec
ret
setp
cmp
test
into
add
lret
mov
out
in
add
in
enter
popa
call
and
sub
das
pop
out
xchg
sub
adc
push
jb
rorl
cmpsb
add
dec
test
adc
pop
fildll
daa
and
xchg
lret
mov
sbb
mov
das
jg
std
push
lret
imul
mov
or
ficompl
fcompl
fisubl
dec
lea
sbb
scas
jo
int
je
mov
repnz
jne
mul
scas
stos
sti
test
mov
cmp
pop
test
xchg
ja
mov
aaa
xlat
push
push
jb
lret
lret
adc
testb
mov
in
dec
inc
push
jge
xchg
adc
les
cld
loop
fucom
out
divb
sbb
push
or
in
mov
dec
add
testb
pop
sbb
pop
jg
adc
lods
scas
push
lock
icebp
loop
subb
dec
mov
mov
sbb
lock
sarl
daa
mov
in
pop
popa
pop
cmp
mov
pop
fidivs
dec
jmp
fscale
xchg
jge
int3
cmp
add
and
sbbb
jae
inc
xlat
dec
dec
stos
arpl
outsb
push
mov
pusha
lock
mull
xchg
outsl
inc
dec
inc
fnstenv
cmc
pop
cltd
sarl
int3
dec
push
shlb
out
repz
outsb
mov
insb
mov
sbb
pop
push
cs
cmp
sbb
xor
popf
xchg
aam
xor
cmp
dec
sub
sbb
std
inc
imul
push
data16
outsl
cltd
ficomps
cmpl
cwtl
dec
add
push
imul
out
shrl
and
cmp
inc
xchg
enter
add
cmp
or
pop
frstor
jecxz
fisubrl
pop
or
mov
mov
out
sbb
jmp
xor
cmp
jb
lcall
jl
mov
push
and
in
push
cltd
fs
lock
bound
pop
xchg
cmp
rol
sahf
scas
adc
jecxz
or
xor
insl
mov
pop
lret
test
out
lcall
stc
xor
loope,pt
pop
movsb
cmp
repz
cs
icebp
out
mov
add
jl
test
es
popf
push
idivb
sti
mov
adc
cmpl
lret
sbb
and
mov
inc
mov
stc
adc
mov
leave
jo
mov
xchg
ret
adc
or
outsl
nop
stos
mov
outsl
mov
or
daa
xlat
cmp
fiaddl
hlt
popa
sub
xor
lods
mov
inc
add
sahf
pop
mov
loope
pop
or
in
insl
sub
pop
iret
pop
pop
xchg
or
push
ja
fprem
incb
dec
cwtl
inc
mov
fwait
push
cmp
out
mov
mov
test
ret
fcomi
dec
push
xchg
mov
or
and
jge
push
setne
adc
nop
pusha
inc
inc
and
fdivr
negl
icebp
sub
sbb
fisubl
and
jge
sub
pop
sub
and
mov
dec
in
mov
and
pop
and
stos
mov
xor
adc
inc
inc
test
stc
add
jno
loop
rorb
movsl
arpl
or
mov
adc
xchg
xchg
lcall
bound
out
arpl
inc
lock
mov
adc
imul
in
aaa
adc
ja
push
lock
aaa
cmp
je
mov
cmp
jle
dec
lds
nop
inc
dec
sub
mov
jae
push
pop
shll
jb
xor
inc
push
add
adc
cld
jecxz
aas
fdivr
nop
cmp
test
xchg
mov
push
or
jns
cmpsb
pop
cs
mov
sarb
lds
sbb
in
sub
jg
js
dec
fs
dec
in
mov
xchg
ljmp
sarb
sarl
data16
mov
sub
jl
test
shll
dec
shll
pop
pushf
inc
mov
sub
and
and
cmp
arpl
inc
dec
in
add
leave
mov
push
rcrb
mov
sub
daa
or
fidivrl
les
xor
repnz
xor
mov
arpl
and
dec
jg
pop
mov
xor
xor
mov
jb
filds
inc
adc
mov
push
ret
cli
cwtl
xchg
ja,pt
icebp
enter
addr16
pusha
fldenv
orl
sub
jg
hlt
sbb
or
cmp
lods
push
sub
movsb
xchg
fsubl
cmc
mov
push
push
js
push
sbb
repnz
repz
rcrb
ljmp
jbe
inc
out
movsb
adc
leave
inc
inc
xlat
bound
push
or
pop
dec
push
out
mov
fstpt
iret
bound
xchg
jg
gs
jno
outsl
popa
test
jb
and
and
sbb
cwtl
mov
sub
sti
shl
push
xor
ds
std
repnz
fisubrs
rorb
fs
jbe
cmp
test
xchg
test
insb
lds
gs
outsb
test
fisubl
lret
jne
cmp
push
pop
mov
xchg
jp
inc
in
sub
mov
test
into
pop
sub
push
out
push
xchg
popa
push
stos
shlb
or
push
dec
mov
xchg
dec
ret
addr16
push
inc
xorl
or
and
jg
stc
cmpsl
addb
adc
mov
mov
cmpsb
mov
sub
lret
andl
xchg
mov
js
movsb
cli
fdiv
cmpsb
das
adc
inc
adc
outsb
xchg
mull
jecxz
popa
xor
loop
mov
jns
jp
test
jge
cli
mov
fcmovbe
loopne
int3
mov
adc
out
xor
fidivrl
loopne
and
push
iret
enter
sub
add
loopne
sub
fidivs
xchg
pop
sahf
cmpsb
or
loop
ret
xor
repz
into
sub
pop
jne
jge
incl
xor
xchg
xchg
ficompl
xchg
mov
andl
roll
inc
shll
push
cmp
jb
push
mov
or
clc
das
mov
rep
sub
outsl
repz
arpl
xorb
out
rol
mov
lret
mov
cmp
cmpsb
mov
ret
xor
inc
jle
sahf
mov
mov
adc
iret
cmp
mov
fcompl
pop
add
dec
negb
add
jle
mov
popl
enter
inc
sahf
xchg
or
xor
mov
daa
jmp
push
jne
aaa
repz
sahf
inc
push
lds
orb
iret
icebp
rorl
xchg
dec
cltd
lods
mov
adc
sbb
cltd
pop
ljmp
scas
adc
jge
cltd
repnz
add
or
xlat
imul
les
push
mov
xor
sub
lret
loope
roll
jae
or
jne
push
xor
cltd
out
ficompl
fucomp
and
push
pop
or
add
mov
lcall
and
dec
popf
pop
mov
sbb
mov
in
enter
fimull
xchg
and
jp
lods
insl
pop
psubsw
outsb
roll
pop
mov
scas
pop
or
pushf
fidivs
dec
fsubrs
hlt
xor
movl
push
test
mov
sub
inc
pop
lcall
push
jnp
adc
mov
iret
fdivl
pop
pop
mov
jl
xchg
aas
and
daa
pop
aad
jp
cmp
cmpsb
jmp
repnz
pop
pop
xor
pop
emms
push
xchg
test
or
xchg
mov
sbbb
dec
add
or
cs
mov
mov
sub
loop
cmpsl
jl
ds
fsubrl
or
sahf
mov
add
mov
push
inc
nop
lea
sbb
sub
xor
pop
lods
adc
daa
cmp
sbb
jle
testl
jle
dec
push
call
aas
mov
cmp
and
int
or
and
xchg
loope
mov
mov
std
xchg
push
lock
data16
xchg
sub
jae
popa
pop
jae
jp
loope
sub
lret
test
inc
and
lahf
imul
data16
mov
das
push
out
ja
imul
sti
adc
add
imul
fxam
imul
sub
push
push
fcompl
mov
dec
sub
enter
test
clc
aas
fisubrl
into
aam
enter
add
out
pop
repz
add
cmovp
jp
jge
mov
inc
cltd
icebp
lret
in
mov
iret
pop
jle
lods
insl
jo
jmp
xchg
cwtl
and
loop
shl
adcl
shll
sti
mov
mov
lret
and
mov
cmp
push
fdivrs
cmc
cmpsl
mov
jmp
movsl
lcall
sbb
out
mov
imul
cwtl
sub
lock
xor
in
sub
dec
ret
lcall
push
jmp
lret
fimull
mov
ret
xlat
xchg
cmpsl
push
cli
shr
in
std
xor
std
sub
mov
cmp
xchg
lea
add
outsl
out
jecxz
pop
pop
shll
dec
mov
push
mov
ss
cli
out
psllw
pop
jp
push
push
ret
adc
jns
lock
seto
in
xor
lods
mov
dec
mov
lahf
dec
ret
mov
mov
cmc
ds
sbb
fildll
pop
loope
inc
push
daa
mov
xor
fs
mov
insb
movl
in
jle
leave
push
or
inc
wbinvd
cmpsl
in
mov
xchg
ljmp
mov
test
nop
mov
aaa
cmp
cmp
popa
xchg
mov
test
and
sti
jle
sbb
rcll
addr16
xchg
push
sar
add
imul
subl
bound
lahf
rorl
lcall
cmc
push
ss
push
sbb
mov
push
aam
jo
test
lcall
mov
es
push
sub
mov
rorl
in
add
out
sbb
sbb
ret
and
mov
jle
std
inc
loope
pop
xchg
pop
popa
xlat
add
sbb
sti
sbb
fsubs
dec
jnp
sbb
test
dec
dec
rcll
inc
loopne
stos
movsb
sbb
insl
imul
loope
decl
fistl
lret
mov
jl
push
and
test
lea
dec
mov
mov
out
dec
dec
repz
adc
sbb
adc
adc
xchg
xchg
mov
fldl
lds
loope
fst
testl
repnz
mov
mov
pop
out
es
lds
lds
mov
inc
mov
icebp
inc
jmp
insl
popa
push
pushf
mov
les
sahf
sahf
aam
aad
jo
add
lods
scas
push
pop
pop
pusha
mov
fldl
pop
hlt
cmp
shlb
and
xor
dec
cmp
xchg
mov
cwtl
sub
lret
dec
popa
pop
pop
dec
lods
cmp
lcall
and
imul
jnp
dec
adc
les
push
clc
cmp
lea
cwtl
jns
insb
pop
test
sub
sbb
inc
mov
out
xchg
pushf
shll
sub
leave
imul
arpl
or
or
and
sbb
int
adc
add
xchg
sar
cmp
and
push
imull
js
push
xor
out
mov
ljmp
repz
sub
xchg
aad
mov
cmp
stc
mov
push
jl
xchg
jo
out
pop
or
xchg
mov
mov
sbb
push
adc
jae
lret
push
inc
push
test
pop
xor
cmc
sarl
sub
insl
adc
fbstp
test
push
sbb
inc
mov
scas
cmpsl
insb
test
scas
sbb
ss
int
repnz
sub
pop
call
cltd
adc
sbb
fiaddl
dec
adc
push
stc
call
mov
roll
call
stos
jnp
stc
out
mov
mov
mov
scas
mov
push
jecxz
jnp
add
loope
xchg
and
sbb
out
jno
roll
insl
sub
mov
adc
xor
dec
or
roll
ss
add
pop
dec
mov
mov
ja
shrb
int
mov
mov
xor
add
loope
mov
jecxz
in
pop
mov
cmc
ret
sarb
daa
dec
lret
out
ret
jle
outsl
std
out
xchg
lret
mov
add
adc
xchg
stos
push
nop
sbb
lea
insb
pop
cmpsb
xchg
cmp
jg
pop
pop
repz
sbb
orl
xor
add
push
pop
imul
adc
lahf
repnz
lds
outsl
mov
ret
inc
xor
push
jne
lock
aad
pop
cmp
cltd
dec
bound
nop
mov
je
repz
add
xor
das
pop
cmp
inc
xchg
xchg
ds
cmpsl
mov
add
aad
sub
movsb
sub
cmpsb
sbb
sbb
inc
dec
or
xor
mov
add
xchg
sub
je
add
pop
pop
inc
adc
pop
pop
mov
mov
cli
in
adc
mov
jmp
stc
mov
sti
subb
pop
ds
push
push
sub
cmp
or
adc
mov
add
sbb
loop
shl
add
stos
push
movsl
add
mov
or
sub
xchg
bound
cmpsb
jns
sbb
xchg
add
pop
or
push
shll
mov
add
or
mov
das
push
mov
hlt
jns
aaa
shll
das
fcmovnbe
sbb
or
mov
pushl
rcrb
mov
fcom
mov
call
pop
sbb
pop
inc
dec
add
push
loope
sub
jge
idiv
scas
or
scas
inc
mov
adc
sbb
lock
cli
mov
lock
and
in
scas
adcl
data16
sbb
jmp
or
loop
cmp
cmc
lcall
push
and
pop
pushf
cmpsb
mov
out
lahf
dec
xchg
movsb
gs
or
dec
scas
mov
push
inc
or
fstpl
cmp
outsb
andb
cmc
adc
jp
mov
stos
shlb
pop
dec
cwtl
cmc
cmpsb
mov
or
pop
mov
loop
cmpsl
adc
dec
int
inc
in
push
jecxz
fcmovnu
repz
xchg
sbb
ja
sub
cmp
ja
mov
jmp
adcl
pop
iret
push
mov
or
and
outsb
fbld
jnp
xchg
jno
mov
addl
js
xchg
insl
ds
cmp
sub
push
sub
hlt
int
cmpsl
mov
pop
ja
insb
loopne
insb
pop
mov
mov
movsb
adc
inc
fldcw
xor
inc
cli
popf
pop
repz
sub
pop
adc
test
int3
fcom
lods
mov
pop
pushf
out
into
int3
xchg
shrl
jnp
mov
inc
pop
in
scas
jbe
mov
mov
call
js
sub
mov
lret
in
sbb
mov
jno
stc
inc
push
mov
leave
pop
dec
xchg
pushf
scas
out
jmp
fistps
jge
stos
movsl
ficomps
cs
lret
pop
push
jae,pn
push
pop
dec
or
adc
repz
push
dec
cwtl
lret
arpl
jae
dec
test
add
jo
xchg
xbegin
aam
mov
sarb
sbbl
xor
cs
lcall
test
rorl
adc
sbb
push
dec
testb
mov
dec
xchg
mov
jg
cwtl
out
mov
or
fcoms
push
test
xor
rorb
mov
fwait
aas
faddl
jecxz
hlt
lock
test
out
pushf
or
pushf
adc
or
pop
mov
fisubrs
call
stc
shll
mov
mov
mov
popf
xlat
idiv
xlat
mov
jb
dec
imul
in
mov
aad
loope
lds
push
fldenv
push
je
mov
adcb
cs
xchg
sbb
loop
icebp
pop
les
push
adc
sbb
scas
loop
das
fs
sub
addr16
pop
or
inc
mov
add
int
sbb
roll
clc
pop
pop
or
pop
adc
xchg
std
das
pop
aaa
push
add
push
cltd
and
mov
test
jmp
mov
adc
xchg
xor
sbb
rolb
xorb
out
lcall
notl
xor
ja
push
hlt
push
shr
xor
cli
repz
test
or
and
js
mov
cmpsb
shll
iret
ss
addr16
in
iret
jg
mov
push
push
mov
mov
add
and
gs
dec
inc
cmp
xor
jg
decl
lock
mov
push
out
or
int3
movsb
sbb
stos
lret
inc
adc
rolb
dec
inc
xor
int3
mov
mov
push
rorl
outsb
mov
pop
push
repnz
pushf
xor
mov
sar
call
cmpsl
loope
mov
jp
arpl
jns
sub
fsubp
jnp
clc
and
push
into
arpl
and
cmpsb
cmp
push
mov
or
bound
sbb
ds
lret
jle
sbb
ds
arpl
enter
jp
adc
cmp
xor
out
cltd
dec
mov
andl
push
push
daa
mov
pushf
dec
aas
repz
mov
je
cmp
cmc
sbb
inc
sbb
repz
cmpsl
call
fistpll
lds
push
pop
mov
sarb
orl
lret
add
test
sbb
outsb
cmp
mov
jb
mov
mov
lret
bound
and
xchg
das
loopne
push
pop
mov
pusha
inc
or
lcall
jp
pop
lahf
mov
shlb
cmp
sub
ds
das
insl
mov
jb
roll
xchg
sahf
jmp
jo
dec
movsl
sub
and
xor
xchg
xchg
mov
ret
cld
dec
dec
fildl
pop
push
lods
sbb
bound
mov
xor
stc
stos
push
and
les
add
or
dec
test
divb
inc
lcall
cwtl
add
mov
clc
and
lds
das
mov
lcall
mov
mov
sbb
subps
inc
mov
das
jo
push
push
add
jp
in
xlat
jne
adcl
lcall
dec
sbb
addl
fwait
imul
sbb
jecxz
iret
mov
and
fs
les
cmc
lret
and
pop
add
cmp
stos
mov
lahf
pusha
dec
jge
call
mov
push
jp
sti
mov
imul
cld
dec
dec
push
inc
cltd
fldt
dec
adc
cmc
repz
shl
mov
insl
mov
stos
mov
pop
xor
cltd
test
and
rcll
pcmpgtd
push
lret
scas
push
push
aas
sar
pop
mov
inc
mov
or
cmp
xor
fdivrl
repnz
pop
xchg
xlat
fcmovb
inc
in
xchg
cmp
xchg
icebp
jmp
inc
or
mov
xchg
cwtl
mov
mov
cmp
jae
push
pop
mov
pop
mov
and
add
push
daa
pushf
inc
adc
mov
lds
addr16
mov
lcall
dec
out
mov
call
je
repnz
call
icebp
in
mov
cld
mov
xchg
lods
sbbl
add
push
mov
sbb
jg
adc
in
dec
fisubrl
lods
fcmovbe
lahf
mov
push
loop
or
test
mov
xchg
fimuls
inc
loopne
cmp
jns
lret
mov
fwait
adc
loope
loopne
movsb
dec
std
idivb
cmpb
clc
xchg
rcll
repz
es
push
inc
dec
and
in
stc
xor
jge
add
inc
cmpsb
mov
mov
rclb
sbb
push
bswap
scas
inc
imul
lcall
push
dec
repnz
pop
in
test
ret
repnz
jbe
pop
data16
lahf
popa
dec
xchg
or
outsl
hlt
dec
dec
sub
add
out
mull
cmp
test
ljmp
mov
inc
lcall
mov
fstpl
scas
cli
ljmp
lods
scas
and
pop
pusha
fiadds
lods
pop
mov
fildll
jle
inc
fstpt
aaa
faddl
and
fcompl
pop
pop
mov
cmp
dec
aaa
xor
popf
out
cltd
iret
ljmp
fcmovne
popf
js
jmp
jl
cmp
sbb
jp
pop
inc
ljmp
test
xlat
push
dec
insl
popf
cmpsl
pop
decl
rcl
push
loop
jg
insb
dec
pop
gs
jno
sub
call
push
inc
test
lcall
test
imul
jbe
inc
jmp
lds
fs
fsubl
add
sub
sub
imul
xchg
call
xor
lods
push
pop
fistl
filds
insb
and
sub
pop
pop
pop
cmpsb
mov
dec
mov
pop
xchg
adc
pop
mov
iret
mov
cld
ss
push
mov
fiaddl
sbbl
mov
enter
lods
stos
push
cmpsl
fwait
inc
push
into
out
test
sti
pop
dec
sbb
cmp
jmp
loopne
cmp
mov
xor
aam
dec
sbb
inc
mov
adc
push
hlt
sub
dec
aaa
mov
je
xchg
push
test
lea
mov
outsl
ljmp
inc
cmp
loop
mov
pop
in
movsb
mov
jle
in
ljmp
push
cli
jb
lcall
psrlw
xchg
sbb
out
jae
sbb
cmp
in
dec
add
aad
in
mov
cmp
jnp
int3
mov
xlat
fwait
push
jbe
inc
cwtl
xor
jecxz
and
add
xor
orl
mov
es
mov
fidivs
jbe
pop
ja
fsubrs
inc
dec
scas
stos
fcomp
jecxz
jne
stos
popf
jmp
lock
std
sbb
xor
jb
add
inc
out
in
test
jl
and
or
and
cmp
rcrb
jbe
data16
in
test
mov
cwtl
stc
push
dec
pop
hlt
sbb
jmp
dec
cmpsl
mov
jl
orb
lds
sti
ret
push
cmc
xchg
push
pusha
imul
imul
xor
nop
xchg
mov
cmp
in
push
aam
insb
in
fisttpll
mov
or
inc
jle
repz
cwtl
and
test
inc
loope
loopne
mul
or
sub
or
lock
and
or
mov
mov
inc
sahf
in
scas
fists
cs
jb
jo
sbb
inc
cmc
out
pushf
sub
inc
mov
push
pushf
lahf
addr16
jb
sub
pop
mov
aaa
push
or
imul
mov
rcrb
in
iret
insb
in
arpl
outsl
xchg
inc
pushf
mov
sbb
jo
lahf
sub
jb
imul
std
jno
or
loop
sub
xor
push
cmp
fmuls
test
mov
loop
or
out
bound
push
or
jl
inc
cmp
out
inc
lods
sub
pusha
xor
fwait
jns
xor
cltd
into
mov
aam
mov
into
bound
in
sarl
mov
mov
cmp
repnz
xchg
shl
test
repnz
lods
fldl
pop
jbe
jl
sub
xchg
dec
les
push
fidivl
shlb
cltd
push
cltd
enter
int3
jecxz
and
xchg
jmp
lret
out
and
dec
mov
lret
xor
out
inc
or
mov
dec
pop
leave
lret
arpl
cltd
js
or
inc
rorl
add
dec
cld
mov
cmpsl
xchg
pop
pop
jg
or
imul
mov
shrb
pusha
or
xor
imul
mov
sbb
shll
cmp
jmp
fnstenv
sahf
push
adc
cmp
into
nop
push
xchg
fldt
mov
pop
in
jno
xchg
pop
adc
push
add
stos
out
dec
lods
jmp
loop
pushl
lahf
loopne
or
inc
mov
cmc
fs
mov
movsb
clc
adc
pop
xorl
pop
pop
in
in
movlps
mov
push
mov
adc
sub
cmp
mov
icebp
orl
test
stc
divb
and
mov
inc
aas
or
mov
sbb
test
lods
cmpsl
das
sub
inc
push
jno
outsb
or
push
mov
daa
mov
test
fsubl
clc
push
cld
in
cmp
inc
push
xchg
lahf
sub
xor
movsb
fcoms
add
test
push
shll
popf
and
mov
out
in
xadd
add
cwtl
or
or
adc
dec
bound
add
and
outsb
push
push
std
lea
push
pop
xor
roll
dec
xchg
mov
add
fiaddl
aas
mov
decl
dec
xchg
orl
and
inc
sbb
in
fwait
xchg
flds
std
dec
fisttpll
mov
fwait
lods
scas
push
mov
xchg
in
jg
iret
mov
xchg
popf
push
xor
imul
out
imul
repnz
test
loope
int3
cwtl
dec
jno
add
dec
jae
fsubrs
dec
sub
mov
xchg
idivl
nop
mov
and
es
cmp
jnp
scas
inc
aam
cmpsb
js
leave
orb
cli
inc
sbb
dec
lea
cmp
adc
inc
das
sub
test
sbb
mov
xor
addl
fiadds
rcll
fs
add
cmp
inc
xor
xchg
shlb
push
cmp
xchg
pusha
push
sub
dec
mov
push
sbb
orl
push
mov
popa
mov
loopne
lods
push
loop
lret
cli
and
adc
mov
sbb
mov
adc
mov
and
in
push
bound
xor
dec
repnz
xor
and
cmpsl
push
inc
xlat
leave
cmp
std
aaa
movsb
test
push
sub
fidivs
dec
cwtl
pop
lods
push
jns
inc
adc
imul
sahf
xchg
jbe
shlb
clc
lods
or
int3
sti
dec
pop
fisttpll
push
dec
fistps
pop
sub
sub
pusha
add
mov
push
shlb
push
enter
fisubrl
in
test
fnstsw
fmull
in
imul
nop
or
push
jecxz
movsl
sbb
lods
mov
and
ficompl
xchg
ds
mov
ficompl
in
int
or
xchg
fsubp
mov
dec
imul
inc
sub
xchg
push
iret
fwait
xchg
push
cmpsl
inc
scas
jns
inc
sub
test
mov
ja
lock
jnp
xor
call
into
xor
imul
leave
ret
and
mov
mov
rcll
adc
aas
sub
nop
arpl
jb
mov
movb
iret
mov
rcr
ljmp
fisttps
test
loope,pt
mov
mov
xlat
cmp
stos
hlt
mov
sbb
or
sbb
cmp
cld
outsb
scas
pop
xor
mov
xchg
ss
or
notl
ds
in
xor
cmp
in
faddl
and
icebp
out
fnsave
jmp
lahf
stos
movsl
loopne
sbb
pop
mov
bound
fcmovnbe
sti
aaa
lock
cmp
or
jge
xchg
test
xor
lods
xlat
lret
sbb
scas
pop
push
jecxz
pop
mov
push
push
fcom
mov
movsl
mov
lret
inc
rcrb
int
sub
sti
pop
mov
repz
cmpsb
lds
dec
jmp
fidivs
movsb
ret
cmp
stos
es
popa
aad
ss
les
sub
sbb
add
iret
adc
mov
sbb
cmpsb
ror
push
xor
mov
adc
bnd
filds
jns
jmp
jle
or
jecxz
jmp
push
and
push
pop
fsts
ret
fisttpll
sub
fisubrs
mov
movsb
aas
stc
int3
cmp
outsl
adc
enter
dec
mov
out
sub
push
or
int3
loopne
mov
fidivrs
fistpll
loope
mov
das
xchg
out
movsl
lret
cmc
inc
sahf
sarl
adcl
pop
mov
cmp
add
in
inc
rcrb
ja
pop
jnp
adc
inc
adc
push
xor
mov
and
in
mov
sub
sub
sbb
fldcw
mov
push
ss
mov
mov
insl
or
in
mov
shlb
pop
mov
or
lahf
aaa
filds
aad
push
jp
mov
cwtl
xchg
jp
stos
icebp
sbb
add
pop
imul
cmp
and
adc
mov
cmp
inc
sub
lea
lock
mov
adc
jmp
push
shl
mov
pop
repz
pusha
shll
lahf
icebp
or
testb
call
mov
addb
xchg
adc
mov
mov
cmc
mov
and
in
test
pop
adc
jecxz
jb
add
inc
xchg
sbb
scas
popf
bound
lret
adc
cmp
add
adc
add
xchg
nop
out
or
imul
sarl
push
sbb
das
push
xchg
cltd
mov
xchg
lcall
loopne
push
xchg
sarb
pop
mov
jno
imul
add
cltd
xchg
dec
pop
rcrl
fld
fwait
lahf
imul
cwtl
cmpsb
sub
arpl
or
popa
loopne
push
mov
rcr
push
push
add
pop
jecxz
or
fidivrs
bound
dec
pop
test
ja
adc
inc
call
mov
xchg
cmp
insl
bound
adc
mov
loop
xchg
push
lds
cmpsl
outsl
cmpsb
and
cld
aad
fldt
mov
bound
shlb
sub
mov
sub
sbb
pusha
adc
pop
sub
xchg
loopne
cmp
subb
cmp
lret
out
fwait
mov
rolb
inc
push
aaa
movsb
xchg
clc
or
adc
sbb
sbb
lods
jnp
cmp
inc
lcall
inc
add
iret
or
lds
lret
in
les
mov
stc
push
lods
sbb
adc
in
dec
xchg
jns
mov
push
sub
mov
scas
test
insb
jmp
lret
cmc
xor
inc
stos
arpl
mull
sbbb
popf
fnstenv
insb
mov
scas
xor
inc
sbb
out
ds
inc
xchg
cmp
repnz
lock
into
push
outsl
jne
insb
or
lahf
push
iret
sbb
in
lcall
mov
or
push
mov
jmp
dec
push
test
mov
xor
frstor
in
pushf
mov
sub
pop
mov
imul
or
mov
mov
adcl
xchg
sbb
daa
push
sarb
mov
xchg
sti
inc
aad
lds
into
cmp
cwtl
or
lds
rcrl
jmp
xor
pop
mov
ja
mov
scas
xlat
lods
mov
fldl
mov
outsb
test
push
adc
inc
mov
sbb
xchg
ret
and
pop
das
xlat
cld
or
ds
popa
insb
jne
and
ret
mov
ds
pushaw
pusha
sub
out
xchg
outsl
fldenv
adc
cmp
pop
sbb
hlt
jmp
mov
stos
cmpsb
pop
scas
and
jnp
sbb
lds
xor
aam
mov
shl
pop
push
sti
jp
push
jmp
inc
test
xchg
mov
lret
sbb
dec
sub
sub
or
jle
movsl
sarb
ror
xchg
lret
mov
xchg
jmp
xchg
and
mov
mov
and
push
push
push
insb
xor
imul
mov
push
sti
idivb
out
dec
and
pop
jae
leave
ficoms
xchg
movsl
xlat
shr
aaa
mov
test
lds
cmp
mov
mov
inc
jns
test
dec
and
aas
insl
mov
sbbb
test
insl
sub
add
out
lea
cmp
imul
inc
in
xchg
subl
jecxz
sbb
aad
std
imul
dec
cmp
xor
imul
push
test
sub
push
mov
fwait
aas
lods
fbstp
lahf
and
mov
push
sbb
sbb
icebp
nop
bound
popf
fcomip
sub
or
dec
adc
subb
and
out
dec
dec
push
sbb
pop
push
negl
add
jae
fisttpll
adc
inc
cmpsb
mov
test
lds
icebp
insl
pusha
jns
mov
xor
dec
lret
orl
loope
adcb
push
out
scas
stos
nop
and
cmp
std
iret
iret
inc
push
aas
jns
push
in
dec
cmp
jmp
inc
leave
lret
outsb
adc
popl
mov
in
adc
adcb
insb
stc
push
outsb
hlt
les
enter
sahf
arpl
ss
outsb
movsb
shrl
xchg
lock
pop
aam
mov
std
aas
pop
fldpi
mov
jb
pop
push
scas
enter
dec
jecxz
ljmp
xchg
outsl
mov
jl
sbb
pop
out
icebp
mov
jae
mov
sbb
or
lret
mov
fisttpl
sbb
mov
loop
scas
push
cmpl
loop
jns
push
adc
sahf
cmp
arpl
int3
mov
cmp
xchg
call
jge
int
lcall
fs
arpl
jmp
dec
jae
push
push
sbb
cmp
or
sub
sbbb
icebp
push
neg
enter
push
jmp
jb
mov
scas
mov
and
ret
mov
mov
cwtl
and
xchg
cmp
cli
pop
ljmp
mov
pop
imul
repnz
mov
aad
xlat
jb
sub
notb
jbe
mov
cmp
in
cwtl
inc
push
push
xchg
test
cmpsb
shl
push
mov
out
mov
push
mov
popf
push
push
inc
out
xchg
dec
or
imul
add
leave
mov
push
fadds
push
leave
push
retw
pushf
sbb
dec
mov
pop
sub
fcomps
sahf
int3
mov
popf
sub
adc
xchg
or
mov
mulb
enter
mov
lds
lods
push
cmp
mov
movsb
pop
push
lock
cs
sahf
cmpb
add
jmp
adc
jne
push
mov
jo
push
pop
mov
pop
imul
imul
lret
notl
out
sbb
cmpsb
mov
outsb
cld
mov
popf
pop
jg
jo
js
jecxz
addr16
ret
mov
fmull
xchg
sti
fst
test
shrb
cmovb
sub
cmp
outsl
leave
jns
stos
mov
mov
fcompl
scas
jbe
or
fcmovbe
sub
insl
imul
into
sbb
filds
pop
dec
aaa
adcl
mov
outsb
sbb
sub
dec
mov
cmpsl
fcoml
push
or
jp
mov
cmovg
cmp
ljmp
leave
bswap
enter
sbb
mov
push
dec
fcompl
dec
mov
cld
push
jae
leave
mov
ffree
ja
hlt
iret
push
mov
sub
xchg
roll
sbb
adc
les
adc
into
jns
cmc
cmp
int
pop
cs
inc
pop
fldenv
xor
les
pusha
sbb
fsubrs
inc
es
xchg
xor
daa
jae
mov
pop
imul
xchg
fst
xchg
std
adc
mov
scas
addr16
mov
adc
imul
mov
add
sbb
mov
jne
fildl
shrb
pop
movsb
stos
inc
stc
sub
pop
fadd
sub
int
gs
mov
adc
subl
push
popa
pushf
cmp
and
rorl
jmp
sub
js
xchg
imul
int3
cmp
xrelease
adc
incl
and
cmpsl
repz
jns
pop
xchg
or
rol
or
lods
into
sub
xchg
ficompl
cs
rcrl
les
out
pop
int3
stc
jo
or
push
cltd
adc
test
mov
sti
sbb
or
push
movsb
sarl
in
jle
js
cwtl
rcll
sti
into
jne
sbb
mov
test
mov
mov
add
jle
xchg
mov
jp
jns
add
mov
fbstp
pushf
jmp
pusha
js
loop
mov
lret
data16
jns
sbbl
pushf
push
js
loope
negl
adc
cmp
mov
or
cmp
mov
jbe
cmpsb
data16
movsb
pusha
dec
hlt
lods
mov
mov
push
cmp
push
adc
movl
sub
insl
dec
xorb
xorb
or
enter
lods
xchg
add
pusha
add
jecxz
in
outsb
mov
mov
in
inc
pop
mull
fwait
sbb
lret
pop
imull
mov
fimuls
push
ja
loopne
enter
cmp
cmc
lahf
pushf
adc
mov
jno
push
scas
push
push
push
sub
mov
loop
sahf
pusha
addl
dec
jl
adc
lahf
and
mov
lea
outsb
mov
shrb
fsubs
xchg
mov
xor
mov
mov
mov
mov
iret
push
sbb
jle
out
dec
out
lret
pop
popf
fnstsw
dec
cwtl
push
add
das
or
sbb
sbb
inc
cmp
mov
xor
sub
into
in
jg
ret
int3
shlb
sbb
sub
and
sbb
xlat
mov
dec
test
test
jbe
or
movsl
das
fdivs
xchg
xor
or
adc
sti
sbb
xlat
or
xchg
hlt
inc
mov
jecxz
xchg
out
push
add
int
movsl
pop
sbbl
mov
add
andl
xchg
nop
into
lea
add
or
cld
aaa
xor
dec
aas
mov
daa
loopne
in
or
add
dec
mov
cltd
and
dec
or
movsl
adc
lret
inc
jbe
inc
push
fwait
jno
popaw
lahf
add
and
xchg
mov
pop
jecxz
ret
pop
jno
adc
lods
test
xchg
shrl
mov
jne
ljmp
ds
leave
jge
pop
push
fisttpll
nop
or
aas
xor
rorl
sarb
or
sub
cli
pop
aas
jnp
mov
xor
jns
loopne
daa
mov
push
out
inc
cmc
mov
imul
adc
mov
shrb
sbb
mov
push
call
xor
fwait
inc
pop
stos
out
push
test
xor
dec
mov
movsb
push
add
fiaddl
mov
iret
and
add
in
fsubr
sahf
mov
xor
in
movsl
incb
jno
xor
std
cmp
lds
dec
adc
dec
cmp
dec
inc
shlb
sbb
insb
shlb
mov
aam
int3
int3
cs
and
scas
sub
mov
mov
jl
cmp
clc
push
and
roll
and
imul
hlt
add
stos
push
lcall
ret
mov
loopne
mov
cmpsb
ficompl
mov
or
ja
dec
loopne
sarl
mov
mov
fsubl
push
sbb
test
push
cltd
ret
dec
mov
lods
mov
mov
bound
inc
inc
je
stc
push
lretw
cld
xchg
icebp
add
sbb
xor
pop
test
inc
sbb
jle
push
xchg
ret
in
mov
into
enter
mov
cld
les
inc
in
rolb
dec
lods
mov
and
shll
sbb
lret
push
adc
pop
rcll
add
leave
sub
jl
lret
or
mov
or
cmc
push
adc
pusha
outsb
and
aas
cmp
orl
push
int3
je
jle
dec
sub
pop
sub
lret
pusha
pop
cmp
pop
jmp
xchg
xchg
into
data16
cli
in
xlat
mov
lcall
fsubrp
mov
shll
mov
cwtd
inc
test
insl
adc
mov
pop
rorl
or
cltd
fs
mov
jnp
push
nop
mov
rdmsr
in
or
outsb
inc
stos
mov
out
addl
dec
pusha
or
cld
xchg
lods
ljmp
pop
les
jmp
leave
push
xchg
push
imul
int
fbld
lods
icebp
xlat
pop
cmp
aaa
out
pop
icebp
popa
scas
mov
xor
xlat
mov
lret
mov
daa
in
inc
adc
lods
mov
ja
lret
outsl
adc
js
out
mov
jo
movsb
ja
push
push
ret
add
cmp
ljmp
jmp
jo
aad
bswap
daa
jge
nop
mov
cmp
lock
xor
jbe
push
cmp
dec
cmp
push
push
decl
rorl
and
mov
fdivs
mov
rcll
pusha
aaa
adc
inc
mov
arpl
nop
and
adc
or
pop
imul
jb
icebp
mov
sbb
xchg
dec
sub
scas
adc
lret
sub
inc
add
jno,pt
paddd
add
dec
pop
xchg
sbb
sbb
push
int3
sbb
and
inc
cmp
jnp
cmc
clc
cmp
cmpsb
xor
xlat
adc
es
lods
xchg
test
cmc
push
xchg
sbb
dec
push
ja
xchg
cmp
pop
add
add
inc
xor
out
adc
enter
inc
push
outsb
sub
or
mov
pop
and
xor
cmpb
icebp
jle
sub
add
ds
insl
aas
push
mov
push
and
xchg
rolb
data16
dec
loop
jbe
out
mov
dec
sbbb
addr16
test
add
sbb
dec
iret
prefetcht2
pop
insb
push
lock
jne
inc
mov
ret
cmp
popa
and
xor
dec
sub
gs
adc
mov
xchg
fsts
ficoml
dec
insl
dec
xchg
xchg
and
mov
mov
inc
sahf
lret
sbb
leave
rorl
adc
inc
pop
int3
mov
xor
sbb
fcoms
xchg
sahf
dec
xchg
inc
ja
call
xorb
into
mov
push
add
mov
sbb
mov
jo
push
lahf
cmp
dec
lret
mov
in
lods
add
jb
adc
push
divl
inc
xor
inc
push
cmpsl
mov
mov
stos
xchg
sub
jmp
loopne
out
addr16
sbb
aaa
jb
mulb
clc
jnp
arpl
xor
pop
mov
push
int3
std
dec
flds
sarl
call
mov
mov
and
jo
in
les
and
pop
add
jae
mov
cmp
rol
sub
xor
mov
fbstp
cmp
stc
cmpsb
dec
pop
cmp
mov
rclb
cmp
jl
repnz
test
mov
jecxz
pop
pop
inc
sub
xor
lods
test
and
xchg
lds
dec
jo
fcmovnbe
mov
cmp
vmovntpd
das
adc
xchg
push
mov
xchg
jo
pop
addr16
fwait
mov
pop
sub
sub
sub
test
movsb
adc
xor
in
ds
aaa
jl
xor
jle
mov
inc
and
jae
in
outsb
mov
push
jb
jecxz
mov
or
jp
iret
sub
mov
into
lods
cmpsl
ret
faddl
add
push
xor
inc
or
mov
std
pop
imulb
lcallw
or
or
sub
push
aaa
sarb
xlat
leave
ds
scas
test
int
rclb
andl
cmp
scas
hlt
dec
add
jle
inc
or
pop
insl
mov
mov
mov
loop
mov
cmp
jecxz
pop
xchg
sahf
in
aad
insb
add
push
mov
test
xor
imul
stos
movsl
lea
sub
in
push
inc
pop
adc
dec
adcb
add
mov
sub
xchg
mull
icebp
or
dec
push
das
aad
roll
divb
loope
add
mov
push
mov
and
jno
or
pop
je
loopne
lock
mov
lret
pop
ja
imulb
pop
lret
loopne
adc
aam
mov
xchg
ljmp
dec
lods
pop
subl
mov
sbb
sub
std
push
dec
or
push
ret
int3
mov
xor
es
out
or
push
jbe
xlat
call
or
fstpt
imul
test
jne
shrl
dec
and
push
in
sbb
pop
mov
cmp
xchg
stc
lret
push
lahf
jno
push
xor
rorl
pop
stos
cmpl
icebp
sbb
cli
fidivrs
lock
dec
lods
sbb
lods
cli
mov
rcrb
dec
test
icebp
fsubrs
push
cmp
dec
pop
push
mov
xchg
xor
mov
inc
fldcw
mov
out
jbe
jle
lcall
xor
inc
test
jnp
lds
bound
pop
int3
push
sbb
test
pop
lock
sbb
test
or
addl
in
adc
mov
fs
cmpl
pop
test
dec
test
test
shlb
inc
cmc
mov
add
stos
imul
pop
subb
fidivs
jge
frstor
pop
test
es
fsubs
pavgw
lret
cwtl
aam
dec
inc
dec
push
cmpb
aas
in
and
lahf
push
out
jl
xor
xor
or
cmpsl
push
mov
mov
dec
imul
mov
sub
mov
js
lcall
int3
adc
mov
cmp
or
jne
push
lds
aas
sbb
jmp
dec
ret
sbb
fidivrl
stc
enter
fmull
fcoms
jns
cmp
out
xor
hlt
xor
mov
fucomip
and
lock
push
popf
out
mov
mov
test
pop
aaa
mov
inc
dec
pop
jl
mov
inc
ret
jge
int
lds
pop
jp
and
repnz
call
mov
aam
mov
cld
jg
inc
mov
jl
in
xchg
adc
push
xlat
rorl
xor
sti
push
sub
imul
shr
xchg
int3
add
jle
and
ret
or
xchg
mov
or
ja
mov
dec
lds
sbb
faddp
outsl
into
jl
push
inc
pop
mov
inc
orl
xchg
xchg
push
sbb
ja
out
xor
mov
int3
sub
mov
mov
data16
and
xchg
cmp
inc
in
jno
xor
imul
leave
cmpl
sub
std
subl
sbb
sbb
mov
mov
leave
sub
subb
xor
jmp
fldt
cli
and
sbb
jl
push
cs
mov
sub
cwtl
cld
or
push
les
roll
imul
and
xchg
mov
inc
lret
repnz
ds
jo
adc
mov
inc
or
jge
mov
loop
push
jmp
into
dec
pop
mov
push
mov
repz
dec
outsb
sbb
push
fildll
mov
int3
lods
pop
xor
ja
mov
pushf
cmpsb
mov
es
inc
fadds
loope
adc
out
or
into
or
push
das
insl
pmaxsw
push
xorb
add
mov
negb
sub
inc
mov
inc
out
scas
bound
xlat
jne
xchg
ds
mov
sti
scas
test
sahf
bnd
rorb
push
adc
stc
add
sbb
sub
mov
pop
and
test
cmp
cmpsb
insb
sbb
xchg
aad
fnstcw
push
rcl
xchg
stos
in
and
lock
mov
divb
int3
inc
adc
ja
xchg
out
push
cs
arpl
jo
leave
int
sbb
push
bound
leave
data16
shll
sbb
shlb
stos
cmp
xor
js
mov
and
movsl
jmp
inc
loope
ficompl
adc
jnp
aas
pop
int3
in
je
pop
xor
sbb
in
fistl
test
dec
jo
int3
int
xor
popa
sbb
mov
int
lret
cmpsl
sbb
sbb
or
aad
in
out
and
outsb
xor
inc
sbb
lret
mov
ret
pop
fdiv
je
cmp
hlt
sbb
add
pusha
adc
stos
push
int
rcr
lds
inc
outsl
dec
and
sti
in
or
and
pop
into
lret
xchg
inc
cs
lods
fisttpl
mov
cmpsb
adc
dec
test
scas
push
out
mov
sub
push
mov
xchg
iret
popf
rcl
xchg
cmp
cli
enter
push
or
xchg
nop
push
sub
int3
xchg
jns
sbbb
dec
fs
jmp
mov
pop
add
mov
sbb
rclb
lahf
cwtl
inc
stc
test
pop
mov
jno
test
sub
rcr
mov
push
push
lahf
sbb
mov
jo
out
aad
aas
cmp
mov
cwtl
nop
aas
jle
or
xchg
jbe
push
xor
add
mov
loop
mov
icebp
xchg
aas
add
pop
ret
jbe
push
hlt
and
ret
imul
mov
sbb
movzbl
data16
dec
sub
ret
sti
jo
add
je
or
push
jecxz
inc
pop
xchg
sbb
adc
dec
adc
cs
fsubl
jecxz
addl
push
sub
insb
rolb
test
jnp
lea
mov
pop
je
enter
mulb
std
nop
aam
cmp
or
roll
and
divl
cmpsl
lahf
cld
or
cmpsb
rcrb
inc
add
xor
cld
testb
xlat
mov
iret
pop
sbb
dec
mov
pushf
add
rcll
stos
or
test
xchg
sub
mov
popa
sar
xchg
adc
iret
repnz
lcall
xchg
jne
lds
lret
in
mov
loopne
push
es
addr16
outsb
cmp
out
aas
push
xor
lods
jmp
pusha
daa
gs
hlt
cs
jnp
xlat
push
gs
xor
inc
mov
or
push
dec
mov
rcl
mov
mov
ss
repnz
rcll
dec
in
outsl
jns
js
pop
dec
aas
jmp
push
add
push
into
lods
push
add
push
push
push
dec
sub
out
push
mov
cmpsb
adc
fsubrs
add
xchg
xor
cmpsb
xor
push
and
es
xlat
cmpl
clc
fbld
mov
test
or
insl
adc
icebp
mov
filds
leave
bnd
imul
inc
je
mov
sbb
sbb
popa
test
jle
mov
call
test
jnp
push
and
imul
out
mov
and
adc
out
daa
stos
fxtract
inc
gs
xor
xor
enter
aad
lret
aad
push
pop
fsub
enter
and
jns
push
popf
test
cmp
xchg
aaa
mov
dec
push
or
and
mov
pop
shrb
adc
in
inc
les
iret
stc
sahf
xor
fs
ret
or
jl
sbb
hlt
sahf
ljmp
mov
insb
lea
sbb
lcall
scas
stc
cld
mov
lret
lcall
dec
ret
negb
pushf
insb
or
aas
packsswb
cmc
scas
cltd
out
and
ss
push
addr16
subl
jno
jae
lea
sbb
dec
mov
dec
and
xchg
xchg
nop
jg
cld
insl
dec
clc
mov
jbe
scas
mov
lret
js
lods
test
in
cmp
xchg
mov
sub
mov
in
inc
stos
cli
mov
xor
dec
cld
mov
ja,pt
out
into
movsb
fwait
add
repz
es
mov
por
adc
lret
repz
scas
nop
pusha
mov
pop
cmpsb
xchg
out
lret
mov
xchg
cltd
cmc
imul
xchg
je
xchg
dec
movsl
or
dec
cmp
in
sbb
mov
mov
xor
getsec
adc
cli
xchg
outsb
jge
fdivs
push
mov
nop
jne
or
inc
sub
mov
pop
cli
clc
cltd
lret
popa
and
sbb
mov
stos
adc
sub
js
sbb
ja
shll
lahf
ja
pop
lock
dec
rcrl
insb
imul
outsb
cmpsl
mov
push
add
in
mov
jge
jmp
ss
and
aas
fisttpll
call
cmp
pop
int3
jg
test
cli
orb
aas
mov
xchg
cmp
fisubrl
outsl
ds
shlb
sahf
test
jg
mov
xchg
mov
sbb
mov
mov
in
stos
xchg
add
mov
rcrl
cltd
sbb
xlat
mov
mov
jge
ss
mov
popa
aam
mov
xchg
push
add
sbb
ret
or
add
push
arpl
loop
mov
add
pop
sbb
mov
loopne
cmp
jno
push
lods
stc
jnp
pop
cli
mov
mov
fsubrl
dec
mov
std
push
push
stc
inc
rclb
cltd
pop
mov
aad
xchg
aad
or
adc
stc
dec
lock
mov
mov
je,pt
mov
inc
outsl
fsts
push
cmp
inc
adc
push
mov
or
xchg
fdivl
xchg
clc
shl
jge
sbb
aam
adc
pop
gs
fcompl
mov
lods
cmp
xor
jl
lods
mov
xchg
test
stos
mov
push
add
clc
xor
mov
rolb
push
loopne
mov
in
push
sub
loopne
lret
dec
divps
push
push
dec
or
test
sysexit
aam
aaa
cmpsl
ljmp
outsb
pop
imull
mov
bound
sti
mov
orl
lods
dec
inc
sub
fcmovbe
or
mov
cltd
gs
cmp
push
test
mov
push
cld
fisubrl
pop
out
das
pop
popa
push
aaa
nop
cwtl
pop
cli
cmp
repnz
mov
add
fsubr
frstor
sub
mov
into
sub
hlt
sbb
jae
mov
jmp
ds
jno
cli
ret
sti
das
dec
pop
pop
mov
xchg
loopne
inc
dec
dec
sub
inc
ret
fcmovnb
add
cmp
insb
cmpsb
out
adc
andl
mov
mov
mov
test
leave
cmpsb
test
adc
rol
pop
movsl
dec
cmc
jne
mov
sub
push
lret
arpl
stc
pop
push
cmpsl
sarl
xchg
test
mov
dec
lcall
aas
lcall
xchg
and
adc
lods
cmovge
sahf
dec
adc
lea
cmp
lods
xchg
faddl
sbb
call
push
and
add
pop
xor
add
jae
ret
js
push
and
push
fldl
mov
outsb
js
sti
lret
inc
jmp
jg
push
sahf
scas
mull
lea
mov
fxam
push
daa
outsb
data16
in
pop
rcrl
xchg
lods
rcr
jg
push
and
mov
popa
arpl
ret
gs
lods
out
ja
lds
dec
add
mov
jp
in
push
pop
in
sbb
dec
fwait
pop
cwtl
xor
outsl
dec
mov
lret
lds
xlat
dec
xchg
or
fwait
jnp
mov
fsts
dec
and
dec
loop
xlat
mov
jo
mov
push
jl
outsb
shll
adc
sbb
sbb
and
lret
cwtl
sbb
mov
push
mov
inc
movsb
xchg
mov
and
mov
jg
test
lret
add
pushf
lcall
push
leave
in
push
push
aam
sbb
pop
cmpsw
and
lret
pop
inc
add
shlb
pop
test
ljmp
fists
addr16
jmp
or
lods
out
mov
das
cmp
cld
xchg
sbb
pop
or
into
imul
mov
in
xchg
inc
cmc
lret
lret
mov
add
imul
arpl
int
push
fistl
shll
rol
iret
cmp
jp
rcrb
imul
sbb
addr16
xor
xchg
inc
mov
stos
call
add
push
repz
adc
lods
cmpsb
xor
lret
sbb
push
lods
shll
insb
mov
test
cli
cmp
jae
xor
dec
rcll
xor
popf
jbe
in
xchg
mov
add
je
or
fbld
fbstp
sub
cmp
popf
outsb
push
inc
imul
ret
fcomps
outsl
arpl
cmp
addr16
addps
pop
inc
jp
clc
lea
pop
push
cltd
xor
xchg
mov
inc
lods
lcall
jecxz
rcll
or
int
push
mov
sarb
mov
or
sbb
repz
pusha
mov
jnp
push
lods
clc
xchg
mov
add
sub
mov
mov
xchg
adc
xchg
rcrl
in
mov
fwait
inc
mov
repz
jb
insl
insl
xchg
mov
pop
mov
movsl
add
ljmp
sub
shll
imul
xor
pop
sbbb
push
out
mov
push
dec
dec
cmp
hlt
push
cmp
stos
xchg
shrb
int3
cmp
or
fiadds
xor
add
mov
sbb
jp
sub
or
add
add
dec
or
push
mov
pop
sbb
sub
nop
cmpb
cmp
je
ss
mov
xchg
pop
mov
outsl
jg
bound
roll
hlt
ret
xchg
pop
push
ja
movsb
xchg
mov
push
loopne
in
xchg
xor
movsb
dec
scas
adc
or
push
mov
cwtl
or
addl
push
js
int3
sbb
sub
ja
lds
xchg
sbb
mov
leave
dec
sbb
idivb
add
push
push
xorl
mov
inc
pop
rol
jbe
ljmp
enter
imul
mov
xor
add
xor
push
xlat
pop
test
fstp
dec
pop
cs
lcall
icebp
lcall
int3
int
out
mov
icebp
adc
inc
bound
cwtl
hlt
dec
pop
in
sbb
cmp
movsl
fistpl
imul
iret
stos
outsb
lcall
test
into
test
xor
pop
les
xor
and
fildl
mov
cmpsl
and
loop
pop
cld
mov
sub
notb
imul
jnp
inc
test
mov
or
add
ljmp
adc
aam
mov
inc
dec
leave
inc
test
add
xor
loopne
dec
sub
cmp
aaa
dec
jnp
jl
incb
lret
rclb
xor
sti
cmp
out
mov
icebp
enter
clc
popl
xchg
push
test
ds
mov
popf
push
es
mov
adc
imul
lcall
repnz
mov
pop
or
pop
sbbl
and
and
test
jp
shlb
xchg
movsl
or
sbb
fsubrs
pop
mov
mov
mov
in
shlb
clc
pop
in
leave
data16
enter
sahf
scas
iret
fisubrl
push
clc
jnp
adc
movsb
fbstp
in
cmpsb
mov
xorb
cmp
outsl
jae
add
mov
xor
dec
add
xor
and
pop
xchg
nop
mov
inc
add
mov
cmpsl
ja
jecxz
subb
test
arpl
insb
jno
push
testb
inc
cmpsl
icebp
or
or
shll
or
in
dec
dec
je
out
jno
sbb
xor
dec
xor
ficoml
sub
dec
push
sbb
pop
jl
addr16
andl
mov
dec
sti
xor
push
pop
out
inc
add
sbb
sbb
jb
adc
sub
test
and
fisttpl
insb
inc
pop
add
inc
aad
dec
rclb
add
lret
shl
jecxz
or
cltd
adc
cmc
jno
outsl
sbb
mov
aaa
leave
incb
loope
xchg
lods
push
inc
dec
cwtl
lret
sbb
sti
loopne
std
cmpsl
pop
xchg
in
mov
out
push
das
mov
jns
push
dec
dec
xor
andl
and
adc
xor
test
pop
sbb
stc
dec
sbb
dec
outsl
in
pusha
mov
mov
mov
cld
aad
mov
outsb
xor
mov
push
sub
add
ja
pop
pop
aad
or
je
fidivrl
mov
out
sub
xchg
aad
or
lcall
ret
daa
and
mov
or
jmp
cli
cmc
mov
call
xlat
xor
outsb
pushf
imul
ror
scas
and
inc
lds
movsl
xor
lds
mov
shl
sahf
out
lret
test
stos
inc
xor
inc
inc
or
push
lea
inc
in
xor
mov
add
std
fsubs
pop
scas
call
std
test
cmpb
push
mov
mov
ret
xchg
in
in
add
repz
into
les
das
xor
xchg
movsb
mov
mov
xor
sub
fcompl
dec
xor
cltd
jbe
dec
or
and
lret
xor
and
push
clc
rorl
cs
or
xor
mov
out
cmpsl
in
cmp
mov
jge
xor
mov
push
popf
insl
jns
hlt
ret
xchg
or
and
push
xchg
dec
jge
fbld
mov
pop
mov
or
iret
insb
insl
movsl
dec
fs
or
dec
adc
xorb
ja
and
lods
dec
loop
arpl
gs
fnstenv
dec
inc
decb
pop
mov
lods
jecxz
pop
stos
out
cmp
pop
pop
out
loop
mull
outsl
add
inc
pop
mov
pusha
cmpl
sbb
dec
adc
mov
pop
mov
sub
xor
push
scas
add
lret
pop
dec
mov
test
sbb
pushf
mov
xchg
cmpsb
loope
test
out
add
mov
lcall
fisubrl
sbb
shlb
sub
into
shrb
imul
sub
jns
scas
shrl
cli
and
jae
repnz
inc
jecxz
or
mov
mov
cmp
xchg
and
testl
jp
popf
clc
inc
add
inc
inc
dec
mov
xchg
fildll
sub
jmp
push
jnp
dec
xor
adc
inc
aaa
pop
or
negl
inc
xchg
sub
mov
ret
mov
push
or
out
mov
lret
pop
xor
in
aam
addr16
scas
cmp
add
fidivrl
jecxz
lahf
adc
ljmp
cmpsb
adc
gs
dec
push
inc
mov
fadds
clc
icebp
mov
fs
and
adc
ljmp
out
aaa
mov
fcmove
shr
inc
aam
dec
xchg
test
nop
pop
in
mov
or
lcall
add
and
push
sbb
daa
test
pop
in
mov
mov
pop
ret
loope
and
mov
shll
jb
orl
or
mov
and
pop
lods
imul
test
lods
fs
shrl
and
sub
sti
ret
mov
xchg
xor
popa
xor
or
dec
jmp
mov
jno
dec
add
inc
cwtl
mov
repnz
mov
adc
call
ret
dec
mov
push
or
sbb
mov
jl
ret
cmp
rcrl
adc
aaa
notb
or
test
fcmovnbe
daa
sahf
roll
icebp
es
scas
cld
adc
xchg
mov
xchg
dec
sbb
inc
dec
mov
mov
sbb
je,pn
dec
ret
push
loop
outsb
in
fstl
mov
cmp
mov
jmp
mov
mov
or
xchg
add
je
mov
xor
mov
scas
pop
test
push
orb
inc
xchg
ss
push
in
ja
enter
lea
sbb
divb
out
mov
inc
sub
fs
add
push
in
jecxz
xor
popa
sub
pop
loop
add
pusha
aad
leave
ret
xor
add
push
mov
popa
mov
rorl
lret
mov
xchg
or
sbb
and
les
xchg
mov
xchg
rcll
sub
adc
pop
xor
cwtl
int
pusha
sub
or
and
jmp
loopne
cmp
aas
subb
jg
fs
xchg
sbb
mov
loopne
and
fucom
int
sbb
sub
and
lock
pushf
movsb
movsl
adc
xchg
pop
or
inc
and
popa
je
or
mov
enter
scas
shl
jge
dec
dec
js
sbb
cmpsl
in
sti
daa
dec
cld
imul
push
cld
popf
sub
dec
inc
jge
sbb
push
push
pusha
call
popw
xor
mov
fnstcw
adc
mov
jo
ret
mov
or
jae
stc
test
sub
iret
or
push
xchg
rorl
inc
pop
je
ss
cld
jmp
ja
adc
push
ss
icebp
mov
or
and
xchg
out
stos
fcomip
movsb
lock
call
push
dec
stos
add
mov
and
xorb
mov
arpl
cmp
scas
fisttps
scas
fistpl
ljmp
dec
cmp
add
shrb
cmp
jae
arpl
andb
insb
lock
push
repz
and
jmp
pushf
jb
jnp
das
or
pop
loope
or
orl
xchg
int3
pop
repnz
rcr
scas
sub
aam
nop
rclb
sahf
in
cmp
jns
test
jns
shl
dec
js
adc
inc
pop
xchg
push
lahf
fs
dec
cmp
mov
xchg
adc
xchg
ss
stc
add
pushf
adc
mov
pop
fstpt
sbb
rclb
sbb
xchg
imul
shlb
jbe
xor
dec
insb
loopne
js
enter
in
imul
icebp
test
aaa
popa
inc
mov
int3
or
mov
insl
cmp
imul
ficompl
fwait
xor
inc
sbb
outsl
cmp
ds
or
xor
mov
shll
xchg
pop
ss
negl
inc
subb
fbstp
fidivrs
popa
std
xor
lahf
shrl
fldl
lods
dec
repnz
xchg
and
ret
ljmp
in
ja
test
mov
and
aad
add
push
sbb
cmp
cmp
mov
int
enter
into
dec
xor
ret
fcomp
vcvttsd2si
stos
cmpsl
inc
leave
repz
add
in
dec
add
or
shll
dec
dec
cmpsl
or
sub
add
push
jnp
mov
mov
mov
pop
mov
jmp
mov
or
pop
sti
pop
stos
inc
xor
push
xchg
add
cli
add
subl
pop
xchg
jecxz
out
jne
xlat
cltd
cwtl
add
in
lret
loop
popa
mov
imul
jmp
bndstx
sub
fildll
jg
fistl
pop
ds
mov
icebp
clc
lret
in
pop
push
add
xlat
hlt
mov
aad
jmp
cmpsl
mov
adc
cmp
xor
outsb
popf
dec
mov
insb
jmp
gs
in
pop
and
in
sahf
cmpsb
popf
jl
sahf
ljmp
cmp
sub
add
iret
sub
ja
push
ficoms
test
jno
dec
rclb
nop
sbb
lret
add
dec
rcrl
test
outsl
aad
pop
dec
movsb
pop
imul
xchg
push
push
mov
cmp
mov
push
sub
scas
push
jns
dec
aam
mov
push
adc
push
sub
outsb
and
cmc
xchg
jnp
pop
add
push
jmp
cmp
pop
mov
cmp
movsl
out
add
loopne
jmp
cmp
lcall
shll
cld
rorl
stos
push
push
test
and
js
cs
dec
inc
mov
cli
fiaddl
ja
mov
mov
sub
rorl
pushf
hlt
fiadds
mov
cmpsb
xchg
inc
and
cmp
mov
popf
sbb
xchg
adc
dec
fidivl
sbb
es
and
push
fcoms
sub
jp
fldt
adc
in
mov
mov
sub
fimuls
test
subl
outsb
mulb
sub
cmpsl
inc
inc
ja
push
sbb
jmp
stc
mov
out
repz
mov
push
and
shl
repz
dec
cld
jns
jae
lcall
sbb
fldenv
lcall
xor
and
hlt
push
cmp
data16
pop
and
test
cmpsl
not
not
xor
push
loopne
clc
adc
push
inc
out
ret
decl
mov
imul
lock
or
inc
inc
add
dec
xchg
sub
jl
outsl
jbe
dec
lea
xchg
js
mov
inc
inc
inc
xchg
or
add
negb
pop
pusha
lcall
and
push
imul
add
loope
rcl
xchg
aad
aas
add
lcall
jl
call
jo
das
push
mov
dec
fwait
mov
andb
pusha
mov
jns
ror
imul
and
es
xchg
adc
inc
mov
fildl
pop
sahf
xchg
lcall
daa
mov
mov
or
cmp
adc
rcr
or
xor
aas
lret
hlt
shlb
ja
cwtl
rcll
or
repnz
add
outsb
cli
mov
test
testl
dec
and
testl
aaa
roll
lcall
push
jne
mov
mov
mov
cmpsb
dec
lretw
cmp
rcrl
xchg
inc
pusha
mov
xchg
inc
call
sahf
push
cmp
add
jge
cmp
mov
test
mov
stc
into
cltd
xchg
stos
jne
push
ret
int3
jno
das
add
mov
pop
and
cmpsl
jb
dec
pop
int3
jne
jecxz
dec
sbb
lock
mov
sbb
enter
shr
add
andb
pusha
mov
fs
data16
pop
int
decl
lret
in
mov
sbb
aas
and
push
ja
ja
repnz
bound
inc
add
jae
add
push
cld
int3
rolb
pop
gs
int
mov
mov
or
outsb
sub
sbb
ljmp
imul
sbb
xchg
test
pop
pop
or
and
test
cmc
int
sti
ljmp
pop
inc
loop
xor
scas
adc
sub
jge
cli
sub
cmpsb
jne
in
ds
hlt
mov
aam
xor
jmp
pop
ds
mov
call
bound
sbb
out
mov
ljmp
sarb
mov
testl
cmp
add
jb
adc
jne
add
add
push
sub
out
dec
lcall
int3
aaa
imul
add
xchg
jp
cmp
xor
push
sub
add
loopne
rolb
cltd
sub
aas
out
add
les
aad
sub
jnp
sub
push
mov
and
push
hlt
cs
cmp
les
add
dec
ret
int
pop
mov
int
pop
in
lock
lods
pushf
jae
cmp
lods
jnp
cmpsb
stc
fnstsw
pop
test
add
dec
addb
cli
das
xchg
cmp
sub
push
adc
inc
scas
sub
jmp
sbb
dec
test
push
adc
cmpsl
sarb
mov
scas
sbb
mov
xchg
mov
push
imul
inc
fidivrl
and
mov
or
stc
cmp
sbbb
pop
movb
adc
jo
popa
jge
mov
loopne
jb
cwtl
adc
xlat
pop
xor
and
jge
inc
into
mov
test
dec
jnp
mov
adc
lea
ret
hlt
out
and
cltd
dec
dec
pop
push
fs
out
scas
add
sub
mov
cmp
repnz
in
inc
mov
mov
xchg
inc
xor
cmp
mov
int3
adc
jnp
lcall
jmp
push
lock
jb
dec
popf
subl
mov
je
push
jl
xorb
mov
push
xchg
push
inc
xor
xacquire
jecxz
jl
out
sub
xor
ret
out
adc
or
and
pop
dec
fcom
sbb
and
jb
jge
lods
frstor
cmp
insb
movsb
push
add
andps
ret
mov
addl
into
adc
jmp
aad
scas
test
test
push
sbb
mov
mov
ret
inc
loop
dec
imul
shr
nop
call
cmpsl
adc
test
in
sbb
imul
xchg
in
popa
in
ret
jo
cmp
lahf
dec
not
mov
or
inc
adc
inc
jle
cltd
xor
inc
fstp
xor
sbb
out
dec
xchg
sub
subl
fstps
sbb
mov
dec
fsubs
mov
cmp
xorb
add
push
mov
out
mov
mov
repz
or
push
jne
jo
inc
js
ljmp
cs
mov
aad
outsl
pusha
pop
mov
push
mov
fldt
js
xchg
mov
xor
jl
adc
cmp
jmp
out
call
push
xor
stc
shrl
inc
nop
add
push
ret
xor
jecxz
sarb
adc
fsubrl
ja
mov
pushf
cwtl
dec
iret
jl
loope
je
es
std
jne
lea
outsb
dec
mov
pusha
mov
cld
add
pcmpgtw
mov
sbb
inc
sbb
fildll
stos
mov
xor
mov
sbb
pusha
jno
inc
pop
insb
pop
jg,pt
adcb
sarb
test
fidivs
push
add
adc
mov
shll
adc
cmp
jge,pn
jle
xchg
xchg
fstl
push
fdivrp
jge
popa
fcoms
ljmp
adc
icebp
scas
pusha
pop
and
sbb
jno
mov
cmpsb
enter
push
ss
adc
in
sub
add
ret
rcrl
mov
in
pop
jo
jmp
ss
adc
dec
in
and
pop
mov
push
orl
stos
jno
dec
dec
cmp
and
lds
in
stc
cmp
mov
cmc
mov
arpl
dec
test
int
les
push
or
sub
mov
fstps
push
pop
dec
fisubrl
imul
sti
sbb
popf
sub
and
aad
xor
shll
mov
jle
push
lea
mov
jne
dec
scas
pop
xor
mov
or
repnz
pop
scas
or
outsb
repnz
aaa
or
dec
mov
mov
mov
adc
rcrb
mov
lret
sub
insb
xchg
loopne
sub
dec
jle
in
or
fs
fxch
mov
mov
xor
test
add
pushf
shrl
repz
cmp
lods
popf
xor
leave
mov
jg
xchg
add
lods
gs
orb
push
and
add
repnz
ds
pop
pop
lcall
leave
jo
push
insl
stos
mov
int3
inc
adc
movsl
and
loopne
fwait
ja
inc
mov
inc
punpckhbw
push
adc
leave
jl
inc
mov
lock
jmp
dec
sub
push
xlat
lahf
fisubrl
and
add
ret
mov
out
dec
inc
aam
add
shlb
mov
out
imul
shl
xor
iret
enter
push
out
mov
sbb
shl
or
cmpsl
pop
popf
test
or
push
mov
mov
ds
jmp
rcr
push
jecxz
imul
sub
and
push
fcoml
cltd
mov
push
outsl
adc
movb
inc
cli
mov
das
xchg
adc
jne
pop
std
rol
jl
jecxz
icebp
dec
into
add
dec
das
ja
xor
mov
or
adc
fldenv
fs
xor
loope
fimuls
mov
cmp
xchg
adc
mov
loop
mov
xchg
loope
inc
mov
shlb
dec
outsb
out
outsb
push
aas
fcmovbe
into
bound
mov
jne
imul
xchg
add
pop
push
push
push
mov
aas
lds
pop
ja
inc
dec
sub
in
mov
add
dec
es
pop
xor
pusha
inc
add
or
ja
aas
out
cwtl
mov
push
aad
dec
mov
je
lret
inc
out
inc
lods
pushf
pop
mull
mov
popa
push
sbb
ds
push
mov
dec
daa
inc
enter
pushf
jge
adc
dec
inc
jp
sub
pushf
and
out
sbb
das
xchg
repz
sahf
cld
jcxz
xor
popa
xchg
add
in
sbbb
sub
dec
cs
inc
gs
lods
stos
stos
dec
daa
add
jo
outsb
movsb
xor
lret
push
std
inc
in
aaa
aam
out
dec
dec
inc
push
xor
ss
mov
into
fisttpl
jnp
sbbl
imul
int3
arpl
pop
mov
cmpsl
xor
fsubs
movsb
adc
pop
sub
dec
idiv
faddp
out
push
lcall
in
sub
cmpsb
inc
push
sti
hlt
insb
add
mov
ljmp
negl
pop
shll
std
mov
pop
cmp
out
cmp
adc
and
aam
sti
xor
xor
stos
cmpsl
sub
and
sbbl
int3
rcr
or
sub
stc
pop
inc
in
adc
fs
adc
es
cmp
rorb
dec
adc
mov
insb
or
or
divl
xchg
aas
dec
int3
sahf
sub
mov
jle
rcr
mov
fcmovnb
jo
mov
pop
stos
push
pushf
lods
lds
movsb
add
into
hlt
jle
mov
jecxz
sub
rcr
cmp
dec
in
jno
dec
sub
jg
adcb
xor
cmp
cwtl
aaa
int
out
push
lret
add
imul
sti
sti
ret
mov
stos
or
jmp
fnstcw
dec
orl
fistpll
push
pop
jno
push
imul
xchg
subl
ret
sbb
push
subl
and
gs
rolb
sub
or
ds
push
sbb
in
and
mov
xor
aaa
lcall
shl
adc
mov
outsl
xor
jb
push
jmp
ds
in
sub
sarb
sub
and
cli
insl
repnz
es
xchg
inc
dec
lret
ljmp
pop
aaa
ret
insl
inc
cmp
dec
jle
push
sbb
sub
iret
adc
mov
push
pop
dec
or
jecxz
movsl
sbb
cwtl
faddp
clc
jns
mov
mov
icebp
xchg
inc
push
jo
mov
xorb
ret
mov
xchg
add
dec
sub
fmuls
sbb
aas
jle
cltd
inc
aam
jge
lock
in
arpl
cmpsb
iret
stc
pop
or
push
sub
rcrb
jl
adcl
add
pop
jmp
andl
jo
mov
ja
leave
or
adc
test
sbb
push
push
pop
inc
ja
rcll
cmpsb
lods
jle
mov
stc
inc
clc
pusha
arpl
std
lods
jg
inc
popa
cmc
xchg
and
ds
xchg
movsb
mov
add
add
cmp
jmp
push
pop
xchg
and
test
pop
pusha
inc
lods
loop
mov
jl
push
and
clc
nop
psubw
xchg
mov
jg
decl
int
jo
aas
icebp
data16
push
out
cmpsb
xlat
xchg
jge
add
cwtl
ljmp
xor
aas
dec
mov
insb
scas
jno
in
and
jae
xor
and
or
in
xchg
imul
and
jl
jge
lds
or
daa
test
roll
lock
adc
mov
gs
loopne
jno
mov
mov
mov
dec
outsb
xchg
aas
cmpl
jnp
or
lea
movsl
fcoml
insl
test
mov
mov
fnstenv
lods
nop
daa
cmp
es
pop
or
add
enter
add
add
dec
sbb
stos
ffree
shlb
mov
sub
loope
ficomps
jl
out
jmp
mov
ds
hlt
inc
call
lcall
push
adc
dec
sub
jo
dec
fldcw
movsl
les
mov
jecxz
xor
add
fcomps
sbb
mov
pop
xor
or
fnstenv
hlt
loopne
pushf
in
inc
sub
ret
test
bnd
adc
aam
push
stc
mov
mov
jnp
push
out
out
fmuls
clc
mov
mov
fs
lea
lock
ret
sbb
fidivrs
sti
lcall
mov
pop
sbb
xor
cmp
add
stos
cmp
push
loope
push
cmp
mov
xchg
in
sbb
cmpb
cltd
pop
push
inc
jmp
repz
das
cld
adc
bnd
xchg
addl
sub
mov
sbb
xlat
mov
testl
loop
push
ret
or
add
xchg
leave
notb
lods
dec
test
mov
adc
das
pop
or
scas
xor
cmpsb
stc
fcomps
lds
mov
addr16
cli
inc
popa
add
mov
xor
aam
adc
test
jne
push
pop
out
test
push
int
pop
xor
mov
jge
mov
ds
push
mov
ljmp
sbb
sub
scas
ficomps
mov
das
fsubrl
jecxz
mov
bound
lret
lea
iret
je
inc
adc
dec
out
push
das
inc
insb
cmp
push
mov
xor
scas
fwait
stc
lahf
pop
outsb
mov
int3
mov
nop
cmpsl
mov
jae
fisubrl
ss
es
in
mov
out
out
inc
inc
push
cmc
in
addb
fnstsw
clc
addr16
inc
scas
leave
dec
shr
and
xor
ret
pushf
ja
jne
jo
out
xchg
cmp
cmp
jle
test
add
xchg
aad
lea
add
add
nop
push
jmp
jmp
enter
cs
aas
mov
mov
popa
rep
movsl
into
push
sar
cmp
push
push
stos
add
xor
inc
and
mov
or
das
ljmp
imul
fwait
mov
lret
xchg
or
imul
popf
pusha
cmpsl
adc
mov
imul
daa
in
arpl
in
jae
clc
icebp
lock
sbb
nop
sub
jg
adc
int3
dec
jne
sahf
xor
insl
mov
lret
xchg
aam
stos
daa
popf
roll
inc
xor
xchg
test
in
jg
fs
inc
flds
mov
pushf
inc
add
mov
sbb
jnp
lock
lret
in
in
cmp
jbe
xchg
notb
cmp
sbb
pop
clc
icebp
es
mov
cmp
push
push
xor
rorl
mov
dec
push
insl
sti
js
ds
mov
or
lods
mov
data16
popf
xor
int3
xchg
push
push
and
adc
pop
daa
lahf
cmp
mov
negb
test
outsb
mov
aaa
sub
in
and
dec
jno
push
or
cmp
int3
sbbl
jmp
add
push
mov
fwait
push
mov
mov
dec
bound
pop
push
into
loope
shll
hlt
cltd
xor
adc
out
inc
jnp
push
inc
jnp
cld
scas
jl
mov
push
add
push
divl
andb
dec
mov
mov
adc
sbbb
inc
pushf
fsub
into
xchg
addr16
sub
cmp
in
push
repnz
scas
notrack
and
xor
add
in
pop
fimuls
nop
iret
mov
aam
inc
scas
mov
xchg
loopne
outsb
xchg
js
cld
add
sahf
xchg
rcrb
adc
lcall
cltd
nop
push
inc
cmp
out
lcall
sbb
xchg
divl
jp
out
or
insb
xchg
push
pop
add
imul
ret
aas
mov
loope
and
pop
inc
test
mov
xchg
in
cmp
mov
insb
add
inc
lret
xchg
push
pop
cmp
stos
push
push
pop
subl
xchg
in
mov
and
xchg
xchg
ret
dec
sub
mov
outsl
or
adc
adc
in
pop
cmp
fwait
inc
and
popl
pop
adc
pop
insl
jge
cmc
data16
notl
xchg
mov
jmp
mov
dec
pop
loope
data16
imull
xor
sbb
stos
lds
insb
cmp
loope
jp
and
popa
pop
out
cli
fdivs
xor
sub
pusha
push
add
leave
js
fldl
icebp
inc
add
aam
lret
call
dec
aas
in
cmc
jecxz
push
push
fstl
sub
decl
cltd
xchg
sub
xchg
outsb
call
adc
ret
fisubrs
jae
enter
xor
cmp
pop
adcb
je
sti
in
scas
pop
fidivrs
out
pop
pusha
inc
pop
xchg
rcrb
insl
mov
outsb
add
or
imul
cmp
lods
jb
imul
inc
rcr
popa
add
sbb
xorl
daa
inc
loopne
or
and
mov
jno
xchg
lea
inc
cmp
inc
ss
sub
mov
jp
mov
packssdw
pop
arpl
push
aas
add
in
xchg
mov
fildll
xor
xor
pop
aam
int
jno
cmp
xchg
jno
dec
rorl
js
cmp
push
leave
dec
loop
sbb
mov
adc
stos
shll
push
shufps
inc
lods
push
ljmp
and
mov
cld
pop
xlat
ss
nop
xlat
pop
fisubrs
jmp
mov
mov
inc
cmp
xor
push
cli
push
iret
roll
popa
xchg
xchg
inc
jb
shrb
idivl
fisttpll
cmpsb
repz
cmp
stc
pop
jmp
cmp
dec
pop
data16
call
cld
out
and
adcb
mov
sbb
mov
lahf
rorb
pop
lret
pop
in
inc
bound
push
enter
pop
hlt
push
xchg
outsl
daa
les
and
aas
mov
mov
fs
inc
clc
dec
sub
orb
mov
and
xchg
push
jle
lock
test
std
lcall
mov
dec
negb
mov
mov
push
jle
inc
and
cmp
aas
jecxz
mov
sub
jbe
mov
and
test
mov
mov
das
sub
mov
aam
cmp
nop
aas
cli
mov
mov
stos
and
xlat
ss
adc
inc
test
movsb
arpl
fcoms
aas
mov
and
dec
cmp
adc
push
sbbb
add
insb
cmp
mov
inc
dec
aad
or
popa
cmp
jg
adc
lahf
mov
bound
adc
call
mov
rolb
add
pop
add
int
jno
mov
dec
xchg
pop
das
out
lods
mov
mov
mov
lods
rorl
mov
aad
xchg
adc
jp
addb
test
insb
xchg
mov
icebp
test
adc
mov
nop
std
cs
fnstenv
mov
test
jg
sbb
add
mov
pop
inc
loop
pop
jle
sub
call
push
pop
std
add
notl
aas
call
push
jo
pop
push
jne
inc
push
xchg
and
mov
mov
sub
orl
push
adc
mov
push
mov
imul
or
cltd
push
sbbl
or
mov
std
adc
int
jae
hlt
popf
push
pop
cli
mov
lods
cmc
dec
jge
inc
pop
shrl
call
jecxz
pop
mov
icebp
mov
or
cmp
rclb
mov
or
into
sbb
arpl
sbb
mov
int3
mov
lret
lret
hlt
pop
lcall
fistpl
pop
pusha
jae
scas
jle
std
insb
aam
push
sub
inc
iret
lods
xchg
and
jno
pop
subl
cmc
adc
pop
adc
rorb
in
cmc
pop
mov
cmp
mov
fadds
aaa
sub
mov
and
int
mov
fmuls
mov
mov
sub
popf
add
in
fimuls
sub
sub
inc
add
rcl
loopne
push
sbb
hlt
sub
aam
pop
enter
xchg
inc
fldt
out
fsubs
imul
or
jl
cmp
or
sbb
sahf
xchg
inc
cld
xor
leave
pop
shrb
sbb
pusha
dec
out
mov
sub
dec
ljmp
dec
in
and
or
aad
ja
adc
adc
or
std
pusha
push
int3
pushf
sarl
sbb
fs
add
imul
jo
insl
iret
dec
cmp
push
push
fnstsw
aas
push
clc
sbb
repnz
lret
dec
sub
xchg
inc
pop
sub
dec
les
into
lret
dec
jae
pop
xor
subl
dec
or
sbb
addb
inc
dec
adc
or
jmp
sbb
popf
push
pop
inc
push
movsl
push
lods
ret
inc
xlat
cltd
or
insb
jg
fcoms
mov
out
mov
test
mov
mov
jns
sub
lahf
out
sub
aam
sbb
mov
test
leave
ret
push
aaa
or
jb
and
fs
and
xchg
jae
ja
push
push
sbb
aad
xor
out
mov
mov
cs
xchg
jmp
addl
push
repz
jno
mov
push
in
pop
idivb
cld
out
xchg
mov
lcall
push
nop
sti
scas
cltd
std
pop
push
insb
adc
sbbl
ret
out
xor
ficomps
add
xlat
sub
jae
clc
scas
cwtl
mov
int3
jbe
mov
pop
dec
std
sar
adc
clc
mov
mov
cmpsl
pmaxub
inc
ja
scas
or
or
mov
pop
add
mov
subb
mov
xchg
mov
jmp
scas
and
jecxz
sub
loope
iret
test
addb
xchg
cmp
jb
cmpsb
sub
pop
sub
sbbl
adc
lcall
rorb
sub
insl
lock
in
arpl
out
in
cmp
enter
dec
mov
xchg
sahf
push
xchg
cltd
sar
mov
dec
aaa
push
ret
popf
mov
adc
stc
jns
insb
jp
popf
dec
repnz
adc
add
pop
lcall
mov
push
cli
test
stc
inc
jo
lea
or
and
xchg
or
rol
inc
shr
push
jl
mov
std
sub
test
adc
sub
cmc
jp
xchg
inc
jl
test
xchg
test
out
rorb
mov
jo
stc
or
ret
rcrl
ds
fs
and
and
and
aam
fwait
cmc
push
xor
push
addr16
mov
mov
pop
js
icebp
cwtl
js
iret
sub
xor
fsubrs
fcmove
std
sbb
push
stc
inc
add
push
adc
outsb
movsl
hlt
sbb
xlat
adc
fwait
ds
xor
rorb
clc
iret
cmp
xchg
fisubrs
fldenv
cmp
inc
mov
jecxz
je
mov
xchg
in
push
popa
fisubl
cld
lahf
dec
popa
das
pop
cmp
rclb
es
int3
add
jbe
scas
cltd
cmp
in
scas
cmp
mov
lret
inc
aaa
imul
xor
popf
js
scas
das
inc
jb
sbb
push
out
ja
or
mov
fsubrl
xor
push
pop
out
mov
out
into
outsl
repz
stos
ret
ss
movsb
fnstsw
mov
mov
int3
push
mov
fwait
mov
clc
xchg
xchg
sub
sbb
outsl
lahf
push
shll
ret
sbb
bound
jmp
xchg
xchg
add
dec
pushf
clc
push
cmp
adc
cmp
adc
mov
sub
lds
push
aas
nop
xor
addr16
fsubr
popa
jnp
ss
mov
dec
in
fldt
movsl
fisubl
push
jg
cli
enter
shlb
add
jne
and
xor
loope
sbb
bound
dec
addr16
mov
push
and
or
nop
imul
int
or
insb
mov
xchg
cld
cld
xor
cwtl
sarl
mov
je
xchg
mov
aaa
es
mov
push
lret
jo
jg
ret
xchg
or
pop
cmp
enter
rcr
popa
jo
test
and
insb
movsb
xor
mov
call
cmp
test
int
jo
outsl
rclb
jg
mov
sbb
sti
loopne
popf
addl
js
lock
xor
das
jle
out
mov
add
push
das
and
mulb
pop
jno
call
sbbb
push
scas
mov
inc
loopne
mov
sbb
shll
inc
add
mov
pushf
xlat
xchg
xor
mov
mov
repz
push
test
dec
pop
loopne
mov
rcll
xchg
stos
repz
mov
in
scas
je
test
popf
fidivl
ljmp
imul
out
fwait
jl
cmp
jp
push
pop
cwtl
shlb
adc
pop
xchg
out
aaa
mov
sbb
mov
push
outsb
pop
lret
stc
outsb
daa
or
arpl
leave
mov
mov
push
mov
jne
movsl
ret
sbb
daa
cmpsb
or
cmp
inc
jns
cmp
fstp
repz
mov
int
inc
jle
add
jae
sbb
xor
test
iret
stos
push
adc
sbb
mov
inc
cmp
ja
push
stos
xor
enter
scas
fwait
jne
imul
insl
dec
enter
out
imul
js
out
add
mov
or
mov
rcl
mov
xchg
mov
insl
negl
adc
stos
jp
out
lds
cmpsl
sbb
bound
sti
or
push
fildl
fcomip
mov
push
inc
fstl
mov
sti
shlb
js
cli
or
add
inc
or
xchg
cmp
lahf
loopne
add
in
out
cmp
jb
les
outsl
in
out
jns
lea
cmpsb
xchg
gs
add
mov
out
adc
das
addl
imul
cld
fbstp
jb
ds
inc
in
je
push
xor
mov
mov
test
cld
push
cmpsb
or
ja
jno
test
movsl
push
into
or
enter
repz
push
lret
std
loop
cmpsl
sbb
and
fistpl
aam
sti
sub
movntq
out
subb
jecxz
icebp
mov
pop
cmp
in
mov
ret
sahf
enter
jmp
sbb
stos
cmp
mov
lods
sbb
andl
add
mov
shl
sbb
pushf
push
jns
add
pop
jge
and
les
jns
outsb
mov
dec
ret
pusha
pop
mov
or
shll
repnz
subb
rcrb
fidivl
call
mov
imul
hlt
cmp
std
bound
cmp
pop
pop
jnp
pusha
mov
add
gs
pop
push
mov
sub
pandn
sub
adc
or
dec
test
hlt
adc
cmp
push
xchg
repz
sti
das
push
mov
push
xchg
sub
add
mov
jmp
xchg
pusha
dec
mov
in
mov
jg
and
push
push
jno
cltd
mov
rclb
xchg
loopne
xchg
add
insb
lods
and
sti
xlat
inc
repnz
add
cmp
inc
mov
mov
jecxz
jo
sbb
stos
sbb
or
enter
into
or
sub
xchg
adc
cmc
cmc
mov
ret
std
into
or
xchg
fisubrs
insb
out
lret
inc
out
inc
mov
gs
xchg
lcall
xor
jle
fiaddl
test
sub
xchg
push
pop
imul
pop
stc
lock
shll
repnz
pop
jns
ja
pop
pop
mov
call
ds
in
loope
push
pop
in
mov
xchg
icebp
add
loopne
inc
mov
sarb
stos
movsl
xchg
aam
sbb
fdivrs
mov
mov
nop
mov
jl
dec
int
xor
jle
pop
fildll
push
in
cmpsb
lods
daa
push
mov
aam
scas
inc
pop
mov
xor
test
mov
add
dec
cmc
add
jp
popf
add
test
fistpll
pop
push
or
sbb
arpl
decl
inc
inc
mov
add
jno
sub
mov
pop
in
mov
ret
dec
or
mov
jl
fisubl
addr16
je
dec
push
xor
adc
push
ss
adc
cld
mov
ret
sarl
pop
cld
arpl
jl
loop
cwtl
dec
pop
je
stc
cld
xchg
xchg
xchg
mov
int3
je
mov
adc
fidivrs
nop
push
arpl
sbb
adc
test
movsb
scas
jbe
dec
mov
pop
rcrb
int3
add
out
std
daa
imul
sub
cmp
sbb
sbb
push
repnz
push
rorb
xor
lods
xor
sbb
cltd
push
lock
lods
or
jl
inc
or
nop
rcr
fcomps
enter
jne
popf
jo
test
test
rcr
out
jno
xchg
push
fstpl
push
jae
int3
test
arpl
xchg
cmp
and
mov
xchg
dec
adc
mov
jl
ja
push
mov
xchg
jl,pt
out
and
hlt
or
push
lret
lahf
ja
pop
fistps
xchg
cmp
push
sub
mov
xchg
icebp
in
mov
sbb
push
cwtl
or
leave
inc
pop
sub
and
loopne
sbb
aam
cmp
xchg
push
shrb
rcl
mov
nop
push
jnp
push
stos
sbb
mov
mov
aad
rolw
imul
dec
xchg
in
pop
loopne
in
xor
jno
jae
or
mov
loope
bound
mov
push
jae
sahf
std
cmp
or
scas
sub
mov
adc
push
pop
xor
mov
pop
nop
mov
mov
xor
shrl
icebp
dec
idivb
xor
inc
push
movsb
pop
test
or
mov
out
ret
xlat
lret
les
mov
inc
cwtl
mov
scas
cmp
xchg
mov
outsb
fildll
and
dec
fdiv
rorl
jnp
xchg
cmpsb
inc
mov
jns
jnp
sub
inc
mov
cmp
xorb
xor
dec
enter
cli
jno
lods
mov
inc
mov
cmp
xchg
mov
rcrb
cltd
mov
lods
adcl
cmp
xor
xchg
xchg
stc
jle
imul
rorb
cmp
das
adc
mov
adc
imul
jp
in
and
adc
in
test
dec
fisubl
or
mov
jg
divl
jecxz
pop
add
rorl
cwtl
mov
or
cmp
aad
cmc
stc
inc
and
pop
and
cmp
push
jl
push
cmp
add
nop
imul
stc
xchg
mov
std
sub
aam
jle
bound
xor
sahf
mov
loopne
stc
mov
jp
in
jl
sti
jge
push
sar
mov
shl
push
or
arpl
sbb
adc
loope
pop
xlat
fs
mov
js
test
push
daa
push
call
push
or
mov
out
push
cmp
fldl
mov
cmp
fwait
mov
cs
push
or
push
xchg
idivl
xchg
or
testb
cltd
aam
ret
cmp
mov
scas
cmpsb
jne
divb
push
pop
push
cmp
adc
push
mov
popf
out
pop
cwtl
push
and
push
mov
sub
sti
adc
adc
mov
jmp
sub
pop
cmpsb
mov
add
sbb
les
pop
mov
push
jecxz
sub
jecxz
pop
and
mov
xorl
dec
es
lods
mov
push
movsb
push
push
loopne
and
fwait
sarb
jbe
mov
pusha
push
dec
dec
add
jge
pop
lahf
test
aam
mov
mov
in
cmp
mov
push
bound
push
jae
dec
test
adc
iret
dec
sbbl
mov
or
sbb
sbb
xchg
in
int
fistpl
mov
jp
sub
cmc
sbb
aam
outsl
stos
mov
lahf
mov
test
out
out
and
adc
ficoms
movsb
push
imul
sbb
jnp
jp
cmp
xor
jo
jg
fstl
ja
add
push
outsb
cmpsl
inc
mov
mov
mov
push
sub
sbbb
sbb
cmp
iret
add
inc
int3
adc
fwait
shlb
xor
test
outsl
push
mov
out
scas
push
std
or
or
cmovb
loopne
mov
sub
cmpsb
mov
jg
push
scas
movsl
jg
negl
adcb
pop
pop
sbb
mov
mov
incl
stc
xor
loope
inc
roll
jnp
cmpsl
iret
jp
mov
mov
adc
lahf
mov
dec
addr16
push
arpl
mov
dec
stos
sti
inc
xchg
loope
loope
xchg
xchg
sbb
or
insb
popf
dec
aad
adc
add
or
jo
mov
lret
xorb
rcll
xchg
sbbb
in
lret
andb
xchg
adc
push
mov
shrb
push
dec
pop
lret
adc
in
rclw
push
dec
adc
jo
pop
mov
push
andl
ds
in
mov
dec
xor
mov
mov
and
cmpb
or
int3
xorl
aaa
xchg
dec
mov
adc
in
and
pop
clc
or
enter
push
cli
js
arpl
iret
jmp
outsb
pusha
xor
js
filds
arpl
bound
jno
cmp
push
or
lods
push
xor
ja
add
aam
in
or
loope
int3
xor
mov
mov
ffreep
add
pop
shrb
stos
push
mov
inc
xchg
push
jbe
test
xchg
fsubrs
jmp
sub
mov
xor
push
cli
mov
int3
push
xchg
aas
push
mov
adc
mov
divl
pop
dec
ret
fildl
jmp
xchg
add
dec
es
sbb
inc
push
sbb
fcomip
aad
div
out
test
push
sub
mov
popf
fadds
jno
mov
sti
idivl
mov
cwtl
add
notb
sub
sub
adc
mul
fwait
pop
or
add
enter
fidivrs
push
jge
test
push
negl
inc
pushf
ficoms
ds
or
add
test
scas
loopne
jne
mov
adcl
dec
mov
pop
nop
psrlq
pop
push
mov
fisttpll
cwtl
xchg
daa
pop
arpl
cmp
andl
mov
jmp
sub
or
fsubrs
push
je
jmp
cmp
cmp
mov
pusha
sub
adc
and
push
dec
mov
pop
pop
xchg
sbb
lock
adc
add
pop
shrl
shrb
jae
stos
jg
call
sub
popa
jae
in
sub
inc
popa
sbb
jg
out
sub
pop
jge
pop
lret
hlt
jb
je
inc
bound
ret
jo
cmpsl
cmp
fsubrl
jb
and
add
mov
imul
dec
test
leave
sbb
adc
out
movsl
lcall
gs
mov
popa
push
inc
adc
cmp
test
xor
pop
pop
adc
or
lods
xchg
xchg
enter
jg
xchg
popa
call
push
jle
insl
ret
stos
repz
or
not
pushf
push
arpl
nop
inc
pop
fiadds
mov
pop
lgs
inc
inc
mov
repnz
int3
adc
movsl
movl
shlb
and
lds
xor
pop
fldl
ret
xchg
xor
sub
jns
outsl
leave
dec
xlat
pop
pop
pop
loop
push
xor
cli
sti
xchg
rorb
cltd
sti
test
rorw
hlt
adcl
xchg
add
stos
mov
xor
and
in
cmc
mov
in
dec
ret
xor
fldt
andl
push
mov
in
jae
sub
out
mov
mov
push
jmp
test
loop
pop
movsb
imul
jo
addr16
lea
subl
xchg
aam
mov
leave
inc
cmpsl
repnz
subb
sbb
inc
es
mov
lea
and
mov
lock
pop
or
mov
sti
mov
pop
lcall
pop
in
mov
inc
out
adc
push
outsl
pushf
movmskps
inc
pusha
lock
ret
pop
jbe
push
cli
lea
mov
mov
lods
insl
jp
mov
mov
ljmp
mov
adc
sarb
ret
sbb
fsubrl
stos
jb
nop
into
cld
sub
mov
out
xor
sub
subb
rorl
lods
daa
in
jle
or
imul
xor
xorl
jnp
leave
sbb
cs
mov
push
and
and
lods
ret
subb
popa
int
adc
jmp
loope
mov
mov
push
sbb
and
xchg
in
mov
add
aad
call
movsl
test
loop
and
cmpsl
dec
add
insl
popa
xorb
ja
sbb
fcmovb
mov
cmp
lods
dec
cld
rep
imul
aaa
pop
mov
xchg
les
nop/reserved
inc
fistpl
mov
xrelease
xchg
mov
lcall
int3
sub
xor
in
cmp
or
push
jg
nop
jle
lea
clc
xchg
frstor
cmp
pusha
int
add
pop
iret
or
in
mov
bound
in
sub
lods
and
test
aas
push
iret
fwait
ret
fldenv
pusha
ss
out
cmp
push
daa
lret
mov
roll
jnp
push
hlt
jmp
xchg
insl
scas
imul
pop
xlat
sbb
daa
sbb
rolb
gs
and
sub
pop
insl
lret
xchg
and
out
or
adc
jbe
adc
es
mov
in
js
jl
jg
adc
dec
cmpsb
mov
xchg
mov
loope
push
out
roll
mov
dec
es
dec
jge
pop
ret
fists
in
rcl
shll
in
cltd
mov
add
xor
cli
push
or
push
cmp
cmp
push
mov
push
in
mov
or
jno
ja
mov
push
pushf
fdiv
jbe
sti
insl
mov
xor
std
mov
lods
das
push
in
icebp
pusha
lret
pusha
shr
sub
movsl
cld
xor
xchg
movsb
push
cmp
mov
stos
cmp
cltd
outsb
cmp
inc
hlt
aam
cmp
mov
les
out
or
sub
and
hlt
jae
hlt
cltd
scas
pop
pop
cmp
mov
cmp
xor
int
pop
mov
stos
sti
push
in
in
bound
cli
sub
and
in
cli
xchg
mov
adcb
jno
cltd
lcall
mov
in
push
adc
mov
aam
mov
fucomp
and
std
xlat
call
arpl
bound
out
repz
nop
or
xchg
push
aam
dec
sub
xchg
push
inc
pop
shlb
inc
push
imul
mov
xchg
arpl
cli
insb
les
or
arpl
mov
sub
adc
in
lds
loop
xchg
push
cmp
push
push
mov
pop
xor
push
mov
push
pop
jbe
dec
in
lods
outsb
xchg
sarl
loopne
pop
rcl
popa
test
and
clc
das
outsb
sbb
arpl
les
cmp
xor
fistpl
or
dec
daa
add
xor
out
test
insb
movb
add
pop
inc
repnz
cld
mov
or
xchg
ret
ja
gs
xchg
pushf
daa
push
cltd
and
inc
pop
cld
into
mov
xlat
cmpsb
arpl
dec
in
fmuls
jno
icebp
adc
cmp
rcrl
lcall
push
push
stos
push
xor
and
xor
adc
mov
mov
sbb
cwtl
loop
or
pop
xchg
mov
xchg
out
xchg
push
pop
test
sbb
lods
in
mov
push
int
enter
test
rcr
nop
imul
jp
int
aas
insb
ret
sbb
add
roll
and
push
mov
outsl
pop
dec
jp
aaa
xchg
js
inc
and
cltd
push
lds
repz
mov
adc
mov
in
jns
push
cltd
or
dec
std
cmp
jbe
fdivrl
mov
and
loopne
jno
inc
push
outsb
add
je
dec
cltd
adc
sub
imul
js
pop
inc
jge
orl
inc
inc
push
movsb
lock
adc
ret
mov
aam
repz
inc
test
push
or
bnd
aas
add
out
stos
add
mov
aaa
pop
cmpsb
pusha
add
dec
in
loop
push
sbb
push
fists
cmpsl
data16
aam
cmpb
sarl
mov
mov
cmc
fwait
and
cmp
jecxz
jp
fistl
mov
stos
shr
cmp
je
mov
cwtl
xchg
inc
add
aas
cmc
pop
lahf
mov
int
loope
icebp
xchg
push
jne
test
jns
pop
sbbb
cmp
push
shr
in
xchg
sub
mov
repz
push
leave
lcall
dec
dec
imul
addl
ret
loope
or
sete
push
fildl
fstpt
out
or
push
xor
lcall
pop
cmp
or
fdivr
jg
dec
bound
push
push
cmpsb
add
lret
cmp
nop
sahf
pop
insb
xchg
push
cld
inc
jg
mov
in
mov
add
mov
dec
or
bswap
pusha
in
ss
in
orl
mov
cmp
push
insb
mov
mov
mov
or
sbb
scas
fwait
mov
shll
xchg
mov
pinsrw
pop
out
cltd
sub
fidivl
or
mov
imul
or
fs
rclb
and
or
int
movsb
mov
mov
inc
idiv
mov
cmpsl
lock
add
iret
loope
jne
test
repnz
mov
and
pop
sti
sbb
jl
mov
push
jmp
test
popf
mov
xchg
stos
mov
icebp
inc
jno
pop
hlt
mov
imul
iret
dec
fldcw
ret
rclb
sarl
into
scas
negb
aam
jmp
mov
in
sub
jo
insl
sub
ds
imul
push
je
pop
mov
cmp
and
pop
jl
mov
fstps
into
xor
pop
mov
jmp
mov
movsl
jno
mov
in
sub
cmp
rcrl
inc
mov
push
in
hlt
ja
enter
cmp
pop
cmp
inc
fwait
mov
lret
xor
adc
xorb
jb
jp
and
jle
mov
sub
jno
outsl
pop
lcall
insl
jne
adc
ficompl
jl
mov
push
dec
pop
jne
cld
jo
aad
mov
cld
enter
test
je
std
and
pop
loope
cmpsl
cmp
loopne
out
push
xor
and
sahf
ss
dec
push
jp
and
dec
les
mov
add
jmp
inc
inc
cmpsl
mov
aas
sub
out
int3
ljmp
xchg
inc
pusha
cmpsl
push
stc
push
cmc
insl
push
je
and
sbb
mov
pushf
in
popf
dec
call
jb
or
sarb
leave
andl
jo
cmp
cmpl
push
addr16
mov
loop
repnz
gs
sub
lcall
lods
stos
sbb
mov
lock
imul
mov
mov
lds
mov
in
movsb
pop
or
xor
ljmp
push
gs
pusha
rol
or
push
loope
imul
mov
cmpsb
mov
jl
and
aaa
loop
cmpsl
icebp
movsb
dec
das
pop
push
and
sbb
and
pusha
fstps
in
mov
fmull
xchg
or
push
rcl
xchg
fmulp
outsl
mov
shlb
into
pushl
scas
lock
sub
mov
jns
test
mov
pop
cmpsl
int3
cmp
mov
adc
rcrl
scas
out
add
gs
push
push
lcall
dec
loopne
in
out
fisubl
out
mov
pushf
into
inc
adc
ja
gs
jg
jg
sbb
pop
add
mov
fwait
dec
xchg
add
ficoml
in
subb
roll
insb
xor
out
xchg
mov
cmp
cwtl
lret
fstpl
out
pop
daa
ficoml
jmp
lret
mulb
lock
mov
cmp
xor
ret
aam
fldt
int
es
aam
mov
mov
mov
icebp
mov
loop
and
jbe
push
dec
and
lods
icebp
or
cmc
mov
test
sti
insl
cmp
add
insl
stos
ret
or
roll
mov
or
testb
sarb
fucompp
scas
das
adc
jle
add
sbb
ljmp
jecxz
adc
cli
and
in
pop
out
repz
add
mov
push
xchg
xchg
rcll
mov
dec
xlat
fnsave
jl
sub
sub
sbb
jle
in
inc
xchg
mov
or
std
jbe
test
in
fcoms
dec
or
dec
fwait
js
sbb
adc
pop
rcr
mov
movsb
xchg
mov
cmp
out
ss
xor
sbb
xor
and
rclb
cmp
or
es
cmp
sbb
sbb
mov
popa
js
test
mov
xor
int3
sub
fiadds
jo
cltd
add
bswap
mov
cli
xchg
dec
sbb
xor
dec
bound
inc
mov
adc
adcl
test
add
in
inc
mov
bound
jp
int3
xor
icebp
sbb
mov
push
xor
in
js
jne
data16
popf
jo
mov
jmp
scas
js
push
and
dec
jns
rcll
dec
aas
xor
mov
repnz
xor
jnp
pop
push
dec
popa
popa
dec
cmp
xchg
ljmp
xchg
movsl
mov
sub
call
pop
scas
call
aas
or
jmp
mov
push
cmpsb
outsb
jns
insb
adc
in
inc
repz
jns
popa
xor
sbb
dec
xor
lcall
mov
ret
and
jnp
ljmp
inc
shrl
pop
cwtl
dec
mov
mov
std
jb
adc
int3
cmp
movsl
lcall
cmp
jp
faddl
jae
xchg
pop
repz
or
mov
sub
int
lret
xor
shrl
cmpsb
ret
adc
ds
shll
mov
aam
pop
jne
cmp
pop
les
adc
std
add
dec
scas
cmp
test
mov
out
mov
sahf
sbb
test
mov
imul
aam
xor
rorl
popf
mov
mov
mov
pusha
jno
mov
into
sti
xchg
lods
pop
adc
aad
push
pop
push
or
add
add
add
xor
xor
hlt
inc
out
mov
sub
clc
enter
xchg
je
pop
mov
cwtl
fsubs
shlb
out
or
leave
and
test
inc
xchg
inc
mov
mov
scas
ret
xor
push
outsb
fbstp
arpl
jae
loopne
or
sbb
push
inc
rorl
pop
add
jno
xor
imul
jo
lock
divl
pop
ja
inc
shr
loope
pop
es
je
pop
jl
and
mov
fnstsw
lods
pop
sub
ja
jae
jne
movsl
aas
daa
xchg
lock
inc
push
lahf
push
pop
fs
sti
mov
pop
push
loop
inc
sbb
movsl
and
dec
add
jo
pop
pop
push
fdivrs
addr16
adc
mov
mov
cmp
stos
test
sti
cmpsl
inc
xchg
mov
sub
sub
in
out
cmp
pop
pop
push
adc
fmulp
sub
pop
pop
or
aaa
xchg
jmp
data16
or
mov
adc
cwtl
mov
insb
inc
out
outsb
icebp
mov
and
inc
jmp
xchg
mov
inc
fnstsw
shrl
cmp
dec
dec
and
push
gs
adc
pushf
xor
fwait
in
pop
sbbb
repnz
xchg
jp
ds
fidivrs
xchg
push
out
test
imul
aaa
mov
arpl
cmc
sub
out
cs
repnz
repz
dec
dec
adc
clc
test
mov
xlat
push
stos
xchg
sbb
ds
idiv
lahf
dec
sbb
lods
pop
sub
ja
xchg
cmp
inc
lahf
push
cmpsb
das
push
aas
and
inc
cmpsl
adc
insb
push
fistps
lret
add
jbe
pop
xor
imul
xchg
pop
pop
out
mov
movsl
cmpsb
dec
sbb
add
in
jne
loope
xchg
dec
aaa
bound
data16
mov
dec
inc
push
and
stos
mov
insl
lret
cmpsl
push
shlb
mov
xchg
mov
mov
jge
test
jmp
sbb
jg
jae
fidivs
and
movsl
fsubl
and
sub
push
scas
and
lock
aaa
imul
mov
arpl
dec
mov
fs
mov
pushw
arpl
sti
xchg
xlat
adc
add
xchg
push
adc
add
lret
inc
div
sub
in
mov
jnp
int3
cmp
sub
xor
xchg
cli
jle
xchg
sahf
pop
push
add
jmp
loop
and
adc
add
push
xchg
mov
cli
cmpsl
or
addl
pop
pop
sub
orl
sbb
dec
pop
xchg
mov
xchg
pop
or
push
jmp
or
pop
out
mov
enter
sti
xchg
cmp
rol
mov
push
mov
add
es
outsl
xlat
sub
mov
outsl
add
insl
push
fiaddl
lds
xor
test
xorb
dec
mov
lcall
lds
pop
xchg
push
mov
lods
leave
popa
loop
dec
hlt
add
outsl
jecxz
cld
pop
sahf
jno
sbb
and
push
cmpsl
pop
sbb
sbb
xchg
or
mov
sbb
mov
mov
xchg
int
push
or
imul
daa
cmp
and
fwait
test
andl
pusha
jns
and
mov
cmc
fiadds
in
arpl
incb
inc
and
mov
sub
es
jno
or
in
aaa
dec
subb
je
ja
add
js
arpl
into
push
rol
jge
pop
sub
add
jge
mov
and
dec
and
ficompl
outsb
adc
mov
xor
mov
pop
push
push
ret
loope
stos
pop
popf
fisubl
sub
cmp
addr16
test
loop
enter
enter
sub
inc
les
lcall
xchg
xor
push
or
call
and
scas
mov
test
add
out
mov
inc
andl
sbb
stos
cli
push
mov
inc
repz
cwtl
fxch
xchg
cmp
xchg
aam
leave
pop
add
inc
cli
mov
jge
adc
lock
and
rol
rol
sbb
dec
xchg
sub
dec
xchg
cltd
ss
cmpsl
pop
dec
scas
push
ljmp
stc
and
dec
push
mov
and
dec
stc
adc
mov
js
aad
or
aam
cs
and
xchg
sub
popa
xchg
and
repz
test
js
mov
clc
fwait
test
push
xchg
xor
sub
add
ljmp
sub
cld
stos
adc
and
mov
push
cmpsl
ret
in
inc
pop
xchg
mov
sti
rcrl
lret
fs
xor
sti
dec
addr16
inc
adcb
mov
clc
inc
andb
lea
sub
adcb
xchg
xchg
mov
pop
push
sub
filds
mov
pmullw
lods
adc
lock
dec
clc
sub
loope
fwait
mov
mov
ret
push
arpl
or
enter
lret
and
adc
sahf
cmc
jns
add
cli
out
icebp
dec
mov
adc
add
cmp
in
jbe
imul
ret
pop
addr16
hlt
shrb
sbb
cs
scas
fld
jne
loope
stc
pop
inc
sub
sbb
mov
pushf
cltd
ret
mov
sahf
stos
pop
test
subb
bnd
xchg
sarl
rorb
sub
mov
dec
push
mov
lret
dec
fbld
arpl
adc
mov
ret
stc
cltd
or
bound
xor
and
lea
fsubs
pop
insb
jnp
push
inc
add
dec
je
decl
adc
hlt
movsl
rol
sbbl
lock
jecxz
pop
lds
test
or
cmp
xlat
fsts
push
les
pop
inc
call
dec
add
and
cmpsb
cld
sbbb
mov
mov
rcr
xor
mov
sub
mov
jge
push
dec
push
xor
shrb
jns
test
into
outsb
aaa
lods
cmpsl
xchg
push
nop
shl
push
mov
pop
outsb
adc
inc
ret
icebp
test
mov
rcrl
xchg
out
es
xchg
les
sbb
hlt
xor
test
xchg
leave
mov
sbb
and
imul
std
test
daa
cmp
ret
inc
sbb
jne
faddl
or
cmp
dec
mov
jae
test
leave
cli
sti
clc
sub
xchg
pop
or
fsts
xchg
iret
and
into
sbb
lcall
mov
inc
shl
mov
mov
or
loopne
mov
dec
outsb
xlat
mov
jae
mov
and
in
cmpsb
js
addr16
or
jo
popf
push
ret
mov
add
jno
xor
and
ss
insl
sbb
and
cmp
daa
mov
jo
popf
pop
mov
cmp
mov
add
stos
test
cld
aas
push
pop
sub
out
mov
and
sbb
jb
mov
and
mov
mov
inc
aad
rclb
fistl
mov
mov
outsb
adc
sub
cmp
dec
mov
std
mov
push
fsubl
imul
pop
cmc
imul
adc
xchg
repnz
lods
jecxz
aam
jb
clc
add
nop
jg
jecxz
int
and
adc
inc
lock
cwtl
push
popa
inc
inc
bound
mov
push
jns
loopne
in
jge
data16
sub
add
cmp
std
pop
mov
and
mov
mov
cmp
cmpsl
fwait
xchg
mov
in
int3
test
or
enter
inc
push
fldl
test
rcr
dec
aam
icebp
andb
ss
fstps
lds
mov
sub
lahf
xlat
and
cli
push
pushf
loope
xchg
xchg
jl
cmpsb
imul
or
dec
jno
sub
mov
je
cmp
gs
push
out
ja
jl
add
dec
jns
xor
test
dec
aas
push
add
xchg
pushf
je
push
rcrl
ficompl
pop
or
xchg
mov
mov
clc
out
std
lahf
or
jp
stc
adc
dec
push
inc
pop
mull
lods
dec
or
mov
mov
fstps
jg
cmpsl
pop
xchg
mov
and
pop
imul
push
daa
ljmp
jmp
pop
ds
push
sub
das
out
movsb
repz
xchg
rol
cmp
hlt
enter
sbb
bound
sbb
orl
insb
and
out
insb
sub
call
and
dec
std
xor
mov
shrb
xor
rol
cld
ja
mov
dec
adc
xor
xchg
sbb
sahf
cld
in
sub
mov
pop
leave
sub
pop
mov
adc
xchg
lods
fbld
cmp
mov
dec
push
scas
sysenter
xor
add
push
out
mov
push
outsb
out
mov
ss
pop
iret
das
enter
pop
pop
inc
add
cmp
js
lods
sahf
shrb
sti
dec
xchg
adc
cltd
add
jae
jbe
sti
scas
fwait
shrb
jno
pop
xor
incl
push
dec
lahf
sbb
mov
lcall
inc
inc
movsl
sub
outsb
cmc
jbe
lods
loop
test
mov
idivb
icebp
fsubl
push
push
jl
aaa
mov
sub
nop
pop
cmp
mov
lods
pop
and
jge
cli
sbb
xchg
push
push
cmp
je
push
dec
das
cmp
les
cwtl
mov
mov
pop
fldt
std
ss
xchg
nop
fisubrs
xchg
lret
lods
cmp
inc
cli
xchg
mov
popa
stos
fsub
testl
inc
mov
dec
ljmp
add
aas
in
or
cld
dec
pushf
sbb
add
add
sbb
sub
lea
sub
adc
fsubr
cmp
add
bound
mov
subb
xchg
sbb
sub
call
inc
mov
mov
icebp
lret
mov
push
lea
call
jecxz
jne
dec
or
and
icebp
dec
or
jo
daa
jle
inc
mov
rclb
fidivrl
lcall
mov
movsb
in
hlt
xchg
ds
jb
cmp
xor
mov
pop
dec
scas
and
push
xchg
int3
mov
stos
adc
push
sbb
pop
je
jge
mov
sahf
push
jno
cwtl
repz
cmp
xlat
cmp
fwait
xchg
idivl
aaa
gs
sub
adc
or
jg
rcr
pop
imul
add
movsb
out
rcll
sub
stos
mov
push
sarl
push
enter
xchg
xor
xchg
test
shr
pop
hlt
xchg
mov
jecxz
mov
pop
sbbb
xchg
adc
mov
scas
xchg
imul
xor
add
stc
inc
test
int3
xor
movl
mov
xchg
popf
jae
mov
enter
jg
testb
sti
pop
cmc
test
cmpsb
xor
push
pop
ss
jns
xchg
mov
or
popf
std
out
adc
loopne
rcl
pop
push
xchg
jo
andl
aad
lea
leave
test
mov
pop
loopne
inc
and
movsl
push
stc
lcall
add
pop
jo
aas
mov
and
fwait
test
lret
mov
dec
lahf
negl
in
loope
push
test
cmp
mov
clc
in
xor
mov
int3
or
pop
pop
or
scas
mov
and
mov
cmp
mov
std
or
test
sub
push
mov
mov
in
out
add
insb
in
lds
pop
ret
lea
mov
insl
sub
pushfw
push
arpl
pop
js
xlat
mov
data16
ss
cmpsb
xchg
mov
pop
loop
add
mov
mov
outsb
cltd
xchg
out
xchg
jmp
inc
pushf
mov
mov
ljmp
mov
sub
push
test
out
jne
sarl
xchg
sbb
pop
ds
add
mov
andb
xchg
pop
push
leave
popf
inc
push
stos
out
mov
or
add
xchg
adc
movsl
push
call
xor
xchg
cmp
push
sbb
push
enter
fisttpll
push
movsl
cmp
xchg
nop
scas
jle
jae
shll
out
outsb
les
fs
jle
xchg
sub
or
mov
mov
mov
lret
fisubl
cwtl
leave
sub
push
cmpsl
jne
mov
scas
pop
mov
dec
mov
jmp
insl
sarb
mov
test
jnp
mov
mov
jmp
int
fsubr
das
gs
jl
aam
lods
jo
bound
mov
sub
outsb
lcall
enter
cmp
sbb
rcll
xor
insl
sub
jb
sbb
jnp
jecxz
test
repnz
mov
and
jbe
enter
cmp
jns
fmuls
push
xor
jns
and
mov
sbb
cmovns
jmp
mov
push
lret
int
or
ljmp
add
xor
aad
pop
push
sub
pop
xor
movsl
push
cmc
movsb
imul
xchg
push
jge
cmc
pop
pop
mov
test
add
ja
daa
pop
ficoml
data16
ja
fisubs
std
mov
rorb
dec
lcall
mov
lcall
repz
jo
cli
movsb
dec
loope
dec
push
testl
movsl
mov
or
xor
jl
or
lea
cmp
adc
in
ds
push
mov
mov
ficomps
lock
ficoml
mov
xchg
jge
push
and
add
add
pop
cld
push
sub
pop
loopne
data16
push
add
xlat
pusha
mov
test
andb
js
pop
scas
cmpsl
dec
test
jmp
inc
dec
mov
add
sub
dec
jge
cld
ja
jmp
test
loope
dec
sti
or
push
xor
inc
rolb
lahf
outsl
pusha
cmp
lds
pop
in
mov
push
sbb
cs
lods
xor
popl
mov
add
dec
lods
mov
and
sbb
xor
out
test
test
inc
lret
outsb
inc
sub
gs
jle
push
inc
lcall
mov
dec
mov
mov
push
xor
or
sub
in
mov
mov
or
int3
aas
loope
enter
xchg
jecxz
cltd
test
lods
out
and
cmp
cmpsl
rclb
add
outsl
cltd
ljmp
push
outsl
push
xor
dec
jl
inc
or
sbb
lahf
test
pop
pop
in
popf
adc
dec
cwtl
inc
test
stc
sbb
sub
into
xor
loopne
out
cltd
lcall
scas
jno
jecxz
addl
stc
sbb
mov
push
xor
popa
push
xor
nop
add
and
sub
add
pushf
dec
mov
add
jmp
xchg
pop
sbb
xlat
add
iret
daa
mov
push
outsl
cmp
jne
mov
xchg
mov
iret
cmp
addr16
scas
fsubrs
push
push
outsb
and
out
stos
pop
loope
pop
out
fldenv
add
push
shll
xchg
je
push
aad
rcll
addr16
mov
xchg
pop
ja,pt
insl
je
jle
imulb
shrb
mov
push
aad
inc
or
dec
mov
jecxz
fbstp
lret
imull
outsl
push
icebp
inc
jnp
test
mov
dec
dec
mov
sub
cmp
dec
pop
jns
dec
mov
and
enter
sub
jl
cmp
pusha
jg
les
xchg
sub
push
sbb
mov
cmpsl
pop
push
into
adc
add
sub
mov
fidivl
cmc
cli
loop
inc
add
cmp
addl
mov
lea
mov
add
outsl
dec
add
test
movsl
or
and
scas
or
nop
cltd
xchg
enter
cs
push
adc
nop
mov
mov
push
mov
cmp
xor
cld
lds
pop
mov
inc
and
stos
mov
jno
or
mov
repnz
sbb
out
mov
mov
or
shll
enter
sub
ret
add
jp
subl
pop
xlat
push
stc
int3
outsb
xor
test
cmpsb
mov
sub
cmpsb
xchg
sbb
cmp
mov
ret
imul
xor
enter
sbb
mov
inc
pop
sub
pop
sbb
nop
notl
inc
imul
cli
mov
iret
pop
dec
mov
mov
pop
mov
daa
pop
mov
shll
loopne
jmp
inc
movsl
push
test
inc
lock
stos
mov
ja
sbb
or
data16
mov
add
push
imul
dec
jg
pop
sbb
inc
jle
fstps
cld
fadds
dec
lds
adc
push
lock
jno
dec
ret
push
test
jno
cmpsb
push
or
stos
inc
push
inc
sti
mov
loopne
aad
shrl
inc
xor
in
fisubl
mov
ret
push
in
jo
cli
dec
bound
xchg
sub
stos
add
dec
jle
push
nop
and
int3
jp
ret
push
push
lret
or
push
idiv
les
jl
cmpsl
add
and
cmpsl
lahf
nop
mov
test
jo
repz
aas
jo
pop
lds
sub
movsl
and
pusha
push
sbbb
imul
cltd
and
cmc
icebp
stc
in
dec
sub
xchg
inc
mov
inc
and
xlat
ja
popa
inc
mov
test
stc
xor
cmp
jle
push
jmp
dec
xor
lcall
sub
out
or
jl
xlat
scas
mov
push
mov
das
add
cs
mov
enter
sub
lahf
mov
scas
cmp
push
cmp
mov
adc
lods
arpl
mov
or
lret
mov
mov
rorb
das
adc
jle
fs
arpl
push
jbe
dec
sub
push
xor
fisubl
dec
outsl
jl
lret
ret
fcmovnb
loop
lea
loope
imul
or
or
pextrw
sbb
and
xchg
das
mov
push
mov
xor
xor
xchg
hlt
mov
inc
xchg
hlt
ljmp
mov
js
push
mov
pop
mov
mov
mov
mov
xchg
in
fisttpl
xchg
or
clc
mov
pop
or
popf
enter
mov
shr
popa
lea
cltd
jmp
pop
add
test
loope
cmp
mov
sbb
movsb
and
daa
scas
push
test
and
xchg
xchg
push
imul
cmp
cmc
in
push
mov
orl
sbb
sbb
ret
mov
sub
mov
test
nop
cmc
pop
mov
inc
enter
mov
in
mov
cwtl
outsl
push
cmp
or
cmpsl
imull
inc
xchg
aaa
daa
mov
xlat
fwait
lock
mov
orb
outsb
xchg
fmuls
data16
or
lret
push
or
insl
cmpsb
xchg
aas
cmp
popa
add
fxsave
insl
jmp
rol
lea
cmpsl
add
sbb
es
mov
aam
lahf
push
mov
andl
push
and
sbb
jle
push
mov
fwait
dec
adc
xor
hlt
pop
xchg
mov
popa
pop
pop
sub
cld
push
jp
stos
scas
or
scas
fnstsw
mov
mov
imull
adc
cwtl
leave
sbb
or
lret
or
std
inc
lods
xor
jbe
jnp
enter
fldt
lahf
and
or
leave
xor
stos
nop
dec
das
pop
cmpsb
dec
int
xor
xchg
and
ja
imul
cmp
out
cmp
imul
dec
lds
push
fsubr
add
sbb
push
mov
call
push
mov
pop
out
mov
mov
repz
or
adc
fs
cmpsl
imul
ljmp
test
adc
adc
out
cmp
xor
repnz
cwtl
icebp
inc
in
mov
lcall
pop
inc
xchg
movsl
xchg
adc
pop
and
pop
pop
inc
fistl
sti
pop
jb
mov
jmp
pop
adc
sbbb
inc
lock
mov
jmp
mov
sub
jno
test
fdivl
cmp
fbld
test
leave
addb
pop
cmp
pop
test
and
xlat
out
lea
movsl
int3
or
sub
and
scas
lea
fcom
imul
movsl
pop
fdivs
jl
fldenv
out
lea
ficomps
pusha
xchg
cmc
ret
nop
andb
cmp
fst
popa
adc
inc
fmul
mov
cmp
xor
inc
cmp
sti
andl
adc
pop
xchg
xor
push
ljmp
mov
test
push
xlat
sbb
push
xchg
mov
add
nop
outsb
leave
lcall
and
inc
das
mov
test
sub
aam
filds
in
xorl
in
je
out
push
dec
loope
in
and
push
xor
inc
cmp
cmc
lret
xchg
inc
movsb
pop
jg
push
jbe
push
mov
popf
scas
pop
scas
divl
and
gs
mov
test
pop
mov
push
xchg
xor
aaa
jns
push
or
mov
jmp
mov
adc
jl
jo
scas
outsb
fcmove
aas
fbstp
pop
subb
mov
outsl
pop
addl
hlt
sub
mov
xchg
adc
leave
fnstenv
jmp
mov
push
push
cmp
mov
jecxz
cmp
dec
or
xor
sahf
hlt
push
sub
ljmp
imul
sbbb
gs
and
or
or
mov
xchg
and
dec
mov
lods
push
jle
je
cli
add
mov
xchg
jnp
sbb
xchg
add
and
and
fidivrs
adc
push
mov
int
stc
repnz
jmp
aas
out
mov
movsb
imul
out
andl
mulb
out
cmp
or
call
dec
fidivrl
dec
push
pop
xchg
popa
pop
scas
mov
stos
dec
test
push
sub
std
and
mov
xchg
mov
jbe
mov
ja
inc
js
enter
sahf
push
into
in
nop
int
das
xor
or
out
add
cmpsl
scas
sarl
jmp
mov
pop
cmpsb
cmc
and
pop
cwtl
icebp
sti
clc
hlt
xor
test
hlt
test
jmp
ret
pop
js
and
inc
xchg
in
lds
dec
push
fldl
sbb
daa
adc
wrmsr
mov
cwtl
loopne
pop
pop
clc
jb
lcall
mov
pop
xchg
sbb
push
lds
pop
cmpsb
xchg
inc
in
fisttpl
jecxz
sbb
mov
xchg
cmc
sub
pop
sbb
add
leave
nop
inc
jbe
or
incb
or
cmc
fsubl
and
and
aas
sbbb
repz
cmp
xlat
and
iret
and
add
lock
ds
inc
cmp
adc
mov
sbb
jg
je
loope
and
lock
inc
fsub
jle
pusha
inc
cli
mov
in
or
sti
or
stos
xor
aas
xor
lahf
xchg
psrld
xchg
add
jg
adcb
imul
fcoms
aad
stos
js
sub
and
outsl
rol
out
out
xchg
jmp
push
cmpsb
jb
aam
pusha
pusha
movsl
sbb
xor
rcrl
dec
stos
push
push
mov
xchg
stos
js,pt
fistpll
mov
jmp
rolb
movsb
push
faddl
or
test
mov
xor
push
push
dec
fidivl
sbbl
lret
cmpsl
inc
out
or
test
jmp
pusha
dec
cmp
movsl
xlat
mov
adc
ret
imul
jecxz
mov
stos
cmpsl
or
data16
filds
das
lret
adc
insl
cld
sub
pusha
shrl
pop
icebp
fwait
test
out
xchg
nop
jecxz
mov
xchg
inc
test
mov
rcrb
fwait
mov
sub
or
xchg
cmpsl
jle
mov
jno
ficompl
pushf
andb
xor
pushf
in
fstpt
out
jne
sti
jnp
dec
leave
cmpsb
xchg
xor
mov
cmp
gs
scas
pushf
pusha
test
mov
hlt
jl
xor
les
imul
aad
stos
sbb
or
sbb
int
stos
lcall
into
cmc
and
pop
push
pop
test
leave
dec
push
dec
shlb
lcall
push
adcl
push
clc
jl
jo
mov
fidivl
xor
dec
cmpsl
ljmp
imul
iret
mov
jp
or
int3
sub
jecxz
idivb
jecxz
xlat
xorl
cld
movsb
mov
and
pop
sub
insl
push
mov
sub
scas
sahf
popf
sbb
jns
mov
lret
rcrb
pop
imul
push
insb
imul
sub
clc
aad
int
fists
jl
pop
lock
push
xlat
lcall
jb
jge
xor
mov
mov
nop
cmp
fistpl
les
mov
ds
dec
loop
enter
scas
gs
std
test
mov
dec
movsl
int
pop
pop
adc
mov
into
push
ret
shl
jno
dec
cld
cld
mov
popa
adc
test
daa
mov
xchg
lock
test
rol
mov
cmpsl
fldt
mov
inc
or
add
and
sub
sbb
icebp
pusha
lods
xchg
ss
push
mov
xor
xchg
mov
arpl
cli
or
push
pop
mov
lods
neg
fdivl
push
sub
push
push
sbb
sarb
pop
mov
fs
xchg
nop
dec
sbb
sbb
inc
clc
icebp
imull
push
push
pusha
sarb
xchg
xchg
pop
ret
adc
adc
mov
mov
testb
xor
je
std
lret
rolb
stc
ret
cmp
or
or
pop
mov
jmp
push
hlt
out
ret
jae
out
out
ljmp
jmp
sub
call
sub
push
leave
sti
cmp
mov
test
xchg
inc
popf
pop
and
cli
xor
sbb
xor
push
scas
pop
in
cmp
push
repnz
aaa
adcb
notb
xor
push
lret
inc
adc
sub
dec
cmp
leave
scas
jl
adc
aad
jo,pn
mov
lds
jb
aas
or
insb
test
leave
inc
lret
mov
shll
shl
stc
mov
or
xchg
sbb
subl
mov
arpl
adc
loopnew
mov
cmp
outsl
fs
cmp
lahf
push
shll
sahf
test
into
cwtl
sub
loope
imul
shrb
push
movsb
fimuls
cmpsl
gs
adc
cmpb
jno
fnstsw
mov
xor
lods
jl,pn
dec
dec
ss
or
mov
and
rolb
insl
pop
shl
dec
fldt
test
popf
daa
repnz
in
xchg
cmpsb
ljmp
or
data16
cmc
mov
in
xor
inc
adc
stos
mov
sbb
sbbb
jecxz
cs
out
mov
arpl
out
or
add
jbe
addr16
cltd
arpl
xchg
loopne
adc
inc
mov
jns
out
adc
adc
jbe
inc
or
sub
ds
mov
cmp
out
ror
dec
inc
push
inc
sbb
or
inc
shl
dec
sbb
and
ret
add
mov
xchg
cli
push
loop
push
loop
sbb
icebp
push
cmp
mov
lods
outsb
jns
call
push
and
or
dec
adc
sub
ljmp
ret
shll
xchg
pop
and
mov
shl
mov
stc
or
mov
jne
sbb
cmpsl
or
sbb
jb
lods
es
push
int
inc
lcall
clc
sub
or
nop
fwait
adc
pop
les
insl
sbb
pushf
stos
das
lahf
and
xor
out
cmp
sub
xor
pop
xor
pop
xor
xor
mov
mov
jno
jg
out
movsl
outsb
rcrl
popf
xchg
lret
dec
jbe
lds
test
jns
aam
xor
jbe
in
jg
jno
lret
jmp
mov
dec
mov
push
xchg
push
loope
je
lods
jmp
xlat
test
mov
iret
repnz
stc
xlat
add
cmp
insb
inc
dec
rclb
into
hlt
mov
jo
lret
and
xor
mov
pop
mov
xor
scas
cwtl
loope
out
xchg
pop
mul
xor
cmp
out
xchg
jb
sbb
aad
mov
xchg
lea
rorb
push
sub
sbb
bound
ss
lahf
xchg
xor
push
in
push
ficomps
jecxz
push
test
add
outsl
in
ficoms
pop
adc
mov
iret
scas
xchg
in
jne
dec
ret
pop
fwait
pop
mov
mov
jne
jb
ficoms
aas
and
addr16
sub
push
repz
icebp
sub
sub
mov
fs
xchg
xchg
rcll
mov
imul
cmpsb
scas
icebp
test
ds
aam
xchg
test
xor
dec
add
xor
and
xor
repz
jnp
pop
jl
push
shrl
add
fadd
mov
scas
movsb
mov
dec
dec
orb
xchg
sub
add
mov
aam
subl
push
lret
mov
pop
adcl
fs
mov
fidivs
adc
cmp
mov
stos
sub
mov
xor
xchg
stos
aam
addr16
fdivl
loopne
push
jge
dec
xchg
into
ret
repz
out
enter
jae
or
lods
sti
filds
cmp
in
and
je
imul
and
dec
inc
jno
mov
aas
add
add
jl
jp
pop
int3
shl
push
out
mov
subl
jmp
fldt
out
or
les
fwait
xchg
mov
outsb
dec
mov
or
shlb
lahf
dec
mov
xlat
lcall
mov
mov
dec
pop
scas
sub
sti
es
jl
iret
xchg
and
outsb
lds
in
fucomp
in
ds
add
jbe
fwait
aaa
je
lsl
push
fdivrs
cs
push
cwtl
jg
adc
adc
and
or
stos
xor
orb
cmp
loop
sub
xlat
pop
test
mov
add
add
repz
clc
or
imul
out
movsb
dec
ja
in
icebp
into
xchg
insl
jnp
adc
jae
mov
jecxz
inc
aad
xlat
shll
mov
push
imul
int
out
mov
mov
std
ret
mov
test
pop
add
push
movb
sub
mov
icebp
ljmp
js
push
fs
push
std
inc
dec
xorb
testl
add
iret
out
icebp
mov
dec
cmpl
rclb
adc
jo
pusha
inc
mov
xor
dec
imul
mov
adc
inc
ja
cltd
dec
mov
dec
and
int3
gs
mov
outsl
or
pop
dec
fidivrs
mov
mov
cmp
xchg
lahf
test
call
test
nop
sbb
lret
test
sub
push
stos
adc
push
jg
pushf
add
and
or
sbb
push
mov
loope
insb
std
call
rcrl
je
adc
dec
or
mov
xor
imul
mov
inc
sub
cmp
xor
fs
mov
out
jno
inc
pop
in
roll
mov
push
in
jno
shlb
jp
pop
pop
push
es
add
add
popa
jl
popf
xor
popa
dec
rclb
xchg
jae
pop
inc
jbe
shlb
push
aad
lahf
mov
push
and
dec
test
and
test
out
inc
shll
cmp
imul
mov
test
mov
enter
mulb
and
mov
adc
mov
repnz
in
mov
js
jae
loope
jb
mov
mov
icebp
push
inc
dec
xor
dec
in
xor
or
shll
add
arpl
mov
cmp
jb
loope
xchg
adcl
jl
ljmp
lret
jne
into
icebp
mov
xchg
hlt
addb
or
push
xor
xchg
subb
inc
pushf
push
add
and
sbb
in
sbb
dec
leave
cmpsl
into
and
mov
or
insl
loope
lret
addr16
jno
pop
jae
das
cmp
adc
sub
loopne
push
shrb
adc
pop
arpl
xchg
loop
sub
inc
mov
sub
pop
jl
lods
ss
jno
jno
xor
jns
out
pop
nop
cmp
sbb
fsubrs
ljmp
sub
sub
xor
mov
mov
lds
push
mov
mov
mov
cli
icebp
adc
and
sub
inc
jno
cmp
sub
loope
and
fiadds
sbb
cmp
sbb
cmp
mov
add
pushf
mov
mov
les
popa
lea
adc
lret
mov
xchg
pusha
les
xlat
leave
mov
inc
push
jo
in
int
in
mov
mov
adc
mov
mov
testl
stc
shlb
bnd
mov
out
pop
cmpsb
lahf
dec
pop
push
out
sbb
dec
sub
pop
dec
jne
add
push
and
stos
fldenv
mov
sbb
cmc
sbb
rolb
iret
sub
fs
push
and
mov
inc
ja
push
cs
pop
pop
add
mov
xchg
pop
jnp
jne
sbb
push
imul
cltd
shll
addr16
lock
lods
stos
mov
sti
stos
mov
push
sub
mov
cmp
aad
out
xor
add
mov
pusha
xor
arpl
repnz
xchg
fisttps
mov
jecxz
iret
ret
mov
xchg
das
mov
ror
mov
dec
cmp
gs
fsubl
and
inc
sbb
add
jno
sub
out
pop
rol
cmpsl
fxch
testl
loopne
xchg
jl
outsl
and
fisubl
pushf
imulb
or
outsl
push
int
xchg
mov
scas
xor
mov
xchg
xchg
cmp
lock
inc
sarb
dec
sub
mov
sti
loope
and
rcrb
loope
mov
test
pop
mov
gs
or
xchg
movsb
jae
int
hlt
sbb
lret
test
add
clc
pop
outsb
ja
add
xor
clc
aam
mov
pop
out
cmc
cmpsl
rclb
cmp
xor
cs
push
mov
pop
imul
xor
sub
pop
mov
dec
jg
int
jecxz
mov
push
cmp
push
mov
cmpb
cwtl
xchg
push
insl
out
jne
mov
aad
or
popf
iret
mov
and
out
gs
xor
out
outsl
cmp
pop
or
loopne
mov
jo
cmp
pop
cld
cltd
jb
ret
iret
cmp
xchg
or
mov
mov
dec
setl
cmp
subb
mov
mov
mov
aam
shrl
arpl
xchg
in
fsubrs
adc
out
outsl
inc
outsl
cmpsl
sbb
jae
pop
xorl
fbstp
push
ret
sub
data16
mov
mov
inc
ljmp
jg
adc
ja
inc
push
ja
ss
cmp
jno
les
push
enter
sbb
jge
ds
iret
dec
xor
lret
pop
jo
int3
and
stos
xor
push
cmp
pop
xor
jne
in
loop
xor
or
incl
pusha
xor
or
cwtl
fwait
push
push
mov
repz
pop
out
test
in
push
mov
repnz
sub
mov
cmp
iret
mov
stos
lds
mov
mov
inc
stc
cli
pop
cmpb
pop
sub
out
jo
push
push
imull
stos
insl
adc
clc
push
sbb
mov
xchg
addr16
mov
and
pop
or
fldl
mov
jbe
in
mov
sahf
mov
jae
jge
mov
jne
fs
imul
push
adc
cmp
dec
lcall
xor
fldt
sbb
push
cltd
imul
in
rcrl
inc
jmp
xchg
sub
mov
and
push
lock
push
loop
cmp
or
and
mov
push
in
add
sbb
sbb
fcmovb
jb
add
std
sub
jl
dec
or
cltd
pop
shll
sti
pop
outsb
jno
jne
addb
pop
pusha
jmp
sub
and
ds
and
stc
cmp
scas
push
pop
pop
data16
jae
fiadds
dec
pusha
pop
ss
addr16
jge
shl
leave
outsl
pop
clc
sbb
or
sbb
in
and
je
andl
test
sarb
xor
jmp
std
outsb
and
mov
sahf
outsb
popa
adcb
pop
cld
and
mov
add
sub
ficompl
pop
jecxz
lock
cli
dec
mov
cwtd
cmc
lret
mov
xor
scas
mov
pop
ss
insl
std
insb
stc
jmp
cmp
mov
add
addr16
sbb
test
into
xchg
pop
adc
pop
cmpsl
xchg
jg
jae
and
inc
ljmp
add
fcmovu
dec
add
imul
mov
pop
js
jge
fistpll
leave
xor
jmp
es
and
adc
fcoms
push
lret
loope
or
xchg
std
clc
xchg
orb
jmp
mov
scas
push
pop
addr16
and
insb
dec
mov
mov
ljmp
adc
jle
or
mov
pop
pop
jmp
jbe
inc
xor
sar
sbb
addr16
push
push
dec
and
mov
jecxz
xlat
mov
sub
mov
xor
aam
movl
scas
cmp
adc
add
aas
dec
loop
pushl
mov
adc
es
rol
xor
mov
sbb
adc
leave
mov
sbb
fcom
in
imulb
je
adc
jb
aad
sbb
pop
stos
inc
loop
xchg
mov
aam
and
sub
dec
cmp
pop
adc
inc
or
xor
icebp
xor
mov
cmp
test
mov
sahf
push
sbb
jbe
shll
and
push
std
dec
bound
out
add
ret
inc
fisttps
inc
mov
jecxz
pushf
dec
pop
add
push
cmp
inc
inc
aam
cmp
push
mov
jmp
popl
mov
xor
or
testl
mov
pshufw
sarl
mov
xor
test
mov
into
lahf
xchg
jp
stos
test
sub
mov
repnz
xchg
inc
mov
mov
rclb
mov
sbb
sahf
sub
sbb
cmp
xchg
fidivrs
sub
idivl
add
xor
aas
mov
mov
dec
push
fstp
cs
sbb
je
pop
rcll
sarb
and
pop
sub
out
inc
cmp
lods
aam
popa
cmp
repnz
lods
scas
xchg
in
addb
aas
lret
xchg
jbe
mov
imul
fisubrl
xor
cwtl
xor
in
xor
sahf
dec
mov
mov
mov
xorl
ljmp
leave
pop
cmpsl
mov
cmp
xlat
jb
cltd
and
addb
sahf
popf
cld
sub
aas
mov
pop
adc
pusha
push
fs
inc
jno
cmpsb
bound
push
gs
add
popa
pusha
fwait
cmp
and
sti
xlat
insl
in
add
mov
out
sti
adc
and
cli
add
scas
lea
pop
aad
cltd
mov
pop
mov
inc
add
mov
das
mov
pop
sti
add
daa
bound
dec
cmc
mov
popa
cmpsb
push
sti
frstor
lods
mov
andl
insl
sub
das
jmp
push
lret
mov
inc
es
mov
enter
popa
repnz
mov
xorb
push
sahf
cltd
leave
sbb
dec
aad
push
js
jmp
dec
andb
and
cmpsb
les
mov
clc
cwtl
mov
mov
lods
xor
mov
dec
arpl
sub
inc
inc
es
cltd
mov
mov
icebp
lret
jmp
sbb
aam
mov
push
dec
pop
stos
sahf
add
sbb
lahf
out
adc
adc
xor
sub
inc
or
inc
insl
jnp
mov
bound
mov
cmp
fdivrl
jecxz
jecxz
into
push
push
or
fnstcw
mov
mov
push
aas
jle
add
adc
mov
jg
insl
push
push
rclb
jge
cld
jmp
xor
scas
sub
sbb
decl
dec
sbb
shll
mov
fsts
lret
pop
cmp
in
enter
out
mov
and
leave
aaa
jle
into
daa
mov
adc
mov
cmpsl
ret
cwtl
repnz
ljmp
lcall
add
lret
cmp
sub
inc
xor
lahf
pushf
jnp
or
and
mov
sti
lds
pop
mov
jno
xor
mov
lret
test
mov
cltd
jp
insl
mov
pop
rcrl
cmp
ret
mov
cwtl
pushl
fstp
cmp
pop
data16
lds
cmpsl
rcrb
insb
add
push
cmpsb
dec
daa
daa
add
mov
or
inc
mov
ss
pushf
pop
and
or
outsb
cltd
inc
jns
mov
push
mov
enter
nop
mov
lcall
mov
sub
adc
jns
scas
fdivp
push
xor
movsl
dec
xor
adc
mov
inc
xchg
lds
xchg
pushf
pop
jmp
push
movsl
or
and
stos
dec
int3
aam
aam
adc
inc
cmpb
movsl
in
pop
mov
lods
in
sbb
add
int
in
inc
daa
cmp
outsb
fptan
lds
repnz
fsts
xchg
rorl
push
popa
jne
cmp
enter
lods
sub
fists
shrl
pop
push
sti
jne
scas
mov
mov
data16
push
testl
fsubrs
shrb
mov
jle
jge
or
test
je
mov
cmp
mov
pop
das
and
adc
adc
mov
xor
rcr
pusha
jo
xchg
cmpl
fnop
das
cmpsb
mov
mov
sbb
repnz
xchg
sub
vcomisd
xorl
adc
dec
and
mov
adc
jle
sub
jnp
jle
fbstp
mov
xor
imul
out
rcrb
sub
xchg
sbb
pop
mov
je
adcb
cli
xchg
sbb
loope
test
std
adc
rolb
data16
mov
ss
in
ror
clc
movsl
flds
pop
lret
test
add
push
cmpb
roll
sti
xor
cmp
sub
pushl
pop
je
push
decl
mov
push
sub
sbb
cltd
mov
int3
xchg
scas
xchg
jbe
lods
mov
lock
mov
stos
dec
popa
gs
loop
sbb
mov
jne
jae
sbb
dec
lods
pop
inc
fcmovnb
inc
in
pushf
mov
fsubrl
shl
jmp
xor
adc
movlps
push
mov
pop
adc
out
push
neg
sti
shll
and
add
dec
les
xor
xchg
adc
cwtl
ss
sub
in
xchg
jnp
es
imul
in
lods
sbb
adc
sbbb
dec
bnd
imul
cmp
dec
es
jae
andb
clc
fbstp
push
sbb
ljmp
xchg
add
cmc
xchg
mov
mov
xchg
je
push
cmp
push
sbb
subb
mov
xchg
or
pop
jl
adc
in
mov
fwait
jmp
xorb
jns
sub
jecxz
or
jmp
bound
test
and
in
xchg
jno
shl
js
inc
mov
sbb
popa
mov
lret
shll
mov
pop
mov
pop
int
pushf
dec
inc
in
mov
push
imul
and
gs
xchg
sub
cmp
loope
fwait
xlat
aas
dec
dec
add
stos
pop
pop
inc
pop
dec
ret
fsubl
leave
addr16
addl
out
push
mov
mov
into
popf
inc
cmp
arpl
sbb
sub
push
mov
adc
lcall
data16
push
loop
repnz
dec
jmp
adc
jecxz
dec
daa
movsb
xor
push
stos
pusha
pusha
xchg
mov
mov
dec
push
jns
push
frstor
inc
cwtl
out
xorb
out
mov
mov
dec
test
gs
xchg
cmp
int
xor
pushf
scas
mov
pop
jmp
sti
push
xor
js
insb
pop
jmp
addr16
inc
clc
adc
pusha
and
test
cmpsb
rolb
bound
outsb
adc
or
mov
sbb
jle
jb
mov
adc
dec
jns
in
xchg
outsb
inc
lea
jg
std
jo
cmp
fs
jmp
loop
xchg
loope
and
into
test
das
adc
sbb
rcrb
or
ret
call
test
or
mov
mov
mov
fstpl
pop
xor
pop
dec
shl
xor
inc
jne
mov
lret
mov
or
adcb
jns
daa
push
inc
jl
popa
fldt
jl
xchg
add
push
dec
sarb
mov
stc
scas
movsb
cli
xor
mov
push
stos
incl
adc
cmpsl
rcrb
movsb
cmp
jo
ljmp
xchg
xchg
pop
cmc
or
sbb
imul
and
add
dec
mov
xchg
sub
shlb
sbb
ret
and
xchg
inc
dec
call
jmp
insb
movsb
mov
into
sub
data16
sub
xchg
add
jl
dec
mov
or
or
cs
dec
jns
sub
mov
mov
sub
notb
push
xlat
sub
xor
inc
xchg
ret
stos
call
sbb
sbbb
add
test
testl
cmpsb
dec
aas
decl
add
lret
sub
mov
xchg
mov
push
imul
pop
or
sub
js
pop
mov
add
mov
add
or
push
xchg
lds
add
test
jae
add
ret
fwait
cs
mov
int
test
test
popf
sbb
stc
xchg
dec
xor
popl
cmp
or
mov
dec
sahf
test
or
xchg
out
mov
pop
clc
add
adc
mov
mov
cli
mov
pop
xor
xor
outsb
int
cmpsl
sbb
dec
mov
ljmp
stc
mov
xor
sbb
dec
je
xchg
cmc
insb
xor
cltd
outsb
add
mov
imul
sub
pop
or
mov
cmp
jne
pop
pop
add
cmp
dec
scas
addl
push
sbb
sbb
sub
out
mov
stc
sbb
mov
inc
int
stos
mov
stos
sub
fistpl
inc
lods
lods
in
out
xchg
lods
inc
mov
mov
sub
sub
shll
push
loope
pop
gs
jp
test
mov
mov
push
cld
lds
push
lock
test
mov
push
bound
lds
mov
scas
divl
mov
push
iret
loope
mov
ret
cmpsl
jp
dec
and
xchg
inc
adc
inc
sub
das
mov
fists
adc
xor
push
fadd
fbstp
out
jne
inc
scas
push
xor
xor
in
xchg
mov
dec
out
inc
mulb
test
inc
les
sub
rcll
mov
insl
hlt
and
mov
sbb
pop
adc
sub
xor
insb
and
popf
lret
cmc
cmp
adc
pop
xchg
sub
xchg
decl
jl
sbb
push
out
sti
int3
out
adc
jp
mov
subl
xor
pop
cmp
lahf
push
sub
jle
jl
ja
testl
ja
enter
xchg
push
cld
ljmp
mov
fstpl
test
and
inc
sti
cmp
fwait
jmp
out
sbb
inc
xchg
xlat
jp
sarb
fcomps
jp
sbb
imul
or
mov
add
and
adc
cmp
mov
jns
cmp
std
mov
rcrb
lret
popf
jl
lods
int
arpl
cmp
fcoml
hlt
stc
push
pop
mov
mov
test
jbe
fsubs
shrl
inc
mov
jmp
aas
enter
faddl
in
jecxz
cs
outsb
rcll
or
inc
out
add
mov
lea
mov
mov
push
in
lcall
cli
pop
add
adcb
jb
aas
sahf
repnz
or
mov
jecxz
mov
jge
sub
jae
sbb
sbb
jg
push
data16
sub
in
dec
into
mov
dec
scas
pop
test
mov
or
dec
add
outsb
cmp
fidivrl
scas
jbe
ljmp
or
cli
aam
mull
addr16
lret
xchg
imul
lock
int
ret
pop
pushf
cmpl
shlb
xor
ss
ja
push
mov
jbe
push
sub
xor
inc
ljmp
xchg
ss
popa
dec
jo
popf
nop
jns
icebp
adc
js
xor
iret
and
cli
cmp
push
pop
jmp
ret
ficomps
rorb
in
mov
push
sub
add
pop
pop
xlat
sub
mov
xchg
lret
cmp
jmp
push
fs
test
mov
mov
xchg
pop
pop
pop
repz
ljmp
int
shrb
sub
pop
in
jmp
xchg
sub
aad
aaa
scas
dec
inc
adc
je
jg
inc
cmpl
jno
push
mov
arpl
adc
arpl
lcall
ds
mov
pop
sub
andl
pop
or
dec
bound
cs
test
inc
xchg
fnstenv
jno
cmpsb
mov
pop
sti
dec
lock
cmp
add
pop
iret
xchg
cmp
sub
and
es
jge
adc
jbe
dec
add
xchg
stos
ljmp
sub
adcb
mov
dec
mov
mov
cltd
incb
mov
dec
xchg
jl
adcl
jno
movsl
sub
fwait
and
movsb
repz
and
imul
push
jg
and
and
les
fs
jp
add
rclb
pop
push
daa
imul
mov
mov
xchg
or
cmp
mov
scas
inc
in
sub
es
fwait
dec
xchg
out
enter
in
jp
xchg
cltd
adc
or
test
faddl
and
mov
lcall
jae
mov
fcompl
sbb
or
dec
test
sub
mov
push
jg
in
std
scas
push
aaa
ds
faddl
jmp
pop
pushf
push
jecxz
sbb
aas
mov
movsb
and
inc
mov
jle
xchg
out
outsl
cwtl
or
aas
mov
mov
sbb
and
cld
sub
jp
xchg
sahf
repz
push
stos
pop
cmpsb
insb
xchg
insb
in
loop
xor
subl
jb
dec
test
pop
fiadds
mov
mov
dec
push
daa
lret
sbb
cmp
cmpsb
xchg
jno
xchg
jo
popf
roll
pusha
lcall
sub
call
and
call
adc
jbe
mov
pop
out
or
lahf
cmp
jle
nop
aam
mov
mov
adc
pop
jl
loope
lds
jns
lock
pusha
add
in
imul
std
in
push
popa
into
or
aas
sti
cmpsl
test
lahf
aam
inc
pop
dec
jle
jmp
pop
mov
add
or
imul
xchg
ret
fdivr
insl
pop
jnp
sahf
addr16
pop
gs
idivb
iret
sbb
out
sti
repnz
xlat
std
cmp
pop
mov
mov
add
push
or
pop
loopne
push
scas
fstps
mov
push
inc
inc
popf
stc
push
stos
mov
push
xlat
lahf
push
push
push
std
sub
insl
std
aaa
cmp
popf
mov
sbb
xchg
push
repz
mov
lea
aaa
mov
fnstcw
out
imul
mov
xor
dec
fs
push
xchg
dec
add
inc
adc
xor
mov
cmpsb
add
mov
jne
test
aaa
and
mov
mov
stc
adc
dec
fwait
mov
or
inc
cmp
sbb
dec
pop
mov
int3
inc
test
iret
or
daa
sub
inc
jne
push
aaa
xchg
inc
push
adc
es
xchg
leave
add
dec
rclb
xchg
shll
and
imul
int3
out
testl
test
out
test
add
jb
xchg
push
xchg
clc
bound
pusha
sbb
cmpb
pop
dec
test
push
lret
xor
cmc
shrl
loope
int3
adc
jge
into
inc
push
jmp
lods
rclb
scas
push
xchg
dec
cwtl
daa
lret
sbb
pop
addl
imul
cmp
insb
add
js
sahf
stos
or
aaa
cmp
pop
adcb
out
push
xchg
shrl
sub
or
adc
ljmp
lds
jns
pusha
push
push
ljmp
mov
repz
inc
scas
repnz
test
sbb
mov
out
dec
mov
xchg
inc
sub
add
add
push
adc
pop
xchg
in
out
cmp
sbb
mov
cmp
and
sbb
or
test
out
adc
cmpsl
push
stos
add
xor
test
pop
leave
std
mov
and
cld
xor
je
sub
fidivrl
sub
in
jns
pop
stos
or
loopne
mov
dec
dec
pop
xchg
jb
cvttps2pi
inc
les
ret
incb
inc
repz
sub
xchg
shll
lods
out
in
mov
sub
sbb
cmc
into
shlb
push
adc
call
push
sbb
dec
dec
popf
movsb
loop
or
dec
push
mov
aas
loopne
sub
jae
inc
lahf
lret
insl
cltd
rcrb
sub
cmpl
js
or
jae
sbb
jne
das
inc
jb
push
sbb
xchg
and
leave
adc
mov
pop
ljmp
loop
xchg
popf
inc
mov
loope
es
sbb
sahf
testb
mov
adc
hlt
movsl
adc
movsb
push
aas
xchg
dec
mov
sub
sub
nop
in
and
lcall
xor
jbe
subb
pop
cs
movsl
mov
ret
subl
sub
je
mov
shrb
xor
aad
aam
mov
fnsave
xchg
and
mov
or
push
fdivl
popa
aas
sub
aas
les
call
outsb
iret
cmp
nop
rcrb
fistpll
xchg
sub
data16
ljmp
pop
xchg
ds
push
cmpsl
mov
pop
ljmp
add
sti
vxorpd
mov
or
neg
pop
cs
mov
data16
fwait
cmp
mov
in
add
mov
loop
data16
ret
adc
scas
mov
fmull
hlt
and
pop
sbb
cwtl
push
xchg
xchg
jno
mov
outsl
data16
adc
pop
adc
cmp
test
lock
mov
faddl
fwait
mov
rclb
shll
push
sbb
dec
pop
mov
fwait
push
pop
adc
mov
out
test
gs
stos
sahf
in
bound
cmp
pop
push
xor
and
jle
jns
dec
xchg
aas
mov
dec
add
mov
int
addb
das
adc
push
pop
int3
xchg
aaa
repnz
xchg
aaa
lret
mov
xor
xor
push
jae
movsb
shll
mov
je
pop
popf
dec
push
cmpsl
mov
hlt
or
clc
inc
cltd
add
xchg
jbe
sub
cmp
xor
rcrb
aas
jmp
cmp
and
movsb
cmp
arpl
fistl
pop
jp
push
clc
or
sar
sub
mulb
scas
add
push
push
add
xchg
aaa
ja
ret
lods
xor
rol
mov
sub
jp
lret
push
scas
outsb
daa
daa
adc
fsubrs
rcrl
std
cmp
stc
bound
scas
rorl
nop
lds
add
sub
adc
xlat
dec
ja
sub
cmp
xchg
aaa
out
push
mov
data16
das
inc
inc
out
dec
mov
sti
mov
movsl
cwtl
cmpsl
std
fistpll
or
mov
adc
lock
mov
sbb
lret
adcb
cmp
add
ja
mov
fs
loopne
cmpsl
nop
cmp
xchg
mov
mov
aad
sahf
adc
or
pop
jle
push
iret
inc
inc
mov
mov
shlb
enter
push
push
push
push
les
cmp
ret
lock
sbb
jo
inc
mov
mov
xchg
pop
xchg
and
pop
mov
js
ss
jecxz
pop
repz
popa
or
push
fbld
xchg
dec
and
ja
sub
in
sbb
adc
ret
pusha
pusha
inc
idivb
loop
mov
movsb
push
mov
clc
sbb
outsb
cmpsl
repz
in
cmpl
push
insl
and
mov
xchg
out
in
cmp
adc
fwait
cmp
in
insb
testl
mov
clc
cmp
adc
pop
mov
xor
mull
or
mov
add
mov
imulb
and
fidivl
pop
push
scas
fildll
jle
mov
or
mov
dec
into
fnsave
bound
js
test
jecxz
leave
and
cmp
sarl
fxch
mov
inc
jmp
loop
jmp
cmp
outsl
call
cmp
adc
and
mov
jae
or
inc
mov
pop
pop
enter
rcrl
adc
loopne
call
dec
push
jge
ds
in
lods
int3
push
int
jns
lea
mov
adc
adc
xlat
test
pop
loopne
lcall
cmp
add
adc
sbb
pop
or
icebp
ljmp
test
push
adcb
sbb
in
cs
mov
dec
push
add
dec
push
mov
outsb
scas
clc
mov
into
mov
inc
mov
push
call
outsl
pop
insb
test
xor
jl
push
mov
dec
ret
aas
xor
cmp
xchg
push
cmp
mov
push
decb
mov
mov
push
out
cmp
pushf
and
and
lods
sar
jno
ret
mov
movsl
call
bound
push
loopne
imulb
jge
xchg
aad
std
mov
ss
popf
mov
repnz
dec
subb
roll
clc
adc
in
push
movsl
dec
add
cwtl
jns
xchg
push
add
test
inc
mov
cmp
xchg
arpl
jg
cmp
in
add
push
add
inc
mov
dec
xor
outsl
and
mov
lcall
mov
inc
fisubs
rclb
pop
pushl
fs
xchg
rclb
sub
js
enter
rorl
ja
iret
daa
loope
sbb
nop
call
into
cwtl
xchg
inc
int3
xchg
enter
jbe
add
outsl
ret
jg
push
push
xor
ja
adc
mov
mov
push
testb
inc
pop
xor
xchg
jne
mov
pop
and
addb
sahf
ja,pt
push
popf
hlt
push
aad
jb
lods
insl
push
and
arpl
sbb
push
sbb
push
mov
jg
movsl
lahf
adc
gs
cltd
add
jp
jle
xchg
sahf
add
jp
xor
out
dec
testb
or
popf
jg
int3
mov
xchg
shrb
shlb
stos
xchg
cmp
mov
push
and
mov
pop
jg
push
lcall
inc
call
sub
cli
adc
std
cmpb
aas
push
popf
mov
jl
repnz
jno
adcl
jecxz
arpl
mov
sbb
mov
test
faddp
cmpsl
ficomps
jno
hlt
out
add
push
adc
add
jne
in
mov
push
inc
mov
loop
dec
cmp
enter
cwtl
cmpl
insl
fstl
rcrl
jecxz
mov
xchg
mul
loop
mov
xor
dec
gs
scas
add
mov
sti
cs
cmc
rol
push
dec
lock
aaa
push
std
addl
lea
mov
fdiv
cmp
pop
mov
fwait
sbb
mov
and
mov
inc
add
and
movsl
imul
into
add
lahf
aad
aam
stos
xor
stos
or
cld
mov
dec
jmp
fwait
repz
pop
pop
incb
fisubs
xor
insl
scas
in
sbb
push
std
popa
pop
jae
add
int3
pop
lea
loope
mov
xlat
pop
sub
inc
mov
in
orb
dec
xor
xchg
test
push
xor
jge
xorb
jle
add
rclb
pop
rcll
xchg
arpl
cld
mov
jmp
mov
loope
add
ja
dec
lahf
arpl
xchg
and
test
mov
pushf
cmp
sbb
imul
mov
test
inc
mov
outsb
fwait
xchg
shl
in
push
je
pop
outsb
inc
inc
or
push
daa
outsl
lock
cmp
gs
push
cmp
mov
cmpsb
lods
scas
or
mov
jecxz
lret
jo
mov
popa
gs
pop
jl
out
pop
iret
insb
mov
insl
jb
or
repnz
cmpsl
dec
push
fnstsw
mov
je
leave
xor
cmpsl
sbb
test
popf
cmp
je
cwtl
fmul
adc
dec
cmp
hlt
nopl
bound
and
js
mov
ret
in
mov
sbb
xchg
and
aam
jg
stos
sbb
pop
cmp
aas
and
imul
inc
xlat
mov
sbb
popa
sbb
push
push
adc
xor
mov
ljmp
scas
jno
mov
es
rcl
jnp
lret
xor
pop
dec
inc
pop
add
inc
or
std
rcll
mov
mov
int
jmp
test
push
aaa
jle
xchg
sarb
inc
xor
mov
push
sbb
leave
lods
ret
xchg
push
fsub
shrb
mov
xchg
aas
pop
jns
shll
ss
dec
cmp
jp
dec
mov
mov
fists
inc
xchg
fisttpll
add
lahf
adc
mov
test
pushf
xchg
pop
add
or
and
mov
xchg
lods
pushf
adcb
xchg
mov
jae
movsl
mov
jno
or
lods
femms
aad
cmp
flds
lds
fstpl
out
mov
push
add
jge
sub
sbb
push
jbe
or
jp
add
add
dec
jg
xchg
repz
shll
adc
or
jmp
cld
lods
fidivl
insl
gs
roll
jl
pusha
sbb
daa
mov
sub
fimuls
lret
mov
pusha
mov
popf
in
in
mov
and
sbb
cmp
pop
mov
les
pop
movb
pusha
dec
or
test
jbe
sub
xchg
dec
nop
sbbb
or
shlb
mov
push
aam
testb
je
mov
xchg
xorl
push
pop
fwait
sub
lahf
and
imul
xor
rcrb
ss
jp
fists
inc
cmp
fwait
mov
icebp
and
hlt
insb
push
jecxz
gs
fsubrs
sbb
data16
int
pusha
inc
inc
pusha
add
and
push
hlt
int3
pop
int
sbb
out
lods
push
ja
adc
stc
mov
mov
lock
pop
sbb
jno
cmc
in
imul
pop
in
dec
addl
adc
mov
and
push
test
das
addr16
and
sahf
roll
cmpsl
cltd
sub
fcmovnbe
in
mulb
xor
push
scas
push
in
dec
adc
push
mov
adc
lea
and
mov
mov
jmp
test
cmpsb
fnstenv
xchg
inc
cld
loop
ljmp
dec
mov
jmp
sub
fs
xor
repnz
stc
or
popa
mov
lcall
mov
jmp
clc
push
fadds
loopne
test
fisubrs
cmpsl
jb
and
aad
push
aad
arpl
dec
lds
loope
pop
cmc
fxam
add
add
pop
mov
inc
nop
lret
push
push
insb
inc
xlat
cmp
daa
nop
js
movsb
mov
push
pop
sbb
ljmp
dec
ret
jno
push
outsl
ss
cltd
mov
adc
fldt
and
and
cltd
inc
lods
xor
add
daa
dec
mov
arpl
sti
mov
mov
int3
and
mov
data16
jno
xchg
loope
out
xchg
push
jnp
push
out
mov
pushf
les
pop
sub
subb
mov
fldt
rcr
pop
out
fwait
inc
add
sarl
push
ja
imul
mov
sub
cltd
jp
and
cwtl
fisttps
ficoml
or
sub
lret
inc
lock
xchg
lock
cmc
insb
mov
push
stos
push
sub
call
mov
fcoml
sahf
jl
stos
cmp
xchg
lods
push
jae
ret
lcall
pushf
sbb
cmp
inc
adc
lods
out
fdivp
lret
sub
add
nop
adc
sub
movsb
inc
loopne
loop
and
jb
pop
mov
aaa
and
fldenv
mov
mov
sbb
out
in
aaa
insb
cmc
dec
lret
dec
es
sbb
inc
imul
lret
adc
scas
pop
or
insl
and
mov
icebp
pop
sbb
and
out
jg
dec
sub
mov
mov
outsb
sub
cs
mov
sbb
push
ja
dec
mov
cmp
push
leave
pop
addr16
out
xchg
and
sub
ja
std
shr
inc
mov
sbb
push
inc
dec
test
js
cmp
sub
add
in
lret
mov
pop
mov
add
pop
xor
shrb
lds
imulb
xor
mov
mov
icebp
dec
or
insl
cmp
dec
daa
ja
jmp
and
adc
jbe
mov
mov
pop
lods
mov
ja
inc
daa
imul
sub
push
mov
jns
mov
and
cmp
ja
in
push
testb
aad
xchg
mov
sbb
sub
mov
test
push
fs
mov
aam
mov
xchg
insl
inc
bound
cmpsl
loope
fdivrs
jns
mov
shl
fucomp
cwtl
aaa
popf
mov
divb
dec
daa
mul
fstp
xchg
xor
push
mov
add
rorl
je
push
push
popa
push
xchg
add
jp
jmp
je
cmp
loopne
jmp
cli
lea
sbb
and
insb
fidivs
xchg
jecxz
or
push
call
std
aad
pop
sbb
sbb
imul
fwait
or
xor
mov
sub
jae
pop
in
shlb
lock
push
je
stc
inc
js
xor
pusha
int3
mov
stc
add
sbb
orl
cmp
out
adc
xchg
stos
and
xor
daa
das
movsb
in
mov
or
std
or
shrb
ret
test
lock
mov
mov
mov
test
push
cltd
or
das
xchg
pop
nop
daa
jne
adc
or
cld
ljmp
rorb
insl
jne
add
dec
lock
stc
stos
nop
gs
push
outsb
rorb
scas
out
jmp
insl
pusha
loopne
stos
sub
jns
push
push
dec
mov
loopne
sbb
cmp
push
xor
adc
inc
pop
adc
and
divb
clc
shlb
jge
out
push
test
shll
pop
inc
lods
cmp
int
jne
sbb
stos
sbb
xchg
mov
adc
lds
fildll
pop
out
int3
in
xlat
aas
jl
and
mov
mov
adc
adc
xlat
out
add
inc
repz
sbb
xchg
rep
mov
out
stc
sbb
dec
stos
lods
inc
mov
pushf
jae
insb
push
gs
fnstsw
shl
lahf
ss
sbb
add
addl
scas
ljmp
in
dec
jmp
outsl
pop
fldt
pop
imul
mov
jl
fbstp
stos
jp
fdivrl
mov
inc
push
and
pop
fistpll
pop
addr16
pop
int3
sub
mov
pop
adc
cmc
and
mov
ret
push
into
and
sbb
mov
mov
pop
lahf
movsb
push
imul
loope
jg
ja
gs
ficoms
adc
scas
rsqrtps
mov
scas
ret
das
mov
je
sahf
enter
pop
dec
push
sub
cmp
mov
in
mov
mov
jg
jl
jge
push
push
scas
jge
nop
xor
idivl
sti
test
and
xchg
pushf
jle
imul
ror
addr16
pop
mov
ret
jne
arpl
push
out
and
and
test
adc
mov
and
and
dec
pop
push
or
jmp
xchg
ret
lahf
cmc
or
jns
mov
cmc
fcoml
lea
pop
repz
fsubr
out
popa
mov
pop
iret
ret
lret
mov
lods
mov
or
movsl
movsb
popa
and
flds
push
cmp
push
cmp
adc
inc
cwtl
xor
in
in
jge
add
icebp
push
xchg
xor
rcrb
fcomi
in
pop
sub
push
pushf
push
add
and
outsb
lret
scas
jge
mov
jns
dec
or
incb
popa
insb
sub
popa
jno
mov
inc
sbb
cwtl
in
xor
mov
push
pop
xchg
xchg
jb
sbb
in
mov
in
mov
subb
push
push
in
sub
lahf
into
lock
cmp
sbb
pop
dec
jmp
xor
sbb
jne
test
sub
cmp
fwait
and
pop
js
inc
push
lods
push
out
pushf
mov
mov
jbe
pushf
mov
push
rolb
outsl
daa
add
lret
cli
outsb
divl
push
inc
add
jb
cmpsl
pop
push
ret
lea
in
out
ffreep
mov
out
insl
movsb
hlt
xor
add
addr16
mov
push
inc
rolb
addr16
dec
jbe
add
adc
jle
add
push
mov
xor
jmp
and
out
outsb
xor
add
das
les
sbb
jnp
out
jp
test
shrl
sti
je
gs
add
pop
push
cmp
push
lret
mov
cltd
mov
aam
outsb
aad
mov
fsubs
int
mov
pop
xchg
push
imul
push
push
jnp
cmc
pop
aaa
pop
dec
test
mov
lock
nop
push
mov
mov
aaa
push
adc
cmp
add
mov
sub
cmpl
jmp
imul
dec
jp
adc
add
sub
imul
mov
aad
ljmp
mov
add
sbbl
data16
mov
in
lret
mov
ss
or
pop
adc
fcmovnbe
test
jl
dec
mov
aas
aad
sarb
fwait
xor
xchg
es
and
add
ror
movsl
and
sbb
mov
test
add
xchg
inc
test
sbb
loope
loopne
fcmovu
jp
sub
dec
cmc
int3
sbb
jo
sub
jnp
movsb
inc
sbb
inc
jo
cmc
xchg
cmp
xor
fcmovne
add
sub
fidivs
xchg
push
icebp
aas
sbb
filds
lods
pop
iret
les
cs
les
mov
xchg
add
mov
or
aas
xchg
pop
in
adc
push
test
movsl
ror
or
iret
pusha
xorl
hlt
imul
or
lahf
jmp
and
popl
jl
jle
out
mov
and
inc
xchg
cwtl
and
lret
mov
aaa
mul
mov
push
mov
fistpl
push
xor
and
xchg
push
dec
xorl
test
xlat
cmpsb
hlt
test
sub
enter
xor
push
mov
int
xchg
push
je
rorb
je
add
sbbl
dec
xchg
cwtl
lret
cmp
enter
mov
lea
xchg
dec
xor
or
push
inc
sti
iret
out
es
mov
or
das
and
xchg
inc
ljmp
sub
xchg
cmpsl
lret
dec
and
mov
popf
enter
or
jae
inc
jne
in
jp
lret
mov
jl
dec
jnp
adc
pop
mov
mov
adc
nop
mov
call
sub
jle
arpl
jo
cmp
xor
push
hlt
stos
mov
scas
push
dec
dec
std
adc
xchg
movsb
add
mov
or
movsb
test
lcall
push
inc
lods
pop
pop
fimuls
inc
push
dec
pop
cmp
por
repnz
pop
inc
jbe
in
insb
aam
nop
das
stc
cmp
lcall
sbb
mov
fwait
dec
daa
sbb
or
repz
mov
mov
sub
sub
push
jmp
and
sbb
mov
push
ja
jp
pop
enter
arpl
jae
push
stos
jmp
jbe
call
jnp
add
out
test
lods
and
xor
daa
push
push
fs
loopne
cmpsb
rcrb
cmp
sti
pop
daa
cmp
rcll
cwtl
pop
pop
js
int
xchg
fdivl
push
sub
xor
arpl
scas
clc
repnz
xchg
hlt
dec
es
mov
scas
cmpsb
cmp
pop
rcl
aam
pop
adc
push
jge
xchg
inc
lret
call
lea
jg
dec
andb
inc
les
sbb
ljmp
mov
inc
mov
push
adcb
cs
fmull
add
or
es
sub
adc
movsb
mov
and
rorl
jge
push
xor
inc
insb
sub
ror
fdiv
sbb
aad
and
mov
mov
loope
mov
lods
pop
jle
scas
jno
inc
sub
out
jnp
dec
pop
xchg
loop
lock
lcall
repz
mov
mov
sub
in
inc
mov
and
pop
lret
push
sbb
xor
clc
xor
xor
xchg
sbb
scas
gs
scas
outsl
mov
shl
dec
xchg
aas
call
int3
out
in
jne
pusha
clc
adc
push
outsb
push
inc
cmp
scas
stos
lahf
ljmp
add
xchg
aaa
lods
pop
lock
push
sbb
lods
jno
das
imul
aad
lcall
data16
in
push
stos
mov
xor
or
int3
add
repnz
cmp
loopne
inc
insb
nop
pop
fmuls
nop
imul
aaa
cmp
adc
shrl
adc
jnp
mov
xor
movsl
mov
incl
lds
jbe
sbb
add
inc
in
mov
xor
cwtl
jle
xlat
les
xlat
mov
cld
fstpl
or
cmp
cmp
push
push
cmp
pop
mov
mov
mov
mov
loopne
lea
push
jno
cld
leave
decl
xchg
pop
inc
in
je
setns
or
clc
mov
mov
pusha
push
das
test
sub
popf
test
mov
cmc
inc
int
xchg
insb
inc
orl
inc
js
jg
lcall
xlat
ret
in
cmp
sbb
pop
xor
or
repnz
aas
sub
pop
roll
mov
movsl
test
inc
mov
stos
jge
lret
ljmp
push
adc
mov
jge
insb
and
mov
jne
xchg
int3
adc
xchg
pop
inc
ds
scas
popf
aas
dec
jmp
aaa
arpl
jp
push
lret
andl
out
in
mov
mov
mov
icebp
sbb
adc
int3
xor
imul
and
cmp
push
mov
cmp
out
lahf
sub
xor
cmp
xor
rdmsr
push
mov
popf
and
test
adc
ja
dec
jo
cwtl
std
and
or
dec
push
push
lret
xor
loop
push
pop
cmpsb
ret
std
or
ret
pusha
cmpb
jne
mov
ja
out
scas
or
sub
push
adc
cmpsb
push
es
icebp
cmpl
fcomip
punpcklbw
jne
fcompl
addr16
in
sbb
lods
adc
mov
in
or
fcomi
adc
in
pop
subl
fistpl
fwait
inc
mov
pop
mov
xchg
loope
xor
movb
push
outsl
xlat
cmp
jmp
addr16
push
into
push
sti
andl
dec
sbb
sbb
jecxz
mov
es
push
out
xchg
pop
pop
fcom
loop
inc
mov
aam
and
cs
lock
mov
sbb
push
jmp
lea
sub
bswap
adc
adc
sbb
js
sti
adc
jmp
sub
int
push
test
push
ss
movb
sti
or
mov
idiv
or
xor
pop
or
mov
adc
and
mov
push
into
sbb
insb
mov
sub
scas
xor
outsb
dec
ja
push
out
cmp
add
test
icebp
push
cmp
imul
sar
xchg
in
cmc
pusha
rcl
sbb
push
ja
movsb
push
scas
xchg
shr
adc
sbb
sarl
pop
jmp
mov
push
and
inc
enter
or
outsb
jmp
inc
bound
inc
xor
lcall
lds
clc
dec
repnz
negb
pop
or
and
mov
cmp
mull
sahf
cmp
scas
pop
or
push
cmp
xor
pop
icebp
stos
test
aam
mov
sahf
dec
dec
leave
and
mov
pop
fs
ret
je
movsl
xchg
pop
adc
cmp
das
sti
adc
ljmp
and
push
hlt
mov
inc
sub
rcr
sbb
dec
jbe
mov
adc
cmp
adc
ja
mov
sbb
test
dec
mov
cltd
mov
xchg
aad
xor
dec
dec
cmp
xchg
mov
push
out
or
cmp
adc
cmp
movsl
addl
dec
inc
out
stc
bound
sarb
mov
mov
jns
inc
jb
mov
push
ss
std
xor
mov
or
test
push
sbb
test
cmp
int
out
jl
pop
jmp
in
mov
aas
fildll
pop
fabs
jle
mov
cmpsl
and
jmp
xchg
sub
test
mov
fldt
pop
push
and
outsb
jbe
add
cmp
insb
repnz
pop
add
or
mov
jnp
jmp
push
jno
sbb
mov
int
daa
mov
aam
pop
sub
cmp
test
in
jl
call
lcall
jp
mov
or
sub
dec
imulb
xchg
jp
aas
xchg
push
cmpsb
outsb
incl
insl
sbb
into
nop
lock
cmp
sub
or
mul
push
jnp
sbb
adc
ljmp
jns
lahf
xlat
outsl
jne
add
lea
in
sarb
push
sbb
cmp
psrad
jnp
fsubrs
aad
xlat
out
xor
inc
popa
pop
iret
stos
out
aad
dec
loope
cmpsb
pop
daa
in
or
push
in
mov
add
addl
std
into
or
add
fs
xchg
fmuls
push
ror
outsl
es
outsb
fstpl
add
dec
pusha
mov
sub
in
test
sbb
jbe
lds
jp
orl
adc
cld
les
mov
cmpsb
pop
push
add
cmp
int3
rcrb
mov
push
repnz
ds
mov
xchg
pop
cmp
add
push
test
jnp
and
enter
leave
adc
bnd
pop
icebp
out
add
push
mov
inc
lds
mov
aam
out
or
bound
cmovl
test
bound
or
test
add
add
add
mov
push
adc
mov
mov
pop
sbb
leave
mov
es
cmp
or
dec
in
mov
loope
push
xchg
dec
inc
pop
dec
mov
popa
and
add
pop
push
mov
vrsqrtss
mov
loopne
lcall
iret
loop
add
ret
in
mov
lods
push
adc
pop
pop
sub
pushf
mov
mov
stc
jno
xchg
cmp
jmp
lea
pop
stos
and
pop
inc
std
idivl
mov
lret
jno
xchg
out
lock
je
adc
sahf
cmpb
adc
jecxz
xchg
das
rclb
call
adc
pop
scas
dec
or
dec
jno
pop
sti
std
inc
jmp
cld
pop
cmc
gs
test
ss
aas
mov
inc
sbb
shll
cmp
inc
dec
std
mov
and
sbb
sub
cmp
mov
jnp
fdivrl
cmp
cs
lods
movsb
jmp
js
xor
pop
xor
arpl
jnp
sub
cmpsb
add
sbb
cli
mov
sbb
adc
dec
les
xchg
pop
movsl
stos
mov
pop
dec
inc
std
nop
or
and
out
sub
xor
adc
filds
sub
cmp
jo
mov
jl
push
adc
ret
test
push
cltd
enter
add
jge
xor
push
push
sub
test
adc
les
push
outsb
push
adc
adc
dec
popf
or
xor
pop
jae
movsb
ret
mov
mov
adc
or
mov
aad
insl
mov
dec
jge
mov
xor
js
cmpsl
and
mov
scas
mov
ficoms
and
in
das
test
xchg
and
dec
int
push
test
mov
dec
sbb
xor
or
fs
rcrl
pop
mov
cmp
movsl
push
pop
pop
sub
rcl
loop
mov
xlat
shl
and
sbb
aaa
jl
sbb
mov
adc
sub
dec
daa
jle
call
push
xchg
loop
aas
mov
inc
into
dec
stc
popa
dec
ret
int3
fmulp
jb
imul
push
movsb
mov
jle
int3
outsl
imul
sti
out
stc
addr16
cmp
sub
jg
outsl
add
aam
add
addr16
lock
add
out
mov
mov
jecxz
es
push
dec
push
jg
adc
add
inc
adc
pop
sbb
out
push
xor
aaa
and
mov
xor
push
dec
or
mov
orl
xchg
lea
in
pushf
cmp
xchg
cmp
mov
mov
jo
adc
push
data16
cmp
ret
pop
insb
fisubrl
push
es
xor
xchg
pop
lret
cmp
jo
movb
fucomip
call
sbb
inc
mov
mov
pop
sbb
jg
stos
jo
imul
cld
dec
cltd
rolb
add
dec
adc
gs
add
mov
shlb
dec
lods
inc
mov
sbb
lcall
xor
test
mov
adc
mov
sub
loope
adc
jno
sub
sbb
cmp
int
jae
pop
daa
xor
aad
int
aam
push
jmp
mov
and
mov
out
and
xchg
inc
mov
adc
repz
inc
neg
adc
cld
or
or
lods
scas
aas
mov
lock
fs
jg
lcall
imul
pop
mov
rcrb
in
xor
xchg
ljmp
iret
scas
xor
stos
pop
repnz
xchg
int
jmp
push
sub
pop
lret
loop
inc
sub
cld
sub
int
and
lods
push
cli
sub
addr16
stos
rcrb
outsl
aad
dec
ljmp
insb
or
sti
sub
xchg
test
scas
call
xchg
pushf
test
fstl
xchg
mov
pop
out
je
outsb
ss
dec
or
cmp
incl
popf
add
jmp
push
or
out
addr16
cmpsb
cmp
stos
jbe
push
ja
pop
inc
data16
or
jmp
daa
push
sti
lret
sbb
or
cmp
sbb
in
aad
dec
ret
mov
push
imul
mov
push
dec
insl
vunpcklps
fsubl
aaa
aam
fsubs
je
popf
icebp
mov
adc
push
lods
gs
mov
movsl
cmp
call
jbe
xor
mov
mov
movsl
fdivr
mov
lret
jbe,pt
gs
inc
aaa
pop
sub
jp
testl
xchg
clc
pop
les
fldl
out
mov
rcl
int
popa
repnz
in
fcompl
xchg
pop
pop
imul
xchg
and
popf
mov
jle
mov
lods
stc
loop
push
test
push
out
movsl
pushf
inc
insb
xor
popa
push
test
pminsw
mov
adc
cmpsl
cli
xchg
aam
aam
test
jno
push
or
mov
outsl
mov
pandn
xchg
lds
adc
jecxz
jno
fldcw
imul
lcall
push
sub
icebp
lods
xor
mov
mov
mov
repz
mov
daa
dec
mov
pop
pop
das
pop
xor
jmp
xchg
dec
jecxz
mov
xchg
ret
lcall
imul
stos
stos
ret
and
popf
or
imul
push
sbb
in
mov
js
pop
adc
minps
push
jl
stc
fs
aas
imul
jl
repz
jle
sub
dec
lds
cmp
jbe
xor
adc
push
xchg
push
enter
movsl
adc
add
or
popf
das
jmp
sbb
inc
push
andb
int
xchg
push
rolb
add
arpl
add
gs
jb
sub
jnp
cmpsb
nop
mov
fimull
jg
adc
je
aas
sbb
ficompl
sbb
daa
aas
imul
addr16
popl
push
das
jmp
mov
sbb
popa
out
sbb
mov
add
jo
fadd
ret
rcrl
mov
ret
cs
sbb
inc
pop
aad
repnz
push
add
dec
rclb
inc
outsb
dec
cmc
mov
aas
cmpsb
lret
addr16
repz
cli
lcall
xchg
and
xchg
insb
lds
jp
push
iret
das
insl
adc
std
out
push
cmp
lret
jno
incl
cltd
lret
mov
push
adc
pop
pushf
lock
jnp
xor
les
jmp
add
data16
and
nop
mov
xor
in
pop
mov
std
clc
add
jge
adc
inc
fimull
mov
repnz
mov
cmpsl
out
decb
dec
test
mov
cmp
jns
sub
and
push
jmp
pop
pop
sarl
push
push
push
divb
aaa
pop
or
test
xchg
jmp
cwtl
dec
sti
push
mov
push
add
fisubrl
rcll
loope
cs
int
inc
inc
addr16
dec
push
xchg
or
and
gs
icebp
adc
push
imull
add
sbb
and
mov
pop
add
push
into
cmp
lea
in
outsb
stc
xchg
stos
mov
lods
jo
or
pop
data16
xor
xchg
xor
jbe
out
inc
std
inc
sbb
jae
mov
cmp
mov
movsb
mov
repz
pop
rcrb
xchg
imul
xchg
jae
xor
out
not
fwait
cmp
cld
sbb
lea
fbld
xchg
xchg
das
ret
or
cmp
test
or
jo
scas
insl
sub
xor
sub
out
xor
shll
inc
or
push
cmpsl
lods
cmp
pusha
mov
xor
shrb
mov
mov
rep
jo
jle
or
dec
ret
movsl
inc
cmpsl
lods
jae
xlat
and
aaa
add
xlat
aas
idiv
icebp
add
out
pop
pop
out
lret
push
adc
movsl
int
add
and
and
sbb
pop
lea
aaa
js
shr
pop
andb
popa
dec
scas
mov
and
fadds
pop
int3
xchg
jle
jae
xor
add
adc
xchg
icebp
insb
fldcw
repnz
lcall
mov
aad
inc
push
cmp
loope
leave
cmpsb
stos
ljmp
sub
adc
xor
sahf
rcll
mov
ret
mov
int
imul
daa
jge
push
outsb
mov
sub
fiadds
push
mov
add
inc
xchg
pop
lods
shll
das
jecxz
cld
dec
add
mov
popa
xchg
jge
mov
inc
xor
shll
mov
jne
adc
jnp
add
push
in
in
clc
xchg
dec
hlt
mov
js
jne
test
fimuls
sub
aas
data16
ss
push
int3
pop
fldenv
and
arpl
pop
sub
xor
adcl
jne
mov
call
rolb
sub
and
shl
cli
push
fs
icebp
imul
sti
in
lahf
aad
es
rolb
mov
ljmp
dec
aas
xchg
xchg
push
add
cmpsb
cltd
pop
mov
aad
icebp
and
xor
ja
mov
inc
cmp
pop
add
jmp
mov
push
lcall
aas
push
cmp
add
sub
push
cs
xchg
cmp
pop
lods
outsl
ret
xor
and
push
add
out
adc
xchg
clc
frstor
pop
pop
aas
mov
mov
xor
mov
sub
pop
push
mov
and
flds
sub
mov
mov
adc
sti
negl
and
and
xchg
push
push
popa
js
movnti
negb
adc
out
xchg
xchg
sub
movsb
orb
ja
pop
lcall
cmp
fmuls
clc
out
push
cli
enter
or
clc
fmuls
pop
cmpsb
ds
idiv
out
ret
add
andl
or
rolb
or
lret
testl
ds
bound
and
mov
int
and
push
pop
jp
push
mov
stos
lcall
mov
shl
jp
dec
shll
xor
cli
xlat
push
cmc
xor
outsl
int
ss
jp
pop
iret
mov
xlat
xchg
or
fstps
imul
fsubl
inc
xor
mov
jo
sbb
cltd
ljmp
inc
pop
cmp
inc
daa
paddq
cmpsl
lahf
imul
xor
sub
enter
out
sbb
pop
mov
xor
sub
mov
push
repnz
or
push
cmp
aam
fdivr
bnd
rorl
inc
mov
jecxz
dec
push
push
insl
mov
sub
pop
stc
and
mov
arpl
fdivs
adc
shrb
imul
lret
or
shlb
mov
dec
pop
mov
push
jp
add
sbb
fnstsw
xor
cld
mov
inc
mov
fldcw
out
decb
cli
repz
pop
clc
or
mov
inc
cwtl
ret
or
mov
outsb
jge
mov
dec
cs
int3
loop
push
movsb
cmp
ret
or
fdiv
test
mov
xor
lock
test
ds
jno
imul
out
fldcw
push
out
sub
xor
sbb
jb
pop
ja
je
lcall
out
test
mov
insl
rcrl
clc
xchg
push
shll
enter
das
xchg
popa
lods
xchg
cwtl
aaa
test
sbb
xor
shlb
push
push
mov
sbb
mov
daa
fdivrs
ds
ret
daa
dec
movl
and
mov
mov
movsl
fwait
inc
mov
popf
stos
jne
mov
pop
mov
fists
fmuls
xchg
adc
jb
xor
setle
jo
jnp
push
xchg
sub
loope
test
cmpsl
addr16
pop
inc
push
popa
aad
sbb
dec
sbb
dec
jecxz
rorb
into
mov
pop
in
fs
fs
mov
pop
push
insb
insl
aas
adc
shrl
daa
outsl
fnsave
xchg
cmp
sub
mov
jecxz
xlat
pushf
out
pop
pop
bound
sbb
xor
lret
mull
lcall
mov
xchg
dec
imul
inc
sub
jno
lea
insb
push
fldt
inc
icebp
pushf
and
mov
or
js
nop
rcrl
nop
imul
push
rol
sbb
fsub
inc
mov
dec
aad
push
push
fstpt
cmp
sbb
lcall
movsb
gs
punpckhdq
cmp
push
ret
daa
scas
mov
xchg
mov
movsl
call
jmp
xchg
sbb
mov
cli
xchg
pop
enter
jo
push
sahf
xchg
scas
push
arpl
ret
adc
stc
aad
je
shl
cmp
bndcu
jne
clc
jmp
lea
mov
dec
pop
cmpsb
mov
or
outsl
add
pop
fbstp
xlat
adc
leave
sahf
fisubrl
jb
ror
push
xchg
out
stc
and
stos
mov
ja
int3
mov
lahf
mov
mov
cld
lret
mov
cmp
jnp
jb
fs
inc
movsb
orl
mov
mov
sbb
sarl
fdivp
mov
sub
mov
imul
inc
pop
rcrl
je
out
test
jle
hlt
mov
sub
lea
mov
das
or
out
lret
push
pop
ret
add
or
add
push
mov
lock
inc
lods
out
xor
push
into
shlb
icebp
adc
flds
push
testb
shr
je
dec
pop
cmc
cmpsb
push
xchg
sub
inc
cmp
push
loope
es
fld
fisubs
lea
push
lods
aas
mov
shll
popf
rorl
mov
les
js
fldt
jnp
jbe
xchg
mov
adc
shrb
mov
lcall
ss
gs
cmpsb
lahf
out
mov
mov
jae
xor
adc
xchg
ret
adcl
popa
out
jecxz
and
and
subb
cmp
fsubrp
sahf
pop
ds
sbb
inc
movsb
pop
jecxz
fsubr
repnz
xor
cmp
sbb
iret
out
das
imull
jg
mov
jge
adc
dec
xor
pop
add
xor
xor
mov
inc
ljmp
rol
adcl
insb
sub
hlt
pop
pop
jmp
repnz
stos
jb
jb
mov
shrb
mov
jl
movsl
stos
pop
lock
cmpsb
shrl
stos
arpl
mov
shr
push
outsl
cwtl
xchg
lock
pop
jge
test
addl
cmp
adc
fstpl
mov
pop
stc
push
loope
ret
outsl
and
add
repz
loopne
mov
pop
lret
push
pop
add
mov
js
mov
in
popa
push
scas
cmp
roll
bndldx
fnstcw
cmpsl
outsb
int
imul
std
cmp
or
add
mov
push
ficompl
adc
inc
es
xchg
fnstsw
addr16
call
push
lcall
add
fwait
dec
inc
ja
ss
adcb
jae
jns
xor
jmp
insl
sub
add
out
xor
out
mov
ds
orb
dec
fisttpl
popf
sbb
xchg
inc
aaa
push
cltd
in
fsts
jge
sahf
sub
pop
sti
adc
jmp
jb
shl
add
nop
fdiv
adcb
frstor
pop
xchg
lods
adc
jl
dec
int3
jle
inc
rol
iret
pushf
out
pop
jo
add
ud1
imul
add
repnz
push
clc
cmp
adc
mov
jecxz
aaa
adc
imul
adc
push
jl
roll
ret
loope
insl
dec
and
call
in
js
in
push
imul
dec
jbe
insb
scas
jno
negl
mov
add
inc
push
sahf
lret
mov
push
inc
ret
scas
lods
pop
out
enter
push
enter
inc
push
mov
dec
dec
jno
pop
jno
rclb
or
daa
aaa
push
jle,pn
je
test
into
xchg
push
out
mov
add
sbb
stos
xor
shrl
sub
push
mov
pop
shrl
mov
pop
adc
and
xchg
enter
clc
mov
cs
daa
xchg
push
push
clc
ret
repnz
xor
sub
aaa
nop
iret
xchg
lcall
shlb
je
or
out
adc
or
mov
in
orl
cmc
adc
push
mov
test
adc
into
push
push
mov
mov
je
pop
pop
les
mov
cmp
movsl
cmp
cmp
lahf
mov
mov
int3
movsb
jge
sbb
scas
test
cld
xor
dec
adc
out
notl
fsubl
inc
jb
adc
stos
cli
je
xor
popa
addr16
iret
and
cmp
fcoml
dec
add
pop
scas
into
pop
jp
clc
cli
mov
rcrl
sbb
sub
inc
cmc
xchg
mov
jne
aam
mov
push
and
or
adc
insl
add
xor
add
or
imul
scas
test
shll
xchg
sbb
dec
decb
sbb
sar
ret
test
pop
ljmp
and
inc
mov
pusha
sub
and
fistps
lock
sub
xor
adc
scas
repz
outsb
sbb
push
xchg
test
jae
loopne
pusha
imul
xchg
push
lret
addl
or
or
stos
sarb
xor
xchg
aaa
mov
jmp
mov
xchg
outsb
lret
rcrl
lods
cmpsl
fcomp
fimuls
and
shl
js
add
dec
dec
into
push
xor
mov
mov
rclb
mov
loop
in
ret
rolb
popa
or
inc
mov
shr
sbb
sub
fwait
in
inc
mov
mov
fidivrl
xchg
and
add
imul
fstl
flds
sub
test
ret
mov
and
test
mov
setle
rcr
and
sub
xor
or
es
popa
mov
xchg
dec
test
xor
cmp
jmp
xchg
xor
sub
xor
loopne
pushf
or
lea
les
cmp
or
rclb
mov
adc
lcall
popa
cmp
popf
fisttps
push
cwtl
mov
dec
pop
andl
leave
or
mov
stos
in
mov
lea
jle
or
inc
aam
xchg
aaa
mov
cld
aam
dec
jp
inc
in
add
dec
or
mov
mov
test
xchg
call
cs
jae
pop
pop
jae
popf
mov
or
popf
loop
dec
xchg
mov
and
lcall
lds
jg
sahf
push
xor
cli
rolb
jmp
mov
sbb
pop
cld
insl
je,pt
iret
repnz
insl
cmp
outsb
fdiv
sub
mov
ja
xchg
xchg
in
adc
fcomi
xor
xchg
sbb
pop
dec
jne
cltd
xor
lret
sub
andl
xchg
mov
mov
add
or
add
xlat
push
sti
sbb
dec
sbb
xlat
popf
mov
mov
xchg
mov
xchg
cmp
mov
dec
jno
lahf
cmp
ja
xchg
push
test
push
in
das
sbb
mov
jno
pop
daa
cmpsl
or
xor
xchg
jb
adc
sub
mov
push
lds
inc
es
insb
xchg
fidivrl
adcb
pop
sub
insb
mov
sbb
jp
push
pop
xor
sarl
ds
push
es
call
aas
mov
orl
ja
mov
test
ret
popa
add
adc
pop
movsl
adcl
adc
movsb
mov
ja
hlt
dec
sub
out
push
sbb
push
add
movsl
push
subl
shrl
push
xlat
cmp
xlat
popf
jmp
hlt
dec
or
rcl
mov
in
aaa
push
sub
and
test
mov
movsl
loope
sbb
xchg
push
pop
outsb
fstpl
cmp
xchg
or
jl
adc
notl
inc
push
mov
push
xchg
stos
xchg
out
lret
xchg
inc
and
fs
mov
sbb
xchg
cmp
jns
inc
out
mov
cli
jp,pn
popf
cmpsl
lock
fwait
je
stos
sti
push
or
in
popf
push
lods
mov
fwait
rcrb
seto
mov
sti
bound
fmul
fcompl
sarb
xchg
jno
aad
mov
jecxz
arpl
sub
mov
add
rcl
fcomip
mov
lret
dec
lcall
bound
push
push
mov
cs
and
scas
push
mov
jge
movsb
xchg
push
dec
xor
stc
inc
and
rep
ret
fwait
xchg
pop
add
outsb
lcall
dec
aad
mov
sbb
mov
and
mov
aas
push
iret
jecxz
rcrb
mov
dec
movsb
add
xchg
call
push
outsb
cmp
testl
loopne
arpl
cmp
daa
popf
or
mov
mov
fnstsw
in
add
xor
jne
test
dec
aad
daa
leave
test
aaa
aad
add
lret
in
or
lret
fmull
es
adc
lds
rclb
xlat
loopne
jle
jg
cmp
jg
mov
dec
call
pop
scas
shl
push
jp
mov
stos
mov
pushf
dec
jb
pushf
dec
loop
lea
push
xor
std
bound
xchg
and
add
hlt
dec
sub
sub
fisubl
movl
in
mov
push
pop
fnstcw
mov
test
negb
inc
mov
mov
adc
mov
push
jnp
scas
push
jns
push
push
dec
incb
shlb
sarb
in
leave
push
jecxz
fstpl
or
repz
and
xchg
xchg
or
pop
jg
pop
std
loope
xchg
pop
mov
stc
test
and
ret
cs
xchg
ds
mov
mov
imull
jmp
je
and
loop
xchg
mov
test
ret
sub
mov
imul
pop
inc
mov
leave
or
mov
int
loope
pop
fadds
loop
push
mov
lock
ret
jmp
xchg
mov
les
add
xor
icebp
rorl
pop
jbe
fisttpl
idiv
push
and
dec
lds
push
adc
or
stc
jnp
dec
push
scas
dec
xchg
mov
xor
fsubrs
pop
in
arpl
xchg
rolb
idivl
arpl
rcll
cld
xor
out
sub
out
stos
mov
sub
filds
pop
inc
loop
loopne
gs
add
sbb
adc
ret
repz
and
out
fstps
shlb
and
lcall
mov
into
lcall
xor
movsl
leave
or
pop
cmp
add
jno
adc
scas
into
push
sbb
gs
sbb
stos
cmp
rolb
imul
imul
lcall
mov
sub
pop
inc
adc
mov
mov
and
sbb
mov
into
mov
js
push
push
dec
popa
cmpsl
out
pop
fdivp
mov
cli
cmpsb
or
in
stos
push
xchg
fisubs
push
dec
pop
dec
inc
inc
movsb
jo
xchg
jbe
mov
test
std
add
sbb
push
pop
sbb
out
ja
into
testl
clc
sub
into
dec
sbb
dec
stos
sbb
ficomps
movsl
insb
xor
out
aad
mov
jno
mov
push
or
mov
sbb
cli
shr
cmp
ja
mov
pop
jbe
mov
sti
dec
lds
out
pop
daa
aad
sub
add
pop
push
icebp
ljmp
push
sbb
xchg
xchg
ficompl
mov
daa
femms
jecxz
scas
dec
ret
js
ja
cmpsb
lods
xchg
jns
aad
mov
roll
sbb
inc
cmp
fscale
outsb
leave
dec
mov
adc
sbb
bound
cmpl
imul
ds
and
sbb
daa
add
loop
mov
sbb
mov
in
jbe
std
mov
loopne
test
adcl
lret
jecxz
mov
jo
mov
or
out
pusha
jns
mov
es
sbb
mov
sub
mov
test
ja
cmp
push
jp
or
dec
or
push
jns
nop
inc
cmp
jl
jns
ds
sub
mov
inc
jno
cld
ficompl
mov
jmp
cwtl
add
inc
out
jnp
sub
push
cmp
jno
sbb
add
xchg
cltd
jp
mov
daa
mov
cmpsl
push
mov
xchg
cmp
sub
cli
add
push
jl
hlt
push
pop
push
pop
fcoml
lock
jae
hlt
inc
mov
push
fcoml
outsb
lret
mov
cmpb
dec
pushf
cld
sub
mov
aas
insb
lret
mov
bound
lret
out
adc
add
lcall
adc
cli
cli
push
sub
jg
lods
pop
icebp
loope
outsl
mov
and
test
test
movsb
mov
sbbb
gs
cmp
outsb
ljmp
push
insb
stos
sbb
adc
pop
scas
shl
sub
sti
jge
inc
mov
jo
shlb
aad
rolb
stos
mov
aas
lds
mov
and
gs
fisubl
std
inc
push
in
cmp
or
in
icebp
ficomps
popf
fs
jp
cld
insb
xchg
mov
xor
mov
daa
test
inc
loope
clc
and
push
mov
sti
sub
je
fs
fistps
push
adc
mull
imul
mov
daa
in
add
in
jns
clc
jae
scas
push
mov
xor
sbb
jns
add
dec
push
outsl
cmp
jnp
adc
out
repnz
arpl
or
adc
cltd
fsubrl
lcall
xor
mov
nop
dec
inc
fstpt
sub
movsl
and
sub
les
dec
adc
cmp
rclb
js
lds
pop
sbb
xor
pusha
push
ret
rcll
or
inc
pop
insl
mov
addb
leave
lret
decl
xchg
inc
or
or
mov
push
jnp
push
mov
push
add
or
push
push
lods
insl
in
outsb
je
dec
pop
ficoml
xor
xor
test
in
mov
inc
xchg
cmp
inc
inc
xchg
jmp
sbb
inc
fwait
jno
imul
add
lret
xlat
incl
test
pop
hlt
sbb
mov
call
jae
ljmp
leave
adc
sti
loop
xchg
mov
xor
lcall
inc
jl
jb
shrl
xchg
insb
into
or
jecxz
and
xor
xor
mov
hlt
popl
and
or
pop
mov
popf
mov
cmpsb
mov
out
pop
mov
arpl
or
test
xor
orl
inc
mov
lret
jne
cli
mov
add
test
mov
xchg
jne,pn
sti
in
mov
xor
enter
divb
dec
lock
ret
popa
jp
pop
push
dec
dec
mov
mov
out
repnz
jg
and
mov
cmpsl
sub
mov
xchg
adc
jb
aad
mov
pop
sbb
xor
movsl
or
mov
sub
xchg
dec
fs
iret
popa
ja
subb
add
dec
cwtl
jnp
mov
jle
adc
loope
mov
lods
xchg
jle
adc
dec
es
lret
gs
push
rcrl
jl
fs
cmc
push
imul
pop
test
jb
test
jg
movsb
xchg
mov
lock
cmp
xlat
dec
pop
add
in
es
lods
enter
xchg
xor
pop
inc
pop
cmpl
scas
sar
xchg
sti
or
shrb
das
in
orb
xchg
xchg
nop
imul
cmp
imul
jg
movsb
add
cmc
and
mov
fbld
pop
mov
xacquire
or
xchg
jne
gs
in
test
int3
daa
mov
push
jb
xchg
add
adc
jnp
rcr
mov
repnz
mov
shll
in
jmp
daa
into
xor
jo
enter
out
adc
fnstsw
js,pn
add
daa
and
call
inc
adc
dec
mov
leave
stos
push
jne
xor
pushf
inc
fcmovb
adc
insl
mov
sub
or
in
mov
aas
cs
stos
mov
mov
and
push
xchg
dec
mov
insl
icebp
js
test
dec
or
add
mov
sbb
pop
test
cmpsb
divl
dec
sbb
jg
cmpsl
inc
or
jo
pop
fwait
cmp
xchg
movb
mov
out
dec
insb
jnp
out
addl
inc
stos
popa
jno
adcb
fistps
cmp
cmp
dec
nop
sbb
mov
ficoms
das
sub
nop
insl
movzwl
sub
fisubrs
push
pop
adc
sub
inc
je
leave
mov
inc
movsb
mov
pop
or
insl
pop
mov
or
mov
mov
scas
jnp
call
gs
sti
es
rcl
fsts
pop
sahf
mov
popf
fimuls
sub
sub
stos
dec
mov
pushf
pop
cld
add
call
leave
test
sbb
jns
inc
nop
mov
xor
std
movsl
jno
adc
enter
and
je
pmulhuw
xor
pop
cmp
mov
mov
pusha
sbbl
xor
jbe
ds
inc
and
and
outsl
in
sbb
fbld
xchg
and
push
mov
lds
mov
xchg
ljmp
sbb
leave
and
lahf
fcoml
sub
ja
push
mov
push
push
push
mov
mov
rorl
insb
inc
iret
shll
pop
les
loopne
jl
js
inc
mov
jg
adc
clc
xchg
popl
lods
cwtl
or
fucompp
sub
cmp
roll
shrb
ror
in
push
out
adc
mov
pop
in
sub
inc
jnp
ja
faddp
jp
call
sub
adc
std
pop
lret
clc
mov
inc
add
stos
hlt
lret
xchg
sub
pop
les
pusha
push
sub
pop
jbe
sub
and
and
inc
xor
addr16
and
mov
cmp
in
xor
cmp
ss
mov
in
and
inc
add
ja
jg
inc
insl
loope
and
mov
pushf
mov
inc
outsl
dec
pop
adc
inc
lret
dec
les
imul
rorb
mov
jnp
jg
inc
test
aad
fcmovnb
push
in
lret
stos
xor
leave
mov
xor
and
pop
xchg
jo
ljmp
adc
je
push
inc
jecxz
push
les
stos
push
out
shll
jbe
cmp
mov
push
stos
jg
addr16
lret
adc
daa
icebp
rcrb
xchg
jecxz
and
and
mov
cli
or
and
and
je
lock
lcall
incb
fcoms
or
or
subl
xlat
push
jge
inc
xor
mull
rcrb
push
lds
xchg
mov
pop
push
cltd
ret
ficomps
les
or
push
insb
popa
fs
popf
pop
test
mov
push
cs
es
dec
sbb
andb
loop
cmp
push
push
nop
mov
ss
sub
inc
mov
xchg
cli
dec
or
lcall
mov
pushf
sub
and
push
call
jmp
cwtl
xor
mov
jne
dec
pop
rorl
cmc
mov
jg
push
fcmovb
in
int
scas
inc
outsb
sahf
and
ja
into
xchg
cmpsl
repz
xor
sahf
mov
imul
ret
pop
inc
int3
in
in
sbb
stc
lds
pusha
fwait
xor
mov
add
cmp
jge
xchg
xor
daa
outsl
addr16
daa
push
or
filds
dec
inc
mov
pop
sahf
cwtl
push
popa
mov
sub
lea
xchg
popa
int3
sbb
sub
outsl
loopne
dec
mov
bound
xlat
xchg
lcall
es
push
sub
dec
jae
addr16
add
push
push
in
and
xor
out
adc
mov
cmp
movsl
jecxz
sbb
mov
pop
mov
sub
ds
lret
aad
jl
popa
in
xor
push
mov
mov
lcall
mov
pop
jne
sub
jecxz
xlat
sbb
mov
inc
lods
fs
sti
ss
inc
imul
and
out
or
addr16
ja
mov
rclb
dec
jae
adc
xchg
pushf
dec
imul
mov
xchg
mov
fcompl
fidivs
sbb
pop
dec
push
fsubrp
or
xchg
out
and
xor
cmp
repnz
aam
and
imul
adc
or
inc
adc
stos
movsb
lds
aad
gs
cmc
cmc
sub
outsb
test
movsl
adc
add
jne
fcoml
cld
jmp
sub
push
rorb
xor
cmp
in
jno
adc
ret
inc
sub
ror
push
mov
loop
pop
sbb
cmp
loope
jo
sub
lahf
je
hlt
aas
xchg
in
repnz
push
aam
mov
dec
ret
js
inc
push
xlat
gs
jnp
int
enter
movsl
rcr
xlat
or
xchg
xor
jmp
mov
push
fidivrs
sub
xchg
ja
enter
cli
into
dec
pop
sbb
mov
pop
lods
mulb
dec
scas
and
stos
mov
test
gs
add
pop
jmp
adc
xor
mov
mov
xlat
xchg
scas
stc
mov
jbe
decl
mov
inc
repnz
jmp
xor
jle
lret
ja
scas
shrl
sti
and
xor
lea
cmpsl
ljmp
mov
in
cmp
or
lcall
inc
inc
cmc
je
inc
insl
fmull
mov
cmp
add
jp
sub
enter
testb
ds
in
xor
je
jne
daa
or
les
in
in
dec
shll
mov
loopne
icebp
or
insl
lods
int3
aam
pop
lcall
sbb
pusha
xlat
cmc
add
fs
mov
das
push
lea
mov
pop
sub
imulb
imul
and
mov
pusha
cmpsl
ficoms
push
or
push
cs
int
insb
ret
rcl
sub
cmp
fs
inc
jp
insl
cmp
jecxz
mov
add
cli
or
insl
sbb
insb
sti
xchg
outsl
sti
outsl
xchg
je
in
cmp
popa
xor
xor
repz
jnp
popf
inc
aad
inc
clc
je
outsb
or
das
dec
xor
adc
sub
sub
rorb
mov
push
cmp
add
fisubrs
insb
jp
inc
sub
or
cs
insb
jg
push
loope
aas
cmpsb
or
mov
gs
sbb
mov
mov
pusha
lahf
scas
pop
mov
push
add
and
mov
addr16
dec
pop
insb
sub
xchg
push
lahf
mov
inc
cmc
pop
ljmp
mov
cmp
add
xchg
xor
or
fs
mov
mov
movsl
repnz
inc
adc
pusha
pusha
sub
jecxz
adc
hlt
mov
jg
mov
cmp
inc
setb
aaa
stc
add
lret
dec
mov
inc
insb
push
scas
mov
call
pop
enter
out
leave
dec
mov
sbb
mov
mov
lret
out
jbe
or
ret
aad
aaa
jo
mov
movsl
mov
fsubp
jl
xor
in
or
testl
icebp
mov
fldcw
je
out
stc
xchg
cmp
xorb
shrl
fstpl
cmp
arpl
add
mov
mov
sub
dec
jmp
xor
xchg
lea
xchg
leave
fcmovb
sub
add
pop
and
int3
push
lahf
add
orb
and
aas
sub
inc
cmp
push
gs
ja
pop
sub
push
nop
mov
sub
xor
mov
xor
in
push
push
stc
xchg
call
int
pop
push
pop
pop
and
dec
fildll
loop
inc
and
xor
adc
mov
sahf
scas
push
or
mov
je
fiadds
cwtl
stos
mov
mov
inc
jecxz
cltd
std
js
cltd
push
ret
popl
adc
inc
je
push
xchg
or
jge
mov
pop
push
add
incl
call
cmp
jne
hlt
lret
in
pop
movsl
jecxz
mov
out
adc
imul
cmp
push
push
mov
xor
clc
repz
mov
and
loop
ds
jns
cltd
add
push
mov
mov
cmp
sub
inc
jp
pop
sti
push
movb
xchg
in
test
scas
scas
push
jmp
cwtl
mov
mulb
pop
ja
lret
scas
pop
lods
fdivrs
xchg
lods
hlt
ss
xor
inc
out
fisubrs
cltd
cld
adc
icebp
mov
les
and
inc
in
or
cmp
dec
lods
mov
ss
sub
lret
fsub
mov
mov
sbb
movsl
rcrl
dec
xchg
leave
popa
lds
dec
clc
arpl
das
mov
fisttpl
mov
dec
mov
ljmp
sarb
inc
ret
std
xlat
mov
xor
stc
push
inc
loop
push
test
fs
dec
mov
inc
dec
dec
les
out
cmp
ljmp
fptan
fs
xchg
rorl
mov
sbb
inc
push
sbb
faddl
js
pop
jbe
leave
pop
mov
insl
dec
bound
lahf
ret
dec
push
loope
imul
lods
notl
sti
mov
sub
add
add
fsubrl
mov
push
insl
pushf
mov
popa
jg
dec
pop
xor
lds
loopne
fucomip
sub
xchg
addl
sub
imul
push
push
adc
cs
jb
jmp
inc
rcr
testb
fldenv
sub
xchg
js
pusha
pop
pop
cli
sub
mov
xchg
push
lea
out
leave
xor
jle
xchg
enter
iret
jmp
push
imul
pop
dec
adc
lea
lds
cs
movsb
xchg
inc
pop
or
dec
out
fistpl
sbb
push
cmc
jmp
test
scas
pop
dec
cmp
mov
hlt
cmp
mov
insl
popa
in
ret
adc
xchg
push
int3
cmp
ret
sti
or
or
popa
and
or
pop
cmp
subb
rcr
mov
cmpsb
pop
mov
imul
sbb
inc
lret
sbb
shrd
lods
enter
fwait
jno
cmp
pop
jo
imul
out
ljmp
clc
icebp
jnp
and
dec
imul
daa
push
out
pop
or
or
aaa
lds
inc
push
rcll
and
mov
fs
loopne
mov
lock
lret
scas
loope
inc
pushf
jp
cmpsb
add
xlat
pop
lret
xor
stos
movsb
inc
fstpt
lods
lock
push
lret
mulb
adc
adc
sub
xchg
lods
fs
repnz
sub
or
pop
imul
sbb
andb
or
data16
in
inc
xchg
pop
push
pusha
mov
dec
pop
cmovno
jge
xlat
jne
outsl
mov
mov
pop
hlt
inc
mov
dec
aam
mov
sti
shrb
sub
mov
add
movsl
mov
mov
mov
sub
test
dec
mov
incb
ret
fstps
push
aaa
scas
sbb
int
aam
out
inc
mov
cmp
daa
cmpsb
vandpd
stos
popa
dec
std
pusha
ret
repnz
xlat
fadds
xchg
or
lret
ljmp
xchg
lret
or
add
js
mov
cmp
jecxz
mov
xor
xchg
jmp
and
or
aad
stc
cltd
cwtl
cltd
xor
sarl
and
roll
cmc
jne
mov
sbb
inc
add
sub
fwait
bound
inc
test
pop
push
gs
sbb
enter
lret
shll
inc
jge
mov
inc
fidivs
xor
xchg
mov
divl
jmp
xchg
dec
testl
gs
jns
sbb
mov
mov
xchg
cmp
mov
xor
push
and
dec
loope
imul
and
cmp
pop
adc
aam
xor
adc
adc
cmpl
cmp
pusha
mov
mov
negl
sbb
inc
cwtl
sub
mov
cmp
outsl
pop
jno
mov
movsl
xchg
fists
adc
popf
jge
pop
dec
adc
cld
xchg
in
pusha
mov
or
loopne
mov
mov
jp
sbb
into
jge
mov
lods
push
sahf
stos
mov
les
jle
cs
movsb
pop
pop
push
mov
test
lock
stc
xor
js
jo
sti
xor
adc
or
dec
lds
xchg
or
addr16
jae
sarl
imul
das
repz
mov
mov
adc
jbe
fxch
fs
dec
jbe
ja
xchg
shlb
fwait
add
add
push
sub
inc
add
jecxz
mov
inc
xchg
xchg
inc
sub
fstps
push
mov
xchg
cli
push
mov
rcrb
adc
pop
aad
es
in
je
lret
xor
xor
jg
nop
xchg
mov
movsl
les
scas
pop
shll
fisttps
cmp
dec
repnz
daa
xor
mov
add
jo
inc
leave
jg
sarl
cmp
sbb
dec
out
call
mov
xchg
ror
aam
testb
lock
sub
out
and
mov
jae
arpl
and
test
push
mov
mov
out
cmc
lea
repnz
jae
idiv
cli
sar
mov
pop
or
push
mov
and
lods
inc
push
lea
xor
daa
push
or
nop
or
mov
fwait
push
out
dec
cmc
hlt
test
sbbl
loop
sbb
jo
xor
shl
cmpsl
mov
divl
cpuid
icebp
xchg
popa
mov
xchg
xor
push
loope
cmp
leave
shlb
leave
dec
out
sbb
fs
lea
jbe
push
cs
mov
scas
dec
mov
rcrl
iret
cli
inc
ljmp
jns
jne
xor
push
mov
test
push
aam
fcoml
pop
outsl
cmp
inc
adc
popa
insb
add
sbb
push
stos
mov
ja
inc
and
pop
or
jecxz
and
jge
xorb
pop
lret
push
popa
in
bound
decl
xchg
ds
movsb
mov
cmp
xor
pop
jmp
xchg
sbb
fnstsw
push
dec
je
pop
cltd
ja
aad
xchg
xchg
inc
in
fbld
aad
xchg
and
xor
and
cmp
add
or
cmpsl
and
stos
hlt
mov
inc
rorl
lds
arpl
orl
add
notl
xchg
lea
cmp
push
xchg
leave
mov
push
fmuls
jns
or
push
adc
cmpsb
jmp
int3
lret
cmp
fwait
jg
fs
xchg
or
enter
jne
xor
fs
ficompl
inc
jmp
int3
mov
arpl
sub
dec
push
mov
outsb
jb
pop
or
adc
sbb
jnp
lret
cltd
jp
je
inc
adc
jbe
pop
fldcw
rolb
std
or
pop
jne
rcll
push
aaa
movsl
jns
dec
je
lss
xchg
lret
adc
dec
and
pop
pop
cmpsl
mov
pusha
aaa
lods
arpl
inc
leave
push
mov
or
icebp
popa
push
push
mov
jo
movsb
cmp
xchg
push
lret
add
push
cmc
jb
imul
fs
cmc
cmp
lahf
fstpt
mov
pop
hlt
cmpsl
or
push
jmp
sbb
out
int
dec
jo
and
pushf
mov
dec
xchg
stos
xor
fldt
fistps
cmp
leave
mov
repnz
xor
pop
push
sbb
fucomi
in
push
jmp
xor
jne
pop
adc
lods
jmp
pop
imul
fldl
es
movsb
out
mov
jle
pop
imul
mov
cmp
paddw
es
pop
mov
loop
dec
mov
mov
add
pop
xchg
xchg
jmp
repz
int3
mov
sti
mov
xchg
pushf
mov
and
lods
jp
add
andb
nop
xchg
jl
xchg
sbb
aad
mov
xchg
aad
hlt
xor
xchg
add
and
ret
push
std
inc
sbb
pop
jecxz
cmpsl
lret
jl
popa
roll
outsb
jl
mov
movsb
lock
push
jmp
pop
cmp
iret
dec
out
dec
jno
and
add
or
test
rol
out
into
mulb
xchg
adc
sti
dec
jg
aaa
clc
rcrb
sbb
std
mov
int3
push
pop
jl
xor
add
cmp
loope
jp
nop
mov
mov
out
jns
nop
cmpsb
jmp
and
arpl
pop
js
gs
push
adc
sti
mov
mov
adc
mov
add
das
mov
clc
das
popf
xor
pop
jbe
clc
out
test
sbb
stos
add
daa
push
mov
add
and
xor
sti
sbb
arpl
in
loopne
xchg
lret
jl
sub
lods
scas
add
cmp
sub
adc
mov
push
xchg
cmp
outsl
mov
pop
jge
clc
mov
or
and
cs
mov
dec
das
mov
ss
add
aaa
mov
cmp
and
or
pushf
mov
xchg
push
inc
add
ja
cmp
or
lods
fiaddl
aaa
icebp
adc
and
xchg
lret
in
adc
icebp
in
sti
cli
xor
push
imul
sbb
pop
enter
mov
xorl
sub
mov
pop
movsl
ds
call
das
xcrypt-ecb
cmpsl
dec
into
or
aam
push
adc
jbe
sbb
jae
mov
mov
fwait
dec
rorl
cmpsb
push
stos
mov
mov
lods
faddl
cmp
in
pop
xchg
insb
mov
or
out
jns
push
sbb
and
mov
and
lods
push
icebp
mov
out
loopne
pop
mov
xor
mov
mov
je
daa
lcall
sub
shl
movsl
in
inc
adc
lret
je
lods
hlt
sub
test
xor
pop
iret
add
adc
subl
lods
insl
data16
fbld
insb
mov
adc
add
dec
andb
lahf
ret
cmp
dec
push
push
test
pop
jne
inc
nop
icebp
xchg
arpl
cld
add
movsl
int3
das
pop
lock
shlb
outsl
jbe
fmull
out
pop
call
sub
test
loopne
xor
mov
enter
adcb
out
call
inc
fisubl
dec
sahf
pusha
mov
push
popa
jbe
or
in
mov
xchg
stos
lahf
lret
loope
or
or
mov
push
mov
sub
or
ss
inc
fs
mov
je
aas
adc
and
mov
mov
dec
loopne
mov
jl
mov
aad
loopne
mov
adc
push
sub
dec
pop
cmp
jg
clc
sbb
into
mov
add
pop
lds
cmpsb
test
xor
jo
insb
pop
out
in
mulb
fisttpll
mov
sbb
dec
cmpsb
push
mov
dec
stc
jno
add
filds
cld
test
jns
stos
ret
mov
adcl
int3
jne
fcoms
movups
into
aas
adcb
aam
jae
cs
push
je
pop
test
jecxz
mov
scas
lods
lret
je
pop
mov
cmpsb
dec
rolb
mov
mov
and
and
push
loope
popf
dec
gs
push
pmaddwd
ret
pop
xchg
cmpsl
cmc
pop
repz
inc
hlt
int
faddl
mov
lock
sbb
lds
mov
in
jne
mov
lds
mov
mov
dec
mov
nop
jmp
arpl
sub
loope
clc
cmpb
mov
pusha
cmpl
pop
outsl
jp
cmp
dec
jbe
shlb
dec
sbb
jmp
daa
xor
loop
loop,pt
les
clc
cmp
xchg
mov
ljmp
fsubrs
cmpsb
sbb
add
mov
test
repnz
pop
xchg
loope
mov
daa
sbb
mov
and
stos
dec
lock
push
jle
jno
push
movsb
movb
sbb
fistpll
and
scas
test
sahf
sahf
mov
out
xchg
frstor
icebp
js
sbb
cld
mov
nop
nop
lods
add
inc
cld
andb
jae
xor
clc
add
rcll
cwtl
push
inc
xorb
mov
jb
fimuls
lds
mov
fcmovnb
fnstsw
push
jb
cmp
lock
je
or
ffreep
and
loop
repz
pop
rorb
add
mov
popf
cwtl
lcall
mull
xchg
xchg
mov
dec
mov
jle,pn
sbb
xor
imul
test
lret
mov
inc
jo
or
and
fildl
stos
xor
loope
sub
mov
cwtl
push
jo
mov
and
dec
filds
and
dec
xchg
sub
jmp
push
xlat
jg
inc
pop
xchg
scas
out
jle
pop
pop
jge
dec
stos
popf
lock
divl
dec
xchg
push
sbb
push
iret
idiv
cmpsb
movsb
out
or
push
das
adc
shll
lock
in
cld
xor
cmp
push
ret
mov
inc
adc
popf
adc
add
mov
pop
xchg
pop
sub
push
in
xchg
or
sbb
into
sbb
in
es
adcl
xchg
icebp
loop
scas
testb
sub
sbb
je
or
ljmp
pshufw
mov
ljmp
fldt
and
imul
ret
in
sbb
push
mov
in
and
add
and
stc
lods
xchg
dec
popf
inc
sub
sub
cld
insb
or
mov
lock
jg
cmc
push
jns
push
xor
mov
stc
sbb
pop
clc
mov
data16
scas
mov
push
adc
mov
lcall
sarl
fistps
test
fsubr
nop
in
rorl
xor
out
daa
jge
lret
add
out
xor
sub
inc
cmp
rcr
xor
and
pushf
lret
jmp
data16
mov
xor
xor
insb
inc
push
sar
movsl
jmp
fdivrl
push
jnp
lea
into
mov
mov
push
out
mov
mov
push
test
dec
jne
es
or
shl
mov
xor
stos
lock
mov
insl
cmp
addb
sahf
das
inc
scas
push
cmpsb
add
popf
test
sbb
xchg
andb
and
mov
jecxz
dec
nop
mov
jnp
jb
pop
jno
fdivrp
inc
dec
leave
pop
mov
dec
lock
mov
clc
repz
jmp
sbb
cs
lret
pop
das
pop
xchg
into
jg
fs
mov
es
pop
push
and
aad
stos
push
aaa
insb
push
dec
sahf
cli
rol
popf
and
es
and
sarl
push
aaa
iret
ss
je
les
shlb
mov
pop
xchg
pop
sbb
clc
outsl
repz
push
dec
es
repnz
jle
jg
pop
imul
loop
daa
lods
sbb
aam
js
movsl
xchg
out
jnp
push
or
push
insl
or
outsb
mov
inc
jno
push
loopne
push
scas
or
into
movsl
bound
push
and
sub
fidivrl
ret
out
mov
push
jp
fdiv
push
sub
push
mov
pushf
cmpsl
sbb
cwtl
imul
fwait
push
lods
xchg
and
cmp
xchg
cmp
push
inc
in
in
lds
jg
xchg
arpl
loope
mov
jne
adc
cs
xchg
cmpsl
loop
test
cltd
sti
jbe
test
ss
rcrb
sbb
sub
mov
push
or
fcom
test
mov
push
in
imul
add
test
push
jb
mov
repnz
xor
ret
shll
dec
cwtl
mull
pusha
out
cmp
mov
addr16
fisttpl
andb
fistl
pop
push
mov
xchg
js
outsb
rcl
idivl
mov
xchg
jae
add
and
xchg
loope
push
pop
leave
xlat
call
cmc
aaa
mov
inc
jo
loope
lods
and
test
mov
jae
jb
cmc
or
dec
cli
call
mull
loop
push
xchg
outsb
sub
lea
in
gs
repnz
das
mov
sub
std
fidivs
sub
shlb
push
daa
push
mov
ret
cwtl
lods
fdivs
xor
cmp
mov
je
push
hlt
outsl
dec
lahf
push
testl
call
inc
mov
adc
jge
popa
lods
out
mov
mov
or
loope
jecxz
fildll
fs
sbb
jmp
jmp
xlat
popa
aam
mov
mov
shl
pop
and
sbb
pusha
mov
fidivs
pop
daa
mov
into
jnp
ret
outsb
incl
push
out
jl
imul
xor
addl
inc
ljmp
fadds
rcll
jp
and
xchg
jg
aad
ss
pop
cld
sti
movsl
adc
in
shlb
xor
jne
repnz
mov
cmp
cmp
pop
adc
stos
cmc
adc
adc
gs
pop
or
jns,pt
jnp
or
push
cli
and
fnsave
or
fistpl
insb
insb
push
sub
rorb
aad
aad
jl
sahf
cmp
cmp
std
sti
dec
jb
clc
mov
call
jge
out
lds
mov
test
fwait
inc
pop
pop
mov
sti
add
in
dec
ss
dec
and
imul
xor
repz
xor
or
out
icebp
aad
mov
xchg
iret
mov
fcomps
aaa
mov
fsubrl
jp
cmpsb
ret
push
loop
xchg
cltd
aaa
sub
and
pop
cwtl
adc
mov
es
sub
jns
adc
adc
cmp
mov
leave
xchg
dec
xchg
adc
sbb
cwtl
inc
mov
adc
repnz
mov
fstps
call
fs
leave
mov
sti
popf
xor
into
pop
cltd
insl
adc
sbb
movsl
mov
insl
sarl
into
add
test
push
fidivl
fbstp
shl
push
inc
inc
out
add
adc
out
xor
jbe
mov
adc
jp
aaa
loopne
push
push
cltd
cmp
shlb
cmp
in
lock
std
pop
mov
mov
push
xor
sbb
push
adc
imul
jnp
sub
ja
mov
ljmp
cmp
test
inc
fwait
push
loop
mov
jb
fldenv
cltd
cmpsl
pop
int
sub
enter
fnstenv
jnp
add
loopne
xor
scas
imul
and
xchg
imul
in
call
jge
jg
popf
insb
int
xor
jo
push
xchg
push
je
in
and
push
and
mov
adcl
daa
jle
pop
push
xchg
fcmovu
push
lods
pop
add
sub
mov
inc
mov
and
nop
lea
add
add
cli
xor
mov
ss
xchg
adc
fsubs
cmp
rorl
hlt
fisubrs
aad
xor
fwait
in
or
sbb
mov
adc
pop
rcll
adc
jecxz
xchg
jecxz
insb
lods
cmp
inc
es
push
es
jle
mov
fwait
sbb
cmp
sbb
sub
sub
jbe
adc
out
out
inc
addl
and
mov
cmpsb
idivl
mov
in
mov
hlt
mov
lds
inc
add
mov
mov
fdivr
int3
leave
pop
pop
movsl
xchg
popf
mov
push
cli
pop
daa
add
out
fcomps
mov
out
lea
add
xchg
push
xor
inc
mov
jmp
test
jmp
pop
push
stc
adc
push
jns
test
mov
js
push
jg
jg
popa
adc
out
sbbb
xchg
aam
je
or
loope
push
cli
stos
lock
repnz
cmp
faddl
push
cs
and
push
mov
add
adc
test
jnp
popf
fs
jp
xor
push
jle
mov
or
push
js
stc
xor
popa
pop
sbbl
cmp
icebp
dec
insb
pusha
mov
inc
cmc
xchg
decl
sub
fbstp
cmpsb
cs
mov
fsubp
pop
mov
xchg
sbb
cltd
inc
sub
push
sbb
in
add
mov
pushf
out
imul
imul
notl
popa
je
and
add
fldl
mull
xor
loopne
pop
sub
and
lock
jae
push
cmpsb
arpl
test
lds
xorps
ja
push
repnz
inc
das
jbe
mov
call
mov
xor
jb
mov
jmp
je
or
inc
jo
jbe
outsb
push
sti
cld
jle
in
popf
sbb
xor
mov
dec
decb
jns
push
in
adc
push
xchg
inc
outsb
cwtl
das
sbb
adc
sbbl
add
push
push
std
xor
sarb
and
cwtl
xchg
stos
enter
mov
xlat
cmc
sbb
xchg
nop
xchg
jae
xor
fs
outsl
lds
jns
xor
shrl
sub
push
iret
test
xchg
pushf
jecxz
adc
insb
pusha
mov
mov
loopne
inc
dec
adc
cmp
sbb
cwtl
mov
aad
xchg
inc
xchg
loope
or
lea
push
sbb
hlt
push
jo
cli
cs
es
mov
imulb
icebp
sbb
imul
icebp
sbb
iret
imul
fsts
insl
into
jo
adc
test
repz
mov
or
rclb
cmpb
xchg
jle
inc
jle
adc
in
dec
mov
stc
xlat
lahf
xchg
sub
add
stos
pop
mov
aas
pop
in
jp
cmp
xor
push
pop
fstpl
iret
iret
or
pop
repnz
out
lods
adc
mov
lock
cmp
jl
inc
sub
xchg
aad
lock
xchg
add
add
into
push
xchg
ret
in
lds
jl
or
stc
int
scas
orl
push
add
imul
in
and
inc
pushl
xchg
add
push
loop
push
out
push
sub
sbb
in
jge
lret
icebp
add
add
xchg
sbbl
and
sub
rcl
xchg
test
cmp
ret
mov
subb
push
imul
pop
mov
mov
sbb
pop
fisubs
or
sar
add
daa
push
or
enter
xor
jo
xor
xchg
sbb
repnz
xor
ss
mov
mov
pop
sbb
cmp
repnz
repz
insl
mov
xchg
es
mov
divl
scas
ljmp
repnz
rolb
push
inc
inc
pop
jns
es
sub
cmpsb
leave
incl
mov
xlat
decb
cmp
movsl
add
mov
mov
mov
jp
mov
push
fidivrl
cmp
mov
loopne
pop
mov
sub
ret
imul
outsl
repz
or
daa
add
imul
xlat
les
xor
cmp
adc
test
jne
mov
repnz
outsl
jne
push
dec
mov
dec
add
and
jo
test
shlb
cmp
sbb
and
les
mov
cli
aas
sbb
mov
mov
in
or
fimuls
dec
out
mov
inc
pop
xchg
repnz
loop
call
ljmp
dec
inc
push
cmc
sub
adc
inc
push
in
sarb
loopne
sub
loopne
adcb
out
inc
lcall
in
loopne
mov
or
cmp
and
test
sub
test
dec
stc
mov
fldl
out
pop
adc
push
aas
out
mov
push
or
push
bound
push
lcall
xchg
xchg
mov
movb
cmp
and
jno
loopne
xchg
pusha
cmc
dec
cmpl
jo
nop
pop
jnp
push
cwtl
inc
sbb
lcall
outsb
inc
push
adc
sahf
test
int3
iret
fs
repnz
inc
sub
push
adc
enter
test
add
mov
test
ss
test
cmpsl
jns
push
dec
cmp
movsl
call
dec
out
data16
outsl
mov
add
or
and
mov
fwait
mov
and
js
adc
pop
or
pop
in
xchg
dec
std
dec
test
and
cltd
mov
push
out
insl
inc
push
movsb
xchg
int
daa
cli
add
push
push
push
mov
sbb
push
sbb
test
sub
jle
jp
adc
bound
ljmp
inc
aaa
imul
jns
cmp
adc
pop
dec
lock
mov
xchg
divb
push
jbe
pop
cmpsl
mov
rcrl
ljmp
jmp
mov
and
sub
fadd
cmpl
in
aad
test
test
mov
hlt
outsl
and
shrl
ljmp
into
js
es
jnp
jne
cmp
push
cmc
sbb
cmp
sti
or
insb
es
or
shll
xchg
dec
xchg
mov
jecxz
mov
mov
lea
ficoml
movsl
jge
test
sub
or
outsb
test
jmp
iret
jecxz
les
mov
sbb
hlt
mov
cld
xorb
or
cmp
cmp
rolb
aas
xlat
sub
clc
adc
int
xor
in
mov
push
mov
adc
jp
mov
mov
pop
xchg
add
jae
gs
push
dec
rol
dec
jecxz
add
jns
pop
and
cmp
pop
xlat
push
push
sub
rclb
cmp
add
xor
fstps
test
daa
sbb
arpl
xchg
jp
sub
xor
arpl
hlt
test
mov
sub
cmp
mov
and
popa
mov
mov
test
xchg
adc
pop
clc
and
incl
mov
fidivs
scas
sti
lods
jnp
es
cmp
ret
sub
push
dec
daa
and
in
mov
jnp
xchg
inc
in
mov
cmp
inc
add
subl
push
sbb
dec
jge
fsubr
or
mov
dec
push
lahf
int
mov
out
test
pop
pop
or
loope
cmpsl
mov
into
or
dec
xor
addl
push
and
or
push
push
or
push
xchg
cmpsb
test
mov
cmc
inc
push
jno
pop
scas
xchg
xlat
out
xchg
or
xchg
add
aaa
xchg
lcall
outsl
add
pusha
jecxz
pusha
in
jle
jle
mov
lds
lock
cmp
test
dec
and
adc
jns
xchg
pop
mov
cmpsl
mov
out
push
or
xchg
sahf
enter
fmul
mov
enter
xchg
pop
popa
aaa
or
or
adc
out
jnp
lahf
roll
outsl
push
inc
scas
push
pusha
ljmp
notl
testl
lret
scas
scas
pop
jmp
roll
test
and
fcomi
mov
mov
sbb
sbb
xchg
or
dec
mov
xor
inc
in
loop
push
fxtract
xchg
imul
sub
mov
sub
orl
int
ret
sub
in
aaa
cmp
push
call
aad
jne
pusha
sub
xchg
fcmovu
push
push
inc
dec
inc
push
adcl
and
mov
popf
aad
push
sti
in
push
sub
push
int
sub
jnp
fwait
jns
outsb
sbb
push
or
xchg
test
icebp
mov
sub
add
dec
jmp
mov
lahf
xchg
out
xlat
out
jne
mov
out
inc
fcompl
fidivrl
inc
pop
add
inc
mov
pop
mulb
orb
xor
inc
ret
pusha
cmp
es
or
fldt
xlat
imul
mov
sbb
mov
repz
xchg
imul
mov
mov
xchg
cmp
test
addr16
or
mov
cmp
sbb
sbb
lahf
test
adc
adc
inc
push
hlt
js
mov
xchg
das
int
sarb
mov
add
cmp
pop
popw
sbb
push
push
xor
pop
cli
xor
ja
xor
sbb
mov
sbb
incb
scas
ss
push
outsl
and
daa
add
and
xchg
sub
adc
mov
mov
xor
jmp
inc
inc
int3
mov
push
rcrl
fsubs
mov
sbbl
add
jg
clc
je
outsl
dec
pusha
and
mov
mov
mov
rol
sub
jno
cmc
add
lds
inc
inc
lock
mov
aas
xchg
mov
jb
dec
out
in
mov
call
or
jmp
rcl
test
std
or
xchg
std
gs
ror
cwtl
daa
xchg
dec
xlat
dec
testb
adc
push
mov
faddl
scas
dec
call
add
in
sarb
sub
movsb
insl
cs
insl
xchg
test
neg
imulb
pop
xchg
adc
or
push
xor
js
mov
jno
ss
push
sahf
cwtl
cwtl
dec
push
roll
pop
hlt
adc
aaa
pop
xor
lahf
mov
ja
dec
rcrl
roll
xor
out
add
sahf
push
daa
dec
jmp
fcoml
imul
ret
addr16
sub
fisttpl
mov
add
mov
stc
outsl
cld
jb
xor
cmpsb
mov
pushf
adc
mov
dec
mov
or
int3
cmp
sahf
mov
pop
jnp
dec
sarb
sub
mov
mov
xor
inc
cmpsl
jae
jecxz
mov
cmp
mov
hlt
jge
push
ss
aam
mov
mov
mov
fwait
mov
clc
out
or
mov
xchg
jg
xlat
lods
das
sahf
fidivs
adc
mov
dec
and
mov
or
adc
rclb
das
and
in
outsl
mov
pop
popf
addr16
jno
pusha
repz
lahf
ja
cs
mov
mov
aam
or
int3
cmp
fstps
dec
adc
scas
mov
out
xor
ss
cmp
cmpb
push
rorb
mov
push
dec
fsubrs
xlat
cmp
sahf
pop
stos
iret
xor
imul
cmpsb
xchg
out
push
lea
pop
sub
mov
adc
jg
loope
stos
jo
and
jle
sub
cmp
xchg
sti
sbbb
sub
mov
je
sbb
inc
stos
stos
xchg
movl
sbb
jle
push
andl
addr16
sub
xchg
mov
andl
dec
mov
cmc
mov
aaa
xor
dec
pop
into
hlt
or
gs
je
mov
into
push
test
xchg
jmp
or
movaps
sub
mov
fldt
push
adc
push
aam
xchg
jno
and
cmc
rorl
aaa
inc
insl
pop
or
jo
inc
aad
fsubrl
push
xchg
stos
mov
cmpsb
out
dec
mov
pop
sbb
lods
ret
icebp
test
adc
jg
repnz
sysenter
fs
repz
xchg
xorb
or
mov
xchg
movsb
inc
test
push
add
cli
ret
pop
inc
xchg
inc
pushf
push
lods
xchg
shlb
and
jnp
or
xlat
push
sbb
adc
or
adc
xchg
xchg
push
daa
adc
xorl
nop
adc
scas
cmp
sub
jnp
adc
ficoms
fwait
pop
test
mov
or
or
pop
xchg
test
jo
imul
stos
repnz
push
pop
andl
cmpsl
and
push
and
movsb
sbb
dec
bnd
cwtl
pop
cli
sbb
pop
cwtl
arpl
xchg
mov
and
mov
inc
shl
cmp
test
push
fwait
pop
sub
imul
or
scas
je
or
rcl
pop
or
push
jnp
fs
mov
jbe
ret
push
pop
scas
popa
mov
pusha
vpsrlq
daa
push
ret
or
js
pop
negl
test
push
or
xor
mov
dec
out
xor
lret
push
fld
inc
lcall
repnz
xor
xor
mov
push
cmpsl
mov
xlat
mov
dec
stos
sbb
outsl
je
jnp,pn
cmpsl
and
jge
loope
xchg
aas
xor
push
mov
add
cld
gs
sbb
mov
movzwl
lods
loope
mov
movsl
mov
insl
and
mov
int
je
mov
pop
rolb
loop
pop
mov
inc
jno
les
mov
mov
cld
or
addl
in
outsl
pop
and
mov
inc
inc
adc
pop
or
mov
xchg
sbb
sbb
dec
sti
jle
loopne
jl
xchg
mov
dec
sub
push
cltd
push
stos
pop
hlt
out
lds
cmpsb
sbb
dec
pop
pop
test
ret
push
movsb
or
push
push
sbb
xchg
xchg
pop
dec
scas
sub
push
mov
addl
nop
mov
mov
jae
xor
pop
mov
mov
cmc
push
popa
xchg
outsl
sub
lods
jl
into
imul
mov
andl
xor
aaa
pop
in
ja
fimull
ljmp
addr16
wrmsr
cmp
imul
lcall
in
sbb
enter
sbb
decl
inc
xlat
pop
stos
pop
ss
fwait
js
inc
mov
push
mov
popa
imul
cltd
enter
mov
add
lods
stc
stc
push
xor
sti
mov
insb
int
xor
pop
stos
int3
in
adc
rcl
xchg
sbb
aam
loop
bound
cs
mov
dec
fistpl
adc
pop
stos
jmp
xor
push
cs
movsb
sbb
lret
push
ret
xor
out
pushf
movsl
testl
pop
jno
xchg
ds
push
out
movsb
movsl
ja
fimuls
fwait
adc
jle
aam
add
xchg
mov
stc
push
std
xchg
andl
or
aad
pop
sti
cmp
lahf
pop
les
sbb
je
outsb
pushf
inc
loope
mov
enter
adc
inc
lcall
int3
cmp
mov
repz
gs
sbb
jp
mov
sbb
pusha
out
push
test
scas
pushl
add
movsl
inc
mov
ds
es
ror
fwait
hlt
add
fwait
pop
mov
pusha
cld
cld
es
mov
pop
notl
sbbl
test
cmp
jge
iret
xorb
mov
cwtl
xor
mov
ja
lret
ja
pop
xchg
stc
repnz
add
cmp
in
xchg
push
sti
hlt
or
cs
sbb
xchg
jns
ret
add
xor
in
fisttpll
xchg
sub
push
shr
enter
cmp
imul
or
dec
test
aaa
ja
hlt
test
movsl
outsb
pop
fwait
ret
out
movsl
cmp
cmc
mov
scas
test
sbb
jl
pop
and
mov
cli
push
lds
mov
je
inc
xchg
cltd
popf
subl
mov
je
repz
je
fcmovb
out
cmp
xor
add
iret
or
out
cmp
sub
testl
sahf
aam
push
repnz
mov
fcmovbe
cmp
xchg
mov
xchg
sbb
lods
and
pop
or
adc
fmul
pop
roll
mov
add
push
sbb
push
popf
movsb
mov
aam
nop
in
mov
enter
nop
or
jg
sbb
push
sahf
rcll
div
in
adc
hlt
idiv
clc
test
loope
in
in
cmp
in
mov
mov
and
or
les
xlat
and
dec
outsl
subl
lcall
outsl
pushf
ror
shr
dec
js
push
lahf
pop
mov
std
in
fiadds
xlat
jg
cmp
xor
jl
stos
lds
dec
xor
xchg
fistpl
aas
lock
repz
psubw
or
hlt
movsl
xchg
pop
adc
rorl
les
xchg
jg
dec
lds
aad
faddl
sbb
sbb
sbb
fbld
mov
inc
dec
fisttps
add
dec
adc
mov
inc
cmp
test
adc
outsb
out
sub
lret
aaa
sub
jecxz
adc
scas
out
out
out
jg
mov
decb
mov
or
dec
in
pushf
scas
mov
pop
adc
inc
inc
aam
push
pop
mov
xchg
jae
stos
push
sbb
mov
data16
lock
daa
out
xor
xchg
and
push
mov
iret
mov
push
aaa
or
sbb
ljmp
or
dec
aad
sub
add
fst
gs
addr16
sub
pusha
mov
add
add
cs
mov
aas
jl
xlat
inc
enter
aad
test
test
xor
lahf
jns
clc
shl
mov
jbe
dec
cmp
xchg
cli
dec
sbb
add
sub
push
rcrb
fidivrs
jle
cmc
jo
push
or
jnp
cmpsb
pop
jbe
je
outsb
data16
test
mov
inc
adc
mov
jns
jle
bound
mov
xchg
testl
push
mov
test
mov
adc
jno
test
out
jecxz
aad
addr16
jbe,pt
xor
lock
dec
push
jns
pop
dec
sbb
xchg
adc
ret
pop
aad
inc
cmpsb
and
fmul
outsl
push
inc
mov
and
and
shrb
dec
loopne
jp
leave
sbb
int
inc
jnp
dec
add
xor
cmc
mov
inc
jg
outsl
fucom
insl
out
pop
int3
aas
jecxz
jmp
push
push
fwait
sub
aad
inc
test
inc
mov
sbb
loop
or
sub
mov
xchg
cmpsb
mov
push
aam
scas
jmp
aaa
and
add
pusha
pop
repz
out
or
lahf
inc
jbe
call
loopne
roll
fdivrl
hlt
add
inc
test
das
repnz
pop
sbb
xor
xchg
and
ror
or
and
outsb
jp
push
dec
sub
ljmp
lods
mov
das
popf
insl
pop
sub
loope
mov
push
flds
cwtl
sub
imul
inc
xlat
xor
clc
std
mov
add
xchg
add
dec
adc
fwait
stos
pshufw
out
mov
aaa
adc
dec
sub
jno
cwtl
rcl
pop
mov
mov
jmp
push
mov
int
shl
mov
jno
add
enter
cld
les
pop
lret
xor
fwait
mov
iret
jecxz
ret
cmp
sbb
mov
fsts
int3
fldt
fdiv
mov
gs
jecxz
in
lret
fst
icebp
add
loop
mov
and
dec
add
int
and
filds
aas
sbb
mov
outsl
inc
jae
xchg
push
jnp
mov
and
adc
or
add
xchg
inc
adc
cmp
sub
cmp
icebp
push
stos
sub
loop
add
push
push
fxch
outsl
sub
out
vmovsd
xlat
comiss
cmp
xor
or
out
aaa
xchg
imul
cmp
pushf
mov
fdivs
lret
outsb
mov
femms
adcl
add
imul
inc
push
cmp
push
push
dec
jbe
mov
adc
je
and
test
pmulhw
stc
ret
mov
mov
out
clc
js
test
add
or
scas
pop
pop
fnstenv
and
es
ret
cs
jecxz
lahf
push
or
mov
mov
divb
xchg
outsb
jbe
xor
outsb
push
call
cld
adc
push
jns
cmp
or
sub
push
adc
jp
xadd
call
js
push
mov
inc
jne
repz
sbb
in
fcoml
fwait
mov
adc
jnp
sub
and
push
mov
xor
xor
popa
adc
sub
mov
icebp
lock
xchg
inc
and
enter
adc
inc
ss
add
mov
movsb
enter
fidivl
fcmovne
or
lahf
cmp
and
mov
gs
nop
inc
adc
push
shrb
push
inc
push
xchg
and
and
andl
lret
fimuls
mov
and
dec
pop
add
inc
pop
inc
mov
sub
mov
repz
jns
or
imul
rol
data16
scas
cmp
adc
ds
push
mov
out
xchg
movsb
jbe
outsl
mov
imul
hlt
arpl
add
data16
mov
lcall
dec
sti
ret
inc
pop
and
sbb
sub
xor
fimuls
arpl
fistpl
test
cld
nop
inc
rcr
in
mov
mov
mov
and
nop
sub
adc
scas
int
popa
mov
sbb
xchg
mov
mov
xchg
sbb
stos
lock
jb
sbb
out
pop
or
mov
cmp
push
ljmp
stos
sbb
dec
pop
cmp
mov
push
xchg
cvtps2pd
jmp
lahf
loopne
xlat
fwait
sub
jb
cli
dec
sub
dec
cmp
cli
fucomi
inc
stc
pop
mov
dec
sbb
sbb
aas
stc
mov
mov
xor
cld
pusha
add
rcrb
lcall
call
daa
outsl
movsb
xchg
pushf
jmp
mulb
sar
jg
jmp
inc
adc
push
mov
popa
pop
xchg
jge
cltd
in
enter
movmskps
nop
sti
adc
nop
jmp
fisttps
pop
inc
pop
xchg
dec
add
and
in
fcoms
fsubrs
jno
inc
xchg
sub
inc
imul
and
sbb
imul
std
push
jno
push
jg
aas
addr16
enter
fdivs
jmp
faddl
repz
lahf
mov
test
ss
outsb
mov
jnp
scas
sbb
mov
inc
pop
push
xchg
xchg
cmc
push
push
jno
lahf
sahf
pop
mov
nop
subl
push
mov
repnz
add
cli
popf
lahf
out
ja
clc
cmp
jle
add
scas
dec
ss
adc
ret
push
loopne
cli
icebp
dec
roll
push
sub
jle
int
gs
mov
repz
testb
jge
idivl
mov
test
push
shlb
jle
out
mull
popa
shr
push
mov
jae
dec
rcrb
ja
aad
loope
inc
js
lahf
jnp
mov
jno
adc
sbb
sbb
jb
lahf
loopne
sub
sub
mov
jmp
sti
fcompl
mov
imul
pop
mov
mov
jae
std
lss
ds
mov
jmp
push
and
int3
mov
jge
add
mov
or
sbb
test
call
inc
ja
or
stc
push
test
jns
cld
xchg
adc
sbb
jnp
sti
js
popf
addr16
test
and
xor
cmp
in
jp
jg
adc
lcall
in
pop
lret
mov
mov
pop
in
jb
das
je
jo
enter
or
cld
vmread
test
xlat
stc
cmpsl
cmp
test
push
sti
clc
inc
inc
js
clc
mov
clc
in
xlat
sti
jecxz
xchg
xchg
add
fsubr
pop
fcompl
pop
mov
adc
lret
mov
cs
mov
sarb
das
adc
pop
out
andb
xor
mov
mov
pop
push
cmp
je,pt
mov
sub
iret
stc
or
clc
cmpsl
out
push
sub
mov
push
repnz
test
sti
jmp
mov
in
outsl
mov
mov
icebp
or
imul
cmc
sbb
js
or
cli
xor
int3
or
cmp
xchg
jge
out
push
fbstp
js
movsb
sub
cmpsl
inc
sbb
out
sub
test
mov
fnstsw
inc
jge
divl
add
push
mov
call
add
cmp
shlb
popf
lahf
les
xor
inc
push
inc
iret
pop
repnz
sbb
fstpt
roll
fsubrl
jg
push
je
jg
movsb
scas
add
xor
iret
inc
int3
aas
mov
sub
add
pop
fwait
add
mov
fstps
pop
les
aas
jb
daa
sbb
pop
jmp
loope
outsb
push
rcl
in
pop
or
and
pop
cwtl
mov
mov
mov
inc
cld
mov
jnp
mov
and
in
cmp
xor
mov
push
adc
icebp
scas
in
cmp
add
sub
insl
push
incl
xchg
in
xchg
pop
push
and
js
aas
icebp
dec
and
sbb
inc
or
pushf
push
fisubrs
jecxz
stc
pop
shll
fs
pop
popa
cmp
adc
icebp
ret
es
int
notb
fsubrl
xor
fstpl
mov
push
push
sbb
xor
lahf
ret
aam
jns
scas
loopne
mov
cmpsb
dec
adc
sub
fcomip
test
movsl
mov
cwtl
in
in
cwtl
pusha
fiadds
sar
mov
std
pop
mov
mov
adcl
mov
mov
lock
and
and
xchg
stc
inc
cmp
rolb
add
adc
leave
push
cli
lea
dec
mov
cli
test
lahf
cmp
cs
into
leave
pop
lea
stc
pop
sbb
pop
sahf
push
lahf
cmpsl
mov
inc
jle
enter
js
push
icebp
aas
out
outsl
lret
repz
inc
out
mov
cmc
jns
shrb
dec
ret
icebp
test
or
aam
out
or
jge
mov
das
xchg
jp
je
das
sar
je
jp
cmpsb
jo
mov
push
or
xchg
inc
xchg
push
cltd
movsb
andl
sbb
jbe
add
es
jg
push
xor
mov
test
fdivr
push
mov
pushl
in
sar
add
lret
sarl
neg
dec
jmp
in
mov
ljmp
fistpll
cmpl
sbb
lds
jno
xor
jp
mov
adc
jp
inc
adc
sub
fldcw
jg
add
add
sub
sar
dec
stc
rcrb
push
testb
popa
adc
jle
clc
pop
ljmp
add
jle
jo
mov
lret
jnp
fiadds
mulb
lock
fld
mul
pop
out
sub
rol
xchg
pop
jecxz
jg
inc
out
lcall
xor
mov
mov
movsb
enter
or
icebp
imul
add
fadds
pop
call
mov
jmp
mov
push
push
xor
leave
jp
loopne
inc
aaa
mov
jg
xor
pop
clc
movsb
cmpsl
mov
pop
notb
mov
dec
sbb
pop
lods
mov
jns
addr16
mov
int
or
pop
cld
negl
xor
push
out
shll
pop
sbb
ret
divps
in
jmp
push
mov
movsb
movsb
inc
insl
int
mov
cs
cmc
mov
cwtl
loopne
repnz
insb
aad
js
jmp
test
dec
mov
mov
push
mov
or
jnp
cwtl
xchg
mov
xor
scas
push
jecxz
push
jecxz
xor
push
pop
push
inc
mov
cmp
add
ret
push
fdivrp
daa
adcl
dec
movsb
mov
push
push
jmp
or
shll
fildll
or
test
iret
cli
inc
mov
ret
pop
jecxz
shlb
rcrb
in
sarl
cs
inc
arpl
aaa
pop
xor
aam
int3
sbb
and
jnp
shlb
push
xor
push
jb
stos
push
jne
shlb
lret
inc
sbb
xor
shll
push
push
and
sbb
clc
and
pop
pop
mov
add
mov
cmp
mov
mov
xor
jmp
sbb
dec
xchg
flds
cld
leave
cwtl
jle
xor
inc
sub
jl
push
aas
sub
adc
push
adc
adc
pop
sbb
dec
test
roll
loop
adc
xchg
test
lea
sti
outsl
cmc
cmp
ljmp
dec
xor
movl
popf
sub
dec
push
xchg
adc
enter
popf
dec
stos
subb
lock
outsb
arpl
insl
jne
xchg
inc
adcb
inc
cmp
sub
add
adc
inc
aaa
push
mov
orl
mov
or
imul
iret
inc
mov
aaa
xor
jo
mov
or
imul
fmulp
jb
sub
roll
enter
xchg
push
loopne
shrl
push
push
decb
andb
xchg
loope
int3
or
ficompl
inc
insb
lods
sub
mov
or
imul
fs
mov
sub
mov
push
mov
push
fcomps
jo
sub
or
xor
mov
call
dec
into
xor
add
and
cmpsl
sub
xchg
sbb
loop
pop
out
test
jns
pop
mov
test
add
lods
insl
int3
decb
test
cli
pop
push
loope
push
pop
roll
mov
test
cmpsb
sarb
int3
xor
fwait
xchg
add
aaa
aad
leave
xchg
in
xchg
pusha
int
test
adc
out
push
arpl
mov
fistl
or
pop
lret
loopne
lret
and
xchg
mov
movsl
test
and
das
mov
je
pop
jp
adc
cmp
lods
in
lret
inc
mov
mov
inc
iret
divb
sbb
mov
jb
jb
sub
in
mov
int3
lea
jo
pop
lock
fucomip
sbb
jne
pop
cmp
sbb
or
mov
mov
sbb
sub
filds
or
xchg
arpl
out
das
xor
inc
mov
test
pop
inc
push
jbe
ret
pop
and
shrb
call
les
cmp
fdivrs
dec
add
xor
push
adc
push
fsubrl
int3
xor
cmp
jb
pop
mov
cmp
mov
fdiv
and
and
dec
sbb
add
setge
cmp
jg
xor
adc
xchg
ljmp
fdiv
inc
push
adcb
fwait
jnp
loope
pop
dec
mov
sbb
test
jl
rcrl
imul
inc
xor
jg
mov
inc
cli
adc
hlt
push
inc
push
jp
or
xchg
ja
and
jo
push
dec
prefetch
repz
outsl
xchg
mov
stc
test
jp
mov
or
in
mov
add
repz
lods
push
mov
mov
fldl
or
rcrl
movsw
and
pop
decl
or
jg
jbe
pop
dec
jb
jl
mov
push
iret
mov
sub
jnp
sahf
out
lods
out
mov
cmp
mov
test
pop
dec
mov
mov
cs
sahf
ljmp
js
inc
movsl
aam
fidivrs
fs
sub
inc
pushf
mov
call
and
add
loop
outsl
jg
add
cmpsl
pushf
das
mov
dec
movsb
inc
sbb
pop
mov
mov
idiv
push
jnp
popa
jnp
add
test
in
dec
lret
fildll
mov
xorb
cmpb
push
ss
in
mov
out
and
and
mov
loope
cmpsl
jno
pop
jbe
dec
enter
cmp
or
and
orb
mov
and
mov
pop
pop
sbb
sbb
repnz
inc
cmpl
and
and
inc
test
nop
out
pushf
lea
ss
sub
out
add
sets
sbb
xor
gs
test
jns
jg
aad
js
js
push
movsl
jo
and
xor
repz
movb
adc
divl
mov
inc
and
jo
dec
mov
mov
add
sbb
dec
xorl
adc
mov
push
xor
ss
iret
iret
lea
xchg
xor
lods
jns
dec
and
mov
pcmpgtb
cmpsb
push
movsb
mov
int3
cmp
xlat
or
jmp
and
pop
test
fnstcw
xor
pslld
pusha
xchg
leave
hlt
or
add
sbb
inc
hlt
jg
int
cwtl
push
aas
scas
jg
stc
scas
stc
mov
in
cmp
fsubrs
stos
fs
mov
dec
and
aaa
xor
shll
test
pop
mov
into
aaa
mov
fldlg2
mov
fisttps
ja
push
shrl
aam
mov
dec
mov
cmpsl
insl
mov
or
dec
adc
cmp
jae
mov
xchg
mov
popf
and
lods
mov
dec
mov
fscale
adc
pop
int3
pop
ss
rcrl
push
cmp
lods
pusha
out
push
cmpsl
mov
mov
pop
lcall
pop
or
outsb
out
jb
mov
movsl
sbb
push
push
lret
movsl
sbbl
xor
repz
sbb
int
push
xchg
jg
push
mov
adc
sub
or
mov
cmp
adc
sub
pop
cmp
add
cmc
fistl
push
push
dec
inc
es
mov
mov
in
xor
addr16
icebp
cltd
push
pusha
sahf
sbb
outsl
lret
ret
adcb
push
mov
dec
mov
jp
or
aas
jns
sbb
mov
dec
cs
xchg
stos
das
sub
and
in
dec
aad
scas
mov
and
xor
pushf
js
fstps
maskmovq
divl
js
pushf
dec
cmp
in
rcll
cmp
mov
daa
fimull
mov
dec
push
xchg
mov
daa
fsubrl
ja
adc
shrb
ss
sub
xor
pop
icebp
sub
loope
jge
jmp
xlat
xor
inc
fsubl
mov
ret
in
adc
xor
mov
pushf
fcomip
fcoms
fisttpll
mov
push
cld
and
out
call
iret
je
iret
flds
xchg
mov
ja
xor
pop
adc
sahf
scas
ja
leavew
xor
xorb
lock
sub
push
inc
negb
jnp
pop
lret
or
mov
fstps
fildl
aam
mov
insb
mov
xchg
lahf
push
push
in
adc
sub
pop
or
sahf
jmp
ljmp
mov
int
mov
lret
adc
lret
xchg
xchg
mov
pop
lcall
jo
icebp
jecxz
push
cltd
lret
push
dec
in
loopne
add
iret
loope
ficompl
fwait
cltd
mov
jb
inc
in
sub
cltd
fwait
or
xchg
push
and
and
mov
in
xor
push
sub
jne
dec
fdivrs
movsb
enter
fists
arpl
mov
mov
int3
out
daa
sbb
push
xchg
cmc
shll
cmp
mov
mov
add
sub
ss
lahf
sbb
lods
xor
adc
lock
push
jae,pn
dec
mov
or
sub
sbb
xchg
test
xlat
add
in
push
loope
cs
ret
lds
jns
mov
dec
mov
inc
fistpl
jecxz
pop
jmp
scas
fnsave
lret
pop
les
aad
rcl
push
jecxz
or
cltd
mov
inc
imul
push
and
add
outsb
push
and
sbb
xor
cltd
pop
pop
lret
shlb
icebp
xchg
fldt
pop
fwait
push
in
jnp
or
mov
jbe
mov
dec
out
adc
ljmp
cwtl
push
movsl
mov
movsl
xor
jne
out
addb
notb
loop
lahf
jae
cmp
cmp
push
dec
out
dec
scas
dec
cmp
flds
addl
mov
jo
fs
ja
sbb
inc
pop
mov
mov
inc
je
arpl
push
insb
adc
mov
and
test
push
in
call
xchg
fiadds
cli
mov
sub
leave
fistpl
mov
fs
or
rcrl
inc
lea
pop
mov
in
in
cmc
sub
bound
push
bound
cld
imul
and
sbb
jb
sub
xor
ss
aaa
cmp
mov
imul
sbb
outsb
jg
xor
jbe
sbb
scas
rcl
cmc
adc
sbb
pop
gs
in
ficoml
inc
popf
shlb
sbb
daa
clc
scas
sub
and
insb
xchg
int3
cmpsb
mov
ficoml
in
xchg
dec
xchg
pop
rcll
xchg
arpl
ja
jo
cmp
cs
cmp
inc
push
lods
adc
sub
xor
xlat
shrl
out
mov
cli
push
testb
std
testb
shll
mov
lods
xchg
and
sbb
adc
lret
cli
add
pop
cmp
sbb
jbe
loope
mov
dec
and
dec
sbb
loopne
xor
outsb
out
pop
sahf
pop
mov
lods
mov
adc
dec
sub
and
mov
jmp
mov
sub
rolb
jmp
jmp
in
cld
cmpsl
jl
mov
aam
stos
dec
jb
outsb
jle
mov
mov
or
adc
mov
push
mov
scas
sbb
and
inc
xchg
mov
stc
dec
pop
mov
jl
mov
mov
int3
jne
loop
mov
inc
testb
data16
jbe
dec
lods
test
fwait
out
jo
in
or
xchg
jecxz
mov
pop
shrl
fadd
leave
pop
inc
insb
jns
ja
in
rcll
les
pop
sar
and
mov
les
enter
mov
pop
arpl
jae
sbb
cmp
pop
cmp
aam
ljmp
das
mov
jmp
mov
mov
into
push
pusha
cld
cmpsl
jle
pop
xor
leave
jmp
lahf
push
sbb
and
push
xchg
or
dec
in
mov
repz
pop
inc
fcomps
jne
or
or
and
in
xchg
sarb
add
mov
jle
push
fidivs
xchg
mov
or
jbe
and
and
fnstsw
popl
pop
xchg
cmp
fdivs
out
sub
out
ss
and
xchg
add
lods
shrl
outsb
fwait
and
test
or
repnz
xor
mov
xchg
or
jns
and
sbb
in
adc
cmp
adc
or
idivb
xchg
mov
insl
outsl
sbb
or
cli
stos
lcall
fldt
xor
loop
popf
aaa
xchg
mov
mov
scas
pop
xchg
fldt
xor
stos
xor
push
xor
movsb
pop
popa
lcall
fsubr
aad
push
and
xchg
call
mov
stc
mov
ds
movsb
enter
cmp
mov
inc
sbb
pop
sub
data16
dec
push
int3
push
mov
insb
loop
addr16
inc
shll
out
shlb
push
and
shr
rcrl
movsl
jns
out
jne
fadd
cmp
sub
cmpsl
push
xor
roll
mov
mov
push
or
inc
jmp
ret
pop
jns
popa
dec
hlt
loope
or
xor
inc
jb
mov
clc
or
repnz
pop
xchg
sub
push
push
inc
in
sub
inc
fbld
mov
adc
dec
sub
or
dec
inc
xchg
sub
mov
inc
inc
add
lret
dec
popf
arpl
in
sbb
lods
jo
arpl
cmp
outsl
nop
push
xchg
outsl
sub
fcmovu
xchg
pop
and
cmp
test
push
imulb
adc
sahf
pop
push
pop
sbb
subps
pop
push
jp
jns
loop
test
mov
andb
or
mov
xchg
loopne
push
jnp
sbb
insb
ss
fildl
sahf
sub
mov
ds
sub
and
add
push
mov
mov
into
dec
push
push
inc
jb
dec
mov
push
aad
mov
out
push
icebp
sub
add
les
push
pop
push
repz
lret
mov
mov
shl
add
xchg
cwtl
je
push
mov
rcl
pop
jl
fidivs
cli
aad
movsl
cmp
sub
and
mov
adc
gs
mov
iret
out
pop
pop
int3
sub
push
iret
inc
pop
ret
and
popf
xchg
ficoms
adc
add
rcll
lods
push
push
aaa
cmpsl
and
sub
sub
stos
pop
xor
push
ficomps
push
adc
mov
sbb
mov
xor
sub
add
out
mov
and
sub
xchg
enter
test
popa
pop
outsl
dec
fidivrl
jns
adc
rcr
cmpsl
out
iret
das
or
mov
fwait
xchg
je
cmpsl
dec
add
mov
aaa
adc
pop
hlt
je
daa
popf
aad
pop
push
adc
jnp
loop
movl
sub
dec
adc
dec
shlb
ret
sahf
ret
scas
ret
dec
mov
mov
inc
out
xlat
into
lret
xchg
jb
inc
das
out
lock
sub
add
mov
dec
and
jb
rorl
pop
pop
mov
sbb
mov
xchg
fs
sarl
push
in
or
test
stos
mov
add
lret
sub
xor
jno
pop
iret
movsl
cmp
xchg
cmp
mov
lahf
and
enter
shl
xor
aam
mov
mov
jp
out
bound
adc
or
sarb
xor
std
ljmp
xchg
dec
pop
ljmp
jecxz
xor
xlat
and
pop
dec
popf
mov
enter
xchg
lods
loope
xor
call
xchg
or
and
jmp
lea
scas
imul
mov
xchg
adc
out
xchg
aas
stos
mov
int3
dec
je
xchg
push
sbb
pushf
sub
jae
and
ljmp
mov
fisttps
das
and
fstpl
cwtl
adc
xchg
les
lahf
adc
adc
xchg
dec
xchg
stos
mul
jge
mov
or
stos
mov
ss
imul
shrl
cmp
mov
insb
sbb
fadds
mov
scas
sub
dec
scas
cwtl
popa
fdivrs
int3
ret
pop
push
sub
inc
fsubrs
lret
lret
mov
jmp
call
push
sarb
xor
or
popl
and
icebp
lods
and
cmpsb
push
sub
cmp
shr
into
loopne
sti
xor
js
in
aam
aaa
imul
sub
add
pop
adc
add
ss
mov
and
jl
lea
cs
je
je
lea
fadds
pop
callw
xor
mov
sub
add
cltd
stos
mov
xor
xchg
dec
xor
adc
sbb
fidivl
jnp
lds
in
cs
mov
push
pusha
repnz
sti
addr16
pop
pop
leave
sub
scas
xchg
mov
pop
in
mov
mov
mov
sub
aam
mov
jbe
out
loope
sti
ret
aas
push
fs
lcall
xchg
mov
sahf
and
fs
add
lret
mov
cwtl
test
test
fmuls
call
rcll
adc
loop
inc
push
or
xor
and
xchg
mov
sub
dec
mov
pop
pop
cmp
cli
jl
add
mov
push
sub
dec
scas
mov
mov
outsl
insl
nop
mov
mov
inc
pop
mov
mov
stos
mov
negb
add
out
mov
in
mov
add
es
cmp
rcrb
xchg
push
or
stos
leave
aaa
enter
dec
and
dec
inc
pop
and
insl
add
push
rcr
adc
rcl
push
xlat
xchg
fstpl
sub
nop
scas
into
inc
ds
push
or
xor
xor
movsl
cltd
and
in
imul
sbb
cmp
mov
xor
loopne
jg
cmp
das
inc
mov
jo
inc
cmp
fdivrs
out
in
adc
gs
lods
icebp
fisubrl
sub
mov
adc
mov
pop
or
ja,pt
or
test
mov
and
popa
pop
adc
xchg
xor
out
int3
bound
out
xor
cmpsl
xchg
mov
icebp
adc
sub
xchg
adc
shll
iret
inc
rorb
xorb
adc
lahf
loopne
dec
outsl
cltd
addr16
pop
out
xchg
lock
adc
sbb
pop
repnz
sbb
gs
push
inc
cmp
push
hlt
and
push
mov
out
aaa
out
sub
arpl
xchg
adc
nop
test
rolb
push
and
xchg
inc
xor
ss
lahf
jbe
clc
dec
jno
fs
xchg
in
sub
es
mov
and
push
inc
mov
sbb
push
out
inc
movsb
lret
push
sar
pusha
and
sarl
lods
jle
fwait
xor
xchg
push
fmul
inc
aad
jnp
xor
lods
stos
rcl
mov
sarb
ret
xchg
dec
imul
into
lds
jmp
in
jnp
jmp
movsb
cmp
pop
popf
xchg
and
fadd
hlt
pop
add
adcb
sbb
popf
inc
pusha
shl
xchg
or
add
add
mov
inc
fistl
and
add
lds
aas
addl
mov
or
mov
xchg
pop
jne
mov
out
cmc
sub
xchg
mov
dec
adc
mov
sbb
push
arpl
xlat
ja
fdivrp
and
cmp
lea
lods
dec
hlt
clc
movl
fs
xchg
sbb
loope
out
fidivrs
divb
xchg
jne
ret
sub
mov
mov
mov
mov
cmpsl
pop
dec
insb
push
je
xchg
jle
adc
sbb
imul
mov
add
movsb
and
pop
xchg
out
sbb
push
cli
jo
adc
add
sbb
dec
rcr
cmc
pop
pop
inc
jl
leave
aas
lea
xor
xchg
mov
inc
arpl
in
and
insb
cmc
in
arpl
inc
lret
cmpsb
jmp
outsb
mov
test
and
lahf
movsb
mov
push
push
pop
adcb
lret
adc
rclb
rcrl
xchg
rcll
test
movsb
test
stc
xlat
sbb
or
mov
je
lock
pop
cmpsb
es
out
mov
call
push
mov
cmp
rorb
jae
add
xor
xor
and
push
shr
rolb
aam
inc
data16
sbb
add
lds
mov
fcmovb
sbb
mov
jmp
les
subl
add
mov
ss
sarl
rorl
pushf
mov
je
icebp
push
mov
xorl
sahf
icebp
xorl
pop
pop
mov
mov
sbb
lock
push
cmovne
test
dec
push
mov
cli
sbb
int3
mov
mov
scas
add
nop
pop
iret
mov
js
xor
aad
les
fcoms
das
fcomi
jo
loop
pop
shrb
rcrb
iret
test
subl
call
xor
popf
dec
sbb
lret
mov
and
outsl
out
clc
pop
shll
sub
outsb
enter
mov
imul
push
sbb
pop
xlat
iret
notb
mov
fwait
sbb
cmp
adc
out
popf
or
xor
mov
sbb
fwait
lret
jns
inc
mov
sbb
notl
popa
fadds
iret
jae
jp
mov
xchg
push
mov
or
sub
dec
jne
push
mov
or
jle
jnp
scas
aam
movsl
mov
stos
pop
arpl
and
insl
cmp
inc
inc
and
orl
cmp
mov
jl
xor
add
pop
sbb
xchg
xor
loope
add
jle
and
add
rolb
fisubs
and
out
push
repz
inc
add
dec
pop
js
movsl
mov
imul
pop
xor
lock
push
mov
aad
lock
lahf
jle
fcmovnb
int3
fsubl
xchg
imul
sbb
xor
jbe
and
mov
adcl
test
pop
fcmovnb
sti
stc
insb
mov
jbe
pcmpeqd
jb
loope
in
mov
xchg
mov
xor
mov
fisubl
mov
cmp
mov
jae
int3
std
xchg
mov
repnz
xlat
popa
jl
shl
repnz
rcl
mov
lea
pusha
frstor
xchg
adc
dec
and
inc
aas
mov
sub
sub
test
lds
mov
fucom
dec
xor
ffreep
mov
shl
add
jl
cli
movsl
cltd
jmp
lods
or
cmp
and
out
stos
ret
jle
bound
push
pop
rcll
xorl
out
or
mov
lret
cmp
lods
or
push
lea
subl
repz
mov
dec
nop
pop
jne
mov
push
sub
stos
cmp
adc
stos
pusha
cmp
push
fmuls
mov
in
cwtl
push
adc
arpl
out
jp
inc
out
aad
stos
std
icebp
xchg
sub
jae
subb
push
push
sbb
pop
inc
lock
aam
fstpl
mov
lret
fstps
sahf
test
mov
mov
je
jns
push
cmc
fmull
sub
jmp
jmp
out
xchg
mov
inc
inc
popf
dec
cmpb
loopne
and
cmp
mov
roll
ja
pop
push
loope
out
or
cmp
jmp
push
sub
pop
jnp
xchg
cmpsb
dec
dec
scas
xor
sbb
xchg
popa
xchg
imul
ror
and
inc
mov
mov
test
sub
xchg
jne
mov
xor
push
cmp
stos
push
jl
mov
dec
sbb
repnz
mov
scas
mov
cmpsl
int3
and
jnp
outsb
add
rclb
imul
dec
cltd
aas
sahf
fidivrl
pop
or
jle
pop
jg
rcl
push
jo
mov
sbb
ret
std
ret
fninit
fmull
fiadds
cmp
dec
sbb
aaa
jp
push
frstor
sahf
outsb
lds
sbb
stc
push
jmp
pop
in
cmp
push
add
lea
ljmp
out
pop
popl
mov
js,pn
aad
scas
mov
or
inc
shl
push
rcrl
add
mov
addr16
xchg
mov
lds
mov
mov
mov
sbb
lods
sub
addr16
lea
dec
xchg
lods
iret
stos
lds
xchg
mov
icebp
mov
dec
push
jns
adc
cmp
cmp
xor
cmpsb
stos
pop
xchg
inc
jns
jg
xlat
add
cld
pop
stos
xchg
scas
int
std
pop
fs
and
inc
fs
push
push
fs
aas
insl
shrl
sbb
xor
sub
rcl
inc
or
aas
std
repnz
je
notl
sub
lea
pop
insb
bound
sar
stos
push
xor
add
scas
pop
out
push
pop
xchg
es
arpl
shlb
push
mov
test
mov
mov
mov
sub
in
imul
sti
inc
dec
ds
add
pop
jbe
fcompl
test
fcomip
bound
jo
sbb
mov
mov
loopne
sahf
xchg
shll
and
or
mov
cmpsb
xor
lea
out
fsubl
jp
outsb
mov
les
push
stc
outsl
pop
mov
fsubrs
inc
bound
or
add
dec
and
in
nop
dec
jp
scas
mov
push
div
dec
ds
movsl
je
jne
jo
adc
or
xor
jp
inc
int3
psllw
frstor
jl
arpl
loopne
mov
or
push
hlt
in
loop
dec
sub
cmp
push
mov
mov
aad
push
stc
in
ss
cltd
mov
pushf
xor
ficompl
jbe
mov
not
addb
in
mov
packuswb
ja
xchg
jecxz
mov
popa
pop
lret
lock
adc
enter
enter
insb
or
subl
or
scas
pop
stos
fisttpll
lods
stos
cwtl
int
iret
jo
xchg
mov
xchg
sbb
dec
and
js
insb
jp
add
and
sbb
adc
ret
ret
nop
xchg
and
pop
lock
shll
jge
sub
mov
arpl
cmp
jecxz
lock
pop
cmp
test
sub
adc
adc
das
rolb
mov
adc
sbb
lods
sub
cmp
sbb
push
fistl
sub
and
add
xor
or
ljmpw
jnp
dec
test
sbb
cmc
mov
add
imul
stc
fs
jle
pop
jne
jecxz
xchg
cmp
std
or
out
outsb
push
sub
hlt
cmp
jne
xor
repz
lret
das
sbb
cmpb
repz
arpl
shl
imul
out
mov
dec
xor
mov
enter
and
jl
cmp
pop
sbb
or
push
punpckhdq
lahf
add
insb
sti
pusha
mov
outsb
push
sti
das
pop
fmulp
stos
dec
in
and
aas
and
fiaddl
sub
cld
mov
pop
and
ficoml
enter
mov
push
xorb
inc
idivl
std
sti
or
scas
dec
add
fldcw
sub
movsb
in
je
mov
fimull
push
sbb
loope
or
lret
mov
xchg
stc
test
movsb
pop
mov
sub
pop
imul
int
jb
repz
inc
mov
insb
sahf
rcll
test
test
ljmp
mov
mov
fdivs
mov
mov
mov
add
aas
in
pop
mov
mov
mov
and
hlt
xor
jns
lea
mov
mov
push
adc
cvtps2pd
fists
or
inc
xchg
loope
pop
xor
aaa
and
xor
and
jp
fidivrl
mov
movsl
loop
mov
mov
and
inc
rorb
xor
jae
inc
mov
movsb
xchg
arpl
xchg
das
add
fdivrs
mov
and
mov
shr
scas
xchg
leave
fistpll
stc
and
sbb
push
orb
cli
or
lahf
jno
sub
test
cmp
mov
jno
outsb
pop
bound
fcoml
jb
pop
add
dec
faddl
and
mov
pop
cmp
enter
push
xor
es
and
jno
push
fldenv
mov
push
ficoml
jl
cmc
add
pop
dec
mov
addr16
bound
test
fwait
sbb
or
or
ja
imul
es
sbb
mov
sub
xor
pinsrw
pushf
stos
mov
aaa
movsl
pop
and
sub
clc
jecxz
sub
cmp
mov
sbb
jne
jle
addr16
fs
fdiv
inc
mov
rcrl
scas
xor
xchg
mov
pop
lds
sahf
orb
inc
or
bnd
shlb
shll
leave
xchg
stos
repnz
ds
fs
aad
pop
xor
mov
ja
int
adc
nop
mov
pop
sub
dec
pop
imul
dec
lea
stos
or
push
dec
push
addl
mov
bound
int3
dec
int
fdecstp
test
lods
std
test
sub
cmpsl
cs
add
arpl
das
andl
pop
mov
fiaddl
ret
add
push
dec
xchg
out
xchg
and
cmp
sub
ret
ja
jmp
inc
xor
cmpsl
sub
int3
push
mov
leave
testl
aaa
jle
dec
mov
xor
add
push
test
sarl
and
or
xchg
cmp
cmpsl
lcall
es
std
cs
and
bound
and
ja
adcl
mov
add
ljmp
lahf
mov
jle
fwait
mov
sahf
xor
sub
dec
xlat
fiadds
stos
loope
fcmovnu
sub
leave
dec
cwtl
jnp
out
xchg
cmpsl
enter
adc
mov
mov
dec
adc
popf
inc
cmp
fiaddl
cmpb
push
push
into
cmpl
sbb
mov
popf
jg
add
mov
ja
lods
jns
test
push
or
inc
cmc
xor
filds
clc
sbb
sub
pusha
sbb
js
cmp
lods
ds
xor
pop
idiv
add
dec
jle
mov
popa
mov
mov
jmp
inc
sahf
pop
xchg
bound
xor
add
insl
dec
push
jp
cmp
fsubs
xor
adc
dec
insl
imul
xor
js
stc
push
mov
or
repz
push
sbb
in
hlt
mov
into
icebp
cmp
and
inc
lcall
imulb
int
shlb
sbb
jge
jo
ds
mov
jns
add
shl
les
pop
stos
pop
in
adc
jae
mov
cmp
subb
idiv
mov
push
jns
mov
sbb
xchg
outsb
stc
jl
mov
xchg
jle
mov
mov
jge
sahf
mov
jnp
popf
bound
jle
dec
pop
sub
and
xchg
jle
push
xchg
pop
jle
bound
stos
push
rcll
sub
stos
pop
fdivs
mov
add
mov
dec
cmp
fstl
or
loopne
push
stos
in
arpl
jg
test
adc
cmp
cs
cmp
lret
mov
push
in
jns
jl
jg
add
ret
pop
sbb
add
sub
lock
je
cli
cmp
icebp
test
push
out
mov
jl
pop
mov
movntps
or
test
xchg
jb
enter
mov
into
adc
xbegin
pop
insb
add
mov
fwait
outsl
pop
jbe
mov
fimuls
hlt
addr16
jb
and
mov
xchg
div
mov
xchg
dec
and
sub
sub
lret
or
pop
inc
dec
jl
movsl
popf
dec
mov
cld
call
and
loopne
pusha
test
pop
inc
sbb
dec
icebp
out
push
mov
push
ss
push
scas
sti
dec
xchg
sub
dec
shlb
pop
cli
jne
xor
xchg
and
cmp
xchg
test
cmc
clc
push
xchg
lret
seto
pop
cmp
scas
and
std
sub
sbbl
lea
jp
push
xchg
cmc
adcb
mov
sbb
fsincos
add
push
mov
mov
mov
xor
mov
mov
outsb
fwait
cmc
lods
fsubrs
sub
mov
pop
out
clc
sbb
inc
fcmove
bound
sub
imul
jne
lret
fistps
inc
mov
sahf
shll
movsl
mov
adc
je
push
pop
test
dec
push
lods
jno
cmp
sub
mov
jg
and
in
inc
fs
repz
mov
add
add
outsb
mov
lcall
iret
popl
cmp
sti
xor
loopne
jg
cmpsb
fwait
mov
std
cs
out
hlt
add
xor
sti
push
xor
je
cli
mov
mov
push
js
add
xor
inc
lods
and
out
xor
jns
test
add
adc
cmc
sbbb
push
insl
mov
lret
jle
stos
or
das
gs
jbe
mov
pop
push
or
jne
leave
scas
test
aad
jnp
ret
pop
mov
ficomps
fisubl
push
jne
jb
out
ficomps
mov
add
ds
into
or
or
movsl
pop
xor
mov
inc
sub
pop
call
mov
aas
jle
lds
ljmp
test
push
popf
or
sti
ficomps
lds
cmp
push
adc
adc
lcall
push
push
xchg
cltd
sbb
pop
sarb
aaa
lods
push
jecxz
push
jg
push
shrl
xor
mov
scas
push
stc
pop
jbe
in
sbb
arpl
mov
sub
mov
mov
inc
xchg
lods
xchg
add
jb
std
sub
push
pushf
mov
outsb
icebp
inc
in
cmp
aas
filds
test
add
adc
and
shlb
das
mov
jnp
mov
notl
sarb
push
in
mov
add
adc
jae
hlt
sub
xor
in
nop
mov
cmpsl
addr16
in
push
xchg
in
ficomps
xchg
nop
cs
mov
inc
jns
inc
jno
adc
les
push
sub
mov
jecxz
inc
cmp
and
mov
leave
mov
imul
mov
push
fs
cmc
or
mov
mov
in
cmpsb
xor
pop
stos
xor
insb
insb
push
cmp
pop
adc
scas
cmc
cltd
or
test
lret
xchg
std
std
sub
in
loop
gs
ss
lcall
inc
lods
dec
stc
pop
in
popa
mov
roll
cmp
in
imul
xchg
jo
es
push
dec
mov
cmp
mov
pop
ss
jmp
je
stos
sahf
cmp
in
sbb
sbb
arpl
aad
push
inc
sahf
ja
fstpt
loop
jle
mov
int
sub
and
jmp
sub
sbb
mov
ljmp
adc
jno
scas
insl
lods
inc
lcall
xor
loop
or
aas
push
daa
in
inc
stc
js
mov
popa
xchg
mov
sub
nop
aad
pushf
cmc
push
add
filds
push
xchg
jns
mov
mov
add
inc
dec
and
xor
nop
jb
jne
sbb
rol
push
cmp
pop
and
ficoms
adc
daa
push
mov
add
dec
nop
test
jmp
jo
pop
cmp
or
pushf
mov
sub
xor
dec
xchg
dec
mov
inc
outsl
mov
popa
sub
fisttpll
ds
inc
mov
sub
popf
aad
pushf
sub
cmpb
cmp
push
pop
mov
xchg
inc
mov
cmpsl
mov
aas
xor
stc
sbb
xchg
pusha
mov
and
xchg
cli
stc
shl
jb
cmp
xor
movsl
mov
sub
sbb
jge
xacquire
dec
mov
sub
pushf
into
xor
xor
push
cmpl
pop
or
inc
lcall
inc
jge
push
mov
stc
insl
ss
addr16
int
ffree
aam
pusha
xchg
and
xchg
add
ss
or
lahf
mov
cmp
mov
mov
cltd
add
loop
call
inc
test
jae
shll
jns
xchg
leave
rcl
lcall
cmp
xchg
pop
aad
pop
sbb
popa
xchg
pop
shr
push
cltd
sub
test
insl
mov
icebp
mov
shlb
mov
fs
fcompl
push
pop
or
enter
jnp
addr16
xchg
loopne
fs
mov
adc
pop
scas
pusha
and
push
movsl
xchg
rorb
setl
int3
dec
or
jl
pop
jbe
outsl
loopne
jbe
lahf
call
mov
jecxz
xchg
dec
ficoml
jmp
in
lods
in
mov
push
pop
aam
aaa
mov
aaa
jle
mov
std
mov
jmp
out
cs
lahf
push
pop
push
xchg
add
pusha
sahf
in
xor
sbb
lea
mov
inc
xchg
jae
adc
xor
mov
mov
sbb
addr16
icebp
lcall
mov
push
int
pop
test
mulb
mov
pop
push
adc
cmp
cs
aam
shl
adc
pushf
int3
cmp
add
outsb
push
jle
cli
fs
or
pop
push
arpl
aam
cmp
out
cmpsl
rclb
inc
adc
ljmp
inc
jl
pusha
scas
jbe
cmp
std
pop
data16
lahf
loope
fdivl
scas
je
fdivr
mov
into
cmp
dec
in
and
pop
dec
mov
roll
out
xchg
jne
mov
cmp
mov
int
or
or
sti
scas
xchg
imul
pop
test
hlt
dec
and
out
arpl
and
mov
cmp
dec
popa
rclb
cmp
loop
fisubs
push
nop
jae
imul
repnz
popf
inc
repz
sbb
jbe
ja
dec
inc
push
sbb
xchg
mov
sti
dec
hlt
in
fdivrl
into
or
data16
enter
push
stc
out
aas
and
cmp
dec
push
jl
in
int3
sub
fsub
es
mov
aaa
inc
sub
inc
shll
not
xchg
fcoms
inc
int3
out
xor
jbe
push
movsb
pop
xchg
xor
mov
jg
rclb
cltd
leave
mov
push
push
lock
aaa
add
sti
lods
cmp
mov
negl
add
leave
insb
iret
int3
jle
mov
inc
iret
cld
cld
sub
push
bound
cmp
sbb
stc
jbe
push
or
je
ss
loop
dec
dec
xor
lret
pop
imul
jle
or
cwtl
sti
xchg
adc
sub
push
inc
jmp
in
mov
or
mov
jb
mov
push
pushf
sbb
or
ljmp
cmp
dec
mov
dec
mov
jae
movsl
add
ljmp
mov
movsb
push
and
aas
push
sbb
adc
cmp
mov
insl
test
push
jbe
int3
ja
insl
movsl
insb
ret
repz
in
adc
aaa
xlat
loope
inc
mov
lds
push
stos
add
insl
and
and
clc
inc
out
xor
shl
jnp
inc
push
mov
adc
sbb
cmc
cmp
into
xor
sti
xchg
cmp
cmp
or
or
fnstcw
ss
out
ret
pusha
dec
in
push
lahf
push
dec
and
outsl
dec
loopne
nop
mov
push
shl
popa
pop
xchg
sbb
sarb
xor
pop
pushf
out
es
lcall
cld
push
mov
mov
lea
mov
in
dec
jle
aaa
and
mov
sbb
out
jmp
and
enter
stos
pop
xchg
icebp
es
push
jnp
mov
gs
adc
sarl
pop
ja
sub
xor
add
xchg
mov
sub
movsb
xchg
mov
scas
pop
stos
outsl
loope
cmp
shll
ja
xor
xor
jno
xchg
mov
cmp
mov
pop
ficoml
ljmp
loope
mov
pop
inc
orl
jle
or
lods
cmp
jbe
cmp
mov
cmpsb
rcrb
jl
jge
sbb
shrd
xchg
sbb
sbb
sub
aam
pop
mov
mov
int3
push
in
popa
fstpl
pop
mov
insl
rcll
idivb
mull
rclb
and
int
imul
sub
lock
sti
jmp
fildl
sbb
jne
mov
fs
mov
mov
jl
sti
pop
les
out
lods
adc
xor
xor
std
sbbl
testl
scas
mov
mov
cmp
mov
cmp
adc
cmp
cmpsb
mov
xor
ret
jge
mov
cmp
je
cmp
xor
pop
jp
in
cmp
xchg
ss
xor
fs
xchg
or
cmp
add
or
pop
cli
fcoml
inc
dec
popf
sub
into
fadds
jl
pop
mov
push
aas
out
cltd
push
pop
sub
push
stc
in
pop
nop
mov
mov
inc
or
cli
iret
pop
les
push
stc
lea
adc
xchg
jb
pop
mov
push
hlt
outsb
fs
aas
lea
sbb
mov
mov
test
mov
sub
into
or
ret
dec
test
sbb
subl
call
data16
mov
mov
in
pop
pop
lahf
jp
mov
sbb
js
sti
mov
lret
adcb
xchg
xchg
lods
dec
andl
sbb
lcall
mov
xchg
roll
mov
jecxz
hlt
push
jl
ficompl
add
mov
lds
iret
lea
xchg
xorb
mov
pop
xchg
pusha
cltd
out
arpl
sub
popa
std
sbb
aam
xor
aaa
lds
hlt
das
pop
popa
movsl
repz
mov
jne
sahf
jne
cs
sbb
aaa
fs
shlb
jnp
mov
or
and
mov
lcall
add
sbb
mov
xchg
sub
cmp
je
jp
inc
jmp
mov
xchg
pushf
js
scas
push
pop
dec
ficoms
jb
fsubl
cli
scas
scas
mov
fadd
mov
lcall
fwait
push
shl
int
pop
lods
test
push
and
xchg
cmpsb
sbb
test
cmp
push
aas
sahf
pop
repnz
mov
dec
icebp
lret
lock
aad
aad
fidivl
dec
sub
clc
ret
jb
aaa
int3
mov
and
mov
mov
loopne
hlt
mov
in
pop
shrb
push
jns
adcb
ffree
rdtsc
xor
sbb
das
or
sbb
test
lods
outsb
xchg
push
imul
xchg
gs
and
dec
xlat
and
adc
out
scas
insl
iret
into
pop
dec
and
cmp
divl
out
test
dec
mov
lret
in
mov
sub
push
push
pop
sbb
out
cmp
cmp
add
sub
shll
test
cltd
pop
inc
or
fwait
push
loope
hlt
sub
sub
pop
mov
aad
sbb
inc
xchg
jne
or
or
sbb
push
mov
pusha
push
call
out
insl
sahf
and
ja
mov
aaa
mov
icebp
mov
movsl
and
movsb
into
loop
fsubs
shlb
hlt
sbb
ret
cmp
xor
popf
inc
daa
icebp
sahf
sbb
int
jae
mov
jle
aaa
push
pop
inc
and
lahf
dec
mov
mov
ds
rcll
or
aas
push
push
mov
shl
scas
lcall
xor
loopw
jecxz
fldenv
outsb
lock
ljmp
cmp
mov
inc
push
inc
mov
imul
add
mov
shl
pop
push
psrad
xchg
sub
out
push
mov
fists
stc
and
add
mov
es
sub
clc
push
jle
int
xor
lahf
pop
mov
out
fistpll
in
out
movl
aad
into
sti
imul
add
inc
in
and
sti
mov
pop
pop
addb
sub
inc
js
notb
or
pop
xor
mov
popf
dec
mov
add
adc
or
daa
popa
sbb
sbb
cli
jb
pop
loopne
xor
pop
pop
cmp
jae
cmp
or
dec
adc
add
mov
repnz
pop
add
ja
ss
or
jo
repz
out
out
adc
ja
cmp
loopne
ret
pop
add
sbb
add
dec
adc
add
push
mov
out
cmc
test
ret
or
jmp
or
imul
inc
lret
in
adc
clc
je
aas
stc
jb
dec
lea
sbb
js
xchg
or
and
div
sub
insl
ret
stos
movsb
outsb
mov
fcomp
sbb
jmp
inc
push
mov
and
xchg
xchg
push
leave
cld
ljmp
movsl
movsl
pushf
dec
sub
insb
movl
data16
push
sub
pop
dec
lret
inc
jp
mov
in
jecxz
push
jbe
cmp
push
leave
jns
scas
jmp
or
loope
sti
cmp
test
mov
std
sbb
ljmp
fwait
std
lret
add
sub
stos
mov
xchg
mov
jnp
imul
push
mov
rol
cmp
out
enter
add
fmull
mov
fisubl
mov
mov
in
jmp
xor
arpl
sbb
mov
jp
xor
call
pop
mov
dec
iret
outsl
outsb
mov
jb
push
int
add
and
das
subl
jmp
mov
mov
cmp
gs
push
or
jo
fistpl
add
es
aaa
call
sub
popa
pop
sbb
jne
xchg
dec
fcompl
push
aaa
out
adc
movsbl
ret
lcall
xchg
fs
movsb
dec
clc
pop
mov
mov
mov
or
mov
push
or
test
adc
xor
sbb
cld
cmc
aad
movsl
adc
stc
add
bound
inc
mov
dec
xchg
or
pop
xchg
add
in
dec
mov
jmp
mov
cld
xlat
xor
cli
push
lods
psubsb
lcall
iret
call
scas
mov
xchg
push
jg
sahf
dec
sti
dec
iret
push
std
inc
dec
aas
leave
inc
leave
repnz
call
dec
idiv
sbb
jge
lcall
mov
add
hlt
add
jo
mov
test
cmp
pop
hlt
cmc
cmp
cmp
jl
inc
shr
mov
pop
in
mov
lret
and
sub
mov
push
jecxz
ret
adc
fbstp
ds
les
sub
adc
dec
imul
sarb
and
into
imul
and
orb
shll
aad
clc
jge
mov
adc
mov
lock
stos
int
outsl
sbb
mov
cwtl
psubsb
fs
push
mov
addl
std
je
pushf
push
idivb
dec
inc
push
out
jbe
loopne
jmp
inc
shrl
inc
xchg
xchg
aaa
jg
jp
jmp
je
sbb
dec
stos
push
or
loop
incl
aaa
push
mov
add
lock
cmc
push
es
and
adcl
into
in
push
fildl
clc
lock
cltd
pusha
imul
sub
fs
cld
clc
cli
repnz
inc
pop
push
fisubl
mov
out
sbb
push
lret
insb
aaa
dec
mov
jg
fldl
xor
repz
aad
mov
jl
xchg
lahf
out
push
mov
out
icebp
lea
jne
xor
adc
fmull
sbb
pop
clc
sub
push
sbb
jnp
sub
inc
sub
add
mov
mov
adc
mov
push
sbb
pop
outsl
ja
lock
ljmp
mov
mov
xor
ds
adc
sbb
jne
sub
adc
loop
scas
xor
stos
insb
mov
in
daa
mov
add
mov
scas
mov
dec
sti
push
test
mov
cld
adc
mov
jb
jo
mov
cmp
pop
push
in
jnp
cmp
add
sahf
sub
stos
movsb
cmp
shrb
in
sub
adc
dec
sbb
cwtl
push
inc
inc
and
daa
push
mov
mov
adcb
push
xchg
rclb
daa
je
dec
fisubs
imul
fstpl
adc
ret
mov
shrb
push
sub
xchg
push
hlt
pop
cwtl
mov
push
jl
lcall
test
mov
daa
push
pop
sub
cmp
jg
shr
aad
adc
mov
roll
sahf
push
fdivs
jmp
lock
aaa
daa
cmc
add
fwait
psubb
std
mov
cld
aaa
lcall
and
int3
test
repnz
lods
ss
cmp
dec
rep
mov
movsl
mov
inc
push
shlb
push
sbb
and
cmp
inc
xor
adc
aam
sub
and
xor
mov
subb
mov
add
testb
cmp
sub
xrelease
aam
dec
add
repnz
xchg
je
sub
cli
loopne
insb
push
sbb
push
jo
sub
in
inc
test
dec
ret
dec
pusha
xchg
mov
inc
mov
pop
scas
out
push
fld
mov
jmp
inc
stos
inc
jp
fwait
ds
shlb
outsl
mov
loopne
fcoml
sbb
cmpsl
dec
sbb
sbb
jle
sub
mov
xchg
pop
push
push
test
aas
add
out
mov
cmp
movsb
or
xor
shll
out
mov
cmpsw
shlb
sub
sub
jecxz
mov
mov
pop
jnp
sbb
mov
mov
fbld
jae
loop
in
mov
hlt
sub
scas
xchg
outsl
mov
mov
sub
nop
test
mov
outsl
outsl
in
pop
aas
lcall
pusha
mov
mov
cmp
into
aam
cld
adc
inc
stos
fbld
or
fidivrs
jnp
mov
pop
jns
cmpsl
enter
icebp
sub
or
jle
out
stos
mov
add
loop
mov
mov
sbb
push
mov
lret
and
xor
jno
test
cwtl
mov
jbe
stos
sub
cmpsl
int
movsl
stos
es
mov
ret
aad
popf
jge
and
xchg
shrb
lcall
arpl
cmp
lcall
popa
test
or
or
pop
and
call
adc
aam
andb
out
sub
push
das
mov
rcll
push
fildll
imul
sbb
pop
fwait
dec
and
xchg
sub
mov
arpl
fwait
cmp
jbe
rol
in
xchg
mov
fstl
out
mov
or
pop
rcrl
xor
in
push
sbb
jecxz
dec
shrb
jmp
xchg
scas
test
test
addr16
push
or
sub
insb
imul
sub
xchg
mov
imul
push
ss
loopne
icebp
leave
stc
push
mov
dec
test
les
xchg
testb
test
test
ret
cmp
je
stc
popf
xor
test
pop
sbb
cmp
pop
inc
and
jae
adc
ljmp
popa
add
xchg
cmp
pop
sbb
inc
ja
mul
jne
stos
shl
movsb
in
xor
je
fmulp
mov
xor
enter
jl
leave
dec
leave
test
add
sarb
dec
dec
dec
or
adc
inc
fwait
dec
cltd
cmp
aaa
xor
jg
in
popl
nop
and
fcompl
faddl
xor
xor
repnz
xor
lea
inc
xchg
jno
pushf
lcall
lds
out
stos
dec
push
cli
dec
jmp
or
inc
cmp
mov
sub
mov
or
xor
dec
in
jle
je
cmp
sar
mov
inc
insl
xor
mov
adc
inc
mov
in
add
sbb
pop
test
mov
ja
push
rorb
fisubl
inc
jge
adc
imull
mov
test
inc
loope
add
enter
pop
cmp
lods
lret
and
xor
sti
jo
sbb
and
add
ja
pop
push
fwait
sahf
push
and
and
lcall
add
adc
cmp
adc
push
adc
cmp
jp
fsts
pop
mov
dec
fs
das
lahf
xchg
sbb
cli
mov
test
mov
adcb
dec
xor
sub
lea
add
cmp
sub
jnp
sub
cmp
fsubl
in
mov
gs
push
add
loope
arpl
pop
scas
cmp
mov
jo
mov
add
sahf
popa
lcall
dec
icebp
or
mov
cmp
dec
fwait
add
xor
sub
outsl
test
mov
shlb
push
stos
mov
push
inc
ds
fldcw
test
push
frstor
cmp
icebp
and
sub
es
imul
insl
flds
jne
mov
insb
add
sub
clc
sahf
mov
push
mov
test
lret
fistpll
stos
in
scas
pop
inc
mov
sub
dec
stos
daa
push
adc
movsb
inc
scas
insl
outsb
jbe
sub
mov
cmp
add
imulb
mov
jns
fstps
in
jbe
push
xor
push
jge
mov
push
addb
or
pop
rclb
mov
das
and
inc
popf
xchg
out
sbb
add
lcall
lcall
xlat
jne
idivb
and
hlt
lods
mov
or
insb
push
stos
pop
daa
pop
jg
imul
add
sbb
lods
pop
loopne
push
aam
ds
jns
fldl2e
and
push
and
dec
mov
xchg
testl
scas
ret
jmp
cmp
push
in
hlt
mov
pop
mov
ror
cs
mov
adc
dec
push
mov
inc
in
sub
mov
xchg
inc
pop
and
xchg
out
test
repz
mull
stos
fnsave
push
outsb
and
push
push
mov
jmp
pop
mov
in
add
mov
cltd
ja
adc
rcrl
pop
testb
bound
rclb
ja
pusha
xchg
mov
insl
test
pop
outsl
xchg
gs
in
cmpsl
adc
in
xchg
std
scas
push
add
sbb
bswap
movsl
jmp
sbb
shlb
adc
mov
cmp
xchg
xchg
popa
bound
and
xchg
es
aad
imulb
bound
sub
push
inc
dec
int
and
dec
mov
nop
jne
decb
and
adc
push
mov
imulb
stc
std
and
push
movsb
out
mov
sbb
lcall
shrb
stos
shlb
iret
ljmp
jb
push
aaa
xchg
mov
add
jp
lea
mov
or
adc
je
test
fcmove
xchg
hlt
ror
repz
mov
xor
loope
jg
daa
sub
loopne
jle
or
js
shrb
mov
mov
leave
jmp
je
loop
lret
cmp
and
sub
rorb
jno
adc
cli
jae
sub
and
push
jecxz
adc
pop
fwait
xchg
ja
test
movsb
cwtl
movsb
outsl
pop
pop
call
push
add
test
lret
aas
scas
jb
repz
jecxz
ss
mov
loop
out
inc
cmp
fists
movsl
arpl
imul
sbb
xor
arpl
mov
add
sub
dec
clc
jo
add
cwtl
pop
or
inc
leave
shrl
jb
std
or
or
mov
ss
icebp
outsl
mov
mov
pushf
jbe
bound
xor
and
xor
and
cld
sub
add
sub
push
sub
jge
push
call
sbb
lods
hlt
std
out
add
sbb
notb
push
lcall
sbb
xchg
mov
xchg
lods
outsb
sarl
cmp
aas
popa
ds
xchg
in
hlt
adc
aaa
adc
cmp
gs
jle
mov
mov
xor
mov
sub
loope
dec
jge
jl
mov
mov
rcl
mov
call
out
and
mov
mov
fwait
push
jno
fldl
xchg
inc
mov
dec
xchg
orl
cmpsb
jo
mov
push
cli
fcompl
add
or
test
mov
sbb
jg
dec
sub
mov
jp
jns
es
xor
fildl
pop
and
xor
sub
push
insb
std
cs
jmp
cmp
out
inc
mov
pop
mov
xchg
ss
movsb
std
push
jecxz
mov
pop
xchg
dec
cmp
cmp
stos
push
lret
pop
sub
test
and
pop
int
popf
cmp
sub
cmc
aam
mov
add
leave
sbb
push
fstpl
cld
out
cmp
add
and
fcmovb
lock
fcomip
or
jg
inc
mov
add
stos
jb
push
adc
rolb
add
je
mov
xchg
add
cmp
dec
fwait
xchg
sub
arpl
imulb
stos
rcrl
pusha
ret
mov
or
lock
mov
bswap
loop
outsl
ja,pt
arpl
mov
icebp
out
insl
adc
jae
adc
test
mov
imul
imul
dec
add
lea
fwait
sahf
xor
out
dec
push
push
imul
dec
jno
popa
rcll
add
mov
ja
mov
nop
sub
inc
cltd
adc
inc
incb
dec
sub
fwait
lret
add
xchg
mov
out
push
mov
push
in
xchg
out
mov
cwtl
and
xor
fsts
imul
dec
and
mov
rclb
jg
pop
xor
iret
movsl
xchg
lea
mov
xor
jns
test
add
inc
test
jbe
and
cmp
cmpsb
imul
push
lock
xchg
jo
or
pop
mov
pop
or
cltd
ds
ds
popa
xchg
es
imul
mov
adc
dec
ljmp
lcall
rclb
mov
push
or
stc
or
hlt
inc
mov
subl
cmp
in
push
ret
dec
add
and
sar
xor
mov
cmpsb
mov
das
xchg
out
inc
xchg
shl
shll
add
sbb
push
lahf
push
cmc
rcrl
rol
repnz
cmpsb
cli
mov
lret
jp
ljmp
push
lods
ret
sahf
lods
ss
imulb
inc
cmp
xor
outsl
pop
push
adc
fnstcw
dec
daa
sti
add
and
mov
lock
sub
aam
push
dec
inc
stos
mov
mov
sbb
or
rclb
sahf
rorl
mov
xor
push
movsb
dec
ret
int3
jge
and
jae
mov
out
lahf
mov
popf
push
imul
cmp
call
mov
jecxz
and
pop
sbb
pusha
push
repnz
shll
js
push
and
mov
jb
mov
sub
fildll
or
cli
xchg
jmp
sub
push
pop
loope
mov
add
push
lahf
jge
dec
mov
in
push
and
jg
xchg
pushf
xorl
adcl
cmp
jnp
add
jl,pn
std
xorl
lcall
imul
sub
sbb
mov
mov
adc
rorb
test
sub
jo
in
ror
push
data16
int
xor
imul
aam
jb
inc
and
jb
nop
mov
cltd
push
fcmovnu
xchg
mov
iret
jge
mov
in
outsl
xchg
icebp
add
icebp
sbb
dec
es
sbb
mov
ror
pop
out
pop
fists
stos
xor
push
mov
scas
mov
lahf
cmp
inc
loope
lahf
inc
dec
xchg
or
xchg
inc
push
ds
sbb
inc
fucomi
ret
mov
imul
sbbb
rorl
imul
cmc
and
add
mov
or
mov
mov
ficoml
add
dec
xchg
ret
stc
cmp
xchg
inc
lods
sub
pop
mul
das
sbb
shlb
jmp
stc
bound
aam
testl
mov
outsl
subb
mov
int
lret
sub
cld
push
xor
xor
sbb
cmpsb
movsl
mov
push
pop
js
fisttps
outsb
aam
or
dec
daa
scas
xchg
lods
stos
fisubrl
xor
pop
mov
xchg
mov
fistl
inc
int
lods
xor
in
cmp
cmp
push
mov
push
clc
outsl
into
sub
xor
dec
pop
xor
int3
xchg
sub
mov
lea
pop
mov
jb
xchg
and
out
push
mov
dec
add
xor
cld
andb
mov
repnz
jne
push
fcomps
mov
les
cli
mov
add
sbb
inc
clc
dec
mov
push
cmp
lea
sub
int
or
iret
dec
fdivs
popa
pop
repnz
divl
test
mov
das
gs
aaa
mov
pop
xor
int3
ja
sbb
push
push
cmp
insl
into
fprem1
jbe
in
add
xor
cmp
adc
mov
test
cmp
mov
stc
cmp
cmp
notb
pop
loopne
aas
or
push
rcrl
je
orl
mov
xchg
cmp
add
mov
outsl
fistl
push
adc
pop
xchg
pop
fs
pop
or
in
xlat
inc
sub
imul
jne
inc
out
rcrl
pop
dec
test
sub
movsl
jle
cmp
in
xor
mov
mov
gs
ds
fwait
jecxz
shrl
rcrb
push
mov
pop
sbb
pop
push
pop
pushf
inc
sub
add
xchg
outsb
sub
sbb
pushf
push
mov
jnp
add
popf
call
mov
push
dec
xchg
push
jmp
lea
pop
inc
xor
mov
xor
pop
inc
fsub
and
fisubs
xor
mov
jnp
adc
push
iret
pop
inc
push
mov
sub
fs
push
shrl
cltd
mov
mov
psraw
imul
fnsave
xor
cmp
enter
and
jns
push
jle
pop
aad
leave
lret
jge
mov
sbb
dec
adc
add
mov
or
stos
cmpsb
cltd
lods
mov
cmp
sub
inc
nop
lcall
xor
mov
pop
xor
or
adc
jmp
adc
cmpb
and
cmp
je
imul
sbb
mov
cmp
stos
jecxz
aaa
jns
cld
fmuls
pop
icebp
in
popa
cltd
and
sar
stos
and
or
sub
out
pusha
pop
mov
in
mov
jno
sub
scas
dec
jmp
mov
popf
xchg
jecxz
js
xor
out
mov
mov
popf
fisttpll
sar
outsl
mov
push
xor
jno
inc
mov
stos
sub
int
lahf
cmp
add
jg
lahf
inc
inc
mov
xor
jmp
jbe
insl
addb
jne
jns
in
xchg
idivl
cmp
add
or
cwtl
adc
shll
cld
mov
push
andb
xchg
icebp
adc
or
inc
loopne
mov
daa
gs
and
xor
push
or
pop
loopne
ljmp
or
add
jg
out
mov
sub
or
sti
pop
xor
mov
jmp
xchg
les
in
inc
mov
jo
out
faddl
ret
scas
imul
sarl
test
cmpsb
js
sub
pop
cmp
mov
cmc
pop
movl
fists
cwtl
clc
fidivrs
cmp
and
mov
mov
arpl
imul
shll
lea
push
repnz
repz
or
inc
repz
orb
mov
xor
xchg
daa
adc
stos
xor
inc
xor
inc
cmc
mov
imul
mov
sbb
push
mov
push
sbb
sbb
add
mov
arpl
jmp
lahf
inc
out
mov
pop
or
fdivrs
sti
jge
cmp
lods
sbb
cmp
cmpsb
fistpll
adc
mov
jbe
lahf
push
mov
lret
jp
lods
xchg
cli
jns
out
loope
push
mov
std
aad
ds
inc
xchg
mov
adc
adc
push
pop
cmp
icebp
dec
fucomi
clc
insb
xchg
stc
adc
mov
pop
shrb
loope
inc
cwtl
movsb
and
fadds
xlat
shl
mov
mov
jnp
test
and
out
pusha
sti
sub
cld
sahf
push
rorb
ljmp
adc
shl
jmp
pop
jbe
inc
or
push
into
pop
sub
mov
dec
scas
cltd
dec
fdivrl
das
xchg
add
inc
push
inc
cmp
rcl
int3
adcl
pop
pop
mov
popf
imul
les
mov
inc
and
cmp
outsb
sbb
xchg
popf
scas
mov
gs
xor
pushf
dec
in
out
mov
mov
push
dec
insb
push
fstps
enter
pushf
adc
fsubs
adc
mov
in
or
or
movsb
inc
xor
sbb
sub
div
sahf
test
dec
pop
jbe
sub
pop
pop
mov
fstpl
xchg
pop
cwtl
inc
push
cld
dec
mov
imul
int
popf
repnz
push
inc
incl
mov
rclb
mov
pop
ficoms
jecxz
sbb
mov
dec
pop
sub
pop
icebp
jbe
xor
or
test
frstor
pushf
ret
sahf
xchg
pop
repnz
lods
or
sti
sub
cmc
movb
lods
idivb
pusha
bsr
popa
nop
lods
jle
jmp
inc
imul
sbb
adc
bound
aad
daa
dec
pusha
adc
mov
imull
fwait
or
pop
mov
in
and
aaa
xor
ljmp
nop
pop
xchg
adc
dec
mov
push
mov
bnd
push
push
cmp
movsb
lods
add
mov
addr16
mov
frstor
int
push
clc
adc
pop
jge
xchg
add
mov
out
dec
jne
bound
sub
imul
sub
dec
fdiv
fs
xchg
dec
and
js
push
sub
fs
and
lcall
mov
fildl
push
pop
or
ljmp
mov
dec
xchg
ret
mov
loope
pop
add
cwtl
mov
jo
mov
dec
pop
ret
jns
lock
adc
test
sub
pop
cmc
push
daa
shl
js
pop
sub
ss
sub
pop
and
or
js
adc
xor
mov
scas
or
in
mov
movsb
popf
shlb
xor
loope
inc
push
jno
std
dec
pop
or
jle
push
or
pushf
scas
je
push
jns
inc
push
imul
nop
jl
stc
sbb
push
flds
stc
js
outsb
test
fs
xor
in
jp
push
aas
stc
and
psllq
mov
loope
loop
pop
pop
scas
lods
add
jmp
pop
jnp
xor
add
mov
ficoms
push
filds
xchg
sub
mov
mov
lret
pop
push
pop
inc
mov
lds
repz
outsl
sti
xchg
push
dec
push
lahf
sub
movsb
mov
arpl
pop
inc
push
mov
mov
add
aas
ja
lcall
fistpll
cmp
push
mov
roll
cs
xchg
mov
test
insl
ret
and
test
sub
pop
sbb
lcall
adc
push
mov
jne
xchg
rclb
adc
pop
xchg
fistps
movsb
sub
cld
add
sbb
or
pop
fldcw
cmp
popf
test
test
and
outsb
mov
xor
stos
aam
inc
pop
fsubp
addl
xchg
inc
mov
xchg
call
mov
pop
mov
push
xor
aaa
dec
jb
es
or
xor
sbb
inc
dec
into
mov
xchg
inc
rol
jae
incl
les
out
mov
call
call
mov
and
xchg
jmp
nop
shr
mov
je
cmpsl
add
push
xchg
mov
fcomp
and
std
xorl
pop
cmp
sub
push
cmp
jmp
jge
xor
sar
das
dec
ljmp
xlat
mov
movsl
addb
mulb
lret
loopne
or
shl
jge
jle
mov
insb
push
mov
cli
ljmp
push
sub
mov
aas
jns
xchg
and
icebp
xchg
xor
fimull
mov
push
cld
lds
xor
mov
xchg
jge
cmp
mov
hlt
fs
xor
xchg
adc
sbb
lock
push
dec
jne
fldl
insl
inc
cmc
pop
mov
jo
in
push
mov
dec
push
imul
push
adc
mov
hlt
sbb
fisubs
add
add
and
and
scas
ss
fstpl
adc
es
addr16
cmp
jnp
aad
popa
cmc
mov
add
xor
fisttps
out
xchg
inc
cmp
enter
jle
inc
mov
or
cmp
push
mov
ja
ja
insl
push
mov
mov
adc
daa
and
cld
xchg
push
sbb
jg
les
lods
insb
adc
dec
cli
mov
ficomps
jb
mov
les
loop
xlat
insl
rolb
mov
mov
ss
sbb
pop
dec
imul
hlt
adc
out
es
ds
iret
mov
aad
mov
push
stos
lods
add
cmp
mov
jp
add
xchg
jns
jne
mov
inc
pop
add
jp
and
pop
mov
inc
dec
imul
test
insl
mov
jnp
add
xor
push
jb
out
std
pop
jb
scas
mov
mov
sbb
lods
hlt
pand
icebp
ret
dec
sbb
lret
loope
push
ss
add
mov
xor
testl
icebp
pop
xor
or
movsl
jnp
mov
jnp
incl
sub
in
cmp
and
mov
mov
repnz
test
mov
jge
adc
mov
lret
mov
push
daa
push
aam
mov
sub
add
xor
test
outsb
jp
ss
cmp
xchg
nop
xchg
and
jnp
mov
mov
mov
xchg
mov
pop
les
int3
jbe
jge
mov
jb
shrl
sub
mov
or
outsb
sbb
out
push
push
movsb
cmp
push
adc
jo
lret
out
insb
ret
mov
cmp
mull
push
test
cltd
movsb
mov
pop
in
xchg
adc
mov
pop
repz
arpl
mov
lds
aas
imul
out
pop
and
adc
push
mov
xchg
shl
mov
mov
loop
or
add
jno
sbb
inc
rcrl
cmp
jo,pt
mull
adc
rorl
lock
sub
add
or
dec
xor
mov
clc
pop
mov
hlt
dec
cmp
das
mov
push
out
inc
sbb
test
xor
fcoml
in
push
inc
or
push
xor
fsubs
fnstcw
repz
icebp
imul
add
hlt
mov
shr
fs
sub
popa
ja
mov
test
test
sub
xchg
pop
push
insl
pop
sbb
mov
push
pop
xchg
rorb
aas
cmp
or
jg
mov
push
je
dec
jno
fldl
outsl
test
mov
enter
pop
ret
mov
in
bound
imul
repnz
inc
mov
or
fidivs
pop
rol
sbb
jecxz
xor
in
push
ss
mov
fmull
mov
insb
mov
ret
push
jne
arpl
mov
cwtl
mov
mov
std
inc
test
les
fcoml
xlat
arpl
jae
or
into
aas
jmp
push
add
add
and
mov
ss
fcoml
push
push
mov
and
mov
dec
jb
shlb
rcr
xlat
int
lahf
in
int3
call
xor
mov
xchg
jb
lods
fsubrl
pusha
adc
scas
jg
push
stos
pop
inc
xchg
add
jmp
mov
inc
pushf
insl
add
es
movsl
push
and
mov
push
push
or
inc
repz
mov
jns
fisubrs
icebp
mov
push
scas
fsts
xor
aas
mov
stos
imul
loope
mov
popf
ret
std
int
xor
xor
stos
pop
push
in
das
sarb
loop
inc
add
jmp
adc
stos
cld
sbbb
push
test
adc
jo
outsl
and
icebp
dec
dec
inc
jns
cli
call
push
in
mov
push
cmp
aas
stos
lahf
stos
pop
shrl
pop
arpl
aam
pop
out
cld
lds
pop
ljmp
subb
add
sub
std
gs
dec
paddq
dec
mov
dec
jnp
pop
ss
sbb
shl
sub
les
insl
aam
xor
leave
test
xchg
stos
stc
jecxz
je
and
jge
pop
iret
lret
notb
push
jbe
dec
adc
je
sub
scas
pop
insb
and
mov
xchg
or
fstpl
pop
dec
fcmovbe
shll
in
push
xor
mov
test
mov
cmp
xchg
xor
inc
mov
es
add
shlb
test
xchg
js
outsl
jns
dec
ja
dec
in
fdivrs
jg
mov
in
imul
xor
dec
out
pop
addb
ja
sub
sbb
in
mov
cmp
inc
repnz
pop
es
stc
jne
jnp
orb
repz
dec
jl,pn
sub
xor
jle
jns
add
jge
inc
or
mov
int3
and
cmp
xchg
inc
aam
dec
dec
into
cmp
mov
and
lods
or
jecxz
lahf
test
clc
pop
cmc
pop
fiadds
in
popl
cmc
push
and
sti
inc
mov
stos
xchg
pop
fsubrs
or
cmp
push
imull
loope
mov
sub
cmovb
es
leave
cwtl
adc
jns
cmpsb
mov
add
pop
lods
dec
test
in
and
sbb
rorb
xlat
out
cltd
sub
lret
int
cmp
dec
insl
scas
sub
scas
aam
in
test
push
push
adc
outsl
mov
rcr
jecxz
cmp
mov
fbstp
jge
lea
or
popa
adc
mov
ss
push
cmp
push
xor
std
and
sbb
int
outsl
jge
mov
mov
popf
sbb
jp
or
cwtl
lret
mov
lea
mov
sub
push
adcb
pop
mov
push
int
int
cmp
or
sarl
and
push
iret
cwtl
jp
int3
jp
aaa
movsb
xchg
sbb
xor
andl
stos
mov
cmp
enter
pop
push
jg
lods
mov
mov
repnz
add
pop
fnsave
es
fs
adc
sbb
sub
and
das
aam
jecxz
insl
test
sbb
sbb
jno
lcall
and
cmp
btc
in
inc
push
pop
movl
in
add
movsl
out
adc
ror
or
mov
shlb
sub
clc
ds
mov
sbb
sub
imul
xchg
je
nop
or
loope
or
into
xor
inc
negb
scas
xchg
daa
adc
mov
push
imull
lcall
lea
adc
jo
jge
imul
and
into
iret
mov
mov
cmpsb
into
dec
mov
cmp
sbb
movsb
add
movsb
xchg
lock
xorl
xchg
aaa
dec
mov
mov
bound
lea
fs
mov
dec
pop
dec
imul
push
gs
inc
push
mov
cmpb
lahf
pop
idivl
or
repz
dec
jae
adc
inc
and
aaa
push
ret
scas
or
jnp
rcl
ret
subb
add
inc
cmp
fsubr
add
mov
xlat
inc
fidivl
and
data16
xchg
in
pushf
mov
pop
pop
test
in
jb
imul
lods
es
fwait
enter
cmp
inc
enter
loope
sub
je
dec
scas
jmp
add
add
xchg
call
adc
pushl
cmp
cmp
popa
cmpl
adc
out
in
aas
xchg
lods
pushl
mov
hlt
dec
test
add
incb
data16
and
xchg
xchg
aam
xchg
pop
mov
leave
xchg
inc
imul
stos
mov
xor
push
mov
in
and
push
mov
fadds
xchg
lods
xchg
push
mov
in
push
mov
es
push
xor
addr16
and
push
mov
loope
lods
pushf
mov
outsl
repz
xor
aaa
arpl
cmp
inc
push
dec
testb
cmp
jns
or
movsl
dec
inc
insl
adc
xchg
in
dec
sbb
add
cmp
test
add
loop
pop
ds
jmp
popa
js
dec
jns
movsl
sahf
insl
rclb
pop
ficoms
adc
jl
pushf
cmp
cmp
pop
sbb
imulb
and
cmp
stc
jb
cmp
pop
and
sbb
adc
xchg
popa
clc
mov
xlat
jl
pop
xchg
int
rcll
test
iret
sarb
cmc
add
adc
pushf
aam
movsb
mov
adc
xor
jmp
ret
cli
sbb
sti
push
fldt
aam
ficompl
insb
in
ja
mov
pop
daa
sbb
push
cmc
mov
mov
lock
dec
jne
arpl
sub
dec
mov
aam
pusha
ret
jb
test
mov
scas
and
xchg
mov
jb
es
ffreep
mov
cmpsb
pusha
out
lret
lods
sbb
add
icebp
test
ss
mov
aam
sbb
sub
or
ss
or
insb
roll
adc
add
pushf
fs
inc
ljmp
mov
xorb
loope
lcall
xchg
std
sbb
jl
mov
jl
mov
iret
and
sar
lret
cwtl
enter
cmpsb
in
or
aad
mov
cmpsl
loopne
sbb
cltd
mov
inc
sbb
jbe
xor
mov
dec
or
mov
insl
lods
lods
cwtl
mov
pusha
mov
or
lret
mov
inc
scas
dec
pusha
shl
xchg
mov
adc
cmpsb
rcrb
popf
or
cmp
mov
mov
push
xor
push
and
pusha
cmpsb
ja
adc
push
push
js
mov
loope
fstl
cli
out
jge
bound
pushf
jns
sahf
into
sti
inc
inc
fs
rcr
and
push
addl
push
cs
sub
pushl
ret
rorl
jne
repz
ljmp
out
adc
jle
pop
add
inc
loopne
lret
pop
jecxz
mov
mov
fdivrl
pop
push
jnp
jns
jno
pop
fidivl
aad
lcall
insb
sbb
fdivs
cmp
cld
jmp
aaa
into
shl
sub
insb
jns
cmpsl
pop
inc
add
orl
repz
dec
inc
inc
pop
jge
ljmp
leave
out
cmpb
or
sbb
hlt
jle
inc
out
pop
and
sub
outsb
adc
xlat
and
mov
icebp
cmp
pop
jae
shll
push
das
mov
cmp
pop
jl
xor
insl
inc
jmp
cli
test
pop
fidivl
dec
sbb
test
dec
cmp
outsb
lock
fwait
mov
in
dec
cmp
cld
or
std
cli
mov
adc
push
mov
fsubrp
insb
in
fildl
bnd
push
mov
xor
inc
hlt
gs
pusha
mov
jno
mov
imul
loope
adc
fs
cwtl
sub
pop
loopne
lds
and
fucom
inc
mov
fadd
jl
hlt
aaa
negl
cmpsb
stos
arpl
dec
push
aaa
in
push
inc
int3
inc
push
loop
inc
enter
dec
mov
iret
mov
cld
pop
or
jmp
rcr
xor
dec
imul
jns
movb
stos
sbb
leave
cmp
sbb
adc
insl
cs
mov
and
fdivrp
sub
sahf
scas
push
mov
dec
jo
jbe
push
inc
pop
loopne
inc
cmpsl
inc
pop
adc
xchg
shrl
pop
cmp
jb
fnstsw
shll
fdivs
jns
fcmovnb
mov
pop
jp
sbb
jb
and
movsb
xorl
ret
pop
divl
inc
push
inc
ds
mov
adc
push
push
int3
sbb
cmpsb
ja
inc
push
outsl
xor
fcoml
sahf
mov
jb
add
pop
outsl
xor
adc
daa
mov
xlat
push
cmp
mov
cmp
cmp
fimuls
jne
in
insl
sbb
push
mov
cwtl
sub
sbb
xchg
xchg
jae
add
mov
push
pushf
xor
cli
leave
dec
out
and
or
sub
jecxz
lods
sub
repnz
sub
sbb
sub
mov
jb
jbe
lock
inc
cmp
mov
test
push
lods
xor
sub
scas
into
and
jo
std
cli
dec
add
cmp
loope
add
call
xor
les
hlt
fdivl
adc
out
das
mov
pop
adc
cwtl
xchg
xor
aaa
int3
pop
adc
push
test
cmp
sub
pop
cltd
pop
loopne
cli
mov
mov
outsb
add
fmul
sub
adc
xchg
jbe
dec
outsb
scas
fsub
jecxz
pop
xlat
push
mov
data16
or
sahf
xor
mov
push
rorb
mov
mov
fisubrs
fsts
pop
jns
fistpl
mov
adc
fstps
and
lcall
outsl
inc
jmp
mov
pop
adc
jo
jo
xchg
adc
mov
data16
cltd
mov
dec
jmp
add
cs
dec
fsub
pop
in
push
fildl
cmpsl
dec
mov
jo
adc
popa
call
rcl
lcall
popf
jecxz
pop
out
aam
mov
sub
xor
lods
push
fnstenv
mov
sbb
jge
mov
pop
lahf
mov
fmull
add
adc
jne
jle
sub
lds
cli
lea
jmp
filds
popf
int3
mov
in
jb
push
mov
roll
shr
sbb
cmpsl
xchg
xchg
mov
lret
xor
sub
inc
mov
mov
ja
add
repz
aaa
ret
jmp
int3
insb
lock
jge
pop
jmp
sbb
mov
int
mov
fisttpl
sbb
cmp
xchg
pop
push
xchg
psubusb
clc
je
pusha
sub
les
out
mov
int
sub
out
aas
mov
cmpsb
ret
mov
into
push
scas
out
mov
in
jo
clc
mov
stos
ds
int3
into
add
sub
xor
or
mov
fldenv
popf
mov
pop
inc
jge
out
dec
out
or
leave
push
pop
cli
or
sbb
enter
aas
pop
sbb
jae
jae
adc
sub
jbe
lret
xor
jo
xchg
dec
xchg
leave
sbb
sbb
jmp
imulb
or
ret
popa
mov
es
mov
push
out
adc
leave
out
jl
rcrb
fdivl
cwtl
inc
pop
mov
pop
test
in
icebp
push
adc
out
and
inc
cld
jno
nop
adc
ss
mov
cmp
xor
push
cmp
lods
in
in
xchg
sbb
xchg
xlat
rclb
bound
xchg
mov
sub
insb
push
in
jnp
jns
dec
or
sbb
ficompl
and
jecxz
inc
jbe
adc
xchg
and
inc
mov
sub
iret
negl
test
mov
and
js
fs
je
loope
cmp
sarl
stos
addr16
pop
or
imul
push
cli
jnp
pushf
sub
and
and
dec
outsl
call
mov
add
inc
cmpsl
xchg
fcoms
dec
inc
mov
dec
inc
pop
adc
rcrb
mov
clc
fsubs
lahf
mov
sub
xchg
shlb
and
icebp
imul
sbb
fsubr
test
aad
sbb
outsl
sahf
sbb
adc
sti
pop
mov
pop
lods
orl
addl
repz
icebp
sbb
gs
inc
mov
mov
jne
mov
pop
lret
sahf
aam
pushf
ljmp
ljmp
stc
jb
push
std
unpckhps
aaa
or
push
mov
cmc
loope
cmp
mov
nop
fnstcw
fldt
jmp
and
es
sub
sub
bound
jecxz
call
inc
jne
hlt
inc
loop
adc
mov
scas
lret
xor
xchg
int3
xchg
sub
mov
push
daa
jmp
ljmp
dec
movsb
push
inc
fnstcw
xchg
inc
les
mov
insb
xchg
xchg
cmc
cwtl
repnz
mov
push
test
loopne
in
fsts
test
sub
int3
pop
sbb
pop
mov
cli
fwait
mov
jae
in
and
adc
jp
fiaddl
imul
int
xchg
fiaddl
mov
pop
mov
aaa
loop
push
inc
push
imul
rorl
pushf
out
jge
insl
inc
rcrl
ds
movsl
hlt
mov
xorb
loop
cmpb
aam
push
imul
adc
cmpb
fldt
loop
mov
lods
mov
jo
cli
sahf
mov
aad
test
nop
inc
cs
stc
jle
jbe
jg
into
dec
jns
sbb
cmp
test
jae
int
pop
jo
fcom
shll
scas
push
xchg
mov
movsb
inc
mul
xchg
xlat
push
and
jle
cwtl
and
das
add
push
mov
scas
mov
mov
shrl
lods
sarb
ss
lret
pop
movsl
ljmp
cmp
es
jp
divl
inc
jnp
or
iret
jnp
cmpl
fcmovb
and
sbb
adc
mov
sub
shlb
and
mov
mov
adc
xor
mov
xchg
repnz
jbe
icebp
mov
xchg
dec
leave
aad
loopne
movsb
jnp
rcl
iret
xor
outsb
aas
scas
adc
pop
dec
xlat
pop
fcomi
std
rolb
mov
push
jecxz
push
insb
scas
add
pop
outsl
insb
push
jecxz
jge
push
ret
imul
sahf
xchg
lea
xchg
in
lea
pop
lea
jp
int3
sbb
imul
jns
mov
xchg
push
jge
clc
or
or
addr16
xor
xchg
repnz
pop
shlb
xor
and
pxor
roll
pop
popf
dec
and
fildl
dec
push
xchg
pusha
lea
ret
pop
jp
jp
outsl
push
push
sti
inc
and
mov
push
push
or
movl
pop
int3
xchg
inc
push
pop
popa
dec
xchg
pop
lret
fs
pop
sub
cs
push
dec
imul
nop
cmp
inc
sti
into
fnstenv
push
test
xchg
cli
pop
jns
and
cmp
fs
cltd
ja
out
cmpsl
mov
cmp
lcall
jl
out
mov
mov
mov
into
shlb
push
aaa
pop
ss
insl
lds
fsts
popa
push
mov
push
add
push
or
push
int3
inc
int
lcall
cli
or
enter
jp
fmul
xchg
inc
sub
outsl
hlt
mov
adc
mov
pop
insb
nop
dec
jp
cmp
sub
sbb
xor
jge
xchg
mov
pop
jp
sub
es
mov
sub
mov
insb
stos
xorb
sbb
jae
data16
popl
pop
adc
mov
or
mov
stos
cmp
push
xor
mov
jbe
dec
xor
scas
mov
lods
pop
add
insb
outsl
cltd
cmc
cltd
jbe
cmp
xor
push
je
ja
pop
lar
jns
arpl
iret
addw
inc
or
push
lret
mov
sahf
lret
ljmp
or
inc
mov
xchg
push
xorb
inc
mov
cli
test
mov
ret
je
adc
inc
ss
imul
arpl
hlt
or
leave
mov
mov
jbe
xchg
insl
jno
jecxz
jge
shll
inc
lea
js
dec
das
mov
insb
adc
jnp
mul
mov
jmp
sahf
cmp
dec
mov
jbe
jns
mov
aaa
aad
cld
xchg
inc
dec
ret
mov
xor
insl
pop
sahf
push
sbb
adc
dec
ss
cmpsl
loopne
mov
jnp
adc
out
xchg
cld
sahf
les
inc
jecxz
cwtl
movsl
loop
scas
push
test
loope
jno
data16
repnz
mov
into
pop
sub
xchg
and
pop
out
out
xchg
out
das
push
sub
orb
in
mov
mov
loope
arpl
inc
pop
ficomps
pop
repz
fdivr
idiv
add
dec
xchg
lahf
inc
ja
mov
mov
out
lret
leave
aaa
xorl
sub
adc
push
and
push
loop
testb
das
mov
mov
lods
mov
loopne
jecxz
sbb
in
jnp
push
fwait
daa
divl
adc
cwtl
mov
outsb
mov
pop
push
cmp
outsb
xchg
jbe
add
icebp
popf
mov
adc
pop
pushf
sti
cmc
aad
dec
xor
lret
pop
xor
push
mov
outsl
stos
cli
pop
popf
aaa
xor
pop
dec
or
lds
fnstenv
sub
sbb
test
push
jle
cmp
mov
ret
pop
mov
push
add
push
addr16
sbb
dec
dec
scas
std
jecxz
add
xchg
add
cs
sbbl
sub
cwtl
and
pushf
inc
cli
mov
loope
fldl
leave
mov
xchg
inc
adc
cmp
jb
mov
xor
int
ja
jb
mov
pop
jno
push
cmp
mov
cmp
cmpsl
lock
dec
mov
mov
jae
sbb
shrl
cs
dec
lret
jno
push
mov
fsubl
sarl
mov
sbb
and
adc
and
sarl
data16
mov
movsl
mov
lcall
cmp
jge
cmp
pop
or
ljmp
cmp
mov
jmp
push
push
popa
movsl
das
inc
dec
cmpsb
aas
inc
or
lret
movsl
lods
lock
mov
rorl
adc
ret
dec
inc
and
fwait
loop
lea
pop
nop
mov
xchg
arpl
icebp
jle
repnz
pop
rcll
stc
mov
push
out
fists
stos
jno
add
or
xchg
sbb
xchg
mov
aaa
add
push
fyl2xp1
loope
xor
mov
adc
sub
inc
mov
sti
sbb
and
jge
or
adc
adc
mov
xchg
test
xor
rclb
push
xchg
or
ss
xor
pop
adc
loop
dec
dec
imul
adc
dec
cmp
popf
mov
into
mov
shll
sbb
insl
je
adc
pop
add
xchg
inc
or
stos
xchg
fcmovbe
test
sub
jmp
in
es
or
mov
cmpsb
xor
mov
aaa
pop
stos
ds
xchg
or
inc
inc
cmp
rclb
sub
lea
adc
in
jbe
xor
add
sbb
movsb
shrb
fs
add
lret
sub
push
push
cli
js
adc
lea
movsl
mov
sub
movzbl
iret
fdivp
push
out
push
repz
arpl
xor
xor
mov
stos
not
add
cmpsb
rcrb
or
ds
out
or
addr16
mov
mov
mov
les
ja
pop
cmp
mov
iret
jb
dec
or
or
rorb
stos
imul
cmc
push
imulb
call
push
push
xchg
aad
sub
mov
mov
jge
fdivr
rcrb
lcall
dec
xor
out
xor
inc
js
sti
cs
cs
mov
add
jge
and
or
sbb
jae
and
test
mov
aad
inc
pop
in
popa
out
push
fwait
in
xlat
mov
xor
push
out
dec
or
cmp
mov
cld
push
scas
inc
out
adc
mov
push
mov
popa
imul
stos
and
pop
inc
sbbl
repnz
movsb
cli
sbb
mov
xor
sbb
cld
and
pop
scas
lahf
mov
icebp
sarb
push
fmulp
cmp
data16
sub
cmp
leave
call
cli
mov
lds
testl
ljmp
rcll
mov
repnz
sbb
sti
popa
sbb
sub
mov
dec
inc
lcall
mov
pop
loopne
aam
push
mov
fs
pop
sub
lods
adc
push
ljmp
adc
loopne
gs
aam
fadds
loopne
xor
cli
enter
add
jle
push
hlt
mov
mov
loop
xchg
jp
dec
xor
pop
fcomp
dec
mov
cmp
push
sub
inc
adc
push
ret
xor
jno
aas
mov
in
jl
dec
mov
mov
adc
pop
mov
cmc
popf
push
insb
test
bound
lds
and
mov
bound
out
fsubr
and
clc
jecxz
xor
aas
xor
adc
lahf
sub
cmp
jge
cmpsb
mov
dec
dec
mov
or
jnp
ds
pop
and
fildll
add
xchg
xchg
daa
pop
cmp
mov
out
mov
sbb
cmp
xchg
inc
mov
jmp
mov
cli
loope
imul
cmp
arpl
pop
and
ljmp
mov
or
mov
pop
sub
out
xor
sub
xchg
call
or
test
xchg
push
dec
aam
mov
pop
fs
mov
pop
mov
push
sahf
sub
inc
dec
cmp
adc
shlb
adc
xor
add
add
loope
movsl
xchg
cli
mov
inc
lcall
mov
jmp
sbb
ret
pop
roll
pop
or
lds
loopne
lahf
into
mov
mov
hlt
or
xor
push
dec
pop
insl
sbb
mull
jecxz
sub
ljmp
xchg
movsb
popf
pop
sahf
fwait
mov
stc
enter
arpl
inc
iret
mov
xor
mov
dec
cld
stos
out
cmpsl
loop
movsl
popa
aas
and
push
imul
aaa
data16
dec
cmp
lods
iret
imul
bound
mov
push
mov
imulb
sahf
in
sbb
imul
mov
mov
xor
fldenv
mov
aad
dec
xchg
das
add
mov
into
xchg
jle
and
push
jnp
lods
js
movsl
addr16
adc
ret
and
push
leave
cmpsb
adc
jae
mov
xchg
cmp
mov
fisubs
sbb
paddusw
fstpt
xchg
xor
add
sarb
jns
cld
mull
repz
mov
leave
gs
sbb
inc
add
mov
xor
add
test
arpl
push
dec
xchg
or
xor
lret
mov
pusha
stos
aam
cltd
nop
mov
mov
stos
mov
cmp
iret
lcall
xchg
jl
sbb
mov
jecxz
mov
out
fs
jbe
out
xchg
adc
add
xchg
pop
dec
mov
cli
fsubl
lods
and
cmp
mov
hlt
js
aas
fsubrs
pusha
add
and
out
lahf
sub
pmuludq
shl
add
enter
movsb
push
je
mov
andl
das
popa
out
mov
jge
jne
and
xlat
clc
adc
bound
push
and
pop
xchg
pushf
jl
xlat
xchg
or
jb
in
arpl
int3
jno
jl
jae
mov
adc
mov
std
sahf
xlat
mov
xorb
inc
jmp
mov
xlat
jne
cld
mov
data16
cmpl
mov
dec
mov
jbe
mov
aam
cld
in
mov
mov
sbb
mov
xor
mov
lahf
push
nop
out
push
shrb
sbb
mov
faddl
push
lahf
mov
pushf
fldt
stc
sub
rcrl
jbe
lock
mov
sbb
cmc
sub
out
mov
xchg
mulb
call
es
add
daa
pop
test
pop
adc
aam
leave
daa
adc
test
lods
test
in
cmpsb
inc
xchg
test
ret
les
jl
xor
insb
push
in
pop
loopne
xchg
push
insb
and
sbbl
xchg
int
jle
insb
ljmp
fstpt
xor
icebp
or
sbb
aad
lods
in
cs
jecxz
cmp
dec
sbb
xchg
addr16
sub
mov
dec
daa
stc
dec
ret
aaa
out
out
orl
cltd
pop
sbbb
int
aam
ja
out
movsb
mov
jne
scas
popa
xlat
lcall
fs
cmp
mov
inc
sbb
fsubr
jge
push
lea
jno
ljmp
add
roll
cli
sub
pop
inc
mov
imul
sub
jo
inc
adc
jns
inc
in
lahf
pop
xlat
xor
jo
ljmp
adc
and
inc
pop
int3
cli
imul
add
insb
aad
xchg
dec
jp
push
sti
fnstenv
bound
aaa
cmp
jns
lods
lcall
sar
leave
outsl
jecxz
ficoms
xor
loope
sbb
xchg
xchg
stc
rol
mov
push
fstpl
ja
jne
out
cltd
push
mov
sub
mov
imul
gs
sub
jg
jecxz
lock
lcall
subb
std
das
shlb
cwtl
xlat
jg
push
adc
test
imul
jne
jbe
jb
or
ss
xor
inc
hlt
or
shrb
addb
fcomps
jg
idiv
shll
insl
imul
cli
add
sbb
lcall
push
rcrb
jno
xor
push
test
mov
clc
mov
sbbl
xor
hlt
es
shrl
scas
ja
pop
stc
pushf
popa
dec
mov
out
test
mov
fnstsw
sarb
jg
xchg
push
hlt
cmp
into
jo
push
sub
and
fistps
pop
push
js
data16
loop,pt
jne
dec
lret
fildll
mov
jo
fs
mov
testb
outsl
pop
es
shl
inc
mov
lods
sub
rcll
stos
cmp
mov
jge
inc
aam
cmpsl
sbb
pop
je
push
jne
ja
dec
xchg
enter
inc
mov
xor
call
loop
push
aad
scas
xchg
or
mov
leave
jae
or
sub
add
test
addr16
xchg
sub
mov
xchg
call
or
jno
cs
stos
push
push
shlb
xor
jae
clc
adc
pop
fldlg2
dec
jg,pt
cmp
mov
sbb
lods
dec
push
fwait
adc
ss
push
jno
das
clc
aas
cmp
out
or
mov
jp
repz
and
mov
cmp
out
shll
fs
ret
jae
push
std
mov
sti
inc
or
ljmp
pop
stos
and
clc
push
mov
cld
add
push
or
lea
lock
cmpsl
lahf
xor
loope
js
sti
xor
sbb
or
jg
inc
fisubs
cmp
inc
shr
mov
push
cmp
adc
cmpsb
fistpl
xor
idiv
in
dec
cltd
popa
push
inc
pop
jecxz
mov
leave
or
pop
pop
js
push
or
and
adc
adc
ja
ja
pop
adc
pop
or
xor
mov
nop
in
cmp
out
lahf
cmpb
fidivs
fmull
mov
leave
daa
imul
clc
mov
js
cld
sbb
xlat
jnp
stos
adc
dec
push
mov
push
xchg
pushf
stc
jmp
jb
cltd
loope
push
decl
pop
push
push
or
dec
dec
in
sbb
cmp
dec
fstp
add
fstpl
and
jo
dec
and
shlb
or
add
cmpl
ja
push
out
rclb
push
out
out
add
sub
mov
outsl
sub
push
adc
xchg
outsb
fxch
or
popa
jmp
push
push
int3
mov
xchg
add
ror
in
sarb
add
sbb
test
loope
mov
inc
dec
mov
sub
dec
in
cmp
cld
cmpl
jnp
loope
dec
add
aam
dec
mov
cltd
adc
mov
imul
pop
rcl
sbb
test
minps
jb
jno
idivl
test
std
mov
push
clc
ss
mov
sub
sub
xor
out
scas
xor
arpl
pop
or
cmpsl
stc
mov
iret
pop
out
dec
or
lods
in
sahf
test
mov
imul
lock
dec
and
xor
mov
jge
push
loop
mov
mov
or
pop
xchg
xchg
test
jl
push
pop
mov
push
adc
xor
pushw
aad
popf
popf
fsubrs
pop
xchg
dec
sbb
leave
and
dec
je
jbe
rclb
mov
jl
push
cld
addr16
cmpsb
push
push
push
or
mov
lods
jb
pop
cmp
mov
stos
insl
xlat
jns
fcmovu
cli
inc
cmp
stos
jmp
push
sbb
cmpsb
dec
stc
push
sub
lods
popa
scas
push
dec
adc
add
dec
icebp
ja
pop
jne
roll
cmpsl
pop
cmp
push
mov
rorb
dec
cmp
xchg
and
adc
dec
dec
cmp
mov
mov
adc
fisubs
dec
lret
inc
push
imul
dec
fdivrs
inc
cli
andl
mov
lahf
jnp
cmpl
inc
xor
push
rorl
jb
mov
popf
nop
and
cltd
das
jne
xchg
and
in
inc
jg
cwtl
adc
sub
pusha
sbb
xchg
inc
jg
clc
sub
je
pop
mov
add
adc
mov
xor
dec
popa
xor
inc
push
inc
sbb
xchg
int3
xor
xchg
cmp
cmpsb
add
push
pop
fxch
in
jbe
adc
mov
aad
push
mov
inc
in
xor
test
jg
fs
mov
and
movsb
cmp
cmp
fnstcw
push
sub
adc
outsl
fwait
add
pop
fildl
int
aaa
outsl
in
dec
adc
xor
sub
mov
or
jnp
mov
movsb
imul
xchg
sbb
int
cmp
aaa
pop
cwtl
jg
xchg
mov
pop
push
icebp
add
jecxz
jecxz
mov
fimull
cs
roll
inc
adc
xlat
pop
int
orb
xor
xor
popa
adc
jle
ja
icebp
movsl
mov
dec
leave
cmpsl
addl
jecxz
mov
scas
pop
int
lret
imul
mov
dec
pop
outsl
fldt
add
mov
jnp
pusha
push
cmp
mov
out
filds
jle
std
push
pop
int
push
imul
pop
push
stc
jne
lret
lcall
mov
dec
or
adc
mov
cli
push
adc
fucomip
jp
ds
jb
cltd
movsl
adc
outsl
lods
testb
das
clc
add
aaa
cmp
mov
test
fistps
jbe
and
fsubrp
inc
shl
xorb
push
and
sub
clc
mov
or
sub
insl
loop
ja
lahf
ds
xlat
mov
hlt
sbb
test
arpl
dec
sbb
jbe
mov
out
mov
shll
aad
mov
fmul
xor
cmc
and
cltd
or
mov
std
mov
xor
jecxz
fwait
push
push
add
into
leave
bound
pop
scas
rcr
xchg
mov
sbb
cltd
xor
fsub
nop
cmp
shll
dec
in
pushf
xor
leave
pop
cmc
ret
mov
pop
rcrl
sbb
jl
stos
loop
push
lods
fcompl
cmpsl
jb
add
xchg
sarb
push
movsb
push
xchg
adc
pop
push
clc
xchg
scas
movsb
sbb
fs
and
movsl
fwait
push
or
popf
leave
xchg
aas
push
leave
mov
cs
xor
xlat
ja
jle
add
test
jle
inc
mov
lock
push
cmp
out
jmp
js
repnz
nop
stos
fildl
and
test
shll
jl
aaa
mov
adc
jg
add
dec
icebp
jo
mull
jo
gs
stos
adc
or
in
loopne
push
aaa
clc
test
pop
popf
cld
push
mov
mov
repnz
pop
and
fisttpl
adc
in
inc
fwait
cld
adc
jae
shrl
push
jne
xchg
cmp
pop
pop
adc
mov
pop
lahf
inc
jp
dec
xor
cltd
sub
or
sti
inc
push
aam
lcall
xor
push
flds
push
gs
xchg
lods
adc
jne
or
pop
lcall
stos
ds
jmp
dec
stc
mov
dec
aas
inc
mov
out
inc
xchg
out
test
or
mov
loop
xchg
incl
aam
mov
daa
mov
mov
call
cmpsb
lods
jge
adc
pop
add
fmull
call
pop
or
in
test
aaa
adc
stc
sbb
or
ret
or
pop
lock
push
icebp
mov
push
mov
mov
jmp
mov
pop
ret
and
int
lret
aaa
pop
push
xchg
mov
pushl
cmp
aas
outsb
sub
mov
push
pop
inc
shll
fdivrs
jg
lahf
and
sahf
inc
xor
push
bound
wrmsr
and
dec
cmpsl
mov
scas
sub
mov
shrl
cmpsb
xlat
sub
jbe
into
adc
sbb
dec
pshufw
sub
mov
fldl
ret
lods
cmp
cwtl
xor
shrl
dec
cmp
popa
mov
int3
push
push
ljmp
aad
and
fs
fstl
fwait
or
dec
std
ret
stos
es
add
in
in
lahf
test
addb
insb
negb
ja
pop
mov
inc
in
xor
lea
out
xchg
cmp
daa
iret
pop
test
test
jmp
test
pop
lock
pop
pop
jge
mov
and
xchg
cmp
lock
or
sub
pop
jp
mov
sub
and
cmp
insl
add
flds
movsbl
loop
mov
fxch
fimuls
pop
xchg
jo
stos
enter
mov
inc
mov
add
pop
mov
cmp
jg
setno
dec
rorl
pop
nop
cmp
cmp
sub
mov
loop,pn
push
mov
mov
jns
xchg
jns
jb
gs
dec
scas
outsl
sbb
add
add
sbb
std
add
call
push
jmp
xor
enter
aam
fucomip
cmp
xchg
inc
leave
pop
lret
add
mov
sbb
idivl
aas
dec
xchg
in
sub
jo
daa
mov
pop
je
ret
lahf
sbb
scas
jae
adc
jp
inc
adc
adcl
fsubrl
and
addr16
sbb
inc
insb
int
xor
pop
and
jo
sbb
aad
xor
cmpsb
and
icebp
fucom
andb
scas
mov
ret
mov
stos
dec
inc
stc
cmp
int
adc
jg
sarl
inc
cmp
fsubrl
push
out
repnz
jle
int
test
cmc
sbb
pop
mov
jb
cmpsb
mov
xchg
push
cmpsb
push
movsb
sbb
fstpt
cs
jno
jnp
das
js
cmp
mov
pop
aad
push
pop
jns
push
or
outsb
out
jp
dec
cmp
sbb
adc
or
jg
sahf
mov
testb
sbbl
fwait
arpl
out
add
js
dec
sti
inc
mov
mov
push
cmpb
adc
cmp
dec
push
dec
push
iret
mov
pop
sbb
or
mov
push
ret
mov
jge
and
push
repz
xchg
sahf
jl
adc
fs
in
push
mov
push
out
mov
sub
int3
arpl
out
rorl
push
and
je
adc
je
mov
ljmp
mov
cmc
xchg
shlb
inc
jns
cmp
xchg
ret
cwtl
or
cs
sbb
pop
sti
stos
das
test
sub
cmp
mov
inc
inc
mov
dec
mov
fadd
mov
dec
loope
jg
les
flds
jno
rol
and
fucom
cld
adc
cmc
inc
icebp
mov
aas
and
ret
sbb
inc
push
movsl
addr16
das
lock
shlb
clc
pop
xchg
cwtl
push
inc
pop
cmpl
adc
icebp
push
xor
addb
mov
jmp
cmp
les
jb
les
cwtl
and
out
aas
andb
ret
push
test
daa
and
cli
jo
outsl
mov
out
jnp
xchg
adc
ds
cltd
cwtl
stos
mov
or
cld
push
mov
adc
movsl
aaa
out
jns
aas
mov
arpl
xchg
in
outsb
addr16
rol
fisttpll
xchg
add
pop
push
ja
int
jns
mov
pop
pop
xlat
push
mov
in
jg
repnz
into
jo
aad
bound
testl
pop
push
clc
out
cmpsb
fwait
and
adc
mov
add
or
pop
int3
sub
or
xchg
js
push
mov
nop
adc
push
or
mov
repnz
loopne
arpl
clc
fsubrl
movsl
call
pusha
mov
hlt
inc
fimull
int3
arpl
sbb
xor
or
enter
push
mov
orl
lds
xchg
mov
add
sbb
inc
jne
xor
lds
add
pop
cltd
leave
cltd
mov
push
mov
or
popa
add
fistl
mov
sbb
test
mov
xchg
stc
in
or
sbb
imul
adc
pop
pop
fildll
js
mov
scas
jne
adc
daa
jns
lahf
and
sbb
xor
jo
ja
cmc
aas
jo
in
mov
xorl
das
push
pop
icebp
int
mov
pop
pop
inc
mov
xchg
lret
mov
mov
cmp
in
dec
mov
fadds
inc
cmp
aas
adc
add
insb
jno
mov
test
stos
gs
es
jbe
add
pushf
ficomps
int3
cmpsl
mov
fistps
movl
mov
mov
xchg
sub
push
adc
jns
push
cmp
xor
mov
dec
push
mov
not
lds
adc
mov
pushf
filds
add
jo
pop
inc
push
add
push
jns
negl
adc
mov
data16
lods
int3
sarl
and
ficomps
dec
hlt
sarb
sub
pusha
aam
dec
xor
pop
cmpsb
mov
insb
cli
dec
mov
push
fs
inc
ret
push
mov
push
xchg
inc
outsb
pop
jb
test
cmc
sahf
inc
repnz
xor
or
negb
jae
leave
adc
repz
out
test
test
mov
or
and
pop
clc
push
insl
lods
cli
mov
enter
cwtl
mul
xchg
negl
pop
iret
sub
out
dec
xor
xor
loopne
mov
enter
aaa
and
xchg
cwtl
or
int
out
out
addr16
sbb
jb
push
inc
mov
lds
xchg
push
xor
aas
pop
add
test
mov
xchg
sbb
inc
push
mov
in
jae
aaa
sbb
xchg
leave
xor
push
testb
sbb
stc
aad
cltd
and
pop
mov
hlt
loop
xchg
les
pop
cli
addr16
inc
out
rep
insb
incb
mov
jmp
cmpsl
cli
cltd
jp
cltd
lods
rolb
push
scas
push
cwtl
xchg
inc
cs
jge
and
gs
sub
mov
fsubrs
cs
je
mov
sub
xor
pop
or
fs
mov
add
mov
repnz
iret
cmp
inc
cmpsb
test
icebp
pop
arpl
mov
daa
out
or
repz
nop
rclb
inc
sub
out
add
in
out
jb
loopne
sahf
inc
inc
rcll
mov
insl
or
adc
jecxz
jle
dec
cmp
lock
jno
xchg
adc
push
fs
xlat
sbbb
lock
aaa
call
sbb
cmpsb
mov
cmp
into
push
fisttpll
jge
jle
mov
push
and
loop
fwait
jle
sbbl
movsb
repnz
xlat
enter
xchg
add
bound
cld
out
jns
push
and
std
lock
adc
dec
pop
adc
add
mov
inc
xchg
mov
inc
in
mov
pop
mov
lea
clc
adc
dec
pop
cmp
cmpl
cmp
xchg
std
mov
dec
cmp
cltd
sbb
sub
mov
in
aam
mov
aam
fadds
popa
sahf
xor
xchg
lods
movsl
or
and
pusha
js
insl
jecxz
mov
ret
xor
imul
mov
out
rolb
ljmp
mov
jecxz
xchg
out
jns
movsl
sarl
int
mov
jno
adc
les
sbb
js
jmp
enter
mov
js
shrb
subb
je
xor
cs
jo
mov
xchg
mov
xchg
and
fists
add
sbb
and
mulb
sub
ja
mov
sahf
jl
in
xchg
test
pop
adc
das
sbb
xchg
inc
push
dec
testl
loopne
pushf
push
inc
sub
jbe
mov
sarl
jp
fisttpl
mov
rcll
dec
ret
sub
test
movsb
pop
cs
add
mov
push
pop
push
push
pop
lock
lcall
push
mov
sbb
lea
mov
pop
out
mov
cmp
test
add
decb
sarb
mov
in
repz
sbb
pop
flds
mov
arpl
rolb
shld
les
pop
imul
dec
test
clc
andl
insl
les
lret
pop
mov
ficompl
xor
inc
pop
cs
mov
jmp
fisttpl
jno
adcl
cli
lods
push
inc
arpl
xchg
gs
lds
pop
adc
and
shrl
lcall
pop
enter
test
fsts
or
imul
mov
inc
ss
cli
stos
call
je
ret
adc
clc
loopne
cmp
mov
jle
sub
pop
mov
push
stos
mov
idiv
jnp
jo
dec
mov
jb
aaa
mov
fstpl
push
and
daa
ds
mov
hlt
fdivl
push
jp
sub
inc
cmc
mov
xor
sbb
sahf
xor
jmp
das
xor
or
and
test
aas
test
mov
mov
xchg
cmc
dec
and
xor
mov
mov
filds
loopne
imul
dec
xchg
cmp
in
and
inc
pop
cmp
fildl
xchg
and
push
xchg
pop
push
cwtl
daa
pop
and
mov
lahf
xchg
push
out
loopne
xor
mov
cltd
or
call
fisubrl
adc
xor
sub
or
or
pop
sahf
pop
jecxz
idivl
inc
xchg
or
xchg
inc
in
and
jge
stos
mov
into
mull
imul
mov
test
sub
adc
lea
mov
push
out
rclb
out
enter
data16
pusha
call
outsl
clc
xchg
jge
xchg
nop
push
jmp
dec
pop
sti
add
fcompl
push
mov
fbld
xchg
xchg
cmpsb
out
cmpsb
and
addr16
sbb
mov
js
inc
iret
mov
les
adc
or
hlt
inc
and
xchg
je
sbb
jmp
outsl
ret
mov
adc
stos
mov
cmpsl
fisttpl
movsl
or
dec
in
mov
add
loope
adc
enter
adc
cmc
cli
jo
sub
fisttps
loop
pushf
adc
xlat
mov
mov
lods
ljmp
push
dec
add
sub
scas
add
popa
mov
mov
test
in
bound
adc
pop
cld
aaa
add
pop
xchg
or
leave
sub
mov
add
sub
adc
fisttpll
inc
xchg
ljmp
mov
jnp
push
fwait
jge
pop
rcr
and
into
mov
jl
shrl
xchg
je
mov
cmpsb
xor
aad
shll
dec
jns
insb
aad
stos
inc
adc
jo
and
lret
dec
cltd
add
sub
stc
dec
xchg
popa
jp
mov
jl
fwait
and
insb
push
xchg
in
or
mov
aad
jae
aas
push
repz
lret
or
pop
hlt
pop
shll
sahf
dec
jne
iret
test
xor
cmc
int
loop
sbb
xchg
xor
sub
xchg
xor
icebp
addr16
idivb
xor
dec
mov
movsl
mov
and
iret
jmp
test
xor
dec
icebp
jge
inc
movsb
leave
cld
mov
or
cmp
xchg
add
outsl
std
pop
push
outsl
xchg
dec
adc
adc
and
pop
mov
scas
dec
int3
sarb
fsubs
pop
mov
mov
jno
sahf
jne
in
adc
inc
xchg
shrb
adc
pushf
adc
pop
or
jnp
pop
push
jne
pop
stos
mov
fisubrl
insl
sti
cli
sahf
pop
jle
pusha
or
bound
push
ds
jns
test
into
int
in
mov
rcrl
xchg
pop
fbstp
jne
and
xchg
xchg
stc
mov
daa
and
fdivrl
mov
jns
enter
or
xchg
cwtl
dec
insb
mov
mov
push
sub
in
enter
test
xor
lcall
and
test
stos
and
push
push
faddl
push
rclb
inc
pop
or
repnz
sub
js
pop
jo
push
cmp
cmp
and
pop
xchg
stos
js
in
ss
cmc
mov
mov
iret
in
xchg
ljmp
and
fists
pusha
imul
dec
movsl
sahf
mov
xor
rol
insl
sbb
pop
imul
mov
test
dec
push
and
movsb
mov
insl
inc
dec
mov
or
and
scas
dec
mov
jp
and
inc
pushf
mov
xor
into
inc
sti
cwtl
arpl
pop
sbb
cmpsl
cmc
lret
add
pop
fdivrs
or
into
pop
push
push
not
addr16
adc
xor
sar
fldenv
ret
jns
jae
inc
pop
sub
adc
jl
push
aaa
mov
arpl
movsl
xor
sbb
js
vmovaps
dec
and
inc
add
test
sbb
fbstp
mov
add
fwait
or
sahf
and
xchg
inc
loope
and
adc
push
mov
push
lcall
mov
es
xor
movsl
push
fstpt
bound
jns
insl
inc
dec
mov
add
dec
aas
lea
mov
int
es
lock
ret
sub
jns
dec
inc
pop
mov
test
adc
push
int3
adc
pushf
les
lods
push
and
mov
jecxz
fisttpl
push
iret
insb
imul
in
cmp
ja
mov
mov
cmpb
outsl
test
movsb
cmp
dec
xchg
mov
push
insl
shr
pause
and
jo
bound
mov
pop
fcoml
aas
mov
mov
and
cli
movsb
add
nop
shrb
es
lods
mov
mov
mov
scas
jp
iret
cmp
mov
pop
jmp
mov
inc
lock
sub
das
js
mov
inc
xor
xor
pop
sub
stos
add
cmpsl
or
mov
lock
jge
orl
jge
cmp
jmp
xbegin
jbe
repz
jge
push
jp
filds
test
and
outsl
scas
cwtl
pop
fbstp
sbb
or
dec
adc
test
push
jns
sbbl
fwait
pop
mov
sarb
popa
add
jb
mov
repz
jl
jmp
and
mov
dec
std
mov
pusha
pushl
sahf
mov
aad
jp
ljmp
clc
cmp
inc
cwtl
or
cmpsb
js
jg
sbb
cmp
mov
mov
fnsave
popl
jo
mov
std
daa
aaa
mov
push
outsl
pop
pop
mov
sbb
call
push
out
out
cmp
stc
test
insl
inc
ds
std
and
cmc
nop
cmp
test
pop
arpl
enter
cltd
mov
mov
andl
xchg
xor
jg
js
in
in
out
mov
xchg
hlt
jmp
test
es
xchg
fstpl
cmp
test
outsl
cmp
popf
sarb
lret
jmp
jle
shlb
dec
pop
outsl
push
dec
lahf
out
bound
js
pop
and
scas
adc
mov
mov
dec
adc
cmpsb
xchg
stc
lcall
aam
ljmp
mov
mov
inc
jnp
enter
daa
cmpsb
cli
sbb
adc
or
bound
nop
pushf
push
push
lret
push
jmp
in
push
mov
into
mov
push
xor
mov
sbb
outsb
pop
mov
lock
push
pop
xchg
faddl
xor
mov
cmp
fdivl
or
and
std
das
mov
mov
xchg
or
and
pop
mov
call
adc
out
lds
pop
inc
lds
test
xchg
mov
in
data16
dec
movl
fimuls
add
mull
dec
inc
mov
cld
mov
mov
pusha
xchg
ja
ret
divl
push
loopne
sbb
or
popa
mov
jne
icebp
popa
sbb
into
idiv
movsb
mulb
addl
mov
mov
sahf
and
xchg
adc
int
sub
dec
movsb
and
jns
cmc
xor
fiaddl
xor
loopne
mov
popa
ds
rcr
dec
lret
dec
sbb
dec
dec
push
jns
test
bswap
jmp
push
jmp
movsb
sbb
fidivl
shrb
sub
jo
sbbl
xchg
nop
repnz
dec
cmp
push
mov
outsb
vpsubd
out
sub
xchg
sub
inc
mov
rcl
mov
push
jecxz
test
xchg
mov
push
lret
lahf
adc
loop
test
and
sub
xor
lret
fdivrs
dec
jno
push
sbb
in
push
nop
mov
jno
test
jl
imul
inc
sub
xchg
pop
inc
pop
xchg
cs
mov
jns
enter
inc
daa
add
sbbb
repnz
adc
sub
flds
out
movsb
add
or
and
add
pop
rol
rolb
sbb
test
dec
lods
push
enter
push
pop
jl
xor
xor
stos
or
js
or
mov
aaa
cmp
add
add
clc
loop
pop
shlb
test
test
xor
mov
xor
data16
jnp
ret
jmp
mov
pop
add
fidivrs
sub
int3
cmp
and
push
stos
das
mov
xor
fs
inc
mov
gs
push
lcall
in
push
int
inc
fildl
xchg
dec
clc
sub
cmpb
jne
aad
repnz
ljmp
fs
cmc
shll
cmpsl
sbb
loop
sahf
fisttpl
shrb
lcall
lret
mov
sub
imul
mov
rcll
imul
mov
cmpsb
xchg
into
movsl
adc
fs
lods
push
std
xor
inc
lods
pusha
sbb
mov
mov
push
loopne
mov
or
xor
and
mov
xor
mov
cltd
cmp
xchg
mov
mov
out
cmp
push
mov
lret
jne
jmp
adc
aam
mov
jnp
pop
cmp
xor
pushf
sbb
ret
cmp
frstor
adc
jno
xchg
dec
out
pop
push
bound
mov
fdiv
push
andl
sub
push
sahf
adc
scas
push
divb
dec
cmp
or
mov
insb
ss
xchg
xor
sahf
pop
xor
jnp
addb
cmp
pop
adc
push
cmp
cmp
cmp
and
cld
sahf
inc
mov
pop
cmc
outsb
mov
lahf
mov
aaa
cli
sub
xchg
mov
push
mov
loop
jge,pn
adc
inc
xor
movsl
es
xchg
lock
pusha
arpl
pop
cwtl
lods
sbb
hlt
test
mov
pop
pcmpgtb
mov
mov
neg
add
sbb
or
mov
test
xchg
inc
sub
sbb
or
fdivl
jno
jmp
mov
mov
sti
jmp
sub
cld
jg
jl
fnstenv
lods
outsl
scas
adc
add
mov
pop
mov
inc
add
mov
aaa
dec
cmpsb
inc
xor
dec
sti
xor
loop
fcmovnb
adc
xchg
or
mov
mov
cwtl
iret
mov
adc
push
cli
mov
hlt
loop
xor
xchg
mov
dec
xor
and
sbb
add
test
ret
mov
sti
jp
xor
xor
gs
jo
mov
hlt
cmp
sub
xorb
in
cmpsb
add
or
cmp
xchg
add
push
shlb
mov
push
sahf
sub
cs
lods
push
push
into
mov
scas
dec
daa
sbb
xlat
repz
or
movsb
inc
jg
cli
push
lcall
insb
fbld
fucomp
pusha
cmovo
cmp
fildll
push
lock
mov
fs
mov
pop
jp
mov
sbb
and
stos
fs
movsl
or
sub
mov
fidivrs
movsb
stos
jle
add
pop
inc
or
xchg
dec
xor
dec
cmp
lret
jo
mov
fdivl
fstps
pop
hlt
adc
mov
jmp
cmp
or
in
loopne
call
jg
negl
enter
push
jecxz
pop
test
outsb
bound
fwait
call
iret
sub
int3
adc
mov
les
inc
rorl
sbbb
fisubs
sub
sub
adc
lock
gs
sub
push
fsubrp
cmp
dec
sub
daa
movsl
jmp
push
mov
insb
jbe
popf
imul
mov
jb
and
mov
jns
subb
ss
dec
xor
mov
xchg
lock
cmp
insl
push
outsb
js
mov
movsb
jbe
xchg
ljmp
sbb
fsubrp
cmp
in
scas
push
cmp
mov
lcall
les
flds
xlat
data16
test
xchg
jae
mov
outsl
sbb
shrl
fucomip
and
mov
add
comiss
add
out
das
rorb
and
sarl
ret
jne
push
ret
clc
cli
jo
sbb
sarl
mov
mov
sub
xchg
lcall
enter
outsl
or
je
push
and
pop
xchg
idivl
or
int3
jbe
fistpl
jnp
push
rclb
enter
adc
cmp
adcb
pop
scas
lahf
cmp
dec
aam
pop
xchg
adc
sbb
mov
pop
sbb
sbb
fs
cs
iret
imulb
adc
lea
mov
ja,pn
icebp
mov
and
push
xor
mov
arpl
mov
popf
jmp
sub
xchg
stc
scas
push
mov
push
lea
mov
cwtl
cmp
sub
xorb
cmpsl
adc
pop
fwait
divl
add
cmpl
mov
inc
lock
outsb
jge
dec
nop
jo
es
pop
insb
cmp
push
push
lret
insb
out
in
fisttpll
aas
mov
pop
out
cld
andl
mov
sub
sbb
movsb
dec
or
jbe
rclb
inc
clc
and
mov
rep
pop
push
in
sub
lods
mov
xor
adc
daa
sbb
mov
insb
rolb
or
stos
test
test
je
xor
out
out
nop
jl
or
add
add
ja
jle
sbb
es
cltd
xchg
stc
sarb
mov
cmpsl
sub
mov
xor
xchg
push
jg
addr16
shlb
xor
xchg
pusha
outsb
pushf
xchg
in
mov
ljmp
repnz
xor
mov
pop
movsl
push
jns
or
cmp
cmpsl
fmul
out
mov
sahf
mov
sub
dec
in
scas
lea
fsubp
adc
in
pop
ret
add
lea
jns
sub
imul
int3
push
pushf
fs
ret
lret
jp
in
mov
pop
scas
add
shufps
loop
mov
and
mov
xchg
ljmp
in
adc
lock
testb
aaa
testl
pushf
aas
inc
cmp
mov
call
stos
out
into
aam
sarb
sbb
fsubr
sbbl
and
and
fisttps
cmp
nop
xor
jge
repnz
pop
int3
lock
or
int3
xchg
inc
lods
gs
mov
sbb
pop
jp
mov
call
gs
add
mov
enter
dec
clc
icebp
add
mov
xor
add
jl
xor
push
shll
out
sti
jne
movsb
fadds
sbbb
in
or
das
dec
shll
mov
push
cmc
cmc
out
mov
push
fisttpll
cmp
dec
fucomp
inc
lods
ljmp
lahf
dec
add
aam
ficoml
push
pop
jp
and
insl
and
addl
push
nop
dec
lea
jne
adc
inc
sbb
sti
mov
cli
pop
push
pop
scas
mov
gs
jb
mov
mov
push
fcmovb
xchg
cmc
jno
jge
add
jo
mov
je
xchg
jo
push
lret
sbb
adc
in
call
inc
aas
sbb
sbb
push
pop
out
out
aaa
jle
test
popa
fiaddl
sbb
adc
mov
arpl
or
pop
andb
and
or
js
adc
adc
loopne
cli
pop
inc
mov
int3
movsl
lods
inc
in
ficomps
cmpsb
loope
adc
jge
mov
add
into
inc
das
mov
pop
or
mov
int3
dec
lea
inc
sub
les
push
xchg
push
stos
sti
mov
lahf
lret
out
inc
call
mov
fists
jmp
outsl
clc
mov
mov
add
aas
bound
mov
movsl
shld
jecxz
jecxz
xor
mov
cmp
add
mov
sbb
jmp
mov
sbb
mov
ror
ret
sub
dec
fsubrs
cwtl
sahf
mov
dec
repz
mov
push
aad
push
xchg
outsl
sub
adc
pushf
je
pusha
ss
sbb
inc
and
xor
fwait
loopne
or
xor
cmc
imul
arpl
mov
dec
push
fimull
sub
cmp
jns
adc
sub
loop
xor
xchg
jg
jg
sub
rorl
mov
sti
lret
call
mov
movsl
in
repz
sti
xchg
aam
mov
and
mov
mov
inc
mov
jbe
int3
mov
mov
in
fsub
sbb
insl
out
xor
adc
aam
sahf
ret
pop
lds
enter
enter
mov
stos
stc
in
and
sbb
adcl
add
orb
in
inc
add
xchg
xchg
mov
int3
ljmp
push
pop
stos
push
scas
xchg
sti
mov
or
aam
mov
into
adc
stc
lods
pop
add
xor
push
fwait
pusha
rclb
mov
mov
aam
mov
scas
or
pop
mov
pop
jge
sbbl
mov
fst
loope
popf
into
and
jns
lods
push
stos
pop
movsl
mov
dec
xchg
mov
out
and
or
stos
lea
mov
jl
mov
loop
jne
mov
push
test
mov
sbb
nop
jne
add
fidivl
test
outsb
push
mov
jge
and
jmpw
sarl
inc
lea
lock
inc
and
fldl
sbb
insl
jmp
inc
icebp
popa
dec
push
add
in
cs
mov
icebp
outsl
subl
lea
cmp
sahf
and
repz
mov
dec
jg
mov
push
jecxz
scas
icebp
fsubl
adc
iret
mov
aam
pop
or
or
scas
sub
and
sti
cmp
push
inc
sub
or
ret
mov
repnz
ret
jmp
je
faddl
sub
test
shlb
cmp
pusha
pop
je
mov
cs
stc
andb
cmp
and
mov
inc
in
stos
fidivrl
ja
jecxz
push
dec
or
sbb
pop
add
out
js
xor
testb
out
pop
sarl
sub
orb
mov
push
and
and
xchg
movsl
mov
dec
jo
jge
shr
scas
scas
and
dec
pop
bound
sbb
mov
mov
bswap
jmp
fs
sahf
mov
inc
push
lret
jg
imulb
rcrl
mov
mov
cmp
test
pop
inc
lds
pop
repz
pop
inc
insb
inc
or
mov
jecxz
push
fdivrp
out
push
push
pusha
or
pushl
mov
inc
outsb
pop
push
imul
cs
orb
jbe
pop
fdivp
fucomi
je
out
outsb
fmuls
and
sbb
jle
cli
or
adc
arpl
mov
add
cvtpi2ps
dec
cli
sahf
pushf
fistpl
ss
gs
push
mov
pop
test
add
les
aas
fidivs
adc
test
mov
or
ljmp
out
aaa
jnp
imul
repnz
gs
pop
nop
inc
loope
in
roll
push
jo
mov
das
clc
dec
shll
add
mov
test
aas
sbb
ret
pop
cmp
sub
movsl
pop
repz
dec
mov
aaa
or
mov
mov
jecxz
les
and
cmp
push
mov
or
jle
adc
fsubrp
ljmp
mov
ds
add
popf
pop
data16
decb
daa
inc
cmp
pop
push
sbb
cmpsl
out
dec
xchg
xor
sbb
scas
mov
repnz
pop
pop
nop
ss
jp
fidivs
dec
and
cwtl
mov
gs
jne
push
loopne
ss
add
push
cld
aaa
push
dec
push
mov
sbb
pop
and
mov
imul
mov
or
xchg
iret
repz
cmp
mov
icebp
inc
and
inc
ss
or
loop
sahf
in
fidivs
enter
push
mov
inc
pushf
pop
add
mov
out
shl
clc
lods
cmp
mov
mov
loopne
inc
or
clc
xchg
je
shll
cmp
dec
lods
mov
in
sti
ljmp
jnp
push
in
rorb
jnp
jl
jge
pop
orps
mov
in
insb
cltd
inc
mov
ret
mov
mov
cmp
orb
mov
dec
rolb
cmpsb
stc
dec
mov
out
xchg
and
out
repz
push
dec
test
sbb
add
fidivrl
cmp
jno,pt
icebp
jnp
mov
arpl
out
neg
test
and
fnstsw
bound
adc
and
sbb
cld
rorl
sub
push
mov
cmc
scas
shr
test
aam
xchg
hlt
dec
mov
cld
outsb
push
xchg
lahf
fcoml
mov
scas
sub
nop
push
push
jb
mov
in
sbb
push
enter
or
out
jmp
xlat
inc
push
adc
psubb
out
fldenv
xor
les
or
bound
pop
out
adc
fwait
into
jne
mov
out
sub
sub
cld
xchg
cli
popf
sbbb
pop
rcrl
xor
cs
mov
jae
fisubrl
repz
jl
mov
or
pop
sahf
rcrl
mov
mov
push
dec
dec
xchg
xor
icebp
xchg
cmp
jbe
in
aam
push
adc
gs
xchg
in
lods
mov
das
popf
jb
sbb
mov
push
dec
fdivrs
cs
insb
cmc
outsb
cmp
adc
push
cmp
pop
cmp
xchg
shrb
insb
fwait
insb
push
pop
or
dec
push
and
pop
jnp
out
xchg
mov
push
push
ss
sub
jo
dec
xchg
test
xchg
lret
insl
inc
inc
test
dec
insl
xor
fs
lods
mov
nop
sbb
sbb
in
in
mov
add
push
in
dec
sahf
xchg
dec
dec
iret
clc
es
in
xor
push
and
cmpsb
imul
lahf
cmp
sbb
fs
outsl
decb
jmp
movsb
ret
std
imul
int
push
push
jmp
mov
test
jle
loopne
insl
or
aam
cmp
aad
and
adc
dec
xor
push
dec
dec
lods
or
test
push
xor
lret
push
jle
sub
iret
and
cs
and
lret
push
cmp
adc
stos
mov
sub
mulb
lret
sub
jmp
or
pop
push
test
popf
mov
scas
xchg
out
clc
cld
jns
repnz
sub
push
mov
mov
callw
les
cld
adcb
and
arpl
inc
push
jno
push
or
fldz
cwtl
mov
les
fidivs
das
sub
mov
cmc
ljmp
push
push
sbb
or
jb
adcb
fmull
xchg
ja
mov
cmc
pop
sbb
fs
jge
jmp
push
dec
sub
stos
pop
roll
repz
js
lock
std
out
outsl
aas
mov
pop
push
cmp
jle
mov
mov
std
into
rcrb
enter
rcrl
in
aaa
negl
adc
push
out
jle
outsl
loop
mov
sub
roll
scas
jmp
dec
mov
push
in
scas
dec
mov
or
arpl
xchg
jmp
cmp
sub
in
es
xchg
sbb
sub
repnz
fistps
pop
pop
jbe
mov
fldt
jbe
cwtl
inc
or
xchg
cld
and
or
aaa
lods
inc
out
push
adc
in
mov
and
or
push
mov
sbb
and
push
jo
xor
jno
hlt
push
and
mov
sub
sub
outsb
das
stos
inc
stos
loop
push
aas
rclb
nop
sahf
mov
xchg
inc
out
xchg
cmc
lods
sti
or
mov
gs
lret
test
popf
cmc
adc
fildl
xchg
xchg
mov
add
cltd
dec
loopne
int3
cwtl
test
xor
dec
dec
imul
sahf
jbe
repz
jbe
push
or
sub
stc
mov
pop
data16
stos
cmp
push
mov
jo
std
mov
lret
jno
sahf
mov
jg
loop
fstpt
je
xor
in
mov
cld
in
movsb
pop
push
or
jge
jbe
mov
fisttpl
rcrb
and
mov
sub
pop
sub
imul
and
loop
fldt
sub
rcr
aaa
in
pop
jl
xor
pop
lcall
mov
xchg
dec
lods
mov
jecxz,pn
mov
mov
mov
sti
ficomps
jnp
stos
jmp
cltd
inc
test
pushf
mov
hlt
and
xchg
in
and
shlb
stc
push
jbe
cltd
aas
pop
add
arpl
std
xchg
jmp
cmp
out
pushl
test
rorb
xchg
add
loope
mov
xor
mov
xor
clc
arpl
jp
sbb
sbb
sbbl
sbb
inc
stos
cmp
lds
and
and
xlat
push
xchg
pop
in
mov
mov
sbb
sahf
les
sbb
xor
sbb
movsb
jnp
sub
ljmp
push
into
pusha
xor
fs
pop
add
outsl
shlb
jne
mov
out
sbb
xor
rcl
dec
lods
jl
ljmp
xlat
mov
ja
cs
xor
inc
dec
mov
sub
push
and
imul
xchg
push
out
sub
add
xchg
xor
push
ret
xor
mov
xlat
mov
jecxz
ja
in
scas
pop
pop
xor
pop
cmp
in
adc
and
xchg
cli
xor
aaa
movsl
dec
jno
es
subb
fcoml
fs
out
xchg
xor
cmp
ficompl
testb
jo
dec
pop
sub
jne
ja
mov
add
xlat
inc
sub
pop
mov
cmp
fimull
xchg
dec
xor
hlt
fstps
fstps
sahf
lods
inc
cs
xor
fwait
cld
out
jmp
jmp
cmp
clc
test
cmpsl
sbb
cmp
roll
push
ljmp
jne
inc
in
sub
mov
fdivl
push
scas
cmc
cmp
add
add
jle
jmp
push
mov
dec
xor
xchg
pop
dec
mov
cmpsb
mov
inc
push
inc
addr16
sbb
add
xor
shll
test
ljmp
das
lock
mov
or
les
std
sub
adc
push
mov
lret
jge
mov
out
stos
dec
mov
jnp
sti
sub
je
dec
mov
fs
in
mov
adc
cmpsb
sbb
mov
jecxz
repnz
sbb
sbb
aad
adcl
mov
sbb
sub
lahf
pop
pop
push
leave
mov
aaa
push
ffreep
xchg
scas
xchg
add
jge
or
notl
ss
mov
aaa
or
aam
fdivrl
dec
cwtl
or
adc
insl
imull
ljmp
lret
adc
and
mov
dec
divl
repz
mov
inc
int
imul
xchg
outsl
cld
push
ret
add
pop
pop
cmp
shlb
or
mov
cmp
outsb
or
sahf
lods
leave
pop
mov
fisttps
cmp
call
lea
mov
or
and
and
in
shll
add
insl
push
cmp
es
gs
push
jmp
mov
lcall
sbb
es
or
std
sbbl
in
mov
in
jno
test
cmpsl
or
mov
ljmp
pop
jne
cmp
xchg
jo
insb
add
xchg
and
mov
iret
ja
push
mov
inc
push
jno
inc
scas
xor
roll
jle
mov
add
mov
bound
out
dec
out
dec
cmpsl
shll
xor
shlb
mov
pusha
addr16
xchg
outsb
into
lret
movsl
ret
and
mov
cmp
add
xor
inc
add
jl
xchg
mov
mov
or
mov
mov
clc
cmp
lret
inc
xchg
dec
push
adc
arpl
hlt
xchg
lods
mov
mov
scas
test
fidivrl
out
cmpsl
fisttps
icebp
mov
rol
popa
jg
loopne
dec
rorl
pop
mov
jge
xor
xor
sbb
aaa
pop
mov
dec
xchg
js
cmpsb
mov
mov
stc
push
shlb
add
sti
jb
mov
les
cs
pop
andl
gs
dec
arpl
add
mov
leave
cmp
int
cmpsl
cmp
jno
imul
pushf
mov
int3
xor
push
cmp
popf
loop
es
sub
jmp
adc
xorb
hlt
cld
nop
xchg
xlat
push
or
clc
dec
fbstp
pop
cmp
iret
mov
sub
insb
xor
call
pop
or
fsubrs
cmp
xor
dec
ja
pop
dec
sbb
je
lret
out
mov
popa
shrl
add
xor
cli
stos
cmp
adc
ja
push
je
data16
and
iret
xor
push
xchg
adc
mov
hlt
shll
or
pop
mov
push
push
shll
add
sarl
mov
lcall
adc
add
bound
or
fbld
mov
push
iret
mov
gs
aas
stos
stos
enter
add
inc
push
or
addr16
cs
sbbl
xor
test
adc
mov
mov
pop
dec
mov
adc
pushf
sti
lods
jg
cli
in
int
mov
mov
mov
pop
shrb
pop
arpl
lods
inc
addl
and
bound
addl
pop
insl
out
fcoms
ret
shr
xchg
jl
aad
loopne
ds
inc
repz
sub
insb
cmc
sbb
in
std
mov
outsl
pop
pop
xor
adc
repnz
or
imul
push
mov
data16
cmp
or
nop
push
dec
push
cmp
or
jne
xchg
cmp
push
jae
leave
outsl
mov
sbb
gs
iret
cmpsb
or
push
sbb
rcl
rcrb
push
push
mov
jae
jecxz
mov
jo
dec
popa
ljmp
or
mov
pop
loopne
add
cmpsb
pop
scas
cld
push
movsl
loop
mov
orb
jnp
push
stos
cltd
xchg
pop
xor
sbbl
adc
mov
mov
jbe
mov
call
push
mov
aam
push
aaa
dec
ss
out
mov
and
mov
stos
mov
gs
stos
std
and
push
and
mov
test
jecxz
int3
popf
andl
fldcw
je
fisttpll
imul
xor
lcall
cwtl
fwait
adc
add
and
xor
shll
scas
jae
xchg
or
sbb
xchg
hlt
enter
ja
xor
xchg
lods
push
stos
and
jecxz
into
push
int3
push
add
inc
outsb
add
insb
xor
xchg
add
aad
iret
xor
fwait
rorl
xchg
fwait
movsl
cmp
pop
daa
repz
inc
aaa
sarb
loop
popf
shlb
arpl
movsl
push
hlt
sbb
lret
icebp
push
mov
insb
pop
sbb
add
cmp
jl
cld
lcall
push
xchg
ss
and
test
mov
pop
std
in
das
enter
loope
stc
xor
icebp
xchg
jbe
cmp
inc
stc
jmp
sub
pop
xchg
mov
std
es
push
pop
xchg
sub
adc
into
rcr
mov
int
js
push
push
imul
popa
adc
mov
out
jno
xor
loopne
cmp
adc
aaa
repz
inc
jns
rclb
fisttpll
xchg
imul
stos
test
jecxz
sbb
xor
shl
jmp
jge
int3
add
sahf
add
xchg
cld
xchg
or
jbe
sar
mov
ja
dec
pop
repnz
xlat
arpl
cmp
std
aaa
cmp
icebp
mov
sti
mov
out
pop
cmp
pop
push
repz
jno
adc
mov
bound
push
lret
and
inc
std
add
arpl
cmp
dec
shl
in
and
cli
mov
xor
push
mov
popf
loop
shrb
lea
repz
loopne
out
shlb
leave
push
mov
lds
xor
fsubl
aam
push
sub
mov
dec
fwait
pop
mov
pushf
out
mov
sbb
scas
or
in
test
movlps
mov
cmpsb
jnp
add
ret
jle
push
sub
mov
andl
flds
cmpsl
xor
gs
dec
scas
xor
mov
and
cmp
rcll
leave
addr16
cmp
rcll
xlat
fs
and
dec
call
out
out
aad
dec
loop
jns
pop
sti
lds
out
mov
lcall
shlb
push
dec
stc
fs
sbb
repz
xchg
mov
rorl
pop
les
inc
add
adc
push
jg
xor
mov
xchg
dec
jecxz
cmpsl
aad
lret
xlat
jnp
in
sti
sarb
out
xor
lods
imull
pusha
jl
repz
mov
and
cs
iret
lds
inc
sub
push
pop
loopne
lahf
mov
xor
pop
cmp
jnp
and
adc
out
lcall
notb
int3
mov
adcb
or
sub
insl
cmp
xchg
lods
movsb
and
xchg
xchg
notb
or
sbb
add
inc
add
imul
mov
push
ss
sub
lods
lea
inc
outsl
mov
jb
xchg
loop
inc
jp
or
xchg
icebp
fcoms
divl
xchg
push
lds
scas
push
in
int
jg
mov
sbb
jecxz
xchg
iret
pop
xor
mov
push
test
and
mov
mov
ret
imul
out
loopew
out
mov
cmp
mov
or
mov
flds
mov
xchg
push
leave
bnd
ss
push
popf
adc
imul
add
and
cmpsb
sub
cltd
sbb
aaa
rorb
dec
leave
inc
mov
shrl
divb
cmp
cmpsl
pop
cmpsl
mov
shl
fsubrl
sbb
mov
sbb
pop
dec
pop
or
xor
jp
push
sub
popa
lds
xor
jl
insl
push
sbb
jg
sub
jno
lret
dec
bound
pop
ret
sbb
pop
mov
ret
stos
pop
nop
les
sbb
mov
sub
jb
mov
xchg
mov
mov
xor
icebp
rcr
pusha
pushf
cmpsl
dec
adc
mov
lock
enter
sub
dec
xor
dec
cmp
lods
rorl
hlt
scas
test
mov
cmp
and
xor
loopne
xlat
pop
sub
xchg
lret
lret
push
cmpsb
ds
mov
pop
icebp
xchg
push
adc
cmp
cmp
push
popa
xor
or
jb
push
rorl
testb
add
leave
cli
mov
push
mov
test
xor
dec
je
cmpsl
push
jae
sbb
outsl
scas
outsl
cmp
pop
outsl
xchg
test
repnz
popa
or
xor
push
mov
test
dec
pop
pop
in
cmp
sub
lock
stos
sub
scas
andl
loope
sub
mull
mov
or
in
in
adc
dec
shll
or
sbb
push
xchg
repz
rclb
out
mov
jns
addb
xor
lahf
outsl
cld
or
pop
scas
cwtl
sbbb
fiadds
push
sub
fnsave
mov
xor
fildll
mov
imul
repnz
jle
jbe
out
push
shlb
push
sbb
push
pusha
add
mov
dec
loop
lds
dec
test
dec
xchg
lds
outsb
mov
jmp
es
mov
outsl
aas
pop
inc
mov
xchg
and
or
jo
ret
push
fdiv
xor
adc
jle
jbe
out
jns
push
imul
add
xlat
mov
jle
fadds
pop
jo
adcb
ss
ds
pop
inc
mov
repz
inc
fwait
jne
std
dec
fsubrs
out
rcr
jle
test
xchg
rep
xchg
out
pop
jg
sahf
fstps
pop
and
mov
lahf
movsl
and
mov
adc
and
dec
jae
data16
das
xchg
in
jecxz
orb
xor
or
sbb
iret
dec
scas
xor
das
xchg
cmpsb
sti
jne
sti
repz
jecxz
mov
adc
sub
sti
jle
insl
ja
jns
push
or
inc
inc
cmp
cmp
dec
arpl
jo
in
pop
out
rcr
mov
mov
fcomi
mov
and
outsl
ss
stos
push
in
and
adc
dec
mov
mov
inc
or
sub
sbb
js
jge
adc
inc
jg
fldcw
jno
stos
insb
ds
push
loope
icebp
mov
mov
divb
in
xor
sub
stos
lock
pop
or
lock
sub
sbb
orl
das
mov
ja
loop
rolb
add
insl
test
cmp
push
mov
xchg
ds
aas
mov
ja
in
test
shlb
mov
sub
push
pusha
mov
ss
adc
mov
rcrb
or
arpl
sub
adcl
xchg
test
call
movsb
pop
mov
in
pop
mov
or
add
mov
pop
notl
pop
pop
xor
std
repz
jp
ja
jae
paddsw
jo
add
in
pop
scas
sub
adc
rcll
pop
out
adc
das
arpl
push
lods
bound
cmp
mov
loop
lods
scas
jbe
orl
lods
or
sub
mov
mov
pop
shrl
xchg
cmp
lods
mov
push
inc
add
xchg
out
insl
movsb
js
xchg
int3
neg
andl
cmp
jbe
push
fists
popl
mov
inc
rolb
movsb
sbb
adc
sub
arpl
add
jnp
xor
ffree
or
sub
cmp
out
ja
jb
cmp
jnp
push
mov
clc
adc
jg
sti
aad
cwtl
les
fsubrs
inc
loop
sti
test
repz
xchg
js
stc
fisttps
jae
inc
jge
lods
movsb
push
outsb
jno
das
cmp
clc
inc
xor
jg
getsec
jnp
push
jbe
inc
mov
mov
test
flds
fidivrs
fdivs
sbb
xchg
xchg
and
repz
jne
out
lret
dec
adc
test
daa
orb
add
or
xor
icebp
jle
sbb
cmpl
push
mov
out
arpl
xchg
dec
or
cmp
cmp
insl
cli
mov
inc
xchg
sbb
movsb
das
cltd
mov
inc
in
mov
pop
roll
xchg
fsubl
push
inc
mov
test
push
in
aaa
loopne
mov
xchg
sbbb
pop
stos
jecxz
push
inc
hlt
or
mov
cmp
in
mov
jg
jne
mov
scas
gs
mov
mov
mov
sbbl
popa
pusha
aam
and
out
mov
mov
inc
hlt
scas
rcrl
shrl
jmp
pop
test
inc
movsb
mov
ljmp
das
push
dec
dec
or
test
sti
dec
inc
mov
cmp
jns
out
and
lds
lods
stc
enter
leave
xchg
ficoml
dec
popa
int3
lock
sahf
and
int3
or
cmp
mov
xchg
xchg
dec
rorl
int
sub
xchg
cltd
dec
stc
sbbl
into
dec
or
and
fldl
mov
out
or
mov
dec
push
ret
jmp
mov
inc
mov
out
les
push
and
out
lcall
inc
push
jne,pn
xor
sbb
xor
shll
dec
decl
stos
testb
mov
push
xchg
xchg
jns
jg
dec
insl
mov
mov
xor
mov
xchg
lcall
arpl
out
xchg
shr
shl
rcll
enter
cmc
lahf
push
xchg
divl
xchg
jns
and
addr16
mov
sub
mov
mov
out
repz
addb
mov
xor
fpatan
jbe
mov
adc
loopne
stos
not
adc
test
xchg
adc
in
stc
push
std
int3
jne
loopne
jns
xchg
ret
mov
mov
dec
pop
es
shl
push
imul
mov
sbb
icebp
outsb
mov
iret
popa
std
fxam
jge
xor
cmp
movsl
push
cmp
jl
inc
mov
inc
and
mov
sbb
pop
push
dec
hlt
sub
adc
xor
xchg
xchg
je
es
push
lods
bound
push
mov
dec
fisttpll
jne
or
out
pusha
adcl
bound
cmp
xor
fidivl
xchg
cs
cmp
repz
cmp
dec
fisttpl
xchg
arpl
cmp
idivb
leave
adc
jne
and
shrl
mov
push
push
xor
push
jmp
dec
mov
cmp
call
mov
pop
out
loopne
dec
das
sub
clc
mov
outsl
pop
in
popa
enter
sbb
cmp
mov
mov
repnz
lcall
push
enter
popf
dec
pop
lcall
sbb
push
xorb
aas
jmp
insb
int3
loopne
ljmp
adc
dec
inc
nop
or
push
dec
jae
adc
lcall
pushf
inc
adc
xchg
and
dec
pushf
out
lds
or
inc
mov
psubb
rcr
out
mov
dec
scas
int
xchg
into
push
sub
push
loope
push
sub
inc
mov
push
jmp
mov
lods
mov
stos
ss
sti
loope
push
fwait
outsb
nop
call
xor
sti
call
inc
in
insb
cwtl
dec
push
inc
add
ljmp
mov
mov
outsl
bound
mov
pop
or
add
or
pushf
dec
out
nop
mov
cmp
mov
test
ficoms
or
mov
daa
xchg
sub
pop
out
xchg
push
cmpsl
add
push
or
ret
insl
rorl
addr16
testl
push
aaa
cmp
aaa
lds
cli
mov
add
aam
xabort
pop
sub
sub
lret
inc
mov
out
lret
pop
push
int3
adc
mov
add
out
sbb
jge
dec
es
xchg
fwait
mov
sub
jecxz
lahf
jle
xchg
ja
lret
dec
insl
lods
hlt
xor
orl
es
push
or
es
movsl
iret
imul
dec
mov
loopne
aam
push
lds
cmp
scas
sub
add
cmpb
push
orl
scas
scas
mov
xor
lret
jge
push
add
inc
fs
adc
jecxz
shlb
out
out
ror
mov
sbb
cmovl
mov
cld
scas
cmp
and
push
push
or
das
sbb
pop
hlt
dec
mov
vpunpckldq
scas
jno
sub
xchg
daa
out
jbe
xlat
in
mov
fstps
pop
sub
jb
mov
mov
mov
je
fdivs
lcall
lock
repz
jbe
aas
pop
xlat
sbb
pop
loope
xchg
sub
jno
xlat
negl
pop
adc
jno
movsl
and
scas
xor
lods
aas
mov
fldenv
pop
repz
jo,pn
pop
jne
adc
dec
xlat
cmp
and
pop
mov
int
movsb
xchg
es
push
sub
inc
or
xchg
xchg
negb
xor
xchg
mov
loop
push
nop
loopne
out
dec
pushf
loop
jno,pn
inc
icebp
sbbl
enter
jecxz
daa
sub
dec
fwait
int3
int
adc
pop
jb
fstpt
mov
hlt
pushf
sub
jecxz
fnstcw
in
pop
push
outsb
push
mov
movsl
add
sbb
pop
frstor
push
lods
in
sbb
outsl
aam
push
mov
fisubrs
pop
int3
xlat
rcr
sub
cwtl
pop
js
jl
stc
dec
cmp
push
cmp
xchg
dec
pop
xchg
test
jmp
dec
jmp
out
mov
popa
cmove
test
pop
inc
sub
pop
mov
fwait
push
dec
pop
nop
mov
jecxz
jnp
cmpsb
int
add
mov
inc
pop
push
out
icebp
pop
xor
addr16
push
jmp
xchg
insb
stos
enter
dec
andl
xor
add
fcmovnu
outsb
fs
rorb
pusha
and
jl
int3
jns
push
pusha
inc
sahf
rorl
xor
fisubrs
lret
ja
jg
sub
sahf
and
aaa
in
mov
mov
jle
sbb
sub
and
adc
stc
mov
push
cmp
xchg
pop
dec
mulb
mov
push
add
and
xchg
fdivrp
adc
xchg
mov
popf
stos
xor
xor
add
insl
dec
sbb
xchg
or
sti
enter
ss
das
inc
shl
jo
xlat
and
repnz
jbe
jmp
outsb
or
shll
leave
cmp
mov
xor
shl
pop
push
mov
subb
cmp
ret
cmc
add
cmp
sub
das
cmp
pushf
loope
sub
adc
cmp
pop
inc
fs
mov
int3
and
mov
out
xor
mov
jp
mov
push
cmc
sub
sahf
or
loop
adc
lcall
cmp
push
arpl
loope
into
int3
clc
xchg
rcrb
fistl
pop
popf
mov
out
mov
mov
jle
dec
aam
lret
adc
pop
jg
mov
and
jns
mov
dec
mov
bnd
mov
addr16
xchg
faddp
mov
in
cmp
incl
push
jbe
cwtl
dec
std
and
cmp
inc
mov
mov
inc
sbb
shll
ss
rol
pop
ljmp
les
push
xchg
movsl
testl
repz
jns
jb
lret
clc
ds
jns
pop
jno
mov
or
mov
dec
stos
jl
stos
repnz
inc
aas
jle
addr16
dec
pop
or
mov
mov
popa
push
push
stc
mov
mov
test
cmp
jle
scas
mov
lss
push
pop
lds
and
ficoms
ss
mov
pop
lret
mov
sahf
xchg
or
aad
mov
test
imul
xchg
addr16
fidivs
bound
out
fmulp
sub
ror
cli
stc
jg
fisttpl
cmp
pop
jle
push
jecxz
test
pop
repz
jno
pop
in
xchg
lock
fwait
mov
inc
pop
mov
les
es
xor
es
popf
movsl
cmp
mov
sbb
pop
and
or
dec
ja
xor
mov
add
aas
je
push
in
scas
dec
mov
sub
mov
pusha
frstor
inc
pop
xchg
rep
add
repz
bound
pop
sahf
rclb
dec
mov
outsl
shlb
pop
mov
pop
inc
pusha
test
cmp
outsl
adc
into
not
ja
inc
shl
mov
cld
les
daa
adc
pushf
adc
fnstsw
mov
push
mov
pop
or
add
ss
ljmp
mov
mov
mov
mov
dec
fwait
sar
add
mov
ds
add
xchg
xor
leave
in
in
pop
mov
and
push
adc
in
sarl
push
insb
mov
cmp
jle
mov
dec
insb
xchg
jmp
je
cmpsb
pop
pusha
push
dec
xchg
test
fistl
dec
mov
cmp
adc
xor
das
shrl
cmpb
add
inc
sub
addl
roll
inc
dec
aas
and
in
push
out
aad
push
and
pop
loop
cmp
scas
jle
aaa
popf
sbb
push
sbb
push
or
mov
jp
in
icebp
sub
xor
or
xchg
lock
pusha
xchg
shrl
or
mov
mov
sti
imul
and
cs
add
pause
adc
nop
xchg
fildl
fwait
repz
inc
inc
pop
movsb
enter
jl
out
or
loopne
mov
andb
jl
or
pushf
dec
mov
out
mov
push
lea
inc
rcl
adc
pop
dec
mov
push
add
popf
jmp
daa
popf
pop
rcrb
stc
mov
scas
je
dec
orb
pop
sub
arpl
lods
andl
subb
cmp
and
dec
mov
cmova
hlt
pop
repnz
rolb
cmp
scas
repnz
fimull
fidivrl
xor
scas
lret
mov
cltd
int3
mov
mov
pop
imul
enter
jbe
mov
xorb
add
mov
subl
subb
sti
and
jp
mov
imul
jbe
cmp
js
arpl
adc
out
adc
movsb
cmp
pop
pop
mov
imul
insl
movsl
stos
imul
add
popf
push
and
pop
leave
jl
sub
jmp
push
test
int
inc
stos
adc
push
mov
push
push
push
bound
or
push
xchg
pusha
outsl
les
pop
inc
xor
imull
out
mov
stc
sbb
mov
dec
xor
or
ds
call
lcall
xlat
push
sbb
pop
add
bound
xchg
movl
popf
dec
out
test
sbb
bnd
out
decb
sub
sub
mov
jns
cld
inc
and
pop
sbb
xchg
jecxz
jmp
xor
jns
mov
pop
cmp
sub
xlat
lret
push
push
int3
cmp
adc
ret
into
jp
mov
inc
gs
push
sahf
add
inc
fsub
fsub
pop
fdivr
out
jns
sti
in
push
adc
jbe
mov
cmp
mov
cwtl
inc
popf
sbb
mov
pop
int3
in
aad
mov
shlb
js
and
mov
in
jecxz
jns
cld
or
and
pop
fists
lretw
or
dec
daa
mov
out
inc
fs
mov
fdivrs
xchg
or
xor
cmp
or
or
mov
and
jns
cltd
aam
sbb
cwtl
mov
mov
push
out
or
pop
outsl
movsb
sbb
stos
mull
aad
mov
insl
pop
fimuls
sarl
test
scas
inc
inc
and
js
adc
sar
mov
and
push
stos
daa
cmpsb
jae
loope
fdivr
loopne
mov
jno
sub
aam
hlt
cmp
xor
push
aas
mov
sub
push
lahf
enter
enter
jecxz
jb
adc
cmp
push
subb
aad
cwtl
aaa
das
cmp
ret
jns
push
gs
mov
xor
mov
movsb
inc
fistps
lea
and
jae
imul
mov
xor
js
in
xrstor
bound
test
xor
movsb
jp
pop
xchg
lods
sti
and
lds
push
mov
sbb
sbb
out
xor
xchg
mov
mov
das
addb
in
push
shlb
sbbl
and
leave
mov
int
xchg
cwtl
into
repz
aad
call
mov
mov
cwtl
lret
mov
xchg
cmpsb
pop
inc
imul
sbb
pop
aas
pusha
stos
das
add
push
inc
push
cmp
das
or
hlt
in
addr16
scas
add
jnp
push
popa
sbb
xchg
mov
leave
aaa
adc
push
arpl
mov
sbb
jne
addr16
xchg
xchg
nop
jecxz
jge
xor
aas
dec
mov
mov
aam
filds
pop
lea
loopne
loopne
push
mov
scas
and
add
fiaddl
xor
stc
xchg
cmp
pop
push
cli
in
cli
movsl
lea
pusha
loope
in
sti
add
jno
shufps
xchg
or
add
mov
inc
jecxz
imul
pop
sub
add
out
mov
cmp
aas
inc
je
in
dec
or
hlt
hlt
cld
mov
aad
test
into
mov
ja
fisubl
inc
shlb
sqrtps
dec
in
cld
adc
adc
ljmp
std
into
inc
sbb
jnp
repz
fst
loopne
dec
movsb
in
movsb
dec
xor
sbb
rorb
mov
scas
insb
int
lcall
pop
inc
ret
fsubrs
lret
fsub
insl
mov
scas
add
fisubs
psubsw
ds
pop
daa
arpl
and
adc
in
mov
sbb
popf
xlat
lds
test
pop
pop
mov
je
ljmp
adc
leave
out
add
jnp
out
adc
nop
testl
filds
inc
mov
fdivs
jbe
and
int3
xor
mov
mov
inc
sbb
pushf
xor
shlb
out
nop
cmp
out
jns
pop
push
sti
and
xorb
push
sbb
xor
decl
xor
test
lds
push
xor
xlat
cmc
dec
cltd
push
fcoms
pop
mov
andb
sub
fs
sahf
out
adc
ds
outsl
xlat
push
mov
dec
nop
insb
lcall
cltd
sbb
pop
imul
fsubrl
cmp
pop
popf
push
stos
adc
bound
add
sbb
insl
jl
ret
push
mov
nop
fcmovnu
mov
lods
jnp
mov
jne
lds
pop
jmp
or
xlat
stos
inc
mov
roll
test
dec
jns
jp
rcll
xlat
and
inc
rcrb
int
mov
mov
lret
fidivrs
dec
stos
sahf
repz
cmp
adc
test
lret
sbb
jl
sub
mov
sahf
outsb
push
adc
sub
mov
rolb
cmp
shrl
pop
daa
push
jmp
mov
mov
push
inc
fistps
nop
mov
les
mov
jno
inc
mov
out
inc
and
jge
push
sub
pusha
das
cmp
mov
repnz
out
cmp
push
xchg
daa
xor
xchg
inc
adc
mov
mov
lods
inc
lea
inc
cli
test
xchg
jp
jno
lahf
and
call
mov
mov
testb
pusha
aas
add
cmpsl
shl
mov
fstl
cwtl
pop
and
jbe
dec
les
lock
jnp
and
lcall
repnz
enter
mov
jbe
add
cmp
pxor
jecxz
xor
aas
inc
aam
fs
cmc
mov
shl
jge
int3
ds
fcomip
jle
jne
out
cmpsl
fsubrp
hlt
jge
cmpsl
decl
into
cmc
hlt
jge
stos
mov
cli
lods
or
movsl
mov
movsl
and
movsl
mov
sti
pop
jne
pop
loope
fs
mov
pop
clc
lock
add
mov
stc
mov
adc
cli
sti
leave
out
mov
fimull
pusha
sarb
jae
cmp
sbb
testb
sti
lret
inc
pop
pop
out
xchg
enter
mov
bound
cmp
int
lods
in
inc
lret
inc
enter
outsl
jbe
imul
add
idivb
lret
out
dec
std
xchg
ljmp
xchg
xchg
rclb
in
jp
jecxz
in
or
push
jg
jnp
adc
mov
and
inc
call
xor
xchg
mov
je
xchg
cmp
rcr
in
mov
push
incl
jmp
rcll
ja
adc
call
ret
cmp
xorl
sub
sub
aad
jno
and
push
mov
nop
sarb
dec
neg
inc
jae
fdivp
loopne
jbe
test
scas
jl
jbe
nop
add
cmp
pop
cmp
std
insl
sub
xor
sub
aam
stos
cmp
loop
xchg
bound
bound
pop
push
and
into
mov
pushf
xor
popf
sbb
call
outsb
mov
cltd
rol
mov
jge
sbb
mov
adc
out
in
inc
ljmp
out
call
js
push
pop
test
mov
lret
call
pop
pop
das
lock
loopne
aas
notb
mov
mov
cmp
sbb
aaa
leave
inc
mov
shll
fucomip
mov
out
test
jl
sbb
or
sbb
mov
test
jnp
inc
lock
jo
sbb
outsl
jbe
jmp
xchg
sub
or
mov
jmp
xor
insb
push
lret
call
xchg
xor
in
inc
jbe
stos
in
bound
cmp
lret
inc
stos
mov
rcrl
ret
lahf
xchg
pop
push
jae
add
subl
cmp
std
adc
test
xchg
or
cmp
inc
cmp
jb
jl
adc
sbb
mov
xchg
inc
pop
mov
flds
push
lahf
mov
jb
dec
les
pop
jg
add
je
mov
xor
or
sbb
inc
in
loop
xchg
call
mov
and
xchg
push
loopne
jge
mov
test
add
aam
pop
cld
das
dec
cld
adc
lods
shll
add
dec
jmp
inc
hlt
sub
call
inc
push
mov
scas
rclb
xor
cmp
nop
in
pop
js
pop
cwtl
dec
add
xchg
stos
push
pusha
push
mov
cld
mov
out
sub
clc
adc
scas
dec
and
stos
fcoml
bound
adc
shrl
mov
sbb
sub
jae
xor
dec
dec
in
jmp
aaa
jno
jno
jp
inc
jecxz
inc
sbbb
addr16
dec
dec
ss
and
mov
mov
pop
scas
jns
lret
mov
inc
mov
negb
jp
add
aaa
nop
out
or
sbb
mov
and
outsb
lea
xchg
bound
in
into
test
xchg
ret
sub
cmp
inc
int
bound
push
test
repnz
repnz
push
mov
dec
sub
xchg
ficompl
sub
cmp
inc
xor
jmp
pop
addr16
push
inc
test
xor
adc
insb
add
fwait
mov
mov
xor
and
insl
jle
arpl
fldl
mov
fsts
sub
and
das
ret
imul
ficomps
xchg
stos
sub
cmp
stos
ljmp
fcomps
mov
inc
cmp
int3
or
mov
mov
or
stc
dec
scas
mov
pop
jmp
jns
call
mov
xor
xchg
inc
cmc
add
mov
mov
pop
shl
pop
mov
or
dec
movsl
mov
stos
mov
mov
and
push
push
pop
cs
mov
movsw
xchg
bound
into
popf
and
scas
mov
ret
sbb
stc
xlat
or
push
out
outsl
jnp,pt
add
sub
lods
sarb
sub
pop
xchg
pop
inc
movsb
imul
xchg
cltd
loopne
inc
pop
outsb
xlat
mov
sub
cmp
divl
push
cmpsb
push
jmp
xchg
add
sub
mov
mov
loope
packuswb
outsl
xchg
lahf
idivb
sub
mov
jo
lock
test
cmp
pop
cmp
adc
and
pop
cmp
xchg
xchg
lods
pop
scas
mov
xchg
std
and
ja
mov
pop
jl
cmp
into
mov
and
sbb
push
imul
xor
mov
movsb
cmpsl
mov
je
jb
jae
insl
push
inc
cmpsb
jo
push
orl
lahf
repnz
or
mov
mov
imull
adc
mov
push
or
insl
jb
sub
mov
or
xchg
adc
insb
adc
xchg
fisubs
pushf
pop
push
test
shlb
inc
xor
movzbl
add
ljmp
imul
xchg
mov
adc
insl
push
fstp
sarl
es
mov
aas
push
push
std
push
dec
dec
addb
ret
decl
dec
xchg
data16
xchg
hlt
xlat
xchg
ljmp
sub
adc
ja
stc
leave
call
enter
xchg
jmp
pop
stos
or
jmp
stos
jno
popa
jnp
jge
js
scas
je
into
mov
subb
sub
or
rcll
aad
out
rcrb
stos
je
mov
adc
or
movsb
adc
data16
jl
call
sub
cmp
aas
mov
push
xor
adc
ret
sub
insl
jbe
dec
scas
inc
sub
daa
xor
lock
jp
test
rcrb
clc
call
or
mov
pushf
lret
les
mov
repz
in
jns
dec
cmp
pop
lcall
clc
pop
int3
pop
mov
cmp
call
mov
sbb
sahf
push
stos
cmpsb
xchg
xor
repz
fs
push
movsl
pop
dec
roll
cmpsb
cmp
cmp
jo
jne
hlt
or
leave
jmp
mov
out
in
sub
repnz
xchg
or
dec
int3
repnz
in
mov
xor
outsb
je
arpl
sti
ja
faddp
mov
cmp
mov
je,pt
pop
enter
aaa
iret
lods
xor
cmp
out
push
je
js
cmc
add
cmc
mov
add
jno
pop
push
mov
ljmp
push
stos
mov
cmpb
pushf
mov
mov
loopne
mov
mov
ret
pop
push
test
push
stc
mov
sbb
fwait
ds
push
pop
or
js
test
jb
lods
cmp
mov
cmovne
pop
mov
mov
pop
js
cs
outsl
rolb
mov
sahf
push
out
outsb
pop
notb
popa
inc
sbb
fbld
mov
addr16
and
arpl
in
shl
dec
push
mov
loopne
aaa
in
invd
xchg
imul
cwtl
aaa
and
mov
cwtl
adc
lds
dec
mov
dec
mov
negb
sti
subb
jge
jns
mov
fimuls
xor
icebp
xlat
je
imul
mov
xor
aad
ljmp
sbb
inc
imul
sbb
xchg
je
jecxz
cmp
negl
cmp
aas
imul
push
ljmp
xchg
adc
clc
fcmove
sbb
xchg
and
sub
fbstp
or
mov
andb
decl
stos
cld
test
jg
mov
fucomip
sahf
jp
mov
mov
mov
or
orb
mov
test
dec
cld
adc
mov
das
push
test
lea
dec
push
pop
inc
jne
scas
test
adc
mov
ds
shl
dec
shrb
sahf
add
or
adc
nop
lret
or
or
xor
scas
ret
jmp
jmp
dec
mov
clc
int3
mov
shrb
ret
jnp
mov
push
mov
in
pop
daa
xor
xchg
shll
in
adc
and
xor
fnsave
cli
mov
loopne
cld
lods
daa
jmp
mov
ret
xchg
xor
add
adc
jnp
ds
mov
lcall
mov
cmp
bound
mov
repnz
lret
push
sbb
xchg
repnz
cwtl
mov
movsb
dec
jg
iret
das
pop
push
inc
lock
das
fidivrl
loopne
pmaxub
sbb
data16
lret
and
mov
les
mov
loopne
sahf
push
jne
stc
dec
test
jo
xchg
push
mov
mov
cwtl
xor
pop
push
repz
mov
jbe
push
xor
mov
outsb
or
outsl
cmp
in
test
fisttpl
sbb
cld
and
and
fnstenv
xor
adc
neg
mov
dec
xchg
mov
dec
add
pusha
cmovne
pop
push
mov
adc
and
shr
sub
lock
xor
pop
insb
pushf
mov
fidivrl
enter
pop
loope
xor
hlt
add
cmp
int3
push
xor
mov
add
stos
mov
das
aas
xchg
nop
in
repnz
push
xor
dec
sbb
mov
cmpsb
idivl
xlat
jmp
dec
lahf
je
test
jbe
ret
sbbb
in
jle
jno
adc
sahf
lahf
int3
add
test
pop
call
pop
ds
mov
and
dec
dec
cld
sbb
push
arpl
pop
or
xor
bound
ja
jge
sub
sbb
pop
mov
sbb
aam
jmp
addr16
movsl
and
shrl
mov
add
dec
pop
loop
lret
push
fdivl
mov
popf
xchg
ret
cli
andb
mov
out
loope
popf
cmp
imul
test
inc
mov
dec
jb
fists
inc
jp
arpl
cld
sbb
jge
es
bound
popl
sub
call
mov
test
loope
or
inc
mov
popf
ret
pop
jp
mov
loope
in
sti
jp
and
adc
xchg
stc
xor
stc
fsubrl
ds
rcll
jge
out
or
out
xor
cmp
add
pop
in
lods
or
mov
inc
in
cmp
cs
cwtl
rorl
push
mov
sub
mov
push
movsb
int3
loop
popa
ficomps
add
rcl
sub
jb
xor
mov
jp
mov
sub
movsb
xor
fmull
cmp
push
fmul
cmp
pop
xor
cmp
xlat
outsb
pop
xchg
inc
lods
pop
sbb
push
icebp
loopne
dec
sub
adc
mov
cmp
xorl
iret
adc
lret
ret
xchg
js
ficompl
aas
jg
icebp
das
mov
jge
out
loopne
bound
mov
in
test
in
mov
nop
repz
cmp
sbb
stos
pop
mov
jecxz
jo
mov
stc
xchg
sti
addr16
fimuls
pop
cmp
mov
dec
cmp
aaa
dec
sbb
cli
mov
das
lcall
jle
iret
aam
xor
xor
lock
imul
fmull
pop
test
pop
ficompl
and
add
xorl
xor
fisttpl
cs
inc
stc
test
xor
jecxz
testl
outsl
inc
lock
push
ret
fldcw
push
fists
mov
mov
inc
aas
and
mov
aaa
or
popf
sbb
mov
rcll
leave
ja
std
add
test
and
test
dec
mov
dec
cli
xchg
sub
jno
aad
orb
cmpsl
subl
sbb
out
pop
scas
xor
sbb
es
and
sbb
aam
fdivl
cmp
jmp
aaa
xchg
mov
mov
dec
jo
lock
xor
mov
cmp
loopne
pop
sbbb
js
push
cs
popf
insb
adc
cmpsl
inc
popa
sub
rcr
ljmp
es
pop
arpl
movsl
mov
xchg
aad
mov
sbb
sbb
shr
scas
popa
cmpsl
cmpsl
lret
or
mov
dec
push
stos
xchg
jl
iret
sub
inc
out
test
xchg
lods
rclb
das
pop
lods
imul
xor
xchg
xor
repz
xlat
sub
xchg
and
inc
fimull
outsl
mov
or
sub
add
push
fildll
in
mov
lods
push
lea
daa
adc
popa
imul
outsb
lds
and
repz
push
mulb
pushf
xchg
or
outsl
push
add
aad
mov
jge
jle
sub
and
in
xor
shrl
xchg
loopne,pt
mul
sub
cmpsl
int
bound
rclb
stos
xor
fcmovnu
out
or
test
push
int
stc
sahf
bound
add
sarl
pusha
je
out
in
xchg
outsl
aas
test
adcb
jmp
lds
pushf
mov
mov
ret
movsb
iret
popf
dec
mull
push
pop
aaa
mov
divl
cwtl
repz
fmull
jle
rorl
fldenv
sub
xchg
nop
mov
mov
pop
push
lods
mov
ret
test
jg
pop
and
addr16
sbb
or
push
stos
sbb
fistps
xrelease
xchg
outsl
cmpsl
div
scas
ret
ss
sub
mov
lock
push
jle
out
in
test
jns
adc
ror
mov
push
aas
sbb
xchg
pop
mov
push
sbb
mov
bound
ljmp
popa
arpl
fldenv
mov
mov
into
fwait
add
sub
and
jp
push
xchg
fsubrs
mov
mov
jb
dec
inc
shrl
mov
or
sub
xor
and
call
or
xchg
push
sti
cld
or
mov
fidivrs
and
add
xlat
sub
pop
add
pop
enter
cwtl
mov
nop
pusha
lret
lcall
cmp
mov
mov
pop
imul
jle
push
pop
jp
ss
inc
es
dec
mov
bound
sub
lods
cmp
stos
cmpl
fistpll
fimull
and
jmp
push
and
sbb
adc
pop
sbb
test
ror
je
dec
mov
xchg
sbb
lret
mov
mov
into
mov
outsl
mov
push
js
pop
or
mov
mov
stos
cltd
push
call
stc
movl
dec
xchg
dec
xor
mov
bound
ret
in
scas
push
cmp
orl
add
rcrb
les
and
clc
xchg
imul
cmc
xchg
mov
test
repnz
inc
sbbl
std
cmp
addr16
ficoms
fldl
decl
mov
or
mov
push
or
mov
mov
mov
daa
xchg
es
add
mov
lea
cmp
ret
pop
jle
mov
outsl
mov
aaa
mov
mov
mov
mov
push
out
jne
sti
lds
pop
addr16
cmpsl
ret
adc
jno
pop
call
xorl
xchg
mov
lods
sbb
fstp
ficoms
ja
adc
push
add
sbb
addb
sbb
sbb
pop
ja
inc
cltd
iret
sbbb
dec
in
iret
xchg
aas
xor
inc
cmp
xor
lock
sbb
jnp
scas
cltd
enter
mov
pop
bound
cmpsl
mov
std
jmp
sarl
cmp
ror
hlt
xchg
mov
insb
inc
add
adc
je
xchg
imul
and
sbb
lock
enter
sub
inc
pop
gs
in
test
push
mov
fildl
std
and
gs
in
adc
dec
jmp
es
ret
mov
lea
loopne
inc
cmp
je
push
popa
or
in
data16
in
out
insb
jp
loope
inc
aam
xchg
cmp
lods
and
stos
shll
pusha
sub
mov
mov
loop
fadd
xchg
sub
fimuls
test
js
sbb
arpl
pop
pushf
roll
out
das
pop
sub
lret
jl
in
adc
stos
pop
int
int
movsl
cmp
fidivrs
pop
lcall
mov
pop
sti
pop
test
idivl
out
xlat
js
out
mov
cmp
lret
dec
cwtl
mov
imul
mov
jg
shll
call
adc
fisttpl
call
daa
xacquire
shl
adc
in
daa
mov
inc
stos
jae
cmp
out
mov
scas
and
test
xchg
add
test
mov
xchg
pop
add
fwait
mov
dec
out
or
mov
mov
inc
and
mov
and
sbb
mov
cmp
nop
jmp
push
rcl
mov
jns
pop
mov
mov
jg,pt
and
insl
fs
dec
or
incb
aas
mov
xor
out
sub
cmp
fs
loop
xchg
pop
mov
rorb
adc
out
fisttpll
xor
sub
movl
jge
xchg
sub
cmp
adc
daa
xor
addb
rolb
outsb
ret
add
add
xchg
pop
pop
jg
test
test
push
shll
ljmp
cmp
sub
or
pop
fmull
jbe
ret
sarl
inc
add
pop
dec
jb
daa
enter
xlat
jge
xchg
outsb
lcall
pusha
inc
repnz
cli
ljmp
pop
mov
das
jno
ret
push
xor
adc
or
mov
test
xlat
sbb
push
jecxz
fs
xor
inc
lock
mov
hlt
cmc
shlb
stos
out
jo
inc
aas
pop
cs
ret
pop
cmp
add
repz
or
ss
ds
imulb
sbb
pop
mov
lret
nop
push
loopne
pop
mov
pop
mov
rcrl
xor
xor
pusha
outsb
or
xlat
outsb
shl
in
test
cltd
xor
es
inc
shrb
or
mov
mov
jp
lock
inc
outsb
stos
data16
mov
jno
dec
ja
xchg
imul
rcll
sbb
test
into
pop
inc
mov
jmp
or
add
sti
pop
and
fcom
mov
push
sti
lds
pop
pop
jmp
mov
popf
test
sub
out
and
icebp
ss
test
cmpsl
iret
movsb
enter
inc
cmpsb
adc
imul
shr
inc
cli
or
mov
into
aas
mov
jo
mov
imul
adc
das
add
call
sub
in
call
sbbb
add
pusha
dec
fucomip
cmp
push
mov
mov
ja
es
stc
ret
pop
fwait
dec
xchg
clc
inc
jo
xor
cmp
cli
dec
arpl
ret
adc
push
call
addr16
or
test
movsl
addl
repz
or
loopne
cmpb
nop
fisubs
xchg
out
out
sub
dec
adc
adc
pop
xchg
push
xor
addb
mov
jl
sub
jno
int3
jno
sub
cmp
fmull
pusha
push
add
dec
mov
dec
je
test
loope
mov
out
xchg
stc
inc
shl
push
sub
stos
std
mov
cwtl
dec
jmp
sub
stc
ss
xchg
jns
mov
push
mov
inc
in
mov
lds
repz
jge
in
outsb
iret
mov
loopne
ret
rclb
sub
aas
mov
int
adc
jb
arpl
outsl
call
jo
popf
xor
pusha
add
popa
xor
xor
ljmp
cmovbe
dec
stos
push
shll
jnp
cmp
mov
das
das
cwtl
adc
mov
and
push
sbb
shl
sbb
outsb
out
mov
subl
jae
mov
dec
aas
adc
push
scas
inc
dec
xchg
gs
push
inc
cmp
push
rolb
xchg
add
mov
jecxz
pop
ss
adc
sarb
and
popa
and
add
std
mov
adc
stc
test
xchg
jmp
lea
leave
push
mov
in
inc
push
sub
or
adc
jg
cltd
xor
jmp
dec
jg
rdtsc
xchg
clc
lea
jl
jle
jl
and
jmp
mov
push
cmpsl
ja
pop
dec
dec
cmp
cli
sub
or
outsb
mov
push
ret
xor
xchg
fwait
ss
push
int
push
iret
pop
mov
inc
mov
push
gs
cmpsl
and
lds
out
mov
or
imul
jecxz
clc
jmp
sbb
pusha
adc
mov
data16
cmp
test
std
or
mov
imul
mov
mov
sbb
fisubrs
repnz
pusha
mov
test
dec
aad
push
subl
mov
ret
paddusb
dec
mov
fldcw
inc
fwait
repnz
mov
jmp
mov
adc
out
xchg
icebp
push
xchg
std
ljmp
lahf
fstps
lret
pushl
mov
loope
lods
jg
ja
test
or
aam
push
dec
mov
lahf
push
cmpsl
adc
inc
scas
adc
out
fsubr
mov
loop
int
insl
mov
pause
cmp
punpcklwd
adc
push
adcl
mov
and
xchg
bound
jmp
xchg
imul
dec
dec
arpl
mov
aad
ret
mov
ljmp
jb
and
int
incl
dec
mov
lcall
ret
push
cmp
sbb
fstpt
notb
mov
or
or
insl
push
xor
jo
xor
lea
cmp
mov
shll
push
popf
jl
pop
cmpsl
sbb
insb
fs
bound
pusha
ss
xchg
clc
sarl
notl
roll
jg
mov
sbb
jno
push
xchg
jge
imul
pop
enter
inc
loop
repnz
dec
test
xchg
push
je
addr16
rcl
sbb
lock
xor
inc
fbstp
mov
pop
out
xchg
xchg
loope
andw
pop
sbb
cmp
jns
cltd
mov
inc
sub
lds
adc
wbinvd
jmp
mov
xchg
add
shlb
sbb
mov
mov
mov
out
movb
pushf
sbb
xor
cmp
dec
cmp
popa
adc
cmp
push
xchg
leave
push
push
test
cmpsb
mov
jmp
inc
scas
dec
mov
or
mov
cmc
push
sbb
shrd
cld
sti
mov
mov
or
jne
int
mov
cli
xchg
jae
sbb
fwait
mov
pop
inc
outsb
sbb
mov
ss
arpl
dec
fisubs
dec
filds
pop
lds
loope
iret
inc
shll
mov
outsb
outsl
les
or
pop
pop
jl
jge
sub
call
dec
rcrl
and
pop
mov
in
jecxz
jecxz
jecxz
jp
mov
test
sbb
mov
xor
testl
xchg
pop
sahf
cmp
aaa
sub
dec
mov
je
or
xor
lret
dec
decl
jmp
jmp
pop
cmp
adc
in
mul
inc
test
push
mov
adc
xchg
adc
mov
loopne
adc
jl
add
stos
in
sbb
push
add
sbb
iret
jle
xchg
jle
pop
xchg
insb
aad
out
jg
xchg
inc
sbb
fucomp
hlt
jge
xchg
aaa
add
sbb
cmp
insl
insl
xchg
clc
mov
rcr
and
mov
adc
pop
xlat
in
movsb
out
mov
das
test
das
pop
mov
jp
std
pusha
pop
and
mov
stos
pop
bound
popa
inc
ret
mov
cmp
jp
enter
add
push
pop
cmpsl
test
ljmp
stos
jg
movsl
and
mov
mov
out
xor
dec
xorb
mov
fs
loopne
sti
or
xchg
push
inc
inc
int
andb
imul
les
rcll
cmp
ja
fs
push
test
insb
pop
lret
aaa
enter
or
pop
or
js
jmp
inc
movsl
push
xchg
repz
pop
cmp
cmp
push
insb
addr16
imul
adc
dec
adc
push
ja
adc
bound
adcb
add
xor
jg
mov
iret
ljmp
popa
stc
pop
adc
es
lock
mov
in
call
lahf
mov
stos
test
aaa
xchg
jbe
sbb
sub
sub
decb
jle
out
cmp
mov
pop
movsb
push
imul
jns
subl
push
lds
scas
in
jl
mov
cmp
add
lret
insl
xchg
jno
jl
lea
mov
adc
cmc
arpl
stos
lock
xchg
cld
xchg
pop
pop
jae
pop
clc
lcall
and
loop
int3
orl
insb
mov
dec
add
je
push
mov
test
add
dec
dec
cmpsl
pop
add
jp
dec
add
jno
inc
fwait
popl
arpl
out
xor
mov
lret
xor
inc
cmp
lahf
daa
fldenv
xor
dec
xchg
stos
shlb
adc
pop
mov
adc
jl
aad
pop
aam
repnz
inc
adc
push
cmpb
and
pushf
dec
es
or
aam
out
xchg
sbb
dec
or
mov
int
pop
pop
cmp
in
xchg
jmp
jg
jg
ja
das
inc
pop
pop
inc
stos
shl
dec
notb
andb
sbb
lret
push
xor
mov
test
imul
jmp
push
push
mov
iret
jns
and
scas
or
mov
cmp
fwait
push
lcall
outsl
pop
inc
jbe
push
push
jae
sbb
and
pop
push
mov
push
or
icebp
push
or
ret
adc
jle
js
mov
fldenv
insl
nop
jl
sbb
and
mov
stc
inc
rclb
adc
push
inc
scas
mov
jecxz
jne
in
cmp
and
out
arpl
dec
cld
outsl
sahf
icebp
sbb
shlb
pushf
mov
jle
and
xchg
cmp
lds
int3
and
mov
pop
sub
mov
and
push
test
mov
std
cltd
mov
or
sub
stos
xor
pop
inc
lea
shlb
xchg
outsl
inc
loopne
add
or
adc
data16
cmp
cltd
push
add
js
pop
test
ds
xchg
jbe
arpl
arpl
mov
push
inc
je
adc
mov
fdivl
dec
jg
dec
adc
jnp
xorb
push
dec
jbe
adc
pop
orb
or
rolb
test
and
and
jmp
lret
mov
dec
test
sbb
dec
push
notb
inc
xor
loop
aad
scas
sub
in
add
jp
cli
jae
mov
mov
jl
rolb
imul
scas
sub
xchg
jecxz
xchg
cmpsb
outsb
cs
push
add
xchg
movsl
xchg
push
popf
mov
mov
lret
out
arpl
inc
scas
jge
adcl
and
mov
idivb
adc
shll
jnp
or
std
xchg
dec
cmp
imul
mov
mov
scas
call
enter
stos
dec
out
cmp
shl
cltd
sbb
xor
out
imul
outsl
mov
cmpsl
mov
mov
leave
xchg
sub
cwtl
rol
push
cmc
inc
push
pop
outsb
stc
or
scas
pop
sub
add
add
fwait
inc
stos
test
and
in
pop
inc
sahf
mov
dec
pop
scas
fisubl
movsl
outsb
xchg
or
cmp
loope
ret
test
mov
dec
mov
and
push
sub
dec
adc
std
ret
jb
sarl
mov
scas
jbe
mov
push
lock
xorb
jae
jno
jbe
loop
popf
sbb
cld
sub
pop
fists
sbb
imul
clc
aad
loope
movsb
std
mov
aad
imul
jmp
jge
rclb
imul
sti
or
or
shlb
addb
pop
mov
jmp
adcb
repnz
pop
pusha
push
sbb
into
dec
and
imulb
or
fists
ds
or
mov
sbb
mov
mov
je
pop
imul
jo
sub
in
sbb
scas
outsl
mov
leave
jo
pusha
out
xlat
push
sbb
mov
xchg
loope
mov
test
push
repz
arpl
and
mov
into
jo
sub
jbe
test
stc
cmpb
aaa
and
adc
lahf
adc
test
repz
jne
ljmp
push
mov
gs
cmp
mov
dec
int
cli
jae
jg
pop
xchg
fcmovne
cmp
je
pop
jmp
pop
rcrb
mov
sub
sbb
jg
fiaddl
pop
fdivrl
scas
jle
sbb
xor
push
pop
push
cmp
clc
pop
lcall
and
ret
outsl
out
inc
xchg
xlat
and
lret
adc
pusha
mov
outsb
out
mov
ss
push
das
mov
cli
inc
jno
xor
sbb
fldl
clc
push
test
popf
xlat
repz
out
or
ja
cmp
test
jmp
in
mov
cld
pop
fsubr
and
pop
dec
pop
inc
pop
push
jne
jne
aad
lea
subb
sahf
loope
jmp
jno
dec
or
sub
nop
fs
pushf
mov
dec
arpl
jl
out
push
mov
push
test
and
push
cli
aaa
mov
lods
mov
mov
pop
je
mov
movsl
push
mov
fld
jg
in
decb
stc
popf
aad
stc
inc
int
push
dec
dec
lods
ficomps
add
pop
cmp
pop
sub
xlat
fsubrs
lret
sub
inc
rolb
adc
sbb
inc
cmpsl
sub
push
cli
cmpsb
mov
adc
testb
pop
pop
and
add
insl
jo
out
in
jnp
dec
cmp
xchg
iret
loop
cmp
mov
arpl
mov
movsl
fs
jo
jnp
repnz
lds
mov
fs
out
dec
mov
and
inc
fdivrl
stos
push
clc
inc
mov
out
xor
jne
lods
cmp
mov
inc
and
cwtl
popf
jno
stc
test
cmp
repnz
jnp
and
outsl
mov
f2xm1
add
rorb
xchg
imul
mov
mov
mov
push
dec
rol
xor
dec
lods
jb
data16
cmp
pop
loop
sub
xor
adc
push
jmp
fwait
mov
adc
push
fiadds
pop
cmp
pop
shll
mov
adc
jl
mov
or
sarb
les
jmp
pop
sti
leave
sbb
repz
dec
rclb
out
imul
out
xchg
sarl
js
push
adc
outsb
data16
xorb
mov
dec
xchg
pop
in
xor
mulb
xor
or
fnstcw
inc
ja
fwait
push
addr16
lea
bound
and
fs
add
cwtl
mov
push
adc
arpl
fcompl
rclb
xorl
mov
mov
and
testb
js
sbb
push
and
das
ret
daa
lea
pop
ret
xchg
arpl
popa
dec
mov
add
add
jmp
in
out
pop
push
insl
cmc
bnd
and
bound
lods
dec
inc
pop
pop
xchg
push
cld
jge
lea
aas
nopl
adc
lods
sub
cmp
lret
daa
aam
or
jecxz
movsb
push
icebp
mov
pop
xchg
in
cmc
pop
xor
pop
and
es
xchg
mov
in
mov
sahf
mov
andb
jb
enter
fstpl
aam
push
cmp
mov
mov
xchg
clc
insb
sub
adc
out
cmp
fstpl
pop
add
and
xchg
inc
movl
and
pop
dec
lret
pop
mov
addr16
stos
fcomps
pop
int
test
pop
jge
mov
sahf
mov
dec
xor
movd
inc
popf
enter
loop
sbb
mov
ljmp
leave
jge
and
popa
repnz
jge
sub
push
ds
cmp
into
in
push
push
inc
arpl
jne
popf
lock
mov
iret
call
pop
push
int
scas
adc
loopne,pn
dec
cmp
out
inc
xor
inc
je
aaa
mov
rol
mov
jecxz
add
sahf
roll
mov
jp
call
sti
ret
jb
jp
sub
add
insb
leave
pop
lcall
cmc
pusha
ja
xchg
das
loop
jbe
cmpb
insb
fstl
in
outsl
sub
lret
enter
insb
jae
into
cmpsl
jmp
jo
fisubs
stos
out
neg
stc
jg
les
in
push
fisubrs
and
cmpsb
outsb
or
push
mov
sbb
pop
stos
ficoms
mov
orb
sub
test
mov
ljmp
jnp
addr16
adcl
jl
fistl
int3
in
imul
push
mov
les
aad
inc
lret
frstor
mov
or
mov
gs
cmpsb
repz
xlat
push
jp
aaa
or
mov
imul
aam
gs
inc
pop
mov
ret
sbb
mov
add
mov
mov
addr16
add
frstor
inc
jg
jp
into
pop
mov
lahf
jmp
dec
xchg
dec
movsb
push
out
lods
icebp
data16
jecxz
dec
xor
data16
sub
jg
mov
pop
ds
insb
xchg
inc
cmp
aad
and
loope
pop
xor
cli
jnp
pop
mov
or
xchg
enter
or
loop
stos
int
sbb
dec
dec
lods
mov
cmp
ljmp
push
cli
mov
sti
aaa
push
fcompl
out
icebp
sub
clc
rcr
js
xchg
cmp
std
clc
push
push
insl
aam
and
in
adc
cmpsb
jb
push
int3
cltd
add
mov
pop
or
imul
sti
jmp
jb
jns
pop
jb
adc
and
stos
cmp
mov
cld
movsl
mov
and
mov
inc
and
test
adc
xchg
in
mov
orl
jp
xlat
ret
or
mov
das
jno
sbb
popf
pop
add
mov
xor
xchg
xor
xor
lock
mov
pop
pushf
dec
sbb
and
out
push
fwait
lods
add
in
sbb
sahf
xor
sub
mov
shlb
out
xchg
testb
fs
adc
sbb
mov
stos
push
into
push
pop
inc
cli
sub
jecxz
fldl
push
lahf
adc
inc
cltd
or
dec
enter
xor
movsb
aaa
imul
cltd
mov
mov
cmp
popf
std
sub
std
data16
push
outsb
jae
dec
ljmp
imul
and
sti
sbb
lods
in
inc
mov
loope
lods
jae
loop
stos
out
dec
xlat
mov
xchg
aad
mov
mov
push
ds
fwait
and
cmpsl
mov
fstps
out
mov
push
ret
adc
iret
mov
or
testb
add
pushf
and
daa
mov
cwtl
xor
test
nop
leave
sbb
or
sbb
or
lods
push
and
mov
mov
orl
hlt
xchg
lds
dec
jl
fdivrs
fidivrl
sbb
punpcklbw
jle
loop
cwtl
mov
in
rolb
in
pop
push
ficoml
lahf
dec
jb
sahf
js
jge
out
add
cmp
push
fadd
fcomip
jns
sub
scas
cli
jg
ds
cwtl
ljmp
mov
lcall
pop
mov
push
lret
inc
rorl
xchg
mov
jge
add
ja
loopne
dec
push
fdivr
loopne
and
mov
inc
inc
push
jmp
and
bound
push
dec
lret
shr
mov
adc
insb
inc
icebp
or
subl
inc
xor
push
data16
fsubrs
lcall
in
loop
mov
mov
inc
xor
pop
xchg
mov
das
inc
insl
mov
pop
mov
lret
and
jge
mov
push
imul
jb
fisubrl
adc
mov
cwtl
imul
dec
out
mov
mov
sti
mov
jge
sti
push
sti
stc
xor
jp
pusha
or
add
out
jbe
sbbb
mov
push
sti
xchg
imul
xchg
xor
xlat
add
aas
xor
outsb
mov
pop
xchg
fistpl
repnz
sbb
inc
mov
mov
xor
dec
cmp
lods
xor
and
out
test
stos
fwait
push
xor
cmc
jp
popa
repz
push
test
ds
lods
or
mov
fs
cmp
loopne
mov
xor
mov
in
pop
xor
sbb
push
aam
fs
out
dec
mov
out
mov
js
cmp
or
mov
rorl
insl
subl
jmp
and
in
push
dec
lea
aaa
and
mov
add
sub
cmp
shlb
dec
sub
adc
sub
inc
cltd
ss
in
jg
mov
add
inc
out
pop
dec
nop
and
fcoms
jbe
pop
ret
cmp
out
sub
lock
sbb
xorl
jo
jmp
ljmp
rclb
mov
adc
sub
into
and
adc
cmp
and
mov
mov
data16
mov
in
imul
dec
sahf
xchg
and
decb
les
jp
push
ja
imul
inc
push
dec
imul
mov
sbb
fidivs
mov
cld
repz
arpl
in
repz
cmp
or
loope
dec
sbb
push
mov
sahf
cmpsl
add
fstl
mov
flds
ss
and
jno
cmpsb
test
cs
in
and
xchg
push
xchg
or
inc
add
xor
jne
cmpsl
mov
aas
enter
lods
sub
jb
dec
rcrl
decb
pop
rcll
push
pop
in
mov
fnstcw
sahf
xor
inc
dec
pop
mulb
out
test
or
jp
sbb
dec
jmp
cmp
jle
pop
repnz
mov
add
sbb
xchg
aas
pop
insb
pop
imul
jo
js
jp
xorl
stos
xor
ret
setp
dec
repnz
cmpsb
std
dec
aam
mov
mov
lret
inc
xchg
ret
bound
test
mov
mov
mov
push
sti
call
mov
fdivrp
and
and
push
in
mov
sti
inc
cli
xchg
sbb
jp
iret
popf
add
js
leave
movsl
dec
xorb
iret
dec
cwtl
lods
dec
stc
ljmp
loopne
add
outsl
adc
movl
stos
icebp
push
ss
fnstcw
and
add
imul
iret
lods
pop
scas
rorb
sbb
in
out
repnz
pop
fldl
add
inc
fmull
in
rclb
xor
inc
cltd
dec
inc
xor
mov
lock
push
jle
leave
jle
and
adc
xchg
cmp
out
js
pop
jg
and
push
clc
jne
jne
je
mov
movsl
mov
push
sbb
or
sub
dec
shll
lock
pusha
jno
lret
lods
inc
mov
jb
rol
lret
loopne
sub
scas
or
inc
adc
sub
inc
arpl
ret
adc
sbb
shlb
mov
pop
movsl
aaa
clc
data16
dec
fisubl
aaa
adc
test
mov
ror
pop
xlat
ds
xor
lret
adc
cld
mov
stc
ffree
adc
sbb
movsl
inc
mov
sub
or
mov
mov
js
and
cltd
mov
sahf
jmp
mov
std
shrb
pop
test
shrb
cmp
scas
lods
xor
insb
lods
sti
js
cmp
rcl
add
push
inc
sarl
mov
dec
push
lods
mov
stos
lahf
pop
test
dec
mov
cmc
mov
and
jb
adc
mov
or
or
mov
int3
das
fisubl
mov
fs
xchg
arpl
jo
cwtl
f2xm1
test
call
add
lret
xorl
or
push
xchg
mov
hlt
mov
loop
jecxz
mov
outsl
clc
int
jg
cld
mov
popf
jge
jmp
call
arpl
das
pop
loop
xchg
icebp
xchg
pop
xor
or
sbb
sbb
fidivrl
aaa
les
es
mov
hlt
aad
addb
push
mov
xor
int3
mov
jl
in
inc
bnd
pop
sub
jecxz
adc
mov
xchg
fnsave
xorl
and
pop
ss
xor
cmp
add
lret
mov
xchg
sti
rcr
movsb
xor
or
mov
jle
mov
lds
cmp
and
sbbb
aam
lock
pop
jmp
inc
inc
and
pushf
clc
insl
js
jg
inc
nop
pop
mov
mov
add
mov
mov
mov
gs
outsb
data16
jne
fs
dec
mov
int
push
pop
jne
inc
mov
cmp
cli
push
outsl
stc
lods
mov
stos
jle
dec
addb
lock
sub
mov
jge
cwtl
ljmp
rep
lods
fs
pusha
mov
das
shrl
out
mov
js
xor
sbb
cwtl
cwtl
clc
fs
es
xor
xor
lahf
pop
push
or
mov
sbb
loopne
mov
insb
mov
pop
lcall
pop
sbb
sbb
mov
je
es
cs
inc
js
sbb
mov
ja
pushf
pop
inc
jle
das
xchg
das
add
loopne
test
adc
rcrb
cltd
inc
fists
push
inc
xor
jno
or
cmp
call
xchg
cli
mov
popf
leave
loop
cmp
loop
pop
test
pop
adc
sbb
cmpsb
cli
sub
test
out
insl
loopne
int
das
xorb
and
xor
pusha
inc
push
jge
call
push
jl
pop
ljmp
push
jne
lret
xor
lret
push
xor
sti
dec
rclb
mov
mov
xor
jge
icebp
rclb
sub
mov
cltd
hlt
and
das
ss
sbb
cmp
xor
roll
xchg
shr
push
sub
sbb
xchg
lods
mov
out
ss
mov
jle
popf
clc
adc
mov
push
add
cmpsb
or
xchg
insl
pop
push
mov
out
bound
aam
jae
push
ss
cmp
mov
cmp
aas
nop
pop
lea
pusha
xchg
mov
iret
dec
ret
aam
popa
adc
cltd
jb
sub
add
int
popa
data16
mov
fimull
hlt
xchg
aad
xlat
pusha
lock
in
adc
push
fsts
in
aad
lret
inc
xor
push
movsl
sti
fdivs
scas
add
ljmp
jno
or
or
mov
mov
out
adc
xor
int
sbb
sub
cmp
inc
push
out
mov
mov
cmp
mov
sbb
repnz
jnp
jmp
jbe
add
fs
out
dec
inc
fstp
frstor
je
mov
mov
add
xor
sbb
ja
add
addr16
pop
jne
dec
xchg
jge
sub
pop
xchg
int3
scas
pop
xchg
insl
test
push
fincstp
inc
pop
lods
fabs
dec
xchg
int
sub
sbb
lahf
lret
jae
sbb
test
pushl
push
repnz
xchg
xor
int
push
or
mulb
repz
adc
jmp
xchg
aad
lret
aad
out
jecxz
fists
inc
repnz
stos
push
sbb
sub
cmc
mov
xchg
or
sub
jnp
jl
jp
cmp
mov
jne
pop
sahf
jne
ljmp
sbb
push
pop
mov
and
inc
iret
mov
inc
mov
dec
sub
xchg
ljmp
outsl
mov
lds
sbb
movsb
cmpl
in
les
jno
xchg
cmc
outsl
add
pushf
gs
and
pop
adcb
adc
cmp
fstl
ret
das
js
jl
hlt
xchg
jp
push
loopw
pop
cmp
inc
shr
inc
lret
cli
xchg
lea
add
inc
mov
cltd
dec
ds
jmp
arpl
sub
rclb
rcl
dec
cmp
outsb
insb
cmpsl
push
jne
mov
repnz
inc
or
in
jmp
mov
test
test
stos
dec
ss
inc
lods
add
sub
fistpl
push
rcrl
outsl
loop
cmpsl
out
repnz
cmp
push
inc
or
stos
xor
fs
dec
aaa
addr16
xchg
daa
dec
sbb
xchg
xchg
push
or
stos
pop
sub
fdivrs
das
push
rol
cmp
add
lret
pusha
push
push
add
out
xor
ret
nop
sub
push
stos
ds
aaa
fmuls
jae
insb
call
cmpsl
mov
dec
adc
mov
repz
adc
mov
push
mov
dec
mov
sub
idivb
xor
cld
xchg
cs
rorl
inc
ds
push
mov
dec
shlb
sahf
clc
ss
out
arpl
jecxz
aaa
mov
out
jno
insb
jle
mov
mov
mov
sub
xchg
std
mov
mov
push
rolb
loope
lret
adc
pop
fnsave
inc
push
mov
cmpsb
sahf
cmp
je
shrl
sub
cmp
sbb
pop
insb
aam
cld
idiv
jle
popf
pushf
inc
push
sub
into
subl
cmpsb
sub
in
out
mov
add
pop
ds
jno
mov
js
sti
pop
inc
out
bound
testl
popl
xchg
xchg
icebp
aaa
loopne
pop
mov
push
or
lea
jmp
jbe
daa
loope
lret
gs
push
dec
int
push
xor
xchg
pop
jne
test
daa
cmp
outsl
in
xor
bnd
test
or
in
push
adc
cmpsl
icebp
lret
xchg
dec
and
xor
les
es
lods
lea
pop
stos
push
push
or
outsb
das
in
fildl
jb
or
cwtl
and
xor
enter
insl
mov
jle
rcrl
inc
jns
nop
adc
mov
into
pop
test
push
push
cmpsl
push
xor
or
iret
mov
dec
or
pop
fwait
add
sarb
dec
outsl
pop
sbb
or
dec
fisubs
cmp
push
fs
adc
enter
lea
push
aaa
xchg
shlb
movsb
jns
mov
shrl
xchg
sbb
and
cli
and
push
dec
jno
call
test
add
gs
test
icebp
in
pop
adc
adc
pusha
incl
stos
cmp
notb
fucomp
mov
or
hlt
data16
cmp
pop
mov
mov
out
outsb
xchg
or
or
lds
rcrl
pusha
xor
push
sahf
mov
jae
inc
test
jo
xor
or
ret
loopne
aam
dec
mov
adc
jae
xor
mov
xor
dec
fimuls
imul
rorl
adc
mov
mov
fstps
fdiv
inc
jb
imul
scas
xchg
adc
mov
in
mov
sub
cwtl
xor
iret
callw
lds
lea
rcl
test
sbb
xchg
pextrw
xchg
sbb
mov
add
inc
enter
es
cmp
or
inc
in
test
mov
insb
shrl
in
adc
jbe
loope
push
inc
cwtl
xor
jns
xchg
mov
scas
jmp
lcall
push
and
sub
inc
call
fs
imul
imul
sbb
dec
xor
mov
push
pop
outsb
rcrl
push
sub
mov
in
loop
test
push
mov
xor
fmull
lret
xchg
or
negb
xor
inc
jns
pushf
lcall
pop
or
inc
clc
or
mov
xchg
hlt
xchg
les
jmp
aad
push
fs
pop
adc
mov
shl
jb
mulb
push
cmpsl
test
test
jnp
mov
scas
dec
adc
sub
cmp
ljmp
jg
fcoml
adc
mov
mov
push
insl
insb
push
mov
sti
jo
subb
xlat
lods
or
lds
std
add
push
jl
xor
pop
pop
inc
jg
dec
jbe
les
sbb
mov
ret
cmp
mov
and
lret
or
es
in
add
or
pop
cmpsl
add
out
dec
rcl
in
push
cmpsb
es
lcall
xor
int
outsb
cmp
push
sti
clc
fsubrl
mov
xorb
mov
sti
neg
repz
jl
ret
loope
and
push
aaa
test
pop
jg
fcmovbe
mov
scas
jle
ds
dec
pusha
dec
mov
mov
push
or
mov
outsl
mov
out
aas
sub
int3
mov
sub
pop
out
outsb
cmpsb
cs
push
nop
pop
filds
pusha
jb
mov
shrb
add
mov
das
push
idivb
jbe
cs
add
mov
dec
push
test
movsl
mov
mov
adcl
int3
mov
jne
cmp
mov
sahf
sub
jle
popa
cld
and
rorl
fldenv
fsubrs
cmp
pop
ficomps
push
lcall
mov
adcb
test
xor
jne
mov
stos
adc
pop
and
fsubrl
fdiv
leave
sub
ja
sub
xor
sub
call
cmc
shrb
cmpsb
fs
cld
jbe
adc
inc
arpl
mov
int3
leave
lds
sbb
stc
cmp
sub
loop
mov
imulb
cmpl
sbb
aad
xchg
and
int
inc
loopne
push
cwtl
dec
mov
push
mov
mov
das
ja
jns
sti
mov
and
cmp
or
js
shlb
jo
mov
stc
fistps
xor
inc
pusha
jmp
mov
pop
pop
lods
aam
lret
xor
push
jns
inc
cs
les
push
hlt
enter
cli
sbb
mov
das
icebp
adc
xchg
mov
push
int
fs
fidivl
test
popf
hlt
fmulp
xor
jp
rcl
xchg
call
or
call
sbb
push
sub
fwait
ret
clc
pushf
push
xchg
frstor
pushf
std
push
scas
mov
add
mov
inc
jns
sahf
mov
mov
xor
loop
mov
out
movsb
repz
pushf
stos
pop
in
mov
or
in
jne
je
or
loopne
js
fsubrl
fdivrl
xchg
cmpsb
fiaddl
subb
and
push
xchg
lahf
cmpsb
lock
enter
aaa
fsub
push
mov
jo
insl
and
and
jl
sahf
call
jg
inc
dec
jg
insl
loope
jae
cmpsl
xor
adc
or
sbb
push
in
in
stos
push
adc
adc
fisttpll
inc
sub
dec
mov
sbb
cmpb
fmulp
pop
ljmp
push
loop
fstp
inc
jmp
lea
push
sahf
inc
out
mov
popf
mov
sub
mov
pop
xchg
mov
call
jae
jb
add
jae
movsl
cwtl
push
movsb
inc
add
push
ret
bound
mov
lahf
push
mov
into
jo
push
popw
out
loopne
pop
add
mov
lds
fisttpl
lods
mov
add
pop
jle
or
orl
cmp
in
dec
cmpsb
test
pop
add
mov
cwtl
fadds
sbb
es
inc
clts
push
mov
insb
shrl
jmp
enter
xchg
adc
and
popf
popa
mov
push
adc
cmp
outsb
imul
sub
mov
stc
pop
les
xchg
movsl
test
insb
mov
jg
fdivrp
jecxz
or
inc
fsts
pop
sbb
scas
fstpl
adc
stc
cmpsb
filds
subb
stos
dec
pop
imul
xchg
bound
loopne
scas
js
mul
mov
push
out
mulb
sbb
jmp
push
mov
push
movsl
adc
inc
loope
and
cwtl
inc
mov
ds
popa
lret
dec
push
mov
ret
mov
cwtl
lds
std
cs
cmp
test
loop
fs
in
dec
addb
xor
pop
stos
mov
mov
pop
adc
test
and
out
push
lods
jmp
mov
ljmp
ljmp
lret
or
loop
pop
mov
sub
dec
ss
lods
out
mov
cmp
rcl
out
push
pusha
push
dec
xchg
mov
add
js
sbb
std
ljmp
xchg
or
push
cmp
jae
shll
add
sbb
add
std
aaa
aad
outsb
jl
push
adcb
nop
aaa
shl
test
mov
gs
pop
sbb
mov
ljmp
sti
popf
mov
jmp
mov
cmp
xchg
pop
jle
push
test
aaa
clc
fistpl
pusha
inc
sbb
pop
sbb
hlt
or
icebp
mov
stos
dec
or
adc
push
xor
or
clc
aam
inc
pop
cmp
adc
mov
ja
cmpb
and
xor
add
mov
dec
movsl
sub
jbe
negb
sbbb
lods
call
jg
repnz
xchg
rcrb
mov
pop
or
sbb
dec
jg
inc
dec
popl
aaa
subb
repz
jmp
roll
sub
icebp
jge
sti
fcmove
fidivrs
mov
jno
popa
inc
jmp
jmp
jl
cmp
push
xlat
mov
movb
xchg
aas
enter
push
cmp
mov
mov
rcll
into
pop
cmp
lret
cmc
movb
xchg
or
imull
in
add
movsl
xor
add
imul
cmp
shrl
sarb
popa
push
jb
xchg
dec
mov
cld
pop
cmp
pop
les
inc
loope
or
pop
sub
rorl
imul
adc
mov
adc
aaa
mov
adc
aas
add
rcrb
loope
mov
mov
mov
shrb
pushf
cmp
xchg
sarl
pushf
es
xor
mov
jne
push
je
adc
push
fwait
xchg
testl
cmpsb
inc
xchg
jns
adc
imul
aaa
jbe
mov
aam
lret
dec
in
inc
pop
pop
dec
mov
dec
jp
aam
in
mov
ret
incb
std
jmp
jns
add
jmp
jns
cwtl
shll
loope
lea
add
pop
xchg
outsb
stos
cmp
pop
into
mov
cmp
xchg
daa
cltd
xor
pop
clc
xor
push
loopne
xchg
aaa
leave
dec
aas
in
sti
push
iret
stos
decl
add
scas
hlt
push
mov
sbb
lods
stc
mov
jle
sub
inc
and
mov
cmpsb
mov
cld
push
dec
out
sbb
jo
cmp
cltd
mov
cmp
mov
mov
mov
or
xchg
mov
imul
aam
mov
xlat
cld
je
lret
mov
sub
stos
shr
aas
add
mull
pop
mov
or
sub
rcll
mov
sub
mov
mov
jmp
out
cmp
jg
add
jae
mov
pop
loopne
lret
test
lock
ds
sub
in
lods
cmp
stc
or
dec
addr16
inc
push
pushf
scas
sarb
loopne
sub
fisubl
dec
cmp
xor
pop
and
sahf
ds
cmpl
sti
inc
aad
sbb
aam
push
sub
outsb
mov
mov
jbe
fsts
fcomps
cltd
dec
or
je
jecxz
xchg
rorl
sub
ljmp
jb
pop
dec
out
mov
jecxz
test
test
enter
lahf
aaa
mov
jnp
rcll
lcall
aas
jp
inc
adc
sub
aas
ljmp
mov
std
mov
pop
fnstsw
dec
xchg
movsl
test
decl
and
jnp
stos
dec
mov
mov
mov
xchg
jnp
add
xchg
js
xor
pushf
or
cwtl
mov
les
cmpl
xchg
lret
add
loope
lcall
imul
in
jno
jne
cwtl
popa
fists
hlt
cmp
pavgb
loope
pop
cs
mov
negl
in
das
fisubrs
sti
sub
mov
and
push
xor
sti
popa
mov
mov
test
mov
clc
cmp
test
into
cltd
push
popa
aas
in
pop
repz
dec
pop
mov
incl
mov
xchg
push
sahf
pop
mov
xor
in
lcall
loope
pop
and
sbb
push
xor
das
repnz
inc
and
adc
push
fadds
in
sbb
dec
fimuls
xor
arpl
inc
aaa
es
cmp
lds
insl
scas
mull
in
jbe
leave
out
out
stos
lods
sub
scas
pushf
sub
cli
xor
mov
pop
in
imul
or
mov
pop
pop
and
ja
xchg
and
mov
mov
sbbl
mov
push
or
xchg
push
mov
ja
flds
xchg
call
jecxz
sub
xchg
arpl
sbb
push
mov
push
movsl
rorb
and
rcrb
and
popf
in
imul
clc
ret
lahf
call
or
movsl
decl
adc
cmovnp
cwtl
mov
xchg
xor
mov
dec
lret
loop
cld
add
and
out
jg
rcrb
aad
ror
addb
push
mov
aam
xchg
icebp
ljmp
push
dec
push
orb
aas
push
inc
fsubrl
dec
in
scas
test
cmpsb
add
das
push
testb
popf
cmc
cmp
mov
cltd
outsl
popa
push
jae
xchg
cmp
xchg
or
xchg
mov
in
test
cs
icebp
xchg
lock
hlt
repnz
scas
lock
gs
jnp
clc
pop
loopne
pusha
sub
mov
xchg
inc
shl
sbb
rorl
push
jp
out
adc
movsl
ss
xchg
inc
or
push
mov
jp
andl
cmpsl
xchg
ds
test
adc
jmp
stc
jo
push
inc
iret
push
fst
pop
jno
test
gs
mov
mov
fsts
in
mov
in
mov
outsl
mov
mov
xchg
test
mov
cld
inc
sub
je
adc
xor
pop
cmpsb
cli
push
sub
sbb
subl
loop
or
adc
lret
add
gs
repz
dec
push
loopne
loopne
pop
pushf
mov
mov
sub
movsb
dec
adc
mov
sub
push
pop
or
dec
sub
jmp
mov
push
sub
bound
out
negl
mov
insl
aaa
sbb
or
push
jns
adc
in
mov
dec
loop
push
jbe
pop
mov
popa
cmpl
lcall
mov
dec
int3
inc
push
shlb
ret
sahf
popa
and
lea
cmp
and
imul
out
push
data16
mov
fsubl
pop
pop
cltd
mov
fwait
cmpsb
mov
sbb
xorl
adc
outsw
movsb
dec
mov
movsb
jp
inc
sahf
fdivs
mov
mov
adc
cmp
fwait
jo
mov
push
int
cld
popf
xor
sub
jno
ss
xchg
shrb
std
test
mov
ret
jg
or
push
imul
mov
xchg
bound
inc
aam
nop
scas
dec
cwtd
flds
xor
in
push
or
xor
cmp
or
jg
repz
into
sbb
xchg
adc
inc
mov
xchg
ret
add
in
adc
cmc
push
lds
lods
pop
aas
add
addr16
mov
add
scas
lea
shr
pop
aas
xchg
lret
sbb
test
repnz
jno
adc
aaa
sbb
cld
aas
or
cld
jl
sbb
insb
xor
inc
ss
loope
adcb
xchg
pop
or
push
call
pop
push
out
push
fdivl
adc
movsl
icebp
inc
pop
stos
subl
lock
jl
pop
dec
pop
push
sbb
and
xor
imul
popa
push
lock
sub
pop
je
xlat
or
and
pop
iret
pop
pop
xor
dec
mov
jbe
es
aas
push
push
jp
xchg
out
xor
dec
xchg
adc
xchg
ds
pop
xchg
test
vpmaxsw
aam
mov
mov
sub
xor
movl
push
mov
inc
jl
test
adc
shlb
push
mov
leave
mov
imulw
dec
jmp
jb
or
xorb
nop
sub
xor
dec
fmull
ret
adc
je
xor
jbe
add
cmc
and
mov
int3
mov
sbb
scas
stc
cmpsb
sbb
mov
sbb
call
loope
dec
cmp
inc
out
and
into
insl
test
cmp
arpl
mov
xchg
clc
cmp
or
subl
lret
push
ljmp
adc
mov
mov
bound
mov
dec
and
sbb
test
jecxz
inc
iret
inc
adc
sub
clc
bound
push
hlt
sarb
lahf
mov
pop
mov
imul
mov
xor
inc
dec
xchg
lahf
push
imul
push
fidivl
rol
outsl
into
and
sub
cmpsl
mov
mov
lea
cmp
sub
pmulhw
adc
inc
mov
jno
xor
xchg
xchg
loop
sbb
xor
dec
sub
mov
test
leave
mov
lret
je
xor
cmp
lods
mov
mov
push
fdivrs
mov
fcompl
dec
enter
inc
sbb
dec
int
cmp
clc
jae
dec
pushf
mov
stc
gs
jb
jae
leave
loop
popa
sbb
mov
or
aam
pop
jns
mov
inc
cmc
jo
shl
lcall
push
push
push
es
pop
js
push
inc
setg
popa
mov
and
add
lret
data16
pop
jle
mov
push
xor
add
je
add
sub
adcl
cltd
push
add
inc
movsl
inc
aad
into
pop
lret
cmp
push
jno
adc
jge
push
push
das
orl
mov
les
andb
addb
cmpsl
sub
mov
out
pop
divb
mov
xchg
or
pusha
cmp
ds
shlb
cmp
mov
mov
test
and
mov
shll
mov
xchg
fstps
stos
icebp
lea
pop
icebp
pop
andb
mov
xchg
sub
aam
or
adc
mov
sarb
stos
inc
leave
loope
shl
aam
mov
gs
push
lods
movsb
or
test
or
shl
repz
test
ror
xchg
pop
add
in
int3
sub
lret
subl
mov
ror
sti
rolb
jmp
mov
int
subb
xor
in
xor
jns
or
mov
jge
push
sbb
inc
rcrb
jle
addb
fwait
icebp
sub
jg
adc
cld
mov
loop
neg
arpl
div
imul
push
inc
pop
mov
add
ror
push
sbb
push
cmp
and
adc
xchg
cmp
inc
jbe
sbb
cld
repnz
xchg
xlat
dec
scas
rclb
cmc
adc
int3
mov
scas
push
jbe
loopne
pop
mov
or
sub
ret
push
push
cld
dec
push
pop
jle
outsb
das
cli
mov
ss
in
lret
pop
mov
ss
scas
loope
pop
xchg
scas
int
xlat
or
lcall
push
sbb
add
or
push
lds
dec
adc
push
in
cmp
dec
adc
andps
nop
incl
mov
adc
stc
xlat
push
insb
loope
test
pushf
inc
sbb
loopne
enter
add
into
sub
stos
and
xchg
gs
xor
rclb
out
std
fnstenv
xor
fidivs
jge
repz
lret
or
jo
xlat
add
or
test
sub
inc
movsl
repnz
adcb
mov
xor
dec
cmp
ss
lock
loopne
jbe
adc
mov
loop
sbb
xchg
push
sbb
pop
xor
iret
sbb
adc
pop
jl
or
sub
sub
mov
push
mov
mov
aas
xchg
mov
xlat
fisttpll
jne
test
sub
sub
adc
xor
int3
sbb
push
lret
adc
xchg
stc
js
xor
mov
std
pop
test
call
or
jle
mulb
sbb
or
insb
sub
and
or
lea
or
sbb
xor
call
push
scas
dec
sbb
adc
in
sbb
push
fsubs
addl
mov
inc
pop
fsubr
mov
adc
sbb
jmp
mov
inc
push
std
in
and
fmul
loop
shll
pop
and
add
nop
negl
cmc
push
push
mov
fildl
negb
jns
cwtl
adc
leave
cli
xor
ljmp
faddl
jno
mov
int3
pop
testb
push
xor
inc
sub
or
sub
xor
out
or
xor
inc
mov
jmp
push
jne
roll
inc
mov
clc
aad
push
or
clc
and
mov
push
add
jne
or
int3
cwtl
jns
sub
mov
test
nop
ret
out
sahf
aas
int
pop
and
insl
insl
stc
repnz
xchg
aam
scas
mov
stc
rcrl
add
mov
push
xchg
cmp
dec
imul
fs
xchg
xor
and
imul
cmp
cltd
ds
inc
dec
sbb
mov
mov
dec
maxps
loope
mov
cmpsl
testl
inc
scas
and
sbb
fwait
push
cmp
adc
push
clc
xchg
movsb
es
das
sbb
mov
test
imul
cmpsl
subb
jmp
scas
insb
pop
insl
fdivrs
scas
pop
lahf
int
imul
add
fnsave
leave
out
out
push
jno
icebp
jnp
repnz
cmp
or
stos
popa
and
adc
loope
clc
xor
push
xor
xchg
popa
mov
mov
inc
sub
jne
add
xchg
and
inc
stos
push
push
add
hlt
xchg
jg
insb
aam
jno
aam
mov
lock
sub
sbb
addr16
imul
loope
fcoms
mov
mov
mov
leave
cli
in
outsl
xchg
xor
jbe
repnz
jbe
inc
cmpsl
adc
sti
mov
into
sub
mov
sub
hlt
js
jne
out
int
push
sub
ficompl
pusha
cmpsb
aas
cltd
adc
xor
sbb
data16
test
mov
cmp
or
cmp
adc
or
or
js
addr16
pop
and
jle
xchg
push
or
icebp
push
mov
movsb
iret
sbbl
or
rcrl
sub
xor
rcr
mov
mov
pusha
cmp
gs
jmp
loop
rorl
xchg
dec
js
jnp
lods
jns
ret
enter
outsl
push
jg
fimull
jae
loope
js
xchg
cmp
out
mov
sti
jb
cmpsl
into
cmpsl
jo
mov
inc
cmp
sbb
je
sbb
icebp
out
push
gs
mov
in
loope
imul
and
das
pop
xchg
push
enter
xor
dec
fsubr
pop
pop
test
out
dec
fwait
insb
test
push
push
pop
movsl
lret
stos
mov
ret
jecxz
sbb
stos
push
orl
jne
insb
lret
pop
ja
daa
or
add
orl
shr
and
adc
mov
repnz
divb
cmp
das
sub
popf
dec
adc
dec
mov
pop
dec
adcb
inc
stc
ret
inc
xchg
ds
sti
mov
lret
dec
lret
xor
jge
adc
pop
and
into
leave
test
arpl
mov
push
pushf
adc
aas
nop
pusha
fisubs
in
fwait
xchg
jbe
or
test
sub
aad
lods
mov
dec
cmpsb
mov
sbb
or
pop
cwtl
adc
jo
mov
cs
lret
out
ror
push
push
adc
hlt
jne
testb
xchg
ret
dec
mov
push
lret
icebp
mov
call
aas
cmpsb
mov
mov
iret
test
cmovae
test
lea
lds
lods
cmp
sub
mov
jno
iret
mov
stc
dec
push
cli
out
stc
pop
aad
jecxz
pop
xor
aas
cmp
adc
loopne
add
add
sbb
add
or
xchg
push
movsb
in
sub
imul
inc
sbb
pop
inc
sub
xlat
mov
int3
cs
xchg
xor
std
push
or
cli
cwtl
cmp
jno
stos
push
lods
insb
or
test
sub
insl
gs
or
adc
fcomps
cmp
inc
movsl
inc
cmpsl
cmp
xor
outsb
cltd
or
mov
dec
clc
mov
aas
pusha
adc
lds
shl
jnp
jbe
lret
push
add
fsub
aam
cli
out
out
insb
outsl
and
sbb
or
shlb
and
jns
push
cltd
push
add
cltd
and
jle
out
out
je
or
xor
cmp
gs
das
into
sti
out
jno
jne
lock
test
pushf
test
lea
inc
arpl
mov
mov
xchg
sub
mov
std
and
xchg
cwtl
fs
sbb
pop
test
jle
pop
mov
imul
or
popf
lds
mov
lods
aad
and
lods
push
lea
fisttpl
nop
lret
pusha
inc
sbb
cmc
dec
or
nop
ds
sub
pop
insb
xchg
and
pop
mov
jmp
icebp
gs
les
and
and
push
add
out
xchg
popf
jp
push
enter
aaa
xchg
leave
mov
cmp
sub
inc
pop
out
in
test
push
push
enter
pop
loop
testb
outsl
dec
hlt
add
inc
repz
cmp
clc
jecxz
mov
xor
xor
clc
icebp
sar
mov
jl
pop
adcb
sub
pop
xchg
bound
roll
int
lods
lods
cwtl
or
inc
dec
int
push
stos
pop
mov
mov
jns
push
and
jmp
lahf
sbbb
dec
mov
and
or
ret
ficoms
rolb
mov
outsb
aad
inc
adc
mov
or
and
mov
orl
push
and
arpl
cmp
rorl
mov
push
insl
loope
jae
push
and
ljmp
push
movsl
lret
js
in
ret
push
xchg
cmp
dec
repnz
push
mov
xchg
adc
sbb
inc
stos
cmp
lods
adc
je
ret
inc
iret
pop
testb
or
ds
dec
das
xlat
push
pop
mov
push
ljmp
jge
adcl
mov
jecxz
sbb
inc
je
add
inc
xchg
and
cmpsb
fdivrl
pop
mov
fiaddl
jge
lahf
adc
dec
push
cld
in
or
test
enter
or
push
xchg
mov
mov
jb
mov
imul
lea
mov
scas
mov
add
or
es
pop
into
mov
xor
mov
cmp
sub
clc
mov
adc
pop
fcmovu
sub
xchg
ret
nop
loopne
jbe
mov
inc
insl
aad
push
std
mov
lods
subl
xchg
add
lods
dec
pop
xor
stos
xlat
or
sub
dec
mov
lret
inc
or
mov
add
popa
aam
mov
cltd
push
lods
pusha
neg
mov
dec
nop
and
ljmp
fwait
arpl
pusha
js
cld
pushf
xor
mov
mov
mov
add
inc
xor
fisubrl
sub
mov
fisubs
mov
testl
xchg
pop
mov
mov
jnp
dec
jmp
mov
cmpsb
xchg
dec
fidivl
mov
imul
xor
sti
cmpsl
jnp
pusha
cld
leave
es
push
repz
in
out
jg
iret
mov
sbb
inc
cs
mov
cld
mov
sub
es
mov
ds
sbb
pop
sti
sbb
lret
mov
push
movsl
cs
jge
add
or
add
adc
add
sbb
sub
imul
mov
adc
mov
ds
or
cmp
jno
cltd
into
lds
insl
inc
std
loopne
mov
shlb
test
pop
fcomps
icebp
stc
lds
mov
mov
leave
lock
mov
mov
add
sbb
repnz
adc
mov
xchg
jo
mov
mov
int
xchg
xchg
push
daa
pop
xchg
das
xor
jns
xchg
inc
dec
cmp
adc
mov
fs
jg
ret
mov
inc
enter
and
mov
adc
cmp
jne
sbb
cwtl
lret
mov
out
out
cwtl
jp
pop
rcrb
adc
incb
add
add
jmp
mov
roll
scas
mov
cmp
pop
mov
mov
sub
nop
and
and
in
mov
mov
adc
and
rep
test
stos
scas
imul
mov
mov
adc
out
add
ss
mov
xor
mov
ret
push
mov
fcoml
or
rcrl
test
adc
lret
pop
cmp
jg
repz
and
and
jl
fs
sub
and
push
movsb
mov
lock
out
cmp
xchg
inc
sbb
pushf
add
mov
and
pop
sti
lahf
lods
sub
inc
xchg
push
cmp
sub
xchg
testb
and
fst
insl
sub
dec
mov
enter
mov
cmp
paddsw
in
jbe
inc
fldenv
outsl
fldcw
mov
ss
call
xlat
pop
cmp
popa
roll
sti
inc
lods
das
outsb
aam
outsl
mov
cli
add
dec
mov
push
iret
in
data16
sti
cmpsb
cmp
dec
mov
int3
dec
and
mov
dec
out
adc
ljmp
or
mov
aaa
pop
icebp
xor
fwait
roll
add
xlat
cmp
dec
mov
bound
cwtl
sahf
sbb
cmp
sar
ret
cs
mov
insl
shrb
movsl
ljmp
addl
adc
mov
mov
jae
out
push
pop
stc
sub
jbe
jl
mov
dec
stos
xor
notb
dec
pop
mov
add
or
xchg
test
mov
shlb
addr16
dec
cmp
nop
fidivl
cmp
add
jnp
cmpsl
outsb
out
negb
mov
inc
shlb
push
add
sbb
test
adc
cltd
add
inc
sub
loop
push
das
lds
xchg
les
push
jle
pop
inc
nop
out
roll
sbb
dec
pop
or
hlt
dec
jae
icebp
sahf
or
pop
movsl
pushf
dec
xchg
imul
push
push
stos
fs
cmpsl
pushf
imul
lods
push
popa
sbb
and
jmp
xchg
hlt
xor
clc
aam
adc
mov
sbb
pop
loope
in
fsubl
subl
pop
enter
stos
sub
add
cs
test
mov
std
pop
jl
push
out
int
jmp
jnp
dec
rcll
jnp
jmp
rclb
idivb
dec
dec
insl
pop
ret
sbb
rorl
out
call
pop
test
xchg
cltd
xor
sub
repz
es
pop
dec
add
shl
insl
movsl
and
js
dec
inc
and
mov
imul
dec
xor
sub
pushf
out
push
pop
out
mov
cmpsl
movsl
mov
inc
push
imul
mov
sahf
jae
outsl
dec
jne
inc
mov
leave
push
shl
fsubr
stos
mov
arpl
inc
xor
stos
or
mov
rorl
lds
std
dec
nop
pop
lds
outsl
add
or
inc
sarl
cmp
loope
lds
or
or
add
dec
nop
or
shlb
jg
nop
xor
mov
notl
ds
mov
leave
lds
std
fimull
imul
rolb
out
in
fimull
sub
sbb
xor
psraw
icebp
mov
testl
jle
shlb
scas
insb
sbb
xlat
out
xor
or
gs
outsb
pop
mov
neg
in
or
sbb
lcall
jle
js
mov
add
dec
out
xor
mov
xchg
pushf
xor
scas
xor
push
or
jl
sbb
aam
mov
xor
xchg
mov
adc
sbb
xchg
scas
in
inc
xor
in
test
cwtl
sti
mov
lds
sbb
fmull
out
cmp
xchg
sub
movsb
cmp
mov
flds
jmp
jns
adc
and
sub
cmp
outsb
cmp
and
cmp
dec
test
lods
inc
dec
fisubrl
mov
mov
cltd
out
outsb
orb
addb
inc
xlat
cmpsl
lock
and
dec
pop
mov
dec
mov
mov
cmp
dec
lock
add
lret
adc
adc
mov
enter
inc
ret
sbb
into
adc
out
mov
add
cld
xchg
cmp
aas
popf
dec
mov
xorb
lock
aam
into
popf
loope
adc
xlat
pop
in
iret
and
sbb
xchg
mov
leave
adc
or
sub
popf
push
loope
push
pop
push
cli
repz
xchg
insl
xchg
fimuls
out
iret
mov
aaa
jge
sub
mov
pop
xchg
and
pop
inc
pop
sub
pop
aad
xlat
or
dec
es
pop
cwtl
lods
insb
fisttps
xchg
and
push
mov
xchg
addl
mov
stc
sbb
sbb
jno
stos
iret
or
loope
mov
xor
ds
ret
push
jno
or
inc
inc
stos
fwait
xchg
lret
js
mov
sub
mov
mov
mov
sahf
rcrl
call
lock
fists
icebp
adc
add
or
cmp
pusha
fsubr
inc
xchg
fisttps
jecxz
inc
jp
daa
sbb
in
int
rclb
jmp
xchg
adc
rol
add
loop
jp
fimuls
inc
fcoms
movsl
scas
sbb
rolb
xchg
inc
ret
jnp
jmp
or
lret
repz
sub
cmc
push
pop
pushf
sbb
lods
ret
adc
lods
fs
imul
jl
aaa
xacquire
and
in
and
cli
xchg
mov
out
mov
mov
pushf
loopne
lods
add
jl
push
out
push
shl
push
xor
pop
fnsave
shlb
cs
cmc
insl
ds
mov
pop
and
xlat
ja
mov
xchg
jo
mov
arpl
pop
xor
sbb
cmpsl
push
data16
push
into
aad
ds
fsubrs
inc
mov
stos
jbe
xor
cmc
or
push
in
ds
mov
int3
xor
dec
inc
int
fisttps
mov
cmp
stos
std
and
inc
sub
lret
repz
jb
imul
pop
std
mov
ret
into
mov
aad
rorl
es
lret
leave
pop
jae
jo
test
xchg
mov
lods
lahf
xor
add
loopne
divb
push
lods
jecxz
jne
adc
mov
fsubrl
mov
mov
lea
xchg
inc
cmp
mov
or
rcl
in
das
push
inc
pop
aam
push
daa
cltd
adc
iret
mov
and
clc
mov
outsl
push
sbb
inc
sbb
cwtl
cmp
ret
xor
adc
int
cmp
dec
and
sahf
pop
jae
cmp
inc
inc
xchg
jb
dec
xchg
iret
repz
pop
dec
lret
dec
andnps
jg
push
adc
mov
push
cmp
fistpll
fdivs
in
sbb
ret
lcall
dec
arpl
jl
xor
xor
insb
fld
jnp
sbb
mov
xor
mov
xchg
movsb
inc
insb
and
inc
jne
icebp
adc
sahf
insb
and
in
and
cmp
adc
sbbb
push
push
jae
cltd
into
lds
sub
xchg
mov
mov
sbbl
sti
rcr
test
inc
out
jmp
mov
push
jg
popf
je
ljmp
cmp
outsb
or
mov
lock
push
movsb
lock
xchg
xchg
pop
xchg
call
sub
or
shl
in
lock
mov
test
xchg
ret
mov
bound
ret
add
int
call
sbb
mov
fnstcw
jae
xlat
int
mov
test
dec
push
cmpsb
sub
push
push
cmpsl
sbb
fimull
aas
jp
ret
cmp
adc
and
cli
loope
test
in
dec
ret
xchg
mov
clc
mov
lret
andl
dec
mov
test
mov
add
sahf
mov
mov
jp
outsb
cmp
hlt
mov
inc
or
dec
push
outsb
sub
mov
outsb
outsl
pop
cld
inc
addr16
mov
shlb
fstpt
inc
cmp
and
mov
mov
pop
int3
pop
mov
arpl
and
sub
adc
jo
jnp
test
gs
and
cmp
into
inc
fcmovnu
outsb
test
cmc
mov
lea
repnz
dec
xchg
ljmp
push
xchg
std
pop
mov
ds
popl
repz
aas
or
jae
xchg
xchg
cmp
in
in
xchg
sti
lret
jb
push
mov
fidivl
push
cmp
push
aam
pop
xor
mov
stos
adc
sub
ljmp
adc
imul
ja
int3
leave
je
lahf
test
and
in
insl
aaa
imul
mov
xchg
mov
ret
jb
into
rcrb
ror
cmp
push
or
mov
lds
out
cmp
xor
inc
mov
andl
cmc
sub
shll
les
outsl
mov
popa
push
addr16
inc
jnp
dec
outsb
cli
cmp
mov
push
add
sti
or
pushf
sub
adc
mov
and
mov
xor
push
in
iret
out
shlb
add
lods
pop
pop
test
mov
mov
inc
pshufw
test
jmp
loope
loopne
loop
fisubl
outsb
out
xchg
divl
ret
pop
aaa
je
mov
jae
mov
stc
mov
repz
loopne
std
test
popa
xor
ret
pop
jl
daa
out
push
pop
ds
or
frstor
cwtl
xchg
pop
mov
stos
xchg
iret
inc
in
dec
mov
jmp
dec
je
jge
mov
lret
sbb
popa
stos
mov
gs
aas
xor
push
xchg
push
pop
repnz
pushf
div
inc
adc
dec
ja
push
dec
movl
cld
inc
mov
outsb
fs
jo
insl
je
or
ja
iret
mov
push
fdivrs
pop
mov
or
cwtl
sahf
mov
mov
scas
pushf
dec
xchg
xchg
jbe
dec
aam
cmpb
or
cmp
les
xchg
cmc
loopne
add
xchg
add
lods
add
dec
and
pop
aam
mov
or
mov
jecxz
jle
das
nop
and
es
hlt
bnd
pushf
dec
inc
leave
inc
sub
outsl
add
shrl
pop
push
fisubrl
out
stos
pop
ficompl
cli
shll
mov
cmp
push
xchg
or
addb
aam
push
orb
testl
stos
dec
pop
movsl
or
shlb
clc
push
leave
xor
add
xor
cmc
jns
sbb
daa
js
push
fs
mov
aam
aam
ret
sbb
push
je
mov
sub
cmp
outsl
mov
ret
es
mov
fwait
data16
pop
dec
out
nop
mov
push
jecxz
inc
mov
push
dec
and
cli
test
pop
dec
jno
xlat
cmpsb
add
popa
scas
inc
int3
fucomp
repnz
mov
ss
shlb
bound
jae
cmc
cmpsl
iret
mov
inc
and
add
fimuls
les
mov
in
movsb
gs
lock
fwait
dec
and
cmp
daa
sub
dec
mov
fldenv
mov
xor
es
sbb
popa
push
loopne
js
inc
mov
or
dec
testl
push
cmpsb
lock
test
push
xor
rcrb
mov
inc
and
clc
mov
aaa
stc
sbb
insb
adc
sbb
jecxz
sbb
pop
loopne
loope
nop
mov
in
ljmp
mov
aas
pop
hlt
push
sub
xchg
push
loop
fsub
arpl
and
add
or
and
sbb
sbb
mov
dec
mov
fs
adc
stos
xchg
das
mov
push
push
lock
and
sub
sbb
je
fisubrs
and
sbb
dec
aaa
ja
dec
mov
push
jp
mov
sbb
cmpsb
pop
and
repz
pop
sti
push
shlb
inc
inc
or
pusha
or
scas
sbb
adc
push
dec
push
inc
addr16
dec
and
mov
inc
push
jo
dec
stos
dec
rdmsr
and
pop
mov
xchg
leave
adc
push
gs
and
jno
sti
test
add
outsl
jge
or
sub
add
sbb
sub
or
or
test
add
fisttpll
adc
and
out
xchg
sti
push
inc
sti
jnp
lcall
popa
mov
add
and
or
pop
in
shr
mov
dec
add
popf
mov
or
lds
and
movsb
dec
iret
pop
das
pop
mov
inc
fstpt
popf
adc
aam
fwait
jg
aad
push
add
cld
fdiv
mov
hlt
and
mov
push
fidivs
push
cwtl
test
adc
aas
rcrl
inc
cwtl
lahf
push
and
nop
add
jp
scas
adc
dec
loopne
lods
jecxz
lahf
pop
sub
sti
movsb
shl
sti
fsubrs
ret
dec
xchg
dec
mov
int
call
cmp
outsb
lret
jmp
push
arpl
inc
fisttpl
or
inc
jb
scas
scas
push
es
icebp
daa
shlb
jp
and
cmp
sub
lock
adc
stos
imul
fdiv
mov
loope
enter
inc
mov
shrb
mov
in
fisttps
jle
ljmp
pop
icebp
in
mov
lret
and
sbb
jnp
leave
inc
mov
test
popl
lahf
inc
xchg
cmp
sarl
jae
sahf
in
std
pop
push
mov
cwtl
je
dec
cmpl
clc
adc
insl
mov
ljmp
daa
ret
popa
fcmovu
xchg
ud0
lahf
push
loop
or
ljmp
mov
repnz
stos
cld
push
ljmp
cmp
loopne
push
add
arpl
sub
movsb
mov
xchg
mov
pop
and
xor
mov
insb
and
dec
dec
fwait
push
sbb
sub
jmp
addb
lahf
cmpsb
adc
ja
and
xchg
nop
xor
out
aad
in
cmpsl
sbb
mov
cmp
xlat
jg
mov
arpl
cmpb
or
mov
mov
and
pop
mov
xchg
dec
and
jmp
and
xlat
inc
jb,pn
int3
adc
xor
fsubl
scas
and
int3
xor
dec
sbb
pop
inc
pop
pusha
cmpsl
push
int
xchg
rcrl
jae
loop
pusha
mul
add
testb
dec
mov
inc
sahf
inc
test
jnp
mov
add
push
lret
and
les
lret
push
lret
int3
jns
in
loopne
mov
call
loopne
lds
mov
aad
cltd
dec
push
popa
cmp
sbb
mov
mov
shll
test
add
or
cmpsl
mov
rclb
repnz
xor
mov
pop
lods
cs
push
fsts
pop
out
adcb
xor
xor
pop
xlat
mov
inc
mov
in
add
inc
fwait
ja
fcoms
sbb
mov
stos
and
repnz
sbbl
fiaddl
sbb
push
aad
or
push
mov
mov
ja
sbb
mov
mov
lds
sti
inc
stos
pop
ss
or
jne
and
testl
inc
adc
inc
sbb
pop
adc
push
inc
xor
test
xor
inc
sbb
addb
mov
loope
mov
mov
cmpb
loope
fcomps
mov
cmp
and
mov
xchg
xchg
xchg
in
mov
pusha
es
imul
roll
test
js
std
outsb
mov
lods
ljmp
mov
cmpsb
dec
test
push
xchg
jbe
pop
lret
dec
addl
movsb
ss
sbb
inc
adc
sbb
data16
ds
push
fucomp
xchg
sub
addr16
inc
cmp
repz
xor
lds
xchg
test
jp
imul
mov
push
std
and
fisubl
test
cmc
mov
pop
cmp
or
outsb
push
or
out
ret
test
push
dec
push
in
sti
or
push
mulb
imul
lock
mov
dec
aad
out
mov
mov
cmpsl
movsb
dec
cmp
adc
jbe
or
add
decb
in
mov
sub
mov
dec
adc
xchg
dec
jns
cmc
rcl
scas
mulb
repnz
fisttpll
cmp
xchg
mov
lret
and
clc
lods
and
js
pop
orb
add
mov
mov
and
mov
gs
sbb
sbb
or
test
mov
mov
pushf
mov
add
sti
leave
sahf
adc
jnp
add
push
jecxz
dec
xor
mov
sub
fstpt
aas
out
pop
fdivrs
gs
pop
lods
pushf
add
push
mov
pop
sarl
inc
lea
jae
mov
fnstcw
xchg
mov
out
in
outsl
mov
je
mov
imul
mov
pop
cmpsb
or
mov
push
mov
or
aaa
insb
mov
loopne
lcall
ret
pop
jmp
jmp
adc
and
cmp
mov
add
mov
rcr
pusha
mov
add
add
fwait
sub
repnz
push
mov
add
xchg
lock
es
xor
and
les
pop
idivb
xor
js
out
sub
dec
xchg
popa
pushf
idivl
inc
fcompl
popa
roll
cmp
jno
adcb
and
push
repnz
mov
out
js
loop
cli
jl
imul
xor
sub
xor
inc
or
inc
dec
in
stc
ret
sbb
stc
scas
inc
ljmp
sahf
stos
mov
jb
iret
cmp
decb
sbb
lds
sub
inc
ret
cmc
or
sub
dec
cld
iret
inc
add
mov
mov
adc
push
mov
les
out
ljmp
push
and
mov
xchg
sub
inc
les
sbb
or
pop
scas
scas
pop
cmpsl
cmpsl
inc
shl
lods
cmp
icebp
scas
sbb
sti
out
les
repz
mov
mov
test
sti
out
dec
stc
add
ret
xchg
sub
sub
aaa
mov
mov
mov
pop
jb
mov
push
lret
subl
lods
sti
xor
dec
mov
cmc
push
lods
clc
dec
inc
iret
xchg
inc
bound
movsl
inc
sub
push
pop
jb
clc
push
mov
mov
in
mov
xchg
mov
mov
cs
jg
xchg
add
out
push
jle
mov
insb
outsb
call
xchg
or
fcoml
rcrb
push
cmp
rcrb
inc
cmpsl
dec
shl
mov
std
xchg
xor
inc
mov
inc
adc
jb
adc
mov
mov
gs
ljmp
inc
sub
cmp
mov
xor
jle
dec
dec
mov
adc
push
pop
sbb
rclb
out
js
add
addr16
mov
rcrl
jbe
lock
nop
sub
mov
xchg
xchg
lds
imul
mov
std
mov
sbb
push
outsl
pop
add
fisttpll
push
or
mov
aaa
mov
pop
testl
or
push
sbb
scas
xor
test
pusha
scas
imul
add
pop
xchg
mov
imul
inc
ret
outsl
mull
jp
inc
mull
lock
pop
sbb
mov
and
daa
fsub
xchg
sbb
adc
add
inc
sub
ja
pop
pop
sarb
daa
mov
rcll
adc
test
mov
push
mov
iret
rorl
imul
dec
pop
sbb
mov
lds
cmp
add
xor
push
cmpsb
rclb
movsl
bound
dec
rol
mov
ja
or
pop
cmp
paddsw
mov
mov
ret
sub
mov
lahf
lds
andl
mov
lods
shll
adc
dec
fcom
lea
push
mov
fstl
lret
cmpb
inc
xchg
dec
sub
clc
jbe
ss
fcoms
int3
or
fsts
adc
jbe
adc
mov
das
adc
inc
rorl
and
gs
xor
sbb
dec
and
jae
sbb
das
imul
mov
inc
mov
mov
insl
xchg
push
cmpsb
sub
cld
add
ret
pushf
or
out
add
out
ja
lcall
int
or
arpl
pop
sbb
ljmp
int3
pop
dec
cli
jnp
andb
jne
cmp
daa
ja
rol
faddp
sub
jne
cli
sti
push
or
jp
lock
push
cli
inc
fisttps
xchg
fimuls
aam
jmp
out
mov
or
push
cmp
aad
sbbb
call
aas
xor
mov
pusha
addb
imul
adc
jp
mov
mov
sbb
push
dec
and
aam
movsb
ja
xchg
test
pop
mov
dec
add
in
shrl
cmp
lcall
and
popf
and
lret
popf
es
js
push
in
imul
dec
inc
shll
int3
cmp
repz
push
mov
xor
sti
loope
xchg
out
lods
arpl
lahf
push
shl
pusha
mov
shrl
cmpsl
add
or
mov
mov
push
out
fiaddl
adc
movswl
sub
call
pusha
cmc
inc
insb
hlt
js
shrl
movsb
jo
mov
or
ret
test
pusha
push
repnz
adc
jp
pop
pop
lret
repnz
sahf
daa
sahf
sahf
stc
je
add
jae
jo
js
adc
cmp
pop
mov
xchg
addb
jle
gs
cltd
mov
out
int
cld
scas
lock
insb
or
out
mov
push
push
mov
ds
mov
jo
lods
jge
sbb
orl
cli
add
xchg
cld
loop
in
xchg
cmp
dec
xor
imul
incl
movsb
pop
inc
in
daa
cmp
std
shll
lcall
push
push
das
adc
dec
mov
in
shlb
insb
sub
les
xchg
xor
adc
into
xorl
testl
ljmp
mov
ret
jne
mov
jo
dec
add
mov
out
or
mov
xor
repnz
jl
and
push
pop
out
movsl
shl
mov
stc
pop
shll
mov
push
arpl
dec
adc
stos
stos
jle
fs
xchg
adc
stos
data16
scas
mov
or
xor
mov
sbb
mov
rol
sbb
icebp
sub
or
inc
xchg
leave
decl
xchg
sbb
inc
in
mov
adc
cmp
nop
in
push
jb
daa
xchg
mov
andb
xchg
adc
mov
fcomi
cltd
sub
sar
cmp
cmpsl
jge
out
popf
sbb
adc
xchg
idivb
xor
loope
lods
scas
jmp
arpl
mov
cs
push
cmp
lret
aam
mov
into
adcb
cmp
push
subb
fbstp
inc
and
push
jmp
cmp
rol
sbb
std
xor
adc
arpl
test
int3
sbb
jb
jmp
pop
stos
pop
pushf
frstor
dec
clc
imul
dec
sbb
push
dec
out
xchg
out
pop
pushf
fwait
cmp
scas
ficomps
icebp
jns
test
fs
xchg
mov
jge
lret
cmpsl
js
incl
sbb
mov
jle
fbld
jo
mov
notb
mov
jmp
sbb
and
loope
xchg
das
xor
div
mov
sub
push
imull
inc
loop
call
dec
mov
xor
leave
cs
je
inc
or
jecxz
cmpsb
in
jecxz
jae
cmpsb
enter
mov
or
fsub
packsswb
in
sbb
rorb
repnz
inc
sarb
push
inc
int3
jp
cmp
inc
fsincos
shlb
jnp
add
xchg
pop
ret
jle
cmp
add
pop
into
lods
and
xchg
clc
icebp
mov
das
sbb
popf
shl
into
cmpsl
mov
inc
call
sbb
fstl
jl
and
aad
pop
and
fisttps
push
mov
into
sub
icebp
adc
negb
ljmp
cmp
mov
loopne
movsl
sahf
les
add
shl
mov
je
add
imul
mov
push
jno
push
ret
loop
add
pop
cwtl
jl
bnd
loop
sub
mov
and
xor
dec
jmp
shrb
adc
mov
sub
xchg
jb
dec
or
aam
mov
mov
call
subl
xor
fimuls
cmp
repz
sahf
jecxz
iret
xchg
xchg
ret
dec
xor
ret
pop
sahf
jl,pn
jle
sub
flds
add
enter
aad
jecxz
push
frstor
or
js
add
xchg
xchg
mov
xor
mov
nop
adc
lret
xchg
add
cltd
or
fwait
fwait
jle
and
push
inc
cltd
ljmp
imul
adc
fisubs
add
icebp
fldenv
adc
xchg
pushf
mov
sub
inc
fs
jl
dec
push
lea
and
mov
sbb
add
into
push
loop
insb
fidivrs
xlat
mov
inc
fiadds
movsb
mov
cmc
movsb
jbe
cmp
sahf
jecxz
push
pop
scas
or
or
repz
inc
jl
in
fsubr
clc
sub
fsubrs
xor
arpl
adc
test
push
enter
add
dec
and
inc
data16
dec
lds
inc
or
ret
inc
js
cmc
add
add
sbb
inc
dec
mov
movsl
pop
leave
fs
pop
addr16
loop
sahf
xchg
push
adc
mov
hlt
dec
sbb
repz
ja
lcall
cmpsl
cwtl
push
xor
and
aad
add
and
push
mov
fbld
pushf
aad
jecxz
call
test
cmc
call
es
jo
aam
je
jmp
mov
js
mov
jbe
mov
fs
xor
mov
fwait
out
add
outsb
mov
sub
pop
adc
push
data16
je
mov
jg
pop
push
dec
fbld
ss
jmp
fwait
dec
out
dec
dec
or
sarb
enter
jae
addr16
mov
and
ljmp
fwait
sub
mov
clc
sbb
aam
pop
push
dec
sub
dec
xor
dec
mov
popf
data16
xlat
mov
sar
mov
sbb
jmp
and
cmpsl
sub
js
inc
fwait
xchg
pop
push
pop
call
stos
pop
xor
int3
jecxz
dec
cmpb
ds
subl
cmp
cwtl
pop
push
mov
and
push
xor
les
push
outsl
fs
ds
dec
jp
stc
adc
sub
lcall
pop
xchg
pushf
and
jne
pop
call
add
xchg
add
push
stos
das
inc
pop
loopne
in
pop
mov
sub
jnp
adc
fs
je
rclb
call
call
mov
xor
mov
fstpl
xor
callw
xchg
std
lock
inc
enter
mov
rolb
sbb
dec
jecxz
jl
add
lahf
mov
into
sbb
addr16
and
dec
pop
sub
aaa
nop
mov
jg
hlt
mov
mov
mov
push
xorl
cmp
incl
in
sbb
divb
mov
cmc
mov
iret
jg
inc
aas
rcrb
ja
mov
mov
loopne
sbb
mov
sub
ss
repnz
outsb
fwait
xor
fs
sarb
icebp
jle
fldenv
and
out
mov
out
popa
xchg
jle
xor
psubw
push
mov
mov
rcrb
mov
scas
mov
inc
xlat
cmp
pushf
sub
sbb
xchg
adc
dec
jmp
cmpsb
fisubrl
iret
test
mov
jle
xchg
loopne
rcrb
add
sbb
mov
xor
sub
ja
push
and
fidivs
das
jbe
bnd
push
push
out
das
mov
push
fisubrs
and
cmp
loop
xchg
cmp
dec
mov
jb
fwait
mov
popf
inc
cmpsb
stos
lock
adc
bound
les
push
pushf
cmp
adc
leave
xor
pop
scas
mull
outsb
xchg
movsl
ret
jl
out
dec
insl
sbb
mov
enter
jl
cmpsb
dec
push
movsb
jmp
inc
mov
jecxz
sub
dec
js
mov
int3
shlb
and
adc
stos
sub
sbb
inc
or
pushf
mov
out
xchg
enter
mov
fdivrl
andb
mov
cli
sub
jae
mov
scas
data16
cmpsl
arpl
jmp
pop
cmc
fs
jb
fs
jmp
or
dec
and
lahf
jl
add
movsb
cli
in
mov
inc
add
pop
push
in
outsb
jle
dec
lods
fbld
pop
scas
out
stc
aam
into
mov
adc
mov
or
cmp
mov
mov
adc
xchg
push
in
int3
sbb
and
xor
sahf
pop
xlat
lods
or
sarb
or
pushf
dec
mov
lods
jle
xchg
addr16
mov
xor
cmp
adc
bound
leave
fcmovnb
jmp
and
or
mov
aaa
and
aam
adc
leave
fldenv
cmc
dec
cs
mov
sbb
imul
xor
mov
aaa
js
popa
testl
adc
stc
pop
sub
mov
cmp
dec
xchg
fwait
inc
inc
out
repz
icebp
idiv
mov
cli
xchg
stc
inc
push
aaa
aad
mov
sbb
inc
loop
mul
mov
ja
cmp
mov
addr16
xchg
pop
xor
stos
loop
fsubr
mov
ja
xchg
cmp
cmpsb
sbb
pusha
push
push
dec
xchg
mov
es
inc
addr16
ss
mov
and
fistpll
lock
sbb
push
fwait
pop
sahf
and
jno
adc
mulb
pop
pop
incb
inc
or
cmp
mov
sub
mov
sahf
pop
or
fimuls
adc
mov
fsubl
lcall
cli
xchg
popa
jae
mov
sub
fs
sti
pop
sbb
outsl
fdiv
cmp
inc
rclb
insb
xchg
add
mov
cmp
cwtl
int3
data16
aad
push
loopne
xor
fbld
ljmp
inc
int
or
cmp
shll
xchg
push
push
adc
adc
sub
mov
aaa
cmp
fucom
add
mov
lods
ljmp
scas
sti
and
js
testb
add
lret
lret
jns
cmp
ja
sbb
mov
outsl
add
fwait
stc
mov
lahf
pop
xlat
sahf
lods
or
adc
mov
lret
lds
repz
fwait
adc
sbb
leave
rcr
repnz
sar
sub
pop
lcall
ficomps
loope
adc
sub
add
xchg
jb
cmp
sub
cmp
xchg
ds
and
mov
adc
sub
jns
rcrl
lock
mov
fs
sbb
push
push
inc
rorb
jmp
cmp
fnstenv
dec
dec
sbb
int
hlt
nop
loope
jns
cmpsl
cwtl
daa
and
pop
fidivrl
aam
loope
push
push
popa
sbb
mov
movsl
addb
mov
dec
in
test
repnz
mov
jmp
mov
pop
inc
fildll
xchg
and
sbb
adc
xorl
iret
popf
test
bound
push
xor
lahf
fadd
mov
cmp
bound
pop
push
mov
push
jnp
hlt
mull
and
xchg
les
xchg
rcl
and
lret
lock
stos
jmp
loope
data16
push
mov
inc
mov
lret
sarl
mov
mov
sub
int
xchg
sbb
pop
sub
xchg
lahf
mov
lods
movsb
push
xchg
sub
dec
rolb
imul
gs
mov
inc
test
addr16
leave
fs
filds
jg
les
loopne
push
mov
xchg
inc
xlat
das
fs
scas
rcrl
cli
pop
pop
clc
cmp
call
mov
dec
aaa
jae
in
popf
mov
mov
cmp
cli
call
push
cmp
lcall
add
hlt
sti
sbb
xchg
sub
dec
add
fwait
lock
pop
notl
push
shlb
js
or
push
in
stc
dec
xchg
lea
aas
inc
popf
xchg
inc
int3
insl
repnz
sbb
xor
lcall
jmp
cmpsl
sub
movsb
xchg
sub
movsb
jmp
stc
data16
rclb
repz
icebp
movsl
loope
out
jno
pusha
mov
popa
in
lret
in
inc
daa
in
cmpsb
push
add
inc
push
mov
push
and
aam
pop
add
mov
xchg
jne
jb
mov
dec
push
xchg
jmp
in
div
mov
or
aad
in
lods
mov
jle
sbb
push
mov
out
lret
jecxz
add
xchg
mov
push
xchg
ret
pop
jge
xchg
aaa
push
call
pop
xlat
sbb
push
mov
sarb
cmp
pop
scas
lea
mov
mov
xchg
inc
filds
push
xchg
sarl
push
repnz
inc
test
add
xchg
out
inc
mov
jp
push
addl
fmull
adc
mov
pusha
or
xlat
mov
aas
fimull
rorb
xrelease
ret
or
or
das
leave
mov
js
inc
jne
jmp
jle
je
dec
sar
popa
and
push
cmp
test
mov
jg
popa
fisttps
aas
dec
out
add
inc
pop
push
mov
mov
cmpsb
sub
fistl
mov
mov
and
repz
in
arpl
hlt
test
sub
adc
or
out
push
pusha
cli
mov
mov
popa
rol
sarb
lcall
in
gs
adc
inc
dec
mov
imul
dec
imull
xchg
cmp
lock
inc
mov
xchg
addr16
mov
data16
cmpl
add
fs
xor
add
sahf
les
shlb
pop
adc
stos
cmp
push
dec
pop
test
in
xor
jne
rcrb
dec
add
scas
imul
pusha
dec
ljmp
inc
inc
mov
out
fbstp
and
xor
sahf
lods
andb
pop
dec
js
das
sar
aas
or
ficoml
jne
jp
add
mov
sbb
xchg
fwait
and
pop
cmp
jb
sbb
jmp
mov
adc
and
sub
push
jmp
je
jecxz
jge
pop
mov
testb
lods
pop
jg
xor
sbb
jmp
divl
repz
and
loop
clc
je
adc
arpl
sub
jge
dec
hlt
xor
cs
mov
es
xchg
lods
inc
mov
inc
sub
mov
jg
or
ljmp
adcl
cmp
sbb
pusha
jo
iret
mov
out
ds
jp
test
clc
iret
cmp
xchg
notb
mov
stc
or
mov
jp
push
adcl
sbb
jae
das
sub
rcrl
xor
sub
sub
movsl
insb
push
imul
fmuls
ficoml
mov
jle
and
jl
lret
sti
int3
cmp
in
cmc
mov
lds
xlat
int
ds
xlat
popf
iret
add
in
iret
jns
rcrb
lea
mov
pushf
push
movsb
jg
mov
sbb
fcomi
fidivl
hlt
cmp
sbb
mov
jne
outsl
pop
pop
xchg
stos
mov
push
xlat
push
mov
pop
mov
mov
sbb
pop
aaa
mov
jle
inc
jge
fprem
jl
es
xlat
xchg
xchg
and
iret
mov
nop
fwait
shll
xchg
mov
adc
dec
xchg
push
out
int3
cmp
sbb
dec
ss
mov
rorb
gs
in
fldcw
push
dec
or
adc
mov
fwait
movsb
dec
lahf
incb
sbb
push
out
or
jne
cmp
lahf
movsb
push
push
or
add
into
outsl
sbb
rsqrtps
dec
jge
jmp
ret
push
and
jb
out
addl
xchg
mov
icebp
mov
loop
xchg
lds
testb
or
stos
stc
lcall
mov
cmp
xor
add
xor
pushf
push
ror
fdiv
inc
rcl
adc
jno
pop
es
loop
pop
hlt
test
sahf
sarb
iret
ret
data16
enter
test
sub
movsb
out
xchg
mov
inc
cli
push
mov
cmp
push
cwtl
jge
scas
lret
or
aaa
push
mov
mov
mov
int
lods
lahf
imul
and
daa
aam
push
mov
dec
pusha
inc
mov
or
xor
dec
jae
ljmp
add
or
xchg
jl
mov
jp
push
jo
sub
loop
lock
nop
cli
mov
cmp
sti
inc
rcrb
icebp
or
outsl
pop
jne
mov
xor
push
std
scas
pop
fistl
test
and
lock
sbb
inc
and
shll
sbb
add
jle
cs
hlt
pop
xchg
pop
push
mov
jmp
mov
rcrl
ljmp
xchg
mov
imul
cmp
stc
pop
push
sub
jg
nop
push
dec
sbb
sti
insb
add
testl
pop
aaa
dec
je
je
fcomps
push
aaa
xchg
xchg
mov
out
sbb
roll
addr16
out
lock
popl
inc
push
dec
pusha
in
adc
jns
mov
adc
jl
sbb
das
cmpsl
mov
mov
aad
push
fadds
rorb
cltd
testl
not
mov
jbe
lahf
pusha
loop
lahf
insb
pop
arpl
ror
inc
je
shll
sti
jns
push
cli
pop
mov
jbe
sbb
std
xchg
orl
in
cmp
xchg
les
pop
loope
stos
inc
pusha
scas
test
dec
sbb
loopne
shlb
cmp
lds
popa
or
data16
addl
vmsave
mov
mov
inc
sarl
cmp
loopne
insb
icebp
rcl
push
shll
pop
into
stos
sti
pop
xchg
or
or
cli
adc
cmp
xchg
das
sbb
jmp
pop
test
repz
ja
mov
fnstsw
xchg
push
mov
cli
movsl
pop
jne
xchg
cltd
es
ljmp
sbb
jne
loopne
adc
std
outsb
sti
aam
xchg
sti
ds
addr16
ret
xchg
push
daa
jecxz
lahf
or
decl
mov
js
ret
sub
mov
inc
out
pop
cli
sbb
push
mov
jae
mov
in
clc
rcll
je
lret
push
in
cmp
repz
loope
in
enter
push
outsb
cmpsb
sub
cmpsb
mov
sti
fldpi
out
adc
jo
loope
add
cmc
or
jp
cmpsb
adc
les
movsb
enter
hlt
push
into
repz
jge
adc
je
dec
dec
leave
mov
clc
mov
insl
push
imul
lahf
sub
adc
inc
dec
mov
push
fcomps
sahf
push
inc
movsl
data16
pop
xchg
adc
pop
call
cmp
aas
imul
inc
jl
fisttps
pop
mov
inc
and
mov
pop
imul
shl
pcmpeqw
pushf
scas
sti
jnp
and
or
mov
xchg
cmp
data16
and
testl
shll
ljmp
mov
repnz
jmp
mov
mov
test
addr16
and
sbb
mov
cmp
outsb
sbb
mov
mov
adc
mov
js
mov
mov
fwait
cmp
pop
adc
shrl
push
or
add
push
pop
in
pop
inc
mov
push
aaa
mov
sbb
ficoml
mov
js
fisubl
je
xlat
inc
mov
jmp
sti
iret
mov
jecxz
cld
aad
enter
sbb
or
dec
das
in
mov
test
push
dec
adcb
jo
cwtl
repnz
xchg
add
addr16
xchg
and
pop
ja
jmp
push
dec
mov
lahf
adc
adc
fdivs
xor
nop
adc
test
push
aad
adc
push
mov
dec
aam
out
xchg
or
js
sub
insb
mov
dec
mov
xchg
or
fwait
cmp
scas
dec
push
out
jg
pop
mov
stos
stos
or
push
fildl
sub
insb
xchg
pop
and
inc
mov
and
add
mov
and
xor
or
add
dec
dec
nop
cwtl
arpl
sub
cmp
cli
xor
xor
popf
mov
les
mov
mov
pop
shrl
ss
mov
mov
add
stc
stos
into
fldcw
int3
and
or
mov
icebp
insl
cltd
mov
jo
daa
lret
pop
mov
dec
repnz
sub
sbb
jmp
and
aam
jg
loope
orb
pop
fsub
dec
and
out
xchg
or
fnsave
inc
mov
in
mov
inc
movsb
mov
je
or
pop
sahf
imul
lods
mov
mov
shrb
sub
repnz
dec
nop
sahf
scas
rcll
push
mov
cwtl
mov
adc
adcl
out
cmp
push
push
mov
ret
loope
push
cmp
xchg
insb
scas
fimull
ret
test
iret
repnz
fstl
movsb
mov
dec
pop
jl
lret
dec
pushf
push
fdivrs
mov
adc
xor
xor
outsb
sti
xor
subb
in
cmp
je
jae
xor
xchg
popa
inc
sahf
push
jmp
movsb
or
push
sub
jmp
ja
loop
push
inc
stc
or
stc
jo
in
mov
loop
ljmp
jno
pop
mov
xlat
in
ss
into
xchg
sbb
xchg
repz
push
into
repz
aas
adc
mov
push
xchg
adc
adc
stos
mov
movsl
adc
adc
mov
pop
xchg
cmpsb
data16
sbb
or
and
ds
imul
lds
mov
lret
cmp
shll
out
adc
rclb
lods
and
jecxz
sub
data16
mov
fisttpl
rol
adc
xchg
das
test
mov
mov
push
push
dec
sub
mov
fsubl
mov
pop
repz
adcl
scas
xchg
clc
add
out
cld
cmp
stos
in
ss
jle
push
mov
pop
lret
jle
cwtl
lret
out
ss
aas
stc
or
mov
fcmovb
add
clc
lahf
repz
lret
mov
lret
ret
out
fs
push
or
in
xchg
mov
mov
mov
aad
mov
call
xor
movsl
insb
cmp
je
xor
and
repnz
or
dec
xchg
stc
adc
mov
pop
movsl
js
ret
jge
jle
mov
adc
xor
adc
or
xchg
push
mov
inc
push
shrl
or
ds
sbb
jae
xchg
ljmp
dec
cmp
sbb
adc
cmpl
cmp
imul
das
mov
sbb
push
lds
movsl
pusha
push
jge
lea
test
xchg
call
insb
add
mov
icebp
or
dec
loopne
lcall
gs
out
sarl
adc
sbb
dec
pop
or
fists
jge
xor
movsb
aaa
push
mov
cmpsl
inc
mov
sub
mov
bound
xor
xchg
xorl
adc
cmp
add
fwait
cmp
ds
jmp
lret
stos
in
sahf
clc
mov
jb
enter
movsl
outsl
cmpsl
dec
fimuls
loop
push
rcrl
dec
inc
outsb
lahf
cld
les
scas
push
in
in
inc
inc
enter
sbb
lcall
cwtl
or
mov
or
sbb
lods
adc
loop
outsl
mov
jnp
popf
je
mov
push
jecxz
std
stos
sarb
mov
sub
bound
add
js
and
cmp
mov
xor
xor
mov
dec
add
jns
pop
test
rol
data16
jmp
dec
add
xchg
stos
sub
or
stc
jnp
pop
sbb
xor
shrb
pop
mov
push
push
xchg
iret
mov
test
std
inc
push
lock
cld
sub
movsb
or
and
hlt
adc
movsl
mov
iret
movsl
andb
push
insb
inc
jmp
mov
push
xchg
out
sbb
jp
outsl
xchg
pop
dec
add
sbb
push
aad
xchg
in
cmpl
fs
adc
div
fistpl
lea
jns
outsl
arpl
pop
addr16
pop
mov
xchg
ljmp
inc
ja
lret
xor
sbb
adc
inc
mov
test
fsubrl
or
faddl
sti
cmp
mov
imul
cmp
pushf
ror
or
and
sub
mov
pop
sbb
xchg
sti
xchg
les
push
push
pushf
cmp
iret
xor
ljmp
rclb
in
cmpsb
cs
xchg
push
pop
fimuls
std
xorb
or
pop
fdivs
mov
outsb
adcb
and
jnp
mov
mov
xchg
sub
out
mov
imul
roll
stc
testb
test
loope
jg
xchg
and
push
ljmp
es
cmp
mov
xchg
xlat
lea
out
ss
orb
or
movd
adc
inc
mov
xor
loop
xchg
cmc
mov
aas
fiadds
cltd
push
fwait
inc
movsb
jns
pop
aam
cmp
mov
fistpll
popf
gs
add
mov
lret
das
mov
lcall
jns
and
inc
in
sbb
repnz
push
test
jp
pop
pop
out
cld
mov
ss
add
cmp
subb
add
xchg
roll
clc
inc
mov
sahf
xchg
insl
jle
test
and
loope
out
mov
rol
pop
cld
xchg
jno
pushf
inc
and
ljmp
movsb
scas
in
jnp
mov
mov
into
push
out
movsb
jg
and
in
and
mov
sarb
mov
mov
dec
sbb
pop
push
adc
sbb
divl
push
lret
adc
mov
test
addr16
je
push
dec
mov
inc
aas
xchg
sbb
jns
stos
pop
pop
adc
jp
loopne
xchg
add
arpl
mov
inc
fnsave
movsl
pop
rorb
xchg
stos
push
xchg
lcall
jg
jl
scas
repz
sbb
ret
lret
ret
add
pop
inc
dec
dec
jne
loope
jne
mov
fistpl
xchg
or
stos
and
adc
stc
inc
mov
loopne
mov
push
xchg
pop
movlps
inc
into
dec
lods
push
enter
test
out
jbe
movsb
stos
outsb
mov
jmp
cmp
push
pop
aas
jmp
mov
sub
xchg
fiadds
fcompl
loop
dec
shll
jl
popf
pop
mov
xor
mov
pop
popf
dec
mov
or
inc
cltd
shl
enter
mov
jmp
popf
subl
daa
cmp
jnp
jp
repnz
and
outsb
or
lods
ret
incb
loopne
out
icebp
ret
test
pop
add
lcall
sbb
out
and
test
xor
mov
sti
mov
dec
and
shl
aaa
dec
inc
rcr
add
les
mulb
ficomps
ljmp
push
add
stos
jb
jg
lahf
mov
mov
jmp
insb
rclb
ds
in
in
mov
jmp
outsb
int3
mov
fwait
xchg
insb
xchg
pop
add
dec
popf
pop
inc
icebp
jge
cmp
or
mov
dec
wbinvd
pop
push
push
leave
jle
bound
ficompl
sbb
dec
cli
pop
mov
xor
xor
loop
dec
add
mov
and
add
push
lret
out
lods
cli
and
cli
jb
pusha
adc
dec
es
andb
pop
xorl
mov
jp
ss
out
mov
mov
faddl
push
mov
jnp
mov
fnstsw
into
mov
mov
into
out
or
or
cs
ja
aaa
icebp
or
fidivs
push
lret
aaa
sub
inc
fldl2t
fidivrs
jnp
pop
insb
fdivs
mov
jecxz
outsb
xchg
out
fadds
outsl
mov
inc
or
shll
jle
decb
pop
push
dec
push
ljmp
cmp
cmp
sbb
xlat
cmpsb
sub
pusha
cmpsl
or
jae
loopne
aam
lcall
dec
rcl
dec
imul
xor
xor
mov
dec
roll
daa
fs
imul
dec
es
lods
cltd
mov
inc
movl
pop
dec
cmp
scas
pcmpgtd
pop
sub
data16
scas
mov
pusha
into
es
xor
sub
push
lods
stos
loopne
sar
pushf
and
push
icebp
xlat
shll
pop
lret
jge
push
push
pop
cmp
les
dec
fmuls
shlb
pop
daa
sbb
mov
sahf
or
out
repz
jbe
scas
and
mov
mov
dec
inc
in
mov
jg
mov
clc
xchg
adc
push
test
dec
sub
or
cwtl
mov
cltd
lods
sbb
sbb
lea
test
pop
popa
decb
sahf
stc
adc
lahf
cltd
sbb
cmp
iret
arpl
add
fstp
sub
cltd
imul
jnp
das
mov
out
lahf
pop
addl
cmp
lahf
mov
cs
cmp
imul
adc
addr16
jl
subl
jae
cmp
ss
sbb
daa
movsl
mov
or
iret
mov
and
jle
jb
sarl
jne
out
ss
push
or
es
lahf
pop
jo
pop
and
addr16
mov
test
dec
das
lcall
cs
scas
mov
sub
dec
daa
fisttpll
out
and
fisttpll
arpl
mov
in
jne
je
arpl
sub
out
sub
fistpl
loope
outsb
jmp
sub
scas
jbe
xchg
sub
je
es
repz
hlt
pusha
lret
adc
xchg
cmp
mov
sbb
or
or
inc
aad
in
jnp
mov
out
adc
xor
mov
repz
lds
imul
mov
fwait
out
mov
jno
gs
daa
mov
out
pushf
xchg
insb
mov
in
mov
xchg
dec
inc
test
sti
inc
hlt
push
daa
inc
fwait
dec
xor
out
lods
xchg
sbb
out
xor
pop
sbb
xlat
lret
sbb
jo
inc
push
sti
popf
mov
xorl
jb
mov
or
push
xor
insb
pop
js
cmp
pop
aaa
clc
adc
push
xchg
stc
adc
dec
mov
xor
insb
xchg
jge
fdivp
sbb
scas
and
mov
movsb
jo
sub
adc
pop
and
test
cmp
adc
inc
xor
fdivs
enter
jle
stos
sbb
lods
pop
mov
sub
xchg
jl
test
lds
or
add
stos
xchg
or
icebp
mov
test
lock
neg
jne
cmp
lock
pop
xor
lea
stc
or
or
jmp
cwtl
repz
and
stos
and
cmc
cmpxchg
js
aam
std
push
das
incl
mov
inc
ds
mov
lock
loopne
bound
shlb
or
inc
pop
pop
insl
add
cld
xor
pop
xchg
andl
cld
mov
push
sbbb
push
mov
mov
and
xchg
shlb
aas
lock
in
sbb
fistps
inc
xor
mov
dec
arpl
in
cltd
xchg
sahf
ret
dec
fcoml
lods
repnz
aas
dec
fs
dec
ljmp
or
nop
aam
sub
sub
andl
jns
leave
and
push
xchg
adc
cmp
out
push
push
pop
shlb
xadd
nop
ret
std
stc
or
test
bound
xor
insl
call
jnp
adc
xchg
xor
sarb
rcrl
push
and
sti
or
mov
sbb
xchg
adc
xchg
push
sti
cs
sub
incl
sub
push
lahf
mov
jb
test
bound
out
loopne
xchg
out
inc
fadds
sbb
cmp
sahf
out
pusha
xchg
cmp
jmp
jge
add
add
jmp
and
mov
cmp
adc
idivl
test
add
lret
dec
jg
sarb
shl
xor
sti
mov
call
in
loope
sarl
inc
hlt
ret
idivl
pop
jl
in
xchg
add
adc
incl
jg
mov
jg
sti
push
sahf
cmc
jmp
repnz
mov
frstor
pop
ds
xchg
push
lods
cmp
icebp
xchg
sbb
jne
in
hlt
mov
or
call
push
mov
xor
cwtl
xchg
cli
and
xchg
test
inc
or
in
jbe
sbbl
icebp
mov
loope
pushf
cmpsb
into
sbb
out
pop
idivl
or
sub
ret
in
jmp
notb
fucom
std
add
sbb
lahf
and
xchg
fimull
or
dec
mov
rcll
sub
jle
js
jg
mov
je
cli
outsb
and
xchg
imul
cwtl
inc
mov
push
adc
adc
pop
sub
and
mov
add
add
xchg
inc
inc
sarl
pushf
xor
add
mov
dec
inc
or
lods
and
adc
pop
or
xor
js
or
fimuls
add
outsb
mov
push
in
stos
push
pop
cmp
fdivs
dec
jo
das
xchg
scas
adc
xor
test
cmpsl
mov
filds
mov
gs
popf
xor
mov
lret
test
sub
fldenv
push
cld
cmp
js
rol
out
in
sarb
aaa
push
push
push
xchg
add
pop
push
mov
add
cwtl
fsts
mov
pop
cmp
cwtl
mov
or
nop
mov
jae
aas
push
pop
xchg
dec
sahf
push
aad
cs
jmp
xor
mov
hlt
or
pop
mov
cmp
inc
jns
lahf
das
jb
ret
aad
shlb
fstpl
adc
jns
insl
xchg
aam
add
ja
dec
dec
or
out
adc
inc
dec
scas
test
dec
ds
xor
mov
jns
movsl
or
ss
loopne
aad
xchg
jbe
adcb
mov
xchg
pop
sbb
jmp
insb
pop
jl
mov
in
xorb
mov
es
cltd
loope
push
add
test
jge
mov
push
mov
add
movb
std
or
fcmovnbe
xchg
dec
and
dec
in
int
rep
dec
cmc
lret
pop
aaa
jecxz
lahf
cmp
push
out
movsb
jnp
aad
pop
lret
adc
cmpsb
shll
mov
jnp
ljmp
repnz
loope
and
dec
int3
arpl
mov
jo
outsb
pusha
movb
setle
loopne
pop
arpl
repz
loop
lock
add
pmulhuw
pextrw
xor
std
iret
lea
mull
adc
test
pop
das
mov
xchg
pop
dec
in
push
movsl
test
mov
nop
jg
and
xor
cmp
popa
fiadds
iret
push
sahf
push
rolb
xchg
mov
les
arpl
arpl
nop
ljmp
inc
into
out
add
or
cmpsb
mov
sub
mov
mov
jno
sub
fisubs
idivl
sub
mov
sub
sub
mov
mov
loope
int3
int
nop
jns
dec
xor
jo
and
sar
pushf
outsl
and
xchg
sar
pushf
cmc
mov
xlat
mov
nop
ret
test
xor
out
mov
call
insb
jno
pop
repz
mov
mov
cmp
mov
jno
out
pop
je
or
push
push
xchg
inc
mov
adc
jno
mov
ret
dec
pop
mov
xorl
in
push
push
and
dec
jp
pop
cmp
test
ret
ret
shrb
push
push
shlb
gs
dec
xor
aad
fsubrl
out
mov
and
mov
or
fidivl
fstps
mov
sbb
cmp
or
movb
sub
pmaxsw
jge
mov
mov
mov
ja
movsb
stos
enter
fwait
maskmovq
mull
push
repnz
les
and
cmpsl
cmp
leave
data16
mov
add
and
xchg
xor
incb
imull
inc
xorb
jne
cmp
iret
std
movsb
in
rcrl
xlat
sahf
add
sub
and
test
fwait
jbe
sbb
arpl
fsub
imul
xchg
std
iret
dec
add
outsl
lea
sub
mov
out
imul
add
and
or
fnstcw
icebp
in
andl
xchg
cmpsl
cmp
lahf
dec
mov
dec
cmpl
pop
test
and
xor
adc
cmp
adc
mulb
cwtl
sub
sti
outsl
xor
ficompl
test
push
pop
mov
daa
pop
aad
adc
jne
in
insb
hlt
sub
lds
stos
push
dec
sub
shr
jns
jg
mov
leave
fucomip
clc
pop
aaa
fsubl
lret
cmp
xchg
fs
or
add
test
ret
negl
imul
adc
sahf
outsl
cmp
inc
cs
inc
push
gs
les
adcl
and
jne
movsl
psrlq
daa
cmp
and
in
iret
repz
cmp
into
stos
inc
fcoml
test
inc
pop
fildll
fcmovb
fstpt
sbb
in
movsl
cmp
mov
sub
sub
inc
inc
sar
cmpsl
insl
faddl
loopne
push
sub
es
jp
xchg
clc
in
out
cmp
ja
outsl
adc
xchg
cmp
ror
movsl
jg
orb
int3
stos
cwtl
out
gs
jl
mov
xor
or
das
add
add
add
jecxz
mov
aam
ret
shl
notb
jb
outsb
aaa
sub
cld
lods
push
jbe
xlat
cmp
inc
and
dec
add
rcr
inc
xor
mov
mov
and
lcall
sub
subl
jl
test
dec
test
sub
test
loope
dec
sbb
add
sbb
inc
leave
xchg
test
pop
sldt
add
imul
adc
mov
jb
stos
test
mov
stos
mov
addr16
outsl
ret
mov
add
int
lahf
dec
xlat
push
outsl
roll
in
jge
fstp
pop
shlb
xchg
ss
fisttpll
xchg
les
lds
pop
cli
push
pusha
movsl
or
or
mov
xor
xchg
and
dec
ljmp
lods
aad
mov
xor
pop
xchg
cmpsl
lods
lret
sub
pop
mov
push
pop
push
out
xor
or
and
cltd
movlps
jmpw
pushf
cli
push
mul
mov
adc
cmp
das
jl
iret
insb
pushf
andb
inc
test
xchg
pop
mov
xchg
mov
jne
xlat
push
iret
nop
and
jg
dec
sub
jecxz
sub
push
insl
mov
sbb
dec
pop
xor
aam
in
jg
aas
mov
hlt
pop
repz
clc
mov
je
aas
rolb
popa
sbb
mov
imul
out
mov
in
mov
add
addr16
mov
insl
leave
jae
mov
and
xchg
mov
sub
jmp
rolb
sub
xchg
lock
cli
sbb
sub
out
or
stos
and
push
inc
mov
sub
sbb
mulb
add
mov
daa
mov
js
jb
movsb
mov
mov
in
mov
pop
fs
mov
cli
or
sbb
das
in
scas
pop
pop
das
lock
xchg
sahf
fists
add
mov
das
add
or
sbb
mov
data16
mov
outsl
sahf
in
outsb
mov
or
andl
push
mov
lret
mov
pop
pop
dec
fsubl
pop
outsb
data16
pusha
mov
les
jne
int
push
lahf
movsl
cmpsl
imul
xchg
push
pop
in
lds
aad
inc
cli
rorb
sub
xchg
pop
xchg
sub
fucom
xchg
pusha
dec
push
ds
inc
push
or
ret
popl
xlat
xor
test
ds
inc
fadd
cwtl
outsl
idivl
pop
ljmp
call
out
lods
lock
out
mov
rorb
arpl
or
repz
out
ret
fimull
push
xchg
ss
sarb
fcmovb
adc
mov
loope
rcr
pop
test
stos
mov
xor
addl
pop
xchg
push
mov
adc
jne
sbb
inc
mov
out
xchg
nop
pop
add
mov
push
inc
or
sti
pusha
sub
mov
add
push
lret
mov
in
fcmovbe
sbb
fwait
stos
cltd
in
push
adc
and
icebp
inc
add
fimuls
dec
inc
enter
jge
adc
jae
adc
inc
mov
mov
sub
cmc
push
adc
imul
push
inc
xor
nop
sub
cld
push
cmpsl
cmp
dec
push
mov
lods
mov
jnp
outsb
leave
xchg
dec
cld
movsb
mov
cmc
adc
std
sysret
xchg
cmp
mov
jmp
xchg
out
popl
daa
ret
lock
stos
add
mov
es
pop
pop
mov
mov
inc
jp
in
mov
or
fwait
push
lods
xor
sti
iret
adc
mov
mov
stos
dec
aad
mov
outsl
push
mov
movsb
mov
imul
fsts
push
test
js
mov
dec
fwait
jle
out
gs
or
out
jle
pop
ret
bound
inc
add
adc
or
sub
repnz
xlat
je
or
push
leave
or
nop
imul
push
test
stos
jmp
fisubrs
out
in
or
lock
mov
ds
pop
call
hlt
je
icebp
push
adc
pop
rclb
out
xchg
jecxz
outsl
xchg
sub
lret
hlt
pop
pop
cli
xchg
mov
jmp
hlt
mov
inc
aas
shlb
lret
fwait
push
ret
adc
xor
jge
xchg
push
pop
aam
iret
jmp
mov
or
andl
mov
xor
sub
cltd
test
inc
sbb
push
pop
or
or
push
pop
sub
repz
cmp
xchg
lods
outsb
ficompl
cmp
scas
es
add
call
mov
cmp
shlb
insl
jmp
cmpsl
jns
xchg
jl
lret
ja
mov
in
jle
sbb
out
push
ljmp
jle
ret
jg
and
cwtl
hlt
notl
pop
cmovne
fwait
scas
mov
cli
push
cmp
sbb
pop
sbb
shrl
sti
add
mov
adc
daa
jnp
inc
push
push
push
dec
jg
mov
push
adc
and
ficompl
jnp
cmp
imul
popf
sbb
mov
push
fwait
sub
push
cmp
cmp
stos
pminsw
mov
add
addr16
nop
sub
mov
fs
mov
inc
lods
ljmp
out
js
divl
mov
cltd
out
shr
cmp
repnz
mov
leave
push
push
sbb
xor
test
sbb
dec
sbb
push
je
int
lret
lea
adc
fadd
loope
lahf
scas
xchg
dec
and
sbb
jecxz
mov
movsl
xchg
das
mov
ror
fs
xorb
and
xchg
xchg
and
fwait
cmp
andl
xor
pop
leave
enter
imul
mov
inc
shrl
js
sbb
or
inc
pop
push
popa
add
sbb
pop
inc
push
xchg
xchg
sbb
cmp
leave
push
cmp
adc
bound
xlat
loope
push
cli
testb
and
mov
lods
cmpb
xchg
mov
lods
mov
push
sub
popf
lock
jns
mov
clc
or
jbe
jb
jecxz
pop
push
sub
cmp
fdivs
lods
andl
xor
test
data16
inc
cli
add
and
ja
lret
arpl
mov
mov
sub
push
push
repnz
add
mov
pop
imul
xchg
jae
push
inc
lds
push
lret
xor
lea
or
jg
xchg
andl
push
repnz
inc
jnp
fs
jbe
repnz
test
jae
jge
pop
mov
dec
xchg
jecxz
inc
mov
and
stc
into
add
fisubs
call
jg
sub
pop
repnz
push
xor
cmp
xchg
ret
xchg
out
lret
popf
jo
jmp
push
cwtl
push
mov
push
pop
jmp
sahf
in
pop
lock
jge
mov
mov
les
lods
mov
push
insl
addr16
or
inc
xchg
push
repz
ret
adc
hlt
aaa
test
add
jp
lret
xlat
push
mov
add
xor
jmp
xchg
jge
xchg
jmp
xchg
mov
mov
push
mov
in
mov
shl
sti
rclb
pusha
fs
mov
cs
xor
cld
insb
xchg
inc
hlt
mov
inc
in
int3
push
sbb
jle
enter
test
nop
mov
cmp
jp
add
xor
sub
mov
loope
movsl
add
adcb
hlt
cltd
xchg
in
and
dec
adc
iret
addr16
adc
jge
cmp
push
push
lcall
scas
inc
mov
xchg
push
xor
rcrl
mov
das
lock
fbld
ficoms
outsl
je
push
cmpsl
imul
cmp
stos
mov
fiadds
std
loope
jo
push
dec
cli
pop
adc
insb
and
push
rcrl
lahf
dec
fmuls
xchg
push
popf
or
pop
std
andl
repnz
mov
lret
stc
js,pn
add
testb
sbb
popa
nop
add
pop
sar
and
pop
shrb
pop
ljmp
jns
cmpsb
push
fidivs
sbb
push
adc
dec
pop
orl
cs
and
imul
cmp
dec
loope
outsb
push
dec
mov
loope
imul
adc
fwait
pop
insl
leave
fisttpl
adcl
sbb
push
xchg
test
mov
jge
fnstsw
mov
push
xor
cmp
add
dec
fscale
stos
ljmp
ret
jmp
dec
aas
jbe
inc
hlt
and
inc
add
and
cmp
lret
filds
es
adc
pop
xchg
xor
add
adc
sbb
movsl
pushf
nop
ret
cwtl
int3
sti
iret
popf
inc
jns
popf
outsb
jnp
lods
imul
sub
daa
mov
xor
lods
sar
dec
inc
xchg
and
in
xor
lcall
or
fs
gs
adc
leave
mov
fisttpll
frstor
outsb
test
cmp
icebp
popf
jmp
cmp
icebp
and
hlt
mov
adc
jge
repz
inc
jb
andb
daa
push
rcl
xchg
pop
jle
loop
stc
inc
mov
ljmp
pop
cmpl
gs
scas
cld
ja
ljmp
incl
rclb
pop
andb
mov
sbb
pop
xor
cmpsl
push
push
arpl
mov
adc
js
test
pop
insb
jmp
dec
mov
movsb
aad
cmpsb
std
pusha
mulb
sbb
jae
imul
cmp
call
push
sbb
outsb
lcall
test
movsl
cmc
dec
push
adc
pop
fwait
popa
xchg
xor
out
dec
jo
sti
or
aam
imulb
or
push
add
sbb
aam
fcomi
test
mov
pop
xchg
sbb
push
push
outsb
icebp
sub
xchg
xchg
push
push
pop
add
mov
sbb
xlat
insb
jmp
sub
gs
mov
mov
movsb
arpl
pushf
push
gs
sbb
xchg
or
ret
mov
jb
dec
xchg
push
out
rcrl
jmp
aam
dec
mov
ja
jbe
pusha
fcomps
jns
fistl
or
cld
lcall
lods
insb
adc
ljmp
sahf
daa
mov
mov
int3
adc
lahf
jnp
dec
sarl
incb
leave
fmull
inc
push
pushf
push
nop
adc
adc
dec
scas
push
sbb
nop
cmp
pop
jl
loop
mov
push
jge
sarl
and
das
test
inc
add
adc
dec
ja
sbb
fidivrs
fsubs
daa
xchg
outsb
mov
push
push
or
push
rorl
out
das
mov
iret
cltd
mov
jnp
inc
cmp
add
paddw
or
push
xchg
gs
in
outsl
daa
jne
aaa
rcll
das
inc
test
imul
adc
push
shlb
dec
mov
int3
adc
push
adc
or
lahf
ret
rcl
aad
fildl
repz
pop
inc
mov
xchg
inc
mov
jb
pop
arpl
repz
inc
mov
adc
loopne
jno
aam
mov
cmc
and
fisttpl
push
test
fsubrp
imul
push
jl
adc
sub
cmpsl
cmpsl
xor
lock
or
push
sub
movb
jnp
jno
lret
loopne
mov
push
sbb
fidivl
ret
sub
mov
arpl
or
inc
neg
xchg
push
sbb
xchg
enter
mov
push
mov
pop
ss
stos
pop
imulb
add
leave
outsl
rcll
sbb
xchg
cmpl
rclb
addr16
ss
fcmove
hlt
xchg
aas
inc
jl
mov
stc
test
and
out
jns
jmp
jns
ror
mov
xchg
gs
jns
xchg
mov
sbb
mov
jp
addr16
arpl
idivb
sbb
jb
or
hlt
pop
push
xchg
popf
dec
inc
xor
in
testb
movsb
lods
repz
push
dec
fwait
jno
fsub
cld
jb
out
bound
sub
sbb
cmp
rdpmc
mov
jp
imul
rcr
xlat
mov
jl
shll
fisubrl
fsubrl
xchg
sbb
ret
adc
adc
dec
movsl
jle
and
out
insl
jl
sti
lcall
sub
jmp
cmpl
cmp
call
mov
mov
xchg
cld
rclb
cld
fistl
push
jle
mov
dec
jno
in
je
mul
cmpsb
iret
push
gs
loope
cmp
dec
mov
mov
stos
cs
int
and
and
cmp
sbb
push
jnp
push
mov
jne
out
int
dec
jle
orl
dec
cmc
pop
and
lods
bswap
loope
lea
hlt
scas
mov
xchg
imul
movsl
andb
test
or
sub
je
into
mul
or
insb
jg
sbb
push
add
insl
inc
cmpsl
mov
mov
jnp
pop
xchg
sub
add
adc
and
pop
inc
sbb
inc
lahf
test
int
mov
push
outsl
stos
jae
clc
ret
cld
rcll
in
cmp
pop
nop
enter
call
inc
test
or
and
insl
mov
jl
in
cld
dec
mov
popa
push
dec
fadds
addr16
or
adc
sbb
scas
ret
pop
push
faddl
xchg
sub
xchg
xor
xchg
lds
popa
mov
or
fcomps
cmpsl
in
clc
aas
xchg
idivl
dec
sub
push
xor
xor
das
jae
testb
push
add
mov
subb
jg
dec
rolb
lods
notb
or
imul
sbb
xchg
and
scas
or
aad
and
mov
jae
adc
push
pop
adc
jl
outsb
xor
sbb
jnp
ja
aam
movsb
inc
jmp
sub
push
int
outsb
xchg
imull
insb
out
ja
mov
iret
decb
mov
repnz
imul
pop
cmp
aad
test
add
jno
cmpl
cli
jne
inc
cmp
inc
cmp
jp
leave
ret
pop
mov
mov
je
xor
push
sub
mov
das
andps
scas
sub
mov
stos
sub
adc
cli
aam
in
push
enter
mov
les
xor
push
outsb
inc
ljmp
jle
loop
out
ficomps
adc
jno
out
addr16
scas
data16
scas
xchg
lret
inc
movsb
cmp
test
cltd
sub
call
iret
inc
nop
lds
sub
aad
cmpsl
push
shll
enter
iret
xor
xchg
test
pop
scas
pop
imul
sbb
mov
movsb
pop
test
inc
daa
int3
mov
push
movsb
cmp
sbb
movl
inc
dec
sbb
in
shlb
cmp
lock
aaa
outsb
jae
pop
mov
pop
mov
fcomip
pop
in
xchg
sbb
xchg
jge
hlt
fbld
loopne
mov
xchg
int3
mov
sahf
jne
jns
push
cs
mov
cmp
dec
adcl
xchg
repz
dec
xchg
push
test
cmpsl
push
cmp
mov
lock
js
rcll
call
jne
or
push
inc
out
std
je
repz
sti
add
arpl
hlt
jbe
jnp
pop
fisubrs
loop
les
fucomip
lea
in
lock
lods
test
xchg
xchg
gs
inc
idivb
in
out
gs
clc
jge
sub
xor
adcl
aam
test
filds
and
pop
mov
addl
jmp
inc
call
or
inc
test
scas
imul
sbb
sub
mov
pushf
push
fdivrs
subb
cwtl
mov
rol
push
ds
movsb
ficoml
fisubs
in
adc
push
lds
add
aad
push
mov
sub
test
xchg
aaa
cmp
push
aad
fs
cli
outsb
fbld
xchg
shrl
in
inc
cmp
inc
test
and
ljmp
xchg
pop
stos
adc
int3
repz
lds
mov
inc
pop
add
fcomps
outsb
cmp
xor
push
push
or
je
add
cmc
mov
xchg
cmp
jle
mov
out
push
jne
xchg
mov
mov
icebp
or
pop
push
sub
fs
imul
push
cmp
xchg
pop
int
mov
in
fnsave
push
stos
jno
pop
sbb
mov
es
and
cmp
cmp
shrb
in
push
push
mov
mov
sub
xchg
mov
enter
sbb
cli
or
andb
lcall
andl
cmp
pop
cltd
mov
cmp
call
mov
in
movaps
pop
sub
pop
mov
push
push
sub
cvtpi2ps
imulb
xlat
nop
pusha
pop
pushf
and
nop
stc
and
push
out
pop
cmpsl
push
jg
lret
fsubr
bnd
push
push
sti
jle
xchg
test
pop
sub
jne
js
rorb
xchg
lods
jg
in
adcl
or
xor
gs
push
imul
push
inc
andb
jg
xchg
and
imul
sbbl
jb
sbb
pop
loopne
ja
inc
shll
loop
std
mov
pushf
cltd
xchg
call
jb
sahf
cmc
es
inc
xchg
int
pop
mov
pop
ret
cli
sub
mov
xchg
dec
call
out
cmpl
lret
sub
fisttps
mov
ss
je
push
pushf
pop
mov
mov
pop
mov
jge
adc
sub
aas
add
gs
and
sbb
mov
outsb
out
ljmp
mov
ljmp
add
dec
push
xchg
ss
call
pop
nop
mov
dec
and
xchg
hlt
pop
push
dec
pushf
xchg
adc
xor
pop
jo,pt
sbb
cmp
popl
adcl
jg
icebp
cmp
jne
jmp
mov
dec
jge
call
dec
sbb
mov
fwait
adc
arpl
notl
xchg
mov
cmp
adc
out
mov
xchg
jno
icebp
lods
es
scas
fdivrl
hlt
sub
cmp
in
adc
cmpsl
jmp
or
ljmp
psraw
int3
inc
jge
and
das
leave
cmc
icebp
xchg
lock
lods
insb
daa
in
in
pushl
xchg
push
cltd
push
loop
addr16
dec
bnd
call
add
xor
xor
mov
sub
mov
or
adc
inc
mov
dec
mov
aam
push
sbb
xor
dec
shrl
pop
push
mov
adc
add
xchg
cs
int3
int
cmp
push
test
lock
scas
push
iret
aam
mov
cmp
inc
in
pop
push
int
pop
ja
int3
xor
dec
jbe
ficompl
push
and
pop
fcoms
jbe
xchg
adc
shlb
add
push
sbb
pushf
insb
iret
xchg
inc
jb
add
mov
les
fnsave
cld
imull
cmp
mov
pop
xchg
add
push
in
jp
ss
daa
je
xchg
insl
xchg
mov
ret
popa
cmpsl
movsb
push
inc
je
outsl
addl
mov
nop
push
fistpl
push
jns
lcall
jmp
icebp
cmp
scas
enter
mov
dec
xchg
cltd
mov
outsb
inc
orb
sahf
gs
js
pop
inc
js
sahf
ret
outsb
test
sbb
mov
push
movsl
ds
mov
je
mov
pushf
inc
aad
cltd
or
pop
dec
outsb
push
lods
mov
dec
shll
xchg
jmp
rcl
push
fistps
or
sti
fiadds
xchg
arpl
add
lret
adc
adc
mov
jns
mov
cmpsb
push
dec
imul
pop
outsb
fwait
rcll
clc
and
xchg
cmpsl
xor
cli
xchg
or
cld
shrb
pop
xchg
xchg
stos
add
pop
fcomps
xchg
out
stc
sti
sbb
add
pusha
sti
fstp
push
pop
nop
ljmp
xchg
pop
dec
movsl
mov
sbb
arpl
xor
call
jb
daa
sbb
cmp
rcll
out
aas
mov
jg
pop
lcall
inc
iret
jae
lret
test
movl
shrb
fnstcw
jge
mov
orb
dec
sub
inc
adc
stos
mov
in
rorl
pop
sti
pop
mov
bound
pop
push
or
cmpsl
add
and
test
xchg
adc
add
imul
mov
scas
push
mov
ja
pushf
pop
lods
cmpl
scas
pop
jg
sbb
sbb
mov
out
cmp
outsl
in
std
xchg
jg
pop
iret
in
cmp
mov
cmp
je
cld
xchg
mov
movsb
fdivrp
xor
stos
jmp
inc
mov
lock
push
add
cmp
inc
xor
je
jl
ret
test
out
ss
jecxz
push
jecxz
lods
das
adc
stos
push
repnz
loopne
pop
adc
mov
dec
std
outsb
lret
sub
lahf
nop
movsl
mov
xchg
loopne
inc
xchg
jo
addr16
xlat
dec
fistl
mov
ds
fisubrs
cltd
aaa
jmp
mov
jl
sub
inc
xchg
jl
jle
loopne
test
pusha
sbb
mov
imul
jne
dec
mov
sarl
sti
ds
loope
les
pop
lods
jmp
push
push
pop
js
jb
call
jbe
dec
incl
add
lock
leave
mov
or
loope
in
add
imull
lods
push
sub
sub
imul
jle
stc
mov
xchg
pop
push
aas
push
iret
mov
cmpsb
add
iret
push
jg
mov
adc
xchg
or
pop
dec
push
es
fnstenv
and
enter
hlt
or
sbb
int3
or
inc
adc
dec
fsts
cwtl
jecxz
fsub
cmpsb
cmp
sub
mov
fcomps
mov
add
dec
jle
dec
mov
mov
xor
xchg
hlt
lods
inc
inc
push
mov
fdiv
add
mov
sub
shlb
leave
mov
mov
jle
push
or
jl
sbb
bound
test
js
jg
adc
aam
ss
je
ret
sbb
mov
inc
pop
add
xor
lock
cmp
mov
mov
pop
xchg
xor
sbb
lahf
adc
sub
dec
inc
lret
shll
idivl
jp
int
dec
rclb
xrelease
push
mov
insl
gs
fidivl
inc
fmull
jns
mov
lock
xchg
jnp
dec
ss
cmp
repz
adc
mov
mov
push
in
sbb
xchg
add
inc
dec
scas
jp
in
mov
clc
push
dec
lret
xchg
mov
mov
bnd
int3
stc
push
jmp
jae
pop
jl
jl
or
clc
lock
xchg
pop
fcomps
xchg
xchg
sbb
xlat
mov
cld
jge
movsl
iret
loope
xchg
ljmp
in
xchg
in
push
cmpsb
mov
lahf
sub
leave
mov
je
addr16
pop
arpl
pop
hlt
pop
push
dec
aad
test
dec
push
arpl
out
es
and
les
jg
xchg
and
fdivs
mov
dec
scas
lret
and
mov
in
xchg
mov
or
sbb
push
je
cmpsl
add
inc
rcll
add
sbb
outsb
adc
xchg
shl
jmp
jno
and
test
xor
stos
ss
add
cmpl
push
rolb
nop
shl
sbb
fisttpl
and
mov
mov
scas
out
movb
lock
fwait
push
jecxz
jmp
mov
and
xchg
ja
xorb
outsb
notb
outsb
add
inc
pop
mov
aas
xchg
bound
xor
cmc
andb
pop
xlat
push
add
outsl
nop
or
shl
shll
pop
sahf
adc
leave
xchg
popa
xor
and
cwtl
xchg
outsl
cltd
fwait
insb
sub
sub
movsl
leave
mov
lea
sbbb
mov
loop
jae
lds
lahf
and
sbb
in
aam
int3
dec
mov
dec
inc
jbe
mov
fsts
jle
jge
aad
push
pop
mov
xlat
xor
repz
adc
mov
add
fistpll
arpl
cmp
pop
pop
fistpll
addl
imul
pop
dec
jne
std
mov
adc
and
lahf
mov
scas
out
in
adc
jno
andb
es
aas
jl
aad
ret
and
push
in
enter
test
bound
out
in
mov
xchg
enter
sub
inc
insl
mov
test
mov
mov
pop
push
fidivrs
fnstenv
add
mov
and
test
mov
cmc
inc
cmpsl
jbe
imul
inc
rorl
call
dec
mov
or
or
mov
cli
loop
xor
mov
dec
lcall
ja
test
jo
repnz
leave
dec
xor
jle
in
mov
xlat
xchg
jmp
stc
mov
xchg
scas
mov
or
sahf
fsts
push
jmp
pop
inc
mov
out
loopne
es
mov
sti
cmpsb
hlt
inc
stos
xor
sbb
pop
sub
ds
movsb
out
fisttpll
cmc
rcr
mov
jmp
cld
sub
jne
out
cmp
mov
int
add
jl
push
xchg
push
sbb
outsb
hlt
jl
push
xor
mov
adc
and
je
movsb
cmp
and
adcb
sbb
push
lea
mov
jle
sub
test
pushf
dec
mov
sub
imull
push
scas
xor
xchg
cmp
cmp
ljmp
sub
insl
or
mov
pop
push
or
push
clc
jmp
inc
dec
repnz
out
mov
aaa
sub
cmovs
mov
xor
push
movsb
data16
arpl
jnp
andb
popa
xchg
rorl
and
js
pop
dec
mov
pop
adc
adc
aaa
mov
inc
dec
dec
lods
cwtl
and
cmp
sar
mov
mov
rclb
insl
icebp
fistl
inc
aas
pop
jne
xor
push
test
sub
pop
je
jmp
stc
movsl
sub
mov
adc
int
cwtl
jnp
push
iret
arpl
mov
aad
xchg
add
and
jne
comiss
out
mov
cld
xor
stos
push
testl
dec
adc
sahf
and
add
fs
out
loopne
out
jnp
jae
cwtl
clc
mov
pop
out
push
outsl
jnp
xor
mov
cld
push
dec
andl
dec
inc
xor
push
out
pop
inc
jb
out
pop
sub
sbb
xor
decb
mov
push
enter
lahf
cmp
and
jmp
cmp
loope
mov
or
out
inc
sbb
jmp
insb
loopne
add
into
lods
xchg
out
pop
movsb
es
cmpl
pop
movsb
push
sub
or
inc
das
pop
mov
mov
inc
pop
mov
call
mov
int
ss
insb
int3
fcomp
fwait
xor
xor
pop
xor
mov
js
call
mov
cmp
out
imul
repz
scas
push
pop
or
pop
xchg
inc
push
fucom
int
mov
inc
xchg
pop
lret
pop
outsb
pop
jp
sahf
mull
mov
cmpsl
aam
cmc
loopne
test
jle
test
add
push
mov
jmp
pop
stos
mov
sub
adc
js
mov
xchg
scas
cmpsb
je
fdivs
mov
mov
and
adc
mov
aam
cli
add
pop
aaa
test
imul
je
and
add
lds
cmpl
das
rcrb
sbb
pop
jb
inc
pop
inc
and
or
cld
inc
push
push
notl
stos
test
mov
inc
sub
dec
test
cld
in
loope
xchg
call
jg
jne
pop
mov
out
fwait
insl
out
std
jns
mov
and
xlat
test
mov
and
clc
xlat
push
xchg
mov
fnstsw
ja
fsubl
or
push
fwait
jg
nop
call
mov
fdivrs
stos
mul
jo
and
mov
neg
xlat
mov
cli
std
in
xchg
jp
pushf
mov
mov
or
mov
sub
mov
fsubr
dec
pop
pusha
jmp
and
xor
ljmp
les
mov
divl
mov
mov
and
add
cmp
cmpsl
dec
inc
not
mov
int3
loope
and
clc
stos
in
icebp
nop
in
int
or
in
movsl
push
scas
or
and
in
jnp
sub
fsts
js
lock
cwtl
lret
jns
sbb
ret
mov
shl
mull
push
xor
jb
loop
cmpsb
hlt
and
bound
sub
iret
sar
push
cli
out
scas
or
inc
les
fbstp
add
cmpsl
imul
scas
sbb
lcall
popa
pop
xlat
je
scas
jbe
scas
xor
mov
jge
arpl
lret
or
sub
cli
popf
stos
imul
xchg
stos
mov
adc
mov
add
inc
mov
push
add
xor
les
outsl
push
movsl
lds
xor
lea
xor
jo
fnstenv
hlt
sub
in
les
fcomi
shr
push
or
push
sbb
lods
pop
dec
repz
pushf
inc
popa
adc
push
cmp
inc
arpl
inc
data16
cmc
ds
dec
push
aas
aad
mov
stos
insl
lcall
dec
test
xor
loop
mov
pop
int3
push
daa
mov
pop
lock
je
cmp
fisubl
insl
mov
sub
cmpsl
dec
mov
xchg
add
cmpsl
jb
sbb
cmpsl
mov
mov
arpl
adc
div
shr
js
sub
loop
xlat
jg
call
mov
inc
ljmp
cmpsl
popa
sbb
mov
fdiv
ds
call
inc
lock
push
mov
add
sbb
dec
leave
mov
mov
sahf
mov
ss
inc
jno
dec
mov
dec
cmp
mov
ljmp
imul
jbe
hlt
sbb
dec
mov
outsl
mov
lret
ret
out
mov
popa
mov
test
cmpsl
orl
mov
jecxz
inc
ds
mov
xchg
out
mov
orl
pop
xchg
sbb
int
jb
xchg
inc
jl
sar
and
bound
into
les
ds
and
mov
xor
fdivrl
in
xor
adc
pop
fildl
ljmp
sidtl
pop
in
push
imul
or
iret
and
add
or
mov
lret
xchg
jmp
or
fcmovnu
ljmp
cwtl
mov
xor
cmp
lret
cwtl
mov
bound
cs
fimull
es
xor
loope
xchg
repz
je
add
mov
in
aam
jns
dec
sbb
cmp
mov
test
sub
mov
mov
icebp
dec
clc
icebp
movsl
jb
fst
pop
pop
xor
in
add
andl
adc
iret
scas
xchg
sbb
fs
outsl
push
jns
addr16
leave
mov
enter
mov
fldt
pop
or
lods
jo
pop
mov
push
leavew
test
sub
mov
divl
adc
sub
loop
cmpsb
push
aam
cmpsl
repz
jo
popf
add
fsubr
pop
dec
pop
push
popf
iret
xorb
insb
jns
mov
sahf
cmp
iret
and
pop
pop
aas
jns
xorb
popa
push
xchg
loope
sub
dec
sub
dec
adc
pop
and
xchg
arpl
ja
and
xor
sub
and
or
mov
push
mov
lods
push
inc
jo
insl
push
roll
test
fbld
in
dec
sub
xchg
adc
xor
les
adc
xor
leave
loop
gs
xchg
push
sub
xor
outsl
pop
jb
push
andl
xor
jmp
mov
in
andb
mov
push
mov
cs
movsl
dec
mov
call
mov
mov
imul
ds
popa
lret
shll
inc
jno
jl
fstp
xor
or
ljmp
push
mov
push
xor
jle
mov
mov
pop
jl
arpl
mov
out
adc
adc
and
push
repnz
leave
sbb
aas
or
or
andb
hlt
into
stc
push
mov
xchg
gs
test
aam
sahf
arpl
lahf
push
test
push
ja
or
das
xor
aam
sub
or
mov
lea
or
dec
mov
repnz
pop
push
out
pushf
clc
mov
jb
frstor
leave
xor
mov
pop
pop
inc
mov
sbb
aam
addr16
mov
mov
leave
xor
push
pop
sahf
dec
xchg
lods
cs
xchg
dec
mov
sub
and
sbb
sbb
add
push
dec
push
mov
lods
cs
pushf
ss
mov
sbbb
in
out
enter
mov
mov
aad
adc
or
divb
jp
insb
sbb
adc
mov
ret
push
test
xchg
inc
pop
hlt
mov
fwait
push
loop
addl
xor
loop
or
cmpsb
mov
mov
push
mov
unpckhps
loop
or
gs
cmp
test
pushf
mov
jno
inc
das
sub
bswap
xor
push
fwait
sub
xor
sub
mov
dec
and
mov
add
aam
fnstcw
aad
or
es
or
pop
and
or
pop
in
daa
cmp
adc
or
aas
inc
add
add
call
pop
out
mov
shrb
ds
subb
lds
xlat
cmpb
lret
cmp
sbb
inc
pop
push
mov
pop
xchg
sub
sub
push
push
in
insb
fcoml
inc
loop
adc
push
cs
add
dec
cmpsb
mov
cmpsb
push
inc
push
jecxz
testl
jo
aas
jbe
jne
lods
mov
out
add
cs
bnd
xchg
lds
mov
push
jno
inc
pop
jmp
fwait
fs
xlat
push
inc
xchg
and
lea
nop
insl
push
mov
iret
add
lcall
push
iret
mov
repz
jge
test
and
dec
jne
ja
jbe
loopne
insl
lea
adc
adc
sbb
rcrl
xchg
cli
mov
loopne
dec
jmp
xor
sbb
cmc
scas
sti
cmp
scas
movsl
and
stos
cmp
fs
sub
sbb
xlat
loop
pop
sub
into
adc
xor
mov
ret
adc
sbb
test
insb
or
imul
int3
addr16
loope
xlat
rcll
xchg
pop
xor
and
push
pop
adc
dec
inc
arpl
cwtl
mov
bound
add
outsl
xor
addr16
adc
out
push
leave
lock
xchg
or
stos
inc
sub
add
mov
stc
mov
pop
shlb
jnp
lods
scas
add
dec
xchg
push
mov
jne
mov
pmaxub
mov
adc
rcrl
fwait
setl
xchg
xchg
pop
xchg
mov
in
pop
dec
ljmp
push
adc
add
repnz
sbb
dec
out
jbe
mov
inc
jns
push
fstl
filds
xorb
add
aaa
les
sbb
js
fwait
xchg
mov
imul
imul
nop
mov
push
add
jmp
dec
cld
mov
push
jb
nop
sub
outsb
daa
xor
leave
pop
mov
lds
sti
movsl
daa
push
or
sbb
cli
fdivrs
mov
lret
xor
lahf
js
gs
sbb
fnsave
inc
dec
mov
push
ljmp
mov
jne
fimuls
xchg
fnsave
sbb
or
adc
xchg
gs
sub
mov
cli
mov
inc
jle
stos
movsl
or
push
inc
pop
test
mov
insb
aaa
test
inc
out
cmpsb
movsb
insb
mov
fmuls
xchg
mov
lret
xchg
mov
cld
or
pop
cmp
clc
cwtl
add
sbb
cmpb
fistps
aas
jbe
push
fidivl
mov
and
sub
and
popf
inc
scas
cli
pop
lret
nop
add
push
aas
jl
js
aad
addr16
adc
mov
inc
cmovl
xor
into
lods
inc
cmp
push
cmp
inc
push
cmpsl
xchg
cli
xchg
add
add
mov
je
mov
out
cld
arpl
dec
pop
pop
fs
push
push
pop
sbb
push
and
iret
mov
mov
test
outsb
add
cmp
cli
xchg
faddl
out
mov
xchg
lods
and
and
pop
jnp
fisubs
jecxz
les
shrb
jge
xchg
pop
jbe
xor
aad
aam
int
push
sbb
push
and
stos
cmp
fcompl
mov
pop
andl
push
nop
decb
and
fwait
inc
rolb
cmp
scas
xchg
cmp
ret
mov
cmp
cmpsb
iret
popf
popa
xchg
ret
mov
and
add
dec
fistpll
outsl
pop
push
repnz
roll
div
sub
fldenv
and
push
lods
loopne
sub
inc
cwtl
jne
or
sub
cmp
call
aam
push
ret
aas
inc
popa
cmp
aas
cmp
cmp
dec
jmp
lcall
bound
sbb
mov
cmp
jae
or
adc
xor
or
cmp
notl
mov
mov
test
cld
enter
cmc
jne
push
push
add
mov
ljmp
add
add
stos
xchg
and
mov
xchg
mov
roll
jg
sbb
fdivs
jle
out
movsb
and
test
rcl
sti
lock
rclb
jecxz
and
fcomip
in
or
lret
mov
jecxz
jno
and
cwtl
sub
aad
add
pop
xor
cmp
push
ret
sahf
mov
inc
subb
push
fwait
scas
or
pop
xchg
xor
jb
fstpl
stos
cmp
add
jb
sbb
adc
mov
fidivl
enterw
jmp
daa
lods
leave
enter
test
test
lahf
sub
pop
mov
outsl
out
in
or
jns
jge
mov
inc
jnp
fs
push
dec
pop
popf
mov
negl
dec
out
fs
or
inc
fadds
cmp
adc
mov
repz
and
lods
xlat
pop
testb
mov
aad
add
mov
or
repnz
daa
aad
mov
lods
rcrl
loop
add
push
sub
jne
push
pop
mov
cmpsl
jnp
mov
and
iret
scas
add
cld
and
shl
popf
test
adc
lahf
adc
inc
addb
sar
sbb
xchg
int
add
add
inc
in
cmp
or
xchg
add
xlat
or
mov
pop
mov
mov
push
loope
lds
jle
mov
adc
data16
mov
fldt
inc
loopne
cmp
or
add
push
mov
mov
adc
lcall
mov
movsl
shrb
mov
cmp
mov
filds
ret
addr16
jo
inc
decb
add
inc
rcr
arpl
and
add
sub
sbb
or
push
lahf
lcall
sub
jns
pop
or
sarl
jge
mov
scas
es
jb
push
lock
movsl
mov
adc
xchg
lods
sub
mov
loopne
icebp
movsb
dec
cmp
inc
adc
icebp
movsb
inc
adc
mov
pop
inc
test
sbb
add
fisubrs
jmp
arpl
push
decb
jg
das
inc
pop
jo
pop
jmp
cmpsb
xorl
jmp
insl
aas
shrb
sbb
test
add
mov
xor
mov
pop
add
gs
mov
out
and
fwait
pop
pusha
or
mov
sub
cmpxchg8b
lret
xchg
xor
mov
push
xor
lret
xor
int
cmp
sti
out
xchg
out
mov
sub
cmp
ret
hlt
mov
ja
subb
in
sub
fsubrp
and
jb
add
faddl
cmp
insb
xor
jle
cs
jne
enter
jg
insl
inc
inc
cmp
pushf
dec
jmp
popf
inc
push
mov
adc
lahf
sbb
fbld
cs
mov
popa
fidivrl
je
lret
mov
dec
das
sub
das
pop
sbb
fs
int3
inc
aaa
mov
push
jp
or
dec
mov
movsl
add
int
outsb
dec
or
xor
xor
jae
mov
bound
xchg
push
push
bound
push
lret
sti
js
lahf
lret
push
push
cmp
or
hlt
add
cmp
incl
cs
and
stos
fcompl
fidivrl
adc
xchg
test
xorl
andl
mov
inc
push
out
push
mov
inc
cmp
rolb
xchg
out
loope
jle
fisubs
sub
inc
out
call
loopne
cmp
es
cmp
fidivrs
dec
cltd
popa
aaa
fbstp
jno
stos
shll
mov
insl
cld
ret
mov
repnz
test
leave
add
mov
test
clc
push
and
je
out
ja
pop
pop
not
push
fimuls
sub
jnp
stos
mov
dec
adc
or
int
pop
mov
xorb
mov
pop
xor
nop
repnz
sbb
loop
mov
sti
notb
shlb
mov
daa
daa
mov
enter
aad
bound
mov
xchg
lds
inc
fistpll
jb
mov
insb
ret
jl
or
enter
lods
mov
loop
out
or
mov
push
std
mov
mov
stc
in
call
fcmovu
mov
adc
lahf
testb
xchg
dec
movsl
repnz
cmp
jg
jmp
and
bnd
adc
cmp
insb
pop
mov
xor
sti
sbb
mov
mov
or
pushf
push
movsb
aam
icebp
test
ds
xchg
mov
mov
fisttpll
adc
adc
jns
and
mov
adc
in
or
push
sub
sahf
mov
dec
push
add
sub
jno
push
enter
add
repz
mov
jno
out
stos
cld
mov
add
call
adc
pop
dec
jae
push
pushf
fcmovnb
mov
add
test
mov
mov
and
nop
inc
lahf
pop
sub
enter
jecxz
jo
out
mov
movsb
xchg
push
imul
comiss
mov
sub
in
in
or
loop
or
cli
cmpsb
add
xchg
int
shll
add
imul
mov
fisttpll
aam
add
dec
xlat
stos
pandn
imulb
add
or
xchg
inc
xor
mov
mov
adc
xchg
aaa
pop
push
push
aaa
out
xchg
cmc
sub
cwtl
mov
loop
jl
jno
ret
mov
inc
sahf
inc
gs
mov
inc
gs
cmc
push
sub
xchg
mov
xchg
lcall
ss
cmp
in
add
and
dec
lea
jb
popa
leave
inc
push
cmp
or
popa
inc
mov
rorb
sbb
ljmp
sub
insl
aad
mov
xor
mov
dec
inc
sbb
repnz
cmp
jle
icebp
jl
pop
stos
mov
sbb
pop
into
lcall
adc
ret
mov
mull
or
sbb
enter
sti
mov
xor
and
dec
sbbl
leave
das
xchg
inc
add
jl
shrb
xor
push
addl
enter
adc
pop
call
xchg
xchg
adc
xchg
push
sti
lods
imul
mov
popa
mov
adc
xlat
or
add
notb
mov
xor
jae
cmp
call
ret
in
fmull
jb
mov
jo
add
pop
xchg
or
xchg
arpl
cmc
out
jno
stos
dec
mov
xchg
or
add
mov
ret
or
out
jno
adc
push
xchg
aas
lcall
xor
xchg
aam
cmp
enter
dec
movsb
sbb
jbe
aad
xchg
repnz
test
stos
ja
cmp
rcl
xchg
test
cltd
arpl
or
xchg
pop
xor
and
pop
push
inc
jmp
loope
add
inc
cmp
pusha
lret
lods
adcl
and
repz
mov
xor
push
outsb
jge
roll
je
sub
sahf
hlt
loope
add
add
gs
jbe
xor
xor
and
sbb
lea
pop
push
jbe
ljmp
imul
jmp
mov
rcll
scas
aaa
les
pop
lods
dec
cmp
ljmp
sbb
jbe
int3
mov
or
rcrl
mov
xlat
xchg
mov
repz
orl
mov
int3
mov
sub
popa
adc
shll
daa
jp
cmc
insl
dec
sahf
test
ja
adc
aaa
iret
test
inc
push
mov
add
rcrb
inc
and
stc
dec
push
xchg
xchg
push
sbb
sbb
inc
test
in
cmpsl
fxam
call
jo
jge
inc
psubusw
std
mov
js
adc
mov
pop
sti
sub
adc
and
inc
cltd
adc
ss
dec
je
inc
insb
sbbb
lock
jb
stc
mov
scas
push
lret
repz
stos
and
jo
adc
sub
xchg
jl
out
dec
gs
mov
sbb
adc
sub
fstps
adc
pop
adc
imul
push
fucom
pop
mov
dec
jge
movl
mov
cli
cmpsl
xchg
rcll
mov
push
inc
pop
mov
xchg
mov
std
or
stos
mov
repnz
fidivs
or
sbb
or
iret
fsubp
and
adc
dec
push
jmp
jle
test
mov
add
xchg
jge
push
mov
pop
fiaddl
sbb
adc
xchg
dec
fdivrp
sbb
bound
pop
pop
enter
loope
out
ret
in
nop
cs
pop
icebp
cli
add
cld
add
dec
sbbb
mov
sub
push
out
mov
in
mov
mov
mov
or
es
ds
cld
sub
addr16
cmp
je
mov
inc
lods
jge
jne
orl
mov
adc
ds
add
cmp
cmpsl
xorb
test
jno
das
lahf
stc
lods
cmc
mov
mov
push
jo
ja
mov
cld
sub
rolb
daa
sbb
sbb
mov
xchg
mov
mov
pusha
xchg
dec
cmp
push
fisttpll
sbb
ljmp
scas
push
jg
enter
add
in
xor
inc
xchg
dec
arpl
cltd
lret
dec
addl
imul
dec
mov
sub
leave
xor
mov
push
js
or
mov
xchg
cmp
cmc
mov
inc
gs
mov
int
dec
sub
xchg
test
cs
lods
mov
xchg
and
adc
dec
sbbb
or
push
inc
ss
mov
popa
push
arpl
out
das
out
stc
subl
adc
mov
adc
sub
adc
xor
shlb
and
call
mov
addr16
add
outsb
stos
bound
imul
call
cmpsb
sbb
out
cmp
shl
cmp
push
inc
fimuls
add
mov
jno
repz
rep
xchg
scas
cmp
repnz
hlt
ret
testl
clc
push
jbe
mov
jmp
jle
rorl
test
dec
jns
bound
ret
mov
addr16
arpl
and
pushf
ds
popf
in
jnp
ja
push
push
push
data16
cmp
cmp
scas
negb
mov
out
xchg
sub
fistps
mov
mov
jle
mov
inc
test
addr16
xor
fsubrp
lahf
repz
aaa
sub
mov
xlat
aas
mov
xchg
inc
cmpsb
add
daa
daa
add
ret
push
cld
in
lock
cmp
fdiv
outsb
push
clc
dec
sti
aaa
insl
test
fsts
xchg
jno
inc
mov
mov
ss
pusha
leave
lcall
std
sub
mov
mov
cmpsb
das
outsb
fildl
in
inc
rcll
in
jecxz
sbb
mov
pop
repnz
push
adc
sub
lahf
adc
sub
ret
or
sub
std
jecxz
cmp
jg
imul
add
and
clc
add
jae
jbe
fcomps
subl
inc
add
aaa
push
out
mov
ret
and
aam
xor
sarb
shlb
push
loopw
rclb
pop
in
pop
xchg
int3
push
adc
push
mov
and
adc
xor
sub
dec
int
imul
das
cli
sti
into
gs
xchg
pushf
popf
sub
mov
mov
mov
pop
sti
pop
dec
mov
in
xlat
jp
es
les
test
ret
sub
xchg
push
cmp
hlt
push
jb
out
js
mov
pop
shrb
add
movsb
mov
je
mov
mov
inc
nop
dec
dec
loop
movsl
add
push
in
dec
push
add
scas
cmp
xor
push
arpl
pop
inc
jns
aas
xor
inc
jmp
outsb
js
imul
int3
adc
lcall
fsubl
xchg
jnp
push
or
mov
add
mov
mov
add
imul
jmp
xchg
repz
daa
fcompl
dec
push
mov
add
jbe
roll
mov
or
aaa
hlt
testb
mov
xor
call
ja
jge
inc
push
lret
sbb
rorb
mov
out
push
jp
fistl
dec
scas
imul
inc
xchg
leave
inc
xor
test
push
ds
mov
pop
in
jno
push
rcr
lds
jb
shl
jnp
mov
mov
lret
jecxz
xor
adc
mov
pop
ja
stc
jae
test
je
and
cmp
stos
mov
xchg
fwait
icebp
ret
cmp
imul
nop
aam
fldenv
push
pop
rorl
int
loop
test
in
sub
orl
xor
iret
int3
cli
das
sbb
add
stos
sbb
imul
and
jo
cwtl
divl
push
stc
xchg
lods
outsb
test
popf
stos
mov
les
ret
loop
in
jmp
icebp
addb
lea
shrl
xchg
jne
lea
xchg
pop
dec
sub
push
pushf
sbb
or
adc
xchg
fstpl
jo
and
xor
cmp
mov
neg
xchg
mov
xor
add
cmp
push
push
fs
mov
and
mov
lods
mov
and
fnstenv
push
and
leave
xchg
xor
xor
pop
sub
xchg
in
or
jmp
add
cmp
scas
dec
jnp
push
jl
outsl
enter
lcall
pop
ds
push
mov
scas
fdivl
repz
xor
andl
mov
jbe
xchg
leave
enter
sbb
shll
dec
rcll
fcompp
int3
sbb
mov
lods
loope
mov
in
push
cmp
lock
pop
xor
movsl
out
pop
xor
lret
mov
test
jns
push
js
xchg
outsb
pop
popa
mov
xchg
lock
test
push
arpl
and
sbb
lea
add
cs
cmp
das
push
jecxz
pop
dec
loope
cmc
lods
push
adc
mov
es
shlb
sub
inc
add
mov
pop
pop
jl
mov
int
pop
jg
aas
dec
aad
shl
pop
lods
sbb
sub
and
imul
je
sbb
and
fnstenv
mov
xchg
jne
push
pushf
in
pop
mov
mov
mul
cmpsl
mov
dec
add
inc
cld
add
popf
mov
lahf
int3
sub
mov
arpl
aam
and
and
lret
jae
dec
mov
adc
shl
enter
xor
test
es
adc
hlt
mov
lods
xchg
dec
lock
mov
cltd
jae
add
push
push
mov
rcr
jno
xchg
mov
mov
push
mov
push
icebp
leave
scas
addr16
leave
scas
ljmp
push
mov
xlat
lods
pop
fdivs
mov
hlt
stos
movsb
xor
bound
aad
inc
je
jns
xchg
cmpsl
mov
pop
push
hlt
iret
mov
fnstcw
jecxz
loopne
sbb
testb
inc
addr16
std
inc
cltd
sbb
hlt
shl
jne
or
jg
cmpsb
cli
pop
ss
imul
imul
pop
push
hlt
mov
mov
push
adc
adc
gs
jns
cld
xlat
lret
cld
inc
rclb
fbld
rcl
sarb
leave
push
mov
push
fisubs
aad
stos
xor
mov
idivb
cltd
jp
or
inc
adc
mov
jns
mov
mov
sbb
cmpsl
push
jl
xchg
into
xchg
xchg
jo
fwait
dec
push
insl
arpl
call
dec
cs
cld
xchg
push
scas
mov
aas
in
mov
jg
push
add
push
std
mov
divl
cmp
sbb
enter
mov
xchg
outsb
add
clc
ret
pop
outsl
mov
pop
lret
test
rcr
shll
das
in
mov
idivl
sbb
iret
dec
stos
gs
dec
leave
frstor
out
in
rcrl
outsl
adc
sbb
mov
lahf
push
rcll
loope
shl
or
ficomps
cmp
push
ror
inc
subl
cwtl
fmul
aad
jo
daa
pop
mov
pop
jge
andl
iret
jecxz
xor
jl
or
xchg
sub
mov
or
inc
sub
fnstsw
std
xor
daa
push
stos
jne
loopne
repnz
mov
mov
cwtl
push
stos
repz
xchg
xlat
lods
lahf
cmp
push
dec
in
repnz
mov
mov
pop
out
fildll
ds
rol
inc
mov
lock
add
dec
inc
fs
lahf
iret
test
adc
bound
lock
cmp
divl
mov
int3
lods
into
clc
out
fbstp
mov
dec
scas
or
cmpsl
add
mov
and
daa
dec
loope
or
sbb
mov
enter
test
call
push
inc
sti
pop
stos
bound
test
inc
and
xchg
pop
popf
lock
xor
adc
sub
arpl
fsubrp
mov
push
jle
sbb
jmp
xor
nop
mov
nop
stos
in
pop
dec
xchg
into
pop
dec
data16
lfs
xchg
jae
or
and
dec
sub
es
sti
fs
ja
xor
cmpsb
aaa
test
out
loopne
mov
jg
inc
mov
add
repz
inc
ljmp
cmpsl
test
cmp
loopne
and
test
cli
xor
jne
mov
ud0
int
les
aas
ljmp
nop
adc
xor
add
xchg
insb
cmp
cmp
or
mov
mov
test
into
or
inc
jg
add
push
leave
lret
pop
shrl
fs
fildll
jmp
or
mov
js
push
fnsave
and
ror
lods
mov
rcr
push
dec
daa
fwait
je
lea
rolb
mov
outsl
outsb
mov
roll
inc
stos
push
push
into
inc
inc
push
stos
sbb
dec
cmc
mov
test
out
data16
rcrb
xor
int
lds
cwtl
cmp
dec
push
fnstcw
fst
fdiv
fsubrs
js
cmpsb
cltd
in
jmp
int3
xor
lea
icebp
into
cmp
adcb
lret
mov
loop
lods
dec
adc
push
aas
xchg
push
aaa
mov
inc
cmpb
sbb
add
mov
add
and
adc
mov
mov
cmc
xchg
jns
lds
std
cli
mov
outsb
sbb
aas
pop
hlt
and
xor
mov
inc
inc
inc
push
add
hlt
inc
push
push
xchg
or
mov
test
cmp
pop
outsl
test
out
xchg
clc
inc
repnz
daa
and
test
loope
outsb
push
cmp
sub
subl
push
js
push
mov
or
test
jle
jae
and
lods
stos
gs
clc
dec
das
lds
in
aad
xor
stos
pop
fisubrs
pop
jne
push
lods
push
stc
data16
jg
pop
clc
pop
into
incl
or
jns
int
jp
std
popf
rcrb
popf
sahf
lock
lcall
dec
loope
xchg
fldenv
xchg
sub
test
out
push
push
dec
dec
subb
add
xchg
icebp
test
mov
lock
popa
daa
lods
popf
repz
ljmp
xchg
mov
adc
das
mov
jbe
stos
sbb
aas
sahf
lods
data16
or
repz
jle
lods
push
jl
push
shll
dec
out
sbb
xor
insl
mov
inc
fnstsw
mulb
mov
ja
int3
aam
adc
std
fwait
lahf
mov
call
jmp
pop
dec
xchg
cmpsw
lcall
in
sahf
jmp
sbb
stc
mov
and
aaa
pop
jb
popa
gs
inc
dec
mov
jae
cmpb
sub
imul
arpl
movsb
jmp
xor
sub
push
lret
daa
xor
jbe
in
jle
pop
and
leave
pop
or
dec
pop
mov
push
xchg
adc
cmp
mov
lods
push
sti
adc
lret
pop
lcall
cmc
xchg
or
mov
sub
xor
mov
in
pop
jo
dec
loop
adcl
or
add
jecxz
je
in
fldcw
negb
lock
scas
and
stos
adc
imul
xor
jmp
jl
das
push
mov
or
mov
scas
mov
push
mov
fwait
sbb
push
stos
cltd
push
jmp
xor
lret
test
pop
lds
xchg
mov
xor
movsl
shll
ss
pop
jne
push
mov
insb
stos
pop
ret
mov
ljmp
imul
push
and
clc
adc
mov
sbb
fsub
scas
sub
lret
mov
pop
hlt
xchg
xchg
inc
ljmp
mov
mov
pop
pop
xchg
std
or
mov
pushf
dec
stos
leave
push
mov
bound
adc
lea
fdivl
mov
sahf
shl
shrb
jo
mov
in
scas
pop
xchg
sbb
frstor
mov
push
paddusw
fnstcw
call
or
test
add
aaa
lahf
fdivrs
clc
or
lea
lock
lret
push
mull
sti
inc
cmp
enter
jge
push
pop
shlb
imul
cmp
adc
mov
sahf
push
insl
jmp
mov
shlb
jo
imul
cmpsb
mov
sub
fistl
pop
sbb
xchg
push
mov
ret
std
insb
jg
xor
xchg
push
repnz
or
jo
insl
out
jo
jmp
and
push
ficomps
popa
mov
dec
dec
daa
sub
jmp
add
dec
jb
ja
in
inc
js
sbb
ja
dec
xchg
aaa
lret
out
jl
inc
fstps
xchg
sbb
sahf
xchg
insl
push
shlb
cmp
or
cmp
cmpsb
fstpt
aam
mov
pop
icebp
xor
and
shr
aas
fisubl
mov
mov
je
loope
das
xchg
mov
jmp
nop
pop
jo
xor
cmp
movsb
pop
or
sub
std
aam
adc
leave
popf
and
repz
dec
add
jnp
in
out
xchg
icebp
insl
ss
mov
loop
mov
jae
sarb
mov
adc
xchg
rcrl
insl
jmp
in
sub
cmpsl
inc
lds
hlt
out
stc
jmp
push
push
cmc
sub
fcoml
dec
enter
notl
add
cmp
sbb
or
cmpsl
mov
mov
in
or
xchg
repz
sub
out
sub
stos
imul
pop
scas
sbb
dec
scas
sti
js
mov
aaa
xor
sbb
cmpsl
jne
movsl
aas
jo
mov
test
inc
arpl
xchg
int3
pop
repz
hlt
ss
fdivrs
mov
cmp
fmull
pop
int3
inc
sti
cmp
pop
dec
xor
in
push
or
in
mov
popa
or
pop
in
jo
pop
mov
push
jmp
orb
mov
mov
jge
mov
imul
stos
adc
test
lods
stos
lret
arpl
jb
add
xchg
pop
cwtl
sbb
pop
jg
jbe
or
jl
notl
ljmp
sahf
cmp
es
inc
inc
mov
sub
iret
sbb
push
adc
into
push
or
mov
push
pop
sti
gs
cld
aas
ja
push
idivl
fisttps
out
mov
sbb
fmuls
rorl
inc
lods
lods
cmpsl
out
cltd
cmp
inc
cli
xor
pop
push
loope
out
in
sub
dec
mov
shrl
movsl
ljmp
test
les
pop
frstor
cmc
orl
adc
imul
xor
jb
enter
xor
jae
sub
lea
ja
aam
fists
sarl
mov
out
mov
js
sub
andl
stos
mov
fdivs
repz
mov
addr16
out
lock
push
inc
cmp
pop
xchg
cmp
sbb
aam
mov
div
fcompl
rorl
ja
int3
leave
sbbl
repz
mov
adc
sahf
jbe
scas
dec
ljmp
cltd
sbb
aaa
sub
or
jecxz
xchg
sub
jno
cmpsl
fstpt
int3
je
add
dec
loopne
mov
jmp
shr
negl
mov
addr16
scas
imul
jno
mov
dec
fldt
stos
mov
insb
push
or
dec
push
push
ljmp
insb
push
in
mov
ficoms
sub
push
decb
inc
sbb
push
call
rcrb
out
push
bound
movlps
ficoms
mov
pop
in
in
add
sub
sub
mov
ja
clc
xlat
fnstsw
dec
push
inc
jns
aaa
aad
sub
pop
popa
fistps
mov
into
jmp
mov
xor
inc
mov
jmp
je
jecxz
or
adc
mov
mov
out
lret
pop
out
push
push
inc
fisubrl
repz
js
dec
leave
testl
in
and
sub
mov
lret
xchg
mov
outsl
insl
repz
jno
jo
aad
aad
enter
mov
push
xchg
push
je
mov
pop
jp
imul
ds
add
fisttpl
and
mov
push
xor
sub
lsl
mov
out
mov
pop
mov
icebp
pop
dec
push
push
sub
xchg
xchg
inc
pop
cmp
pop
push
cmp
ret
cmp
cs
outsl
mov
push
ja
fcomps
xor
add
adc
jge
adc
insl
push
enterw
sub
ja
push
jno
jmp
xor
sbb
jae
sub
xchg
mov
jmp
imul
sub
cmp
dec
jns
std
inc
dec
mov
stos
movsl
mov
in
mov
cmpsl
push
sbb
mov
movsb
cmpsl
ficomps
shl
push
pop
dec
movnti
mov
fs
cltd
push
mov
int3
lea
pop
push
mov
das
mov
in
popl
mov
lcall
aaa
or
nop
pop
mov
inc
mov
outsb
cmp
xchg
jne
pop
pop
iret
jno
mov
shlb
mov
sub
mov
inc
popa
jecxz
cmpsl
jae
push
sbb
mov
lahf
mov
and
lods
stos
add
mov
mov
shlb
cmp
sub
dec
sar
jae
mov
pop
popa
mov
adc
xchg
adc
pop
outsb
sbb
push
sub
fs
iret
rolb
sub
lea
fs
notb
ret
adc
test
pop
in
std
pop
mov
lock
clc
data16
xchg
dec
cmc
sti
hlt
and
xchg
mov
std
aad
aaa
mov
inc
pop
pop
inc
jb
jae
punpckhdq
pusha
jl
inc
push
pop
stos
cli
sub
fists
aaa
mov
mov
cmp
mov
jmp
pop
lods
mov
pop
sub
pusha
lods
faddl
mov
push
jmp
and
repz
ljmp
mov
out
sbb
loope
and
lock
outsl
sub
fistps
orb
dec
jmp
repnz
jae
add
test
scas
dec
mov
mov
outsb
push
shll
adc
inc
add
push
cmp
xchg
ja
shl
dec
push
sub
jge
xchg
sub
pushf
lds
stc
dec
xchg
es
xchg
lret
xchg
mov
aam
push
test
pushf
xor
push
in
stos
push
pop
divb
cmp
ljmp
fwait
jge
das
into
sub
insl
jne
sub
cmc
fstpl
inc
aam
loope
out
dec
cmp
test
inc
bound
imul
arpl
or
pop
and
or
sub
mov
dec
dec
push
inc
xor
andl
ret
and
push
lahf
sbb
mov
insb
jge
mov
push
sub
loopne
jmp
outsl
ljmp
dec
arpl
aam
aas
adc
lcall
shll
cmp
and
out
mov
mov
lods
sub
mov
mov
sbb
mov
ja
mov
dec
mov
sbb
mov
loope
and
jbe
jno
push
lret
lcall
les
cs
out
loopne
popf
jno
mov
mov
mov
mov
sub
inc
add
arpl
les
sahf
pop
mov
scas
mov
shll
pop
in
cwtl
jo
mov
out
shll
sub
sub
push
adc
outsl
rcrb
or
shlb
dec
ljmp
mov
jns
pop
ja
pop
xchg
adc
outsb
or
loope
pop
orb
jp
dec
scas
leave
dec
dec
adc
addr16
cmpl
sbb
xchg
push
fldenv
pusha
sbbb
lock
mov
xchg
mov
repnz
jno
push
data16
bound
cli
mov
add
sbb
mov
test
bound
mov
mov
insb
xchg
inc
push
sub
pop
mov
cmc
imul
in
outsb
xchg
sub
fcomi
dec
push
dec
cld
lock
dec
pop
sbb
dec
adc
aad
add
jmp
insb
fwait
push
in
xchg
idivl
insl
adc
rcrl
cs
addr16
xchg
daa
add
inc
dec
pop
mov
push
push
cltd
xchg
fwait
in
and
xchg
loope
testb
ficomps
push
mov
push
and
jnp
aam
mov
repz
arpl
push
ljmp
mov
and
scas
mov
out
cmp
rorb
push
in
and
sbb
mov
sahf
popa
push
cli
jg
nop
add
lds
pop
jl
std
sub
sub
in
loop
mov
pop
jle
sti
ja
aad
ss
jo
insb
xlat
test
fwait
add
outsb
std
push
cwtl
add
sbb
mov
mov
xchg
loop
in
sarl
aas
clc
dec
mov
icebp
pop
adc
inc
mov
sahf
adc
out
jecxz
sahf
ret
insl
inc
daa
stos
int3
insl
and
inc
mov
mov
push
jmp
fcoml
pop
sti
ret
std
fidivrl
fdivrs
cltd
lock
pop
fs
mov
push
xchg
inc
inc
jb
inc
outsl
sub
push
mov
sbb
shr
jge
add
lret
mov
lea
inc
mov
scas
stos
or
scas
mov
mov
popf
adc
dec
inc
loop
pop
test
mov
outsb
iret
into
mov
sub
adc
pop
cmp
movsb
pop
ret
fsubp
outsb
in
inc
imul
and
sub
adc
fisttpl
scas
mov
int3
aaa
movsl
out
ficoml
jno
inc
fstps
jne
push
xor
dec
mov
mov
adc
das
js
out
cmpsl
fs
cmp
sti
xor
jl
lock
xor
xchg
int
or
or
outsl
fstl
xchg
sbb
in
movsb
data16
jp
out
lahf
lds
inc
push
and
iret
cmc
sbb
imul
cmp
ret
xchg
mov
hlt
mov
xchg
sbb
jbe
aaa
and
xchg
push
mov
push
loope
mov
mov
sbb
xor
mov
jle
xchg
sti
xchg
xchg
inc
xor
gs
pop
jo
mov
test
and
imul
cmc
mov
inc
mov
xchg
or
iret
call
sub
bound
xchg
or
jbe
mov
jns
fbld
jb
addb
int
xchg
and
and
std
mov
push
cmc
sub
shlb
mov
push
out
xor
pop
stos
mov
xor
xor
mov
or
popa
jo
sub
dec
push
leave
sub
jne
jmp
pop
cld
xchg
mov
mov
loopne
dec
stc
push
fadds
sbb
pop
dec
testb
mov
push
fistl
lods
add
movsb
or
pop
ds
jns
push
mov
pop
or
jle
jp
push
jl
icebp
jg
sti
dec
int3
xorl
mov
push
in
push
inc
add
divb
iret
aam
add
fcompl
sub
push
xor
add
pushf
jmp
pop
divb
sahf
adc
xchg
shll
mov
popa
pop
gs
gs
pop
sbb
call
push
xchg
mov
adc
data16
xor
daa
mov
hlt
adc
test
push
pop
sub
or
jmp
in
lcall
rclb
outsl
ss
test
outsb
add
test
add
jns
adcb
out
in
mov
pop
add
aas
sub
imul
push
in
and
dec
into
movb
lahf
icebp
hlt
sub
ja
shr
sub
aam
adc
pop
imul
or
daa
xor
xor
cs
cmp
out
arpl
mov
push
repnz
mov
or
out
loope
pop
push
dec
test
popf
cmp
cmp
xchg
lret
cltd
lds
mov
icebp
jne
or
push
push
mov
push
push
cld
std
and
jmp
jno
inc
xchg
xchg
cmp
push
ret
sbb
popf
aas
out
or
out
push
lods
mov
adc
push
lods
sbb
add
cmp
ljmp
outsb
and
jg
mov
xor
lods
in
test
sbb
cmpsl
paddq
imull
repnz
in
icebp
repnz
push
or
push
insb
add
xor
xchg
mov
dec
orb
shll
jns
mov
mov
dec
sbb
xor
cmpsb
adc
mov
cmpsb
dec
push
xor
push
pusha
mov
lock
jo
xor
cmc
add
or
add
push
push
mov
mov
cwtl
fistl
pop
lods
jg
sbb
inc
sarb
shll
bnd
add
lods
mov
nop
dec
test
mov
cmpsb
xchg
mov
or
dec
ds
jge
sbb
xchg
cmp
pusha
cmc
adc
icebp
inc
adc
inc
pop
rolb
loopne
mov
cmp
sbb
lahf
sub
mov
dec
and
lss
addr16
stos
add
cmp
push
repnz
and
push
scas
mov
mov
and
adc
cmp
jne
dec
and
sub
gs
inc
sbbl
inc
dec
test
shlb
divb
mov
xchg
insb
push
mov
jecxz
call
sub
mov
shrb
xorl
xorw
sahf
sbb
inc
jge
not
sub
pop
mov
mov
in
iret
push
push
or
adc
es
pop
sbb
mov
lea
lock
cmp
cmp
pop
xchg
stc
popa
mov
adc
stos
sub
out
in
cmp
lock
mov
mov
cmpsl
or
or
mull
jl
in
pop
out
aad
mov
mov
push
xchg
icebp
sub
dec
out
dec
adc
iret
push
cmp
cmp
or
sbb
cmp
fimull
mov
icebp
xchg
inc
dec
aad
cmp
or
push
adc
pop
mov
mov
push
jecxz
push
sbb
out
jae
sub
add
xlat
push
in
in
mov
pop
clc
or
rorl
mov
dec
and
xor
pop
pop
or
or
inc
addr16
cmpsl
and
dec
jns
push
pop
add
inc
lea
loopne
outsb
sbb
adc
cmpl
mov
mov
sbb
xchg
dec
int3
test
inc
stos
cmp
rcr
jnp
cmpsb
pushf
test
in
jno
dec
test
cmp
ja
and
gs
sahf
movsl
imul
pop
mov
mov
mov
hlt
lods
pusha
mov
mov
jg
fisubl
push
jmp
test
pop
inc
scas
inc
dec
mov
inc
add
mov
adc
push
idivb
leave
jle
or
outsb
aas
cltd
popa
inc
fwait
cmp
gs
fadd
mov
mov
sti
cs
add
popa
clc
cltd
pop
cmp
mov
inc
inc
cmp
sbb
adc
push
jmp
pop
inc
rcll
sar
and
mov
cmc
orb
jge
jmp
add
pop
aam
or
dec
faddl
call
bound
addb
jo
xor
dec
test
pusha
imul
fbstp
jne
or
imul
push
cmc
push
outsb
ja
popf
je
xchg
push
test
mov
xchg
push
pop
cmpsl
fcompl
sti
lcall
adc
xrelease
jmp
and
xchg
pop
xorb
fcoms
push
stos
addr16
ret
insl
fimuls
hlt
jo
mov
adc
test
inc
or
push
out
and
cmpsb
rcrl
add
xor
inc
push
adc
ss
cmc
movzwl
push
in
icebp
cs
hlt
jecxz
inc
or
adc
xchg
inc
inc
out
ret
mov
call
movb
rcrb
jno
arpl
call
cmp
cmp
or
mov
and
loop
pop
sub
sub
in
xor
mov
dec
mov
cmpsl
ds
push
add
sbb
add
xlat
xor
sbb
fists
mov
cmp
xchg
lods
mov
sbb
not
rclb
and
xchg
lcall
mov
sub
js
pop
mov
nop
mov
js
and
push
cmp
dec
loopne
xchg
mov
pop
iret
mov
icebp
sbb
jmp
cmp
inc
lcall
jae
mov
enter
ror
pop
lret
mov
pop
filds
inc
inc
pop
push
cmpsb
inc
adc
jecxz
sbb
xchg
jge
inc
adc
cmp
jmp
inc
cltd
es
rorb
and
mov
daa
fsubr
pop
push
or
sub
inc
mov
ds
or
test
lods
mov
sti
pop
sub
daa
imul
xchg
xorl
pop
test
mov
pop
push
xchg
xor
adcl
fistpll
scas
push
dec
sub
fucomip
inc
mov
xchg
and
dec
push
pop
and
mov
cs
xor
lcall
in
jp
inc
andb
pop
fsts
inc
adc
out
popf
mov
adc
xor
stos
xchg
mov
push
movsb
lcall
sub
into
scas
sbb
mov
cmpsl
mov
xchg
jge
cli
push
jne
cs
inc
imul
mov
pop
outsb
fdivrl
add
xchg
dec
jb
add
orb
out
mov
sub
pop
fsubl
and
mov
clc
xor
sahf
add
aas
and
outsb
mov
bound
push
push
mov
lods
xchg
pop
fs
jae
rclb
jnp
icebp
pop
sub
pop
fildll
push
adc
dec
dec
xor
pop
inc
sbb
sti
cmp
xchg
jo
icebp
movsb
mov
xchg
mov
xchg
jge
mov
or
adc
sub
xchg
mov
icebp
ret
cmc
mov
xchg
ds
lock
imul
cltd
test
sbb
cmp
mov
sub
cli
push
out
aaa
out
in
push
add
ficoms
xchg
loope
cmpsb
sub
test
leave
into
mov
rcrl
xor
jl
mov
pop
xchg
cmpsb
sbb
xchg
gs
xchg
sbb
test
pop
pop
mov
loope
jnp
inc
sub
push
jmp
js
jb
dec
push
sbb
dec
in
lret
enter
stos
cmpsl
testl
or
cmc
mov
sbb
mov
mov
add
and
add
dec
loop
repz
fwait
enter
movsb
pop
test
movsl
and
addr16
sbb
adc
clc
inc
fdivs
movsl
cs
in
ja
pusha
push
sbb
in
and
mov
adc
fs
sti
rcr
cmp
fisubs
dec
js
imul
call
jg
mov
mov
add
mov
cmp
int3
fdivrs
adc
sbb
dec
int
test
int3
aam
and
aad
xor
inc
shr
or
xor
repnz
imul
lret
sub
mov
add
mov
sub
ret
push
xor
stc
xchg
adc
imul
loopne
or
outsl
outsl
sbb
cmp
add
or
mov
push
adc
mov
lods
push
mov
xor
inc
sub
test
test
int
int3
pop
addr16
jmp
inc
ret
mov
push
mov
xchg
jecxz
push
adc
subl
xor
adc
and
xchg
addr16
cmp
or
sub
orl
ds
and
lcall
aaa
mov
sbb
sti
mov
clc
pop
movsb
fsubrp
test
adc
xchg
inc
and
inc
aam
mov
imul
mov
lcall
pop
add
arpl
mov
and
xor
fwait
int3
cmc
iret
scas
add
pop
aam
pop
or
mov
popa
inc
es
nop
and
mov
dec
outsb
int
fs
lret
sarl
inc
sbb
lcall
ja
xchg
inc
push
loopne
nop
adc
push
lds
je
leave
mov
cmc
push
adc
inc
rcrb
add
aaa
out
arpl
imulb
adc
dec
leave
dec
call
add
cmp
in
jae
mov
ja
xchg
mov
rep
adc
jmp
pop
jno
fldenv
data16
or
sbb
jbe
jbe
dec
lcall
xchg
and
sbb
and
mov
lods
jge
push
popf
test
clc
inc
xchg
xchg
cld
popa
pushf
in
ss
and
cwtl
push
insb
push
out
pop
jo
jecxz
fwait
les
popa
push
lods
inc
or
loopne
dec
push
mov
ds
mov
sbb
cmpsl
das
scas
mov
iret
mov
mov
cltd
xchg
or
mov
cli
aas
dec
and
jns
lret
and
jno
shl
jns
cmc
inc
out
in
push
jge
gs
popf
arpl
xor
push
xchg
cmpsb
jg
jecxz
pop
or
or
push
mov
xchg
and
lock
jnp
popf
sbb
mov
nop
or
add
clc
jb
std
fldenv
push
fmuls
sar
dec
mov
sub
decl
das
push
mov
jle
lds
lods
xchg
sub
clc
push
ja
mov
loopne
xor
inc
or
mov
push
inc
cmp
clc
mov
pop
cmp
cltd
cmpb
mov
aad
mov
dec
xor
add
sub
xor
mov
test
adc
ret
jo
lds
jge
inc
rcll
push
push
dec
or
adc
mov
xchg
mov
cmp
orb
ljmp
loop
iret
outsl
movsl
daa
lret
cld
sbb
dec
leave
aaa
jns
pop
ja
jg
cmc
mov
sahf
jmp
mov
adc
cs
ret
push
or
add
mov
add
fcoml
pop
popf
xchg
loopne
xchg
dec
jle
jge
pop
cmpsb
jl
mov
gs
mov
xchg
hlt
inc
rcrl
pop
cmp
and
xlat
cmp
inc
and
mov
xor
xor
in
mov
jmp
jecxz
add
mov
jnp
nop
sahf
dec
mov
popf
pusha
call
stos
movsb
jno
ret
into
out
int3
sahf
and
movsl
mov
jmp
sbb
ss
mov
repnz
xor
je
push
ljmp
dec
and
and
add
rcrl
lret
test
xchg
jg
es
add
loopne
sbb
int
ljmp
rolb
and
out
fs
iret
aad
jecxz
and
mov
push
je
scas
pop
xchg
jmp
cmp
lock
mov
lods
cmp
sbb
pusha
insb
dec
arpl
push
data16
cwtl
mov
imul
mov
fdivrp
push
mov
xor
jp
pop
cmp
leave
scas
and
fadd
push
xor
sbb
jge
mov
iret
in
push
lea
inc
and
mov
sub
or
ficoml
add
xchg
or
lds
mov
test
mov
xlat
lock
push
fcoms
mov
xchg
ret
xchg
icebp
xchg
and
inc
into
and
xchg
movsb
iret
mov
lods
and
or
or
adc
push
add
cmpb
mov
leave
and
imul
int
xchg
fs
xor
xchg
jecxz
testb
add
dec
cmp
mov
jle
pop
loopne
in
push
aaa
hlt
iret
mov
dec
fnstenv
mov
sub
cwtl
gs
xlat
leave
adc
andb
xchg
inc
dec
movsb
mov
xlat
ret
mov
rcll
mov
add
insb
daa
sbbb
pop
xchg
in
sbb
movsb
or
imul
mov
xor
shll
stos
dec
repnz
ss
rcll
ja
fmull
or
sub
add
in
inc
test
mov
sub
sbb
add
cmpsb
scas
aas
loope
push
sub
cmp
push
inc
negl
cltd
adc
aaa
xor
mov
mov
jo
jo
int
cmp
mov
out
cmp
stos
mov
fisubrl
repz
dec
jl
xchg
jb
add
xlat
dec
in
ss
add
mov
xchg
or
ret
test
mov
orb
test
mov
es
pop
sahf
pop
loope
jae
mov
or
cltd
testb
dec
or
bound
js
daa
test
pop
mov
and
fdivrs
sub
cld
cwtl
jl
adc
and
mov
adc
aam
shlb
stc
pusha
aas
jge
mov
cmp
mulb
ljmp
out
fists
jmp
xlat
pushf
lea
push
dec
cld
adc
push
inc
add
pop
add
mov
pop
ss
sbb
push
les
sahf
mov
cmp
pop
cmp
std
pop
xor
jns
movsl
pusha
cwtl
adc
ud2
mov
mov
add
pop
adc
iret
ss
out
cmp
orb
push
lahf
add
sbb
inc
xchg
and
or
fcomp
adc
cld
push
bnd
les
fwait
nop
popf
sub
mov
inc
push
pop
scas
outsl
lahf
scas
iret
data16
outsl
push
inc
fcmovnb
xor
push
push
data16
scas
mov
fcmovbe
scas
subl
repnz
push
mov
pop
sarb
stc
cmpsb
sbb
cmp
loopne
push
cwtl
sub
push
push
movsl
mov
sbb
lcall
sahf
xlat
inc
iret
add
push
test
sbb
mov
adc
xlat
stos
add
fs
xchg
jp
inc
adcl
das
es
dec
jle
mov
cmp
je
fisubrs
insl
jb
pop
mov
aad
pop
sbb
hlt
cmc
out
xchg
push
adc
out
es
pop
cmp
lock
or
dec
inc
inc
das
aaa
dec
ds
fisubs
xlat
and
sub
cmp
lock
addr16
in
fsts
mov
mov
xor
movsb
movsl
xchg
jno
jle
lods
iret
xor
mov
fwait
enter
iret
cmc
repz
pop
pushf
xor
and
mov
aad
addl
pusha
jmp
jg
sbb
xchg
and
cwtl
pop
fwait
es
fldcw
or
clc
pop
or
sub
shrl
divl
neg
js
dec
aad
xchg
sbb
mov
dec
add
sub
push
cmp
jno
mov
inc
test
stos
add
fidivrs
gs
push
cmpl
lret
or
mov
into
lret
fisttpll
and
sahf
int3
lods
mov
mov
push
push
int3
cmp
in
xchg
loop
dec
lahf
ret
outsb
and
decl
xchg
jo
pop
into
imul
inc
out
xor
mov
cmp
push
jle
fildll
dec
adc
cmp
int3
mov
out
iret
enter
add
sbb
loope
lret
xor
and
mov
pop
hlt
leave
lea
and
out
cli
pop
xchg
pop
pop
pushf
ud0
adc
mov
rcrb
loopne
fstpt
adc
or
test
rcr
js
jns
xor
flds
mov
push
jbe
xchg
add
aaa
push
push
push
dec
arpl
stos
jmp
aad
mov
pop
clc
daa
or
sbb
fs
add
dec
push
mov
inc
sub
jne
xchg
pop
dec
mov
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpl
mov
jne
lea
push
call
mov
mov
lea
push
push
call
stos
mov
scas
jne
cmp
jne
lea
jmp
push
imul
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
mov
or
je
mov
xchg
mov
lea
cmpl
je
push
push
push
push
call
mov
mov
add
push
push
push
push
call
mov
push
mov
add
pushl
pushl
push
push
call
mov
cmp
jne
incb
mov
add
pushl
movb
call
popl
push
push
push
push
mov
sub
mov
xor
or
je
js
lods
cmp
je
jmp
cmp
je
inc
dec
jmp
mov
jmp
cmpb
jne
and
rol
sub
mov
add
add
sub
jmp
pop
pop
pop
pop
jmp
mov
mov
add
mov
sar
rep
mov
and
rep
pop
push
push
pushl
call
add
cmpl
jne
push
push
pushl
call
mov
or
je
mov
xchg
mov
mov
sub
je
mov
shr
xor
mov
add
cmpl
je
mov
sub
shr
mov
add
add
mov
shr
cmp
je
cmp
je
cmp
je
jmp
mov
and
add
jmp
mov
and
add
jmp
mov
and
add
jmp
orw
add
loop
jmp
mov
mov
or
je
add
lods
or
je
add
mov
lods
stos
jmp
mov
mov
add
mov
test
je
add
mov
push
call
test
jne
push
call
mov
movl
mov
mov
test
jne
mov
add
add
mov
mov
add
add
test
je
test
jne
add
inc
inc
push
and
push
pushl
call
test
pop
jne
test
jne
push
mov
add
push
push
lea
push
push
jmp
and
mov
cmp
jne
push
mov
dec
shl
mov
mov
mov
add
mov
add
pop
jmp
push
mov
add
push
push
lea
push
push
jmp
mov
addl
jmp
mov
mov
mov
add
mov
jmp
mov
mov
add
push
push
push
push
push
pushl
push
call
pushl
push
movzwl
movzwl
lea
lea
lods
test
je
add
cmp
loopne
jne
push
push
pushl
andl
pushl
add
push
call
pop
lods
lods
mov
loop
call
pop
mov
push
add
pop
or
mov
popa
jne
mov
ret
push
ret
mov
lea
push
push
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
call
add
pop
push
lea
push
push
push
call
push
call
imul
gs
xor
cs
insb
add
imul
jae
jne
gs
xor
fs
insb
add
jae
popa
addr16
outsl
js
add
jo
imul
dec
inc
inc
inc
push
and
push
dec
push
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
pushf
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
xchg
nop
add
inc
add
popf
hlt
add
add
add
adc
and
add
lock
add
add
add
add
add
add
inc
add
rolb
adc
add
add
pusha
add
pusha
add
adc
add
pop
add
add
shrb
add
dec
add
pusha
add
pusha
add
sub
add
add
add
add
mov
sub
lea
push
call
mov
mov
push
push
lea
call
test
jne
or
add
ret
mov
lea
push
push
lea
call
test
jne
or
add
ret
mov
add
ret
add
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
mov
push
mov
push
cmp
jb
push
mov
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
pop
mov
mov
mov
sub
shr
mov
sub
and
shr
add
pop
mov
pop
pop
ret
mov
mov
mov
mov
lea
mov
add
ret
sub
push
push
push
mov
push
mov
mov
xor
lea
xor
rep
mov
cmp
mov
jbe
xor
mov
mov
lea
inc
inc
cmp
mov
jb
mov
mov
mov
mov
mov
xor
mov
movl
mov
lea
mov
mov
shl
add
cmp
mov
ja
mov
mov
mov
add
cmp
mov
mov
jl
mov
mov
mov
mov
shr
mov
and
sub
add
mov
mov
mov
mov
mov
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
mov
add
inc
dec
add
cmp
mov
mov
mov
jge
cmp
je
pop
pop
pop
xor
pop
add
ret
mov
xor
test
jbe
mov
mov
test
je
mov
and
mov
mov
xor
mov
mov
lea
inc
mov
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
push
push
push
mov
push
mov
cmpl
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
shr
mov
and
cmp
jae
mov
mov
shr
xor
mov
mov
jmp
cmp
jae
cmp
sbb
add
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
sbb
add
mov
mov
add
mov
mov
mov
sub
sub
pop
shr
mov
add
mov
pop
pop
mov
pop
ret
push
push
push
mov
xor
xor
lea
mov
push
call
mov
pop
mov
add
shl
add
inc
cmp
jb
mov
lea
push
push
call
push
push
lea
call
push
push
lea
call
push
push
lea
call
mov
pop
pop
add
pop
ret
mov
mov
mov
push
mov
lea
mov
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
rep
mov
stos
call
pop
ret
sub
push
mov
push
push
lea
push
push
mov
call
test
jne
mov
mov
rep
stos
xor
push
mov
call
mov
inc
cmp
jb
lea
lea
push
mov
call
test
jne
pop
pop
pop
pop
add
ret
xor
mov
call
cmp
jae
mov
mov
add
and
mov
inc
jmp
jne
push
mov
call
add
test
jle
cmp
jge
mov
dec
mov
inc
test
jg
jmp
cmp
jne
push
mov
call
add
jmp
push
mov
call
add
test
jle
cmp
jge
movb
inc
dec
test
jg
cmp
jl
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
push
lea
call
test
jne
pop
pop
pop
pop
add
ret
movb
xor
cmpb
jne
inc
cmp
jb
jmp
movb
mov
lea
mov
rep
pop
pop
pop
mov
pop
add
ret
call
nop
pop
sub
ret
sub
mov
push
push
push
movl
mov
push
xor
test
mov
mov
jbe
lea
call
cmp
jae
mov
mov
mov
inc
inc
mov
mov
jmp
cmp
jae
add
mov
and
shr
lea
cmp
mov
jne
lea
call
mov
xor
push
call
mov
pop
cmp
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
xor
push
call
mov
pop
mov
add
add
mov
mov
mov
xor
push
call
mov
pop
test
mov
je
cmp
jb
mov
lea
cmp
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
lea
call
add
lea
jmp
cmpl
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
add
cmp
jae
mov
test
je
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
inc
lea
cmp
mov
jae
mov
sub
inc
mov
mov
mov
cmp
jb
mov
add
mov
mov
jmp
mov
call
test
je
cmp
jb
mov
mov
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
add
push
add
insl
add
push
outsb
add
add
add
ljmp
add
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
ljmp
add
ljmp
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadds
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
add
add
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
inc
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
insl
add
dec
add
add
outsb
add
add
js
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
popa
add
add
add
imul
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
add
and
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
test
add
add
add
and
adc
add
add
call
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
xchg
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
add
add
add
ja
ja
ja
ja
add
ja
jo
clc
clc
clc
mov
ja
xchg
divl
clc
xchg
xchg
mov
ja
ja
ja
clc
jo
clc
jo
mov
add
clc
clc
jo
add
pop
mov
ja
jo
xchg
clc
jo
incl
mov
clc
clc
jo
incl
ja
ja
divl
clc
jo
clc
add
ja
add
ja
ja
clc
jo
ja
add
jo
clc
mov
xchg
clc
divl
ja
add
ja
xchg
divl
mov
add
add
cmpb
jo
jo
mov
idiv
jo
add
add
ja
js
xchg
div
jo
mov
add
add
jo
clc
mov
xchg
mov
clc
divl
mov
js
ja
ja
mov
add
add
pop
ja
add
ja
clc
ja
decl
js
add
ja
xchg
ja
ja
js
ja
add
ja
xchg
ja
ja
add
js
js
jo
divl
js
js
jo
ja
add
xchg
clc
xchg
mov
mov
ja
add
ja
clc
ja
clc
jo
js
js
mov
xchg
clc
divl
ja
add
ja
ja
mov
ja
ja
pop
jo
ja
add
xchg
clc
xchg
ja
js
js
xchg
ja
clc
clc
mov
ja
jo
xchg
xchg
pop
js
ja
ja
ja
mov
js
ja
clc
push
pop
clc
mov
ja
clc
ja
decl
