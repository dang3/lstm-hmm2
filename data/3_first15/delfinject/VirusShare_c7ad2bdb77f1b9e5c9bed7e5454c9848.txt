mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
and
imul
out
sahf
jnp
repz
jge
cmp
out
lret
not
bound
pop
cwtl
out
mov
testb
jecxz
xor
popf
fidivs
inc
cmpsb
xchg
movsl
xor
pushf
xchg
mov
mov
stc
lcall
xlat
sti
pop
xchg
stos
mov
movl
flds
mov
call
popf
mov
fldt
push
lods
add
into
pop
bound
or
lea
mov
mov
fcoms
pop
jl
fimull
adc
popl
xor
das
mov
mov
xor
and
in
ljmp
mov
sti
mov
sbb
jb
out
and
imul
outsb
add
push
cmp
pushf
sbb
and
test
ficomps
cmp
jb
jnp
pop
pop
arpl
lret
shrb
ljmp
lock
cmp
and
push
xor
pop
andl
imul
xchg
outsl
dec
stos
fistpll
lcall
and
decl
jg
mov
in
pop
dec
inc
cmovs
push
inc
xchg
pushf
jb
in
aam
popf
movsl
xlat
xchg
cwtl
dec
jne
sub
sti
dec
sbbl
dec
lahf
dec
dec
movsb
add
xlat
sti
mov
out
pop
idivb
sbb
sub
add
mov
and
push
push
mov
mov
pop
sbb
fldcw
add
fcomp
sbb
clc
loope
test
sahf
insl
fildll
out
cmc
mov
ret
mov
xchg
insb
pop
orb
mov
leave
shll
imul
leave
mov
adc
sbb
test
addl
call
dec
bound
pop
ds
push
xor
add
mov
fistps
or
test
xlat
mov
inc
cmp
mov
je
int
sahf
push
scas
in
mov
push
rorb
xor
enter
mull
xchg
dec
jo
repnz
mov
add
and
or
fnstsw
stc
cmp
movsb
inc
or
or
dec
adcl
idivl
fdivrs
sub
into
sub
xor
sahf
jae
dec
sti
add
pop
arpl
rclb
inc
pop
add
into
ficoms
lret
pop
mov
sub
shrb
jg
jmp
inc
fldenv
push
jle
jae
sbb
xchg
cmp
enter
insb
scas
out
nop
hlt
insl
out
enter
pop
pushf
cmp
mov
mov
dec
shrb
in
in
cmp
roll
test
add
loop
aaa
das
fcmovbe
inc
popf
stc
pop
popf
mov
dec
sarb
sbbl
pop
aas
xor
rcrl
frstor
xchg
xchg
popa
lahf
add
mov
sub
add
aas
xchg
mov
rolb
mov
int3
or
add
cli
mov
push
xchg
mov
sbb
jmp
push
push
adc
mov
fwait
loope
ja
dec
icebp
adcb
hlt
pop
fwait
scas
lcall
les
pop
faddl
inc
mov
adcl
push
inc
xor
cs
or
cs
sub
or
pop
and
out
popf
lret
addl
lea
inc
mov
stc
sub
iret
das
hlt
nop
repnz
mov
pop
daa
sbbl
icebp
fnsave
aas
sub
inc
maxps
push
push
add
scas
add
insb
dec
mov
cli
jle
sbb
and
push
sub
xchg
xor
sub
pop
xor
sti
lret
aam
pop
in
xchg
movsb
mov
jle
adc
rcr
and
loop
je
push
xchg
ffree
xor
add
iret
pop
cs
sub
int3
sub
jae
mov
movsb
jmp
mov
cmp
cmpsb
popf
cmpsb
push
clc
mov
sbb
bound
std
shr
ss
js
sub
sbb
mov
andl
fs
aad
pop
lds
mov
push
mov
in
xor
jg
fidivrl
sub
insl
jecxz
and
inc
test
mov
add
mov
push
add
cmp
outsl
and
rolb
xchg
mov
push
mov
push
mov
sbb
test
call
mov
push
rsm
rorb
or
test
xor
outsb
jne
scas
sti
movsl
pop
outsb
pop
divb
sub
xchg
das
enter
xor
stos
test
pop
test
nop
adc
xor
mov
scas
rol
and
adc
or
pop
dec
pop
sti
je
shll
ja
or
xchg
divb
xchg
add
xor
mov
mov
jle
nop
pop
lret
fucomp
shrl
fstl
sbb
xchg
sub
push
shl
daa
jmp
hlt
out
addr16
jecxz
scas
add
push
sbb
adc
inc
mov
mov
mov
adc
sbb
in
popa
jne
int3
pop
jo
test
jnp
sbb
push
sub
cs
imul
fstps
cwtl
stos
jge
fcmovb
jnp
fidivl
leave
sub
push
das
inc
xchg
lahf
mov
hlt
cmp
inc
dec
mov
int3
jnp
daa
cmp
ja
sub
ljmp
xchg
incb
int
push
and
or
push
mov
cmp
push
lea
imul
inc
dec
cli
adc
jmp
clc
or
jle
imul
outsb
mov
pop
mov
fsubrs
out
into
mov
jle
push
mov
das
std
xor
jb
pop
or
pop
je
push
add
js
xor
jae
cmpsl
xchg
xchg
gs
popa
mov
xorl
push
xchg
enter
test
lods
rorw
idiv
lock
push
dec
ret
inc
mov
inc
jecxz
lcall
adc
jbe
jb
out
lods
sub
sbb
mov
mov
mov
inc
aad
inc
divl
enter
cmp
in
sbb
loope
pmaddwd
sbb
pop
mov
jg
out
movsb
dec
or
ds
std
mov
jne
add
in
lret
inc
sbb
mov
mov
cmp
pop
imul
or
mov
rclb
repnz
mov
inc
popa
dec
aas
rcr
in
loope
aas
js
dec
decl
pusha
xchg
mov
icebp
pop
sarb
cmp
fwait
sub
or
test
outsb
mov
jmp
add
popa
sbb
fsubrl
popf
in
cmp
dec
jns
and
adc
mov
sub
sahf
sub
ds
loope
stc
pop
cmp
jmp
cmp
scas
ds
sbb
sub
dec
cmp
mov
pushf
inc
mov
stos
xor
mov
sub
movsb
push
ss
popl
mov
xlat
arpl
mov
pop
ljmp
pop
fucom
lret
mov
add
push
sbbb
lret
jmp
xchg
cmp
cltd
jb
loop
aam
int
js
bound
sub
stos
lret
outsl
hlt
sbb
xchg
inc
xchg
inc
fdivl
xchg
test
mov
enter
dec
push
push
adcb
xor
out
pop
or
aam
pop
sarb
lods
sbb
sbb
imul
fists
dec
add
sbb
xor
pop
pop
cmc
hlt
cltd
shll
xchg
mov
jnp
and
aas
mov
hlt
shl
mov
mov
mov
and
ds
in
xchg
push
dec
pusha
and
push
jl
shrl
sahf
subb
lock
pop
aaa
mov
add
fs
rcrb
fcomps
cmc
sub
loop
adc
aaa
xchg
mov
or
mov
xor
or
inc
bound
xor
dec
and
sbb
push
paddd
sbbl
cld
sbb
mul
aaa
ret
xchg
and
mov
mov
push
push
rcr
pop
imul
sub
dec
leave
nop
push
and
jne
pop
adc
jno
in
xchg
and
mov
mov
inc
jg
jg
xor
push
popl
aam
imul
stos
hlt
push
out
and
fcom
cmpsb
pop
daa
inc
mov
popf
inc
pmaxub
adc
xlat
arpl
outsb
mov
aas
ret
loopne
dec
lea
scas
pop
jns
cmp
mov
push
lret
mov
std
repz
sti
arpl
dec
mov
sub
and
lock
push
jno
dec
stc
mov
push
loopne
mov
pop
push
cmpsl
movsb
fimull
loop
ret
fists
lds
pop
dec
push
push
nop
pop
in
repnz
out
mov
xlat
mov
not
pop
test
daa
rcr
mov
mov
jns
out
jle
cmp
lods
out
ds
test
lret
movsl
push
js
adc
pop
xor
sbb
add
inc
rcrb
cmp
lcall
enter
jnp
in
dec
not
xchg
dec
add
xchg
sbb
fbld
push
imul
jle
push
cmpsb
and
dec
ljmp
mov
cmp
bound
mov
inc
jnp
cwtl
mov
jle
push
sbb
jns
repz
add
cmc
data16
adc
out
xchg
test
inc
xor
sub
ljmp
mov
dec
test
push
leave
dec
shr
jg
fisttpll
xchg
xor
mov
adc
lea
stos
sahf
repz
add
aad
and
stc
xchg
iret
and
pop
mov
test
ficompl
push
sahf
insl
pop
loopne
dec
fwait
xchg
and
mov
inc
out
mov
leave
xor
pop
addl
ret
ss
jg
movsb
mov
mull
dec
cmp
dec
sbb
stos
pop
ficoms
lock
stos
mov
andl
rcll
xchg
mov
jg
mov
aam
lock
cmp
adcb
shlb
cs
xchg
cmovbe
cmp
sub
inc
push
cltd
enter
jae
out
dec
arpl
subl
movl
push
leave
repz
or
call
adc
notb
mov
mov
xor
mov
adc
inc
js
pop
push
xchg
int
push
inc
int
xor
mov
and
jmp
jae
push
xchg
sub
scas
xchg
pop
adc
in
mov
adc
lcall
push
sbb
enter
sbb
or
ret
sub
jo
pop
ret
xchg
loopne
hlt
aaa
push
sub
or
aaa
cmp
pusha
lea
pusha
mov
lea
sti
insb
and
cmpsl
scas
and
jge
mov
mov
mov
mov
mov
jl
sub
xorl
pop
jmp
popa
add
mov
adc
sub
fbld
pop
popa
jno
push
les
xor
and
rcl
adc
xchg
sbb
ret
lock
testb
xchg
push
xor
pushf
mov
pop
mov
cli
xor
cli
dec
inc
nop
sbb
std
enter
xchg
cmp
mov
shl
cmp
aam
sbb
shll
les
mov
hlt
shrb
xor
mov
inc
cltd
pop
or
xor
jae
jne
cwtl
push
repz
mov
sub
lahf
fsubrl
mov
aad
dec
invd
or
arpl
or
sub
js
in
insl
int3
pushl
cltd
in
mov
mov
cmp
cmpsl
pusha
add
dec
mov
inc
jno
clc
incb
enter
in
bnd
ljmp
lock
jmp
inc
lret
dec
add
rolb
xor
pop
mov
clc
loop
ret
insl
pushf
das
out
fidivrl
inc
adc
rorb
rcll
sti
arpl
pop
stos
xchg
out
fistps
andl
cmp
push
ja
mov
push
ret
push
add
sub
divl
and
fsubrs
aaa
gs
mov
adc
ds
jg
mov
ja
dec
or
mov
imul
add
cwtl
jle
push
push
clc
popa
sub
addr16
or
mov
inc
movsb
add
int
test
std
mov
shlb
or
cmpsb
mov
std
push
and
insl
fidivrs
dec
xchg
xchg
mov
push
xchg
dec
rcr
jno
bnd
inc
std
mov
sub
pop
mov
and
mov
test
andl
push
jmp
inc
and
adc
imul
add
hlt
mov
adc
jl
mov
xchg
dec
in
dec
add
jp
and
ja
mov
adc
xchg
adc
jmp
lcall
popf
lsl
or
shll
and
dec
lcall
sub
pop
ljmpw
mov
ret
jbe
bnd
lret
adc
outsl
cmp
stc
cld
test
clc
mov
iret
stos
cmc
xlat
repnz
jnp
pop
out
mov
or
fs
aad
pop
or
mov
adc
push
cmc
dec
lods
mov
in
cli
pop
inc
and
and
arpl
adc
fimuls
lea
jp
sbb
mov
loop
icebp
fcoml
xor
pushf
xchg
jo
xchg
jl
sbb
mov
inc
nop
xchg
cmp
stos
or
mov
and
and
int
inc
cmp
mov
or
ret
cmp
mov
fdiv
cmp
arpl
push
sbb
stc
mov
aam
aam
dec
xchg
stc
fsubrs
fcompl
subb
push
stc
scas
mul
inc
and
sahf
imul
cs
lea
hlt
popa
cmp
or
bound
mov
mov
mov
mov
adc
mov
dec
jnp
sbb
out
sbb
jle
mov
adc
fs
cmp
addl
lds
jmp
insl
cmpsl
fs
jbe
jo
clc
add
jmp
ja
pushf
sbbl
fs
or
xor
test
push
adc
ds
stc
lret
mov
sub
bound
mov
pop
sub
sub
mov
in
sub
mov
lcall
stc
out
mov
add
dec
aad
cmpsl
addr16
rol
vpminub
pop
sub
adc
add
xchg
mov
das
cmc
jle
dec
out
xchg
test
cmp
inc
or
lret
mov
xor
adc
jbe
cmpsl
mov
je
shl
fwait
js
pop
pushf
push
icebp
mov
mov
cmp
ret
lods
mov
mov
lea
scas
scas
mov
ror
adc
aam
fildll
std
subl
mov
shl
shrb
fbstp
adc
arpl
mov
fistl
in
pop
and
ljmp
or
lods
mov
arpl
mov
mov
dec
add
aaa
arpl
lahf
cmp
lahf
into
clc
scas
cmp
movsb
jge
adcb
icebp
mov
sub
out
lcall
insb
in
sub
cmp
pop
mov
xchg
adc
cmp
jbe
or
aas
mov
js
jb
sbb
test
or
dec
push
jmp
and
mov
ljmp
icebp
mov
sbb
ds
xchg
das
pop
xchg
js
xor
inc
jmp
lahf
testb
test
push
pop
adc
xlat
shrb
jbe
push
cli
push
inc
aad
xor
int
fmulp
cwtl
rcll
jmp
std
fisttpl
jns
outsb
cmp
enter
xor
mov
mov
push
nop
jecxz
imull
lock
inc
dec
outsb
cmp
jb
push
sub
dec
insb
cwtl
pop
imul
push
int
pop
mov
sub
push
xor
std
xchg
cmp
jmp
push
fcmovnbe
inc
cmp
call
test
add
jge
sub
test
stos
subl
and
cmpsl
subl
imul
cmp
inc
mov
clc
inc
mov
sbb
fnstcw
mov
xchg
push
inc
cwtl
sub
gs
mov
in
push
test
or
sbb
jbe
ljmp
shlb
adc
jmp
cmpsl
fsubl
cli
data16
or
mov
lret
jge
ret
cmp
cmp
jae
test
xlat
das
adc
loopne
in
pop
clc
inc
adc
lock
js
jle
shll
das
fs
and
dec
lcall
orb
push
adc
cmp
push
dec
ss
mov
cmp
sahf
add
inc
pop
xchg
xchg
mov
negb
jp
push
xor
cld
mov
fwait
sub
jne
sbb
and
cmp
dec
mov
add
push
clc
xor
test
pop
or
push
cmpl
mov
dec
fdivr
out
lds
std
add
iret
pop
push
xchg
dec
mov
mov
call
mov
aad
sbb
mov
sub
and
jne
fstpt
cmpb
shll
cmpsl
adc
pop
mov
int3
jmp
mov
imul
decb
insb
out
xchg
pop
xlat
xlat
push
js
pop
rclb
mov
popa
in
ja
mov
arpl
iret
outsl
pop
jmp
xor
pop
je
enter
mov
fwait
and
pop
test
jo
pop
rcll
jle
scas
out
insl
mov
dec
std
mov
and
mov
inc
or
mov
xor
daa
cmpsb
dec
iret
into
test
mov
sbb
sub
out
movsb
sbb
dec
or
int3
sbb
sub
test
push
xor
and
sbb
push
sub
imul
sub
ja
push
xor
popf
and
lds
push
fst
sbb
sbb
or
icebp
sub
sub
es
lods
xchg
xor
gs
test
cli
mov
xchg
stos
scas
cmp
mov
mov
xchg
jne
jbe
loop
gs
dec
std
mov
push
cmc
pop
or
mov
lret
popf
dec
jecxz
sub
ss
or
jne,pn
into
jl
idivl
lcall
sbb
mov
lret
sbb
push
xchg
dec
inc
mov
mov
inc
adcl
test
fdivr
stos
mov
mov
sbb
out
inc
filds
arpl
push
sub
pop
std
sbbb
mov
mov
jg
in
jo
clc
dec
or
xor
aad
mov
bound
insb
test
sahf
loope
fldz
gs
xlat
cltd
fdivrp
and
or
mov
test
mov
xchg
inc
adc
pop
cmp
pop
jbe
pop
popf
xchg
icebp
iret
cmpsb
xor
movsl
jp
arpl
jne
push
xchg
cmp
leave
and
pop
cmc
push
mov
test
xorb
nop
repz
pop
popa
loop
gs
or
popf
pop
sub
lahf
xchg
cmp
pop
cmp
inc
in
mov
mov
xchg
sub
iret
or
cmpsb
sbb
sbb
jp
clc
xor
sbb
out
cmp
mov
popf
mov
mov
add
stos
cmc
mov
add
xor
nop
insl
xor
jne
adc
cmp
cmpl
ret
cmp
leave
push
rcrb
add
int
gs
mov
mov
std
inc
lods
sbbl
lcall
or
xor
mov
iret
adc
rcrl
push
xchg
inc
dec
jl
fildl
cmp
fsubs
push
sub
cmp
jl
es
bound
adc
add
andl
add
inc
bound
dec
jp
jne
in
lods
insl
fwait
cmp
jmp
mov
ret
sub
cmpb
mov
push
mov
sahf
jno
cltd
mov
add
pop
shl
out
pusha
mov
cld
std
test
jo
mov
loopne
jg
add
jecxz
test
pop
xor
xlat
test
lods
add
leave
fisubl
or
lahf
xchg
pop
pop
pop
out
lret
xchg
pop
push
imul
add
cmp
stos
into
push
jnp
dec
xchg
icebp
lods
fidivl
and
push
shll
pop
int3
icebp
lcall
mov
out
imul
faddp
pop
or
outsl
or
rcl
dec
sub
les
dec
rcr
movsl
xchg
mov
mov
test
or
push
std
cltd
into
mov
and
mov
movsb
jge
dec
xchg
adc
ret
or
jecxz
mov
xchg
mov
insl
in
cmpsb
dec
loop
pop
push
sbb
jecxz
mov
xchg
mov
xlat
mov
int
adc
cmc
mov
rcll
dec
js
nop
mov
pop
cmpsb
or
push
jnp
jbe
or
mov
ret
cmp
fsubrl
scas
bound
xor
mov
xor
or
dec
dec
cltd
jno
sub
andb
in
adc
xor
jbe
ret
lock
lret
idivl
rclb
mov
movsl
push
inc
inc
jle
leave
or
add
lock
mov
icebp
arpl
xchg
sbb
sbb
sbb
jns
cmc
xchg
call
les
pop
lds
cmp
fs
push
repnz
push
xchg
daa
testl
cmp
sub
mov
pusha
ljmp
or
fcoms
es
fldl
sbb
imul
jo
inc
mov
inc
inc
dec
ds
lret
sti
xchg
out
mov
imul
push
mov
xchg
adc
jb
jg
inc
movsl
ret
xor
fdivrs
fmull
xor
enter
or
stos
clc
call
dec
lret
rolb
mov
mov
jge
in
cmp
xorb
cmpsl
sar
jp
xor
xlat
int3
lahf
add
cli
jecxz
stos
sub
jae
push
and
jge
fsubl
arpl
imul
push
add
push
test
xchg
xchg
cmp
adcb
popa
cmp
dec
xor
cld
jle
testb
lret
arpl
mov
dec
inc
jge
imul
out
inc
ret
into
adc
jle
mov
clc
push
xchg
das
addr16
xor
xchg
cmp
dec
arpl
into
xor
mov
scas
ficoms
lea
mov
mov
jbe
sbb
adc
and
push
shll
idivl
pop
xchg
mov
mov
mov
cmp
data16
push
adc
push
inc
mov
add
cmp
ds
imul
js
ss
mov
xor
shlb
lock
xchg
pop
sbb
push
pop
nop
mov
xor
rcr
sub
and
mov
in
leave
mov
movsl
out
out
push
divb
pop
ljmp
ret
incl
sbb
clc
cmp
lcall
rcll
loop
in
pop
xchg
mov
mov
popa
ficoms
loop
imul
aam
mov
jbe
dec
xor
adc
sbb
in
mov
mov
xchg
or
ss
sbb
xchg
addr16
mov
outsl
adc
push
push
dec
out
xchg
imul
sbb
add
movsb
lret
jmp
into
int
pop
cmp
clc
mov
sar
test
cwtl
insl
mov
mov
pop
cs
mov
icebp
lcall
jbe
dec
les
mov
ja
scas
je
sub
mov
data16
bound
bound
fildll
push
inc
mov
lret
xchg
decl
jbe
push
dec
mov
or
clc
jmp
push
xor
lret
dec
clc
sbb
cld
scas
in
mov
addr16
xchg
push
js
or
cltd
rcl
fsubrs
add
mov
scas
test
ljmp
add
cmp
iret
fisttpll
insb
stos
jae
and
push
sbb
xor
push
dec
insb
mov
push
les
cmp
loopne
negb
cli
xor
les
dec
jb
icebp
movsl
xchg
imul
sub
shrl
cmp
xchg
lret
jns
add
daa
and
mov
xchg
inc
push
xchg
jecxz
jl
sbb
pop
lds
jecxz
mov
fldl
lock
leave
xchg
mov
testb
jns
fdivl
or
stos
dec
cwtl
xor
add
outsl
push
call
clc
loop
insl
cmpsl
xor
pop
dec
adc
std
dec
cmc
sbb
pop
stos
sti
xor
pop
fisttps
and
adc
test
mov
mov
gs
or
movsb
mov
xchg
test
mov
or
xorl
ucomiss
cld
pop
mov
push
pusha
fwait
mov
push
inc
inc
fdivl
sti
inc
mov
outsl
sarb
pop
aas
xor
jns
adc
data16
sbb
xchg
fs
jecxz
pop
xor
pop
das
mov
pop
cltd
cmc
push
lret
dec
or
int3
jns
imul
leave
ljmp
dec
cmc
js
int
inc
pusha
xor
jle
cs
xlat
cmovge
dec
add
push
ds
fisubrl
mov
inc
push
sbb
add
sub
add
div
cld
jnp
call
xchg
dec
and
sub
push
and
inc
es
mov
mov
pop
js
sarl
pop
cltd
lret
sbb
pop
aad
neg
loopne
mov
pop
lret
mov
jne
pushf
inc
insl
inc
push
inc
insb
jo
jno
lret
mov
in
cmpsl
or
add
stc
fisttpll
inc
cmc
sbb
jmp
dec
and
mov
outsl
scas
or
in
mov
inc
mov
mov
enter
mov
ja
xor
icebp
jnp
ret
out
aas
das
call
lcall
lret
and
fnstcw
mov
clc
dec
cmp
and
ss
pop
mov
cli
mov
adc
jp
pop
xor
pop
cld
add
push
insl
adc
cmp
negl
pop
bound
rolb
lods
and
adc
push
mov
inc
adc
stos
mov
insb
push
into
fmulp
sahf
dec
insb
hlt
int3
cmp
cmp
cwtl
sbb
or
loopew
test
sub
mul
mov
scas
in
fnstsw
movsb
sub
shlb
push
or
fdivrs
cmpb
cmpsb
mov
mov
sahf
outsb
jns
ret
xor
shl
inc
mov
out
add
and
cltd
jb
data16
or
clc
xchg
mov
mov
mov
jecxz
sub
jb
pop
ss
lods
test
mov
out
or
inc
ret
cmp
inc
lods
dec
inc
mov
enter
popl
and
gs
icebp
mov
ret
test
jmp
imul
mov
cmpsl
int
in
inc
loopne
sbb
or
arpl
aam
roll
inc
outsl
and
insb
inc
sti
dec
add
sbb
stos
aad
mov
lock
imul
into
sub
push
push
and
jb
add
add
fisubrs
into
shrl
jb
enter
cwtl
imul
jne
add
ss
push
loope
fistpl
cmpl
pop
push
arpl
ljmp
lahf
push
mov
push
dec
push
out
xchg
sub
sbb
mov
jns
adc
jne
xchg
xchg
out
nop
sub
jge
dec
or
enter
arpl
push
sbb
push
leave
pop
repz
out
inc
subb
mov
jbe
push
cmp
pop
mov
xor
popf
fists
pop
loop
jp
ja
inc
pop
jmp
mov
inc
or
sbb
repnz
add
insb
test
jecxz
sub
dec
cmp
sub
inc
outsl
jmp
or
iret
pop
in
sub
fdivr
insb
dec
jne
inc
jo
jecxz
mov
xchg
mov
scas
stc
lahf
xchg
jle
mov
push
xor
push
xlat
pop
push
test
xchg
pushf
popfw
sbb
or
jecxz
sub
testl
or
scas
jo
js
sbb
insb
inc
daa
fists
sbb
inc
xchg
mov
jnp
mov
fcompl
jge
into
popa
and
push
or
repnz
mov
lods
push
stc
jle
cmpsb
mov
add
movsb
mov
leave
sbb
push
cmp
aaa
jae
insb
cwtl
inc
dec
call
ds
jnp
fbstp
and
xchg
xor
xor
xor
mov
mov
adc
mov
mov
mulb
xor
out
lock
and
nop
jae
out
test
push
notl
xchg
xor
outsl
ja
sbb
das
ja
mov
mov
sub
inc
xchg
push
push
pop
stc
xorb
jl
mov
fists
mov
sub
pop
out
pop
cmp
insl
test
adc
jb
pushf
js
fidivrl
pop
lret
rorb
xchg
gs
fnstsw
add
pushf
rclb
xchg
mov
popa
push
scas
insl
inc
popa
xchg
cmp
mov
in
and
call
int3
test
and
xchg
out
sub
in
xchg
inc
dec
push
push
push
xchg
push
fwait
dec
cld
xor
jno
fwait
push
mov
mov
mov
mov
stos
mov
lret
jne
jno
jp
add
xchg
call
dec
arpl
cmc
stos
sti
adc
rcrb
sahf
lret
push
mov
popa
enter
mov
ss
mov
jae
cwtl
dec
add
pop
mov
xor
and
jge
mov
andl
cwtl
push
arpl
xchg
popf
jnp
dec
and
ret
sti
jl
cli
rorb
pop
int
loopne
lret
insl
enter
jne
push
cmp
mov
subps
lret
aaa
call
dec
inc
and
mov
fisttpll
shlb
xchg
push
and
inc
imul
stos
cmp
mov
push
adc
pop
or
and
fistps
mov
daa
jecxz
sub
mov
add
fcomip
insb
cmpsl
push
shl
mov
jl
shlb
mov
stos
cwtl
pop
mov
mov
dec
scas
lret
xchg
adc
xor
insb
cmc
mov
rorl
loopne,pt
jmp
lods
mov
fs
mov
push
mov
mov
lret
out
lock
notl
pop
and
mov
push
or
data16
pushf
hlt
fisubl
cmp
xchg
mov
dec
xchg
dec
mov
ja
sub
or
sub
outsl
out
push
test
push
stc
push
iret
movsb
loop
pop
cmp
outsl
push
aaa
outsb
adc
icebp
cli
cmp
mov
jbe
jb
enter
test
clc
adc
test
cmp
das
movsl
or
test
mov
dec
cs
sub
mov
fdivl
xchg
mov
xlat
pushw
xchg
imul
pop
ffree
movl
xor
pop
sbb
mov
fwait
nop
into
push
jl
mov
arpl
ficoml
sub
xlat
xor
push
jbe
and
sub
push
mov
repz
lret
xor
repnz
mov
cmc
dec
xchg
imul
pop
cmp
push
imul
into
ds
add
jns
xchg
adc
sub
cltd
push
jb
sub
cli
out
lret
jmp
test
mov
jl
lcall
push
fwait
sahf
jecxz
outsl
adc
test
jmp
in
and
fs
ja
subb
jno
adc
clc
inc
pop
mov
nopl
pop
push
cltd
adc
fnsave
inc
push
inc
in
loope
xchg
ss
push
mov
stos
or
popa
xor
insb
out
aad
mov
pop
sub
add
adc
int
out
sbb
mov
mov
or
pop
or
xor
orl
xchg
dec
mov
mov
sub
inc
xlat
xchg
negb
adcb
pop
or
scas
call
test
cwtl
jp
mov
pop
imul
mov
inc
test
cltd
xor
mov
sbb
shr
inc
enter
test
pushl
cltd
xor
adc
jp
ja
xchg
and
dec
jecxz
mov
jns
lock
in
mov
lods
fists
divl
add
pop
hlt
adc
rolb
or
pushf
out
xlat
push
sub
mov
push
lahf
scas
xorl
jmp
and
inc
cmp
push
jle
sub
divb
cwtl
sbb
les
mov
dec
sahf
movsb
mov
stc
test
mov
dec
test
pop
mov
icebp
mov
or
mov
ds
xchg
pop
fisttps
lret
mov
xor
insb
or
seta
cmp
lcall
nop
cmp
fs
mov
pop
push
movsb
pop
dec
clc
ds
add
sbb
les
add
inc
pop
pop
mov
es
xor
fst
mov
aam
mov
adc
adc
dec
mov
jl
sbb
xchg
leave
jecxz
ret
sub
mov
test
fs
jge
ljmp
and
xor
adc
add
mov
xchg
xchg
push
insb
xor
in
lods
daa
sahf
mov
sbb
ret
xchg
out
lock
jge
dec
mov
cmp
xrelease
out
call
aad
fwait
mov
nop
sbb
inc
xchg
imul
lods
and
push
cmp
jno
push
outsl
mov
or
push
xchg
pusha
fs
sub
rorb
xor
adc
insl
in
sub
sub
imul
mov
inc
push
pop
and
pop
xor
push
push
hlt
outsb
mov
jbe
jb
lods
cmpsb
sbb
mov
adc
mov
call
dec
in
int3
add
mov
loop
mov
sub
xor
divb
add
jp
mov
pusha
and
inc
testb
cmc
or
pop
push
cmpsb
sub
or
clc
sarb
cmpsl
xor
loope
fists
lcall
mov
push
jecxz
scas
stc
fwait
ss
dec
fldcw
mov
fs
in
popw
jno
rolb
add
xchg
data16
popf
out
fstpt
ret
dec
sbb
fidivs
gs
add
or
push
mov
add
into
jb
sub
loop
sarb
gs
or
xlat
mov
pushf
mov
push
xchg
xchg
gs
pop
or
inc
int
inc
es
fsubs
cmp
push
lods
dec
adc
xlat
fistpll
push
stc
xorb
and
cltd
push
daa
idiv
in
mov
pop
cmp
out
or
mov
gs
cltd
xor
pop
inc
and
xchg
sbb
mov
lea
dec
std
sahf
and
mov
mov
push
dec
inc
or
es
in
add
dec
icebp
faddp
jae
inc
sahf
cwtl
loop
sbbl
xchg
sbb
inc
hlt
sbb
enter
adc
add
mov
into
stos
scas
sub
jno
aad
jg
or
jb
and
or
sub
sub
movsl
xor
jbe
loope
leave
jg
cli
scas
mov
add
jge
jle
pop
sub
mov
popf
cli
mov
lock
pop
andb
aaa
mov
and
adc
mov
leave
test
cmp
rcr
outsb
dec
fidivl
movsb
add
cmp
scas
jns
fnsave
mov
inc
mov
jno
outsl
mov
mov
ret
adc
adc
andb
mov
jnp
pop
pop
ss
jg
or
cmp
jb
or
push
in
or
icebp
lock
and
mov
xchg
call
xor
dec
inc
mov
cmp
jmp
push
hlt
or
sbbl
dec
pop
aas
in
sti
repz
shlb
out
rcll
lea
aas
mov
cld
mov
repz
jnp
iret
cmpsb
xchg
xchg
mov
call
jbe
or
xlat
dec
dec
or
repz
mov
push
pusha
inc
out
jp
jnp
pop
push
add
popa
fldenv
jl
dec
dec
ja
xchg
bound
and
xor
and
jl
in
pop
mov
push
in
test
mov
test
pop
push
dec
cld
sub
cwtl
pop
cmpb
jbe
cmp
mov
loopne
call
test
push
mov
dec
int
or
jecxz
sub
or
es
cmpsl
pop
sbb
mov
shl
daa
pop
xor
pop
mov
mov
add
pushf
sti
inc
jne
xor
dec
out
call
cmpsl
sub
inc
gs
mov
mov
mov
and
mov
sbb
daa
in
loope
sub
icebp
pop
aas
sub
lods
jbe
lcall
movsb
xor
inc
sub
stc
movsl
and
ret
cwtl
pop
dec
cmpsl
sub
das
loope
mov
sahf
mov
insb
mov
mov
std
fldcw
ret
jmp
loope
sbb
xor
ds
xchg
xchg
mov
or
fiadds
push
fists
adc
dec
or
sbb
pop
imul
cmp
leave
or
gs
xchg
pop
fistl
or
out
or
dec
lock
ljmp
out
xor
inc
push
adc
neg
clc
loop
xor
test
jns
mov
add
rclb
je
mulb
mov
push
lret
mov
aaa
test
clc
jle
add
mov
mov
mov
dec
pop
sub
stc
push
sbb
stc
cmpsb
inc
pusha
xchg
fsubl
fwait
dec
jno
sbbl
mov
mov
sbb
pop
call
mov
or
arpl
ja
shl
inc
jne
xchg
cmpsb
jno
xchg
pop
addr16
mov
xchg
sbb
sbbb
push
cs
mov
bound
cmovg
sub
mov
pop
lea
or
mov
sbb
rcr
cmc
sub
jmp
arpl
call
je
test
sahf
sub
mov
fiadds
fwait
outsb
cmp
movsl
iret
and
jecxz
push
popf
jecxz
iret
sbb
sbb
mov
push
pop
xor
dec
fucomp
jae
cmp
xlat
sbb
incb
adc
aam
sti
pop
xor
pushf
jg
int
mov
mov
cld
and
push
cmp
fstpl
push
mov
xor
jno
push
iret
fdivl
mov
loopne
inc
fsubs
jp
fwait
xor
add
mov
sbb
mov
and
inc
xchg
shlb
jo
ffree
mov
cli
mov
stc
xchg
sbb
add
out
push
stc
cltd
or
sbb
in
cwtl
hlt
arpl
or
xor
jo
or
shrl
ljmp
out
movsl
sti
sub
mov
scas
fists
movsl
adc
mov
mov
out
dec
decb
jns
cmp
lds
add
call
and
jle
outsl
rcll
xor
inc
push
scas
cmpsl
mov
orb
out
or
or
xchg
test
jp
mov
pushf
movsb
push
lds
sahf
lods
xchg
mov
mov
lcall
jbe
mov
outsl
adc
sahf
je
xlat
xlat
and
jnp
sbb
cltd
adc
push
je
repnz
outsb
inc
push
scas
pop
scas
sbb
cli
in
lods
enter
or
ja
mov
push
into
pop
adc
lea
add
mov
sbb
pusha
mov
arpl
loope
icebp
mov
cmp
push
mov
mov
pop
mov
sub
das
ficompl
or
xor
lock
jmp
push
arpl
fwait
jle
mov
sub
mov
dec
jae
daa
sbb
xor
pop
push
cmc
mov
xchg
imul
inc
dec
push
mov
movsb
sub
xchg
sbb
aas
mov
inc
ret
add
mov
pop
movsl
push
int
sub
and
sub
pop
jp
iret
xchg
repz
cmc
pop
dec
jp
movsb
mov
inc
add
mov
out
add
lcall
push
dec
loop
addl
icebp
outsb
stos
xchg
testl
test
test
sahf
pushf
cld
jmp
sbb
mov
lahf
sub
xor
jne
test
orl
and
out
lcall
sahf
jge
lock
fwait
orb
repz
sbb
fdivrs
lahf
lret
mov
outsb
cmp
and
ret
fcmovbe
xor
data16
mov
dec
pop
xchg
out
into
mov
fbstp
mov
int
bnd
ret
outsb
cmc
mov
dec
jle
lret
sub
push
scas
ficoml
sbb
sub
dec
jp
scas
fld
std
add
pushf
lret
push
add
xor
lahf
mov
jg
test
or
cmpsb
mov
mov
lods
iret
inc
dec
fnstsw
leave
sbb
leave
mov
inc
lahf
popa
push
sbb
inc
jno
pop
jbe
mov
imul
test
arpl
push
jb
stc
push
mov
jbe
pop
sahf
jp
push
gs
dec
repz
call
and
push
das
jmp
aas
loopne
adc
push
mov
movsb
and
lds
push
mov
lds
lds
add
mov
inc
jb
test
fs
stos
pop
xchg
jle
pop
fwait
lret
daa
rol
je
push
cmp
aad
cmpl
stos
lods
xor
shlb
or
jno
sub
popf
fdivr
idivl
out
jnp
pop
stos
xor
and
loopne
loop
adc
pop
push
xchg
daa
xchg
push
or
xchg
iret
in
pop
adc
mov
enter
xor
inc
cltd
aam
call
sbb
in
adc
fcmovbe
push
add
mov
mov
stos
or
or
cmp
movsb
aam
sbb
xchg
push
xchg
add
cmp
lahf
daa
mov
dec
lods
inc
jl
or
pop
sub
inc
jbe
pop
js
les
add
push
inc
pop
rclb
aad
enter
pop
mov
pop
lret
fwait
pop
cmpb
ds
cmc
mov
ret
andb
insb
jmp
aaa
sub
mov
mov
test
addr16
pop
jecxz
clc
mov
dec
and
adc
cli
int3
or
mov
xchg
jae
mov
imul
dec
pop
or
fbld
ret
dec
out
shlb
adc
js
rorb
add
push
fbld
arpl
dec
mov
mov
sbbl
adc
pop
mov
sbb
std
lods
mov
adc
popa
shl
xor
ss
cmp
fwait
lret
pop
std
sbb
out
mulb
stc
outsb
and
in
or
lcall
push
test
adc
test
int3
mov
popf
mov
xchg
outsb
sbb
je
sbb
aaa
aaa
push
cs
mov
mov
or
xor
inc
sub
mov
pop
loope
ja
cmp
or
push
ret
add
or
rcrl
dec
xor
rol
popf
mov
adc
or
mov
mov
outsb
jge
imul
xchg
filds
lahf
push
dec
jmp
nop
out
xchg
xor
sarl
and
jecxz
out
cmp
cmpsl
dec
movsl
jb
jnp
invd
aas
cli
jbe
test
cmp
adc
clc
adc
cli
inc
ljmp
es
xor
arpl
jb
lret
jp
xor
and
pop
lret
sub
shrl
aas
je
aaa
pop
jns
loope
dec
aam
add
repnz
xchg
int
and
popa
push
mov
pop
je
dec
scas
test
daa
xchg
ss
xchg
push
stos
sbb
push
mov
imul
jne
aam
daa
jl
je
es
jnp
sbb
js
push
sti
cmc
xchg
int3
fcmove
mov
pushf
jne
int3
lcall
push
push
je,pt
enter
and
adc
sahf
add
ret
cs
mov
cmp
loope
dec
in
loop
sub
mov
and
pusha
jl
xlat
pop
addr16
scas
mov
iret
cmp
push
aaa
fcoms
cmp
xchg
lcall
pop
or
sub
push
push
lods
push
mov
push
es
ss
pop
and
mov
sbb
cmp
or
xor
fistl
pop
sbb
sti
stc
cmpl
mov
and
popf
ss
nop
adc
sub
jnp
stos
pop
ds
sub
and
mov
sub
inc
inc
inc
in
mov
aas
mov
sub
xor
cltd
stos
test
xor
enter
repnz
nop
sbbb
pop
stc
sbb
xchg
mov
stos
jle
sub
divl
test
mov
cmpsb
add
mov
mov
push
cli
adc
pop
push
push
cmp
xor
jl
js
pushf
add
pop
pop
dec
pop
xor
mov
sub
lock
psubusw
or
push
xchg
cmpsb
pop
jle
in
int
inc
dec
aas
rol
insl
jl
lds
mov
outsb
sub
adc
sahf
out
nop
sub
sub
ret
and
sbb
mov
adc
ret
or
aaa
xor
push
mov
gs
xchg
and
aas
push
or
xor
ja
mov
mov
repz
push
mov
cmpsl
mov
inc
dec
outsl
insl
and
jmp
loope
rcrb
cli
or
push
push
sub
loopew
mov
fdivs
orb
cmpsb
jnp
pop
cmp
movsb
xchg
pusha
mov
push
sub
cmp
xchg
repnz
ret
push
cmp
aad
daa
jecxz
in
xchg
popf
jo
cltd
inc
mov
daa
scas
push
je
dec
dec
push
inc
dec
fwait
popa
das
jne
inc
and
ss
js
in
add
nop
inc
mov
jb
je
mov
je
xor
std
out
js
mov
xor
jb
rcll
xchg
xor
pop
xchg
add
dec
and
xor
lret
dec
push
int
mov
push
leave
sub
adc
mov
inc
mov
std
mov
aad
and
inc
fldt
js
fldl
icebp
xchg
bnd
adc
mov
fmuls
pop
pop
mov
mov
cltd
jns
sub
rcll
nop
nop
dec
jo
repz
pop
jle
sbb
and
outsb
rclb
imul
inc
xor
test
inc
add
add
popa
cmp
lea
inc
iret
jbe
jge
gs
add
or
jl
mov
inc
jp
or
jecxz
and
paddw
rcrb
sub
mov
lcall
movsb
das
cmp
inc
push
xchg
cmp
dec
insl
or
jns
and
enter
shl
cmp
ss
pop
and
sub
es
mov
cwtl
in
fs
inc
push
repz
and
xor
mov
lods
mov
insb
enter
mov
mov
popa
jg
lcall
sbb
jmp
loopne
cmp
mov
mov
or
rcl
mov
adc
stc
pop
pushf
xor
jmp
sbbb
cmp
add
daa
xchg
xchg
push
loopne
jle
mov
xchg
add
sbbl
mov
mov
push
cmp
or
ret
inc
sbb
arpl
and
jnp
test
es
cli
movsb
cmc
arpl
jg
movsb
das
mov
ljmp
sbb
sahf
xchg
push
add
or
xchg
sti
and
jle
lret
stos
inc
dec
pushf
and
inc
outsl
jbe
jbe
or
xor
sub
aad
push
jne
bound
inc
sbb
call
pop
das
outsb
sub
cmp
mov
nop
adc
lahf
add
call
repnz
shll
ret
test
pop
cld
insb
stos
addl
xchg
inc
pop
std
test
adc
cmp
xor
push
mov
aad
test
clc
jmp
lret
push
push
mov
cmp
frstor
fwait
scas
pop
ja
push
dec
mov
data16
or
mov
aad
popf
and
adc
pop
xchg
loope
icebp
std
into
sub
inc
add
mov
dec
push
hlt
or
and
daa
cli
cmp
sub
popf
lods
push
adc
sbb
mov
adc
cmp
and
cmp
push
imul
test
repz
repnz
push
cmp
sbb
mov
stos
mov
movsb
pop
cli
jbe
xchg
or
xchg
ret
jg
mov
sbb
test
push
jl
scas
push
or
mov
sub
and
cld
lock
xchg
imul
adc
es
jnp
inc
push
mov
xchg
and
jle
inc
daa
add
mov
adc
mov
add
mov
stos
aad
lcall
add
inc
enter
sbb
shr
xor
rcrb
cld
stc
mov
out
dec
jnp
inc
mov
push
popf
or
addr16
hlt
sub
dec
cltd
mov
stc
fs
cmpsb
xchg
sub
scas
adc
sbbb
int3
mov
sti
jnp
ja
xchg
cltd
aaa
rorb
sub
hlt
fwait
xchg
mov
stc
out
aam
mov
sbbb
dec
scas
or
test
std
xor
out
and
push
int
js
lock
sub
dec
ja
inc
std
mov
cld
das
mov
cmp
fnsave
pushf
test
cmc
fcomps
push
sbb
bswap
cmpsb
movsb
popa
xchg
je
movsl
dec
cmpsl
gs
aaa
stos
mov
jne
push
imul
cli
and
shl
add
sbb
faddl
mov
cmp
xchg
xor
mov
ret
sar
jnp
xchg
fistpll
daa
sbb
mov
mov
fucomi
pop
popf
mov
fnsave
jge
std
lds
lret
lods
fadds
lock
out
xchg
sub
pop
cmp
pop
cmpsl
nop
pop
inc
adc
ret
sbb
imul
or
rolb
dec
and
cld
sarb
bound
mov
rcrb
add
fstl
mov
out
fwait
mov
adc
jbe
xchg
and
addr16
adc
repz
shl
pusha
ljmp
add
jmp
es
movsl
pop
sbb
add
inc
inc
pop
cmp
mov
lods
mov
fwait
inc
xor
imul
mov
ds
cmc
pop
outsb
jecxz
add
jecxz
pop
es
pop
out
jecxz
cwtl
fsubl
popf
test
dec
push
shlb
mov
push
xor
popf
xlat
shll
pop
inc
xor
loopne
dec
jno
stos
or
mov
mov
sahf
ljmp
mov
outsb
push
ret
lods
notl
pop
push
repnz
and
jb
aad
push
adc
aaa
ret
and
mov
dec
mov
nop
insl
ret
jns
lock
adc
sub
jnp
pushf
jmp
aaa
pop
sbb
lret
je
xchg
jmp
scas
and
ja
inc
push
jg
dec
std
in
arpl
imul
shll
or
ret
mov
shll
divb
ror
cs
test
xor
cmp
fsubrs
clc
dec
and
pusha
mov
inc
adc
pop
push
jns
lret
inc
adc
and
mov
enter
out
fwait
rcrb
xchg
or
or
subl
add
dec
inc
pop
mov
subl
pop
dec
xor
sub
mov
test
xor
lcall
add
or
test
cmpsl
loop
mov
and
in
adc
adc
jle
dec
pop
dec
xchg
gs
lea
cwtl
lret
jne
mov
inc
inc
out
sub
dec
push
dec
pop
ja
mov
js
mov
loop
mulb
test
pop
divl
pusha
ja
pop
cs
int
dec
xchg
fimuls
out
data16
sub
psrld
mov
pop
fisubrs
or
dec
jns
jg
aas
sub
in
inc
stc
and
stc
mov
in
cmp
cmpsb
xor
scas
sbbb
sti
mov
subb
cwtl
ljmp
xlat
inc
fwait
test
mov
xchg
loopne
fiadds
popa
dec
aas
dec
test
out
movsl
push
add
cltd
int
push
push
insl
fsubs
mov
stos
or
mov
inc
cmp
jp
pop
mov
dec
pusha
test
rcrb
xorb
les
mov
cli
outsl
mov
sbbb
adc
push
inc
sub
iret
mov
lcall
push
and
xlat
mov
mov
shlb
pop
pop
lsl
and
mov
sub
loope
sti
lock
sub
and
pop
cli
shl
dec
pop
int3
sbb
int
sbb
outsb
mov
fnstsw
int
pop
lcall
shrl
sub
push
pop
jmp
push
adcb
adc
popa
pop
fwait
add
test
jmpw
in
xchg
in
xchg
sahf
popa
nop
or
idivl
jnp
push
outsl
out
mov
inc
imul
nop
jg
repz
jno
ficoml
leave
dec
jg
mov
int3
std
stos
xlat
mov
aas
in
mov
push
aaa
in
sti
add
inc
pop
mov
xchg
in
ret
popa
jbe
lods
outsb
mov
lods
mov
mov
out
xchg
dec
adc
repz
movsl
int3
inc
add
hlt
mov
add
lods
inc
xor
enter
xchg
mov
fmulp
push
lret
sbb
loop
fidivs
stos
xchg
and
cmpsl
jmp
cmp
inc
shlb
dec
lahf
repnz
inc
pop
shl
add
sub
punpckhwd
push
add
out
addr16
inc
jae
mov
out
ret
xchg
aam
mov
popf
jae
cmc
loopne
jo
daa
jnp
rorl
aad
in
jge
cmp
mov
cmp
sub
pop
movb
mov
popf
adc
mov
dec
test
xor
aad
push
gs
sahf
cltd
mov
stos
aas
loop
mov
inc
sub
adc
xor
xchg
xchg
dec
sbb
push
es
push
int
jo
lock
jl
inc
pop
cmpsb
pop
sbb
ds
adc
xchg
test
and
and
sbb
insb
lcall
jge
lock
mov
lahf
mov
mov
xchg
js
mov
xor
pop
dec
les
into
nop
cmp
mov
dec
adc
xchg
cmp
inc
and
mov
insl
jno
xor
push
sub
sbb
scas
jg
nop
lods
mov
call
inc
incb
cs
cmpb
inc
xchg
mov
jge
aam
subl
adc
lahf
push
xchg
or
jg
push
cld
int
fxch
mov
loopne
addr16
movsb
mov
pop
mov
int3
je
inc
mov
in
loopne
push
lret
xchg
push
mov
push
fiadds
sbb
dec
dec
mov
sub
sub
jns
jnp
fidivrs
aad
shl
addr16
jns
lods
push
popf
enter
fsts
popf
jb
dec
je
push
loope
mov
clc
mov
lret
and
into
int
jl
ljmp
cmpsb
pop
adc
call
data16
movlps
dec
dec
je
pop
pop
adcb
push
mov
mov
sbb
push
and
jp
pop
andb
fistpl
mov
fmuls
loope
push
sub
std
loop
movsl
jb
stos
pop
xchg
jbe
mov
jmp
cmpsb
jo
xchg
scas
cmp
and
push
sbb
mov
mov
xor
hlt
hlt
xchg
mov
push
faddp
push
mov
popf
push
mov
xor
xor
mov
sbb
das
sbb
push
cwtl
scas
jo
data16
cmp
xor
mov
gs
outsb
and
not
hlt
xor
mov
repz
lcall
lods
pop
shlb
scas
mov
out
sbb
je
jle
dec
or
loope
push
vphsubdq
xor
in
jp
fnsave
push
xlat
jne
xchg
lret
mov
nop
xor
stos
popf
jl
xor
xor
repnz
sbb
es
repnz
pop
inc
xchg
les
fdivl
test
in
cmp
mov
loope
icebp
ds
imulb
xor
enter
push
add
in
and
dec
aad
cmp
mov
jno
fmul
lret
cli
jmp
add
jmp
js
js
mov
cli
push
mov
push
adcl
and
sbb
mov
iret
mov
ss
push
andb
lods
ret
mov
add
push
imul
imul
test
adc
dec
call
sahf
mov
push
out
mov
sbb
cmp
jmp
push
jp
aam
lods
mov
leave
jg
add
aam
shlb
nop
mov
in
sarb
inc
outsl
in
mov
rcrl
xor
push
pushf
int3
push
jbe
test
out
pop
sbb
outsb
pop
push
xor
sub
ficomps
clc
es
push
outsb
sbb
or
mov
daa
and
sub
add
js
dec
shlb
push
fs
fsubl
add
lea
xor
mov
jnp
enter
jl
ja
insb
push
int
xchg
jb
das
jnp
sbb
outsl
mov
xchg
jl
jb
addl
test
add
jp
daa
pop
jmp
dec
scas
enter
imul
mov
rcrl
aaa
shlb
popf
ret
lods
roll
lods
cwtl
inc
jge
push
and
int3
das
xlat
xchg
pop
pushf
pop
insb
inc
ljmp
xchg
push
dec
dec
and
lahf
push
out
push
addb
xchg
inc
cmpsb
xchg
es
jmp
loopne
mov
aam
xor
cmp
pusha
adc
popf
lcall
dec
dec
xchg
lods
stos
nop
pop
arpl
add
dec
sub
dec
and
push
and
xor
push
adc
aad
xor
jl
inc
pop
or
jb,pn
cld
push
test
cmc
cltd
jle
aad
leave
rcrl
mov
enter
mov
ds
repnz
lret
shlb
arpl
stos
add
ja
addb
adc
add
addr16
push
test
mov
add
pop
mov
insb
or
addr16
push
pushf
sahf
std
dec
cmc
mov
cmpsb
imul
jne
rclb
sahf
das
or
inc
jecxz
mov
nop
test
repz
pusha
mov
mov
aaa
jp
mov
mov
andl
jl
lea
or
mov
faddp
fcomi
mov
std
or
cmp
adc
pop
inc
fadd
dec
xchg
jb
inc
jb
cmc
or
pop
inc
sbb
cltd
xchg
idivb
push
dec
cmp
or
popf
dec
ret
into
repnz
or
fcoml
rcrb
andb
pusha
lahf
dec
jbe
dec
dec
in
es
lods
fdiv
dec
lea
mov
in
sub
xchg
rol
sti
sbb
pop
cs
and
subl
sbb
and
xchg
inc
inc
out
repz
dec
inc
cwtl
sub
cmc
call
loopne
test
add
cmp
sub
hlt
loope
pop
iret
cmp
js
movl
inc
or
in
out
inc
in
stos
imul
outsb
mov
push
sbb
addr16
out
mov
xchg
cmp
and
cmp
in
mov
mov
imul
mov
cwtl
mov
lock
repz
scas
xchg
fs
stos
shr
lods
xchg
xor
dec
sub
xchg
mov
negb
test
fcomps
pushf
jmp
xchg
daa
aaa
adc
ds
inc
cmpsb
cmp
adc
in
mov
pop
movsl
addb
xchg
popf
sti
repz
std
insb
inc
fldenv
out
inc
adc
sbb
dec
mov
bound
sti
dec
sub
cmp
lahf
mov
stos
repz
call
sub
jnp
sub
movsb
fcmovbe
sub
push
inc
inc
xor
xor
xor
clc
add
movsb
or
pop
fildl
fcmovnb
data16
mov
shll
push
mov
jns
jge
pop
mov
jnp
daa
push
lret
nop
aas
jo
and
xor
push
lock
cmp
test
xchg
inc
push
jno
mov
gs
and
dec
jg
xor
scas
cld
pop
stos
hlt
mov
and
inc
mov
int3
out
pop
insb
adc
sbb
subl
cmp
cs
neg
push
test
mov
and
leave
mov
leave
imul
xchg
in
test
cmp
jns
push
xor
jno
cmp
shrb
cmp
dec
jg
mov
pop
jns
inc
sub
roll
push
stos
jle
cmp
fcompl
testb
cltd
mov
mov
movsl
pop
aas
add
dec
out
ret
pop
decb
cmp
push
test
cmp
push
cltd
xchg
fisttpl
mov
int3
cltd
add
setle
inc
sbb
fsubs
cwtl
jmp
out
orb
dec
fistl
push
daa
imul
int3
hlt
adc
push
push
enter
push
popf
pop
stc
bound
adc
divb
pop
lret
jo
push
jl
sub
repnz
or
jecxz
sbb
lock
cmp
pop
cmp
cld
iret
arpl
cld
insb
jle
insb
fisubl
mov
popa
add
mov
sahf
cmc
jle
fistpl
fs
lahf
cmp
mov
rcll
addr16
xor
data16
mov
cs
jne
in
sbb
push
movsl
insb
jbe
insb
inc
cs
ss
cwtl
or
lcall
dec
and
push
xchg
dec
or
xchg
stos
stc
repnz
push
jle
inc
mov
inc
jnp
jp
in
aad
jne
jno
test
bound
out
pop
lods
xor
xchg
and
sub
inc
xchg
repnz
pop
xor
push
xlat
mov
add
pop
fwait
repnz
inc
stos
mov
mov
andl
xchg
pop
push
iret
pop
pop
or
inc
pop
add
sarl
sbb
push
jbe
pop
insl
rclb
dec
jbe
pop
cmp
js
push
mov
repz
clc
mov
dec
data16
adc
aaa
movsb
jge
stc
adc
nop
in
das
push
mov
std
cmc
daa
inc
fmull
scas
fists
or
scas
xor
rcrl
sti
mov
mov
in
outsl
pop
dec
mov
into
mov
divl
mov
push
pop
or
int3
sbb
insb
in
and
mov
fcoml
cmp
addb
orb
adc
mov
mov
movsb
jp
int
aam
enter
cmc
xor
inc
xchg
insl
lret
test
mov
inc
sub
push
loope
mov
push
mov
mov
in
fwait
mov
sti
jae
fnstcw
or
scas
or
mov
cmp
mov
or
insb
xchg
movb
into
addr16
mov
rcrb
dec
outsl
jne
mov
dec
jecxz
cmp
push
loopne
cld
push
fsubs
ljmp
outsb
xor
out
aaa
cmp
fimull
xor
dec
sub
adc
cmc
adc
xlat
int3
push
loop
clc
add
or
cmp
addl
loope
ss
jg
inc
repz
jno
xchg
jle
fsubp
mov
imul
mov
xor
xor
inc
xlat
bound
pop
cmc
inc
notb
mov
mov
dec
dec
mov
imul
inc
pop
xorl
and
call
std
mov
outsb
xchg
data16
mov
mov
scas
mov
xor
xchg
cld
lret
mov
mov
insl
xchg
lret
jg
in
movl
fstl
mov
jecxz
push
jle
jmp
sbb
sar
mov
mov
mov
sti
xchg
jns
dec
mov
xor
cltd
cmp
ljmp
ds
andnps
addr16
jp
icebp
mov
sbb
lret
pop
xor
mov
das
gs
into
fisubrs
mov
das
or
xadd
test
push
and
jno
push
rcrb
movsb
mov
call
mov
in
or
out
and
out
cmpsl
movsb
fwait
push
insl
std
rcll
stc
popf
sbb
xchg
pop
sbb
xor
in
in
int
push
push
sbb
test
mov
lret
imul
mov
pop
or
pop
test
push
rclb
out
jnp
or
cmpsl
mov
cmp
cmp
xchg
xorl
add
inc
xchg
pop
cmpsb
add
pop
cmp
pop
shll
push
push
in
loope
leave
sub
push
xchg
ds
dec
repz
pop
mov
ljmp
fsubl
aam
pop
insb
dec
ljmp
jnp
stos
mov
push
push
repnz
mov
ja
out
es
and
enter
push
sub
in
mov
jne
mov
pop
out
ja
andb
push
inc
fsubrp
lcall
popa
pop
adc
js
pusha
test
stos
cmp
shl
push
stc
mov
inc
addl
out
fsubs
xchg
loopne
adc
jmp
add
mov
dec
and
mov
and
gs
jno
mov
repz
sub
pop
push
lahf
hlt
insb
test
cltd
pop
movsl
ret
add
popa
jnp
push
mov
enter
clc
xor
xchg
xchg
cmp
mov
push
pop
adc
lret
jl
mov
mov
cmp
fwait
pop
mov
shll
popa
and
cmpsl
loopne
std
jg
in
or
lods
pop
shll
lret
stc
cmp
repnz
mov
mov
jp
sbb
mov
cwtl
cmpsb
cmc
scas
mov
xor
inc
repz
lods
vpperm
mov
dec
sub
shrl
mov
in
jp
adc
mov
cmp
xor
fchs
lea
enter
push
adcl
cmp
movsb
xorb
xor
lods
aaa
fadd
pop
clc
push
movsl
movsl
xchg
push
aas
fimuls
loopne
push
sub
into
push
and
xor
leave
xlat
dec
test
leave
add
movsl
gs
xlat
push
scas
pop
push
dec
cli
and
sahf
inc
fcompl
movsl
lret
enter
pop
mov
nop
dec
dec
lret
and
cld
or
cli
sti
int
pop
shl
lahf
inc
out
mov
aaa
mov
push
push
cmp
mov
mov
jmp
mov
lock
push
lods
sub
cmpsb
test
testl
and
outsl
jo
gs
imul
jg
aad
shll
stc
jo
add
inc
or
add
loop
jge
cmp
fistps
add
sarl
pop
sbb
ja
dec
sarb
or
fidivrl
in
sub
jae
cwtl
mov
add
stos
fidivrs
or
cmp
push
jbe
and
insb
das
movsb
mov
inc
xor
push
xchg
adc
or
mov
aas
in
mov
test
mov
mov
loopne
push
pop
sbb
add
dec
pushf
xchg
imul
sbb
and
lcall
orb
cs
or
or
fs
jbe
xlat
ljmp
cltd
push
int
imul
or
iret
and
adc
into
sbb
add
pop
lcall
test
xchg
lds
lock
test
cmp
push
clc
out
xor
lods
mov
fcomp
shll
mov
push
outsl
push
es
mov
xor
cmp
cmpb
out
popa
sub
jo
pop
and
outsl
lds
mov
xchg
inc
cmp
js
dec
mov
xchg
cwtl
push
mov
xchg
xor
mov
pop
inc
sub
addr16
mov
pop
dec
cmp
or
arpl
ja
mov
call
mov
cmpsl
cs
lret
ret
test
stos
and
mov
jle
int
stos
pop
pop
sti
or
stc
mov
push
test
rcrl
inc
pop
xor
lcall
mov
and
mov
inc
add
cli
iret
icebp
jl
mov
jmp
mov
sub
test
inc
xor
cmp
test
adc
inc
cltd
inc
push
pop
ljmp
dec
push
adc
add
mov
adc
cmpsl
in
insb
lea
out
jnp
mov
add
pop
popf
mov
lea
mov
jbe
pushf
test
insl
test
aas
clc
add
xor
imull
in
mov
imul
gs
xor
shll
loopne
pushf
jae
int3
xchg
iret
mov
mov
sbbb
divl
push
call
jge
idivb
test
push
rcll
or
fwait
je
ljmp
mov
xchg
test
push
imull
mov
xchg
mov
fsubrs
add
xlat
mov
std
fs
jmp
or
aas
in
and
int3
mov
lea
mov
subb
push
pop
les
sub
add
mov
adc
dec
jne
jge
mov
pop
ljmp
lret
cmpsb
xchg
adc
sahf
sti
cmp
mov
mov
mov
enter
imul
jo
ds
pop
call
fnstenv
inc
and
imul
cmp
test
shl
iret
cmpsb
jae
jbe
inc
dec
faddl
lods
sub
push
pop
div
xchg
out
add
lea
stos
fldenv
sarl
mov
sub
fisubs
scas
adc
fsts
test
aas
call
adc
smsw
cs
pushf
xchg
and
int
push
or
mov
nop
mov
mov
pop
mov
daa
cmp
mov
push
fimuls
cmp
add
jo
orl
xchg
push
cmp
dec
fnstsw
fsubr
xor
inc
mov
subl
cmc
add
adc
sub
sub
fisubrl
jg
test
ret
pop
call
xchg
xchg
gs
ds
aad
dec
pop
jl
mov
cwtl
adc
mov
ret
cmpb
push
aad
stc
xor
xchg
aad
pop
push
jl
leave
sti
adc
sti
jno
aam
xchg
sub
bound
cmp
pop
adcl
mov
jbe
test
repz
xor
stos
iret
sub
mov
cli
pop
repnz
jmp
lock
or
call
mov
mov
daa
add
pop
gs
adc
jge
push
outsb
mov
pop
sub
cmp
adc
fsubrs
data16
mov
xchg
pop
push
sub
fstps
repz
nop
lods
fsubrl
int3
mov
arpl
addl
push
cmp
sbb
stc
pop
sbb
test
sahf
mov
jno
sbb
inc
jp,pt
repz
push
inc
das
jmp
ljmp
subl
out
mov
or
insb
push
jge
and
shlb
arpl
cmp
cmp
sahf
rcr
ret
arpl
mov
sub
dec
shrl
or
stc
inc
jb
inc
or
or
leave
push
mov
test
pop
push
xchg
stos
mov
inc
add
inc
xchg
mov
jns
mov
cmp
cmp
cmp
aad
or
push
xchg
dec
ja
jns
sti
or
push
call
jnp
out
es
or
sub
mov
xchg
dec
loop
fnsave
js
out
adc
iret
mov
dec
cmp
ds
mov
sbb
dec
test
jmp
push
fs
aad
and
stos
sub
in
outsl
es
loope
cmpsb
test
shl
inc
jp
mov
sbb
push
adc
popa
movsl
pop
orb
or
cwtl
repnz
xor
pop
pop
out
or
ja
xor
mov
jle
sbb
movsl
out
jno
mov
sbb
sahf
pop
lcall
xor
hlt
mov
arpl
jo
mov
jo
mov
inc
es
ficoms
mov
loopne
cmc
push
mov
jno
loope
or
xchg
testb
jge
xchg
mov
pop
mov
fidivs
mov
mov
inc
pop
and
jnp
adcb
pop
push
idiv
or
or
dec
adc
pushf
mov
iret
andb
adc
sti
int3
mov
fsubrs
repnz
lcall
cli
and
inc
sbb
dec
jnp
js
lahf
jmp
push
mov
shll
aam
or
xchg
mov
or
repnz
iret
imul
fsubs
pop
dec
shlb
jbe
cmpsb
inc
add
iret
dec
imul
in
sub
pop
bound
loopne
add
rcll
loop
inc
sbb
add
dec
jnp
nop
add
xor
cmpb
jae
repnz
sahf
inc
out
ds
pop
enter
aaa
imull
sub
sar
xor
data16
mov
mov
add
negl
js
jbe
test
gs
shlb
pop
aad
push
mov
pop
lcall
add
push
ror
mov
enter
sub
adc
out
outsb
adc
aam
rclb
or
rorb
and
jne
daa
push
lahf
lcall
in
sahf
in
out
xor
xchg
mov
mov
nop
lcall
jle
hlt
or
pushf
mov
cli
imul
repnz
inc
xor
test
or
popf
and
sti
lods
cs
cld
fnsave
mov
icebp
add
jge
insl
add
addb
add
jecxz
fimull
out
push
cmpsl
or
adc
pop
jl
insb
or
int3
cmpsl
pusha
push
lock
or
ficompl
sarb
imul
xchg
mov
imul
sbb
cmpsl
mov
pop
shl
sbb
gs
xor
movsl
sarb
dec
movsl
daa
dec
adc
outsb
add
and
pop
fisubrs
mov
aaa
push
cmp
pop
mov
and
sbb
mov
ret
clc
pushl
call
or
fnstsw
mov
out
data16
add
scas
jbe
stos
int
add
ss
mov
ror
push
xor
div
mov
sbb
cmp
xchg
cwtl
sub
repz
xor
lods
outsl
pushf
shlb
push
enter
mov
mov
icebp
icebp
cmpsl
pop
ds
pop
cmpsb
adc
mov
add
cltd
jmp
stos
xchg
leave
out
ds
dec
xor
cmc
jns
enter
or
in
adc
js
mov
pusha
adc
push
push
cltd
fwait
repnz
imul
push
fidivrs
mov
inc
dec
pop
ret
loopne,pt
mov
adc
inc
inc
or
xor
add
mov
cmc
repz
lret
xchg
xor
xchg
cmc
adc
pop
stos
lahf
mov
or
jae
dec
mov
xor
pushf
and
jne
and
pop
jg
mov
pop
insl
push
loopne
scas
insb
sub
fadd
push
test
xchg
push
pop
test
std
out
inc
push
lods
mov
rol
push
movsb
inc
adc
jns
mov
jo
out
out
icebp
sbb
icebp
in
jg
or
jp
adc
push
xchg
bnd
fiadds
loope,pn
and
subb
jbe
lods
sub
les
jge
pusha
es
mov
xchg
stos
pop
sbb
and
nop/reserved
pop
xchg
popf
xchg
xchg
mov
fwait
xchg
mov
sub
jne
and
sbb
fs
movb
jbe
or
scas
push
push
mov
stos
mov
test
sub
loope
xor
jle
pop
xchg
jg
add
and
shll
pop
les
mov
in
lods
xor
add
xor
or
test
push
jmp
cs
dec
push
sbb
lahf
pop
fmul
clc
test
test
inc
push
rcrb
mov
stos
bound
xchg
sti
cmp
mov
dec
loopne
insb
dec
rclb
clc
xor
filds
clc
jl
pop
ret
add
test
pop
mov
xchg
push
movsb
push
cld
jns
adc
inc
pop
dec
sbb
into
incl
push
sub
std
mov
test
jno
pop
lods
imul
lret
cltd
inc
es
psubq
xor
fcoms
and
cmp
mov
lea
pop
fisttpll
shrl
inc
out
arpl
cmp
dec
je
cwtl
lret
sti
mov
mov
xor
or
repnz
or
mov
mov
mov
testl
fdivrs
push
lret
jne
dec
or
inc
and
dec
je
data16
mov
data16
adc
fsts
dec
stos
sbb
hlt
mov
jge
mov
push
mov
imul
fs
fnclex
push
in
insl
movsb
out
mov
ret
sbb
ss
dec
push
cmpsl
fs
jl
push
sbb
enter
push
sbb
repz
add
hlt
push
repz
and
push
and
or
lret
mov
push
lock
out
adc
ret
sbb
add
sub
in
ficoms
mov
mov
repz
insb
pop
cld
pop
fs
pop
scas
out
xsha256
cmpsb
adc
cmp
lcall
repnz
xchg
mov
sbb
inc
imul
ret
rcrb
ljmp
mov
rclb
inc
outsb
push
sar
rcll
sub
sub
fwait
loopne
gs
arpl
jb
dec
sarb
cmp
vcmpps
sbb
pop
pushf
repnz
ficoml
push
jns
xchg
repz
clc
inc
xor
insl
out
mov
and
push
out
adc
adc
lods
pusha
push
scas
adc
jge
and
std
inc
imul
aas
test
fdivs
std
ret
pop
mov
iret
fimull
ljmp
mov
adc
flds
sub
pop
fs
add
into
fistps
inc
pop
xchg
lret
jb
out
in
scas
dec
xchg
and
mov
mov
fisttpll
outsl
xor
scas
lahf
flds
inc
dec
sbb
ret
dec
gs
dec
data16
fbstp
cltd
nop
pop
sahf
dec
xchg
mov
pop
in
inc
inc
cmp
fcmovnbe
push
cmp
jo
fcomip
push
jae
adc
mov
arpl
mov
push
jg
xchg
sub
popa
in
int
das
mov
aad
ljmp
jo
cmp
notb
adc
roll
sub
dec
cmc
aam
lods
mov
adc
enter
mov
pop
cli
sahf
loope
sub
sbb
pop
push
cli
int
and
fldenv
in
xor
es
xchg
add
pop
icebp
stos
je
pop
popf
mov
xor
stc
loope
and
gs
sarl
or
jg
or
cmp
sub
and
and
pop
addb
dec
or
jae
loopne
or
sub
fs
inc
and
ret
or
fdivl
sti
addr16
mov
inc
and
decl
mov
imul
sbb
shll
outsl
mov
xchg
add
icebp
aaa
mov
pop
stc
push
dec
jle
out
dec
and
or
addr16
xor
outsl
mov
fwait
popa
sub
push
cmp
mov
sbb
mov
dec
es
and
jle
push
xchg
push
mov
inc
icebp
xchg
cltd
mov
mov
sahf
push
imul
ss
jl
loop
movl
or
pop
incl
xor
pop
out
test
mov
push
xchg
test
icebp
ds
icebp
cld
pushf
and
movsb
and
std
aas
inc
test
movsb
push
call
fistpll
roll
shrb
imul
sbb
sbb
jmp
add
inc
jne
jno
xchg
adc
xor
es
sbbl
or
fisubs
stc
mov
sti
sbb
jl
push
cmp
popl
icebp
or
cmc
int
lcall
xor
pop
sbb
sub
es
dec
fwait
mov
enter
pop
test
cmp
and
add
shlb
fs
mov
sarl
sub
push
xchg
mov
sub
push
push
mov
popa
fsubl
pop
clc
iret
adc
out
pop
mov
mov
or
repnz
iret
stc
mov
xor
push
mov
popf
cmpsl
mov
outsl
mov
daa
ljmp
jle
push
pop
push
push
push
outsl
jne
aad
or
jne
inc
pop
insl
push
xchg
jge
scas
fs
sub
push
cld
stc
int3
stos
sub
lret
mov
mov
xchg
cmp
xchg
out
hlt
in
jmp
aam
insb
icebp
sbb
jmp
les
inc
test
aas
aad
inc
xchg
dec
push
vpshufhw
jle
pop
mov
popa
mov
fwait
les
iret
or
outsb
mov
in
fcoms
stos
pop
and
push
push
wbinvd
stc
pop
pushf
xchg
pop
add
add
push
and
or
jo
aas
sub
and
repnz
adc
loopne
mov
dec
push
xor
lods
cmc
lods
push
cld
xlat
lods
fdivl
rcll
jmp
pop
cmpb
xchg
faddl
sub
mov
push
sub
je
or
popa
das
clc
xchg
ret
mov
cmpsb
lea
int
xor
fwait
out
push
adc
and
pop
test
cmc
insl
test
dec
sarb
adc
mov
outsb
mov
loope
ret
mov
rorl
pushf
mov
lret
or
sub
sub
mov
jne
xchg
mov
sub
pop
jns
lahf
push
jb
pop
adcb
shr
fldcw
lsl
and
aam
loope
lea
mov
push
inc
cmpsb
sbb
movsl
cmp
push
stos
xchg
imul
sbb
sbb
xor
jae
or
js
mov
dec
insb
cli
sub
lods
cld
xor
add
jg
xchg
sbb
outsl
imul
out
jb
dec
inc
push
int
adc
and
lock
jnp
dec
repz
sub
stc
adc
pop
dec
fld
mov
sub
xchg
add
pop
jmp
add
imul
stc
lods
sub
pop
push
lcall
fsubs
lock
push
pop
rol
rolb
ret
pop
pop
pop
xor
mov
in
fisubrs
icebp
lods
les
mov
cmp
sbb
negl
mov
adc
imul
in
cltd
jns
lret
orb
adc
adc
hlt
addb
xor
mov
dec
xor
jge
test
sbb
stc
xor
cltd
dec
inc
mov
and
cmp
xchg
mov
int3
repz
shlb
mov
in
jo
sub
jl
mov
popf
push
sbb
fs
ds
outsb
add
jmp
in
mov
dec
dec
das
out
insb
xor
sub
fisubs
int3
sbb
pop
adc
xchg
push
xchg
mov
inc
out
scas
fcoms
insl
and
inc
loop
sti
mov
aad
xor
pop
xor
icebp
mov
lret
popf
mov
sti
dec
incl
into
pop
xchg
inc
xlat
ret
xchg
fisttpl
or
sbb
int3
add
xchg
mov
stos
xchg
dec
jne
pop
jmp
push
xchg
push
adc
lahf
std
jmp
out
mov
push
incb
sbb
ljmp
sbb
jmp
in
xchg
fnsave
cmpsb
bound
cmpsl
inc
in
out
push
dec
mov
mov
je
stc
test
push
flds
dec
or
sbb
or
pusha
push
test
cmp
cmp
nop
in
jne
loop
loope
jge
repnz
cmp
push
addb
loop
xlat
mov
sbb
inc
mov
add
push
mov
movsb
xor
shll
in
push
dec
xor
push
mov
je
mov
lods
mov
cmp
lds
xchg
pop
adc
inc
insl
int3
mov
or
cmc
cmp
in
xchg
cwtl
dec
cwtl
dec
push
jle
pushl
or
cld
aam
movsl
xor
incl
clc
ds
sahf
cmc
mov
pop
leave
jns
cld
insb
inc
fists
xchg
jb
mov
sub
mov
push
dec
dec
mov
jle
decb
mov
stos
push
hlt
dec
subl
xchg
repz
incb
or
mov
inc
push
mov
mov
lods
cmp
fwait
sbb
jno
mov
jbe
push
push
rcrl
sarb
fidivrs
mov
rcl
ljmp
fistpll
or
jns
push
add
jle
xchg
mov
dec
test
push
push
fs
rcrl
jbe
add
and
arpl
mov
jmp
scas
mov
jo
xchg
push
xchg
or
fwait
mov
call
cmp
mov
sub
xchg
xor
push
out
dec
cltd
daa
or
cwtl
xchg
aad
sbb
nop
mov
pop
decb
mov
lds
icebp
sahf
cltd
call
test
dec
inc
std
adc
movsl
add
ljmp
out
inc
stos
pop
add
test
lret
rcrb
dec
sub
adcl
mov
add
insl
pop
stos
mov
mov
pusha
loopne
push
cmpsl
push
pop
lret
pop
pop
jo
mov
fwait
cmp
cmp
es
sbb
nop
push
dec
neg
xor
pop
vminps
push
iret
gs
pop
add
jb
push
cli
pop
or
loop
movsl
bound
mov
inc
popf
popaw
lret
bound
or
adc
sub
pop
adc
movb
lret
push
add
dec
stos
cmp
movsb
frstor
xor
test
mov
mov
mov
ljmp
fsubrs
stos
jne
fnstsw
and
lret
mov
outsl
into
lret
mov
cld
loopne
cs
icebp
ss
aaa
inc
and
mov
fwait
mov
xchg
shr
test
fdivl
xchg
mov
push
mov
out
es
sbb
stos
or
movsb
sbb
pop
es
cmp
push
cmp
fs
pop
inc
pop
or
mov
cmc
xchg
fisttpll
icebp
cmpb
es
outsl
fisttpl
jnp
insl
jnp
mov
mov
push
rdmsr
sub
push
cwtl
fs
das
dec
pushf
imul
fcompl
idivb
pop
mov
pop
push
aad
fcomi
insl
sub
in
inc
mov
loop
in
lea
xor
mov
clc
lods
leave
inc
out
mov
pop
rcr
sbb
call
mov
jbe
push
fs
push
xchg
adc
mov
dec
dec
sub
lret
mov
and
jecxz
dec
mov
insb
leave
test
mov
adc
jge
pop
mov
mov
and
cltd
rcrb
pop
xlat
xchg
mov
pop
cmp
leave
rorl
cmp
shl
jae
xchg
jbe
cmp
out
or
fisubl
movsl
rol
mov
mov
sbb
movsl
xor
adc
pop
fldcw
cmpsl
mov
in
scas
and
pop
mov
sbb
inc
pop
lods
dec
push
enter
fs
insl
mov
lahf
mov
cli
std
hlt
push
dec
mov
je
jae
pop
cmp
push
test
test
cmp
mov
fidivl
jnp
lret
mov
dec
jne
and
scas
inc
les
mov
nop
fmulp
sbb
xor
xchg
fsub
mov
into
xchg
mov
lds
push
lds
push
aad
push
loop
je
leave
out
adc
fwait
call
mov
inc
mov
inc
sbb
mov
xor
add
or
lea
sub
mov
repz
sub
arpl
inc
arpl
in
xchg
or
cmc
push
and
mov
push
int3
dec
lahf
lcall
imul
rdmsr
lret
das
sub
dec
or
leave
aad
xchg
xor
push
jnp
xchg
cwtl
dec
sbb
mov
sbb
cmp
mov
test
xchg
mov
fisubrl
fadd
mov
sbb
aaa
jp
fs
fildll
loopne
mov
movsb
sbb
scas
arpl
xor
ret
xchg
inc
jge
in
and
sub
mov
fmuls
outsl
and
dec
sbb
jg
cmovs
ds
xor
mov
addr16
in
pop
int
pusha
in
out
insb
sub
fsts
addb
fs
jle
mov
loopne
push
fbstp
call
addr16
lods
dec
mov
push
lock
xchg
cli
xlat
jnp
adc
call
inc
ret
test
subl
mov
aaa
mov
shrl
leave
lret
jg
mov
adc
dec
xor
shll
or
repz
mov
mov
test
cmp
cmp
mov
cmp
pop
inc
cmp
and
push
xchg
and
mov
jbe
and
mov
arpl
test
dec
pop
test
aad
and
mov
std
cmp
adc
mov
imul
or
or
mov
xchg
xlat
add
ss
movsb
pop
sbb
test
mov
jecxz
enter
popf
movsl
mov
ljmp
int
sbbb
jg
repz
inc
push
insb
sbb
push
xorl
je
outsl
hlt
lahf
adc
scas
add
fildll
syscall
imul
push
dec
jae
mov
loopne
js
ret
push
insb
push
mov
test
inc
or
lret
jge
lods
test
mov
rcrl
sarb
dec
fcmovb
mov
dec
rorl
int3
mov
mov
shrb
xchg
and
add
pop
adc
out
arpl
inc
mov
xchg
loop,pt
fildl
dec
mov
aaa
out
or
or
sub
or
ljmp
inc
ja
jmp
dec
mov
mov
divb
ja
xchg
int3
aaa
cltd
adc
fisubl
outsl
and
push
pop
dec
es
mov
mov
loope
jmp
aam
aad
fisubrs
add
cs
stos
lret
xchg
addr16
pop
test
adc
mov
out
jae
mov
fdiv
int
cmpb
pushf
xchg
popl
sahf
mov
out
shlb
popa
loopne
in
daa
test
shl
imul
outsb
add
cmp
adc
sub
mov
dec
cmp
dec
fucomi
adc
cli
jmp
imul
push
mov
ja
xchg
jnp
sbb
arpl
cli
adc
hlt
aas
insb
mov
cld
cmpsb
mov
push
data16
add
andl
popf
xor
or
ja
aad
xor
jbe
push
mov
sbb
rcrl
mov
out
lret
mov
inc
adc
sub
movsl
pushf
movsb
mov
mov
jl,pn
insb
dec
loope
icebp
sbb
and
jae
and
es
dec
test
arpl
sub
cmp
mov
pushf
in
pusha
es
mov
pop
lods
inc
cltd
xchg
cmpsl
cmp
sbb
jbe
push
lea
and
push
loope
nop
test
xchg
pop
mov
and
xor
jne
rorb
loop
sarb
xchg
or
inc
insl
dec
xchg
mov
lods
or
lods
movb
mov
mov
push
scas
or
clc
lods
lods
orl
data16
aad
aad
jecxz
sbb
fdivl
aam
xorb
jl
sbb
cmp
xchg
pop
shl
hlt
fadds
insl
mov
shrl
lret
pop
test
fisubl
sub
push
dec
in
test
adc
mov
pop
dec
pusha
push
cs
pusha
cltd
mov
and
push
sub
testb
in
repz
pop
sarl
mov
pop
movl
dec
pop
sarl
pop
mov
pop
mov
add
xchg
mov
cmpsl
jmp
sbb
add
xchg
mov
fsubr
mov
pop
cmp
add
xchg
jnp
push
fwait
add
in
mov
and
out
ret
push
inc
mov
or
sbb
sbb
imul
rcrb
movsl
sbb
lock
lock
inc
xor
pop
les
enter
mov
inc
sub
jg
jmp
mov
les
pop
arpl
sub
jmp
outsb
xchg
add
add
sub
incb
jge
jp
sub
cmc
pop
cs
cmpsl
je
push
inc
push
mov
imul
lret
stos
icebp
mov
jmp
mov
movsb
sti
mov
xlat
pop
test
cld
fwait
mov
jno
xlat
dec
push
mov
mov
jno
xchg
jb
jmp
div
xor
mov
leave
loopne
mov
mov
push
out
pop
add
cmc
icebp
inc
xchg
insb
and
xchg
cmpsb
mov
cmp
push
cmp
mov
clc
sub
and
inc
mov
lods
aad
mov
dec
clc
cld
dec
inc
sub
icebp
and
mov
lods
dec
nop
mov
dec
mov
jbe
xchg
cltd
scas
and
add
lods
jo
call
push
jae
hlt
fisubs
mov
xchg
xlat
hlt
xchg
inc
in
jns
sbb
addb
inc
int
addl
mov
pushf
add
shlb
imul
insl
push
test
stos
sub
hlt
or
outsb
iret
rolb
ret
int
mov
push
xchg
je
xchg
cld
cmp
in
out
or
inc
sbb
fwait
lret
aad
repz
mov
inc
lds
int
jge
lret
into
mov
popa
test
inc
in
push
cmp
fimull
xchg
cmp
sbb
or
mov
inc
jae
loopne
fcmove
or
inc
test
iret
lock
in
out
mov
lret
mov
sbb
xchg
or
daa
jle
xor
push
jnp
outsl
out
push
push
jb
ljmp
mov
inc
and
vmwrite
cld
mov
adc
cli
push
push
lahf
scas
lea
lods
jg
jge
xor
fwait
push
pop
fldl
scas
or
or
sub
ficoms
int
pop
or
jne
imul
mov
sbb
jmp
mov
mov
pop
inc
faddp
sbbb
lods
ret
jae
mov
sbb
pop
jne
pushf
add
adc
punpckhwd
out
sahf
decl
inc
test
scas
and
out
adc
adc
iret
jg
push
xchg
data16
popa
mov
add
and
ret
int3
inc
je
out
fs
loopne
out
scas
and
inc
sub
or
or
xor
xlat
fisubs
mov
jne
mov
xorb
xchg
xchg
sbb
icebp
sbb
andb
call
push
test
stos
and
imul
daa
dec
xchg
fisubrs
daa
movsl
and
inc
lret
mov
dec
fs
pop
lret
xchg
aaa
push
cld
outsb
lret
into
addr16
jmp
andl
dec
out
fistl
aas
sub
jno
cmp
lahf
or
pop
insl
mov
or
jg
mov
push
mov
test
dec
inc
xor
fldl
hlt
mov
shll
gs
inc
ljmp
in
jmp
xchg
xchg
lods
insb
dec
out
imul
aad
mov
bound
adc
ret
sbb
pop
stc
push
cwtl
dec
mov
clc
mov
daa
push
les
adc
or
pop
push
mov
mov
fisubrs
addr16
push
jno
popf
jb
ret
cmpsl
dec
clc
lock
or
daa
sub
fnstsw
and
sbb
adc
sbb
stc
arpl
mov
fnstcw
push
push
in
jb
adc
cwtl
xchg
adcl
cmp
pop
dec
es
cltd
dec
xchg
push
rcr
iret
int3
ds
out
and
aas
pop
int
xchg
out
das
pop
cli
cs
cmpb
cmp
mov
clc
cli
jnp
mov
xor
mov
lret
lods
hlt
pop
mov
mov
std
js
shlb
mov
stos
jle
adc
dec
out
pushf
push
add
out
pop
sbb
xchg
in
aad
sbb
or
movsl
and
sub
adc
xchg
mov
mov
cmp
loope
adc
lahf
pop
imul
test
or
mov
stc
cwtl
xor
lret
or
out
mov
xchg
in
popa
xchg
cmp
scas
xchg
add
xor
pop
fwait
and
or
mov
push
xor
sbb
or
jge
rorl
lods
xor
scas
sbb
adc
mov
xchg
jecxz
mov
js
test
sub
or
push
mov
sbb
xorb
rol
mov
jp
or
jle
aas
and
inc
push
or
outsl
pop
or
jnp
push
sub
pop
xlat
in
cmp
add
mov
pop
lcall
aaa
mov
imul
sti
pop
mov
outsb
mov
test
subb
nop
or
fimuls
pop
mov
mov
sbb
rorl
ljmp
sub
or
and
popa
inc
scas
mov
stos
dec
pop
shrb
mov
scas
adc
adc
adc
and
push
repnz
jl
pop
and
jmp
xor
dec
shl
xchg
mov
push
sub
aam
pop
cmpsb
mov
cmp
out
jecxz
call
insb
sub
aam
sbb
jecxz
fidivrl
xor
jmp
aad
into
and
nop
pop
sahf
cmp
cs
push
dec
arpl
dec
insb
mov
test
mov
cmp
push
imul
xchg
dec
js
mov
lret
push
jmp
mov
adc
xor
push
js
inc
cwtl
pop
lahf
int3
ret
cwtl
inc
out
pop
into
xor
xchg
inc
jae
hlt
dec
cmpsb
inc
jecxz
or
call
xchg
cmp
jmp
cmp
lcall
cwtl
mov
je
mov
ss
mov
mov
mov
inc
movsl
data16
dec
sti
jns
pop
in
sbb
fs
ret
sbb
add
add
mov
add
add
add
add
add
add
add
addb
add
mov
add
add
add
add
add
sbbb
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
adc
add
push
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
add
sbb
add
xor
add
add
add
add
shlb
add
add
cld
jo
add
jo
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
fcomp
add
jmp
add
jne
add
add
add
dec
stos
xchg
aam
xchg
jnp
in
rorl
sub
add
or
dec
loope
push
push
push
push
mov
test
je
push
out
or
outsb
insb
xor
cs
push
mov
cmp
xor
jb
jne
insb
inc
gs
push
add
mov
call
xor
sbb
mov
jl
sar
sbb
adc
ss
clc
cmpl
mov
push
push
jbe
push
or
lea
inc
aad
stc
mov
add
adc
push
push
call
les
pop
pop
je
or
push
addb
rolb
add
pop
pop
pop
pop
ret
push
and
or
orl
jne
jne
inc
adc
mov
ret
mov
roll
inc
and
push
repnz
push
xchg
ds
pusha
push
mov
add
dec
or
push
inc
add
je
mov
push
call
dec
or
rol
or
cmp
outsl
dec
jne,pn
mov
in
mov
inc
push
jl
gs
iret
pop
mov
xor
mov
mov
shll
cmp
jb
push
cmp
sub
repz
andl
dec
jecxz
or
fiadds
fmuls
nop
mov
add
pop
pop
ret
xchg
add
mov
jl
loope
xchg
or
or
imul
jmp
or
jae
push
fbld
push
andb
sarb
incl
cmp
mov
mov
data16
mov
pop
frstor
fwait
xlat
push
sbb
rorb
sarb
ljmp
paddw
inc
std
adc
jge
pop
sub
push
loope
adc
jne
lea
add
push
call
xchg
into
adc
mov
enter
or
shl
rcr
adc
fldt
or
adc
push
orl
sub
out
jbe
cmp
add
decb
adc
shl
sbb
cmp
scas
sbb
pop
pop
mov
pop
mov
push
push
or
insb
das
rcll
or
test
jl
xchg
nop
rclb
adc
push
jbe
and
xchg
pop
dec
add
mov
addl
xchg
fildl
cmp
cmpsb
sbb
sbb
outsl
ret
ds
add
push
mov
fwait
nop
jne
mov
push
mov
and
inc
inc
push
div
jne
xchg
or
sbb
push
push
js
cltd
and
pushf
or
out
sbb
inc
adc
mov
sub
push
lods
lods
or
popf
push
adc
cmp
loope
addr16
jo
sbb
ret
lea
push
mov
add
call
or
out
mov
push
lock
in
adc
pusha
inc
je
ss
cmp
fisttpl
push
cmp
imul
call
push
pop
jmp
ljmp
enter
add
jne
loopne
rep
adc
popw
push
andl
or
mov
andl
addl
call
into
mov
out
sbb
test
adc
push
mov
clc
lea
push
mov
das
add
enter
std
sti
int3
pop
test
inc
mov
and
loop
inc
add
mov
sub
sahf
ret
shr
mov
add
movsl
add
pop
inc
push
or
push
pop
movl
mov
mov
es
into
xchg
mov
sbb
movntq
out
xor
mov
fcoms
jge
cld
nop
or
decl
or
sbb
out
add
clc
jmp
jmp
aam
lea
andb
loope
or
movsb
jnp
movsl
fistps
add
rcll
mov
bsr
lock
cmp
xor
inc
push
fdivl
cmp
je
stos
lock
lds
push
inc
orb
clc
xchg
mov
lcall
inc
enter
dec
lock
jnp
idiv
cmp
jmp
test
in
mov
jae
lock
mov
inc
cmpb
push
mov
sub
push
dec
loopne
or
movb
test
nop
sbb
or
inc
or
dec
clc
add
jl
push
xchg
dec
cwtl
mov
jge
scas
mov
sarb
push
in
sti
clc
cwtl
cwtl
push
jl
dec
xor
add
jecxz
add
stc
dec
lret
add
sub
jge
lea
push
test
cld
xor
sub
push
icebp
or
add
jmp
sar
jno
test
movsb
dec
fdivrs
push
mov
xchg
cs
sub
shl
mov
pop
test
ss
ja
daa
sbbl
stc
inc
lcall
xchg
add
adc
cmp
subb
lock
or
jb
pop
xor
sub
cmc
pop
pop
leave
pop
push
es
test
notb
mov
mov
add
jo
les
rorl
adc
cmc
pop
hlt
fwait
call
xchg
bound
pop
cmp
and
dec
inc
xor
inc
andb
rorl
adc
sbb
cmp
xchg
mov
sbb
inc
push
dec
mov
adc
sub
jae
in
mov
int
push
je
push
cmp
leave
mov
lret
add
pop
push
call
sub
adc
push
lea
add
sub
fimuls
fdivl
add
lea
stos
add
jecxz
xorb
add
jae
test
push
mov
fists
jnp
cli
rep
push
divl
jb
popl
das
outsl
add
or
cmpsb
or
cli
sbb
push
call
mov
stos
and
sahf
enter
mov
sbb
mov
fwait
and
jbe
and
sub
ret
leave
or
xchg
add
jnp
ret
add
push
inc
aaa
push
mov
add
je
mov
sub
inc
jne
addb
jmp
test
push
and
adc
test
sbb
ret
es
jecxz
mov
mov
or
push
test
sbb
xchg
aad
inc
inc
push
add
jnp
push
xor
jle
jne
or
inc
icebp
add
movb
adc
jae
or
daa
mov
push
call
push
add
in
and
inc
or
sub
and
or
pop
pop
pop
pop
and
cld
enter
stos
call
adc
jne
es
add
add
push
call
pusha
and
inc
sar
repnz
sub
std
ret
mov
cld
xchg
add
inc
cmpsl
stos
pop
add
jmp
lods
push
jne
scas
jmp
push
nop
add
push
push
popw
js
mov
add
or
hlt
cltd
or
push
inc
cmp
call
es
leave
dec
cmp
or
sub
xchg
subb
jmp
sub
push
clc
movzwl
test
inc
jne
or
ds
imul
inc
pop
adc
add
cmp
jge
push
inc
movzbl
add
sub
pusha
movl
mov
jne
sub
rorb
mov
adc
mov
into
add
jmp
pop
pop
lods
mov
aad
cmp
xor
jne
psubsw
xchg
pop
push
mov
clc
xor
andl
sbb
sub
das
push
mov
ljmp
les
int
in
andl
popa
xor
jae
jge
dec
or
rcr
mov
stc
add
movsl
sbb
xorb
add
cli
movsb
outsl
rcrl
stos
push
stos
pop
into
pusha
cmp
cmp
shlb
push
adc
adc
pushf
lcall
or
push
push
push
xchg
mov
jno
test
in
push
push
sub
outsb
dec
sub
ss
sbb
add
lret
xor
dec
dec
push
hlt
push
dec
or
fisttps
cwtl
mov
in
and
enter
aas
subl
ss
test
testb
lret
nop
out
sbb
cli
cmp
push
stc
jmp
fidivrl
dec
orl
add
or
ljmp
and
out
pop
fimull
addr16
fcmovbe
inc
or
mov
lcall
cmp
aam
mov
je
add
lcall
into
rolb
or
adc
push
push
push
call
ja
popa
sbb
cmp
daa
and
insl
jae
bound
inc
sbb
xchg
test
mov
pop
movsl
inc
sbb
inc
mov
cli
mov
ficompl
test
xor
dec
arpl
push
push
mov
jge
push
cwtl
pop
lahf
push
adc
rolb
testb
stos
outsb
mov
sub
test
test
dec
adc
push
pop
add
push
ds
push
inc
mov
pop
adc
dec
mov
push
fs
fisubrl
outsl
repz
mov
call
or
rcll
inc
jmp
ss
push
pop
cmp
sahf
sbb
inc
cmp
dec
adc
jl
sbb
mov
mov
pusha
loope
test
mov
mov
mov
test
add
mov
lret
mov
movsl
cmp
mov
or
sbb
inc
and
sar
inc
jo
fninit
orb
arpl
outsl
outsb
and
cmpsb
movl
adc
jecxz
jle
fs
and
scas
insb
scas
mov
mov
clc
outsb
jg
pop
imul
xchg
jecxz
cs
insb
and
xchg
xor
insb
push
jmp
jne
je
sub
mov
insl
inc
jne
xchg
xor
dec
fcoms
inc
outsl
js
mov
popf
xchg
je
adc
push
data16
arpl
jnp
jae
or
inc
adc
popf
dec
xor
imul
test
mov
repnz
jmp
dec
jo
inc
xor
out
insb
sbb
xlat
add
jbe
inc
mov
push
pop
ret
inc
or
aaa
push
xchg
cmpsl
jo
clc
out
sbb
scas
inc
mov
add
pusha
mov
mov
cld
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
adc
add
add
scas
jl
add
jo
add
jo
add
add
adc
jo
add
jo
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
add
add
insb
jle
adc
add
