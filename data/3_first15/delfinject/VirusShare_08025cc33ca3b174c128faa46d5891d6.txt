jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
push
call
testb
je
movzwl
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
cmpl
jne
push
push
call
mov
cmpl
jne
xor
mov
jmp
mov
mov
mov
mov
mov
xor
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
ret
mov
mov
ret
mov
push
push
add
mov
mov
call
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
call
mov
mov
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
mov
add
cmp
jb
cmp
jne
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
mov
mov
sub
jmp
mov
add
mov
mov
mov
mov
add
sub
mov
sub
mov
mov
lea
mov
call
test
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
add
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
movl
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmpl
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
movl
xor
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
cmp
ja
cmp
jae
mov
mov
mov
mov
add
cmp
jbe
mov
push
push
mov
mov
push
call
test
jne
movl
mov
call
mov
mov
mov
cmp
jne
xor
mov
cmpl
je
mov
mov
mov
sub
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
lea
lea
lea
mov
mov
and
mov
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
push
mov
sub
push
mov
push
call
test
jne
xor
mov
jmp
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
lea
lea
lea
mov
mov
add
and
mov
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
mov
sub
push
mov
push
call
test
jne
movl
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
call
cmpl
je
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
mov
cmp
jne
mov
mov
call
cmpl
je
lea
mov
mov
call
cmpl
jne
lea
mov
mov
call
xor
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
lea
mov
add
and
mov
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jle
mov
mov
sub
mov
mov
mov
add
lea
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
mov
cmp
jne
mov
cmp
jg
mov
mov
mov
call
mov
cmpl
je
mov
mov
mov
add
mov
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
add
mov
lea
and
mov
add
and
mov
mov
cmp
jbe
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmpl
je
lea
mov
call
jmp
xor
mov
add
pop
ret
mov
push
mov
push
xor
push
push
pushl
mov
push
call
cmpb
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmpl
je
mov
mov
xor
mov
inc
cmp
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
movb
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
ret
nop
push
mov
add
cmpb
je
xor
push
push
pushl
mov
cmpb
je
push
call
movb
mov
push
call
xor
mov
mov
mov
jmp
push
push
mov
mov
push
call
mov
mov
mov
mov
cmp
jne
mov
call
mov
call
mov
call
mov
mov
cmpl
je
mov
mov
mov
mov
push
call
mov
mov
cmpl
jne
xor
pop
pop
pop
mov
push
cmpb
je
push
call
push
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
add
cmp
jne
mov
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
push
push
mov
mov
mov
jmp
mov
mov
cmp
jb
mov
add
cmp
jb
mov
mov
mov
mov
cmp
jne
movl
xor
mov
mov
pop
pop
ret
mov
push
push
mov
sub
lea
mov
cmp
jl
mov
movl
mov
call
pop
pop
ret
cmp
jl
mov
or
mov
mov
mov
pop
pop
ret
incl
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
andl
ret
push
push
push
mov
sub
mov
mov
and
cmp
je
movl
mov
and
sub
mov
xor
test
je
movl
testb
je
mov
sub
mov
sub
mov
mov
cmp
je
movl
mov
call
add
mov
pop
pop
pop
ret
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
mov
add
add
andl
mov
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
xor
mov
call
mov
cmpl
je
mov
mov
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
mov
mov
sub
add
mov
mov
call
jmp
mov
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
mov
mov
add
mov
add
cmp
jbe
lea
sub
call
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
nop
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
xor
mov
test
jns
add
sar
cmp
jg
mov
mov
mov
cmpl
jne
inc
cmp
jne
mov
pop
ret
lea
push
push
push
push
add
mov
lea
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
mov
call
mov
cmpl
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
je
mov
add
mov
mov
andl
mov
mov
mov
mov
cmp
jne
mov
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
mov
add
push
mov
xor
mov
cmpb
jne
call
test
jne
movl
movl
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
sub
mov
mov
mov
test
jne
movl
jmp
decl
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
movl
jmp
mov
sub
mov
mov
cmp
je
movl
jmp
add
mov
mov
mov
call
and
mov
add
mov
mov
cmp
jne
sub
add
cmpl
jle
call
xor
mov
call
jmp
mov
mov
test
je
and
cmp
jge
movl
jmp
mov
orl
jmp
mov
mov
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jge
movl
jmp
mov
mov
add
mov
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
sub
mov
mov
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
sub
add
cmpl
jge
add
sub
mov
jmp
mov
mov
testb
jne
mov
mov
mov
add
mov
call
cmp
jl
mov
add
mov
or
mov
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
cmp
jg
sub
add
cmpl
jge
mov
add
add
xor
mov
mov
sub
add
mov
mov
and
or
mov
mov
mov
jmp
call
mov
add
mov
mov
testb
jne
mov
mov
mov
mov
cmp
jle
add
mov
sub
jmp
mov
call
sub
cmp
jl
mov
add
mov
call
jmp
add
mov
add
mov
mov
andl
jmp
mov
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
mov
jmp
xor
jmp
mov
sub
add
mov
mov
and
or
mov
mov
mov
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
cmpb
jne
call
test
jne
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
cmpl
je
mov
mov
xchg
call
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
push
mov
test
jle
mov
call
mov
cmpl
jne
mov
call
jmp
xor
mov
mov
pop
pop
ret
lea
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
mov
call
mov
pop
ret
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
sub
fistpll
fwait
pop
pop
ret
mov
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
push
xor
imul
inc
mov
mul
mov
pop
ret
mov
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
test
je
mov
mov
call
ret
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
mov
mov
cmpl
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
xor
mov
mov
xor
push
push
pushl
mov
cmp
jle
mov
mov
mov
inc
mov
cmpl
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
movl
movl
mov
xor
mov
mov
mov
mov
call
movb
call
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
xor
mov
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
push
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
mov
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
mov
mov
mov
rep
jmp
pop
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
push
push
mov
push
call
pop
ret
nop
push
mov
mov
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
xor
mov
inc
jmp
ret
nop
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
test
je
test
je
cmp
je
cmp
je
push
push
call
pop
pop
jmp
push
push
push
mov
mov
push
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
add
call
pop
mov
test
je
decl
call
pop
pop
pop
ret
mov
jmp
mov
jmp
ret
push
push
push
push
push
mov
xor
mov
test
je
cmp
jne
mov
mov
dec
jmp
xor
mov
test
je
add
cmp
jne
xor
dec
jne
test
je
mov
mov
mov
call
mov
pushl
add
dec
jmp
call
push
mov
mov
mov
test
je
mov
add
call
dec
jne
pop
pop
test
jne
test
je
decl
call
pop
pop
pop
pop
pop
lea
jmp
ret
mov
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
test
je
push
push
call
test
je
ret
lea
xchg
test
je
push
call
ret
lea
mov
test
je
movl
push
push
call
pop
ret
lea
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jle
lea
mov
mov
call
jmp
mov
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
mov
test
je
push
push
push
call
test
je
pop
pushl
mov
call
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
test
je
ret
nop
add
mov
ret
mov
test
je
mov
shr
ret
mov
push
push
push
mov
mov
xor
mov
test
jle
mov
call
mov
mov
call
test
jle
cmp
jge
mov
mov
add
mov
mov
call
mov
mov
call
pop
pop
pop
ret
nop
mov
jmp
ret
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
add
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
mov
cmpl
je
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
cmpl
jne
ret
jmp
jmp
pop
pop
pop
ret
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmpl
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
movl
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
mov
push
push
call
mov
mov
pop
pop
ret
lea
mov
ret
mov
push
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
mov
cmpl
jne
mov
call
jmp
mov
push
mov
push
call
pop
pop
ret
mov
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
push
mov
add
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
lea
xor
mov
call
mov
push
lea
push
mov
call
push
call
mov
mov
call
test
jbe
mov
lea
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
test
je
sub
mov
ret
mov
push
mov
add
push
push
push
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
cmp
jbe
lea
call
mov
mov
mov
mov
call
mov
cmpl
jbe
mov
jmp
mov
lea
push
sub
push
lea
call
add
push
mov
mov
push
mov
call
push
push
call
mov
mov
call
jmp
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
pop
ret
push
push
push
mov
push
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
cmpl
je
push
call
mov
pop
pop
pop
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
xor
lea
call
mov
call
test
jle
mov
mov
mov
movzbl
cltd
idiv
xor
inc
decl
jne
cmp
jle
sar
jns
adc
mov
fildl
call
mov
cmp
jg
mov
call
test
jle
mov
mov
mov
call
push
mov
pop
mov
cltd
idiv
mov
incl
mov
call
xor
mov
mov
movzbl
mov
cltd
idiv
mov
incl
mov
cltd
idivl
mov
xor
mov
mov
mov
and
jns
dec
or
inc
xor
mov
mov
movzbl
add
shr
xor
xor
mov
mov
and
jns
dec
or
inc
test
jne
lea
mov
call
mov
lea
call
jmp
lea
xor
mov
push
mov
pop
sub
call
mov
lea
call
inc
decl
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
lea
mov
rep
mov
xor
push
push
pushl
mov
xor
jmp
lea
mov
call
mov
lea
call
inc
mov
test
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
mov
push
add
mov
push
call
call
add
jmp
push
push
push
push
lea
push
call
test
je
push
call
cmpl
jne
mov
push
call
jmp
push
call
push
call
push
call
call
xor
push
push
mov
cltd
cmp
jne
cmp
pop
pop
ja
jmp
pop
pop
jg
add
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
add
mov
ret
lea
push
push
mov
mov
call
ret
push
movzwl
add
mov
mov
pop
ret
mov
shr
mov
ret
nop
push
mov
add
push
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
movl
xor
mov
mov
lea
mov
mov
call
lea
mov
mov
call
movl
movw
lea
push
lea
push
push
push
push
push
push
push
mov
mov
call
push
mov
call
push
mov
mov
call
test
je
movb
xor
push
push
pushl
mov
movl
lea
push
mov
push
mov
mov
call
test
je
lea
push
push
lea
push
mov
xor
push
push
mov
cltd
add
adc
add
push
mov
push
mov
mov
call
test
je
mov
mov
call
cmp
jl
test
je
mov
add
mov
push
push
mov
mov
push
mov
mov
push
mov
push
mov
mov
call
mov
cmpl
je
lea
push
mov
mov
push
push
mov
push
mov
push
mov
mov
call
test
je
mov
mov
mov
add
call
mov
mov
mov
movzwl
sub
sub
jb
inc
mov
lea
push
lea
mov
mov
push
mov
mov
add
push
mov
mov
add
push
mov
push
mov
mov
call
test
je
lea
push
mov
mov
call
push
mov
mov
push
mov
mov
add
push
mov
push
mov
mov
call
inc
decl
jne
lea
push
push
lea
push
mov
xor
push
push
mov
cltd
add
adc
add
push
mov
push
mov
mov
call
test
je
mov
mov
mov
call
mov
lea
push
mov
push
mov
mov
call
cmp
sbb
inc
mov
xor
pop
pop
pop
mov
push
cmpb
jne
mov
push
mov
push
mov
mov
call
jmp
mov
push
mov
mov
call
mov
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
nop
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
push
push
add
mov
movl
xor
xor
mov
push
push
call
lea
push
push
push
push
call
push
lea
push
call
lea
push
movzwl
push
lea
push
mov
push
call
mov
mov
lea
push
call
push
call
mov
add
pop
pop
pop
ret
push
mov
push
push
mov
mov
call
xor
push
push
pushl
mov
mov
call
push
mov
mov
call
test
jne
cmp
jne
xor
jmp
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
ret
mov
push
push
push
mov
xor
mov
xor
cmp
setl
mov
jge
neg
mov
div
add
push
inc
cmp
jne
dec
jne
push
inc
mov
inc
pop
mov
inc
dec
jne
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
cmp
jne
mov
mov
call
inc
cmp
jne
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
ret
add
incl
add
add
add
push
mov
xor
push
push
pushl
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
or
add
mov
add
cmp
add
cmp
push
cmp
inc
add
cmp
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
add
add
inc
add
in
mov
push
push
dec
jne
push
push
push
push
mov
call
mov
xor
push
push
pushl
mov
xor
mov
movl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
call
lea
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
push
lea
mov
mov
call
mov
call
mov
lea
call
mov
call
pop
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
mov
push
mov
mov
call
push
mov
mov
call
mov
push
mov
mov
call
jmp
xor
call
push
push
push
mov
mov
call
test
jne
jmp
xor
call
push
lea
mov
mov
call
mov
call
push
push
mov
mov
call
test
jne
mov
call
mov
mov
call
mov
mov
mov
mov
call
cmpb
je
push
push
lea
mov
call
mov
call
push
push
call
mov
mov
mov
call
lea
mov
call
mov
mov
call
push
push
push
mov
mov
call
mov
cmp
jg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
call
lea
mov
call
lea
lea
call
mov
lea
mov
call
mov
call
mov
mov
call
mov
cmpl
je
mov
mov
call
mov
call
mov
lea
push
mov
call
mov
mov
pop
call
lea
mov
call
lea
lea
call
mov
lea
mov
call
mov
call
mov
mov
call
mov
mov
mov
mov
call
lea
mov
call
mov
mov
call
lea
mov
call
lea
lea
call
mov
lea
mov
call
mov
call
mov
mov
call
mov
mov
mov
mov
call
lea
mov
call
mov
mov
call
lea
mov
call
lea
lea
call
mov
lea
mov
call
mov
call
mov
mov
call
mov
mov
mov
mov
call
lea
mov
call
mov
mov
call
lea
mov
call
lea
lea
call
mov
lea
mov
call
mov
call
mov
mov
call
mov
mov
mov
mov
call
lea
mov
call
mov
mov
call
mov
call
mov
lea
call
mov
lea
call
mov
mov
call
mov
mov
call
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pushl
pushl
pushl
pushl
lea
mov
call
mov
call
test
je
movb
cmpb
jne
mov
push
push
push
push
push
push
pushl
pushl
pushl
pushl
lea
mov
call
mov
call
push
mov
mov
call
mov
mov
call
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
call
jne
lea
mov
call
mov
mov
call
mov
mov
call
jne
lea
mov
call
mov
push
mov
call
mov
lea
call
mov
mov
pop
call
mov
mov
call
jne
lea
mov
call
mov
mov
call
mov
mov
call
jne
mov
mov
call
mov
mov
call
je
mov
call
mov
lea
call
mov
lea
mov
call
mov
mov
call
mov
mov
call
je
mov
push
lea
push
call
mov
mov
call
pushl
pushl
mov
call
add
lea
call
lea
lea
call
pushl
pushl
mov
mov
call
mov
call
mov
mov
call
call
mov
mov
call
mov
lea
push
mov
call
mov
mov
pop
call
mov
push
push
push
push
push
push
mov
call
push
mov
mov
call
mov
push
push
push
mov
push
push
mov
mov
call
push
mov
mov
call
xor
push
push
pushl
mov
push
push
push
mov
call
push
mov
call
push
push
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
jmp
call
mov
mov
call
jne
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
call
je
mov
call
mov
lea
call
mov
lea
mov
call
mov
mov
call
mov
mov
call
je
mov
push
lea
push
call
mov
mov
call
mov
call
call
mov
mov
call
mov
lea
push
mov
call
mov
mov
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
mov
mov
call
mov
mov
call
mov
call
inc
cmp
jne
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
lea
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
call
add
decl
add
add
jns
arpl
xor
xor
decl
add
add
arpl
popa
push
add
decl
add
add
ja
push
xor
add
decl
add
add
popa
jns
je
xor
add
decl
add
add
imul
xor
decl
add
add
ja
insl
gs
cmp
add
decl
add
add
imul
add
decl
add
add
jns
push
aaa
add
decl
add
add
arpl
popa
insb
imul
add
jns
jae
addr16
aaa
xor
add
decl
add
add
push
jb
jns
xor
xor
decl
add
add
arpl
popa
jbe
xor
xor
decl
add
add
fs
jns
jb
cmp
add
decl
add
inc
jbe
sub
cmp
dec
sub
add
add
decl
add
add
jb
jns
jp
dec
mov
decl
add
scas
dec
cltd
dec
xchg
or
jns
inc
add
add
decl
add
add
xor
decl
add
add
cs
pop
mov
movsl
add
decl
add
movsl
dec
popf
inc
xchg
je
or
jns
inc
add
add
call
add
sahf
pop
mov
addr16
mov
mov
bound
add
decl
inc
test
js
push
mov
add
add
decl
add
mov
inc
mov
mov
dec
add
add
decl
add
mov
dec
mov
mov
dec
add
add
decl
add
sbbb
mov
mov
dec
add
add
decl
add
add
jnp
pop
mov
inc
add
decl
add
add
jo
pop
mov
inc
movsl
add
call
add
add
jno
jo
pusha
mov
cmpsb
pop
lahf
push
orb
call
add
add
imul
stos
pop
mov
inc
mov
decl
add
add
je
dec
mov
mov
decl
add
add
jl
jns
jb
dec
lea
call
add
add
jl
popa
stos
jnp
inc
cmpsl
pop
scas
dec
add
add
call
add
add
dec
mov
push
mov
pop
xorl
call
add
add
outsl
cmpsl
push
mov
inc
test
add
add
call
add
add
outsl
lods
push
mov
dec
xchg
inc
add
add
call
add
add
outsl
lods
push
mov
dec
xchg
inc
add
add
decl
add
add
js
dec
mov
add
decl
add
xchg
dec
cwtl
push
mov
push
mov
add
add
call
add
add
jae
inc
mov
dec
cwtl
inc
add
add
decl
add
add
js
push
mov
decl
add
add
pop
mov
add
decl
add
add
push
test
add
decl
add
add
outsl
cmpsl
pop
mov
mov
call
add
add
jns
pop
mov
mov
dec
add
decl
inc
mov
pop
mov
mov
mov
add
decl
add
add
js
jb
mov
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
outsl
scas
add
incl
add
add
incl
add
add
incl
add
ljmp
add
decl
add
add
jo
push
mov
incl
add
nop
outsl
cmpsb
jno
add
add
decl
add
add
jo
or
add
add
incl
add
mov
dec
add
add
incl
add
ljmp
add
incl
add
add
incl
add
add
incl
add
add
insb
mov
incl
add
add
jbe
add
decl
add
add
jl
pop
add
add
decl
add
add
arpl
jae
data16
add
outsw
add
add
add
add
add
add
add
xor
add
pusha
add
orb
add
rolb
add
inc
add
addb
add
add
add
add
add
push
add
add
add
addb
add
rolb
adcb
add
adc
add
cmp
add
add
add
add
add
add
add
add
add
mov
add
loopne
add
add
add
in
add
add
add
add
add
add
add
mov
add
loopne
add
add
add
in
add
add
add
add
add
add
add
fadds
add
loopne
add
add
add
in
add
add
add
add
add
add
add
add
add
loopne
add
add
add
in
add
add
add
add
add
add
add
sub
add
loopne
add
pop
jno
add
add
add
add
add
add
add
add
push
add
add
push
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
call
add
add
add
add
add
add
pop
add
sub
add
add
add
add
add
cmpsb
add
xor
add
sbb
add
add
add
add
add
add
add
add
add
or
add
or
add
adc
add
in
add
add
add
add
add
add
add
xor
add
sbb
add
js
add
in
add
add
add
int3
add
sbbb
addb
add
add
add
jo
add
xchg
pusha
add
and
add
add
inc
add
add
add
xor
add
push
add
add
add
xor
add
push
add
push
add
add
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
cmp
push
add
dec
add
push
add
add
jo
dec
push
add
pusha
and
outsb
push
cmp
push
jae
data16
add
add
sub
cmp
push
cmp
add
add
aam
in
adc
lret
jp
mov
adc
daa
aam
cli
adc
hlt
xor
enter
icebp
es
clc
or
cmp
aaa
les
cmc
adc
clc
mov
sti
xchg
lret
ss
testb
popf
or
inc
xchg
dec
lods
add
pop
test
std
inc
lock
cmp
sarb
cwtl
add
sbb
cmp
je
jns
ja
cmpsl
sbb
adc
roll
out
xchg
inc
push
push
arpl
loope
inc
data16
das
in
pop
das
fistpll
loope
les
jmp
sub
test
cmp
mov
xchg
xchg
arpl
pop
aam
lret
sub
xchg
xchg
aas
hlt
inc
ret
xor
pop
shll
fisubl
mov
out
lcall
outsl
nop
add
lret
enter
xchg
in
mov
pop
sub
jbe
outsb
test
jns
dec
cmp
fwait
insb
shr
inc
fidivrl
xor
cmpsl
pop
sti
rclb
xchg
xchg
fidivl
jp
inc
pop
cmpsl
movsl
mov
cmp
xor
adc
insl
aad
movsl
imul
and
xor
xor
add
xor
inc
shll
mov
loope
pushf
cmpsb
incb
xchg
inc
mov
pop
cmpsb
jo
jbe
inc
test
mov
imul
fucomp
lods
push
daa
jnp
jne
repz
add
pop
cwtl
pop
mov
hlt
adc
mov
sub
repz
fstp
cmp
xlat
cmpsb
and
negl
fcmovbe
out
inc
xchg
divb
or
add
leave
repnz
aas
aam
sysret
imul
lock
cltd
lods
cmp
scas
imul
jg
cli
cmp
fidivs
lret
or
cs
push
clc
and
sub
mov
jl
xorb
push
push
rolb
mov
pop
ja
popf
xor
adc
int3
jo
dec
mov
jle
and
dec
shll
leave
xchg
xor
sub
pop
iret
clc
xchg
repz
add
int
jo
xor
dec
adc
sub
daa
inc
rorl
jecxz
call
outsb
and
jnp
sbbl
xchg
jne
scas
push
stc
enter
out
dec
js
dec
mov
popf
cmp
jecxz
or
jnp
pop
mov
mov
cwtl
imul
inc
adc
and
jns
das
rclb
dec
pavgb
aad
jne
or
xchg
jno
inc
mov
imul
lahf
mov
sub
cltd
xchg
push
or
ret
arpl
int3
popa
mov
shlb
enter
aas
adc
mov
call
cmp
xchg
inc
loope
out
dec
fwait
xchg
and
xor
or
xor
mov
clc
dec
insl
lea
dec
call
ret
and
mov
dec
mov
inc
mov
adc
cld
data16
sti
je
stos
jb,pt
out
gs
sbb
or
fmuls
jmp
jmpw
gs
icebp
dec
popa
or
stos
ficompl
push
jg
push
xor
mov
mov
not
popa
add
fs
outsl
add
test
add
les
shrb
inc
lock
rcrl
aaa
loopne
lret
gs
jnp
aam
ljmp
das
shll
cli
das
loopne
fidivs
xchg
mov
mov
cmp
adc
aad
cmpsl
arpl
cmp
push
dec
imul
xchg
xchg
sub
and
fwait
jmp
pop
clc
xchg
xchg
lock
mov
insb
lret
cmpsb
aam
pop
pop
mov
mov
xor
insl
xorb
mov
mov
adcl
inc
cmp
hlt
lcall
cmc
push
adc
scas
mov
sub
push
push
mov
adc
adc
adc
sbb
lods
dec
call
pop
in
xchg
lea
subl
push
dec
ja
lods
popf
test
mov
add
xchg
sahf
decb
lods
jo
outsb
xchg
stc
aam
xor
mov
xor
pop
and
daa
shrl
int3
sub
mov
xchg
xor
sbb
ljmp
add
popf
xor
mov
sbb
popf
inc
insl
in
in
jnp
aas
add
add
es
fidivl
mov
push
jp
mov
xlat
aaa
repz
in
fistpll
sub
stos
neg
sbb
int3
js
inc
shl
cltd
popa
adc
jmp
icebp
cmp
clc
ret
outsl
fldcw
clc
and
sbb
sub
xor
or
jne
add
cmp
mov
cmpsl
bound
gs
fldt
fsub
aad
mov
push
mov
outsb
mov
rorl
in
shrl
xchg
mov
adcb
pop
cmp
ja
mov
push
nop
lock
inc
and
fs
xchg
push
or
dec
dec
mov
sbb
addr16
stos
movsl
rorl
pop
out
adc
jnp
inc
sub
shlb
rcll
ret
ds
in
in
mov
and
push
mov
xlat
add
push
push
in
leave
in
rcr
pop
lret
movntq
fisubrl
mov
add
add
or
cli
push
sub
rcll
sbb
pop
cmc
xor
jle
aaa
cwtl
sbb
fwait
push
ds
es
loope
dec
psubd
push
in
cli
push
cmp
mov
mov
jae
jne
adc
pushf
mulb
cmc
repz
sub
test
stc
adc
popl
je
insl
mov
pop
mov
push
jmp
in
stos
cmp
outsb
mov
arpl
mov
andb
stos
pop
inc
cltd
push
cltd
mov
stos
stos
test
adc
cmpsl
popf
inc
mov
gs
mov
jle
icebp
ret
sti
fwait
push
cmpsl
sbb
daa
iret
lret
add
add
and
int3
mov
sub
sub
pop
out
rcrl
mov
mov
xor
xchg
lea
js
adc
mov
jle
dec
stos
add
xchg
shrb
ffree
icebp
mov
jo
mov
inc
pop
lea
notl
pusha
fistpl
daa
repz
loope
and
aad
ret
dec
sbb
push
sbb
loope
rcll
jg
sub
sahf
pop
mov
dec
mov
jge
daa
jb
outsb
loope
sbb
xchg
mov
add
jbe
adc
in
adc
inc
test
dec
pop
scas
sahf
sub
mov
sbb
pop
ja
arpl
clc
xor
or
cltd
std
stos
js
jmp
lret
scas
xor
push
dec
add
ds
jno
mov
or
xchg
mov
or
mov
xor
lret
sub
arpl
adc
sbb
and
jp
cmp
xchg
add
xor
loop
or
inc
lret
movsl
cmpsb
and
daa
sub
xchg
or
sbb
mov
jns
push
mov
fwait
popa
xchg
imul
push
fiaddl
mov
inc
mov
ret
xlat
mov
popf
cmp
push
imull
or
push
push
inc
push
sub
add
stos
lock
or
loop
aas
pop
inc
outsb
sub
jae
addr16
and
or
repz
aaa
rorb
mov
das
mov
pop
push
push
shrb
mov
push
es
jae
int
inc
lods
dec
sbb
pop
fdivrl
dec
jle
mov
push
or
mov
andb
cmpsl
and
mov
jl
add
mov
lret
adc
push
add
lret
loop
xlat
xlat
ja
rorl
cmp
push
or
sub
fists
insl
mov
sbb
insl
popf
pop
push
xor
lret
mov
sub
int3
jbe
sbb
add
pop
repz
in
dec
xchg
push
lret
flds
mov
or
pop
sbb
and
lahf
arpl
mov
mov
sbb
mov
cmp
outsb
xlat
pop
mov
mov
ss
sub
push
mull
hlt
out
jge
push
jmp
ljmp
insb
dec
loope
jae
movb
movsl
inc
push
fisubrs
inc
jp
ss
and
mov
sarb
out
xlat
mov
add
sahf
lret
imul
mov
in
out
insl
rcl
adc
pop
loop
les
je
fisubl
leave
push
sarl
add
enter
add
and
inc
loop
hlt
movsl
ud2
push
clc
rcrl
dec
int3
inc
xchg
sahf
mov
inc
dec
push
outsl
adc
jne
push
push
mov
adc
lret
sbb
or
pop
pop
ja
imul
shl
push
push
cmp
sbb
sbb
inc
aam
addr16
inc
js
jbe
es
add
bound
sub
or
outsl
dec
push
repz
mov
inc
sbbl
int3
fdivr
jbe
outsl
shrb
ds
das
dec
lods
jge
lock
pop
test
stos
jl
lcall
out
jns
repz
push
pop
shll
iret
nop
test
insb
mov
aam
lods
das
stos
pop
jle
shll
mov
jle
je
jae
xor
out
je
cli
jmp
and
adc
mov
sbb
das
call
push
pushf
sbbl
cli
testb
adc
or
and
fnstcw
xchg
sbb
iret
mov
mov
pop
push
lret
movsl
xlat
and
inc
mov
sbb
xlat
scas
lods
add
aam
aam
jg
add
cmp
cwtl
movsb
sub
inc
js
adc
mov
ficoml
sub
xor
add
lods
jp
notb
xor
mov
pop
xor
nop
int
adc
mov
add
jmp
mov
mov
and
sbb
rol
xchg
inc
xlat
rclb
sti
jo
or
xor
add
insb
sbb
pop
bound
jmp
ljmp
inc
arpl
cli
imul
mov
push
xchg
xchg
mov
jg
push
imul
icebp
shrb
and
jle
out
inc
mov
call
push
push
loope
dec
enter
sbb
shll
add
add
inc
in
jb
adc
push
cmc
xchg
lcall
cld
test
ret
xor
xor
lret
xchg
dec
xchg
xchg
mov
hlt
cld
mov
cmp
shl
cmp
adc
aam
pop
sbb
inc
jbe
sti
mov
jbe
rcrb
in
scas
ja
fldenv
out
ret
cmp
or
clc
cmp
xor
inc
maskmovq
mull
insl
xchg
push
movsb
pop
xor
lea
inc
push
loopne
pop
jl
jg
imul
mov
jnp
sub
mov
movsb
lahf
mov
or
imul
test
add
movsb
sti
testb
gs
int
in
push
or
cmc
jmp
sub
xchg
lret
movsl
mov
gs
es
or
sub
ljmp
repnz
inc
inc
arpl
mov
out
adc
push
imul
sbb
pop
mov
loope
loop
inc
jnp
fsubr
sarb
dec
fdiv
mov
hlt
daa
mov
or
loopne
mov
loop
ss
lods
lds
adc
sub
leave
cmc
js
scas
int3
adcb
jge
xchg
push
add
cmp
fwait
out
das
es
mov
cmc
push
mov
xor
clc
aaa
jl
fnstsw
add
hlt
adc
xchg
lcall
mov
popf
pop
add
pop
insl
adc
pushf
jbe
outsb
jg
mov
mov
lea
cli
in
repnz
arpl
dec
adc
repz
dec
adc
out
xchg
and
lods
cmp
push
cmp
sub
cld
xchg
fs
rcrl
fdivl
xchg
cmp
fcoms
mov
aas
lcall
lret
ja
adc
fnstsw
imulb
ret
jae
and
hlt
aad
lock
scas
cs
das
sbb
mulb
fnstcw
fidivs
out
adc
es
add
sahf
mov
adc
pop
out
fs
dec
mov
add
mov
pop
mov
push
fsub
roll
mov
pop
mov
jmp
bound
movsb
push
inc
out
cmp
add
inc
mov
dec
sub
dec
movsl
shrb
pop
aad
dec
mov
loopne
notb
popa
pushf
pop
mov
stos
imul
rcll
sub
mov
jge
jmp
cmp
lds
cld
push
mov
movsl
cmpsb
sub
xor
lock
test
shll
cmp
or
push
rorb
idivl
jl
les
fs
imulb
ret
and
pushf
imul
mov
mov
shrb
dec
out
xorb
retw
sub
out
int
js
xchg
xchg
mov
dec
outsb
add
xor
adc
lods
stc
cs
sahf
arpl
js
jmp
gs
aam
inc
mov
loop
adc
dec
pop
mov
mov
insl
loop
int3
xor
je
sub
jo
test
inc
push
pop
fisttps
lea
xchg
in
insb
stos
insb
xchg
imul
pop
pop
popf
je
xor
imul
popf
add
test
mov
icebp
dec
or
pop
or
cmp
je
cmp
push
push
insb
jmp
add
inc
in
cmp
cld
movsl
push
lahf
and
lcall
fists
in
fldt
fs
jl
fstpl
test
xor
mov
or
lret
sub
test
fstpl
sti
stos
or
xor
movsl
fucom
add
movb
lods
xor
pop
mov
loopne
sub
pop
insl
fsubrs
mov
bnd
fistps
mov
cld
jno
mov
pop
mov
ljmp
stos
shl
mov
in
dec
or
jo
in
mov
jno
dec
xchg
jp
dec
out
or
scas
or
push
ret
pop
cmp
cmp
fwait
jne
inc
mov
mov
pop
jae
outsl
outsl
cmpsl
mov
fisttps
xor
inc
xchg
aam
xchg
shr
inc
lods
mov
fs
rcl
cmp
sub
sbb
stos
mov
jg
and
lods
dec
adc
push
hlt
adc
test
add
loope
mov
inc
cmp
xchg
cltd
icebp
xor
add
les
add
in
cltd
popw
push
vmovntps
clc
sbb
cld
lock
les
mov
call
adc
and
fcoms
out
lahf
gs
and
fwait
rorb
data16
push
xchg
mov
adc
iret
dec
sub
lcall
pusha
xchg
push
or
mov
push
pop
cltd
shrb
testl
add
adc
hlt
xor
sub
popa
and
mov
xchg
inc
subb
sbb
jle
movsb
mov
and
fmull
dec
lods
pop
mov
stc
push
sbb
mov
outsb
js
push
push
shll
inc
pop
mov
ljmp
xchg
pushf
cmp
repz
xlat
xchg
xchg
add
repz
cmp
scas
sbb
outsb
scas
insb
xchg
and
ror
mov
incb
lds
cli
sub
xor
cli
mov
lds
xor
xor
outsl
xor
sbbl
xchg
flds
inc
cli
stos
fwait
rcl
push
stc
and
repz
and
mov
jle
jmp
mov
fisubrl
hlt
bound
push
daa
sub
insb
test
movsl
js
lret
sub
and
or
dec
lret
dec
mov
cmp
mov
sub
leave
push
lahf
jp
mov
xorb
cmp
and
jbe
pop
sub
nop
pop
mov
dec
mov
mov
mov
mov
sub
bound
sbb
out
push
iret
lock
or
movsl
mov
outsb
loope
cwtl
or
lods
mov
add
pop
sbb
aam
fsts
adc
xor
push
ficomps
ja
lock
sbb
icebp
jae
fstps
das
fldl
ret
paddw
cwtl
mov
popa
movsb
cs
or
dec
sbb
out
cmc
cmp
repnz
idivl
lea
push
push
gs
rorb
je
inc
mov
pop
pop
adc
add
push
xor
outsl
mov
sub
jp
pop
scas
pop
decb
stos
mov
cwtl
mov
xchg
cmp
lret
cld
push
shll
push
push
mov
jg
add
push
push
rcr
ljmp
daa
or
jge
lret
dec
fldcw
cmp
mov
in
xor
out
fidivs
sub
fs
xchg
and
bound
lcall
jg
fcompl
inc
std
xchg
add
sbb
xchg
push
out
sbb
sbb
sbb
push
mov
insb
sub
cmp
xlat
mov
dec
out
outsb
and
sbbl
repz
mov
enter
outsb
cmp
jns
test
fisttpl
push
inc
gs
out
mov
xorb
push
pop
and
dec
fs
shl
mov
lods
push
insl
sub
aaa
sbb
and
int3
jmp
mov
or
inc
and
mov
sub
inc
sar
nop
pop
sbb
ss
lods
gs
pop
and
pop
sbb
add
mov
push
xchg
inc
add
jl
ja
jle
pop
mov
stos
mov
mov
aaa
push
jp
xchg
mov
scas
lahf
mov
mov
aam
push
and
mov
or
aas
push
push
push
scas
pop
outsb
ficomps
mov
movsb
or
cmp
xor
mov
in
cmpsb
rcr
mov
enter
lods
jmp
dec
inc
pop
repnz
movsbl
pop
cmp
cltd
lret
xor
mulb
pop
mov
xlat
adcl
push
mov
test
int3
cmp
xchg
xchg
mov
push
mov
test
into
push
push
stc
dec
cmp
and
push
sti
dec
aas
inc
cmc
imul
sahf
ss
mov
adc
sbb
enter
and
addl
imul
push
fcompl
mov
pop
js
iret
mov
pop
adc
xchg
adc
aaa
loope
dec
cmp
mov
xor
xchg
lock
jle
arpl
dec
sti
test
mov
pop
push
add
dec
mov
adc
pusha
sub
pop
inc
mov
mov
xor
push
xor
xor
dec
sub
ds
or
push
test
jae
div
pop
aas
into
fs
sub
cwtl
inc
test
cmpsl
mov
or
out
mov
xchg
shlb
sti
sbb
scas
xchg
in
sti
jnp
xor
push
xchg
shll
sbb
or
lahf
sub
push
outsl
cmp
cli
inc
cltd
inc
mov
aad
push
mov
or
push
test
mov
stc
push
jae
jne
cld
inc
push
mov
inc
mov
sbbl
sub
xor
mov
nop
cwtl
lss
push
mov
push
push
jmp
jg
repz
mov
enter
imul
mov
pop
mov
loope
loope
sub
mov
nop
cld
jge
push
xchg
sub
mov
or
outsb
out
xchg
inc
and
mov
cmp
add
mov
fidivs
cli
mov
imul
repz
stc
pop
mov
scas
gs
cmpsl
adc
lock
in
inc
xchg
loope
adc
mov
cli
push
push
push
pop
mov
call
in
bound
int3
push
fildll
leave
addl
xchg
dec
adc
and
cs
ficoms
pop
lret
scas
jnp
mov
iret
in
imul
inc
cmpb
add
call
xchg
or
ds
fiadds
mov
cwtl
shrb
fcmovnbe
pop
arpl
je
mov
mov
scas
and
lcall
jp
mov
lods
dec
outsl
cli
push
dec
cs
fsubs
pusha
pushf
verw
das
inc
es
test
pop
cmp
out
imulb
xchg
push
mov
inc
lock
daa
mov
push
les
in
push
push
faddl
out
xor
shl
and
cs
ret
sti
sbb
hlt
sub
jne
pop
mov
adc
sub
sbb
push
outsl
xor
stc
jp
addr16
insl
fdivs
jmp
and
cmpsb
aad
loopne
rolb
ret
stc
lods
iret
xor
or
test
adc
lods
or
push
enter
push
jecxz,pt
andb
inc
mov
pop
cltd
adc
cmpl
js
xchg
jns
add
xor
sahf
jp
in
rorb
ficoms
cltd
je
sbb
in
sbbb
les
cmp
stc
inc
mov
push
and
jmp
xor
push
inc
jge
mov
movsl
dec
test
adc
push
lods
adc
push
insl
pushf
or
inc
stc
jge
pop
outsb
mov
or
mov
push
imul
enter
dec
inc
mov
mov
jmp
push
test
jmp
cmp
sub
das
ljmp
mov
lea
cmp
out
cld
pushf
je
or
loopne
push
adc
roll
leave
adc
lods
pop
xor
mov
dec
pop
jle
add
adc
xor
imul
sbb
sub
pop
lock
loopne
outsb
mov
adc
add
pop
movsl
push
sahf
rcrl
icebp
mov
cltd
les
fcmovb
dec
cmp
int3
push
xchg
inc
mov
mov
out
jae
mov
dec
jge
jmp
pop
push
adc
xchg
jns
mov
xchg
jge
jge
lea
jl
dec
pop
cmc
mov
mov
lret
jp
mov
adc
inc
xchg
inc
sbb
ss
sbb
outsb
enter
popa
mov
inc
xchg
adc
test
xorb
adc
or
sub
test
out
xor
and
arpl
int3
xor
call
clc
add
adcl
sbb
out
adc
int
or
sub
insb
push
sti
pop
loop
pop
cmpsb
cmp
std
jmp
sbb
fcoml
imul
xchg
in
sub
and
popf
repz
pop
mov
fstps
je
push
xchg
mov
fs
ret
test
mov
leave
mov
pop
mov
pop
xchg
push
mov
cmc
ss
test
adc
or
stos
mov
inc
inc
movb
push
je
dec
mov
or
enter
das
inc
sbb
add
push
sub
push
ret
sbb
lea
sbb
dec
loopne
into
movsb
dec
popa
cli
lods
inc
and
daa
std
sub
fistl
sub
aad
inc
or
dec
jne
orb
adc
movsb
das
ret
mov
ret
pop
mov
nop
stos
or
xor
sub
cmp
rcll
les
popf
insl
adc
inc
and
add
mov
push
cmp
sub
inc
or
lret
aaa
and
out
les
aad
inc
xor
xlat
jp
fs
outsl
clc
je
pop
stc
stos
sub
sbb
pop
cwtl
dec
mov
lret
xchg
pop
push
daa
flds
dec
out
mov
xchg
hlt
out
mov
mov
jge
sarl
aam
imul
lods
mov
fidivrs
mov
daa
or
dec
cmc
push
mov
jns
bound
dec
jmp
cltd
fdivs
and
add
int3
cmp
fidivrs
or
or
pop
in
or
push
pop
push
repnz
sahf
rorb
fnstsw
push
cld
or
sbb
mov
and
test
adcb
cs
adc
mov
mov
outsl
outsl
test
int3
pop
jge
mov
cmc
xor
xchg
into
sbb
jge
out
mov
dec
and
hlt
and
cmp
inc
mov
loope
ja
xchg
fisttpl
inc
in
iret
sbb
pop
test
sub
adc
lret
sub
js
dec
or
push
mov
xchg
das
je
scas
outsl
push
cmc
and
int
lahf
dec
pop
cld
fiadds
sbb
int
mov
aad
dec
decb
push
nop
addr16
cli
lds
fdivrs
clc
test
dec
mov
adc
dec
movsl
int
push
mov
xchg
push
sbb
ret
sarl
inc
mov
xchg
inc
push
arpl
movsb
inc
mov
pcmpeqb
add
adc
pushf
mov
dec
popf
xchg
or
pand
lods
ss
test
pop
repnz
mov
mov
sahf
dec
fidivrs
jmp
mov
and
xor
push
jmp
cmp
std
sbb
or
adc
push
add
outsl
push
imul
sbb
into
jmp
push
mov
aaa
cmp
mov
cmp
sub
es
jno
dec
lock
bound
lahf
push
addl
mov
pop
jae
sub
adc
mov
inc
jmp
test
dec
xchg
jnp
std
sbb
xchg
inc
mov
pop
das
cmpsl
jb
stos
xor
inc
arpl
dec
fcmovb
in
xchg
push
mov
lahf
clc
adc
dec
out
add
mov
into
mov
push
fadd
xor
inc
insb
pop
rcrl
xor
adc
popf
sahf
add
mov
movsl
sbb
push
push
arpl
sbb
inc
add
lcall
adc
aas
lret
or
in
hlt
cltd
cltd
inc
jae
or
or
adc
insl
in
cmp
out
ret
add
jp
loop
pop
lahf
pop
ds
lods
xchg
push
cmc
add
nop
and
push
mov
jmp
lahf
pop
mov
lods
inc
iret
pop
mov
lods
ret
sbb
popf
mov
jg
lds
ret
lea
shll
fwait
push
lds
xchg
push
cs
insl
rorl
xor
cmp
jne
add
pop
add
dec
and
movsl
push
insb
cltd
cs
jg
popa
or
jmp
out
scas
push
mov
push
movsb
jmp
adc
sub
imul
add
aaa
inc
jnp
cmp
in
insl
scas
push
sbb
xor
mov
mov
das
mov
cmpsl
or
or
dec
mov
sbb
cwtl
jle
das
cli
pushf
xchg
xchg
jl
cmpsb
add
push
ss
jns
enter
jo
testb
mov
mov
lret
mov
xchg
push
repz
aad
lods
dec
inc
adc
sbb
lret
pop
fcomip
mov
sti
adc
dec
icebp
jns
inc
sarl
notl
adc
insb
popf
fs
stc
add
xor
pusha
sub
or
dec
sbb
shlb
cwtl
pop
decl
mov
push
xchg
stos
push
stos
andl
ss
lcall
dec
cmpsl
jo
jecxz
fistps
cmp
stos
push
dec
add
js
sti
test
jmp
push
call
push
dec
mov
sub
cmp
int
add
ficoms
in
loopne
es
xor
dec
scas
jg
in
das
lret
xchg
imul
cmp
push
aam
loope
insb
insb
ret
adc
push
cli
sbbb
adc
sbb
jge
pusha
rcll
mov
push
loop
imul
cmp
sbb
jnp
mov
push
int
dec
mov
xchg
jnp
push
das
mul
popa
xchg
fmul
popa
mov
enter
loop
push
test
scas
pop
mov
push
addb
mov
insb
pusha
xor
pop
mov
dec
pop
xchg
sti
cmp
lcall
pop
xchg
inc
ret
sti
scas
mov
divl
scas
lea
out
mul
xchg
dec
xchg
call
mov
adc
mov
in
mov
dec
in
adc
mov
movsb
in
bswap
cltd
push
shlb
lock
mov
xor
push
pop
mov
sub
sub
lret
push
test
push
call
add
daa
fs
inc
adc
popa
pop
call
int
add
daa
sti
inc
mov
dec
in
sbb
mov
movsl
and
rcrl
int3
xor
mov
popa
mov
sub
jb
iret
das
repnz
inc
mov
push
mov
scas
push
xchg
mov
xchg
movsl
daa
cwtl
push
in
fstpt
and
shll
aam
mov
adc
movsl
shlb
leave
sbb
bound
insb
mov
dec
xchg
mov
lahf
loope
mov
inc
sarl
rol
rep
mov
jo
fldl
dec
xchg
push
push
sub
xchg
data16
pusha
cmpl
repnz
ret
fcomi
mov
xchg
stc
leave
notb
jno
dec
ret
addr16
jp
mov
cmp
test
pop
hlt
cs
sbb
clc
adcb
mov
fsubl
pop
pop
mov
push
icebp
sub
imul
push
pushf
stos
loopne
div
mov
fldcw
incb
std
xor
cmp
xor
mov
sbb
pushf
push
fdivrl
or
and
sub
loope
fsubl
push
filds
test
pushf
mov
fsubl
test
mov
pop
ret
test
dec
cmpsl
loope
sbb
xchg
dec
mov
dec
nop
pop
inc
fidivl
cmp
ret
jecxz
popf
outsl
and
in
xchg
inc
mov
xchg
push
push
fwait
and
sahf
fdivrl
ficompl
iret
cli
cmp
jmp
divb
mov
pop
fsubrs
mov
sub
jbe
std
adc
mov
fwait
fwait
jno
ror
jo
xchg
lret
jmp
push
xor
out
daa
sarb
ds
adc
aad
orb
imul
int
addr16
sarb
xor
mov
rcll
loopne
fnstcw
sbb
mov
xchg
imul
and
aas
cmpsb
inc
out
cmp
out
faddp
and
sarb
add
or
shlb
inc
popa
test
fs
aad
sti
sub
xor
adc
dec
mov
adc
cwtl
movsb
jb
sub
or
outsl
cs
cs
pusha
test
lock
dec
cmp
pop
inc
mov
push
and
and
insb
imul
jl
orl
pop
pop
ds
loopne
insl
es
ss
mov
test
add
push
cmpb
push
pop
jecxz
jno
insl
mov
pop
xor
xchg
jne
push
shl
loopnew
and
or
push
rolb
jo
push
mov
mov
sub
daa
sub
xor
push
call
sbb
mov
ljmp
xor
jle
cmp
sub
dec
inc
divl
xlat
lds
adc
aam
add
scas
addr16
push
shll
call
cmpl
push
mov
dec
add
in
sbb
dec
inc
jl
or
sbb
cs
jecxz
or
jo
push
mov
fwait
push
sbb
bound
jae
mov
rcrb
xor
pushf
jecxz
popf
push
sahf
std
loop
cmp
push
pop
lods
pop
and
mov
xor
aam
jp
push
inc
adc
xchg
xchg
fistl
adc
add
movb
dec
and
enter
mov
cmpsl
mov
insl
fwait
push
dec
out
arpl
jmp
mov
ss
nop
mov
adc
test
add
pop
lods
iret
fisubrl
lahf
sahf
xor
movsl
divl
xor
repz
shl
jnp
cmp
sub
xor
jne
inc
int3
adcl
push
cmc
sahf
pop
add
mov
movsl
and
pop
out
ret
pusha
cli
and
cld
pop
mov
cmp
in
int
add
mov
inc
sti
psubusw
popa
and
movsl
pop
xor
adc
jo
loope
lret
aad
faddl
and
into
inc
cmpsl
mov
inc
add
movsl
push
in
rcrl
test
mov
pop
les
push
jbe
fidivrs
dec
sub
inc
stos
std
aaa
aas
or
inc
mov
inc
mull
es
xchg
push
mov
adc
rclb
inc
fiaddl
and
loopne
shl
pop
mov
or
cmp
std
or
insb
fwait
ja
fsubrs
xchg
popf
ljmp
loopne
cmc
xchg
or
lea
sbb
pop
js
sbb
scas
mov
pop
fwait
cmp
mov
xchg
or
daa
sahf
mov
ret
cmp
pop
pop
lret
ret
pop
push
sti
outsl
adc
add
shrl
insl
push
mov
mov
icebp
sub
xor
mov
out
xor
mov
inc
repz
or
cvtps2pd
lret
xchg
pop
and
iret
push
mov
mov
mov
pop
add
mov
dec
push
mov
aad
cmovnp
inc
xor
jb
inc
xchg
push
mov
add
xchg
idivb
addr16
movb
mov
cwtl
mov
dec
lods
gs
push
dec
mov
js
sti
fmull
arpl
inc
lea
cltd
cwtl
filds
andl
or
fiadds
in
mov
dec
lea
sub
jns
insb
in
mov
aam
ljmp
xchg
push
fidivrl
aam
push
jge
mov
out
rclb
fildll
cmpsb
in
jg
imull
filds
dec
ficoml
icebp
add
adc
sbb
ljmp
sub
fwait
pop
cmp
repnz
cmp
pusha
lret
sub
cmpsb
js
out
sub
cld
addl
ret
mov
int3
arpl
mov
mov
add
add
and
nop
adc
in
push
sub
dec
mov
in
inc
xor
sbb
mov
add
sti
jmp
or
xchg
shr
fstps
jbe
les
out
out
sti
dec
inc
shll
xchg
shlb
or
push
stos
pop
or
popf
dec
in
pop
sbb
movsl
jp
jne
push
sbb
sub
or
jno
popa
aaa
ds
test
ds
xchg
pop
scas
lods
pop
xchg
movsl
dec
jnp
popf
inc
push
cmp
inc
inc
popa
ret
jecxz
push
repz
mov
sbb
cwtl
ds
sbb
shll
sti
dec
inc
xor
lahf
or
and
aad
or
call
imull
sub
cmpsb
icebp
outsl
jmp
nop
dec
addr16
xchg
orl
repnz
pop
jmp
sbb
pop
mov
jb
sub
iret
sub
xor
inc
push
pop
out
push
scas
insb
mov
popa
lcall
adc
push
dec
and
add
or
ss
or
jno
rclb
fs
loopne
out
in
mov
mov
loopne
popa
fwait
mov
push
sub
imul
mov
pop
pop
xchg
jne
ficoml
xchg
cmpsb
movsw
lods
sub
mov
jbe
push
mov
inc
or
mov
out
sub
inc
dec
cltd
sahf
push
in
popf
xchg
sub
ljmp
adc
sub
mov
xor
sbb
int3
jae
psubusw
popa
and
fimuls
push
push
fstpt
jg
ret
cmp
fs
xor
enter
sarl
mov
int3
loope
aam
pusha
popf
dec
psubd
cmp
lea
in
add
adc
and
xchg
sub
adcb
loopne
repz
loope
pop
jae
or
add
push
mov
int3
cmpsb
das
pusha
xchg
andb
sub
dec
mov
jae
jb
test
cmp
cwtl
mov
adc
int3
stos
pop
xchg
inc
jbe
int3
sub
pop
scas
in
dec
dec
xor
insb
pop
lea
call
outsl
insl
nop
addr16
das
jp
push
mov
or
pop
adc
mov
sub
add
xor
lods
sti
xor
push
pop
clc
ds
imul
cmpsl
int3
adc
cwtl
mov
call
or
push
movq
insb
sbb
and
les
aaa
add
adc
add
lods
mov
lock
in
rcll
sub
iret
mov
aam
mov
pusha
push
data16
out
mov
cmp
jno
cmp
or
push
mov
cmpsb
fwait
xor
addb
cs
stos
dec
movsl
out
push
rol
pop
mov
leave
or
fcmovb
or
adc
std
push
dec
pusha
leave
mov
test
sti
mov
jecxz
enter
inc
mov
dec
mov
xor
mov
xor
dec
popa
dec
int3
cmpsl
dec
scas
push
fmull
roll
lods
mov
mov
mov
loop
xchg
insl
sub
lret
ljmp
mov
push
scas
or
cli
sbb
aad
pop
sub
push
mov
cmc
and
xchg
or
rcl
incl
notb
push
xchg
incb
ja
fiadds
stos
outsb
rcrl
jge
idivl
sbb
or
mov
scas
ret
and
jmp
sub
or
lods
jge
stc
cmp
push
adc
iret
sub
adc
sbb
jnp
pop
sub
mov
int
push
xchg
cmp
push
mov
and
push
lahf
xchg
mov
aam
pop
mov
push
inc
cmp
jbe
mov
adc
fstps
nop
cld
push
jne
xchg
xorb
or
jno
ret
mov
xor
push
scas
out
jg
insb
mov
bound
mov
je
fdivrs
lods
popa
divl
stc
shrl
shll
pop
out
mov
sub
adc
nop
popa
repnz
push
lret
lcall
and
mov
aas
ret
mov
xor
xor
aam
push
rcrl
shlb
fxch
add
mov
mov
inc
xor
js
shr
pop
jnp
roll
fildl
in
xor
divl
cmp
sbbb
xor
rorl
adc
pop
push
out
push
fstpt
pushf
xor
pop
mov
add
fisubrl
int
pusha
cwtl
pop
sub
push
cmc
add
push
lahf
inc
mov
pop
mov
mov
ficoms
mov
arpl
mov
xor
addb
or
mov
adc
pop
std
mov
stc
gs
push
pop
loopne
or
lcall
adc
aaa
idivl
pusha
cmp
mov
data16
push
xchg
cwtl
adc
mov
dec
test
xor
push
dec
or
add
sti
pop
lahf
fisubl
mov
or
add
lds
ret
sbb
lret
popa
mov
ss
and
out
iret
push
les
pop
movsb
test
fdivs
mov
icebp
push
xor
sub
mov
popa
cld
sbb
inc
fldl
ret
daa
int3
xor
lret
inc
iret
aam
xchg
pusha
pop
nop
adc
cli
jp
mov
adc
aaa
cmp
jle
mov
mov
pop
out
out
add
push
mov
inc
add
sbb
push
stos
stos
dec
inc
xchg
dec
jecxz
iret
or
mov
outsl
sbb
inc
in
scas
fidivs
xchg
testb
je
sub
pusha
enter
push
push
idivl
sbb
mov
bound
adc
cmp
add
sbb
fisttps
aam
sti
data16
and
sub
and
fldenv
shlb
sbb
lcall
xor
negb
fildl
into
in
and
imul
xor
xor
add
psrld
fisubrl
loopne
fmulp
adc
push
sub
icebp
add
xor
in
loop
in
or
push
daa
lock
hlt
imul
mov
mov
push
sti
mov
movsb
fimull
cmc
xchg
push
mov
push
adc
xchg
or
dec
mov
push
mov
insl
inc
icebp
pop
cld
movsb
xchg
jb
je
xchg
jecxz
rcrb
cs
int
mov
push
inc
xchg
add
xchg
adc
jnp
push
dec
pushf
mov
in
push
mov
mov
shll
dec
xchg
hlt
gs
outsb
dec
add
dec
cmp
frstor
in
push
in
xlat
and
mov
push
repz
in
sbb
push
fsubrl
push
push
adc
push
repnz
in
xchg
adc
cmpxchg
fldcw
test
jecxz
out
outsb
adc
jb
adc
jg
out
cmp
in
testb
bound
jns
stos
adc
in
pop
pop
pop
dec
mov
jbe
enter
pop
sub
sub
jg
mov
call
cmp
lea
push
js
jns
inc
sahf
sub
fmuls
setl
pop
inc
test
pop
lds
out
inc
lcall
fbld
daa
or
add
xor
loope
push
filds
cmp
daa
xchg
movsb
adcb
popa
mov
xlat
nop
mov
xchg
leave
sbb
aam
fs
mov
mov
mov
push
xor
mov
call
xchg
push
lahf
mov
test
inc
mov
hlt
ret
dec
pop
cmp
test
ss
movsl
sub
mov
ficoml
call
mov
adc
mov
loop
std
and
shlb
nop
hlt
jno
and
cmpsb
xchg
imul
sub
movsl
stos
cmp
and
js
in
pop
fldt
xor
out
jne
not
in
or
sbb
outsb
out
sarl
out
mov
sbb
inc
ret
outsb
pop
nop
inc
mov
mov
add
ss
pop
test
lea
xchg
imul
sub
cmp
sub
lods
adcb
dec
fwait
add
in
xor
mov
in
mov
rol
sbb
es
dec
xchg
jbe
add
cld
inc
movsl
inc
repz
testl
pop
insb
shll
mov
das
pushf
popa
xchg
pop
xchg
jne
fldl
arpl
xor
and
mov
mov
jge
es
and
scas
or
icebp
cmp
int3
jl
jl
and
rcrl
pop
xor
pusha
sbb
jnp
cmp
and
and
xlat
xor
out
cmp
ss
test
mov
adc
and
pop
xchg
cmp
cmp
mov
pop
sub
outsb
insl
rolb
cli
std
dec
cmpsl
fldenv
sbb
leave
es
ljmp
push
dec
imul
inc
jnp
xchg
push
xchg
xor
sub
inc
test
and
dec
add
es
mov
loopne
or
clc
aas
popf
movsl
push
push
lods
subl
gs
lods
mov
mov
scas
movsb
mov
lds
in
xchg
dec
push
loope
or
scas
mov
testl
shlb
add
rep
movsb
jge
int3
or
fwait
inc
sbbb
loop
dec
out
std
stos
jmp
jp
and
cmp
and
fdivrs
mov
push
jmp
sbb
mov
in
sub
add
les
dec
shll
loopne
es
testb
outsl
outsl
mov
dec
or
pop
gs
push
cld
mov
out
aad
sahf
mov
dec
test
sbb
and
fistpll
out
pop
push
jecxz
pop
mov
and
pop
push
mov
dec
or
or
daa
mov
push
sti
jg
dec
inc
cmp
adc
jl
push
bound
addr16
roll
roll
mov
popf
out
aam
push
cmpsl
jnp
imulb
pop
dec
sahf
test
test
push
lret
and
out
sbb
fldl
and
adc
mov
and
loope
lods
inc
push
xchg
outsl
ret
jnp
inc
or
mov
mov
mov
dec
cmpsb
dec
call
push
and
pusha
out
out
push
mov
jne
aas
sbb
cmpsb
loopne
xchg
cli
cmp
and
sub
xor
enter
dec
adc
sbb
sbb
cmp
out
fidivrl
repz
add
pop
inc
stos
out
aam
into
sub
xchg
out
iret
arpl
push
rorw
xchg
push
mov
push
push
stc
outsl
or
cmp
addr16
sub
cmp
add
mov
psubsw
mov
xchg
mov
cmpb
pusha
jne
data16
pop
lods
into
xchg
ror
jl
fistpl
dec
lods
int3
sub
mov
test
dec
xchg
popa
sbb
shr
mov
adc
int3
rorl
in
dec
movsl
jge
repnz
mov
or
mov
mov
fists
sbb
xchg
dec
dec
lret
mov
add
adc
ss
and
xchg
imul
pop
nop
pop
pop
orb
sarb
sbb
enter
js
jo
cmc
sub
es
sbb
mov
mov
repnz
and
xlat
or
and
pop
push
mov
mov
aad
jge
cltd
or
jno
xorb
mov
and
sub
sub
pop
inc
mov
adc
pop
mov
sbb
cmp
sbb
imul
cli
stos
cmp
loope
mov
and
out
popf
clc
or
lea
insb
test
aad
sub
sbb
sub
mov
aaa
adc
stc
fidivrl
test
and
test
call
cwtl
xor
sbb
mov
stos
pop
pop
mov
out
jecxz
push
stos
push
cwtl
in
add
pop
push
mov
add
jmp
fucom
mov
ficoms
bound
push
orl
cmp
lock
mov
add
leave
xor
xor
or
xor
xchg
das
sub
idiv
add
es
sbb
sub
es
mov
push
call
aad
mov
dec
mov
aad
frstor
in
sbb
mov
shl
sub
push
lds
sub
xor
sbb
jmp
pushf
mov
push
fwait
int3
das
add
sub
jo
repnz
out
out
out
scas
or
or
adc
test
jl
sub
xchg
ss
and
iret
icebp
test
loopne
fstpt
sti
cmc
jle
xor
pop
push
xchg
ret
or
cmp
push
sub
sarb
or
mov
clc
dec
jp
lds
adcb
push
and
jl
pop
pop
imul
mov
dec
js
in
aad
sbb
and
pop
sbb
or
jmp
lds
or
cmp
sahf
lock
adc
movsb
adc
lahf
popa
mov
insl
rcrl
rcrb
dec
loopne
mov
mov
sub
pop
push
cmc
xor
cmp
imul
lds
sbb
mov
xor
or
push
decl
cwtl
inc
sahf
push
popf
dec
sub
jns
lds
add
out
dec
or
pop
add
insb
mov
outsb
daa
lea
dec
mov
push
in
push
xor
jmp
jno
orl
push
or
xchg
shlb
push
inc
inc
loope
imul
inc
je
pop
push
or
es
scas
jno
inc
loope
int
lcall
mov
push
cmpsb
add
fisubrl
outsb
jno
enter
in
repnz
sub
fstpt
in
jb
test
lea
dec
lahf
lret
sub
or
xor
xchg
pop
into
add
fisubrs
sub
dec
mov
loop
sub
cld
ss
jle
adc
lds
dec
daa
fistpll
inc
scas
pop
sbb
inc
or
xor
mov
rcll
les
cmp
or
lcall
jmp
cmc
xchg
push
cltd
pop
push
mov
shlb
cltd
insb
add
and
pop
out
ds
cltd
pop
mov
outsb
jge
negl
xchg
lods
jo
test
lea
mov
adc
int3
xchg
mov
mov
mov
sarl
std
mov
jecxz
lds
mov
andb
dec
mov
inc
add
sub
jne
mov
jns
cwtl
imul
clc
and
cld
mov
xorb
movsl
jle
or
fstl
dec
pushf
dec
xchg
das
lret
jle
adc
scas
jbe
fiadds
xchg
dec
nop
dec
mov
test
add
and
daa
jmp
cmp
ja
jno
lahf
adc
mov
jne
dec
sbb
punpcklbw
int3
popf
xchg
push
adc
or
negl
repz
inc
stos
or
lea
int3
mov
sti
push
push
test
das
adc
push
inc
mov
mov
jp
jb
popa
add
sbb
push
ds
icebp
in
fwait
push
out
xor
inc
sbb
aas
jnp
insb
inc
xchg
sbb
dec
mov
push
mov
mov
dec
mov
pop
ds
mov
xchg
icebp
lahf
or
scas
bound
push
mov
pop
lods
out
adc
mov
pop
cmc
push
fstl
repz
lea
or
subl
std
adcl
cmp
dec
pusha
ds
pop
push
cmpb
add
out
notb
xchg
lods
pop
mov
or
mov
cmp
pop
cld
xor
rolb
pop
stos
jge
cld
sub
js
into
sub
stc
dec
pop
insb
in
cmp
xor
inc
shlb
xor
clc
pop
imul
push
addb
in
mov
dec
add
jl
sub
pop
ret
movsl
insl
xchg
int
fimuls
sub
xor
mov
insb
sti
cmp
lds
loop
pop
adc
push
mov
mov
sub
push
dec
mov
into
mov
in
and
bound
ja
pop
adc
jo
push
lods
inc
std
push
adc
int3
pusha
fcmovbe
sub
cmp
mov
push
or
test
jmp
cmp
in
out
fwait
push
lods
repz
aad
push
push
in
sbb
loopne
push
cmpxchg
or
mov
lcall
cmc
in
addr16
pop
fldcw
push
nop
imul
lds
out
arpl
push
lcall
dec
pop
cli
adc
pop
and
xor
aaa
out
mov
mov
add
or
jae
leave
sub
dec
mov
sub
daa
dec
mov
jb
jbe
loope
xor
xchg
push
stos
lds
call
cltd
bound
mov
push
mov
dec
fdivl
xchg
test
jno
ret
dec
fwait
inc
cwtl
enter
push
iret
and
cmc
jno
adc
jecxz
pusha
cwtl
imul
out
push
scas
mov
lcall
inc
xchg
out
xorl
cmp
push
mov
fldt
push
cmpsb
jae
rorb
sti
xorl
jl
pop
pushf
hlt
push
mov
cmp
adc
and
sbb
or
add
mov
add
adc
cmp
jl
mov
hlt
sti
loope
push
rcl
cmp
std
popfw
and
fildl
mov
xor
push
inc
ja
bound
out
roll
enter
mov
int
lea
cmp
cmc
pop
mov
push
adcl
pop
pop
adcl
addr16
popa
or
pop
lahf
gs
lds
fadd
loopne
pop
dec
test
ret
and
dec
lcall
xor
mov
jo
into
movzwl
fildll
push
popf
push
cwtl
mov
movsl
pop
adc
mov
dec
sbb
aad
fwait
insl
repz
lods
xchg
sub
or
popf
shrb
js
test
rcll
push
sub
jmp
shrl
xor
jns
aam
xor
push
mov
ret
and
jp
mov
das
les
cli
pop
mov
sub
cmp
bt
call
lds
sti
dec
sub
jge
cmp
stos
pop
leave
call
mov
and
push
lds
xchg
fwait
pop
adc
pop
lret
xor
lret
or
dec
adc
cmc
shlb
pop
xor
pop
imul
test
push
xlat
inc
and
out
mov
scas
mov
add
lock
lahf
fs
dec
fiadds
jno
popa
in
mov
cmp
out
cmp
fnsave
mov
lods
xchg
jno
fsub
sbb
clc
sbb
mov
push
push
scas
aam
outsl
mov
call
mov
lret
das
cmpsl
add
fimuls
arpl
sub
ret
adc
adc
mov
pop
mov
jne
ret
or
sub
hlt
sbb
inc
dec
test
sub
clc
push
xlat
sub
push
sub
add
or
and
ror
jp
sbb
xor
inc
mov
iret
adc
rorb
insl
lods
adc
stc
xor
insb
lock
lret
dec
sbbl
sbb
pushf
cmp
dec
fidivl
loope
sahf
sub
dec
mov
sub
push
andb
pop
arpl
insb
xchg
pop
mov
imul
inc
test
mov
data16
enter
push
mov
add
xchg
rorl
xor
call
movsl
out
in
or
push
mov
inc
rol
inc
push
mov
xchg
push
mov
mov
arpl
outsl
cwtl
out
add
ret
adc
loope
ficoms
or
xorl
and
into
popa
xchg
nop
fs
stc
mov
sbb
in
push
inc
divb
loope
fistpll
cmp
add
and
push
adc
add
test
in
pop
das
xchg
xor
jae
push
lea
shll
fisubl
out
nop
mov
repnz
in
das
pop
pop
mov
pop
or
xor
push
out
shlb
mov
sbb
jg
in
mov
add
fs
loope
push
test
xor
lret
arpl
push
lods
push
xchg
cmp
sbb
leave
push
sbb
scas
aad
xchg
or
dec
xchg
pop
mov
dec
fists
arpl
sub
test
dec
lods
push
js
daa
fstps
jmp
push
mov
and
rclb
inc
xchg
or
arpl
push
stos
push
cmp
inc
pop
mov
pop
nop
fnsave
ret
jo
sub
pop
movsl
mov
fsubrl
loopne
leave
aam
jmp
jno
test
loope
jle
mov
ljmp
xor
cmp
sbbl
out
sbb
cs
pop
sub
inc
xchg
sbbb
ljmp
aaa
and
sbb
daa
sub
dec
pop
adcl
pop
mov
ja
rorb
aad
push
pop
jmp
jnp
ficoml
xorb
pop
movsb
jle
call
addl
pop
stos
outsb
push
in
jo
gs
pop
mov
inc
mov
negb
mov
jo
sub
cwtl
and
sti
ds
fs
and
test
mov
xlat
sbb
dec
cmp
repz
dec
fwait
stc
data16
pop
mov
mov
sub
pop
cmpl
jnp
pop
fucom
inc
fbstp
ficomps
fcomp
clc
into
jl
aam
hlt
insb
jecxz
rolb
jae
out
out
sub
stc
adc
mov
out
or
shl
and
cltd
pop
push
roll
pop
sub
mov
mov
pop
in
sbb
mov
iret
enter
jl
dec
and
push
pop
mov
sbb
or
sub
cmpsb
and
xchg
inc
mov
inc
enter
ljmp
xchg
mov
les
stos
mov
ret
mov
out
addb
mov
daa
or
mov
pop
cmp
mov
aam
cwtl
mov
jle
push
jge
push
xchg
popa
arpl
inc
and
or
mov
cld
aaa
mov
jbe
push
mul
pop
repz
lods
into
lods
mov
push
daa
mov
pop
cld
pop
sub
pushf
je
push
stc
adc
inc
lods
mov
cmpsl
jge
aam
clc
lods
jns
repnz
xor
xchg
scas
std
mov
fmull
movsl
lcall
and
sbb
and
js
dec
xor
pop
add
xchg
jb
movsl
imul
or
push
in
das
fwait
xchg
inc
dec
or
mov
xor
aam
lds
jecxz
shlb
popa
scas
cmpsl
and
repnz
add
dec
pop
mov
sbb
popa
test
xor
push
xchg
and
adcl
gs
jmp
pop
mov
rolb
das
sub
incl
push
cmp
xchg
push
push
fdivrp
bound
xor
sub
rolb
jg
inc
and
inc
pop
mov
push
fidivrs
lea
in
gs
fs
arpl
bound
jg
dec
push
pop
rol
push
imul
xchg
in
sub
mov
jnp
into
pop
leave
push
jno
andl
mov
mov
rolb
pop
sbb
mov
out
fidivrl
in
dec
push
sti
lods
xor
es
int3
mov
pop
xchg
jmp
std
lods
enter
push
or
dec
or
fldl
in
sarb
push
ror
or
scas
cmpsl
or
sbb
or
sub
jbe,pt
sti
ja
ljmp
stc
ss
push
mov
dec
adc
adcb
xchg
inc
xchg
xchg
imulb
or
nop
adc
mov
mov
mov
daa
cwtl
nop
sub
mov
cmp
aas
sub
insl
lea
int
jo
push
loop
in
jmp
inc
mov
movsb
inc
stos
jl
and
lahf
jge
hlt
push
fs
push
xchg
addr16
enter
inc
cmpsb
and
inc
and
push
fists
movsl
arpl
adc
out
aaa
sarl
fiaddl
scas
cltd
sub
sbb
mov
xor
xor
out
movsb
fldenv
jmp
addr16
sub
jo
aaa
push
add
mov
out
pop
cwtl
iret
imul
les
shrb
stos
notb
cmpsl
jmp
sti
mov
nop
push
inc
mov
pop
inc
push
adc
and
les
or
outsl
out
leave
pop
repnz
or
sbb
mov
incb
sbb
cmp
dec
xchg
gs
sub
es
loopne
add
in
inc
test
pop
mov
insl
xorl
ss
pushfw
push
scas
adc
xchg
inc
add
cmc
dec
xchg
bound
xchg
push
loop
dec
xchg
push
xor
shlb
call
sbb
add
dec
cmpsb
push
push
jmp
push
xchg
ja
shll
fs
inc
xchg
inc
mov
lcall
or
lds
cmp
mov
mov
xchg
rcrb
xlat
loopne
fsub
sbb
and
js
lcall
int
rorl
les
mov
jecxz
adc
jnp
adc
sahf
outsb
testl
jmp
pop
rcrl
adc
fidivs
rcrb
fdivs
cld
sbb
sub
out
or
fucomip
dec
test
xor
sub
jne
loopne
aam
mov
jecxz
aam
fadds
imul
sub
xchg
dec
inc
shrl
sub
fimuls
inc
or
repz
mov
adc
dec
mov
jno
add
inc
adc
push
inc
aaa
shlb
sti
filds
in
push
pop
popf
dec
sub
jl
mov
inc
pushf
fsubrs
xchg
pop
test
ficompl
lods
pusha
ds
repnz
scas
out
test
enter
sarb
adcw
addr16
sub
leave
insl
cltd
mov
sbb
aaa
rclb
cmp
subb
es
and
mov
mov
sub
mov
sub
dec
cwtl
xchg
xchg
adc
xor
adc
in
mov
rcll
cltd
mov
stos
daa
cmp
xor
stos
dec
lret
rorb
adc
incl
cld
test
xor
pop
shll
add
mov
jle
inc
sub
mov
push
mov
sub
push
mov
adc
mov
addr16
pop
into
repnz
mov
sahf
arpl
jecxz,pn
aas
mov
lret
sahf
jnp
stos
inc
inc
lret
cli
add
mov
lds
popf
inc
cmp
mov
push
rcrb
xchg
cs
idiv
test
xlat
inc
repz
mov
inc
cli
sbb
ss
or
xchg
pop
mov
mov
sbb
in
adc
and
mov
and
sub
je
cmp
or
fsubl
mov
stos
dec
xchg
test
sbb
inc
sbb
cmp
mov
std
stos
jl
rolb
xchg
pop
incb
xlat
sbb
sbb
pop
test
popa
dec
cs
or
cwtl
pusha
xchg
test
out
ret
cmpl
and
xor
inc
bswap
pop
inc
test
clc
and
ja
loope
roll
movsl
mov
adc
xchg
dec
cs
jle
xchg
dec
mov
nop
pop
push
stc
mov
sbb
fsubl
cmpsb
pop
pop
fisttpl
mov
nop
es
pusha
cltd
in
in
adc
cmpsl
xchg
shrl
jae
adc
push
sbbl
aas
pop
pusha
fldpi
leave
sbb
cmp
rolb
enter
iret
mov
or
in
lcall
mov
adcl
mov
add
push
shr
outsl
add
push
ds
xchg
push
xchg
insb
xorl
sub
mov
xlat
hlt
popf
add
inc
out
xlat
stos
pop
push
outsl
rorb
pop
adc
pop
jmp
lahf
aaa
add
jmp
dec
sub
or
or
inc
or
adc
sbb
stos
add
out
jbe
pop
push
mov
cltd
lret
ja
fs
push
cmp
out
imul
pushf
aam
mov
mov
ret
mov
es
sbb
lahf
in
sbb
lea
pop
mov
ja
and
pop
mov
and
divb
inc
fldt
fwait
and
fisttps
outsb
adc
and
sbb
or
xor
pinsrw
pushf
lods
or
fidivs
in
sbb
inc
imulb
jnp
fsubl
cmp
test
dec
sbb
test
jmp
xlat
stos
rcrb
sbb
fsubs
mov
cmc
push
lods
sub
std
popf
sbb
sub
pop
pusha
ret
loop
sub
mov
lcall
pop
and
aaa
nop
jb
or
mov
test
cli
std
test
clc
pushf
stos
dec
dec
mov
xchg
inc
and
jp
inc
lea
fwait
push
mov
adc
dec
sbb
fisubl
dec
in
fsubs
xchg
aas
test
fdivrp
inc
pop
and
jne
xor
aaa
lods
xchg
addr16
das
sub
mov
mov
inc
andl
in
dec
pop
push
push
mov
dec
sbb
jnp
or
xor
add
pop
imul
arpl
les
loope
fldenv
and
ss
add
ljmp
arpl
sub
jg
je
push
cmp
pop
dec
jo
fistpl
mov
cld
mov
dec
clc
jecxz
and
cwtl
xor
popf
push
xor
ss
push
xchg
push
sub
push
lock
je
sub
dec
mov
sub
addr16
cmpsb
shll
mov
or
mov
jp
es
fcomp
dec
fwait
sahf
or
mov
inc
out
cmpsl
cli
pop
fs
je
sub
xchg
rolb
clc
mov
mov
xchg
out
jno
inc
lahf
ljmp
addr16
inc
and
aaa
mov
xchg
loopne
or
push
out
subl
jp
arpl
pop
rol
icebp
cltd
push
sub
sub
out
xchg
call
test
call
cmc
ss
mov
scas
fstpt
or
push
push
in
jle
inc
loopne
lahf
clts
imulb
pushf
mov
jae
pop
push
scas
ror
push
notl
ficoml
in
xchg
sbb
stc
iret
mov
adc
nop
sub
sbb
sub
lock
cwtl
shlb
outsl
push
jae
dec
xor
pop
sti
lret
inc
fcmove
cmpsb
cltd
repz
push
mov
inc
movsl
push
cwtl
mov
lock
cmp
in
sub
out
into
leave
push
sbb
push
and
sub
push
and
scas
stc
imulb
mov
in
pop
sbb
push
xchg
mov
pop
dec
sub
push
in
loopne
pop
dec
or
frstor
cmp
cwtl
imul
mov
mov
subl
les
popa
repz
cmp
cmp
imul
push
mov
divb
stc
cmp
sbbl
fisubrs
in
cmp
stc
cld
icebp
pop
bndstx
push
paddsb
int
adc
notb
in
adc
lods
pusha
ds
icebp
out
and
xchg
pop
sub
lret
pop
adc
sbb
mov
popf
pop
jne
pop
xor
cmp
lahf
jle
mov
aaa
stc
nop
push
sub
lret
push
pop
xor
test
and
and
add
pop
nop
cmp
mov
test
xchg
fisttps
lea
pop
pop
lcall
sbb
pop
mov
xor
add
adcb
das
insb
inc
jmp
sub
sbb
inc
cmpsl
push
imul
pop
test
xchg
into
mov
js
das
adc
mov
not
movsb
inc
leave
aaa
mov
xor
lret
xchg
adc
fildll
test
les
pushf
cmp
sbb
and
repnz
sub
pop
inc
mov
cmp
and
insb
xor
dec
stc
lret
xor
movsb
pusha
insb
cmpsl
mov
add
nop
call
out
pop
pushf
imul
jns
inc
repnz
mov
and
ret
mov
jns
xchg
ret
shll
leave
pop
inc
xor
pop
hlt
xchg
xchg
fstl
xorl
cmpsb
mov
lods
inc
int
sub
jo
mov
int3
repnz
lahf
adc
outsb
push
enter
arpl
sub
mov
sub
int
jge
jne
push
es
jmp
or
ret
sbb
clc
pop
mov
add
dec
scas
pop
cmp
testb
mov
aam
cmpsb
inc
xchg
jp
xlat
lcall
andb
ja
and
ja
jno
in
mov
and
mov
jg
mov
call
mov
push
sub
lahf
mov
dec
jnp
ret
cltd
xor
xor
das
sub
and
mov
fnstenv
cmpsl
int
xor
xor
pop
inc
lock
shl
lds
test
jmp
aas
cmpsb
data16
aas
fsubrs
sbbb
sub
ja
leave
enter
mov
ss
imul
mov
imul
repnz
jmp
test
add
mov
xchg
jge
xlat
pop
xchg
inc
cld
scas
cmp
movsl
inc
fildll
xor
pop
mov
xchg
dec
sbb
in
jnp
jp
pop
cwtl
ret
insb
cli
xorb
push
cmpsb
add
dec
sbbl
dec
push
pop
es
insl
fldcw
push
fs
jne
push
jp
pop
es
sbb
fimuls
fsubrl
fs
rorb
fwait
mov
push
pop
xchg
ljmp
lret
enter
add
sbb
cmp
add
push
popf
das
pop
jl
andb
enter
nop
xor
int
dec
repnz
push
in
sti
aas
gs
xchg
or
shrb
repnz
movsb
xchg
jmp
push
push
out
mov
and
xchg
and
shl
mov
and
mov
popf
add
outsl
mov
push
pop
das
fistpl
mov
aad
sub
loope
mov
mov
sbb
pop
pop
pop
inc
fisubrl
mov
jle
fnstenv
cmp
jne
aad
inc
mov
dec
scas
add
cmpsl
rorb
cli
lds
fnsave
shlb
or
sbb
dec
setb
mov
test
std
inc
sbb
outsb
xor
ljmp
adc
jmp
xchg
sub
mov
lock
daa
stc
adc
adc
push
xchg
cmp
cld
push
outsb
loopne
mov
push
addr16
loopne
fs
sbb
xchg
bound
sti
jno
into
cmp
adc
movsl
subps
aam
cs
pop
mov
inc
js
sbb
sbb
scas
cmp
out
imul
mov
jmp
sub
pop
orb
inc
mov
fisubrs
add
mov
adc
fstpl
out
mov
jp
shr
pop
pop
xchg
stc
xchg
sub
push
xchg
push
loop
push
add
cmp
dec
nop
dec
lods
icebp
jo
sub
mov
mov
pusha
cltd
das
cmpsl
imul
hlt
jne
es
push
lods
inc
mov
sarl
xor
fdiv
ds
js
dec
gs
dec
mov
sbb
mov
je
xor
aaa
push
iret
and
jmp
mov
aad
pop
stc
test
xchg
sarb
push
rorl
imulb
scas
into
push
lahf
aas
cmp
inc
arpl
fwait
lahf
jne
dec
shll
filds
insl
cli
ljmp
orl
insb
inc
loop
adc
mov
sbbb
cmp
jnp
inc
sar
jg
fistl
inc
mov
call
mov
sub
push
dec
xchg
xor
in
xchg
jae
jge
ljmp
sti
jmp
rcrl
ret
loope
xorb
pop
mov
sub
mov
std
push
lcall
xor
xchg
adc
stos
jge
cwtl
sar
mov
test
mov
addr16
push
flds
fiaddl
jb
push
fs
fsubrs
jo
jg
xchg
mov
popf
xor
xchg
scas
lahf
les
jmp
push
gs
jnp
push
aas
stc
sub
inc
push
xor
push
push
sbb
fidivs
movl
xchg
sbb
fnsave
popf
inc
adc
movsl
cld
sub
sbb
shll
inc
jno
push
loop
idiv
out
sbb
inc
pop
into
sub
xchg
sbb
adcb
lahf
push
or
and
xor
xlat
sbb
inc
dec
inc
or
stc
mov
lcall
mov
dec
xchg
lock
push
cmp
rcrl
scas
rolb
and
add
testl
cli
in
arpl
ret
lods
lahf
cmpsb
push
mov
sub
cmp
mov
fsubr
jo
dec
xor
cli
js
data16
add
pop
cmpsb
insl
pop
adc
inc
mov
and
pusha
addl
add
test
and
jle
ja
shrb
ds
lods
jnp
fistl
dec
inc
daa
add
cmp
sbb
rorb
fidivrl
sbb
aam
aad
pop
xchg
shrb
sub
sub
aas
ds
pop
and
cs
out
xchg
in
jecxz
sahf
adc
and
incl
mov
sub
outsb
jp
inc
adc
cmp
push
cmp
mov
mov
sub
push
and
mov
pop
mov
test
ja
test
ja
call
call
adc
pop
push
mov
pop
stos
frstor
pop
mov
idivl
add
add
push
mov
cmpsb
push
cmp
sub
das
cmpsb
repnz
movsb
je
pushf
rcl
sub
es
in
mov
pop
lods
cld
repz
or
mov
jg
or
ja
scas
dec
scas
je
mov
daa
popf
mov
mov
add
mov
andb
sbb
scas
ja
scas
sahf
mov
jne
sbb
dec
cld
push
or
sbb
sub
add
lods
lods
jns
cld
and
push
jae
dec
mov
or
xor
movsl
test
in
sub
pop
dec
ret
in
push
fcoms
xlat
ds
xchg
test
nop
inc
adc
lret
xlat
clc
xchg
push
rcrl
div
popa
fcmovnb
sbbl
mov
fidivs
fdivs
leave
or
mov
push
lret
jae
pop
adc
aad
mov
mov
rcll
fidivs
push
fs
cmpsl
jae
clc
leave
sbb
jno
mov
or
data16
jae
scas
push
scas
mov
mov
sbb
notb
jae
inc
inc
xlat
push
daa
cmp
mov
les
inc
mov
pop
cmc
nop
inc
xchg
jp
jmp
pop
pop
mov
dec
in
clc
jge
nop
ds
dec
sti
dec
loope,pt
in
xchg
in
shr
dec
mov
sub
sbb
popa
sbb
cmp
loopne
push
leave
cmp
or
and
ret
mov
cld
pop
push
pop
stc
test
lds
rcrl
in
pop
mov
mov
dec
movsbl
sbb
cs
mov
nop
and
loope
lods
out
leave
jg
scas
jno
loop
ret
xlat
out
stos
jp
adc
cmpl
icebp
paddsw
shl
or
sbb
pop
sarl
pop
jne
into
stos
dec
mov
cwtl
xchg
ficoml
jnp
fwait
popf
ret
mov
mov
addl
dec
adc
mov
inc
add
insb
test
and
cmpsb
xchg
pop
xchg
stos
jp
jle
ret
sbb
cwtl
pop
mov
sub
lods
scas
js
cmp
inc
pop
test
aas
cmpsl
into
pop
addr16
insb
xchg
push
icebp
je
mov
shrl
jnp
call
xchg
orl
cmp
jns
xchg
add
or
jmp
cmp
sub
movb
push
addb
roll
sub
jae
movsb
and
stos
sbb
popf
nop
ss
jle
clc
mov
gs
adc
inc
and
sbb
or
sbb
leave
and
sub
into
push
dec
stos
in
jmp
ss
jns
dec
dec
mov
in
push
pusha
add
dec
bound
jae
jge
add
cltd
in
sbb
jle
xor
jo
xlat
cwtl
pop
scas
imul
pushl
and
dec
cwtl
sarl
sbb
xchg
mov
push
out
and
xchg
aas
mov
std
inc
movsl
imul
pop
in
and
push
decl
jl
mov
adc
and
js
push
mov
aas
mov
imul
mov
adcb
andl
addr16
or
push
shrl
push
subl
fildl
nop
jmp
mov
std
add
rclb
int3
pop
in
lock
rorb
out
jmp
mov
add
repnz
and
outsb
frstor
js
and
je
aam
fisubs
dec
adc
imul
ds
mov
mov
xchg
xchg
ficomps
dec
test
lret
std
dec
imul
sub
and
scas
mov
pop
popf
jg
in
adc
mov
gs
bound
jg
test
sbb
xor
inc
jmp
psubsw
dec
lahf
inc
js
jo
and
imul
push
lods
xchg
cmp
xchg
adc
lock
fs
pop
mov
or
dec
push
idivl
daa
sbb
sbb
rol
aas
mov
mov
cmp
aad
push
xchg
lahf
hlt
inc
inc
fists
or
cmpsb
xor
out
jne
loop
mov
add
sub
das
popf
out
or
lret
arpl
push
sub
push
andl
lret
ljmp
mov
lret
daa
xchg
mov
or
fnstsw
mov
sarb
repz
andl
xchg
in
inc
pop
xchg
adc
cmc
push
pop
mov
movaps
push
inc
shrb
mov
jb
shrb
mov
mov
sub
adc
cmp
aam
bound
jns
lds
test
pusha
xor
shl
xor
dec
mov
arpl
dec
subb
add
lea
mov
mov
cmc
mov
jnp
xchg
mov
inc
sub
jle
sbb
mov
mov
adc
jge
out
rclb
fwait
sbb
adc
repnz
lods
data16
and
pushf
int
lds
out
fnstenv
add
fnsave
outsl
rorb
xchg
daa
mov
aad
js
rcrb
popf
rolb
loop
pop
cmpsl
push
test
dec
push
mov
sub
push
scas
lods
or
lcall
fs
mov
jbe
fsubl
adc
in
push
aad
pop
shlb
sarb
mov
cld
push
xor
pop
fs
in
rorl
mov
out
test
cli
and
xor
add
ljmp
mov
sub
mov
mov
dec
push
add
pusha
mov
icebp
outsb
adc
pushf
pop
mov
cmp
cld
sub
rcll
sub
or
xlat
rclb
push
out
pop
pushf
pop
fldt
jnp
cmp
lods
dec
add
push
add
jns
cmp
lcall
cltd
imulb
push
icebp
hlt
xchg
jp
cld
cmp
or
lods
bound
ret
cmp
jns
xor
xchg
push
cld
xor
mov
in
pop
cs
addr16
test
mov
cmp
jge
push
jns
je
adc
sahf
jb
jle
and
fcomps
outsb
mov
or
mov
test
sarb
xlat
xchg
pusha
insl
lds
pop
jl
jno
std
jmp
jecxz
xchg
sbb
or
jp
repnz
sbb
rclb
test
les
je
dec
movsb
fistpl
inc
sbb
dec
dec
stos
jo
ficomps
outsb
lcall
sbb
jo
mov
push
scas
jb
sbb
in
mulb
out
mov
mov
sbb
xchg
ficompl
das
adc
popa
sahf
push
or
push
mov
gs
in
xchg
add
imul
leave
shr
flds
and
into
or
daa
xchg
xlat
xchg
je
testl
sti
cmp
sub
lret
cmpsl
pop
imul
sti
xor
jmp
shl
jo
xchg
gs
imul
cmpsl
cltd
psrad
pusha
cltd
inc
adc
adc
push
pop
outsb
jp
fisttpll
call
cmpsl
insl
cmpsb
arpl
sarl
pop
dec
xor
adc
push
cmpsl
aaa
jmp
pop
mov
push
push
ret
out
aas
mov
insl
test
mov
add
push
jg
inc
lods
lahf
cmp
xchg
out
inc
mov
popl
adc
push
lods
or
xor
add
xor
rcll
jno
dec
lods
jbe
icebp
imul
xchg
pop
sbb
test
in
ret
data16
test
cs
daa
clc
jmp
adc
in
mov
sbb
push
mov
or
xor
into
mov
into
sub
cmp
int3
and
jbe
fucomi
fisubs
push
rcll
out
popf
xor
xor
push
fists
mov
loop
inc
iret
in
xchg
jno
shrb
movsb
jp
rcrl
rcll
or
inc
add
and
xchg
mov
or
popa
pop
inc
jmp
pop
int
mov
pop
or
inc
sahf
xor
cmpsb
inc
push
rcrb
lods
mov
arpl
sahf
stos
fs
es
xchg
dec
sarb
xorl
jp
mov
dec
into
cs
insb
xchg
dec
test
add
test
popf
fisubrs
iret
in
jnp
dec
sub
pop
outsb
cltd
pop
mov
pop
mov
aaa
push
jbe
xchg
push
fdivl
sbb
xor
sub
xor
into
or
adc
dec
mov
out
lcall
clc
dec
xchg
sbb
sti
sbb
mov
aaa
or
and
xlat
mov
repz
add
sbb
lds
les
out
popf
and
adc
xor
imul
xor
stos
scas
jge
push
aam
addr16
test
and
adc
pop
lcall
mov
test
pop
mov
je
out
inc
cli
loop
push
stos
fistpll
scas
loope
push
inc
outsb
xlat
int
mov
outsl
je
pop
rolb
leave
addb
jecxz
fisttpll
pushf
cmp
std
movsb
bound
add
push
or
mov
mov
lret
dec
push
fstp
push
pusha
xchg
dec
test
pop
jl
movsl
inc
stos
out
sbb
ss
adc
cmc
push
pop
loopne
rorb
dec
xor
icebp
push
mov
pop
cld
in
jne
jl
pop
xchg
pop
or
xchg
ja
pop
sub
push
adc
inc
fwait
inc
int
cmp
push
pop
mov
inc
dec
ljmp
inc
and
cmpsl
jge
jmp
mov
aas
push
sub
sbb
jo
shrl
adc
xchg
xchg
and
mov
jbe
mov
jp
pushf
inc
dec
lret
mov
aad
iret
leave
lcall
insb
pop
loope
call
cmpsl
mov
lahf
cltd
cmp
sub
cmp
or
popf
dec
cmpsb
pop
mov
pop
dec
sahf
jnp
test
pop
ljmp
in
push
sbb
adc
repnz
dec
cmp
dec
sar
outsl
or
outsb
cmp
aam
cmp
inc
rorl
push
dec
or
jle
push
and
outsb
jne
and
inc
push
pop
lret
push
pop
cmpb
and
and
xchg
shl
lds
test
add
iret
popl
in
js
xchg
sub
adc
data16
das
pushf
mov
dec
mov
std
sbb
fstpt
stc
push
insl
push
shlb
fstpt
cld
ficoms
pop
imul
mov
cmc
test
or
adc
pop
mov
jne
enter
add
lcall
out
faddl
push
push
int
arpl
mov
mov
mov
aad
aaa
js
push
sahf
add
mov
ret
jl
inc
mov
adc
stos
stos
lahf
dec
out
mov
xchg
rcrl
pushf
inc
outsb
shlb
dec
loop
mulb
cmpsl
adc
aas
jbe
mov
test
mov
scas
mov
mov
bsr
loopne
test
pop
into
rorl
add
xchg
ret
ret
insb
mov
dec
xchg
cld
sahf
fs
or
adc
rorb
jmp
dec
hlt
adc
adc
xchg
xor
int3
cmp
xchg
adcb
pop
out
ja
out
xchg
dec
lea
add
cmpsb
push
xor
into
fwait
xor
cltd
imul
adc
out
mov
cmpsb
sbb
enter
add
out
ficoms
ds
or
fmul
sbb
sarb
jmp
push
lds
push
stos
sbb
jg
outsw
rorl
sub
addr16
mov
jb
sahf
mov
rcrl
clc
fcomps
jno
cmp
insl
xchg
push
sbb
dec
adc
mov
pop
fstl
mov
mov
push
sahf
mov
loop
test
push
fisttps
and
hlt
pop
jb
nop
xchg
inc
lret
fs
clc
pop
bound
jae
testl
addr16
aaa
repz
iret
je
fmull
mov
daa
mov
sub
push
aad
mov
xchg
xor
adcb
jns
push
pop
outsl
rolb
push
push
in
pop
dec
mov
dec
mov
hlt
lods
xchg
add
out
loop
cmovp
ficompl
lret
inc
push
cmpsl
cmpb
jg
mov
pop
neg
mov
in
mov
sarl
nop
jg
test
out
popa
lret
push
jno
push
mov
out
lea
jo
jae
ljmp
add
stos
je
clc
into
lds
js
addr16
adc
popf
out
sub
andb
and
in
pusha
xchg
ret
insl
push
xor
mov
dec
dec
rcrb
inc
loopne
cmp
add
jg
mov
mov
shlb
pop
lock
movsb
mov
andl
ret
insb
mov
in
cmp
mov
inc
add
pusha
daa
ret
cmp
shlb
or
mov
add
ret
cmp
loop
inc
inc
in
pop
cltd
enter
cmpsb
gs
xor
aaa
mov
nop
mov
adc
stos
aas
push
sbb
push
jmp
push
pop
imul
push
push
push
cmpsl
jmp
shr
mov
mov
stos
adc
bound
adc
dec
mov
daa
out
adc
lahf
arpl
jmp
xchg
pop
adc
jae
pop
stos
cmc
in
or
cwtl
or
scas
cmp
mov
lcall
aas
imul
outsb
sub
cmp
sub
jmp
out
xchg
xchg
je
pusha
pop
adc
mov
inc
movsl
and
adc
dec
cmp
jge
sbb
fiadds
leave
sbb
in
cwtl
sbb
dec
sbb
cmpb
ja
pop
je
loope
sub
gs
add
xchg
mov
fsubrp
jg
aas
sub
xor
push
mov
jnp
pop
xchg
mov
aas
xchg
push
push
jmp
add
lret
cmp
fildl
pop
fistpl
iret
out
mov
sbb
mov
enter
inc
adc
sti
rcll
aad
not
scas
dec
mov
subl
cmp
out
imul
rcl
cs
xchg
shrb
mov
lea
dec
orb
push
int
and
xor
and
mov
popf
sub
enter
jl
and
scas
popf
addr16
inc
fisubl
cmp
sbb
mov
out
inc
push
mov
outsb
or
adc
mov
test
mov
xor
clc
cmp
fnstenv
daa
lahf
cltd
repz
scas
fstps
lret
sbb
cmp
loopne
lret
adc
push
xchg
mov
inc
lods
lods
jl
adc
scas
enter
cmp
mov
mov
fcoms
xlat
in
xor
call
ss
cmp
jmp
out
and
out
ljmp
mov
and
mov
xchg
decl
insl
sub
popa
stc
push
push
cmp
pop
out
or
jnp
loopne
jg
call
into
dec
into
fsubr
push
mov
movsl
inc
mov
inc
ja
push
and
jle
dec
das
test
push
das
lea
or
push
adc
pop
scas
mov
shll
pop
push
in
repnz
dec
add
test
add
push
sti
sahf
movsb
mov
jecxz
push
pop
xchg
push
daa
dec
ja
xchg
test
or
lock
pop
ret
xchg
pop
pop
pop
jae
adc
mov
stos
add
jne
lods
pop
jge
push
iret
iret
insl
rep
lahf
add
shrl
mov
xchg
std
imul
mov
jmp
sbb
pop
xchg
xchg
xchg
pushf
and
push
pop
cmp
add
jbe
sbb
jge
pushf
sbb
jp
cmp
pop
push
dec
jno
mov
mov
je
call
mov
bound
sbb
mov
sbb
jae
dec
adc
mov
mov
lock
adcl
pop
add
jbe
xchg
and
push
push
aas
stos
push
xor
test
pushf
shrl
imul
mov
lea
push
lds
sbbb
jp
cltd
sti
dec
stos
arpl
in
xchg
pusha
inc
add
scas
insl
or
sbb
push
mov
adc
imul
xor
mov
fisubs
lods
mov
push
sub
or
fldenv
sbb
aas
push
jmp
in
in
cwtl
sub
cmpsl
divb
jecxz
arpl
into
push
fistpl
inc
add
xor
dec
out
ret
sub
adc
cwtl
inc
lret
mov
adc
cmp
daa
repz
imul
push
std
jbe
or
ja
pop
data16
adc
pop
imul
adc
jne
mov
and
stos
mov
mov
sbb
cmp
mov
ss
or
push
pushf
pop
dec
in
jb
fidivl
cmp
mov
pop
dec
xor
sub
or
lods
lahf
mov
lods
mov
push
xchg
cmp
mov
adc
fdivl
sti
or
pop
push
es
adc
icebp
leave
fwait
xchg
icebp
push
andb
lahf
pop
push
inc
js
movsl
xor
sbbl
jp
push
sub
push
jge
shl
jge
lea
test
stc
pop
mov
mov
jg
sahf
push
data16
aam
in
cmp
mov
pop
jp
sbb
xor
xchg
add
fs
fadds
cmp
xchg
pop
lret
sub
push
movsb
cmc
sub
loopne
fs
into
out
shl
jns
push
test
push
mov
mov
cmp
mov
repnz
jle
out
ret
imul
repz
inc
or
fisubrs
pop
decl
insl
add
je
cmp
scas
push
mov
and
fwait
imul
out
push
in
mov
adc
xchg
outsl
sub
inc
sbb
loope
inc
mov
adc
scas
jne
repz
sbb
sub
add
cmpsb
ja
das
fisttpl
daa
adc
add
out
rclb
xor
imul
loopne
notl
je
inc
mov
and
popa
cmp
xor
mov
add
or
push
pop
dec
mov
cmp
popf
lea
cwtl
aam
out
movsl
pop
push
push
sti
push
cmc
add
sub
push
ss
jmp
stos
or
repnz
dec
xor
inc
jne
mov
and
mov
push
sbb
nop
int3
xchg
push
movsb
lahf
inc
add
add
push
je
or
xor
fildl
push
inc
dec
mov
loopne
outsb
xchg
rcrb
jg
dec
add
ja
push
adc
and
add
testb
outsb
stos
out
rolb
icebp
aas
jge
sub
xchg
push
jecxz
jge
jp
incb
mov
pop
xchg
in
sub
sarl
aad
in
subb
test
enter
cmp
fisubrs
jmp
out
pop
mov
and
xor
psubusw
pusha
cwtl
dec
add
or
clc
out
push
lret
repnz
leave
call
movsl
adc
jp
lret
scas
dec
lods
loopne
enter
int
sti
xchg
push
daa
jne
push
adc
sub
push
daa
outsl
add
sbb
lahf
xor
sarl
xlat
cmp
mov
push
call
orb
lret
sbb
test
int
pop
out
jns
mov
xlat
adc
dec
sbb
push
mov
int3
iret
fstl
in
jl
loop
addb
add
jno
sahf
testb
lea
int
outsb
mov
or
jp
clc
mov
nop
sub
int
pushf
mov
push
mov
stos
lret
sbbl
lret
jg
inc
sub
jle
lcall
jbe
clc
cmp
or
add
xchg
das
and
insl
cs
cmp
mov
sub
fdivrl
sarl
jmp
outsl
xchg
imul
popf
and
jne
fwait
sub
xor
inc
adc
insl
test
pop
jmp
mov
sub
push
fnsave
ret
mov
cli
jno
pop
ja
outsl
sbb
pop
mov
push
inc
lahf
push
daa
mov
mov
scas
into
sbb
fwait
inc
mov
loop
jae
push
pop
xor
pop
cmp
fwait
bound
mov
mov
dec
xchg
in
push
mov
pop
mov
aas
std
add
and
lret
imul
ljmp
jge
gs
rorl
push
sub
pop
xchg
fidivrs
push
mov
scas
in
cmpsl
mov
andl
scas
js
fidivs
stos
cmp
inc
lods
push
push
shrl
dec
mov
and
mov
pop
add
jl
call
mov
ret
mov
imul
adc
push
outsl
sbb
add
andb
inc
addb
sahf
cmc
sbb
cmp
lea
sarb
pop
dec
push
sub
fbstp
les
cld
addr16
rorb
pop
adc
mov
adc
jge
rolb
scas
fs
icebp
lcall
inc
jmp
pop
movsl
fsubrl
and
loop
pop
mov
icebp
movsl
js
dec
push
aam
dec
xchg
pop
push
sahf
lret
push
jns
add
in
js
ret
or
aaa
inc
popf
jno
leave
sbb
ss
rcl
or
jns
fimull
out
stc
jo
pop
aas
stc
mov
add
jmp
sub
ret
sub
sahf
jbe
int3
sub
rcrl
add
into
pop
xchg
and
xlat
and
into
add
and
dec
pop
mov
cmp
jge
dec
icebp
lret
nop
xor
pop
sbb
cmc
sbb
dec
test
cmp
push
pop
shrb
stos
sarb
sbb
sub
inc
cs
sub
das
pop
dec
int
push
jbe
or
repz
icebp
sub
jg
adc
xor
lods
push
dec
pop
mov
pop
mov
gs
cwtl
push
xchg
ljmp
stos
mov
mulb
inc
sahf
dec
psubw
dec
test
and
pop
xchg
mov
lods
nop
test
lock
and
sti
adc
icebp
adc
pop
rclb
xor
mov
xchg
mov
stos
stos
dec
pop
fidivl
arpl
lock
sbb
hlt
aas
mov
icebp
loope
sahf
pop
adc
test
adc
pop
xchg
hlt
outsb
call
mov
push
rorb
push
int
ret
das
in
adc
cmp
mov
mov
movsl
outsb
shrb
sbb
int3
xor
dec
mov
jns
and
inc
sahf
mov
lret
add
pushf
pop
or
cli
loop
aam
pop
push
andb
add
in
sub
xchg
rcll
inc
imul
jae
mov
addr16
pushf
sbb
nop
dec
cltd
scas
inc
scas
adc
sbb
and
push
sub
repz
in
insl
mov
std
or
pushf
decb
push
jo
push
jno
dec
div
pop
div
icebp
lea
testb
mov
cmp
xchg
js
push
mov
pop
xchg
or
fs
clc
sub
movsb
jge
lcall
fldt
popa
mov
mov
dec
shrl
mov
imul
addl
test
or
jl
out
stc
sub
test
das
push
imull
insb
and
and
out
pop
leave
int3
ss
test
jmp
inc
xchg
push
sbb
movsl
push
mov
jle
daa
jmp
mov
mov
or
push
xchg
push
adc
xor
popf
sbb
out
dec
mov
pop
jnp
cmp
sub
cmp
and
loop
mov
es
or
push
orl
je
popa
sub
jge
mov
shl
and
dec
lods
dec
sbb
aas
push
xchg
int
outsb
fwait
adc
jns
push
fidivl
insb
test
lods
dec
mov
sub
pop
in
sbb
aad
cmpsb
inc
dec
cmpsl
stos
les
popa
fisttps
shlb
inc
movsb
outsl
pushf
inc
in
leave
xor
popf
dec
movsl
bound
decl
pop
mov
jae
cmp
ret
pop
fwait
gs
sbb
lcall
mov
fldl
mov
pop
test
add
movsl
mov
cmc
iret
addr16
pop
sub
shlb
mov
fists
insl
lcall
mov
mov
imul
mov
jae
movsl
inc
xchg
adc
xchg
inc
push
lret
cmp
lahf
xchg
mov
cmpsb
add
js
xchg
fwait
imulb
pop
out
mov
mov
stos
mov
push
sbb
lds
inc
ret
scas
outsb
cltd
rcr
dec
fsubs
outsb
addb
sarl
inc
addb
and
or
push
aas
xor
mov
imul
dec
outsb
push
movsl
rcl
jae
fwait
inc
and
jbe
cmp
lds
pop
flds
xorl
sub
and
cmpsl
hlt
fiadds
lret
stos
int3
mov
add
push
mov
cmpsb
pop
sbb
mov
xchg
mov
ret
jne
push
pop
push
pop
mov
subl
outsb
inc
fdivrl
lock
fbld
jge
lcall
sub
sbb
stos
mov
pushf
sbb
push
inc
cs
jp
cmpl
insb
mov
push
fdivrl
mov
sbb
lds
sbb
jmp
xlat
dec
out
nop
data16
shrb
mov
shll
ficomps
jl
int3
sbb
push
insb
aam
lahf
cmp
leave
dec
xchg
imul
mov
add
dec
ret
hlt
sub
xor
cmp
outsl
adc
ret
inc
push
sbb
mov
jecxz
sbb
adc
int
gs
das
push
xchg
rorl
idiv
sub
sbb
inc
popf
andl
mov
xchg
outsl
xchg
xchg
cltd
clc
addr16
adc
add
enter
repz
cmp
ja
cmp
fwait
out
imul
jle
mov
cmpsb
xor
adc
mov
sarl
das
lret
addr16
push
mov
fidivs
jns
dec
loope
mov
adc
fs
fwait
shr
fbstp
push
xchg
ljmp
mov
mov
sti
aas
cld
adc
xchg
cmp
and
cmp
shrb
jle
jns
aam
dec
mov
pop
inc
sbb
lea
adc
iret
push
mov
add
ss
pop
lods
pop
movsl
inc
mov
in
dec
push
lods
dec
pop
mov
iret
loopne
adc
jecxz
jns
mov
xchg
insl
arpl
lret
mov
inc
cmc
dec
cs
insb
clc
imul
jp
mov
mov
adc
sub
stos
ja
sbbl
das
stos
mov
sbb
mov
test
pop
push
sub
dec
jae
xchg
xchg
and
sub
adc
adc
xlat
pop
bound
cmp
jae
inc
inc
dec
sarl
ret
stos
les
push
inc
mov
xor
xchg
cmpsb
sub
movsb
adc
mov
add
call
inc
dec
adc
dec
clc
xlat
mov
fnsave
cli
push
roll
and
fiaddl
cmp
lea
lcall
push
and
mov
sahf
scas
in
jge
cmp
pop
repnz
xor
dec
push
dec
or
sbb
pop
mov
adc
shrl
mov
nop
cs
mov
cmpsl
dec
leave
fldl
cmp
xorb
test
mov
daa
pop
xchg
lret
jle
adc
dec
pop
into
cmpsb
repz
pop
frstor
cmp
pushf
call
shll
fildl
test
inc
jne
push
gs
sub
icebp
jne
push
in
js
jecxz
mov
pop
call
xchg
lea
std
adc
fs
leave
mov
in
enter
push
nop
add
xchg
xorl
test
dec
jle
stos
test
xchg
shrb
mov
int3
jmp
in
movsb
adc
test
push
les
cs
andb
sbb
adc
inc
sbb
stos
jle
jl
enter
into
mov
push
aam
mov
dec
js
rorb
xchg
mov
movsb
dec
sti
not
push
or
in
arpl
loopne
adc
inc
adc
jg
push
dec
xor
xchg
lret
aas
push
rclb
mov
mov
fildl
mov
mov
sbb
nop
add
test
xchg
xchg
fnstsw
adc
sbb
cmpsl
mov
jmp
gs
add
cmp
lret
or
ds
in
jno
pop
lods
pop
push
jae
in
data16
daa
ret
nop
adc
mov
inc
push
minps
add
ja
add
mov
xchg
or
xor
adc
in
jmp
inc
sub
or
or
ss
imul
push
cltd
push
mov
mov
fstl
xchg
call
sbb
jmp
push
lods
push
sbb
mov
repnz
xor
enter
inc
movsb
push
movsb
bound
cmp
fstps
xchg
rolb
jecxz
data16
ja
inc
mov
ja
outsl
mov
aam
pop
cwtl
pop
adc
dec
inc
mov
pop
mov
jle
sbb
mov
cmp
xchg
dec
test
enter
fisubrl
leave
cmp
jbe
dec
in
imul
sbb
inc
je
cltd
push
ret
xchg
push
rcl
or
mov
rorl
mov
mov
test
pop
call
push
xchg
es
mov
scas
lret
xor
cmp
cmp
in
sbb
cmp
std
sub
cmp
and
jo
aad
fmuls
push
ljmp
push
sbb
xor
jae
mov
mov
aad
dec
das
daa
rcr
inc
rcl
jno
stc
ljmp
xchg
xor
mov
push
pushf
pop
fwait
sub
or
dec
cmp
jnp
mov
or
cwtl
pop
in
les
adc
xor
movsb
add
push
pop
pushf
xchg
rcrl
jne
cwtl
dec
mov
xchg
jbe
loop
mov
sbb
aas
hlt
test
insl
lret
cmp
pop
rcrl
in
xor
sub
jmp
and
sbb
lock
mov
lret
lcall
mov
inc
adc
sahf
popa
and
lcall
push
fmull
repnz
ret
ljmp
adc
adc
je
pop
movsl
dec
lahf
jbe
jns
mov
or
push
int
and
mov
pop
xchg
cli
xlat
push
mov
adc
xchg
lret
mov
dec
mov
ja
aam
je
rorl
inc
lods
bound
lods
shrl
imul
cmp
mov
push
cmp
adc
push
mov
inc
cmc
lcall
and
dec
lods
jnp
xchg
mov
mov
sub
and
jbe
xchg
push
or
je
fucomip
push
mov
sub
push
cmp
cmp
xchg
cmp
add
push
adc
ds
push
cld
iret
rcl
add
xchg
push
or
and
stos
push
and
adc
enter
jae
in
fs
bound
xchg
pop
inc
pushf
js
mov
stos
flds
out
add
fwait
addr16
xor
hlt
pop
mov
add
orb
xor
and
mov
pop
jle
sbb
or
arpl
mov
mov
pusha
lods
fs
pusha
sar
push
mov
push
mov
add
imul
popa
lods
inc
mov
pop
pop
mov
push
cmp
or
jns
popa
jo
xor
and
mov
scas
imul
inc
test
sahf
nop
test
xor
pop
and
push
popf
or
jns
cli
test
inc
movnti
mov
ja
adc
cwtl
fsub
stos
jmp
stc
or
sub
out
xchg
xchg
mov
lahf
into
dec
popf
movsb
bound
in
sbb
mov
mov
out
fsubr
push
fisttps
or
movsb
mov
inc
jo
mov
inc
push
mov
scas
imul
dec
pop
fstl
int
lahf
cmp
add
das
inc
xchg
into
and
add
push
loope
out
in
fcoms
xchg
aad
xchg
cmp
icebp
cwtl
lret
xor
adc
mov
gs
push
push
sbb
mov
inc
jp
scas
ljmp
imul
mov
ljmp
gs
inc
movsb
aad
stc
nop
inc
test
inc
add
adc
enter
or
mov
jb
cmp
cli
sahf
adc
sbb
inc
popf
jg
mov
mov
push
mov
test
fs
dec
sbb
jp
scas
bound
mov
shrl
movsb
insl
rclb
das
jb
push
lock
and
or
incl
enter
aam
fisubs
int
scas
rolb
add
dec
inc
in
cmpsl
pop
lcall
push
outsb
vphsubdq
mov
mov
jp
dec
adc
or
jo
imul
dec
movsb
push
xchg
inc
stos
push
fwait
inc
sbb
push
dec
xor
rclb
iret
xor
and
scas
sbb
mov
mov
cltd
jge
push
xor
insb
and
hlt
xchg
pop
adc
xor
data16
dec
mov
je
jbe
sbb
and
lods
pop
popf
out
das
xchg
fsubrl
sbb
insb
les
test
dec
scas
imul
fcomps
shlb
sub
dec
xchg
lds
pop
xlat
add
rcrb
fstpl
xchg
xor
xchg
mov
fnstenv
adc
dec
icebp
stc
out
out
xor
mov
sub
and
mov
cmp
and
mov
push
fildll
lret
in
or
cmp
andl
cli
adc
fiadds
mov
xchg
inc
loop
clc
and
sbb
in
pop
jp
fiaddl
enter
pop
push
ljmp
es
arpl
out
sub
out
cmc
push
and
sahf
lret
ficoms
test
add
mov
rcl
push
fidivrl
nop
pushf
mov
xor
mov
js
les
mov
xabort
aas
xchg
testl
shll
aad
sub
push
aaa
and
jp
dec
cmpsl
fistpl
aas
inc
xchg
dec
mov
push
inc
adc
test
pop
mov
xchg
jmp
mov
out
sti
push
mov
das
in
push
loop
lret
mov
dec
mov
insl
xchg
add
icebp
xor
icebp
add
mov
or
fstps
lds
or
fdivs
push
aam
rclb
push
cmp
pop
push
adc
dec
loop
adc
orb
add
call
and
add
sub
std
into
push
mov
push
incl
data16
cli
in
push
cmpsb
dec
push
mov
mov
adc
or
sahf
jecxz
mov
push
push
adc
dec
sbb
xchg
sahf
fwait
mov
ds
xor
mov
dec
sbbb
add
fistps
jecxz
leave
inc
mov
xchg
mov
gs
sbb
test
xchg
push
popf
lea
outsl
or
lret
gs
cmpsl
outsl
mov
jnp
aam
lds
dec
mov
ljmp
mov
xor
push
iret
or
sub
cmc
mov
aas
lock
das
gs
and
or
push
jne
sti
xor
int
inc
out
out
arpl
aam
push
mov
inc
int3
cli
pop
lds
in
loop
mov
xchg
in
into
adc
mov
lods
or
cmp
push
jle
or
popf
inc
xchg
and
or
and
insl
cmp
pop
shlb
mov
rolb
and
inc
mov
lods
push
fistpll
jp
and
sbb
adc
lcall
lret
cmc
add
pop
xchg
xchg
out
mov
setle
jno
mov
fs
pop
mov
mov
loop
pop
addr16
xchg
dec
sub
push
and
dec
mov
xchg
jmp
fs
push
and
int
mov
data16
push
sbb
adc
inc
xchg
push
pop
pop
pop
inc
xchg
xor
pop
ret
xor
dec
jae
and
pop
pop
xor
sbb
fdivs
out
aad
xlat
and
pushf
xor
hlt
adc
inc
shr
fs
push
mov
add
arpl
xor
cwtl
scas
movsb
push
push
aam
pop
sub
jo
mov
xor
cmp
fidivs
push
fbld
inc
xchg
in
sub
mov
jae
leave
and
imull
gs
fsubrl
lods
imul
fs
ja
mov
popa
sbb
insl
dec
xchg
jo
jmp
inc
mov
rcrl
pop
sbb
xchg
cmc
jbe
xor
lea
enter
jg
out
pop
dec
and
call
cmp
leave
cmp
sbb
mov
mov
push
pop
push
in
add
jne
mov
push
cmp
cltd
in
fnsave
xorl
imul
pop
push
aaa
jmp
pop
xchg
and
mov
nop
cmp
ss
aas
xlat
or
fisttpl
ljmp
pop
rorb
pop
aam
gs
pop
ret
cmp
mov
and
icebp
xchg
jl
test
inc
mov
loope
mov
movsb
sub
in
in
ja
mov
popf
aaa
or
jle
out
in
jge
loopne
mov
or
mov
ret
dec
ret
cmc
xor
mov
mov
cmp
jne
pop
push
fistps
orl
lods
sbb
mov
fcmove
pop
xor
and
inc
xchg
xorb
xchg
push
xchg
sti
xor
push
leave
orl
pop
aaa
sub
out
rcrl
shl
int3
enter
lock
popl
fcomip
jl
dec
xchg
dec
dec
aam
fidivrl
addr16
pop
and
mov
push
sti
dec
test
jo
add
push
and
or
leave
pop
in
lea
icebp
cmp
pop
push
inc
repz
dec
and
push
fistpl
push
dec
sub
int
sbb
js
lds
rorb
cmp
dec
fcomps
sbb
outsb
cmp
push
arpl
lds
mov
or
push
mov
adc
adc
push
cmp
insb
fcmove
fwait
jae
fstl
lds
ljmp
es
sbb
aaa
ficoml
ret
cmp
mov
sbb
into
jge
imul
cwtl
add
mov
test
mov
out
mov
rol
jge
mov
stos
or
scas
addr16
pop
xchg
imul
bound
mov
add
popa
mov
mov
sbb
andb
nop
jns
loop
popa
and
jne
sbb
movsw
addr16
pop
test
and
leave
ss
fdivs
out
and
add
or
push
shrl
stos
mov
mov
cld
in
jl
pop
add
cmp
dec
jmp
aaa
insl
outsl
mov
scas
jnp
pop
sarb
push
iret
mov
shrl
es
div
insl
or
jge
out
es
fstl
xlat
xchg
daa
add
out
imull
les
fistl
xchg
sub
pop
sub
arpl
testl
bound
or
pop
scas
jg
bound
mov
pop
dec
jb
sub
out
imul
aam
xchg
and
jne
push
sbb
ja
jecxz
sub
jb
out
loopne
outsl
cmp
idiv
das
imul
ret
dec
popf
pushf
movsl
jno
bound
pusha
pop
adc
and
jp
jns
cmp
test
push
negl
ljmp
xor
add
xchg
mov
mov
int3
and
push
fists
ss
jecxz
rorb
mov
imul
pop
scas
fmull
xchg
adcl
xorb
push
shrl
cmp
mov
clc
pop
inc
aad
insb
jecxz
add
push
inc
add
sarl
imull
frstor
push
out
fnstsw
or
stos
inc
mov
inc
popa
cwtl
sub
out
scas
lret
xchg
or
cld
push
outsb
popf
inc
sahf
or
xchg
xchg
mov
clc
push
outsl
adc
rcll
lock
stos
popa
push
pop
inc
pop
addr16
push
dec
movsl
jbe
lds
sbb
xchg
dec
mov
outsb
sbb
push
imul
ja
fdivrl
sarb
dec
add
and
mov
pop
and
mov
push
mov
pop
mov
adc
das
int
mov
mov
push
adc
andb
jp
das
testl
pop
pop
pop
cwtl
lock
ds
dec
daa
mov
sbb
pushf
mov
sbb
or
in
es
js
ljmp
cmp
fwait
or
push
repz
adc
ljmp
push
roll
jmp
mov
mov
xor
mov
xlat
push
sub
sbb
pusha
cmp
mov
scas
jae
mov
pusha
mov
out
aad
lods
lods
mov
pop
sub
movsl
in
dec
or
out
cli
push
add
mov
pushf
xchg
int
and
arpl
dec
pushf
mov
mov
rcr
iret
xchg
jl
sub
mov
xchg
fcomps
add
fidivs
pop
mov
daa
sbb
popf
icebp
int3
pop
leave
lahf
xchg
aam
dec
xlat
mov
pop
sarb
push
inc
rclb
in
push
in
lcall
push
rcll
js
mov
mov
movsb
xchg
loope
sbb
sub
jmp
dec
cmp
jo
push
insl
or
sub
aaa
psubw
lds
ret
je
test
pop
fldt
adc
std
mov
sub
sub
int3
sbb
mov
and
adc
sti
shrl
testl
aas
mov
orl
dec
xchg
dec
scas
jge
dec
adc
xchg
insl
cmp
mov
cmp
pushf
bound
in
fistpl
les
push
xchg
mov
incb
mov
cwtd
sbb
stos
aad
inc
mov
es
lods
pop
sub
lahf
jp
push
hlt
jne
fsubrs
loop
inc
mov
mov
sahf
insb
xchg
fldl
lds
insl
stos
fildll
sub
pop
popa
out
adcb
and
movsl
popf
sub
adcb
or
int
pop
pop
pop
ret
arpl
sbb
out
cltd
cmpsb
xor
mov
imul
jmp
mov
shll
push
cmp
lock
adc
stos
out
testl
fldl
in
push
rcl
loop
sub
mov
aas
in
sbb
pop
or
cmp
aam
dec
shl
sbb
addr16
aaa
inc
arpl
jbe
and
imulb
scas
ja
adc
adc
mov
or
jp
add
int3
lock
sbb
pop
fucompp
push
mov
xchg
iret
stos
fsubs
ss
ljmp
std
dec
mov
inc
outsb
adc
sbb
dec
push
pop
add
cmp
insl
jge
lods
call
sbbl
jbe
ja
pop
roll
pop
addr16
test
insb
push
seta
gs
adc
cmova
mov
loope
mov
or
dec
mov
sbb
insb
bound
xchg
aad
cmp
es
addr16
rolb
sub
fcmovnb
repz
fildll
repnz
push
adc
out
test
fldcw
sub
add
enter
add
sbb
cs
imul
push
insb
mov
add
aad
jae
clc
mov
push
push
xchg
fs
push
inc
sbb
in
roll
push
mov
sbb
xchg
lret
and
cli
or
jae
popf
ljmp
testb
mov
fists
fs
popf
stos
bound
cmc
nop
inc
mov
lods
stos
pop
dec
push
mov
sbb
imul
insl
and
fidivrl
dec
insb
xrelease
iret
es
xchg
or
cmp
shrb
test
mov
mov
xchg
dec
cmp
int
inc
xor
test
xchg
outsb
inc
mov
and
cmpsl
or
in
mov
inc
daa
xchg
push
and
add
mov
stc
nop
add
jmp
pop
pop
frstor
xchg
shlb
stc
inc
sahf
push
test
add
nop
push
mov
in
cmp
test
ss
jecxz
jecxz
jo
jb
popa
add
cmpsb
push
mov
rolb
pusha
mov
insb
mov
popa
xchg
aad
dec
loop
push
out
mov
and
mov
mov
push
cld
jl
lods
fcoml
cmp
adc
ret
dec
pusha
loope
adc
add
jae
xor
outsb
repz
dec
xchg
pop
cmpl
jp
mov
bound
mov
adc
andb
add
xor
cmp
outsb
cld
fs
call
es
push
inc
push
pop
xchg
inc
jge
sbb
lods
adc
outsb
test
arpl
xchg
add
sbbl
outsb
inc
orb
leave
mov
test
pusha
outsl
insl
or
adc
add
mov
stos
cwtl
in
ret
leave
mov
sar
push
int
and
lock
paddb
clc
pop
and
pop
hlt
sub
xor
ret
and
cwtl
pop
mov
jno
pop
jp
push
mov
mov
xchg
cwtl
sub
xor
pop
mov
sbb
outsb
and
jge
sbb
ret
pop
movsb
popa
pushf
adc
mov
repz
push
into
aad
cli
mov
test
repnz
nop
ror
movsb
push
mov
xchg
mov
mov
repz
jg
iret
or
add
push
jecxz
add
es
mov
stc
ja
ret
cmp
setge
or
fldcw
test
sbb
daa
push
mov
sbb
sti
adc
and
sbb
xchg
mov
hlt
test
icebp
jbe
cld
call
ficoms
sbb
in
out
sbb
sub
mov
push
xchg
or
lds
push
out
enter
or
mull
cs
lods
int3
xchg
mov
out
inc
mov
rol
mov
xchg
lods
imul
sub
xchg
in
inc
outsl
jns
pop
stos
cmc
cmp
out
es
mov
and
push
mov
jmp
xchg
pusha
lock
push
inc
cwtl
pop
sub
add
test
mov
push
mov
repz
jg
lds
cld
sub
insl
or
jge
jmp
test
and
sbb
in
add
fsubl
cmp
jg
scas
jge
imul
scas
imul
mov
sub
stc
pop
cmp
mov
or
sub
sbb
in
rdpmc
mov
imul
out
imul
add
pop
aas
divl
sbb
gs
add
out
cmp
or
inc
dec
fwait
inc
shr
clc
sahf
sbb
jg
mov
inc
adc
xor
add
pop
nop
push
out
and
add
imul
sub
push
jl
pop
mov
arpl
lea
subb
xchg
shl
scas
lahf
adc
lcall
xchg
lret
ljmp
lods
loop
xchg
mov
mov
sub
cmp
std
arpl
lahf
testl
pop
loope
pop
out
sbb
mov
ret
inc
popa
arpl
mov
and
mov
xchg
fidivrl
push
sbb
iret
sbb
inc
mov
movsb
fidivs
jecxz
in
adc
insl
jmp
sar
shlb
stos
and
out
jl
es
add
xor
inc
push
int
push
or
xlat
cmpsl
insl
lods
loope
int3
aad
cmp
lods
inc
hlt
add
push
test
seta
pop
push
leave
lret
jge
call
fwait
and
popf
adc
lods
push
test
int3
int
rorb
adc
push
das
fiadds
mov
add
lods
cmpb
xchg
inc
mov
lock
sub
test
mov
cld
cli
sub
into
jae
mov
cmp
mov
gs
jo
nop
xchg
bound
out
sar
out
adc
leave
cmp
cmp
pop
adc
xlat
xchg
sbb
jecxz
inc
lods
aam
dec
xor
and
fnstenv
shll
lods
gs
out
sbb
insl
call
push
lcall
daa
xor
add
shlb
pop
push
cmpsl
inc
repz
xchg
pop
push
sti
sbbl
lret
mov
in
enter
pushf
outsl
ret
jo
dec
mov
ja
xlat
int
xor
cmpsl
inc
data16
leave
and
and
push
aad
aaa
insl
mov
in
sub
cmpsl
push
sub
sub
or
or
inc
ret
in
lea
call
testb
rorl
or
adc
and
mov
xchg
jmp
xchg
xchg
or
je
jg
adcl
addr16
dec
into
sbb
icebp
lret
ret
mov
mov
cmpsb
stos
adc
adcb
or
inc
bound
push
jmp
push
ror
mov
inc
gs
mov
adc
inc
ljmp
outsb
sub
aam
jmp
in
pop
xor
es
xor
pop
sbb
push
fbstp
pop
cmp
lret
daa
gs
scas
lock
call
mov
vmovd
in
push
xchg
outsl
popl
mov
mov
imul
dec
push
cmpsl
jae
or
out
insl
test
cmc
imul
xchg
xor
mov
inc
add
cli
ss
mov
push
lods
pop
adc
jge
xchg
fs
push
mov
call
mov
pop
lods
out
sub
lret
jp
out
loope
mov
fstpl
sti
pop
mov
sub
and
enter
sub
or
frstor
loop
push
scas
fmull
mov
add
adc
mov
xor
mov
push
lcall
jnp
es
xchg
dec
cli
stos
jbe
lret
xor
cmp
movsl
inc
stos
std
or
inc
inc
mov
lds
fimull
mov
sub
jmp
rclb
xchg
mov
adc
dec
ret
je
popa
movsl
arpl
and
cltd
inc
push
mov
jbe
fistpl
lret
cmp
mov
test
cmp
cmpsl
pop
mov
mov
leave
cmp
decb
pop
lea
add
mov
inc
int3
sbb
xorb
in
push
xchg
dec
mov
aaa
cmp
mov
inc
mov
xor
mov
xlat
mov
pop
imul
flds
out
test
jbe
imul
adc
jo
ror
int3
cmp
sub
mov
or
imul
hlt
ds
cmpsb
cltd
sub
test
in
mov
mov
jecxz
xor
dec
xabort
xor
loop
fistps
into
cmpsl
xor
and
shlb
pop
lock
lret
cmp
push
pop
fistpl
dec
sti
ljmp
adc
or
notl
rcrl
imull
lods
jnp
dec
xchg
imul
jno
xor
or
cli
xor
je
cmp
gs
lds
jo
out
xor
ret
fs
std
push
inc
push
ret
pop
out
inc
aaa
test
pop
mov
scas
loop
cmpsl
or
sub
sub
jo
mov
stos
sarl
push
adcb
cwtl
sub
mov
dec
cmp
pop
inc
push
insl
ret
shll
mov
xchg
adc
sub
xor
pushf
add
daa
mov
lcall
cwtl
mov
pop
test
aas
js
mov
mov
jg
xor
push
mov
push
dec
repnz
pop
push
out
fwait
ds
add
out
movsl
cli
or
pop
add
ret
in
in
lds
pop
cmp
pop
hlt
dec
out
fmul
jbe
lcall
iret
jbe
xor
cmc
adc
pop
mov
pop
ljmp
adc
mov
stos
adc
rol
sbb
pushl
int3
sahf
cmp
movsb
mov
insl
outsb
jne
insl
pop
push
out
inc
push
mov
stos
ja
insl
fcomp
push
insb
adc
arpl
xor
fcomi
add
sub
jno
fildll
data16
mov
sti
push
out
mov
rcr
add
negb
in
bnd
aas
dec
push
dec
pop
addr16
stos
stos
jns
xchg
push
sub
dec
imul
out
inc
cwtl
jno
cmp
sahf
loop
clc
fstp
insb
stos
test
mov
and
shlb
xchg
popa
mov
push
jge
mov
repnz
xchg
pop
ret
loope
sbb
dec
dec
xchg
and
jg
or
inc
popf
bound
es
popa
popf
push
aad
push
adc
mov
jecxz
mov
pop
mov
or
sbb
data16
add
insl
lcall
aam
shl
xchg
dec
cmp
mov
cmp
xchg
cld
push
scas
push
mov
cltd
int
or
daa
mov
data16
fstps
lods
in
push
mov
mov
into
jl
dec
pop
aad
in
sub
xchg
jne
push
cmp
pop
in
ja
into
out
jb
sahf
xchg
fdivrl
leave
out
call
negb
lds
in
pop
mov
in
push
out
lea
insb
iret
mov
enter
leave
fstpt
push
ret
fwait
mov
jmp
sub
sub
fbstp
xchg
cmp
sub
test
shlb
cli
cmp
int
or
adc
cmp
sbb
xlat
xor
movsb
and
pop
xchg
fisubrl
in
cmpb
cmp
and
fcomps
cmp
fs
sbb
fimuls
inc
subb
and
fcoms
xchg
mov
leave
out
or
ret
inc
adc
sbb
stc
adc
xchg
pop
and
jbe
in
cmp
stos
mov
cli
adc
decl
or
cmpsl
gs
les
pop
movsb
push
mov
pop
ljmp
fnsaves
cli
sbb
inc
or
push
dec
mov
lea
sahf
pushf
inc
jb
pop
fiaddl
adc
lret
xor
and
or
stos
inc
or
adc
sarl
aam
mov
pop
shl
cmp
jno
repz
jbe
iret
sbb
idivl
test
in
lods
mov
sub
adc
ret
xor
int
jbe
rcrb
imulb
adc
or
push
leave
mov
dec
lahf
jle
arpl
dec
mov
les
xchg
inc
es
lcall
mov
or
bound
and
das
jno
dec
nopl
sahf
inc
mov
xchg
test
or
inc
sbbb
cvttps2pi
cmpsb
jno
jnp
mov
mov
test
xlat
and
xchg
pusha
add
aam
push
idivl
add
loopne
call
out
pop
inc
sub
loopne
in
adcl
adc
cmc
and
movl
pop
std
lcall
ja
inc
mov
pop
into
xor
xchg
add
adc
pop
mulb
xchg
mov
clc
push
pop
arpl
pop
mov
or
push
push
inc
lods
inc
shll
cltd
insl
push
inc
cmp
mov
pushf
jo
cmpb
cltd
jecxz
dec
ficompl
pop
pusha
push
jns
test
popf
pop
cmpsb
inc
pusha
pop
sbb
mov
pop
outsb
stos
jns
and
xor
clc
sbb
sub
or
int3
test
orb
pop
mov
repnz
cs
jecxz
jnp
shll
imul
adc
je
and
subl
ljmp
mov
sbb
inc
into
dec
popf
mov
push
inc
fstps
jb
fldl
call
nop
jb
mull
sub
cmp
sbb
sub
push
insl
sbb
mov
sub
xor
xchg
inc
aam
popa
in
mov
xor
les
fnstenv
into
mov
cmp
pusha
pop
clc
push
push
cwtl
stos
adc
mov
jg
cmc
adc
push
mov
fcmovne
xor
xchg
test
sarl
inc
add
nop
out
and
cltd
inc
cmpsb
out
pop
hlt
mov
mov
mov
pop
daa
cmpsb
sar
and
xor
lcall
out
and
inc
or
jecxz
outsl
xchg
lds
fcomi
rorl
mov
push
xchg
add
cmp
lds
push
test
pop
mov
hlt
nop
and
and
add
cmp
fnstenv
sub
hlt
sbb
cmp
rorb
ret
sbb
and
jmp
pushf
clc
and
cltd
sahf
push
jo
into
pop
aad
fsubl
mov
xor
mov
push
fistpl
jle
mov
dec
cmc
dec
aam
loope
repnz
out
adc
xlat
sub
or
sub
into
adc
aaa
push
pop
out
push
xor
cmp
fisttpll
fstl
push
aam
mov
jle
in
pop
clc
shrl
jge
popf
gs
jo
and
or
jo
repz
aad
repnz
jb
cltd
push
adc
inc
sar
mov
arpl
in
dec
jb
int
sbb
jg
add
mov
fisttps
or
cltd
lret
xchg
imul
test
lahf
xchg
in
mov
fbstp
push
inc
mov
xor
cmpsl
js
or
loopne
lock
daa
lods
jp
cmp
sahf
lret
cli
sub
cmpsl
imul
mov
mov
es
cmp
aam
icebp
adc
leave
adc
clc
es
pop
xor
push
or
cwtl
or
stos
push
cwtl
cwtl
loope
je
stos
mov
shll
push
loop
popa
out
fbstp
xlat
mov
inc
ja
shll
out
fisttpll
in
and
dec
andb
cmp
aam
lcall
pop
push
mov
adc
jp
outsl
dec
ss
xchg
jecxz
fidivrs
mov
add
mov
dec
xchg
sbb
fildll
in
pop
xor
sub
dec
adc
dec
inc
mov
lret
in
sub
mov
mov
int3
adc
dec
outsb
sahf
sbb
xor
jle
push
jecxz
jno
xchg
jg
mov
aad
fwait
popa
cmp
and
sbb
shrb
inc
shlb
leave
sbb
and
inc
stos
sbb
pop
jmp
stc
and
sbb
and
sarb
outsb
lock
adc
arpl
gs
in
rorl
aaa
dec
pop
arpl
nop
push
jp
test
jb
jae
daa
movsl
dec
mov
lock
fisubrs
lods
mov
leave
adc
sub
inc
mov
or
add
aad
pushl
cmc
sbb
xor
inc
lahf
push
filds
sub
leave
add
add
jmp
jb
addr16
imul
cmc
cli
sub
mov
jg
add
popf
mov
shrb
jae
cmp
pop
mov
inc
xchg
in
and
addr16
dec
jg
sbb
call
shll
jl
fwait
sbb
sbb
mov
mov
dec
aas
mov
mov
dec
lods
adc
inc
inc
test
dec
pop
cmpsb
sbb
jns
test
add
ja
lret
xchg
in
adc
insb
arpl
xchg
mov
pop
in
sbb
push
add
xor
sub
ljmp
mov
fsubp
hlt
mov
mov
mov
aaa
lock
inc
jle
and
sbb
mov
jbe
inc
mov
loopne
or
test
and
es
mov
jne
and
es
cmp
jmp
les
movsl
pop
pop
repz
lahf
inc
pop
repnz
popf
push
dec
lret
repnz
clc
movsl
icebp
dec
ret
imul
lods
pop
sub
mov
xchg
xchg
push
mov
pop
sub
push
push
les
inc
nop
dec
sbb
fsts
outsl
sbb
idiv
or
mov
mov
pop
xchg
les
pop
xchg
sub
sti
add
out
cmp
scas
xchg
sub
rolb
les
pop
and
lahf
dec
scas
fwait
daa
cltd
mov
mov
adcl
loopne
dec
in
adc
pop
iret
sub
clc
pusha
mov
inc
sub
inc
std
xchg
stos
xor
rcrl
shll
orl
mov
aad
fstpl
cli
adc
imul
icebp
mov
mov
inc
xchg
jg
inc
cmpsb
adc
xchg
cmp
int
inc
insb
or
aam
jmp
xor
xchg
ds
dec
loope
xchg
fstl
int3
and
xor
and
popa
push
xor
gs
arpl
stos
dec
cmp
jno
shll
sub
dec
mov
lret
mov
add
sub
adc
ss
repnz
mov
mov
adc
test
mov
out
and
pop
scas
jle
cld
lret
shlb
std
fsubrs
xchg
xorl
jno
push
jns
les
mov
cmp
adc
jp
stc
adc
js
into
sarl
pop
hlt
ret
dec
sbb
dec
aas
in
mov
daa
lcall
icebp
sbb
bound
stc
add
ss
lahf
mov
sti
clc
ret
sub
fbstp
enter
jmp
hlt
add
push
loop
or
and
cmpsl
jno
mov
lods
mov
pop
addl
jle
lea
jb
jg
pop
fdivs
xlat
repnz
xor
mov
and
into
popf
insb
test
popf
pop
cld
push
sub
mov
out
loope
mov
stos
mov
jp
mov
enter
push
stos
js
dec
sub
dec
dec
cltd
mov
lds
pop
test
dec
scas
ljmpw
sub
fsubrs
daa
fstl
call
jmp
inc
pop
jno
stos
mov
push
mov
xchg
pop
pop
int3
arpl
mov
mov
jp
adc
xchg
inc
mov
mov
mov
mov
out
fsts
stc
xchg
test
jmp
leave
xchg
outsl
mov
popa
lods
add
iret
adc
flds
mov
popa
mov
sub
popa
dec
jge
mov
jb
xchg
lea
hlt
shll
jbe
adcb
out
jle
mov
or
add
cmp
inc
push
mov
and
das
jmp
push
ret
adc
adc
and
xchg
push
xchg
pop
pushw
insb
mov
mov
xchg
jae
test
lcall
adcl
in
or
out
pusha
scas
pusha
rol
and
or
pop
jmp
and
loope
push
mov
enter
pop
xorl
hlt
cld
popf
frstor
cs
ljmp
int
mov
inc
and
sub
jae
insb
and
xchg
dec
mov
sub
push
mov
ret
jmp
negl
hlt
xor
xor
pop
and
push
adc
sub
in
addr16
pop
lea
inc
mov
inc
mov
mov
sbbl
adc
fs
shlb
fnsave
mov
stc
mov
ljmp
jmp
or
fisubrl
leave
lahf
xor
jle
push
fstps
stc
shll
loope
shlb
sub
jmp
repnz
pop
mulb
push
jge
mov
mov
sbb
push
int3
into
dec
lcall
inc
out
mov
ljmp
sbb
in
sub
mov
inc
jb
neg
aad
cmp
ljmp
aas
and
imul
fidivrl
jns
aas
shll
cmp
rcll
call
adcb
push
daa
dec
pop
aam
xlat
push
pop
sub
nop
fdivl
push
and
shlb
jns
inc
in
mov
dec
pop
idivl
mov
ret
cmp
les
leave
hlt
test
inc
pushl
sub
fbstp
cmpl
je
mov
clc
out
pop
sub
jmp
inc
and
xchg
push
inc
xchg
cmp
and
sub
cmp
push
jmp
ds
xchg
push
and
pop
repz
sub
sbb
sbb
movsl
mov
shrb
test
jnp
vpcmpgtd
jns
sbb
mov
sbb
fmul
lods
dec
and
sar
pop
mov
jle
es
sahf
std
sbb
cmc
xor
icebp
push
mov
notl
jne
aas
fstl
xor
jge
sub
dec
mov
mov
pop
aas
mov
cld
add
mov
pop
rclb
ljmp
movb
sub
in
mov
pop
lret
and
mov
adc
aas
les
aad
shrb
fstpl
add
sbb
xchg
mov
fmuls
pop
dec
push
cmp
xor
xchg
push
gs
pop
xchg
outsb
xlat
fdivs
fs
cli
add
outsl
push
jbe
fimuls
shll
or
or
ljmp
ss
shr
movsb
xor
sbb
xchg
inc
aas
mov
pop
cmp
lret
loope
mov
imul
dec
imul
push
lahf
je
pop
popl
cmc
push
inc
mov
scas
bound
fsubl
xor
sahf
mov
out
push
xchg
push
inc
out
push
cmp
stos
push
leave
std
xchg
or
pop
cwtl
pop
lahf
jbe
inc
cmpsb
dec
lea
add
pop
cmpb
lahf
inc
ljmp
push
int3
or
fwait
mov
add
fwait
pop
xchg
sub
add
jns
cld
cmp
push
loop
mov
sbb
or
out
mov
mov
jnp
sub
mov
ljmp
jbe
cli
clc
mov
in
popf
bound
repnz
out
sbb
add
aas
ret
or
adc
mov
sti
cmp
xor
pop
dec
lea
pop
into
mov
popf
loopne
inc
and
and
jg
xchg
in
cmp
out
xorl
lea
jb
outsl
cmp
xchg
inc
lods
jno
lea
out
jmp
sarl
movsl
ds
xorl
xor
out
inc
je
push
test
sti
divl
jp
mov
stc
iret
pusha
lods
inc
xchg
insl
popa
sbb
roll
cwtl
call
mov
xor
jecxz
push
ljmp
fildl
cmpsl
lds
sti
and
mov
jb
cmp
hlt
xchg
adc
xor
in
ud0
dec
lea
hlt
sbb
or
cmp
out
loopne
adc
aad
pop
aas
jmp
dec
cli
cmpsb
inc
add
mov
aad
mov
out
repz
and
lret
hlt
jp
fcoms
adc
add
jg
test
repz
inc
pop
mov
inc
sub
xchg
inc
mov
dec
dec
sub
adc
ret
fbld
adc
sub
push
fimuls
add
mov
push
test
mov
mov
jmp
sbb
lret
insb
xor
mov
mov
add
xchg
mov
xlat
inc
inc
lods
jb
jns
mov
cmp
jg
in
dec
and
lret
dec
mov
add
nop
fldenv
or
xchg
jno
shr
flds
xor
and
shll
and
cmp
enter
sbb
std
xor
int
mov
mov
into
add
add
in
mov
pop
insb
cmpb
pop
mov
or
mov
shll
leave
adc
aam
or
jne
ja
pop
xchg
or
mov
cmc
in
jmp
or
adc
mov
jmp
cmp
pop
mov
outsl
out
jns
ds
mov
xchg
inc
jno
mov
dec
scas
jne
out
pop
mov
out
mov
outsl
mov
pop
scas
insb
repnz
push
xor
dec
lea
and
pop
xor
jg
sub
push
movsl
iret
loopne
mov
sub
jb
add
cmp
mov
leave
xor
loope
push
cmpsb
cmp
cmpsl
daa
mov
xlat
xchg
dec
cld
ret
in
push
xchg
lahf
dec
movsb
fmull
cmp
sub
out
cmp
add
shll
out
flds
bound
ja
sahf
outsl
xchg
or
xchg
mov
xor
in
dec
xchg
mov
mov
sbb
aaa
in
mov
ss
cld
loopne
adc
pop
or
imul
lahf
stos
push
sarl
add
fmull
out
fs
xor
mov
jo
aam
mov
test
mov
pop
mov
or
inc
data16
jne
nop
pushf
icebp
mov
shlb
test
push
daa
inc
in
or
jns
pop
fnstsw
xlat
lcall
xor
dec
loopne
or
fcompl
outsl
inc
ret
jle
ja
and
xchg
push
cmpsb
enter
int
jbe
xchg
pop
jmp
add
call
or
sub
je
hlt
ss
xor
pop
and
sub
cli
mov
fwait
or
lea
fdivrs
in
pop
push
fwait
loop
xlat
add
ljmp
outsl
not
cmp
rolb
mov
mov
nop
mov
sub
xor
mov
ljmp
xchg
dec
sbb
cmp
pop
add
dec
jge
das
iret
lret
testb
add
ja
and
push
lods
push
enter
pop
sbb
push
adc
mov
mov
imul
out
lods
not
pop
xor
not
or
inc
xorb
pop
and
into
int3
dec
cmp
pop
push
cli
daa
fcomps
out
mov
dec
pusha
cmp
andb
mov
mov
jbe
in
xor
push
pop
jnp
pop
cmp
sahf
push
test
repnz
xchg
pushl
lcall
xor
dec
dec
and
sbb
adc
and
in
or
cmp
push
outsl
xchg
and
outsl
iret
int
cs
lock
std
and
adc
daa
iret
lea
int3
add
icebp
xor
xlat
mov
mov
pusha
mov
mov
jns
ja
xchg
icebp
orps
dec
mov
aas
cmpsb
push
xchg
test
in
pop
jbe
sub
out
je
leave
and
xchg
xchg
push
dec
sti
inc
mov
les
ret
dec
xchg
shld
mov
outsb
jae
lock
mov
jg
pop
or
mov
in
push
incb
inc
mov
sahf
mov
xchg
jno
push
xor
xchg
dec
cwtl
rcrl
adc
cmp
dec
cmpsl
js
repnz
cmc
add
jae,pn
push
add
fs
and
mov
iret
xchg
icebp
cmp
popl
mov
mov
push
sbb
ljmp
mov
je
pop
adc
cmp
loop
insl
push
ret
xchg
aas
outsb
mov
aam
fstps
div
fiadds
mov
insl
or
dec
orl
andl
cmp
mov
pop
sahf
movsl
push
mov
aaa
repnz
lret
push
and
out
ficompl
fisubl
rcrb
lds
and
ljmp
notb
test
dec
inc
xchg
aaa
push
int
mov
mov
xchg
push
pushf
lods
lcall
pop
pushf
pop
lods
mov
push
cwtl
dec
push
push
mov
and
jae
mov
pop
rcll
inc
outsl
sbb
inc
fdivrp
and
cmpb
push
cwtl
mov
xor
adc
lods
mov
xchg
xchg
mov
xchg
dec
xchg
mov
bound
push
push
sarb
leave
mov
dec
jmp
fisttpl
sub
stc
sbb
inc
data16
aas
push
lock
sbb
sub
jbe
fmuls
xor
push
aam
fisttpl
dec
add
sbb
popf
inc
add
sbb
pop
push
psubd
mov
or
push
out
mov
shlb
or
jmp
mov
push
enter
cmp
loope
xor
popf
push
iret
andl
call
cmp
sbb
rol
cld
inc
pop
or
das
or
xchg
fsub
pusha
xchg
stos
test
xchg
jecxz
jg
pop
ds
mov
test
in
aad
aas
xlat
sbb
mov
and
adc
xchg
in
outsl
aaa
les
data16
stc
push
cs
adc
bound
jae
cmpl
xchg
pop
sbb
xorps
xor
mov
push
fidivs
lods
cmpsb
stc
outsl
adc
mov
jmp
call
enter
push
stos
push
push
out
adcb
xchg
cwtl
adc
push
xchg
xor
ret
sub
add
cmp
popf
xchg
xor
addr16
jno
cwtl
int3
dec
push
stos
jne
fidivl
out
cwtl
add
aaa
jo
xor
and
fnsave
xor
stos
push
mov
aaa
mov
addr16
and
xor
imul
sbb
add
divl
cmc
outsl
or
cmc
push
or
in
pop
pop
das
mov
xlat
shll
vpshufd
xor
sub
pop
int3
stos
test
mov
cltd
loop
pop
mov
cmp
outsb
roll
movsl
and
cs
into
outsl
pop
setp
pop
daa
pushf
mov
pop
add
jg
xchg
cs
xchg
xchg
sbb
push
mov
fsubr
push
imul
jge
add
dec
mov
adc
cld
pop
xor
stos
iret
lahf
mov
popf
loope
or
mov
shll
lret
aaa
arpl
mov
int3
dec
cmc
sub
leave
test
les
daa
outsb
push
inc
aas
cli
and
mov
jo
ds
adc
dec
call
pop
imul
mov
mov
sarl
arpl
cmp
int3
jo
cmp
push
iret
out
popf
cmp
ja
pop
adc
xchg
iret
mov
out
mov
iret
pushf
fldt
je
pusha
imul
pop
add
pop
xchg
xor
les
dec
call
ret
cmp
dec
xchg
enter
dec
and
in
outsb
or
fldcw
adc
je
add
testl
das
out
adc
jl
adc
fsts
ret
mov
xor
xor
ror
cs
cli
sub
popf
aaa
stos
mov
out
dec
push
out
dec
push
pop
out
addr16
pop
in
inc
mov
xchg
pop
pop
ja
test
aas
push
popf
stos
mov
leave
cmpsl
or
pusha
fcomp
subl
pop
ficoms
leave
xlat
imul
icebp
push
lret
mov
pop
xor
xor
mov
rorb
lock
push
jg
sbb
push
les
fwait
rorl
push
dec
xor
das
jmp
int
mov
cmp
xchg
jecxz
test
jecxz
push
add
mov
adc
mov
push
ljmp
dec
xor
rcl
shrd
sbb
jmp
dec
vmulpd
arpl
mov
inc
scas
mov
sahf
mov
cmp
pop
test
inc
lahf
cltd
sahf
add
shll
cli
fidivs
lahf
mov
inc
cmpsl
jbe
fisubrl
std
xchg
sbb
push
jno
imul
jbe
call
pop
cmc
dec
push
popa
fisubl
call
jge
fsubrs
inc
mov
inc
ret
pushf
aad
mov
lret
test
add
inc
cmp
imul
add
adc
xchg
cli
sbb
push
in
push
int3
call
scas
jg
ret
paddusb
cmpsl
sbb
cmpsl
sub
insb
outsl
mov
scas
push
insb
shlb
and
sti
jnp
dec
adc
mov
pop
nop
xchg
dec
addl
bound
inc
add
jl
es
fidivs
sub
push
mov
in
push
les
xchg
sbb
sbb
mov
add
xchg
push
pop
mov
data16
or
add
imul
push
add
jp
cwtl
es
insb
pop
sub
sbb
mov
add
cwtl
add
or
sahf
cmp
pop
sar
xor
mov
mov
pop
clc
sbb
push
push
mov
and
pop
dec
fists
pop
cmpl
fstps
or
cmp
shlb
xchg
inc
or
add
xor
cmp
push
push
stc
inc
add
jo
insb
inc
scas
dec
jecxz
xchg
insl
lret
fiaddl
call
repnz
ret
popa
xchg
mov
dec
mov
adc
cli
adc
call
adc
out
scas
jae
and
lahf
pop
loope
das
and
sbb
les
inc
pushf
loop
jge
aam
jecxz
insl
pop
lds
push
aam
and
and
mov
and
xchg
test
call
add
inc
into
mov
fcompl
ds
mov
cmovbe
lret
and
lds
pop
inc
pop
test
inc
cltd
shll
or
pop
mov
out
pop
shll
loope
push
fwait
push
es
sbb
inc
cmp
dec
jl
popf
and
nop
leave
dec
mov
lods
xor
mov
imul
outsl
sub
pop
and
push
aaa
call
cltd
or
stos
cmp
inc
mov
in
xchg
and
insb
lods
pop
nop
inc
cld
fwait
and
daa
cwtl
adc
sbb
jnp
lret
in
xlat
dec
push
xchg
and
into
cli
push
divb
js
ret
xorb
daa
lods
adc
pop
or
mov
fwait
inc
add
hlt
sub
adc
sbb
mov
and
outsb
outsb
jae
movsl
and
test
push
mov
pushf
add
xchg
inc
sub
sahf
fistps
lods
je
imul
sbb
add
push
and
push
inc
lcall
lret
mov
stos
js
mov
xchg
fimuls
cmp
shrl
add
sti
xor
add
aaa
rolb
sub
add
and
lds
mov
jns
inc
aad
fchs
xlat
lahf
sub
sbb
jmp
pop
test
sub
or
ret
push
mov
es
cltd
mov
xor
ljmp
push
pop
sbb
jg
pusha
cmpsl
mov
shl
int
xor
movsb
xor
dec
and
or
jmp
and
into
cmpsb
imul
lods
cmp
xchg
cmp
fcoms
outsl
adc
cmc
jbe
push
add
pushf
adc
pusha
sub
sbb
pop
out
cmp
dec
cmc
sbb
adc
movsl
push
mov
cli
call
mov
icebp
test
insl
ror
jns
jns
daa
loopne
dec
lret
jp
sub
push
nop
lahf
or
add
cwtl
xor
cmp
add
sub
sbb
sahf
ds
cmp
jmp
push
std
xchg
fsubl
mov
int
xchg
imul
outsb
fimull
adc
in
sbb
mov
ja
insl
out
rolb
bound
pop
dec
clc
bound
rcrl
out
inc
mov
lcall
mov
adcb
ljmp
jle
push
movsl
adc
jnp
pop
cmpl
stc
lcall
mov
xchg
jle
and
push
pop
pop
xchg
lds
ds
cs
fdivrl
in
push
in
popa
push
outsl
xorb
arpl
mov
sahf
enter
paddusb
jl
cmp
inc
and
pop
repz
or
sub
mov
call
sbb
cmp
push
inc
aaa
jge
in
lcall
dec
pusha
add
arpl
push
jmp
dec
pop
mov
push
test
and
int
sbbb
and
outsl
iret
jb
jle
and
popa
pushl
jae
pop
cs
inc
xchg
sbb
jecxz
and
loop
sub
mov
mov
pop
add
mov
and
mov
push
mov
dec
test
add
xor
loopne
lods
test
adc
pop
xchg
jge
aam
add
adc
enter
xlat
ljmp
xor
push
lahf
in
cmp
cltd
sbb
mov
push
or
dec
inc
adcb
sbb
xchg
sti
movsl
push
popa
mov
xchg
inc
xchg
jno
sbb
insl
pop
lea
cmp
aam
cli
bound
xlat
sbb
divl
xlat
xor
cmc
add
test
das
sarb
negl
mov
push
lods
adcl
mov
sub
cmpl
adc
mov
push
enter
jg
int3
jb
mov
mov
js
fs
int
pop
xchg
f2xm1
adcb
cmp
lock
roll
push
out
inc
fdivr
pop
xchg
aaa
adc
stos
cmp
in
ljmp
jo
test
mov
loope
mov
mov
add
clc
cmp
mov
cmp
stc
add
scas
inc
xchg
fldt
lret
cli
dec
mov
pop
lahf
mov
fstpl
test
sarb
jb
repnz
mov
inc
repz
shrl
outsl
sbb
pop
sub
das
pop
sarl
mov
cltd
sub
sbb
mov
leave
adc
insl
mov
or
sub
fisubrl
adc
je
cli
sub
popf
out
test
push
sbb
outsb
addr16
inc
pop
insl
add
ds
cmp
iret
dec
jns
pop
xchg
pusha
loope
scas
dec
jecxz
pop
cmp
test
and
popf
pusha
aaa
lret
pusha
sub
or
cmp
sub
or
inc
movaps
sbb
loop
pop
add
sub
mov
pop
or
adc
cmp
xchg
pop
subl
std
icebp
xchg
shl
aam
int
int
fisubl
adc
sbb
sub
pop
adc
xchg
adc
fs
fcmovne
in
or
adc
sbb
sbb
es
lock
mov
jae
sbb
popf
push
xor
inc
in
inc
mov
leave
gs
cmp
xchg
xor
add
mov
test
test
mov
pop
jg
adc
add
icebp
jb
jmp
add
mov
push
sbbl
and
push
rcrl
mov
idiv
or
or
xchg
push
and
cmp
pop
int3
dec
in
sbb
stos
push
mov
jg
fdivrl
sti
jno
cltd
inc
or
sub
xchg
pushf
add
lret
and
ss
aad
cmc
test
lahf
xor
mull
test
aam
in
rorb
add
xchg
sub
mov
lds
jns,pt
or
cmpsb
pop
xchg
cmpsl
scas
sarb
sti
mov
fwait
sarb
mov
adc
sbb
add
push
in
sbb
ss
cmc
fstl
out
add
loopne
sahf
lods
add
push
aaa
mov
cltd
jb
mov
in
mov
test
ljmp
adc
mov
fdivr
dec
ja
dec
es
loopne
ret
sbb
leave
jle
mov
xchg
stos
pusha
mov
push
lock
push
data16
data16
sbb
and
fwait
lcall
adc
add
enter
hlt
sahf
add
scas
test
insl
out
push
xchg
inc
xchg
inc
jo
push
repnz
push
sub
out
mov
stos
dec
mov
pop
aad
add
hlt
sbb
cmp
insl
jae
cmpsl
sub
pop
add
jg
icebp
test
xor
pop
xchg
lret
lret
sub
sarb
sar
or
push
jne
pop
cmp
xlat
add
lret
pop
mov
mov
imul
jne
lock
push
cmp
popa
mov
fmul
adc
mov
sbb
push
mov
pop
inc
popf
gs
aas
xchg
sbb
cmpl
xor
loopne
xor
mov
fstpt
stos
leave
lret
movsl
xor
sahf
cmp
xor
cmc
xlat
and
adc
scas
xor
sbb
sbb
sub
or
jnp
in
jmp
fadds
fsubs
outsl
mov
sbb
das
inc
mov
push
pop
cmpsl
mov
adcl
mov
mov
add
outsl
test
imul
icebp
mulps
out
sahf
pop
fwait
aad
sarb
les
jb
mov
fwait
dec
fucompp
lahf
or
hlt
imul
stos
mov
scas
ljmp
sub
mov
lock
mov
ret
mov
pop
xor
sahf
jle
lds
mov
push
fsubrs
imul
mov
lahf
inc
aad
cld
adc
out
sbb
push
les
sub
fadds
pop
lcall
cli
mov
mov
inc
call
movl
add
jp
and
nop
inc
test
sbb
fldenv
mov
mov
sbb
xchg
hlt
or
jg
hlt
add
cmp
and
nop
fwait
outsl
fstps
mov
mov
pop
mov
ds
mov
mov
sbb
or
loope
push
or
push
inc
test
push
or
std
pop
cmp
mov
je
dec
cld
aas
daa
scas
inc
mov
dec
adc
pop
push
fadd
inc
pushf
insb
cmp
inc
leave
repnz
mov
add
push
mov
cmp
clc
pop
rclb
fs
pop
cmp
add
mov
rcl
dec
mov
inc
movsl
jl
aam
pop
xchg
fs
stos
aam
popf
mov
stos
repnz
in
movsl
aad
imul
xor
inc
push
lds
cmpsl
mov
scas
fstpl
movb
fsubl
aas
jno
push
dec
scas
push
jno
or
mov
addr16
sub
insl
popf
test
mov
dec
dec
mov
inc
add
or
dec
sbb
jp
fildll
call
xchg
out
pop
movsl
add
out
dec
lret
call
stos
in
std
lahf
sbb
jle
sti
pop
push
lock
ljmp
push
popf
arpl
loopne
jle
jno
imul
mov
fadd
fnstcw
xor
sbb
sahf
out
xchg
test
lods
shl
insl
pop
cmp
outsl
and
jbe
add
jecxz
dec
inc
jo
dec
pop
and
pop
mov
movsl
add
lahf
mov
inc
sbb
pop
cltd
add
icebp
inc
sub
xor
xchg
movsb
add
lods
lahf
lds
pop
cmpsb
xchg
xor
push
xor
and
sub
or
push
adc
xor
je
jns
aad
fisttpll
fbstp
in
adc
and
subb
mov
mov
mov
aaa
adc
and
into
xor
push
xlat
pop
jle
arpl
repnz
fdivl
repz
adc
mov
cmp
adc
cmp
push
jmp
mul
fs
jge
sbb
pop
cmpsb
push
mov
mov
sub
lret
xlat
push
push
mov
das
xor
sbb
lods
pop
pushf
call
fwait
rorb
dec
mov
push
test
push
cmp
push
stc
dec
jbe
mov
insb
mov
insb
gs
jmp
fsubr
jb
mov
outsl
mov
shll
inc
jnp
xlat
mov
sarb
insb
pop
shll
ja
nop
push
jno
es
pop
dec
subb
or
cwtl
xor
fisttps
jl
pop
fwait
fs
cmp
push
sbb
es
xchg
inc
push
out
mov
mov
das
or
xlat
hlt
push
xchg
mov
push
mov
xchg
inc
push
xor
inc
gs
sbb
out
test
or
inc
inc
test
add
nop
pop
cwtl
loopne
xchg
mov
mov
or
aaa
sub
decb
fnstenv
dec
mov
push
scas
int
insl
push
scas
push
mov
add
in
push
mov
jmp
mov
dec
sub
nop
push
mov
enter
push
ja
mov
push
imul
push
imulb
das
adc
ljmp
into
cs
adc
jno
mov
mov
cltd
orb
stos
aaa
adc
mov
sbb
push
call
push
jmp
adc
lods
pop
pop
mov
inc
mov
cwtl
cwtl
sub
inc
jae
and
scas
sbb
sarb
jmp
pop
in
adc
pop
add
mov
add
lods
pop
push
dec
mov
aam
and
test
dec
subl
add
lret
jne
jg
cwtl
roll
xor
mov
stos
jae
call
sbb
rorb
notb
negb
insl
mov
mov
add
aam
out
arpl
icebp
sbb
ret
lahf
insb
cwtl
fucomi
repz
inc
test
sbb
xor
fstps
lret
mov
enter
js
roll
push
xchg
mov
add
and
sub
movsb
cltd
cld
cs
mov
adc
out
or
adc
and
dec
add
xor
lret
add
lods
je
clc
mov
push
fstpt
out
insl
sub
fisttpll
mov
push
pop
stos
inc
push
sbb
mov
jmp
adc
and
cmp
mov
aam
mov
mov
fisttps
aam
dec
lods
dec
xlat
fildll
and
jp
fidivl
push
or
add
push
lret
mov
sbb
lds
inc
mov
das
push
popf
jge
bound
call
xchg
sub
pop
adc
roll
sbb
dec
js
in
fidivs
fidivs
cmpsb
movsl
jo
shll
xchg
pop
mov
popa
lahf
push
test
cmp
lret
fldl
nop
lcall
out
add
sarb
ss
test
movsb
pop
dec
ficoml
fsts
shr
push
imull
ja
pop
out
add
bound
jl
jb
adc
test
iret
sarl
outsb
jnp
cmp
xchg
or
mov
es
flds
jge
loop
inc
sbb
call
inc
mov
scas
pusha
mov
xchg
test
pop
fldt
out
into
xchg
mov
fwait
aam
pop
test
jnp
add
mov
cld
rcrl
cmp
dec
adc
mov
dec
mov
call
outsl
sub
jbe
mov
cli
inc
nop
loop
cmp
sub
fists
jge
mov
push
mov
jne
lods
outsl
setnp
dec
xchg
dec
mov
pop
push
pop
sti
sub
inc
add
add
out
and
jo
hlt
sbb
fmuls
pop
push
mov
mov
aas
in
xor
test
mov
sahf
cmp
into
and
fsts
mov
pop
popa
shll
mov
or
cli
leave
push
lock
adc
aaa
test
insb
add
fdivl
dec
mov
cmp
ds
lea
cmp
std
xchg
add
fucomp
lcall
pop
insb
loopne
pop
or
popa
sbb
or
jb
inc
aaa
cmp
mov
push
jl
sub
inc
adc
int
inc
or
add
js
mov
imulb
test
out
stos
lret
pop
push
sub
jbe
cltd
push
dec
call
fidivs
jns
sbb
push
std
cwtl
stos
lahf
insl
xchg
mov
jne
and
sbb
push
loopne
fnstenv
add
push
add
jl
push
xchg
sbb
and
inc
push
js
out
out
loope
stc
sub
aam
out
fs
mov
lock
lcall
popa
pop
ljmp
inc
add
dec
out
mov
cmp
mov
pop
fbstp
lods
sub
sbb
movsl
pusha
sbb
es
incb
mov
push
pop
ret
xchg
in
ljmp
int
mov
pop
dec
xor
mov
shll
xor
mov
notl
enter
div
mov
fcoms
jle
adc
cmp
pop
push
loopne
popf
pop
in
pushf
lret
push
mov
and
cmp
pop
bound
add
popa
pop
jno
loopne
dec
data16
hlt
pop
sub
imul
xchg
inc
xchg
and
mov
mov
jl
lea
xchg
test
out
icebp
out
roll
inc
mull
inc
daa
sbb
shrb
ljmp
fiadds
leave
sub
es
out
pop
aad
sub
xor
lahf
pop
movsb
scas
or
mov
sub
loopne
adc
push
inc
xorb
popa
dec
xchg
push
pushf
gs
push
pop
movsl
xchg
pop
jecxz
inc
cmpl
add
sti
sub
outsl
push
sarb
imul
xor
jno
cmp
cmpb
sbb
sub
mov
cmp
scas
clc
cmp
inc
xchg
pop
mov
mov
or
dec
mov
inc
test
adc
je
scas
mov
sbbb
fisttpl
in
out
jns
sahf
xchg
add
jp
xor
or
mov
pop
and
inc
stos
push
pushf
lock
xchg
push
mov
fidivs
aad
pop
cld
sbb
sbb
sbb
aad
pop
mov
fadds
xchg
inc
enter
xchg
pop
lahf
add
lds
dec
ret
fistpll
sub
test
loopne
adc
scas
lods
mov
xchg
gs
mov
jp
pop
js
icebp
mov
popl
lcall
jmp
jl
out
aam
cltd
ds
lahf
shrl
mov
jecxz
fidivrs
pop
xchg
mov
cld
lods
jmp
ret
sbb
mov
cmc
push
jno
pop
gs
pushf
mov
movsb
fidivl
or
dec
push
aas
pop
xchg
fsts
cwtl
scas
fldcw
mov
dec
pop
mov
fcomps
aas
popa
scas
loope
mov
inc
scas
repnz
and
mov
faddl
fistps
ss
lock
dec
inc
push
call
xchg
out
lahf
sbb
mov
sti
xor
movsb
mov
arpl
lea
push
inc
scas
mov
repnz
loop
add
pop
cmp
popa
pop
rcll
dec
jl
mov
fiaddl
loopne
add
lahf
xchg
pushf
push
jp
xchg
add
xchg
daa
shll
inc
aam
outsl
mov
dec
test
mov
scas
pop
insl
je
inc
cmp
pop
sbb
in
or
sub
mov
add
add
or
daa
cmp
mov
in
push
fwait
push
jecxz
xchg
rclb
sub
sbb
sbb
cmp
test
dec
lods
dec
fidivs
cwtl
pop
mov
jp
mov
cmpsl
adc
mov
out
cmp
jg
sahf
leave
sub
es
pop
and
mov
add
int3
push
pop
jo
adc
imul
xchg
ret
mov
mov
aas
repnz
or
ljmp
jmp
mov
jg
mov
sbb
push
lods
addr16
jo
cli
cmp
notl
pop
xlat
subl
inc
dec
fstpt
lcall
fs
lret
call
out
ss
push
jne
cli
mov
repz
aas
das
push
stc
adc
cwtl
rcrl
enter
stc
insl
in
out
imul
push
ds
sbb
inc
jmp
xor
lock
push
je
xchg
into
pop
lods
imul
dec
xchg
popf
cmpsl
iret
mov
pop
jbe
sub
xor
int3
out
push
mov
adc
xor
test
int
xchg
leave
stos
addr16
icebp
nop
fsub
xchg
jae
das
xchg
mov
push
mov
add
stos
pop
mov
fsts
mov
lods
hlt
test
aaa
dec
and
mov
mov
push
test
and
sbb
sbb
ja
ret
mov
dec
jno
xchg
and
inc
lds
xchg
in
pop
or
pop
daa
adc
jge
pop
push
out
pop
mov
adc
xrelease
pop
mov
test
or
jmp
mov
cmp
cmp
push
orl
lret
loop
lds
lcall
and
sbb
lret
lock
jg
popa
mov
out
ja
jns
or
adc
pop
xchg
sti
int
pusha
jo
xor
sbb
xchg
mov
aaa
inc
and
pushf
outsl
dec
outsb
setnp
add
std
ja
mov
pop
out
loop
incl
xchg
in
imul
or
mov
loopne
jb
jg
lcall
mov
lret
pop
jl
add
mov
call
push
inc
xchg
out
sub
mov
cmc
mov
xchg
std
adc
test
and
mov
dec
xor
enter
in
imul
add
sbb
sub
pop
adc
pop
xor
mov
adc
or
repnz
into
daa
hlt
sub
inc
inc
loope
pop
push
leave
sbb
lock
mov
jp
add
popa
leave
push
test
jns
insl
test
pop
inc
repz
push
iret
or
mov
push
pop
in
jno
jg
pop
mov
shrb
jae
out
loopne
addr16
xchg
sbb
cmc
xor
int
hlt
xlat
sub
andb
jle
xchg
jo
loop
push
push
es
push
nop
imul
scas
lcall
push
fmull
data16
or
rclb
ret
inc
adc
mov
add
mov
out
leave
clc
jge
mov
push
pop
repnz
lea
sub
or
xchg
jg
call
adc
sbb
mov
rcll
cs
inc
mov
in
and
xor
mov
in
cmpsl
das
add
adc
leave
aaa
repz
hlt
dec
pop
lods
ljmp
mov
into
lock
xchg
jo
out
cmc
adc
fistpl
dec
nop
mov
pop
movhps
lods
inc
jmp
push
pop
insb
aas
int
mov
and
rorb
and
pushf
lcall
insl
xchg
lea
cs
pop
push
stos
push
rcl
or
stos
arpl
push
mov
mov
mulb
sbb
sarl
es
fists
aam
outsl
xchg
mov
repz
inc
mov
dec
xchg
inc
push
icebp
jno
mov
loop
or
scas
das
dec
add
xor
sub
mov
add
fists
inc
mov
jle
in
sbb
stos
arpl
or
bound
push
and
mov
pop
mov
sub
mov
in
xor
mov
mov
cmp
shlb
mov
fadds
cmp
into
lods
pop
sub
add
cmp
fcmovnu
jns
je
fisubl
ret
sub
repnz
pop
sbb
cltd
ljmp
push
enter
int
push
cmp
jnp
xor
xchg
imul
ljmp
dec
popf
jmp
or
scas
clc
xchg
push
dec
stc
leave
fwait
jae
stos
jo
jb
push
adcb
bound
push
arpl
stc
pushf
insb
push
mov
sbb
stos
xchg
sti
push
or
test
rclb
sahf
test
sub
push
add
pop
pop
jle
mov
xor
stos
and
pop
lret
pusha
inc
dec
sbb
in
subb
cmc
adc
dec
movl
cmpsl
sbb
push
das
xor
or
ss
push
jno
daa
rcrb
jo
loope
mov
js
rol
negl
xor
fisubrs
and
push
fisubs
scas
aas
push
jl
out
mov
outsb
insl
lock
pop
sbb
daa
outsl
xchg
and
outsl
mov
push
push
jno
out
test
lds
dec
sub
push
inc
mov
test
jle
or
and
mov
sub
cmp
aaa
faddl
xchg
push
lods
lcall
sahf
mov
xor
inc
add
xchg
gs
aaa
mov
push
mov
movsl
xchg
jo
mov
test
pop
addr16
xchg
and
fsubs
daa
push
fmulp
add
int
add
xchg
mov
mov
lods
add
rcrl
mov
sbb
out
int
xor
ljmp
and
mov
adc
pop
push
mov
sub
xor
shlb
mov
out
and
rclb
jmp
sub
lahf
push
out
mov
ret
addr16
xor
and
sahf
loopne
inc
pop
mov
xchg
pop
sbbb
inc
popl
xchg
xor
inc
subl
cs
add
mov
call
adc
or
std
cmp
clc
sbb
adc
or
sbb
push
cld
pop
xor
sbb
in
jo
pop
cmp
pop
scas
pop
jno
cwtl
rorb
jmp
pop
lahf
shlb
xor
and
sahf
push
sbb
imul
lret
inc
lods
ja
repnz
mov
ret
iret
adc
add
push
sbb
xor
inc
push
scas
xor
call
stos
mov
adc
arpl
mov
in
loopne
mov
ljmp
lods
inc
xchg
mov
dec
mov
fwait
in
lret
push
dec
aaa
fsubrs
es
inc
lods
fistpl
mov
sbb
inc
fdivrs
test
jecxz
outsl
lahf
sub
fs
mov
adc
cltd
repz
cld
aaa
imul
fwait
inc
test
adc
fs
add
dec
shrb
cld
cltd
push
mov
sub
push
mov
pop
sbb
out
jp
inc
pop
lahf
imul
pop
ljmp
or
lea
faddl
xlat
mov
scas
jge
aad
sbbw
pop
loop
fadds
arpl
scas
scas
xor
mov
mov
repnz
inc
shll
adc
jns
fldcw
mov
cmp
ret
insb
pop
je
push
push
dec
sub
mov
rcrl
jo
aam
mov
mov
ret
mov
adc
cs
test
lods
in
stos
jp
inc
dec
sbb
mov
fistps
inc
mov
sub
mov
xlat
mov
jb
clc
add
in
dec
aas
dec
flds
jp
jb
mov
aad
adc
pushf
rcr
or
jno
and
outsl
icebp
cmpsb
push
es
or
and
add
push
fadd
and
int3
or
dec
pop
lret
hlt
gs
and
push
into
dec
dec
dec
test
arpl
ss
adc
push
mov
dec
mov
sub
mov
test
repz
dec
mov
sbb
add
test
and
pusha
notb
clc
cmp
rol
cmpsl
mov
xchg
shrb
jmp
notb
into
push
dec
or
call
mov
sti
shll
mul
fwait
sub
inc
loopne
mov
data16
cltd
sub
add
and
loop,pt
sbb
ss
jle
push
xchg
dec
sub
sbb
add
sub
mov
cltd
pop
adcl
push
fst
nop
jl
xor
loopne
test
cwtl
pop
mov
cld
or
mov
stos
ret
lahf
inc
adcb
lock
mov
xor
enter
ret
mov
fnstenv
es
dec
das
mov
loopne
cltd
jne
pop
lock
or
mov
out
push
mov
jb
mov
xchg
inc
pop
ljmp
hlt
stc
jbe
shl
iret
cld
sub
or
cmpsb
pop
mov
mov
fistps
fsubl
mov
adc
jg
cli
pop
inc
fwait
inc
and
xlat
in
fs
divl
pop
mov
sbb
mov
iret
pop
stos
shll
cmc
ds
loop
or
xchg
mov
out
fdivrl
mov
clc
xor
pop
cmp
add
sub
push
aad
push
mov
fcoms
dec
out
inc
aam
lret
and
mov
cmp
loop
cmpsb
and
xchg
adc
xchg
add
loop
bound
jnp
push
lea
xchg
aaa
les
vcvtsi2ss
scas
pop
enter
adc
mov
mov
lea
nop
add
mov
fwait
outsl
cwtl
pop
push
mov
fiaddl
dec
mov
push
lds
pop
mov
orl
mov
jge
shlb
mov
shlb
and
ss
dec
lret
xchg
xsaves
movsl
push
aaa
ds
xchg
push
jmp
adc
adc
sbb
lock
xchg
push
mov
push
push
cwtl
lret
push
mov
xchg
dec
push
mull
aam
sahf
xor
push
iret
inc
out
call
adc
movsb
ret
into
bnd
fdivs
fsubl
xchg
pop
orl
cmpl
pusha
movsb
pop
movsl
loope
adc
mov
mov
push
pop
mov
push
and
and
addr16
js
test
xchg
sahf
arpl
inc
aaa
aas
iret
hlt
adc
or
adc
das
outsl
sbb
mov
sub
push
xchg
in
popa
bound
mov
icebp
dec
test
lret
xor
add
xchg
pop
dec
and
leave
fs
cmp
pop
gs
in
and
mov
enter
inc
xor
push
imull
movsl
or
imul
aaa
cltd
lods
add
mov
lock
rolb
cmp
popa
in
sahf
test
shll
ret
mov
or
mov
daa
jecxz
or
in
pop
mov
jecxz
or
add
jo
aad
push
cmpsl
xadd
test
es
repnz
stos
lahf
sbb
pop
out
bound
fwait
pushf
gs
int
xchg
pop
xor
jb
push
cmc
or
jle
fnstenv
lds
pop
scas
pusha
and
jecxz
pop
mov
dec
loop
mov
cmpsl
in
adc
cwtl
pop
lods
fucomip
jne
jg
xchg
les
fcmovbe
aas
inc
mov
jl
push
test
jb
pusha
push
sahf
mov
sahf
movsl
jnp
sahf
adc
xchg
orb
pop
add
jmp
inc
sub
call
daa
xchg
loop
push
int3
test
int
mov
pusha
gs
pushf
add
inc
sti
sahf
push
mov
dec
sub
or
cwtl
jae
lret
test
jg
ja
mov
lods
push
lock
pop
pop
mov
push
enter
pop
dec
int
cs
std
ljmp
or
xchg
sub
dec
mov
add
add
pop
push
int
psubusb
dec
and
es
cltd
sbb
imul
lds
mov
mov
test
mov
inc
imul
in
inc
unpcklps
dec
mov
dec
or
lds
mov
aas
repz
jecxz
or
cmpsb
movsb
pop
out
push
jb
push
aas
mov
js
or
imul
fbstp
pop
stos
pop
xchg
stos
repnz
jp
shrl
popf
js
aad
mull
sub
je
mov
loopne
loop
cmpsl
in
insl
jbe
mov
movsl
aaa
dec
stos
dec
push
in
das
fcomp
inc
es
insl
fdivl
or
xor
sbb
imul
leave
pusha
fsts
sar
sahf
call
push
cmp
add
push
jno
int
xchg
in
mov
leave
popa
mov
je
dec
test
cmp
in
or
push
push
pop
fisttpll
es
or
jae
dec
jne
outsl
nop
jl
movl
cltd
clc
sub
nop
push
xchg
dec
adc
or
inc
cmpsl
fmull
shll
outsb
xchg
push
call
cmp
je
stc
out
push
or
xchg
insl
nop
pop
or
imul
mov
testl
inc
test
in
fistps
and
jecxz
bnd
cmp
add
lahf
aas
clc
push
jbe
and
and
sarb
testl
retw
ljmp
leave
jmp
or
or
push
aad
xchg
nop
sbb
dec
mov
popf
gs
inc
jg
mov
cmp
cmpsb
jae
ja
pushf
cmpl
outsl
sub
scas
cmp
adc
std
int3
xchg
outsl
mov
pop
out
or
pop
outsb
cmp
pop
test
push
mov
pop
sbb
cmpsl
jmp
lods
push
orl
dec
add
push
jnp
dec
and
mov
mov
push
mov
js
insl
cmp
xchg
push
mov
rorb
mov
push
mov
sti
xor
rorl
xlat
mov
push
je
out
ljmp
pusha
lahf
or
insb
movsb
shr
jbe
out
sahf
inc
scas
pusha
mov
test
jg
pop
mov
pusha
mov
sub
add
xor
ljmp
shl
xchg
inc
into
ds
mov
adc
movups
pop
fs
add
sbbl
sbb
xor
sbb
dec
notl
mov
xlat
inc
add
jnp
inc
data16
jbe
dec
std
mov
adc
retw
xor
jnp
divl
push
cmp
pop
aas
aad
int3
lds
ret
cmp
popf
mov
pusha
or
cmpsb
pop
dec
push
add
ret
rorl
sarl
jns
pop
add
push
sbb
insb
cmp
and
shl
in
jg
jo
testl
into
or
xlat
xor
add
cmpsl
movsl
pop
add
aad
mov
cmp
mov
and
inc
cwtl
inc
int3
dec
cld
jl
jo
push
pop
gs
ja
lret
lcall
push
adc
dec
xor
popa
dec
xchg
inc
aas
in
cmc
dec
mov
inc
mov
sub
and
fisttpl
inc
negl
aam
pop
xchg
daa
std
shll
jb
dec
add
adc
shrl
pushf
mov
aaa
fldcw
sub
lret
or
adc
and
addr16
push
push
sbbb
ja
mov
pop
mov
dec
lahf
test
mov
or
mov
cmp
scas
dec
jne
xor
xchg
jns
mov
hlt
and
cltd
xchg
pop
cmp
sub
stc
pop
xchg
arpl
adc
imul
fs
push
pusha
cwtl
repz
fs
inc
inc
movntq
inc
icebp
mov
lock
fs
aaa
out
popa
rorb
loop
adc
stos
lret
fimuls
jmp
jns
leave
loop
lea
aad
jp
push
scas
loopne
roll
mov
lahf
adc
inc
xchg
jmp
stc
and
mov
push
jb
dec
and
jecxz
sti
lahf
ss
xlat
or
movsb
add
cmp
mov
sbb
test
stc
pop
loopne
jns
fsts
notl
cmp
mov
jae
jecxz
jge
inc
cmpsb
jecxz
loop
jnp
cwtl
outsb
pusha
test
data16
fldl
fdivrs
in
insl
popa
cmpsl
testb
dec
std
and
dec
sub
testl
rclb
psubb
stc
add
pushf
mov
mov
pop
and
inc
adcb
xor
xor
rorb
insb
popf
push
sub
add
lcall
inc
mov
dec
orb
and
push
fdiv
pusha
dec
repz
ljmp
lahf
out
ret
in
and
rclb
jb
test
and
out
jne
call
push
sub
fldenv
jo
insl
and
testb
inc
inc
pop
fucomip
adc
jmp
loope
leave
popa
fsubrl
xor
push
sahf
stc
and
out
push
pop
adc
lahf
push
add
sub
or
sub
jnp
add
lret
daa
fcompl
mov
outsb
lahf
cmpsl
inc
lea
mov
dec
je
mov
mov
xor
mov
push
adc
push
rcll
into
push
mov
push
cmpsb
imul
repnz
and
mov
in
cli
cmp
cmp
and
sub
adc
notl
jmp
push
mov
jno
jno
fisubrs
mov
cmpsb
sbb
shll
mov
or
loop
mov
inc
push
sbb
sub
mov
fcomps
pop
push
loop
push
mov
pop
adc
jp
inc
scas
arpl
int
and
bound
insb
xchg
in
dec
sahf
fimuls
mov
lcall
add
ds
out
pusha
les
cs
mov
cmp
pop
arpl
push
push
lock
xor
ss
xchg
pop
xchg
mov
push
xchg
fildll
out
inc
mov
sub
add
jne
adc
cmp
aam
jmp
gs
ret
test
lds
cmpsb
ja
lret
pop
mov
mov
cmp
ss
or
xor
dec
test
adc
mov
pop
jnp
je
mov
mov
xchg
arpl
test
rcll
mov
sub
jbe
jecxz
push
scas
jge
shll
xchg
js
into
loope
pop
les
push
cmpsl
imul
popa
cmp
xor
sbb
xorb
mov
scas
je
insl
arpl
sbb
cmc
mov
push
lds
or
pop
icebp
shrl
repnz
es
mov
add
or
add
lds
imul
in
adc
and
arpl
jnp
or
sbb
sahf
pop
mov
sahf
sub
lods
push
push
mov
shll
fstps
sahf
pop
data16
push
lds
icebp
or
mov
daa
push
scas
pop
mov
scas
mov
cmp
xorb
cmp
cmpsl
push
xchg
outsb
adc
and
std
adc
jbe
pop
sbb
js
mov
jns
jge
jg
ret
mov
flds
repnz
subb
add
jnp
jne
int3
aas
repz
das
jmp
jmp
repnz
in
ret
push
stos
pop
mov
pushl
push
sub
inc
mov
cwtl
push
cmpsl
fs
je
inc
lods
mov
sbb
pop
mov
cmp
or
aas
out
push
pop
fstl
sti
stos
jmp
add
and
negb
jbe
shlb
imul
cmp
lods
test
addr16
data16
add
std
aaa
iret
cmp
mov
loopne
mov
add
cmc
enter
xchg
arpl
clc
test
jb
rcl
sub
ds
adc
xlat
xchg
push
sbb
adc
cwtl
stos
pop
mov
xor
cltd
sub
push
adcl
xorb
mov
xor
ret
push
sahf
push
inc
nop
aaa
jbe
inc
daa
xchg
fldcw
les
mov
mov
push
movsb
lock
mov
sub
sbb
mov
addl
inc
xor
inc
or
test
mov
movsb
arpl
add
pop
test
dec
mov
add
pop
xchg
insb
xchg
sbb
sub
push
fistpll
lret
sub
pop
orb
in
mov
negl
xchg
cmp
fs
xchg
mov
sbb
inc
cmp
push
dec
mov
mov
clc
call
inc
popf
jl
and
sub
js
pop
fstps
inc
clc
lcall
int
push
inc
repz
mov
and
iret
or
mov
ss
mov
adc
fldcw
test
push
push
and
push
clc
push
lock
rolb
mov
push
pusha
mov
push
jmp
and
push
int
roll
sar
jns
xlat
ficoms
sbb
in
sbb
xor
inc
aad
or
add
add
les
movsl
add
popf
stos
shlb
mov
fstpl
pcmpgtd
pop
mov
xlat
into
jle
fwait
jp
aam
sub
sub
dec
push
mov
hlt
cmp
test
pop
shl
sub
xorl
xor
mov
push
mov
mov
js
enter
xchg
arpl
test
pusha
pop
scas
daa
pop
test
pop
xor
xor
dec
outsb
icebp
push
cld
mov
inc
scas
or
pop
mov
and
lret
cmp
sub
xor
lds
ja
lret
xlat
fidivl
pop
jns
ret
cli
aad
mov
sub
jmp
imul
cli
lods
push
mov
dec
mov
or
sub
iret
lcall
test
sbb
hlt
push
xor
xchg
out
inc
aad
imul
int
mov
mov
cltd
xor
faddl
mov
cmp
lea
mov
fsubs
push
les
dec
mov
push
pusha
mov
or
pmulhw
imul
cmp
adc
cmpsb
pop
xor
int
les
mov
rol
and
pop
mov
inc
lods
je
insl
aad
pushf
xchg
or
mov
pusha
ds
insl
add
jmp
push
mov
jmp
or
pop
aas
lahf
push
pop
movsl
ficoml
movsl
iret
jge
and
sub
aaa
or
xlat
jl
mov
and
mov
cmp
dec
jp
pop
jno
ret
push
adcb
or
hlt
mov
cmp
mov
add
fildll
nop
jne
les
dec
mov
xor
aad
push
movsl
push
scas
ret
jo
push
repz
mov
loope
pop
mov
loopne
add
scas
push
xchg
pop
insl
pop
lcall
adc
adc
jl
fnstcw
rolb
lods
inc
cmp
cs
lods
std
xchg
inc
cld
ds
lea
in
loope
popa
add
nop
sbb
fldcw
and
rcrl
outsb
loopne
inc
data16
out
cmp
andb
mov
pop
insb
stos
shlb
mov
mov
inc
xor
loopne
fidivrs
ss
push
test
or
adc
popa
mov
cmp
loopne
xchg
sbb
push
sub
fdivs
orb
out
sbb
xchg
daa
and
outsl
insl
mov
and
cs
inc
mov
jle
gs
jl
cmp
repz
pushl
push
out
dec
pop
cmpsl
sbb
adc
push
outsl
lods
repnz
push
sbb
pop
das
rcrl
jno
adc
mov
popa
shr
mov
dec
repnz
inc
inc
adc
xor
pop
cmpsl
test
or
cli
aas
rcr
and
sub
mov
adc
sbb
jns
jnp
outsl
inc
pushf
int
and
inc
jb
xchg
jmp
mov
sub
push
cmpsl
jmp
pusha
dec
fcmovbe
fs
push
mov
cld
int
out
pop
mov
xor
pop
gs
out
pushw
incl
or
push
ficoml
out
insb
xlat
or
enter
push
lcall
push
ja
je
pop
pop
mov
ret
popf
push
stos
imul
lock
sub
scas
pop
xchg
cmp
push
mov
fwait
adc
insl
mov
pavgb
xchg
loop
or
cld
jle
pop
sbb
lret
jno
int3
call
nop
sbbb
and
cli
sub
mov
push
andl
shlb
lret
rcll
movsb
stos
cld
inc
test
xchg
or
repz
dec
outsb
repnz
je
lcall
pop
es
push
stc
test
fildll
std
cmp
bnd
add
mov
pop
sub
dec
mov
out
lahf
xchg
dec
sbb
adc
es
cmp
inc
fcoml
or
dec
and
out
lods
bound
insb
xchg
jge
inc
adc
push
jmp
fs
rcrb
dec
call
pop
add
push
mov
cmp
mov
insb
movsl
sub
add
into
lret
push
push
xor
push
add
jg
mov
pop
int3
push
aad
push
adc
ficoms
cwtl
repz
incl
aas
mov
jo
push
add
das
into
push
outsb
aad
movsl
les
push
leave
jb
or
pop
inc
mov
mov
cmc
and
jno
in
lcall
jecxz
mov
insl
fs
jp
sbb
dec
lret
enter
xor
insl
push
lcall
and
cmpsl
and
stos
jnp
call
cs
adc
iret
mov
test
cld
inc
cmp
pop
rcrb
push
xor
add
dec
icebp
mov
inc
scas
stc
adc
cmp
inc
pop
enter
mov
stc
out
ljmp
loopne
hlt
imul
pop
xchg
add
sub
outsl
rcrb
sub
jle
pop
push
clc
and
repz
aas
cmp
hlt
adc
mov
xchg
loopne
gs
lahf
cmp
cli
xlat
or
add
pop
aaa
mov
cmpsb
pop
cltd
fcmove
inc
mov
icebp
push
and
orb
lret
stos
loopne
scas
xchg
pusha
test
clc
adc
sub
sbbb
adc
xchg
movsl
mov
insw
lock
jbe
gs
cmp
xor
sbb
pusha
jae
fidivs
loopne
and
or
frstor
out
push
mov
or
repz
xchg
sbb
sbb
mov
out
jb
mov
push
mov
xchg
mov
mov
xchg
adc
gs
adc
push
sub
bound
and
in
xchg
out
ja
out
xor
scas
push
popa
cmc
adc
add
sbb
js
inc
adc
loop
cmpsb
imul
dec
rcr
pop
jg
int3
pop
mov
enter
gs
fisubrs
lcall
out
dec
pop
mov
ret
or
outsb
pop
fnstsw
sbb
or
movsb
xchg
and
add
lcall
xor
movsl
push
lods
outsb
mov
inc
mov
add
outsb
mul
push
aaa
sahf
pop
pusha
inc
xchg
inc
xor
push
dec
adcl
das
loop
leave
test
lea
imul
push
xorl
and
stos
lea
repnz
leave
stos
popa
dec
adc
or
xchg
sub
enter
ret
xor
push
lock
in
cwtl
jae
inc
ss
add
dec
mov
mov
icebp
mov
rorb
lret
inc
xchg
push
sbb
cmp
ret
mov
or
fnstcw
sti
sub
inc
sbb
clc
inc
mov
xchg
pop
aad
clc
inc
out
adc
loop
mov
jge
inc
push
stos
mov
pop
lcall
mov
iret
adc
gs
das
sub
pusha
mov
enter
mov
jg
leave
pop
hlt
sub
and
and
sti
xor
repz
push
lock
cmpsb
jg
fs
dec
inc
jp
push
xor
repz
mov
fs
sbb
mov
or
outsl
cld
das
mov
or
cmp
sahf
scas
lods
mov
lods
lret
repz
jo
sbb
lret
or
dec
adc
adc
push
push
xchg
and
enter
dec
or
push
loop
pop
ror
xor
adc
repz
mov
push
xor
js
fs
sub
jge
mov
mov
pop
sarl
pop
jae
jae
in
add
into
sub
mov
xlat
jecxz
movsl
mov
mov
cmp
cmp
dec
mov
fildll
in
mov
test
in
aam
jmp
inc
jl
out
sbb
pop
loop
pop
jle
ja
in
cmp
mov
mov
adcb
adc
or
les
push
mov
clc
dec
xlat
sarl
out
ret
fildll
lds
lock
je
pop
fsubr
divl
lret
and
daa
fiaddl
cli
push
out
xor
sahf
add
jmp
adc
mov
clc
xor
push
jnp
sti
das
sub
imul
mov
and
add
sub
shll
popa
jbe
adcl
icebp
shlb
mov
stos
shll
bswap
cmpsb
cltd
add
dec
lcall
in
jle
adc
and
and
jecxz
mov
lea
out
cld
mov
cmp
notb
hlt
in
negb
loope
inc
sbb
int3
push
stos
jg
js
call
mov
cltd
fs
xchg
pop
movsb
adc
inc
or
rorl
or
mov
mov
in
push
add
es
cmpl
add
test
mov
fs
or
popa
and
stos
jne
cli
jl
sbb
sub
or
lahf
xor
mov
push
sti
and
popa
icebp
pop
cmp
data16
jb
and
or
mov
fsubl
sarb
inc
jbe
mov
dec
in
mov
les
fisttps
in
into
nop
push
mov
or
adc
gs
arpl
mov
mov
pop
xor
aas
std
and
pop
mov
cmp
xchg
or
loopne
movsl
test
jo
rcrl
mov
mov
mov
sbb
movsl
aad
xchg
add
cmpsl
or
daa
mov
imul
xchg
jnp
jno
push
xchg
outsl
pop
sub
push
out
in
ja
iret
mov
and
sub
xlat
inc
add
dec
fcmovnbe
mov
cmp
pop
cmpl
dec
in
fsubrs
mov
sbb
int3
std
push
add
jge
xor
in
shl
and
push
add
or
cmp
cmp
push
stos
test
adc
in
add
mov
icebp
push
mov
inc
mov
inc
sbb
xlat
orl
xor
or
orb
xchg
test
jge
adcl
and
jl
mov
or
inc
clc
sub
cmpsb
cmp
popf
cmp
std
sbb
ficoml
movsl
jecxz
push
daa
xlat
mov
and
add
or
fcomip
test
in
lea
ss
loope
pop
adc
in
jbe
push
or
mov
inc
pop
shr
xchg
dec
cmp
mov
shll
pop
or
mov
mov
fwait
insb
xor
pop
negb
sti
cmp
inc
cli
cmp
mov
mull
dec
xchg
jmp
test
adc
test
idiv
jbe
mov
lock
jl
jnp
in
outsl
pop
in
scas
push
jmp
jbe
sub
fsub
and
mov
mov
sub
movsl
mov
repz
mov
inc
pop
pop
imull
dec
loop
andb
shlb
dec
fcompl
lds
fdivrl
jne
iret
mov
push
hlt
fstpt
std
cltd
push
inc
cmc
sbb
and
jl
mov
sub
sbb
scas
es
pop
push
fistl
mov
loopne
mov
push
inc
insb
mov
xor
pusha
jae
fimull
pop
inc
add
fisubs
sbbb
push
cmovg
out
roll
cmpl
cmpsl
outsb
fwait
rcll
xor
cmp
push
shll
aam
sbb
xorb
ja
ret
daa
xchg
testl
shll
jmp
das
out
sahf
jns
cli
push
add
jle
and
insl
jnp
hlt
and
out
xchg
or
ljmp
out
dec
adc
adc
pop
les
lcall
int
leave
mov
mov
mov
xor
sbb
fwait
stos
clc
arpl
jle
mov
push
jbe
scas
dec
mov
dec
pop
into
popf
adc
out
jne,pn
xchg
push
repz
push
in
mov
pop
push
iret
mov
pusha
loope
mov
or
hlt
jmp
jns
popa
xchg
out
aam
mov
xchg
lret
mov
cwtl
inc
inc
push
adc
iret
popw
arpl
pusha
mov
ljmp
test
pop
std
in
cmp
mov
adc
pop
cs
xlat
or
dec
and
pop
das
shll
outsb
mov
jno
fildl
mov
outsl
sbb
test
jge
mov
jb
ret
imul
sbb
daa
call
mov
sub
mov
lods
je
sbb
sub
add
cltd
roll
mov
mov
cs
outsb
mov
shlb
inc
mov
bound
mov
xchg
cmpb
push
clc
fwait
dec
mov
cltd
push
pop
adc
lahf
jl
xor
jmp
test
push
xchg
addr16
les
hlt
xchg
pop
aaa
mov
imul
scas
out
jbe
jmp
dec
mov
push
adcl
leave
xchg
daa
add
fldenv
rclb
mov
out
inc
pusha
test
jp
dec
mov
sub
or
sub
cmp
sbb
lahf
call
dec
adc
inc
daa
fwait
loop
add
mov
std
in
inc
pop
sbb
add
mov
sbb
sub
addl
push
sbb
sub
adc
into
clc
jl
ds
mov
iret
mov
pop
jae
sahf
and
ja
or
sub
sub
pop
in
call
ud2
push
daa
push
leave
jns
outsb
aad
xchg
add
iret
and
mov
push
push
or
test
test
dec
call
mov
sbb
enter
pusha
int
sarb
pop
cmp
das
scas
outsl
xor
aam
sarl
cmpsb
push
adcb
push
aas
inc
stos
fsubr
mov
mov
shl
mov
pop
pop
loop
movsb
xchg
imul
push
ds
ret
mov
out
mov
mov
jbe
cmpsb
cmpsb
mov
or
and
mov
or
into
or
jmp
out
lock
mov
add
adc
test
rcll
mov
lds
mov
inc
imul
addr16
sub
ss
inc
mov
cmpsb
mov
push
xchg
sub
movsb
pop
incb
cmc
cs
ss
leave
adc
es
mov
inc
sbb
sbb
xchg
fs
dec
test
lcall
shll
fisttpll
mov
add
cmpsl
mov
leave
mov
jbe
rsm
fcomps
lock
sbb
je
subb
es
and
dec
mov
test
ljmp
mov
xor
xchg
outsl
les
arpl
out
loop
mov
push
add
mov
dec
sbb
xor
dec
cli
inc
test
and
cmp
sbb
ds
cld
in
es
aaa
sbb
ficoml
arpl
mov
scas
jg
or
fsubl
push
movsb
imul
mov
aaa
mov
jge
sub
incb
jmp
in
fidivrl
adc
fsts
xorb
aaa
repz
dec
cmp
negl
fdivs
jbe
repnz
fsts
aam
dec
insb
in
xchg
cli
add
ret
sub
jmp
adc
mov
mov
mov
int
rcrb
cwtl
pop
imul
jl
xchg
dec
sbb
sub
test
outsb
cmpsb
inc
cld
jae
add
int
push
mov
enter
cmpb
ss
pushf
fs
push
dec
xchg
dec
xchg
mov
popf
jns
jne
pop
push
push
push
mov
ret
push
lcall
test
sbb
xlat
mov
pop
ljmp
jb
and
cmp
sbb
cmp
xlat
lock
cli
ret
inc
xor
cmp
cmp
dec
mov
js
loopne
rcrb
mov
test
push
mov
ds
jae
outsl
call
insb
lods
jmp
imul
sarl
cmpsb
arpl
in
test
ds
xchg
sbb
dec
cmpsl
pushf
xor
jmp
call
sub
aas
out
or
es
or
xchg
push
scas
mov
mov
in
push
lea
xchg
jle
pop
and
or
or
into
pmaddwd
jmp
pop
xlat
pushf
jae
aam
std
scas
jbe
mov
shll
outsl
test
cmpsl
jp
dec
add
push
scas
push
roll
test
add
popw
dec
jl
pusha
das
mov
dec
mov
sub
mov
dec
mov
pop
iret
roll
clc
rorl
insb
push
in
add
bound
mov
gs
pusha
nop
dec
or
jg
xlat
aas
inc
mov
les
imul
cli
pop
outsb
mov
sbb
or
insb
and
sbb
ds
jmp
push
pop
cmpsb
mov
jp
mov
sub
and
xchg
inc
out
adc
sbb
pop
pop
pop
mov
jb
aaa
lret
dec
roll
test
mov
aas
pusha
cmpsl
ss
adc
pop
ds
sub
sti
xor
pop
mov
ret
lcall
mov
xchg
out
stc
flds
aad
xchg
jo
test
test
test
inc
aaa
shr
mov
mov
push
inc
cmpsb
lret
xchg
push
aas
call
lahf
sarb
clc
jmp
mov
inc
push
cmpsb
push
pop
shlb
mov
adc
or
push
and
or
or
js
js
pop
stos
inc
add
cmp
inc
add
movsb
or
lock
xor
sub
lea
and
sub
pop
dec
or
cmp
popa
push
sti
xor
cmpl
sub
lahf
jne
into
xor
fwait
iret
mov
mov
ret
lahf
sub
jge
jo
cli
xor
fs
pop
mov
scas
jle
jg
mov
ficoml
es
cmp
dec
xchg
imul
fidivl
out
sbb
add
adcb
shl
push
adc
jmp
hlt
in
jo
cli
mov
ja
pop
inc
mov
sbb
enter
xor
stos
sub
std
int
push
cmp
sub
mov
sbb
jge,pn
jae
mov
adc
das
xor
dec
sbb
scas
movsl
sub
jnp
inc
add
scas
bound
jg
sub
xchg
sbb
pushf
test
sbb
sub
leave
out
cmpsb
sahf
out
out
iret
cltd
cmpsb
pop
insb
mov
lret
cmc
push
inc
je
outsb
vrsqrtss
aam
mov
xor
es
jae
mov
daa
sarl
out
cwtl
in
fwait
push
push
cwtl
lods
jge
or
xchg
les
fildl
pop
testl
sbbl
push
ss
movsl
sbb
add
cmpsb
ss
pop
popa
sbb
movsl
push
fbld
jnp
scas
sbb
rsm
pushf
mov
push
fwait
outsb
add
lcall
push
out
push
movsl
popf
fidivrs
call
xchg
sub
jae
lea
push
xchg
int3
jae
cmp
or
adc
cmc
scas
lret
mov
cli
dec
mov
jecxz
pop
popa
sbb
clc
mov
daa
das
mov
cmp
fmulp
arpl
cmp
in
cmp
dec
add
nop
jle
notl
aaa
xchg
scas
sub
nop
pop
test
nop
push
sbbb
cmpsb
clc
xchg
xor
aam
scas
or
imul
pop
out
xlat
adc
pop
out
mov
lret
ss
push
jmp
shlb
movsl
fdivs
add
ret
lods
cld
ret
jbe
pushf
push
sbb
xchg
loop
pop
pop
bound
test
mov
jle
insb
sbb
cli
dec
lock
inc
outsl
cli
xor
sbb
mov
lret
out
xor
mov
push
xchg
push
pushf
cmp
dec
loop
aaa
scas
inc
ret
fsubl
cmpsl
or
jmp
dec
and
xchg
jne
iret
and
adc
sbb
mov
ret
popf
popa
out
lcall
sti
or
cmp
add
xchg
insb
sbbl
inc
sub
jecxz
mov
div
data16
xchg
cmp
inc
aas
mov
rcrl
cmp
push
jne
fdiv
in
loope
push
push
ljmp
jle
and
in
leave
add
adc
loopne
aad
cltd
iret
cmp
cmp
xor
cmpsl
stos
ret
arpl
mov
mov
push
lcall
cmp
nop
arpl
rclb
fs
popa
fiadds
sbb
mov
add
bound
test
add
cmp
mov
popl
imul
pop
xor
mov
or
or
mov
jle
lret
mov
cmp
lret
sbb
int
repz
jo
fiaddl
lcall
lret
adc
sub
mov
xor
cmp
mov
enter
data16
daa
and
shld
lods
sbb
push
sahf
mov
out
jno
call
push
inc
pop
dec
movsb
cltd
xor
sub
lret
sbb
icebp
sbb
aam
mov
push
cld
xchg
sub
pop
lret
stc
dec
ds
jno
lods
pusha
lods
xor
add
lea
popa
cwtl
gs
clc
mov
pop
jle
pop
fnstsw
mov
stos
jp
decb
movsl
mov
cwtl
imul
jp
jle
push
roll
shlb
repz
pop
jns
loope
or
aad
scas
jle
jge
sbb
inc
fnstcw
push
push
aaa
add
xor
pop
jmp
jp
inc
xchg
inc
cmp
dec
repnz
repz
lods
sub
loop
bound
push
je
push
inc
jg
frstor
repz
andl
ds
leave
cmp
dec
xor
mov
jge
cmpsb
add
or
in
sub
iret
xor
notb
ja
pop
xor
mov
mov
jne
cmp
push
lea
mov
mov
adc
inc
sbb
pop
sbb
pop
or
pop
mov
xchg
fidivrs
scas
test
nop
int3
and
aas
data16
or
ja
mov
mov
sbb
sahf
jno
lcall
sti
push
mov
and
mov
mov
fs
loopne
leave
cmp
add
lcall
int
je
add
cli
add
adc
repnz
adcl
popl
sarl
and
add
icebp
cltd
ds
inc
jbe
scas
push
fiadds
jmp
int
out
test
ficoms
mov
addr16
add
or
inc
ret
popf
adc
adc
and
adc
out
fnsave
out
jae
daa
jp
shlb
popf
pop
mov
mov
std
fidivl
insb
aam
js
mov
mov
sbb
inc
push
mov
add
jp
push
imul
and
jae
lea
fdivl
aas
or
mov
and
and
nop
pop
or
xchg
push
movsb
lahf
ljmp
js
xchg
jae
inc
cmp
xchg
push
cmp
mov
jmp
das
cmp
popw
insb
popa
iret
pop
pop
adc
loop
push
addr16
ja
out
fadd
xor
xchg
pop
addr16
xchg
lret
nop
jecxz
mov
push
rcll
xor
jl
hlt
mov
aad
imul
xlat
push
mov
xchg
mov
subl
jbe
sarl
adcb
sbb
repz
inc
adc
scas
lods
inc
ds
lcall
clc
call
mov
out
ret
addr16
jb
lds
out
inc
dec
push
ss
dec
mov
push
or
pop
jno
ljmp
inc
lods
iret
sub
stc
jecxz
out
cltd
jne
sti
lea
sub
sub
jmp
ja
jle
call
sbb
fcmovnu
pop
mov
push
jne
mov
inc
cmp
lea
xchg
pop
xor
pop
arpl
nop
xchg
inc
add
pushf
fmull
dec
pop
lea
iret
and
add
out
shl
int
or
lahf
sub
mov
mov
inc
call
fcomps
pop
fisubl
fs
pop
js
clc
ss
daa
sub
lods
cli
jge
hlt
mov
jno
loopne
dec
je
iret
xchg
xchg
das
pop
mov
sub
or
imul
push
lods
movsb
cmpsb
fsts
testl
lock
jl
and
imul
sub
fldl2e
sub
ss
inc
dec
jp
stos
mov
inc
push
push
xchg
mov
outsl
fdivrs
jmp
dec
mov
fs
fucomip
lea
cld
pusha
mov
loopne
cmp
das
sub
shll
and
fdivs
jle
add
mov
jnp
fnstsw
iret
dec
mov
add
mov
or
ja
xchg
aas
std
and
mov
cmp
and
adc
pop
loope
rcl
int3
cmpsl
jbe
punpckhbw
aad
roll
cmp
dec
gs
pushf
add
sbb
add
dec
cmp
xor
jle
sub
sbbl
push
add
mov
mov
mov
sub
ret
je
mov
ret
pop
imul
int3
cmp
adc
out
int
and
roll
push
mov
mov
adc
int3
jp
inc
or
icebp
push
mov
jle
xor
insb
andl
xor
mov
jg
jne
mov
push
xor
push
jne
pop
ss
pop
je
movsl
push
inc
out
stos
aaa
mov
sub
or
stos
ret
lods
cli
test
pop
and
adc
xchg
shlb
xchg
lcall
or
addr16
pop
push
mov
cltd
rclb
out
push
mov
aas
cli
and
jge
pusha
sbb
ret
mov
jbe
push
jmp
loopne
sub
fwait
pop
fildl
pop
lods
pop
mov
xlat
cmp
mov
subl
sti
fisubrs
scas
cmp
aad
xor
pop
stc
adc
loop
dec
pushf
in
mov
dec
or
enter
mov
mov
and
test
in
mov
leave
or
mov
repz
sub
insb
adc
sub
mov
push
shl
push
decb
int3
dec
xchg
insb
xchg
inc
pop
adc
pop
cmpsl
pop
mov
and
pusha
or
dec
in
cmp
dec
mov
stos
gs
adc
mov
cmpsb
enter
and
pop
xchg
add
xor
dec
ret
and
adc
xor
mov
xchg
loopne
mov
push
jnp
in
or
mov
and
sub
adc
push
aas
mov
and
aas
dec
popa
cmpsb
out
fistpll
mov
rcr
ss
cmp
sbb
inc
fdivs
xor
jp
sbb
outsl
push
jns
inc
test
lcallw
jbe
cltd
imul
jb
mov
jge
int3
push
push
sbbl
fs
xorb
out
out
outsl
out
pop
mov
mov
mov
test
mov
sahf
lret
pop
xchg
push
std
cmp
test
xchg
jne
pusha
pop
add
mov
jmp
push
lahf
rorl
dec
loope
movsb
xchg
ds
push
inc
aad
mov
adc
adc
insl
jp
dec
fsubrp
add
arpl
sbb
xchg
sbb
xorb
or
shll
add
mov
mov
stos
insl
pop
lea
add
aas
neg
out
adc
daa
cmp
in
aam
jmp
iret
jmp
push
lods
loope
cmp
pop
aad
stc
in
popa
sub
and
in
adcl
pop
pop
sbb
mov
inc
mov
mov
dec
js
in
push
shlb
mov
push
pop
inc
pop
cmc
mov
mov
and
push
movsl
sub
sahf
mov
lahf
adc
popa
mov
push
push
xor
mulb
pop
jecxz
inc
idivl
xchg
sub
inc
out
mov
and
call
sub
mov
mov
xlat
and
cmpsl
out
cmp
pop
rcrl
js
imulb
scas
push
les
outsl
aaa
dec
cli
outsb
jne
andl
xchg
lea
xchg
aad
ds
inc
or
mov
adc
pop
pop
cmp
jne
ljmp
xchg
sub
pop
adc
enter
sub
subl
insl
les
inc
call
sti
jp
icebp
mov
lods
mov
call
mov
mov
aaa
push
jo
ljmp
jo
sub
jo
es
add
xchg
dec
jecxz
scas
cmp
fdivs
sub
push
mov
cmp
sub
xchg
leave
dec
dec
ss
imul
and
sarb
and
mov
mov
adc
sub
mov
out
sub
pop
jmp
mov
mov
insb
leave
dec
sar
adc
out
lea
dec
xlat
lock
mov
inc
fmuls
pop
stc
jo
jl
jle
in
ret
jl
into
jge
mov
pop
out
idivb
fimull
adcl
mov
test
and
lods
and
or
pop
stos
xor
sbb
test
and
lret
jne
or
call
cltd
hlt
neg
rcll
lcall
mov
jle
jecxz
adc
mov
fiadds
imul
shld
bound
dec
push
andb
aaa
jns
nop
cmp
or
outsl
mov
jb
push
aad
divb
mov
dec
push
mov
push
push
push
loopne
jp
xchg
outsl
fdivl
or
inc
and
jge
mov
jno
std
push
test
sbb
int3
or
ficoml
int
fadds
dec
lds
add
cmp
fisubrl
popa
rorb
xlat
fiadds
cmp
shrb
and
xor
daa
popf
push
int3
push
fimuls
xlat
jns
jno
dec
inc
pop
xchg
test
dec
mov
pop
loop
adc
dec
imul
xorl
cmpsl
mov
sub
push
push
daa
insb
daa
mov
dec
pop
les
scas
jbe
iret
cmp
and
jnp
testb
mov
dec
rorl
mov
adc
clc
sub
and
stc
push
ljmp
scas
sbb
xchg
lret
decb
stos
jp
lret
nop
aad
mov
pop
xor
outsb
and
lods
push
adc
push
in
pop
jbe
test
cmpsl
add
subl
push
leave
push
xor
sbb
mov
jb
fldenv
mov
sbb
or
cmp
loopne
push
push
cmp
movsb
les
mov
adc
andb
mov
pop
or
mov
push
inc
xor
inc
push
pop
jmp
out
dec
sarb
mov
xchg
mov
mov
lahf
popf
scas
mov
xor
enter
repz
rcrl
xchg
gs
in
jae
add
or
daa
inc
call
mov
pop
mov
mov
push
jmp
rcll
fmuls
jo
fisttpll
sbb
cltd
xor
pop
dec
inc
adc
pop
jge
inc
jge
jp
and
pop
mov
xor
xor
fistpll
js
sbb
ret
bound
addl
shll
ja
pop
adc
jne
push
int
fisubl
cmp
inc
aaa
test
mov
xor
adc
jbe
sbb
mov
std
inc
lret
xor
xlat
mov
out
sbb
sti
lds
enter
cwtl
jp
fstps
adc
adc
inc
dec
pop
inc
jae
iret
adc
js
mov
inc
cwtl
pop
mov
xchg
out
jg
pop
lock
std
mov
sub
out
xor
js
push
xor
inc
lret
fwait
aaa
decl
cmp
in
iret
lock
lock
aaa
rcll
andnps
enter
sbb
sbb
jns
push
pop
pop
out
and
and
xchg
mov
xor
push
loopne
xchg
hlt
sarb
js
inc
or
fstpt
push
into
stos
inc
pop
mov
jb
in
jg
push
test
mov
cs
jno
fldt
outsl
sub
jecxz
std
les
ss
inc
sub
mov
xchg
jl
outsl
xor
xor
test
pop
sub
idiv
push
xchg
add
dec
ljmp
mov
mov
aam
push
movsb
sbb
mov
icebp
push
sub
lret
pusha
lods
mov
ror
fnstcw
mov
lret
insl
pop
mov
xor
jb
cmp
dec
jp
pop
jg
push
cmpl
jl
clc
clc
push
mov
pop
loope
push
into
pushf
push
inc
sbb
add
in
lret
sub
or
leave
gs
andb
cwtl
loope
and
cli
add
inc
mov
rcrl
imul
out
add
xchg
inc
push
pushf
out
xlat
mov
es
icebp
mov
inc
outsb
mov
test
and
adc
xchg
outsb
movsl
push
mov
arpl
js
fsubl
call
cwtl
lcall
je
loopne
cmp
xor
jno
mov
dec
jl
xorb
sub
sub
inc
add
jecxz
push
ja
cs
aas
or
test
fistps
jle
rorl
dec
pop
dec
xchg
mov
ret
test
cmp
movsb
or
xchg
enter
push
daa
leave
sarb
mov
lahf
cmp
xor
hlt
jno
outsb
xchg
xor
in
mov
repz
int3
jge
lds
pop
sahf
xor
sbb
and
inc
ret
mov
leave
aaa
xchg
or
ljmp
sbb
lcall
out
movsl
loopne
clc
pushf
push
mov
enter
test
dec
test
jns
jl
add
shrl
sub
enter
mov
inc
push
out
inc
lock
in
mov
inc
jge
and
inc
stos
fldt
mov
xchg
adc
add
test
test
mov
or
mov
or
shufps
pop
sub
push
adc
inc
mov
push
cmp
sbb
imul
popw
addb
mov
pop
jg
cmpsl
dec
xchg
mov
mov
push
clc
xchg
jae
testb
pop
bound
subl
dec
xor
bound
aaa
test
fisubl
stos
jmp
in
lcall
sub
loop
mov
jne
lds
arpl
iret
lods
test
and
shll
cld
leave
cmp
fstps
fcomip
aaa
mov
ljmp
test
inc
dec
dec
fstpl
xlat
out
fadds
aam
stos
jns
add
sub
test
adc
movsb
jp
fcmovbe
pop
pop
mov
rcrl
fdivrs
and
xor
pusha
hlt
lahf
cmp
icebp
into
sti
jb
cwtl
aaa
xor
xor
add
imul
outsl
cmp
lds
mov
jp
or
jns
arpl
cmc
inc
push
xchg
gs
xor
push
xor
jl
pop
in
push
fwait
orl
mov
rcll
nop
popa
and
sub
mov
push
lret
outsl
adc
data16
jmp
std
xor
mov
in
sbb
cld
or
xor
push
popa
sbb
cmp
jle
jecxz
outsl
in
fidivrl
lds
mov
or
pop
les
xchg
dec
scas
out
mov
test
outsl
hlt
fs
pop
inc
add
jge
pop
inc
shlb
xchg
ljmp
jl
inc
xchg
and
push
jns
std
loop
shll
fs
adc
inc
push
loope
into
xchg
dec
jae
sbb
lds
mov
push
dec
scas
stc
aaa
hlt
jg
adc
or
addr16
repz
fdivs
or
mov
and
push
shl
adc
sbb
push
and
adcl
mov
loop
xchg
ja
inc
add
aas
inc
ret
aad
fsubs
mov
cmpsb
sbb
fcomps
mov
mov
and
lods
jmp
icebp
movlps
fcoms
scas
cmp
cld
div
adc
and
faddp
cmp
mov
call
inc
sahf
ret
push
dec
sub
bound
mov
pop
loop
jns
out
xor
mov
pop
push
push
vpmacsdd
mov
dec
jo
xchg
dec
movsl
cmp
nop
subb
in
imul
jg
pop
add
xchg
xchg
ds
mov
xchg
pushf
rcl
cltd
adc
ret
adc
aaa
xchg
lret
ljmp
int
jmp
xchg
and
add
inc
xor
cmpl
scas
push
pop
inc
pop
leave
add
mov
pop
cltd
mov
push
mov
fdivrs
and
mov
sbb
insl
push
clc
dec
adc
mov
outsb
lea
jns
movsl
inc
outsb
push
test
es
jp
jmp
stos
jge
sahf
mov
loope
test
stos
adc
sub
ret
mov
in
push
mov
or
mov
xor
cmc
aam
clc
mov
repz
lea
add
pop
sbb
repnz
icebp
lock
dec
and
enter
imul
dec
scas
inc
jne
pop
mov
enter
out
xchg
fsts
or
jo
pop
and
popa
pop
das
lds
cmpsb
popa
xor
sbb
adc
adc
movsb
faddp
cmp
or
mov
shlb
loopne
scas
adc
ret
xor
addr16
inc
je
adc
pop
out
daa
lods
gs
fwait
pusha
lock
in
mov
or
dec
mov
cmc
nop
push
cmp
xchg
mov
imul
xchg
je
lock
jmp
test
and
cmovns
mov
lods
movsb
or
call
xchg
out
cmp
daa
fadds
mov
dec
lret
leave
enter
divl
xor
mov
or
clc
testb
fwait
xor
mov
mov
mov
push
aam
pop
mov
xor
decl
xchg
xchg
pop
push
jae
in
jo
std
addr16
push
scas
or
mov
add
mov
mov
pop
or
mov
movsb
cmp
mov
or
xor
int3
push
jo
jg
aad
cmp
in
mov
mov
lret
fmul
sbb
xchg
xor
xchg
sahf
jl
mov
cmpsb
fstps
xor
stos
xchg
cld
jg
inc
popf
mov
xchg
iret
jge
decb
mov
mov
pop
mov
cmp
loope
add
lods
test
ret
push
test
dec
cmc
add
cs
pop
pop
aaa
int
movsb
enter
push
addr16
mov
in
int
xchg
xor
sbb
call
test
inc
or
pop
ss
push
ficomps
sbb
mov
sbb
cmpsl
aaa
jbe
ja
xchg
cld
movsl
mov
dec
and
divl
mov
fldl
inc
shrb
dec
ret
cmp
rcrb
movsl
test
mov
pop
and
push
sarb
out
fidivl
jne
and
faddp
and
gs
sbb
js
jl
fnsave
cmp
add
imull
mov
add
shlb
mov
sub
mov
push
inc
fldl
rcr
push
ss
adc
fistps
inc
xlat
loop
jle
jb
pop
push
mov
mov
shr
lret
mov
xchg
ljmp
clc
shrb
sbb
and
out
into
arpl
mov
xchg
cmpsl
lock
out
out
mov
mov
aas
repz
pop
inc
jecxz
lret
arpl
outsl
fwait
mov
imul
mov
xchg
pop
test
popf
cmp
jno
inc
test
push
fwait
push
inc
fwait
cmp
daa
mov
sarb
outsl
loop
push
repz
jae
cmovle
jnp
fldenv
insl
in
jl
rcr
rolb
shrb
and
push
cmp
xor
and
or
ficoml
test
movsb
jmp
imul
fidivrs
mov
add
dec
inc
dec
cmp
mov
fdivrs
pushl
add
lret
mov
mov
add
or
add
out
dec
cli
pusha
stc
ljmp
jno
push
int3
lahf
decl
jbe
ficoms
out
and
mov
loope
dec
es
cs
in
adc
fnstcw
mov
mov
pop
inc
mov
imul
mov
cwtl
add
adc
push
jae
nop
js
negb
mov
arpl
aaa
xchg
mov
xor
adc
popf
nop
mov
dec
cmp
int
in
sub
or
lods
rcl
ret
dec
push
or
les
add
sub
sbb
call
push
pop
shl
loope
push
dec
lahf
sub
inc
out
repnz
xor
cld
adc
mov
jne
push
xlat
jno
aad
addr16
stos
adc
xor
lds
and
push
pop
push
xchg
int
data16
push
repnz
and
dec
cmc
dec
cmc
andl
and
repz
cmp
bound
enter
xor
cmp
or
into
add
xor
cli
and
fistpl
movsl
jge
jo
and
addr16
cmpsl
rorl
mov
pop
jo
pop
xor
sub
aaa
push
mov
mov
outsl
lods
sub
stos
xchg
push
sbb
sbbb
adc
pop
cld
fsts
rcrb
adc
add
hlt
lea
in
or
dec
mov
movsb
push
or
in
ret
aam
iret
idiv
xor
pushf
incb
sahf
shl
jmp
aaa
sub
pop
pop
loope
xor
push
add
inc
xor
enter
fcomps
mov
add
inc
ja
xchg
imul
in
push
pop
and
cmp
cmp
jnp
jmp
pushf
lea
jbe
mov
push
jl
iret
mov
xchg
dec
insb
fdivrl
adc
divl
dec
push
daa
lods
and
and
adc
push
pop
inc
mov
dec
mov
xor
lods
cwtl
repz
std
lret
aas
ja
sahf
fisubrl
lds
repnz
mov
in
mov
arpl
adc
fcoms
lret
rcl
push
popa
loope
sub
cmp
inc
and
cmp
pop
adc
jo
fdivr
mov
xchg
ja
popa
imull
in
push
push
aad
sub
ret
repnz
mov
dec
push
and
pop
ljmp
add
sub
or
jl
adcb
and
in
addr16
sbb
ror
add
add
dec
in
cmpb
aas
add
lock
call
das
or
xor
icebp
and
lret
pushf
pop
mov
idivb
ss
jecxz
jno
outsl
xchg
test
mov
dec
push
sbb
cwtl
and
or
sbb
lret
test
leave
cmp
in
sarb
adc
sbb
test
sbb
lcall
dec
insb
xchg
jo
xchg
insb
push
mov
or
jbe
lock
or
sahf
mov
je
push
sub
lea
xchg
sbb
nop
aaa
in
pop
cmpsl
sbb
push
lcall
pop
int
jbe
aad
ret
xchg
aam
cs
and
pop
rol
inc
lock
jecxz
ljmp
call
xchg
pop
jne
cmpsl
adc
xchg
xor
mov
sarb
filds
loopne
mov
flds
mov
mov
xchg
fcomps
movsb
xchg
push
int
pop
rolb
mov
addr16
pop
stos
sbb
push
pusha
or
jnp
test
int
repz
pop
in
aas
stos
sub
xchg
xchg
aas
cmp
xchg
loopne
lret
les
cli
int
clc
push
adc
nop
inc
arpl
out
dec
xlat
pop
dec
xchg
inc
push
xchg
pmulhuw
adc
ljmp
mov
and
push
inc
adc
int3
xlat
pop
lds
jmp
lahf
jae
outsl
and
dec
aam
lds
in
addr16
loopne
in
sbb
pop
cmp
mov
mov
fsubrs
pop
movsb
fwait
testl
test
adc
cs
mov
dec
adc
mov
xchg
jg
push
roll
pop
fdivr
dec
popa
in
lds
or
sub
test
scas
and
add
inc
xlat
daa
add
mov
nop
sbb
xchg
xchg
push
aad
mov
pop
fcmovnu
repnz
add
fldt
mov
loop
xchg
fistpl
jne
xlat
inc
je
ret
add
mov
push
sbb
cmp
movsb
mov
dec
out
inc
mov
jno
insl
das
ret
aad
xlat
inc
loope
mov
stos
jle
pop
sbb
out
cwtl
mov
dec
loope
jg
addr16
push
movsl
push
pop
inc
mov
aam
adcl
xchg
mov
sbb
and
adc
xchg
cmp
pop
lods
sbb
aaa
sarl
xchg
or
into
mov
add
add
clc
xor
sbb
dec
enter
test
loopne
mov
pop
bound
fcoml
pusha
cmpsl
sbb
push
inc
je
gs
sbbl
push
sub
lcall
jnp
jp
inc
pop
je
es
lahf
stos
fcmovnu
ficomps
mov
push
cwtl
inc
xchg
jp
and
jae
test
cmpsl
inc
out
xor
aaa
repz
mov
add
int3
loope
mov
sbb
jnp
pop
test
sbb
mov
cmp
sub
shll
sub
sub
xchg
push
mov
lds
in
push
sahf
adc
jle
and
jl
push
adc
adc
sbb
xlat
cmpsl
mov
out
aas
jns
je
icebp
xor
icebp
inc
aas
mov
popa
xchg
lock
mov
cmp
lahf
adc
mov
popf
addl
nop
scas
into
cmpsb
xor
rcll
inc
in
xor
and
mov
mov
les
sub
aas
cld
add
add
mov
sub
movsl
mov
outsl
dec
xor
daa
insl
push
push
les
and
mov
jnp
cltd
imul
fs
jb
inc
fisttpl
pop
jmp
pop
xchg
int
and
jle
adc
and
dec
mov
imul
or
or
shr
adc
add
int3
in
pop
push
pop
inc
repz
stc
pop
mov
in
lahf
out
push
test
stc
fcomps
xchg
push
inc
xchg
jecxz
sahf
cmp
orl
inc
lea
loop
fwait
pushf
aam
ret
les
lret
pop
mov
xchg
std
inc
push
inc
fsubrl
xor
fildl
inc
jb
inc
test
dec
xchg
fmul
adc
loopne
cli
loop
mov
sub
fcomi
movsb
adc
pop
pop
sub
cltd
jnp
popf
cli
clc
clc
push
pop
fisubrs
fbstp
cmp
mov
add
cld
mov
repz
mov
adc
imul
adc
sbb
jp
mov
fidivrs
std
pop
adc
lret
pop
pop
repnz
jo
jmp
in
mov
add
outsl
fmull
add
add
push
clc
sbb
xlat
mov
push
movl
inc
test
test
xor
push
add
cmp
adc
or
adcb
mov
inc
sub
hlt
ret
outsb
sbb
push
lret
mov
and
imul
jmp
testl
or
sub
into
sti
xchg
jne
test
pushf
popf
pop
mov
pop
mov
xor
rol
es
push
mov
mov
jae
dec
pushf
outsl
in
test
test
ret
je
out
push
sub
sbb
fldl
cmpb
pusha
imul
xlat
sbbl
add
fs
fsts
jno
xchg
lea
jmp
cmpsl
add
js
mov
outsb
sub
push
add
scas
insb
xchg
mov
inc
int
mov
cmp
mov
ljmp
lock
fwait
cmp
fnstsw
jb
lcall
sbb
and
enter
movsl
loopne
adc
or
push
mov
fists
int
jbe
lods
sbb
inc
imul
mov
push
adc
aam
jle
inc
loope
mov
mov
cmc
arpl
nop/reserved
and
mov
movsl
leave
cmpsb
clc
loopne
mov
test
dec
jle
sbb
and
imul
lahf
jnp
stos
mov
ret
nop
mov
cmp
shl
mov
sub
push
loopne
pushl
insb
ss
lret
mov
icebp
rorl
cmp
jb
push
mov
cmp
inc
add
sbb
cld
test
jnp
outsl
das
stos
fistpl
xchg
ja
out
jle
and
data16
pop
push
cmp
push
lret
daa
xor
push
js
movl
mov
test
pop
int
insb
test
sub
jmp
scas
add
and
daa
lods
and
call
dec
test
int
movsl
lock
in
mov
lret
cmp
stos
out
sti
xchg
mov
and
loopne
xlat
sti
rcrl
jecxz
test
hlt
dec
fidivl
hlt
dec
dec
fistl
xchg
pop
aam
insl
cmp
mov
xor
push
mov
mov
das
sti
les
scas
repnz
jmp
jb
mov
aas
mov
sbb
cmpsl
les
pop
and
negl
push
outsl
fiadds
push
and
adc
pop
or
add
addr16
mov
movsb
mov
push
jb
in
inc
adc
sbb
ret
rol
jg
fcomip
aas
idivl
xor
jns
sbb
sub
cwtl
cli
or
call
fists
xchg
xchg
and
mov
sub
cmp
mov
popa
std
mov
mov
cmpb
in
hlt
lret
cmp
sbb
inc
sti
sbb
int3
mov
in
jl
dec
adc
and
sahf
es
pop
std
pop
sarb
inc
push
push
mov
mov
les
cltd
jne
add
xlat
mov
inc
jns
call
outsl
negb
push
pop
data16
adc
and
data16
sub
push
cmc
ret
shll
xor
and
push
or
ljmp
pop
ret
roll
es
sarl
xor
imul
cwtl
xchg
loope
fcompp
mov
imul
jl
jne
push
int3
jne
jns
xchg
adc
push
and
and
in
inc
xorl
popf
lock
clc
arpl
stos
call
fdivs
xor
or
lock
popa
getsec
sub
out
and
or
mov
and
in
shll
adc
jl
int
int3
and
xchg
xor
xor
scas
and
pop
ret
lcall
aad
mov
mov
pop
mov
or
push
das
push
and
or
jnp
insl
out
fidivrl
call
loop
jns
jp
cltd
dec
cmp
insl
and
push
ficoms
cs
cmp
dec
mov
hlt
mov
pop
int3
in
or
lret
fs
add
jbe
mov
int3
cmp
enter
sbb
push
jmp
dec
rorb
lahf
mov
popa
stos
inc
add
pusha
imul
push
add
push
xor
repnz
lea
mov
mov
sbb
pop
mov
jecxz
push
aaa
mov
inc
sub
push
jmp
mov
int
test
fsubs
xchg
or
loop
cmc
aas
cmpsl
outsl
mov
test
cld
pop
sar
mov
adcl
xchg
bnd
xor
jo
xchg
call
inc
mov
push
xchg
xor
incb
dec
cltd
data16
xor
push
dec
inc
shll
lods
adc
adc
shlb
sbb
adc
cmc
shlb
sbb
xchg
fisttpll
inc
sub
mov
bnd
shr
ss
inc
cmpsb
or
sbb
pop
and
mov
jle
and
movsl
pop
call
or
sbb
sbb
dec
mov
aad
ret
je
aam
test
iret
lods
cmp
mov
xchg
scas
inc
out
xchg
add
xor
push
sub
jns
in
jbe
cmp
add
les
decl
xchg
aam
and
mov
push
pop
push
ljmp
fdivrs
jg,pt
adc
and
jns
or
push
lahf
call
jecxz
test
jmp
sbb
sub
jns
inc
movsl
movsl
test
add
mov
mov
test
movsb
jp
pusha
pop
mov
push
loope
dec
fs
inc
inc
inc
outsl
adc
call
loopne
and
mov
mov
sti
mov
or
rcl
or
jbe
daa
lds
scas
adc
ja
cmp
movsb
and
mov
dec
mov
out
lods
or
es
push
mov
test
xor
jae
or
int
mov
sbb
xchg
push
xchg
cld
rcll
xchg
pop
dec
xlat
sub
sub
xchg
ss
pop
mov
leave
pusha
call
pushf
jmp
scas
das
cmp
out
or
mov
clc
das
dec
lahf
adc
push
pop
jne
mov
fcoms
insl
inc
jecxz
movsl
adc
es
ljmp
fwait
daa
test
mov
sbb
arpl
pusha
out
cmp
xchg
imul
inc
shll
add
ljmp
and
loope
out
adc
lahf
sarb
jecxz
push
movsl
pop
jns
sub
xchg
push
jo
push
pushf
sbb
xchg
mov
push
imul
sbb
orl
daa
fwait
mov
mov
push
fsubp
inc
cmp
xchg
arpl
sub
inc
dec
mov
sub
negl
lcall
sbb
add
icebp
test
xchg
repnz
dec
xor
mov
lea
fcoml
mov
outsl
mov
scas
push
add
aam
sub
fs
repz
and
movsl
add
fcmovbe
lret
out
xor
sbb
mov
inc
aas
shlb
inc
gs
outsl
xchg
add
cmp
inc
shll
insl
rcrb
ret
mov
dec
lret
call
xchg
shll
cmpsb
imul
stos
push
enter
adc
jg
sbb
cs
std
adc
xor
xchg
add
cwtl
and
or
push
fiaddl
jne
fisubrs
adc
pop
and
test
pop
sti
imul
jae
icebp
cmpsl
popa
idivb
fs
mov
outsl
cltd
data16
data16
jmp
push
cwtl
mov
stos
dec
stos
adc
and
scas
xchg
adc
in
dec
dec
and
sbb
or
ret
aas
dec
outsb
sub
stos
pop
xor
shll
shlb
add
lock
add
arpl
enter
lds
mov
pop
lcall
sbb
add
push
lods
mov
out
add
mov
movsb
push
mov
pop
pop
xor
fwait
iret
xor
sbb
sub
mov
popa
shll
pop
cmp
add
jmp
mov
inc
add
iret
sub
mov
ror
and
cmpsl
and
push
out
mov
call
std
inc
mov
movsb
jmp
xchg
pop
call
jnp
cmp
mov
cmp
ffree
push
push
xchg
push
mov
fisubrs
adc
or
inc
mov
sub
push
push
mov
pop
popa
xchg
dec
jae
imul
jmp
std
ret
fmull
ds
dec
mov
idivb
rep
adc
pop
jl
lock
xor
mov
cmp
add
in
or
mov
test
push
into
fldl
jmp
repnz
mov
cmp
insl
aam
insb
mov
lahf
movsl
dec
push
add
lret
add
inc
outsb
lcall
dec
inc
and
bound
add
leave
out
idivb
loope
leave
and
sub
jle
es
cmp
jp
into
adc
xor
in
call
scas
adc
and
mov
shll
jmp
cmp
arpl
lcall
jecxz
sub
push
or
repnz
or
loope
mov
pop
cli
xor
imul
movsb
mov
iret
dec
adc
stos
adc
pop
push
and
movsl
mov
xchg
jg
mov
movsl
adc
dec
shll
outsl
jp
or
or
push
std
rcl
scas
sbb
jb
mov
push
xor
add
shrb
insb
outsl
push
dec
jl
push
les
test
jnp
lock
imul
fisubrs
rcll
dec
stos
sub
shlb
and
dec
xchg
and
arpl
dec
sbb
jmp
adc
int3
clc
adc
pop
add
adc
fdivs
scas
enter
aam
pusha
fstpl
and
loopne
xor
mov
ja
push
sbbl
add
sbb
or
xor
sbb
insb
rcrl
xor
cmpsb
and
push
mov
or
dec
mov
cmp
push
inc
ret
jle
out
mov
faddl
arpl
sbb
inc
xchg
mov
sub
out
add
push
add
sub
fnstcw
add
cmp
adc
lcall
pop
ljmp
inc
sbb
xor
daa
dec
jg
lds
inc
divb
icebp
lret
inc
xchg
lret
pop
xchg
ret
andl
or
daa
dec
add
loop
mov
mov
sahf
sbb
mov
cmpsl
pop
jecxz
inc
aaa
insl
out
or
ljmp
cmp
lahf
lret
sub
lock
test
sbb
fsubs
pop
add
jns
pop
push
mov
in
ret
or
cmp
jne
push
clc
lock
mov
pop
xchg
sub
inc
mov
add
in
mov
push
fstl
mov
sub
pop
inc
jl
sbbl
jnp
pop
scas
cmp
push
add
ret
pop
jecxz
mulb
into
mov
sbb
shr
or
repnz
outsb
in
pop
mov
aas
movsb
xor
push
rclb
or
hlt
decb
dec
sbb
mov
xor
xor
xor
stos
cltd
dec
sbb
fwait
inc
xchg
inc
xchg
dec
or
je
test
mov
pop
dec
add
pushf
ja
in
mov
imul
and
lock
stc
inc
inc
push
or
int3
daa
xchg
sbb
iret
repnz
xlat
fdivrs
aas
enter
dec
add
push
aas
xchg
dec
cmp
dec
cs
and
xchg
lods
scas
inc
movsl
idivb
or
scas
mov
fildl
movsl
jle
push
mov
mov
loopne
es
mov
scas
out
orl
jecxz
and
sbb
scas
sub
adc
or
jge
dec
jecxz
jnp
dec
and
fistpll
daa
lock
push
xor
cld
sti
cmp
mov
xchg
push
inc
add
or
pusha
fbld
and
push
imul
mov
xchg
jns
pop
or
stos
pop
fcompl
sub
adc
hlt
mov
mov
insb
add
andb
mov
nop
mov
pushf
insl
shr
les
push
cmp
sub
mov
adcl
xchg
jl
push
lea
adc
xchg
pop
int
jecxz
push
out
cmp
adc
ficomps
adc
jg
das
hlt
cltd
clc
inc
insb
fcoml
inc
push
push
pandn
inc
cmpsb
jnp
ljmp
clc
lock
clc
loop
jg
mov
insl
addr16
mov
aad
pop
mov
repz
aaa
bound
mov
sti
shll
jl
shll
ss
test
hlt
call
adc
aaa
add
test
pop
ucomiss
loope
inc
in
dec
hlt
push
cmpl
sbb
and
pop
jecxz
xchg
cmp
or
mov
add
adc
dec
jnp
cmpsl
stos
into
pop
insb
cmp
mov
jmp
inc
cmp
push
imul
cmp
push
int3
rcrl
into
or
in
sbb
mov
enter
and
es
sbb
xor
add
mov
xor
add
hlt
pop
scas
push
mov
pop
adcl
jmp
mov
outsl
js
arpl
jge
jne
jle
xor
or
popa
test
inc
stos
lret
rcrb
xchg
pop
add
insb
push
mov
dec
mov
xchg
sbb
scas
loope
pop
sub
pop
pop
repnz
loope
rcl
mov
loopne
adc
ret
lock
in
stos
adc
rcl
das
add
fcomp
and
fstpt
call
rcrl
mov
clc
bound
aaa
fwait
dec
jmp
mov
movsb
or
dec
stos
push
mov
cmp
addr16
pop
mov
xchg
adc
push
cli
add
cmp
leave
dec
icebp
scas
ffreep
imulb
sbb
loope
and
stos
mov
add
sub
inc
lahf
add
popf
mov
stc
pop
dec
cltd
inc
and
xor
ja
jnp
mov
sub
ret
sbb
push
mov
sub
lea
mov
ret
imul
dec
lcall
jbe
bnd
push
ss
mov
jmp
and
inc
out
pop
je
xchg
popa
fsubrs
iret
fwait
xor
cmp
xchg
int
sbb
cmp
or
das
sub
mov
movsl
and
std
push
in
sub
std
mov
push
fldcw
jae
or
es
int
xchg
stc
int
push
imul
aam
movsl
mov
jbe
je
inc
mov
jae
add
mov
lock
test
push
in
push
pop
divl
scas
fadds
xchg
inc
insb
mov
xor
in
push
std
push
cs
repnz
fxch
icebp
notl
fwait
and
and
sub
and
aas
push
in
test
icebp
mov
xchg
jb
pop
mov
lds
mov
sub
ds
fsubl
dec
into
inc
fcoml
mov
mov
sub
das
out
cmp
test
xchg
shll
pop
stos
xor
fs
inc
daa
loop
sub
mov
xchg
pop
inc
and
xchg
test
sub
out
jge
sbb
and
insl
outsl
sub
cmp
int3
popf
je
or
cli
rclb
js
push
adc
xchg
movsl
xchg
mov
mov
cmc
call
stos
mov
pop
cmp
cltd
std
outsl
push
and
lcall
adc
xchg
and
lods
int3
leave
and
decb
and
fldl
jecxz
sbb
adc
adc
xor
adc
cs
inc
pop
out
jbe
aaa
lods
bound
loope
stos
cmp
pop
scas
or
leave
lods
or
pop
push
push
pop
push
dec
jbe
sbb
addr16
xchg
xor
in
movsl
bsf
in
fs
sbb
mov
sub
loope
add
enter
fcomps
dec
jo
ss
inc
push
inc
jmp
out
pop
xor
ret
pop
stos
xchg
sti
cmpsl
jae
add
loop
mov
push
stc
insb
outsb
jge
es
daa
adc
loope
test
cmpb
sar
jge
inc
rcrl
scas
dec
sti
rcrl
cs
jbe
jmp
add
mov
bound
xchg
sti
inc
or
mov
pop
mov
dec
loop
adc
mov
push
or
test
push
nop
sbb
stos
das
cwtl
arpl
les
sub
and
int
adc
rcl
cli
xchg
daa
mov
or
or
imul
and
xchg
push
mov
sbb
sahf
push
mov
pop
sbb
fistps
lcall
call
dec
es
push
sbb
xor
jb
repnz
inc
add
lods
cmp
stos
pop
imul
insb
sub
test
mov
xchg
add
pop
jmp
movsb
orl
cltd
jmp
push
shlb
mov
fsubrl
add
movsl
fsubrl
adc
aas
mov
dec
jmp
iret
push
dec
int3
mov
popa
enter
popa
cltd
jle
push
outsl
lock
cmc
lock
loopne
scas
jne
mov
push
jns
into
and
pushf
rolb
push
pop
sbb
aas
ja,pt
sahf
rorl
jns
and
sbb
mov
subb
xor
leave
adc
jae
and
xchg
adc
pusha
sbb
loope
mov
cs
stos
stos
push
movsb
sbb
sub
cmp
in
mov
mov
in
push
jno
addr16
adc
test
icebp
sbb
popa
mov
ret
push
mov
nop
out
ret
pop
mov
fdivrl
xor
adc
and
xchg
fildll
out
mov
das
cmpsb
ds
fxch
adc
test
xor
testb
mov
jp
out
imul
mov
mov
xchg
dec
xchg
neg
and
movsl
data16
iret
data16
fidivrl
xchg
mov
xor
arpl
frstor
idivb
mov
sub
iret
inc
mov
les
sbb
mov
in
addr16
mov
cmp
mov
fnstsw
push
add
inc
cli
and
xchg
cld
mov
in
cmp
adc
jns
xor
fcomi
orl
lods
or
pop
ds
popf
jg
pop
xor
test
sbbl
test
test
push
adc
clc
push
daa
adc
mov
aam
lcall
arpl
fucomp
out
xchg
stos
cld
out
sti
hlt
jmp
lcall
adc
jbe
cmp
inc
outsb
testl
adc
mov
inc
xlat
mov
mov
jecxz
push
es
mov
adc
mov
insl
imul
movsl
pop
add
aaa
mov
pop
xchg
adc
xor
sbb
sbb
ss
pop
push
imul
inc
mov
jg
xor
fwait
sub
rorl
aam
out
out
sarb
pop
das
xchg
push
icebp
icebp
jge
lcall
cmp
push
shlb
outsl
iret
test
push
cmp
test
jle
stc
cs
enter
mov
popa
daa
xor
cmp
xlat
inc
mov
adc
mov
sbb
adc
mov
or
lods
fwait
jle
jae
add
daa
sub
addl
cmp
std
mov
pop
mov
add
mov
lods
mov
adc
outsl
mov
jnp
repnz
nop
mov
cmc
fmul
mov
push
cmc
cmp
into
and
std
push
repz
repnz
xchg
pop
or
jae
stos
scas
mov
cmp
or
or
insl
cmp
dec
mov
in
mov
shrl
pushf
movsb
stc
std
mov
inc
dec
dec
dec
out
lods
mov
add
jmp
or
jnp
jno
int3
aas
addr16
cmc
dec
adc
jmp
cmpsl
xchg
pop
jge
dec
call
xor
repz
xchg
sbb
mov
adc
add
lds
faddp
data16
mov
adc
test
aaa
cmpsl
je
ja
int3
shll
adc
popa
decb
add
aam
inc
sbb
adcl
in
hlt
lds
jb
ret
xor
fisttps
pop
sbb
adc
sub
insb
ret
or
shll
aad
mov
mov
ss
out
mov
decl
scas
adc
mov
ret
repnz
lea
add
sahf
mov
pop
dec
mov
inc
test
sbb
xor
xchg
push
outsl
cwtl
stos
cmp
inc
jbe
lcall
xchg
pop
mov
xchg
sub
into
arpl
lcall
inc
xlat
add
mov
jg
jne
shll
dec
sti
mov
iret
ss
lods
icebp
psubsb
fcomi
int3
and
scas
jo
add
cmp
lret
sbb
xor
and
orb
iret
xorl
insb
pop
xor
movsb
jns
cmp
enter
push
sub
xchg
mov
sub
imulb
in
mov
call
arpl
shl
push
push
adc
or
sub
xor
test
cmp
out
imul
sub
movsb
push
jge
adc
in
fcoml
cmp
test
sbb
sub
sbb
pop
leave
sbb
mov
and
ret
xor
loope
movsb
sbb
ja
add
jne
jecxz
lock
addb
js
xchg
pop
enter
fists
add
cmp
jge
cmp
in
loop
push
dec
fadd
outsl
jo
loopne
pop
inc
or
movsb
rorl
inc
mov
add
insl
stos
fsubrs
and
xor
fiaddl
mov
sahf
call
mov
mov
lods
xchg
mov
iret
dec
sbb
xchg
mov
push
jp
ja
cmp
fwait
stc
movsb
jns
or
fldcw
xchg
repnz
mov
xchg
shll
mov
cmp
inc
imul
push
or
addr16
add
add
sbb
iret
jle
mov
fs
add
data16
rcll
adc
and
xor
mov
mov
inc
cwtl
fcmovnb
xchg
aas
mov
aam
into
dec
test
xchg
int3
xchg
outsb
in
mov
add
and
xchg
mov
jns
dec
mov
addr16
enter
cmp
andl
mov
inc
fisubl
faddp
clc
xor
or
xchg
rcrb
int
or
cmp
aas
leave
jb
and
jns
xor
sbb
f2xm1
lahf
enter
adc
adc
mov
nop
pop
icebp
fs
jne
popa
xchg
sbb
jbe
jns
add
cltd
fdiv
and
mov
cs
or
test
xchg
xchg
and
mov
dec
or
mov
inc
addr16
lret
bound
add
mov
mov
push
push
sbb
xchg
xchg
pop
sub
outsl
loop
in
fsubl
aam
inc
or
xchg
js
pop
sbb
loope
mov
mov
jbe
in
jg
out
insl
pushf
inc
loop
xchg
incb
mov
sbb
addl
jl
outsb
je
jns
out
add
aam
add
sub
or
ret
and
inc
xchg
jns
inc
xchg
xor
pop
mov
cmpsb
xlat
ret
aaa
shll
pop
pop
out
push
mov
push
sbb
mov
and
and
cmp
xor
enter
sbb
dec
mov
stos
inc
popa
xlat
ja
lods
lock
imul
or
cli
les
mov
add
mov
mov
cmp
pop
inc
pop
bound
sub
xchg
aas
xchg
in
fs
mov
sub
lcall
or
xchg
mov
jbe
call
xor
out
sub
add
mov
cmpsl
push
cmp
test
fbld
ret
cmpsl
inc
pop
lcall
mov
push
xchg
cmp
out
mov
js
sbb
arpl
movsb
mov
test
jg
sbb
dec
aam
imul
jns
and
stos
cwtl
mov
push
jo
push
nop
outsb
in
insl
fstp
pop
push
inc
fnstcw
pop
outsb
adcl
movsl
js
dec
inc
aaa
fwait
test
es
fs
lret
sbb
mov
std
ret
cmp
call
sbb
push
sbb
out
push
xor
test
addr16
cmp
mov
push
stos
test
loope
mov
mov
cltd
pushf
and
mov
ret
pop
lea
std
popa
jnp
aad
loop
lods
pop
lock
outsl
and
ja
xchg
fbld
movsl
jmp
inc
mov
push
xchg
pop
flds
aaa
push
out
fwait
or
adcb
std
movsl
add
xlat
mov
mov
shrb
pop
jne
sarb
mull
mov
cmp
out
and
mov
and
outsb
mov
ret
cmp
movb
mov
mov
sub
inc
ljmp
jle
aas
pop
xor
sbbb
dec
daa
xchg
int3
cli
sbb
int
fcomps
jns
shll
popa
sbb
mov
dec
ret
xchg
sub
shlb
lock
call
das
push
mov
int3
inc
mov
das
xchg
adc
dec
loopne
dec
fdivrs
adcb
inc
divl
imul
arpl
lods
cltd
jp
test
mov
dec
mov
sahf
xchg
and
cltd
pop
sub
aas
pop
fs
lock
jmp
ja
xor
dec
out
dec
pop
test
outsb
rol
ss
pop
jmp
lods
out
loop
test
push
inc
vmovsd
in
cmp
xor
loop
add
lahf
fwait
sbb
hlt
inc
sbb
jl
cmp
scas
inc
mov
jp
out
mov
add
aaa
push
loope
inc
or
dec
ljmp
idivl
xchg
xlat
scas
call
inc
pmulhuw
xchg
fldt
out
xchg
xlat
iret
pop
icebp
cs
push
fcoms
outsl
cwtl
in
cmpsl
push
jae
pop
ss
pushf
add
stos
jns
stc
adc
das
sbb
test
push
pop
or
enter
adc
mov
test
scas
lock
mov
mov
pop
jnp
inc
idivl
pop
rcrl
mov
sub
mov
das
push
insb
dec
insb
insl
xor
pop
jge
jge
mov
mov
inc
xlat
repnz
ret
sbb
pop
call
cmp
andb
adcb
add
inc
add
sbb
cltd
push
jmp
jle
dec
loope
xor
pop
jp
std
test
mov
addl
pop
sub
jg
stos
xchg
mov
adcb
xor
add
sarb
cmpsb
ret
adc
add
jae
pop
iret
sbb
mov
sub
adc
add
je
dec
adc
xor
cli
cmp
icebp
pop
ljmp
sub
cmp
je
or
ja
sub
cmc
sti
sub
in
dec
pop
outsw
repz
cmp
cmpsb
js
push
call
xor
pop
and
addr16
iret
je
cmpsl
jecxz
push
popf
or
mov
ficomps
popa
adc
arpl
mov
scas
fstp
cmpb
or
iret
pusha
cmp
daa
das
sbb
in
sub
loopne
sub
incl
das
std
mov
or
jecxz
dec
mov
aam
into
je
add
jecxz
pop
mov
fadd
cs
jmp
mov
push
xchg
scas
aad
jns
cmpb
xchg
fwait
cwtl
movsb
ja
lods
lds
inc
pop
jle
scas
mov
loop
pop
push
lods
jge
inc
mov
aam
test
lock
adc
and
fidivs
and
or
iret
dec
ja
or
cmp
pop
inc
cmp
addr16
push
sub
mov
mov
ret
push
sti
mov
add
fisttps
ret
fldl
mov
fmuls
add
into
pop
insb
dec
rcrb
test
jmp
jb
dec
add
mov
movsl
push
out
dec
push
adc
xchg
and
into
out
enter
add
ljmp
sub
popf
jno
dec
ljmp
pop
adc
mov
pop
inc
cmp
sub
mov
and
jnp
loopne
ds
ficoml
aam
mov
adc
insl
mov
sub
outsl
es
addr16
test
mov
rorl
push
es
mov
jno
decb
inc
je
jge
dec
pop
scas
dec
push
xor
mov
jge
push
aaa
imul
shlb
pushl
loop
repz
fdivl
jge
and
or
mov
ficoms
and
jno
xor
xchg
sbb
or
lea
sarb
scas
fwait
rcrb
mov
cltd
mov
adc
and
divb
popa
movsl
xor
xor
mov
cmp
jne
ftst
dec
scas
movsb
and
mov
das
mov
in
mov
add
jge
sub
cmp
in
mov
js
or
jge
adc
mov
adc
xlat
pop
ljmp
fnsave
push
roll
dec
bound
fs
xchg
fs
pusha
push
push
cwtl
fisttpll
andb
sahf
int
cwtl
fisttps
inc
cld
bound
cmp
sbb
ds
rcrl
je
ret
push
aam
mov
mov
xchg
pop
or
adc
or
jbe
sti
and
fadds
stc
mov
adc
aaa
insb
popf
add
and
xor
aas
mov
sbbb
les
mov
jns
ficompl
cs
cld
enter
mov
mov
clc
pop
orl
test
out
jge
pop
sub
sub
subb
inc
divb
lock
mov
push
add
mov
and
adc
push
test
dec
es
jbe
bswap
push
jg
gs
push
sarl
add
push
out
lds
mov
or
push
test
call
or
stos
sub
push
mov
aam
rcll
pop
out
pop
inc
cld
mov
xor
jg
icebp
cmp
mov
dec
cli
xchg
clc
pop
leave
cwtl
popf
cmpsl
inc
mov
cmp
lods
out
repnz
sbb
xchg
push
mov
das
lcall
pop
mov
int
pop
pop
in
sti
mov
fbld
xor
add
cmp
cmp
in
negl
scas
aaa
stc
push
rclb
out
mov
xchg
imull
leave
xorb
sub
xchg
lods
inc
test
and
dec
in
jb
lods
je
jmp
mov
jg
pop
lcall
in
arpl
push
cmp
pop
jmp
fs
jecxz
push
pop
adc
dec
jmp
lds
adc
jmp
jecxz
outsb
mov
jo
cmpsl
cs
xchg
push
push
out
or
loope
iret
fistps
out
in
movsl
and
add
push
sub
inc
sbb
mov
nop
jp
int
jge
or
bound
push
into
outsb
adc
inc
xchg
sbb
cwtl
dec
inc
adc
cmp
jge
in
mov
push
adc
adc
xchg
pop
es
push
mov
fstl
inc
js
mov
pop
ficoml
lret
fimuls
shll
mov
out
les
mov
pushf
xor
cmpsb
pop
insb
xchg
pop
nop
mov
push
loopne
in
lret
mov
aad
xchg
sub
jmp
enter
or
insl
pop
push
test
xor
add
jbe
outsl
fidivrl
into
rcrb
xor
mov
int3
js
fucomi
enter
xor
mov
nop
jno
inc
cmc
sbb
cld
jae
stos
sub
jp
mov
ret
and
mov
pop
fcomps
mov
repz
cs
inc
jae
pusha
pop
jae
jp
nop
adcl
fsub
cmp
ljmp
or
and
loope
and
sub
jl
and
cltd
test
in
in
mov
addb
orl
or
push
popf
pop
add
loopne
push
xchg
insl
stos
or
sbb
mov
outsl
xchg
arpl
adc
mov
mov
addr16
lahf
cmp
fists
repnz
push
bound
mov
arpl
or
sub
cmpsl
xor
cmp
xchg
leave
add
call
jle
jnp
jno
pop
xchg
pop
cmp
xchg
or
xor
out
sub
jl
stos
mov
out
in
dec
jl
bound
orb
dec
sub
push
or
aad
and
test
jle
sub
xchg
cltd
xlat
arpl
mov
cmp
je
push
stos
stos
add
fbld
or
jbe
es
lods
idivl
pop
mov
sbb
and
inc
mov
xor
jmp
jl
decb
cltd
or
adc
sahf
mov
adc
pop
inc
push
les
or
loope
in
mov
and
leave
lret
jo
addr16
jo
mov
mov
cmp
bound
gs
pop
pop
sub
dec
ficoms
add
jae
pop
mov
jmp
jl
push
enter
movsl
xchg
in
popl
inc
cmp
inc
sub
jle
jg
xor
push
lock
jmp
mov
adc
cltd
add
jnp
jmp
adc
mov
arpl
jge
repz
xor
daa
push
add
mov
push
sub
imul
hlt
fdivs
mov
jbe
aam
aad
in
mov
mov
sbb
repnz
leave
jo
mov
ja
and
cmpsb
add
inc
dec
inc
imul
iret
fsubs
xchg
jb
jg
dec
jae
lods
mov
or
nop
hlt
clc
sbb
pop
xor
sti
loope
cmpsl
inc
test
lods
sub
mov
jg
bound
fmul
mov
jecxz
jg
jle
aaa
push
aam
std
test
cmp
dec
faddp
scas
cmp
imul
xorl
cs
out
out
mov
push
movsb
push
pushf
mov
test
cwtl
xor
mov
add
mov
ret
stc
xchg
dec
jecxz
fistpll
repnz
mov
jl
lret
pop
pop
loope
mov
xchg
addb
inc
sub
jo
ret
sub
cmp
jl
mov
pop
push
mov
repz
rorl
fcoml
rolb
ficoml
mov
inc
xor
mov
fdivl
sarb
js
mov
movsl
and
dec
jp
jp
lret
jae
mov
mov
movsl
xchg
mov
test
sub
out
cmp
cmp
shrb
cmpsb
aaa
shl
dec
push
loopne
add
or
inc
les
movsb
and
inc
sub
mov
xor
js
cltd
pushf
push
scas
ja
mov
sub
xor
dec
ret
scas
icebp
call
xor
add
inc
int3
cmpsl
movsb
call
and
lea
pop
or
fwait
pop
mov
pusha
rorb
push
adc
insl
jne
mov
idiv
sub
jno
in
in
sub
jl
sub
cmc
mov
jle
stc
test
enter
jne
hlt
mov
dec
inc
dec
ret
xor
divb
xchg
call
pushf
adc
jb
jo
xor
addr16
pop
jb
addr16
cmpsl
adc
fbstp
lods
jecxz
mov
inc
mov
inc
cmp
xor
dec
sub
push
in
xor
insb
loop
push
fdivs
enter
xchg
and
cmp
sub
decb
push
push
cs
std
adc
shll
clc
sysret
xor
daa
rorl
xor
sbb
dec
fwait
inc
mov
lea
push
lods
dec
mov
mov
inc
sbbb
jo
pop
mov
cmp
mov
pop
cmp
xchg
mov
dec
cmp
enter
shlb
addr16
jne
notl
fstps
and
rcrl
or
out
xlat
dec
ret
xor
adc
and
or
bound
testb
mov
add
mov
jno
cli
cmpsb
les
cld
je
stos
loopne
test
push
insb
jae
jnp
pushf
rclb
jne
push
call
sarw
out
cmp
mov
or
inc
ret
adc
ja
cmp
and
call
inc
cmp
inc
push
push
pop
dec
jbe
push
sub
mov
adc
mov
xchg
mov
subb
and
cltd
lret
mov
nop
pop
lret
add
imul
inc
dec
sbb
xor
adc
ss
mov
outsb
movsb
mov
mov
outsb
cmp
shl
adc
cs
mov
jns
sbb
cmpsl
xor
sti
xchg
sub
mov
push
into
icebp
mov
dec
mov
rcrl
je
and
int
es
sub
xor
pushf
mov
imul
cmp
cld
imul
subb
xorl
in
inc
adc
jo
cli
push
sub
inc
test
scas
inc
mov
bound
cli
mov
dec
cmp
inc
shrb
sbb
ja
sbb
data16
mov
movsl
repz
push
inc
fstpt
cmp
enter
inc
lret
push
dec
lock
adc
loope
inc
data16
movsl
out
imul
mov
xchg
cltd
aam
sub
dec
sub
ret
lahf
push
arpl
insl
in
mov
cmp
jns
jp
push
stos
jns
andb
pop
addr16
push
fldz
test
ret
js
xor
cmp
loop
cmpl
jp
outsl
sbb
cmp
lock
or
jno
or
adc
scas
lahf
nop
push
cld
and
lret
popf
lahf
cmp
jb
stc
fsubrl
mov
insl
dec
cmp
scas
out
inc
mov
icebp
popf
adc
cmp
push
outsb
imul
push
sbb
inc
movsb
mov
jo
cmpsl
pop
fildll
sub
sub
pop
mov
fsubl
adc
push
les
lcall
jl
and
shlb
pop
decb
xchg
sub
pop
ljmp
cmp
jne
xor
insb
mov
in
dec
mov
cs
movsb
lret
mov
popf
repz
sahf
ja
jg
push
and
cmp
xor
in
add
xchg
cs
push
nop
jns
pop
jns
cmpsl
or
add
dec
mov
fisubrl
lea
iret
cmp
lret
sbb
dec
icebp
xchg
leave
mov
pop
jne
mov
std
lcall
icebp
mov
daa
pushf
gs
push
inc
push
out
fstps
dec
shll
push
dec
xchg
shrb
xchg
add
gs
cmpb
mov
jle
ret
sub
xchg
popf
arpl
fwait
imul
xor
jb
or
cmp
cmp
jl
jmp
add
xor
aas
out
xchg
enter
sti
inc
addr16
addb
pop
mov
imul
int3
mov
add
and
fnstenv
mov
push
in
jge
js
adc
stos
lea
lea
jecxz
or
clc
dec
mov
jp
rorl
push
sbb
mov
fwait
and
outsb
jge
jle
gs
dec
inc
inc
jmp
pop
outsl
out
fs
jmp
cmp
mov
lods
push
loope
leave
nop
fwait
daa
mov
add
int3
pop
sbb
cltd
xor
dec
adc
pop
in
inc
push
and
or
stos
mov
aas
cltd
jo
sub
jmp
loopne
sbb
sub
lods
les
adc
shr
push
mov
inc
std
push
sarl
decb
ret
ds
lret
arpl
cmp
jg
imul
cltd
cmp
imul
pushf
fists
fsubrl
cmp
call
push
add
jo
add
pop
cmp
jae
es
xor
pop
in
test
pushf
out
dec
ret
movsb
mov
in
lock
sub
jmp
xor
mov
mov
test
lds
addr16
repz
cmp
jne
add
and
or
inc
mov
mov
jae
cmp
push
div
dec
cmpsb
into
aam
jno
xchg
xchg
push
dec
rorb
jp
cld
sbb
out
dec
sbb
adcl
aas
cmp
ss
xor
cmc
jb
xor
mov
shlb
fildll
rclb
adc
loope
outsl
loopne
adc
jb
dec
inc
add
inc
pushf
fcmovne
pop
adc
add
inc
rclb
lahf
lcall
fs
mov
popa
xchg
push
mov
mov
nop
or
push
mov
jo
loope
lret
mov
xlat
rcll
cmp
xchg
fcomps
xlat
in
mov
decb
lods
sbb
xor
cmp
enter
xchg
fcmovnb
sub
sub
mov
jne
dec
xlat
aad
mov
push
add
andb
iret
dec
sub
fwait
adc
pop
int
jp
dec
fwait
xor
adc
lcall
or
scas
inc
orl
movsb
pusha
xchg
dec
cli
jne
sti
mov
push
pop
lret
aas
mov
stos
lea
or
jnp
xor
sub
stos
shrl
jg
sub
dec
xchg
or
push
sub
dec
mulb
dec
test
repnz
mov
mov
imul
lea
xor
jnp
or
dec
xor
xchg
orb
mov
xlat
lods
aaa
sub
lcall
lret
in
insl
xchg
popa
xchg
cmpsl
cmp
sbb
jns
mov
rorl
add
inc
rcrl
inc
inc
repz
inc
and
push
pop
pop
cli
pop
repnz
adc
cmp
das
push
adc
sbb
cmp
jmp
mov
xor
lock
push
test
stos
test
pop
mov
inc
sub
dec
cmp
or
xor
fsubl
mov
js
idivb
shr
cmp
inc
xchg
jne
add
outsb
push
rorl
cmp
and
dec
xchg
stos
mov
cmc
add
dec
jmp
fdivl
push
ds
call
in
push
daa
ljmp
add
aad
push
mov
fwait
icebp
push
mov
mov
shr
pop
mov
fmuls
stos
push
cli
dec
adc
mov
insl
je
sahf
lahf
cmc
pop
pop
dec
je
sbb
and
scas
inc
int3
xor
pop
enter
or
inc
loopne
and
sarl
pop
cltd
inc
imul
add
add
shr
scas
mov
and
arpl
stos
out
or
sub
outsb
or
shl
mov
sub
sub
loopne
cli
fs
push
sbb
addr16
imul
pop
imul
sbb
lock
mov
pop
or
jbe
lea
xchg
mov
dec
cmp
push
jmp
sbb
sub
in
stos
or
inc
sub
xor
mov
std
dec
and
test
jnp
and
pop
rcl
fisttpll
andb
mov
mov
add
int3
pop
adc
cmp
dec
outsl
test
add
stc
cmpb
or
jp
push
cld
xor
lods
or
divl
dec
and
hlt
mov
cmp
test
adcb
addr16
sub
pop
inc
call
push
les
and
enter
rclb
push
call
scas
sub
add
pop
clc
xchg
sub
inc
test
jp
xor
movsb
adc
sub
and
mov
test
lret
add
jecxz
nop
cld
ret
mov
insb
leave
mov
mov
jae
jp
inc
cli
imul
fsubr
xchg
stc
stos
loopne
sbb
xchg
mov
cmp
push
stos
push
inc
jl
push
in
mov
mov
inc
push
fs
adc
cmp
outsl
cmp
inc
fucomp
arpl
sbb
scas
hlt
push
stc
xor
cmp
pop
out
divl
fists
dec
inc
sbb
inc
inc
inc
pop
insb
mov
xor
icebp
dec
fwait
gs
lods
adc
xorl
lea
fisttpl
and
js
adc
jp
cmp
imul
add
pop
push
fdiv
and
push
push
and
pusha
xchg
sbb
xor
popa
xchg
sbb
sbb
test
clc
cmp
pushf
notb
aad
daa
mov
rolb
sahf
lahf
mov
push
jb
out
fdivrs
ja
or
divl
stos
mov
ss
pop
sti
retw
inc
xchg
pop
sbb
test
cmpsl
in
shlb
in
or
nop
jae
mov
lea
mov
push
mov
mov
xchg
cli
xchg
sub
in
insl
push
mov
stos
cmp
cmpsl
in
sbb
cmp
xchg
cmp
cmp
notb
add
data16
out
jge
mov
jno
scas
pop
xchg
mov
add
popl
ficomps
pop
fwait
in
inc
dec
jb
ret
dec
xor
mov
pushf
leave
lods
sahf
jns
shl
popf
outsl
adc
loopne
inc
nop
mov
xchg
and
or
add
add
jae
adc
bound
jecxz
push
add
sahf
xchg
lods
aad
stc
sbb
add
push
inc
or
jnp
mov
hlt
mov
loop
xlat
xchg
loop
js
push
mov
sub
mov
jg
or
inc
addr16
xchg
mov
mov
sbb
les
sbb
insl
xor
je
cld
push
clc
out
test
sbb
push
fnstcw
int3
daa
xchg
sbb
or
mov
stc
ret
mov
iret
int3
inc
lock
jne
xchg
or
out
ljmp
sub
outsl
nop
jg
push
dec
mov
jno
imul
rolb
jno
pop
add
fisttpll
and
sbb
ja
add
jbe
ss
and
loopne
roll
stos
and
sbb
and
mov
lcall
mov
call
mov
add
and
stc
fsqrt
mov
out
test
or
aaa
cmp
rclb
inc
leave
les
mov
xorb
jg
bound
mov
pop
clc
pop
ljmp
mov
mov
xchg
rcrl
lea
mov
iret
fidivl
sub
cmp
and
sbb
push
ljmp
push
and
mov
test
jl
nop
cmp
dec
pusha
xchg
mov
inc
aaa
mov
pop
sbb
shrl
imul
movsb
xchg
popa
mov
inc
pop
inc
scas
inc
stc
jb
mov
xchg
dec
shlb
lahf
loope
dec
cmp
loope
and
pop
jecxz
stos
gs
das
std
cli
fdivl
repz
adc
sbb
das
fisubrs
decl
fistps
negb
push
in
sbb
ss
daa
dec
sbb
into
sub
pop
iret
mov
lock
push
cwtl
sahf
mov
js
lret
mov
faddl
ret
lds
jge
jae
popf
mov
dec
outsb
mov
andl
pop
jmp
daa
cwtl
es
mov
icebp
and
add
incb
rolb
pop
aam
or
daa
fs
push
push
fmuls
es
cmp
test
in
mov
cmp
adc
mov
scas
pop
jno
cmpsl
lods
mov
in
mov
arpl
jbe
cmp
jae
jo
aaa
mov
and
push
mov
fmull
mov
push
imul
out
and
jb
insl
mov
inc
jecxz
cltd
inc
xchg
or
or
je
inc
cld
gs
or
add
mov
add
arpl
cmp
sbb
ljmp
and
inc
fidivs
test
pop
mov
cmpsl
cmp
das
dec
inc
xchg
sbb
ss
or
xchg
push
mov
xchg
sbb
pop
rcrl
fildl
fstl
in
das
lods
add
fisttpl
or
jo
sbb
pusha
popl
test
sbb
shlb
outsb
mov
adc
pusha
mov
pop
leave
je
push
mov
and
scas
insb
mov
jns
daa
rolb
add
inc
movq
sub
add
jmp
cld
push
xchg
push
movsl
dec
and
imull
in
mov
dec
xchg
dec
lods
inc
jg
cmp
adc
add
pop
addb
int
cmpsl
ja
daa
aam
mov
lds
push
pop
xchg
pop
std
insb
jmp
mov
adc
insl
push
or
dec
testl
inc
xchg
dec
xchg
jg
shl
in
jp
sub
jno
mov
push
out
int
mov
push
mov
push
mov
int3
add
loope
test
mov
gs
jno
xor
xor
jae
arpl
xor
cmp
or
push
addb
and
pushf
fstpt
mulb
mov
cwtl
sbb
jno
push
fcoms
sbb
cmp
jg
dec
mov
movsl
repnz
xor
mov
imul
scas
or
outsb
mov
mov
pop
fisubs
fisttpl
lahf
jge
mov
test
xchg
cs
popa
and
stc
stc
into
pop
mov
loope
fidivrs
push
jae
mov
mov
arpl
dec
jne
cwtl
data16
inc
inc
nop
adc
add
jg
sub
pop
cmpsl
inc
xchg
or
cmp
stos
adc
lret
jae
dec
mov
mov
fwait
arpl
imul
cltd
pop
roll
pop
mull
push
mov
js
subl
adc
aaa
cld
aaa
std
xor
mov
mov
pushf
sub
adc
inc
cli
jo
jle
inc
incb
testl
enter
ljmp
or
or
das
nop
push
test
insl
ljmp
xor
jle
insb
lods
outsb
mov
aas
fists
adc
mov
test
push
repz
and
xchg
pop
mov
xor
xchg
inc
std
sub
push
jmp
imul
xor
and
xchg
sbb
mov
out
lahf
xor
aad
int3
outsb
sbb
rcrb
addr16
iret
xchg
jne
push
lods
cmp
outsl
mov
cmp
dec
cmpb
dec
lcall
lods
cmp
add
pop
xchg
mov
imul
xchg
outsl
mov
jle
pop
je
mov
mov
cmpsl
xchg
dec
mov
sbb
aas
decb
loopne
cmpsl
sub
xor
or
idivb
push
or
pop
xchg
cmp
pushl
fstpt
and
sbb
outsl
cmp
mov
repz
jne
add
outsb
jmp
jne
push
repz
xchg
sub
push
and
arpl
imul
cmc
fmulp
dec
xchg
pusha
shrl
inc
xchg
dec
jp
inc
xor
orl
jg
in
pop
cmpsl
cmp
jno
or
adc
xchg
jno
pushf
into
sub
adc
add
add
into
dec
cwtl
jne
jo
imul
sarb
pop
loop
hlt
sbb
sti
jne
movsl
xchg
mov
imul
or
push
leave
pop
clc
into
stc
sbb
movsl
pop
out
lods
xor
aad
lds
add
xor
jnp
int
pop
std
cli
xor
addr16
pop
fbstp
movsl
leave
xchg
xor
mov
push
xorb
sti
jge
adc
xchg
lret
daa
mov
xchg
mov
aaa
jecxz
fistpl
ret
movsb
mov
imull
ficoms
lret
movsl
mov
inc
imul
mov
adc
fwait
std
inc
mov
push
mov
popw
into
jae
inc
test
jnp
inc
aad
std
bound
dec
test
pop
xchg
movaps
xor
sub
icebp
and
push
repz
and
adc
add
dec
inc
mov
inc
lahf
push
andl
stos
mov
push
mov
jno
dec
mov
nop
inc
mov
movsb
pop
mov
in
or
and
psllq
adc
and
sbb
and
aaa
testl
incb
out
add
mov
dec
mov
mov
and
dec
mov
jne
pop
loopne
mov
add
ljmp
aas
ret
cmp
xor
out
pop
fidivs
call
out
sub
pop
mov
jge
jno
dec
push
pop
mov
push
sti
and
stc
lret
adc
mov
lods
fisttps
jmp
test
sti
std
into
xor
add
filds
int
pushf
push
outsl
dec
repz
add
into
cmp
and
aas
lock
mov
femms
or
cmp
dec
scas
dec
xchg
inc
mov
pop
xchg
jo
inc
mov
test
arpl
dec
mov
push
mov
inc
loopne
xchg
xchg
dec
and
jp
inc
imul
add
ficomps
xchg
jge
push
xchg
jae
jnp
fldenv
fs
fs
stc
cmpsl
xor
push
pop
dec
mov
movsl
pop
popf
jg
jecxz
je
dec
stos
inc
mov
xor
hlt
cmp
sbb
adc
xchg
shlb
out
adc
and
sbbb
mov
mov
inc
stos
pop
mov
push
lods
mov
mov
xchg
push
dec
push
test
mov
pop
mov
cmp
or
iret
sub
xor
testl
mov
pop
into
data16
jne
je
arpl
add
aas
or
add
adc
das
cmp
repnz
rcl
xchg
xchg
xchg
lods
fwait
mov
cmpsl
dec
push
insb
js
add
inc
dec
inc
jne
int3
xchg
mov
lods
stos
movsb
xchg
and
xor
imul
jg
arpl
imul
lret
bound
add
add
dec
fldcw
les
stos
pop
lcall
jbe
and
out
scas
ja
outsl
xlat
popa
mov
jle
pop
out
and
mov
sbb
sbb
in
xchg
push
xor
adc
adc
sbb
ljmp
jmp
dec
jl
jb
dec
xor
addr16
nop
adc
jo
jb
and
and
daa
push
pop
scas
dec
xchg
test
mov
out
cmp
xchg
inc
xor
in
xchg
inc
mov
add
dec
mov
outsl
inc
add
pop
in
adc
add
jns
pop
xchg
iret
lods
jo
scas
adc
push
jae
pop
shll
dec
cs
mov
repnz
mov
pusha
mov
jge
pop
pop
fs
inc
test
orl
negl
dec
sbb
scas
xchg
push
out
inc
inc
jge
in
add
and
mov
push
and
sbb
stos
pop
mov
ss
les
add
bound
test
mov
push
and
outsb
sub
adc
std
scas
mov
mov
mov
adc
in
jne
lods
mov
mov
push
js
call
xchg
icebp
test
xor
shrl
xchg
mov
add
imul
ljmp
in
xor
orl
std
mov
or
fld
iret
and
out
cmp
fidivl
adcb
add
xor
pusha
and
jp
push
roll
gs
jecxz
jnp
aaa
pop
jo
cmp
fidivl
or
movsl
outsb
adc
notb
ret
cld
int
bound
inc
adc
lcall
insl
jae
xchg
test
cli
loop
cmp
mov
rcll
out
ficomps
xorl
xchg
jno
jle
out
add
sub
pop
sbb
mov
loopne
std
pop
lock
cld
and
or
jp
imulb
imulb
xlat
jae
sbb
outsl
push
imul
jp
outsl
std
cltd
subb
xchg
mov
push
fs
adc
mov
xchg
xchg
shrl
sbb
shll
inc
or
add
adc
rclb
scas
jmp
mov
or
or
icebp
or
push
popl
jo
inc
mov
mov
dec
popf
dec
cmpsb
pop
cmpsb
fs
insb
std
pop
out
ljmp
inc
imulb
mov
movsb
or
jno
xor
and
cmp
aam
stc
cs
or
adc
and
mov
loop
fbstp
loope
in
jae
outsb
out
adc
cmp
addr16
or
movsb
sbb
inc
xorl
loope
mov
cwtl
in
mov
pop
lods
pop
test
arpl
dec
aam
and
xor
cmp
sub
mov
stos
movsb
sbb
xchg
push
decb
shll
pminub
aam
xor
and
mov
pop
cmpsl
push
rorl
cmc
dec
loop
rolb
xlat
dec
fadds
aam
in
arpl
push
test
ror
or
jne
in
mov
out
push
daa
loopne
pop
test
sub
dec
sub
dec
repnz
xor
cli
push
in
lret
dec
mov
mov
inc
xchg
sub
frstor
sarb
mov
mov
arpl
rolb
fdivrs
lea
pop
ret
sbb
fwait
iret
cmp
xchg
int
bound
movsl
dec
push
jg
sbb
jle
push
xchg
fs
mov
or
xor
dec
iret
push
push
movsl
loop
xchg
sbb
fildll
imul
jnp
in
test
repz
gs
jae
jl
cli
sar
sti
pop
addb
sbb
cmc
sarl
mov
pop
rclb
pushl
jmp
in
adc
xor
pop
aam
fidivl
add
pop
rcrb
dec
sub
nop
add
xor
adc
jo
fwait
repz
leave
xor
es
out
pop
sarb
inc
aad
ljmp
inc
and
pop
cmpsb
outsb
movsl
ja
jno
or
cwtl
sbb
aas
push
in
shrb
fwait
sub
adc
das
cmp
je
jg
adc
lret
push
xchg
loope
mov
adc
std
out
xor
and
push
mov
cmp
cld
push
sbb
cmpsl
sub
loopne
push
mov
pop
jmp
lea
arpl
sub
sbb
addl
dec
xchg
pop
cmpsb
cmpsl
xchg
dec
lcall
mul
scas
pop
cmc
cmp
jmp
mov
sbbb
sbb
ret
mov
repz
repz
jno
or
pop
xchg
inc
in
mov
repnz
test
sahf
and
add
push
shll
pop
jmp
in
fstpl
ret
sub
sbb
mov
roll
mov
push
addr16
push
cli
xor
lds
jecxz
fiaddl
adc
pop
repnz
hlt
inc
mov
or
push
out
cmp
adc
cwtl
jg
xor
ss
pop
es
outsb
movsb
aas
scas
dec
cmc
pusha
pop
jae
pop
push
inc
fidivrl
jg
push
popf
ret
mov
pop
mov
pop
popa
and
sub
insb
rcrl
push
xchg
add
jg
pop
incb
push
mov
jecxz
test
test
gs
push
lods
push
dec
iret
sub
push
aaa
pop
adc
jnp
push
pushf
subl
rep
std
fs
js
data16
loope
mov
jae
push
scas
dec
mov
adc
inc
mov
xchg
mov
or
mov
cmc
sbb
repz
mov
and
movsl
sub
cmp
xor
leave
or
stos
inc
call
pop
call
push
sbb
adc
and
adc
imul
cmpsl
cmp
push
or
popa
loopne
std
data16
dec
inc
out
cwtl
sub
add
stos
dec
xchg
movb
mov
push
cmpsb
call
mov
push
dec
into
mov
cmpsl
push
mov
push
cmp
scas
cs
fcompl
xlat
jg
xchg
cmp
push
out
iret
add
rcl
fisubl
cs
pmuludq
xchg
js
sti
xchg
pop
ret
jbe
inc
xchg
xchg
fs
mov
cld
push
repz
jo
add
and
sub
adc
cmp
ds
adc
or
push
lret
adc
pop
fmuls
push
mov
jo
push
test
xchg
dec
mov
mov
andl
scas
push
xchg
sbb
adc
iret
dec
loopne
lret
or
or
aaa
idivb
int3
in
ficompl
fldcw
shll
aad
push
xor
push
push
dec
mov
jl
outsl
scas
jbe
andb
sbb
or
push
cmp
test
xchg
test
jg
jbe
dec
lods
repz
stos
adc
mov
xor
pop
out
fistpl
xor
add
std
nop
inc
icebp
fs
pop
in
insl
imul
and
lds
rcrl
fs
inc
or
push
add
adc
jecxz
mov
out
adc
mov
jg
and
jle
outsl
mov
icebp
lahf
push
rcrb
mov
dec
cmpsl
push
fwait
xchg
test
loope
jns
lret
add
push
jp
add
push
mov
mov
repz
loop
push
lods
cld
pop
adc
and
leave
mov
js
pushf
out
inc
adc
push
mov
cmp
xchg
mov
out
ret
xor
arpl
stos
loopne
sbb
mov
das
push
jo
pop
mov
xchg
xchg
xchg
out
mov
jle
mov
jmp
dec
cmp
xchg
ret
jns
xor
mov
fwait
mov
in
popa
imul
inc
ljmp
adc
gs
aas
push
jl
or
push
lahf
out
cwtl
xchg
lock
add
shlb
sbb
xor
or
sbb
mov
fsubrl
xchg
mov
pop
mov
or
in
mov
dec
insl
push
dec
stos
dec
or
std
lret
xchg
movsb
mov
mov
shll
pushf
daa
add
test
cmp
in
aaa
test
lahf
mov
pop
add
fdivr
xchg
adc
pop
jbe
int
sbb
call
outsb
xor
add
mov
push
mov
jb
cmp
gs
pushf
sbbb
mov
nop
pop
out
pop
fnsave
xchg
mov
fldenv
mov
shlb
loop
inc
mov
shlb
dec
jmp
sub
stos
loopne
jecxz
cld
sub
insl
dec
adc
pop
mov
aam
pop
xchg
push
fnstcw
cmp
outsl
nop
in
sbbb
mov
push
mov
dec
test
movb
out
pminsw
and
int
out
or
pop
test
xchg
push
sahf
insl
test
xchg
add
sbb
cmc
or
cmp
adc
and
mov
in
mov
mov
dec
movsb
das
dec
xchg
outsl
mov
cmp
add
adc
cmp
or
hlt
cmp
adc
outsl
std
sbb
adc
daa
in
add
sub
pop
mov
jmp
loope
loopne
rorl
in
sbb
out
stc
cmp
sub
fbstp
cmp
xor
sub
fisubrs
and
hlt
push
shlb
or
dec
aam
out
add
adc
loope
cli
pop
cli
and
pop
repz
sarb
mov
fisubrs
stos
push
testl
mov
mov
mov
mov
dec
rclb
fistps
in
out
adc
cmpl
adc
or
sub
cmp
mov
subb
jno
es
insb
mov
mov
jae
jb
subl
xchg
mov
popf
jnp
jge
mov
mov
mov
xchg
pop
lahf
jl
sbb
bswap
and
jmp
or
sbb
add
sbb
stc
or
jmp
cli
adc
or
daa
les
jecxz
std
cmp
add
pop
aad
leave
or
or
les
cmp
sub
in
push
lcall
add
and
xor
psubusb
in
shrl
jmp
out
sti
adc
sub
push
hlt
cmp
dec
popf
testl
sub
fdivr
js
push
jmp
ret
arpl
fsub
scas
lcall
loope
mov
push
cmp
pop
and
mov
or
dec
shl
xchg
xor
ja
sub
outsb
nop
pop
imul
jmp
sahf
inc
cwtl
inc
lods
pop
movsb
test
mov
push
pushf
inc
jno
scas
jae
dec
test
test
push
mov
pop
lods
ja
dec
lcall
leave
adc
or
mulb
iret
cmp
enter
rcll
cmpsb
cmp
adc
sbb
and
cmp
add
xchg
shlb
cmp
dec
aas
lock
add
sbb
pop
test
pop
int
stc
jl
adc
loope
xchg
leave
popa
repnz
sbb
and
add
sub
popf
or
or
and
jae
adc
or
das
cld
cmp
or
ficomps
roll
xlat
adc
lods
cmpsb
ja
add
dec
test
sahf
push
ficoml
pop
nop
dec
xchg
mov
mov
mov
jno
mov
mov
mov
mov
ret
incb
sub
addr16
jno
mov
jge
mov
jg
jne
outsb
xchg
inc
lea
pusha
adc
dec
and
addr16
bound
inc
mov
scas
or
add
testl
xlat
roll
sub
adc
push
xchg
sbb
sahf
nop
inc
mov
mov
fistpl
mov
int3
aaa
daa
push
mov
nop
lret
sub
cwtl
enter
lret
and
and
xchg
cmc
stos
fnstenv
test
imul
pop
xor
jb
ficompl
mov
jg
cmc
mov
aas
pop
or
add
es
inc
mov
cltd
bound
push
or
jg
inc
jnp
xchg
mov
repnz
int
fistps
shr
inc
fsubr
cmc
mov
xor
jl
cmp
shl
sub
xchg
cmp
mov
mov
inc
stos
stos
test
push
pop
dec
lea
push
scas
jo
mov
push
mov
dec
jl
inc
add
push
xchg
jns
pop
xchg
adc
push
cltd
xchg
mov
or
or
xor
add
push
das
cmc
xor
repnz
adc
insb
aad
sub
adc
add
outsl
into
push
xlat
add
push
daa
rclb
mov
xchg
dec
into
jnp
push
cmp
or
ds
arpl
cmp
ja
sbb
out
sbb
or
jne
or
fmuls
aaa
inc
xor
mov
cld
xor
std
push
aaa
in
sbb
mov
or
jp
inc
stos
dec
add
jg
je
notb
jl
inc
icebp
loope
jo
js
jno
pop
mov
xchg
jne
jb
repz
sub
fldenv
jno
add
test
cmpsb
mov
inc
mov
pop
push
push
adc
mov
xor
jge
leave
test
sbb
lock
jo
bound
outsl
pushf
ljmp
andb
orl
mov
mov
mov
loope
popa
cmp
jae
or
xchg
loop
mov
mov
push
sbb
lea
xchg
jmp
nop
hlt
mov
pop
xor
shl
flds
push
sub
shlb
jmp
int3
inc
aam
filds
aaa
cmpsb
lock
fistps
inc
daa
in
sbb
inc
and
xchg
mov
and
cmp
nop
jae
cs
adc
sbb
dec
cltd
cmp
sub
repz
call
sbb
shrb
iret
cmp
sbb
mov
call
sbb
adc
out
cmp
sarl
mov
lds
test
xchg
scas
push
dec
nop
pop
icebp
mov
cmc
pop
xchg
je
inc
mov
pop
xchg
dec
lcall
insl
test
sarb
aam
frstor
cmp
sub
inc
mov
js
push
ret
inc
lcall
inc
mov
pop
mov
mov
inc
xchg
orb
aad
push
or
lods
arpl
or
fdivs
sub
cmpsl
lds
lds
xchg
mov
fstl
fsubs
add
in
lcall
push
lock
pop
fcompl
std
xor
sub
js
jo
cmp
cli
cmp
sar
add
or
or
or
in
ret
repnz
into
and
adc
mov
int3
pop
fistl
add
or
adc
cmp
dec
nop
arpl
jns
add
sahf
mov
ret
insb
xchg
sub
adc
jle
adc
add
jne
add
das
lcall
sbb
insb
mov
push
pushl
orl
pop
xchg
test
add
mov
fs
cwtl
dec
cmp
jno
inc
in
push
push
xchg
outsb
mov
adc
jge
pusha
pop
popa
mov
mov
jne
jbe
stc
loop
jecxz
enter
out
xor
or
xchg
sub
aad
adc
or
mov
stos
mov
das
jmp
inc
sub
or
js
sub
loopne
aas
add
sbb
pop
scas
and
out
cmpsl
push
pop
sti
cs
adc
dec
les
std
popf
push
push
in
cmp
push
xlat
fimull
iret
pop
repz
and
sub
movsl
rorl
jecxz
adc
rorl
loopne
jmp
inc
mov
lods
xchg
pop
mov
xchg
fs
mov
push
mov
xchg
dec
popf
jno
arpl
and
or
jo
dec
xchg
jle
jge
outsb
xchg
sbb
aaa
xchg
insl
mov
js
imul
push
lahf
cmp
mov
pop
fwait
shr
pusha
scas
mov
push
cmpsl
xor
push
push
jl
push
mov
jns
or
fdivs
fwait
and
and
in
pinsrw
and
testb
xor
fcmovb
jb
cmc
pop
mov
sbb
or
mull
jl
cmc
add
mov
scas
cmp
adc
sub
and
mov
push
and
pop
sbb
mov
sbb
jb
and
pop
jns
int
cmp
ror
sar
cld
pop
shrl
fcompl
adc
ds
call
and
out
push
add
fsubs
dec
xchg
js
sub
pop
xchg
dec
mov
fwait
insl
xchg
push
mov
outsl
push
fstps
cmp
in
cli
push
sub
mov
fiaddl
pop
fs
mov
out
arpl
aam
adc
xchg
dec
movsl
inc
cwtl
inc
jmp
lods
jno
adc
cltd
xchg
pusha
mov
mov
xchg
jb
jp
test
ret
pop
mov
xchg
xor
mov
xlat
mov
in
ret
pop
bound
out
push
roll
scas
aaa
repz
enter
rcll
fists
aad
repnz
inc
les
icebp
push
or
xlat
and
repnz
or
int3
repz
add
fsubl
add
out
xor
shl
imul
std
cmp
iret
cmp
adc
cli
pop
subb
mov
mov
or
bnd
pusha
stos
imul
xchg
pop
repz
dec
lcall
cmp
jp
pop
fwait
add
and
or
xor
xor
imul
push
sub
mov
aad
xchg
data16
xchg
mov
inc
popf
push
pop
lcall
aaa
mov
scas
subb
aaa
jne
arpl
add
or
xor
sahf
enter
add
inc
int
loope
cli
push
out
lcall
mov
dec
sub
add
sub
sub
mov
lret
cmp
sbb
int3
and
das
sbb
add
outsb
or
sbb
imul
jle
ljmp
push
rcll
fsubrl
aad
das
add
add
sub
mov
push
popf
mov
mov
mov
jp
dec
sahf
dec
mov
sub
jle
xchg
lcall
clc
xchg
je
fadds
jns
dec
nop
pop
addl
lahf
and
pop
fsubs
lret
pop
scas
mov
cmp
dec
daa
adc
adc
pop
mov
outsb
loope
nop
dec
loope
jecxz
mov
push
adc
ds
or
test
lock
out
stc
push
sbb
ret
andb
ljmp
push
inc
or
xor
or
jmp
in
enter
push
sub
mov
push
loop
xchg
je
bound
cltd
jle
scas
outsb
lret
dec
pop
pusha
lret
dec
xor
inc
sti
cmp
clc
xlat
daa
lret
or
push
test
dec
rep
or
mov
arpl
mov
dec
jecxz
mov
movsb
jno
jge
adc
xchg
rcll
jo
jnp
jp
je
mov
js
dec
adc
stos
pop
stos
pop
mov
or
adc
xor
or
add
es
loop
ret
aaa
cld
das
jmp
pop
icebp
ret
flds
rcrl
adc
or
push
adc
xchg
push
mov
btr
lret
push
fidivl
mov
pop
fstl
in
dec
enter
inc
pop
sbb
sub
cmp
and
and
dec
in
out
cmp
movsb
sbb
sub
bnd
pop
add
cmp
push
pusha
data16
mov
lret
movsb
mov
mov
inc
xchg
jp
push
xchg
inc
gs
js
nop
int
push
sahf
pop
mov
mov
dec
mov
in
mov
mov
inc
aas
gs
cmpl
adc
mov
mov
pop
mov
mov
mov
outsl
popf
jg
out
jg
jl
inc
fisubs
xchg
mov
inc
loop
push
inc
mov
test
inc
test
or
out
cmp
xor
into
jmp
mov
adc
fsubs
out
shll
add
xadd
cmp
add
cmp
pop
shr
cmp
cmp
push
scas
cmp
xor
pslld
dec
lahf
scas
scas
push
movsb
pop
mov
test
scas
imul
pushf
and
or
aam
subb
sbb
xor
xchg
mov
in
inc
loopne
lret
cmp
das
enter
mov
dec
mov
pop
lcall
push
stos
dec
test
insl
test
test
pop
aam
dec
inc
imul
dec
aaa
jbe
mov
push
jmp
inc
push
cwtl
je
jl
imul
clc
adc
divb
push
push
rcll
out
adc
cmp
or
dec
int3
or
or
and
mov
mov
sbb
sbbl
movsb
inc
mov
sahf
in
inc
mov
call
adc
adc
cmp
rclb
and
fcomps
clc
insl
shlb
sti
mul
sub
adc
loopne
es
jecxz
pop
int3
sar
out
add
lret
sub
sub
or
je
inc
mov
mov
jno
pusha
insb
jle
pop
xchg
nop
cmpsb
pusha
xchg
dec
lea
jge
jg
imul
int
jnp
jo
push
lock
and
jl
or
sbb
out
push
shll
pop
xchg
push
mov
aad
pushf
pop
ffreep
fnstsw
pop
pushf
push
push
sub
test
pop
cwtl
xchg
test
xchg
xchg
add
jb,pt
aam
pop
je
push
sub
pop
cli
sub
lds
out
leave
sub
mov
add
out
fstpl
in
and
mov
sbb
lret
cmp
leave
sub
add
jmp
call
sub
shll
sti
xchg
in
movsl
icebp
cmp
adc
mov
sbb
add
repnz
rolb
bound
cmp
fistps
ret
and
stos
cli
or
push
fiaddl
repnz
sub
jmp
mov
lea
cmp
pop
imul
push
popf
lret
mov
fs
inc
cmpsl
push
cmpb
imul
dec
arpl
dec
mov
sbb
loope
ret
cs
push
pop
sbb
add
add
or
inc
mov
js
inc
scas
notl
adc
sbb
mov
push
xchg
jne
gs
pusha
xor
xor
adc
or
ja
sti
adc
ss
icebp
mov
cmp
ljmp
into
add
sub
lock
aad
dec
adc
ds
sbb
stos
lock
aas
sahf
jp
jl
ja
js
jne
insb
mov
addl
mov
dec
mov
mov
js
ds
aaa
mov
xlat
aam
cmp
mov
and
cli
sub
adc
insb
mov
mov
jecxz
jae
scas
insb
mov
mov
cwtl
mov
xchg
pop
dec
pop
mov
dec
lods
mov
insl
jae
lcall
test
scas
in
cmpb
dec
inc
adcl
clc
or
cmp
sbb
sbb
sbb
fildl
shll
adc
adc
xor
or
mov
fimull
lret
adc
xlat
data16
stos
das
mull
lcall
test
loop
stc
or
aaa
pop
pop
mov
ds
int3
inc
fstpl
sbb
je
sub
or
or
outsb
fiadds
and
cmc
sub
leave
xchg
push
adc
clc
pop
pop
sbb
gs
dec
lea
movsb
push
movsb
scas
lea
stos
inc
mov
sbb
mov
dec
adc
imul
jns
addl
mov
and
lea
lock
push
ficoml
pushf
and
inc
mov
inc
mov
or
imul
in
push
mov
out
xchg
push
mov
dec
jg
or
xchg
pop
movsb
and
or
cmp
fucom
adc
and
clc
aam
lret
sub
shr
ljmp
sub
sbb
xlat
xor
sub
out
es
pop
jecxz
and
sub
faddl
mov
outsl
mov
outsb
mov
pop
gs
xchg
push
mov
popa
mov
jno
daa
in
aaa
sbb
in
idivb
faddl
stos
cmp
xor
sub
or
loopne
mov
xchg
dec
leave
or
shll
cmp
imul
mov
test
jne
out
cmpsl
mov
xchg
sub
fs
jo
and
sbb
clc
fnstenv
cmp
sarb
cs
dec
dec
movsb
jg
cs
pop
sbb
lea
add
sbb
sarl
xchg
add
ja
jns
dec
lods
push
divl
lods
daa
orb
or
cs
pop
mov
outsl
enter
cmp
add
out
pop
lret
inc
test
and
jmp
add
mov
sbb
mov
insl
pop
cmpsl
jbe
jle
jg
stos
xchg
ja
dec
mov
imul
mov
xor
mov
dec
lods
inc
adcb
mov
push
mov
ja
jbe
xor
cmp
scas
pop
cwtl
and
dec
mov
sbb
push
lods
push
mov
xor
pop
lods
outsl
lret
inc
sbbl
cmp
mov
nop
mov
pop
jne
sbb
shrb
push
in
test
movb
loope
js
push
push
rclb
sbb
lock
mov
add
pop
in
movb
mov
sbb
sarb
sbb
test
movsl
jae
mov
in
sbb
or
cmp
jnp
loop
faddl
rolb
daa
push
jo
mov
test
faddl
xor
in
in
and
jmp
pop
rorl
das
mov
and
mov
pusha
mov
pop
pop
mov
push
xlat
je
insb
test
jae
or
test
mov
jnp
push
mov
gs
mov
inc
mov
subb
fistl
adc
jb
sbb
dec
shr
pop
mov
cmp
mov
nop
jbe
jbe
pop
mov
dec
cwtl
sti
xchg
dec
fmuls
mov
push
in
ja
and
popa
mov
and
and
jo
sbb
or
xor
in
sbb
mov
or
icebp
repnz
fstps
adc
push
or
add
and
xchg
xchg
jbe
dec
jae
cmp
stos
mov
fdivl
cmp
xor
outsl
addb
jne
out
scas
adc
aas
mov
push
and
or
and
aaa
leave
cmp
add
jle
mov
xchg
lea
inc
mov
xor
mov
mov
push
movsl
outsb
inc
mov
mov
xchg
arpl
fistl
nop
mov
lret
out
push
lock
lds
aam
dec
push
in
cmp
jnp
daa
loope
xlat
adc
adc
frstor
adc
xchg
sbb
sbb
pusha
cmpsb
pop
repnz
mov
mov
movsl
icebp
mov
push
leave
pop
mov
lret
add
push
lret
or
xchg
cld
adc
dec
lock
adc
mov
fstpt
shll
int3
jne
je
loop
les
lahf
in
enter
fsub
imul
cmp
movsl
jmp
cmpsl
mov
sub
cmpsb
jno
push
inc
jge
fimuls
pop
mov
and
jne
push
mov
mov
test
inc
xchg
cmp
movsl
mov
sti
mov
iret
arpl
adc
adc
mov
cmpsb
inc
shlb
bound
dec
xchg
fwait
addl
xchg
inc
lahf
push
push
push
inc
mov
pop
cltd
xchg
cmpsb
pop
orl
xchg
imul
scas
pop
arpl
jne
jp
sub
iret
sub
fidivrl
sub
sti
push
ret
xlat
jbe
das
sbb
fbld
icebp
dec
aam
and
flds
out
sti
adc
decl
and
loopne
test
jmp
daa
inc
jge
jns
jge
pop
mov
jae
push
fwait
das
xchg
push
fldenv
aam
out
icebp
inc
rcll
lods
xor
and
es
mov
add
add
or
and
sub
inc
divl
xchg
pop
mov
sahf
xchg
pusha
push
test
inc
pop
lcall
mov
jp
jge
mov
lea
outsb
cmpsl
rcrb
or
mov
test
add
sbb
xor
adc
sarl
frstor
xor
in
jl
push
cltd
xor
in
mov
xorl
js
dec
filds
mov
push
lods
je
sbb
das
xlat
xor
add
lock
dec
loop
lret
or
std
adc
add
std
out
fidivl
cmp
hlt
mov
and
ss
and
stos
xor
mull
repnz
or
rorb
jns
mov
nop
xchg
mov
pop
fisttpll
inc
push
add
inc
xchg
jecxz
mov
or
dec
xchg
add
pusha
je
xor
push
or
and
and
push
repz
ljmp
pop
fadds
inc
mov
xchg
or
gs
jae
jg
bound
xor
outsl
mov
dec
pop
lods
dec
pop
jae
cmp
mov
xlat
bound
int3
sub
repz
aam
add
mov
pop
shlb
lock
lock
out
or
loop
loop
in
ret
push
fistpll
repnz
or
sbb
add
pop
test
sub
adc
aad
xor
add
daa
sbb
leave
sub
outsl
jecxz
les
fldt
fnstsw
fnstsw
xlat
add
shrl
loopne
leave
sbb
cmp
add
rol
or
add
pop
xor
dec
scas
jo
push
stos
mov
ret
jp
popf
stos
sbb
addl
fwait
mov
pop
mov
pop
shrl
mov
xchg
mov
mov
jge
adc
ds
fs
inc
fmuls
push
nop
jno
sub
out
cld
lods
add
es
js
movsb
jne
sbb
jl
jbe
inc
pushf
adc
dec
fbstp
mov
add
imul
xor
adc
out
in
ds
pop
fucomi
fsts
out
daa
sbb
pop
cltd
sbb
push
mov
adc
cmp
adc
or
xchg
or
adc
ficompl
mov
sbb
push
cltd
jg
aam
mov
jns
push
outsl
xor
pushf
sbb
push
mov
adc
push
add
add
fldcw
push
popa
in
mov
add
cmpsl
ljmp
cmc
cmp
test
mov
subb
subb
inc
mov
pop
lds
scas
and
mov
test
pushf
xchg
pusha
and
imul
cmpl
and
pop
fildl
add
add
push
dec
imul
push
das
jne
jb
cmp
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
inc
inc
inc
inc
inc
inc
inc
add
add
addb
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addb
ja
ja
ja
ja
ja
mov
mov
mov
add
incl
add
add
ljmp
add
add
add
add
add
add
add
add
add
rolb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
incl
incl
incl
incl
incl
incl
incl
mov
inc
inc
lock
inc
addb
ja
mov
mov
add
add
incl
add
incl
add
cmp
aaa
mov
pop
fwait
cmp
add
add
or
add
add
outsw
jae
insl
gs
imul
popa
push
imul
add
insb
xor
adc
dec
ja
push
imul
push
jns
dec
outsb
imul
je
insl
add
push
imul
adc
jns
gs
add
insb
xor
add
dec
outsl
fs
outsl
fs
add
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
xor
