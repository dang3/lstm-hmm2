push
call
ret
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
push
sbb
in
addl
push
push
push
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
mov
add
inc
add
add
add
mov
add
or
add
push
movsl
add
push
mov
add
add
add
add
adc
add
add
add
movsl
mov
sarl
jns
jae
outsl
outsl
outsl
outsl
inc
outsl
insl
add
add
or
add
and
add
lods
add
addb
add
add
add
add
add
add
add
inc
add
addb
insb
add
addb
add
add
add
add
add
add
pop
add
add
xor
add
add
in
add
add
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
pushf
add
add
xor
add
add
in
add
test
xor
outsl
insl
add
add
add
add
les
add
test
xor
outsl
insl
add
add
add
add
faddl
add
in
inc
add
test
add
test
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
and
add
add
and
pop
add
add
add
add
add
add
add
loop
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
add
add
xor
xor
bound
xor
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
add
je
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
xor
xor
xor
cmp
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
xor
sub
and
xor
xor
add
add
and
xor
add
add
mov
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
arpl
add
je
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
xor
xor
xor
cmp
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
xor
sub
and
xor
xor
add
add
and
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
cwtl
inc
add
loopne
add
imul
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
add
ret
add
inc
add
add
add
popa
mov
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
cmc
xchg
inc
sar
inc
add
sahf
xor
imul
neg
test
push
jns
dec
push
mov
repnz
call
pop
fdivrs
js
sahf
lcall
and
nop
repz
fwait
jmp
sbb
js
repz
add
mov
adc
cmc
ljmp
sbb
int
dec
xor
inc
cmpsl
dec
jl
and
pop
js
push
cmp
or
jo
xor
push
push
lret
fistl
pop
or
or
es
xchg
xor
mov
and
mov
pop
xchg
xor
dec
cmp
jno
in
imul
les
push
or
inc
and
jns
push
mov
ret
imulb
out
daa
int3
adc
cwtl
rol
es
in
sub
fwait
dec
pop
or
pop
sbb
cmpsb
fldl
mov
aas
push
fmuls
fdivrl
xor
mov
adc
adc
cmpsl
pushf
sub
sub
mov
mov
in
outsl
repz
ljmp
fdivs
xchg
xor
mov
divl
mov
jge
push
mov
pop
enter
or
push
mov
adc
cmc
xchg
aas
sbb
jecxz
xchg
xchg
sub
icebp
sbb
aaa
cmc
jns
ret
xor
and
add
mov
jno
sbbl
push
lods
pop
jb,pt
orl
dec
loop
mov
btcl
stos
call
mov
xchg
jge
adc
mov
repnz
cltd
std
xor
call
data16
lret
loopne
add
or
mov
dec
push
xlat
jle
sahf
cld
out
jmp
inc
ficoms
fdivs
andb
cli
lods
pusha
xor
in
adcb
xlat
loope
mov
addr16
fs
hlt
cld
sbb
inc
add
jno
sbbb
sub
inc
insb
xchg
xchg
add
rclb
mov
jmp
mov
xor
popa
int3
adc
sarb
scas
hlt
push
mov
arpl
pop
push
ret
scas
dec
sbb
sub
cmp
cmp
loop
sar
sahf
addr16
loop
add
mov
mov
outsl
dec
and
dec
cmp
add
cld
pop
stos
scas
popf
iret
cmp
cmova
enter
test
and
add
mov
inc
dec
pop
arpl
xchg
aas
sbb
divl
enter
ret
and
sbbb
rcrl
mov
pop
lea
dec
cmp
mov
pusha
lret
or
jbe
icebp
push
sub
sub
in
mull
jnp
bts
ss
rolb
popf
dec
pop
ds
sbb
jecxz
int
cmpl
and
aaa
jae
out
cmp
ret
fdivl
mov
xchg
das
sbb
out
jmp
jo
stos
mov
outsl
sub
fs
cltd
mov
idiv
or
mov
jmp
jo
repz
or
xor
mov
adc
std
push
int3
inc
xor
push
push
int
or
rcll
xchg
dec
das
mov
cli
test
and
dec
pusha
mov
popf
mov
cmp
mov
shl
push
cmp
jo
icebp
inc
data16
sbb
in
data16
mov
or
add
and
shll
pop
xchg
bound
and
ljmp
cmp
movsb
movq
lret
sub
xchg
xchg
xchg
adc
rcll
jecxz
daa
sarb
adc
sub
push
cmp
jl
adc
cld
inc
add
in
and
ja
sub
push
shr
daa
aam
xor
cmpsb
not
roll
adc
ficoml
xor
pop
xchg
aas
jmp
nop
xor
mov
sbb
xor
push
mov
lock
mov
loopne
jae
hlt
nop
inc
xor
test
loop
subl
pop
xchg
popf
cmp
mov
arpl
lcall
movsb
push
jbe
jge
pop
mov
and
mov
dec
jbe
fs
or
sahf
sbb
mov
negb
rorb
sub
sbb
mov
cmp
fs
pop
jle
aaa
and
push
ficompl
sub
adc
xchg
mov
xchg
push
fidivs
xchg
fsubrl
outsb
scas
stos
insb
pushf
mov
push
xchg
sbb
ss
push
add
insb
mov
push
rcrb
lahf
or
rcll
iret
jecxz
sbb
out
insb
lcall
sub
push
es
std
inc
rcrl
sbb
das
ret
jge
rol
push
out
pop
shll
out
cmpsl
popa
mov
dec
cmc
leave
arpl
xchg
dec
push
adc
ljmp
movsb
repnz
sbb
lock
mov
dec
inc
xor
lcall
fnsave
pop
daa
push
mov
loopne
jmp
lcall
pop
push
push
add
push
dec
mov
cmpsl
bound
aad
lahf
sbb
cmp
das
mov
cmp
je
xchg
fldenv
sub
out
jns
int3
or
sub
stos
orb
cld
inc
inc
jecxz
adc
scas
jecxz
in
rorl
shrl
out
call
aaa
ss
insb
jg
or
sub
xchg
icebp
sbb
mov
popa
hlt
int
mov
scas
int
pushw
sub
shrl
aam
mov
xchg
adc
pop
loopne
aad
mov
imul
das
pushf
cmp
das
sbb
loop
xchg
dec
xchg
and
mulb
cmp
jmp
sarl
jecxz
or
jne
adc
int3
lods
pushf
sbb
mov
xlat
lock
dec
push
xchg
call
popf
stos
add
cmp
inc
xchg
rol
xor
push
rcrb
mov
sub
and
das
sbb
aaa
push
xor
or
popa
inc
or
mov
je
cmp
pop
xchg
and
xchg
xlat
mov
ret
and
dec
int
test
cmp
pop
icebp
stos
cmpb
and
lea
push
or
and
and
cmc
pop
ds
jne
imul
out
sti
test
mov
out
iret
pop
jo
cs
push
push
inc
jnp
aam
ljmp
lods
push
das
imul
mov
xchg
lock
fwait
daa
sti
jp
xchg
test
cmpsb
aas
cmc
xchg
sub
inc
fadd
jns
and
dec
fisubs
push
sbb
aas
inc
scas
sub
movl
mov
mov
lret
loop
adc
movsl
ljmp
mov
adc
cltd
je
jne
jg
stc
fs
test
insl
dec
lret
pop
pop
std
inc
mov
sbb
shl
int3
into
aad
jbe
pop
sub
sbb
popa
daa
fnstenv
in
lret
aad
out
jecxz
cmp
cmc
mov
pop
test
and
jle
lds
pop
pop
push
fisubrl
or
xchg
aas
or
mov
cltd
testb
mov
xchg
pusha
je
loop
mov
mov
mov
xchg
movsb
out
push
fsts
xchg
arpl
js
xor
je
cmc
out
xor
stos
sub
cmc
sti
push
rolb
mov
iret
push
ss
add
xorl
xchg
ret
jno
jle
mov
leave
push
scas
cwtl
das
dec
imul
dec
sub
ss
shl
test
insl
xor
das
std
mov
scas
jns
mov
xor
scas
iret
dec
mov
mov
xor
push
adc
stos
in
mov
push
int
cmp
fldt
push
hlt
jb
or
shll
into
hlt
mov
into
push
xchg
add
adc
arpl
cmp
xchg
cmp
dec
adc
adc
mov
inc
fidivs
mov
leave
cmp
fnstcw
and
or
dec
sbb
jnp
fnstenv
fs
adc
inc
scas
jae
pop
cmc
cli
data16
adc
rcrl
lcall
aaa
add
pop
loopne
sbb
push
out
jae
loope
je
cmp
and
jle
and
dec
sub
pop
lock
imul
hlt
aam
ljmp
ret
mov
xor
dec
ret
dec
adc
js
scas
pop
dec
cmpsl
jecxz
sahf
mov
lcall
loope
out
mov
lods
pop
mulb
jmp
cmpsb
lcall
test
out
cmpsb
adc
sbb
cwtl
outsb
mov
pop
push
movb
ja
cmpsb
sub
out
loope
cmp
mov
dec
adc
outsb
lock
mov
enter
add
jno
and
loopne
pushf
sub
mov
and
dec
pushf
sbb
js
xlat
dec
mov
dec
push
push
jno
jo
lock
arpl
mov
inc
imul
pop
push
mov
or
test
push
cmpsl
sbb
ljmp
stos
inc
push
and
and
mov
pop
pop
mov
dec
dec
dec
pop
and
mov
push
pop
push
sub
cmc
dec
mov
outsb
mov
ficoml
call
out
loop
iret
shlb
adc
sbb
dec
addr16
pop
jno
jl
fmuls
iret
pop
adcl
movsb
dec
int3
out
icebp
ja
pop
ja
in
in
jbe
std
xor
inc
loope
subb
outsl
inc
pop
sub
and
push
test
jecxz
std
xor
daa
aam
cs
outsl
cmpl
jg
add
lods
pusha
popf
in
and
xchg
sub
mov
lret
push
cmp
adc
jbe
jns
push
jecxz
cmp
sub
adc
pop
pop
cs
pop
push
sub
mov
aad
xchg
xchg
jge
enter
mov
pop
dec
cmc
lret
fsub
pop
movsb
sbb
sub
or
mov
aam
cld
xchg
adc
fucomip
scas
into
scas
lea
push
cmp
ds
loopne
incl
mov
and
mov
movsl
es
or
push
out
or
aad
cwtl
mov
imul
xor
dec
aaa
pop
jb
aas
in
pop
pusha
xor
dec
xchg
iret
push
xchg
pop
in
push
or
or
adc
cmp
into
sub
fdivp
cmpl
inc
repnz
lock
out
fsubrs
movb
in
test
mov
loop
pop
out
xchg
xchg
mov
leave
mov
sub
cmp
sub
ds
jmp
pop
push
call
or
jge
xchg
repnz
push
shlb
in
repz
inc
jae
pushf
pop
push
call
outsl
nop
incb
xchg
jle
movsl
sub
or
add
mov
inc
clc
push
or
xor
xchg
or
shlb
scas
dec
jmp
aad
sbb
jge
ja
fwait
int
adc
and
stos
int3
lea
pop
sbb
jge
jae
jmp
adc
push
adc
xchg
out
jecxz
scas
xchg
je
mov
inc
in
sbb
xchg
jno
mov
sbb
in
mov
inc
shll
mov
sti
inc
dec
cmp
mov
repnz
push
xchg
mov
jnp
imul
subl
mov
in
mov
loop
bound
add
outsb
jge
add
inc
jnp
mov
push
push
out
xchg
dec
pop
aas
jns
aaa
ret
push
ja
aam
fldcw
cli
xchg
add
repz
and
sub
mov
or
outsb
mov
shl
cmp
fsub
cmpsb
adc
jo
and
mov
test
das
fiadds
into
aaa
sahf
or
std
pop
mov
sub
xchg
in
rcr
shrl
addr16
inc
sbb
dec
adc
and
adc
test
icebp
out
dec
scas
and
mov
rorl
dec
cltd
ds
fmuls
rolb
js
jmp
jae
sub
sahf
and
testb
xchg
xchg
fidivs
inc
outsb
pop
and
cmp
jle
cltd
ja
xchg
or
std
inc
mov
cli
push
in
int
enter
loop
aas
fcomps
sub
pop
mov
add
mov
cmpl
jg
add
sarb
mov
movsb
push
test
and
cmp
add
sub
test
jg
mov
fstps
das
cs
or
xor
add
je
outsb
push
mov
xchg
loopne
ja
das
add
sub
aam
adc
pop
mov
mov
es
or
mov
decl
in
lcall
dec
mov
add
jb
cmpsb
test
andl
jmp
call
mov
pop
subl
xor
in
xor
pop
cmp
xchg
cmpsb
add
aad
jnp
repnz
or
xlat
cmp
les
sub
cld
orl
je
mov
aam
pop
dec
mov
push
lds
jl
cmp
cmp
jbe
sti
out
push
pusha
xlat
mov
jg
jle
std
xor
fisttps
leave
mov
pushf
xor
mov
pop
mov
mov
movsl
or
lret
xchg
inc
mov
movsb
shl
add
jne
int
cmp
cmp
and
popf
xchg
xchg
mov
xchg
sub
dec
push
fs
or
or
sub
into
cmp
add
mov
fmuls
icebp
add
loopne
xor
push
fldenvs
lret
movsl
test
popa
xchg
mov
rorl
pop
por
mov
faddp
cmp
xor
mov
shr
insb
adc
test
dec
sbb
rcll
add
xor
test
mov
ja
jnp
pop
pop
sbb
xchg
fbstp
xchg
inc
aaa
dec
or
sbb
insl
in
cs
std
das
cmpsb
add
pushf
or
xor
sub
test
flds
cmp
dec
std
or
xchg
push
daa
pop
insl
push
jbe
push
mov
fdivrs
and
jl
cmp
cmp
xor
call
pop
and
cmp
fldt
dec
cmp
outsl
jl
push
repz
mov
or
sti
hlt
fstps
sbb
ret
xchg
mov
add
mov
ret
cltd
add
cmp
into
subb
push
sbb
icebp
or
insb
mov
mov
mov
mov
mov
adc
jp
sbb
shl
push
push
fsub
pushf
push
pop
jecxz
stc
ret
xor
cwtl
add
stos
xor
and
adc
test
mov
mov
push
das
fldenv
mov
dec
aas
xchg
xor
psubsb
sbb
sbb
mov
or
add
ja
mov
adc
call
test
insb
popa
cwtl
jg
mov
jne
lods
adc
daa
cmc
mov
dec
int3
sbb
loope
push
nop
xchg
and
mov
jle
adc
jg
xchg
and
xchg
mov
mov
jle
lahf
push
xorl
jne
or
js
sbb
aad
mov
divl
fsubs
addr16
mov
or
test
xor
push
dec
xlat
dec
sbb
fsts
inc
ds
push
push
sub
pop
inc
jnp
cmpsb
push
es
dec
xchg
cmpsb
dec
daa
fdivrl
xor
sub
mov
cmpsl
cld
inc
push
mov
inc
adc
in
fsubr
icebp
pop
shrb
cwtl
pop
inc
das
or
cmp
insl
test
inc
jmp
cmc
ret
mov
insl
pop
adc
rcl
inc
or
icebp
rcrb
ret
popf
and
mov
xor
jmp
xchg
inc
cltd
xlat
popa
adc
cmpsb
test
js
outsb
inc
fsubl
outsl
loope
lea
and
mov
mov
xor
jb
push
xchg
daa
jl
mov
cld
repz
sbb
insl
sub
sbb
inc
mov
add
mov
ficoms
faddl
cmp
gs
popa
push
pop
xor
mov
loop
xor
dec
rclb
rolb
sbb
jno
jmp
ficompl
adc
xchg
and
pop
rcrb
shlb
cmp
xlat
jne
dec
sbb
inc
xchg
jmp
fbstp
add
push
icebp
xchg
sub
in
test
xchg
xchg
or
ljmp
daa
cmpsl
xor
mov
jl
icebp
addl
je
ljmp
dec
mov
pause
icebp
cmp
and
idivl
mov
scas
pusha
xor
inc
fildl
and
dec
mov
ljmp
test
adc
sti
mov
sub
add
in
jae
insb
jecxz
pop
test
fimuls
ss
cmp
push
lret
lock
aam
mov
pop
icebp
fiadds
lret
mov
popa
cli
jmp
inc
aad
outsl
cmp
aad
aad
sub
rcl
popf
daa
sbb
sub
push
je
lds
cltd
mov
sbb
ror
lret
clc
jge
scas
gs
push
pop
xor
bound
mov
mov
or
and
jae
dec
mov
cld
jle
mov
roll
xchg
ja
xchg
push
bound
loopne
outsl
fwait
pushf
and
dec
lret
jecxz
repnz
mov
or
push
out
add
cmp
add
ret
sbb
or
sub
jb
pop
push
scas
cmpsb
aas
cmc
fst
fprem
insl
mov
movsb
fists
nop
in
xchg
lcall
cmc
iret
or
test
push
mov
ret
lahf
loop
jp
sbb
mov
mov
lds
jae
sbb
xor
insb
inc
imul
sub
into
mov
sti
dec
test
ja
fstpl
std
dec
cmp
daa
iret
iret
push
jl
sub
adc
adc
test
mov
cmp
clc
pop
mov
insl
jmp
cmc
mov
out
fsub
js
dec
pop
xchg
hlt
js
jge
adc
imul
arpl
mov
aaa
xchg
fwait
and
mov
xchg
nop
jbe
out
frstor
in
xchg
mov
js
jmp
inc
pop
add
mov
sub
xchg
push
dec
out
aam
out
inc
or
pop
mov
insb
leave
pop
jecxz
jbe
push
mov
mov
data16
dec
or
gs
mov
in
xchg
jae
insb
cmc
mov
cmp
jl
test
mov
cwtl
lds
adc
loopne
push
mov
in
jmp
and
incb
push
sbb
sbb
mov
xor
les
xchg
pop
add
std
ret
push
std
cmp
hlt
lahf
ret
lds
inc
daa
in
push
adcl
addr16
sbb
mov
sbb
popf
jae
ja
rorb
or
aas
cli
dec
in
jbe
jno
mov
push
or
xchg
pop
out
ss
or
notl
pop
mov
imul
movsl
push
dec
ret
cmp
fwait
es
and
stos
cmp
push
aam
add
scas
es
iret
pusha
ljmp
jns
jo
xlat
inc
inc
or
push
rolb
movsl
and
sbb
inc
mov
jo
pop
mov
mov
lods
adcb
js
and
es
je
xor
mov
stos
enter
pop
cmp
push
outsl
mov
jecxz
pop
xor
loopne
jl
cmp
add
int3
jge
je
fwait
xchg
test
fmul
inc
std
clc
enter
and
sub
adc
movsl
sbb
xchg
popa
rcl
hlt
and
stc
inc
test
lahf
popa
sub
aad
repz
roll
mov
lods
in
les
cmp
sbb
rorl
fbstp
and
add
lret
xorl
aad
hlt
fdivl
xor
bound
pop
aas
mov
inc
push
ret
shlb
push
add
mov
cmp
test
jbe
xchg
pop
inc
cmp
mov
mov
add
neg
jl
mov
cmp
jmp
lcall
pop
test
inc
ljmp
jmp
sbb
negb
mov
mov
push
and
ds
jle
leave
cltd
push
push
fstpl
xor
sahf
ds
mov
out
cmc
or
xchg
ret
clc
xchg
mov
push
inc
xor
test
sub
or
adc
mov
test
push
xchg
into
mov
cmp
jns
aam
sub
scas
jo
cmpsb
jg
xor
jbe
pushf
sub
sahf
mov
in
dec
dec
stc
pop
popf
add
sub
out
jge
mov
push
repz
fs
push
adc
test
mov
adc
xlat
mov
subb
ja
sbb
xchg
outsl
pop
inc
cwtl
xchg
ret
mov
mov
inc
xor
loop
fidivrs
cs
push
adc
xorb
rsm
mov
cli
inc
outsl
sub
test
es
daa
sbb
xor
or
addl
cmp
testb
push
jge
mov
push
cli
xlat
jns
ljmp
inc
inc
push
stc
ja
sti
pop
insl
mov
jns
leave
push
mov
ja
pop
popa
clc
or
inc
cmpsl
insl
out
hlt
xor
lret
pop
xchg
movsl
scas
je
lock
sub
test
call
sub
add
in
in
gs
ss
cmp
hlt
push
or
out
inc
jnp
push
test
or
push
les
sub
xchg
pop
mov
cmp
icebp
sbb
and
aaa
in
cmp
mov
rorb
ret
and
aad
or
ja
jmp
jmp
jge
dec
cmc
arpl
imul
arpl
enter
int3
sub
xchg
ficomps
xor
ljmp
xor
xchg
and
lods
xlat
xchg
pop
and
pop
in
and
or
fnstcw
in
mov
xchg
sbb
mov
sbb
dec
mov
imul
inc
cmp
fnstcw
pusha
lods
mov
insb
jp
ljmp
jg
sbb
xchg
stos
adc
sbb
stos
and
test
and
je
dec
and
lds
daa
xchg
xor
or
popa
jno
push
push
mov
jp
clc
push
jp
or
xor
iret
fnsave
repnz
aaa
and
lret
adc
ret
into
inc
in
das
dec
mov
cmc
cld
fidivl
dec
cmp
repnz
ret
sbb
lret
lret
test
aas
inc
mov
xor
stos
std
inc
ds
jge
ja
mov
addr16
lcall
dec
sub
xchg
call
repnz
lea
sbb
ret
adc
outsl
clc
addl
cltd
inc
js
mov
push
pop
inc
sub
iret
pop
push
adc
cmpl
mov
aam
jno
test
inc
cs
dec
lret
push
dec
xorl
mov
xchg
rorl
inc
jmp
test
int3
cmp
lods
lcall
mov
jns
and
jmp
mov
inc
outsl
insl
add
add
or
add
and
add
lods
add
addb
add
add
add
add
add
add
add
inc
add
addb
insb
add
addb
add
add
add
add
add
add
pop
add
add
xor
add
add
in
add
add
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
pushf
add
add
xor
add
add
in
add
test
xor
outsl
insl
add
add
add
add
les
add
test
xor
outsl
insl
add
add
add
add
faddl
add
in
inc
add
test
add
test
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
and
add
add
and
pop
add
add
add
add
add
add
add
loop
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
add
add
xor
xor
bound
xor
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
add
je
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
xor
xor
xor
cmp
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
xor
sub
and
xor
xor
add
add
and
xor
add
add
mov
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
arpl
add
je
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
xor
xor
xor
cmp
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
xor
sub
and
xor
xor
add
add
and
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
cwtl
inc
add
loopne
add
imul
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
add
ret
add
inc
add
add
add
popa
mov
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
cmc
xchg
inc
sar
inc
add
sahf
xor
imul
neg
test
push
jns
dec
push
mov
repnz
call
pop
fdivrs
js
sahf
lcall
and
nop
repz
fwait
jmp
sbb
js
repz
add
mov
adc
cmc
ljmp
sbb
int
dec
xor
inc
cmpsl
dec
jl
and
pop
js
push
cmp
or
jo
xor
push
push
lret
fistl
pop
or
or
es
xchg
xor
mov
and
mov
pop
xchg
xor
dec
cmp
jno
in
imul
les
push
or
inc
and
jns
push
mov
ret
imulb
out
daa
int3
adc
cwtl
rol
es
in
sub
fwait
dec
pop
or
pop
sbb
cmpsb
fldl
mov
aas
push
fmuls
fdivrl
xor
mov
adc
adc
cmpsl
pushf
sub
sub
mov
mov
in
outsl
repz
ljmp
fdivs
xchg
xor
mov
divl
mov
jge
push
mov
pop
enter
or
push
mov
adc
cmc
xchg
aas
sbb
jecxz
xchg
xchg
sub
icebp
sbb
aaa
cmc
jns
ret
xor
and
add
mov
jno
sbbl
push
lods
pop
jb,pt
orl
dec
loop
mov
btcl
stos
call
mov
xchg
jge
adc
mov
repnz
cltd
std
xor
call
data16
lret
loopne
add
or
mov
dec
push
xlat
jle
sahf
cld
out
jmp
inc
ficoms
fdivs
andb
cli
lods
pusha
xor
in
adcb
xlat
loope
mov
addr16
fs
hlt
cld
sbb
inc
add
jno
sbbb
sub
inc
insb
xchg
xchg
add
rclb
mov
jmp
mov
xor
popa
int3
adc
sarb
scas
hlt
push
mov
arpl
pop
push
ret
scas
dec
sbb
sub
cmp
cmp
loop
sar
sahf
addr16
loop
add
mov
mov
outsl
dec
and
dec
cmp
add
cld
pop
stos
scas
popf
iret
cmp
cmova
enter
test
and
add
mov
inc
dec
pop
arpl
xchg
aas
sbb
divl
enter
ret
and
sbbb
rcrl
mov
pop
lea
dec
cmp
mov
pusha
lret
or
jbe
icebp
push
sub
sub
in
mull
jnp
bts
ss
rolb
popf
dec
pop
ds
sbb
jecxz
int
cmpl
and
aaa
jae
out
cmp
ret
fdivl
mov
xchg
das
sbb
out
jmp
jo
stos
mov
outsl
sub
fs
cltd
mov
idiv
or
mov
jmp
jo
repz
or
xor
mov
adc
std
push
int3
inc
xor
push
push
int
or
rcll
xchg
dec
das
mov
cli
test
and
dec
pusha
mov
popf
mov
cmp
mov
shl
push
cmp
jo
icebp
inc
data16
sbb
in
data16
mov
or
add
and
shll
pop
xchg
bound
and
ljmp
cmp
movsb
movq
lret
sub
xchg
xchg
xchg
adc
rcll
jecxz
daa
sarb
adc
sub
push
cmp
jl
adc
cld
inc
add
in
and
ja
sub
push
shr
daa
aam
xor
cmpsb
not
roll
adc
ficoml
xor
pop
xchg
aas
jmp
nop
xor
mov
sbb
xor
push
mov
lock
mov
loopne
jae
hlt
nop
inc
xor
test
loop
subl
pop
xchg
popf
cmp
mov
arpl
lcall
movsb
push
jbe
jge
pop
mov
and
mov
dec
jbe
fs
or
sahf
sbb
mov
negb
rorb
sub
sbb
mov
cmp
fs
pop
jle
aaa
and
push
ficompl
sub
adc
xchg
mov
xchg
push
fidivs
xchg
fsubrl
outsb
scas
stos
insb
pushf
mov
push
xchg
sbb
ss
push
add
insb
mov
push
rcrb
lahf
or
rcll
iret
jecxz
sbb
out
insb
lcall
sub
push
es
std
inc
rcrl
sbb
das
ret
jge
rol
push
out
pop
shll
out
cmpsl
popa
mov
dec
cmc
leave
arpl
xchg
dec
push
adc
ljmp
movsb
repnz
sbb
lock
mov
dec
inc
xor
lcall
fnsave
pop
daa
push
mov
loopne
jmp
lcall
pop
push
push
add
push
dec
mov
cmpsl
bound
aad
lahf
sbb
cmp
das
mov
cmp
je
xchg
fldenv
sub
out
jns
int3
or
sub
stos
orb
cld
inc
inc
jecxz
adc
scas
jecxz
in
rorl
shrl
out
call
aaa
ss
insb
jg
or
sub
xchg
icebp
sbb
mov
popa
hlt
int
mov
scas
int
pushw
sub
shrl
aam
mov
xchg
adc
pop
loopne
aad
mov
imul
das
pushf
cmp
das
sbb
loop
xchg
dec
xchg
and
mulb
cmp
jmp
sarl
jecxz
or
jne
adc
int3
lods
pushf
sbb
mov
xlat
lock
dec
push
xchg
call
popf
stos
add
cmp
inc
xchg
rol
xor
push
rcrb
mov
sub
and
das
sbb
aaa
push
xor
or
popa
inc
or
mov
je
cmp
pop
xchg
and
xchg
xlat
mov
ret
and
dec
int
test
cmp
pop
icebp
stos
cmpb
and
lea
push
or
and
and
cmc
pop
ds
jne
imul
out
sti
test
mov
out
iret
pop
jo
cs
push
push
inc
jnp
aam
ljmp
lods
push
das
imul
mov
xchg
lock
fwait
daa
sti
jp
xchg
test
cmpsb
aas
cmc
xchg
sub
inc
fadd
jns
and
dec
fisubs
push
sbb
aas
inc
scas
sub
movl
mov
mov
lret
loop
adc
movsl
ljmp
mov
adc
cltd
je
jne
jg
stc
fs
test
insl
dec
lret
pop
pop
std
inc
mov
sbb
shl
int3
into
aad
jbe
pop
sub
sbb
popa
daa
fnstenv
in
lret
aad
out
jecxz
cmp
cmc
mov
pop
test
and
jle
lds
pop
pop
push
fisubrl
or
xchg
aas
or
mov
cltd
testb
mov
xchg
pusha
je
loop
mov
mov
mov
xchg
movsb
out
push
fsts
xchg
arpl
js
xor
je
cmc
out
xor
stos
sub
cmc
sti
push
rolb
mov
iret
push
ss
add
xorl
xchg
ret
jno
jle
mov
leave
push
scas
cwtl
das
dec
imul
dec
sub
ss
shl
test
insl
xor
das
std
mov
scas
jns
mov
xor
scas
iret
dec
mov
mov
xor
push
adc
stos
in
mov
push
int
cmp
fldt
push
hlt
jb
or
shll
into
hlt
mov
into
push
xchg
add
adc
arpl
cmp
xchg
cmp
dec
adc
adc
mov
inc
fidivs
mov
leave
cmp
fnstcw
and
or
dec
sbb
jnp
fnstenv
fs
adc
inc
scas
jae
pop
cmc
cli
data16
adc
rcrl
lcall
aaa
add
pop
loopne
sbb
push
out
jae
loope
je
cmp
and
jle
and
dec
sub
pop
lock
imul
hlt
aam
ljmp
ret
mov
xor
dec
ret
dec
adc
js
scas
pop
dec
cmpsl
jecxz
sahf
mov
lcall
loope
out
mov
lods
pop
mulb
jmp
cmpsb
lcall
test
out
cmpsb
adc
sbb
cwtl
outsb
mov
pop
push
movb
ja
cmpsb
sub
out
loope
cmp
mov
dec
adc
outsb
lock
mov
enter
add
jno
and
loopne
pushf
sub
mov
and
dec
pushf
sbb
js
xlat
dec
mov
dec
push
push
jno
jo
lock
arpl
mov
inc
imul
pop
push
mov
or
test
push
cmpsl
sbb
ljmp
stos
inc
push
and
and
mov
pop
pop
mov
dec
dec
dec
pop
and
mov
push
pop
push
sub
cmc
dec
mov
outsb
mov
ficoml
call
out
loop
iret
shlb
adc
sbb
dec
addr16
pop
jno
jl
fmuls
iret
pop
adcl
movsb
dec
int3
out
icebp
ja
pop
ja
in
in
jbe
std
.byte
icebp
inc
outsl
insl
add
add
or
add
and
add
lods
add
addb
add
add
add
add
add
add
add
inc
add
addb
insb
add
addb
add
add
add
add
add
add
pop
add
add
xor
add
add
in
add
add
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
pushf
add
add
xor
add
add
in
add
test
xor
outsl
insl
add
add
add
add
les
add
test
xor
outsl
insl
add
add
add
add
faddl
add
in
inc
add
test
add
test
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
and
add
add
and
pop
add
add
add
add
add
add
add
loop
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
add
add
xor
xor
bound
xor
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
add
je
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
xor
xor
xor
cmp
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
xor
sub
and
xor
xor
add
add
and
xor
add
add
mov
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
arpl
add
je
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
xor
xor
xor
cmp
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
xor
sub
and
xor
xor
add
add
and
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
cwtl
inc
add
loopne
add
imul
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
add
ret
add
inc
add
add
add
popa
mov
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
cmc
xchg
inc
sar
inc
add
sahf
xor
imul
neg
test
push
jns
dec
push
mov
repnz
call
pop
fdivrs
js
sahf
lcall
and
nop
repz
fwait
jmp
sbb
js
repz
add
mov
adc
cmc
ljmp
sbb
int
dec
xor
inc
cmpsl
dec
jl
and
pop
js
push
cmp
or
jo
xor
push
push
lret
fistl
pop
or
or
es
xchg
xor
mov
and
mov
pop
xchg
xor
dec
cmp
jno
in
imul
les
push
or
inc
and
jns
push
mov
ret
imulb
out
daa
int3
adc
cwtl
rol
es
in
sub
fwait
dec
pop
or
pop
sbb
cmpsb
fldl
mov
aas
push
fmuls
fdivrl
xor
mov
adc
adc
cmpsl
pushf
sub
sub
mov
mov
in
outsl
repz
ljmp
fdivs
xchg
xor
mov
divl
mov
jge
push
mov
pop
enter
or
push
mov
adc
cmc
xchg
aas
sbb
jecxz
xchg
xchg
sub
icebp
sbb
aaa
cmc
jns
ret
xor
and
add
mov
jno
sbbl
push
lods
pop
jb,pt
orl
dec
loop
mov
btcl
stos
call
mov
xchg
jge
adc
mov
repnz
cltd
std
xor
call
data16
lret
loopne
add
or
mov
dec
push
xlat
jle
sahf
cld
out
jmp
inc
ficoms
fdivs
andb
cli
lods
pusha
xor
in
adcb
xlat
loope
mov
addr16
fs
hlt
cld
sbb
inc
add
jno
sbbb
sub
inc
insb
xchg
xchg
add
rclb
mov
jmp
mov
xor
popa
int3
adc
sarb
scas
hlt
push
mov
arpl
pop
push
ret
scas
dec
sbb
sub
cmp
cmp
loop
sar
sahf
addr16
loop
add
mov
mov
outsl
dec
and
dec
cmp
add
cld
pop
stos
scas
popf
iret
cmp
cmova
enter
test
and
add
mov
inc
dec
pop
arpl
xchg
aas
sbb
divl
enter
ret
and
sbbb
rcrl
mov
pop
lea
dec
cmp
mov
pusha
lret
or
jbe
icebp
push
sub
sub
in
mull
jnp
bts
ss
rolb
popf
dec
pop
ds
sbb
jecxz
int
cmpl
and
aaa
jae
out
cmp
ret
fdivl
mov
xchg
das
sbb
out
jmp
jo
stos
mov
outsl
sub
fs
cltd
mov
idiv
or
mov
jmp
jo
repz
or
xor
mov
adc
std
push
int3
inc
xor
push
push
int
or
rcll
xchg
dec
das
mov
cli
test
and
dec
pusha
mov
popf
mov
cmp
mov
shl
push
cmp
jo
icebp
inc
data16
sbb
in
data16
mov
or
add
and
shll
pop
xchg
bound
and
ljmp
cmp
movsb
movq
lret
sub
xchg
xchg
xchg
adc
rcll
jecxz
daa
sarb
adc
sub
push
cmp
jl
adc
cld
inc
add
in
and
ja
sub
push
shr
daa
aam
xor
cmpsb
not
roll
adc
ficoml
xor
pop
xchg
aas
jmp
nop
xor
mov
sbb
xor
push
mov
lock
mov
loopne
jae
hlt
nop
inc
xor
test
loop
subl
pop
xchg
popf
cmp
mov
arpl
lcall
movsb
push
jbe
jge
pop
mov
and
mov
dec
jbe
fs
or
sahf
sbb
mov
negb
rorb
sub
sbb
mov
cmp
fs
pop
jle
aaa
and
push
ficompl
sub
adc
xchg
mov
xchg
push
fidivs
xchg
fsubrl
outsb
scas
stos
insb
pushf
mov
push
xchg
sbb
ss
push
add
insb
mov
push
rcrb
lahf
or
rcll
iret
jecxz
sbb
out
insb
lcall
sub
push
es
std
inc
rcrl
sbb
das
ret
jge
rol
push
out
pop
shll
out
cmpsl
popa
mov
dec
cmc
leave
arpl
xchg
dec
push
adc
ljmp
movsb
repnz
sbb
lock
mov
dec
inc
xor
lcall
fnsave
pop
daa
push
mov
loopne
jmp
lcall
pop
push
push
add
push
dec
mov
cmpsl
bound
aad
lahf
sbb
cmp
das
mov
cmp
je
xchg
fldenv
sub
out
jns
int3
or
sub
stos
orb
cld
inc
inc
jecxz
adc
scas
jecxz
in
rorl
shrl
out
call
aaa
ss
insb
jg
or
sub
xchg
icebp
sbb
mov
popa
hlt
int
mov
scas
int
pushw
sub
shrl
aam
mov
xchg
adc
pop
loopne
aad
mov
imul
das
pushf
cmp
das
sbb
loop
xchg
dec
xchg
and
mulb
cmp
jmp
sarl
jecxz
or
jne
adc
int3
lods
pushf
sbb
mov
xlat
lock
dec
push
xchg
call
popf
stos
add
cmp
inc
xchg
rol
xor
push
rcrb
mov
sub
and
das
sbb
aaa
push
xor
or
popa
inc
or
mov
je
cmp
pop
xchg
and
xchg
xlat
mov
ret
and
dec
int
test
cmp
pop
icebp
stos
cmpb
and
lea
push
or
and
and
cmc
pop
ds
jne
imul
out
sti
test
mov
out
iret
pop
jo
cs
push
push
inc
jnp
aam
ljmp
lods
push
das
imul
mov
xchg
lock
fwait
daa
sti
jp
xchg
test
cmpsb
aas
cmc
xchg
sub
inc
fadd
jns
and
dec
fisubs
push
sbb
aas
inc
scas
sub
movl
mov
mov
lret
loop
adc
movsl
ljmp
mov
adc
cltd
je
jne
jg
stc
fs
test
insl
dec
lret
pop
pop
std
inc
mov
sbb
shl
int3
into
aad
jbe
pop
sub
sbb
popa
daa
fnstenv
in
lret
aad
out
jecxz
cmp
cmc
mov
pop
test
and
jle
lds
pop
pop
push
fisubrl
or
xchg
aas
or
mov
cltd
testb
mov
xchg
pusha
je
loop
mov
mov
mov
xchg
movsb
out
push
fsts
xchg
arpl
js
xor
je
cmc
out
xor
stos
sub
cmc
sti
push
rolb
mov
iret
push
ss
add
xorl
xchg
ret
jno
jle
mov
leave
push
scas
cwtl
das
dec
imul
dec
sub
ss
shl
test
insl
xor
das
std
mov
scas
jns
mov
xor
scas
iret
dec
mov
mov
xor
push
adc
stos
in
mov
push
int
cmp
fldt
push
hlt
jb
or
shll
into
hlt
mov
into
push
xchg
add
adc
arpl
cmp
xchg
cmp
dec
adc
adc
mov
inc
fidivs
mov
leave
cmp
fnstcw
and
or
dec
sbb
jnp
fnstenv
fs
adc
inc
scas
jae
pop
cmc
cli
data16
adc
rcrl
lcall
aaa
add
pop
loopne
sbb
push
out
jae
loope
je
cmp
and
jle
and
dec
sub
pop
lock
imul
hlt
aam
ljmp
ret
mov
xor
dec
ret
dec
adc
js
scas
pop
dec
cmpsl
jecxz
sahf
mov
lcall
loope
out
mov
lods
pop
mulb
jmp
cmpsb
lcall
test
out
cmpsb
adc
sbb
cwtl
outsb
mov
pop
push
movb
ja
cmpsb
sub
out
loope
cmp
mov
dec
adc
outsb
lock
mov
enter
add
jno
and
loopne
pushf
sub
mov
and
dec
pushf
sbb
js
xlat
dec
mov
dec
push
push
jno
jo
lock
arpl
mov
inc
imul
pop
push
mov
or
test
push
cmpsl
sbb
ljmp
stos
inc
push
and
and
mov
pop
pop
mov
dec
dec
dec
pop
and
mov
push
pop
push
sub
cmc
dec
mov
outsb
mov
ficoml
call
out
loop
iret
shlb
adc
sbb
dec
addr16
pop
jno
jl
fmuls
iret
pop
adcl
movsb
dec
int3
out
icebp
ja
pop
ja
in
in
jbe
std
xor
inc
loope
subb
outsl
inc
pop
sub
and
push
test
jecxz
std
xor
daa
aam
cs
outsl
cmpl
jg
add
lods
pusha
popf
in
and
xchg
sub
mov
lret
push
cmp
adc
jbe
jns
push
jecxz
cmp
sub
adc
pop
pop
cs
pop
push
sub
mov
aad
xchg
xchg
jge
enter
mov
pop
dec
cmc
lret
fsub
pop
movsb
sbb
sub
or
mov
aam
cld
xchg
adc
fucomip
scas
into
scas
lea
push
cmp
ds
loopne
incl
mov
and
mov
movsl
es
or
push
out
or
aad
cwtl
mov
imul
xor
dec
aaa
pop
jb
aas
in
pop
pusha
xor
dec
xchg
iret
push
xchg
pop
in
push
or
or
adc
cmp
into
sub
fdivp
cmpl
inc
repnz
lock
out
fsubrs
movb
in
test
mov
loop
pop
out
xchg
xchg
mov
leave
mov
sub
cmp
sub
ds
jmp
pop
push
call
or
jge
xchg
repnz
push
shlb
in
repz
inc
jae
pushf
pop
push
call
outsl
nop
incb
xchg
jle
movsl
sub
or
add
mov
inc
clc
push
or
xor
xchg
or
shlb
scas
dec
jmp
aad
sbb
jge
ja
fwait
int
adc
and
stos
int3
lea
pop
sbb
jge
jae
jmp
adc
push
adc
xchg
out
jecxz
scas
xchg
je
mov
inc
in
sbb
xchg
jno
mov
sbb
in
mov
inc
shll
mov
sti
inc
dec
cmp
mov
repnz
push
xchg
mov
jnp
imul
subl
mov
in
mov
loop
bound
add
outsb
jge
add
inc
jnp
mov
push
push
out
xchg
dec
pop
aas
jns
aaa
ret
push
ja
aam
fldcw
cli
xchg
add
repz
and
sub
mov
or
outsb
mov
shl
cmp
fsub
cmpsb
adc
jo
and
mov
test
das
fiadds
into
aaa
sahf
or
std
pop
mov
sub
xchg
in
rcr
shrl
addr16
inc
sbb
dec
adc
and
adc
test
icebp
out
dec
scas
and
mov
rorl
dec
cltd
ds
fmuls
rolb
js
jmp
jae
sub
sahf
and
testb
xchg
xchg
fidivs
inc
outsb
pop
and
cmp
jle
cltd
ja
xchg
or
std
inc
mov
cli
push
in
int
enter
loop
aas
fcomps
sub
pop
mov
add
mov
cmpl
jg
add
sarb
mov
movsb
push
test
and
cmp
add
sub
test
jg
mov
fstps
das
cs
or
xor
add
je
outsb
push
mov
xchg
loopne
ja
das
add
sub
aam
adc
pop
mov
mov
es
or
mov
decl
in
lcall
dec
mov
add
jb
cmpsb
test
andl
jmp
call
mov
pop
subl
xor
in
xor
pop
cmp
xchg
cmpsb
add
aad
jnp
repnz
or
xlat
cmp
les
sub
cld
orl
je
mov
aam
pop
dec
mov
push
lds
jl
cmp
cmp
jbe
sti
out
push
pusha
xlat
mov
jg
jle
std
xor
fisttps
leave
mov
pushf
xor
mov
pop
mov
mov
movsl
or
lret
xchg
inc
mov
movsb
shl
add
jne
int
cmp
cmp
and
popf
xchg
xchg
mov
xchg
sub
dec
push
fs
or
or
sub
into
cmp
add
mov
fmuls
icebp
add
loopne
xor
push
fldenvs
lret
movsl
test
popa
xchg
mov
rorl
pop
por
mov
faddp
cmp
xor
mov
shr
insb
adc
test
dec
sbb
rcll
add
xor
test
mov
ja
jnp
pop
pop
sbb
xchg
fbstp
xchg
inc
aaa
dec
or
sbb
insl
in
cs
std
das
cmpsb
add
pushf
or
xor
sub
test
flds
cmp
dec
std
or
xchg
push
daa
pop
insl
push
jbe
push
mov
fdivrs
and
jl
cmp
cmp
xor
call
pop
and
cmp
fldt
dec
cmp
outsl
jl
push
repz
mov
or
sti
hlt
fstps
sbb
ret
xchg
mov
add
mov
ret
cltd
add
cmp
into
subb
push
sbb
icebp
or
insb
mov
mov
mov
mov
mov
adc
jp
sbb
shl
push
push
fsub
pushf
push
pop
jecxz
stc
ret
xor
cwtl
add
stos
xor
and
adc
test
mov
mov
push
das
fldenv
mov
dec
aas
xchg
xor
psubsb
sbb
sbb
mov
or
add
ja
mov
adc
call
test
insb
popa
cwtl
jg
mov
jne
lods
adc
daa
cmc
mov
dec
int3
sbb
loope
push
nop
xchg
and
mov
jle
adc
jg
xchg
and
xchg
mov
mov
jle
lahf
push
xorl
jne
or
js
sbb
aad
mov
divl
fsubs
addr16
mov
or
test
xor
push
dec
xlat
dec
sbb
fsts
inc
ds
push
push
sub
pop
inc
jnp
cmpsb
push
es
dec
xchg
cmpsb
dec
daa
fdivrl
xor
sub
mov
cmpsl
cld
inc
push
mov
inc
adc
in
fsubr
icebp
pop
shrb
cwtl
pop
inc
das
or
cmp
insl
test
inc
jmp
cmc
ret
mov
insl
pop
adc
rcl
inc
or
icebp
rcrb
ret
popf
and
mov
xor
jmp
xchg
inc
cltd
xlat
popa
adc
cmpsb
test
js
outsb
inc
fsubl
outsl
loope
lea
and
mov
mov
xor
jb
push
xchg
daa
jl
mov
cld
repz
sbb
insl
sub
sbb
inc
mov
add
mov
ficoms
faddl
cmp
gs
popa
push
pop
xor
mov
loop
xor
dec
rclb
rolb
sbb
jno
jmp
ficompl
adc
xchg
and
pop
rcrb
shlb
cmp
xlat
jne
dec
sbb
inc
xchg
jmp
fbstp
add
push
icebp
xchg
sub
in
test
xchg
xchg
or
ljmp
daa
cmpsl
xor
mov
jl
icebp
addl
je
ljmp
dec
mov
pause
icebp
cmp
and
idivl
mov
scas
pusha
xor
inc
fildl
and
dec
mov
ljmp
test
adc
sti
mov
sub
add
in
jae
insb
jecxz
pop
test
fimuls
ss
cmp
push
lret
lock
aam
mov
pop
icebp
fiadds
lret
mov
popa
cli
jmp
inc
aad
outsl
cmp
aad
aad
sub
rcl
popf
daa
sbb
sub
push
je
lds
cltd
mov
sbb
ror
lret
clc
jge
scas
gs
push
pop
xor
bound
mov
mov
or
and
jae
dec
mov
cld
jle
mov
roll
xchg
ja
xchg
push
bound
loopne
outsl
fwait
pushf
and
dec
lret
jecxz
repnz
mov
or
push
out
add
cmp
add
ret
sbb
or
sub
jb
pop
push
scas
cmpsb
aas
cmc
fst
fprem
insl
mov
movsb
fists
nop
in
xchg
lcall
cmc
iret
or
test
push
mov
ret
lahf
loop
jp
sbb
mov
mov
lds
jae
sbb
xor
insb
inc
imul
sub
into
mov
sti
dec
test
ja
fstpl
std
dec
cmp
daa
iret
iret
push
jl
sub
adc
adc
test
mov
cmp
clc
pop
mov
insl
jmp
cmc
mov
out
fsub
js
dec
pop
xchg
hlt
js
jge
adc
imul
arpl
mov
aaa
xchg
fwait
and
mov
xchg
nop
jbe
out
frstor
in
xchg
mov
js
jmp
inc
pop
add
mov
sub
xchg
push
dec
out
aam
out
inc
or
pop
mov
insb
leave
pop
jecxz
jbe
push
mov
mov
data16
dec
or
gs
mov
in
xchg
jae
insb
cmc
mov
cmp
jl
test
mov
cwtl
lds
adc
loopne
push
mov
in
jmp
and
incb
push
sbb
sbb
mov
xor
les
xchg
pop
add
std
ret
push
std
cmp
hlt
lahf
ret
lds
inc
daa
in
push
adcl
addr16
sbb
mov
sbb
popf
jae
ja
rorb
or
aas
cli
dec
in
jbe
jno
mov
push
or
xchg
pop
out
ss
or
notl
pop
mov
imul
movsl
push
dec
ret
cmp
fwait
es
and
stos
cmp
push
aam
add
scas
es
iret
pusha
ljmp
jns
jo
xlat
inc
inc
or
push
rolb
movsl
and
sbb
inc
mov
jo
pop
mov
mov
lods
adcb
js
and
es
je
xor
mov
stos
enter
pop
cmp
push
outsl
mov
jecxz
pop
xor
loopne
jl
cmp
add
int3
jge
je
fwait
xchg
test
fmul
inc
std
clc
enter
and
sub
adc
movsl
sbb
xchg
popa
rcl
hlt
and
stc
inc
test
lahf
popa
sub
aad
repz
roll
mov
lods
in
les
cmp
sbb
rorl
fbstp
and
add
lret
xorl
aad
hlt
fdivl
xor
bound
pop
aas
mov
inc
push
ret
shlb
push
add
mov
cmp
test
jbe
xchg
pop
inc
cmp
mov
mov
add
neg
jl
mov
cmp
jmp
lcall
pop
test
inc
ljmp
jmp
sbb
negb
mov
mov
push
and
ds
jle
leave
cltd
push
push
fstpl
xor
sahf
ds
mov
out
cmc
or
xchg
ret
clc
xchg
mov
push
inc
xor
test
sub
or
adc
mov
test
push
xchg
into
mov
cmp
jns
aam
sub
scas
jo
cmpsb
jg
xor
jbe
pushf
sub
sahf
mov
in
dec
dec
stc
pop
popf
add
sub
out
jge
mov
push
repz
fs
push
adc
test
mov
adc
xlat
mov
subb
ja
sbb
xchg
outsl
pop
inc
cwtl
xchg
ret
mov
mov
inc
xor
loop
fidivrs
cs
push
adc
xorb
rsm
mov
cli
inc
outsl
sub
test
es
daa
sbb
xor
or
addl
cmp
testb
push
jge
mov
push
cli
xlat
jns
ljmp
inc
inc
push
stc
ja
sti
pop
insl
mov
jns
leave
push
mov
ja
pop
popa
clc
or
inc
cmpsl
insl
out
hlt
xor
lret
pop
xchg
movsl
scas
je
lock
sub
test
call
sub
add
in
in
gs
ss
cmp
hlt
push
or
out
inc
jnp
push
test
or
push
les
sub
xchg
pop
mov
cmp
icebp
sbb
and
aaa
in
cmp
mov
rorb
ret
and
aad
or
ja
jmp
jmp
jge
dec
cmc
arpl
imul
arpl
enter
int3
sub
xchg
ficomps
xor
ljmp
xor
xchg
and
lods
xlat
xchg
pop
and
pop
in
and
or
fnstcw
in
mov
xchg
sbb
mov
sbb
dec
mov
imul
inc
cmp
fnstcw
pusha
lods
mov
insb
jp
ljmp
jg
sbb
xchg
stos
adc
sbb
stos
and
test
and
je
dec
and
lds
daa
xchg
xor
or
popa
jno
push
push
mov
jp
clc
push
jp
or
xor
iret
fnsave
repnz
aaa
and
lret
adc
ret
into
inc
in
das
dec
mov
cmc
cld
fidivl
dec
cmp
repnz
ret
sbb
lret
lret
test
aas
inc
mov
xor
stos
std
inc
ds
jge
ja
mov
addr16
lcall
dec
sub
xchg
call
repnz
lea
sbb
ret
adc
outsl
clc
addl
cltd
inc
js
mov
push
pop
inc
sub
iret
pop
push
adc
cmpl
mov
aam
jno
test
inc
cs
dec
lret
push
dec
xorl
mov
xchg
rorl
inc
jmp
test
int3
cmp
lods
lcall
mov
jns
and
jmp
mov
inc
outsl
insl
add
add
or
add
and
add
lods
add
addb
add
add
add
add
add
add
add
inc
add
addb
insb
add
addb
add
add
add
add
add
add
pop
add
add
xor
add
add
in
add
add
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
pushf
add
add
xor
add
add
in
add
test
xor
outsl
insl
add
add
add
add
les
add
test
xor
outsl
insl
add
add
add
add
faddl
add
in
inc
add
test
add
test
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
and
add
add
and
pop
add
add
add
add
add
add
add
loop
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
add
add
xor
xor
bound
xor
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
add
je
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
xor
xor
xor
cmp
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
xor
sub
and
xor
xor
add
add
and
xor
add
add
mov
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
arpl
add
je
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
xor
xor
xor
cmp
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
xor
sub
and
xor
xor
add
add
and
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
cwtl
inc
add
loopne
add
imul
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
add
ret
add
inc
add
add
add
popa
mov
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
cmc
xchg
inc
sar
inc
add
sahf
xor
imul
neg
test
push
jns
dec
push
mov
repnz
call
pop
fdivrs
js
sahf
lcall
and
nop
repz
fwait
jmp
sbb
js
repz
add
mov
adc
cmc
ljmp
sbb
int
dec
xor
inc
cmpsl
dec
jl
and
pop
js
push
cmp
or
jo
xor
push
push
lret
fistl
pop
or
or
es
xchg
xor
mov
and
mov
pop
xchg
xor
dec
cmp
jno
in
imul
les
push
or
inc
and
jns
push
mov
ret
imulb
out
daa
int3
adc
cwtl
rol
es
in
sub
fwait
dec
pop
or
pop
sbb
cmpsb
fldl
mov
aas
push
fmuls
fdivrl
xor
mov
adc
adc
cmpsl
pushf
sub
sub
mov
mov
in
outsl
repz
ljmp
fdivs
xchg
xor
mov
divl
mov
jge
push
mov
pop
enter
or
push
mov
adc
cmc
xchg
aas
sbb
jecxz
xchg
xchg
sub
icebp
sbb
aaa
cmc
jns
ret
xor
and
add
mov
jno
sbbl
push
lods
pop
jb,pt
orl
dec
loop
mov
btcl
stos
call
mov
xchg
jge
adc
mov
repnz
cltd
std
xor
call
data16
lret
loopne
add
or
mov
dec
push
xlat
jle
sahf
cld
out
jmp
inc
ficoms
fdivs
andb
cli
lods
pusha
xor
in
adcb
xlat
loope
mov
addr16
fs
hlt
cld
sbb
inc
add
jno
sbbb
sub
inc
insb
xchg
xchg
add
rclb
mov
jmp
mov
xor
popa
int3
adc
sarb
scas
hlt
push
mov
arpl
pop
push
ret
scas
dec
sbb
sub
cmp
cmp
loop
sar
sahf
addr16
loop
add
mov
mov
outsl
dec
and
dec
cmp
add
cld
pop
stos
scas
popf
iret
cmp
cmova
enter
test
and
add
mov
inc
dec
pop
arpl
xchg
aas
sbb
divl
enter
ret
and
sbbb
rcrl
mov
pop
lea
dec
cmp
mov
pusha
lret
or
jbe
icebp
push
sub
sub
in
mull
jnp
bts
ss
rolb
popf
dec
pop
ds
sbb
jecxz
int
cmpl
and
aaa
jae
out
cmp
ret
fdivl
mov
xchg
das
sbb
out
jmp
jo
stos
mov
outsl
sub
fs
cltd
mov
idiv
or
mov
jmp
jo
repz
or
xor
mov
adc
std
push
int3
inc
xor
push
push
int
or
rcll
xchg
dec
das
mov
cli
test
and
dec
pusha
mov
popf
mov
cmp
mov
shl
push
cmp
jo
icebp
inc
data16
sbb
in
data16
mov
or
add
and
shll
pop
xchg
bound
and
ljmp
cmp
movsb
movq
lret
sub
xchg
xchg
xchg
adc
rcll
jecxz
daa
sarb
adc
sub
push
cmp
jl
adc
cld
inc
add
in
and
ja
sub
push
shr
daa
aam
xor
cmpsb
not
roll
adc
ficoml
xor
pop
xchg
aas
jmp
nop
xor
mov
sbb
xor
push
mov
lock
mov
loopne
jae
hlt
nop
inc
xor
test
loop
subl
pop
xchg
popf
cmp
mov
arpl
lcall
movsb
push
jbe
jge
pop
mov
and
mov
dec
jbe
fs
or
sahf
sbb
mov
negb
rorb
sub
sbb
mov
cmp
fs
pop
jle
aaa
and
push
ficompl
sub
adc
xchg
mov
xchg
push
fidivs
xchg
fsubrl
outsb
scas
stos
insb
pushf
mov
push
xchg
sbb
ss
push
add
insb
mov
push
rcrb
lahf
or
rcll
iret
jecxz
sbb
out
insb
lcall
sub
push
es
std
inc
rcrl
sbb
das
ret
jge
rol
push
out
pop
shll
out
cmpsl
popa
mov
dec
cmc
leave
arpl
xchg
dec
push
adc
ljmp
movsb
repnz
sbb
lock
mov
dec
inc
xor
lcall
fnsave
pop
daa
push
mov
loopne
jmp
lcall
pop
push
push
add
push
dec
mov
cmpsl
bound
aad
lahf
sbb
cmp
das
mov
cmp
je
xchg
fldenv
sub
out
jns
int3
or
sub
stos
orb
cld
inc
inc
jecxz
adc
scas
jecxz
in
rorl
shrl
out
call
aaa
ss
insb
jg
or
sub
xchg
icebp
sbb
mov
popa
hlt
int
mov
scas
int
pushw
sub
shrl
aam
mov
xchg
adc
pop
loopne
aad
mov
imul
das
pushf
cmp
das
sbb
loop
xchg
dec
xchg
and
mulb
cmp
jmp
sarl
jecxz
or
jne
adc
int3
lods
pushf
sbb
mov
xlat
lock
dec
push
xchg
call
popf
stos
add
cmp
inc
xchg
rol
xor
push
rcrb
mov
sub
and
das
sbb
aaa
push
xor
or
popa
inc
or
mov
je
cmp
pop
xchg
and
xchg
xlat
mov
ret
and
dec
int
test
cmp
pop
icebp
stos
cmpb
and
lea
push
or
and
and
cmc
pop
ds
jne
imul
out
sti
test
mov
out
iret
pop
jo
cs
push
push
inc
jnp
aam
ljmp
lods
push
das
imul
mov
xchg
lock
fwait
daa
sti
jp
xchg
test
cmpsb
aas
cmc
xchg
sub
inc
fadd
jns
and
dec
fisubs
push
sbb
aas
inc
scas
sub
movl
mov
mov
lret
loop
adc
movsl
ljmp
mov
adc
cltd
je
jne
jg
stc
fs
test
insl
dec
lret
pop
pop
std
inc
mov
sbb
shl
int3
into
aad
jbe
pop
sub
sbb
popa
daa
fnstenv
in
lret
aad
out
jecxz
cmp
cmc
mov
pop
test
and
jle
lds
pop
pop
push
fisubrl
or
xchg
aas
or
mov
cltd
testb
mov
xchg
pusha
je
loop
mov
mov
mov
xchg
movsb
out
push
fsts
xchg
arpl
js
xor
je
cmc
out
xor
stos
sub
cmc
sti
push
rolb
mov
iret
push
ss
add
xorl
xchg
ret
jno
jle
mov
leave
push
scas
cwtl
das
dec
imul
dec
sub
ss
shl
test
insl
xor
das
std
mov
scas
jns
mov
xor
scas
iret
dec
mov
mov
xor
push
adc
stos
in
mov
push
int
cmp
fldt
push
hlt
jb
or
shll
into
hlt
mov
into
push
xchg
add
adc
arpl
cmp
xchg
cmp
dec
adc
adc
mov
inc
fidivs
mov
leave
cmp
fnstcw
and
or
dec
sbb
jnp
fnstenv
fs
adc
inc
scas
jae
pop
cmc
cli
data16
adc
rcrl
lcall
aaa
add
pop
loopne
sbb
push
out
jae
loope
je
cmp
and
jle
and
dec
sub
pop
lock
imul
hlt
aam
ljmp
ret
mov
xor
dec
ret
dec
adc
js
scas
pop
dec
cmpsl
jecxz
sahf
mov
lcall
loope
out
mov
lods
pop
mulb
jmp
cmpsb
lcall
test
out
cmpsb
adc
sbb
cwtl
outsb
mov
pop
push
movb
ja
cmpsb
sub
out
loope
cmp
mov
dec
adc
outsb
lock
mov
enter
add
jno
and
loopne
pushf
sub
mov
and
dec
pushf
sbb
js
xlat
dec
mov
dec
push
push
jno
jo
lock
arpl
mov
inc
imul
pop
push
mov
or
test
push
cmpsl
sbb
ljmp
stos
inc
push
and
and
mov
pop
pop
mov
dec
dec
dec
pop
and
mov
push
pop
push
sub
cmc
dec
mov
outsb
mov
ficoml
call
out
loop
iret
shlb
adc
sbb
dec
addr16
pop
jno
jl
fmuls
iret
pop
adcl
movsb
dec
int3
out
icebp
ja
pop
ja
in
in
jbe
std
.byte
icebp
inc
outsl
insl
add
add
or
add
and
add
lods
add
addb
add
add
add
add
add
add
add
inc
add
addb
insb
add
addb
add
add
add
add
add
add
pop
add
add
xor
add
add
in
add
add
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
pushf
add
add
xor
add
add
in
add
test
xor
outsl
insl
add
add
add
add
les
add
test
xor
outsl
insl
add
add
add
add
faddl
add
in
inc
add
test
add
test
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
and
add
add
and
pop
add
add
add
add
add
add
add
loop
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
add
add
xor
xor
bound
xor
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
add
je
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
xor
xor
xor
cmp
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
xor
sub
and
xor
xor
add
add
and
xor
add
add
mov
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
arpl
add
je
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
xor
xor
xor
cmp
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
xor
sub
and
xor
xor
add
add
and
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
cwtl
inc
add
loopne
add
imul
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
add
ret
add
inc
add
add
add
popa
mov
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
cmc
xchg
inc
sar
inc
add
sahf
xor
imul
neg
test
push
jns
dec
push
mov
repnz
call
pop
fdivrs
js
sahf
lcall
and
nop
repz
fwait
jmp
sbb
js
repz
add
mov
adc
cmc
ljmp
sbb
int
dec
xor
inc
cmpsl
dec
jl
and
pop
js
push
cmp
or
jo
xor
push
push
lret
fistl
pop
or
or
es
xchg
xor
mov
and
mov
pop
xchg
xor
dec
cmp
jno
in
imul
les
push
or
inc
and
jns
push
mov
ret
imulb
out
daa
int3
adc
cwtl
rol
es
in
sub
fwait
dec
pop
or
pop
sbb
cmpsb
fldl
mov
aas
push
fmuls
fdivrl
xor
mov
adc
adc
cmpsl
pushf
sub
sub
mov
mov
in
outsl
repz
ljmp
fdivs
xchg
xor
mov
divl
mov
jge
push
mov
pop
enter
or
push
mov
adc
cmc
xchg
aas
sbb
jecxz
xchg
xchg
sub
icebp
sbb
aaa
cmc
jns
ret
xor
and
add
mov
jno
sbbl
push
lods
pop
jb,pt
orl
dec
loop
mov
btcl
stos
call
mov
xchg
jge
adc
mov
repnz
cltd
std
xor
call
data16
lret
loopne
add
or
mov
dec
push
xlat
jle
sahf
cld
out
jmp
inc
ficoms
fdivs
andb
cli
lods
pusha
xor
in
adcb
xlat
loope
mov
addr16
fs
hlt
cld
sbb
inc
add
jno
sbbb
sub
inc
insb
xchg
xchg
add
rclb
mov
jmp
mov
xor
popa
int3
adc
sarb
scas
hlt
push
mov
arpl
pop
push
ret
scas
dec
sbb
sub
cmp
cmp
loop
sar
sahf
addr16
loop
add
mov
mov
outsl
dec
and
dec
cmp
add
cld
pop
stos
scas
popf
iret
cmp
cmova
enter
test
and
add
mov
inc
dec
pop
arpl
xchg
aas
sbb
divl
enter
ret
and
sbbb
rcrl
mov
pop
lea
dec
cmp
mov
pusha
lret
or
jbe
icebp
push
sub
sub
in
mull
jnp
bts
ss
rolb
popf
dec
pop
ds
sbb
jecxz
int
cmpl
and
aaa
jae
out
cmp
ret
fdivl
mov
xchg
das
sbb
out
jmp
jo
stos
mov
outsl
sub
fs
cltd
mov
idiv
or
mov
jmp
jo
repz
or
xor
mov
adc
std
push
int3
inc
xor
push
push
int
or
rcll
xchg
dec
das
mov
cli
test
and
dec
pusha
mov
popf
mov
cmp
mov
shl
push
cmp
jo
icebp
inc
data16
sbb
in
data16
mov
or
add
and
shll
pop
xchg
bound
and
ljmp
cmp
movsb
movq
lret
sub
xchg
xchg
xchg
adc
rcll
jecxz
daa
sarb
adc
sub
push
cmp
jl
adc
cld
inc
add
in
and
ja
sub
push
shr
daa
aam
xor
cmpsb
not
roll
adc
ficoml
xor
pop
xchg
aas
jmp
nop
xor
mov
sbb
xor
push
mov
lock
mov
loopne
jae
hlt
nop
inc
xor
test
loop
subl
pop
xchg
popf
cmp
mov
arpl
lcall
movsb
push
jbe
jge
pop
mov
and
mov
dec
jbe
fs
or
sahf
sbb
mov
negb
rorb
sub
sbb
mov
cmp
fs
pop
jle
aaa
and
push
ficompl
sub
adc
xchg
mov
xchg
push
fidivs
xchg
fsubrl
outsb
scas
stos
insb
pushf
mov
push
xchg
sbb
ss
push
add
insb
mov
push
rcrb
lahf
or
rcll
iret
jecxz
sbb
out
insb
lcall
sub
push
es
std
inc
rcrl
sbb
das
ret
jge
rol
push
out
pop
shll
out
cmpsl
popa
mov
dec
cmc
leave
arpl
xchg
dec
push
adc
ljmp
movsb
repnz
sbb
lock
mov
dec
inc
xor
lcall
fnsave
pop
daa
push
mov
loopne
jmp
lcall
pop
push
push
add
push
dec
mov
cmpsl
bound
aad
lahf
sbb
cmp
das
mov
cmp
je
xchg
fldenv
sub
out
jns
int3
or
sub
stos
orb
cld
inc
inc
jecxz
adc
scas
jecxz
in
rorl
shrl
out
call
aaa
ss
insb
jg
or
sub
xchg
icebp
sbb
mov
popa
hlt
int
mov
scas
int
pushw
sub
shrl
aam
mov
xchg
adc
pop
loopne
aad
mov
imul
das
pushf
cmp
das
sbb
loop
xchg
dec
xchg
and
mulb
cmp
jmp
sarl
jecxz
or
jne
adc
int3
lods
pushf
sbb
mov
xlat
lock
dec
push
xchg
call
popf
stos
add
cmp
inc
xchg
rol
xor
push
rcrb
mov
sub
and
das
sbb
aaa
push
xor
or
popa
inc
or
mov
je
cmp
pop
xchg
and
xchg
xlat
mov
ret
and
dec
int
test
cmp
pop
icebp
stos
cmpb
and
lea
push
or
and
and
cmc
pop
ds
jne
imul
out
sti
test
mov
out
iret
pop
jo
cs
push
push
inc
jnp
aam
ljmp
lods
push
das
imul
mov
xchg
lock
fwait
daa
sti
jp
xchg
test
cmpsb
aas
cmc
xchg
sub
inc
fadd
jns
and
dec
fisubs
push
sbb
aas
inc
scas
sub
movl
mov
mov
lret
loop
adc
movsl
ljmp
mov
adc
cltd
je
jne
jg
stc
fs
test
insl
dec
lret
pop
pop
std
inc
mov
sbb
shl
int3
into
aad
jbe
pop
sub
sbb
popa
daa
fnstenv
in
lret
aad
out
jecxz
cmp
cmc
mov
pop
test
and
jle
lds
pop
pop
push
fisubrl
or
xchg
aas
or
mov
cltd
testb
mov
xchg
pusha
je
loop
mov
mov
mov
xchg
movsb
out
push
fsts
xchg
arpl
js
xor
je
cmc
out
xor
stos
sub
cmc
sti
push
rolb
mov
iret
push
ss
add
xorl
xchg
ret
jno
jle
mov
leave
push
scas
cwtl
das
dec
imul
dec
sub
ss
shl
test
insl
xor
das
std
mov
scas
jns
mov
xor
scas
iret
dec
mov
mov
xor
push
adc
stos
in
mov
push
int
cmp
fldt
push
hlt
jb
or
shll
into
hlt
mov
into
push
xchg
add
adc
arpl
cmp
xchg
cmp
dec
adc
adc
mov
inc
fidivs
mov
leave
cmp
fnstcw
and
or
dec
sbb
jnp
fnstenv
fs
adc
inc
scas
jae
pop
cmc
cli
data16
adc
rcrl
lcall
aaa
add
pop
loopne
sbb
push
out
jae
loope
je
cmp
and
jle
and
dec
sub
pop
lock
imul
hlt
aam
ljmp
ret
mov
xor
dec
ret
dec
adc
js
scas
pop
dec
cmpsl
jecxz
sahf
mov
lcall
loope
out
mov
lods
pop
mulb
jmp
cmpsb
lcall
test
out
cmpsb
adc
sbb
cwtl
outsb
mov
pop
push
movb
ja
cmpsb
sub
out
loope
cmp
mov
dec
adc
outsb
lock
mov
enter
add
jno
and
loopne
pushf
sub
mov
and
dec
pushf
sbb
js
xlat
dec
mov
dec
push
push
jno
jo
lock
arpl
mov
inc
imul
pop
push
mov
or
test
push
cmpsl
sbb
ljmp
stos
inc
push
and
and
mov
pop
pop
mov
dec
dec
dec
pop
and
mov
push
pop
push
sub
cmc
dec
mov
outsb
mov
ficoml
call
out
loop
iret
shlb
adc
sbb
dec
addr16
pop
jno
jl
fmuls
iret
pop
adcl
movsb
dec
int3
out
icebp
ja
pop
ja
in
in
jbe
std
xor
inc
loope
subb
outsl
inc
pop
sub
and
push
test
jecxz
std
xor
daa
aam
cs
outsl
cmpl
jg
add
lods
pusha
popf
in
and
xchg
sub
mov
lret
push
cmp
adc
jbe
jns
push
jecxz
cmp
sub
adc
pop
pop
cs
pop
push
sub
mov
aad
xchg
xchg
jge
enter
mov
pop
dec
cmc
lret
fsub
pop
movsb
sbb
sub
or
mov
aam
cld
xchg
adc
fucomip
scas
into
scas
lea
push
cmp
ds
loopne
incl
mov
and
mov
movsl
es
or
push
out
or
aad
cwtl
mov
imul
xor
dec
aaa
pop
jb
aas
in
pop
pusha
xor
dec
xchg
iret
push
xchg
pop
in
push
or
or
adc
cmp
into
sub
fdivp
cmpl
inc
repnz
lock
out
fsubrs
movb
in
test
mov
loop
pop
out
xchg
xchg
mov
leave
mov
sub
cmp
sub
ds
jmp
pop
push
call
or
jge
xchg
repnz
push
shlb
in
repz
inc
jae
pushf
pop
push
call
outsl
nop
incb
xchg
jle
movsl
sub
or
add
mov
inc
clc
push
or
xor
xchg
or
shlb
scas
dec
jmp
aad
sbb
jge
ja
fwait
int
adc
and
stos
int3
lea
pop
sbb
jge
jae
jmp
adc
push
adc
xchg
out
jecxz
scas
xchg
je
mov
inc
in
sbb
xchg
jno
mov
sbb
in
mov
inc
shll
mov
sti
inc
dec
cmp
mov
repnz
push
xchg
mov
jnp
imul
subl
mov
in
mov
loop
bound
add
outsb
jge
add
inc
jnp
mov
push
push
out
xchg
dec
pop
aas
jns
aaa
ret
push
ja
aam
fldcw
cli
xchg
add
repz
and
sub
mov
or
outsb
mov
shl
cmp
fsub
cmpsb
adc
jo
and
mov
test
das
fiadds
into
aaa
sahf
or
std
pop
mov
sub
xchg
in
rcr
shrl
addr16
inc
sbb
dec
adc
and
adc
test
icebp
out
dec
scas
and
mov
rorl
dec
cltd
ds
fmuls
rolb
js
jmp
jae
sub
sahf
and
testb
xchg
xchg
fidivs
inc
outsb
pop
and
cmp
jle
cltd
ja
xchg
or
std
inc
mov
cli
push
in
int
enter
loop
aas
fcomps
sub
pop
mov
add
mov
cmpl
jg
add
sarb
mov
movsb
push
test
and
cmp
add
sub
test
jg
mov
fstps
das
cs
or
xor
add
je
outsb
push
mov
xchg
loopne
ja
das
add
sub
aam
adc
pop
mov
mov
es
or
mov
decl
in
lcall
dec
mov
add
jb
cmpsb
test
andl
jmp
call
mov
pop
subl
xor
in
xor
pop
cmp
xchg
cmpsb
add
aad
jnp
repnz
or
xlat
cmp
les
sub
cld
orl
je
mov
aam
pop
dec
mov
push
lds
jl
cmp
cmp
jbe
sti
out
push
pusha
xlat
mov
jg
jle
std
xor
fisttps
leave
mov
pushf
xor
mov
pop
mov
mov
movsl
or
lret
xchg
inc
mov
movsb
shl
add
jne
int
cmp
cmp
and
popf
xchg
xchg
mov
xchg
sub
dec
push
fs
or
or
sub
into
cmp
add
mov
fmuls
icebp
add
loopne
xor
push
fldenvs
lret
movsl
test
popa
xchg
mov
rorl
pop
por
mov
faddp
cmp
xor
mov
shr
insb
adc
test
dec
sbb
rcll
add
xor
test
mov
ja
jnp
pop
pop
sbb
xchg
fbstp
xchg
inc
aaa
dec
or
sbb
insl
in
cs
std
das
cmpsb
add
pushf
or
xor
sub
test
flds
cmp
dec
std
or
xchg
push
daa
pop
insl
push
jbe
push
mov
fdivrs
and
jl
cmp
cmp
xor
call
pop
and
cmp
fldt
dec
cmp
outsl
jl
push
repz
mov
or
sti
hlt
fstps
sbb
ret
xchg
mov
add
mov
ret
cltd
add
cmp
into
subb
push
sbb
icebp
or
insb
mov
mov
mov
mov
mov
adc
jp
sbb
shl
push
push
fsub
pushf
push
pop
jecxz
stc
ret
xor
cwtl
add
stos
xor
and
adc
test
mov
mov
push
das
fldenv
mov
dec
aas
xchg
xor
psubsb
sbb
sbb
mov
or
add
ja
mov
adc
call
test
insb
popa
cwtl
jg
mov
jne
lods
adc
daa
cmc
mov
dec
int3
sbb
loope
push
nop
xchg
and
mov
jle
adc
jg
xchg
and
xchg
mov
mov
jle
lahf
push
xorl
jne
or
js
sbb
aad
mov
divl
fsubs
addr16
mov
or
test
xor
push
dec
xlat
dec
sbb
fsts
inc
ds
push
push
sub
pop
inc
jnp
cmpsb
push
es
dec
xchg
cmpsb
dec
daa
fdivrl
xor
sub
mov
cmpsl
cld
inc
push
mov
inc
adc
in
fsubr
icebp
pop
shrb
cwtl
pop
inc
das
or
cmp
insl
test
inc
jmp
cmc
ret
mov
insl
pop
adc
rcl
inc
or
icebp
rcrb
ret
popf
and
mov
xor
jmp
xchg
inc
cltd
xlat
popa
adc
cmpsb
test
js
outsb
inc
fsubl
outsl
loope
lea
and
mov
mov
xor
jb
push
xchg
daa
jl
mov
cld
repz
sbb
insl
sub
sbb
inc
mov
add
mov
ficoms
faddl
cmp
gs
popa
push
pop
xor
mov
loop
xor
dec
rclb
rolb
sbb
jno
jmp
ficompl
adc
xchg
and
pop
rcrb
shlb
cmp
xlat
jne
dec
sbb
inc
xchg
jmp
fbstp
add
push
icebp
xchg
sub
in
test
xchg
xchg
or
ljmp
daa
cmpsl
xor
mov
jl
icebp
addl
je
ljmp
dec
mov
pause
icebp
cmp
and
idivl
mov
scas
pusha
xor
inc
fildl
and
dec
mov
ljmp
test
adc
sti
mov
sub
add
in
jae
insb
jecxz
pop
test
fimuls
ss
cmp
push
lret
lock
aam
mov
pop
icebp
fiadds
lret
mov
popa
cli
jmp
inc
aad
outsl
cmp
aad
aad
sub
rcl
popf
daa
sbb
sub
push
je
lds
cltd
mov
sbb
ror
lret
clc
jge
scas
gs
push
pop
xor
bound
mov
mov
or
and
jae
dec
mov
cld
jle
mov
roll
xchg
ja
xchg
push
bound
loopne
outsl
fwait
pushf
and
dec
lret
jecxz
repnz
mov
or
push
out
add
cmp
add
ret
sbb
or
sub
jb
pop
push
scas
cmpsb
aas
cmc
fst
fprem
insl
mov
movsb
fists
nop
in
xchg
lcall
cmc
iret
or
test
push
mov
ret
lahf
loop
jp
sbb
mov
mov
lds
jae
sbb
xor
insb
inc
imul
sub
into
mov
sti
dec
test
ja
fstpl
std
dec
cmp
daa
iret
iret
push
jl
sub
adc
adc
test
mov
cmp
clc
pop
mov
insl
jmp
cmc
mov
out
fsub
js
dec
pop
xchg
hlt
js
jge
adc
imul
arpl
mov
aaa
xchg
fwait
and
mov
xchg
nop
jbe
out
frstor
in
xchg
mov
js
jmp
inc
pop
add
mov
sub
xchg
push
dec
out
aam
out
inc
or
pop
mov
insb
leave
pop
jecxz
jbe
push
mov
mov
data16
dec
or
gs
mov
in
xchg
jae
insb
cmc
mov
cmp
jl
test
mov
cwtl
lds
adc
loopne
push
mov
in
jmp
and
incb
push
sbb
sbb
mov
xor
les
xchg
pop
add
std
ret
push
std
cmp
hlt
lahf
ret
lds
inc
daa
in
push
adcl
addr16
sbb
mov
sbb
popf
jae
ja
rorb
or
aas
cli
dec
in
jbe
jno
mov
push
or
xchg
pop
out
ss
or
notl
pop
mov
imul
movsl
push
dec
ret
cmp
fwait
es
and
stos
cmp
push
aam
add
scas
es
iret
pusha
ljmp
jns
jo
xlat
inc
inc
or
push
rolb
movsl
and
sbb
inc
mov
jo
pop
mov
mov
lods
adcb
js
and
es
je
xor
mov
stos
enter
pop
cmp
push
outsl
mov
jecxz
pop
xor
loopne
jl
cmp
add
int3
jge
je
fwait
xchg
test
fmul
inc
std
clc
enter
and
sub
adc
movsl
sbb
xchg
popa
rcl
hlt
and
stc
inc
test
lahf
popa
sub
aad
repz
roll
mov
lods
in
les
cmp
sbb
rorl
fbstp
and
add
lret
xorl
aad
hlt
fdivl
xor
bound
pop
aas
mov
inc
push
ret
shlb
push
add
mov
cmp
test
jbe
xchg
pop
inc
cmp
mov
mov
add
neg
jl
mov
cmp
jmp
lcall
pop
test
inc
ljmp
jmp
sbb
negb
mov
mov
push
and
ds
jle
leave
cltd
push
push
fstpl
xor
sahf
ds
mov
out
cmc
or
xchg
ret
clc
xchg
mov
push
inc
xor
test
sub
or
adc
mov
test
push
xchg
into
mov
cmp
jns
aam
sub
scas
jo
cmpsb
jg
xor
jbe
pushf
sub
sahf
mov
in
dec
dec
stc
pop
popf
add
sub
out
jge
mov
push
repz
fs
push
adc
test
mov
adc
xlat
mov
subb
ja
sbb
xchg
outsl
pop
inc
cwtl
xchg
ret
mov
mov
inc
xor
loop
fidivrs
cs
push
adc
xorb
rsm
mov
cli
inc
outsl
sub
test
es
daa
sbb
xor
or
addl
cmp
testb
push
jge
mov
push
cli
xlat
jns
ljmp
inc
inc
push
stc
ja
sti
pop
insl
mov
jns
leave
push
mov
ja
pop
popa
clc
or
inc
cmpsl
insl
out
hlt
xor
lret
pop
xchg
movsl
scas
je
lock
sub
test
call
sub
add
in
in
gs
ss
cmp
hlt
push
or
out
inc
jnp
push
test
or
push
les
sub
xchg
pop
mov
cmp
icebp
sbb
and
aaa
in
cmp
mov
rorb
ret
and
aad
or
ja
jmp
jmp
jge
dec
cmc
arpl
imul
arpl
enter
int3
sub
xchg
ficomps
xor
ljmp
xor
xchg
and
lods
xlat
xchg
pop
and
pop
in
and
or
fnstcw
in
mov
xchg
sbb
mov
sbb
dec
mov
imul
inc
cmp
fnstcw
pusha
lods
mov
insb
jp
ljmp
jg
sbb
xchg
stos
adc
sbb
stos
and
test
and
je
dec
and
lds
daa
xchg
xor
or
popa
jno
push
push
mov
jp
clc
push
jp
or
xor
iret
fnsave
repnz
aaa
and
lret
adc
ret
into
inc
in
das
dec
mov
cmc
cld
fidivl
dec
cmp
repnz
ret
sbb
lret
lret
test
aas
inc
mov
xor
stos
std
inc
ds
jge
ja
mov
addr16
lcall
dec
sub
xchg
call
repnz
lea
sbb
ret
adc
outsl
clc
addl
cltd
inc
js
mov
push
pop
inc
sub
iret
pop
push
adc
cmpl
mov
aam
jno
test
inc
cs
dec
lret
push
dec
xorl
mov
xchg
rorl
inc
jmp
test
int3
cmp
lods
lcall
mov
jns
and
jmp
mov
outsl
cmpl
xor
dec
out
ja
jmp
push
rorl
xchg
and
cmp
test
push
fisttpl
cwtl
lods
testl
adc
mov
data16
repnz
adc
push
add
shlb
fs
movsb
jno
aam
jle
xlat
and
inc
jne
sti
mov
and
scas
and
add
add
dec
xchg
outsb
pop
pop
cmp
xchg
add
aas
mov
iret
sub
aam
jge
js
cmp
push
and
enter
and
cmpsb
add
test
je
push
icebp
fwait
cmc
cmpsb
ret
clc
and
cmpb
ret
jg
ds
lret
dec
das
push
daa
rorb
cld
idivb
jnp
and
pop
out
test
outsb
mov
mov
ds
sbb
popl
mov
outsl
sub
lahf
pop
call
push
leave
pop
in
int3
jne
dec
and
and
ficoms
jo
mov
mov
cmp
sub
dec
pop
test
lcall
mov
mov
adcb
xchg
adc
sub
push
cmp
sub
cmpb
inc
test
ror
xchg
pop
jbe
lds
dec
ss
or
sub
pop
jecxz
jmp
jno
pushf
sub
sbb
in
rcrb
ret
testl
dec
xchg
dec
push
push
jo
lea
sbb
cmp
mov
jge
inc
fmulp
fcmovb
scas
adc
dec
or
pop
sbb
aas
mov
jb
scas
or
ja
je
leave
das
and
mov
repz
pushf
jne
out
leave
xor
and
sbb
jecxz
in
shlb
pushf
rcrl
ficoms
xchg
inc
inc
mov
es
js
push
outsl
popa
push
loopne
iret
ds
daa
mov
lods
mov
sarl
sbb
rclb
sahf
mov
jmp
fldlg2
pop
jbe
mov
jbe
orl
pop
jp
inc
mov
outsb
je
js
add
stos
lret
fidivrl
dec
xchg
ja
mov
mov
sbbb
mov
push
xchg
push
out
inc
clc
xchg
adc
cs
subb
loop
and
cli
xchg
test
insl
dec
adcl
and
push
jnp
adc
popf
rcl
mov
mov
pushl
repnz
add
mov
inc
cmp
dec
lock
push
jg
pop
popf
cld
mov
or
lds
inc
decb
xor
and
mov
int
xor
jbe
inc
xchg
out
cltd
into
jge
insl
xchg
fwait
daa
ss
repnz
fisttps
xchg
mov
sub
dec
out
jb
sub
aam
fldenv
movsb
adc
mov
cmp
nop
push
mov
lods
data16
adc
fdivrl
inc
ja
jp
iret
aas
and
cmp
int3
out
dec
adc
in
cmp
xlat
lock
or
or
mov
cmp
push
repz
gs
scas
adc
enter
pop
sti
ds
mov
lahf
loopne
jle
xor
mov
push
push
xchg
loope
sar
jp
mov
imul
push
cmpl
orb
idivl
mov
fnstcw
repz
jnp
inc
xor
sbb
jb
movsl
cmc
ficompl
mov
push
mov
andb
cmc
ficoml
es
push
adc
out
xor
rcll
push
out
xchg
outsl
out
and
das
pop
lea
mov
sub
ror
jl
cmp
sbb
mov
inc
pop
add
sub
repz
and
loop
mov
repz
or
jge
inc
push
jo
mov
adc
lahf
pop
cmc
sbb
or
sub
lret
gs
pop
fxch
or
cmp
fsubrs
lcall
les
sbb
xor
outsl
ret
mov
jae
xchg
mov
fdivs
in
int3
jge
sti
and
jmp
std
jnp
cmp
and
outsb
xchg
jle
adc
repz
aam
out
push
sub
pop
pushl
sti
jnp
add
ja
xchg
imul
adc
mov
stos
rcrl
sahf
pop
xchg
or
cltd
ss
pop
into
push
rcrl
sbb
sbb
pushf
adc
mov
jl
add
sbb
and
fisubl
cmp
xchg
xchg
dec
test
dec
jnp
out
cld
cwtl
stos
out
aam
scas
or
rcrb
lcall
in
cmp
or
inc
sbb
mov
xor
es
sub
fimull
jg
mov
arpl
inc
dec
cli
ret
rorl
and
sub
pop
xchg
xor
sbb
cmp
lret
das
rorl
or
sbb
insb
leave
xchg
rorl
mov
roll
push
jo
dec
inc
dec
aam
push
test
jae
mov
xor
mov
cmp
jae
aad
popf
mov
repnz
push
mov
add
stos
aaa
loop
faddl
xchg
adc
pop
in
pop
ficompl
loop
pop
xchg
iret
cmpsl
mull
mov
push
cwtl
test
pop
ret
mov
out
cmp
push
push
push
cmp
aad
scas
jno
in
pop
sbb
mov
pop
xlat
das
xchg
jle
push
loopne
mov
push
mov
sub
xchg
sub
fmuls
xchg
mov
lds
cmp
cmp
jp
js
lea
lock
daa
mov
push
popf
jp
pusha
dec
push
loop
aam
out
in
push
or
out
xchg
andb
cmp
mov
icebp
cmp
adc
add
and
sbb
mov
mov
push
push
imul
inc
mov
loopne
sar
dec
sbb
shll
clc
shll
fldl
push
mov
pop
push
sbb
jmp
aaa
xor
enter
mov
cmp
ljmp
pushf
cwtl
cmp
push
jecxz
insb
pushf
inc
push
sbb
inc
mov
adc
sbb
sbb
inc
xchg
mov
test
das
sub
cwtl
inc
pop
xor
aam
test
rcrb
adc
cld
jmp
icebp
jne
pop
in
rorl
xchg
pop
pop
dec
sbbl
fcmovb
jp
push
add
pop
or
xchg
scas
xor
addr16
popa
sbb
shrb
dec
sub
icebp
loopne
mov
xor
outsl
xor
xchg
adc
inc
sbb
push
fistl
jmp
and
andl
push
pushl
mov
cld
and
fmull
decl
or
icebp
jbe
mov
gs
xlat
inc
jg
daa
mov
cmp
adc
fcoml
scas
imul
mov
enter
fildll
lahf
dec
mov
mov
sub
stc
dec
mov
sub
lcall
fucomi
mov
test
scas
shll
ja
aam
dec
jb
sti
cmc
jno
lea
add
push
outsl
inc
out
mov
sarb
xlat
push
pop
out
pushf
ljmp
lret
jle
mov
lret
sahf
or
inc
inc
xor
pop
cs
push
inc
mov
pop
test
inc
lock
xor
pop
lock
cmp
cmp
out
pop
jl
mov
jo
insl
push
sub
es
out
pop
movsb
fbstp
dec
xorl
mov
add
cld
fildl
jo
fsts
mov
add
xlat
daa
testb
test
xor
popf
jl
mov
xchg
insl
adc
outsb
or
in
jle
ds
daa
xchg
adc
xchg
fwait
jle
ret
adc
in
push
dec
in
and
shll
shll
lock
xor
xor
ljmp
into
hlt
mov
stos
jb
inc
movl
xchg
or
lock
and
dec
push
movq
or
pop
outsb
or
jns
sub
in
add
cwtl
aaa
sub
mov
sbb
mov
sbb
rcll
mov
xchg
lret
sbbl
dec
out
inc
xor
fs
and
stc
mov
outsl
push
cmp
mov
mov
push
xor
sub
movsl
inc
ljmp
rolb
and
inc
ljmp
mov
sbb
jns
add
pop
dec
cli
test
js
mov
push
gs
dec
xchg
jmp
add
push
fcmovnbe
enter
pop
adc
lods
jmp
dec
daa
cwtl
daa
loope
adc
jae
cmp
mov
mov
sbb
sub
or
or
out
inc
loope
mov
cmp
ds
push
push
inc
loope
mov
add
sub
enter
sub
pop
into
int
add
fs
sub
in
mov
mov
movsl
sbb
js
in
cmc
test
aad
lods
pop
mov
lcall
push
pop
insb
cs
aas
jns
cwtl
pusha
and
fildl
mov
jnp
fmuls
inc
in
mov
pop
loopne
adc
mov
jecxz
sbb
imul
loope
and
orl
dec
mov
inc
fwait
lock
dec
adc
lcall
popf
mov
fcom
mov
pop
or
inc
jge
jl
cmpsl
mov
jle
imul
and
xor
pushf
push
sub
mov
adc
jge
ficoms
mov
enter
xor
rolb
scas
das
mov
xchg
xchg
mov
data16
sbb
in
mov
add
das
aas
add
cwtl
lock
mov
fldcw
lods
mov
pusha
ss
into
lods
push
and
mov
cli
subb
iret
jmp
and
ss
dec
shlb
cmp
lea
decl
adc
pop
movsb
mov
dec
add
mov
fs
cmp
lods
or
lret
xchg
js
adc
xchg
and
mov
in
pop
jnp
sbb
add
bound
imul
insl
add
push
add
fnsave
testl
and
arpl
pop
in
pushf
cmp
aaa
in
outsl
rorl
xchg
stc
int
dec
shl
ds
or
fs
insl
jnp
test
cmpsb
mov
aaa
or
movsb
xor
and
jae
jns
xchg
hlt
cld
inc
aas
add
lret
xor
dec
scas
scas
sub
sub
dec
stos
das
cs
jg
shlb
aas
mov
pop
xor
push
and
scas
push
inc
push
ret
lret
xchg
inc
pop
add
jnp
sbb
xchg
pushf
xchg
mov
pushf
ret
mov
adc
insl
pop
imul
ret
mov
cmp
cs
mov
bound
xlat
es
dec
adc
push
aad
mov
mov
lret
xchg
sub
popa
testb
lods
outsb
aam
mov
xor
fs
stos
ljmp
ror
xchg
fnstsw
mov
pusha
rorl
aad
push
int
mov
pushf
adc
das
or
mov
ds
dec
loopne
cmp
and
pop
mov
and
mov
xor
pop
mov
add
pusha
push
stos
cmp
lods
imul
movsl
aam
xlat
push
adc
push
mov
cld
sbb
inc
jo
arpl
cltd
mov
adc
sbb
gs
cmp
xchg
bound
dec
outsl
out
pusha
scas
lods
sub
ficomps
repnz
out
inc
cmp
ja
cmp
pop
dec
ds
cld
jo
jl
pop
fistps
and
negb
mov
add
je
inc
jp
stos
test
pop
pop
add
xchg
xlat
jle
and
adc
jecxz
out
mov
and
and
cmp
fs
mov
sub
mov
pop
lahf
je
fadds
std
ja
adc
xchg
xorb
js
cwtl
pop
xor
push
sbb
pop
xor
rorl
adc
add
cmp
sahf
xchg
jle
add
fidivrs
pushf
jmp
test
mov
mov
or
add
aaa
xchg
sbb
mov
inc
out
inc
sub
cmp
or
sti
imul
fmull
sahf
bound
inc
das
or
pop
lods
sar
mov
mov
loopne
dec
cld
cmp
loop
xor
ret
jns
cmp
add
rcr
pushf
test
scas
pop
inc
sub
clc
or
stc
adc
mov
in
inc
lcall
test
cmp
dec
test
pop
stmxcsr
push
scas
call
xor
push
nop
adc
and
add
fs
out
pop
dec
adc
dec
lods
loopne
xchg
fcomi
push
cmc
dec
add
adc
lret
sub
or
aam
jge
xor
js
pop
jb
and
add
mov
adc
popf
sub
pushf
add
cmc
and
inc
fisttpll
and
test
out
xor
orl
mov
mov
inc
xor
jecxz
xor
rcll
xchg
mov
jl
jne
jmp
pop
sbbl
js
test
pop
aam
daa
mov
and
ret
out
add
cltd
mov
addr16
popf
gs
lock
sub
mov
bound
xor
call
jne
testl
dec
mov
xchg
mov
sbb
loope
or
dec
add
jecxz
mulb
mov
stc
fcmovnbe
addr16
or
pop
imul
aaa
sub
inc
pop
sub
jns
shlb
lods
jae
icebp
fidivs
dec
lods
sarl
mov
mov
pop
xor
lea
cmp
stos
inc
aam
in
or
scas
lods
jns
push
.byte
ss
push
inc
outsl
insl
add
add
or
add
and
add
lods
add
addb
add
add
add
add
add
add
add
inc
add
addb
insb
add
addb
add
add
add
add
add
add
pop
add
add
xor
add
add
in
add
add
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
pushf
add
add
xor
add
add
in
add
test
xor
outsl
insl
add
add
add
add
les
add
test
xor
outsl
insl
add
add
add
add
faddl
add
in
inc
add
test
add
test
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
and
add
add
and
pop
add
add
add
add
add
add
add
loop
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
add
add
xor
xor
bound
xor
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
add
je
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
xor
xor
xor
cmp
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
xor
sub
and
xor
xor
add
add
and
xor
add
add
mov
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
arpl
add
je
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
xor
xor
xor
cmp
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
xor
sub
and
xor
xor
add
add
and
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
cwtl
inc
add
loopne
add
imul
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
add
ret
add
inc
add
add
add
popa
mov
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
cmc
xchg
inc
sar
inc
add
sahf
xor
imul
neg
test
push
jns
dec
push
mov
repnz
call
pop
fdivrs
js
sahf
lcall
and
nop
repz
fwait
jmp
sbb
js
repz
add
mov
adc
cmc
ljmp
sbb
int
dec
xor
inc
cmpsl
dec
jl
and
pop
js
push
cmp
or
jo
xor
push
push
lret
fistl
pop
or
or
es
xchg
xor
mov
and
mov
pop
xchg
xor
dec
cmp
jno
in
imul
les
push
or
inc
and
jns
push
mov
ret
imulb
out
daa
int3
adc
cwtl
rol
es
in
sub
fwait
dec
pop
or
pop
sbb
cmpsb
fldl
mov
aas
push
fmuls
fdivrl
xor
mov
adc
adc
cmpsl
pushf
sub
sub
mov
mov
in
outsl
repz
ljmp
fdivs
xchg
xor
mov
divl
mov
jge
push
mov
pop
enter
or
push
mov
adc
cmc
xchg
aas
sbb
jecxz
xchg
xchg
sub
icebp
sbb
aaa
cmc
jns
ret
xor
and
add
mov
jno
sbbl
push
lods
pop
jb,pt
orl
dec
loop
mov
btcl
stos
call
mov
xchg
jge
adc
mov
repnz
cltd
std
xor
call
data16
lret
loopne
add
or
mov
dec
push
xlat
jle
sahf
cld
out
jmp
inc
ficoms
fdivs
andb
cli
lods
pusha
xor
in
adcb
xlat
loope
mov
addr16
fs
hlt
cld
sbb
inc
add
jno
sbbb
sub
inc
insb
xchg
xchg
add
rclb
mov
jmp
mov
xor
popa
int3
adc
sarb
scas
hlt
push
mov
arpl
pop
push
ret
scas
dec
sbb
sub
cmp
cmp
loop
sar
sahf
addr16
loop
add
mov
mov
outsl
dec
and
dec
cmp
add
cld
pop
stos
scas
popf
iret
cmp
cmova
enter
test
and
add
mov
inc
dec
pop
arpl
xchg
aas
sbb
divl
enter
ret
and
sbbb
rcrl
mov
pop
lea
dec
cmp
mov
pusha
lret
or
jbe
icebp
push
sub
sub
in
mull
jnp
bts
ss
rolb
popf
dec
pop
ds
sbb
jecxz
int
cmpl
and
aaa
jae
out
cmp
ret
fdivl
mov
xchg
das
sbb
out
jmp
jo
stos
mov
outsl
sub
fs
cltd
mov
idiv
or
mov
jmp
jo
repz
or
xor
mov
adc
std
push
int3
inc
xor
push
push
int
or
rcll
xchg
dec
das
mov
cli
test
and
dec
pusha
mov
popf
mov
cmp
mov
shl
push
cmp
jo
icebp
inc
data16
sbb
in
data16
mov
or
add
and
shll
pop
xchg
bound
and
ljmp
cmp
movsb
movq
lret
sub
xchg
xchg
xchg
adc
rcll
jecxz
daa
sarb
adc
sub
push
cmp
jl
adc
cld
inc
add
in
and
ja
sub
push
shr
daa
aam
xor
cmpsb
not
roll
adc
ficoml
xor
pop
xchg
aas
jmp
nop
xor
mov
sbb
xor
push
mov
lock
mov
loopne
jae
hlt
nop
inc
xor
test
loop
subl
pop
xchg
popf
cmp
mov
arpl
lcall
movsb
push
jbe
jge
pop
mov
and
mov
dec
jbe
fs
or
sahf
sbb
mov
negb
rorb
sub
sbb
mov
cmp
fs
pop
jle
aaa
and
push
ficompl
sub
adc
xchg
mov
xchg
push
fidivs
xchg
fsubrl
outsb
scas
stos
insb
pushf
mov
push
xchg
sbb
ss
push
add
insb
mov
push
rcrb
lahf
or
rcll
iret
jecxz
sbb
out
insb
lcall
sub
push
es
std
inc
rcrl
sbb
das
ret
jge
rol
push
out
pop
shll
out
cmpsl
popa
mov
dec
cmc
leave
arpl
xchg
dec
push
adc
ljmp
movsb
repnz
sbb
lock
mov
dec
inc
xor
lcall
fnsave
pop
daa
push
mov
loopne
jmp
lcall
pop
push
push
add
push
dec
mov
cmpsl
bound
aad
lahf
sbb
cmp
das
mov
cmp
je
xchg
fldenv
sub
out
jns
int3
or
sub
stos
orb
cld
inc
inc
jecxz
adc
scas
jecxz
in
rorl
shrl
out
call
aaa
ss
insb
jg
or
sub
xchg
icebp
sbb
mov
popa
hlt
int
mov
scas
int
pushw
sub
shrl
aam
mov
xchg
adc
pop
loopne
aad
mov
imul
das
pushf
cmp
das
sbb
loop
xchg
dec
xchg
and
mulb
cmp
jmp
sarl
jecxz
or
jne
adc
int3
lods
pushf
sbb
mov
xlat
lock
dec
push
xchg
call
popf
stos
add
cmp
inc
xchg
rol
xor
push
rcrb
mov
sub
and
das
sbb
aaa
push
xor
or
popa
inc
or
mov
je
cmp
pop
xchg
and
xchg
xlat
mov
ret
and
dec
int
test
cmp
pop
icebp
stos
cmpb
and
lea
push
or
and
and
cmc
pop
ds
jne
imul
out
sti
test
mov
out
iret
pop
jo
cs
push
push
inc
jnp
aam
ljmp
lods
push
das
imul
mov
xchg
lock
fwait
daa
sti
jp
xchg
test
cmpsb
aas
cmc
xchg
sub
inc
fadd
jns
and
dec
fisubs
push
sbb
aas
inc
scas
sub
movl
mov
mov
lret
loop
adc
movsl
ljmp
mov
adc
cltd
je
jne
jg
stc
fs
test
insl
dec
lret
pop
pop
std
inc
mov
sbb
shl
int3
into
aad
jbe
pop
sub
sbb
popa
daa
fnstenv
in
lret
aad
out
jecxz
cmp
cmc
mov
pop
test
and
jle
lds
pop
pop
push
fisubrl
or
xchg
aas
or
mov
cltd
testb
mov
xchg
pusha
je
loop
mov
mov
mov
xchg
movsb
out
push
fsts
xchg
arpl
js
xor
je
cmc
out
xor
stos
sub
cmc
sti
push
rolb
mov
iret
push
ss
add
xorl
xchg
ret
jno
jle
mov
leave
push
scas
cwtl
das
dec
imul
dec
sub
ss
shl
test
insl
xor
das
std
mov
scas
jns
mov
xor
scas
iret
dec
mov
mov
xor
push
adc
stos
in
mov
push
int
cmp
fldt
push
hlt
jb
or
shll
into
hlt
mov
into
push
xchg
add
adc
arpl
cmp
xchg
cmp
dec
adc
adc
mov
inc
fidivs
mov
leave
cmp
fnstcw
and
or
dec
sbb
jnp
fnstenv
fs
adc
inc
scas
jae
pop
cmc
cli
data16
adc
rcrl
lcall
aaa
add
pop
loopne
sbb
push
out
jae
loope
je
cmp
and
jle
and
dec
sub
pop
lock
imul
hlt
aam
ljmp
ret
mov
xor
dec
ret
dec
adc
js
scas
pop
dec
cmpsl
jecxz
sahf
mov
lcall
loope
out
mov
lods
pop
mulb
jmp
cmpsb
lcall
test
out
cmpsb
adc
sbb
cwtl
outsb
mov
pop
push
movb
ja
cmpsb
sub
out
loope
cmp
mov
dec
adc
outsb
lock
mov
enter
add
jno
and
loopne
pushf
sub
mov
and
dec
pushf
sbb
js
xlat
dec
mov
dec
push
push
jno
jo
lock
arpl
mov
inc
imul
pop
push
mov
or
test
push
cmpsl
sbb
ljmp
stos
inc
push
and
and
mov
pop
pop
mov
dec
dec
dec
pop
and
mov
push
pop
push
sub
cmc
dec
mov
outsb
mov
ficoml
call
out
loop
iret
shlb
adc
sbb
dec
addr16
pop
jno
jl
fmuls
iret
pop
adcl
movsb
dec
int3
out
icebp
ja
pop
ja
in
in
jbe
std
.byte
icebp
inc
outsl
insl
add
add
or
add
and
add
lods
add
addb
add
add
add
add
add
add
add
inc
add
addb
insb
add
addb
add
add
add
add
add
add
pop
add
add
xor
add
add
in
add
add
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
pushf
add
add
xor
add
add
in
add
test
xor
outsl
insl
add
add
add
add
les
add
test
xor
outsl
insl
add
add
add
add
faddl
add
in
inc
add
test
add
test
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
and
add
add
and
pop
add
add
add
add
add
add
add
loop
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
add
add
xor
xor
bound
xor
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
add
je
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
xor
xor
xor
cmp
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
xor
sub
and
xor
xor
add
add
and
xor
add
add
mov
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
arpl
add
je
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
xor
xor
xor
cmp
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
xor
sub
and
xor
xor
add
add
and
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
cwtl
inc
add
loopne
add
imul
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
add
ret
add
inc
add
add
add
popa
mov
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
cmc
xchg
inc
sar
inc
add
sahf
xor
imul
neg
test
push
jns
dec
push
mov
repnz
call
pop
fdivrs
js
sahf
lcall
and
nop
repz
fwait
jmp
sbb
js
repz
add
mov
adc
cmc
ljmp
sbb
int
dec
xor
inc
cmpsl
dec
jl
and
pop
js
push
cmp
or
jo
xor
push
push
lret
fistl
pop
or
or
es
xchg
xor
mov
and
mov
pop
xchg
xor
dec
cmp
jno
in
imul
les
push
or
inc
and
jns
push
mov
ret
imulb
out
daa
int3
adc
cwtl
rol
es
in
sub
fwait
dec
pop
or
pop
sbb
cmpsb
fldl
mov
aas
push
fmuls
fdivrl
xor
mov
adc
adc
cmpsl
pushf
sub
sub
mov
mov
in
outsl
repz
ljmp
fdivs
xchg
xor
mov
divl
mov
jge
push
mov
pop
enter
or
push
mov
adc
cmc
xchg
aas
sbb
jecxz
xchg
xchg
sub
icebp
sbb
aaa
cmc
jns
ret
xor
and
add
mov
jno
sbbl
push
lods
pop
jb,pt
orl
dec
loop
mov
btcl
stos
call
mov
xchg
jge
adc
mov
repnz
cltd
std
xor
call
data16
lret
loopne
add
or
mov
dec
push
xlat
jle
sahf
cld
out
jmp
inc
ficoms
fdivs
andb
cli
lods
pusha
xor
in
adcb
xlat
loope
mov
addr16
fs
hlt
cld
sbb
inc
add
jno
sbbb
sub
inc
insb
xchg
xchg
add
rclb
mov
jmp
mov
xor
popa
int3
adc
sarb
scas
hlt
push
mov
arpl
pop
push
ret
scas
dec
sbb
sub
cmp
cmp
loop
sar
sahf
addr16
loop
add
mov
mov
outsl
dec
and
dec
cmp
add
cld
pop
stos
scas
popf
iret
cmp
cmova
enter
test
and
add
mov
inc
dec
pop
arpl
xchg
aas
sbb
divl
enter
ret
and
sbbb
rcrl
mov
pop
lea
dec
cmp
mov
pusha
lret
or
jbe
icebp
push
sub
sub
in
mull
jnp
bts
ss
rolb
popf
dec
pop
ds
sbb
jecxz
int
cmpl
and
aaa
jae
out
cmp
ret
fdivl
mov
xchg
das
sbb
out
jmp
jo
stos
mov
outsl
sub
fs
cltd
mov
idiv
or
mov
jmp
jo
repz
or
xor
mov
adc
std
push
int3
inc
xor
push
push
int
or
rcll
xchg
dec
das
mov
cli
test
and
dec
pusha
mov
popf
mov
cmp
mov
shl
push
cmp
jo
icebp
inc
data16
sbb
in
data16
mov
or
add
and
shll
pop
xchg
bound
and
ljmp
cmp
movsb
movq
lret
sub
xchg
xchg
xchg
adc
rcll
jecxz
daa
sarb
adc
sub
push
cmp
jl
adc
cld
inc
add
in
and
ja
sub
push
shr
daa
aam
xor
cmpsb
not
roll
adc
ficoml
xor
pop
xchg
aas
jmp
nop
xor
mov
sbb
xor
push
mov
lock
mov
loopne
jae
hlt
nop
inc
xor
test
loop
subl
pop
xchg
popf
cmp
mov
arpl
lcall
movsb
push
jbe
jge
pop
mov
and
mov
dec
jbe
fs
or
sahf
sbb
mov
negb
rorb
sub
sbb
mov
cmp
fs
pop
jle
aaa
and
push
ficompl
sub
adc
xchg
mov
xchg
push
fidivs
xchg
fsubrl
outsb
scas
stos
insb
pushf
mov
push
xchg
sbb
ss
push
add
insb
mov
push
rcrb
lahf
or
rcll
iret
jecxz
sbb
out
insb
lcall
sub
push
es
std
inc
rcrl
sbb
das
ret
jge
rol
push
out
pop
shll
out
cmpsl
popa
mov
dec
cmc
leave
arpl
xchg
dec
push
adc
ljmp
movsb
repnz
sbb
lock
mov
dec
inc
xor
lcall
fnsave
pop
daa
push
mov
loopne
jmp
lcall
pop
push
push
add
push
dec
mov
cmpsl
bound
aad
lahf
sbb
cmp
das
mov
cmp
je
xchg
fldenv
sub
out
jns
int3
or
sub
stos
orb
cld
inc
inc
jecxz
adc
scas
jecxz
in
rorl
shrl
out
call
aaa
ss
insb
jg
or
sub
xchg
icebp
sbb
mov
popa
hlt
int
mov
scas
int
pushw
sub
shrl
aam
mov
xchg
adc
pop
loopne
aad
mov
imul
das
pushf
cmp
das
sbb
loop
xchg
dec
xchg
and
mulb
cmp
jmp
sarl
jecxz
or
jne
adc
int3
lods
pushf
sbb
mov
xlat
lock
dec
push
xchg
call
popf
stos
add
cmp
inc
xchg
rol
xor
push
rcrb
mov
sub
and
das
sbb
aaa
push
xor
or
popa
inc
or
mov
je
cmp
pop
xchg
and
xchg
xlat
mov
ret
and
dec
int
test
cmp
pop
icebp
stos
cmpb
and
lea
push
or
and
and
cmc
pop
ds
jne
imul
out
sti
test
mov
out
iret
pop
jo
cs
push
push
inc
jnp
aam
ljmp
lods
push
das
imul
mov
xchg
lock
fwait
daa
sti
jp
xchg
test
cmpsb
aas
cmc
xchg
sub
inc
fadd
jns
and
dec
fisubs
push
sbb
aas
inc
scas
sub
movl
mov
mov
lret
loop
adc
movsl
ljmp
mov
adc
cltd
je
jne
jg
stc
fs
test
insl
dec
lret
pop
pop
std
inc
mov
sbb
shl
int3
into
aad
jbe
pop
sub
sbb
popa
daa
fnstenv
in
lret
aad
out
jecxz
cmp
cmc
mov
pop
test
and
jle
lds
pop
pop
push
fisubrl
or
xchg
aas
or
mov
cltd
testb
mov
xchg
pusha
je
loop
mov
mov
mov
xchg
movsb
out
push
fsts
xchg
arpl
js
xor
je
cmc
out
xor
stos
sub
cmc
sti
push
rolb
mov
iret
push
ss
add
xorl
xchg
ret
jno
jle
mov
leave
push
scas
cwtl
das
dec
imul
dec
sub
ss
shl
test
insl
xor
das
std
mov
scas
jns
mov
xor
scas
iret
dec
mov
mov
xor
push
adc
stos
in
mov
push
int
cmp
fldt
push
hlt
jb
or
shll
into
hlt
mov
into
push
xchg
add
adc
arpl
cmp
xchg
cmp
dec
adc
adc
mov
inc
fidivs
mov
leave
cmp
fnstcw
and
or
dec
sbb
jnp
fnstenv
fs
adc
inc
scas
jae
pop
cmc
cli
data16
adc
rcrl
lcall
aaa
add
pop
loopne
sbb
push
out
jae
loope
je
cmp
and
jle
and
dec
sub
pop
lock
imul
hlt
aam
ljmp
ret
mov
xor
dec
ret
dec
adc
js
scas
pop
dec
cmpsl
jecxz
sahf
mov
lcall
loope
out
mov
lods
pop
mulb
jmp
cmpsb
lcall
test
out
cmpsb
adc
sbb
cwtl
outsb
mov
pop
push
movb
ja
cmpsb
sub
out
loope
cmp
mov
dec
adc
outsb
lock
mov
enter
add
jno
and
loopne
pushf
sub
mov
and
dec
pushf
sbb
js
xlat
dec
mov
dec
push
push
jno
jo
lock
arpl
mov
inc
imul
pop
push
mov
or
test
push
cmpsl
sbb
ljmp
stos
inc
push
and
and
mov
pop
pop
mov
dec
dec
dec
pop
and
mov
push
pop
push
sub
cmc
dec
mov
outsb
mov
ficoml
call
out
loop
iret
shlb
adc
sbb
dec
addr16
pop
jno
jl
fmuls
iret
pop
adcl
movsb
dec
int3
out
icebp
ja
pop
ja
in
in
jbe
std
xor
inc
loope
subb
outsl
inc
pop
sub
and
push
test
jecxz
std
xor
daa
aam
cs
outsl
cmpl
jg
add
lods
pusha
popf
in
and
xchg
sub
mov
lret
push
cmp
adc
jbe
jns
push
jecxz
cmp
sub
adc
pop
pop
cs
pop
push
sub
mov
aad
xchg
xchg
jge
enter
mov
pop
dec
cmc
lret
fsub
pop
movsb
sbb
sub
or
mov
aam
cld
xchg
adc
fucomip
scas
into
scas
lea
push
cmp
ds
loopne
incl
mov
and
mov
movsl
es
or
push
out
or
aad
cwtl
mov
imul
xor
dec
aaa
pop
jb
aas
in
pop
pusha
xor
dec
xchg
iret
push
xchg
pop
in
push
or
or
adc
cmp
into
sub
fdivp
cmpl
inc
repnz
lock
out
fsubrs
movb
in
test
mov
loop
pop
out
xchg
xchg
mov
leave
mov
sub
cmp
sub
ds
jmp
pop
push
call
or
jge
xchg
repnz
push
shlb
in
repz
inc
jae
pushf
pop
push
call
outsl
nop
incb
xchg
jle
movsl
sub
or
add
mov
inc
clc
push
or
xor
xchg
or
shlb
scas
dec
jmp
aad
sbb
jge
ja
fwait
int
adc
and
stos
int3
lea
pop
sbb
jge
jae
jmp
adc
push
adc
xchg
out
jecxz
scas
xchg
je
mov
inc
in
sbb
xchg
jno
mov
sbb
in
mov
inc
shll
mov
sti
inc
dec
cmp
mov
repnz
push
xchg
mov
jnp
imul
subl
mov
in
mov
loop
bound
add
outsb
jge
add
inc
jnp
mov
push
push
out
xchg
dec
pop
aas
jns
aaa
ret
push
ja
aam
fldcw
cli
xchg
add
repz
and
sub
mov
or
outsb
mov
shl
cmp
fsub
cmpsb
adc
jo
and
mov
test
das
fiadds
into
aaa
sahf
or
std
pop
mov
sub
xchg
in
rcr
shrl
addr16
inc
sbb
dec
adc
and
adc
test
icebp
out
dec
scas
and
mov
rorl
dec
cltd
ds
fmuls
rolb
js
jmp
jae
sub
sahf
and
testb
xchg
xchg
fidivs
inc
outsb
pop
and
cmp
jle
cltd
ja
xchg
or
std
inc
mov
cli
push
in
int
enter
loop
aas
fcomps
sub
pop
mov
add
mov
cmpl
jg
add
sarb
mov
movsb
push
test
and
cmp
add
sub
test
jg
mov
fstps
das
cs
or
xor
add
je
outsb
push
mov
xchg
loopne
ja
das
add
sub
aam
adc
pop
mov
mov
es
or
mov
decl
in
lcall
dec
mov
add
jb
cmpsb
test
andl
jmp
call
mov
pop
subl
xor
in
xor
pop
cmp
xchg
cmpsb
add
aad
jnp
repnz
or
xlat
cmp
les
sub
cld
orl
je
mov
aam
pop
dec
mov
push
lds
jl
cmp
cmp
jbe
sti
out
push
pusha
xlat
mov
jg
jle
std
xor
fisttps
leave
mov
pushf
xor
mov
pop
mov
mov
movsl
or
lret
xchg
inc
mov
movsb
shl
add
jne
int
cmp
cmp
and
popf
xchg
xchg
mov
xchg
sub
dec
push
fs
or
or
sub
into
cmp
add
mov
fmuls
icebp
add
loopne
xor
push
fldenvs
lret
movsl
test
popa
xchg
mov
rorl
pop
por
mov
faddp
cmp
xor
mov
shr
insb
adc
test
dec
sbb
rcll
add
xor
test
mov
ja
jnp
pop
pop
sbb
xchg
fbstp
xchg
inc
aaa
dec
or
sbb
insl
in
cs
std
das
cmpsb
add
pushf
or
xor
sub
test
flds
cmp
dec
std
or
xchg
push
daa
pop
insl
push
jbe
push
mov
fdivrs
and
jl
cmp
cmp
xor
call
pop
and
cmp
fldt
dec
cmp
outsl
jl
push
repz
mov
or
sti
hlt
fstps
sbb
ret
xchg
mov
add
mov
ret
cltd
add
cmp
into
subb
push
sbb
icebp
or
insb
mov
mov
mov
mov
mov
adc
jp
sbb
shl
push
push
fsub
pushf
push
pop
jecxz
stc
ret
xor
cwtl
add
stos
xor
and
adc
test
mov
mov
push
das
fldenv
mov
dec
aas
xchg
xor
psubsb
sbb
sbb
mov
or
add
ja
mov
adc
call
test
insb
popa
cwtl
jg
mov
jne
lods
adc
daa
cmc
mov
dec
int3
sbb
loope
push
nop
xchg
and
mov
jle
adc
jg
xchg
and
xchg
mov
mov
jle
lahf
push
xorl
jne
or
js
sbb
aad
mov
divl
fsubs
addr16
mov
or
test
xor
push
dec
xlat
dec
sbb
fsts
inc
ds
push
push
sub
pop
inc
jnp
cmpsb
push
es
dec
xchg
cmpsb
dec
daa
fdivrl
xor
sub
mov
cmpsl
cld
inc
push
mov
inc
adc
in
fsubr
icebp
pop
shrb
cwtl
pop
inc
das
or
cmp
insl
test
inc
jmp
cmc
ret
mov
insl
pop
adc
rcl
inc
or
icebp
rcrb
ret
popf
and
mov
xor
jmp
xchg
inc
cltd
xlat
popa
adc
cmpsb
test
js
outsb
inc
fsubl
outsl
loope
lea
and
mov
mov
xor
jb
push
xchg
daa
jl
mov
cld
repz
sbb
insl
sub
sbb
inc
mov
add
mov
ficoms
faddl
cmp
gs
popa
push
pop
xor
mov
loop
xor
dec
rclb
rolb
sbb
jno
jmp
ficompl
adc
xchg
and
pop
rcrb
shlb
cmp
xlat
jne
dec
sbb
inc
xchg
jmp
fbstp
add
push
icebp
xchg
sub
in
test
xchg
xchg
or
ljmp
daa
cmpsl
xor
mov
jl
icebp
addl
je
ljmp
dec
mov
pause
icebp
cmp
and
idivl
mov
scas
pusha
xor
inc
fildl
and
dec
mov
ljmp
test
adc
sti
mov
sub
add
in
jae
insb
jecxz
pop
test
fimuls
ss
cmp
push
lret
lock
aam
mov
pop
icebp
fiadds
lret
mov
popa
cli
jmp
inc
aad
outsl
cmp
aad
aad
sub
rcl
popf
daa
sbb
sub
push
je
lds
cltd
mov
sbb
ror
lret
clc
jge
scas
gs
push
pop
xor
bound
mov
mov
or
and
jae
dec
mov
cld
jle
mov
roll
xchg
ja
xchg
push
bound
loopne
outsl
fwait
pushf
and
dec
lret
jecxz
repnz
mov
or
push
out
add
cmp
add
ret
sbb
or
sub
jb
pop
push
scas
cmpsb
aas
cmc
fst
fprem
insl
mov
movsb
fists
nop
in
xchg
lcall
cmc
iret
or
test
push
mov
ret
lahf
loop
jp
sbb
mov
mov
lds
jae
sbb
xor
insb
inc
imul
sub
into
mov
sti
dec
test
ja
fstpl
std
dec
cmp
daa
iret
iret
push
jl
sub
adc
adc
test
mov
cmp
clc
pop
mov
insl
jmp
cmc
mov
out
fsub
js
dec
pop
xchg
hlt
js
jge
adc
imul
arpl
mov
aaa
xchg
fwait
and
mov
xchg
nop
jbe
out
frstor
in
xchg
mov
js
jmp
inc
pop
add
mov
sub
xchg
push
dec
out
aam
out
inc
or
pop
mov
insb
leave
pop
jecxz
jbe
push
mov
mov
data16
dec
or
gs
mov
in
xchg
jae
insb
cmc
mov
cmp
jl
test
mov
cwtl
lds
adc
loopne
push
mov
in
jmp
and
incb
push
sbb
sbb
mov
xor
les
xchg
pop
add
std
ret
push
std
cmp
hlt
lahf
ret
lds
inc
daa
in
push
adcl
addr16
sbb
mov
sbb
popf
jae
ja
rorb
or
aas
cli
dec
in
jbe
jno
mov
push
or
xchg
pop
out
ss
or
notl
pop
mov
imul
movsl
push
dec
ret
cmp
fwait
es
and
stos
cmp
push
aam
add
scas
es
iret
pusha
ljmp
jns
jo
xlat
inc
inc
or
push
rolb
movsl
and
sbb
inc
mov
jo
pop
mov
mov
lods
adcb
js
and
es
je
xor
mov
stos
enter
pop
cmp
push
outsl
mov
jecxz
pop
xor
loopne
jl
cmp
add
int3
jge
je
fwait
xchg
test
fmul
inc
std
clc
enter
and
sub
adc
movsl
sbb
xchg
popa
rcl
hlt
and
stc
inc
test
lahf
popa
sub
aad
repz
roll
mov
lods
in
les
cmp
sbb
rorl
fbstp
and
add
lret
xorl
aad
hlt
fdivl
xor
bound
pop
aas
mov
inc
push
ret
shlb
push
add
mov
cmp
test
jbe
xchg
pop
inc
cmp
mov
mov
add
neg
jl
mov
cmp
jmp
lcall
pop
test
inc
ljmp
jmp
sbb
negb
mov
mov
push
and
ds
jle
leave
cltd
push
push
fstpl
xor
sahf
ds
mov
out
cmc
or
xchg
ret
clc
xchg
mov
push
inc
xor
test
sub
or
adc
mov
test
push
xchg
into
mov
cmp
jns
aam
sub
scas
jo
cmpsb
jg
xor
jbe
pushf
sub
sahf
mov
in
dec
dec
stc
pop
popf
add
sub
out
jge
mov
push
repz
fs
push
adc
test
mov
adc
xlat
mov
subb
ja
sbb
xchg
outsl
pop
inc
cwtl
xchg
ret
mov
mov
inc
xor
loop
fidivrs
cs
push
adc
xorb
rsm
mov
cli
inc
outsl
sub
test
es
daa
sbb
xor
or
addl
cmp
testb
push
jge
mov
push
cli
xlat
jns
ljmp
inc
inc
push
stc
ja
sti
pop
insl
mov
jns
leave
push
mov
ja
pop
popa
clc
or
inc
cmpsl
insl
out
hlt
xor
lret
pop
xchg
movsl
scas
je
lock
sub
test
call
sub
add
in
in
gs
ss
cmp
hlt
push
or
out
inc
jnp
push
test
or
push
les
sub
xchg
pop
mov
cmp
icebp
sbb
and
aaa
in
cmp
mov
rorb
ret
and
aad
or
ja
jmp
jmp
jge
dec
cmc
arpl
imul
arpl
enter
int3
sub
xchg
ficomps
xor
ljmp
xor
xchg
and
lods
xlat
xchg
pop
and
pop
in
and
or
fnstcw
in
mov
xchg
sbb
mov
sbb
dec
mov
imul
inc
cmp
fnstcw
pusha
lods
mov
insb
jp
ljmp
jg
sbb
xchg
stos
adc
sbb
stos
and
test
and
je
dec
and
lds
daa
xchg
xor
or
popa
jno
push
push
mov
jp
clc
push
jp
or
xor
iret
fnsave
repnz
aaa
and
lret
adc
ret
into
inc
in
das
dec
mov
cmc
cld
fidivl
dec
cmp
repnz
ret
sbb
lret
lret
test
aas
inc
mov
xor
stos
std
inc
ds
jge
ja
mov
addr16
lcall
dec
sub
xchg
call
repnz
lea
sbb
ret
adc
outsl
clc
addl
cltd
inc
js
mov
push
pop
inc
sub
iret
pop
push
adc
cmpl
mov
aam
jno
test
inc
cs
dec
lret
push
dec
xorl
mov
xchg
rorl
inc
jmp
test
int3
cmp
lods
lcall
mov
jns
and
jmp
mov
outsl
cmpl
xor
dec
out
ja
jmp
push
rorl
xchg
and
cmp
test
push
fisttpl
cwtl
lods
testl
adc
mov
data16
repnz
adc
push
add
shlb
fs
movsb
jno
aam
jle
xlat
and
inc
jne
sti
mov
and
scas
and
add
add
dec
xchg
outsb
pop
pop
cmp
xchg
add
aas
mov
iret
sub
aam
jge
js
cmp
push
and
enter
and
cmpsb
add
test
je
push
icebp
fwait
cmc
cmpsb
ret
clc
and
cmpb
ret
jg
ds
lret
dec
das
push
daa
rorb
cld
idivb
jnp
and
pop
out
test
outsb
mov
mov
ds
sbb
popl
mov
outsl
sub
lahf
pop
call
push
leave
pop
in
int3
jne
dec
and
and
ficoms
jo
mov
mov
cmp
sub
dec
pop
test
lcall
mov
mov
adcb
xchg
adc
sub
push
cmp
sub
cmpb
inc
test
ror
xchg
pop
jbe
lds
dec
ss
or
sub
pop
jecxz
jmp
jno
pushf
sub
sbb
in
rcrb
ret
testl
dec
xchg
dec
push
push
jo
lea
sbb
cmp
mov
jge
inc
fmulp
fcmovb
scas
adc
dec
or
pop
sbb
aas
mov
jb
scas
or
ja
je
leave
das
and
mov
repz
pushf
jne
out
leave
xor
and
sbb
jecxz
in
shlb
pushf
rcrl
ficoms
xchg
inc
inc
mov
es
js
push
outsl
popa
push
loopne
iret
ds
daa
mov
lods
mov
sarl
sbb
rclb
sahf
mov
jmp
fldlg2
pop
jbe
mov
jbe
orl
pop
jp
inc
mov
outsb
je
js
add
stos
lret
fidivrl
dec
xchg
ja
mov
mov
sbbb
mov
push
xchg
push
out
inc
clc
xchg
adc
cs
subb
loop
and
cli
xchg
test
insl
dec
adcl
and
push
jnp
adc
popf
rcl
mov
mov
pushl
repnz
add
mov
inc
cmp
dec
lock
push
jg
pop
popf
cld
mov
or
lds
inc
decb
xor
and
mov
int
xor
jbe
inc
xchg
out
cltd
into
jge
insl
xchg
fwait
daa
ss
repnz
fisttps
xchg
mov
sub
dec
out
jb
sub
aam
fldenv
movsb
adc
mov
cmp
nop
push
mov
lods
data16
adc
fdivrl
inc
ja
jp
iret
aas
and
cmp
int3
out
dec
adc
in
cmp
xlat
lock
or
or
mov
cmp
push
repz
gs
scas
adc
enter
pop
sti
ds
mov
lahf
loopne
jle
xor
mov
push
push
xchg
loope
sar
jp
mov
imul
push
cmpl
orb
idivl
mov
fnstcw
repz
jnp
inc
xor
sbb
jb
movsl
cmc
ficompl
mov
push
mov
andb
cmc
ficoml
es
push
adc
out
xor
rcll
push
out
xchg
outsl
out
and
das
pop
lea
mov
sub
ror
jl
cmp
sbb
mov
inc
pop
add
sub
repz
and
loop
mov
repz
or
jge
inc
push
jo
mov
adc
lahf
pop
cmc
sbb
or
sub
lret
gs
pop
fxch
or
cmp
fsubrs
lcall
les
sbb
xor
outsl
ret
mov
jae
xchg
mov
fdivs
in
int3
jge
sti
and
jmp
std
jnp
cmp
and
outsb
xchg
jle
adc
repz
aam
out
push
sub
pop
pushl
sti
jnp
add
ja
xchg
imul
adc
mov
stos
rcrl
sahf
pop
xchg
or
cltd
ss
pop
into
push
rcrl
sbb
sbb
pushf
adc
mov
jl
add
sbb
and
fisubl
cmp
xchg
xchg
dec
test
dec
jnp
out
cld
cwtl
stos
out
aam
scas
or
rcrb
lcall
in
cmp
or
inc
sbb
mov
xor
es
sub
fimull
jg
mov
arpl
inc
dec
cli
ret
rorl
and
sub
pop
xchg
xor
sbb
cmp
lret
das
rorl
or
sbb
insb
leave
xchg
rorl
mov
roll
push
jo
dec
inc
dec
aam
push
test
jae
mov
xor
mov
cmp
jae
aad
popf
mov
repnz
push
mov
add
stos
aaa
loop
faddl
xchg
adc
pop
in
pop
ficompl
loop
pop
xchg
iret
cmpsl
mull
mov
push
cwtl
test
pop
ret
mov
out
cmp
push
push
push
cmp
aad
scas
jno
in
pop
sbb
mov
pop
xlat
das
xchg
jle
push
loopne
mov
push
mov
sub
xchg
sub
fmuls
xchg
mov
lds
cmp
cmp
jp
js
lea
lock
daa
mov
push
popf
jp
pusha
dec
push
loop
aam
out
in
push
or
out
xchg
andb
cmp
mov
icebp
cmp
adc
add
and
sbb
mov
mov
push
push
imul
inc
mov
loopne
sar
dec
sbb
shll
clc
shll
fldl
push
mov
pop
push
sbb
jmp
aaa
xor
enter
mov
cmp
ljmp
pushf
cwtl
cmp
push
jecxz
insb
pushf
inc
push
sbb
inc
mov
adc
sbb
sbb
inc
xchg
mov
test
das
sub
cwtl
inc
pop
xor
aam
test
rcrb
adc
cld
jmp
icebp
jne
pop
in
rorl
xchg
pop
pop
dec
sbbl
fcmovb
jp
push
add
pop
or
xchg
scas
xor
addr16
popa
sbb
shrb
dec
sub
icebp
loopne
mov
xor
outsl
xor
xchg
adc
inc
sbb
push
fistl
jmp
and
andl
push
pushl
mov
cld
and
fmull
decl
or
icebp
jbe
mov
gs
xlat
inc
jg
daa
mov
cmp
adc
fcoml
scas
imul
mov
enter
fildll
lahf
dec
mov
mov
sub
stc
dec
mov
sub
lcall
fucomi
mov
test
scas
shll
ja
aam
dec
jb
sti
cmc
jno
lea
add
push
outsl
inc
out
mov
sarb
xlat
push
pop
out
pushf
ljmp
lret
jle
mov
lret
sahf
or
inc
inc
xor
pop
cs
push
inc
mov
pop
test
inc
lock
xor
pop
lock
cmp
cmp
out
pop
jl
mov
jo
insl
push
sub
es
out
pop
movsb
fbstp
dec
xorl
mov
add
cld
fildl
jo
fsts
mov
add
xlat
daa
testb
test
xor
popf
jl
mov
xchg
insl
adc
outsb
or
in
jle
ds
daa
xchg
adc
xchg
fwait
jle
ret
adc
in
push
dec
in
and
shll
shll
lock
xor
xor
ljmp
into
hlt
mov
stos
jb
inc
movl
xchg
or
lock
and
dec
push
movq
or
pop
outsb
or
jns
sub
in
add
cwtl
aaa
sub
mov
sbb
mov
sbb
rcll
mov
xchg
lret
sbbl
dec
out
inc
xor
fs
and
stc
mov
outsl
push
cmp
mov
mov
push
xor
sub
movsl
inc
ljmp
rolb
and
inc
ljmp
mov
sbb
jns
add
pop
dec
cli
test
js
mov
push
gs
dec
xchg
jmp
add
push
fcmovnbe
enter
pop
adc
lods
jmp
dec
daa
cwtl
daa
loope
adc
jae
cmp
mov
mov
sbb
sub
or
or
out
inc
loope
mov
cmp
ds
push
push
inc
loope
mov
add
sub
enter
sub
pop
into
int
add
fs
sub
in
mov
mov
movsl
sbb
js
in
cmc
test
aad
lods
pop
mov
lcall
push
pop
insb
cs
aas
jns
cwtl
pusha
and
fildl
mov
jnp
fmuls
inc
in
mov
pop
loopne
adc
mov
jecxz
sbb
imul
loope
and
orl
dec
mov
inc
fwait
lock
dec
adc
lcall
popf
mov
fcom
mov
pop
or
inc
jge
jl
cmpsl
mov
jle
imul
and
xor
pushf
push
sub
mov
adc
jge
ficoms
mov
enter
xor
rolb
scas
das
mov
xchg
xchg
mov
data16
sbb
in
mov
add
das
aas
add
cwtl
lock
mov
fldcw
lods
mov
pusha
ss
into
lods
push
and
mov
cli
subb
iret
jmp
and
ss
dec
shlb
cmp
lea
decl
adc
pop
movsb
mov
dec
add
mov
fs
cmp
lods
or
lret
xchg
js
adc
xchg
and
mov
in
pop
jnp
sbb
add
bound
imul
insl
add
push
add
fnsave
testl
and
arpl
pop
in
pushf
cmp
aaa
in
outsl
rorl
xchg
stc
int
dec
shl
ds
or
fs
insl
jnp
test
cmpsb
mov
aaa
or
movsb
xor
and
jae
jns
xchg
hlt
cld
inc
aas
add
lret
xor
dec
scas
scas
sub
sub
dec
stos
das
cs
jg
shlb
aas
mov
pop
xor
push
and
scas
push
inc
push
ret
lret
xchg
inc
pop
add
jnp
sbb
xchg
pushf
xchg
mov
pushf
ret
mov
adc
insl
pop
imul
ret
mov
cmp
cs
mov
bound
xlat
es
dec
adc
push
aad
mov
mov
lret
xchg
sub
popa
testb
lods
outsb
aam
mov
xor
fs
stos
ljmp
ror
xchg
fnstsw
mov
pusha
rorl
aad
push
int
mov
pushf
adc
das
or
mov
ds
dec
loopne
cmp
and
pop
mov
and
mov
xor
pop
mov
add
pusha
push
stos
cmp
lods
imul
movsl
aam
xlat
push
adc
push
mov
cld
sbb
inc
jo
arpl
cltd
mov
adc
sbb
gs
cmp
xchg
bound
dec
outsl
out
pusha
scas
lods
sub
ficomps
repnz
out
inc
cmp
ja
cmp
pop
dec
ds
cld
jo
jl
pop
fistps
and
negb
mov
add
je
inc
jp
stos
test
pop
pop
add
xchg
xlat
jle
and
adc
jecxz
out
mov
and
and
cmp
fs
mov
sub
mov
pop
lahf
je
fadds
std
ja
adc
xchg
xorb
js
cwtl
pop
xor
push
sbb
pop
xor
rorl
adc
add
cmp
sahf
xchg
jle
add
fidivrs
pushf
jmp
test
mov
mov
or
add
aaa
xchg
sbb
mov
inc
out
inc
sub
cmp
or
sti
imul
fmull
sahf
bound
inc
das
or
pop
lods
sar
mov
mov
loopne
dec
cld
cmp
loop
xor
ret
jns
cmp
add
rcr
pushf
test
scas
pop
inc
sub
clc
or
stc
adc
mov
in
inc
lcall
test
cmp
dec
test
pop
stmxcsr
push
scas
call
xor
push
nop
adc
and
add
fs
out
pop
dec
adc
dec
lods
loopne
xchg
fcomi
push
cmc
dec
add
adc
lret
sub
or
aam
jge
xor
js
pop
jb
and
add
mov
adc
popf
sub
pushf
add
cmc
and
inc
fisttpll
and
test
out
xor
orl
mov
mov
inc
xor
jecxz
xor
rcll
xchg
mov
jl
jne
jmp
pop
sbbl
js
test
pop
aam
daa
mov
and
ret
out
add
cltd
mov
addr16
popf
gs
lock
sub
mov
bound
xor
call
jne
testl
dec
mov
xchg
mov
sbb
loope
or
dec
add
jecxz
mulb
mov
stc
fcmovnbe
addr16
or
pop
imul
aaa
sub
inc
pop
sub
jns
shlb
lods
jae
icebp
fidivs
dec
lods
sarl
mov
mov
pop
xor
lea
cmp
stos
inc
aam
in
or
scas
lods
jns
push
mov
mov
pop
xchg
adc
lret
int
ret
int
popa
xlat
shrb
shrb
mov
xchg
mov
mull
scas
inc
in
imul
or
in
xlat
adc
mov
lcall
into
fidivrs
mov
test
xlat
les
popf
cmp
dec
or
in
or
sbb
and
jb
popa
enter
xchg
jle
mov
mov
dec
mov
in
out
xlat
inc
sbbl
in
repz
into
sarb
stos
inc
inc
stc
cmp
push
mov
montmul
cmpsb
add
pop
test
pushl
sub
pop
sub
lods
add
mov
test
mov
sti
xchg
int
shll
icebp
pop
out
add
sub
rclb
push
pop
add
inc
aad
jns
pop
scas
sbb
cmp
daa
adc
decb
imul
int3
or
cli
push
or
inc
jge
jmp
mov
les
lds
xor
jo
dec
mov
sub
aaa
int
icebp
int3
lods
cs
sbb
inc
fidivrs
mov
or
arpl
xchg
xchg
inc
stos
into
push
mov
mov
add
aam
cmpsb
push
cmp
and
jne
dec
dec
notl
sub
ret
sbb
add
sahf
pop
mov
in
push
jge
sbb
inc
cmp
shr
addr16
std
inc
fcmovb
lret
push
adcl
xchg
add
out
xchg
or
dec
push
int
outsb
inc
les
fcmovb
ret
je
or
test
xchg
mov
shrb
fildll
rcr
mov
dec
cmp
mov
jmp
pop
cmpsb
lret
shrl
mov
iret
xor
mov
add
lea
mov
mov
in
cli
stos
xchg
and
adc
adc
lock
pusha
jmp
push
dec
mov
repnz
lea
in
sarl
ss
test
mov
push
inc
movl
mov
movaps
mov
sbb
fdivp
jle
jecxz
lods
sbb
loop
out
call
cltd
aad
mov
out
arpl
stc
movsb
cmc
popl
addr16
insl
out
lret
je
xchg
rcr
repz
push
outsb
imul
cltd
test
add
sahf
nop
loopne
xor
in
pop
cmp
call
or
xchg
add
lret
movb
adc
mov
test
and
push
cmp
mov
xchg
leave
mov
ja
inc
stos
add
lock
mov
inc
jl
mov
out
cli
sti
xchg
add
std
bndstx
jp
or
jbe
xor
mov
in
mov
add
and
lcall
dec
cmp
test
add
movsl
and
mov
in
dec
cli
aaa
in
cmp
ds
test
jmp
inc
in
dec
sbb
clc
and
xor
out
ret
and
fwait
and
add
dec
inc
popa
sub
cmpsl
cmc
scas
push
xor
mov
mov
int3
pop
outsl
and
test
add
clc
adcb
sub
stc
pushf
rorl
repnz
stc
pushf
and
dec
jecxz
insb
sbb
icebp
mov
dec
mov
imul
aam
jp
xchg
jge
sub
xchg
fucomip
adc
cmpb
jl
orl
xchg
add
in
cmp
jmp
pop
icebp
call
xor
mov
or
insl
mov
pop
xlat
les
or
jae,pt
fldt
or
mov
outsb
lcall
cmp
lahf
push
shlb
xor
mov
das
outsb
fisubs
ljmp
imul
ret
roll
lods
push
inc
cs
and
sub
movsb
adc
sarb
sub
out
mov
xor
mov
xchg
repz
cmpsl
daa
ljmp
dec
cmp
jle
mov
dec
call
scas
add
xchg
mov
mov
xchg
cmc
popa
cmpsl
loopne
adc
stc
es
or
imul
mov
sbb
lcall
mov
stos
daa
xchg
pop
movl
xchg
bound
sarl
bound
add
push
mov
mov
push
dec
adc
out
movsb
hlt
imul
cltd
mov
repz
adc
push
lods
mov
cwtl
addl
loope
daa
mov
shlb
mov
pop
addr16
jl
jo
js
and
insl
add
idiv
loope
sub
int
adc
jb
jmp
repz
cmpsl
push
lods
movb
ret
fisttpl
dec
jl
xorb
sub
loop
xor
or
mov
push
jns
cmp
mov
adc
ljmp
or
cmc
leave
pop
jmp
pop
ret
dec
mov
jo
xchg
cmp
lods
mov
jl
jbe
mov
and
sbb
ret
pop
sub
pop
inc
insb
xchg
in
aad
jnp
pop
mov
push
pop
jp
data16
popa
push
and
xorb
mov
push
pop
and
inc
xchg
mov
rcl
mov
out
test
push
arpl
mov
movsl
adc
mov
cmp
repz
aam
in
mov
mov
ret
jae
inc
test
pop
push
mov
scas
test
sub
mov
out
pop
adc
into
repz
jns
loope
jl
cwtl
call
jmp
mov
in
mov
movsl
jmp
mov
and
jb
push
xchg
das
xchg
jno
movsl
adc
sbbl
push
inc
dec
inc
inc
dec
push
inc
gs
mov
mov
add
subb
repz
sahf
das
add
mov
mov
jl
fcomps
popf
inc
jmp
incb
jle
dec
pop
xor
mov
testb
jnp
cmc
rcrl
mov
mov
xchg
pop
int3
das
sub
mov
and
or
jp
jle
add
add
or
inc
and
outsb
adc
fiadds
fmuls
int
mov
ret
dec
js
cmp
push
popf
add
mov
or
jbe
sub
out
mov
dec
inc
add
add
sub
add
popf
inc
movq
pop
ds
hlt
call
mov
jmp
mov
add
fwait
mov
in
jmp
mov
fnstenv
xchg
mov
test
popf
cltd
aad
pop
hlt
sub
icebp
icebp
pop
notb
mov
cmp
fadd
or
jge
mov
xchg
aad
movsb
mov
es
jae
int
arpl
mov
lock
mov
cmp
cmpsb
push
test
stos
pop
jb
out
jnp
lea
mov
mov
xchg
in
sub
aam
stos
ss
jl
xor
pop
sbb
inc
es
subl
dec
sub
or
add
ss
xchg
cmp
or
sbb
pop
mov
daa
icebp
std
orl
addl
mov
stos
xchg
bound
jnp
and
leave
out
mov
xchg
sbb
jg
jns
and
and
mov
outsb
inc
and
cmp
enter
in
jno
sbb
or
cwtl
pop
jmp
push
push
inc
into
mov
call
lret
push
ffreep
imul
sbb
adc
pop
jp
pushf
jge
pop
adc
inc
cs
adc
push
jle
add
mov
ds
cwtl
pop
jno
fmul
dec
lods
jb
mov
mov
test
xor
out
xor
cmp
sbb
mov
icebp
mov
mov
adc
mov
mov
xchg
push
lods
cmpsl
adc
fadds
push
inc
js
test
sub
mov
nop
rol
jnp
dec
pop
dec
int
aas
jge
aaa
cltd
in
inc
adc
adc
fisubs
jecxz
fsubrs
dec
out
push
fidivrl
lea
jae
lods
movsb
mov
dec
xchg
dec
xchg
adc
pop
inc
mov
add
out
mov
insb
xchg
lds
push
sub
lods
inc
popf
loopne
leave
aaa
pop
repz
lahf
xchg
xor
rorl
add
fnstcw
fists
movsb
fwait
mov
lret
sub
xor
roll
adc
pop
push
addr16
das
jmp
inc
mov
ds
sub
mov
xchg
pushf
out
jp
adc
fs
sub
jb
pop
test
sbb
or
xorl
ja
cmp
xchg
arpl
roll
inc
mov
pop
nop
jmp
enter
int3
mov
cmc
jo
add
cmp
mov
cltd
and
sub
sbb
jle
les
sub
in
or
pop
cmpl
inc
test
jge
shll
aam
mov
outsb
sahf
mov
cltd
dec
xchg
stos
aaa
mov
lret
jl
hlt
xchg
mov
add
ds
mov
dec
mov
xor
fcmovnb
dec
dec
loop
inc
imul
ja
mov
sbbl
pop
hlt
scas
lahf
or
call
fwait
dec
and
fcoms
rorb
pop
cmp
cmpsl
dec
sub
cwtl
pop
pop
mov
jbe
std
cmp
adc
cmp
fdivs
add
fdivrs
inc
push
loop
cmp
dec
jle
jmp
adc
lock
jecxz
or
inc
adc
jns
jne
pop
ljmp
or
cmp
nop
test
sahf
push
pop
mov
les
pop
lds
inc
jb
ret
mov
lret
inc
inc
leave
push
jl
xor
xchg
dec
cmp
nop
pusha
push
daa
mov
aad
in
xlat
in
xor
cmp
fwait
cs
dec
aaa
push
aam
dec
test
mov
sbb
add
adc
or
pop
sub
add
icebp
imul
pop
pop
or
dec
jb
add
testb
es
lea
insb
cmp
sbb
fcmovnb
cs
fldl
cs
push
xchg
test
push
shrd
sti
adc
cltd
sbb
mov
ss
lea
mov
cmp
pop
mov
mov
pop
adc
or
roll
jae
les
jl
sbb
clc
mov
inc
lret
push
rcl
hlt
jb
xor
pop
mov
scas
mov
pop
fwait
pop
dec
inc
divb
jb
pop
stos
cmp
xchg
mov
mov
xor
movsl
add
dec
arpl
push
xchg
dec
insl
in
push
dec
mov
test
lock
jo
fsubl
mov
cmp
xor
ret
mov
cli
outsb
jne
clc
or
mov
lcall
out
fwait
inc
int3
mov
and
sbb
icebp
arpl
notb
mov
xlat
sbb
in
ss
into
outsb
leave
es
sbb
xchg
lods
inc
test
aaa
or
addl
lods
inc
aaa
imul
mov
notb
sbb
xor
xchg
jmp
int3
inc
adc
outsl
jnp
dec
push
test
mov
jle
test
mov
dec
je
stc
push
pop
inc
push
das
je
ljmp
pop
jnp
mov
mov
xchg
ja
xor
loopne
pop
pop
xor
push
iret
pop
mul
ret
pushf
les
bound
cmpl
arpl
pusha
out
test
sub
add
aaa
pxor
sub
icebp
xor
and
shlb
jle
fs
mov
int3
xlat
pop
push
nop
aam
adc
push
inc
pop
js
add
mov
mov
sahf
mov
mov
repnz
mov
cld
add
lods
fildll
dec
xor
rorl
mov
add
fldenv
pop
mov
inc
mov
subps
roll
pop
lret
or
mov
pop
lods
test
lahf
es
mov
mov
js
adc
aaa
ret
cmp
outsl
cmpsb
es
xchg
pop
fdivrl
idivl
lea
add
mov
test
mov
xchg
mov
cmp
pop
je
leave
mov
fnsave
dec
ja
jge
fisubrl
je
add
adc
jb
ret
mov
sahf
xchg
lock
ja
xchg
leave
adc
mov
inc
pop
cmp
rclb
fwait
aas
push
push
and
jne
jecxz
sbb
sub
fstpl
shll
enter
xchg
cmpl
addl
imull
sbbl
push
rolb
ret
inc
mov
xor
lret
add
cmp
mov
es
sbb
inc
pop
mov
in
das
adc
sahf
test
cmp
jl
or
xchg
jbe
call
inc
aam
arpl
fs
add
test
data16
mov
loope
xchg
inc
or
popf
rolb
push
jb
mov
in
sbb
daa
mov
scas
mov
xor
insl
or
testl
ljmp
xlat
mov
lcall
rorb
adc
xor
test
and
or
pop
sti
mulb
cli
je
scas
pop
cld
cmpsb
ret
adc
add
stc
sub
stc
jg
js
test
sub
jge
je
pusha
mov
push
fs
cltd
or
jle
mov
inc
dec
stos
cmp
mov
cli
xor
jns
mov
add
stc
cmp
xor
sbb
movsb
cltd
or
cmpsb
jge
in
cs
test
scas
push
int3
jns
fisubrl
dec
jb
nop
cmp
mov
in
mov
mov
lea
and
fnstsw
enter
outsb
or
arpl
jne
repz
repz
mov
cmpsl
aaa
or
xchg
mov
jmp
shr
push
rcl
aaa
pop
mov
stos
or
bound
mov
cmp
mov
pop
mov
pop
push
mov
jns
dec
jmp
cmp
lea
push
sti
xor
insb
sbb
xor
dec
iret
push
jp
jo
shl
iret
into
scas
pop
mov
je
pop
int3
fldt
jns
jo
mov
cmpsb
jge
mov
cld
sbb
adc
cmp
in
scas
push
mov
jecxz
data16
ficompl
xor
sub
out
int
push
rcrb
mov
jb
xor
lods
cli
mov
in
cmp
inc
aam
pushf
in
or
add
sub
cmpsb
repnz
inc
xchg
mov
mov
popf
arpl
mov
icebp
jb
mov
ret
fdivs
test
outsb
insl
movsb
mov
inc
cmp
sbb
into
lcall
or
imul
push
jge
sahf
dec
or
aad
inc
idivl
cs
sub
mov
push
adcb
je
dec
fsubs
stos
js
mov
int
mov
xchg
add
cli
aad
hlt
int3
out
loopne
les
push
mov
repz
pusha
enter
ja
popf
pop
jns
fsubr
in
jnp
inc
scas
xor
jge
rcll
fsubl
lcall
xchg
cwtl
pop
in
outsb
jp
popf
xchg
add
negl
lock
mov
jl
es
mov
int3
add
mov
cmp
xorb
pusha
nop
shlb
ss
int
cmp
inc
push
in
sub
call
add
dec
imul
ja
cmc
push
movsl
aaa
add
ficomps
aas
loopne
ret
loope
je
fyl2xp1
cmp
lods
pop
push
dec
sbb
xchg
adc
adc
push
and
repnz
cmpsl
les
lret
and
adc
or
push
bound
pop
popa
andb
xchg
jae
aas
popf
sub
sub
gs
sbb
xor
arpl
lahf
cs
dec
shll
pop
mov
push
jno
xchg
dec
jb
lahf
xor
mov
sbb
sbb
jnp
sbb
andb
push
xchg
inc
push
orl
mov
xchg
cmp
lcall
push
daa
loope
sahf
sbb
adc
mul
sbb
fadds
pmaxsw
dec
icebp
adc
pop
cmp
push
sub
sub
mov
mov
stc
out
sbb
aas
movsl
enter
xorb
jl
js
loopne
mov
jno
fildl
sbb
xchg
outsl
or
sub
xchg
stos
mov
mov
call
in
jb
hlt
push
addr16
cmpsl
sbb
cmpsb
pop
loope
add
call
adc
jno
dec
push
push
out
out
jnp
mov
add
add
ret
in
or
cmpb
mov
mov
fs
and
fiaddl
or
xor
push
sbb
ds
push
movsl
cld
or
jb
hlt
out
or
in
xor
add
imul
push
fistpl
pop
movsl
test
fisubrs
js
in
fnstenv
mov
mov
les
in
cmpsb
add
sahf
mov
push
sahf
mov
push
cmp
lock
arpl
fst
movsb
fdivrp
cltd
mov
test
jno
xchg
js
imul
into
xor
rorb
sbb
add
cs
scas
mov
or
shr
int3
or
pop
lods
in
fstps
mov
out
push
cmpsb
cmpsl
and
pop
pop
fwait
and
mov
sub
les
jle
lock
pop
loope
and
add
popa
xchg
aas
lds
add
fs
xchg
xchg
and
ret
pusha
sub
jno
repz
out
inc
push
dec
inc
xabort
out
dec
bound
scas
inc
pop
sub
mov
jecxz
negb
adc
mov
cmp
lret
mov
dec
and
inc
scas
mov
cmp
loope
ds
push
mov
icebp
pop
sbb
ret
sub
mov
and
xlat
roll
aad
cmp
jmp
lds
adc
jecxz
pop
lods
fwait
arpl
repz
sub
mov
stc
sbb
cmp
outsb
sarl
cmp
xlat
lahf
jecxz
adc
xchg
mov
inc
insl
rolb
jne
dec
pop
add
xchg
fsubrp
insb
inc
add
ss
fwait
push
dec
pop
pushf
mov
cmp
leave
and
push
or
add
sbb
jl
rcrl
mov
aad
xchg
nop
adc
xchg
sahf
hlt
faddl
sbb
sbb
ds
shlb
cmp
loop
popf
clc
push
sbb
adc
jg
clc
sub
fadds
data16
out
fildl
mov
fs
sbb
sub
cmp
push
dec
popa
cli
adc
iret
mov
sbb
ftst
popf
mov
mov
cmpsb
pop
cltd
outsl
in
push
out
dec
pop
push
jne
mov
bound
xchg
and
orb
push
or
xlat
loope
into
inc
out
icebp
inc
and
sbbb
in
fstl
frstor
lret
out
es
mov
mov
iret
sarb
adc
bound
mov
and
ret
dec
pop
pop
outsl
hlt
inc
bound
out
fstpt
inc
repnz
ret
lret
sbb
lock
sbb
jno
push
xchg
pusha
cmpsb
sarl
or
std
ret
cmp
sub
sub
jno
addr16
jbe
mull
cs
ss
lcall
dec
jg
push
aad
jmp
xchg
push
popa
inc
push
movsl
lret
mov
ret
mov
inc
push
sub
adcb
mov
sub
getsec
pusha
in
inc
in
pop
adc
ljmp
icebp
test
insl
sub
pusha
sbb
adc
and
xorl
jne
sahf
je
or
xchg
xchg
inc
push
dec
dec
add
or
shlb
cmp
cmp
add
ficompl
cmp
xchg
sar
ss
jle
push
int3
sbb
je
mov
adc
push
adc
in
push
xor
or
xchg
cltd
adc
fcoms
push
sahf
jmp
or
sbb
push
adc
inc
divl
aam
mov
loopne
xor
filds
xchg
cmpsl
pop
xchg
or
and
mov
int3
mov
sub
aad
add
out
mov
test
popa
jcxz
cs
lds
or
pop
nop
enter
mov
xor
pop
iret
adc
lock
out
movsl
push
push
in
in
fcompl
add
or
mov
mov
mov
pop
subb
push
rorl
out
jno
arpl
cmpsb
or
sbb
clc
jp
sbb
cwtl
mov
dec
dec
scas
mov
ja
fcomip
ss
dec
mov
pop
adcl
bound
and
sbb
popf
inc
pop
cmpb
push
cmp
test
sbb
mov
mov
sbb
xor
addb
jg
stos
stos
ss
sub
mov
pop
lcall
js
xor
ds
add
lds
jp
int3
cmp
push
add
xor
xorl
inc
imul
pop
lahf
pop
cmp
xor
fildll
rcr
push
sub
cmpsl
jb
cmp
sbb
pop
pop
inc
or
in
add
or
ja
jge
mov
int3
daa
adc
mov
call
pop
mov
fidivs
out
leave
mov
pop
xor
pop
data16
mov
cmp
cld
xchg
outsb
inc
mov
mov
rclb
jbe
or
cmpsl
popa
pop
lea
or
mov
movsl
mov
enter
test
movsb
data16
shlb
shlb
repz
add
test
and
sbb
lock
sub
fnstenv
out
cltd
faddp
sub
std
stos
add
lods
sbb
push
mov
or
cwtl
xchg
add
mov
jo
push
mov
jae
rorb
jae
shll
and
cmp
idivb
fdivrs
xchg
nop
pop
test
ss
xchg
xchg
rol
ja
cmp
das
xor
push
pop
cmpsl
lret
mov
xchg
jne
add
dec
sub
psllw
add
xor
jecxz
aam
in
bound
mov
jp
rcl
mov
test
inc
sbb
sarl
xchg
mov
lcall
adc
xlat
or
pop
mov
pop
push
push
ficoml
repz
mov
xor
cmp
push
or
sarl
inc
lret
ret
sub
lret
push
mov
je
bound
xorl
cmc
jmp
inc
mov
mov
push
shlb
mov
add
fstpl
adc
mov
or
and
daa
push
inc
pop
jae
or
mov
nop
push
xchg
push
and
jl
push
push
jne
xor
xchg
outsb
stos
inc
in
xor
scas
lcall
xchg
repz
das
sahf
in
int
xlat
push
shrl
gs
out
mov
sarb
mov
fldcw
lcall
stos
in
call
imul
add
adc
jae
xchg
je
cmp
inc
cmp
std
into
loop
cmc
movsl
add
dec
out
xorl
ret
fldt
movsl
lcall
dec
xchg
int3
imul
sub
hlt
xchg
bnd
scas
pop
mov
sbb
sub
dec
das
mov
push
jnp
lcall
adc
inc
out
sbb
mov
mov
add
lock
dec
push
push
sahf
into
sbb
imul
mov
adc
bound
mov
mov
orb
fiadds
cmp
adc
push
mov
sti
mov
repnz
mov
sbb
pop
sub
adc
mov
mov
les
xlat
jg
and
into
mov
or
daa
mov
xchg
add
in
jl
fldenv
popf
aam
arpl
into
jle
adc
xchg
cmpsl
add
dec
xlat
sub
popf
or
or
or
jb
fwait
mov
fbld
sbb
add
clc
sub
ror
jne
iret
sub
pushf
scas
mov
xchg
fadd
and
out
and
in
sbb
jecxz
pop
jmp
jl
aaa
or
mov
cmp
add
lock
jecxz
mov
inc
jne
outsb
ja
xlat
inc
xchg
in
in
cs
icebp
adc
ja
dec
inc
sbb
xchg
fdivl
mov
xor
or
test
jl
push
ljmp
dec
lret
push
push
sbb
ss
lds
pop
cld
cs
push
pusha
fisttpl
mov
or
push
stos
scas
sahf
jmp
cmp
in
enter
xor
lods
jl
add
bound
cmp
sti
fwait
insl
out
sarb
and
aam
aam
adc
je
imul
xchg
aam
loop
or
imul
xor
sub
sti
mov
ds
xchg
xchg
pop
xchg
sub
sub
daa
sub
dec
mov
adc
movsl
dec
add
aad
xchg
inc
jge
jmp
repnz
sub
cld
xor
jle
push
dec
mov
xchg
add
xchg
out
sbb
fsubs
inc
inc
ds
xchg
pop
inc
mov
adc
bound
je
icebp
xchg
pop
iret
shrb
push
test
mov
fisubs
repz
pop
stc
test
pop
sahf
ja
sub
dec
es
scas
inc
cmp
push
addr16
int
rsqrtps
push
into
lds
sbb
je
and
shlb
or
or
pop
adc
dec
fnsetpm(287
push
aaa
pop
cmpsb
push
outsl
sbb
orl
or
ja
daa
stos
mov
push
adcl
dec
mov
jge
add
sub
add
push
xor
jle
loope
enter
dec
mov
fists
or
dec
or
jg
cmp
mov
xor
iret
testb
jecxz
push
dec
sbb
ficoml
into
sub
popa
lret
mov
xor
add
mov
mov
shl
fdivrl
cmp
jo
ss
iret
xchg
lock
push
out
stos
jmp
mov
in
shl
add
push
sub
iret
or
and
fyl2xp1
rcrl
and
xchg
lret
pop
mov
push
adc
aaa
ds
lcall
or
popa
jge
push
lock
inc
cmpsb
in
mov
and
and
lods
mov
cmp
xchg
jg
out
push
outsb
adc
je
or
fiadds
mov
aaa
lock
push
mov
lahf
rcl
punpcklwd
adcb
or
into
or
scas
nop
and
adc
push
inc
pop
cmpb
mull
scas
xchg
mov
and
outsl
push
decb
xchg
cmc
add
jecxz
jge
fs
mov
insl
push
cld
mov
lret
or
push
jecxz
iret
test
mov
into
das
maxps
push
pop
jp
lret
xlat
xchg
andl
jge
cmp
sub
mov
sub
xor
cs
mov
inc
xchg
ret
pushf
xor
xchg
rcrl
in
fsubr
shll
clc
and
loope
dec
sub
mov
jge
pop
out
adcl
xor
push
pop
adc
nop
mov
cmp
mov
adc
cwtl
cmp
loopne
mov
mov
stos
lcall
adc
adc
in
shrb
in
xchg
imul
lds
cmp
loopne
fcomps
mov
scas
or
sub
bnd
fcomps
xor
imul
sbb
test
inc
add
mov
mov
adc
jbe
sub
outsb
cmpsl
ss
mov
xor
lcall
stc
sbb
lahf
lahf
nop
in
jbe
les
data16
or
sub
dec
push
mov
inc
mov
or
push
bound
and
jo
rcrl
inc
movsb
mov
lret
push
inc
pop
inc
int3
jno
bound
js
es
loope
leave
or
test
xor
xchg
fs
mov
sahf
sub
sub
daa
inc
push
stos
ljmp
jb
xchg
xor
loop
xchg
pop
dec
in
pop
and
push
jecxz
cmp
push
push
in
je
mov
push
push
sbb
clc
sbb
ret
enterw
mov
in
enter
push
xadd
int3
or
jmp
push
int
jle
or
push
pop
shrb
ljmp
add
xchg
xchg
icebp
dec
xchg
push
in
xor
cmp
and
mov
sbb
add
inc
or
jne
jp
xor
xchg
fmuls
pop
jecxz
das
test
nop
sbb
adc
sub
cmc
out
push
sub
inc
rcl
popf
jmp
scas
data16
pop
rcl
lret
mov
int
sti
jecxz
test
pop
mov
add
push
shll
insb
dec
push
lcall
push
push
jmp
negl
pop
push
stos
das
inc
jae
xlat
mov
pop
je
lea
sub
out
push
pushf
aas
inc
cld
in
nop
cld
test
push
pop
and
int
pop
or
rolb
loopne
lahf
xchg
jg
cli
cmpsl
stc
jg
rcrl
test
lods
lret
stos
mov
ja
or
lret
sub
jno
cld
pop
pop
jl
jo
xor
mov
pusha
pop
add
movsb
mov
scas
outsb
inc
inc
cmp
repz
subl
sub
pop
fcomps
test
adc
or
scas
pop
and
xor
sub
in
test
rorb
ss
pslld
repz
cmpb
xchg
adc
out
les
cld
popf
fdivr
insl
cmp
cmp
das
mov
pop
xchg
xor
cmp
mov
cmp
push
mov
rcrb
int3
push
out
out
imulb
popa
test
xchg
mov
mov
mov
decl
xchg
push
movb
js
imul
std
sahf
mov
nop
lods
xor
push
xchg
push
xor
jnp
shrl
mov
shl
and
push
test
insl
dec
repnz
push
insl
int
movsl
add
leave
inc
push
xchg
jns
jecxz
push
add
aas
movsl
bound
outsb
pop
xchg
gs
fcmovu
outsl
call
xchg
sbb
dec
out
sbb
sub
cmc
sub
pop
pop
out
and
and
adc
mov
aaa
jl
fwait
clc
jno
push
push
fsubrs
pop
int
leave
push
ja
imul
dec
adc
mov
sbb
insb
subb
subb
imul
loopne
icebp
mov
out
cltd
loope
or
lods
add
cwtl
mov
call
pop
cmpsl
sbb
imul
testl
jmp
out
sub
and
cmpb
or
xor
inc
mov
jbe
nop
scas
pop
cwtl
xlat
mov
stc
xchg
outsl
inc
sbb
mov
add
mov
imul
dec
scas
fisttps
inc
dec
dec
push
dec
das
sbb
iret
les
scas
fdivs
push
jge
mov
imul
cmpsl
mov
ljmp
mov
lea
insl
repnz
sub
adc
insl
xchg
lret
push
test
dec
add
cmc
cmp
push
lds
inc
ret
dec
sub
jnp
popf
mov
loop
js
or
jmp
mov
push
ja,pt
ljmp
rcll
xor
and
jmp
mov
xchg
inc
mov
ret
push
pusha
inc
sbbl
aam
pushf
mov
xchg
add
movsb
loope
mov
std
jns
sahf
fdivrl
pop
hlt
sarb
or
clc
test
mov
mov
es
mov
into
sub
cmc
daa
test
rcr
mov
push
mov
sti
sub
repz
cmpsl
nop
pop
call
sub
and
jle
and
out
dec
mov
or
xchg
fwait
cmp
mov
cmp
and
xchg
in
scas
icebp
mov
xchg
int3
int3
fsub
movsl
adc
mov
mov
pop
push
int
jne
dec
ficompl
cmp
mov
sbb
lahf
lret
mov
fcmovne
mov
or
add
lret
dec
sbb
insb
dec
and
mov
out
std
and
mov
outsl
fiadds
and
mov
mov
mov
insl
cli
orl
xor
push
je
daa
pop
cmp
push
cmpsl
cmp
outsl
shlb
repz
inc
lret
xchg
ljmp
push
fstl
ror
jmp
adc
mov
jns
sti
out
push
push
daa
pop
iret
call
dec
pop
mov
sub
cmp
xchg
xor
jo
enter
cmpsl
jge
mov
add
or
lock
test
fidivrl
jb
mov
out
cmp
sub
mov
pop
mov
addr16
cli
and
and
mov
ret
mov
push
xor
sbbb
sbb
push
shrb
std
stos
ljmp
loop
hlt
in
adcl
lret
es
mov
rolb
and
addr16
std
mov
push
pop
xor
push
and
test
mov
jp
sbb
and
jne
in
sub
lea
and
les
and
cwtl
jmp
sbb
sbb
ljmp
mov
out
aam
fisubl
mov
xor
sub
sub
cltd
nop
test
and
xchg
aad
sub
aam
mov
mov
push
or
xor
cmp
mov
push
mov
dec
out
and
out
cmpsb
sbb
mov
out
add
test
dec
push
lret
iret
mov
sti
jl
add
jle
in
out
loop
xor
push
in
int3
lret
push
sti
or
jbe
and
push
test
xchg
sub
jmp
add
and
xchg
jle
mov
push
push
int3
jmp
mov
push
cltd
arpl
popa
std
sub
mov
xor
sub
mov
mov
pop
in
insb
cmp
cmp
pop
sbb
clc
cmc
pop
push
leave
push
lds
mov
lcall
jmp
daa
cmpsb
sub
and
addb
add
cs
xchg
push
in
xchg
out
mov
int3
shl
test
lcall
test
dec
adc
inc
adc
push
test
cmpsl
push
shlb
test
jnp
insb
xor
jne
test
aaa
mov
sbb
push
xchg
cmp
out
jmp
cmp
stos
mov
mull
sbb
pop
add
lcall
jne
push
push
sub
sub
xchg
clc
dec
jp
pop
mov
inc
push
jmp
xor
aaa
in
or
sarl
jmp
or
test
push
sarl
gs
in
jle
jnp
sar
and
lock
pop
dec
addr16
adc
or
movb
mov
lret
or
pop
add
out
loop
daa
ss
sub
xchg
test
xchg
inc
sbb
adc
or
mov
pop
in
lret
inc
inc
dec
movb
dec
inc
inc
push
mov
jmp
cwtl
clc
jns
mov
mov
jge
mov
pop
adc
ret
jmp
or
mov
or
pushf
movb
mov
jbe
call
cmp
insb
push
mov
out
and
jae
cs
stos
xchg
sbb
or
daa
divl
push
pop
out
mov
jecxz
and
inc
repnz
scas
ret
sbb
aas
mov
cmpsb
mov
cmp
test
in
add
cmp
pop
push
pop
add
shll
scas
dec
outsl
in
orb
add
das
subb
es
loope
lock
push
ret
enter
outsl
dec
xchg
out
xor
lods
rcrb
repnz
movsb
add
ror
fst
push
fidivl
fnstsw
add
jnp
or
pop
mov
inc
hlt
xlat
adc
dec
dec
cmp
push
clc
dec
in
cmpsl
out
jnp
push
xchg
inc
mov
mov
rclb
xor
cmp
mov
fwait
scas
cmpb
and
jl
xor
andb
shl
in
xchg
fadds
jb
jo
insb
in
push
in
insb
pop
jno
shr
jge
lret
mov
add
jo
repz
mov
ja
add
add
ret
add
movsl
sbb
stos
cmpsl
xor
cmpsl
pop
test
and
call
insl
sbb
cwtl
xchg
insb
outsb
mov
bound
repnz
xor
pop
xchg
sbb
mov
xor
xchg
test
cli
mov
sub
incb
xor
aam
mov
sbb
int
cmp
out
pop
mov
or
mov
mov
imul
inc
xor
cmp
data16
xchg
mov
push
ret
fcoms
fwait
sbb
or
call
pop
push
arpl
andl
leave
je
imul
movsl
pop
add
add
std
js
sub
inc
mov
xchg
sahf
mov
push
xor
lea
mov
or
test
cltd
ja
insl
mov
pop
bound
push
jmp
xchg
pop
mov
add
inc
sub
sbb
fmuls
int3
jb
xchg
fildll
dec
test
ret
outsl
in
lahf
mov
pop
stos
movsb
loopne
adc
add
push
das
outsl
and
pop
mov
mov
loope
fwait
cs
sbb
mov
loop
push
xchg
arpl
jmp
in
add
jne
jno
in
repz
xchg
jle
jne
or
fnstcw
inc
shlb
pop
or
out
gs
inc
aaa
jno
insb
xchg
or
cs
popf
imul
mov
imul
andb
jb
add
xor
sti
lret
nop
lret
sarl
pop
pop
out
mov
pop
dec
inc
in
lret
repz
sbb
push
sub
xor
in
mov
mov
mov
jle
sub
xor
xchg
dec
int3
xchg
jae
add
dec
lods
ret
in
lret
inc
jecxz
sub
pop
out
pop
jge
sbb
aam
sbb
dec
int
outsl
sbb
cmpsb
xchg
or
lods
sub
cmp
insb
sub
xchg
lea
iret
bound
aaa
push
push
xchg
mov
lods
push
sub
mov
sbb
aam
pop
adc
rolb
in
cmpsl
xchg
sti
dec
stos
hlt
add
mov
test
insl
stc
sub
mov
jle
cmp
imul
out
push
adc
inc
out
loop
xlat
inc
xchg
stos
sub
jbe
arpl
loopne
adc
sub
lods
mov
dec
insl
scas
imul
nop
jae
lock
mov
mov
lret
lcall
dec
cmpsb
dec
mov
xchg
arpl
cmp
dec
aaa
fs
shrl
scas
fdivs
mov
daa
cltd
mov
sub
xchg
into
xlat
pop
rcl
mov
sub
aas
mov
cld
pusha
aaa
push
nop
pop
pop
cld
rorb
add
cmp
mov
sub
pop
lock
push
and
ss
repz
in
js
js
loopne
mov
movb
mov
dec
int3
divl
pop
test
repz
mov
adc
orps
xor
sbb
sub
lds
mov
mov
mov
sahf
inc
xor
sub
out
mov
inc
xor
fistl
sbb
fwait
dec
jmp
inc
jmp
adc
adc
mov
sub
jecxz
dec
lods
adc
jns
orb
xchg
and
std
cld
or
mov
push
adc
andl
xor
lock
lods
les
enter
xor
sbb
std
dec
xor
sarl
and
adc
mov
mov
rep
xchg
mov
and
sbb
cmp
push
bound
ds
inc
jg
cmp
jmp
lret
jne
lods
test
xchg
pop
lahf
les
dec
xchg
mov
xor
daa
jnp
push
pusha
sub
int3
shrb
inc
sub
in
shrl
dec
xor
fcmovu
sbb
mov
loopne
lret
cli
leave
in
bound
sub
in
push
mov
into
jb
or
lret
fistps
xchg
adc
jg
and
mov
inc
jo
sti
xchg
dec
stc
dec
es
push
fwait
add
loop
or
or
loope
pop
dec
xchg
sti
pop
mov
mov
mov
sbb
xchg
aam
ror
add
test
rcl
or
dec
jo
das
js
in
loopne
push
xchg
add
rol
test
pop
mov
addr16
fwait
addr16
push
mov
push
imul
pop
mov
or
push
in
insb
add
or
and
mov
add
jb
sbb
sub
cmp
push
lods
fldt
xor
or
out
cwtl
jmp
lds
inc
push
xchg
pop
mov
pop
dec
scas
xor
sbb
movsb
in
jb
jle
xchg
cmp
add
sbb
sub
in
sub
fsub
fisttpll
aad
jmp
and
je
in
sbb
xor
fs
loopw
push
notb
push
popf
push
mov
jp
roll
pushf
jne
push
jb
jmp
push
push
add
lret
lea
stos
inc
or
mov
mov
pop
mov
xchg
addr16
test
push
dec
imul
lcall
pushf
adc
data16
inc
cmpsb
cmp
cmp
repz
addr16
or
mov
inc
inc
and
out
inc
mov
jge
fwait
ret
pop
icebp
leave
in
push
or
das
jo
or
fprem
mov
imul
adc
fwait
stc
mov
divb
bound
mov
ljmp
sub
adc
jo
push
xor
adc
jo
push
aaa
mov
int
jb
or
fdivrl
mov
loope
adc
or
xchg
stc
lret
pop
lock
repz
xor
adc
cli
test
cmp
or
aas
lcall
sbb
pop
adc
mov
cmp
mov
sbb
mov
sub
mov
jmp
lret
in
addb
add
jecxz
popa
mov
stos
out
jae
pop
xchg
adc
aas
xchg
adc
push
mul
jno
cli
pop
push
jne
or
lock
lret
inc
cmpsb
test
push
xchg
cmc
xchg
ja
jo
sbb
mov
imul
add
in
or
dec
adc
mov
cltd
shrb
add
ret
push
aaa
jecxz
pop
cmpsb
hlt
cs
outsl
stos
in
dec
adc
addr16
adc
sub
mov
popf
out
jbe
cmp
jbe
mov
dec
mov
dec
cmpl
add
jnp
cmpsb
sub
push
cmp
ret
lret
sarl
rcr
adc
mov
lock
add
inc
hlt
jl
push
push
xlat
mov
testl
mov
dec
cmp
push
push
pop
xchg
jno
imul
push
sbb
out
fmuls
mov
cmp
jb
or
pusha
imul
push
push
mov
pushf
sbb
push
int3
movsb
dec
insb
jb
mov
cmp
out
cmp
fwait
mov
jmp
sbb
jb
xor
in
outsb
mov
jl
xchg
int
xchg
insl
adc
int3
int
add
mov
sub
mov
adc
lret
stos
push
add
js
dec
loopne
cmp
inc
div
ss
stos
and
std
jmp
mov
xor
sub
sar
adc
inc
imul
clc
xchg
test
cltd
shl
stos
int3
and
dec
ljmp
xchg
fsts
call
cmp
dec
aas
out
outsb
rcrl
aam
lret
inc
lock
push
or
sarb
add
mov
mov
adc
or
inc
sub
imul
mov
cpuid
loop
ds
adc
cmp
aad
mov
sbb
pop
mov
mov
or
push
adc
mov
pop
mov
cmp
movsl
popw
ja
fisttpl
ss
lcall
dec
int3
fs
shl
out
pop
and
ds
xor
pop
hlt
test
or
xchg
fiaddl
lds
sub
ds
stos
jl
lcall
jg
movsl
inc
adc
lods
mov
repnz
out
jae
fiaddl
int
lret
push
roll
mov
aad
push
loope
and
inc
dec
outsb
jae
add
add
jns
inc
mov
dec
add
cwtl
std
cmp
sahf
daa
adc
dec
fucomip
aas
pop
adc
xor
cli
xlat
xor
cmpsb
or
sbb
xchg
pop
sbb
loope
fmuls
or
roll
add
push
shl
gs
lret
sub
fldenv
xor
out
btc
cmp
push
mov
popa
mov
call
rcrb
dec
jns
mov
insb
imul
sti
pop
cmp
jo
jno
adc
test
mov
push
rclb
popf
mov
cvtps2pd
test
jge
dec
into
pop
xchg
push
or
nop
cmp
test
mov
mov
mov
inc
insl
je
cmp
mov
outsl
cli
addr16
int3
xchg
jo
add
mov
aad
jbe
nop
lock
arpl
mov
mov
pop
adc
aad
mov
loopne
sub
or
cmp
push
push
stc
add
fstpt
push
roll
std
cmpsb
jg
push
jb
sahf
je
mov
xchg
sti
ss
dec
xchg
mov
scas
adc
lds
out
mov
or
adc
fs
rorl
movb
inc
std
sbb
test
fcompl
pop
pusha
adc
movsb
xor
stos
mov
shll
xor
pop
push
jbe
jno
pop
sub
push
cmp
pop
mov
xor
pop
fs
cltd
xchg
dec
stc
add
cmp
scas
jns
and
scas
daa
jbe
leave
dec
dec
and
adc
jle
xchg
addl
and
or
xchg
adc
and
in
lds
int3
rol
out
movsb
or
imul
jo
aaa
fmull
and
cmpsl
stos
dec
mov
and
push
ja
fiadds
pushf
inc
ljmp
mov
in
test
insb
mov
xchg
cmpsl
test
call
pop
sub
xor
fs
outsl
xlat
nop
or
pop
pushf
lahf
mov
xchg
cmp
in
out
fdivr
syscall
lcall
adc
xchg
fs
mov
pusha
pop
ds
lea
xchg
shrl
jmp
aas
push
cli
je
adc
mov
in
aad
dec
aaa
lods
loopne
push
int3
inc
testl
jg
mov
cltd
pop
pop
cmp
lods
sbb
sbb
popa
aad
sbb
sub
daa
call
ret
or
xchg
jle
or
push
jl
pop
dec
xchg
ret
pop
aad
je
sti
jnp
cld
int
pop
lods
or
dec
test
das
fsub
cmp
gs
push
insl
unpcklps
aas
out
add
xchg
lahf
adcl
pop
popa
add
in
jbe
xchg
in
je
and
enter
sbb
shll
mov
call
pushf
in
xchg
pop
imul
jbe,pt
int3
fstpl
test
push
shlw
add
arpl
ret
stos
ss
lea
outsl
or
shlb
incl
lods
mov
decl
add
out
rolb
mov
cmp
and
and
int
lahf
aas
jle
clc
mov
inc
out
xor
in
icebp
inc
aaa
das
sbb
rcrl
pop
outsl
imul
clc
fcmovnu
push
movsl
aas
cmc
sbb
mov
dec
std
test
cmc
not
enter
push
jmp
xor
mov
in
push
sbb
stc
les
mov
fmul
pop
scas
add
mov
inc
or
daa
xchg
cs
nop
addl
testl
mov
adc
imul
scas
sti
pop
daa
cmp
movsl
mov
sub
add
inc
cwtl
sbb
jl
rolb
dec
push
scas
inc
sub
sahf
pop
jns
insl
inc
rdpmc
dec
add
and
mov
sub
into
aaa
push
ja
pusha
gs
imul
loop
mov
ss
cli
mov
xor
adc
dec
cmpsb
test
imul
dec
xchg
out
xchg
xchg
add
xchg
loope
test
adc
push
sub
jmp
sbb
cmpsl
fbld
lods
mov
push
cmc
sti
sarl
jnp
inc
or
cmp
ret
push
sahf
mov
cs
pop
out
mov
rorl
xchg
int
jns
mov
cmp
lods
in
fmull
mov
push
pop
mov
push
inc
mov
loop
xor
sbb
xor
pop
xor
jle
adc
mov
data16
adc
outsb
or
imul
or
mov
xchg
push
ffreep
add
push
sub
int3
test
loopne
loope
or
or
mov
inc
xchg
loope
inc
dec
cmp
lock
jmp
xor
sbb
fists
mov
inc
in
add
aam
pop
jns
inc
lret
jmp
dec
repnz
mov
sbb
mov
mov
or
push
push
lock
push
inc
inc
jo
sarl
adc
mov
jge
clc
mov
dec
dec
cmpl
cltd
jne
cmp
jge
adc
xlat
xchg
push
inc
jno
popf
mov
xchg
jne
cmp
stos
cmp
or
xchg
outsb
jae
or
popf
and
ljmp
sbb
faddl
jl
imul
in
adc
add
mov
pop
mov
mov
or
ror
mov
xchg
js
roll
fistpl
and
shll
sbb
mov
pop
cmpsb
mov
jbe
out
and
jg
popf
lret
ds
xchg
adc
jae
and
je
push
jp
pusha
rcr
ljmp
cld
mov
cwtl
cmc
jae
out
insb
sbbl
ficoml
xor
insl
inc
jge
stos
movsl
add
push
out
lods
pop
adc
lock
mov
sbb
cmp
mov
sbb
arpl
xor
in
jecxz
add
aad
insl
adc
xor
ljmp
mov
in
aad
add
ret
xchg
test
xor
mov
push
adc
mov
jmp
xlat
mov
fxch
xchg
or
loop
in
addr16
jg
xor
jl,pn
cltd
repz
fildll
test
inc
mov
mov
mov
in
ret
dec
pop
push
aad
dec
in
cmp
lods
loope
hlt
xor
dec
cwtl
imul
xchg
xor
sub
hlt
dec
arpl
lds
sbb
mov
xor
jp
cmpsl
shlb
add
adc
pop
sarl
mov
jns
mull
fcoml
sub
jl
cs
sahf
iret
mov
scas
loopne
cld
shr
rol
popf
scas
jo
aad
adc
movsl
scas
or
pop
sbb
loop
adc
jle
xchg
shll
mov
xorb
add
ret
add
std
addr16
mov
aam
rorl
in
aas
fisttpl
mov
and
pusha
mov
push
mov
fbld
adc
pushf
sbb
loope
sbb
ret
or
xchg
adc
testb
call
movsl
sbb
or
in
push
jb
push
scas
add
xor
cmp
mov
inc
xchg
arpl
or
roll
in
cmc
pushf
cmpsl
fnstsw
in
fmul
into
or
inc
stos
push
inc
xor
adc
sbb
ficomps
scas
mov
dec
icebp
add
mov
dec
mov
scas
mov
pop
cltd
mov
lahf
repnz
lock
jns
lea
shr
data16
rcr
les
mov
mov
cmp
mov
mov
std
and
fs
and
lcall
fimull
jns
addb
push
cmp
sarl
jmp
sbb
mov
sub
dec
mov
or
sarb
aad
mov
imul
daa
mov
inc
fwait
adc
fidivs
jmp
sbb
or
pop
inc
hlt
test
movsb
lret
xchg
clc
push
aad
jge
or
jp
ja
stos
movb
and
jb
ret
inc
mov
inc
sbb
or
push
and
xor
clc
arpl
scas
xor
icebp
sub
roll
jecxz
scas
cmp
pop
int3
and
pop
test
outsl
dec
sahf
leave
test
pop
push
mov
push
sahf
lcall
jle
push
insl
adc
xchg
cmp
cmp
jecxz
inc
sarb
shl
mov
xor
popf
stos
lret
enter
mov
loopne
or
push
push
adcl
and
sbb
xor
rcrl
mov
fcmovnb
dec
xor
pushf
ja
inc
add
xlat
jle
data16
xor
test
mov
or
and
js
sbb
xchg
mov
shll
in
and
cmpsl
add
adc
int3
pop
call
ret
lock
fiaddl
lods
push
cmp
ja
stos
jecxz
jo
lock
mov
aad
addr16
pop
sub
mov
ja
aad
jbe
addr16
add
iret
lahf
sarl
sbb
mov
nop
fadds
bound
mov
xchg
mov
stc
pop
icebp
pop
fmuls
sbb
cmp
push
and
add
cwtl
mov
movsb
int
sub
jbe
imul
es
daa
or
lods
jg
lds
sbb
xor
sbb
push
or
popa
nop
das
fisubl
aaa
xor
jno
sub
sbb
ljmp
push
sub
xlat
es
std
popa
sbb
lods
sbb
push
and
js
jno
jg
rorb
dec
push
loopne
shll
mov
push
add
cmp
pop
sbb
shlb
inc
cli
sbb
jge
divl
nop
repz
imul
cmc
sbb
test
iret
inc
jle
and
outsl
jmp
hlt
scas
loop
fstps
jns
test
cs
cmpsb
aaa
mov
popa
orb
adc
cld
jmp
test
lods
and
jl
lcall
and
lret
ret
add
jmp
hlt
sbb
adc
cmp
pop
and
mov
or
test
leave
cmp
mov
call
ss
repz
xchg
pop
adcl
mov
xor
xchg
cmc
bound
cmp
inc
jmp
aam
cmp
add
sub
push
iret
ret
inc
mov
mov
shrb
aad
jnp,pn
sarb
sbb
lcall
mov
mov
shlb
pop
cmp
push
and
stc
adc
fld
loop
push
mov
idivb
cmpl
rcll
mov
mov
scas
sbb
or
pop
adc
or
sub
stos
lods
jge
dec
leave
imul
dec
lock
mov
mov
into
adc
loope
sarb
sub
cwtl
lcall
test
shll
pop
decl
lea
dec
mov
xchg
push
inc
jnp
mov
stos
inc
ljmp
imul
push
dec
dec
std
adc
mov
jl
xor
ret
test
pusha
paddb
sbb
pop
lret
je
lret
xor
fwait
push
jl
mov
lds
stos
out
mov
enter
loop
cwtl
insl
mov
lcall
jecxz
ret
stc
imul
cwtl
scas
test
adc
lock
adc
bound
pushl
scas
cmp
in
sahf
xor
jbe
pop
pop
fs
sbb
nop
cmp
lcall
int
or
cmp
aad
push
je
ja
inc
inc
sahf
bound
in
mov
or
sarl
lock
xor
add
cmp
xchg
mov
fstl
test
pop
sbb
aad
pop
xchg
jp
shll
rcr
jae
cwtl
loope
cld
dec
orb
arpl
rcr
aas
jo
adc
out
dec
insb
cmpsl
sub
xor
dec
or
popa
mov
jmp
mov
jno
dec
loope
lds
cmp
faddl
mov
xchg
lea
fiadds
enter
fisttpll
inc
lret
icebp
inc
lcall
in
out
jnp
ret
ret
ss
push
cmpsb
inc
or
fldt
int3
inc
push
ljmp
or
push
push
or
aad
lods
neg
dec
insl
or
lea
shl
insl
test
mov
cld
out
cs
clc
out
pop
xchg
orl
aam
inc
jne
or
dec
or
es
push
loop
movsb
cmp
nop
popf
mov
out
test
rcll
lods
nop
mov
cmp
dec
cmp
sbb
movsl
jae
dec
in
arpl
icebp
gs
mov
add
sub
push
xor
iret
add
sbb
lds
aam
mov
xchg
pop
push
xchg
pop
mov
adc
mov
out
push
js
mulb
or
xchg
or
sahf
jp
cld
icebp
add
or
int
mov
mov
pop
push
xor
jne
adc
sbb
mov
inc
pop
stos
movsl
cs
add
ror
and
jg
sahf
mov
jg
lock
jecxz
lcall
out
dec
test
sub
mov
lcall
mov
and
gs
ret
pusha
push
push
sbb
dec
mov
mov
mov
icebp
lods
mov
xchg
les
out
mov
out
push
arpl
hlt
lea
cmpsl
ret
sti
int3
arpl
jae
pop
cld
cmpsb
dec
outsb
mov
dec
jns
pop
pop
test
lods
mov
popf
in
aaa
xchg
add
shl
or
sbb
movsb
mov
add
es
data16
mov
insl
cmpsb
inc
adc
add
jmp
xchg
mov
dec
lcall
jne
imul
cmp
outsl
adc
dec
repz
test
cmp
leave
fadd
mov
cltd
and
iret
push
daa
xchg
cmp
dec
lret
sub
inc
les
out
xchg
cld
mov
adc
iret
insl
dec
cmp
aam
lds
pop
xor
adc
inc
cmp
or
orl
mov
inc
jo
cld
shrb
mov
je
enter
inc
fwait
imul
hlt
dec
aaa
pop
lods
sub
repnz
pop
push
sbb
sahf
jb
ret
or
arpl
xlat
and
cs
jge
mov
cmp
adc
pop
push
int3
jnp
and
int3
xchg
add
add
push
aam
ltr
dec
cmp
int
daa
fldenv
fstpt
stos
jp
fstpt
cmp
jno
xchg
dec
out
xchg
mulb
push
cmpsb
inc
leave
clc
push
rcrb
push
sbb
jmp
insb
inc
dec
fld1
cmc
and
pop
movsb
or
mov
xor
fdivrp
pop
mov
and
xchg
inc
insb
lods
enter
add
pop
stc
mov
xchg
dec
pop
fcoml
in
shlb
xorl
fwait
lahf
lock
push
sbb
xor
test
dec
inc
inc
jno
mov
adc
mov
out
lock
leave
in
cmp
ja
inc
clc
fucom
pop
dec
mov
sbb
jne
stos
test
adc
insl
lcall
dec
das
cmc
fld
sti
in
addb
mull
loopne
mov
sub
arpl
push
inc
shlb
ficoml
xchg
fistps
fwait
into
xchg
cmp
push
sarl
in
mov
mov
cmove
inc
dec
add
popa
clc
out
dec
aam
dec
ffreep
jns
pop
jp
xor
cltd
mov
or
xchg
idivl
pushf
and
pop
in
push
sbb
push
lds
cltd
pop
push
out
lea
cltd
int
jl
add
push
aam
testl
testb
aam
fisttps
scas
ret
ja
sbb
cmc
mov
imul
mov
rolb
inc
pop
push
jae
dec
ja
aas
or
push
cmp
pop
jmp
paddq
mov
movsb
jg
jmp
jns
sbb
inc
cmpsb
fdivrs
insb
insb
js
fstpl
xchg
fucomip
sub
movsb
hlt
push
test
les
jne
cmpsl
xchg
push
xchg
scas
bound
fucomip
mov
repz
or
aam
pop
jno
insb
test
scas
dec
divl
in
gs
lds
xchg
pop
fdivs
pop
push
jl
mov
jmp
test
jb
stos
mov
push
cmpl
mov
inc
aad
push
orps
adc
fistpl
adcb
jno
mov
scas
push
popa
pop
push
out
ss
call
mov
mov
and
je
sbbb
adc
enter
sbb
leave
add
jo
ret
outsb
cmpsl
mov
jnp
push
xchg
fstpt
stos
fnsave
dec
jecxz
cld
icebp
mov
lret
out
mov
jb
jecxz
push
jle
or
cmp
in
shl
movsl
shrl
scas
inc
scas
mov
add
xchg
xor
and
movsl
mov
cmp
adc
mov
out
cmc
mov
sarl
and
jns
nop
popf
fninit
sbb
lret
pop
or
ds
xor
orl
jle
push
loop
jbe
std
pop
sbb
mov
aam
popf
into
lds
push
or
push
and
out
xor
fdivs
inc
jb
icebp
adc
out
jecxz
push
cmp
xor
adc
push
into
scas
sub
jp
jns
inc
cltd
sarl
enter
push
xchg
add
adc
cwtl
xchg
ja
shll
sti
jno
cmp
add
test
nop
sbb
and
mov
loopne
repnz
xorl
cs
xchg
rolb
fscale
sbb
clc
push
cld
sub
jmp
cwtl
adc
mov
push
iret
gs
mov
ljmp
sahf
iret
stos
xor
push
test
jp
sbb
push
aas
adc
xchg
adc
out
mov
sbb
loop
push
clc
mov
mov
cmp
inc
lret
xchg
call
mov
out
jle
out
scas
aas
call
xchg
push
xor
out
or
xor
imul
pusha
cmp
cmp
rcrb
js
in
dec
cld
nop
clc
divb
ficoml
cwtl
dec
sub
cmpsl
inc
stos
and
xchg
ljmp
mov
stos
fdivl
lcall
inc
in
jnp
std
rolb
mov
cli
push
ds
scas
sbb
dec
outsl
test
sub
lret
dec
insb
dec
pushf
jmp
das
aam
enter
je
pop
mov
or
sub
xor
out
stos
mov
pop
push
imul
les
scas
jmp
fistps
sub
push
inc
or
pop
sbb
rcll
xor
out
lret
sbbl
dec
adc
push
jl
inc
sbb
jno
hlt
adc
scas
push
cmp
adc
add
movsb
inc
and
jo
outsb
rorl
fst
sub
hlt
inc
push
adc
mov
xor
mov
mov
mov
mov
fs
cld
ror
je
pop
scas
sarl
mov
mov
ret
test
cs
inc
xor
inc
stos
rolb
xor
scas
or
mov
movsb
call
or
add
jo
and
cs
jecxz
pusha
xor
nop
leave
pop
imul
pop
cli
sarl
cltd
jbe
sub
cmp
push
out
rorb
adc
lret
jmp
sbb
data16
scas
jp
in
mov
rclb
xor
sbbl
movsl
lea
pop
cmpsl
rcl
dec
dec
es
dec
mov
inc
jno
shrl
popa
ss
test
pop
push
jo
push
call
dec
pusha
je
testl
inc
aam
mov
mov
mov
mov
xchg
xor
xor
jmp
scas
shlb
popa
jle
jle
dec
jl
in
push
or
ret
in
sub
jecxz
stc
js
xor
xor
push
push
jne
lret
push
dec
icebp
lret
ss
add
aaa
or
aam
cs
mov
sub
pop
xchg
push
xchg
addb
subl
xor
add
loope
fimull
cmp
jns
mov
loope
in
faddl
jecxz
outsb
mov
ss
dec
xchg
xor
sbb
out
addl
push
rclb
imull
fsubl
je
push
mov
pop
ficoms
sbb
in
mov
pop
jp
ds
dec
addr16
add
xchg
rclb
pop
and
mov
and
nop
imul
popa
mov
rclb
cmp
mov
lds
ss
mov
les
jne
jbe
sbb
outsl
dec
pusha
int3
repnz
enter
or
jmp
mov
push
and
test
insb
jo
arpl
imul
mov
jp
in
into
and
insb
orl
xor
xchg
pop
jmp
clc
arpl
gs
push
mov
fisttpll
jecxz
cli
in
add
ja
fisttps
clc
cmp
push
fisubs
cs
lsl
sbb
out
or
xor
adcb
jns
sub
cmp
jne
aam
push
dec
fs
jl
in
add
add
in
dec
pop
cld
shll
xor
push
clc
mov
mov
je
mov
sub
mov
lret
dec
add
push
cmp
and
cli
add
sub
add
cli
std
andl
push
rolb
sysenter
shlb
call
lahf
push
movsb
add
inc
cmp
mov
and
mov
xchg
js
sbb
mov
cwtl
lret
insb
pop
and
push
dec
clc
xchg
jns
hlt
pop
aam
fcomp
hlt
lea
inc
dec
add
incl
sub
sbb
stos
mov
imull
or
ret
aam
mov
lods
add
sub
inc
in
daa
subb
je
mov
push
jp
xor
fmul
aad
mov
rcrb
push
test
adc
dec
push
and
scas
inc
jo
mov
mov
mov
and
xchg
jno
fdivrs
aad
sbb
js
sbb
ja
pop
hlt
fstpt
fdivl
jns
iret
dec
sbb
push
sarb
xchg
mov
adc
adc
add
xor
pushl
pop
sti
push
jae
push
lds
mov
outsl
out
call
hlt
movb
sbb
cwtl
add
jecxz
sbb
adc
adc
pop
xchg
imul
nop
xchg
loope
dec
in
hlt
mov
or
pusha
xor
bound
dec
movsl
push
shll
test
xlat
jb
xor
sub
xor
aad
mov
fistps
loopne
sub
imul
xor
stc
lds
sub
mov
mov
or
and
add
add
loope
jbe
xchg
bound
lods
aam
mov
mov
popa
jne
pop
out
andl
scas
mov
xor
adc
mov
jns
jne
jne
ja
sbb
and
add
pop
js
cli
pop
push
aaa
xchg
notb
movl
into
popf
push
in
repz
mov
sbb
sbb
mov
xor
test
test
popa
scas
mov
scas
pop
inc
cmpsb
adc
jmp
pop
lods
cs
push
vpunpcklwd
or
jecxz
xchg
dec
mov
cmp
icebp
push
push
inc
scas
mov
ret
cmpl
sbbb
cmp
push
jg
mov
stos
xchg
outsb
push
xor
fnstsw
divl
aas
sub
test
xchg
jl
test
cwtl
ja
inc
inc
inc
push
movsb
test
lods
aaa
loop
notb
xchg
lret
xchg
sub
cmp
cwtl
gs
iret
ljmp
mov
cmp
ret
or
sbb
ds
pop
jb
sub
and
xchg
movsl
push
adc
int
lods
addr16
hlt
test
inc
stos
sub
je
dec
aaa
inc
xchg
sar
push
push
pusha
pop
pusha
jbe
icebp
jg
or
pop
popf
jecxz
leave
jo
mov
je
ds
inc
lods
out
sub
aam
or
inc
in
mov
adc
insl
mov
xor
mov
adcb
mov
lock
sub
xchg
jmp
push
pop
pop
inc
ss
push
pop
sub
pop
jl
or
pop
movsl
jg
fwait
xchg
mov
lcall
mov
push
dec
daa
adc
addr16
mov
mov
dec
scas
push
popf
rcr
dec
inc
jno
sub
push
sahf
pop
or
rclb
or
xchg
out
mov
xchg
inc
mov
inc
scas
repnz
xlat
sti
adc
mov
decl
inc
cmp
cmp
aaa
dec
mov
xchg
mov
pop
out
cld
pop
aad
jmp
ficomps
cmpsl
lcall
lds
inc
dec
push
mov
push
jg
sub
jbe
adc
fistps
into
adc
xchg
out
pusha
int3
pushf
fcmovne
ret
cltd
push
push
cli
mov
xlat
lret
popa
in
sbb
lahf
clc
mov
pmaxsw
and
mov
push
popf
dec
and
sbb
adc
nop
jno
insl
pushf
mov
in
sub
test
sub
out
mov
xchg
imul
arpl
incb
adc
loopne
imul
jo
loope
dec
sub
jle
repz
inc
xor
es
sbb
lods
mov
mov
lods
hlt
cmp
sbb
and
lea
fdivr
mov
push
je
pushf
ds
repz
or
ljmp
push
push
or
xor
xchg
jb
sti
loopne
mov
push
enter
sub
xchg
add
jns
mov
popa
stos
outsb
or
adc
or
adc
dec
jl
dec
in
aaa
xchg
pushf
outsl
fwait
loopne
cwtl
jg
sub
and
fwait
adc
inc
xchg
jno
pop
popa
mov
dec
leave
cmc
jb
mov
push
push
dec
aaa
jmp
pop
mov
insb
mov
dec
mov
dec
xor
sub
cmc
and
clc
sbb
loop
out
aam
pop
stc
add
jle
adc
scas
add
rolb
call
repnz
into
xchg
lds
adc
sarb
xor
dec
pushf
cmc
xor
jl
cmp
test
jae
and
cli
dec
mov
loopne
mov
shlb
and
shlb
adc
jo
inc
xchg
push
push
jae
icebp
push
cld
mov
push
lahf
adc
imul
fsubp
flds
lds
push
daa
aad
mov
mov
or
outsl
mov
iret
inc
push
sub
mov
outsb
andb
xchg
aas
mov
or
add
jecxz
mov
mov
outsl
jo
outsl
mov
fstp
push
adc
sbb
xchg
push
mov
ljmp
cltd
fistl
cmpsl
inc
xchg
mov
jns
pop
popl
int
add
aaa
cld
addr16
sub
mov
mov
jno
sti
inc
fmuls
mov
cmp
bound
rclb
xor
or
icebp
mov
ret
dec
loope
sbb
rcpps
jae
int3
lahf
insl
and
js
inc
push
cld
xor
push
mov
push
fistps
mov
ds
lahf
mov
aad
sbb
popa
cmp
xchg
or
pop
mov
xchg
mov
out
idivl
dec
lea
add
xchg
and
lods
cmp
jae
cs
repz
xchg
or
mov
call
or
sub
cld
adc
pop
and
aad
xchg
aad
or
je
adc
jno
arpl
popa
sub
ljmp
cmpsl
and
dec
decl
ret
mov
insl
dec
cs
jg
es
mov
ror
call
es
inc
push
jle
sahf
push
into
add
dec
mov
sbb
in
int
stc
fucom
cmp
xchg
aas
push
or
jne
jnp
xor
push
xor
inc
dec
inc
ror
sbb
or
movsb
pop
imulb
mov
mov
imul
stos
cld
mov
div
adc
jae
inc
test
lods
jne
mov
inc
outsl
lock
loopne
mov
jecxz
add
inc
jns
inc
cmp
xchg
sub
test
leave
dec
movsb
jmp
cltd
in
add
ds
cs
sarl
mov
das
xchg
cmp
push
les
roll
pop
cli
sub
jne
jp
aad
sbb
mov
leave
xchg
sbb
push
xlat
sub
jb
cli
mov
ja
out
fwait
inc
mov
subb
test
mov
mov
xchg
fs
jp
xchg
popf
or
int3
sub
clc
push
mov
mov
jnp
rcrl
loopne
rol
xor
dec
sti
rorl
xchg
cmp
data16
sub
xlat
in
pop
ja
mov
push
pop
lds
and
iret
inc
xchg
add
loop
ja
aam
enter
pushf
lret
pop
out
mov
nop
lds
sbb
repnz
xchg
push
xlat
xlat
in
movsb
imul
sub
xchg
add
and
hlt
cmpl
aaa
inc
adc
add
addr16
xor
and
pop
outsl
fistpl
sbb
jo
xchg
xor
notb
push
aaa
or
fdivs
mov
jp
push
in
xor
outsb
xchg
add
leave
sub
or
shlb
adc
incb
push
jle
sbb
add
jecxz
xor
adc
xlat
subb
inc
int3
mov
mov
call
ret
aas
sarb
push
pop
mov
test
test
ss
push
mov
call
pop
pop
call
mov
mov
jp
jnp
arpl
dec
repz
aam
cmpsb
adc
inc
ss
imul
lret
jge
fdivs
iret
push
je
fs
clc
pop
test
mov
xor
mull
inc
jbe
mov
loope
adc
imul
pop
mov
cmp
ds
ja
mov
xor
clc
daa
int
pop
fisubs
cli
xor
jmp
pop
inc
in
push
stos
leave
pop
je
dec
and
insb
clc
pop
mov
adc
cwtl
sarl
cmp
in
fisubl
adc
or
sbb
add
xchg
movsb
cli
shll
aam
jl
xchg
cs
push
inc
xor
lods
mov
inc
pop
or
xchg
dec
inc
imul
cmp
sbb
jecxz
jmp
mov
dec
dec
add
or
or
push
push
xchg
mov
and
xor
lcall
int
sbb
adc
ss
adc
nop
inc
cmp
lods
sub
push
xor
pop
aam
pop
orb
bound
push
sbb
subb
push
lds
fcmovnbe
jo
adc
fisttps
dec
lock
enter
xchg
sbb
lret
jg
push
shl
sbb
scas
iret
cmp
pop
dec
pushf
ss
cltd
int
lret
outsb
cmc
mov
out
ds
aas
or
or
xchg
mov
mov
popf
sti
mov
lahf
sbbl
inc
mov
jo
iret
jl
xor
add
imul
push
mov
or
sub
sbb
cwtl
das
loop
xchg
push
xchg
cs
mov
mov
mov
xlat
cmpsb
jge
mov
jns
or
frstpm(287
push
fdivrs
loopne
fsubrs
je
rorb
mov
xchg
push
daa
pop
pop
mov
lahf
sbb
mov
mov
mov
ds
out
sbb
loopne
loopne
ljmp
mov
cld
xor
mov
push
xchg
test
and
imul
sub
nop
pop
movsw
inc
cmp
mov
dec
mov
scas
and
insl
test
pop
jecxz
movnti
xor
sahf
aaa
and
pop
loopne
in
imul
sbb
ljmp
push
in
rol
lods
pop
es
dec
jae
test
in
fsubrl
xor
test
bound
in
adcb
jo
adc
dec
rcrl
dec
bound
mov
sbb
in
dec
mov
call
je
adc
xchg
mov
fstp
subps
pushf
out
or
imul
jb
jnp
dec
inc
aam
push
and
mov
dec
add
shr
jb
int3
jnp
sbb
out
dec
outsb
fistpll
sub
xchg
into
mov
mov
imul
xor
idivb
mov
pop
insl
pop
fs
jmp
inc
dec
fwait
imul
aam
insl
sbb
cmp
das
mov
add
inc
out
add
imul
and
adc
sbb
pop
sub
mov
xchg
test
push
cld
outsb
cld
mov
jne
inc
sbb
adc
jno
nop
jmp
inc
pop
cmp
movsb
mov
dec
mov
pop
push
cltd
repnz
xlat
int
pop
insb
sti
lea
adc
add
sbb
das
data16
push
pop
inc
push
mov
xchg
xor
enter
rol
xchg
mov
movsl
or
dec
mov
mov
vpsrlw
movsb
or
xchg
push
gs
ret
dec
fdivrl
shrl
lahf
ja
icebp
mov
iret
xor
push
and
sub
add
dec
and
xchg
push
jnp
sbb
in
dec
mov
sbb
jl
aad
fcomip
inc
mov
popf
shll
cmp
daa
call
sub
jbe
push
lret
pop
add
inc
repz
jo
and
pop
je
mov
jg
sbb
out
sbb
int3
and
sbb
push
jo
pop
pop
shrl
pop
xor
cmp
fildll
mov
add
and
and
mov
lret
jecxz
pop
jmp
and
mov
and
out
out
inc
js
pop
and
inc
scas
xorb
cld
lcall
and
mov
cmp
cmp
ret
adc
testl
sti
inc
fdivl
faddl
mov
jge
cmp
sub
pusha
cmp
jae,pt
hlt
jne
jmp
cmp
pop
test
sbb
cmpb
xchg
sbb
pop
loop
jmp
add
cmpsl
jae
and
je
fistpll
cli
out
fs
xor
cmp
or
sbb
push
add
pop
fsts
movsb
cmc
daa
jl
sti
jno
aas
das
cmc
rorb
stos
push
xchg
mov
mov
xchg
imul
adc
jae
addr16
mov
movsl
loope
pop
sub
dec
data16
andl
faddl
enter
and
mov
pop
js
jo
testl
sbb
int
xor
xchg
jmp
aam
fisubs
int
and
insl
inc
filds
add
sub
mov
aad
out
adc
pushf
int3
outsb
mov
lea
pop
addr16
xchg
dec
std
jb
jecxz
jno
xchg
and
cmpsl
dec
pop
cmp
frstor
mov
lahf
cmp
pusha
loopne
add
adc
fistpll
or
lods
mov
pop
ret
movsb
mov
dec
adc
mov
adc
sub
xchg
dec
cmp
adc
lods
jno
mov
jp
push
shll
mov
lock
gs
and
jae
mov
cmpsl
icebp
rolb
ja
daa
sub
std
call
mov
mov
fs
mov
hlt
scas
out
aad
xor
pop
shlb
fistpll
mov
inc
and
add
orl
xchg
adc
push
add
xchg
push
hlt
push
push
xchg
adc
mov
dec
lahf
add
jnp
xchg
lds
test
jnp
ljmp
pop
dec
in
clc
jmp
push
fimull
subl
aas
sbb
pop
lock
pop
scas
sbb
mov
leave
pop
fdivrl
jl
xchg
repnz
sbbl
xchg
mov
lahf
scas
push
adc
iret
imul
xchg
sbb
arpl
out
cmp
sti
mov
sti
mov
shl
sbb
test
pop
ffree
aaa
cmp
in
rcll
cld
mov
jbe
pop
sbb
stos
adc
cmp
aad
push
inc
gs
pop
jp
pusha
jns
pop
add
sbb
xorb
loope
mov
lods
sub
xchg
ja
fadds
int
lock
push
push
jno
inc
inc
mov
and
xchg
jl
unpckhps
test
rcrb
add
xor
inc
in
aaa
dec
mov
outsl
pop
push
add
pop
push
pop
dec
lds
outsl
xchg
int
inc
pop
adc
and
inc
mov
nop
rolb
cmp
insb
cld
lcall
pop
sub
add
dec
lcall
push
repz
out
mov
pop
jge
sbb
jae
js
sarl
sub
add
pushf
or
cmp
xor
stc
imul
icebp
cmp
adc
mov
dec
sbb
pop
push
jnp
cltd
and
lods
nop
mov
testl
testb
xor
mov
es
mov
lds
cmpsb
push
and
xlat
fnstsw
inc
cltd
push
pusha
sub
add
xor
mov
cmp
mov
repnz
xchg
addr16
inc
shll
or
rcrl
mov
iret
cmc
call
or
cmp
push
xlat
std
stos
pop
test
cli
dec
addb
sti
xchg
xor
fcmovu
out
gs
and
cmp
testl
adc
lods
out
call
int3
xchg
data16
data16
into
pushf
pop
jne
adc
idivl
mov
pop
pusha
jb
lods
gs
xor
xchg
lds
pop
loop
jae
pop
incb
pushf
pop
shll
popa
xchg
cmpsb
mov
or
and
dec
lds
out
popa
out
cmpsl
pop
pop
out
rcl
xor
sarb
fs
clc
or
mov
pop
into
cmp
mov
call
aaa
mov
das
aas
dec
xchg
pop
mov
call
shl
cmp
add
mov
mov
add
call
adc
ss
movsl
xor
sahf
xor
fldenv
or
add
pop
pop
push
leave
push
jno
jle
adc
mov
jns
mov
lahf
movsl
adc
dec
std
imul
sbb
inc
xchg
shll
mov
sbb
into
or
in
jae
or
mov
repnz
sbb
movsl
push
out
fwait
sahf
fcmovnu
sar
rcrl
inc
fadds
pop
icebp
add
in
leave
inc
lret
push
adc
inc
adc
arpl
mov
pop
push
jb
in
xchg
outsl
xor
inc
pop
out
mov
mov
aaa
rcll
outsb
mov
hlt
popf
fwait
inc
aad
push
push
sub
jns
ret
or
sub
scas
in
sahf
in
pop
push
stc
add
push
idivb
pop
leave
aad
sub
mov
mov
adc
lret
adc
dec
jnp
xlat
es
fs
cmp
xchg
adc
jae
xor
fmull
sbb
mov
cli
cld
mov
js
add
jno
dec
test
sbb
pop
leave
sbb
cmp
xor
mov
sbb
mov
shl
mov
mov
mov
lcall
sbb
mov
jge
sub
bound
into
inc
ds
xor
dec
stos
cmpsl
mov
cwtl
adc
arpl
jmp
pushf
or
lea
loopne
mov
nop
in
loopne,pn
jo
or
xor
mov
and
pop
xor
pop
aad
push
lcall
das
cmp
and
aad
pushf
mov
sub
xchg
mov
pop
movsb
jbe
dec
and
add
adc
fldcw
lahf
sbb
cmp
pop
adc
sub
adc
in
push
es
repnz
hlt
repnz
ljmp
ja
rcrb
dec
jp
fld
jmp
jne
imul
sub
in
mov
inc
test
movsb
test
loope
push
pop
fs
cmc
fildll
xor
sahf
bound
imul
cmc
fucomi
lock
add
push
sar
or
xchg
push
mov
push
push
aaa
enter
xor
int
cmp
int
enter
insb
inc
mov
lock
mov
jecxz
andb
shlb
daa
pop
adc
fistl
int
mov
arpl
sahf
shlb
sbb
jo
mov
ret
lret
test
es
and
pusha
mov
jmp
cmpsl
sbb
and
imul
fwait
in
jp
inc
rcl
jg
dec
jne
ja
inc
fbld
adc
xchg
adc
mov
ljmp
shr
ret
iret
imul
ds
and
dec
test
xchg
jno
sub
xor
outsl
mov
inc
in
xlat
pop
dec
jecxz
xor
jno
mov
pop
or
in
int3
fs
daa
jmp
xchg
psrad
rcl
sbb
cwtl
mov
cwtl
dec
dec
adc
sub
xchg
xor
outsb
or
mov
pop
mov
cpuid
lahf
mov
in
std
or
cmp
sub
or
cmp
add
add
xor
or
sbb
lcall
inc
js
dec
adc
mov
inc
in
dec
sbb
stos
ret
lds
inc
rcrb
movsl
mov
xchg
inc
out
push
outsl
xor
mov
jge
mov
and
mov
xchg
cmp
sbb
sti
mov
mov
mov
rcl
outsl
pshufw
insb
out
cmp
fldcw
enter
out
sub
pop
out
cmp
fs
push
mov
mov
sbb
loopne
sub
or
shrb
inc
shr
sti
test
aad
push
inc
push
sbb
mov
outsb
inc
int
aam
or
in
sbb
or
loope
shl
subb
cmpsl
inc
mov
dec
in
fwait
je
and
ja
jno
adcb
mov
cmpsl
sbb
sbb
cmpsb
repnz
ret
mov
jp
xor
xchg
and
loope
bound
test
sbb
rolb
dec
lahf
xor
pop
out
pop
jns
enter
aad
pop
sbb
hlt
popf
rorl
imul
add
out
xchg
enter
insb
adc
popf
or
out
sbb
inc
loop
shr
aam
fisubs
imul
mov
mov
repz
mov
cld
stc
push
jae
mov
xor
insb
out
insb
lret
imul
dec
dec
lret
data16
cmp
adc
loopne
incb
mov
xor
mov
test
loop
and
cwtl
pop
inc
xchg
push
pop
dec
movsb
cmpsl
hlt
decl
xchg
stc
mov
xchg
sbb
pop
mov
in
out
sbb
adc
stos
cmc
imull
fcoml
test
mov
pop
and
lea
mov
dec
cmp
icebp
jae
das
ds
mov
fstpt
mov
sahf
jecxz
inc
adc
jae
aaa
jle
and
jne
dec
fcoms
sbb
fcmovu
stos
mov
mov
push
int
out
mov
sbb
nop
imul
mov
adc
cmp
dec
mov
xchg
sti
popa
pop
adc
test
lea
mov
cltd
mov
pushw
scas
mov
pop
adc
lret
adc
and
push
inc
jmp
lock
js
pushl
jb
fcomps
add
jae
out
or
lret
dec
xchg
cli
icebp
xor
jnp
popf
pop
or
pop
pop
mov
push
and
shll
pop
and
mov
mov
inc
mov
fstl
sbb
insl
pop
pop
push
es
lea
lea
mov
and
push
mov
add
mov
push
lret
add
out
add
int
leave
into
imul
mov
or
test
es
push
mov
pop
mov
call
mov
outsb
cli
leave
fstl
out
jns
dec
xchg
sbb
movsl
imul
pop
in
push
sub
sarb
insb
ljmp
call
in
cmp
jecxz
fdivrl
adc
and
jae
mov
arpl
cwtl
in
xor
sub
pop
aaa
jno
add
mov
test
enter
outsb
addr16
fisubrl
mov
fcmovb
outsb
ss
jno
jg
jmp
sub
add
push
push
xchg
out
pop
adc
add
sbb
sbb
insb
cmpb
stos
mov
mov
orl
int3
adc
dec
prefetchnta
mov
xchg
push
js
mov
pop
neg
mulb
xor
mov
pop
cmp
movsb
xor
xchg
fsubl
xor
mov
push
loopne
fst
adc
lea
js
push
idivl
jge
sarb
mov
push
popf
shlb
nop
dec
jg
jbe
btc
rolb
ds
sbbb
dec
adcb
dec
sub
mov
xchg
jg
pop
jl
notl
enter
stos
aaa
inc
mov
add
jge
adc
stos
add
mov
and
jmp
test
dec
orl
andl
lods
arpl
negb
push
data16
dec
dec
xchg
adc
fchs
xchg
in
out
fisubl
insl
hlt
xchg
in
push
jecxz
out
mov
push
lahf
and
jnp
mov
leave
les
dec
and
jbe
pop
lahf
adc
scas
ret
fnstsw
mov
aam
repz
mov
or
xchg
push
movsb
mov
shll
mulb
mov
out
fists
or
inc
js
mov
mov
mov
stc
jb
sbb
adc
out
lea
mov
aad
shll
sti
popf
imul
pop
mov
mov
xrelease
inc
je
and
and
sti
enter
push
xor
fmull
mov
push
out
dec
jnp
call
or
inc
dec
popf
aaa
inc
jbe
lods
ds
cmp
dec
cmp
cmp
decl
mov
pop
xor
cld
ss
xchg
cltd
inc
pushf
dec
repnz
sbb
xchg
push
sbb
push
pop
cmp
pop
mov
stos
add
cmc
das
xchg
mov
adc
push
in
iret
fdivrl
sub
push
scas
sbb
jne
mov
sub
push
mov
xchg
xchg
push
fildl
daa
cmp
lahf
mov
fcoml
in
xchg
or
out
sub
pop
pop
in
rol
add
nop
pop
sub
js
cmpl
push
dec
inc
ret
stc
xor
sbb
dec
add
mov
cmpl
adc
pop
adc
jmp
xchg
jl
xor
bound
sub
fldenv
int
push
pop
test
gs
pop
jge
iret
aam
gs
jl
int
rcll
pop
gs
push
pop
insl
add
aad
or
push
jp
sbb
pop
push
in
bound
out
jl
sub
pop
xlat
subl
lret
mov
mov
call
dec
mov
cmp
fcmovne
inc
mov
jbe
cmc
xchg
mov
push
std
pop
data16
mov
out
mov
and
mov
int3
out
ljmp
pusha
cmpsb
mov
add
insl
mov
jl
movsb
ds
pop
movsl
inc
mov
pop
into
mov
xchg
lods
inc
inc
test
gs
int3
xor
cmp
in
bswap
add
fistpl
ljmp
add
icebp
fstpt
xor
in
xorb
cld
data16
or
or
sbb
fldenv
pop
pop
add
fcomps
jo
fsubs
je
add
fwait
push
push
dec
lock
jb
mov
pop
mov
pop
popa
fnsave
add
in
cmp
iret
sub
insb
or
das
pop
mov
sub
inc
jo
mov
and
cmp
lods
imul
leave
testl
pop
xchg
sub
jmp
push
mov
xor
and
andl
in
adc
sbb
shrl
inc
sub
decb
stc
push
fs
dec
out
mov
pop
je
popf
addl
or
ss
mov
dec
inc
adc
mov
xorb
in
mov
jmp
mov
seta
orb
xor
dec
dec
dec
pusha
sub
call
lret
popf
pop
jle
jne
sbb
push
fcomps
xchg
and
xor
loopne
sbb
mov
pop
sbb
add
adc
iret
add
in
std
jns
jno
call
pop
add
dec
fnstsw
jge
outsl
test
in
fcoml
test
test
stos
push
leave
sbb
adc
pop
sahf
mov
pushf
rorb
sbbl
out
call
aam
nop
fwait
pusha
ss
inc
mov
inc
inc
out
or
mov
sarl
cmpsb
and
xchg
imul
xor
cwtl
jle
cmc
std
imul
adc
jnp
js
out
mov
idivl
mov
les
cmp
xchg
in
jbe
clc
pop
mov
xchg
insl
in
cmp
cmc
inc
mov
or
inc
mov
jnp
mov
pop
mul
imul
shll
or
test
mov
pop
shll
fistps
sub
jno
jp
xchg
sbbl
push
jb
cmc
xor
call
cmpsl
mov
jns
bound
loope
ret
xchg
cmp
mov
addr16
fs
std
hlt
pop
sbb
repnz
sti
and
ljmp
inc
fldl
xchg
aam
sub
test
sub
cmp
dec
into
call
mov
xchg
es
cmp
pop
jo
loopne
and
pop
mov
loopne
in
lods
addr16
lea
iret
push
fstl
xor
sti
ljmp
fbld
jl
cmp
and
das
stc
rcr
dec
inc
add
das
nop
xor
and
stos
daa
lea
scas
sbb
pop
pushf
icebp
jmp
test
aad
add
xor
mov
inc
xchg
out
or
pusha
in
mov
loope
lret
pop
mov
call
or
sbb
mov
dec
lret
jl
sbb
push
popa
cmp
xchg
adc
cmp
cwtl
jae
pushf
push
adc
cmpsl
imul
push
cltd
movsl
sahf
or
add
push
fstpl
or
and
pop
stos
jp
mov
push
push
inc
jnp
aas
addr16
pop
and
inc
mov
adc
into
les
cmp
rol
and
jbe
adc
mov
test
jge
push
daa
xchg
and
mov
rcll
fdivrl
aas
and
and
fisubl
xchg
push
loopne
movsl
lcall
fs
imul
sarb
xor
mov
gs
inc
es
mov
fnsave
pop
dec
cli
das
fdivr
test
in
pop
pop
outsl
ss
cmp
pop
cmpb
scas
sub
xlat
cli
mov
das
sti
sahf
mov
outsl
ret
stos
dec
in
xchg
jno
movsl
fsts
mov
roll
add
sahf
xchg
test
mov
jbe
loopne
jnp
jmp
jge
fwait
hlt
jb
and
mov
mov
mov
fdivrs
fst
fcomps
movsl
test
test
add
inc
mov
in
inc
xchg
adc
int
inc
push
scas
push
gs
in
mov
mov
xchg
pushf
es
in
test
cmovbe
dec
lea
pop
js
mov
cltd
pop
pop
aas
mov
mov
lods
sub
cwtl
cmp
jecxz
lock
jne
scas
fimull
mov
je
xor
cmp
xor
lock
jp
sbb
cmp
stos
loopne
add
push
pop
daa
in
push
mov
push
pop
out
xor
cmp
push
movsb
and
ja
ja
adc
jo
rcr
jg
mov
hlt
xchg
push
icebp
jecxz
lret
xchg
bound
ret
dec
jge
jle
call
mov
mov
mov
sub
push
lods
jae
push
mov
push
in
aas
pop
adc
cli
adc
dec
fcmove
clc
mov
inc
cli
into
xchg
xor
cs
punpckldq
dec
test
stos
cmp
loop
mov
rcr
push
adc
pop
jno
sub
cmc
pop
adc
aaa
inc
sub
mov
rorl
in
shl
mov
and
xor
adc
jle
xor
jne
sbb
push
fistl
lods
test
lods
jne
aas
mov
leave
mov
dec
shlb
clc
push
jns
fisttpll
inc
dec
cld
xchg
inc
jle
push
xchg
add
sbb
lret
push
sub
mov
or
mov
jl
call
loope
nop
lcall
cmp
jmp
loop
ret
aas
cltd
lods
repnz
arpl
jl
pop
aam
ds
out
sub
leave
lea
loope
mov
mov
or
sarl
lahf
pop
imul
incl
cmp
mov
aam
es
loope
xlat
loopne
cs
icebp
dec
mov
xor
adc
jmp
fisubrl
add
push
add
mov
pop
lret
fcomps
flds
adc
xor
xchg
push
jbe
in
adc
sbb
cltd
push
ljmp
sbb
push
add
clc
mul
in
pop
scas
enter
mov
into
xor
pop
jecxz
fbstp
popf
xor
mov
mov
jb
sbb
sbb
loop
insl
or
mov
dec
pop
push
dec
jne
fwait
lcall
lahf
popf
inc
cmp
push
arpl
je
cwtl
subl
clc
out
mov
sub
sub
div
push
hlt
mov
xor
in
cmpb
mov
push
in
aas
and
cmp
mov
mov
ret
lock
dec
cmpb
jae
add
int
loopne
add
and
mov
dec
xor
int3
ss
xchg
sub
xor
sbb
lret
jg
mov
adc
add
repnz
xchg
movsb
xor
pop
cld
aad
xchg
add
and
sub
mov
mov
fstp
jg
pushl
xchg
cmp
pop
jecxz
in
push
scas
test
sbb
outsb
popf
lods
dec
ret
jne
aam
jae
adcb
lret
jb
jo
lea
push
imul
imull
ljmp
insb
sbb
and
repnz
mov
in
pop
ret
lahf
scas
jns
dec
pop
into
inc
pusha
ret
jne
mov
lret
mov
mov
cmp
inc
dec
cmp
sbb
js
mov
adc
adc
es
xor
int3
inc
addr16
insl
dec
pushf
sub
pushf
and
popa
dec
mov
inc
xchg
in
sub
adc
mov
jbe
nop
mov
loope
ds
xorb
insb
sbb
scas
cmp
mov
pop
inc
xchg
xchg
mov
mov
mov
loop
out
mov
pop
call
pop
adc
fstl
sub
mov
addl
pop
sbb
and
cmp
mov
or
pop
inc
hlt
in
pop
lea
cld
jecxz
dec
clc
add
mov
gs
sahf
adc
mov
mov
pop
out
mov
cmp
inc
mov
loop
test
js
mov
add
or
mov
jae
out
lock
aas
and
leave
data16
pop
pushf
push
cmp
cli
or
popl
xchg
pop
ss
push
ret
out
shll
mov
aad
adc
adc
inc
outsb
lcall
jecxz
sub
jne
mov
or
ret
xchg
in
movsl
mov
xor
outsl
data16
and
outsb
pop
fidivs
mov
push
in
pushf
jg
sub
add
jl
das
adc
or
mov
push
ret
repnz
inc
add
xchg
aaa
in
push
sub
int
in
mov
cmp
mov
jbe
lahf
lds
je
push
mov
xchg
adc
lea
fwait
adc
or
and
adc
lock
std
add
jecxz
inc
pop
push
int3
lret
dec
mov
mov
repnz
sub
cs
jne
xchg
xchg
mov
es
cwtl
cmp
imul
lcall
mov
testl
movsb
dec
mov
sub
fs
and
hlt
stc
pop
rolb
shr
mov
insl
out
mov
mov
test
jns
es
movsl
test
pop
jno
in
out
lret
inc
cmp
mov
cld
xchg
pop
stos
cli
pop
fwait
jecxz
jp
ret
popf
mov
mov
arpl
add
sbb
sub
cmpb
pop
jo
loop
sub
inc
push
clc
jns
int
xor
movsl
scas
mov
pusha
pop
and
or
jae
rorl
rcrl
pusha
xchg
pop
push
movsl
xchg
stos
xor
mov
pop
fildl
sbb
sbb
mov
in
cld
and
xchg
mov
sub
test
inc
xor
mov
lcall
cmc
insb
mov
inc
inc
xchg
cmpsl
and
out
sbbb
jns
and
inc
dec
lcall
cmp
cmp
jns
lock
popf
test
out
fs
popf
pop
sbb
dec
push
out
xchg
fxch
movsb
outsl
lahf
icebp
mov
fcoms
pusha
ja
les
cmp
fstpl
xchg
aam
adc
pop
mov
xchg
fidivs
cmpsl
repnz
loopne
sbb
pop
enter
dec
or
mov
sbb
mov
sti
outsb
sub
sahf
mov
aas
pop
mov
and
cmc
out
dec
mov
push
out
cmp
ljmp
add
popa
lock
jle
adc
cmp
xor
sub
loope
inc
lods
push
int
pmaxsw
and
push
out
fwait
inc
jmp
xchg
int
cli
cmp
push
push
jl
les
sub
cmpsb
mov
std
add
adc
das
dec
xor
testb
sbb
or
pop
sub
ljmp
add
ret
mov
inc
inc
imul
add
xor
or
inc
pop
push
pop
fsubl
repz
mov
push
rcrl
subl
ja
ljmp
adc
outsb
xor
es
xor
push
push
mov
sbb
inc
adc
test
out
mov
jmp
jle
xor
cld
pop
ds
dec
pop
outsb
mov
and
cmp
push
adc
pusha
or
in
mov
outsl
js
fadd
and
or
lret
push
loope
push
push
sarl
testb
jp
pop
sbb
loopne
pop
adc
and
pop
aaa
pop
adc
lahf
pop
lods
xor
jl
xor
adc
mov
mull
ja
pop
mov
mov
mov
movl
xchg
rcr
fmuls
push
imull
loope
decb
fldl
popa
scas
add
pop
mov
fsubl
mov
or
push
inc
push
push
imul
lret
push
movsl
cmp
or
adc
les
jb
cmpsl
or
mov
fsts
adc
mov
xor
or
add
xchg
les
mov
jbe
pop
pop
push
cld
inc
sbb
in
mov
inc
test
mov
cld
gs
pop
scas
call
and
or
push
sbb
popa
scas
and
inc
jmp
cmpsl
ss
imul
cmp
ss
test
dec
push
nop
pop
mov
fneni(8087
push
lret
je
je
jg
fcmove
sbb
incl
mov
imul
jge
lea
repnz
addr16
xchg
jge
mov
aaa
mov
inc
fs
test
inc
es
and
int
push
popa
ret
or
popf
mov
mov
xor
xchg
sub
std
xchg
add
jmp
sbb
std
adc
mov
push
xor
sub
jb
xlat
cmp
sbb
les
mov
sub
shl
or
mov
lea
dec
mov
push
xchg
push
jne
ret
addl
jp
cmp
adc
mov
pop
js
mov
mov
in
sbb
inc
jmp
pusha
sbb
sarb
mov
hlt
rorl
fcoml
movups
loopne
mov
ss
cmc
int
imul
xchg
jle
movsl
or
xor
mov
jle
adc
mov
pop
fwait
dec
pop
xor
jge
cwtl
mov
dec
mov
inc
mov
into
jg
add
mov
sub
stos
idivb
insb
loop
popf
rcl
daa
clc
aaa
push
inc
out
insl
sub
out
movsb
sub
and
cmpb
mov
aas
add
call
cmc
scas
push
daa
movsb
mov
inc
jno
adc
jge
dec
mov
mov
add
mov
aam
testl
sbb
jb
dec
jle
push
movsb
pop
sbb
push
lcall
shll
in
in
vpshab
jne
in
in
orb
sahf
lret
adc
xchg
dec
fmulp
mov
loope
xlat
push
aas
mov
rol
sbb
mov
mov
cmp
jecxz
movsl
cmp
addr16
xor
movsb
inc
fdivr
sbb
movsb
xor
xchg
xchg
sahf
rcrl
dec
sti
popa
imul
fstpt
pusha
pop
dec
mov
jp
xchg
sub
xchg
fildll
push
jbe
lret
mov
xorl
xchg
imul
jnp
push
dec
int
pop
out
mov
shll
fldt
sbb
xor
repnz
xchg
popf
dec
scas
insb
xor
push
and
push
js
mov
cmp
arpl
scas
fisubl
loop
in
cmp
ficomps
xor
call
mov
pop
pop
or
xchg
and
popf
sub
jns
jl
add
nop
xchg
mov
dec
in
cli
jmp
inc
mov
xchg
cwtl
das
sub
movl
push
and
inc
loop
es
jo
rcrl
dec
dec
add
shr
push
sbb
fsubl
mov
movsl
mov
arpl
out
clc
popl
shlb
mov
faddp
fucomp
addr16
ss
in
pop
dec
repnz
xor
mov
fucomip
sbb
inc
add
mov
mov
hlt
sub
xor
cmc
test
arpl
pop
cld
mov
mov
mov
xchg
ja
dec
dec
xlat
stos
pusha
pop
ret
jmp
pop
mov
push
xchg
adc
push
mov
pop
movsl
je
cmp
pop
mov
push
jbe
and
xchg
and
pusha
xor
cmp
or
mov
repnz
jb
jp
loope
sub
pop
ror
mov
xchg
loope,pt
fmulp
jg
pop
fsubrs
adc
in
cs
inc
push
pusha
dec
xor
arpl
into
mov
outsb
rorb
ficomps
or
pop
and
cmc
cwtl
pop
js
test
ret
outsl
iret
xchg
add
cmpsl
mov
push
push
jg
mov
ret
mov
and
xlat
mov
mov
mov
or
xor
test
xchg
sahf
fcmovnbe
mov
mov
ja
fidivrl
shll
jb
incl
fidivrs
pop
mov
mov
fstl
fcoms
jl
xor
frstor
push
lret
orl
dec
outsb
loop
loopne
insl
fbstp
mov
inc
test
adc
add
pop
xor
xorl
in
adc
into
iret
sbbl
xchg
stos
or
aas
repz
sarl
cmpsl
push
inc
fnstenv
nop
mov
rolb
out
xchg
nop
and
out
gs
mov
test
jmp
mov
sbb
push
push
out
inc
and
outsl
sbb
es
jle
mov
jo
add
cmp
addr16
ljmp
test
pop
iret
or
lea
imul
push
push
inc
shrl
pop
test
pop
mov
fsub
xchg
and
hlt
mov
out
mov
mov
xchg
shll
cmp
adc
or
xchg
fsts
lds
cltd
lcall
xor
subl
leave
notl
sbbl
adc
pop
inc
add
les
push
orb
lcall
sub
cmp
shrl
xlat
or
push
and
mov
mov
fidivrl
movsb
loop
cmpsl
ja
dec
sbb
pop
cmc
cmp
imul
repz
push
out
sub
test
jle
data16
repz
fs
lcall
and
cmp
sub
xchg
or
test
sahf
inc
add
cmp
lret
iret
inc
stos
outsb
jb
es
push
rcll
nop
loopne
push
repz
xchg
inc
adc
fidivrs
cmpsl
cltd
es
cmp
call
bound
mov
add
in
lods
add
fsubl
mov
ret
imul
test
mov
dec
cmp
mov
pop
cmp
inc
dec
sbb
icebp
inc
jl
shl
nop
dec
and
movsl
xor
lods
mov
in
pop
mov
jns
popf
fcoml
je
stos
and
mov
mov
inc
insb
ss
inc
sbb
mov
bound
sbb
es
sub
mov
lods
repz
pop
test
js
xor
cmp
mov
shlb
ljmp
push
pop
add
fadd
dec
mov
stos
and
add
fs
mov
iret
shll
fistpll
shrb
je
xor
push
int
and
fs
sahf
jne
stos
jle
orb
stc
push
hlt
jnp
enter
movsb
fsubl
cmp
mov
iret
lahf
data16
pop
jle
idivb
cld
add
mov
sbb
nop
ds
ds
inc
mov
sarb
loop
outsl
sbb
jbe
sub
mov
xor
insb
les
movsb
and
aam
sbb
mov
jb
mov
cmpsb
push
pop
sub
testl
mov
lret
mov
mov
insb
push
mov
cmp
shlb
stos
ds
jbe
inc
aam
or
and
push
xor
dec
insb
rcll
ret
jno
aam
ljmp
adc
clc
pop
jnp
fdivs
mov
mull
jmp
outsb
and
cmpsb
filds
fwait
andl
std
mov
int
pushf
push
test
push
iret
xchg
xchg
daa
dec
push
fimuls
mov
test
mov
nopl
sar
or
inc
push
mov
fisttps
xor
jge
adc
data16
mov
lods
addr16
mov
push
push
imul
or
repnz
dec
lds
xor
push
xchg
inc
jnp
mov
lea
stos
push
dec
sbb
adc
xchg
les
dec
fwait
inc
mov
adc
xor
mov
mov
jl
ret
scas
xchg
pop
mov
push
inc
test
mov
add
or
add
add
jp
sub
inc
outsb
mov
add
xchg
lcall
adc
imul
push
and
xor
cmpsb
ret
movsl
adc
xchg
mov
repz
mov
idivl
test
subb
add
sub
aad
mov
adc
jge
insb
cltd
push
mov
out
adc
jb
dec
mov
or
inc
aas
lods
add
pop
cltd
sbb
int
popa
cld
jbe
stc
negl
fldcw
cmpb
insl
xor
mov
lods
sub
jg
insl
aas
pop
fmull
lods
jbe
xchg
ja
mov
movsl
xchg
scas
mov
pop
std
rorl
sub
dec
add
jns
mov
fsubrp
mov
dec
je
pop
pop
dec
sub
jge
inc
scas
jg
inc
repnz
mov
cmpsl
dec
pop
xor
xchg
pop
addr16
mov
pop
lcall
adc
mov
add
pop
xchg
add
mov
or
jne
xlat
xchg
jl
test
rcr
push
cli
ss
sub
lea
push
sub
jo
test
lret
loop
lret
rcll
shl
sbb
rcl
das
lods
jbe
je
loop
lahf
cmp
mov
sarl
dec
fisubrl
push
xchg
cmp
jge
add
mov
cvtps2pi
movsl
mov
xchg
inc
shr
lcall
test
test
push
loopne
push
int3
jae
in
push
stc
cs
aaa
mov
mov
mov
aam
jns
hlt
ret
sub
jbe
adc
imul
stos
lods
sbb
aas
imul
sub
movsb
test
enter
pop
nop
mull
rdpmc
push
insb
fistpll
xchg
mov
or
ds
std
mov
mov
mov
sahf
add
into
push
mov
xor
push
cmc
xchg
dec
or
dec
cmp
loope
mov
movsb
inc
mov
mov
stos
test
and
pop
icebp
imul
rcrl
test
jae
and
jp
mov
sbb
iret
gs
jo
adc
mov
pop
xchg
mov
mov
rcrl
hlt
fwait
pusha
test
pop
mov
mov
out
iret
decl
fstp
push
or
stc
sub
inc
xor
xor
movl
mov
mov
xor
in
mov
sub
mov
sub
xor
jne
add
xchg
popa
sbb
jl
jnp
fiaddl
add
dec
sti
pop
mov
bound
add
push
std
out
adc
icebp
pop
mov
mov
pop
loop
test
add
inc
test
or
sub
push
cld
arpl
pop
sbb
fimuls
push
sahf
inc
push
scas
cmc
inc
arpl
xchg
xor
imul
fsubp
jecxz
mov
scas
cli
movsb
dec
jae
jecxz
leave
sbb
lret
pop
les
pop
jae
notb
or
std
in
pop
sti
adc
add
pop
cmp
sbb
in
xor
inc
mov
dec
adc
jp
ret
cltd
push
lock
rcl
jno
repz
xchg
ror
xchg
stc
fisubrs
jle
sbb
or
pop
les
jg
rcrl
cmp
inc
mov
sar
pushf
fld
fs
ret
add
pushf
push
xor
lret
jne
sahf
sub
into
cmp
sarl
sbb
test
and
mov
adc
jp
xchg
xor
push
scas
in
adc
or
xor
push
xchg
pop
adc
xor
xlat
lock
mov
lret
adc
mov
lds
dec
pushf
pop
push
fs
or
dec
aaa
mov
fs
sarb
or
repnz
cli
dec
shrb
ss
testb
stos
popf
push
mov
mov
negl
xchg
bound
or
ljmp
scas
int3
add
test
add
xchg
repnz
xlat
push
adc
insl
push
xchg
out
test
pop
je
roll
dec
and
mov
les
add
mov
xor
loop
lahf
cmpsl
icebp
jp
insb
push
add
adc
mov
push
scas
sti
ds
jae
lock
jle
push
hlt
lahf
fisubl
addr16
dec
jbe
cmpb
jbe
insl
push
in
dec
dec
cwtl
in
push
jae
test
add
mov
subl
jns
sahf
xchg
imul
or
xor
dec
pop
fisttps
pop
mov
add
pop
jne
fdivrl
pusha
hlt
movsb
outsb
jnp
and
sti
mov
xor
imul
rorb
and
sbb
rcrb
jmp
in
inc
fists
xorl
xor
push
xor
dec
cli
es
mov
in
pop
and
pop
and
cmp
mov
or
mov
mov
out
hlt
inc
dec
arpl
add
data16
fnstenv
repnz
xchg
dec
in
out
pop
lods
xor
or
sub
push
lods
push
pop
sbb
iret
in
pushf
pop
cs
outsb
sub
mov
fldt
xlat
xchg
movsb
mov
loopne
cld
fbld
mov
aad
je
enter
adc
lock
xchg
mov
