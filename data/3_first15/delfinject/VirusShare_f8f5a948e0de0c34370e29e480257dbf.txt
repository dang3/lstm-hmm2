inc
jg
add
add
add
add
xchg
inc
add
or
mov
and
divb
mov
push
fadds
daa
sub
mov
pop
insl
add
in
sahf
and
mov
push
add
jns
sbb
mov
cmp
ret
or
dec
in
mov
xor
outsb
add
xchg
adc
pop
or
in
cmp
push
ljmp
loope
call
popa
sub
mov
xor
sub
inc
cli
es
or
mov
push
push
xorl
int
push
lods
push
pop
pusha
js
jne
iret
popf
bound
jmp
mov
dec
loop
rclb
and
jg
lds
sbb
add
pop
add
iret
js
shrb
lret
gs
and
jns
int3
mov
mov
loopne
cmp
add
iret
ss
xor
cmp
sahf
or
pusha
pop
push
inc
shll
pop
sub
inc
mov
outsl
push
jg
jne
push
in
arpl
orl
mov
popf
outsb
add
flds
icebp
or
movl
les
cmp
mov
xchg
testl
test
ljmp
jmp
push
mov
sub
inc
sbb
popa
mov
jmp
mov
xor
jg
push
pop
jbe
movsb
aam
nop
sbb
cmp
adc
inc
jne
fsubl
roll
push
ret
into
js
xchg
mov
aad
sbb
jp
cmpl
mov
bound
pop
ret
ds
xor
sti
fwait
mov
add
andl
mov
sub
fdivrs
inc
out
sub
ja
xor
add
pop
aad
inc
jle
or
test
movsl
shlb
inc
aaa
adc
fimuls
mov
mov
jg
into
dec
shll
mulb
mov
hlt
mov
adc
pop
or
aas
xchg
xor
cmp
xlat
xor
mov
jb
cmp
shufps
push
lods
dec
andb
jecxz
jns
les
bound
pop
call
add
out
aas
loop
pop
arpl
or
sbb
leave
mov
adc
xchg
lds
pop
pop
cmp
pop
adc
sbb
in
insb
lds
loopne
xabort
aad
pop
dec
sub
fiaddl
imul
mov
inc
jnp
lahf
mov
mov
xchg
sbb
out
pop
lds
cld
pusha
jb
sub
jecxz
hlt
lock
and
fidivrs
aam
lcall
incl
add
mov
jg
in
jmp
sbb
sbb
jmp
adc
rcrb
cmc
lock
in
xchg
sub
repnz
ljmp
xchg
pop
inc
adc
xor
dec
hlt
lret
in
inc
push
mov
jnp
mov
js
xchg
daa
js
ret
xchg
out
cmp
pop
and
or
lret
idivl
mov
adc
push
jecxz
in
add
xlat
fcoml
mov
dec
mov
mov
clc
and
mov
jns
fistpll
xchg
push
cltd
pop
sbb
mov
lds
jns
mov
shl
and
inc
jno
add
push
scas
out
test
mov
das
xchg
out
xchg
xchg
xchg
int
and
xor
push
stc
lret
mov
insl
pop
inc
popa
testb
pop
mov
pop
movsl
mov
pop
xchg
std
int
loop
jg
aas
cmp
dec
dec
mov
es
fbld
in
fisttpl
outsl
lahf
mov
xchg
fiadds
xor
mov
enter
sbb
dec
ficomps
das
ja
cli
andl
jnp
dec
fsubr
sbb
popf
pusha
jecxz
inc
ljmp
jne,pn
sbbl
cltd
mov
fdivp
jb
inc
xor
jl
jns
pop
mov
xchg
lcall
pop
test
add
icebp
xlat
out
jle
add
sub
bound
push
bound
int
xchg
pop
jnp
mov
push
sti
push
or
fstpt
ret
sahf
mov
ss
dec
cmc
scas
out
imul
sub
aas
mov
add
fidivl
lret
jae
cmpsl
call
or
mov
cli
sbbb
cltd
pop
dec
imul
sub
cmpsb
mov
jnp
into
repz
xchg
fucom
mov
sbb
lea
lock
push
mov
sub
add
fiaddl
repnz
pop
popa
inc
mov
in
cmpsl
cli
jle
ljmp
cmp
fsubr
xchg
inc
jmp
faddl
addr16
int
adc
xor
lret
mov
jge
shlb
sbbb
lea
add
clc
xchg
mov
sub
fildl
mov
test
test
jno
xor
js
ljmp
lea
stos
add
sti
inc
aaa
jne
or
xorb
repnz
loope
int3
fistps
or
cli
mov
faddl
pop
dec
pop
pop
cmp
imul
lods
sub
jnp
dec
sub
cmp
test
inc
xchg
into
scas
repz
lock
fists
stos
jg
pop
or
xlat
scas
or
daa
out
sub
mov
popf
aam
xor
ret
and
mov
jbe
mov
ficoms
cmp
cs
xchg
scas
inc
and
pop
sub
pop
bound
push
push
push
std
call
call
sub
adc
jg
adc
stos
mov
jge
sbb
jl
sbb
cmp
dec
xor
push
jnp
scas
pop
and
int3
imull
mov
mov
shl
and
std
and
loopne
fs
mov
mov
adc
mov
sub
jg
es
das
in
xor
xchg
pusha
int
or
imul
fcmove
stc
jo
cmp
ljmp
imul
lcall
or
mov
xchg
push
bound
and
je
xor
jbe
mov
lretw
adc
lods
adc
inc
std
gs
nop
cmp
std
xor
adcb
lods
ss
subb
pop
mov
scas
std
mov
mov
lods
mov
int3
push
inc
mov
daa
push
outsl
pop
mov
sub
cmp
rcrb
icebp
adc
xchg
bound
mov
push
rcrl
pop
pop
push
push
push
push
fstl
push
or
mov
adc
scas
rol
mov
fsubl
mov
vmovshdup
mov
mov
adc
mov
pop
out
push
or
xchg
sub
and
jmp
xchg
test
fldt
mov
cmp
push
pusha
test
rcrl
jns
andl
clc
xor
fmul
jl
imul
test
inc
inc
jnp
mov
test
or
pop
xchg
in
stos
cmpsl
xor
cmp
pop
das
push
nop
ss
mov
fdivrl
mov
aaa
and
mov
or
fcompl
andb
jmp
add
mov
dec
sub
xchg
pop
lret
int3
insb
dec
and
leave
dec
imul
out
imul
arpl
mov
les
lds
out
mov
jl
out
in
mov
aas
frstor
mov
aad
stc
mov
loopne
push
mov
pusha
jbe
pop
repnz
pushf
fcoml
mov
lret
cmp
or
xor
cmp
adc
loopne
ret
popf
insb
cld
addl
rcl
xchg
in
jmp
daa
pop
xlat
je
sbb
jb
stos
idivl
push
mov
push
jbe
test
arpl
push
je
jge
adc
cltd
dec
in
fwait
xor
ds
pop
test
add
push
es
sarb
pop
pop
arpl
mov
jnp
fdivl
jg
fadds
shlb
sbb
cmp
push
and
popa
insb
cmc
dec
sub
cmp
inc
mov
repz
adc
aad
repnz
stos
push
out
pop
mov
dec
repnz
cld
adc
fld
xor
dec
std
sub
ret
fdivs
or
adc
mov
call
xchg
jecxz
fmuls
lret
mov
cmp
arpl
ja
push
mov
push
or
sbb
push
jns
mov
add
push
xchg
ljmp
inc
mov
stc
sub
pop
fwait
sahf
xchg
in
jecxz
out
sbb
pusha
mov
lock
or
xchg
xor
arpl
loopne
vshufpd
fsubp
loope
mov
sub
pop
xchg
cwtl
or
rcr
add
mov
adcb
aam
xchg
pop
dec
mov
or
insb
lahf
popa
xor
das
dec
fnstenv
std
outsl
cmp
jp
rclb
sub
in
cmp
xor
xchg
repz
mov
out
rcrb
dec
jl
aad
lcall
sbb
adc
loop
inc
fnstcw
loop
stc
in
movsb
dec
sbb
cs
xorl
add
lahf
add
in
jnp
rcr
mov
sahf
pop
lret
mov
outsb
mov
mov
adc
sub
out
mov
sbb
lret
cltd
xchg
shrb
dec
fisttpll
movsb
cmpsb
arpl
push
push
jmp
ljmp
fidivrs
lds
push
in
jb
std
repz
xchg
stos
push
test
pop
sbb
mov
and
cmpsl
push
leave
fcoml
aam
or
daa
mov
repz
mov
lds
sub
cmp
xor
iret
sub
mov
hlt
and
and
daa
mov
cmp
cmp
das
popa
push
jo
push
mov
mov
lret
cld
gs
fs
adc
inc
inc
sbb
and
mov
out
in
xchg
inc
adc
or
fcmovnb
and
inc
les
push
loop
or
cmp
rclb
ret
cmp
aas
sbb
pusha
add
cli
mov
adc
fisubrl
xor
clc
nop
loopne
add
movsb
cmpsl
repz
jbe
rcll
cmp
jp
xchg
into
pop
out
loopne
cld
and
pop
iret
sub
inc
inc
sahf
int
sti
pusha
sub
inc
in
mov
mov
pop
cld
lahf
dec
xorl
icebp
sbb
aas
and
adc
andb
aaa
imul
insb
mov
sub
mov
int
cmp
aas
lcall
add
xor
cmp
test
jl
jns
cmc
into
rclb
mov
xlat
pop
push
test
cld
loope
scas
add
mov
in
xchg
and
dec
movsb
ficoml
add
mov
fdivrs
lock
scas
dec
fiaddl
dec
push
dec
ss
push
jns
dec
cmp
sub
xchg
sub
aad
fsubrs
sti
xor
mov
jp
jnp
xchg
ficoms
in
sbb
loopne
add
lret
push
mov
inc
sub
js
scas
imulb
insl
fdivs
in
arpl
and
inc
add
dec
mov
mov
push
mov
adc
push
cli
ds
or
mov
pop
add
mov
or
inc
mov
adc
push
out
ja
popf
insl
mov
aam
sbb
jmp
cld
mov
aad
cld
adc
lret
repnz
in
daa
mov
dec
push
xor
sbb
loopne
in
ret
cmp
inc
xlat
xor
gs
xor
cmp
les
aad
push
jne
lret
sub
adc
stos
mov
fiadds
pop
movsb
push
dec
pop
test
out
repnz
pop
popa
cmp
and
inc
sbbl
shrl
cltd
fwait
in
enter
leave
lea
add
pop
adc
mov
rcll
dec
cmp
xor
es
sbb
sbb
adc
adc
jg
aas
cltd
mov
mov
jae
mov
xchg
outsb
xchg
cld
adcb
es
pop
and
int3
leave
mov
dec
or
shl
sub
cmp
inc
ljmp
rolb
add
pop
push
je
dec
mov
iret
rorb
push
lea
lret
pop
mov
int3
bound
mov
jae
int
cmpsl
mov
jbe
es
pop
mov
daa
addr16
push
xor
insl
xor
cmpsb
cwtl
cmp
inc
sbb
ja,pt
fwait
popf
mov
loope
cmp
scas
sub
push
je
cmp
mov
cs
push
lcall
jb
adc
add
negl
or
icebp
cmp
pushf
test
dec
xor
xor
repnz
test
fcoms
add
ficoms
enter
cmp
idivl
push
cs
and
push
xorb
roll
push
fwait
movsb
cmp
add
fidivl
imul
inc
inc
ret
adc
es
inc
paddw
dec
insb
scas
dec
push
out
pop
lcall
pop
in
ret
call
inc
sbb
push
mov
jl
ret
and
js
in
ljmp
or
mov
inc
add
imul
mov
or
arpl
jbe
sbb
pop
jb
ss
js
sbb
lahf
dec
pop
or
stos
into
outsl
lret
loopne
and
sbb
fdivl
je
mov
in
mov
push
outsb
ljmp
xor
ss
lods
jmp
shll
shl
xchg
jae
jbe
dec
dec
or
mov
stc
lahf
sahf
cmpsl
mov
dec
push
fs
and
daa
cmp
fmuls
sub
and
adc
and
xchg
adc
push
adc
mov
pop
sbb
enter
fnstenv
icebp
scas
xchg
pop
enter
push
in
ljmp
js
add
add
enter
scas
loop
js
mov
pop
xlat
pusha
xlat
sub
xchg
mov
cs
bswap
arpl
sub
pop
ja
shlb
adc
inc
fisubl
enter
cmpsl
fwait
lods
loop
test
push
fwait
insl
jno
cld
stc
int3
xor
or
out
jne
push
pop
popf
in
repnz
lods
adc
sbb
jb
ret
sbb
popf
out
mov
and
mov
mov
adc
or
out
clc
or
data16
push
jns
adc
mov
aas
cwtl
popf
addl
cwtl
mov
cmpsl
jbe
mov
shlb
mov
pop
fdivrs
call
cmc
fsubs
bound
test
iret
inc
mov
inc
frstor
lock
adc
imul
cs
les
cmovne
sbbb
pop
sub
inc
scas
inc
pop
imul
lret
cltd
clc
pop
je
mov
sbb
insb
push
out
fldcw
lea
cmp
mov
into
jne
push
loop
jg
jg
cmpsl
push
cs
sbb
leave
sub
mov
mov
cmpb
inc
mov
adc
cwtl
jnp
bound
cmp
jecxz
mov
inc
mov
sub
cmp
movsb
fiaddl
call
call
xor
cwtl
lret
imul
xlat
adc
and
mov
leave
mov
call
nop
cli
mov
cld
jmp
cmp
dec
xor
popa
lods
jmp
mov
scas
jl
mov
out
arpl
std
add
jecxz
cmp
ret
mov
lods
cmc
push
xchg
rorb
aaa
lret
sbb
inc
ja
enter
xchg
jle
aam
adc
hlt
shlb
lret
popa
stos
pushf
cmpsb
sub
xor
bnd
pop
in
imul
jmp
sbb
cmp
xchg
mov
mov
aaa
mov
test
icebp
or
test
outsb
cltd
gs
loope
fiadds
push
dec
pusha
sbb
movsb
lea
push
add
pop
jne
or
and
sahf
xchg
aas
cld
adcl
pop
cmpsb
sbb
loop
add
pop
push
fildl
lret
pop
xchg
lcall
xchg
stc
dec
fs
jle
pop
xor
or
insb
xadd
mov
rcr
pop
test
mov
fcomi
cld
enter
popa
and
fchs
or
lcall
popa
int3
sti
out
pop
das
adc
lcall
decb
sbb
cwtl
sbb
push
adc
rcr
out
xchg
insb
mov
int
inc
push
mov
sbb
sbb
and
neg
adc
dec
add
jmp
or
imul
push
sub
sub
inc
sahf
push
loopne
ljmp
mov
out
daa
negl
shr
xor
adc
inc
xchg
shrl
cmp
fsubs
inc
push
cld
fdiv
rorl
loopne
ja
call
pop
xchg
add
jp
or
popf
or
jno
add
or
push
fcmovnu
jns
iret
mov
cmp
adc
lcall
sub
or
je
popf
xlat
bound
and
pop
push
adc
push
fcmovnu
inc
xchg
pop
sbb
lods
dec
out
mov
mov
cld
addr16
popl
fistl
out
sub
lds
or
movsl
fmul
fwait
std
adcb
adc
mov
in
dec
pop
int
cmp
scas
push
sarb
in
mov
jecxz
or
aam
daa
sbb
mov
inc
cmpsl
mov
jle
sub
sahf
mov
aaa
in
icebp
mov
insb
sbb
enter
mulb
scas
fnstsw
and
jb
imul
jecxz
adc
iret
mov
xchg
jl
das
jg
icebp
imulb
icebp
call
aaa
lcall
popf
insb
clc
lods
mov
and
orl
loop
xchg
add
and
or
or
jne
std
lds
and
xchg
push
scas
jl
call
out
push
pop
cmp
push
fisubrs
stos
sti
fst
test
add
mov
pop
icebp
add
cmpsl
cmp
mov
push
int3
xchg
sub
rcrl
sarl
testl
repnz
leave
mov
push
movsb
mov
rcr
lods
test
push
adc
cmp
insb
aaa
ljmp
or
mov
aam
cmp
arpl
dec
imul
movsb
std
xchg
popf
mov
xor
cmp
lods
ret
mov
iret
enter
fwait
in
pop
sahf
das
inc
xchg
xchg
imul
pop
inc
ror
jmp
out
inc
and
jmp
fiadds
xlat
imul
or
mov
popf
shlb
pop
das
nop
add
adc
lret
push
push
sub
push
in
xor
flds
or
jno
mov
xchg
lock
cmp
scas
sub
add
pop
cltd
lock
cmp
andl
xor
xchg
mov
inc
lds
fsubrs
adc
jecxz
sti
dec
into
pusha
sbb
mov
add
push
dec
lahf
out
sbb
loop
cmp
in
leave
push
fucomi
inc
xchg
imul
pushf
or
push
mov
clc
mov
xchg
ja
aaa
outsl
addr16
jmp
adc
out
xlat
mov
rolb
sbb
push
adc
mov
idivb
inc
out
outsb
sti
inc
inc
inc
cli
push
jo
rolb
jae
jnp
or
je
xchg
addb
add
leave
pop
in
fdecstp
int
lds
dec
xchg
jg
xchg
insl
std
loope
inc
stc
ljmp
push
inc
pop
aad
mov
fistpl
pop
stos
lcall
and
das
mov
add
mov
test
movsb
imul
out
add
out
int3
std
jae
ret
sarb
hlt
xchg
pushf
mov
adc
inc
or
xchg
pusha
iret
popf
cmp
bound
lret
jl
mov
jle
mov
or
orb
xchg
es
je
or
repnz
es
andl
xchg
inc
add
testl
dec
inc
jnp
leave
fmull
insb
pop
clc
out
or
daa
mov
push
xchg
pop
mov
pop
mov
xchg
stos
orb
xchg
mov
outsl
mov
sub
sub
roll
lcall
movb
sarb
mov
push
and
enter
shrl
xlat
sub
pop
xchg
push
or
orb
pop
ret
xchg
or
in
inc
jno
mov
aad
lds
dec
imul
inc
repnz
sub
es
xor
pop
mov
or
popf
mov
mov
movsl
jns
push
cmpsl
add
mov
and
inc
int3
pop
gs
mov
and
movsl
lds
add
mov
add
jae
push
clc
les
and
into
ds
xor
inc
movsb
pop
mov
xchg
aam
push
push
fidivl
xchg
pop
inc
addr16
loopne
test
pop
mov
sub
test
sbb
add
out
scas
int
sqrtps
divb
rcr
or
push
mov
xor
outsl
cmp
cmp
mov
mov
xchg
push
stc
inc
test
xchg
pop
or
jge
pop
push
add
inc
out
push
push
lcall
sub
push
jl
rcrb
or
sahf
cmp
add
in
mov
pop
add
je
aad
adcl
mov
cmp
leave
jge
adc
and
add
insb
lret
cld
dec
or
fldl
mov
and
xchg
cs
fs
ljmp
jg
lods
adc
rcll
in
pop
mov
insl
jge
jl
adc
adc
das
jo
outsl
jg
lock
lock
jge
sarl
xchg
lcall
inc
repz
insl
jo
fldcw
pop
xchg
out
mov
notl
int
push
mov
push
xchg
jns
out
sbb
fwait
adc
sub
das
lods
jbe
xor
rorb
xchg
pop
subb
sahf
repnz
fwait
scas
pop
cmpsb
cwtl
test
sbb
aaa
test
jg
pop
cmp
ljmp
das
jge
lods
call
call
test
outsl
adc
mov
punpcklbw
loop
imul
pop
inc
dec
cltd
inc
nop
lcall
push
mov
jnp
mov
mulb
sbb
and
jecxz
push
xorl
cltd
addr16
sbb
or
xchg
mov
movsl
mov
sub
test
lea
jmp
aam
fiadds
lret
pop
cwtl
jae
add
clc
adc
sbb
loop
shrl
fisubrl
outsb
pop
inc
push
xchg
jg
fimuls
cmp
cwtl
or
test
and
add
jmp
fisttpll
sbb
xor
in
pop
pop
es
rorl
push
add
adc
jb
into
lcall
stos
mov
out
mov
dec
stc
cmc
and
mov
in
xor
xor
adc
out
push
or
in
loope
imul
mov
popa
jne
lock
loop
mov
add
mov
movsb
xchg
xchg
hlt
jge
xchg
imul
xchg
push
jnp
rclb
cmp
and
cmc
sbb
xlat
je
inc
inc
inc
lock
bound
pop
test
repnz
sub
xor
ss
dec
pop
jg
fwait
sbb
sub
and
mov
xchg
add
popf
jno
and
push
scas
sub
and
dec
push
mov
push
imul
test
rcll
xor
lret
ljmp
jns
popf
setbe
adc
cmpsl
subb
cmpb
mov
orb
lock
mov
jecxz
lcall
cmp
add
mov
idiv
ja
or
ss
in
sbbb
mov
out
dec
repz
inc
jl
adc
jl
cmp
add
cld
in
je
add
and
test
insb
inc
daa
xchg
mov
cmp
push
lret
bound
push
cmpb
sbb
xor
fistps
mov
fistps
aam
adc
into
call
sub
dec
mov
nop
ds
jmp
xor
or
dec
pop
std
lahf
adc
incb
in
mov
mov
enter
mov
subb
ss
push
enter
lahf
sbb
mov
push
in
insl
ljmp
sub
jbe
sub
fmul
mov
cmp
insl
jb
les
sti
arpl
out
insl
imul
add
pop
xchg
fsubl
xorb
jg,pn
enter
cli
mov
call
ffree
cmp
mov
and
inc
mov
clc
pop
lret
lcall
in
shrl
mov
rorb
dec
aad
lret
adc
xor
xchg
ficomps
sub
jo
xchg
addr16
adcl
cmpsl
dec
sbb
mul
adc
js
cmpsl
stos
push
loope
out
jno
mov
xchg
sbb
push
pop
mov
in
pop
mov
leave
adcl
cwtl
aaa
push
jae
cltd
repz
outsl
loopne
popf
ds
stos
inc
push
push
aaa
adc
cmp
add
dec
les
pop
fnstenv
popa
push
leave
jb
ss
mov
pop
pop
add
pop
xchg
add
inc
in
mov
ret
lods
cwtl
xor
popa
in
notl
lock
pop
scas
sub
insb
insb
dec
sub
inc
mov
xor
loop
outsb
push
sub
popf
push
stos
inc
popf
push
fadds
jp
sbb
jae
mov
int
sti
mov
push
es
cltd
out
sbb
test
pop
jg
mov
sbb
bound
stos
jns
jne
xchg
fisttps
fisttpll
arpl
dec
or
xor
js
out
cmp
lea
add
icebp
rorb
add
imul
pop
xor
pop
les
jge
sbb
mov
mov
mov
pop
or
dec
inc
popa
lahf
in
orb
in
int
mov
decb
enter
sarb
js
dec
and
sub
sub
mov
fs
movsl
adc
scas
xor
adc
sahf
mov
push
insl
cmp
add
xchg
loope
jns
pop
jp
aas
and
dec
repz
ret
std
into
pop
leave
sub
jmp
mov
ss
fs
lahf
inc
mov
cmp
mov
loop
nop
mov
push
sub
mov
lea
dec
dec
mov
and
cmp
fmul
dec
xchg
inc
push
aas
jno
fisubs
dec
adc
and
xchg
xor
xor
jg
pop
push
adc
leave
or
sub
xor
pop
jmp
push
vpsubq
add
fisubs
add
pusha
ja
outsl
sbb
cmc
call
mov
adc
mov
sbb
setno
ret
leave
cwtl
sbb
mov
cwtl
xchg
add
mov
or
daa
xor
push
ljmp
mov
inc
stos
mov
negl
adc
aas
mov
sub
inc
and
xor
push
test
lret
push
pop
xchg
jecxz
in
shufps
cmp
out
out
sub
fmull
inc
push
add
cmp
sub
mov
dec
loop
adc
scas
lcall
jnp
sub
cmpsl
fnstenv
adc
lods
faddl
jns
into
lea
or
xlat
mov
js
into
fwait
dec
stos
shlb
and
imull
gs
xor
jnp
jp
mov
stos
out
fildll
data16
cld
scas
dec
jnp
jb
sarb
fcoml
xchg
sub
adc
movsb
shrl
pop
sub
sub
jno
lret
aas
jp
mov
outsb
sub
loope
cmc
pop
test
pop
lds
or
pop
lcall
mov
jns
mov
pushf
mov
push
push
xchg
xchg
push
sbb
shll
test
insl
mov
cmp
data16
stos
stos
rolb
mov
adc
lret
add
or
in
dec
pop
jne
mov
insb
inc
es
cmp
scas
inc
ret
rol
imul
aas
pushf
shrl
aam
push
pop
adc
push
mov
jmp
in
jecxz
stc
in
mov
cmp
xchg
push
mov
in
mov
fsubl
cld
enter
icebp
inc
in
jle
add
mov
xchg
add
pop
lret
mov
jge
sub
pop
fwait
push
adc
sub
aam
and
xor
inc
int3
push
xchg
inc
add
shrb
push
fstpt
into
or
push
cmc
aaa
lret
or
sahf
repz
rorb
or
mov
pop
dec
jae
stos
adc
insl
xor
ja
icebp
ret
lds
inc
sarl
arpl
lods
inc
shll
jmp
sub
sub
les
and
mov
in
in
dec
push
xchg
xchg
pop
mov
mov
je
pop
sub
inc
int3
jle
movsl
popa
inc
mov
mov
das
insl
loope
fsts
cmpsl
pop
and
loope
mov
lods
pop
inc
psubusb
mov
iret
or
stos
call
sbb
aas
out
and
jmp
mov
inc
call
fwait
sub
into
xchg
adc
lret
add
hlt
test
mov
insl
mov
xlat
cmpl
mov
or
push
lock
jbe
add
sbb
mov
std
xlat
lahf
mov
out
sub
jo
jb
mov
ficompl
xor
out
dec
scas
shr
std
sbb
and
mov
push
cmp
pusha
bound
jns
jg
mov
xchg
jno
fnstsw
adc
mov
subl
push
add
ds
rclb
push
or
and
lcall
ja
rcl
mov
shrb
or
mov
dec
lods
addr16
mov
cmc
jge
xchg
pop
js
cmp
and
test
ds
ret
add
xchg
loop
xchg
mov
imulb
lods
cmp
dec
iret
xchg
ljmp
pop
cmpsb
and
and
fdivs
lds
inc
push
adc
pusha
inc
icebp
rclb
mov
jl
jne
or
lcall
jge
cmp
jg
jp
push
mov
and
jmp
or
pop
mov
out
pop
xchg
inc
xor
adc
scas
sub
out
out
in
dec
pop
mov
fwait
add
pop
arpl
js
adc
or
fs
hlt
push
iret
pop
jbe
push
push
int3
sbb
aam
fisttpl
ficoml
jl
cli
xchg
popf
in
jb
ljmp
mov
outsl
cmp
push
sbb
outsb
outsb
sbb
push
imul
pop
bnd
push
data16
inc
or
push
push
lea
push
clc
pop
cwtl
jge
pop
into
add
loopne
sahf
or
dec
and
fstps
pop
ljmp
sbb
inc
lcall
sbb
shll
loopne
lret
addl
push
jge
repnz
fsubrl
fnstenv
sub
add
xchg
int3
scas
addb
mov
fimuls
out
adc
outsb
mov
jp
iret
into
pop
add
mov
mov
add
or
rclb
push
out
jne
and
xor
fiaddl
jo
stc
push
rol
dec
mov
in
inc
loope
mov
outsl
sub
mov
ja
insb
pushw
mov
push
je
stc
es
push
sbb
test
jae
xor
or
int3
stos
mov
cmp
xor
iret
sahf
sti
xor
cmc
inc
pop
push
hlt
cmp
push
dec
clc
aaa
mov
push
addr16
js
sbb
into
out
out
repz
lret
sbb
sub
bound
push
xor
loope
jne
inc
inc
push
dec
jo
repz
jecxz
or
dec
sbb
mov
sti
pop
xor
imul
or
cmp
xor
pushl
out
ja
cmpsb
pop
fs
xor
add
out
cmpsl
clc
cli
sbb
icebp
xorb
sbb
negl
sub
mov
pop
and
icebp
or
sbbl
add
mov
test
add
cmpsb
mov
jg
scas
sub
rorl
xor
mov
rol
push
mov
push
xor
pop
shl
dec
or
xchg
jg
or
mov
adc
popa
mov
pop
mov
outsb
ficoml
mov
shll
and
lock
popf
imull
std
push
adc
es
push
lock
dec
mov
xchg
mov
aad
lret
cs
and
mov
pop
pop
sbb
stos
outsb
popa
dec
rorl
xor
sub
test
pop
inc
push
out
pop
inc
neg
imul
lret
negl
out
das
adc
sbb
jbe
fadds
stc
into
inc
popf
iret
aam
pop
jae
xchg
jle
mov
or
cwtl
sub
xor
add
mov
repz
adc
push
movsl
mov
out
inc
jnp
push
add
or
xchg
adc
mov
mov
sahf
test
inc
repnz
fildll
ficompl
sub
inc
fwait
cld
aaa
lret
sub
mov
push
push
mov
bound
push
push
lret
add
loope
or
pop
fadds
stmxcsr
pushf
inc
aas
out
mov
mov
dec
xchg
xlat
pushf
shrl
std
clc
sbb
mov
pop
mov
lcall
popf
shll
mov
out
insb
nop
in
mov
push
jecxz
jg
stos
xlat
fnsave
repnz
outsb
out
insl
inc
je
imul
sbb
xor
les
and
dec
iret
popf
push
daa
dec
outsl
xchg
scas
push
adc
jecxz
cmp
dec
xchg
inc
leave
mov
aam
js
push
sbb
mov
lret
js
sbb
aaa
add
adc
and
lret
icebp
fidivrl
cmp
xor
mov
xchg
cmp
dec
call
out
jnp
inc
incl
mov
bound
push
lods
fcmovnbe
inc
pop
lcall
xor
xor
adc
in
mov
nop
push
rcll
jle
jno
cmp
push
pop
call
add
pop
fwait
mov
dec
mov
movq
ljmp
stos
scas
stos
rorb
dec
sub
shrl
and
mov
sar
aad
dec
aas
stos
mov
shll
jge
push
loop
scas
inc
scas
inc
test
das
push
mov
int3
pop
push
cmp
aam
ljmp
xchg
test
mov
xchg
lahf
or
idivb
int3
aaa
lret
jmp
xorb
mov
push
lahf
imul
cmp
xor
fwait
dec
push
lock
push
lock
je
scas
xor
pop
js
xor
pop
fistpll
dec
jnp
les
xor
jne
mov
and
xlat
in
addr16
cmpsl
jae
push
call
jbe
fld1
xchg
jle
aam
inc
ja
cmp
filds
scas
sti
jns
pop
cmpsl
sbb
mov
push
cmp
jns
and
arpl
fidivrs
mov
cltd
repnz
jnp
insb
ret
clc
jecxz
cmp
test
or
push
sbb
cmp
movsb
aaa
cmp
lds
div
mov
movsb
mov
mov
pop
les
xor
or
out
mov
inc
jg
mov
cltd
adc
in
mov
stos
mov
in
xor
mov
lret
das
in
and
popa
aam
push
iret
xor
clc
pop
sub
push
movsb
xor
add
mov
lret
mov
fdivrs
aam
push
push
aaa
std
mov
fstl
sahf
jo
sbb
sti
mov
push
pop
shr
bound
dec
gs
xor
lock
adc
inc
inc
test
adc
jbe
mov
add
mov
jmp
push
add
movsb
sub
xchg
push
jae
pop
and
int3
push
sarb
popf
aad
push
mov
into
jg
dec
mov
addr16
lock
mov
shlb
pop
cmp
xor
mov
stos
lar
scas
xchg
call
or
fsts
cmpl
ds
cld
nop
addl
and
in
pop
sub
add
std
int3
in
sub
cs
mov
and
popf
js
push
mov
mov
xchg
aad
pusha
lds
jbe
cmp
aam
add
iret
mov
loop
jo
adcb
mov
and
jbe
test
mov
xor
jae
clc
faddl
xchg
mov
int3
call
xchg
sbb
adc
inc
jne
dec
out
int
sub
and
notl
jle
repnz
mov
stos
test
lea
dec
fnstenv
mov
mov
scas
sub
bndstx
cmp
popf
stos
mov
xchg
inc
mov
sbb
push
add
cmp
jle
in
jns
cli
lahf
dec
lods
enter
cmpl
movsl
in
mov
push
leave
xchg
mov
inc
arpl
lcall
sub
aad
dec
jle
xlat
mov
pop
push
pop
sbb
mov
mov
enter
adc
aas
enter
jle
mov
ret
push
insl
leave
jno
dec
stc
fcoms
jle
imul
sub
jne
imul
lock
xchg
xchg
test
divl
mov
cwtl
cli
int
cmp
int
mov
cmpsl
int
sub
enter
xor
imul
mov
orb
sbb
add
cmpsb
adc
je
lock
aaa
mov
mov
rcrb
xchg
aad
xchg
test
push
sbb
clc
in
lret
ss
aad
mov
lea
insb
mov
leave
das
mov
shl
std
dec
scas
sub
lcall
aam
push
mov
and
xor
jp
dec
ss
or
mov
sbbb
jge
jnp
mov
pand
movb
jle
decb
aas
jbe
mov
movsl
iret
adc
add
and
jnp,pn
dec
fdiv
jle
xchg
repnz
mov
jno
loope
mov
push
jle
mov
sbb
add
and
cltd
in
push
push
scas
push
fildl
movsb
movsl
ret
cmp
mov
out
cmpb
inc
push
cwtl
or
les
les
inc
outsl
fadd
loopne
pop
inc
outsl
adc
jb,pt
pop
dec
mov
int3
mov
jge
out
lcall
pmovmskb
and
add
push
xchg
sahf
leave
frstor
les
les
cwtl
or
stc
and
sub
jne
iret
rorb
jl
mov
outsl
cmp
adc
cli
enter
jg
dec
mov
push
jb
sbbb
jbe
mov
lock
sbb
pop
jo
ds
inc
icebp
jmp
clc
addr16
out
aad
mov
out
mov
outsb
cmp
mov
cmp
add
or
pusha
bound
xlat
test
add
enter
jle
gs
dec
in
pop
pop
stc
and
scas
cmp
mov
fs
mov
ljmp
leave
jg
stc
mov
and
add
sbb
pop
nop
aam
add
aas
idivb
test
and
call
lahf
movsl
mov
sbb
jecxz
push
pusha
pop
mov
rolb
jb
jmp
js
lods
je
cld
aad
notb
loopne
iret
xor
xchg
cmp
cs
jmp
cli
fisubs
jge
inc
push
arpl
neg
mov
inc
xchg
xlat
adc
sub
pop
push
mov
adc
in
mov
je
stos
roll
push
in
xor
jne
orb
xchg
cwtl
fldcw
loop
pop
mov
pop
pop
ffree
xor
stos
mov
cmpsb
sub
mov
test
mov
fmull
data16
mov
fxch
rol
jnp
add
cld
negb
mov
int
xor
xor
jo
js
inc
mov
sub
mov
push
sub
pop
shlb
push
stos
mov
test
in
ror
mov
sub
adcl
imul
rcrb
sbb
sahf
mov
testb
mov
cli
or
lcall
sbb
mov
xchg
push
scas
les
add
out
hlt
adc
push
mov
loop
mov
mov
sub
xor
popa
inc
mov
xor
add
sub
int3
adc
pusha
xlat
aaa
cs
jg
std
addb
xlat
push
std
cwtl
jge
movsb
std
aad
call
dec
jno
jns
push
xor
pusha
sahf
mov
jb
sbb
lods
xchg
mov
push
pushf
stos
loopne
and
loope
push
mov
add
sbb
and
leave
sbb
lock
lcall
mov
int
and
or
dec
sarb
xor
dec
cmpsl
sub
cmp
ja
mov
xchg
inc
addl
stos
orl
imul
cwtl
fisttpll
mov
pop
add
mov
mov
dec
int3
mov
pop
dec
sahf
loop
sub
mov
xchg
dec
mov
incl
insl
pop
int
add
push
push
inc
fs
pop
notl
insl
pushf
hlt
or
outsl
rcrl
xor
push
test
fwait
jae
jp
push
out
sub
dec
add
lea
push
mov
and
lods
inc
mov
jno
mov
clc
into
xchg
mov
mov
mov
mov
test
cmp
int
add
sbb
sub
out
add
jge
mov
ret
lds
adc
test
mov
and
fisttps
fwait
aam
cmp
xchg
shrb
sarl
cmp
sub
in
push
lock
fwait
sub
das
outsl
das
xchg
sub
mov
jo
pop
cmp
mov
call
in
xchg
nop
ljmp
inc
sub
adc
xchg
sbb
sbb
and
jo
mov
add
sar
sbb
hlt
out
gs
mov
ss
push
push
repz
xchg
jp
lea
or
add
or
addr16
repnz
mov
jb
dec
mov
xchg
test
pop
insb
fldl
cmpl
fldcw
mov
sub
ret
sub
push
push
inc
pop
test
inc
and
and
cmp
add
icebp
popa
add
inc
pop
lods
or
lret
je
xor
repz
cmpb
push
push
jo
lods
stos
jo
icebp
inc
insl
mov
fs
shll
lcall
rcrb
inc
sub
mov
jns
cmp
jnp
adc
dec
in
stc
in
inc
enter
jb
fwait
jae
cwtl
cmp
in
xchg
mov
push
jmp
xchg
mov
clc
addr16
inc
sti
into
sarl
pop
cmp
cmp
jb
shll
xchg
sub
mov
addr16
jb
mov
pop
lods
jne
lea
rcrl
movsb
lahf
fsubr
lahf
mov
repnz
dec
jne
mov
outsl
xchg
aas
sub
inc
rorl
xor
lret
inc
test
mov
fdivl
mov
mov
push
into
mov
jbe
push
mov
les
sbb
in
test
sahf
mov
lret
js
jnp
lret
in
adc
cltd
and
sbb
xor
mov
orb
lods
push
cmp
fldcw
imul
aas
or
les
push
repnz
sbbl
daa
mov
rclb
dec
add
nop
fisubrl
and
mov
fnstcw
pop
mov
sbb
inc
cmpb
test
inc
es
mov
jmp
sti
xchg
out
dec
jp
pop
and
cmc
adc
pop
rcl
fnstcw
jne
sbb
mov
cmp
inc
shlb
push
xor
cmp
pop
mov
jmp
ret
int
cmp
cltd
sbb
movsl
dec
inc
mov
mov
inc
xor
adc
xchg
dec
popf
loop
in
sahf
gs
and
ret
adc
sub
cmp
dec
fisubrs
xchg
fs
xor
mov
addr16
in
add
mov
push
lea
mov
and
xor
test
movsb
inc
jmp
xor
int
lret
mov
call
xor
inc
xor
lods
iret
gs
push
xchg
mov
jno
ljmp
xor
dec
xchg
sbbl
dec
push
inc
cmp
sbb
mov
je
cwtl
cmp
mov
popf
mov
mov
jo
add
fistpll
and
in
popa
insl
push
es
mov
shll
aas
inc
sub
into
mov
movl
xor
or
push
pusha
and
xor
add
fidivl
js
add
sbb
or
add
inc
cmp
mov
ret
jmp
imulb
mov
mov
mov
outsb
or
jmp
out
mov
and
mov
xchg
pop
add
mov
sbb
test
js
jne
push
stc
cli
leave
outsl
mov
ss
aad
or
dec
sti
imul
mov
jmp
pop
cmp
xchg
adc
dec
es
fisttps
lods
mov
insb
adc
subl
mov
popf
jle
loop
int3
lods
adc
push
mov
xchg
int3
xlat
mov
cwtl
cmp
inc
jle
or
mov
xor
lods
push
repnz
pop
mov
jle
add
rcrb
scas
aaa
inc
inc
imul
mov
das
sub
push
addr16
sbb
inc
xchg
or
jno
jge
jle
sbb
pop
adc
adc
lods
sbb
call
test
mov
or
dec
jns
insl
movsl
add
sub
jmp
stc
inc
jbe
out
outsl
xlat
outsl
gs
mov
adc
divl
lret
xor
xchg
or
add
add
push
xorb
repz
es
and
xor
lahf
mov
daa
jb
aad
push
jg
xor
xchg
adc
cmpsl
leave
scas
repnz
cmp
cmp
mov
xchg
ffreep
or
sbb
jne
pop
loopne
cltd
clc
push
in
shll
mov
fnstsw
pop
sbb
push
dec
in
stos
std
cmp
jle
adc
mov
xor
rcrl
push
sbb
pop
inc
cmp
and
add
fsubl
xor
lea
jne
out
adc
subl
push
pop
ret
push
cmpsb
fbstp
cmpsl
rol
into
jmp
fistl
fwait
add
fldl
sub
insl
jle
inc
mov
test
repz
jle
push
sub
push
add
out
cmp
int
push
in
sub
ljmp
add
out
pop
sub
push
into
push
jb
mov
inc
mov
bswap
cmp
mov
jge
rclb
sahf
adc
or
sti
jns
popf
pop
fisubs
jno
mov
subl
jmp
adc
pop
in
push
jmp
pop
cmc
vmovups
stc
jbe
jns
xchg
pop
mov
outsl
fisttpll
cli
mov
scas
jge
jno
rcl
lahf
aam
arpl
push
movsb
sahf
repz
fimuls
mov
inc
pop
fdivr
push
lods
sbb
mov
push
mov
sti
add
stc
mov
addr16
jge
and
call
enter
mov
inc
fdivrp
lea
dec
cmpsl
add
das
imul
push
mov
outsb
xchg
jle
aas
sbb
psubusb
rol
inc
icebp
std
pop
mov
push
push
call
dec
out
or
ror
adc
mov
arpl
cli
or
push
lcall
xcrypt-cfb
cmpsl
and
pop
cwtl
mov
jmp
in
shlb
jmp
mov
es
xchg
adc
inc
imul
mov
push
fidivrl
sbb
sbb
xlat
pop
mov
adc
push
insb
aas
sbb
pop
test
subb
mov
clc
es
cmp
inc
push
mov
lret
jae
mov
and
sub
add
mov
loopne
xchg
stc
inc
mov
adc
pop
fimull
pop
pop
movsb
movsl
ret
adc
xor
data16
les
inc
cmp
aad
push
jl
jne
mov
enter
xlat
pop
negb
adc
mov
std
cmp
and
xor
cwtl
dec
popa
gs
xor
stos
mov
mov
stos
jnp
fdivs
dec
aaa
clc
jns
pop
cmp
inc
jl
xchg
inc
cmp
gs
mov
nop
cltd
xchg
lea
shrb
lret
and
mov
inc
aas
xchg
xchg
sahf
sbb
aad
or
movsl
mov
call
mov
int
jecxz
cmp
xchg
push
mov
ja
push
lods
daa
push
ret
clc
mov
inc
add
jbe
push
cmpb
push
insb
xchg
fnstsw
out
jno
sbb
push
loopne
push
je
lea
cld
cld
inc
out
push
out
ficoms
addr16
lds
adc
insl
cmp
pop
add
xchg
adc
jp
loop
push
fcoml
xor
test
aaa
push
cli
and
sbb
xor
incb
popa
lret
arpl
push
pop
mov
dec
xchg
in
sahf
sbb
mov
or
mov
scas
xor
adc
or
cmp
sub
dec
int3
push
xor
ret
jge
inc
fidivl
loopne
xchg
fs
sbb
lods
das
jecxz
and
xchg
shl
cs
xchg
pusha
and
push
addb
mov
repnz
mov
fdivrl
jne
movsl
jecxz
jecxz
xor
adc
mov
sbb
mov
adc
push
xor
cmp
and
push
sbb
test
adc
xor
xchg
in
ret
je
fimuls
test
jb
test
mov
sub
loopne
cwtl
in
jge
arpl
jle
mov
sub
cwtl
sbb
pop
or
in
pop
sub
cld
sub
jb
mov
int
sbb
xor
push
mov
dec
sbb
outsl
push
or
cmpsl
mov
mov
xlat
mov
stos
dec
ss
push
push
and
outsb
out
lea
dec
push
and
adc
add
test
dec
outsl
cmp
mov
call
outsl
dec
outsb
xchg
out
mov
inc
orl
jl
test
add
icebp
xlat
jae
mov
out
or
or
jne
sbb
outsb
xor
icebp
int3
rcrb
scas
mov
xor
subl
jecxz
movsl
test
sbb
pop
fiaddl
pop
jo
mov
rcr
out
lret
sti
pushf
imul
pop
shll
arpl
mov
pop
cmp
mov
mov
mov
mov
cli
insb
jecxz
pusha
outsb
and
mov
out
add
ja
test
pop
sti
loope
sbb
mov
push
xchg
cmp
cld
outsb
fs
inc
mov
xor
in
in
data16
ret
in
add
outsl
imul
xchg
out
xor
push
scas
cli
cmp
movsb
mov
std
test
cli
mov
daa
xor
sahf
xchg
pop
subb
ficomps
mov
pop
cmpsb
arpl
sub
lea
stc
lock
out
sarb
insb
adc
inc
outsb
or
leave
mov
int
pop
enter
movsl
jmp
js
or
cmp
mov
sbb
cs
mov
dec
and
loope
scas
sbb
das
push
outsb
test
dec
imul
and
mov
mov
xchg
into
xchg
loopne
sbb
xchg
ret
push
xchg
in
stos
call
inc
ret
loop
fnstsw
and
addr16
mov
scas
test
arpl
std
or
pop
inc
daa
movsb
femms
hlt
leave
and
cltd
repz
or
add
inc
das
dec
xchg
jne
js
movsb
out
adc
adcl
sbb
dec
sbbl
jle
sub
mov
int3
mov
inc
ljmp
xor
shrb
lods
in
mov
sbb
nop
adc
lds
pop
dec
sub
repz
out
dec
adc
jmp
jl
je
mov
imul
ss
jno
pop
cmpb
or
mov
jmp
inc
das
imul
xor
out
push
mov
stos
mov
aam
dec
daa
push
adc
insb
push
or
inc
pusha
sbbl
mov
inc
test
xor
add
mov
cmp
sbbb
add
fst
popa
or
subl
imul
test
pop
mov
subl
lock
lods
insb
test
lret
mov
out
mov
xor
jo
out
and
movsl
cmpsb
xor
clc
pop
mov
jnp
jmp
jp
jbe
arpl
or
lret
dec
paddsw
push
pop
push
test
roll
jno,pt
mov
test
mov
stc
sub
sub
adc
xor
sti
mov
and
outsl
adc
mov
inc
jmp
fildl
iret
mov
or
jb
xor
push
sbb
outsl
pop
adc
pop
js
add
cmpsl
cmp
ret
push
mov
pavgb
mov
cltd
fists
das
sarl
dec
inc
jmp
and
ret
sbb
les
stos
mov
int3
stos
push
aaa
adc
jle
out
mov
in
icebp
dec
mov
adc
mov
divl
std
mov
mov
or
mov
inc
pop
icebp
and
xchg
fcomp
shrb
sub
imul
fimull
dec
mull
jb
fcompl
std
jg
lock
jge
jne
sbb
adc
add
nop
lcall
or
mov
out
nop
push
push
cld
add
pusha
xor
roll
pop
cwtl
pop
or
mov
jo
cs
pop
ss
add
push
cmpb
cld
push
scas
xor
loopne
inc
clc
mov
adc
and
data16
push
xor
pop
int3
add
cmp
sar
mov
jns,pn
jle
xor
mov
mov
xchg
lahf
out
pop
jmp
xorl
int
fmuls
and
push
jbe
pop
sub
into
sub
std
dec
pop
pop
xchg
sbb
cmp
aam
fnsave
fcmovne
or
dec
scas
sub
insl
incb
inc
fimuls
lods
les
push
cs
fs
sbb
xor
jp
loopne
fcompl
subl
pop
add
dec
cmp
flds
mov
sarb
insl
std
es
cmp
shr
into
aam
sub
mov
repz
int
out
push
inc
aaa
out
sahf
ret
shl
jo
adc
cli
adcb
outsl
push
iret
das
repnz
mov
mov
shl
or
lods
icebp
push
inc
outsl
or
jae
aam
stos
mov
rcrl
jecxz
pop
rcrb
mov
hlt
and
lahf
mov
xchg
mov
pop
xchg
fcoml
sub
js,pn
lock
jmp
into
dec
arpl
imul
icebp
int3
pop
dec
cmp
adc
lret
mov
adc
cltd
leave
lods
xor
mov
loopne
inc
fmuls
pop
or
es
pop
ror
cmc
lret
andb
mov
lock
out
mov
test
sub
sub
mov
mov
or
pop
dec
insb
arpl
mov
dec
pop
rcrl
ja
mov
scas
sub
aaa
rorb
jne
repnz
dec
and
shl
cs
fisubrl
es
popa
mov
aaa
cwtl
or
je
inc
pop
jb
mov
jmp
or
pop
pop
sbb
jns
std
aas
push
mov
lods
add
push
arpl
push
hlt
xchg
push
lret
fadds
and
hlt
mov
sub
jle
into
sub
fmull
lds
mov
and
and
add
pop
pushfw
sbb
idivl
pop
ja
cmpsl
jb
mov
dec
or
mov
mov
in
sar
adc
mov
push
sbb
add
jge
das
and
test
sub
negb
andl
cltd
sub
bound
mov
icebp
inc
js
xchg
cmc
iret
xor
mov
roll
fsubr
xchg
xchg
jp
cmp
pop
loop
xor
addr16
push
sarb
mov
test
test
push
sub
inc
pop
dec
scas
inc
clc
jp
sarl
fisubrs
sub
ja
int
adc
jmp
clc
pmaddwd
scas
sbb
dec
aaa
add
or
out
mov
mov
fistl
pop
mov
inc
mov
cmp
mov
fstpt
push
pop
xchg
xchg
cmp
stos
std
enter
fnstcw
xchg
sbb
mov
add
ja
sbb
sbb
lret
lock
test
stos
or
adc
lds
data16
push
xchg
and
pop
stos
mov
mov
sub
popa
jmp
dec
or
sti
fdivs
hlt
pusha
add
in
add
xor
imul
mov
aaa
imul
aam
ljmp
pop
aam
int
cmc
push
mov
js
lea
push
outsb
lcall
pop
dec
cmc
pop
pop
lods
xchg
xor
repz
popl
into
sbb
xchg
lret
lcall
or
lret
xchg
pop
subb
ljmp
push
mov
jns
les
cmp
lods
lock
dec
cmp
test
lret
pop
popa
cmpsl
mov
in
ss
aas
into
inc
ret
jb
loope
jnp
mov
into
leave
mov
dec
lock
cltd
sbb
mov
ret
dec
mov
aad
jecxz
aas
jg
pop
mov
mov
lods
dec
enter
push
mov
dec
jge
jns
dec
adcb
inc
mov
test
ja
ret
jno
mov
rolb
mov
in
sahf
ljmp
and
sbb
fwait
push
inc
lret
data16
sti
mov
add
pop
sbb
sbb
je
xorb
arpl
imul
xor
xchg
cmpsl
aaa
std
push
shl
add
xchg
lock
push
xchg
jo
fwait
mov
cld
lcall
xchg
sarb
push
xor
sbb
pop
sub
shl
mov
fnstsw
aad
inc
push
ja
add
pop
jns
shrl
dec
ja
jge
push
inc
scas
mov
push
jmp
inc
call
sbb
pusha
lods
mov
pop
lahf
mov
jg
call
cmp
cmp
cmpsb
and
cmc
push
mov
shll
lock
testl
pop
mov
addr16
psraw
jns
adc
ficompl
lods
and
mov
negb
jae
stos
imul
loop
xor
adc
test
incb
sbb
not
adc
hlt
xchg
xchg
test
jmp
stc
mov
mov
and
cmc
sub
jge
push
movsl
sbb
test
fcoml
and
jp
inc
fidivs
imul
jbe
pop
aam
mov
call
inc
aas
ss
push
inc
cmp
leave
sub
lret
push
push
sub
dec
or
dec
mov
bound
add
xor
ret
pop
xor
xor
jecxz
and
sar
loopne
inc
jo
cwtl
roll
pmullw
mov
lcall
negb
mov
xor
icebp
mov
in
dec
push
mov
test
cmp
cmp
icebp
testl
fwait
leave
mov
out
out
and
mov
push
and
fs
xchg
add
dec
mov
rcll
lret
inc
xchg
cmp
cmp
pop
jl
dec
out
cmp
push
enter
jae
or
aas
and
mov
add
ds
fdivrl
mull
lods
mov
addr16
mov
pop
xchg
adc
xor
mov
ja
dec
add
mov
mov
in
scas
push
xor
mov
pop
pushf
jg
les
push
inc
fs
out
jl
xor
mov
pop
test
or
jmp
and
and
sbb
divb
pop
cltd
dec
and
into
sbb
mov
cld
xchg
in
or
dec
cwtl
sbb
outsb
ret
lods
test
mov
cmp
add
jae
rol
and
mov
bound
mov
sub
jle
fsts
xor
pop
loope
dec
nop
push
in
arpl
les
fstpl
fsubs
dec
mov
test
push
lods
lock
dec
adc
cwtl
inc
inc
jns
push
xorl
sub
aaa
push
fwait
or
loope
ror
jle
imul
cmp
adcl
pushf
xchg
sub
pop
hlt
xor
pop
and
xchg
fcomps
addr16
sbb
js
sbb
or
rcrb
and
pop
rcr
movsl
pusha
lods
in
or
jne
repnz
lods
loop
push
es
ret
and
sarb
imul
cli
lock
cmp
adc
adc
cmp
das
mov
scas
pusha
inc
test
push
sbb
mov
mov
lods
inc
and
mov
repnz
or
fnstenv
jp
enter
imul
ss
add
pop
sbb
cli
popa
or
jmp
sbb
dec
push
sbb
xchg
mov
bswap
xor
cmp
xor
fdivs
xor
mov
test
cs
in
out
add
and
inc
cmp
and
add
dec
xchg
dec
in
and
jo
add
add
mov
sti
out
add
daa
fldcw
jg
testb
sub
dec
aaa
mov
xor
jne
adc
or
cld
adc
lds
rcrb
mov
jb
xor
sub
jno
lea
pop
cmp
shrb
push
pusha
div
or
out
cmp
icebp
rcll
push
rcll
push
xchg
fmull
dec
adc
dec
push
pop
push
sbb
and
shrl
lods
mov
mov
lods
xchg
push
sar
aam
ja
jns
pop
push
mov
imul
and
ja
daa
pop
cwtl
int3
lods
or
jno
pop
cmp
loopne
or
mov
ljmp
or
insl
xor
dec
pop
js
mov
out
mov
pop
jp
xchg
ret
bound
les
xor
in
outsb
cmp
mov
loopne
js
cwtl
xchg
pop
jne
dec
scas
lcall
ss
testl
jecxz
aas
xchg
dec
sub
pop
jno
mov
jp
pop
add
stos
cld
push
int3
mov
lret
jmp
mov
icebp
cli
xchg
ficoml
mov
mov
cs
jae
jne
add
mov
aam
push
test
inc
cmp
push
int3
mov
jp
js
cmpsl
xchg
add
test
psubusb
dec
shll
icebp
jg
outsl
lcall
out
cmp
sbb
fbstp
sbb
pop
pop
test
mov
stos
jle
lahf
dec
pop
out
fldln2
push
bound
test
outsb
inc
xchg
out
loop
mov
mov
pop
pop
cmp
stos
cmpsl
es
cmpsl
pop
arpl
push
je
test
xor
gs
sub
jl
stos
jl
faddl
and
test
mov
fimull
or
mov
mov
and
out
pop
or
pop
test
rorl
js
jecxz
inc
jecxz
loope
pop
lock
cmp
ja
jae
pop
inc
rol
xchg
and
ret
or
fwait
mov
push
adc
inc
cmpb
dec
int
push
lds
lret
or
insb
int
dec
gs
lock
mov
rorb
sbb
xchg
or
in
inc
mov
ds
and
add
roll
mov
fdivl
in
xor
xor
outsl
pop
lret
fstps
xor
lods
mov
jne
sub
mov
mov
or
ljmp
sahf
das
adc
or
pop
pop
add
imul
in
lahf
in
dec
imul
pop
lahf
jns
xor
pop
xchg
pop
sub
or
cltd
lret
js
adc
pushf
push
mov
icebp
xchg
pop
cmpsb
sbb
sbb
shrb
push
xor
mov
push
loopne
orl
inc
aas
leave
dec
pusha
stc
push
shl
or
push
ret
cwtl
in
fwait
lock
scas
mov
lods
stc
fwait
stos
mov
or
iret
push
add
je
cwtl
movsl
push
mov
mov
jmp
mov
popf
pop
shrl
cmpsb
bound
sub
stos
adc
xchg
lret
pop
lcall
xchg
inc
and
mov
mov
mov
push
add
sub
or
jo
sbb
xor
jle
mov
inc
sbb
sarl
repz
sbb
inc
mov
fbstp
or
cmp
aaa
push
repz
mov
out
add
cltd
in
sub
pop
stos
cmpsb
aas
jae
into
les
lods
in
inc
nop
mov
call
arpl
in
leave
mov
mov
inc
inc
hlt
cmp
std
addb
jo
nop
fs
or
daa
in
addb
ss
sub
sub
sbb
jne
iret
ret
xchg
insb
ret
in
pop
in
das
mov
inc
xchg
ss
lock
cld
test
jmp
push
push
in
or
dec
push
adc
andb
and
jno
xchg
femms
push
mov
push
loopne
jne
jns
lret
push
shr
xchg
adc
mov
mov
sbb
jecxz
mov
out
pusha
pusha
mov
fwait
inc
ror
imul
mov
mov
jl
inc
cwtl
dec
outsl
and
or
jno
ds
lods
jbe
mov
push
cmp
cmpsl
xchg
lods
xor
rcll
sub
sub
or
icebp
jge
aad
aas
mov
fsubrl
test
or
jmp
rclb
shlb
xchg
imul
pop
leave
push
pushf
ss
jp
enter
jns
pusha
push
sbb
adcb
xchg
xor
push
fcoms
xor
mov
sub
outsl
scas
fwait
int
scas
jmp
loope
jge
mov
rorl
outsb
mov
mov
filds
inc
repnz
icebp
adc
sub
outsl
je
mov
xchg
xor
xchg
pusha
pop
cmp
mov
or
add
inc
movsb
enter
mov
les
cwtl
mov
xor
xor
fdivl
sbbb
jecxz
ljmp
popa
lods
push
test
scas
jle
addl
das
adc
dec
lea
lods
and
clc
add
and
jl
std
pop
lods
xchg
stos
int3
mov
push
xchg
adc
jno
dec
loop
dec
fldl
lret
hlt
lret
push
dec
imul
or
inc
stos
dec
daa
inc
inc
xchg
int3
sbb
pop
cmp
mov
push
xlat
adc
jns
sbb
pop
or
fbld
pop
mov
cwtl
fsubs
xor
xchg
jo
arpl
js
add
sub
lods
test
and
repz
insb
xchg
sub
dec
jb
stc
mov
loope
adc
add
pop
jmp
mov
mov
mov
stc
mov
test
pop
adc
std
sub
imul
repz
std
inc
jmp
outsb
je
loopne
cmp
lods
jp
mov
and
jp
scas
xlat
data16
xlat
push
out
testb
jg
xchg
jnp
stos
xchg
loopne
xor
sbbb
in
lock
inc
and
js
insb
dec
lret
stc
sbb
xor
add
xchg
sete
and
pop
cmp
out
stc
test
mov
mov
push
lods
sub
xchg
xlat
jae
or
int
or
push
jg
sub
xchg
cmp
inc
xchg
add
sub
es
jo
adc
sbb
scas
mov
rcrb
pusha
mov
mov
in
and
mov
jbe
and
imul
in
xor
push
sbb
or
in
xchg
lods
out
push
nop
add
sahf
adc
daa
pop
lock
mov
cmp
rorb
mov
xchg
mov
jae
aad
jp
mov
push
mov
stos
mov
iret
loope
nop
lock
mov
in
mov
test
aam
ljmp
push
fstl
and
mov
or
lods
mov
aam
xlat
lcall
mov
icebp
mov
push
int
test
daa
pop
pop
adc
rcr
xor
mov
pop
fisttpll
sub
mov
pop
loopne
mov
cmpsb
ds
sbb
fcompl
test
imul
and
cmp
cli
test
fcoms
pop
lods
cmp
mov
jle
out
lods
jbe
cmpsb
mov
or
or
sbbb
pop
flds
test
mov
inc
test
imul
cmpsl
sub
cld
loopne
add
popa
hlt
dec
mov
adc
cli
addr16
jg
pop
sbb
cmp
xor
clc
cld
lea
xlat
cmp
test
and
dec
cld
insb
cmp
xchg
xchg
lock
jmp
mov
shl
rcrl
add
das
add
xor
decl
mov
cld
cmp
andl
mov
jg
mov
dec
xor
out
xor
jno
movsl
sub
daa
stos
mov
js
insl
push
jae
lcall
pushf
cmp
out
pusha
jo
cmpsb
ret
std
data16
ret
lahf
bound
sahf
pushf
and
mov
pop
pop
push
jl
mov
test
lea
adc
and
push
shlb
into
roll
push
aam
popa
pop
pop
add
fiaddl
or
dec
mov
mov
push
icebp
jg
mov
mov
iret
outsl
xor
mov
repz
mov
in
mov
pop
or
sub
sbb
and
adc
sbb
xor
or
shl
aas
jne
fsubl
pop
movsb
imul
push
mov
mov
fists
sbb
push
repz
leave
adc
xlat
or
fisubrl
inc
xor
test
daa
or
idivl
mov
enter
xchg
and
jne
pop
push
sbb
test
jg
jmp
lds
imul
jne
sahf
add
adc
das
ljmp
inc
sahf
xchg
xchg
movsl
push
push
cwtl
test
negl
xchg
cld
sbb
inc
imul
push
fucom
int
into
pop
lret
push
jp
test
and
lods
outsb
dec
or
xchg
inc
outsl
inc
cmpsl
mov
hlt
or
inc
fdivrs
inc
fstl
in
cmp
or
sti
xchg
addb
ret
or
add
dec
cld
and
arpl
aad
or
aad
mov
lret
sbb
jge
push
out
dec
nop
aam
jg
ret
dec
push
and
jb
addr16
fwait
js
loopne
dec
mov
pop
mov
gs
sub
and
dec
jecxz
nop
rdmsr
sbb
inc
ja
sbb
mov
test
inc
push
mov
push
xchg
mul
int3
imul
pop
mov
push
jl
bound
cld
dec
push
aam
aaa
mov
lea
aam
fdiv
lret
ljmp
xchg
fldln2
cmpsl
push
sarl
sahf
pop
sbb
inc
inc
std
dec
mov
sub
push
push
push
inc
ficompl
cltd
sar
sahf
fisttpl
push
sarb
inc
cltd
inc
std
push
dec
call
mov
push
cmpsl
pop
cmp
cmc
mov
or
mov
mov
sub
inc
and
jnp
mov
cld
neg
jl
gs
add
xchg
imul
cmp
int3
into
cmpsl
imul
adc
je
cs
lcall
inc
lret
xchg
fwait
loop
popf
outsb
pop
mov
xchg
mov
xchg
test
mov
testl
fwait
sbb
rcrl
cmp
mov
out
lock
imul
sbb
js
je
ja
mov
ljmp
inc
cli
sbb
je
imul
jbe
sbb
popl
and
int
dec
pop
jle
aaa
jg
repnz
arpl
mov
xor
push
xor
daa
add
or
out
rolb
popa
test
mov
cmp
cmpsb
je
iret
adc
jo
or
pop
xchg
mov
push
fadds
sub
and
sub
and
jg
push
lods
pop
icebp
sar
popf
clc
xor
inc
cmp
cmp
rcrl
je
stc
clc
sbbl
pop
or
push
lahf
push
ret
cli
pop
inc
popf
mov
push
test
jmp
jp
repz
mov
aaa
in
jnp
mov
add
and
inc
pop
in
push
fldcw
cmc
push
clc
fwait
cld
cmp
sbb
stc
jle
jg
mov
xchg
imul
repnz
fsubr
dec
or
pop
pop
loopne
aaa
push
jmp
test
adc
lahf
pop
mov
add
sub
cltd
push
xor
addr16
movsl
mov
hlt
sahf
in
pusha
sbb
fdiv
outsl
test
dec
mov
inc
add
addr16
dec
xor
xchg
in
push
call
pop
push
mov
pop
adc
movsb
stos
rcll
outsl
dec
stc
aad
mov
fs
add
push
insb
into
xor
sbb
push
dec
aam
shl
adc
xor
xor
outsb
push
cmp
or
sub
push
stos
dec
inc
inc
adc
adc
inc
arpl
xchg
scas
mov
aad
inc
imul
ljmp
xor
sbb
test
jo
mov
stos
mov
push
adc
daa
and
rolb
jnp
xchg
movsl
mov
mov
mov
cli
mov
and
dec
enter
fwait
jecxz
rcrb
int
push
pop
jge
jbe
jle
imul
fs
mov
mov
and
mov
pop
jle
sub
pop
sbb
cmp
dec
adc
test
xchg
xor
testb
das
pop
mov
dec
pop
jp
aaa
mov
lock
mov
push
inc
xor
cmp
sbb
push
pop
lret
adc
and
jns
hlt
jmp
jp
mov
flds
mov
pusha
dec
mov
std
lahf
push
and
es
fiadds
push
icebp
ja
aas
dec
lcall
inc
outsb
push
add
lahf
andb
addr16
int
cmp
lods
xchg
or
stos
mov
push
in
mov
mov
jl
mov
out
imul
outsb
push
cmp
stos
shlb
fwait
mov
adc
sbb
sarb
cmp
cmpsl
fnstenv
mov
int3
cwtl
add
outsb
xor
adc
add
stos
inc
out
pop
int
ljmp
cmp
mov
les
dec
lea
adc
fstpt
ja
and
lock
jg
dec
push
jge
pusha
push
fsubl
xor
push
jb
cmp
mov
mov
lods
mov
inc
pop
dec
lahf
pop
inc
adc
dec
add
aam
int
dec
mov
pop
and
dec
out
mov
lock
or
jg
jbe
inc
or
jno
xchg
pop
test
arpl
adc
aas
or
std
ret
aad
rorb
push
or
mov
das
push
lret
add
aas
fsts
jb
std
and
dec
movsb
dec
ret
insb
addr16
shrb
js
mov
aas
shl
and
or
nop
dec
xor
into
xor
sahf
add
jno
movsb
stc
movsl
shll
das
das
mov
clc
aaa
inc
push
shr
pop
jae
pop
dec
cs
mov
jno
jge
push
fst
cmp
in
out
sub
cwtl
lock
or
jns
push
jl
sbb
push
in
int
iretw
inc
xchg
insl
ret
mov
pop
addl
dec
addb
mov
add
adc
imul
jo
lods
and
fsubr
incb
js
pop
repz
leave
aad
push
adc
icebp
pop
adc
sti
outsl
xchg
je
int
cmp
add
cmp
iret
pusha
jp
mov
mov
mov
mov
data16
mov
mov
sbb
lods
inc
aad
shlb
adc
push
test
cmc
rcrb
pop
mov
push
mov
push
fstpt
loop
rcll
cld
sbb
push
push
gs
jns
or
rorl
and
dec
and
dec
mov
aam
ja
in
lahf
push
sbb
mov
shlb
fcompl
sbb
dec
ficompl
arpl
jg
dec
and
pop
and
pop
int3
push
xchg
enter
sub
jne
in
push
ret
dec
mov
mov
xor
ljmp
mov
lret
mov
mov
insb
inc
dec
inc
adc
xchg
nopl
or
xlat
test
hlt
imul
fucomi
jne
addb
lret
or
xchg
gs
jp
fnstcw
test
bound
pop
hlt
xor
je
shlb
or
mulb
dec
enter
pop
fildll
sbb
xchg
pop
push
jmp
inc
testb
sbbl
fnsave
add
sbb
sti
je
ds
or
sbb
and
cmc
int
jle
xchg
icebp
sbb
mov
mov
out
arpl
push
aaa
mov
xor
shrb
jae
xchg
stc
test
cld
xchg
imul
dec
mov
sarl
and
sub
mov
pop
nop
xchg
xchg
pusha
cli
xlat
stc
jo
fxch
sar
movsl
pop
pop
push
jecxz
ret
mov
pop
mov
pop
add
mov
xor
inc
and
xchg
rcrl
sub
movsl
cmp
mov
mov
push
or
add
insl
xor
dec
mov
xchg
or
imul
mov
in
jp
clc
leave
je
sub
stc
pop
mov
pop
lret
mov
sub
mov
inc
xor
inc
and
dec
daa
inc
pop
inc
lds
pop
sarl
gs
pop
mov
mov
fs
adc
sub
jp
xchg
mov
addl
cli
fcoms
shll
mov
outsb
lds
mov
jns
mov
xchg
lcall
xchg
adc
fstl
adc
mov
cmp
sbb
test
leave
and
shll
sahf
mov
ljmp
sahf
push
mov
fists
out
xchg
lds
xorb
imul
mov
stos
rclb
movsl
inc
jg
inc
mov
pop
jmp
push
mov
adc
fstpt
sti
adc
jecxz
jge
xchg
imul
out
cltd
mov
sbb
lahf
cmp
mov
xchg
sbbb
push
xchg
gs
fs
mov
jp
mov
cli
daa
cmp
add
and
sbb
adc
push
movsb
adc
sti
push
jge
imul
repz
ss
sbb
add
xchg
mov
outsb
les
les
or
sbb
jmp
dec
int
cmp
out
push
lods
and
in
in
xlat
mov
push
sbb
mov
sbb
sarl
add
js
xor
jae
sub
and
adc
pop
jl
out
xor
arpl
mov
outsb
jmp
lret
scas
cmpsl
rcrb
mov
repnz
mov
xchg
cltd
in
push
rcrl
iret
adc
int
int
shlb
loop
pushf
scas
inc
cmp
out
imul
call
mov
sub
mov
dec
loope
push
ret
mov
out
addr16
inc
add
shlb
lahf
push
sub
sbb
icebp
pusha
dec
and
cwtl
test
xchg
xchg
int
in
sbb
lock
loopne
subb
jp
lea
adc
lcall
push
lds
rolb
xchg
sbb
data16
jns
jecxz
dec
push
jne
push
fistl
and
movsl
xor
jo
ucomiss
sbb
in
push
xchg
loopne
mov
cmp
popf
sub
stos
jae
aad
mov
inc
pcmpgtb
js
adc
idiv
mov
sub
push
sbb
and
push
dec
les
into
and
mov
cmp
mov
shll
enter
imul
cwtl
xchg
push
and
dec
sub
in
in
xchg
pushf
aad
or
sub
lea
jl
call
int3
xchg
sbb
out
shrl
sub
aas
mov
push
fsts
or
fwait
in
add
sahf
andl
xor
sarl
lock
ret
cmp
into
fnstenv
in
mov
cmp
int3
aas
add
rolb
ss
xchg
fwait
insl
sub
adc
lds
jecxz
test
xchg
popa
jge
xor
inc
dec
sti
ret
fnstcw
mov
sub
inc
xor
cwtl
je
xchg
cltd
pop
add
and
xchg
adc
jecxz
pop
sbb
shlb
pop
or
jb
dec
and
loope
aad
inc
data16
idivb
dec
add
gs
aaa
sbb
pop
divl
repz
imul
sub
lods
cli
add
mov
clc
int
pusha
inc
push
push
push
arpl
xchg
sub
rcrl
mov
icebp
add
pop
dec
mov
and
jno
xchg
xchg
jno
pop
aad
int3
lcall
xchg
sub
mov
mov
js
push
pop
popf
test
decb
idivb
pop
faddp
idivb
add
sub
mov
xchg
mov
pop
xchg
inc
les
jae
lret
mov
sbb
jnp
je
dec
mov
movsb
fmull
adc
mov
lods
sub
mov
dec
xor
and
inc
sbb
shl
ljmp
out
cli
jmp
test
cmpsb
loope
test
mov
inc
inc
hlt
insb
and
bound
jbe
push
add
cs
jb
xchg
push
out
clc
shrb
sbb
scas
mov
adc
popf
stos
xchg
test
cmp
jbe
lea
sbb
data16
pop
movsl
fcoml
test
jb
cmp
mov
mov
push
xor
scas
aas
mov
inc
push
int3
pop
orb
adc
testl
sbbl
and
xor
pop
nop
clc
pop
jnp
mov
mov
out
xchg
push
push
and
jmp
inc
test
faddp
jo
call
pop
mov
jmp
dec
cmp
icebp
shrb
or
xchg
pop
push
cmpsl
std
enter
pop
sahf
insb
into
sub
aad
and
sub
cmp
or
shl
cmpb
xchg
sub
push
add
gs
mov
fstps
pop
adc
add
inc
test
inc
mov
into
test
push
xor
fildll
jmp
adc
pop
aam
fldcw
and
dec
mov
cmp
mov
xor
adc
sbb
sub
mov
mov
and
inc
adc
fadds
in
xlat
push
sahf
iret
enter
inc
aam
cltd
adc
xor
pop
ret
mov
mov
andb
in
lock
xchg
sub
stos
aam
pop
ss
mov
lds
or
inc
xor
mov
rclb
arpl
cmpsb
mov
in
sub
mulb
jno
pushf
sbb
push
shlb
mov
cltd
ja
imul
cmp
push
inc
dec
sub
sti
dec
fnstsw
gs
je
push
jl
ret
out
je
scas
ret
shr
xchg
in
stos
in
jmp
xchg
dec
push
gs
lret
xor
mov
in
mov
or
fwait
push
daa
arpl
cltd
or
xchg
jmp
dec
outsb
jo
enter
or
add
pop
leave
push
imul
gs
mov
sub
xchg
mov
adc
mov
sahf
movsb
jecxz
in
pop
test
jbe
iret
and
imul
fwait
gs
sbb
sbb
aam
into
aas
test
scas
je
sbb
mov
sub
repnz
dec
fisubrs
js
pop
cwtl
mov
wbinvd
sbb
inc
cmpsl
mov
stos
push
mov
pop
mov
xchg
jb
add
mov
int3
push
sbb
out
mov
cmp
hlt
cs
xchg
in
clc
es
xchg
mov
lea
cmpb
pop
xchg
adc
push
adc
push
fbstp
and
mov
mov
inc
adc
outsb
and
xchg
movsl
fsubl
js
inc
mov
jne
fwait
jno
dec
call
push
outsl
dec
lods
add
clc
inc
pop
stos
mov
rol
or
push
jo
in
xor
popa
mov
test
jno
inc
dec
test
or
sbb
sbb
add
push
jmp
push
fildll
mov
push
fbld
inc
and
stos
push
mov
imul
xchg
in
add
push
inc
or
insb
repnz
insb
aaa
bound
inc
pop
sub
inc
mov
push
fucomip
mov
and
ficompl
loopne
loop
cmpsb
pusha
pop
xor
loop
push
scas
pop
or
mov
mov
dec
sti
sahf
rsqrtps
or
test
lods
and
mov
push
mov
movsl
cmp
call
mov
out
push
push
push
mov
adc
fidivrl
les
sarl
pushw
pusha
fwait
sbb
rorl
addl
fdivs
outsb
mov
mov
mov
gs
cltd
pop
call
and
jle
dec
sarl
negb
pop
jg
mov
jle
xor
int3
sub
adc
shrb
adc
daa
sbb
movsb
cmp
mov
push
inc
fisttpll
mov
jg
mov
dec
dec
mov
adc
lock
pop
iret
and
inc
outsb
jb
xchg
push
notl
fs
dec
pop
lcall
insl
push
not
adc
fmull
cli
add
ret
cmp
out
pusha
sarb
bound
scas
xor
sub
push
adc
jmp
xor
jbe
rolb
cmc
mov
sub
push
popf
mov
sbb
bound
enter
dec
inc
mov
sbb
add
aad
stos
popa
jns
adc
popf
mov
ja
mov
loopne
push
test
mov
cmpl
in
xchg
jb
out
insl
and
xchg
shrb
popf
mov
fisttpll
jnp
inc
cltd
stc
icebp
adc
ja
pusha
cmp
insb
fcomps
push
push
jo
adc
sbb
movaps
andl
cltd
mov
in
cmc
call
sub
nop
into
lret
xor
scas
adc
pop
inc
or
ds
fs
movsl
scas
jmp
stos
jb
repnz
mov
pop
test
dec
dec
cmp
mov
pushf
dec
fmul
adc
adc
sbb
mov
scas
cmp
sub
push
insb
mov
and
js
sub
pop
fistpll
mov
sub
lods
sbb
jb
ret
push
sub
cmp
push
pop
push
lds
fwait
jne
test
loop
pushf
adc
fmuls
cs
add
adcb
jl
xchg
mov
test
sbb
sbb
bound
frstor
stc
in
xor
je
sbb
mov
sbb
push
jmp
aad
cmp
mov
lods
gs
inc
pusha
adc
mov
pop
js
push
out
arpl
call
sub
popf
out
mov
dec
pop
mov
pop
repz
push
sub
subb
xchg
in
lahf
in
push
ja
mov
aad
fildll
bound
xchg
fs
adc
pop
fmull
push
out
dec
out
push
mov
inc
shrl
dec
ret
daa
imul
mov
insl
mov
pop
lret
ja
sar
sub
fidivs
jecxz
xchg
pop
rcl
jmp
out
pushf
inc
jge
mov
aam
movb
in
ja
or
pusha
fdivrl
inc
jo
mov
adc
outsl
das
aas
mov
gs
clc
je
pop
hlt
and
add
gs
gs
xor
jl
or
cwtl
and
dec
outsb
enter
lds
lcall
dec
sub
lock
push
mov
int
pop
and
imul
xchg
dec
call
mov
cmp
lods
stos
cs
xchg
cmc
push
filds
inc
inc
in
dec
cwtl
add
pop
jbe
cmpl
rcll
jecxz
mov
pop
loop
dec
out
mov
test
jge
stc
fs
test
adc
mov
jae
shr
fdivrl
repnz
pop
fiaddl
rsm
xor
sub
jae
mov
xor
pop
mov
scas
cmpsl
mov
mov
out
fmull
test
jl
cltd
out
or
pop
aad
and
or
lahf
xchg
andb
dec
lock
push
mov
or
loop
flds
dec
sbb
out
int3
or
out
cmpsl
and
imul
add
push
mov
ds
scas
mov
fisubl
push
clc
and
mov
jns
pop
and
pop
pop
jmp
aaa
cli
sub
adc
pop
test
inc
and
data16
lret
xchg
xor
push
jo
inc
fmuls
cmp
lock
ds
cli
sti
out
jl
cmp
aam
pop
xor
xchg
aas
scas
add
cld
out
cs
data16
loopne
jb
arpl
frstor
mov
xchg
in
loope
fsubp
mov
mov
cmpsb
cmc
enter
hlt
sbb
xchg
daa
or
sbb
out
mov
leave
sub
fsubrl
cmpsb
mov
mov
jge
xchg
pop
push
push
fistpll
push
loope
pop
lds
mov
cmc
imul
popf
daa
insb
mov
xlat
jge
nop
popf
jmp
xor
inc
adc
mov
xor
insw
add
inc
sarb
fstpt
mov
xor
pop
out
inc
shlb
andb
or
loopne
fisttpll
aam
inc
xchg
out
inc
aad
js
jmp
in
sub
cmpsl
insl
sti
popf
cld
adc
push
out
push
mov
push
mov
lods
outsb
sub
jecxz
jne
inc
xchg
seta
dec
mov
leave
stos
jae
xor
xor
jnp
lock
push
push
jle
hlt
xor
movsb
bound
fcmovbe
repz
insb
sub
add
addb
jg
adc
stc
insb
popf
inc
repz
push
pop
cld
sub
aam
mov
mov
aaa
cmc
shlb
hlt
mov
jmp
shrl
cli
and
stos
aas
xchg
mov
add
inc
test
out
pop
sub
insb
out
fwait
or
ljmp
clc
or
cmp
mov
daa
cmp
int3
gs
xchg
repnz
shrb
out
int
sahf
xor
repz
pusha
mov
popf
mov
scas
adc
adc
lock
hlt
and
ljmp
outsl
iret
mov
dec
std
xchg
inc
test
aad
lahf
xchg
call
jle
xchg
ljmp
cltd
int
and
notl
fcom
pop
add
push
jb
stos
repnz
popf
std
add
out
sub
mov
pushf
push
sbb
sbb
and
les
imul
nop
aas
sub
data16
fwait
test
out
mov
gs
push
test
out
in
insl
std
and
cwtl
jno
into
dec
mov
lret
pop
aas
aam
sub
sub
pop
sar
sbb
cmp
or
inc
ljmp
mov
enter
or
xchg
sbb
dec
in
or
xchg
insl
lret
jmp
mov
dec
xchg
xchg
sub
fs
cld
dec
adc
mov
or
sub
inc
test
pop
inc
fsubp
fnstsw
scas
popa
pop
sbb
mov
adc
icebp
pop
push
ficomps
pop
push
sub
pushl
sahf
hlt
lret
in
ja
out
icebp
jb
mov
push
push
fbld
mov
shlb
fcoml
jl
add
pop
sbb
adc
jecxz
push
daa
push
idivb
inc
inc
mov
sub
jnp
movsl
or
out
dec
out
int
jb
mov
adcl
pop
add
nop
push
dec
sbb
loopne
lret
push
ret
add
cwtl
sbb
daa
push
fidivs
inc
or
mov
rcl
repz
push
outsl
xchg
out
pop
mov
push
popa
pop
imul
loopne
ja
xchg
scas
fs
movsl
fdivrp
add
lahf
xchg
dec
inc
push
insb
xor
pop
inc
jno
rcrb
mov
jmp
xchg
mov
test
add
dec
cmp
test
dec
shrb
push
ss
sub
fadds
hlt
mov
xchg
inc
mov
aaa
cmp
js
jne
xor
in
ljmp
mov
dec
int3
cmp
or
mov
ficompl
or
or
ss
lods
sub
vdivss
or
xchg
pop
jbe
sarl
shl
stos
pop
pop
shlb
leave
inc
sub
in
or
popf
int3
push
xchg
sbb
sbb
sets
xor
in
sbb
dec
ss
jno
sbb
stos
out
push
cwtl
push
sbb
notl
jge
cmp
dec
inc
sbb
push
jae
out
aas
not
dec
dec
push
mov
aad
inc
dec
adc
inc
mov
xor
insb
or
in
and
es
push
lods
inc
mov
movsl
mov
hlt
pusha
imul
mov
mov
dec
push
rcl
add
cwtl
jbe
or
adc
movsb
test
pop
lahf
push
int3
dec
add
rorb
mov
cmp
dec
cld
cmc
sub
insb
pop
xchg
repnz
sar
mov
mov
sub
cli
insl
popf
jb
push
stos
imul
mov
jl
clc
add
mov
inc
mov
movsl
shll
mov
aad
jge
or
and
mov
dec
inc
cmpsl
movsb
loopne
hlt
and
lods
dec
loope
insb
hlt
ret
scas
ret
push
sbb
sbb
jge
adc
jg
cli
mov
pop
mov
jl
das
fsubp
jl
rcrl
mov
cmp
xchg
inc
mov
xchg
pop
push
jne
cmpsl
dec
xor
rorl
dec
add
aam
sbb
subl
cmpsl
std
pop
insl
hlt
push
frstor
xchg
daa
sbb
loope
mov
orb
dec
dec
gs
popf
les
imul
xchg
lahf
stos
inc
call
jcxz
push
shl
or
mov
jp
jb
pop
xor
test
mov
cltd
lcall
lret
jg
cmp
push
fwait
xchg
aam
std
imul
pop
inc
enter
mov
sbb
jae
cmp
or
or
jp
pop
jo
adc
mov
mov
aad
jge
xchg
fnstenv
nop
in
xchg
loopne
jae
lock
gs
test
addb
jne
jl
in
and
mov
dec
jg
dec
push
sbb
inc
notl
movsb
push
jp
clc
xchg
xchg
dec
js,pt
fldcw
sbb
xchg
insl
enter
fisubrs
cmp
pusha
aad
adc
push
dec
test
pop
lock
test
fisttpl
je
fwait
mov
outsb
loop
mov
add
aam
cmc
xor
mov
sbb
xor
outsb
int3
cmp
pmaxub
loope
push
push
fdivrl
ljmp
sub
mov
cltd
xor
lods
fimull
jb
daa
outsb
mov
jo
iret
sahf
lock
adc
cmp
add
stos
ds
push
jg
rcrb
sbb
arpl
insb
ret
fdivr
dec
repz
and
fbld
dec
pop
ret
xchg
mov
add
jg
movsb
adc
iret
dec
fisttpll
popf
sub
mov
les
inc
cmp
cmp
xlat
pop
out
and
ljmp
iret
mov
out
dec
add
adc
and
adc
xchg
xchg
or
sbb
mov
mov
mov
in
pop
arpl
lcall
sub
test
fs
dec
repnz
stos
dec
insb
mov
or
ror
ja
iret
sub
test
insl
sbb
aaa
lock
jge
jnp
mov
xchg
ret
nop
xchg
into
push
sbb
mulb
movsl
je
mov
lods
xor
adc
dec
gs
xchg
cmp
mov
pusha
pop
dec
loopne
inc
inc
pop
dec
cwtl
xchg
test
out
ret
in
adc
inc
mov
shll
cld
pop
mov
fidivl
add
and
lods
lock
cmpsl
push
sbb
fwait
jb
cltd
lods
xlat
dec
hlt
mov
xor
repz
xor
pusha
in
mov
inc
aaa
mov
outsb
ret
sbb
adc
pop
cmp
or
sub
pop
adc
cltd
cs
ret
pushf
xchg
jnp
mov
push
xor
incl
sbb
push
xor
mov
lcall
sahf
push
das
cmp
pop
rcll
lcall
mov
in
lret
test
dec
xchg
bndldx
sbb
fcmovbe
test
sub
inc
and
ret
pushf
fwait
ret
pop
je
out
pop
es
mov
cmp
stos
out
jl
fchs
cmc
mov
dec
scas
cmpb
lret
xchg
hlt
or
int
mov
cmp
or
mov
mov
shl
add
add
fsubr
clc
mov
cmp
adc
insl
xor
outsl
sub
call
sbb
fcomps
push
test
xor
jp
dec
jp
imul
mov
fsubrs
and
notl
adc
xchg
jmp
sbb
sub
jle
ss
in
cmp
push
in
dec
mov
in
cmp
outsb
mov
stos
in
jge
push
jg
lea
dec
lret
mov
dec
call
mov
sbb
mov
test
mov
test
into
imul
inc
aaa
xlat
outsl
dec
jmp
cwtl
sarb
sub
xor
popa
mov
dec
mov
xchg
pushl
dec
mov
std
imul
scas
xchg
or
in
daa
subl
pop
fs
push
sbb
mov
lods
jno
pop
adc
ss
notrack
imul
inc
pusha
inc
out
pop
mov
iret
sbb
inc
sahf
fnstcw
or
shr
adc
std
sbb
lcall
inc
aaa
les
insb
pop
or
pop
cltd
jge
sub
insb
insl
pusha
fs
movsl
push
push
and
fwait
add
repnz
fdivl
in
jmp
or
add
cmp
pop
and
aad
pop
popf
pop
jno
popf
xchg
adc
iret
in
and
int
sub
mov
adc
mov
pop
iret
popa
sub
fwait
push
inc
dec
and
sahf
cmp
repz
dec
xchg
adc
add
add
repnz
in
cmpsb
mov
sub
lret
hlt
jb
iret
daa
pop
inc
adc
xchg
or
out
int3
decl
mov
js
je
test
out
fisttpll
pop
mov
repz
add
add
leave
gs
sbb
mov
cmp
ret
and
inc
mov
and
fisubl
addr16
lcall
dec
inc
ror
hlt
cmp
xor
insb
jo
mov
fs
jg
mov
repnz
lahf
jae
cmp
ljmp
push
sub
addb
pusha
daa
aad
mov
xchg
dec
popf
xor
xor
and
xchg
loopne
ja
mov
scas
repz
xchg
lret
xorl
push
sub
mov
mov
fldt
jnp
cmp
or
push
fstpt
pop
cli
fcmovnu
dec
inc
sbb
repz
lea
cmc
popf
xchg
arpl
mov
ljmp
mov
mov
jmp
ja
jge
outsb
fwait
push
mov
mov
shll
add
int
or
pop
cmp
inc
stos
les
out
hlt
add
fmulp
popa
insb
cli
js
out
mov
sbb
sahf
xchg
adcb
cwtd
mov
insl
sbb
clc
pop
adc
sbb
aam
sub
push
and
and
mov
sahf
jg
jmp
sbb
push
pusha
xor
movl
jmp
push
iret
aaa
loopne
stos
loop
mov
push
xchg
pop
rclb
loopne
mov
in
sbb
pusha
gs
mov
xorb
xchg
test
incb
in
hlt
aad
out
loope
shrb
filds
xor
pusha
jg
ret
leave
mov
mov
mov
dec
xchg
sub
fdivrs
es
xlat
mov
sub
xchg
mov
or
fs
dec
sbb
ds
adc
or
cs
mov
or
rcll
adc
mov
movsl
out
inc
cmp
add
into
mov
mov
je
inc
jb
movsl
mov
mov
mov
popf
outsl
cmp
push
addl
arpl
xor
inc
test
addb
cli
sbb
gs
mov
imul
xchg
jmp
jmp
or
add
shrb
andl
mov
dec
pushf
xchg
fwait
and
mov
inc
adc
adc
push
pop
adc
xchg
divl
fldenv
test
adc
lahf
cmc
pop
testb
sar
push
cmp
outsl
jecxz
inc
out
stos
xchg
sub
xchg
scas
xor
subb
sbb
call
push
xchg
repz
outsl
pushf
test
lock
jnp
clc
scas
or
nop
lret
mov
ret
dec
outsb
imul
insb
lret
fwait
jae
pop
pop
sbb
inc
jge
mov
rcll
loope
sub
iret
push
test
scas
push
in
scas
repz
or
cmp
mov
jle
sbb
cs
hlt
popa
adc
jnp
test
push
pop
aas
sbb
inc
out
jmp
pop
mov
in
daa
or
and
mov
mov
pop
lcall
popa
sti
xchg
xor
jb
out
adc
iret
hlt
ljmp
jns
fucomp
sub
jmp
ja
fisubrl
add
and
jecxz
lret
mov
sub
mov
xchg
stos
push
sub
push
mov
mov
aaa
shlb
and
pop
out
pop
xor
or
jp
divl
add
aam
cmp
imull
loope
sub
sub
jmp
stos
xchg
in
sub
es
shll
mov
dec
fs
repz
icebp
or
inc
test
xor
sahf
enter
mov
sti
xor
test
test
xchg
call
add
loopne
and
pop
aam
pop
pop
je
xchg
add
mov
std
mov
call
movsl
cmp
cmp
mov
add
lcall
adc
push
lcall
jno
movsl
cmp
je
rorb
pop
pop
or
add
jns
lret
pop
int3
pop
mov
sbb
mov
andb
push
sarb
push
jp
outsl
adc
in
cmc
mov
popf
sub
shr
mov
cmp
xchg
sbb
mov
sbb
mov
mov
rorb
sbb
xorl
inc
sbb
js
mov
lods
rol
clc
push
adc
push
int
mov
jb
sahf
xchg
clc
xchg
fwait
ljmp
aam
dec
mov
jecxz
cmpsl
into
lods
fsqrt
adc
push
push
cmp
sub
adc
pushf
inc
push
es
cld
pushf
pop
in
loopne
sbbb
pop
xor
popa
jge
jp
pop
pop
bound
xor
rorl
lds
pop
ds
xor
out
hlt
dec
ss
sahf
fwait
insl
push
aaa
in
xorb
mov
loopne
push
lock
pop
sar
mov
ret
xchg
repnz
ficomps
sub
sbb
fwait
rorb
add
inc
ret
pushf
into
dec
inc
into
add
mov
push
int
in
orl
pop
or
sti
repnz
adc
nop
dec
imul
jecxz
jmp
inc
enter
popf
insb
inc
scas
sbb
rorb
es
in
jne
push
mov
cltd
jle
xchg
mov
test
loopne
cmp
ljmp
mov
push
pop
pop
out
mov
test
mov
std
add
jo
push
pop
dec
out
mov
dec
enter
out
jnp
push
nop
iret
in
mov
lods
xor
clc
notl
pop
adcb
cs
pop
das
add
cmp
out
sbb
mov
or
xor
dec
add
dec
mov
sbb
and
stos
fmuls
inc
inc
dec
dec
pop
leave
sbb
dec
idivb
cli
call
dec
fstpl
mov
jle
pop
and
jmp
rcr
test
in
inc
jle
shll
mov
mov
es
sbb
xor
dec
push
lret
or
mov
cmp
shll
stos
dec
lret
pushf
adc
mov
mov
or
icebp
jg
adc
mov
fdivs
les
loope
push
repz
movsl
fwait
dec
das
sbbl
and
aaa
xchg
xor
sbbl
clc
cmp
xchg
insl
mov
push
pop
fstpt
inc
fimuls
movsb
cli
mov
sbb
cld
and
jecxz
shlb
xchg
jle
mov
jp
sbb
ja
sub
lods
movb
aaa
xchg
ljmp
mov
dec
jbe
sti
xchg
pop
or
mov
dec
sub
adc
stc
in
in
pop
inc
pop
push
int3
and
fbstp
fdivs
in
mov
push
xor
mov
jmp
lcall
sbb
and
out
loopne
inc
data16
cmp
dec
in
sbb
xchg
je
pop
jecxz
adc
jbe
mov
adc
xchg
imul
sbb
jbe
jno
icebp
fwait
jne
jo
imul
push
in
bound
mov
dec
into
jno
mov
aam
mov
cmp
lods
jbe
movntps
ret
outsl
cmp
jge
lahf
xchg
je
scas
mov
outsl
iret
inc
inc
popf
stos
stc
mov
xorl
mov
push
lcall
orb
mov
push
inc
ja
xchg
xor
add
xlat
mov
pop
mov
or
sub
cmpsl
pop
cld
mov
es
add
pop
push
xor
int
mov
cmp
inc
add
xchg
mov
mov
add
mov
push
and
xor
aam
lcall
rcrb
call
cwtl
lods
push
xor
fildll
xchg
cmp
loopne
xor
fldt
nop
adc
lret
testw
cmp
fs
pop
sbb
outsl
in
mov
ret
mov
xchg
mov
lcall
cmp
xchg
andl
pop
repnz
dec
pop
add
popf
mov
cmp
ja
jnp
cmp
mov
pop
add
aaa
gs
mov
pop
and
inc
mov
mov
out
cmp
and
mov
and
shl
xor
clc
fnstcw
pop
nop
xor
in
dec
repz
fstpl
cs
aad
adc
mov
mov
lahf
dec
arpl
sub
or
or
movl
pop
orb
dec
test
dec
or
dec
push
idivb
nop
loope
call
hlt
xchg
mov
mov
push
xchg
test
push
int
stc
mov
inc
pop
testl
frstor
cmp
dec
das
setp
fadds
fwait
ja
dec
cli
sbb
ja
and
sbb
outsb
jg
adc
sahf
bound
sbb
test
push
cli
pop
mov
pop
sbb
mov
cmp
add
xor
and
sub
cltd
ret
sbb
sub
ds
cmpsl
cltd
movsl
loop
xor
int
jecxz
scas
dec
mov
pop
pop
mov
das
outsb
test
dec
daa
pop
jne
popf
inc
out
mov
aad
test
fildll
les
xchg
xchg
fdivrs
fdivrl
xorl
add
stc
scas
mov
aad
loop
cmp
pop
jg
xchg
jp
cmp
mul
pop
repnz
int
in
push
pop
inc
xchg
dec
arpl
and
adc
dec
fwait
mov
in
mov
loope
pusha
mov
repnz
cmp
mov
rolb
mov
rcr
fisubl
mov
aas
and
cmp
adc
rclb
in
push
outsb
mov
cmp
inc
sbb
and
jo
fildll
into
dec
fcompl
jle
cltd
push
imul
xor
jbe
ds
and
sbb
or
xchg
pusha
lock
outsb
lret
push
movsl
sbb
jle
stc
xchg
into
aad
add
inc
push
mov
mov
jp
and
ret
xchg
jecxz
pop
xor
ss
inc
lock
fdivrl
dec
dec
mov
stos
lods
data16
mov
cltd
jg
in
mov
mov
daa
cmp
mov
out
inc
mov
xor
out
in
cmpsb
add
push
shrb
repnz
nop
cmp
loop
rorb
scas
pop
jnp
cs
add
cmp
rcr
mov
int
inc
dec
sbb
pop
rcl
lcall
mov
enter
dec
add
aaa
jmp
fcoms
hlt
jmp
pop
gs
and
imul
mov
into
icebp
xchg
adc
dec
hlt
cmpsb
push
hlt
mov
and
popf
add
icebp
pop
stos
push
cltd
add
mov
mov
out
lahf
xchg
out
mov
aaa
repz
and
and
mov
pusha
pop
or
rorb
ret
inc
push
add
pop
jnp
call
lds
fimuls
inc
cli
push
jmp
mov
ss
xchg
lret
pusha
sub
call
push
and
sbb
cmp
int
cmp
pop
lds
stos
subl
fbld
test
out
repnz
popf
add
mov
jb
xchg
aaa
int
dec
imul
jp
add
push
sbb
repnz
xor
adc
adc
js
jecxz
cmpsl
sub
and
mov
outsb
fnsave
inc
xchg
psraw
lahf
int
inc
and
lods
loope
popf
je
xor
rorb
add
fisttpll
or
pop
cmp
dec
mov
pop
insl
mov
push
or
sub
negb
lahf
cmp
sbb
mov
xchg
mov
fstl
in
mov
aas
cmpsb
lods
lahf
and
sub
inc
in
mov
imul
test
mov
xor
xor
adc
push
jle
jl
out
push
popf
out
mov
push
pop
imul
sbb
ret
dec
inc
mov
or
mov
insl
pop
hlt
xor
mov
and
mov
sbb
or
lock
pop
mov
int
lods
rclb
sub
push
mov
hlt
sarb
sbbl
push
ljmp
adc
bound
repnz
out
mov
addr16
loop
push
movsl
fists
mov
mov
sbb
sub
jno
fiadds
or
ljmp
push
and
lret
push
shlb
inc
rcll
insb
or
sbb
xor
scas
pop
lahf
sub
idivb
or
push
or
fcomps
rolb
jb
and
out
les
pusha
dec
mov
sub
xchg
mov
cmpsl
push
mov
jne
jge
test
pop
inc
jno
sbb
inc
rcr
lcall
fs
loopne
rep
orl
scas
imul
cmp
aad
and
push
push
cmp
das
sbb
ss
jp
sbb
push
and
xor
add
mov
and
cmp
pushf
fistps
sbb
movsl
pop
fs
push
cli
and
je
jecxz
cwtl
and
lods
xchg
mov
sub
mov
shrl
ljmp
in
stos
andl
outsl
js
shll
cmp
pop
fnsave
pop
lahf
clc
lods
cmp
adc
sbb
cmpsl
xor
out
add
adc
add
subl
pop
xlat
xchg
call
and
add
insl
mov
sbb
adc
out
popa
inc
mov
clc
pop
leave
cmpsl
dec
or
orl
mov
xchg
popf
jmp
in
js
adc
push
cmc
fisubl
push
inc
mov
cmpsl
jmp
sub
mov
inc
push
xchg
sub
sbb
rep
pop
into
add
cmp
popf
inc
xchg
inc
adcl
ljmp
xor
and
adc
bound
jp
jne
lods
out
xchg
aaa
int
pop
xchg
or
hlt
jne
cld
test
in
jb
loope
mov
mov
mov
inc
xchg
cmp
das
lods
ss
xchg
daa
push
es
sbb
pop
cltd
out
aas
addr16
push
adc
mov
sub
je
imul
clc
mov
lret
push
in
add
adc
loopne,pt
out
cmp
xchg
xor
daa
ss
out
mov
dec
iret
fsubrp
stc
and
xor
lret
push
cmp
jl
push
mov
inc
in
test
fldpi
push
sub
lods
rorb
leave
pop
stos
movsl
fidivl
pushf
jge
lock
adc
xchg
nop
push
movsb
pop
int
fisubl
rolb
hlt
inc
stos
shlb
or
daa
aaa
pop
cmp
in
pop
popa
sbb
shrb
mov
jns
adc
dec
jo
stc
or
out
push
sbb
push
inc
and
icebp
aad
scas
cmpsb
shlb
pop
and
fists
outsb
fisttpl
xor
xchg
mov
test
mov
roll
movzwl
aaa
mov
pushf
fists
adc
xchg
movsb
shll
sub
fldcw
mov
lods
sbb
and
call
repz
sbb
xchg
and
icebp
rclb
push
lods
lahf
add
xchg
adc
xor
lock
inc
jae
pop
mov
or
repnz
popf
cmp
xchg
movsb
sahf
mov
sbb
mov
and
adc
jns
stos
mov
jmp
adc
clc
in
xchg
ss
push
lahf
fstl
cltd
inc
xchg
lds
aas
loopne
jnp
cli
mov
ret
rcl
bound
dec
js
jns
jno
pushf
movsl
add
pop
push
jne
popa
stos
mov
sbb
mov
call
add
jmp
stc
push
jle
jl
add
nop
orb
and
pop
adc
dec
int3
pop
std
dec
jb
insb
enter
push
subb
fwait
je
or
inc
movsb
outsb
and
ret
jmp
shlb
imul
and
mov
add
adc
fnsave
cmc
int3
mov
aam
add
push
cmc
add
pop
fdivl
ljmp
lcall
jge
mov
pusha
and
mov
call
push
cmpl
push
jle
outsl
cmp
pop
push
mov
adc
iret
mov
popa
adc
cmc
fisubrl
stos
icebp
repz
fidivl
popa
dec
das
xor
mov
cli
mov
aaa
mov
mov
and
and
mul
testl
cmp
push
adc
dec
rcrb
inc
pop
icebp
imull
sub
adc
inc
jge
dec
xchg
jle
jg
lock
push
sbb
in
add
popf
inc
scas
dec
call
rcll
jae
xor
jmp
mov
push
sub
inc
in
lret
add
mov
pop
insb
pusha
mov
sub
or
ret
mov
pop
inc
in
add
fdivl
icebp
xchg
andl
mov
addr16
in
leave
insl
and
inc
mull
repz
fadds
xor
stc
and
test
push
les
mov
jae
lahf
pop
ja
arpl
shlb
push
jbe
mov
ljmp
mov
jp
cli
not
and
sub
inc
pop
jp
jge
leave
test
pop
cwtl
fimull
loop
dec
das
aad
pop
xchg
xchg
jo
mov
mov
gs
in
notl
cmpsb
jae
enter
xchg
xchg
dec
or
xor
shl
test
scas
shlb
pop
dec
mov
loopne
dec
orb
or
cmpsl
cld
aas
xchg
jl
arpl
jmp
lret
test
in
pop
imul
cmp
das
ret
cmp
lret
or
jno
xor
pop
sbb
aam
sub
mov
test
stos
push
push
pop
in
outsl
sar
jl
stos
push
pop
scas
aas
shlb
sub
mov
dec
leave
lcall
lds
stos
push
cmp
xchg
or
push
sub
lds
dec
xor
fwait
jae
jle
repnz
lds
inc
lea
mov
cmpsb
call
inc
cmc
lods
out
mov
lea
pop
push
rolb
sbb
sarl
hlt
ret
mov
push
jns
hlt
pop
adc
sbb
dec
pop
jb
and
aas
xchg
insl
scas
rolb
xchg
shlb
or
adc
loope
cltd
leave
shlb
mov
mov
and
jns
push
adc
mov
or
xor
adc
inc
mov
or
icebp
loope
sbb
mov
fdivs
and
xor
adc
push
insl
mov
mov
loop
pop
in
bound
es
xchg
mov
scas
lret
cmp
add
sbb
out
push
xorb
add
jecxz
mov
mov
lcall
push
jge
inc
fimull
repz
aas
pushf
frstor
xor
dec
test
test
loopne
test
into
out
clc
pop
lock
sub
movsl
imul
adc
dec
fprem1
bound
sub
push
or
add
fs
jp
or
sbb
adc
into
enter
imul
addr16
add
lods
sbb
mov
test
xor
dec
push
gs
pushf
lahf
dec
in
mov
mov
out
mov
sti
jbe
xchg
mov
push
ret
andl
in
mov
in
xor
test
cmp
mov
les
mov
out
call
pop
aad
mov
xchg
push
in
mov
psubd
sbb
pusha
jns
dec
mov
mov
roll
inc
xchg
jge
int
inc
push
clts
adc
es
out
dec
sub
std
jo
inc
dec
lahf
xor
dec
inc
sbb
dec
loope
mov
mov
popf
xchg
shl
pop
sub
inc
adc
and
mov
cs
stc
and
inc
cmc
call
cld
xor
adc
push
jp
sub
icebp
mov
mov
xor
ret
pop
call
arpl
mov
pop
nop
cli
outsl
jmp
jg
xchg
or
enter
push
sbb
inc
sub
ss
adc
in
inc
mov
icebp
bound
aam
fwait
jmp
mov
sahf
lcall
xchg
enter
sub
insb
mov
fsts
lods
push
loope
pop
call
xchg
test
ficoml
out
aas
mov
jb
jns
sub
push
xlat
repnz
in
sti
inc
sti
xlat
mov
adc
insb
enter
mov
pop
jmp
push
clc
fwait
call
and
movsl
xor
in
cmp
cli
ficompl
jl
mov
push
arpl
shlb
inc
fldenv
mov
push
out
aad
dec
xchg
pop
xchg
out
mov
mov
ds
dec
fbstp
ficomps
pop
jno
out
ret
subb
pop
mov
push
push
mulb
cltd
jmp
adc
adc
dec
test
imul
jle
add
fmuls
or
jo
ja
test
das
push
cmc
imull
push
and
add
aad
out
cmp
push
pushf
mov
outsb
loopne
insb
addr16
sbb
leave
push
push
idivb
mov
test
push
setno
popa
dec
loopne
cmp
xor
cmc
outsl
xlat
mov
or
inc
jae
insb
aas
inc
cwtl
sbb
inc
rcrb
loopne
bound
fdivl
pop
mov
xor
pop
cltd
fidivrl
lock
mov
mov
pop
mov
xchg
cmpsl
sbb
lahf
add
aaa
insl
gs
sysret
ljmp
stos
sbb
lcall
sti
push
bswap
pushf
shlb
inc
mov
sub
scas
fists
cmp
xchg
movsl
sub
ja
in
xor
mov
mov
jne
arpl
mov
lds
sbb
add
lock
nop
stos
icebp
call
sub
xchg
mov
adc
in
out
mov
jbe
xchg
cwtl
rclb
jge
push
or
das
lret
mov
inc
in
dec
aas
cli
into
push
mov
arpl
ds
xor
mov
mov
jl
sbb
shl
xchg
jecxz
mov
pop
cmpsl
nop
fistpl
jl
push
cmp
adc
aad
push
rcrb
out
lahf
mov
imul
push
cmp
mov
push
pop
xchg
mov
js
mov
icebp
ss
out
mov
jb
mov
sarb
mov
scas
and
imul
call
repnz
scas
lock
jae
decb
mov
inc
push
jns
push
dec
jae
xchg
jecxz
xlat
into
push
into
push
cli
or
cmp
mov
mov
adc
cmp
or
repz
imul
fidivrl
call
scas
sub
insb
pop
in
jp
icebp
xlat
aam
je
jne
pop
inc
orb
mov
rcrl
test
dec
es
dec
lret
mov
and
push
clc
insb
sbb
leave
xor
or
cli
mov
cmp
shrb
arpl
jne
scas
ret
or
fwait
out
and
loope
aas
int
and
addr16
sbbb
arpl
jbe
popa
dec
mov
int
mov
sub
jns
and
cmp
repz
in
aam
mov
pop
repnz
adc
std
btr
mov
aaa
mov
push
jle
enter
inc
jns
ja
mov
cwtl
pop
fldt
imul
dec
dec
jne
and
inc
fwait
jge
mov
xlat
lahf
stc
add
sbb
inc
xchg
mov
mov
cmpsl
ffreep
and
and
dec
into
dec
add
fcmovne
lds
dec
mov
push
aam
pop
mov
jbe
out
mull
mov
inc
jmp
mov
ss
stc
outsb
es
mov
jecxz
or
push
stc
push
adc
cmc
cs
movsb
cmp
mov
or
stos
and
xchg
dec
inc
mov
or
les
loope
jae
ss
gs
add
cli
in
popl
push
in
stos
iret
sub
jmp
jbe
add
xor
arpl
adc
jb
inc
mulb
jl
in
mov
push
sub
push
cmp
inc
jecxz
jle
fistl
fbld
data16
xor
test
inc
mov
fdivl
add
push
mov
sub
inc
addl
mov
imul
or
push
data16
mov
mov
mov
fimull
inc
push
in
pop
out
jns
ja
and
cmp
movsl
xchg
iret
xchg
dec
call
mov
sub
adc
cmc
push
outsl
push
push
dec
aaa
cld
cmp
lds
int3
in
xor
insl
scas
sub
inc
jae
pushf
and
push
imul
mov
in
in
dec
jb
or
js
cs
in
jg
mov
loope
push
sti
mov
or
mov
mov
std
inc
mov
dec
leave
jns
mov
xlat
insl
or
clc
int
lcall
enter
jecxz
mov
push
out
test
jo
loop
mull
cmp
jp
sbb
dec
into
rclb
data16
xor
repnz
dec
xor
clc
jl
frstor
sbb
push
stos
push
repz
les
and
cmpsb
cmp
push
inc
ja
add
cmpsl
xlat
or
lea
sub
mov
int
mov
in
mov
mov
lods
cld
ljmp
jno,pt
inc
mov
push
or
mov
js
insb
fs
dec
fnstcw
inc
out
flds
test
ja
adc
lds
sti
out
sub
leave
leave
jmp
pop
sarl
in
adc
arpl
icebp
sbb
dec
or
pop
push
cmpsb
addl
mov
nop
jle
int3
adc
pusha
sbb
mov
cli
dec
andl
into
xchg
adc
mov
shl
or
mov
mov
js
dec
in
test
out
pushf
jle
icebp
lods
scas
xchg
push
jecxz
roll
xor
repnz
inc
shlb
in
arpl
mov
test
popf
mov
dec
mov
jmp
and
cmp
inc
pushf
jmp
inc
into
lcall
jmp
pop
pop
mov
ret
loope
xor
mov
pop
movsl
adc
add
out
and
and
xor
inc
pop
xchg
adc
mov
jns
in
movsb
repnz
in
xchg
outsl
and
stos
pop
mov
mov
jae
lods
popf
push
push
add
sbbb
lahf
pop
jecxz
insl
cld
mov
aad
xchg
out
std
gs
aaa
jecxz
sbb
paddusb
xchg
and
ja
or
ja
jno
mov
push
jns
pop
ffree
sbb
jne
mulb
repz
and
dec
fcmovnbe
stos
and
adc
jbe
pop
in
pop
and
in
sbb
cmp
push
mov
jns
scas
icebp
mov
add
xchg
and
sub
rcrb
pop
mov
aad
sub
cmpb
and
sarl
mov
ret
movsl
dec
aad
nop
addb
inc
sub
loope
insl
mov
dec
adc
lock
sub
pop
adc
jo
lods
xchg
xor
stos
popa
scas
dec
mov
movsb
adc
sub
sahf
mov
stc
mov
mov
in
inc
sbb
and
hlt
mov
in
mov
pop
flds
ja
mov
movsl
movsl
in
jae
out
sbb
cltd
fs
das
pop
inc
stos
dec
pop
mov
pop
call
or
stc
mov
inc
adc
mov
push
out
xor
scas
inc
xor
or
cmp
jecxz
sub
je
mov
insl
lea
add
int3
notb
sub
push
jns
jp
cltd
push
sbb
loope
push
out
popa
jmp
arpl
sub
pop
adc
jne
popf
pop
aam
aad
jo
sub
jl
add
pop
sub
outsl
adcl
aad
daa
mov
ljmp
insb
push
mov
dec
pop
mov
xor
ljmp
mov
xchg
pop
stos
xor
in
andb
xor
xor
add
rorb
inc
cs
movsb
out
stos
or
lea
cli
sbb
clc
scas
pushf
int3
cmp
mov
add
jmp
rcpps
xchg
push
sub
adc
inc
dec
pop
adc
pop
outsb
mov
stc
add
mov
pop
adc
push
out
pop
mov
mov
or
or
mov
inc
sub
aad
mov
aaa
pop
adc
xor
lar
jle
shlb
outsb
pop
das
or
sarl
and
pop
out
mov
mov
test
push
adc
mov
cmp
fwait
jns
and
rcrb
inc
fistpl
mov
jb
popf
add
outsl
and
adc
jp
in
add
mov
fisttpl
mov
mov
into
mov
pusha
sub
dec
and
add
xor
push
mov
std
push
lret
test
cmc
mov
shrb
iret
int3
xchg
inc
sub
cs
adc
aaa
cmp
arpl
pop
clc
icebp
lea
daa
sub
jmp
imul
sub
test
stc
sbb
sub
test
or
jbe
lret
out
out
push
outsb
adc
jl
push
jno
lock
aad
or
pushf
popa
cmc
dec
aam
mov
pop
push
mov
imul
ss
dec
mov
xchg
pushf
pop
pop
insl
xchg
lock
imul
test
or
dec
cmpsb
lcall
push
xor
incb
pop
inc
or
lock
test
mov
loopne
mov
mov
inc
cld
jecxz
cwtl
add
or
push
subb
xchg
movsb
sbb
mov
mov
sub
push
pop
scas
pop
mov
mov
ss
push
push
push
ds
push
inc
sbb
in
adc
out
cld
data16
stos
sarl
adc
mov
mov
sub
and
mov
jns
xchg
push
loopne
sarb
inc
adc
sub
mov
cmp
and
or
sarb
fsubrl
xlat
es
pop
repz
mov
sub
sbb
cmp
mov
movsb
cmp
out
call
mov
jp
in
jb
jl
or
stc
iret
pop
std
and
ret
inc
xor
pop
in
push
clc
cmpsb
out
adc
andb
xchg
push
lret
mov
mov
sarb
sub
add
pop
jmp
mov
inc
push
and
lock
inc
lret
xor
out
fcoml
mov
and
add
pop
ret
inc
and
jle
push
jmp
scas
mov
mov
enter
sbb
sub
jg
jbe
pusha
les
add
das
das
push
iret
lcall
pmuludq
sahf
jmp
loope
push
cmp
mov
ljmp
ficompl
cwtl
mov
push
push
pushf
dec
daa
gs
cli
mov
lret
enter
lods
jmp
flds
or
lret
idiv
mov
and
or
cmp
mov
in
xor
pop
sbb
adc
mov
jno
jl
push
ljmp
inc
push
les
lods
pop
push
dec
in
cmpsl
cmp
scas
pusha
or
mov
sub
sbb
addl
fldt
add
sbb
in
inc
rclb
jle
sbb
psubw
xchg
or
cmp
cmc
inc
adc
pop
inc
mov
sti
ficoml
sbb
decb
movsb
movsl
pop
cmp
dec
pop
pop
cld
lahf
add
or
sub
or
mov
sub
and
les
das
and
sti
jle
int
sub
int
pop
cmp
test
xchg
shr
pusha
jbe
and
cmpsb
call
mov
daa
movsb
out
xor
loopne
adc
xchg
aaa
cmp
pop
push
out
jl
mov
sbb
pop
jmp
xchg
les
jl
push
push
jl
jno
dec
jbe
cltd
jno
inc
stos
pop
cltd
mov
lods
cli
mov
push
outsb
lret
xor
xchg
inc
mov
shlb
jbe
mov
shlb
ret
lahf
hlt
jne
lds
mov
decl
loop
sti
push
or
or
and
dec
mov
lods
sbb
and
cwtl
jl
ret
dec
test
int3
and
cmpsb
cs
jbe
or
inc
sbbl
adc
jecxz
clc
cmp
lock
adc
push
loope
sbb
adc
push
das
add
push
fisubrs
rol
inc
mov
fcompl
xor
adc
xor
adc
pusha
xchg
cmp
dec
mov
pop
mov
xchg
test
hlt
shrb
pop
sbb
jecxz
push
in
jbe
int3
cli
and
sbb
dec
movb
adc
gs
sub
out
pop
push
or
into
mov
xor
movsl
and
jge
jno
aam
pusha
leave
sub
cmp
cmp
test
pop
pusha
mov
dec
or
mov
out
sub
test
test
push
pusha
aam
push
and
scas
fdiv
jg
inc
insb
inc
push
and
pop
sub
out
mov
inc
movb
ss
jbe
loope
add
out
mov
mov
dec
cmp
movsl
jl
scas
add
mov
popa
dec
mov
nop
mov
add
sahf
xor
xchg
out
les
mov
xchg
int3
cmp
fsubrs
pusha
jle
iret
pop
movsb
sub
pop
or
add
push
mov
xor
mov
sbb
sub
mov
pushf
xor
push
add
push
xchg
sbb
dec
ljmp
in
loop
adc
dec
sbb
call
inc
mov
aad
out
das
mov
mov
add
icebp
push
adc
jg
add
push
xchg
orb
pop
push
push
add
mov
leave
xor
test
push
sbb
inc
xchg
fisttpll
sbb
dec
sub
mov
adc
out
mov
stos
or
mov
sub
scas
jne
lret
inc
adc
ja
and
int3
mov
data16
aam
stos
cmc
jmp
push
mov
lret
xor
pop
mov
fwait
stos
mov
or
sti
packuswb
sarl
negb
out
pop
les
aam
xor
xorb
ret
inc
adc
mov
jo
movsb
jp
xor
mov
sub
mov
add
cmp
in
pop
push
or
in
sub
lock
fisubs
jl
addr16
mov
mov
or
adc
pop
mov
push
xor
cmp
jae
push
jmp
or
and
ljmp
stos
jl
jl
paddsb
out
out
aam
fldt
pop
in
mov
inc
and
sbb
arpl
and
or
xor
ficomps
in
xchg
pusha
cmp
int
inc
fwait
inc
loope
cwtl
mov
repnz
mov
loopne
les
pop
jne
push
push
int3
adc
push
mov
shrl
imul
jmp
xchg
cmp
js
cmpsl
lcall
jbe
push
jp
rorl
mov
lcall
orb
ret
cltd
inc
adc
xchg
jmp
insl
je
push
fwait
adc
xchg
mov
bnd
cli
sbb
mov
jo
outsl
xchg
push
int3
nop
loop
daa
push
pop
movsl
jl
pop
dec
xchg
mov
call
jae
lock
and
jge
jecxz
mov
js,pt
jg
jnp
leave
sbb
fisubs
dec
xchg
mov
lods
lds
rclb
mov
in
mov
lock
and
sbb
cmc
fcoms
ljmp
and
push
sbb
mov
pop
fs
inc
push
loope
stos
in
dec
cmp
adcb
jl
mov
adcl
adc
add
and
jle
cmc
push
mov
inc
enter
in
push
hlt
push
repnz
test
lahf
pop
fcmovnu
mov
addr16
inc
cmp
jne
cmp
pusha
cltd
push
cmp
rolb
decb
mov
jne
adc
les
iret
outsl
cmp
iret
dec
aaa
jno
fidivl
push
je
jo
jp
andl
fwait
pop
sbb
push
andb
pushf
leave
movsb
dec
xlat
loope
insl
xchg
adc
js
mov
lret
add
cli
repz
xorb
dec
mov
xor
scas
loopne
sbb
divb
ret
fidivrs
mov
gs
pushf
mov
push
inc
pusha
sarb
icebp
rorb
andl
cs
test
int3
push
pusha
in
dec
fcmovne
lock
enter
inc
push
faddl
dec
jne
test
mov
inc
xor
je
incl
sbb
faddl
test
sub
pusha
je
dec
lea
loopne
jb
pusha
dec
dec
vcvtdq2ps
sub
rcrl
pop
movsb
test
out
shrb
ret
cmp
aam
xchg
pop
lods
pop
shlb
mov
jno
xlat
roll
push
mov
mov
mov
jle
jp
out
add
aas
das
shrb
pop
push
mov
add
sbb
lock
in
decb
dec
nop
lock
cmp
sbb
pop
pop
pop
test
xchg
jo
jo
cld
fs
cltd
mov
inc
pop
pop
or
xchg
loop
rcll
xchg
mov
aam
xlat
movsb
es
push
popa
lods
lods
daa
push
sbb
cmp
bound
test
in
sub
xor
outsb
aaa
je
cmpsb
mov
lret
cmp
xchg
sbbl
jle
out
adc
mov
test
in
mov
test
jle
xchg
movsl
sbb
cmp
inc
jmp
and
xorl
rorb
dec
jne
aam
inc
fcomps
lea
and
add
inc
push
mov
sub
addr16
cmovp
cmpsl
mul
xchg
sub
roll
daa
insl
xor
or
pop
or
mov
loope
imul
pop
push
push
add
and
add
adc
arpl
push
rorl
pushf
in
jge
icebp
lods
gs
jnp
repnz
subl
repnz
in
testb
lods
adc
xchg
push
mov
insb
or
push
daa
xchg
lods
mov
and
push
mov
xor
lods
outsb
mov
cmp
call
mull
jno
das
xlat
inc
stc
ret
mov
add
mov
ds
or
es
push
jecxz
dec
rcrb
cvtdq2ps
sbb
pusha
xorl
or
add
mov
mov
ret
fcompl
leave
enter
pop
push
repz
mov
or
ret
add
loop
jo
push
jp
ficoms
movsb
lea
xor
fimull
pop
filds
xchg
andl
cwtl
push
pop
sub
out
testl
xchg
shll
xchg
pusha
bound
inc
aaa
xchg
or
pushf
popf
jge
aam
nop
inc
or
jge
aam
sbb
nop
and
cmc
aad
mov
pop
in
push
or
inc
jne
push
aaa
movsb
add
out
mov
adc
stos
repz
movsl
ficomps
sbb
js
push
sub
dec
jb
pushf
insb
loop
pop
enter
daa
dec
adc
iret
lcall
xor
sub
scas
sbbb
jmp
fs
or
fldcw
and
push
xchg
cmp
imul
mov
int
add
sahf
not
jbe
dec
jg
rorl
lahf
iret
mov
int3
xchg
fdivrp
gs
cmp
outsb
xor
adc
inc
adc
in
push
dec
mov
jmp
cmc
rorl
sahf
push
rcll
test
mov
popf
dec
outsl
stos
or
ss
sub
push
push
or
mov
rclb
repz
jmp
repnz
xorb
push
mov
aam
int3
mov
jecxz
or
fwait
lods
in
mov
loope
add
in
push
jmp
cs
rcrb
push
cmp
aam
cmpsl
jge
pop
lret
or
pushf
add
xchg
in
leave
mov
jbe
pop
test
mov
inc
pop
push
sbb
mov
out
popa
mov
push
fwait
cwtl
or
dec
or
and
lret
cmpsb
dec
xchg
cmp
popf
dec
mov
lcall
push
and
mov
stc
xor
pop
or
pusha
std
adc
movsb
stc
sbb
dec
repnz
or
push
jnp
outsl
sub
cmp
lahf
push
jg
xchg
mov
sub
incb
add
xchg
push
icebp
xlat
mov
adc
and
xchg
xchg
jae
nop
and
fcmovne
test
xchg
aam
and
or
aad
outsb
push
xor
and
enter
lea
push
jecxz
mov
outsl
pop
dec
mov
mov
sbbb
push
nop
std
in
nop
or
mov
mov
cmp
adc
mov
aas
cmc
xchg
sbb
cs
sbb
test
pop
sbb
jb
mov
test
mov
sti
shrb
cmp
mov
push
stc
jl
stos
fdivrs
fbld
xchg
dec
imul
mov
imul
aam
loopne
xchg
lahf
add
add
das
inc
ss
jp
lds
jecxz
jae
or
icebp
and
bnd
fiaddl
lods
push
xlat
icebp
xchg
insb
call
jno
pop
call
mov
popa
and
faddl
xchg
bound
aam
lret
pop
or
xchg
cmp
fimull
add
push
jae
xchg
add
ljmp
mov
aad
imul
addr16
sub
push
cs
pop
sub
xchg
outsb
or
mov
push
push
and
xchg
shlb
aam
push
sahf
push
out
dec
fdiv
notrack
shlb
lret
adc
es
stc
test
in
lea
sbb
lret
mov
aad
mov
sbb
scas
hlt
or
dec
lds
sub
fs
sub
cld
mov
cli
or
and
add
dec
push
add
cmp
mov
xchg
int3
cmp
clc
stos
fists
sub
das
add
outsb
sub
cmpsb
lds
dec
ss
push
movsb
popa
test
sub
dec
add
enter
push
repz
jle
mov
xchg
adc
lea
notb
aas
scas
roll
fdivrl
in
sub
scas
inc
stc
and
scas
mov
lea
decl
or
cmc
or
sbb
enter
loop
imul
pop
adc
inc
int
shll
add
sub
bound
adc
jne
mov
sar
aam
fimuls
mov
push
add
int
ret
mov
add
ja
mov
movlps
sbb
scas
fwait
pop
cmp
adc
jo
xor
or
gs
stos
push
arpl
push
jp
out
leave
inc
adc
cmp
popa
push
sub
inc
mov
mov
pop
mov
loope
and
jb
sub
mov
stc
dec
jge
icebp
mov
sbb
push
sets
xor
mov
cmc
or
mov
int
popa
scas
sub
push
pop
in
jae
jae
stos
cmpl
xlat
insl
mov
xor
js
mov
pop
icebp
js
fcompl
in
sub
cmp
jecxz
fwait
jns
push
gs
adc
call
jmp
andb
mov
loopne
es
ret
hlt
push
popf
mul
pcmpeqb
xor
jno
dec
daa
iret
cmpsb
add
pop
sub
repz
and
inc
xor
jp
mov
mov
jo
scas
xchg
imull
cs
call
cltd
ja
add
push
sbb
sbb
mov
push
push
pop
data16
dec
xor
imulb
and
pushf
nop
inc
jb
ss
jp
addr16
cltd
out
mov
dec
and
lock
mov
adc
ret
insl
fwait
lahf
mov
mov
leave
mov
sub
ret
int3
iret
pop
mov
mov
add
mov
je
jge
mov
mov
jmp
iret
mov
and
and
popa
fcmovnbe
cmp
mov
xchg
or
shrl
sbb
call
jle
jmp
sbb
adc
adc
rcrl
pop
nop
jne
pop
xor
inc
es
push
js
adc
ljmp
js
mov
rcr
mov
aas
imul
push
mov
jge
or
xchg
xor
mov
push
jo
shlb
nop
sbb
push
ss
pusha
mov
jmp
jb
cmp
pop
inc
sbb
and
inc
push
scas
cmc
xchg
daa
outsb
cs
mov
rcrl
insl
dec
jno
addl
data16
mov
mov
ljmp
sub
popa
xlat
movsl
mov
mov
ret
arpl
inc
sarb
or
cmp
clc
adc
pop
popf
cmpsb
js
sbb
loop
mov
insb
out
mov
xchg
lods
pop
sbb
pop
fnstenv
pushf
popf
xchg
mov
inc
inc
fsubrl
rcll
pop
scas
pop
scas
mov
push
icebp
push
mov
pusha
push
pop
jae
ja
fists
test
cltd
test
push
inc
add
pop
lods
or
sub
inc
dec
lock
push
add
jp
imul
xchg
cmpsl
jno
fs
aaa
pop
aaa
fbld
fsubl
subb
sbb
dec
sub
mov
clc
sub
pop
nop
lods
stc
dec
outsb
sbb
xlat
cmc
loope
add
sbb
icebp
imul
inc
mov
loop
pop
aad
andb
jge
clc
mov
jp
insb
mov
jp
ds
xchg
rcrl
sbb
mov
ss
repz
add
dec
adc
aaa
fmull
cwtl
repnz
xchg
pusha
push
adc
xchg
xchg
adc
int
cmp
push
insl
xor
add
icebp
jl
adc
pop
pop
pop
jo
mov
scas
addl
jnp
jmp
popa
call
xchg
push
push
shll
inc
xor
ret
inc
enter
shlb
sbb
enter
bound
push
xlat
test
les
pop
cli
push
cld
js
lds
dec
and
fsub
rcrl
test
xchg
lret
repz
and
jmp
ljmp
or
dec
mov
jl
mov
clc
subb
mov
in
mov
lcall
div
aam
shlb
lds
xchg
neg
subl
ret
into
add
mov
mov
or
jno
ja
imul
addl
adc
stc
in
push
xchg
sbb
cltd
repnz
aaa
mov
dec
pushf
sti
adc
jge
inc
xchg
cmp
or
mov
int3
aad
push
shlb
mov
call
mov
push
lcall
filds
lods
mov
push
repz
jmp
mov
lods
mov
jb
or
jb
notb
inc
jbe
jne
fdivp
lods
adc
lods
test
sub
sub
mov
mov
push
xchg
stc
icebp
fstpl
cmp
in
jle
pusha
xchg
lcall
test
cmpsl
inc
mov
mov
ljmp
adc
rcl
sbb
cmp
cmp
and
and
es
pop
in
loope
mov
sbb
lret
cltd
test
rorb
push
incb
je
add
lea
rol
lock
or
into
test
add
movsb
jl
aaa
and
pop
add
or
popa
add
or
jmp
mov
nop
fldt
clc
jle
inc
cmp
adc
push
rcrb
xchg
xor
pop
test
xor
cmp
or
mov
adc
sbb
add
ret
lahf
jae
xchg
xor
add
dec
jg,pn
cwtl
out
inc
xchg
dec
mov
xchg
inc
sahf
cmp
push
mov
cltd
push
jne
add
popa
stos
aas
rolb
and
pop
lahf
xchg
inc
push
jno
adc
lods
jo
pusha
inc
ja
xchg
js
xchg
scas
push
loope
fadd
shlb
xchg
ljmp
sbb
cmpsl
stc
dec
or
jno,pn
or
lods
mov
ds
ficoms
xchg
pop
les
mov
mov
shrb
push
lcall
cld
leave
or
dec
xor
sti
cld
movsl
lods
mov
jnp
xor
pop
mov
jmp
and
shlb
fbld
mov
ffreep
push
popf
loopne
push
mov
push
lcall
dec
dec
mov
push
addr16
movsb
test
in
imul
loopne
data16
pop
adc
xchg
jl
lods
inc
cmpsl
ret
cmpsb
decl
lock
xchg
mov
aad
int
cmp
aad
or
ret
or
jle
xor
ljmp
push
arpl
mov
inc
push
pop
cmp
and
fpatan
lret
flds
inc
inc
jle
xchg
mov
scas
jl
adc
out
adc
cmp
jmp
push
int3
mov
mov
mov
testl
das
xchg
arpl
enter
xchg
ss
push
adc
inc
push
outsb
add
adc
mov
pop
outsl
int3
sbb
gs
jle
lret
cwtl
popl
xchg
pop
sarl
mov
cmc
shl
mov
imul
push
mov
fnstenv
gs
lea
and
jle
pop
inc
rol
xlat
jp
push
dec
int3
xchg
dec
jnp
adc
inc
and
mov
lods
sbb
ret
repz
clc
sub
pop
inc
fimuls
insl
call
mov
mov
outsb
inc
nop
mov
daa
mov
and
xchg
repz
sbb
jle
mov
int
fcomps
imulb
repnz
lock
es
data16
and
sub
leave
pop
or
jnp
cmp
movsl
adc
pop
jno
dec
adc
mov
push
pusha
scas
mov
aaa
into
cwtl
pusha
inc
dec
jae
scas
stos
sbb
inc
add
leave
lret
daa
sub
mov
rolb
adc
inc
push
aad
push
jne
mov
insl
pop
aas
aaa
imul
ret
std
cltd
dec
test
les
cmp
mov
xchg
xchg
mov
int
arpl
cli
scas
in
clc
push
jne
sbb
adc
mov
or
lcall
pusha
stc
add
stos
std
jle
test
fmul
and
sbb
dec
inc
inc
sub
test
sub
dec
add
shll
mov
mov
adc
popf
fisttps
in
dec
inc
lods
mov
pop
fimuls
mov
cwtl
out
dec
in
push
jne
popf
and
adc
xchg
hlt
push
daa
adc
sarb
adcb
cmp
addr16
call
repnz
xchg
cmp
push
mov
xchg
mov
cmpl
popf
cmp
mov
test
movsb
xor
je
testb
xchg
leave
out
fdivp
add
mov
and
arpl
mov
cltd
or
popa
stos
hlt
jns
pop
jo
int
inc
adc
adc
dec
sbb
out
dec
test
pop
daa
push
mov
adc
dec
mov
int3
in
or
or
xchg
push
inc
hlt
test
sub
xchg
dec
xor
xor
out
sbb
jmp
test
outsb
lods
cld
cmp
mov
xchg
pusha
jns
int3
ret
jb
lret
push
xchg
xor
lods
jge
pop
imul
iret
mov
aas
ds
or
xchg
sbb
lahf
out
mov
inc
test
loopne
cli
adcl
mov
mov
jle
sbb
mov
outsb
clc
pushf
shlb
inc
push
dec
xchg
dec
hlt
movsl
sub
imul
or
or
pop
cmp
add
arpl
lcall
dec
inc
mov
push
jnp
sub
inc
mov
mov
jle
outsl
lea
and
pop
mov
outsb
lret
loope
mov
adc
jbe
jo
jae
testb
in
aam
mov
sbb
fsubl
lods
in
sbb
das
sub
test
subb
and
sbb
filds
adcl
test
jns
ds
fldl
lds
dec
add
push
idivb
mov
add
xchg
and
sub
and
std
cmp
or
jmp
hlt
xchg
inc
pop
ficomps
das
cmp
daa
jg
inc
jnp
shrb
mov
mov
mov
outsl
enter
mov
lcall
scas
mov
sub
lods
repz
push
push
mov
cld
mov
cmp
sub
or
idivl
add
loopne
dec
xchg
jns
jb
loop
sbb
fcoml
mov
fsubp
cmpsl
jo
jle
cmp
push
mov
xlat
adc
setge
pusha
ds
xchg
pop
ljmp
jge
inc
mov
cmovne
out
inc
sarb
cld
and
inc
jb
aaa
arpl
pop
jne
stos
cmp
inc
sbb
and
xchg
add
mov
xor
scas
xor
add
fisubrs
mov
lods
cmp
ds
inc
enter
lock
inc
inc
pop
pop
pop
cwtl
fmuls
mov
mov
lcall
icebp
repnz
xchg
inc
xor
bound
dec
sbb
out
adc
int3
xor
push
insb
cld
sbb
push
jne
int3
lock
push
cmp
xor
cwtl
mov
popf
aaa
push
inc
bound
iret
add
adc
loopne
or
cmpsl
push
fdivl
xchg
jns
js
outsl
sbb
jns
arpl
sbb
addr16
mov
xchg
xchg
cli
lahf
mov
mov
aam
out
inc
data16
mov
mov
sub
repnz
sahf
xor
enter
cmp
add
and
scas
xchg
cltd
adcb
insl
push
in
adc
mov
and
sarb
das
mov
mov
hlt
mov
mov
sub
push
repnz
or
repz
sti
repz
in
xchg
subb
sub
cs
pushf
xor
add
loopne
push
xchg
loop
mull
stos
xchg
sub
mov
add
jno
xor
ret
jle
inc
sub
mov
cmp
ret
xchg
push
in
hlt
mov
jg
pop
xchg
add
jp
sub
jno
test
cmp
push
mov
imul
mov
jae
outsb
lock
cwtl
daa
cmp
mov
push
lock
inc
loope
clc
sbbb
push
leave
dec
fiaddl
xchg
mov
jge
xor
shlb
adc
xor
out
pop
popa
rclb
cmpsl
mov
xchg
jae
je
fdivp
sti
daa
inc
lds
sbb
cli
sbb
or
loope
add
dec
cmp
fcoms
pop
cmc
stos
mov
push
scas
cs
pop
psllq
daa
mov
ret
add
rorb
lret
xchg
popf
push
dec
jle
outsl
mov
imul
mov
push
add
mov
lret
ret
imul
mov
fs
adcb
lds
out
lcall
mov
sub
pop
stc
add
in
fidivrs
in
inc
add
das
sub
push
or
mov
sbb
call
lods
leave
fdiv
je
lods
loop
fstpl
jle
xor
cltd
outsb
jns
add
in
stc
or
push
mov
dec
jp
bound
int
pop
sti
pop
xorb
push
scas
push
insl
dec
lret
fs
inc
or
fidivrl
and
hlt
scas
or
push
sub
int3
fisubl
outsb
sbb
cmp
sbb
repnz
xchg
mov
into
mov
adc
push
arpl
xor
add
xchg
mov
into
or
std
cmp
jle
jo
xor
jbe
xchg
xor
xchg
xor
sbbb
in
aaa
mov
scas
outsl
xchg
mov
cmc
jbe
hlt
sub
lcall
pop
decl
subl
aas
mov
lea
fsub
mov
xchg
and
push
and
pop
add
das
popf
lea
lret
pop
mov
sahf
xor
in
adc
sbb
cmp
and
inc
xchg
sti
nop
xor
or
adc
inc
test
lahf
lcall
cmp
jne
outsb
test
idivb
mov
cltd
jmp
push
dec
or
add
aad
add
xor
icebp
je
mov
int3
outsl
and
ret
shlb
push
jne
pop
sahf
mov
packsswb
mov
iret
pop
mov
repz
add
les
popf
push
aam
ljmp
in
xor
push
pop
in
sub
movsl
sbb
mov
xchg
outsb
in
sub
inc
bound
mulb
hlt
dec
lret
and
insl
imul
pop
daa
xchg
pop
stos
xchg
mov
mov
mov
jns
jge
fsubs
adc
mov
data16
or
dec
les
or
daa
jp
ficomps
cmp
in
in
int3
mov
ds
xor
xor
outsb
out
popa
adc
and
inc
or
and
fstps
or
lock
xchg
lea
rol
add
inc
mov
clc
pop
add
pop
mov
cmpsb
sarb
lcall
daa
xchg
push
mov
push
jnp
mov
lods
or
daa
push
cwtl
out
mov
and
adc
les
pop
lret
dec
jbe
fwait
arpl
cltd
xor
into
sbb
push
sub
out
dec
sbb
inc
pop
jmp
js
repz
mov
push
xor
and
sub
sti
mov
or
jne
test
mov
jnp
cld
pusha
inc
mov
push
adc
hlt
jmp
hlt
inc
cmc
adcl
push
jo
xchg
sub
mov
and
sbb
jo
fadd
ret
inc
xor
mov
lret
mov
out
test
nopl
xchg
test
hlt
movsb
xchg
xchg
dec
sbb
lret
jo
icebp
pop
xchg
sbb
ja
cmp
push
mov
loope
pusha
cmp
int3
jb
repz
jcxz
sbb
mov
push
push
xchg
lret
fcoms
aaa
add
mov
out
inc
in
ret
mov
scas
mov
lock
sub
insb
xchg
in
push
je
mov
mov
fsubrs
xor
in
or
aaa
into
lahf
movsb
add
das
mov
je
or
lods
push
sub
call
push
dec
in
xor
cmc
test
push
jb
mov
insl
fxch
push
scas
xchg
push
icebp
mov
xchg
jge
xchg
out
sbb
out
xchg
insb
shlb
push
test
outsb
aaa
push
push
pop
sub
cmp
sbb
out
movsl
and
fisttpll
mov
lods
fs
dec
sub
fstpl
dec
and
sub
mov
inc
test
mov
sbb
adc
adc
int
test
inc
push
aaa
xchg
jne
insl
adc
bound
xchg
imul
ficoml
sbb
xor
imul
sbb
aam
negb
mov
stos
test
cmpsl
test
push
cmpsl
cmp
xor
sahf
mov
es
popf
cld
aaa
out
jns
pop
mov
imul
mov
sub
mov
adc
ret
mov
xor
push
sbb
dec
sbb
pop
pushf
std
ss
sbb
adc
cwtl
pop
push
aaa
and
mov
mov
and
mov
test
xchg
orb
popa
daa
std
les
pshufw
jp
push
add
pusha
push
push
jbe
jns
clc
test
inc
or
pop
incb
xchg
pop
and
ljmp
jb
dec
jl
pop
dec
dec
or
push
ljmp
leave
mov
and
adc
push
mov
icebp
xor
je
in
pusha
xor
sarb
outsl
aad
mov
cmp
mov
int3
dec
in
xchg
cmpsb
xchg
inc
pushf
std
adc
ret
jp
pminsw
jae
imul
xchg
ss
clc
test
mov
xor
cs
popa
mov
repnz
xchg
push
cmp
pop
mov
jnp
push
adc
lods
rolb
sbb
or
xchg
xchg
push
adc
imul
lea
sub
outsl
ret
sub
mov
rcr
cmp
and
out
jno
push
leave
pop
mov
sar
rorl
ds
push
sbb
fdivrs
js
dec
push
ret
shrb
sbb
ret
inc
xor
aaa
in
pop
pop
movsb
fisttpl
mov
mov
or
filds
stos
push
mov
dec
sub
faddl
dec
dec
ja
cmp
ss
jae
aaa
cmp
repnz
push
jb
andb
aas
mov
push
cmp
sub
test
cmp
fs
ss
mov
js
lods
and
inc
int3
cmp
pop
ja
mov
out
inc
sbb
repz
sub
dec
sbb
jbe
dec
jo
mov
lods
aam
xchg
nop
loope
mov
fs
and
xor
test
add
jge
and
adc
aas
pop
ja
xorl
add
jle
xchg
mov
lcall
in
xchg
test
lods
test
mov
movnti
pop
fwait
shr
iret
or
nop
push
mov
mov
sahf
fildll
pop
jbe
jnp
xchg
adc
xor
aaa
xchg
xor
and
lahf
mov
or
mov
mov
fnstenv
and
rcrb
data16
add
push
push
add
testl
sub
orl
xchg
or
mov
fildl
iret
test
push
cmp
or
aas
das
dec
loop
aam
les
add
push
js
dec
dec
aas
in
inc
pop
fwait
scas
mull
in
inc
sbb
jg
and
push
pop
adc
clc
lods
int3
jnp
jno
ret
movsl
cli
push
and
mov
mov
insb
ret
call
sbb
leave
sbb
out
ds
fsubs
loopne
adc
repnz
mov
pop
pop
fs
cmpsl
out
cmpsb
mov
mov
loope
add
jmp
fs
test
sti
mov
aas
mov
add
cs
push
into
cli
add
insb
int3
pop
fildl
ret
lds
loope
int
sarb
mov
int
aaa
jo
fxch
dec
ret
das
cmpb
xor
mov
push
das
out
add
push
sub
sub
mov
pop
pop
push
cli
sbb
gs
mov
mov
jno
mov
test
sbb
imul
mov
iret
lret
and
cltd
fists
setnp
fstps
pop
or
xor
das
popl
pop
dec
popa
adc
scas
jne
mov
cld
fisubl
rclb
adc
mov
and
in
out
scas
cli
addr16
int
pop
dec
and
loope
add
subl
push
jae
repz
ds
xor
fisubrl
push
sub
mov
pop
push
add
mov
or
sub
and
call
sub
aad
sbb
mov
mov
cmp
shll
mov
ss
pop
and
jne
loop
adcl
inc
push
jns
ds
scas
sbb
push
stc
add
adc
push
add
testb
push
aas
lock
fidivl
repz
xchg
sub
fadds
pop
insb
jb
mov
dec
or
popf
daa
mov
div
or
fiaddl
xor
add
jecxz
out
mov
dec
pop
cmpsl
aad
cwtl
xchg
repnz
cmp
push
mov
fs
mov
movl
and
lret
shlb
ss
xor
push
pop
fistpl
adc
mov
pop
or
cmp
jae
cmp
pushf
test
aad
xor
pop
out
popa
in
andb
out
std
pop
insb
add
mov
add
jb
sub
dec
rorb
push
mov
dec
or
jae
jnp
adc
popa
test
pop
mov
je
pop
cmp
or
popa
push
insb
je
mov
les
fwait
cmp
leave
dec
jecxz
push
rcr
addr16
mov
inc
insl
nop
stos
insb
pop
push
mov
icebp
movl
pop
loope
mov
aad
or
mov
dec
sub
outsl
fcmovnbe
imul
movsl
xor
push
test
add
mov
add
inc
xlat
mov
sub
and
push
or
insl
mov
sbb
aam
inc
xor
mov
jmp
aad
adc
test
test
and
sahf
lock
ss
roll
insb
dec
lods
inc
fldt
cmp
movb
add
in
imull
dec
xchg
insl
js
add
jne
sub
jl
inc
fsub
lods
hlt
add
repz
stos
xor
sti
mov
mov
repz
jb
inc
lock
movsb
xchg
jmp
jnp
pop
mov
fistps
cmp
mov
pop
inc
xor
stos
cmp
push
popf
fnstcw
sub
js
cwtl
out
cmp
xchg
fcos
mov
inc
dec
xchg
mov
outsl
fisubrl
js
and
jle
loope
out
inc
mov
inc
mov
push
push
cmp
mov
mov
cld
ficomps
push
jl
out
fldl
inc
subl
sahf
jg
add
imul
in
mov
mov
pop
test
push
mov
add
adc
xchg
sub
cwtl
cmp
sub
mov
adc
leave
sub
mov
loopne
pop
jl
xchg
arpl
dec
pop
mov
les
je
cld
push
mov
mov
loop
add
mov
nop
push
mov
push
push
aam
out
lret
push
push
mov
or
sub
imul
lret
push
adcb
addps
adc
rclb
push
aam
inc
movsl
popa
xchg
mov
jg
dec
cmpsl
mov
cmp
pushf
mov
adc
lods
out
mov
mov
andb
mov
icebp
push
popf
gs
loopne
and
mov
mov
jns
jne
dec
xor
cmp
stos
mov
mov
sbb
aad
pop
mov
jg
loope
sub
int
mov
push
dec
or
add
xor
fdivr
mov
aad
es
or
jno
out
arpl
sahf
outsl
sub
inc
mov
orb
pusha
enter
and
or
inc
test
cltd
push
fdivs
xchg
scas
dec
in
in
mov
das
or
mov
ljmp
jns
pop
outsl
test
sahf
clc
mov
fs
xor
push
rcrl
adc
rcrb
into
pop
insb
aas
cmp
mov
inc
mov
mov
imul
adc
repz
or
movsb
aas
cmp
insl
jmp
mov
adc
xchg
pop
or
add
cli
pushf
xchg
adc
mov
enter
xor
sbb
daa
push
inc
pop
cmp
xchg
scas
jg
scas
out
fdivrl
and
lahf
test
jecxz
gs
in
sbb
loop
rorl
fstpl
jns
adcl
out
outsl
stos
fs
lock
pop
call
sub
and
mov
sbb
mov
repz
fsub
nop
rcrl
lret
js
jbe
loope
fwait
jns,pn
xlat
push
insb
loope
in
lcall
leave
movsl
jecxz
adc
add
fabs
push
push
loope
push
sub
cmp
test
or
mov
lret
push
add
push
sub
ja
adc
call
pop
sub
lods
daa
lea
sbb
sub
xchg
mov
pop
push
lock
bound
insb
cld
push
xchg
push
repnz
das
je
cs
inc
scas
add
fldenv
insb
pop
add
jno
inc
jns
rcrb
jne
or
jno
scas
dec
loope
das
cmp
int3
mov
movsb
sub
mov
adc
into
cmp
and
insb
lcall
icebp
movsb
mul
pop
adc
xchg
xchg
mov
mov
push
inc
jg
negl
in
adc
imul
push
push
imul
inc
in
sub
push
lret
data16
sbb
iret
add
jno
es
xchg
inc
mov
mov
notb
shlb
cwtl
inc
orl
scas
aas
inc
xor
fisubs
cli
mul
xchg
jne
in
xor
xchg
and
fucomp
push
dec
dec
ret
stos
push
pusha
jge
into
leave
add
jo
in
xor
or
ss
lock
shl
data16
jb
or
fwait
div
inc
pop
repnz
xchg
sbb
insb
mov
lock
decb
push
icebp
push
dec
pop
mov
hlt
or
js
cmp
xor
lret
sub
fwait
xor
mov
cmp
ljmp
fucomip
popf
mov
add
xchg
stos
ret
imul
ds
lea
std
insb
fiaddl
inc
adc
lods
gs
dec
xchg
outsl
outsl
inc
lcall
insl
mov
ja
and
sbb
aad
mov
push
and
popf
outsl
jbe
sub
sahf
pop
push
push
push
outsl
push
push
shr
dec
out
push
add
inc
popf
movzwl
jb
sub
mov
int3
push
push
and
lods
loope
jl
or
fisttpll
jb
repnz
rep
jne
push
mov
test
mov
pop
in
cmp
cmpsl
and
scas
test
lret
adc
jge
aaa
jle
jg
lahf
sub
inc
addr16
insl
jmp
mov
int
mov
stos
dec
cli
test
int3
fidivrl
icebp
mov
cmp
and
je
lret
inc
sub
frstor
sub
pop
inc
pop
pop
xor
sub
mov
imul
test
fcoml
fs
add
icebp
sahf
inc
push
je
cld
push
das
mov
je
pushf
nop
push
push
inc
jg
push
cli
sbb
sub
pop
push
push
fcompl
cltd
shr
jbe
or
popf
add
pop
fdivp
ljmp
out
lahf
inc
or
xlat
xor
or
pop
adc
divb
add
aad
add
adc
shlb
jg
lds
push
and
insb
jp
dec
xor
add
xlat
data16
ds
scas
inc
push
out
push
pop
out
ja
mov
pushf
pop
adcl
sub
and
xor
inc
cmc
pusha
pop
mov
frstor
iret
dec
mov
xchg
int
lcall
test
shll
ficoml
adc
jo
jl
fwait
mov
scas
leave
icebp
nop
sbbl
adc
pop
mov
adcb
pop
or
push
xchg
xchg
addb
pop
loop
lcall
call
dec
inc
mov
push
xchg
cmp
dec
push
dec
inc
data16
xlat
stc
xor
out
testl
dec
push
push
or
mov
sub
xchg
sub
aas
fsubl
idivl
movaps
mov
or
push
inc
leavew
jno
lret
mov
jle
mov
cmp
int3
jnp
mov
or
mov
or
dec
jl
mov
mov
push
xchg
rcrb
aaa
jo
call
lds
in
pop
add
outsl
inc
xchg
movsb
xor
adc
xchg
jne
cmpsl
jp
negl
icebp
sbb
test
loop
push
mov
stos
xchg
lret
in
rcr
pop
xchg
push
jbe
mov
sbb
mov
xchg
sub
movsb
xchg
movsb
popa
push
push
pop
cs
sub
adc
sahf
sbb
call
mov
lcall
xor
mov
out
lods
arpl
mov
lahf
or
sbb
loopne
fsts
mov
out
push
xchg
jnp
lret
cli
mov
loope
push
scas
in
repnz
aas
outsl
cmp
dec
inc
mov
sub
mov
inc
cli
xchg
pop
dec
popl
pop
jbe
imul
adc
sbb
call
sbb
or
iret
sbb
aas
adc
lock
jle
dec
push
sub
lcall
into
sti
push
cmp
imul
pop
sbb
movsb
xor
or
popa
push
inc
mov
stc
cmp
pusha
cltd
imul
sbb
cmpsl
pop
pop
jp
scas
fdivrp
inc
push
jo
sbb
xchg
cld
sbb
inc
aaa
ljmp
cmp
mov
sbb
sbb
daa
mov
shrb
xlat
scas
fisubs
cmpsb
add
xchg
jg
out
inc
xor
inc
es
fnsave
dec
push
mov
inc
rorb
cli
push
push
ret
in
and
push
mov
sub
lahf
mov
pop
cmp
call
sub
out
adc
jmp
icebp
push
sub
sub
popf
pop
mov
or
scas
mov
shlb
ds
mov
out
ss
nop
cmp
add
sbb
out
pop
cmp
or
or
es
cmp
mov
mov
adc
lock
push
out
and
push
cld
test
mov
inc
cltd
jne
lea
in
lods
or
or
je
xchg
jbe
fcoms
lock
out
enter
lods
out
gs
das
mov
and
mov
or
cli
mull
repz
sub
idivl
cmpsl
arpl
int
lcall
dec
out
scas
pusha
into
stc
out
sbb
das
mov
pop
jae
mov
sbb
sbb
hlt
stos
xchg
jl
rdpmc
pop
jno
or
sti
push
cmp
sahf
sub
popa
xchg
sbb
mov
xchg
mov
in
inc
je
pushf
pop
sarl
lcall
popa
or
push
in
push
mov
push
push
test
ljmp
dec
sub
in
test
cltd
push
rolb
mov
in
mov
or
bound
bound
cld
dec
pop
jns
xchg
xor
cmp
out
jmp
pop
mov
xchg
mov
mov
dec
test
inc
mov
negb
mov
jp
dec
pop
push
loope
ficomps
jmp
mov
pop
cmp
cmp
dec
cli
popa
das
pop
arpl
push
in
jg
jmp
lret
movsb
pop
xor
data16
bound
pop
push
jb
dec
sub
inc
sbb
clc
test
and
xchg
lret
stc
sub
in
iret
cltd
aas
mov
mov
push
mov
push
pop
lahf
inc
sub
inc
mull
or
mov
jg
fiaddl
xlat
lahf
and
dec
and
mov
push
sbb
je
rorb
repnz
repz
adc
xor
ss
fprem
rcl
les
fsubrp
pop
cmp
sub
mov
popf
inc
frstor
xlat
sbb
cltd
xor
mov
imul
out
mov
add
adc
jno
mov
clc
xchg
sbb
scas
lret
adc
out
lahf
sub
jmp
add
xor
outsb
inc
xlat
mov
sbb
sbb
lcall
ret
push
repz
shrb
in
fwait
sbb
scas
sub
pop
jnp
add
clc
cmp
pop
pushl
add
popa
sarb
mov
arpl
mov
mov
out
hlt
inc
inc
xor
and
sti
push
sub
cmp
sub
dec
sub
xor
sub
jle
movsl
and
and
addb
pop
pop
xor
cwtl
xchg
ret
mov
call
out
and
xchg
hlt
or
shrl
or
pop
jecxz
jns
xchg
cmp
aas
xor
mov
cmp
js
lret
sbb
push
mov
ljmp
data16
cmp
xor
fstl
adc
test
rclb
xchg
sub
jl
push
or
cmp
push
lds
mov
in
pop
popa
das
pop
jg
xchg
fildll
push
vaddpd
sti
push
mov
adc
xor
cmc
movsl
test
mov
pop
pop
stos
fcoml
xchg
mov
push
jbe
fcomps
ss
mov
mov
and
add
mov
pusha
mov
cwtl
xchg
pop
outsl
inc
dec
add
cmc
and
mov
dec
nop
bound
and
call
xchg
adc
adc
out
cmp
lock
sub
jno
inc
out
test
cmpsl
adc
repnz
lret
pusha
cwtl
fstl
mov
es
xchg
outsl
dec
push
sbb
mov
cld
push
imul
cmp
and
lods
lock
dec
jo
mov
and
and
fwait
ret
lcall
mov
lods
popa
pop
bound
loopne
mov
sub
inc
mov
push
or
xchg
loop
xchg
roll
ror
out
lods
xchg
loope
sbb
adcl
push
add
lds
movsl
or
outsl
stc
orl
mov
inc
push
es
fistps
sahf
mov
ds
pop
or
jae
bound
or
mov
out
fprem1
fcomps
jnp
ljmp
loop
push
loop
testl
add
push
fsubrs
mov
add
pop
cmp
js
inc
roll
adc
cmp
cmp
push
xor
dec
xor
dec
pop
pop
mov
shrb
cmp
int3
sbb
push
decb
pop
lock
sbb
imul
in
ljmp
jae
out
xchg
neg
xor
mov
or
loopne
shlb
fstps
xchg
stc
or
test
sbb
ret
nop
testb
xchg
cmpsb
mov
in
dec
xchg
jecxz
es
shrb
fildll
cmp
imul
ljmp
mov
pop
sub
arpl
mov
push
ljmp
adc
jmp
inc
cmp
sti
and
xchg
pusha
sahf
cmp
int
pop
adc
inc
jae,pn
push
insl
fwait
lods
and
xchg
jl
aaa
pop
mov
jns
push
adc
in
and
cwtl
cmp
push
int3
cmp
decl
jle
sub
sysret
add
mov
movsb
mov
xchg
btc
jle
pop
inc
and
lahf
pop
test
cmpsb
cmp
cs
jae
mov
in
and
lret
std
push
clc
popa
or
adc
inc
xchg
int3
sbb
xor
movsl
cs
jno
mov
pop
stos
pop
je
pop
mov
mov
enter
inc
shlb
pop
sbb
movsl
adc
std
xor
in
sti
in
js
cltd
icebp
xchg
or
dec
ret
push
push
not
mov
push
adcb
jl
sub
outsb
push
add
shrl
add
inc
or
int
dec
pop
jl
leave
dec
or
dec
insb
add
gs
dec
out
pop
mov
mov
cmp
pushf
fiadds
adc
mov
mov
sarb
inc
cwtl
popf
mov
aam
insl
dec
lcall
jo
das
xor
cmpsb
push
movsl
push
in
test
movsl
sbb
pushf
ja
repz
push
addr16
push
push
gs
inc
jp
xchg
jns
adc
push
ja
xchg
clc
setns
lahf
stos
ljmp
add
js
jp
mov
dec
hlt
shl
andl
add
mov
lret
iret
add
cmpl
decb
push
jae
into
nop
scas
stos
das
or
daa
inc
movsb
mov
addr16
sub
pop
jbe
call
scas
ret
lock
sahf
data16
add
mov
jne
xor
push
jle
fisttpll
sbb
call
lret
adcl
pushf
test
mov
cmpsb
decb
repnz
out
pushl
les
loopne
mov
out
lock
cmp
dec
aam
and
xor
arpl
jae
test
sub
in
jae
cltd
mov
not
cmp
cld
fwait
sti
lret
ds
xor
xor
sub
and
sahf
orb
jge
jne
cmp
xchg
pusha
mov
cmp
inc
cli
icebp
jp
into
and
mov
push
std
xchg
pop
mov
pop
mov
insl
push
push
ret
roll
mov
mov
stos
mov
or
mov
jg
and
cli
loop
and
mov
mov
psubsb
mov
aad
lock
scas
in
icebp
cmp
adc
insb
xchg
lods
cmp
mov
add
scas
fcomi
pop
cmp
sbb
decb
call
adc
outsl
jbe,pt
insb
es
stc
lahf
pop
or
cltd
sbb
xchg
mov
push
ds
repnz
fdivs
mov
xchg
rclb
addr16
aam
cwtl
ja
xor
xor
sar
sbb
in
inc
push
lcall
cmp
xor
xchg
cmp
sbb
fisubl
pop
inc
data16
movsl
fwait
sub
adc
aas
add
inc
inc
int3
and
xchg
pop
jns
dec
bound
xor
pop
xor
dec
xor
dec
sub
dec
adc
mov
dec
fisttpl
test
mov
jnp
xchg
sbb
push
push
movsl
fadds
aad
aad
mov
jae
or
in
xchg
push
in
or
push
lret
loopne
and
adc
sub
mov
test
sub
shr
xor
sub
xchg
xorb
mov
nop
inc
xor
pop
mov
fdivr
mov
sub
data16
loop
ss
ret
cmpsl
lret
pusha
jge
mov
outsb
jo
dec
sarb
repz
and
inc
adc
fdivs
mov
rcl
scas
popf
leave
sbb
aam
pop
in
js
push
stc
sbb
lds
jae
les
push
mov
cli
lret
sti
addl
aas
mov
outsb
stos
mov
add
mov
ret
loopne
sbb
pop
in
pop
cmpb
addb
fneni(8087
mov
pop
mov
test
pop
popf
dec
in
jecxz
sbb
rolb
repnz
add
pushf
sbb
pop
das
incb
pop
fnstenv
xor
and
cld
sahf
pop
cmc
or
clc
add
cmp
mov
scas
mov
rcrb
mov
leave
rcrb
fs
iret
and
xchg
jnp
push
outsl
sub
test
and
hlt
in
mov
rorl
std
cld
int
mov
cs
mov
in
mov
cmp
xor
and
sbbb
xor
ljmp
lods
addb
mov
out
xor
adc
int3
aas
les
xchg
fs
mov
push
loop
and
pop
bound
pop
mov
repnz
pop
or
pop
push
mov
mov
xchg
pop
mov
cmpb
stos
xchg
dec
mov
test
lods
sub
inc
ret
sahf
rcrb
imull
dec
inc
xchg
test
popf
in
data16
lahf
sbb
inc
scas
daa
jns
pusha
lcall
scas
mov
std
mov
add
pop
mull
jb
mov
int3
ret
pop
out
jbe
mov
aam
xchg
xchg
je
mov
out
xchg
or
pop
cmpsb
push
jl
cmp
lret
das
ja
mov
out
movsb
mov
loope
pusha
stc
test
mov
or
nop
data16
out
ret
cmpsl
cmp
cli
repnz
repz
enter
lods
adc
dec
iret
inc
in
mov
filds
mov
packssdw
jge
pop
into
push
ret
jmp
mov
int
jnp
sub
scas
cmp
mov
data16
mov
push
iret
jb
add
mov
les
rcrl
sbb
out
test
cmp
xlat
inc
arpl
in
pop
sahf
outsl
fiaddl
mov
add
xchg
fwait
and
sub
loopne
aad
fildll
jo
push
insl
jno
or
and
cmc
cmpsb
adc
imul
mov
rolb
sbb
add
test
sub
movsl
les
and
pop
sahf
mov
inc
xlat
js
addb
mov
inc
andb
adc
push
in
cld
enter
jle
or
rcr
call
std
push
jp
es
dec
xchg
add
fisttpl
jo
ss
sub
fsubrl
xchg
clc
loope
sbb
insl
into
in
popf
clc
shll
jecxz
ret
inc
inc
xor
mov
notl
leave
push
dec
xlat
dec
xor
test
dec
adc
sub
sub
pop
test
repnz
popa
xchg
mov
out
cmpb
jl
mov
add
int3
sub
mov
adc
and
iret
xor
mov
xchg
outsl
out
jl
push
test
mov
sti
cli
or
ss
cmpsl
push
ljmp
pop
pusha
and
and
adcl
lods
mov
push
and
bound
rcrl
xor
xchg
push
stos
dec
jecxz
repz
push
cmc
sahf
cmpsl
sub
jb
mov
sbb
imul
repz
call
xor
outsl
jecxz
sbbb
popf
mov
scas
enter
and
out
jl
add
add
push
dec
popf
add
leave
stos
fidivl
mov
inc
divb
jp
es
clc
mov
and
pop
mov
pop
fcomps
lock
je
pop
inc
xor
cmc
adc
cs
in
push
sarb
mov
cmp
stc
mov
jmp
test
cmpsl
loope
jbe
mov
test
pop
xchg
add
jl
pop
sbb
ret
jg
inc
xchg
mov
mov
bound
fs
dec
push
scas
mov
sbb
cmpb
sub
push
pop
call
sub
lea
mov
aad
ret
mov
sbb
cmpsb
sahf
test
xor
lret
mov
xor
dec
cmpsb
dec
pop
sub
std
ret
leave
out
mov
cbtw
dec
int
icebp
cmovns
mov
adc
es
and
leave
popa
stc
lock
push
pop
lahf
mov
fldt
mov
fisttpl
les
xlat
push
push
cmp
test
mov
nop
out
mov
xchg
push
mov
ds
loopne
mov
lret
repnz
and
pop
push
jno
mov
mov
and
mov
std
mov
or
out
push
cld
mov
testl
push
push
inc
mov
lret
jo
xchg
lret
scas
inc
push
dec
ffreep
mov
mov
pop
pop
xor
mov
jb
cmp
hlt
push
pop
sar
inc
jp
loope
push
fwait
out
sti
mov
rsqrtps
or
lods
inc
mov
fsubrs
mov
loopne
sub
mov
xor
pop
outsl
jl
mov
loope
lock
fwait
mov
pusha
sbb
mov
inc
mov
outsb
sub
sub
popf
fsubl
jmp
shr
test
stos
popf
xorb
sahf
xor
mov
jno
ss
add
jmp
xlat
xchg
mov
ret
adc
lret
mov
mov
fbstp
jne
mov
and
stos
jb
inc
leave
and
mov
jno
aaa
push
push
and
cmp
inc
push
loopne
pop
das
and
jecxz
cli
inc
jne
insb
outsl
pop
push
repz
ss
or
sub
outsl
insl
sti
cmpsb
shr
add
sbb
hlt
cmpsl
xor
and
adc
aaa
repnz
mov
xchg
xorb
mov
inc
out
pop
fnstcw
icebp
push
adc
cs
or
pop
fdivrl
mov
lds
bound
cmpsb
inc
mov
or
inc
fsubl
xchg
pop
adc
xlat
add
jle
mov
mov
test
pop
mov
and
stos
sti
clc
pop
fdivrl
adc
cmpsb
pop
out
pop
xor
xchg
imul
sbb
jmp
xchg
mov
xchg
jne
fldl
js
push
xor
ljmp
popa
test
add
repnz
dec
lods
push
pop
sbb
es
fmulp
sub
push
outsb
cld
insl
pop
mov
mov
jge
dec
jno
and
dec
into
xchg
insb
pop
sub
sbb
and
sti
jp
and
pushf
imul
dec
sub
dec
xor
jbe
pop
mov
pop
xor
ss
pop
daa
stos
cli
pop
test
xchg
mov
iret
into
out
mov
into
adc
mov
jmp
insl
es
mov
adc
mov
sti
out
subb
pop
mov
cmp
cmp
adc
dec
test
data16
dec
xor
gs
push
mov
test
ret
jmp
icebp
pop
pushw
fsub
enter
and
add
add
mov
xchg
arpl
andl
and
and
sbb
adc
sbb
push
mov
or
ret
sbb
pushf
in
rcr
mov
and
inc
int
clc
sbb
scas
repz
mov
pop
fmull
arpl
adcl
inc
inc
ret
and
jl
inc
pusha
cmp
andb
lret
pop
sub
mov
lods
ja
xchg
dec
out
stos
and
rcrb
enter
jge
sbb
push
insl
sub
aas
lret
mov
xor
lretw
push
cmp
pop
mov
mov
int
lret
xor
add
test
pusha
dec
jmp
dec
cli
pop
mov
cwtl
test
outsl
fbstp
push
js
movsb
sub
popa
nop
push
imul
xor
aaa
or
jb
dec
outsl
mov
stos
mov
and
add
mulb
xor
xor
jnp
lahf
push
xchg
cld
pop
mov
jmp
and
jae
mov
mov
shl
int3
pop
and
arpl
push
jb
fs
movsl
mov
jmp
sub
adc
std
push
jle
jb
push
lods
mov
lahf
xlat
fs
lds
int3
xor
or
dec
shll
mov
adc
mov
cmpl
call
insl
push
inc
push
adc
out
pop
mov
pop
ss
cmp
cmp
or
iret
xor
xchg
xor
add
or
xchg
lods
and
into
pop
cltd
daa
adc
inc
pop
repz
mov
aaa
popa
fidivs
and
shl
mov
xchg
pusha
push
mov
sbb
inc
xor
cs
arpl
lds
stc
sub
cli
imul
cmc
sbb
movsb
pop
add
into
test
mov
xchg
jb
enter
push
lcall
add
lods
add
lahf
test
hlt
mov
pop
imul
lret
push
fnsave
out
xchg
adc
pop
mov
jnp
test
xor
outsb
jne
int
sbbl
and
jl
cmp
aaa
cmp
fildl
cmpsb
shll
lret
fists
mov
test
sahf
pop
dec
add
fwait
sub
es
cli
popf
sub
in
das
sbb
mov
daa
mov
scas
push
fistpl
mov
mov
mov
sub
lods
xor
dec
imul
sbb
adc
push
xchg
jns
xor
jnp
jbe
jle
lcall
push
lea
cwtl
mov
in
es
inc
rorb
cmpsl
jmp
enter
mov
jle
push
nop
and
movsb
jg
ljmp
dec
movsl
mov
xchg
jge
push
mov
es
and
cltd
sti
cwtl
jmp
mov
lret
cmp
cmpsb
nop
movsb
and
aam
or
mov
push
lret
jnp
and
dec
cmp
movsb
inc
outsl
and
insb
out
xor
imul
mov
jmp
mov
xchg
dec
leave
mov
sub
sarb
pop
mov
xchg
pusha
cmp
ss
fwait
ds
mov
xorb
aam
add
jmp
cs
mov
jmp
cmpl
xchg
in
pop
in
test
cmp
dec
ret
xchg
cmc
sbb
icebp
push
jg
jle
xor
mov
sbb
or
daa
lret
cmp
jo
jg
popa
inc
add
lcall
add
sbb
idivb
adc
int3
dec
and
inc
pop
ficoms
rcrl
dec
aaa
push
xchg
in
and
ds
lret
pop
hlt
cli
or
or
jbe
push
xchg
mov
cltd
sbb
scas
fsub
inc
mov
jnp
and
insb
rcll
jge
fidivl
in
cld
inc
subl
push
sbb
cwtl
mov
int
push
inc
jb
cli
int3
mov
scas
sbb
push
iret
push
mov
pop
sbb
push
jecxz
lods
sub
jne
sbb
lcall
ret
xchg
inc
and
xchg
dec
dec
data16
les
and
adc
pop
cmpl
adc
mov
fcmove
ret
lods
or
repz
das
insb
jge
nop
mov
sbb
scas
nop
lock
dec
mov
mov
ret
movsw
incl
inc
adc
inc
adc
fstl
int3
sub
lock
xchg
sbb
je
dec
push
xchg
mov
test
mov
inc
addr16
fildll
hlt
push
inc
dec
sub
movsb
movsb
dec
repz
repnz
cmp
xchg
mov
push
or
adc
dec
jecxz
adc
or
call
lea
and
sub
imul
test
mov
mov
mov
sbb
test
test
aam
xchg
out
rorl
push
cli
push
cs
push
mov
or
dec
outsl
dec
cmp
aam
add
xor
inc
mov
pusha
mov
xor
fisubl
mov
movsb
adc
popf
add
jno
fs
outsb
inc
cmc
and
adc
push
mov
mov
mov
lock
jg
cmpsl
jecxz
sub
mov
inc
and
cmpsb
mov
stos
push
das
cli
lock
add
je
loope
pop
bound
test
sbb
imul
mov
xchg
test
lods
lahf
cs
add
mov
add
in
cmp
insb
pop
loop
jbe
xchg
fbstp
test
sbb
cmp
lock
xchg
dec
jge
stos
pop
popa
mov
xor
test
das
imul
mov
xchg
data16
fwait
sbb
test
shr
inc
pop
xchg
in
dec
inc
and
cmp
sbb
mov
adc
mov
mov
or
add
lock
fadds
push
add
xchg
mov
aaa
sahf
filds
loope
push
xchg
sub
inc
arpl
push
sbb
out
or
add
push
cmpsb
and
cmpsb
js
cld
and
mov
or
test
push
sbb
shrb
divb
js
test
cli
inc
andb
ds
roll
xchg
pop
sbb
shll
xor
fidivs
inc
dec
jg
test
lcall
or
outsb
mov
xchg
mov
in
jle
or
outsl
sti
dec
sbb
sti
pop
adc
sub
sbb
ficoml
arpl
or
mov
cmpsl
popa
mov
jnp
out
test
push
clc
into
dec
xor
scas
clc
fldl
sub
icebp
inc
inc
test
adc
xchg
mov
inc
inc
cmc
pop
mov
int
cmpsl
subb
in
fisubl
shrl
lock
push
sub
aad
cmp
ret
mov
sub
bound
cwtl
mov
or
test
jge
out
scas
jg
bndstx
sub
in
adc
sbb
popf
ljmp
cwtl
sbb
in
test
scas
cmpsb
jge
dec
sbb
or
sbb
fs
out
out
sbbl
mov
decl
fistps
mov
cwtl
shl
aam
jne
lods
in
or
mov
in
dec
aas
pop
xchg
sahf
or
or
inc
mov
test
lds
clc
push
lret
fbld
ret
icebp
mov
push
aaa
jg
sahf
cmp
fisttpll
xchg
and
and
or
inc
orl
cs
add
pop
and
xchg
mov
mov
scas
fsubs
rep
adc
sub
push
fwait
je
addl
mov
mov
popf
call
push
scas
lods
push
pop
pop
xor
cs
xchg
xor
jno
rcrl
nop
sbb
fwait
js
mov
aad
stos
add
les
stos
jmp
test
push
sahf
cmp
repz
test
xor
aad
or
adc
jns
outsb
mov
xlat
xchg
or
mov
cld
push
roll
push
jne
test
mov
leave
loop
scas
test
sub
xlat
jg
inc
mulb
sub
pop
loope
sti
lods
sub
mov
aaa
mov
add
ret
jb
dec
cmc
call
jp
push
out
fs
test
mov
std
lods
dec
cmc
scas
nop
jo
adc
sub
fs
push
mov
in
inc
jp
ffree
lret
addr16
fs
sub
push
mov
aad
cmpsl
or
stc
xchg
dec
imul
cmp
cld
jmp
and
inc
mov
mov
scas
iret
mov
xchg
lods
xchg
loope
bound
sbb
dec
push
mov
sbb
popf
shll
pop
gs
inc
and
mov
xlat
fwait
pop
and
cmovne
mov
push
mov
mov
in
push
lret
stos
mov
scas
clc
push
pop
fimull
add
ret
push
add
dec
dec
add
push
sub
dec
push
mov
inc
js
sbb
divb
hlt
sbb
shrl
jmp
adc
cmpl
ds
roll
sub
adc
aam
popf
hlt
das
jnp
lahf
mov
push
popf
or
jnp
cmp
inc
shrd
gs
xlat
cmp
mov
gs
add
xchg
push
adc
dec
int3
mov
std
jecxz
loopne
push
outsb
xchg
xchg
daa
insl
js
push
mov
das
lret
sbb
adc
out
bound
icebp
jo
lods
xor
cld
jno
in
jae
inc
inc
mov
xlat
lods
ret
arpl
and
or
loope
cld
inc
mov
enter
sti
pop
xchg
sub
mov
bound
orl
bound
sub
push
push
xor
sbb
mov
pop
fsubl
sbb
ja
int
mov
pop
addb
sub
xor
cmp
push
jmp
lods
inc
mov
push
mov
xor
nop
lds
repz
pop
add
flds
mov
ret
in
mov
mov
mov
les
andb
push
rorb
cmpsl
lock
dec
pop
jbe
dec
pop
js
dec
or
pop
pusha
xor
sub
mov
and
jle
pusha
push
ret
add
inc
pusha
sub
jb
add
mov
inc
mov
mov
pop
cwtl
shr
sarl
aad
outsb
dec
push
pushf
out
jns
es
and
push
arpl
lods
ss
clc
lret
mov
scas
test
nop
sti
push
sub
aaa
icebp
test
and
sbb
cld
inc
add
ljmp
ljmp
add
mov
pop
sub
mov
icebp
les
adc
shrl
jns
out
adc
mov
add
pop
mov
and
pop
sbb
lret
out
imul
test
and
das
aas
test
stos
sbb
xchg
cmpsb
pop
xor
loop
fcompl
jno
scas
pop
jae
push
pop
cmp
or
je
mov
insb
ss
mov
mov
cld
mov
sbb
loope
stos
and
mov
shlb
pop
ss
int3
shrb
jp
push
loopne
repnz
adc
inc
mov
mov
or
adc
mov
mov
mov
adc
scas
iret
push
jmp
dec
movsb
push
sbb
mov
mov
sbb
push
ret
fidivrl
arpl
add
outsl
repz
inc
mov
test
mov
cwtl
add
and
mov
dec
push
jns
cld
pop
rorb
stos
test
and
pop
cmp
adc
pop
fbstp
mov
and
xor
cmp
mov
xchg
mov
inc
sbb
sbb
mov
mov
bound
popf
add
dec
cmp
jge
add
xor
mov
xchg
pop
je
ret
lahf
insb
inc
into
das
inc
out
push
sub
inc
outsl
in
ljmp
xchg
in
mov
les
mov
test
mov
push
movsb
push
roll
cmpsb
xchg
ret
add
dec
outsl
cmp
imull
or
clc
mov
hlt
adc
das
mov
fdivs
out
rorl
jmp
add
in
ret
test
adcb
xor
adc
jno
loopne
lret
fcmovnb
or
outsl
cmp
jg
inc
mov
dec
aaa
psllw
mov
mov
dec
and
jns
push
je
xchg
inc
jbe
adc
mov
add
das
dec
push
inc
push
loope
or
mov
js
insb
shrl
mov
inc
pusha
or
mov
pop
or
pushf
xchg
andb
adc
mov
jnp
dec
punpcklwd
repz
dec
ja
dec
repz
outsb
sbb
mov
shlb
add
mov
add
mov
fistps
inc
lret
fwait
das
mov
and
les
inc
stc
mov
icebp
jl
cmp
mov
push
imul
pushf
and
jg
push
out
mov
scas
mov
jo
cmpsb
iret
mov
xor
push
and
mov
add
addr16
ror
out
xchg
dec
inc
scas
std
mov
jns
iret
lea
add
lds
mov
cmp
xor
sbb
adc
lock
mov
pop
mov
jle
fisubrl
aad
aas
mov
jns
rcrb
push
push
and
push
mov
std
ljmp
push
dec
xchg
push
or
jge
sub
in
and
cmp
lret
mov
outsb
mov
cltd
arpl
inc
mov
cmpsl
jecxz
add
cmp
adc
loope
cmpl
lds
mul
push
mov
ljmp
mov
pop
mov
mov
jge
pop
cltd
inc
insb
pop
aam
incb
addb
stos
out
insb
and
cmp
fstpl
add
sahf
inc
cmpsl
movsl
adc
push
arpl
sub
jbe
xchg
andl
icebp
jl
or
pop
lcall
sub
jecxz
xor
mov
cmp
xchg
daa
push
add
adc
inc
inc
jge
and
fnstenv
xchg
sbb
fsts
movsb
lcall
int
mov
scas
push
and
add
rcrb
jl
imul
out
jno
adc
int3
jbe
cwtl
out
in
sti
sub
ds
lods
mov
scas
enter
xchg
incb
and
std
stos
mov
pushf
leave
out
ss
pop
rol
clc
push
push
sub
mov
aad
lahf
mov
jle
test
fs
sbb
sub
inc
pop
lcall
jnp
aam
aas
ficoml
mov
in
push
push
call
cltd
push
testb
fwait
rolb
in
insb
xchg
imul
dec
lock
in
cmpsb
insb
xlat
cmp
and
cmp
lahf
xchg
inc
idivb
push
mov
or
nop
call
cmc
sub
jg
testl
push
fisubs
jmp
jg
adc
dec
pop
mov
adc
out
imul
jecxz
jo
mov
xchg
in
sbb
mov
popf
nop
jnp
stos
jl
addr16
lret
aad
mov
aaa
pushf
xorl
mov
sbb
pop
push
add
stc
into
push
roll
popa
cmc
aaa
inc
and
in
aas
xchg
cwtl
xchg
clc
cmp
pushf
jo
stos
int3
jecxz
das
pop
aas
cmpsl
stos
je
int
push
outsl
ret
adcb
push
jle,pn
insl
subl
pop
out
adc
pop
pop
push
mov
andb
xchg
jb
jl
cld
mov
xor
mov
pop
cltd
cmpsb
out
cmp
push
and
into
lret
adc
sub
sbb
clc
addr16
call
pop
cmp
inc
enter
insl
xor
cmc
pop
iret
clc
mov
pop
mov
push
shrb
mov
loop
mov
in
cmp
dec
out
daa
or
rorl
repnz
push
insb
jle
shrb
test
ds
sub
in
mov
lahf
push
dec
mov
test
outsb
ret
sbb
add
push
dec
and
cmp
and
mov
call
scas
dec
fwait
sbb
addr16
dec
movsb
loope
jbe
lods
roll
add
jo
imulb
mov
inc
pop
sub
imul
hlt
inc
loopne
inc
clc
push
test
lcall
jl
add
mov
int3
arpl
mov
inc
jne
inc
xchg
hlt
or
stos
mov
andb
adc
into
clc
int
inc
pop
jae
jecxz
daa
dec
jno
sahf
bound
nop
dec
mov
fistpll
mov
mov
arpl
ja
push
or
je
inc
pushf
cli
xlat
or
clc
and
fidivrl
js
mov
out
popa
sbb
add
and
mov
imul
jge
and
push
mov
popa
xlat
les
int3
xor
outsb
sbb
rcrl
or
pusha
stos
popl
in
das
sub
push
mov
in
xor
cmc
mov
push
jmp
add
dec
in
and
push
sub
movsb
pushf
lret
enter
and
pop
mov
mov
das
sub
mov
lret
int3
filds
bound
call
in
xorb
pop
inc
push
xchg
xchg
in
push
adc
mov
adc
and
jmp
dec
stos
not
push
cmpsl
or
std
dec
or
imul
fsubrs
out
addr16
movsb
not
clc
lods
icebp
xor
or
lret
out
stc
xchg
pop
and
inc
outsb
addb
xor
decb
adc
xchg
sahf
inc
js
push
subb
cs
or
sbb
arpl
repnz
jmp
int
add
loop
test
sub
out
add
and
mov
or
add
mov
fisttpll
fldcw
nop
sbb
push
xchg
sub
lret
pop
bnd
jnp
add
xor
sub
push
xorb
adc
or
sahf
hlt
xchg
and
iret
add
dec
repz
mov
mov
cmp
fadd
or
lahf
jnp
stos
xchg
loope
pop
pop
push
add
test
add
movsl
push
adc
adc
inc
cmp
pop
fcomps
mov
lea
pop
loop
mul
sbb
sub
jecxz
mov
idivb
mov
jp
es
lods
xor
test
xor
xlat
sbb
ja
clc
out
xchg
mov
lcall
push
dec
sub
mov
in
pop
dec
outsb
imul
cmpb
mov
xorb
push
pop
insl
jle
xor
mov
xor
in
test
test
movsb
add
pop
and
mov
into
push
fisubs
push
ss
fidivl
int3
inc
or
inc
mov
ljmp
push
jb
les
sbb
fs
push
mov
das
or
test
movsb
or
mov
das
or
lods
mov
iret
aas
lret
mov
pusha
xor
pop
in
std
in
xchg
jns
sarb
fwait
or
xchg
out
repnz
sbb
sbb
addr16
daa
jnp
adc
dec
push
adc
mov
jb
lcall
add
sub
mov
xchg
roll
sub
scas
jge
jmp
sbb
push
inc
pop
inc
cmp
inc
cmc
mov
mov
xchg
xor
push
cld
addl
rorl
and
adcb
clc
jl
mov
pop
pop
negb
sub
jno
hlt
imul
insl
out
cwtl
xchg
cwtl
adc
xchg
push
push
xchg
not
aad
nop
ret
in
mov
mov
pusha
xchg
mov
add
fwait
push
ret
inc
scas
test
repz
adc
ss
push
cmp
inc
jmp
xchg
mov
push
les
lods
out
mov
xchg
pop
ja
pop
sub
insb
sbb
mov
addr16
inc
fstpt
add
lds
outsb
lcall
push
outsb
aaa
lcall
movsl
adc
adc
push
imul
add
mov
cmp
mov
hlt
ja
push
shlb
and
sub
push
add
rcl
xchg
xchg
cmc
popf
push
aam
outsb
cmp
add
xchg
mov
lea
addr16
fsubl
xchg
ficompl
xchg
xor
sbb
xchg
adc
push
movsb
fisubs
xor
bound
in
xor
xor
dec
xchg
es
fsubrs
add
add
inc
mov
ss
cwtl
ljmp
cmp
adc
cmp
mov
sub
pop
sbb
repz
ds
or
lock
pop
inc
inc
lret
test
movsl
aas
mov
icebp
je
fnsave
outsb
cmpsl
mov
adc
outsb
sti
mov
jecxz
nop
jae
fisubrl
ljmp
int3
lret
cwtl
mov
sub
mov
daa
fs
push
inc
mov
pop
into
mov
pusha
adc
pop
iret
or
mov
fmull
adc
and
daa
xchg
add
mov
aaa
scas
ljmp
xor
mov
in
orb
inc
and
sub
mov
andb
jle
push
or
mov
sahf
stc
xor
inc
imul
popl
mov
pop
mov
dec
add
pop
aas
add
fs
cli
aam
jns
imul
push
push
adc
lret
sub
loopne
rcll
andb
stos
or
nop
pushf
mov
out
bound
add
jmp
and
fidivl
mov
loopne
ja,pn
imul
mov
jge
pop
dec
andl
iret
in
jns
lcall
jne
gs
jns
lcall
mov
cmp
mov
es
repnz
push
lahf
push
pop
aaa
andl
lret
fisubrl
jb
pusha
cmp
nop
hlt
jp
test
jb
fstps
shrb
lret
ret
mov
sahf
mov
movsb
adc
jns
outsl
sahf
cwtl
cmp
stos
out
mov
int
lea
push
lods
imul
retw
scas
push
add
sub
subb
and
and
sbb
pop
mov
leave
jb
in
out
inc
out
fmull
and
fucomip
lret
pop
sbb
mov
sbb
test
and
mov
sub
mov
xor
mov
fisubrl
ret
sar
mov
pop
dec
popf
enter
pushf
pop
insb
inc
push
dec
sbb
outsb
and
or
sub
xor
xor
es
jl
sub
aas
mov
loop
call
inc
addl
roll
scas
xor
push
adc
out
mov
jae
mov
xchg
mov
lcall
sub
jmp
or
sub
scas
mov
ja
pop
lea
stos
daa
push
or
adc
sub
das
dec
dec
mov
inc
pop
inc
out
adc
not
mov
jl
aam
and
movsl
xor
outsl
ret
or
push
inc
xor
cmp
xchg
outsb
xchg
outsl
outsb
push
test
lea
leave
lds
cmp
rcl
out
xchg
scas
jno
jae
add
popf
sub
pop
pusha
xor
cmpsl
rolb
jno
loope
xchg
inc
shll
insb
mov
into
xrelease
daa
add
cltd
jg
xorl
divl
xchg
cli
aaa
in
jle
ss
enter
push
out
inc
pushf
les
cltd
dec
clc
cmp
cmpsb
pop
jns
mov
outsb
add
pop
xchg
mov
push
mov
popl
stos
in
adc
cmpsb
mov
adc
add
dec
add
pop
cmp
mov
add
xor
xor
pop
daa
orl
adc
lret
aad
xor
cmpsl
dec
imul
outsb
mov
loop
in
dec
enter
dec
cmp
out
sub
cmp
or
lcall
in
fisubl
and
addr16
out
sbb
add
xchg
xor
sbb
and
cmp
mov
movsb
in
outsb
test
jne
rol
daa
pop
call
scas
mov
cld
orl
rclb
pushf
mov
jnp
pop
add
imul
dec
xchg
pop
dec
mov
dec
andl
in
cli
shll
addr16
sahf
push
xor
out
dec
imul
jb
xchg
ds
dec
pop
fs
jmp
loopne
mov
lods
cmpl
loopne
add
lcall
in
mov
inc
xor
clc
cmp
xor
cld
adc
or
std
pop
ret
mov
gs
cmc
out
rcll
and
push
mov
cmp
push
addb
lahf
fidivl
pop
rorb
or
ss
jne
imul
into
jmp
or
inc
cmp
sbb
add
push
add
int
repnz
jmp
inc
fsubrs
jge
fsts
subl
in
mov
push
cs
ret
jg
jo
xlat
mov
or
ret
je
mov
fidivs
addr16
xor
std
mov
fs
xchg
out
mov
testl
enter
sti
cmp
das
xor
fucom
lahf
mov
inc
mov
push
jns
pop
fldenv
xchg
xor
int
adc
int
ficomps
and
jns
pusha
gs
loope
and
sbb
int
and
scas
and
mov
inc
adc
stos
push
and
cmp
xchg
sub
movsl
xchg
in
mov
outsl
stos
sti
shll
pop
jg
inc
sti
sbb
in
add
enter
jmp
lret
xor
mov
sahf
cwtl
and
xchg
pop
cmp
cs
pop
sarb
jge
add
sub
mov
flds
xor
lcall
push
lods
sarl
outsb
sarb
xor
pop
not
imul
pop
clc
cmp
add
and
xchg
pop
test
call
push
fmull
mov
pop
jg
cmpsb
jge
dec
add
add
imul
arpl
fs
xchg
cli
cmc
popa
scas
jo
fbld
pop
bound
xchg
adc
ficoms
adc
aam
lret
dec
xchg
xor
sbb
pop
mov
cltd
mov
adc
push
dec
arpl
dec
add
push
jecxz
inc
sbb
imul
or
scas
dec
jle
push
add
mov
adc
xor
cmp
mov
push
sbbl
cmc
sti
adc
aad
jg
xor
lea
and
mov
loopne
shl
cmp
repnz
pop
cmp
sbb
shll
adc
scas
jle
mov
adc
roll
cmp
push
pop
push
and
test
push
sub
mov
cltd
fdiv
aad
ret
shrb
lret
ss
cmp
nop
fwait
scas
stos
out
mov
out
mov
xchg
sbb
in
arpl
orl
or
jmp
pop
adc
scas
mov
out
pop
jno
andl
xchg
cmp
mov
test
sbb
cmp
sbb
mov
add
or
inc
inc
out
dec
or
and
repz
das
jne
mov
dec
inc
jb
imul
fwait
pop
add
ffree
sbb
inc
add
loopne
xchg
das
aam
ja
call
scas
sbb
loope
out
pop
push
or
add
adc
push
icebp
mov
push
je
mov
out
ds
cld
add
inc
inc
mov
inc
mov
insb
sub
sti
ljmp
mov
push
xorl
in
dec
mov
ds
je
mov
pop
dec
cmpsb
jp
js
jbe
push
cmpsb
jl
xchg
jl
mov
nop
xor
xchg
sbbb
cmp
jmp
stos
pop
loope
inc
xchg
xchg
sub
nop
inc
leave
jmp
mov
jecxz,pn
dec
test
nop
or
roll
test
push
insb
or
sub
xchg
pop
add
ret
andl
xor
pop
jmp
dec
adc
sub
negb
adc
xchg
mov
cmpb
push
inc
adc
mov
mov
ret
dec
mov
mov
xor
and
push
pop
dec
or
iret
das
push
insl
pop
shlb
push
lahf
xchg
sbbl
sbb
fcompl
in
mov
std
lods
in
inc
rcrl
hlt
jns
xor
rcrb
push
das
xor
fldcw
xor
popa
ret
push
add
cwtl
jp
ja
lahf
loopne
rolb
rcl
dec
scas
dec
sub
movsb
dec
pop
sub
shll
stos
mov
jl
popa
dec
aaa
outsb
jae
inc
into
inc
movsl
repz
xchg
jns
lret
push
dec
jno
or
and
cmp
push
or
sub
mov
sbb
sbb
call
popf
sahf
sbbl
jp
pop
js
xor
decb
loopne
jne
ds
pusha
xlat
pop
addr16
lcall
jno
sbb
dec
mov
push
mov
adcb
out
or
rcr
pop
cmp
mov
pop
inc
test
lret
and
xchg
xlat
inc
cmc
add
sub
dec
nop
arpl
jae
inc
add
lock
mov
shlb
sbb
inc
adc
pop
mov
repz
ss
add
js
mov
mov
push
dec
xchg
mov
test
insl
pop
or
push
aad
ret
sub
dec
push
neg
mov
pop
ficoml
test
scas
imul
jmp
mov
cmp
fwait
sub
fisubl
mov
test
cmpl
xchg
jbe
js
inc
fucomp
and
adc
dec
mov
xor
add
or
stc
std
and
out
xchg
push
dec
or
lret
adc
fimuls
sbb
mov
es
xchg
dec
sub
ja
ss
mov
xchg
std
jmp
jno
xchg
cmp
xor
jg
rclb
push
push
enter
sbbb
idivb
cmc
jl
lret
cmpsb
mov
or
rcrb
push
add
rcrb
not
mov
mov
mov
mov
cmpsl
and
push
ret
push
or
subb
cmc
aad
insl
inc
mov
fdivl
les
inc
aam
lods
and
xchg
scas
mov
in
lock
pop
dec
pop
adc
jmp
mov
nop
mov
xor
subb
mov
jbe,pn
negl
pop
cmp
repz
add
mov
xchg
pusha
icebp
jnp
mov
cmc
jecxz
movsb
mov
jo
aaa
mov
ret
add
adc
loop
dec
stos
jnp
rcrb
jle
jbe
add
std
repz
nop
mov
pop
push
pushf
loop
xchg
roll
lea
xchg
mov
rcrl
push
and
loope
push
jmp
sbb
sub
arpl
ficoms
orl
loopne
inc
push
mov
lret
sub
push
adc
pop
push
and
dec
shll
fadds
insb
lret
sub
inc
pop
dec
cltd
in
xlat
lret
pop
cmp
xor
jo
fiaddl
mov
lret
ds
xor
mov
xchg
popf
mov
movb
and
cmp
jae
cltd
jmp
push
mov
in
flds
mov
and
out
or
add
outsb
js
mov
arpl
cmp
dec
add
or
xchg
enter
xchg
bound
cli
decl
cmpsb
in
or
jnp
add
xor
test
add
mov
pushf
fiaddl
in
pop
aam
push
xlat
cmp
int3
std
push
push
data16
gs
stc
into
or
xchg
xorb
sbb
sub
adc
sti
jge
xor
add
test
lods
int3
pusha
mov
sub
pop
sbb
fwait
mov
stos
out
js
mov
out
dec
mov
inc
jmp
pusha
test
mov
ja
data16
test
mov
add
gs
xchg
sub
cli
xchg
add
lahf
jae
and
out
insb
cli
pop
fxch
cmp
dec
mov
sub
push
cmpsl
lret
adcl
dec
lcall
jbe
rorl
sbb
mov
inc
adc
push
push
insl
xor
std
pop
cmpsb
inc
cmp
xor
rcr
pop
adc
inc
pop
test
aas
push
push
negl
add
fistps
imul
sbbl
xchg
mov
iret
insl
xchg
inc
xor
mov
pop
in
mov
insl
jae
push
pop
imul
clc
lcall
sub
inc
or
cmpsb
leave
xor
mov
addr16
and
cmpsl
push
and
scas
inc
add
jbe
push
push
mov
arpl
lds
cmp
lret
pop
cmp
cmpsl
shl
fidivs
fcompl
lret
push
add
jmp
inc
jmp
mov
out
shl
ret
ljmp
fistpll
inc
and
push
aad
into
stos
movsb
ds
shrb
sbb
mov
hlt
movsl
mov
stc
mov
test
mulps
jbe
lods
test
push
cmp
add
mov
dec
ss
pop
mov
into
mov
sub
sbbl
push
mov
mov
es
sub
mov
nop
jns
movsl
leave
xor
and
sub
mov
xor
mov
add
mov
pop
popa
aam
es
scas
inc
or
lret
mov
rcr
push
and
cmp
cli
inc
sbb
or
mov
hlt
xchg
mov
std
sahf
jns
insl
popa
cmp
aaa
pushf
sbb
push
push
sbb
loop
addr16
lahf
outsb
out
sbb
inc
clc
clc
xchg
test
xor
imul
loopne
movsl
enter
ja,pn
or
ss
adc
dec
lods
scas
sbb
xchg
xorb
sbbb
test
lods
popa
repz
and
int
call
xor
inc
cmp
ret
sub
mov
lods
dec
movsb
and
outsb
push
mov
imul
fdivrs
lret
int
cwtl
aas
push
daa
aad
sub
mov
sbb
orb
jmp
dec
sbb
movsb
dec
fisubl
pusha
mov
jl
sbb
add
push
mov
mov
sub
out
add
imul
mov
dec
mov
sbb
adc
dec
pop
imul
lcall
jbe
outsl
jp
aaa
aam
push
fisttpl
aaa
xchg
jnp
push
push
pop
jg
in
outsb
out
jns
test
xorl
rcl
mov
pop
test
orb
mov
cld
jnp
pop
sbb
mov
test
adc
roll
jne
add
sub
aam
or
jle
sub
sbb
popf
jmp
outsb
or
dec
cwtl
loope
jae
fnstcw
cmp
sub
mov
das
cld
or
dec
xor
jg
dec
push
ret
ds
adc
mov
jge
dec
gs
adc
mov
cwtl
sarl
cmc
jp
stc
pushf
jmp
inc
rolb
xchg
stos
call
lcall
mov
jns
push
pop
clc
mov
mov
xor
xchg
jp
leave
test
or
inc
sbb
or
xor
popa
sub
xchg
sbb
in
pop
fdivs
or
and
push
mov
mov
leave
inc
or
jle
hlt
add
mov
add
pop
scas
ss
shr
bound
inc
shlb
sbb
or
add
sub
push
lret
test
jo
dec
popa
fldl
scas
std
rorl
or
pop
xor
hlt
add
testl
mov
mov
call
fidivrs
xor
and
push
scas
jnp
mull
cmp
mov
xchg
lret
jle
push
jecxz
pushf
add
aas
xchg
cmpb
fnstsw
leave
push
out
sub
into
xor
xchg
fucomi
inc
repz
xlat
out
into
and
and
add
sbb
adc
jb
daa
dec
lahf
xchg
shl
es
insl
cmp
movsb
call
or
dec
xor
lds
inc
and
insl
sub
je
xchg
lcall
hlt
shlb
imul
mov
sbb
lds
rcr
mov
jmp
enter
mov
mov
movups
jo
push
cmp
or
insl
popf
popf
test
cli
adc
sub
jl
or
fists
stc
repnz
push
pop
ficompl
mov
xchg
sub
int
mov
clc
adc
das
sub
push
or
mov
fists
cmpl
adc
cmp
sub
loopne
and
sub
inc
vcvttps2dq
sbb
and
xor
jp
outsb
xchg
imul
jl
pop
fwait
out
in
or
aas
sub
scas
sbb
out
iret
add
aas
dec
in
xor
mov
fcmove
adc
inc
rolb
lds
in
adc
or
dec
aas
fwait
dec
push
pushf
mov
cmc
dec
mov
push
in
xor
aaa
or
clc
mov
into
mov
jnp
hlt
lret
lds
test
add
icebp
inc
test
subb
ljmp
mov
ret
adc
pop
leave
cltd
mov
inc
or
ljmp
fistps
addr16
sbb
mov
stos
sbb
push
mov
mov
dec
data16
bound
xor
stos
std
mov
shlb
fwait
cltd
out
stos
dec
data16
std
sbb
or
loope
in
or
cli
ret
rclb
out
int
nop
jb
dec
cwtl
sub
hlt
mov
sub
jne
dec
mov
add
push
pop
or
lcall
inc
jns
or
pop
cld
push
xchg
lret
out
add
sbb
scas
divl
es
rorb
mov
lds
ljmp
or
inc
pop
subl
mov
rcr
push
out
pop
int3
movsl
sbb
xchg
cs
ljmp
sahf
dec
imul
int
sbb
sbb
ds
lods
add
sub
in
cltd
mov
hlt
pop
cmp
cwtl
inc
scas
pop
sub
inc
cld
cmpsl
xor
rolb
and
lods
xlat
mov
movsl
lahf
dec
xchg
mov
cmp
sub
cmp
ljmp
out
xor
imul
xchg
push
fs
lds
std
lahf
mov
push
inc
test
inc
rep
sti
andb
adc
daa
jne
jo
fcmovnbe
mov
xor
pushf
sub
aas
push
out
insl
cmp
jnp
loopne
mov
jp
fsubrl
or
inc
adc
enter
insb
and
pop
sahf
rolb
imull
sbb
movsb
sub
cmp
test
notl
lret
mov
jae
xchg
pop
int3
sahf
or
inc
push
and
imull
jge
push
lods
pusha
loopne
mov
decb
jne
dec
jle
das
mov
sbb
xchg
dec
push
sub
pop
gs
leave
hlt
and
clc
lea
cld
popa
mov
test
insb
shll
push
push
cmp
add
mov
cwtl
dec
jae
jae
stos
dec
cmp
icebp
dec
outsb
fidivrl
aam
xor
negl
sub
scas
adc
cmpsl
cltd
insl
cltd
int
loopne
xchg
adc
popf
arpl
nop
xor
jge
mov
push
aad
fld
xor
pop
jno
fistpl
fimull
outsb
out
mov
xlat
mov
sub
jo
or
dec
xor
movsl
lcall
test
dec
add
xor
popf
jno
push
sbb
xor
and
and
cld
out
cmpsl
fimuls
adc
cmp
adc
pop
cmc
adc
adc
dec
jecxz
mov
inc
sbb
cli
push
in
xor
dec
pop
clc
sbb
mov
adc
or
pop
and
mov
popa
ficompl
cmpsl
lds
stos
pop
js
dec
dec
rcrb
or
icebp
aaa
aaa
cmp
adc
lea
lods
fbstp
jbe
cwtl
adc
repnz
push
inc
decl
mov
rcrb
mov
in
repnz
stos
push
mov
push
sbbl
fsubl
test
aam
aam
cld
add
push
mov
aad
cmpsb
negl
inc
cmpl
cmp
mov
pop
icebp
je
iret
or
and
dec
xchg
mov
icebp
cli
mov
add
mov
mov
cmp
sbb
push
int
lock
iret
sub
lock
or
sar
push
imul
out
add
idivl
ret
inc
pusha
adc
les
aam
jne
and
add
rcrl
jno
stos
push
faddl
sbb
mov
adc
xlat
inc
push
inc
inc
sbb
hlt
mov
popf
ds
push
mov
ja
inc
mov
push
out
push
add
ljmp
hlt
push
push
mov
pushf
push
pop
pushf
and
pusha
int3
fstps
or
or
call
xchg
popa
mov
push
jmp
mov
negb
or
scas
sub
inc
in
loop
lock
cmc
daa
mov
imul
mov
aam
movaps
fcoms
into
xor
js
sbb
pushf
push
das
xchg
lods
imul
daa
int3
test
fnsave
std
movsl
shrb
gs
mov
das
lahf
cmpb
insl
into
inc
push
mov
cmp
pushf
ret
adc
lcall
add
jno
jecxz
divl
xchg
xchg
mov
push
jge
imul
sbb
loop
adc
mov
aas
loope
jecxz
mov
mov
mov
push
pop
lahf
gs
xchg
and
test
popf
aam
ja
in
loope
shlb
idivb
daa
test
mov
sbb
repnz
push
aas
in
inc
sub
dec
in
jnp
jmp
orl
push
scas
mov
dec
inc
out
and
jbe
mov
loop
mov
inc
into
cwtl
cmp
xchg
mov
out
lock
cmpsl
movsl
xorb
dec
stc
mov
fdivrs
mov
dec
out
aam
adc
fists
jb
test
fsubrl
movsb
mov
adc
jg
or
push
or
pushf
mov
loope
lret
jns
push
imul
inc
cmp
scas
or
sub
loop
pop
xchg
loop
adc
and
add
orb
je
jnp
loope
mov
jbe
bound
enter
aas
es
sub
xchg
cs
repnz
fiaddl
sbb
outsl
inc
xor
addr16
inc
mov
mull
dec
inc
push
jb
xchg
mov
aas
inc
ret
fs
or
aas
aas
inc
lea
xor
hlt
and
stos
shl
and
sbb
insl
mov
fidivs
dec
mov
pop
jecxz
cmp
imul
inc
inc
pop
int
mov
pop
xchg
xor
pop
bound
roll
add
and
push
jecxz
adc
outsl
hlt
insl
loop
mov
mov
push
inc
cmp
in
inc
and
cmp
shrl
pop
daa
or
add
mov
or
fsubrl
sbb
jg
out
into
gs
jecxz
push
sub
xor
cmp
jbe
pop
and
stos
hlt
lcall
jnp
and
lods
adc
cmpb
test
or
xorb
inc
cmp
adc
test
sub
outsl
ret
insb
adc
mov
gs
jmp
jnp
daa
mov
push
cmp
in
insl
enter
push
sub
mov
cld
sub
in
or
loopne
ds
daa
adc
fwait
push
xor
mov
mov
pop
mov
inc
sub
out
in
and
dec
mov
cmp
push
popf
sbb
sub
in
shrl
dec
mov
out
cmpsl
test
pop
mov
push
cmpsl
inc
test
xor
jecxz
xor
test
push
push
in
fstps
int
pop
push
out
dec
dec
pop
xchg
sti
loop
lds
push
push
sar
xor
mov
sbb
mov
ljmp
negl
cmp
or
dec
ds
lret
dec
dec
or
jmp
mov
inc
fs
mov
add
test
jo
xchg
mov
aas
lods
ja
pop
lds
ret
mov
mov
xor
outsb
jae
lock
xor
inc
mov
fs
sbb
clc
shlb
mov
mov
pop
das
dec
sub
dec
scas
sbb
imul
inc
cmp
shrl
mov
movsb
xchg
push
aam
pop
pop
aad
cmp
push
ljmp
mov
lock
sub
in
xchg
push
lret
sbb
mov
mov
scas
cmp
mov
ficoml
adc
shll
jne
pop
or
push
roll
jmp
push
ljmp
in
inc
js
test
mov
mov
scas
ss
es
and
divl
in
imul
jmp
scas
inc
jae
faddl
xor
das
mov
fwait
sub
xchg
sar
imul
mov
mov
mov
fcomp
sbb
xor
or
jb
dec
enter
out
sub
addr16
repnz
add
mov
sbb
test
pop
jae
fstpl
fisttpll
outsl
insl
jns
push
mov
int3
sbb
js
sbb
fldl
cli
mov
movl
mov
in
and
or
push
xchg
sub
je
xlat
divl
sahf
lea
movsb
mov
je
jnp
hlt
sbb
arpl
in
popf
cltd
xor
push
add
fs
sbb
xchg
or
popf
lds
inc
decl
daa
mov
push
pop
lea
xlat
punpckhwd
adc
add
int
jg
test
rol
arpl
and
jecxz
adc
add
jmp
call
dec
int3
hlt
inc
gs
mov
xchg
mov
xchg
out
inc
lret
pop
pop
mov
sbb
lret
push
inc
dec
lea
cmp
pop
sarb
cltd
ja
pop
push
adc
hlt
lret
outsb
mov
xchg
movsl
and
sub
xlat
mov
or
xchg
inc
cmp
iret
cs
mov
sbb
push
shrb
mov
aas
pop
jns
leave
push
aad
jl
add
cld
dec
cs
xchg
loope
rcl
out
in
push
fstl
js
push
add
lods
sti
push
cmp
jp
imul
xchg
jle
fisttpll
inc
xor
push
push
sub
pop
dec
jp
push
in
fcomi
fmul
adc
dec
push
xor
cmp
add
xor
rolb
and
int3
fistps
lret
pop
nop
in
xor
popa
xor
jb
iret
sbb
movsb
lds
out
jnp
dec
pop
jg
test
rcl
inc
gs
xchg
mov
rolb
lcall
loop
data16
mov
stos
cmp
je
out
out
xchg
sub
fisubrl
adc
out
push
mov
jle
push
pop
and
clc
dec
xchg
xchg
push
push
lods
cmp
cmp
adc
clc
out
out
push
fisubl
mov
push
cmovg
ljmp
imul
dec
in
daa
mov
push
add
adc
adc
sbb
xchg
xchg
mov
dec
xor
push
test
jl
xchg
pop
and
push
or
aam
inc
lock
stos
xor
jmp
loopne
mov
xor
cmp
pushf
fisttps
movsl
test
mov
lret
inc
into
imul
adc
pop
lret
iret
cmp
js
push
mov
test
push
stc
cmp
leave
mov
inc
in
jb
cmpsl
xor
or
shrb
loop
xchg
out
add
dec
mov
push
or
xchg
cmp
cmpsl
sbb
into
stos
outsl
cmp
dec
int3
test
cmp
outsl
push
fwait
cmp
cmpsl
in
push
push
sub
gs
cmp
ljmp
xchg
and
mov
test
inc
mov
ret
sahf
inc
xchg
dec
shll
scas
jae
roll
fwait
sub
mov
sbbb
call
dec
adc
in
dec
push
adc
mov
sbb
jmp
mov
jmp
xor
call
pushf
ret
push
pop
cmp
lcall
loope
mov
lret
lahf
leave
inc
shrl
jb
stos
roll
iret
adc
push
jne,pn
push
insb
xor
inc
sbb
inc
push
shrl
adc
stos
ds
xchg
pop
fsubl
movsl
or
jecxz
fwait
mulb
ss
fisttpl
call
mov
dec
pop
in
addl
adc
inc
dec
pop
mov
test
xor
dec
jae
test
xchg
push
repz
mov
bnd
popa
insl
sarb
mov
ja
data16
movsl
mov
add
fstpt
les
leave
mov
pusha
xchg
sub
cmc
mov
in
sub
test
cld
insb
cmp
pop
mov
push
pop
into
shll
cmc
fmuls
movsb
inc
stc
cmp
sbb
cmp
xchg
jmp
imul
cmpsb
sub
cmp
mov
or
jg
scas
call
shl
dec
pop
pop
pop
pop
add
iret
push
xchg
add
mov
pop
cli
outsb
imul
push
jns
lcall
push
ds
mov
cmp
xchg
mov
fiadds
rclb
xor
cli
pop
ret
jg
test
test
into
xchg
mov
adc
pop
icebp
lahf
mov
xchg
mov
popa
shll
bnd
push
dec
cmp
cmp
add
sbbl
inc
xor
cli
paddusb
fimuls
lcall
push
insl
sub
jb
or
sub
pop
stos
iret
mov
xchg
scas
sbb
flds
mov
xchg
mov
test
jo
cmp
inc
cmc
mov
mov
or
popa
shrl
and
das
sub
iret
mov
fistl
xor
xor
out
sbb
mov
ljmp
or
sub
jmp
in
inc
xchg
mov
movsb
mov
test
or
sbb
in
les
aam
adc
add
inc
iret
test
or
dec
push
test
es
adc
pushf
cmc
lea
leave
arpl
lcall
outsb
add
inc
sti
cmc
xchg
xchg
jmp
add
mov
push
loopne
fists
add
insb
scas
sub
push
xchg
push
add
stc
pop
cwtl
mov
ror
sarl
push
push
push
jae
cmp
add
push
data16
fisubl
push
cmp
out
mov
loope,pt
loope
inc
adc
nop
mov
mov
mov
into
push
pusha
pop
call
or
test
push
out
lds
cmp
dec
fcomi
jne
shrb
sub
inc
xchg
dec
xchg
ret
or
ja
push
dec
mov
mov
mov
mov
xor
test
cltd
jmp
adc
or
lock
sahf
sub
push
jnp
jb
fprem
outsb
mov
movq
aas
jg
push
in
push
xchg
add
sub
inc
lods
push
inc
push
iret
repz
mov
xor
mov
jecxz
sar
pop
sub
and
hlt
mov
repz
rolb
cmp
pop
jg
sahf
lock
push
jno
mov
jge
mov
int3
jbe
push
lret
xchg
add
push
pop
in
jbe
sbb
dec
rcrl
add
jne
popa
push
rcrl
push
inc
arpl
popf
mov
add
lret
loop
arpl
sarl
sub
cld
mov
adc
mov
shlb
sub
or
imul
loop
pop
fbstp
subl
addr16
ror
xchg
sub
sub
fnstcw
push
gs
pushf
cmp
and
push
outsb
jl
into
add
call
sbb
cmp
rclb
adc
pop
pop
repnz
das
push
and
xlat
pop
xchg
push
fcompl
inc
imull
push
test
and
sti
adc
divl
adc
push
std
mov
pop
icebp
cmp
loopne,pn
xchg
in
add
pop
fsubl
adcl
andl
sub
cmp
mov
or
adc
cmp
sub
mov
xchg
sbb
fdivrs
jmp
xchg
outsl
push
insb
and
xlat
imul
cli
jb
loop
dec
or
pop
sar
mov
mov
cld
xor
imul
stos
dec
xchg
fs
push
lret
popa
xchg
push
ret
adc
xchg
aam
jmp
stos
add
aas
push
mov
mov
scas
mov
mov
mov
ficoml
xchg
push
mov
jg
xchg
mov
fbstp
dec
ja
movsl
push
adc
outsb
in
into
enter
loope
inc
push
jl
subb
inc
ret
inc
sbbb
sbb
js
pop
ja
movzbl
jmp
icebp
pusha
arpl
imul
test
dec
jecxz
das
jmp
push
aas
dec
xchg
lret
pop
xor
mov
shrb
xor
imul
xor
fs
std
jecxz
sbb
mov
call
pop
xor
stc
xchg
xlat
sub
xor
js
mov
xor
add
mov
xchg
xor
aad
jb
imul
pop
ret
insb
mov
jmp
subb
or
movsb
sbb
inc
dec
lcall
enter
xchg
std
pop
sub
push
loope
outsb
cmpsl
xor
shr
mov
xor
in
dec
popf
jb
lea
mov
add
pop
jp
xor
sbb
cltd
and
mov
xchg
rcll
xor
sbb
popf
cs
popl
filds
ss
out
stos
pop
and
jbe
fmuls
movsb
sbbl
pop
imul
scas
sti
mov
lea
loopne
fnstcw
sbb
inc
sub
mov
xor
mov
fadds
pop
lds
jp
push
pop
push
in
popf
xor
mov
jno
add
or
fiadds
cmp
or
mov
arpl
lods
outsl
pop
dec
cwtl
mov
daa
mov
pop
in
pop
jnp
push
test
mov
cmp
lret
adc
pop
xchg
aaa
in
data16
and
stos
leave
es
mov
ljmp
jns
mov
aam
mov
in
gs
mov
pop
inc
fmuls
fldenv
pop
test
dec
lcall
push
lock
lea
cmp
jg
push
cmpsl
dec
inc
pop
sahf
insl
sbb
ret
jl
jge
cmp
or
xchg
lds
push
ret
sbb
ja
inc
pop
mov
jb
insb
pushf
das
sbb
or
jne
sbb
das
mov
outsb
add
push
mov
jp
mov
or
pop
ja
ret
popf
jb
push
in
inc
test
push
add
ljmp
mov
push
mov
fstpl
insb
ljmp
or
sti
dec
popl
sbbl
test
repz
sbb
mov
pop
sbb
jnp
inc
hlt
xchg
lahf
jne
das
outsl
push
jo
test
xchg
dec
mov
lods
bound
sub
arpl
xorl
jecxz
pop
mov
mov
mov
mov
adc
ja
mov
shrb
and
bound
mov
sub
jle,pn
loopne
mov
shl
test
test
cmp
mov
test
jg
test
das
xor
dec
cld
pop
in
pop
pop
push
ja
mov
push
loope
fsubl
ret
leave
sbbl
mov
sti
mov
sti
cwtl
mov
sbb
nop
fucomi
xchg
je
jg
movb
daa
das
fld
in
lds
jo
sbb
mov
push
in
in
mov
lods
das
sub
fistps
push
loop
punpckhbw
mov
cmp
push
ja
sub
divb
pop
out
push
push
cwtl
jb
push
pop
lea
mov
out
cmc
roll
mov
testb
jns
mov
imul
std
ds
gs
loope
jp
daa
daa
lahf
sbb
jb
mov
les
lods
dec
jo
mov
cltd
test
and
fwait
push
int3
xor
dec
andl
push
xor
push
movsb
enter
mov
repz
dec
sub
or
dec
sbb
xchg
out
lock
xchg
fwait
mov
push
cmp
dec
inc
dec
adc
jecxz
sub
idivl
fisubs
cltd
pop
fdivrl
scas
xchg
aam
cs
ljmp
push
lds
push
fiadds
addb
std
cld
jecxz
out
sti
divb
ds
loopne
unpckhps
js
inc
add
repnz
jbe
stc
sub
cmc
and
andl
int
insb
sub
or
sub
jmp
das
jp
pop
insl
cmp
xchg
and
inc
call
mov
jns
ss
movsb
mov
popf
mov
leave
hlt
dec
xchg
sub
inc
jo
inc
push
insb
scas
inc
in
mov
jnp
pop
lahf
cwtl
push
mov
test
cmpb
lcall
cmp
scas
fs
cmp
mov
pop
adc
mov
xorl
shlb
xor
push
lods
or
fld
cmp
call
stos
call
mov
das
sub
cwtl
push
lret
pop
mov
jno
add
in
jmp
or
inc
add
xor
bound
cmpsb
out
sarb
mov
clc
inc
push
in
inc
ret
add
xchg
int
xchg
xor
bnd
or
xchg
test
into
xchg
out
test
dec
or
sub
mov
mulb
addb
sub
das
movsb
mov
or
jl
mov
fcomps
or
aam
cli
lods
sarl
je
fs
js
cmp
lahf
and
add
push
insl
dec
data16
clc
or
repnz
jne
insl
out
scas
aas
gs
jle
mov
push
jne
inc
int
sub
xchg
dec
lock
or
js
and
mov
pop
je
test
sarb
jecxz
mov
jae
xchg
shlb
iret
sub
call
and
mov
inc
inc
loope
fmuls
xchg
and
inc
loope
jg
mov
stc
loope
leave
mov
add
or
push
dec
push
icebp
and
pop
jno,pt
lahf
in
orb
and
bnd
xor
mov
adc
fdivl
cmp
and
mov
jb
fcompl
fwait
stos
pushf
lds
mov
sbb
lea
js
jne
pop
jle
stos
and
lret
sbb
mov
imul
ja
in
mov
sub
vmwrite
fdivr
jle
mov
lret
xor
scas
mov
lcall
pop
lods
mov
and
inc
iret
sbb
jmp
test
sahf
movsl
ds
imul
aam
mov
and
pushf
cmpsb
and
mov
imul
pop
rcr
popa
dec
mov
inc
fsubr
jecxz
adc
ret
loopne
jecxz
rcrl
imul
jno
ja
push
iret
clc
inc
cmc
lds
pop
push
imulb
dec
dec
or
lahf
jg
xchg
cld
loope
sbb
leave
inc
mov
lods
and
mov
xor
addr16
loopne
push
sub
add
sbb
push
les
dec
fisubs
cmp
and
adc
pop
push
inc
pop
std
push
mov
out
cli
bt
test
push
movsl
rcll
fcomps
lock
aad
or
jecxz
scas
mov
push
dec
lcall
mov
pop
jb
clc
jle
popf
pop
xor
cmc
das
mov
out
fidivs
ja
pop
out
hlt
jb
sub
pop
mov
sub
mov
dec
jge
or
adc
negl
sbb
mov
aad
jp
lahf
scas
adcl
jl
scas
xchg
mov
cmp
mov
rolb
lock
call
mov
cli
push
xor
or
daa
dec
adc
imulb
sub
mov
movsb
outsl
mov
cwtl
push
xchg
sub
lahf
dec
ret
mov
leave
mov
js
push
cltd
mov
pop
cltd
lahf
and
push
cli
movb
push
aam
pop
xchg
xor
pushf
mov
in
sbb
frstor
cmp
add
jg
aad
out
nop
mov
arpl
les
adc
pop
dec
push
loope
cmp
push
sub
xor
dec
gs
call
xor
ja
outsl
dec
lcall
mov
repnz
fsubp
movsl
cmp
aam
iret
mov
sbb
pop
sub
pusha
pop
and
cmp
sub
lock
fwait
mov
pop
mov
rcl
out
mov
dec
dec
das
cwtl
stos
call
int3
stos
push
adc
add
idivl
stos
lahf
cmp
pop
ss
add
inc
decb
fstps
addr16
fcomps
imull
mov
mov
cmp
stos
jmp
inc
fwait
jbe
dec
mov
nop
ds
daa
push
add
pop
lret
ljmp
jg
or
inc
push
jmp
or
mov
int
les
sbb
pop
and
cmp
je
aaa
cmc
pusha
adc
ljmp
roll
lea
insb
loop
repz
mov
cmp
popf
outsl
js
pop
in
mov
inc
mov
mov
in
test
add
fisubs
les
xchg
insl
inc
and
xor
mov
or
add
pop
inc
cmp
les
mov
bound
test
les
mov
rcr
xchg
scas
lods
and
iret
fmuls
mov
jmp
bound
sbb
rcl
pop
mov
pop
sbb
int3
rdmsr
call
faddl
sub
or
jnp
int3
and
addb
cmp
shlb
xchg
cmc
out
loopne
test
push
cmc
pop
mov
shl
js
add
dec
add
dec
outsl
movsb
das
ss
push
enter
pop
mov
leave
loopne
xchg
hlt
sbb
aaa
add
pop
dec
or
push
fdivrp
test
adc
nop
or
xor
push
out
into
out
mov
fisubrl
jae
inc
outsl
outsl
shll
mov
out
add
cvtps2pd
insb
mov
pop
pop
sti
rcll
iret
inc
xor
in
scas
add
repnz
sub
xchg
sub
test
adcl
sub
clc
push
mov
jecxz
push
sbb
push
or
or
and
xor
mov
mov
jne
movsb
fists
out
or
mov
mov
pop
movsl
lods
jp
push
lcall
test
xchg
or
jmp
lods
inc
pop
push
push
cld
les
push
lods
or
xor
jo
inc
pusha
mov
iret
ds
leave
popf
or
pop
xor
dec
jp
mov
add
ja
sub
int3
sub
and
sahf
fsubp
mov
aas
xorl
sub
push
outsl
sub
repz
dec
and
dec
mov
pop
in
dec
popa
xchg
ds
stos
outsl
das
xor
fnsave
push
sahf
stc
push
dec
pop
push
pop
fdiv
int
pop
out
js
lock
sbb
ret
mov
xchg
scas
or
jno
add
and
add
xchg
test
inc
xchg
cwtl
sarb
sbb
cmp
loop
imul
popa
daa
push
xchg
in
inc
mov
cli
add
xor
lods
jne
stos
pop
adcl
insb
push
ficomps
loop
repnz
in
lods
inc
cmp
shl
cltd
int
outsb
dec
jb
pop
mov
not
push
and
jecxz
clc
insb
or
fisubl
mov
popf
dec
xchg
inc
push
jae
out
std
mov
xchg
scas
adc
push
mov
jne
js
lods
mov
outsb
addr16
add
cld
fs
pop
aad
pusha
or
enter
mov
sub
mov
and
pop
add
aas
les
icebp
xchg
punpckhbw
pusha
out
sbb
adc
mov
inc
sti
xchg
push
sbb
mov
lock
roll
pusha
inc
shll
std
mov
jbe
es
cld
xchg
mov
mov
pop
shll
mov
sub
negl
mov
jbe
pusha
int3
icebp
jmp
lahf
sarb
test
mov
iret
dec
xchg
xorb
shr
test
mov
cld
or
or
mov
mov
je
inc
mov
cld
or
or
lret
cmp
push
cmc
rorl
loopne
scas
jg
push
mov
xchg
out
dec
lret
pop
push
aas
ss
jne
and
aad
cltd
lcall
jmp
stc
push
dec
xchg
addb
inc
fmull
hlt
sub
inc
mov
or
and
aaa
sbb
sub
jge
inc
mov
dec
pusha
call
jns
dec
mov
aaa
dec
fsubrl
and
pop
cmp
sub
dec
xchg
lods
xchg
xchg
sbb
push
cmpsl
inc
gs
and
ret
add
fidivl
fcoml
ret
sbb
dec
push
cmp
pop
pop
lock
loopne
xchg
mov
out
cmc
xchg
xorb
in
icebp
test
dec
aas
jmp
out
sub
out
sub
insl
ret
push
xchg
and
loope
sub
inc
test
sahf
adc
dec
inc
imul
das
lret
mov
andl
xor
or
jg
dec
aam
arpl
jne
xor
push
push
or
push
xchg
icebp
das
call
outsb
cmp
lock
imul
test
clc
sbb
jbe
int
xchg
adc
jb
jno
mov
insb
enter
sbb
pop
push
icebp
mov
cmp
addl
stos
sbb
fnstcw
jbe
imul
movsl
push
jecxz
push
loopne
mov
jg
sbb
inc
jg
add
or
push
loop
dec
lret
or
popf
push
ret
dec
add
push
pop
adcl
mov
mov
gs
xor
dec
je
xchg
push
inc
out
jno
cmpsb
jbe
stc
mov
and
out
push
test
movsl
pop
subl
and
xchg
and
adc
lods
mov
jae
add
push
mov
mov
xchg
jo
and
idivb
iret
mov
out
adc
popa
sbb
inc
mov
jl
cmp
fisubs
xor
xchg
sub
xchg
jle
push
xchg
mov
mov
nop
xchg
lahf
loop
jl
jno
rclb
xor
add
inc
jns
fistpll
xchg
add
dec
push
out
insb
xorl
dec
pop
aad
in
addr16
lods
and
dec
push
das
add
cmc
test
fisttpl
pusha
rcll
push
in
pop
xchg
outsb
add
aas
filds
sub
jae
dec
insb
xor
enter
add
pop
stos
out
inc
sbb
scas
push
push
mov
adc
xchg
xchg
adc
test
mov
lret
mov
ss
stos
gs
mov
or
xorb
pop
stc
cmpsb
loop
mov
and
jmp
fwait
pop
cmp
push
inc
xor
icebp
jo
repz
mov
lock
pop
adc
xor
adc
enter
shrb
mov
jnp
and
xadd
and
dec
fwait
cmc
cmp
cmp
pop
cmp
ja
out
ljmp
into
add
xchg
add
mov
test
push
and
jae
mov
pop
cli
cli
imul
out
imul
push
pop
push
lods
inc
cmc
add
fsubrs
sbb
pop
and
call
insl
jnp
loopne
pushf
inc
outsl
sbb
js
out
jp
pop
push
sub
roll
pop
mov
adc
in
mov
push
add
mov
sub
mulb
sbb
sub
adc
jae
test
inc
sbb
adc
fwait
in
add
pop
stos
push
jecxz
pop
rcl
mov
gs
lods
push
xchg
sub
orl
cmp
gs
and
out
mov
in
inc
mov
pop
lahf
iret
cld
jne
push
repz
pop
adc
into
jns
xchg
dec
xchg
push
test
nop
daa
jne
push
pop
pop
inc
std
add
mov
mov
repnz
push
xchg
bound
test
shl
adc
movsl
xchg
jecxz
imul
lods
mov
loope
cwtl
loope
or
push
mov
call
jae
jl
int3
and
dec
pop
pushf
test
shlb
adc
mov
or
leave
sbb
scas
inc
mov
cld
loopne
insl
cmp
adc
mov
pusha
repz
js
xchg
loop
push
ljmp
cmp
and
mov
dec
push
out
loopne
mov
mov
cmc
sarb
and
cld
adc
loope
test
mov
push
fwait
mov
xor
pop
mov
jns
enter
lcall
leave
fdivrl
push
mov
int3
and
adc
sbb
and
and
popf
mov
leave
mov
fwait
mov
inc
or
ljmp
lods
sbb
mov
aaa
mov
add
out
and
out
pop
int3
orl
sbb
jg
scas
icebp
pop
jl
ljmp
mov
mov
cld
test
fdivrs
dec
mov
rorb
sbbl
push
dec
rol
inc
inc
arpl
mov
inc
cli
ss
or
mov
add
cltd
je
icebp
je
outsb
inc
xchg
mov
mov
cmpsl
test
xlat
arpl
imul
hlt
inc
sbb
pop
add
sub
mov
mov
stos
iret
push
lret
out
inc
in
dec
mov
and
or
or
add
ficoms
add
mov
mov
dec
lock
js
mov
push
add
mov
dec
jmp
in
push
repz
sahf
xchg
push
xor
inc
lcall
jg
pop
mov
addl
ja
push
fs
es
push
add
sbb
mov
out
pop
jnp
leave
add
rol
jmp
push
add
fdivrs
and
xchg
cmp
aad
cmpsl
movsb
and
add
call
jp
and
mov
pop
movb
and
jl
fbstp
les
push
cs
push
add
dec
int
push
fstl
clc
adcb
rolb
iret
ficoms
cmc
iret
pop
hlt
jo
mov
repnz
mov
mov
mov
aas
add
in
aaa
dec
dec
push
inc
mov
or
aaa
sub
clc
imul
enter
scas
xor
lods
push
js
nop
jmp
cltd
jecxz
mov
in
lock
sbb
mov
mov
pop
sbb
repz
mov
popa
add
jle
stos
dec
ret
jbe
fiadds
adc
push
es
imul
int
xor
mov
pop
push
add
lret
nop
dec
jne
nop
repnz
jno
sbb
dec
push
mov
xor
xor
mov
out
leave
sbb
scas
inc
or
push
or
mov
mov
fwait
jb
cmc
jl
imul
mov
js
jmp
jmp
into
cmc
mov
test
rclb
negb
enter
es
addl
xlat
loope
in
add
pop
jne
mov
add
inc
adc
into
pushf
and
xor
xor
or
mov
xor
jle
movsb
ljmp
scas
sub
push
outsl
adc
sbb
popa
sbb
inc
loope
repnz
int
lahf
daa
aaa
jb
push
inc
in
and
or
outsb
jecxz
jns
jl
and
aas
xchg
leave
sbb
mov
dec
out
sub
sbb
xchg
or
js
add
dec
lds
mov
pop
pop
orl
lods
jnp
jge
outsl
xchg
bound
xchg
jge
addr16
xchg
xor
insl
popf
fldenv
pop
mov
out
dec
xor
inc
mov
lds
subl
jg
xchg
in
jl
pusha
adc
fstpl
xor
adc
popf
icebp
repz
dec
fwait
ja
add
push
or
mov
mov
dec
arpl
sti
mov
dec
dec
sar
xor
add
dec
popa
std
or
rolb
call
dec
cmp
mov
or
nop
cwtd
mov
das
mov
xchg
sbb
shll
cmp
data16
pop
lret
fdiv
leave
jge
add
je
mov
cmpsb
xchg
inc
fisttps
jno
and
es
cmp
jnp
xchg
nop
mov
add
fstps
pop
loop
sbb
and
gs
sbb
pop
add
mov
push
dec
iret
js
mov
repnz
out
jecxz
out
mov
mov
fwait
push
shrl
inc
sbb
pop
dec
push
mov
dec
daa
cmpsl
inc
js
shlb
push
cld
stos
jnp
popa
lret
test
test
pop
loopne
xchg
aam
sbb
gs
or
nop
call
or
cmpsl
test
pop
je
inc
mov
push
test
adc
xchg
lret
leave
or
andl
clc
mov
fs
xchg
test
jecxz
subl
cltd
dec
pushf
mov
out
rclb
imul
inc
sbb
jmp
sub
mov
mov
push
pop
mov
jl
sbb
mov
icebp
fisttpll
or
add
sarb
cltd
push
inc
ret
add
insl
mov
inc
cmpsb
cmpsl
adc
testl
and
pop
fistpl
dec
out
push
jae
pushf
std
pop
notl
fs
movsb
inc
mov
push
add
sub
mov
pushf
sub
iret
pop
mov
inc
mov
jbe
roll
fdivrs
jno
fsub
scas
sub
out
dec
rclb
lock
scas
call
gs
mov
xor
out
dec
cli
push
movsl
sbb
mov
push
movsl
xor
mov
sub
out
inc
dec
cmp
int
mov
rcr
push
clc
nop
push
inc
mov
sahf
scas
shl
inc
jo
push
xchg
push
xchg
scas
and
xlat
push
cwtl
jo
inc
mov
push
adc
push
repnz
inc
movsb
int3
in
movsb
and
fsubl
jno
pop
jp
jb
dec
sbb
les
or
call
and
mov
divb
fisttpl
adc
loopne
mov
mov
daa
inc
adc
add
cwtl
push
sub
inc
or
dec
daa
sbb
int
or
cld
ljmp
enter
add
js
push
lcall
imul
addr16
sahf
mov
mov
pop
mov
and
clc
push
mov
sarl
in
jne
push
gs
sub
out
xchg
push
call
inc
mov
lcall
ror
inc
stos
cmp
mov
lea
dec
daa
push
dec
mov
fwait
sbb
gs
and
nop
push
mov
lea
jnp
jle
inc
adc
xlat
mov
fs
cmp
xchg
shll
inc
adc
mov
lret
push
add
pushf
xlat
or
dec
push
test
test
and
popa
call
popf
out
rcrl
lahf
pop
ficoml
scas
sti
testb
in
mov
fmul
loopne
push
out
xlat
xchg
cmp
test
lock
push
add
lock
mov
addr16
popf
cltd
aam
stc
loopne
iret
nop
mov
fbstp
pop
comiss
lea
pop
fsubs
das
int
mov
adc
outsb
add
movsb
in
or
push
addr16
scas
ret
mov
mov
loop
int
ss
out
leave
jmp
cmpsb
mov
popa
lods
je
push
int3
dec
push
lret
movsb
in
sahf
push
insl
lret
adc
icebp
aam
cwtl
inc
sahf
jae
dec
mov
dec
insl
pop
shll
jne
pop
and
add
shr
push
inc
jmp
push
mov
dec
mov
enter
rcr
or
mov
mov
xchg
scas
xchg
in
scas
or
push
outsl
test
orl
int3
cmp
in
cmpsb
scas
stos
adc
rcll
test
ret
les
add
jg
jg
inc
shll
xchg
pop
sub
stos
or
nop
cltd
dec
pop
jl
mov
aad
ret
shrb
fdiv
sbb
aad
mov
iret
stos
cmpsb
mov
int
out
jbe
sbb
pop
popf
lret
es
push
je
sbb
jno
sbb
pop
sub
adc
jmp
or
scas
ret
cwtl
jb
xor
push
or
mov
push
inc
adc
jl
sub
push
cwtl
sub
popl
outsl
clc
push
mov
sbb
dec
das
mov
jo
and
insl
mov
push
popa
push
lea
inc
xchg
dec
mov
cmp
je
popa
xchg
imul
jmp
cwtl
mov
fimuls
fidivrl
mov
and
jne
lcall
push
jp
loopne
in
sub
add
fcomp
jne
or
orb
mov
push
mov
lock
or
das
stos
lcall
aas
out
mov
icebp
hlt
xor
cmp
sub
jp
inc
scas
xor
sbb
mov
mov
loope
aaa
test
jmp
fisubl
daa
sbb
mov
cs
xchg
fnop
push
adc
repnz
testb
sti
pop
pushf
xor
sub
xlat
aad
lods
mov
xor
stos
and
pop
push
inc
stc
mov
push
jb
ja
mov
mov
jmp
dec
inc
xchg
dec
and
ret
inc
add
cmp
sub
clc
cwtl
push
cmp
clc
dec
sbb
xor
hlt
adc
xchg
or
lahf
cmp
rorb
mov
sbb
xor
into
divb
data16
push
cmpsb
out
pop
pop
lods
jmp
pop
cwtl
loop
aaa
das
mov
adc
adc
xor
jecxz
jo
inc
push
in
sbb
pushf
test
push
or
xchg
add
leave
cmp
and
mov
push
xchg
lahf
dec
insl
in
shlb
out
mov
xor
cli
mov
dec
sub
arpl
int
clc
mul
inc
das
pop
sub
mov
fnstenv
fistpll
mov
scas
and
mov
add
sbb
inc
mov
roll
xchg
dec
pushf
jl
loopne
jmp
data16
xor
iret
jl
clc
cld
jl
in
jmp
mov
lcall
cli
dec
fwait
xor
push
cmpsb
pop
int
add
movsl
inc
jno
fucomp
mov
cmc
inc
push
pop
xchg
repnz
mov
sub
loop
mov
sbb
xchg
outsl
and
xchg
dec
iret
mov
sbbl
mov
lahf
pusha
stc
in
xchg
sarl
scas
add
jnp
rorb
ret
icebp
scas
loop
das
cmc
lds
fisttpl
pop
pop
mov
xchg
mov
mov
cs
test
xchg
dec
sub
lahf
adc
jecxz
add
xchg
loop
xchg
dec
or
mov
aad
sub
mov
das
xchg
push
ja
les
cwtl
sbbb
mov
mov
popf
dec
push
adc
ja
pushf
jno
in
in
and
lock
mov
test
movsl
dec
cmp
cli
ucomiss
inc
jnp
fs
lock
mov
out
jno
cmp
aaa
push
xor
mov
inc
arpl
jmp
xchg
mulb
aad
cli
shlb
dec
testb
add
xchg
xchg
adc
pop
imul
mov
add
lods
call
xor
adc
and
cli
adc
jg
mov
lcall
jmp
enter
fcompl
push
test
inc
lods
mov
lcall
dec
in
mov
pusha
sbb
rclb
xorb
lea
adc
xor
je
lds
lods
test
push
fldcw
xor
test
out
into
fs
sbb
cmpsl
sbb
scas
lea
popf
cmp
dec
xor
dec
ror
sahf
adc
sub
jecxz
add
or
pop
cmpsl
jmp
or
stc
outsb
scas
mov
loopne
mov
cmp
sub
push
adc
adc
sbb
inc
dec
fwait
pop
push
mov
and
xor
pop
imul
dec
or
lea
dec
inc
lock
rcrb
vpmacssdql
sbb
and
outsb
sub
sub
mov
jae
in
test
lea
jmp
xchg
cli
cmp
pop
adc
subb
push
pop
dec
aas
data16
cltd
out
xchg
adcl
rolb
and
mov
cmc
cmp
lds
loop
pop
stos
inc
movl
jge
mov
push
hlt
or
cmp
add
mov
dec
cmp
xchg
fldcw
sub
insb
xor
and
and
and
mov
lods
mov
orb
loopne
or
mov
xchg
jns
sbb
jbe
aaa
mov
adc
lds
xchg
pop
xor
mov
jmp
stos
ds
test
add
fcoml
push
sub
hlt
test
fcmovnbe
jle
fs
in
nop
xchg
xchg
cs
lret
push
std
out
pop
insl
xchg
cmpsb
bound
int3
sbb
adc
cmp
and
mov
int
add
inc
push
stc
jle
mov
cmp
movsl
jmp
sbb
jg
cmpsl
xchg
add
dec
gs
daa
fidivl
mul
sbb
mov
fcom
das
mov
lds
and
movsb
push
jbe
jecxz
repz
inc
xor
or
movsb
fmull
stos
sbb
mov
rcrb
mov
inc
push
sbb
ds
mov
iret
out
pop
cmpsl
mov
dec
xlat
adc
fists
push
dec
cmp
dec
pop
movsl
or
inc
test
loop
out
cld
fiaddl
push
ret
and
push
inc
add
lds
clc
add
js
mov
lret
sti
push
add
pop
leave
enter
gs
inc
lds
xor
sub
arpl
sub
push
sub
push
xchg
push
int
push
push
jbe
push
pop
xchg
jle
lds
in
loopne
out
or
lret
mov
repnz
push
frstor
idivl
mov
clc
mov
js
repnz
enter
pop
jns
xorl
push
shrb
add
imul
fisttpl
push
inc
ror
loope
scas
out
pop
leave
arpl
push
jle
je
fdivp
mov
sbb
cld
cmp
pop
xchg
cmpl
xchg
lods
mov
push
pop
sahf
jge
out
outsl
or
add
xor
setae
mov
adc
mov
cmp
and
sti
push
cltd
sahf
sub
mov
pop
or
iret
ds
subl
scas
dec
out
sbb
ret
pop
cld
push
fldt
cwtl
lea
lcall
inc
clc
cmpsb
pop
xchg
call
ja
or
add
push
mov
xor
inc
pushf
jnp
and
xchg
gs
or
into
popa
adc
push
sub
push
imul
add
cli
jae
mov
ficompl
xchg
sbb
imul
cmp
or
das
subb
out
adc
iret
ret
pop
data16
ror
std
jmp
clc
mov
or
movsb
mov
xor
dec
icebp
fistpll
jmp
dec
loop
aad
jns
lahf
cmp
jg
dec
xor
pop
les
adc
dec
lods
jne
cld
or
cmpsb
mov
ss
stc
pop
lahf
mov
divl
pop
dec
pop
dec
fucom
popa
or
loope
cmpsl
cmp
out
inc
mov
inc
mov
mov
clc
push
lds
inc
add
in
jae
rclb
ret
out
mov
mov
cs
jle
xor
popa
lret
pop
push
jmp
lcall
ret
pusha
out
and
jecxz
sti
sbb
jle
pop
test
je
sbb
bnd
add
push
jbe
shlb
adc
xchg
dec
mov
mov
cmpsb
mov
adc
or
icebp
shl
daa
dec
inc
dec
out
cld
push
cltd
sub
and
and
lods
mov
and
aam
pop
mov
jae
xchg
xor
add
dec
sbb
jmp
or
adc
push
mov
lea
dec
in
rcll
sahf
call
cs
add
jg
jne
ret
xor
pop
xchg
and
xor
jb
and
mov
inc
fsubr
ror
or
test
and
adc
mov
stos
lods
in
je
jb
loop
dec
jae
or
cmpsl
cmp
add
add
push
mov
adcl
xor
jle
cld
shlb
pusha
and
push
data16
adc
sbb
jmp
adc
jg
xchg
out
pusha
nop
es
lds
ficompl
sub
xor
repz
jmp
xchg
jbe
jle
cmpsb
adc
inc
jge
imul
pop
ljmp
mov
jg
or
mov
or
inc
add
push
mov
sub
aas
call
dec
loopne
in
cmc
jno
fisubl
and
jl
adc
sbb
dec
xor
mov
cmp
mov
das
jns
or
rolb
int3
addr16
arpl
clc
or
sbb
test
pusha
shr
push
push
stos
idivl
lock
in
jb
imul
into
pop
lds
jp
adc
cli
cmp
push
roll
mov
inc
test
push
jmp
jne
fistpll
lea
addr16
xor
push
xor
imul
xor
jne
fwait
xor
aad
es
js
clc
dec
ds
mov
push
jmp
icebp
adc
loope
cld
or
cmp
mov
xlat
and
lods
out
mov
mov
lods
mov
fucomi
add
mov
pop
ja
sahf
mov
bound
ss
cmpsb
inc
test
mov
enter
loopne
mov
lods
pop
test
insl
adc
and
enter
xorb
xorl
mov
cwtl
sbb
or
js
mov
ficoml
or
scas
test
fildl
xchg
cmp
pop
cli
or
or
sub
sahf
jmp
sub
mov
cmp
pushf
mov
jl
xchg
dec
add
lock
sti
cmpsl
mov
fists
push
mov
xor
test
xchg
popf
dec
mov
inc
inc
je
rorl
mov
std
mov
mov
push
test
popf
jno
jp
outsb
andb
pop
ret
test
jnp
mov
incl
dec
mov
inc
addr16
mov
daa
out
push
sbb
sbb
sbb
cmp
xchg
popa
movsb
pop
lock
jg
rcrb
jbe
cwtl
imul
cmp
cmp
stos
in
andb
cmpsb
jmp
call
add
roll
js
or
fcoms
sbb
mov
mov
cmp
jbe
insb
and
jle
test
pop
push
mov
ljmp
jo
call
aad
lods
je
into
sti
jge
xlat
sub
stos
dec
ret
in
cs
pop
test
xchg
sbb
adcl
das
push
cmc
mov
es
lcall
xchg
je
mov
mov
loope
fistpl
test
cmp
mov
xchg
pop
pop
sub
loop
pop
dec
cmpsl
sbb
xchg
dec
sbb
or
imul
xor
dec
sti
dec
adc
std
mov
sbbl
cld
xor
repz
je
mov
add
pusha
inc
ljmp
mov
pop
aam
rcl
roll
push
push
xchg
jns
movsl
repz
xchg
addr16
or
in
fdivp
fdivr
sub
lock
pushw
into
dec
dec
jne
sbb
lret
arpl
mov
mov
scas
aas
cmp
in
es
or
pop
jle
push
addl
mov
or
add
cmp
clc
jb
inc
int
loope
lock
xchg
xor
xchg
mov
and
xchg
loope
sahf
jmp
mov
mov
out
jge
jmp
sub
xchg
pop
add
adc
adc
test
push
mov
idivl
fmul
je
jns
mov
push
fcoml
or
rcl
loopne
and
lahf
and
xchg
xchg
lea
jmp
add
or
cld
push
cld
xchg
xchg
xchg
dec
xlat
es
adc
jg
mov
xchg
outsb
pop
add
mov
shlb
add
or
repnz
inc
les
jne
fldl
cmc
sub
pop
and
and
leave
mov
dec
pop
inc
pop
mov
add
push
jae
adc
push
leave
out
cmp
ret
push
adc
add
cmp
mov
lahf
adc
sbb
inc
xchg
movsl
push
imul
lods
fildll
stc
loopne
dec
mov
mov
pop
and
xchg
adc
repnz
xor
xchg
push
jns
xor
pop
out
pop
cmp
repnz
das
jle
jge
lret
mov
pop
int
mov
mov
stc
out
into
div
sub
lea
addb
movsl
xchg
stos
ffree
lcall
push
lods
fsubrs
and
loop
insl
cwtl
loopne
mov
or
fwait
pushf
sbb
cmp
cmp
enter
icebp
ret
push
shlb
pop
xor
jge
fmuls
es
adc
hlt
and
adc
testl
rcl
jbe
xchg
mov
dec
insb
lahf
cs
call
pop
sbb
push
xchg
xchg
cmp
xchg
into
std
xor
cmp
sbb
push
andb
xlat
aam
add
xor
das
int3
sarb
std
xchg
ds
cwtl
outsl
dec
arpl
sub
out
dec
sbb
xchg
jle
xchg
push
jne
pop
cmpl
cmp
jbe
jne
mov
jns
mov
xor
add
adc
cmp
ja
xchg
sub
mov
jo
mov
mov
or
and
daa
jl
sbb
mov
jne
or
xchg
in
aaa
imulb
add
fstl
xor
add
or
push
jae
movsb
cltd
ret
add
test
push
push
loop
ret
popa
outsl
push
cs
ss
call
adc
ficoms
ret
enter
out
ret
std
sbb
push
popa
fimuls
pop
dec
jmp
cmpsl
push
roll
cmp
xchg
xchg
mov
and
pop
icebp
push
out
adc
and
adc
cmp
into
mov
pop
jno
xchg
cltd
pop
popa
jae
xor
repnz
and
mov
push
imul
lahf
nop
inc
hlt
sub
xor
test
int3
pop
cmc
adc
pop
shlb
mov
mov
dec
push
fistpll
ja
jg
test
pop
sub
cli
inc
mov
out
mov
leave
sbb
lahf
xor
dec
aam
je
in
sbb
cwtl
div
movb
jo
outsl
pop
cmp
stc
iret
cli
push
scas
lcall
lods
or
jo
aad
jecxz
jno
add
sti
xchg
jecxz
mov
pop
add
xchg
mov
push
into
add
ja
jno
pop
cmp
movsb
into
push
push
sbb
movl
mov
test
mov
fidivs
inc
and
mov
lret
or
daa
ja
inc
and
cli
or
cmp
pop
popf
sbb
mov
dec
pop
cld
dec
mov
outsl
lret
fdivs
sub
hlt
pop
sub
lea
fldcw
add
pop
shrl
lds
test
jp
mov
mov
mov
inc
mov
pop
and
pop
loope
mov
popa
popf
sub
sbb
inc
fwait
out
loope
push
rorb
sbb
cli
out
test
aad
push
mov
cmp
pusha
sbb
cmc
jecxz
stos
pop
inc
addr16
fsubrl
cmp
adc
or
cmp
mov
pop
push
mov
jnp
mov
divl
out
fimull
push
movsl
lods
pop
pop
ficompl
das
hlt
pop
sub
or
pop
rcrl
push
mov
mov
cmpsb
and
xor
nop
jp
mov
enter
out
push
push
and
std
sub
lret
mov
movsb
sbb
mov
jne
push
xor
dec
aam
jecxz
icebp
sbb
cmp
add
mov
pushf
mov
outsb
out
push
and
les
or
dec
std
call
notb
sbb
jne
cltd
cwtl
sbb
sysexit
mov
cmp
rcrl
pop
in
out
stc
xchg
jle
dec
fistps
std
mov
cwtl
into
pusha
and
mov
fldt
jns
fwait
and
sub
jnp
in
sub
or
stc
pop
adc
ja
ljmp
movsl
mov
pop
int3
std
jae
leave
popf
inc
or
notb
iret
inc
mov
push
xchg
dec
push
das
add
mov
stos
aad
push
int3
ret
mov
out
add
push
pop
sub
pop
lock
or
jns
fs
push
cs
in
fists
gs
xchg
xor
sub
mov
push
sbb
inc
loop
add
aad
push
sbb
adc
test
dec
das
mov
insl
bound
rol
ficoml
repz
mov
pop
push
mov
loope
cwtl
xchg
popf
imul
pop
leave
cmp
or
xchg
out
ss
adc
dec
sbb
cld
fldl
sub
in
xchg
push
cmpsl
or
cmp
mov
in
aaa
fisubs
mov
add
xor
ljmp
pop
mov
cmpsb
inc
sbb
xor
add
test
mov
sub
data16
or
and
ja
nop
and
mov
cwtl
insb
clc
push
call
push
adcl
pop
sub
cld
in
mov
test
dec
mov
sarb
into
nop
icebp
in
mov
pop
push
ds
out
lahf
mov
int3
subl
jo
and
rorl
out
push
inc
repnz
rcll
pop
ljmp
mov
cld
adc
insb
and
sub
rorb
leave
sub
mov
push
rcrb
incl
add
neg
adcb
popl
sub
cmp
cmp
pop
add
cmp
mov
cmp
add
ja
mov
addr16
pop
or
and
arpl
hlt
std
ja
pop
cmp
pop
mov
push
dec
mov
pop
int3
es
in
testb
adc
pop
jle
lea
xlat
or
pop
mov
outsb
inc
sbb
jo
push
xchg
xchg
pop
push
das
iret
insb
cli
mov
iret
jmp
pop
jp
push
in
jae
add
stos
sub
pop
nop
dec
or
jb
cld
lret
fcmovnb
push
icebp
inc
xchg
sbb
std
push
pop
roll
sbb
xchg
aaa
jp
mov
cmp
mov
test
and
cmp
in
and
cltd
pop
cli
mov
seta
mov
adc
push
stos
aam
outsb
lret
adc
pop
dec
scas
fadd
xchg
sub
ficoms
pop
mov
pop
dec
movsl
loope
gs
jge
int
mov
add
xlat
or
adc
jo
es
mov
aad
inc
push
das
leave
sbbl
fsubp
dec
aam
lods
push
dec
add
or
ja
push
lea
stc
mov
loopne
dec
loopne
lds
sub
xchg
push
addr16
xchg
es
sbb
push
aad
pop
cs
std
or
push
loop
inc
xchg
jns
push
sqrtps
pop
mov
insb
pop
xchg
arpl
imul
add
sub
cmpsb
lea
rorl
aad
xor
test
outsb
xchg
adc
push
in
sub
or
aad
dec
dec
cs
inc
loop
roll
ret
sbb
andb
das
in
aam
popw
pop
xchg
sti
or
mov
mov
xchg
sbb
sti
pusha
mov
es
mov
loop
mov
sbb
stos
push
aam
pusha
pop
in
adc
xlat
jnp
hlt
mov
out
mov
add
push
pop
lcall
cmpl
mov
pop
jge
adc
subb
div
sbb
imul
mov
dec
shlb
enter
mov
rol
pop
mov
lret
xchg
cmpsb
sarb
add
add
or
mov
xor
mov
mov
xchg
hlt
adc
mov
fidivs
mov
xchg
or
mov
dec
ljmp
and
jp
je
hlt
cmp
or
fdivp
pop
push
out
pop
inc
je
sbb
cmp
push
jmp
cmp
cmp
lahf
mov
negl
pop
sub
cld
fisubl
pop
jb
int3
scas
sub
icebp
cmpsb
iret
inc
xchg
cs
dec
jbe
sbb
fistps
rorl
push
pop
dec
shlb
add
pop
test
xchg
dec
push
jmp
out
lcall
fisubs
pop
in
push
jne
ficomps
hlt
or
sbb
mov
call
adc
add
dec
gs
mov
xchg
cmp
lods
fwait
mov
or
xor
and
neg
iret
add
adc
dec
inc
div
addr16
aas
pop
mov
mov
bt
add
adc
xchg
push
rorb
cltd
inc
pushf
push
mov
shlb
jl
movb
mov
iret
out
cli
dec
pop
nop
cmc
xchg
cmpl
inc
shlb
xlat
jmp
arpl
fsubs
clc
lds
push
inc
add
sbb
int3
andb
inc
sbb
movsl
ret
xor
jle
out
sub
lcall
in
xchg
sub
shl
inc
and
adc
loop
popa
mov
or
out
jbe
push
lea
jp
sub
cmp
aam
jge
push
lret
sbb
fmul
test
xchg
sub
fsts
xor
in
clc
or
or
out
fstpl
lcall
inc
mov
lret
frstor
ret
orl
nop
inc
inc
push
and
lods
dec
mov
or
aam
push
test
sub
xchg
jp
push
sub
jle
xchg
sbbl
cmp
pop
fstps
add
ljmp
repnz
inc
push
add
adc
sbb
mov
xlat
popa
cld
xor
fs
mov
test
pop
push
lea
adc
mov
gs
notl
fcmovb
dec
lcall
popf
fldcw
call
lret
cmpl
or
sub
negb
aad
push
call
scas
lds
shlb
mov
stos
iret
aas
outsb
cmpsl
cmp
inc
mov
add
fimull
out
imull
mov
cmp
sub
and
push
xor
xchg
in
inc
push
icebp
mov
mov
insl
sbb
xlat
lock
mov
mov
xchg
cmp
push
jbe
or
stc
push
xor
or
mov
outsl
shll
je
cmpsb
test
call
popl
add
sub
lods
dec
aad
mov
xchg
iret
rcrb
pop
jg
push
movsl
pop
dec
mov
dec
and
pop
pusha
or
adc
shrb
xor
jg
mov
repnz
ret
fisttps
lods
inc
mov
pop
popf
out
pop
stc
pop
mov
mov
scas
xchg
pop
xor
lods
push
pop
sub
gs
or
rorb
cli
pop
enter
loopne
sbb
or
js
ret
in
test
es
subl
or
cmp
push
into
stc
aam
enter
gs
mul
loop
push
movsb
cmp
mov
iret
out
dec
sbb
pop
xor
pop
outsl
lcall
inc
ret
aaa
daa
pop
fadd
lret
dec
jo
adc
stc
or
push
fs
xchg
jns
and
stos
test
inc
xchg
adc
test
mov
adc
mov
jns
mov
or
addr16
out
and
push
and
repz
xor
push
movb
push
arpl
rcll
dec
pop
sarb
int
mov
add
xchg
xor
pop
sub
loope
push
or
push
outsl
pushf
imull
cmpsb
aaa
adc
push
rol
xchg
jns
inc
or
mov
adc
rorl
cltd
cmc
mov
scas
adc
das
jge
pop
add
iret
xchg
into
enter
sbb
bound
loopne
sbb
sbbl
inc
testb
or
inc
clc
mov
es
pusha
push
ljmp
add
ret
in
push
cmp
pop
push
lods
insl
adc
sbbl
push
add
cmc
bound
mov
xor
xor
jne
stos
in
mov
pusha
aas
cmp
ds
es
cmpsl
jg
pop
xor
and
jp
sti
leave
sbb
jae
out
adc
inc
fld
ret
adc
daa
ja
mov
les
pusha
je
jg
adc
insl
add
adcb
mov
insl
out
xchg
icebp
mov
imulb
ret
and
ficomps
jae
pop
dec
xchg
mov
pop
jp
or
pop
or
lcall
popf
or
ficomps
in
lret
sbb
loopne
xchg
insl
insb
add
xchg
pop
call
ret
loopne
out
xchg
mov
int
je
cltd
iret
fistpll
pop
outsb
adc
lret
mov
mov
andb
pop
cmc
arpl
imul
into
movntq
je
xor
ret
fstpt
enter
and
mov
xor
push
add
and
mov
mov
pop
push
repnz
xor
sub
ja
aaa
jb
cmp
stos
sbb
xchg
jmp
cmp
pusha
xchg
mov
push
inc
sbb
or
nop
int3
movsb
push
movsl
inc
int3
in
push
jp
in
je
cmp
inc
fs
mov
adc
test
mov
repz
fidivs
lods
jne
lods
jmp
sbb
mov
loopne
stc
ds
push
or
es
push
push
mov
insb
xor
ja
repnz
inc
mov
sbb
in
mov
in
sbb
test
xor
lods
mov
jp
fadds
mov
push
lds
xchg
cmc
stc
pop
int
inc
jp
push
loope
ud1
out
inc
call
sub
aad
xchg
mov
jge
int
aaa
fcmovne
add
sahf
sub
cwtl
addr16
out
add
xor
or
mov
add
aam
mov
or
out
pop
fcompl
pusha
sbb
dec
cwtl
lahf
add
pop
adc
mov
ret
push
jbe
roll
xchg
je
dec
sarb
sahf
repnz
repz
pop
inc
outsb
add
cmp
cltd
mov
ficoms
popa
and
sbb
sbb
movsl
cmp
xor
jno
shrb
push
ret
lahf
cmp
xchg
push
and
pop
cwtl
dec
test
pop
mov
fidivrl
insl
loop
test
push
mov
push
mov
out
sbb
jge
testl
movsb
sbb
add
mov
mov
sub
adc
pop
xchg
cli
xchg
stos
lret
aaa
sub
gs
fmull
shlb
pop
xchg
or
lock
jmp
ss
les
and
scas
push
push
nop
xchg
pusha
cmc
jno
sub
dec
mov
push
andl
in
push
stos
mov
sbb
int3
push
scas
mov
aam
test
push
push
and
dec
cs
cwtl
cmc
inc
xchg
sub
aad
imull
iret
mov
imul
jno
daa
add
ss
into
mov
sub
dec
mov
mov
aam
mov
jne
and
jb
fs
jno
iret
scas
pushf
fucomi
cmp
mov
push
int
dec
xor
jae
jne
inc
in
fisttps
fst
movsl
cmc
jle
nop
push
ret
or
jmp
in
mov
xchg
int
mov
mov
call
pop
sub
xor
mov
mov
sbb
ret
dec
xor
filds
mov
mov
das
lods
mov
jmp
stos
iret
cmpl
push
pop
pop
fists
cltd
push
aam
testl
lock
adc
cmpsb
mov
lret
dec
gs
cltd
adc
adc
push
outsl
push
mov
int
loope
mov
mov
addr16
subb
std
dec
and
js
pop
sti
into
mov
xchg
cmpsl
inc
int3
add
dec
clc
aam
push
pop
sub
sub
xlat
test
cmp
repz
bound
leave
repz
mov
negb
mov
mov
loopne
aaa
cld
out
cmp
shl
xor
test
mov
push
adc
mov
cmpsb
jnp
sbb
jnp
repnz
sti
jns
inc
leave
insl
mov
ds
sub
test
mov
adc
popf
mov
inc
mov
dec
sub
adc
push
lods
mov
addr16
std
dec
and
fidivs
xchg
int3
arpl
adc
pop
or
and
icebp
insl
fadds
pop
add
ljmp
loopne
mov
and
int
pushf
int3
out
bound
shr
aas
adc
jb
pop
pusha
test
mov
pushl
pop
mov
outsl
outsl
mov
or
fdivr
sub
add
cmc
cmpb
sbb
outsb
mov
shll
push
loopne
out
pusha
or
or
jae
clc
fisubrs
es
jmp
ds
cmpsb
test
pop
aaa
addr16
pop
add
ret
push
repnz
fidivrs
push
mov
dec
loope
mov
iret
push
add
mov
pop
scas
jle
or
mov
dec
jno
dec
push
mov
add
push
mov
sbb
cmpsl
xchg
sbb
js
mov
adc
dec
or
jp
outsb
push
push
and
pop
stc
lds
test
ds
seto
push
leave
out
int3
ss
xchg
sarb
aas
js
int3
xchg
pop
cmpsb
in
and
sub
xchg
imul
adc
push
loopne
add
jge
loope
dec
and
mov
add
jb
out
shll
mov
ret
push
pop
sbb
loopne
cmp
mov
push
test
xchg
je
scas
insb
mov
add
add
mov
mov
test
dec
and
ja
and
repz
mov
repz
cmc
pop
fildl
inc
inc
mov
inc
and
loopne
shll
jl
enter
ds
mov
lea
arpl
sbb
outsl
pop
popa
loop
sahf
or
adc
sub
out
cs
int3
loope
mov
jbe
mov
dec
imulb
pop
jne
xor
ljmp
push
cmp
mov
shll
dec
repnz
or
sub
ja
dec
jle
or
mov
addr16
adc
xor
jae
mov
dec
add
jg
adcb
xchg
nop
or
jl
cmp
jne
jge
out
fisubrl
sub
xchg
push
fwait
pop
sub
inc
mov
inc
ffree
inc
pop
pop
jne
popf
out
push
sbb
adc
xor
lea
or
call
push
push
mov
out
add
pop
fisubl
pop
mov
dec
mov
xchg
mull
aam
in
mov
lret
cmpsb
daa
je
or
push
lret
enter
daa
xchg
imul
insb
inc
push
fists
adc
sbb
or
add
push
lcall
mov
in
cltd
bound
jmp
jb
adc
movsb
dec
insb
int
nop
test
mov
pop
push
pop
adc
add
mov
fnsave
sti
sbb
fnsave
pop
and
xchg
into
fs
xor
lods
adcb
stos
das
lahf
fisubrs
push
cmpl
sbb
xchg
pusha
data16
cmpsl
add
adc
inc
adc
jno
ja
push
mov
and
int
push
cmp
imulb
sbb
test
das
hlt
push
int3
mov
pusha
sbb
inc
mov
loope
mov
jle
popa
fnstcw
icebp
mov
mov
push
jno
shll
jns
movl
mov
scas
xor
mov
ret
cmp
push
mov
sti
inc
rolb
sub
ret
and
out
out
cwtl
pop
rorb
mov
and
repnz
fwait
jb
bnd
xchg
inc
cmp
push
adc
incb
xchg
cwtl
mov
xchg
int3
xor
pusha
jmp
mov
or
cli
and
cld
push
lods
jo
fdivs
sbb
pop
shr
shll
fxch
inc
dec
inc
int3
sahf
test
mov
cmp
push
fidivs
idivb
adc
push
jns
cld
hlt
push
sbb
or
sub
ljmp
xchg
xor
xchg
aad
jb
dec
mov
adc
bound
rclb
or
outsb
inc
xor
sub
xor
pop
xor
and
sub
lods
out
out
jle
lret
cmp
daa
jnp
sub
inc
xor
mov
stos
cmc
mov
fdivl
pop
outsb
xchg
das
add
testb
icebp
inc
shrl
cmp
cld
mov
sub
mov
jg
xchg
mov
jmp
mov
jae
shlb
std
inc
negb
fsubl
adc
divb
int
ds
pushf
outsb
mov
cltd
pop
mov
push
sti
sub
addr16
mov
xor
scas
inc
pusha
ss
fwait
bound
maskmovq
divl
jg
add
sbb
fwait
add
bound
out
ret
or
sbb
xorb
dec
cmpl
cmp
cmp
les
add
pop
cwtl
pop
jae
insb
in
mov
sahf
mov
dec
cmp
mov
pop
inc
daa
push
stos
cmp
fwait
std
jp
js
sti
mov
dec
aas
jl
mov
sub
mov
mov
mov
mov
sub
mov
ret
inc
and
inc
add
inc
sahf
add
and
cmp
jecxz
mov
gs
push
cmp
shll
jl
movsl
mov
jno
into
lret
cs
inc
and
sbb
mov
sub
insb
roll
iret
xchg
clc
xor
hlt
stc
je
xchg
ljmp
stos
and
dec
call
shl
ds
cmp
std
fidivs
incb
ja
xchg
inc
sub
lret
dec
and
inc
and
push
mov
push
insb
pop
test
test
rcrl
repnz
js
addl
pop
in
jg
inc
sbb
add
xchg
clc
in
mov
fstl
loope
sub
cmc
xlat
add
add
xor
loopne
scas
lea
sub
cmp
daa
in
pop
ds
arpl
out
sahf
cld
fistpl
mov
aas
cltd
inc
jbe
xlat
jge
mov
sbb
jnp
out
fwait
lahf
and
xchg
and
lahf
sbb
shrb
sarb
inc
fstl
pop
lock
xchg
lcall
pop
and
and
mov
mov
push
xchg
cmpsb
mov
aas
xchg
test
out
dec
pop
iret
clc
sub
push
xchg
icebp
mov
cmp
outsl
and
stc
jae
cli
pop
pop
mov
dec
push
or
pop
push
scas
dec
js
icebp
jg
mov
cltd
fcompl
std
cmp
sub
mov
test
or
add
pop
ljmp
lahf
cmp
in
push
mov
ret
loope
and
dec
das
push
and
pop
lods
inc
fisttpl
xor
xor
aaa
pop
lock
pop
pop
aam
dec
xor
sbb
das
test
jae
push
xchg
adc
lods
sub
pushf
dec
lds
jge
loop
lret
flds
adc
sub
jge
xor
sbb
xor
push
out
push
in
in
fldenv
scas
xchg
pop
push
xlat
push
xor
into
xchg
or
dec
pop
pop
fcmove
cmp
pop
iret
cs
in
cmp
int3
stos
gs
or
cli
xor
jbe
arpl
jo
mov
ret
inc
in
scas
ljmp
inc
push
ja
sbb
int3
imul
push
or
sahf
cmc
or
add
xor
ja
push
lret
prefetchnta
repnz
in
adc
cmp
inc
lea
xchg
lock
scas
pop
pop
outsl
add
shlb
testb
push
or
cs
ret
mov
or
int
or
loop
imul
inc
mov
shrl
data16
mov
or
dec
jae
or
scas
test
jno
push
push
shll
daa
arpl
jae
adc
add
mov
pop
jae
ljmp
out
insl
test
insb
xchg
mov
repnz
aaa
fnsave
ud1
mov
xchg
cmp
out
lds
cli
les
jo
lea
adc
or
je
insb
inc
dec
mov
stos
lods
inc
inc
mov
dec
into
loopne
out
jp
jo
icebp
cltd
mov
mov
bound
mov
jle
dec
stos
cmp
pop
gs
js
sbb
mov
pop
sahf
data16
or
fldenv
xor
ljmp
mov
xlat
cmp
cmc
lods
std
sahf
sti
xchg
lea
jo
sbbb
mov
cmc
andb
jne
cmc
mov
pop
jp
dec
add
mov
movsl
imul
xchg
push
ffree
arpl
fcoms
add
xchg
push
inc
cmp
pop
mov
insb
push
push
mov
test
les
dec
and
xchg
sbb
rcr
into
ficomps
cmp
push
lods
pop
ret
xchg
or
xor
jle
cwtl
push
cmp
push
xor
mov
das
jg
jecxz
aaa
adc
and
bound
stos
call
sti
inc
add
mov
ficomps
stos
loopne
mov
in
jge
sbb
or
jecxz
push
lcall
mov
enter
subl
cltd
xchg
add
sub
push
mov
ds
lret
sbb
xor
test
push
add
mov
inc
sbb
or
mov
cmp
jp
adc
shll
jns
xor
mov
lahf
jle
inc
or
xor
in
add
arpl
nop
push
push
sub
sub
xlat
xchg
inc
cmpsl
adc
test
sub
mov
shll
sbb
push
push
inc
fdecstp
stc
mov
cmp
dec
inc
lods
hlt
and
outsb
cmp
add
jb
repnz
shll
dec
push
sub
pushf
insb
scas
sub
into
dec
adcl
lock
mov
sub
and
cmp
and
xchg
adc
jg
ja
shll
fisttpll
in
sub
stos
sbb
cld
mov
sbb
jae
xchg
sbb
xchg
add
imul
add
call
inc
dec
or
es
jg
mov
scas
lcall
loopne
mov
push
mov
stos
mov
test
xor
je
lock
and
jnp
repz
cli
repnz
inc
push
xlat
icebp
lock
sahf
jne
xchg
icebp
movsl
clc
mov
or
adc
fcmovbe
xchg
aam
lcall
or
xor
into
fadds
pop
arpl
xchg
es
stc
rol
subb
out
out
push
mov
ret
sub
cli
mov
stos
mul
imull
sbb
cli
add
jp
ret
fbstp
sbb
call
xchg
lds
ja
pusha
dec
adc
in
out
xchg
and
jb
ret
loopne
clc
mov
popf
enter
and
mov
movsl
addb
enter
xchg
sbb
adc
scas
dec
mov
jl
fwait
xchg
dec
hlt
or
cmp
mov
mov
add
pop
mov
cmp
cltd
fnstcw
movsl
pop
jge
cli
rorl
and
push
xchg
loop
jae
dec
cmp
fcomp
bound
repz
outsl
rclb
gs
mov
inc
xorb
jae
pop
sbb
cwtl
stos
mov
pop
jb
mov
ds
push
add
mov
stos
fsub
dec
xchg
movsb
or
fnstcw
addr16
mov
shl
sbb
and
cmp
and
jecxz
or
in
mov
dec
pop
push
adc
sbb
cmpsb
inc
push
mov
inc
mov
xor
jle
or
mov
and
and
hlt
subl
add
repz
push
sub
adc
fwait
inc
push
cmp
cli
das
cmpsb
xchg
ret
cmpsb
xor
pop
inc
xor
push
xchg
adc
aam
sbb
not
dec
or
stos
sbb
int3
dec
ja
xchg
sub
mov
sub
or
mov
mov
in
in
das
jecxz
stos
mov
ja
aas
dec
int3
add
imul
push
rcrl
pop
lods
lret
and
mov
lcall
xor
hlt
mov
popf
xchg
dec
push
xor
aas
xchg
sti
call
loopne
scas
sub
call
in
dec
mov
pop
imul
test
test
mov
mov
push
stos
incl
jmp
jb
test
inc
mov
lahf
add
xchg
insb
jle
xchg
cmp
outsb
fwait
push
and
addr16
or
rol
dec
psubb
push
or
jmp
pop
enter
lret
xchg
mov
popa
sahf
adc
lahf
stos
push
fcoml
mov
and
cmp
cld
ja
jbe
push
pop
inc
daa
xchg
cmp
xchg
ret
pop
mov
cmpsl
dec
stos
push
mov
or
mov
pushf
insb
mov
or
mov
cmp
lcall
lahf
cmp
inc
dec
jb
mov
aam
sbb
pop
lret
pop
jle
fsubs
fidivs
mull
add
xchg
sub
test
insl
lods
stos
ret
add
fcmovnu
negl
mov
lods
push
mov
or
fwait
mov
jmp
adc
test
cltd
lea
push
stos
mov
or
xor
add
mov
repnz
repnz
loopne
jae
add
pushf
and
jl
xorl
mov
mov
pushf
das
js
js
stos
adc
jb
jl
fmuls
dec
inc
adc
inc
inc
mov
adc
loopne
adc
shll
add
sub
out
test
stos
mov
xchg
lahf
ss
cmp
iret
or
popa
ja
xchg
cmc
mov
js
xor
cwtl
mov
pop
push
mov
mov
cmp
jbe
cmp
jg
push
in
int3
add
mov
dec
mov
mov
int3
rorb
xor
imul
into
jmp
cs
jge
add
add
push
mov
pop
popa
aas
cmpsb
imul
movsb
test
dec
dec
sbb
aaa
sbb
sarl
jmp
jno
sub
add
insl
aam
dec
xor
repnz
mov
mov
pusha
clc
and
imul
clc
sbb
cmp
add
push
fninit
test
push
pop
loopne
mov
pop
cld
lahf
int3
data16
dec
test
push
lret
jle
outsl
add
je
adc
mov
inc
add
cmp
ss
mov
lret
jo
push
rcrb
jle
in
ds
push
cwtl
adc
fcoml
andl
dec
pop
testl
sub
mov
lods
int3
cltd
lret
xchg
mov
test
icebp
inc
int3
xchg
leave
test
push
xchg
scas
test
and
insb
pop
push
xor
arpl
ds
push
fucom
out
and
lock
cmp
into
adc
and
negl
mov
lcall
mov
shrb
repz
xchg
arpl
adc
jae
dec
rorb
jnp
popa
cltd
xchg
ljmp
dec
pop
and
and
out
mov
fs
add
mov
aas
jb
cmp
jmp
rcrl
xchg
lret
dec
jne
fisubrs
cwtl
adc
xchg
sahf
xlat
adc
fsubrs
cmp
cli
xchg
aaa
cmp
cld
repnz
push
outsl
ja
push
mov
mov
mov
int3
push
inc
push
pusha
insl
xor
fsubl
and
sbb
pusha
leave
or
divl
mov
jb
cs
lods
leave
cmp
scas
push
mov
out
shlb
aas
into
pop
xchg
stos
mov
xchg
mov
jp
mov
pop
and
mov
cmp
hlt
cmp
and
mov
pop
fs
in
rol
fnsave
arpl
fiadds
ror
fcomp
jmp
add
cmc
mov
jbe
add
adc
push
pop
cmp
fstps
imul
add
lret
jno
sbb
sarl
stos
in
mov
ja
sbb
xor
popa
adc
xlat
cmp
xchg
push
mov
xchg
jnp
fs
xchg
pusha
mov
sub
sub
and
pop
xlat
lds
arpl
or
imul
outsb
mov
xor
popf
add
jnp
sbb
mov
out
inc
xchg
adc
add
lods
push
leave
aad
test
sbb
mov
push
dec
int3
cmp
je
and
mov
jle
mov
dec
dec
mov
pop
in
out
adc
jae
pop
jo
fst
cmp
sar
cmp
push
jae
fsin
and
inc
aad
cmp
cmp
or
push
adc
push
mov
popf
repz
fnstcw
cmp
and
mov
not
test
mov
movsb
cmp
and
test
stos
imul
xchg
fldt
cmpsl
and
jae
push
mov
clc
loopne
jmp
cmp
sahf
out
fcmovbe
cmp
xor
movsb
pop
inc
idivb
pop
leave
ss
cmc
cmp
cld
jle
test
decl
addr16
push
jae
pushf
xchg
mov
cwtl
sub
jmp
sbb
test
sahf
mov
aaa
pusha
dec
inc
mov
data16
shl
jmp
outsb
negl
addl
outsl
stc
mov
mov
xor
ret
xchg
jg
leave
pop
dec
dec
cmpsb
mov
mov
into
int3
pusha
ljmp
popa
movsl
cmp
in
cmpsb
cmc
icebp
rorl
in
repz
mull
cwtl
xor
dec
xor
dec
mov
insl
stc
push
loop,pt
and
cmp
mov
dec
in
sub
repnz
inc
test
dec
shrl
inc
mov
fisttpl
lret
insb
scas
xor
loopne
inc
les
push
xor
xchg
movsl
scas
pop
lahf
adc
push
stos
and
fisttps
filds
cmp
cli
movswl
mov
pop
push
ja
mov
bswap
cltd
cmpl
ljmp
xchg
hlt
adc
or
into
xchg
mov
push
outsl
sub
dec
ficoms
aaa
adc
popf
push
repnz
dec
and
shl
sahf
lret
mov
insb
cmp
xor
out
out
cmc
idivb
mov
xor
mov
xor
sbb
inc
aaa
push
jge
sbb
adc
out
lret
int
cmp
inc
jns
xor
sbb
mov
push
je
mov
add
push
inc
dec
mov
ljmp
or
fistpll
inc
xacquire
xchg
mov
dec
mov
cmp
jmp
xor
dec
pop
lods
mov
movb
testl
daa
cmp
xchg
jecxz
jmp
cmp
std
xor
out
add
sbb
add
cmp
scas
aam
jno
popf
mov
pop
xorb
out
lea
mov
repz
jns
inc
mov
je
pop
andl
rcpps
fwait
mov
xor
jbe
pop
addr16
int
jae
push
add
or
testb
xor
push
icebp
dec
adc
int
inc
fcmovne
fsubrl
mov
hlt
ljmp
insl
loopne
mov
js
sbb
ss
xor
outsb
pushf
mov
repz
lret
and
into
pop
js
mov
mov
dec
mov
push
pop
lods
into
mov
shl
pop
cmp
shl
mov
lahf
sbb
les
mov
mov
sub
in
xor
stos
test
sbb
push
add
pop
ljmp
cmp
xchg
cmp
ss
jecxz
hlt
out
daa
pop
in
mov
pop
inc
mov
sbb
sub
mov
cmp
in
insb
dec
lods
or
fbstp
sub
aam
xor
sub
loop
ret
pop
out
and
mov
cmp
iret
jne
ret
loopne
xchg
outsl
xlat
fdivs
cmp
hlt
pushf
jns
sub
dec
sbb
cltd
pop
sbb
xor
mov
ret
sub
out
repz
sub
popf
movsl
pop
mov
test
jnp
lcall
je
cwtl
aad
sbb
divl
push
and
fidivs
mov
xchg
aas
jecxz
xchg
mov
xlat
mov
pop
mov
pushf
hlt
xor
test
or
cmp
jb
cmp
jmp
sbb
imul
pusha
push
fisubs
scas
test
xlat
and
shlb
pop
rolb
push
xor
sub
add
pop
shll
idivb
sbb
push
icebp
mov
imul
or
arpl
out
imulb
jg
adc
jbe
cmp
int3
dec
rcll
sub
shlb
movsl
repnz
iret
inc
push
fadds
loope
and
pop
call
dec
lahf
in
dec
scas
test
xor
cmp
mov
push
dec
mov
imul
aad
rorl
and
adc
lods
jge
cmp
in
addr16
mov
push
pop
sbb
cltd
mov
sbb
js
rcll
lret
cli
outsl
test
jle
inc
arpl
cld
jmp
loope
xchg
sbb
inc
xlat
push
jns
dec
push
adc
cmp
data16
ja
jns
xchg
xchg
loop
into
icebp
testb
sti
xor
sub
fisubs
in
lret
cmp
sbb
mov
aad
sbb
cmc
popf
mov
pop
jmp
cmp
idivl
rcr
jl,pn
push
out
mulb
add
dec
jno
mov
cmc
sbb
loopne
jge
jle
mov
lock
in
mov
ss
imul
imul
adcb
dec
mov
lcall
add
lds
add
inc
push
mov
xchg
pusha
jmp
jle
cmpsb
xchg
testb
bound
cwtl
lea
xchg
add
clc
and
aam
dec
pop
inc
cmpl
pop
adc
mov
push
sbb
sbb
jge
les
sahf
push
sti
sbb
pop
sar
loop
lahf
and
pop
bound
add
cmp
daa
xchg
cmpsb
rolb
jge
mov
cltd
jecxz
mov
popa
in
fsubl
pop
jl
adc
and
sub
test
cmp
cmp
cmp
xor
inc
arpl
repnz
adc
xchg
push
ret
pop
loop
fucomip
adc
mov
clc
mov
insb
dec
adc
movsl
nop
jle
xor
add
rolb
cmpb
dec
sub
cmp
scas
loop
shl
lea
push
dec
sub
xchg
es
pop
pusha
lret
dec
push
je
cmpsb
inc
imul
jmp
cmp
sbb
in
out
xchg
stos
fxch
sub
cmpsb
lret
pop
push
bound
mov
je
mov
xchg
repnz
and
sub
mov
ljmp
mov
cmp
push
push
ret
loope
adc
loop
or
pop
sbb
pop
xchg
stos
mov
aad
jbe
dec
pop
jbe
adc
push
push
repnz
sub
je
jle
or
test
mov
push
add
movsl
pop
jg
lds
cltd
push
xor
pop
mov
xchg
cmpsl
jle
repz
sti
das
xchg
testb
movsb
ret
into
rcr
pop
jle
hlt
outsl
int
add
push
jp
in
mov
js
in
inc
daa
xlat
idivb
in
rorb
add
pop
in
cmc
shll
in
lret
cmpsb
imul
inc
sub
or
outsb
pop
mov
shl
aad
adc
leave
enter
mov
pop
lock
pop
shll
ja,pt
or
adc
pop
shlb
mov
jo
and
mov
outsb
rclb
out
inc
icebp
pop
stos
sbb
push
loopne
adc
arpl
and
lods
sbb
jae
enter
cltd
fists
es
push
push
cltd
inc
int3
adc
das
sub
and
jge
pop
insb
mov
daa
roll
cmp
add
push
rcll
inc
cmc
sti
pop
and
fwait
jo
dec
stos
loope
sbb
mov
sub
pop
lret
mov
je
jbe
push
fisubs
loope
gs
and
jne
sub
dec
inc
push
fidivl
push
es
mov
mov
mov
rsm
in
mov
in
dec
push
icebp
sub
or
mov
jno
mov
push
pop
test
sbb
and
mov
and
incb
or
fcmovu
pop
test
hlt
adc
or
cli
outsl
icebp
jo
cmp
leave
push
or
lahf
cwtl
lods
fidivl
push
push
xor
into
outsb
andb
push
cvtps2pi
sub
filds
les
mov
pusha
dec
cmp
pop
mov
adcl
mov
cmpl
in
aad
pusha
repnz
jne
ret
xor
mov
mov
outsl
sub
mov
mov
das
fiaddl
xchg
xlat
fbstp
sti
jae
mov
rcrb
movsb
orb
test
aaa
imul
out
lret
xor
repz
rcrb
mov
out
sbb
sbb
lods
stos
push
xor
inc
push
jbe
pop
ljmp
stos
ss
ja
div
stos
xor
mov
lods
push
and
mov
dec
popa
add
shufps
outsb
mov
ds
sbb
js
inc
je
lods
xchg
es
daa
sub
jno
jp
mov
pop
push
push
jne
inc
sar
divb
fwait
in
mov
loop
mov
jecxz
rcrb
in
mov
cs
xor
frstor
out
inc
movsl
and
pushf
test
fldenv
dec
stos
pop
push
jg
inc
lret
sub
jo
out
xor
xchg
cmp
pusha
add
sbb
sbb
add
lds
and
sub
popw
fsubrl
mov
stc
cs
ja
incb
sbb
xor
jmp
imul
les
push
insl
dec
add
push
aas
sub
push
dec
cld
mov
aam
fldl
mov
movsb
fcompl
cwtl
xchg
mov
aas
xor
inc
lret
ljmp
das
lods
or
lret
pop
sub
cmp
fistpl
jae
out
mov
and
sahf
cmp
mov
xchg
pop
popf
sub
lahf
adc
cmp
rclb
js
mov
pop
ss
scas
lds
sahf
mov
mov
jecxz
jbe
std
push
mov
inc
sbb
inc
imul
insb
mov
cmp
or
lret
mov
fucomip
dec
and
out
adc
sub
adc
dec
sbb
sub
stos
push
ret
loopne
iret
scas
sub
subl
popa
add
jb
icebp
ffreep
cmp
stos
cmp
test
daa
in
xchg
call
xchg
and
push
les
fs
movsl
fnstsw
mov
mov
mov
aas
push
insb
xor
push
cmp
push
push
lds
insl
inc
stos
and
cmp
dec
jle,pt
aaa
mov
js
call
mov
in
pop
leave
fidivs
mov
jne
adc
mov
fisubrs
and
sub
adc
test
adc
stos
fisttps
push
add
push
cli
mov
mov
xchg
inc
jmp
push
scas
mov
add
out
mov
cltd
adc
addr16
dec
movnti
test
jnp
xchg
pop
pusha
test
pusha
inc
arpl
push
mov
dec
lock
or
xor
aad
jg
stos
jl
add
mov
lcall
mov
cmp
nop
je
in
cmpsl
cmpsb
scas
lock
push
adc
andl
ss
sub
fcompl
sub
and
pop
push
sub
or
push
aaa
jae
mov
push
call
adc
cmp
ljmp
fmull
insb
sahf
mov
inc
insb
pop
pop
cmp
mov
cmp
cwtl
inc
out
add
pop
int
stos
pop
pop
add
adc
lds
mov
sbb
mov
outsb
cmpsb
jmp
mov
fsubs
sbb
jnp
lods
ljmp
lods
fstl
fdiv
in
or
les
dec
sbbb
popf
das
imul
cmp
dec
or
inc
dec
mov
pop
clc
fidivl
insb
inc
adcl
jmp
popf
ds
pop
sbb
xor
bound
daa
jp
adc
mov
and
arpl
jg
fisttpll
icebp
bound
arpl
mov
ret
sub
add
cld
dec
ja
sbb
or
subl
mov
out
push
lcall
and
jmp
sbb
and
mov
fldt
popf
pop
test
xchg
dec
popf
xchg
ljmp
inc
adc
mov
pextrw
pushf
enter
cwtl
jmp
lods
or
repnz
aaa
push
mov
push
push
sub
or
xchg
stc
sbb
inc
or
arpl
mov
inc
fidivs
cmpsl
test
imul
push
cld
in
addr16
cmp
or
loope
dec
mov
ret
clc
ss
fisttpl
xor
repnz
out
mov
xchg
add
stc
or
push
ficomps
add
mov
sbb
in
pop
ficoml
push
jg
inc
pop
unpckhps
fisttpll
cmp
lcall
push
cmp
add
push
scas
push
mov
inc
xchg
in
sub
push
add
repz
push
fwait
loope
and
stos
mov
jmp
fnstsw
cmpsl
sbbb
int3
shr
test
xor
in
mov
shlb
aaa
inc
ror
sub
jmp
cmp
cld
inc
sahf
in
mov
sbb
sub
ja
cmp
ja
jmp
inc
or
adc
mov
mov
dec
dec
pop
xlat
lds
dec
call
xchg
ret
leave
cmp
push
je
gs
ds
mov
and
cmpsb
cmp
aaa
into
in
jno
mov
jne
mov
mov
imul
dec
cmpsl
test
mov
jge
push
sub
push
push
pop
aaa
cltd
add
cmp
sbb
lods
sti
ss
adc
fwait
mov
icebp
pop
scas
adc
lahf
xor
sahf
int3
sbb
adc
inc
mov
dec
lea
mov
pop
flds
dec
out
fisttps
daa
cmc
incb
clc
xchg
lcall
gs
es
aas
jnp
xor
and
addl
negl
xchg
popf
mov
test
push
or
dec
adc
sbb
push
dec
fs
insl
inc
lret
cmp
repnz
mov
or
adc
mov
pop
icebp
and
push
pop
f2xm1
add
cmp
adc
mov
push
out
xchg
lds
push
insl
mov
jne
ss
pop
mov
sub
jmp
xchg
push
int
xor
xor
addb
cmp
xor
leave
pop
inc
xor
sub
push
dec
push
mov
pop
and
rcll
cmc
push
je
pop
push
sbb
mov
lret
and
outsb
or
jge
xchg
lock
push
shl
jo
test
jp
add
stos
inc
push
push
movsb
dec
xor
pop
iret
jl
mov
incb
daa
mov
loope
stc
xchg
mov
and
outsl
aas
cmp
fnstsw
gs
push
mov
add
std
or
in
add
xor
inc
enter
cmc
sub
sbb
pushl
or
shll
sahf
stc
sub
sbb
add
cmp
push
pop
xlat
mov
outsb
call
std
mov
mov
pop
ds
cli
add
testl
jbe
xchg
push
inc
push
xchg
mov
bound
incb
push
in
mov
mov
pop
inc
mov
and
hlt
push
fldl
cmovge
lret
and
fisttpl
and
lret
jmp
jbe
clc
int3
jmp
push
test
mov
out
pop
mov
push
js
xchg
scas
lahf
je
or
imul
pop
enter
adc
jb
mov
cli
dec
lcall
daa
dec
cmp
outsb
popf
das
rclb
and
repz
popa
sub
mov
rcr
dec
filds
fisttps
xchg
lea
out
add
data16
sub
insl
shlb
mov
lcall
and
mov
jno
icebp
jnp
xlat
push
mov
arpl
dec
sub
movsl
sub
stos
clc
ret
leave
sbb
pop
mov
jp
push
lret
and
sarb
or
shrb
sub
mov
sti
jo
mov
inc
bound
into
loope
sti
rclb
or
push
repz
fcoml
into
adc
pusha
pop
sbb
icebp
sbb
cmp
roll
add
sbbb
jne
add
jb
mov
and
int3
xchg
pushl
shrl
dec
push
nop
pop
ljmp
shr
inc
cld
les
jge
test
mov
andb
jns
ja
cmp
mov
jle
repz
aaa
push
mov
aas
je
movsl
std
mov
adc
mov
lods
pop
fisttpl
aaa
into
push
mov
pusha
aad
jg
fs
xorl
or
jmp
and
or
js
fnstcw
lahf
inc
inc
mov
aam
shlb
out
out
dec
mov
or
add
sub
lcall
pop
push
inc
add
cmp
enter
sbb
push
inc
sbbb
mov
mov
inc
rorl
mov
rclb
mov
xchg
mov
ret
mov
stc
fmul
imul
leave
sbb
cs
push
movsb
nop
in
mov
mov
xchg
inc
mov
or
cmpsb
mov
rcl
dec
pop
rolb
lret
and
mov
mov
mov
les
addr16
xchg
jb
cltd
les
imul
mov
or
or
jmp
minps
in
xor
dec
pop
mov
or
pop
xor
lahf
dec
into
or
outsl
add
inc
insb
repnz
ss
inc
dec
sbb
imul
push
imul
mov
popa
js
imul
fsubr
xor
sub
xor
push
sub
fmull
cld
push
fisttps
sbb
lods
pop
es
test
pusha
mov
dec
xchg
xchg
nop
negb
lds
push
pop
ror
mov
jecxz
xchg
repz
repnz
jp
lret
aaa
push
ss
fs
lcall
adc
sti
test
dec
inc
lds
pop
pop
mov
xchg
push
jg
test
pusha
adc
inc
es
enter
aad
inc
sub
stos
add
rcrl
test
xchg
mov
inc
ffree
jge
push
or
adc
inc
and
xor
ror
dec
inc
mov
fucomip
pop
movsb
cld
addr16
sbb
mov
pop
les
jge
jge
test
adcb
and
in
xchg
in
pop
jne
shrb
mov
jle
lahf
sub
popa
ja
push
cmc
mov
push
gs
enter
and
fiaddl
fs
push
lds
push
mov
pop
gs
pop
fiadds
or
add
jnp
mov
outsb
xchg
jl
cmpsl
shrb
adc
mov
popa
ja
push
add
inc
jp
add
sti
pop
out
test
and
mov
or
scas
hlt
add
sbb
jp
mov
inc
pop
lret
addl
andb
in
jne
movsl
and
xchg
repz
xor
jp
daa
pop
inc
shlb
pop
jle
ret
push
adc
inc
and
aas
es
lods
mov
pop
pop
sub
cmp
add
pop
adc
rolb
mov
inc
rcr
scas
mov
mov
lahf
call
stos
jmp
inc
jg
test
pushf
or
imulb
cmp
mov
aam
or
pop
adc
push
sahf
das
xchg
scas
fidivs
data16
mov
imul
movsb
insl
mov
lods
mov
mov
push
dec
ljmp
dec
mov
mov
std
xchg
adc
repz
vpsrld
inc
cmp
ja
popa
mov
les
iret
sbb
mov
fs
jae
push
xor
and
dec
pop
aaa
hlt
imul
lock
xchg
cmp
scas
outsb
shrb
in
mov
cmp
or
jp
jnp
xlat
cmove
push
mov
shll
xchg
cmpsl
sar
out
je
jne
mov
xchg
jg
bound
out
push
add
and
xchg
insl
jge
movsb
es
les
inc
lods
xor
mov
nop
loop
xor
fwait
inc
ss
stos
cltd
outsb
in
and
mov
ds
movsl
jge
fldenv
jno
xchg
fs
es
dec
dec
daa
xor
push
xchg
inc
cmp
aad
sub
loope
test
mov
pop
push
ljmp
xchg
jb
int
or
aad
lret
push
xor
lea
inc
movsb
cmp
push
lcall
mov
mov
mull
adc
repnz
mov
lahf
lret
cmp
rcrl
xor
clc
dec
lods
jecxz
sarb
insl
pop
stc
pop
mov
sbb
jae
mov
cwtl
test
jae
movsl
cmp
movsl
std
rorl
lahf
outsl
inc
outsl
mov
fmul
push
xor
xor
sbb
ljmp
push
into
ds
adc
jp
enter
mov
push
in
push
psrld
pop
ret
in
out
push
jg
mov
idiv
mov
mov
repz
movb
bound
outsb
int
xchg
add
leave
cmp
test
movsl
xor
mov
rorl
lret
adcl
sbb
xor
xchg
das
fistpll
adc
xor
fs
out
cmpsb
cmp
sbb
mov
cltd
call
mov
add
jmp
outsb
push
hlt
cmp
jle
je
rorb
das
data16
cmpsb
mov
pop
mov
mov
xchg
scas
push
aaa
ljmp
or
sub
negl
add
xor
mov
lret
mov
inc
imul
lea
add
pop
inc
iret
fnstcw
repnz
ret
imul
jecxz
lds
test
pop
or
xchg
jl
movsb
fstl
jg
inc
push
jae
fmull
fldcw
cmp
ljmp
es
pusha
stc
xor
loop
xchg
arpl
xor
push
pop
aas
and
sub
or
in
adc
test
mov
sarl
lods
jecxz
in
cli
int3
add
mov
std
cmpsl
jnp
int3
out
in
test
xchg
cs
jns
sub
cmp
fmulp
xchg
or
xor
mov
jmp
testl
dec
xor
fwait
movups
cmpsl
xchg
imul
movsb
sub
jne
xor
mov
or
xchg
int3
sub
and
rorl
fisubrs
cmpsl
sbb
sub
repnz
dec
sub
test
scas
cli
jmp
xchg
add
test
cmp
stos
pushf
sub
test
int3
pop
imul
fwait
ljmp
xchg
xorb
pop
clc
adc
mov
test
adc
mov
dec
jmp
gs
sbb
fnstenv
mov
fistpll
sub
sbb
in
fistl
and
push
notl
push
insl
rcr
jmp
pushf
mov
in
pop
xchg
pushf
jb
dec
lods
je
cld
iret
push
jg
ja
sti
clc
fisubrl
fdivp
jg
ret
sub
mov
pop
jns
sahf
cmc
dec
scas
inc
pop
sub
ds
outsl
inc
ljmp
jnp
cltd
jecxz
std
in
mov
in
pop
aam
mov
test
testl
xchg
in
fists
rcrb
fistpl
xor
insl
mov
xor
enter
aas
lods
inc
mov
jg
cmp
mov
rorb
mov
pushf
push
sbb
clc
push
and
sbb
popf
std
insb
dec
aam
lods
fsubl
jns
cmp
test
xchg
xlat
in
nop
test
and
dec
jp
scas
sbb
int3
xor
and
mov
shl
sub
pop
nop
icebp
xor
inc
adc
lea
mov
dec
fwait
gs
jg
addr16
mov
fbstp
ret
xor
xor
xor
push
adc
and
adc
jl
aas
ficompl
out
ret
inc
inc
or
aam
imul
out
push
lods
sbb
cmp
sub
lock
sbb
pop
pushaw
mov
rcrb
addb
mov
push
pop
fnstenv
aas
mov
or
lods
fisubrl
mov
repz
dec
sbb
addr16
inc
fcoml
push
cmp
cwtl
testl
mov
cltd
call
loopne
or
scas
or
push
inc
cmp
fstps
addr16
sbb
sbb
filds
cs
scas
repnz
int
push
cld
and
out
mov
pop
push
adc
push
cld
enter
icebp
mov
add
sbb
xor
movsl
popa
mov
mov
fcmovne
push
inc
test
int
inc
adc
inc
jb
mov
xorb
jge
and
lea
nop
fcomps
cmp
ja
and
mov
fisubrl
test
shrb
iret
mov
cltd
push
pop
pop
mov
fwait
nop
lods
fisubl
xor
push
addb
mov
mov
push
xchg
fwait
inc
enter
sarl
repnz
cltd
arpl
lret
cmpsl
sub
sbbb
arpl
ss
sbb
cmpsb
mulb
push
aas
pcmpeqw
clc
popf
push
dec
mov
lods
movsl
cmc
push
scas
sbb
sbb
addr16
test
jle
pop
out
outsb
jmp
pop
lcall
ret
mov
push
pop
dec
xor
or
add
sub
bound
pushf
aam
pop
dec
pop
mov
add
jno
in
push
pop
dec
mov
nop
cmp
push
popl
jl
sbb
push
dec
mov
daa
mov
jg
pop
xchg
nop
xor
sahf
imul
ljmp
xor
mov
and
je
out
or
in
push
mov
inc
out
pop
mov
inc
jecxz
cli
cld
in
lock
pop
jo
pop
scas
xchg
in
mov
xor
cmp
and
imul
push
mov
adc
jecxz
push
dec
cmpsb
lods
hlt
stc
pop
adc
lock
push
and
imul
mov
shll
imul
dec
es
outsl
clc
aam
jge
arpl
enter
dec
pop
sbb
loop
lods
add
int
pop
jp
jbe
leave
mov
xchg
in
xchg
jns
and
nop
mov
lods
adc
xchg
pop
fstpt
pop
mov
adc
sbb
push
bound
or
leave
push
imull
subb
repnz
mov
pop
popa
loop
mov
in
jnp
jp
lock
cmpb
cld
dec
dec
cld
aas
mov
mov
push
test
insl
aas
rolb
pop
jo
sbb
fidivrl
scas
mov
sub
mov
inc
insl
fsubs
shll
subl
mov
fistl
lods
int3
jecxz
scas
negl
scas
inc
xchg
popa
sar
mov
xor
scas
pop
das
loop
jb
loopne
sub
loope
push
mov
jg
jg
int3
adc
lock
outsb
shrl
mov
fmul
mov
mov
and
sub
ds
inc
dec
or
ds
call
cli
lret
fsubrl
loope
cmp
dec
xor
cld
mov
push
xor
jecxz
popf
aaa
mov
sbb
xchg
push
pop
imul
sub
pop
jecxz
add
and
dec
pop
out
pop
push
lret
sub
push
jle
mov
dec
xor
pusha
jbe
mov
jg
call
mov
jl
cmp
sbb
ljmp
js
mov
inc
movsb
popa
sub
or
sub
pop
out
iret
test
jge
or
xchg
pop
hlt
mov
push
imul
xor
xchg
dec
jo
pop
push
scas
loop
push
or
xor
sub
in
jb
and
int3
lret
pop
jecxz
jno
scas
pop
adc
fwait
je
sub
mov
imulb
popf
or
lret
xchg
dec
bound
enter
daa
mov
int3
sub
pop
mov
adc
fildll
mov
shlb
js
loope
mov
mov
jne
sbb
insb
fdivr
pusha
push
negl
xchg
rol
stos
out
push
pop
sbb
xchg
and
xchg
pop
dec
movsb
les
mov
lock
int3
out
push
clc
push
jp
and
aad
pop
fisubrs
mov
test
push
jbe
inc
mov
mov
pop
andb
inc
xchg
enter
xor
mov
xor
sub
pop
inc
jl
mov
mov
cmpsb
outsl
loope
fldcw
mov
xchg
stos
loope
sbb
push
mov
or
add
pop
lret
rolb
or
enter
jno
bound
jb
fwait
lods
sbb
cmpsl
aam
test
xor
scas
mov
adc
inc
fcmovb
jne
xor
aam
aaa
mov
insb
jns
push
mulb
cmp
leave
enter
shll
ret
lock
pop
call
aas
lret
xor
mov
mov
lods
aaa
push
repz
fidivl
pop
jle
rcrl
dec
loope
test
or
in
pop
nop
dec
pop
or
sub
in
push
sar
mov
addr16
fwait
push
hlt
shrl
jmp
lret
movsl
aas
add
mov
sahf
xor
cmp
adc
lcall
mov
jecxz
nop
jmp
movsl
push
repz
imul
imul
fildll
push
lods
mov
test
lea
insl
cmc
sbb
aam
jge
and
dec
mov
jge
sti
pusha
pop
movsl
push
wrmsr
dec
data16
jns
scas
ret
and
in
xchg
mov
testl
mulb
jp
movsb
js
fs
test
pop
hlt
adc
sbb
push
popf
mov
dec
test
xchg
into
mov
xorl
mov
imulb
mov
sub
pop
xchg
rclb
lods
adc
dec
xchg
sub
push
or
xchg
lods
jge
lret
les
mov
fists
lea
or
jo
mov
xchg
aas
cmp
lods
dec
cmp
add
jno
cwtl
mov
push
fmulp
xchg
aas
mov
or
and
mov
mov
mov
mov
loope
mov
mov
mov
iret
in
dec
sbb
xor
push
movsl
inc
pop
insl
jbe
and
push
add
test
divl
in
xchg
rol
sbb
movsl
out
mov
and
xchg
mov
mov
daa
into
leave
adc
loopne
push
cmc
mov
push
dec
sub
movsb
out
orb
push
push
jns
jne
aas
lds
xor
jnp
add
and
out
mov
loopne
mov
push
adc
fisubl
lods
loopne
push
xchg
pop
pop
dec
dec
push
cs
push
pop
lret
push
sbb
enter
mov
movsb
les
jbe
in
xchg
in
push
nop
daa
leave
mov
in
icebp
les
fdivrs
inc
idivl
call
xor
gs
outsl
cltd
enter
adc
rcll
packsswb
jb
mull
cltd
fimuls
xchg
and
pop
stos
mov
dec
pop
push
dec
cmp
add
out
stc
aad
in
aas
sbb
bound
xchg
sbb
adc
jmp
and
mov
push
mov
fnsave
cmpsb
mov
jne
mov
loopne
sbb
mov
pop
inc
mov
in
sub
add
cmp
shrl
mov
mov
in
scas
adcb
cmc
mov
stc
icebp
arpl
mov
or
dec
cs
pop
jle
xlat
lds
add
clc
mov
jne
imul
sahf
mov
jne
inc
push
iret
ffree
nop
lods
adc
add
jp
jle
mov
sarb
test
gs
ja
pop
pop
dec
jo
int3
dec
and
push
jns
pop
pop
pop
pop
push
mov
lcall
xor
adc
adc
xchg
into
xor
lods
cmp
sub
dec
addr16
stos
clc
xor
cmp
fldl
in
fcoms
lahf
leave
sub
popf
mov
movsb
cmp
ja
iret
xchg
lds
xor
pop
test
xor
out
mov
lock
std
je
dec
leave
add
aaa
js
jmp
mov
push
mov
out
out
imul
cmp
and
pop
insb
call
cmp
cld
xchg
xor
mov
into
xchg
xor
mov
push
dec
insl
das
adc
into
dec
push
sahf
push
jo
sub
insb
mov
mov
popw
lret
dec
mov
inc
outsl
dec
les
inc
xor
cmp
or
xor
cli
xlat
pusha
fnsave
data16
divl
jp
cmc
push
dec
push
inc
add
sub
push
jno
scas
push
daa
sub
dec
test
int3
add
fwait
test
cmp
stc
sub
test
xchg
cmpsl
sbb
pop
push
pop
js
and
pop
outsl
inc
fisubrl
cmp
sbb
push
sub
or
xlat
jb
test
rolb
pop
jno
mov
nop
jle
lods
ja
sub
xchg
add
lret
add
lgs
add
repnz
xchg
or
add
jae
ret
push
mov
jle
mov
mov
inc
lahf
pop
push
imul
inc
dec
popa
jbe
xchg
dec
pop
adc
or
inc
cmp
push
and
inc
or
sbb
cmp
mov
mov
and
pop
insl
cmc
stos
in
fsubrs
push
pop
or
imul
cmpsl
xchg
pusha
fisubs
mov
xchg
daa
fiaddl
sbb
jae
into
das
or
xchg
out
jne
daa
mov
in
mov
push
bound
and
mov
sti
mov
divl
sbb
dec
aam
mov
xor
mov
xor
adc
sar
sbbb
xor
ret
jmp
scas
rcr
xchg
pop
aaa
fmuls
cli
mov
cmp
pop
xchg
mov
mov
or
stos
sbbl
in
inc
fcmovne
fdivrp
xchg
jl
fidivrl
push
stos
inc
pop
iret
or
jae
or
cwtl
pop
daa
fnsave
loop
xchg
repz
dec
jo
mov
jns
and
icebp
pcmpeqd
movsl
fimuls
jge
xor
adc
fcmovnu
xchg
scas
cmp
mov
lret
cmp
push
test
mov
mov
insl
pop
pop
ret
sub
push
jo
icebp
in
xor
hlt
adc
sbb
lahf
lret
xchg
mov
or
ret
bound
outsb
pop
adc
es
mov
dec
inc
jae
sbb
rorl
hlt
jnp
fs
push
outsb
test
scas
cmpsb
inc
push
ret
xchg
sbb
push
mov
notb
flds
inc
filds
dec
and
into
push
call
or
cld
ja
cmp
or
pop
mov
sub
pop
cltd
enter
lea
mov
sarb
jno
push
xor
adc
out
aaa
or
fcompl
clc
testl
adc
aam
xor
sub
in
lret
cwtl
push
sub
inc
out
inc
imul
stos
dec
das
stos
fmull
out
xor
dec
push
les
je
xchg
push
inc
sub
mov
je
inc
cmp
mov
fisttpll
xor
push
mov
dec
leave
aam
test
movsl
pop
in
sbb
inc
cmp
sub
sub
mov
push
dec
jnp
stos
add
and
popf
std
ror
xchg
cmc
jne
inc
orb
jnp
lea
fidivl
rcl
or
xor
in
adc
aam
loop
cmp
mov
outsl
arpl
push
adc
mov
xor
cmpsb
inc
add
ja
mov
pushf
xchg
orb
pushf
pop
add
shl
inc
call
mov
cltd
outsl
push
gs
sbb
mov
xor
lds
jle
cli
mov
movsl
int3
xchg
jnp
inc
jns
loope
ss
and
cmp
add
xor
inc
and
clc
ljmp
fisttps
ljmp
pop
js
jns
cmp
repnz
inc
je
push
paddsb
inc
xorl
adc
icebp
inc
andl
or
jae
jne
pop
sbb
adc
out
in
cmp
lods
pop
push
icebp
fwait
insl
icebp
mov
xchg
cltd
mov
mov
mov
test
sub
xchg
sar
jne
push
fs
ljmp
jmp
mov
jbe
adc
adc
sti
push
dec
pop
xchg
fcmovnu
adc
fcoms
adc
pop
aaa
les
mov
dec
in
ljmp
jp
dec
std
mov
jne
leave
jne
lret
pop
incb
fucomip
push
mov
push
mov
jp
ret
cmpb
pop
imul
push
mov
test
adc
lea
aad
call
shr
xchg
inc
add
push
sbbb
in
aam
mov
rorl
fwait
stos
mov
mov
xchg
stc
cmp
lahf
dec
shlb
out
fwait
mov
enter
mov
pause
repnz
lock
sbb
addl
repnz
pop
bswap
fstl
test
rclb
dec
pop
lods
das
cmp
loopne
pushf
faddl
je
sub
xchg
ds
shll
pushf
inc
aas
xlat
testl
xchg
movsb
add
fwait
xchg
fcompl
sub
imull
xchg
call
xchg
jg
seta
pushf
out
adcb
add
jns
jne
or
stc
jne
data16
jne
sbbb
mov
not
orb
incb
cmp
cld
xor
outsl
xchg
jae
ret
or
addb
xor
jne
popf
outsl
fistps
dec
jnp
jle
bound
dec
lcall
mov
xchg
pop
lds
cmp
add
push
xchg
push
mov
adcl
sub
mov
dec
ret
test
sbbl
mov
jne
jae
push
in
mov
push
clc
or
aas
pop
ds
mov
fwait
test
sub
adcl
popa
mov
sbb
out
push
jmp
push
or
aas
je
and
pop
insb
mov
inc
loope
out
fildll
out
inc
sbb
mov
or
rclb
adc
pushf
repz
test
adc
outsl
sti
mov
sbb
push
mov
xchg
push
pop
xor
lds
fdiv
mov
jo
mov
jecxz
arpl
fwait
pop
stos
adcl
jb
lea
adc
xchg
addr16
cmpsl
les
in
cmp
int3
pop
mov
jbe
test
push
ja
test
pop
push
rorb
inc
sub
adc
shrl
cli
push
les
and
dec
lret
sbb
into
xor
sbb
push
inc
cld
out
mov
push
add
cmpl
fadd
insl
mulb
sub
xchg
aaa
sahf
pop
jp
outsb
mov
xorb
cmpsl
out
fucomp
adc
cld
pop
sbb
jb
mov
sbb
dec
mov
cmpsl
leave
push
outsl
jmp
mov
cld
lret
test
cmp
jns
fcoms
lret
push
dec
fstps
mov
pop
iret
xchg
in
sub
jnp
jp
pcmpeqd
shlb
inc
packuswb
add
sub
ret
lea
adc
jl
sarl
xchg
psllq
call
mov
sub
adc
popf
dec
sbb
std
ret
jl
rcrl
push
jmp
cmp
dec
leave
jb
and
aas
mov
mov
sbb
mov
and
mov
mov
outsl
adc
loop
push
in
pop
fbld
out
push
leave
cmpl
jno
sbb
push
mov
pushl
and
jmp
jmp
sbb
xchg
loop
test
out
jl
lods
pop
outsb
jne
sub
dec
pop
or
sbb
mov
xchg
dec
dec
mov
shl
jae
mov
push
lahf
loopne
or
dec
ret
data16
test
mov
jae
mov
in
mov
pushf
das
int
ljmp
dec
push
hlt
and
stc
test
ss
mov
roll
mov
dec
dec
adc
loop
lcall
mov
pop
shr
out
cmp
adc
add
push
imulb
out
addr16
insl
push
orl
sahf
mov
sbb
jecxz
loop
jl
ret
aas
aad
ret
cmp
int
and
arpl
sbb
pop
or
inc
push
test
sbb
xchg
xchg
icebp
xchg
call
sbb
loope
add
ficoml
in
sub
aaa
mov
inc
fs
adc
mov
cmc
jecxz
mov
inc
icebp
popa
inc
push
popa
mov
and
push
test
int3
enter
fiaddl
or
mov
popa
ret
jecxz
mov
stc
insb
in
push
jecxz
add
cmp
in
lds
aaa
ds
push
test
jmp
cmpsl
xchg
add
xchg
mov
lcall
mov
mov
push
or
ds
dec
push
xor
xor
xchg
push
xor
pushf
push
xor
add
or
mov
push
sbb
mov
sub
mov
dec
mov
or
out
dec
bound
popf
std
insl
mov
cmp
add
rcll
fmull
sub
mov
aas
roll
adc
cmpsb
dec
dec
sarl
fnsave
aas
fnsave
loop
mov
fldl
addr16
or
es
into
pusha
sub
lods
test
enter
xchg
int3
lock
int
ljmp
fistps
jl
push
mov
loopne
ja
ret
out
sub
rcrb
add
and
or
imul
loope
dec
out
jb
fwait
leave
int3
addr16
or
mov
push
int
cmc
sub
int3
aam
push
adc
in
sbb
mov
pop
sbb
or
mov
mov
icebp
insl
add
cmc
fcomi
idivl
xchg
inc
aad
push
enter
test
gs
pop
jg
rolb
xchg
icebp
dec
int3
clc
sub
popf
or
test
add
cwtl
data16
mov
lea
jmp
mov
xchg
das
mov
jnp
repz
ljmp
fcoml
or
lret
aaa
and
pop
es
pop
insl
jns
lcall
mov
clc
clc
fadd
jmp
ret
and
mov
lahf
inc
cli
sub
cltd
movb
nop
outsb
dec
ds
aam
testl
pop
ret
scas
je
icebp
or
test
adc
cld
cmp
mov
cld
pop
sbb
fists
push
and
jae
mov
cmp
leave
pop
inc
pop
hlt
imul
xor
mulb
dec
dec
push
mov
fdivl
aad
dec
sbb
adc
and
adc
lods
sub
leave
lods
outsb
jb
bound
clc
xor
daa
neg
or
add
add
mov
cmp
nop
xor
test
pop
sbbb
lods
or
notl
pop
and
arpl
insl
mov
lods
pop
pop
repnz
mov
jg
xorb
mov
nop
pop
in
incb
xchg
cmpsb
aam
push
loope
or
add
inc
mov
fisttps
hlt
std
cli
test
cli
jp
xor
and
mov
adcl
ror
push
or
inc
mov
xchg
idivl
jns,pn
mov
outsl
fildll
mov
fstps
push
push
push
fldcw
xchg
mov
xchg
xchg
xchg
lret
ret
cmp
fidivl
and
and
xchg
lret
pop
or
sbb
push
popf
dec
fwait
pop
mov
xchg
xor
lret
fstpl
adc
and
loope
loopne
jle
les
enter
pop
sahf
xor
ret
repnz
cmpsb
sarb
push
imul
cltd
stos
sub
mov
pop
jnp
and
add
or
stos
pusha
push
out
and
push
sub
movsb
mov
jle
push
ss
gs
iret
push
or
or
scas
clc
pop
test
xchg
adc
xor
pop
mov
aam
mov
loope
dec
xchg
push
sahf
mov
data16
sub
lods
jnp
mov
sub
scas
sbb
in
sbb
mov
mov
and
cmp
dec
ljmp
scas
push
push
outsl
fidivl
xchg
and
int
pop
gs
cmp
or
sbbb
adc
fs
mov
xor
inc
inc
xchg
fldenv
stos
push
xchg
xchg
in
gs
sbb
imul
mov
iret
notl
aaa
jge
aaa
mov
pop
mov
or
add
jp
xchg
pop
shl
sub
iret
daa
jae
or
repnz
cld
mov
loope
add
cmp
push
dec
cmc
les
imul
pop
stc
fisubrl
jge
pop
test
enter
bound
xor
sbb
fisubrl
pop
sub
xor
pop
int
xor
jo
sub
push
out
stos
or
shrl
jb
pusha
xor
das
inc
xchg
hlt
mov
inc
es
inc
inc
cmp
aaa
inc
mov
pop
jno
jae
loop
cmp
xchg
js
xchg
call
jnp
xchg
ss
imul
and
mov
mov
jo
imul
je
adc
and
mov
rcrl
ds
in
adc
mov
in
ret
push
ds
or
pop
mov
out
cmp
jne
leave
mov
sbb
adc
lea
bound
jns
ss
sti
ljmp
inc
fisubrl
nop
aaa
pop
imul
dec
out
loop
mov
add
pop
xchg
pop
jne
dec
xchg
leave
loope
loope
leave
ret
aaa
pop
les
aaa
and
xlat
xchg
lods
inc
jl
inc
jp
add
loope
push
in
je
addr16
lret
subl
xor
stos
test
cmp
mov
xchg
addr16
mov
mov
pusha
mov
jo
dec
outsl
mov
push
push
ret
mov
sarl
sub
test
gs
xor
icebp
fisubrl
cmp
mov
nop
aas
fmull
jge
jnp
jp
inc
cmp
bound
rorb
test
cmp
pop
mov
sar
xchg
dec
push
les
hlt
adc
sahf
push
out
and
outsl
cs
sbb
lock
cmp
iret
leave
out
jp
sub
dec
lcall
xor
hlt
pop
dec
sub
xchg
femms
adc
mov
jle
pop
jg
out
lods
add
push
ja
lret
imul
or
mov
insb
sbb
pop
pop
sub
or
call
fwait
shl
and
mov
cmp
jle
pushf
testl
cmpsl
pop
push
or
or
stos
dec
mov
scas
shl
mov
loopne
xchg
insb
xchg
or
jb
mov
dec
ret
sub
rcrb
jnp
je,pn
inc
lret
jno
lock
push
call
mov
push
push
add
mov
mov
pop
adc
push
adc
mov
out
in
sub
push
or
stos
nop
cwtl
and
mov
ss
mov
inc
mov
mov
fucomi
and
push
into
mov
rcll
aad
sbb
add
mov
add
adc
aad
jmp
cmp
mov
mov
imulb
add
idivl
sbb
int
push
pop
decl
out
inc
mov
gs
fadds
mov
ja
enter
jle
jns
in
fs
push
and
into
outsl
pop
dec
push
rcll
aaa
mov
cmp
adc
popa
and
aaa
loope
test
int3
dec
and
cmp
sub
test
cmp
lods
clc
aaa
mov
adc
sti
mov
scas
pop
or
inc
test
cmp
push
pop
mov
inc
jmp
jg
cmp
fcmovnbe
jno
imul
daa
xor
mov
lret
mov
sub
outsb
push
flds
dec
movsl
xor
jmp
es
in
fidivl
cmpsl
sub
dec
bound
pop
arpl
add
inc
push
cmp
pop
stos
fstpt
lods
aam
cli
and
push
pop
sbb
aam
xchg
cmpsl
or
cmp
push
xchg
push
xor
jle
sahf
cs
push
sub
inc
les
cld
test
jbe
shlb
movsl
je
inc
add
pop
sbb
or
jg
xor
roll
in
sub
lods
cmpsb
sbb
push
scas
hlt
mov
cmp
loop
nop
xchg
inc
inc
cltd
lock
shlb
out
adc
cltd
test
out
sub
fistpll
mov
pop
xlat
or
out
insb
pushf
or
dec
push
or
pushf
insl
pushf
leave
lcall
lea
inc
sbb
sbb
dec
js
dec
adc
sbbl
mov
xor
adc
scas
andb
repnz
mov
call
xchg
jl
sbb
mov
sub
pop
fisubl
dec
jmp
aaa
rolb
pop
fwait
lock
dec
jmp
out
hlt
inc
adc
leave
iret
sarl
pop
gs
mov
pop
push
and
js
sahf
inc
sbb
movsb
fsub
xor
in
pusha
mov
daa
xor
cli
cmp
push
sbb
xlat
xor
cmp
pop
lret
dec
mov
jns
adc
in
mov
and
test
push
jne
add
jmp
jbe
in
fnstcw
insl
insb
test
ffreep
sbb
ja
cmp
sub
imul
rcll
sbb
dec
add
lock
test
fdivrs
push
lods
mov
xlat
imul
aaa
push
or
lods
cmp
aam
or
andl
push
xor
clc
shr
xchg
xor
pop
push
dec
mov
push
cmpsb
std
jo
aas
add
dec
or
push
lea
out
fnstenv
imul
jo
xor
xchg
fstpl
xor
and
popl
pop
stc
or
loope
sbb
fisttps
scas
test
add
aas
repz
xchg
stc
mov
push
sub
in
pop
cmp
xchg
jbe
mov
test
jbe
addl
and
sbb
into
clc
mov
lock
adc
repnz
jnp
test
stos
adc
add
aas
loop
push
and
cmp
adcl
and
ret
cli
call
sub
sub
cmp
dec
jmp
adc
fistps
arpl
xor
clc
cmp
incl
jmp
mov
dec
jbe
dec
jnp
ja
push
jnp
xor
xchg
daa
bound
push
xchg
adc
fildll
test
nop
mov
pop
add
mov
in
repnz
aas
cmp
pushf
sbb
jp
adc
xor
cmp
call
inc
ja
and
bndstx
adc
pop
mov
lcall
jle
shrl
es
dec
and
mov
cmpsb
adc
loope
popf
aad
test
sbb
cld
mov
mov
dec
iret
xlat
clc
incb
inc
jne
jbe
movl
and
adc
insb
jl
sbb
movsb
mov
push
dec
mov
out
aaa
insl
ja
cmp
or
subb
and
dec
mov
mov
outsl
pop
dec
dec
jb
mov
inc
mov
jns
dec
jbe
imul
sub
clc
push
orps
gs
scas
or
ljmp
jo
xchg
shrl
inc
sbb
in
test
bound
pop
test
push
mov
and
mov
add
lds
les
xor
cmp
mov
sub
mov
cmp
add
dec
dec
cmp
data16
popf
movsb
stos
inc
push
sbbb
pop
int
sub
es
xchg
into
out
sbbb
pop
sub
xor
mov
xchg
loop
sbb
cltd
ss
pop
lret
inc
repnz
push
pop
jb
insb
hlt
mov
mov
jg
mov
aaa
push
out
lea
sbb
cld
pusha
cwtl
push
movsb
pop
icebp
pop
out
fs
xchg
inc
dec
cmp
cli
in
dec
fs
fsubr
pop
cltd
and
enter
cmpb
dec
xor
dec
pop
mov
ss
mov
dec
cmp
add
loopne
mov
rcrb
stos
lcall
rorl
jg
or
inc
or
xchg
inc
xchg
and
xchg
dec
jbe
xchg
mov
fs
arpl
cmp
test
inc
mov
jg
lcall
cltd
mov
inc
push
fmulp
cmpsb
mov
mov
imul
cmpsb
rolb
clc
adc
cmc
adc
in
mov
inc
jg
jae
dec
xchg
outsl
pop
cmp
data16
inc
xchg
inc
fsubrs
xlat
sbb
sbb
and
sub
or
stos
pusha
popa
pop
dec
adc
ret
mov
dec
in
mov
rclb
lds
xchg
xchg
lcall
mov
mov
daa
xor
xor
jecxz
jbe
cmp
add
cmpsl
lcall
sub
or
mov
in
inc
repnz
mov
sti
out
ljmp
mov
adc
cmp
adc
pop
fmuls
or
mov
data16
push
stc
jl
shrl
push
ret
xchg
faddl
fs
jmp
cwtl
dec
jo
ja
xchg
jmp
shrl
cmp
rcrl
sbb
hlt
jg
loop
jb
dec
push
and
cmpsb
push
xor
cmpsb
lds
hlt
ss
int
fwait
aaa
decb
pop
fisttps
pop
mov
mov
popa
repnz
push
sub
fbld
cmp
aaa
pop
mov
push
adc
inc
outsl
inc
cmp
das
mov
sbbb
sbb
aad
dec
dec
add
mov
mov
nop
push
stos
push
in
sbb
repnz
xor
out
les
xor
and
mov
fs
cli
shll
pop
mov
or
stos
push
xor
or
xor
je
push
mov
adc
orb
sbb
lods
loopne
sbb
cmp
xor
mov
sub
xchg
cmp
sub
mov
mov
push
in
sub
ljmp
and
adc
xor
cltd
push
adcl
lcall
push
pop
sahf
std
stc
dec
rolb
daa
nop
mov
notb
mov
or
ret
ret
test
rcll
negl
cs
sarl
ja
lret
xchg
ret
lods
mov
cmp
les
jbe
ficompl
xchg
sub
inc
into
add
iret
mov
inc
jnp
stos
arpl
clc
adcl
iret
jnp
sub
or
add
sbb
push
addl
jne
lahf
sahf
pop
pusha
cmpsb
test
iret
imul
test
int
pop
popa
pop
sti
in
push
sub
fcmovbe
stos
sti
mov
test
xchg
nop
jmp
int
mov
sbb
cmp
mov
out
xor
std
cmpsb
loopne
cld
fisttpll
jne
add
iretw
fnstenv
push
cmp
insl
mov
cli
pop
inc
and
loopne
add
xchg
sar
leave
or
rclb
mov
adc
adc
in
push
push
popa
xor
pop
insb
sti
mov
leave
and
repnz
ficoms
mov
int3
jne
inc
fcmovne
ja
lahf
xchg
sub
push
dec
pop
lahf
ja
aas
mov
cld
inc
pop
sub
jbe
lods
xchg
add
add
cmp
mov
icebp
lea
fdivl
push
or
inc
outsb
nop
adc
xor
bound
fistpl
ret
sahf
mov
sbb
cmp
scas
ljmp
mov
insb
addr16
les
cmp
xchg
jp
or
xor
mov
jecxz
sub
bound
shl
pop
imul
lret
push
xchg
mov
adc
lea
std
xor
xor
jmp
sbb
mov
xor
jl
hlt
fs
push
lods
xor
dec
xor
fwait
call
mov
sbb
js
inc
xchg
inc
popf
lock
ja
pushf
dec
push
or
pop
ficoms
cmp
dec
pop
enter
sarb
int
mov
aas
out
mov
rcrb
lret
mov
jb
stc
adc
int
jge
popf
add
mov
add
xor
adc
and
or
lret
and
add
fs
adc
mov
mov
xlat
inc
push
or
jnp
pop
push
fiaddl
jne
in
cmpsl
sbb
jge
xchg
push
in
dec
sbb
fisubrs
push
je
cmpsl
or
into
pop
hlt
insl
mov
adc
clc
pop
and
stc
lcall
insb
add
cmp
pop
js
aam
lcall
pop
jmp
xor
and
sub
lret
divb
ja
loop
ret
mov
arpl
inc
add
xchg
inc
inc
into
in
jmp
add
lock
jg
lds
addr16
int3
fldcw
leave
dec
lahf
scas
cmc
inc
lock
and
vpsllq
xchg
out
lret
add
popa
stc
stos
and
lret
sub
mov
mov
jnp
xor
mov
out
scas
movd
ret
jmp
fldz
arpl
nop
cmp
insb
stc
data16
hlt
mov
fadds
mov
cmpsl
lahf
xchg
stos
scas
popf
mov
adc
aas
divl
mov
jo
mov
push
sub
es
fwait
adc
aas
out
cmpsb
and
push
insb
test
add
push
or
pop
sbb
mov
and
add
hlt
mov
mov
pop
pop
out
push
leave
sbb
push
popf
add
fwait
cli
mov
rcll
push
cmp
sbb
jnp
push
and
cmc
inc
das
pushf
enter
mov
and
ds
stos
mov
jle
cld
stos
jg
push
cwtl
bound
lcall
call
xor
jbe
fidivl
dec
pop
clc
movsl
sub
cmp
lods
jnp
mov
enter
icebp
scas
fwait
sbb
xchg
and
xchg
mov
dec
jne
xchg
jno
popa
fwait
cmp
fwait
mov
push
andb
mov
sbb
jbe
adc
aad
iret
movsb
fwait
pushf
or
add
jge
push
adc
and
insl
lahf
daa
mov
sar
shll
add
nop
pop
cmpsl
jle
pop
push
add
fsubrl
mov
popf
cmpsb
jl
dec
arpl
hlt
and
movsb
inc
mov
and
or
pop
lock
sub
adc
mov
xchg
dec
mov
stos
std
xchg
xchg
pop
mov
sbb
lock
popa
inc
dec
in
mov
jae
out
jae
es
das
mov
in
movsl
dec
push
mov
adc
cltd
stos
mov
jnp
fiadds
jp
adc
mov
enter
imulb
mov
jmp
icebp
inc
sub
ljmp
fwait
pop
rcl
test
push
cmc
pop
xchg
adc
aas
gs
pop
xor
popf
data16
mov
dec
cmp
loopne
iret
inc
loop
js,pt
xchg
inc
stc
push
adcl
dec
les
mov
or
jns
inc
lret
andl
dec
inc
cmp
mov
jge
gs
cmpsb
data16
orb
orl
jmp
sbb
popa
xchg
scas
or
pop
or
xor
rcll
incl
sub
adc
xor
movsl
mov
inc
mov
add
scas
sbb
mov
sahf
push
sbb
es
aam
into
mov
iret
add
pop
sub
lock
sbb
adc
or
frstor
xchg
shr
lea
mov
mov
mov
sbb
inc
jno
cmc
loop
inc
jge
pop
scas
lods
out
or
mov
or
push
cmp
xchg
shlb
cwtl
mov
out
mov
mov
inc
enter
test
fwait
push
enter
and
xchg
mov
mov
push
iret
rcll
dec
adc
jbe
ret
dec
loopne
jmp
add
lock
mov
out
fdiv
xchg
clc
add
mov
mov
aam
pop
mov
mov
lahf
imul
jb
pop
pop
fst
cmpsb
int3
xchg
lcall
test
mov
jecxz
pop
dec
mov
mov
shlb
sbb
imul
cmp
or
push
in
pop
xchg
mov
push
xorb
cmpsl
shrl
cmp
ljmp
imul
sub
lds
test
paddb
mov
push
push
sti
or
dec
pusha
push
ret
aad
nop
adc
pushf
into
repz
notl
fxam
pop
or
clc
cs
out
or
lock
sar
testb
popa
in
in
jno
mov
inc
cmp
push
pushl
lahf
and
mov
bnd
jno
adc
dec
sub
add
pop
sbb
jns
pop
imull
push
mov
or
and
imul
lods
dec
in
ficompl
in
rolb
movsl
mov
insl
mul
fnsave
out
or
daa
push
adc
sub
adc
push
mov
add
stos
jo
xchg
xchg
adc
sahf
out
or
in
ret
dec
and
dec
cmp
lock
in
imul
int
insb
xchg
enter
xor
addb
pop
push
pop
loopne
aaa
aam
push
stc
lea
adc
jae
movsb
jecxz
or
dec
or
stos
addl
cwtl
das
jmp
das
jg
loope
mov
push
movsl
ljmp
test
aad
fisttps
ds
mov
fwait
cld
lea
lods
negb
icebp
mov
pop
popa
sub
push
loope
icebp
les
out
enter
mov
adc
inc
jns
push
ret
dec
and
test
lahf
std
mov
xchg
rorl
test
cmp
out
mov
dec
mov
dec
fs
pop
leave
movsb
jbe
inc
cmp
popf
in
or
pop
pop
out
cmc
sub
sbb
jg
stos
call
mov
stos
fldenv
lea
cwtl
aas
inc
sub
rcr
pusha
out
popf
adc
divb
mov
jmp
push
imul
js
xchg
rol
jae
lret
xor
pop
add
push
inc
mov
xor
stos
push
push
dec
je
frstor
dec
loop
fwait
pop
js
mov
push
outsl
mov
jb
call
mov
dec
push
clc
adc
sbb
inc
push
repz
push
int3
sbb
es
sbb
mov
push
aaa
loop
xchg
sbb
jns
gs
outsb
out
cwtl
cmp
pop
adc
orl
lock
loop
push
jge
cli
lods
mov
fildl
and
cwtl
cltd
mov
imul
xchg
loopne
push
lcall
pop
jg
les
cmp
fimuls
in
lcall
jno
xor
popf
icebp
sub
push
loope
scas
aas
sub
xor
and
sahf
jl
add
inc
cmp
add
cwtl
jne
xor
movsb
test
dec
out
mov
cmc
xlat
pop
inc
insb
gs
ret
inc
in
and
fisubl
mov
sbbl
mov
and
lea
and
push
dec
xchg
int3
int3
pop
or
jp
sbb
in
test
sbb
fiaddl
lret
jae
test
cmp
xlat
idivb
push
sti
add
arpl
pop
and
mov
mov
mov
imul
sbb
push
inc
cmp
push
jmp
add
jnp
jno
repz
insb
out
pop
cmp
push
mov
add
cmp
dec
sarl
pushf
push
pop
ds
test
es
pop
add
lret
mov
xchg
fstl
inc
cwtl
jmp
mov
clc
dec
adc
or
mov
in
stos
sub
scas
bound
mov
mov
arpl
mov
inc
stc
icebp
sbb
into
sub
test
fsts
jecxz
mov
js
or
imul
add
outsl
iret
loopne
ss
rolb
sbbb
xchg
inc
cmp
js
stos
fimull
in
xchg
ja
into
sbb
xor
jge
mov
add
cmpsl
lret
add
aaa
pop
mov
cwtl
sar
icebp
jae
outsl
adc
add
and
push
pusha
xlat
iret
ret
flds
xchg
mov
enter
pop
and
pusha
adc
sbb
adc
movsb
daa
pop
push
nop
push
xor
xchg
dec
and
fisttpl
adc
adc
rorb
mov
jmp
and
das
movsl
stc
iret
sub
cmpb
sti
mov
xor
adc
sti
hlt
add
jo
push
push
dec
mov
xlat
fs
mov
ds
jle
loope
jbe
mov
push
push
cmpsl
mov
fwait
push
pop
sbb
push
rolb
ja
ficoms
fcompl
cmpl
icebp
dec
push
or
push
stos
push
inc
mulb
hlt
addr16
push
cmc
mov
mov
popa
mov
and
mov
inc
pushf
mov
adc
adc
into
push
mov
add
int3
xor
aaa
adcb
data16
mov
fimull
jnp
out
lods
mov
dec
push
mov
fwait
push
cmp
out
sbb
inc
xor
dec
in
lahf
inc
cmp
test
sahf
test
push
mov
cld
insb
fcmovne
stc
shrl
lds
push
ficomps
jmp
mov
outsb
les
clc
lods
xchg
pop
push
pop
orb
testb
mov
sarl
or
sti
sbb
pusha
ss
sti
out
jecxz
pop
xor
jl
cmpsb
inc
sub
enter
xor
jmp
adc
push
shrl
sahf
adcl
or
fidivrs
push
xchg
bound
movsb
pop
push
scas
sub
cmc
xchg
rcll
cmpsl
mov
call
dec
push
xchg
push
in
addr16
or
mov
push
or
sub
xchg
push
out
loop
je
inc
int
sbb
jmp
sbb
arpl
adc
dec
xor
loop
andb
addr16
pop
adc
pushf
ljmp
addr16
dec
stos
out
pop
pop
ljmp
push
lock
les
and
mov
shrb
adc
add
mov
sarb
mov
pop
adc
adc
pop
cld
jl
adc
les
movsb
pop
xor
scas
addl
adc
adc
inc
and
and
sub
inc
pop
push
dec
mov
jmp
dec
aad
out
cmp
sub
xchg
dec
xchg
in
sub
adc
push
call
repnz
cmp
adc
arpl
lea
inc
inc
mov
mov
rcll
mov
test
in
in
stc
loope
int3
jmp
lahf
inc
push
mov
test
jnp
adc
push
pop
xchg
mov
mov
mov
in
repz
or
lea
jle
sbb
test
movsb
push
push
mov
fwait
push
xchg
cmpsl
in
fwait
push
pop
add
sbb
add
mov
mov
pop
ds
xchg
lods
adcb
inc
jae
mov
and
adc
lods
das
ret
mov
pop
test
stc
sbb
fwait
jge
jno
hlt
mull
enter
xlat
repnz
int3
inc
aad
lock
je
xor
scas
out
inc
aad
xchg
int3
fnstenv
sbb
in
lods
repnz
or
mov
cli
xor
push
pushf
xchg
add
sub
icebp
pop
push
iret
pop
scas
stos
and
and
lahf
sub
xor
cmp
ja
lahf
scas
int
aaa
iret
and
pop
dec
pusha
fbstp
mov
sub
in
scas
cmp
mov
pop
cmpsb
jo
popa
outsb
sub
scas
loope
inc
xor
sub
sbb
lods
in
daa
aam
loope
xchg
cli
mov
lret
cmp
les
xor
jmp
out
mov
sarb
xor
inc
xchg
bound
js
or
jmp
xchg
cld
push
mov
xor
shrl
popf
cltd
outsl
push
cs
push
add
mov
imull
xchg
and
add
cld
mov
test
out
lds
cltd
sub
xor
cmc
fdivrl
cmp
adc
adc
jnp
or
fmuls
gs
sbb
cmp
ficoms
mov
insb
loop
lods
in
inc
jmp
cwtl
mov
mov
push
in
mov
jg
fs
adc
and
xor
movsl
xchg
ja
sbb
icebp
and
xor
bound
mov
stos
mov
lock
stc
inc
inc
lds
jbe
mov
sub
das
add
pop
push
jl
sbb
mov
and
in
mov
jl
push
fcoml
mov
jb
push
and
xchg
sub
arpl
sbb
dec
mov
xchg
xchg
or
insb
call
push
push
sub
mov
sub
inc
cmp
in
jp
pusha
loopne
ss
add
testl
gs
add
into
jecxz
mov
das
push
test
dec
jno
gs
orb
pop
test
mov
insl
jp
lods
xchg
push
dec
rorb
negl
sahf
fwait
aaa
insl
shrl
inc
lret
rcll
jl
es
adc
insb
aad
orl
inc
addr16
inc
mov
shll
into
inc
push
add
lds
cwtl
cmp
clc
jnp
shll
std
push
sbb
cmc
mov
scas
xor
mov
xor
mov
sbb
jbe
jbe
mov
xchg
pop
out
movsl
aam
push
sub
jecxz
sbb
mov
jmp
and
adc
into
dec
inc
jle
iret
xchg
jae
jle,pn
dec
xor
add
pop
push
mov
or
rclb
jle
sbb
xchg
mov
je
sbb
cltd
loopne
and
mov
shl
mov
push
fwait
ror
xor
push
outsb
jle
sbb
ss
adc
cmp
sub
pop
ret
jno
js
out
ss
add
lcall
sarb
aas
lcall
lods
cmp
sub
in
sbb
ja
sub
pop
loope
testb
std
cmp
pop
adc
nop
rcrl
pop
lock
inc
clc
inc
scas
sub
sub
push
js
dec
dec
test
xlat
pop
cmpl
sub
or
rcrb
gs
pop
leave
pop
xchg
std
cmp
cmp
mov
pop
xchg
mov
sub
ds
aas
daa
aaa
movsb
mov
jle
fidivrs
outsb
dec
aad
pop
mov
repnz
lcall
cs
jg
jno
aad
mov
lods
arpl
cli
test
ror
jmp
daa
xor
mov
fwait
inc
xor
int3
sarl
sbb
cpuid
dec
jle
sub
lcall
movsl
mov
pop
aad
and
test
sub
mov
adc
add
xor
idivb
pushl
xor
cmp
sbbl
jge
fsts
jnp
mov
add
std
scas
xor
addr16
inc
lods
pop
push
xchg
gs
daa
add
sbb
pop
adc
and
jb
push
mov
cmp
fmul
push
add
pop
lret
shlb
pop
ret
enter
inc
stc
repnz
jb
dec
jl
dec
xchg
push
dec
xchg
push
out
push
icebp
cs
ljmp
jp
les
cmp
push
pop
xor
lods
cltd
mov
mov
mov
push
out
jb
mov
sbb
push
lahf
xor
mov
dec
test
mov
jge
andl
popf
lahf
loopne
sub
sub
xchg
loop
mov
mov
xchg
cmc
fwait
sbb
cmp
or
push
leave
xor
ret
sahf
incl
push
pop
mov
jno
test
lcall
repz
pop
mov
dec
imul
out
pop
pop
nop
adc
sub
loop
jno
lds
push
xor
aaa
sbb
sbb
jbe
shll
adc
add
dec
inc
je
fidivrs
cmpsb
loop
mov
test
jl
fs
sbb
movsb
in
ret
jo
mov
xchg
outsl
cs
add
mov
dec
xor
in
je
sub
xchg
pop
daa
je
sub
xor
push
jl
out
rorb
cmp
outsl
ficompl
cwtl
pop
sub
daa
cmpl
cwtl
mov
xor
scas
add
negb
inc
mov
inc
mov
test
xor
mov
sbb
pop
mov
out
push
adc
mov
adc
cmp
loopne
outsb
dec
popa
adc
sub
xchg
mov
push
cmp
pop
jmp
clc
dec
insb
jo
and
or
pop
xor
xor
or
jge
cld
mov
add
mov
aas
push
pop
les
inc
xchg
add
jnp
cmp
lock
scas
popl
movsl
push
pop
jae
dec
jae
sub
push
and
sahf
in
and
inc
add
and
jg
in
js
jp
add
arpl
pop
scas
jae
pusha
xchg
adc
jnp
jbe
xchg
adc
adc
test
sub
es
je
push
movsb
inc
lods
cwtl
cmp
hlt
adc
mov
daa
sbb
movsb
cmc
xchg
out
call
popa
repz
ss
test
cmp
in
xchg
mov
mov
pop
pop
ljmp
jbe
sub
fists
mov
jge
push
adc
mov
adc
sbbb
sub
mov
stc
adc
mov
jae
dec
mov
add
jno
mov
jb
mov
ficomps
mov
sbb
pop
sub
push
sbbl
je
dec
xlat
arpl
fistps
xchg
fdivrl
xchg
out
or
fimull
loope
nop
leave
xchg
add
rcll
ja
loop
std
sub
mov
or
ja
test
mov
cmp
aaa
xchg
dec
ljmp
push
loopne
sub
shll
sub
cmp
inc
add
call
and
dec
cld
in
or
sbb
imul
jae
xor
jg
popa
mov
cs
jg
iret
xor
sbb
gs
jno
mov
mov
call
inc
mov
rol
mov
or
push
mov
orb
mov
push
jns
sbb
dec
or
mov
cld
aaa
jbe
testl
mov
push
jl
cmc
lods
jne
cli
mov
push
fnsave
xor
leave
add
das
xchg
xor
push
mov
lea
imul
push
cli
fs
sub
les
mov
adc
daa
jecxz
sahf
sbbb
jle
adc
fbstp
insb
movsb
add
dec
shl
inc
lea
pop
adc
and
movsb
xorl
and
js
lret
mov
cmp
stc
sub
jne
lret
es
xor
jae
enter
dec
add
clc
xor
jge
ficoml
push
and
cld
add
mov
je
mov
stos
jg
rcr
js
lret
sub
in
push
cli
mov
add
or
fidivrl
in
inc
ljmp
adc
xchg
ljmp
mov
xchg
dec
in
pop
jae
outsl
xchg
in
mov
dec
and
jae
pop
mov
rorl
ds
inc
sub
rorb
outsl
dec
inc
or
lret
mov
xchg
les
es
push
cmp
sub
pop
adc
push
jbe
lcall
lcall
mov
and
or
ljmp
inc
fcmovb
fstl
dec
xor
fimuls
outsb
dec
push
sub
xor
test
xchg
mov
mov
into
jnp
lea
push
lcall
movhps
in
ja
add
push
add
lods
jl
jecxz
pusha
xor
iret
cs
cmp
jge
loop
jle
repnz
mov
push
lds
push
and
jl
and
jo
push
dec
or
cmp
dec
add
sub
lds
test
loop
pop
or
lock
mov
xor
lahf
aad
mov
ljmp
lcall
or
dec
add
xlat
cltd
adc
repnz
data16
mov
sbb
repz
jnp
adc
repnz
pop
jecxz
ljmp
sub
imul
out
je
iret
movsb
xchg
jge
mov
lods
iret
dec
mov
neg
adc
cmp
leave
sbb
aas
dec
xchg
lock
pop
ret
cmc
aam
fstpt
xor
add
pop
sbb
or
add
movsb
cmpsb
mov
fdivs
pushl
cmc
hlt
out
and
add
addr16
in
push
scas
mov
mov
arpl
js
rcl
jne
sar
ret
xor
push
jo
xor
out
xor
xchg
out
icebp
lock
dec
cld
fsubrs
lahf
pop
jns
push
aad
inc
out
in
call
inc
mov
jl
divl
or
jecxz
sub
push
xor
pop
nop
out
cmp
mov
adc
adc
pop
push
sbb
pop
aas
outsb
mov
shlb
mov
xchg
push
aad
inc
lret
aam
or
mov
nop
stos
dec
pushf
sar
lods
and
mov
cmp
mov
std
push
dec
scas
mulb
adc
fcmovb
fldl
popf
add
and
and
adc
shlb
sub
mov
insb
push
xchg
cmc
mov
out
mov
je
push
sub
ret
mov
sbb
or
xchg
dec
adc
in
aam
data16
pop
arpl
sahf
divl
rcrb
pushf
xchg
cwtl
aam
inc
add
jg
cmp
gs
xor
pushw
outsb
push
cmpsl
cld
cmp
mov
pop
pop
pop
cltd
fbstp
sbb
pop
sub
cmp
in
aad
xchg
sub
ljmp
shr
fcoml
lahf
stos
sbb
in
and
mov
push
loop
sahf
std
dec
scas
sub
jno
mov
daa
jg
mov
clc
lret
popa
cld
sbb
push
adc
inc
mov
mov
sbb
mov
lock
add
lret
push
mov
pop
loope
push
or
sub
icebp
jbe
mov
pop
sub
cmp
sbb
add
inc
cli
fcomp
sbb
add
nop
loopne
cmp
stc
cmp
or
lock
test
stc
pop
mov
jae
loopne
xchg
es
outsl
cmpsl
cmc
test
rcrb
sub
mul
xor
sub
jl
xor
mov
or
inc
jmp
mov
addr16
adc
and
subl
cs
pushf
xchg
xchg
pop
mov
xor
sbb
dec
in
mulb
les
in
dec
inc
jb
pusha
gs
mov
sahf
mov
cmp
out
stos
mov
inc
jb
pop
pop
and
adc
sub
in
sbb
test
imul
scas
int3
pop
jl
mov
out
push
and
add
jnp
fisttpll
push
icebp
lret
cmpsb
rcl
and
adc
fsubp
cmc
lret
mov
mov
cmc
sbb
or
pusha
mov
shlb
add
inc
repnz
loopne
lret
mov
sbb
push
leave
push
test
xor
xlat
jbe
cli
cmp
mov
cli
or
add
pop
and
loop
mov
xor
inc
ljmp
or
push
xor
loop
subl
fnstcw
mov
push
mov
cmp
sub
ficomps
cmc
pusha
push
xor
js
cmp
jg
dec
popf
data16
mov
xor
jmp
dec
push
xor
cwtl
bound
into
xchg
pop
adc
and
sub
shll
scas
jnp
mov
lock
push
jmp
sahf
push
out
js
setnp
push
inc
aas
into
call
add
ja
imul
mov
inc
ret
push
mov
shlb
pop
xor
imul
cmp
xchg
mov
hlt
dec
xor
sbb
std
aam
out
adc
scas
mov
cld
stos
repz
xchg
xchg
push
loopne
inc
push
sub
xchg
ds
jg
dec
fs
inc
or
test
and
pop
inc
jge
mov
xor
sbb
adc
out
stos
repnz
scas
pop
or
dec
or
sub
sbb
outsb
ret
xor
data16
flds
mov
hlt
push
lcall
xchg
inc
ficoml
pop
lods
in
sbbb
push
dec
fdivl
enter
jne
inc
rcll
pop
shlb
inc
sub
dec
icebp
pop
cwtl
pop
cmp
ja
pop
je
fwait
dec
mov
loope
leave
loopne
inc
inc
sarl
mov
sbb
ja
mov
sub
pop
sub
les
mov
jo
iret
xchg
cmp
call
cwtl
sahf
stos
mov
into
sbb
cmp
xchg
or
push
pop
out
add
popf
mov
xchg
push
out
std
inc
mov
fildl
sbb
cli
out
in
test
clc
pop
or
cmp
dec
xchg
dec
cmpsl
into
inc
rclb
lcall
mov
movsl
sub
mov
sbb
push
movsb
lret
mov
or
cmp
std
loopne
pop
rcll
xlat
es
ret
fisttps
popa
seto
jae
dec
orl
dec
stos
pop
icebp
mov
cmpsb
insb
xchg
push
and
out
cmp
adc
testl
lahf
ret
ljmp
jp
mov
sub
cmp
mov
xchg
inc
outsb
lahf
jae
test
adc
rcl
js
andb
xchg
daa
pop
dec
and
fcmovnu
adc
test
cmpsl
daa
adc
int
stos
int
or
mov
stos
div
xor
xorb
daa
xlat
repnz
xchg
jmp
js
call
xchg
in
mov
xchg
mov
dec
sbbl
jg
sub
loope
scas
rcrb
adc
divb
fisubs
je
bound
cmp
inc
lods
int3
push
push
les
xor
mov
test
pop
flds
movl
movsl
icebp
lea
rcrb
out
shrl
das
jnp
inc
jnp
lret
int3
imul
fucom
lods
xchg
and
inc
sub
cld
xchg
inc
dec
out
pusha
mov
add
adc
mov
shll
pop
cmp
inc
addr16
push
jae
adc
jnp
and
xchg
daa
rcr
push
xor
rol
stos
movsl
pop
pop
insl
cwtl
sub
push
ss
stos
in
cld
and
std
push
dec
mov
dec
sub
fdivrp
pop
jge
push
and
push
outsl
and
lea
mov
movsl
mov
adc
jmp
jns
cmp
in
mov
inc
leave
lcall
dec
call
call
inc
scas
mov
mov
in
cmpsb
push
cwtl
jb
aas
retw
sbb
not
xlat
mov
jns
mov
push
int
push
out
jl
jns
pushl
rcrb
push
aas
insb
incl
adc
aaa
mov
imul
test
dec
jno
jne
pop
push
mov
jo
lahf
push
xor
mov
pop
push
add
pop
jge
mov
adc
mov
push
sub
in
out
add
sub
xchg
roll
push
call
shlb
icebp
sbb
ds
not
lahf
inc
pop
xor
xor
dec
push
outsb
add
call
icebp
sub
cmpsl
and
pop
mov
mov
ret
stos
int
mov
push
dec
stc
in
pop
insb
xor
jg
push
lods
mov
push
mov
divl
mov
push
mov
and
pop
loop
and
rcl
cmpsl
push
and
mov
les
jne
sti
rorb
mov
push
jne
add
xor
cmc
ret
lods
test
or
inc
int3
bound
add
inc
or
iret
xchg
dec
mov
scas
pop
inc
mov
or
je
shl
mov
pop
aaa
adc
mov
and
and
dec
mov
mov
push
push
ss
hlt
arpl
mov
jle
loopne
push
cmpsb
ja
dec
enter
pop
inc
scas
mov
jp
sub
sbb
les
fwait
fs
ret
jl
push
fwait
stos
ss
jmp
ds
js
icebp
mov
cmpl
loop
jecxz
ss
cmp
mov
int
and
inc
mov
pusha
mov
ds
pop
dec
mov
inc
js
xchg
mov
sbb
cs
sahf
cwtl
ror
push
jns
enter
das
xlat
int3
lret
insb
lret
repz
lds
out
aam
inc
and
scas
mov
mov
push
push
sub
dec
cmp
outsb
test
gs
cli
inc
scas
cmp
test
and
mov
mov
fsubp
mov
icebp
xchg
mov
jne
dec
jle
je
addr16
inc
inc
sub
mov
or
pop
dec
aad
inc
scas
add
mov
push
sbb
popa
mov
mov
es
sbb
ss
test
lar
or
scas
mov
sub
pushf
loope
push
fdivl
fnstenv
repz
mov
mov
xchg
scas
sbb
jns
rclb
leave
into
jl
repnz
repz
pushf
jns
xchg
or
push
mov
mov
or
mov
mov
cs
ret
ja
mov
inc
sbb
rcrl
mov
fisttpl
xlat
mov
push
ret
popf
ss
test
xor
and
in
into
hlt
out
mov
fnstcw
sbb
and
imulb
mov
dec
shl
push
lods
ja
clc
mov
mov
fdivrp
xor
inc
ret
mov
fmull
mov
pushf
push
xchg
sub
dec
mov
mov
cmpsl
mov
pushf
cltd
syscall
out
jbe
xchg
sarl
outsb
dec
xor
out
add
jmp
ret
pushf
and
jns
shll
scas
push
jp
ss
repz
and
inc
popa
lock
mov
push
pushf
push
mov
and
xor
icebp
cmp
and
inc
mov
ss
loopne
cmp
cwtl
or
movsl
rep
bnd
cmc
jl
lret
or
or
xor
jae
leave
cmp
xor
rorb
mov
xchg
pop
adcb
xchg
shll
cmpsb
push
inc
bound
mov
or
sub
popf
je
dec
jecxz
shr
sub
das
cmp
sub
mov
jge
dec
mov
sti
jnp
ja
daa
adc
lock
push
inc
pop
iret
mov
mov
unpcklps
xorb
int
mov
mov
xchg
and
or
xor
sub
inc
xchg
xchg
jbe
mov
mov
out
xor
cmp
lods
cltd
adc
insl
jge
in
in
cmp
aaa
fcomps
loope
inc
ss
and
addl
jno
cli
xchg
setge
mov
icebp
mov
lods
ds
pop
pop
or
insl
daa
out
iret
pop
mov
sti
dec
mov
insl
mov
jns
sub
mov
insb
jecxz
dec
pop
sbb
xlat
xchg
sub
sti
adc
sub
in
sub
cmp
mov
imul
and
sub
add
in
fnstenv
jae
dec
adc
mov
sub
fidivrs
fdivl
and
jo
loopne
std
mov
push
pop
push
push
sbb
and
pushf
inc
movsl
insb
add
rcl
loope
xchg
dec
aam
jp
es
cmc
pop
push
mov
aaa
push
test
dec
xchg
mov
fdiv
rclb
lret
inc
orb
and
dec
fnstsw
and
mov
inc
jbe
das
stos
imul
test
add
aam
sarl
jno
rcrb
sub
lds
mov
fldt
popa
ja
addr16
mov
pop
mov
fisttpll
pusha
sub
loop
pop
into
inc
mov
adc
gs
mov
aam
pushf
lods
mov
movl
leave
or
fcmovne
cmp
in
adc
mov
pop
loopne
xchg
xlat
popf
into
mov
mov
jle
push
pop
decb
outsl
xchg
jle
popa
add
dec
jbe
adcb
and
mov
mov
aas
push
pop
push
xor
xchg
stc
movsb
les
xacquire
push
mov
daa
jnp
jecxz
pop
xchg
icebp
cmp
repz
xchg
fadds
icebp
jnp
mov
daa
fyl2x
pusha
inc
mov
mov
mov
cld
scas
cmc
jle
test
add
push
xchg
pop
add
mov
outsl
popa
push
adc
jmp
mov
sbb
mov
repnz
nop
sarb
jbe
je
dec
push
shll
mov
out
leave
xchg
dec
sub
inc
stc
outsl
mov
loope
jl
lret
inc
js
mov
sub
mov
xor
add
loope
out
pop
mov
mov
or
xchg
dec
outsb
movsb
fs
xor
lret
in
mov
imul
stc
or
mov
dec
enter
inc
mov
arpl
xor
mov
movsl
inc
stos
push
xor
popa
lcall
in
sub
mov
not
or
mov
fcoms
jns
or
xchg
pop
cld
push
jmp
test
xlat
test
mov
pusha
in
stos
xchg
scas
lret
mov
xlat
pop
add
aam
daa
push
sbbl
es
cld
mov
roll
mov
scas
mov
push
daa
mov
inc
in
and
mov
outsb
xchg
imul
ja
addr16
cmp
push
jecxz
jmp
mov
cmp
leave
out
adc
pop
cmp
and
xchg
add
test
fucomip
je
js
testl
std
shll
out
mov
push
push
push
call
mov
imul
std
out
imul
xor
jmp
stc
add
sbb
in
pminsw
lods
in
frstor
pop
test
adc
sub
lods
dec
add
pop
push
xchg
cmpsl
adc
ds
stos
call
push
movsl
sar
out
sub
push
push
and
or
imul
ja
adc
xchg
call
sub
subb
add
push
loop
cmp
inc
sbb
subb
ret
test
mov
fsub
inc
adc
testb
fwait
sahf
fwait
cmp
adc
xchg
lods
gs
add
sbb
and
imul
out
daa
pop
push
dec
repz
scas
push
inc
cmp
pop
add
and
jnp
mov
pop
pop
pop
push
jp
jl
movsb
jle
shlb
jg
sbb
add
mov
pusha
mov
daa
les
adc
dec
xchg
xor
ja
sub
adc
push
popa
stos
addb
pop
add
inc
les
mov
mov
xor
lds
cmpl
das
xchg
js
fisubrs
ficomps
popf
sbb
xchg
or
xorl
xchg
cmp
aaa
mov
fidivs
mov
shrb
aad
and
or
mov
loop
push
int
bound
add
pusha
dec
rol
or
cmc
flds
sub
mov
xchg
mov
sub
rorb
in
movsb
jge
push
mov
insl
jns
stos
cmc
mov
into
xchg
sub
pop
xor
mov
sub
outsb
pop
add
mov
inc
cmpl
adc
pop
pop
popf
rclb
lods
or
add
xor
pop
ret
cwtl
mov
push
das
xor
dec
popf
mov
jp
dec
cmc
push
dec
enter
mov
cmc
mov
inc
pop
outsl
pop
cld
lcall
add
std
jecxz
mov
adc
and
lea
cltd
lret
inc
call
mov
adc
ljmp
and
pop
nop
pop
xchg
hlt
adc
insb
inc
push
or
inc
xchg
add
inc
push
pop
sarb
xchg
roll
sbb
jl
stos
pop
inc
ds
and
or
call
lret
push
mov
loope
divl
mov
std
inc
lahf
mov
in
pop
inc
push
insb
inc
mov
jge
sub
cwtl
xchg
andb
sbb
and
mov
xchg
lret
rorb
ret
gs
xor
xchg
daa
hlt
jmp
loope
mov
or
and
adc
rcrb
push
jmp
sbb
std
cmpsl
insb
stos
sbb
rcl
jge
push
leave
cwtl
into
dec
out
sbb
sti
aam
andb
lods
pushf
aam
cld
or
xchg
iret
xchg
clc
mov
xorb
add
push
push
test
push
or
jns
xor
mov
cmc
adc
push
mov
inc
lahf
push
push
and
movsl
sub
inc
aad
dec
push
push
adc
lcall
arpl
jge
test
sub
iret
dec
jae
andb
test
and
popl
xchg
ficoml
jo
mov
int3
lret
xor
dec
sub
rcl
ficompl
sub
xor
inc
push
sahf
movsb
mov
test
popf
out
or
pop
in
push
stc
enter
jbe
std
dec
cmpsb
enter
jnp
adc
pushf
jecxz
das
pop
mov
daa
rcl
jb
or
adc
stc
cltd
lock
push
or
loopne
rcrb
pop
fstpt
sbb
or
es
jmp
inc
jmp
cwtl
scas
inc
loopne
test
push
lahf
push
lods
shlb
outsb
xchg
mov
fdiv
inc
andl
mov
cmc
dec
ss
sub
xchg
fdivr
push
cs
shrl
popa
mov
pop
dec
cmp
adc
push
mov
pop
fimuls
add
repz
jge
mov
fs
test
imul
jge
pop
pushf
bound
mov
clc
jbe
add
outsl
inc
into
lods
rcrl
push
test
lcall
push
mov
xchg
mov
outsl
xchg
inc
pop
fcmovnb
cmpb
idiv
jae
in
aam
dec
xchg
jnp
rcll
mov
pop
cmp
jbe
fsts
mov
orb
inc
xor
cmp
mov
cmp
xor
fstl
dec
ret
jg
jg
jae
aaa
mov
subl
ficoms
xchg
fisttpl
int
sub
lcall
test
adc
jmp
mov
jg
push
pop
aas
mov
cmp
mov
inc
mov
in
push
mov
in
enter
gs
xchg
mov
xchg
inc
jae
scas
sub
adc
pop
push
adc
or
ja
push
and
icebp
and
test
loopne
push
jl
cmp
xchg
lods
cmp
in
add
cmpsl
fistpl
fstl
repnz
cmpsb
into
sub
repnz
cmp
adc
in
cmp
adc
sbb
cmp
nop
add
and
cmp
sbb
mov
mov
ja
sbb
or
rcrl
test
not
lret
sub
dec
pop
add
daa
mul
mov
in
nop
aad
test
in
enter
push
orb
lock
in
xor
push
jmp
aas
xchg
and
sbb
aam
xor
push
push
icebp
mov
xorb
jle
leave
or
push
scas
mov
dec
mull
xchg
imul
fnsave
mov
aad
jecxz
xchg
xchg
scas
mov
clc
andb
ficomps
testl
xor
rcr
pushl
clc
push
std
mov
ja
stos
in
add
jmp
scas
sub
mov
or
mov
in
inc
jo
cmp
fistpl
rorb
ret
repnz
std
test
cmp
cmc
outsb
icebp
sbb
jecxz
mov
dec
inc
scas
pop
sbb
cmp
rcll
push
push
cmpsl
lods
jp
scas
in
lods
sub
mov
mov
or
dec
mov
outsl
pop
cmp
call
sbb
push
inc
cmpsl
ds
addr16
jno
test
jae
sahf
pop
and
fists
mov
adc
dec
andl
xor
fimuls
mov
add
rcrb
iret
sar
inc
mov
out
xchg
xor
xor
fwait
imull
int
sub
fst
jb
lret
cmp
or
push
div
or
cmc
shll
jmp
addr16
mov
cmpsb
sahf
adc
jmp
pop
cmp
loope
fadd
jl
xchg
xchg
cwtl
cmp
or
call
mov
inc
int
sbb
push
data16
xlat
dec
mov
sub
or
inc
jns
cmpsl
pushl
das
stos
scas
hlt
mov
aad
dec
pop
lods
mov
xchg
stos
xchg
hlt
subl
push
sar
insb
repz
rcl
mov
mov
push
dec
push
int3
mov
aad
scas
shlb
cli
pop
mov
fists
addr16
dec
mov
inc
rcrb
mov
jbe
adc
outsb
mov
mov
jl
mov
adcb
call
sub
xor
dec
hlt
xchg
jg
stos
int
xor
and
arpl
mov
pop
xor
imul
adc
mov
jmp
dec
hlt
xchg
adc
cwtl
idiv
dec
stos
dec
out
adc
inc
add
add
cld
scas
fs
repz
adc
mov
jbe
popa
shr
jno
std
sbb
cld
cmp
into
xchg
lea
or
push
add
aaa
mov
stos
shll
es
jno
lcall
bound
scas
add
mull
int
mov
iret
jp
ljmp
js
ja
mov
enter
jns
pop
cmp
and
inc
jne
xchg
je
repz
jo
insb
shl
rcll
hlt
jno
aas
mov
pop
aam
or
hlt
jno
fld
aas
cmpsl
mov
nop
mov
mov
in
xchg
sub
lods
and
sub
push
sbb
ss
mov
dec
repz
sbb
mov
add
mov
mov
push
in
ss
cmp
repz
mov
xchg
addl
mov
and
mov
and
lds
cmp
sub
mov
loope
daa
dec
sub
test
outsb
push
push
jns
lahf
add
xor
mov
add
jnp
inc
and
mov
sti
lea
inc
mov
xor
test
adc
pop
lcall
popf
iret
dec
mov
xor
les
in
inc
jbe
stos
loopne
adc
fistps
das
cmc
shlb
dec
inc
xlat
scas
fisubrl
lret
mov
push
mov
in
icebp
hlt
jns
add
cwtl
pop
pop
jle
out
cmpsb
sbb
int
lds
and
sub
mov
adc
std
mov
rorb
cld
cmc
mov
adc
jae
stc
rcll
mov
jnp
add
inc
aad
mov
fdivrl
mov
arpl
in
outsb
pop
adc
cltd
icebp
inc
insl
mov
sub
xchg
je
xlat
mov
mov
and
push
ss
pop
cmpb
rcl
or
sbb
jg
mov
nop
aad
sbb
sbb
mov
scas
fmul
cmp
pop
push
xor
mov
dec
dec
das
stos
lods
inc
pop
push
fs
pop
rolb
pop
jne
int
cld
and
rcl
les
pop
cld
bound
inc
pop
sub
add
cmp
add
das
cmpsb
lock
lock
mov
add
out
push
and
mov
clc
mov
ror
dec
imul
stos
test
xchg
pop
ss
mov
fsubl
clc
or
jnp
gs
subb
sbb
push
iret
fistpl
xor
pop
mov
rcl
sub
je
xchg
mov
ficomps
sbb
jnp
dec
aas
lret
cmpsb
push
jge
dec
outsb
repz
pop
ja
inc
jno
pusha
cmp
cld
aam
jle
inc
mov
jnp
repz
rorl
lods
cmp
add
std
jg
push
aaa
scas
iret
or
sahf
or
push
push
notl
and
fnsave
outsl
jp
mov
lods
test
push
push
sbb
outsl
arpl
gs
mov
pop
mov
sub
mov
jae
inc
push
cmc
icebp
add
mov
insl
sub
push
mov
repz
sub
xlat
xchg
cmp
test
out
add
jns
icebp
shrl
outsb
pop
push
add
inc
insb
lcall
ds
jb
mov
push
push
or
sbb
add
sbb
pop
jno
pop
dec
rclb
add
fwait
jl
loop
xchg
into
add
sbb
push
fistps
jge
adc
mov
sub
out
inc
dec
sahf
mov
adc
movsb
das
iret
loope
mov
or
jmp
push
ret
lock
xlat
mov
mov
sub
pop
lods
out
shrb
fld
gs
test
dec
cmp
inc
es
xchg
lds
shrb
insb
stos
sub
in
add
ret
add
popf
sbb
enter
mov
xor
fisttpl
mov
sbbb
rorb
jmp
xchg
divb
subb
pop
lahf
adc
xchg
or
adc
or
pop
fldcw
and
cmc
imul
shll
test
inc
xor
jge
sbb
add
cmp
sbbb
jno
ss
scas
mov
insb
in
out
jge
fmuls
int
insl
insl
and
mov
stc
loopne
xchg
pop
movzbl
fninit
mov
mov
jge
jmp
cmp
fiadds
test
in
arpl
daa
jne
cmp
fwait
xchg
in
xor
mov
push
mov
and
mov
push
pop
clc
rcl
rcl
testl
sub
in
ret
pushf
imul
sub
lock
popa
popf
or
cmp
fcmovne
push
pop
mov
repz
push
pop
mov
sbb
dec
mov
dec
push
mov
push
aas
imul
out
mov
fmull
xor
hlt
mov
cli
cmpsb
adc
daa
fwait
push
or
sub
popa
push
into
test
gs
into
cmp
fucom
jecxz
push
sbbb
scas
push
aas
dec
adc
pushl
imul
mov
pop
sbb
popf
mov
int3
lods
stc
mov
push
mov
or
or
mov
xorb
xchg
into
or
test
cmpsl
cmpsl
cmp
inc
pusha
fistps
enter
rolb
xchg
dec
xchg
shl
arpl
shl
add
jno
pop
push
shlb
push
mov
int3
pop
outsb
cmpsb
and
sbb
shll
out
mov
dec
xchg
inc
cmp
xlat
orb
stos
mov
out
loopne
rcl
inc
in
fwait
mov
jmp
int
inc
jecxz
pop
xor
jnp
dec
stc
clc
jne
xchg
and
stos
mov
push
popa
addr16
scas
sarb
test
cmp
pusha
mov
stc
pop
inc
mov
xor
dec
cmp
lock
mov
aad
fwait
and
xchg
xor
add
imul
jne
pusha
sbb
jno
mov
loop
pop
pop
xchg
clc
test
lds
loop
pushl
iret
dec
and
loopne
out
add
int
ja
fsubrs
insb
dec
mov
insb
push
dec
js
sub
fcoms
pop
jecxz
fs
push
sub
lock
mov
xchg
push
out
leave
dec
lea
cwtl
adc
inc
sub
cmp
sub
shll
cmp
cmc
mov
inc
push
push
pushf
pusha
lds
ljmp
dec
inc
sub
cld
daa
and
movsl
aad
in
mov
jge
orl
loope
data16
mov
ret
jnp
add
test
aaa
inc
push
add
push
xchg
mov
jge
aas
mov
xchg
add
or
test
or
push
cli
add
mov
sub
fldl
xchg
dec
sahf
ljmp
ficoml
icebp
pushf
gs
fdivp
sbb
or
push
jnp
fadd
cmp
mov
aaa
dec
jno
dec
or
sub
outsb
push
loope
sub
mov
mov
pop
adc
test
fbld
xchg
push
movsl
push
push
sub
sub
in
ss
ds
xlat
push
sti
pop
xchg
test
out
pop
push
pop
cmp
pop
cmp
divb
xlat
push
dec
mov
fisubrs
addl
rorl
sahf
cld
inc
data16
iret
inc
dec
clc
or
aas
cmp
lods
rolb
mov
dec
adc
pop
into
xlat
fildl
mov
imul
mov
int
sbb
cmp
shr
jg
mov
inc
lcall
jl
bound
inc
aad
pop
cld
adc
out
aas
sbb
mov
dec
loop
pop
or
pop
push
addr16
push
scas
lahf
xchg
xchg
loope
cs
cmp
cwtl
and
push
pop
loop
mov
pop
rolb
negb
pop
fdiv
xchg
xchg
clc
mov
pop
popf
loopne
popf
push
into
push
push
xchg
mov
cld
mov
pop
adc
xchg
cmpl
sub
rcr
repz
jns
pop
pop
test
cmp
xor
aad
mov
scas
mov
add
jb
xor
mov
movsl
push
inc
roll
push
ds
sub
in
pop
pop
sub
repz
xlat
das
fdivl
sbb
jle
sbb
ja,pt
inc
and
cmc
int3
cmp
push
icebp
outsl
adc
test
out
sbb
xchg
jb
pop
in
adc
xchg
imul
jb
fwait
add
mov
sub
aas
dec
inc
sahf
pop
aas
das
xchg
fmuls
outsl
popf
inc
lock
xor
pop
mov
or
loope,pt
pop
mov
stos
inc
int
int
lods
inc
ret
out
lea
loop
add
sub
inc
dec
or
sbb
xchg
shll
adc
in
in
shlb
je
mov
mov
mov
push
cmp
jo
add
jno
sbb
aam
or
pop
sbb
das
cmp
in
ljmp
nop
leave
dec
dec
dec
xor
repz
jno
dec
mov
repnz
test
mov
push
lahf
dec
push
pop
mov
lea
pop
xor
push
sub
xor
orb
pusha
nop
mov
subl
lds
mov
push
jne
addr16
jmp
imul
xor
test
bound
add
xor
jae
push
jp
inc
pop
ja
sahf
mov
repnz
jl
jbe
adc
fmul
xor
repz
jns
out
jg
xor
jno
jno
fildll
mov
mov
daa
test
out
pop
push
popf
je
xor
mov
inc
mov
gs
fidivrl
test
jns
and
or
fwait
mov
outsb
iret
scas
push
jns
xor
movsb
and
jo
jb
pop
cs
add
or
adc
or
testl
ljmp
mov
test
dec
orb
jmp
push
cmp
iret
mov
jp
add
sti
into
and
sbb
or
xor
mov
in
cwtl
xchg
cli
aas
mov
leave
ret
daa
sub
sahf
sub
repnz
out
into
inc
pop
mov
rorl
test
data16
fiaddl
out
fmull
jns
pop
outsb
lahf
and
stos
mov
shr
lret
xor
mov
push
inc
mov
or
push
push
cmp
mov
enter
push
sub
dec
aad
jmp
or
lds
pop
mov
dec
lods
jge
pop
xchg
sub
jp
std
loop
jns
mov
adc
ror
in
orl
pusha
push
mov
jnp
dec
push
andb
adc
sub
sub
addr16
les
or
scas
mov
adc
ja
orb
notl
adc
jmp
clc
sbb
imul
mov
inc
jp
dec
dec
shll
cs
xchg
jns
sbb
test
aam
jns
dec
les
pop
inc
shl
pop
add
ljmp
int3
or
pop
pop
lods
test
stos
fsts
insb
shrb
fwait
outsl
lcall
les
int
dec
fsubrs
gs
orl
sub
fisttps
or
mov
jecxz
xor
and
jbe
push
loope
loop
sub
mov
sbb
cli
pop
je
pop
and
inc
pop
mov
sub
dec
test
xor
inc
movsb
scas
push
repnz
dec
mov
andl
clc
in
or
dec
jb
adc
push
loope
daa
das
fcompl
pushf
cmpsb
mov
stos
pop
sbb
insb
mov
ss
insb
and
sbb
pop
shrb
lods
sub
aas
pop
fstl
int
add
cwtl
pinsrw
iret
ds
xor
pop
adc
sbb
inc
in
repz
in
jge
mov
or
dec
inc
add
mov
jnp
xchg
xchg
adc
jmp
sbb
aam
pop
insl
cmp
xchg
mov
ficompl
rcll
dec
sub
movsl
fs
lea
sbb
or
jmp
or
pop
stc
adc
ret
into
jp
ljmp
jl
hlt
mov
out
fwait
stos
loope
cli
mov
lea
fwait
xor
int3
in
fucomip
pusha
mov
and
xchg
addr16
test
pop
and
insb
aaa
arpl
ja
adc
push
imul
jbe
inc
inc
push
hlt
jecxz
fstps
in
xor
mov
scas
or
lock
sbb
stc
movsl
and
enter
push
call
loopne
sub
push
mov
jg
jno
shrl
adc
sahf
iret
fcmovnb
xor
mov
sti
arpl
adc
out
jae
and
sub
lock
jae
or
mov
jno
cwtl
xor
nop
pop
ja
pop
mov
lods
mov
pop
sbb
push
sub
dec
mov
daa
and
les
inc
shll
or
mov
or
test
mov
lds
and
daa
loope
push
mov
fidivrs
insl
push
mov
lret
mov
mov
dec
mov
mov
jg
and
inc
aas
jno
pop
dec
pop
pop
nop
mov
ja
imul
sub
jmp
fstl
mov
add
dec
mov
fistps
in
and
pop
sub
lods
mov
jae
pushf
mov
mov
in
jns,pn
ss
add
cmp
jle
mov
mov
out
push
in
popa
test
adc
sbb
sbb
and
cmp
in
inc
inc
and
push
sbb
mov
jae
out
sbbb
dec
push
dec
pop
pop
std
pusha
ljmp
cld
xchg
imul
mov
sti
cwtl
or
pop
cmp
cld
dec
pop
xchg
mov
int
mov
clc
and
aad
mov
mov
and
icebp
enter
mov
cli
fdivrl
cmp
pop
imul
push
fcompl
jo
repnz
jno
sub
xor
sarb
fcoms
inc
pusha
jne
imul
pop
fsubrs
cltd
adc
cmp
faddl
push
ret
mov
add
xchg
outsl
push
dec
iret
flds
rorl
outsb
outsl
lds
sahf
push
ss
outsl
mov
js
sub
dec
xchg
mov
rcrb
lods
arpl
inc
dec
jb
scas
cmp
lock
xor
ljmp
ret
mov
mov
cmp
call
xchg
inc
jo
pop
mov
sar
cmpsl
push
inc
dec
mov
ljmp
stos
cltd
in
xor
and
pop
inc
popa
push
jl
adc
es
adc
or
mov
das
out
jne
jg
test
mov
cmp
daa
jbe
mov
hlt
or
sbb
inc
and
pop
cltd
sbb
ret
outsl
jae
arpl
pop
adc
and
lea
popa
sbb
out
mov
cmp
adc
mov
daa
jnp
daa
out
lds
test
sbb
mov
rorl
jg
dec
into
and
mov
jmp
or
add
mov
stos
pop
mov
xor
and
pop
mov
xlat
sbb
cmp
pop
ficomps
iret
fwait
inc
sbb
jns
sahf
sbb
add
cmc
jae
xchg
pop
sub
arpl
testb
or
cmp
jns
xor
or
mov
xor
fcoms
mov
dec
adcl
push
lock
xchg
inc
sub
jge
sti
inc
xchg
mov
pop
inc
mov
out
incb
incl
mov
aam
jo
cmc
js
iret
loope
jl
xchg
and
scas
enter
xchg
xor
or
outsl
jg
outsb
into
ret
loop
movsb
jne
add
dec
jno
mov
aam
aad
push
aam
cmc
ljmp
out
sahf
lret
cmp
add
fcomps
aas
mov
lock
push
mov
pop
xchg
jp
pop
pusha
daa
mov
fsubr
in
mov
cli
pop
or
jnp
push
stos
mov
call
add
sbbb
scas
sbb
pop
scas
or
sbb
add
adc
in
stos
into
jp
push
xlat
outsl
rorl
std
xchg
push
mov
and
sar
jno
mov
mov
bound
xchg
sti
cmc
xor
dec
nop
inc
push
lret
rol
mov
cltd
pop
shlb
cld
lock
adc
mov
je
sbb
imull
insl
into
inc
xchg
ljmp
adc
cmpsb
mov
repz
sarl
jns
add
js
lret
fistps
jmp
leave
mov
push
mov
dec
inc
lahf
inc
clc
xchg
rclb
mov
push
adcl
fstpl
sbb
insl
xchg
pop
push
dec
jns
out
inc
or
out
xchg
cmpsl
push
gs
lcall
xchg
and
sbb
fiadds
popa
out
flds
cwtl
add
adc
das
sub
test
lock
mul
and
jae
and
push
cmp
clc
add
mov
scas
jbe
mov
daa
mov
mov
mov
push
arpl
incl
cwtl
aad
out
mov
cmp
out
jl
pop
cltd
jl
push
add
sbbl
lret
xor
aas
das
add
add
push
fistl
sahf
push
outsl
inc
imull
stos
sub
cwtl
pushf
mov
aaa
mov
mov
in
pop
movsb
fistl
inc
and
mov
filds
adc
xchg
jp
pop
xor
test
or
and
mov
sbbb
or
xchg
mov
loop
scas
mov
ja
sub
cmpsl
divl
add
jnp
xlat
mov
es
adc
add
scas
iret
lock
fwait
cmp
dec
lea
fdivrl
xchg
sub
daa
cltd
stos
cwtl
inc
pop
or
in
dec
mov
push
push
int3
dec
lcall
xor
vmptrld
add
test
jecxz
fstl
imul
dec
loop
sub
loope,pn
ss
xchg
insb
nop
cmp
pop
test
jmp
scas
sub
xchg
ds
testl
adc
nop
out
pushf
fucom
fldenv
pop
aaa
mov
cmp
aas
popa
jnp
cmp
fisttps
dec
mov
fsubr
scas
sub
icebp
dec
aad
loop
es
test
mov
jge
ret
mov
cli
cmpsb
inc
nop
sbb
xor
add
xchg
push
dec
pop
and
jnp,pn
mov
lds
push
add
pop
jle
and
insl
arpl
push
insl
dec
xchg
sbb
inc
jg
pop
movsl
std
mov
mov
jg
dec
push
inc
jbe
sbb
and
xchg
test
sbb
movsl
call
outsl
outsb
inc
stos
iret
xlat
push
ljmp
into
mov
repnz
jmp
mov
fisttps
aam
pushf
lcall
mov
adc
int3
cmpsb
xchg
aas
fs
sahf
jae
pop
cmp
sbb
insl
std
push
es
ret
cmp
icebp
mov
arpl
pop
mov
mov
mov
xor
inc
lret
fidivs
call
or
cld
mov
mov
cmpsb
jnp
test
jmp
lds
sti
mov
fisubs
mov
fnstenv
fimuls
mov
jns
cwtl
lret
fidivrs
xchg
les
lret
and
sbb
sti
outsl
jecxz
xor
aad
sub
sbb
mov
fs
inc
daa
pop
fidivrs
into
xor
popf
push
cmp
in
int
xor
scas
aaa
jnp
dec
pop
sti
dec
jp
shl
inc
outsl
mov
leave
xor
sahf
mov
sbb
fcoml
inc
push
jb
xor
shlb
lret
xor
xchg
imull
dec
sbb
cmp
jno
dec
js
pushl
adc
orb
adc
mov
mov
sbb
mov
and
xor
mov
popf
lcall
mov
daa
loopne
fmull
icebp
in
in
mov
cltd
lods
aas
rolb
jnp
add
adc
scas
popf
dec
push
shrb
pop
loop
pop
jmp
rolb
mov
ds
ds
jp
pop
es
jp
mov
cmpsb
mov
push
in
inc
shll
mov
subb
popf
enterw
repnz
or
pop
out
aas
or
add
sub
test
imul
subb
aas
data16
pop
mov
mov
inc
sbb
nop
inc
lret
inc
sbb
dec
and
sbb
fstpt
xchg
dec
popa
sub
das
sbb
hlt
xchg
into
xchg
ja
rorb
fistps
dec
testl
dec
sub
pop
mov
arpl
inc
or
pop
int
inc
ret
scas
sub
in
fistps
mov
xchg
dec
dec
arpl
stos
push
sbb
jle
in
xchg
sbb
movsl
or
xchg
aas
inc
push
lods
pop
dec
xchg
cmp
cld
inc
in
ret
pop
cli
jmp
push
cli
lock
add
pop
fdivs
lock
adc
mov
pusha
filds
cld
sbb
push
int3
sub
bound
jl
lock
das
add
or
sub
loopne
inc
mov
mov
or
loopne
or
call
les
xor
js
inc
out
ret
push
icebp
out
mov
cmp
or
int
test
lea
icebp
iret
sub
repnz
inc
jno
ret
xchg
xor
std
xchg
jl
dec
mov
mov
or
out
cmp
popf
je
xchg
scas
movsl
ja
and
xchg
pop
sub
dec
mov
mov
jecxz
imul
pop
std
outsl
inc
jae
mov
pop
and
mov
mov
inc
or
and
cmpsb
sbb
xchg
mov
mov
sub
int
inc
push
mov
mov
adc
adc
and
test
dec
mov
bound
mov
add
mov
pop
mov
iret
xor
sahf
mov
scas
xor
xchg
and
xchg
loopne
cmp
cld
pop
test
aam
sbb
sub
and
lcall
cmp
pop
sahf
test
or
mov
sbb
ds
jno
mov
mov
mov
movsl
mov
dec
incb
sbb
and
cld
inc
mov
cltd
xor
in
sub
cltd
nop
in
nop
jp
repnz
pop
jecxz
and
xor
mov
inc
rclb
sarb
mov
or
jle
out
mull
pop
loop
add
clc
out
outsb
lock
jl
fisttpll
mov
inc
sub
and
mov
jmp
push
cmp
ret
dec
mov
xchg
rcrb
ss
mov
xlat
cli
fdivl
cmp
or
push
lcall
mov
int3
dec
cmpsl
loopne
scas
cmp
mov
sbb
push
add
pop
push
xor
mov
jb
dec
cmp
sub
cli
aaa
movsl
adc
test
lods
and
sub
sub
loope
xchg
les
xchg
or
pusha
insb
lret
fcompl
enter
push
aad
jae
mov
mov
jl
ja
cmp
ljmp
push
stc
outsl
in
sub
inc
mov
mov
dec
add
mov
insb
ss
cmpsb
mov
fsubs
shll
inc
pop
dec
push
mov
or
mov
cmc
or
lods
dec
sbb
or
cltd
fidivrs
mov
cltd
jle
fbld
stc
pop
test
shll
mov
rcrb
mov
insl
xlat
popa
xor
xchg
fisttpl
inc
dec
sti
popa
and
mov
and
les
jbe
stos
ss
cmp
lahf
psubsb
mov
cwtl
xchg
stos
dec
push
scas
push
jae
xor
push
mov
mov
sar
daa
lds
outsl
cmp
inc
add
fldl
jl
scas
ret
mov
pop
out
cltd
inc
incb
int
adc
inc
lret
imul
enter
and
in
jo
pop
mov
out
cmp
add
in
mov
xor
fwait
push
mov
ret
popa
das
push
gs
rol
fistps
dec
pop
adc
faddl
and
xchg
mov
shlb
and
test
imul
mov
push
aad
sub
and
jle
cmpsb
dec
cpuid
ja
in
outsb
stc
fidivrl
fisttpl
and
push
jo
jge
bound
mov
jg
ljmp
sub
sar
lea
cmpb
xchg
imulb
out
leave
cmp
pop
or
sub
xchg
pop
pop
bound
aas
jmp
call
fwait
mov
xor
fwait
xor
sahf
push
mov
xchg
aaa
test
fs
or
jo
mov
movsb
addl
mov
lcall
sub
pop
adc
add
movb
fnsave
or
aad
jmp
fcoml
cwtl
push
outsb
mov
mov
xchg
inc
bound
movb
fsubrs
or
orb
lods
lock
jae
inc
ja
movsb
push
xorb
mov
sub
stc
fwait
lret
dec
insl
jp
movsb
lcall
mov
out
cmp
xorl
and
dec
mov
int
jb
mov
adc
data16
push
add
fisubrs
xchg
inc
dec
ret
jnp
or
push
sbb
sub
adc
fmuls
pop
inc
xchg
idivl
xlat
cli
inc
or
lds
in
xlat
jne
or
iret
jae
xor
xlat
roll
push
andl
into
sub
sub
ret
movsb
mov
negb
dec
add
jp
daa
sbb
cwtl
int3
outsb
mov
shlb
in
mov
pop
jecxz
imul
sub
repz
or
jmp
mov
xchg
inc
shlb
inc
jne
mov
xchg
mov
sub
aaa
idivl
pop
daa
scas
push
adc
or
repz
aaa
or
push
mov
ss
and
aam
mov
mov
mov
dec
fsubl
out
loop
pop
mov
rcr
inc
inc
aas
sbb
dec
jbe
mov
adcb
push
rol
or
stos
or
fs
icebp
loop
inc
fildl
fldt
aam
shll
jle
sub
cs
pop
in
scas
test
pushf
fstl
loope
fsubp
call
movsl
fldl
cwtl
dec
cmpsl
add
sbb
and
insl
inc
inc
cmpsl
cli
fsubs
jecxz
fistpll
push
popf
mov
cmpb
in
orl
jno
insl
lahf
jo
les
cmc
mov
mov
scas
popa
or
xchg
fldl
xor
in
nop
sub
in
jmp
pop
in
test
or
inc
inc
aam
insb
insb
fisubs
jbe
lds
into
xchg
cmp
jne
aas
cmp
mov
add
lret
js
mov
adc
lock
js
lahf
push
mov
xor
das
cmp
xchg
xchg
out
fcmove
jmp
mov
mull
aaa
inc
sub
push
cmc
pop
jb
fiaddl
inc
rorb
push
xor
mov
push
jl
sub
ffree
cmpb
call
inc
ljmp
leave
mov
push
xchg
hlt
jne
and
ss
fstpl
insb
mov
push
mov
movsl
mov
ja
push
in
sbb
lahf
mov
mov
cmp
mov
stos
jecxz
stc
ret
pushf
add
xchg
mov
fsubr
jge
adc
ret
sub
add
sub
fs
adc
adc
xor
mov
pop
sbb
into
xchg
lret
and
fcmovnbe
imul
lds
jo
push
sub
dec
cmp
lcall
xlat
jmp
inc
xor
loopne
fcom
sbb
dec
push
jle
ja
aaa
pop
das
cmpsl
nop
pop
icebp
out
scas
cmpsb
outsl
iret
jmp
clc
movb
xor
cltd
icebp
jb
out
cmp
loop
stos
hlt
dec
mulb
jbe
dec
std
sub
jl
push
cmp
inc
jl
inc
shr
das
test
mov
es
rcll
mov
mov
jno
cmp
add
gs
fldl
mov
or
in
mov
mov
cwtl
jb
popa
inc
xchg
mov
cmp
mov
sub
pop
lods
push
lds
stos
lods
inc
fld
stos
inc
jmp
and
cmp
fcompl
hlt
shl
xor
mov
jae,pn
ret
push
dec
inc
cs
rcrl
nop
and
ljmp
cmp
push
je
pushf
scas
lods
pushf
fmuls
lea
xor
xchg
push
loop
mov
mov
or
jecxz
sbb
jo
in
or
repz
xor
pop
pop
xchg
sbb
in
leave
pop
lods
icebp
lods
in
jge
pop
push
ret
and
mov
add
or
inc
xor
mov
cmp
push
movsb
adc
pop
mov
mov
dec
insl
mov
jne
fdivrl
int3
xchg
sbb
inc
test
or
movsl
inc
in
pop
faddl
call
fsub
daa
xlat
push
dec
loopne
add
xorl
out
sbb
lods
add
xchg
mov
cmp
sahf
adc
cli
xor
cmpb
jmp
pop
aam
adc
mov
das
jne
jl
mov
addb
ja
adcl
mov
add
jnp
jg
xor
outsb
sub
push
test
xchg
add
push
clts
add
jnp
subl
mov
or
ljmp
mov
cmp
and
psubq
stos
in
jbe
cli
sbbl
pop
pop
setns
int
xor
push
loope
notb
xor
orl
cmpl
sub
out
test
pop
xor
mov
mov
push
jb
xchg
jle
xchg
add
mov
sub
test
jne
or
out
mov
hlt
enter
jo
cltd
fsubp
pop
push
lahf
pop
fdivl
xchg
imul
sti
mov
cmp
mov
pop
leave
dec
scas
sahf
mov
into
lods
insl
inc
xchg
mov
jno
stc
cltd
xchg
push
dec
xor
dec
xchg
xchg
pushf
and
jp
mov
dec
das
jmp
shl
icebp
ljmp
or
xorb
pusha
push
mov
adc
adc
mov
jge
in
xor
jecxz
push
jbe
add
xor
xchg
ds
push
loope
push
xchg
mov
lcall
rorb
cmp
xchg
adc
xor
push
xor
mov
fwait
stos
fcoml
pop
xor
xor
xchg
iret
scas
out
dec
adc
int
mov
ljmp
cmp
sbb
ss
repz
or
mov
dec
movsl
pop
sarb
inc
ljmp
jp
add
cmpsb
push
stos
cltd
cmp
ja
lods
or
mov
imul
mov
aam
pop
fmuls
push
push
xchg
jns
sub
cli
mov
pop
sbb
add
mov
or
sbb
xchg
loopne
rclb
mov
pop
jnp
jg
mov
mov
out
pop
in
mov
out
imul
sbb
out
mov
in
jae
pop
leave
shll
inc
sub
mov
popw
cmc
fstpl
aaa
jecxz
shlb
sub
lcall
lret
or
nop
pop
adc
sbb
inc
pcmpgtd
inc
addr16
scas
lret
pushf
cmp
cmp
pusha
fidivs
outsl
and
mov
cltd
mov
mov
int3
popa
iret
rorl
fnsave
cmc
push
jle
inc
xchg
in
mov
loop
xchg
es
loopne
es
sub
jp
popa
and
mov
adc
push
lret
jg
ret
outsb
das
repz
adc
xchg
enter
aam
or
mov
pop
mov
xchg
adc
push
lods
sub
scas
add
pop
jge
bound
jo
mov
aam
popl
es
pusha
mov
mov
mov
loop
sbb
ret
sti
xchg
les
xchg
inc
pusha
add
mov
fneni(8087
dec
pop
pop
pop
cs
push
sub
sbb
lret
xchg
loopne
xchg
inc
mov
in
or
mov
xchg
dec
clc
dec
dec
pusha
mov
rolb
xlat
clc
in
fnstsw
or
dec
jecxz
fwait
add
stos
insl
push
mov
add
pop
push
cmp
cmp
mov
push
jmp
sub
inc
outsb
inc
dec
push
pop
fildll
sbb
iret
pusha
inc
jle
lea
jecxz
dec
or
jns
mull
mov
mov
jmp
mov
ret
add
rcr
stos
pusha
aad
je
and
add
add
pop
add
lret
add
stc
call
xchg
pop
pusha
cld
mov
push
in
stos
push
out
mov
test
jnp
scas
cmp
and
mov
xchg
mov
imul
popa
add
stos
mov
pop
inc
mov
pop
sub
out
mov
ss
cmc
push
add
or
fnsaves
inc
bound
aad
mov
jge
and
je
mov
clc
add
sahf
outsb
xchg
or
mov
inc
bsr
sbb
movsb
sbb
mov
scas
loop
xor
jge
pop
xor
or
mov
stos
aas
mov
cmpsb
dec
pop
cmp
scas
andl
inc
mov
mov
test
mov
mov
fwait
pushf
adc
lahf
insl
push
loopne
fdivrl
cs
inc
xchg
aas
setne
xchg
in
or
push
sbb
mov
sahf
decl
fidivl
add
inc
mov
cli
je
out
push
sub
sahf
out
fdivrl
xor
hlt
aaa
repnz
add
in
cmpsb
flds
pop
les
mov
xchg
sub
mov
fdivl
lahf
xchg
scas
outsb
sbb
mov
mov
stos
mov
adc
in
sbb
sti
mov
scas
lea
cld
add
enter
mov
out
andb
sub
sbb
jge
iret
shrb
shrb
in
sbb
jle
xchg
mov
jbe
callw
rcll
into
xchg
lret
mov
inc
add
pop
lahf
shlw
pushw
mov
int
pusha
cmp
inc
fidivrs
mov
int3
mov
inc
cmpsb
xchg
pusha
rolb
sub
sbb
add
ss
rol
fisubrl
sbb
into
and
cmc
mov
mov
fdivrs
ljmp
mov
or
ljmp
xor
cmp
and
aam
add
in
xchg
shll
jbe
hlt
mov
dec
push
aas
insb
bound
jle
fcomp
inc
mov
inc
test
add
cmc
mov
bnd
fadd
cmp
pop
aad
pop
mov
dec
push
mov
jl
mov
pusha
xchg
sub
sub
push
xor
in
cmp
jl
mov
sahf
add
adc
jecxz
out
movsb
cmpb
jg
testl
out
xor
sbbl
pop
pop
lock
rclb
int
dec
cmp
lcall
dec
sub
push
sarl
add
adc
jae
test
xchg
mov
fildll
icebp
jl
movsl
cmpsb
les
sbb
push
rol
loop
push
in
and
cld
and
xchg
repnz
mov
dec
xorb
mov
mov
and
cmp
mov
jns
xor
xchg
push
push
pop
mov
push
rcll
cld
push
cli
add
mov
pop
clc
or
pop
jnp
call
jo
enter
js
rcl
xor
lods
sbb
ja
ljmp
repnz
xchg
inc
sub
push
mov
cmpsl
jle
mov
mov
ljmp
xor
sbb
fistl
dec
or
lahf
pop
inc
int3
or
movsb
cmp
fimuls
test
adc
xor
imul
and
adc
std
negb
lods
jl
inc
sub
mov
mov
or
repz
mov
movsl
jge
inc
insl
adc
jmp
dec
jo
iret
or
psllw
nop
sbb
fnop
push
push
fcomip
mov
sti
mov
cmc
xchg
repz
push
pop
jbe
xchg
sbb
bound
cmp
pop
shrl
xchg
leave
cmp
lret
inc
cmp
fldt
pusha
pushf
fldcw
pop
lods
lcall
mov
mov
xchg
mov
xor
sbb
out
roll
notl
pop
in
fwait
in
es
xorb
mov
inc
insl
cwtl
add
addr16
mov
rorb
cmp
mov
dec
pusha
jle
add
sub
and
inc
jbe
addb
dec
lret
inc
pop
subb
shrb
fisttps
sub
rcrl
es
and
fisttps
dec
scas
and
rolb
shll
lds
mov
cmp
cmp
fsub
xor
sub
cli
cmpsl
outsb
sub
icebp
inc
push
mov
leave
cld
rorl
sarl
adcl
adc
js
push
addr16
mov
leave
data16
dec
popf
push
mov
pusha
lahf
cmpsl
mov
or
xor
sub
rol
push
mov
dec
push
sbb
aam
ja
sbbl
rcrb
inc
mov
out
push
aam
jnp
aaa
mov
movsl
mov
leave
xlat
or
jg
fdivrl
dec
es
adc
mov
push
pop
and
mov
jno
pop
das
les
lea
arpl
push
xor
out
aas
jb
out
adc
sub
imulb
lock
pop
inc
in
pop
das
sarl
push
cmpsb
icebp
popf
xchg
sti
xchg
and
icebp
arpl
mov
push
push
mov
adc
bound
bound
out
repnz
scas
mov
sti
cmp
mov
out
aam
incb
out
cmp
bound
fcoms
mov
pop
pop
ret
daa
in
mov
xor
jp
lods
mov
push
test
sbb
add
mov
push
dec
ret
xchg
sub
mov
sub
xchg
mov
cwtl
xchg
aas
lods
and
stc
push
and
popa
inc
dec
inc
fldt
jge
lea
sbb
das
push
xchg
jl
ss
pop
test
aas
pop
jbe
mov
mov
repz
decb
dec
add
incl
xchg
mov
mov
mov
mov
scas
xchg
adc
push
je,pt
jo
loopne
sbb
adc
push
insl
cmp
sub
mov
in
dec
xor
mov
jle
push
xchg
push
add
test
pop
enter
shll
fwait
mov
stos
rclb
dec
push
xor
mov
or
jb
out
stos
nop
mov
rcrl
and
sub
out
int
push
adc
mov
mov
push
cmp
fimull
dec
shr
insl
cmpsl
jnp
subl
mov
fdivl
lret
xchg
pop
test
sub
and
repz
or
sbb
data16
push
orl
jle
stos
jb
test
into
sbb
inc
add
pop
xchg
push
arpl
xchg
ror
pop
popa
aas
pop
mov
ss
or
or
or
loop
cmp
adc
pop
lahf
dec
sbb
jbe
outsl
fcomps
mov
clc
inc
loop
lea
mov
mov
xor
jmp
mov
sbb
je
stos
adc
test
and
mov
push
push
mov
shr
in
adc
or
mov
or
cltd
mov
punpckhbw
sub
mov
mov
mov
sahf
dec
lods
mov
lahf
outsb
and
test
aad
fs
sbb
jne
mov
pop
mov
sbb
dec
xchg
inc
sbb
fstps
shl
fisubl
adc
adc
xlat
mov
ljmp
int
jl
mov
outsl
push
sbb
xchg
mov
iret
fwait
cmpl
mov
sbb
pop
shlb
lcall
jmp
jecxz
mov
les
aas
inc
dec
dec
sbb
inc
xlat
loopne
and
lret
out
jbe
jnp
jne
daa
pop
jb
sbb
or
or
dec
add
or
push
cmp
test
mov
mov
adc
push
adc
add
dec
and
ds
adc
adc
mov
lods
push
std
xchg
mov
lea
and
sbbl
lret
ficomps
sbb
sti
fisubrl
inc
enter
or
dec
outsb
cmp
and
xor
mov
not
int
lret
lcall
lret
inc
movsl
clc
lret
cmp
push
cltd
fdivs
sti
mov
jg
sbb
add
enter
xchg
push
jnp
xchg
in
push
in
push
or
sarb
hlt
jae
mov
cmp
out
popa
aam
loope
cmp
test
sbb
inc
mov
dec
jo
add
aas
inc
dec
fmuls
xchg
push
shlb
fxtract
in
fs
mov
push
mov
pop
or
cltd
or
sbb
mov
sbb
jo
ja
test
stos
sbb
fcoml
dec
in
mov
cli
rclb
addl
out
bound
cmp
push
dec
fdivl
arpl
pop
popa
sbb
xlat
sti
in
mov
fimuls
xchg
jae
inc
pop
decl
enter
xor
push
mov
xor
mov
sahf
lods
arpl
sbb
dec
lahf
sub
xor
loope
mov
xor
adcb
jg
insl
sub
jno
add
or
jb
xor
adc
fisubrl
mov
pop
sbb
adc
inc
push
pop
cmpsb
divb
stos
mov
daa
addr16
pushf
enter
cs
call
xchg
pop
mov
mov
lods
mov
push
xchg
pop
out
jl
in
movsl
jns
dec
fisttpll
xlat
loope
pop
xor
iret
mov
xchg
lcall
test
pushf
add
rorl
sub
nop
add
lcall
lea
pop
popf
pop
xchg
add
das
pop
pop
jnp
cmpsl
sbb
jmp
xchg
mov
pop
mov
loopne
mov
xchg
rcl
fneni(8087
jnp
inc
mov
fistpl
inc
ja
fiaddl
add
es
filds
adc
xor
outsl
icebp
push
repnz
mov
add
out
repnz
sbb
clc
repz
push
jb
sbb
movsb
lods
jle
std
cmp
test
xchg
lret
fmull
pop
mov
cs
jmp
jne
nop
jne,pt
lahf
inc
jbe
je
fisttps
or
jnp,pt
xor
mov
out
cmp
fnstcw
ret
mov
je
adc
and
rorb
out
add
fucomi
xchg
negb
or
push
mov
out
jb
inc
sbb
insl
in
sbb
inc
sbb
insl
lods
mov
push
inc
xor
xchg
andl
pop
sub
push
jbe
gs
int
es
inc
fcoms
push
add
xchg
fcoml
mov
mov
std
pop
adc
enter
lock
mov
cmpb
jne
xchg
popf
xchg
enter
inc
mov
shll
sbb
cmp
fsts
jns
fimuls
mov
ja
insb
mov
mov
iret
cltd
ret
imul
lret
pop
mov
loopne
jne
or
dec
in
rcrb
mov
scas
mov
outsl
outsb
mov
xchg
repz
mov
add
stos
insb
pop
int3
out
dec
test
or
dec
and
inc
add
rol
xchg
mov
mov
jae
sbb
xchg
rcll
sbb
inc
mov
pop
xchg
mov
or
scas
mov
xchg
pop
repz
mov
loope
cmc
add
lods
jnp
pushf
popa
sti
push
cmp
aaa
fbstp
mov
test
adc
fmulp
les
mov
popf
mov
mov
sti
daa
mov
outsb
stos
test
sbb
and
inc
or
fdivp
and
add
inc
movsb
mov
test
ficompl
imul
imul
popa
push
adc
xor
repz
mov
sahf
loop
aaa
loopne
repz
inc
xor
mov
pop
outsl
test
mov
in
out
sub
pop
out
jle
fdivrs
mov
ss
sbb
adc
mov
sbb
fidivrl
es
jecxz
jns
push
imul
movsb
roll
outsl
lret
andb
mov
fsubs
jecxz
or
fnstcw
out
mov
pop
pusha
cli
sub
inc
clc
lcall
push
mov
xchg
cwtl
pop
out
lods
int
shll
lock
xchg
and
push
and
jp
and
test
es
push
xchg
addr16
mov
pop
in
vmwrite
mov
int3
mov
stc
daa
sahf
pop
daa
mov
jnp
jg
fucomp
arpl
rol
mov
in
sub
inc
adc
mov
jne
mov
xchg
push
in
jmp
pop
mov
ss
pop
ds
mov
sbbb
pop
jne
in
cli
repz
sbb
sbb
pop
adc
in
mov
shlb
pop
repz
mov
js
push
rep
sub
sbb
movl
adc
fstpt
test
pop
popf
iret
cli
iret
xchg
lcall
pop
jecxz
cmpsb
add
inc
insl
and
push
daa
sti
dec
pop
inc
cmp
jge
and
shlb
sbbl
arpl
fstpt
sub
hlt
sub
and
arpl
fadds
sbb
push
and
adc
push
pop
push
mov
out
sub
fistpl
mov
xlat
jmp
dec
xor
mov
int
gs
sbb
in
dec
insb
xchg
movsb
ret
jmp
fsts
mov
xchg
lret
movsb
cmp
mov
or
or
fs
and
inc
push
pusha
aas
push
jmp
mov
fidivrs
push
add
push
xor
cltd
orb
cmpsb
popf
add
push
sub
out
loope
sbb
mov
cld
jge
sbb
pop
jg
xor
pop
das
sub
push
adcl
iret
sbb
xchg
push
out
dec
adc
mov
stc
sub
insl
and
leave
ret
mov
push
add
mov
push
mov
fucom
insb
cld
pop
jmp
inc
inc
xlat
mov
mov
and
push
fsubs
xor
push
in
and
jo
shlb
mov
sbb
cwtl
cmp
das
outsb
push
mov
pop
pop
aad
add
lea
inc
dec
mov
insb
jne
les
xchg
xor
inc
cmpsl
sub
jge
push
push
inc
mov
mull
mov
adc
lahf
xlat
jb
or
cmpl
inc
xor
push
sbb
sub
or
out
cmp
es
out
push
xor
fists
pop
sahf
push
aam
popf
lret
pop
jns
fs
dec
aad
or
adc
dec
pop
lock
jae
addr16
sbb
rclb
lahf
pop
sub
sbbb
popf
dec
cmc
mov
dec
and
xchg
xchg
pop
lret
jge
push
xchg
add
adc
xchg
outsb
addr16
out
push
inc
xor
outsl
cltd
shr
jge
stos
cmp
jo
push
inc
stos
mov
repz
shl
and
cltd
adc
inc
ret
dec
stc
ja
ret
fadds
xchg
pop
xchg
int3
adc
push
pop
push
insb
cmc
rolb
fs
in
lds
fscale
das
pop
dec
or
rcrb
jecxz
imul
xchg
jl
sbb
ficomps
xchg
shlb
add
jmp
fcomp
shl
scas
hlt
dec
sbb
scas
enter
add
dec
fidivrs
push
lcall
cli
mov
adc
stos
sbb
lcall
arpl
js
rcrl
jbe
push
out
sub
mov
mov
clc
adc
mov
pop
dec
sarl
loopne
inc
mov
sub
sub
fsubrs
pop
cmpsl
popf
movsl
or
or
or
dec
mov
jg
imul
or
jmp
iret
test
loopne
push
addl
cmpsb
les
or
fisttpl
rorl
aam
dec
inc
fs
out
jge
inc
cltd
cmp
test
mov
rclb
jae
loope
or
push
leave
jmp
mov
jb
cmp
xlat
outsb
insl
jae
lods
xchg
pop
sbb
outsb
stc
or
push
decb
repz
sbb
popa
sub
xchg
pop
and
and
cmp
adc
pop
xor
sbb
adc
mulb
push
push
sahf
decl
or
mov
bound
clc
xchg
imul
addb
mov
xchg
and
inc
or
cmp
pop
fmuls
movsb
std
inc
inc
push
iret
fnstenv
lret
loop
push
in
rcrl
sbb
hlt
orl
xor
addr16
sbb
cmp
adc
push
add
sbb
in
sbb
jmp
sub
in
cmp
sub
pop
xchg
cmp
test
adc
nop
push
popa
loopne
loope,pn
inc
outsl
pop
gs
or
xorl
sub
dec
int
and
pop
pop
or
push
jge
push
ljmp
mov
mov
cmc
xchg
daa
lods
sbbb
in
call
xchg
ret
fidivl
lahf
inc
sbb
stos
loopne
and
paddq
mov
inc
mov
aad
add
add
mov
cmp
mov
scas
push
inc
mov
shl
xorl
or
iret
and
xchg
outsl
mov
popf
lock
add
push
or
xchg
xor
lahf
repnz
jmp
adc
adc
inc
and
scas
mov
push
sub
jg
out
fmull
add
inc
xchg
lods
scas
fxch
ljmp
ret
dec
pop
push
dec
mov
cmp
xchg
mov
cmovl
lods
iret
or
jno
iret
insl
lock
pop
mov
mov
out
cmp
pop
xchg
sub
cmp
nop
test
test
dec
push
aas
jge
jp
je
imul
push
adc
aad
notl
adcl
xor
pop
or
imul
das
in
push
jns
adc
test
pop
sbb
adc
loope
pop
daa
fs
iret
push
inc
loop
cmp
sbb
push
inc
mov
outsb
rcll
lahf
rclb
mov
sahf
xchg
sbb
or
movsb
and
mov
add
popl
xor
xor
xor
jmp
xchg
jnp
fisubs
mov
inc
pushf
and
jl
bound
call
sub
cmovno
push
mov
push
xor
nop
pusha
leave
in
push
or
orl
data16
xor
mov
cmp
call
and
dec
adcl
pop
mov
lret
mov
pushf
pop
aaa
ja
int
mov
or
lret
mov
cs
cmp
rcll
mov
cmc
inc
push
test
call
stc
pop
pop
data16
inc
inc
dec
sbb
leave
add
mov
xchg
jl
dec
pop
push
mov
mov
gs
jmp
mov
jne
push
int
mov
xor
inc
sub
and
mov
mul
hlt
in
add
push
bound
sub
mov
js
add
jl
in
jl
inc
ds
push
faddl
mov
dec
shlb
push
jmp
int
mov
inc
or
jle
test
mov
sbb
dec
jne
push
popf
cmp
and
cmp
mov
push
enter
icebp
sbb
cmp
mov
mov
jmp
push
test
sti
pop
push
repnz
xor
mov
pop
pop
dec
jge
adc
sub
sub
call
lret
out
xchg
enter
inc
add
push
data16
or
jno
dec
mov
xor
outsb
in
and
insb
shlb
and
add
dec
shlb
dec
mov
daa
lock
sub
arpl
adc
in
out
sub
cli
cs
mov
xorl
cmp
mov
cltd
rorb
mov
ret
xchg
cmp
stos
shll
sub
ja
mov
sbb
push
push
or
push
lret
inc
or
in
cmp
clc
std
shrl
jle
or
mov
mull
xor
inc
inc
arpl
fscale
xor
shrl
inc
fbld
enter
and
mov
push
mov
ss
pop
fs
inc
mov
lcall
pop
mov
hlt
mov
jmp
jmp
pop
mov
sub
xchg
hlt
sbb
inc
lods
and
sbb
jae
scas
enter
fisubrs
pop
popf
lock
jle
in
push
xchg
leave
mov
das
stc
ja
lods
mov
push
int3
std
mov
inc
sbb
sbbl
mov
push
idivb
imul
popl
sbb
lods
mul
sub
sarl
push
sbb
adc
sbb
stc
xchg
cs
divl
aam
iret
lock
sub
lock
and
mov
dec
mov
loope
in
mov
and
into
loopne
rcrl
mov
mov
jmp
mov
fisubl
and
outsl
or
jge
sbb
dec
clc
cmpsl
sbb
popa
xchg
adc
mov
daa
pop
in
sbb
data16
sub
xchg
addr16
call
mov
xchg
dec
test
push
cwtl
test
mov
testb
mov
jmp
dec
bound
fcmovb
clc
into
mov
shl
inc
cmp
jl
test
pop
add
jge
ja
mov
fimull
div
mov
cs
test
stos
xor
xchg
or
movsl
pop
mov
insl
out
mov
sub
mov
arpl
cmp
mov
loope
mov
adc
jb
dec
push
dec
push
mov
xchg
fs
inc
aad
out
xchg
cmp
push
mov
test
pop
es
push
mov
pop
imul
push
scas
mov
adc
adc
fcmovnbe
insl
mov
cmp
mov
movsl
xchg
mov
dec
into
pop
mov
test
or
sarb
pop
pop
cmc
sahf
mov
cmp
lock
pop
pop
mov
popf
and
and
int
sbb
cmp
sarl
test
inc
fiaddl
test
mov
and
mov
adc
insl
lods
cli
call
xchg
push
pop
out
xor
mov
daa
mov
out
xchg
dec
ljmp
jp
shll
cmp
xchg
leave
in
insl
and
or
push
xchg
dec
cs
sub
imul
xor
fdivrs
test
or
jb
push
push
cs
aad
hlt
dec
mov
movsb
mov
sbb
outsb
cli
inc
loope
mov
je
lods
leave
adc
call
stos
sub
sti
add
pop
shrb
or
add
add
adc
mov
popf
sti
test
pusha
xor
cmpb
push
xor
fstl
inc
dec
xor
pop
addr16
and
insb
sahf
or
notb
repnz
jae
xchg
mov
push
repnz
scas
inc
lds
dec
loope
test
arpl
cld
xchg
stc
insl
cwtl
xchg
jge
jns
mov
push
out
sub
ljmpw
or
jbe
lds
dec
ret
pusha
and
cmc
push
mov
js
fsubrl
fwait
and
popa
test
negb
scas
in
jmp
sbb
cmp
push
fwait
and
or
mov
mov
mov
xchg
fistpl
jp
nop
push
outsb
mov
lcall
imul
and
mov
es
push
cltd
cmp
cmp
inc
push
mov
pop
scas
stos
mov
or
nop
leave
dec
xchg
scas
dec
aam
jmp
imulb
jno
dec
loope
xchg
jge
push
xchg
loope
ret
push
jmp
cmpl
or
hlt
loope
xchg
push
fdiv
sar
fs
std
out
popa
test
jmp
or
cs
adc
mov
xchg
imul
cmpl
sbb
xchg
push
test
mov
xchg
insl
into
sbb
and
cmpb
fwait
xchg
and
orps
push
mov
xor
stos
and
jns
sub
mov
mov
cmp
or
push
xor
inc
sub
mov
adc
fnstsw
adc
inc
xor
das
sbb
outsb
mov
push
push
jnp
jl
cmp
popf
mov
mov
in
pushf
data16
mov
pop
ja
sbb
es
rcrb
test
aad
xchg
idivb
ljmp
cmp
mov
xchg
and
inc
imul
cmp
mov
mov
push
jbe
fs
aas
vpmuludq
and
jno
mov
fsubl
sub
jecxz
cmpsl
dec
and
jne
xchg
pop
pop
or
out
mov
imul
test
scas
shl
mov
lret
out
cmp
pop
lea
movsb
in
inc
add
inc
add
lock
rcrb
imul
out
mov
sbb
cmp
and
sbb
mov
sub
mov
mov
xchg
test
loop
jbe
add
mov
rorb
inc
jl
inc
and
pop
and
enter
adc
dec
push
imul
mov
cmp
mov
pop
fwait
and
and
cmp
add
mov
lret
push
addl
sbbl
rcrb
shrb
sub
inc
xchg
xor
jno
mov
pop
mov
inc
std
lea
dec
xor
hlt
sbb
xor
jmp
in
enter
dec
rorb
mov
mov
mov
sbb
push
rol
incl
ja
out
or
ss
vpminsw
inc
inc
inc
loope
inc
cmp
cmp
mov
out
pop
inc
pop
add
jl
ljmp
fcomps
cmpsb
stos
or
ljmp
fs
mov
and
adc
shlb
sbb
data16
xchg
mov
inc
js
sub
addr16
test
mov
es
and
push
cmp
xchg
fs
jbe
xchg
adc
sub
ret
insb
shlb
subb
cmpsl
daa
dec
out
dec
sub
jbe
cmp
les
popf
and
insb
shrl
and
xchg
pop
int3
pusha
and
add
lds
mov
or
adc
sarl
xor
sub
in
outsl
stos
xchg
mov
xchg
clc
out
adc
ljmp
mov
jbe
and
jecxz
push
lods
mov
test
jns
inc
stos
dec
in
jbe
mov
and
dec
popa
cmp
fdivr
call
add
jle
mov
xor
xlat
ljmp
push
mov
xor
cmp
mov
push
sbbb
jp
push
or
dec
xchg
or
sti
jo
mov
loopne
jno
sub
cmp
mov
sbb
insb
test
fwait
add
ret
inc
test
add
add
and
mov
je
frstor
or
and
roll
repz
insb
int3
lds
mov
pop
xchg
xchg
inc
aas
inc
icebp
sub
add
pop
ror
outsb
inc
mov
test
cmp
iret
mov
inc
pushf
lahf
add
mov
or
mov
or
sub
jg
int3
dec
adc
testb
test
cltd
das
fwait
movl
pop
stc
sbbb
or
test
mov
out
ljmp
mov
dec
ret
test
pop
lock
in
sbb
subb
popf
jb
jb
fdivrp
xor
mov
inc
mov
xchg
adc
mov
sub
enter
xchg
pusha
mov
and
int3
fildll
cmp
imul
lret
xchg
xchg
aaa
pusha
xchg
sbb
sbb
insb
fidivrl
mov
cmp
add
insb
cmp
std
sti
es
inc
mov
adc
pop
aaa
add
arpl
imul
mov
mov
adc
xchg
dec
lcall
sub
sbb
add
les
mov
xchg
pop
icebp
movsl
mov
test
push
test
or
outsl
sar
or
sbb
das
ja
ja
outsl
aam
rclb
popf
push
lahf
out
fcmovb
loope
jl
repnz
aam
icebp
inc
adc
ljmp
push
cmp
fwait
sbb
ret
aas
mov
cs
aam
out
lahf
test
fwait
or
jne
sbb
in
or
pop
lock
lods
leave
lods
adcl
mov
mov
push
aas
xor
or
das
imul
cs
xor
lods
add
test
push
js
jmp
pop
push
rorl
jp
sub
sarb
jne
cmpsl
int
dec
fdivrl
push
pop
jle
leave
ret
mov
inc
jns
dec
xchg
popf
add
scas
push
add
divl
int3
in
jl
testb
mov
loop
jmp
fnsave
mov
ret
into
xorl
push
fistl
sti
or
aam
loop
mov
inc
cltd
push
dec
bound
sbb
pop
push
sub
cmpsb
out
mov
push
mov
mov
push
mov
xchg
pop
sub
xchg
and
sub
stos
incb
xor
inc
adc
and
movsb
mov
mov
inc
aas
addr16
xchg
mov
nop
dec
mov
sti
loop
flds
movsl
daa
pusha
mov
into
cmp
mov
imul
pushf
mov
gs
mov
rep
sub
and
push
pop
jno
xlat
dec
in
inc
xchg
or
mov
out
push
cmp
jmp
xor
adc
jb
inc
in
and
repnz
mov
push
in
sbb
pop
rolb
adc
inc
mov
sub
or
jb
pop
dec
mov
push
adc
jb
mov
push
aad
sub
imul
mov
pop
sti
iret
sarl
repz
pop
repz
sbb
sub
mov
push
dec
mov
xchg
mov
out
pop
inc
cmp
call
jnp
repnz
dec
xchg
add
mov
scas
es
sub
or
jnp
and
mov
sbb
jne
popa
into
rol
adc
jp
xchg
out
pop
and
jl
aam
and
adc
scas
stc
mov
mov
sti
inc
adc
mov
jns
rcll
jbe
cmp
outsl
flds
dec
sbb
xor
mov
adc
sar
ret
vpmaxud
push
dec
iret
enter
add
mov
insb
jae
adc
inc
mov
loopne
push
movsl
or
enter
and
fistl
push
jbe
nop
dec
push
xor
add
arpl
fdivl
adc
add
push
fs
xor
or
dec
cmp
int3
sub
inc
add
imul
out
push
and
mov
mov
sti
mov
inc
jmp
sub
or
pop
pop
or
xchg
push
mov
adc
jle
xchg
adc
or
lea
inc
push
test
vmwrite
jo
cmp
sub
mov
and
add
ret
aam
in
pop
lret
xor
aas
sahf
pushf
cld
pop
test
push
push
std
mov
pop
xchg
inc
test
dec
imul
sti
sbb
inc
lahf
inc
add
into
lds
push
and
cmp
inc
mov
lock
mov
bound
adc
ds
pop
fs
sub
and
mull
pop
bound
push
mov
fisubrl
lock
scas
pop
adc
mov
push
dec
lock
int3
sbb
orb
push
into
xorb
mov
je
jmp
sub
and
pushf
jbe
jge
outsl
aaa
push
xor
in
rcll
xchg
nop
push
push
cli
add
push
mov
mov
repz
scas
sbb
sub
call
sbb
jo
gs
mov
sbb
mov
lret
out
dec
test
in
les
push
jne
in
cwtl
movsb
cwtl
pop
fs
cmpsl
je
out
addr16
test
sarl
into
and
daa
sbb
sti
daa
inc
jge
xchg
push
fucomip
cmpsl
jne
mov
mov
sbb
pop
gs
pusha
cmp
sub
cs
outsl
mov
add
xchg
pusha
xor
sbb
mov
dec
test
in
jmp
add
pop
adc
mov
sub
imul
jge
lock
jmp
mov
push
mov
cli
in
roll
das
test
push
aam
sti
mov
int
pop
xchg
push
enter
push
adc
int
jmp
add
cltd
pop
out
sbb
add
adc
test
push
int
pop
cmp
pop
ja
lea
notb
lock
pusha
pop
aam
xchg
cli
jns
xor
lret
ret
xchg
sti
ss
inc
int3
leave
ja
arpl
js
lcall
sahf
in
ja
ss
xor
call
cmp
rcrb
test
les
mov
in
aam
call
movsl
cmp
and
movsb
ja
push
cwtl
fldcw
fisttpl
lret
cmpsb
es
add
cwtl
xchg
scas
mov
jnp
idiv
sar
aaa
enter
sarl
les
shll
add
mov
out
inc
cwtl
lods
nop
in
add
movsb
and
leave
pop
loope
lahf
outsl
push
jne
push
mov
ja
ljmp
or
negb
outsb
jl
or
sub
mov
inc
push
jno
inc
daa
xor
add
imul
dec
aad
lods
pop
ds
lods
and
insb
leave
cmpsb
mov
scas
push
sub
inc
push
and
enter
adc
mov
and
cmpsb
pop
into
jns
and
ret
iret
mov
jns
xor
sub
rcrl
xor
sbb
cwtl
test
add
loope
insb
add
je
mov
inc
loop
mov
ds
inc
mov
mov
mov
mov
xor
push
ficomps
cmp
add
mov
push
outsl
mov
add
inc
movsb
pop
adc
and
in
or
pop
cld
jmp
nop
inc
nop
js
cwtl
sub
lea
sarb
enter
sbb
inc
sub
data16
std
adc
adc
cltd
jns
insl
jmp
xchg
cmc
jne
cmp
fs
aad
or
xchg
mov
in
sbb
popf
in
adc
inc
adc
popa
les
jmp
push
add
jb
mov
fsts
and
and
icebp
test
pop
cld
inc
insl
jns
insl
xor
xchg
scas
or
mov
push
in
add
imul
jl
xchg
xchg
setnp
lret
into
or
inc
jns
adc
jl
mov
aaa
xor
mov
or
outsl
movsl
icebp
dec
leave
push
shrl
iret
lock
cmpsb
inc
pop
into
xchg
testl
out
lds
roll
setl
push
clc
mov
mov
shrb
dec
mov
push
rorl
xor
xchg
clc
and
xor
xchg
add
inc
xor
inc
sub
jecxz
xor
adc
roll
pop
push
or
nop
pop
jmp
nop
mov
mov
pop
add
aad
push
lahf
testl
dec
loop
scas
push
nop
notl
dec
dec
movl
cmpsl
xor
hlt
pop
and
lret
ja
sub
fistps
xchg
mov
dec
mov
movntq
stos
push
leave
cmp
adc
shlb
out
insl
fistps
jl
xlat
inc
cmp
pop
mov
test
xor
or
jmp
xchg
mov
nop
inc
jns
xchg
outsb
adc
into
ss
or
inc
jge
mov
out
pop
sub
xchg
insb
mov
subl
repnz
mov
fisubs
or
repz
test
jne
and
adc
test
and
xchg
mov
xlat
add
imul
and
aad
push
push
daa
push
adc
mov
lods
mov
dec
inc
cmp
inc
in
cmpsb
mov
subl
enter
out
xor
sbb
les
mov
xor
xor
loope
sbb
mov
push
rorb
out
scas
subl
cld
insl
jns
dec
sub
xchg
jb
std
pop
dec
das
sbb
xchg
mov
mov
xchg
test
push
inc
mov
add
imull
cmpsb
adc
shl
es
pusha
sbb
fists
cs
in
jmp
and
and
aas
and
xchg
into
cmc
mov
push
or
sbb
pushf
ror
jmp
push
js
shll
test
pushf
adc
pop
sub
pop
bound
inc
fwait
mov
mov
push
aaa
cmp
push
jo
cmp
inc
aad
pop
es
repz
mov
sbb
repnz
push
movb
adc
cmp
fs
sbb
aad
push
pop
lret
xor
test
inc
push
add
orb
pop
sbb
ret
xchg
loopne
pop
push
int
sbb
dec
gs
mov
sub
pop
stc
xchg
push
sahf
xor
insl
push
and
mov
pop
jmp
mov
pop
dec
fwait
rcrb
mov
jb
sub
xorb
out
iret
push
fcoms
int
inc
test
sub
rorb
ds
in
imul
enter
adc
ja
int3
enter
and
or
xchg
jns
add
push
ret
stos
dec
mov
dec
daa
ficoml
nop
add
push
mov
mov
pop
mov
mov
mov
insl
outsl
sub
mov
cmp
movsb
xchg
xor
outsl
mov
xor
pop
pop
push
in
xor
xor
scas
add
call
in
push
dec
push
sti
xor
xchg
mov
mov
in
or
shlb
jae
js
and
or
inc
sti
xor
adc
jecxz
dec
jle
xor
pop
popf
push
xor
mov
inc
cltd
daa
add
xor
mov
in
insl
movsb
jg
dec
xchg
sbb
dec
mov
pop
in
push
test
inc
fsubl
jne,pt
mov
fnstsw
dec
orb
fldcw
outsb
inc
jns
jo
test
sub
sbb
pusha
and
inc
pushl
lea
inc
adc
cmp
lcall
xchg
mull
hlt
inc
mov
sub
call
pushf
into
incb
mov
add
lahf
and
stos
push
rcll
inc
sti
push
sub
insl
sbb
add
dec
cltd
or
cwtl
mov
stos
outsb
out
push
jge
mov
xchg
jle
pop
insb
test
popa
pop
xchg
popf
mov
jne
dec
in
arpl
mov
js
das
dec
xor
mov
mov
jns
aaa
adc
pop
sub
inc
insb
mov
cmpsb
push
outsb
add
pop
in
inc
sub
gs
je
mov
repnz
jecxz
push
push
call
jmp
push
movsb
inc
outsb
adc
add
fs
dec
cmp
mov
jmp
cmp
outsb
mov
test
arpl
mov
lret
push
jge
add
sbb
lods
cmpsb
add
rorl
in
ds
add
pop
les
lret
pushf
jle
mov
mov
sti
adc
jnp
inc
or
xor
inc
scas
je
lea
repz
inc
and
push
rcrl
fs
jp,pt
and
push
vfrczss
xchg
cmp
repz
loop
andl
outsb
dec
inc
call
into
push
push
lcall
ds
mov
sub
pop
loope
int
insl
pop
pushf
xchg
mov
test
sub
out
or
sbb
sahf
add
rolb
test
js
dec
or
lods
ret
push
fnstsw
js
imul
sbb
mov
std
mulb
mov
andl
jno
scas
fstpl
cmp
loopne
add
idivb
push
push
xor
cs
sbb
aas
xchg
pop
mov
xchg
sti
dec
test
push
or
xchg
clc
aaa
bound
test
cmc
add
inc
mov
dec
loop
roll
lds
dec
mov
xlat
dec
push
or
ss
sub
or
and
dec
inc
rolb
repnz
add
addr16
xorb
inc
mov
ds
in
add
imul
jl
popl
into
inc
pop
fists
clc
cli
cmc
sbb
sbb
roll
cmp
popf
sti
neg
outsl
dec
sahf
xor
fxtract
pusha
jp
xchg
adcl
iret
jns
add
je
push
dec
jne
or
pop
adc
shll
add
ss
imul
fs
sub
adc
jmp
fcom
mov
test
clc
mov
sahf
call
and
and
adc
push
mov
xchg
dec
cmpsl
jb
out
out
sbb
mov
jle
mov
pushf
dec
dec
jge
fsubl
sbb
xlat
aad
lret
mov
cs
fdivp
andb
pusha
cmp
mov
fcoml
dec
test
sarb
loopne
jo
add
mov
stos
rorb
inc
sti
push
sbb
jne
jmp
add
sbb
sahf
and
xchg
pop
jl
lcall
aaa
mov
pusha
daa
rcrb
fstl
jl
pop
nop
xchg
adc
rolb
rcrb
stos
xor
or
lret
out
and
push
fistpll
xchg
shll
mov
aam
shlb
and
in
cmpl
adc
inc
and
iret
jg
or
jge
inc
cmc
mov
mov
xlat
fdivrl
cwtl
jne
test
xchg
dec
cmpsb
mov
pop
shlb
scas
pop
sub
pusha
fcoml
iret
add
jp
shl
sub
orl
push
movswl
push
mov
xor
pop
dec
dec
je
subb
mov
gs
in
movsb
in
insb
scas
mov
mov
lods
jmp
push
mov
sub
orb
fisubrl
jne
lods
int3
xchg
outsb
xor
inc
cmc
cmp
fiaddl
rolb
adc
aaa
cli
lret
dec
lcall
and
add
pop
lret
mov
xlat
mov
push
sub
jp
inc
lcall
jae
filds
jns
shll
and
push
outsb
in
divl
iret
fs
mov
fcoms
and
cltd
jmp
xor
cli
cmp
repnz
xchg
mov
cs
xchg
mov
in
dec
bound
and
pop
sub
insl
pop
popa
fmuls
inc
jmp
daa
push
xchg
mov
jo
mov
jo
stos
mov
les
jne
mov
repnz
mov
loop
das
sar
adc
mov
addr16
push
add
fidivrs
in
xor
fistl
movsl
cs
insb
or
or
xor
fsub
fisubrl
into
push
push
add
call
sbb
cld
pop
dec
fs
mov
xlat
out
xchg
lcall
test
dec
ljmp
adc
jle
jo
out
sti
xchg
lret
sub
xor
pop
movsl
cmpb
inc
mov
or
test
mov
xchg
mov
stc
gs
adc
inc
cmp
jge
xchg
popa
xchg
and
add
sub
data16
insb
xchg
push
rclb
push
add
addr16
cmp
sbb
add
pushl
out
jo
jl
mov
mov
pop
mov
dec
mov
and
xor
loop
sub
adc
repnz
loop
adc
mov
and
out
int3
mov
jae
int
cli
or
add
sbb
pop
jecxz
fiadds
rorb
out
push
jmp
sub
lods
movsl
mov
and
test
or
outsl
sub
sub
arpl
pushf
std
push
lods
adc
test
mov
mov
js
addr16
movsl
mov
adc
aaa
jbe
lock
sbb
and
add
fisttpl
dec
add
cmc
insb
add
imul
pushf
dec
jno
scas
mov
lret
int3
stos
scas
std
xor
xchg
add
outsb
sub
sub
xorl
scas
dec
mov
call
push
insb
cmp
add
push
jo
lahf
mov
fisttps
int
and
fistpll
mov
fdivrl
jl
mov
sub
xchg
jp
cmc
sub
lret
pushf
mov
sub
iret
and
test
inc
movsl
nop
js
dec
lcall
shrl
insb
icebp
pop
adc
ljmp
pop
fwait
mov
cbtw
fistpl
lock
sbb
dec
aas
aaa
scas
insl
loopne
loope
int3
je
mov
jbe
movsb
test
pop
push
ffree
adc
push
push
loope
sbb
inc
mov
sub
and
arpl
cltd
into
setg
stos
mov
adc
cmp
or
test
inc
aaa
mov
cmp
cli
pushf
xor
xor
scas
in
or
mov
xor
aad
aaa
fdivrp
data16
cld
cmp
roll
and
push
add
int3
xlat
into
mov
sti
push
push
inc
sub
test
pop
sub
inc
add
mov
xor
repz
lods
push
pusha
cmpsl
popf
push
dec
andl
cmc
lret
cmpsl
xlat
mov
loop
imul
mov
dec
rcrb
stos
and
mov
fisubrs
mov
lds
jecxz
pop
push
sbb
push
mov
lcall
scas
fwait
sbb
arpl
inc
ss
iret
insl
mov
clc
mov
inc
inc
pusha
lret
pop
mov
ss
out
cmp
pop
testl
ret
push
jl
pushf
mov
in
sbb
jb
xor
and
lcall
sarl
sub
loopne
xor
xchg
xor
leave
push
push
sub
inc
jae
insb
cwtl
and
add
sarl
jecxz
sbb
xor
mov
mov
push
push
pop
pop
repz
call
mov
or
add
les
and
roll
jo
ret
ret
pop
and
push
fisubs
fwait
push
push
xor
inc
cltd
cmp
and
repnz
fadds
sub
fyl2x
sti
sub
adc
std
push
nop
mov
sub
enter
ss
loope
jnp
outsl
movsb
push
movsl
clc
addr16
mov
lea
loopne
adc
jo
movsb
pop
cmp
ja
test
xor
repz
divb
mov
aam
inc
sbb
aad
jns
xchg
or
out
testl
xor
dec
cmp
inc
mov
lret
out
mov
push
ret
mov
mov
dec
dec
mov
jno
aaa
push
xor
call
push
loope
pop
pop
or
movq
cmp
out
xchg
aad
fcomp
cmpb
xchg
jg
push
adc
xor
es
or
sub
adc
ljmp
dec
das
fcomps
sub
out
arpl
jmp
movsb
ja
int3
mov
scas
cmp
cs
pop
cs
push
add
fwait
sub
testl
orl
cli
test
cmp
shl
movsl
mov
mov
xor
push
into
fsubp
aas
cs
int3
imul
mov
and
dec
lret
incl
and
cmp
sbbb
scas
add
outsb
adc
stos
xlat
or
bound
ss
fbstp
mov
daa
pop
iret
mov
cmp
jp
sbb
sub
outsb
mov
inc
inc
int3
add
adc
pop
loope
jae
stos
fwait
jno
testb
shll
sti
mov
and
mov
and
ffreep
sbb
inc
pop
outsl
sub
xor
sbb
in
roll
mov
dec
cld
ret
adc
pop
enter
inc
mov
stc
push
sbb
mov
add
sub
mov
icebp
lahf
push
mov
inc
xchg
fbld
jno
fs
loope
jo
push
or
repz
sub
xlat
dec
xchg
stos
mov
xor
jno
adc
cmc
sub
fdivrs
in
out
fsubrl
out
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
push
fwait
ret
sbb
mov
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
and
add
add
add
add
add
add
cmp
add
dec
add
add
add
call
add
adcb
add
add
add
add
add
add
add
add
add
mov
add
add
add
adc
add
in
add
add
add
add
add
add
add
fadds
add
adc
add
test
add
in
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
sub
add
mov
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
push
add
inc
add
add
dec
add
add
add
add
add
andb
add
add
add
mov
sub
add
add
add
xor
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
rol
rcr
add
lret
data16
movsl
aad
xchg
pushf
rolb
test
fdivrp
add
cld
add
jmp
incb
mov
std
add
in
repnz
leave
int3
add
jp
add
mov
add
mov
add
mov
movsl
add
repz
add
jle
add
andb
leave
test
add
aam
add
jnp
bound
mov
cltd
mov
out
addl
movsl
xchg
xchg
add
ret
add
xchg
test
push
mov
xchg
add
in
add
xchg
push
push
mov
imul
add
mov
add
flds
add
fwait
xchg
add
xor
jge
inc
add
mov
xlat
movsl
jbe
je
mov
mov
faddl
cli
cld
std
add
cmp
add
mov
rorl
imul
roll
add
popf
jno
shll
bound
mov
add
xchg
pop
add
cmpsl
pop
add
mov
add
mov
dec
sub
mov
inc
add
xchg
dec
add
mov
add
mov
imul
clc
xchg
inc
add
mov
jmp
add
sub
cwtl
push
sbb
mov
xor
sbb
add
push
daa
add
add
add
daa
add
cs
add
jae
add
cmpl
jmp
mov
cmc
lds
pop
xor
aam
sub
std
test
add
lds
ret
add
jb
add
nop
pop
add
insl
xor
imul
jecxz
std
xchg
data16
stos
imul
leave
lret
mov
mov
add
pushf
sti
add
mov
out
xor
shr
mov
xor
aam
cmpsl
ret
call
add
rolb
xchg
fdivr
add
movb
stos
int3
add
xchg
mov
aam
lock
call
add
movb
mov
add
in
lahf
add
fcoml
add
xchg
bound
add
add
push
xor
aam
jecxz
mov
movl
imul
add
jae
add
data16
out
pop
add
fmull
add
xor
add
add
dec
sbb
aam
aam
mov
mov
mov
mov
imul
add
dec
add
out
add
add
add
add
add
add
add
add
add
push
add
jecxz
aam
pushl
add
decl
incw
add
add
dec
faddl
add
xchg
add
and
push
add
lock
add
pushl
add
ljmp
mov
incl
add
faddl
add
add
bound
add
xor
add
call
add
pushl
add
ljmp
decl
out
out
add
add
int3
int3
add
mov
add
cwtl
cwtl
add
jns
add
dec
dec
add
repnz
out
add
fcmovu
add
into
into
add
ret
mov
mov
stos
stos
stos
add
xchg
xchg
add
jp
add
outsb
add
bound
push
push
push
add
dec
add
ds
xor
add
es
sbb
add
push
push
add
sti
incl
movsb
mov
addb
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
or
or
or
or
or
or
or
or
or
or
or
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
add
add
orl
or
or
or
or
or
or
or
or
add
add
add
add
addl
or
or
or
or
or
or
add
add
add
add
addl
or
or
or
or
or
or
add
add
add
add
loop
addl
or
or
or
or
or
add
add
add
add
loop
sbb
inc
inc
inc
inc
inc
cmp
and
push
or
push
or
add
add
add
add
loop
inc
cmp
daa
daa
daa
and
dec
or
push
or
add
add
add
add
loop
cmp
daa
cmp
cltd
and
and
or
add
add
add
add
loop
xor
es
inc
cmp
es
xchg
and
inc
or
push
or
add
add
add
add
loop
sub
and
cltd
cltd
xchg
xchg
xchg
xchg
and
push
or
add
add
add
add
loop
and
cmp
xchg
xchg
xchg
xchg
xchg
and
or
add
add
add
add
dec
loop
xchg
xchg
cmp
cmp
sub
xchg
and
cmp
or
add
add
add
add
dec
dec
xchg
sub
xchg
mov
sub
or
push
or
add
add
add
add
dec
dec
xchg
xchg
xchg
icebp
lock
and
or
push
or
add
add
add
add
dec
dec
xchg
xchg
xchg
icebp
cmp
xchg
and
or
add
add
add
add
dec
dec
cmp
add
cmp
cmp
cmp
lea
outsb
or
add
add
add
add
dec
dec
cmp
icebp
icebp
cmp
add
cmp
lea
outsb
or
add
add
add
add
dec
dec
mov
lea
mov
push
or
add
add
add
add
dec
dec
mov
xchg
xchg
and
xchg
xchg
and
add
add
add
add
dec
dec
mov
xchg
xchg
xchg
and
orl
add
add
add
in
dec
mov
mov
xchg
xchg
mov
orl
add
add
add
in
dec
push
mov
xchg
or
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
loop
loop
addl
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
loop
loop
orl
or
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
loop
loop
or
jbe
inc
or
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
loop
or
arpl
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
loop
or
push
or
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
loop
aaa
inc
or
add
orl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
or
or
add
add
or
or
or
or
or
or
or
or
or
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
aas
lock
jg
add
push
add
incl
add
add
add
and
add
add
add
add
add
add
sub
add
sub
add
sub
add
sub
add
add
add
add
add
dec
sub
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
int3
vpacksswb
mov
push
adc
pop
jne
inc
std
xchg
ja
std
mov
sbb
add
or
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
push
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
or
jmp
cwtl
sub
popf
jno
sub
jo
lods
adc
repnz
adcb
jmp
adc
xor
dec
jp
in
nop
mov
xchg
pop
repnz
dec
out
jne
out
pushl
push
add
sbb
push
loope
sti
and
sbb
adc
fcmovb
outsb
and
repnz
pop
jecxz
and
insl
add
or
jmp
lods
and
add
adc
adc
popa
adc
mov
les
sub
jmp
in
test
leave
or
es
shl
int
push
sti
fcoms
and
add
idivl
andb
sbb
xor
xchg
jmp
repz
mov
insb
movsb
cs
mov
sbb
add
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
adc
outsb
dec
xchg
mov
mov
and
shlb
mov
jne
sub
out
nop
jo
fimull
mov
shl
lret
stc
es
adc
add
ret
jge
pop
sti
popa
add
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
jb
inc
aad
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
adc
clc
push
push
jno
hlt
add
fidivs
and
sub
add
mov
pop
dec
hlt
mov
inc
xchg
mov
inc
sahf
mov
push
sbb
mov
sbb
subb
xor
inc
ret
lcall
out
jne
mov
inc
add
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
xchg
cltd
mul
jge
mov
in
movsb
daa
or
xchg
add
add
push
call
xchg
push
mov
cld
lea
ds
ror
xorl
or
call
addb
or
pop
mov
cmp
push
dec
rcll
jo
inc
add
mov
xchg
das
and
mov
or
lds
andb
or
sbb
xor
sub
mov
sub
add
addb
ja
pop
sbb
fcomps
or
xor
cltd
dec
add
aad
inc
add
inc
lea
jg
xchg
outsb
mov
shll
and
sbb
and
pop
push
movsb
inc
sbb
sub
xor
cld
pop
add
sub
outsl
das
fisubrs
add
jbe
pusha
add
xor
cmpl
add
jae
test
fmull
mov
cmpsl
jnp
test
rep
out
iret
and
je
in
imul
cs
push
call
add
lea
aad
leave
push
and
aaa
or
mov
call
mov
xchg
fld
sub
or
push
sti
nop
cmpsl
add
cwtl
ja
mov
inc
inc
push
push
outsb
push
je
mov
push
mov
mov
mov
clc
test
push
push
orl
lea
push
aas
inc
das
add
test
lds
aas
shrb
xor
test
lret
inc
xor
jmp
mov
adc
and
ss
inc
jo
add
test
ret
ds
rolb
mov
pop
xchg
jl
imul
mov
cltd
cmpsb
cmp
and
add
add
ret
mov
cmp
inc
pop
or
aas
pop
loopne
push
add
push
and
xchg
test
sub
adc
ret
cmp
sub
dec
cmp
add
out
mov
loop
xor
inc
stos
pop
add
sub
in
xor
leave
push
add
jp
hlt
push
ror
inc
shll
pop
adc
pop
add
loopne
or
hlt
cmpsb
cltd
inc
or
push
push
and
loop
push
sbb
pop
cmp
or
and
xor
jmp
pushf
mov
push
clc
movzwl
test
jge
sti
dec
xor
insb
pusha
xchg
cld
movl
jne
iret
jge
and
rolb
push
push
cld
sub
iret
shll
enter
arpl
cmp
mov
sarw
or
push
push
add
movb
pop
pop
nop
mov
xor
mov
pop
ret
std
lock
xor
cmp
add
in
add
jbe
adc
or
sbb
mov
dec
push
out
mov
in
inc
pop
pop
fistpll
fimuls
int
in
sub
inc
je
es
pop
sbb
dec
or
stc
add
movsl
add
jnp
inc
push
cli
cmp
sbb
lret
pop
sarl
push
add
ret
add
and
push
mov
push
lock
push
push
lea
inc
mov
mov
push
sub
adc
mov
pop
cltd
and
add
mov
inc
mov
hlt
push
leave
dec
or
cmp
test
mov
push
mov
addr16
enter
dec
mov
inc
push
adc
push
adc
mov
pop
lods
sbb
xor
stc
jmp
mov
push
movl
loopne
sub
pushf
dec
mov
fiaddl
stos
inc
or
lret
testb
shlb
orb
mov
push
je
and
or
mov
push
dec
or
ror
jle
test
and
push
push
push
push
dec
call
sbb
mov
test
cltd
aad
mov
and
mov
adc
mov
sbb
shlb
je
enter
mov
jmp
push
inc
adc
into
jge
mov
sarb
jbe
testb
dec
lahf
mov
je
push
movsb
jg
test
cmp
push
jmp
and
data16
inc
jecxz
cmp
pop
lcall
dec
stos
cmp
lods
jmp
mov
push
cld
adc
add
xor
icebp
mov
adc
dec
or
push
inc
jmp
mov
cld
pop
ror
or
inc
cmp
mov
jl
sbb
sub
jmp
push
lea
sahf
jne
iret
or
cs
testb
mov
inc
push
xchg
cmp
lcall
inc
cwtl
sub
scas
jno
or
push
lea
jmp
sti
xor
pop
pop
cmpsb
shrl
cmp
pop
subl
bound
adc
popa
je
pop
outsl
outsb
and
push
fsubr
adc
sti
and
add
test
fs
lea
repz
outsb
mov
ljmp
imul
dec
movl
sub
popa
insb
and
push
pushf
sub
xor
cmp
popa
jnp
push
inc
outsl
js
emms
jnp
sbb
data16
mov
aas
inc
js
je
push
nop
outsb
dec
or
dec
popa
outsb
fs
out
pop
dec
jo
adc
je
stos
mov
insb
sbb
jl
imul
mov
hlt
arpl
jmp
pop
mov
bound
xchg
outsb
dec
jp
xchg
push
pop
mov
or
and
dec
mov
imul
bound
adc
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
inc
sub
add
add
or
add
add
cwtl
sub
add
inc
add
sub
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
loopne
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
ret
add
xor
pop
pop
push
jnp
xor
pop
push
push
mov
pop
pop
or
jnp
jns
je
rol
jl
jb
push
or
pop
mov
test
cmp
xor
jns
je
shl
jno
push
test
pop
jns
jl
push
or
pop
jo
neg
neg
add
push
and
pop
rol
push
test
pop
push
jl
ja
push
add
pop
clc
clc
cld
sub
ror
ror
add
je
test
push
push
cmp
pop
pop
xor
xor
rol
test
push
test
pop
jb
js
push
sar
pop
add
jle
add
rol
jnp
push
jg
shr
pop
push
jns
mov
pop
push
js
push
sub
pop
pop
jae
xor
cld
push
jle
and
pop
push
jp
jg
dec
inc
pop
jbe
push
test
pop
ja
push
dec
pop
std
cld
or
jnp
jge
sub
push
add
jle
push
and
pop
push
test
pop
push
push
jne
ror
pop
pop
sub
push
jp
jl
rol
pop
stc
push
jbe
and
pop
push
jne
ja
xor
pop
jns
push
test
pop
test
xchg
and
push
push
push
ror
pop
pop
pop
push
jb
push
sub
pop
pop
and
push
jbe
sub
pop
jbe
cmp
cmp
test
cmc
clc
mov
push
add
test
jl
push
not
not
pop
and
push
sar
pop
jb
jns
push
cmp
pop
cld
jne
je
sub
and
rol
clc
je
push
push
mov
pop
pop
jno
jg
push
test
pop
push
push
add
pop
push
push
and
pop
pop
jns
jge
push
dec
inc
pop
push
or
pop
jg
jbe
rol
lea
push
test
pop
push
rol
pop
cmp
sub
jp
push
mov
pop
sub
jle
jg
jp
sub
push
jae
push
sub
pop
pop
xchg
push
jg
jg
sub
pop
push
jbe
jnp
cmp
pop
jbe
jns
cmp
push
jno
push
or
pop
pop
sub
push
sub
pop
stc
push
sub
pop
add
push
ror
pop
push
push
push
pop
pop
pop
xor
push
push
rol
pop
pop
cmc
jbe
jbe
push
mov
pop
or
or
jae
sub
test
cmp
cld
cld
and
je
cmpl
jne
call
pop
add
jae
cmp
test
shr
inc
dec
push
push
push
sub
pop
pop
pop
xor
fnop
jns
jp
or
je
jg
push
push
dec
pop
pop
push
test
pop
jns
jge
jno
jae
nop
nop
cmc
call
pop
add
mov
push
push
push
test
ja
js
or
clc
add
push
rol
pop
test
test
clc
sub
clc
cmp
push
jno
cmp
pop
ja
shl
jno
jle
jbe
test
jp
jb
neg
neg
nop
push
jns
cmp
pop
js
add
jle
and
push
jae
jns
inc
dec
pop
shl
push
push
push
call
pop
sub
add
movl
mov
call
mov
xor
pop
pop
pop
call
pop
pop
pop
dec
lea
add
cmpsl
push
fs
sub
ljmp
pop
or
add
mov
inc
and
mov
mov
push
lock
imul
ficomps
mov
push
and
dec
push
cwtl
xchg
ljmp
pop
fcomip
xchg
push
xor
adc
adc
adc
movsl
inc
mov
mov
and
movl
ret
jl
and
repz
sub
mov
ds
xchg
or
xor
pushf
loope
xchg
mov
adc
ret
mov
repz
dec
push
adc
push
push
aas
add
aad
adc
inc
sub
outsb
cwtl
pop
xor
hlt
add
fs
fldl
fidivrs
outsl
leave
pop
push
rol
jg
outsl
clc
sbb
rcll
xlat
xchg
xchg
cmpsb
loop
mov
dec
xor
rcrl
add
das
pop
stc
int
and
in
cmp
scas
shrb
clc
sbb
ficomps
cwtl
push
dec
lret
test
cs
sub
imul
mov
negl
mov
lods
aas
int3
insl
sti
leave
lods
punpckhbw
cmp
pop
mov
xchg
push
cltd
cli
jmp
in
into
push
sahf
popa
adc
movd
sub
ja
inc
or
int
pushf
mov
add
jns
aas
jl
pop
mov
jae
enter
xchg
je
jge
push
xchg
fbld
jns
pop
xchg
dec
dec
test
into
pop
arpl
add
in
and
pop
cs
nop
movsl
jae
imul
jl
dec
push
xor
push
pop
icebp
inc
jnp
jae
adc
cmp
cld
xchg
clc
cmp
clc
repnz
mov
es
push
mov
push
jp
lock
cmp
xchg
add
pop
shrb
aas
ja
xor
test
inc
mov
add
icebp
push
add
jge
pop
test
jbe
pop
ja
mov
and
jno
fimuls
mov
xor
and
jb
ds
xchg
stos
mov
or
jmp
out
out
mov
push
xor
enter
and
int
push
popa
outsl
or
jp
dec
leave
sub
out
or
cmp
mov
mov
cmp
add
outsl
jle
das
repnz
repnz
fbld
pusha
test
fmuls
cmc
push
adc
movsl
pop
aaa
mov
jne
push
sub
mov
push
dec
mov
movsl
aam
cmp
notl
dec
or
dec
pushf
push
push
lods
fsts
jecxz
jo
or
ljmp
jge
jle
xchg
xchg
jmp
ret
xlat
sub
dec
scas
imul
in
std
or
dec
dec
sbb
bound
and
add
adc
pop
test
dec
cwtl
push
pop
cmpsl
aad
xchg
fiaddl
jl
sahf
cmc
adc
mov
push
push
pop
and
or
mov
leave
push
sub
fucom
and
addb
fwait
or
ja
mov
mov
in
cmp
push
ret
mov
ftst
xchg
jp
mov
jl
dec
jp
ffreep
pop
scas
out
dec
dec
ret
ss
xchg
and
cmpsl
push
or
sbb
push
dec
inc
mov
add
loop
jmp
lahf
movsl
jne
jb
loop
inc
or
cmp
pop
jecxz
ror
jns
or
jmp
add
xchg
sti
jmp
inc
push
push
popa
lock
dec
push
int3
incl
xchg
mov
mov
cmc
cltd
lods
shlb
jmp
dec
int3
jge
or
cmp
shlb
mov
mov
jmp
call
cwtl
jae
cmc
and
nop
cmp
sub
push
hlt
sub
xlat
pop
inc
fbstp
jbe
and
test
mov
aas
fdivr
pusha
repnz
imul
repz
mov
jae
arpl
mov
inc
dec
push
mov
mov
into
add
lcall
adc
xor
and
mov
inc
aad
cltd
push
lahf
sub
pop
pop
add
add
out
mov
xchg
outsb
hlt
adc
fs
adc
or
daa
dec
lds
subl
push
cmp
fcompl
stos
jl
push
ja
and
je
in
imul
decb
push
push
add
xor
mov
lahf
cmp
push
aad
pushf
sti
pushf
das
push
add
out
aad
iret
sbb
movsb
jns
mov
leave
xchg
popa
mov
mov
mul
das
lods
fldl
stc
gs
enter
dec
pop
sub
jo
xor
shrl
loop
inc
sahf
push
add
dec
shr
stos
ss
jne
xchg
outsb
inc
por
or
fsubs
dec
push
mov
roll
out
pop
loop
call
ret
dec
xchg
fwait
xchg
mov
stc
mov
je
push
and
xor
icebp
mov
ljmp
adc
cmp
fdivrp
rorb
imul
repz
sbb
cmovl
dec
xchg
jo
adc
mov
jecxz
out
fs
mov
or
sub
sbb
jb
add
push
pop
insb
mov
sbb
je
and
xor
dec
inc
adc
scas
ds
and
inc
add
xchg
xor
int3
sbb
pop
pop
xor
fwait
xchg
push
bound
mov
iret
inc
fimull
mov
lods
out
imul
fiaddl
pop
fs
shrb
ret
leave
pop
sub
loop
dec
sbb
bound
in
dec
mov
in
enter
adc
sub
pushl
out
repz
adc
push
mov
inc
jl
cmp
add
in
decb
jg
repz
stos
fwait
jmp
jg
cmp
push
sbb
cmp
mov
xchg
jne
nop
xchg
cmpsb
mov
xor
jne
push
adc
and
fldl
jecxz
subb
bound
push
stc
out
fs
arpl
push
fsubrs
insl
xchg
pop
mov
out
inc
cmp
mov
repnz
icebp
mov
std
inc
and
sub
cmp
mov
insl
inc
add
adc
mov
stos
and
xlat
add
sbb
aad
jbe
xchg
js
popa
lcall
jne
dec
andl
popf
pop
data16
push
cmp
mov
push
mov
adc
inc
stos
pop
or
aas
sbb
add
adc
in
mov
aaa
sbb
or
or
pop
scas
imul
push
sti
xor
lret
hlt
test
jp
mov
sahf
adc
mov
ljmp
xchg
nop
repnz
inc
pop
enter
jb
xchg
outsl
repz
inc
pusha
cltd
out
or
inc
ja
xchg
or
mov
repz
inc
mov
les
push
or
mov
addr16
and
mov
push
subb
sbb
shlb
cmp
dec
andb
sub
hlt
cltd
inc
roll
loop
cli
push
int
mov
push
push
arpl
xor
cmp
test
mov
lods
mov
push
cmp
cmpsl
xor
daa
sbbb
lock
andb
adc
xchg
xlat
sbb
adc
xchg
jno
or
mov
mov
inc
enter
popa
mov
or
lea
lcall
out
out
jns
cmp
mov
push
daa
xchg
aas
jg
scas
pop
pop
pop
fwait
in
cmpsl
gs
pushf
and
lods
mov
nop
push
adc
dec
fdivrl
js
mov
fucomip
mov
fsts
aad
mov
lret
sub
cwtl
les
movsl
inc
cmp
xchg
cwtl
mov
pusha
mov
xchg
aas
mov
jb
jecxz
dec
inc
iret
dec
shlb
into
push
data16
loop
cli
popf
push
xchg
mov
jg
in
mov
shl
stos
fwait
and
pop
jbe
cmc
mov
ljmp
stos
mov
fwait
nop
inc
push
sub
hlt
rclb
aas
mov
les
lret
testl
push
loope
test
repz
or
loope
mov
mov
stc
fstpt
jle
das
shrb
in
dec
push
dec
stos
pusha
imul
add
mov
jecxz
inc
out
jb
pushf
insl
in
jnp
out
sbb
test
mov
xor
push
dec
and
int
divl
out
mov
lods
scas
lret
xchg
mov
jns
scas
cmp
xor
inc
adc
xor
xchg
mov
movsb
cs
xchg
mov
or
pop
mov
clc
sti
iret
mov
or
lock
iret
lods
mov
push
jl
aaa
sbb
pop
test
add
dec
popl
jmp
mov
outsb
and
mov
dec
lcall
jle
clc
cmp
imul
jb
bound
inc
hlt
pusha
cmpsb
mov
pop
mov
sub
push
xor
sbb
sbb
fwait
and
add
xchg
push
jmp
or
ds
jno
adc
in
xorl
outsl
adc
jo
sbb
jp
int3
dec
movsb
ja
jecxz
pop
in
bound
pusha
loope
lcall
gs
and
mov
mov
adc
mov
pop
les
cmpsl
and
rorl
in
jbe
xor
shlb
movhps
push
out
or
add
outsl
scas
xorl
mov
clc
js
outsb
fildll
sbb
arpl
cmp
arpl
lods
or
fwait
jmp
lods
inc
pop
scas
cmpsb
xlat
les
je
cmc
push
popa
out
out
aas
pop
mov
add
xchg
cltd
icebp
stos
sbb
fsubrs
adc
xchg
cmp
push
mov
int
cltd
rclb
mov
scas
adc
movsl
lcall
dec
inc
xor
ficompl
pop
xchg
pop
mov
inc
cmp
dec
sbb
cld
adc
in
fdiv
sub
inc
mov
scas
dec
cmp
cmc
add
xchg
aaa
add
xor
xchg
or
clc
or
pop
xor
xchg
ror
inc
pop
sahf
jb
jecxz
stos
cld
pusha
sbb
cmc
or
xor
or
adc
pop
hlt
or
xor
shlb
and
mov
jge
movsl
add
or
or
ds
andl
jmp
mov
or
ret
inc
adc
pop
clc
inc
xchg
loop
or
jb
das
repz
outsl
add
imul
cmp
out
mov
cli
aad
jle
fisubs
pop
jo
aam
out
shlb
dec
cltd
popa
pop
mov
in
imul
sbb
pop
pop
scas
inc
cmp
push
mov
out
cmc
cmp
rcl
xor
ss
insb
test
dec
cmc
push
xchg
and
inc
cmp
rol
sbb
stc
and
mov
push
adc
stc
sbb
add
xor
xor
jae
daa
push
ljmp
pusha
adc
and
popf
mov
into
push
sbb
je
pop
mov
adc
and
jl
scas
cli
movsl
or
mov
pop
push
pushf
inc
cld
stos
fidivrl
or
ret
in
xchg
bound
mov
pop
pop
stos
hlt
std
ss
dec
pop
xor
mov
jo
in
xor
ds
mov
insl
push
dec
das
imul
or
aad
fisubl
mov
mulb
push
push
add
rcr
into
mov
mov
pop
mov
xor
das
xlat
ja
pushf
push
cmp
jl
add
xchg
and
fwait
dec
push
inc
push
dec
cs
cltd
dec
mov
fwait
cmpb
insl
sub
adc
bound
push
push
xchg
mov
loopne
cltd
fs
push
push
dec
adc
sbb
cltd
xchg
lahf
jp
rcl
pop
std
into
stos
mov
popf
fld
dec
xor
mov
add
mov
fstps
stc
cmpsb
mov
in
mov
xchg
call
cmp
add
sahf
push
cmc
arpl
dec
xchg
jnp
add
xchg
pop
jg
fmull
xor
dec
dec
outsl
add
loopne
popf
mov
mov
ss
sbb
xchg
sub
inc
stc
add
dec
push
xchg
icebp
jne
sub
push
sub
mov
clc
mov
or
or
sarb
cmovns
fldenv
pop
daa
xor
mov
repnz
mov
push
push
adc
stos
push
push
nop
stc
mov
jnp
sub
loop
dec
cmc
loope
sahf
mov
scas
inc
out
stos
cmpsl
scas
scas
mov
call
ja
mov
les
clc
mov
imul
and
cs
sub
daa
ret
mov
sub
jae
or
pop
aam
call
sub
hlt
sub
cltd
mov
xor
ret
fwait
insl
lods
sbb
mov
lea
fstpl
dec
popf
leave
aad
sti
stos
pop
shr
leave
sub
mov
jle
cltd
pop
sub
jecxz
add
cld
jns
imul
add
pop
ret
js
add
cld
mov
aas
clc
jnp
ja
movsb
push
fdiv
xor
das
mov
inc
xor
fsubs
sbb
mov
mov
ss
jns
into
je
xor
and
mov
popa
inc
daa
out
cmp
or
sub
sahf
xchg
fsubs
push
inc
jbe
jmp
xchg
mov
mov
mov
or
add
or
es
rcr
pop
or
push
mov
lock
pop
adc
ret
xor
push
xlat
into
movsb
sahf
sub
push
leave
lcall
insb
pop
nop
add
add
push
popa
jmp
lods
push
and
cli
aam
cmp
aad
push
sub
insb
je
xor
mov
aad
mov
push
jmp
xchg
mov
fldenv
xchg
ja
xor
or
stos
pop
int3
lods
and
pop
dec
std
orl
lds
add
js
dec
mov
mov
mov
mov
out
push
sbbl
or
cmp
pop
call
data16
inc
mov
adc
stos
lock
in
xor
sub
push
jmp
mov
es
data16
cld
push
jmp
jne
mov
and
ret
or
dec
hlt
xchg
scas
popf
int3
sub
lret
dec
adc
pop
pop
push
jnp
pop
aaa
dec
int
add
sbb
negl
mov
inc
add
xchg
sub
fdiv
les
adc
xlat
fsts
cli
mov
jbe
popf
pop
dec
mov
inc
dec
jns
or
cmc
out
lret
stc
mov
mov
ja
nop
into
sbb
mull
jge
jecxz
cmc
pop
fsubrl
std
jo
cmp
imul
imul
adc
pop
movsl
sbb
inc
xchg
dec
jg
dec
or
aad
sbb
enter
cltd
jne
jns
inc
mov
ret
loopne
inc
cmpb
xor
mov
cmp
mov
lea
cmpsb
cmp
push
fidivl
add
dec
jns
arpl
jp
inc
push
mov
sub
aad
push
sbb
lds
movhps
xor
dec
push
mov
mov
jbe
shrb
sbb
jmp
jp
sbb
std
push
rorl
xor
insl
sbb
divb
xchg
sbb
xchg
jae
add
push
push
sbbl
mov
and
cmpsl
in
in
movb
push
mov
shlb
cwtl
idivb
cmp
sbb
or
xorl
push
mov
pop
pop
mov
stc
mov
cmc
add
jle
push
shr
pop
jno
jae
and
nop
test
sub
nop
jg
js
and
push
push
push
add
pop
pop
pop
jno
xor
jne
jbe
sub
jl
cmc
or
or
cmc
xor
and
clc
add
shr
jle
push
jnp
sub
pop
cmp
push
je
push
inc
pop
pop
cmc
or
add
xchg
clc
cmp
push
sub
pop
nop
push
push
push
mov
mov
shr
shl
shr
xor
jecxz
mov
add
cmp
jl
sub
add
cmp
jl
sub
inc
loop
pop
shl
add
mov
pop
pop
ret
jp
cmp
jle
push
add
push
jp
jb
addr16
addr16
pop
and
jl
push
push
mov
pop
pop
clc
push
push
cmp
pop
pop
jno
js
sub
cld
xor
push
js
xor
pop
push
push
and
pop
pop
push
push
pop
pop
jbe
push
sub
pop
push
and
pop
rol
jb
push
cmp
pop
jnp
jle
push
add
shr
jecxz
call
add
loop
ret
jno
push
add
pop
inc
dec
jb
push
test
pop
jbe
push
xor
pop
nop
sub
push
jle
jae
xchg
xchg
pop
push
push
push
add
pop
pop
push
push
push
push
pop
pop
pop
pop
push
add
test
push
push
mov
pop
pop
cmc
push
jns
push
push
pop
pop
pop
push
jae
push
rol
pop
pop
xchg
push
inc
dec
pop
push
sub
pop
jnp
jbe
push
mov
pop
push
and
pop
or
rol
jnp
and
add
jp
jb
and
and
push
mov
pop
ror
sub
push
or
pop
add
rol
add
push
jp
js
and
pop
rol
push
push
jo
add
pop
pop
je
ja
ror
jbe
cmc
rol
jge
test
clc
push
push
push
mov
mov
bswap
mov
mov
bswap
mov
mov
jg
push
or
pop
push
jp
and
pop
push
push
sub
pop
pop
push
push
push
add
pop
pop
pop
ja
push
and
pop
or
jb
ja
push
or
pop
cmc
not
not
jb
jp
cmp
jg
jbe
and
clc
push
jns
ror
pop
nop
add
push
push
test
pop
pop
push
xor
pop
test
test
add
mov
mov
shl
sub
mov
xor
sub
mov
shr
xor
sub
sub
mov
shl
sub
mov
xor
sub
mov
shr
xor
sub
sub
sub
and
push
and
pop
push
push
add
pop
pop
or
or
jl
sub
shl
push
jl
push
jns
and
pop
pop
stc
sub
loop
pop
mov
bswap
mov
mov
bswap
mov
pop
pop
push
add
pop
cmc
jns
push
add
jb
js
test
rol
jno
push
jge
sub
pop
je
push
add
pop
push
push
mov
pop
pop
jne
cmc
and
and
sub
test
push
ror
pop
push
xor
pop
push
and
pop
push
jle
push
push
stc
pop
pop
pop
and
ret
jno
test
nop
clc
jns
jnp
rol
push
jns
push
add
pop
pop
push
je
add
pop
jns
jbe
push
push
pop
pop
push
mov
pop
cld
push
sub
pop
cmc
test
jp
push
push
or
pop
pop
je
jb
push
push
pop
pop
xor
push
inc
pop
push
push
mov
pop
pop
xor
jle
js
or
jno
jbe
cmp
cmp
js
push
mov
pop
cmp
jge
and
push
and
pop
test
push
or
pop
cld
push
push
xor
pop
pop
jl
and
push
jnp
cmp
pop
jnp
push
inc
dec
pop
cmc
push
push
mov
pop
pop
jb
test
test
rol
push
mov
pop
jge
push
inc
pop
test
ja
push
xchg
pop
jnp
or
jo
jp
test
push
sub
pop
jb
push
mov
pop
stc
push
push
mov
pop
pop
push
push
je
shl
pop
pop
cmc
shr
lea
jg
push
test
pop
push
push
push
rol
pop
pop
pop
push
push
or
pop
pop
or
jo
push
cmp
pop
push
push
push
pop
pop
pop
js
push
add
pop
push
ja
and
pop
dec
inc
push
js
and
pop
push
push
jl
shr
pop
pop
shl
push
rol
pop
or
cmp
and
push
and
pop
mov
add
push
jg
push
jg
mov
pop
pop
xor
je
push
xor
pop
ja
je
cmp
cmc
test
push
push
jae
cmp
pop
pop
jp
push
jle
or
pop
and
cmc
add
add
push
jnp
sub
pop
push
jo
test
pop
je
push
or
pop
rol
push
push
push
shr
pop
pop
pop
cmp
ror
jl
rol
push
sar
pop
sub
je
jnp
test
push
add
pop
and
cltd
jns
pop
mov
and
mov
mov
.byte
