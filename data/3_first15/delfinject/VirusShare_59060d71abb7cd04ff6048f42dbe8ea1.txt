xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
xor
ret
xchg
addl
xchg
ret
add
popl
push
push
pop
push
pop
push
xchg
add
pop
push
xchg
xchg
xor
xchg
xor
push
popl
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
mov
ret
push
xchg
add
ret
xchg
popl
push
ret
push
pop
push
pop
push
xchg
add
mul
xchg
xchg
xchg
push
addl
pop
ret
push
pop
ret
mov
ret
push
addl
pop
ret
push
pop
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
call
push
call
push
push
call
push
push
call
push
call
call
push
push
push
call
call
call
pop
pushl
xchg
push
call
push
push
push
call
push
push
push
call
push
push
call
push
push
push
call
push
cmp
jae
ret
add
call
adc
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
test
je
mov
mov
add
andl
mov
cmp
jne
mov
test
jns
add
sar
mov
xor
mov
jmp
mov
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
add
mov
or
mov
add
mov
incl
sub
add
call
jmp
addr16
addl
ret
addr16
out
mov
jecxz
test
jl
push
adc
mov
xor
push
pusha
inc
jb
fcmovbe
xor
add
scas
push
inc
int3
xchg
xor
sub
lahf
fs
sti
aam
rcrb
and
pop
dec
lods
fisubrl
xchg
fldt
or
lret
jnp
mov
es
sar
lret
movb
das
addr16
sbb
shll
pop
fstp
sbb
popa
pop
push
adc
aas
jbe
ljmp
mov
push
int3
jae
sbb
repz
sub
mov
mov
push
outsl
adc
mov
push
add
fcomps
scas
fadd
pop
inc
aad
rcl
mov
jo
sub
scas
fnstenv
fwait
out
add
popa
into
inc
lock
shll
pop
pop
dec
call
jl
xchg
repnz
insb
enter
fdivs
and
std
sub
lahf
cs
lock
movsb
mov
mov
dec
inc
mov
push
or
data16
jo
push
daa
xchg
movsl
mov
cmp
adc
imul
test
push
mov
inc
adc
xchg
mov
hlt
pop
sub
adc
aad
cmp
xchg
push
call
mov
fs
jl
repz
add
jb
push
push
cmp
movsb
pop
imul
jmp
jno
fisubrl
mov
mov
xor
daa
xor
fimuls
lahf
aam
test
xchg
jo
mov
xchg
cmp
ret
aaa
inc
mov
hlt
mov
push
or
inc
aaa
dec
bsf
sbb
test
int
hlt
or
cmpsb
flds
xchg
shll
lea
lret
sbb
out
mov
xor
repnz
lods
add
xor
mov
arpl
pop
fcomps
test
sti
stos
pop
stc
pop
jo
jg
rorl
fstps
inc
imul
inc
jl
add
popa
mov
in
paddw
xor
fists
or
lods
in
jg
out
inc
sub
ret
loop
out
sbb
adc
leave
push
xor
pop
jge
jp
aam
std
popa
sti
jecxz
das
lret
xchg
stc
out
dec
ja
dec
test
iret
int
push
out
mov
sbb
xchg
mov
xlat
cmp
sbb
fisubs
pushf
xor
stc
add
popf
sbb
rorl
sub
sbb
push
pop
in
ljmp
sub
cs
test
jae
hlt
movsl
jb
mov
cmpsl
arpl
and
and
imul
insb
sub
aas
loop
add
inc
add
add
das
loop
inc
lea
fimull
mov
out
sub
pop
pop
testb
and
add
xchg
push
adc
ss
xor
cmp
dec
sbb
xor
popf
lahf
inc
add
gs
pop
mov
mov
push
test
adc
es
mov
or
mov
jecxz
sbb
test
outsl
gs
inc
pop
out
or
pop
cli
stos
push
xor
jecxz
xchg
icebp
loopne
arpl
bound
in
ds
js
insb
xor
testb
and
pop
xchg
stos
and
cli
jmp
call
fsubs
xchg
or
cltd
in
jle
stc
cs
adc
cmpsl
cmp
imul
xchg
mov
cmpl
pop
frstor
xlat
and
lods
cmp
xchg
nop
lock
dec
jge
push
mov
jb
pop
hlt
dec
icebp
shrl
push
cltd
ret
xor
fcompl
insb
lods
call
mov
sbb
xchg
stos
addb
mov
dec
mov
push
mov
fnsave
add
pop
popf
jns
xlat
rorl
testl
fwait
std
inc
clc
fidivrs
and
dec
inc
mov
lods
cmc
lds
mov
pop
fidivs
and
jnp
sub
sub
scas
sub
jmp
loope
je
dec
add
and
lahf
sti
nop
sbb
push
shlb
popa
jl
fadds
test
xorl
or
cwtl
jle
pop
push
fnsave
jecxz
sbb
cld
iret
jb
mov
js
dec
stc
mov
inc
dec
nop
push
test
sub
pusha
int3
sbb
mov
jl
daa
mov
sub
inc
xchg
pop
test
int3
insl
dec
inc
insl
js
mov
add
cs
outsl
add
xchg
stos
sbb
or
dec
imul
lcall
out
addb
inc
mov
das
shrl
lret
pop
mov
ficompl
sbb
sub
repnz
sbb
mov
and
cmc
fs
ja
sbb
mov
pop
aam
out
fiaddl
mov
add
rcrl
leave
insl
sub
jnp
rdmsr
pop
insl
out
jmp
imul
cmp
int
dec
int
mov
inc
outsl
sarb
push
or
insb
inc
push
jns
sub
jmp
fldpi
inc
aam
jle
stc
lds
pop
lret
push
jbe
ret
mov
movd
xchg
pop
icebp
cmp
pushf
push
test
inc
inc
pop
xor
test
shlb
mov
enter
xor
stos
mov
outsl
xchg
int
das
cmp
or
sub
in
fld
scas
ret
in
add
mov
push
repnz
mov
cmp
jb
stc
aaa
ficompl
aad
ja
out
arpl
outsl
jmp
push
jg
push
mov
ss
inc
movsl
push
loope
lock
movsb
lahf
sar
xchg
rcrb
clc
mov
fmull
sbb
imul
clc
or
movsb
xor
mov
inc
js
dec
pushf
cmc
outsb
call
roll
rol
mov
xlat
push
xchg
cld
dec
inc
cmpsb
jnp
mov
pop
lock
cmp
test
inc
mov
mov
inc
dec
push
jo
dec
mov
mov
fnstenv
jns
fdivrs
sub
mov
aad
popa
dec
and
nop
imul
movsb
fisubrs
pop
dec
rorb
add
sahf
es
cmc
mov
jmp
sbb
std
inc
pop
nop
pop
pusha
xor
sbb
xchg
pop
cli
out
sub
or
inc
xchg
sub
loop
leave
lret
pop
sbb
and
mov
mov
and
cmpsb
xor
idivl
fisubrl
pop
pop
mov
push
dec
imul
popa
mov
xchg
in
pop
dec
in
or
repz
arpl
sti
jbe
dec
imul
cli
inc
data16
ret
dec
movsb
lcall
neg
cmp
or
inc
comiss
xorl
in
shlb
int
xchg
sub
shll
inc
push
jmp
fdivl
gs
cld
mov
nop
orb
cmpsb
inc
mov
adc
push
adc
xorl
pop
or
movsb
lret
into
cwtl
enter
sti
popa
adc
and
mov
push
jecxz
js
daa
test
fsub
jg
add
add
jnp
inc
js
in
pop
jl
pop
xor
cmpsb
fdiv
ds
mov
fdivrp
stos
aam
cmpsl
jnp
cmp
mov
dec
icebp
cs
inc
push
add
add
xlat
daa
dec
scas
repz
adc
mov
jae
xchg
push
fwait
inc
xor
inc
fsubrl
or
into
mov
ja
pop
and
lea
or
pop
bound
leave
aaa
pop
sub
cmp
outsl
adc
jecxz
and
imul
inc
sbbl
pop
insl
cwtl
mov
cld
push
scas
lods
in
sub
hlt
cli
cmc
rclb
lret
pop
cmp
dec
sbb
test
mov
imul
imul
addl
cmp
mov
jp
mov
jl
xchg
dec
fisttps
sahf
call
shll
into
adc
pop
insb
and
push
sbb
inc
push
xor
mov
out
ret
hlt
push
mov
xorl
inc
cmpsb
fmull
test
mov
sti
mov
enter
or
add
mov
xchg
sub
incb
jo
dec
sbb
xor
sub
in
sbb
mov
insl
lret
vsubsd
loopne
shll
pop
sahf
xor
sahf
popa
gs
clc
jo
cmpsl
dec
icebp
xchg
lea
pop
cmpsb
dec
jle
mov
out
jnp
cli
cmpsl
and
cltd
mov
xchg
imull
insb
mov
mov
sub
scas
mov
dec
xor
mov
clc
sbb
jecxz
icebp
mov
xor
pop
cli
push
pop
out
push
outsb
sub
dec
xor
cmp
mov
push
pushf
xchg
add
push
rcll
jne
in
adc
sbbl
rclb
xchg
or
jl
add
or
inc
cmp
mov
sbb
es
flds
mov
xchg
fsts
decb
insl
stos
xchg
dec
jns
fwait
outsb
cmpsb
in
mov
mov
xor
flds
sbb
mov
adc
out
or
in
and
xchg
adc
xchg
mov
mov
insb
sbb
sub
mov
push
mov
aad
and
in
jle
xchg
mov
lahf
in
push
int3
rcrb
stos
or
data16
sub
outsb
mov
cmp
xchg
xchg
sub
jae
lock
push
xchg
pop
push
and
or
rorb
mov
xchg
pop
mov
lret
inc
adc
push
mov
add
ljmp
cmp
cld
sub
sub
cmc
subb
mov
and
mov
inc
add
add
xchg
and
or
push
rcl
xchg
cltd
or
inc
jmp
out
cmp
ljmp
push
inc
pop
cmp
mov
add
mov
push
cmpsb
lea
ja
outsl
sub
push
jbe
jbe
dec
jns
pop
subl
hlt
pop
orb
cmc
fisubrs
jl
movl
xchg
aam
sbb
xorl
shlb
movl
push
and
jg
sub
repz
clc
push
movsb
stc
les
mov
das
xchg
sub
mov
cli
and
addb
scas
add
test
dec
lret
mov
data16
and
dec
push
pop
rcrl
in
mov
fsubrp
clc
repnz
mov
stos
pushf
mov
dec
bound
lods
aas
sub
iret
nop
outsl
adc
loope
xor
movsl
test
dec
icebp
mov
data16
leave
push
lods
jb
test
popa
and
adc
ret
pop
xor
xchg
out
mov
jns
lahf
xchg
test
inc
dec
mov
lahf
dec
sub
xchg
rcll
testl
pop
add
jb
in
mov
mov
cld
mov
mov
xor
xchg
andb
jle
shll
xchg
call
mov
sub
jo
mov
and
sbb
lcall
into
sbbl
gs
imull
jb
jmp
push
and
and
fstps
sub
or
ret
and
in
roll
pop
aam
rcl
ja
xor
stc
roll
insl
fstpt
pop
test
iret
add
lea
jae
adc
popf
lds
jo
fstpt
xchg
mov
lret
repnz
pop
in
xchg
mov
cmpsl
dec
nop
cs
roll
gs
scas
mov
xor
test
lea
inc
scas
in
dec
gs
fisubrl
in
add
jmp
fdivs
scas
and
cmc
jns
aam
jg
pusha
dec
pop
cmp
bound
and
lds
and
fcompl
jge
or
mov
push
pusha
movsb
sbbl
sub
sub
cmp
repz
jmp
mov
and
cli
out
sbb
mov
repz
arpl
mov
jo
cmp
andb
push
pop
xor
jmp
mov
pop
test
and
sahf
idivb
push
sub
ds
sub
xor
jp
repnz
jmp
fstl
inc
cmp
xchg
push
pop
push
mov
out
imul
xchg
adc
jbe
lret
out
stos
mov
inc
jle
mov
jo
sahf
test
mov
stc
decb
push
fadd
inc
xchg
and
shl
fildll
adc
xor
dec
and
or
aad
leave
adc
lods
lret
sarb
and
dec
scas
std
sub
enter
fxch
rorl
jp
pusha
lea
js
movsb
cli
setne
inc
jp
cwtl
push
stc
and
fsubrs
xchg
xchg
imul
inc
cli
and
in
mov
mov
shlb
std
dec
and
insl
and
ljmp
push
fstps
mov
pop
not
add
out
test
fmuls
add
mov
popl
je
inc
hlt
cmpsl
mov
test
mov
dec
and
or
loop
imul
ljmp
lcall
lret
es
imul
cmpsl
addr16
and
mov
scas
pop
sbb
jb
cmpsl
xlat
into
fisttpll
xor
cmp
stos
ss
xor
and
jle
mov
and
bound
ss
test
lods
jmp
das
fwait
int3
push
sti
into
into
dec
lock
xor
jp
repnz
jp
aad
ljmp
push
fwait
out
jp
jne
pushf
jp
mov
dec
hlt
into
sub
je
adc
mov
test
or
dec
stos
xchg
inc
jae
mov
or
test
imul
add
les
leave
divb
mov
push
test
subb
jmp
mov
cltd
fidivrl
ljmp
mov
pop
dec
adc
pop
in
lods
jecxz
sub
int
cs
dec
xchg
mov
es
clc
int
and
loope
clc
js
lea
icebp
jnp
pop
dec
sti
sbbb
repz
push
mov
movsl
dec
mov
cmp
adc
aad
test
and
xchg
mov
inc
mov
outsl
mov
clc
iret
dec
mov
pop
pop
mov
xchg
inc
mov
xor
add
notb
ret
cld
mov
mov
sbb
fcoms
cmp
jecxz
mov
scas
adc
bound
add
jmp
jg
je
les
imul
es
inc
loope
mov
lds
mov
jp
bound
std
inc
jo
in
sahf
push
or
enter
cmp
adc
dec
imul
enter
les
popf
cmp
lds
insb
adc
shlb
bound
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
test
ret
push
cmp
xor
pop
sti
testb
ds
imul
mov
sub
lock
or
cmpsl
or
jmp
push
aad
call
je
cli
add
ljmp
jle
mov
or
aad
popa
or
cs
xchg
les
cld
pop
aaa
ror
int
pop
pop
add
sub
mov
fisubrs
fsubp
cmp
cmpsb
fmulp
test
xor
outsl
and
fsubrp
jae,pn
mov
scas
push
lea
pushl
mov
pop
mov
mov
bound
xor
je
ret
jg
mov
adc
dec
xor
sub
ljmp
push
ficompl
adc
sbb
xchg
mov
jmp
iret
xor
out
mov
je
decb
or
mov
lods
jo
mov
push
xchg
mov
movsb
mov
xor
lahf
xchg
pushf
sbb
cmp
mov
and
pop
dec
jmp
cmp
mov
xlat
arpl
ds
out
sbb
repnz
mov
les
xchg
lock
loopne
sbb
sarb
daa
call
ljmp
int
lods
mov
rcll
dec
dec
data16
popa
pushf
std
xchg
and
lock
rcrl
or
pop
and
sub
and
outsl
dec
sbb
push
inc
adc
dec
les
lahf
ret
cltd
test
fimuls
sub
pop
mov
pop
das
mov
and
ret
mov
dec
jae
insl
jns
push
jmp
jae
mov
push
mov
push
add
loopne
mov
xor
mov
xchg
ds
pop
push
mov
sbb
mov
sub
jbe
pop
xor
push
stc
xchg
repnz
sub
clc
xor
arpl
call
mov
rcrb
mov
inc
add
adc
sti
cs
unpcklps
cltd
sub
mov
jmp
mov
pop
ret
ret
push
loope
sbb
testb
mov
xchg
mov
fwait
cs
push
sbb
cmc
in
cmp
sarl
jbe
dec
sub
mov
mov
into
fsub
pushf
insl
sbb
jnp
push
xchg
xchg
rolb
insb
int3
mov
mov
dec
pusha
jge
mov
jmp
sub
enter
jecxz
test
ljmp
push
insl
add
das
outsl
fdivl
fildll
or
addr16
stos
add
inc
or
add
add
addr16
js
mov
test
dec
in
mov
and
and
lret
cld
jnp,pn
cmp
mov
incl
shrb
cmp
ljmp
out
ret
je
insl
outsl
push
xchg
hlt
mov
jne
test
mov
jo
add
push
lret
push
in
ss
adc
cmp
cmp
pop
js
pop
pop
adc
lahf
sub
imul
rcrl
test
cmp
mov
cwtl
dec
dec
int3
sbb
daa
xchg
ja
iret
push
sbb
mov
popf
jecxz
fstps
adc
xchg
jecxz
ds
in
xchg
lods
cltd
push
push
add
mov
sub
imul
arpl
bound
mov
cs
fadds
fnstcw
push
notl
loopne
into
ljmp
out
adc
jmp
dec
mov
divb
dec
in
or
dec
scas
mov
cltd
fwait
movsb
inc
sti
sbb
mov
fnstcw
imul
mov
add
in
xchg
fldl
fidivs
insb
testb
dec
cs
sbb
mov
mov
jns
fisubrl
rcr
loopne,pt
sbb
pusha
vpmulhw
push
mov
add
and
bound
lock
popf
stc
push
add
popf
sbb
jge
in
mov
icebp
fstps
and
out
pop
sbb
fisubs
add
add
jge
and
jae
in
adc
addr16
repnz
push
loopne
insl
aas
mov
add
sbb
push
adcb
mov
mov
mov
pop
xchg
in
int
int
sar
mov
cwtl
out
leave
stc
mov
call
pop
lock
mov
sbb
mov
jmp
insb
fcmovnb
or
rorb
jmp
lods
sbb
insb
sti
and
int
enter
sub
outsl
mov
add
and
cmp
pop
or
mov
or
stos
push
cmc
popa
shl
xor
pop
or
out
sti
es
dec
lods
stos
fucom
mov
jg
jg
cld
mov
pop
jp
sahf
push
ficomps
out
jae
push
jmp
mov
push
shl
jno
mov
loope
sub
pop
push
shrl
pusha
inc
sub
add
jnp
outsl
in
stos
shll
out
jno
pop
enter
int3
sub
inc
inc
lahf
dec
xchg
bound
mov
sahf
mov
mov
fdivl
jp
push
jge
les
mov
mov
cmp
mov
aas
lahf
mov
xchg
jl
mov
mov
test
nop
inc
repnz
call
fcoml
loopne
mov
sub
and
shrl
icebp
test
inc
cmp
mov
xchg
cli
xchg
pop
mov
dec
shrb
and
aas
or
cs
fistpl
stos
subl
ss
aam
or
or
call
jbe
push
pop
gs
fwait
mov
inc
mov
or
mov
das
push
pop
out
mov
test
fsubs
cmp
dec
fisttpl
add
andb
enter
int3
push
mov
popf
out
pop
fs
cmp
sbb
aad
or
push
into
pop
or
mov
xchg
out
dec
jge
jle
inc
jmp
test
pop
xchg
shl
dec
mov
popa
jge
jge
int3
data16
jmp
pop
mov
mov
xchg
fcmove
sbb
call
mov
add
sbb
enter
push
aad
jns
sub
and
lds
mov
xor
pop
jmp
and
adc
jae
out
push
cmp
push
in
mov
jne
xchg
xchg
pop
divb
jb
jno
je
je
mov
xchg
loope
mov
pop
ja
bound
arpl
jmp
jg
subl
sub
pop
adc
bound
jle
data16
sbb
cwtl
pop
xchg
mov
in
xor
push
adc
push
dec
shlb
shll
dec
loop
fsubs
pop
mov
xor
sahf
shl
lret
les
mov
das
push
adc
mov
pop
inc
cs
mov
daa
lock
stos
push
pop
dec
ficoms
sbb
fsub
mov
dec
out
mov
jmp
mov
dec
pushf
cmp
cmpsb
pop
pop
xor
mov
adc
pop
add
sub
dec
aaa
into
mov
aaa
in
stos
mov
jns
inc
cltd
push
xchg
scas
xchg
sbb
cmp
cmp
mov
push
mov
clc
dec
lret
cmp
and
inc
dec
mov
daa
and
es
sbb
or
lret
mov
pop
sbb
fwait
in
int
add
cmp
int
inc
add
cltd
in
adc
xchg
shl
dec
filds
test
call
ds
sub
push
xchg
push
sub
push
jnp
aam
jnp
sahf
pushf
mov
xor
mov
jecxz
out
fnstcw
lods
hlt
out
pop
dec
jae
cltd
push
movsl
xchg
xchg
push
sub
add
and
iret
sahf
mov
xchg
nop
gs
mov
add
push
pop
in
gs
xor
push
mov
clc
add
dec
sbb
jb
xchg
xchg
mov
rcrl
mov
fdivl
icebp
cltd
xor
add
xchg
aam
pop
xor
xchg
iret
jecxz
inc
scas
mov
sahf
cmp
call
or
push
iret
sysexit
mov
jnp
popa
shrb
iret
repnz
faddl
lock
scas
xor
out
inc
je
ret
icebp
movsb
dec
xchg
aaa
icebp
repnz
mov
push
adc
inc
sbb
outsl
aam
les
xchg
sub
mov
and
jae
aam
jp
pop
push
loop
xlat
insb
movsl
jg
aad
pop
dec
mov
idivb
andb
and
xor
ret
pop
test
adc
mov
das
mov
adc
in
in
pop
jl
fwait
lea
add
inc
in
hlt
orb
mov
imul
mov
int3
push
sbb
scas
lret
xor
fsubrs
sbb
daa
xor
lret
pushf
pop
and
sti
fbld
shrb
mov
dec
lcall
ret
imul
jmp
aas
ret
sbb
jnp
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
cmc
loope
mov
sbb
push
insl
xor
mov
xchg
movsb
mov
mov
imul
lds
fidivrs
dec
adc
in
loope
sub
push
lock
call
in
pop
cld
int
sub
out
adc
cmpsl
lret
dec
xchg
je
out
adc
xor
arpl
xchg
push
dec
xchg
push
loopne
inc
rolb
lcall
sbb
mov
imul
out
jmp
adc
xor
fcmovbe
mov
inc
jnp
xchg
jg
pop
push
mov
into
push
sahf
jae
mov
dec
adc
adc
ds
int
sbb
imul
mov
dec
in
jne
sub
jle
jo
ret
cwtl
gs
cmc
mov
cmp
lds
insb
adc
pop
out
aaa
sbbb
jle
mov
sub
cli
insb
call
nop
lods
sbb
and
leave
fcoml
fst
orb
sti
ds
fisttpl
in
or
test
pop
jmp
push
minps
dec
add
adc
incl
add
shll
dec
icebp
fmul
dec
mov
inc
aaa
lahf
daa
gs
inc
xor
adc
adc
xchg
jg
les
andl
pop
add
imul
fiaddl
push
loopne
addr16
insb
dec
pop
in
inc
xchg
nop
xchg
inc
mov
cltd
mov
incb
rorl
push
xchg
mov
mov
lea
sub
jecxz
aad
pop
js
mov
shrl
xchg
dec
movsl
inc
xor
inc
pusha
or
loopne
into
jnp
arpl
int3
pop
cltd
stc
shl
cmp
mov
sub
sbb
xchg
mov
ss
cmc
mov
cmpsb
lds
xor
xor
sbb
lret
jle
stc
iret
aad
jno
sahf
xchg
in
adcb
call
cli
xchg
es
jo
inc
xor
jne
ds
xor
adc
sbb
inc
pop
dec
push
cld
push
or
push
dec
shrl
gs
mov
fadd
fsubrl
dec
int
mov
dec
arpl
repz
pop
or
out
jg
xchg
xchg
fidivl
movsb
data16
repz
call
ret
mov
lea
sbb
mov
popa
xor
adc
sbb
jle
out
cmpsl
dec
jo
fstpt
push
stc
jmp
lods
hlt
mov
stc
inc
xchg
cmpsl
or
mov
jmp
sbb
mov
add
je
cmpsl
mov
clc
lods
sub
aaa
clc
int
push
stc
jg
mov
repz
aaa
call
mov
pushf
js
inc
jns
mov
add
mov
popa
jae
xor
xchg
mov
andps
jno
xor
out
add
adc
fiadds
cmp
pop
or
cmpsb
insl
inc
pop
adc
data16
push
cli
call
adc
ds
and
mov
lahf
mov
xchg
add
sub
dec
mov
xchg
xlat
fcompl
lea
rcl
fnsave
xchg
mov
lea
stos
lods
sub
int
lods
stc
push
das
repnz
adc
fcompl
xchg
repz
out
out
push
or
cli
mov
push
adc
mov
sub
sbb
mov
sub
jecxz
xor
outsl
mov
loope
or
insl
cmpsb
outsl
stc
sub
lods
mov
les
fs
mov
cmp
addr16
repnz
test
daa
push
fmull
pushw
sub
xlat
outsl
pop
jp
sbb
xchg
fisttpll
movsl
mov
mov
out
mov
cld
jno
lret
lods
mov
nop
sub
and
and
or
and
aas
pop
adc
cmc
inc
lea
add
popf
and
sub
gs
xchg
fwait
jmp
fidivrl
aas
mov
mov
out
xor
lea
dec
iret
mov
das
or
sarl
mov
push
or
sbb
or
arpl
mov
lods
orb
jbe
add
jle
mov
push
mov
pop
jb
mov
jmp
stos
cli
sub
fcmovne
mov
test
nop
sbb
cmpsb
xchg
pop
movsl
out
sub
mov
mov
push
fsubr
ja
testb
mov
negb
push
and
dec
lods
scas
loopne
sti
arpl
jmpw
dec
insb
mov
scas
cltd
mov
and
pop
xchg
outsl
pop
adc
xor
push
in
sub
adcl
popf
int
out
ret
xchg
sbb
push
mov
bnd
shrb
dec
lods
insb
mov
add
in
test
jbe
mov
enter
repz
cmpsl
in
repz
xlat
pop
lret
mov
and
mov
mov
pop
sub
cmp
ja
and
pop
sbb
sbb
fcomp
repz
sub
xchg
sbb
dec
jbe
hlt
sub
in
add
xor
subl
inc
ljmp
sub
gs
faddl
push
pusha
insl
push
push
call
scas
jp
pop
call
cmp
adc
push
jae
js
insl
or
add
in
push
mov
and
push
sub
loop
pop
cmp
fwait
rcrb
cmp
xchg
je
cmp
ss
jo
sahf
mov
and
inc
jb
sbb
loop
shr
jno
sbb
shll
movsl
scas
or
xchg
inc
jg
mov
rcl
xor
sub
dec
xchg
xchg
adc
mov
mov
loop
jne
mov
inc
push
out
jbe
out
and
xlat
xor
mov
xchg
std
jge
sti
lret
mov
es
mov
and
xor
stc
sahf
insl
scas
int
fdiv
xorl
enter
push
push
add
sub
int3
insb
cmp
jae
cmp
dec
xchg
bound
cmp
pop
mov
roll
adc
aaa
push
xor
cwtl
loop
and
arpl
xor
es
fs
xchg
dec
inc
adc
xrelease
loopne
fadds
arpl
stc
cltd
in
sbb
pop
lret
cmp
or
mov
xchg
adc
jns
adc
jp
push
loope
aad
adc
icebp
ss
pop
and
xor
das
cmpsl
jmp
fcoml
xor
push
cmp
mov
repnz
pusha
lds
fadd
mov
sub
iret
lret
insl
pop
pop
and
sub
sub
out
imul
roll
jg
pop
mov
sub
sub
push
in
pop
aas
pop
mov
push
mov
pushf
test
out
or
adc
mov
push
xor
andl
dec
mov
adc
ds
test
into
ljmp
repz
movsb
pusha
adc
out
shlb
mov
mov
cmpl
jl
mov
pusha
ss
sbb
fidivrs
jge
mov
into
sbb
lds
xchg
fs
cld
int
sbb
push
push
or
dec
jnp
jecxz
dec
push
xor
jae
sub
pop
aaa
or
pusha
fcom
fdivs
incl
push
stc
sbb
and
loop
idivl
ljmp
add
loope
jg
cmc
xchg
sbb
cs
mov
mov
add
fldl
mov
jne
jae
adc
stc
insb
pushf
xchg
xchg
xchg
or
nop
add
pop
or
repnz
aas
xorl
cmc
pop
into
pop
lea
mov
mov
xor
lea
inc
push
pop
in
xchg
push
sub
sub
jbe
inc
dec
adc
xor
mov
jl
xchg
ss
push
test
jns
add
cmp
mov
sub
inc
sub
sbb
fidivrs
and
jae
push
fcos
and
mov
sbbb
scas
loope
mov
cmp
in
in
cmp
jmp
out
xchg
test
jns
ffreep
xchg
gs
jmp
repz
or
add
nop
pop
notl
jg
or
ret
stos
xchg
ret
mov
mov
cmp
dec
jne
adc
inc
lret
inc
inc
jne
scas
xchg
fsts
sbb
mov
popf
mov
cltd
aad
cmc
xor
insb
add
scas
repz
add
mov
fcomp
mov
jns
cli
bound
pop
in
add
xor
adc
inc
add
or
sub
popf
in
add
sub
stc
jge
popf
push
mov
sub
andw
ss
hlt
push
dec
shlb
iret
add
cwtl
xorb
popa
sub
movsb
fldenv
mov
idivb
push
adc
divb
push
mov
scas
sub
cli
xor
es
add
mov
mov
fldenv
sbb
loopne
pop
cmpsl
inc
dec
icebp
stos
push
pushf
and
mov
insl
sti
out
fcoml
mov
out
test
jno
xchg
call
outsb
add
fyl2x
fnstcw
sbb
lahf
inc
dec
pop
popf
cmp
divl
cld
incl
sbb
loope
rclb
inc
sti
rol
addl
loop
mov
movl
lcall
loopne
mov
leave
incb
jg
mov
jne
hlt
push
sbb
lock
mov
fwait
push
sbb
sub
and
or
stos
mov
ret
dec
jge
sbb
lret
negl
cmpl
push
add
aas
aas
int3
add
xor
fistpl
fcoms
incb
in
das
std
xor
popf
btr
daa
xchg
imul
pop
cmp
es
inc
cli
por
inc
fbld
out
push
dec
cmp
fsubs
lcall
mov
call
enter
jae
mov
or
sub
jne
or
push
or
int
jl
je
cmp
add
pop
adcl
lock
xlat
jo
inc
add
jl
inc
sahf
push
jae
das
movsl
xor
aas
or
mov
pop
pop
jle
lods
mov
and
paddsb
outsl
fisttpl
in
shll
push
pop
push
jns
lcall
addl
sbb
push
jp
ljmp
dec
into
insb
fidivrs
jno
xchg
sbb
xor
imul
fwait
call
sbb
adc
mov
leave
xor
xchg
push
xor
sbb
cs
inc
jnp
rorl
adc
xor
adc
std
mov
xchg
mov
loop
movsl
pushf
lahf
push
pop
inc
push
pushf
call
shlb
cmp
push
ja
insl
shl
fstpt
jg
push
fwait
push
xor
je
mov
hlt
ficoml
xor
push
jne
cmp
js
mov
fisttpl
icebp
addr16
loop
mov
addb
fcoms
aad
or
inc
jo
subb
inc
xchg
je
movsb
dec
mov
mov
cltd
daa
adcb
mov
lahf
xchg
insb
jne
fadd
push
xor
pop
or
add
jnp
imul
cmc
imul
jl
mov
into
inc
xlat
push
cmp
mov
dec
and
stos
loope
mov
or
and
mov
test
dec
sub
sbb
lods
sbb
push
sahf
jecxz
push
inc
jo
sbb
jnp
mov
ret
pop
rolb
adc
out
call
xchg
popa
mov
and
inc
inc
idivb
adc
fisubl
sbbl
mov
jne
pop
lods
lock
push
sub
xor
and
pushf
cmpsl
cmp
lret
mov
shll
pop
movsb
xor
add
les
sbb
mov
jae
mov
pop
lcall
insb
or
test
or
or
ljmp
in
push
int3
fsub
mov
lahf
lahf
inc
jmp
scas
dec
push
repnz
icebp
test
and
sarl
jno
scas
mov
inc
aad
shlb
sub
jmp
cld
lcall
push
in
lods
jb
jne
gs
mov
push
mov
ja
movb
fs
arpl
xchg
notl
jne
adc
push
jecxz
dec
idivb
sbb
push
out
pop
dec
or
xchg
iret
pusha
dec
xor
lods
es
push
mov
xor
stos
mov
stos
jp
sbb
inc
adc
or
shrb
nop
xchg
lahf
out
xchg
dec
xchg
add
or
jmp
sub
sahf
aaa
mov
adc
shl
sub
es
ds
outsb
jb
jb
insl
cli
inc
pop
push
ss
fldcw
fwait
lcall
dec
mov
sahf
int
movsb
outsl
imul
fucom
clc
in
push
sub
pop
popf
jo
mov
push
xor
sub
and
pop
sub
das
fdivrs
into
cmp
ja
mov
jae
sub
sub
ficomps
mov
xor
mov
jnp
ljmp
je
mov
xlat
inc
jle
loop
dec
mov
jo
sahf
rol
sbb
jnp
es
bnd
mov
mov
mov
cmpsl
repnz
cmp
lretw
jnp
testl
dec
mov
aad
mov
call
iret
mov
js
add
popa
mov
dec
and
jo
jge
loope
pop
adc
into
mov
aad
adc
add
inc
and
push
lods
push
arpl
dec
inc
xchg
imul
adc
mov
pop
mov
loope
cmp
test
mov
loopne
or
push
mov
mov
push
sbb
es
int3
adc
jg
mov
jnp
pop
sbb
mov
dec
test
cmp
inc
mov
mov
sbb
inc
ret
mov
or
adc
adc
sub
cli
cmp
cli
scas
ficompl
mov
dec
sub
cmp
adc
test
sbb
lcall
test
mov
mov
aad
nop
mov
pop
add
sahf
in
and
orb
mov
lods
scas
in
xchg
add
pop
sub
rcll
roll
mov
popa
or
mov
aas
cmpsl
cmp
sbb
jp
inc
jge
movb
push
adc
js
aad
lret
shrl
shll
inc
xchg
sub
out
xlat
std
add
xchg
xchg
cmp
pop
and
jae
or
push
popf
and
pop
pushf
stos
push
sbb
fists
xchg
gs
pop
push
push
outsb
jecxz
notb
inc
jo
lcall
scas
bound
sbb
jmp
ds
sub
stos
push
inc
xor
xchg
mov
jg
mov
insb
dec
pushf
cmc
in
ret
and
jno
mov
aam
js
and
inc
ljmp
and
jbe
dec
jo
mov
test
push
fcmovnbe
or
push
imul
jg
jb
push
sahf
pop
and
adc
or
es
cmc
mov
sub
pop
popf
or
jge
inc
inc
repnz
test
movsb
mov
lret
scas
iret
push
xchg
xchg
ret
adc
mov
int
daa
aad
push
ja
rcll
gs
dec
jmp
mov
sti
test
ret
push
sub
push
mov
jl
mov
gs
fldcw
mov
cs
aam
int
cs
in
dec
cmp
filds
xor
daa
sub
test
xchg
mov
pop
js
les
or
dec
xor
arpl
or
xchg
js
out
xor
jae
cmp
mov
mov
pop
xlat
sti
jns
loopne
imul
fwait
fdivrl
cmp
cmc
dec
mov
sti
cmp
pmulhw
div
and
je
movsl
ja
test
les
jo
mov
out
nop
scas
imul
dec
xchg
push
pop
push
pop
out
mov
cmp
addr16
mov
out
or
and
rcl
cmp
mov
inc
add
pushf
xchg
cltd
push
neg
in
cli
pop
cmp
mov
mov
add
jmp
adc
mov
mov
jge
sub
cmp
sbb
mov
imul
xchg
adc
xchg
dec
out
int
lea
pop
pop
rcrb
mov
mov
jmp
dec
ja
sub
enter
inc
fisubrs
mov
mov
fidivs
pop
add
sub
les
mov
jno
stc
and
loop
and
lea
insl
jg
es
enter
loop
scas
xor
adc
jmp
add
add
inc
popl
xchg
in
add
inc
jns
sub
outsl
push
and
ds
fnstcw
jmp
call
and
jge
gs
jge
ds
cmp
roll
aad
inc
mov
lahf
lret
popa
pop
cmp
sahf
sbb
sbb
sahf
mov
pop
and
arpl
stos
lods
add
xchg
iret
xchg
rcrb
insb
pop
arpl
jle
scas
or
js
jp
adc
mov
adc
cmp
sub
addr16
cmp
dec
xor
ds
jg
ds
loope
mov
inc
std
jle
ret
mov
rorb
negl
sub
xor
add
mov
xchg
ficompl
mov
inc
movq
test
gs
aad
ficompl
in
stos
stc
pop
push
das
bts
pusha
call
out
nop
sbb
repz
sub
jnp
ljmp
in
out
or
dec
fdivl
add
scas
adc
push
jne
outsb
push
dec
std
aas
sbb
out
mov
push
test
push
xor
pop
repz
and
dec
imull
or
xor
inc
dec
test
pop
ja
cmp
imulb
dec
inc
test
adc
jge
das
sbb
nop
insl
sarl
pop
push
mov
lret
ss
cmp
sar
push
or
test
loop
fnstenv
rcr
scas
in
jp
push
hlt
fstp
rorl
sahf
je
jg
sbb
push
int
mov
push
mov
jbe
loope
or
add
icebp
jnp
sbb
cmpsl
pop
push
pushf
popf
cli
inc
pop
add
cld
fcomi
sbb
lock
cmc
push
dec
shrl
icebp
cmc
cmpsl
sbb
mov
int
pusha
and
xchg
movsl
gs
pop
ficompl
pop
movsl
mov
push
mov
testl
popa
and
cmp
cmp
js
cwtl
addr16
sub
data16
xor
xchg
dec
ds
adcb
mov
lods
out
scas
cmc
xor
aad
jbe
sub
xchg
and
cmpsl
sbb
ret
adc
mov
sub
mov
and
fldenv
or
fcomp
inc
mov
into
or
mov
out
cli
stc
inc
inc
in
mov
imul
adc
dec
push
adc
mov
inc
mov
adc
sub
insb
sbb
clc
sbbb
jb
call
push
ljmp
xor
ljmp
mov
shll
outsl
push
push
scas
sbb
sbb
cs
xchg
cmc
or
rcrb
sbb
subb
lods
cli
movsb
sub
push
pusha
cmp
test
mov
je
sub
jge
inc
nop
es
cld
jmp
divl
nop
cwtl
xor
movsb
push
rorl
dec
jle
sub
sbb
and
push
mov
scas
xchg
inc
sbb
ret
jmp
cli
push
addr16
jae
std
dec
shr
push
dec
mov
aaa
pushf
testb
dec
add
das
push
xchg
shll
es
pop
scas
dec
arpl
jnp
jge
and
adc
loope
ds
or
lea
pop
add
pushf
push
sbbl
jl
ds
or
push
iret
call
mov
mov
jno
xor
pop
lods
cmp
or
leave
sub
cmp
sub
jl
add
mov
icebp
dec
pop
mov
mov
or
xchg
push
movsl
stos
pop
scas
nop
push
repnz
and
push
cmp
jnp
subl
cmp
xchg
lods
or
lods
imul
data16
loope
push
sti
mov
and
add
xchg
adc
dec
imul
inc
push
mov
repz
dec
rclb
add
sub
push
movsl
cmp
jne
sub
idivl
into
dec
nop
popa
jne
push
inc
sbb
call
xorb
insl
mov
loope
loop
mov
loope
sub
fstl
cmpsl
jg
jae
cmpb
mov
in
add
cmp
xor
loopne
mov
mov
lods
aam
inc
cmp
pushf
jp
sub
or
cmp
movsb
dec
imul
mov
out
mov
pop
outsb
es
js
sbb
in
adc
pop
lcall
push
out
jmp
aad
int3
push
add
cltd
movsl
mov
adc
test
cmp
or
mov
insl
ljmp
push
pop
sti
lahf
aad
pop
or
test
fidivrl
lock
sbb
mov
mov
cmpsl
pop
adc
or
daa
jmp
negb
pop
jl
and
dec
ljmp
mov
dec
and
cld
inc
cmp
adc
jg
pop
xchg
sbb
fstps
or
movsb
or
pop
ds
cmp
popf
sbb
push
mov
pop
or
outsb
insl
popa
xor
addl
mov
or
cld
cmpb
cmpsb
andb
mov
push
or
mov
out
es
adc
push
test
pop
je
sub
push
sbb
pop
adc
xor
mov
push
mov
aam
adc
mov
aam
scas
mov
fildll
rcr
xor
or
mov
push
inc
rcrb
xor
in
aaa
sbb
add
jnp
dec
call
cmp
dec
in
int
cmp
imul
push
mov
add
jo
and
fiadds
cmovne
sbb
and
push
mov
mov
out
es
in
jno
fmulp
mov
xchg
mov
add
sahf
adc
or
mov
cltd
sub
cwtl
pop
call
fwait
mull
cmp
pop
pop
or
add
loop
push
fwait
dec
jle
xor
call
or
xchg
or
adc
popf
adc
lods
xchg
lods
popa
xor
push
mov
aaa
or
loopne
movsb
pushf
pop
jle
bswap
fs
cmp
loop,pn
mov
shlb
popa
call
mov
sbb
pop
inc
dec
sti
mov
xor
push
cli
ds
inc
sub
icebp
leave
push
lret
pop
repz
cmp
mov
mov
pop
sbb
dec
push
jnp
fst
xor
flds
js
inc
sbb
adc
and
mov
jnp
and
dec
inc
mov
iret
push
outsb
hlt
mov
and
out
inc
les
test
iret
sbb
cltd
and
insl
and
sub
cld
out
stc
ret
aad
sub
sub
fwait
sub
sbb
aas
popf
inc
xor
repz
std
mov
xor
xor
push
cwtl
shll
cmp
dec
mov
cmpsl
dec
mov
xor
out
push
xlat
sub
xchg
hlt
cmpsl
jns
inc
pop
mov
pop
subb
mov
stos
push
js
and
jnp
pop
push
pop
push
inc
cwtl
filds
inc
fwait
aam
aaa
lret
outsb
and
xor
adc
pop
adc
fmull
mov
push
mov
sbb
test
cmp
dec
imul
outsl
sub
ret
addr16
pop
mov
div
jp
mov
pop
xchg
mov
and
mov
insb
popa
pop
pushf
cmp
fdivr
cwtl
and
sub
adc
inc
jo
push
popf
test
loop
ss
stos
push
pop
adc
cs
sub
xchg
insb
push
sub
xor
sub
xlat
or
sbb
push
jns
lods
xor
and
push
test
ljmp
mov
ja
jl
inc
sub
and
jle
mov
mov
ljmp
cmp
lds
insb
adc
stos
int
loopne
mov
bound
andps
les
lock
add
jne
or
cltd
xchg
sar
testl
pop
cli
testb
jmp
or
cwtl
jbe
lock
sbb
cmpsb
fisubl
loop
test
dec
mov
add
loopne
jg
and
insb
ja
decl
inc
sti
inc
xlat
mov
sbb
mov
xchg
or
cmpb
into
xor
mov
insb
mov
jl
addl
fsubrp
leave
insl
mov
repnz
mov
test
jbe
nop
mov
mov
and
testl
out
daa
sub
hlt
lahf
insb
pusha
gs
and
sub
xorb
xorl
out
inc
in
nop
vorpd
fs
cmp
sbb
lcall
pop
pop
lock
mov
les
mov
mov
fwait
negl
mov
cmp
test
sub
add
outsb
stc
clc
mov
cmp
inc
push
dec
aam
mov
bound
out
inc
push
test
inc
add
mov
ljmp
ja
adc
leave
loope
xor
aad
shrl
jno
insb
cmp
fnstsw
fidivl
sub
mov
lret
dec
xchg
mov
push
fisubl
xor
mov
push
inc
cmp
lahf
idivb
dec
ret
jg
fildl
es
addl
sbb
rcl
jae
cmpsb
jp
push
mov
pop
test
xor
xchg
mov
dec
dec
mov
roll
jl
xlat
push
push
addb
xor
aaa
mov
adc
inc
jl
out
jbe
sub
lret
pop
ficomps
sub
adc
jge
pop
mov
adc
lret
inc
rolb
repz
ficoml
lahf
pop
js
push
ret
aaa
lods
insl
pusha
inc
test
sti
add
mov
in
out
or
lcall
mov
mov
pop
and
adc
mov
pop
sbb
ret
pop
sub
mull
scas
xchg
insb
fbld
cwtl
mov
ret
mov
jg
stos
fistl
sbb
cld
cmp
pusha
mov
stc
mov
insl
xchg
cmp
inc
adc
mov
subb
out
aas
mov
xchg
xchg
enter
loopne,pt
js
add
pusha
pop
sub
test
xor
cmp
pop
inc
out
mov
enter
setnp
stc
stos
bnd
lods
loopne
mov
lods
add
dec
int
jecxz
cli
or
cltd
fisttpll
inc
pop
push
clc
jne
lods
imul
neg
or
lods
inc
pop
sar
idivl
nop
sahf
scas
ss
aam
loop
pop
xchg
fisubs
push
fidivl
push
mov
iret
jg
rcl
jg
movl
lret
jle
fimull
fisttps
cli
sub
loopne
orl
push
in
pusha
fnsave
inc
mov
stos
adc
adc
xchg
add
push
sahf
movsl
mov
js
dec
mov
cltd
pop
add
loope
dec
or
cmpsl
in
sti
xchg
jecxz
or
arpl
sbb
lcall
sub
cmp
fadds
lods
inc
ds
inc
and
mov
lods
push
dec
fs
lret
ljmp
adc
pop
sti
gs
xchg
rolb
mov
add
in
adc
insl
sbb
sbb
add
pop
out
jae
enter
nop
fimuls
inc
sbb
sahf
dec
pushf
sti
mov
fsubrl
cli
pop
icebp
mov
popf
ret
rcll
adc
imul
lahf
stos
test
inc
int3
and
sarl
rcrb
mov
movsl
call
fxam
aad
push
mov
inc
js
inc
ja
in
out
mov
xchg
std
mov
repz
or
ss
sti
jg
mov
jo
and
mov
sbb
dec
rorl
fs
jp
addr16
push
lahf
dec
outsl
incb
push
cmp
rcrl
cmp
xor
and
inc
push
mov
lret
loope
out
cmp
mov
aam
je
fildl
push
push
pop
adc
loop
push
pop
shll
fildl
ds
push
in
pop
cmp
sahf
in
pop
mov
lret
in
cmp
mov
andps
ds
adc
out
sub
xchg
adc
sub
aaa
dec
xchg
and
dec
int3
cmp
ds
gs
call
jmp
push
ljmp
iret
std
push
and
mov
jb
out
lods
nop
sbb
repz
add
sub
push
ficoml
repnz
leave
add
sub
mov
pushf
sub
in
sbb
push
hlt
jbe
cmpsl
mov
add
jno
clc
and
mov
pop
std
pop
jne
xor
jb
jge
push
jp
shrb
pop
stos
jl
or
fsubp
in
mov
into
dec
ja
and
xor
add
mov
cld
and
inc
leave
es
and
mov
pop
test
jecxz
xchg
fs
mov
pop
sbb
inc
sbb
pop
out
movsl
sub
lret
data16
push
push
mov
stc
mov
fistps
push
or
int3
aas
xchg
sahf
arpl
inc
leave
pushf
xor
adc
xor
test
ret
push
ror
in
fnsave
jae
sbb
or
or
out
dec
das
xchg
jmp
pop
cmp
cli
filds
jne
ret
mov
push
hlt
jle
sti
adc
popf
xchg
mov
lret
test
mov
jg
sub
jae
push
scas
insl
pop
jg
xchg
adc
stc
jae
in
jp
sar
or
popf
mov
sahf
movsl
mov
cmp
mov
dec
xchg
push
inc
mov
scas
cmpsl
popa
dec
cmc
mov
pop
jo
or
sbb
pop
xchg
in
in
outsl
push
pop
jne
sbb
xor
lods
repz
and
arpl
int3
ja
ret
int3
test
subl
jne
mov
and
hlt
add
xchg
rcrl
enter
movsl
jae
lea
fcmovnb
push
dec
adc
or
int
inc
pop
pop
out
fadds
jmp
mov
cli
mov
jmp
aam
outsl
loope
and
mov
inc
lret
movl
aaa
imul
push
and
and
sub
and
ja
or
outsb
popa
xchg
decl
adcb
inc
xchg
fstpl
mov
mov
inc
xorl
ret
pusha
mull
xchg
and
mov
xor
xchg
cmpl
mov
shr
hlt
xchg
rcr
or
loope
fs
sbb
lcall
ljmp
in
mov
lahf
aad
mov
push
mov
aad
dec
ret
mov
daa
lds
xchg
jecxz
sub
jne
inc
pop
out
out
mov
sti
cmp
xchg
loop
stos
loop
pop
sahf
test
mov
stc
lock
pop
jo
xchg
clc
lahf
lea
pop
test
inc
pop
fdivr
mov
inc
pop
xlat
pop
add
insl
and
mov
and
mov
and
or
frstor
fucom
repnz
adc
loop
ljmp
into
pop
iret
pop
pop
and
loop
sbb
imull
mov
inc
sbb
scas
lods
inc
xlat
shl
dec
ss
enter
ret
lea
jb
insb
cmp
pop
sub
nop
push
adc
fsubrl
outsl
mov
xor
or
into
lahf
and
dec
push
mov
lahf
push
push
rclb
pushl
mov
pop
daa
fidivrl
xlat
mov
outsl
test
dec
inc
je
push
sub
pop
out
fistpl
int
mov
push
pop
in
cs
scas
dec
mov
sub
outsl
in
loop
shl
cmpsl
inc
lock
pop
mov
mov
les
stos
xor
jb
xor
dec
inc
or
es
das
hlt
jbe
push
xchg
fs
push
pop
aam
push
cs
rcrl
mov
arpl
in
pop
mov
push
push
xchg
jg
mov
bound
inc
mov
fsubr
fists
xchg
push
push
lret
mov
repnz
shl
add
and
inc
pop
jge
mov
sub
jmp
jge
hlt
xchg
pop
int
xor
and
inc
sbb
mov
mov
xchg
pop
sub
xor
test
pop
xor
loope
rorl
jmp
or
sbb
cmpsl
inc
fwait
xchg
cmp
out
cvtdq2ps
rol
stos
inc
xchg
adc
lea
dec
add
sub
into
sub
mov
mov
cmp
add
inc
add
mov
push
mov
ret
lea
push
mov
addr16
cmp
js
add
out
pop
pushf
stos
lcall
add
outsl
rcll
out
or
mov
je
ja
aaa
or
xor
add
scas
aas
cmp
daa
add
mov
fimuls
repnz
popf
adc
outsb
and
daa
cmp
shrl
xor
jne
pushf
and
and
lods
add
or
call
test
dec
cmpsb
stos
imul
adc
push
and
repz
dec
outsb
jae
jmp
mov
icebp
adc
xchg
push
mov
xchg
xor
subl
cltd
jg
cmp
setg
call
inc
mov
jg
mov
cltd
or
test
inc
mov
lret
repnz
xchg
mov
pop
and
or
cltd
cltd
add
out
xor
or
shll
fcoml
inc
movsb
int
or
movsl
cmc
cli
out
fadds
push
ljmp
xor
cmp
ljmp
sbb
cmp
inc
add
dec
mov
sahf
lods
dec
jne
mov
xchg
lcall
adc
adc
mov
popa
inc
repnz
cmp
pushl
loope
mov
jnp
sbb
ret
mov
cmpsb
and
mov
xchg
mov
jecxz
push
push
mov
pop
inc
jns
cmp
adcb
mov
jne
test
stc
pop
mov
xor
inc
mov
lret
sub
lret
movsl
mov
mov
ffree
iret
adc
push
in
loopne
sarl
sub
lds
dec
mov
xor
rolb
test
xchg
scas
push
out
pop
and
lds
mov
jl
mov
test
mov
ret
mov
lret
jb
into
mov
shrb
xchg
adc
out
stos
imul
xchg
arpl
aad
enter
pop
std
sbb
les
notl
addb
roll
add
sub
int3
mov
xor
xlat
popa
call
hlt
jnp
jbe
sub
xchg
add
fadd
xchg
xabort
movsb
lods
lock
inc
sbb
jle
stos
and
cmp
adc
jge
repnz
jo
sbb
adc
mov
popf
and
inc
and
ljmp
fadd
fcoms
lret
popf
lods
add
pop
mov
xchg
fmulp
mov
xor
jns
call
inc
or
push
sbb
add
dec
xchg
aaa
addr16
ret
sbb
xchg
or
in
jle
mov
aas
les
subb
sbb
mov
add
push
sub
rcl
int3
aas
cmp
and
dec
xor
mov
mov
sbb
inc
jl
test
push
pop
pop
xchg
mov
sti
pop
mov
sbb
in
mov
sbb
test
jnp
test
push
push
sbb
adc
adc
push
pop
imul
push
adc
pop
ss
out
and
vpunpckldq
aas
std
out
repz
cmp
dec
jno
fnsave
inc
in
into
test
and
dec
mov
jb
ja
in
push
dec
fstpl
inc
fcoml
rcrb
int
addr16
sbb
icebp
mov
iret
sti
dec
mov
dec
jb
cmpsl
in
sahf
sbb
add
xor
pop
nop
or
sbbl
inc
fs
aam
pop
adc
andl
and
jne
imul
xchg
testb
lods
push
sti
clc
lock
iret
call
push
jge
inc
fdivrl
xchg
adc
enter
das
xchg
mov
cmp
lock
imul
cmp
popf
and
mov
es
sub
aas
mulb
stc
mov
mov
or
jns
fcmove
lock
xor
mov
scas
faddl
fcoml
popa
jl
mov
icebp
inc
inc
lahf
cmp
idivb
cmp
ret
jp
lock
push
or
outsl
sti
inc
pop
cmp
sbb
in
iret
jmp
mov
add
stos
mov
inc
dec
pop
out
orb
cmc
mov
pop
mov
and
lods
out
push
sub
and
shll
xor
xor
cwtl
pop
mov
cmp
int3
outsl
fdivrs
and
xchg
sbb
cmp
dec
xor
sti
push
dec
lea
pop
sahf
out
fimull
xor
mov
hlt
mov
dec
aam
cmpsl
jbe
sub
daa
mov
ljmp
adc
dec
cmp
cltd
or
js
adc
mov
enter
loop
arpl
into
loopne
pop
cmp
call
pop
mov
lods
adc
push
xchg
cmp
incl
inc
mov
dec
sarb
jbe
sbb
jo
pop
aam
fcmovne
enter
pop
lods
jl
pop
jno
mov
inc
xor
and
pop
stos
sub
push
insb
aaa
jo
mov
cmp
int
pop
mov
call
mov
cmp
mov
mov
mov
pop
es
mov
jp
addb
cltd
imul
and
mov
inc
cvtdq2ps
mov
pop
push
stos
push
lods
loop
or
loope
adc
dec
sub
psraw
push
movsl
push
dec
sub
xlat
pop
dec
or
out
ss
cmc
int
xor
lock
fcomps
lds
xchg
add
out
jb
or
or
test
cmp
lods
repz
clc
add
bound
scas
mov
pop
mov
mov
shrb
je
inc
lret
mov
mov
dec
xchg
jmp
jno
xor
pop
push
rclb
int
inc
xchg
fsub
adc
mov
push
test
mov
push
data16
mov
addr16
call
addr16
sahf
cwtl
in
mov
popf
xchg
in
mov
lret
add
not
test
mov
lahf
mov
sub
mov
lea
hlt
or
shrl
jle
and
call
push
lods
ljmp
pop
addb
jge
sarl
mov
push
into
jmp
push
cld
mov
sbb
xchg
shrb
inc
jne
sbb
gs
in
lret
outsb
mov
lds
adc
fdivrs
sbb
pop
iret
dec
lock
cmp
mov
inc
sub
push
dec
mov
sub
jg
cmpsb
fdivl
pop
out
push
pop
stos
fdiv
dec
test
or
push
sbb
cmp
jl
inc
mov
jbe
inc
lea
push
or
cmpsl
dec
and
pop
fisttpll
cmp
stc
les
mov
sub
lock
and
sti
repnz
icebp
and
test
adc
stc
push
pushf
cmp
push
pop
bound
dec
or
sbb
in
xlat
lock
iret
mov
xor
or
data16
mov
sbb
sbb
cld
into
test
scas
sub
jl
jge
pop
repnz
lcall
sti
xchg
dec
mov
push
imul
cmp
xchg
ret
xchg
push
stos
test
push
lea
fiadds
push
push
int
inc
sbb
je
sub
pop
insb
sub
es
jae
pop
add
cld
push
cld
push
xchg
push
mov
inc
fwait
mov
das
out
cli
imul
ljmp
sbb
lahf
inc
xchg
jle
fisubs
adc
pop
iret
cwtl
subl
faddl
adc
cmpsl
xor
mov
sbb
add
pop
arpl
jge
dec
scas
aam
jns
pop
jne
mov
push
das
addr16
or
gs
ss
icebp
pop
imul
push
aas
in
cmp
xchg
push
rcll
std
orl
mulb
aaa
adc
pop
xor
sti
xchg
mov
jg
mov
add
pop
repz
jnp
notb
lods
and
mov
cmp
adc
xchg
jecxz
mov
mov
sbb
mov
and
xchg
std
pop
movsl
dec
jbe
push
jle
popa
hlt
inc
xchg
xchg
mov
fcoms
out
xlat
fnstcw
push
call
ret
sub
sbb
push
rclb
cmp
sub
xchg
cmc
popf
inc
stos
cmp
pop
in
int3
adc
inc
pop
and
mov
imul
cmp
out
sti
xchg
vmovups
jne
jae
cmp
cmpsl
add
add
mov
mov
or
cmp
or
mov
add
mov
adc
add
or
inc
fucomip
or
ljmp
ret
and
cmp
xor
mov
mov
jmp
test
push
daa
test
cli
aad
push
prefetch
mov
cmp
lret
dec
hlt
push
mov
mov
sti
in
or
imul
xor
cltd
movsl
mov
mov
push
mov
push
and
fsubrl
arpl
fidivs
dec
xchg
pop
lcall
mov
push
inc
and
or
lods
test
int3
lahf
imul
stc
cmp
hlt
xchg
jmp
dec
ret
or
add
adc
cmp
shl
ss
or
aam
sbb
adcb
or
nop
aaa
push
sar
inc
add
enter
dec
loope
int
mov
dec
dec
dec
bound
xchg
mov
negb
insl
and
into
jle
jmp
lret
jle
lcall
fs
add
push
in
frstor
movsb
arpl
das
icebp
fchs
pop
ret
add
xchg
ret
push
inc
dec
xor
push
es
jmp
mov
or
lret
fisttpl
fwait
inc
ret
mov
pop
clc
add
in
xor
add
and
mov
push
orb
cmc
xchg
outsb
push
mov
and
inc
pop
ret
cs
mov
insb
xor
xchg
insb
inc
mov
ds
jnp
adc
std
sbb
popf
outsl
add
ficoml
adc
aas
nop
sub
mov
push
pushf
loope
or
test
in
ret
out
sub
mov
and
cmpsl
iret
out
push
xchg
xchg
movsb
movsl
movsl
outsb
xor
xor
enter
arpl
mov
mov
daa
push
inc
push
iret
mov
dec
stos
add
fs
push
cmp
sub
push
cmp
inc
out
test
xchg
into
xchg
cli
mov
stos
xchg
mov
inc
movsl
arpl
sub
addr16
ds
sbb
pushf
in
roll
insl
add
popf
jge,pt
fwait
rclb
loopne
movsb
mov
lret
xor
fbld
and
ret
jne
out
mov
call
ret
stos
jne
call
ds
insl
js
mov
inc
cli
orb
leave
or
cwtl
mov
inc
out
xor
mov
mov
add
test
fwait
out
les
pop
mov
push
in
fwait
jge
cmc
cld
xor
mov
dec
ss
push
shrl
popa
or
mov
lahf
jae
aaa
adc
xchg
in
divl
sub
push
push
lods
xor
mov
xchg
and
xchg
pop
push
arpl
cmp
push
imul
and
jae
push
pop
jbe
add
je
adc
icebp
test
stc
subl
gs
data16
fisttpll
dec
jmp
daa
dec
stos
in
mov
mov
mov
sub
cwtl
insl
notb
xor
xor
int
cmp
dec
inc
push
out
and
pop
cmpsb
inc
mov
xor
call
mov
mov
mov
loope
cs
jnp
loop
push
sarb
sub
mov
add
shr
pop
out
pop
jle
jl
cmpsl
or
pop
scas
movl
inc
cmp
xlat
ja
inc
dec
inc
test
adc
mov
lea
dec
ret
jns
decl
xchg
out
arpl
sub
jno
sub
cmp
jecxz
dec
in
mov
add
adc
sbb
arpl
push
std
cmp
xor
add
add
dec
xchg
popa
adc
scas
sti
add
push
fs
sub
add
ja
mov
jae
test
lret
popf
shll
sete
xchg
imulb
xlat
iret
out
mov
lahf
push
pop
pop
lret
rolb
jns
mov
sarl
mov
mov
sub
and
insb
je
pop
jmp
mov
add
dec
rol
imul
pop
sarb
out
jno
jmp
jno
fmul
cmpsb
pop
xor
pop
add
xor
adc
jg
or
pop
adc
daa
pusha
hlt
clc
les
sbb
or
arpl
cltd
daa
and
clc
or
mov
js
sar
ds
xor
fwait
jecxz
out
aaa
adc
xchg
push
xchg
sub
cmp
mov
repnz
sbb
cmp
fs
push
push
sbb
hlt
fincstp
push
add
dec
lret
outsb
lods
aas
imul
enter
repnz
outsl
adcl
leave
xchg
stos
out
lock
insb
sub
imul
sbb
enter
and
cmp
loope
sti
ss
shl
movsl
or
jno
cmp
add
cmp
repz
jno
int3
or
test
aad
adc
mov
rcrb
call
in
mov
dec
inc
or
adc
inc
mov
dec
sbb
jmp
cmpsb
test
ret
fmull
mov
ds
aam
gs
lret
or
shlb
repnz
xchg
enter
insb
sub
or
div
inc
ret
sti
movsl
call
lea
or
sbb
push
jno
dec
jne
hlt
pop
call
es
cmp
into
push
bound
push
xor
jge
loope
push
ljmp
roll
jp
and
stos
mov
dec
sub
mov
sti
jbe
or
pop
insb
clc
cmp
hlt
sbb
inc
ficoms
lahf
icebp
jg
shll
dec
pop
inc
xor
repnz
jl
mov
mov
lods
shll
dec
mov
mov
mov
loope
pop
in
cmp
mov
test
dec
stc
pop
insl
das
dec
test
and
inc
and
dec
outsl
pop
pop
jmp
int
mov
jle
subl
push
ror
aas
push
adc
cmpsl
or
inc
loope
popf
idivb
scas
or
adc
out
movl
mov
shlb
into
pop
fbstp
dec
lret
insl
jo
pop
aaa
lods
dec
sbb
aam
mov
lock
xorb
adc
push
adc
push
push
orl
pop
sti
mov
push
sbb
adc
out
xchg
xor
lods
jae
jge
cld
js
scas
sbb
cmp
mov
cltd
mov
mov
call
jnp
cs
dec
sbb
jp
push
mov
mov
pop
jmp
call
adc
mov
push
jo
sbb
adc
inc
enter
cmp
pop
andl
and
sub
dec
fnstenv
loopne
clc
xchg
jmp
mov
aas
cmp
imul
movsl
iret
mov
mov
and
sbb
int3
mov
adc
sbb
mov
or
cmpsb
mov
pop
stos
test
xchg
daa
cmp
mov
or
arpl
lock
xchg
lea
push
cmp
push
in
int
sub
les
daa
mov
cmpsb
inc
ret
mov
sub
in
mov
ljmp
mov
sbb
iret
sbb
icebp
inc
popf
rcll
adc
dec
in
dec
loope
adc
pop
mov
mov
cmpsb
push
fisttpl
sbb
in
sbb
adc
mov
or
xchg
sbb
sarb
pop
add
push
inc
in
rcrb
xchg
je
aas
test
push
icebp
int
daa
and
hlt
push
pusha
iret
js
imul
and
mov
sbbb
inc
inc
mov
mov
and
jecxz
shlb
pop
mov
je
xor
mov
test
mov
cli
inc
xchg
mov
aam
shll
das
fwait
jne
fstl
outsb
mov
fbld
pop
sub
and
sub
sti
fwait
sub
mov
xchg
inc
inc
das
popa
mov
inc
fldcw
bound
in
inc
push
popa
cs
test
or
lea
jg
or
and
mov
inc
mov
sub
mov
imul
fnsave
out
cld
and
mov
std
add
or
loopne
popf
lds
dec
leave
sbbl
test
inc
pop
cmp
xor
sbb
jno
rorb
scas
in
fists
sbb
or
dec
and
cmp
cmp
incl
inc
jne
lcall
lock
jg
ret
std
aad
cmp
test
xchg
aam
stos
add
shll
in
mov
ljmp
mov
in
mov
in
idiv
das
les
mov
or
dec
mov
testl
jae
hlt
or
test
xchg
add
cmpsb
nop
push
out
inc
push
out
push
daa
shl
das
int3
jle
movsl
fimuls
adc
mov
repz
fdivl
jo
push
pushf
andb
int3
xor
pushf
addr16
ret
adc
sub
out
nop
xchg
push
test
stc
inc
mov
pop
pusha
xchg
jns
add
jmp
xchg
xor
xlat
cld
out
xor
nop
mov
cwtl
sbb
imul
popa
clc
shll
or
in
mov
cmp
icebp
popa
mov
push
out
and
jno
push
sbb
mov
fadds
nop
fidivl
ljmp
mov
or
inc
mov
imul
call
fsubs
test
mov
or
je
or
xchg
in
out
sti
sub
mov
aas
sub
enter
mov
mov
adc
sub
sbb
daa
inc
sbb
scas
ds
cmp
and
push
lret
push
adc
mov
jns
das
arpl
in
and
jmp
mov
or
jae
imul
cmp
jg
sbb
sbbl
aam
outsl
jp
shlb
xor
decb
lock
dec
and
xchg
in
rcrl
divb
pusha
ja
ljmp
gs
fisttpl
scas
rcrb
pushf
sbb
jge
lea
aas
aaa
dec
cwtl
cmpsb
mov
jne
ret
repnz
xor
lods
cwtl
in
add
and
adc
lcall
data16
xor
sub
cmc
or
icebp
stos
hlt
xor
out
mov
stos
xchg
into
lock
xor
rorb
data16
jns
push
inc
idivb
std
enter
iret
mov
or
xchg
cmp
inc
sbbb
imul
push
fidivrl
jnp
adc
mov
and
jmp
jnp
pop
test
pushf
lea
xchg
adc
sbb
adc
in
iret
ror
and
pop
pop
nop
dec
nop
sahf
hlt
mov
loope
out
adc
mov
dec
and
loope
out
leave
jl
mov
sbb
in
fbld
mov
add
jle
pop
xor
push
loop
mov
imul
pop
push
daa
pop
into
jne
aaa
xchg
mov
out
daa
or
sub
sub
xor
adc
jae
push
leave
int3
mov
mov
sub
cld
mov
icebp
cmpsb
push
dec
rol
dec
xchg
fwait
jl
add
sahf
jbe
sub
xor
cmp
push
mov
in
sbb
out
in
in
and
sub
lods
lahf
es
ret
stos
pop
jmp
ljmp
daa
cmp
ret
push
inc
inc
dec
sbbl
scas
xor
in
mov
jg
enter
movsb
addr16
dec
je
sbb
fwait
xor
xchg
flds
xchg
in
push
jmp
pop
loopne
jmp
add
cli
imul
fldcw
push
inc
movsb
test
mov
push
lcall
in
inc
jno
xor
jle,pn
mov
mov
add
mov
por
add
cmp
rolb
dec
sub
or
adc
imul
inc
insb
outsl
in
fsts
loope
jns
mov
push
out
jae
iret
in
xchg
lods
hlt
mov
lods
fs
fsts
xor
test
lods
lahf
jle
fdivrl
and
data16
adc
mov
mov
and
dec
pop
das
in
xlat
fcompl
mov
dec
pminsw
jge
adc
aam
repz
lret
xchg
push
sbb
lods
dec
push
add
in
cmpsb
sti
and
cmpsb
push
nop
or
mov
cli
push
lret
push
sub
push
movsl
les
xchg
jge
lods
clc
or
inc
and
fisttps
and
repnz
testl
out
loop
cmp
fucomip
add
mov
pop
nop
stos
push
jg
mov
clc
js
into
sbb
xor
sbb
sub
sbb
adc
dec
fcomps
sbb
ss
jge
outsl
add
cmp
sahf
cmpsb
movsb
cs
pop
sub
arpl
mov
or
call
push
sbb
ja
insl
ret
lds
jmp
xchg
mov
mov
inc
mov
vpshlq
mov
dec
pusha
or
sbb
test
mov
fcoms
popl
mov
arpl
cmp
dec
aas
fs
xor
dec
inc
mov
fsts
imul
enter
mov
imul
cmp
push
shl
mov
test
lock
aad
pop
ljmp
fwait
scas
in
scas
loopne
mov
or
repnz
lahf
test
jo
xorb
mov
gs
and
mov
inc
jb
dec
mov
stc
fst
sub
xor
inc
mov
rcr
rorl
xor
pop
daa
and
push
pop
dec
movq
pop
adc
mov
sbb
cmpsb
sub
mov
or
std
xchg
test
aad
sub
lods
fistpl
cmp
pop
mov
dec
rcl
jmp
je
xchg
push
push
aas
iret
mov
pop
stos
int
popf
and
push
pushf
hlt
xchg
ljmp
xchg
enter
dec
add
cmp
in
addb
pop
pop
mov
mov
push
cltd
push
out
xchg
push
jnp
fldcw
ja
in
inc
es
xchg
roll
aad
push
mov
daa
out
cmpsl
mov
aad
sub
sub
fildll
add
adc
rorb
mov
sbb
push
loop
daa
aam
mov
movq
negl
sub
sub
js
test
lods
push
jb
fldl
mov
sbb
das
jg
or
lods
mov
xchg
dec
test
gs
and
push
and
push
iret
pushf
out
repz
imull
add
push
inc
dec
sbb
push
in
ret
scas
shrb
rcrb
es
mov
mov
mov
addr16
lods
nop
outsl
cmp
add
ret
clc
push
arpl
outsb
fildll
lock
imul
movsl
lods
jae
dec
ss
mov
push
jo
inc
cltd
aaa
lds
fs
xor
clc
mov
or
jle
mov
addr16
sub
insl
lcall
xor
lods
jae
enter
stos
lret
cmc
inc
push
sbbb
rolb
int
mov
mov
push
je
xchg
rolb
dec
pushf
lret
sbb
test
mov
jae
rol
and
loop
mov
movsb
mulb
xor
idivb
pop
pop
lock
and
jae
mov
int3
mov
lret
in
pop
popa
out
lea
fcoms
lret
lods
cmpsl
testl
mov
mov
push
dec
sbb
pop
jno
in
test
xchg
pop
push
xchg
ret
out
jle
icebp
scas
int3
mov
xchg
bound
xchg
inc
lea
ret
stc
push
add
add
mov
sti
mov
out
mov
jmp
xchg
add
sti
outsl
dec
loope
jmp
outsl
out
dec
jns
sbb
jp
data16
repnz
icebp
pop
cmp
scas
insl
adc
xchg
jge
cs
inc
je
sub
adcb
lret
daa
dec
rdmsr
jnp
shr
sub
inc
pop
js
cld
test
jle
xchg
aaa
xorl
sbb
or
xor
icebp
les
lret
jmp
xlat
rclb
repnz
outsb
scas
test
lea
into
ja
imul
mov
mov
outsb
push
outsl
cmp
test
ds
push
mov
xor
call
les
mov
xorl
add
mov
xchg
sub
push
cld
fnstenv
sub
push
aad
lods
mov
jl
ja
mov
and
orb
test
cmp
fmulp
jns
push
shll
cltd
repnz
loop
lahf
jae
pop
andb
sub
adc
decl
mov
adc
test
sub
xlat
and
out
inc
sub
andl
or
inc
gs
mov
subb
pop
shrl
in
aaa
push
cvtpi2ps
adc
and
pop
dec
fidivl
lcall
outsb
mov
test
lret
inc
inc
inc
in
aaa
mov
pop
out
jg
sarl
cmpsl
shlb
lahf
adc
fisubrs
stos
add
sbb
mov
pop
or
jb
mov
add
pop
lds
mov
lret
mov
xor
xchg
adc
xor
call
fmuls
xor
hlt
add
sahf
xchg
fwait
adc
xor
pop
lods
pop
pand
mov
pop
adc
dec
call
pop
push
mov
out
nop
inc
in
fistps
jne
jns
outsb
nop
mov
scas
fiaddl
in
adc
mov
cld
ds
push
mov
and
in
imul
fbstp
mov
sub
xchg
imul
push
xorl
cmp
pop
pop
fcoms
test
movsb
mov
insb
mov
push
ret
pusha
ficompl
dec
xchg
jge
mov
popf
add
dec
aaa
loope
pop
aas
add
xchg
mov
loope
scas
into
mov
stc
mov
fsubrp
lcall
mov
insb
mov
clc
sbb
das
filds
and
enter
dec
jae
xchg
or
lock
orl
hlt
insl
cli
xchg
icebp
cwtl
pop
mov
test
xor
enter
scas
roll
adc
lods
popa
cmp
mov
xchg
mov
ja
and
inc
sub
sub
or
jge
mov
in
fisubrl
lods
push
nop
dec
test
shl
push
fwait
jl
mov
addr16
stos
mov
sub
cmp
sti
jbe
or
mov
cs
push
inc
jne
push
inc
inc
xchg
js
dec
cmpsb
sbb
cwtl
test
pusha
dec
or
cmp
aam
mov
dec
push
out
fldl
repnz
rorl
aam
fdivrp
mov
and
or
fwait
xor
lret
pop
xchg
xor
jno
scas
dec
call
scas
inc
sub
or
mov
jg
ret
add
fistpl
xor
imul
sti
aam
test
inc
xor
inc
dec
add
xchg
xchg
jae
xor
pop
cmc
jle
mov
cmp
lock
inc
jnp
addr16
out
cwtl
dec
mov
pop
sub
loope
mov
fdivr
push
adc
insl
mov
mov
loopne
movsb
xchg
sbb
rolb
hlt
sbb
movsl
mov
jae
sub
popa
inc
mov
aas
jg
in
lcall
nop
subb
pop
bound
cmp
hlt
lea
mov
cmp
cmp
lea
aas
jb
jg
dec
shrb
jbe
roll
in
andb
clc
cmp
xchg
pusha
or
push
mov
sbb
ljmp
pop
stos
push
aaa
cmp
mov
mov
adcl
iret
pop
lret
fisttpl
icebp
dec
into
sub
push
lds
test
cmp
aaa
mov
adc
lret
push
and
test
add
xchg
inc
pop
imul
aad
mov
into
jae
dec
pop
fs
iret
mov
ja
cmpsb
imul
dec
adc
scas
lret
sbb
sbb
pop
xchg
cmp
das
cwtl
dec
and
mov
xchg
ljmp
and
mov
push
mov
cmp
mov
push
scas
adc
mov
and
mov
jnp
jecxz
cli
dec
adc
shl
inc
or
fdivs
cld
jmp
mov
out
xor
jge
inc
dec
mov
push
dec
cld
ljmp
popf
out
jecxz
out
sub
xor
sub
mov
xchg
inc
push
sub
into
fstps
jbe
fidivrs
inc
adc
in
popf
jge
fildl
adc
mov
or
adc
loope
push
icebp
aam
push
pop
pop
sub
loopne
add
movsl
cmp
mov
jl
xchg
xor
js
jnp
repz
adc
dec
js
sbb
das
sahf
out
clc
or
jnp
sub
shlb
sub
dec
add
mov
push
inc
fisttps
xchg
ljmp
je
add
inc
into
cmp
push
rcr
movsb
adc
or
mov
sbb
cld
in
sub
test
sub
and
pop
clc
loopne
jmp
inc
mov
xor
movsb
mov
adc
mov
lcall
outsb
xchg
call
mov
les
movsb
dec
jo
adc
shrb
mov
add
or
rcr
xor
adc
adc
inc
loop
rolb
mov
lahf
lret
or
mov
filds
popa
and
cli
push
add
mov
xchg
mov
mov
sahf
out
jle
or
aaa
data16
sbb
in
add
lods
dec
in
xchg
or
push
data16
mov
xchg
fildl
or
vminps
popf
out
or
mov
cwtl
aaa
cs
push
push
mov
pusha
fisubrs
push
push
dec
test
pusha
mov
dec
fistps
pusha
jbe
fldl
imull
lock
lods
jl
xor
jae
mov
and
pop
xchg
sbb
notl
divb
mov
jg
mov
and
nop
popa
and
or
es
or
fildl
enter
mov
xchg
jl
aaa
fnstcw
lea
xor
inc
pop
gs
sbb
movsb
sub
pop
insb
stc
sub
sub
and
push
sarb
lret
xchg
push
scas
inc
out
cmp
jbe
fwait
mov
outsb
sub
mov
push
js,pt
repnz
stc
sbb
cmp
push
mov
and
loop
and
mov
adc
push
mov
cmc
fs
pop
popa
pop
sahf
add
rorb
pop
insl
fdivs
icebp
xchg
cmpsl
xor
mov
out
in
es
loope
pop
sarb
insl
mov
pop
mov
lret
cli
xorl
or
inc
loopne
sbb
jp
movsl
push
lret
push
inc
mov
cmp
pop
mov
ljmp
cmp
jmp
ja
scas
fldenv
pushf
add
outsb
cmovge
sbb
jle
or
dec
fs
mov
into
xchg
or
mov
aam
push
pop
mov
pop
cmpsl
push
and
pop
mov
mov
imul
inc
and
xchg
lret
jb
dec
pop
sbb
mov
fwait
dec
decb
mov
mov
cli
negl
cmpsl
cmp
cmc
adc
or
mov
sahf
cmp
popf
lret
hlt
test
idivl
out
xor
loop
in
xchg
xor
shrl
pop
xor
pop
test
arpl
and
subb
negl
clc
movsb
xor
pop
dec
aaa
in
fcoms
cltd
fimuls
je
int
mov
adc
mov
fsubrs
pop
xor
adc
pop
repnz
sub
lock
test
lahf
in
out
pop
test
push
or
push
mov
push
xchg
xchg
stos
jle
clc
out
add
cmp
nop/reserved
pop
pop
pushf
lret
xor
test
sbb
mov
repz
aaa
xlat
daa
mov
push
xor
test
pop
int3
pop
sbb
jo
or
mov
repz
jnp
lods
lock
pop
call
idivb
jo
or
sub
add
pop
fwait
push
test
rcll
cmp
cmpsl
shrl
xor
jp
lock
pop
mov
repz
inc
hlt
push
lods
cmp
call
sub
pop
rolb
xor
aam
jl
mov
or
call
shl
push
xchg
pop
hlt
mov
fld
push
mov
add
movsl
push
push
leave
dec
rcrb
and
pop
pop
fstl
dec
shl
xchg
mov
repnz
cmpsl
push
mov
daa
add
jae
lock
out
rolb
scas
inc
xchg
test
or
sub
mov
insb
push
or
adc
dec
test
aad
pop
jb
add
std
mov
xchg
or
cli
in
or
mov
imul
inc
push
test
xor
repnz
lahf
sub
popa
jp
aam
push
int3
and
inc
adc
jo
or
push
xor
sarl
sbb
adcl
jmp
fwait
cmp
mov
out
mov
daa
jle
push
test
mov
repz
push
jnp
xor
or
xor
push
andl
ja
lds
sub
mov
test
xor
mov
xor
or
pop
push
push
pop
push
mov
mov
cmpsb
mov
xchg
and
push
pushf
lret
loope
pop
sub
xor
xchg
out
fnstcw
out
movsl
cs
lcall
out
jmp
add
and
int
or
and
pop
push
cmpl
jl
aas
mov
dec
lahf
push
in
outsb
movhlps
or
jno
jne
sub
in
int
mov
xchg
push
fiaddl
dec
xor
xor
je
mov
mov
repnz
adc
fistpll
mov
push
sub
in
sahf
lret
int
pop
imul
cltd
hlt
sbb
xor
sub
shrl
repz
in
lret
sahf
cmp
xchg
rcrl
enter
xchg
les
sub
push
or
inc
sarl
push
rorb
sub
adc
adc
das
inc
cld
xchg
insl
cmp
imul
inc
push
dec
jmp
jne
clc
sub
mov
jbe
es
fstpl
and
cltd
into
in
xor
dec
add
imul
fidivrl
lcall
cwtl
mov
mov
jge,pn
ljmp
mov
flds
ss
dec
lods
jbe
dec
aas
jle
and
adc
aam
sbb
adc
jae
call
out
sti
stos
and
push
movsb
scas
push
or
push
or
out
cmc
inc
aad
jb
jge
pop
pop
mov
ret
push
dec
imul
push
sub
fwait
pop
rolb
ja
ret
or
pop
ss
out
adc
shll
pop
movsl
adc
mov
repz
mov
ja
and
add
add
add
mov
js
push
divl
je
mov
pop
xchg
lret
push
fisttpll
outsl
test
js
stos
sbb
sub
jo
mov
ret
stc
dec
or
in
flds
das
fs
pushf
cli
lea
mov
repz
mov
fs
aad
daa
add
adc
jbe
outsb
and
lcall
ret
or
add
rolb
jge
pop
jbe
xor
fbld
add
lret
mov
andb
sbb
iret
inc
jbe
push
int3
jp
les
inc
xchg
sbb
imul
cmp
insb
dec
mov
call
pop
add
in
and
lock
lret
pop
sub
outsw
cmp
lret
and
cli
jg
push
mov
jmp
mov
jl
bound
negl
xor
jle
sub
xchg
pop
mov
hlt
pop
jmp
shl
mov
mov
pop
and
jmp
int3
push
outsb
pop
adc
imul
sub
sub
addr16
loop
ss
movsl
add
fimuls
xor
lods
fdivl
fbld
mov
hlt
scas
sub
pop
shrb
sbb
cmp
push
fwait
xor
into
imul
je
int3
mov
jg
in
dec
ret
pushf
into
aaa
cmp
jne
imul
add
inc
jae
xchg
rorb
push
sbb
es
aam
jl
push
sub
lcall
mov
push
xlat
arpl
outsb
stc
imul
adc
jle
pop
fs
shr
push
and
pop
lods
rcll
jl
jecxz
roll
push
mov
xchg
push
cld
ja
imul
frstor
mov
xchg
push
pop
pusha
push
mulps
mov
addr16
inc
push
les
dec
and
mov
ja
arpl
icebp
fmull
pop
inc
into
in
cmpsl
out
nop
push
pop
rcrl
daa
xor
fs
cmp
push
loopne
iret
aad
adc
jmp
dec
jno
fidivrl
pop
sub
push
and
push
inc
xchg
push
pop
adc
mov
andl
jb
mov
das
xor
and
daa
popf
aas
and
rcrl
xor
imul
movsl
mov
jb
push
addr16
cld
dec
lods
xor
loop
repz
notl
dec
sbb
js
orb
xlat
jno
jle
mov
clc
lds
ret
iret
aas
js
pop
fildll
inc
pushf
cld
ret
daa
xchg
jno
es
dec
pushf
mov
mov
sbb
lret
or
xlat
jecxz
ja
outsl
pop
mov
xor
sub
and
jmp
mov
push
mov
jge
pop
loop
adc
mov
sbb
mov
push
pop
xchg
xor
ja
cmp
mov
pop
test
rcrl
mov
pop
negb
sbb
insb
cli
jno
adc
loopne
fiaddl
in
gs
mov
decl
pusha
nop
loop
aaa
hlt
test
lret
sbb
daa
sub
mov
cwtl
pop
inc
jp
pop
jbe
ds
xchg
xchg
lcall
cmc
addb
lret
lret
dec
adc
adc
fcoml
add
rcrb
fisttpl
push
mov
inc
in
jg
in
inc
dec
lret
sbb
cmp
and
cmp
or
movsl
les
cmpsl
push
fsubr
pushf
mov
sbb
ret
repnz
imul
insl
mulb
pop
fldt
dec
fstl
ljmp
movsb
jae
sbb
xor
push
mov
sub
xor
xor
push
fldln2
mov
icebp
mov
mov
lds
mov
xchg
movl
sbbb
sti
dec
mov
pop
cmp
mov
mov
cwtl
mov
cmp
lahf
mov
push
xor
in
push
mov
jecxz
xor
std
test
add
xchg
lock
popf
pop
inc
dec
pop
mov
pop
es
or
ja
inc
push
mov
std
pop
test
mov
ffreep
rclb
ljmp
cmp
jmp
and
cltd
into
jecxz
icebp
cmc
cmp
sub
xor
ds
xor
pop
sub
cltd
divb
jno
sbbl
popf
dec
pop
xor
in
testb
fisubs
scas
hlt
scas
mov
cmp
dec
push
mov
jge
pop
push
cmp
jg
xchg
jge
lahf
lahf
fsubrp
cmp
sarb
jbe
mov
gs
sbb
lret
ret
sbb
lahf
mov
jns
sahf
mov
pop
jb
mov
sub
inc
je
or
pop
scas
xor
push
inc
and
pop
insl
sarb
int
scas
dec
add
outsb
icebp
in
and
fcompl
int3
jmp
cmc
out
cld
jmp
push
cmp
sub
mov
test
inc
mov
scas
aam
mov
int
sbb
sub
inc
arpl
int3
cltd
sbb
and
jne
js
dec
jae
ficompl
and
mov
cmp
pop
clc
bound
pop
mov
or
mov
fnstsw
or
fmul
inc
sbb
repnz
mov
xor
xor
inc
imull
jp
adcb
lock
loopne
mov
sub
scas
cmp
das
xchg
sub
pop
xchg
and
cmp
int3
sbbl
and
sti
test
adc
pop
add
lahf
fsubrs
cmpsb
std
xor
loop
icebp
cmp
jle
in
push
nop
pop
xlat
push
rorl
push
ret
cmp
in
mov
jg
jo
xchg
out
sub
push
adc
or
psllq
cmpsl
dec
nop
sahf
sbb
jo
cmpsl
pop
repz
leave
push
out
mov
sbb
ret
xor
dec
rclb
and
xchg
outsb
lcall
sub
cmp
sub
pusha
test
lahf
fs
cwtl
sbb
mov
and
mov
fldt
mov
test
scas
jns
outsl
iret
stos
xchg
insb
push
and
xchg
xor
xlat
xor
int3
mov
xchg
jnp
sub
test
repnz
fcom
jae
mov
xor
xlat
sbb
shrb
sbb
pushf
xor
mov
shrb
mov
pop
imul
outsl
cmpsl
sbbl
push
mov
add
mov
pop
arpl
add
subl
incl
arpl
fstpl
xchg
ljmp
jp
out
jmp
sub
outsb
out
test
sbb
stos
adc
cmp
hlt
into
scas
sarl
and
cs
push
movsb
ss
mov
sahf
mov
add
cmc
sbb
fisttpl
mull
adc
lret
dec
xchg
inc
mov
mov
sbb
mov
xor
es
imul
pop
out
es
mov
dec
mov
sub
cmpsl
cmp
cmpsl
xchg
adc
adc
pop
mov
adc
test
mov
je
or
push
cmp
dec
ss
inc
inc
fsubs
adc
jmp
mov
sbb
repz
jle
ljmp
in
rcrb
push
jp
and
mov
in
clc
add
enter
stos
lock
and
fwait
neg
insb
lcall
gs
ss
cld
mov
scas
dec
adc
cmp
jno
mov
loopne
inc
and
pusha
push
pop
xlat
jecxz
and
mov
std
sbbb
mov
sub
pop
arpl
xchg
xor
sub
test
mov
push
fadds
adc
pop
gs
cli
xlat
mov
fwait
dec
out
sbb
dec
pop
pop
cmpsl
xchg
movsl
lret
in
movsb
int
inc
icebp
sbb
inc
mov
mov
out
roll
outsb
test
mov
mov
xchg
push
fscale
aaa
loope
daa
or
mov
mov
push
cwtl
lods
bound
pop
cmp
popa
mov
jle
jg
and
fdivrl
fstpl
adc
adc
dec
hlt
inc
add
cltd
and
mov
lods
inc
outsb
les
and
addr16
icebp
lar
andb
ds
test
mov
aaa
addr16
iret
test
stos
call
lahf
in
mov
cmc
cmc
push
fld
cmpsl
jmp
shrl
iret
pop
cs
jl
adc
mov
sub
add
stos
sbb
inc
or
xchg
push
mov
adc
dec
aaa
call
in
jne
or
jae
loope
mov
and
add
fwait
xchg
dec
fildl
daa
pushf
sbb
ret
push
ds
repz
xor
push
sbb
adc
fdivr
std
jecxz
cltd
cmp
imul
shl
push
sbb
stos
mov
push
jle
nop
add
jne
test
dec
loopne
repz
cwtl
nop
popa
mov
mov
pop
and
mov
sbb
add
and
pop
sti
sbb
mov
or
cmp
std
sar
insb
pop
adc
push
test
and
aam
dec
orb
repz
pusha
inc
adc
xchg
jnp
xor
xor
adc
xchg
pop
aad
xor
add
mov
mov
or
pop
cwtl
jmp
movsb
cwtl
mov
push
inc
push
xor
popf
add
pop
mov
mov
lds
jge
adc
shlb
xor
jae
loopne
sub
pop
fadd
icebp
xchg
std
xchg
jp
mov
popa
mov
cltd
in
pop
orb
fwait
sarb
addb
loopne
cmp
xchg
shlb
bound
fldcw
test
loope
testl
in
dec
jle
mov
in
dec
int
cmp
lahf
pop
sar
cmp
loope
mov
pop
xor
shlb
stos
cli
dec
xor
mov
bound
add
aaa
xchg
or
pusha
fucom
jge
pop
shll
outsb
sub
movsl
lods
ret
and
movsl
xor
lea
fidivl
dec
dec
add
repz
adc
cmp
push
push
add
mov
inc
int
fstps
push
ss
sub
test
lock
xchg
jnp
fwait
out
addr16
movb
push
std
pushf
int3
loope
jnp
mov
repnz
jl
mov
lods
mov
cltd
xchg
fildll
xor
dec
jle
mov
fcoms
sub
pop
mov
pop
pop
or
sbb
mov
sub
std
xor
test
adcl
adc
xchg
mov
jecxz
mov
pop
inc
mov
lods
fdivl
mov
mov
mov
fucomip
rcrb
jge
decl
sbb
push
mov
je
data16
xchg
mov
fildll
and
or
in
mov
scas
pop
push
mov
outsl
dec
xor
mov
cld
mov
movsb
outsb
mov
push
fistpll
sbb
js
dec
xlat
mov
mov
bound
and
ret
jbe
adc
add
outsb
push
mov
nop
dec
repnz
js
fidivs
fcoml
fidivl
dec
ret
dec
xor
les
sbb
dec
je
movsl
aam
sub
xchg
xchg
arpl
stos
xor
into
mov
hlt
fiaddl
push
jge
xor
jno
dec
sbb
andb
call
or
cmc
sub
push
adc
in
loope
push
pusha
hlt
roll
hlt
mov
es
jecxz
loopne
je
sbb
pusha
leave
sub
mov
jns
lsl
pop
add
loop
push
mov
iret
daa
sbb
mov
xchg
pop
imul
xor
arpl
fldl
int3
pop
cmc
xchg
mov
xchg
sub
xchg
pop
inc
inc
mov
push
icebp
jne
and
push
push
xlat
add
adc
xor
inc
in
pop
shrl
leave
or
mov
cmp
jns
addr16
repz
cld
in
repnz
fcmovnu
lahf
pop
push
sub
mov
jnp
add
mov
aad
inc
cld
movsb
and
or
xor
js
idivb
mov
dec
xchg
pop
cmp
inc
lret
repz
pop
xorb
xor
jnp
lret
xchg
ret
lahf
loop
push
pusha
repz
cmpb
jl
lock
aad
or
out
jo
jp
rcl
mov
mov
mov
lahf
inc
out
out
outsb
lods
ret
hlt
push
scas
lahf
fs
push
imull
or
les
imul
jmp
enter
mov
xor
sbb
stos
cmp
push
sub
cld
addr16
arpl
int
mov
subb
js
push
cltd
mov
out
out
sub
jbe
push
out
or
inc
test
pop
cmpsl
sti
adc
ja
mov
pop
cmc
lret
jmp
lds
cmpl
sbb
mov
fildl
or
arpl
aam
jg
cltd
lock
pop
sti
fimuls
aam
pop
enter
mov
insb
out
inc
push
scas
pop
leave
push
and
lock
push
jge
divb
jae
bound
xor
movsb
aas
cmp
inc
mov
das
inc
cmp
push
mov
dec
insl
push
lods
cmp
sub
cmp
pop
mov
repz
iret
inc
dec
in
scas
mov
or
fdivs
cmp
inc
and
push
mov
lret
adc
pop
gs
incl
jae
xor
mov
pop
pop
pop
push
pop
lret
inc
imul
cmp
add
jp
or
mov
inc
inc
js
adc
sub
imul
lods
pop
loopne
movsl
bound
lods
lods
pop
pop
sbb
in
dec
or
and
cmp
mov
push
push
insb
cmp
insb
adc
xchg
imul
jmp
mov
push
cmpl
adc
popf
les
fistpll
jns
test
mov
ja
pop
mov
out
mov
sub
aaa
fimuls
pop
int3
insb
les
pop
jbe,pn
adc
and
push
or
push
les
sub
dec
es
rclb
push
mov
fdivl
adc
pop
xchg
cmp
cwtl
insl
mov
cld
push
test
push
movsl
into
mov
jbe
lret
popa
int
out
xchg
dec
addr16
add
sahf
jne
sbb
pop
loope
dec
fwait
mov
mov
push
loopne
lods
lahf
pop
jb
test
xchg
mov
out
ljmp
sbb
shll
mov
mov
ss
dec
outsb
call
mov
iret
insb
or
cmc
dec
in
adc
scas
sub
push
lods
xor
dec
in
xchg
jbe
lcall
add
dec
loopne
dec
push
sbb
xchg
inc
lds
mov
scas
xor
out
push
or
pop
adc
pop
jo
xor
and
adc
jnp
adc
xchg
data16
dec
mov
aas
sub
icebp
das
dec
cmc
jp
ds
ja
inc
fdivs
jg
mov
mov
xor
std
inc
imul
das
cmp
dec
push
popa
sbb
mov
sub
add
jae
sub
lret
loope
or
in
arpl
inc
shll
add
sub
adc
and
movsb
add
stc
pusha
cmp
bnd
imul
mov
orb
aad
into
dec
mov
pop
and
lods
push
arpl
das
dec
es
or
imul
add
imul
lods
xchg
xchg
sbb
mov
loop
jo
xchg
filds
int3
es
out
ds
rorl
mov
imulb
or
lahf
lret
sub
sbb
ds
ja
sbb
gs
gs
xor
inc
cmc
insb
fdivs
and
dec
mov
mov
imul
cltd
xor
sub
push
pop
and
add
lods
mov
push
jl
shr
shrb
call
test
xchg
mov
out
aaa
fs
mov
sub
leave
cmc
icebp
jb
mov
push
xor
jmp
test
iret
push
mov
out
ljmp
das
loope
ret
imul
xchg
xchg
int
mov
lcall
xchg
dec
std
outsl
repnz
scas
lret
jmp
pop
jbe
insl
lcall
nop
gs
push
sbb
mov
or
mov
adc
and
and
out
icebp
fsubrs
mov
roll
stos
je
roll
mov
mov
pop
mov
adc
aam
ret
hlt
ficompl
or
pushf
test
or
adc
adc
pop
loopne
pop
dec
cltd
clc
inc
mov
jmp
dec
dec
jg
inc
mov
loop
shrb
scas
mov
fdecstp
movb
pushf
test
and
call
imul
out
lods
lret
xor
sahf
xchg
loope
push
fstpt
div
dec
aam
pushf
loop
mov
lock
jg
sub
mov
fs
sub
xor
repnz
jmp
dec
mov
mov
outsb
mov
inc
lds
lods
cmc
aad
or
scas
dec
sbb
cs
cmp
mov
arpl
dec
incb
mov
xchg
push
imul
lds
sbb
adc
mov
push
and
mov
pop
cltd
mov
xchg
fistl
cltd
sbb
and
xlat
mov
mov
scas
xor
cmp
movsb
mov
ja
aam
int
mov
pop
adc
inc
mov
es
icebp
nop
add
shlb
adc
movsb
das
add
add
sbb
cmp
mov
mov
enter
es
jge
push
or
fld1
in
popa
adc
mov
cmove
je
ljmp
fstpl
fwait
xchg
mov
in
shll
nop
subb
stc
orl
sbb
mov
mov
or
cmp
jo
sbb
inc
pop
or
xchg
mov
roll
mov
popf
push
loopne
push
mov
xchg
cmp
pushf
dec
pop
push
push
sbb
out
lret
inc
imull
scas
cwtl
shll
pushf
cmp
loopne
sub
mov
mov
insl
pop
addr16
mov
push
or
sub
cmc
pop
add
cmp
cli
inc
fwait
inc
in
push
cmpsb
out
idivl
push
gs
cmp
adc
jmp
fistps
cmp
xor
mov
lods
arpl
mov
aam
daa
cmp
xor
xchg
xor
imul
add
jb
add
outsl
shrb
mov
xchg
int3
addr16
mov
imul
jbe
je
lea
pusha
dec
daa
int
popa
mov
mov
jecxz
insb
sbb
dec
stos
cmp
movsb
insl
add
and
call
lods
gs
xor
mov
test
popf
stc
out
mov
lods
lods
in
fisubl
xchg
mov
in
lret
or
stos
mov
inc
mov
mov
push
adc
mov
xlat
neg
test
sbbl
loop
cld
gs
cli
mov
sbb
and
add
emms
sbb
pop
sub
jb
mov
imul
mov
fucomi
pmulhw
adc
jns
sbb
das
cmp
repnz
ret
mov
push
fistps
mov
imul
or
mov
pop
loope
ja
in
adc
mov
xor
lock
subb
rep
bnd
mov
in
shl
add
fsubr
jmp
inc
mov
lret
add
sahf
fmull
imul
call
jl
mov
test
inc
xchg
popa
jb
aam
jge
jle
jns
movsl
lret
adc
mov
xlat
insb
stc
daa
rcll
cmp
jne
arpl
roll
cs
mov
sti
mov
test
aam
mov
cmpsb
ficompl
or
jecxz
cld
xor
add
scas
lods
xor
push
push
scas
sbb
test
enter
push
add
pop
int
mov
test
push
es
dec
and
xorb
fs
mov
out
push
icebp
cmovnp
or
leave
adc
test
pop
push
xor
mov
cwtl
jae
int3
outsb
imul
mov
cli
jmp
cld
es
push
mov
adc
gs
mov
inc
push
fcmovb
in
cmp
and
out
sbb
test
jnp
jb
in
jg
outsb
jb
jo
jmp
jmp
mov
inc
mov
dec
dec
rclb
dec
pop
lret
mov
ret
adc
adcb
repnz
sub
sbbl
out
movsb
adc
loope
inc
fs
and
mov
mov
xchg
stos
bound
mov
adc
and
push
fldenv
xor
int
test
mov
or
ss
and
inc
mov
xor
jne
aam
mov
stc
icebp
into
jge
push
btc
dec
test
and
in
sbb
add
inc
pushf
and
or
jecxz
mov
imul
enter
mov
cli
sahf
sbb
sbb
sub
pop
int
hlt
lahf
mov
xorb
xchg
ret
add
pusha
mov
sub
cmc
and
subb
jg
dec
sub
adc
jnp
push
cmp
shll
in
test
dec
outsl
mov
mov
arpl
cmp
pop
jle
aaa
push
and
pushf
js
sub
pushf
or
lods
and
or
jae
sub
xor
out
and
movd
mov
mov
out
lret
clc
cs
add
in
icebp
push
dec
mov
loope
and
and
aas
stos
xor
mov
mov
mov
and
lods
loopne
insl
out
imul
mov
out
pop
push
mov
inc
out
push
cs
sbb
cmp
lock
loop
call
push
mov
loop
loop
fs
dec
popf
insl
lds
outsb
or
js
pop
mov
ljmp
cmp
xor
lahf
and
mov
xchg
jns
xchg
ja
mov
xchg
stos
mov
fsubrs
pusha
stc
call
push
je
cmp
and
xchg
push
adc
mov
push
das
mov
and
rcll
negl
je
pop
cli
adc
sbb
roll
pop
icebp
mov
fstpt
out
popf
sub
xor
sahf
hlt
jg
nop
call
pop
mov
fiadds
insb
push
pusha
ja
lea
inc
xor
rcrl
repz
sub
jns
xchg
pop
or
hlt
adc
fildll
jl
cltd
jle
daa
cmpsl
stos
push
insl
sub
pusha
fimuls
stos
add
icebp
xchg
jmp
xor
push
pop
sbb
inc
push
mov
mov
gs
mov
xor
xchg
push
mov
xor
repnz
xorl
pop
sub
dec
mov
fcoml
aad
mov
xchg
cmp
ret
push
out
and
pop
adc
and
fwait
aad
inc
inc
xor
jecxz
fmull
lcall
xor
mov
icebp
ret
pop
aam
pop
xchg
adc
mov
lret
inc
jns
movsb
cmpsl
xor
pusha
xchg
stc
outsb
mov
popa
jae
scas
inc
je
and
add
dec
or
mov
push
inc
lods
pop
dec
and
es
in
mov
fldcw
adc
adc
jmp
push
gs
out
lds
dec
mov
ljmp
xchg
les
pushf
mov
mov
in
scas
enter
mov
push
push
out
out
xchg
aas
jge
push
xchg
nop
jns
jle
mov
and
jo
fsts
cmp
je
pusha
sub
mov
stos
out
pop
mov
cmp
andb
push
cltd
sbb
ds
enter
ret
push
mov
xchg
jge
sub
cmp
inc
sub
popa
sbb
dec
je
sarb
push
repz
xor
inc
js
shll
cmp
and
sbb
xor
jecxz
xchg
arpl
lret
js
imul
xchg
cmpb
xchg
push
pop
xor
fs
mov
aad
psubb
ja
addr16
sahf
mov
sbb
les
enter
or
addl
inc
push
adc
test
fildl
cmc
and
cmp
pusha
xor
popa
cs
repnz
adc
adc
xchg
es
int3
cli
ficompl
hlt
ljmp
aaa
push
ss
mov
popf
xor
arpl
dec
or
aam
pop
xchg
adc
call
xchg
lods
inc
xchg
popa
out
mov
cmpsb
mov
push
repz
dec
mov
sti
add
addr16
popa
imul
int3
push
jnp
pop
aam
push
movsl
fbld
pop
inc
out
pop
inc
dec
inc
repz
ljmp
sahf
push
pop
mov
sub
clc
pushl
pop
loopne
shll
push
aam
pushf
cmp
sbb
pop
mov
push
addr16
xor
mov
dec
jle
mov
lret
add
gs
mov
pop
es
jbe
test
fstpl
add
daa
push
inc
xchg
pop
mov
je
imul
and
cmpsl
dec
sbb
call
and
push
incl
call
jecxz
nop
fidivrs
mov
xor
jl
out
mov
mov
push
pop
daa
pop
adc
lods
push
cmc
stc
lret
gs
jmp
and
ss
jge
stos
or
inc
outsb
insl
pop
enter
bound
sub
sahf
lods
and
out
sbb
pop
dec
in
cmpsb
pop
or
and
pop
je
nop
add
jmp
mov
add
clc
sub
cwtl
add
jne
push
sub
cmp
movsl
js
add
sub
arpl
pusha
sbb
add
stc
pop
rcr
pop
push
lods
xchg
push
mov
sbb
insb
sbb
push
inc
cwtl
pop
jecxz
and
xchg
ja
mov
dec
outsl
add
push
xor
cmp
push
and
scas
sub
adc
cmp
jge
cmp
pop
test
xchg
jge
loopne
mov
stos
xor
xchg
aam
sahf
cltd
dec
and
lods
xlat
jns
push
cmp
cs
dec
cmp
sbb
push
call
es
jle
sbb
sbb
in
sub
scas
movsb
jl
pop
add
imul
pop
inc
and
dec
push
pop
adc
loopne
les
cmp
out
sbb
fdivl
data16
xchg
lret
pop
test
cmp
jle
fwait
mov
dec
movsb
pop
adc
mov
adc
push
ret
cmp
inc
dec
push
cmp
rorl
test
mov
cmpl
fisubs
lods
adc
sti
sbb
stos
pop
subl
mov
mov
sbb
sbb
repz
add
mov
xchg
push
and
fwait
pop
inc
pop
lcall
mov
lret
mov
leave
sti
loop
addr16
jb
jg
mov
scas
sahf
pop
jmp
stc
xlat
xchg
fbld
pop
aam
xchg
jne
roll
fsub
dec
adc
call
andl
cmp
jae
imul
cltd
pop
loopne
aas
mov
mov
call
in
notb
lret
sub
dec
mov
mov
xchg
push
mov
jb
scas
xor
jle
rclb
push
pop
jle
hlt
sti
mov
cli
ljmp
ss
xlat
arpl
sub
test
sbb
adc
ror
mov
inc
dec
aaa
cmpsb
lods
lock
add
mov
add
and
inc
lds
enter
dec
xor
shlb
mov
ds
scas
jbe
popf
or
adc
mov
cwtl
mov
lcall
pop
outsb
es
mov
jbe
test
cmp
insb
hlt
push
cltd
stos
pop
into
push
and
sub
test
mull
jg
mov
mov
popl
outsb
sarl
les
or
xchg
bound
pop
out
pop
stc
push
icebp
mov
loopne
push
inc
in
inc
clc
das
lcall
jg
cwtl
xchg
push
jmp
xchg
xor
mov
pop
push
ficomps
sti
mov
push
lock
repnz
mov
or
sbb
jmp
sub
out
stos
call
xor
xor
push
mov
popf
inc
dec
cmp
pop
popa
mov
and
mov
cmp
sbbl
dec
pop
fwait
mov
mov
cmc
mov
mov
push
mov
add
mov
insl
fsubl
scas
xor
dec
pop
or
xchg
and
scas
xlat
and
ljmp
psubusb
xchg
leave
andl
dec
mov
adc
pop
xchg
xor
mov
cmovg
movq
cli
arpl
je
xchg
cld
sbb
data16
out
adc
rcrl
jae,pn
xchg
inc
int
jmp
es
shll
pop
aas
cld
pop
hlt
inc
jmp
mul
fnstsw
test
std
ljmp
cmpsb
icebp
adcb
pop
mov
xor
mov
adc
fistl
shrb
cmc
popf
iret
xor
pop
rcrb
in
mov
sub
test
loop
js
jge
cmp
mov
mov
fsubrs
jmp
mov
fstp
in
dec
mov
stos
or
xchg
jo
xchg
test
mov
in
ss
adc
bound
out
std
mov
neg
or
mov
or
inc
and
ret
cld
scas
out
movsb
ss
or
mov
fstpt
adc
insl
imul
lea
flds
mov
in
dec
cmpsb
push
add
aaa
daa
hlt
fsubs
and
cmpsb
pop
push
in
mov
pop
or
xor
adc
into
jecxz
inc
addr16
lahf
stos
lods
mov
scas
jnp
dec
out
jmp
jl
scas
dec
xchg
test
cld
gs
aaa
movsb
ret
add
pop
sub
or
push
shr
mov
mov
push
sbb
fistps
mov
push
clc
sub
dec
into
mull
and
fldenv
sub
xor
push
pop
mov
mov
cmpb
lcall
jl
mov
cmc
adc
outsl
es
jecxz
or
aas
test
mov
pop
call
add
in
imul
sbb
adcb
sbb
scas
loopne
stos
pusha
pop
jo
ss
xor
leave
lahf
pop
ficomps
sbb
dec
int3
cli
div
cmc
push
stos
mov
icebp
adc
aas
dec
outsl
hlt
adc
xor
or
inc
out
dec
mov
lret
insl
rorl
mov
outsb
push
gs
pushf
push
ds
sahf
cmp
aad
fisttpll
dec
repz
or
mov
sbb
xchg
pop
jl
sti
inc
pop
push
repz
popf
test
lahf
roll
cmp
inc
sub
or
rcrb
int3
dec
addr16
mov
cmpsb
out
inc
ljmp
mov
int
lret
inc
cmp
or
mov
pop
fisttpll
enter
jns
sub
xor
lcall
stc
negl
push
and
scas
repnz
popa
push
fsubs
int3
adc
icebp
push
xchg
jecxz
testb
daa
in
pop
mov
add
push
xchg
orl
out
ret
repz
mov
mov
or
ds
jp
test
sahf
jne
mov
lods
xchg
adc
mov
test
cltd
mov
imul
dec
sub
cmpsl
in
push
clc
stc
loope
pushw
cmp
shlb
adc
push
iret
sub
lock
cmpsb
cmpsb
rdmsr
xchg
push
and
lods
push
cmpsb
dec
das
dec
int
js
mov
pop
movsb
sub
sub
and
inc
push
imul
lds
std
stos
aaa
ds
imulb
jns
mov
jle
pop
pop
jl
dec
cmpsl
pop
insl
inc
mov
pop
jo
stc
clc
mov
mov
arpl
cltd
rcrl
clc
outsl
jp
int3
mov
pop
je
jnp
lret
out
je
sub
fnstcw
and
xchg
mov
cmp
pop
jo
push
lods
sbb
sti
cmp
out
jb
mov
xor
sub
insb
bound
inc
cmp
movsb
fsubl
jmp
push
xchg
in
mov
lds
dec
fsubr
mov
sub
mov
xor
or
xor
addb
inc
enter
push
or
cli
xor
test
dec
add
loope
in
xchg
fadd
not
mov
adc
mov
aas
pop
jne
movsb
mov
mov
out
js
sahf
jae
imul
gs
lea
sub
cwtl
xor
in
jmp
mov
xchg
addr16
rcrl
mov
xchg
roll
pop
adc
data16
inc
sarl
fincstp
add
adc
sub
sbbl
cmp
jp
out
jmp
pop
and
inc
addr16
sub
xor
xchg
or
repnz
add
sarb
movsl
lret
addr16
or
testb
in
fisttps
fwait
and
jno
jge
pop
inc
leave
inc
in
xchg
stos
rcrb
mov
adc
out
int3
hlt
mov
test
stos
repnz
ja
sarl
test
or
inc
add
xor
sbb
mov
cli
lret
xor
cltd
out
adc
fstps
sahf
out
push
mov
sub
enter
cmp
pop
lods
jmp
pop
sbb
or
mov
in
cwtl
xchg
pop
repz
jnp
mov
ret
addr16
cmp
inc
jmp
in
mov
and
out
cld
fst
xor
mov
ficoml
out
push
pop
xlat
test
push
mov
pop
test
inc
cs
icebp
inc
sbb
stc
ret
daa
popa
add
aaa
mov
mov
jno
dec
jae
fadd
adc
adcb
add
scas
xor
frstor
test
mov
push
pop
orl
and
out
jnp
push
jp
cmp
inc
stc
pop
adc
lcall
arpl
bound
fidivs
mov
cmc
hlt
ficompl
in
ja
adc
lds
shlb
pop
jno
push
das
das
popa
fldenv
cmc
jnp
and
pop
fwait
adc
bound
xor
dec
imul
dec
std
dec
jno
mov
inc
xchg
cmc
imul
ret
mov
and
hlt
loope
pop
ret
lret
xor
mov
xchg
or
repz
push
inc
dec
dec
add
cmp
cmp
shll
shlb
sub
pop
nop
lret
jnp
add
stos
jl
das
test
cli
xchg
ret
fs
sub
stos
cwtl
mov
inc
pop
aad
pop
adc
fimuls
jno
fsub
mov
mov
lea
imul
xchg
add
push
or
test
add
push
add
popf
movsl
mov
cli
retw
rcrl
les
sub
and
ja
sbb
jle
or
sbb
push
jge
jo
mov
ljmp
nop
in
pop
ss
out
xchg
jno
jp
mov
lods
sahf
out
xchg
sbb
jl
xor
jbe
mov
ss
push
or
cmp
add
push
jnp
xor
lcall
cld
mov
cmp
jae
outsb
lahf
ret
icebp
xchg
xchg
mov
repz
sub
pop
mov
lret
ja
pop
fisubrl
push
cli
cmp
fsubl
out
lcall
mov
call
sub
test
jg
push
mov
lods
push
jecxz
push
mov
inc
lods
aas
test
xor
pop
adc
je
sbb
mov
repz
fidivl
clc
andb
jmp
fwait
in
je
jbe
lcall
adc
test
loopne
outsb
xchg
pop
icebp
insb
jo
clc
nop
sub
pusha
jl
inc
jmp
or
push
test
mov
mov
mov
xchg
clc
jmp
xor
inc
push
or
pop
mov
insb
popf
xor
or
aam
dec
iret
scas
mov
subb
pop
shrl
xchg
ret
add
pop
daa
mov
fdivl
movsl
jbe
in
cld
push
cli
xchg
mov
pop
jmp
mov
mov
fwait
dec
loope
stos
shl
xorl
mov
in
ficompl
ficomps
outsb
in
or
lret
mov
mov
pop
push
add
shlb
and
xchg
test
fisttpll
fidivrs
jo
inc
mov
sub
dec
es
pop
fwait
sti
fdivrs
js
mov
pop
lret
arpl
iret
sbb
sbb
mov
and
fldt
iret
std
test
push
int3
pavgb
xor
daa
mov
pop
popf
enter
test
cmp
xchg
out
shll
iret
pop
mov
xchg
popf
outsl
idiv
pusha
sbb
lock
pop
sub
inc
sar
stc
mov
ret
jbe
fwait
jle
mov
xchg
mov
lock
jnp
into
sub
gs
push
xlat
xchg
divb
sub
je
push
out
outsb
jne
cmp
inc
and
inc
dec
sbb
roll
cli
ljmp
jg
les
cmp
sbb
xchg
mov
mov
mov
testb
push
sub
outsl
cmp
xchg
stc
xchg
arpl
fadd
push
add
lahf
lods
cmpsb
xchg
xchg
out
inc
push
lods
jg
push
sbb
xchg
pop
out
mov
outsl
jp
fxch
push
int
pop
dec
in
pop
andl
fcompl
xchg
xchg
mov
push
pop
movsb
fwait
stc
es
push
cmpsl
call
xor
inc
mov
xchg
xor
lret
shll
test
es
or
inc
repnz
dec
in
or
pusha
jo
stos
bound
xor
mov
flds
xchg
movsl
or
test
xchg
cwtl
or
fsubrs
mov
je
ljmp
adc
shr
mov
sbb
push
test
jmp
jne
in
jmp
fisubrl
rclb
cmc
mov
push
mov
out
int
scas
push
cmc
outsl
movsb
scas
pop
pushf
icebp
lock
inc
ror
cld
inc
xchg
inc
push
call
xchg
mov
test
push
push
mov
mov
dec
notb
ret
xor
cmc
shl
outsb
adc
cltd
xor
or
mov
or
sub
mov
les
stos
adc
scas
int
es
xchg
cmc
ret
and
es
or
pop
int
fisttpl
xor
sub
inc
sbb
and
cmp
popf
inc
cmp
jecxz
subb
jecxz
mov
imul
cmp
dec
jno
fidivrl
les
inc
xchg
mov
and
xor
jae
mov
adc
and
mov
xor
leave
dec
push
stc
outsb
call
loope
pop
jno
popa
dec
mov
sub
test
out
loopne
mov
pop
sub
ja
call
or
sub
out
pop
jle
and
push
shr
mov
inc
les
cmp
movsl
fisttps
mov
adcl
loope
inc
cmp
imul
cwtl
shrl
cmp
pop
push
xchg
ja
xlat
mov
scas
sbb
and
jge
push
sub
mov
adc
or
sti
push
hlt
test
or
int
outsl
aam
mov
outsb
leave
and
mov
adc
inc
fcompl
dec
fsts
movsb
lret
xor
lcall
cltd
xchg
ja
inc
out
adc
adc
xchg
test
jmp
rcr
scas
in
mov
ljmp
xchg
popf
add
and
xor
int
xchg
loop
pushf
mov
iret
ret
fnstsw
repz
popf
addr16
hlt
sub
inc
addr16
mov
add
and
iret
sbb
or
xor
cmp
dec
jl
clc
roll
dec
out
fwait
loope
add
jg
aad
xchg
icebp
mulb
cs
add
in
test
lds
pushf
movsb
mov
pop
test
cmp
adc
std
fnsave
jp
xor
movb
push
lods
push
add
test
cmpsb
mov
test
mov
mov
int3
lret
xchg
xor
mov
adc
into
push
xor
jbe
sub
ret
jp
shll
cli
out
addr16
mov
sbb
outsl
out
mov
add
xchg
cmp
cmp
aam
out
and
xchg
test
outsb
mov
jae
lods
jno
ljmp
dec
mov
adc
loope
lods
enter
popf
jnp
push
xor
stos
inc
insl
dec
popf
and
int3
add
push
out
dec
nop
stc
sbb
push
adc
pop
cmp
sbbb
mov
push
stos
test
mov
mov
sbb
adc
ror
mov
cltd
mov
sub
fdivrl
mov
add
jnp
ja
cwtl
ljmp
ja
dec
push
cmp
push
push
dec
lods
popa
add
add
inc
jl
in
xchg
es
fwait
push
inc
mov
insl
test
jno
xor
dec
gs
sub
adc
mov
mov
out
mov
shrl
call
or
aad
push
add
out
cmpl
mov
addr16
aas
das
cmp
or
jg
xchg
js
push
js
ficoms
arpl
or
in
cmp
cwtl
jmp
mov
ss
add
test
push
dec
push
adc
mov
adc
ret
ja
sbb
mov
incl
mov
popf
loop
loopne
sub
fstl
push
int3
icebp
loope
sub
xchg
inc
jmp
movsl
dec
jns
stc
ljmp
loope
jne
pop
int
pop
inc
mov
jmp
jle
jmp
cmp
aas
sbbb
sbb
push
cmp
inc
cmp
dec
shlb
mov
mov
mov
xchg
test
or
add
jno
fnstsw
imul
mov
loop
sbb
dec
cmpsb
cmp
jmp
cmc
xchg
add
movsb
xlat
jno
mov
jb
call
out
xchg
enter
cmc
out
push
xchg
or
daa
pushf
in
clc
or
pop
cwtl
jmp
test
xchg
cld
jecxz
ds
pop
bound
movsl
add
sub
ljmp
loope
hlt
jbe
xchg
rcrl
push
stos
lds
mov
bound
insl
sub
cwtl
cli
out
lret
jne
lods
xchg
cmpsb
aaa
xor
mov
int3
imul
xor
pushf
pop
push
cmp
jne
repz
insl
stc
push
push
xchg
test
and
aaa
int3
test
leave
push
mov
inc
stos
into
and
popl
repnz
push
imul
and
pushf
ret
push
ret
jg
int
sub
ljmp
cltd
jmp
or
cld
out
loope
push
sbb
cmc
jge
pushf
xor
add
mov
add
test
and
iret
ljmp
out
mov
cmpsl
test
mov
rcrl
inc
test
jmp
aam
push
xlat
in
ret
adc
mov
gs
in
push
hlt
xorb
inc
jb
repz
arpl
inc
subl
inc
xor
or
push
adc
ds
nop
or
dec
inc
sbb
jl
fbld
dec
push
sbb
cmpsl
adc
xor
cmc
sti
insl
mov
sbb
mov
jne
dec
dec
lcall
daa
in
movsb
push
loopne
gs
scas
addr16
mov
cmp
stc
dec
repnz
mov
mov
je
lds
cmp
push
in
xor
push
lret
pmaxub
inc
aas
lret
das
in
pop
jmp
sub
cld
mov
inc
call
sahf
push
pop
mov
dec
mov
or
sarb
xor
adc
loopne
mov
fdivrl
cs
jge
lret
lret
xlat
mov
es
les
cltd
pop
mov
shl
call
je
cs
ljmp
cmp
test
or
int3
and
jo
or
gs
mov
mov
cbtw
push
or
xor
sarl
xchg
sbb
lret
and
inc
xlat
sti
out
cwtl
pop
sahf
mov
jns
sbb
test
cmp
clc
jb
movb
mov
popa
jge
sbb
lods
andb
ret
pop
movsb
fdivr
in
dec
xchg
or
or
jmp
push
call
fisttpll
xchg
jl
js
mov
or
jp
push
pop
xor
and
gs
aaa
xor
inc
cmc
mov
dec
pop
cmp
dec
mov
lcall
stos
xor
mov
sbb
in
mov
icebp
push
rorb
xchg
std
xor
ffree
mov
adcb
addr16
imul
cmp
xor
mov
ja
mov
pop
adc
nop
inc
test
es
fidivl
daa
push
push
jl
jmp
xchg
xor
cmpsl
mov
adc
stos
adc
arpl
cmc
sbb
jb
mov
testl
xchg
pop
popl
fucomip
out
push
cpuid
sub
xchg
mov
cltd
jb
imul
testl
stc
adc
insb
int
mov
mov
mov
fdivl
sub
cwtl
lds
inc
sahf
inc
leave
sbb
jp
lods
push
subl
pushf
popa
pop
call
out
roll
std
pop
les
call
loopne
xor
and
pushf
mov
dec
jbe
cmpsb
push
cmp
adc
ret
icebp
in
xchg
addl
cmc
test
sub
jo
int3
add
sbb
sub
sbb
dec
add
int
push
out
popa
xchg
and
sub
xor
dec
xor
addr16
aaa
aas
jp
jbe
stos
cmc
cmp
mov
ds
fisubrs
in
icebp
jge
ret
cmpl
push
sbb
and
push
mull
add
call
mov
ja
add
add
mov
sbb
aam
pop
sub
xchg
aas
add
fcomip
mov
or
scas
iret
mov
xchg
mov
lds
xchg
ss
sub
je
sbb
dec
mov
jmp
aad
or
push
adc
push
adc
jp
mov
shlb
andl
call
jge
inc
xchg
cmp
xor
pop
pmaxub
bound
jmp
xor
inc
xor
jmp
or
jno
xchg
adc
dec
mov
or
and
stos
dec
adc
push
lea
add
cmp
inc
sub
cmp
mov
or
pusha
jecxz
in
add
xchg
dec
adc
fcomp
pop
push
mov
std
sub
punpckhwd
daa
fsub
push
sbbl
xchg
xlat
jno
add
enter
jl
inc
ret
or
stc
and
sbb
aas
dec
or
pusha
jle
pop
dec
pusha
or
sbb
jb
das
add
std
lea
jns
int
stos
xchg
js
mov
test
clc
cwtl
outsl
jno
or
jecxz
xlat
fiaddl
aaa
daa
cmp
js
adc
in
shlb
push
pop
pop
jne
repz
sahf
je
enter
aad
and
daa
push
xacquire
pop
mov
inc
inc
test
imul
pop
push
out
fcmovne
and
mov
xchg
shr
push
jmp
lret
imul
adc
les
cmpsl
adc
out
dec
push
aad
mov
pop
cmc
inc
dec
cmp
rolb
sub
cmpsl
mov
shlb
xchg
pop
jge
cmpsb
jo
loop
mov
std
in
cmpsl
jne
dec
jns
jg
add
xchg
xchg
push
sti
jg
xlat
stos
mov
cltd
ja
or
or
outsb
imulb
popf
das
sub
jle
add
test
arpl
cmpsl
loop
jae
xchg
or
cmc
cmp
insl
mov
jp
je
int
cmp
shlb
xchg
test
movb
mov
sub
shll
sub
jb
sbb
add
or
mov
and
inc
cld
repz
push
xorl
lods
or
adc
scas
jmp
popf
cmp
inc
xchg
imul
mov
jne
out
mov
pop
push
out
cmp
mov
adc
xchg
pop
in
in
mov
hlt
repz
stc
aad
xchg
sub
ja
gs
pushf
xchg
jno
add
xchg
push
cmp
leave
cmp
outsl
and
sbb
xor
cmp
sub
data16
or
push
mov
cmp
enter
popf
scas
and
ja
push
loope
int
clc
mov
jno
or
icebp
enter
mov
mov
mov
cmp
add
stos
add
std
dec
sbb
jo
les
repnz
icebp
pop
mov
fsubl
inc
push
outsb
sarl
fidivrl
mov
int
std
pop
inc
or
push
jmp
out
add
jecxz
cmpsb
pushl
nop
xor
mov
dec
adc
test
sbb
jecxz
cmp
dec
lcall
ss
mov
pop
lock
pop
outsl
out
add
and
sub
shll
jg
negl
ja
adc
arpl
jecxz
aas
fwait
sbb
dec
and
shrl
pop
repz
lret
and
ss
ficoms
loopne
jnp
cmp
scas
lods
daa
psubusb
dec
sbb
dec
mov
dec
and
jge
scas
js
popf
sub
popf
inc
cli
clc
into
push
jae
mov
movsl
loop
loopne
pushf
icebp
or
popa
int3
shlb
dec
jbe
inc
bound
push
in
shlb
in
adc
xor
dec
adc
dec
push
andb
and
addr16
test
inc
popf
jae
cmpsl
in
inc
adc
aam
shll
xchg
or
inc
jecxz
iret
pop
movsl
bound
mov
xchg
fs
mov
dec
push
loop
or
push
and
mov
add
mov
scas
es
push
jl
into
sarb
jecxz
lcall
int3
fldln2
leave
dec
fstl
sbb
cmp
dec
stos
jge
xchg
rol
nop
sbb
lods
xchg
mov
es
shlb
mov
jns
push
in
loopne
ret
sub
jp
pop
arpl
cld
lods
cmc
jo
gs
daa
sub
xor
mov
or
dec
orl
rorl
enter
mov
fsubp
or
mov
lret
in
mov
or
lods
sbb
push
iret
nop
mov
push
jmp
out
jb
orl
jge
add
sarl
scas
and
ja
jge
mov
rolb
outsl
jg
into
push
ds
dec
call
sub
pop
fs
jnp
aam
jb
adc
movsb
and
push
in
mov
fstpt
pop
inc
push
fwait
xlat
push
push
jno
fimuls
xchg
hlt
sub
push
scas
stos
xchg
push
int
imul
pop
pusha
jnp
aas
cmpsl
lret
loopne
sbb
es
sub
cli
or
stc
cmp
test
in
jns
jo
paddd
popf
mov
jmp
dec
frstor
dec
pusha
ret
enter
fisttpl
ficomps
clc
out
mov
lea
lret
iret
xchg
in
std
mov
stos
popa
inc
popf
mov
mov
inc
cltd
sbb
sbb
pusha
das
int
aad
scas
pop
shlb
jle
int3
add
pop
mov
addr16
and
inc
mov
aad
push
pushf
push
sbb
mov
test
outsl
adc
std
mov
xor
xlat
pop
add
xor
jl
sub
pop
pusha
das
pop
push
mov
out
movsl
lods
sahf
lods
ret
xor
fcoms
mov
xor
lods
xchg
cmp
jg
sub
mov
movsb
gs
add
lcall
pop
jo
mov
imul
fucom
inc
xor
or
ja
aad
adc
je
bound
mov
jno
fldenv
fstl
xchg
fidivrs
sti
xchg
adc
lret
mov
cmpl
aam
sbb
jbe
xchg
bound
ds
push
jge
es
iret
shll
ljmp
inc
mov
sbb
test
mov
lahf
mov
or
test
jmp
xor
lock
pop
fwait
sub
cmc
xchg
pop
mov
adc
adc
popf
xor
insb
sahf
mov
cli
in
sbbl
cmp
pop
cmp
xor
movsl
rolb
xor
rcll
mov
in
bound
loopne
sbb
dec
sarb
fcomps
sub
test
push
test
out
dec
sbb
cmp
out
cli
cmp
fidivrs
arpl
gs
mov
cld
pop
dec
sti
cmpsl
adc
xor
push
push
mov
mov
cwtl
std
aas
mov
jmp
fiaddl
movsl
inc
cmp
pop
dec
mov
mov
popf
jb
ds
jb
cmp
pop
or
les
mov
jne
lahf
push
enter
inc
push
popa
mov
test
mov
xchg
fsubs
adc
sti
je
dec
jmp
cmp
mov
jp
adc
aaa
mov
mov
in
mov
sti
xor
mov
cmp
inc
push
frstor
nop
notl
mov
cmc
jne
gs
inc
adc
lock
xchg
pop
pop
enter
dec
dec
mov
test
loope
or
mov
sub
cld
mov
inc
and
mov
push
cmp
andl
out
inc
adc
outsl
and
andb
pusha
fwait
call
add
push
adc
dec
dec
cmc
or
shrb
mov
pop
mov
adc
test
sti
ljmp
xchg
sbb
push
add
into
test
add
fucom
pop
cmp
sbbb
xchg
adc
sbb
dec
mov
outsl
lret
aaa
aad
lret
in
nop
sub
adcb
aas
sbb
aas
pop
mov
je
mov
int
fidivs
sbb
imul
stos
push
pop
xchg
iret
fsts
add
xchg
pusha
cmp
repz
cmp
insb
mov
lret
pop
sub
cld
addl
pop
cmpb
test
dec
clc
push
ret
lock
push
outsl
movsb
popf
insb
int3
push
fdivl
mov
xor
fcmovb
mov
inc
xchg
push
xchg
sarb
lcall
mul
nop
ss
fdivr
fisubs
dec
movsl
lcall
sbb
loop
add
je
lods
xor
int
addl
shll
int3
pop
pop
add
jg
lret
jle
and
pop
fsubrl
pop
and
or
je
shlb
cmpsb
int3
and
mov
jno
cmp
data16
pop
std
sahf
mov
push
fs
inc
push
testb
insl
mov
enter
cmp
push
imul
addr16
test
mov
mov
lds
dec
enter
mov
push
mov
rcrl
pop
mov
mov
ret
xchg
mov
mov
loop
lcall
int3
call
sti
adc
add
xchg
xchg
sub
ret
out
data16
roll
lcall
in
test
dec
cmpsb
mov
sbb
rolb
adc
aad
inc
adc
push
push
ja
scas
fcmovnbe
xor
daa
pusha
hlt
clc
inc
dec
ret
sbb
adc
imul
leave
pop
xchg
test
push
cltd
stos
push
cmp
in
ret
cmp
dec
dec
dec
ret
pop
xchg
mov
repz
jmp
in
lods
aad
dec
jae
jno
xor
pusha
dec
cwtl
aam
pop
hlt
jle
sarb
lret
fidivs
lock
lret
rcr
xlat
in
es
xchg
addr16
sbb
stos
not
test
test
popf
aad
lock
mov
jne
jle
sbb
sbb
imul
push
repnz
inc
mov
rolb
cs
sub
cmp
inc
ja
mov
ja
lret
inc
into
addl
aam
push
cmpsb
adc
std
mov
jle
adc
push
mov
xlat
stos
add
in
sub
stos
stos
xor
add
lahf
cli
sbb
jmp
push
popf
fsts
mov
xchg
ficoms
xor
pop
push
adc
std
mov
loopne
jp
leave
lea
int
popa
jae
mov
inc
leave
std
xchg
mov
pop
jno
mov
sub
xor
jnp
andb
mov
test
xchg
test
dec
repz
pop
jno
rcr
xchg
xor
lret
jle
cmp
mov
xorb
cmp
arpl
fcoms
jbe
push
roll
jmp
adc
xor
adc
adc
cmp
fistpll
cwtl
out
insl
lcall
outsl
jnp
pop
fcmovb
and
or
mov
lods
xchg
adc
es
test
mov
dec
or
mov
jo
fisubl
movsl
xchg
mov
xchg
jne
inc
and
jb
scas
xchg
sbb
add
lea
sbb
pop
shlb
dec
cmc
sbb
mov
gs
repnz
js
fisttpl
xchg
push
mov
int3
cld
sbb
sbb
imul
icebp
icebp
jmp
mov
rcl
push
outsl
add
aad
push
in
inc
mov
dec
int
aam
jmp
sub
pop
movsl
pusha
imul
pop
sti
icebp
in
push
loop
lds
popf
dec
jbe
xor
pop
jo
xor
sbb
push
inc
dec
sarb
ljmp
test
cwtl
out
test
jl
lahf
and
test
jg
aaa
iret
dec
lods
cltd
or
sub
push
adcb
ficoml
cmp
add
cmp
lret
mov
inc
mov
mov
or
cmp
or
jl
jae
aad
lock
stc
xor
push
iret
ret
lods
cld
pusha
outsb
mov
call
mov
xorl
inc
jp
cli
out
push
jge
daa
mov
or
adc
inc
cmovo
int3
shlb
inc
shrb
ja
jnp
insl
stos
jbe
mov
jb
imul
in
pop
xor
jo
push
mov
std
push
sbb
and
ret
popf
inc
nop
inc
adc
arpl
mov
ficoml
push
cltd
jmp
dec
push
mov
js
xlat
push
leave
repnz
mov
rclb
pop
mov
mov
xchg
ja
push
std
add
ret
hlt
ja
xchg
xor
loope
sbb
lcall
and
xor
out
enter
push
mov
out
enter
pop
sub
das
jae
mov
pop
repz
pusha
adcl
icebp
decb
xor
jp
xchg
ss
out
mov
sbb
lret
int
or
add
jne
lret
push
mov
pop
push
xchg
dec
in
mulb
js
mov
shl
repz
xchg
adc
inc
cmpsb
pop
in
fimuls
mov
jns
inc
jo
mov
mov
in
jmp
cld
cwtl
cmp
sbb
cmp
addr16
and
dec
or
int3
push
movsl
push
sbb
test
popf
adc
cwtl
arpl
test
and
mov
pop
jp
add
push
and
mov
and
insb
js
rcl
jno
repnz
push
stos
lahf
add
popa
inc
mov
cmp
popf
sbbl
call
in
lock
xor
mov
mov
or
es
jns
mov
ja
std
push
mov
cltd
xor
push
push
push
xorb
pop
pop
in
popf
jae
mov
xchg
repnz
cmp
adc
add
in
rol
daa
or
in
inc
xchg
jmp
jns
jb
xor
in
or
imul
std
push
imul
lret
ds
sahf
or
xor
xor
outsl
add
dec
jmp
sbb
and
fiaddl
fcmovbe
xor
add
aam
push
cmp
inc
dec
push
jno
mov
push
or
or
push
stos
cltd
jecxz
push
mov
testb
out
lcall
inc
ds
mov
sub
filds
cmp
mov
and
and
push
test
popa
jnp
fisttpl
add
adc
cmp
ret
iret
pop
ja
cltd
outsl
jo
xchg
push
mov
enter
leave
jo
fwait
mov
popl
sahf
negl
cmc
pop
mov
mov
out
in
and
pop
adc
cmc
pop
iret
xchg
mov
rcr
or
cmp
in
fidivl
lret
lods
adc
sarl
push
jae
jecxz
fildll
rcrb
push
cmp
add
add
and
ret
mov
in
sub
out
inc
and
cmp
jmp
and
rol
cmpsb
inc
jle
jbe
fwait
add
dec
testb
sbb
clc
es
les
dec
push
hlt
lret
cld
js
lea
test
and
mov
xchg
mov
mov
lret
xchg
sbb
add
mov
stc
ds
loopne
pop
dec
push
cli
ljmp
js
cmp
and
or
mov
cwtl
decb
or
clc
pop
xlat
repnz
dec
out
dec
pop
mov
push
jbe
lret
idivb
clc
sbb
stos
xor
lea
pop
popf
in
fwait
test
outsb
out
pop
fwait
xchg
xchg
aam
loop
je
sbb
stos
inc
jne
cmp
mov
andb
int
fcomps
pop
push
clc
mov
xchg
scas
pop
cmp
sbb
push
mov
jmp
adc
jle
enter
lret
sbbb
out
pxor
inc
roll
lfs
mov
outsb
jb
adc
mov
adcl
stos
icebp
sbb
pop
out
add
fwait
ret
imul
jl
jnp
fistpll
cmpsb
push
or
inc
dec
xor
jp
cmp
and
lret
jo
pop
fwait
mov
js
dec
fidivl
mov
lods
hlt
mov
cltd
mov
lea
cltd
inc
jae
lahf
dec
mov
shll
push
xor
push
pop
mov
jns
mov
cmp
cmp
add
sub
sub
in
shrl
sbb
int
loopew
add
loopne
pop
mov
lods
cmpsl
inc
fdivrl
xchg
scas
repz
pop
mov
jno
cltd
cs
popa
fsub
jp
inc
sarb
lds
pop
pop
push
mov
lds
jns
dec
push
loope
pop
outsl
rcrb
pop
jns
jb
fldt
mov
int3
arpl
xor
jmp
mov
mov
push
inc
cld
or
aam
out
push
shrl
jb
ljmp
arpl
dec
cmp
push
mov
mov
mov
xchg
movsl
cmpsb
mov
jb
popa
loope
jmp
ret
jno
rcll
dec
add
inc
mov
cmp
xor
push
into
insb
and
enter
mov
jl
push
shlb
movb
les
push
pop
and
jg
jae
test
int
add
pop
notb
stc
movsb
xor
lret
mov
rcll
sbb
repz
inc
fistpll
xchg
push
shll
stos
insl
repnz
and
inc
push
rclb
int3
pop
xor
sub
sub
fbld
xchg
cwtl
mov
jno
clc
cmpsl
push
pushf
out
xor
xor
rorb
jp
stos
loopne
les
divb
movsl
pop
add
pop
cmp
and
fcomi
lahf
fwait
popa
les
incl
ret
data16
jg
hlt
add
cli
dec
out
push
imul
popl
dec
dec
and
mov
lcall
ret
fs
adc
out
cmp
mov
xchg
add
rolb
popf
mov
lret
push
hlt
mov
cltd
loopne
jle
pushf
stc
aas
dec
mov
dec
sub
push
fwait
repz
adc
lret
pop
jmp
and
movsl
or
and
and
icebp
sbbb
mov
test
mov
mov
out
jns
rcrb
enter
mov
jno
int
mov
lret
test
cld
add
das
popf
mov
movsb
sbb
enter
scas
add
insb
sbb
xchg
hlt
call
dec
pop
mov
aam
inc
sahf
cmp
mov
mov
iret
sub
xchg
xor
dec
cmp
xor
mov
dec
push
jmp
fadd
mov
movb
inc
pop
or
rcll
jecxz
in
push
add
mov
test
cmc
sbb
scas
cli
dec
mov
sbb
xchg
shr
jp
int
cmc
std
mov
decl
clc
inc
fdivl
cmp
aad
adc
xor
mov
ja
dec
in
add
movb
sub
mov
ss
into
sub
lcall
fadds
sbb
out
je
int3
std
std
sbb
and
mov
jmp
adc
jbe
xchg
adc
jmp
shll
aam
mov
mov
mov
rcll
movsb
cmp
popf
push
ret
bound
shl
push
daa
xchg
js
xchg
xor
loopne
inc
xor
pop
xchg
push
in
xor
mov
adc
sub
push
dec
and
loopne
in
sub
or
pushf
pop
dec
dec
sarb
into
jp
cmp
stc
push
in
jnp
fmulp
jae
pop
cli
adc
push
and
test
fistpll
mov
rol
jge
pop
aad
sbb
imul
dec
dec
push
out
sbb
pop
test
mov
push
cmp
push
pop
xchg
ret
sub
inc
imul
xor
sar
xor
sub
add
mov
xchg
bound
call
sbb
cwtl
lea
out
sbb
fstp
mov
in
sti
call
cmp
lret
cmp
add
leave
std
jl
je
pop
adc
sub
sbb
test
jno
push
push
sub
sbb
hlt
or
daa
in
pop
rol
jbe
sbb
xchg
or
mov
fcoms
cmp
jne
lahf
stc
mov
jg
mov
xor
adc
lret
pop
or
outsb
inc
inc
cmp
sti
rorb
mov
sbb
push
mov
bound
insb
hlt
pop
jle
cltd
dec
mul
loope
iret
outsl
jbe
fcmovu
mov
mov
adc
loopne
sub
mov
pop
btr
add
or
and
outsb
shl
mov
mov
das
loopne
push
cli
xor
test
stos
jmp
cli
fbstp
pop
pop
pop
or
cmpb
into
sub
xlat
push
ja
loop
out
dec
xchg
dec
add
lcall
push
out
leave
test
mov
lea
jmp
les
push
lea
test
adc
imul
xor
add
cld
sbb
mov
lods
mov
in
repnz
cmp
adc
fwait
cli
cwtl
test
inc
mov
adcb
sbb
mov
dec
mov
addr16
pop
mov
int3
sub
frstpm(287
stos
lret
or
inc
rcl
add
xchg
and
insl
stos
cmp
jmp
mov
xchg
or
mov
ret
les
pop
dec
push
mov
inc
mov
jle
cmp
clc
add
stos
jecxz
nop
jbe
xor
iret
imulb
ret
pop
js
dec
and
daa
sbb
test
fstps
inc
ljmp
call
push
icebp
pop
inc
enterw
push
or
gs
sbbb
jmp
xor
js
sub
mov
pop
aaa
mov
repnz
adc
aam
roll
jns
mov
inc
inc
out
pop
test
push
mov
in
push
xor
push
pop
fldenv
stos
mov
jp
call
inc
xor
movb
inc
imul
jl
mov
jo
cmp
sub
sbb
inc
ljmp
int3
cmpsl
fstpt
loope
notl
pusha
cmpsb
mov
jmp
es
sbb
jp
mov
rcr
jl
rorl
pop
bound
scas
loop
stos
add
or
mov
mov
int3
push
adc
adc
dec
ficoms
jbe
int3
test
movsl
addr16
mov
pop
or
rolb
xchg
xorl
test
jecxz
imul
cmp
jle
insl
inc
mov
loop
or
jns
lahf
push
test
lods
shl
jp
push
gs
and
lds
cmp
push
sbb
in
xor
xchg
stc
stos
imul
xchg
mov
das
bound
mov
cmp
and
adc
imul
mov
mov
inc
adc
daa
loop
mov
inc
adc
inc
test
mov
or
push
jne
sub
in
pop
jbe
push
or
sbb
scas
je
and
jmp
adc
mov
fs
jnp
or
mov
pop
sub
int3
jle
or
in
call
cmpsb
jp
shlb
sarl
sub
ljmp
inc
or
notl
cmpsl
orb
dec
jecxz
mov
mov
or
lock
test
dec
fwait
mov
adc
imul
shr
xchg
rorl
dec
pop
nop
movb
repz
dec
mov
in
lea
ret
call
xchg
sbb
mov
aad
jle
lret
rolb
popf
push
popa
jecxz
jmp
cwtl
repz
jg
out
adc
fs
filds
inc
mov
pop
xor
inc
mov
push
outsl
cmp
xchg
sbb
negb
icebp
push
in
repnz
dec
push
jl
pop
stos
push
mov
jl
push
out
jae
inc
testl
sub
sbb
test
sahf
pop
call
filds
cmp
add
pop
adc
scas
cmpsb
mov
fstl
cld
mov
mov
repz
cmp
shrb
ss
test
inc
jge
cld
or
test
fisubl
nop
xorb
repz
je
int3
push
push
rorl
cmpsb
or
push
jl
data16
and
pop
jmp
scas
rcr
scas
ds
push
dec
sbb
or
fnsave
or
stos
cmp
ret
fcom
inc
sbb
push
dec
cmp
scas
sub
cmp
sbb
inc
scas
xchg
outsl
add
jge
movsl
cmp
iret
imul
inc
aam
cltd
lret
xor
mov
and
es
xchg
aas
xchg
fcompl
fsubrs
push
xchg
sbb
cmp
xchg
out
mov
fwait
dec
cmp
or
xor
dec
pop
jno
pop
push
cmp
adc
xchg
mov
aam
push
push
ds
dec
adcl
and
or
in
pop
push
ds
cmp
fs
scas
sbb
inc
xchg
jle
fdivs
leave
push
lret
jo
in
or
push
add
sahf
dec
movb
jno
cmp
cmp
js
out
lock
xlat
mov
pop
and
xchg
dec
sub
aam
push
pop
ficoml
mov
add
jge
pop
fucomp
ja
pop
sti
mov
int3
ds
hlt
jnp
or
cmpsl
sti
jns
loop
or
push
lret
mov
loopne
out
dec
or
push
jmp
jne
ss
push
icebp
int3
dec
xchg
movsl
jl
sbb
insl
gs
and
popf
cs
into
lods
xbegin
loope
push
jb
shrl
pop
repnz
aad
jecxz
jbe
sub
test
or
imull
sbb
dec
sbb
in
mov
xchg
and
xchg
popa
lahf
sub
and
adc
dec
andl
or
jo
mov
cltd
mov
jno
shll
orl
push
sar
jae
pop
repz
sub
test
leave
mov
addr16
movsb
add
cmp
ljmp
or
pop
pop
cltd
jl
xor
push
shrl
cmpsl
loope
in
jns
cwtl
aad
jne
loopne
push
aam
lock
and
jp
fcoml
fadds
mov
leave
aad
mov
add
js
pop
cmpsl
mov
notl
aad
sbb
pushl
ja
and
dec
or
sbb
call
cmp
and
movswl
push
loop
lea
adc
in
xor
mov
or
or
push
inc
xlat
clc
mov
xlat
insb
mov
push
in
insl
fisttpl
loope
fildl
inc
inc
xchg
add
xchg
sahf
aad
mov
fisubrs
lock
subl
and
aaa
adc
push
aam
or
hlt
xor
pop
jle
xchg
insl
mov
cmp
sarl
lcall
and
sub
mov
dec
out
aas
push
and
lcall
cmp
fwait
mov
mov
mov
dec
mov
mov
xlat
sub
push
inc
stos
enter
mov
pop
test
aad
pop
das
ja
fimuls
mov
sub
jmp
or
ret
aas
xchg
lock
in
enter
fs
arpl
cltd
in
pop
adc
test
int
inc
xor
jbe
loop
xchg
pushf
or
test
push
xchg
push
inc
in
inc
mov
push
fs
sub
mov
cld
sub
aad
push
fstl
cmp
xor
xchg
es
mul
sub
addr16
and
mov
mov
inc
jnp
add
dec
notl
in
gs
in
stc
stos
mov
fisttpll
dec
xchg
and
mov
fninit
adc
pop
xor
data16
sub
lods
in
int
push
addl
or
sub
popf
cmp
inc
outsb
inc
xor
xorl
mov
sbb
sar
mov
shlb
or
ret
add
adc
pop
inc
and
ss
mov
push
lock
inc
and
ss
mov
scas
lcall
sarb
xor
sbb
cmp
loope
add
fstpl
xchg
outsb
dec
sub
jae
and
xchg
sbbb
test
sub
mov
adc
ror
bound
shll
mov
es
xchg
jp
je
dec
pop
push
xor
cmpsb
sub
xlat
xor
push
mov
xchg
insb
inc
popa
push
mov
inc
cmpsl
sub
sub
mov
jns
filds
sub
test
add
xor
mov
or
sbb
fidivrl
push
xor
enter
arpl
rolb
pop
je
movsl
cmp
repnz
fildll
mov
push
addr16
rolb
push
jnp
out
mov
leave
sbb
xchg
aad
jne
xlat
rcrl
imul
ja
or
cmp
cmpsb
cmp
cmc
or
adc
and
add
cmpsl
jae
clc
pop
pop
xor
cmp
iret
sbb
in
sti
cmp
ljmp
sub
in
dec
pop
xor
sarl
in
cmp
inc
dec
push
jno
cmp
pusha
mov
in
mov
and
stc
or
pushf
xchg
xor
cld
mov
sbb
fwait
cmpsb
sbb
dec
stos
mov
stc
cmp
movsb
mov
mov
mov
int3
mov
movsb
mov
jnp
cmp
mov
lcall
lds
mov
leave
push
sti
ret
ficompl
add
js
and
ret
mov
lock
in
mov
nop
cwtl
movsl
bound
in
cmp
pop
xor
adc
lds
push
adc
scas
out
decl
jp
adc
add
add
cs
dec
xchg
xor
sbb
xor
sub
sbb
lods
fsts
sbb
mov
mov
mov
mov
xchg
fisubl
inc
add
jne
ss
mov
imul
cmpsb
cmp
dec
loope
out
lods
inc
and
scas
xor
mov
mov
dec
mov
adc
pop
xor
fldl
movsl
mov
sbb
mov
shrl
ja
movsb
js
inc
insl
inc
and
imul
or
loope
mov
shrb
and
negb
gs
lds
iret
sub
jns
fldcw
mov
cwtl
aas
sbb
roll
add
nop
dec
movsl
cmp
or
xor
push
mov
lret
jo
cmpsl
jmp
divl
add
cs
sub
popa
jmp
cmp
popf
xchg
dec
data16
dec
mov
ret
mov
addl
or
jmp
jg
jae
popf
mov
mov
fdivrl
push
pop
lds
push
rorb
jb
imul
fs
add
dec
gs
movsl
lahf
xor
fwait
mov
mov
adc
stos
lock
push
les
imul
rcr
mov
daa
sub
push
sbb
std
into
and
cmpb
add
out
push
pusha
xor
pop
mov
in
push
js
xor
cmp
push
popa
lods
pop
es
mov
adc
std
and
xor
adc
mov
cld
ja
lock
pusha
jle
orb
adc
add
and
cli
mov
lods
bound
clc
daa
inc
add
sbb
lock
imul
add
in
push
in
pushf
cld
out
mov
inc
cmp
aaa
rcll
dec
sbb
das
lock
cmp
test
out
pop
lods
mov
lret
lret
mov
cmp
xchg
jmp
inc
lret
and
add
mov
popa
test
mov
ja
and
mov
sahf
sar
out
or
imul
or
pop
pop
push
repz
mov
sarl
dec
and
mov
inc
testb
mov
jnp
lea
sbb
bound
pop
adc
sbb
ljmp
pop
clc
xchg
lahf
roll
in
out
cmpsl
push
aas
sub
aaa
add
in
mov
xorb
sub
jnp
xor
rcl
stos
dec
jnp
jp
add
sbb
push
mov
popf
movsb
mov
es
adc
inc
ja
rcl
sbb
mov
push
push
idiv
dec
add
icebp
dec
jae
xchg
push
ja
out
lock
cmc
in
inc
jecxz
pop
in
hlt
inc
gs
jo
adc
movsb
sub
push
cli
mov
mov
and
test
and
idiv
test
ret
inc
cs
pusha
shlb
inc
cld
ja
cwtl
repz
jg
into
jnp
jnp
add
xchg
push
test
jmp
and
push
push
cmp
mov
xor
aam
ljmp
and
insb
dec
add
lret
test
aad
mov
mov
xor
cmp
inc
test
daa
lods
mov
adc
mov
lahf
jo
cmp
and
scas
imul
push
or
out
iret
sub
fildl
movsl
cwtl
cmc
fstps
add
fcoml
nop
add
outsl
lcall
movsb
push
nop
pop
stos
fnstsw
fwait
push
jns
adc
sbb
inc
mov
dec
inc
in
ss
add
pop
gs
and
je
cs
add
mov
adc
mov
mov
dec
mov
test
aaa
cld
fs
cmp
push
sub
and
xchg
out
sub
popl
outsl
add
sti
mov
sbb
aaa
and
sbb
push
inc
mov
daa
in
scas
push
push
mov
unpckhps
stc
adc
pop
cmp
xchg
scas
pop
xor
bsr
mov
aam
sub
inc
sbb
les
and
add
dec
rorl
pop
lahf
mov
mov
sbb
inc
outsb
rclb
movsb
push
push
cli
inc
lods
jl
mov
jb
push
shll
leave
cmp
pop
leave
addr16
es
andb
arpl
fistl
and
jmp
xor
fisttpll
rdmsr
and
and
inc
push
insb
out
pop
fisubs
xor
pmaxub
jns
repz
inc
cmp
adc
add
mov
scas
add
das
aaa
pop
dec
je
lret
cmp
mov
sbb
cmp
inc
add
push
lock
test
sub
nop
into
into
dec
daa
xchg
bound
add
dec
xor
cmp
dec
sub
loopne
mov
test
test
xchg
sub
mov
add
cmp
and
sbb
cmp
in
dec
push
aam
sbb
call
mov
in
loope
rcrl
in
test
jns
call
cmp
cmp
shlb
xchg
lret
lahf
push
fimuls
cmp
icebp
add
jb
sub
mov
mov
jnp
movsl
test
lcall
out
out
xor
sub
inc
lds
xor
rcll
lods
dec
inc
add
mov
or
or
call
stos
lcall
jmp
rclb
xor
ja
pop
mov
in
xor
cmp
fnstenv
jnp
pop
add
lcall
sbb
sbb
rolb
jns
pop
inc
pop
les
sub
jns
je
sbb
or
push
pop
rcl
mov
outsb
mov
push
int3
dec
inc
loop
rclb
fidivrs
aam
jo
jecxz
mov
xchg
or
scas
dec
xchg
jp
xchg
cmp
ds
push
add
popa
mov
stc
add
xor
sbb
fbld
or
xchg
in
pop
inc
dec
and
es
ds
mov
lret
stc
insl
test
and
and
ss
stc
fwait
sahf
test
je
mov
fs
lea
nop
and
adc
stos
xor
push
lods
xor
outsb
adc
or
mov
je
inc
adc
pop
xchg
std
jno
fs
iret
jb
jecxz
inc
xchg
push
fiadds
sbb
cmovae
or
ret
test
mov
test
decb
ja
push
cmp
jle
movsb
add
pop
mov
scas
or
jp
ret
adc
dec
or
cltd
pop
negb
clc
xor
sub
cs
sbb
mov
loop
mov
stos
mov
cli
lret
pop
pop
xor
cmpsb
push
stc
mov
inc
push
inc
or
in
mov
test
into
dec
jg
push
aas
jne
popf
xlat
ss
ds
jmp
sub
stc
cs
inc
movsl
jno
orl
or
xchg
sub
mov
add
jnp
and
and
movsl
stc
cltd
hlt
scas
pop
cltd
ud0
lods
jp
outsb
lea
outsl
call
js
je
fldcw
movl
inc
sub
cmp
sbb
fmuls
ret
int
push
sbb
mov
cmpsl
dec
aad
aas
decl
loopne
jge
mov
dec
or
or
pop
cmp
arpl
lcall
jbe
daa
adc
bound
arpl
jb
cmpl
jg
xor
lea
jecxz
dec
adc
sub
mov
cmp
orl
stos
ljmp
cmpsb
xor
in
dec
mov
mov
dec
pop
xor
xchg
loope
dec
sub
mov
mov
jne
dec
and
sar
lahf
xor
hlt
pop
ficoml
dec
xor
push
orb
pop
in
lcall
orb
push
adc
sarl
out
sarl
imul
pop
cmp
lds
repz
adc
in
dec
rorl
shl
sarb
and
push
add
and
lds
aam
in
repnz
mov
ljmp
aas
dec
sub
pop
mov
aam
push
ja
sbb
cli
out
ret
adc
add
stos
jmp
insl
cwtl
lret
pop
stos
fistpll
pusha
mov
hlt
ds
mov
adc
inc
push
and
sti
xchg
cld
mov
sti
arpl
out
mov
jge
call
mov
cmp
pop
add
pop
cmp
int
jle
xchg
ret
sub
mov
nop
sbb
loope
pop
or
adc
cmp
mov
fidivs
sbb
and
xchg
pop
push
mov
into
gs
scas
sbb
in
jmp
pop
fisubrs
push
and
rorl
and
add
fildl
jge
andb
sti
andl
sub
or
mov
imul
inc
or
mov
mov
add
jg
in
add
push
adc
movsl
call
or
xchg
test
and
insl
fcmovu
sub
lods
jl
push
test
sbb
mov
mov
xlat
mov
in
push
lcall
outsl
add
pop
sub
sbb
push
cltd
sti
stc
add
xor
sub
call
or
xchg
and
cmp
dec
and
lods
test
shlb
test
pop
in
mov
les
aam
adcb
adc
sahf
jmp
ds
adc
mov
and
lret
int3
jp
push
mov
dec
adc
mov
jns
iret
or
popa
and
add
dec
hlt
inc
xor
mov
mov
aam
mov
test
aas
repnz
xor
movsb
and
enter
int3
gs
aad
and
xchg
push
es
push
lretw
and
lahf
jbe
cmpsl
aad
xor
inc
inc
jecxz
stos
mov
mov
lods
jae
jo
or
shl
jle
and
xchg
leave
addr16
pushf
sbb
push
adc
mov
cmp
int
sbb
xor
xor
out
fucomip
adc
xchg
mov
add
jmp
xchg
mov
mov
dec
dec
popa
pop
ror
sbb
outsl
testl
and
ss
xchg
lods
arpl
rdpmc
insb
push
mov
scas
xchg
daa
fmulp
sub
ret
push
or
xor
iret
in
jge
or
std
addr16
xor
repz
mov
sti
cmpb
mov
adc
inc
sbb
inc
mov
es
in
or
test
lds
sub
mov
inc
in
jnp
cmp
dec
xchg
xchg
ja
lret
jo
and
fcmovbe
mov
std
adc
mov
stc
push
pop
shrl
pop
adc
lret
push
idiv
loopne
jl
or
fldl
mov
xchg
fdivrs
inc
int
js
clc
or
in
push
xchg
jl
xchg
add
lahf
iret
add
mov
sahf
inc
fimuls
inc
incl
push
sub
xor
leave
mov
movsl
push
outsl
or
xchg
ret
or
test
sbbb
cmp
jge
sub
inc
sti
jns
xchg
test
int
leave
out
pop
push
jl
sarb
sub
mov
lret
jno
popa
fsubs
ret
aaa
push
cmpsl
xor
push
and
and
loopne
movsl
outsl
stc
xor
inc
mov
or
cmc
out
xlat
aaa
movsl
and
into
inc
adc
icebp
and
push
bound
int
or
aaa
scas
add
aaa
cmp
stos
or
xchg
movsl
and
mov
test
mov
faddp
jg
cld
mov
je
or
shlb
out
loop
jmp
mov
addr16
push
push
scas
xor
loopne
xor
and
das
pop
fidivrl
es
lret
mov
outsb
aam
into
push
jnp
jp
and
sbbb
aaa
gs
jno
inc
adc
dec
loop
mov
jns
mov
sub
jecxz
sub
and
fdivrl
and
into
mov
fnstsw
add
push
push
inc
addl
popa
aam
repnz
xchg
stos
cmc
pop
xor
in
outsb
jge
sbb
jmp
ljmp
les
jae
sub
rol
in
or
dec
cmp
hlt
bound
ja
lock
daa
xchg
sbb
push
popa
xor
adc
rol
sarb
push
rcll
push
aas
leave
jecxz
daa
jg
jbe
sbb
int3
pusha
ret
add
andb
mov
lds
xchg
jno
adc
jp
xchg
in
das
mov
mov
aaa
add
push
sub
xchg
mov
repnz
insl
lock
adc
lds
repz
mov
pop
movsl
hlt
fwait
arpl
push
std
jae
xchg
lahf
push
push
and
shrb
or
adc
mov
stos
fstp
mov
dec
fwait
lcall
mov
je
lods
ss
movsb
andl
push
sahf
fsubrs
lcall
fs
jge
testl
xor
movsb
aam
dec
sahf
ss
ficoms
dec
fisttpll
and
ffreep
push
ljmp
dec
stos
test
add
pop
push
jecxz
gs
sub
mov
ds
push
cmp
mov
loop
inc
lods
xchg
jbe
add
fs
stos
rcll
pop
mov
clc
enter
bound
repz
pop
mov
rorb
sbb
rclb
push
mov
sub
mov
dec
popf
aad
jnp
push
and
jecxz
fldl2t
into
and
inc
int3
mov
push
or
cmpsl
fiadds
scas
and
popa
movsb
pop
out
push
ds
les
mov
outsl
pusha
cwtl
adc
loope
ljmp
outsb
mov
or
je
push
fwait
jge
int3
jns
fistpl
lret
iret
test
add
push
in
cs
sbb
inc
fldt
push
mov
ja
fists
push
adc
or
push
xor
mov
ss
movsl
cmp
enter
jg
sbb
cli
out
xor
jo
push
fstpl
cmpsb
subb
push
lods
ljmp
jl
std
sarl
movsb
mov
cmp
mov
out
dec
cmp
pop
cli
fwait
sub
ret
iret
jae
xchg
repz
cltd
test
pop
psrld
fistps
ss
pushf
pusha
pop
lock
jo
sbb
jp
int
daa
aaa
mov
es
ret
jl
or
dec
outsl
mov
popa
popf
repz
dec
cltd
dec
clc
in
ret
dec
mov
xchg
push
ficomps
iret
pop
test
ret
lcall
test
mov
dec
je
push
ficomps
or
icebp
in
sar
cmp
fldenv
sub
cmpsb
sti
mov
xor
and
push
shlb
jmp
iret
xlat
adcb
stos
jno
and
xor
scas
int3
mov
xor
test
test
in
push
pop
sahf
mov
jnp
adcl
push
add
stc
inc
adc
gs
mov
je
mulb
je
ret
or
mov
xchg
inc
in
movsl
and
outsb
xchg
sbb
or
jl
icebp
out
pushf
dec
cli
add
mov
out
mov
jb
cwtl
pusha
inc
dec
add
scas
shrl
add
xchg
sub
xor
mov
and
mov
dec
mov
adc
subl
add
or
mov
orl
inc
pop
xchg
or
pop
inc
jg
mov
lods
add
outsb
push
sub
and
push
lret
test
imul
jecxz
push
in
jo
popa
insl
mov
pop
sti
lds
push
push
jmp
inc
jmp
mov
repnz
and
and
fdivl
jbe
leave
push
mov
sahf
or
inc
mov
pusha
leave
push
iret
cmp
jne
sbb
pop
mov
loopne
popf
fimuls
fcoml
popl
testb
pop
push
push
inc
les
mov
gs
xchg
fldenv
sahf
addr16
leave
pusha
xor
sub
in
leave
enter
dec
stos
cmp
lock
push
gs
rolb
fnstcw
movsb
mov
adc
mov
adc
notb
mov
loop
cmp
cld
call
sbb
inc
dec
hlt
xchg
addr16
or
lods
cmp
pop
pop
and
jmp
xor
outsb
mov
xchg
leave
xor
push
jbe
fwait
dec
inc
or
cmpl
call
lods
dec
fcomi
les
mov
mov
dec
and
enter
aaa
xchg
jecxz
cli
das
jg
fldenv
jl
or
pop
mov
adc
dec
in
xchg
cmc
pop
daa
mov
fcomp
or
cmpsb
mov
and
sub
addr16
popf
cmp
out
pop
sbb
jmp
fisttps
mov
in
inc
pop
jnp
repnz
cmp
leave
xchg
mov
ja
repnz
xchg
xor
or
dec
ss
aad
mov
pop
stc
test
sub
xor
push
aad
xchg
mov
xchg
std
fcmovbe
shrl
add
mov
mov
lret
shrb
or
pushf
push
dec
sub
int3
fildll
sahf
push
cmp
dec
pop
test
lods
loopne
xchg
lret
mov
cmpsl
push
sbb
inc
loopne
xor
sub
js
xor
xor
adc
test
rorl
mov
sub
scas
inc
or
outsb
icebp
pushf
inc
test
out
fiaddl
jle
lret
rolb
imul
and
push
add
rcl
fldt
mov
ficoml
pushf
notb
aas
js
xchg
into
add
fidivrl
adc
scas
addr16
sub
dec
sbb
sub
cmpsb
orl
sbbl
jle
push
sub
rcrb
scas
mov
mov
cmc
out
or
jb
into
ja
xlat
pop
cmpb
int3
sahf
cs
jnp
dec
sbb
jbe
add
inc
add
cli
xor
fildll
cwtl
xchg
ds
and
sbbl
add
nop
cs
sahf
sbb
es
xor
cmpsl
popf
add
jbe
mov
int3
popa
sar
jae
pop
sbb
jne
mov
jnp
rorb
mov
cs
jo
xchg
jle
inc
mov
ret
add
or
mov
push
jo
les
add
xlat
clc
cwtl
cmp
mov
xchg
arpl
ss
cmp
lock
hlt
lret
xor
sbb
shr
cmp
push
jnp
cmpsb
adc
aad
cmp
jo
jmp
adc
fnstcw
gs
cld
fcomps
stos
mov
sbb
ljmp
push
test
mov
pop
mov
insl
repz
xor
push
test
mov
sub
add
clc
jmp
mov
add
pop
pop
ja
inc
sbb
ljmp
and
or
pusha
and
xor
lahf
xchg
or
inc
data16
fwait
iret
inc
je
cmp
and
adc
xor
sbb
in
fcoml
test
sarl
push
sub
idivl
inc
aad
stos
pop
leave
loope
push
arpl
sub
ljmp
jb
or
pushl
cmp
pop
jg
addr16
js
pop
cmc
cltd
or
lcall
pop
negl
xor
push
jne
xchg
and
ja
rcll
lock
aam
inc
sbb
xchg
arpl
mov
pop
lock
fsts
outsl
add
mov
or
sbb
mov
fcoms
add
fistps
pop
cli
adc
xor
sbb
push
push
mov
pop
cmpsl
outsl
sub
repnz
inc
popl
jmp
mov
jb
lahf
fwait
loop
sub
push
scas
or
jne
idivb
nop
das
xchg
bound
jle
cmpl
sub
push
dec
pop
lock
loope
push
mov
or
pop
mov
dec
xor
enter
adc
cld
loop
jle
cwtl
mov
mov
adc
add
test
clc
cmc
mov
dec
enter
xorl
inc
push
push
mov
sub
ljmp
addb
out
inc
outsb
andl
in
jbe
lods
inc
mov
add
decl
sbb
xchg
jno
repnz
push
stos
jae
mov
add
xchg
mov
fsub
ret
imul
es
or
xchg
in
fistpll
mov
addr16
cld
call
je
pushf
mov
xor
cmp
push
cld
movsl
xchg
adc
and
shlb
repz
xchg
pop
sbb
push
inc
xlat
dec
adc
arpl
push
aad
or
mov
push
xchg
sarb
dec
or
cmp
stos
and
cmp
adc
or
in
arpl
scas
push
and
and
rclb
xchg
xchg
cmp
cmp
int
in
and
pop
mov
jecxz
aad
shl
pushf
aas
movsl
jnp
sahf
xchg
xchg
sub
and
das
test
push
insb
add
imul
xchg
inc
and
addb
aam
inc
pop
enter
out
and
cmpsb
xorl
mov
push
inc
dec
mov
ret
or
mov
lds
inc
xchg
dec
and
enter
test
add
push
jp
inc
push
outsl
repz
loope
push
call
pop
pop
sub
pop
mov
dec
jne
and
inc
xorb
lods
inc
mov
dec
rorl
add
jbe
or
sub
ss
in
sub
daa
dec
jb
sti
sub
adc
cmpsl
inc
into
pop
mov
or
lcall
mov
popa
fadd
inc
xor
sbb
jne
ds
sub
xlat
sarb
jg
xor
out
xchg
pop
iret
addb
mov
fsts
and
or
ret
into
adc
jl
xchg
dec
into
mov
lcall
enter
hlt
inc
mov
aam
push
test
arpl
push
stc
pop
dec
push
sub
mov
mov
into
jns
dec
lock
sub
xor
sbb
cltd
lret
daa
aam
dec
out
adc
idivb
xchg
and
mov
push
sub
nop
add
inc
daa
lea
xlat
shll
pusha
adc
fsubr
dec
xchg
jnp
lods
jns
loopne
mov
fwait
dec
pop
sbb
or
pusha
mov
ss
mov
mov
mov
add
scas
add
mov
sahf
adc
stos
fiaddl
js
loopne
pop
lds
mov
ficoml
cmp
loop
or
xor
jns
sbb
scas
add
shrl
inc
sub
xchg
dec
or
mov
sbb
add
and
arpl
mov
fs
adc
adc
jmp
inc
ret
and
push
stc
xor
or
adc
jecxz
add
and
addr16
loope
scas
lret
add
mov
cltd
or
mov
dec
inc
shl
ret
fdivrl
dec
mov
cli
push
scas
sarb
aad
das
jnp
xchg
add
fsubl
or
imul
sahf
jo
insb
aaa
dec
pop
jb
sub
es
sbb
mov
js
cmp
push
or
shlb
loopne
add
dec
lcall
push
inc
push
pop
or
mov
clc
jbe
mov
icebp
lcall
loopne
inc
xchg
adc
inc
dec
xor
jmp
dec
xor
stos
or
jbe
jbe
cmp
aaa
test
out
stos
pop
test
xor
inc
inc
dec
outsb
xorl
dec
push
mov
in
inc
push
repz
sbb
mov
test
cmpsb
outsb
test
pushf
inc
lods
mov
mov
cmpsl
test
sbb
js
lock
sbb
push
xchg
out
sbb
adc
movsl
mov
sbb
xor
jne
cwtl
mov
or
popl
push
push
imul
add
dec
adc
xor
int
mov
dec
sub
loopne
addl
sti
mov
xchg
and
jge
popf
je
data16
lcall
pop
pop
add
and
add
into
inc
mov
xor
and
inc
pop
dec
cmp
adc
sub
aaa
jo
add
call
pop
hlt
neg
mov
imul
loop
sub
mov
out
jb
add
cmpsb
ret
xchg
push
jp
xor
xor
pop
adc
clc
shlb
push
mov
ljmp
shld
movsl
addr16
pop
jb
add
fwait
psraw
push
ss
fmuls
outsb
push
cs
dec
cld
push
sbb
icebp
pop
mov
mov
sbb
push
mov
mov
inc
sbb
inc
push
xor
popa
bound
addr16
mov
mov
movsb
add
add
pop
mov
xor
jl
lahf
or
aaa
mov
movsb
xchg
or
loop
shlb
imul
add
mov
lock
adc
pushf
cwtl
mov
test
xor
jmp
roll
sbb
in
aas
jmp
arpl
addb
and
aam
fcmovnu
aas
test
loopne
out
xor
xchg
push
in
xchg
add
push
xchg
adc
cmpsl
in
adc
int3
mov
sar
adc
test
mov
sbb
addps
hlt
rcrb
ret
and
popa
and
push
rcrb
push
mov
outsb
push
movsl
dec
cltd
ficomps
lahf
subl
sub
lock
xor
test
dec
cmpsb
clc
cmp
push
mov
jl
or
cs
sbb
shr
inc
adc
movsb
loopne
pop
pushf
sti
add
imul
pusha
pop
in
testl
mov
mov
ficoml
dec
jp
cmp
push
addr16
lret
fucompp
lret
mov
inc
push
xchg
shll
push
fistpl
shlb
test
jo
dec
out
push
movsl
dec
testl
pop
leave
mov
lods
cmpsl
inc
cld
dec
stos
and
dec
xchg
shll
scas
lret
das
push
cmp
pop
arpl
adc
pop
and
fldenv
cmp
test
adc
xchg
repnz
pop
jg
xor
gs
adc
fistl
mov
push
mov
loopne
bound
out
mov
xlat
dec
xchg
jbe
ja
roll
bound
mov
xor
add
out
jle
fisttpl
cmp
push
lea
mov
call
jg
movsl
lods
add
pop
rorb
int
cmc
inc
xor
and
mov
jge
sub
aad
inc
xor
xchg
ret
daa
inc
lcall
stos
popa
lret
sub
cmp
test
das
or
xor
xchg
movsb
popa
stos
add
int
shlb
cmpb
dec
or
and
jb
movsb
add
mov
or
aam
xchg
test
aaa
sti
jmp
ja
push
shlb
adcl
pop
push
outsl
enter
inc
add
fcom
testl
ret
lret
xchg
divl
pop
fs
dec
jmp
out
icebp
cltd
or
fcmovnb
addr16
xor
fisubrl
adc
push
cltd
mov
stos
out
aad
inc
lock
xor
lahf
cmp
leave
lods
imul
in
ucomiss
hlt
stos
je
inc
sbb
jbe
cmp
mov
mov
mov
and
xchg
or
push
jnp
ss
fwait
sub
je
xor
hlt
out
pop
out
xor
xchg
addl
adc
es
mov
in
scas
enter
mov
imul
sbb
jb
shll
mov
jns
jb
js
cmc
mov
inc
mov
shll
sub
icebp
clc
js
xor
and
push
and
movsb
push
ret
or
shrl
xchg
or
sub
inc
jl
std
ret
mov
movsb
rorl
xor
insl
clc
xchg
jp
push
adc
arpl
cmpb
jb
adc
mov
pop
subl
lods
or
imul
cmpsl
aad
es
push
out
mov
jno
sub
aam
shlb
inc
xor
insl
shrb
lcall
das
insb
cmp
pop
push
out
jg
adc
shll
movsl
mov
adc
pop
icebp
out
stos
cmc
mov
jnp
out
sahf
or
adc
data16
push
fisubrl
roll
cmpsb
inc
sub
dec
mov
bound
mov
dec
out
add
insl
push
dec
aad
jb
push
pusha
mov
or
xor
leave
imul
push
fbstp
lods
or
popa
mov
and
mov
xchg
inc
cmpsb
push
mov
fwait
shl
ljmp
adc
outsl
or
push
sbb
mov
rcrl
and
pop
cmpl
dec
mov
dec
sarb
push
xchg
xchg
xor
mov
add
fbstp
push
mov
dec
push
fidivrl
mov
mov
xchg
or
std
popa
pop
sbb
xor
mov
loope
add
idivb
test
jb
add
and
push
cmp
insb
sahf
mov
pop
fs
in
jns
add
lds
imul
dec
ss
xor
push
mov
nop
sbb
mov
movsl
int3
ljmp
fwait
cmpsl
mov
bswap
sahf
sub
mov
inc
xchg
leave
and
mov
pop
inc
push
xchg
or
das
shll
out
push
fiadds
lahf
fidivrs
fsubrl
xor
fidivl
push
sub
hlt
xor
adc
addr16
out
jns
cmp
outsb
sub
pushf
add
push
mov
sti
lods
adc
pop
mov
xchg
mov
sbb
pusha
push
cmp
aad
xor
add
inc
push
mov
fistpll
scas
or
cmpsl
xchg
sbb
cwtl
xchg
cmpsb
add
jb
cmpsl
stc
sub
data16
xor
xorl
mov
pushf
mov
int
dec
das
cmp
adc
lahf
imul
sub
jnp
cmpsl
into
into
mov
ficomps
jns
sub
xor
arpl
jb
mov
jge
push
test
jl
mov
mov
pop
mov
and
pop
popf
outsl
push
sub
lcall
je
xor
outsb
pop
or
mov
pop
testl
xchg
insl
adc
adc
in
arpl
cld
push
mov
cmp
mov
cmpsb
lcall
and
rcr
xchg
loope
aaa
add
xchg
jb
jbe
shlb
out
jne
jbe
mov
pop
push
sub
int
sub
mov
ret
push
xchg
pop
jge
and
loope
fmull
or
or
neg
lods
ret
insb
and
fldt
lcall
pop
cmp
aaa
jnp
outsb
pop
dec
and
jbe
ss
push
iret
cmp
or
das
mov
ret
cmp
cmp
outsb
fnstsw
or
mov
push
cmc
or
incb
std
orl
push
cmpsb
jge
in
test
in
into
inc
imul
std
dec
addr16
cmpsb
mov
movsl
je
sub
cmp
pop
clc
jle
jp
jae
in
pop
lcall
adc
insl
ja
jo
mov
xor
mov
lcall
xchg
xor
je
push
dec
sbb
inc
inc
ljmp
and
and
mov
jnp
shrl
sub
inc
sub
jb
scas
xchg
inc
push
loope
mov
push
mov
test
leave
cs
arpl
aas
sub
rolb
pop
mov
cltd
xlat
fs
add
shll
mov
lods
pop
sbb
xchg
test
mov
clc
dec
hlt
aad
and
sahf
cwtl
jbe
xor
sbb
mov
in
push
jae
cmp
lods
cmpsl
test
xor
mov
outsb
cmp
loop
jmp
add
popf
jp
jg
adc
xor
test
jle
adc
cmp
popf
lea
es
jb
pop
aam
mov
cli
pop
enter
xorb
scas
outsb
or
push
lret
jg
pop
in
and
int
and
test
cli
sti
shl
fs
fnstcw
pop
in
jae
push
int3
lcall
ret
adc
dec
inc
sub
rorl
arpl
outsl
jbe
sub
out
popa
inc
andl
out
dec
jae
push
jmp
cli
and
pop
mov
mov
push
sub
clc
fnsave
out
ficoml
shlb
frstpm(287
sbb
daa
pop
jne
add
add
jnp
popf
xor
lret
mov
push
mov
inc
int
mov
and
add
scas
sub
loop
push
movsl
rclb
jl
sub
cmpsl
orb
jno
or
and
lahf
jno
dec
lea
mov
les
mov
test
sarb
loope
scas
jns
incl
mov
dec
sbb
push
xchg
xor
and
ds
aam
jbe
gs
popa
jae
xor
sub
clc
and
sarl
add
cmpsl
mov
mov
xchg
inc
push
xor
es
add
cmp
mov
inc
xchg
cmp
mov
test
dec
mov
sbb
and
push
cmp
in
ret
mov
out
push
fldz
setns
mov
mov
sbb
mov
fs
lods
push
pop
je
mov
cmp
mov
add
xor
add
mov
xor
inc
pop
sub
xor
out
dec
inc
pop
add
rcrl
and
pop
pusha
out
lret
or
mov
aas
repnz
add
cs
in
lods
adc
adcb
mov
mov
aas
mov
fbld
jl
imul
mov
or
inc
out
sub
mov
shlb
mov
sbb
ss
aaa
mov
mov
sahf
mov
decb
or
shl
inc
sti
call
hlt
mov
fwait
cli
inc
adc
sub
xchg
frstor
int3
fwait
inc
orl
pushf
in
add
push
shll
sub
xor
and
xor
aaa
push
inc
xor
xorb
mov
scas
lods
inc
aaa
mov
jbe
push
mov
rcrl
ret
mov
add
and
and
sbb
pop
mov
in
mov
jno
pop
push
mov
xor
shll
inc
mov
dec
neg
fdivrp
or
es
fnsave
mov
arpl
jne
insb
add
xchg
pop
nop
ret
cmp
pop
mov
aas
push
mov
adcb
xchg
xchg
mov
cmp
in
pop
or
orb
mov
xor
and
pop
je
cmp
dec
dec
pop
inc
jg
out
push
ljmp
je
scas
cwtl
clc
mov
clc
int
mov
dec
mov
fchs
mov
adc
sub
adc
nop
mov
iret
or
in
bound
pop
pushf
dec
fldt
add
pop
lds
ret
inc
imul
mov
in
popa
ljmp
xchg
fstpt
push
xlat
stc
and
sti
jns
daa
inc
sar
insl
sub
popf
andl
filds
push
adc
pop
xor
repz
push
cltd
shll
add
into
push
lea
ljmp
jge
js
loope
and
movsb
lods
pop
test
xor
inc
cltd
add
icebp
dec
xor
xlat
xor
xor
repz
mov
mov
dec
iret
daa
inc
pusha
dec
loop
loopne
mov
mov
mov
out
or
pop
int
mov
and
jae
push
lock
cmp
mov
mov
mov
jnp
xlat
pop
xchg
xchg
arpl
adc
jbe
aas
pop
dec
pusha
xchg
and
pop
aad
xchg
inc
push
and
dec
das
cs
xchg
add
test
inc
dec
stc
jnp
inc
xchg
push
sbb
xor
idivb
rorl
stos
jb
pop
dec
pop
xor
jecxz
jge
lods
aas
push
xchg
or
loop
pop
xor
jecxz
lds
rcr
cmpb
aas
cmp
jmp
aad
mov
or
aam
scas
ficoms
push
repnz
sti
cmovg
push
leave
cmp
orl
loope
mov
data16
jae
lock
je
ja
or
mov
add
cmp
lea
clc
out
xchg
loope
je
shlb
mov
xor
xor
pop
adc
xchg
sbb
jp
inc
xchg
sub
sub
cwtl
and
mov
test
test
adc
lret
mov
mov
add
add
das
nop
fwait
xchg
xchg
movsb
push
jo
xorl
jae
icebp
mov
leave
shr
jecxz
sahf
test
mov
jg
mov
inc
or
ja
adc
sbb
pop
xlat
sub
pop
mov
mov
jb
push
fisttpll
je
cli
or
xchg
ret
int
jecxz
push
fcomps
out
orb
mov
jno
test
gs
inc
sysenter
movsb
aas
js
lods
pop
adc
sahf
pop
or
cmpsb
or
addr16
xor
xchg
adc
cmp
jle
push
xchg
jl
roll
lret
lahf
or
clc
jne
push
and
int3
sahf
lods
lock
and
push
lods
xchg
push
push
jb
rcr
push
addr16
sub
ficoms
sahf
push
pop
sbb
cmp
lds
and
cmp
mov
dec
mov
icebp
push
cmpsl
int3
cmpl
ljmp
jb
jmp
mov
mov
xchg
push
add
out
pop
dec
fdivrs
xchg
outsl
push
push
nop
push
xchg
mov
push
aam
xor
mov
mov
push
pop
aas
arpl
out
repz
push
cld
in
int3
pop
mov
outsl
xlat
mov
jle
fwait
jge
mov
mov
jns
adc
iret
mov
push
aas
mov
push
dec
or
jnp
mov
insb
adc
xchg
adcl
mov
stos
jb
xchg
loop
pop
insl
insb
push
jle
adc
std
mov
out
mov
out
cmc
push
daa
adc
iret
sub
addr16
out
lock
jb
cmpb
adc
pop
jb
jle
mov
and
dec
cmpsl
imul
aad
push
push
pop
mull
out
cwtl
mov
je
sbb
xor
push
add
outsl
jecxz
or
scas
sar
cmc
std
sbb
das
sbb
addb
adc
push
movsl
mov
xor
inc
cld
xchg
fisttps
stos
scas
jbe
fmulp
mov
shr
dec
scas
les
fwait
daa
lret
push
ss
mov
xchg
xor
jecxz
mov
xlat
sti
loop
jge
dec
jl
aaa
clc
adc
fldenv
mov
jl
arpl
pop
lock
jg
push
jl
dec
nop
dec
scas
dec
ja
imul
sub
inc
pop
xor
lret
std
xor
sbb
jb
push
int
imul
stos
mov
cmp
sbb
jo
mov
es
add
inc
cmp
into
mov
mov
mov
in
mov
jb
lock
clc
das
pop
movsl
out
iret
fucomi
repz
sbb
xchg
std
call
sub
cmpl
or
jle
inc
fldt
xchg
imul
lret
mov
fnstcw
cmp
mov
mov
mov
lahf
inc
xchg
in
aaa
lods
mov
mov
loopne
adc
mov
out
and
loope
sub
inc
cld
pop
dec
mov
jle
xor
in
or
inc
dec
or
and
jb
cmpsl
mov
or
pop
aas
cmp
jecxz
dec
repnz
lds
je
addr16
lea
mov
or
xor
jae
imul
popa
sti
andb
subl
enter
mov
movsb
sbb
dec
cmpl
push
lock
or
xorb
jg
fs
andps
dec
mov
fcomp
pop
push
sub
pop
push
je
nop
inc
shll
mull
pop
fwait
adc
xor
and
lods
enter
inc
jp
loop
js
pop
sbbb
fs
sub
sbbb
mov
jecxz
aas
jnp
mov
and
jnp
inc
mov
add
and
and
pop
xor
fs
js
scas
repnz
mov
and
add
aaa
push
rcrb
mov
inc
outsl
cmp
popa
inc
pop
mov
notb
fwait
inc
xor
cld
test
subb
mov
outsb
outsb
mov
cwtl
cmc
aas
in
pushf
fldcw
and
cmp
xchg
sub
sbb
or
xchg
lods
frstor
sub
pop
push
mov
mov
sbb
pop
lds
push
std
mov
insb
jb
dec
push
mov
dec
lods
xchg
jmp
ja
inc
dec
push
incb
test
int3
cmp
jg
call
aam
mov
js
das
push
les
and
lret
jne
cltd
ret
inc
ror
inc
addb
xchg
sub
xchg
and
leave
std
out
test
jo
sahf
mov
dec
adcl
shrl
push
sub
ret
push
mov
mov
pop
or
sbb
mov
pop
adc
dec
test
or
inc
popa
testb
ds
ss
jbe
or
mov
dec
pop
and
rorb
pop
leave
je
movsb
outsl
inc
push
nop
xor
insb
hlt
sbb
and
fiaddl
stos
or
sbb
cmp
adc
cmpb
mov
sbb
dec
xchg
lods
dec
sub
sbb
mov
movsl
aaa
mov
aaa
pop
push
cmpb
std
roll
inc
and
ret
xchg
jp
adc
ret
fnstsw
mov
ret
cs
mov
pop
pop
imull
jbe
fcoms
out
movsb
mov
fldt
test
and
pop
or
fadds
mov
mov
push
dec
loopne
je
aaa
aaa
cmp
jmp
dec
and
xchg
imul
test
mov
nopl
roll
mov
incb
sub
push
leave
adc
shll
pop
push
lds
int3
arpl
loop
mov
mov
sub
pop
xor
popa
movsl
popl
into
jno
sbb
inc
or
jbe
das
roll
pop
xor
adc
lret
cmp
frstor
dec
je
push
push
cltd
adc
add
add
sbbl
inc
imul
dec
fdivs
mov
dec
sub
push
mov
add
inc
pop
cli
pop
mov
std
or
and
push
arpl
xchg
dec
gs
insl
test
inc
repnz
xchg
lea
aad
jl
dec
adc
bound
adc
dec
ret
data16
ja
jp
sar
ret
sub
or
cmp
jae
repnz
fisubl
clc
fwait
aam
cltd
les
cmp
jp
jb
dec
push
mov
inc
imul
fcmovb
cmp
adc
lahf
xor
pop
ja
adc
pop
popf
decb
fwait
xchg
add
rcrb
test
pusha
pop
sbb
pop
sbb
push
and
or
sub
xor
cli
cmp
push
cvttps2pi
dec
add
shll
sbb
imul
add
xchg
xlat
inc
cmp
xor
js
ret
cwtl
subb
into
rcl
fstps
cmpsb
outsl
daa
xlat
call
mov
cmp
call
call
cmp
inc
lret
xor
rcl
popl
xchg
into
stc
or
xor
cwtl
in
mov
xchg
xchg
adc
sub
test
jo
nop
out
pop
add
cli
ret
fstpt
jmp
mov
jp
dec
movsb
mov
mov
sbb
leave
test
xor
pop
ror
xorl
mov
lods
xlat
shlb
ds
xchg
xchg
ret
xlat
jl
cwtl
hlt
rorl
sub
push
pop
adc
out
cmp
and
or
fldenv
mov
or
mov
addr16
sub
fisttpll
cmp
out
push
sbb
rcr
stos
rclb
mov
bound
fcomi
sbb
incb
push
and
add
sub
xor
out
call
aad
mov
jo
jnp
adc
movl
push
and
xor
inc
jge
leave
popa
adc
out
aam
popa
jmp
data16
jne
jo
lahf
jnp,pn
push
fsubp
test
icebp
sahf
mov
mov
push
mov
and
jle
cmpb
and
xchg
and
stc
lahf
bound
or
loope
mov
jl
mov
sbb
pop
add
xchg
movsb
out
cmp
aad
movsl
mov
sbb
lret
rorl
pop
fsubl
sti
mov
loop
call
ss
lahf
inc
stos
push
or
jae
shll
add
xlat
add
pop
pop
and
pop
int3
scas
add
inc
pop
jle
or
dec
inc
xchg
js
lods
adc
mov
cmpsl
xor
mov
test
mov
cs
js
xchg
jg
adc
lret
mov
rorl
cmp
fnstcw
shll
push
cmp
or
xchg
ret
int
aaa
or
adc
jle
mov
xchg
insb
mov
xor
push
adc
mov
inc
lea
pop
loopne
test
inc
fdivs
dec
imul
fs
popf
adc
arpl
sbb
mov
or
sub
popf
add
pop
in
scas
mov
popa
lahf
mov
push
daa
xchg
push
jl
adc
in
mov
lods
pop
mov
pop
sub
fwait
leave
mov
inc
cmp
mov
xchg
sbb
xchg
mov
fwait
sub
jmp
jecxz
std
cmc
pop
in
fcoml
out
insl
movsb
hlt
inc
or
mov
sbb
push
push
test
mov
jbe
js
imul
daa
xor
push
into
and
insb
stos
jmp
aad
sub
nop
cmp
xor
lcall
push
ds
adc
jg
adc
mov
in
gs
repnz
xchg
xchg
stos
xchg
push
fcompl
inc
fstps
xor
mov
scas
push
popa
pop
jns
mov
lcall
sbb
and
jo
mov
lock
test
lds
jge
in
and
ror
jns
repz
repnz
inc
ret
test
bound
sub
fiaddl
ss
push
mov
mov
push
pop
add
mov
add
adc
out
stc
mov
leave
inc
icebp
stos
call
cmp
movsl
movl
or
enter
xchg
lret
mov
bound
aam
cmp
decl
cld
add
lds
mov
pusha
enter
fs
enter
fnstenv
inc
inc
mov
mov
jecxz
and
sbb
cmpsb
lahf
xchg
push
jb
jae
mov
jl
dec
cltd
xchg
adc
lock
pop
ja
rcr
les
fbld
mov
lds
dec
mov
enter
sbb
and
ret
mov
sub
inc
imul
pop
dec
lret
or
dec
push
cmp
int3
xor
cmp
sbb
mov
out
mov
xchg
inc
int3
sarl
mov
pop
sbb
add
aas
sbb
dec
mov
xchg
lret
jl
icebp
sarb
les
in
outsb
imul
jns
mov
test
test
sbb
pop
and
test
xlat
fildll
jmp
jge
push
andb
cmp
aam
lret
mov
adc
push
sbb
adc
sbb
cs
pushf
loopne
or
scas
mov
add
jecxz
jmp
loope
lret
jnp
xchg
cmc
rolb
sar
xchg
ja
xor
push
cs
and
push
xchg
dec
int
xor
shll
outsb
loop
push
xchg
push
jb
lahf
push
enter
xchg
xor
sub
push
iret
repnz
addr16
mov
add
fbstp
cmp
aad
mov
adc
sbb
jg
jo
add
mov
push
sbb
sub
cmovno
mov
outsb
mov
test
jp
fwait
stc
test
out
pop
out
add
or
mov
pop
lock
xor
cmp
push
cs
xlat
xor
fidivrs
and
xor
lds
inc
sub
push
add
dec
cmpsb
fists
daa
enter
aad
sub
int3
inc
adc
or
adc
jmp
adc
pop
loopne
imul
mov
push
add
pop
add
xor
push
sub
ret
pop
sub
push
inc
daa
xor
lcall
cmp
sub
xchg
out
dec
inc
sbb
into
test
or
test
nop
add
ror
or
xchg
pop
push
out
mov
ljmp
pop
push
mov
insb
call
and
mov
mov
dec
jnp
clc
bound
insb
xor
sub
ficoml
imul
cs
mov
push
test
fdivp
pop
pop
pop
flds
mov
xchg
ret
mov
dec
call
lods
bound
add
xor
enter
mov
sbb
adc
leave
clc
stos
inc
adcb
mov
fidivrl
imul
hlt
fwait
sbb
inc
mov
gs
testl
cmp
mov
xchg
or
xor
stos
lds
cmp
in
inc
icebp
sub
cmp
push
iret
push
mov
rcll
and
and
pop
inc
push
xor
cltd
cld
mov
adc
xor
shll
in
xchg
jnp
int3
xor
sub
adcl
sbbl
push
xor
out
jnp
mov
jae
adc
outsl
push
or
jp
sub
xchg
adc
mov
pop
and
xor
popf
cmpsl
inc
or
cmp
lods
scas
add
fs
add
dec
cmc
pop
xchg
push
mov
rolb
insl
mov
dec
jle
inc
dec
movsb
aad
test
jge
fadds
mov
jg
inc
adc
fistps
xchg
scas
jmp
sbb
enter
push
cld
inc
xor
ljmp
lret
or
xchg
xchg
mov
out
jae
mov
rclb
mov
push
or
enter
scas
jecxz
cmpsl
loopne
aad
xchg
out
gs
cli
fs
mov
adcl
jmp
sbb
pushl
mov
cmpl
inc
push
lods
mov
imul
add
fdiv
test
test
sub
aad
push
in
mov
sub
push
pop
lods
or
popf
fs
loop
xchg
and
mov
std
icebp
cmp
and
xchg
in
add
jg
dec
pop
sbb
cmp
int3
xchg
fsincos
adc
test
mov
or
je
dec
xor
push
ds
mov
jb
daa
adc
dec
adc
dec
les
jbe
jecxz
push
mov
jno
inc
into
rol
test
dec
inc
enter
mov
icebp
aas
push
jb
jmp
andl
cmpsl
in
lcall
ret
fldcw
add
adc
dec
loop
ds
sub
xor
std
out
jae
adcb
push
push
js
xchg
dec
push
or
xchg
pop
xchg
dec
pop
sbb
inc
ljmp
mov
repnz
addb
push
in
sbb
cmpsb
ss
in
xchg
icebp
adc
mov
insb
pop
loope
push
xchg
mov
push
bnd
fists
mov
scas
daa
cmpl
test
outsl
adc
jmp
lods
xchg
out
jp
lds
add
adc
lods
mov
imulb
push
orb
xchg
mov
mov
jno
aas
or
cld
push
push
stc
or
pop
mov
or
jno
je
addl
lods
adc
cld
iret
arpl
mov
mov
push
aam
es
mov
lcall
les
enter
test
popf
xor
adc
scas
mov
stos
cmc
out
pop
mov
jmp
arpl
idiv
aas
cli
loop
xchg
iret
inc
dec
or
clc
jne
mov
icebp
and
pop
jge
pop
mov
jl
mov
xchg
in
mov
testb
loope
ret
stos
popf
movsb
lret
mov
mov
aad
lea
jecxz
clc
jne
andb
test
pop
jmp
jbe
mov
gs
das
clc
xchg
add
mov
adc
int
ret
je
movsb
lock
stos
out
or
sbb
jecxz
mov
insb
test
mov
les
pop
stos
adc
push
add
enter
cmpsl
push
outsb
std
fwait
adc
adc
ret
pop
popf
cs
sub
outsb
std
es
repz
cmpsl
lock
push
jns
jns
sarb
mov
mov
std
cmc
cmp
push
dec
nop
sub
pop
mov
dec
out
push
jp
mov
insl
add
ret
sbb
pop
mov
in
ret
sbb
pop
bound
loopne
mov
clc
subb
cmpsb
fdivrl
movsl
adc
test
mov
and
movsl
dec
mov
daa
cmp
xchg
lahf
xor
jns
sbb
mov
and
movsb
mov
jb
mov
das
neg
and
jno
adc
jae
mov
push
dec
gs
stos
lock
insb
xchg
sub
pop
std
inc
inc
cmc
dec
repnz
jge
int
in
mov
xor
jns
pop
ss
into
push
mov
and
aam
dec
lods
lea
enter
and
pushf
or
cmp
out
dec
jbe
cmp
aaa
pop
sti
and
jnp
jo
loopne
sahf
rcr
mov
insb
jmp
aam
lea
cmp
rep
sbb
pop
outsl
push
mov
aam
scas
mov
inc
mov
ljmp
pop
mov
push
or
xor
ss
fmulp
imul
loopne
xchg
es
add
rcr
dec
fmuls
lret
pop
filds
sub
mov
mov
jmp
mov
repz
sbb
leave
test
jae
mov
addb
pop
in
aad
outsl
ds
mov
addb
sbb
ret
pop
loope
mov
jg
rclb
sub
mov
jmp
xchg
mov
movsb
aam
das
adc
mul
dec
test
movsl
dec
fstpl
adc
sbb
mov
fwait
mov
scas
cmp
cmpsl
ret
lods
ss
loopne
test
adc
loopne
dec
jle
rcr
xchg
inc
js
pop
pusha
jae
pushf
leave
dec
test
add
mov
lea
jp
inc
mov
jecxz
pop
or
or
cmpsb
sbb
and
push
lock
sbb
rcrl
and
dec
test
dec
inc
pop
int
fs
clc
int
sbb
popa
xor
dec
into
or
dec
jb
lret
stos
in
movsb
xor
dec
int
aaa
repnz
jmp
int3
adc
xchg
rcl
mov
inc
rorl
lcall
dec
push
mov
imul
fcoml
lds
mov
ljmp
mov
sub
lock
lods
repnz
cwtl
cmp
mov
sbb
xor
push
adc
sarl
popf
or
adc
push
in
mov
aas
pop
out
ficoms
mov
pushf
sub
rcl
loop
rcll
pop
fsubrl
jg
sbb
es
in
jp
jle
adc
cmp
bound
pop
imul
cmpsl
mov
out
mov
sub
xchg
test
adc
hlt
out
dec
int3
inc
cli
outsb
and
outsl
lcall
push
mov
insl
bound
add
sub
test
imul
cmpsb
mov
call
ss
cmp
nop
push
jg
ftst
sbb
push
sub
cmp
xor
shrb
ds
cmp
sbbb
ljmp
xor
lods
sub
mov
mov
insl
es
xor
dec
enter
repnz
push
movsl
jecxz
sub
sub
fidivl
mov
jns
xor
aaa
mov
push
mov
jne
xchg
sahf
fcoms
jbe
adc
xchg
or
xor
and
mov
jecxz
test
xchg
ljmp
mov
clc
imul
jb
xlat
push
push
mov
add
push
sbb
daa
mov
pop
lret
mov
adc
cmp
jmp
pop
dec
fsubrl
in
mov
mov
adc
xorb
jmp
mov
mov
cmc
add
pusha
int
add
icebp
clc
popl
jnp
subl
push
ss
lods
xor
popa
sub
iret
out
sub
cmc
in
add
out
xlat
dec
mov
jmp
pop
lcall
sub
setns
dec
pushf
jecxz
addr16
outsl
ror
in
iret
mov
aaa
subb
sbb
pop
movsl
add
dec
jg
test
adc
mov
or
inc
sub
mov
jb
or
inc
repz
xor
enter
outsb
loop
shl
daa
ret
jns
pushf
push
mov
xor
inc
inc
in
add
jne
orl
inc
and
cmp
sub
adc
push
inc
movsl
mov
lahf
cwtl
jne
nop
xor
out
xor
inc
push
out
in
divb
mov
test
and
jmp
inc
push
mov
test
and
test
je
es
pop
pop
rol
mov
out
xor
xchg
orl
lods
loope
sub
je
out
iret
mov
push
fsubrs
xor
pop
push
or
add
mov
inc
xor
in
fsts
loope
cmpsb
lret
sahf
cmc
addr16
jmp
in
push
add
in
sbb
sarl
cs
and
inc
mov
add
mov
orl
mov
fldcw
dec
cmp
fistpll
and
cld
test
push
push
sub
sti
push
or
shlb
push
cmc
pop
out
fcomi
mov
push
mov
ljmp
rcrl
data16
notb
push
das
dec
aas
es
jecxz
xchg
xor
loopne
jmp
enter
icebp
cwtl
inc
cmp
sarl
mov
rclb
movsl
cli
js
in
cmp
lret
jmp
jecxz
lcall
outsb
int3
imull
jb
inc
inc
das
cmp
dec
sub
sub
sbb
xchg
es
jl
jl
loop
das
aas
pop
imul
fwait
push
sbb
and
mov
sub
movsl
stos
insb
imul
sahf
lahf
out
shrl
cmp
in
out
in
cmp
pusha
mov
imul
not
popa
es
insb
fildll
jb
stos
popf
or
push
push
push
insb
stos
mov
sub
inc
adc
xchg
xlat
mov
mov
xor
iret
stos
call
dec
mov
inc
xor
and
stc
shll
mov
out
rol
les
rorl
dec
shl
outsl
mov
and
int3
je
loop
pop
mov
jae
stos
fwait
int
repz
xchg
cmpl
mov
rcrb
es
fldcw
push
sbb
dec
xchg
jno
iret
push
rclb
xor
mov
mov
adc
insl
aad
ljmp
xor
pop
filds
or
in
rclb
cwtl
cmp
mov
fildl
jmp
pop
jl
jl
lcall
add
sahf
and
jmp
dec
sbb
out
movsl
dec
mov
mov
bound
nop
std
or
push
shll
lahf
xchg
gs
shll
outsl
cmp
sbb
mov
push
out
sbb
xchg
push
pop
mov
sbb
sub
mov
mov
std
negb
fidivrs
mov
fadd
arpl
push
cld
ret
popa
sahf
pop
pop
into
jle
pop
ss
lcall
sub
mov
xchg
lods
sbb
icebp
cwtl
mov
mov
push
push
pop
rolb
fcompl
sub
icebp
in
sub
iret
andb
cmp
pushf
sbb
mulb
shll
ljmp
adc
cmp
ja
js
dec
mov
jne
insb
add
rcr
fdivrl
pop
cmpsb
fbld
and
pop
xchg
movsl
jle
es
in
push
inc
pop
fcmovnbe
jbe
aas
sub
popf
lods
jmp
iret
pop
out
sbb
jle
jo
adc
or
stos
mov
push
loop
jae
insl
push
pusha
push
add
ja
sub
pop
daa
vcvttss2si
sti
roll
stos
cli
in
in
xor
push
nop
push
inc
stos
mov
out
fwait
rcr
push
leave
lds
fildll
pop
mov
mov
adc
int3
xchg
inc
jecxz
inc
inc
mov
pop
fwait
ds
jecxz
jno
adc
test
pop
mov
into
mov
aaa
fwait
push
stos
mov
and
sbb
mov
stos
shll
xor
out
push
mov
cli
inc
and
fimull
in
sahf
inc
pop
rcrb
push
and
popa
std
les
xor
fs
clc
call
adc
lock
ds
dec
pusha
divb
pop
loope
std
or
sbb
sbb
loopne
fisubrl
xor
pop
xchg
and
repnz
mov
loope
push
imul
xchg
les
pop
or
bound
ss
outsb
inc
popa
jle
ljmp
xchg
insb
bound
lcall
fisubs
mov
test
dec
sub
adc
out
xor
inc
sub
jmp
adc
inc
loop
mov
jbe
aam
rcrl
fisubrl
fisubl
xchg
push
jnp
jb
mov
jo
test
lahf
cwtl
ret
in
xchg
lcall
test
inc
cmpsl
pop
add
push
cmp
int
loop
js
push
sbb
push
jne
or
call
or
repnz
pusha
dec
lret
neg
aaa
imul
and
mov
inc
rclb
xchg
add
pop
mov
mov
lret
jp
and
mov
pop
iret
sub
and
sbb
stos
mov
mov
hlt
mov
pop
testb
stos
xchg
pop
push
movsb
mov
cmpsb
cs
addr16
rcrl
jmp
repz
inc
int3
or
inc
das
cmp
sbb
ret
pop
arpl
jle
add
lock
sbb
inc
mov
lret
jmp
ja
xor
stc
ja
adcb
clc
in
cld
addr16
jnp
add
aaa
jge
jmp
ss
ficoml
dec
scas
gs
jp
xor
shrd
enter
pop
mov
mov
nop
xchg
pop
insb
roll
xor
and
xchg
dec
xchg
mov
stc
movsb
xor
inc
loopne
nopl
shlb
mov
mov
mov
or
in
sti
push
push
fnstenv
pop
mov
ret
adc
insb
aam
lods
orl
cli
push
dec
ljmp
repnz
cmp
push
int3
cmpl
jmp
adc
in
scas
mov
sub
inc
xchg
int
mov
cmp
pop
in
fmuls
adc
lret
iret
test
mov
jns
add
fs
mov
mov
in
mov
mov
push
lahf
inc
dec
jb
push
mov
repnz
jge
lock
cltd
xor
sub
push
in
out
shrb
rorb
or
or
inc
int3
stos
stos
jbe
xchg
cmp
jo
inc
out
test
insl
das
int
push
fnstcw
mov
ret
add
shr
pop
sti
jp
dec
in
lds
lret
rcrl
xor
bnd
je
stos
pop
pop
jg
andb
or
mov
push
add
lret
push
xchg
mov
cld
out
sbb
pop
pop
lock
lods
pop
in
cmp
sbb
es
jnp
mov
out
addr16
sub
xchg
cmpsb
mov
mov
push
pop
adc
shrb
sub
mov
imul
cld
push
cmp
es
fists
mov
inc
outsl
mov
ss
xor
mov
and
xchg
inc
inc
jecxz
aaa
subl
cli
adc
int
in
cmp
test
sarb
clc
roll
dec
adc
mov
push
mov
rcr
mov
lret
bound
fwait
sbb
fiaddl
push
push
loop
mov
jg
imul
jl
shlb
lahf
mov
test
inc
sub
scas
loopne
jne
pushf
pop
jecxz
lcall
fs
jne,pt
mov
in
mov
pop
cltd
std
je
jge
stos
xor
sub
idivl
push
gs
adc
mov
fisttps
rcr
lods
fstpl
sbbb
add
in
insb
scas
sbb
sub
cli
nop
xor
inc
leave
insb
sbb
imul
add
nop
pop
fs
pop
inc
les
sub
lds
pop
dec
cmp
rorl
cmovl
push
nop
pop
inc
push
xchg
fisubrs
jg
push
and
fidivrs
push
sub
roll
je
cmp
mov
ficoms
mov
push
jp
sub
push
sbb
adc
mov
jne
lock
pop
mov
mov
adc
rcl
xor
inc
jno
dec
or
loope
arpl
rcrl
call
out
test
ret
sub
mov
out
cs
loope
out
xor
movsl
clc
jecxz
sbb
lcall
cli
push
call
xor
jmp
out
fisubl
jns
and
enter
nop
pop
cmpsb
test
repz
ret
out
add
xchg
sbb
push
ja
out
xlat
jae
adcb
orl
push
repz
pop
cmpsb
cld
repnz
bound
outsb
loop
addb
shll
xchg
push
pop
pop
pop
stos
jle
xor
add
dec
push
jb
jb
add
adc
adc
mov
hlt
js
inc
popa
sti
pop
xor
test
cltd
ret
sub
dec
test
mov
enter
cs
pop
cli
sbb
mov
mov
in
sub
fwait
cwtl
xchg
bound
xchg
jae
pushf
adc
in
cmpsw
jecxz
push
sbb
push
call
mov
lods
mov
imul
cmpsl
jge
ja
cli
pop
pop
push
mov
outsb
shlb
cmp
inc
mov
pop
mov
sbb
xchg
test
inc
adc
clc
gs
fwait
jge
sti
out
pop
clc
push
dec
cmp
pop
sbb
scas
mov
aad
out
popf
pop
push
insb
loop
xchg
outsb
lret
fdivr
mov
adc
das
cmp
ja
push
sub
scas
jb
sbb
xchg
push
inc
dec
jbe
dec
adc
push
or
and
mov
push
adc
xchg
bswap
xchg
data16
dec
inc
fistps
or
aad
out
addr16
mov
cltd
lret
xchg
fnstcw
icebp
push
movsl
enter
sbb
mov
mov
dec
cwtl
push
nop
mov
inc
mov
sub
push
loopne
cmpsb
imulb
clc
mov
ficomps
cltd
pop
jns
xor
addr16
cs
or
mov
xchg
add
mov
add
popf
push
xchg
sbb
or
addr16
and
jae
mov
incl
jg
cmpsl
jmp
or
ret
je
sti
aam
mov
mov
xchg
mov
jge
movd
dec
push
loope
and
pop
mov
fisttpll
int3
test
scas
hlt
mov
xor
or
stos
and
xchg
and
push
cwtl
lret
bound
or
jl
mov
xchg
jp
lods
xor
inc
mov
ds
pop
sub
cld
adc
xor
xor
adcl
outsb
push
add
jg
mov
push
xor
test
push
and
fdivrp
and
js
movsb
inc
pop
add
jg
cwtl
mov
cli
cmpsl
loopne
xor
dec
push
adc
repnz
jmp
ljmp
adc
gs
or
mov
orl
subl
xor
sub
mov
mov
xchg
js
call
shll
add
sbb
pusha
xchg
stc
lret
push
add
nop
jns
std
andl
pop
push
pop
sbb
xchg
daa
mov
mulb
mov
pop
test
push
hlt
pop
cmc
jmp
pop
jge
js
mov
loop
mov
lret
jo
push
push
sbb
fisttpll
add
loope
ret
pop
dec
mov
and
int3
adc
aad
out
aas
jp
sti
xor
lods
jnp
lea
mov
idivl
jle
sbb
adcl
sti
mov
mov
aas
iret
pop
xlat
hlt
repz
fs
fsub
lcall
push
adc
sbb
or
cwtl
sub
mov
fwait
and
out
insb
jg
out
push
xor
xchg
rcll
fisttps
push
fsubrs
cli
and
add
mov
dec
jp
mov
dec
outsb
or
mov
push
cmpsb
mov
sti
test
aas
cli
adc
enter
in
mov
pop
dec
fstpt
mov
fistps
mov
lcall
inc
adc
ja
sub
pop
jns
int
dec
ja
stos
mov
xchg
add
mov
mov
xchg
push
or
mov
or
es
aad
jle
out
cmp
andl
es
add
mov
stos
scas
push
sub
push
mov
cmpsb
loop
dec
clc
fnsave
sti
sub
outsl
out
stc
repnz
sbb
sarl
dec
rorb
or
dec
dec
mov
clc
repz
sbb
insl
icebp
jmp
inc
push
insl
pop
pop
lret
iret
arpl
add
test
sbb
jge
push
cmpsl
subl
loope
xchg
loope
leave
and
mov
xlat
mov
adc
scas
scas
jl
push
jle
or
sub
dec
in
add
cmp
pop
dec
loopne
mov
adc
insb
mov
xchg
dec
inc
jmp
repz
cld
or
loope
movsb
arpl
cli
mov
popa
dec
add
jo
hlt
jb
icebp
out
push
adc
mov
add
xchg
mov
adc
push
adc
call
push
fsubrl
mov
faddl
shll
mov
mov
lret
add
xchg
xlat
mov
jecxz
add
mov
lods
inc
mov
jne
and
push
jmp
nop
mov
sub
sbb
xchg
into
std
outsl
test
sub
mov
icebp
out
test
rclb
pusha
in
jg
scas
mov
loop
or
jb
push
inc
xchg
rorb
int3
addr16
sbb
add
std
xor
xchg
movzwl
mov
lods
jp
jnp
cmpsl
xor
cmp
std
cmc
sub
mov
aas
int
adc
outsb
cmp
cmp
scas
push
push
jmp
cld
jnp
scas
fcoms
jns
scas
mov
movsb
pushf
aam
and
pop
insl
mov
test
cli
dec
adc
outsl
and
xchg
and
int
lds
sbb
test
dec
fsubrs
nop
ljmp
dec
pop
mov
pop
addr16
addr16
bound
inc
pop
leave
addr16
cmc
mov
repz
pop
inc
imul
xchg
jl
dec
inc
aad
sbb
mov
js
push
mov
pop
lret
in
rcrb
xor
push
insl
mov
test
push
ss
divb
loop
adc
push
movsb
scas
sbb
shl
insl
test
push
and
popa
sbb
daa
push
sub
jmp
mov
loope
cmp
int3
stc
pop
mov
nop
hlt
sti
xor
mov
xchg
movsl
xchg
push
out
xor
iret
cmpsb
dec
das
sub
loopne
es
mov
popf
pusha
jno
mov
sub
push
xchg
dec
movsb
cmp
mov
out
or
jne
jne
lret
adcl
sub
mov
daa
mov
bound
ljmp
push
into
div
or
lcall
into
rclb
cli
adc
mov
jo
jp
cmpsl
mov
mov
outsl
daa
mov
or
mov
movsb
inc
cmp
adc
test
jb
xchg
stos
pushf
pop
mov
pop
inc
loopne
and
and
sub
push
ja
scas
test
ret
xchg
sbb
rorl
test
scas
daa
sub
das
xlat
sbb
out
imul
or
sbb
pop
repz
jle
mov
test
lret
push
ljmp
cmp
sahf
leave
mov
and
out
jbe
imul
loop
pop
mov
imul
ja
test
or
xlat
stc
sbb
lcall
mov
pop
pop
das
pop
add
sbb
xchg
int3
orb
lods
mov
cmp
int3
mov
test
push
aas
es
and
add
lea
inc
arpl
xchg
push
mov
add
dec
sti
dec
in
xchg
mov
jl
push
xor
fcomi
or
imul
sbb
cld
mov
push
cmp
sbb
inc
sbb
les
xchg
add
push
mov
cmp
clc
mov
std
aaa
jae
call
add
pop
fs
mov
add
add
es
in
jl
jmp
cmp
stc
mov
and
call
out
cmp
push
sbb
jae
xchg
push
lcall
das
xchg
mov
add
ret
lret
sbb
inc
sub
jae
xor
pop
mov
push
cmp
cmc
into
fbstp
lcall
dec
cmp
into
lahf
js
nop
mov
mov
int3
fidivs
stos
ja
push
xchg
adc
fsubs
sqrtps
jne
rcl
scas
dec
push
in
addb
in
inc
and
sub
lock
mov
cmp
stc
jno
adc
xor
mov
adc
movsb
add
ret
pop
and
int
mov
xor
mov
mov
mov
pusha
dec
add
ret
test
ret
or
xchg
pop
movzbl
call
push
icebp
sub
stos
bound
aas
adc
jbe
mov
scas
repz
loopne
and
dec
xchg
adc
fwait
pop
pop
cli
fnstcw
js
repz
pushf
cltd
mov
imul
jb
and
push
jmp
scas
int
xor
mov
sbb
popf
mov
push
jo
jne
and
jl
mov
and
cmc
scas
loope
add
imulb
jmp
out
cld
call
outsl
push
mov
xchg
bnd
add
cmp
cli
push
pop
pop
test
das
sbb
leave
mov
int
rol
push
inc
xchg
adc
push
adc
call
lods
mov
add
jb
mov
xchg
lea
mov
sbb
movsb
sti
mov
mov
adc
fst
mov
push
scas
dec
inc
pop
pop
cmp
das
or
cs
loop
negl
sub
xchg
test
mov
mov
mov
aas
je
lahf
or
lea
lret
shl
mov
xchg
cmpsb
ret
xchg
xor
shlb
bound
rclb
xor
mov
test
fwait
rcl
lds
daa
icebp
std
and
push
pop
add
inc
jmp
jl
adc
xchg
shr
xchg
mov
loop
int3
stos
lret
mov
gs
aam
xchg
clc
ljmp
test
int3
push
cwtl
cld
lods
jp
add
push
jp
fsubs
ret
sub
inc
mov
std
xchg
aam
scas
filds
fisttpll
iret
lret
lds
push
mov
loop
loopne
pop
test
arpl
jns
stos
or
sbb
mov
pushf
push
shl
cli
lahf
das
push
xchg
ljmp
push
iret
add
cmp
or
aas
add
insb
in
xchg
xchg
adc
in
pop
mov
sti
je
repz
out
push
je
push
jno
cli
and
sub
imul
push
fisubs
movsl
push
out
add
movsb
sub
sub
insb
mov
mov
les
adc
sub
fs
pop
or
out
adc
lock
cmp
jge
les
loopne
adc
leave
movsl
mov
push
popa
mov
jnp
pop
shrl
xor
rorl
inc
repz
and
sbb
sti
mov
xor
loopne
cmp
push
mov
mov
mov
in
pop
testl
pop
cmpsl
pop
push
lahf
fisttpll
fnstenv
inc
xchg
pop
sbbb
test
xchg
call
in
data16
out
jno
loope
out
sbbl
scas
cmpsb
xchg
lea
xchg
fwait
inc
or
lret
jg
scas
scas
pop
mov
rcl
cmpb
mov
adc
sarb
or
dec
iret
xchg
lret
mov
in
sub
jno
xor
rclb
icebp
jmp
insb
ja
lock
sti
mov
sbb
push
jl
in
test
jbe
in
test
cli
or
stos
jo
mov
pop
jp
pop
fwait
lock
jle
sbb
jle
orb
mov
mov
or
ss
nop
cmp
dec
out
aas
lods
sbb
out
adc
pop
js
out
xchg
inc
mov
jp
cmpsb
mov
jns
mov
and
pop
test
adc
mov
inc
dec
addr16
dec
cmp
mov
or
sub
jae
mov
arpl
sbb
lods
repnz
shl
sub
dec
xchg
sbb
loope
outsl
stos
icebp
xchg
push
or
xchg
cs
push
adc
pop
cmpl
mov
into
dec
lock
gs
inc
xchg
ret
xchg
cs
in
js
fidivs
inc
or
jecxz
cmpsb
fimuls
xchg
into
sar
xchg
push
pop
inc
addr16
or
mov
push
sub
jne
cmpsl
sub
xchg
lds
mov
loope
xchg
pop
mov
clc
bound
push
xor
xor
sbb
in
je
sub
xchg
jnp
nop
mov
cmc
and
orl
out
mov
lret
pop
daa
mov
call
adc
ret
iret
push
pop
ljmp
inc
ret
cld
bound
xchg
adc
or
pop
shll
cmp
push
ljmp
xchg
push
mov
cltd
sub
inc
cli
sar
and
call
sub
js
loop
cli
pop
mov
loopne
jge
pop
xor
cltd
push
mov
test
add
add
push
sahf
xchg
sahf
adcl
fidivrl
jle
fs
mulb
out
mov
js
mov
mov
inc
add
jmp
pop
ret
ss
mov
pop
mov
jmp
or
std
insb
int3
in
pop
push
fs
mov
gs
mov
ds
shll
in
lods
out
add
push
cs
aam
add
loopne
in
inc
jb
clc
pop
imul
inc
jae
imul
sub
dec
jbe
dec
xor
xor
mov
add
dec
xorl
sahf
movsl
and
in
dec
repz
inc
shlb
mov
lods
lea
aaa
test
outsl
loop
addr16
movsl
cmp
mov
icebp
lret
mov
inc
cmpsl
mov
stc
xor
movsb
les
jne
mov
push
lods
mov
in
sbb
scas
push
mov
imul
cmp
rcl
negb
adc
mov
lock
xchg
aam
out
arpl
notb
loopne,pn
cmp
jae
mov
fs
jl
lds
scas
sahf
pusha
xchg
int
leave
mov
es
add
add
icebp
lock
lds
mov
sub
xor
adc
cmp
or
lods
add
mov
fidivrs
cmp
in
stc
clc
jnp
clc
sbb
and
je
fistl
imul
daa
pop
mov
iret
cld
add
xchg
inc
adc
jae
adcl
sub
mov
sahf
test
lret
ss
fcoml
mov
cwtl
sbb
sub
in
lahf
xlat
loopne
mov
mov
add
test
out
clc
rcll
movsl
lret
jo
push
cmp
nop
sbb
sub
sbb
mov
xchg
in
rolb
repnz
mov
mov
loop
imul
cmp
in
pop
and
mov
push
sbb
xor
fucomip
inc
mov
and
inc
pop
notb
fidivrs
hlt
scas
mov
scas
and
mov
mov
push
jl
fwait
call
out
push
mov
in
mov
les
mov
lahf
ja
lret
push
add
loop
dec
cmp
mov
add
test
or
dec
in
loop
xor
fsubrs
cmc
sbb
sub
cmpsl
data16
aam
repnz
adc
enter
mov
push
outsb
jae
jno
in
test
bound
popl
sahf
adc
mov
shrb
fwait
fiadds
mov
push
ret
imul
fwait
nop
int
hlt
add
shlb
jnp
push
pushf
dec
cmp
data16
dec
fs
fistpl
in
daa
push
mov
fcmove
adc
fwait
jp
mov
and
or
push
cmp
shll
ljmp
ss
jle
sbb
stos
lret
pusha
mov
pop
loop
ret
pop
push
int3
mov
shll
cwtl
jns
scas
popf
or
les
pusha
or
cmpsl
cmp
cmp
insb
adc
insl
test
addr16
adc
std
ret
dec
in
mov
loop
jb
dec
add
xchg
adc
sub
in
cmpsb
jge
shlb
ja
sub
insl
or
jo
or
test
jge
jo
lds
xchg
jne
not
sub
idiv
pop
push
mov
enter
jbe
xor
and
push
cmp
cmpsl
xor
xchg
xchg
push
push
adc
xchg
cmp
fcoms
inc
jecxz
mov
dec
cmpsb
jle
insb
shrl
lock
cli
test
push
push
mov
imul
icebp
sub
sub
mov
imul
cmp
in
mov
out
dec
test
dec
inc
cs
push
or
sbb
je
push
arpl
sub
insb
fxtract
fs
jle
sub
cld
fstpt
lea
iret
call
jle
rcrl
faddl
pop
sahf
add
push
popf
adc
mov
push
xor
cmp
mov
ret
movb
inc
roll
dec
cwtl
pop
push
cmp
aaa
outsb
and
and
xchg
push
pop
push
cld
loopne
cmp
shll
inc
push
pop
lcall
adc
sahf
notb
cli
jg
rolb
sbbl
inc
cmc
push
stc
jle
pop
jbe
and
pop
insl
stc
outsl
pushf
add
push
push
jge
push
or
or
arpl
jbe
in
bound
sbb
mov
cmp
xchg
push
adcl
ds
mov
jle
cmp
and
icebp
pop
adc
dec
jg
sbb
xchg
lock
call
insb
or
xchg
inc
test
or
mulb
jns
int3
or
scas
or
clc
movsl
cmp
movsl
rcll
sub
roll
push
lret
insl
cmp
test
push
push
cmp
xor
mov
movsb
insb
bnd
or
insb
and
mov
in
dec
adc
dec
push
mov
test
cmp
and
mov
push
ss
leave
jecxz
les
pushf
jp
xlat
push
jno
cmp
mov
movsl
bound
aas
jle
aam
fldl2e
pop
bound
mov
sbb
xchg
movsb
pop
fsubr
icebp
inc
or
shlb
out
fwait
fs
fidivl
xchg
scas
inc
push
lahf
xchg
push
jbe
int3
inc
adc
int
xor
xchg
mov
cmc
xor
fistl
rcl
jo
push
sbb
loop
sarl
xlat
nop
cs
jne
cltd
movsb
inc
test
data16
pop
mov
ljmp
ljmp
lock
pop
xlat
and
mov
jbe
and
fnstcw
jmp
dec
ret
and
inc
lahf
lods
or
jae
int3
lahf
xor
clc
add
outsl
jns
push
nop
jb
add
jb
repz
out
repnz
mov
daa
fnstsw
mov
cmp
mov
mov
movb
nop
adc
aas
cmc
daa
mov
in
sub
rcrb
dec
sbb
jne
sub
mov
jmp
in
add
pop
call
adc
push
fchs
push
fdivs
dec
xchg
mov
test
ljmp
sub
es
pop
sbb
add
ss
mov
clc
mov
pop
into
mov
lcall
mov
aad
adc
out
insl
sbb
xchg
cmpsl
jge
push
ret
into
movsb
mov
outsl
add
mov
mov
add
je
cmp
popf
and
stos
leave
push
data16
jne
movsb
and
pop
movsb
popf
inc
je
sbb
je
inc
repz
fimull
ror
dec
test
push
int
dec
xor
pop
stos
scas
xor
lcall
ret
dec
sbb
ds
dec
jbe
sbb
into
enter
push
stos
push
mov
mull
adc
data16
hlt
push
lret
push
cmp
adc
fwait
ret
mov
push
inc
test
pop
and
and
movsl
addr16
dec
fidivrl
mov
xchg
sbb
aaa
sbb
enter
xchg
test
inc
pop
push
cmpsl
cmp
ds
repnz
lock
ficompl
push
shlb
in
sbb
orl
out
sub
sbb
dec
std
pop
stc
pop
xor
inc
or
cltd
xchg
jmp
data16
outsl
mov
mov
pop
fistl
ficoms
mov
movsb
mov
ret
movsl
add
or
lret
push
loopne
cmp
test
dec
xchg
push
mov
push
stc
cmpsl
cltd
dec
in
mov
adc
popf
ss
mov
les
sbb
push
shl
mov
pop
das
nop
push
iret
xchg
rcrl
push
ret
mov
ja
ret
cld
mov
call
push
and
out
out
insb
xor
push
inc
test
jge
jecxz
mov
rorb
popa
sti
js
mov
mov
sbb
inc
push
loopne
xchg
cmp
shll
pop
xchg
push
push
fcomps
sar
divl
add
or
test
in
out
pop
inc
or
cmp
stos
call
pop
es
ret
cmp
push
into
jmp
sub
pusha
out
adc
outsb
and
add
and
andb
pop
in
inc
jb
fisttpl
pop
test
rcrl
push
imul
rcll
xchg
and
sub
mov
fisttps
and
xchg
in
mov
lock
ficomps
mov
in
cmc
xor
int3
test
sarl
jns
movsl
in
add
dec
into
xchg
notl
ja
dec
stc
jns
sbb
pop
or
imul
pop
into
ljmp
mov
xchg
es
out
sbb
jbe
xor
pusha
mov
loop
jl
mov
mov
std
sub
sti
push
jp
pop
sbb
mov
aad
xor
jmp
adc
lods
loopne
push
adc
scas
cmpsl
nop
ds
inc
and
add
in
int3
and
lea
arpl
sbb
xlat
cmpsl
insb
mov
test
push
repnz
push
xchg
xor
push
scas
inc
movsl
outsb
push
int3
fcoml
mov
test
sub
sbb
push
adc
gs
sti
adc
cwtl
enter
sbb
ljmp
into
ja
mov
int3
enter
mov
lods
xchg
testb
gs
test
cltd
test
scas
cmp
pop
inc
int3
fisubrl
or
mov
fwait
mov
dec
data16
cwtl
insl
or
sbb
loopne
test
mov
mov
mov
cwtl
scas
loopne
sbb
cmp
ljmp
pop
stc
daa
dec
jae
icebp
test
pop
jl
cltd
add
enter
out
repz
mov
sbb
test
pop
data16
leave
jmp
test
inc
sbb
cmpsb
lods
cmp
scas
push
xor
dec
xlat
jmp
stos
aad
ds
jns
or
xchg
jae
add
fists
jo
jne
ficoms
push
mov
addl
iret
lahf
mov
cmp
sti
ror
imul
imul
ret
ret
ss
lods
pop
cmp
push
mov
add
js
mov
dec
sub
inc
pushl
into
ja
js
mov
and
neg
aam
ficoms
mov
dec
mov
push
xchg
mov
cs
cli
cmp
out
je
adc
iret
pop
pop
push
xor
mov
outsl
mov
pop
jp
pop
adc
fisubrl
and
mov
in
scas
ss
mov
cmp
cmp
mov
rcrb
loope
and
sbb
sbb
xorb
lods
mov
hlt
mov
movsb
mov
add
aad
loope
lahf
mov
enter
jp
and
fcmovnu
out
cmovl
icebp
sub
mov
stos
pop
pusha
xchg
cmpsb
inc
out
outsb
test
pop
out
xor
iret
fisttpl
loop
inc
sbb
lret
loopne
mov
xchg
pop
insb
dec
pop
ret
divps
jae
mov
sbb
push
cmp
mov
push
lods
inc
jbe
roll
mov
adc
test
rolb
das
mov
mov
bound
ss
push
rcrl
jbe
mov
sub
mov
mov
push
pop
stos
mov
imul
pushf
push
shlb
ud2
pop
in
cmpb
pop
jl
sarl
cs
fadds
js
dec
inc
lock
cmp
mov
inc
int3
push
je
decl
xlat
mov
inc
ret
leave
in
daa
inc
cmp
in
jbe
and
jbe
and
push
fs
mov
push
xlat
xchg
sub
cmp
cmc
jg
fldl
pop
push
jp
jg
mov
mov
lcall
out
add
dec
movsb
add
movzwl
fcoml
push
jp
push
push
sub
cmpsb
jae
jecxz
lods
das
stc
gs
adc
call
out
and
mov
xchg
mov
push
leave
xlat
leave
subl
in
divl
pop
pop
jae
jl
xlat
add
lods
aam
and
call
jp
jp
push
mov
hlt
ja
adc
stos
inc
ja
subb
jno
fwait
xchg
cmp
push
icebp
cmp
pop
mov
int3
push
adc
inc
std
les
mov
andb
popa
rorl
fdivrl
outsl
lock
addl
mov
jnp
js
les
jae
jb
in
shll
xchg
push
push
or
lahf
xor
les
jae
mov
dec
rolb
das
adc
scas
sti
das
pop
orl
sbb
aas
or
xchg
jns
dec
or
leave
in
test
mov
mov
xlat
mov
ja
into
xor
inc
mov
xlat
mov
cli
or
pusha
push
ja
int3
mov
outsl
lods
dec
dec
es
repnz
pop
dec
gs
jecxz
jmp
inc
add
out
inc
scas
pop
jne
or
aas
scas
mov
sbb
loope
push
ja
sub
imulb
int3
or
js
xor
ret
mov
pop
clc
push
insl
sub
push
jae
or
xchg
jbe
cltd
sbbl
lock
lret
mov
sahf
ficomps
out
jne
in
and
jns
xor
xor
cmp
loop
lods
inc
pop
adc
daa
or
notb
inc
enter
and
sub
mov
aas
inc
add
adc
mov
gs
in
mov
cmpsb
push
pop
mov
fistpl
xchg
pushf
mov
popa
call
ds
dec
aaa
inc
mov
fsubl
dec
xor
dec
push
rep
jge
xchg
insl
mov
or
sub
xchg
pop
jno
shrb
ret
gs
dec
insl
mov
mov
xchg
enter
adc
out
and
and
aaa
mov
int
or
mov
ljmp
adc
xchg
fs
push
inc
mov
adc
xchg
popa
push
cmp
pop
rorb
jmp
xchg
xor
out
adc
cmp
xlat
sar
in
xor
add
xchg
lcall
repnz
scas
and
ja
dec
sbb
cwtl
mov
sbb
mov
mov
je
mov
mov
inc
mov
imul
add
pop
adc
in
fadds
dec
ret
fldcw
mov
push
clc
sub
dec
adc
dec
es
mov
mov
push
aaa
outsl
jg
adc
fimull
adc
iret
leave
filds
hlt
and
ljmp
out
mov
in
xor
pop
pusha
jecxz
mov
xor
leave
test
ficompl
xchg
cmp
leave
pop
and
jp
nop
fstl
cwtl
xchg
inc
adc
addr16
clc
scas
pop
testl
ret
xlat
or
cmp
movsb
mov
movsl
adc
push
int3
ja
mov
cmp
ret
dec
mov
mov
fidivl
into
adc
stos
lahf
out
notb
cmp
test
cmp
js
out
jle
popa
adc
pop
fiaddl
test
int
cmp
incb
lock
mov
jb
mov
into
loopne
cmc
cmp
mov
mov
js
loope
aad
adc
ret
roll
pop
push
fstl
xchg
jno
mov
stos
xor
loop
rclb
popf
xor
pop
push
icebp
mov
dec
enter
mov
inc
loop
lods
push
vmovsldup
fdivrs
jo
std
or
mov
or
xchg
scas
jo
mov
lea
std
int
out
add
jno
int
mov
mov
or
push
sub
mov
jecxz
cwtl
jl
movsb
nop
stc
mov
dec
xchg
xchg
out
in
or
fucomp
repz
das
add
jmp
sbb
cmp
daa
sahf
xchg
pusha
inc
add
scas
roll
push
jp
cmp
enter
scas
scas
xor
or
ret
mov
rolb
and
add
outsl
or
cmpsl
orl
xchg
pop
mov
imul
jno
xchg
cmp
push
les
ficomps
inc
push
xchg
insl
sarb
fiaddl
push
mov
push
bnd
pop
lds
call
fmul
push
shll
cmp
mov
pop
jecxz
mov
lret
mov
lret
cmpl
xor
mov
mov
sub
mov
xor
into
mov
and
test
dec
std
mov
xchg
out
cmpsb
push
addb
mov
jge
dec
mov
adc
jns
mov
sbb
testl
push
mov
sbb
or
call
movsb
jecxz
adc
pop
arpl
mov
pop
xorl
pop
divl
hlt
dec
into
add
xor
into
xchg
out
mov
mov
nop
cld
or
ss
xchg
push
roll
cwtl
and
push
gs
and
jge
fisubl
cwtl
mov
into
cmp
out
insl
pop
shlb
bound
dec
jno
or
test
dec
xchg
or
xchg
subb
inc
call
push
rorb
hlt
scas
jae
rcl
addr16
out
std
cwtl
cmp
inc
bound
pop
pusha
das
and
jge
mov
pop
pushf
push
sti
shl
mov
or
cs
jne
cmp
nop
push
mov
push
cmc
repnz
ror
sub
call
imul
xchg
sbb
ret
sub
nop
ret
pop
pop
int
jp
mov
dec
jle
scas
loope
jmp
cmpb
leave
cwtl
fmull
aad
pop
xchg
jns
cmp
mov
inc
pop
cld
or
fistpl
mov
jle
jmp
or
test
xor
test
sti
shr
dec
add
sub
xor
daa
pcmpgtd
jbe
dec
fmuls
addr16
outsl
jmp
sub
pop
outsl
adc
pop
out
fistps
mov
daa
xchg
es
lahf
and
add
addb
int
mov
add
scas
dec
adc
jno
adcl
cmp
into
xlat
cmp
or
xor
push
mov
or
cltd
or
clc
add
and
out
mov
mov
xor
xchg
arpl
pop
es
xchg
cmp
int3
sbbb
mov
cmpl
sahf
je
sbb
enter
jecxz
jp
inc
or
lret
icebp
lcall
mov
out
mov
mov
ret
add
mov
inc
repnz
sub
sbb
lahf
nop
daa
clc
push
test
mov
fdivr
repz
insb
mov
jb
lock
or
jnp
mov
push
jl
push
dec
pop
mov
cmp
cmp
mov
pop
add
data16
pop
push
dec
insl
or
bound
lcall
push
icebp
rolb
mov
sti
adc
data16
mov
pop
lret
fmul
sbb
stc
lods
jmp
push
inc
addr16
cld
add
jp
and
mov
scas
push
sub
inc
cld
stos
fcmovne
loop
imul
xchg
mov
cmp
inc
jg
push
push
mov
popf
loopne
mov
test
jg
add
popl
data16
jmp
jl
or
je
add
cwtl
sbb
pop
sub
and
dec
iret
mov
pop
test
or
mov
clc
mov
cwtl
push
jne
pusha
xchg
ss
xchg
dec
inc
lret
insl
jl
or
or
movsb
pop
lock
pop
popf
imul
push
outsb
cmp
cmc
out
mov
add
cmc
xchg
inc
dec
add
ret
push
mov
jbe
lret
in
fwait
mov
or
fstpl
cltd
cmp
sub
sbb
or
or
loop
loopne
push
fmuls
nop
inc
dec
jne
cmp
fisubs
fincstp
mov
sub
fldt
pop
xor
push
test
sbb
add
cmp
push
cltd
mov
inc
aaa
mov
lods
push
xchg
jecxz
jns
movsl
mov
test
dec
hlt
inc
add
inc
out
mov
cmp
scas
push
mov
mov
mov
loope
or
cmc
jmp
rorl
mov
clc
push
pop
das
or
addl
mov
pop
xchg
lods
dec
inc
mov
jne
push
mov
or
sbbb
insl
and
addl
sub
in
xchg
addl
scas
ds
out
and
addr16
movsl
test
test
cmp
jmp
jae
lock
pop
push
mov
mov
shll
xor
notb
loope
push
out
jns
stos
lret
test
cld
or
sbb
mov
pop
mov
jo
xchg
outsb
push
jns
cmpsl
scas
and
push
sbb
jbe
repnz
mov
xor
add
das
pop
jnp
ljmp
std
adc
aas
mov
dec
mov
cmp
addr16
leave
mov
inc
aam
jl
xor
insl
pop
mov
cli
scas
or
mov
mov
or
fsubrp
push
sub
cmpsb
jns
jno
lcall
jns
loope
jae
enter
push
aas
stc
mov
pop
cli
mov
inc
mov
jae
into
mov
cmpsb
insl
jmp
adc
cmp
fiadds
scas
xlat
cmp
into
jb
movsl
enter
inc
mov
lcall
jae
mov
cs
mov
mov
and
mov
scas
popa
mov
mov
xorl
inc
enter
divl
cmp
push
enter
popa
mov
sub
inc
addr16
add
jae
inc
fdivrs
adc
mov
or
std
push
pop
adc
jo
mov
xchg
push
cmp
pop
push
addr16
test
cwtl
cmpsl
jb
jae
fldt
ja
or
or
dec
mov
ret
sub
mov
add
xor
push
push
fwait
repz
ffreep
sbb
push
dec
or
std
mov
or
fcmovnu
jecxz
xlat
mov
ljmp
jge
idiv
adc
and
lods
out
xor
xor
jmp
iret
mov
mov
cmp
push
pop
add
lret
xchg
cmp
mov
lock
lods
filds
aam
jg
repnz
add
add
sarb
aas
push
push
aad
xchg
xchg
dec
adc
inc
ds
jnp
and
xchg
inc
sbb
sub
sahf
int3
mov
xchg
jns
out
push
pop
subl
subb
push
sahf
jns
push
pusha
mov
xchg
fnstcw
int3
ds
xchg
call
out
adc
and
xrelease
xchg
xchg
into
ret
dec
cwtl
mov
out
rcrl
cld
inc
into
mov
or
out
stc
inc
inc
xchg
cmp
pop
aam
std
pop
shl
pop
adc
sahf
push
mov
cmpsl
and
mov
jmp
push
fisubl
xchg
xor
cltd
stos
inc
imul
cmp
cmp
mov
jae
xchg
pop
sbb
xchg
or
data16
push
xor
jnp
call
out
cltd
rcl
push
fidivrl
sbb
jp
pop
push
sub
daa
mov
push
add
stos
mov
out
push
cmpsb
add
insl
lods
ret
and
lock
iret
imul
sbb
loope
sbb
mov
cli
adc
jo
clc
adc
sub
inc
inc
scas
jecxz
fucom
adc
inc
mov
lea
push
sbb
and
push
fnsave
in
mov
in
jae
loop
movsl
sub
loopne
lcall
pop
push
sub
loope
inc
xchg
pop
mov
int
test
shrl
xchg
jl
rol
andb
lods
xchg
insb
pop
out
xor
push
cmp
mov
add
push
adc
fsubl
cmpsb
mov
leave
push
xchg
push
xchg
enter
mov
or
jbe
dec
push
xchg
sbb
and
sub
movsl
shlb
int
inc
fwait
mov
sub
jo
dec
mov
cmpsb
mov
loopne
fwait
jl
addr16
into
sub
out
dec
jl
das
fmul
lcall
adc
testb
out
jne
push
mov
xor
ret
add
pop
sub
push
bound
sbb
lods
add
adc
sbb
adc
imul
ret
fisttpll
pop
mov
sbb
adc
xchg
addr16
lods
inc
std
xchg
sbb
mov
add
xchg
sbb
fnstenv
fildl
ja
in
sub
mov
lahf
outsb
aam
loopne
mov
mov
fisttpl
bound
push
cld
pusha
xor
lods
int3
cld
and
mov
sbb
sub
test
mov
inc
jbe
mov
add
movsl
into
xor
ficoms
cmc
push
cmpl
bound
push
xchg
jns
and
lret
std
stos
sub
stos
mov
adc
repz
mov
add
jnp
push
mov
ret
mov
xor
insl
adc
les
mov
inc
leave
add
cmp
fwait
jns
and
dec
stos
sub
test
cmpsb
lds
loop
sbb
mov
lcall
in
cmp
cwtl
fimuls
std
ja
mov
out
aad
mov
out
insb
xlat
jb
clc
push
fcoms
cmpl
pop
in
add
mov
stos
xchg
js
cmpsb
xor
sahf
aaa
addl
cltd
imul
iret
cmp
psllq
mov
lods
bound
adc
lret
out
in
mov
vrsqrtps
pop
add
mov
and
xchg
nop
jmp
pusha
xchg
nop
jmp
lcall
xchg
dec
lea
push
sub
dec
xchg
pop
add
ficoml
cs
movsb
mov
repnz
xchg
or
jno
mov
icebp
lds
fmulp
sahf
cwtl
pop
ret
adcb
in
inc
dec
je
flds
dec
inc
enter
sub
std
or
hlt
mov
mov
out
outsb
and
cmp
xor
push
mov
mov
jne
outsb
imul
inc
int
leave
ss
and
sbbl
jo
push
push
xchg
out
inc
xchg
jnp
pop
and
push
js
cmp
inc
or
mov
mov
repz
fidivrl
xchg
ja
jl
in
cmp
or
push
xor
push
int3
or
mov
stos
test
clc
mov
pop
in
mov
jmp
ds
scas
sti
sbb
sub
out
push
sub
cs
dec
pop
clc
faddl
out
mov
push
mov
shufps
mov
ja
inc
aad
xor
and
inc
jo
or
ja
add
inc
and
jmp
push
mov
pop
add
mov
scas
add
lods
hlt
mov
bound
sbb
leave
mov
jno
andb
bound
jge
and
mov
mov
xor
push
test
outsb
inc
test
jno
movsl
fisubl
adc
jge
and
aas
pop
mov
sub
add
cli
js
xor
push
or
ret
xchg
popa
push
lahf
sbb
adcl
or
pop
push
adc
jge
sbb
cmpsl
sub
test
push
addb
push
and
push
push
and
test
fdivrs
in
mov
add
test
aam
test
sbb
mov
push
add
xlat
push
xchg
aad
jbe
mov
ret
inc
mov
fwait
inc
sbbb
and
sub
icebp
xor
xchg
fcompl
adc
jmp
adc
mov
sbb
add
lret
push
mov
jp
inc
lcall
ret
shl
add
mov
jb
mov
push
jmp
sub
stos
test
jp,pt
imul
xchg
mov
lret
pushf
in
pop
sahf
cwtl
fisubrl
or
adc
xchg
push
icebp
ljmp
adc
sub
ja
jb
sub
push
stos
mov
mov
pop
in
jp
mov
stos
lock
mov
mov
stos
stos
inc
dec
ss
jle
fsubrl
add
mov
sbb
adc
scas
and
lods
lods
sub
xor
mov
mov
outsb
stos
pop
or
scas
or
cmpl
mov
push
rolb
pop
pop
loope
adc
sub
cmp
leave
or
inc
lret
andl
xchg
pop
test
dec
sbb
mov
inc
mov
jno
mov
cwtl
leave
dec
mov
mov
outsb
sub
mov
lods
pushf
push
dec
inc
or
push
lret
mov
data16
in
cmpsb
jmp
inc
hlt
fnstenv
dec
popa
cmpsb
adc
xor
sbb
cmpsl
cmc
mov
rcrb
mov
arpl
leave
pop
loop
cld
sbb
mov
push
push
fcmove
pop
in
in
xor
nop
scas
lret
notb
push
jbe
push
xor
aas
mov
inc
push
mov
lea
push
inc
cs
cli
xlat
lcall
movl
jno
xchg
icebp
scas
jge
jp
jno
and
stos
pop
in
out
mov
mov
shlb
xchg
aam
in
sub
pop
insl
xchg
out
mov
cmp
mov
xor
iret
push
fbld
mov
pop
insb
mov
add
call
sub
jno
xchg
ljmp
fisubrl
rclb
inc
je
sbb
jbe
mov
sbbl
adc
js
mov
mov
enter
bound
in
sahf
bound
fmuls
cmc
jl
imul
les
xor
inc
inc
pop
insl
jg
outsl
mov
rolb
sub
push
cld
push
das
sbbl
pop
cltd
sub
out
dec
mov
fmul
cld
fwait
mov
into
cmpb
out
out
add
ds
jns
push
ret
pop
xor
cwtl
subb
xor
and
inc
das
lods
pop
push
test
ret
imul
stos
dec
inc
add
test
out
and
jne
xlat
js
sub
shl
daa
mov
lret
call
outsl
pop
fucomp
mov
mov
sbb
daa
hlt
sarb
adc
cli
test
shrl
xor
inc
pop
xor
cmp
or
and
mov
mov
push
or
in
jge
aas
or
adc
ret
js
orb
xchg
jmp
scas
sbb
ret
mov
jbe
mov
sbb
inc
jbe
sahf
jne
jp
add
adc
sbb
ficoms
icebp
outsl
xchg
and
fwait
xor
or
or
push
jmp
adc
sbb
mov
pushf
cmp
mov
notb
xchg
jmp
in
fcomi
fadds
xor
ss
and
shrl
scas
rcll
sub
out
mov
call
shr
jbe
cli
mov
push
out
loop
jp
pop
sub
jno
sub
mov
push
shlb
lds
push
sti
pop
imul
cmova
pop
adc
dec
out
mov
ja
push
addr16
mov
xchg
jnp
dec
and
mov
pop
roll
jp
dec
xor
aaa
add
imul
sbb
lahf
xor
lahf
push
inc
and
dec
adc
scas
sub
jns
imul
arpl
mov
mov
imul
or
insl
fwait
in
or
bound
jne
add
add
sti
sahf
add
mov
test
movsl
call
jbe
lret
aas
pop
arpl
mov
mov
adcb
cmp
jbe
lea
mov
pop
dec
sbb
adc
ljmp
call
push
jne
ja
dec
and
sub
pop
jnp
sub
or
cli
add
or
fucomip
fistl
insl
xor
frstor
imulb
mov
mov
and
sub
dec
pop
iret
leave
aaa
repz
stos
xchg
ja
adc
repnz
xor
dec
xor
or
stc
adc
jle
jne
mov
aaa
jno
pop
fistl
dec
pop
cmp
inc
enter
mov
sahf
fimull
aad
mov
shl
fadds
negb
jl
hlt
loop
test
cmp
xchg
ss
pop
fdivrs
push
stc
test
nop
dec
sahf
push
in
lock
jl
jp
lcall
pop
mov
ja
flds
ljmp
dec
repz
jae
ret
sbb
mov
push
push
push
dec
addr16
dec
test
sub
adc
in
jl
addr16
lcall
fildll
mov
add
imul
imul
loopne
aad
inc
or
outsb
stc
lock
mov
mov
dec
sbb
adc
sub
ret
dec
push
fnstcw
push
mov
imul
sarl
mov
hlt
outsb
lods
and
or
jbe
inc
mov
mov
cmp
fs
pop
push
jns
xchg
jb
jno
inc
cmp
sahf
stos
testb
rclb
insb
xor
js
xor
cmp
xor
clc
cmp
push
xor
cmc
push
xchg
jbe
push
jno
test
cmc
add
orl
mov
or
sahf
sti
js
cmp
out
inc
mov
pop
loop
mov
xor
jg
cltd
movq
leave
and
push
mov
push
test
jnp
and
dec
outsl
gs
jb
mov
dec
arpl
cs
popl
jbe
xchg
arpl
cmp
xor
xchg
mov
stos
ja
aaa
inc
repz
add
repz
nop
xchg
pop
es
xchg
xchg
pushf
adc
and
and
or
inc
push
movsl
pop
jle
xchg
ret
cwtl
xchg
xor
dec
and
dec
ljmp
pop
sbb
jae
lods
adc
sub
push
test
push
imul
pop
cmp
roll
pop
cmp
dec
sub
cltd
and
dec
push
xchg
push
xlat
arpl
cwtl
fsubl
mov
jp
inc
cli
idivb
outsb
inc
jno
dec
xchg
xor
sub
mov
scas
inc
pop
xchg
enter
aam
call
stc
dec
adc
adcl
lds
ret
cmp
movsl
mov
adc
or
test
mov
and
inc
push
aad
cmp
loope
sub
mov
push
stc
pop
iret
jne
sbb
mov
loope
xor
pop
arpl
test
gs
lret
cmp
push
sbb
or
dec
in
aaa
push
push
jge
loop
leave
xor
mov
cmpsb
outsb
les
and
in
dec
jmp
aam
sub
adc
inc
cmp
and
mov
test
xchg
ret
jmp
fyl2xp1
or
lret
adc
aam
xchg
maskmovq
imull
popf
mov
jo
sub
mov
lcall
sti
xchg
leave
pusha
mov
adcl
fistps
pop
jb
fists
cmp
mov
daa
add
test
mov
aas
and
and
jae
into
xchg
cmp
sti
aas
xchg
mov
testl
mov
sbb
push
xchg
cwtl
mov
into
mov
mov
pop
fnsave
out
xor
adc
ror
jbe
and
pop
inc
lods
lret
xor
pusha
mov
lret
loopne
mov
bound
lods
lods
ds
and
aas
xchg
nop
mov
fnstcw
mov
pop
push
sti
add
dec
mov
mov
in
xor
testl
lds
inc
xchg
pop
shlb
hlt
mov
movsb
cmpb
pusha
cmc
sub
jle
adc
aad
mov
sbb
mov
fsubs
or
rcrl
sub
add
sbb
mov
es
stos
jg
mov
fisubs
inc
cmpl
mov
aas
push
cmp
stos
sbb
push
rclb
pop
xor
xchg
cld
or
sub
xlat
jp
lods
ret
fmul
je
xchg
popf
stos
popf
dec
fmuls
mov
mov
mov
xor
mov
and
addr16
pop
xchg
mov
jmp
incb
shll
lret
pop
mov
add
addr16
test
arpl
mov
dec
push
insl
inc
sub
insb
dec
mov
cmp
sti
mov
sub
dec
mov
push
pusha
cmp
mov
out
cs
jp
jns
sbb
pop
and
push
ds
xor
mov
orl
sub
inc
je
movsl
xchg
pop
add
bound
mov
and
sub
pop
dec
add
dec
inc
loop
adcb
cmpsb
out
xor
fsubr
in
jnp
mov
xor
push
idiv
fildl
add
cmp
or
jmp
adc
sub
icebp
fpatan
filds
mov
push
and
inc
inc
mov
mov
test
sbb
pushf
mov
push
jle
scas
push
push
aas
inc
xor
add
insl
repz
dec
mov
test
inc
imul
mov
aas
imul
push
in
sub
xchg
cmpsl
arpl
or
xlat
jmp
dec
ljmp
push
push
fmull
sub
push
test
out
dec
aam
cmpsl
xorl
cmp
xchg
pop
jbe
gs
xlat
in
or
das
push
test
mov
sti
fisttpl
jns
add
mov
mov
mov
push
mov
lret
mov
ss
bnd
mov
adc
add
incb
fcmovnb
leave
pusha
ljmp
dec
pop
mov
adc
cmp
sub
push
ror
or
or
mov
inc
mov
sbb
mov
movsb
enter
mov
pushf
dec
bound
jp
scas
test
mov
in
popf
jl
inc
add
push
adc
xor
dec
mov
movsb
lcall
and
mov
and
fiadds
out
mov
aad
in
js
mov
pop
inc
sub
and
jae
cwtl
pop
mov
xchg
pop
jns
dec
test
into
sub
sub
adc
inc
in
imul
jbe
add
frstor
and
lahf
jbe
icebp
arpl
jecxz
cltd
inc
loopne
dec
popa
mov
aam
pop
xchg
push
jno
cmpsb
push
mov
xchg
sbb
mov
mov
pushf
mov
add
cmp
lea
lds
andl
idivb
inc
inc
repz
jmp
scas
ds
pcmpeqd
or
pop
adc
jno
arpl
mov
sbb
lcall
cmpsb
arpl
mul
sbb
jae
lods
ljmp
adc
xchg
cs
mov
pusha
lret
test
mov
add
lds
adc
add
popa
out
into
test
push
pop
sub
xchg
ljmp
mov
inc
mov
les
mov
jg
ljmp
xchg
das
ret
sti
push
sub
scas
xor
inc
lcall
add
sub
loop
popa
popf
or
lock
add
out
icebp
or
leave
inc
test
lods
lds
pop
inc
sub
loope
mov
cmpsb
scas
pop
inc
dec
xchg
stos
mov
mov
cmpsl
mov
cltd
mov
fldenv
fwait
ljmp
add
xchg
ja
mov
rcl
mov
loopne
mov
jns
and
sub
test
cmpsl
roll
in
cmpsl
popa
xchg
ret
push
pop
int
sub
movb
lret
xchg
adc
aaa
pop
xlat
jle
or
mov
cmpsb
in
adc
xor
insb
pushf
xchg
outsb
repz
mov
jge
push
inc
ret
pop
or
clc
sbbl
push
dec
movsb
pusha
in
push
les
inc
mov
lods
xchg
mov
fsubl
in
xlat
cltd
loopne
pop
xchg
add
mov
push
fcmovu
cld
cmp
adc
cmp
pop
cmpsb
iret
push
add
mov
in
cmp
int3
xchg
mov
imul
iret
sub
xchg
xor
inc
sarl
inc
call
and
adc
and
arpl
scas
pusha
xchg
mov
inc
popf
in
or
in
push
outsb
sub
inc
push
in
pop
in
lock
jg
movsb
xor
dec
mov
sbb
pop
mov
pushf
inc
dec
xchg
add
push
or
sub
pop
sahf
daa
in
bound
cmp
jne
xchg
push
lahf
aas
xor
add
int3
imul
movups
mov
cmp
test
sbb
push
cmpsb
adc
adc
jge
inc
int3
jo
sbb
std
ret
loope
and
fsubs
pushf
mov
insl
or
out
out
mov
push
lds
inc
cmp
leave
pop
pop
cmpsb
mov
mov
nop
daa
mov
aaa
je
jno
adc
and
lahf
mov
cld
xchg
test
push
mov
mov
xlat
test
hlt
or
leave
popa
adc
pop
push
das
jb
lcall
or
jp
sbb
adc
aas
popa
frstor
insl
pusha
sbb
loope
cmc
inc
xchg
mov
or
das
jle
insb
adc
movsb
add
sti
pop
subb
clc
insl
dec
dec
sbb
mov
push
jb
sbbl
and
pop
pop
mov
cli
pop
or
dec
fisubl
xchg
add
fstl
push
cmp
jno
fstpt
ss
cs
pop
mov
jl
gs
jno
xchg
jns
mov
push
in
xor
rcrl
test
lock
das
jnp
bound
daa
popf
xchg
inc
and
push
aas
xchg
or
push
in
cwtl
and
or
xchg
push
mov
jnp
mov
test
sahf
std
jle
int3
cld
inc
les
mov
ja
cs
push
xchg
insb
arpl
adc
std
push
jb
jbe
mov
cmp
inc
scas
or
lret
insl
lods
push
pop
pop
adc
mov
sbb
mov
jle
lock
mov
jg
sub
cwtl
or
pop
fcmovnu
push
dec
jno
ficompl
pusha
sub
jne
stos
ret
sbb
imul
jbe
pop
call
cmpsl
movsl
jae
lahf
test
rclb
cli
shrb
xor
mov
out
nop
pop
xlat
xchg
outsl
inc
cltd
xchg
push
xchg
push
mov
popf
nop
push
pop
js
divl
lock
js
xlat
mov
jecxz
mov
mov
imul
mov
hlt
stc
andl
sub
mov
insl
sbb
push
pop
jecxz
mov
push
rcrb
xchg
aad
adc
insb
mov
loope
jbe
mov
dec
loop
int3
fstps
inc
mov
sbb
cli
fs
int
mov
cmp
insb
popf
cmp
xor
xor
jno
cli
jp
insb
and
lret
mov
addb
jle
loop
pop
lock
mov
daa
adc
fldenv
into
add
outsl
sub
in
cmp
sub
movsb
or
cld
mov
jge
dec
add
pop
nop
in
stos
push
lock
inc
fsts
icebp
loopne
jecxz
pop
sbb
inc
mov
shl
mov
movsb
icebp
sub
xor
xor
mov
push
sub
or
sub
rcrl
sub
pop
mov
lock
dec
outsl
mov
push
repnz
sbb
lahf
adc
jecxz
stos
mov
add
inc
jb
mov
xor
mov
sub
xchg
xchg
repz
lcall
adc
stc
sub
and
and
jnp
js
fwait
orb
loopne
cmp
jnp
addr16
call
scas
xchg
push
dec
out
std
ret
mov
cmpsl
ja
xchg
jns
jp
adc
dec
int
dec
mov
sbb
insl
loopne
jo
repnz
push
lret
mov
mov
test
jg
mov
cmpsl
xor
xchg
je
cmp
add
lock
cmp
sbb
xchg
cmp
jmp
clc
out
dec
outsl
xchg
js
mov
xchg
mov
shlb
jecxz
andb
ds
repz
adc
lods
sub
sbbb
int
or
add
fimull
iret
sub
or
scas
stos
push
movb
cmp
in
sbb
gs
mov
in
mov
into
push
lds
lods
shrb
pop
out
jmp
rclb
out
and
mov
icebp
pop
sub
xor
jno
mov
lret
shl
stos
jbe
mov
push
dec
andb
xchg
pusha
lret
inc
loop
rolb
adc
jecxz
pusha
adc
and
icebp
pop
lret
jge
push
jle
loope
sahf
dec
test
stos
mov
aaa
imul
lret
push
adc
loopne
jp
lret
iret
xchg
fidivrl
rep
jne
fisttps
xor
mov
enter
push
fnstsw
mov
stos
xchg
push
adc
sub
inc
mov
iret
inc
xor
test
pop
push
adc
or
rcl
inc
xor
add
jo
pushf
dec
fwait
loop
dec
adc
mov
and
push
mov
jp
pushf
mov
fsubrl
push
cs
rcll
sbb
xchg
std
mov
xor
xor
cs
in
int
lods
aam
or
lods
aam
or
add
call
add
popa
xchg
sub
inc
mov
sbb
jl
and
rclb
insb
cmp
int
aam
jl
xor
adc
mov
and
sarl
sbb
dec
in
mov
sub
or
test
iret
pop
sbb
cmp
or
decb
add
dec
hlt
pushl
sbb
stc
shrl
adc
and
adc
sub
push
arpl
and
dec
cmpsb
cmpsb
dec
or
mov
inc
xor
push
in
mov
pop
adc
ja
sbb
fisubrs
mov
popf
inc
fisubl
pop
xlat
popf
jns
arpl
pop
lret
jb
popf
cmp
sub
cmpsb
sub
or
fmuls
das
xchg
mov
and
xchg
daa
lret
push
mov
lea
add
and
inc
dec
xchg
mov
push
mov
sub
movsb
sbb
stc
mov
lret
rolb
popa
ss
std
and
cmpsl
ss
mov
test
bound
push
fwait
insl
mov
ret
fst
sub
pop
into
flds
repz
out
adc
adc
adc
outsl
mov
xor
imul
inc
xor
cltd
leave
repz
ds
test
inc
pusha
mov
iret
iret
pop
aam
jl
rorl
sub
mov
ret
repz
jnp
cmc
push
in
cmp
shrb
rcrb
mov
ja
in
xor
xor
mov
leave
push
incl
pop
mov
movsb
pop
aam
jle
inc
pop
lock
aas
mov
add
fadds
xchg
xor
les
adc
adc
out
mov
add
sub
sbb
daa
sbb
rclb
dec
xlat
ds
inc
sbb
sub
push
push
int3
aaa
movsl
aas
outsl
pop
outsl
mov
or
movsb
mov
nop
pop
pop
cld
or
lcall
arpl
mov
mov
mov
and
and
mov
xlat
in
jae
call
jl
pushl
mov
mov
call
dec
xchg
mov
sbbl
mov
imul
scas
push
daa
roll
pop
push
cmpsb
inc
jo
sti
lcall
jno
push
sbb
push
mov
mov
push
lahf
push
pop
or
jl
push
in
loopne
mov
out
jmp
aaa
jo
js
sub
mov
add
aad
inc
or
lahf
xor
aam
out
sbb
pop
popa
out
lret
dec
push
xchg
in
pop
loop
neg
gs
fsts
pop
jecxz
jne
sbb
and
cmp
lods
dec
jmp
inc
mov
stos
jo
mov
stos
jo
mov
stos
jo
mov
stos
jo
mov
stos
jo
mov
stos
jo
mov
stos
jo
mov
stos
jo
mov
out
add
xchg
sahf
jp
jne
pop
bound
sarb
lea
push
lods
icebp
sub
pop
stc
mov
dec
ja
or
scas
cmp
sbb
add
mov
jge
out
pop
enter
arpl
sbb
ja
jb
mov
cmp
jae
jle
jmp
in
int3
stc
xor
xor
stc
xor
loop
mov
outsl
cld
scas
sbb
inc
adc
insl
ret
iret
push
je
mov
push
xchg
jle
cmp
pop
lret
mov
subb
xchg
out
scas
test
sbb
fwait
mov
mov
outsl
dec
xor
in
add
jp
cmp
in
jge
into
push
pop
add
xlat
enter
shl
cli
add
dec
inc
mov
dec
movsb
xchg
sub
sbb
cld
push
inc
int3
popa
cmp
jl
cmp
pop
adc
jno
dec
in
add
adc
shlb
es
popf
push
adc
cld
iret
enter
adc
inc
push
nop
in
sub
dec
scas
mov
xor
or
jbe
push
jb
dec
push
jae
dec
mov
sahf
dec
les
jmp
lcall
fidivrl
fildll
aas
xor
adc
dec
dec
xchg
mov
jle
clc
dec
xchg
cmp
ss
sub
imul
add
add
sbb
pop
sub
inc
inc
dec
and
cli
mov
push
cmp
pop
scas
hlt
jg
in
dec
or
inc
les
cmp
jl
inc
push
cltd
cwtl
insl
lods
or
outsb
add
xchg
mov
sbb
stos
ss
mov
pop
out
sub
jnp
mov
notb
mov
xchg
inc
and
dec
cmp
push
inc
subb
ficomps
rorl
loope
mov
fiaddl
popa
aaa
cmpsb
xchg
aad
jno
pop
nop
jb
scas
xor
fstps
jmp
and
push
test
sbb
lds
inc
sbb
xchg
in
or
test
add
push
push
dec
lods
push
inc
popf
ja
xor
in
adc
andl
push
popf
dec
popf
push
mov
sub
or
pop
pop
mov
dec
pop
cli
sub
jne
xor
add
mov
stos
xchg
sub
mov
push
je
push
push
pop
jbe
shlb
mov
and
push
push
out
mov
sti
pop
mov
push
int3
test
hlt
push
or
ljmp
xchg
cmp
fildll
mov
adc
cmpsb
stos
data16
or
inc
cltd
clc
out
cmpsb
leave
cld
and
xlat
ret
jecxz
mov
fisttpll
andl
imull
adc
mov
mov
pop
inc
cmp
fisubrl
orl
loope
daa
push
cmc
xor
aam
sarb
lds
arpl
enter
enter
mov
enter
rorb
inc
rorl
mov
ret
push
mov
stc
sub
aaa
addr16
stc
nop
testb
and
push
xchg
cmc
add
and
icebp
sub
je
out
adc
mov
add
popf
cli
leave
jge
xchg
jb,pn
pusha
sub
jo
cmp
popf
jmp
mov
dec
jo
dec
inc
jmp
movsl
sbbl
inc
pop
inc
inc
cmp
leave
dec
ja
aas
call
mov
das
or
jle
or
adc
testb
ds
jle
sti
add
sti
jno
mov
data16
sbb
mov
push
incb
push
test
jle
shrb
rcll
cmp
jp
into
add
shlb
data16
aam
dec
lcall
push
mov
jnp
lock
fs
int
pusha
sti
jnp
dec
mov
nop
mov
call
scas
jmp
cmpsb
mov
aas
and
ss
xor
adc
jo
cmpsb
scas
in
sbb
jp
loopne
push
fs
dec
outsl
jecxz
pop
push
cmp
push
jecxz
lret
test
jg
cmp
imul
ret
popf
mov
ficoms
push
scas
pop
out
mov
dec
pop
cmp
xor
push
loopne
inc
or
adc
add
mov
shlb
pop
call
stc
shlb
cmpsl
and
mov
shl
mov
test
jnp
xorb
movsb
lahf
xchg
sbb
add
or
adc
xchg
pop
ja
bt
popa
cmc
insl
sar
cmp
repnz
adcl
in
sbb
xor
jae
out
sub
mov
add
mov
sub
std
dec
fdivrp
mov
cmpsb
aad
pusha
mov
cmpsl
shl
mov
mov
jecxz
cmp
repnz
or
xor
mov
addr16
and
adc
dec
bound
xor
push
lret
push
sbb
dec
fdivs
pop
nop
sub
cwtl
inc
lret
sub
in
jle
cmp
mov
adc
lahf
and
adc
inc
mov
rcr
movntq
pop
cltd
sub
push
dec
pusha
mov
push
test
xorb
xchg
inc
sub
lret
test
or
aas
inc
inc
push
dec
add
xchg
jne
dec
dec
jge
lcall
sbb
mov
sbb
jbe
fdivrs
ret
fildl
cmp
ds
push
sbb
sarl
mov
pop
movsl
popl
inc
mov
es
sub
lahf
xor
icebp
mov
push
in
fistpl
xor
movsl
add
dec
and
sbb
mov
loop
adc
cmpb
pop
scas
sbb
cld
cs
ret
mov
fs
push
outsb
test
dec
stc
lea
jp
jecxz
jp
cmp
xchg
and
cli
mov
and
outsl
add
pop
push
loop
sar
jno
sbb
repnz
jns
dec
mov
sar
fsub
lods
mov
pop
scas
clc
xor
jp
pop
fidivrl
loop
cmp
xlat
leave
adc
lret
movsl
flds
xchg
and
pop
jge
adc
inc
lret
xor
adc
sbb
and
sbb
in
mov
cmp
and
adc
cli
dec
das
xchg
mov
mov
jmp
jl
cld
outsb
jne
jl
jecxz
mov
fwait
hlt
sbb
xchg
push
cwtl
add
lcall
mov
add
out
sbb
push
push
jge
push
mov
adc
sti
stos
sub
dec
ficoms
jle
bound
mov
adc
loop
and
jne
sbb
xchg
aad
inc
adc
clc
sbb
pop
mov
daa
pushf
movsb
movsb
push
mov
mov
dec
sbb
nop
into
sub
lods
dec
ret
rcrb
xchg
or
cltd
ja
lret
or
cmp
es
testb
mov
jle
idivl
lock
incb
xchg
pop
and
sti
jns
mov
imul
push
add
pop
popf
pop
dec
lahf
jbe
mov
xchg
scas
into
mov
and
lock
adc
cmpsl
mov
adc
fbld
ja
je
imul
add
push
aad
adc
into
js
icebp
mov
ficoms
or
sbb
push
mov
jae
dec
outsb
mov
pop
jecxz
or
sub
sub
les
fwait
mov
dec
push
sahf
pop
and
popf
shld
mov
mov
pushf
test
jp
lret
cmp
lods
mov
mov
push
pop
mov
fnstenv
mov
mov
lcall
imul
sbb
std
dec
xor
mov
test
inc
insl
std
gs
out
notb
stc
or
hlt
mov
notl
enter
mov
xor
ret
jno
lea
jecxz
fcomps
test
jae
mov
hlt
gs
inc
out
jmp
push
mov
or
inc
push
rolb
sbb
add
iret
jecxz
xor
fwait
adc
popf
or
and
sbb
adc
jns
xacquire
adc
inc
pop
fwait
mov
test
jge
push
sub
mov
mov
add
test
mov
mov
or
mov
mov
aam
cmp
pop
or
xor
mov
mov
clc
sub
cmp
pusha
jbe
mov
pop
clc
push
out
and
pop
mov
add
and
xchg
cli
adc
cmp
outsb
adc
or
int
mov
out
loope
xor
fdivs
jge
mov
imul
mov
ds
repz
push
sub
out
mov
pop
mov
movsb
inc
fisttpll
mov
idivb
mov
test
out
pop
jmp
aaa
std
jmp
movb
mov
xchg
jo
xor
int3
adc
outsb
xor
cli
and
push
addl
inc
dec
jnp
imul
mov
dec
jne
shl
shll
mov
or
mov
test
mov
mov
aad
fwait
mov
mov
pop
mov
cli
jmp
lahf
push
test
dec
ja
rclb
xchg
jl
stos
pop
adcb
int
and
insb
sahf
push
fldl
std
dec
pop
cmp
xor
cltd
inc
test
bound
outsb
xor
or
cmc
sub
loope
mov
pop
movsl
je
add
and
mov
aas
add
int3
mov
rol
sub
jae
mov
jg
orl
mov
xchg
cmp
xchg
rcll
mov
loop
dec
xor
cmp
fadds
xchg
lahf
push
in
leave
mov
loop
das
fidivrs
push
ffree
inc
mov
sbb
mov
lret
jl
adc
ss
dec
subl
fsubrl
push
push
mov
adc
cmp
dec
inc
in
jno
dec
xorl
or
dec
pop
mov
icebp
push
add
push
add
test
test
adcb
mov
adc
xor
sub
insb
cltd
into
cmp
cmp
adc
aad
es
cli
cltd
cmpsb
lretw
cld
fiadds
add
fwait
lods
jo
jge
sub
jnp
mov
adc
std
sub
jb
testl
xchg
pusha
popa
popf
mov
push
popf
pop
movsl
push
pusha
add
xor
ror
mov
mov
add
popa
lcall
mov
pop
mov
xor
push
iret
mov
and
int3
mov
mov
jno
xchg
mov
int
and
stos
and
lahf
sbb
fimuls
dec
icebp
push
dec
push
pop
xlat
addr16
and
push
cmp
cmc
xchg
pcmpeqw
add
jns
popf
inc
iret
sahf
xchg
dec
decb
addr16
out
mov
subl
mov
hlt
sbbl
push
jmp
mov
or
fldenv
sti
hlt
or
and
or
dec
xchg
xchg
and
mov
mov
dec
mov
pop
rcr
call
fisubs
cld
dec
dec
mov
andb
xchg
mov
scas
scas
add
lock
rorb
sbb
dec
leave
jmp
inc
adc
int3
stc
ret
jecxz
mov
adc
xor
lods
sub
cs
fdivr
jecxz
out
out
xchg
lahf
in
xchg
rorl
jns
xchg
sub
jbe
lods
movsl
or
add
and
je
repz
sbb
dec
mov
mov
pop
shlb
inc
dec
or
sbb
fildl
aad
test
add
jge
and
adc
fstps
movsb
xchg
fs
mov
std
mov
insb
add
mov
enter
or
push
test
xlat
ret
int
jne
cli
and
sbb
dec
add
sbb
stos
clc
gs
js
imul
pushf
push
mov
es
imul
adc
push
sub
rorl
adc
push
lahf
jnp
push
xchg
incb
cmp
enter
mov
inc
jns
cmp
inc
pop
mov
lods
cs
add
shrb
xor
shl
imul
inc
cmp
sub
pusha
lahf
out
lcall
cmc
lret
cwtl
imul
bound
xor
mov
shr
push
imul
pushf
std
pop
cmpsb
fdivl
mov
dec
aam
rcrl
push
repnz
out
push
gs
and
in
mov
inc
push
fnstenv
mov
clc
test
jae
inc
sub
sub
dec
xchg
js
mov
nop
xlat
inc
jbe
push
push
jb
or
jne
and
add
sbb
mov
pop
imul
jecxz
adc
lgdtl
hlt
xor
xchg
sbb
sbb
and
pop
sbb
or
sahf
pop
insb
cld
adc
int3
add
pusha
enter
cli
gs
out
loopne
sbb
dec
movsl
push
mov
mov
rep
jge
incl
cmp
roll
add
mov
sub
mov
xor
inc
cmpsl
push
push
mov
iret
adc
in
push
cmp
ss
out
mov
fisubs
jb
stos
mov
subb
dec
mov
push
sub
fcmovu
sbb
test
jnp
and
mov
fisubs
sbb
das
lahf
jbe
jae
xchg
lock
or
mov
lea
fdivrs
dec
fs
lcall
popa
lock
nop
lretw
cmp
pop
subl
cwtl
test
fstp
push
jmp
push
sub
or
addb
mov
and
add
xor
lcall
test
or
adc
and
jp
and
aaa
push
xchg
adc
fidivrl
mov
pop
jb
stos
lea
mov
inc
stos
and
jno
push
xchg
mov
data16
out
mov
xchg
ljmp
jnp
test
cmpsb
out
mov
pushl
loop
cmpsl
xlat
adc
dec
out
stos
arpl
movsb
adc
jnp
jno
sti
adc
push
inc
roll
lahf
test
in
mov
inc
jo
mov
xchg
cmpsb
ss
cmp
push
and
jmp
jp
push
ljmp
sbb
jae
jb
push
xchg
int
repz
insb
push
inc
fisubs
aaa
inc
mov
push
in
cwtl
test
gs
imul
cmp
push
add
mov
jmp
jp
negb
jl
inc
adc
or
mov
cmpsb
jle
xchg
movsb
pcmpeqw
into
icebp
inc
arpl
adc
jecxz
adc
dec
test
add
ds
idivl
xchg
push
and
xchg
push
mov
mov
outsb
gs
test
mov
js
sub
mov
gs
jmp
cltd
icebp
pop
xchg
xor
pop
jo
mov
xor
test
xchg
or
mov
jo
shlb
shll
inc
add
test
or
and
ret
adc
mov
ja
scas
sbb
shrb
xor
faddl
ret
aaa
jmp
pop
es
jge
loopne
notl
mov
sahf
jecxz
inc
push
cltd
aad
jmp
lods
psrld
stos
inc
jno
mov
testl
or
xchg
push
adc
adc
xor
mov
sbb
mov
sub
repz
pop
mov
xchg
add
pop
sbb
es
sbbl
nop
xchg
ds
test
adc
jl
pop
mov
loope
gs
and
jl
sub
outsb
loopne
mov
sbb
popa
fwait
pop
xor
mov
test
pop
push
mov
adc
mov
jecxz
jbe
and
mov
xchg
adc
sarl
in
inc
fldenv
xchg
pop
add
jo
not
mov
xchg
pop
cmp
pop
jp
aas
and
imulb
scas
xchg
fistps
xor
inc
fidivs
in
cmc
xlat
aad
lcall
cmp
xchg
dec
xchg
test
sbb
stos
xchg
je
sbb
jle
jb
shlb
pop
fs
cmpsl
rorb
mov
jbe
inc
adc
jo
mov
js
insb
les
push
pop
mov
mov
mov
neg
push
sbb
mov
add
push
add
push
cmp
or
add
outsl
add
jle
ljmp
push
inc
mov
aas
test
mov
daa
mov
daa
jmp
je
mov
add
ss
bound
and
lret
jecxz
mov
xchg
cmpsl
insb
popf
shlb
test
push
add
movsl
cmp
in
hlt
cltd
mov
fstpt
dec
jo
mov
sar
jns
adc
mov
aad
dec
fstps
stc
into
push
data16
xchg
jne
sub
jle
aas
push
insb
cwtl
mov
and
xor
bound
stos
cli
ljmp
mov
jle
call
or
xchg
xchg
inc
jge
sbb
clc
cli
test
adc
dec
scas
inc
pop
sub
xor
iret
leave
fdivrs
mov
mov
jo
decb
mov
shr
adcl
mov
xchg
loopne
loope
orb
and
aam
mov
and
sub
push
pop
mov
insl
sbb
sbb
mov
daa
int3
cmpl
sub
sbb
das
pop
push
ret
inc
arpl
xchg
lret
push
xor
stos
aam
add
loopne
stos
mov
mov
repz
inc
js
jp
aaa
push
int
inc
pop
nop
inc
iret
cmp
dec
adc
popf
lods
mov
fstpl
fstl
js
test
movsb
lahf
jecxz
pop
or
fs
lock
mov
lea
hlt
sti
das
aas
imul
add
in
fiaddl
mov
insl
mov
cltd
and
sahf
cmp
sbb
stos
enter
call
mov
in
mov
dec
popa
xchg
xorl
cs
pop
aad
clc
pop
fcmovnb
cli
push
add
xorl
addr16
je
jecxz
mov
mov
and
and
or
push
lds
and
test
cmpsl
aad
ret
out
jno
out
inc
pop
loopne
mov
ja
test
cmpsl
out
sub
cmp
jns
cmp
mov
or
push
fnstsw
xchg
jmp
cmc
push
call
sub
fwait
movb
jecxz
sub
mov
faddl
sub
fs
pop
ficomps
ja
jle
sbb
and
imul
push
lcall
scas
mov
sub
ret
popf
rcr
pop
inc
jp
pop
mov
mov
fcompl
mov
push
dec
adc
cld
or
add
std
push
inc
clc
and
stc
or
fidivrl
lahf
lea
pop
sbb
sbb
daa
dec
pusha
lds
mov
jl
aam
sub
rorb
shrb
cltd
test
enter
jg
gs
sarb
pop
fdivs
inc
dec
sbb
loopne
dec
mov
push
idivl
movl
orl
cmp
mov
ljmp
xchg
cli
mov
inc
dec
imul
and
or
outsl
leave
leave
shrb
push
adc
scas
iret
pop
addr16
fcompl
out
dec
fsubrs
std
push
jp
pop
cmp
lret
mov
call
and
jnp
das
push
sub
mov
outsl
fwait
adc
cld
sbb
xchg
popa
push
adcb
cwtl
cmp
into
dec
mov
jnp
mov
fildl
daa
les
popa
xchg
pop
gs
dec
ret
cmc
dec
adc
mov
pop
pop
mov
test
xchg
je
int3
into
mov
cmp
or
cmp
inc
hlt
ss
bound
inc
cwtl
pop
incb
jne
ret
mov
popf
ficomps
xor
cmpsb
dec
push
repnz
cmp
inc
movsb
inc
outsb
and
xchg
adc
pop
mov
sbb
xchg
fimull
fdivrs
add
cmp
or
mov
lock
and
std
call
mov
xrelease
in
jecxz
mov
xor
es
fs
mov
xchg
mov
jns
sbb
jmp
mov
jo
jg
in
shll
pusha
div
mov
andb
bswap
sahf
mov
and
jno
aam
sbbb
in
inc
pop
dec
cmp
or
aas
pop
jl
jecxz
pop
push
and
rol
ret
or
inc
dec
or
out
pusha
pop
test
pusha
and
les
ds
clc
repz
sbb
lods
mov
xchg
aaa
out
lcall
invd
fisubs
mov
adc
insl
push
adc
sub
pop
rcll
lcall
stos
stos
ja
subl
sub
imulb
in
scas
hlt
jle
xchg
test
and
lea
or
arpl
lea
or
imul
ror
mov
fimuls
sbb
in
sbb
in
jl
add
or
data16
cmpsl
pop
mov
inc
push
mov
cmpsl
mov
ljmp
xchg
lahf
scas
sbb
jmp
pusha
in
mov
jb
sahf
sbb
jge
stos
pop
jg
push
mov
shr
mov
jecxz
inc
test
test
std
insb
inc
loop
test
lods
pusha
mov
jecxz
fs
aam
aam
inc
jg
sbb
in
jb
inc
sub
jmp
sbbb
mov
xchg
std
in
xor
dec
aaa
jno
outsb
enter
pusha
mov
adc
sbb
mov
shrl
or
xchg
clc
das
mov
out
adc
adc
jecxz
and
sbb
cmp
and
add
pusha
sahf
push
int3
scas
mov
test
xor
xor
mov
lret
daa
sahf
imul
jnp
jmp
sahf
mov
xor
lock
daa
sbb
or
jbe
push
jmp
mov
loopne
mov
popf
xchg
repnz
mov
or
enter
push
xor
xchg
inc
loopne
pop
aas
clc
int
ss
fiadds
sbb
mov
cmp
xor
lahf
hlt
repnz
cwtl
xor
lods
hlt
jne
iretw
loop
imul
sub
mov
inc
shlb
shll
or
mov
xchg
sbb
sbb
out
outsl
fwait
lret
insb
cli
fadd
mov
cltd
xlat
test
cmp
jp
sbb
or
test
adc
mov
cli
push
out
dec
movsb
dec
add
scas
aas
jo
mov
push
int
lret
xor
rcl
pop
icebp
cli
and
jne
push
repz
shl
push
and
adc
stc
pop
stos
dec
out
jl
inc
inc
decb
add
aad
sub
ret
imul
int
mov
daa
fs
mov
hlt
adc
xor
sub
mov
jg
fldcw
ljmp
pop
stc
lcall
cmp
loopne
adc
and
into
xor
mov
enter
sub
jno
xchg
bound
mov
mov
mov
subl
or
pusha
pushf
xor
lldt
xchg
jp
mov
les
mov
jp,pt
outsb
fsubrl
addl
cmpl
cmpsb
inc
jge
insb
fistl
add
bound
in
or
pop
sti
fs
dec
pushaw
add
aaa
loope
loop
and
inc
jge
xor
call
enter
push
dec
rol
insl
mov
mov
fidivrs
pop
mov
shll
outsb
xor
and
out
in
jp
xlat
mov
sbb
xchg
sti
pop
add
or
and
xchg
fxrstor
int3
insb
iret
fdivrl
push
adc
adc
xorl
icebp
hlt
mov
fildl
push
divl
or
cwtl
pusha
push
push
add
pop
aam
or
jge
pop
push
idiv
cmp
syscall
and
cld
xchg
adc
inc
loope
shl
repz
mov
loopne
inc
aam
push
inc
nop
bound
jns
xor
xor
add
mov
lret
mov
pop
dec
cmp
mov
outsl
ret
movsl
pop
xchg
out
icebp
and
stos
into
inc
jmp
cmp
std
cli
add
adc
cwtl
data16
push
mov
and
and
inc
sub
stc
ds
jae
pusha
push
lods
lcall
lret
insb
sbb
aam
dec
lret
outsl
fs
push
je
adc
rclb
lahf
dec
pop
mov
adcl
mov
cmc
jmp
cltd
pop
dec
adc
in
pop
and
fistl
add
fmulp
jo
push
repnz
out
je
bound
inc
fnstenv
pop
test
or
test
and
lahf
out
ljmp
xor
cmpsb
pop
mov
js,pt
enter
push
xchg
jno
repnz
sbb
stos
mov
lds
daa
mov
ds
sub
aam
scas
mov
stc
push
add
adc
dec
test
xchg
out
repnz
shll
push
and
std
mov
rcll
or
mov
out
rol
dec
mov
adc
mov
out
mov
xlat
jle
push
popa
xlat
xor
cmc
out
adc
loope
ljmp
ficomps
lret
push
rol
push
movsb
or
sahf
cwtl
mov
test
cwtl
movsl
arpl
and
imul
imul
cmp
repnz
insb
pop
sbb
out
cmpsl
cmp
in
cmp
mov
mov
sbb
xchg
push
in
rcrl
call
lods
les
jb
cmp
add
cli
bound
rcl
or
test
ret
fistl
inc
repnz
cmp
sbb
push
fists
or
flds
dec
fbstp
cltd
push
sub
mov
dec
sub
inc
ss
gs
push
scas
adc
lods
pop
ja
and
push
dec
int3
sbb
ret
jl
ljmp
adc
mov
mov
xor
cmp
lret
or
dec
fdivl
or
lods
movsl
mov
mov
inc
xchg
daa
inc
and
mov
jmp
dec
leave
pushf
xor
mov
adc
lods
jg
movsbl
pop
push
clc
mov
jb
xchg
into
add
mov
jmp
cmpsb
popa
mov
cmp
cli
inc
loopne
frstor
sub
hlt
cwtl
xchg
push
add
jmp
dec
mov
in
leave
int
push
mov
ja
and
ja
mov
jp
decb
jb
out
adc
aaa
push
andl
stos
push
xchg
mov
insl
push
out
sub
and
pop
loope
hlt
rcl
cmpl
cld
pop
sbb
scas
imulb
xchg
cld
pop
lret
imul
enter
xchg
popa
lret
push
ljmp
mov
add
lods
ds
pop
dec
mov
cld
mov
xchg
sbb
ffree
xlat
bound
or
cmpl
push
dec
jp
lahf
jl
ds
enter
fisubl
out
int3
int
mov
xchg
inc
divb
push
sarl
orb
mov
in
iret
imul
and
jp
cli
inc
inc
sti
shrb
lahf
mov
push
lret
and
sahf
out
imul
inc
push
mov
mov
dec
ret
sbb
inc
hlt
jmp
pop
mov
int
mov
test
rcrb
scas
dec
push
xchg
ljmp
jge
stc
lds
and
and
sbb
cwtl
scas
jae
cmc
sbb
add
cwtl
jl
test
js
jmp
imul
stc
pop
push
mov
jg
or
aas
movsb
testb
sub
push
int3
rolb
push
fmull
repnz
mov
es
inc
lret
insb
push
jg
stos
xor
cwtl
inc
xlat
orb
popa
popf
add
fdivrs
dec
mov
orl
sbb
mov
mov
add
push
lea
inc
and
xchg
xor
add
mov
dec
movsl
sarb
xor
add
rclb
mov
dec
pop
cmp
xor
adc
aaa
cmc
jo
outsl
or
and
fwait
loop
fcmovnb
sbb
out
add
cwtl
add
add
rcll
jmp
fsubrl
pop
out
xor
lret
inc
addl
mov
cwtl
add
cmp
aad
testb
fldl
adc
push
sbb
aas
ljmp
sub
loope
ret
xchg
jno
push
cmc
cmp
pop
jo
inc
ficomps
pushl
push
roll
mov
aad
push
jno
jle
stc
mov
xor
sbb
addr16
js
xchg
mov
ret
pop
xchg
lcall
fadd
loope
mov
lcall
mov
xlat
and
push
sbb
cwtl
mov
mov
std
mov
cwtl
add
mov
sbb
fs
xor
scas
imul
stc
push
adc
or
test
xlat
movsl
jle
cmp
test
sbb
fsub
mov
mov
arpl
repz
sbb
lds
cmp
inc
push
js
mov
mov
mov
mov
push
mov
ljmp
cmp
movsl
ror
test
test
mov
mov
ds
lahf
std
stos
arpl
cmp
ret
push
push
jmp
test
arpl
mov
pop
jmp
add
jne
idivl
lods
sahf
xchg
jns
pop
out
int3
mov
jp
sub
in
stos
mov
xor
mov
imul
adc
jl
aam
dec
fcoms
sub
pop
push
or
ljmp
push
scas
stos
ret
mov
and
add
mov
or
into
jo
sub
mov
or
adc
or
jl
rcr
jae
int3
subl
xor
xchg
out
loop
jno
mov
or
ljmp
mov
out
add
test
hlt
push
mov
cmp
pop
or
add
out
scas
cmp
lret
cmp
push
lret
jae
das
pop
test
test
dec
mov
fdivs
push
push
lods
rcll
fwait
stc
rcrb
pop
dec
jmp
pop
lea
repz
push
sbb
push
aam
icebp
add
stos
sub
fimuls
mov
xchg
movsb
inc
push
movsb
ja
mov
std
fcoms
mov
mov
hlt
jmp
es
sbbb
addb
pop
pop
inc
pop
aaa
inc
in
aas
stos
xor
mov
push
int3
or
loop
sub
aas
mov
inc
lret
mov
in
sub
lcall
push
int
xchg
scas
cli
jge
push
mov
js
lock
in
jbe
inc
imul
dec
lods
jle
aam
push
lahf
and
jl
int
hlt
mov
push
roll
mov
lret
lods
push
xchg
mov
inc
lahf
inc
cltd
gs
dec
dec
add
or
dec
adc
sbb
in
enter
flds
hlt
shl
flds
dec
arpl
push
xor
mov
mov
loopne
bound
iret
frstor
jne
dec
dec
push
sbb
lock
in
movsb
aaa
lret
punpckhdq
sbb
les
mov
mov
std
xor
ds
test
je
cmp
jecxz
or
pop
inc
dec
mov
push
movsl
dec
cmp
jo
inc
xor
in
aas
add
in
call
hlt
test
dec
or
xchg
shll
popf
outsb
cmp
iret
dec
xchg
xor
inc
sub
mov
cltd
or
stos
xchg
add
sub
mov
pop
mov
jae
pushf
push
lods
fdivl
adc
xchg
hlt
idivl
pop
mov
testl
and
pop
mov
ja
add
loop
ljmp
adc
mov
mov
jmp
mov
dec
xchg
das
adc
xor
repnz
repz
loopne
dec
scas
in
cs
dec
ficompl
lret
aad
cli
adc
or
out
fsubrs
sbb
ljmp
lock
rcrl
mov
fdivl
pop
jecxz
outsl
jno,pt
xor
mov
imul
mov
in
outsl
aam
mov
mov
je
jmp
jnp
into
jl
push
je
nop
jmp
dec
test
loop
stos
into
pop
mov
pop
ja
mov
inc
jne
rcrb
fimull
sbb
adc
xchg
icebp
dec
sahf
popa
rorl
insl
mov
mov
lret
out
xchg
mov
xchg
mov
in
jnp
movsb
lock
fidivs
inc
xor
cmpb
lcall
dec
rep
fs
dec
sbb
add
mov
cmp
mov
inc
inc
cli
popa
inc
rcrb
mov
outsl
or
inc
out
ret
fistl
jle
insl
movsb
aad
mov
decb
jno
cmp
in
and
lods
cmp
fstp
sub
out
and
cmpsl
xlat
cltd
mov
or
dec
es
mov
mov
xchg
pop
jnp
paddq
jae
mov
fdivl
inc
in
xor
repz
cltd
gs
add
inc
in
test
in
pop
ret
jb
cltd
add
je
mov
adc
daa
mov
pushf
or
push
dec
aad
mov
pmaxub
or
cmp
daa
or
or
mov
push
mov
xchg
cmp
pop
pop
test
adc
pop
pop
call
ss
out
enter
sbb
adc
mov
xchg
ret
lahf
aam
cmpsl
shll
cli
mov
mov
jo
fwait
test
add
dec
in
push
loope
pop
xlat
mov
sbb
xor
into
inc
int
sbb
sub
subb
sahf
outsl
xchg
jmp
or
sbb
filds
dec
mov
arpl
decl
push
outsl
test
sub
dec
mov
jnp
jns
pop
pop
cmpsb
das
sbb
pcmpeqb
shll
mov
mov
cs
jno
je
sti
and
mov
mov
and
stc
ss
jbe
in
push
or
decb
iret
pop
loope
fildl
cli
mov
in
imul
mov
mov
lahf
fadds
rcll
xchg
jnp
loop
test
cmp
rcl
cmc
xor
pop
adc
sahf
das
xlat
cmc
mov
ja
mov
jmp
add
aad
cmp
ret
arpl
mov
sarl
ds
sub
outsb
add
inc
stos
test
scas
insb
and
daa
mov
mov
ds
nop
dec
iret
mov
popa
dec
push
into
repnz
mov
mov
mov
ds
insb
cs
cltd
test
push
mov
flds
flds
cvtdq2ps
cltd
jmp
xor
inc
in
ss
inc
orl
stos
mov
sbb
xlat
add
imul
pop
push
in
dec
jbe
in
push
adc
inc
je
test
push
pop
mov
loopne
jg
rolb
pop
sbb
aam
mov
lea
sub
pop
aam
dec
mov
ret
add
push
adc
insl
daa
fs
lret
sbb
das
dec
stc
imul
frstor
mov
aad
mov
iret
sub
rcll
xchg
ret
jmp
ja
movsb
call
mov
imul
jo
popf
dec
out
mov
xchg
jmp
lret
sub
gs
iret
lods
lret
ss
in
add
insl
aad
sbb
cmpsl
xchg
outsl
cltd
inc
shll
adc
call
mov
frstor
adc
push
mulb
xor
sbb
stos
shr
adcl
cmp
loope
into
mov
cmp
fists
enter
xor
scas
div
andl
jge
cmp
subb
push
mov
add
push
xchg
xchg
add
or
jg
push
rorl
test
inc
lret
jge
popa
sub
pop
add
nop
jno
pop
leave
pop
push
data16
jecxz
iret
ret
inc
shlb
mov
jb
shll
mov
int
fs
mov
add
loop
pop
aad
arpl
push
mov
loopne
aam
jge
js
mov
and
pop
adc
in
imul
loopne
in
test
pop
xchg
and
iret
pop
sbb
in
out
pop
cmc
iret
mov
sarl
ret
push
jmp
lret
stos
pusha
add
pop
mov
or
aas
jae
mov
inc
aas
lds
jle
dec
je
jge
mov
arpl
pop
inc
push
insl
inc
xchg
lods
aad
inc
incl
sub
push
nop
lahf
outsl
sbb
imul
sub
mov
negl
xor
push
jno
adc
mov
pop
add
mov
xchg
push
jg
cwtl
lahf
sub
sub
or
inc
mov
loopne
xor
arpl
popf
jae
int
push
sub
andb
and
pop
jmp
sti
in
enter
int
push
iret
iret
pop
movlps
sbb
rcll
xor
mov
movsl
mov
or
cmpsl
push
dec
decl
call
cmpsb
rcr
xor
jmp
push
sub
insl
jae
fdivl
adc
xor
movsb
and
pop
in
sub
enter
pop
imul
xchg
cwtl
inc
lods
mov
or
je
clc
outsl
mov
repnz
lret
idivb
pop
cmp
nop
fidivrl
fwait
rolb
mov
mov
stos
je
push
inc
jge
scas
shrl
cld
rorl
xchg
cs
lcall
and
dec
in
imul
mov
jecxz
icebp
dec
pop
pop
ret
add
pop
ret
add
leave
mov
push
mov
enter
push
cmp
nop
pop
sub
fldt
es
in
mov
xor
movsb
fs
jae
dec
fcoms
nop
inc
mov
pop
jecxz
sbb
adc
mov
sub
aas
divl
pop
xor
lods
pop
outsl
sbb
das
mov
loop
xchg
mov
out
sub
inc
stc
push
outsl
rol
cmp
neg
jge
lock
dec
adc
daa
sahf
xchg
jecxz
dec
out
cmp
test
icebp
mov
js
test
icebp
pop
pop
test
sbb
pop
inc
mov
js
insb
mov
out
rolb
repz
mov
into
dec
adc
jb
add
mov
clc
mov
imul
jb
nop
add
xor
or
push
sbb
fsubr
sub
int3
fists
xchg
fcmove
add
jg
ss
scas
pop
in
sub
and
lret
dec
jbe
pushf
inc
cmpsl
mov
shll
addr16
out
addl
pop
movl
add
xor
cmp
xor
leave
jne
stos
dec
lea
mov
fistpll
or
mov
call
into
arpl
cmp
adc
xchg
mov
pop
cmp
popf
movsl
push
pop
adc
mov
arpl
gs
jnp
sub
stos
jmp
jmp
sub
daa
mov
sbb
mov
inc
js
inc
add
iret
and
jns
xor
xlat
sbb
ret
mov
pop
gs
xor
push
test
jno
jnp
je
mov
insb
dec
jb
daa
add
test
roll
aam
pop
mov
jg
loopne
das
sar
mov
mov
loope
test
jle
xorl
ds
imul
or
nop
pop
mov
mov
ss
and
inc
nop
adc
mov
xor
mov
jo
inc
aam
jp
xchg
mov
push
movsl
fucomp
out
xchg
add
jne
mov
loopne
rclb
mov
and
sti
xchg
lods
xor
push
aaa
rcrb
cmpsb
inc
clc
adc
popf
aaa
out
jbe
in
out
push
out
lods
cmp
push
stc
sub
sahf
cmpsl
xor
mov
mov
sbb
hlt
inc
dec
loop
cmp
push
fidivrl
outsb
ss
out
insl
rcll
inc
popf
insb
jo
std
popf
mov
arpl
add
sub
mov
aaa
jecxz
inc
fcomps
dec
ja
sub
andb
iret
mov
ljmp
xlat
cwtl
cmp
clc
test
mov
shl
in
mov
cld
enter
adc
and
rorl
sub
loope
mov
or
mov
lds
xchg
pop
ret
imul
mov
jno
dec
mov
fisubs
or
dec
pop
fisttpl
daa
sbb
out
xchg
into
repnz
shl
add
fildll
ret
mov
push
aaa
mov
into
add
push
xor
and
sbb
movsb
and
mov
ret
pop
shll
mov
xchg
mov
jb
cmpsl
cli
sub
xor
and
out
jbe
lahf
inc
pop
push
jns
mov
hlt
ds
push
ret
add
aam
int3
mov
pop
sti
mov
jno
aam
fnstcw
out
mov
std
repz
jge
aaa
xchg
aad
aaa
cmp
pop
push
filds
hlt
jo
dec
xchg
cmpsl
jnp
sub
addb
pop
or
add
loop
mov
xorb
lock
and
pop
adc
arpl
addr16
sahf
cmpsb
pushf
aas
jecxz
and
aas
dec
shlb
adc
push
cmp
sub
fisubl
adc
inc
mov
and
xor
pop
push
jle
repz
mov
and
pop
out
ret
out
iret
jno
dec
xchg
cmp
inc
jne
xor
fistpl
ljmp
andb
pop
bound
jae
negb
shl
adc
push
mov
aam
clc
push
sbb
push
sbb
cmp
data16
mov
in
push
rcll
cmp
and
inc
mov
dec
mov
sahf
xchg
dec
negb
cmp
or
icebp
mov
cmpsb
add
dec
mov
dec
inc
icebp
jb
addl
dec
push
movb
or
push
adc
mov
mov
xor
adc
xor
jns,pt
mov
arpl
jp
aam
fs
sbb
in
imul
mov
jp
dec
push
pop
add
adc
int
js
lcall
jns
in
inc
aas
push
cmp
xor
and
mov
inc
sbb
add
popa
xchg
mov
jp
sahf
lret
ret
mov
icebp
lcall
rcr
or
std
adcb
inc
sbbl
in
aaa
mov
push
xor
lea
mov
push
scas
orb
int3
pushf
sbb
pop
push
mov
push
adc
jne
xchg
jnp
shrl
jmp
jmp
addr16
pushf
push
jmp
in
sub
out
outsl
mov
adcl
stc
andl
xchg
mov
inc
inc
insl
add
decb
ret
jl
and
cs
pop
or
xor
pop
cmovno
test
and
jle
or
pusha
fbld
in
xchg
addr16
push
aaa
pop
xchg
imulb
adc
inc
insb
test
scas
stc
jo
fisubs
mov
pop
mov
mov
cltd
add
mov
popf
pop
shlb
ljmp
dec
in
or
push
dec
daa
cli
dec
pop
and
dec
shlb
sti
ds
cmp
jo
stc
enter
fs
or
add
xchg
mov
push
push
inc
sub
lret
sbb
fcomps
fdivrp
sub
jge
pop
sbb
daa
imul
ds
mov
pop
jecxz
out
loop
push
into
cs
sub
je
add
daa
stc
cmpb
ja
into
call
divl
push
ljmp
ss
jns
sbb
sbb
mov
and
aas
fldcw
pop
pop
add
in
push
push
arpl
push
push
jne
pusha
adcl
dec
mov
sub
xor
test
inc
outsl
jnp
test
addr16
icebp
es
push
mov
lods
adc
jo
shll
mov
out
ret
movsb
pop
inc
push
mov
cmp
stos
call
push
into
cmp
arpl
adc
jne
arpl
xchg
mov
mov
rcl
rcr
test
out
sbb
add
pop
mov
inc
dec
inc
cmp
jg
sub
dec
jecxz
or
loop
xor
or
dec
pop
or
push
sti
and
pop
and
cmpsb
cmpsl
add
fsubr
stos
xor
lock
mov
jmp
push
mov
mov
outsl
popa
sub
push
std
in
dec
cmp
or
cmp
pusha
ljmp
aad
sbb
loop
cmc
or
je
stos
mov
mov
ljmp
jle
arpl
add
push
insl
inc
in
mov
cmpsb
in
xor
hlt
jno
or
xchg
pop
add
push
inc
xor
mov
mov
jns
test
mov
in
push
or
adc
out
mov
adc
ss
mov
adc
sub
aam
cltd
std
push
push
push
push
dec
fistpl
cmpsl
dec
out
jns
outsl
cmpsb
imul
and
cmp
dec
add
push
mov
push
gs
repz
lcall
cmp
outsb
shrb
cmc
mov
pop
push
iret
pop
xor
addb
les
movsl
stos
add
xchg
out
cmp
gs
sub
mull
out
std
pop
mov
hlt
jno,pn
test
rcll
mov
pop
mov
mov
or
ja
lds
cmp
js
mov
jbe
ret
xchg
sahf
and
pop
loop
or
jecxz
mov
xor
fldenv
call
push
movsb
cmp
mov
data16
mov
orb
push
pop
push
xor
xchg
std
enter
negb
inc
lock
daa
mov
popf
shrb
mov
movsb
or
ds
insb
and
popa
rcrl
and
insb
sbb
cmp
fstps
adc
fwait
or
cmp
pop
pusha
shlb
xor
ds
fcmovu
fsts
scas
adc
stos
shrl
and
in
add
adc
iret
cltd
mov
sub
lods
push
or
imul
arpl
rep
push
jecxz
jge
pop
aad
xor
mov
adc
xchg
popf
cmp
mov
jo
imul
bound
xchg
and
mov
loopne
inc
pop
test
stos
mov
xlat
inc
inc
les
and
push
mov
int
mov
and
fistl
out
mov
orl
mov
pop
in
sbbb
dec
add
aaa
movsb
mov
sti
xchg
push
popa
adc
xor
clc
aas
cmp
pop
outsb
dec
imul
xor
lret
bound
imul
sbb
and
jae
lea
jb
xchg
xor
adc
dec
andb
aam
daa
gs
push
xchg
or
jecxz
xor
cmc
add
int3
adc
xchg
stos
jo
pop
imul
outsb
push
jp
push
push
pop
jle
push
add
pop
mov
cmp
popa
leave
test
xor
pop
and
sub
iret
popf
or
sbb
lret
cmpl
jnp
out
ljmp
inc
pop
mov
xchg
and
pop
pop
movl
cmp
or
enter
and
cltd
push
mov
packssdw
repz
stos
leave
outsb
or
inc
sbb
fmull
push
xchg
pop
fistpll
xlat
jecxz
cltd
cmp
mov
scas
gs
scas
inc
pop
cmp
orb
testb
pop
pop
dec
push
sub
test
pop
and
or
jmp
ds
dec
jae
pop
fsubr
push
je
ret
addr16
push
inc
fs
shlb
xor
das
jno
cmp
ret
sti
mov
mov
pop
cwtl
popf
dec
nop
loop
xchg
fcompl
sub
cmp
aam
fiadds
or
mov
loop
push
cli
call
ret
bound
jecxz
cmp
stos
push
fucomi
idivl
add
lods
xchg
fsubs
cmp
inc
add
push
sahf
push
mov
out
xchg
int
xchg
ret
insl
mov
mov
sbb
inc
inc
enter
and
imul
jmp
mov
pushf
fdiv
out
sbb
jo
jecxz
scas
or
xor
sub
sti
pusha
clc
sahf
jecxz
cmp
es
fnsave
std
xor
fildl
ret
mov
nop
les
xor
js
xlat
lods
mov
xor
bound
aad
xchg
xchg
xor
or
lcall
insb
rcl
xchg
out
in
test
mov
arpl
jmp
cmpsb
repnz
xchg
mov
push
fmuls
and
lret
add
popa
xchg
fscale
imul
lahf
add
les
xchg
movsb
pop
insb
mov
fisttpll
sbb
jbe
mov
push
sub
das
adc
xor
les
inc
les
pushf
sub
imul
lock
mov
je
jg
xor
in
fistps
pop
xlat
lret
add
or
repz
mov
lods
or
flds
clc
lcall
sub
sbb
leave
daa
push
push
test
es
aad
jo
pop
addb
mov
push
mov
sub
sub
fwait
cmpsb
xlat
pop
push
out
nop
repz
inc
adc
add
ss
sbb
and
or
daa
and
lds
call
insl
test
xchg
mov
cmp
mov
add
cmp
icebp
mov
or
pop
pop
jnp
mov
mov
cmpsb
cmp
insl
or
push
sub
jecxz
jp
mov
cli
xlat
popf
movsl
lcall
xchg
negl
jmp
loop
dec
mov
loopne
stos
jmp
test
sarl
in
adc
dec
cwtl
mov
shlb
mov
cmp
sbb
gs
mov
add
repz
xor
ja
push
stos
ret
fxch
stc
xchg
aas
shlb
pop
push
mov
cmpsb
lret
repnz
xor
aad
jl
aas
arpl
add
scas
dec
add
xchg
mov
and
mov
pop
lahf
cmpb
xchg
bound
fucom
mov
mov
cmp
jle
test
mov
test
xchg
push
daa
mov
jns
xor
pop
xchg
mov
outsb
scas
imul
mov
push
pop
std
call
xor
adc
sub
outsl
push
cmp
lret
sub
inc
fdivr
ret
jb
xchg
gs
mov
adc
scas
fistpl
or
js
jo
and
dec
cmp
and
les
in
je
and
mov
inc
scas
sahf
mov
icebp
jle
cmp
ret
inc
je
fsubrl
fistps
sub
jno
into
call
inc
lods
pop
fs
iret
or
xchg
mov
mov
inc
mov
mov
and
aas
or
adc
aam
scas
push
lcall
xchg
jnp
mov
shrl
cwtl
ret
push
xchg
shlb
add
cmpsl
cld
inc
or
iret
test
outsb
pop
pop
jno
push
cwtl
iret
push
nop
dec
lods
bound
std
call
daa
mov
sbb
popa
in
adc
lds
es
scas
pop
and
test
into
outsl
sub
lcall
mov
sub
xchg
lds
mov
cld
aam
std
sbb
adc
cmc
push
push
push
or
lret
mov
aas
repnz
add
lock
or
cmpb
jno
xchg
xor
ret
insb
icebp
outsb
in
cwtl
cmp
mov
sbb
mov
popf
mov
or
and
pop
xchg
mov
fs
sti
dec
xor
movsl
jmp
cli
lret
loop
fcomps
in
pop
arpl
aad
mov
xor
mov
pop
dec
and
jle
test
loopne
mov
test
push
out
jno
cmpsl
repnz
repnz
jo
xchg
shrl
fbstp
xchg
pop
pop
enter
aas
in
xchg
cld
or
jne
pop
sbb
out
add
icebp
cmpsl
stc
sti
test
ret
pop
enter
fdivrl
pop
fwait
xchg
mov
enter
stos
aam
jae
push
mov
lahf
nop
inc
xchg
fidivrs
idivb
jl
pop
cltd
std
js
or
mov
sub
dec
fsts
and
pusha
insb
jne
notb
lods
jne
and
mov
inc
pop
mov
cltd
jecxz
cmpsb
in
in
iret
push
xchg
sbb
xor
dec
add
icebp
aad
cmp
sbb
cs
mov
xchg
xor
pop
lods
or
mov
and
jno
enter
mov
push
mov
fstpl
outsl
dec
jg
dec
mov
orl
out
push
es
lret
leave
xor
xor
mov
inc
sbb
push
push
movsl
outsl
out
pmaxsw
test
inc
roll
pop
dec
cmpsb
inc
inc
jo
loopne
cmpsb
mov
sub
sarl
pop
sbb
lea
iret
shrl
adc
mov
pop
or
in
loop
add
sar
dec
dec
inc
pushf
jge
shr
stos
and
sbb
add
lods
in
movsl
adc
mov
callw
fidivrs
sbb
mov
and
div
movsl
pop
push
or
mov
inc
jae
sub
mov
push
sub
cmp
xor
lods
ret
cmp
inc
popa
jmp
and
cmp
adc
scas
fldcw
sub
fildll
loope
xchg
push
sbb
pop
scas
mov
and
push
test
push
fcompl
push
mov
xor
fs
dec
aas
push
enter
pop
sti
jae
cmp
cmc
sub
cmp
int
and
jp
jb
pop
imul
test
mov
ss
fucomi
pushf
lahf
sub
cmp
in
mov
out
mov
and
push
dec
out
mov
insb
push
xor
xchg
rcll
in
dec
or
dec
pushf
push
xor
push
test
iret
scas
fucomp
push
out
aad
pop
mov
in
mov
pop
mov
mov
imul
pusha
sub
pop
inc
jae
ror
pop
fisubrl
mov
insb
inc
xor
add
ret
push
shl
add
inc
xchg
push
push
xor
orb
loop
xchg
jo
orb
xor
jae
fs
pop
xor
sub
negb
clc
dec
fcomip
ret
jmp
xor
pop
ja
push
lahf
jl
jp
icebp
das
adc
push
testl
flds
lods
clc
cmp
inc
pop
test
xchg
bound
or
in
xor
jnp
cmp
inc
iret
mov
test
push
dec
lret
data16
xor
in
xor
enter
inc
lods
adc
frstor
dec
and
pop
negb
les
das
jl
push
insb
out
xchg
mov
pop
adc
out
dec
push
enter
jbe
cld
ja
and
sub
aas
popa
ss
shl
aam
popl
negl
jmp
mov
lods
divl
out
sti
mov
outsl
addl
sub
popf
xchg
xor
cld
icebp
mov
cli
scas
cltd
add
mull
ja
fwait
insb
inc
dec
xchg
jge
scas
es
sub
mov
pop
sbb
out
mov
mov
out
cmp
and
dec
lds
inc
and
das
cli
aas
sub
mov
push
ret
add
orb
std
outsb
int
out
mov
pop
out
sti
sub
dec
lret
add
pop
xchg
ret
loopne
or
push
or
hlt
lret
aam
fs
jge
ljmp
shl
jb
push
lods
add
xor
mov
push
das
add
mov
js
aad
sub
mov
clc
sub
inc
call
into
loope
leave
xchg
add
inc
xchg
cmp
aam
add
cld
xor
sahf
jmp
and
sahf
aad
sub
ss
bound
dec
repnz
imul
in
fsub
pop
push
jg
adc
fwait
sub
je
scas
fcomp
mov
push
loopne
jmp
mov
test
movsl
scas
int3
pusha
add
adcl
es
xor
imul
sub
or
adc
add
out
ljmp
rorl
add
xchg
imul
outsl
lret
sub
jge
dec
lret
test
test
pop
and
ds
adc
inc
add
stos
out
loop
mov
nop
bound
mov
dec
add
test
scas
js
or
fs
xorl
cwtl
cmp
sbb
cmp
inc
adc
jecxz
xchg
xchg
jns
jl
xchg
sub
popf
in
pop
push
arpl
jae
sti
lea
gs
fwait
lods
push
arpl
mov
stos
icebp
leave
loopne
xor
mov
mov
daa
cltd
cmp
or
jb
ja
mov
scas
cmpl
adc
pop
fs
cmp
push
mov
sub
add
bnd
sbb
imul
xor
cmpsb
xchg
lock
xchg
mov
mov
subl
movsb
pop
push
xor
lret
add
add
js
mov
pop
and
adc
lds
cmp
imul
inc
lret
std
popa
cmp
data16
and
push
or
std
jbe
sbb
insl
arpl
fisubl
cmp
cli
or
ljmp
pcmpgtd
mov
stos
inc
fisttps
add
in
pushf
pop
lea
or
loop
fnstsw
adc
push
push
add
fucomp
cmp
mov
imul
pop
pusha
lcall
nop
and
ficompl
fisttpl
cmp
inc
pop
aam
mov
adc
inc
repz
pop
and
mov
cmp
push
xchg
or
test
icebp
rcrl
sbb
nop
xchg
add
dec
lret
fstl
and
sub
cmp
cmp
inc
test
cmp
xor
outsl
cli
mov
popa
cmp
push
mov
jnp
fistpll
jl
push
xlat
sbb
and
jle
pusha
test
daa
mov
daa
cltd
sbb
lcall
jbe
lea
cmp
sub
mov
sti
std
pusha
fsubrl
cmp
cmp
pop
sub
sub
sbb
dec
mov
mov
jae
jg
mov
inc
pop
and
movsb
mov
loop
cmp
xlat
mov
jnp
mov
jl
mov
shlb
push
lea
xchg
sar
ror
dec
ret
addr16
rolb
movsb
les
sbb
xchg
bound
out
cli
pop
xor
cmp
dec
xlat
sbb
mov
mov
mov
out
push
ret
nop
add
cld
dec
je
imul
mov
mulb
lea
fiaddl
xor
insl
ret
dec
mov
out
into
loopne
xchg
sbb
cmp
cmp
mov
push
xchg
ds
out
inc
or
scas
sahf
mov
fsubl
mov
mov
aam
dec
fldcw
or
les
mov
enter
jnp
cltd
inc
cmp
sub
cs
dec
push
add
fldcw
mov
pop
incb
lahf
mov
cmpsl
sub
push
adc
cltd
movsb
xlat
fcmovnb
call
out
sbbb
bound
iret
xchg
add
call
push
nop
outsb
in
leave
xor
and
push
inc
sub
push
in
inc
fcomps
repz
ljmp
xlat
sbb
mov
mov
inc
mov
into
int3
icebp
and
or
ss
repnz
cli
or
nop
lcall
stc
sub
mov
ss
inc
mov
inc
jge
daa
and
dec
mov
jne
out
inc
sar
sbb
cld
shll
pusha
daa
in
shl
outsb
dec
out
cmp
negb
fnstenv
jns
mov
inc
cltd
fcmovnbe
not
fistl
or
pop
cmp
cmp
pop
cwtl
mov
fsubrs
in
enter
fildl
ljmp
out
daa
es
addl
sbb
dec
dec
xchg
test
sub
mov
lock
mov
movsl
mov
push
popa
jle
sbb
mov
mov
iret
push
test
stos
rcrl
shrl
or
xor
popf
pop
add
imul
popf
int
repz
js
cld
outsl
data16
gs
into
mov
mov
xor
pop
cmpsl
test
mov
into
cmp
mov
rorb
jle
sar
add
push
pop
inc
sar
ds
sbb
fistps
cmp
push
andl
lret
dec
jno
out
jbe
lret
faddl
enter
sbb
fldl
pop
je
xchg
mov
push
out
xor
sarl
shlb
xlat
or
repz
pop
ret
lret
fdivp
mov
or
vandpd
inc
sub
fstp
fnstcw
mov
sahf
ds
sbb
jnp
xor
dec
xor
fldenv
enter
pop
out
inc
test
lods
clc
mov
shll
push
hlt
fsub
sar
add
xor
pop
hlt
sbb
repz
sbb
mov
mov
xchg
sarl
imul
pop
mov
mov
mul
or
inc
mov
push
mov
mov
adc
movsl
jne
sub
movsb
inc
arpl
sbb
jb
mov
mov
push
mov
mov
in
in
lcall
test
lock
or
das
adc
xor
or
movsl
inc
addr16
lods
inc
aas
aad
pop
cmpsl
stc
xor
and
sub
add
cmp
push
push
dec
mov
imul
insb
outsb
insb
and
jmp
jo
inc
push
call
mov
pusha
push
js
mov
inc
add
in
push
test
lcall
ret
fcmovnu
into
sub
add
push
cltd
xor
popf
xor
sbb
sub
sub
mov
push
movsl
test
fistpl
or
loop
gs
scas
fstl
dec
push
aaa
lret
dec
into
int3
std
cmpb
jns
jnp
adc
jmp
xchg
sub
jg
fildl
push
or
mov
push
add
push
clc
mov
cmp
mov
xor
push
jmp
ljmp
dec
sub
fsubrl
test
mov
sbb
jecxz
call
movsb
push
in
ja
jb
inc
cmp
mov
or
lret
jae
pop
jbe
mov
inc
cld
dec
xor
push
stos
sbb
hlt
bound
mov
out
lods
xor
pop
and
bnd
sbb
jae
daa
adc
push
dec
shrb
inc
pop
adc
aad
scas
mov
aaa
jbe
out
popa
bound
cmp
sbb
arpl
out
call
cmp
jne
imul
mov
and
inc
push
lods
cmp
lock
or
xchg
pop
into
movsl
push
cld
adc
and
dec
mov
push
lods
xchg
jne
lea
fwait
add
sbb
and
mov
std
aaa
stc
rcrb
mov
pop
outsl
push
aam
cltd
js
in
les
sarb
jge
sbb
jns
mov
addl
or
adc
push
add
pop
nop
jno
xor
push
insl
and
out
clc
sub
pop
mov
xchg
adc
add
add
test
aaa
mov
sti
add
repz
cld
and
cwtl
cmp
scas
sbb
int
push
mov
movsl
dec
push
notb
jnp
pop
or
lret
cs
mov
xchg
mov
ror
nop
sbb
sbb
push
lock
push
jnp
roll
add
push
cmp
gs
or
mov
sub
stos
lcall
pop
add
outsb
stc
cs
ja
decb
mov
sahf
movsb
jne
inc
andl
jae
dec
add
xor
mov
aas
jecxz
lock
imulb
stc
cld
jge
icebp
repnz
mov
inc
jmp
out
mov
push
fcomp
outsb
mov
ja
inc
fldt
push
mov
movsb
nop
enter
jp
stos
call
cmpsl
push
pop
pop
dec
outsb
and
icebp
fs
and
mov
pop
inc
inc
test
jnp
sub
sbb
xchg
mov
in
daa
in
aam
cli
or
pop
in
and
inc
pop
enter
leave
lret
mov
lcall
cld
addr16
add
dec
push
mov
cmp
out
cmp
mov
push
xchg
fmuls
int3
add
mov
scas
pop
lds
inc
lds
mov
leave
out
sbb
out
rcrl
xor
mov
cmp
pop
sbb
cmp
mov
mov
cmp
inc
test
mov
flds
test
xchg
adc
fsts
jl
pushl
repnz
stos
pop
sarl
push
inc
xor
inc
test
shlb
cwtl
lea
mov
push
cmp
or
mov
hlt
push
adc
out
cmp
xlat
add
insb
mov
lods
out
inc
sbb
mov
sbb
outsb
mov
pushf
cmp
mov
ret
and
cwtl
xchg
dec
aas
mov
sub
mov
push
fwait
mov
scas
pop
clc
mov
pop
dec
decl
xchg
mov
add
je
lds
dec
loopne
lahf
mov
cltd
or
call
mov
nop
cmp
xchg
lea
push
adc
scas
lock
cmpsb
enter
pushf
xchg
loop
pop
adc
sub
clc
push
sub
in
jae
sub
lods
push
jne
mov
les
add
arpl
jne
jp
cli
pop
hlt
mov
cmpsl
fisubrs
pop
iret
adc
ljmp
xchg
fldenv
call
jp
cmpsb
jmp
adc
cmp
and
push
inc
and
repnz
pop
mov
loop
adc
sub
mov
mov
inc
jo
mov
pop
or
sti
mov
push
jno
scas
pop
outsl
ja
xchg
or
mov
pop
dec
add
mov
lahf
ret
inc
xchg
popf
ret
and
push
xchg
enter
lds
shrl
aam
lock
xchg
and
dec
cs
mov
pop
insl
or
out
fstpl
ja
inc
sti
inc
cltd
test
adc
lret
inc
sbb
mov
push
faddl
pop
mov
add
movsl
xchg
into
jnp
gs
insb
dec
cltd
iret
ja
rcrb
movups
xorl
jecxz
fiaddl
pop
cmp
mov
in
pop
mov
jp
xor
sub
sbb
cmp
pop
mov
xor
test
and
mov
cmp
in
loop
insb
adc
in
xchg
stc
ljmp
push
or
pop
mov
dec
cmc
pop
xchg
push
pop
enter
jb
out
out
imul
ret
out
jg
jno
cltd
add
call
loopne
push
fadd
sub
popf
insl
mov
jo
hlt
sbb
mov
push
sub
inc
cmp
pop
repnz
pop
sub
mov
jbe
insl
std
push
pop
lret
sarl
ljmp
cmp
dec
mov
mov
neg
shlb
lods
outsb
sub
xor
push
clc
int3
jbe
loopne
inc
shlb
insl
mov
mov
adc
stos
ja
cltd
dec
scas
popa
push
stc
jne
push
jl
mov
mov
cmpsb
test
pop
sbb
mov
mov
adcl
jb
xor
icebp
and
fwait
add
or
mov
movsl
in
pop
lods
int3
scas
in
mov
push
mov
rcr
mov
je
xor
sbb
ljmp
add
cli
cmp
cmp
fstpt
dec
std
add
mov
ficoml
loope
jp
icebp
inc
test
mov
loopne
cmp
aad
xor
js
test
out
std
add
mov
xor
imul
movsb
call
mov
xchg
xor
pop
cmp
jle
cld
in
sti
jle
pop
fcompp
and
js
imul
jb
divb
sub
out
mov
jns
lahf
jo
mov
shrl
pop
mov
sub
push
cli
dec
out
sub
mov
push
mov
lea
pop
xchg
ficoms
sbb
inc
jmp
lahf
sbb
adc
push
mov
lea
jmp
mov
hlt
mov
adc
inc
dec
mov
arpl
cltd
shr
ret
shll
fs
push
push
push
mov
mov
fs
sbb
push
and
xchg
ret
mov
push
mov
outsl
ss
cld
loopne
dec
inc
stos
pop
fists
mov
leave
out
out
add
rcrb
movsl
push
xchg
pop
lret
cmp
mov
jge
mov
les
add
in
push
insl
jecxz
mov
inc
add
xchg
sub
inc
outsl
aaa
adc
in
aam
jle
rolb
mov
xor
test
stos
push
pop
and
shl
inc
fdivl
add
lcall
mov
test
enter
scas
in
cmc
ror
shll
sbb
add
mov
sahf
adc
xchg
fcomi
and
adc
aas
cmp
in
xchg
pusha
cmc
mov
ret
addr16
in
ja
add
xor
xor
cmp
sub
cmp
les
dec
xchg
mov
pop
lahf
clc
popa
xor
push
fstps
cmp
pop
outsl
mov
int
shll
and
popa
aam
cs
and
mov
test
filds
enter
shll
jns
fs
out
pop
pop
fnstsw
adc
and
xorb
push
scas
movsb
repz
xor
ja
outsl
stos
jle
loope
push
xchg
jge
add
in
cmpsl
add
jns
lods
xor
pusha
cmp
push
lds
or
adc
xchg
aaa
cmpsl
jne
fsubrs
xchg
pop
cmp
xchg
popf
mov
lods
cmc
int
jne,pn
xor
lret
mov
xchg
dec
jmp
stos
orb
orl
mov
sbb
dec
cmp
sbb
mov
push
out
mov
xchg
or
xor
jbe
xchg
scas
jne
mov
jne
or
and
inc
mov
adc
push
loope
out
in
mov
and
push
into
inc
pop
inc
sub
mov
movsb
test
mov
cmp
call
lock
push
rolb
fsubl
adcl
sbb
aad
and
push
std
popa
cmp
es
filds
push
adc
xchg
lea
sbb
mov
sub
mov
mov
mov
xchg
jb
std
js
dec
outsl
xchg
mov
std
ja
orl
sahf
mov
addr16
inc
mov
push
sbb
inc
push
int3
inc
dec
sub
mov
cmpsb
pusha
pop
repnz
cwtl
cmp
ja
insl
jns
or
inc
add
fwait
sbb
data16
sbb
jmp
jmp
inc
daa
addr16
inc
rol
pop
dec
xor
fistl
mov
dec
lret
xor
hlt
inc
mov
jnp
int3
mul
stos
in
lods
dec
icebp
shl
ret
or
pop
push
push
xor
call
or
mov
adc
cmpsb
cltd
pop
arpl
das
sbb
cwtl
into
xor
jno,pn
jae
pushl
pop
mov
fbstp
in
adc
ds
orl
sti
xchg
jns
mov
sub
xchg
push
inc
out
xor
and
mov
inc
sti
std
cmp
pop
sub
add
cmp
gs
sub
stos
imul
imul
or
movsb
or
cwtl
jl
fsubs
or
mov
ja
mov
push
orl
pop
cmp
std
cmp
orb
fmull
in
dec
or
popf
or
popf
rol
ds
std
ret
mov
push
aaa
or
lahf
adc
sar
mov
xor
xor
test
mov
stos
mov
xor
jnp
sbb
pop
cmpsb
mov
aad
incl
rorl
mov
sbb
or
fsubrs
dec
jmp
push
aam
aam
jno
xchg
sbb
pop
sbb
push
addr16
jle
fmul
mov
pushf
mov
scas
mov
xlat
cmc
clc
outsl
add
dec
mov
inc
mov
outsl
adc
mov
adc
sub
out
call
aam
mov
ja
cwtl
sti
lods
inc
stc
aad
pop
push
cli
mov
in
dec
push
mov
push
addr16
sarl
mov
push
test
and
pop
push
and
aam
add
pop
push
sub
popa
mov
lret
push
call
mov
shrb
mov
fmuls
jne
loopne
jle
add
lock
fiaddl
sbb
jo
inc
adc
scas
pusha
add
stc
xchg
popa
mov
lods
lret
movsb
jmp
out
push
pop
icebp
inc
sub
arpl
js
sti
jl
add
sbb
cmp
dec
out
loop
loope
dec
mov
sarb
imul
adc
mov
les
lods
dec
jo
sub
xor
lods
js
push
xchg
mov
jp
aaa
mov
xor
dec
sahf
or
pop
pop
movsl
jmp
pop
or
int
pop
dec
xor
mov
fcom
adc
loopne
cwtl
adc
xchg
jne
mov
ja
inc
pop
testb
add
push
pop
adc
cltd
mov
xor
lods
out
xchg
pop
fdiv
or
test
push
je
add
stc
sub
mov
mov
outsl
fildl
mov
ljmp
aad
inc
lret
or
out
jge
or
sub
cmp
out
mov
div
mov
mov
sbb
add
out
daa
xchg
xlat
inc
test
cli
movsl
lods
push
lods
or
and
rcl
jecxz
fimuls
test
push
jecxz
test
mov
outsb
mov
inc
cmp
pushf
in
xchg
mov
shl
xor
push
add
negb
push
mull
xor
ficoms
test
mov
jle
and
sbb
out
stos
shl
test
mov
aaa
sub
jne
sar
cmpsl
xor
lock
gs
xor
jp
jle
and
fucomi
scas
out
cmp
aaa
lret
lock
dec
mov
mov
cltd
add
mov
mul
xchg
daa
daa
mov
mov
pop
mov
insl
sbb
std
pushf
test
sbb
data16
out
fists
adc
pusha
cmpsb
mov
mov
add
cmp
cltd
jl
pushaw
jb
icebp
xlat
lods
fcmovne
sti
push
sub
in
jo
into
fimull
call
xchg
lods
lcall
or
mov
push
lcall
stos
es
mov
xor
aam
inc
les
push
jl
sbb
loope
fs
rclb
mov
mov
mov
adc
xchg
cmp
add
dec
pop
jno
jne
ffreep
shlb
fsubrl
sbb
div
xchg
scas
sbb
lods
arpl
mov
in
call
sbb
xchg
mov
mov
jmp
std
sahf
shr
push
mov
cltd
jb
cmc
adc
cmp
add
popw
or
or
add
pop
xchg
or
adc
movsb
or
fs
and
pop
sahf
pop
mov
pop
aad
sub
dec
cmpsb
in
adc
mov
push
fisubrl
pop
movsb
mov
mov
repnz
roll
xchg
lahf
cmp
xor
movsl
adc
mov
outsb
sub
jecxz
mov
pushf
sub
jns
enter
sbb
inc
notb
aaa
dec
sub
jae
lret
xor
and
mov
fidivl
mov
outsb
out
in
jle
jp
add
mov
jecxz
enter
mov
pop
jmp
scas
inc
sub
jno
and
or
or
add
popf
push
aas
pushf
inc
cmp
ja
fs
fdivs
int3
sarl
aam
inc
adc
into
sub
or
sub
jb
xchg
mov
out
or
lcall
dec
xchg
jo
jae
shrb
rorb
mov
push
lea
mov
xchg
ja
movsb
adc
and
bound
or
stc
pop
mov
les
pop
mov
jns
ficompl
mov
bound
stos
jmp
xor
xchg
cmp
in
xchg
das
test
add
lods
mov
and
dec
aam
sarl
xchg
lcall
push
scas
sahf
ret
jl
jge
stos
inc
mov
dec
cmp
xor
adc
into
fistpl
js
sti
loopne
pop
and
loop
fidivrs
imul
es
dec
mov
xchg
sbb
pop
xor
and
dec
cltd
or
mov
std
mov
sbb
ret
sub
lar
and
push
movsl
lods
aas
out
clc
xchg
xor
xor
push
push
sbb
mov
pop
mov
fucomp
mov
lods
es
mov
js
push
outsb
in
scas
and
mov
int
ficompl
dec
and
mov
lock
add
mov
push
jle
xchg
mov
push
or
cltd
add
mov
xchg
push
clc
xor
xchg
lcall
cmp
xchg
mov
xchg
pop
and
lret
sub
jle
call
arpl
and
xor
cmp
mov
jp
inc
and
mov
adc
push
or
add
mov
xor
add
xor
push
cmpsl
xor
mov
lea
jg
xor
sbb
arpl
dec
cwtl
ret
call
push
push
dec
jle
jnp
inc
xor
test
imul
xor
push
mov
scas
popf
adc
dec
adc
lea
loope
and
add
mov
fstps
cmpsb
movaps
push
sbb
dec
lds
pop
adc
das
pushf
sbbl
or
add
jae
mov
pop
mov
mov
push
jbe
push
jmp
imul
jb
jmp
aas
mov
add
clts
mov
xchg
cli
inc
add
mov
repnz
push
addr16
insl
loope
pop
aaa
gs
dec
xchg
lods
mov
or
jno
sub
mov
or
mov
pop
pop
into
xlat
hlt
repnz
mov
out
xor
cmp
mov
xchg
lods
rcr
decl
xor
js
out
lret
xchg
mov
and
pop
movsb
movsl
enter
jae
mov
inc
inc
jae
rorl
aam
insl
or
sub
push
jae
rclb
xchg
jns
fstpt
aas
negb
and
test
stos
rcrl
aas
data16
xchg
je
inc
fistl
jne
sbb
jnp
es
sub
xor
notb
and
add
mov
imul
mov
shrl
lds
adc
lea
nop
push
int
loope
imul
les
adc
push
lods
add
cmp
or
mov
and
cwtl
inc
orb
jns
xor
sbb
add
nop
inc
call
daa
adc
mov
xor
or
daa
scas
dec
in
gs
mov
pop
in
icebp
dec
sbb
shlb
arpl
xchg
and
fisttpll
pop
pop
fcomip
jmp
mov
out
pop
mov
insl
sbb
adc
in
bound
clc
and
insb
test
and
add
das
adc
movsb
lock
adc
aas
mov
jo
mov
mov
or
prefetch
insb
jo
std
pop
push
aad
cmpsl
mov
pop
mov
push
mov
inc
icebp
je
push
sti
cli
push
ds
lds
mov
xor
push
push
lock
cs
mov
sub
cld
push
ljmp
cmp
push
dec
lret
xchg
mov
cmp
mov
mov
dec
xchg
stos
in
jp
pop
into
repnz
add
push
aas
add
cmp
pop
jnp
loopne
xchg
insb
xchg
idivb
add
adc
jecxz
aaa
ljmp
test
daa
dec
lds
sub
add
outsl
mov
pop
mov
insl
pop
in
jbe
inc
fs
mov
aas
daa
and
or
pop
test
aaa
cld
mov
push
push
push
jbe
dec
jp
jmp
pop
les
scas
cmc
sub
outsb
rorl
dec
dec
or
sbb
insb
es
pop
daa
rol
lret
or
push
cmpsl
cltd
out
shrb
push
insl
stos
cmpl
or
fiaddl
pop
jle
push
pop
add
cmp
and
xchg
xor
pop
leave
cltd
test
shll
inc
fstpt
cwtl
mov
push
mov
sub
ss
xor
mov
add
cmp
and
nop
pop
jp
fsubp
xchg
dec
hlt
jbe
mov
jge
test
mov
mov
arpl
ja
insb
mov
sbb
rcll
pop
xor
xor
leave
fs
push
jno
stc
data16
cmpsl
sub
icebp
imul
dec
imul
sahf
fwait
mov
or
popa
pop
jg
sahf
notb
imulb
pushf
test
fisttpl
stos
outsl
pop
mov
lret
int3
jecxz
pop
mov
push
xchg
fs
jg
pop
and
or
mov
dec
mov
in
pushf
idivb
or
in
movsb
stc
or
insb
das
das
push
and
mov
mov
inc
add
mov
jno
jne
sub
jns
push
jno
sti
and
out
dec
test
lds
flds
and
scas
mov
repz
sub
or
mov
daa
lcall
sbb
xchg
testb
mov
stos
bound
cmp
out
mov
fistps
mov
test
mov
pop
clc
lea
pop
mov
sbb
shlb
sbb
cltd
mov
push
push
push
cmp
adc
addl
mov
xchg
add
jno
daa
rclb
push
scas
pop
pop
sub
icebp
dec
aad
pop
lret
xor
lods
testl
and
mov
mov
adc
cmp
adc
jecxz
pusha
inc
adc
testl
add
aas
add
mov
cmp
push
movsb
dec
mov
out
xchg
cli
lea
mulb
cmp
jle
les
ss
int
and
xor
jecxz
movsl
int3
lds
imul
and
dec
jg
cmp
test
scas
fisubl
cltd
iret
rclb
cmp
cmc
cli
sbb
cmpsb
inc
hlt
xorb
jp
lods
loope
push
push
mov
mov
pop
cmp
pusha
sub
adc
cmpxchg
jmp
jae
mov
cmp
mov
xchg
cwtl
mov
push
loopne
xchg
jp
int
xor
mov
fisttpll
xchg
mov
mov
mov
popf
decl
lret
jnp
in
sbb
inc
dec
cld
xor
mov
pusha
cmp
jle
cld
add
add
jae
push
mov
jbe
sbb
imul
mov
int
mov
int
pusha
mov
inc
mov
adc
imul
fcoms
jg
pop
dec
in
out
hlt
adc
aas
or
xchg
dec
pop
test
cwtl
fisttpll
pop
mov
sarl
adc
sbb
fdivrs
sti
mov
mov
push
mov
push
push
scas
mov
lcall
mov
pop
sbb
pushf
jg
in
mov
pusha
cmp
jno
outsb
xchg
inc
popa
lret
xchg
cltd
loop
mov
ret
fcoml
mov
leave
lds
out
sbb
in
cmp
and
jb
push
insl
in
mov
shlb
push
enter
or
in
pop
dec
shlb
push
adc
cs
xchg
jecxz
lods
mov
fucomi
mov
out
mov
sbb
test
cmpsb
stos
loop
jp
popa
jo
js
jns
scas
scas
sbb
jno
push
cmp
bound
imul
add
subl
dec
push
dec
xchg
xchg
sbb
clc
fwait
into
in
push
cmp
jae
add
or
or
cmp
dec
outsl
xchg
gs
mov
arpl
xor
lahf
mov
jl
or
mov
pop
mov
xchg
rorb
ljmp
sub
sbb
insb
lods
xchg
test
rcrb
mov
call
adc
pusha
jo
testb
clc
scas
push
fcomps
mov
mov
mov
frstor
lock
jbe
fcmovb
push
jne
loop
mov
fnsave
iret
sub
adc
icebp
add
mov
push
jg
adc
push
add
ss
int
pop
les
pop
adc
in
cmp
pop
sub
aad
xor
add
push
ljmp
test
sub
call
pop
xorl
pop
rcrl
loope
or
aad
sbb
mov
inc
mov
xchg
push
xor
lock
xor
sub
aam
xchg
lock
push
loop
jno
cmpsb
and
fwait
in
cmpsb
aas
movsb
mov
inc
push
jno
pop
dec
inc
jge
inc
cmpsl
test
int3
cld
out
inc
scas
sbb
jmp
and
and
cmp
sub
les
sbbl
cmp
xchg
dec
jb
mov
xchg
loopne
pop
cli
inc
icebp
jb
push
and
stc
sub
mov
pop
adc
test
or
out
outsb
shl
xor
dec
cld
in
jb
sbb
dec
mov
push
stos
pop
ret
add
cmp
push
fildl
mov
imull
gs
outsb
nop
push
lds
or
cmc
arpl
sub
mov
push
jp
xor
mov
inc
pop
pop
pop
cmpsl
negl
subb
jecxz
jl
pop
xor
jge
loope
add
in
jge
fs
out
push
sbb
mov
and
cli
xor
mov
popf
std
xchg
adc
add
mov
daa
mov
push
int3
loop
pop
repnz
and
sbb
in
inc
xchg
enter
nop
push
and
hlt
sub
push
cld
into
push
adc
push
inc
add
sub
ret
push
xor
jg
sub
mov
jno
shrl
icebp
out
cmp
push
scas
pop
test
das
inc
inc
fdiv
jmp
push
xor
cmp
jo
out
pop
xchg
sbb
or
mov
mov
gs
fdivrs
enter
arpl
xor
or
fsubl
aas
push
and
pop
gs
scas
loopne
out
add
jnp
stos
in
in
repnz
ret
clc
leave
out
mov
shrl
jl
mov
js
inc
xor
adc
cmp
jle
push
inc
inc
cmpsl
pop
jo
pop
pop
fmul
pushf
cmpl
add
sahf
xchg
lds
mov
cwtl
in
cmp
dec
pop
stos
shlb
rcr
je
and
roll
push
pop
test
jmp
aaa
cld
pop
iret
addr16
sbb
jnp
aam
clc
ret
pop
xchg
in
inc
push
subb
dec
mov
subb
lret
lods
outsb
cmp
int
inc
dec
inc
cltd
xchg
xor
enter
jne
push
or
sarl
fstps
rorb
repz
loope
dec
mov
mov
fiadds
jnp
xor
out
iret
mov
xlat
dec
outsb
dec
shr
lods
sahf
iret
repz
call
in
cmp
aam
fsubrl
add
or
mov
lahf
push
loope
mov
and
or
daa
lods
bound
mov
shl
mov
mov
mov
cwtl
out
idiv
test
jle
lahf
inc
or
aam
dec
andb
sub
pop
lods
lea
sbb
hlt
mov
jae
loope,pt
jns
or
adc
cmp
pop
cli
in
and
dec
add
jecxz
out
gs
add
outsb
jp
mov
loopne
iret
push
xchg
lret
adc
outsl
mov
or
jle
lock
stos
dec
dec
jle
cmpl
mov
push
iret
xchg
dec
xor
sub
sbb
out
xor
sub
fucomp
sbb
es
loope
cmpsl
xchg
adc
cmp
das
es
xor
xchg
mov
or
xchg
mov
mov
mov
daa
sbb
fisubrs
jne
outsb
cmc
fmull
or
mov
add
jp
push
push
mov
and
xchg
negl
cmp
pop
pop
inc
mov
jg
hlt
fnstcw
push
jnp
or
adc
jl
pop
ds
cmp
popa
loopne
subb
faddl
fstpl
cmp
icebp
pop
ret
add
adc
in
outsb
rorl
int
js
out
mov
push
adc
in
pop
push
jmp
cmpsl
inc
rcrb
gs
addl
cmp
sub
repz
sub
xchg
sub
cmpsl
dec
das
dec
fucomip
sahf
loop
jle
rcl
push
std
fnstsw
inc
pop
pop
xor
cwtl
in
or
and
and
xor
adc
sub
in
xor
push
popa
xor
jle
imul
cltd
scas
or
mov
fisubl
out
cltd
arpl
lods
sbb
loopne
fwait
push
pop
xor
stc
xor
jp
fucomi
cmp
xchg
test
cmpsb
mov
imul
dec
xchg
outsb
out
lods
gs
popa
icebp
adc
mov
cmp
mov
imul
jecxz
push
arpl
mov
xchg
mov
mov
mov
loope
idivb
push
out
xchg
cmpsl
inc
mov
mov
loop
mov
out
test
pushf
mov
lods
andl
push
loopne
je
xchg
xor
mov
mov
cmp
in
adcb
arpl
lahf
mov
orb
xor
imul
icebp
sahf
mov
mov
inc
inc
pushf
mov
outsb
mov
out
jnp
pop
test
aas
sbb
adc
in
aam
cmpsb
ss
sub
jbe
test
push
jge
mov
mov
cli
or
and
out
add
jo
inc
push
aam
xor
outsb
jnp
dec
out
xchg
cmp
xor
lcall
or
ret
movsb
fnstsw
enter
push
xlat
or
jmp
ret
cmpsb
mov
addl
test
push
test
add
or
fldenv
lods
test
aam
pop
mov
rclb
cwtl
out
lds
fs
pop
ret
addr16
xchg
mulb
lods
push
sub
xlat
enter
push
popa
sbbl
jmp
cmp
inc
rorb
mov
jno
and
js
jmp
out
pop
imul
xchg
mov
cmp
xchg
fdivs
loope
mov
and
ficomps
jnp
out
xchg
and
add
push
xchg
or
mov
fldl2e
es
outsb
dec
add
cld
cmp
cmpsl
sbb
and
mov
adcl
xor
jno
mov
pop
je
cltd
jb
mov
add
or
add
add
add
add
add
cmp
lds
insb
adc
out
mov
setno
cmp
lds
insb
adc
lds
insb
adc
ffreep
dec
lret
js
data16
adc
cmp
lds
insb
adc
lds
insb
adc
lods
es
or
cmp
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
stos
js
out
int
add
pusha
add
add
xor
add
add
add
add
add
mov
jge
add
add
sbb
mov
add
add
add
xor
add
add
push
cpuid
cmp
add
add
ds
add
ljmp
mov
add
add
add
add
add
jae
lock
add
add
add
mov
add
add
add
add
add
add
add
aad
roll
add
add
add
or
add
add
add
gs
add
enter
in
iret
jns
inc
add
push
add
add
sbb
add
add
add
gs
add
sbb
add
insl
sub
xchg
add
add
mov
xor
or
popf
inc
add
push
add
add
js
add
add
add
sub
add
adc
add
sub
add
add
js
out
add
push
add
add
in
add
add
add
inc
add
add
fildl
add
add
add
jp
cmpsl
std
sub
popf
cmp
inc
cmc
sub
cmp
shlb
or
mov
lcall
arpl
adc
pop
nop
inc
add
gs
cwtl
xor
icebp
mov
inc
xor
lret
insb
imul
test
into
notl
mov
dec
push
arpl
insb
ds
ret
into
xchg
arpl
cmp
int
inc
mov
adc
mov
mov
lcall
jle
mov
aaa
and
dec
popa
adc
roll
push
pop
lock
pop
negl
xor
test
adc
xchg
stc
xor
cltd
out
mov
icebp
ja
lret
out
and
inc
ljmp
sub
popa
out
xor
icebp
sar
sub
mov
ds
clc
insb
ss
lahf
fwait
inc
popa
pushf
or
pop
xchg
mov
xchg
xor
pushf
and
repz
xchg
aad
ss
sub
jne
jge
mov
out
daa
mov
insl
adc
mov
mov
xorb
adc
stos
es
popf
jle
or
sbb
inc
into
inc
aad
in
sub
es
sbb
sbb
addl
test
mov
sub
repnz
out
in
mov
push
inc
mov
les
lret
pop
test
mov
sbb
pop
push
jge
jns
ljmp
inc
call
inc
btl
fs
loop
cmp
mov
dec
sub
mov
nop
dec
jns
ljmp
mov
lahf
popa
sub
dec
cmp
test
jae
out
and
inc
pop
inc
mov
push
mov
addl
or
negb
pop
dec
and
fcmovnu
jbe
test
test
push
xchg
mov
sub
and
push
rolb
shll
and
rorl
outsl
xor
fsubrs
movsl
xor
cwtl
out
fmull
test
dec
mov
jg
and
cmp
out
and
imul
out
mov
cwtl
aam
es
xchg
ljmp
js
sub
cmc
push
std
lret
xchg
fisubs
mov
aad
mov
fidivrl
pushf
or
in
sub
mov
fmuls
jecxz
jp
adc
fidivl
popf
jnp
stos
loop
wrmsr
jb
ja
mov
daa
mov
inc
lcall
jle
sti
dec
inc
fistps
adc
out
gs
sub
aad
jmp
or
mov
mov
cmp
fnsave
aaa
or
cmp
push
cmp
fstps
lret
pop
xchg
add
mov
popf
adc
jle
leave
mov
or
std
pop
cltd
aad
sbb
in
jne
add
andb
jecxz
dec
movsb
and
lock
sbb
push
mov
psubw
xchg
lret
and
and
xchg
fsubrl
mov
pop
dec
push
mov
push
inc
push
cmpsb
jbe
fisttps
cmp
push
push
sti
xchg
adc
sub
push
lahf
popf
movsb
data16
xchg
jmp
nop
adcl
aad
mov
test
mov
sbb
jl
subb
ficoms
movsl
arpl
pop
loop
movsb
mov
adcl
sbb
je
sub
mov
mov
and
ret
mov
out
adc
mov
pop
fstpt
addr16
lea
add
idivl
imul
lcall
dec
xchg
sbb
dec
xchg
ficomps
loopne
dec
sbb
popf
shr
pop
lds
pop
fs
pop
xor
vpunpcklwd
adc
or
jmp
test
imul
push
aad
lret
adc
in
sbb
ret
lock
dec
mov
bound
ja
mov
cmp
sti
xor
mov
push
mov
cmp
push
aad
mov
add
movsb
in
cli
js
mov
fnstsw
les
xor
push
adc
mov
dec
call
cmp
mov
mov
cmp
les
pop
and
fistpll
pop
ja
es
cmp
xchg
dec
sahf
es
aam
das
and
jmp
mov
incl
push
pop
mov
cmc
jae,pn
xor
or
mov
add
out
fs
por
mov
fisttpl
aaa
push
insb
dec
movsb
mov
push
jo
add
lret
and
fmull
inc
popa
data16
push
orb
jp
jne
and
shrb
out
mov
sub
adc
xor
pop
negl
or
scas
pop
outsb
cmp
faddl
add
push
jo
fsub
mov
jecxz
movsb
fucomp
pop
sti
and
sbb
mov
test
jne
xlat
mov
out
inc
pop
clc
addr16
sub
push
popa
mov
rorb
and
data16
ret
mov
mov
sarb
lods
jl
push
out
xchg
mov
lcall
sub
cmp
je
insl
push
lcall
jo
mov
mov
loope
adc
ss
jmp
insb
sbb
and
xor
fisubrl
jo
and
cwtl
mov
je
lret
test
add
jne
mov
xchg
mov
out
lock
shll
mov
lret
push
out
push
push
mull
faddl
shl
mov
push
xchg
pop
push
jne
and
dec
clc
pop
inc
mov
rclb
cmc
addl
jl
mov
pop
push
sub
ret
xor
pushf
adc
mov
push
sbb
adcb
mov
sbb
es
cwtl
mov
pop
jnp
clc
repnz
out
stc
mov
test
mov
sub
push
mov
in
lock
mov
mov
xor
inc
call
xor
adc
mov
lcall
mov
push
fs
shrl
xchg
adcl
jl
ljmp
xorl
jecxz
mov
inc
add
jns
sub
xchg
stc
add
in
aas
fidivl
or
lcall
push
rclb
fs
clc
das
rclb
and
sbb
iret
sahf
push
shll
jo
fiaddl
or
mov
cmp
xlat
loopne
mov
stc
xchg
scas
push
jne
add
jnp
mov
arpl
xor
inc
cmp
jmp
faddl
sbb
es
mov
movsl
sbb
mov
hlt
dec
mov
std
push
dec
mov
pop
and
xchg
insl
and
stc
or
ljmp
insb
dec
or
addr16
icebp
and
adc
sti
xchg
sbb
out
popa
sarl
jecxz
sub
dec
in
das
dec
mov
sbb
orb
mov
pop
dec
push
cmc
icebp
rorb
subl
mov
push
and
xchg
dec
jne
mov
inc
sub
stos
xchg
insb
test
dec
jmp
dec
sbb
insl
cmpsb
cmpsb
fisubrs
cs
lcall
xor
out
or
push
add
lods
jno
mov
negl
xor
jecxz
out
test
pop
testb
sub
in
mov
pop
loopne
shr
sbb
cli
sbb
jecxz
push
pop
out
mov
xchg
fcom
mov
cld
add
les
jnp
call
xchg
jge
daa
pop
cmc
pop
cltd
mov
mov
pop
mov
cmpsb
loopne
imul
pop
push
arpl
int3
ret
and
jmp
stc
jne
mov
sub
cli
push
repnz
in
sub
andl
xchg
call
ja
mov
std
fld
bnd
outsb
mov
cmc
roll
ret
shll
push
out
push
mov
inc
aas
sahf
es
in
sar
mov
cmp
jle
test
pop
lds
jg
mov
inc
lods
dec
iret
mov
add
sub
cltd
insl
sub
push
push
loop
and
pop
or
add
insl
xchg
inc
jns
add
jge
pop
mov
call
push
sub
leavew
scas
sub
xor
push
sbbl
cltd
sbb
pop
inc
jle
xchg
mov
insb
cmp
xor
and
jbe
xchg
stos
std
fdivrp
xchg
fcmovnb
nop
data16
shl
pop
clc
cmp
fcomps
daa
jae
mov
sahf
pop
mov
sahf
push
push
mov
mov
mov
scas
inc
cmpsb
jmp
lods
aam
xor
mov
enter
xchg
inc
les
sub
mov
mov
shll
xchg
std
mov
sbb
out
sbb
setge
cmp
js
cmpsl
add
das
push
daa
xchg
adc
cli
adc
mov
xchg
fists
int
xlat
sub
cmc
sub
movsb
jmp
dec
adc
adc
sub
sub
jns
cmpl
std
or
lcall
mov
add
cmp
and
xchg
jns
in
push
adc
rolb
jp
aaa
fnstcw
in
jmp
mov
mov
xorb
fwait
test
movsl
pop
pop
fwait
and
out
jnp
fsubr
push
cmp
sub
pop
outsb
sbb
and
rorb
dec
mov
jl
lret
or
dec
fsub
iret
cmpb
jnp
adc
js
ficoml
or
stos
aam
mov
cld
int3
push
push
les
cmp
xorl
mov
das
test
stc
jns
data16
out
mov
out
int
adc
sbb
shl
inc
mov
stos
js
cmp
outsb
jg
pusha
dec
cmp
std
cmp
sbb
idivl
jns
inc
jle
sahf
xor
adc
and
lock
push
and
or
mov
mov
fadds
push
push
sub
sarl
outsl
and
das
test
pop
stos
sub
int
fcmove
nop
cmp
addb
clc
cmc
fsub
lahf
jbe
rcrb
sbb
scas
mov
insl
xchg
xchg
in
in
outsb
mov
xor
sub
fidivs
jbe
or
mov
mov
dec
push
xchg
xor
lock
fcompl
inc
cmp
leave
hlt
xor
subw
jo
inc
and
test
mov
xchg
xchg
jle
push
int
adc
in
xchg
push
sahf
mov
xchg
out
jae
mov
jbe
decb
push
daa
stos
sub
sahf
pop
in
jns
dec
cmp
out
and
fcompl
insl
inc
out
adc
xor
sbb
cmp
sub
loopne
or
mov
and
test
popf
mov
out
sbb
cmp
jb
das
gs
out
jg
dec
jnp
adc
in
mov
pusha
test
loope
push
dec
cs
cli
pop
lods
dec
insb
stos
and
jne
xchg
sbb
out
cmp
dec
push
xlat
xor
sbb
dec
push
inc
stos
cltd
inc
mov
mov
inc
cmp
into
repz
mov
stc
and
mov
ds
and
jno
sub
xchg
js
mov
lahf
stos
sti
xor
sbbb
and
sbb
adc
push
pop
sub
push
jecxz
sub
rorb
pop
jg
std
dec
daa
jne
inc
clc
pop
insb
clc
loop
mov
pop
cmp
mov
cltd
add
mov
xchg
fwait
jo
pop
cs
rclb
scas
add
out
or
sub
push
xchg
fbld
pop
mov
and
popa
jmp
mov
div
outsl
pop
mov
inc
mov
fstpt
sbb
jge
mov
lret
inc
rorb
lea
hlt
mov
outsl
dec
aaa
orb
and
pop
or
iret
cmp
lret
mov
mov
js
mov
loopne
mov
ret
icebp
jmp
add
and
fdivp
push
scas
cltd
lcall
cmp
or
test
ret
add
shrl
inc
sbb
jmp
leave
or
fdiv
push
xchg
imul
jns
mov
insl
lret
xchg
and
sub
mov
dec
xor
sahf
orl
xor
xchg
leave
add
add
jnp
imul
push
dec
leave
mov
inc
scas
push
fnsave
sub
subb
sbb
lret
or
hlt
push
loope
andl
sub
or
mov
loope
clc
sti
xchg
xchg
add
out
sbb
lcall
pop
arpl
inc
ja
pop
inc
lods
rcrb
jmp
cmc
adc
mov
aaa
push
daa
aad
inc
pop
mov
das
enter
call
cmpsl
cwtl
pushl
fimull
js
jo
nop
jns
int
push
popa
pusha
fcmovnb
fs
lea
push
aas
cmp
push
ja
mov
dec
jne
lret
xchg
push
mov
out
mov
fildl
mov
and
aas
push
inc
jne
ds
aas
pop
das
aaa
dec
sub
pop
dec
add
leave
sub
lret
ljmp
and
cmp
inc
push
dec
jno
movsb
je
push
inc
fistpl
mov
fdivrl
jb
jp
clc
jae
inc
mov
pop
sub
or
xchg
pop
push
dec
fisttps
in
outsl
imul
adcb
jl
xor
xchg
ja
jae
sub
mov
xchg
jns
xor
mov
cmp
arpl
mov
pop
mov
and
add
sar
jne
test
std
in
adc
push
adc
scas
sbb
arpl
adc
es
scas
roll
sbb
cs
and
lret
xor
cld
shll
jae
gs
fcomp
lods
cmp
and
pop
adc
push
adc
out
push
push
daa
pop
sub
jp
xor
mov
hlt
ljmp
orb
lahf
sub
outsb
cs
inc
mov
test
iret
cmpb
sti
test
out
or
push
xchg
cli
mov
ja
fnstcw
addb
jnp
in
icebp
sbb
outsl
fnstsw
decl
lcall
adc
jbe
cmp
test
push
xchg
push
shl
les
sub
add
lahf
stos
fwait
ss
dec
jae
dec
mov
xor
and
add
stos
dec
in
jle
xor
stc
pop
push
shl
lods
mov
outsl
inc
fs
or
mov
add
inc
or
xchg
and
sahf
into
pop
rcrb
sbbb
mov
xor
cmp
fldcw
int
and
inc
lret
cli
pop
icebp
loop
rsm
pop
cmp
xchg
mov
adc
test
pop
xor
cmp
xchg
ds
mov
js
mov
adc
mov
mov
sti
pop
lds
imul
sbb
add
out
fistpl
sahf
xchg
stos
outsb
and
xchg
pop
mov
adc
cmpsl
mov
subl
pop
jbe
lret
or
out
movsl
mov
xor
hlt
addl
in
mov
cmpsl
das
insl
jbe
jno
push
clc
add
adc
inc
test
mov
scas
das
sbb
mov
repnz
ret
fstl
dec
mov
cltd
cmp
lahf
inc
mov
insl
outsb
cli
fsub
iret
mov
imul
shrl
jmp
push
inc
addr16
ret
adcl
pop
movsl
lods
push
xor
mov
fcoms
mov
std
popf
bound
jae
lods
fucomp
add
ljmp
out
jmp
sbb
dec
adc
sbb
jp
sub
stc
fbstp
pusha
and
sub
enter
enter
sti
cs
pop
fstpl
mov
jbe
sub
cmc
daa
mov
cltd
jle
repz
push
dec
aad
inc
dec
je
cld
rcrl
xor
sub
mov
loop
rclb
xor
jg
daa
in
fimuls
xor
mov
jnp
push
test
xor
data16
cltd
inc
mov
imul
pop
ljmp
std
stc
ret
sti
pop
aad
aam
xchg
sahf
cmp
sub
popf
cltd
lahf
test
nop
inc
iret
scas
push
mov
jecxz
nop
mov
adc
jle
push
in
xchg
pop
jo
lahf
or
push
jmp
push
xchg
dec
stos
jmp
sub
sub
shll
lock
mov
sarl
or
cmp
inc
mov
fs
pop
xlat
dec
sub
lcall
cmp
fists
xor
aas
cld
std
xor
cwtl
push
pop
mov
or
sahf
ds
adc
mov
mov
mov
test
scas
aaa
ss
push
or
jnp
sbb
mov
iret
ret
sub
fisubrl
jecxz
push
dec
xor
xor
enter
push
outsb
fwait
jo
add
mov
mov
out
adc
nop
fs
or
es
inc
lea
sbb
push
lods
dec
sub
inc
mov
subl
or
push
shl
movsb
sbb
mov
std
fisttpl
push
les
shrb
mov
addb
dec
clc
sub
and
jne
mov
mov
outsl
cmp
sub
inc
lods
jno
cwtl
jg
jbe
movsb
sbb
jns
dec
adcb
int
mov
outsb
bound
data16
jae
jmp
dec
dec
pop
adc
xchg
lods
insb
stos
sub
loopne
fistpl
adc
fdivrs
ret
lcall
mov
cltd
push
mov
fmuls
mov
aaa
sbbb
fdivrl
in
idivb
ss
sbb
fisttpll
popf
pop
adc
outsl
xchg
push
jo
dec
pop
out
mov
les
pushw
mov
adc
jecxz
cmp
xchg
lcall
mov
or
xchg
pop
sahf
ds
sub
mov
push
fiaddl
fwait
push
xchg
xlat
je
push
in
test
shll
mov
cmp
rclb
aas
mov
daa
jl
and
cmp
add
ret
cli
mov
sbb
mov
mov
ljmp
xchg
cld
sub
xchg
fistpl
inc
cmp
sub
inc
jle
aaa
sahf
pop
inc
cwtl
rorb
push
cmp
mov
sub
pop
mov
inc
mov
dec
push
jle
test
inc
mov
stos
cltd
out
inc
ljmp
and
cmpsb
xchg
and
mov
addr16
out
ljmp
adc
cmp
testl
sub
or
in
xor
pop
jl
sbb
pop
test
lods
xchg
int
cld
pop
xchg
mov
pushf
jle
mov
dec
and
cmp
les
stos
loope
cwtl
rolb
mov
mov
ljmp
imul
cmpl
lret
test
ds
dec
sub
inc
leave
cmp
sub
push
inc
cwtl
arpl
push
dec
sbb
dec
rcrb
xchg
push
dec
xor
and
test
xchg
repz
fcoml
pop
popf
mov
fwait
mov
xchg
bound
mov
popf
sbb
subb
cltd
cltd
xor
sub
scas
inc
int
push
sbb
push
fldcw
xlat
pusha
xchg
in
out
and
inc
sarb
sbb
mulb
outsb
insl
pop
xor
xchg
and
xor
cwtl
and
clc
lds
mov
lods
fdiv
mov
xchg
cmpb
jne
xchg
pop
dec
push
push
test
insl
or
and
mov
or
sti
dec
test
stc
sub
and
sarl
push
outsl
inc
jb
sub
sub
iret
jecxz
sbb
lret
andl
adc
or
pop
sub
addr16
mov
pop
div
push
pop
imul
xchg
repnz
in
mov
mov
pop
jle
adcb
and
aad
sbb
xor
adc
ret
mov
pusha
xor
dec
lcall
shrl
aam
pusha
cmp
xchg
inc
outsb
pop
mov
xchg
pop
mov
dec
xor
insb
adc
xchg
out
inc
dec
test
popa
adc
shll
pop
pop
sbb
mov
xor
cmp
mov
cli
jbe
mov
mov
push
mov
sti
arpl
jo
push
movsb
lahf
xchg
addb
cmc
stos
mov
arpl
add
and
lret
pop
or
sbb
cltd
or
jmp
inc
sti
add
sub
rorl
jge
stc
cmpl
cmpsb
push
mov
out
test
repnz
adc
mov
xchg
xchg
xchg
jmp
sbb
jae
xor
jmp
test
mov
xchg
cmpsl
outsl
ss
movsl
sub
push
cmp
push
ss
mov
jo
lods
lahf
aaa
xlat
xchg
lock
xor
push
xor
or
lds
adc
sbb
aad
test
fwait
sub
inc
int3
loopew
gs
jae
mov
arpl
outsb
xor
xchg
xor
shll
dec
out
mov
orb
daa
or
test
push
adc
out
or
xchg
sub
cmp
aas
mov
cmp
inc
imul
inc
pop
inc
add
int3
push
gs
dec
and
aad
repz
dec
mov
aas
stos
sbb
xchg
push
add
lcall
fisttpl
test
pop
test
addr16
mov
sbb
clc
ror
xchg
cld
pop
sbb
cmp
lock
lcall
mov
mov
pop
movsb
adc
cmp
fdivrp
into
mov
sbb
dec
push
push
jnp
mov
xchg
or
fbstp
cld
dec
bound
cmp
testb
orb
insb
cli
ljmp
add
ds
in
call
jne
xchg
xchg
pop
loopw
cmp
sahf
mov
pop
adc
js
cmpsl
and
lahf
or
adc
or
fcomps
xchg
rcrl
cmp
mov
das
sbb
add
ret
mov
mov
or
mov
jl
or
mov
insb
popf
and
imul
lret
or
shrb
adc
ret
xor
cmpsb
sti
out
xchg
adc
adc
lea
enter
fisubrl
or
sahf
mov
leavew
pop
or
aad
out
pop
jecxz
push
dec
or
fldl
shl
sbb
inc
movsb
mov
daa
stos
jb
xchg
mov
mov
pop
jae
jne
jle
fsubs
int
xchg
sub
push
xchg
scas
mov
lea
bound
out
lret
xchg
and
sub
mov
mov
mov
cli
ret
xor
lcall
inc
mov
jl
mov
mov
lea
scas
lods
repnz
mov
movsb
sub
mov
sub
js
stc
mov
push
cld
aaa
mov
int
xchg
sahf
mov
mov
sbb
cmpsl
sahf
ljmp
or
xchg
std
cs
into
sbb
adc
loopne
cmp
pop
addr16
jae
pop
inc
int
and
push
lods
lret
rcr
in
lret
pusha
pop
push
sysexit
jg
sarl
jae
cmpsl
fiaddl
push
pop
iret
imul
sub
sbb
inc
jno
mull
loope
jl
rcl
add
xchg
and
popa
xchg
xchg
insb
mov
ljmp
xor
add
mov
push
mov
ljmp
ret
ret
dec
adc
mov
push
ja
rcrl
cmp
xor
mov
in
mov
mov
iret
mov
sub
xchg
xchg
mov
add
in
sbb
jge
es
bound
xchg
nop
mov
xor
mov
aas
or
adc
shrl
sub
sarl
subb
jns
insl
iret
fdivrs
bound
xchg
xor
rorl
outsl
pop
push
mov
imul
dec
out
fmuls
sbb
fdivl
pmaxsw
iret
mov
fldt
push
es
cmp
or
and
fldt
test
jg
adc
pop
jg,pn
or
sub
mov
inc
xor
fidivrs
sub
xchg
xchg
xchg
push
pop
and
scas
pop
push
jl
sar
sbb
pop
test
pop
into
ljmp
shrb
movsb
ret
in
lahf
rcr
adc
or
ja
cltd
adc
xchg
push
lahf
inc
mov
jmp
adc
lea
pushf
cmp
add
jae
cmp
dec
rolb
mov
mul
xor
mov
push
lea
and
je
inc
and
sub
lret
nop
aad
push
push
sti
aad
or
adc
and
cmp
mov
jl
xor
push
dec
cmc
int3
pop
test
loop
es
iret
sub
xor
stos
inc
fcoms
mov
push
mov
cmp
mov
or
cwtl
inc
aas
xchg
push
mov
push
loop,pn
aad
dec
insl
dec
add
sub
rcrb
jae
mov
fadd
int3
outsb
rcr
jmp
sub
push
test
xor
and
push
mov
in
cwtl
mov
loope
xlat
mov
xchg
std
stos
mov
loop
hlt
aad
pop
sahf
xor
cli
xor
pop
repnz
push
insb
dec
xchg
outsl
mov
test
insb
jbe
rcll
pushf
pop
pop
inc
pop
es
lahf
movsl
xor
fwait
mov
nop
mov
loope
in
xchg
dec
repnz
es
popa
cmp
je
adc
mov
mov
imul
push
dec
mov
pushf
sub
mov
je
dec
push
jns
jns
fldcw
inc
je
hlt
dec
dec
aaa
pop
out
insl
mov
pop
sti
sbb
pop
decb
jmp
adc
mov
dec
mov
fistpll
sbb
jbe
test
jge
fs
mov
add
pop
add
and
int
add
stc
jge
dec
or
push
push
ss
push
xchg
subl
hlt
loop
orl
rcll
les
push
push
dec
pop
ljmp
repz
inc
fldt
arpl
sbb
xchg
fistpll
sbb
sbb
lret
add
cmpl
aaa
sub
jno
add
cmc
stos
add
test
or
clc
jno
jne
xor
int3
fldt
push
leave
in
fadds
pop
cwtl
sub
cs
sar
rcll
jmp
and
mov
add
jno
jmp
lcall
adc
ds
pop
sqrtps
scas
lahf
xor
dec
das
lahf
call
andb
pop
mov
cmp
add
adc
mov
mov
cmp
std
push
pop
dec
push
pop
daa
sub
mov
lods
out
jmp
sub
nop
cmp
push
adc
lcall
jnp
pop
hlt
inc
push
jbe
mov
js
jmp
push
jns
loopne
cmp
and
xchg
aam
mov
jb
xchg
add
hlt
mov
int
imul
jbe
enter
adc
mov
stc
repnz
or
enter
inc
pop
or
and
dec
fstpt
test
jns
and
inc
cmc
mov
push
mov
and
jns
add
inc
xor
outsl
xlat
push
xchg
push
push
mov
fisubs
shlb
adc
add
in
cs
setnp
fiadds
repnz
add
mov
int
aas
push
adcb
mov
test
or
sub
inc
call
pop
inc
pop
mov
adc
jle
aam
add
mov
lds
cmp
sbb
xchg
ror
mov
test
mov
dec
movsl
icebp
xchg
adc
mov
int
int3
clc
fdivs
rclb
cs
cmp
loope
mov
and
mov
mov
inc
push
sbb
dec
jo
xchg
push
dec
push
xchg
mov
adc
test
add
sub
mov
repnz
test
mov
jle
push
or
pmuludq
loopne
pushf
xor
adc
ss
inc
mov
mov
cld
lahf
inc
xlat
aam
sbb
jo
enter
dec
in
lcall
cmp
fsubrp
movsl
mov
out
adc
sbb
mov
je
cld
shr
lock
out
add
test
in
lock
xchg
mov
aaa
inc
push
mov
inc
ljmp
xor
sbb
sahf
das
rorl
repnz
xor
jmp
rcrb
je
xor
in
clc
out
cmpsl
inc
push
ret
dec
cltd
mov
xchg
clc
sbb
mov
ret
sbb
fiaddl
jne
adc
xor
and
imul
add
inc
mov
and
out
lods
mov
cmp
push
scas
mov
cmp
int3
sbb
cmp
sub
mov
std
lcall
jo
cs
xor
leave
pop
pop
cmpsl
jg
arpl
sbbl
ljmp
mov
xor
iret
mov
faddl
ds
push
cltd
pop
sub
fdivl
push
cmp
popa
test
pop
add
rcr
sub
ficoml
iret
int3
mov
cmc
cmc
call
mov
jecxz
adc
outsl
or
inc
mov
add
xchg
inc
es
imul
and
xchg
push
fwait
in
mov
subl
les
dec
ret
mov
cli
and
adc
or
mov
pop
mov
push
xchg
movb
add
lea
stos
or
jle
jnp
daa
pop
fs
leave
xchg
inc
pop
fimull
hlt
pushf
cmp
adc
aas
xor
loope
fwait
jecxz
mov
pop
das
push
mov
sbb
cli
fldl
ss
or
inc
loope
inc
in
cld
mov
sahf
pop
jo
xchg
and
push
clc
push
push
add
push
sub
imul
nop
repnz
sub
add
xchg
add
scas
and
mov
aam
repnz
mov
cmovle
mov
sub
out
test
or
cmp
mov
sahf
sub
lea
cmp
imul
mov
or
dec
sahf
push
push
push
stos
cmp
inc
mov
cmp
jecxz
pop
jecxz
out
mov
imul
sbb
inc
mov
bound
mov
mov
sbb
jno
mov
push
dec
cli
mov
arpl
adc
subl
jo
lods
cmpsb
int3
inc
mov
cmpl
xchg
out
push
push
mov
or
ja
and
mov
and
sahf
sbb
mov
sub
clc
sarl
mov
mov
call
jno
sarl
xor
push
cmpsl
fstpt
sahf
movsb
lds
jge
and
loope
shl
sbb
clc
outsb
add
incl
dec
mov
fisttps
shlb
and
scas
pusha
dec
rcll
ret
fs
enter
lahf
fdivr
cs
rsqrtps
popw
call
test
daa
jecxz
shlb
into
scas
or
sub
adc
push
je
push
dec
ret
inc
xor
mov
xchg
xor
js
mov
cltd
pusha
lods
pushf
lret
subl
xor
xlat
icebp
lds
pushf
call
mov
stos
adc
test
and
cmp
push
mov
dec
cmp
ljmp
mov
test
bound
test
daa
je
subb
and
ret
xchg
mov
lds
int
jne
pop
adc
mov
pop
sbb
lods
sub
insl
push
pushf
rol
inc
push
js
pop
add
sti
cmpsl
lahf
shll
ficoml
pop
loop
add
or
push
fwait
sub
call
cmpb
movsl
and
insl
cmpsl
jg
loope
cmp
aam
sbb
clc
inc
push
and
lds
rcll
cli
dec
pop
std
fsubrs
fstl
xor
cmp
call
xchg
lock
mov
cmc
scas
cmpsb
int
xchg
fs
cmp
and
mov
jbe
cmpb
subb
sub
inc
cwtl
pop
cmp
mov
sarl
mov
out
fimuls
sub
jmp
mov
fs
and
fstp
mov
sbb
test
mov
ja
sub
pushf
jl
lea
aad
cmp
add
rclb
in
cmp
inc
xchg
lahf
mov
call
inc
repnz
inc
andnps
test
sub
xor
mov
push
push
xor
test
fistpl
aaa
xor
loop
cld
scas
sub
cli
pusha
pop
cmpsl
jmp
inc
inc
nop
dec
push
xor
notb
pop
inc
jl
add
pop
lock
rclb
subl
or
std
nop
insl
filds
adc
sub
mov
mov
mov
xor
xchg
inc
push
and
daa
js
stos
and
fiadds
mov
lods
std
fsubs
pop
aaa
test
jecxz
imul
mov
mov
fdivrs
mov
ljmp
fs
push
imul
pusha
pop
bound
jb
add
out
mov
adc
ja
decl
dec
fstpt
sub
mov
jl
mov
sbb
mov
sbb
add
xor
imul
pop
loop
int3
shl
cwtl
jnp
ficoml
shrl
mov
sub
shll
and
sub
and
aas
pop
cmp
ret
mov
fstp
mov
jae
jno
xor
xor
mov
pop
jnp
fistpl
pop
sub
xchg
in
pop
jecxz
popa
data16
dec
jg
xor
fadd
in
test
out
xlat
mov
subb
push
push
clc
mov
movsl
adc
jae
cmp
pop
orl
rol
ficoml
or
sub
fildll
sub
mov
loope
cmc
rorl
jne,pn
or
rcl
sub
inc
sbb
xchg
pusha
loopne
popa
push
pop
in
sbb
cmp
stos
pop
xchg
xchg
push
adc
cmp
enter
mov
dec
sbb
adc
dec
mov
xchg
mov
aaa
adc
enter
cmp
mul
into
test
xor
mov
ret
lea
cs
ja
cmp
add
sbb
cltd
cli
das
cwtl
out
mov
mov
sbb
pop
jo
cmp
cmc
pushf
inc
mov
loope
mov
mov
mov
andnps
and
jno
xor
pop
mov
dec
jge
mov
sub
cmp
mov
inc
cli
sbb
jg
fdivl
aad
dec
lret
jecxz
push
outsl
sub
int
add
cmpsl
rcrl
and
push
sub
leave
mov
sbb
fs
enter
sub
or
cmpsl
sti
js
fbld
xlat
pop
sub
xorb
fs
xor
int
mov
cmp
or
out
add
inc
adc
cwtl
inc
sti
adc
sbb
sbb
fnclex
pushf
adc
sbbb
inc
dec
adc
divb
iret
fwait
iret
mov
lods
add
subb
movb
test
pop
cmp
test
lcall
int3
stc
movsl
loop
ljmp
rolb
out
pop
push
aas
out
xchg
cmp
xchg
aad
jle
jno
repz
test
loopne
cmp
mov
add
out
imul
or
stos
sub
cmp
loopne
jp
push
and
push
out
clc
cmp
cmp
sarb
cmovb
in
iret
insl
mov
or
and
out
subl
pop
out
cld
pop
fwait
outsb
cmp
das
inc
add
inc
test
and
aaa
push
xchg
jmp
jns
jns
mov
icebp
mov
pop
adc
add
fdivp
mov
rcr
jbe
mov
scas
cmpsb
push
jge
test
fcoml
mov
and
popa
fnstcw
ss
pop
loope
push
cli
in
inc
or
out
ljmp
dec
dec
mov
jnp
out
insl
adc
push
cmpsb
les
xchg
sub
testb
add
push
ss
and
sti
or
pop
les
in
and
loop
arpl
mov
mov
es
sub
or
and
mov
adc
sbb
leave
pop
jno
mov
inc
inc
lea
sbb
push
sub
mov
aaa
adc
jbe
xor
lods
std
xor
call
adc
dec
out
mov
test
jae
cmp
xchg
dec
daa
cmp
add
sub
mov
mov
pop
js
mov
data16
xchg
push
les
loopne
aam
jmp
ret
sti
mov
push
movsb
repz
popa
data16
loop
jae
mov
divl
test
dec
cmp
jns
inc
xchg
loope
inc
sbb
outsb
cli
or
sub
mov
icebp
cltd
es
and
inc
pop
jp
bound
and
cmpsb
nop
adc
int
or
in
call
mov
xor
mov
cmpsl
dec
dec
das
adc
mov
push
adc
testl
stc
popf
xchg
les
xor
sarb
or
push
cmp
arpl
add
ja
les
jae
test
and
pop
add
jg
cmpsb
movsb
rcrb
std
inc
bound
xor
loop
push
and
aad
int3
repz
or
push
stos
out
and
sahf
pop
sub
fcomp
ror
das
mov
enter
int3
out
lds
mov
adc
xchg
scas
enter
adc
lcall
iret
or
push
sbb
ret
cmpsl
sub
xchg
call
mov
aad
adc
pop
sub
sub
cmp
lods
inc
xor
adc
mov
and
sbb
imul
cli
push
fstl
add
dec
stos
push
cmpsb
pop
pop
push
mov
fs
inc
cmp
xor
popa
sbb
sbb
ljmp
add
cmp
imul
out
adc
or
cmc
pop
in
or
insb
lods
adc
jbe
inc
fwait
sbb
cmp
xchg
ud0
orl
andl
in
xor
mov
inc
jecxz
pop
push
pushf
mov
cmp
lcall
dec
fs
sub
push
inc
jge
cs
outsb
inc
or
out
movsl
repz
mov
adc
xor
popa
adc
aam
aaa
sahf
sub
lods
sub
xor
in
sub
mov
cmp
cmc
in
ljmp
inc
mov
lods
xchg
popf
sub
xor
cmp
pop
cmpsb
cmpsl
sbb
pop
shrb
adc
push
daa
push
ds
and
mov
pop
rorb
mov
cmc
lods
sbb
lret
jnp
leave
push
rcrb
lea
adc
jp
fidivrs
lods
rolb
aas
dec
mov
inc
call
mov
repnz
icebp
mov
adcb
mov
dec
arpl
push
inc
pusha
fsts
push
out
outsl
push
sbb
in
push
sbb
and
push
xlat
push
sub
push
popf
xor
lea
cmpsb
inc
aam
cmp
add
mov
stc
sbb
loopne
cwtl
mov
jecxz
sahf
adc
lock
js
cld
or
adc
mov
jmp
std
into
rcrb
in
add
mov
jne
test
cltd
xor
mov
lea
out
fiadds
jge
sub
imul
mov
pop
scas
scas
leave
dec
jecxz
push
fisttpl
pop
pop
fsubp
xchg
andl
or
jp
std
icebp
shll
push
xchg
sbb
add
adc
addr16
sbb
sub
push
sahf
les
jl
sub
jge
jno
adc
rep
sub
lret
orb
lds
rcrb
or
mov
fcomi
pop
lods
cli
loope
pop
test
scas
inc
loop
js
insl
jmp
pop
fdivrp
mov
pop
jno
fldt
sti
mov
popf
xchg
add
and
add
in
mov
cmp
pop
jl
add
jmp
imul
jecxz
push
iret
bound
add
bound
adc
sub
cmpsb
mov
daa
add
fistl
and
xor
mov
fs
cmc
push
test
imul
test
js
int
sbb
mov
adcb
cli
sbb
repnz
and
mov
or
xor
lret
fwait
je
inc
movsl
xchg
pop
push
xor
cltd
and
sahf
xchg
arpl
fpatan
xchg
loopne
js
loope
popf
ds
adc
out
fwait
jp
cltd
lock
and
insb
scas
pop
dec
fs
add
mov
push
lahf
mov
sarb
shrb
lods
outsb
xchg
sub
dec
cmp
enter
imul
xchg
sub
rcrl
sbb
mov
incb
and
push
in
pushf
ficompl
fstpt
pop
mov
xor
fldenv
mov
pop
loopne
xchg
je
shll
push
dec
sbb
sbb
arpl
adc
push
adc
sub
insl
fcmove
sbbl
pop
out
inc
inc
aam
repz
mov
and
xor
cmp
jno
scas
insb
in
inc
out
push
mov
mov
mov
pop
sar
rolb
mov
negb
dec
shrb
mov
xor
js
jo
or
xchg
xor
nop
or
mov
mov
mov
mov
jns
shrb
fldl
jb
xchg
in
pop
push
add
addr16
ds
lods
xor
and
or
nop
pop
push
test
loopne
dec
aas
push
fstpt
int
add
adc
xchg
mov
push
pop
or
mov
lret
cld
pop
js
xor
fwait
shr
mov
cmp
inc
pop
xor
dec
test
lods
xchg
jns
cmp
inc
fs
andb
mov
mov
sbb
inc
sbb
cmp
cmp
pop
mov
icebp
xor
jle
and
js
xchg
mov
or
lock
push
mov
cmc
cli
sbb
lods
push
pushf
aam
mov
add
cmp
aam
mov
add
ss
and
jmp
ds
mov
cmpl
test
pop
enter
ljmp
das
push
jns
int
nop
js
shl
addl
fwait
or
out
jge
push
pop
pop
scas
xchg
es
cli
lcall
dec
jae
aas
mov
sbb
nop
mov
int
dec
push
lret
cmc
das
adc
mov
daa
jecxz
out
mov
pusha
scas
rorb
inc
adc
mov
lahf
inc
xchg
dec
push
dec
gs
xchg
or
mov
push
aad
jae
orl
frstor
test
jg
cmp
push
fnsave
push
bound
push
xchg
rolb
aam
xlat
pop
pushf
out
leave
pop
adc
pop
xchg
pop
pop
loope
jbe
sub
cmpsl
and
cmp
or
out
imul
dec
rorl
dec
out
in
lods
int3
dec
outsl
out
shlb
gs
sub
call
dec
lahf
push
inc
add
mov
mov
mov
jg
jo
lcall
xchg
mov
int3
adc
movsb
mov
jae
jge
dec
sbb
xor
outsb
mov
loope
ljmp
scas
leave
setl
nop
mov
pop
push
aas
insb
and
mov
lret
pop
push
mov
bound
js
jne
pop
es
xor
imul
ja
xor
ret
iret
push
xor
pop
add
mov
dec
mov
orl
fldcw
push
aas
push
fistpl
repnz
fistl
push
scas
call
sbb
pop
adc
aad
xlat
xchg
popa
pop
mov
test
sub
rorl
mov
and
cs
mov
pop
subps
pusha
enter
mov
lcall
adc
push
scas
cmp
sar
aas
pop
mov
xor
es
idivl
cmp
ds
mov
cmc
gs
sub
add
iret
pop
mov
xor
in
notb
lock
add
push
cld
sbb
cld
add
pop
mov
int
xchg
dec
in
nop
jp
insl
ljmp
xchg
pop
popa
or
cmpsb
adc
add
sub
add
inc
loopne
push
test
test
testb
adc
in
das
mov
sbb
inc
xchg
inc
addr16
test
out
ds
pop
push
fistl
fwait
aaa
sbb
fldenv
push
jo
xchg
mov
or
iret
insl
lahf
arpl
sbb
in
pop
das
mov
in
mov
pop
lahf
push
xor
outsl
mov
push
out
jnp
in
or
imul
dec
faddl
ljmp
out
push
dec
sbb
std
shl
xor
into
jmp
aam
cmc
outsl
stc
mov
in
xor
push
jne
sahf
call
jbe
hlt
or
fmul
mov
xchg
lds
mov
push
and
mov
aam
inc
pop
mov
mov
movsl
addr16
xchg
outsl
js
inc
mov
out
arpl
mov
aaa
hlt
sahf
jl
mov
arpl
sub
mov
xor
in
inc
adc
dec
xor
outsb
lods
daa
cmpsl
xlat
mov
sub
lcall
cmc
cmp
pop
ds
inc
rclb
addb
push
lods
mov
inc
stos
daa
and
clc
xchg
cmpsl
xchg
std
sbb
fstl
xchg
leave
ret
sub
lea
jge
push
or
orl
cmp
sub
adc
jmp
inc
mov
lods
fadds
cmc
gs
xor
mov
cmp
xlat
or
cmp
xor
shlb
or
push
pop
cmc
out
jne
adc
push
dec
cmpsl
jae
add
scas
subb
jae
pusha
dec
hlt
movsb
into
fwait
scas
xchg
in
or
mov
cmpb
jp
inc
push
push
roll
or
push
hlt
sbb
out
jg
jns
xor
hlt
cmp
shrl
test
pop
cmp
jno
inc
outsl
inc
inc
dec
jns
shll
in
or
sbb
push
lea
jo
mov
push
sub
sbb
xchg
lock
scas
pop
bound
int3
shlb
hlt
lahf
enter
mov
cmp
jle
dec
jp
cmp
inc
jmp
rcrl
pop
pop
imul
mov
cs
out
jo
dec
je
sbb
lahf
into
loopne
cs
out
mov
pop
clts
mov
add
jp
pop
aad
lods
or
jmp
mov
into
test
inc
jmp
adc
movb
repz
fisttpll
icebp
sbb
mov
aas
dec
mov
dec
push
xor
sub
xor
sub
ret
aaa
or
rolb
xor
in
loopne
xor
fs
fsubrl
je
in
dec
xchg
xchg
pop
mov
es
std
fcom
sub
push
pop
fnstenv
lret
das
pop
es
push
aaa
int3
push
mov
jle
pop
add
mov
imul
sub
xchg
mov
push
dec
dec
icebp
xchg
pushf
push
movsb
cmpsl
lcall
fiaddl
inc
bound
fdivrl
sub
clc
out
mov
mov
repz
fs
int
inc
lods
arpl
pop
cmc
xor
icebp
push
ds
cmp
push
xlat
mov
aas
dec
push
inc
mov
stc
mov
call
push
cld
pop
mov
stc
stc
push
int
jecxz
sbb
fsub
dec
or
ret
push
xor
pop
lock
and
fwait
loope
test
ret
sahf
cwtl
and
sbb
mov
or
jns
cmp
out
xchg
cmp
je
lods
fsubl
mov
push
enterw
cmpsb
cli
cmp
pusha
int3
ss
mov
iret
out
pop
jge
mov
mov
jp
sahf
js
arpl
xor
int3
cmp
xor
pop
aam
cmc
setae
adcl
jge
dec
sub
push
movsb
push
loopne
aam
movsl
jmp
and
and
jo
stos
ja
fs
ror
scas
mov
dec
jmp
mov
sahf
cmp
iret
lcall
mov
xchg
or
xor
aad
lock
push
jmp
stos
add
call
ret
iret
add
int
cld
pop
outsb
rclb
imul
repz
int3
and
popa
mov
xor
mov
lods
adc
sub
mov
push
stos
fisttps
adc
pop
shrb
out
js
idivb
inc
dec
xlat
xor
mov
rorl
mov
adc
ret
pop
xlat
and
pop
or
inc
cmp
mov
mov
push
push
push
movsb
mov
jecxz
lea
inc
jae
mov
jne
cmp
sub
scas
mov
bnd
sbb
pop
mov
aam
std
push
xchg
test
sbb
das
push
add
cmp
jecxz
clc
pop
jmp
sti
ljmp
dec
and
les
mov
or
sti
adcb
cltd
inc
scas
arpl
inc
adc
loop
add
pop
push
pop
inc
pop
xchg
outsb
inc
inc
xchg
in
push
ret
sub
ljmp
sahf
jne
repnz
xor
push
push
push
cmc
mov
xor
out
mov
aas
sbb
andb
pushf
ds
sbb
mov
push
pusha
jmp
adc
adc
aad
pop
and
jp
jo
lods
enter
mov
js
clc
js
std
test
sub
xchg
lock
rclb
imul
and
ds
sahf
dec
lret
pusha
pop
aaa
push
mov
fidivs
test
js
xor
jmp
push
cmp
sbb
ret
test
stos
addr16
sbb
dec
imul
push
cmp
andl
decl
mov
lahf
inc
loop
mov
scas
fucomp
pop
add
loop
push
inc
roll
mov
das
lds
adc
push
movsb
fsts
and
bnd
mov
lods
mov
andl
jle
test
popf
shlb
data16
jge
cmp
mov
cltd
inc
cmp
mov
pop
loop
xor
test
dec
ret
dec
cli
dec
es
pop
fcmovnu
pop
cmp
xchg
cs
jb
lret
inc
subb
shll
and
mov
imulb
dec
es
xor
jnp
mov
inc
xchg
mov
andb
lcall
lahf
pop
fildl
or
xor
push
clc
inc
jmp
pop
xchg
push
shll
pushf
jae
rcrl
cld
xchg
dec
out
mov
loope
leave
add
mov
out
movsl
xchg
mov
jno
jmp
inc
sub
repz
inc
inc
cli
je
fwait
leave
dec
popf
movsl
setbe
inc
jo
inc
pushf
and
pop
mov
stos
mov
test
sbb
pop
in
pop
xor
dec
aam
pop
cltd
dec
jecxz
cltd
cmp
pop
je
aam
rcl
out
mov
mov
sbb
pop
adc
jnp
adc
into
enter
pop
mov
sbb
jno
rorb
dec
dec
jmp
jl
add
mov
cmp
icebp
fmull
das
mov
and
imul
adc
ss
xchg
pop
cmp
mov
in
pop
es
leave
stos
xlat
stos
push
fisubrl
sub
subb
or
mov
cwtl
cmp
mov
jb
iret
enterw
cs
fidivl
scas
aam
pop
xor
mov
mov
add
jne
add
or
data16
stc
aam
scas
ljmp
cmp
jmp
aam
jl
lahf
cld
inc
fsts
lahf
lds
pusha
popa
andl
pop
mov
mull
inc
cmpsb
repz
fsubl
ljmp
mov
scas
mov
ds
dec
xchg
mov
xor
push
jecxz
lea
cld
mov
sti
outsb
pop
inc
or
xorb
jne
jns
popa
ror
test
xchg
sbb
repnz
mov
jno
sub
dec
fstps
mov
rcrb
xchg
and
xchg
or
ret
push
xchg
rcrb
push
gs
mov
out
adc
icebp
repz
push
in
jno
pop
sub
mov
in
aam
push
pop
test
aas
mov
cld
outsl
push
movsl
xorl
pop
add
xor
inc
inc
mov
test
mov
mov
cmpsl
insb
imulb
hlt
stc
jne
push
and
jmp
mov
in
add
push
xor
pusha
std
call
jg
mov
mov
add
sbb
or
sub
cltd
push
mov
push
fidivs
add
dec
adc
pop
add
dec
stos
mov
dec
fnstenv
mov
mov
or
imul
int3
popa
pop
push
add
sub
inc
mov
leave
lea
or
roll
jmp
mov
mov
add
cmp
fcmovu
mov
mov
mov
mov
pop
mov
mov
es
fsubrs
out
jmp
pop
fldenv
int3
add
cmc
xchg
dec
adc
jns
mov
stos
cwtl
xchg
imul
neg
pop
sub
inc
and
mov
popa
dec
cmpsb
jb
insb
negl
sbb
incb
inc
aad
test
add
test
fsubr
fsubs
jmp
xor
test
xchg
cmp
in
sbb
pop
rcr
add
xchg
add
loope
pop
xchg
inc
stos
pusha
sahf
push
lods
fsubs
ret
xor
sbb
adc
lea
push
dec
sub
pop
out
test
mov
xor
cwtl
mov
mov
lcall
xchg
add
sbb
pop
mov
nop
popf
adc
dec
adc
into
imul
xchg
loop
addb
jp
adc
mov
cmpsb
lea
push
incb
loop
jnp
orb
xor
outsl
ljmp
test
fldcw
mov
fildll
stos
lods
leave
hlt
call
ds
outsb
push
repnz
gs
mov
pusha
insb
test
sbb
aad
movsl
mov
jmp
clc
outsb
add
ljmp
jmp
cltd
pop
pushf
in
pop
test
pop
inc
xchg
xor
mov
insl
lods
in
ficomps
and
jae
adc
cld
fisubl
outsb
cmp
push
cmp
push
sbb
insl
sub
into
jns
pop
mov
roll
mov
in
scas
leave
add
call
out
adc
int
fisubs
mov
lods
or
or
or
push
xchg
mov
sbb
sub
jp
ret
lods
cmp
pop
xor
out
inc
and
movsl
xchg
jge
loop
jle
mov
pop
or
sub
xchg
pop
add
inc
pop
jne
fwait
push
aas
popa
jg
cmp
pushf
sbb
into
adc
and
dec
add
push
andb
sub
or
push
sbb
sub
shlb
shrl
shl
shlb
mov
jg
popa
loope,pn
movsl
in
pop
and
orb
fdivrp
cmp
cmpsl
fwait
xchg
jo
ffreep
fs
xchg
bound
mov
pop
sub
cli
fstps
pop
sub
sub
shlb
fnstcw
pop
inc
sub
mov
in
fcompl
pop
loop
hlt
inc
aaa
mov
insl
jg
push
and
in
inc
insl
pop
leave
test
adc
lds
jmp
sub
cmpsl
lcall
jge
aas
cmp
and
cli
lock
imul
cmp
adc
roll
mov
cmp
sbb
adc
pop
sbb
push
mov
push
mov
cmp
or
push
cmp
hlt
mov
sub
mov
neg
dec
inc
test
xor
pusha
sbb
sahf
pusha
or
pop
xor
or
push
mov
jo
lods
adc
mov
sub
sbb
outsl
fidivrl
jno
sahf
adc
jb
mov
loope
ja
std
mov
out
cwtl
pop
xchg
fisttps
outsl
std
dec
sub
jge
pop
xor
jae
lcall
filds
inc
bswap
sbb
int3
add
popf
or
or
scas
mov
ja
sub
fisttps
xorb
insb
adc
mov
sub
xchg
add
loope
pop
mov
out
leave
mov
in
lock
mov
add
inc
sbb
test
lcall
xchg
jae
subl
gs
popa
jnp
popf
mov
les
test
lea
rclb
lds
das
jne
add
scas
imul
lds
js
clc
decl
sbb
inc
or
mov
add
in
mov
mov
jae
bound
pop
inc
loopne
clc
jl
cmp
push
mov
xchg
xorb
xor
gs
repz
adc
mov
mov
or
jge
jbe
enter
test
cmpxchg
lods
loopne
xchg
and
push
mul
adc
in
aad
push
imul
mov
mov
lea
fidivl
xor
js
add
shlb
mov
pop
loope
pop
cmp
xchg
and
jae
inc
insl
lods
add
jo
in
test
jne
pop
movsb
notl
sub
push
repnz
fidivrs
cmp
pop
push
or
mov
xorl
and
les
je
xor
sarl
cmpsl
inc
push
stos
mov
push
push
sub
jle
xor
out
icebp
add
xchg
enter
mov
stos
outsl
mov
sbb
pop
mov
cmp
jmp
mov
mov
adc
scas
les
int3
mov
sbbl
insb
push
pushf
aas
jecxz
xorb
add
dec
pop
add
bound
lret
xor
leave
dec
mov
aam
shll
insl
inc
sbb
xor
sub
sbb
enter
subl
push
jmp
xor
repnz
insb
pop
or
sub
cwtl
cmp
arpl
ljmp
int
push
adc
and
sar
sbb
cwtl
push
push
xlat
fwait
or
mov
pop
sbb
add
jp
imul
leave
xor
mov
mov
sbb
dec
cli
jmp
xchg
pop
mov
pop
icebp
dec
enter
pop
cltd
push
fsubrl
shll
lea
sub
fildl
and
jecxz
and
jne
jbe
and
sbb
mov
out
push
ficomps
stos
pop
pop
dec
fwait
scas
shl
outsl
out
xchg
sbb
lods
adc
sbb
mov
push
mov
xchg
mov
int
movhps
pop
mov
pusha
xchg
xor
cmp
hlt
fsts
pop
stos
movb
adc
lods
mov
mov
sub
push
lods
mov
mov
xchg
push
lahf
popa
fbld
push
lcall
shrl
pop
orl
repnz
aam
pop
push
mov
inc
and
adc
mulb
fmull
ret
ljmp
fisubs
dec
outsb
jmp
xchg
stos
jb
insl
pop
jmp
xor
sub
sub
pop
shrb
cmpsb
jo
jo
out
pusha
insb
xor
xchg
insl
mov
in
movsb
outsb
add
mov
sub
adc
sub
cmpsb
mov
mov
push
rolb
popf
dec
ja
and
dec
mov
popf
pusha
fmuls
and
and
std
xlat
leave
push
dec
sub
xor
nop
jecxz
jae
fisubrs
shrl
stc
int
pop
adc
lret
push
lcall
lock
jp
push
hlt
cmp
or
loop
mov
lods
mul
inc
sbb
cmpsl
add
stos
mov
pop
mov
push
jl
mov
out
cmovl
sahf
pop
sub
or
mov
push
cmpl
mov
test
sub
jnp
xchg
fnstcw
pop
testb
mov
pop
push
fs
clc
mov
xchg
lahf
xchg
cmp
sub
add
and
xor
and
aaa
adc
mov
mov
hlt
out
adc
and
mov
hlt
push
arpl
push
jl
out
pcmpeqw
dec
or
xchg
daa
jle
jbe
lds
das
lret
and
aam
lea
jo
das
popa
jbe
adc
sub
push
sub
mov
mov
or
adc
xchg
rcr
cwtl
xor
xchg
sub
test
push
push
in
divb
popf
dec
das
xor
xor
out
dec
add
gs
fcmovb
jl
xor
and
push
sbb
call
stos
test
and
sub
cmp
dec
mov
lea
push
cltd
daa
lret
pop
scas
ret
jecxz
cmc
sbb
adc
xorl
das
sti
test
push
mov
roll
jae
sub
inc
sub
leave
fcom
and
call
mov
lds
out
cmp
ja
xchg
mov
loop
push
sarl
xchg
sbb
sub
in
fdivrp
mov
jle
pop
nop
pop
push
xor
repnz
pop
outsb
push
das
adc
insl
adc
push
cwtl
fcomps
aad
into
adc
lcall
mov
push
out
js
stc
mov
push
xor
mov
lcall
xor
js
push
loopne
mov
movsl
sub
je
in
dec
rcrl
mov
pop
notl
push
push
loope
ffreep
pop
mov
inc
xchg
push
adcl
mov
inc
mov
dec
dec
mov
mov
or
shrb
xchg
jge
test
xchg
inc
or
repz
lret
lcall
add
jbe
loopne
push
xor
fcmovnbe
outsb
pop
movsl
ja
cmpsb
ret
ja
mov
mov
gs
out
jmp
mov
add
test
loop
movsl
fwait
mov
lret
sbb
mov
out
js
into
and
cli
cmc
push
add
loopne
add
xor
movsl
sub
ds
daa
and
mov
xchg
push
cld
fcmovbe
jo
loope
lds
push
jnp
sbb
mov
cld
pop
pop
dec
lods
loopne
mov
call
cmp
push
inc
push
popf
jp
rorl
sub
pop
mov
mov
pushf
add
test
in
gs
je
je
jg
movb
and
add
loopne
push
pop
ficomps
adc
dec
pop
xor
mov
mov
lods
pushf
dec
rcll
jo
cmp
xorb
add
xchg
jno
add
xor
sbb
xor
fcoms
add
cmc
push
jl
mov
and
pop
imul
adc
shll
jecxz
or
imul
add
int
dec
xchg
es
mov
int3
cmp
push
je
mov
mov
xor
popa
das
mov
or
and
jnp
mov
std
mov
jecxz
xchg
mov
or
sar
fsub
sarb
sub
std
andl
add
fistpll
imul
clc
ret
add
int
lods
arpl
fcoml
or
jecxz
hlt
sub
mov
cwtl
and
cmpsl
mov
pop
mov
ficomps
mov
push
pop
bound
xchg
sub
dec
add
mov
xchg
sub
sub
sar
and
lret
fnsave
xchg
xor
fsubl
mov
lock
sbb
mov
push
adc
pop
xor
andl
adc
pushf
arpl
xchg
add
sbb
lcall
xorb
stc
cmp
jp
sbb
mov
sbb
imul
rcr
sbb
or
mov
mov
inc
pop
in
pop
int3
aas
push
mov
mov
jg
adc
mov
int3
les
inc
mov
cmp
fildll
stos
adc
sub
mov
mov
stos
in
test
mov
stos
lods
add
sarl
testb
clc
add
test
mov
pop
xor
packuswb
sti
daa
pop
testl
pop
rcl
pop
aam
in
push
push
mov
jmp
mov
cmp
daa
test
xchg
sarb
pop
or
dec
insb
pop
out
test
add
fimull
shrl
push
pop
lock
adc
sbb
sub
pop
and
outsb
popf
repnz
repnz
add
inc
test
mov
sahf
and
and
pop
fdivl
push
arpl
andb
xlat
cmpsb
mov
cltd
orb
jns
fldcw
idivl
pop
cltd
std
xchg
fs
rcrb
xchg
mov
sbb
jb
pop
je
cmpsb
jge
push
jnp
pop
xchg
test
or
movsl
xor
jnp
mov
aas
cwtl
jp
push
jecxz
sbb
shrb
sti
aam
push
xor
and
xor
mov
push
loop
cmc
leave
fs
sub
and
insl
push
jns
pop
mov
ss
fmull
data16
outsb
leave
cmpsb
push
sbbl
inc
in
into
dec
sbb
test
xlat
jle
popa
repz
out
pop
insl
pushf
out
or
xchg
out
aaa
and
mov
inc
sahf
fisubrs
push
out
fnstenv
aaa
stc
out
les
cmp
rclb
mov
jne
test
sbb
test
out
xchg
or
ds
lods
pop
pop
sub
inc
fldpi
ficoms
out
jno
fisttpl
decb
inc
mov
add
xor
sbb
fcompl
mov
out
lods
nop
xor
mov
scas
std
insb
daa
add
lahf
arpl
mov
jecxz
inc
lds
jno
sbb
add
and
int3
or
lret
xchg
dec
test
test
xchg
repz
or
hlt
sarb
aaa
jb
stc
shrl
mov
dec
ja
das
push
jno
jo
push
sbb
adc
cmp
xor
cmp
jb
notl
enter
inc
cmp
mov
push
push
fs
push
dec
decl
inc
imulb
jns
sbb
push
cwtl
cmp
xchg
out
sub
xchg
mov
jmp
or
dec
sahf
ss
aaa
fmuls
clc
shll
or
push
pop
mov
push
rcrb
jecxz
push
push
outsl
out
gs
adc
fwait
push
xor
mov
jmp
lcall
repnz
jno
negb
adc
out
shll
out
cld
xor
mov
pop
dec
repnz
enter
int
inc
lret
cmp
cmp
pop
cmp
pop
or
xor
xchg
pusha
push
enter
sbb
ret
mov
lahf
lcall
out
aam
orb
mov
mov
icebp
pop
xor
iret
das
add
repz
pop
xor
je
xchg
cmp
fwait
cmp
psrlw
mov
cmp
mov
scas
mov
in
jno
stc
push
imul
push
add
add
xor
xchg
add
sbb
inc
enter
ljmp
div
add
xor
cs
sub
pop
sub
cmpsb
aad
lock
mov
dec
mov
repz
and
push
jne
and
insl
imul
jb
std
insl
jg
adc
enter
mov
cld
imull
jle
repnz
testl
test
mov
or
xchg
jns
sbb
cmp
fbstp
iret
mov
dec
xlat
sbb
gs
sub
subl
in
call
lds
loop
mov
adc
jo
roll
push
push
adc
and
nop
push
mov
fwait
adc
lretw
lahf
and
push
mov
fmull
cwtl
xor
push
js
sti
fsub
add
xor
pop
and
insb
addr16
loopne
outsb
mov
mov
jmp
lods
pop
fsub
and
jge
addr16
mov
lods
ret
scas
dec
cmc
sti
sti
stos
or
imul
cmp
sbb
pop
andl
lcall
mov
jp
xchg
bound
mov
sbb
int
push
sub
push
fistpll
pop
orl
cmp
shl
or
repnz
xchg
sub
mov
dec
xchg
jae
or
out
jge
leave
mov
and
mov
outsl
pop
or
adc
fists
sbb
rcll
mov
mov
ror
std
inc
rolb
addl
aad
mov
adc
iret
cmpsl
sub
mov
jnp
xor
mov
mov
aas
divb
gs
imul
imul
adc
sbb
mov
rcll
rolb
inc
fcomps
push
fistl
xchg
dec
mov
sub
leave
cmc
lock
sbb
pop
out
jge
out
mov
and
cmc
cmp
into
or
cltd
sti
ds
add
sbb
pushf
subl
or
push
mov
out
fcoms
call
adc
mov
fdivs
xchg
lret
xchg
mov
xor
xor
fldenv
and
dec
or
repnz
cli
pop
and
dec
add
loop
lcall
mov
or
lods
xlat
scas
out
adc
test
and
cmp
add
cmpsb
rorl
adc
loopne
pop
xadd
cli
je
push
dec
xchg
push
mov
sbb
mov
lock
aam
dec
loope,pt
out
add
out
sub
add
in
adc
sub
out
push
sub
dec
add
cmp
adc
ljmp
mov
xor
clc
sti
movsl
jb
out
stos
aas
sbb
or
out
sub
neg
and
pop
mov
js
xadd
dec
rcl
sub
lcall
je
pop
cmpsl
stc
adc
mov
inc
pop
xchg
call
xchg
cmp
les
aam
or
je
and
mov
pop
adc
sub
adcl
xchg
adc
jge
jo
inc
inc
jns
mov
test
das
xchg
stos
and
in
jp
fnstenv
imul
inc
ret
push
fs
clc
lock
push
dec
test
loop
jae
bound
fistpll
inc
icebp
mov
mov
sarl
int3
and
jb
stos
xchg
add
pop
push
popa
and
push
xchg
dec
jg
repz
inc
pop
mov
or
cmp
fs
mov
fucom
clc
scas
push
je
icebp
inc
inc
push
xlat
fistl
push
ror
inc
loope
xchg
dec
dec
mov
sub
cltd
adc
jb
mov
push
lods
push
mov
add
ja
xorb
lock
jne
dec
cmp
inc
aad
cmpsl
psubw
orl
jg
push
add
lods
mov
adc
mulb
jge
mov
cmp
test
nop
stos
pop
fdivr
les
aas
mov
mov
lret
jnp
and
cmp
fdivrl
and
push
dec
fsubs
dec
test
iret
xchg
leave
or
cmp
icebp
sbb
scas
ljmp
ljmp
enter
mov
mov
rcrb
push
or
insb
notl
movsb
idivb
mov
or
sbb
mov
dec
lods
mov
lods
dec
sbb
sbb
or
sub
outsl
pop
jno
popf
and
adc
pop
pop
pop
pop
inc
scas
add
das
sub
fidivrl
jl
pusha
jnp
sbb
in
sbbb
in
lods
frstor
mov
or
aas
push
cld
repz
lea
sbb
out
test
and
or
bound
hlt
mov
aad
lret
mov
mov
clc
push
pop
rcrl
pop
xchg
lahf
xchg
dec
popa
popa
mov
lcall
iret
jmp
jne
pusha
adc
ljmp
repz
and
sub
xchg
jne
and
sub
pop
cmp
sub
aas
psrlq
rolb
call
int3
xchg
enter
cltd
mov
sub
insb
insl
in
sbb
xlat
pop
and
movsb
jae
mov
stos
or
ja
sbb
test
or
xchg
mov
fdivs
cmp
stos
fldl
jge
mov
lret
inc
ja
jne
add
jge
ficompl
fcmovne
mov
into
push
aas
out
and
test
mov
das
xor
push
push
inc
out
test
jl
mov
mul
xchg
test
jp
pop
pop
mov
inc
cli
test
pop
jp
add
into
mov
mov
mov
ror
sbb
mov
dec
fwait
ja
cmpsb
bound
pop
ds
loop
xchg
sub
push
xchg
adc
fstps
inc
test
jg
cmpsl
and
sbb
mov
xchg
xor
stos
pop
lret
push
add
adc
scas
push
mov
test
incl
cli
pop
xor
add
adc
dec
mov
mov
adc
sbb
mov
shlb
movsl
out
movsl
stos
jbe
ret
cwtl
push
add
into
lods
inc
mov
es
adc
out
fdivrl
je
aaa
or
sbb
sub
popa
aaa
pop
fwait
dec
or
inc
rorl
or
dec
dec
outsb
clc
gs
fisubs
sbb
aam
xchg
pop
repz
les
xor
clc
and
push
add
jbe
xlat
jae
shlb
in
add
mov
adc
lods
aas
out
idiv
in
cmp
add
adc
mov
and
out
inc
cmc
jmp
negl
and
les
sbb
stos
incb
push
negl
pop
call
mov
arpl
fadds
sub
pop
stos
outsl
scas
push
lods
sub
adcl
adc
adc
mov
rolb
inc
adc
test
sub
dec
pop
fnsave
xchg
add
pop
mov
sbb
push
out
ja
movsb
xchg
and
enter
mov
lods
lret
rclb
jg
dec
jae
jb
xor
das
daa
call
jb
or
sub
sahf
push
fadds
xor
mov
pop
int
xor
sahf
shlb
inc
rcll
div
lret
ljmp
or
ljmp
xor
popa
mov
fld
jo
subl
rorl
mov
out
add
pop
daa
dec
stos
mov
or
xchg
pop
mov
adc
ss
jmp
fadd
push
arpl
xor
mov
add
sbb
fldt
xchg
nop
nop
cmp
stos
pop
inc
lret
pop
dec
outsl
test
out
cmc
mov
mov
shll
jl
aam
push
pop
mov
pop
sub
mov
jnp
outsl
and
and
cmp
cmp
add
sbb
fisttpl
shlb
hlt
pop
lods
and
mov
pop
hlt
lock
adc
ja
or
xor
adc
push
jae
popa
popa
imul
sbb
or
xorl
add
roll
pop
repnz
add
je
and
lret
imul
mov
movb
push
sbb
fisttps
mov
or
jge
rolb
and
not
mov
or
cmp
int3
xor
pop
add
cmp
lds
jnp
jb
fs
jge
sub
addr16
pop
cmp
mov
cmp
psrld
inc
mov
jne,pn
lret
push
out
aam
shll
outsl
push
ja
dec
enter
pop
pushl
add
pop
inc
adc
mov
fnstsw
jno
loope
mov
cld
sarl
mov
orb
mov
mov
ret
shlb
sahf
sti
shrb
jp
lret
mov
repz
outsl
cmpsl
bound
enter
outsl
int
mov
fsubs
sbb
pop
adc
sub
mov
mov
and
call
out
pop
jns
cmp
addr16
lahf
xor
iret
mov
and
sub
lods
arpl
pop
inc
fcompl
mov
out
fnstcw
mov
xchg
ja
int
pop
push
inc
sbb
push
dec
mov
fdivp
push
cmp
popf
inc
xor
mov
inc
and
jae
inc
imul
hlt
sub
negl
lea
pop
push
pop
push
test
adc
cmpsb
sahf
rcrl
ret
mov
ja
xchg
jno
inc
add
inc
jmp
jbe
scas
sub
loopne
dec
dec
stos
xchg
mov
pop
jne
push
inc
pop
mov
push
fnstcw
js
xchg
mov
pusha
test
lods
int
imul
dec
mov
and
aas
imul
cmpsb
mov
sbb
pop
xchg
cmpsb
dec
dec
push
nop
inc
or
mov
into
xchg
cltd
or
cmp
imul
leave
in
adc
rorl
loopne
or
out
das
ja
mov
ret
fistpl
and
mov
xor
js
jo
dec
or
test
test
lods
fs
jge
or
clc
add
cmp
int
adc
dec
aam
mov
cmpsl
pushf
add
sub
push
into
inc
pop
jg
test
test
jo
mov
dec
dec
hlt
jmp
jmp
xchg
push
lret
je
aaa
data16
xchg
jge
outsl
shlb
mov
adc
ret
mov
xchg
sub
ret
out
push
jno
jnp
mov
mov
cltd
lea
movsb
and
push
jge
xlat
sub
cmp
sub
xor
sbb
jo
mov
pop
aam
sub
test
mov
xchg
outsb
xchg
push
mov
adc
aaa
je
icebp
das
sub
pop
arpl
fcomi
fs
int
ret
pop
add
add
ss
mov
jge
ret
pop
or
add
sbb
cmp
addr16
push
mov
clc
sub
mov
data16
mov
sub
jno
leave
jmp
sar
pop
mov
ret
call
or
inc
aam
mov
movsl
cmp
fninit
nop
lret
dec
call
mov
cmp
xchg
adc
lock
xchg
add
mov
fucomp
mov
adc
dec
fs
ficompl
or
inc
shrb
pop
subl
mov
push
hlt
pop
sbb
lret
push
loope
mov
daa
cmc
adc
pop
and
stos
cmp
int3
fldt
lods
xchg
jmp
inc
add
sub
insb
jp
outsb
pop
mov
push
sti
clc
push
jbe
xchg
sbb
adc
dec
push
insl
mov
xor
xor
sub
rorb
rcrl
jecxz
cmp
pop
xchg
pushf
pop
xchg
ljmp
sub
mov
or
cli
out
or
gs
jmp
xor
dec
sub
insb
in
sbbb
call
test
cmc
and
adc
mov
cmp
paddb
out
pop
mov
cmp
movsb
and
clc
cmc
stc
stos
sub
mov
or
jle
xor
insl
in
mov
add
inc
in
mov
je
or
les
dec
push
lea
dec
pop
sub
xlat
out
or
fidivl
lods
leave
push
push
mov
sahf
pop
push
cmp
lea
scas
mov
loop
jge
push
add
rcl
jmp
out
outsb
xor
xchg
fwait
push
lret
push
xor
ficoms
stos
pop
sub
sbb
pop
call
jo
pop
shr
loope
xor
ja
xchg
mov
add
push
cmp
ret
aaa
cmp
adc
and
sarb
cmp
lock
arpl
push
mov
cltd
xor
js
and
outsb
ret
mov
subb
adc
sub
lds
js
jnp
dec
or
and
movsb
cltd
popa
dec
xor
and
lret
and
add
adc
jbe
leave
inc
imul
lods
cmpl
ja
push
arpl
dec
loopne
out
leave
loope
out
cmc
mov
push
pusha
inc
mov
fnstenv
and
shll
data16
adc
adc
mov
mov
pushf
mov
mov
call
dec
ss
lret
sbb
daa
idivb
movsl
pop
popf
mov
fbstp
in
xchg
xor
dec
dec
mov
cwtl
sbbb
inc
jmp
dec
xchg
arpl
stos
xchg
xor
push
ret
jne
add
fdivr
repnz
xchg
mov
and
les
add
leave
pop
push
mov
sub
lahf
mov
xor
in
add
addb
test
inc
mov
arpl
arpl
frstor
xchg
jmp
xchg
cli
loop
das
sbb
shr
add
xor
jge
push
mov
cwtl
dec
aas
mov
out
lcall
sub
inc
pop
xchg
test
jp
pop
sub
mov
int
dec
mull
pop
adc
mov
testl
mov
in
xchg
or
dec
imul
ret
and
push
mov
sti
lods
mov
sbb
aad
cmc
inc
push
jecxz
scas
cmp
adc
popa
sahf
clc
lods
cmp
mov
mov
incl
outsb
lcall
rcll
or
and
mov
iret
lahf
mov
cmp
cli
jbe
mov
test
rolb
lahf
inc
outsb
xchg
pop
inc
xor
mov
xchg
fldcw
mov
dec
into
mov
test
mov
xor
sub
cmpsb
rorb
mov
icebp
adc
jecxz
jbe
pushf
ljmp
cmp
shll
sarl
mov
rorb
fs
jne
mov
pop
movsb
icebp
mov
notb
xchg
aas
jnp
adc
push
movsb
push
lahf
jecxz
jnp
mov
jno
in
push
mov
nop
in
lods
rcll
dec
lods
cmp
sub
mov
mov
dec
movsb
enter
rcll
cmc
call
pop
outsb
mov
minps
mov
jb
adc
xlat
and
lret
jmp
or
jb
movsl
fadd
and
out
es
and
sbb
ror
adc
lods
jle
mov
sub
imul
mov
lcall
mov
xor
mov
dec
fistps
cwtl
push
jne
fdivrp
pop
orb
push
pushf
hlt
sbb
add
or
lods
jg
push
xlat
es
mov
jne
add
int3
cmp
xchg
xchg
mov
xchg
push
stc
repz
xor
inc
dec
cld
mov
or
loop
pop
ret
mov
jnp
shll
cmpsl
popf
mov
shrb
std
mov
iret
ret
out
xor
push
and
in
fbld
int
cwtl
enter
xchg
add
adc
stos
jae
dec
add
mov
add
sti
pop
jmp
jl
jge
int3
bound
test
inc
mov
adc
movsb
lock
ss
push
mov
xchg
cmc
sbb
std
pop
dec
jnp
pop
add
icebp
inc
inc
nop
and
xchg
mov
ret
xor
cmc
cmpsl
xor
lcall
or
jp
stc
mov
rcr
pop
cld
ja
mov
dec
sbb
mov
subb
jb
fstps
xchg
or
xor
ret
insl
out
adc
jae
push
mov
lds
movsb
cmp
insl
stos
jae
adc
push
push
adc
jae
scas
lods
lods
mov
cwtl
in
push
cmpl
sub
sub
push
and
pop
lods
int3
inc
test
mov
inc
jmp
jae
pop
loopne
inc
push
cmpsl
les
dec
dec
pop
jb
mov
mov
test
jecxz
shlb
adc
pop
dec
add
and
mov
out
inc
xchg
das
lret
out
sahf
cli
adc
mov
std
pop
out
mov
jbe
data16
xor
jns
lahf
cmp
ja
ret
pop
insl
dec
stos
incb
jmp
sub
xchg
decb
xor
pop
fidivrs
mov
popa
mov
push
je
adc
mov
sahf
jno
mov
jg
mov
std
data16
dec
movsb
sahf
iret
pop
and
adc
inc
xor
andb
cmp
mov
scas
jnp
dec
es
lret
fildll
lret
test
push
dec
call
or
and
test
dec
mov
mov
lods
inc
cmp
mov
lock
or
cmp
push
nop
fs
ret
push
jecxz
xchg
pop
sub
push
shll
push
pop
inc
add
ljmp
aad
sbb
inc
sub
jg
inc
jbe
adc
xchg
into
cmpb
dec
sbb
fcom
cmp
test
dec
inc
popa
inc
sub
jmp
mov
hlt
hlt
mov
add
leave
push
push
ds
dec
push
mov
or
popa
inc
aas
call
les
push
pop
movsb
fimuls
xchg
in
mov
jbe
pop
lods
adc
scas
or
adc
dec
fwait
fs
cmpsb
sbb
inc
pop
cmp
push
aaa
mov
cwtl
pop
mov
cmpsb
fistps
and
push
sbb
inc
mov
sahf
repnz
dec
mov
fisubrs
cli
test
mov
dec
jb
gs
xchg
pop
adcl
pop
mov
and
xchg
arpl
jge,pn
data16
addr16
test
in
add
icebp
xchg
stc
cmpsb
lds
fldcw
adc
jmp
push
and
scas
sbb
add
mov
pushf
popa
dec
leave
enter
mov
clc
adc
outsl
adc
icebp
sti
mov
std
test
xlat
jns
dec
cmpsb
cmp
shrb
dec
cwtl
push
in
imulb
and
or
sbb
push
movups
add
xchg
xor
lock
xor
mov
divl
mov
es
mov
cltd
xor
jecxz
ret
inc
sbb
sub
xchg
decl
aad
xor
mov
push
mov
sarl
pop
inc
test
push
out
imul
ret
jbe
mov
and
push
fcmovnb
jo
push
xchg
mov
insl
sbb
icebp
dec
daa
pop
push
idivl
scas
add
cli
push
enter
mov
push
jle
vmwrite
add
in
es
add
xchg
mov
adc
inc
int3
jae
pop
push
jge
jmp
adc
shrb
sbb
pusha
mov
push
dec
into
xchg
mov
movsb
sub
dec
or
hlt
addr16
jp
pop
fstps
in
push
test
shr
cld
mov
rcr
clc
xchg
and
or
movsl
rcl
bnd
dec
mov
into
push
les
das
cmp
lcall
into
add
rorl
adc
into
loope
sbb
js
xor
and
aam
leave
aaa
roll
sbb
xchg
movsb
push
cmp
popf
into
lods
ja
cltd
sbb
add
inc
in
jmp
adc
sbb
mov
test
push
stos
sub
ja
sbb
fildll
in
clc
adc
ffree
outsl
test
jb
sub
push
push
mov
loop
nop
addr16
mov
iret
stos
mov
sahf
add
jne
mov
push
sti
imulb
sbb
pop
icebp
sarb
adc
pop
jge
cli
push
testb
adc
push
dec
jg
jl
aad
mov
loop
data16
mov
jae
dec
rcr
cli
cli
lret
divb
dec
stc
add
fldt
shll
inc
faddl
xchg
movsb
xchg
sub
jmp
jle
adc
test
adc
lods
pop
out
scas
push
xchg
outsb
xchg
int3
jle
mov
xchg
addl
pop
jle
mov
sub
movsb
ja
ljmp
ret
sbb
outsl
das
fs
sbb
aam
xchg
sub
test
xlat
cmp
lds
mov
movsb
testl
cltd
sbbl
mov
mov
loopne
sub
jbe
cwtl
mov
aaa
cmp
iret
fdivrs
rorl
xlat
inc
add
jmp
adc
push
in
inc
cmpsl
pop
inc
and
jb
cmp
into
mov
ret
dec
int
dec
nop
sbb
loopne
cld
jne
pop
in
sub
repz
xlat
xchg
adcb
pmovmskb
imul
inc
gs
mov
iret
xor
es
movsb
cmp
xchg
and
mov
adc
int
lret
lods
sub
nop
data16
push
xchg
sbb
pop
xchg
rcrb
mov
mov
fisttpll
mov
ret
in
clc
xchg
ficoms
js
in
adc
cmp
mov
or
sub
ret
jmp
adc
cmp
rcll
xchg
mov
lea
or
bound
mov
adc
sub
hlt
cmp
xchg
and
nop
loope
push
popf
fldcw
sub
push
jnp
std
xchg
arpl
mov
cmp
jo
mov
inc
jge
lcall
push
cmc
test
xor
push
xchg
push
xor
jno
jns
cmp
repz
sbbl
sar
jns
xchg
and
xchg
sub
add
pop
xchg
inc
inc
sub
stos
leave
fstpl
shl
out
icebp
mov
out
xchg
cmp
aam
stos
cs
xchg
ret
pop
movsb
fimull
sti
iret
scas
lea
out
or
mov
fs
loopne
out
cmp
mov
sarl
push
int
cmpsl
fwait
test
shlb
mov
or
push
mov
fs
rolb
cmp
lret
leave
jecxz
xor
dec
inc
and
mov
adc
popf
xchg
nop
mov
jmp
sarb
fst
out
mov
jne
cld
adc
push
mov
stos
dec
mov
out
xchg
mov
mov
xchg
sbb
f2xm1
pop
sbb
pushf
adc
movsl
xchg
jae
jbe
scas
imulb
and
insl
sbb
fiadds
cmp
jb,pn
adc
and
inc
xorl
sub
icebp
dec
sub
inc
fbstp
inc
jge
aam
xchg
cmpl
fsubl
in
jb
out
clc
sub
xor
fildll
push
or
mov
mov
sar
enter
dec
sub
push
repz
dec
xchg
pop
bnd
add
decb
not
and
xchg
or
sbb
call
js
sbb
repz
add
sbb
pop
mov
imul
inc
xchg
ret
out
push
cmc
inc
imul
sbb
hlt
mov
rcrb
stos
cmpl
jns
xor
popa
dec
mov
lret
lahf
int3
int3
push
mov
shrb
cld
imul
sarl
lahf
mov
jae
faddp
mov
inc
inc
out
stos
xchg
call
pop
nop
jl
and
mov
xchg
fstl
xor
cmpsl
js
push
pop
dec
or
mov
xor
and
leave
dec
cmp
pop
xchg
jo
adc
in
aam
cmp
xor
sub
push
xor
fcompl
inc
mov
cli
push
sar
lret
pop
adcb
and
sbb
outsb
int3
sbb
sbb
xor
pushf
aas
fwait
nop
dec
mov
shrl
or
cmpsl
cmp
pop
cli
push
push
fcomps
out
stos
inc
jecxz
mov
push
pop
dec
sub
adc
push
pushf
and
jge
push
xchg
rol
or
inc
xchg
imul
or
dec
mov
adc
repnz
ss
xchg
jne
cwtl
les
sti
xor
jb
mov
pop
stc
jl
out
subl
sub
xor
stos
pop
insl
out
and
mov
adc
xor
inc
push
mov
cltd
cltd
mov
push
decb
mov
ret
ret
scas
jle
leave
mov
outsl
or
mov
nop
mov
sbb
xchg
mov
xchg
sbb
sbb
push
push
sub
lods
cmp
shl
xor
es
add
loope
jae
ljmp
mov
stos
pop
adc
sbb
dec
push
pushl
adc
jns
push
push
lods
sub
invd
mov
mov
jecxz
in
js
imul
inc
adc
inc
dec
lea
push
cld
cmc
push
mov
test
jns
inc
aad
cli
pop
or
adc
jns
divb
sahf
aas
xchg
jecxz
and
in
fadds
and
repnz
aad
repz
push
add
insl
sbbb
mov
xchg
mov
add
jl
pop
mov
lods
and
or
cmc
push
dec
insl
push
aaa
pop
inc
add
adcb
inc
jns
jg
xor
pop
jnp
inc
cmp
adc
lock
fstpt
sub
mov
rcrl
xlat
stos
enter
sbb
mov
ja
enter
sbb
pop
fwait
roll
push
cli
std
leave
xor
xchg
xchg
cmp
test
fldl
shr
jle
fwait
pop
fdivrl
fmuls
mov
je
cmp
clc
cmp
std
mov
jecxz
arpl
adcb
inc
fdivl
sub
test
mov
dec
addr16
aam
push
push
hlt
lret
ja
gs
jbe
dec
jmp
dec
shl
in
inc
movsb
or
popf
jo
lcall
mov
imul
pushf
adc
pop
mov
xchg
out
hlt
dec
test
ljmp
jl
fisttpl
mov
pop
out
dec
pop
out
push
inc
in
or
es
pusha
mov
pop
call
fwait
subl
inc
sbb
cmp
mov
sub
add
lcall
inc
out
movsb
call
sbb
xchg
insb
mov
sbb
out
cmpsl
ja
xchg
lods
arpl
pop
xchg
inc
sbb
lea
call
lret
mov
mov
aam
mov
push
push
popa
jnp
cmp
out
popf
jbe
fidivrs
inc
jb
das
mov
aas
xchg
int3
mov
inc
adc
popf
std
rcrb
ret
jl
pop
pop
mov
adc
inc
imul
sub
icebp
mov
inc
sbbb
cmp
adc
and
ds
in
shrl
repz
jle
adc
mov
rclb
inc
insb
dec
lds
xlat
bound
xor
scas
mov
nop
dec
and
or
sbb
cmc
and
jl
jne
stos
mov
push
iret
pop
ret
outsl
jb
fwait
stos
mov
xlat
inc
or
pop
sub
cmp
pushf
push
lods
icebp
repnz
xchg
mov
sahf
outsl
cmpsl
push
sbb
repz
lock
xchg
xchg
dec
cs
sbbl
test
lods
and
push
sbb
jp
fdivl
ficoms
and
shrb
add
ja
push
insl
sbb
jnp
filds
call
sbb
jnp
adc
out
pop
fs
jle
aam
add
ljmp
jp
jns
sub
cmp
push
inc
cmpsl
adc
pop
mov
test
inc
lock
out
fdiv
jae
push
mov
push
pop
jmp
jecxz
sub
mov
pop
pop
inc
inc
pushf
inc
out
loop
or
hlt
jmp
cmc
cmp
ds
clc
jle
xor
lods
repz
jno
mov
cld
mov
cltd
xchg
ret
mov
out
rcr
dec
loope
inc
sbb
inc
ljmp
es
scas
add
fstl
dec
lods
mov
mov
pop
in
cmp
pop
inc
dec
sub
scas
repnz
in
inc
lods
in
sub
movsl
dec
mov
push
ja
fisttpll
cmp
mov
movsb
add
cmp
pop
xchg
mov
mov
andb
lods
pop
pop
enter
xchg
dec
cwtl
add
cld
xchg
mov
pusha
mov
int
gs
or
xor
in
lcall
mov
aad
pop
jb
daa
out
push
add
dec
sub
lcall
xchg
pop
push
orl
add
inc
sbb
mov
les
into
adc
movsl
or
lret
mov
mov
inc
stos
jge
lds
mov
enter
or
nop
test
mov
dec
jecxz
stos
fs
or
test
popf
subps
mov
ljmp
jbe
mov
xlat
add
adc
mov
add
xor
fisubl
cmpsl
mov
inc
push
and
or
shll
mov
cmp
lret
jae
cltd
sbb
sar
cmp
push
loope
loope
jmp
out
xlat
inc
fcmovnu
add
adc
test
cmp
popa
add
pop
loop
aam
inc
shrb
xor
fisttpl
leave
mov
mov
xor
pop
jmp
mov
jg
aam
dec
loopne
sbb
cmp
repnz
xor
mov
mov
loop
cld
roll
movsl
and
out
ror
and
xor
orl
fcomps
call
fwait
ret
push
xorb
and
push
das
sbb
addr16
jae
mov
cs
mov
cmp
and
lods
sub
inc
dec
xlat
mov
xchg
mov
inc
jg
aad
lcall
and
insb
mov
enter
add
movsb
insb
call
adc
rclb
in
js
inc
dec
cmp
push
dec
mulb
xchg
push
mov
aaa
pushf
shr
sub
gs
sarl
loopne
lods
xor
adc
sub
fstpl
cmpsb
and
shlb
lret
clc
and
cmp
or
jp
aas
fidivs
and
outsb
hlt
and
shlb
mov
scas
enter
pushf
inc
mov
insl
sbb
mov
lea
aam
fildl
pop
cmp
inc
out
pop
sub
jne
daa
sub
stos
lcall
call
pushf
inc
push
mov
enter
mov
fnstcw
mov
clc
sub
xchg
mov
flds
sbb
test
cmpsb
jp
stc
repnz
repnz
fs
sub
bound
jecxz
or
adc
cmp
mov
cltd
rcrl
mov
or
push
in
xchg
mov
popa
dec
clc
imul
push
aam
mov
dec
mov
jge
jno
out
add
andb
inc
inc
and
add
imul
xor
pop
repz
push
xor
push
mov
aaa
cld
mov
jle
mov
jbe
bnd
xchg
xor
lods
cmp
in
pushf
xor
and
test
shl
fwait
roll
in
lret
inc
subl
scas
in
sub
call
cmp
leave
xor
ficomps
mov
mov
ss
cmp
mov
pop
dec
cmp
imul
push
out
sub
xor
mov
pop
out
movsl
jp
adc
fbld
jne
movsb
fistpl
sti
jg
cmp
jecxz
sbb
in
lods
testb
adc
jecxz
sbb
push
pop
std
into
hlt
das
andl
popa
cmp
jmp
add
jl
pop
push
pop
pusha
inc
icebp
andl
mov
ret
repnz
jns
aaa
fldl
inc
dec
sub
ljmp
std
or
scas
icebp
shrl
mov
push
or
test
xor
mov
sub
pcmpgtb
sub
push
mov
push
icebp
repz
sbb
insb
dec
cmp
cli
mov
out
cmp
xchg
add
mov
push
inc
xlat
in
mov
test
aam
gs
add
popl
rorb
pushf
add
lret
push
jp
mov
xchg
pop
push
pushf
sub
shll
rcrb
addl
push
nop
mov
xchg
arpl
test
pop
xor
and
push
pop
sbb
mov
jns
add
push
jmp
ror
mov
outsl
clc
idiv
ljmp
cmp
sbb
xor
dec
jmp
and
mov
push
sbb
xchg
arpl
lret
subb
add
int
mov
stos
jbe
pop
scas
pusha
in
mov
cli
push
push
pop
sub
lock
push
adcl
repz
mov
push
jae
fs
mov
jmp
in
adc
push
idivb
out
push
or
push
mov
or
andb
fbstp
or
xor
sub
sbb
add
mov
or
jge
sbb
lea
and
xchg
add
mov
and
ss
nop
pop
xor
sub
cwtl
sbb
jmp
nop
and
mov
dec
lahf
and
add
mov
xchg
mov
cld
sbb
add
xchg
fs
cmpsb
jae
outsb
int
push
cmp
fiadds
adc
data16
xor
xchg
stos
and
mov
or
inc
cmp
or
sbb
cmp
std
and
fcomp
mov
pop
mov
mov
or
fisubs
mov
jbe
cmpsl
xchg
cmp
adc
sub
sahf
int3
mov
clc
pushf
aaa
or
push
in
jmp
dec
jge
sub
and
adcb
loop
adc
fisubrs
aaa
inc
jl
pop
jae
mov
jno
adc
xchg
popa
mov
loop
hlt
jbe
arpl
pop
leave
in
int
outsb
cmpsl
pop
adc
dec
jne
nop
pusha
daa
stos
mov
add
das
inc
xchg
in
push
ret
inc
dec
repz
jmp
loopne
xor
or
xchg
inc
adc
ss
aas
iret
enter
or
xchg
dec
pop
sub
sbb
gs
and
xor
xchg
and
dec
jge
push
add
into
repz
sbb
jmp
pop
stos
mov
ror
aas
cmp
pusha
lahf
jg
or
dec
scas
mov
mov
shll
cwtl
mov
cs
das
clc
pop
sub
hlt
jb
shl
je
jne
or
pusha
insl
cmc
orb
sbb
push
pop
dec
pushf
jnp
mov
cmp
mov
mov
pop
loopne
mov
jge
mov
cmp
mov
aaa
pop
pop
add
aam
pop
imul
cltd
and
mov
sub
sub
mov
popa
shrl
ret
lock
test
out
lret
xor
aas
jnp
incb
adc
push
sbb
and
push
loop
cld
insl
sub
xchg
push
jle
ja
adcb
inc
arpl
popf
xchg
and
fisubrs
sub
push
inc
dec
rclb
xchg
cs
xchg
outsl
movsb
rorl
jo
add
mov
and
dec
call
outsl
xchg
xchg
adc
notb
xchg
cmpsl
cmp
inc
xlat
out
icebp
loopne
or
lahf
push
push
sbb
adc
adc
stos
add
mov
arpl
xchg
aas
sub
pop
pop
iret
stc
roll
jmp
mov
cmp
jae
xchg
mov
lret
mov
push
bound
xor
sahf
insb
arpl
xchg
jo
push
mov
cmp
inc
add
insb
stc
test
and
pop
or
mov
adc
daa
adc
aam
std
std
inc
mov
pop
pop
sbb
inc
push
mov
imul
push
adc
mov
sti
enter
jmp
adc
push
rorl
or
scas
aad
dec
inc
pop
fisubrl
inc
mov
pop
jecxz
imul
call
imul
mov
lcall
lahf
cmp
sbb
or
mov
out
mov
sahf
dec
fwait
jb
flds
jbe
hlt
ljmp
jle
sbb
mov
out
int
pushf
mov
das
into
cmpb
adc
mov
inc
mov
fmull
in
setp
mov
jl
sbb
sub
pop
jp
jne
lods
icebp
cmp
sbb
aad
sarb
mov
lcall
sub
dec
mov
call
ret
popa
out
pop
push
push
inc
idivl
out
push
push
jecxz
inc
dec
sub
mov
stc
sbb
jecxz
or
adc
clc
jno
in
mov
lahf
pop
or
xor
outsl
scas
cld
xor
push
push
dec
scas
lods
mov
adc
adc
mov
jge
xchg
sub
sub
xchg
shll
xorl
int3
orb
sar
cld
and
call
adcb
and
jb
lret
out
xor
movd
es
sarb
cwtl
pushf
mov
pusha
das
and
xchg
mov
ror
xchg
subl
fistpll
push
addr16
mov
fdivl
inc
pop
loop
inc
xlat
sub
ds
sub
mov
fucomi
mov
add
mov
ljmp
fcmovu
xchg
or
cmp
leave
hlt
rolb
test
xor
loopne
out
jns
stos
icebp
lods
sbb
dec
dec
mov
fistpll
shll
stos
xor
popf
lret
sbb
in
or
dec
cmp
out
push
pusha
bound
call
push
mov
jg
lds
or
mov
pusha
cmp
scas
popa
sbbl
add
lahf
pushf
xchg
sbb
cmpsb
xor
sub
inc
jae
mov
sbb
adc
adc
cmp
imul
jge
sub
dec
push
lods
dec
call
xchg
push
jbe
adc
pop
insl
fldt
xor
jl
pop
nopl
mov
sahf
pushf
cmpsb
mov
or
cmp
or
fsubr
stos
mov
aam
cwtl
adc
xchg
adcb
mov
fsub
fwait
xor
jmp
subb
xor
push
cmp
push
in
testl
xor
jns
jae
pop
jb
insb
test
inc
sub
aas
push
insb
pop
push
aam
pop
sarb
sbbl
sbb
and
ret
xchg
mov
jle
mov
ret
push
jo
pushf
inc
add
mov
pop
leave
scas
je
and
daa
leave
lock
in
add
jge
lods
and
neg
dec
bndstx
xor
jno
rclb
dec
leave
xchg
mov
lret
mov
data16
mov
cmpsl
scas
adc
mov
pop
add
push
out
call
testl
mov
or
pop
jnp
pop
or
jle
mov
clc
loop
inc
in
scas
mov
mov
loopne
mov
or
ss
stos
xlat
loope
ror
cltd
loope
shr
mov
inc
test
orl
mulb
bound
cmp
repnz
xchg
jmp
inc
inc
lret
push
mov
pop
push
fs
jo
adc
mov
ret
jbe
add
fwait
hlt
or
ja
mov
mov
adc
lahf
push
sbb
test
pop
or
dec
push
imul
mov
out
aam
mov
cmp
insl
lods
cmp
sub
jl
movsb
orl
add
decl
add
mov
mov
jmp
dec
test
int
or
das
jb
imul
movsb
stos
push
mov
adc
ljmp
rcl
out
ja
inc
adc
test
mov
loopne
xchg
fadds
cmp
adc
outsl
jmp
cmp
cmp
fnstcw
stos
lcall
adc
push
dec
xor
mov
pop
pop
iret
wrmsr
xchg
aam
mov
or
mov
daa
sahf
arpl
scas
or
ja
adc
orb
mov
pop
xor
fwait
imul
sub
and
dec
inc
sarl
popa
dec
mov
lock
cmpsl
std
jb
pop
loope
lock
push
out
scas
es
aam
push
add
xchg
jae
hlt
negl
or
add
jno
mov
mov
mov
pop
inc
inc
lea
test
add
push
scas
jmp
addl
lahf
cmp
leave
js
pop
xor
xlat
mov
in
and
or
push
leave
add
mov
cmpsl
mov
xchg
fidivrs
repz
addr16
adcl
out
sub
sbb
pop
aaa
push
cmp
cmpsl
sub
lds
sbb
mov
inc
in
addl
mov
or
int3
popf
dec
test
jns
lcall
push
add
sbb
aad
fs
das
fbstp
add
lret
xor
xor
loopne
sub
int
xchg
cmpl
push
in
xlat
sbb
sarb
cltd
fistpl
in
nop
stos
pusha
xchg
fcomi
adc
xchg
xchg
jmp
test
test
sbb
pop
pop
repz
jecxz
lds
push
xchg
or
push
fwait
lcall
into
mov
lock
adcl
add
jmp
faddp
mov
dec
push
inc
jnp
mov
and
jb
jnp
sub
dec
ret
gs
out
in
sbb
lcall
or
stc
dec
or
popa
push
push
fwait
sbb
pop
mov
lock
ret
fdivrl
inc
push
adc
js
lock
jmp
into
mov
fidivl
je
mov
mov
rcl
jnp
stos
ds
xor
push
test
add
push
repnz
fs
dec
cmpsl
jbe
dec
sub
sbb
js
jge
mov
sbb
cwtl
lcall
xor
mov
addl
pop
andb
xor
sbbb
testb
jo
xchg
lock
outsb
xchg
mov
cmp
sti
or
loopne
test
jge
insb
xor
dec
cmpsb
mov
popf
dec
add
insb
jle
cli
dec
cmp
add
inc
popa
mov
and
mov
jb
mov
inc
ds
mov
mov
sbb
xor
popf
xor
loopne
subl
jmp
push
stos
cltd
adc
adc
sahf
inc
lcall
std
shr
imul
push
mov
test
or
inc
stc
jno
dec
pop
and
lcall
cmp
adc
ss
es
jns
loope
and
nopl
fstpt
xchg
mov
fcmovb
xchg
add
mov
xchg
stos
std
jle
pop
js
fiadds
and
bswap
cld
icebp
add
in
ret
daa
stos
lcall
adc
sbb
aad
xchg
ljmp
ljmp
mov
aam
jg
and
mov
jg
shll
xchg
mov
into
push
fcompl
mov
push
lahf
cs
loope
pusha
popa
xchg
data16
mov
mov
nop
scas
and
mov
mov
cwtl
and
add
stos
mov
pop
inc
int3
jle
js
je
pop
sahf
xor
rorl
testb
pop
notl
push
inc
pop
ljmp
push
scas
out
mov
es
fs
mov
jecxz
dec
push
mov
jge
mov
js
aam
jecxz
mov
aad
sub
cmp
xchg
mov
pop
aaa
xor
sahf
test
push
sbb
cltd
jns
mov
rcrb
imul
xchg
sbb
xlat
pop
pop
or
adc
jae
adc
add
test
insl
jno
jg
test
and
and
inc
movsl
xor
or
mov
dec
int
sbb
test
loope
repnz
int3
js
leave
xchg
mov
ficomps
fstp
adc
cmp
mov
push
add
push
xchg
mov
cmp
pop
jbe
mov
mov
lcall
roll
sub
sub
push
push
cli
mov
insb
sbb
xchg
fwait
mov
repnz
les
outsl
insl
jae
int3
jnp
or
xchg
adcb
xchg
dec
out
cmp
es
xor
les
stos
cli
das
cmp
pop
and
jne
dec
add
lcall
push
and
aam
ret
jge
ja
sub
xchg
fs
push
mov
and
lcall
scas
stos
popa
aam
dec
orb
inc
sub
lcall
hlt
sar
sbbl
mov
or
add
dec
les
and
es
jp
scas
xchg
inc
pusha
xor
ds
inc
ljmp
out
ja
jnp
xchg
mov
jle
push
jne
outsl
js
pop
xchg
xchg
dec
stos
xchg
or
xor
jnp
cmp
bound
cmp
mov
sti
jbe
insb
jp
jl
bound
aaa
xchg
dec
sbb
incb
or
cld
cmpl
aas
andb
xlat
shll
fsub
sbb
mov
fists
in
popf
out
mov
cmpsl
jge
pop
into
pop
mov
mov
das
pushf
aas
ret
xchg
xchg
mov
push
jg
dec
out
int3
scas
jnp
and
and
pop
invd
in
out
lret
mov
cmpsb
cmc
les
loop
ds
adc
lods
imul
dec
pop
repz
xchg
sbb
fidivs
mov
lds
sub
adc
push
outsb
inc
test
and
jne
mov
lock
bound
jb
cmp
sbb
out
mov
loope
sub
ja
jo
jne
xor
cmpsb
test
lea
bound
add
jle
loopne
daa
lods
jp
lcall
lock
jle
jns
xchg
dec
cmp
adc
test
mov
mov
push
cmc
dec
in
iret
nop
push
roll
sti
call
outsl
push
dec
in
popa
or
jbe
repz
inc
mov
push
repz
sahf
hlt
mov
adc
push
js
sti
pop
mov
hlt
dec
lds
js
in
mov
sub
scas
push
push
mov
or
push
adc
fadds
mov
sar
das
mov
mov
dec
mov
lret
or
into
fyl2x
jo
sbb
sbb
and
or
scas
cmp
push
nop
hlt
mov
imul
mov
dec
mov
mov
adc
pop
aaa
in
imul
cld
cmp
mov
sbbl
in
sub
mov
lret
sbb
push
daa
mov
dec
sbb
xchg
and
xor
and
ret
push
fsubr
sub
out
ds
or
jbe
insb
pop
jmp
prefetchwt1
sbb
fs
les
clc
ja
sahf
mov
scas
popf
xchg
aad
call
add
xchg
scas
das
mov
cmpsl
andl
push
cmp
lods
ret
cmc
mov
adc
rclb
inc
pop
pusha
aad
inc
pop
jno
sub
pop
cld
mov
sbb
ljmp
sub
sub
mov
jl
cwtl
xor
sub
push
ja
adc
mov
mov
lock
adc
aas
lret
daa
out
and
in
mov
and
cmovs
out
or
adc
push
jo
jp
mov
hlt
test
jmp
fidivs
jb
mov
aas
adc
jnp
pop
inc
jp
push
arpl
push
push
xor
mov
mov
pusha
jp
out
cmc
mov
jne
push
dec
adc
mov
mov
jns
adc
sbb
mov
or
mov
sub
sub
jp
jb
dec
div
fs
mov
or
pop
aaa
jmp
jnp
cmpl
scas
jl
je
pop
jl
mov
popa
inc
and
push
mov
push
es
test
arpl
dec
xchg
or
add
insb
dec
clc
pop
out
cld
lret
or
push
cld
cmp
divl
in
and
or
or
dec
xchg
test
jo
mov
pop
lret
test
mov
out
mov
mov
dec
and
pop
mov
mov
mov
pop
cmpsl
cwtl
es
mov
sub
shr
repnz
push
bound
mov
mov
lret
inc
dec
inc
lds
pushf
cli
loop
xchg
xlat
ret
push
push
sub
inc
arpl
incl
mov
fnstenv
adc
push
sbb
arpl
adc
negl
jne
cli
and
ret
dec
orl
sub
push
sarb
jbe
xor
cltd
jecxz
fidivrs
add
jecxz
iret
xchg
sbb
pop
sub
std
adc
inc
aam
xchg
or
out
loop
adc
cwtl
pop
dec
int
dec
fcoms
jbe
sub
and
addr16
xchg
ljmp
out
push
jb
push
daa
mov
xor
gs
and
cmpsl
pop
dec
aas
movsl
inc
jnp
jb
sub
adc
xchg
cmp
movsl
out
jg
sahf
adc
call
std
lock
inc
aam
jno,pt
xor
loopne
inc
cmpsl
aam
pop
shrb
es
cmp
pop
add
xchg
loop
pop
test
lock
adc
sub
sub
rorl
add
lsl
sarl
dec
inc
jg
mov
in
je
shr
movsb
inc
adc
ret
arpl
pop
imul
jg
cs
mov
add
lods
outsb
sub
push
testb
cmova
lea
xchg
mov
ja
sub
jp
and
cmp
add
fnstcw
test
push
les
push
nop
inc
andl
mov
loopne
sub
inc
xchg
adc
adc
lret
push
mov
push
mov
into
mov
pop
cmc
addb
ret
inc
addb
push
popa
add
adc
pop
cli
sbb
push
jge
xchg
cwtl
cmp
popa
mov
loopne
dec
fwait
cltd
mov
movsl
test
dec
popf
xchg
clc
pop
inc
and
and
pop
adc
int
or
pop
and
popf
out
add
popa
das
inc
fadds
aas
jno
pop
outsb
add
subl
cmpsl
cs
arpl
outsl
mov
es
movsb
ret
test
bound
out
xlat
inc
mov
dec
call
aad
sbb
aaa
mov
mov
jo
pop
imul
nop
inc
test
fcompl
xchg
and
stos
fs
scas
lcall
arpl
adc
shl
push
icebp
jg
push
mov
push
es
sub
mov
addr16
sub
insl
iret
rorb
cmp
mov
push
jmp
daa
adc
and
mov
lcall
jns
popf
out
test
or
sub
jns
les
rcrb
cmpsb
mov
mov
pop
iret
loope
xchg
stos
and
cs
fs
fs
pop
ljmp
mov
ljmp
ds
orb
or
loop
lods
adc
adc
in
push
lods
sahf
and
sub
sbb
xchg
scas
in
int3
lods
je
sub
pop
leave
shll
lret
into
adc
jne
je
loop
fs
push
xchg
icebp
xorb
xchg
divb
out
insb
pop
out
sbb
insb
sbb
rclb
adc
sbb
js
add
out
outsl
fisubrs
stc
int3
pop
push
rclb
lods
mov
push
lds
push
mov
push
adc
mov
ds
insl
sub
lock
cmp
andb
daa
fidivl
cmpsl
and
cs
aas
cwtl
nop
mov
push
mov
fcoml
lock
daa
divb
jg
cli
or
pop
mov
shrl
cmp
jbe
sub
jbe
pop
enter
mov
lods
jno
dec
push
lret
stos
repz
adc
insl
xchg
test
das
sbb
inc
call
lea
lret
jle
mov
out
or
rcrb
pushf
das
faddl
aad
or
mov
adc
out
xorl
aas
jmp
dec
xorb
pop
cmp
sarb
out
push
mov
jmp
mov
ja
pop
popa
jp
and
jnp
and
leave
and
xlat
or
shrb
jg
push
lcall
std
insl
ret
cmc
mov
pusha
call
mov
in
pop
pop
insl
leave
ret
loope
cli
adc
test
cmp
in
sbb
mov
dec
dec
sbb
insb
mov
and
mov
adc
push
loope
sub
xor
sub
dec
sbb
xchg
push
jbe
fimuls
pusha
add
aad
cmpsb
cmp
jno
mov
ds
out
out
mov
cltd
sbb
push
xchg
add
xchg
adc
mov
cmpsl
inc
xchg
add
xor
aad
movsb
leave
out
sarb
add
and
ljmp
popa
pop
in
iretw
xorl
loop
mov
rcl
xchg
out
mov
mov
xchg
pushf
imul
jp
inc
sbb
mov
cmovbe
hlt
xchg
ficoms
jmp
mov
js
cmpsb
pop
add
xchg
xchg
xor
pushf
out
fwait
mov
movsb
imul
fildl
stc
orb
and
sbb
clc
add
and
dec
aad
mov
gs
out
mov
mov
mov
sub
aad
inc
dec
mov
mov
mov
filds
test
sub
in
movsl
cmp
push
inc
shlb
int3
sahf
mov
shrb
add
mov
inc
xchg
jno
inc
pop
ret
jle
xor
pop
sahf
xchg
ret
fbld
mulb
inc
inc
enter
movsl
mov
outsb
mov
ss
xor
inc
mov
pop
sbb
cmp
mov
cmpb
mov
add
xchg
das
aaa
test
inc
ljmp
cmp
out
insb
mulb
lret
jle
pusha
out
out
insl
mov
bound
xor
loope
mov
mov
iret
push
jle
cmp
mov
sbb
ret
xchg
bswap
jp
mov
mov
stos
repnz
push
mov
and
mov
xor
and
addr16
es
ret
lods
mov
stc
mov
add
lods
scas
push
jle
add
andl
xchg
scas
je
or
inc
popf
and
xchg
add
shll
sahf
and
xchg
ret
xorl
jns
pop
hlt
pop
xor
fwait
ret
mov
cmpsb
test
cmp
fidivrs
pop
rcll
cmc
jns
push
jmp
mov
add
jb
jbe
addr16
mov
push
jno
xchg
inc
lahf
enter
jb
push
add
stc
and
out
sbb
insb
popa
test
mov
pop
inc
popf
jae
mov
xchg
pop
repnz
imul
jb
aad
mov
or
lods
mov
lds
xchg
jbe
adc
add
stos
mov
loope
popa
popfw
stos
mov
fadd
ja
fwait
stos
dec
insb
stc
xchg
push
sub
lret
push
mov
pop
adc
divb
pop
jnp
sbb
test
push
ret
adc
push
sub
sar
jb
int3
adc
stos
sahf
dec
lock
mov
jb
pop
push
cmpsb
jnp
cmp
lret
addr16
xchg
test
movl
rcrl
mov
int
fsubs
nop
cmp
xor
bnd
push
sub
inc
cmp
popf
and
int
cmc
sub
out
or
jg
fdivs
and
ljmp
mov
int
test
push
pushf
aad
scas
mov
out
jge
incl
addl
in
lock
jmp
dec
ja
movlps
sti
sub
orl
cmp
lds
and
mov
mov
call
cmc
jb
sbb
stos
push
sarb
pop
addr16
lods
sub
sahf
xchg
cmc
fdiv
sbb
loope
jno
xor
lret
movsl
jnp
sub
lea
mov
test
xchg
ret
pop
cmp
mov
lods
mov
filds
repnz
iret
mov
inc
mov
mov
pop
insb
ret
jmp
xchg
jl
xchg
mov
push
int3
inc
sbb
pop
mov
enter
adcl
cmp
mov
lret
stos
scas
xor
inc
mov
add
fsubrl
jb
push
jb
and
mov
inc
frstpm(287
push
mov
or
lahf
cltd
cmp
mov
ss
lcall
movhlps
mov
call
inc
mov
mov
pop
sahf
mov
adc
dec
lods
sbb
cltd
pusha
xchg
mov
mov
cwtl
mov
jle
jle
lea
adcl
out
jo
mov
jno
leave
mov
scas
mov
sub
jbe
push
enter
stos
jp
adc
shlb
adc
sub
xor
ds
les
push
dec
jno
xchg
fcoml
loopne
lods
sahf
mov
sbb
loope
cmp
or
add
mov
inc
fisubrl
aam
js
movsl
in
sub
cmp
xchg
inc
push
mov
inc
jmp
inc
pop
in
jbe
sub
cmpsb
xchg
ljmp
cmp
mov
mov
push
and
inc
rol
gs
jb
xchg
add
cmp
inc
test
arpl
sbb
and
out
inc
popa
push
out
test
fsubp
jg
xor
adc
sub
sub
data16
push
test
mov
sbb
call
pusha
test
sti
cmp
and
aas
push
adc
shrb
jmp
dec
rorb
mov
clc
inc
pop
aam
ret
pop
xchg
inc
out
cmp
xchg
push
adc
cltd
jbe
xor
call
or
jecxz
clc
inc
mov
fisubl
jns
pop
mov
iret
iret
inc
movsb
imulb
or
jnp
add
mov
pop
ja
dec
not
outsl
in
xchg
dec
mov
aad
scas
scas
test
adc
andb
orb
sub
pop
cmc
pop
nop
int
loop
jge
aaa
mov
inc
push
xor
push
into
lods
js
cs
call
mov
es
cwtl
imulb
jae
hlt
pushf
fstpt
movsb
pop
fisubl
dec
fidivl
xlat
mov
pop
idiv
jbe
call
mov
jne
leave
insb
and
pop
insl
addr16
dec
push
dec
stos
sub
lock
aam
sbb
lahf
jmp
push
jns
rorl
add
mov
or
in
jae
xchg
inc
mov
rcrl
cmp
sbb
or
lds
scas
or
testl
and
addr16
imulb
sub
vphaddubq
adc
fbstp
xor
inc
push
stos
aam
jnp
bound
test
sti
jl
mov
pop
push
imul
pop
mov
out
add
mov
and
mov
je
sbb
fisubrl
pop
int
xor
mov
add
pop
insb
pop
loope
sbb
pop
add
shrb
fisttpl
pop
shrb
int
je
insb
repnz
insl
out
jg
les
fistpll
pop
or
push
in
xchg
fisubs
popf
mov
xchg
sub
pop
enter
sub
test
jb
push
lds
add
add
xchg
add
push
sub
setae
fmuls
pop
mov
sbb
not
xchg
pop
jae
loopne
decb
push
in
mov
lahf
out
cltd
lods
xor
mov
mov
dec
adc
stc
and
adc
mov
cwtl
push
cmc
std
fsubrs
aaa
sbb
sbb
andb
jo
ds
into
mov
negl
sti
xchg
adcb
clc
addr16
or
jnp
inc
xchg
sarl
andl
sbb
mov
enter
sbb
int
int3
addb
dec
dec
pusha
icebp
rcrl
lret
dec
push
and
jno
es
or
xchg
seta
push
hlt
or
and
push
sbb
cmc
scas
xchg
daa
out
push
popa
movsl
std
xor
jmp
mov
in
std
in
repz
push
dec
mov
in
push
gs
jg
adc
inc
repz
mov
cmp
stc
push
sbb
adc
and
or
add
add
and
outsb
jmp
repnz
dec
inc
sarb
lods
movsb
bound
das
jo
mov
inc
sub
movsb
pop
decl
mov
int
test
push
xsha256
cmpsb
xchg
jae
iret
pop
jnp
pusha
sbb
jle
mov
ljmp
xor
rorl
cmp
int
fsubl
xchg
push
inc
rclb
out
push
in
sub
xlat
inc
mov
mov
xchg
lea
in
add
jbe
rolb
push
stos
aaa
lret
adc
inc
mov
sbb
xor
dec
out
enter
mov
sub
iret
inc
pop
or
mov
hlt
jno
mov
ret
mov
inc
ficomps
xchg
adc
dec
shll
or
rol
jnp
pop
das
inc
add
mov
sti
xor
sbb
jl
mov
dec
addb
push
lock
fistl
jae
pop
fwait
cld
push
jl
cltd
xlat
cmp
jns
mov
cmp
mov
mov
sbb
fwait
and
push
mov
push
aad
inc
lock
aam
ja
rclb
outsb
push
cmp
ss
out
jbe
and
pop
and
xchg
mov
movsl
and
sbb
loop
inc
lods
jns
pop
pop
jnp
pop
pop
mov
dec
mov
gs
mov
cmpsb
cli
test
mov
stos
jp
adc
out
js
jns
fldlg2
pushf
jl
jns
mov
adcb
fcomps
cltd
cmp
out
pop
cmp
aaa
fwait
push
push
in
pop
jge
movsl
ret
lret
out
out
ljmp
mov
mov
lock
or
pop
sub
xor
mov
ret
pop
call
in
loope
push
mov
mov
inc
mov
into
xor
add
in
out
ljmp
lret
fidivl
xchg
cltd
add
loopne
pop
insl
in
in
mov
jne
in
movsb
aas
pop
aam
test
mov
push
and
addr16
inc
scas
pusha
adc
test
fadd
pop
sbb
xchg
sbb
mov
aas
mov
lcall
mov
mov
xchg
in
and
inc
sub
fs
pop
mov
sbbb
mov
push
xor
iret
push
xor
jge
sti
sti
push
pop
and
insb
sbb
or
sub
xor
dec
shlb
add
inc
ret
pushf
sub
dec
xchg
jge
sub
cmpsl
pop
shl
andb
loopne
adc
adc
sbb
push
dec
lcall
xchg
add
push
sti
stc
jle
and
or
dec
pop
mov
out
jp
adc
gs
adc
fldt
xchg
adc
inc
mov
stos
stc
and
paddsw
mov
lret
cmpsl
add
test
push
pusha
xchg
inc
js
mov
mov
cmp
push
push
sub
test
xchg
dec
mov
inc
sbb
cwtl
scas
fmuls
call
das
in
dec
and
sub
mov
ss
and
test
std
lahf
data16
mov
lds
pop
push
cli
pop
scas
or
imull
test
jge
mov
add
xchg
loope
inc
popa
in
mov
aaa
mov
adc
bound
out
sub
pop
dec
pusha
in
fwait
or
loopne
ljmp
enter
jecxz
mov
xor
flds
in
and
in
or
jecxz
mov
cld
adc
icebp
and
leave
push
shrb
push
cmp
fs
xor
std
or
or
push
xlat
imul
andb
and
sahf
jp
daa
cwtl
std
dec
jp
xchg
or
inc
clc
mov
mov
fmull
stc
pop
je
adc
xor
sbb
dec
rcrb
and
leave
jle
lea
call
cmp
ficomps
mov
scas
leave
push
xchg
cmp
and
jg
or
mov
sub
xchg
in
cmp
mov
adc
sub
test
hlt
sub
fnstcw
push
inc
dec
popa
push
sub
xchg
mov
rorb
les
add
fcompl
mov
adc
repz
inc
fcoml
add
lds
ret
cmp
xor
inc
cmp
add
xchg
add
dec
mov
lret
mov
xor
cmp
and
dec
out
xchg
mov
push
sub
and
dec
mov
into
notl
lea
or
jno
out
and
cltd
and
jl
dec
in
push
lahf
je
xlat
jmp
pop
in
mov
sub
mov
shlb
iret
aaa
xlat
sub
inc
ja
popf
mov
jns
cltd
test
jle
xchg
fbld
and
xor
cmp
int
js
mov
sbb
emms
sbb
or
sbb
fmull
xchg
iret
pop
adc
icebp
xchg
push
mov
pop
xchg
cmp
stos
arpl
sbb
or
bound
xor
in
js
dec
loopne
and
adc
imul
xchg
inc
aad
pop
cmpsb
or
mov
ret
sarb
dec
pop
adc
call
push
fucomip
push
daa
sub
xchg
out
sbb
mov
dec
mov
sub
inc
cmp
and
sbb
cmp
popa
cmpl
push
mov
dec
or
fistpl
sahf
mov
lods
add
xor
or
cs
ds
dec
decb
out
mov
mov
jmp
dec
enter
popa
pop
mov
and
ja
mov
xchg
les
leave
loopne
shll
mov
lods
push
add
test
mov
sub
imul
pop
in
cmp
jmp
inc
add
xor
adc
inc
lret
fnsave
push
mov
movsl
cvtps2pd
test
mov
rolb
in
nop
jbe
bound
negl
ret
push
adc
shrl
push
xor
hlt
test
xor
test
cld
ret
cmp
lcall
scas
sub
pop
mov
aad
push
jle
cmpsl
imul
call
fisttpl
jmp
jae
lahf
cmp
fldenv
rol
xchg
push
fsubp
cmp
dec
pop
fisubs
rcrl
cmpsl
ss
call
lret
dec
test
sub
pop
mov
int3
test
lods
rorl
cld
add
gs
add
daa
sarb
xor
xchg
sub
test
stos
ficoml
out
daa
rol
or
subl
or
sbb
jmp
hlt
or
push
movsb
dec
je
data16
push
out
pop
jl
lods
mov
pop
fisubrs
out
mov
mov
gs
daa
test
js
ds
daa
dec
jnp
sub
mov
or
push
fs
pop
and
mov
ret
fldcw
pop
mov
jae
in
xor
mov
popf
dec
mov
mov
daa
adc
iret
mov
xlat
fcoms
pop
dec
sub
fs
push
shlb
push
aas
xor
cmp
cmp
mov
sahf
sub
xchg
mov
fcmovnb
iret
sbb
or
sbb
xor
inc
push
push
jp
adc
xchg
aad
cs
dec
in
clc
add
outsl
or
inc
pusha
mov
xchg
call
fcmovb
ljmp
jae
jnp
mov
xchg
in
sub
mov
xor
add
pop
lret
shlb
sti
in
push
scas
cwtl
pop
adcb
rcll
nop
aaa
pop
scas
dec
sub
int
mov
wbinvd
pop
mov
lret
jle
or
inc
lret
dec
ret
xor
pop
movsl
in
pop
sti
gs
push
mov
xchg
adc
xor
loopne
xor
bound
mov
add
jmp
and
loop
push
mov
adc
mov
out
call
je
mov
movsl
in
test
cmp
xchg
mov
fists
xchg
push
dec
adc
mov
inc
adc
rolb
mov
jae
push
in
rcr
inc
and
mov
fisubs
popf
pushf
out
jb
in
dec
je
jno,pt
ret
mov
xchg
mov
aad
jg
or
orb
lods
mov
bound
push
cli
jp
cmp
xor
or
sbb
mov
leave
outsb
rolb
add
in
add
inc
scas
insb
jle
roll
shlb
fwait
repnz
test
das
jnp
popf
jp
test
inc
push
sub
mov
mov
pop
jle
xor
addr16
cltd
icebp
mov
outsl
mov
clc
xor
push
aaa
jb
mov
cmp
sbb
cmp
dec
out
add
xchg
loope
fsubl
mov
repnz
xor
ds
fs
ljmp
arpl
leave
push
mov
pop
cmpsb
xor
std
pop
fcoms
sub
das
sbb
mov
push
mov
movsb
pop
cs
sbb
mov
es
xchg
cwtl
ja
cmp
cmp
ljmp
movsb
xor
jmp
es
dec
negb
jg
mov
inc
in
scas
call
lods
ja
shlb
orl
and
cmp
cmc
mov
push
es
add
mov
inc
adc
jae
repz
les
cwtl
add
push
pushl
stos
dec
add
movsb
push
loopne
dec
insl
leave
or
push
in
pop
xorl
push
cmp
scas
popf
sbb
dec
sbb
ret
cmp
cmp
jmp
pusha
pop
jb
or
pop
mov
adc
xor
fisubl
ds
icebp
pop
and
rcr
jo
adc
xor
xor
cmp
nop
fsts
xor
and
pop
jp
das
or
mov
into
fsubrs
enter
incb
pusha
lds
mov
mov
push
adc
aaa
xor
or
out
movsl
adc
aam
and
dec
adc
and
adc
pop
push
cmpsb
into
sbb
stos
rclb
fisubl
cmp
jns
cli
rcrl
test
jp
lods
clc
inc
mov
jmp
xchg
out
outsl
jae
or
mov
int
mov
js
mov
mov
dec
push
push
dec
and
add
insl
inc
cmp
mov
sbb
push
or
test
stc
clc
sub
sbb
clc
push
push
cmpsl
pop
lahf
scas
test
pop
out
aaa
mov
imul
std
xlat
ret
or
mov
inc
cld
outsb
pop
mov
fwait
or
in
dec
subl
repz
dec
pop
fsubrl
mov
fsts
mov
jge
push
add
or
jno
test
fnstenv
mov
cmpsl
cmpxchg
sub
outsb
sbb
cmp
test
push
je
in
movsb
scas
xchg
mov
sbb
test
pop
push
cwtl
mov
cli
mov
push
jnp
lods
mov
xor
mov
push
sbb
popf
push
dec
sti
jns
mov
lret
pop
int3
push
outsl
insl
fidivrl
lcall
stos
xor
in
jbe
mov
sbb
cmp
addl
pop
int3
sbb
pop
loop
or
mov
sbb
inc
cmp
push
mov
addl
and
mov
pop
pop
mov
je,pt
imul
sbb
mov
insl
pop
adc
scas
sbb
mov
push
idivb
out
lea
xor
jp
outsl
and
inc
out
inc
es
imul
and
ss
push
clc
sarl
stos
scas
int
xchg
xchg
push
addr16
add
mov
fsubs
adc
pop
fwait
popa
xchg
js
mov
cltd
adc
add
xchg
imul
pop
cwtl
lret
jg
jge
sub
mov
insl
xor
into
ds
and
pop
lret
sbb
sbb
pop
push
je
xor
roll
jae
mov
in
ret
es
bound
ja
ret
aaa
and
fs
mov
sbb
out
xchg
sbb
test
sbb
mov
cmp
xor
jno
xchg
mul
mov
and
int
addr16
xchg
fs
ficompl
rcr
das
xlat
dec
arpl
test
xchg
and
stc
cmpsb
out
cmc
pop
mov
mov
sbb
out
sbb
inc
fcom
dec
hlt
aaa
mov
cmp
push
testl
push
cmpsb
int
xor
addr16
test
enter
jle
ret
and
daa
sti
pushf
shrl
cmp
pop
add
xchg
mov
test
mov
and
in
lret
sti
xchg
xchg
add
lahf
inc
in
cmp
dec
cmp
mov
pop
cs
jns
fldenv
iret
add
pop
es
or
cli
jne
in
shll
ss
mov
js
movsl
push
orl
shlb
and
popa
ds
xor
sub
inc
roll
sbb
fsts
adc
jns
ret
dec
orb
in
loopne
jp
jmp
cmpsb
cld
add
test
das
imul
inc
or
xchg
xchg
mov
stos
xor
andb
int
aaa
mov
fldl
andb
push
xorl
les
cld
sub
mov
sahf
lods
sub
popf
pushf
adc
leave
mov
add
cmc
sub
iret
jo
mov
xor
ljmp
fwait
imul
in
fimuls
dec
scas
daa
mov
inc
sbb
pop
fidivrs
loope
xor
push
fnsave
cli
xor
xor
mov
mov
inc
stos
loop
cli
jae
pop
jbe
ds
leave
test
mov
dec
int
stos
pop
pop
sbb
daa
xor
dec
jae
cmpb
push
or
xchg
out
dec
push
or
outsb
mov
mov
push
push
jecxz
and
push
scas
push
add
dec
addl
inc
orl
push
repnz
push
lcall
mov
into
lock
and
adc
cmp
and
jnp
negl
faddl
push
sbb
orb
dec
out
ret
scas
dec
and
mov
jo
push
and
and
pop
insl
or
push
lret
mov
xchg
push
mov
jge
push
xchg
push
cwtl
pop
push
cmp
movsb
mov
and
sub
clc
push
sub
add
push
lahf
xchg
pushf
outsl
cmp
rclb
fiaddl
sub
or
orl
stos
and
sub
jo
adc
pusha
mov
xchg
montmul
cmpsb
inc
pushf
out
roll
inc
xchg
andb
arpl
sarb
cmp
imul
jae
and
rclb
mov
addr16
sbb
movsl
mov
in
test
and
or
stos
cmp
and
cmp
insl
scas
fbstp
push
es
cli
or
pop
pushf
fdivr
loopne
mov
ret
cmp
cmp
adc
daa
sahf
pop
es
push
imul
dec
lods
fstps
inc
dec
pop
sub
xchg
push
sbb
jecxz
into
jg
hlt
lea
mov
inc
or
mov
subb
xor
mov
mov
xor
jns
rcl
sbb
leave
push
test
dec
jbe
and
add
cmp
inc
pop
push
andb
in
neg
sbb
insl
xchg
je
or
fidivl
shlb
aam
and
adc
lock
das
orb
inc
mov
pop
adc
lcall
les
or
jb
mov
std
push
push
sbb
nop
cmp
pop
sub
push
and
fdivs
imul
mov
jmp
dec
leave
and
mov
push
stos
jg
loope
out
fcmove
jns
push
sahf
enter
ja
shll
sub
fstpl
pop
xchg
inc
inc
divl
push
fdivrs
push
xor
arpl
repnz
sub
jbe
out
clc
jo
adc
rcrb
cmpsb
lahf
sbb
jns
outsl
rcr
mov
jnp
pop
jp
add
jl
jo
in
and
jno
lret
jg
jnp
std
daa
or
and
aam
js
or
xchg
and
adc
adc
jbe
add
enter
sub
dec
pop
mov
dec
dec
ret
cmp
lea
pop
adc
push
adc
daa
jl
mov
in
xor
push
andl
adc
inc
or
das
lods
enter
stos
pop
cli
in
pop
adc
jnp
daa
push
adc
xor
add
cmpsb
add
fiadds
loop
or
jg
or
in
imul
mov
add
icebp
jge
jo
repnz
bnd
mov
scas
mov
inc
add
insb
sub
clc
jb
out
xor
fnstsw
fcoml
jno
pop
lahf
std
int3
in
inc
push
movsl
pop
xor
ret
ja
ja
adc
daa
adc
scas
cwtl
pop
cmp
mov
xchg
lret
test
add
lahf
cltd
dec
pop
jmp
push
cli
mov
pop
in
scas
fwait
enter
nop
xchg
test
or
adc
xor
sbb
and
daa
fwait
jb
pop
adc
xchg
mov
dec
mov
push
push
jae
ret
xchg
add
push
jo
xchg
das
out
mov
icebp
shr
jecxz
jae
in
xchg
xchg
sbb
fs
in
outsl
mov
ja
sub
mov
and
movsb
stos
mov
ds
ret
mov
or
popf
xchg
adc
or
jmp
xchg
push
jo
or
or
add
mov
pop
cmpsl
jle
in
sub
mov
mov
aad
cmp
cmpsl
or
mov
cmp
mov
in
or
mov
sbb
lock
push
inc
mov
dec
xor
mov
into
push
rolb
in
jne
je
mov
mov
pop
xchg
mov
idivb
daa
out
xchg
mov
test
es
dec
push
sbb
iret
scas
mov
add
jne
popa
adc
push
push
rolb
jecxz
xchg
lahf
inc
cmc
inc
cmpl
stos
cmp
arpl
xlat
jp
sbb
mov
test
push
in
jns
cmp
movsl
lret
mov
jbe
lods
into
xchg
adc
mov
dec
mov
push
fcmovnbe
lcall
imull
add
cmp
jo
jmp
dec
movsb
push
shlb
add
cmp
push
mov
mov
inc
xchg
dec
jl
inc
dec
nop
repnz
js
jne
outsb
repnz
lcall
js
hlt
aad
dec
rcrb
ljmp
or
pop
fnsave
std
or
push
xchg
and
mov
insl
je
cli
subl
xchg
loope
inc
rcrb
add
mov
sub
das
cmp
lds
xchg
inc
xchg
addl
repnz
inc
std
das
sahf
add
test
mov
mov
xor
push
addl
lcall
and
mov
pop
or
mov
adc
jae
and
xchg
xchg
jecxz
pop
mov
mov
fadds
pop
jo
sbb
insl
pop
mov
clc
dec
mov
mov
loope
imul
inc
xchg
fwait
addr16
gs
addr16
dec
inc
ss
add
loope
outsl
lahf
cltd
mov
jp
clc
gs
pop
fwait
jne
mov
mov
clc
adc
lcall
add
mov
inc
addl
jecxz
orl
mov
cli
add
nop
inc
test
stos
xor
leave
cmp
lret
cwtl
shll
mov
fstps
je
sbb
xchg
mull
push
inc
xor
mov
cmp
outsb
dec
pusha
pop
cli
movsl
std
movsb
inc
es
cld
js
pusha
jp
lcall
shrb
out
xor
jnp
repnz
or
insl
mov
adc
js
outsb
imul
xor
arpl
cmp
xor
inc
ffree
mov
push
call
mov
daa
xchg
subl
fwait
dec
stos
dec
adc
mov
sbb
stos
push
daa
add
lret
orl
and
xor
lahf
fidivl
xchg
outsl
push
pop
insb
rorl
out
dec
test
jbe
xchg
adc
jno
or
push
adc
ret
or
imul
lahf
movsb
mov
mov
rclb
orl
sarl
push
test
movb
mov
lds
jp
dec
sub
lret
adc
jmp
push
or
or
inc
lods
push
repnz
push
adc
xor
xor
cmp
scas
xor
xor
xchg
mov
sub
in
mov
ret
adc
loopne
cld
or
std
sbb
cmp
sarl
and
dec
inc
out
add
or
inc
inc
fsubl
cmc
out
pop
insb
pop
scas
jo
xor
loope
hlt
mov
outsl
inc
sarl
mov
jecxz
aad
push
lea
xchg
popf
into
popf
push
mov
lcall
lods
adc
out
aas
adc
fistps
cli
mov
and
jmp
fstl
sbbl
cmp
popf
dec
add
lods
in
sub
jo
sbb
cmp
fstpl
jp
daa
shll
cmpsl
rorb
sbb
out
mov
jnp
adc
into
sar
add
jle
test
mov
clc
cmp
pusha
inc
loope
stos
aad
in
inc
sub
and
aaa
jle
sbb
cmpsl
dec
mov
mov
bound
lds
and
out
shrb
mov
rcl
out
adc
adc
push
mov
or
fdivp
pop
cs
mov
test
push
pop
sub
inc
sbb
mov
repnz
push
loop
pop
push
imul
pop
sahf
adc
mov
fwait
loopne
and
pop
pop
push
lea
and
jmp
clc
mov
inc
rcl
mulb
jns
push
push
rcr
xchg
fsubl
movsl
push
mov
lret
mov
mov
jecxz
and
cwtl
pop
and
insb
inc
xchg
mov
aaa
cmpsb
and
fadds
std
into
push
mov
shll
cmp
xor
test
filds
push
ret
in
rcrb
sub
mov
xchg
xor
adc
loop
pushf
jmp
roll
data16
push
cmp
negb
out
lahf
leave
jne
icebp
adc
sbb
dec
mov
test
and
mov
popa
arpl
lock
es
lods
mov
add
push
lods
fiadds
sbb
push
sub
lcall
jns
cmpsb
sbb
imul
and
xor
call
insl
push
add
hlt
ret
popa
mov
pop
inc
mov
cmp
imul
xchg
jl
inc
jp
scas
stos
or
add
loop
adc
mov
lret
je
xchg
lds
and
and
jne
add
xchg
sbb
dec
out
fs
pop
mov
xchg
mov
fsubrp
ror
push
pop
gs
mov
xor
bound
push
mov
xchg
sbb
pushf
loope
test
test
push
bound
outsb
xchg
iret
add
stos
pusha
cmc
push
xchg
out
loop
cmp
jmp
and
rcll
outsl
mov
jl
rolb
lret
inc
sbbl
andl
push
cmp
mov
xchg
std
mov
mov
add
mov
fcmove
pop
fldl
sbb
xchg
cwtl
rcrb
ljmp
stc
sbb
xor
arpl
dec
loop
xor
shl
pop
cmpsb
xchg
movsb
or
rcrl
add
cld
movsb
cmpl
adc
and
test
ljmp
lcall
xorl
fdivp
push
fisttpl
dec
pop
fcomps
loop
aam
call
ret
sbb
add
std
inc
negb
aad
loopne
jl
aad
subl
lock
iret
adc
fstl
pop
lock
arpl
sbb
loope
aas
rcr
insl
in
and
mov
pop
pop
jecxz
subb
mov
sahf
in
adc
jg
sbb
test
or
nop
leave
in
adc
jbe
daa
ret
push
mov
adc
pop
push
aas
lds
jl
xchg
cmp
addr16
lret
push
sub
fs
inc
xchg
adc
mov
es
mov
add
mov
sub
push
jae
dec
aam
sub
mov
fxam
sahf
cld
mov
add
cli
push
mov
xchg
xchg
aam
daa
aas
cmp
pop
int3
jne
xchg
shl
xor
aaa
ret
ret
xor
aad
mov
or
xchg
mov
mov
fnsetpm(287
in
add
cmpl
in
icebp
fadd
push
pop
or
std
popa
loope
add
sub
fldenv
and
xchg
jbe
out
mov
and
mov
fwait
std
xlat
sub
dec
mov
pop
sbb
add
movlhps
ret
mov
pop
adc
mov
sub
mov
cmp
cmpsl
sbb
and
add
std
ror
and
js
mov
push
cs
arpl
out
enter
call
xchg
pop
and
fbstp
or
pop
nop
add
cld
int
mov
push
imul
sub
or
jp
cmpsl
shrb
stc
fnstenv
scas
push
and
negl
adc
push
sbb
sahf
mov
stos
xor
ror
inc
cli
into
rcrb
outsb
adc
cmpsb
xchg
mov
inc
pop
mov
mov
or
in
fwait
and
sub
pop
out
add
jecxz
jge
push
insb
jg
inc
gs
adc
js
cwtl
mov
adc
cmp
xchg
mov
and
enter
mov
jbe
sub
das
in
sbb
pop
dec
push
outsl
jo
or
test
imul
sarl
dec
cli
xchg
pop
mov
xchg
scas
jle
mov
dec
xor
xor
lock
fsubrl
ret
sub
dec
jne
mov
mov
mov
mov
out
jmp
addb
sub
jmp
sub
xor
lea
dec
fwait
popl
fisttps
dec
cmpsb
fwait
push
sbb
adc
scas
mov
xor
push
push
inc
iret
dec
ljmp
ret
insl
scas
fdivl
aas
xchg
xchg
jbe
dec
aam
jp
add
add
outsl
inc
xor
lea
lea
mov
xor
and
inc
loopne
xchg
ret
mov
mov
dec
arpl
xchg
pop
clc
rorb
in
cmp
stc
xchg
add
dec
inc
or
xor
xchg
adc
xchg
xchg
sbb
test
cmc
xchg
aam
mov
sbb
lds
dec
and
into
xchg
fdivl
pop
movsl
pop
sar
xchg
pop
ss
adc
stc
jmp
and
pop
xchg
push
inc
xchg
add
sub
mov
stc
pop
dec
fldt
xor
mov
sbb
push
sti
pop
xchg
testb
inc
pop
cmpsl
add
std
bound
nop
fdivs
add
icebp
mov
loope
addr16
sub
popf
pop
mov
adc
xor
xor
aad
test
ja
push
je
pop
jp
push
jnp
cmp
lcall
cld
sti
out
mov
sbb
fiadds
notl
pusha
loope
mov
adc
pop
divb
cmp
push
stc
add
mov
jne
shrl
loope
inc
adc
mov
cmp
roll
lock
outsl
addl
popa
cli
dec
nop
inc
xor
pop
jmp
out
sbb
call
pop
movl
sahf
sbb
hlt
stos
in
add
pop
cli
fimull
mov
jo
xor
sbb
mov
cwtl
out
push
les
mov
jb
or
arpl
adc
scas
add
clc
iret
and
pushf
pusha
mov
sahf
mov
pushf
adc
inc
jae
clc
xor
mov
cmp
and
lods
lret
xchg
lahf
inc
sub
xlat
jl
push
fidivs
neg
sub
jp
sbb
mov
dec
mov
pusha
shlb
js
mov
sahf
add
aas
negb
fisubl
inc
fs
adc
fdivr
ss
loope
aad
jg
jbe
lods
jl
cmc
ja
push
sbb
mov
jo
mov
mov
cli
ss
push
cld
adc
mov
mov
nop
inc
pusha
mov
xchg
cmp
insb
xchg
fildll
cs
push
push
enter
pop
test
hlt
mov
mov
ret
or
das
push
arpl
sub
aam
gs
dec
pop
pop
mov
test
jne
sub
dec
mov
jp
bound
pop
jbe,pn
xchg
aas
iret
cs
fwait
int
shll
xor
push
fsubl
mov
loopne
lods
arpl
enter
adc
cmp
out
mov
pop
sarl
xor
repnz
in
rcrb
fstps
daa
adc
sub
xchg
inc
das
dec
add
sbb
jne
sbb
cld
or
inc
test
subl
or
lds
pushf
fdivrs
cmp
or
arpl
mov
pop
cmp
popf
fcompl
sbb
pop
les
shll
cmp
rol
mov
aaa
cmp
push
ljmp
dec
xrelease
mov
and
int
sbb
push
insb
mov
arpl
test
xchg
push
pop
int3
daa
cmpl
adc
dec
pop
mulb
out
mov
adc
cmc
push
in
scas
push
movsl
mov
sbb
mov
dec
ljmp
inc
sbb
push
mov
inc
in
mov
in
or
push
loop
lds
and
sub
sbb
hlt
lret
outsb
xor
iret
add
cld
dec
jns
test
push
mul
or
mov
shrl
ljmp
jo
or
jne
rclb
and
mov
lahf
int3
xor
cld
repnz
clc
inc
jae
lret
mov
pop
addl
cmp
adcb
cltd
cwtl
mov
adc
push
jae
mov
xor
sbb
call
pop
inc
enter
lret
sbb
mov
push
jmp
push
clc
and
mov
pop
imul
jbe
pop
pop
fwait
or
stos
fdivrp
icebp
in
cmpsb
js
or
sti
cmp
jmp
mov
test
sbb
mov
cmp
pushf
gs
test
outsl
loope
loope
and
sbb
movsb
sarl
test
pop
jbe
jb
push
out
sbb
call
or
and
cwtl
cmpl
inc
ljmp
xor
lock
inc
pop
inc
popa
sarb
inc
inc
jg
scas
aaa
fistps
mov
and
hlt
mov
sub
loope
out
ret
cmp
push
inc
and
xor
loope
xor
js
movsb
stos
sub
sbb
push
addr16
pop
fs
jnp
push
mov
std
mov
popa
stos
sbb
dec
out
out
in
add
mov
push
dec
ss
pop
pushf
ljmp
jecxz
shr
stc
mov
test
in
xor
pushf
ss
fdiv
xchg
jbe
call
cmp
xchg
movsb
mov
enter
mov
shll
xchg
loop
mov
rclb
out
pop
add
cs
rcrb
cmp
dec
scas
fnstsw
and
decl
and
fsubrs
repz
call
lcall
dec
jl
xchg
push
out
xor
fistpl
add
fcoms
outsl
sbb
sbb
mov
arpl
adc
sub
scas
sahf
pusha
xor
or
jecxz
or
mov
jp
test
xchg
adc
jne
inc
inc
pop
dec
in
xor
dec
cmp
ja
push
pop
jb
roll
mov
push
sbb
pop
adc
adc
aad
imul
xorl
xchg
int3
mov
stos
xchg
mov
or
inc
jns
or
sub
pop
stos
cmpsl
popa
or
lds
xlat
mov
aad
shl
loopne
and
or
aas
lahf
push
add
mov
lds
xchg
and
loope
push
inc
decl
mov
mov
addr16
cltd
mov
xchg
inc
in
dec
cmc
clc
shlb
test
xor
cmc
or
push
aas
push
jg
outsb
fsubs
push
lock
aas
xchg
xlat
cmp
inc
scas
sbb
aad
mov
adcl
out
adc
shrl
pop
lcall
adc
sub
les
mov
test
jle
xchg
adc
adc
std
pop
pop
mov
mov
insb
ret
nop
rorb
dec
mov
and
push
stc
mov
pop
mov
mov
insl
outsl
or
std
and
jle
mov
and
sbb
jb
jne
xchg
lds
mov
push
data16
fwait
das
mov
je
jns
ss
pusha
xor
mov
jmp
and
xchg
mov
xor
or
movsb
pop
outsb
xchg
ja
decb
push
gs
dec
ljmp
mov
mov
adc
lock
stos
and
movsl
xchg
adc
and
or
or
push
fisubrs
or
jae
repz
xorb
push
sbb
pop
repnz
rorb
xchg
xchg
mov
mov
dec
cmp
adc
xlat
mov
adc
aam
into
cmp
mov
aam
cmp
dec
sub
pop
inc
rcrl
push
gs
push
sbb
daa
cld
xchg
cltd
push
pop
mul
inc
sub
inc
pop
mov
adc
test
push
jbe
or
aam
add
stos
sbb
adc
inc
dec
dec
and
bound
lods
es
popa
cltd
ret
sti
and
sub
test
inc
dec
adc
xor
inc
lock
ja
test
dec
cltd
outsl
lods
aas
add
jns
cmpsl
sahf
jp
loope
sbb
mov
les
jbe
xchg
pcmpgtb
pop
scas
sbb
mov
mov
and
cs
cmovnp
mov
addl
mov
addr16
movsb
iret
dec
xchg
out
mov
aam
stos
icebp
cmp
fsubr
popa
jno
mov
mov
fstps
dec
fwait
je
ds
dec
lret
sbb
sbb
stos
pop
in
inc
push
push
movsb
jne
cmp
push
mov
dec
or
in
jns
push
fwait
inc
sbb
xlat
push
inc
fwait
call
xchg
cmp
xchg
inc
data16
lods
aas
xor
imul
xchg
out
sub
jecxz
outsb
sbb
enter
push
and
testb
ss
and
pusha
mul
sub
inc
mov
icebp
cld
jge
testb
or
dec
test
out
inc
jbe
in
jmp
mov
call
push
mov
cmp
sub
popa
dec
dec
fcmovne
cmp
cmp
fidivrl
int3
mov
ja
inc
push
jo
push
lret
int
cmp
dec
fdivrl
pop
lods
jnp
jl
in
insb
bsf
sbb
lcall
insb
sbb
mov
outsb
sahf
in
or
sbb
xchg
mov
lock
sub
aam
in
sbb
in
stc
fwait
aas
testb
mov
clc
rorb
arpl
adc
xor
std
sub
sbb
dec
rcr
testb
in
mov
int
enter
mov
cmpsl
jbe
lret
mov
dec
lods
insb
sbb
adc
mov
mov
or
pop
fdiv
push
xchg
mov
jne
sbb
dec
and
lahf
int3
cmp
cmc
ja
lret
fsubrs
xor
call
or
movsb
fmuls
testb
cwtl
or
mov
pop
aad
xchg
dec
add
inc
vrsqrtps
jno
hlt
ds
pop
lods
and
pop
ja
or
add
ja
cmp
xchg
push
dec
data16
in
movsl
mov
dec
stos
lods
or
fstl
rorb
test
lret
sub
fs
daa
push
aas
ja
cmpsb
cmpsb
jg
mov
or
push
jmp
push
frstor
cli
inc
push
enter
sbb
and
aad
out
inc
or
lcall
filds
lret
std
fcoms
and
mov
sub
sub
outsb
pop
add
icebp
loopne
jnp
pusha
push
mov
jecxz
ds
and
xchg
cmp
cld
mov
mov
mov
push
xchg
call
aad
and
arpl
rep
or
inc
and
mov
pop
loop
jp
sbb
js
repz
jo
lahf
inc
inc
jp
pop
int3
sbbb
shl
push
mov
inc
call
mov
dec
scas
xor
fsub
insb
jle
pusha
icebp
mov
pusha
lret
notl
cs
and
cmp
das
stos
jo
push
sub
faddl
cld
dec
xchg
xchg
pushf
fdivl
popf
fdivrl
es
xchg
mov
popa
adcl
in
js
mov
sti
dec
lea
pop
fiaddl
cmp
mov
xchg
jnp
insl
cmpsl
jmp
mov
das
push
mov
out
out
xchg
nop
add
fidivrs
loop
push
xchg
scas
xchg
ss
repnz
mov
clc
shlb
sbb
imul
push
push
jp
int3
push
std
xchg
add
push
adc
jbe
adc
xchg
imul
fisttpl
inc
pop
add
lret
inc
mov
lcall
sbb
mov
and
in
aad
mov
jo
in
mov
cs
cmp
cs
scas
cmp
xchg
inc
cmp
jae
movsb
push
push
fcomp
mov
jae
jle
mov
jp
rcll
shl
push
jl
push
btr
les
inc
stos
lods
das
mov
push
gs
cmp
push
xlat
mov
mov
inc
fidivs
add
xchg
mov
int
daa
sahf
popf
dec
out
outsb
pop
xchg
divb
imul
es
imul
in
inc
int
and
out
xor
fistps
or
hlt
aas
imul
and
xchg
adc
andl
ss
outsl
sti
subl
into
popf
inc
adc
or
dec
jne
fdivl
loopne
movsl
ret
out
xchg
xor
repz
mov
arpl
scas
push
mov
gs
pop
and
int
inc
adc
fstps
in
cmpsl
aam
inc
inc
or
cmovg
inc
adc
hlt
and
insb
cld
out
dec
mov
pushf
or
adc
popa
sbb
lret
js
jle
fwait
sbb
pop
xor
mov
push
jp
xchg
sbb
repnz
subb
mov
les
sbb
test
fdivl
xchg
and
pop
das
shl
fisubl
add
cmc
mov
pop
test
out
inc
sbb
sbb
aaa
push
xchg
jecxz
and
jns
mov
cmp
shrb
xor
inc
imul
jl
outsb
and
pop
jge
icebp
pop
out
movsb
add
scas
fsubrl
shrb
rorl
push
and
and
jbe
pop
test
dec
mov
cwtl
ds
addr16
or
sbb
push
aad
fstpl
hlt
dec
pop
dec
push
xchg
jne
shlb
or
leave
pop
das
inc
jns
push
sbb
fcmovb
icebp
fwait
jle
movsb
sbb
leave
sbb
mov
cmp
outsb
jmp
jl
pop
mov
inc
icebp
pop
mov
xor
cmc
int3
sbb
outsl
mov
lret
arpl
cli
cmp
testb
cli
xor
enter
mov
outsl
shl
mov
fdivs
hlt
pop
shrb
add
xor
and
push
out
and
cwtl
fcomip
out
pushf
mov
outsb
sbb
mov
mov
imul
test
syscall
cmpsb
inc
lock
in
icebp
dec
lods
and
pop
sbb
fs
add
je
movsl
das
std
mov
xchg
aam
decb
mov
cmp
cmp
mov
inc
int3
cli
fiaddl
jae
xchg
mov
sub
mov
fdivl
adc
mov
xor
push
inc
data16
iret
xchg
adc
movsb
mov
scas
jno
cli
iret
lahf
loop
and
cli
push
dec
push
jg
lock
ljmp
repnz
xchg
in
jne
and
and
lret
dec
add
aam
mov
daa
mov
jne
shrl
add
hlt
sub
mov
test
aaa
or
and
inc
mov
push
add
fcmovbe
jle
es
mov
incb
xchg
adc
xor
or
mov
mov
sbb
lret
out
fisttpll
movsl
cwtl
mov
mov
mov
loopne
and
mov
shl
rclb
lahf
xchg
in
fisttps
ret
jge
sarl
rorb
cld
insb
xchg
jecxz
xor
add
jne
je
cs
test
test
xchg
or
mov
add
sbb
jp
pusha
mov
jmp
andl
or
cmp
out
out
add
mov
push
dec
orl
stc
xchg
cwtl
pop
test
jb
adc
jno
stc
fwait
dec
xor
ss
sbb
xchg
sbb
inc
mov
mov
sbb
loopne
popf
lret
push
and
and
and
int
pushf
push
cmp
popf
mov
insl
mov
pop
push
or
test
test
pop
aas
repz
fst
in
ss
test
pop
mov
fstps
inc
sti
ss
add
test
stos
sbb
popa
pop
imul
mov
arpl
pop
or
out
adc
xor
inc
fisubl
jno
rorl
shr
mov
inc
orl
cltd
lahf
xchg
loop
jb
inc
add
fsub
mov
xchg
loopne
scas
inc
clc
adc
cltd
dec
int
or
loop
add
jle
mov
add
cmc
adc
dec
lods
mov
fcompl
sub
and
sbb
sub
pop
mov
into
out
int
mov
xchg
in
mov
mov
sbb
aam
xchg
dec
test
push
aaa
lods
js
push
xchg
adc
cmp
int3
subb
ja
mov
jmp
xor
push
xor
movsb
mov
mov
inc
push
ret
notb
ret
mov
ljmp
sbb
dec
add
push
mov
test
sbb
dec
mov
ret
xor
mov
jg
in
cmp
cwtl
stos
inc
mov
js
xor
push
pop
xchg
loopne
imul
or
nop
out
pop
pop
into
lods
mov
dec
dec
dec
xchg
outsl
in
lods
cs
aas
fwait
aaa
arpl
imul
pop
xlat
cltd
add
mov
mov
loop
mov
lock
inc
sub
and
xor
push
repnz
inc
lea
jle
repz
mov
lahf
fcoms
addr16
jp
or
repz
bound
dec
mov
ja
aaa
ja
push
pushf
popf
mov
outsl
push
les
and
les
mov
and
jno
mov
enter
dec
mov
inc
inc
mov
mov
inc
int3
xchg
jle
mov
cmp
iret
das
stos
lea
cli
cmc
sbb
inc
insb
in
lds
mov
sub
lret
in
ja
lea
push
dec
jmp
add
pop
aaa
push
add
pop
sbb
add
ds
popa
add
mov
mov
sub
pop
pushf
dec
sbb
rcrb
js
imul
or
sahf
into
aaa
cmp
jp
mov
lret
ret
and
mov
add
mov
mov
mov
and
add
out
sbb
pusha
mov
inc
dec
xchg
inc
ds
ja
xor
movsb
addr16
adcb
mov
bound
xor
pop
fcmovbe
repnz
jno
adc
adc
and
xchg
int
mov
or
add
sbb
lds
mov
lea
sub
mov
push
stos
sub
adc
xchg
pop
inc
sbb
mov
push
adc
fs
add
pop
jmp
lods
sbb
sub
add
xlat
pushf
iret
mov
sub
daa
clc
push
insl
pop
mov
push
pop
out
push
push
imul
sbb
sub
jecxz
dec
sub
lock
shrb
test
jp
mov
and
shll
jo
fdivl
rcrl
andb
jbe
add
mov
lock
inc
mov
lds
adc
push
in
xchg
out
pop
cmc
dec
popf
mov
jne
xchg
dec
mov
ret
mov
fcoms
enter
jb
not
inc
and
adc
test
fnstenv
decl
pmaxub
inc
in
pop
dec
ret
or
adc
dec
jg,pn
pop
notl
iret
ss
push
push
enter
push
stos
xchg
lret
rcl
ficomps
cmpsb
arpl
dec
call
inc
gs
mov
push
xor
aad
inc
aaa
fdivr
pop
adc
pop
add
loope
inc
add
fdivl
fsts
sti
std
in
pop
test
insl
xchg
sub
imulb
int3
sub
int3
push
inc
cwtl
mov
bound
lds
sub
shll
pop
lds
add
fisubl
andl
mov
mov
fsubrl
sub
sahf
xchg
test
mov
cld
nop
mov
jmp
shrl
lret
mov
andl
hlt
andb
xchg
and
movsb
or
insl
sbbl
inc
fwait
jle
mov
fidivl
jno
inc
sbb
xchg
mov
aaa
push
pop
inc
mov
mov
aad
iret
adc
adc
adc
sub
pop
mov
sbb
lds
shlb
push
add
sub
jmp
stc
jl
loope
xor
adc
sub
lock
enter
jmp
jns
xchg
out
xor
dec
int3
mov
adc
das
mov
cmp
lock
push
lcall
and
xor
mov
and
mov
fadd
sub
mov
xchg
mov
add
mov
and
stos
mov
arpl
out
mov
and
mov
int
test
jne
test
cmp
xlat
in
pop
data16
push
das
ret
adc
iret
mov
js
mov
sub
cmp
arpl
mov
scas
pushf
call
push
out
mov
cmp
xchg
cs
sbb
xchg
movsl
or
clc
mov
shrb
cmp
xchg
inc
das
xchg
xchg
push
add
mov
xlat
and
in
push
stos
shll
enter
push
cmp
mov
mov
leave
sar
inc
ret
cmp
mov
cmpsl
icebp
fidivrl
sub
cmp
lock
imul
sub
pop
pushf
sarw
xorb
mov
mov
jl
add
sub
pop
and
push
jae
data16
popa
pop
outsb
js
pop
sar
jne
mov
lock
xchg
out
push
lcall
xchg
pop
xor
adc
mov
add
push
movsl
push
add
punpckhbw
pop
mov
jl
test
mov
arpl
pop
in
inc
movsl
lods
bound
fnstsw
add
mov
test
pop
push
sahf
jne
in
xchg
mov
adcl
add
xor
ss
push
dec
iret
insl
sub
jge
mov
cs
and
movsb
mov
pop
xchg
sti
cld
mov
jns
icebp
push
xchg
xchg
mov
mov
mov
ljmp
xchg
popf
pushf
adc
scas
stc
shrl
sbb
add
insl
inc
mov
rcrb
ljmp
xchg
arpl
fdivrp
jne
test
xchg
dec
jmp
ud2
lea
pushf
xchg
xor
push
pushf
movsl
dec
in
loopne
mov
shlb
dec
stos
pop
and
mov
pop
mov
sbb
sbb
aam
jo
test
loopne
movsb
mov
leave
jecxz
adc
popf
dec
lahf
dec
sahf
movsl
loop
fcmove
mov
adc
pop
ds
fwait
pushf
fwait
stos
das
add
mov
lock
pop
shll
add
shrl
call
dec
dec
rcll
xchg
pop
lock
fsubrl
xchg
ljmp
aad
push
jae
arpl
je
inc
or
cld
jecxz
push
scas
je
cmpsl
fmul
mov
in
push
data16
dec
xchg
pop
in
sub
stc
push
arpl
push
pop
sbb
mov
sub
push
dec
ficoml
fistl
cmpsl
or
mov
xchg
stc
dec
test
dec
ds
adc
add
fnstcw
mov
leave
sub
xor
push
mov
and
movsl
daa
adc
inc
fwait
movsw
push
lock
in
mov
shrl
xchg
lret
lcall
pop
repnz
mov
mov
sti
and
sbb
cmp
cmp
lahf
dec
shll
adc
dec
rolb
dec
clc
das
testb
enter
sbbl
jmp
fnstsw
inc
cwtl
js
fsubrs
lahf
je
loope
lds
xor
add
fcompp
add
jo
rorb
add
jp
push
xorb
and
mov
sahf
inc
nop
xchg
outsl
je
xchg
imul
sbb
or
jae
sahf
outsb
orl
andb
sub
mov
mov
fwait
jbe
movsb
xor
fadds
mov
mov
scas
rol
mov
xchg
in
cmpsl
cmpsl
push
lock
test
inc
leave
xor
sbb
jnp
pop
push
nop
mov
movsl
scas
or
xor
cmp
or
mov
int3
pop
pop
mov
jae
mov
mov
push
jge
dec
popf
mov
mov
xchg
mov
mov
cld
rcll
or
and
sub
in
int3
sub
dec
jg
icebp
sub
cmp
ss
testb
fnstenv
mov
aam
pop
push
add
xchg
leave
lahf
outsl
dec
xchg
mov
fisttpl
fidivl
or
jb
mov
je
xchg
jecxz
mov
adc
fs
push
hlt
mov
lea
or
stos
xor
rol
pop
scas
imul
mov
push
data16
fbld
lods
cmp
icebp
mov
cmp
adc
arpl
jle
sub
shll
or
add
push
pop
cmp
cmpsb
mov
std
out
or
or
push
cmp
pop
cwtl
pop
orb
lcall
add
outsl
jge
push
push
sbb
adc
sub
add
push
cmpsl
repz
xor
jo
dec
scas
pop
jns
mov
dec
add
cmpsl
popf
lds
shlb
lds
test
push
mov
stos
stos
fbstp
cli
add
lret
lds
cld
adc
loopne
adc
mov
adc
das
adc
mov
test
in
add
rcll
sahf
das
std
mov
sbbl
dec
sahf
mov
stc
imul
shl
clc
xchg
pop
mov
or
jg
xorl
inc
loope
hlt
fdivrl
or
leave
mov
imul
mov
imul
push
lret
mov
repnz
andb
jge
cmpsb
iret
and
inc
jb
inc
int
push
pop
pop
dec
out
fucomip
jbe
jp
mov
out
popf
cmp
leave
mov
lock
das
and
mov
dec
shlb
lds
mov
mov
add
and
addr16
test
mov
cmp
jbe
jecxz
jae
daa
mov
add
cmc
sbb
in
inc
xchg
inc
in
test
and
inc
sti
xchg
test
fmul
fxch
out
xlat
dec
push
dec
lods
std
sub
out
dec
outsl
dec
add
jl
mov
sbbl
inc
and
stos
test
push
pop
mov
mov
pop
push
insb
push
aas
aaa
mov
sub
clc
dec
and
fimuls
je
jns
sub
jg
add
dec
js
int
add
pop
sbbl
or
mov
lea
sub
xchg
dec
cmp
add
and
mov
xchg
movsw
out
mov
jge
in
fdivl
cmp
add
mov
push
sbb
aad
dec
jg
jge
xor
sbb
cwtl
xchg
orb
hlt
out
mov
test
sbb
lret
xor
push
push
lea
sub
xchg
fwait
outsl
rcll
mov
mov
cmp
jmp
shrb
or
insb
je
out
mov
mov
fidivrl
icebp
jae
add
or
imul
push
add
mov
jg
imul
pop
pop
sbb
shl
push
add
push
push
sub
call
sti
daa
xor
mov
mov
gs
sub
dec
aad
mov
arpl
mov
adc
dec
adcb
nop
fisttps
mov
xor
rcrb
cmp
or
into
out
sub
push
stos
aad
dec
das
fildl
enter
ret
inc
fs
pop
lret
std
fcoms
mov
xchg
mov
pushf
sub
sar
shlb
comiss
dec
jp
adc
test
cltd
push
push
mov
test
cltd
sbbb
clc
dec
sbb
xor
ret
jne
lret
test
xchg
cmp
dec
insb
or
sarl
jo
xchg
in
inc
hlt
mov
aad
lcall
orl
cltd
adc
or
jns
mov
pop
inc
adc
mov
cmp
pop
out
fstpt
and
jnp
push
aas
sbb
test
sub
sti
js
ljmp
dec
adc
jns
mov
imul
push
xchg
inc
mov
out
push
add
loop
push
sub
and
dec
pop
gs
adc
sub
test
subb
xor
sub
bound
push
orb
xchg
sti
jle
or
icebp
cmpsl
sub
dec
int
arpl
adc
xor
sub
mov
testl
sub
push
mov
or
push
fmull
test
lret
mov
cmpsb
ds
call
mov
roll
imul
push
push
je
push
mov
or
inc
outsl
or
inc
jmp
jb
mov
xor
addl
jle
jecxz
xchg
loope
cmp
mov
mov
lock
jl
lods
int
cld
cltd
imul
mov
cli
loopne
fbld
out
daa
gs
push
push
stos
insb
mov
fcmovu
xchg
lea
cwtl
dec
jl
jmp
les
pop
dec
sub
add
aad
mov
outsb
add
jo
sahf
sbb
out
and
or
adc
xlat
dec
repnz
ss
js
mov
adc
sbb
push
lret
and
mov
roll
xchg
lds
popa
mov
jns
add
adc
inc
test
push
ds
pop
sub
iret
arpl
push
int3
sbb
movsb
pop
lds
adc
push
sti
lock
ja
push
xor
mov
sub
adc
addr16
mov
push
addl
or
mov
fnop
roll
scas
adc
clc
lods
push
decb
out
mov
mov
enter
sahf
int
jle
inc
loope
adc
add
mov
shlb
push
test
subl
pop
jge
out
xchg
push
cltd
lods
fld
lret
sub
adc
notb
je
push
ss
cld
scas
aas
add
out
adc
imul
jle
out
notl
out
mov
mov
stos
mov
xchg
xor
pop
jb
fbld
pop
sbb
in
lret
out
inc
aas
ficompl
adc
pop
pop
lret
dec
out
or
and
popf
inc
sub
mov
test
cmp
lret
push
movsl
daa
inc
jbe,pt
or
les
push
jecxz
and
out
push
ja
lea
jl
nop
add
mul
pop
or
xchg
push
sbb
add
push
in
mov
subl
scas
ret
call
fwait
pop
enter
sub
shlb
push
inc
push
adc
dec
cmp
cmp
jp
in
testb
daa
shll
jb
mov
je
stos
inc
idiv
jge
mov
cmpsl
xchg
dec
cmpsl
pop
test
lcall
clc
push
shr
mov
bound
lods
xlat
pop
mov
push
lret
inc
mov
popa
cmp
lret
enter
or
mov
insb
add
popf
enter
nop
testl
and
enter
dec
mov
and
inc
ret
mov
sti
mov
loopne
ret
cmc
lods
int3
pop
ja,pt
xchg
mov
pusha
mov
sub
aad
jae
insb
pop
lahf
cmpsb
in
loopne
lcall
ss
fcmove
add
iret
cmp
add
test
mov
leave
sub
sbb
test
and
mov
mov
push
sbb
stc
jno
sbb
and
and
ret
jl
test
std
ljmp
and
mov
or
sub
jecxz
pop
xor
add
and
add
ss
jae
scas
dec
nop
into
bound
push
repnz
imul
inc
dec
insl
sbb
cmp
mov
arpl
mov
jb
push
mov
adc
into
mov
inc
cmp
pop
icebp
or
sub
out
lods
out
inc
movsl
add
mov
clc
mov
pop
cmp
daa
cmc
add
ss
leave
cltd
je
dec
rcll
sbb
mov
adc
fcomps
jne
clc
inc
mov
sahf
jae
fsts
insl
jns
mov
outsb
add
push
xchg
xchg
sub
int3
adc
hlt
enter
gs
lahf
mov
pop
fildll
cli
int3
and
aam
pushf
mov
push
push
int3
nop
inc
jns
dec
mov
ret
fldt
jmp
daa
cmpsl
push
mov
or
lods
push
push
push
loop
mov
jl
in
nop
stos
push
push
daa
scas
out
fldenv
mov
cmp
dec
adc
imul
dec
sub
daa
fsubr
cmpsl
mov
adc
lcall
adc
daa
popa
insb
lahf
insb
fwait
pop
mov
stos
sub
mov
push
sbb
mov
and
dec
mov
push
cmpsb
adc
xor
outsb
addr16
mov
pop
shrb
cmpsb
es
fstl
lcall
sahf
mov
testl
out
roll
cmp
mov
clc
push
push
shll
mov
out
sbb
lcall
popa
inc
push
insl
pop
cwtl
dec
pop
cmp
int
xchg
mov
cmp
cli
mov
adc
mov
cli
mov
xchg
mov
xor
jp
je
js
test
sub
and
lcall
movsl
das
fcomps
aad
loop
loop
mov
xor
mov
scas
and
add
popa
out
dec
test
repz
xchg
lods
int3
arpl
mov
add
add
xchg
mov
test
and
je
iret
mov
orb
or
or
bnd
sar
fs
stos
aad
dec
xorb
loope
jmp
mov
inc
hlt
icebp
lret
push
shl
push
cmp
pop
cmp
sahf
test
call
mov
fisubs
mov
mov
sub
ja
mov
mov
aam
mov
dec
pop
sbbb
aam
and
in
popa
bnd
lret
cmp
stc
pop
rcr
mov
adc
push
inc
insl
movsl
pop
mov
inc
out
movsl
xchg
pop
das
stos
nop
sub
aas
pop
roll
or
dec
rcrb
into
mov
and
aam
push
or
int
push
xchg
jl
mov
jl
int
lds
cmp
cmpsl
inc
lods
adc
std
dec
divb
xchg
cmp
je,pt
or
xchg
addr16
arpl
pop
lcall
jg
sbb
mov
enter
xchg
or
sahf
lds
xchg
das
inc
inc
fsubrs
jbe
out
std
loope
repz
sub
push
lcall
shrw
shll
mov
scas
movsl
mov
mov
inc
inc
mov
pop
out
pusha
inc
push
iret
cmp
je
xorb
push
inc
pop
insl
mov
cmpsb
pop
add
bound
cmpsl
cmp
jb
out
mov
ja
mov
jg
aaa
es
mov
das
mov
xchg
fimuls
insb
or
into
andl
cmpsl
mov
cmp
mov
imul
aam
and
movsl
scas
int3
inc
jecxz
in
loop
adc
insl
fs
mov
fdivrs
push
mov
mov
mov
jae
jmp
mov
imulb
ror
in
insb
int
cmovno
cmp
pop
jecxz
lea
adc
and
xorb
add
icebp
jle
aam
inc
jecxz
cs
cmp
leave
rcll
mov
out
pop
fwait
jp
and
sub
fmull
add
xor
inc
repnz
sub
fs
inc
loop
sub
lods
mov
sub
imul
daa
mov
popa
or
xor
sbb
xlat
dec
mov
subl
in
dec
sub
lret
pushf
rol
push
ltr
shl
xor
and
xlat
jge
in
cmpsb
mov
adc
fcom
jmp
push
jb
sar
adc
jno
data16
dec
int
sub
jne
dec
out
dec
mov
inc
lret
call
and
dec
add
jb
hlt
push
dec
jl
imul
jmp
sub
or
mov
push
sbb
jecxz
data16
mov
push
insl
mov
outsb
fucomp
test
cmc
add
pusha
cmc
mov
je
cli
xchg
push
xor
call
pop
ret
push
mov
in
mov
jo
jne
sbb
xchg
call
jl
push
mov
mov
mov
or
inc
popa
jbe
fimuls
xor
lcall
mov
shl
and
mov
xor
stos
ret
inc
inc
icebp
mov
cs
fwait
icebp
add
aaa
repnz
dec
fnstsw
fldl
mov
sti
push
cmp
mov
jns
dec
mov
data16
lret
adc
daa
xor
stos
out
jle
insb
insl
jnp
and
dec
shlb
loop
inc
push
fdivs
lds
insl
xchg
gs
mov
sub
enter
addr16
xor
adc
out
sbb
mov
enter
inc
int3
jbe
sbb
dec
fstp
andb
push
jb
call
ljmp
mov
jg
mov
adc
cmp
cmc
aam
pop
inc
add
int
pop
dec
repnz
lods
pop
aas
jbe
jecxz
movb
pop
fbstp
cmp
cltd
testb
cmpsl
inc
mov
xchg
jne
sbb
ret
mov
jg
divl
sbb
xor
popf
mov
add
outsb
and
adc
and
idiv
jae
jmp
jge
les
fmuls
or
out
out
mov
mov
ljmp
push
cmp
xchg
jne
es
pop
mov
mov
insb
xor
loop
mov
sbb
nop
sti
and
pop
inc
hlt
rol
mov
pop
pop
inc
sub
ds
rclb
push
or
cmpl
fidivrl
xor
das
inc
cli
jns
fsts
loop
int3
test
icebp
jmp
cmp
in
aas
pop
sti
cs
bound
jns
out
mov
mul
pop
js
out
push
dec
filds
mov
lss
pop
add
out
loope
leave
js
mov
sub
jp
cmp
xchg
jge
sbb
test
lds
test
in
push
lds
fldt
jns
xor
push
cmp
adc
xchg
jle
mov
push
add
mov
jae
pop
repnz
in
outsl
fidivl
jp
jge
xchg
stos
js
add
sahf
das
imul
cmpsl
in
insb
mov
or
dec
pop
mov
insl
jecxz
dec
lods
xchg
bnd
push
divb
cmp
lods
mov
les
or
mov
inc
test
lea
jge
jae
lcall
mov
cmpsl
mov
testl
in
mov
aad
into
stos
repz
lcall
scas
bound
push
sub
idivl
xchg
mov
cmc
mov
rol
mov
push
push
dec
lret
and
sbb
sub
lea
xchg
dec
mov
hlt
addr16
xchg
mov
and
adc
adc
adc
clc
inc
icebp
nop
notb
mov
adc
inc
lcall
push
mov
repnz
in
and
imul
or
enter
xor
add
test
outsl
push
mov
jno
dec
js
lds
test
hlt
or
jnp
mov
lods
pop
pop
in
cmp
jecxz
aam
sub
or
ret
cli
jmp
sbb
lea
cmpsb
and
push
frstor
mov
ja
xchg
push
lods
sbb
gs
and
es
je
filds
sti
mov
pop
jns
mov
fildll
lcall
fwait
subb
bound
testl
inc
pop
sub
fwait
pavgb
dec
jle
stos
sbb
stos
or
pop
in
das
mov
stc
adc
cmp
aas
xchg
loop
hlt
out
dec
xor
daa
cmp
pop
fs
sbb
pop
push
inc
adc
test
rcr
pop
dec
dec
push
arpl
int
jno
es
jbe
stos
ja
aaa
rclb
mov
das
sbb
mov
adc
fdivrp
dec
add
ljmp
jge
push
arpl
js
pop
sbb
push
or
add
mov
sbb
adc
imul
sahf
mov
xchg
push
scas
cmpsl
fdiv
adcl
jge
loopne
adc
xchg
mov
test
insb
xor
cmpb
inc
cmc
cmp
aam
outsl
inc
xchg
cmpsb
pushf
push
icebp
jno
rolb
hlt
push
je
aaa
ss
sti
push
bound
cmpsb
dec
add
lock
mov
push
jg
mov
mov
lcall
shrb
dec
divl
mov
clc
inc
cmp
push
jno
cmc
dec
pop
outsl
or
push
testl
out
inc
ffree
ja
cmpsb
pop
cmp
iret
iret
pop
xchg
negl
xor
cmpsl
mov
push
pop
cltd
shll
push
cmpb
inc
inc
mov
daa
adc
ror
add
inc
out
cmp
jg
mov
cmc
into
test
xor
lret
nop
sbb
cmp
and
pop
in
cmp
push
testl
mov
dec
in
repz
stos
xchg
or
loopne
ds
and
jmp
loopew
cmp
out
mov
in
sti
mov
jmp
out
xchg
and
mov
lea
xchg
addr16
sti
loop
sbb
sub
loop
dec
dec
popf
adcl
mov
xchg
cmp
andb
and
inc
bound
mov
icebp
mov
dec
pop
insl
test
loopne
nop
and
sarb
xchg
inc
lds
push
or
cs
ret
iret
or
push
loope
cmc
stos
xchg
push
dec
nop
lds
mov
repz
jmp
push
in
sbb
inc
pop
mov
test
inc
jge
int
movsl
mov
xchg
cs
gs
lea
mov
cli
mov
aad
stos
fsts
jge
mov
mov
jecxz
or
adc
sub
test
lock
js
mov
lods
pop
repnz
inc
pop
push
xlat
mov
xchg
enter
pushf
pop
sub
xor
mov
in
mov
mov
jge
adc
data16
cmp
ret
mov
adc
jmp
jbe
mov
mov
mov
mov
cwtl
pop
adc
js
xchg
jno
mov
cmpsb
pop
stc
stc
in
inc
push
leave
mov
aas
pop
cmp
xorl
add
dec
or
loopne
sbb
test
pop
popl
pop
inc
pop
sahf
sti
jo
mov
jg
fcoml
fsubrp
addr16
in
push
or
out
repnz
xor
mov
cmp
pop
mov
jne
inc
mov
xchg
jmp
jne
add
scas
dec
mov
in
cmc
inc
arpl
push
lret
fisttpll
movsl
jns
aaa
in
mov
add
daa
insl
shr
jns
dec
ficoms
add
mov
stc
pop
inc
cltd
inc
xchg
xchg
popa
and
push
push
cmpb
and
js
xchg
and
push
inc
xchg
push
jns
adc
sub
inc
fnclex
cmp
cltd
dec
dec
xchg
out
and
pop
or
or
ljmp
mov
pop
das
pusha
imul
jnp
mov
test
jne
push
push
cltd
movsb
dec
mov
in
lcall
shll
cmp
mov
iret
jo
stos
mov
xchg
dec
xor
push
call
mov
lea
pop
jecxz
cmp
ficomps
movsb
imul
shll
sub
les
mov
dec
and
dec
sub
ja
mov
mov
call
cmpsl
dec
ror
jle
sbb
jnp
jmp
mov
push
mov
and
ja
adc
jp
mov
add
out
loopne
rcrl
cmp
inc
fnstsw
stc
pop
cmc
mov
gs
testb
add
sub
out
les
popa
jl
adc
stos
cmc
ja
clc
jmp
mov
or
int3
loope
push
imul
popf
mov
popa
jmp
out
sahf
cmpsl
mov
sbb
pop
test
jecxz
cltd
fdivrl
add
jno
or
jecxz
mov
push
push
push
push
imul
sbb
mov
mov
sub
inc
insb
inc
sbb
inc
mov
dec
cmp
pop
into
outsb
insl
xchg
out
xchg
and
xor
add
flds
sti
out
cmp
icebp
push
repz
xrelease
subl
mov
daa
pop
mov
outsl
pop
pop
repz
aad
sbb
fincstp
push
sub
mov
pop
cmp
adc
mov
lock
sahf
and
push
cmc
gs
dec
inc
fyl2x
test
lret
add
adc
das
push
sub
iret
jg
test
inc
repnz
xor
jmp
popa
mov
push
xor
out
aas
adc
jno
outsl
rsm
ret
mov
mov
jae
aas
in
sub
insb
test
jae
push
cmovae
fsubl
jl
clc
xor
in
popa
xor
xlat
jecxz
add
pop
sbb
push
out
and
jp
jae
addr16
sbb
jecxz
stos
aas
int3
push
mov
or
cmp
ja
jo
inc
jae
outsb
mov
aad
sahf
fnsave
jle
inc
xor
mov
insb
ret
cmp
lea
dec
sub
iret
popf
pop
mov
imul
lea
jnp
nop
sbb
cld
adc
aam
mov
cmp
jne
pusha
cmpsl
add
mov
add
and
lret
xchg
rcll
nop
pop
mov
adc
popa
jg
popa
push
sbb
xor
jge
movsb
loop
jl
test
js
mov
fs
fists
enter
popf
pop
jle
mov
call
fcomip
dec
outsb
push
add
mov
cmpsl
movsl
add
and
jmp
cmp
inc
pop
dec
add
xor
movsl
imul
pop
les
movsb
add
cs
add
push
in
pop
divb
dec
sahf
pop
jg
mov
push
daa
inc
popf
cmp
addl
addb
lock
push
and
arpl
scas
xor
mov
push
push
push
les
pop
xor
std
faddp
sub
xchg
pop
pop
jmp
mov
mov
mov
xchg
arpl
lock
in
dec
xor
lds
mov
pop
add
cmp
test
fnsave
hlt
fcomps
xlat
out
je
ljmp
xorb
fldl
mov
dec
adc
push
pushl
push
inc
popa
roll
test
jo
mov
cmp
decb
lea
aaa
xchg
push
xchg
and
out
cmp
arpl
int
icebp
enter
das
add
mov
add
sti
sub
push
rclb
adc
pop
pop
scas
repz
negb
shr
cmpsb
test
xchg
and
mov
fsubrp
jp
push
xchg
ljmp
push
dec
pop
loope
insl
repnz
in
pop
js
cmp
enter
movsl
lock
imul
ret
add
shrw
mov
adc
or
sbb
test
jns
xchg
test
ljmp
jecxz
xchg
ffree
cmpsl
xchg
and
sub
cs
xorl
sbb
and
loope
stos
test
mov
jg
jge
leave
in
stos
sub
sbb
and
fucomip
rcrb
pop
aaa
mov
mov
clc
add
rcrb
in
ret
pop
inc
iret
dec
lds
movsb
lcall
into
fcom
xor
mov
cmp
lahf
or
clc
pushf
test
out
mov
pop
inc
movsb
loope
jno
adc
jmp
dec
sub
dec
pop
dec
andl
loope
in
in
mov
movsb
pop
clc
add
stc
pop
jp
pop
les
divl
jnp
loopne
test
xchg
addr16
push
icebp
xor
mov
xchg
sub
aaa
test
push
inc
push
xchg
sub
punpckhdq
je
pop
lahf
jns
push
xlat
hlt
and
roll
adc
and
jbe
and
xor
and
xchg
movsb
cmpsl
mov
lods
jnp
mov
pop
in
and
enter
cs
cs
scas
cmc
les
enter
cwtl
adcb
push
call
addl
mov
xchg
popf
cmp
divl
rorl
inc
sbb
cli
notb
aam
add
in
add
inc
jp
add
add
sub
inc
sub
out
inc
ret
add
push
ljmp
stos
enter
and
aas
mov
aam
jnp
pop
test
arpl
push
loop
push
test
or
lret
int
lret
hlt
xchg
int
mov
sbb
or
and
add
jge
adc
or
nop
pop
pop
cwtl
popa
cmp
jns
into
pop
insl
jmp
das
insb
mov
aam
test
or
and
shlb
sub
call
or
add
ja
popf
test
addr16
and
adc
mov
shr
add
mov
inc
les
and
mov
movsb
sbbl
loope
dec
sub
pop
pusha
cltd
push
ljmp
add
jnp
in
popf
mov
push
cld
jg
xor
sahf
xchg
sbb
pop
cmp
sahf
mov
fimuls
mov
and
lock
in
and
mov
or
out
or
ljmp
outsb
sub
hlt
loopne
fsubr
and
call
mov
sbb
iret
push
xchg
ficompl
jmp
aam
mov
inc
add
shl
mov
mov
out
jbe
adc
ret
insb
aaa
outsb
fistpl
inc
adcb
cmp
mov
in
repz
mov
inc
call
aam
jno
ljmp
pop
sub
loope
push
jo
andl
clc
orb
pop
pop
lds
push
scas
mov
in
xchg
cmp
add
lods
das
out
pop
mov
jl
aad
sbb
sti
xor
out
push
adc
sbb
js
add
xchg
sbb
jl
adc
xchg
jl
inc
enter
inc
gs
sub
fcmovnu
or
cwtl
pop
fs
stc
sbb
xchg
std
insb
sbb
ss
in
add
cld
mov
jp
ds
sbb
idivb
insb
shrl
and
roll
fsts
add
pop
subl
or
shlb
jg
sbb
mov
add
insb
add
out
jle
add
pop
aad
add
and
pop
fists
or
lods
xchg
jl
jne
imul
test
das
lods
mov
movsl
pop
jp
sbb
mulb
and
adc
fidivs
bound
jnp
and
cwtl
scas
lret
testb
pop
adc
jmp
pop
popa
int3
add
aam
sbb
subb
mov
xor
push
fs
adc
icebp
pop
sbb
and
into
or
lods
cmc
ss
sahf
in
dec
or
dec
fbstp
push
add
adc
mov
hlt
cmp
imul
xchg
inc
adc
mov
scas
and
test
insb
mov
sbb
push
push
sub
push
sub
daa
out
imul
lahf
mulb
mov
xchg
in
cmp
lret
addr16
inc
add
jmp
cmp
inc
adc
add
sub
mov
sub
dec
mov
gs
cmc
das
pop
loopne
push
sbb
xor
out
js
and
lret
lock
and
inc
lahf
cs
cwtl
mov
test
loop
and
mov
int3
push
sub
xchg
mov
xchg
imul
dec
or
lods
mov
insb
daa
inc
and
aam
cmc
cmp
fdivrl
push
xor
add
adcl
and
xchg
pop
sub
stos
in
sub
ds
mov
pusha
orl
push
fists
rorl
inc
jge
mov
loopne
xor
mov
cmp
or
std
outsl
testl
inc
lcall
vmaskmovdqu
shl
push
std
xor
or
daa
js
mov
xor
fildll
push
jge
sub
and
inc
bound
cmpsl
popf
add
jbe
xchg
ds
mov
imul
int
sarb
test
call
scas
add
pop
pop
sub
jb
push
sbbb
pop
mov
clc
push
dec
xchg
add
xchg
sub
in
mov
xor
dec
xchg
dec
jb
dec
inc
or
inc
lret
lods
scas
sub
sbb
sub
dec
mov
sbb
in
mov
adc
shl
sahf
mov
push
mov
pop
and
outsl
push
push
in
xor
icebp
jae
jns
mov
insb
sub
inc
and
sbb
ret
inc
sub
repnz
add
sbb
into
and
aas
addr16
aad
pop
sub
dec
pop
pop
and
dec
jne
outsl
cmp
sbb
dec
cltd
and
fistps
call
dec
jns
cmp
je
cmp
mov
sub
and
cmp
mov
inc
in
inc
mov
stc
out
inc
push
push
xor
movsb
xlat
or
outsb
popf
fs
xor
imul
mov
test
sti
cmpsl
pushf
out
mov
clc
mov
push
fcmovnu
sub
and
xorb
jmp
inc
imulb
push
jb
push
xlat
test
push
cmp
int
js
into
pop
lock
push
push
dec
leave
bound
push
sub
sub
subb
movsl
js
cmp
cmp
sub
rcrb
fdivl
inc
xchg
sub
xchg
mov
push
push
sub
mov
repz
test
paddsb
cs
cmp
add
jle
int3
or
mov
jae
mov
test
out
cmp
mull
std
std
imul
imull
and
mov
daa
repnz
sub
jnp
in
add
shl
push
or
stos
xlat
cli
aad
gs
mov
add
mov
in
push
andb
inc
mov
stos
shlb
and
pop
out
in
repz
rcrb
cltd
pop
push
pop
push
mov
cmpw
cli
leave
xlat
jne
iret
or
inc
sbb
cwtl
adc
adc
inc
xor
ljmp
scas
es
popf
sbb
frstor
ret
shlb
pop
fstpl
push
sbb
jno
cmp
pop
in
jl
sbb
and
push
clc
idivb
addr16
repnz
loop
or
xor
xor
sti
or
mov
lods
adc
mov
push
pop
cmp
int
stc
dec
in
lds
popa
xor
aas
outsb
test
xor
dec
fmuls
pop
fdivl
divb
adcb
xchg
lods
or
test
adc
cmpl
jno
in
cs
sti
aad
fdivs
or
xchg
and
out
sub
shl
shlb
fistpl
ret
pop
cmp
and
cmp
ss
popa
test
fisubs
cmc
pcmpgtd
mov
dec
xchg
clc
mov
add
cmp
inc
jae
mov
cmp
push
jo
jp
lcall
js
jno
das
popf
sahf
arpl
inc
mov
test
pushf
in
mov
int3
push
fnstenv
xchg
mov
or
scas
adc
sbb
pop
xlat
mov
mov
mov
lods
test
adc
call
imul
pop
subl
jmp
aad
dec
xlat
call
mov
rcrb
jecxz
add
mov
pop
dec
jge
aaa
arpl
push
push
cmp
xor
ffreep
ret
mov
xor
lret
pusha
cmp
sbb
jo
xchg
cwtl
inc
xchg
out
out
jno
mov
arpl
lahf
cmpsb
mov
jbe
ds
roll
cmpsl
lods
pop
roll
mov
mov
pushf
or
sti
roll
sahf
pop
cmp
mov
cwtl
mov
dec
jge
xor
or
leave
mov
push
jno
pop
cmp
mov
pop
jb
int
loopne
fcmovne
test
je
imul
std
dec
aam
fldcw
sub
std
mov
xchg
jg
mov
sub
inc
push
inc
jle
xchg
js
orl
mov
mov
fsubs
bound
add
xchg
movsb
push
or
int
cmpsb
cmp
pop
and
mov
fs
mov
repnz
mov
sti
fnstcw
xchg
leave
xor
jnp
mov
and
cmpsb
inc
jne
jno
and
ljmp
jae
pop
xlat
sub
clc
add
mov
cmp
addr16
lret
out
mov
cltd
inc
das
cmpsb
push
mov
sbb
hlt
mov
xorl
push
dec
xchg
mov
lahf
adc
xchg
test
sbb
mov
sub
push
hlt
inc
mov
or
insl
das
cmp
xor
push
push
sub
or
call
lret
outsl
xor
leave
ds
cmp
jo
jb
bound
fninit
pop
ret
call
and
or
add
cltd
lret
jmp
je
fistl
mov
lea
andl
dec
push
jnp
xor
ss
hlt
fbld
mov
dec
push
push
icebp
inc
test
and
dec
mov
clc
push
dec
fidivl
or
add
nop
add
fistpll
add
mov
int
out
scas
mov
add
out
and
mov
scas
test
test
xchg
xchg
jge
imul
loopne
adcb
imul
mov
cmpsb
popa
aad
stos
mov
xor
adc
xor
inc
iret
xchg
mov
or
push
jns
aad
or
cltd
mov
out
adc
mov
jl
dec
sbb
fwait
cltd
repnz
cmp
xor
sarl
divl
loopne
stos
jecxz
jae
sub
pop
imul
in
sarl
xor
cmp
cmp
jb
mov
xor
aas
andl
jo
inc
or
mov
icebp
add
pop
adc
popa
and
mov
adc
mov
sbbb
jbe
cmp
xor
add
pop
push
lret
int
popf
fcmovne
sub
test
sub
popf
cmp
mov
inc
hlt
into
jbe
in
or
movsb
int
jp
pop
xchg
out
cli
mov
lods
popa
jo
push
ffreep
mov
outsl
bound
inc
repnz
lds
sbb
jl
add
and
popf
aad
push
sub
jecxz
shl
cwtl
subl
cwtl
test
xor
sbb
or
test
mov
in
jb
push
std
xchg
int3
and
lcall
add
vmaxss
inc
xchg
cmc
inc
outsl
inc
rorl
pop
bswap
cld
lea
int3
pop
mov
ja
ds
mov
xor
dec
adc
sub
call
aas
int3
cmp
mov
push
mov
push
into
test
jl
call
outsb
lcall
cmp
movsb
sarl
gs
add
int3
mov
pop
sub
cmc
imul
sbb
jp
add
inc
inc
lock
dec
scas
inc
aad
call
ja
cmpsb
into
dec
mov
mov
jnp
lahf
std
aas
out
clc
dec
dec
push
clts
or
push
lea
fnstcw
and
cli
mov
div
sbb
test
cs
loope
sbb
and
push
mov
movsl
jmp
sbb
sbb
out
fistps
test
in
push
xchg
mov
es
sub
push
pop
xchg
sub
cmp
pop
and
cmp
scas
sub
pop
xchg
mov
dec
aam
iret
push
mov
andl
fimull
je
pop
ret
mov
in
je
jle
mov
out
leave
lret
mov
leave
cmpsl
push
movsl
and
mov
pop
sbb
push
and
sbb
mov
mov
in
push
scas
or
and
xchg
sahf
cltd
into
gs
jg
cmp
or
sub
shld
mov
stos
xor
test
cltd
lock
add
xchg
aad
test
ss
ret
xor
push
push
xor
loopne
cmp
xchg
or
orl
scas
add
pusha
cmp
lret
push
jg
jns,pn
xor
fldl
cwtl
loop
and
or
ret
fisubrl
cwtl
pop
negb
ja
pushw
pop
mov
push
test
popa
sub
or
and
sub
or
xchg
push
jge
mov
insb
cltd
cld
fisubs
and
imul
movsl
dec
int3
imul
push
jae
add
mov
add
dec
test
mov
sbb
sbb
fstl
test
sub
xchg
xor
pop
dec
int
adc
movsb
into
jns
xchg
aas
dec
into
cmp
mov
mov
push
cmp
pop
std
movsl
aas
xchg
push
out
mov
data16
xor
bnd
ret
jb
cwtl
xchg
sahf
mov
repnz
xchg
adc
popa
popa
mov
add
adc
mov
xchg
add
insb
lods
pop
jg,pn
outsb
sub
std
pop
movsb
lret
add
les
cld
xor
roll
bnd
lock
mov
add
stos
add
aad
ret
outsb
add
mov
js
pop
fimuls
push
xchg
shlb
xor
stos
push
sub
push
stos
loope
pushf
sub
insl
imul
xor
arpl
inc
sub
mov
vmovlps
lds
fsubr
mov
jnp
jo
js
roll
xor
test
ret
fstpl
inc
mov
notb
jno
std
cwtl
ljmp
xchg
mov
add
sbb
cmovb
ss
dec
xor
jb
sahf
mov
sarl
push
lods
iret
push
add
iret
andl
stos
pusha
rcpps
jl
jmp
stc
outsb
lock
test
scas
in
pop
mov
pop
pop
iret
in
mov
cmp
js
lcall
jmp
or
or
inc
xchg
pop
cmp
dec
and
test
or
push
sbb
push
lcall
push
pop
ss
jbe
inc
jnp
and
mov
jp
hlt
jo
fmul
cs
mov
out
das
mov
cli
jb
push
rcll
fisttpl
mov
push
xor
loopne
fistps
and
xchg
pushf
addr16
pop
mov
mov
fisubs
cli
lret
or
cwtl
stos
sbb
xor
insl
loopne
add
or
push
lcall
or
std
pop
adc
ret
scas
adc
xlat
mov
out
stos
ds
arpl
int
pop
movsl
out
loopne
xchg
inc
or
jge
sbb
rcr
sub
push
mov
cltd
ret
int
cli
mov
or
in
movsb
loope
and
dec
out
or
and
test
xchg
sbb
mov
movsb
pop
loope
and
adc
and
sub
shlb
xchg
push
mov
mov
dec
lea
adc
mov
outsb
outsl
popa
adc
xchg
push
mov
in
xor
jns
ror
cmp
aad
fs
hlt
movd
les
stos
sbb
and
lret
jns
leave
adc
jne
ret
pop
push
mov
pop
scas
pop
fildll
dec
sub
sbb
mov
das
mov
ret
jmp
pop
jns
inc
fwait
adc
gs
sti
push
mov
pop
push
sbb
xchg
push
pop
push
enter
sub
xorb
std
add
cmp
pop
sbb
jbe
adcl
push
repnz
ret
jp
or
mov
inc
cltd
stos
loope
and
mov
fwait
lret
dec
mov
js
lret
xor
and
cmc
ja
xor
js
call
repnz
ficomps
mov
pop
pop
fdecstp
rcrb
or
fists
aam
sbb
mov
popa
aas
inc
mov
loope
add
sub
aam
inc
sbb
mov
and
mov
and
test
adc
pop
iret
pop
int
movsl
cmp
jg
fisubrs
out
and
dec
repnz
das
std
sbb
into
arpl
imul
mov
sub
inc
push
mov
pop
cmpsl
dec
fisttpl
call
or
mov
imul
mov
and
pop
or
jge
or
cmp
shrl
cmpsb
lock
or
dec
mov
bnd
xchg
cwtl
add
sub
xor
pop
test
push
std
mov
inc
inc
mov
loop
xor
jne
sahf
xchg
add
push
aam
and
insb
push
cmp
clc
mov
clc
push
and
aaa
sbb
mov
ret
sbb
xchg
push
mov
pusha
cld
xchg
pop
push
sbb
sub
cmc
and
and
cli
popa
fisubl
mov
add
mov
inc
fwait
adc
mov
insl
inc
push
out
decb
movsl
jmp
popa
inc
sub
pop
xchg
sub
dec
test
push
js
out
iret
scas
xor
jne
ret
inc
mov
xor
sbb
and
dec
loope
mov
enter
in
fisubrs
push
dec
xor
cmpsb
mov
xchg
mov
mov
shll
js
jmp
add
sub
fcompl
les
scas
adc
pop
movsb
sbb
jo
sti
rcrl
fadds
sub
leave
pop
add
pusha
js
out
cli
pop
sti
cmpb
je
mov
sti
adc
dec
add
js
data16
int3
or
lret
pop
lcall
popa
pop
insb
sbb
or
pop
pop
adc
dec
jnp
lock
in
mov
and
cmp
aas
sub
mov
add
pop
mov
addr16
mov
fwait
sbbb
jmp
fs
les
icebp
les
popa
andl
push
cmp
and
ljmp
pushf
or
mov
dec
or
push
add
add
std
and
cmp
je
push
popf
imul
popf
add
sbb
jle
sbb
cmpsl
inc
sbb
mov
push
mov
es
cmp
sub
ret
ljmp
data16
cmp
inc
pop
adc
pop
lods
pop
sub
movsb
int
or
mov
or
jmp
mov
xor
cmpsl
mov
inc
pop
xchg
setb
cmpsl
lret
xchg
insb
mov
sbb
mov
scas
je
push
je
test
je
cmp
fwait
pop
pop
mov
fdivrl
mov
or
push
rorb
mov
xor
adc
add
cwtl
lea
or
enter
decb
neg
ds
mov
mov
cmp
inc
or
jl
dec
out
gs
sbb
mov
hlt
decb
xlat
push
ja
hlt
mov
les
loopne
push
rcl
jmp
sbb
in
pop
or
aaa
jle
jo
add
loopne
pop
mov
insb
jno
or
pop
int
mov
push
pop
push
jne
sahf
dec
xor
pushf
add
xor
pop
or
decl
in
push
jge
push
push
pushf
push
in
lock
mov
add
push
jl
xlat
mov
sbbb
adc
scas
mov
fld
pop
push
pop
int
imul
imull
dec
fld1
testb
insb
mov
stos
sbb
and
jp
cmpsl
je
rcl
xchg
push
outsl
dec
mov
adcl
lret
addr16
jbe
clc
js
or
nop
in
rolb
inc
add
xor
push
ror
xor
and
cli
lock
cs
xchg
mov
movsl
rcrl
adc
sbb
repnz
adc
test
inc
pop
fdiv
ss
testb
inc
mov
dec
push
and
outsl
addb
rolb
loop
jbe
jmp
enter
lcall
xor
std
ficomps
xchg
cmp
add
ror
ret
fildll
ret
lcall
bound
fucom
je
mov
gs
add
popa
ret
cmp
and
push
subl
aas
in
aad
sub
jnp
hlt
fsubrl
pushf
sbb
test
enter
sub
push
push
push
inc
in
xchg
dec
or
nop
sub
ss
mov
push
cs
inc
adc
mov
sbb
in
call
inc
dec
call
xchg
inc
dec
daa
mov
jge
dec
loopne
hlt
nop
mov
or
mov
push
and
push
fcomps
div
inc
or
pop
fs
div
leave
cmc
aaa
das
test
inc
sbb
xchg
push
mov
les
data16
mov
fisubl
cld
out
popa
jbe
push
adc
js
test
ss
arpl
inc
mull
jp
ror
leave
lock
mov
fistl
in
mov
mov
rsqrtps
test
stc
repnz
mov
sbb
adc
inc
lahf
jbe
jnp
mov
adc
cltd
cmp
lods
or
and
sub
int3
jmp
outsb
dec
jle
iret
imulb
push
mov
or
movsb
mov
mov
xor
mov
mov
inc
jno
clc
sub
mov
test
aad
mov
jge
sbb
out
xchg
jo
mov
mov
ljmp
inc
add
jbe
adc
sbb
adc
mov
call
push
mov
mov
das
xchg
xor
ss
seta
clc
lds
hlt
loop
fwait
out
jno
sub
icebp
movsb
mov
pusha
lret
mov
adc
lcall
mov
pop
in
add
cmc
fcomi
arpl
ret
pusha
add
and
or
xchg
outsl
push
mov
push
xor
fistpl
xor
push
movsb
sbb
stos
lods
test
fwait
cltd
fsubr
lods
push
push
xchg
xchg
out
test
lods
mov
in
dec
xor
scas
jle
mov
das
rcrl
dec
mov
les
or
xchg
jg
out
push
lret
lea
xor
inc
inc
add
inc
inc
push
mov
and
xchg
stos
push
xlat
and
push
fiaddl
cmpsb
push
test
adc
ss
add
jp
xchg
push
leave
sar
fs
inc
subb
in
mov
repnz
mov
and
and
and
inc
es
push
pop
cwtl
sbb
mov
add
popa
in
ret
jbe
int3
or
movb
mov
jg
mov
inc
xchg
mov
aad
xchg
or
sbb
jp
mov
pop
xor
aad
or
xlat
push
pop
enter
sbb
mov
nop
pop
cs
shlb
mov
mov
xor
xchg
jle
movl
fchs
in
xchg
fnstcw
sbb
push
cmpsl
or
sub
sub
lea
cmc
out
mov
nop
jl
cmpsb
pop
ret
mov
movsb
lea
push
or
loopne
and
xchg
mov
ja
mov
sbb
mov
mov
jp
xchg
or
rcrb
outsl
mov
mov
js
or
jl
cltd
or
cmpb
stos
in
sbb
outsl
inc
mov
jg
roll
mov
jg
and
push
loopne
mov
cmp
mov
hlt
popl
int
fsubrl
cmp
sub
repnz
ficoml
out
mov
and
jno
push
aam
in
cmp
lret
pop
dec
cmpsl
movsb
scas
push
jle
push
mov
and
iret
addr16
xchg
aas
inc
mov
arpl
in
es
push
sub
icebp
or
and
lods
jp
outsb
push
push
cmpsb
fsubs
sub
test
repz
xor
repz
adc
lock
rcl
dec
ror
xchg
lods
dec
sbb
mov
push
mov
add
adc
pop
adc
pop
bound
and
mov
leave
and
test
pop
call
add
outsb
cltd
imul
xor
shll
imul
jbe
fwait
or
cmp
xlat
in
pop
or
xlat
or
fdivl
in
in
shl
xor
pop
out
leave
mov
inc
and
clc
int3
jns
cmpb
adc
imul
in
in
into
lock
mov
into
fcoml
mov
iret
dec
inc
dec
jge
add
pop
clc
jg
adc
aaa
jns
fsubrs
fadds
std
fdivrl
and
inc
int3
shl
jg
in
sub
cmp
jns
sarb
dec
ret
test
mov
outsl
xlat
sub
jp
mov
imul
mov
jb
inc
stc
jb
enter
push
js
cmc
pop
jae
sub
jge
mov
add
push
or
jle
inc
jle
push
inc
xchg
or
lret
ljmp
cmp
nop
pop
aam
test
testl
out
xchg
test
fcomi
shrl
sbb
pop
pop
aad
cmpsb
cmpsl
add
lock
shl
jne
movsb
std
call
push
sahf
pop
out
pop
sub
outsb
sarb
sbb
leave
pop
dec
dec
xchg
outsl
loopne
ss
fistpl
xor
push
testl
push
aad
jg
mov
jmp
mov
bound
cli
movl
xor
fwait
or
dec
lret
aaa
inc
sub
test
je
or
jo
pop
pushf
fmuls
shl
jl
pop
mov
mov
jmp
dec
aam
add
add
jg
cli
hlt
or
in
out
dec
or
pusha
mov
hlt
jo
pop
lahf
push
lock
ret
mov
fwait
adc
pop
ds
push
sub
and
call
and
xor
lahf
lock
sbb
cmpsb
sbb
sbb
xchg
ljmp
loope
movsl
xor
add
push
jmp
inc
loopne
stos
mov
push
dec
ja
inc
aad
sarl
loopne
mov
test
mov
xchg
mov
adc
cmpsb
cmpsl
adc
fimuls
data16
and
and
arpl
pop
add
hlt
loope
into
cmp
cmpl
xor
sbb
lods
sbb
out
xchg
sub
sti
sti
in
icebp
mov
scas
xchg
mov
xor
cmp
cmp
and
outsb
cmp
stos
leave
fistl
lahf
jnp
ret
xchg
test
mov
cmp
push
outsl
and
divps
cmp
and
and
sahf
lock
fwait
jg
repnz
jbe
fnstsw
in
ror
pop
dec
mov
jmp
fidivl
cs
pusha
pop
out
mov
nop
jp
mov
jmp
mov
cmpsl
sub
aas
add
ss
les
push
rcr
jmp
adc
sti
movsl
imul
fwait
popf
iret
fucomi
movsl
xor
mov
in
and
aaa
push
leave
int3
dec
popa
aam
sub
call
lret
jecxz
push
icebp
inc
jle
imul
sub
xlat
and
les
jmp
roll
leave
xchg
insl
or
push
fcomps
adc
sub
adc
fcmovnu
pop
pop
dec
in
in
or
adc
cmpsb
cpuid
sub
jecxz
fisubrl
insl
loop
rolb
movl
and
scas
jae
xchg
in
lahf
and
fxch
pop
loopne
xor
and
mov
mov
fidivrs
sub
and
mov
add
or
fists
or
xchg
popf
or
cs
test
xchg
iret
add
int
mov
or
mov
ja
filds
ds
pop
pop
pop
and
inc
cmp
movsb
xor
out
xor
pop
and
sbbb
xor
or
fcomps
prefetcht1
imull
mov
mov
stc
popf
pop
push
xchg
add
sarb
or
xchg
cmp
mov
mov
loope
adc
inc
mov
mov
and
cwtl
movsb
out
js
push
dec
out
out
mov
cli
pushf
sbbb
cld
je
iret
jne
ss
inc
jmp
jno
add
mov
or
mov
mov
push
nop
insl
fisubs
mov
sbb
inc
jb
movq
mov
jg
pop
shll
xchg
scas
stos
fisubs
stos
sbb
adc
sbbb
subb
les
jg
inc
fidivl
cld
dec
hlt
dec
jg
or
cmp
in
out
cmp
pop
cmp
push
or
repz
int
mov
sar
out
pop
add
cmc
jnp
mov
mov
xlat
inc
push
or
cmpsl
data16
mov
shrb
inc
js
scas
lcall
push
mov
stc
pop
fisttps
dec
xchg
jb
pop
mov
sbb
adc
sub
push
xchg
imul
std
mov
adcb
lock
std
push
or
pop
jno
cltd
xor
pop
inc
fwait
xchg
adc
lods
je
mull
xchg
repz
xchg
or
lods
and
sbb
inc
mov
movsl
push
jmp
das
sub
xchg
and
jle
sbb
xchg
jle
add
lds
ret
das
sbb
and
jge
pop
mov
and
mov
or
pop
dec
shlb
sub
imul
cmp
jmp
push
scas
ds
das
ficompl
jnp
lret
xor
push
fwait
mov
inc
add
jmp
pop
ss
push
sub
pop
orb
mov
sbb
fidivrl
test
imul
push
pushf
jp
popf
movsl
leave
add
inc
fldcw
push
cmp
flds
push
mov
ja
xor
push
shll
data16
aad
xchg
call
ljmp
enter
jnp
sbb
into
stos
lret
loope
mov
ja
repnz
jp
sub
add
xlat
inc
dec
and
adc
push
add
out
mov
push
in
jmp
roll
and
mov
js
adc
mov
in
inc
je
sti
jbe
enter
rcr
pop
daa
test
push
mov
int3
out
lret
stos
je
cli
sahf
rorl
test
stos
cmp
mov
popa
mov
leave
or
rolb
scas
xchg
mov
adc
pop
pop
and
cmp
inc
repz
fisttps
and
ss
mov
pop
push
inc
inc
push
bound
ror
test
mov
pop
lock
shrb
xor
ret
call
cmp
push
and
adc
ficomps
cli
jmp
cmp
pop
mov
sarb
mov
je
ret
insb
sub
es
into
fisttpll
mov
neg
mov
das
or
enter
xor
test
or
adc
jbe
outsb
shll
std
xor
and
mov
lods
inc
mov
adc
and
xchg
sti
jb
cmp
and
mov
loop
out
push
and
popa
aad
lods
jmp
push
icebp
mov
in
insb
cmp
cmc
xchg
test
dec
sbb
aaa
jecxz
shlb
lea
adc
xor
mov
in
and
cmp
fnstcw
lret
or
sub
jl
jbe
outsb
out
xor
lock
xor
mov
test
xchg
test
xchg
sbb
sbb
add
mov
dec
sbb
cmp
aas
std
xchg
bnd
mov
sub
ret
mov
into
inc
add
dec
loop
pop
scas
sub
xlat
je
mov
sub
or
cltd
cmpsb
pop
and
in
mov
and
xor
pop
mov
xchg
and
push
loope
in
mov
scas
jge
and
orl
dec
mov
push
mov
in
mull
and
das
inc
inc
mov
jmp
cmp
bound
enter
shr
xor
push
ds
js
hlt
notb
sbb
xlat
jno
push
push
repnz
repnz
sbb
test
iret
aad
jnp
pushf
mov
push
xor
inc
movsl
push
cltd
loop
push
cmp
sbb
out
enter
leave
pusha
mov
cmp
imull
dec
xchg
mov
mov
or
adc
lods
insb
aad
sub
cmp
popa
cmc
sbb
sarb
xchg
inc
cltd
popf
loop
ss
iret
add
sti
les
movsl
add
fisttps
sbb
hlt
mov
iret
push
cltd
push
scas
xchg
push
pop
sub
sbb
data16
and
pop
cmpsl
jge
pop
push
cmpl
mov
jo
jmp
stos
jbe
sbb
and
sti
xchg
sbb
mov
out
lock
in
das
scas
fcomps
jp
pop
xchg
rcrb
cmc
jmp
push
cmp
repnz
mov
loop
and
fs
mov
arpl
js
jno
pop
shlb
push
inc
xor
aaa
push
push
inc
mov
out
xor
sbb
ljmp
mov
jno
dec
jo
shlb
lret
xor
sbb
fwait
push
push
lret
and
add
ret
adc
sbb
test
cmp
mov
or
lea
pop
inc
push
stc
lods
cmp
cld
out
movsl
out
nop
test
sub
mov
mov
jnp
mov
stos
cmp
xchg
ss
sbb
cmp
aaa
into
cmpsb
clc
out
lret
push
and
pusha
cmc
inc
and
cs
test
mov
movsl
cmp
sbb
and
ljmp
clc
mov
jmp
enter
in
push
dec
mov
negb
shl
pop
out
movsl
xchg
push
in
test
xor
scas
jnp
cltd
iret
mov
mov
push
fwait
mov
pop
fdivl
ret
mov
std
mov
xchg
lahf
pop
insb
mov
mov
sbb
divl
push
mov
test
and
mov
push
pop
test
mov
loopne
enter
sub
in
dec
mov
fistpl
ja
cmpl
pop
out
xchg
fsubl
sub
bound
ljmp
cwtl
icebp
or
jg
popf
xor
adc
inc
aaa
adc
je
in
jns
sahf
loope
icebp
rorl
pop
mov
int3
pop
lods
push
leave
fsubrs
pop
jne
scas
pop
das
xor
jae
add
pop
adc
xchg
mov
inc
into
stos
int
ret
icebp
push
mov
push
loop
add
gs
add
pop
xor
fwait
lock
mov
jmp
jmp
add
add
decl
pop
daa
test
jno
jne
push
hlt
xor
imul
cmp
cwtl
pushf
jbe
xor
add
cmp
cmc
sub
int3
add
xchg
cmp
fadds
addb
mov
inc
xchg
sarl
sub
ss
dec
dec
mov
ds
cmp
dec
les
add
mov
adc
sbb
inc
call
cmp
int3
dec
add
inc
mov
shll
ficompl
inc
mov
pop
mov
dec
test
fwait
cs
mov
mov
stos
dec
ljmp
int3
hlt
sub
iret
and
inc
shll
sub
adc
mov
mov
lods
or
sbbl
sbb
lods
xchg
clc
cld
and
ss
cmp
inc
xchg
loope
jl
call
sar
setle
inc
cltd
and
fst
or
mov
mov
cmp
sbb
or
add
cmp
scas
adc
mov
xchg
fucomp
adc
lods
inc
push
push
or
movsb
cmp
add
cld
sbb
outsl
xchg
and
in
lcall
and
push
cmp
xor
push
pop
mov
jmp
ds
popf
sub
aad
sbb
scas
addb
lock
adc
xchg
pop
cmpsb
arpl
mov
ljmp
movsl
mov
pop
fs
test
mov
lret
sahf
xor
cltd
repz
mov
pop
movsl
lret
sahf
pop
imul
add
add
shrl
mov
daa
ds
jg
iret
cwtl
xor
jbe
sub
ljmp
add
ret
push
xchg
or
lods
ret
sbb
inc
imul
jp
loopne
jle
das
and
cmp
mov
nop
adc
or
fimull
push
or
cmpsl
subb
movl
push
gs
insb
in
mov
push
adc
fdiv
lods
xor
sbb
dec
inc
filds
addr16
xchg
sbbl
psubb
enter
test
enter
push
popl
divl
sbb
dec
sbb
cmp
loopne
popa
or
dec
pop
fsts
rcrl
loope
add
mov
cli
sbb
push
es
dec
jmp
dec
sbb
stos
js
roll
bound
fldcw
mov
mov
or
rcll
dec
pop
es
sbb
lds
sbb
jae
mov
sarl
xorb
into
push
inc
jns
adc
jno
aas
roll
inc
pop
cmp
adcb
dec
ret
mov
cmp
das
aad
lds
inc
cld
and
in
out
xlat
jo
imul
out
out
mov
movsl
call
fdivrs
xor
mov
aas
or
pop
sahf
mov
inc
sub
mov
pop
lods
aam
mov
imul
call
popa
pop
sti
scas
jp
lods
imul
stos
pop
mov
popa
cltd
xor
lock
pop
cmp
addb
in
push
sar
jmp
loop
fists
imul
and
lahf
pop
insl
int
cmp
and
push
scas
je
cmp
test
mov
dec
out
lea
push
add
adc
and
mov
xlat
mov
inc
cmpsl
faddl
pushaw
push
cltd
cmp
and
dec
popf
mov
stos
mov
dec
into
jecxz
rcrl
das
cmpsl
loop
dec
stos
lret
dec
or
addb
decb
imul
dec
ret
mov
cmp
mov
mov
sbb
push
jg
cli
cmpsl
adc
movsb
shr
movsl
pop
dec
sub
mov
adc
push
inc
sahf
cmp
cltd
out
movsl
push
cmpsl
pop
inc
stc
jbe
int3
push
fildll
call
stos
add
inc
xchg
es
in
lock
jb
inc
fwait
pop
sub
aad
xor
pop
inc
shl
into
sbb
jmp
int3
sub
mov
mov
or
push
xchg
inc
scas
dec
jge
or
cld
mov
inc
fcmovbe
dec
mov
sbb
pushf
scas
vshufps
pop
lods
in
nop
add
cmp
and
add
or
nop
scas
fldcw
ja
push
loop
dec
pop
sub
fadd
mov
and
and
int3
inc
lea
adc
subb
mov
lods
xchg
mov
sub
xor
push
repnz
test
fnsave
adc
xchg
adc
sbb
add
dec
ljmp
int
lods
out
push
mov
mov
jae
repnz
stc
sbb
xor
pushf
lds
sub
lds
mov
loopne
fdivs
loope
outsl
pushf
sub
adc
mov
fcoms
dec
arpl
jecxz
jnp
outsl
push
lods
mov
rclb
out
fisttpl
lods
stos
test
jg
imul
mov
push
mov
fwait
rcrl
sub
cmpsb
inc
insb
scas
ljmp
dec
mov
movsl
or
sub
lock
daa
je
pop
arpl
mov
insb
stc
fstpl
xchg
mov
sbb
sub
sbb
cmp
and
out
mov
push
retw
inc
push
mov
sub
dec
cmpsl
fiaddl
bound
fdivrs
std
cli
xchg
mov
adc
inc
or
rorl
or
in
cmpsb
cmpl
jg
out
xor
push
stc
cmp
adc
je
stc
mov
lret
mov
dec
add
ss
daa
sbb
push
sub
dec
in
dec
lock
dec
and
ffree
cmp
sbb
in
mov
fstp
sbb
sbb
aaa
jp
mov
dec
jg
fdivrs
add
lock
ret
xor
fisttpll
lahf
lcall
and
xor
lret
rol
xchg
pop
shlb
in
flds
xor
xor
fnstenv
cmp
mov
push
jecxz
ret
add
fcmovb
lahf
jp
pop
xchg
add
enter
out
mov
mov
or
cmpsl
addb
dec
icebp
fbstp
in
and
loope
xor
stos
icebp
xor
cmp
lds
out
mov
shl
outsl
jl
stos
mov
ficoms
push
add
stos
arpl
movsl
insl
imul
cli
lods
cmpsb
jmp
pushf
rorb
jle
into
push
xchg
cmp
data16
jnp
dec
test
xor
pop
pop
sbb
xchg
or
and
jp
inc
outsl
dec
test
stos
xchg
and
pushaw
xor
sbb
and
xchg
mov
cmp
pop
divb
pop
inc
sbb
or
fcompl
pop
adc
insb
incl
or
sti
mov
pushf
add
test
divb
enter
inc
leave
sbb
add
popa
stos
cli
add
mov
xor
mov
mov
xchg
inc
pop
mov
lds
daa
fsubp
xor
lret
arpl
insb
mov
mov
inc
adc
xchg
adc
in
inc
inc
std
shlb
hlt
arpl
pop
test
sbbl
mov
xchg
cmpsb
in
dec
fistl
hlt
pop
ja
mov
adc
ret
xor
jns
push
sbb
daa
test
inc
pop
fldl
scas
xchg
sub
js
imul
in
and
adcb
add
push
and
sub
lea
sarb
gs
std
psadbw
loopne
and
fcmovu
lods
and
jne
jecxz
mov
dec
and
push
cmp
enter
jmp
stc
int
popf
fidivl
pop
cmp
fisttps
nop
mov
mov
andl
fmull
add
mov
push
mov
sbb
xchg
aam
or
mov
sbb
idivb
shr
rdtsc
push
cs
or
mov
adc
in
movsb
daa
xchg
shl
shr
mov
dec
ljmp
push
pop
pop
jmp
cwtl
inc
mov
dec
popf
movsl
addr16
ds
mov
mov
addr16
outsb
dec
out
ss
aas
jmp
xchg
in
push
sbb
in
fadds
cmp
ret
inc
or
clc
mov
sbb
subb
cmp
clc
dec
xor
lret
ja
mov
loopne
mov
dec
jae
xor
mov
popl
pop
sub
stos
pop
pop
or
and
push
fs
or
inc
jecxz
adc
xchg
push
lahf
aaa
jmp
call
jle
js
arpl
inc
flds
clc
lret
jb
inc
xchg
and
and
dec
pusha
fsts
stos
inc
dec
addb
aad
and
mov
pop
addr16
in
push
insb
cmpsl
xchg
push
pusha
xor
xchg
mov
inc
jbe
fs
sub
xor
movsl
ja
ret
add
and
adc
xchg
mov
xor
out
ljmp
add
and
loope
or
adcb
inc
div
repnz
stos
and
fwait
xchg
aam
sub
iret
add
out
aam
mov
add
or
cmpsb
xchg
div
mov
cwtl
cmp
mov
fisttpl
dec
adc
xor
sbb
jmp
cmpsl
mov
adc
sbb
rcrb
insb
out
dec
dec
xor
push
mov
jo
mov
lea
adc
cltd
dec
jbe
cmc
test
jno
pop
jb
fistpl
in
sti
or
xor
adc
enter
mov
ret
xchg
pusha
int3
cwtl
sbb
mov
iret
pop
cmp
test
mov
faddp
cmp
xor
inc
mov
jmp
loope
dec
aad
mov
mov
pop
scas
xor
rcll
jmp
aas
lea
mov
push
jb
or
pop
add
sbb
pop
xchg
jbe
call
and
pop
bnd
or
cmp
inc
cmpsb
xorl
and
dec
sub
lret
cmp
lahf
idiv
pop
sti
push
adc
or
xchg
out
pop
sbb
movl
and
cmp
mov
jbe
push
and
and
or
add
push
enter
clc
sahf
cmp
xor
mov
notb
xchg
xchg
mov
xchg
jnp
mov
adcl
xchg
inc
cmp
cmp
push
dec
pusha
cs
pop
dec
and
adc
sbb
adc
test
dec
insl
sub
inc
jb
push
jno
mov
es
out
test
shrb
mov
pusha
in
cmp
ljmp
xchg
sbb
pop
mov
cmpsb
jb
cmp
xchg
addr16
pop
pusha
dec
pop
sub
mov
add
rol
push
jo
fists
jbe
or
inc
loope
test
fcomi
mov
sbb
in
out
dec
push
in
aad
cmpl
pop
mov
mov
or
or
gs
ss
ljmp
in
cltd
and
repnz
cmp
in
xchg
cmpsb
mov
mov
cmp
repnz
into
jae
mov
jge
mov
out
jl
rcll
mov
mov
pushf
lahf
stc
jne
ss
and
daa
out
add
sub
into
and
pop
mov
loop
stc
call
cmp
and
cmp
push
mov
mov
xor
mov
pop
cmp
filds
pop
test
enter
or
ljmp
pop
cmp
mov
data16
cmp
fldt
dec
andl
and
mov
jp
push
mov
jmp
lock
mov
lea
jns
js
not
push
jo
pop
ljmp
mov
sbb
and
cwtl
mov
cld
fidivrs
mov
fnstenv
cs
mov
gs
gs
jo
or
adc
push
pusha
lret
js
outsb
leave
and
mov
jecxz
fcmove
das
and
push
ds
addr16
xchg
sub
push
jae
dec
xor
dec
mov
add
nop
sbb
add
dec
cld
add
fwait
mov
clc
sbb
jo
cli
and
rolb
jp
or
cmpsl
shrb
pop
mov
sbb
xchg
xor
mov
mov
xchg
mov
jo
jg
rorb
ss
shl
pop
fimull
aam
dec
popf
mov
push
pop
bound
pop
aam
cli
push
mov
and
mov
in
movsl
popa
mov
mov
sub
pop
in
fs
jg
ret
iret
clc
aam
jg
mov
les
mov
pop
cmp
lods
inc
xchg
mov
push
imul
cwtl
stos
andb
cmp
push
xor
jne
loop
jnp
mov
aad
rorb
cmpsl
int3
jbe
lds
push
lcall
rorl
and
xor
and
test
xchg
xor
les
mov
out
cmpl
xlat
fwait
insl
pop
insb
mov
jo
dec
cltd
mov
divl
pop
ds
dec
cwtl
ret
repnz
sub
aaa
fmull
mov
pop
in
jge
clc
add
fsub
out
jg
sbb
in
in
jb
addl
nop
jno
in
testl
mov
rcrl
fs
jns
call
push
mov
xchg
jno
or
leave
lods
scas
pusha
and
xchg
pop
jp
mov
dec
daa
sbb
lods
sbb
or
adc
mov
pop
in
pop
and
mov
sub
pop
adc
cmp
inc
arpl
loopne
shl
je
xchg
xchg
adc
sbb
xor
mov
inc
movsb
shrl
out
rolb
push
leave
clc
fsub
jnp
add
movsl
ljmp
jo
dec
test
mov
sbb
lahf
xchg
xor
pushf
adc
mov
and
xchg
pop
out
xchg
mov
test
jg
jb
ret
rolb
dec
js
scas
add
sub
fwait
loop
cli
push
sub
add
setbe
inc
jns
jle
mov
pop
mov
sahf
rolb
push
rep
outsl
enter
test
int3
ret
cmp
sbb
and
pop
sub
adc
ljmp
cmc
sub
pop
rcrl
mov
mov
jle
mov
inc
mov
fdiv
repz
sub
cmp
mov
jle
pop
cmpsb
imul
iret
cmpsb
rorb
push
and
clc
mov
jecxz
mov
pop
mov
stos
fstl
inc
bound
and
shl
pop
std
jmp
add
adc
cmp
outsb
mov
call
or
mov
pop
cltd
icebp
insb
push
cmp
adc
fdivrs
adc
sub
push
pop
jb
add
and
test
lret
adc
repnz
out
adc
mov
mov
or
cmp
or
sbb
add
movsb
push
sub
adc
sub
outsb
sub
out
sub
xor
cltd
into
lret
test
mov
in
inc
ret
push
jae
lahf
inc
add
dec
pop
xlat
lret
jge
ljmp
aad
xchg
mov
and
das
cltd
push
lret
out
or
pop
enter
dec
aas
add
inc
inc
fwait
jae
xor
test
mov
orb
jns
mov
aad
mov
mov
xor
add
fnstsw
cltd
loop
pop
je
fwait
adc
nop
rcrl
cld
in
in
cmp
cmp
sbb
pop
arpl
repz
jb
and
insb
inc
sub
jle
sarb
add
mov
adc
or
addl
and
sub
loop
dec
test
mov
add
loop
sarb
repz
jecxz
jne
sarb
es
mov
pop
xchg
das
sub
mov
into
and
ja
cpuid
xchg
sub
out
push
test
mov
or
popf
adc
adc
insb
xchg
shlb
add
push
pop
mov
add
or
dec
sub
daa
dec
aas
inc
add
jmp
cmp
cwtl
aaa
popf
std
fldt
xor
mov
fimull
movsb
xchg
pop
enter
xchg
call
xchg
fiadds
jge
mov
pop
insl
jmp
dec
movsl
push
mov
pop
in
rclb
aaa
daa
pop
or
mov
jne
add
mov
mov
push
sarb
test
movsl
xor
lret
jnp
jge
outsl
aam
pushf
push
cmpsb
and
inc
xor
mov
ja
inc
mov
inc
xlat
lahf
xchg
and
cmc
stos
movsb
mov
insb
imul
movsl
sbb
fdivl
lahf
push
test
dec
imul
jecxz
into
sbb
pop
push
adc
mov
bound
sub
fcomp
adc
add
xor
jo
leave
sub
and
mov
jp
mov
sbb
cmpsb
fcompl
leave
shlb
scas
cltd
in
pop
mov
cmpl
loope
fdivr
mov
lock
xchg
out
scas
and
push
jns
repz
cwtl
pusha
ret
hlt
cwtl
inc
inc
dec
mov
mov
popf
or
nop
mov
jno
out
inc
in
jg
mov
jle
cmp
lret
add
xchg
jns
cmp
imul
imul
adc
inc
insb
in
adc
subl
fiaddl
outsl
fistpl
xchg
std
inc
fstps
pop
ret
and
insb
fists
in
xlat
sub
stc
xchg
rol
pop
lret
mov
imul
loopne
pop
sub
js
insb
cld
sbb
inc
xor
add
cmp
sbb
ret
leave
stc
adc
pop
sbbl
and
add
inc
aas
cmpl
fstpt
and
jmp
subb
andb
mov
xor
push
or
mov
icebp
icebp
pop
cmc
pop
push
lods
jg
ss
push
bound
sub
adc
lock
testb
shr
and
icebp
notl
cmp
stos
into
fwait
pop
cs
inc
mov
xor
dec
call
out
je
int
or
repz
scas
sub
inc
push
inc
push
outsl
out
shl
push
xchg
add
das
test
add
fsts
das
outsb
loope
and
arpl
stc
pop
cltd
xchg
pop
shrl
add
repz
dec
mov
pop
ret
mov
ss
or
data16
mov
and
testb
jno
mul
sub
xor
and
pushf
xor
test
and
repnz
loope
xchg
outsl
jns
push
adc
jl
mov
mov
in
test
push
loope
mov
mov
test
addr16
ja
xor
imul
jno
pop
mov
mov
sub
pop
sysret
loope
inc
cmc
jns
mov
push
testb
mov
push
jno
and
jge
adc
bound
sub
and
or
lahf
dec
sub
stos
fwait
sahf
and
ret
stos
dec
mov
mov
imul
jle
out
cld
fwait
jnp
sbb
arpl
aam
sti
lock
mov
call
test
loop
push
mov
sub
int
pop
mov
out
push
push
leave
mov
das
xchg
sub
adc
icebp
test
mov
cmp
xor
push
stc
pop
and
mov
scas
cmpsb
xchg
sti
cmp
jo
push
or
jmp
mov
pop
aam
pusha
jo
jns
lods
dec
or
test
aas
bound
cs
cs
mov
or
mov
pop
or
xchg
adc
cmc
js
xor
mov
and
mov
mov
je
orb
push
push
test
mov
add
push
pop
pop
loop
push
subb
mov
xchg
xchg
in
lcall
xchg
cmpsl
das
cmpsb
aas
pop
scas
divb
sti
das
ret
lret
xchg
cmpsb
insb
mov
push
jns
sarl
adc
mov
arpl
lret
orl
mov
cmpsl
xchg
les
lds
mov
sbb
inc
outsb
mov
push
not
cmp
outsb
and
adcb
fidivrs
out
cmp
xor
inc
pop
inc
jmp
pop
pop
pushf
inc
leave
pop
bound
scas
ljmp
out
add
dec
test
push
lock
arpl
inc
or
mov
test
cmp
mov
pop
xor
rcr
movsl
and
mov
and
or
mov
adcb
enter
mov
fisubl
push
mulb
xor
dec
mov
jg
in
ret
lret
pop
mov
push
mov
ret
or
add
inc
sub
mov
fmulp
sti
xor
mov
and
dec
jecxz
mov
cmc
lret
mov
sub
push
call
cmp
adcl
adc
into
fldt
decb
ret
sub
inc
pop
loop
cmp
sbb
dec
ss
jne
xchg
xchg
orl
mov
pop
sbb
ss
add
notb
mov
aas
arpl
cwtl
dec
sub
pop
test
mov
jae
add
mov
shrb
aad
icebp
nop
adc
das
arpl
pop
daa
int3
and
into
jp
xor
jmp
dec
lds
inc
stc
inc
sbb
and
lea
in
cmp
out
sub
repz
subb
jmp
dec
insb
adc
jle
adc
sbb
adc
sub
push
in
fs
push
xor
inc
adcb
dec
pop
in
mov
std
js
push
out
ret
add
cltd
cmp
ds
push
out
mov
mov
lds
xor
fwait
and
es
in
add
sbb
sbb
or
jmp
fistps
push
and
lea
pop
mov
lods
add
clc
pop
cltd
mov
fs
mov
mov
xor
into
orb
rcrl
mov
mov
icebp
std
out
popa
mov
lahf
outsb
andl
jmp
into
out
cwtl
cmp
mov
fstl
cmp
scas
jo
jle
mov
imul
push
imull
sub
test
xor
stos
mov
sub
clc
scas
std
cmp
mov
ds
lret
leave
test
loop,pt
imul
clc
outsl
in
pop
push
data16
int
in
and
pop
add
test
aad
imul
inc
enter
in
or
dec
push
mov
dec
movsb
push
popa
sar
jnp
pop
jle
mov
adc
cltd
shrb
iret
add
adc
inc
pop
out
cmp
pop
dec
lret
mov
adc
js
loopne
imul
shll
push
in
jg
jp
mov
fisubs
xor
dec
add
dec
add
jae
dec
push
push
lods
repnz
fisubl
pusha
mov
loop,pt
jmp
pop
add
cmp
faddl
push
mulb
mov
fwait
lret
xchg
rcrb
jl
sub
xchg
adc
pushf
pop
repz
movsb
sahf
push
cmp
mov
arpl
add
pop
stc
mov
aad
popl
aam
jne
pop
mov
jge
aaa
addr16
sub
aam
cmp
mov
ficoml
out
lret
and
mov
adc
pop
inc
sbb
xor
mov
pop
aam
sub
fwait
cmp
lock
adc
xor
ror
retw
cmp
movsl
mov
add
adc
cmpsl
fists
movsl
lock
fstpl
cwtl
popaw
pop
nop
icebp
xchg
mov
sub
rdtsc
jns
pop
cs
mov
sbb
or
arpl
outsb
dec
add
test
and
mov
mov
aad
mov
and
dec
xor
fcmovu
aad
sti
aaa
call
ss
dec
shll
or
mov
dec
add
sarb
loope
movsb
or
rcrl
inc
jge
jns
or
cmovl
cltd
or
mov
xchg
jl
je
push
popf
rclb
sub
int3
aaa
sub
das
jl
push
mov
jmp
mov
pushf
mov
or
loopne
pop
out
mov
adc
fimuls
test
outsl
frstor
inc
xor
jl
mov
in
lahf
push
and
sub
movsb
nop
outsb
mov
and
xor
movsl
inc
mov
and
xor
fstp
dec
or
xor
mov
int3
mov
push
addr16
movsl
push
das
cmp
xchg
fiadds
clc
mov
sbb
adc
add
adc
dec
adc
adc
pop
lcall
addr16
sub
mov
jns
sbb
lret
mov
adc
inc
decl
loopne
add
mov
cmp
jmp
daa
sub
test
jecxz
shl
jmp
ret
push
cmpsl
jl
aam
sbb
fucomi
cmp
or
dec
sbb
pmuludq
mov
mov
jle
lret
fwait
pop
adc
shrl
add
sarb
inc
imul
test
adc
dec
xor
push
cmpsb
iret
enterw
pusha
pop
add
dec
test
icebp
movb
push
jno
insb
pop
mov
call
mov
mov
leave
push
lret
pop
mov
lcall
sahf
and
mov
mov
push
aaa
movsl
mov
ds
or
push
xchg
cli
xor
mov
add
or
jp
outsb
rcll
jmp
mov
adcb
jg
sbb
cmpsb
rcl
pop
push
aas
lea
hlt
test
pusha
mov
jmp
loopne
mov
dec
loope
bnd
push
or
insb
sub
aam
dec
imul
lret
cmpb
int3
mov
jg
push
sbb
xchg
dec
popf
sarl
jle
sbb
or
arpl
sbb
lods
flds
adc
xor
andl
xchg
fbstp
xchg
add
gs
and
rcl
xor
xchg
xchg
cmp
adc
add
adc
adc
and
popa
inc
lods
cltd
xor
out
data16
sub
enter
mov
mov
ss
dec
pushf
mov
sbb
inc
arpl
in
movsl
lret
or
push
jne
and
repnz
jp
xor
pop
outsl
mov
scas
cwtl
aam
jg
sub
cmp
mov
roll
loop
sub
mov
cmp
pop
cli
push
push
jb
into
into
add
stos
stos
dec
xlat
and
xchg
out
jo
test
cmp
rcrl
mov
je
adc
scas
int3
mov
push
xorl
fcoml
call
ljmp
movsl
lea
sti
cld
push
jl
aaa
or
aas
or
jg
roll
inc
cmpsl
loope
and
out
fmuls
repnz
shll
aas
inc
clc
out
pop
in
std
rcrb
add
mov
cwtl
notb
arpl
out
adc
jns
repnz
jno
jmp
mov
scas
inc
popf
sbb
push
jnp
and
pop
adc
push
or
inc
mov
inc
or
jae
test
aam
pop
stos
pop
fwait
shll
enter
jb
adc
lret
jl
add
xor
xlat
shll
or
js
jecxz
popf
test
ret
call
ja
xorb
inc
jnp
inc
lds
pusha
sub
jp
mov
ds
mov
mov
sbb
xchg
or
out
push
mov
mov
jnp
mov
mov
cmp
push
mov
mov
jo
fnstenv
popf
sub
scas
xchg
push
int3
mov
xchg
out
push
dec
or
and
mov
jp
mov
push
test
sub
adc
add
push
ret
cs
sub
cmp
movlps
jecxz
cld
call
adc
push
shrl
cltd
aam
adc
sbb
jae
mov
adc
hlt
mov
int
inc
add
call
xchg
lea
cli
or
xchg
mov
ficoms
pop
stos
add
push
mov
fs
ret
lock
cmpsb
lods
outsl
dec
call
popa
sbb
jp
jge
popf
xchg
lods
mov
enter
inc
test
jle
andl
loopne
stos
push
xlat
mov
test
push
in
test
xchg
scas
cmp
push
or
xchg
mov
repnz
push
pusha
decb
xchg
aaa
and
addr16
pop
out
push
ljmp
int
lds
xlat
lcall
enter
push
call
movsb
dec
pushf
jo
into
addr16
or
sbb
or
aad
push
or
mov
push
outsl
lret
push
jne
fwait
loopne
rcr
in
mov
push
xchg
aas
les
iret
cwtl
mov
call
inc
mov
and
cltd
sahf
push
ja
lods
imul
push
or
call
int
inc
add
out
dec
mov
popf
mov
xchg
nop
xchg
xchg
push
cmp
ffree
rcrl
jg
pop
fistpl
mulb
inc
lea
mov
mov
stc
dec
mov
xchg
pop
xor
adc
aaa
std
addb
jg
and
cld
stos
sahf
adc
lods
sub
out
jl
xchg
cli
push
xor
pop
mov
shl
rcl
les
das
jae
je
bnd
cmp
push
nopl
subl
das
enter
cwtl
out
test
pop
sub
dec
iret
mov
xor
add
loopne
dec
cmp
and
fists
or
aam
cli
jb
pop
and
shll
repnz
mov
pop
fidivrl
push
push
int
sahf
arpl
push
push
add
into
aas
stos
popa
xor
test
sub
imul
sub
add
mov
mov
push
popa
lods
cli
cmp
repnz
jmp
das
or
pop
loope
push
mov
arpl
jne
xlat
arpl
bound
lock
jg
push
xchg
pop
pop
loopne
test
xchg
fidivs
jmp
idivb
in
and
arpl
mov
sbb
fistps
pop
test
jno
leave
icebp
sub
stos
lods
mov
insb
jnp
ss
mov
xchg
push
sub
lahf
and
mov
data16
xchg
mov
adc
clc
out
out
adc
aas
push
cwtl
and
jp
jnp
or
sub
lea
pop
push
sub
sub
sbb
std
and
mov
xchg
mov
in
ja
pushf
mov
xchg
movsb
dec
xor
fsubl
int
push
adc
push
lods
mov
mov
ffreep
sahf
push
xchg
dec
push
icebp
outsb
les
shl
lds
dec
and
push
cmpb
push
xor
xchg
xchg
mov
std
mov
enter
ret
inc
lock
push
cltd
lea
adc
jns
outsb
jmp
loopne
pop
out
fdiv
pop
out
mov
adc
es
mov
and
sti
inc
mov
push
inc
push
xchg
push
sub
xchg
mov
test
xchg
push
sbb
jno
imul
add
imul
rcrl
cld
jp
jg
xorb
jecxz
shll
test
dec
xchg
fldl
push
das
aaa
and
subb
sbb
cmp
jnp
stos
cli
sub
lret
xor
sti
pop
movsb
cmp
jbe
pop
xchg
jmp
sub
cs
cmp
repz
test
in
fidivl
inc
push
ja
add
adc
and
mov
mov
repnz
das
pushf
fldcw
pop
xorb
mov
pusha
out
rorl
or
mov
repz
cltd
sti
and
jae
int
fcmove
test
icebp
jo
adc
jno
stos
aaa
fxch
std
stos
sub
push
lods
push
xlat
ficoms
in
jnp
push
xor
push
addr16
cmp
in
jae
aad
mov
cmp
adc
rcrl
cld
loop
cs
sti
cmpsl
into
stos
rolb
data16
mov
cs
cmp
mov
xchg
pop
inc
mov
aam
imul
pop
movsb
insb
mov
insb
cmp
sbb
rorl
rep
push
test
ljmp
push
mov
and
sub
movswl
sbb
out
mov
xor
adc
xchg
dec
icebp
jbe
dec
popa
dec
pop
or
inc
mov
int
std
xor
in
adc
sub
inc
or
or
aaa
mov
je
xchg
sbb
cmpsb
divl
add
sub
aam
and
je
scas
clc
add
out
or
cltd
or
mov
icebp
ljmp
arpl
scas
sub
imul
in
sub
cmp
xor
cmp
adc
sbb
ja
rcrl
movsl
sub
arpl
jno
loop
fnstsw
cmpsl
sahf
sar
paddusw
movsl
dec
daa
sub
xchg
pop
movsbl
and
inc
and
scas
fs
jp
sub
sbb
loopne
or
pop
lock
cmp
pop
in
jp
outsb
ds
cmp
lods
movsl
ror
ljmp
pop
cld
or
xlat
dec
push
icebp
pop
push
lret
pop
mov
cmp
es
inc
ss
cmpsl
pop
mov
and
xchg
scas
jle
pop
dec
jae
dec
dec
addr16
fdivr
jnp
fsubrl
jl
mov
std
shlb
jle
mov
in
push
mov
scas
cs
jp
daa
sub
in
mov
fiaddl
adc
push
aad
push
inc
call
sbb
adc
popf
test
add
das
es
jae
jge
and
xor
ds
imul
scas
adc
rclb
add
mov
insb
or
cmp
sub
add
xchg
cmpsb
cmpl
fisubrl
add
xchg
cwtl
sub
stos
imul
pop
nop
mov
and
mov
jns
nop
aas
call
fwait
jl
add
mov
lret
jge
sbb
rcl
xchg
aam
mov
inc
data16
lock
inc
scas
pop
add
je
xchg
mov
in
mov
clc
xchg
and
fisubs
jle
movsl
xchg
sahf
shll
shld
shrl
mov
adc
mov
xor
test
cmp
sub
push
cmpsl
mov
add
xor
int
sbb
mov
cmp
pop
adc
jae
in
or
mov
test
cmp
in
call
mov
xor
lods
mov
repz
or
or
ret
xor
aas
pusha
push
jl
ds
sbb
mov
jge
stc
aad
mov
lret
jae
push
add
shl
in
xchg
shlb
xor
mov
sub
add
xchg
jl
ss
adc
sti
lret
imul
testb
mov
adc
jp
call
mov
adc
mov
jmp
das
pop
jb
or
jp
cmpsb
jp
push
arpl
pop
test
incl
sti
imull
imul
xchg
cmpsl
iret
in
xchg
mov
add
cmp
mov
call
pop
stos
push
cmp
sbb
adc
mov
cmpsl
or
loop
fs
outsb
adc
not
scas
xchg
xor
pop
mov
mov
and
adc
push
arpl
inc
rorl
test
mov
movsl
jge
xor
push
ds
lea
insb
mov
push
ja
repz
lds
out
jecxz
fldt
dec
sub
mov
dec
sahf
xchg
ss
cmp
jmp
inc
js
dec
hlt
cmp
pop
data16
lea
xor
sti
loope
lods
fcompl
test
pop
push
lcall
or
ljmp
cs
shrb
stos
mov
pop
insl
popa
sbb
pop
adc
jo
inc
adc
out
stos
xchg
adc
cli
test
rcrb
push
jecxz
int3
push
ret
push
cld
inc
das
subb
subl
fcomip
pop
mov
addr16
das
jno
xchg
data16
mov
or
pop
and
cwtl
scas
test
sub
jb
jge
out
pop
mov
stos
or
sbb
sub
dec
and
sahf
dec
push
stc
insb
test
tzcnt
jno
repz
lcall
test
bound
mov
sub
rolb
and
dec
cmc
adc
hlt
test
lret
add
outsb
pusha
push
sub
int3
fldt
fcomi
shr
lock
mov
daa
insl
mov
lods
cmp
icebp
bound
decb
lcall
rorb
in
mov
sbb
nop
lret
push
iret
mov
mov
repnz
es
mov
jne
xor
adc
pop
xlat
ret
test
into
adc
inc
pop
sbb
add
dec
enter
jge
pop
push
xorl
xor
jb
into
jecxz
lock
test
sbb
inc
es
daa
xchg
sub
std
or
jo
aad
in
movsl
xchg
into
fsubrs
iret
xor
sub
xchg
cltd
std
outsb
insb
out
ret
or
add
jg
out
push
repnz
inc
leave
insl
inc
jmp
add
push
xor
in
jnp
out
lock
add
inc
mov
cltd
mov
adc
icebp
mov
pop
push
ret
lret
pop
mov
mov
push
rorb
dec
shlb
stc
pusha
xchg
sub
imul
iret
jno
ret
dec
movsb
faddl
fstl
test
or
sub
test
push
cmpsb
cld
ret
mov
mov
mov
xor
inc
add
xchg
mov
outsl
ficoml
and
insb
inc
push
jecxz
or
std
push
in
push
mov
sahf
nop
ds
mov
sbb
add
rorb
mov
or
and
in
mov
dec
add
and
jp
xchg
jl
add
and
mov
push
into
pop
adc
or
adc
sub
jg
push
sbbl
shrb
inc
pusha
xor
lods
cmovnp
cmp
aas
push
push
inc
in
mov
lock
rcrl
dec
pop
or
cmp
push
mov
and
sbb
faddp
ja
dec
xchg
ret
pop
dec
lods
insl
xor
pop
push
lods
ret
lods
jae
gs
xchg
enter
xor
dec
or
push
push
cmp
sub
test
daa
fs
mov
push
jecxz
adc
adc
xor
repnz
jns
jbe
in
pusha
xor
loop
aam
lods
and
fs
cs
mov
jnp
je
repz
and
mov
les
sarb
scas
inc
cmp
rcrl
adcb
call
adc
add
je
jb
divb
mov
jle
and
in
pop
movb
adcl
pop
and
js
mov
pushf
xor
sbb
cmpb
adc
dec
and
insl
jbe
mov
and
data16
mov
jne
ficompl
pop
fistpl
daa
xchg
cmp
sbb
mov
and
jg
iret
or
test
popf
das
dec
ficoml
iret
push
aam
aad
les
push
sarb
shlb
dec
sbb
lods
add
stc
nop
jb
jnp
push
fsubrl
arpl
mov
sub
sbb
outsl
add
pop
into
lock
test
arpl
mov
add
lahf
loop
mov
loopne
mov
js
add
fs
xchg
push
cmc
insl
adc
test
and
movsb
mov
rclb
pushf
xor
pusha
push
leave
pushf
cmc
ret
sti
in
sub
jle
clc
push
cmp
dec
insl
sbb
lods
mov
movsb
jge
pushf
push
push
push
test
scas
repnz
adc
stos
lea
fcomip
movsl
imul
push
cmp
into
mov
movsl
jb
fbld
repnz
push
mov
cmp
js
mov
sbb
mov
shll
les
ret
pop
std
andl
mov
scas
js
cwtl
xchg
sub
add
push
insb
scas
idiv
xchg
pop
mov
xor
add
fimull
sarb
mov
leave
addl
xor
mov
cmp
pushf
aaa
sbb
mov
or
cld
and
stos
jmp
int3
call
cmp
pop
jl
cmc
sahf
push
adc
ja
adc
lock
leave
pusha
scas
and
subl
or
xor
fdivl
mov
js
push
push
or
into
es
cmp
cmp
dec
sarl
addr16
popa
rorl
cmpsb
mov
sub
push
xchg
add
es
cs
push
jb
lcall
mov
jle
push
lds
leave
xor
out
in
xchg
mov
xchg
fdivrs
arpl
test
ficoms
loopne
inc
dec
xchg
push
and
icebp
mov
dec
mov
test
sahf
sbb
and
pop
inc
pusha
in
push
scas
inc
rorl
push
pop
cwtl
jle
insb
mov
sub
jb
dec
outsb
jb
test
push
sub
adc
popl
mov
and
sub
add
sti
jp
neg
mov
xor
inc
jns
add
out
subb
push
icebp
pop
sub
lods
or
mov
pop
rorb
icebp
mov
dec
push
mov
jae
std
xchg
and
fbstp
and
insl
xor
adc
lock
xchg
roll
dec
addl
mov
sbb
inc
lods
mov
adcl
lods
lcall
aam
mov
push
mov
divl
ficomps
inc
or
lcall
xor
mov
fs
arpl
jecxz
rolb
xor
inc
clc
push
scas
push
arpl
leave
dec
mov
fsubs
in
jns
loope
mov
inc
stos
adc
or
pushf
test
filds
sbb
clc
push
into
xor
movsl
rcl
rorb
arpl
jmp
fldcw
out
push
jno
fs
pushl
and
movsl
faddl
mov
js
shll
sub
xor
leave
add
or
inc
xchg
cltd
push
mov
jg
movsl
or
mov
cmp
and
push
out
test
out
push
jo
add
sbb
adc
outsb
arpl
mov
jno
test
add
cmc
add
pop
lret
cmp
cltd
dec
jmp
fsubr
mov
mov
or
hlt
mov
xchg
sbb
inc
cld
or
cmp
movsl
insl
das
dec
cs
sbb
jle
ror
mov
xchg
dec
fdiv
inc
inc
loopne
sub
jnp
rcr
rorb
in
cli
jo
adc
add
popf
ss
cmpsl
fistps
cli
inc
xchg
pushf
mov
rolb
fcoms
sbb
adc
pop
xor
enter
fldt
inc
adc
int3
push
push
push
loopne
pop
mov
dec
loopne
mov
push
mov
hlt
add
call
xchg
lds
lahf
push
lahf
jb
xor
pop
sub
xor
adcb
adc
ret
sbb
scas
fnstcw
mov
push
test
inc
sbb
mov
rep
jae
cltd
int3
sbb
scas
jmp
fidivrl
rclb
loop
add
jmp
add
sahf
cmp
rcl
lods
or
cs
fildl
ljmp
mov
mov
or
add
pushl
inc
in
repnz
dec
in
and
in
test
or
into
sub
pop
je
sarb
mov
mov
cwtl
adc
xchg
mov
xorb
inc
pop
outsb
sub
stc
popa
xchg
cli
jo
inc
loope
xchg
and
pop
out
in
xor
mov
mov
fbld
int
lock
cmp
xchg
inc
and
dec
mov
mov
ror
rorl
test
fs
cmp
shrb
roll
xchg
les
jge
addr16
add
sbb
mov
adc
out
mov
pop
push
xchg
and
push
or
cmp
xchg
push
inc
xchg
stc
addb
popf
aam
lds
stos
mov
cmc
sub
outsb
push
or
call
and
add
mov
in
lcall
fcmovne
jne
or
mulb
nop
stos
test
mov
sub
xor
lcall
in
add
mov
sbb
adc
push
add
cmp
sti
xor
push
jle
pop
repz
rolb
out
inc
stc
daa
and
mov
sub
rcll
mov
iret
dec
cs
imul
dec
stos
mov
xchg
popa
xchg
repz
jbe
push
andb
insl
fstpl
stos
pop
jno,pn
mov
cmp
stc
mov
push
pop
xorb
arpl
das
fnstsw
pushf
and
mov
and
sti
add
repz
das
jno
test
movsb
add
pusha
test
js
jmp
std
stos
sub
mov
hlt
and
adcl
bound
jne
sub
dec
push
std
stos
lds
jnp
sub
das
shrb
bnd
imul
fiaddl
subl
lcall
sub
pop
std
insb
xchg
idivl
and
adc
fstpt
fistps
inc
xor
popa
rcrb
mov
movsl
dec
lods
lahf
fwait
mov
mov
cltd
fwait
pop
inc
cltd
ss
jp
jp
pop
jb
jo
cmp
lcall
push
shlb
sbb
dec
jno
or
push
popf
ds
inc
lds
fidivl
addl
mov
pop
mov
aad
daa
inc
adc
stos
mov
mov
outsl
or
sti
adcb
cld
ret
lods
jl
icebp
jns
inc
add
pop
add
xor
pop
aaa
xchg
outsl
cwtl
sbb
mov
cmp
in
mov
lcall
cltd
push
pop
jl
dec
xor
and
fldt
mov
jnp
jno
out
cwtl
pop
inc
mov
and
sbb
jmp
sbb
xchg
lods
push
fadds
mov
add
fwait
shrl
add
inc
fstps
dec
jg
mov
mov
push
push
fsub
rcr
fdivl
stos
sub
mov
mov
scas
je
out
mov
dec
xchg
or
cmpl
fcoml
add
xor
mov
push
xlat
xchg
xchg
scas
inc
xchg
xchg
mov
xor
cmp
shl
xor
fsub
push
sbb
cld
mov
pop
push
loope
xor
movsb
ljmp
idiv
loop
xchg
lret
add
hlt
pop
inc
ljmp
fsubs
ret
subl
sub
push
sti
icebp
or
push
cld
movsl
mov
jae
ret
xor
nop
xor
sbb
insl
movsb
mov
inc
and
outsl
scas
xor
out
sti
push
cmpsb
mov
popf
scas
cmc
push
mov
and
lock
in
push
nop
mov
pop
cmpb
cmp
in
jecxz
xchg
das
cmpsb
jno
lds
xor
jp
loope
dec
into
pop
mov
shlb
inc
lea
call
fincstp
xchg
cmp
fldenv
mov
xchg
adc
ljmp
mov
mov
mov
cmp
mov
cltd
fwait
setae
ret
pop
sub
jg
adc
test
add
jo
fidivl
sbb
out
mov
nop
and
in
jo
inc
inc
in
mov
lds
scas
fldcw
xchg
call
jne
add
lret
cmpsb
insl
dec
adc
cli
cs
jp
jns
jp
xchg
jne
xor
fisttpl
dec
pop
or
sub
arpl
cmp
push
mov
dec
sarl
or
mov
jbe
jo
sub
xchg
incb
popf
in
mov
cltd
pop
into
adc
jns
popa
and
out
mov
mov
xor
pop
popf
lock
nop
flds
out
pop
psrlq
sub
and
lret
mov
popa
xor
js
mov
mov
aas
dec
jmp
mov
out
pop
xchg
dec
in
notl
sub
orl
jnp
jo
sub
mov
push
or
inc
cmp
xchg
mov
add
or
pop
sub
add
xorl
fcmovu
mov
or
xor
inc
jle
sub
xor
push
stos
dec
sbb
xchg
bound
jge
xchg
enter
push
mov
mov
push
inc
scas
sti
xor
out
pop
push
repz
test
sarl
ds
loopne
pop
divl
jmp
lods
fists
mov
and
inc
push
repnz
hlt
inc
mov
inc
iret
inc
repz
sti
fists
jge
pop
dec
and
in
ja
and
mov
sahf
je
add
pushf
adcb
shl
or
movsl
or
cltd
pop
popa
adc
test
adc
aad
shlb
data16
push
inc
sub
mov
enter
ja
fs
mov
or
fwait
bts
out
out
sub
jmp
xchg
popf
call
test
sbb
mov
cmp
cmp
fisttps
mov
sti
cli
add
inc
cwtl
pop
xor
push
lock
sbb
int
mov
and
dec
xor
mov
fists
xor
int3
mov
mov
push
mov
shr
cmp
cmpsb
inc
xor
mov
adc
pop
mov
mov
pop
in
add
fstl
subl
popl
lea
addr16
inc
jne
in
jns
movhlps
leave
imulb
sub
mov
inc
mov
cmpb
mov
jle
xor
sbb
jbe
lods
dec
inc
xor
lea
call
add
into
xor
fwait
loope
push
cmpsl
push
movsl
jo
sub
ja
test
cmp
jnp
enter
or
lahf
in
cmp
jle
ja
loope
add
notl
lahf
cltd
cmc
mov
fstp
jg
mov
call
mov
inc
insb
and
pop
lods
imul
mov
insb
adc
mov
mov
sbb
outsl
adc
inc
mov
inc
aam
cmpsb
pusha
xchg
test
mov
lret
int
add
jo
leave
add
gs
lock
lret
fadds
sub
test
jnp
or
dec
in
loopne
lea
lods
push
or
jb
fistpl
bound
xor
jns
lds
cmp
cwtl
jl
fisubrl
sub
sbb
stos
sub
insb
int3
or
and
insb
mov
push
xor
ret
mov
pop
fadd
stos
sti
fimull
and
pushl
sub
addr16
push
adc
aad
pusha
cmp
pop
mov
popf
imul
mov
in
xlat
sbb
in
call
sbb
jno
stos
insl
cld
lret
jno
jmp
dec
dec
hlt
lea
mov
xor
incb
pop
xor
mov
aaa
xchg
mov
rorb
ja
inc
daa
bound
push
xor
lods
pop
sub
in
xor
xchg
push
and
cmp
lcall
fdivrl
ret
es
and
rorb
cld
mov
stc
push
dec
and
jae
inc
iret
xchg
jecxz
dec
jle
cli
sub
scas
mov
popl
or
xor
mov
xor
sbb
sub
cmc
sub
divb
cmpl
or
fwait
jns
mov
jl
sub
or
push
xchg
subb
mov
adc
xchg
dec
fcmove
xor
pop
in
cmc
inc
popf
jp
es
ret
or
push
jo
fdivl
jns
push
jae
dec
out
out
mov
pushf
fstpl
push
mov
add
pushl
adc
adc
xchg
pop
adc
sahf
cs
mov
dec
xor
push
jnp
imul
lods
pop
jmp
movsb
push
xchg
ret
sbb
pop
push
xchg
mov
sub
jbe
popa
add
inc
mov
xchg
or
xchg
es
cmp
aas
cmp
xchg
xor
fbld
cmc
aas
or
xchg
dec
lcall
inc
les
les
push
ret
test
push
outsl
in
lahf
mov
mov
aaa
inc
orl
adc
mov
sbb
mov
pop
repnz
mov
sub
scas
mov
jbe
lahf
orb
movsb
add
xchg
decb
andl
pusha
push
jbe
add
imul
jb
inc
repnz
loopne
sbb
pop
cmp
push
cmp
js
or
dec
pop
jno
xchg
pop
mov
dec
adc
es
fdivp
mov
iret
dec
pop
call
mov
jbe
ret
icebp
scas
daa
mov
out
sub
ss
pushf
into
cmp
push
dec
cltd
std
jns
jp
sbb
movl
mov
pop
or
jns
push
cmp
inc
pop
mov
xor
outsb
adc
out
push
inc
negl
int3
push
mov
sub
leave
in
cmp
sub
xor
imul
shrl
cmc
xor
adc
cli
fwait
ror
hlt
in
and
xchg
pusha
das
and
mov
push
mov
xchg
lea
ficomps
addr16
mov
fdivrs
popa
adc
jne
pop
or
or
push
fsub
jae
andl
aam
pop
cwtl
mov
sub
test
jp
mov
jbe
in
xor
jmp
sub
test
dec
movsl
mov
mov
mov
pop
lahf
sbb
jp
pop
lods
xchg
and
cld
rep
dec
add
push
orl
rorl
bound
mov
push
inc
dec
popf
arpl
xchg
int3
in
test
stos
mov
cs
out
push
ljmp
pop
test
xor
pop
add
mov
adc
testb
je
xlat
hlt
test
ljmp
jg
movsl
daa
cvttps2pi
sub
mov
inc
outsb
pop
and
add
loopne
stos
adc
mov
inc
lods
pop
inc
pop
insb
lcall
outsl
clc
lcall
out
rcll
sti
sbb
mov
cmpl
xlat
adc
pusha
xor
test
nop
jbe
clc
push
movsl
das
dec
bts
cmpb
out
test
aam
cwtl
push
add
cmp
jnp
ret
std
adc
cmp
mov
dec
test
out
bnd
mov
mov
out
rol
sbbl
fdivs
push
out
lds
data16
lea
mov
mov
icebp
pop
fbld
fisubs
and
int3
push
imul
and
or
cmp
out
es
ljmp
add
jae
and
sub
push
mov
aas
push
fwait
jo
xorb
mov
icebp
outsl
bndldx
sub
rcrl
fs
aam
int3
out
cld
pop
adc
cltd
xor
ud0
ror
rol
mov
sub
pop
rclb
jnp
movsb
and
mulb
ja
incl
mov
std
add
test
mov
jno
or
pop
mov
adc
test
jecxz
sub
sub
fisttpl
sti
mov
flds
ffreep
lcall
test
mov
out
mov
pop
cmpsb
dec
jmp
pop
or
clc
pop
cmpb
sahf
idivl
sub
cmpsl
loopne
push
pop
int3
cmp
adc
shl
xorb
daa
push
add
mov
adcl
push
pop
push
xchg
loopne
cmp
mov
mov
pop
subl
push
or
adc
lcall
int
adc
ds
ds
imulb
jne
int
dec
mov
ja
pusha
sbb
or
inc
shrl
das
jns
rdpmc
sub
jno
popf
dec
sub
sub
fsubrl
ret
daa
mov
xchg
fsts
int
jecxz
lds
shl
sub
cld
and
sub
jl
push
in
es
jecxz
lock
sub
out
sbb
inc
mov
or
test
loop
nop
xchg
push
xchg
jns
scas
pop
pop
mov
push
out
addl
icebp
cli
in
mov
scas
std
pop
mov
or
inc
dec
or
outsl
lcall
pop
sub
xchg
or
xor
xchg
movsl
dec
cmp
mov
pop
and
icebp
inc
add
inc
shll
loope
push
mov
aad
fcompl
mov
xor
addr16
mov
test
sbb
mov
xor
pop
das
cli
sub
dec
sbb
adc
pop
xchg
xchg
mov
xchg
push
mov
inc
mov
int3
scas
es
fdivrs
cld
fadds
sbb
mov
dec
dec
mov
push
inc
cwtl
dec
into
not
mov
mov
stc
popf
lret
aaa
sar
sub
or
insl
lahf
in
dec
mov
push
enter
dec
scas
pop
pop
push
pusha
outsl
cmp
mov
xor
mov
pop
cmp
and
mov
sub
lods
sbb
das
sub
add
mov
jp
mov
pop
daa
insl
inc
push
xor
shll
nop
push
out
push
jecxz
push
cmp
leave
mov
cmp
dec
mov
frstor
pop
cmp
push
pop
enter
jl
repnz
pop
insb
cmpsl
int3
adcl
sbb
dec
xor
dec
add
sub
ja
and
jg
adc
sbb
sub
xor
push
repz
aad
inc
scas
jno
out
mov
je
mov
cmc
leave
add
sar
xchg
lcall
cld
test
add
inc
sub
mov
dec
sarl
lock
cmp
sbb
leave
fwait
push
sbb
popf
mov
sti
shr
jg
fstl
xchg
or
dec
out
pop
cmp
jmp
pushf
dec
inc
push
push
add
repnz
sbb
lahf
sub
mov
in
push
clc
mov
cmpsl
rolb
shll
insb
adcb
bound
pop
mov
push
cltd
addl
lock
leave
adc
fimull
aaa
leave
inc
pop
jp
out
aam
jp
ds
pop
int
dec
sub
int3
pushf
pop
lret
push
inc
repz
hlt
cmpsb
stos
sbb
rclb
jp
xchg
mov
jle
adc
dec
repnz
data16
jo
je
sub
mov
sub
ljmp
jl
xchg
pop
push
mov
xchg
pop
inc
dec
jp
jne
or
sub
add
leave
cmpsl
mov
pop
aaa
scas
mov
fwait
enter
ljmp
push
fidivl
dec
xor
mov
or
dec
or
mov
mov
xor
xchg
mov
and
idivl
xor
jnp
jnp
dec
mov
jnp
pop
arpl
test
xor
gs
cmp
or
push
inc
pop
sbb
enter
es
lret
lret
pusha
lcall
jo
inc
notl
mov
push
or
std
push
pusha
jge
mov
mov
lahf
test
stc
test
outsb
jbe
orb
stos
call
adc
int
cld
test
cmp
adc
push
rolb
std
adc
and
mov
push
or
add
xor
inc
mov
mov
lret
mov
fs
and
out
pop
aas
pop
xchg
in
scas
xor
repz
mov
loope
ror
add
adc
repnz
adc
shrl
mov
decl
dec
inc
pop
loop
fcomps
xchg
lea
adc
inc
lea
std
pop
ret
movsl
int
or
pop
sbbb
dec
pop
jecxz
loop
inc
mov
mov
in
loop
mov
movsl
and
dec
adc
out
outsl
mov
loop
lea
cmp
out
pop
adc
ss
xchg
lahf
push
xorl
sti
scas
sub
repz
leave
jl
mov
cs
push
xchg
sub
jnp
xor
ja
add
pop
xchg
cli
clc
inc
mulb
ja
or
sub
shr
imul
stos
imul
mov
pop
sbb
add
sub
or
or
push
mov
xchg
mov
outsb
jmp
xchg
inc
lods
cwtl
outsb
cmc
outsb
sbb
dec
push
push
loope
lretw
pushf
dec
xlat
jge
bswap
ds
sti
popa
fwait
jg
cmp
jecxz
xor
test
fmul
outsb
xchg
inc
aam
cmp
test
and
push
leave
out
pop
cmpsb
mov
jne,pt
popf
add
mov
std
xchg
dec
je
xchg
add
pushf
aam
shll
jnp
mov
lret
mov
rorl
pop
cmp
xorb
cltd
cmp
add
xchg
outsb
nop
cltd
outsl
xor
nop
or
jge
ret
int3
xor
lds
cmpsb
call
imul
sbb
ljmp
add
mov
cmpsb
ss
jne
xchg
add
cmp
scas
jb
inc
and
pop
xchg
popf
inc
cmpps
or
xchg
inc
and
aaa
and
lahf
fstl
adc
and
mov
fwait
mov
int
sbb
aam
icebp
push
andb
jl
lret
shl
sub
outsb
jae
test
cmp
inc
adc
ja
pop
out
cmp
ja
jbe
jmp
xchg
sub
das
scas
idivl
bound
fdivrp
hlt
push
mov
pop
adc
mov
fisttpl
mov
mov
mov
add
add
rorb
fiadds
and
data16
mov
or
mov
inc
daa
inc
pop
pushf
cmp
xchg
and
outsb
ss
cmp
in
cld
xchg
sub
lock
outsl
and
sub
cli
jns
push
insl
rcll
dec
mov
push
and
scas
or
lds
dec
pushf
pusha
mov
scas
rcrb
stc
xor
sub
or
ds
push
xchg
xchg
test
rcrb
scas
lahf
fwait
mov
dec
ds
fsubs
mov
hlt
cmc
sti
lea
pushf
stos
fdivrl
aaa
ljmp
xor
out
jp
fnstenv
dec
pop
popa
adcl
fwait
mov
push
pop
xor
dec
lock
repz
stos
add
ja
and
test
sbb
and
fs
pop
or
sub
xchg
adc
enter
stos
ds
in
push
ja
shlb
mov
inc
clc
xor
mov
and
sub
add
push
xchg
xchg
int3
dec
scas
mov
push
jnp
inc
in
xchg
div
pop
dec
jno
or
insl
and
push
ja
inc
negb
in
arpl
push
fisttpl
or
jne
or
jle
das
cmpsl
scas
adc
insl
cmpsl
sbb
std
dec
out
inc
mov
leave
or
mov
loopne
sbb
loope
xchg
add
push
sbbb
push
pusha
ret
or
push
fwait
xor
pushf
sbb
xor
inc
pop
loopne
pop
bound
pop
cmp
jae
push
add
ficoml
divl
repz
push
or
pop
xchg
ret
in
test
lahf
cmpsl
insl
jecxz
cmp
lret
xor
pop
subb
pop
jecxz
xor
jns
clc
pop
push
add
push
dec
les
mov
jae
mov
js
movsl
mov
mov
out
stc
ss
lods
push
pop
out
lods
pop
jne
and
jo
jmp
xchg
sbb
aam
inc
mov
jne
add
jl
fldcw
sub
lret
add
xchg
cmp
cwtl
call
add
push
je
ret
stc
mov
lds
scas
sbb
add
sbb
out
push
data16
imul
dec
mov
mov
scas
xor
xchg
jg
addr16
lret
jne
sbb
mov
insl
cmp
stos
xor
into
mov
dec
cld
cmp
dec
mov
pop
scas
loopne
pop
test
mov
mov
cmp
test
inc
imul
in
mov
and
jmp
bound
xor
inc
test
adc
xor
fidivs
mov
and
das
sbb
lea
insl
pop
mov
jo
hlt
js
sbb
daa
xor
aam
daa
xchg
dec
jg
jle
fcmovbe
cltd
push
fsub
or
pop
sbbb
pop
fwait
mov
xor
out
les
jno
cwtl
gs
push
sub
cli
cmp
imul
cmp
cltd
incb
mov
cmp
jge
mov
inc
sub
sub
jle
stc
or
stos
jecxz
jg
add
ljmp
pop
jno
je
xchg
test
lret
sbb
insb
inc
movsb
ljmp
daa
fisubrl
pop
icebp
cmpl
popf
rorb
addb
push
adc
aas
js
dec
lret
push
add
xor
repz
push
addr16
cs
into
lret
fcom
cli
ds
push
push
or
enter
xlat
push
mov
cs
fs
fildll
aam
into
dec
add
outsb
inc
jl
mov
shrl
je
pushf
xor
mov
push
sub
and
add
push
xchg
jmp
aad
icebp
stos
sbb
xchg
and
xchg
loope
sarl
push
pusha
adc
adc
mov
jecxz
mov
pop
addl
test
cmpxchg
nop
xor
jmp
pop
test
jno
leave
jecxz
and
add
xor
insb
iret
stc
jbe
xlat
mov
push
adc
cwtl
mov
ror
ds
push
out
imul
js
scas
outsb
je
pop
cmp
pusha
mov
addr16
xchg
test
push
dec
aaa
rorb
cmpsb
jne
les
enter
add
adc
sti
sub
add
dec
hlt
mov
movsb
testb
lock
popf
xchg
shl
dec
frstor
xor
shr
cmp
xchg
ffreep
mov
cli
and
ljmp
push
fmull
xchg
ret
scas
mov
push
mov
mov
cmp
notb
add
or
inc
aas
dec
dec
sarb
jne
cli
xor
sub
insl
mov
jne
and
cwtl
bound
das
and
jns
iret
scas
xchg
scas
sub
lds
fiadds
sbb
in
jnp
mov
jns
and
dec
incb
xor
and
rcll
pop
mov
mov
inc
fisubs
into
inc
cmp
or
dec
stos
mov
jp
and
cmp
adc
aad
dec
cmp
sub
xor
inc
imull
in
dec
mov
add
les
dec
mov
xor
mov
add
jle
les
test
add
pop
cmp
xchg
std
xor
scas
pop
fcom
push
pop
mov
stc
shll
cmp
out
fdivs
shl
dec
out
jne
fdivrs
add
ds
ret
iret
sahf
inc
stos
fwait
dec
push
popa
mov
stos
and
imul
shr
add
push
or
rcr
jle
fs
decl
insl
aad
cld
mov
jecxz
ret
mov
dec
cs
pop
pop
mov
in
xchg
cs
outsl
cmp
rcr
and
and
arpl
gs
mov
jnp
push
dec
push
out
ss
push
mov
sti
ljmp
sub
dec
inc
cmp
aad
pop
sub
add
push
jmp
imul
mov
mov
fwait
pop
xchg
cmpsl
movsb
jne
mov
cli
cmp
das
shl
jp
sub
jp
inc
push
fnstcw
aam
in
stos
sub
or
add
sbb
add
xchg
xor
ret
add
arpl
adc
test
fs
arpl
dec
dec
xchg
pop
cmpsl
fimull
pushf
xchg
out
sarl
in
pop
inc
nop
rcll
or
adc
inc
loope
xchg
in
xchg
xchg
mov
cld
pop
mov
pop
sub
scas
mov
rcl
aaa
repz
arpl
mov
sub
sbb
inc
mov
loope
inc
xchg
push
cmp
fisubl
mov
cmpsb
dec
mov
mov
fimull
in
lret
imul
sbb
add
outsl
jns
add
mov
xchg
leave
mov
mov
cmp
adc
pop
pop
std
push
push
nop
mov
fwait
nop
push
xchg
pushf
push
shl
push
cmp
push
pushf
clc
cltd
lds
or
leave
test
aas
subb
iret
nop
int3
cmp
push
hlt
sbb
call
pop
jae
mov
push
inc
jb
mov
or
push
adc
mov
jg
cmpsl
sbb
je
ja
xchg
mov
loop
mov
mov
mov
pop
ds
dec
push
xchg
popa
scas
repz
mov
add
dec
sbb
repz
imul
push
scas
ss
jnp
fsubrs
insl
outsl
mov
icebp
insb
mov
xchg
test
pop
ficoml
push
psrlw
test
inc
sub
or
and
jo
aad
mov
sti
and
pop
or
pop
gs
lods
loop
xchg
or
loopne
ljmp
push
or
xlat
mov
shrl
push
sbb
fcmovu
mov
subb
mov
push
dec
push
jne
loope
pop
dec
rolb
pop
inc
and
shll
mov
repnz
or
call
fnsave
mov
cmp
mov
mov
pop
xchg
and
jmp
dec
jb
btr
jle
push
daa
call
xlat
data16
push
and
test
jl
sbb
lods
dec
mov
repz
push
cltd
adc
stc
push
pcmpeqb
loope
mov
xor
call
sbb
in
nop
jbe
ss
mov
sub
mov
or
dec
es
xor
add
sub
sbb
adc
cli
sbb
sbb
mov
add
pop
xchg
popa
xor
xchg
xor
gs
into
sbb
mov
add
push
sahf
cmpsl
ret
sub
les
rclb
cmp
addl
repnz
push
jge
inc
and
pop
cli
nop
mov
jg
call
dec
pop
insb
comiss
and
in
ja
add
sbb
inc
jmp
jo
addr16
xchg
cmp
loopne
pop
fs
mov
das
int
push
inc
push
cwtl
ds
enter
push
aas
inc
in
aad
call
cmpsb
jb
out
loope
test
jmp
push
dec
sbb
ret
pop
jmp
ret
rolb
sbb
stos
dec
stc
jo
imulb
sub
sbb
pop
in
adc
add
inc
bound
iret
add
add
rol
imul
cmpsl
arpl
frstor
fwait
out
sbb
push
dec
pop
jb
cld
jne
faddl
and
sub
js
pop
lret
mov
sub
in
or
cltd
fst
pop
aam
inc
pop
xchg
adc
js
pop
or
enter
pusha
push
imul
scas
jb
lret
iret
addb
jns
mov
push
pop
mov
test
stc
rorb
xor
mov
push
adc
jbe
fidivrs
xchg
sbbb
jge
int3
and
mov
rcrl
clc
aas
enter
mov
in
cmp
mov
mov
xchg
dec
lahf
lea
movsl
xorl
jmp
enter
js
mov
cmp
or
mov
push
fldcw
mov
stos
cwtl
sahf
jle
loopne
rclb
xorb
int3
mov
stos
fnsave
lock
popa
sbb
mov
std
mov
test
daa
scas
and
adc
enter
sbb
xchg
xchg
sbbl
clc
rcl
pusha
outsb
fldt
adcb
pushf
pop
jns
push
movsb
ljmp
sti
daa
fsubrs
dec
repnz
adc
inc
push
sbb
in
sahf
add
push
lret
mov
daa
push
and
iret
lds
das
fsubrs
pop
adc
xchg
inc
stos
je
add
aad
mov
fcoms
cmp
or
push
sbb
fldt
cmpsb
in
sub
mov
sbb
or
xor
hlt
popa
cmp
xor
dec
mov
aad
outsl
dec
addl
sub
or
addr16
out
test
leave
jecxz
adc
daa
cld
jmp
mov
xchg
repnz
loopne
ret
jo
sarl
and
outsb
repz
insl
inc
vcvttsd2si
enter
in
xlat
push
lret
add
in
pop
in
call
mov
sub
and
icebp
cmp
addr16
push
adc
pushf
mov
dec
adc
mov
cs
pop
ret
imul
mov
cmpsb
mov
jb
mov
mov
repz
add
decb
or
xor
and
cld
movsb
fidivl
addl
sub
rorb
std
rcrl
add
jno
fwait
ljmp
mov
xorb
cmp
out
je
mov
mov
xor
push
and
push
leave
pop
gs
int
adc
gs
stos
push
std
sbb
repz
aam
push
rep
div
and
dec
cmpsl
ret
and
pop
pop
push
adc
xchg
push
call
pop
add
jbe
sbb
frstor
ss
pop
xor
adc
cmp
mov
and
pushf
xchg
push
add
inc
ret
out
scas
mov
mov
mov
push
inc
outsl
inc
lods
mov
mov
sbb
subl
in
outsl
loope
or
pop
sbb
hlt
add
testb
inc
pusha
sbb
adc
adc
and
mov
rclb
jne
and
pusha
push
adc
insl
inc
push
loope
in
clc
int
jl
xchg
outsl
testl
xchg
xchg
xor
push
push
stc
shlb
shrb
lcall
fnstsw
fs
pop
mov
push
push
dec
aas
lcall
cmp
cs
mov
cmc
roll
push
pop
sbbb
sub
xchg
lahf
push
dec
leave
aas
jl
jnp
jg
dec
inc
push
xchg
cmp
jmp
pop
ss
ret
roll
and
lea
out
xchg
xchg
bound
fcoml
rcl
mov
sbb
jb
sbb
aam
xor
jae
bound
bound
das
xor
xchg
sub
outsb
jns
dec
nop
loop
iret
mov
ffreep
dec
xchg
test
cli
dec
mov
imul
das
adc
lcall
paddq
lods
aaa
pop
insl
int3
repz
cmpsl
hlt
and
sub
push
adc
scas
and
push
cli
fs
out
clc
and
push
arpl
dec
pop
add
add
neg
stc
jbe
or
cmc
sti
xacquire
lock
push
scas
or
jmp
jo
mov
popa
mov
cmp
nop
out
loopne
loopne
dec
arpl
pusha
icebp
xchg
add
mov
jl
loop
divl
push
test
outsl
loop
mov
xchg
enter
mov
fwait
dec
adcl
rcrl
mov
arpl
cmp
scas
fwait
adc
cmp
cwtl
loopne
cmc
mov
lods
fsubs
cmp
scas
mov
frstor
shrl
std
es
mov
inc
mov
sub
iret
inc
hlt
pop
test
stc
sub
imul
into
outsb
or
sbb
mov
or
in
daa
jne
push
rcll
movsb
arpl
out
int3
jne
jmp
lods
sub
and
dec
lods
adc
jns
bound
pop
mov
inc
jp
repz
jbe
inc
orl
mov
lods
cmpb
add
cmpsb
xor
into
icebp
adc
lea
arpl
lret
push
and
addr16
mov
mov
sub
sub
xchg
out
das
xor
divl
inc
sbb
xor
ja
xlat
cmp
into
clc
std
sub
daa
sbb
pusha
jmp
test
insl
fs
imul
es
out
push
or
dec
jecxz
hlt
sub
push
bound
jle
sbb
insb
mov
push
in
jno
loop
cmpl
add
jecxz
mov
add
xor
mov
inc
xor
lods
push
jl
pop
and
mov
jb
push
test
rcll
push
mov
lahf
or
inc
aam
mov
pop
xchg
rol
inc
pushf
hlt
std
cmp
test
xor
ljmp
andb
inc
loopne
stos
stc
dec
leave
jp
ljmp
and
das
inc
int3
hlt
ljmp
ret
rclb
sub
lods
cmpl
and
push
dec
bound
sti
push
movsl
adc
lds
mov
jae
xchg
and
jo
add
imulb
and
movb
and
and
pop
cli
push
jno
push
mov
adc
out
or
enter
or
aaa
jmp
add
fidivrl
scas
pushf
insl
arpl
cwtl
push
shrb
mov
mov
cmp
movsl
loope
sarl
stos
pop
call
repz
inc
fld
call
rorl
fstpt
arpl
insb
test
lods
mov
mov
jmp
jg
loope
adc
cmp
data16
xor
dec
add
inc
cld
in
mov
imul
addr16
ja
sub
jno
pop
ficompl
xor
test
outsb
add
cltd
lcall
roll
and
add
stos
enter
mov
cmp
mov
jecxz
mov
int3
xor
push
pop
aad
adc
or
repz
scas
xor
adc
push
or
test
imul
inc
inc
xchg
out
sub
rcll
pop
popf
dec
dec
push
sbb
cmpb
or
aas
dec
pusha
xor
mov
pop
outsl
or
push
or
loop
adc
outsb
sub
inc
mov
sbbl
mov
repz
jecxz
int3
insb
pop
jl
fildl
imul
xchg
xchg
in
xchg
pop
dec
dec
lods
into
fidivl
jne
mov
push
mov
sbb
movsl
andb
orl
ret
push
mov
sbb
scas
movsl
or
push
fistpl
cmpsl
xchg
sub
in
xor
scas
dec
adc
lret
push
add
adc
loopne
and
pop
test
lcall
jge
lods
pop
shlb
mov
xorl
lea
xchg
mov
icebp
mov
push
cltd
sbb
xor
mov
pop
icebp
or
inc
stc
in
mov
dec
jl
mov
or
cmpsl
lahf
inc
gs
pop
adc
mov
in
push
sub
cmp
sbb
dec
pop
mov
xorl
push
insb
out
cmc
icebp
popa
ds
xchg
mov
pop
data16
lods
sub
xor
fistpll
cmp
mov
in
fbstp
pop
popf
and
in
inc
pop
dec
addr16
sets
jp
xchg
pushf
jne
std
push
inc
push
adc
sti
ljmp
outsb
jmp
clc
popf
bound
or
repz
add
bound
mov
jp
or
xor
mov
fwait
sub
test
xor
xchg
add
inc
xor
fnstcw
or
dec
cs
clc
je
fisubrl
aas
mov
pop
fxtract
dec
push
pop
mov
iret
xlat
stos
mov
add
and
les
fdiv
out
inc
and
movsb
das
jns
push
xor
cmp
push
and
ret
pop
or
xchg
and
xor
ljmp
mov
out
xor
jno
and
andl
sbb
outsl
out
lods
fstpt
push
mov
cld
sbb
mov
pop
cmpsb
cmp
pushf
cli
enter
jne
xchg
rcrl
xchg
or
mov
push
lcall
cmp
jne
push
push
adc
loope
mov
push
xor
inc
lea
pop
mov
xor
adc
sbb
pop
sbb
mov
lods
cmpsl
adc
pop
aas
sub
or
ja
sbb
and
cmpsb
mov
mov
andb
mov
ret
cld
mov
jecxz
and
loop
and
or
cwtl
push
cli
aad
add
fimull
outsb
leave
or
dec
fimull
test
cld
rcrb
sbbl
aam
icebp
jnp
jae
ljmp
push
mov
inc
push
jecxz
incl
fs
mov
mov
and
decb
out
into
dec
push
jp
inc
rorb
scas
pusha
push
inc
pop
addr16
pop
lods
test
pop
sub
sti
xor
jns
cmp
xchg
sub
mov
pop
mov
jmp
flds
fdivrl
loopne
lahf
jae
mov
enter
cmc
or
aad
pusha
jge
test
sti
inc
mov
rcll
xor
stc
jo,pt
mov
addb
mov
iret
push
aaa
fcoms
jo
lcall
jne
cmp
mov
dec
es
popa
arpl
lea
stc
jb
test
lret
cmp
mov
and
ret
inc
push
sub
xchg
mov
ja
pop
in
aaa
dec
testb
mov
mov
mov
notb
mov
mov
insb
sbb
push
ds
cli
dec
test
int3
cmp
push
push
push
sbb
push
cmp
and
test
pop
out
clc
sub
ljmp
pop
sarb
cwtl
ret
push
push
mov
jg
push
adc
mov
mov
cmp
and
out
mov
push
js
pusha
inc
jo
or
mov
enter
pop
dec
outsb
xchg
fdivl
inc
inc
nop
into
mov
mov
adcl
shll
mov
call
and
inc
push
ret
gs
test
mov
xchg
cmc
xchg
push
loop
fstpl
push
xchg
jno
jle
sar
iret
mov
add
loopne
fistps
push
repz
lahf
lea
xchg
adc
lds
negb
int
push
mov
pop
lock
push
add
lock
outsb
pop
push
inc
push
pop
lods
sub
push
shll
mov
inc
bound
ss
xlat
clc
dec
push
repz
mov
int3
rcll
pop
push
xorb
push
cmpb
or
fdivs
test
sub
push
push
xchg
mov
add
xor
mov
adc
scas
xchg
rorl
sbb
sbb
dec
push
cmp
into
jo
dec
mov
testb
lds
mov
dec
pop
sbb
fucomp
pop
add
cmp
adc
std
push
sbbb
dec
jne
push
in
lahf
clc
jno
mov
movsb
pop
pop
sub
fstl
xchg
dec
into
pop
mov
jp
push
rcrb
sbb
loopne
jl
xchg
inc
int
mov
leave
xchg
cmp
adc
dec
clc
adc
or
push
push
mov
arpl
int3
mov
jb
dec
jmp
cmp
push
dec
cmpsl
add
lcall
leave
call
push
push
or
pop
mov
or
popa
lahf
jmp
jecxz
icebp
mov
mov
outsl
mov
xchg
outsb
pop
mov
adc
clc
testb
je
pop
call
sub
fcomp
mov
mov
ret
mov
sbb
hlt
call
push
sub
pop
dec
add
jae
xchg
sbb
adc
mov
movsl
and
cmp
jge
outsl
add
xor
xor
pop
aad
or
adc
push
or
leave
cmpsb
nop
dec
cmc
cmp
lret
xchg
outsb
fisubl
pop
sbb
and
and
dec
adc
push
out
or
fwait
jecxz
jg
jno
lods
mov
mov
push
aad
loope
xchg
out
cld
jbe
xor
rcrl
adc
xor
fwait
mov
es
jb
mov
sub
and
mov
bound
sbb
aaa
and
dec
add
subl
mov
jle
mov
andl
out
push
movsl
inc
pusha
aad
push
add
jb
or
push
ret
xchg
xchg
add
lods
mov
or
fadd
loopne
sbb
sbb
mov
lods
push
in
mov
mov
fcmovnb
shll
inc
pop
clc
in
add
data16
inc
hlt
sub
lcall
pop
sub
lea
pop
movsb
mov
popl
aam
pop
dec
xor
in
mov
jbe
icebp
insb
call
xchg
out
adc
sbb
jb
fmull
imul
mov
adc
jne
add
rolb
roll
jmp
push
xor
icebp
cwtl
repz
in
test
mov
nop
xchg
jp
and
mov
jecxz
rclb
pop
push
cltd
xlat
movsb
sub
sti
or
movsl
data16
add
adc
div
arpl
jne
das
sub
xor
adcb
mov
adc
cmp
xchg
in
arpl
je
and
mov
lock
int
hlt
rorl
xchg
jmp
inc
mov
mov
outsb
in
jge
and
inc
scas
dec
cmp
mov
xor
outsl
push
sbb
aaa
dec
xlat
push
cmp
aam
inc
aas
cmp
cmpsl
cwtl
adc
push
out
dec
fisttps
mov
xchg
loopne
fcoms
mov
ret
jae
mov
imul
sbb
jp
xor
ds
dec
xor
jge
das
jle
sub
push
fimull
insb
iret
or
es
jnp
insl
jg
jl
packssdw
cli
jmp
sub
iret
pusha
xor
ss
adc
rorl
cmc
mov
sub
xor
imul
xor
or
lcall
xchg
jl
inc
fisubs
add
push
jge
and
mov
push
rcrb
mov
pop
cwtl
add
jb
add
subl
or
push
mov
mov
xor
xor
push
std
lods
loopne
inc
add
cli
mov
popa
jg
mov
fcompl
shrl
lahf
xor
rorb
xchg
popf
cld
in
xchg
mov
or
cld
and
and
sar
push
jg
pop
pop
aam
inc
cmp
sbb
cs
cmp
push
and
xchg
dec
test
test
shll
and
dec
mov
mov
inc
mov
cmp
push
fnsave
fldcw
sbb
fisubrs
pop
mov
mov
sub
push
aas
push
divl
inc
xchg
enter
mov
ljmp
mov
push
push
stos
mov
pop
ss
das
and
sbb
aam
mov
stc
or
jmp
hlt
sbb
pop
push
roll
cmp
sbb
shr
jns
data16
lahf
popa
xor
lret
push
or
inc
out
add
adc
test
xchg
mov
fcoms
inc
scas
jo
cmp
aam
cmp
and
sti
sub
jbe
jbe
lods
cmp
mov
into
push
pop
xor
jp
jae
push
mov
push
pop
adc
out
push
in
rolb
xchg
lds
jge
int3
mov
int
jbe
dec
mov
pop
sarb
dec
jno
sub
inc
ficoms
test
add
shl
cmp
sub
or
jmp
fbld
jo
lods
sti
mov
sub
sbb
mov
push
stos
sbb
js
inc
push
or
jl
into
dec
sbb
lahf
push
add
xor
sti
xor
cltd
lret
sbbb
mov
ds
sub
push
in
jb
xor
imul
repnz
mov
xlat
jg
sarl
xchg
xchg
lea
or
es
aaa
fdiv
int3
imul
and
xor
sub
mov
or
inc
call
enter
or
dec
cld
add
jo
dec
jmp
or
add
and
stc
cltd
adc
int3
adcl
dec
cwtl
in
push
sbb
xchg
inc
sub
mov
dec
out
adc
sbb
and
addr16
fcomps
lcall
jl
xchg
insl
test
test
pop
jne
push
pop
nop
fdiv
push
sbb
pop
fiaddl
mov
inc
out
bound
push
push
mov
mov
xchg
cmc
fmull
clc
mov
pop
cwtl
repnz
test
fdivs
aad
faddl
sub
add
dec
push
icebp
test
inc
nop
outsb
out
je
dec
popf
mov
mov
test
dec
dec
jne
adc
xchg
ljmp
or
mov
lcall
stos
add
and
cli
pop
add
ljmp
loop
insb
or
inc
and
mov
and
sti
mov
xchg
xchg
pop
es
sbb
jo
push
add
push
jno
iret
mov
sbb
sub
jae
xchg
scas
jbe
pusha
cs
xchg
push
dec
mov
addl
test
dec
addr16
ficomps
mov
sbb
push
push
addr16
dec
enter
subl
addr16
das
push
sarl
sub
sar
in
std
loopne
lahf
pop
daa
ss
cmp
pop
cmp
scas
loopne
jg
xlat
ljmp
adc
cmp
enter
pop
in
xchg
imul
mov
std
mov
mov
in
add
pop
bound
ret
add
dec
lahf
xchg
rol
lods
mov
pop
movsb
ljmp
inc
stos
push
or
or
test
cld
scas
imulb
dec
jo
aaa
or
pop
mov
in
sbb
dec
jns
mov
insb
leave
dec
test
fstp
sbb
jne
lahf
sub
sbb
jae
xor
mov
jmp
mov
ja
add
fcomi
lret
sbb
cmpsb
ret
jo
std
cmp
and
and
sbb
cli
aas
jo
sub
pop
adc
packssdw
ljmp
stos
inc
xchg
shlb
notb
mov
out
adc
adc
scas
and
mov
das
mov
cli
cs
lea
inc
sbb
mov
arpl
das
in
jae
sahf
fdivl
lock
mov
int3
pop
mov
adc
ja
pop
mov
out
or
flds
inc
aaa
push
les
stc
fdiv
pop
aam
mov
lcall
push
fadds
adc
jno
and
and
mov
and
pop
pop
or
data16
push
or
pop
add
fstps
gs
mov
and
jg
jmp
sub
inc
das
jg
push
add
les
push
cmp
pusha
dec
pop
ret
daa
push
loopne
jne
out
jns
scas
xor
leave
int
sbb
fnstsw
cmp
fxch
ss
adc
icebp
arpl
loop
std
sbb
repz
or
xor
mov
aad
add
lods
int
call
xrstor
rcrl
lcall
add
js
xor
jb
cmp
rcll
jmp
pop
insb
cmp
fdivrl
dec
movsl
popa
mov
fsubrs
popa
xor
mov
or
push
jl
int
call
ds
push
sub
sbb
and
mov
mov
repnz
xchg
xorl
mov
out
mov
aam
xlat
bound
incb
aad
or
mov
push
out
cltd
sbb
mov
lret
mov
mov
sbb
nop
pusha
jg
test
fadd
mov
fsubrl
inc
int
das
aaa
jne
sbbb
fdivl
les
dec
sbb
nop
xchg
or
mov
pop
cmp
in
add
mov
insl
and
adc
pop
ret
in
sarb
aaa
mov
mov
add
add
jmp
jno
jl
pushf
loopne
sub
xchg
dec
adc
sti
jge
imul
clc
sbb
shll
das
shr
scas
push
mov
xchg
aam
add
xchg
test
insb
or
or
decl
aaa
xor
int
xchg
out
outsb
dec
dec
adc
fsin
test
fnstsw
or
jmp
sbb
jecxz
mov
mov
add
aas
outsl
bound
pop
adc
ja
mov
push
lds
mov
or
mov
hlt
jnp
xchg
push
cmpsb
outsb
lret
mov
inc
mov
sbb
pop
add
add
or
ret
mov
or
fs
negb
jne
das
pop
xchg
mov
data16
js
and
sub
pop
sbb
ja
xchg
xor
pop
cmp
push
ret
lock
sub
int
clc
mov
in
leave
clc
notb
addl
test
popa
push
cmp
and
jp
sub
enter
pop
aas
xor
inc
cltd
cmp
push
gs
mov
popf
maskmovq
push
mov
xor
out
cmp
mov
leave
out
sub
das
mov
dec
nop
iret
adc
lret
stc
dec
rclb
cmp
popf
in
nop
jle
adc
or
mov
mov
sarl
xchg
cmpb
adc
out
mov
jmp
mov
inc
iret
push
std
add
mov
nop
mov
mov
sbb
xchg
notl
bound
adc
xor
mov
dec
xchg
mov
dec
xchg
pop
xor
lods
sbb
stc
test
push
ret
shlb
mov
out
push
scas
inc
subl
xchg
jge
mov
mov
mov
scas
xchg
mov
inc
pop
sub
jl
icebp
sub
movsl
jnp
push
repnz
dec
out
inc
cmpb
xchg
fmulp
push
gs
xor
maxps
icebp
call
and
pop
mov
mov
aad
push
data16
lock
push
out
pop
mov
andl
dec
pop
xor
jmp
fistpll
jns
adc
mov
test
adc
cmp
fistl
repnz
sbb
pop
adc
xchg
out
xlat
push
mov
pop
stc
sbb
mov
or
pop
or
xchg
rorl
nop
and
xchg
js
inc
inc
lds
sarl
sbb
add
mov
push
cmpsb
sbb
cmp
sti
sbb
dec
repz
loope
fildl
stos
dec
lods
into
lahf
arpl
sub
dec
cmp
mov
or
insb
jge
inc
in
adc
and
inc
iret
pop
call
cwtl
fadd
xchg
paddw
push
mov
and
jg
adc
out
lcall
jge
mov
ret
xor
imul
frstor
test
and
dec
jno
mov
nop
das
addr16
inc
xor
adc
in
out
jecxz
in
sub
push
ss
jnp
inc
push
psubd
or
jae
icebp
out
add
push
xchg
iret
mov
outsl
dec
lss
rolb
movsl
mov
in
into
out
or
mov
fidivrs
in
mov
mov
sub
xor
or
mov
mov
and
push
cli
pusha
adc
inc
cmp
pop
les
idiv
adc
xor
push
les
mov
aaa
lods
and
rcrb
pop
imul
lods
lods
and
mov
mov
fs
or
movsb
sti
mov
xor
shll
imul
pop
push
or
inc
jl
movsl
outsl
jge
pusha
xchg
fdivrs
aas
inc
xchg
ja
data16
push
call
xor
cmp
mov
dec
lods
xlat
lret
ds
dec
mov
jp
push
and
push
inc
sub
fistps
gs
clc
inc
cmp
fadds
imul
jle
stos
sbb
mov
add
sub
jne
add
sbb
pop
jp
push
or
xor
mov
stos
or
ret
mov
xchg
mov
or
fld
lock
das
jmp
dec
xchg
ret
cmp
jae
push
pop
mov
mov
subl
inc
mov
sbb
sbb
adc
jbe
inc
inc
fidivl
pop
neg
xor
imul
int
inc
cmp
ret
inc
push
push
call
push
lds
mov
stos
stos
jl
test
jo
enter
xor
lret
fwait
add
jmp
int3
sbb
push
cmpsb
mov
mov
int
sbb
movsl
cmp
or
std
jb
xchg
push
xchg
scas
bound
sbb
push
dec
cmp
jp
adc
inc
sti
nop
div
add
pop
into
cmp
xchg
clc
push
ds
outsl
adc
push
dec
nop
mov
int3
mov
mov
mov
xchg
mov
popa
daa
stc
cmp
iret
inc
sbb
imul
aam
pop
jg
push
dec
shll
popf
dec
into
add
les
cmp
sbb
lret
je
push
cs
in
sti
xchg
outsl
sub
shrb
loop
inc
mov
push
pusha
scas
mov
xor
jl
pop
dec
adc
sub
sbb
aam
inc
and
ficoms
mov
pop
jp
sub
dec
test
jecxz
outsb
das
inc
fcompl
stc
jle
insb
outsl
jnp
std
ljmp
xchg
fwait
mov
push
push
rep
xchg
std
xchg
add
pushf
mov
sub
movsl
in
sub
aaa
outsb
push
push
mov
repz
push
lods
xor
je
add
mov
shr
or
pop
pop
outsl
xchg
mov
daa
loop
inc
xor
push
popf
daa
dec
movsb
add
ret
ret
add
add
jp
push
sbb
loopne
xchg
lahf
or
cld
adc
int3
sub
adc
cmp
in
sbb
mov
sub
jno
movsb
pop
sub
pop
lock
pop
incl
cmpsl
repz
jg
inc
sbb
pop
sbb
out
xchg
dec
es
jmp
mov
add
mov
cmp
jae
push
loopne
sbb
int3
dec
sbb
cmp
xor
mov
xor
push
fiaddl
xchg
mov
movsl
xor
pop
sbb
pop
inc
or
push
jnp
enter
mov
shlb
sub
mov
lret
mov
mov
jle
adc
negb
test
popf
sbb
cmp
push
mov
dec
cmp
insb
push
mov
shrl
pusha
xor
pop
lret
sub
je
sahf
pop
pop
sbb
mov
pop
fimull
push
inc
roll
xor
mov
jl
arpl
cmp
xchg
jb
call
xchg
pop
mov
decb
call
cmc
add
iret
cmc
mov
push
lock
stos
jae
mov
in
xchg
popf
ss
pop
cmp
xchg
lods
js
jg
sub
mov
jecxz
jo
mov
imul
xor
and
jae
xor
aas
hlt
lcall
and
adc
pop
fstp
mov
insb
pop
jmp
movsb
out
testb
jp
push
cmp
and
scas
mov
and
jl
jbe
push
sub
imul
lahf
in
sbb
mov
imul
add
mov
lret
jg
insl
dec
inc
leave
push
xor
imul
rep
sbb
add
jae
imul
in
aaa
xor
dec
fists
dec
and
dec
ret
andb
sarb
xlat
mov
jnp
push
in
and
push
nop
test
cli
jmp
push
jmp
push
lods
xor
cmp
push
and
or
pop
xchg
xchg
cs
lods
xor
sub
jg
mov
shrb
inc
ss
add
iret
xchg
dec
mov
and
or
lods
xor
stos
scas
mov
jns
jle
stc
inc
fdivp
ljmp
test
aas
or
rorl
inc
or
xchg
mov
js
jae
xor
cld
jnp
aaa
sahf
push
mov
bound
int
fdivs
sub
push
pop
and
xchg
xor
ret
leave
movsb
bound
jae
mov
mov
pop
push
and
push
enter
cmc
arpl
into
cwtl
xor
gs
fnsave
mov
mov
mov
push
movsb
lret
call
pop
mov
inc
mov
pop
cmp
mov
mov
testl
or
dec
test
ret
add
repnz
mov
pop
sub
push
mov
sub
inc
stc
inc
aas
fdivs
mov
pop
dec
inc
imul
xorb
xchg
push
pop
dec
sub
xor
minps
call
xorb
xchg
mov
in
loop
lea
mov
gs
cmp
insl
xor
icebp
test
add
cmp
lret
push
xchg
fisubl
push
in
mov
mov
and
dec
pop
push
mov
rcl
mov
jge
pop
adc
dec
pop
and
jbe
xor
filds
cmp
inc
es
xlat
add
and
lds
pop
les
lcall
push
imul
push
cmp
jg
push
ret
loopne
or
mov
ss
cltd
jnp
push
lret
imul
adc
std
lret
bnd
fbld
xor
scas
idivb
jg
call
aad
leave
push
dec
inc
pop
push
mov
and
pop
je
shll
mov
into
jp
jne
mov
mov
imul
sbb
cmp
pushf
clc
push
pusha
lods
lcall
jmp
jl
and
jns
in
sbb
jae
pop
ja
arpl
cs
adc
and
mov
jp
fbstp
daa
mov
xor
mov
popfw
jbe
mov
push
cld
int
mov
cld
push
ret
idiv
rorb
push
adc
pop
and
dec
or
in
push
repnz
cmp
cld
dec
int3
mov
sbb
ljmp
shrl
xorb
sbb
sub
enter
out
mov
enter
cmp
push
jb
push
into
pop
insb
lods
add
jbe
stos
ficoms
bound
inc
fisubs
mov
pop
sub
fs
inc
and
add
fidivrl
into
jle
cli
shlb
aad
bound
sub
stc
into
cmp
mov
pop
scas
pop
lock
imul
enter
adc
jb
cmp
pop
jns
jnp
stos
push
pop
pop
push
jmp
test
inc
mov
bound
lods
mov
lods
push
addr16
cld
imulb
sahf
pop
xor
pop
movsl
rorb
add
js
pop
pop
je
xchg
lret
into
test
cmp
xor
push
nop
xchg
popa
adc
iret
insl
lea
ss
push
imul
push
in
test
xor
jns
int
sbb
pop
and
shlb
mov
add
fisttpll
mov
fidivrs
mov
fimull
mov
mov
push
outsl
mov
jne
enter
xor
into
in
lahf
pusha
mov
cmp
dec
call
push
icebp
loop
mov
insl
jno
int3
call
loope
jmp
sub
out
fmul
iret
fs
add
hlt
testb
gs
gs
dec
addr16
mov
addr16
pop
lock
mov
mov
or
popf
push
pushf
mov
in
xchg
or
mov
je
int
fildll
insb
ret
movsl
dec
add
mov
mov
xchg
nop
xor
jmp
out
mov
pop
fwait
popa
and
fwait
imull
jp
mov
pusha
jecxz
inc
mov
in
pop
sub
shrl
cmp
xchg
sub
mov
or
test
adc
dec
or
mov
add
cmp
sbb
inc
pop
cmp
data16
rol
call
fnstcw
inc
mov
inc
add
sbb
enter
in
fs
mov
and
mov
mov
decl
mov
cmc
dec
sub
adc
cmp
js
arpl
dec
sbb
stc
test
shl
mov
sub
int
leave
pop
in
sahf
pushf
test
inc
add
mov
push
rorl
hlt
mov
sub
int3
mov
jnp
daa
shll
rcll
lods
into
dec
push
mov
xor
pop
or
fisttps
jns
repz
or
xchg
pushf
xchg
jbe
out
push
sub
test
jmp
imul
inc
mov
fistl
sub
mov
pop
loop
sbb
xor
pop
mul
in
add
shll
xor
es
aas
je
lret
mov
jle
jno
mov
loope
mov
bnd
mov
adc
mov
mov
out
or
inc
jp
and
inc
sub
clc
xor
mov
ds
shl
fildl
and
loop
adc
mov
adc
jmp
es
jecxz
mov
lahf
or
xor
nop
dec
push
data16
ficomps
rcll
mov
mov
mov
push
pop
cmp
cmp
leave
mov
stos
sub
xchg
and
lea
fstp
call
test
mov
or
pop
andl
push
lfs
out
hlt
xor
fiaddl
adcb
je
mov
sbb
hlt
or
test
add
xor
adc
add
shll
push
clc
into
mov
fwait
mov
xor
popf
or
jae
mov
pop
adcl
lret
mov
imul
shlb
jne
popa
ljmp
jecxz
fs
icebp
mov
xchg
cmp
popa
push
cld
xor
add
inc
dec
imul
push
out
dec
es
fisubrl
lock
movsl
or
add
iret
aas
fucom
call
dec
inc
fcmove
push
sar
fcompl
cmp
aam
cmp
mov
sub
les
les
cmp
scas
xchg
loope
out
inc
xor
jl
adc
jne
lods
mov
cwtl
gs
sub
inc
mov
mov
and
popf
pop
inc
xchg
cmc
in
mov
or
xor
sbb
push
cmp
lret
xchg
jbe
sbb
in
sbb
mov
jmp
pop
sub
std
jp
in
scas
fwait
pop
jmp
imul
ficomps
add
rcr
mov
gs
mov
push
out
mov
stos
pushf
jle
or
cltd
and
fistps
lret
lret
leave
fmull
lcall
adc
xchg
movl
lods
mov
and
lods
je
test
or
xchg
lahf
hlt
jmp
and
sarb
inc
or
repnz
cltd
mov
lcall
pop
aam
lds
pop
loope
push
xchg
jge
xor
jmp
aam
fbld
mov
mov
data16
outsl
ja
mov
ret
aad
sbb
loopne
gs
sub
rcl
mov
or
lea
push
pop
lret
stc
fcomps
jle
sub
pop
sub
stos
add
xchg
fistpl
arpl
jmp
xor
mov
ss
and
lahf
lret
test
push
cmpl
mov
insl
add
cmp
jae
inc
push
cvtps2pi
cmp
mov
adcw
mov
daa
mov
jg
inc
sbb
cli
ds
push
stos
in
jge
jno
clc
sti
clc
out
aad
bound
out
jnp
mov
sub
inc
and
or
sub
mov
add
xchg
mov
std
mov
push
xchg
push
push
popa
rclb
mov
int3
test
mov
nop
adc
xchg
or
imull
jg
idivl
inc
xchg
jbe
xor
sahf
imul
roll
jle
xchg
xchg
test
mov
jbe
and
add
fwait
repnz
in
lds
xlat
jp
stos
pusha
shll
push
mov
rcrl
mov
xchg
fisubrl
dec
add
sbb
jb
mov
mulb
fs
pop
jnp
pop
ds
movsb
pusha
mov
lahf
cmpsl
xor
insl
fcomps
pop
ret
or
pop
dec
sbb
nop
xchg
mov
rcrl
out
stos
mov
push
sbb
sub
adc
mov
outsl
std
bound
orl
xor
or
adc
in
dec
sbb
iret
icebp
out
roll
loopne
pop
sbb
test
in
mov
in
imul
sub
orl
and
mov
rolb
mov
faddl
loopne
cmpsb
jbe
mov
je
push
cmp
sub
mov
cmp
push
or
out
andl
or
sbb
jp
jo
in
filds
ljmp
xor
sub
repz
push
xchg
jne
add
popa
adc
loop
xor
sbb
sbb
scas
dec
das
inc
sub
sahf
pop
movsb
sarb
mov
mov
and
jo
mov
add
or
aaa
test
pop
mov
bnd
jl
inc
xchg
dec
cwtl
mov
in
ret
enter
mov
sub
mov
lret
xor
movsb
mov
das
mov
bound
ret
xor
negl
lahf
jo
jp
lds
push
dec
inc
js
icebp
loop
push
jns
fstps
fs
addb
mov
mov
pop
out
test
xchg
xlat
or
xchg
test
call
mov
jbe
ja
int
sbb
test
fimull
dec
fucomp
push
sub
cld
pop
push
cli
adc
jmp
xor
fcmovnu
xchg
mov
dec
dec
sub
xor
mov
pop
pop
pop
xchg
push
mov
lret
lret
or
shrl
clc
shl
add
or
loopne
sbb
xlat
rcrl
pushf
mov
or
sbb
es
inc
fbstp
aam
inc
cmp
jns
push
icebp
repnz
mov
pop
outsl
mov
dec
sub
pop
fwait
add
movsb
in
test
mov
lret
adc
xchg
insl
sub
iret
mov
xchg
lcall
das
add
inc
test
insl
ja
push
movl
jge
adc
adc
repz
pop
lret
es
out
mov
sahf
and
cld
leave
sub
mov
sbb
ja
add
add
enter
xchg
rcrb
outsl
sub
aaa
testb
cld
inc
mov
mov
sub
leave
mov
out
mov
inc
aaa
sbb
jl
and
ficoml
push
clc
inc
aad
pop
int3
pop
xchg
je
repnz
jnp
stos
ret
xor
sub
out
mov
and
cmc
inc
das
push
mov
sub
mov
adc
push
mov
leave
sub
ja
sbb
js
fiaddl
lret
jnp
popa
nop
and
mov
push
pop
push
iret
and
add
out
mov
xlat
jb
or
popf
jnp
les
movl
int3
mov
out
movsl
pushf
lret
repnz
imul
test
pop
xchg
add
fcmovnbe
shlb
sbb
fldt
sbb
nop
sub
push
mov
inc
xor
xor
or
pushf
jle
sbb
out
add
mov
je
dec
rcrl
cld
popa
push
dec
pop
jle
aad
fwait
repnz
xchg
cmp
adc
cmp
and
out
jp
add
inc
pushf
sbb
inc
ficompl
cmpsl
in
mov
mov
push
jle
adc
xchg
popa
loopne
add
notl
pop
inc
push
pop
sbb
push
outsb
adc
cmc
cmp
cmc
pop
mov
jmp
push
subl
mov
mov
mov
sbb
and
lds
jb
adc
xchg
xchg
mov
cmp
adc
pop
or
mov
cmp
cli
arpl
push
shll
sarl
xchg
popa
xchg
les
fimuls
cld
nop
mov
repnz
sub
int
mov
in
outsb
pop
sub
mov
lret
xchg
adc
inc
jnp
push
cmpl
into
loopne
sbb
xor
cmpsb
xor
daa
and
sbb
or
xor
hlt
and
jmp
inc
shlb
pop
dec
pushf
rolb
cmp
xor
shl
xor
stc
scas
enter
push
cmp
adc
pop
xor
or
mov
cs
sbb
push
xchg
add
push
pop
fidivl
inc
push
mov
pop
xlat
mull
cmp
ret
lret
fbstp
and
jmp
shlb
mov
imul
push
cmp
cmpsb
add
and
in
sahf
int3
idivl
xor
mov
sbb
pop
int
mov
call
lahf
inc
filds
lret
sub
sub
pop
mov
dec
and
lret
fs
sarl
mov
repz
mov
lcall
push
aam
xor
jl
mov
mov
clc
mov
mov
push
stos
xchg
mov
and
mov
mov
jge
std
fnsave
mov
jl
sarb
out
neg
call
push
push
or
popa
push
or
cmp
xchg
jbe
aad
add
mov
lahf
adc
sbb
call
mov
jg
dec
and
xor
adc
pop
lret
push
scas
test
cmp
pop
pop
cmp
push
fnsave
sbb
lcall
jmp
adc
cmp
cli
hlt
mov
fcoml
test
mov
aas
inc
cmc
nop
adc
mov
int
into
pop
pop
sbb
ss
test
and
ficomps
cld
add
push
or
jbe
cmpsb
cmp
pop
andb
bound
repz
clc
push
out
lea
popa
pop
mov
out
out
sub
outsb
cmp
push
pop
xor
test
sub
mov
sub
mov
xchg
jmp
cwtl
xchg
and
push
in
inc
push
es
sbb
mov
mov
aaa
das
add
xor
les
jmp
sub
sub
push
add
stos
sbb
add
cmp
ds
and
sub
pop
mov
inc
cwtl
cmpsb
addr16
jne
vmovupd
emms
push
mov
inc
std
sub
push
adc
divb
decb
ds
mov
sbb
and
xor
cltd
jmp
jmp
ja
xor
jno
test
test
sub
test
dec
xor
cmp
cmp
sbb
jg
cmp
clc
or
rolb
push
jns
cmp
mov
clc
or
stos
stos
das
xchg
mov
pop
mov
movsl
inc
sbbb
pop
and
jl
xchg
cli
enter
fcomi
stos
add
out
iret
mov
testl
mov
idivb
int
adc
nop
jl
dec
sbb
pop
add
jo
cmp
sbb
int3
jo
pop
dec
mov
sti
xlat
loope
dec
movsb
stos
scas
test
stos
addr16
adc
dec
das
jecxz
cwtl
lahf
rcrl
imul
int
lods
les
hlt
push
pop
bound
jno
push
dec
addr16
xchg
loope
fldl
into
pop
fbld
mov
mov
movsl
stc
xchg
pop
mov
dec
push
add
jl
xchg
fdivrl
pop
stos
push
jle
inc
nop
icebp
push
dec
ret
lods
cmpsl
adc
xor
push
stc
fwait
sbb
jns
outsl
lods
stos
pushl
out
pop
arpl
mov
dec
mov
dec
mov
mov
jg
push
test
sbb
or
lods
adc
dec
xorl
mov
pusha
nop
mov
inc
xlat
pop
xchg
jle
dec
out
pop
mov
adc
insb
inc
andnps
cltd
dec
dec
jp
adcl
nop
jl
xchg
add
aam
imul
xor
in
shl
and
decb
icebp
xchg
inc
add
roll
or
cmp
mov
cmpsl
add
test
inc
mov
cltd
and
incl
inc
mov
fwait
daa
pushf
dec
xchg
movsl
add
pop
mov
fisttps
stos
cwtl
xchg
in
mov
jne
ljmp
add
pop
and
lock
dec
les
int
pusha
jmp
iret
stc
test
sbb
push
jne
inc
inc
aam
mov
in
js
cmpl
sbb
mov
into
cmc
dec
mov
pop
or
pushw
mov
mov
mov
inc
xlat
push
jne
insb
out
loope
or
std
daa
or
pop
add
and
dec
adc
cmp
xrelease
cmp
mov
pop
jbe
loopne
mov
mov
push
jmp
aam
in
cs
adc
pop
loope
leave
adc
push
mov
test
adc
into
jae
pop
ret
into
xor
cld
mov
xor
mov
fstpl
cmp
add
sub
dec
mov
pop
mov
addb
loope
cmpsb
mov
jl
mov
and
jb
sub
lds
adcb
or
jg
push
das
pop
lock
cwtl
inc
push
or
and
inc
hlt
fidivs
scas
cmpsl
das
mov
popf
jp
cmp
scas
icebp
xchg
ja
fsubrl
sbb
movsb
sbb
push
pop
flds
pop
mov
ds
sbb
pushf
sub
pop
out
add
xchg
jbe
mov
sbb
in
sti
cld
out
xchg
mov
mov
call
icebp
push
lds
cld
adc
mov
cli
shll
or
test
push
mov
es
sub
add
xor
add
cmp
mov
je
iret
aas
scas
fidivrl
or
out
jb
xor
push
sub
icebp
push
cltd
jnp
push
mov
in
outsl
repz
ja
aas
and
xchg
xchg
mov
sbb
xchg
xor
xor
pop
call
shll
lcall
xchg
jecxz
enter
insb
mov
pop
repnz
inc
xchg
and
pop
xchg
inc
xchg
sbb
lahf
out
mov
sti
jl
xor
bound
pop
xor
repz
adc
outsl
into
jle
mov
cmp
mov
mov
cld
nopl
fstps
shrb
popa
xchg
mov
pop
imul
sub
and
push
mov
inc
ljmp
outsb
in
stos
fadds
push
pop
and
das
or
rol
pop
adc
add
xor
pop
mov
sub
xchg
aaa
jmp
ljmp
jmp
outsb
or
cltd
or
stos
sarb
cmp
jp
xchg
jmp
pusha
mov
fstpl
and
inc
lods
sahf
popa
inc
mov
add
cmp
mov
mov
push
fdivl
mov
ja
lret
dec
adc
mov
ss
dec
lcall
loopne
cli
add
sub
fs
into
adc
cld
cmp
mov
js
pop
xchg
sub
test
push
aas
lods
lahf
xchg
or
pop
jmp
es
lret
and
mov
aad
mov
pop
mov
or
loope
test
test
jecxz
sub
sbb
sbb
pop
xor
rol
into
jg
sti
insb
stos
inc
sbb
lahf
inc
xchg
cmp
aas
lret
xchg
mov
cld
jo
jp
or
iret
pop
and
sbb
pop
out
xchg
and
sbb
out
sub
outsl
adc
das
loopne
dec
sbb
add
sub
xchg
inc
fnsaves
scas
lahf
mov
test
push
xorl
adc
sahf
movsb
xor
leave
mov
ljmp
bound
ficoml
push
nop
mull
in
cwtl
mov
mov
cmp
pop
jmp
popa
cmpsl
icebp
pop
mov
push
pop
nop
rcrl
imul
jb
lock
inc
pop
cmp
lahf
stc
cmc
fisttpll
pusha
inc
jl
dec
adc
fistpl
in
and
adc
mov
les
cs
add
arpl
xchg
cmpsl
popf
cmp
inc
movsl
and
cld
jp
pop
subb
jo
adc
add
in
pop
sbb
cwtl
add
sti
dec
cs
or
cwtl
repnz
roll
fwait
cli
jge
cmc
or
adc
push
mov
cmp
jb
inc
pop
and
cmc
cmpsl
ds
lds
xchg
sahf
mov
arpl
xor
sti
in
mov
xchg
ror
loopne
xor
sarb
dec
insb
mov
xorb
lret
fdivrl
pop
jns
into
push
rcll
ds
cmp
call
add
push
test
xlat
outsb
fisttps
movb
or
sub
sub
lods
xchg
jmp
insl
push
in
xchg
icebp
dec
decl
cltd
push
dec
push
rcrl
mov
add
jb
xor
bound
jmp
lock
push
jno
sbb
loop
mov
pusha
outsl
inc
jmp
cmp
jecxz
xchg
xchg
pusha
mov
ja
and
inc
jae
sbb
inc
mov
fs
jo
out
add
hlt
mov
out
rep
mov
cmpsl
mov
icebp
out
xchg
sub
stc
xchg
outsb
jecxz
cmpl
push
push
cli
shlb
sub
xchg
imul
jo
xchg
out
pop
adc
add
insl
fldz
in
xor
sub
dec
popf
bound
cld
mov
insb
fs
arpl
inc
js
mov
imul
mov
lea
hlt
jno
mov
push
inc
imul
sbb
int
decb
sbb
pop
shlb
or
in
aam
out
dec
push
pop
jnp
aad
shlb
sub
inc
xor
ja
mov
dec
mov
std
sbb
test
adc
add
shlb
xchg
orl
cmpsb
rclb
push
aad
inc
cmpsl
clc
dec
repnz
mov
cwtl
mov
pop
fs
pushf
and
pop
sti
cltd
xlat
test
pop
and
dec
sub
push
testl
outsb
decl
dec
dec
es
lods
ss
pusha
xor
and
pop
and
add
sub
mov
xchg
dec
push
push
rorb
scas
push
daa
bound
imul
loope
dec
test
push
xchg
out
scas
adc
or
faddl
inc
ret
inc
stos
mov
push
and
adc
dec
mov
insl
dec
mov
xor
or
aam
test
mov
push
xchg
mov
leave
fs
loop
clc
jmp
daa
add
rorl
or
pop
jle
rcrb
mov
std
adc
out
mov
jnp
inc
stos
es
rcll
loope
add
popf
mov
insb
decb
mov
mov
pop
dec
in
idivl
cmc
imul
fnstsw
clc
jl
das
mov
test
lods
ret
popf
stos
adc
xchg
xor
pop
pop
gs
inc
push
loopne
sub
mov
enter
rcr
lret
jl
dec
aas
sub
sbb
int3
in
pop
rolb
cmp
fcomi
pop
inc
popf
loop
mov
rcr
xor
iret
in
cmp
insl
sbb
jl
pop
xorb
adc
enter
rcr
mov
xor
cmp
call
mov
jge
divl
mov
adc
notb
add
fldcw
outsl
xor
adc
xchg
mov
jp
cwtl
stc
outsb
dec
mov
pop
in
fiadds
ficoml
in
dec
loop
mov
push
pop
sahf
and
sub
adc
pop
iret
cli
jecxz
cmp
push
pop
cmp
sub
pop
jae
leave
and
jne
test
cmp
iret
mov
shll
and
jle
call
ja
pop
jb
jbe
pop
ja
jae
mov
mov
cwtl
loop
lods
cmpsl
je
mov
xchg
xor
cltd
adcl
and
adc
hlt
rcll
pop
nop
icebp
repnz
xchg
mov
cmpsl
mov
in
inc
adc
or
jl
out
inc
in
and
imulb
mov
inc
jp
mov
sub
orl
cmp
lahf
in
inc
data16
movsl
cmp
aam
dec
icebp
inc
mov
adc
cwtl
mov
loopw
mov
in
sbb
test
test
sub
in
cmp
fadds
push
xor
mov
arpl
nop
sub
jge
mov
andl
xlat
js
stos
popa
ret
subl
addl
and
jg
js
xchg
test
int3
into
jle
lea
stos
btr
into
mov
inc
fcoml
push
popf
add
and
jns
and
dec
inc
ret
xchg
push
xchg
xchg
je
aas
testl
movsb
cld
inc
xor
push
jae
bound
sahf
push
inc
ds
mov
cld
pop
mov
movsl
clc
lcall
daa
scas
jmp
jo
roll
pop
mov
das
sub
fwait
cmp
arpl
sbb
roll
adc
push
xchg
adc
scas
mov
sbb
pushfw
pop
mov
lret
das
insb
test
scas
sub
cmpsl
adc
jge
sub
and
mov
mov
mov
shrb
or
addb
xchg
into
xlat
fimull
outsl
outsl
popa
jnp
bound
pop
movsl
adc
ds
ret
shr
gs
addl
out
or
popa
mov
xchg
rcr
lods
pop
mov
fsubs
orb
ds
out
movq
neg
cld
mov
jp
iret
fs
int
aaa
dec
clc
stos
adc
xor
in
dec
xchg
pop
or
dec
mov
js
popa
and
push
sbb
or
je
ret
xor
mov
in
fidivrs
fs
out
add
icebp
xorl
std
out
cmp
mov
imul
xor
inc
add
adc
xor
xchg
dec
jge
dec
push
xchg
rorl
packuswb
stos
add
fdivl
push
pop
repnz
add
nop
sahf
adc
mov
movsl
loopne
popf
lret
push
outsb
ljmp
out
sbb
pop
mov
lock
cmp
cmp
in
shrl
cmp
xchg
lds
loope,pt
sub
popf
rcrl
ds
scas
es
fwait
or
je
dec
jae
movsb
mov
sbb
dec
out
and
add
cltd
xor
mov
jbe
adc
push
cmpsl
sti
sbb
sub
pop
and
push
mov
push
xchg
push
jno
lcall
das
cltd
jecxz
cmp
xchg
in
into
sti
in
popa
xor
mov
sub
push
fs
sub
jmp
mov
xchg
xor
mov
xchg
or
es
negl
mov
ret
aam
in
mov
repz
fstpl
sar
push
jle
xchg
and
push
mov
mov
ficoml
lds
mov
jl
mov
jg
push
lahf
xchg
add
xlat
fnstsw
cmpsl
test
add
mov
movsb
aaa
in
push
adc
jo
shr
outsb
inc
sub
sahf
sub
push
add
int3
mov
pop
add
imul
aad
lcall
sbb
cmpsl
outsl
rolb
scas
insb
insb
adc
mov
aas
mov
inc
xor
fstps
push
rcll
xlat
lcall
in
scas
clc
jle
fistpl
add
xchg
push
cmpsl
out
or
mov
imul
pusha
inc
push
fisttpl
dec
in
cmp
sub
int
ficompl
mov
xchg
stos
sub
add
inc
pop
movsb
sub
jbe
xchg
insb
xor
mov
imul
pop
adcl
xor
mov
mov
scas
jmp
pop
lock
adc
mov
xchg
pop
mov
sub
shrl
cltd
lcall
mov
out
loopne
repnz
sarb
into
xor
mov
push
dec
js
xchg
push
add
sbb
push
mov
mov
orl
xchg
outsb
out
lds
lahf
icebp
hlt
and
sbb
cmp
lods
pop
movsl
mov
out
jecxz
xor
insb
int3
jl
inc
testb
ds
dec
shr
in
pop
scas
jmp
lock
sbb
jle
mov
les
mov
xchg
sub
bound
cs
mov
add
scas
mov
sub
mov
mov
xchg
xchg
std
roll
xor
test
ljmp
sbb
jmp
push
mov
jae
pop
or
out
in
in
jbe
lret
add
push
scas
mov
scas
sbb
push
scas
lret
mov
mov
fisttpll
andl
es
in
cmpb
lock
push
sbb
dec
inc
mov
and
cmp
pop
mov
ret
out
test
dec
repnz
mov
rolb
bound
lret
adc
pop
inc
call
dec
jo
loope
cs
loopne
add
imul
sbb
xchg
cmp
sub
into
in
mov
loope
sti
out
or
mov
push
lock
xlat
and
cwtl
dec
xchg
pop
lods
cmc
pop
test
pop
int3
icebp
dec
sbb
pop
or
movsb
sbb
sub
sbb
xlat
or
pop
xor
pop
pop
cmpsl
fldcw
rol
cmp
add
xor
adc
jge
inc
sbb
repnz
out
sahf
cmc
rcr
jne
sub
cmc
ret
cmp
mov
test
push
ja
cmpsl
shll
psrlw
mov
mov
xor
push
lods
testl
popf
bound
sti
stos
pop
sbb
insl
outsl
ja
cmp
jnp
dec
sti
jns
sub
rol
fs
add
gs
testl
orb
or
adc
sbb
push
adc
push
negl
notl
jp
jle
mov
pop
mov
adc
into
scas
and
stc
xchg
adc
out
arpl
lea
mov
test
cmp
lods
sti
in
mov
push
lods
sub
push
ret
jecxz
and
cmp
pop
pop
sub
mov
loopne
pop
xchg
xchg
cmpl
and
lods
push
add
gs
jecxz
stos
add
out
xchg
cmp
cmp
jno
scas
dec
test
dec
clc
mov
iret
jl
stos
enter
push
or
add
mov
dec
lods
cs
lret
cltd
xchg
cmc
adc
jns
aad
xchg
jl
out
mov
loope
lods
adc
test
sbb
and
lea
jmp
clc
les
xor
sbb
xor
dec
add
fsub
mov
push
gs
movl
push
xlat
mov
pop
push
sbb
dec
cmp
xchg
data16
dec
test
cwtl
cmp
testb
rorb
pop
xor
dec
in
mov
mov
mov
out
sub
mov
mov
lcall
popa
scas
pop
sbb
jo
paddd
mov
add
pop
push
cmp
pop
dec
nop
or
cltd
insl
iret
mov
sbb
mov
jbe
and
adc
ret
in
addr16
inc
jecxz
rcll
call
jae
pop
bound
das
fs
jbe
pop
mov
fcmovbe
shlb
ret
jae
in
ficomps
rcrb
or
outsb
lea
add
jmp
sbb
sbb
adc
int3
roll
lock
and
jecxz
cmp
data16
ss
pushf
mov
pop
popf
bnd
orb
cmp
sbb
or
mov
lret
xchg
shll
cmpsb
movsl
addr16
xchg
popf
add
daa
cld
data16
mov
pop
xor
pop
rorb
cltd
loope
roll
mov
xchg
jge
lods
outsl
sbb
sbb
imul
mov
outsb
sub
adc
mov
xor
xor
int
les
jns
aad
rcr
pop
jnp
call
inc
dec
mov
rcll
iret
aam
push
inc
mov
clc
insb
adc
out
inc
jns
push
sub
aam
push
adc
lea
aaa
jle
dec
mov
in
and
pop
repz
out
out
push
adc
add
into
gs
xlat
addr16
cwtl
in
sbb
hlt
add
mov
scas
loopne
mov
fdivrl
hlt
push
cmpsl
xor
ror
pop
fucomip
dec
xor
pop
repnz
fwait
cli
xchg
or
stc
or
or
cli
fnstsw
and
jnp
inc
mov
mov
xchg
out
cmpsb
push
and
sbb
daa
jbe
jo
repnz
je
mov
or
jbe
xor
lods
pop
sbbl
icebp
ja
aaa
pop
jne
fsubs
and
cmp
stos
add
fisttpl
mov
push
push
dec
mov
xchg
inc
xchg
or
sub
jbe
out
mov
xchg
push
fisttpll
pop
cmc
mov
test
pop
scas
stos
imul
shlb
push
mov
add
call
stos
or
jns
jecxz
xchg
aam
lcall
sub
cmpsl
orl
outsb
xchg
cwtl
mov
call
mov
cmp
test
add
lea
jecxz
cmp
or
xor
inc
xchg
out
fiadds
cmpsb
lcall
dec
mov
adc
xchg
add
divb
addl
loope
and
jmp
dec
push
icebp
ljmp
pop
push
dec
cmpsl
mov
or
mov
decb
dec
jl
xchg
enter
and
add
jg
jl
inc
or
loopne
fwait
in
fsubrs
inc
push
xor
mov
les
or
jno
pop
jno
jbe
mov
nop
test
sbb
sub
sbb
pushf
inc
dec
mov
imul
fildll
and
sti
push
lret
fsubrl
les
sub
test
mov
cwtl
push
cmc
xor
dec
xchg
cltd
push
leave
adcb
push
sbb
dec
cltd
enter
jns
pop
cmpsb
fscale
std
lods
pop
mov
cmp
jl
loope
xchg
add
fcomp
cmp
jecxz
inc
fsubs
call
adc
sbb
xchg
dec
adc
sub
xor
jns
popa
sarb
mov
or
popa
jns
jae
test
aad
xchg
inc
mov
lret
jp
mov
sub
sub
lahf
and
jne
and
adc
cmc
dec
inc
aaa
ret
ds
adcb
fisttpll
in
cmp
cli
fmull
imul
jle
out
loopnew
cmpb
inc
popf
and
lods
push
ja
test
scas
cs
mov
cmp
pop
sbb
push
sub
pop
loope
jo
mov
fstl
imul
adc
es
mov
jo
xchg
xorb
cmp
adc
xchg
outsb
std
popa
or
adc
jge
mov
rcrl
inc
dec
xchg
fnstcw
insl
mov
stos
mov
outsl
in
loop
add
jbe
ret
mov
push
fistpll
aam
negl
ljmp
in
mov
or
add
sbb
add
mov
sbb
sbb
mov
mov
inc
xchg
bound
out
xor
inc
lret
xor
sbb
rcl
sub
push
jne
sbb
pop
ffreep
jge
fistpl
xchg
push
mov
ret
cmpb
lods
fbld
mov
push
ret
rcll
jo
push
fcmovnb
movsl
out
inc
stos
push
fdivs
sbb
lahf
out
cmp
mov
lret
adc
jne
jno
mov
imul
dec
imul
xor
push
xchg
mov
pop
cmp
dec
dec
jae
xchg
xchg
fildll
movsl
leave
int3
or
cltd
lock
mov
test
jb
rcrl
and
or
sub
sbb
out
fsubrl
jbe
repnz
sbb
jns
mov
ffree
ja
xor
mov
push
push
pop
dec
jmp
popf
jmp
xor
out
fcoml
or
subb
sub
addr16
sti
lds
popf
jge
sbb
or
inc
in
test
cltd
mov
loopne
sbb
movsl
ret
lds
dec
push
jge
add
inc
mov
in
ja
xor
sbb
or
push
adcl
sub
mov
stos
aaa
loope
std
xadd
incl
repnz
fdivrp
cmpsl
inc
fdivp
ds
push
mov
lock
jmp
inc
scas
push
push
pop
sub
mov
aad
out
mov
and
cmp
cmp
lcall
adc
xchg
and
lcall
lods
cmp
in
or
jno
sub
inc
lea
mov
fisubrs
es
inc
mov
int3
icebp
out
adc
mov
ljmp
cwtl
out
xor
mov
fstl
sbb
or
xor
and
outsl
mov
pop
xor
add
mov
cmpsb
pop
sbb
addb
test
and
dec
cmpsl
inc
ficompl
dec
sbb
xor
xor
push
icebp
cmp
mov
dec
jmp
mov
cmpsb
sub
push
insl
mov
test
or
stos
push
out
push
sub
add
aas
xchg
ja
imul
int
movsl
addr16
fildll
jnp
repz
insb
clc
imul
jg
mov
fucomip
and
movsb
sar
das
mov
repz
sarb
sbb
or
repz
stos
arpl
ret
mov
inc
push
arpl
ja
data16
movsl
dec
xor
std
in
int
push
adc
push
mov
popa
pop
xchg
cmp
pusha
daa
and
int
sub
loopne
mov
mov
mov
aas
jb
imul
call
dec
xor
xchg
xor
xor
pop
pop
rorl
loope
or
xchg
xor
dec
sbb
push
or
pop
pop
dec
pop
cld
or
jb
cmpsb
inc
mov
inc
add
xchg
adcl
into
fsubr
inc
xchg
push
mov
outsl
fsubs
mov
inc
rcll
mov
add
add
and
les
leave
cs
push
sbb
aas
imul
das
pop
inc
xor
in
lcall
scas
adcl
mov
mov
jb
insb
lret
icebp
orb
xorb
push
stos
sbb
fwait
dec
test
in
stos
lcall
push
stos
pop
stos
divl
pusha
jnp
movsl
in
ret
xor
sub
cmp
cwtl
push
mov
das
loopne
push
mov
add
leave
pusha
in
push
dec
lock
outsl
sbb
call
push
push
dec
mov
mov
in
mov
pop
test
push
pop
jle
adc
lock
mov
iret
ret
pushf
xchg
push
mov
lret
xchg
idivb
mov
pop
stc
daa
mov
lea
mov
popf
nop
dec
mov
push
xchg
pop
nop
push
or
pop
xchg
jnp
jbe
mov
loop
aad
vsubsd
cmp
outsb
jl
adc
and
aam
enter
sbb
pushf
popf
jns
cli
cwtl
mov
cltd
cmp
decb
or
or
jmp
add
aaa
loop
dec
test
xor
xor
in
push
add
movsl
xchg
adc
scas
inc
xor
cs
pop
xchg
add
cmp
jo
mov
adc
add
std
mov
xchg
cmc
xlat
push
aaa
ljmp
hlt
pop
iret
movsl
cmp
cld
std
out
stos
into
cli
movsb
je
pop
sub
and
ljmp
mov
rorb
daa
shrl
ret
loop
hlt
pushf
pop
sub
inc
stos
repz
xor
adc
push
xorb
push
cmp
jno
int3
flds
mov
cld
pop
test
jmp
mov
in
xor
jecxz
rol
xchg
cmp
and
xchg
call
mov
aad
xchg
leave
pop
clc
aaa
xor
cld
mov
lock
out
in
dec
daa
in
into
cmpsl
jecxz
and
mov
mov
scas
xor
mov
test
mov
sub
mov
or
fadds
mov
mov
xlat
imul
push
dec
adc
cmp
scas
push
add
int3
push
cmp
frstor
in
dec
pop
mov
rolb
and
icebp
lock
or
mov
inc
mov
xor
dec
push
xchg
xlat
push
ds
loope
cmpsl
push
xchg
xchg
orb
sub
je
pop
pushf
loop
mov
or
cmp
aad
shrl
test
push
dec
lret
xor
sub
xchg
insl
lret
lret
inc
ljmp
outsb
movsb
test
sub
jmp
lods
inc
lock
pop
add
insb
mov
shll
leave
sahf
push
mov
or
mov
in
incb
jmp
hlt
jne
or
fwait
out
mov
or
fsubs
negb
call
leave
rclb
and
sub
lods
mov
push
sahf
ss
mov
adcl
cli
or
scas
adc
inc
int
xchg
add
in
test
dec
aas
sar
fwait
mov
daa
push
mov
stc
push
clc
repnz
rorb
jbe
inc
mov
cwtl
add
in
and
jns
lea
add
mov
jae
rclb
stos
cmp
test
push
xor
outsb
adc
add
sub
sbb
sbb
sbb
pop
or
stos
xlat
icebp
scas
aas
cs
lds
jae
repnz
outsb
sbb
cwtl
lret
lcall
stc
mov
fcmovne
adc
xor
jp
mov
shrb
les
sbb
mov
or
rcrb
add
sub
mov
jg
jnp
sub
adc
aas
and
and
fildl
jecxz
fimull
sahf
jno
inc
shll
xchg
jae
lret
popf
test
sub
mov
xchg
mov
lea
stos
imul
rorb
ret
push
faddp
mov
mov
cltd
sub
mov
icebp
jno
xchg
in
loopne
and
addb
inc
sbb
mov
sahf
jp
sub
jnp
fwait
ror
cmp
push
lods
jmp
aam
sbb
fdivl
xor
dec
ds
cmpsb
push
adc
cmp
aam
mov
sub
mov
loope
mov
jl
aam
dec
adc
inc
fcompl
imull
clc
xor
es
mov
inc
bound
sbb
clc
push
pusha
push
jae
xchg
insl
cld
inc
out
in
sub
inc
out
mov
pop
orl
fmull
cmpl
insb
push
cmp
sbb
out
cs
leave
push
repz
mov
int
dec
xor
xchg
cmp
jae
sub
dec
lret
and
lods
fsubl
ja
repz
adc
jno
dec
les
cltd
lds
xor
cltd
dec
cmp
ss
fmul
xchg
iret
lock
es
cmp
fildll
jg
push
out
mov
pop
popf
mov
and
ret
insb
cmpsb
cmp
rcrb
lds
pop
sbb
lods
inc
sahf
clc
int3
dec
je
sbb
popa
gs
mov
stos
bound
add
jne
mov
lea
add
or
sub
adc
cmovp
insb
xchg
aas
mov
cwtl
sbb
jnp
mov
add
cmpb
daa
out
jbe
adc
mov
repnz
lcall
faddl
mov
mov
cmp
xchg
or
sahf
shr
mov
push
fisttps
inc
push
ds
adc
mov
adc
dec
mov
push
in
jge
nop
cli
into
jp
pop
cwtl
cmpsl
sub
dec
cld
jp
aaa
fstps
add
mov
daa
sbb
negb
or
outsl
das
push
decb
add
int3
bound
sub
aad
icebp
mov
cmc
das
push
cmp
inc
push
pushf
and
jbe
lret
xor
lods
out
xor
pop
xor
in
and
movsb
jo
mov
push
test
es
gs
lods
data16
mov
cmpsl
jmp
add
sbb
pop
ret
lods
je
sub
das
cmc
enter
arpl
dec
mov
ret
fwait
out
fmul
inc
ds
pop
data16
xor
scas
insb
pop
mov
imul
aam
fadd
leave
push
ss
js
push
ds
add
or
sbb
rol
popf
and
and
je
adc
out
mov
pop
imul
call
or
xor
mov
ljmp
mov
jne
aam
gs
cs
or
mov
cmp
sub
mov
repz
or
movsl
dec
xchg
sbb
mov
sti
push
jbe
xlat
shl
lods
adc
pusha
lcall
sbb
mov
popa
adc
dec
dec
pop
sub
nop
addr16
je
incb
jl
lock
and
out
jns
jno
mov
or
mov
and
data16
jo
sub
movsb
add
pushf
mov
push
pop
cwtl
ret
jg
cltd
in
pop
in
insb
in
sbb
ffreep
jne
out
fdivl
add
mov
push
inc
xor
nop
loope
push
pusha
fwait
mov
inc
out
pop
inc
mov
jle
mov
stc
ds
and
sub
lods
popa
stos
lods
inc
pop
ret
mov
dec
ja
sti
fisubs
sub
add
jb
movl
loop
adc
cmpsb
sbb
cli
lods
cmc
sub
jno
fmul
dec
mov
xor
emms
sbb
fdivl
pop
aaa
lret
jno
test
daa
rorb
in
out
scas
pop
test
xor
or
outsb
fwait
lock
imul
xor
in
repnz
test
pop
sbb
icebp
ds
jge
loopne
iret
inc
and
mov
aaa
xor
clc
jp
pop
add
push
pop
stos
jecxz
repz
sbb
jmp
xor
adc
clc
xchg
dec
out
jp
test
xor
mov
jae
sub
ja
cmc
jg
into
xchg
mov
xorl
mov
dec
out
ret
leave
adc
fdivs
bound
add
les
sub
mov
dec
xchg
pop
sarl
das
mov
popf
inc
mov
ljmp
in
xchg
jno
push
notl
out
lret
adc
imul
mov
mov
bswap
xor
sub
imul
loopne
rolb
jnp
push
mov
add
aaa
add
loope
fld
xor
out
xor
pop
arpl
pusha
ret
or
hlt
popf
mov
jb
in
adc
fildl
push
dec
mov
sbb
jle
mov
insl
sub
mov
lds
adc
les
enter
or
popf
mov
popa
fs
dec
inc
xlat
je
paddb
mov
jecxz
loopne
jp
out
cmpsl
fwait
sbb
mov
shrb
movsl
sbb
inc
jmp
pop
popa
iret
add
mov
xor
gs
cwtl
into
push
loope
dec
xchg
bound
jg
fldl
dec
imul
nop
mov
fldt
pop
jo
mov
ja
mov
jmp
std
sbb
adc
movsl
pop
pusha
loopne
jb
and
lcall
inc
mov
orl
in
stos
sub
xor
ret
adc
mov
bound
insb
shrb
in
out
mov
mov
test
sub
lea
sub
dec
in
insl
repz
leave
repnz
adc
sub
aad
xchg
and
mov
inc
dec
imul
xor
push
push
mov
stc
sub
cwtl
or
shlb
repz
jge
or
nop
clc
into
in
or
push
push
cmp
addr16
pusha
push
into
mov
and
test
xor
add
add
pop
test
adc
mov
adc
jo
rorl
lcall
sarb
mov
arpl
fcoms
pop
jp
xchg
cmp
mov
pop
shll
test
popa
xchg
add
or
adc
bound
or
mov
jl
jge
xor
jns
adc
scas
mov
pop
jae
imul
mov
frstor
push
mov
add
int3
cltd
ret
lds
and
cmpsb
and
das
arpl
daa
adc
jg
cmp
flds
movsb
cmc
arpl
and
daa
cmc
xchg
pop
data16
ret
rclb
mov
out
imul
daa
cli
mov
mulb
int
dec
mov
dec
testl
jnp
stc
sub
push
leave
xor
repz
inc
std
dec
lock
popa
mov
inc
push
nop
dec
nop
lahf
lock
jmp
add
insl
out
je
movsb
xchg
or
nop
cltd
push
jb
push
sbb
mov
rol
cmp
test
int
dec
dec
out
aas
cmpl
es
mov
fwait
inc
push
shll
mov
ret
mov
test
jo
mov
js
std
shll
orb
or
mov
add
jno
inc
mov
adcl
add
mov
pop
idivb
arpl
lods
fidivrs
lret
pop
popl
out
in
inc
addr16
sbb
ljmp
mov
enter
push
mov
jecxz
scas
add
xchg
cmp
sub
or
addr16
mov
icebp
inc
jne
xor
mov
adc
cmp
cld
arpl
fisttpl
jp
dec
push
lods
push
imull
cmp
lahf
outsb
sbbl
fcmovnu
pushf
test
cs
fmull
pop
mov
sbb
mov
jns
xchg
outsl
cmp
xor
dec
adc
or
xor
sahf
cmp
call
push
scas
inc
push
inc
jge
insl
roll
xchg
hlt
sub
mov
divl
cmc
jmp
xchg
filds
push
inc
mov
xor
xchg
push
ds
fstps
cmp
popf
negl
out
test
out
test
mov
sub
es
or
add
and
daa
cmp
popf
add
push
inc
lret
mov
push
cmpsb
xchg
cmp
or
in
std
aas
mov
and
or
and
mov
ss
rcl
add
xchg
pop
dec
dec
enter
push
pop
int
jp
scas
mov
jmp
andb
leave
xchg
dec
lea
shll
xchg
push
mov
lods
adc
mov
jnp
mov
rcrb
in
adc
inc
and
test
fildl
jge
xchg
push
std
lahf
jbe
mov
mov
push
sarb
es
pop
sbb
lahf
pop
jo
lock
lock
mov
pop
sub
mov
xchg
lcall
and
xor
dec
ja
or
and
sar
adc
pop
fwait
imul
imulb
push
mov
fmul
out
lret
xchg
sti
daa
mov
mov
test
adc
mov
sbb
cld
cmc
mov
jno
cmp
xor
and
mov
lret
xchg
lret
mov
fcomp
fldenv
cmp
mov
cwtl
in
cmp
xchg
sub
cmp
cmp
adc
dec
jno
sbb
aaa
ret
push
push
ret
inc
sub
pop
mov
das
js
aad
pop
in
in
and
lds
adc
add
mov
mov
dec
fwait
mov
mov
pop
ds
jae
xor
sbb
in
adc
sub
loope
jb
lock
inc
cli
cmc
xlat
xchg
aam
sub
fisttps
push
sub
js
dec
std
lods
xchg
xchg
je
cmp
jo
movsb
cli
pop
addr16
mov
mov
lea
sbb
lret
shrb
out
outsl
imul
shl
push
add
rcrl
aad
mov
pop
push
and
add
mov
sahf
mov
sbb
ret
nop
hlt
mov
add
dec
pusha
cmp
or
aaa
fcoml
jl
int3
and
ret
xchg
add
imul
outsb
movsl
test
int
cmp
sbb
into
add
jns
xor
out
mov
fwait
stc
mov
push
mov
stc
mov
addr16
loopne
into
ret
or
sarl
test
out
sbb
popf
mov
push
rol
xchg
cmp
push
push
std
lahf
xor
ds
mov
xchg
cmpsl
imul
outsb
jp
and
xor
lods
daa
out
jo
rolb
aaa
xorb
jo
mov
iret
shrb
and
stc
rolb
aaa
repz
ljmp
cld
xchg
mov
sub
test
fsub
movsl
mov
add
xchg
push
jns
pusha
addr16
mov
xchg
adc
fnstsw
cld
dec
xchg
mov
cmp
dec
leave
cmp
dec
xchg
in
arpl
or
lods
stos
adc
mov
std
mov
mov
insb
popf
pop
rorb
push
ja
sbbb
push
and
xor
lret
fs
int
stc
push
or
inc
inc
mov
clc
cmpsl
add
jnp
test
sbb
xor
loopne
inc
sub
in
ret
leave
mov
jo
mov
mov
arpl
popf
cmp
movsb
jo
dec
dec
push
add
shll
inc
lcall
stc
js
sub
pushf
cmp
fsts
ljmp
out
adc
mov
add
add
sar
mov
cmp
mov
lods
aam
testl
and
cmpsl
mov
and
xchg
adc
pop
out
mov
or
push
sub
enter
and
es
scas
shlb
ss
imul
dec
sub
fstpl
in
stos
jmp
mov
jnp
xor
shr
sbb
inc
outsb
in
dec
adc
fxch
xchg
dec
jne
sub
mov
sbb
sub
pusha
out
or
pop
jns
push
adc
sahf
push
out
sbb
fimuls
sub
fsubrl
ja
pop
sub
xchg
mov
lcall
mov
xor
push
adc
push
adc
inc
push
xchg
sbbb
cmp
mov
daa
in
dec
mov
adc
mov
mov
cwtl
or
ds
lock
ret
lret
test
arpl
jge
ljmp
loop
test
sub
jg
loopne
push
mov
imul
and
es
pusha
cmpsb
leave
fmul
addr16
hlt
rolb
insl
pushf
orl
popf
jp
jp
pop
test
push
mov
sub
dec
xor
rclb
xor
rcrb
add
push
iret
ja
jle
inc
xor
jb
xchg
pop
push
xchg
lahf
sahf
fdivrs
xor
cmp
les
push
mov
jp
sub
and
adc
sub
and
mov
shlb
xor
mov
gs
dec
aaa
sbb
push
pop
iret
push
int
mov
in
lret
into
inc
or
movsl
js
mov
mov
dec
arpl
mov
xchg
sar
or
dec
cmpsb
xorl
stc
sub
aam
and
push
int3
fiaddl
mov
dec
jae
mov
add
pop
push
leave
pop
fstp
mov
fs
xchg
push
xchg
out
cmp
pop
mov
jecxz
mov
xchg
sahf
test
sub
lods
iret
mov
lock
xor
sub
adc
add
mov
bound
sbb
fimuls
insl
mul
sbb
sbb
icebp
out
and
xlat
fs
les
leave
mov
add
fisttps
and
xchg
mov
jecxz
call
mov
pushf
mov
push
cmp
mov
outsl
mov
mov
movsl
sahf
divb
pop
sar
in
fstpt
push
add
add
popa
mov
jge
mov
mov
movsb
xchg
and
repz
pop
sub
adc
aad
push
xchg
test
fwait
mov
aaa
rcr
mov
dec
xor
in
xorb
sub
iret
rclb
pop
movsl
push
pusha
jge
adc
mov
jns
testb
loope
les
dec
test
push
arpl
jmp
dec
cmp
stos
add
pop
ss
sub
pop
enter
xchg
inc
ss
xchg
and
adc
xchg
fistpl
dec
pop
push
out
or
cmpsb
js
xchg
std
jo
test
cmp
std
sub
jge
in
pop
repz
push
push
cmp
leave
sbb
sub
push
xor
ret
mov
je
inc
loope
std
cwtl
ds
xor
iret
scas
jbe
xchg
ret
mov
negb
jb
mov
jnp
and
test
loopne
ret
mov
ret
test
mov
dec
stc
jl
insl
arpl
adc
test
mov
imul
stos
and
clc
les
mov
push
jle
icebp
sahf
mov
hlt
jne
xor
cmp
aam
xor
sub
and
jae
xor
dec
ss
inc
aam
and
in
jge
inc
mov
imul
aam
xor
pop
fsubr
sub
lds
imul
mov
loop
push
and
push
push
bound
inc
mov
bound
xor
or
ss
xor
jbe
pop
pop
inc
dec
outsl
pop
or
xchg
mov
call
cmp
xchg
mov
aam
rcr
adc
faddp
fnstenv
adc
data16
pop
add
and
adc
imul
adc
mov
aad
decb
divl
mov
arpl
xor
xchg
jb
and
cli
inc
sub
stos
shrb
cmp
sahf
xchg
cltd
pushf
loope
mov
inc
xorl
pop
pop
daa
popf
clc
xor
pop
imul
clc
inc
push
or
ds
mov
stc
and
jmp
fwait
inc
push
xor
sub
mov
dec
jl
pop
push
push
mov
xorl
addr16
loope
scas
xchg
enter
xchg
jg
scas
and
or
pushf
sarb
cmpsb
mov
lock
sub
pop
mov
pop
lock
sub
cmpsl
cmp
jns
cmpl
jns
popf
in
adc
mov
dec
pop
out
xlat
push
pop
mov
sub
pushf
push
mov
jle
loope
jno
or
add
les
call
mov
loop
xlat
dec
fwait
mov
mov
es
dec
int3
cmc
or
scas
pop
sub
les
je
lods
dec
frstor
sub
xor
mov
sahf
add
mov
pop
testb
lods
es
xorb
mov
mov
fisubs
mov
shlb
test
aaa
jmp
mov
xor
cs
ss
aam
mov
add
in
int
cmpsb
shll
sbb
mov
cmpl
pop
xor
xchg
inc
and
scas
hlt
cmp
push
mov
xchg
gs
sbb
out
jae
xchg
xor
sbb
mov
cmp
adc
enter
stc
xchg
jbe
or
outsb
mov
lods
push
outsb
daa
cli
add
mov
je
inc
imul
mov
mov
xchg
cmp
popa
jg
xlat
sub
sub
jae
add
inc
mov
or
mov
fcomps
daa
out
imul
mov
inc
lahf
outsl
stos
xor
mov
dec
sub
inc
into
maxps
ret
lret
cmpsb
push
stc
jne
push
xchg
jge
cmc
push
inc
scas
nop
mov
aas
inc
xor
in
or
out
jp
vrcpps
pop
es
sbb
mov
xor
jns
sub
adc
nop
xchg
loop
cs
sub
idivb
pop
mov
in
inc
cli
xor
negb
inc
cld
pop
fisubs
outsl
dec
sub
imulb
pop
sub
lock
pop
pushf
cli
push
and
data16
dec
lock
insb
sub
pusha
push
jp
mov
pop
and
push
cs
sub
inc
insb
gs
jmp
mov
adc
in
and
xorb
push
push
pop
les
add
sbb
movsl
orb
mov
cltd
out
fwait
js
retw
add
pop
cmp
dec
xor
mov
push
push
std
in
add
xchg
loopne
mov
pop
and
loope
iret
dec
xor
icebp
sub
lret
sbb
adc
or
and
mov
adc
stos
xlat
or
cmpsb
lahf
sbb
pop
out
inc
inc
cmp
sbb
shlb
cmp
popa
stos
lods
and
popf
div
fwait
jmp
mov
ds
push
int
adc
pop
push
jae
lcall
mov
inc
sub
or
jle
inc
in
xchg
js
pop
xor
or
and
mov
fimuls
and
or
push
xlat
xor
call
ss
xor
mov
lods
dec
outsb
and
mov
sti
jl
sbb
mov
sti
lcall
lods
sti
jecxz
stos
adc
jbe
xchg
mov
inc
jmp
and
les
mov
not
inc
pop
das
pop
and
sub
jecxz
jg
jo
mov
sub
jmp
adc
sti
mov
popf
mov
rep
out
cwtl
int3
enter
int
rcll
mov
lds
add
mov
inc
aad
add
ret
adc
outsb
pop
push
mov
in
mov
cltd
cmp
mov
jmp
outsb
and
dec
enter
mov
ds
data16
mov
cwtl
rcll
shl
jae
sub
aas
in
repnz
adc
dec
jl
push
jnp
xchg
xchg
push
rorb
inc
mov
adc
dec
sub
xchg
xchg
pop
mov
mov
lret
or
jle
loope,pt
pop
cmpsb
cmc
repnz
loop
push
xor
mov
sbb
mov
cmp
push
adc
xorl
outsb
popf
dec
ds
push
jns
stos
sub
add
pop
or
cmpsb
imul
outsb
cwtl
mov
imul
lock
scas
xor
imul
pop
test
clc
mov
jl
pop
mov
xorb
insl
mov
les
enter
arpl
add
and
lcall
sbb
inc
fisubs
adcl
scas
sbb
mov
cmp
add
cmc
mov
mov
add
movsl
mov
or
push
iret
sbb
pop
mov
cmc
lods
mov
or
stos
in
jae
fdivr
pop
lcall
adc
loope
fsubrs
in
or
pushf
pusha
into
nop
cmp
jecxz
mov
dec
hlt
and
fidivl
push
outsl
push
jmp
rcrb
ja
int3
adc
lock
jle
jmp
jp
mov
out
inc
jle
popf
out
daa
icebp
scas
sbb
mov
in
out
jmp
ja
sbb
into
aad
pushf
fcoml
sub
push
in
es
add
dec
jg
test
pop
push
pop
fldl
pusha
bound
mov
or
xchg
cmp
out
mov
mov
dec
loopne
int
mov
mov
sub
test
into
cmp
dec
xor
ja
xor
or
pop
jle
and
jp
imull
test
std
and
repnz
addb
push
scas
cs
aaa
arpl
rcl
mov
in
ja
jecxz
xchg
push
jmp
sbb
jl
daa
nop
loop
xor
sbb
icebp
inc
notb
lods
repnz
dec
mov
mov
push
mov
or
or
scas
jp
mov
bound
xor
imul
inc
ret
xchg
loope
push
popa
push
jmp
inc
jge
clc
jb
mov
add
cli
scas
cwtl
mov
mov
dec
inc
ret
fidivrs
scas
loop
sub
rcr
test
aaa
in
push
xor
test
cltd
sub
push
out
fldenv
push
and
add
and
mov
test
jmp
add
xchg
cwtl
sub
push
out
mov
push
sarb
sub
repz
test
xchg
add
shrb
icebp
jns
lcall
push
scas
jp
dec
mov
mov
jbe
mov
or
mov
sbbb
ds
and
cli
fcoml
adc
jo
push
test
addl
dec
dec
pop
lcall
push
xor
jg
sbb
xor
adc
add
movsb
loope
nop
cmpsl
sbb
ds
sti
jmp
pop
mov
cmp
in
cmp
add
cmp
repz
dec
je
arpl
loope
sub
dec
insl
mov
and
or
pop
dec
add
jp
lea
jge
mov
mov
inc
add
inc
mov
mov
dec
dec
shl
dec
cmp
ja
xor
inc
imulb
mov
nop
xor
fbstp
sub
ret
nop
xorb
inc
arpl
scas
jnp
mov
mov
push
xchg
xor
mov
js
xor
lret
clc
inc
rorb
xchg
pusha
sbb
xchg
repnz
sub
cmp
mov
xor
mov
fsubr
jecxz
mov
mov
ljmp
clc
les
out
mov
sbb
fildll
xchg
push
xor
push
xchg
ja
in
scas
shll
outsb
lods
insl
pop
or
mov
push
popf
add
int
jle
loope
aas
imul
pop
dec
mul
add
push
mov
and
cmp
into
lcall
xchg
adc
dec
dec
jl
add
and
xchg
imul
adc
in
sub
loope
out
xor
mov
cld
iret
fxch
fdivrs
cltd
insl
hlt
jne
mov
mov
sbbl
add
push
bound
cmp
daa
cmp
mov
jle
jp
ret
or
adc
ret
or
in
push
pop
mov
movsb
outsl
orb
test
insb
inc
and
fcoms
jbe
fdiv
jae
fcomps
es
lret
js
mov
rorl
in
mov
out
out
imul
xor
cld
inc
xchg
out
outsl
popf
pusha
mov
es
leave
jle
adc
test
xchg
popa
add
xor
xchg
adc
bound
pushf
dec
push
insb
fwait
aas
inc
rcl
xchg
mov
aaa
xchg
pop
xchg
cmp
and
pop
lret
insl
or
jge
jmp
cmc
jb
add
fucomip
mov
repz
clc
xor
iret
iret
mov
popf
sbb
sbb
sti
fcomi
fs
mov
sbb
push
push
jbe
inc
mov
ret
cmp
pop
jae
out
push
mov
adc
adc
xchg
xor
or
push
push
out
mov
ret
gs
push
sbb
lcall
lahf
notb
jns
test
out
cmc
mov
push
std
pusha
test
das
out
and
scas
and
sahf
mov
sarb
pushf
push
lahf
pop
out
int
and
dec
shlb
leave
fcoms
jp
push
in
dec
mov
orb
orl
mov
in
pusha
jne
fisubs
aas
loopne
fsubs
cli
mov
loop
mov
jne
sub
arpl
mov
and
fsubp
dec
cld
sbb
repnz
pushf
pop
jle
data16
fucom
dec
or
lcall
jle
jp
and
inc
cmp
std
xchg
dec
popw
jnp
sub
pusha
outsb
adc
pop
cmp
fwait
xor
pop
sahf
push
scas
mov
push
dec
cmp
fsubrl
cmp
sarb
or
sbb
mov
sbb
loope
pop
dec
aas
sbbb
mov
into
jmp
xor
insl
and
repz
mov
cmp
ror
stos
dec
push
dec
cmp
es
clc
movl
shrl
test
inc
xor
jne
sbb
out
dec
cmp
mov
enter
lret
sbb
jmp
inc
mov
pusha
flds
inc
stc
mov
call
stos
stc
out
pop
ljmp
push
mov
cmc
aas
add
sbb
nop
mov
adc
sbb
dec
addr16
xchg
or
pop
cmp
xchg
jo
into
aam
int
sub
les
fstp
cmp
jno
adc
mov
mov
leave
rorb
stc
jns
mov
orb
mov
aaa
cmpsl
dec
iret
paddusb
inc
jbe
lds
cmp
sbb
adc
in
adc
call
or
addb
sub
adc
lea
lock
cmpsl
rcrb
imul
sbb
sarl
push
cmp
inc
lds
mov
xchg
push
or
lea
or
clc
popf
pushf
in
daa
mov
adc
pop
inc
icebp
push
pop
lods
aaa
sub
push
xor
lock
adc
leave
popa
fwait
cmp
jge
ss
imul
call
adc
lods
jge
cmpsb
data16
jo
stos
movsb
cmp
cmp
mov
adc
cld
adc
ret
cmp
jbe
sahf
rcrl
cmpb
adc
lahf
popa
or
lds
mov
xor
or
into
jl
enter
dec
cmp
xor
lret
testl
mov
or
stos
cmp
and
hlt
xchg
mov
xchg
hlt
or
sub
cmp
push
jne
test
popl
xor
ret
push
xchg
sub
in
mov
pop
ficoms
pop
xchg
jge
iret
lret
sbb
mov
mov
bound
call
add
lret
sbb
dec
push
insb
adc
or
jns
jle
imul
jl
addb
in
lock
dec
xchg
inc
push
adc
mov
das
in
inc
xchg
popa
cli
adc
mov
push
adc
ljmp
add
jnp
dec
inc
fimuls
jge
and
fs
repz
andb
inc
outsl
ja
xor
dec
add
in
xchg
pop
popf
pushf
mov
mov
ret
mov
imul
push
loop
pop
ja
mov
mov
or
lret
inc
or
sbbl
iret
add
xorl
lahf
fsubs
jo
lods
in
mov
mov
call
sbb
ss
ficoml
add
or
daa
ret
cltd
aaa
pushf
mov
xchg
xchg
adc
adc
fdivl
xor
leave
xor
push
roll
xchg
dec
mov
test
in
call
inc
es
scas
adc
outsb
daa
ljmp
sub
cmp
xchg
das
cwtl
insb
pop
fnstenv
sbb
mov
dec
mov
lods
sbb
out
js
aam
test
pop
xchg
cmp
iret
jge
and
repnz
movsb
inc
aaa
and
mov
mov
popa
call
mov
mov
sbb
ret
pusha
mov
push
sub
pop
scas
mov
cmp
out
pop
and
pop
rorl
pusha
idivl
dec
push
mov
outsb
xchg
xchg
inc
rorl
testb
lods
and
xchg
jg
jb
mov
in
outsl
sub
push
arpl
cltd
jo
movsb
or
sub
mov
mov
push
and
test
mov
gs
int
add
iret
icebp
stc
jnp
mov
ss
and
hlt
pop
ljmp
std
jbe
bound
sbb
imul
daa
inc
call
rcrb
jns
sbb
inc
ficoms
inc
pop
pop
dec
dec
sub
xchg
mov
loop
pop
xor
dec
mov
push
cmp
cltd
push
dec
jle
aaa
xchg
subl
jbe
cld
and
pushf
cli
pusha
mov
xchg
scas
mov
clc
push
push
outsl
sbb
int
es
ljmp
call
cmp
hlt
mov
mov
arpl
decl
or
jp
sbb
pop
sbb
out
inc
stc
push
jb
fsts
jbe
cmp
pop
shl
test
testb
jae
les
xchg
clc
add
mov
out
sbb
inc
popf
pop
ljmp
jl
and
dec
or
mov
js
arpl
sti
std
bound
mov
adc
cwtl
bound
mov
jnp
cmp
movsl
outsl
vmread
xchg
lods
fnstsw
sub
int
aaa
dec
pop
mov
mov
mov
and
adc
testl
xchg
iret
or
mov
repnz
cmp
out
sub
push
xlat
call
out
xchg
adc
lret
xor
xchg
aaa
jle
or
push
scas
add
mov
or
pop
outsb
mov
sbb
jae
pop
adc
sar
in
cmp
dec
cmp
sub
std
push
loopne
popf
dec
xchg
adc
jecxz,pt
dec
roll
icebp
mov
sbb
jbe
xchg
loopne
dec
sbb
mov
pop
mov
cmp
xor
mov
das
stos
lcall
sti
int
mov
inc
outsl
sub
lret
int
loopne
or
mov
jg
mov
mov
mov
xchg
aaa
dec
mov
mov
pushf
scas
xor
xchg
and
cltd
into
div
push
mov
cs
in
jbe
mov
in
push
inc
bound
sub
jns
shl
and
fistps
out
jns
fwait
jmp
mov
add
mov
jno
test
adc
sub
aaa
call
andb
shrl
outsl
pop
mov
scas
les
sbb
fdivl
add
out
cmpsl
data16
push
jecxz
movsl
pushf
movsb
cli
sbb
sub
cmp
lods
je
push
xor
in
fucomip
jle
adc
and
ss
mov
dec
test
fcmovu
lahf
dec
out
rcrl
aaa
xor
mov
sub
not
les
mov
pusha
mov
lods
or
inc
and
rcrb
dec
add
xchg
xor
lcall
sub
insl
add
cmp
leave
leave
cmp
push
mov
mov
jnp
fsubrs
inc
lcall
pop
call
mov
loope
out
hlt
and
mov
cmp
push
mov
fmul
add
clc
pushf
scas
ljmp
shlb
daa
int
jae
int
adc
add
outsl
pop
ds
stos
bound
out
jns
out
adc
sub
dec
test
stc
dec
ret
aam
or
sub
clc
xchg
in
add
loopne
fmuls
fsts
lock
push
stos
push
loopne
adc
cmp
pop
mov
cmp
and
mov
jb
sbbl
mov
sbb
rorb
mov
jno
stos
ja
je
stos
jmp
lods
add
test
mov
das
jle
xor
sahf
addb
in
test
dec
adcb
and
inc
mov
arpl
pop
outsb
mov
push
mov
cs
stc
push
add
sub
movsb
pop
inc
pop
sti
xchg
add
lea
bound
jns
leave
push
push
xchg
mov
and
mov
addr16
loope
popf
cmp
cs
xchg
movsb
mov
ret
mov
pop
push
shrl
sub
shrb
outsb
imul
mov
mov
imul
movsb
add
enter
xor
rcll
rcrl
cmpsl
mov
inc
lcall
mov
imul
jge
dec
es
pop
loope
fcompl
jmp
into
or
xor
lret
insb
and
orl
mov
jl
add
lcall
inc
inc
jb
sub
or
jg
nop
inc
pushw
mov
int
dec
sbb
mov
inc
mov
xchg
icebp
mov
mov
inc
js
mov
mov
mov
xor
sub
sbb
xor
and
pop
or
clc
xchg
loopne
sbbl
fists
fcmovnu
fimuls
lahf
jl
dec
sbb
lock
mov
in
jl
and
xchg
popa
xchg
sbb
ss
and
pop
dec
outsl
insl
loop
sbb
add
jmp
outsb
dec
js
inc
cli
dec
inc
sub
sub
idivl
std
std
jae
mov
gs
sub
mov
mov
push
mov
stos
dec
dec
mov
ja
sbb
ficoml
xchg
add
leave
push
std
in
movsb
add
dec
out
xchg
xor
sbb
repz
rcrb
fs
les
add
fistps
mov
xchg
sbb
ss
xchg
or
pusha
jnp
jl
into
cmp
call
mov
pop
lods
and
mov
sub
scas
repz
mov
inc
jp
cmpsb
pop
mov
jno
popa
fs
xchg
rorb
repnz
xchg
jb
cmpsl
loop
out
adc
iret
movsb
inc
flds
pushf
loopne
push
lret
lret
loop
lcall
xlat
cmpsl
xchg
andb
cli
movsl
shlb
es
fildll
mov
sbb
or
cmpsl
xorb
aas
jns
in
push
xor
fnsave
pop
xlat
dec
inc
or
jmp
push
mov
mov
scas
add
cld
xchg
ljmp
arpl
int3
data16
cld
out
loopne
mov
pop
std
pop
enter
mov
inc
pushf
jl
call
inc
dec
mov
mov
xor
push
mov
inc
pop
or
xchg
xor
ljmp
push
jle
push
jne
xor
aaa
adc
cmp
test
lods
push
cmp
push
add
add
clc
sub
push
popa
sub
push
xchg
add
mov
sbb
movq
lods
icebp
xor
cwtl
pop
jg
repnz
xchg
movsl
jne
pushf
jae
xchg
shll
cmp
add
mov
xchg
gs
or
or
dec
jmp
movsl
cltd
cmpb
xorl
add
icebp
icebp
dec
jge
enter
add
in
lahf
fcoml
mov
mov
sub
addl
mov
mov
sub
dec
hlt
aad
dec
pop
cwtl
arpl
lods
jne
push
stos
xchg
sbb
das
lock
popa
push
es
pmaxub
xchg
dec
fs
scas
clc
mov
cli
mov
mov
push
adc
ret
cmp
mov
add
adc
xchg
pop
fcmove
sbb
jle
lcall
flds
stc
cmpsl
nop
push
stc
into
fmull
in
pop
fimull
add
int3
cmp
xchg
xchg
inc
lods
sub
mov
pop
arpl
lcall
mov
push
xor
arpl
adc
and
and
fwait
add
inc
stos
mov
fists
sbb
les
enter
cmp
cmpsb
dec
shlb
movsl
lods
pop
push
xchg
lock
imul
sub
loopne
in
jge
ss
nop
mov
cli
int3
aaa
xchg
sbb
addl
fdivs
fsubrs
roll
idivl
cmp
jle
lea
out
dec
bound
dec
and
js
pop
pop
repz
inc
jge
test
fwait
pop
cmc
xchg
cmc
adc
mov
and
testl
add
pop
pop
movsl
adc
mov
fidivrl
sbb
sahf
lcall
or
shll
leave
decb
js
push
outsb
pop
sbb
aad
push
stos
cmp
ljmp
or
pmulhuw
les
ja
mov
outsb
mov
stos
aam
inc
sub
scas
cmp
shrl
add
cwtl
test
stos
cli
jge
pop
popa
gs
pop
pop
xchg
or
ss
fwait
inc
dec
jb
xchg
pop
adc
fs
inc
pop
push
insb
fistpll
stos
push
pop
and
cmc
inc
push
sub
jbe
mov
in
gs
pop
jns
dec
out
shll
mov
pop
xor
in
inc
xor
popf
sub
popf
or
nop
xor
cmpsb
fimuls
sub
jb
andb
out
add
adc
jbe
and
fistps
data16
dec
cmp
rcll
and
ror
repz
sbb
out
ljmp
push
xor
mov
jecxz
mov
dec
fisubs
lcall
dec
jno
fidivrl
xchg
dec
ds
mov
pop
iret
mov
cmpsl
lea
push
cli
mov
test
jg
adc
les
daa
lods
test
sbb
mov
stos
cld
clc
outsb
push
movsb
sub
jg
jcxz
dec
scas
push
add
jle
cmp
or
ja
orb
dec
mov
push
dec
addr16
popa
mov
loop
sub
sahf
mov
push
repz
test
roll
jne
loope
icebp
cs
lods
cmc
xchg
mov
test
subb
xorl
xchg
and
mov
xchg
and
mov
xchg
leave
loope
idiv
inc
pop
int3
add
test
sub
dec
push
and
sbb
das
ffreep
push
fstpt
add
pop
pop
or
add
fstpt
js
icebp
push
insb
sbb
push
mov
inc
sub
test
mov
sahf
insb
add
xchg
gs
fs
lds
je,pn
ljmp
jno
adc
and
sub
push
imul
fs
fstps
add
jnp
cltd
mov
outsb
jecxz
js
jmp
repnz
cld
xor
add
lret
push
lock
mov
movsl
call
xchg
lret
xor
jnp
mov
adc
xor
lret
insb
mov
pop
rcl
ret
fmull
shl
stc
mov
and
push
pop
push
leave
mov
insl
push
add
push
lret
sub
sti
inc
test
mov
test
ror
push
shr
ja
xchg
mov
stos
cli
push
sar
push
push
push
imul
loope
sbb
pop
insl
jmp
mov
inc
jecxz
arpl
xchg
aam
pop
cs
inc
jne
cmpsl
out
pop
in
push
incb
push
mov
lds
stc
stos
xorl
and
cwtl
cmp
mov
add
aad
repnz
xchg
sub
pop
in
data16
or
nop
shrl
pop
pop
mov
pushf
sub
or
jmp
daa
jne
and
sub
popa
outsb
sbb
mov
repz
push
push
cmpsb
test
push
sahf
jp
jp
shlb
imull
pop
sub
xchg
dec
mov
insb
inc
jns
cltd
jmp
scas
iret
lods
mov
cmpsb
xchg
loop
cmc
call
push
fs
xor
jl
adc
or
and
es
sbb
sub
mov
adc
bound
xchg
pop
fwait
cmp
mov
jbe
nop
dec
test
push
stc
sbb
shr
filds
xor
andl
les
imul
pop
fcoms
adc
mov
push
jmp
scas
cmpsb
dec
dec
in
jns
or
call
jbe
mov
mov
jno
xchg
or
loop
out
mov
lds
rcrl
pusha
mov
loope
jo
fidivrl
cmp
cwtl
outsl
add
stos
pop
lret
dec
sub
mov
sub
and
in
mov
pop
dec
push
icebp
mov
ds
call
xor
clc
cmp
mov
xor
js
jo
push
sbb
sub
xchg
inc
sub
in
xor
aad
jno
call
mov
adc
fisubl
mov
pop
jns
cmp
push
in
mov
pop
push
jb
movsb
subl
jmp
ljmp
les
call
leave
pop
pop
dec
lcall
in
das
cmp
hlt
daa
notb
jmp
into
lock
pop
push
xchg
sub
dec
push
cld
cli
stos
or
inc
dec
jae
mov
mov
leave
xor
push
popa
sbb
fwait
jne
push
in
dec
jmp
mov
inc
mov
xchg
cmp
sti
mov
or
pop
xchg
lods
mull
lock
lcall
xor
fcmovnu
xlat
lret
bound
repnz
dec
icebp
es
lcall
dec
mov
or
leave
pop
mov
adc
fisttpll
sub
pop
push
push
pop
test
mov
insb
mov
rcrb
xchg
sbb
out
add
gs
push
push
lea
sahf
mov
mov
orl
and
es
mov
and
cs
sub
pop
inc
xor
pop
cmc
cmp
lock
dec
xchg
mov
fcom
pop
js
dec
fnstcw
jns
insl
lock
dec
cwtl
push
jge
jl
cmpsl
push
xor
ret
pop
mov
ret
pushf
aas
xchg
push
ja
enter
adc
or
pop
mov
in
stos
dec
std
sub
adc
test
mov
xchg
ljmp
xor
xchg
cmpsb
clc
repnz
sbb
xchg
data16
paddw
adc
xor
adc
iret
imul
cld
jb
xchg
mov
or
inc
mov
inc
and
adc
mov
xor
add
stc
inc
aaa
xchg
mov
bnd
ljmp
and
pop
xchg
push
adc
js
mov
inc
fldt
cs
divl
cmp
cli
ficompl
mov
cmp
dec
stc
mov
and
dec
jle
pop
ja
push
xchg
jnp
iret
sbb
or
loop
cli
jo
mov
jmp
pop
jecxz
jmp
icebp
inc
pushf
les
fs
int
jo
cmp
arpl
hlt
mov
mov
mov
ja
lods
mov
fsin
xor
push
ret
dec
adc
mov
rcll
ljmp
aas
add
in
nop
cmp
movsb
jb
pop
adc
clc
dec
adc
fwait
pusha
loop
sub
xor
mov
pop
sahf
xorl
add
fiadds
mov
and
mov
or
add
fsubrl
xor
inc
inc
add
sbbl
push
cmp
adc
add
adc
push
sbb
sub
packssdw
test
lods
fs
lds
in
hlt
add
cmc
inc
xlat
sub
adc
and
lahf
and
mov
jb
lock
sbb
xchg
push
scas
lds
pop
or
stos
inc
add
inc
pop
ds
cmp
into
or
orl
push
or
push
xchg
adc
mov
iret
mov
daa
xor
jp
cmp
xor
nop
sub
fbld
movsl
mov
test
sbb
call
test
jecxz
cld
mov
add
lahf
mov
jge
inc
fidivs
jb
adc
push
daa
cmpsl
mov
adc
ds
pop
xchg
mov
push
inc
pop
fildll
add
push
sub
inc
lret
sahf
mov
lea
lea
and
xchg
cltd
mov
mov
cli
arpl
adc
insb
cmp
xor
dec
divb
pop
loop
fcomps
jg
faddl
inc
or
xor
xor
loopne
sbb
jmp
loopne
mov
mov
ret
sar
mov
xchg
or
arpl
dec
lahf
sbb
loopne
fmull
mov
js
ss
je
mov
mov
sub
xchg
pop
adc
fwait
lret
shll
adc
mov
test
in
xchg
mov
jns
pop
stos
fwait
xchg
mov
pop
push
and
outsb
cwtl
jbe
dec
adc
scas
mov
and
mov
mov
inc
adc
jl
xor
or
decb
aas
das
aad
dec
subb
fwait
icebp
add
pop
loopne
mov
jg
orb
mov
out
xor
packsswb
push
sub
cmc
xchg
jno
ficomps
add
jge
aas
jb
cmp
shlb
scas
xchg
stos
xchg
repz
mov
lods
sub
sbb
nop
pop
rol
mov
push
jge
push
mov
dec
sub
add
push
pop
iret
mov
imul
dec
notl
and
dec
pop
xchg
test
repz
je
popa
andl
push
rorl
lods
xchg
out
jo
mov
cmpps
loop
stc
sbb
mov
sub
leave
fs
cmpsb
pop
inc
sbb
push
or
lock
inc
push
cmp
into
shrl
and
mov
or
jns
push
push
iret
sub
mov
jbe
ja
sub
sbb
jmp
adc
pusha
mov
out
inc
adc
daa
xchg
sub
mov
dec
sbb
aad
xor
leave
clc
movsb
outsb
fnstcw
xor
mov
pop
ss
mov
scas
xor
xor
xor
pop
sbb
push
mov
jbe
pop
sub
movsb
mov
mov
inc
mov
movsb
addr16
stc
dec
insb
outsb
mov
fisubs
bound
cmp
adc
out
pop
test
aad
hlt
loopne
add
pusha
int3
cmp
test
mov
clc
sbb
imul
rcrl
repz
rorb
call
add
int3
cwtl
mov
xchg
push
fcoms
insb
fisttps
xchg
in
push
or
mov
mov
shrl
int3
test
lea
jno
aad
push
jo
xor
dec
dec
jecxz
inc
jns
add
fs
add
inc
jl
cmpsl
fmuls
scas
test
daa
xchg
add
jp
xor
push
outsb
push
sar
aam
outsl
dec
fs
arpl
pop
lods
filds
mov
loopne
or
sub
pop
ds
scas
aam
out
cwtl
das
mov
insb
mov
outsb
lret
cmp
test
xchg
inc
jo
fidivrl
xchg
sbb
jno
xchg
out
or
outsb
pop
inc
mov
adc
push
push
pushf
inc
notl
ja
push
inc
lahf
and
inc
mov
dec
inc
inc
push
add
add
sbb
mov
xchg
inc
or
cli
lret
rolb
aaa
xchg
enter
cld
dec
test
test
cli
xor
fistpll
xchg
cmp
add
jg
push
ss
mov
testl
movsb
add
and
mov
outsb
int3
inc
add
sti
es
xor
xor
imul
mov
sub
pop
inc
pop
add
outsb
test
mov
adc
jae
repz
outsb
inc
repz
xchg
fstpt
icebp
fnstsw
test
adc
sbb
or
add
lds
popa
mov
sbb
jp
adc
in
lret
movsl
sbb
jg
rolb
mov
or
out
lock
div
or
orl
push
xchg
cmpsl
or
mov
sub
and
aam
dec
xchg
push
and
jbe
sahf
push
rep
les
mov
bound
inc
xor
popf
fs
lods
push
lahf
or
jmp
mov
lods
cmp
rolb
icebp
orl
jp
gs
insb
mov
fmull
cmp
fcmovb
pop
sti
dec
mov
xchg
cli
lahf
push
adc
pop
push
mov
movsl
inc
inc
insb
ficoms
es
jbe
out
insb
insb
hlt
gs
pusha
dec
int
lods
test
mov
lea
jbe
repz
push
lds
je
inc
dec
fdiv
in
shlb
jg
push
xor
and
aam
ret
xchg
imul
ljmp
test
testl
imul
add
mov
mov
jb
push
xor
pusha
cwtl
push
sets
cltd
mov
lds
or
dec
jns
push
pop
push
jl
divb
jmp
dec
add
out
ds
call
push
bound
xor
dec
add
fwait
adc
lcall
cmp
cmp
xchg
test
mov
push
in
push
imul
lahf
imul
int3
cmp
xor
cmpsb
icebp
mov
adc
fwait
sbb
out
mov
lock
jnp
mov
mov
popl
cmpsl
or
insl
orl
insl
mov
inc
xor
mov
push
jnp
lds
push
imul
push
fwait
test
and
insb
xchg
pop
push
out
cltd
and
imul
pop
inc
mov
lret
insb
loopne
sbb
inc
dec
xchg
push
ret
cwtl
scas
test
dec
xchg
cmp
push
xor
mov
out
and
cmp
inc
js
push
adc
mov
mov
jmp
pop
repz
push
inc
ficoml
repnz
jb
jo
pop
xchg
mov
mov
mov
or
nop
jns
mov
mov
cltd
bound
dec
dec
adc
sub
xchg
mov
ficoml
pop
mov
jns
push
fdivrl
inc
out
add
mov
lcall
sarl
fwait
aam
jmp
or
xor
stos
addr16
push
in
xor
add
sub
mov
dec
jge
aad
std
sbb
mul
mov
push
pop
xor
adc
push
stos
mov
push
push
or
inc
outsl
scas
cld
cmp
cwtl
inc
xor
push
loope
mov
iret
sub
enter
cwtl
sbb
cmp
ljmp
es
out
push
stos
cmp
dec
mov
dec
test
icebp
cmp
cmovp
out
popa
adc
jmp
insl
in
jp
out
sarl
scas
test
jmp
xchg
int
sti
mov
xor
dec
adc
mov
sub
fldl
dec
mov
daa
adc
mov
mov
shll
mov
add
xchg
dec
cmpl
or
adc
mov
mov
dec
sub
std
in
lods
movsb
xchg
loope
jnp
xchg
mov
pop
sbb
aas
test
fs
rcrl
cmpsl
and
cld
js
dec
xchg
pop
pop
cmp
aad
test
jo
nop
stos
adc
rcrb
iret
sub
xchg
push
inc
roll
jo
js
popa
or
xorb
ds
data16
mov
pop
fucom
lcall
dec
mov
cld
scas
mov
pop
mov
adcb
push
test
xchg
lcall
push
mov
leave
or
scas
mov
sub
ret
cmp
pop
add
psubusw
sbb
lock
int3
jle
jl
sub
cmpsb
fidivrs
mov
stos
cli
xchg
sti
inc
jle
shrb
push
or
rcll
push
fucomip
sbb
sbb
hlt
pop
cmp
dec
mov
xchg
add
aaa
or
insb
inc
repz
jne
push
or
andb
pop
jmp
fimull
xchg
addl
ljmp
sub
pop
divl
mov
jge
xchg
add
cmp
pop
sahf
dec
mov
xor
and
cmpsb
inc
or
fisubs
cmp
sub
aas
sbb
arpl
jl
push
mov
sub
fwait
into
lods
lret
add
mov
sub
mov
lcall
loope
test
shll
mov
das
mov
fs
mov
jle
ljmp
inc
dec
or
aad
jecxz
cmp
pop
pop
mov
add
mov
xchg
push
sbb
popf
dec
xchg
push
push
add
sarl
std
stos
dec
ret
andb
adc
inc
int
cmp
pusha
insb
out
cwtl
ret
fisubrl
test
clc
pop
sub
mov
jo
inc
repz
push
dec
push
and
push
clc
int3
push
imul
dec
adc
fsts
movsb
addr16
gs
repnz
icebp
ror
mov
mov
lods
cld
pop
add
add
enter
aaa
push
je
cwtl
pop
lea
mov
hlt
popl
mull
fwait
test
xor
fistl
ja
out
out
jnp
cmp
sbb
or
jmp
mov
hlt
pop
popa
imul
dec
ja
mov
jp
inc
dec
sbb
fimuls
popa
add
repnz
push
inc
xchg
pop
jp
cmpsb
int
or
gs
in
out
mov
stc
repnz
mov
cmp
addr16
dec
sbb
jns
push
pop
mov
mov
mov
dec
out
sub
call
addr16
mov
cs
daa
in
cmp
fcmovb
arpl
cmp
nop
sub
push
mov
or
pop
aad
je
inc
into
jmp
mov
sub
imul
out
subl
negl
insl
divb
inc
fistps
dec
dec
xchg
gs
adc
cmp
nop
repnz
stc
sbb
sti
sti
jl
ljmp
sub
xchg
bnd
aad
and
mov
add
cmp
cwtl
lea
leave
cld
jmp
push
sbb
pop
in
and
add
loope
enter
mov
pop
xchg
rcl
in
cmc
lods
xchg
orl
cmc
test
imul
test
test
insb
jns
dec
iret
test
stc
cltd
sbb
add
nop
imul
xor
add
jae
imul
inc
add
ret
add
jecxz
push
add
mov
or
imul
mov
mov
loopne
sar
aaa
inc
mov
cwtl
sbb
xchg
imul
fxch
mov
ss
shlb
jl
mov
mov
inc
ja
subl
sbb
dec
dec
insl
int
jg
lods
mov
add
notl
pop
cltd
pop
xchg
xchg
movsb
aas
jge
sbb
sub
inc
pop
jno
sbb
xor
sub
aad
sub
mov
pop
push
gs
into
or
sbb
mov
rcrl
mov
shl
cmpsl
mov
dec
mov
xchg
das
dec
mov
mov
stos
ret
repnz
negb
inc
dec
imul
es
xorl
out
mov
test
adc
in
nop
jg
icebp
subb
dec
cmp
sbb
add
jg
insl
es
test
mov
pop
stos
adc
sbb
std
xor
jnp
add
and
cmpl
push
out
loope
and
lds
sbb
pop
or
clc
sbb
mov
jle
sti
outsl
xchg
ljmp
shlb
sbb
insb
mov
test
aam
push
loopne
int
mov
sbb
leavew
imul
mov
inc
imul
repz
out
popf
fcoms
dec
aad
xchg
gs
bound
icebp
andl
inc
das
xchg
pop
cmp
js
sub
ror
fsts
xor
jne
aad
add
cmp
ret
xlat
test
add
data16
insb
pop
sbb
push
les
out
sarl
arpl
and
pop
loope
stos
and
jns
add
lods
iret
push
xorl
or
xchg
xor
stos
jne
test
test
movsl
mov
jae
daa
mov
cld
xchg
lcall
mov
pop
cmpsb
nop
repz
cmp
push
pop
icebp
ds
lods
jbe
mov
jae
mov
jns
pop
pushf
rcrl
stos
int
insl
aas
sbb
mov
mov
fistpll
stos
insl
sbb
lahf
xchg
int
pop
inc
pushw
and
or
dec
in
cmp
cmp
out
fs
and
lea
fwait
mov
in
adc
push
xchg
daa
jo
push
pop
gs
std
push
pop
ret
test
cs
into
fs
call
push
jg
and
popa
test
nop
mov
pop
lcall
mov
pusha
lcall
mov
test
sbb
enter
xchg
sbb
sbb
hlt
pop
jle
mov
iret
mov
in
jnp
jae
cs
adc
mov
push
mov
dec
out
push
mov
aas
int3
jb
sti
push
stos
lcall
mov
mov
sti
or
adc
addps
in
call
inc
or
cmpsb
dec
pop
fadd
into
mov
pop
xchg
lds
cmp
popa
lods
scas
fldt
iret
popf
loopne
mov
sub
cmpsl
stos
pop
cli
and
add
clc
mov
pop
insl
cltd
mov
xchg
in
shll
out
xor
repnz
adc
insb
push
out
mov
xchg
push
mov
mov
fwait
xor
jle
rcrl
test
cmp
in
ret
scas
leave
cld
out
fnstenv
push
pop
call
inc
cmp
pushf
jbe
lret
jne
pushf
aam
iret
in
and
pop
fs
adc
lahf
inc
push
add
xchg
fmul
idivl
add
ja
and
std
popf
ret
aas
iret
mov
push
lds
cmpb
dec
mov
fbld
xchg
mov
xchg
sbb
iret
xchg
leave
xor
xor
mov
lcall
sbb
push
je
push
mov
mov
jl
jmp
xorl
es
sub
pushf
push
mov
inc
push
cmp
fiadds
mov
nop
cli
fstpt
imul
lods
mov
pop
arpl
lcall
dec
mov
bound
adc
mov
cmp
mov
push
pop
in
inc
idivl
inc
stc
dec
loope
mov
movsb
mov
sbb
cmp
cmp
scas
and
fistpll
mov
sti
xchg
mov
sub
xor
inc
pop
sarl
add
repnz
loopne
rcll
add
mov
mov
cmpl
loopne
scas
jp
push
insb
les
xlat
jae
xlat
pop
and
sahf
fadd
sub
mov
mov
bound
and
inc
add
mov
mov
mov
adc
push
inc
mov
adc
mov
mov
sahf
xchg
pop
jecxz
scas
xchg
icebp
insb
or
cmp
mov
adc
jp
imul
imul
cli
cmp
or
int3
enter
xor
and
inc
movsl
stos
mov
dec
adc
enter
int3
popf
clc
repz
jae
test
adc
push
int3
mov
dec
hlt
out
push
lods
mov
add
imulb
rol
cmp
daa
stos
add
in
arpl
and
fisubrs
fadd
stc
shrb
mov
dec
sbb
jns
les
adc
outsb
jnp
pop
sbb
loopne
cmpsl
lods
and
cld
pop
add
aaa
imul
mov
iret
sbb
mov
repnz
adc
or
cmpsb
scas
mov
jne
xor
adc
add
or
cmp
jg
adc
imul
mov
test
sub
push
ljmp
outsl
sub
stos
add
sbb
in
bound
mov
sub
loope
xlat
dec
bts
lods
fs
push
dec
into
cwtl
es
add
jnp
das
bound
xor
shrb
cmp
mov
push
insb
into
xchg
xchg
test
inc
add
push
mov
dec
movsb
cmp
push
addr16
mov
enter
cld
ret
pop
jbe
gs
call
pushf
cli
mov
imul
les
std
test
je
stc
out
mov
xchg
scas
or
in
mov
aaa
mov
fistpll
fwait
jnp
inc
rolb
imul
mov
test
push
div
pop
jns
lahf
pop
cmp
fstpt
js
pop
push
or
test
stc
pop
xchg
fistpl
stc
push
test
adc
dec
loop
add
je
stos
pop
cld
cmc
sub
sbb
add
xor
test
xor
adc
ret
cmp
in
mov
mov
iret
aad
in
sbb
addr16
int
outsb
mov
lret
xchg
xchg
cmc
push
mov
fs
push
or
jmp
dec
cwtl
shrl
movsb
mov
lods
dec
push
mov
or
cli
cmp
stos
jl
adc
std
fxch
aaa
dec
or
xor
insb
mov
fadd
loop
push
cmp
pop
data16
std
insb
jo
aas
mov
bound
data16
in
loopne
cmp
mov
dec
jmp
lods
bnd
in
and
lahf
call
and
add
frstor
jle
push
dec
or
sbb
add
vaddpd
add
scas
sub
fsubp
aas
cs
xchg
push
roll
into
xchg
sbb
int
xor
dec
xor
jl
je
lahf
test
pop
test
dec
mov
mov
xor
pop
mov
pop
inc
iret
xchg
add
fadds
inc
mov
fcompl
pusha
int
xor
cmp
mov
rep
lock
inc
jmp
lret
push
int
loope
cmp
in
imul
call
jle
in
xchg
push
mov
xchg
jne
sbb
or
cmp
inc
pushf
jo
data16
jae
imul
aam
and
or
lods
jge
js
fldl
push
mov
sarl
inc
ss
sbb
test
mov
cmp
push
clc
mov
movsl
ror
daa
inc
inc
dec
mov
bound
jb
xchg
dec
cltd
iret
jmp
fists
mov
and
lds
cmp
mov
lock
mov
loopne
enter
rclb
enter
pop
nop
mov
jecxz
dec
inc
lcall
pop
xor
sub
int
mov
popa
add
sti
dec
push
hlt
push
or
sub
adcb
out
mov
mov
out
push
pop
mov
cmp
rclb
push
fidivs
ss
mov
add
mov
lret
rorl
mov
dec
fisttps
lahf
adcb
push
push
loope
mov
sbb
sbb
xchg
loopne
sbbb
ss
or
cltd
add
jne
fisubs
mov
ja
pop
pusha
dec
aad
jmp
clc
xchg
das
mov
scas
stc
and
xor
insb
lods
sahf
test
roll
sbb
das
adc
jp
add
xchg
adc
aas
mov
cmp
fiaddl
mov
xchg
lds
std
pop
out
je
jae
jge
sub
ljmp
cmp
paddsb
push
xchg
dec
dec
sahf
push
ffreep
add
mov
imul
add
jmp
adc
mov
lahf
pop
data16
popf
dec
fwait
stos
add
xchg
inc
data16
or
fldcw
lods
jl
xchg
data16
pusha
ljmp
repnz
sub
add
xchg
push
inc
lds
jmp
scas
pusha
test
push
xor
ljmp
push
jmp
test
push
loop
xchg
mov
rorb
movsl
add
push
jmp
and
roll
in
lds
mov
es
mov
clc
or
and
add
dec
daa
or
shl
cmp
adc
mov
dec
xchg
rorl
aad
xor
mov
mov
fcomp
insl
xchg
cmp
sub
arpl
pop
sbb
nop
sub
cmp
aam
idivl
in
xchg
and
lret
popa
adcl
out
xchg
or
sub
roll
or
xor
das
shl
pop
test
push
sbb
sti
hlt
lahf
leave
pop
out
and
cmpsb
int
call
test
fsubrl
xchg
pushf
ret
loop
sbb
nop
imul
hlt
sbb
fisubl
inc
inc
dec
and
or
push
sbb
popa
push
sub
dec
cmp
add
and
xor
xor
mov
adc
repz
adc
xchg
fldenv
push
pop
shlb
ret
mov
push
jmp
addb
push
scas
xor
dec
pushf
mov
push
fsubl
movsl
adc
jp
cmp
cs
inc
sub
pusha
sbb
cmc
cmp
cmp
mov
les
icebp
xchg
xlat
out
xor
fs
adcl
dec
dec
lock
out
test
les
pop
push
fstl
mov
mov
stos
pop
das
rcrl
inc
and
dec
mov
push
xor
or
les
dec
and
movsl
jg
xchg
cwtl
jns
test
hlt
mov
pop
mov
mov
mov
andl
push
jp
test
jo
adc
ror
pushf
icebp
fnstcw
cmpsl
rclb
mov
pop
outsl
pop
fisttpll
dec
adc
test
cwtl
addr16
fmuls
test
push
fisttpl
je
cmp
shlb
jmp
mov
test
jbe
xchg
fnstsw
into
jo
push
adc
or
xchg
xor
inc
icebp
cs
lods
mov
popf
out
test
lds
mov
cmc
adc
out
test
mov
inc
pop
push
inc
jae
pop
ljmp
shl
ljmp
shlb
or
fsub
imul
call
stc
sbb
les
mov
test
jo,pn
pop
lret
sar
shrl
push
xchg
or
daa
sbb
in
jecxz
adc
inc
mov
push
dec
mov
insl
xor
pop
push
sbb
jp
pop
pop
mov
loopne
addr16
mov
loopne
aad
scas
mov
or
mov
subl
pushf
adc
xor
sarb
aam
fldenv
sbb
add
xchg
cmp
xchg
imul
arpl
push
or
push
rol
dec
xchg
jo
loop
xlat
add
mov
push
xor
push
sahf
add
test
mov
in
push
adc
adc
dec
mov
or
cmp
scas
inc
sti
adc
out
inc
cmpsl
push
pushf
push
sbb
inc
jecxz
add
stc
lods
imull
mov
ja
xor
sbbb
ja
idivb
ja
sbb
fidivrl
adc
pop
ss
mov
decl
xlat
fwait
mov
push
and
fs
aaa
cmp
sbb
mov
pop
fs
jmp
cmp
mov
inc
dec
push
lods
inc
mov
dec
pop
xchg
mov
lret
dec
nop
pop
jo
cwtl
xlat
or
fnsetpm(287
test
sbb
and
aad
cmp
imul
loope
cli
das
push
fbld
hlt
jno
push
enter
sub
pop
mov
test
sub
out
outsl
mov
xor
sarb
inc
mov
pop
push
arpl
xchg
popf
daa
pop
push
xor
mov
lea
nop
push
jecxz
adcb
cli
sbb
add
inc
push
arpl
sub
daa
mov
pop
aaa
es
pop
push
push
sbb
in
push
js
or
jns
mov
stc
xor
std
jmp
cmp
shl
div
pop
int
dec
in
fimull
jbe
arpl
mov
jae
mov
into
add
nop
dec
ljmp
test
jmp
sbb
dec
dec
mov
cwtl
cs
shrb
movsl
push
jg
jne
mov
lret
fs
jl
pop
mov
xchg
xor
loopne
adc
aam
rolb
jge
mov
cli
pusha
sbb
push
rcr
dec
out
aas
in
cmp
lds
push
mov
call
pop
and
aam
aam
mov
std
and
mov
int3
scas
aaa
repnz
adc
or
lods
sbb
ret
add
aad
mov
cmpsb
jb
in
data16
cmp
sbb
aad
mov
dec
sarl
addr16
movsb
jge
mov
cld
in
inc
mov
gs
push
xchg
mov
daa
cmp
clc
lcall
xchg
cmp
out
pop
fldenv
test
sti
into
aas
icebp
jns
sti
or
and
mov
jle
pop
add
push
mov
inc
ds
sti
dec
dec
aaa
bound
xchg
mov
clc
je
and
scas
ljmp
repz
sub
jne
leave
sub
and
in
inc
outsl
fdivs
stc
xchg
jno
inc
fcmovnu
lahf
pop
and
adcl
cwtl
scas
sbb
rcl
mov
mov
lods
test
repnz
jmp
mov
mov
or
out
cmpl
sub
jle
add
push
js
or
mov
lret
dec
aas
in
fs
clc
jg
sti
daa
cmp
and
ljmp
jge
mov
inc
lock
sbb
mov
push
xchg
scas
data16
inc
dec
jecxz
je
into
jp
aaa
inc
into
jmp
pop
dec
movsb
je
mov
in
mov
imul
sarb
mov
push
cmpb
mov
sti
shrl
scas
jo
lds
mov
xchg
pushf
lods
dec
mov
jmp
push
lods
pop
ljmp
loopne
fisttps
scas
in
pusha
mov
mov
shll
fs
adc
inc
hlt
jmp
xor
sti
in
inc
aaa
pop
ret
mov
mov
adc
out
push
inc
push
out
rorl
notb
push
clc
mov
mov
mov
insl
adc
push
mov
repz
cwtl
mov
stos
in
xchg
xchg
pusha
movsl
dec
movsl
das
fwait
dec
push
in
add
xchg
imul
mulb
cli
xor
push
or
inc
loop
and
jb
scas
clc
inc
fcmovu
incl
ss
mov
add
sbb
push
jg
cli
ljmp
mov
sub
scas
adc
lret
cmp
push
loope
pop
or
push
sub
lods
sub
xchg
xor
cmp
dec
jecxz
lea
loopne
ljmp
adc
cmp
flds
cli
ficompl
roll
mov
xchg
push
cmp
cmp
jne
mov
mov
inc
in
cli
xchg
add
cs
mov
loope
mov
std
cmp
stos
push
mov
fwait
out
inc
fnstsw
mov
xor
sbb
jg
addr16
xchg
xchg
sub
std
andl
push
push
test
sub
cld
cmc
xlat
pop
xchg
adc
test
adc
in
dec
xchg
neg
pop
push
jno
mov
xchg
aad
cmp
mov
lods
fcomip
lods
cmp
cs
mov
negb
pop
js
push
mov
loopne
xlat
enter
lcall
add
pop
pop
sbb
rcrb
into
lds
mov
test
or
subl
dec
and
test
fisttpl
sbb
xor
jmp
push
mov
pusha
dec
sbb
mov
mov
inc
adc
sar
std
cmp
push
int3
dec
pop
inc
lahf
jne
mov
pop
inc
add
xchg
push
pop
outsb
add
movhps
fcmovne
cld
xor
dec
lock
xor
mov
sbb
data16
je
ss
jl
fidivrl
and
dec
lret
ss
stos
adc
int3
ret
out
inc
outsb
jg
push
lea
clc
add
mov
repnz
scas
add
cwtl
xchg
movsl
out
mov
sti
cwtl
push
sub
cmp
aas
mov
cmp
lea
andl
decl
enter
js
mov
push
mov
mov
shlb
mov
xchg
mov
pop
roll
lahf
into
fadds
xchg
lret
test
dec
dec
jl
push
push
mov
cmp
lock
inc
inc
fiadds
jle
lahf
mov
jg
dec
adc
xchg
mov
adc
out
and
test
in
cmp
call
frstor
sbb
xchg
out
pop
sub
mov
lcall
mov
orl
mov
bound
nop
mov
jmp
in
cmp
xchg
rclb
adc
repnz
pop
mov
inc
sahf
sbb
or
jae
mov
mov
lock
or
stos
inc
or
xor
cmc
daa
mov
lods
inc
jns
jecxz
jecxz
gs
mov
stc
ja
ljmp
scas
mov
popf
enter
and
mov
mov
push
sahf
xchg
jge
add
mov
pop
sub
dec
icebp
push
in
ret
dec
xchg
lock
jl
fistpl
pop
loopne
cmpsl
shl
sub
sub
andps
pop
mov
sbb
mov
adc
jle
pop
insb
cmp
jbe
out
lret
dec
test
sub
testb
cmp
xchg
mov
adc
jl
sub
mov
inc
cs
fcmovu
sub
cmp
mov
sub
jnp
jl
lcall
jl
pop
mov
push
inc
mov
xchg
test
mov
mull
notb
jb
mov
jmp
test
xor
sbb
mov
xchg
ljmp
xorb
or
cli
popa
and
data16
lahf
sub
outsl
ss
movsl
cltd
dec
fwait
inc
push
pop
leave
adc
sbb
xor
test
es
xor
out
inc
or
ret
or
popf
mov
or
in
outsb
push
cmc
or
mov
insl
fs
mov
andl
in
ret
mov
fidivrl
repnz
mov
pop
pop
pop
outsb
push
inc
inc
out
ror
push
xchg
shlb
cwtl
mov
xor
std
in
inc
idivb
aam
popf
mov
adc
add
aas
adc
outsb
ret
das
in
sbb
sub
mov
mov
mov
orl
repnz
xor
cmp
adc
outsb
pop
sti
stos
int
push
lods
inc
mov
icebp
fs
arpl
out
stc
jbe
push
push
test
imul
popf
ljmp
out
stc
rol
icebp
cld
in
pop
call
jne
push
xor
daa
mov
test
loop
adc
mov
cmp
outsl
test
mov
xor
pop
mov
faddl
dec
push
jo
ror
mov
das
ds
daa
nop
sahf
ds
and
lods
jo
or
std
adc
xchg
lret
push
lods
stos
inc
insb
add
cmp
pop
mov
and
idivb
jg
sbb
jg
mov
pushf
lds
push
and
add
jo
popf
jae
adc
pshufw
jmp
mov
dec
bound
adc
scas
lcall
mov
dec
into
mov
xor
popa
addl
jns
enter
adc
push
data16
std
mov
xchg
adcl
mov
cld
repnz
stos
jns
fcmovnb
loopne
xorl
out
xlat
add
mov
bound
imul
mov
or
repz
mov
adc
sahf
mov
mov
push
imul
pushf
insl
inc
jge
adc
je
sub
adc
dec
daa
xlat
test
lds
out
dec
xor
in
pop
mov
ljmp
adcb
dec
xchg
inc
mov
popf
test
into
sahf
insl
or
mov
sti
loope
xor
mov
cltd
iret
mov
lret
test
add
stos
sub
into
lds
mov
dec
inc
dec
int
xchg
sbb
pop
and
inc
jge
iret
shrb
add
ja
daa
pusha
xchg
or
movsl
fwait
or
jne
pop
xor
mov
rorb
or
aad
ss
xor
popa
fldt
inc
imulb
sub
mov
sub
mov
sub
xchg
mov
fldl
stc
cmp
jecxz
fisttpll
dec
jg
sbb
xor
lret
test
add
or
and
pop
inc
push
mov
fidivrs
ja
lock
fisttps
test
or
loope
subl
iret
icebp
ret
xchg
inc
rcll
push
xor
mov
or
xor
cltd
mov
inc
xchg
pop
fldenv
xchg
fsubrs
adc
mov
inc
xchg
and
or
pop
push
ja
push
xorl
sub
clc
push
aas
cltd
lret
xchg
push
push
pop
jecxz
pop
mov
lods
int3
xchg
dec
arpl
popl
rcrb
stc
ret
pop
shlb
rclb
daa
mov
dec
sbb
xlat
aaa
outsl
sub
pop
pop
sub
add
push
mov
or
pop
in
pop
shrl
fdivrl
pop
jae
stc
push
mov
cmc
jae
xchg
and
out
adc
std
and
push
lea
mov
jmp
lret
cmp
adc
xchg
sbb
jnp
ret
fnstcw
stos
cmp
dec
pop
ljmp
push
test
push
sahf
mov
shrl
test
das
add
fisubl
push
and
jae
pop
push
gs
shlb
into
xchg
push
sbb
cwtl
aas
sub
cmp
outsl
xchg
cmp
out
jl
sqrtps
pop
sbb
xor
xlat
ss
pop
ss
add
popa
dec
lods
dec
or
pop
movsb
js
aad
inc
adc
int
push
dec
popf
movsl
or
push
incl
or
jmp
insl
into
mov
lret
mov
pop
cwtl
subb
adc
in
mov
fs
popf
pop
cmp
xchg
jle
gs
xchg
fsts
pop
movsb
xor
add
or
outsl
inc
repnz
dec
mov
scas
inc
lea
push
or
ljmp
push
fldenv
hlt
sub
negb
aas
sbb
dec
jp
lea
icebp
dec
adc
mov
and
pop
arpl
adc
and
ss
cld
add
icebp
movsl
pop
xchg
test
push
imul
mov
xchg
and
jb
cld
jl
sub
fidivs
stos
push
adc
pop
movsb
stos
sub
add
mov
push
mov
popl
out
test
lea
or
hlt
add
inc
cmp
jmp
adc
scas
testl
in
int3
jne
leave
xor
mov
sahf
in
sbbl
mov
mov
stc
enter
and
stos
mov
lcall
lock
arpl
outsb
scas
hlt
add
mov
inc
xchg
dec
push
xchg
lahf
pop
sub
push
xchg
stc
pushf
shll
and
rcrl
jge
cwtl
push
fisttpll
and
hlt
scas
inc
bound
or
loope
xchg
fistpl
fcom
jle
adc
pop
xchg
push
lahf
out
mov
repnz
xchg
repz
inc
fdivrl
loope
adc
dec
mov
xlat
mov
fdiv
pop
mov
fisttpll
mov
ljmp
mov
push
sub
inc
cmpsb
repnz
repnz
push
icebp
mov
es
fstp
scas
gs
push
outsl
loopne
add
clc
push
iret
out
decb
out
dec
pop
test
data16
xchg
mov
cmpsl
jle
es
fistl
cmp
jecxz
xlat
and
icebp
mov
inc
dec
ficoml
rclb
icebp
mov
sbb
lahf
cmp
sub
cmc
fiaddl
cmpsl
sbbb
idivl
clc
push
or
xchg
fmul
repz
out
jle
add
add
shr
in
xchg
lock
das
push
in
mov
jg
stc
xchg
outsb
out
add
leave
in
insl
xor
mov
jae
jge
adc
mov
cmpsb
sbb
mov
jp
outsl
jne
imul
call
out
mov
sbb
stos
and
add
call
jmp
sbb
add
mov
mov
lock
sbb
fistpll
mov
test
fldenv
inc
ss
outsl
push
gs
dec
int
push
sahf
ss
mov
inc
mov
jns
test
cld
adc
cli
jecxz
adc
ja
jne
pop
jne
pop
mov
sbb
test
notl
mov
loop
add
movsl
cmp
dec
inc
daa
xchg
mov
or
js
rcr
icebp
imul
cmp
out
push
sbb
leave
mov
xlat
adc
xorb
mov
repz
jae
clc
sub
mov
dec
mov
loope
fidivrl
mov
mov
test
xchg
jnp
je
dec
repnz
mov
stos
test
mov
daa
push
dec
jg
dec
mov
adc
and
jge
push
jns
sbb
sbb
cmp
in
ja
std
mov
sbb
xlat
add
ljmp
xor
push
jnp
jl
rclb
mov
push
add
push
aaa
inc
sbb
add
add
adc
ret
push
mov
mov
mov
push
adc
lods
lods
je
mov
inc
push
mov
fistps
cmp
mov
inc
pop
mov
loopne
jo
mov
fisttpll
sub
xor
in
xchg
dec
cmp
cmp
sub
xor
sbb
leave
mov
xor
ds
push
sub
aas
ret
lcall
push
in
test
loope
js
mov
push
int
pushf
mov
pop
out
mov
sub
mov
mov
lcall
or
cmp
mov
sub
or
call
inc
ss
testl
lahf
jae
sbb
sub
jg
das
cmpsb
and
add
mov
or
sbb
les
imul
fmulp
dec
adc
in
xchg
jb
mov
and
mov
inc
cmpsb
and
dec
pop
pop
jle
xchg
shlb
out
jg
aas
xor
mov
jle
dec
pop
and
xor
stos
sahf
jnp
mov
jbe
hlt
movsl
push
leave
adc
mov
clc
push
pop
cmp
aam
cmp
fwait
xchg
xor
push
mov
ss
movsb
xor
xlat
in
cmpsl
cmpsb
inc
aad
push
es
mov
loopne
cld
loop
sub
enter
adc
scas
jl
nop
outsl
addb
jmp
pop
icebp
xchg
hlt
fimull
jp
stos
imul
cltd
xor
push
push
adc
test
outsl
movsl
leave
push
mov
in
mov
adc
lret
xchg
or
mov
mov
mov
int
mov
xor
in
pop
jo
lods
js
test
sub
xor
scas
cmpsb
push
add
add
pop
daa
and
insl
and
sbb
pop
outsl
mov
out
xchg
imul
lea
rorl
xor
pop
push
adc
sbb
pop
mov
test
ret
add
lret
xorl
sbb
lahf
push
out
loop
popa
xor
cltd
jecxz
aas
sbb
or
or
mov
sbb
push
xor
mov
add
lahf
jl
test
insb
fsubs
sbb
sub
test
xlat
push
jnp
cltd
sarl
shlb
add
fsin
jge
or
add
mov
jl
out
xchg
je
mov
mov
and
adc
cwtl
popf
pop
stos
or
ds
int3
push
cli
xchg
andb
not
jnp
or
mov
adc
shr
or
fisttps
dec
imul
aaa
dec
std
cld
sarl
push
push
imul
daa
cltd
shl
xchg
setne
add
pop
ljmp
push
ret
popf
fcmovu
mov
repnz
jne
insl
out
scas
xchg
mov
mov
add
add
sub
sub
mov
bnd
adc
mov
fcmovnbe
sub
mov
cld
sub
ret
shrb
jb
pop
pop
dec
xchg
stos
cli
notb
ljmp
rep
jecxz
fucomp
pop
jns
leave
mov
mov
test
mov
cmp
stc
cmpsl
jns
xor
inc
fmulp
sbb
addr16
lods
pop
cmc
int3
mov
xor
cli
sahf
rorl
mov
out
mov
lods
cmp
js
sti
fnstsw
jge
fmul
push
jbe
lock
xchg
sbb
int
add
or
xchg
fcmovnbe
ljmp
shll
stos
xchg
cld
add
mov
orb
cmp
jmp
pop
dec
sub
xor
divb
scas
lods
mov
into
lds
inc
push
aad
fwait
inc
test
and
daa
std
dec
notb
ss
lret
mov
in
adc
fidivl
add
cwtl
repnz
ret
cld
push
ja
jae
sbbl
pop
arpl
sbb
or
mov
movsl
push
jne
clc
adc
das
cmc
cmp
mov
sahf
testb
scas
xorl
ljmp
sti
repz
int
cli
aad
mov
cmp
in
jge
pop
adc
addr16
mov
and
xor
mov
out
xchg
inc
pop
mov
cmc
push
fmuls
mov
outsb
dec
pusha
imul
sub
push
stc
dec
pop
add
push
pop
loop
outsb
sbb
push
loop
pop
and
fcmovne
enter
incl
mov
je
sbb
rolb
lods
inc
test
cmp
rorb
es
mov
inc
pop
or
push
cmp
loope
mov
or
ja
inc
jb
mov
lods
sub
cltd
rorb
insl
fsubr
arpl
mov
jl
xor
and
test
outsl
mov
cmovo
daa
add
in
mov
std
pusha
or
mov
xchg
adc
mov
fcoms
jmp
scas
inc
xor
push
inc
inc
cmpsb
lea
jo
out
mov
mov
in
mov
push
data16
std
add
add
mov
dec
shll
shll
outsb
jae
add
push
mov
insl
jne
jno
xchg
mov
cmpsl
cmp
insb
js
cmp
pop
xor
mov
insl
adc
jbe
loop
xor
adc
mov
cwtl
idivb
cmp
mov
test
xchg
mov
cmp
cmp
idivb
pop
ljmp
out
inc
data16
jnp
inc
outsl
fs
inc
scas
popf
adc
rclb
pop
lock
icebp
jo
cld
sbb
dec
js
cmp
in
push
test
test
inc
les
inc
insl
int
fcmovbe
std
pop
and
sub
inc
lcall
jp
push
sub
xchg
cltd
adc
hlt
in
dec
clc
rorl
xchg
cmpsb
push
stc
clc
xchg
xchg
pop
jmp
inc
xchg
and
mov
scas
mov
dec
rolb
dec
lahf
cmpsb
mov
ret
jo
lds
mov
xor
popa
stc
cld
push
mov
mov
sti
sub
pop
add
hlt
shl
insb
inc
jmp
loopne
sbb
cmp
jns,pt
pop
clc
movsl
nop
mov
pop
sbb
pop
push
sbb
dec
sahf
lahf
mov
adc
sbb
mov
cli
pusha
sbb
cmpb
data16
testb
jo
imul
or
or
mov
sub
mov
stos
cmp
and
fnstenv
xor
xchg
shlb
xchg
sbb
mov
fwait
xchg
mov
imul
int
dec
cltd
int
cwtl
xchg
xchg
cld
sarl
stc
loop
xor
sbb
enter
fstpt
stos
sub
fisubrl
cmp
cltd
xor
stos
xchg
push
js
lret
pminub
add
add
cli
loop
adc
push
cmp
repz
ss
daa
fldcw
pushf
mov
fst
bound
or
sbb
inc
dec
and
in
push
add
aam
adc
stos
push
cmpsl
adc
mov
out
dec
push
xlat
dec
test
fidivl
je
lock
sub
pop
xchg
sti
stc
mov
push
mov
adc
addb
adc
aam
into
pop
or
popf
icebp
cltd
ss
outsb
add
sbb
mov
out
pop
jle
pop
fimull
rcll
inc
hlt
arpl
test
andl
add
or
lret
push
xchg
or
sbbl
jbe
and
mov
pop
cmc
nop
shrb
push
rcrb
ret
pushf
lods
jo
and
jo
sub
fidivl
mov
push
sbb
mov
sti
test
mov
mov
inc
jns
jmp
jbe
xor
enter
call
mov
cmp
data16
mov
mov
pusha
mov
mov
gs
push
and
jae
je
imul
dec
jnp
mov
jae
push
cmp
mov
imul
adc
xchg
test
cmp
ret
mov
rorl
or
mov
push
out
push
and
testb
cld
xor
lods
mov
xlat
shll
or
xchg
sub
testb
sbb
adc
lret
mov
rcrl
ss
daa
dec
jbe
mov
out
lds
int
icebp
into
test
out
idivl
imul
xor
sub
xchg
movsl
aaa
sub
cmpsb
das
pop
inc
pop
jecxz
in
and
mov
mov
mov
push
cmc
outsb
popf
adc
das
xchg
popf
out
mov
rorl
or
fists
ss
jl
and
push
xchg
add
mov
outsb
pop
sbb
jbe
or
cmp
and
pop
popf
lahf
sub
movsb
jg
or
xchg
mov
addl
test
lahf
cmp
test
movsb
xchg
xor
scas
pop
jge
or
mov
add
insl
and
in
jmp
cld
pop
daa
dec
mov
pushw
sub
sub
into
pop
adc
sub
jge
rorl
inc
add
or
sti
mov
mov
test
mov
in
cs
in
and
mov
jmp
cmp
jo
add
cmpsb
xchg
pop
pusha
cli
push
push
push
loopne
dec
fs
js
cmp
lods
int3
dec
hlt
mov
repnz
sub
pop
pop
xor
rcr
data16
sarl
inc
and
xor
sbb
push
xchg
fists
in
push
shrl
xor
fadds
or
idivb
mov
jns
jne
mov
imull
mov
and
cld
in
push
jmp
scas
sub
push
xchg
stc
jb
jmp
imul
bound
jmp
stos
shrl
dec
cmp
fdivs
push
inc
mov
xlat
mov
ret
repnz
xchg
pushf
cmpl
fwait
add
inc
sahf
xchg
pop
push
fmuls
testl
ljmp
out
or
xchg
enter
nop
adc
fstl
fsubr
push
jmp
mov
je
or
iret
mov
clc
inc
lods
fbstp
cmp
mov
adc
xor
int3
movl
shrb
popa
adc
pop
pop
ret
xchg
das
pop
lcall
lcall
imul
jge
xor
pop
push
adc
je
je
inc
add
outsl
cld
push
add
test
push
insb
jecxz
push
xchg
inc
xor
mov
out
push
fildll
lds
pop
test
jmp
push
jb
push
rorb
dec
ljmp
dec
lds
cmp
arpl
cmp
andl
lret
sub
or
sti
inc
pusha
mov
mov
dec
dec
cmc
cmp
mov
repnz
hlt
pusha
sub
out
mov
and
mov
mov
stos
fucom
xchg
pop
mov
and
adc
mov
sahf
int3
adc
pop
cltd
xchg
sub
dec
js
pop
mov
mov
in
popa
mov
push
outsl
adc
cltd
jbe
push
sub
fadds
xor
les
jge
or
push
rcr
jbe
hlt
pop
fiadds
jno
xchg
cs
jmp
push
cmp
and
adc
sbb
adc
in
fs
je
xchg
dec
enter
mov
or
ljmp
ret
ret
je
bound
sbb
inc
out
sbb
sub
ss
roll
lods
dec
into
daa
pushf
loop
pop
scas
sbb
js
adc
pushf
adc
inc
or
or
jo
int
lcall
aaa
daa
int3
nop
rolb
xchg
enter
cmp
mov
mov
lods
xor
xchg
mov
push
aad
insb
pop
into
jmp
rol
adc
sarl
fisttps
cwtl
js
add
imul
cmp
lret
cmp
ret
rcr
and
push
movsb
prefetch
fisttps
stc
jmp
imul
in
cmp
mov
cli
xchg
movsb
fists
mov
add
enter
inc
jo
pop
add
jnp
jmp
fcomp
adc
pop
sbb
push
dec
loop
mov
stos
sub
push
popf
sti
mov
xlat
push
mov
mov
mov
mov
dec
and
icebp
sahf
cmpl
insb
jl
xchg
into
scas
jbe
lods
push
mov
ret
add
lret
jb
outsl
pop
xchg
in
dec
movsl
sbb
pop
cli
mov
inc
adc
mov
jae
cs
push
test
and
jmp
dec
pop
lods
imul
loope
pop
leave
out
fistpl
lahf
push
xchg
imul
cmp
pop
sahf
repz
jle
jb
fistpll
filds
or
xor
cmc
and
pop
dec
or
lods
pop
push
or
dec
inc
mov
push
pop
test
push
cmp
into
cmp
inc
fincstp
mov
std
arpl
push
mov
mov
mov
scas
jae
repz
movsl
out
adc
cltd
scas
pop
cltd
inc
into
xor
movsl
shlb
in
loope
mov
out
jg
outsl
pop
adc
cmpsb
jo
pushf
test
sbbl
in
adc
jb
lods
mov
jo
outsb
and
std
adc
pop
inc
imul
sub
ljmp
aas
mov
repz
fisubrs
jb
loope
or
mov
sub
pop
int
jg
cmp
xor
loopne
mov
shlb
cltd
mov
inc
divl
and
pop
inc
sbb
pop
mov
sub
sahf
sbb
lcall
test
popa
inc
dec
nop
mov
lret
or
xor
jbe
mov
in
jl
cwtl
pop
sti
fcom
imul
inc
xchg
ja
popa
fabs
mov
jecxz
jle
mov
movsl
out
clc
out
lcall
loope
cmp
insb
in
xrstors
cs
lods
movsb
jo
mov
iret
jne
bound
cmpsb
fsubs
dec
shl
popa
rcrl
sbb
mov
repnz
jb
scas
cmp
mov
push
inc
push
into
pop
roll
cmp
aas
mov
lret
fwait
or
pop
fcomip
pop
jl
xor
inc
cmpsl
adc
mov
jb
ss
jns
testl
mov
push
gs
daa
aas
xor
pop
out
dec
das
js
sub
imul
arpl
cmp
mov
sbb
xor
aam
fisubrs
xor
xorb
in
push
inc
sarb
cmp
testb
push
sbb
in
dec
cmp
shr
dec
push
pop
pop
sbb
aam
sbb
sahf
sub
scas
fbstp
cwtl
movsl
cmp
inc
jecxz
aad
leave
popf
dec
push
mov
out
mov
bswap
pop
pop
inc
pop
sbb
in
je
sub
cmovno
add
sub
sub
mov
mov
stos
jbe
xor
outsb
or
fidivl
adc
mov
fcoms
popf
cmp
or
ffreep
dec
rclb
mov
imul
sub
add
lea
cltd
sbb
xchg
jno
sti
pop
mov
stos
mov
mov
es
cmp
mov
mov
out
fchs
sub
push
jns
nop
mov
pop
mov
addl
push
fs
jbe
dec
loopne
mov
pusha
pop
popf
mov
test
adc
xchg
xor
add
adc
mov
idivl
push
mov
jecxz
mov
lods
jns
dec
xor
xor
cmp
inc
mov
sub
mov
cmpsl
ret
cmpb
lods
xchg
cmp
imul
loopne
mov
outsl
fdiv
loopne
nop
cmp
pop
rcll
mov
pop
enter
rcll
sbb
jae
nop
arpl
xchg
cld
frstor
push
fidivl
sti
dec
mov
mov
sahf
cmp
jle
ret
lods
lret
loop
fsubrl
inc
dec
roll
repnz
adc
cmpsl
mov
jmp
in
enter
dec
and
mov
cmp
inc
popa
lods
test
out
out
xchg
lcall
mov
mov
cltd
cmpsl
adc
and
push
lods
adc
mov
clc
ficoms
pop
pop
das
push
cwtl
pop
insl
push
push
inc
or
shlb
movsb
adc
lcall
hlt
insl
lds
xchg
popa
bound
daa
sub
dec
lods
pusha
push
sub
dec
push
sub
sbb
push
xor
ljmp
int3
push
bnd
out
rcl
push
rcr
lret
mov
push
stc
aam
adc
cwtl
shrb
xchg
into
pop
xchg
fwait
inc
enter
push
push
mov
jge
cmp
push
and
push
push
push
test
inc
mov
enter
stos
fldcw
lret
or
enter
rcll
pop
pop
mov
mov
popf
and
repnz
fldenv
ljmp
in
xchg
mov
shll
fdivr
mov
sub
pop
hlt
xchg
and
xchg
mov
loop
lret
test
movsb
mov
lods
adc
dec
pop
sub
xchg
mov
dec
pop
scas
add
xor
mov
inc
mov
mov
adc
repnz
dec
pop
into
cmpsb
int
js
or
mov
dec
lret
aaa
test
mov
jg
inc
das
testb
lds
adc
xchg
daa
testl
out
test
mov
fxch
or
test
cld
sbb
leave
mov
pop
out
shlb
xor
add
inc
in
lret
pop
mov
hlt
mov
inc
repz
xor
push
shrl
sbb
ljmp
popa
jne
add
mov
bound
loope
sub
or
repz
out
les
shrb
bound
mov
jecxz
jnp
inc
mov
sbb
adc
inc
imul
ja
hlt
shll
pop
stos
pop
jb
orl
dec
mov
jne
shl
sbb
adc
jae
pop
cmp
sub
scas
fwait
sarb
ljmp
jg
mov
sub
inc
lods
lods
fwait
and
sbb
pushl
shl
test
sbb
push
pusha
xchg
pushf
addr16
jbe
pop
ds
outsl
les
enter
sub
pop
or
cmc
fnstenv
popf
xor
test
loope
and
jmp
andl
sbb
mov
cwtl
arpl
cmp
fsts
fs
fisubrl
daa
gs
jno
mov
lea
mov
clc
and
adc
pop
adc
aam
mov
fucomp
lea
nop
out
mov
push
dec
cmpl
push
lret
jo
gs
sub
and
lret
outsl
xor
mov
aam
pop
xchg
leave
add
push
ja
mov
dec
xchg
adc
mov
fs
rorb
cmp
ret
fdivrl
xchg
int
xchg
push
sub
mov
mov
test
mov
jns
inc
aaa
push
push
ret
loope
adc
adc
jne
fistpl
sbb
cmp
and
test
pop
xor
sbb
jnp
lahf
sub
mov
les
lods
push
sbbl
loop
or
jb
jbe
lahf
lcall
int3
stc
or
inc
jns
mov
das
mov
sbb
mov
dec
ficoms
sbb
inc
mov
mov
rcrb
cld
push
add
maxps
cmp
in
rcll
push
sar
mov
orb
out
adc
xor
test
jg
js
mov
movsl
outsl
adc
and
sub
mov
push
push
insb
jbe
movsb
xor
pop
add
fwait
pop
jmp
mov
push
xchg
mov
mov
mov
repz
sbb
sahf
inc
jb
idivl
aaa
or
xchg
popa
cwtl
jmp
aas
mov
xchg
push
adc
sti
cmp
jbe
xlat
inc
in
pop
pop
pop
dec
mov
or
and
sbb
ljmp
fisubl
jl
roll
outsb
gs
xorl
mov
lods
stc
or
test
leave
dec
scas
xlat
dec
dec
ret
push
pop
and
jmp
lods
mov
inc
sub
into
mov
xchg
and
jp
stos
mov
aad
stos
pop
loope
push
adc
sub
jp
popf
xor
xor
sbb
lock
sbb
in
movsl
repnz
hlt
lds
js
test
cmp
mov
fucomp
cmp
stos
loope
mov
mov
mov
movsl
cltd
lret
push
xor
pusha
aad
jle
std
sarl
jge
fwait
cmp
cmp
call
mov
jne
inc
lods
lcall
push
cli
sbb
mov
rcll
mov
and
or
xchg
add
add
jecxz
and
sub
lds
or
push
sbb
xor
lcall
push
daa
jl
and
jbe
dec
mov
cmpsl
cmp
addr16
rol
sub
inc
decb
sub
sbb
aam
stos
test
loop
out
push
push
mov
cltd
xorl
popf
scas
mov
movsb
xor
mov
pop
dec
dec
jle
sti
cltd
sbb
inc
subb
stos
mov
loop
icebp
xchg
movsb
mov
in
push
jne
jp
aad
cmp
jb
in
imul
mov
xchg
mov
repnz
or
jns
pop
xchg
inc
add
test
mov
cmp
add
stos
sbb
or
jno
push
sti
adc
jne
in
ret
pop
fcompl
dec
mov
mov
adc
sar
mov
push
xlat
or
mov
lahf
adc
jne
mov
mov
xor
dec
inc
cld
aas
pop
jecxz
adc
popf
daa
lret
sbb
add
sbbl
addr16
cmc
jne
push
jbe
push
push
pop
push
sahf
rcrb
xchg
or
push
mov
sub
shrl
stc
outsl
shrl
dec
ret
cmpsb
and
adc
shll
adc
in
inc
mulb
cmp
call
cs
sbb
fs
imul
ficompl
std
cmc
stc
mov
cltd
xchg
push
aas
adc
pop
mov
ja
jno
fsubr
push
add
mov
movb
dec
inc
mov
mov
cmp
int
cmp
mov
inc
dec
sub
pop
mov
jge
cmp
out
pusha
gs
mov
maskmovq
idivl
rcrb
sbb
mul
cli
pusha
pop
in
push
sbb
add
xor
popf
push
jbe
cmp
lahf
out
mov
and
scas
adc
jne
movb
mov
inc
mov
ja
sbb
mov
repz
sbb
mov
test
adc
inc
fdiv
aas
mov
jne
inc
rcl
xor
scas
arpl
jae
cmp
xor
arpl
jno
mov
inc
xor
shlb
mov
sbb
out
sbb
jae
jae
out
sbb
jle
fcomi
cli
cmc
cmpsl
pop
out
je
loop
fidivrl
rclb
and
pop
popa
add
lahf
lock
push
push
adc
icebp
test
shlb
les
notl
std
ret
dec
lret
imul
in
sub
cmp
test
rcll
push
jb
push
jae
stos
sub
mov
jbe
lods
add
xchg
inc
notl
mov
or
nop
and
int3
fisubs
push
xor
jnp
test
xchg
test
mov
aad
or
daa
sub
dec
push
inc
mov
das
orl
addr16
sub
xchg
movsb
leave
and
push
inc
popf
scas
pop
push
jmp
repz
lock
nop
pop
lret
and
icebp
and
sub
inc
les
xchg
inc
clc
push
shlb
call
pop
loope
loopne
clc
push
loope
out
lods
jecxz
test
mov
les
add
test
stc
es
outsl
fwait
data16
js
xchg
arpl
pop
jecxz
clc
xchg
je
scas
pop
ja
inc
cmp
push
push
int
xor
int3
cmp
insb
pop
out
mov
lods
mov
inc
idivl
test
fistpl
ljmp
outsb
fcmovnb
cmc
push
push
in
mov
or
dec
dec
test
mov
cmp
jl
mov
sbb
lea
adc
dec
in
push
fsubl
push
iret
out
sarb
ret
loopne
xor
repnz
xor
jnp
stc
pop
pop
fs
xlat
orb
mov
out
lahf
bound
and
cmp
jmp
xor
int3
hlt
add
jae
dec
mov
cmp
loope
or
je
mov
or
pop
dec
mov
loopne
jge
out
cmpsb
push
or
popf
and
fidivrl
jle
mov
xor
lods
xchg
shlb
mov
pop
lock
pusha
and
adc
sbb
push
jge
xchg
in
cld
stos
loope
or
fdivrl
xchg
sbb
in
pop
aam
fwait
nop
daa
cltd
jns
cmpsb
pop
mov
add
cmc
loopne
pusha
mov
mov
mov
in
dec
dec
cmc
ja
inc
ret
add
mov
shlb
aaa
outsb
enter
mov
test
sbb
dec
repz
adc
xchg
lods
movsb
mov
lods
icebp
dec
shlb
ret
sbb
into
jno
ljmp
dec
inc
mov
xor
mov
xor
inc
je
mov
or
orps
cmp
cmp
icebp
mov
mov
testb
jle
sbb
in
iret
lods
fstl
add
xchg
shl
pop
je
shrl
xor
push
lods
fdivrs
mov
testl
jg
and
stc
jnp
notl
push
cmp
pop
sti
adc
add
push
orl
test
pop
add
or
push
hlt
inc
lahf
or
popa
shr
neg
add
xchg
jmp
pop
movsl
pop
push
mov
xor
in
je
bound
lret
push
mov
daa
mov
pop
xor
jmp
outsl
push
in
xor
dec
xor
mov
enter
xchg
pop
stos
lahf
mov
mov
out
das
adc
xchg
xchg
inc
lret
xor
daa
aad
imul
aad
prefetch
pop
or
ret
dec
jge
stc
aaa
jl
in
loope
xchg
lcall
lret
dec
mov
xchg
addr16
push
lahf
mov
pop
leave
sbb
popf
pop
inc
repnz
inc
lahf
sub
jle
mov
out
jmp
fs
nop
dec
flds
inc
movsl
lods
mov
cs
xchg
mov
cwtl
and
and
mov
adc
dec
xor
pop
mov
lods
pop
sub
push
cwtl
bound
cmpl
in
xor
jno
sbb
repnz
std
dec
repnz
mov
sub
shlb
xor
push
sbb
lahf
ja
mov
punpckhbw
rorb
int
dec
stc
aam
xchg
pushf
decb
dec
pop
lods
into
ljmp
adc
push
iret
add
and
cmp
jo
jg
inc
mov
lahf
addr16
mov
xor
das
pusha
cmp
loopne
imul
subl
scas
inc
fdivrs
xchg
loop
pop
or
dec
and
out
imul
sti
test
pop
jge
push
ret
sbb
push
pop
sbb
icebp
push
filds
add
xchg
push
dec
fwait
or
je
lods
cmp
test
test
lods
loope
sar
sub
sarb
xor
and
lea
pop
mov
pop
test
testb
fldcw
sub
mov
mov
scas
add
aaa
ljmp
insl
inc
ret
leave
nop
sub
imul
into
mov
sbb
sbb
in
test
adc
lea
mov
imull
and
xchg
mov
mov
cmp
mov
adc
lahf
mov
iret
aad
mov
push
mov
negl
cmc
movsl
stc
lods
adc
cltd
xchg
xor
xor
in
pop
es
or
out
in
fcoms
cvtpi2ps
imul
ds
add
aas
mov
push
mov
dec
outsb
out
and
fmuls
jnp
xor
fst
jno
cmp
dec
xchg
mov
xchg
sbb
stc
add
daa
cmp
scas
fdiv
xchg
and
and
xchg
push
pop
lcall
jecxz
testl
sbbl
pop
pusha
call
dec
pop
nop
mov
push
sbb
cmc
orl
sbb
jb
or
mov
je
cmc
pop
lret
push
les
mov
push
sahf
ds
jns
sub
in
jno
out
mov
xchg
outsb
outsb
mov
mov
imull
cli
jbe
xchg
and
inc
addb
mov
pop
adc
add
scas
xor
mov
mov
inc
xor
xor
fnstenv
ss
leave
cmp
pusha
pop
jp
push
cmp
jl
out
fldz
inc
mov
inc
sbb
adc
lock
addr16
movsl
aad
mov
enter
sbb
dec
pop
nop
jl
xchg
xchg
mov
ret
repz
fdivrs
pop
scas
int
mov
pop
xchg
aas
adc
sbb
push
imul
push
dec
test
popf
das
pop
sahf
dec
mov
in
lods
push
lock
mov
xchg
cld
mov
movsl
aam
inc
or
mov
ja
divb
int3
dec
sbb
mov
xor
jae
insb
daa
loope
out
in
pop
push
fdivrs
lret
call
inc
das
mov
adc
movsb
inc
sub
iret
sbb
fidivrl
ficoml
enter
fistpl
push
xchg
pop
push
je
pop
out
jbe
and
addr16
cli
jno
mov
sub
lahf
shlb
pushf
fwait
scas
adc
jnp
pop
xor
sbb
or
outsb
mov
xor
sub
lea
js
andb
push
pop
loopne
cmp
stc
jge
lods
out
stos
andl
cltd
mov
lahf
xchg
push
mov
pop
out
icebp
icebp
cmp
lods
dec
out
pushf
jp
mov
sub
inc
lcall
cmp
repz
dec
add
inc
dec
popa
lahf
add
push
jg
mov
push
and
mov
adc
jmp
sbb
or
add
call
sub
xchg
push
dec
out
ja
mov
mov
je
sub
jo
push
divb
mov
arpl
sub
int3
sbb
out
lahf
popa
pop
dec
jbe
inc
scas
jg
xchg
aas
dec
fimull
mov
inc
mov
pop
outsl
mov
adc
push
out
pushf
loopne
cmc
shrb
lea
ss
leave
jle
pop
jecxz
push
push
nop
mov
mov
jne
cli
fsubrp
xchg
call
sahf
outsb
out
out
das
xchg
cmp
mov
sbb
into
xor
addl
enter
shl
dec
pop
rcrl
cs
or
inc
mov
cmp
jg
in
lds
test
push
ss
das
lcall
loope
xchg
fucomi
or
out
lret
dec
fldl
jecxz
je
mov
mov
test
jbe
divl
ret
sbb
jo
pop
pop
adc
cmpsb
scas
adc
arpl
pop
gs
cwtl
sbb
adc
popa
scas
arpl
ret
out
jmp
sti
push
lahf
loope
inc
imul
cwtl
js
sbb
sbbb
ja
inc
jmp
or
xor
test
das
nop
movsl
rcrb
push
add
fstpl
and
push
xor
adc
ret
cmp
lret
sbb
iret
jns
dec
or
scas
cli
dec
loope
lods
or
shlb
xchg
push
adc
xchg
and
inc
and
pop
js
pop
ljmp
out
aad
xlat
dec
dec
scas
push
push
adc
sahf
xchg
hlt
xchg
mov
in
jae
je
cmp
dec
cwtl
aaa
and
cmpsb
pop
das
mov
insb
sub
jbe
aas
in
xor
push
dec
aas
lods
addb
adc
repz
cmc
stc
movsl
pop
call
sbb
popa
jae
inc
js
mov
insb
pop
loopne
mov
lret
pop
xlat
sub
ss
outsb
je
stc
push
lret
xchg
jns
pop
xchg
jo
jmp
and
mov
insb
inc
jecxz
dec
pop
jmp
add
lods
cmpsb
sarl
subl
pop
cld
xchg
mov
in
xor
and
fcompl
arpl
jle
lea
adc
popl
dec
push
fisubs
xor
sbb
or
push
aam
xor
ret
rcrb
xchg
shl
jl
add
ds
mov
xchg
jecxz
xor
rol
pop
mov
sti
push
paddsb
aad
jmp
jae
nop
movsl
ret
cmp
std
insl
mov
pop
in
test
push
cld
pushf
pop
push
sub
arpl
iret
test
std
out
cmpsl
push
lds
adc
add
ja
mov
mov
jl
out
lea
jae
bound
ja
jnp
sub
lds
adcl
xchg
inc
shlb
outsl
test
ljmp
fldl2t
push
imul
push
out
aaa
sahf
fdivrl
aas
adc
jbe
mov
sbb
cmp
pop
dec
jo
and
outsl
push
imul
mov
sbb
push
neg
add
daa
push
icebp
repz
into
out
stc
dec
nop
mov
mov
and
pop
sahf
lahf
outsl
cmc
out
push
in
pop
sub
out
hlt
call
rcrl
dec
cmpsl
jp
add
inc
int
aas
loopne
das
mov
repz
in
xchg
sbbl
bound
jg
js
mov
rorb
test
adc
add
out
popa
loop
mov
aad
or
clc
fwait
inc
push
or
fstpl
mov
ljmp
imul
fstpl
ja
xchg
jb
xor
cmp
shll
shll
loop
stos
push
inc
pop
repz
mov
rclb
xchg
pop
push
mov
lds
mov
aam
jg
cmp
mov
add
push
je
repnz
add
mov
mov
call
cmp
push
lea
cwtl
sub
cmp
push
sub
mov
and
repz
jmp
adc
cs
lret
ret
lods
std
xchg
add
es
dec
lret
ja
mull
cmc
mov
inc
movsb
xchg
cli
mov
xchg
xor
rcl
and
push
sbb
cwtl
jne
mov
sub
or
lahf
jmp
clc
or
pop
pusha
lods
or
push
enter
aam
xor
mov
xchg
sub
mov
fwait
or
rclb
add
or
jmp
pop
mov
repz
icebp
mov
pusha
mov
or
or
jl
imul
sbb
mov
or
jecxz
sub
dec
xlat
nop
mov
adc
push
sti
cltd
pop
push
jb
adc
or
add
into
inc
imul
inc
std
out
test
or
add
divl
repz
sahf
hlt
cwtl
cwtl
add
or
int3
cltd
scas
out
xchg
fsub
mov
inc
les
stos
or
pop
dec
mov
mov
call
jne
pop
jbe
popf
add
loopne
mov
dec
popa
push
jmp
adc
andl
sub
inc
mov
stc
out
and
cmp
cli
cmpsb
sub
add
cmc
out
cmp
pop
divb
cmp
mov
int
movswl
insb
push
pusha
std
pop
aad
inc
mov
cli
dec
jp
js
ret
mov
outsl
mov
mov
cmc
jmp
shr
add
and
xor
pop
mov
mov
mov
inc
xchg
test
mov
mov
lcall
rcrl
push
data16
sbb
mov
cltd
test
insl
js
cmp
cmp
pop
aad
or
mov
out
push
inc
cld
mov
xor
mov
movsl
or
loopne
cli
push
jg
repnz
aaa
pop
or
push
cmpsb
cwtl
sbb
repz
sbb
rcll
jne
and
jp
clc
fs
and
gs
push
loop
inc
icebp
stos
pop
pop
enter
cmp
loopne
or
pushf
adc
cmpsb
call
mov
and
loope
andl
cmp
xor
cmp
or
mov
pop
pop
mov
je
in
and
sbb
scas
push
popa
jbe
test
inc
out
stos
sbb
push
call
dec
xchg
push
mov
pop
pop
or
insl
and
addl
out
cmp
cwtl
and
inc
arpl
bound
mov
pop
jg
sub
in
cmpsl
pop
xor
call
xorb
mov
sub
ret
push
rorb
mov
mov
imul
pop
mov
push
stc
int
xor
cmpsb
pop
fstpt
insb
stos
mov
xor
in
jo
jb
pop
add
mov
push
xchg
cld
mov
xchg
sbb
fcoms
fsubs
mov
repnz
adc
pop
pop
sub
mov
jb
and
xchg
jle
fcomps
cltd
rcrw
pushf
fldt
jl
fdivl
jmp
mov
jb
mov
je
jle
mov
or
mov
mov
jg
lds
push
icebp
lods
push
jno
jp
insb
adc
cmp
clc
in
fistl
pushw
push
js
lods
jge
push
prefetchwt1
or
mov
mov
cmp
notb
in
mov
mov
jo
sahf
dec
lock
insb
enter
xor
inc
pop
mov
test
pop
push
inc
fsubrp
xor
mov
ficomps
mov
or
pop
xor
shlb
fcoml
cmp
xchg
loope
xor
mov
int
test
inc
pop
adc
dec
push
ds
das
orl
dec
inc
ficomps
sub
mov
cmpsb
inc
ljmp
push
sub
fs
loopne
sub
ret
aam
mov
cmp
dec
loopne
shrb
aas
popf
push
sar
mov
mov
mov
sub
sbb
test
lcall
mov
call
inc
lods
loop
loope
into
inc
pop
lds
xlat
test
cld
ja
xchg
jp
xor
in
mov
pop
xchg
dec
pop
mov
push
into
adc
fnstenv
shl
cli
scas
jge
bound
xchg
xchg
lret
mov
mov
andl
pusha
mov
mov
sub
mov
mov
sub
xorb
and
inc
sbb
xchg
push
jno
pop
inc
ds
test
cmp
aam
flds
js
popf
pop
xor
ret
out
cmc
clc
sbb
mov
sub
sti
or
jp
test
mov
xchg
stos
in
leave
stc
lahf
add
je
pop
pop
xorl
scas
mov
je
xor
jle
lret
mov
push
out
sub
sbb
ja
aam
sti
int
popf
or
mov
enter
pushl
push
pusha
dec
je
jae
pop
xchg
fwait
or
test
xorb
mov
outsb
add
ret
iret
add
jb
fwait
inc
repnz
jmp
pop
pop
xor
mov
scas
push
call
cmp
mov
adc
mov
pop
hlt
aaa
mov
lds
mov
aad
pop
test
imull
mov
aad
in
cwtl
out
jge
adc
pop
std
dec
or
in
fistl
lcall
fnstcw
fwait
cmp
je
lods
leave
cmc
xor
orb
fbld
jmp
xor
sub
outsb
and
cmc
lcall
rcrb
loope
ljmp
sbb
or
sarl
out
loop
or
mov
and
dec
scas
jne
mov
and
mov
jo
xor
ds
adcb
adc
scas
push
mov
adc
cmpsl
adc
ficoml
mov
xchg
aas
cmp
inc
sbb
iret
mov
nop
fwait
mov
and
lea
mov
lret
xor
cld
push
pop
sbb
cmp
and
es
jo
lahf
gs
movsb
mov
pop
nop
push
fsqrt
inc
icebp
mov
iret
cmp
lret
mov
out
xor
rolb
in
inc
jecxz
lods
sbb
std
negb
iret
inc
jecxz
dec
sbb
and
clc
bound
movsl
test
xor
mov
aas
fstps
sub
cmp
fwait
sub
test
cs
add
loop
push
fisubrs
cwtl
gs
adc
jge
filds
arpl
repz
push
int
imul
shlb
cld
or
clc
aam
inc
cmova
imul
dec
push
into
and
sub
lret
mov
clc
cld
clc
mov
test
mov
clc
dec
mov
testl
pop
cs
shlb
pop
gs
das
or
mov
lcall
jo
jp
lcall
in
sbb
sub
adc
mov
pop
inc
xchg
test
nop
mov
and
aam
dec
or
das
mov
dec
push
movsl
fmul
mov
pop
jne
mov
xor
outsl
cmp
or
jnp
lcall
roll
bnd
inc
adc
out
sbb
testb
mov
push
and
cs
dec
inc
stos
sbbb
aas
push
cmpsl
cs
or
in
fs
mov
mov
aad
daa
mov
mov
and
mov
loope
dec
cld
push
push
aam
out
pop
cmp
inc
pushf
mov
or
xor
cmpsb
outsl
into
sti
pop
inc
push
repz
dec
pop
xor
jne
xchg
push
inc
mov
lret
pop
jp
dec
enter
outsl
int3
mov
jmp
mov
mov
sbb
jo
into
repz
int
jno
and
adc
stos
insb
and
je
pop
ja
jae
sbb
push
mov
push
push
divl
dec
inc
into
rcrl
adc
negl
sbb
pop
lret
xor
add
mov
call
sbb
pusha
xchg
mov
push
repnz
cli
movsb
adc
xchg
hlt
adc
xor
nopl
subb
jbe
sbb
jb
push
dec
cmp
gs
dec
nop
mov
and
pop
hlt
mov
adc
xchg
std
sub
jmp
sti
and
dec
jecxz
sbbl
and
xchg
xchg
repz
lods
ret
pop
push
and
insl
mov
cmp
jo
mov
pop
pushf
dec
xchg
lods
pusha
int3
daa
cwtl
into
in
fcompl
dec
psubw
sub
push
enter
or
add
lahf
or
sbb
inc
xchg
out
out
or
inc
cmp
shll
lret
lret
inc
jl
adc
lret
add
inc
pop
adc
cwtl
fadd
mov
sbb
sbbl
ret
jge
mov
dec
orb
fcmovnb
mov
mov
push
sbb
add
ss
push
out
xor
jo
push
push
lcall
pop
lock
push
loopne
js
ja
and
mov
push
fs
pop
mov
xor
push
das
pop
lcall
int
cltd
in
aas
stos
lods
clc
mov
mov
sub
ljmp
sti
adc
push
cltd
and
lods
jl
fisubl
pop
lds
push
xchg
mull
pop
js
lret
mov
cmp
cwtl
sbb
in
sub
stc
lods
ret
jb
sub
in
mov
hlt
out
gs
push
hlt
sbb
jl
les
mov
push
ljmp
inc
mov
pop
mov
push
mov
cmpl
jb
and
xor
fistl
xor
lcall
mov
add
cmpsb
cs
call
pop
xor
aam
pop
xchg
fsubl
cltd
fildll
jmp
lods
es
and
scas
scas
pop
cmp
data16
sbb
idivl
jnp
in
cmp
pop
xor
fs
mov
adc
loopne
jmp
iret
jne
insb
lods
mov
mov
je
cwtl
data16
add
cmp
pop
inc
xor
xchg
daa
call
mov
add
mov
mov
adc
out
lea
push
or
jno
push
cmpsl
dec
xchg
pop
or
lods
cs
in
mov
add
shrl
out
jne
jmp
and
aaa
jns
xor
add
addr16
ds
xor
xchg
mov
xchg
xor
mov
jmp
sbb
jnp
and
stos
xchg
mov
push
mov
sub
mov
xchg
imul
jle
push
xor
inc
test
jb
jns
cmp
jp
dec
test
xor
xor
fcmovu
cmp
mov
out
mov
cld
pop
pop
inc
cmp
inc
testl
push
das
mov
int3
mov
jno
push
inc
imul
and
ja
mov
or
es
in
push
pop
ss
add
icebp
dec
dec
out
mov
call
sbb
mov
push
or
jne
mov
in
lods
enter
push
clc
push
adc
adc
jg
jb
pop
inc
pop
sub
shll
adc
xchg
and
jo
mov
sti
repz
leave
int
mov
stos
dec
daa
adc
dec
jns
insb
cmp
outsl
insl
idivl
mov
mov
rclb
test
sbb
sahf
outsb
mov
in
in
cmp
mov
and
or
push
jl
add
or
inc
pop
fadds
mov
int3
sbb
std
push
cmp
or
je
out
adc
jnp
bound
mov
xchg
push
mov
xchg
xchg
mov
xor
cltd
sbb
jmp
shl
mov
jl
inc
xchg
les
cltd
cld
and
test
lret
sahf
mov
fstpl
lahf
mov
repnz
add
es
adc
or
push
pop
mov
push
mov
es
enter
mov
testl
xor
aaa
pusha
mov
or
jns
hlt
ret
dec
and
mov
lcall
scas
out
xchg
mov
aaa
lds
aam
test
mov
xchg
jbe
clc
xor
inc
stc
mov
jle
mov
out
sti
mov
shlb
push
push
imul
cmc
pop
ss
pop
inc
shll
gs
inc
push
mov
push
xchg
fsubl
mov
push
xorb
cmc
pop
xchg
mov
mov
iret
inc
push
out
clc
ds
call
cmpsl
push
adc
inc
addl
xchg
or
sub
into
lds
adc
jno
ss
jmp
mov
or
mov
xor
imul
dec
jl
out
mov
cmp
cld
jbe
push
sub
mov
sbb
push
cltd
stos
addl
mov
jns
fdivp
stc
cmc
mov
data16
out
stos
ret
push
jo
mov
adc
stos
push
cmc
fbld
push
gs
lods
mov
stos
test
mov
dec
aaa
xlat
jge
or
lret
or
lea
push
ret
cmp
push
mov
adc
es
cld
pop
and
js
or
push
ja
xchg
sub
inc
adc
sub
insl
hlt
jg
sbb
pop
mov
jecxz
popa
sub
das
jmp
pop
cmp
insl
pushf
inc
adc
and
pushf
fimull
ss
adc
into
repnz
je
jge
pop
jns
sub
fldl
sub
push
cwtl
mov
mov
or
mov
push
or
pop
int3
xorb
pop
sbb
add
add
push
test
mov
pop
mov
push
fsubrs
fmull
icebp
in
pop
insb
xlat
dec
insl
inc
les
jg
jle
pop
nop
in
add
mov
push
cmp
cmpsl
call
jns
sub
fs
mov
mov
insb
push
inc
dec
nop
inc
sub
idiv
mov
pop
adc
inc
lret
inc
shrb
popf
ss
push
pop
enter
mov
insl
cld
pop
sbb
ds
adcl
lcall
push
push
icebp
mov
pop
ffree
in
jbe
jg
sub
repnz
out
cmp
fs
cmpsl
mov
cmp
in
cmp
push
daa
sub
sub
leave
xor
xchg
fxch
scas
in
pusha
pop
xlat
jle
or
call
jge,pt
out
mov
or
addr16
scas
movsl
xchg
mov
xor
test
pop
rolb
std
mov
loope
cmp
rorb
lea
push
or
inc
jmp
and
add
and
mov
insb
icebp
and
and
pusha
rcl
mov
popf
mov
loopne
sahf
mov
test
xlat
sbb
mov
cmp
jl
jle
pop
cmc
imul
adc
sarl
xchg
pop
mov
push
jmp
popf
ja
add
push
and
cwtl
jb
sub
sbb
int3
incl
jns
inc
hlt
dec
aam
pop
push
add
rorb
add
mulb
pop
lahf
repz
inc
in
xchg
push
ja
jecxz
dec
adc
sbb
data16
sub
into
test
pushf
xor
shlb
out
and
loope
aas
mov
push
adc
dec
pop
fidivl
sarl
int3
pop
lods
add
or
or
test
icebp
incb
cmp
fimuls
jne
outsb
lret
sarb
mov
cmp
cs
jle
stc
pop
or
xor
out
add
andl
mov
js
or
add
or
in
mov
test
sbb
xchg
pushf
jge
out
pop
bound
inc
xchg
scas
dec
push
sbb
xchg
icebp
pop
repnz
movsb
test
nop
xchg
jo
inc
pop
bound
mov
ljmp
pop
in
add
dec
pop
mov
push
jecxz
les
sub
in
cmp
mov
sar
and
mov
cmp
int
cmp
dec
push
xchg
data16
jno
out
mov
push
mov
cmp
int3
movsb
mov
inc
shrb
int3
pop
bnd
in
loop
push
or
loop
inc
inc
ret
scas
fnsave
sub
nop
lds
mov
sahf
push
xchg
mov
notl
inc
data16
jns
test
das
gs
sahf
cld
pop
pop
enter
xor
arpl
dec
jecxz
faddl
aam
mov
rsm
push
jge
rorl
fcoms
pop
add
lret
jno
nop
xor
dec
mov
shll
in
loope
testb
adc
ret
pop
and
and
enter
leave
aam
and
push
leave
in
inc
filds
mov
lcall
pop
test
pop
jecxz
xor
or
pushf
shl
mov
inc
out
ret
jecxz
mov
roll
mov
jns
rolb
xor
test
in
inc
jle
or
push
xchg
pop
std
adc
mov
xor
pop
inc
rorl
xor
dec
sub
push
int3
xor
fs
xor
out
mov
or
push
xchg
clc
cs
dec
and
dec
sub
out
scas
jg
jne
xchg
negl
gs
icebp
mov
das
lcall
mov
jecxz
int3
inc
mov
test
sub
dec
jne
insl
jno
fdivrl
xchg
outsl
std
aad
fmul
mov
popf
xlat
shl
addl
pusha
pop
enter
mov
adc
scas
mov
sub
dec
arpl
insb
jo
int
mov
ja
in
mov
rol
adc
push
mov
adc
and
ja
push
cmpsb
cld
xchg
nop
xchg
test
ret
push
aas
fbstp
aad
xchg
int3
das
xor
mov
mov
cmp
lret
pop
jle
into
jl
inc
add
or
cmp
cltd
cmpsb
dec
insb
nop
xchg
adc
mov
pop
loop
mov
cmp
jnp
dec
ljmp
shl
aaa
ret
push
jno
xor
pop
push
mov
sahf
cmp
aad
cmpsl
jo
daa
sti
adc
stc
int3
insl
sbb
jle
push
pop
mov
xor
out
mov
enter
in
cmpsb
in
sbb
jp
jnp
jecxz
out
mov
mov
and
jnp
stc
js
mov
js
in
xor
mov
clc
mov
jb
inc
dec
adc
xchg
ds
sub
dec
pextrw
pop
sbb
mov
out
and
sub
ret
pop
push
sbb
lea
nop
add
sbb
cmp
cmp
int
cmp
arpl
adc
movb
cs
mov
loopne,pn
rorb
lock
adcb
dec
jno
mov
lds
fildl
dec
ret
nop
pusha
push
aam
daa
loop
xor
orl
in
stos
sub
sub
aad
mov
mov
aaa
cli
pop
or
lea
arpl
testb
inc
out
js
aas
pop
dec
lods
or
mov
mov
in
xor
cmp
lcall
pop
pop
and
out
inc
jne
or
decb
or
add
and
stos
xor
loop
and
enter
sub
rorb
pusha
jle
icebp
lahf
lods
rcrl
fcmovnu
sub
pop
pop
into
sbb
pop
jo
push
dec
gs
inc
mov
ljmp
add
mov
jl
sti
shlb
inc
pop
mov
pop
ficompl
mov
cmp
hlt
adc
sarb
repnz
in
pop
mov
sbb
adc
jg
adc
inc
jle
test
mov
xchg
mov
imul
xor
lock
out
addr16
daa
add
xor
cmp
sub
sub
mov
dec
jge
mov
rcr
inc
pop
push
xchg
add
leave
or
ret
loopne
and
sbb
xor
imul
popf
cmp
pop
stos
sarl
jl
inc
sti
icebp
xor
mov
sbb
clc
ret
xor
outsl
push
pop
jge
in
cmc
ds
fdivrl
lret
adc
aam
jne
jne
cmp
decb
lret
movsb
mov
jmp
mov
mov
mov
cmc
mov
in
sub
jmp
test
jecxz
xor
test
mov
xchg
sbb
mov
cmp
push
or
lds
dec
hlt
or
daa
inc
add
arpl
mov
mov
jg
in
mov
repz
mov
sub
sbb
jecxz
loop
push
lret
jge
sbb
pop
sub
pop
sub
jo
push
ljmp
and
and
negb
negl
sbb
out
cmp
inc
ret
bound
dec
inc
and
std
adc
arpl
das
les
outsl
push
push
cwtl
and
fs
dec
dec
scas
fsubl
into
push
and
adc
inc
lahf
jle
xchg
scas
adc
pop
xchg
push
stc
adc
inc
leave
jae
dec
rclb
mov
mov
jle
pop
push
or
fldenv
or
cmp
lock
stc
push
test
in
inc
mov
iret
xchg
scas
repnz
jl
cmp
stos
lret
pop
test
rcl
js
mov
movsl
adcl
in
outsl
dec
lret
test
lods
xchg
add
jb
jp
mov
inc
pop
shlb
adc
cmpl
cwtl
push
mov
daa
and
out
ljmp
std
and
xchg
lret
sbb
aas
cwtl
add
icebp
loop
out
jmp
popa
sti
andl
pop
lret
pop
fiaddl
adc
cld
inc
inc
adc
jmp
and
xchg
lds
mov
std
jge
sbb
fisubrs
inc
xchg
les
cltd
je
mov
push
cmpsb
jl
mov
sarb
arpl
jg
lock
lods
fstps
lods
lods
lods
jmp
call
dec
out
cmpsl
fisubrl
out
int
loop
repnz
mov
adc
loope
mov
repnz
lret
dec
mov
jb
mov
mov
lret
dec
data16
push
mov
loope
cmc
test
pop
test
and
loop
repz
dec
jo
inc
mov
shll
xor
fnstsw
gs
inc
gs
aam
or
or
sub
sbb
xchg
roll
in
push
sbb
add
xlat
or
cmc
jge
enter
rcl
cmp
out
in
inc
cmp
jmp
mov
inc
cmp
rolb
mulb
icebp
adc
ret
ret
dec
jg
in
invd
shrl
enter
xlat
cmp
movsl
add
scas
js
fadd
fmuls
rcrl
mov
jo
cmp
insl
sbb
repnz
sarb
inc
loop
scas
xchg
aas
andb
xchg
mov
pusha
movsb
sarl
stos
enter
cmp
iret
xor
cli
dec
test
cmp
pop
cld
test
cmp
or
and
mov
call
icebp
mov
out
lret
sarb
test
rorb
mov
cmpsl
fs
and
inc
pop
adc
mov
popf
cmp
xchg
mov
cmpsb
ret
push
jecxz
or
inc
mov
adc
inc
insl
add
dec
andl
cwtl
xor
adc
out
pop
pop
push
stos
dec
adc
sub
fcompl
and
loopne
stos
jg
iret
fdiv
and
lods
testb
fs
jae
or
loope
gs
sub
addr16
ljmp
xor
mov
loopne
in
fucomip
push
das
jp
inc
or
lret
jmp
loop
out
lret
test
pop
or
aaa
push
sbb
punpckhbw
adc
gs
stos
dec
in
pop
or
xchg
xchg
sub
xchg
je
xor
ss
mov
outsb
fcomps
push
notb
xchg
ret
lock
out
movsb
adc
or
push
add
inc
mov
or
xor
insl
repz
or
jo
pop
cmpsb
push
inc
ljmp
cmp
cmp
push
sub
push
enter
cltd
xor
sbb
movsl
add
insl
mov
add
cmc
movsb
push
sbb
mov
mov
bound
pop
mov
push
and
cltd
xchg
in
push
pop
pusha
pop
je
not
pop
loop
jmp
aaa
fwait
je
jbe
divl
inc
jg
popf
lcall
lods
mov
mov
mov
jno
rcrb
push
push
and
adc
dec
xor
adc
add
stos
shrl
and
or
jnp
test
fiaddl
add
sub
xchg
cmc
mov
insl
mov
mov
mov
ret
ret
movb
out
sahf
cmp
and
adc
sbb
push
or
lret
cmc
sub
inc
out
mov
dec
insb
sbb
xlat
outsb
mov
sahf
test
js
mov
int
adc
mov
rcrl
mov
pop
in
xchg
pop
ss
imul
cmp
push
in
insl
push
into
xchg
sbb
std
xchg
std
dec
scas
mov
mov
clc
movsb
jne
xchg
push
inc
std
dec
inc
push
xchg
call
aad
fisubs
and
and
push
jbe
push
ficoms
xchg
lea
ret
stos
imul
jge
out
xor
mov
imul
decl
dec
fisttpl
idiv
lcall
inc
and
xchg
pusha
jb
push
jp
mov
pop
adc
arpl
into
imul
lds
xor
xchg
sbb
cmp
sahf
mov
subl
jge
mov
dec
push
pushf
mov
addr16
mov
arpl
or
cmp
mov
sti
repz
dec
aaa
into
daa
movsb
jg
mov
ja
push
mov
int3
loope
jl
ss
out
pop
cmpsb
outsl
aas
aam
and
aam
inc
cmp
jne
lret
lcall
fst
jno
push
cmpsl
daa
and
daa
cmpsb
dec
inc
in
jne
add
xor
dec
stc
sahf
push
addr16
lock
sbb
cmovb
cmpsl
ret
test
jg
cmp
nop
cltd
std
push
cmp
test
lods
cwtl
ja
mov
sub
aad
pop
int3
and
adc
jo
mov
cmp
sbb
shrb
inc
cltd
lea
add
mov
loopne
lret
xor
iret
test
js
data16
mov
test
aaa
sahf
fs
loop
fidivs
cmp
jle
popa
call
pop
int3
jl
outsb
enter
add
sub
pop
lret
push
adcb
fimuls
repz
sahf
std
fs
add
fadd
rcrl
scas
pop
fildl
push
sub
les
out
mov
cli
xchg
enter
nop
cmp
rcrl
mov
push
lret
nop
fbld
frstor
inc
inc
xor
out
es
mov
into
jmp
icebp
jp
mov
pop
loop
inc
and
dec
mov
outsl
mov
adc
push
dec
inc
push
push
std
mov
imul
or
add
mov
push
pop
loope
or
ja
stc
add
sub
mov
lea
dec
cmp
adc
xor
mov
push
sub
jl
pop
jo
lret
insb
cmp
cli
int3
in
lahf
cmp
jbe
and
outsl
xchg
dec
inc
cmp
addr16
popf
out
faddl
lret
repnz
add
loopne
cmp
add
jle
int3
or
jl
adc
out
adc
xchg
mov
xor
shlb
mov
mov
imul
insl
lock
popf
mov
push
sbb
xchg
xchg
ret
aas
shlb
push
out
sbb
inc
mov
ret
pop
adc
and
mov
push
out
cmp
dec
dec
test
mov
jbe
xor
rcrb
scas
push
dec
movsl
mov
pushf
stc
add
dec
leave
push
sub
push
or
mov
jmp
push
aaa
je
jl
inc
pop
xorl
jp
rolb
js
imulb
ret
fadds
mov
sub
cld
lret
movsl
clc
and
loopne
lcall
andb
mov
data16
je
mov
inc
je
cmp
push
mov
test
add
sbb
fisubl
pop
gs
push
push
dec
fimuls
gs
and
inc
mov
sahf
jmp
fcom
jmp
scas
in
insl
xchg
dec
lret
pop
int
jmp
dec
imul
xor
aas
add
arpl
mov
add
pop
out
sbb
in
xchg
dec
and
adc
shlb
jecxz
pop
push
lret
nop
mov
loop
lods
repnz
outsl
adcb
cwtl
mov
sbb
sbb
adc
test
int
pop
or
mov
test
pop
int
stos
loop
es
sbb
add
mov
xchg
sub
cmp
insl
insb
mov
push
cmpsl
push
mov
sbb
cmpsl
test
push
loope
sbb
ret
xchg
xor
scas
das
jecxz
inc
mov
lahf
fbld
push
lea
pop
sbbb
jle
sarb
add
scas
jno
out
insl
push
xchg
sub
mov
dec
jnp
push
and
cmc
int
mov
sahf
loope
pop
dec
xlat
sub
dec
jbe
adc
pop
lahf
push
jbe
es
jnp
loopne
in
push
js
cmpsb
cmp
ret
ret
and
cs
lods
cmc
idiv
out
mov
adc
pushf
pop
xlat
cmpsl
clc
add
add
or
sahf
rclb
and
test
mov
sub
xchg
mov
xchg
mov
mov
es
inc
or
inc
shl
mov
daa
pop
mov
js
mov
ficomps
in
xor
dec
out
mov
and
shll
es
loope
mov
xor
rorb
stc
hlt
and
dec
clc
mov
repnz
mov
ficomps
mov
jne
pop
dec
testl
jmp
and
lret
xchg
cmp
add
or
adcb
and
pop
jp
outsb
cld
push
out
mov
stos
sti
fmulp
pop
xchg
test
arpl
in
push
in
lret
xchg
xchg
outsb
std
jnp
daa
xchg
ljmp
or
cmpsb
mov
push
jae
aam
fmulp
out
cs
mov
outsb
push
inc
loop
lods
call
adc
and
inc
adc
jbe
inc
incl
ljmp
push
das
mov
pop
mov
xorl
ljmp
pop
jae
out
je
in
les
jb
ljmp
mov
shrl
xchg
pop
aaa
mov
jnp
out
loopne
inc
pop
fbstp
into
into
push
mov
and
iret
adc
test
pop
cmp
cmp
push
add
lds
mov
jmp
fisubl
cmp
dec
fsubl
loop
inc
bsr
cli
add
jmp
in
dec
fadds
sub
mov
and
mov
and
mov
push
call
cmp
pop
cmp
lock
mov
jl
jmp
gs
inc
lcall
ret
and
lds
pop
xchg
orb
push
pop
and
in
adc
mov
xor
test
repnz
jns
add
ss
push
xchg
das
test
mov
add
pop
jbe
outsl
cwtl
or
hlt
inc
mov
pop
adc
push
insb
sbb
in
mov
pop
sbb
fists
xchg
push
pushf
cwtl
inc
mov
pop
cmp
movsb
stos
dec
push
pop
adc
and
je
lea
or
and
leave
outsb
xor
lahf
xchg
inc
dec
aas
leave
and
rclb
icebp
mov
pop
fdivrl
jnp
loope
add
jge
pop
mov
pop
cmp
and
nop
mov
cmp
fucom
mov
sbb
and
mov
push
ret
gs
xor
mov
out
sahf
call
cmpsl
int3
jecxz
nop
jmp
out
cmp
mov
ret
mov
add
subl
xchg
sbb
xor
in
pop
daa
fcmovne
pushf
call
std
mov
cmp
test
ret
xor
in
les
cmp
jecxz
sbb
pop
das
sar
icebp
icebp
std
or
aaa
xchg
xchg
sbb
icebp
into
out
cwtl
jp
pop
test
jge
or
xchg
xchg
out
adc
lods
adc
xchg
lcall
dec
push
sar
adcb
cmc
call
jo
scas
jecxz
xchg
push
cmp
push
cs
movsl
push
xlat
sahf
testl
in
xchg
cmp
mov
dec
or
add
loopne
add
jle
mov
cmp
and
sahf
and
test
outsb
and
mov
inc
mov
mov
mov
mov
js
xor
fidivl
int
inc
outsl
push
or
sbb
push
sbb
data16
cmp
mov
dec
negl
mov
inc
sbb
xor
add
adc
push
xlat
push
pop
outsl
shl
xor
in
out
int3
icebp
inc
aam
clc
ss
dec
ror
lret
cmpsb
push
test
cmpsb
lock
test
mov
jge
cli
push
dec
into
mov
fstp
lret
repz
cmp
loope
inc
add
sub
dec
iret
jl
mov
call
mov
mov
fsubrl
fs
into
loopne
adc
dec
xor
movsl
repnz
pop
je
jbe
sub
les
int3
cmp
lods
jb
sbb
mov
push
adc
stos
sub
add
xor
mov
out
fsin
cmpl
sbb
out
repz
lret
in
cmp
jecxz
sti
mov
stos
fcmovbe
mov
or
inc
or
or
push
out
ja
divl
shlb
call
je
mov
pusha
pop
cld
gs
mov
outsb
repnz
mov
call
mov
lock
into
sti
aas
aam
into
outsb
arpl
mov
adc
sub
stos
les
pop
fstl
test
test
fsts
aas
lea
mov
into
fbld
ret
mov
daa
jmp
jp
popa
jbe
mov
int3
into
and
les
mov
mov
pop
pop
outsb
lea
xchg
scas
dec
push
xor
xchg
insb
fs
jno
xchg
jbe
push
outsb
add
in
popa
and
ret
sub
mov
fidivrs
mov
addl
ljmp
dec
sbb
jmp
dec
int
xor
stc
pop
mov
insl
mov
insl
or
push
mov
inc
in
inc
hlt
outsb
inc
xchg
adc
fwait
imul
mov
lcall
call
jle
sbbl
mov
clc
mov
jb
pop
rcrl
mov
jmp
shrb
sbb
sub
mov
jp
lahf
sub
pop
sbb
mov
cli
js
shlb
cmp
fucomi
stos
xor
add
orb
lds
inc
or
inc
adc
fsubrs
mov
sub
shlb
test
jno
sbb
lret
out
pop
cmpsb
cmp
insb
add
insb
mov
jo
mov
jmp
sbb
in
fbld
mov
cmp
xchg
scas
cmpsb
jo
cmp
stc
mov
mov
dec
xchg
and
out
aam
popa
push
dec
loopne
push
cwtl
sub
push
into
inc
dec
pop
cmp
leave
cmp
stos
or
iret
add
add
pop
push
and
je
mov
lods
sub
mov
in
pop
xlat
outsl
mov
xchg
mov
lods
mov
add
jge
sub
cmp
jno
imul
lcall
cmp
cld
mov
sarb
fisttps
mov
int3
sub
or
sbbl
in
or
test
push
xlat
jge
or
cwtl
popf
ret
adc
jle
lds
and
push
push
bound
inc
pop
sub
jnp
icebp
andl
inc
shr
pop
pushf
mov
jl
das
cmp
sbbb
fisubs
bnd
sti
jbe
decb
lods
inc
or
push
cli
cmp
xchg
ss
jmp
sarb
es
fwait
scas
add
mov
repz
stos
cmp
into
cmpsb
mov
xchg
add
and
out
xchg
std
in
sbb
jle
insb
shll
sahf
mov
addr16
mov
mov
jnp
cmp
cmp
adc
or
sub
push
mov
shlb
negl
leave
shl
mov
pop
adcb
jecxz
sub
push
and
pop
dec
adc
movsl
inc
push
xor
popa
and
xchg
clc
js
mov
adc
mov
int3
cmp
jo
cli
jbe
push
push
mov
sub
add
leave
pop
inc
lret
je
int
sbb
add
jb
add
mov
rorb
rol
outsb
fsubp
scas
sarb
pushf
xchg
fstl
es
and
incb
push
adc
adc
test
ret
movsl
jge
fidivl
adc
fsubl
dec
imul
lcall
jo
mov
rorb
stos
sarb
das
and
jbe
pop
push
int3
dec
stc
not
fadds
in
jge
add
iret
push
add
hlt
dec
dec
dec
and
mov
das
adc
push
pop
add
in
inc
push
sub
sbb
or
mov
pop
xchg
mov
in
mov
iret
cli
push
xchg
mov
jecxz
faddp
sar
cmpsb
pop
pop
ret
sarb
pop
in
iret
mov
shlb
icebp
jae
out
hlt
mov
cmpsl
mov
jne
dec
push
cmpsb
icebp
mov
xchg
cltd
xor
rorb
mov
hlt
mov
pop
stos
sub
divb
push
inc
sahf
ljmp
cmc
lret
andl
push
enter
push
inc
adcb
mov
lods
mov
cmp
insb
aas
aaa
or
sub
pop
insl
and
inc
cmp
into
sbb
cmp
leave
dec
cmp
and
and
xchg
xchg
pop
jb
cmp
scas
push
mov
mov
outsb
push
mov
sub
rcll
jg
inc
scas
inc
sbb
mov
mov
mov
mov
dec
jg
push
push
in
scas
outsl
sbb
js
xchg
fsubs
shlb
cmpsb
subl
mov
xor
dec
out
inc
mov
bnd
sub
cli
jp
cltd
sbb
and
mov
add
sbb
nop
mov
andl
mov
mov
sbb
hlt
inc
out
lcall
ljmp
aaa
cltd
push
cmp
scas
fs
arpl
mov
mov
in
in
lcall
inc
fstpt
xor
mov
add
pop
aad
loope
push
mov
dec
pop
xchg
push
inc
adc
xor
insl
test
push
pop
push
xchg
ficompl
loop
movsb
jp
rep
stos
fnstsw
dec
xchg
push
inc
cmpsl
int
sub
adc
cmc
sub
nop
enter
xor
cmp
sub
lahf
imul
arpl
enter
pop
arpl
xchg
cmp
inc
fldt
push
add
das
fldenv
in
dec
in
xchg
adc
pop
jo
xor
icebp
or
jns
loope
cwtl
clc
stos
sub
aaa
les
push
jne
scas
sub
mov
js
sbbb
inc
repnz
and
jmp
xor
pop
mov
xchg
lahf
mov
lods
xchg
leave
repnz
test
stc
test
ss
rorl
add
inc
sub
sbb
loop
popa
xorl
test
sbb
movsb
jmp
mov
cltd
pop
sti
dec
pop
pop
push
inc
cmp
pop
icebp
adc
push
je
jmp
imul
movsb
inc
cmp
xchg
pop
fsubrs
into
xorb
mov
in
lea
adc
mov
out
jns
xor
hlt
clc
push
shlb
out
test
sub
or
jp
cmp
mov
fidivl
pop
clc
enter
mov
cmpsb
jbe
lds
iret
cmp
sbb
inc
pushf
mov
jmp
xchg
mov
xor
sub
icebp
jecxz
lods
jb
cmp
je
nop
adc
pop
push
push
aam
add
xchg
lret
jns
repz
add
ljmp
jnp
ss
lock
cs
adc
xchg
into
jno
pop
fwait
cmp
cmpl
inc
cltd
imul
in
mov
into
adcl
cs
outsl
popa
gs
icebp
add
mull
rol
xchg
lock
pop
out
cs
sub
pusha
out
stc
cmovnp
dec
sbb
andb
in
cltd
test
adc
fisubrs
push
rcll
xor
imul
mov
dec
daa
mov
test
or
and
mov
insl
xchg
adc
roll
cmpsb
adc
scas
adc
movsl
mov
fisubrs
push
daa
insl
jmp
sbb
cld
pop
adc
sbb
movsb
sub
xor
xlat
lods
iret
or
shlb
push
add
andb
or
arpl
or
cltd
iret
jo,pn
inc
dec
int3
dec
and
xor
je
push
fimull
es
outsb
push
nop
cmp
push
sub
jmp
ret
xor
push
arpl
adcl
in
arpl
push
fistl
push
outsb
jle
mov
mov
andb
sub
and
cmp
jo
fdivrl
rorb
es
cli
push
lods
scas
xchg
lods
dec
test
lods
call
scas
adc
fisubrs
lahf
cltd
mov
test
fnsave
enter
inc
mov
jbe
or
sarl
shlb
pop
dec
cmp
sub
inc
jge
add
lret
sbb
lcall
mov
cs
xor
daa
jl
ljmp
mov
dec
test
xchg
adc
sub
mov
fcomps
jecxz
lods
stos
rcr
ds
fcmovnb
sarb
mov
dec
add
jmp
mov
sbb
in
jmp
add
rorb
ret
ds
fmuls
mov
scas
jbe
pop
adc
rol
movzbl
leave
mov
ja
pop
mov
push
or
xchg
jae
fstl
shl
dec
hlt
xor
sbb
fstps
rcrl
mov
jl
sub
imul
lret
sbb
cs
andb
inc
or
mov
popf
rolb
cmp
shl
bound
xchg
or
jmp
sbb
sub
dec
fldcw
sub
sub
add
inc
addb
pop
jg
push
jbe
dec
mov
or
sub
scas
leave
xchg
adc
fcomps
dec
clc
or
mov
add
pop
cmp
cs
push
stos
sbb
dec
mov
adc
sbb
jbe
nop
mov
and
inc
push
sti
rcrb
lock
popf
push
mov
jl
xchg
lods
push
bnd
lret
shrb
imul
jb
pop
pop
xchg
in
dec
sub
push
or
push
mov
enter
lea
aam
test
scas
out
insl
jle
sbb
aad
mov
rorb
in
unpckhps
and
xchg
push
cwtd
dec
and
dec
rcrl
adc
ds
pop
hlt
decl
xor
sub
add
dec
adc
shlb
icebp
xchg
test
shlb
fldenv
jno
aas
loopne
stos
dec
fiaddl
mov
outsb
popf
pop
fcompl
js
rcl
mov
xlat
add
outsb
inc
or
pop
mov
or
insb
je
movsb
fisubl
pusha
or
cmp
pushf
sti
lret
lods
mov
lahf
and
cmp
jg
stos
push
xor
xchg
xchg
leave
sub
pop
or
in
jo
cltd
sub
pop
mov
dec
push
dec
mov
sub
push
and
andb
add
lock
xchg
mov
pop
nop
mov
jo
cmp
push
mov
stc
push
jbe
negl
dec
fidivl
rorb
push
flds
sti
call
mov
cli
rcrl
lret
pop
pop
mov
mov
lds
push
idivl
fwait
popf
pop
nop
imul
ja
or
testl
pusha
divl
sbb
out
adc
xchg
sbb
xor
pop
sbb
and
pop
lcall
xor
pop
xchg
ss
ss
sahf
push
push
cmp
gs
mov
push
add
dec
xor
sbb
test
outsb
xchg
stc
xor
sbb
faddl
rorl
cli
mov
and
mov
cld
cmp
inc
pop
sti
xorl
ds
cmpsb
fnstenv
ja
dec
mov
xchg
js
aam
inc
pop
int3
nop
adc
adc
je
add
fisttpll
push
mov
cmp
leave
mov
and
xor
push
ret
mov
dec
jmp
filds
inc
mov
out
stos
rol
jae
pop
shrb
outsl
mov
pop
push
test
lods
cmc
inc
jecxz
add
push
popa
and
jae
xor
mov
jp
pop
repnz
cmpsb
inc
xor
mov
mov
mov
pop
cmp
or
insb
add
mov
call
imul
pop
iret
jnp
lcall
sbb
pop
notb
add
pop
adcl
jnp
sbb
movsl
adc
dec
push
add
jle
mov
pusha
shlb
fldenv
mov
inc
or
mov
test
insb
lret
fidivs
pop
and
xchg
jne
ret
jo
test
andl
cli
xor
mov
daa
push
jle
cmp
sub
cmpsb
push
pushf
loopne
mov
inc
xor
data16
movsl
imul
ljmp
cmp
js
dec
push
pop
mov
inc
xor
cmp
pop
scas
pop
mov
add
sahf
fwait
sbb
js
mov
adcb
mov
or
pop
das
sub
cmp
bound
ljmp
cmpl
pop
scas
jg
in
pop
sbb
popa
fsub
jo
sbb
mov
jge
cmp
and
adc
out
mov
xlat
mov
out
loop
dec
orl
push
dec
in
mov
xor
xor
sub
inc
pop
or
xchg
add
push
ss
ret
cmc
dec
sbb
sbb
pop
cmp
jp
ljmp
sub
sarl
outsb
call
push
dec
mov
in
push
ja
leave
pop
sbb
sub
add
sbb
imul
imul
mov
xchg
or
ja
jmp
les
inc
mov
test
dec
xchg
loop
push
in
stos
shrl
into
fimull
inc
in
mov
jmp
mov
lea
loopne
xor
fstpt
push
sti
leave
adc
xchg
clc
insl
pop
adc
cmp
mov
mov
jo
in
fstpl
mov
inc
negb
pop
out
sar
sub
fs
in
sar
aas
cli
push
aam
xchg
mov
pop
loope
insl
xchg
mov
jle
mov
and
fwait
sub
cli
psadbw
sahf
adc
insl
cmp
xor
jns
xor
cmc
pop
jmp
je
pop
dec
shl
add
inc
pop
mov
sub
icebp
sbb
mov
in
test
dec
ficoms
pop
ja
lcall
jp
mov
inc
sub
sti
shr
mov
mov
iret
repz
push
inc
inc
std
aas
int
out
movsb
pusha
adc
repz
jmp
pop
and
test
repz
pop
into
jae
movl
cmp
cmpsl
adc
cmp
dec
xor
es
jno
arpl
outsb
mov
push
fs
adc
clc
mov
iret
cmpsb
lret
pop
data16
add
sub
ss
or
jmp
and
shlb
push
xchg
loope
push
outsb
out
movsb
in
insb
mov
dec
or
push
sub
fcmovnbe
lahf
jne
inc
or
pusha
sub
mov
sbb
mov
mov
and
and
pusha
sti
les
xor
sbb
ret
pop
adc
test
in
add
mov
mov
cmp
sub
add
rorl
cmp
jo
mov
popa
jle
xchg
sub
cmp
jb
popa
fcompl
dec
cmpsl
adc
jns
out
cmpsb
jns
stos
mov
fwait
mov
aas
lock
mov
jle
cmpsl
add
sarl
inc
or
ss
inc
insb
sti
jnp
or
lock
dec
cs
mov
imul
xchg
sbb
mov
loopne
dec
add
jnp
sti
and
xchg
loope
rolb
xchg
lds
or
sub
hlt
int
and
pop
jne
add
xchg
fisttpl
out
mov
and
data16
xorb
decb
xor
add
pop
bound
pop
sub
sbb
daa
lahf
fcmovne
xchg
or
mov
cltd
arpl
test
loopne
stos
adcb
rcl
mov
notb
cmpsb
jge
xchg
cmp
mov
sahf
nop
fistps
inc
fadds
mov
ja
loop
in
push
xchg
rolb
hlt
cmp
xor
and
mov
jne
cmp
dec
icebp
mov
loopne
ret
fdivl
pop
dec
push
mov
push
pop
push
ss
rcll
jne,pt
lret
ret
xorb
sub
fwait
sbb
sub
nop
and
std
aas
pop
outsl
popa
mov
movsb
mov
mov
dec
aam
mov
jg
dec
lods
popa
mov
xchg
add
xor
loop
jno
mov
push
and
cmp
inc
mov
add
push
mov
push
loope
fcomip
imul
xchg
out
sbb
pop
cwtl
mov
dec
mov
cmp
std
xchg
lret
pmulhuw
push
or
pop
cmp
mov
and
and
xor
seta
loop
jae
out
jb
push
pop
sbb
leave
mov
cwtl
mov
jmp
pusha
fistl
xor
lods
mov
insb
movsl
sbb
inc
jp
adc
movsl
dec
sbb
push
push
rorb
lret
andl
push
cli
xchg
mov
icebp
or
inc
inc
jo
add
es
pop
cmp
cmp
rorb
jp
pop
mov
loope
sbb
nop
scas
cli
jne
aaa
xchg
jle
pop
lahf
pop
xchg
add
fidivs
mov
cmp
ja
bound
xchg
inc
idiv
push
xor
xchg
sub
jns
pop
adc
pop
ret
xchg
xor
dec
push
or
mov
mov
jne
cltd
jmp
cmp
xor
fwait
sti
xchg
or
stos
jg
jp
stc
data16
fsubs
movsb
mov
xchg
fwait
imul
jns
adc
adc
add
sub
outsl
cmpl
pop
xchg
jno
cmp
ss
and
xchg
sahf
add
cmp
mov
add
cli
or
mov
inc
xor
test
and
add
jmp
xchg
mov
and
sbb
push
lret
in
mov
rorl
push
aas
dec
jbe
or
sarl
or
movsb
in
mov
sahf
test
stos
ret
imul
shll
or
bound
sub
inc
call
cmp
cmp
in
negl
aaa
jae
loopne
pushf
cmc
and
or
adc
pop
out
addr16
xor
or
or
sti
mov
and
xchg
dec
push
ljmp
in
jno
outsb
mov
int
scas
iret
enter
jmp
jb
jo
cli
push
rclb
inc
pop
enter
xchg
add
mov
lea
sbb
rorb
hlt
jmp
pop
push
mov
add
xchg
and
xchg
mov
dec
xchg
sti
jecxz
std
int3
inc
push
lods
daa
mov
pop
insl
xchg
repz
inc
stos
push
shl
add
bound
movsb
ja
stos
call
lcall
test
lcall
add
inc
xchg
inc
xor
cwtl
jno
lret
mov
sub
les
ret
icebp
int
ljmp
cmpsl
icebp
cmp
pop
cmpsl
imul
es
pop
imul
not
in
clc
sub
aas
leave
xchg
stos
aas
dec
inc
fdivrl
push
int3
push
test
cmpb
push
repz
xchg
push
dec
inc
and
sbb
xchg
cli
leave
shr
filds
loopne
or
je
rcl
xchg
pop
push
arpl
pusha
mov
fnstenv
popf
sbb
pusha
jae
out
dec
fstps
das
push
push
inc
push
leave
inc
xchg
pop
inc
pop
and
xchg
sbb
xor
dec
push
fcoms
mov
dec
mov
pushl
fsub
mov
scas
mov
ljmp
dec
stc
gs
pusha
dec
jo
adc
jne
xchg
xchg
push
cmpsl
fcoml
sbb
insl
in
cltd
inc
add
xchg
add
ss
mov
lcall
scas
movsl
daa
adcl
test
jl
cs
sbb
mov
add
mov
lods
std
movl
add
inc
adc
icebp
pop
ljmp
xchg
pushf
mov
pop
test
sar
ret
inc
add
push
dec
mov
mov
imul
jo
stos
pop
adc
lahf
pusha
les
jbe
loopne
adc
adc
mov
in
in
out
cwtl
jns
xchg
dec
pop
adc
and
int
stos
fists
pop
in
bound
movsb
imul
add
xchg
jg
mov
jl
popa
mov
push
and
icebp
xor
arpl
and
sub
mov
sub
push
sarb
fwait
xchg
and
jp
lock
xor
fstl
xor
loop
pop
mov
add
inc
jb
and
and
dec
fisubrl
hlt
push
pop
roll
adc
std
jle
lret
lods
pop
cli
insb
fs
call
arpl
or
rcr
and
leave
imul
jmp
das
cmpsl
inc
sub
pop
es
add
push
fists
lret
push
lret
mull
xchg
ss
cmp
xor
push
jl
dec
cmp
mov
sub
mov
sub
dec
sti
lods
push
les
inc
add
pop
std
sbb
push
pop
mov
jge
xlat
call
fwait
xchg
cltd
ds
inc
fldcw
or
jmp
add
pop
fsubs
testb
push
in
std
push
and
adc
std
shlb
mov
adc
ffreep
lcall
xor
xchg
sbb
push
test
add
mov
pop
mov
pop
cltd
cmp
scas
sbb
jae
inc
sub
or
nop
jnp
push
fwait
ret
jnp
out
sti
push
ret
fimull
fiadds
dec
int
scas
call
shll
stos
adc
sbbb
xchg
fwait
xlat
mov
loopne
cmp
mov
cmpsb
sti
jno
cmp
mov
hlt
cwtl
push
shlb
lgs
aad
cmp
inc
lahf
xchg
push
pop
mov
sub
sbb
leave
addl
mov
movsb
scas
cmp
or
js
and
xor
imul
xchg
push
imul
xchg
lahf
fisubl
xchg
dec
push
rol
repnz
or
mov
cmpsl
jno
jo
test
dec
push
mov
fwait
adc
fidivs
aaa
xor
xchg
addl
dec
pop
push
lods
dec
pop
adc
mov
lahf
mov
lea
sub
loop
dec
clc
enter
add
push
adc
imulb
out
push
mov
mov
mov
into
dec
das
inc
adcb
lock
jns
mov
mov
jne
out
sub
lock
mov
xor
mov
test
add
loop
fldl
ds
fld
lds
mov
in
imul
and
sub
test
sbb
xchg
and
xchg
add
ret
mov
loope
daa
ret
and
push
movsl
pop
and
arpl
or
bound
popf
out
insb
imul
pushf
jno
xchg
sahf
cmc
push
stos
add
push
push
imul
mov
adc
pop
out
icebp
jnp
fucomp
adc
jo
and
ljmp
fdiv
push
cmp
fwait
push
xor
xchg
out
jecxz
dec
mov
xor
out
inc
inc
in
mov
jne
jae
pop
shrb
cmp
fisubl
mov
push
test
les
cmp
mov
adc
xchg
or
and
and
inc
push
aad
jge
int3
dec
sub
jle
stc
data16
je
fisttpll
pop
mov
xor
push
shll
or
fists
outsb
mov
cmp
out
push
fabs
push
test
in
xor
outsl
pop
xchg
insl
and
jbe
xchg
psllq
stos
jne
ret
int
call
pop
inc
pop
idivl
and
pushf
mov
xor
sbbl
cli
inc
ds
cmp
mov
pop
aaa
sbb
add
and
aad
xchg
lods
and
and
xchg
cmpsb
loope
pop
jae
pmullw
dec
or
stc
sbb
sbb
push
loop
jmp
mov
rcrl
fildll
ss
jne
push
xor
notl
repnz
pop
cmp
js
ss
rcr
pusha
ds
pushf
xchg
test
mov
mov
push
pop
out
pop
inc
push
xchg
and
xchg
cmp
jo
jl
scas
mov
bnd
fscale
cmp
mov
lret
sti
pushf
jae
push
cmpb
or
mov
xor
adc
or
ud1
push
lock
lea
loop
or
std
mov
rcrl
cli
loopne
adcl
test
aas
pop
add
adc
psrad
xlat
fisubrs
inc
mov
stos
push
jmp
xor
mov
inc
fwait
inc
push
adc
adc
loopne
ret
sbb
sub
cmp
jae
push
bound
add
mov
call
xlat
inc
cmp
enter
add
inc
mov
nop
dec
mov
and
in
xchg
ja
jns
adc
lods
shlb
js
jge
push
hlt
aas
pop
int
jno
cli
outsb
lret
sbb
push
xor
pop
je
stos
mov
xor
movsl
popa
lret
notb
popf
xor
sbbb
add
jge
in
pop
lock
loop
movsl
xor
cltd
ret
lcall
lcall
pop
stos
mov
mov
stos
and
jae
in
add
jne
and
mov
sub
mov
ficoms
movsb
lcall
lods
js
xchg
inc
add
mov
sbb
jo
jg
pop
inc
dec
ljmp
iret
mov
aad
mov
shrb
jl
adc
sahf
mov
bnd
mov
cmpsb
lcall
inc
xchg
jbe,pn
lss
imul
add
mov
test
dec
repz
stos
jno
inc
adc
add
aas
mov
jmp
inc
adc
ret
push
clc
sti
pop
xchg
fidivl
cmp
jp
and
jecxz
fstpl
das
push
aas
jne
lahf
pop
aam
into
out
jno
or
shll
sbb
xchg
sbb
mov
movsl
or
pushf
repnz
mov
push
loop
pushf
dec
cmpsb
mov
push
xchg
cwtl
sti
fadds
outsl
push
jmp
insl
and
push
into
mov
inc
rcrw
xchg
xor
je
loop
dec
dec
cmp
dec
lods
adc
lret
repz
sbb
ja
cwtl
adc
mov
outsb
xchg
push
push
fld
sbb
inc
xchg
addr16
fdiv
add
adc
push
xor
enter
add
movsl
mov
test
and
ret
lcallw
out
and
jae
out
in
cld
scas
mulb
andb
xchg
into
test
sarl
iret
into
pop
pop
aam
pop
test
aam
cmpsl
lods
ss
popa
mov
inc
mov
cmpsl
mov
shll
mov
clc
jp
iret
push
adc
sbb
add
stos
lret
xchg
mov
xor
clc
dec
jle
shr
mov
add
ret
repz
jmp
mov
mov
sbb
mov
mov
xchg
jb
or
inc
add
and
pop
rcr
dec
jae
imul
sbb
outsb
aad
add
or
dec
repz
in
mov
out
cmc
jl
or
popa
adc
fs
imul
imul
xor
and
sbb
mov
pop
sbb
cmp
mov
les
fdiv
mov
cmp
shl
cmp
call
push
add
hlt
test
fildll
cli
js
sahf
lods
cld
aam
jle
adc
sbb
bound
jp
pop
sar
lret
test
out
mov
fldl
outsb
inc
cli
adc
sbb
push
add
aad
mov
xchg
addr16
lcall
test
test
mull
mov
jge
inc
scas
in
inc
scas
jbe
int3
pop
shlb
and
inc
cld
pop
stos
and
aam
inc
lcall
jge
jae
push
mov
mov
stos
jle
ljmp
xchg
popf
jg
xor
mov
ss
or
pop
outsb
aad
ljmp
or
adc
jo
xchg
repz
out
in
xchg
testl
sti
mov
mov
aam
test
pop
loope
mov
sahf
inc
aam
sub
xor
pop
jo
xchg
jmp
push
aad
frstor
cli
dec
inc
bound
lods
adc
ds
jae
jmp
push
movsl
aad
cli
es
push
stos
dec
aas
scas
pop
mov
add
push
jbe
stos
push
outsb
mov
cmp
mov
inc
jmp
idivb
fcompl
adc
sub
insl
pop
mov
mov
cmp
popa
dec
xor
jge
lea
sbb
test
and
stc
jnp
jp
add
lds
repz
dec
das
jae
jno
jmp
mov
xchg
or
lret
jb
mov
leave
inc
fwait
lods
jno
pop
mov
or
mov
loopne
imul
mov
xor
hlt
fsubrl
aad
sub
test
push
jmp
faddp
mov
dec
fmulp
lock
cld
mov
daa
push
adc
push
out
ljmp
add
roll
call
adc
jp
and
and
stos
out
cltd
sbb
xlat
arpl
ja
mov
rcl
pushf
scas
pop
xlat
mov
es
das
cli
aam
loope
or
daa
add
mov
fisttpll
jbe
shrb
push
out
mov
and
push
sub
push
and
cmp
adc
add
inc
ss
adc
jae
xor
xchg
push
push
push
cwtl
js
xchg
mov
jle
inc
aad
ljmp
push
ret
ss
xchg
les
xor
ja
pop
mov
mov
mov
aam
hlt
mov
or
sbb
pop
sub
pop
imul
test
outsb
pop
shlb
aad
adc
mov
mov
adc
rol
inc
cld
sbb
es
mov
aas
push
lea
aam
mov
lea
scas
sub
cmp
xchg
cli
aas
mov
jns
data16
test
mov
nop
ret
jbe
add
pop
xor
hlt
xor
std
xor
adc
out
mov
cmpsb
lds
or
scas
xor
inc
jno
jp
rol
jnp
icebp
cmp
jg
sbb
add
ljmp
dec
lahf
xor
sti
inc
mov
dec
fistl
imul
adc
jmp
test
cmp
out
pop
outsl
xchg
cmpsl
dec
mov
add
dec
cmp
insb
pop
out
imul
mov
push
or
pop
or
pop
lahf
mov
mov
negl
pop
mov
aaa
cmpsl
pop
loopne
push
pusha
ljmp
and
or
sub
mov
adc
cmc
lds
insb
sub
mov
ljmp
popf
pop
int
call
lods
jns
in
hlt
xchg
clc
sbb
in
xor
jl
xchg
leave
mov
inc
clc
mov
pop
popl
fstpt
jne
rolb
xor
out
xchg
lock
dec
mov
popf
jb
xor
xchg
add
notb
aaa
jae
inc
xor
ret
adc
fisttps
jbe
in
lret
aad
in
popa
imul
test
cwtl
mov
sub
lds
jnp
fldt
sahf
mov
lcall
fldcw
andb
int
lds
sub
xor
adc
repz
rol
loope
mov
cmpsl
xlat
sti
das
cs
lret
push
pop
push
mov
and
sbb
sahf
jno
cmpsl
int3
ffree
xor
rolb
pop
pushf
push
mov
mov
lock
nop
gs
add
clc
rcr
push
pop
sub
mov
int
testb
dec
sub
and
insl
mov
sub
pop
cltd
scas
cltd
out
das
incl
pop
jno
push
xor
psubusb
add
push
xor
push
xlat
std
shr
jl
lcall
inc
jecxz
lahf
iret
lds
in
jge
cmp
daa
sbb
loope
adc
into
pop
scas
jl
sub
int3
ret
sub
ljmp
or
or
dec
and
adc
cmp
sub
mov
push
ljmp
mov
jbe
hlt
push
cmp
out
int
adc
ljmp
or
cli
ljmp
cli
fists
iret
push
aaa
filds
insl
dec
pop
outsb
imul
daa
aad
sub
sbb
cmp
push
jae
dec
xchg
stos
std
lea
ret
scas
mov
cmpsl
test
arpl
ss
lock
sub
in
lahf
push
cmp
std
mov
lock
ja
mov
in
mov
popf
pop
pop
popa
sub
push
or
fdivl
leave
sub
mov
loopne
shlb
fdivl
add
scas
push
les
push
sbb
pop
popf
xorb
out
mov
lret
add
xor
sub
nop
mov
pop
stc
adc
test
sub
push
sub
lret
leave
lds
rcr
ds
leave
addr16
std
cli
mov
xchg
cmp
sbb
and
inc
mov
mov
cmp
cmp
add
mov
lcall
sbb
or
pop
and
push
outsb
adc
insb
dec
mov
pop
jge
mov
xchg
sbb
sbb
jbe
xchg
mov
leave
into
cmp
adc
pop
pop
ret
mov
call
xchg
inc
bound
or
loop
mov
jnp
pop
sub
jnp
jecxz
jmp
movsl
nop
push
je
jmp
fucomp
lea
add
xor
loopne
leave
imul
jae
cmpsb
inc
pop
mov
aas
mov
cmp
mov
aas
notl
mov
cld
mov
rclb
test
cmc
dec
push
cmp
outsl
rorl
hlt
in
xchg
pushl
leave
dec
sqrtps
fsts
xor
into
repz
inc
sub
pop
push
fwait
pop
aaa
inc
adcb
jb
repnz
in
or
jp
test
sub
inc
xor
inc
add
bound
jo
mov
mov
insl
mov
cmp
push
add
cmp
popf
push
fwait
xchg
sbbb
jo
fwait
stos
test
les
jecxz
scas
cmp
xchg
stos
popa
inc
xor
and
mov
ds
test
xor
pop
sub
sahf
jmp
aas
mov
enter
out
int3
inc
inc
fldenv
int
mov
arpl
and
fadds
dec
mov
in
adc
cmp
mov
jae
mov
pop
aam
inc
xor
or
outsw
leave
cmp
xlat
push
xchg
mov
sub
cmpsl
test
sub
lret
sbb
dec
fldenv
les
sub
hlt
push
mov
mov
jae
jno
jnp
mov
hlt
jmp
jl
mov
mov
and
push
adc
rolb
loop
xor
inc
and
cmc
js
adc
sahf
std
cmpsl
fwait
lret
pop
push
and
mov
and
mov
mov
fcmovne
pop
ret
fdivr
pushf
add
sahf
inc
imul
es
pushf
das
sub
test
mov
cmpl
mov
mov
jmp
dec
in
popl
outsl
sub
xor
mov
push
sbb
cmp
mull
cmpsl
stos
iret
dec
cmp
sbb
shlb
addr16
ljmp
arpl
daa
ret
and
cli
pop
inc
sbb
shrb
pop
test
mov
jne
push
shl
pushf
mov
mov
push
jb
fdivrs
mov
sti
out
jae
fsts
sbb
jbe
adc
call
orb
bound
dec
adc
jno
xchg
int
dec
iret
mov
mov
push
jb
or
or
xchg
mov
loopne
out
fiaddl
shufps
nop
lahf
stos
cmp
mov
fcom
inc
mov
test
test
mov
fisttpl
jno
ret
cltd
mov
fmull
std
repnz
xchg
sarl
cli
cmp
mov
hlt
incl
jp
push
andl
fs
add
or
popf
or
stos
sarl
test
push
jnp
ljmp
cmp
mov
stos
orb
cmp
movsl
pop
flds
push
cmp
jmp
arpl
cmp
sub
leave
cmp
push
js
mov
xchg
xchg
aas
push
inc
stc
notb
inc
mov
sbb
push
cwtl
insb
inc
xchg
jnp
outsl
and
aas
cmp
cmp
pop
and
pop
push
icebp
jmp
sbb
dec
xor
sub
mov
sub
push
xor
sub
and
and
out
shrb
in
js
inc
cs
add
lcall
test
xorl
repnz
fstps
pop
fldt
aad
call
in
cli
push
inc
inc
mov
rcl
dec
jmp
xchg
popa
mov
jle
out
mov
ror
cmp
push
sbb
data16
xor
aaa
xchg
jbe
aas
sbb
out
mov
pop
xor
mov
in
test
in
shrl
sub
cltd
jecxz
jns
mov
mov
push
mov
ja
mov
adc
lahf
jb
cmpb
sub
add
loopne
and
fsub
scas
and
xchg
sahf
jno
jge
mov
xor
hlt
xchg
scas
or
stos
sub
mov
daa
and
sub
outsb
sbb
fsubrl
pop
sub
and
repnz
inc
pop
mov
dec
push
mov
aad
or
das
xlat
push
ficoms
push
in
push
or
sbb
loope
sbb
cmpsl
xor
movsb
leave
ja
rcl
sti
sarl
and
pushf
in
mov
cltd
sbb
or
orb
and
cmpsl
repz
and
inc
imul
xorb
outsl
inc
jg
xor
mov
fwait
test
push
sbb
popf
pop
sub
add
out
pop
imul
xchg
inc
stc
fmull
jo
pushf
imull
int3
and
mov
repz
sub
stc
jne
aas
int3
movsl
mov
mov
les
jle
pop
adc
cmc
dec
out
add
inc
mov
cwtl
mov
sub
mov
mov
push
sbbl
jne
daa
inc
mov
xchg
hlt
mov
cmp
jo
mov
adc
push
std
xor
std
int
add
cmpsb
dec
xchg
jecxz
out
xchg
adc
rcrb
outsb
fwait
inc
or
scas
in
push
mov
pop
bound
add
xlat
sbb
les
push
jl
xchg
mov
mov
into
mulb
leave
jecxz
aas
pcmpeqw
test
mov
jp
ret
push
divl
mov
mov
inc
dec
in
add
push
mov
leave
jo
dec
mov
repz
aad
fcmovnb
adc
test
mov
xlat
cld
pop
leave
les
jp
les
jge
jo
pop
push
ss
push
out
hlt
nop
ret
push
push
jmp
prefetch
or
aad
sub
gs
loop
orl
push
nop
filds
es
iret
mov
stos
shrb
rcr
sti
test
jecxz
inc
add
adc
in
xor
in
jecxz
outsb
mov
insl
pop
imul
xor
into
das
add
xor
out
out
scas
cli
sbb
movsl
jle
add
pop
or
xlat
popl
jae
jnp
into
jmp
ds
movsl
stc
lods
cs
into
sti
in
sarl
insl
mov
fildl
mov
cli
cmp
mov
push
enter
cs
push
ja
cmp
into
inc
fnsave
add
into
xor
cmc
lcall
out
imul
mull
pop
shlb
fstpl
lds
dec
sbb
lahf
into
jp
in
in
add
orb
adc
into
xlat
lea
mov
das
fsts
jg
cmp
cmp
lds
add
clc
mov
add
mov
lcall
lahf
out
sub
xchg
pop
repz
imul
xchg
pop
xchg
jno
cld
out
or
jnp
cmpsl
ljmp
icebp
adc
sahf
mov
adc
cwtl
cli
xchg
insb
cmpsl
in
and
ds
out
cwtl
adcl
cs
inc
or
xchg
dec
push
mov
adc
in
inc
inc
jne
jecxz
in
fiaddl
cmc
and
cwtl
mov
in
push
mov
mov
mov
cmp
mov
subl
adc
sub
loopne
jle
xchg
sub
lret
dec
or
lahf
aaa
ret
dec
es
and
xor
pop
mov
xor
mov
popa
sbb
sbb
lret
stc
mov
in
test
in
repnz
aas
fdivrl
xlat
xchg
pusha
adc
mov
push
mov
testb
cli
in
dec
stc
mov
mov
mov
ljmp
jmp
mov
pop
sub
rcrb
jae
sbb
xchg
ja
clc
xchg
dec
mov
pop
adc
nop
ljmp
sarl
mov
and
lock
mov
mov
sbb
sbb
pop
movsb
sbb
scas
dec
xor
gs
sbb
inc
jo
cmp
icebp
les
dec
fcmovnb
xchg
int3
flds
mov
lock
ror
outsb
repnz
fcoml
push
jl
cmp
lret
aad
fwait
adc
push
movsb
loope
jne
lmsw
test
jl
add
pop
mov
pop
fistpl
jbe
pop
inc
xchg
add
mov
mov
xchg
sub
fwait
add
inc
fidivs
push
leave
lcall
mov
loopne
shrb
ret
loope
push
mov
jo
cmpsb
jecxz
pop
sub
outsb
or
ficompl
clc
push
mov
test
push
jge
cmc
adc
jp
jecxz
pusha
insb
ljmp
xor
insb
addl
outsb
jg
or
testl
fisubs
add
and
pushf
cmp
int3
mov
pop
cmpsl
xor
lods
xchg
jl
cmpsl
out
xor
sbb
fcompp
mov
lods
clc
shlb
sbb
xchg
sub
lahf
and
add
pop
repz
ret
inc
mov
jmp
faddl
rcll
call
test
sub
push
jl
mov
or
sub
dec
stos
pop
push
pop
lods
pop
adc
lods
lcall
daa
test
sbb
add
cmpsl
pop
fs
in
and
imul
cmp
aad
sahf
mov
add
stos
mov
jb
outsb
pop
mov
fisttpl
sub
jae
icebp
aad
pop
dec
out
add
jecxz
insb
sub
mov
ret
jns
xchg
outsl
in
mov
sub
mov
mov
fs
or
mov
imull
mov
je
mov
fs
imul
popf
dec
dec
hlt
imul
stos
sbb
inc
cltd
jecxz
adc
cmc
cltd
fistpll
bnd
xor
cli
mov
mov
jne
jl
outsb
cmp
stc
mov
popf
je
inc
enter
lock
push
mov
mov
jno
sub
incb
jmp
fwait
push
push
jno
stos
adc
clc
jp
lds
add
sub
dec
push
lahf
rol
cmc
xchg
sbb
lcall
jl
cmpsl
stos
cmpsl
dec
daa
push
jne
mov
pop
loop
mov
and
sarb
cltd
jns
mov
jb
data16
xchg
jnp
fwait
push
in
icebp
mov
sar
outsb
nop
sbb
popf
cs
pop
mov
cmp
dec
sub
jmp
and
test
dec
rcrl
or
js
push
lcall
mov
add
and
push
insb
dec
jecxz
orl
enter
jo
bound
mulb
cmp
jmp
aaa
add
sub
mov
xchg
sub
or
mov
pop
mov
push
mov
adc
xchg
cmc
jno
aaa
popf
pushf
imul
xchg
lods
xchg
push
add
insl
cmp
dec
mov
ffree
push
pop
sub
aam
mov
add
in
std
push
xchg
mov
jg
push
rcrl
sbb
ljmp
out
adc
jbe
repnz
adc
mov
pop
and
pshufw
add
jg
adc
paddsb
mov
mov
mov
popa
sub
cli
mov
xor
and
cmp
out
jmp
je
lcall
and
jle
and
xor
add
dec
inc
jmp
addb
pop
jnp
push
xor
test
cmp
into
xchg
or
push
xor
arpl
cmc
movsb
pop
inc
dec
push
fs
ds
push
stc
cmpsl
setp
mov
cmpl
imul
idivl
insb
mov
outsl
sub
popa
add
pop
sub
or
xchg
and
sbb
stc
pop
cmp
in
and
movsb
xor
dec
into
add
push
scas
xchg
push
jmp
adc
movsl
sub
int
fwait
cwtl
jae
mov
xchg
xor
imul
add
clc
cmp
jb
sub
inc
out
test
sbb
sti
jg
in
dec
add
jo
or
push
push
mov
xor
outsb
and
or
and
insl
aam
inc
jmp
lcall
xchg
xor
fisubl
imul
add
jecxz
push
sbb
jns
push
add
mov
bound
push
outsl
jne
xchg
pop
inc
add
mov
add
sbb
inc
mov
xor
pop
mov
test
pop
cs
movsb
xchg
cmp
mov
sub
cmp
hlt
clc
pusha
in
sbb
push
aam
push
sub
dec
cmp
hlt
and
cs
adc
push
cmp
mov
pop
mov
add
out
movsb
push
jmp
or
lock
push
add
push
cltd
cli
xor
mov
dec
cmp
pop
in
add
cmpsb
lret
mov
mov
adc
sbb
sbb
or
dec
mov
mov
jnp
cmp
in
push
jbe
fldl2t
loope
lods
add
and
pop
aad
xchg
lahf
or
dec
daa
and
test
out
or
pop
cmp
push
and
ss
das
jmp
inc
cmp
xor
cmc
loop
aaa
push
mov
push
les
xor
popa
push
mov
shrb
mov
xor
dec
inc
repnz
stc
sbb
mov
pop
es
aad
inc
adc
jmp
or
sbb
xchg
pop
std
in
xlat
bound
dec
push
in
mov
and
sub
xlat
mov
dec
pop
ret
inc
mov
adc
test
aad
scas
adc
sbb
ljmp
push
and
adc
xor
fs
in
imul
test
mov
cmp
ljmp
add
ss
add
dec
jg
out
cld
ret
je
in
push
xor
add
pusha
fwait
mov
loopne
shlb
push
sbb
adc
iret
pop
stc
fwait
sub
push
inc
push
xor
and
mov
xchg
lods
fsubs
stc
push
or
add
push
sarl
add
aam
shr
inc
pop
xchg
lods
out
into
jae
xchg
mov
scas
sbb
imul
das
ljmp
adc
lea
fnstsw
jno
cli
push
test
sub
jbe
jns
xchg
inc
lret
pop
lods
jg
xor
movsl
cwtl
lcall
ret
xchg
sbb
ret
and
dec
in
pop
and
mov
and
and
mov
mov
xchg
add
mov
pushf
in
lock
leave
xchg
xor
cmp
add
pop
and
jo
cmp
pusha
je
mov
in
test
push
mov
pop
scas
fdivr
cmp
imul
dec
leave
xchg
pop
scas
lret
or
add
xchg
xor
pop
jmp
int3
pop
inc
xor
push
cmp
mov
mov
enter
add
repz
lret
lahf
int3
das
and
jmp
xor
push
test
cmp
test
lret
jbe
xchg
pop
mov
xchg
movsl
ret
popa
xor
loopne
sub
test
lds
inc
and
dec
ret
mov
and
sub
mov
ds
popf
mov
cmovp
sub
stos
sbb
mov
leave
repz
mov
inc
xchg
ret
push
mov
data16
mov
test
xchg
bound
test
je
lret
cwtl
jmp
mov
sbb
outsb
shlb
cltd
xlat
ss
and
cltd
je
xlat
aas
xlat
outsl
jne
cmp
shlb
jl
aam
popa
mov
adc
cmp
repnz
add
mov
outsb
in
pop
in
mov
inc
lods
push
sbb
js
mov
test
push
cltd
popf
mov
push
inc
call
fcomp
sahf
sub
or
jbe
lods
pop
dec
mov
inc
adc
loop
ret
test
out
jnp
xor
push
aaa
adc
jle
fwait
pop
jle
rol
mov
call
iret
push
xor
pop
pop
pop
test
lock
lret
dec
adc
ja
xchg
push
mov
jmp
dec
test
data16
jne
dec
hlt
jmp
push
ficompl
sub
aas
iret
pop
xor
outsb
or
mov
push
pop
gs
sub
icebp
sub
mov
xor
and
inc
icebp
add
aaa
in
cmp
jmp
mov
sarl
loopne
add
nop
lea
mov
push
ret
xor
jno
orl
inc
cltd
xor
adcb
filds
add
mov
mov
and
mov
mov
jbe
cmp
mov
and
orb
hlt
cmp
mov
sbb
stos
hlt
jo
xchg
cmp
in
inc
jmp
aas
cmc
nop
jae
movsl
fidivs
in
ss
sar
popf
aas
xchg
fsub
popa
mov
jb
pop
bswap
repnz
mov
sbb
sub
xchg
cmp
hlt
mov
je
aaa
adc
out
sbb
cmpl
fnstenv
mov
xor
notb
xchg
mov
rcll
xor
cmp
and
pop
adc
sbb
popa
int3
int3
add
cs
mov
cltd
aad
push
pop
sti
push
push
and
das
repnz
nop
mov
push
rorl
jns
sbb
sub
and
pop
xchg
lock
and
and
outsb
mov
pop
inc
leave
add
push
jb
xchg
ficoml
lret
dec
and
arpl
ret
pop
iret
xchg
mov
pop
fildl
adc
fimuls
cld
repz
shrb
arpl
push
scas
aaa
test
imul
fistl
push
test
pop
mov
imul
stos
out
mov
in
push
hlt
mov
in
rcrl
sub
call
decl
aad
push
in
fists
sbb
add
mov
loopne
jo
pop
leave
jno
adc
add
jnp
loope
push
inc
sbb
mov
mov
mov
mov
leave
mov
or
in
loope
shl
xor
mov
inc
mov
dec
xchg
scas
je
mov
mov
iret
push
mov
sub
sahf
icebp
int
push
pop
pop
lods
push
cmp
out
aas
xor
mov
mov
ds
mov
fstpt
je
stos
xchg
cmpsb
cs
sarl
xchg
push
pushf
pop
pop
add
pushf
cmp
or
jnp
dec
popa
push
cmp
cmp
and
iret
fs
adc
jno
push
in
repz
adc
gs
enter
mov
pop
dec
movsl
shrb
jo
cli
pop
push
sub
roll
jno
adcb
unpcklps
std
aad
test
insl
push
setle
dec
mov
inc
adc
imul
je
inc
int
loopne
ljmp
aam
lods
jmp
push
lret
pop
rolb
jmp
lcall
jae
ret
cmc
ja
nop
inc
add
test
lea
aad
leave
test
xchg
int3
aad
mov
repz
dec
jge
xchg
xchg
dec
sbb
adcb
rorb
jle
push
inc
sbbb
or
sbb
pop
loopne
xor
inc
test
pusha
ror
cmpsl
fwait
xchg
add
inc
add
les
mov
pusha
jns
push
push
aam
dec
mov
shr
pushf
mov
lret
pop
mov
and
jge
fldt
out
rorl
test
inc
xor
push
mov
into
or
xor
loopne
inc
add
ds
aad
jle
inc
ss
hlt
sti
xor
fstl
inc
mov
mov
mov
and
cmp
lret
test
push
mov
push
arpl
or
addr16
jmp
sbb
call
popf
sbb
lahf
dec
dec
and
fistl
subb
aaa
or
push
mul
subb
dec
arpl
stos
sti
sahf
nop
test
push
rclb
push
add
lahf
pop
mov
call
mov
movw
cwtl
fs
adc
sbb
je
sbb
je
pop
pop
push
adc
xlat
inc
lds
cld
outsb
rorb
lds
push
jbe
mov
icebp
ret
popf
in
jnp
loopne
adc
push
mov
in
adc
imul
pop
out
gs
or
mov
and
es
call
xor
std
inc
ds
jno
xchg
sbb
jb
sbb
leave
movsb
jns
mov
sub
jle,pt
inc
cmpb
push
or
lret
jmp
lods
cmp
lea
inc
mov
push
xchg
lahf
mov
xchg
imul
adcl
fdivl
jnp
es
lods
popa
xor
mov
fs
mov
int
loopne
lahf
fsubl
sbb
pop
hlt
lock
mov
outsl
sbb
pop
cwtl
sub
and
in
sti
stos
push
sub
daa
ja
mov
sbb
cld
scas
mov
mov
sub
ret
fstpl
loope
lcall
popf
and
xor
mov
fiadds
sub
popf
sbbl
dec
or
xchg
mov
dec
inc
bound
inc
mov
pop
mulb
push
xchg
pop
xor
push
jns
scas
xchg
adc
xchg
dec
cld
push
xor
pop
dec
ror
movsb
cmc
cmc
aam
push
test
femms
enter
lock
push
cmp
jae
jnp
dec
je,pn
mov
imul
in
daa
pop
pop
ret
movsl
or
pop
cmc
cmp
clc
sti
mov
jge
je
mov
call
cmp
xlat
dec
xor
and
movzbl
into
jns
orb
cli
xlat
push
push
test
mov
stos
imul
mov
jnp
ljmp
leave
fisubl
xchg
push
rcr
jmp
sub
cmp
jnp
cmp
sbb
and
fcompl
pop
mov
push
dec
ja
mov
incl
in
call
lock
sahf
jp
lret
les
pop
pop
lds
xchg
clc
pop
loop
dec
loope
ss
fsubr
mov
dec
mov
sub
hlt
or
lods
inc
addb
jae
adc
in
inc
pop
dec
cltd
test
fbld
loopne
imul
or
mov
push
mov
adc
adc
mov
daa
inc
sarl
lcall
js
push
lcall
movsl
pop
fwait
rcl
push
dec
ss
lret
xchg
pop
mov
nop
push
pop
aas
sub
inc
lret
andl
inc
cmpl
cwtl
sahf
xchg
icebp
adc
movsb
xor
dec
inc
out
mov
stos
clc
shll
test
mov
cld
movsl
mov
es
pop
mov
dec
push
mov
icebp
aam
mov
fidivs
adcl
scas
scas
xchg
in
ret
in
sub
pop
stc
pinsrw
cmc
sub
inc
das
pop
ror
insb
xchg
xor
in
loopne
mov
lret
pop
adc
xor
outsl
shll
shrl
inc
or
fisttps
push
hlt
popf
and
and
loope
adc
pusha
leave
repnz
rolb
clc
sub
dec
fwait
data16
mov
push
jnp
inc
xchg
enter
data16
pop
ja
sahf
inc
insb
xchg
push
pop
inc
cltd
cmc
pop
in
daa
out
sub
ljmp
pop
mov
xchg
ret
into
adc
mov
pusha
xor
pop
sub
inc
loope
mov
stc
lea
jno
fwait
ss
jg
pushf
inc
test
lea
loopne
test
push
and
out
dec
sub
scas
lods
fisubl
and
pusha
loopne
mov
popa
xorl
jp
mulb
jnp
or
push
push
fsubrl
xchg
dec
mov
or
and
cmp
frstor
jb
sub
and
ds
sub
push
and
and
shrb
rcrb
push
jle
mov
or
xlat
out
cltd
mov
add
push
sar
mov
out
std
sbb
mov
jns
sbb
aas
jle
fwait
es
fs
xor
fistl
and
and
mov
sub
fistl
fcom
arpl
test
sbbl
out
mov
sbb
insl
inc
aad
mov
gs
and
lods
sub
enter
sbb
push
arpl
xchg
scas
call
ds
add
sbb
pop
fcomip
jecxz
sub
and
pop
enter
js
fldcw
hlt
jno
sbb
loop
cmpsl
add
push
cwtl
insb
aam
fldlg2
scas
rorb
ds
ficoml
mov
cmc
addr16
loope
test
outsb
and
mov
sbb
outsl
bound
popl
sar
leave
inc
push
loope
loopne
or
push
jno
rcll
xor
xchg
aad
imul
mov
notl
or
cmp
xchg
jne
aaa
loope
lret
les
sbbb
fbld
mov
fcomps
xchg
icebp
rcrb
hlt
pop
loopne
mov
xchg
icebp
dec
xchg
pop
mov
stc
adc
jp
fildl
pop
mov
sub
std
aam
pop
enter
sbb
jecxz
add
shlb
hlt
outsl
push
loop
cltd
sarb
daa
int
sbb
scas
test
lret
add
fnsave
or
lahf
les
test
cmpsb
jge
jge
push
sbb
cmp
out
or
ss
int
std
test
xor
mov
shlb
out
into
mov
setl
push
es
mov
mov
out
adc
xchg
aad
out
cmpb
out
iret
push
stc
dec
or
mov
test
in
adc
pop
add
pushf
mov
adc
cltd
mov
cmpsb
add
mov
stos
popf
aad
mov
sbb
xchg
mov
imul
fwait
dec
add
sbb
ds
pop
insb
or
das
jmp
jb
and
fwait
jge
or
push
clc
and
or
add
sub
and
mov
in
fdivrp
clc
xor
lds
adc
into
dec
lret
dec
xlat
lea
int3
call
pushl
jne
adc
sub
push
popf
les
ret
lcall
sub
pop
pop
fcmove
test
lods
mov
lahf
xchg
mov
mov
xchg
shr
rcl
mov
pop
inc
lret
dec
cmc
pop
rcrb
mov
sahf
test
icebp
test
sub
lock
jecxz
mov
js
leave
mov
jb
jbe
or
shrb
inc
cmp
out
repz
lods
aas
std
dec
pop
test
mov
push
add
adc
stos
imul
pop
stc
pop
mov
lds
inc
cltd
fsubrs
jmp
cmp
fwait
popf
into
mov
lods
fidivs
lods
push
sub
lahf
aam
lahf
jnp,pn
arpl
mov
test
fsubs
in
or
xchg
lds
aaa
addr16
ret
mov
dec
das
push
repnz
jl
out
aam
test
stos
test
ret
scas
mov
mov
stos
ds
xchg
sub
mov
add
int3
aad
and
in
test
push
test
inc
ret
aas
mov
psubusw
jno
pop
loopne
ret
imul
inc
jg
adc
cmp
push
dec
pop
das
xchg
xchg
movsl
add
sbb
jne
dec
dec
orb
out
shll
pop
cltd
pop
lods
nop
das
mov
add
jmp
scas
in
mov
xor
xchg
cmp
loopne
fcmovnb
ja
sbb
out
push
push
jge
push
dec
push
mov
pop
sbbl
cltd
pop
int
dec
or
bound
mov
ja
cmp
and
jnp
add
push
fidivs
or
cltd
jno
clc
xchg
push
scas
add
xchg
lret
inc
pop
mov
daa
das
cmp
jmp
repz
scas
call
mov
setb
loopne
loop
clc
push
and
add
and
loope
insl
jmp
stc
lret
mov
repz
xchg
push
mov
push
jg
xor
lahf
inc
mov
mov
mov
cmpsl
cmpl
stos
xchg
mov
popf
loope
daa
sub
lcall
iret
xor
aad
dec
inc
or
cwtl
cmp
cmc
addl
das
imul
iret
jns
pop
stos
popf
jbe
jle
sbb
out
cmp
stos
inc
dec
dec
mov
test
es
pop
dec
inc
cltd
aas
inc
sti
repnz
push
cmp
imul
arpl
leave
pop
repnz
gs
inc
es
and
xor
xor
ds
xchg
fprem
xlat
and
stos
pop
inc
pop
jo
and
sub
gs
test
sbb
jge
pop
add
xchg
rcrl
je
xchg
jmp
aaa
hlt
adc
add
inc
cmp
loop
jecxz
xchg
jg
or
mov
push
fcmovnbe
mov
mov
out
je
mov
jge
enter
divb
xchg
cld
std
loop
lahf
sub
rolb
mov
push
and
push
outsb
movzwl
ficompl
loopne
inc
sti
push
rorl
imul
fistpl
lret
cmp
jbe
xor
pop
filds
or
push
lods
mov
push
test
sub
push
fucomi
fsts
std
mov
fcomp
sti
popa
ljmp
je
fucomi
push
mov
and
shll
cmp
cmc
negb
lds
xchg
pop
aad
mov
add
gs
xor
sub
jg
xor
divb
movsb
testl
pop
cmp
jmp
add
sahf
pop
push
iret
sar
lret
xor
ds
test
dec
add
dec
mov
mov
repnz
imul
mov
add
push
hlt
stc
cmp
aas
js
xchg
ss
ljmp
lods
imul
jl
push
mov
out
sbb
js
clc
rcrl
lret
cld
or
xchg
repz
fsubrp
jle
loope
daa
add
add
mov
or
sub
cmp
adc
xlat
es
sub
aas
xor
push
aaa
sub
mov
ds
lcall
enter
loop
or
xchg
dec
or
sbb
pop
nop
inc
inc
dec
push
push
cs
or
aas
mov
mov
push
mov
je
imul
and
cmp
fst
push
pop
xchg
sub
inc
jmp
psubd
xor
or
add
jecxz
loop
xor
push
adc
fldl
repnz
mov
inc
jno
and
push
sbb
ret
lds
push
daa
mov
pop
dec
dec
mov
and
fs
xchg
rcrb
mov
andb
lods
mov
in
xchg
mov
hlt
out
or
jo
enter
jmp
sti
and
shlb
cmp
adc
push
adcb
scas
or
sbb
into
xchg
in
mov
xlat
gs
ret
ljmp
mov
xchg
and
test
jge
fldl
stos
pop
mov
add
lret
pop
push
cmpsb
jb
sub
add
lds
loope
and
cmp
mov
jns
and
jg
dec
mov
mov
mov
inc
dec
xchg
or
daa
in
dec
mov
or
outsb
leave
dec
flds
andl
rcr
movsl
into
sub
sub
loopne
sbb
xchg
xor
cmp
gs
sub
mov
add
sub
jno
clc
imul
dec
ss
xchg
cmp
repz
pushf
lock
xor
dec
push
fcmove
cmp
inc
call
cs
fwait
mov
jp
sub
fidivrs
cmpsl
ss
push
pop
jl
lret
jge
das
mov
mov
sahf
mov
mov
jge
cmpsl
shl
out
gs
lock
dec
ljmp
shrl
lea
or
adc
ljmp
adc
test
in
nop
fldenv
inc
fisubrl
or
jmp
jg
fs
xor
stos
sbb
out
lods
aaa
dec
seta
dec
in
cld
popf
out
out
mov
xlat
call
insl
lcall
mov
cmp
ja
push
sbb
bound
sbb
notl
ja
push
push
dec
hlt
or
cld
sbb
jbe
ss
aad
cwtl
jge
out
sub
int
adc
mov
popa
xor
call
stos
ljmp
push
jns
pop
mov
lods
repnz
push
loopne
inc
int
push
xchg
ds
jbe
push
cli
out
ret
xlat
adc
xchg
push
in
int3
mov
movsb
movsb
jge
andl
repz
push
or
xchg
mov
cmp
and
xchg
test
and
xchg
mov
mov
inc
xor
fld1
xchg
jae
jnp
movsl
or
das
mov
cli
lock
xchg
jecxz
clc
test
xor
fs
cltd
cmpsl
testl
loope
out
in
xchg
fstpl
outsl
aaa
inc
loop
sbb
sub
icebp
ss
lret
pushf
dec
enter
xor
add
jno
jo
fs
ficoms
mov
lahf
inc
or
jp
adcb
jbe
stos
imul
fsubl
subb
aam
lods
mov
hlt
add
cwtl
mov
mov
rol
add
inc
mov
cmp
out
fnsave
movsb
mov
pop
mov
jno
push
cmc
test
sbb
dec
shrl
cmc
sbb
aam
mov
loop
int
mov
xor
hlt
dec
iret
push
mov
inc
fldenv
mov
sub
insl
cltd
ret
jns
dec
clc
inc
or
mov
mov
enter
dec
subl
mov
loop
pop
push
push
movsl
ret
xor
pusha
imul
movsb
jno
das
mov
jns
cmp
push
js
dec
lods
lock
add
into
lods
arpl
in
mov
sbb
lock
jae
cmpsl
cmpl
mov
loope
xlat
jmp
vpsubq
ja
mov
dec
pop
xor
lcall
xchg
testb
xchg
leave
jl
gs
inc
pminsw
and
mov
das
sub
in
sbb
xchg
mov
fisttpll
cmpsl
stc
ret
sarb
mov
stos
cld
cmp
int3
ljmp
repz
push
push
push
les
fmuls
cmp
add
pop
cmc
xchg
cwtl
int
push
cmp
jno
mov
jae
sbb
push
sbbl
cltd
sub
daa
loope
lods
jmp
cltd
vcmppd
mov
xor
adc
inc
mov
hlt
subl
or
cs
das
rep
je
out
lods
or
rcl
repz
push
mov
fcomip
sub
dec
mov
dec
aaa
out
inc
imul
data16
aam
xlat
push
shrl
or
xor
dec
testl
js
dec
jmp
push
push
xchg
loope
test
loope
repnz
std
or
adc
inc
push
cmp
rcrb
xchg
ja
sub
jl
xor
cmpsb
fadds
subl
in
aad
mov
popf
jns
push
dec
lea
mov
push
jnp
mov
lods
ret
mov
jb
xchg
out
xor
pushf
mov
or
sub
inc
in
pop
xorb
pop
xchg
loop
mov
cltd
in
adc
mov
cmpsb
mov
cmp
and
in
bound
mov
jnp
in
mov
aad
dec
mov
cmp
add
pop
rol
pop
shl
sub
icebp
mov
faddl
jge
ja
jae
or
inc
hlt
mov
inc
insb
mov
psllq
jg
sarb
cli
lock
sahf
xor
jns
fstps
addb
xorb
frstor
in
or
adc
jp
inc
sahf
xchg
mov
push
out
bound
jnp
cs
add
sti
aam
cld
inc
stc
mov
leave
stos
nop
mov
fiadds
sub
iret
jge
xor
shlb
cmc
test
adc
pop
ja
bound
icebp
mov
pop
cs
shlb
test
mov
mov
mov
test
inc
adc
das
js
movsb
pop
popf
cmp
dec
mov
out
or
shl
cmp
rorb
sub
pop
lods
nop
lret
ds
jp
notl
pop
scas
mov
stc
movsl
mov
jle
or
sti
xlat
mov
dec
cmp
jge
in
add
andl
divb
add
xor
jne
push
repnz
mov
popa
add
in
sarl
xchg
adcb
dec
lds
dec
dec
mov
pushf
int
push
scas
aas
pushf
jbe
sub
setp
push
scas
lods
shrl
xchg
jns
cwtl
popa
iret
sbb
inc
and
and
add
icebp
xchg
xchg
pushf
test
inc
mov
and
out
iret
push
or
mov
fs
ret
cli
mov
gs
ljmp
add
xor
pushf
stc
shrl
clc
inc
cld
mov
iret
sbb
mov
aad
or
test
mov
bnd
lea
or
mov
dec
sbbb
or
cld
repnz
adc
ficoml
cmp
fldenv
pop
jg
dec
test
fisubrs
mov
push
dec
or
jns
mov
hlt
cmpsl
jp
nop
add
lahf
push
cmp
dec
jns,pt
ljmp
adc
or
popa
ljmp
lret
jmp
xchg
push
add
rcll
mov
int
popa
dec
lret
rclb
repz
mov
js
xchg
xor
insl
add
addb
enter
mov
outsb
scas
and
xchg
lea
jecxz
popf
xorb
add
aad
dec
jno
fimuls
hlt
mov
out
mov
mov
insb
adc
mov
popf
lahf
dec
inc
dec
jnp
fcompl
xchg
mov
dec
and
lock
adc
xchg
pusha
divb
fidivrl
sbb
push
inc
outsb
stc
testl
xor
pop
in
adc
shlb
fstpl
fidivl
insl
xchg
in
xor
or
push
lea
les
mov
dec
aam
cld
lcall
mov
lcall
inc
ljmp
jo
push
cmp
sub
aad
jbe
cmp
scas
add
sbb
mov
jnp
mov
pusha
sub
mov
sub
dec
adc
inc
pushf
push
testl
or
insl
jle
pop
insl
imul
aad
mov
xor
pop
dec
add
addb
cmpsl
xchg
cmp
pop
and
sub
mov
cmp
dec
and
mov
fwait
mov
adc
out
gs
sub
dec
dec
sub
jmp
xor
fidivrl
scas
mov
movsb
les
and
xchg
insl
xor
jb
stc
or
mov
mov
cmp
mov
test
mov
movsb
dec
cmp
mov
push
push
xchg
xor
fs
stc
orb
testb
inc
in
hlt
orl
ja
inc
push
xchg
bound
shll
test
aad
imul
loopne
xchg
mov
ficompl
js
sbb
int3
lahf
dec
pop
cltd
jge
mov
sub
push
xor
add
hlt
les
cwtl
bound
jle
or
dec
test
jbe
cmc
mov
mov
in
jecxz
mov
sbb
scas
sbb
xchg
jo
push
fistps
and
out
xor
ds
jo
cs
push
mov
inc
cmc
push
pop
ret
imul
mov
clc
lock
sbb
push
fstl
xchg
xchg
test
lret
cmpsl
push
popa
in
movsb
lcall
jmp
pop
jo,pn
das
jmp
add
cld
fldcw
sarl
xor
popf
mov
cmpxchg8b
lret
faddp
inc
out
dec
ret
xlat
fidivs
jo
lea
or
mov
testb
push
cmc
mull
mov
add
sbb
call
es
sti
mov
popf
into
mov
jae
loop
lock
in
or
mov
adc
pop
pop
ljmp
je
aad
jmp
je
cmp
mov
inc
movsb
inc
test
jno
lods
mov
cmpl
pop
aas
or
ja
loop
mov
cmp
lahf
xchg
jmp
push
sbb
dec
out
hlt
jle
push
mov
or
out
jb
adc
mov
dec
add
fidivrs
movsb
movsl
sbb
outsl
cli
js
testb
dec
or
or
xchg
repz
dec
jle
shlb
rolb
dec
stos
insb
sub
xchg
dec
or
jmp
sub
shlb
leave
scas
sub
outsl
out
divb
and
das
pop
mov
xchg
xor
repnz
dec
daa
in
mov
or
gs
das
cmp
bound
popf
jno
insb
shrb
iret
int
add
ljmp
cld
cmpsb
mov
pushf
push
inc
sub
or
jmp
mov
popf
ficompl
test
test
test
out
movsb
jb
lods
ljmp
aam
fcmovnu
pop
push
shl
adc
sbb
and
cmc
mov
mov
dec
mov
sbb
mov
ss
int3
adc
movb
js
jnp
or
sub
push
and
push
and
fdivr
cmp
sub
ja
aas
pop
cli
adc
test
mov
jl
cmp
jbe
jno
add
test
or
aas
xchg
pop
in
dec
scas
mov
negb
adc
lret
mov
xchg
xchg
mov
loop
xor
ja
push
call
sub
in
mov
loop
ds
xchg
rcrl
fwait
cmpsl
jae
ds
daa
mov
or
ficoms
dec
mov
lret
test
xchg
cld
pop
lods
cwtl
int3
xchg
sub
sub
lret
stos
lret
shrb
fnstsw
xor
cld
pop
or
int
jl
sub
push
or
push
xchg
lds
jne
jge
or
sbb
fldenv
cltd
pop
in
cli
lahf
ret
cmp
test
fwait
jmp
pop
pop
das
ds
sub
orb
mov
das
cmp
mov
rcrl
mov
sub
lret
inc
sub
imul
dec
adc
inc
xchg
inc
jnp
mov
stos
sbb
xorb
gs
push
cli
pop
pop
pop
ja
imul
lcall
mov
push
add
and
xchg
pop
jmp
fistps
mov
popf
lcall
int3
daa
mov
and
imul
mov
aas
and
shl
test
int3
inc
int3
ja
bound
mov
xchg
and
repz
cmc
push
sub
clc
iret
pop
js,pn
icebp
mov
shrl
push
dec
mov
sub
shr
push
push
cmpl
sub
jecxz
loopne
pusha
xchg
or
je
xchg
xor
mov
imul
xlat
jnp
data16
dec
data16
mov
sahf
mov
aad
sahf
add
adc
sub
jns
mov
es
xor
mov
jmp
call
es
das
push
push
pop
xor
inc
and
cs
push
xorb
sub
rcrl
rcrl
inc
leave
inc
adc
bnd
and
pop
rcrb
ljmp
fstpt
movsb
shll
mov
testl
rcl
xchg
mov
stc
stc
jae
es
push
push
xchg
or
fucomp
jns
push
jecxz
shlb
mov
xlat
ja
fs
out
and
mov
fs
and
push
out
and
addr16
sbb
push
push
mov
adc
dec
mov
jnp
clc
jle
add
hlt
mov
cmp
pop
lods
xor
mov
cpuid
mov
and
sbb
jmp
dec
movsb
repnz
addr16
xchg
cwtl
add
movsl
repz
xchg
fstpt
pop
daa
dec
adc
push
inc
lcall
mov
ds
jge
inc
ret
add
pop
int3
inc
pop
roll
adc
inc
shl
jp
sti
push
scas
add
inc
lds
cmp
jg
lods
out
ret
in
aas
cmp
adc
xchg
dec
std
mov
mov
fdivrs
stos
and
mov
lret
rclb
mov
add
or
mov
movsb
inc
sbb
xchg
movb
pop
xor
in
push
movsl
iret
popa
arpl
aaa
mov
in
cld
fwait
pop
jg
movsb
test
fiadds
mov
pop
adc
pop
jns
add
lock
jae
cmp
inc
cmp
pop
iret
pop
popa
jae
sti
outsb
push
ss
lds
xlat
dec
fbld
addr16
mov
sub
out
cmp
add
inc
inc
push
ret
add
icebp
mov
mov
xchg
lahf
in
int
mov
sub
shr
pop
push
jl
and
jg
push
mov
or
mov
cmp
push
adc
pop
cltd
pop
sub
sti
inc
in
aas
mov
and
std
test
imul
aam
pop
and
sub
jp
inc
cltd
jmp
xor
loop
xor
loop
iret
sti
stos
fnstenv
mov
and
sahf
inc
jmp
rcr
mov
mov
dec
ja
add
add
xorl
sub
popa
pop
adc
xor
loope
dec
aaa
jg
daa
xchg
or
pop
fldt
sbb
std
xchg
jae
in
mov
test
mov
movsb
sub
inc
xor
mov
dec
jo
outsl
jecxz
data16
insb
add
cld
shr
adc
add
xor
xor
cwtl
sbb
cmp
jge
in
pusha
into
pop
push
sbb
out
pop
xchg
je
ret
hlt
mov
das
jmp
sbb
std
cmpsb
sahf
add
adc
sahf
pop
xchg
push
inc
rcrb
int
fadds
insb
push
push
mov
aas
pop
adc
leave
push
lock
adc
test
es
add
out
add
pop
addr16
jle
mov
sbb
leave
sti
cmp
fwait
dec
int3
xlat
xchg
mov
add
xchg
mov
shrb
push
jge
cmpsb
daa
adc
xor
dec
in
jno
inc
or
xor
push
sbb
push
idivl
mov
sub
adc
dec
xor
int
out
popf
mov
or
inc
bound
lock
xor
dec
sbb
xor
jle
ja
xchg
pop
inc
fimuls
es
jbe
push
lret
lret
mov
jns
add
fs
lock
jecxz
or
rclb
daa
jmp
mov
int
pop
loope
popa
jnp
addb
mov
jnp
dec
fldenv
loopne
out
and
stc
pop
mov
jnp
enter
das
push
dec
out
icebp
cmp
mov
pusha
neg
pop
lcall
jl
ja,pt
pusha
lock
push
insb
pop
inc
push
out
into
dec
inc
adc
adc
faddl
std
xchg
popf
jecxz
mov
lcall
test
jg
retw
add
lcall
xor
sbb
shll
xchg
xor
sbb
pop
insl
popf
repz
icebp
adc
mov
jmp
lcall
inc
cltd
xor
cld
loope
pushl
jne
push
daa
lret
imul
adc
push
mov
push
sub
jle
and
sbb
movsb
sbb
mov
mov
icebp
sbb
push
and
mov
pop
dec
xchg
cli
or
mov
or
and
hlt
bound
out
lea
xchg
sbb
add
data16
lock
out
insl
sbbb
sbb
mov
movsb
fucompp
fs
cmp
imul
cmp
rcrb
daa
outsl
adc
and
cs
test
addb
sub
shl
mov
xchg
mov
decb
mov
dec
add
push
cwtl
out
lret
cmp
or
jnp
add
sub
pushf
xor
sbb
test
add
push
push
sub
adc
outsb
sbb
dec
ds
sub
stos
outsb
inc
lcall
lret
and
sbb
jnp
xchg
adcb
push
shl
sub
filds
mov
push
sbb
out
sub
gs
mov
stos
sbb
std
ja
pop
and
jmp
pushf
adc
pop
out
andb
pop
gs
mov
sarb
es
ret
adc
mov
xchg
push
movsb
repz
pusha
xchg
pop
lods
imul
test
sti
jg
mov
in
jne
lahf
movsb
das
adc
inc
push
mov
aas
mov
je
stc
mov
mov
out
cmpsb
lea
lods
mov
adc
aaa
in
ljmp
mov
dec
dec
mov
push
sbb
sub
cmp
adc
pop
int
stc
inc
add
and
gs
mov
push
lods
dec
ret
mov
cmp
xchg
rcrl
or
add
in
inc
xlat
inc
sarb
dec
sbb
in
or
fcoms
xchg
mov
or
pop
lea
in
pop
xor
xor
sbb
mov
mov
test
push
loope
jmp
in
mov
or
cmp
jb
pop
and
mov
leave
loope
in
insb
arpl
testl
xchg
leave
add
pop
int3
jbe
sub
dec
push
repz
ljmp
mul
inc
adc
fcoms
push
cmpsl
cmp
ss
shlb
mov
mov
hlt
gs
imul
mov
pushf
test
loopne
inc
sbb
sub
jne
loopne
jl
mov
scas
cmp
negl
mov
out
lods
adc
mov
repz
rclb
into
adc
fisubrl
and
stos
jp
or
jo
movsl
xor
xor
jmp
movsb
lods
mov
sub
push
shr
scas
xor
out
pop
popa
std
rcr
aam
and
es
aaa
test
cmp
mov
imul
adc
pushf
insb
inc
and
sti
into
in
mov
push
cmp
iret
pop
fidivs
sbbl
fildll
jo
pop
add
mov
inc
jmp
movsb
xor
cs
ficompl
jmp
test
jge
sar
fwait
iret
dec
repnz
repz
pop
push
xorb
xchg
fcoms
xchg
jbe
push
ret
test
fistpl
stc
cld
dec
adc
xchg
or
repnz
jno
jno
filds
xchg
add
cmpsb
adc
jp
mov
call
fistl
sub
test
dec
xchg
in
mov
dec
and
cmp
mov
or
mov
cmpsl
jl
mov
xor
sbb
inc
jge
stos
loop
lods
lods
iret
mov
loop
daa
or
sub
leave
into
and
mov
sbb
push
inc
sub
or
mov
push
stc
or
push
xor
sbb
inc
js
jecxz
negl
fisttpl
inc
cmpsl
xchg
addb
sbbl
push
push
test
dec
pop
xchg
mov
pop
mov
mov
mov
aaa
fst
push
std
mov
out
rcrb
movsb
inc
mov
in
mov
loop
aaa
into
pop
fisubl
test
ret
jp
les
sub
roll
push
xor
and
and
mov
and
cltd
rcll
inc
jecxz
dec
mov
ret
pop
adc
and
or
fstl
rcll
jg
push
mov
cmp
insl
out
xlat
adc
pop
dec
or
sbb
jo
pop
movsl
xor
or
stos
jne
rcrb
mov
int
fsubr
pushf
sub
inc
insb
xchg
lds
push
aam
inc
fcos
nop
adc
or
pusha
mov
push
adc
mov
mov
aad
sub
cmp
shlb
fcompl
xchg
aad
int
fmull
jmp
lock
jp
mov
fstl
add
xor
mov
repz
in
jge
fildl
mov
sbb
hlt
push
xchg
ficoml
push
mov
mov
xchg
add
fldcw
sub
sub
ljmp
lds
popl
jmp
fildl
sbb
jbe
sub
sbb
add
pop
repnz
xor
jne
movsl
imul
addr16
or
cmp
jle
shrl
in
daa
rclb
es
xor
in
cmp
movsb
loop
and
sti
rcr
pop
mov
lods
icebp
je
insl
sti
aaa
leave
ret
std
and
sub
dec
mov
insb
adcl
mov
sahf
sbb
outsl
fcmovnu
mov
push
dec
jge
or
xor
jbe
cmp
loope
ret
out
and
mov
aas
push
js
cmp
loopne
add
incl
xchg
push
sub
notb
jne
std
arpl
scas
in
mov
fsts
xchg
xchg
mov
sub
imul
scas
shll
adc
push
xchg
mov
mov
es
cmp
or
bound
pop
add
jnp
add
push
imul
aas
and
jmp
bound
lret
imul
shlb
mov
aad
dec
cmp
int
jp
popa
test
adc
popa
jmp
mov
and
mov
cs
mov
ret
mov
inc
repnz
lret
ret
pop
mov
bound
xor
imul
mov
lret
out
mov
jae
jmp
negl
mov
mov
mov
jle
movsl
icebp
and
test
mov
mov
jbe
andl
fldenv
jne
imul
cmp
rorl
shl
stc
or
cmp
cli
mov
or
mov
sub
iret
jns
neg
dec
pop
push
in
jne
and
addl
mov
test
push
dec
adc
shll
pop
mov
jb
mov
lahf
sub
pop
mov
es
cmp
adc
pop
xchg
ja
adcl
add
lods
out
lcall
xor
popf
testb
inc
jbe
mov
leave
loop
fists
jb
or
or
pusha
jo
jno
std
pop
call
push
cmp
push
sbb
cmp
fidivrl
mov
std
mov
mov
cmc
or
ror
dec
push
cwtl
push
mov
in
lods
lahf
push
test
push
mov
out
das
fisubrs
jge
sub
movsb
out
aas
enter
mov
jns
lock
sahf
mov
fnstcw
cmp
in
push
mov
cmp
aam
lods
mov
fdivp
stos
cli
xor
or
sub
adc
pop
mov
cmc
fimull
scas
mov
jno
sbb
ds
outsb
jmp
ja
add
sbb
addb
pop
pop
xor
lret
mov
daa
iret
jmp
jg
or
pushf
cmp
clc
push
add
popl
sbbl
flds
inc
sub
cmpsb
jge
and
mov
sub
int
scas
sub
mov
jnp
add
and
jecxz
mov
mov
fs
in
jnp
mov
mov
sub
xor
fidivrs
insl
ds
aad
negb
shll
jno
lcall
lret
fmulp
daa
arpl
shrb
sbb
popf
iret
out
sub
call
xor
data16
pop
xchg
adc
ljmp
cmc
xchg
jo
test
andl
loop
dec
xchg
loope
adc
dec
outsl
jmp
andl
jne
bound
add
sahf
ret
shlb
insl
dec
aaa
mov
sbb
push
mov
fcomps
ret
in
mov
loop
outsb
mov
ficompl
fildll
push
test
jbe
inc
adc
dec
dec
inc
movsb
ds
out
add
ret
mov
xchg
xor
pop
and
mov
adc
test
pop
icebp
rolb
dec
stc
sbb
or
fidivl
lcall
psllq
lds
dec
xchg
push
out
roll
xor
ljmp
adc
mov
and
push
jecxz
add
push
ja
mov
fs
dec
out
pop
mov
jl
pop
popl
ljmp
sub
push
out
daa
in
jmp
ret
adc
inc
into
add
cmc
mov
sbb
xchg
pusha
pushf
repz
mov
mov
out
cmp
pop
loope
popa
inc
cwtl
add
hlt
adc
aas
mov
sub
arpl
ja
jb
jae
add
mov
push
roll
add
rolb
push
in
or
inc
sub
pop
cltd
xchg
bnd
mov
clc
jecxz
sub
add
jmp
xor
flds
mov
fwait
das
cmp
cmp
inc
xchg
insb
fstp
data16
push
cmp
shrl
mov
mov
loop
cwtl
out
clc
fildll
call
and
inc
repz
ficoml
out
out
out
xor
insl
add
mov
test
shr
mov
and
shll
pop
movb
div
fwait
cli
xchg
std
lret
adcl
test
mov
add
xchg
sub
data16
mov
or
repz
lcall
xor
xchg
push
fwait
pusha
sbb
test
dec
or
aam
cli
jle
mov
iret
push
fwait
inc
outsl
cmp
imul
shrb
xchg
push
push
sub
aaa
xor
xor
pop
fildl
lret
xor
pop
add
dec
int
orb
je
xchg
jne
jbe
not
jnp
lods
inc
loopne
jnp
daa
add
mov
mov
loope
adc
mov
sub
pop
mov
adc
clc
out
push
mov
rolb
shlb
movsb
xor
mov
movsb
pop
xor
das
sub
mov
push
mov
jne
in
xor
inc
lahf
adc
inc
int3
movsl
jbe
jp
notl
aaa
mov
test
enter
sub
mov
out
push
repz
insb
mov
sti
popa
ds
push
mov
xor
rcrl
mov
sti
cmp
pop
dec
jnp
loopne
loope
jmp
lret
clc
orb
shr
sub
lcall
aad
scas
jecxz
mov
add
mov
ljmp
pop
push
ret
push
mov
pop
pusha
sub
and
addb
not
or
push
add
mov
mov
jmp
lea
decl
sub
cmp
mov
mov
pop
xchg
adc
cli
cli
mov
loop
dec
xor
cwtl
call
ret
in
push
push
sbb
aam
int
int3
mov
popf
dec
mov
fsubrl
push
rcll
inc
push
or
inc
pop
faddl
or
push
inc
das
call
pop
adc
adc
rcl
push
push
in
sub
outsl
rclb
inc
test
adc
sbb
rclb
test
sub
inc
cwtl
lret
xor
lcall
dec
aas
out
scas
xor
ret
ret
imul
xlat
push
loope
or
mov
mov
sub
jecxz
and
ja
scas
mov
xchg
fucomi
dec
add
fcomps
ss
adc
mov
push
rcll
out
jbe
and
in
mov
ss
addl
push
push
je
fwait
mov
pop
xchg
mov
dec
or
inc
push
aad
or
mov
iret
mov
sbb
in
bound
rcrb
adc
lahf
lahf
add
sub
sbb
add
xchg
cmc
xchg
cmpsb
fldl2e
jp
enter
pop
rorl
inc
xchg
or
jg
std
xor
adc
or
mov
xchg
mov
xchg
pop
pusha
jnp
repnz
out
pusha
sbb
xchg
add
movzwl
shrl
xchg
cs
aaa
dec
lret
repz
test
insl
bnd
mov
cmpsl
inc
push
cmc
les
out
xor
imul
fistpll
add
ret
sub
dec
mov
xchg
arpl
fidivs
rclb
stos
int
je
jp
push
push
movsl
scas
push
mov
jo
xchg
sub
xor
rorl
movsb
hlt
sub
push
out
stc
jb
xor
mov
pop
pop
pusha
push
sbb
mov
xchg
fbld
mul
sbb
mov
push
out
sbb
lds
xchg
aas
mov
push
and
jge
mov
cmovs
sti
test
jnp
mov
bound
in
js
sbb
stos
jmp
mov
xor
sti
mov
mov
scas
push
mov
sti
fsubrp
div
test
sbb
jbe
push
cmp
and
cmc
outsl
icebp
nop
adc
mov
fidivs
repnz
daa
stos
cmp
mov
dec
fstpt
adc
andb
jbe
lock
nop
or
in
jle
sahf
xor
xor
xchg
lret
fistps
sub
jg
mov
jns
cmc
jbe
hlt
cmpl
mov
fdivrl
add
adc
stc
aas
add
sub
shll
fsubrs
push
xchg
repz
enter
adc
xor
icebp
pop
rorl
mov
jns
aad
push
or
ja
dec
push
pop
or
push
out
icebp
mov
xor
mov
insl
push
rcr
sbbb
lret
popa
clc
fistpl
inc
pop
mov
lods
insb
sbb
xor
mov
xchg
or
sbb
mov
push
mov
ror
cwtl
sahf
mov
xor
mov
jo
aas
jbe
mov
jne
push
pop
out
mov
jo
popf
ss
gs
loopne
enter
pusha
scas
xchg
dec
aam
out
mov
lods
sub
jmp
xchg
push
pop
sub
pop
and
adc
jg
lret
shl
adc
and
std
jns
into
mov
mov
outsl
or
dec
loopne
popf
or
adcl
mov
push
adc
sahf
scas
dec
mov
movsl
lds
pop
xchg
mov
pusha
movl
stos
nop
adc
repnz
xchg
add
test
jno
fimull
repz
jmp
push
bound
mov
jo
inc
js
xchg
je
faddl
xor
ret
mov
dec
jne
stos
mov
xor
mov
pop
adc
incb
enter
testb
aad
loop
xor
inc
mov
jae
setb
es
ds
jecxz
xchg
insl
mov
cmc
cmp
aam
mov
mov
das
pop
into
jo
loopne
mov
cmc
jle
bound
push
xchg
cmp
jecxz
pop
lcall
cmp
cltd
push
in
adc
fdiv
cmp
sahf
xchg
leave
adc
movsb
es
xor
idivl
cmp
movsb
sub
xor
aam
in
icebp
divb
scas
and
inc
ja
push
roll
cwtl
rorl
into
sub
addb
and
cld
inc
test
xchg
mov
mov
and
ds
popa
sub
sbb
aam
mov
fcomps
cmp
xchg
fimull
inc
cli
cmpsb
dec
lods
daa
cmp
ja
rolb
or
shl
pop
and
into
adc
sbb
add
push
mov
inc
ljmp
or
push
pop
dec
mov
das
es
push
mov
xchg
ljmp
jecxz
dec
mov
add
pop
out
xor
adc
sbb
ret
jge
cmpsb
fneni(8087
and
shll
clc
sub
or
sbb
xor
xor
push
mov
push
mov
addr16
loop
add
sbb
and
jl
ret
xlat
jl
mov
xor
pop
xor
cwtl
ret
test
inc
push
fiaddl
out
sbb
xor
sahf
lahf
and
scas
scas
sbb
pop
mov
xchg
scas
jge
push
cmp
jle
xchg
sub
sbb
rolb
mov
enter
es
lret
mov
shrl
mov
aaa
mov
adc
add
rolb
push
dec
lods
add
add
test
dec
push
cli
pop
mov
or
fs
aam
mov
imul
sub
aad
mov
cvtps2pi
stos
jge
add
ficompl
sub
or
adc
mov
test
iret
and
xchg
aam
int
push
icebp
push
lcall
mov
mov
or
push
push
hlt
scas
mov
aad
jg
adc
aas
ret
xorl
cmc
lock
arpl
xchg
xchg
cmpsb
pop
aad
ss
rclb
out
add
jo
xor
cmpsb
les
jl
shll
push
lea
out
inc
jmp
cmp
xchg
ljmp
clc
pusha
aaa
insb
lret
xor
jno
inc
inc
rcrb
fstpt
jecxz
mov
andl
out
es
mov
sub
mov
mov
lcall
sbb
hlt
sub
add
pop
sbb
test
jp
stos
repz
mov
mov
movl
int
outsb
test
mov
es
sub
sub
inc
repnz
add
xchg
ja
cmc
adc
mov
sahf
push
daa
arpl
lds
scas
aam
add
addr16
cmpsl
add
pop
aad
loope
cltd
stos
fiadds
ja
dec
shll
sbb
adc
movsl
jno
lcall
push
and
inc
imul
adc
je
xchg
xchg
aaa
add
fistl
std
and
fbstp
leave
sbb
fstps
popa
data16
mov
and
add
add
push
sub
outsb
pop
inc
fisubl
test
enter
jnp
movb
xor
jmp
call
test
pop
sub
das
cmp
dec
fstl
add
stos
leave
hlt
dec
insl
pop
adc
mov
xor
pop
sub
push
sub
adc
fistpl
cmp
inc
js
loop
xor
rol
jg
es
sub
add
cmp
insb
stos
mov
les
lods
and
and
das
std
out
dec
push
cli
push
adc
data16
inc
insb
sbb
mov
mov
outsl
cmp
push
jnp
loope
jbe
inc
adc
in
ds
pop
lret
int
sub
cmp
mov
mov
add
dec
pop
inc
cwtl
mov
sbb
jo
cltd
cli
fucomp
lds
inc
lret
jae
or
add
outsl
bound
push
inc
xchg
mov
loop
fcoms
in
fbstp
fildl
shll
stos
test
cmp
pop
inc
jae
lcall
mov
and
mov
mov
ret
mov
sbb
jbe
out
dec
cld
test
xchg
adc
loop
xchg
movsb
cmp
mov
lods
push
cmp
mov
add
addr16
mov
cltd
jmp
dec
mov
push
mov
pushf
push
dec
insb
push
or
xchg
out
daa
aas
push
and
add
mov
add
cltd
rcrb
je
push
fcompl
push
movsb
and
pop
inc
dec
pop
mov
loope
mov
mov
cmp
fisubrs
lock
loope
or
jge
call
loop
mov
movl
mov
loopne
scas
cs
lcall
and
lcall
mov
mov
xchg
xor
cmpsl
js
jl
mov
xor
arpl
cmp
jg
pop
gs
cmp
pop
adc
cmc
cmp
scas
in
mov
sub
cmpsb
add
popf
sti
mov
cmp
push
sbb
mov
lcall
test
je
out
das
inc
lods
sbb
loop
mov
and
jno
insb
pop
push
adc
cmc
aas
mov
sbb
mov
clc
adc
imul
push
icebp
outsb
inc
adc
in
fidivrs
imul
jns
insl
dec
and
push
sahf
xor
or
sbb
mov
in
or
push
sarl
ret
daa
add
loopne
lret
fistpl
xchg
xchg
or
inc
mov
scas
fldl
inc
sub
fwait
jnp
lods
lds
push
es
ret
push
push
cmp
push
push
jnp
fldcw
out
ja
div
inc
push
pop
loop
repz
out
jmp
mov
add
jno
inc
test
adc
cld
or
out
sbb
pop
iret
lcall
cwtl
pop
fbld
popa
jns
mov
push
adc
push
popf
inc
mov
lret
test
mov
push
or
mov
cmp
ja
push
mov
iret
push
lret
std
loop
cmpsl
jb
lret
adc
mov
and
pushf
pop
loope
les
adc
dec
mov
xchg
and
pop
ret
or
push
loop
xor
pop
pop
and
adc
sbb
xchg
or
inc
es
sbbb
insl
enter
das
outsl
push
les
mov
push
fdivrs
mov
out
xchg
inc
mov
mov
popf
mov
lock
repnz
add
adc
adcb
rorl
sarl
sub
scas
sbb
mov
out
fwait
sub
mov
pop
lock
popf
or
mov
daa
imul
in
in
imul
and
sub
ja
aaa
and
test
jo
jb
or
andps
fstp
js
imul
add
jg
and
mov
scas
test
sti
cld
cs
orl
inc
xchg
cltd
aaa
ret
test
arpl
repz
and
mov
fwait
test
cld
pop
popf
xlat
bound
into
out
shl
mov
adc
xchg
adc
movsb
mov
adcb
cld
cmp
icebp
dec
xor
popf
xorl
jae
stc
les
adc
xchg
adc
sti
pushf
shlb
cs
enter
push
adc
mov
stos
adc
movsl
ret
sbb
mov
mov
xor
aas
insb
leave
and
fisubs
xchg
stc
sarb
xchg
adc
fwait
aam
outsb
mov
lahf
xchg
dec
movsl
int3
inc
loopne
push
push
filds
jp
pop
sbb
bswap
jne
dec
lea
insb
into
inc
and
sbb
push
dec
fnstsw
cmp
cmp
shll
cmp
out
stos
ss
sbb
sahf
xchg
dec
es
int3
lret
mov
scas
lret
jecxz
adc
pop
hlt
les
xchg
cmp
push
and
mov
cmp
dec
and
adc
ss
jl
ja
push
or
sub
xorb
int3
cmpsb
pop
shl
pusha
cmp
cld
arpl
rorl
idivl
mov
aad
pop
mov
mov
add
xchg
in
lahf
into
shrl
push
adc
xor
or
stos
fildll
icebp
in
lahf
jno
cld
aam
jne
leave
movsl
push
cmp
sarb
js
cmpb
xlat
lcall
dec
sbb
mov
mov
incb
adc
movsb
test
jbe
movsl
cld
xor
ret
adc
mov
stc
sub
mov
pusha
aam
dec
out
clc
cmp
push
xchg
xchg
jecxz
add
idivb
jb
jb
xchg
xchg
or
or
jb
dec
sbb
jmp
lahf
push
movsl
dec
xor
mov
xor
adc
xor
loop
jp
out
cmp
sarb
in
dec
jns
mov
and
aas
int3
pusha
mov
nop
mov
shrb
js
cmp
in
ss
and
mov
mov
adc
xor
and
dec
mov
int3
inc
rol
dec
dec
hlt
out
pop
std
mov
and
xchg
movsl
sub
adc
rol
push
jle
mov
fidivrs
pop
shll
jp
dec
inc
outsl
lods
pushf
out
and
cld
mov
mov
or
aam
lret
fsubrs
cmc
and
enter
inc
and
gs
aas
lods
inc
das
add
adcb
cmc
in
add
xchg
xor
jge
ret
mov
cmp
cmp
fldl
pop
loopne
cwtl
mov
pop
fistps
repnz
mov
push
adc
xchg
cwtl
data16
loop
adc
jecxz
jge
lret
lret
enter
std
icebp
loopne
jnp
push
add
dec
lcall
fisubl
loop
push
cmc
jmp
jmp
fildll
loopne
pop
ficoml
and
ficomps
jge
sbb
dec
cltd
mov
stc
add
stos
xor
mov
nop
leave
dec
fildl
sub
and
jae
pop
jl
lret
sbb
shld
mov
push
adc
outsb
jg
stc
adc
std
scas
sub
pop
sub
xor
xor
iret
xchg
jns
ja
mov
dec
mov
inc
push
xlat
xlat
and
cmp
aaa
add
adcl
add
jge
aas
sub
fsubrp
xor
scas
js
ljmp
sbb
outsb
add
xor
cwtl
shrb
xchg
cwtl
repnz
sub
add
ret
or
in
enter
insl
fistps
test
je
enter
in
pop
scas
mov
fnsave
add
lret
push
js
push
jbe
fmulp
bnd
fldt
ret
roll
in
mov
push
dec
inc
lcall
or
dec
shl
inc
sbb
add
cmp
inc
sub
subb
mov
adc
dec
dec
mov
je
and
ret
movsb
int3
jle
movsl
sarb
call
inc
ss
loopne
dec
xchg
in
cltd
enter
and
or
repz
lret
movsb
xlat
jecxz
pop
xchg
push
leave
je
xor
cmp
mov
sti
mov
es
shlb
mov
nop
inc
cli
sub
aam
mov
mov
orl
gs
repz
fists
fistpll
leave
lock
mov
and
daa
stos
xor
insb
push
movsb
ds
add
xchg
jge
sbb
xchg
ss
pop
adc
mov
mov
push
je
mov
adc
or
pop
rorl
add
xlat
dec
push
nop
dec
dec
lret
push
xchg
dec
lahf
cltd
pop
cli
cmp
mov
add
add
iret
dec
mov
mov
stc
rorb
cmpsb
cmpb
sbb
push
sub
imul
mov
into
mov
xchg
mov
pop
notl
divl
pop
out
sub
cmpsb
mov
push
ljmp
arpl
push
add
inc
cmp
pushf
mov
sbbb
les
aad
dec
stos
jp
test
cmp
push
movsb
out
mov
mov
incb
or
test
xchg
inc
push
pushw
test
movsb
xchg
jle
or
stos
lods
sub
push
iret
gs
std
or
cmpsl
mov
cmp
xchg
pop
incb
push
in
mov
add
test
data16
subl
push
push
or
int
shrl
data16
mov
mov
outsl
inc
mov
pusha
jns
mov
movsb
jmp
mov
xchg
lods
mov
cli
mov
or
mov
add
sub
cld
inc
movsb
inc
test
mov
inc
not
fisttps
sub
mov
pop
mov
and
ljmp
jbe
inc
int3
movsl
xor
jecxz
mull
mov
in
ret
xchg
cwtl
movsb
adc
push
jbe
sub
popa
popa
std
loope
fstpt
into
fwait
push
fistps
lret
mov
inc
adc
leave
mov
shll
icebp
int3
mov
int3
rcr
stos
shrb
aad
fldt
mov
adc
fadds
pop
pop
repz
ja
repz
pop
cld
sbb
in
push
out
in
mov
xchg
icebp
ja
bound
lods
mov
dec
cmp
mov
ret
cmp
lcall
cltd
imul
arpl
xchg
out
lds
cmp
adcl
push
inc
stos
sbb
addr16
test
cmp
xchg
call
dec
fwait
add
xlat
xchg
aad
sbb
pop
mov
jne
push
mov
or
jl
add
sub
or
add
xor
pop
sbb
or
or
push
cmp
cs
cmpsl
jp
lods
mov
repz
mov
fnclex
sahf
out
addr16
jb
outsb
test
fwait
mov
add
and
dec
cmpsl
adc
fists
fcmovnbe
scas
sahf
and
cmp
inc
inc
lods
aad
ljmp
fisttps
adc
push
mov
dec
cli
dec
cmc
mov
lock
dec
lods
add
cmpsl
push
lret
push
or
addr16
pop
adc
push
lods
push
inc
and
jmp
pusha
mov
dec
popf
in
popa
mov
rcll
ret
cmp
sbbb
adc
xchg
scas
mov
sbb
dec
mov
into
xchg
popa
test
and
das
shr
mov
xchg
cmp
dec
sub
jns
jns
xor
adc
sub
inc
push
mov
jae
add
testb
popf
or
test
rolb
shrb
xchg
add
and
sbb
push
or
sub
and
fcmovb
mov
mov
xor
dec
lods
dec
xchg
jg
dec
adc
rcrl
or
stos
or
and
sbb
bnd
push
add
inc
dec
pop
les
pusha
into
lods
push
daa
ss
dec
cmp
cmp
xchg
ljmp
dec
ret
sbb
push
inc
fcomip
xchg
shl
rolb
lcall
dec
aas
aaa
cmp
inc
ret
stc
push
jno
out
and
inc
in
mov
pop
lret
or
pop
lods
inc
int3
arpl
xor
ret
add
addr16
and
aas
inc
rorl
sarb
into
in
pop
ret
mov
sti
sub
cmp
xor
repnz
popa
rorl
int
pop
sub
pop
dec
pop
mov
cmp
loopne
loope
popa
pop
mov
aaa
fnsave
insb
mov
inc
mov
or
scas
mov
js
fdivl
dec
mov
aad
pop
adc
ret
xchg
push
mov
out
push
js
and
insb
jge
test
mov
mov
jmp
inc
cmpsb
test
push
aas
inc
shrl
mov
push
sub
mov
cmp
jl
pop
push
xchg
mov
pop
and
nop
push
stc
rcl
loop
repnz
mov
outsl
jo
jmp
add
sub
cld
aaa
fwait
push
in
rolb
outsb
adc
pop
add
pushf
les
sahf
xor
lods
rolb
test
cmp
shlb
cmp
fmull
adc
repnz
fsubp
sub
popa
nop
dec
push
xchg
sarl
into
adcb
add
mov
divl
pop
shrl
jns
adc
fs
fbstp
mov
jb
jge
mov
sti
stos
dec
icebp
scas
push
dec
imul
popa
ss
xor
enter
mov
sarb
in
pop
loop
cli
inc
mov
mov
and
ja
sbb
push
add
mov
aad
lret
int3
addb
xor
into
mov
mov
sbb
dec
jns
cs
pop
adcl
repz
mov
ret
xchg
lods
ljmp
cltd
in
sbb
mov
icebp
mov
imul
jo
scas
ljmp
dec
jo
inc
cmc
cmp
in
test
mov
std
rorl
mov
or
es
scas
sub
fsub
je
insb
sti
in
incb
jp
call
bound
lret
insl
jmp
cmpl
xchg
push
push
icebp
outsb
ljmp
xlat
push
lods
lock
sub
xor
xchg
sub
rcll
pop
push
negl
cmpsb
mov
enter
sub
add
cmp
imul
ss
in
ss
adc
push
aam
aad
inc
adc
push
or
push
cmp
push
pushf
cmp
cmp
pusha
cwtl
ds
mov
ja
push
sbb
cmpsl
outsb
xchg
stc
push
insb
cwtl
sub
testl
filds
dec
sub
stos
ret
mov
lret
outsl
mov
jo
cmp
ret
sbb
or
and
pop
or
jle
lock
pop
inc
xlat
pop
fildll
dec
push
rcll
add
gs
ret
xchg
mov
add
mov
cs
insb
push
mov
xor
jns
scas
or
lock
fwait
mul
xchg
push
movsl
out
cmp
pop
mov
mov
clc
push
gs
fstps
or
mov
aas
pop
stos
xchg
mov
jge
mulb
sbb
sub
rcl
pop
mov
or
push
ljmp
fisttps
cld
sbb
sar
cli
mov
std
cmp
xor
stos
add
push
sahf
lcall
pushf
mov
mov
test
mov
movsl
xor
lea
sub
jbe
xor
mov
xor
dec
jne
xchg
movsl
cmp
adc
mov
dec
push
pop
pop
outsl
loopne,pt
sub
jl
insb
sarb
out
enter
fs
inc
arpl
xchg
in
mov
mov
mov
sbb
or
inc
iret
insl
int
sub
adc
call
sub
cli
ret
outsb
std
push
sbb
mov
into
xchg
inc
push
test
and
jp
cmpsb
cwtl
and
sub
stos
lcall
out
out
push
dec
mov
cld
into
in
lcall
mov
and
fwait
jmp
es
addr16
sub
pop
or
mov
mov
jno
lret
xchg
movsl
lret
jmp
jge
mov
aam
jg
xchg
inc
and
mov
sub
push
cmc
mov
repnz
jae
loop
xor
xchg
js
lret
fnclex
stos
or
mov
pop
dec
push
pop
mov
out
mov
adc
repnz
aad
xlat
daa
cmc
lods
push
mov
mov
test
mov
jno
mov
stos
pop
sbb
mov
dec
loope
pop
inc
and
lock
decb
or
lret
xor
or
daa
pop
xor
mov
ds
gs
xchg
das
dec
sub
cld
xor
and
push
dec
dec
or
es
aam
pop
repnz
sti
inc
sbb
aad
popfw
inc
cmpsb
cmp
push
jge
pop
int3
enter
push
ds
dec
xchg
pop
scas
and
test
shr
es
inc
loop
stos
inc
in
hlt
mov
mov
aam
xchg
xor
or
sub
pop
das
cmpsb
or
push
xchg
insb
icebp
jo
mov
xchg
mov
xchg
scas
adc
stos
sub
mov
shlb
fsubs
xchg
inc
sbb
push
jmp
insb
outsl
pusha
and
mov
sbb
add
outsb
cld
and
or
stc
lcall
xchg
es
sub
lcall
in
sbb
mov
mov
jno
push
inc
sbb
je
or
notb
gs
mov
adc
pop
pop
loopne
ljmp
mov
aam
mov
cmpsl
push
testl
pop
pushf
pop
sub
ret
and
lods
gs
bound
lret
repz
mov
mov
test
mov
adc
ror
push
scas
xchg
add
mov
pop
jecxz
sti
ds
call
inc
cli
xchg
int3
dec
mulb
fisubrs
inc
jle
and
popf
add
scas
inc
hlt
lahf
repnz
mov
dec
fcoml
or
out
std
das
jns
mov
or
push
sub
sbb
cwtl
dec
dec
mov
dec
dec
arpl
or
lods
sbb
adc
cld
jnp
test
into
out
movsl
ja
sbb
jle
int
mov
das
mov
cmp
inc
dec
mov
mov
pop
push
adcl
mov
scas
mov
pop
adc
fs
jo
sbb
insb
xchg
xor
push
jae
sti
bound
cmp
push
fcmovb
xchg
xor
lock
mov
xchg
cmp
aad
mov
aam
xchg
inc
mov
mov
repz
jns
jge
call
inc
xchg
sub
out
cmp
and
fsts
xchg
adc
jno
lret
ret
jecxz
data16
cltd
cmpb
sbb
cld
xchg
mov
icebp
mov
sbb
int3
pop
nop
push
outsl
jno
dec
arpl
adc
test
or
fcmovne
lcall
scas
xor
xor
scas
xor
insl
dec
lcall
add
sbb
outsb
daa
in
lret
addr16
sub
movsl
sbb
shr
mov
gs
mov
aad
add
andl
inc
sub
rcrb
lods
cld
jp
push
ret
mov
imul
fs
outsb
cmpsb
loop
mov
add
and
mov
cmp
cmp
repz
popf
cs
push
out
push
cmp
stos
cmp
out
int3
jmp
sub
sub
repnz
mov
out
pop
nop
ljmp
test
mov
lcall
push
dec
fisttpll
mov
pushf
push
cli
and
lods
adc
lret
fcomip
cmc
popa
sar
push
aad
inc
and
push
out
sbb
fsubl
mov
mov
aaa
mov
lods
call
add
insl
subb
mov
pop
mov
testb
mov
mov
push
sub
mov
or
mov
mov
out
call
mov
mov
jg
push
ss
cmpsl
push
or
insb
jmp
repz
jo
cmp
int
fistpl
idivl
imul
mov
push
ficomps
push
or
mov
mov
nop
sub
gs
enter
test
in
push
xchg
xchg
mov
push
fnsave
in
lret
loopne
sub
xor
pop
iret
jno
jbe
adc
cmc
ret
xlat
inc
or
dec
cmp
push
pop
push
xlat
hlt
lcall
hlt
iret
add
rorb
inc
inc
xor
push
ss
sub
lahf
shrl
cmpsb
and
in
xor
xchg
xor
sbbb
leave
insl
push
fdivl
fdivl
xchg
in
inc
jae
xor
dec
inc
sub
push
push
pop
mov
fisttps
aas
out
jo
jo
aam
mov
adc
xor
lea
into
adc
adc
je
or
mov
call
lret
enter
sti
inc
outsb
xchg
aas
arpl
sbb
fxtract
pop
nop
xor
xchg
call
daa
push
push
imul
iret
lock
popa
xlat
das
mov
fs
mov
pushf
adc
jns
addr16
or
lahf
lock
adc
mov
addr16
sbb
push
sub
dec
js
push
push
test
mov
mov
mov
pop
test
shll
jmp
dec
push
mov
add
or
xor
cmp
cmp
add
enter
fnstsw
in
jae
mov
leave
push
dec
int
pop
iret
aad
mov
ja
into
inc
stos
lret
jle
cmp
sub
das
xchg
xor
sarb
pop
mov
add
push
xchg
into
mov
stos
push
ret
loope
xor
faddl
cmpsl
and
xchg
push
jge
jb
aas
push
xchg
mov
push
push
xchg
xchg
inc
sub
mov
imul
ret
mov
jmp
mov
jg
in
xorb
inc
mov
out
lods
xor
sbb
scas
cs
push
adc
jb
fistpl
and
jp
and
je
mov
shrb
add
inc
add
stos
outsb
mov
sar
push
push
pop
push
testl
clc
cmp
shlb
or
stc
je
fildll
in
or
imull
jl
rol
mov
sbb
aaa
dec
pop
mov
adc
lods
push
stos
inc
push
es
loope
in
out
adc
sarl
jo
cmc
cld
icebp
mov
out
cmp
xchg
xor
cmp
mov
ret
data16
stc
xor
pop
dec
lret
jbe
pop
into
cmc
je
movsb
inc
jl
push
stc
cmc
imul
ljmp
std
and
mov
lods
xorb
mov
in
mov
jecxz
sbb
pop
xchg
sbb
sub
aam
je
test
push
sarl
sub
je
shr
sbb
dec
loop
bound
aad
pushf
pop
sarl
mov
xchg
xor
sbb
mov
test
negb
testb
out
ss
push
jl
and
inc
movzbl
lods
fstp
jbe
xlat
pop
je
repz
cmp
shrb
cmp
xchg
jnp
xchg
outsb
sbb
mov
andnps
mov
in
jns
and
repz
das
jnp
sbb
popf
cmc
inc
out
hlt
xor
push
pop
aad
xor
mov
push
pop
push
out
add
stos
pop
pusha
rcl
mov
pop
mov
imul
dec
shll
mov
cmp
cmp
loope
int
stc
sti
inc
and
rolb
stc
jge
or
inc
fwait
ja
das
es
push
cmp
loopne
lods
xchg
bound
mov
xchg
jle
scas
je
xor
mov
jne
adc
or
push
or
inc
xchg
adc
push
inc
add
mov
jge
mov
cmpsl
test
mov
pushf
pop
dec
hlt
sbb
mov
andb
pop
lea
hlt
mov
adc
dec
add
sub
pop
popf
pop
jne
pop
shr
out
xchg
fwait
jne
lds
mov
mov
jl
xor
xchg
pop
ficomps
xor
insl
mov
iret
bnd
cmpsl
aam
cmpsl
mov
jecxz
jno
test
adc
popa
test
pop
mov
jne
int3
dec
mov
inc
adc
in
jnp
jle
outsb
mov
mov
wrmsr
cli
mov
test
mov
cmp
push
mov
pushf
jl
imulb
inc
das
dec
out
sahf
and
iret
inc
cmp
mov
mov
sbb
push
cmp
xchg
inc
ds
out
aad
pop
stc
es
popf
xchg
ljmp
adc
jmp
lret
testl
sbb
xor
lods
sbb
lods
jmp
mov
mov
xchg
push
js
fstl
in
or
xchg
fbld
push
lea
mov
xor
sbb
add
add
daa
les
add
lods
push
fdivrl
pop
int
movb
xor
pop
push
test
jae
call
pinsrw
or
inc
mov
sub
orl
adc
mov
xor
ficompl
sub
push
push
inc
sub
jge
pushf
icebp
add
movsl
lret
add
or
or
arpl
mov
mov
inc
push
jecxz
mov
dec
jl
pop
jb
ljmp
and
enter
movsb
xor
cld
insb
xlat
iret
scas
hlt
cmpsl
jae
mov
xchg
imul
adc
pop
sbb
jns
into
leave
jne
push
adc
outsl
cld
inc
push
das
push
fimuls
stc
mov
pop
lahf
scas
inc
xor
lcall
jl
xor
xchg
lods
bound
cmpsl
and
orl
shr
sub
sub
shrl
in
xlat
arpl
lea
pop
pushf
jecxz
dec
add
stos
aaa
scas
test
lds
mov
clc
sub
frstor
orb
cmp
int3
sahf
jecxz
sarl
stos
test
or
sahf
pop
add
jbe
dec
arpl
push
push
loop
jno
push
cmp
out
ret
ljmp
push
add
in
dec
int
clc
je
xchg
cmp
call
jo
mov
lock
xchg
jbe
icebp
mov
pop
jno
iret
sbb
sub
sbb
push
out
cmp
dec
out
sub
cmp
rcl
mov
aam
mov
repz
or
shrb
fcmovu
js
pop
movsl
push
iret
out
adc
sub
or
dec
sbb
jl
repnz
mov
inc
sar
pop
push
add
popa
mov
sub
out
lret
adc
mov
mov
xchg
or
out
test
adc
dec
cltd
pop
lea
mov
jae
insl
sbb
xlat
lret
sub
repnz
cmovle
lcall
mov
mov
jne
mov
icebp
push
arpl
cltd
and
sbb
negb
cmp
cmp
sbb
or
pop
or
jb
pop
xorl
cmp
sub
sub
sahf
cld
jno
and
dec
jno
std
loope
sub
jae
imul
inc
popf
cmpsb
mov
mov
pop
mov
ss
adc
adc
push
cltd
lea
xor
mov
cmp
nop
lcall
fnstenv
outsl
push
test
stos
test
dec
arpl
or
ja
push
negb
xor
jmp
scas
mov
xor
lcall
cs
xchg
ror
xor
sahf
lds
mov
sahf
sub
pusha
xlat
in
mov
mov
loop
dec
in
jno
icebp
repnz
push
cmpsb
or
sti
xchg
cmp
pop
push
lock
cwtl
sbb
sbb
or
add
mov
cmp
pop
mov
ret
aad
dec
loop
sub
iret
dec
into
nop
lods
insl
push
push
enter
adc
imul
mov
ljmp
nop
lds
mov
fisubs
or
jb
std
dec
xor
lcall
and
mov
mov
insb
lds
loop
cmp
das
inc
lds
leave
and
leave
popf
dec
jnp
or
popl
pop
pop
loopne
mov
inc
loope
aam
and
popa
aaa
jge
adc
jne
xor
xlat
in
lea
ficoms
into
cmp
cmp
inc
lcall
cmpsl
iret
dec
cltd
out
mov
clc
sub
jns
jp
push
lret
rcr
push
rol
in
inc
jg
jmp
pop
xchg
shr
stos
insl
fcomp
and
jle
add
cli
cwtl
and
pop
cmp
aas
xor
mov
and
cld
push
inc
push
jnp
pop
sub
mov
xchg
sbb
mov
iret
out
ljmp
push
cmp
push
lea
xor
dec
mov
pop
pop
pop
fists
pop
rorl
loop
xchg
mov
into
lds
sysexit
add
sbb
sub
scas
dec
inc
push
pop
add
xchg
jns
ds
xchg
daa
mov
mov
idivb
jp
mov
shlb
cmp
aaa
mov
dec
repnz
dec
enter
xor
push
es
les
xor
push
aas
hlt
pop
test
mov
jnp
in
lret
jb
xchg
xchg
dec
aad
mov
in
cmpb
stos
inc
sub
adc
je
adc
cmp
shr
mov
movsb
cmpsb
adc
in
push
int
into
mov
push
push
push
jb
xlat
sbb
sbb
xorb
and
dec
movsb
pop
jle
cwtl
enter
cmp
fistps
mov
imul
jbe
decl
fidivs
je
lahf
loopne
xchg
adc
push
pusha
sbb
push
mov
push
filds
scas
xchg
push
inc
xor
insb
mov
cmp
arpl
aam
pop
je
add
cmpsl
adc
push
push
lock
imul
push
lds
and
adc
add
fiadds
test
scas
arpl
hlt
adc
and
hlt
mov
mov
push
lods
mov
int
dec
jae
loope
push
lcall
cmp
clc
xchg
lea
jno
iret
jmp
cmp
add
jae
cmp
cli
sbb
dec
insl
in
repnz
bound
inc
popa
ficomps
add
fistpl
ja
mov
mov
push
and
int3
inc
cmp
repnz
sbb
mov
dec
xor
push
xor
add
repnz
repz
adc
repz
lock
decb
iret
pop
shll
add
pop
pop
loope
xchg
ljmp
dec
jle
or
cmp
insb
ret
enter
call
lock
mov
popa
sbb
lods
lcall
lret
fiadds
repz
xorl
and
sbb
repnz
cmp
mov
jno
mov
push
xchg
test
std
jle
lods
ljmp
push
int3
stc
adc
data16
loopne
sbb
test
push
adc
and
adc
lock
ss
ljmp
je
loopne
repnz
repz
std
dec
aaa
testb
mov
mov
add
fldt
inc
in
push
jecxz
inc
out
test
jne
scas
adc
les
adc
cltd
pop
add
sbbl
sbb
ss
xchg
jnp
xchg
shl
push
push
sub
dec
pop
mov
imul
lea
jne
xchg
mov
sbbb
adc
sbb
aam
add
test
cmp
dec
fwait
pop
pop
mov
cmp
mov
cmp
nop
mov
popf
mov
int3
jnp
sub
adc
mov
aad
leave
pushl
test
mov
jge
inc
bndldx
mov
ret
leave
test
lea
ljmp
in
out
xchg
aam
push
pop
adc
fldenv
jp
dec
out
fdivrs
xlat
mov
fistpll
repz
mov
mov
fs
xor
pop
or
push
jbe
mov
fcoml
or
mov
xor
loope
push
cmpsl
adc
mov
mov
jne
shlb
aas
mov
fldt
rcll
cs
or
or
add
cmp
pop
scas
mov
pop
or
mov
pop
jg
int3
and
stos
jg
ret
imul
adc
mov
data16
lcall
sbb
push
push
jmp
cmp
gs
mov
ljmp
out
stc
pop
call
iret
dec
loope
sbb
lret
push
sbbb
stc
ljmp
mov
ss
daa
or
push
jne
iret
aaa
pop
jne
ds
sbb
sbb
push
arpl
mov
jecxz
in
mov
jp
mov
add
test
mov
outsl
pop
cltd
out
cltd
mov
and
and
loopne
jne
push
mov
cmpsl
lods
mov
xchg
imul
jl
xlat
lret
dec
fnstcw
mov
ss
mov
movsl
jnp
and
insl
push
mov
xchg
push
adc
jae
dec
ficompl
adc
je
mov
add
cltd
push
sahf
pusha
and
aam
out
lret
ja
loope
xchg
inc
and
mov
cmpsl
dec
mov
loopne
cwtl
sti
pop
mov
jge
xor
mov
daa
rcrl
popa
pop
pop
push
or
inc
ret
loopne
pusha
pop
dec
mov
cmpsb
popf
mov
fdiv
xor
and
xchg
call
jae
xor
pop
dec
xchg
mov
add
jae
pop
jmp
fcmovnbe
mov
fisubs
xor
or
sub
cmp
jp
dec
in
pusha
adc
sahf
and
cltd
mov
or
mov
cmc
ret
pop
mov
int
ret
sbb
mov
jg
sub
add
jle
cmp
in
into
dec
add
mov
repz
arpl
dec
ss
sbb
mov
lahf
int3
cmp
cli
xor
arpl
cmp
data16
xor
pop
dec
cwtl
push
jno
push
paddusb
call
jmp
pop
movsl
mov
push
stc
movsb
sti
xchg
push
cmp
jne
pop
icebp
cmp
sub
fcmovb
sbb
nop
sub
jo
push
jecxz
mov
and
sbb
adc
jns
cli
jmp
repz
test
mov
notl
in
imul
sbb
push
jmp
cs
push
push
hlt
dec
je
pop
lock
pop
pushf
inc
lea
or
movsl
add
daa
cld
adc
jae
or
dec
ret
aad
repnz
lods
test
and
pop
aam
roll
jnp
repnz
fisubrs
inc
stos
cmp
into
lea
jae
jmp
jp
scas
adc
or
jnp
push
leave
pushf
iret
je
je
enter
sbb
lock
xor
imul
or
in
mov
cld
mov
jo
or
sbb
jmp
in
pop
repnz
xor
loopne
js
fisttpl
xchg
ja
sbb
xor
lret
mov
cmpsb
inc
sbb
fcompl
jne
inc
fldlg2
xor
mov
xor
pop
bound
sub
jmp
cmp
daa
daa
mov
inc
outsl
in
subb
addr16
daa
adc
loop
out
out
xchg
cmp
cmpsb
lret
roll
cmp
xchg
movsb
fisubrl
scas
cwtl
inc
cmp
push
icebp
dec
popa
into
sbb
lret
sbb
xchg
popf
int3
adc
sub
add
jmp
cmp
and
pop
mov
or
jmp
in
lock
and
adc
mov
mov
add
xchg
push
xchg
mov
inc
leave
fildl
in
ret
dec
xchg
xor
dec
sar
jle
call
ja
adc
mov
push
cmp
pushf
sub
stos
fidivrl
jae
ds
push
push
adc
jecxz
mov
sub
mov
ret
xchg
sub
xchg
mov
jg
cmc
cmpsb
icebp
pop
ds
fstpl
add
loopne
push
sbb
iret
stc
ljmp
fwait
popl
lahf
push
adc
sub
lret
and
test
mov
jbe
or
xor
lcall
out
js
sub
jnp
add
mov
sbb
sbb
add
dec
test
popf
xchg
mov
push
sbb
push
push
scas
mov
and
push
es
sub
fmull
add
mov
je
jle
and
xor
inc
subl
in
addl
test
add
fidivrs
test
aaa
push
rorl
xchg
shlb
xor
ficoml
in
dec
push
jno
xchg
pusha
fcoml
mov
das
pop
inc
pop
push
xor
out
pop
dec
outsb
sub
dec
mov
xor
jbe
shlb
fcoms
add
jl
push
add
or
jbe
jo
mov
test
jae
cmp
cs
cmp
jl
push
scas
jmp
adc
jge
mov
repz
inc
lret
out
aam
fiadds
je
pop
mov
ja
hlt
pop
pop
mov
mov
jl
js
popa
pushf
sub
mov
ja
mov
mov
in
int
and
mov
mov
xlat
cmp
inc
stc
pop
jl
lret
dec
jg
sub
cs
aas
hlt
xchg
or
cmpl
daa
add
aas
dec
fs
cli
pop
in
fcomps
mov
stos
rcr
pop
sahf
adc
pushf
or
xchg
xor
insl
repz
stos
mov
stos
mov
gs
xchg
in
dec
xor
cmpsl
lret
pusha
jg
add
daa
cmpb
xchg
fidivs
pop
das
and
or
leave
cmp
sbb
cli
mov
xchg
jb
add
mov
cld
shrb
gs
jne,pn
shl
dec
jb
in
mov
inc
and
outsb
push
enter
mov
xchg
mov
popf
xchg
jo
add
xchg
int3
push
pop
mov
iret
fildl
push
out
shrl
and
and
mov
leave
jp
lcall
mov
scas
xorb
das
repz
int3
mov
lret
repnz
out
xchg
jne
mov
sub
sti
inc
scas
shlb
out
aaa
int3
les
int3
jbe
xchg
cs
pop
cltd
jmp
dec
cmp
pop
test
push
out
cmp
leave
add
lods
icebp
jno
hlt
mov
divb
addr16
sbb
gs
add
sbb
bound
cmp
push
xor
mov
jnp
cmp
sub
adc
lods
hlt
in
lods
nop
cltd
cmpsl
push
in
dec
test
out
aas
jp
bound
push
fsubs
dec
xor
mov
jmp
xor
repnz
dec
xchg
andb
jmp
test
mov
sbb
and
stc
inc
inc
outsb
stos
jbe
pop
lock
xor
stos
fwait
dec
sbb
arpl
ret
scas
stos
jbe
dec
pushf
ds
fnstenv
bound
test
mov
iret
ffree
loop
lods
dec
cmp
and
push
mov
stos
mov
pop
mov
xchg
xorl
cmpb
jbe
pop
orb
lds
fwait
and
arpl
push
popa
std
mov
lret
and
cmp
loopw
lret
push
lock
mov
xchg
ret
test
inc
sbb
lahf
mov
sub
nop
cwtl
pop
xor
mov
js
dec
add
loopne
cmc
mov
mov
push
and
pop
sub
je
push
sbb
mov
sub
mov
mov
ja
xchg
les
inc
movsb
scas
add
daa
cltd
mov
inc
les
data16
ljmp
mov
jle
std
push
cmp
or
pop
mov
pop
fcmove
jae
mov
dec
jp
mov
jb
pop
sahf
insl
mull
bound
out
mov
insl
inc
adc
xchg
mov
jae
mov
pop
les
lcall
push
mov
in
cmpsl
sbb
xchg
addr16
xchg
clc
sbb
ret
jno
ret
enter
pushf
pop
test
dec
xchg
mov
mov
jmp
push
mov
push
scas
cmp
jp
repnz
and
and
mov
push
sbb
sub
stos
or
je
xchg
xchg
inc
addr16
push
pop
xchg
les
out
jns
mov
mov
in
xchg
arpl
sub
push
rcrl
dec
jb
dec
xor
inc
push
mov
nop
sbb
adcb
jecxz
scas
in
push
jg
mov
push
fs
fdivl
or
out
jbe
dec
adc
lret
push
repnz
call
fstpl
mov
jg
dec
cmp
add
push
mov
xor
lods
sti
sbb
mov
ret
aaa
add
pop
sub
mov
jl
inc
call
gs
dec
push
jmp
leave
xchg
pushf
push
cmpsb
fmuls
adc
xchg
fldenv
pop
mov
xor
jbe
jp
lock
sub
bound
and
jne
dec
mov
adc
out
cli
sub
pop
insb
xchg
daa
push
sub
mov
scas
gs
inc
dec
jo
push
cwtl
out
adc
dec
jecxz
imul
jmp
cmpsl
out
rorl
loop
ljmp
in
xchg
adc
repz
ret
popa
ret
add
test
inc
jl
pop
push
inc
mov
jns
mov
ljmp
in
and
sbb
pop
mov
add
sbb
movsl
mov
mov
inc
and
xor
and
mov
test
pop
nop
into
and
mov
inc
cli
aam
or
cld
ss
adc
and
jle
pop
add
mov
cmp
pop
daa
dec
loop
shrl
ffree
je
mov
inc
movsl
sub
mov
cs
cli
inc
je
push
mov
pop
fwait
push
popf
imul
push
loope
cmp
mov
sub
and
jl
inc
xlat
mov
insb
aad
cmp
repnz
push
mov
js
mov
jl
fs
push
mov
mov
loop
sbb
dec
jnp
push
repnz
inc
adc
xor
lock
mov
fistpl
je
add
jg
add
inc
cmp
out
pop
jno
inc
sbb
fucomip
xor
popf
and
fs
mov
cmp
sbb
inc
and
and
icebp
ljmp
and
ret
shl
test
xchg
mov
xchg
das
lods
push
clc
outsl
in
shll
sbb
aad
ss
push
mov
stc
xor
mov
lods
mov
mov
bnd
iret
sar
add
mov
jecxz
dec
int
sub
cmp
xchg
add
popf
enter
lcall
sbb
gs
in
add
mov
xchg
xchg
je
jle
call
mov
lds
mov
cmpsb
test
adc
adc
daa
mov
aas
or
cmp
shl
sub
or
andb
jno
popa
inc
fsubs
dec
hlt
ficoms
xor
fiaddl
mov
jbe
cmp
mov
mov
gs
mov
in
inc
and
inc
push
sub
sbbb
sti
pushl
xor
fstpl
xchg
lret
pop
and
dec
shll
stos
je
xor
popl
mov
arpl
xorb
cmp
inc
std
mov
out
jle
fbld
cmp
gs
add
jl
xchg
stos
stos
cmp
std
jg
xor
inc
loopne
ds
push
cmp
adc
jg
lock
dec
int
cmp
sbb
jmp
stos
mov
push
adc
mov
dec
gs
cs
popf
enter
jl
mov
inc
inc
subl
adc
xchg
jge
iret
imull
shrb
mov
cli
das
dec
shl
push
int3
cld
lret
sahf
sub
js
les
fadds
dec
jg
test
pop
inc
xor
and
sti
cltd
pop
rorb
fwait
lds
mov
mov
jb
scas
inc
je
fldenv
fwait
cmp
add
lret
sbb
mov
leave
pop
and
sbb
push
and
gs
sbb
out
decb
dec
sbb
inc
mov
sbb
cmp
pop
aas
cld
xchg
pop
jno
xor
push
inc
loopne
sbb
loope
sub
sub
shrb
ret
les
outsb
testl
fiadds
or
outsb
or
cmpsl
mov
int
nop
stos
sbb
xor
test
mov
inc
pop
mov
popf
cltd
inc
jae
inc
or
push
or
pop
xor
enter
xchg
xchg
mov
xor
xchg
out
nop
mov
xor
sahf
inc
dec
cs
das
test
negb
sub
call
inc
dec
imul
std
inc
xor
xchg
lods
xlat
in
jge
mov
or
insb
test
xchg
enter
mov
les
xchg
cld
in
sub
data16
and
inc
call
int
sti
lock
xor
fldt
movsb
mov
xor
adc
cltd
mov
inc
sbb
mov
repz
inc
loopne
push
enter
mov
call
je
dec
or
testl
clc
add
sbb
aam
fwait
mov
mov
xchg
and
adc
pop
cwtl
push
std
mov
das
adc
or
or
mov
jg
mov
divb
aad
cltd
push
mov
lret
test
xchg
jecxz
cmpsb
data16
lods
shrb
movsb
mov
fimuls
cmpsl
es
loopne
je
sbb
cmp
daa
jle
stc
lods
xchg
pop
je
sbb
xor
data16
sub
rcll
fdivrl
test
sbb
std
out
sub
mov
jg
outsl
cmp
mov
mov
and
ror
sti
xchg
popf
xchg
jl
dec
repnz
cs
out
orb
outsl
mov
movsb
adc
mov
lock
jnp
lods
test
cmp
sbb
mov
add
xchg
stc
cmp
jb
dec
mov
sub
stos
pusha
xlat
dec
cltd
jp
add
scas
dec
xchg
jo
es
loope
stos
mov
xchg
and
jae
arpl
cmpsl
or
iret
shll
and
test
push
inc
adc
add
pop
jmp
cmp
dec
pop
pop
pop
sbb
icebp
xchg
pop
jbe
xchg
or
and
dec
lods
lret
fcompl
push
mov
mov
or
mov
xchg
popf
pop
pop
std
lods
scas
adc
and
pop
sbb
lds
ret
cmpl
mov
or
mov
sub
mov
push
xchg
loope
xor
dec
stos
mov
adc
sbb
or
sbbl
repnz
jle
adc
jg
xchg
lret
in
insl
fidivl
push
ret
sub
xchg
pop
adc
push
andl
adcl
mov
xor
negl
aas
rolb
fisubs
inc
enter
jmp
lock
xchg
inc
aam
mov
add
into
dec
addr16
or
xor
push
shlb
dec
and
stos
pop
mov
outsl
inc
push
push
repz
lds
sbb
jno
push
fildll
adcb
lcall
mov
mov
jb
jno
nop
and
xchg
mov
outsl
and
add
ds
sub
or
adc
jecxz
add
pop
fucomi
je
jge
ret
and
repnz
xchg
add
leave
out
pop
mov
enter
roll
jo
inc
mov
jge
std
push
jb
cmpsb
jne
lret
jle
lcall
rdpmc
pushf
les
testl
int
ret
jp
cmp
push
xchg
in
repz
and
lcall
lods
and
jbe
rorl
popl
bound
adc
mov
push
mov
arpl
mov
sbb
icebp
sbb
lret
loope
jae
or
sub
jecxz
fstpl
movsb
pop
int3
xchg
mov
aas
test
jne
js
insl
rolb
push
jecxz
mov
adc
inc
sub
loopne
jp
mov
mov
es
cwtl
xchg
sbb
sahf
push
in
push
push
dec
sarl
xor
jnp
mov
scas
jle
cmp
mov
pop
xchg
mov
jg
cmp
ss
sub
out
fdivs
push
and
ja
and
cmpsb
dec
cld
cbtw
ret
xchg
add
fcomp
scas
cmpsl
pop
fisubs
mov
xchg
dec
mov
out
sub
cli
mov
fbld
cmp
fcmovnbe
ret
out
lods
mov
and
cmp
imul
das
adc
gs
push
push
dec
cwtl
mov
sbb
add
sahf
adc
movsb
mov
xlat
js
mov
jmp
lahf
jmp
int
jp
mov
ja
sarl
push
sar
push
in
aaa
dec
movsb
lahf
aad
jne
rcrb
cmpsl
rcrb
test
repnz
fs
pop
add
xor
or
lret
in
mov
sbb
jg,pt
jne
addr16
push
cld
mov
ret
cmc
jns
ficomps
mov
add
pop
pop
out
sahf
shrl
inc
pushf
mov
adc
or
xor
aad
and
imul
repz
push
lock
sub
push
cmpsl
arpl
imul
mov
sub
imull
stos
add
stos
jbe
int
sub
jb
ret
adc
insl
insb
cmp
pop
jbe
mov
add
dec
stos
add
stc
mov
mov
push
push
push
cmpsl
out
shlb
jmp
addr16
cltd
pop
lods
fsubrl
push
inc
bound
out
mov
aaa
ret
pop
popl
dec
adc
mov
dec
jno
xchg
pop
push
push
inc
sbb
cs
addr16
or
insb
mov
add
and
loope
cld
cmp
push
pop
cld
lea
fs
lret
mov
jmp
mov
pop
lock
or
mov
adc
add
jle
out
in
pushf
idivl
cmc
into
and
cmp
iret
mov
cltd
mov
lahf
out
jnp
dec
push
jmp
lret
and
std
mov
lea
and
movsb
xchg
call
sub
push
pop
xchg
push
mov
rorb
je
pop
push
shlb
push
push
repnz
cmpsl
xchg
mov
mov
mov
push
jmp
dec
mov
dec
rclb
cs
enter
shll
jnp
addr16
xor
mov
mov
movsb
push
inc
xlat
lods
out
add
popa
adc
xorl
sbb
add
inc
sub
enter
inc
rcrb
jnp
push
push
repnz
rolb
mov
bound
dec
pop
iret
aad
outsb
pop
iret
test
inc
adc
push
outsl
push
xchg
jbe
imul
and
push
and
jo
jecxz
mov
inc
jae
bound
and
cmpsl
cmp
jle
dec
stos
cld
mov
iret
add
fdivrl
pushf
jns
lods
pop
gs
mov
inc
mov
xor
sahf
lcall
lret
arpl
add
adc
add
jmp
pop
fs
xor
scas
aad
dec
fwait
xchg
adc
lret
lock
push
lods
movsl
push
in
repnz
daa
mov
mov
pop
mov
fnstsw
pop
cld
inc
cmp
cltd
mov
adc
mov
pusha
call
sahf
fwait
sbb
outsl
xchg
xor
mov
testb
popf
cmp
push
cmp
loope
cmc
jle
into
les
test
cs
dec
xor
jae
xchg
movsl
add
rcrb
pop
nop
test
mov
aam
mov
dec
xchg
sti
cs
je
ja
bound
aas
mov
adc
insl
out
dec
aaa
pop
cs
cli
aas
outsb
mov
fiaddl
dec
or
mov
into
out
stos
iret
roll
xchg
sub
push
xchg
dec
or
inc
stos
idivl
insb
shl
and
popa
fmuls
mov
sbb
dec
stos
pop
mov
pop
test
sub
lock
pop
xor
pushf
adc
int
and
test
push
fldcw
jge
mov
dec
mov
stos
es
std
fistl
mov
ret
cmpsb
jnp
ljmp
addr16
inc
push
cmp
andb
notl
mov
addb
repz
call
pop
dec
cmp
iret
push
xor
pop
xor
es
clc
and
cmp
and
pusha
rol
push
loop
notl
mov
add
add
xor
xor
mov
outsl
scas
add
add
test
shll
cmpsb
mov
jmp
ds
sub
stc
lea
sbb
sbb
shrb
push
dec
xchg
pop
enter
aad
je
scas
notl
xor
push
dec
add
lods
ja
cmp
sbb
leave
jmp
push
inc
jl
mov
add
or
or
aad
mov
jo
mov
inc
mov
lret
shlb
sbb
cmp
enter
insl
jmp
fcmove
sbb
mov
mov
push
aaa
outsb
fnstsw
dec
lods
cmpsb
lret
pop
lds
fs
fsubrl
shl
add
loope
inc
jmp
cli
or
loopne
xor
or
sub
mov
sti
lds
pop
dec
lea
pop
jne
aad
mov
mov
movsb
cmp
jno
icebp
mov
outsb
lods
and
push
loope
inc
jle
lods
fiaddl
or
push
mov
rorb
dec
dec
xchg
push
int3
jns
push
out
out
ret
cltd
or
pop
iret
jne
mov
push
jecxz
sbb
xchg
adc
add
sub
jnp
sbb
mov
xchg
icebp
addr16
bt
setp
out
cmp
fnstenv
xor
lods
mov
jp
testl
xchg
iret
shll
sub
int
sub
imul
int
ljmp
dec
and
out
imul
sbb
xchg
adc
call
xchg
mov
jb
jecxz
xchg
xor
jbe
push
bound
mov
ja
xor
vmovsd
and
insb
cld
jle
push
icebp
decl
xchg
pusha
dec
adc
fidivrl
cmp
push
int3
imulb
lret
dec
mov
jbe
test
jecxz
push
push
pop
sbb
mov
dec
push
adc
xor
push
cs
ss
mov
adc
jns
mov
adc
pop
xchg
cmc
fwait
sbb
push
mov
daa
jle
xor
cld
mov
adc
pop
sbb
xor
dec
sbb
xchg
int
mov
iret
sbb
insl
pop
xchg
jg
popa
outsb
jg
cmp
dec
or
and
mov
xchg
sbb
pop
xchg
mov
bound
je
mov
jg
fsubrl
gs
scas
sub
iret
mov
mov
pop
jno
pop
xchg
jb
lcall
mov
ljmp
fadds
dec
ret
not
ss
jnp
xorl
mov
add
jo
dec
jo
mov
mov
push
pop
scas
in
bound
and
insb
jne
stos
pusha
pushf
ds
mov
mov
xor
mov
pop
cld
jecxz
iret
jne
das
jmp
inc
insb
sub
cmp
cmpl
jecxz
mov
iret
mov
cmp
and
or
lods
xchg
sub
mov
leave
hlt
sbb
mov
std
mov
int
pop
mov
add
adc
lahf
mov
fnstcw
push
xchg
ljmp
mov
out
jns
stc
mov
aas
notl
push
jae
inc
push
xor
mov
pop
or
push
inc
push
loope
cmp
xchg
shl
pusha
cmc
jmp
cmp
add
clc
mov
mov
jns
sub
popf
testb
sub
pslld
inc
fimuls
mov
cmpsb
mov
incb
lds
pop
loop
pushf
movsl
push
sub
insb
mov
jecxz
mov
jge
jo
mov
xchg
lock
adc
jg
sarb
jmp
push
mov
jae
xor
cmp
cwtl
idivl
add
cmp
xor
mov
mov
pop
jl
cli
jge
xchg
or
sbb
inc
in
lods
rcrl
cwtl
cwtl
fs
adc
test
cmp
cmpb
sub
out
mov
mov
sbb
lret
in
adc
xor
gs
pop
add
sub
in
or
or
jmp
or
pop
jle
push
jge
or
xchg
rcrb
imul
cmp
fldt
bound
rclw
and
mov
aad
xchg
les
fcom
add
push
mov
out
cmp
pusha
shr
insl
loopne
xchg
jl
push
in
adc
ficomps
push
sub
mov
pop
js
addl
xor
dec
push
pop
ret
pop
fwait
mov
test
pop
movsl
out
pop
and
add
and
loopne
dec
pop
out
icebp
xchg
fistps
jnp
mov
in
xchg
ret
mov
adc
xorl
pop
xor
lea
mov
lret
lcall
sarl
xchg
add
mov
les
mov
add
jns
nop
xchg
push
xchg
leave
fistps
xor
mov
mov
and
or
push
imul
stos
adc
push
cmpsb
fcmovnbe
insb
adc
fidivrl
add
das
pushf
jg
flds
int3
popf
lods
bound
mov
mov
xor
dec
lret
mov
jns
mov
scas
pop
fwait
xor
rclb
add
les
lcall
inc
mov
inc
inc
jae
push
or
ret
ljmp
mov
fcmovne
out
push
sbb
ucomisd
push
sbb
xor
mov
into
cmpl
imull
mov
ret
xor
pop
fs
mull
adc
les
adc
inc
mov
mov
aas
pop
jp
es
dec
sub
dec
sarb
mov
stos
stos
lret
sar
lods
je
add
add
clc
jle
cmp
push
and
pushf
out
pop
out
inc
aaa
insb
adc
xor
hlt
sarb
adc
jno
in
shrl
pop
and
dec
int3
inc
outsl
or
js
sti
xor
mov
test
movsb
jle
loope
sbb
and
or
mov
in
mov
pop
mov
pop
insb
xor
sbb
and
call
out
adc
mov
jmp
xlat
int3
sbb
test
jl
push
cmpl
adc
jbe
popa
mov
pop
or
mov
cmp
mov
xchg
mov
pop
pop
mov
mov
add
bound
add
mov
adc
cmpsl
ret
shlb
sub
aam
repnz
outsb
mov
push
or
add
or
xchg
imulb
sahf
pushf
jbe
push
lret
xchg
jle
lret
daa
and
lret
pop
adc
adc
cltd
loope
mov
and
sbb
xchg
shrl
cld
fsubl
fistps
pop
imul
lcall
inc
push
aam
scas
or
imul
jb
cmp
xchg
xor
and
out
jns
dec
mov
mov
dec
sarl
mov
and
aam
jns
cld
xor
loop
jge
xor
mov
outsb
mulb
cmp
jbe
fldl
sub
push
lock
pop
or
jg
adc
jnp
inc
test
clc
sbb
fstps
jnp
xchg
and
in
mov
addb
xchg
xchg
stos
ja
jl
in
not
je
stos
outsb
jmp
xor
loop
scas
sub
push
dec
jns
scas
pop
rorb
xchg
negb
je
aad
out
push
in
icebp
popa
lds
lcall
add
cmp
add
outsl
sub
push
ret
mov
out
dec
jnp
lods
aad
out
xchg
pushf
sbb
lods
dec
loopne
sub
mov
jb
mov
mov
inc
jmp
dec
dec
repnz
mov
mov
and
fildll
pushf
xchg
and
negl
adc
inc
hlt
dec
mov
sbb
xchg
push
aad
cmpsl
lock
dec
adc
xor
push
xlat
cmp
rcrl
lahf
in
inc
js
adc
inc
rolb
mov
out
mov
or
imul
xchg
inc
push
idivb
mov
je
push
inc
outsb
xchg
stos
add
lds
pop
push
imul
mov
in
mov
pop
xchg
sbb
lahf
hlt
cmpxchg
frstor
out
clc
addr16
cltd
fistpll
pop
and
dec
mov
jo
pop
mov
jbe
dec
nop
pop
in
jecxz
lds
jne
or
push
xlat
gs
jp
xchg
jne
imul
push
addb
andl
add
dec
inc
out
testl
div
adc
inc
push
push
mov
push
lds
shrb
inc
push
icebp
mov
and
sub
mov
sub
setns
shrl
push
repnz
mov
and
icebp
xor
fsts
push
dec
std
jecxz
and
push
rcll
pop
pop
push
sub
xchg
stc
test
pop
mov
repnz
addr16
sub
xchg
sarb
mov
int
aaa
popa
xor
sbb
jb
mov
fstp
div
shl
mov
mov
test
leave
ret
aad
dec
add
mov
xchg
push
rclb
sahf
mov
ret
mov
movsb
or
pinsrw
add
xchg
sbb
mov
je
or
push
ret
rcr
clc
sub
xchg
inc
jbe
jns
aas
add
pop
mov
and
add
notl
lcall
cmp
dec
test
push
ljmp
test
cmp
inc
lcall
aam
jp
lds
pop
jo
mov
dec
nop
mov
out
adcb
mov
cmp
outsb
mov
lods
repnz
mov
dec
or
rorb
and
push
xor
xor
icebp
jp
push
aaa
ljmp
pop
pop
lods
sub
cmp
dec
sbb
xchg
xor
push
pop
sbb
dec
and
adc
and
or
stc
movsl
lods
push
lahf
push
sti
and
jecxz
cmpb
mov
dec
cmp
xchg
pushf
push
dec
and
clc
data16
hlt
push
shlb
ret
cmc
xchg
pusha
pop
pushf
mov
out
scas
dec
scas
and
cmp
dec
enter
mov
sti
js
sbb
lock
mov
adc
idivb
test
push
adc
jo
xchg
push
mov
push
pusha
mov
add
xlat
xchg
aam
mov
lds
fucomi
arpl
enter
xchg
add
cmp
rorb
and
scas
std
xchg
cmp
cmpsl
adc
add
movsl
xchg
xchg
sub
in
std
jg
sti
shll
xchg
mov
jbe
or
leave
xor
loope
mov
movsb
xchg
mov
xor
and
mov
dec
or
mov
scas
add
sbb
or
insb
jnp
mov
rol
sbb
leave
stos
fsubl
mov
cmp
push
mov
push
lahf
sub
mov
test
inc
out
add
jle
lahf
add
jns
mov
sub
cmp
sub
out
shrl
push
pusha
sbb
je
or
jmp
in
or
in
and
adc
cs
mov
or
push
xchg
xchg
xchg
clc
dec
xchg
mov
mov
out
mov
xchg
mov
ljmpw
and
xor
sub
lods
xchg
cli
loop
call
sbb
das
fisubrs
add
aam
xchg
cmp
loop
mov
adc
jb
shrb
jmp
jmp
xorl
sub
add
cmpsb
lods
nopl
arpl
nop
mov
test
inc
jnp
xor
sbb
movsl
loop
rcrw
outsb
and
test
sar
mov
mov
add
cmp
mov
dec
xchg
adc
or
stos
mov
fwait
xor
push
xchg
shll
xor
scas
in
out
lret
mov
inc
pop
xchg
cmp
cld
adc
mov
pop
inc
push
inc
mov
or
jp
mov
sub
jbe
mov
jns
or
fs
incl
mov
inc
je
ficoml
xchg
sbb
cmp
mov
xor
xchg
adc
inc
js
cmpl
cmp
pusha
push
inc
int3
and
dec
or
fdivrp
aaa
andb
cmp
inc
mov
int
mov
and
pop
movsb
outsl
cmp
ss
clc
jge
push
mov
xor
leave
push
mov
lods
mov
loope
xor
mov
cltd
and
sub
add
inc
imul
push
ljmp
aaa
lret
loope
mov
icebp
pop
mov
mov
or
das
cmpsl
push
std
in
pop
jl
sbb
push
ret
mov
mov
xchg
in
iret
adc
inc
cmp
push
inc
jg
and
cmp
jno
pushf
push
xchg
bound
pop
insb
sub
call
pop
and
dec
int3
outsb
mov
xor
mov
in
cld
mov
pop
std
cmp
pop
call
lock
idivb
movsb
xlat
sbb
cmp
xchg
cmp
mov
in
mov
or
or
pop
mov
mov
loop
lret
test
inc
mov
add
bswap
stos
pop
or
sbb
pop
cmpb
jno
inc
fsubs
stc
jle
in
jecxz
sub
ja
mov
mov
push
mov
xchg
and
and
sbb
pop
dec
dec
adc
mov
ja
fwait
int3
add
jp
add
dec
mov
loopne
jle
std
mov
sub
inc
sbb
sbb
cwtl
xor
cmp
lahf
push
scas
xor
jb
or
push
mov
xor
push
sub
leave
cmp
sahf
or
scas
movsb
sti
pop
roll
lods
aaa
loopne
cmp
orl
or
jle
loope
pop
mov
int3
pop
adc
add
fstps
das
sarb
aas
dec
loopne
fdivs
jae
xchg
add
dec
xor
mov
movups
sbb
mov
and
repz
pop
idivl
push
les
ret
push
fcoms
cmp
leave
andb
mov
cmp
or
mov
mov
push
or
fadd
push
mov
lods
cs
pop
pop
cld
pop
sub
cmp
and
ficomps
mov
or
cmc
xor
insl
in
fldl
inc
xor
pusha
dec
mov
repnz
ret
arpl
push
pop
jp
adc
xchg
inc
pushl
ds
out
out
notl
cmp
ds
lock
jmp
push
add
sub
push
sub
pop
push
push
push
mov
or
cld
mov
test
mov
roll
jae
sbbb
in
cmp
outsb
inc
xlat
call
pop
mov
xchg
data16
dec
scas
ja
dec
inc
sahf
pop
or
lock
pusha
xchg
mov
or
imul
addr16
cwtl
sub
cwtl
fidivrl
in
ficomps
mov
cmp
xor
sarb
add
test
fsubs
or
pop
mov
add
mov
filds
imul
fdivr
mov
aaa
mov
mov
imul
mov
mov
cmp
test
add
cs
test
push
cmp
sub
popf
rcrl
pusha
call
aam
jae
push
scas
jae
sub
loopne
call
dec
push
ret
shr
sub
inc
push
or
in
call
add
cltd
cwtl
ret
mov
inc
hlt
mov
scas
leave
add
in
je
lahf
adc
cld
sbb
fxch
pop
addr16
xchg
loop
lods
xchg
sub
cmp
daa
mov
sbb
stos
inc
dec
stos
and
cwtl
cmp
mov
sbb
and
shrl
sub
aad
cli
xor
inc
divl
mov
cltd
movzbl
xchg
inc
imul
or
imul
call
xchg
int3
pop
fucomp
lods
andb
call
pop
dec
repnz
xor
lds
adc
cmp
rdmsr
push
xchg
sar
adc
mov
adc
pop
mov
cmp
mov
cld
or
cs
sbb
sbb
cwtl
adc
jbe
sbb
test
fildll
pop
not
fsubs
scas
jne
jecxz
cwtl
mov
or
ds
iret
or
mov
lret
or
mov
scas
test
sahf
pop
cs
sub
add
mov
insl
sub
dec
int
call
scas
out
or
xchg
imul
das
and
mov
inc
shlb
aaa
jnp
push
and
xchg
jmp
pop
bound
dec
in
add
sbb
lds
es
dec
cmpsb
out
negl
ret
jne
fisubrl
xor
js
pop
add
in
add
in
mov
mov
mov
dec
inc
push
dec
imul
jg
imul
divl
sub
pop
adc
pop
pop
pop
mov
jae
out
mov
sub
xchg
or
aad
jbe,pt
and
bound
lds
shl
adc
sub
and
fisubrs
mov
rcrl
cvtdq2ps
jecxz
mov
std
jb
mov
jne
iret
repz
cmpsb
scas
inc
mov
and
mov
mov
xchg
stc
sbb
loope
xchg
jae
mov
mov
push
xchg
and
movsb
stc
jne
xor
mov
pop
out
push
add
sub
jl
xor
arpl
mov
sbbb
cs
mov
ret
inc
xchg
mov
or
in
xchg
add
lret
push
pop
hlt
imul
cld
daa
in
fnstcw
sub
insb
or
repz
inc
outsb
mov
cli
push
movsl
stc
cmpsl
mov
lea
fs
pop
add
mov
cmp
fcompl
xor
repz
push
fisttpl
fwait
fwait
mov
ret
pop
cli
jne
popf
jecxz
mov
nop
jno
or
sbb
push
adc
aad
inc
push
inc
inc
notl
jmp
and
mov
mov
push
sbb
ja
push
out
adc
add
cmp
outsb
or
out
hlt
jo
pop
fsub
les
cltd
mov
shlb
push
xor
xor
jnp
jbe
mov
lcall
nop
sti
mov
mov
lret
mov
in
add
push
in
xor
mov
test
mov
mov
add
cmpsb
jg
push
dec
mov
sub
xchg
xchg
adc
pusha
stos
das
pop
rcl
ds
mov
mov
lods
and
loopne
mov
out
dec
push
pusha
jle
popf
negl
jmp
test
or
xchg
jno
ret
add
adc
adc
jecxz
dec
in
jecxz
pop
jmp
dec
sub
lds
aaa
mov
xor
movsl
aam
push
xchg
adc
hlt
inc
sbb
mov
xchg
mov
xor
mov
pop
mov
out
enter
push
add
cmp
xor
sahf
mov
xchg
jb
sbb
cmpsl
ja
pop
or
add
cli
and
stc
popf
sahf
and
sbb
inc
pusha
pop
js
xor
outsl
cld
and
add
sbb
mov
add
aaa
and
push
inc
xchg
aas
aad
mov
lea
fsubrp
aam
std
into
ret
enter
mov
insb
fwait
outsb
mov
leave
xchg
cs
aad
mov
ljmp
cmp
rclb
rcl
ficomps
xchg
jo
das
sbb
adc
pop
inc
sbb
popl
js
jle
inc
xchg
mov
and
push
xor
dec
lret
mov
or
fstpl
mov
cmp
jmp
test
xor
jg
daa
lock
xchg
or
call
fs
xchg
push
ror
push
pusha
sub
les
clc
and
fnsave
test
adc
in
sub
or
pop
bound
hlt
aaa
lret
jge
cld
jbe
inc
mov
in
jne
xchg
aas
lahf
repz
inc
push
xor
mov
or
pop
sbb
cmpsl
push
jp
dec
and
ret
sbb
stos
lock
repz
and
xor
leave
adc
imul
clc
js
xchg
aad
mov
andl
inc
fisttps
sbb
pop
push
addr16
add
and
std
aam
pop
rcr
and
cmpsb
sub
lcall
add
or
dec
data16
mov
sub
push
aas
cmc
sub
mov
xor
mov
dec
xor
add
lods
je
lds
gs
fistl
repnz
jle
jp
gs
pop
dec
mov
adc
fisttpl
in
mov
testl
cmpsl
test
test
jmp
hlt
jge
test
cmpsl
imull
sbb
xchg
add
xor
dec
movsl
outsl
lods
adc
sbb
jnp
inc
mov
in
jae
cmpsl
xchg
dec
mov
inc
ss
scas
or
cmpsb
mov
mov
add
and
cld
or
mov
fists
in
xchg
in
cmp
pushf
mov
lods
sti
les
xchg
and
loop
repnz
in
jno
repnz
add
inc
call
push
add
stc
jg
into
lods
push
pop
jge
pop
xchg
aas
mov
fld
mov
mov
add
enter
arpl
xor
mov
adc
icebp
inc
jbe
gs
clc
in
pop
inc
das
hlt
and
in
sbb
movsb
lods
add
int3
jecxz
movsb
jns
js
repnz
fcoml
mov
iret
test
cmpsl
pop
inc
xchg
sbb
add
mov
sbb
sub
jp
aad
jnp
sub
mov
jno
hlt
int3
mov
ljmp
add
rclb
aad
inc
int
nop
test
ds
int
sahf
into
adc
jnp
out
xor
mov
pop
clc
mov
neg
test
repz
push
pop
fcoml
adc
jbe
cld
push
xchg
mov
cmp
mov
or
iret
fnstcw
bndstx
loope
and
jbe
mov
mov
incl
push
fwait
aam
js
adc
push
addb
imul
pop
add
lahf
mov
push
mov
inc
in
adc
mov
dec
fcmovb
adc
jbe
sahf
fsts
ss
out
mov
pop
fsubrl
dec
xor
nop
test
daa
cmpl
jae
clc
xchg
fmul
addr16
hlt
pop
mov
sbb
sahf
pop
cmp
addl
movsl
cmp
push
pushf
clc
sbbb
movsl
lods
and
sub
daa
bound
dec
xor
out
xchg
subl
mov
dec
sub
cmp
and
test
push
aad
add
inc
adc
ret
mov
lods
cmp
addr16
add
xchg
push
nop
push
cmc
add
scas
pop
dec
and
jg
xchg
aam
push
adc
iret
stos
out
inc
mov
sbb
add
cmp
ficomps
xor
adc
icebp
mov
mov
mov
je
adc
scas
add
sub
leave
lret
frstor
ds
add
xchg
sbb
or
xor
mov
rclb
mov
sbb
outsl
loope
testl
sub
add
lds
xchg
arpl
les
fsts
sbb
call
jae
add
add
cwtl
fistpll
ret
push
mov
loopne
aam
mov
test
js
push
xchg
jecxz
push
inc
or
sahf
enter
cs
roll
xchg
cmc
test
mov
mov
fnstcw
push
xlat
add
lods
loopne
push
sbb
test
iret
sbbb
into
sahf
push
inc
stc
call
fistpll
aaa
aad
fists
cmpsb
insb
add
subl
daa
in
jne
push
mov
ret
loop
mov
mov
in
adc
mov
adc
sbb
lret
aaa
loopne
lahf
out
sahf
lret
inc
mov
mov
repnz
in
std
cmp
cwtl
xchg
mov
fwait
js
xchg
jns
add
aas
add
sbb
std
cs
fwait
cwtl
dec
jno
add
push
pop
shlb
orb
lds
pop
std
mov
cld
pushf
sti
add
adc
mov
mov
mov
xor
rol
nop
mov
push
push
pop
mov
movl
mov
jae
iret
push
sbb
push
sub
gs
flds
xchg
daa
clc
ljmp
gs
sbb
fdivs
add
in
jae
mov
push
push
mov
jl
xchg
imul
add
aad
out
fidivrl
je
pushf
inc
out
pop
jbe
in
movsl
or
fs
gs
xlat
cvtpi2ps
cmp
push
out
xor
adc
push
jnp
sbb
js
ret
push
shr
ja
stos
jp
lods
jae
sbb
cmp
int
mov
sbb
lahf
xchg
aaa
test
mov
test
sub
mov
leave
insl
or
push
xlat
inc
adc
mov
cld
and
cmc
std
test
cmp
adc
and
sbb
call
sub
mov
shlb
leave
cmpb
lods
ja
orl
loope
sub
xchg
pusha
sbb
aas
xchg
ljmp
cmp
pop
sbb
and
call
pop
in
cmp
jmp
js
rclb
std
notl
sti
fs
mov
mov
jo
push
cwtl
stc
and
push
rcrl
jmp
daa
bound
sub
cwtl
cmp
sbb
jnp
movd
cs
add
cs
sarb
addb
repnz
scas
inc
and
inc
es
push
popa
adc
inc
fnstcw
jecxz
fstp
mov
inc
push
and
adc
mov
or
rcrb
sbb
pushf
or
xor
xchg
imul
lcall
mov
inc
loope
sub
add
aaa
xchg
icebp
jmp
dec
adc
or
sbb
das
push
ret
mov
mov
push
lods
dec
mov
lock
adc
repnz
pop
shrl
pop
mov
sub
xchg
inc
xchg
adc
xlat
dec
sub
fcoml
mov
xchg
cli
repnz
push
sbb
push
mov
dec
jbe
stc
mov
int3
sbb
in
xchg
out
push
mov
jo
mov
iret
outsl
cmp
mov
mov
addb
add
std
mov
fwait
ljmp
dec
cmp
mov
xlat
cmp
imul
popf
xchg
xchg
mov
xor
test
or
cmp
mov
popf
cmpsl
or
mov
and
dec
es
out
jecxz
insb
mov
push
or
ret
pop
ret
es
scas
rcrb
add
push
pop
xchg
mov
in
outsl
and
lahf
dec
add
or
loope
je
jo
add
imul
or
inc
fxch
push
mov
jle
adc
ret
ror
sub
sub
mov
push
mov
pop
loop
inc
sub
dec
int
or
xchg
push
adc
repz
popf
jo
and
jo
ds
inc
lock
pop
xor
or
int3
movsl
and
push
xchg
fsub
mov
add
adc
int
es
cmc
ret
data16
dec
mov
movsl
xchg
scas
fdivl
popa
pop
mov
add
xor
cltd
cmp
int
pop
inc
lock
movsl
sub
insl
mov
pop
ja
adc
lret
mov
push
clc
mov
xor
push
test
and
ss
ss
dec
inc
xchg
cltd
lods
cmc
jbe
lods
test
sub
fstps
outsb
jl
jl
into
hlt
mov
cmc
pop
sub
test
pop
sub
jae
sar
or
push
popf
ret
shrl
in
mov
cltd
push
sahf
rol
daa
popa
push
sbb
mov
sbb
sbb
jne
addb
into
daa
and
sub
inc
xor
movsb
ds
jmp
push
and
dec
divb
xchg
and
push
lret
push
imul
mov
aam
ds
out
jmp
cltd
add
into
dec
mov
jae
pop
adcl
cmc
mov
lods
mov
call
aam
mov
and
mov
xlat
fwait
jbe
cmp
adc
imul
adc
cmpsl
pop
mov
imul
movsb
xor
inc
cmc
imul
cld
in
and
out
mov
or
scas
jae
out
outsl
sub
ret
cmc
mov
and
add
jne
pop
subb
scas
daa
pop
fnsave
out
mov
mov
xchg
movsb
enter
idiv
scas
enter
es
stos
cltd
test
popf
rcl
dec
ror
out
lods
cmp
leave
jge
mov
insb
ja
sbb
jmp
decl
cmp
mov
lods
push
int3
xchg
out
inc
xchg
mov
cld
mov
inc
or
sahf
imul
mov
test
leave
clc
xchg
cmp
sub
cmpsl
in
sarl
cmpsb
ja
iret
vunpckhpd
lods
push
or
sahf
int
mov
mov
out
jge
inc
ret
aad
sbb
xchg
mov
inc
arpl
cld
jne
lcall
jl
sbb
add
push
out
cmc
xchg
jbe
clc
mov
inc
dec
ja
and
addb
notb
ss
negb
inc
add
cmpsl
dec
sti
fisubrl
jle
dec
mov
xor
imul
aaa
mov
sbb
push
dec
xchg
rclb
stos
imul
adc
dec
pushf
lahf
ljmp
mov
pop
cmp
mov
sbb
out
fistpl
mov
push
xchg
xor
iret
mov
push
inc
cmp
pop
and
dec
aaa
sbb
push
int3
roll
mov
inc
outsb
push
dec
adc
gs
sbb
call
gs
jns
push
fldenv
add
mov
mov
and
add
sbb
or
push
test
jae
xor
movsb
add
fistpll
movsl
mov
adc
xchg
popa
cltd
dec
inc
dec
mov
cmpsb
iret
clc
lret
movsl
or
lods
xlat
sbb
les
addr16
jbe
pop
push
or
clc
popf
insl
pusha
pmaxsw
mov
mov
xchg
lcall
adc
xor
mov
sbb
in
cs
mov
vmwrite
imul
mov
xchg
or
and
mov
xor
aaa
dec
or
dec
sub
shrl
jmp
mov
stos
adcb
lea
cs
loope
cmp
jp
cs
mov
sub
fnstcw
stos
adc
loope
mov
notl
and
outsb
push
mov
or
or
sbb
cmpsb
filds
pop
jl
dec
ljmp
mov
xchg
add
mov
rep
jle
mov
sub
and
cmc
in
subl
nop
cltd
sbb
pop
dec
arpl
push
shl
fildl
xchg
mov
xchg
cmp
rcrl
fadds
lods
repnz
out
sub
lock
and
cmpl
movsl
xchg
int3
orb
cmc
push
mov
std
jo
hlt
cmc
movsl
test
push
fstps
pop
lret
popa
cwtl
out
stos
adc
rorl
xchg
in
sub
xchg
test
int
sub
rcrl
jecxz
ds
sbb
xchg
bound
repnz
imul
adc
fs
rcrl
mov
cmc
daa
push
sub
xchg
and
int
mov
pop
push
jne
push
jae
mov
loopne
add
cmp
or
cmp
and
rcr
inc
repnz
mov
inc
jnp
pop
dec
mov
test
ljmp
mov
les
leave
dec
es
push
add
inc
stos
xor
mov
pop
mov
push
inc
add
jbe
stos
sbb
clc
xchg
mov
or
or
and
mov
mov
shrb
into
push
mov
jge
add
fnstcw
ret
test
dec
mov
dec
xchg
cmp
jbe
loope
int
add
out
jno
arpl
push
iret
std
xchg
je
jae
xlat
test
or
insl
lret
xchg
push
pop
xor
aas
pop
fldenv
mov
icebp
adc
xchg
mov
adc
fimuls
xchg
ja
pushf
jo
xchg
sahf
push
lret
insl
pop
mov
sub
imul
lods
mov
bound
jae
mov
and
data16
test
dec
lcall
lret
mov
icebp
mov
inc
cmp
cs
mov
dec
mov
cmp
sub
xlat
cmp
inc
push
jne
xor
test
aad
out
add
push
mov
xchg
and
aad
lahf
je
pusha
test
jnp
insl
and
mov
roll
fisubrs
mov
mov
and
stc
leave
cwtl
test
or
mov
mov
mov
ss
in
or
xor
push
ss
into
push
dec
pop
out
sub
push
xor
jmp
std
xchg
push
call
lods
cmpsl
xchg
icebp
es
mov
lcall
fnsave
mov
rcrl
imul
sbb
add
mov
xor
jno
and
jge
insb
repnz
cmc
mov
fistpll
inc
push
lret
mov
unpckhps
es
cmc
adc
mov
pop
stc
sub
js
sub
pop
out
cld
push
cltd
add
or
xor
sbb
sbb
mov
inc
dec
and
sbbb
mov
outsb
xchg
repnz
cmp
adc
inc
jecxz
stos
mov
add
fldt
jg
add
jb
daa
or
pop
inc
and
pop
fiaddl
js
vmread
aaa
jecxz
fcmovne
pop
into
bnd
scas
stos
les
lret
push
sub
shlb
movl
movb
or
movsb
jp
xor
mov
shlb
xchg
stos
fldt
add
daa
int
addr16
and
iret
jmp
or
or
pop
mov
xchg
lods
orb
aaa
icebp
ja
test
sub
lods
addl
cmp
std
icebp
and
imull
in
inc
cmp
test
mov
ret
adc
adc
fists
xchg
add
mov
call
ficomps
or
dec
mov
jb
sahf
pushf
ss
mov
inc
pushf
iret
cmc
in
push
ljmp
out
fprem1
outsl
mov
xchg
lods
rorb
xchg
or
cmc
shrl
ja
lods
xchg
xchg
mov
mov
imul
or
ret
pop
fs
push
ljmp
add
pop
dec
lea
divb
gs
inc
stos
inc
sub
sub
lahf
mov
ds
stos
sbb
lea
sub
jb
mov
je
pop
mov
mov
add
sbb
sub
mov
inc
xorb
push
insl
popa
imul
jns
aas
cmp
enter
mov
or
dec
orl
xchg
dec
sti
mov
mov
push
out
insb
sbb
mov
subl
shll
xor
int
mov
je
aas
addr16
mov
mov
ljmp
dec
cmp
ret
lds
sbb
loopne
mov
add
push
sbb
shl
jns
inc
xchg
jecxz
push
lds
je
mov
xchg
xor
mov
js
mov
sub
inc
stc
shl
hlt
cltd
aas
inc
dec
mov
fldcw
adc
xchg
int
dec
xorb
xor
in
inc
out
data16
imul
inc
dec
xor
mov
pop
arpl
lret
mov
mov
or
sub
pop
arpl
cmpsl
clc
lcall
mov
rcrb
mov
mov
pop
add
lods
cmpsb
add
cltd
jmp
xchg
cmp
add
pushf
adc
push
jmp
sbb
xchg
in
imul
and
mov
test
shrl
aas
out
aad
jb
and
mov
ss
inc
lea
std
mov
arpl
add
sub
fistpll
or
push
roll
out
mov
lret
sub
shll
mov
arpl
mov
dec
dec
cmpsl
aam
mov
mov
xchg
sub
lahf
cmpsb
int3
ror
sahf
ja
int
and
mov
jo
add
lods
scas
out
movsl
add
sub
pop
sub
pop
jbe
sahf
xchg
aas
std
inc
fwait
push
inc
cli
add
xchg
mov
xor
ljmp
pop
test
jg
jmp
push
sbb
dec
cmp
es
xor
mov
movsl
cltd
out
pop
roll
mov
mov
jmp
push
mov
cmp
ret
lods
mov
fwait
inc
test
scas
or
imul
ret
xchg
mov
addr16
insl
cmp
push
pop
adc
cmc
mov
and
fnstcw
sbb
cmp
lods
or
test
outsb
cld
fstpl
jmp
push
insl
xor
xor
or
adc
mov
out
mov
pushf
inc
or
jb
cmpsl
gs
stos
xor
lahf
mov
push
mov
mov
lret
sti
mov
inc
movsb
lods
xor
mov
lods
jl
test
incb
sub
rcrb
mov
xchg
in
dec
in
dec
adc
imul
mov
lods
enter
data16
mov
jl
mov
add
push
fsubrs
imul
or
std
xchg
sahf
fwait
loopne
mov
je
mov
dec
in
or
and
test
adc
stos
sub
or
mov
mov
nop
ds
popa
adc
jbe
mov
arpl
mov
push
aam
adc
push
loope
push
scas
xchg
and
cmpb
push
jecxz
push
das
lcall
out
mov
dec
mov
xorl
pop
push
cmpsl
fildll
jge
cmp
cmc
mov
repnz
pop
dec
stc
cmp
adc
lods
pop
push
xchg
cs
outsl
sbb
sbb
out
or
inc
stc
or
pop
pusha
push
test
dec
andb
pusha
mov
push
test
fimuls
into
adc
movsl
mov
call
jbe
mov
dec
push
mov
aas
mov
lods
xor
mov
frstor
sub
adcl
lcall
mov
leave
inc
iret
lock
nop
roll
aad
dec
mov
fs
shrb
aaa
lret
pop
in
mov
jbe
daa
mov
scas
es
stc
jge
lcall
jmp
xchg
dec
mov
test
dec
daa
scas
or
es
push
ret
xchg
dec
lret
inc
nop
xchg
insb
and
cmpsb
cld
sub
cmp
xor
cmp
int
mov
repnz
push
into
dec
je
mov
jbe
fyl2xp1
inc
push
push
ds
mov
into
rolb
in
push
sub
mov
jp
cmp
push
xchg
pusha
xor
sahf
pop
lret
adc
out
mov
inc
ss
cmova
lods
aad
push
cmp
and
fcomip
icebp
lcall
cmpsl
mov
shlb
incb
adc
out
fists
jmp
cld
jge
rcl
jno
jge
inc
stos
mov
add
mov
lods
pop
pushf
leave
fmulp
inc
add
jno
fldenv
stos
fistpl
enter
xor
mov
out
pop
mov
std
cs
cltd
inc
lods
xchg
jl
jg
dec
and
push
jae
pop
ljmp
xor
scas
jo
pusha
scas
pop
push
mov
icebp
add
sbb
fmull
inc
push
mov
cltd
mov
cwtl
roll
xchg
cmpsb
xor
lock
ror
imulb
into
cmp
int3
pop
mov
gs
insl
inc
mov
jne
out
je
mov
and
cmpsl
jge
lcall
jg
sbb
cmp
sbb
clc
push
dec
sbb
xchg
mov
push
add
mov
lea
or
xchg
and
mov
fisubs
sar
js
out
fiadds
xchg
or
and
mov
mov
outsb
adc
leave
int3
lods
xchg
mov
das
rorl
lcall
rclb
xor
sbb
sbb
test
lods
lahf
bound
mov
enter
mov
pushf
cmp
lods
cwtl
shlb
popa
inc
jl
mov
call
cli
mov
stos
in
mov
lea
push
in
lahf
fistpl
inc
dec
shrl
mov
mov
out
into
sub
pop
sti
es
lock
call
pushl
cmp
sar
and
mov
mov
sub
sar
outsl
pushf
sahf
rcrl
ror
adc
cmc
sub
jns
fisttpl
bound
cmpsb
jge
dec
jo
cmp
fsts
int
mov
out
pop
cmp
aaa
xor
sbb
pop
fcmovu
pop
inc
sub
inc
subl
adc
adc
mov
sub
push
cwtl
clc
and
movsl
dec
imul
cmp
jle
mov
ret
jo
xchg
pusha
cltd
enter
pushf
mov
test
out
rcll
push
lret
jnp
fcomps
xchg
addl
add
insl
arpl
in
stos
xor
test
sbb
cmp
mov
fldenv
idivl
jns
push
in
subb
pop
ret
in
mov
insl
daa
and
mov
adc
lcall
pop
hlt
popa
fnstenv
mov
cmp
lds
adc
mov
mov
push
ja
jno
out
cltd
pop
jnp
lds
xor
xor
sbb
test
iret
xchg
dec
adc
in
and
test
sbb
or
aas
mov
aas
aad
sub
jnp
stc
adc
inc
gs
fadds
add
movsb
ljmp
adc
mov
push
lret
jmp
movsb
mov
loopne
xchg
dec
lds
cmpsl
repnz
stos
push
in
mov
ror
mov
mov
mov
sbb
repnz
adc
cld
cmpsl
nop
cs
cmp
pop
xor
add
pusha
addr16
lgs
mov
dec
test
outsb
loop
ret
xor
into
cli
mov
data16
lcall
fcompl
imul
cmp
int3
mov
sub
lock
mov
mov
dec
in
or
flds
repz
mov
xchg
pop
ljmp
inc
cmpsb
xchg
ror
sbb
pop
scas
mov
jbe
sub
push
mov
sahf
cmp
push
or
mov
push
xor
pop
imul
push
adcl
pop
dec
ficoml
cmp
popl
and
fwait
lds
xchg
jb
pusha
mov
clc
inc
jmp
std
cli
or
inc
adc
or
adc
cli
xchg
push
mov
jne
jge
mov
cmp
addr16
sbb
or
std
ret
sbb
outsb
fwait
mov
mov
inc
rclb
or
scas
pop
push
pushf
push
xchg
mov
mov
mov
inc
sub
jno
push
lods
and
jecxz
nop
adc
pop
pop
push
dec
je
mov
and
cmpsb
xchg
adc
testl
in
data16
les
dec
in
pop
xor
push
pop
xchg
fmull
mov
xchg
shufps
shlb
test
and
sbb
mov
fcoms
mov
mov
ds
fldl
adcl
cmp
or
xlat
add
lret
xor
adc
das
xor
fists
roll
xor
mov
jns
aas
xchg
add
mov
ss
repz
jbe
jae
pause
or
ret
pop
mov
xchg
add
push
arpl
push
arpl
fbld
sub
adc
test
mov
push
roll
mov
or
xlat
adc
or
leave
sbb
jmp
fcmovne
repz
inc
das
jle
outsb
xchg
sti
scas
sub
add
add
or
xchg
ret
sbb
fcoml
ficompl
adc
into
into
aam
cmp
cmp
mov
les
jmp
mov
xchg
jp
dec
aad
cmp
xlat
pop
cmpb
push
jle
lea
int
mov
rcrl
jl
and
sbb
mov
sbb
pop
ficompl
inc
jns
sbb
adc
push
ret
lahf
adc
ret
push
mov
push
sub
ds
les
addr16
xchg
bound
in
pop
int
ss
cmpsl
out
jg
ds
dec
sbb
fimull
dec
xchg
fs
add
xorl
and
jo
cmp
mov
adc
jbe
sub
adc
lea
aaa
ss
push
pop
sub
popa
xor
adc
adc
hlt
jnp
aas
xchg
push
scas
mov
stos
xor
aam
adc
mov
xor
push
js
das
xchg
and
fmull
xor
ja
scas
enter
pushf
sub
push
mov
xor
cwtl
sub
push
add
data16
push
outsl
pushl
xor
sub
scas
daa
dec
xor
xchg
fisttps
inc
ret
inc
mov
and
push
push
push
pop
mov
mov
xorb
add
imul
int3
into
loop
and
mov
add
sub
inc
push
cmp
std
jae
jbe
add
pop
xchg
sub
mov
xor
jo
jg
sub
inc
xchg
hlt
out
out
cs
test
std
inc
sub
cld
sarb
xor
mov
icebp
mov
cld
xor
pop
push
jb
movsb
loope
dec
cmp
cmp
dec
jne
adc
mov
testl
fistps
adc
popf
outsb
imul
fildll
mov
add
leave
mov
adc
aaa
daa
inc
mov
sub
out
inc
jle
mov
pop
inc
insb
ficoms
repnz
mov
jo
out
shr
inc
shrl
add
test
cmp
and
lret
push
mov
ss
and
or
push
ret
lods
cmc
jl
std
and
mov
pop
xchg
sahf
in
and
cmpsb
adc
lret
add
push
aaa
out
or
inc
mov
add
insl
pop
jl
mov
xchg
ds
mov
cli
ret
mov
pushf
icebp
movsl
mov
mov
mov
add
jb
in
jl
inc
push
dec
fwait
mov
popa
dec
xchg
fwait
adc
ret
mov
pop
pop
push
out
and
movlps
orl
add
fisubrs
cmp
adc
lds
arpl
push
popa
push
and
push
jo
adc
and
add
in
testb
leave
cmpsl
cwtl
cmp
sbb
lds
nop
jne
stos
mov
cmp
jp
fnsave
imul
sahf
dec
test
pop
fwait
mov
jne
jg
jns
push
enter
jb
mov
rcll
xchg
clc
pop
xchg
pushl
inc
inc
mov
lahf
test
jecxz
push
div
dec
ret
push
shl
repnz
inc
push
jmp
arpl
pusha
jecxz
push
pushf
jo
shll
roll
orl
jle
pop
int3
lods
push
fwait
xchg
je
push
dec
mov
sbb
gs
jmp
insl
sbb
sarl
dec
scas
into
nop
xchg
or
outsl
inc
sti
enter
sbb
pop
lret
pop
gs
xchg
push
sbb
jne,pn
data16
test
inc
ja
cmp
adcb
xchg
inc
cmpsl
in
add
push
cmovg
mov
push
testb
cwtl
push
jns
mov
dec
or
mov
xor
pop
adc
xrelease
xchg
lret
popa
jne
xorl
les
xor
mov
out
pushfw
inc
rcl
stc
pop
js
pop
rorb
icebp
cmpb
leave
adc
jmp
adc
add
cs
test
addr16
aam
cmp
imul
sub
push
rolb
cmp
icebp
adc
movlps
pop
or
test
push
xchg
lock
shlb
jno
sbb
inc
adc
test
cmpsl
lea
rolb
mov
cmc
sub
dec
cltd
addr16
es
mov
mov
sbb
sub
or
inc
or
sub
inc
cmp
mov
or
je
and
mov
inc
movsb
push
dec
jge
arpl
iret
add
xchg
jns
fisubl
or
push
add
sbbb
fisubrs
pop
ficoms
rolb
test
mov
jns
xchg
out
mov
add
lea
gs
lea
sub
fisttpll
adc
pop
and
aaa
aam
lods
push
sarb
mov
adc
cmp
push
rclb
mov
fistl
push
xchg
int
adc
sub
lods
push
add
inc
lahf
mov
jnp
sbb
clc
lahf
push
mov
jnp
test
flds
aas
daa
lods
test
je
out
cwtl
js
jge,pn
daa
movsl
xchg
and
or
lret
pop
insl
adc
pop
push
inc
out
bound
or
adc
ret
and
and
lahf
mov
inc
shlb
adc
bound
jne
mov
mov
orb
pop
push
and
notb
push
imul
call
cli
xchg
adc
aad
out
xchg
ljmp
stc
insb
mov
out
xchg
divb
dec
in
repz
cmp
ljmp
lret
jl
or
dec
in
mov
or
push
sub
aaa
and
loopne
fwait
popa
inc
dec
data16
fildl
mov
xchg
jns
test
popa
ficomps
dec
fiaddl
adc
fwait
into
mov
xchg
fwait
lcall
mov
fsubp
pop
cmp
in
cs
addb
test
outsl
cltd
cltd
sub
or
imul
out
mov
out
and
jb
enter
inc
nop
sub
repnz
push
ret
paddq
xor
mov
js
push
cmp
jnp
test
stos
mov
push
sub
xor
sahf
inc
inc
xor
jb
and
mov
jno
data16
popf
aas
hlt
xchg
test
pop
inc
mov
sbb
das
mov
lock
das
push
aam
enter
jl
repz
out
loopne
xchg
jbe
mov
sbb
lahf
add
sub
sub
cs
movsb
lea
lahf
gs
or
pushl
fldl
scas
push
adc
lret
lods
loopne
dec
push
add
insl
fcompl
jge
stos
aam
fcmove
cmpsb
in
jb
xor
xor
cmp
inc
int
adc
push
mov
mov
lods
cmp
pop
xor
mov
sub
dec
fs
adc
fnstenv
in
pop
bound
orl
clc
mov
jo
rorb
jle
fcomi
rclb
outsl
inc
ss
je
fcoms
push
daa
rcr
clc
cmp
scas
int
ret
mov
mov
cltd
pop
mov
call
ret
ljmp
aas
in
pop
ret
test
std
push
pop
ret
outsb
push
cmpsl
sti
sbb
cmp
mov
mov
mov
loop
mov
divb
fisubrs
int3
cld
stos
ljmp
xor
cli
add
insl
push
sbbb
mov
orb
xchg
adc
outsb
add
lcall
push
xor
clc
mov
jmp
in
ret
jl
stc
hlt
xchg
gs
cli
stc
mov
jne
cmpsb
adc
lds
xchg
cmp
dec
nop
lret
je
xor
in
or
ss
xchg
push
adc
rorb
jae
push
int3
leave
sub
inc
arpl
loop
and
in
scas
insb
mov
push
sahf
mov
fwait
mov
roll
fiaddl
test
dec
es
pop
dec
cmpsb
mov
dec
daa
or
jns
lds
lea
stos
mov
jno
pop
adc
or
jp
cld
xchg
xchg
xor
push
cmp
jns
mov
popa
dec
inc
cltd
daa
mov
stc
dec
adc
pop
inc
mov
mov
sbb
cmp
fdiv
je
mov
imul
test
push
jmp
mov
loop
sub
jmp
or
add
xlat
rcl
add
add
aaa
out
jo
lods
sahf
pop
gs
pusha
jae
out
cmp
mov
or
shl
cltd
or
mov
and
sub
or
insb
mov
outsb
dec
shr
mov
xchg
cmp
mov
adc
jb
insb
gs
sub
bound
push
in
inc
mov
fwait
jbe
out
cmpsl
or
in
hlt
es
xor
sbb
mov
push
popa
movsl
jecxz
cs
lret
xchg
push
dec
out
das
mov
pop
int
push
cmpsb
sahf
xor
std
es
jg
cmp
cs
insb
cmp
mov
int3
inc
adc
outsb
out
mov
imul
mov
pop
iret
icebp
adc
aaa
insb
negb
mov
lods
cmp
xor
ret
xchg
in
push
mov
repz
sbb
ljmp
in
int3
lret
xchg
mov
push
xchg
bound
aas
call
nop
and
inc
pop
jl
call
test
xor
jmp
testl
mov
or
test
jp
xor
inc
xchg
add
in
dec
inc
jge
adc
inc
and
ret
in
mov
xchg
int
insl
leave
je
mov
xchg
and
fcomp
sbb
imul
pop
push
mov
xchg
test
popf
dec
cmp
movq
dec
fcoms
xchg
jne
xlat
xchg
mov
jbe
orl
and
into
adc
inc
mov
lahf
and
aad
fdivs
inc
mov
jbe
dec
cmp
push
out
push
mov
shrl
mov
jg
subb
out
test
or
jge
pop
subl
xor
lock
sarb
sbb
mov
pop
jg
or
and
xchg
and
loop
mov
adc
push
loopne
test
sarb
mov
dec
dec
test
add
setbe
push
jle
lds
pop
push
xor
je
daa
mov
sbb
clc
loopne
cmp
cmp
add
or
subl
push
push
inc
xchg
pop
sti
cld
xchg
adc
dec
ret
out
fs
in
popa
jns
ljmp
jecxz
mov
inc
sub
mov
pop
mov
pop
call
data16
inc
mov
jge
and
xor
subl
xchg
jmp
jno
xor
arpl
nop
js
mov
lret
pop
push
imul
dec
out
lods
mov
push
adc
push
inc
mov
mov
adc
dec
cmp
pop
or
fsts
xchg
mov
pop
xorl
cmpsb
push
daa
push
sub
shlb
jecxz
jecxz
les
pop
out
xor
dec
dec
add
push
cmc
call
cmp
inc
inc
dec
test
push
shll
xchg
stc
dec
dec
mov
cmpsl
xor
inc
xchg
cmpsb
shll
pop
cmp
mov
sub
popa
loop
imul
xor
mov
repnz
inc
or
push
cmpsb
nop
mov
nop
cli
jmp
xchg
movsl
adc
movsl
movsl
shlb
and
xchg
sbb
in
push
loopne
ljmp
clc
or
loope
mov
pop
mov
adc
cmp
jb
jp
lret
xor
ss
mov
inc
sub
mov
xor
or
inc
push
adc
mov
push
je
jae
frstor
insb
lcall
insl
or
sbb
jo
jl
stos
rorl
mov
call
lahf
aad
jne,pn
jb
jmp
std
pop
dec
fcmovu
cmp
in
clc
jo
mov
inc
lahf
mov
stos
cmpsl
cmp
into
in
lcall
mov
push
rcrl
fs
xor
mov
sahf
sub
inc
pop
cmp
mov
push
js
cmp
fs
inc
daa
and
ja
pop
mov
mov
mov
mov
and
repnz
mov
fdivrp
test
cmpsl
jns
test
pushf
insl
xlat
or
addr16
pushf
and
out
sub
jmp
aam
decb
jge
xchg
outsl
xchg
int3
jl
cltd
pop
movsl
push
xor
mov
jmp
rclb
orb
fstpl
pop
mov
cmpsb
dec
mov
add
xchg
adc
scas
mov
xorb
cmc
cmp
mov
pop
xchg
decb
pop
in
sbb
mov
dec
dec
arpl
push
jge
push
mov
aas
inc
and
dec
lock
adc
out
jle
jnp
sbb
stos
push
in
xor
les
jge
mov
stos
ja
es
test
sub
cmp
mov
mov
sub
lcall
inc
cmpsl
lcall
cmp
dec
nop
dec
pop
inc
cmp
test
xchg
and
push
dec
fst
insl
mov
mov
jl
jl
sub
mov
lock
fidivrl
sbb
divb
popa
cmp
push
mov
jmp
inc
jb
ret
into
mov
shrl
ret
add
rcrl
fnop
jnp
lods
mov
mov
shrb
dec
sub
sub
popa
data16
mov
movb
outsl
cmp
sub
ret
aam
jecxz
mov
notl
xchg
mull
sbb
hlt
addr16
xchg
shl
out
cmpsb
push
cmp
bound
xor
into
test
repz
mov
stc
pop
jmp
adc
clc
jle
mov
or
dec
push
jl
nop
loop
xchg
jo
daa
push
aad
into
jl
out
ret
lahf
push
sahf
std
push
cmpsb
sar
nop
lahf
cmpsl
out
push
aaa
leave
mov
lret
gs
insl
adcb
inc
icebp
jl
outsl
ficomps
pop
daa
mov
lret
and
rclb
int
adc
mov
mov
mov
mov
cmpsl
fmull
test
into
jl
push
push
or
push
cs
push
jnp
insb
push
mov
imul
sub
iret
fbld
out
hlt
mov
sarl
mov
and
sarl
notb
testb
cmp
ss
insb
mov
mov
sbb
js
adc
dec
cmpb
ret
inc
cmp
xor
adc
cmpsb
movsl
pop
push
out
push
mov
mov
mov
mov
cmpsl
pop
out
movsb
addl
lods
call
pop
push
mov
mov
mov
fldt
jmp
add
xlat
xchg
jp
push
xor
ret
ds
int
adc
fwait
cmpsb
movb
xchg
test
popa
dec
into
sarb
data16
adc
pop
and
mov
aaa
cmp
pop
outsl
test
incl
pop
sbb
inc
repnz
in
push
movsl
adc
lret
loopne
push
add
pop
notl
mov
mulb
fld
mov
scas
testb
mov
aam
inc
jl
mov
xchg
imul
ret
push
leave
filds
and
das
and
dec
shll
jle
xchg
int3
push
pop
movsb
orl
xchg
nop
les
inc
test
andb
je
icebp
cs
divl
pop
mov
scas
stc
shll
ret
shrb
pushf
dec
xor
cmpl
xchg
testl
xor
fidivrl
std
fxch
xchg
mov
pop
iret
in
ljmp
add
mov
xchg
outsl
imul
jmp
sub
pop
jl
lea
cmpsb
xor
xlat
ss
ljmp
leave
mov
adc
and
arpl
mov
xchg
outsb
imul
mov
fsubrl
mov
stos
movsl
pop
bswap
or
bound
mov
inc
mov
out
fdivrs
popa
mov
or
or
fsubs
imul
cmp
lock
mov
jp
mov
test
shrl
pop
or
mov
ljmp
or
std
insl
pop
mov
je
cltd
lock
dec
in
cmp
fildl
mov
sti
xor
jmp
mov
aaa
testb
mov
fstps
lcall
cld
xchg
inc
adc
pushf
xor
mov
popf
push
mov
mov
es
test
stos
lods
mov
mov
mov
jne
pop
or
out
fisubrl
jle
jbe
mov
bound
add
jae
aas
mov
sub
hlt
insl
in
imul
pop
sbb
jle
cmp
pop
or
sahf
add
xchg
dec
fcmovnu
cmp
stos
xor
imul
inc
push
daa
inc
cld
jmp
nop
cmpb
clc
test
outsl
mov
jns
fidivl
decl
push
cmpsb
and
insl
pop
jno
mov
inc
scas
movsb
in
jnp
mov
fcmovbe
or
sub
rorl
pushl
call
mov
and
xor
fsubp
mov
sbb
pop
cmp
push
add
or
int3
cmp
adc
push
mov
pop
push
out
imul
dec
push
push
dec
push
or
in
add
xchg
sbb
movsl
cmp
jns
hlt
daa
ret
dec
in
bound
inc
js
pop
fadd
push
pop
jg
cltd
push
imul
out
ret
ss
jb
cmp
push
stos
mov
sub
mov
adc
sti
xchg
data16
in
add
pop
iret
dec
sbb
sbb
cld
xor
push
dec
or
in
in
popa
push
push
ljmp
int
push
pop
in
and
inc
sti
fildl
pusha
pop
add
sub
iret
or
dec
mov
scas
pop
cli
dec
and
cmpsb
fldcw
dec
enter
xchg
jns
gs
xchg
push
jno
pop
enter
mov
aad
int
ds
and
mov
jle
fnstsw
add
pop
jnp
jmp
and
mov
lret
enter
movsl
adc
cli
int3
adc
mul
test
mov
movsb
unpcklps
cltd
jmp
xchg
cmp
inc
data16
cmp
fstps
repz
inc
mov
inc
pop
imul
test
adc
test
aam
jnp
popf
push
outsl
add
adc
je
xor
dec
je
push
adc
mov
fcomps
insb
xor
fnstenv
test
adc
cwtl
jp
xor
push
inc
push
rclb
jle
sbb
inc
jle
aas
scas
or
cmp
inc
jns
push
pop
arpl
cmp
pop
push
mov
or
popf
xchg
fistpl
mov
push
inc
cmp
fwait
ror
mov
pop
push
lret
out
push
jbe
pop
test
lea
ljmp
popf
es
fs
out
dec
xchg
orb
repnz
dec
ret
mov
pop
xchg
je
add
subb
mov
xor
sahf
mov
testb
xlat
inc
mov
jmp
and
aam
fdiv
or
push
cmp
dec
mov
insb
sahf
popa
xchg
orb
and
in
xchg
cwtl
cs
popf
jae
or
pop
lods
adc
pop
mov
subl
inc
push
arpl
test
add
and
outsl
popa
inc
push
cmp
stc
lahf
inc
mov
push
cmp
leave
mov
dec
or
cmp
adc
mov
sbb
cltd
dec
mov
lret
jnp
xchg
ljmp
jmp
out
sbb
testb
push
ljmp
jb
lds
rolb
shrb
or
mov
push
insb
mov
push
shrl
and
nop
jns
xchg
pop
dec
mov
movsb
push
sti
pop
call
cmp
jmp
lods
rcl
inc
neg
jns
into
loopne
pop
mov
out
addr16
ljmp
data16
outsb
mov
push
arpl
rcrb
jae
xor
jmp
je
cli
stc
iret
cmp
pop
daa
xor
mov
or
mov
jns
lea
pusha
xor
sar
repz
xchg
aaa
das
sti
es
iret
dec
xor
dec
das
dec
int3
jg
or
mov
loop
data16
inc
pop
or
or
xchg
sbb
ret
dec
dec
lahf
jmp
adc
aas
out
cmp
push
add
imul
and
js
sbb
xchg
mov
inc
cmp
mov
jmp
xchg
popa
add
xchg
mov
dec
sub
xchg
push
or
insb
or
sub
cmpsb
leave
inc
push
iret
mov
sarb
fdivp
loopne
push
stos
jns
xchg
lret
xchg
mov
aaa
sti
xor
inc
imul
inc
cwtl
call
enter
mov
jle
cmpsl
push
inc
xor
sbb
adc
gs
jge
cmp
adc
loop
push
movsb
int
mov
in
shl
xlat
mov
sti
bound
mov
popf
mov
mov
sub
jne
mov
jo
repnz
xlat
loop
dec
in
and
cmc
test
jb
xchg
add
mov
xchg
ja
scas
loope
cmp
es
out
dec
inc
out
cmp
sub
loopne
rcrb
bound
xchg
stos
or
lea
pop
pop
icebp
xchg
sti
mov
jle
insb
lods
jne
xor
xchg
push
mov
popa
arpl
xchg
xchg
cmp
xchg
xchg
in
iret
nop
jl
inc
mov
ds
sub
paddb
mov
mov
jns
pop
out
sbb
mov
jle
dec
cld
lret
int
int3
cmpsl
sub
je
aaa
mov
ret
test
aaa
dec
xchg
pop
jmp
sub
pop
ret
lods
xor
xorl
lock
jmp
adc
pop
stos
or
adc
lret
mov
outsb
scas
fimull
mov
jmp
neg
push
repnz
repnz
mov
mov
pop
jns
xor
xor
jp
pop
and
sub
popa
xchg
mov
popf
push
outsl
ss
push
push
notl
stc
repnz
sub
sbb
jmp
fwait
rcr
xlat
push
sahf
inc
in
stc
in
lock
in
xchg
sahf
jbe
sbb
scas
jmp
jne
add
mov
rol
shlb
nop
jg
mov
cltd
sbb
out
xor
fidivl
push
add
mov
fisubl
mov
push
cwtl
lahf
cmp
sbb
mov
cmc
mov
idivl
test
in
jb
sbb
mov
popf
je
adc
xchg
das
movsl
repz
mov
fwait
jo
cmc
sbb
shrl
mov
jne
jle
or
mov
fnsave
jmp
sub
and
stos
js
nop
testl
loop
jne
outsb
or
mov
cmp
in
into
push
jns
jl
aaa
sahf
jg
int3
mov
dec
loopne
arpl
and
mov
sarl
mov
rcrb
fbstp
aam
xor
dec
mov
pop
pop
pop
mov
rcrb
les
mov
cmp
ss
in
pop
aad
and
jg
add
jns
mov
or
dec
push
mov
notb
pop
imul
adc
loopne
sbb
cmp
test
sub
xor
ljmp
jbe
xchg
dec
push
movsl
pusha
ss
inc
popa
add
push
fwait
mov
add
xchg
movsl
dec
mov
mov
fildl
pop
inc
adc
pusha
data16
jns
pop
or
cmp
adc
stos
adc
mov
push
mov
icebp
cmpsb
outsb
mov
mov
subl
pop
das
cmpl
daa
int3
pop
popa
adc
icebp
or
adc
fidivl
sub
mov
cmpsb
mov
mov
dec
cltd
push
push
lods
mov
cmp
testb
aas
and
xchg
sarl
pop
cmc
arpl
lret
into
fistl
imul
add
pushf
sarb
push
arpl
xchg
ss
fists
mov
push
mov
fnstenv
sub
rcr
loopne
jecxz
mov
cmp
xor
dec
mov
js
loopne
dec
in
cmpsb
jnp
pop
out
lret
push
mov
pop
xchg
sbb
or
jb
pop
in
mov
xchg
adc
adc
jecxz
xor
sahf
andb
stos
add
mov
sub
test
xlat
call
aam
ja
jb
jae
popa
xchg
pop
pop
inc
mov
out
scas
mov
mov
ret
aad
negb
mov
loope
fdiv
and
filds
and
fimull
out
push
cmp
sub
or
xor
cmp
fcomp
adc
mov
loope
push
call
daa
movsb
lahf
in
xor
lods
hlt
imul
movsl
in
xchg
or
mov
inc
dec
decb
das
mov
sub
sub
je
push
or
cltd
loop
rcll
shrb
mov
shrl
repnz
ja
add
jg
adc
in
dec
lret
je
out
dec
pmaxsw
testl
ds
inc
int
pop
and
movsl
rcll
push
lcall
cld
pop
push
xor
shrb
stc
pop
add
cli
pushf
xchg
pop
or
fistpl
xorb
stc
add
idivl
stc
out
sbb
jbe
dec
ljmp
or
adc
cwtl
popf
enter
fs
ja
orl
fs
xor
mov
mov
aas
sub
pop
cli
sbb
ret
push
dec
xor
scas
jae
call
push
in
jp
je
jne
lret
adc
cmpsb
sub
sub
daa
stos
jns
mov
lods
push
or
jns
mov
ss
jne
xchg
xchg
jnp
xor
push
cmovb
scas
cmp
cmpsb
mov
lods
pop
lea
xorb
fidivl
or
add
push
dec
xor
pop
sti
unpckhps
pusha
pop
repz
lahf
out
sub
fistpll
lock
bound
push
pop
push
and
movl
mov
xor
ljmp
adc
mov
push
mov
cld
pop
aaa
xor
cmp
cmp
jnp
les
push
dec
and
xorb
lods
add
xor
jnp
mov
mov
adcb
aas
rcrb
pop
jo
adc
sbb
in
mov
xor
into
dec
loop
fisubs
cmpsl
cli
or
test
jle
cmp
dec
xorb
insl
adc
sbb
and
pop
push
cld
aaa
mov
jno
shl
loope
out
push
inc
mov
test
aam
xchg
and
clc
fwait
jo
push
inc
jo
out
fldcw
sbb
addr16
cmp
cmpsb
lea
or
movsb
jl
enter
mov
test
adc
push
mov
ljmp
dec
jl
outsb
and
pop
mov
pop
test
jae
push
xchg
jae
mov
inc
lret
push
jb
test
xchg
scas
enter
push
push
jne
test
testl
mov
loope
js
outsl
cmp
inc
xchg
mov
fidivrs
mov
cmp
push
pop
xor
and
out
mov
mov
xchg
outsl
faddl
test
jbe
sub
popf
jb
pop
test
stos
sub
sub
adc
cmp
inc
sub
pop
add
fdivl
mov
xor
push
mov
jnp
test
push
arpl
pop
int3
inc
fisubl
lods
in
bnd
inc
rcrb
jle
sbb
or
pop
daa
pop
aas
or
sub
push
sbb
iret
orl
jecxz
ret
or
test
jne
ds
pop
pop
xchg
and
out
scas
dec
push
inc
add
push
xlat
insb
movsl
xor
cmpsb
jbe
loop
push
sub
popa
inc
rorl
fsubl
mov
pusha
fs
lock
push
cmc
xchg
mov
jecxz
sbb
vcvtsd2ss
fnsave
dec
mov
or
out
mov
mov
stos
push
ret
clc
mov
lret
cmp
hlt
dec
clc
xchg
cmp
ficomps
popf
and
adc
test
clc
pop
icebp
popf
add
xchg
or
cmpl
cmp
dec
jecxz
sbb
inc
push
mov
mov
cmp
hlt
jns
jbe
xchg
lret
cmp
inc
xlat
adc
aam
add
popa
sub
pop
insl
add
cli
dec
test
mov
jecxz
add
jno
xchg
nop
sbb
or
cltd
xchg
or
mov
pop
mov
fisubrs
sbb
dec
sub
xor
enter
cli
sbb
out
or
icebp
push
mov
xor
cltd
lret
lret
aad
mov
sbb
mov
sbb
fdivrs
sub
jno
leave
into
mov
hlt
cmp
daa
into
repz
sbb
pop
pushf
scas
push
push
in
data16
in
orl
fldl
scas
cld
push
imul
lock
ficompl
sbb
inc
das
mov
jle
sub
xor
aaa
mov
dec
test
sbbl
loopne
dec
repz
sti
dec
xor
inc
imul
pop
cs
icebp
lret
push
and
stc
fmuls
mov
data16
js
popf
inc
cltd
sub
pop
idivb
xchg
aaa
fcoms
mov
mov
fildll
mov
lock
fnsave
inc
aaa
mov
stos
dec
pop
push
push
dec
cmp
mov
adc
sub
in
push
not
fstl
jle
sub
pusha
inc
jl
in
mov
jne
je
mov
test
out
std
fldln2
xlat
bound
into
jae
das
lds
js
pop
outsb
dec
sahf
adcl
repz
clc
push
popf
jne
sbb
mov
sahf
inc
push
stos
add
inc
daa
cs
lret
push
out
stos
mov
test
dec
cli
add
jnp
and
movsb
xchg
imul
mov
lret
mov
sub
rcrl
cmp
add
cli
mov
shl
add
lret
dec
sti
loop
xchg
daa
lods
stos
adc
sbb
test
stc
push
rcll
jo
testl
shlb
and
cmp
add
iret
push
dec
mov
push
sbb
int3
push
pop
test
xor
cmp
mov
inc
ss
call
imulb
jge
add
inc
add
scas
xchg
out
icebp
out
loopne
inc
adc
push
data16
repz
sahf
dec
shl
sub
test
jo
stos
push
addr16
or
cmp
cli
xchg
scas
cmpsb
jb
fnstenv
lahf
jecxz
inc
test
aas
cmp
test
sub
sti
js
cmp
sub
addr16
fmuls
je
es
sbb
cmp
repnz
arpl
pop
clc
in
push
lret
stos
add
push
inc
sub
jo
call
add
dec
push
lret
xchg
sbb
das
or
dec
inc
ret
dec
mov
xchg
mov
mov
cmp
dec
add
outsl
outsb
popa
adc
mov
jp
cmp
cwtl
inc
cmp
add
fst
jge
sbb
sbb
es
cwtl
mov
mov
xchg
and
fmull
in
lods
mov
push
mov
int3
repnz
mov
jne
sar
lea
add
pusha
mov
loopne
dec
mov
scas
adc
jg
iret
out
inc
mov
mov
test
add
sub
testl
iret
mov
mov
ret
icebp
sbbl
mov
fsubrs
mov
in
xchg
push
sahf
jg
pop
jge
jl
push
out
shr
mov
loop
mov
xchg
mov
mov
or
aad
mov
stc
out
aas
and
pop
mov
push
hlt
sbb
ret
xlat
cltd
icebp
cs
xor
out
sub
lahf
cmpsl
insl
dec
add
das
add
push
cmp
adc
sub
cli
jnp
push
stos
jne
pop
aas
jae
repz
rorb
mov
inc
fs
push
sti
adc
jne
stc
jno
movb
xchg
sub
ds
mov
pop
cld
jae,pn
into
mov
push
or
std
mov
sub
shll
jg
iret
dec
mov
ja
std
lods
outsl
shr
in
cmp
subb
mov
das
int
adc
sub
inc
mov
adc
ds
xor
sub
lea
sub
cmp
test
in
adc
push
mov
mov
mov
mov
pop
imul
icebp
add
add
loopne
sarb
cmp
roll
rorl
cltd
push
inc
push
mov
lods
and
ja
stos
outsb
xor
dec
or
mov
adc
or
push
aad
jbe
push
out
push
xchg
movsb
ljmp
cmpsl
xchg
data16
orl
mov
sbb
fsts
pop
scas
jecxz
out
mov
rorl
mov
mov
cmp
out
sub
cmc
xor
inc
inc
jnp
or
xchg
push
mov
loopne
dec
test
mov
add
adc
cltd
mov
shll
cmp
push
cld
les
xor
pop
test
imul
fisttpll
test
mov
sbbb
mov
mov
sub
sub
xchg
cmpsb
sbb
outsl
mov
xchg
pop
and
dec
and
test
dec
pushl
xor
enter
std
loopne
mov
mov
adc
nop
fcmovnb
push
xor
mov
sbb
aaa
cld
xchg
addb
sbb
sbb
dec
pop
pusha
fidivs
pop
lcall
dec
pop
repz
pop
inc
xchg
clc
in
inc
pop
inc
jle
sub
jge
les
mov
or
fdiv
shl
pop
sti
jp
or
pop
cmp
cmp
popf
mov
cvtps2pd
nop
ret
stos
sti
out
cmpsl
sub
test
mov
in
push
xor
imul
xor
ljmp
cmpsb
mov
push
pop
scas
lds
jg
adc
sub
sbb
and
pop
imul
pop
out
mov
jns
xlat
mov
dec
mov
xor
cmp
jbe
dec
fstl
push
jo
pop
mov
sbb
mov
out
and
sub
out
push
push
lcall
mov
icebp
xchg
insb
fcompl
stc
push
filds
push
or
mov
adc
into
mov
xor
sub
hlt
and
popa
lret
add
lock
pop
jecxz
push
mov
jl
cmp
aaa
movsb
lret
jo
psrlq
test
xchg
cmc
fsubrp
inc
stos
cltd
shrb
pop
pop
lods
jae
adc
dec
outsl
pop
pmaddwd
xor
nop
fs
push
adc
mov
adc
popa
push
dec
push
mov
pop
mov
ret
push
push
mov
mov
inc
mov
ret
push
jbe
aas
movsl
push
push
and
out
mov
cmp
out
push
dec
mov
inc
mov
xor
pop
mov
lods
jo
lret
pop
loop
daa
pop
in
add
push
pop
ja
out
xchg
xor
jb
xor
sbbb
std
fistl
cmp
or
mov
inc
add
jb
sahf
mov
add
lret
sahf
mov
mov
roll
imul
aas
repz
mov
cmp
and
cmp
push
or
cmpsb
ljmp
pop
push
stc
sti
inc
cmp
lcall
adc
sbb
jp
sub
xor
stos
aad
mov
mov
call
cmc
cli
es
sub
fcomp
int
cld
cmp
mov
inc
mov
xchg
push
push
in
inc
out
shlb
jno
dec
pop
je
inc
cs
out
jno
aas
inc
dec
sub
hlt
jmp
cmp
fbstp
loopne
adc
fmul
int3
sub
xorb
xor
scas
xchg
pop
out
mov
add
jecxz
les
or
dec
js
fldcw
push
cld
hlt
or
jae
mov
inc
ret
rclb
pop
xchg
fdivr
das
int3
dec
aas
mov
push
repnz
sub
int3
repz
les
andb
outsl
loop
push
jns
sub
add
je
or
ss
jns
ret
mov
pop
lahf
fidivrs
adc
mov
sub
daa
or
or
je
cmpsl
cld
pop
inc
lods
cmp
icebp
aaa
fxch
and
or
daa
popa
push
lret
mov
jne
test
pusha
push
xor
mov
pop
sbb
cltd
mov
fsubs
dec
lret
or
mov
cmp
shll
repnz
sbbl
push
cmp
push
jecxz
dec
leave
mov
adc
cmc
sub
fstpl
mov
lea
and
dec
sbbb
cmp
push
jle
out
out
popf
sbb
out
inc
mov
jp
ret
int
lea
mov
out
xlat
push
push
pop
fwait
xchg
sti
and
push
int
lds
cmpsb
sub
sbb
or
xchg
sub
ret
xchg
or
roll
lahf
jl
adc
lods
mov
xchg
popa
push
xchg
in
mov
in
xchg
xor
sbbw
inc
mov
dec
push
stos
jg
sbb
fs
shr
lret
adc
jmp
jp
adc
lds
inc
mov
fdivrs
lods
movsl
xchg
pop
pusha
scas
mov
add
test
push
mov
inc
mov
sub
repnz
jnp
adc
in
add
push
add
inc
popf
movb
sub
xlat
jmp
xor
cmp
fdivrs
or
cltd
xlat
adc
inc
xchg
fs
dec
push
jb
cmp
ss
out
push
xchg
push
sub
lock
arpl
pop
xchg
scas
adc
push
into
pop
add
xchg
pop
lret
mov
js
hlt
adc
daa
xor
mov
push
jmp
popa
mov
xlat
dec
lret
in
mov
mov
icebp
in
dec
add
sbb
push
mov
push
lretw
scas
and
sbb
mov
das
daa
fs
pop
aad
xchg
in
imul
arpl
jae
mov
sub
repnz
repz
rep
test
dec
mov
aas
in
pop
adc
sbb
lea
pop
arpl
sub
cld
dec
mov
mov
mov
fs
lret
sbb
sti
sbb
lds
daa
add
fdivs
and
rcrb
sbb
cmp
mov
iret
mov
ljmp
lds
cmp
inc
pop
fbld
subl
addr16
add
loope
pop
pop
lock
scas
lahf
in
lods
mov
xchg
loop
loop
fidivs
pop
subb
add
aas
sub
push
sbb
movsb
mov
in
ljmp
mov
test
stos
jmp
scas
and
xor
stc
movsl
cmpsl
or
mov
xor
shlb
iret
push
pop
fcoms
loope
or
int3
push
mov
add
jle
out
int3
or
and
inc
inc
into
mov
movsl
xchg
inc
mov
mov
inc
push
stos
push
aaa
mov
adc
in
outsl
cmc
add
inc
and
aam
arpl
jg
outsl
out
ret
cwtl
lods
pop
cltd
and
lods
clc
cmpsb
add
cmpsl
lds
in
test
sbb
add
lds
loope
cmp
fwait
mov
out
jl
cmp
mov
flds
rorb
mov
pop
push
and
cmpsl
xchg
or
popf
push
push
imul
dec
mov
dec
and
repnz
xchg
es
aas
repz
in
fcom
add
lahf
mov
lahf
cmp
cltd
sbb
jmp
and
push
in
xorl
insl
loope
adc
xchg
pop
mov
outsb
and
adc
scas
jb
repnz
fisttps
dec
pop
aas
dec
mov
mov
jmp
scas
div
ret
pushf
lahf
ror
fisubrs
ror
cltd
push
sub
in
fmull
adc
mov
dec
ret
pop
subb
enter
or
or
in
dec
lcall
push
or
adc
scas
in
fcoml
dec
lahf
clc
sub
stc
sub
mov
xor
mov
mov
aam
out
dec
lret
inc
ret
pop
pop
mov
daa
cmpb
icebp
mov
pop
shrl
xchg
das
and
dec
mov
aaa
lock
and
fsts
mov
lret
cmp
addr16
cmpsb
push
xor
dec
movsb
mov
pop
es
inc
std
sub
loopne
adc
jno
cmpb
cmp
mov
jae
inc
lret
inc
mov
daa
adc
outsb
mov
adc
gs
jae
inc
mov
in
out
shrl
adc
pushf
sbb
pop
pop
mov
int
sti
dec
inc
mov
pop
sbb
pop
pop
jecxz
mov
or
cli
mov
addb
adc
call
push
mov
addb
mov
sbb
idiv
fisubs
shlb
fcmovu
mov
adc
cwtl
mov
mov
jae
lods
stc
mull
lea
xor
xchg
pop
or
push
dec
addr16
mov
mov
mov
push
out
inc
xchg
or
shrl
popfw
pop
jge
sub
cltd
lret
mov
imul
movsb
test
sti
and
int
inc
in
loop
inc
lods
not
sbb
cmpl
sub
xchg
push
mov
push
adc
push
mov
push
cs
add
data16
movsl
jmp
pop
jecxz
and
jb
mov
mov
inc
cmp
xor
jae
jg
mov
pop
arpl
jbe
xchg
cli
add
popa
fnstenv
lods
inc
push
das
mov
test
inc
jo
lcall
push
or
sbb
sahf
icebp
lods
adc
jp
add
jg
mov
mov
mov
or
dec
sbb
fnstenv
pop
push
stos
sub
shll
sarl
loopne
dec
arpl
sbb
insl
je
xchg
loop
outsl
jns
insb
imul
pop
stos
ljmp
and
outsb
inc
js
pop
and
int3
pop
call
stos
fwait
push
sub
fcoml
pushf
mov
jp
sar
pop
and
push
aaa
call
sub
jl
push
lret
aaa
xlat
insb
mov
clc
or
pusha
arpl
in
sbb
roll
push
lcall
or
inc
insl
popa
sbb
mov
outsl
pop
inc
fstpt
arpl
jecxz
mov
fdivr
xchg
inc
pop
jecxz
lock
mov
push
insb
mov
inc
mov
push
divl
mov
ja
inc
daa
icebp
in
pop
jne
enter
adc
fadd
and
xor
add
je
in
int3
dec
jl
pop
push
mov
fwait
inc
movsb
jo
sub
mov
icebp
loopne
mov
addr16
mov
and
xchg
and
sub
mov
movsl
or
cmpsb
insl
daa
fdivrl
mov
shlb
lcall
loopne
jne
xor
cltd
daa
sub
imul
or
xchg
cmpsb
inc
pop
push
sahf
adc
nop
cmp
lea
xor
test
or
mov
insb
mov
enter
out
fstps
add
sub
xchg
xorb
leave
push
gs
ja
dec
adc
inc
push
outsl
or
and
sub
dec
adc
pop
testb
inc
lret
test
pop
jb
and
push
imulb
hlt
jns
mov
cltd
lret
in
pop
out
push
add
mov
out
push
sub
mov
js
imul
sbbb
xor
mov
aam
push
jl
dec
add
enter
loop
inc
inc
lods
js
sbb
xor
sahf
ja
cmp
pushf
shrl
dec
syscall
jne
push
leave
hlt
aad
das
push
out
pop
push
lods
addl
push
incl
fs
push
xchg
xchg
dec
and
andl
adc
mov
add
out
popf
and
jecxz
and
mov
fildll
inc
dec
jl
cmpl
xchg
loopne
xchg
sub
call
mov
or
sbb
lock
mov
js
aad
xchg
inc
rol
sbb
or
jecxz
addr16
call
pop
pop
dec
fdivl
icebp
jne
push
setp
inc
lret
sahf
xchg
movsl
mov
mov
sahf
cmp
repz
popa
mov
and
sub
jae
jae
int3
mov
mov
in
dec
lods
sub
imulb
or
js
iret
mov
push
mov
pop
int
add
add
jnp
xchg
or
xchg
pop
cmp
imulb
adc
or
add
mov
mov
sbb
or
sbb
push
jl
xchg
xchg
sub
iret
xor
jmp
icebp
inc
dec
sbb
cmc
cmp
mov
insb
insb
jge
jg
aam
incl
idivl
mov
mov
mov
fs
mov
cmpb
adc
pop
lahf
loope
loop
push
test
jg
push
into
mov
mov
mov
ss
roll
icebp
imul
outsl
loope
inc
cltd
scas
testl
int
addb
addr16
sbb
popl
jae
and
jnp,pn
xchg
dec
scas
xor
cld
xchg
dec
mov
xchg
pop
mov
mov
jp
pop
pop
push
mov
popa
push
fistl
insb
ja
jl
push
adc
fdivl
or
cld
sub
mov
imul
xor
fisubl
or
pusha
insl
int3
imul
divb
les
lahf
inc
cwtl
inc
lea
rolb
pop
jl
jne
mov
gs
ds
push
movb
pop
sbb
ror
push
daa
out
jg
mov
xchg
fs
jge
mov
sub
fdivp
jl
cs
fsubrl
or
pop
dec
cmc
outsb
pop
inc
mov
ds
lret
or
pop
lods
gs
les
dec
jb
and
shlb
mov
xor
addb
repz
and
and
leave
xchg
icebp
cmp
dec
push
pop
cmpsl
cmp
add
jno
sub
xor
das
and
xor
and
outsb
ljmp
in
xlat
mov
pop
adc
and
mov
sahf
cmpsl
shlb
mov
sbb
cmp
xchg
inc
mov
aam
pop
lret
popa
jns
stos
in
and
and
lahf
add
push
shl
xor
dec
aam
sub
pop
xchg
push
or
sahf
aam
iret
and
in
mov
js
cld
movsl
aad
outsb
xchg
push
mov
pop
lret
aad
scas
add
in
push
sti
divl
rorb
dec
xchg
cmc
test
mov
or
fs
sub
loop
inc
and
push
xor
mov
mov
clc
out
jno
jne
jne
in
cli
xor
cmp
in
xchg
mov
jae
xchg
lock
test
add
mov
shlb
push
pushf
dec
dec
or
arpl
xchg
lods
js
fsubr
adcl
push
and
push
gs
cwtl
in
outsl
movsb
sub
mov
sub
into
arpl
xchg
imul
adc
push
gs
push
sbb
insl
out
ja
lret
inc
out
mov
xchg
dec
inc
outsl
add
push
or
cmp
pop
lret
pop
mov
adc
lahf
cmp
mov
dec
scas
pop
add
mov
jg
ret
scas
mov
mov
mov
stc
imul
cmp
mov
inc
mov
and
icebp
cmc
addl
add
xchg
arpl
mov
ret
sbb
or
dec
sub
outsl
cld
pop
jae
jo
inc
add
inc
call
or
mov
jns
or
popl
sbb
mov
adc
add
mov
mov
fidivrl
hlt
in
pop
insb
inc
inc
scas
add
mov
fsubrs
sub
push
mov
mov
sbb
dec
dec
pop
loopne
scas
sahf
mov
clc
imul
and
inc
ljmp
scas
or
data16
sbb
rorb
shll
aad
push
inc
in
pop
ss
scas
or
pop
mov
ss
loopne
popa
movsb
push
mov
and
mov
loopne
pop
pop
adc
shlb
fsubr
ja
sub
out
pop
xchg
cld
stos
adc
ret
cmc
pop
and
cmpsl
cmc
xlat
and
inc
jne
fnstenv
mov
xor
dec
inc
jmp
mov
add
inc
add
bound
xchg
cmp
xchg
in
scas
push
lahf
mov
insb
cs
pop
pop
roll
test
leave
sahf
and
clc
sti
in
aas
rcrb
pop
lret
mov
aad
sahf
cli
imul
out
pop
lcall
imul
push
enter
pop
xor
xchg
dec
repz
jnp
or
push
leave
lods
test
fisttpll
fs
xchg
mov
and
push
lret
mov
pop
rorb
or
insl
out
mov
cs
push
push
inc
sub
lock
mov
dec
ret
sahf
xor
adc
inc
and
scas
xchg
push
and
push
mov
pop
cmp
xlat
adc
dec
dec
cmp
jmp
popf
cmpsb
cmp
out
sub
dec
mov
iret
out
jne
cmpsl
int3
scas
xchg
test
flds
cmp
mov
push
mov
jno
cmp
int3
pop
pop
xchg
lret
pop
jae,pn
rclb
enter
xor
mov
adc
inc
lret
es
rcrl
xor
orl
mov
pusha
lahf
inc
enter
xor
sbb
test
cmp
mov
lahf
dec
and
into
test
mov
sbb
cmp
aas
push
jo
inc
sbb
cmp
sub
jo
and
adc
shrl
add
add
sbb
push
lds
stc
pop
dec
int3
std
lods
push
lcall
sbb
insb
aaa
or
adc
mov
cmp
or
pop
dec
fdiv
and
fmuls
faddl
jge
into
minps
arpl
xchg
int
inc
test
jp
repnz
test
pop
outsl
test
aam
jge
stc
mov
fcomip
out
stos
xchg
sbb
sbb
dec
mov
xchg
mov
and
inc
xchg
roll
jmp
pop
mov
ret
dec
mov
aas
int3
and
and
pop
adc
mov
rorb
bound
dec
ja
cmpb
hlt
cld
push
pop
sahf
addr16
push
ss
test
out
mov
std
ret
jge
aam
push
push
push
mov
pop
mov
and
and
push
js
pop
adc
jae
jo
xchg
mov
popf
shrb
mov
lods
ds
into
push
jb
xlat
ret
ljmp
pop
ja
jge
dec
sbb
movhps
incb
pop
rolb
icebp
xchg
pushf
repz
sbb
pusha
xor
dec
add
and
fcoms
lret
sbb
jl
gs
pusha
and
add
push
int3
das
jg
adc
stos
fidivrs
dec
lret
add
sti
mov
inc
fimuls
je
xchg
ljmp
into
fmull
xchg
arpl
scas
insb
inc
sbb
mov
negl
jbe
jle
ret
jge
fwait
sarb
jmp
xor
ljmp
or
inc
lret
sbb
int
sub
rorb
pop
loopne
push
sub
sti
dec
addl
adc
jns
stos
or
mov
lock
inc
movsl
cmp
clc
mov
lcall
inc
inc
cli
scas
aaa
push
jo
test
and
imul
pop
jecxz
push
sbb
bts
les
lods
loope
cmp
lods
and
or
lea
call
pop
fs
bound
es
mov
xchg
mov
sahf
repz
icebp
bound
mov
pop
and
sbb
outsb
or
outsb
subl
fiadds
mov
xor
mov
sahf
xchg
fisubrs
lcall
lods
xlat
std
pop
fiaddl
mov
mov
mov
daa
adc
jmp
shll
pop
or
lret
and
pop
sub
push
cmp
cmp
in
enter
jne
pop
sbb
ja
cltd
out
cltd
lcall
push
lea
nop
adc
sub
xchg
and
adc
xchg
pop
in
aas
test
or
inc
mov
xor
inc
shrl
inc
ret
test
mov
cmpsl
fdivs
sbb
out
int
inc
xor
cmp
enter
sti
loope
call
xor
jnp
sbb
aaa
adc
jno
testb
adc
adc
mov
rcl
pop
adc
shlb
loope
xor
mov
add
mov
je
sub
or
sarl
ret
push
dec
and
pop
jp
rol
fwait
clc
fidivs
xchg
mov
cmpsb
cmp
inc
inc
shrb
out
mov
sbb
popa
xchg
insb
inc
and
std
ret
inc
and
shll
mov
mov
repz
cmp
pop
pop
aaa
rcl
mov
lret
enter
test
push
push
adc
dec
sbb
dec
add
ret
xchg
sub
add
nop
cmp
fsubrs
jns
push
adc
cld
popf
fstl
sbb
mov
push
mov
jmp
xor
pop
pop
xor
repz
js
roll
add
xlat
xchg
or
jb
data16
aas
xchg
popf
std
es
lods
hlt
jle
sbb
mov
int3
inc
cmp
pop
aam
mov
pop
mov
out
sti
mov
int3
add
cmpsl
outsb
push
imul
lcall
aam
in
dec
clc
xchg
sub
push
cmc
mov
dec
dec
fldl
and
cmp
xchg
sbb
and
cmp
add
xchg
lea
inc
lock
jge
mov
ficompl
ret
test
cs
sub
scas
and
out
add
divl
cmp
adc
jo
and
jp
pop
scas
cs
int3
outsl
lods
dec
push
sub
or
push
sbb
xchg
lahf
cmp
xor
mov
push
sub
inc
in
lahf
fldl
pop
ja
pop
add
jns
in
repz
push
mov
icebp
mov
or
fists
xorb
push
push
pop
push
jns
mov
sub
jb
mov
jle
and
mov
jg
xchg
xor
cli
imul
cmp
push
rcr
pop
and
jb
sbb
cmp
scas
sub
mov
cmpsl
test
mov
cmp
push
mov
cmp
sub
jae
popf
orl
jecxz
jge
xor
mov
repz
xor
andl
ljmp
fidivs
cwtl
insb
mov
push
imul
out
andl
sub
and
addr16
and
xchg
push
aaa
imul
mov
lods
rorb
mov
and
push
sahf
jp
xchg
pop
outsb
or
xor
jb
mov
aas
lcall
fidivrl
adc
movswl
or
imul
inc
jo
test
xor
or
inc
out
jge
das
inc
inc
inc
dec
mov
jb
dec
jae
sete
jnp
lahf
call
xor
dec
loope
cmpl
dec
gs
xchg
pop
and
xchg
sbb
pop
aaa
rcr
hlt
fwait
xchg
xchg
push
xchg
jge
and
jmp
sbb
js
xor
or
addr16
add
rcrb
sub
jno
mov
or
dec
dec
dec
xor
and
xor
jmp
cmpsl
cltd
pushf
adc
mov
mov
and
adc
mov
cmp
add
adc
mov
pop
cmpb
jo
cmpsb
jmp
jl
jae
xor
sbb
es
decl
mov
imul
insb
inc
add
fstp
daa
subb
subl
add
addr16
jns
or
cmp
in
sbb
sbb
push
mov
adc
xor
loope
push
andl
sbb
popf
xor
jb
aad
inc
jns
push
pop
dec
mov
pusha
mov
xchg
jno
mov
movsl
lret
cmp
and
fstpl
es
pop
jns
gs
enter
mov
mov
bound
js
pop
aaa
orl
daa
loop
sbb
out
mov
scas
cmp
push
ror
add
and
pop
adc
in
push
add
stc
and
add
stos
push
pop
sbb
ljmp
rolb
js
mov
pop
mov
je
ds
cmpsb
sub
mov
mov
hlt
cmp
jecxz
shlb
lods
push
xlat
aam
das
popa
dec
sahf
adc
pushf
xlat
push
jg
adc
movsb
imul
imulb
dec
lcall
shrb
les
mov
mov
arpl
insl
mov
xchg
lea
xchg
mov
icebp
inc
insl
sub
xchg
mov
pushf
shlb
fs
mov
les
and
shrl
loop
out
inc
sub
loope
hlt
imul
loopne
int3
in
repz
xchg
pop
adc
adc
fs
js
inc
sub
push
sub
nop
xor
arpl
sbb
mov
pop
push
pop
jb
sarl
call
and
loop
outsl
mov
cmp
xor
lock
jno
pusha
xor
adc
pop
push
pop
repnz
loopne
sbb
sub
mov
jp
clc
dec
jno
ret
movsb
insl
sub
pop
insl
xchg
or
fsubrs
aas
mov
sbb
mov
rorb
shll
movsl
loope
mov
or
push
mov
and
sub
inc
aaa
push
jae
sbb
mov
inc
and
enter
mov
movsl
jnp
fisttpl
lret
out
insb
aam
push
sub
cwtl
xchg
pop
bound
cmp
rolb
and
mov
fnstcw
loop
xor
mov
lock
out
cmp
or
mov
call
enter
popf
inc
bound
fsub
in
ss
cmp
mov
imul
shlb
insl
push
mov
mov
call
lea
fcmovnu
jnp
xor
test
inc
mov
push
out
push
xor
pusha
mov
insb
pusha
lcall
fisttpll
scas
sub
sbb
jmp
or
mov
dec
outsl
push
neg
cmp
ljmp
in
dec
std
adc
cmp
push
ficoml
js
popf
cmp
stos
dec
mov
fcomps
in
xchg
aaa
mov
mov
imul
loope
push
insb
imul
aaa
mov
rcll
mov
andb
insl
movsb
jg
or
adc
insb
clc
or
fnstsw
push
cmp
jl
call
ljmp
cmpl
pop
sub
mov
test
jle
or
inc
in
jae
sub
sbb
sub
ds
sub
jecxz
outsb
std
cmp
mov
fstp
or
pop
inc
rclb
or
sub
data16
out
mov
sub
and
xchg
in
jle
xchg
mov
daa
int3
xorl
hlt
mov
pusha
xchg
dec
cmp
rolb
lods
je
cli
or
call
test
pop
add
aaa
cmpsl
push
jnp
iret
inc
cmc
fwait
mov
imul
dec
fists
stc
mov
clc
sub
mov
mov
stos
sahf
xchg
xor
int3
xor
in
cmpsl
hlt
nop
dec
dec
dec
dec
test
xchg
leave
lods
stos
pop
push
movsb
ds
xchg
mov
jge
bound
xchg
dec
mov
out
cld
or
adc
aad
cmc
arpl
add
mov
outsl
jp
sub
jle
xor
add
out
nop
jmp
fs
ss
xorb
enter
inc
or
jecxz
push
mov
popf
pop
ljmp
pop
mov
mov
in
jbe
xor
pop
data16
push
sahf
les
push
add
lahf
fildll
aas
xchg
mov
or
mov
mov
cwtl
aaa
movsl
stc
or
lret
xchg
fstpt
loop
fs
in
aaa
sbb
mov
xchg
adc
pop
sub
xchg
repz
in
mov
test
nop
jp
adc
mov
jle
faddl
jno
stc
jbe
jl
add
push
ja
fimuls
std
push
mov
jmp
adc
push
mov
mov
jb
fimuls
cwtl
pusha
idivl
in
popa
lods
cmp
std
push
aad
lock
loope
adcb
push
jle
call
adc
mov
aas
cli
push
ds
ja
pop
xor
inc
dec
or
idivl
push
mov
lods
xor
jle
or
dec
mov
test
xor
pop
push
sub
sub
inc
mov
cld
sar
jb
add
push
sbb
cltd
jge
add
repnz
cmp
jge
out
fwait
loopne
mov
nop
dec
aam
scas
add
sbb
inc
sbb
jg
xchg
dec
insb
push
and
fnsave
mulb
shlb
in
repz
xor
popa
cli
and
addr16
addl
jae
adc
inc
outsl
lods
fldl
and
sahf
push
lret
and
push
sub
pop
push
and
xlat
or
stc
bound
sbb
sbb
cltd
mov
pop
push
push
and
fisttpll
pusha
or
lods
fs
les
lods
pushf
adc
pop
add
mov
mov
xchg
bound
inc
test
sub
ja
fsubs
pop
xlat
mov
push
jnp
dec
xor
rclb
sbb
and
pop
pop
dec
push
ja
sub
popa
inc
mov
xlat
nop
lds
cli
jno
mov
inc
inc
push
mov
pop
orb
scas
lret
xchg
subb
arpl
jns
or
xchg
js
jmp
push
popa
cmp
pop
dec
xor
es
mov
flds
sbb
xor
mov
pop
mov
fdivp
jecxz
ret
push
sbb
daa
clc
or
or
icebp
pop
shl
mov
push
xchg
inc
xor
icebp
mov
call
adc
test
jecxz
inc
pop
push
test
cld
cmp
push
scas
adc
push
mov
mov
push
inc
out
mov
mov
js,pn
jg
cmp
xchg
rcrl
shlb
cmp
lahf
fsubrl
shl
or
lcall
or
imul
mov
jo
cmp
xlat
jne
faddp
out
ficoms
jo
repnz
in
adc
fs
outsb
imull
jge
leave
ds
cmp
push
cmp
pop
cmp
pusha
or
sub
lock
fmull
jne
xchg
int
jns
das
fcomps
cmpsb
out
sub
test
subb
adc
xlat
and
inc
ds
and
pusha
test
aaa
sub
pusha
xchg
inc
pop
cmp
and
pop
ret
daa
movsl
fstpl
push
lods
call
scas
and
pop
and
rcl
jb
test
lcall
jl
shl
out
in
mov
adc
sub
inc
test
push
in
mov
push
fdivs
adc
and
fidivrl
movsb
mov
lea
xchg
jns
push
jp
sbb
add
pop
jecxz
cld
push
pop
or
cmp
pop
aad
shl
sub
mov
cmp
fwait
mov
jg
sub
mov
push
pushf
rcr
pop
sub
les
rorb
jo
jnp
ficoms
mov
outsb
sub
push
cwtl
jns
mov
inc
jmp
cmc
fisubrs
jb
rolb
cli
das
imul
ret
outsl
divb
cmpsb
fisubrl
adc
bound
cmpl
call
leave
xor
fwait
mov
or
or
orl
inc
andb
fwait
ss
push
push
rcl
cli
into
outsl
cmpsl
test
hlt
scas
pop
fs
ret
adc
imul
sub
les
push
inc
pop
cmp
dec
fists
aad
dec
add
rcrb
xor
mov
lcall
xor
in
into
daa
push
incl
adc
fildll
daa
imull
js
sbb
or
repz
xchg
test
aas
cmp
xor
mov
mov
outsl
cltd
inc
nop
clc
iret
sbb
sub
out
les
jle
jge
je,pn
ljmp
jmp
ret
xor
in
ja
fucomip
out
lret
lock
repz
xchg
or
add
push
mov
pop
pusha
push
out
fistpl
pushf
outsl
cmp
xlat
test
jae
das
adcl
mov
mov
sbb
inc
add
ss
test
lods
cltd
popa
inc
dec
mov
sub
inc
pop
mov
jge
cmc
fisubrs
aas
push
je
dec
pop
stc
cld
sub
out
hlt
mov
xchg
lods
mov
jl
mov
sub
inc
lret
cmp
dec
ds
mov
fs
loope
jo
fcoml
iret
mov
lret
cmp
add
lea
xchg
ds
ficoms
adcb
ret
int
aad
mov
cmp
add
push
mov
dec
adc
lret
mov
mov
xchg
bound
or
ror
xor
aad
jns
sub
and
xchg
popf
ficoml
in
pushl
std
fistps
cmpsl
sub
mov
scas
das
stos
sbb
out
push
rorl
movsl
icebp
or
or
out
jmp
adc
mov
cld
leave
hlt
push
das
xchg
adc
daa
sbbl
in
movsb
icebp
lods
mov
std
movsb
inc
jne
cmpl
sti
test
ret
mov
sbb
lcall
in
js
push
in
cmp
in
mov
adc
mov
rclb
cld
loopne
lea
adc
inc
xor
subl
cmp
dec
leave
xorb
cld
imul
popa
ds
adc
stos
insb
fcmovnbe
sub
stc
fs
cmc
orl
cmp
inc
scas
pop
cmc
adc
pop
shrb
test
popa
js
sbb
sbb
dec
insl
pushf
and
xchg
and
sbb
dec
in
add
adc
daa
pop
repnz
ror
aam
jnp
ljmp
jg
rcl
inc
iret
jo
mov
sar
insb
fidivrl
mov
pop
cltd
dec
sahf
and
inc
cmc
cmc
adc
fdivl
scas
fsubr
inc
int3
jne
xchg
pandn
jnp
mov
xchg
data16
pop
cmp
mov
shlb
in
jg
in
pop
mov
adc
sbb
test
adc
fdivrl
xchg
aaa
adc
loop
pop
cmp
gs
xor
sbb
aad
cmp
cmp
jle
adc
sub
lods
mov
jle
addr16
add
cmp
sarb
pop
jbe
lret
pusha
repz
mov
xor
xchg
jae
lcall
in
and
in
aaa
fdivrl
das
jne
sub
jne
ja
popf
sbb
fwait
adc
sbb
xor
lock
mov
inc
pop
dec
out
add
repnz
mov
nop
inc
cld
jecxz
jnp
jb
cmp
push
xchg
xor
mov
adc
mov
stc
cmc
mov
pop
mov
ficoms
das
mov
inc
xchg
and
push
push
mov
popa
cmp
sub
push
inc
ret
or
and
push
test
cmpsb
cwtl
sbb
int
sahf
pop
xlat
ds
popf
and
fidivrl
mov
mov
add
ret
mov
xchg
xchg
inc
mov
loopne
or
push
flds
sbb
frstor
xor
or
subb
clc
cmpsl
jno
ss
pop
call
mov
repz
xchg
cmp
mov
jno
cmpsl
loop
sbb
mov
dec
xchg
mov
in
fsubrs
xchg
lds
jnp
and
sahf
icebp
pop
stos
mov
pop
shll
jp
hlt
dec
arpl
cmp
cmp
out
mov
addr16
or
out
repz
adc
sub
jnp
pop
xchg
out
adc
fdivrp
out
pop
pusha
inc
shrb
jne
push
mov
subb
and
add
push
cmpsb
or
cmpsl
inc
cwtl
xchg
loope
and
mov
push
mov
add
xchg
jnp
sub
bound
push
and
adc
push
mov
xor
mov
repz
mov
test
fisubrs
mov
lahf
andl
inc
mov
lds
ret
scas
pop
adc
fdivrl
pop
push
adcb
adc
jbe
sar
pushf
mov
ret
add
dec
sub
mov
adc
stos
sbbl
adc
adc
push
push
iret
jae
daa
movsl
sbb
pop
jbe
adc
fmull
mov
inc
adc
cs
jo
in
jecxz
daa
test
repnz
jl
sbb
or
dec
jecxz
mov
jne
or
sahf
or
es
sbb
mov
add
dec
push
test
pop
loopne
loope
sub
sub
sub
sub
sti
outsb
daa
mull
and
test
scas
inc
insl
unpckhps
sarb
xchg
xchg
mov
inc
dec
mov
jmp
aam
mov
fiadds
adc
jmp
and
add
call
fisubrl
cmp
jns
lahf
push
addl
adc
cltd
xor
in
jnp
push
inc
sub
adc
xchg
ja
mov
and
out
enter
movsb
push
mov
xchg
rclb
and
dec
jae
jp
xor
int
ss
xor
jo
into
stos
push
shll
pop
ret
std
outsl
dec
xchg
push
adc
inc
ret
call
mov
repz
sub
mov
into
inc
shrl
push
cmp
dec
imul
ja
mov
xor
fistps
jecxz
push
jne
hlt
out
push
jge
add
mov
nop
lret
dec
addr16
insb
les
dec
adc
dec
adc
push
aad
dec
dec
dec
pushf
mov
pushf
pop
fldt
pop
out
out
push
imul
cmp
jnp
xchg
fcmovnu
adc
test
cmpl
scas
dec
xchg
cmp
inc
hlt
insb
adc
or
inc
cmc
xchg
jo
lods
adc
push
cmpsb
jno
push
clc
pop
fucomip
mov
lea
test
sbb
fists
push
imul
mov
insl
js
push
subb
lock
pusha
and
pop
push
repnz
and
pop
mov
mov
xor
cmp
lahf
cli
stos
add
mov
inc
lds
out
xchg
xchg
cmpsl
in
fsubrs
jb
pop
aas
and
inc
add
add
ss
mov
adc
outsl
inc
push
xchg
dec
jp
or
or
bound
sub
fnstcw
stc
fnstenv
xor
fimuls
fisubrs
pop
ficompl
out
jnp
jecxz
pop
dec
shrl
rclb
mov
ja
out
pop
jno
pushf
popf
xchg
scas
dec
and
xor
iret
js
lahf
cmp
pop
test
mov
pop
xor
fidivrl
in
pushf
xor
adc
xchg
je
addl
and
or
ljmp
mov
rclb
loope
js
call
out
cmc
cmp
push
leave
ret
nop
inc
repnz
jle
jmp
aam
push
xchg
std
lods
add
push
and
jl
in
aaa
ret
test
sub
shlb
insl
mov
loopne
in
test
aad
ror
enter
mov
test
fwait
pop
dec
outsl
fsubrs
cltd
and
or
inc
dec
xor
cmc
mov
fwait
bound
xorl
out
es
cwtl
dec
mov
dec
xchg
add
pushf
adc
mov
ja
mov
lock
xlat
sbb
in
inc
or
loopne
test
xchg
sarl
ret
or
sub
repnz
mov
fimull
sahf
inc
xchg
adc
push
mov
cmp
add
pop
add
sti
xchg
mov
test
in
mov
lcall
ror
and
sti
pop
cmp
pop
jmp
dec
push
test
mov
dec
dec
xchg
scas
decl
ret
rorb
scas
xlat
mov
xor
fs
daa
popf
bound
inc
push
cmpsb
mov
inc
test
mov
mov
testb
inc
fsubrs
and
mov
pop
cmp
dec
out
jne
mov
xlat
xlat
aad
cmpsl
inc
mov
pusha
loop
and
js
and
jb
pop
enter
rcr
mov
in
call
mov
mov
call
jg
cwtl
xchg
jbe
pusha
test
add
push
aaa
xor
insl
push
cmc
fs
inc
ret
cmp
aas
xlat
mov
xchg
sbbb
jge
negl
mov
outsb
pushf
test
scas
cld
aam
cmp
push
or
mov
repz
jne
jp
jns
cmp
cli
mov
xor
mov
clc
das
cmp
sbb
push
xchg
fidivl
sti
and
cmp
arpl
dec
in
clc
hlt
cmpsb
xlat
imul
inc
ds
pop
mov
push
stc
sahf
mov
xchg
test
lcall
dec
je
xor
dec
or
mov
push
mov
adc
ljmp
xchg
aam
jno
xor
dec
inc
lret
push
pusha
bound
and
outsl
mov
sub
inc
xlat
js
jecxz
lcall
push
jg
or
jmp
xchg
or
test
ds
fldenv
out
mov
xchg
in
out
dec
mov
dec
xor
stos
inc
adc
jbe
jns
jle
decl
mov
pop
mov
lock
sahf
mov
pusha
xor
dec
jge
adc
daa
dec
pop
fists
inc
fisubrs
fdivs
mov
inc
es
das
ja
adc
mov
adc
inc
notb
rolb
scas
lods
dec
add
adc
pop
ss
jl
aad
pop
mov
mov
push
hlt
sub
insl
movsl
icebp
scas
test
cli
icebp
notl
out
ror
icebp
cmc
mov
push
mov
movl
jne
ja
test
dec
out
and
leave
push
push
push
mov
cmp
das
cmpsl
jle
mov
push
and
popf
jg
dec
fmull
sti
push
pop
rolb
pop
rorl
dec
pusha
pop
scas
mov
mov
rolb
in
int
int
out
adc
mov
fstpl
jp
lea
fadds
push
add
stc
out
arpl
mov
sub
cmp
xor
ss
push
add
stos
xchg
add
add
mov
xorb
xchg
out
push
test
xchg
xchg
mov
test
aam
mov
sub
lods
iret
mov
and
mov
divl
dec
stos
push
popa
xlat
xor
inc
lcall
jl
dec
cli
cmp
inc
inc
adc
xor
inc
in
in
cmp
rcrl
sub
mov
test
cli
jp
out
shrb
sarl
sub
lret
inc
enter
out
cmpsb
rcrb
in
imul
jnp
and
cmpl
jg
dec
adc
add
adc
pop
test
loop
mov
pop
mov
scas
jb
xchg
jne
or
lock
pushf
add
cld
lods
leave
jb
mov
test
pop
pop
cmpsb
mov
sub
stc
or
push
repz
mov
adc
je
aas
mov
sbb
push
mov
xor
cmpsl
mov
test
sbb
xchg
fnstsw
das
int
rorb
int
xor
nop
mov
dec
push
mov
out
daa
out
pop
cs
insb
adc
mov
adc
insl
repz
in
ljmp
pop
lcall
sar
ss
inc
bound
jb
test
push
ret
adc
imul
out
and
dec
imul
insb
popf
sub
jg
pop
popa
outsb
arpl
adc
scas
lcall
int
jbe
cmpsl
mov
std
into
cmc
fldt
fndisi(8087
xchg
xchg
icebp
mov
fisubrl
sub
push
jne
mov
incl
cmc
call
clc
push
jbe
push
dec
stos
jle
cltd
out
mov
out
mov
jg
sti
push
and
rolb
into
out
pop
cmpsb
mov
adc
aaa
icebp
or
nop
popa
jp
jl
into
pop
rcl
inc
stc
mov
in
xchg
js
fsubrl
inc
std
clc
inc
jge
test
jg
addl
ss
mov
aaa
xorb
or
decb
add
lcall
pop
imul
hlt
adc
ljmp
pop
push
arpl
lret
lret
sub
xor
jp
lods
xor
fidivs
pop
nop
lcall
xchg
jbe
push
adc
xor
pop
and
jo
jl
divps
xchg
jmp
arpl
sbbb
out
in
ret
dec
mov
jmp
pushf
or
arpl
mov
test
inc
fwait
data16
jg
inc
mov
mov
loope
and
sub
lahf
popa
rcll
lret
insl
and
sbb
dec
jb
jecxz
stc
pop
add
xor
cli
imul
jae
ljmp
push
push
mov
or
mov
fs
inc
xlat
dec
pop
add
and
sahf
outsb
fidivrs
xchg
mov
sahf
mov
jmp
xor
je
add
sub
push
pop
bound
jbe
fwait
cmovno
or
jno
push
jbe
pop
inc
fildl
or
popf
sub
mov
xchg
daa
cli
ds
ss
lcall
ret
or
iret
sti
mov
loop
les
add
mov
and
int3
lock
mov
inc
adc
setg
loopne
pop
movsb
lock
enter
xor
dec
push
and
or
push
aad
cwtl
cmp
jmp
or
test
orb
stos
rep
inc
add
dec
insb
ret
push
or
mov
jnp
mov
sahf
xor
subb
adc
add
lock
adc
fdivl
push
aaa
or
into
out
shl
pop
mov
mov
and
jno
lods
jmp
adc
xorb
push
je
out
punpckldq
lahf
aas
pop
mov
loope
cmp
pop
or
pop
add
loop
lds
dec
xchg
lret
out
adc
aad
rcrl
mov
push
jmp
out
rorb
mov
and
fwait
mov
inc
jo
mov
jno
je
or
adc
mov
xchg
test
idivl
lahf
mov
orb
outsb
mov
mov
and
and
mov
dec
ja
jo
push
out
cmpsl
adc
test
xchg
cmp
idivb
mov
dec
push
sbb
stos
push
dec
dec
jbe
imul
adc
shlb
test
jge
sub
pop
hlt
xor
xlat
pop
ror
mov
inc
mov
mov
pusha
jg
rclb
dec
ret
or
jg
pop
ret
insb
rolb
mov
out
outsb
jo
xor
pop
pop
xor
xchg
push
cs
jae
arpl
adc
das
pop
xchg
jae
lret
push
lods
cli
jo
into
ljmp
daa
or
movsl
jge
mov
enter
ja
cmc
dec
insl
inc
das
dec
in
cmp
sub
dec
cmp
and
fs
jbe
sbb
push
fmuls
sbb
shll
fwait
ljmp
fistl
decl
outsb
les
pop
xor
stc
cs
dec
cwtl
stos
xchg
test
dec
addr16
enter
fsub
and
stc
pmaxsw
andb
icebp
xchg
inc
sti
outsb
stc
jbe
in
dec
inc
lahf
fcomps
and
fisubl
sbb
mov
add
aad
pop
jle
fisttpll
jbe
ljmp
ljmp
pop
xor
aaa
clc
loope
dec
popl
inc
jno
mov
pusha
loop
mov
or
and
push
aaa
dec
inc
cmpsb
imul
pop
idiv
add
push
lret
mov
xchg
ss
xchg
and
dec
das
xor
and
pop
mov
fsubr
mov
mov
out
cmp
xchg
rolb
push
jl
add
jnp
or
iret
jp
into
repz
adc
je
sti
repz
pop
lahf
mov
lods
pusha
lods
pop
push
dec
cmc
push
pop
sub
or
iret
incl
inc
sub
outsb
addb
dec
add
jl
int3
pop
adc
pop
fstpt
cltd
jg
imul
popa
sub
outsl
icebp
scas
add
xchg
je
adc
mov
mov
fwait
sub
je
push
push
pop
rolb
push
pop
sahf
out
push
and
pusha
out
lds
xchg
xor
sarl
dec
inc
cli
cmp
xor
pop
add
mov
dec
pop
les
jnp
test
sub
jl
je
cmp
nop
es
daa
lods
add
aaa
rolb
sbb
mov
cld
insl
sub
pusha
ja
sub
loopne
cli
jle
xchg
cmp
je
in
data16
push
jecxz
sbb
mov
sub
cmp
push
cmc
ret
mov
mov
mov
call
mov
popf
xor
repnz
iretw
pop
mov
cmp
lret
fst
xchg
insb
mov
out
jl
xor
mov
add
js
stos
clc
rorl
es
mov
jnp
and
frstor
in
xor
fstpt
lahf
pop
cs
imul
gs
addr16
loop
sub
loopne
cmp
adc
push
push
pop
jae
std
jb
dec
push
pop
cltd
pop
xchg
jl
fisubrl
push
fidivrl
mov
sub
add
pop
int
bound
leave
xchg
pop
adc
jae
xor
stc
jne
arpl
mov
gs
push
adc
xlat
xchg
or
stos
mov
inc
mov
xor
lods
mov
dec
cmp
jae
push
add
cmpsl
rolb
data16
jg
int
xor
push
out
fst
imul
mov
push
add
repnz
popl
imul
dec
into
cmp
scas
adc
or
inc
ss
push
pop
leave
jbe
lock
in
daa
mov
push
inc
test
mov
sbb
test
aam
or
mov
pop
test
divb
cmp
push
ss
nop
push
cli
rcrb
mov
mov
or
pop
int3
loop
sbb
or
ret
jle
inc
and
mov
pop
int
cmp
jl
mov
das
inc
push
push
sbb
inc
in
and
call
jle
pop
jae
arpl
fwait
test
or
lds
jg
ret
mov
xchg
outsl
push
mov
add
and
hlt
cmp
mov
nop
sbb
xchg
sbb
mulb
jge
movsl
movsb
mov
cwtl
or
mov
and
xchg
mov
pop
stos
mov
push
push
adc
inc
fiaddl
pop
xchg
push
push
fdivrs
cmpsl
out
int3
cld
dec
scas
rcl
mov
sti
jne
xchg
push
sub
sbb
popf
push
mov
arpl
dec
cmp
out
leave
sub
ret
dec
mov
mov
push
jno
dec
push
sub
mov
inc
xchg
cwtl
ret
push
lahf
cltd
mov
jecxz
pop
idiv
jns
roll
pop
adc
mov
mov
push
xlat
or
shrb
insb
push
pop
lret
dec
mov
cmp
loop
outsb
cltd
push
les
clc
sbb
xchg
mov
loopne
xchg
or
adc
outsb
add
mov
icebp
add
mov
jno
inc
ret
jge
nop
lock
js
hlt
nop
inc
mov
inc
push
int3
fistps
sbb
sbb
dec
and
lods
xchg
imul
or
outsb
hlt
xlat
loop
lods
and
sbb
mov
dec
out
mov
in
into
jb
in
rorb
add
gs
out
pop
out
shll
repz
das
push
mov
or
jo
mov
and
nop
jle
add
in
repnz
mov
jl
pop
fs
addr16
mov
xor
mov
scas
aad
test
or
rolb
mov
dec
int3
mov
cli
sahf
loopne
adc
dec
sub
pop
dec
imul
ret
mov
mov
cmp
push
dec
bound
jecxz
ds
loope
outsl
insl
sbbb
inc
daa
dec
fsubrl
push
xor
or
mov
jl
or
inc
cmp
daa
mov
or
push
imul
or
cmpb
inc
mov
out
cld
ds
adc
sub
rol
mov
or
adc
jg
loopne
dec
jno
ret
cmpl
test
or
push
aam
add
subb
jne
jle
sbb
cmp
xor
hlt
in
add
mov
jp
add
aam
cli
movsl
mov
sub
xchg
lahf
into
roll
shl
mov
push
fmul
jg
call
push
scas
adc
jns
adc
push
adc
pop
aam
or
aam
pop
push
mov
addr16
sbb
xchg
pop
leave
clc
mov
stos
mov
xchg
sbb
jae
pop
inc
push
fildl
dec
add
dec
jecxz
pop
shlb
hlt
das
adc
push
in
mov
lret
cmp
xlat
sub
mov
inc
add
dec
mov
test
jnp
test
roll
mov
arpl
sbb
lret
icebp
mov
push
xadd
adc
inc
cmp
inc
aas
daa
mov
loopne
aam
and
icebp
out
sub
push
mov
cmp
pop
mov
inc
loopne
outsl
add
jne
gs
mov
jnp
call
sets
loop
push
sub
sub
jmp
xor
cli
mov
les
mov
lods
xchg
sub
loope
scas
fildl
in
mov
push
push
sbb
sub
add
ljmp
mov
sahf
mov
imul
sarb
sub
sbb
sarl
aaa
or
stc
fstps
add
jle
inc
push
lods
cmp
lds
aam
dec
mov
es
add
cmp
aad
adc
inc
fmul
mov
push
add
int3
in
out
jmp
daa
mov
xchg
arpl
rcll
insb
stos
push
and
insl
ss
les
lret
push
out
mov
xor
or
ljmp
popw
cmp
lods
movsb
push
mov
push
ficoms
xchg
or
scas
aam
sbb
in
push
jbe
add
outsl
xchg
rcr
out
data16
lret
add
scas
addr16
iret
mov
stc
sbb
pusha
pop
and
add
mov
pop
ret
push
mov
mov
lahf
iret
adc
arpl
cwtl
mov
mov
ja
xor
xor
lods
mov
lods
dec
pop
adc
adc
test
sub
ss
or
inc
inc
scas
sbbl
scas
mov
ret
mov
xor
and
push
or
xor
daa
test
shll
ja
add
std
int3
push
out
jecxz
and
or
aam
outsl
movsb
cwtl
push
mov
lods
imul
mov
nop
jb
and
pop
insb
aas
jecxz
jp
data16
push
loope
cli
xchg
mov
mull
push
aam
dec
dec
sub
mov
cld
out
jle
jmp
lret
stc
xchg
iret
mov
adc
addl
pop
pushf
pop
push
pop
test
jecxz
aas
jg
imul
mov
lods
adc
cmc
dec
loop
loop
inc
jg
cmpsb
and
fistpl
jnp
insl
xor
popf
sbb
lret
nop
test
push
int
data16
rol
out
mov
adc
mov
push
adc
out
or
outsl
cmp
fbstp
lcall
or
inc
push
adc
sbb
xor
cmp
decl
mov
xor
ljmp
add
aad
xchg
mov
pop
fnstsw
imul
ret
fimuls
push
icebp
les
push
cmp
dec
sub
xchg
fistpl
sbb
jg
daa
mov
xlat
jecxz
cs
sarl
pop
push
shl
adc
xchg
xlat
mov
dec
or
push
push
add
inc
mov
dec
jle
cmp
mov
stos
lock
sub
subb
mov
in
sub
add
stos
xlat
das
popa
mov
lcall
mov
jg
add
fisubs
pop
jnp
jmp
outsl
ljmp
mulb
adc
scas
jg
in
mov
ds
ret
orl
nop
pop
pushf
cmp
push
sub
xor
aam
mov
mov
adc
mov
icebp
xchg
insb
cmp
ss
inc
xor
ss
mov
inc
fwait
sti
pushf
ret
lret
leave
jle
jne
or
xchg
xor
cmp
xor
pop
mov
jp
push
mov
mov
std
icebp
iret
int
and
push
mov
fisttpl
xchg
xlat
or
fdivl
sti
add
xor
sbb
lods
sti
mov
mov
aaa
movsb
or
pop
stos
les
and
mov
addb
inc
in
pushf
movl
pop
clc
dec
jae
push
mov
adc
stos
femms
inc
sbbl
lods
sbb
add
in
or
cmp
push
dec
adc
add
push
scas
fwait
ret
arpl
and
sbb
sub
imul
loopne
ss
test
scas
imul
fiadds
mov
sbbb
jp
jge
movsb
push
imul
mov
sbb
int3
jmp
mov
data16
pop
addr16
test
sbb
add
sub
push
divl
sub
mov
add
adc
mov
push
lods
dec
and
jmp
push
mov
xor
fldenv
pop
lret
cmpsb
into
mov
mov
inc
clc
not
push
das
add
mov
and
aas
xlat
or
xor
fsts
aam
cwtl
adc
inc
fwait
imul
into
fnstcw
push
jle
nop
test
add
outsl
dec
cmp
xchg
cmpsl
arpl
dec
mov
out
mov
shrl
sub
jl
inc
scas
pop
mov
mov
xchg
push
xchg
jmp
jl
lcall
imul
inc
ljmp
das
imul
mulb
cwtl
filds
mov
std
inc
xor
cmp
mov
out
aad
adc
and
cltd
stos
subl
ds
xor
xor
sbb
fidivrs
jne
leave
aas
sahf
insl
push
pop
and
xor
mov
add
insb
call
cmpsb
imull
push
fisubrl
adc
mov
fdivl
insb
ja
fwait
negb
cs
dec
mov
dec
pop
inc
add
and
shll
jns
sahf
xor
sbb
stc
cmp
fs
adc
mov
sub
pop
mov
cs
pop
cmp
loope
add
mov
cmpsb
outsl
add
jno
add
mov
jp
mov
imulb
sub
or
mov
fwait
xor
in
and
push
sbb
mov
cmp
xor
popf
cwtl
cwtl
notl
lods
push
or
adc
add
add
out
inc
popf
iret
sub
push
jnp
es
out
stos
dec
jbe
arpl
sbb
cmp
outsl
inc
push
dec
repz
mov
ret
inc
dec
pop
sbb
stos
pop
jno
xor
jae
cld
pop
xchg
pop
aad
adc
push
das
inc
pop
cwtl
xchg
xchg
lock
and
adc
xchg
insl
mov
js
adc
mov
cld
iret
add
hlt
pop
xor
sbb
pop
jo
mov
add
dec
xor
lods
xor
adc
ss
pop
dec
clc
sbbb
jno
sbb
pop
sbb
popf
mov
mov
fbstp
jbe
inc
xor
out
xchg
cs
mov
lea
sub
cmpsb
ret
add
and
stc
cmc
adc
push
push
adc
add
and
jnp
out
insl
rcll
dec
mov
pop
int
divl
lods
andb
inc
mov
shrl
data16
in
sub
das
fisubs
int
pop
cmp
adcl
pop
xorb
jnp
or
dec
jle
mov
add
inc
in
scas
cltd
int
jmp
enter
test
pusha
xchg
or
leave
or
lret
and
push
mov
pushf
add
sbb
lock
mov
lret
mov
adcl
sub
jle
pop
stos
mov
pusha
scas
cs
stc
xlat
inc
push
inc
es
mov
dec
sbb
xchg
xor
xor
pop
sub
sub
loope
int3
jg
pop
adc
popa
out
loope
mov
jg
and
push
xchg
inc
xor
fs
fdivrs
jecxz
cli
js
dec
lock
add
mov
bound
jmp
add
xchg
addb
pop
icebp
lock
loop
ljmp
loop
addr16
in
inc
fs
inc
mov
cmc
adc
cmp
or
push
xor
inc
rcrl
jo
mov
incl
xor
add
jle
mov
or
jg
mov
add
inc
push
push
popa
push
xchg
pop
and
pop
adc
shl
dec
out
scas
sub
adc
rcr
inc
int
cmp
lret
push
cmp
mov
dec
in
int3
inc
mov
movl
call
jo
popf
out
shl
lds
cltd
ljmp
loope
inc
pop
jno
test
imul
push
mov
pop
dec
mov
push
pusha
js
daa
in
or
mov
cmpb
mov
inc
stos
add
sub
rcrb
push
js
pop
sti
sbb
ret
loopne
iret
lcall
pop
xlat
ljmp
outsl
pop
push
inc
std
inc
sub
addr16
mov
adc
or
imul
movsb
mov
mov
xor
push
inc
pop
sbb
and
inc
pop
lods
negl
inc
lcall
outsl
mov
cs
out
rcrl
std
repnz
sarl
fdivs
pop
lods
shrl
sbb
xor
fcoms
cmc
andl
lods
push
les
aad
paddsw
out
mov
sbb
jno
loop
loop
test
sub
rorl
rorl
add
xchg
xchg
adc
xchg
subb
xchg
fs
xchg
cmp
push
push
flds
lret
push
sbb
aas
stos
movsb
jmp
jns
add
push
pushf
add
sub
lods
cmp
mov
aas
lock
push
iret
mov
mov
stos
or
sbb
jmp
sub
add
jns
lea
jl
xor
loope
pop
notb
mov
jg
iret
out
or
sub
sub
pop
sbb
movsb
lahf
sar
mov
popf
dec
mov
out
push
mov
call
movsl
cmp
lds
xor
sarl
cmpsb
cld
xchg
dec
into
dec
sahf
cmp
movsl
or
sub
cmpsb
test
xchg
pop
dec
pop
mov
cmpsl
jbe
pop
mov
das
push
xorb
clc
data16
filds
aam
xor
cld
mov
enter
add
fcoml
aaa
repz
ret
push
stos
and
shll
pop
mov
mov
aas
inc
pop
lock
into
rcrl
lahf
and
fldl
pop
pop
out
aad
xchg
cmp
jns
call
push
dec
dec
hlt
xchg
push
mov
lods
es
inc
push
iret
pop
roll
xchg
mov
ss
inc
cmpsl
xlat
jle
lods
dec
int3
cld
jg
imul
or
sbb
adc
dec
lds
in
lahf
dec
jbe
ss
add
or
add
repnz
arpl
dec
push
insl
cmp
test
out
adc
inc
mov
lea
mov
inc
in
leave
imul
popa
push
sub
stos
cli
fimuls
push
xor
test
loop
inc
pusha
mov
or
pop
adc
sub
pop
push
push
jne
sub
dec
into
cmp
fldenv
lock
mov
fwait
jp
iret
push
popf
jb
add
xlat
in
dec
jae
pop
cmpsb
cmpsb
adc
lcall
xchg
xchg
dec
iret
or
dec
repnz
ret
or
dec
lods
fisttpl
cmp
jno
or
std
lock
pop
cmp
xchg
mov
das
lret
jg
lcall
lahf
ljmp
mov
leave
mov
out
loop
lock
xchg
orl
adc
cmpsl
sub
andl
xchg
lret
testl
in
push
mov
fiaddl
insb
mov
pop
gs
int3
cmp
add
adc
adc
sahf
cmc
inc
addr16
and
ret
int
sti
and
andl
sbb
push
push
push
or
mov
add
xor
push
in
out
jg
aam
lret
push
jns
daa
lds
sbb
rcrb
add
in
sbb
iret
loopne
aas
cwtl
sbb
cmpsb
mov
fistps
icebp
popa
add
fisubrl
pop
sbb
pusha
cmp
push
mov
push
inc
in
cmpsl
rcrl
pop
fsubrl
cmpsb
inc
jbe
fdivl
in
pop
inc
dec
push
gs
jo
dec
xor
cmp
xchg
aam
and
cmpsb
xchg
stos
into
and
sarl
xchg
ret
or
and
pop
shll
int3
jecxz
adc
jl
bound
sbb
push
inc
call
mov
inc
movsb
negl
and
add
ror
mov
daa
mov
adc
addb
or
pop
test
popf
xor
sbbb
xor
cmp
imul
dec
scas
test
xchg
cmp
push
mov
jnp
orb
mov
sbb
pusha
xorb
test
xor
xchg
daa
cmc
faddl
stos
xor
inc
bnd
sbb
sbb
pushf
data16
arpl
jne
cmp
jge
xor
dec
cmp
mov
es
rclb
aaa
sub
pushf
inc
aaa
adc
icebp
or
loope
clc
and
scas
pop
lods
dec
cmpl
and
icebp
xchg
adc
inc
add
inc
scas
mov
ficoms
xchg
xor
lahf
xchg
mov
stos
fdivrs
icebp
enter
xchg
cs
sbb
lock
inc
pop
jne
aad
dec
inc
test
jb
cmpsl
cmpl
dec
aad
xchg
loope
pushf
inc
dec
adc
stc
xor
push
mov
or
rcrb
xchg
pusha
push
push
mov
push
popf
or
sub
cmp
xor
sti
inc
sbb
xchg
xlat
sbb
cltd
or
loope
stos
cmp
popa
enter
insb
mov
and
jbe
xor
in
xor
lea
push
mov
rolb
or
call
mov
jbe
adc
je
mov
fsubs
sti
dec
rorl
add
inc
lods
mov
jg
rolb
jae
pop
ljmp
adc
fcmovu
lods
into
cmp
mov
repnz
adc
and
mov
testl
xorps
dec
int
xor
jle
sbb
fwait
bound
inc
cmp
dec
xchg
cmp
movl
loop
pop
dec
insl
shl
in
divb
ljmp
fcmovnbe
nop
or
push
sbb
ljmp
fisttps
mov
sbb
push
push
and
cmp
xchg
mov
xlat
cmp
out
inc
movsl
or
into
test
xor
pop
daa
mov
mov
leave
xor
sub
popf
dec
icebp
dec
inc
nop
mov
xorb
and
jae
cltd
scas
inc
loopne,pt
and
mov
data16
mov
add
xor
mov
icebp
adc
mov
xor
and
imul
add
rcll
adc
daa
dec
mov
sub
imul
mov
mov
popf
xor
outsb
lods
fs
push
mov
sbb
pop
jnp
lock
stos
in
insb
pop
mov
hlt
aaa
push
or
imulb
xchg
xchg
inc
outsl
push
scas
andb
scas
lahf
xor
cld
mov
xchg
add
mov
cld
lods
out
outsb
adc
sub
jle
das
testl
and
movsb
negb
pop
jp
dec
fdivrp
sahf
mov
push
ret
jmp
cli
mov
ret
aad
dec
pop
js
cwtl
sub
jbe
addl
ljmp
stc
lods
dec
scas
data16
push
sbb
dec
aam
mov
addb
test
pop
test
repnz
or
jmp
ds
rclb
sti
addl
adc
jmp
scas
mov
xchg
mulb
cmp
and
xchg
jno
mov
or
sahf
imul
out
mov
pop
jecxz
fdiv
movsb
xchg
mov
shrl
mov
into
aaa
in
ljmp
lahf
dec
mov
loop
scas
xor
push
adc
cs
adc
cmp
inc
loop
rorl
hlt
jg
sbb
bound
xor
pop
mov
push
repz
in
insb
dec
jo
fcompl
jnp
jmp
fwait
mov
or
mov
loop
hlt
ss
shlb
out
test
pop
or
sbb
mov
add
ja
enter
adc
push
insb
sub
dec
mov
mov
and
imul
cltd
sub
cmp
addr16
sub
lcall
adc
mov
daa
push
std
or
je
inc
aam
dec
aas
das
imul
cld
sbb
xchg
xchg
lods
xor
in
push
dec
dec
daa
mov
fidivrs
mov
pop
rcll
push
push
pop
inc
mov
ja
enter
jp
ljmp
jp
adc
in
and
jmp
sbb
cmp
push
sbb
cmp
out
int
inc
call
pop
pop
in
ja
or
mov
inc
jo
mov
fcompl
std
movsl
pop
aaa
mov
aaa
fcmovb
jne
pusha
aad
scas
aaa
pushf
add
in
pop
decb
jl
or
orl
cmp
ret
sbbl
les
xchg
sbb
fwait
cmp
mov
cmc
cmpsb
aam
les
js
push
xor
or
push
mov
test
enter
pop
ljmp
xchg
icebp
jp
clc
adcb
aaa
pushf
dec
not
mov
inc
or
movsl
inc
cmpb
push
pop
pop
leave
adc
xchg
adc
pop
xor
cmpsl
lds
add
dec
push
negb
out
and
aas
add
sub
jle
mov
push
test
fidivrs
xor
cmp
repnz
jb
sbb
je
stos
ds
fwait
mul
jno
lods
movsl
adc
pinsrw
bound
and
in
xor
lret
bound
arpl
cwtl
dec
dec
mov
and
addr16
std
aaa
xor
push
push
xchg
fisubs
adc
subb
sbb
sahf
inc
shrl
sbb
nop
xchg
mov
sub
lret
xor
in
push
or
mov
mov
aad
aad
imul
jnp
mov
xlat
jg
dec
xchg
js
dec
mov
jnp
gs
data16
mov
out
xor
jle
andl
test
pop
push
inc
mov
clc
xchg
stos
cmc
aam
fisubrl
xlat
aaa
lret
es
sub
enter
add
mov
fnsave
inc
jnp
mov
packuswb
sbb
jo
mov
pop
data16
push
test
aam
push
sbb
insb
sbb
stos
xchg
sbb
mov
aas
dec
and
dec
test
dec
or
sbb
cwtl
in
xchg
mov
xchg
pop
imul
xchg
fildl
cmpsb
hlt
xchg
lahf
cmpl
push
push
sub
xor
push
xchg
outsl
inc
addr16
sbb
bnd
lock
jl
repnz
push
fsubp
jge
je
sbb
mov
ljmp
pop
dec
into
mov
cmp
add
test
or
mov
jae
push
sti
sbb
das
mov
nop
scas
cmpsb
out
nop
cmc
lods
add
fwait
insb
push
nop
fisttpll
sub
and
test
inc
jecxz
inc
mov
pop
inc
sub
ss
or
and
in
or
fsts
pop
loop
aaa
inc
or
ljmp
jp
inc
and
pop
cltd
adcl
adc
and
inc
aas
xchg
add
sbb
sbb
mov
mov
dec
in
or
xor
les
xchg
push
inc
jnp
or
ss
imul
int3
mov
push
and
rorl
fistl
jne
int
mov
xor
sub
cmc
xchg
cmp
pusha
roll
cli
loope
xchg
jl
enter
xor
push
mov
rolb
jg
fsubrl
mov
arpl
cmpsl
outsb
popa
mov
pop
push
rolb
divb
cmp
inc
adc
stc
frstor
arpl
adc
mov
out
pop
lds
imul
dec
pop
cmp
sbb
or
push
lock
pop
cmc
insl
jl
push
hlt
fsubs
es
xchg
repnz
inc
sbb
popf
sub
lret
xchg
jbe
test
push
rcrb
rcr
repz
dec
jmp
mov
les
ds
decl
cmpl
mov
jnp
insb
cmp
data16
jmp
mov
int3
es
pop
or
out
js
stos
nop
into
aad
stos
ret
sub
loope
lods
mov
inc
xorl
dec
outsl
test
mov
test
stos
mov
popa
mov
lods
or
pop
iret
cmp
test
loopne
lea
icebp
cmp
mov
lcall
enter
addl
je
xchg
xchg
dec
inc
cmp
dec
xor
jmp
cmpsl
or
movsl
inc
hlt
mov
sbb
out
xor
movsb
cmp
scas
dec
sub
mov
dec
inc
repnz
mov
jle
enter
adc
loop
cli
push
enter
push
dec
rcll
mov
jno
out
les
jbe
mov
mov
test
or
inc
mov
sub
xor
daa
jge
push
sub
lods
sub
aad
movsl
pusha
add
push
pop
dec
xor
cmpl
xchg
div
inc
ja
cmpsb
idiv
into
mov
push
jp
jecxz
rolb
inc
xor
jbe
loop
ds
push
jbe
repnz
bound
rolb
and
pop
adc
or
lret
add
pop
push
pop
clc
pop
std
push
inc
or
lock
lcall
out
sub
jae
sbb
rolb
cmc
enter
xchg
mov
stos
loop
iret
or
out
in
loope
popf
add
jb
ret
out
iret
jae
sbb
mov
lret
mov
std
dec
sbbl
lea
loop
dec
and
flds
push
repnz
mov
pop
sub
push
out
xorb
sbb
cli
filds
aaa
cld
lahf
lods
mov
and
jo
and
mov
xchg
jns
and
ror
insb
outsl
add
mov
xchg
or
lods
inc
pop
mov
jae
or
xchg
pop
imul
pop
adc
test
push
roll
mov
test
adc
mov
leave
and
mov
pop
out
jnp
add
in
fidivl
mov
arpl
mov
mov
xor
ret
or
push
int3
push
ffreep
push
or
adc
add
mov
lret
dec
lcall
inc
clc
mov
lret
jns
es
sub
pop
push
lods
divps
gs
js
pop
leave
xor
aam
xchg
jecxz
int
inc
scas
add
enter
xor
inc
xor
and
in
arpl
into
cmp
int3
outsb
add
mov
arpl
mov
add
jle
pop
into
xchg
mov
adc
add
mov
in
and
and
rcl
inc
outsb
es
jno
adc
xor
mov
shrb
cmp
pushf
mov
or
loopne
aaa
fcoml
inc
dec
mov
pop
sbb
pop
inc
xchg
imul
in
mov
dec
dec
mov
iret
js
fwait
xchg
cmpsb
ljmp
loop
das
xor
sbb
pop
pop
insb
push
xorl
jns
call
inc
sub
jle
fisttps
mov
jb
adc
rorb
mov
repnz
xchg
jo
mov
dec
jne
jb
decb
cs
xorb
aas
ss
mov
jmp
mov
daa
loop
scas
mov
aad
sarl
jb
push
mov
inc
insl
or
inc
in
xchg
out
add
jns
mov
js
xchg
xchg
out
mov
mov
jbe
les
push
xchg
push
popa
jb
sub
add
sub
sbb
mov
mov
cld
enter
jo
int
scas
sahf
mov
mov
data16
out
and
mov
push
sarl
addr16
test
mov
ljmp
cmc
ss
cltd
fisttpl
jle
xchg
mov
dec
stos
xor
xor
xor
sbb
mov
movsb
mov
icebp
test
dec
test
sub
sub
sub
xor
iret
stos
pop
push
lock
add
enter
out
cmp
stos
mov
repz
inc
ljmp
sbb
rcll
ja
mov
pop
jo
inc
push
in
add
push
lods
xor
jg
dec
push
int
adc
xor
mov
cltd
xchg
sbb
mov
add
push
dec
push
nop
jb
jg
in
fisubl
nop
les
inc
pop
sti
mov
js
imul
scas
lock
mov
add
js
mov
lret
leave
push
mov
mov
negb
insl
mov
scas
js
mov
sub
jmp
cmpsl
mov
xchg
por
addb
iret
push
fwait
cmpsl
enter
ror
loopne
ss
addr16
jns
adc
cmpsl
mov
jbe
ficoms
call
sahf
je
nop
sub
loop
mov
xor
xchg
cmp
or
jmp
neg
add
push
xor
cmp
scas
jnp
dec
jle
xor
imul
cld
sbb
das
push
jae
jp
xlat
mov
sbb
jns
fisttpll
add
mov
jae
jg
mov
xor
stc
pop
movsb
sub
xor
jp
loop
push
cmp
adc
adc
or
cmpb
pushf
cmp
mov
fstpl
rorb
testl
das
shlb
sti
lcall
fidivrl
loopne
lock
dec
popf
addr16
mov
mov
xchg
lcall
jnp
dec
test
cmpb
aam
ret
cmpsl
cmovl
cmp
cmpb
iret
rorb
inc
push
or
xchg
out
dec
movsb
mov
iret
push
dec
arpl
jg
jnp
cmp
fadds
leave
loopne
out
cli
inc
sub
cmp
gs
das
aam
lods
pop
xchg
nop
insb
imul
pop
fs
xchg
push
mov
and
outsl
mov
lods
inc
scas
fwait
shll
icebp
je
mov
pop
aas
nop
negb
and
outsb
push
cmp
in
inc
dec
mov
fnstcw
push
popa
lahf
cmpl
cs
and
mov
mov
xlat
stos
popf
cmpl
fs
jb
jne
fwait
mov
stc
dec
lret
leave
jge
cmp
adc
mov
pushf
lds
stos
test
ja
dec
lahf
mov
data16
scas
jnp
ss
lods
incb
out
test
jbe
dec
xchg
roll
jae
inc
add
sub
pop
loope
dec
and
jno
pop
mov
sahf
pop
xchg
test
pop
cmp
scas
jno
dec
into
std
lods
popf
ret
mov
test
push
adc
cmp
data16
adc
sbb
mov
inc
cli
push
lods
lock
ljmp
pusha
ret
lods
xchg
jmp
sbb
faddp
bound
cmp
xchg
xchg
sbb
imul
pusha
std
outsl
add
int
add
push
xchg
rclb
js
mov
pop
out
pop
imul
iret
fdivrs
dec
mov
pop
rcr
sub
xchg
xchg
icebp
dec
mov
jbe
lock
test
sub
imul
mov
jmp
mov
std
dec
mov
jb
popf
incl
fmuls
mov
insl
pop
lods
sub
inc
mov
push
xorb
xor
xor
sub
fdivrs
sbb
mov
stos
inc
mov
adc
xor
movsb
aaa
or
mov
nop
insl
jmp
add
lret
rcll
cmpsl
adc
mov
movsl
mov
xor
mov
into
call
outsb
cmp
cmp
pop
sti
jecxz
aas
or
jns
jb
imul
ret
dec
mov
rorl
dec
mov
dec
sub
mov
sub
mov
pop
pop
lret
xorl
ret
ds
lret
push
mov
and
idivl
cmc
aas
jo
pop
roll
imulb
push
inc
stc
add
jle
iret
les
aas
fucomi
push
lods
xlat
sbb
or
and
lds
and
push
xchg
add
dec
lret
xchg
shrl
xchg
mulb
ret
pop
cmpb
in
cmp
jp
das
fcmovnbe
jne
setb
adc
pop
iret
cmpsb
jne
fmul
jne
fcoms
pop
int
rcr
mov
test
outsb
bound
pavgw
sti
fidivrl
pop
jmp
fildll
sbb
test
sbb
mov
mov
ror
add
daa
add
add
pop
sbb
mov
mov
icebp
dec
cmp
pop
lods
sub
je
ljmp
inc
jns
add
xor
add
pop
sbb
fwait
cmp
clc
ljmp
push
mov
scas
xor
inc
or
in
rcr
mov
lret
jle
mov
cmp
cwtl
pusha
lret
cpuid
mov
pop
setge
mov
mov
push
stos
and
pushf
ret
scas
std
mov
stos
lock
add
aas
int3
test
imulb
shrl
ja
fildll
out
jecxz
stos
pop
push
jnp
adc
cmp
movsb
andl
stc
dec
test
lds
push
adc
mov
mov
mov
xchg
sub
rcr
xor
xor
pop
lahf
xor
add
notb
fistps
adc
ss
bound
loope
shlb
mov
add
xor
out
or
aaa
daa
es
xlat
add
ret
dec
push
pop
icebp
xchg
movsb
push
or
xchg
or
ljmp
xor
xor
jle
dec
inc
cmpsb
ret
jne
gs
mov
cmp
add
js
xor
call
daa
dec
js
loopne
rorb
arpl
lahf
sbb
gs
xchg
jne
jp
jbe
pop
or
test
lret
enter
test
jg
dec
inc
adc
pop
inc
shll
sbb
ret
add
into
jecxz
dec
dec
aas
cld
inc
movsb
in
test
mov
xchg
scas
jns
leave
sub
sbb
sbb
hlt
lods
push
mov
xchg
push
jae
push
scas
jbe
jne
cmpl
mov
adc
imul
jae
dec
sub
jmp
incb
or
int
pop
xchg
gs
jns
mov
jo
pop
scas
scas
pusha
inc
mulb
adc
cli
scas
fs
pop
loopne
addr16
or
ds
pushf
jb
push
lods
mov
stos
dec
mov
movsb
shl
js
repz
sarl
adc
push
pop
mov
xor
sbb
xor
add
pusha
xlat
sbb
sub
addr16
add
cmp
movsb
xchg
xor
adc
ret
sbb
jmp
addr16
out
arpl
clc
or
lds
sarl
fcom
and
ret
bound
jnp
push
push
mov
dec
inc
dec
dec
push
lods
xor
mov
pushf
dec
add
mov
fwait
inc
lds
adc
cmp
lds
insb
adc
cmp
dec
jp
inc
and
enter
add
lea
data16
adc
cmp
lds
insb
adc
lds
insb
adc
lds
insb
adc
mov
subl
mov
mov
lock
pop
xor
cmp
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
lds
insb
adc
in
bound
pop
push
