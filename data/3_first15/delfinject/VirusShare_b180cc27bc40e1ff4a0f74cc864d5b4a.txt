sti
idiv
jmp
bound
inc
sub
dec
dec
dec
dec
nop
jmp
mov
add
in
call
add
adc
rorb
inc
jl
or
loopne
mov
xor
push
adc
or
dec
mov
fbld
xor
mov
xor
pusha
mov
push
push
lods
or
sbb
leave
je
cmpl
outsb
mull
push
cs
or
jge
test
shlb
push
push
pushl
testb
adc
pop
pop
mov
xor
cld
ret
loope
sub
int
jno
mov
cmp
adc
in
aas
pop
mov
mov
ret
nop
push
add
push
idivl
add
mov
movsl
push
mov
cs
mov
mov
outsl
roll
mov
xor
or
xchg
and
add
pop
je
cltd
cs
cmp
push
mov
mov
mov
cmpb
fists
jnp
movb
jmp
mov
pop
add
fmull
sbb
sub
mov
pop
sbb
fisttpll
mov
popa
add
mov
sub
loopne
jae
push
inc
jl
gs
fimuls
push
mov
mov
xor
sbb
add
btc
push
push
mov
cmpl
adc
adc
adc
jne
fistps
or
xchg
adc
adc
pushl
fs
and
add
pop
pop
sbb
push
mov
std
cmpsb
adc
subl
hlt
mov
mov
out
fcmovnu
cld
mov
inc
clc
dec
shl
clc
imull
hlt
mov
pop
nop
dec
call
xor
clc
mov
mov
inc
push
push
add
push
dec
test
jl
add
in
movl
aas
fmull
inc
ret
sbb
mov
add
sub
adc
out
or
jmp
lcall
es
or
inc
or
rclb
mov
jle
adc
fs
cs
or
out
xor
jae
iret
inc
dec
rcll
ss
sbb
or
sub
sahf
sar
dec
in
jne
ret
xchg
push
xchg
ffree
inc
repz
sub
inc
addw
in
cmpw
jb
ret
or
cmp
clc
cmpb
mov
jbe
popa
daa
add
or
pop
push
inc
and
das
int
pop
inc
call
sbb
je
mov
push
add
test
adc
loopne
push
sbb
cmpsb
jge
push
cld
rolb
in
push
jl
xor
inc
call
push
pop
insb
or
cmp
in
xchg
push
orb
in
adc
push
out
movsl
sarb
pop
xor
dec
or
movl
push
sbb
inc
out
jae
or
out
loopne,pt
in
cmp
pop
sub
insb
jae
ja
jo
and
aam
sti
mov
mov
icebp
dec
fdivrl
ljmp
add
push
hlt
hlt
and
cs
push
sbb
aaa
mov
in
pop
inc
pusha
add
stos
fsubrs
push
inc
jbe
pushf
or
mov
fcmovnb
ficoml
and
in
popa
adc
xchg
jge
dec
sub
cmovle
test
xor
mov
sbb
icebp
and
fisubl
hlt
imul
jmp
xchg
cmpsl
sub
leave
push
add
mov
and
mov
pop
hlt
imul
fsubp
push
cmpl
pushl
lcall
dec
sti
cmpsl
pop
les
fisttpl
int3
cmpsl
rolb
pop
sbb
inc
and
fadds
cld
mov
js
sbb
or
sub
shrl
xchg
shrb
movsb
jge
sbb
in
jmp
aaa
add
ljmp
dec
insl
cs
jb
je
inc
jnp
aam
aam
adc
ljmp
fidivrl
mov
adc
adc
jae
daa
hlt
sub
push
addr16
stos
call
imul
dec
and
loopne
sbb
pop
lea
push
aas
scas
fstpt
sub
sbb
pop
push
rorb
pop
int3
and
mov
cwtl
push
adc
rcrb
sbb
loopne,pt
pop
rclb
ss
ret
shlb
jne
push
mov
mov
stc
sub
jl
dec
mov
cmp
arpl
fmuls
fbstp
fsub
fnstenv
sbb
cs
or
lock
scas
sti
cmp
sbbb
jmp
adc
cmp
loope
shll
in
mov
sbb
sbb
aam
or
pop
std
add
inc
dec
dec
pop
inc
pop
inc
push
mov
sti
out
lods
jmp
cs
je
pop
add
mov
mov
mov
cmp
std
fcmovne
movsb
jne
hlt
jmp
mov
mov
mov
jns
mov
xor
and
mov
loopne
popa
and
add
je
cli
sub
shr
adc
inc
or
in
sbb
loopne
andb
and
add
jne
sbb
jge
adc
loop
unpcklps
rcl
out
rolb
pop
add
sbbl
in
addb
jo
aas
in
pop
daa
insb
add
nop
test
adc
sub
sbb
shl
jmp
xor
and
pcmpeqb
sub
fcoms
mov
in
ds
push
lcall
mov
jbe
test
je
incl
mull
cs
jb
ja
outsb
insl
popa
jo
imul
arpl
iret
loope
outsl
outsb
imul
push
mov
sbb
xor
mov
sub
adc
iret
cmpl
push
adc
add
pop
mov
sbb
sbb
xor
repz
xchg
movsl
imul
and
clc
movl
cltd
rorl
cmp
pop
inc
mov
sub
cmp
push
test
cmpsb
jb
out
dec
adc
jmp
cmpl
add
es
addr16
lea
xor
mov
fldz
and
outsb
bnd
add
shl
loopne
ja
out
ret
nop
sbb
movl
fcoms
rorb
test
pop
lcall
mov
out
xchg
ret
cld
xor
ret
xchg
mov
lock
rolb
push
mov
mov
cmp
daa
xchg
push
or
pop
ret
cmpsb
loope
inc
in
mov
rol
imul
ja
outsb
jbe
xlat
fisttpll
sub
and
pop
mov
stos
sub
test
call
ja
jne
xor
push
and
mov
les
push
mov
add
arpl
icebp
loopne
xor
nop/reserved
push
faddl
inc
outsb
outsl
add
inc
test
push
movl
adc
aas
cltd
je,pn
ss
popa
xchg
xchg
pop
add
test
out
loopne
xchg
pusha
sahf
dec
jg
pop
popa
fistl
jmp
lret
rorb
push
ret
xchg
lock
mov
outsl
popa
cli
data16
add
add
push
pop
nop
leave
mov
jecxz
push
xchg
lock
nop
ja
movsl
cmpsl
pusha
pop
mov
jo
sbb
mov
mov
loope
mov
push
and
and
xor
jo
cwtl
ud2
fisubrs
sbb
dec
sub
sbb
mov
scas
xchg
mov
add
outsl
out
clc
mov
and
test
xchg
pop
mov
vmread
sub
push
pop
cmpb
pop
addr16
fwait
addb
mov
xor
mov
rol
adc
jae
push
out
in
or
lock
in
in
push
hlt
insb
in
int
sub
push
in
fwait
sahf
jno
adc
int
lcall
jg
push
push
jns
arpl
and
pop
mov
daa
dec
and
sub
add
adc
imul
inc
outsb
ja
subl
es
adcb
pop
mov
sub
jb
jne
clc
outsl
jmp
inc
insb
insb
outsl
arpl
add
jb
gs
xor
gs
xchg
decb
push
mov
data16
jle
insb
call
and
rcrb
mov
or
cltd
push
xor
mov
jns
jl
mov
ss
shlb
or
scas
repnz
fidivrl
fsubl
and
pop
jmp
ss
inc
inc
mov
movsb
or
or
jbe
gs
and
and
xor
add
daa
ret
pop
add
outsb
push
pop
add
jae
imul
jae
cmp
push
add
sbb
mov
aam
hlt
popa
mov
loope
push
xlat
ret
aas
pop
and
jge
add
decl
ljmp
jnp
inc
and
sarb
or
scas
mov
or
popf
das
hlt
push
roll
mov
mov
sbb
loope
push
push
sahf
dec
je
insl
lcall
push
push
lret
push
add
sarb
dec
xchg
inc
decl
lcall
inc
outsb
jae
push
je
imul
jl
mov
mov
cli
mov
mov
xchg
mov
sub
sbb
add
jnp
pop
pop
xor
and
enter
mov
loopne
mov
aas
outsw
mov
mov
add
std
sahf
add
mov
sub
xor
loopne
les
mov
xchg
pusha
add
loop
push
sbb
xor
mov
test
je
push
mov
mov
cld
sub
or
out
xchg
ficoms
mov
xor
lods
imul
cs
sub
mov
in
ds
lcall
int3
sahf
lock
das
jb
movsb
adc
mov
dec
in
pop
and
adc
pop
ret
loopne
pop
in
or
aas
in
lock
or
hlt
mov
xchg
inc
movsb
sbb
shlb
xchg
in
mov
call
mov
mov
jne
mov
xchg
cmpsb
dec
jb
pop
push
ret
jecxz
and
aam
rcr
movsb
mov
cmpl
je
inc
int3
push
mov
xchg
out
cmp
andl
cmpl
dec
push
or
xor
xorb
int3
pop
xor
mov
sbb
subl
aam
clc
test
jle
aad
out
dec
inc
daa
fsubl
arpl
lock
push
sub
aad
jmp
je
pop
cmpsl
or
add
popf
stos
push
pop
icebp
push
test
shll
scas
push
xor
push
test
add
inc
sahf
and
cmpsb
enter
in
in
enter
jb
dec
shl
enter
jns
fwait
push
outsl
enter
imul
sbb
and
out
in
mov
test
jg
nop
or
mov
enter
or
repz
lret
enter
fnstenv
iret
xor
mov
add
in
cs
push
adc
shlb
rcr
iret
test
shl
mov
aam
iret
rolb
repnz
mov
pop
enter
mov
xor
add
or
adc
rorl
sbb
in
aam
pop
mov
xor
and
cmp
push
pop
push
jbe
cmpsl
inc
fildl
pop
dec
rcll
out
ret
fsubs
inc
adc
add
mov
mov
xchg
mov
sub
pop
ja
jnp
rclb
push
sub
pop
push
xchg
imul
loopne
push
loopne
clc
ds
mov
pop
mov
imul
hlt
dec
jae
pop
hlt
cmp
or
xchg
lock
fs
dec
in
in
test
xor
xor
movsl
push
call
ds
jae
pop
push
or
cmp
mov
es
push
lret
es
push
stos
pop
or
ja
cmp
ficoms
xchg
and
pop
lds
jmp
mov
adc
popa
cmpsb
adc
cs
fsubrp
outsb
adc
mov
push
out
cmc
mov
ret
mov
sub
lcall
or
pop
or
or
jne
inc
jl
lahf
and
fs
mov
pop
call
and
xor
and
lret
sub
in
leave
sub
add
jae
xchg
clc
clc
clc
es
gs
cld
and
mov
pop
shll
mov
mov
lock
xchg
lcall
call
call
sarb
xchg
add
lds
adc
dec
pop
and
cmp
das
ret
add
insb
gs
ret
daa
outsl
call
dec
gs
outsl
jb
dec
pop
shlb
popa
andb
rorl
lods
nop
out
les
scas
leave
repz
inc
mov
das
js
add
call
jb
mov
mov
add
cmpsb
insl
xor
out
mov
cli
inc
add
jne
sbbb
std
mov
scas
nop
sbb
xchg
insb
or
jo
push
jnp
test
or
sub
test
shlb
adc
sahf
sub
cmp
clc
sub
add
mov
movsbl
cmpl
jle
xchg
sbb
xchg
cmc
lds
mov
enter
xor
test
cmp
stc
mov
pop
ljmp
inc
push
ret
mov
lea
xor
lea
xor
mov
xor
cmpb
adc
lret
loopne
push
inc
mov
cmp
inc
sbb
jge
call
xchg
sub
rolb
xchg
out
mov
mov
in
xchg
cmp
push
fsubl
in
and
or
pop
mov
popf
mov
add
push
out
icebp
addb
mov
sub
je
lods
loopne
bound
loopne
test
xchg
and
out
push
movb
mov
testl
nop
and
mov
adc
insb
bnd
add
cmpb
inc
fmul
pop
daa
xor
sbb
mov
sub
lock
nop
and
fcomp
es
push
inc
cmp
mov
cs
aam
lock
mov
testb
rcll
dec
adc
xor
dec
pop
jnp
in
cmpsl
lock
push
push
mov
add
or
divl
aam
ret
outsb
push
rep
fisubs
scas
enter
aad
pop
adc
int3
clc
or
and
mov
cmpsb
and
fistl
push
sbb
or
enter
add
push
mov
add
xchg
adc
leave
les
sarb
and
rcr
sarb
xchg
dec
leave
mov
enter
cmc
andl
jo
or
adc
mov
hlt
push
cmpsl
arpl
adc
and
cmp
push
jbe
or
mov
mov
rol
incl
add
cld
or
ss
outsl
adc
push
jne
sbb
addl
or
movl
daa
cmp
xorb
add
cmp
leave
test
sbb
nop
mov
mov
in
add
lods
jb
xchg
add
mov
pop
repnz
lods
test
leave
xchg
or
test
lods
inc
push
orl
mov
gs
adc
mov
dec
push
movsb
movsb
movsb
mov
je
adc
push
xor
ds
inc
mov
xchg
sub
out
jns
je
mov
stos
stos
int3
stos
fdivrs
or
inc
push
jae
xor
and
repnz
cs
xor
sbb
add
pushf
jne
test
and
outsl
push
push
jle
xor
js
loop
add
or
lock
test
lea
push
xchg
ficomps
add
mov
js
shrl
call
rcll
pop
add
inc
jo
in
push
xchg
int3
dec
sub
mov
adc
int
cmp
fs
inc
rclb
lods
mov
dec
xchg
scas
rcll
pushl
xchg
cmp
mov
xchg
or
jbe
add
cltd
lock
loopne
fisttpll
add
mov
ret
xor
cmpsb
or
pop
shrb
and
sbb
inc
outsb
gs
xchg
cmp
enter
cmp
or
push
jno
lcall
addr16
pop
pop
hlt
or
xchg
sbb
adc
xchg
and
addr16
inc
xchg
sbb
fs
dec
clc
mov
adc
and
bound
mov
test
mov
dec
rolb
xchg
dec
sub
ret
fidivrs
pop
cmpl
xchg
aas
push
aaa
test
xor
jb
addb
jne
adc
enter
andl
xchg
and
dec
gs
jae
inc
shll
xchg
js
dec
xchg
dec
repnz
sbb
call
xor
jae
fs
jl
sub
push
push
in
adc
cs
fsubrl
cmp
sub
insb
dec
xchg
xchg
dec
ss
dec
push
scas
jne
pop
pop
pop
sub
mov
cmc
stos
mov
xchg
sub
inc
cltd
jg
mov
jae
lahf
push
and
mov
cwtl
jbe
mov
repnz
and
and
pop
lea
and
loopne
es
push
xor
mov
sbb
cmpsl
xchg
add
sbb
in
aas
out
test
push
inc
pop
lcall
jo
pop
leave
nop
jo
xchg
and
add
call
cmp
sbb
fs
cs
roll
sub
shll
idivl
and
adc
sub
add
xchg
sub
mov
mov
adc
or
enter
or
jb
and
rolb
add
push
push
push
mov
mov
and
sbb
les
push
adc
aaa
fldenv
mov
sub
or
dec
testb
inc
push
mov
daa
fidivrs
and
sub
in
dec
xor
outsb
cmpsb
mov
fsubrl
jge
pop
ficompl
xchg
sub
mov
movsb
jge
push
jp
push
movsb
adc
xchg
dec
vorps
xchg
jmp
cltd
fimull
cltd
sub
pmulhuw
mov
jl
rorl
xorb
imul
test
dec
imul
fs
aaa
loopne
arpl
xor
mov
addr16
leave
mov
push
sbb
pop
push
call
inc
sub
dec
add
and
pop
inc
je
movsb
sub
sbb
inc
push
jb
inc
inc
orb
in
hlt
dec
jb
pusha
add
cmp
sbb
inc
cmp
push
stos
pop
or
inc
insb
roll
enter
cmp
iret
dec
aaa
and
xor
push
sbb
inc
nop
and
inc
repnz
pushl
pop
cmc
push
or
sub
xchg
test
in
repnz
sub
xor
xlat
add
push
mov
and
mov
mov
cmp
sbb
sub
sahf
sub
and
shlb
push
mov
cmc
nop
or
jmp
loopne
jnp
js
lock
aaa
orb
and
mov
into
cmp
pop
in
lret
mov
sbb
int3
rolb
shlb
push
or
jbe
or
mov
sub
daa
fadds
xor
in
sbb
pop
pop
leave
sbb
mov
inc
repnz
lock
adc
sub
or
push
pop
add
fsubrl
pop
sub
adc
or
mov
or
and
mov
add
mov
sub
inc
mov
adc
add
nop
cmp
adc
cmp
mov
cld
incb
or
mov
inc
leave
mov
mov
adc
enter
or
jle
sbb
adc
add
pop
clc
and
pop
and
sub
inc
leave
add
inc
cmpsb
in
pop
call
xor
cmp
in
mov
and
lock
and
or
push
xchg
in
adc
out
xor
mov
add
sub
ss
loope
pop
add
jno
xchg
das
mov
ljmp
push
or
in
in
push
nop
push
fiadds
aam
push
or
sub
add
movsb
or
loopne
xchg
push
mov
jmp
stc
cwtl
jns
aaa
jle
cld
cli
and
sbb
or
scas
ds
adc
jmp
push
jg
push
inc
sbb
loope
subb
aam
xor
dec
sub
cs
nop
and
arpl
adc
adc
repz
mov
test
cmpsl
mov
js
and
mov
jae
aam
cmpl
sub
enter
js
ret
add
push
loope
nop
pop
nop
mov
add
push
rorb
cmpsl
mov
mov
ljmp
sbb
loope
enter
iret
xor
jb
mov
nop
and
or
push
imul
lret
or
les
cltd
in
enter
adc
inc
mov
enter
lret
adc
shrl
or
inc
and
inc
mov
pop
fmul
xorb
inc
mov
clc
cli
sbb
jns
or
jne
shlb
pusha
add
in
mov
mov
and
lret
jp
push
adc
push
pusha
movsl
xchg
inc
xchg
rorb
rol
add
dec
dec
incl
pop
xchg
sub
lret
push
push
lea
orl
xchg
mov
cmpb
nop
nop
call
out
in
mov
adc
les
inc
sbb
add
mov
cwtl
xchg
cmp
xorl
xchg
bound
inc
xchg
ret
mov
and
sub
mov
in
add
inc
mov
fcoms
jb
sarb
hlt
sub
mov
loopne
jo
xor
push
scas
lahf
pop
flds
mov
jmp
orl
out
xor
add
mov
negl
mov
xor
jg
xor
mov
inc
ss
add
push
inc
push
inc
loopne
xchg
int3
mov
xchg
int
or
lods
jmp
dec
jb
je
inc
pop
mov
in
movsb
test
add
jns
daa
movsb
sbb
inc
push
and
mov
mov
js
test
inc
and
lock
aaa
add
test
out
mov
rolb
lods
mov
push
xchg
imul
sbb
push
test
add
sbb
test
inc
or
add
xchg
pushf
pushf
pushf
mov
lret
cld
fldt
call
pop
push
add
in
jno
loopne
adc
mov
sbb
jge
stc
into
inc
adc
push
gs
mov
pop
push
dec
dec
dec
pop
xor
cwtl
int
xchg
push
or
arpl
jle
nop
fs
xchg
inc
nop
xchg
fs
or
nop
pop
mov
add
repnz
stc
jecxz
test
add
call
mov
mov
fwait
popa
pusha
add
js
dec
sti
xor
sub
jmp
jb
xchg
das
mov
dec
xchg
mov
fnstenv
mov
xor
push
and
push
sti
ljmp
scas
pop
pop
pop
cmp
xchg
lret
js
jne
pop
push
xchg
js
pop
push
shrb
fsubrs
add
inc
sarb
adcl
adc
jae
jbe
sti
dec
rorb
mov
inc
aaa
xor
testb
push
add
popa
push
push
jnp
andl
out
in
mov
and
add
testb
mov
aam
pop
dec
cmp
in
addb
orb
mov
js
pop
enter
lods
js
add
ss
mov
in
or
rcrl
pop
rorb
pop
dec
mov
sbb
lock
pop
xor
add
add
jb
je
test
test
pop
add
in
nop
pop
rcll
test
dec
pop
adc
repnz
cltd
add
or
add
shrl
push
inc
imul
iret
daa
add
loopne
lock
jae
inc
aad
ret
pop
leave
test
jo
jb
pusha
test
in
push
nop
inc
push
mov
fs
scas
in
fs
enter
push
into
sbb
and
fs
cs
in
pusha
data16
add
jg
out
add
negb
fs
pop
pop
lret
scas
or
pop
add
xchg
pop
pop
pop
movsl
sbb
xor
push
rorb
adc
inc
xchg
push
push
push
enter
cmp
negl
xlat
mov
and
int
dec
in
push
add
dec
cs
dec
movsl
xchg
cmp
xchg
dec
jae
xor
lods
cmp
dec
sub
dec
dec
leave
movsl
sbb
adc
orb
in
or
or
and
inc
xchg
cld
or
sub
jle
cs
test
xor
mov
outsb
loope
xchg
jb
or
cmp
and
orl
jae
lahf
cmp
mov
jg
xchg
pop
aam
mov
xchg
dec
jae
shlb
js
xor
add
xor
aaa
dec
sbb
imul
fisubs
decb
pop
push
incl
fs
xor
sbb
mov
pop
lcall
add
sub
icebp
pop
xor
mov
pushf
fs
cs
push
ljmp
sub
nop
add
add
cld
push
mov
and
add
nop
and
sarl
jae
and
pop
movsl
jmp
test
xchg
dec
mov
das
and
add
and
fwait
in
xchg
inc
movsb
movsb
mov
jbe
cmc
rorb
or
inc
sbb
dec
pop
fcmovbe
adc
cld
pop
mov
fs
cs
jne
sbb
nop
add
xchg
sahf
adc
cwtl
and
movsb
stc
jecxz
add
inc
out
idivb
outsb
fstp
add
mov
cmp
scas
adc
mov
xchg
sbb
ret
pop
add
and
fildl
lock
xor
mov
cli
mov
icebp
movl
aad
add
and
add
jmp
inc
inc
add
add
add
add
adc
add
and
or
call
mov
mov
cwtl
test
inc
cld
cltd
cs
jae
rorl
lcall
xor
push
in
or
ret
jle
das
sbbl
rolb
loopne
pop
sub
xor
mov
add
lds
push
fsubrl
loopne
and
nop
add
jb
sub
in
sub
les
int3
or
cmpsb
in
add
mov
enter
shrb
aam
loope
sbb
cmp
dec
mov
ret
xchg
mov
inc
xor
ret
adc
mov
mov
nop
sub
in
add
enter
addr16
add
mov
pop
enter
mov
leave
add
and
rcrb
in
push
and
xchg
pop
push
inc
xchg
pop
add
push
sbb
or
sahf
int3
push
dec
xor
adc
mov
loopne
xor
push
inc
pop
dec
std
std
repz
leave
or
push
and
or
pusha
pop
enter
test
add
add
xlat
dec
add
inc
test
or
pushf
sbbl
cwtl
sbbb
icebp
movsl
and
rclb
sbb
in
aad
sub
push
xor
mov
sub
sub
mov
movsb
nop
nop
lret
nop
mov
and
dec
nop
fs
mov
jmp
mov
push
jb
sbb
xchg
cmpsb
in
mov
mov
cmpb
xchg
dec
cmpb
add
xchg
and
add
add
push
nop
addb
sbb
xchg
and
out
adcb
pushf
add
mov
push
addr16
sbb
dec
lcall
cwtl
jo
or
dec
mov
xchg
or
add
and
roll
jo
je
sbb
cld
mov
fstpl
pop
dec
sahf
sub
and
cli
mov
pusha
xor
push
xor
movsl
adc
subb
lahf
jo
sub
and
and
enter
pop
push
pop
xchg
pop
jne
push
push
lea
push
and
or
dec
xor
inc
cs
lret
jp
push
dec
or
gs
test
jb
mov
addb
dec
xchg
push
nop
add
loope
sbb
mov
inc
pop
inc
sbbl
inc
xor
cmp
dec
cmp
dec
nop
add
cmp
cmp
inc
inc
addr16
mov
inc
es
xchg
xor
pop
enter
xor
in
and
and
sub
fs
xchg
and
add
inc
cmpsb
and
sub
pop
enter
rol
sbbl
and
aam
dec
and
and
inc
in
in
and
inc
bnd
push
pop
xor
mov
cmpsl
pop
and
inc
push
mov
adc
jbe
sub
fists
hlt
test
pop
test
js
add
test
sbb
pop
xchg
sbb
loopne
xchg
xor
add
inc
adc
inc
jb
xchg
or
or
sbb
dec
sahf
add
or
add
adc
gs
add
in
lods
fs
add
addl
inc
mov
adc
cld
cld
dec
pop
aaa
or
pop
lods
movb
lock
es
mov
cld
lock
jne
and
mov
lcall
sub
and
inc
cmpsb
in
call
sub
in
cmp
pop
xchg
loopne
in
jb
leave
call
xchg
sbb
in
cs
repnz
jl
and
cmp
xor
mov
sub
fwait
aas
sub
jl
mov
cld
push
insl
or
fadds
mov
or
xor
jo
pop
out
or
xor
add
mov
xchg
out
rolb
xorl
xchg
faddl
xlat
rol
and
clc
lods
pusha
pop
enter
call
cmp
lock
nop
hlt
clc
xlat
adc
mov
bound
pop
movsl
cld
cld
or
xchg
cld
flds
clc
scas
in
xor
and
add
mov
jnp
dec
lds
les
mov
adc
push
pop
cld
inc
sub
arpl
loope
ret
or
or
movsl
mov
mov
dec
add
sbb
inc
xchg
mov
push
and
je
jge
mov
push
dec
push
mov
hlt
jne
and
push
popf
push
push
mov
outsb
je
sub
mov
sbb
sbb
mov
dec
ss
push
xchg
roll
out
pop
adc
and
mov
mov
push
or
jnp
mov
enter
push
loope
add
or
xchg
movsl
mov
mov
push
xor
orl
sbb
sbb
dec
dec
shl
mov
or
push
adc
sbb
and
mov
loop
int
add
les
and
xchg
cld
cld
cld
push
fcomps
aaa
test
cmpsl
pop
ret
hlt
pop
mov
and
stc
and
push
mov
std
jb
lock
daa
pop
mov
jle
inc
gs
daa
movsb
inc
dec
enter
pop
jnp
and
mov
xchg
hlt
sub
test
les
adc
in
xchg
cmp
int
enter
rcll
jno
and
imul
pushf
pushf
pushf
sbb
mov
icebp
fimuls
or
jmp
xchg
inc
xchg
and
dec
push
xchg
cwtl
mov
insb
and
xchg
and
les
mov
push
dec
add
mov
sub
and
mov
or
jecxz
nop
pushf
xchg
add
xchg
add
jl
incl
frstor
mov
inc
push
jo
cmp
xor
xchg
mov
adc
dec
shrl
pop
mov
dec
or
inc
les
jb
lcall
pushf
or
mov
dec
pop
enter
dec
insb
nop
and
jo
dec
push
subb
cmp
sub
es
or
pop
out
js
add
push
pop
jl
jl
dec
leave
jl
rorb
push
and
sub
je
cmp
andb
and
push
sub
cmp
xor
inc
or
arpl
test
test
mov
nop
xor
pushf
je
sub
cld
mov
cli
cmp
scas
insb
or
std
mov
cmp
test
dec
mov
pop
or
loope
inc
lods
jecxz
mov
or
nopl
push
jb
or
dec
and
cmp
insb
adc
mov
je
push
and
jns
imul
test
leave
jo
pop
cmc
pop
loopne
and
push
or
out
mov
out
cmp
lock
call
aad
lea
or
push
jg
ja
mov
or
stos
add
cltd
in
daa
loopne
pop
mov
add
mov
and
cmpb
mov
clc
dec
in
add
dec
sbb
pop
mov
clc
inc
cmp
pop
cld
lods
pusha
cltd
sbb
pusha
mov
sub
pusha
stos
sbb
pop
adc
xchg
inc
test
add
pop
pop
pusha
insl
push
jecxz
push
lock
and
push
jb
push
pop
movsl
add
add
hlt
mov
jp
inc
xchg
or
push
xchg
add
pusha
jne
mov
pop
insb
jp
jnp
bswap
xchg
cld
mov
and
in
mov
fildl
in
in
hlt
push
dec
mov
mov
inc
cs
push
push
fcoml
inc
shlb
insl
fmull
inc
shlb
sbb
outsl
mov
push
xor
sbb
push
nop
and
dec
dec
dec
or
sbb
add
enter
add
outsl
add
pop
sbb
add
mov
aam
mov
push
lock
sub
push
push
test
dec
push
popa
ja
testb
ja
arpl
mov
or
pop
cmp
addb
iret
lea
pop
loopne
inc
rolb
cmpsl
loopne
jno
lock
or
out
and
outsl
xor
subl
test
mov
shl
add
mov
pushl
adcb
movsb
popf
cmp
push
dec
cld
sahf
ss
mov
xorb
or
cmp
rorl
stc
scas
cltd
push
jecxz
aaa
mov
cmp
push
lahf
imul
movsb
add
mov
push
push
aam
mov
jnp
sub
or
daa
push
ret
xchg
fdivrl
pop
fstl
lahf
adc
cmp
add
adc
cmpsb
shrl
rolb
inc
inc
cmp
jmp
and
pusha
mov
nop
add
xchg
cmpl
jne
clc
cli
mov
dec
adc
sbb
cwtl
sbbb
jb
rorb
lds
xchg
rorb
xchg
mov
mov
mov
dec
adc
add
rcll
push
push
bound
or
rcr
xor
in
ret
dec
or
in
loop
jb
sbb
add
dec
add
push
mov
fldenv
inc
inc
lods
mov
leave
movsl
mov
inc
mov
and
xchg
mov
loopne
add
inc
inc
add
inc
dec
cmp
repz
jge
mov
lods
xchg
jnp
jge
cwtl
divb
scas
push
inc
cmp
pop
enter
mov
and
add
xor
lods
fsubrs
movsb
mov
jp
push
js
mov
fsubrl
add
nop
cmp
and
lods
mov
cmpl
add
inc
data16
test
jmp
cmp
add
inc
push
add
inc
inc
inc
cmp
add
jb
sbb
lcall
sbb
outsb
jecxz
daa
xor
in
xorb
dec
mov
xor
cmp
xor
rorb
out
faddl
xlat
aaa
adc
jo
pop
mov
ljmp
xor
leave
ret
shlb
xor
and
daa
nop
bound
sti
inc
outsb
movsb
and
sbb
pushf
or
sub
or
movsb
xor
cwtl
fldt
cwtl
or
negl
adc
stc
xor
pop
int3
jns
and
push
pop
adc
jbe
push
fidivl
mov
lcall
sub
roll
adc
pop
add
mov
jb
test
mov
jl
sub
jb
sub
cmp
nop
push
jbe
pop
jge
push
jne
mov
dec
mov
aad
jno
or
xchg
mov
nop
lret
and
mov
xchg
sub
or
scas
sub
add
leave
inc
cs
aam
pusha
bound
xor
in
and
rcr
push
shll
inc
xchg
add
cmp
lret
cmpsb
pop
in
cmpsb
sbb
sub
testl
clc
insb
add
orb
adc
or
adc
test
xor
xchg
movsb
enter
mov
rol
js
cmc
adcl
pop
adc
or
cmc
xchg
movl
popa
mov
leave
xchg
pop
leave
or
divb
or
test
call
sub
and
push
ret
mov
mov
mov
pop
mov
subb
or
loopne
lcall
push
fidivs
sbb
movsb
add
jb
add
add
jb
add
and
outsb
and
cld
sti
and
sub
or
jne
dec
push
cmp
adc
and
inc
sub
mov
push
lock
add
or
xchg
pshufw
sti
js
sub
fabs
xor
pop
test
cwtl
add
je
or
sub
sub
mov
mov
jns
cmpb
add
je
jne
sbb
lods
and
imul
imul
add
inc
sub
cwtl
mov
sub
insb
push
mov
push
pop
sub
int3
dec
iret
or
jbe
dec
dec
hlt
popf
std
js
sbb
xchg
in
lcall
sbb
inc
add
add
cli
mov
andb
repnz
inc
fmull
cmp
xor
aam
or
pusha
xorl
push
push
add
add
ret
mov
add
shl
test
and
mov
or
mov
add
cmp
push
je
test
mov
mov
inc
mov
mov
jb
pop
sbb
cmp
add
scas
mov
stc
or
mov
or
and
push
cmp
sub
scas
add
cwtl
mov
loop
icebp
repz
and
inc
push
imul
push
cmp
orb
sbbb
xor
leave
and
xchg
call
in
mov
pop
xor
repz
pop
pop
xchg
xchg
or
xor
shlb
fcmovnbe
mov
push
int3
test
loop
in
add
push
and
pop
pop
push
add
inc
xor
or
push
ret
xlat
pop
repz
cltd
nop
out
fwait
in
pop
ss
les
inc
xor
sti
cmp
mov
sbb
pop
push
call
cs
mov
std
loopne
shrb
adc
xchg
cmp
cltd
mov
jno
mov
sti
or
inc
aaa
nop
push
push
pop
les
fcoms
pop
leave
fmuls
pop
aaa
jo
repnz
adc
mov
xchg
loopne
cwtl
sub
call
rclb
push
lods
cmp
mov
cmpl
test
sti
inc
xchg
add
pop
xor
adc
ljmp
int3
int3
int3
add
mov
push
adc
shlb
jno
std
inc
push
nop
inc
enter
sbb
ss
inc
xor
data16
mov
inc
popf
xor
mov
or
dec
sbb
mov
movsl
mov
std
lcall
bound
xor
and
leave
mov
dec
jb
xchg
dec
dec
xchg
dec
repnz
adc
dec
and
inc
nop
xchg
fwait
pushf
or
dec
xchg
jecxz
insl
cmp
rorl
or
xchg
je
movsb
mov
mov
imul
jae
and
movsb
movsb
movsb
sbb
push
in
or
inc
enter
sub
dec
jnp
inc
adcb
inc
nop
push
sub
add
mov
cwtl
popa
popa
mov
add
addr16
push
nop
pushf
pushf
loope
push
rorb
mov
mov
or
ret
or
cmp
popf
ljmp
mov
mov
mov
je,pt
mov
stc
int
out
jo
pop
pusha
pop
test
cwtl
stos
mov
aad
jbe
arpl
hlt
dec
cmpsb
fs
clc
cld
cmpb
pop
pusha
loope
test
scas
push
or
out
sub
add
sbbb
or
add
rcrb
subl
ret
lcall
rcl
mov
les
icebp
daa
and
ror
sahf
rcr
pop
test
push
push
adc
add
sbbl
xchg
ficomps
int3
add
and
inc
imul
mov
dec
sarl
inc
inc
popa
outsb
jbe
jae
popa
fdecstp
dec
bound
inc
inc
dec
andb
aas
inc
or
xchg
addb
xchg
pop
sbb
test
andb
movsb
ret
and
xor
ds
and
fs
or
clc
add
sbb
mov
popf
roll
xchg
cmpl
rorb
enter
sub
rcl
mov
or
dec
hlt
mov
mov
inc
or
and
divl
inc
movl
inc
into
fmulp
data16
shrl
jl
int3
push
pushf
enter
push
aam
in
jo
sbb
xchg
test
dec
cmp
add
and
dec
call
lock
adc
mov
mov
pop
pop
xor
ljmp
push
xor
pop
adc
mov
inc
and
sahf
sti
inc
mov
and
push
push
mov
dec
adc
and
stc
pop
mov
xchg
xchg
call
lods
lea
or
in
dec
popa
mov
movsb
mov
mov
sub
sahf
and
adc
jb
movsb
loopne
or
and
jb
scas
fcomp
push
jb
jbe
aam
dec
cmpsb
fs
fsub
bound
iret
add
pusha
ret
or
shl
stc
sahf
and
push
fs
in
js
push
sub
add
jmp
test
inc
or
rcl
xchg
les
adc
aas
sub
add
out
xchg
push
std
push
int3
in
push
enter
dec
adc
push
pop
dec
xor
xchg
imul
add
mov
push
shll
pop
enter
pop
push
punpcklwd
inc
in
or
add
cmp
shrb
xchg
cmp
push
add
mov
pop
dec
dec
cmpb
mov
add
xchg
inc
sbb
adc
loope
mov
enter
sbb
enter
dec
jnp
lahf
xchg
mov
jnp
xor
xchg
aas
les
movsl
mov
pop
je
jae
or
rcl
dec
xchg
lahf
rcrb
filds
push
xor
push
in
pop
and
andb
add
mov
mov
push
leave
adc
pop
jb
push
mov
mov
pop
leave
adc
sub
or
sti
adc
cs
cmp
test
out
add
pop
imul
popf
rorb
testb
mov
push
mov
test
loope
or
inc
fimull
cld
mov
insl
dec
cmp
jl
push
movsb
cmpl
daa
je
or
test
enter
inc
mov
shrl
push
jmp
push
jb
test
jae
je
int3
jae
nop
and
ss
dec
mov
es
xchg
dec
jae
int3
xchg
xchg
xchg
cwtl
or
and
clc
xchg
in
pop
addb
out
jo
inc
imul
push
hlt
stos
jo
add
xchg
mov
scas
arpl
nop
nop
andl
nop
test
sub
mov
add
xor
into
pop
rorl
test
decb
popa
jo
xchg
adc
and
and
xchg
mov
add
inc
xchg
sbb
movsl
in
mov
mov
or
aam
or
dec
arpl
pop
orb
cltd
nop
rorl
jb
outsl
aad
ret
and
add
je
add
jo
add
insb
movb
enter
iret
lods
fs
inc
xor
or
cs
ds
or
test
inc
repnz
mov
xchg
xchg
jp
sub
push
loop
testb
jl
adc
adc
enter
mov
xor
pop
test
xor
ret
cmp
std
sub
add
push
pop
test
addl
mov
pop
cmp
je
push
cltd
nop
sub
outsb
clc
pop
sbb
insl
sbb
icebp
fdivl
pop
add
call
sbb
inc
dec
inc
pop
or
add
mov
mov
dec
cmp
mov
addr16
loope
aad
mov
or
movl
jecxz
mov
dec
add
loope
test
xor
xor
push
mov
repnz
pop
leave
xor
roll
jp
pusha
sub
sarw
jb
jmp
inc
push
fadds
xor
xor
add
mov
or
mov
movsb
shll
sub
aam
mov
add
sbb
or
and
sbb
out
xchg
and
inc
cmpsb
mov
push
jb
mov
adc
adc
sbbb
push
nop
add
and
push
jge
xchg
xchg
adc
fadd
mov
pop
jmp
push
mull
call
jl
mov
neg
insl
nop
lock
sbb
jo
adc
in
add
or
aaa
sub
push
sbb
sbb
ret
push
sbb
inc
mov
cmpb
testb
adc
imul
je
clc
mov
fnstenv
sub
jo
stc
push
adc
aas
xor
sub
scas
xor
or
add
clc
xchg
cmp
dec
cmp
push
sub
cmp
lods
jae
and
mov
pop
leave
jo
or
pop
pop
xor
add
loop
sub
loop
sti
movl
negl
sbb
pop
enter
enter
jo
xchg
sbb
pop
js
sbb
mov
or
fcomps
mov
add
aaa
ret
mov
test
add
stos
hlt
shrl
and
cmp
dec
xchg
mov
pop
push
lods
dec
outsl
cmpl
or
out
and
ret
pop
aam
jmp
js
push
int3
xor
lea
inc
addb
adc
jl
or
je
push
sbb
inc
mov
push
ficomps
jo
rcr
xor
or
leave
call
outsb
fwait
in
xor
enter
les
cs
shrb
iret
cmp
push
repz
rol
iret
or
and
or
lods
loop
add
push
stos
adc
lock
ret
es
sarb
add
sub
dec
clc
sahf
xchg
fdivr
in
add
pop
xchg
pop
adc
adc
faddl
push
adc
pop
and
push
push
int3
ljmp
lahf
push
inc
or
test
add
and
mov
pop
out
inc
or
jo
insb
aaa
test
aaa
push
movb
in
jl
xchg
adc
push
cmp
or
cli
pop
push
mov
js
loop
stc
lods
xchg
fistl
mov
enter
jg
sti
jnp
sub
add
sub
sub
es
ljmp
and
add
sbb
sbb
push
adc
push
and
adc
adc
push
imul
or
pop
push
add
cmp
add
xchg
fstps
int3
fdivs
mov
fnstcw
dec
loopne
push
add
cmpsl
jge
aam
jo
loopne
cwtl
ds
repz
roll
rcl
jl
imul
mov
repz
in
movsl
data16
repz
call
jl
cmpsl
stc
in
lret
das
lock
scas
cmp
shll
mov
imul
xor
in
fmull
outsb
jge
push
hlt
or
hlt
hlt
leave
sbbl
xor
nop
and
nop
in
in
in
pop
jb
es
sub
call
out
mov
pop
jb
xor
in
fiaddl
in
jl
loopne
or
and
xor
fsubrl
nop
and
addb
pop
jb
fcomp
inc
cs
mov
cltd
inc
xchg
aam
cwtl
nop
sbb
movsl
push
rcl
mov
movsb
pop
int3
add
xchg
add
int3
jb
xchg
data16
enter
and
mov
in
les
jo
xor
aam
cmp
jb
es
mov
xor
mov
int
mov
mov
xchg
enter
mov
mov
enter
add
pop
enter
jne
pop
sbb
jge
xchg
adc
lea
ret
or
sbb
xor
sbb
pop
movsb
nop
sbb
iret
sub
aas
adc
mov
dec
and
inc
or
cmp
cwtl
pop
repnz
xchg
iret
push
xor
pop
nop
enter
mov
nop
nop
jb
aas
adc
xor
jo
mov
orl
pop
repnz
xor
enter
test
enter
adcb
xor
test
and
and
mov
xchg
add
movsb
repnz
add
add
dec
push
je
jb
xchg
out
jo
jo
sbb
mov
pop
inc
aaa
sub
addr16
adc
push
jb
push
sbb
cmp
in
fs
pusha
sub
dec
in
and
mov
enter
pop
cwtl
sbbb
stos
fs
scas
fs
pop
pop
or
movsl
cmp
enter
scas
mov
push
push
and
out
and
dec
sbb
push
xor
dec
xchg
shlb
and
dec
cmp
inc
and
nop
inc
mov
mov
dec
add
inc
cmp
push
jo
xor
add
cmp
cmp
repnz
pop
cmp
cmp
dec
push
movsb
sub
cmp
xor
sbb
pop
leave
xor
js
push
movsb
repnz
push
sahf
and
xor
subl
nop
sub
sahf
and
dec
sub
sub
sbb
test
ds
dec
push
and
leave
adcl
sbb
pop
sbb
sbb
dec
push
movsb
aas
sbb
adcl
sbbb
fmuls
movsb
repnz
push
sahf
and
adc
or
sbbb
or
movsb
repnz
or
sahf
and
dec
or
add
movsb
pusha
jmp
add
add
add
add
nop
out
inc
adc
cld
pop
leave
mov
cld
incb
push
jns
and
mov
sub
add
in
add
xchg
sbb
and
lock
push
jns
inc
mov
daa
in
lods
push
jb
in
cmpb
inc
jb
ja
or
data16
push
idivl
push
in
subb
jo
and
movsl
push
fwait
xchg
and
xor
fmull
leave
adc
int
icebp
pop
pop
and
fsub
pop
nop
test
fcompl
push
loopne
jbe
xchg
cmp
or
fadds
jb
adc
aam
sbb
enter
out
int3
mov
in
ror
jmp
enter
shrb
mov
and
pop
adc
push
test
sbb
rorb
add
mov
enter
jo
daa
add
jbe
and
sbb
mov
dec
cmpsb
nop
rclb
shlb
mov
mov
add
xchg
and
mov
mov
enter
jbe
pop
or
inc
push
nop
add
negl
in
add
jbe
and
scas
lds
sub
lods
ret
or
test
pop
inc
mov
push
dec
jmp
lret
lea
sbb
das
ret
insl
dec
sub
movsl
pop
pop
or
mov
mov
ret
fisttps
cmp
push
sar
sbb
hlt
add
jne
add
in
add
subl
mov
or
rorb
in
test
nop
and
lgs
cmp
les
fucomi
add
pusha
insb
shlb
adc
pop
push
je
or
push
mov
iret
rorb
rclb
js
jne
call
mov
test
outsl
adc
gs
sarb
daa
mov
jne
adc
test
push
or
lock
pop
or
inc
or
loopne
xor
fsubrs
fsubr
in
sbb
sbb
dec
push
das
jne
inc
je
icebp
cltd
lods
addl
add
xor
pop
and
mov
aad
jl
mov
call
add
mov
mov
mov
out
int
mov
inc
scas
or
cmp
mov
insb
and
and
addr16
jb
or
or
jae
in
pop
add
jae
xlat
repz
adc
cltd
pushf
out
inc
mov
inc
jne
outsl
insl
ret
inc
mov
push
gs
and
daa
movsl
mov
aas
dec
mov
push
and
adc
jle
aas
pop
imul
jo
jb
adc
mov
mov
and
add
xor
mov
insb
jo
imul
gs
insb
popa
jae
xor
pop
mov
xor
loope,pt
shrl
outsb
ret
fsubr
and
pop
add
fnsave
iret
mov
jns
fisttpll
mov
add
xor
push
mov
mov
mov
jne
imul
aad
cs
mov
add
or
into
and
in
push
mov
adc
ret
popa
mov
rcrb
push
andb
mov
xchg
dec
push
aas
in
mov
push
push
inc
jle
out
mov
js
sub
inc
adc
outsl
icebp
mov
out
negl
inc
xchg
inc
rcl
jne
testl
dec
cltd
jbe
outsl
add
mov
or
dec
add
adc
ret
clc
outsl
pop
mov
adc
iret
faddl
and
sub
mov
fnsave
pop
out
jmp
test
xchg
push
pop
adc
pop
push
outsb
cmp
enter
adc
loop,pn
dec
or
rorl
jmp
mov
in
push
mov
clc
push
rcrl
fdivrs
lea
mov
cmova
or
mov
cld
insl
or
fmuls
jb
xchg
enter
xchg
lret
int3
mov
leave
cmp
lret
pusha
dec
rorb
enter
or
pop
ja
das
sbb
pushl
inc
adc
add
nop
clc
mov
mov
xorb
fdivs
pop
clc
or
test
and
jecxz
lods
ret
sbb
xor
lahf
mov
xor
stos
pop
mov
mov
pop
dec
lock
inc
xor
jns
in
inc
jb
push
arpl
movb
shll
popf
adcb
mov
dec
mov
add
jo
jo
cmpsl
scas
mov
add
test
dec
and
ret
adc
inc
adc
cwtl
imul
and
movsb
jecxz
jno
inc
imul
mov
pop
inc
pop
inc
ja
rcll
adc
mov
filds
mov
out
push
cmp
dec
add
daa
push
add
fisubs
or
leave
aam
insb
add
insb
jo
mov
roll
test
cmpl
lcall
or
push
mov
call
xor
idivb
add
subb
pop
cmp
adc
or
dec
out
add
cld
inc
cmp
push
arpl
insb
insb
inc
mov
push
inc
outsl
outsb
je
jb
push
pop
ret
sahf
add
loop
push
testl
dec
iret
jne
jb
add
shll
call
sub
push
pop
xor
lds
rclb
call
int3
fs
test
mov
nop
mov
xor
inc
repnz
ja
push
mov
dec
inc
pop
pop
or
xor
cmc
dec
in
dec
add
pop
add
or
pop
push
movsl
push
sbb
inc
lahf
xchg
push
lea
jbe
addb
dec
push
pop
or
jmp
pop
inc
push
pop
or
push
repz
jo
push
stos
push
andb
aad
inc
sub
lea
arpl
ret
in
fdivrl
roll
sub
and
popa
aaa
push
push
lahf
xchg
jge
pop
stos
out
sub
or
add
and
adc
jns
inc
arpl
lahf
iret
stos
xor
mov
xor
xor
testl
mov
fsubrs
add
jle
mov
fstl
fmull
cli
fst
fstl
enter
inc
xor
rorl
jecxz
fcompl
inc
mov
aaa
inc
sahf
adc
xor
stos
mov
out
mov
lea
lahf
mov
and
cmpsb
jb
dec
pop
jecxz
lret
lahf
ret
pop
shlb
add
aas
and
xchg
andb
xchg
jl
mov
mov
scas
add
sub
movsl
fidivl
aaa
pop
xchg
mov
and
add
push
dec
test
mov
mull
ja
lahf
adc
or
mov
arpl
test
adc
nop
filds
and
in
push
xor
jge
jb
cmp
inc
push
in
ljmp
add
shr
inc
lock
cli
popa
sub
cmp
pop
jne
sbb
aad
inc
adc
lahf
std
cmpb
jbe
adc
sbbb
jmp
lods
fucomp
add
adc
push
dec
and
leave
std
std
pop
clc
and
cld
cld
incl
sbb
or
out
jecxz
pop
lcall
xchg
cmp
adc
jmp
xchg
adc
cli
test
incb
and
js
ljmp
fnsave
imul
add
jle
je
dec
and
nop
inc
lcall
lcall
and
push
cld
rcll
cmp
sub
lea
lock
mov
dec
in
xchg
clc
mov
add
or
or
in
adc
push
es
scas
insb
imul
popa
and
arpl
int3
and
clc
mov
push
pop
add
adc
and
stos
lea
lahf
mov
out
mov
adc
and
cli
or
mov
hlt
xchg
fbld
call
jmp
mov
fs
aad
sbbl
or
out
sbb
ss
mov
add
ss
dec
adc
out
jmp
sbb
pop
jmp
inc
aam
add
cmp
mov
lret
je
sub
je
sub
es
in
clc
jne
cmp
clc
out
pop
cmp
lahf
daa
imul
dec
cmp
loopne
iret
jbe
aas
jmp
ja
test
xor
out
cmp
xor
call
cld
push
arpl
mov
movlps
add
jno
sbb
dec
inc
or
hlt
incl
sahf
ficomps
inc
add
adc
mov
leave
mov
rcr
adc
movb
aas
enter
cmp
leave
xor
int
lret
aaa
int3
cmp
int
cmp
cmp
cmp
cmp
cmp
sarl
sarl
xor
or
add
add
repz
add
add
repz
loopne
loope
dec
repz
loop
jecxz
in
xor
repz
or
or
repz
call
repz
ljmp
dec
repz
adc
adc
repz
lock
icebp
sbb
xor
repnz
sbb
sbb
repz
sbb
sbb
repz
pop
jmp
cmpsl
jns
data16
and
and
lcall
add
add
es
daa
pop
sub
sub
sub
lcall
or
or
cs
das
wrmsr
cmpsl
jns
cmpsl
adc
adc
adc
xchg
mov
int3
dec
out
jno
rclb
ret
add
stos
sbb
inc
pop
cld
in
jmp
jmp
movl
or
outsb
push
lods
imul
or
pusha
lods
test
adc
addb
aam
fbstp
loopne
adc
mov
jb
xor
lahf
xor
and
add
test
pop
mov
push
or
xor
mov
mov
out
push
ljmp
mov
lock
jl
mov
call
and
out
mov
adc
ret
or
pop
adc
mov
test
adc
cmpsb
cmp
imul
out
mov
jns
scas
nop
adc
add
mul
addb
pusha
out
aas
pop
rorb
xchg
lock
in
std
idiv
test
je
xor
cmp
jne
sbb
sbb
mov
ficoms
or
jmp
push
sub
fistl
add
cmp
pop
roll
or
in
shl
xor
push
and
adc
imul
arpl
and
cs
mov
add
sbb
popa
negl
ja
mov
iret
fidivs
jns
add
add
outsl
xor
and
nop
dec
pushf
cmp
jbe
pushf
nop
add
add
adc
sbb
push
ds
repz
shlb
push
mov
test
sbb
pop
imul
or
or
cmpsl
fnstcw
sub
test
clc
adc
pop
divl
pushf
outsl
or
sub
lahf
idivb
pop
inc
sbb
jl
adc
rcr
ja
push
sub
push
adc
test
hlt
loopne
mov
inc
mov
or
inc
xor
into
lahf
pop
sub
pop
sbb
in
out
orb
dec
xor
or
pop
push
in
adc
cmp
add
in
mov
dec
add
push
fs
nop
mov
movsl
sub
jecxz
clc
sub
dec
inc
dec
rolb
inc
call
or
fidivs
adc
outsl
sbb
ja
or
sub
or
jo
add
xchg
dec
aam
in
test
cmp
js
xchg
xor
in
pop
or
push
adc
jg
cmp
sar
jns
adc
add
je
in
pop
cmpsl
hlt
push
in
mov
call
push
adc
dec
pop
pop
out
test
dec
xchg
pop
popf
or
push
faddl
jmp
pop
jge
mov
in
in
jle
call
inc
cmp
jne
call
jnp
jge
dec
outsb
pop
outsl
lcall
fadds
shr
pop
xor
nop
adcb
aas
ret
gs
movsb
mov
dec
fdivs
repnz
mov
cmp
je
lods
addl
and
ds
pop
jno
pop
cmp
jg
add
push
popa
jge
add
shlb
outsb
loope
xchg
push
jecxz
jne
int
jmp
js
mov
jbe
arpl
test
enter
repnz
cmp
in
dec
mov
pop
fcomps
add
daa
and
out
cmp
incl
imul
mov
call
push
sub
outsl
inc
jne
data16
sub
jnp
pop
and
js,pt
mov
sub
les
dec
cwtl
mov
adc
mov
inc
popa
jo
arpl
jns
sbb
cmpsb
addr16
pop
dec
outsl
ja
aas
xchg
in
push
js
or
vmread
mov
mov
push
push
imul
and
or
push
into
sbb
aam
sti
wbinvd
in
fnstsw
fs
in
orl
fdivs
cmpl
mov
and
ret
clc
mov
test
in
repnz
pop
and
arpl
pop
add
mov
das
and
push
mov
inc
lock
dec
xchg
mov
aam
testl
sub
clc
sub
aas
cmc
psubsb
mov
add
fisttpll
sbb
push
pop
fistpl
cmp
and
sub
fildl
aas
push
sbb
xchg
roll
inc
jle
sub
mov
dec
pop
fucomi
sub
adc
jle
add
rcrl
cmp
in
and
add
cmp
sub
sarl
sub
mov
in
add
add
mov
jl
adc
cs
movq
fistps
xor
pusha
pop
adc
inc
xor
or
push
adc
mov
leave
das
adc
and
ja
mov
mov
and
push
je
outsb
popa
lds
sbb
test
inc
or
rorb
cltd
sub
cmp
xor
nop
or
sub
movsl
es
adc
push
clc
lods
cmpsb
add
call
inc
fildll
hlt
add
mov
roll
cmp
pop
xor
test
fidivl
xor
mov
adc
jmp
cltd
ds
jl
adcl
outsb
pop
jle
cli
adcb
fidivrs
dec
lock
or
jmp
mov
adc
aam
adc
dec
jo
sub
aam
aam
pop
push
adc
mov
sub
pop
fs
cwtl
lock
jp
push
lcall
hlt
jb
insl
jne
and
xchg
mov
ror
jmp
pop
mov
adc
int
adc
sub
lret
shlb
aam
cmp
mov
cmp
fldenv
and
fst
inc
pusha
mov
xchg
sbb
jmp
push
sub
inc
sbb
neg
xor
movsl
xchg
jmp
mov
sub
into
fcomps
jnp
les
faddl
jg
adc
cmp
jns
add
aam
les
and
femms
dec
rolb
pop
add
add
je
xchg
push
lods
adc
lock
and
test
push
mov
dec
jno
enter
sbb
sub
das
sbb
mov
daa
jae
jne
arpl
int3
or
inc
xchg
mov
fcompl
sub
sub
sub
enter
or
or
or
adc
rcrb
add
outsb
enter
insb
cmp
or
fwait
roll
pop
ljmp
jae
icebp
cmp
clc
or
push
sbb
jg
push
add
out
pop
psraw
sub
lea
adc
testb
adc
dec
and
out
mov
addb
sbb
xchg
jg
inc
pop
lods
iret
pop
adc
mov
adc
addl
mov
adc
sub
and
cmp
outsl
ja
insl
iret
and
sbbb
xorb
push
imul
xor
enter
mov
sub
and
mov
inc
fildll
fmull
inc
stos
mov
mov
lret
cmp
int3
enter
sbb
in
lods
pop
clc
cmpl
out
pop
scas
adc
rorl
in
and
shlb
lock
jge
clc
das
pop
leave
cmpsb
xlat
je
xchg
das
adc
jecxz
int
pusha
push
mov
movsb
jb
adc
mov
mov
ja
outsb
addr16
mov
lds
mov
ss
aas
cmp
add
cmp
dec
jne
fs
lret
push
dec
push
sbb
arpl
popa
and
pop
jno
inc
shlb
data16
cmp
notl
outsl
fucomp
ret
test
xchg
popf
add
sbb
adc
sbb
mov
insl
clc
cltd
xchg
mov
in
clc
mov
aas
mov
mov
adc
lret
dec
aaa
xlat
cwtl
adc
push
and
and
aaa
sbb
adc
xor
push
in
movups
xor
jg
imul
mov
shlb
adc
das
mov
test
mov
add
mov
rcll
insb
ficoml
sbb
adc
std
movsl
xor
xchg
push
sub
add
jecxz
mov
mov
iret
jle
mov
jp
jns
ljmp
inc
pop
adc
shrb
add
sbb
cmp
inc
in
inc
mov
mov
jmp
sub
cmp
mov
xchg
sub
mov
dec
sub
jnp
xor
adc
jge
imul
add
leave
sbb
and
loopne
test
push
out
ljmp
movl
cwtl
lock
sbb
call
xor
imul
lret
call
scas
sti
cld
movl
call
jle
ret
in
push
sbb
adc
cwtl
adcl
add
inc
es
addr16
push
test
cs
jb
push
test
cs
das
addb
bnd
insb
insb
push
jns
gs
clc
mov
push
inc
push
push
movsb
shrb
inc
or
dec
xor
push
lret
push
add
sbb
fcmovnbe
push
xor
faddl
adc
inc
add
pop
or
and
cld
xchg
xor
out
add
je
push
jo
adc
enter
xchg
js
add
pop
or
rcrl
mov
cmpsb
loopne
jecxz
lcall
cs
les
shr
dec
inc
push
push
inc
push
inc
jecxz
sbb
sub
lock
xor
or
rcrl
sub
add
jl
dec
push
pop
nop
and
or
fdivr
cld
add
pop
sahf
pushf
add
leave
test
jl
xchg
push
and
subb
xchg
lret
dec
push
nop
and
inc
cs
mov
mov
movsb
sub
std
adc
lods
and
sbb
adcl
push
out
fsub
push
fldl
add
pop
bound
in
or
inc
mov
add
or
jnp
jg
xchg
das
inc
push
xor
xor
pop
sub
jl
nop
mov
dec
jo
xor
push
dec
inc
push
movsb
sub
int3
add
push
inc
insl
fs
pop
imul
sub
arpl
std
push
jo
cmpsb
outsb
addr16
sbb
imul
les
gs
push
scas
cmp
mov
pop
int
sub
outsb
popa
insl
cmp
dec
gs
imul
leave
in
outsl
ja
sbb
or
and
cmp
test
mov
xor
test
or
jge
dec
in
jge
mov
mov
jne
test
je
push
adc
cmpsb
or
mov
mov
mov
adc
or
fiadds
and
pop
cld
jbe
scas
add
xchg
cmc
and
and
popa
imul
adc
add
pop
mov
pop
inc
outsl
outsl
or
xchg
leave
push
test
jae
out
add
fistpl
push
jne
mov
push
sbb
fisttpll
nop
mov
push
push
xor
xchg
xor
lods
xor
mov
push
dec
dec
dec
pushf
push
pop
pop
std
sbb
nop
and
and
fcoml
push
fdivl
add
rorl
les
pop
jns
outsb
daa
sbb
inc
mov
push
divl
push
push
je
push
neg
jnp
lods
push
fdivl
push
mov
pop
shl
fstpt
xor
rcr
enter
sub
cvttps2pi
jae
jb
nop
cwtl
push
shrb
ds
ja
sbb
scas
jl
push
and
loopne
add
je
subb
pop
add
fists
arpl
je
arpl
dec
enter
cmp
xor
or
ret
push
ljmp
push
and
lcall
cld
ret
mov
add
ret
jmp
jno
pcmpeqd
out
out
jo
push
pop
pop
add
ret
nop
or
inc
sub
jge
loope
or
inc
inc
sub
jo
enter
je
sahf
dec
sarb
cmp
loopne
stc
adc
adc
popf
mov
inc
inc
pop
adcl
adc
adc
fistps
pop
fwait
adc
inc
xor
jne
lods
lods
push
cld
outsb
push
stos
pop
dec
gs
sahf
dec
fiadds
pusha
pusha
pusha
test
movsl
in
mov
sbb
cs
mov
pop
enter
pop
inc
dec
dec
sbb
mov
push
mov
or
test
stc
inc
sahf
js
sbb
adc
dec
push
inc
jne
add
les
and
imul
push
add
mov
and
fdivrs
rcrl
cmp
ja
jbe
mov
aas
inc
ja
inc
push
and
xor
xor
aad
sbb
pop
imul
mov
push
lds
cmp
push
or
cwtl
mov
test
inc
push
fists
xchg
nop
and
in
or
xchg
dec
xchg
and
pop
test
cwtl
lods
cmpl
sahf
imul
dec
mov
lock
jge
in
mov
mov
and
pop
inc
adc
pop
sbb
add
call
add
or
aaa
jo
adc
fisttpll
or
test
adc
ret
ja
fidivrs
mov
clc
cmpb
jne
and
pop
cmp
jge
dec
ret
in
pushf
call
test
jo
adc
or
leave
ja
das
addb
loopne
mov
pusha
cmp
ljmp
jne
inc
dec
cld
inc
inc
mov
jl
push
dec
or
jmp
std
jl
sub
mov
xchg
sarl
sbb
sarl
add
mov
dec
add
fistpl
inc
outsb
pop
test
sub
add
mov
xor
enter
pop
mov
movsb
pop
out
out
jbe
pop
cmp
lea
push
dec
mov
inc
and
adcb
adc
nop
or
mov
clc
push
jmp
cmp
addb
adc
xchg
dec
or
mov
inc
xchg
dec
jne
push
jecxz
mov
test
stos
es
xor
cmpsb
push
je
xor
pop
add
decb
and
fmull
imul
push
lock
in
sub
lock
lahf
pop
leave
call
push
xchg
mov
in
in
and
loopne
loopne
cs
in
add
popa
and
mov
aaa
add
xor
cmp
xchg
add
cmpsl
xor
outsl
and
aad
movsb
out
and
add
push
sub
mov
enter
in
out
std
pop
add
add
add
and
push
dec
out
mov
add
sub
add
sub
pop
add
sbb
mov
jns
and
push
dec
out
xchg
sub
and
add
cs
add
cs
out
pop
add
or
jp
add
and
push
dec
out
subl
xor
push
add
dec
loopne
leave
jg
add
mov
outsb
sbbb
inc
mov
cld
adc
mov
push
or
jmp
leave
xor
push
bound
test
lahf
push
xchg
in
mov
cwtl
jg
xor
stos
nop
add
cmp
mov
jg
xor
dec
cmp
rorb
hlt
xor
mov
andb
lods
popl
dec
out
jnp
test
imul
fisttpll
idivl
movl
push
mov
movl
iret
push
push
push
dec
add
cmpsb
pop
dec
jb
sti
pop
mov
enter
pusha
and
or
push
push
adc
pushf
roll
mov
adc
sarl
pop
rcll
xor
aas
jbe
pusha
push
or
rcl
mov
testb
cmpw
sbb
add
cmp
fisttps
decl
sub
adc
test
movsb
sbb
xor
mov
gs
push
dec
add
rclb
add
jl
cmpsb
cmp
loopne
adc
repz
leave
mov
and
imul
add
stos
push
fidivrs
je
mov
mov
jl
xchg
js
add
sbb
mov
out
enterw
mov
clc
out
call
xor
add
jmp
xchg
pop
push
add
nop
in
mov
enter
fisttps
fisttps
sub
pop
ret
pop
xor
pop
gs
loope
push
test
or
pushf
add
js
dec
in
inc
jb
je
dec
je
mov
fisubrs
insb
in
mov
pushl
je
pop
ficoml
sub
inc
call
pop
jmp
adc
adc
in
and
mov
xchg
sbb
push
je
mov
mov
pop
adc
dec
fsubl
inc
fdivs
push
leave
rorb
mov
aam
aas
push
fs
loop
add
ljmp
jbe
in
adc
out
or
cmp
push
adc
imul
out
cmp
lret
push
cmp
notl
pop
push
push
inc
push
fldt
test
pop
insb
push
pop
push
xor
mov
inc
dec
push
testl
pop
lahf
imul
das
gs
push
sub
mov
jno
push
fnsave
lods
repnz
subb
inc
leave
sbb
sbb
jne
movb
push
sub
add
fsubl
leave
les
sbb
outsl
xchg
dec
in
in
in
in
sti
cmp
sbb
outsl
push
add
dec
push
dec
loopne
call
jle
clc
mov
push
sbb
xor
xor
or
sub
mov
stc
popl
in
stos
shl
mov
xchg
and
imul
and
sub
lea
mov
jl
rorb
jne
fistl
les
jmp
cmp
add
or
repz
push
lcall
xor
pop
push
dec
xchg
cwtl
jl
in
dec
push
dec
inc
stos
nop
mov
flds
pop
inc
push
inc
sbb
cmpsl
call
dec
inc
aas
dec
dec
repz
pop
push
dec
add
jge
cltd
or
cmp
pop
xor
iret
loope
cmp
and
roll
sub
shll
dec
cld
push
or
scas
inc
aam
int
mov
sbb
das
xchg
andb
call
and
ds
cld
or
cmpl
add
mov
arpl
cmp
xchg
pop
lock
out
and
clc
mov
out
data16
cld
icebp
or
mov
leave
andl
adc
push
hlt
and
pop
enter
mov
xchg
sub
pop
adc
dec
adc
shlb
imul
sub
fsubr
rolb
lock
mov
push
dec
inc
push
push
dec
incl
aas
mov
sub
add
nop
sbb
in
add
fbld
das
stos
inc
dec
inc
fistps
mov
pop
push
inc
out
ret
jg
jge
lret
xor
jns
or
shlb
movsb
and
jbe
lret
cmp
mov
jb
and
sbb
mov
add
in
mov
adc
sub
dec
les
sbb
lea
cmp
add
dec
xorb
push
push
pop
sub
not
pushl
fsubr
es
dec
adc
insb
mov
loopne
adc
ror
int3
aam
loopne
daa
xor
addr16
test
pop
jnp
lcall
or
push
adc
adc
andl
pop
and
mov
negl
mov
add
pusha
mov
inc
pop
pushf
push
mov
push
add
sbb
pop
xor
loop
or
xor
movzwl
xchg
dec
sbb
inc
pushfw
inc
cmp
sbb
cmp
hlt
sub
cmp
dec
xchg
pop
ret
in
mov
sbb
xor
mov
push
xlat
mov
popf
mov
inc
xchg
out
inc
stos
xor
cmpsb
dec
rcll
sbb
jge
jmp
push
push
mov
pop
or
jp
add
push
inc
pop
aad
mov
or
sbb
mov
call
push
mov
mov
inc
enter
decb
push
push
icebp
and
push
push
dec
push
insb
xor
ss
mov
and
and
xchg
sub
nop
add
sbb
enter
cmpsl
in
nop
test
ret
pop
push
rorb
les
push
adcl
sub
lods
and
nop
or
js
frstor
jo
repnz
js
jmp
nop
in
dec
and
aam
pop
enter
in
adc
ss
icebp
push
in
and
popa
dec
push
cwtl
and
push
out
adc
punpckhbw
jg
sbb
sub
enter
xor
dec
xor
or
xor
add
outsl
mov
clc
adc
xchg
fucom
repz
mov
push
push
mov
shrl
xchg
ljmp
loope
xchg
add
jno
cmp
jge
push
push
adc
adc
xorb
jno
dec
and
dec
pop
inc
sub
add
adcl
flds
mov
es
xchg
mov
repz
lcall
push
add
cs
sub
push
sbb
stos
hlt
fidivrl
ljmp
mov
loopne
push
xchg
lea
pop
in
pop
test
add
mov
push
fsub
filds
shl
add
xor
adc
cwtl
arpl
popa
arpl
add
mov
dec
cmp
push
cmp
inc
push
aam
inc
mov
fdivrs
mov
mov
inc
mov
add
mov
out
movsl
and
cwtl
adc
adc
cwtl
int
mov
test
int3
mov
add
cmovle
jns
add
jne
pop
and
and
lock
leave
xchg
and
push
pop
and
cs
pop
mov
adc
xor
mov
adc
and
movsb
popf
rcrl
cs
xchg
mov
and
repnz
inc
adc
xor
dec
loop
or
clc
add
jge
mov
hlt
incl
sbb
std
ljmp
movl
inc
adcb
nop
addr16
jae
inc
inc
push
insb
adcb
push
mov
lock
inc
test
pop
rorb
inc
jg
adc
dec
or
mov
or
sbb
popf
xchg
clc
mov
in
testl
lar
or
adc
sti
add
popf
and
or
xlat
shl
xchg
jl
pop
push
push
push
dec
dec
pop
push
sub
add
cltd
mov
jns
shrb
dec
push
add
sub
xor
lahf
ss
push
cmp
das
and
xchg
dec
jle
xlat
push
add
dec
shrl
add
pop
aas
sbb
inc
inc
xchg
or
or
xor
and
data16
enter
inc
inc
mov
or
fwait
xchg
shl
push
notb
push
jmp
sbb
sub
loopne
dec
pop
sbb
dec
or
enter
sbb
and
xchg
push
in
mov
aas
inc
lock
data16
ljmp
inc
or
mov
fdivrs
push
sbb
popa
and
add
cmpsb
dec
push
shlb
inc
cmp
push
enter
sbb
roll
adc
push
adc
or
in
add
push
shlb
rorb
pop
rclb
add
cmp
mov
pop
push
test
cmp
cmp
pop
rclb
mov
add
push
cmpsl
mov
repnz
xorl
adc
sub
ljmp
dec
mov
or
or
adc
dec
cmp
inc
mov
stos
fs
popa
xchg
cmp
push
stc
movsl
or
xor
add
ret
ret
jne
jns
push
or
or
push
jno
add
lahf
push
dec
lcall
cmp
or
or
icebp
fcompl
and
sbb
inc
icebp
pop
cmp
and
cltd
in
rcl
aam
dec
pop
rolb
sbb
cmp
in
int3
dec
xor
push
pop
les
or
and
icebp
rcrb
dec
cmpsb
or
enter
enter
test
or
or
pusha
popf
pop
mov
push
add
xchg
add
mov
daa
mov
cs
dec
jb
fcoml
mov
mov
test
arpl
jge
mov
xchg
int3
jns
jge
mov
mov
xchg
or
cwtl
pushf
arpl
insl
leave
pushf
notl
xchg
pop
mov
mov
mov
push
or
add
rcrb
stos
or
leave
mov
fnop
fnstenv
xor
adc
sub
pop
sbb
or
rolb
gs
loope
and
push
mov
nop
push
adc
std
and
clc
pop
and
xlat
mov
cmpsl
mov
or
mov
inc
push
mov
and
cwtl
test
mov
shlb
movsb
push
in
movsb
mov
xchg
push
enter
addr16
or
or
imul
repnz
mov
orl
loopne
dec
push
add
push
mov
sbb
int3
int3
push
roll
bound
rclb
jb
or
sbb
les
sub
push
inc
mov
push
and
add
jne
orb
imul
addr16
hlt
cmp
dec
stos
cmp
dec
pop
jns
jb
adc
mov
and
xor
and
or
pusha
xor
mov
or
js
sub
daa
push
xor
or
test
push
lds
inc
push
push
scas
jge
mov
rcr
mov
rcl
dec
test
push
push
and
push
sbb
xchg
cmpsl
popa
adc
dec
je
add
mov
nop
adc
adc
test
push
imul
ret
mov
xchg
or
gs
daa
cmp
inc
add
and
je
jae
or
push
js
push
outsl
lret
cmpsl
adc
jmp
pusha
test
clc
leave
inc
mov
dec
inc
test
cmp
sarl
leave
mov
outsl
add
and
aaa
loop
inc
rclb
add
adc
or
nopl
stc
add
insb
cwtl
outsl
jmp
push
mov
fs
mov
lods
andb
mov
cmp
mov
add
mov
shll
xchg
sbb
loopne
nop
pushf
sub
lock
mov
mov
outsl
test
push
xchg
cmp
lods
sub
lock
andb
inc
sub
jg
adcl
test
push
adc
add
addr16
jb
jb
orl
or
xchg
insl
jbe
or
push
mov
pop
jno
jno
nop
push
enter
jbe
inc
mov
or
xchg
inc
shlb
orl
mov
push
jb
xor
pop
and
dec
ret
cmp
cmp
or
inc
pop
add
ret
fldl
dec
dec
ret
jbe
and
or
push
and
jbe
dec
adcb
clc
add
push
push
inc
pavgw
nop
idivl
xor
shll
xchg
icebp
mov
mov
addb
sub
outsl
dec
int
xchg
or
and
sub
mov
cmp
mov
mov
push
pop
inc
pop
dec
or
push
rolb
stc
or
adcl
cmpsl
xor
push
test
inc
test
les
xchg
out
in
call
adc
inc
mov
faddl
lcall
jae
pop
or
jle
inc
add
add
mov
mov
xor
xor
rorb
cmp
cmp
inc
pop
or
fs
insb
pop
aad
lock
and
outsl
jmp
int
lock
xchg
loopne
pop
int
sbb
mov
jmp
xchg
xor
inc
add
and
fcom
aam
lahf
cmp
leave
hlt
add
fabs
jle
imul
test
dec
aad
pop
inc
pop
push
add
inc
incl
xor
pop
or
outsl
mov
nop
dec
lock
jp
pop
sbb
xchg
sub
out
lcall
inc
mov
pop
sub
repz
xchg
lock
dec
stos
mov
cmpsb
xchg
aad
sbb
dec
aam
and
add
sbbb
loopne
fdivl
sbbl
enter
ja
int
mov
ret
pop
enter
mov
mov
jg
xor
in
nop
in
sbb
out
mov
jne
inc
outsl
pop
and
fistl
rorb
aam
ret
xor
jecxz
mov
jne
cmp
or
cmp
in
test
mov
sbb
scas
mov
je
sbb
enter
mov
dec
pop
gs
jl
out
jnp
mov
jns
push
lcall
decl
or
sub
test
enter
leave
and
clc
repnz
adcb
js
stos
jg
sub
loopne
pop
or
or
or
sbb
bound
movsl
aam
or
or
mov
pop
dec
dec
pop
dec
push
jo
xor
mov
add
addr16
inc
dec
dec
inc
test
lock
sub
jle
push
add
lock
xor
mov
lock
cmp
dec
insb
ret
lahf
pop
xchg
movsl
daa
add
xchg
cmpl
add
pushl
mov
lock
movsb
mov
loopne
jae
push
in
mov
jo
loope
addl
out
mov
leave
aad
dec
aad
lods
jl
or
cmpl
cmp
cmp
jnp
push
sub
push
or
push
push
dec
dec
dec
push
dec
cmp
dec
jp
pcmpeqd
scas
jne
fiadds
push
push
or
das
inc
push
pop
sar
dec
dec
push
inc
or
sti
into
in
sub
adc
push
inc
inc
inc
mov
push
push
jl
or
push
pop
push
add
js,pt
or
or
push
adc
loopne
pop
sub
or
cs
leave
push
dec
dec
dec
je
mov
subl
mov
jae
insb
je
add
imul
inc
je
loope
imul
fcompl
add
push
and
and
enter
jl
jo
les
fcoms
das
or
mov
add
pop
or
adc
sbb
add
test
sbb
outsb
outsw
pop
aas
pop
or
push
andl
fdivl
xlat
adcb
adc
dec
sbb
fs
sub
or
das
push
lock
dec
addr16
insl
dec
or
pop
pop
repnz
lret
imul
inc
jo
dec
adc
add
rcl
cld
fiaddl
int
pop
inc
scas
addl
incl
adc
add
or
push
dec
fwait
cmpl
push
adc
nop
jo
adc
aaa
adc
xchg
xchg
dec
xor
xchg
and
xchg
fldt
pop
cmp
data16
adc
sub
in
nop
sbb
xchg
xchg
push
xor
je
push
mov
push
or
xchg
sbb
test
fmull
enter
jnp
xchg
notl
xchg
xchg
outsb
adc
xchg
xchg
xchg
and
xor
xchg
xchg
xchg
xchg
cmp
dec
dec
xchg
xchg
xchg
xchg
push
push
pop
pop
push
inc
xchg
xchg
pusha
xor
push
jmp
pop
lea
mov
pop
sbb
adc
sbb
push
sti
and
sub
incl
inc
sbb
sti
add
outsl
fs
cmp
mov
rcr
inc
push
inc
rorb
and
shr
cltd
or
stos
or
dec
fisubl
sub
jbe
push
dec
dec
push
es
or
mov
add
popl
and
push
mov
inc
add
bound
push
outsl
ds
add
sbbl
nop
sub
push
sbb
dec
mov
movsl
subl
sub
add
add
and
mov
and
adc
inc
decl
bound
or
das
addb
or
lret
sub
jo
jo
cs
add
mov
and
mov
xchg
adc
pop
add
iret
out
adc
sbb
mov
jnp
popf
addr16
je,pn
je
mov
or
popa
stos
cs
dec
add
cwtl
adc
and
sbb
cs
nop
inc
bound
dec
or
adc
xchg
sbb
pop
fiaddl
mov
xchg
sbb
iret
mov
out
add
add
shl
xchg
dec
add
hlt
add
mov
cmp
femms
mov
and
add
mov
mov
add
mov
mov
add
push
xchg
xchg
add
lea
mov
and
test
adc
notl
mov
add
leave
xchg
scas
inc
rorb
inc
sbb
scas
or
call
xor
push
push
xchg
inc
pop
scas
and
dec
pop
into
inc
leave
aad
push
nop
push
leave
mov
nop
inc
xor
in
xchg
es
lcall
bnd
stos
testl
hlt
cmc
inc
or
js
xchg
and
or
lods
mov
xchg
aad
push
adc
fs
inc
push
fs
fs
inc
push
pusha
pop
push
lea
mov
or
in
add
cmp
loope
mov
pop
call
jl
out
mov
out
inc
jmp
inc
nop
dec
jle
inc
add
and
rcrl
or
xlat
add
pop
dec
in
jle
fldl
sub
mov
test
movmskps
popf
ret
movl
es
jns
test
add
test
add
jge
jmp
imul
lods
xchg
inc
aam
push
mov
iret
addb
sbb
add
imul
iret
mov
and
shlb
les
stos
lea
fcomip
dec
lds
jecxz
sub
sub
xchg
test
ds
inc
pop
decl
lock
sub
jge
cwtl
rolb
sbb
nop
loop
push
scas
sbb
gs
pop
push
jmp
xchg
mov
dec
jg
xor
jl
mov
add
popf
sbb
loopne
or
or
fsubs
dec
cmp
jno
mov
xchg
push
insb
loopne
lea
sti
repnz
sub
sub
or
in
mov
jecxz
sub
lods
jp
or
test
leave
fstpl
push
in
decl
testl
dec
je
push
add
outsl
arpl
mov
mov
aas
dec
adc
push
inc
iret
fld
mov
push
adcl
pop
sub
lock
xor
xchg
dec
xchg
add
notl
xchg
nop
xchg
lret
js
add
jl
xor
push
pop
imull
aad
pusha
mov
mov
test
adc
jo
adc
and
jb
aam
sbb
sahf
fnstenv
dec
sbb
xor
sub
jp
ds
inc
inc
xor
adc
ja
mov
dec
mov
das
das
pop
add
in
sbb
or
xchg
sahf
xchg
push
push
xchg
sub
jmp
xorb
mov
cmp
ja
cli
int
test
mov
mov
jns
cwtl
sti
cmp
shrl
cwtl
dec
pop
ja
and
test
and
push
inc
and
int3
fsubr
jbe
in
xchg
inc
sub
jb
gs
lahf
dec
sbb
sbb
cmp
push
push
test
jo
add
mov
pop
js
push
fs
les
jnp
in
jge
js
pop
in
inc
cld
sub
fld
cmp
push
orl
push
loopne
out
push
jnp
sbb
lahf
dec
add
mov
nop
fcomp
jae
mov
gs
adc
test
cmpsl
sbb
call
jb
sbb
dec
add
shl
subl
mov
and
rclb
push
pushf
jo
and
pop
sbb
in
add
insb
mov
dec
or
or
adc
cltd
fs
adc
adc
fisubs
repnz
jo
push
pop
and
pop
or
mov
les
and
xchg
xor
and
cmpsb
mov
rolb
ret
out
pop
test
push
dec
adc
dec
lock
push
inc
add
daa
loope
xor
xor
mov
sub
imul
xchg
sub
or
lahf
adc
sub
add
pushf
enter
push
enter
dec
ds
cmpb
orl
or
imul
mov
and
daa
push
sarb
rol
sub
jb
or
push
or
add
xor
dec
mov
ds
or
mov
and
mov
je
push
mov
test
push
mov
mov
mov
mov
in
sbb
sahf
clc
repz
or
imull
test
sbb
jecxz
mov
jno
dec
mov
sahf
cmove
mov
adc
inc
inc
inc
testl
daa
add
and
iret
push
data16
pusha
aas
cmpsb
sbb
imul
xchg
xor
sarb
inc
pop
mov
dec
mov
sahf
pop
pop
iret
testb
and
pop
and
out
pusha
lods
pop
add
mov
mov
xor
xor
sub
jae
and
gs
inc
insb
int3
in
into
pop
cmp
dec
outsl
jae
ss
add
and
fwait
aas
inc
cmpsb
imul
add
clc
and
js
das
mov
mov
jbe
fs
das
insl
add
dec
xor
imul
xchg
jl
js
hlt
data16
dec
cmp
or
push
js
insl
sbb
adc
das
shrl
jo
insb
pop
das
jo
or
adc
jae
jb
jo
pop
add
stos
push
inc
push
xor
insl
faddl
mov
pop
aaa
mov
inc
popa
jae
xor
push
jo
mov
pop
mov
xchg
fildll
adc
and
int3
cmp
and
add
int3
mov
hlt
insl
sub
mov
dec
imul
or
push
push
dec
sub
fldt
notl
mov
aaa
and
mov
mov
loop
xchg
jo
pop
rcl
mov
pop
clc
sbb
stos
adc
paddw
jmp
pop
sub
xor
test
scas
sub
mov
add
xchg
adc
shll
rclb
xchg
cmpsb
dec
jge
fcmovnbe
popf
xchg
add
mov
or
movsl
hlt
push
jb
sbb
hlt
lcall
mov
test
sbbb
sarb
popa
cmp
jp
pop
insl
jmp
stc
mov
addr16
pop
jecxz
mov
pushf
mov
or
add
mov
call
shr
jle
cld
movsl
xor
or
insb
sbb
push
xor
mov
jge
sub
and
push
rolb
rorb
aam
popa
int
andb
popa
daa
mov
ss
jo
shll
shll
cmp
mov
jnp
sbb
test
cmp
ja
dec
roll
insl
leave
pushf
sub
scas
add
out
mov
mov
popa
scas
xchg
test
cmp
lcall
jae
cmp
dec
sbb
icebp
into
inc
imul
sbb
inc
pop
pop
xor
cmp
or
xchg
enter
daa
add
xchg
mov
add
push
rclb
pusha
mov
out
xor
push
je
sbb
ljmp
mov
aas
or
sbb
loop
ret
in
fisubl
push
loope
add
bound
push
inc
push
sub
add
dec
inc
cmp
inc
das
dec
dec
inc
inc
mov
dec
pop
cmovle
jbe
fwait
lret
outsb
or
dec
outsl
out
movsb
or
xchg
sbb
jns
mov
cmpsb
push
push
ret
fsubrs
add
icebp
inc
jo
pop
or
inc
push
push
mov
mov
push
jnp
data16
jbe
sub
fbstp
ljmp
or
sarb
gs
or
cmpsb
fiaddl
sbb
outsb
outsl
add
mov
pop
push
push
pop
insl
jae
mov
dec
aaa
push
xchg
push
popa
je
jae
add
sbb
push
push
jae
mov
pop
fdivrs
imul
in
jne
bound
pop
in
adc
push
or
sbb
jo
dec
mov
xchg
cmp
dec
lahf
pop
lahf
or
or
mov
push
inc
test
nop
enter
in
dec
and
add
sub
add
insb
fwait
dec
sbb
xor
dec
jg
popa
sbb
inc
jl
out
in
pop
push
nop
enter
push
and
call
push
dec
sahf
sub
movd
and
enter
scas
inc
insb
stos
push
sbb
and
invd
fiaddl
push
rcl
icebp
sbb
push
xchg
push
mov
icebp
push
or
or
push
es
push
xlat
or
dec
sbb
xchg
xor
cs
repnz
add
loopne
push
pusha
dec
xor
mov
inc
sbb
in
mov
rcl
incl
jmp
lods
clc
fimull
nop
jo
dec
gs
movl
mov
lods
ret
add
xchg
pop
and
idiv
jp
adc
push
call
clc
or
popf
push
dec
push
or
faddl
pop
imul
cmove
sahf
xor
sbb
xchg
cs
xlat
jno
push
cmp
or
push
dec
dec
repnz
xlat
jl
in
and
inc
dec
rorb
sbb
ss
js
les
push
jne
xchg
fld
cs
addr16
pavgb
mov
fs
sbb
add
test
add
sub
ss
push
push
push
lock
pop
lock
dec
jbe
xchg
call
sub
push
inc
inc
or
adc
or
mov
cmp
fstpl
add
cmp
xorb
lock
push
addr16
fsubrs
pop
rorl
and
add
push
xor
push
add
dec
sahf
lods
repz
mov
add
les
out
adc
jne
cli
mov
cmpsl
jle
add
movsb
sarb
jb
mov
push
dec
sbb
shll
daa
and
sub
in
loope
mov
sub
jg
and
xchg
fiadds
add
stos
add
in
or
cmp
fidivrl
push
or
pop
test
jl
mov
mov
sub
dec
cmpsl
push
mov
and
or
in
inc
cmp
push
or
aas
ret
nop
aas
sarl
or
cmp
aam
dec
ret
fwait
scas
push
les
or
fistpll
fisubrs
xchg
pop
inc
scas
inc
inc
cmpsb
inc
hlt
push
add
enter
or
xor
sub
mov
ret
les
xchg
lock
aas
testb
jne
push
scas
mov
movsl
or
or
ffreep
sub
add
sub
dec
mov
dec
or
addr16
in
pop
sub
inc
push
xchg
mov
gs
aas
inc
inc
adc
xchg
xor
adc
add
mov
lods
push
ficompl
or
inc
add
pop
arpl
sub
or
sub
jbe
mov
out
out
xor
test
or
add
je
mov
jecxz
xchg
xchg
mov
cmpsb
gs
enter
dec
add
adc
addl
shrb
and
sub
xchg
inc
pusha
push
dec
mov
pop
mov
jmp
aad
gs
or
out
mov
mov
mov
add
inc
add
inc
add
add
add
inc
sbb
fldcw
sbb
and
sbbl
xchg
imul
icebp
and
mov
stos
adc
bound
xchg
xor
cmp
dec
xchg
mov
xor
insl
add
cld
cmp
mov
mov
sub
jle
icebp
lahf
pop
push
mov
in
xchg
inc
enter
dec
add
int
cmp
out
xor
dec
les
or
mov
out
pop
mov
imul
push
dec
data16
jo
mov
and
loopne
and
and
or
outsl
push
push
push
mov
dec
adc
pop
icebp
jne
insb
and
hlt
push
dec
or
add
and
pop
sub
test
js
shr
xor
dec
push
jns
mov
mov
or
leave
sbb
and
enter
cmp
sub
dec
inc
mov
pop
fmuls
push
loopne
jmp
and
cs
in
cmp
jge
dec
vpaddsb
and
nop
mov
mov
addl
mov
adc
lea
add
in
lahf
sub
movsb
adc
jmp
addr16
mov
cli
cmp
and
rol
mov
adc
push
ss
test
hlt
movzwl
sbb
jl
aaa
mov
outsb
test
cmp
popa
sbb
mov
sbb
sub
pop
mov
enter
adc
mov
xor
mov
and
aas
aas
mov
imul
and
cmp
inc
insb
mov
jge
sbb
hlt
scas
sbb
inc
push
dec
loopne
jbe
mov
adc
push
push
push
or
sbb
mov
jae
lock
mov
lahf
adc
outsb
imul
lea
inc
imul
cmpsl
roll
mov
sbb
push
jo
sub
or
int3
cmp
dec
add
add
test
mov
mov
cmp
sub
cli
or
push
sub
mov
addl
or
dec
sub
mov
js
add
cs
cmpl
dec
jne
adc
js
add
pop
sub
call
cmp
lea
mov
or
cmp
loopne
shr
sub
sbb
xor
cmp
adc
xor
loop
or
and
hlt
fsts
mov
mov
xor
test
or
cmpsl
mov
lods
jno
cmp
push
js,pn
push
loope
mov
movsl
imul
cmpsb
mov
aam
fdivrs
add
loope
lock
sbb
lret
mov
inc
icebp
call
cmp
test
sbb
cmp
push
enter
testb
and
lea
lds
adc
lds
add
mov
das
pop
push
pop
dec
adc
dec
sub
or
adc
dec
and
orb
mov
fnstcw
mov
dec
fs
pusha
mov
sarb
fwait
inc
rorl
dec
jo
jb
popf
xor
imul
pusha
mov
pop
test
pop
mov
mov
ja
add
pushf
mov
lar
xchg
and
rcl
pushf
pop
push
dec
sysret
sbb
xchg
push
pop
add
adc
or
adc
stos
mov
xchg
nop
sbbb
mov
test
inc
mov
test
add
pusha
mov
je
aam
fdivs
mov
arpl
mov
enter
sbb
movsl
dec
and
pop
mov
push
lods
add
sub
or
and
sbb
mov
push
dec
and
mov
movsl
mov
adc
add
cmp
testb
add
mov
sub
sub
daa
jno
mov
sub
mov
jmp
inc
pusha
leave
insl
fmull
aam
or
cmpb
lea
popa
jae
pop
adc
sbb
and
mov
adc
aad
rolb
cmp
icebp
dec
mov
xor
addl
and
add
add
jle
sbb
adc
das
push
nop
lret
dec
out
jns
adc
cmp
add
jbe
sub
mov
pushfw
xchg
aas
cmp
je
repnz
mov
add
decl
or
jge
sub
jb
je
dec
push
getsec
in
push
hlt
jb
jmp
xchg
adc
jb
push
out
jb
jnp
clc
ds
fdivrl
stos
add
rol
sub
imul
xlat
xlat
jecxz
adc
mov
cmp
push
mov
and
push
bnd
leave
and
adc
dec
pushf
inc
push
xor
dec
insb
test
mov
in
in
jo
adc
aaa
add
push
fsubrs
call
push
movl
adc
adc
aas
sub
jg
sbb
psrld
mov
lods
rclb
stos
int3
jns
and
outsb
icebp
mov
adc
add
push
push
loopne
loope
dec
gs
fs
add
push
adc
push
jne
dec
push
or
push
pop
sbb
mov
jl
add
pop
lods
sbb
sbb
add
aaa
aam
dec
and
lcall
testl
sarl
pop
push
inc
add
mov
push
cmp
pop
inc
rolb
loope
sub
adc
jbe
nop
outsb
inc
dec
dec
xor
movsb
inc
xor
or
fs
inc
cs
cmp
xor
inc
gs
inc
push
and
and
adc
jl,pn
mov
xor
inc
pop
dec
loopne
push
sub
cltd
or
dec
shll
inc
fisttpll
add
adc
add
in
cmp
adc
ret
mov
in
dec
xor
pop
pop
xor
xlat
daa
cmp
jmp
leave
lea
subl
inc
pop
pushl
sbb
ret
mov
xchg
mov
and
and
adc
mov
push
mov
lds
mov
mov
pop
pop
xor
xchg
or
xchg
xor
test
cmp
cmpsb
inc
clc
jne
stos
imul
les
adc
jns
pop
decb
and
dec
and
and
lcall
incb
add
push
std
add
adc
fsubrl
test
inc
add
cli
inc
stos
imul
dec
cmp
pop
push
dec
daa
xor
and
add
pop
push
dec
jecxz
dec
sbb
xor
add
lret
jne
je
xor
ret
xchg
add
cs
jl
sbb
inc
sbb
jns
int
sahf
data16
jl
sbbl
ret
nop
in
pop
xor
in
xchg
mov
and
hlt
mov
rolb
insb
sahf
add
dec
xchg
xor
cmp
fwait
jp
mov
sub
psubw
add
mov
imul
push
rcl
ret
pushf
sbb
data16
cmp
fstl
pop
sarb
xchg
shlb
jnp
fidivrs
lock
sub
xchg
push
scas
dec
inc
mov
mov
sub
stc
clc
mov
rorb
not
data16
insl
mov
mov
mov
push
cmp
pop
xor
roll
xchg
and
xchg
rolb
sarl
sarl
pop
shlb
rolb
lret
cs
rolb
and
roll
jl
push
imul
push
push
jns
cmp
dec
sbb
iret
popa
js
jns
into
int
dec
cmpsb
fstl
push
pop
jbe
xchg
pop
inc
ret
add
jb
xor
sub
adc
inc
cmp
fisubrs
sbb
fcmovnu
xor
cs
adc
jbe
je
mov
dec
xor
add
orb
popf
mov
jge
jge
xchg
and
insl
xor
xchg
cli
dec
xchg
and
jmp
rclb
ljmp
nop
cmpb
jno
mov
jmp
loopne
xchg
add
test
sbb
and
and
outsb
jne
adc
enter
imul
call
mov
cmp
inc
int3
pop
les
inc
pop
dec
int3
les
mov
dec
orb
cmpsl
mov
push
jp
dec
ret
lods
shll
ret
push
popf
subb
dec
xchg
mov
cmpsl
add
sub
mov
push
jae
out
inc
and
cmp
pop
inc
cmp
cld
dec
shrl
xchg
dec
or
stos
jb
sub
push
mov
fnstsw
orl
rcrw
ja
or
into
dec
pusha
pop
cwtl
jb
stos
xchg
or
stos
add
adc
push
jo
stos
push
faddl
inc
or
js
mov
adc
pop
enter
test
sub
sub
push
xchg
sub
jl
add
add
mov
es
es
fistl
adc
sbb
xorb
pop
orb
das
ret
outsb
or
push
jns
inc
or
shll
sbb
xchg
mov
adc
fstp
cmp
movsb
outsb
pop
and
xchg
ds
inc
and
adc
cmp
dec
or
out
scas
or
sbb
xchg
mov
xlat
stc
mov
fcomps
mov
mov
je
inc
movsb
mov
or
ds
xor
or
push
or
push
push
lods
test
dec
jle
push
dec
mov
out
xchg
push
es
inc
rorb
loopne
in
stos
repz
outsb
popa
bound
test
ja
push
lahf
in
inc
call
pop
sbb
shll
add
cmp
mov
outsb
lock
out
sbb
sbb
add
fmuls
les
sbb
lods
dec
inc
shll
inc
mov
iret
cwtl
insb
setl
lods
push
loopne
in
xor
fwait
or
pop
mov
sub
hlt
or
and
iret
movsb
or
pusha
pop
inc
jo
cwtl
dec
loopne
outsb
or
fs
bound
mov
lcall
xor
cmpsb
or
jnp
push
xorl
and
incl
int
inc
insb
sbb
scas
imul
xchg
xchg
sub
lahf
loope
js
addr16
pop
mov
imul
jbe
outsl
pushf
ds
mov
sub
adc
dec
pop
aam
subb
push
imul
sub
in
fld
outsb
lods
and
push
push
leave
cmp
jnp
rorb
lret
or
andl
scas
dec
cli
sub
adc
mov
sbb
push
adc
outsb
sub
mov
add
dec
pop
movsb
sbb
xor
mov
push
movsl
xchg
inc
sub
iret
xchg
aas
add
andb
sbb
pushl
pushl
push
fadds
inc
dec
dec
shr
les
mov
adc
jmp
cmp
out
or
dec
bound
jg
push
cmp
xlat
int
fcomps
les
test
add
mov
jae
sub
pushf
cmp
jge
and
jne
cmp
sub
pusha
cmp
ret
sbb
and
call
stc
or
clc
fsubl
movsb
mov
adc
xor
xchg
imul
adc
test
icebp
rep
sbb
sarb
adcb
jo
xor
cmc
loopne
out
mov
sub
cmpsl
add
xchg
push
push
in
push
dec
ds
call
call
mov
or
dec
cs
ja
push
test
and
and
xlat
mov
cmp
clc
in
or
ficomps
add
insb
fcoms
int3
mov
enter
int3
jbe
shlb
movzwl
and
pop
enter
sahf
mov
inc
and
rcrl
push
sbb
push
inc
adc
dec
cmc
ljmp
sti
xlat
mov
add
adc
inc
jae
push
dec
and
loope
pusha
cmp
jo
cmpsl
dec
imul
inc
push
or
daa
ja
adc
negb
fbld
and
mov
je
push
adc
push
fs
jo
and
or
gs
mov
or
nop
fstps
push
push
adc
mov
rcrl
ret
les
mov
push
push
sub
push
xlat
jne
aaa
add
pop
out
inc
and
xor
int3
mov
inc
cmp
inc
adc
jns
push
and
shlb
pusha
jo
in
sub
nop
push
mov
lahf
add
mov
fiaddl
sbb
mov
jne
pop
push
dec
int
mov
fucomp
adc
mov
add
fsubrs
mov
test
pop
add
pop
jmp
cmp
adc
les
jnp
xchg
push
adc
call
jne
mov
add
notl
das
aam
and
add
pusha
and
jp
out
inc
push
mov
push
jmp
aaa
mov
repz
out
mov
hlt
vpavgw
and
adc
jo
xchg
jno
in
xchg
call
out
iret
and
cmp
jo
mov
and
jb
sbb
mov
add
test
enter
xor
mov
xchg
sbb
or
mov
and
and
and
cli
ljmp
fldl
mov
test
insb
or
inc
add
xchg
xor
aaa
fwait
mov
sbb
shrb
call
insb
and
sub
sbb
adc
cs
add
push
jo
dec
mov
movsl
int
mov
ja
push
sbb
sub
mov
mov
jg
sbb
ret
das
packssdw
xor
add
dec
repnz
arpl
test
fstps
notl
inc
fisttps
pop
stc
jmp
pop
fbstp
and
lret
in
or
div
insb
push
add
push
pop
pop
test
pop
pop
call
mov
and
je
addb
xchg
xchg
mov
and
mov
and
sbb
dec
testb
mov
add
push
dec
js
loopne
jle
adc
cmp
ss
cmp
inc
sub
mov
or
xchg
cld
add
lea
arpl
cmp
pushl
sub
jg
in
lcall
pop
adc
mov
xchg
push
mov
jmp
movsl
add
push
movsb
in
repz
fbld
xchg
push
xchg
inc
cmc
jge
inc
pop
push
and
and
movsl
push
sbb
loop
cmp
loop
loop
inc
loope
nop
adc
xchg
ret
into
add
repnz
mov
loopne
mov
repz
pop
sbbb
movsl
xor
leave
or
push
and
add
adc
mov
sub
mov
sub
mov
popa
repz
icebp
adc
pop
jmp
inc
and
add
lock
jb
mov
adc
add
es
adc
es
sbb
adc
lock
and
les
xchg
adc
stos
mov
pavgw
xchg
jge
push
mov
shll
or
cmp
cmp
movsb
inc
imul
cmp
jb
inc
lea
push
dec
cli
pop
xor
and
in
sbb
adc
cli
push
movsl
inc
sub
pop
and
aas
pop
rolb
push
test
loopne
aaa
hlt
in
dec
inc
mov
add
jle
scas
hlt
mov
arpl
outsl
sbb
dec
inc
sub
int3
add
cmp
push
pushf
rcll
scas
rcrl
and
mov
cmp
dec
and
adc
add
out
test
sub
lret
in
lds
dec
xor
push
dec
outsb
adc
nop
rclb
iret
in
in
mov
loop
pushf
out
mov
dec
lret
and
rolb
sbbl
adc
dec
imul
adc
pop
pop
xor
out
xor
sub
mov
jb
cmp
repz
pop
jo
inc
mov
cs
push
repz
popf
shl
jae
cmp
mov
jp
add
arpl
mov
jo
fnsave
dec
and
mov
or
in
in
inc
add
popa
sub
out
jle
sub
dec
nop
jge
pop
adcl
sbb
outsl
out
lret
add
xor
hlt
mov
jle
call
xor
add
lods
mov
sub
ret
cwtl
in
mov
jmp
push
aaa
mov
mov
fmuls
popa
add
fcoml
das
jmp
pop
scas
dec
lahf
jmp
mov
add
add
sbb
mov
gs
das
enter
inc
cmpsb
jmp
jmp
mov
or
lods
or
adc
or
scas
and
adc
mov
cmpl
lret
sbb
push
popa
or
pushf
ljmp
dec
pop
lock
lock
mov
xor
call
pcmpgtw
sub
xor
jecxz
test
jne
inc
cmp
lock
fbld
sbb
popa
ljmp
xchg
jmp
jmp
in
xchg
push
sub
or
pop
mov
repnz
in
mov
xor
fsubl
push
cmpl
dec
leave
xor
cmpsl
nop
add
sub
push
and
in
mov
hlt
arpl
out
mov
add
push
jg
mov
cli
add
add
inc
mov
xor
fbstp
xchg
push
mov
or
and
push
out
clc
xchg
add
push
cmp
xchg
cmp
or
test
out
pop
out
outsl
adc
dec
inc
or
je
inc
sub
ljmp
and
lcall
mov
notl
mov
and
aaa
cs
jno
xlat
adc
push
jge
aaa
inc
add
in
bound
adcl
sub
sub
lock
sub
jb
ret
adc
add
sbb
pop
je
xor
jno
addr16
and
xchg
push
lock
imul
sbb
inc
and
push
arpl
cmpsb
in
repz
adc
rep
leave
stos
clc
xchg
xchg
sar
sbb
or
sbbl
daa
pop
push
lret
loop
adc
loop
ret
fsts
mov
inc
push
push
add
es
test
or
stos
clc
int
inc
aaa
xor
movsb
cmp
push
add
or
or
cmp
push
xchg
mov
ja
or
push
daa
movsb
xchg
jmp
xchg
sbb
hlt
test
roll
ljmp
hlt
mov
aaa
add
add
cmp
cmp
scas
sti
repz
sub
inc
xchg
adcb
mov
xor
je
inc
test
inc
xor
or
push
pop
mov
xchg
jnp
rorb
jnp
pop
mov
lret
push
testb
aas
push
dec
inc
jmp
jnp
mov
add
mov
out
aam
pusha
fs
out
es
dec
adc
loopne
jae
nop
neg
inc
repnz
push
mov
and
movsb
testb
and
inc
cs
pushf
stos
adc
bound
clc
lea
dec
test
cmp
xor
or
rep
xor
cmp
cli
daa
xor
add
or
fisttps
adc
adc
push
shrb
lds
das
loopne
in
lods
dec
loopne
subl
in
inc
clc
rcrb
loopne
cwtl
aas
leave
sbb
xchg
movsl
fbld
add
ret
lds
cmp
jne
push
dec
enter
push
rcrl
jl
xor
out
dec
push
cli
lret
mov
lea
add
cmpsl
push
mov
cld
xor
test
mov
dec
loopne
lods
addr16
aaa
xor
loopne
add
or
sub
push
inc
out
in
sub
xor
cli
clc
test
inc
mov
mov
mov
jg
push
loopne
jg
stc
lahf
sbb
mov
inc
lods
mov
mov
xchg
popa
and
sub
js
add
imul
and
mov
movsl
loop
ret
mov
test
jns
and
mov
aas
add
and
pop
testl
adc
out
or
cmp
dec
sbb
cmp
mov
mov
aaa
sti
push
sti
loope
dec
sub
add
add
ss
dec
add
add
push
push
adc
jecxz
mull
mov
and
daa
mov
xor
inc
or
in
test
and
js
dec
jae
sti
test
lods
add
repnz
movsl
sahf
daa
and
in
retw
sub
xchg
and
pop
ret
and
lcall
mov
std
sbb
mov
scas
jmp
rorb
sub
cmpsb
je
loopne
cmp
sub
mov
pop
dec
xchg
insl
imul
adc
add
push
and
or
je
push
fwait
test
mov
jecxz
push
and
lods
sub
inc
inc
lahf
xchg
dec
sub
rcrb
pop
out
inc
in
in
add
dec
cmc
add
dec
push
imul
rorl
xor
addl
inc
ret
dec
sbb
pushf
hlt
out
push
mov
sbb
push
and
push
inc
andb
lods
dec
test
adcb
pop
mov
cmp
cmpsb
sub
test
xor
aaa
iret
pop
loopne
add
clc
mov
inc
mov
popf
in
inc
pop
adc
mov
dec
das
pop
adc
mov
bound
mov
xchg
mov
mov
loop
cmp
mov
adc
sbb
add
dec
pop
incl
adc
xchg
je
adc
popa
mov
lcall
sbb
clc
imul
cmpsb
and
cmpsl
add
out
ljmp
jne
into
adc
mov
sti
cwtl
cmp
out
dec
push
scas
ljmp
cwtl
cmp
jge
sti
dec
iret
int3
shl
and
or
add
add
mov
lret
mov
jmp
add
inc
xor
or
adc
inc
xor
mov
push
adc
mov
stos
ret
and
add
sbb
notl
push
fdivp
lds
dec
ret
jb
mov
xchg
mov
jo
outsb
les
out
cmp
mov
dec
or
push
test
dec
or
movsl
movsb
xchg
test
ret
repz
push
fnstcw
pop
add
outsl
roll
inc
out
clc
mov
add
push
mull
push
add
aam
cmpsl
cmp
add
or
shlb
ret
and
inc
cmp
xor
mov
xor
xor
push
sub
dec
inc
bound
loopne
rorb
out
popa
xchg
cmp
scas
fwait
test
call
add
sub
dec
or
adc
or
push
int3
inc
icebp
pusha
add
add
mov
xchg
sti
jbe
insl
mull
inc
add
inc
add
mov
add
lods
bound
out
and
inc
mov
and
xchg
bound
adc
jecxz
pop
inc
push
rolb
mov
mov
adc
pop
mov
clc
test
inc
subl
jno
mov
sahf
pusha
and
or
lds
xor
xchg
xchg
sbb
mov
xchg
adc
xchg
fistl
dec
push
add
jmp
cs
xlat
rcrl
pop
pushf
xor
iret
andb
inc
xchg
enter
adc
mov
and
xlat
adc
and
dec
xchg
aad
call
rclb
add
or
adc
subl
loopne
xor
mov
push
lret
adc
sub
faddl
rol
fdivl
dec
in
cmpb
jne
pop
sub
or
sub
sbb
mov
fildll
fdivl
mov
xor
data16
xor
jg,pn
ret
aam
aam
shr
faddl
pop
enter
les
or
inc
loop
shrl
xor
mov
outsl
jmp
push
or
adc
push
movsb
cmpsl
adc
or
sub
pop
and
xchg
mov
sbb
add
mov
jecxz
mov
push
sub
push
call
fistl
stc
test
sub
or
js
or
mov
test
inc
rolb
cmp
add
xlat
xchg
jno
push
nop
dec
ss
ljmp
js
cmp
gs
lahf
sub
gs
pop
push
scas
xchg
insb
xchg
or
add
cltd
cwtl
or
sbb
jg
cmp
je
adc
dec
push
push
mov
push
adc
popf
lret
or
dec
sub
jmp
mov
js
les
jbe
cmc
hlt
sub
dec
jecxz
lock
jle
out
jl
adc
sub
sbb
inc
add
aam
mov
pop
mov
pop
or
inc
xchg
push
out
arpl
push
jae
add
ss
and
fdivs
incl
pop
inc
movsb
lahf
xor
in
movl
sub
jp
jo
fwait
inc
clc
add
jbe
movsl
push
mov
add
and
jnp
in
lods
aaa
sbbb
call
cmp
mov
mov
ja
xchg
nop
out
lock
aas
hlt
xchg
mov
hlt
xchg
hlt
inc
and
fsubrl
outsb
mov
push
sub
sbb
push
add
push
shlb
mov
lods
push
inc
in
int3
sub
mov
lret
dec
dec
daa
aas
imul
aas
clc
jns
and
lock
das
mov
rcrl
shll
add
jno
addr16
cltd
push
pop
in
cld
movsb
movups
xchg
es
jle
xchg
xor
or
xchg
jge
int3
andb
imul
cmpsb
mov
adc
mov
in
sub
sahf
jne
fwait
cmp
push
cmp
jne
pop
mov
pop
dec
push
dec
cld
push
inc
mov
and
or
push
jp
in
pop
fwait
addl
stos
push
test
pop
addr16
xor
or
push
popf
dec
adc
jge
jmp
iret
in
or
pop
dec
call
cmp
imul
iret
je
andb
loope
je
push
mov
add
test
push
in
push
out
inc
xor
jecxz
dec
pusha
or
mov
shll
sbb
sbb
ljmp
call
lahf
sbb
mov
mov
pusha
adc
xor
pop
fdivs
jne
adc
xor
mov
outsb
inc
pop
sub
clc
push
jmp
adc
xchg
mov
inc
or
cmp
incl
sqrtps
test
cmpl
mov
mov
lods
iret
push
mov
inc
nop
lock
and
fadd
notl
es
lahf
dec
arpl
xchg
cmpsb
pop
push
add
push
loopne
pop
cmpsl
aad
pop
shrb
insl
adc
loopne
xchg
or
and
dec
xchg
push
or
aad
mov
add
jo
ret
stc
mov
push
insl
jb
mov
mov
jns
test
cmp
xor
mov
sub
xchg
or
loop
sub
push
lret
pop
add
inc
mov
jno
btc
scas
into
subl
inc
add
push
nop
adc
or
inc
setne
movsl
jg
add
add
xor
fisubl
out
pop
pop
cmc
data16
cmp
xor
imul
je
aaa
cmpsb
mov
jae
jno
xor
emms
push
outsl
xor
mov
dec
or
sub
out
xor
repnz
outsl
jo
gs
xor
scas
dec
enter
aaa
jo
xor
pop
push
repnz
outsb
xor
xor
aaa
add
gs
ja
fldl
and
imul
sbb
imul
enter
popa
in
xor
mov
cmpsl
cmp
xor
es
dec
insb
fs
xor
cmp
mov
pop
xor
mov
iret
mov
inc
cs
mov
cmp
and
cld
cmpsl
out
jae
jne
fnsave
aad
test
inc
aas
imul
jne
xchg
push
add
xchg
fisttpll
call
adc
add
cltd
mov
cli
or
mov
inc
and
or
mov
xchg
push
je
fsubrs
andb
sbb
sbb
mov
adc
jo
and
fwait
test
push
push
test
mov
mov
andb
pushf
nop
fiadds
dec
sbb
les
dec
jo
xchg
inc
mov
aaa
mov
push
adc
sub
pop
push
stc
and
aaa
jmp
dec
mov
or
mov
je
add
dec
out
mov
sub
jb
add
or
xor
cmp
nop
push
ret
and
das
jne
pop
test
test
sub
sbb
push
dec
push
movsb
cmpsb
aad
jg
call
sbb
or
popf
or
dec
popf
aas
addl
rcrb
or
shrb
lock
test
ret
mov
or
and
pop
dec
adc
xor
lahf
jb
jle
cmpsl
dec
mov
fadd
call
and
fstpl
pop
inc
aad
mov
push
xchg
add
xchg
nop
stos
cmpsl
aas
aas
cmp
inc
inc
inc
test
cmpsl
jno
mov
sub
ljmp
into
outsb
mov
inc
mov
sbb
xor
data16
loope
sti
or
sub
movsb
dec
cmp
popa
inc
popf
arpl
test
xlat
cs
push
or
or
inc
adcb
daa
mov
lds
in
sbb
addr16
in
inc
xor
sbb
pop
test
cmpsl
mov
lods
pusha
pop
xchg
push
cmp
cmp
fldcw
or
or
and
lcall
das
sub
call
and
in
fs
dec
lcall
dec
jae
rorb
fcoml
movsb
imul
fcoms
mov
in
or
sub
push
insl
lock
push
or
sub
mov
test
fs
push
push
mov
hlt
xchg
int3
adc
outsb
nop
mov
or
loop
sbb
sbb
adc
jp
mov
adc
sbb
leave
mov
cli
nop
pusha
rorl
mov
push
lock
or
or
sub
test
xchg
add
mull
mov
dec
insl
sub
lea
sbb
fstpt
ret
sub
mov
sbb
mov
jb
dec
ja
bound
adc
dec
mov
cmp
xchg
or
add
imul
test
mov
rolb
and
add
loop
pop
sar
mov
cmp
jne
out
bound
sub
cmp
add
mov
mov
sub
call
rcrb
dec
push
sbb
dec
in
stos
push
or
fnstenv
xor
lret
lock
or
jmp
cwtl
fsubl
push
jo
dec
inc
mov
fmuls
mov
or
sbb
inc
cs
mov
xchg
push
push
jb
lock
mov
add
bound
sub
mov
mov
and
test
jbe
imul
add
ret
mov
lret
push
xchg
jg
push
xor
push
sub
test
push
pop
in
xlat
cld
xchg
sub
inc
dec
inc
dec
push
je
push
push
fidivrs
pusha
xchg
xor
inc
inc
sub
lock
sub
xchg
shrb
stos
repnz
into
mov
mov
das
mov
pop
orl
rorl
out
and
push
add
divb
hlt
jns
cmp
and
and
mov
jne
add
mov
test
or
push
jae
push
mov
mov
mov
mov
loopne
cmp
inc
sbb
lcall
in
sub
lea
loopne
add
adc
xchg
xor
push
hlt
inc
or
adc
mov
into
xchg
movsb
pop
addl
movb
adc
jge
lea
add
ret
int
fsubr
push
xor
add
addr16
test
pop
cmp
xlat
sub
andl
push
xor
mov
jb
jo
or
dec
in
mov
test
sbb
jecxz
xor
pop
arpl
sbb
cmpsb
cli
or
mov
fisttps
je
and
fstpt
aam
or
ret
fcoms
ret
ficoml
pushl
jne
lods
pop
aas
pop
inc
test
jne
jns
fs
sbb
jno
add
xor
and
shrl
sarl
cltd
mov
push
mov
inc
push
push
cmpsb
popf
test
pop
dec
mov
data16
dec
outsb
insb
jge
neg
jns
adc
imul
dec
out
cmp
insb
jne
gs
inc
or
xor
sbb
push
inc
jb
push
neg
dec
and
insb
nop
sbb
movb
in
cmp
pop
mov
add
and
subb
insb
jo
repnz
and
pop
rolb
push
push
adc
xchg
xchg
push
cmp
inc
ror
cmp
data16
mov
mov
mov
lcall
jl
mov
insb
ds
insb
js
movsb
call
data16
test
lods
sub
cmpsb
xchg
jle
dec
je
mov
xchg
pop
push
es
test
insl
ds
inc
cmp
push
fs
fmul
dec
mov
mov
xor
xor
je
inc
add
int3
pop
push
pop
pop
pop
outsb
andb
bound
add
sbb
out
jge
mov
ljmp
inc
movsb
data16
lods
addl
mov
xchg
sub
int3
shrl
add
inc
outsb
add
scas
shrb
loopne
add
hlt
and
adc
xor
insb
rcl
ret
in
push
xor
fst
push
aas
or
scas
loopne
cmpsb
jae
jnp
pusha
inc
push
push
jo
test
inc
mov
es
push
in
cmpsb
push
rcrl
push
add
xchg
into
popa
enter
mov
cld
sbb
inc
dec
push
mov
inc
cld
fildll
ficompl
and
andb
add
loopne
dec
inc
daa
sbb
lcall
mov
dec
cmp
push
sub
pop
add
xor
mov
pusha
cmp
add
popl
cmp
mov
shr
jl
pusha
movsb
inc
inc
push
mov
lahf
mulb
inc
imul
loope
ja
lock
add
and
jecxz
jl
dec
sahf
fadds
add
jge
inc
inc
test
int
push
mov
cs
orl
dec
fsubl
mov
inc
pop
push
addr16
push
mov
inc
dec
popa
push
mov
je
or
mov
leave
xchg
dec
negb
jo
arpl
push
sub
lock
sub
clc
xchg
sbb
sbb
flds
enter
lds
fmull
imul
pusha
dec
arpl
sbb
popa
inc
adc
sub
dec
pusha
lods
and
adc
sbb
and
dec
in
add
loope
sahf
into
pop
loop
mov
xchg
ja
adc
cmpsl
push
insb
xchg
popf
imul
jo
jo
push
jne
insb
bound
repnz
loop
inc
insb
push
cmp
mov
push
in
mov
shll
lds
not
inc
mov
pop
ror
mov
inc
push
bnd
sub
dec
jb
add
adc
or
out
addb
xor
xor
lock
je
dec
lea
jns
or
pop
mov
mov
mov
imul
cmp
xlat
and
pop
imul
nop
push
inc
xchg
sub
sti
mov
sbb
mov
sbb
push
dec
sub
enter
xchg
xor
fsubrs
fimull
orl
call
pop
repnz
sub
jo
aad
and
mov
inc
adc
roll
mov
cmp
aad
xchg
shl
mov
jnp
jmp
jns
add
inc
xchg
and
mov
ja
lock
push
jo
rclb
cmpsl
pop
enter
push
jo
inc
mov
js
xor
pop
ja
loop
jae
fnstenv
dec
shlb
pop
xor
cmp
xor
dec
xor
cs
fcmovnu
in
out
clc
clc
xor
cmp
das
cltd
negb
and
pop
idivb
push
test
or
and
xchg
inc
enter
mov
in
repnz
push
fcoml
jge
js
push
mov
push
inc
fstl
cmpsl
push
cs
mov
lock
mov
adc
adc
pop
sub
int
xor
cwtl
sub
sub
cld
push
xor
fwait
add
inc
inc
in
or
mov
jae
push
cmp
or
hlt
fwait
ret
dec
and
ret
or
shlb
gs
xchg
stos
in
rcll
adc
inc
mov
jl
sbb
cmp
popa
and
and
inc
adc
enter
and
add
push
addr16
leave
push
jb
and
rorb
and
and
xchg
sbb
and
push
jb
and
push
daa
sub
leave
push
xor
sub
jb
dec
and
enter
and
add
xor
mov
add
lahf
push
xor
popa
jae
idivl
or
and
notl
add
push
push
jo
cmpb
jo
pop
dec
push
pop
cmp
ss
insb
into
fdivl
in
push
dec
xor
lret
mov
fsub
add
dec
mov
aas
daa
lock
in
loopne
lods
inc
inc
xchg
dec
adc
mov
outsl
ret
bound
sub
mov
mov
cltd
cmp
inc
and
or
or
sbb
sbb
sar
pushf
and
nop
dec
push
push
adc
orb
clc
leave
cmovnp
cwtl
xor
and
test
out
mov
adc
xor
push
pop
in
in
sbb
inc
mov
jns
push
sub
mov
mov
inc
cs
sub
or
sub
dec
and
imul
sbb
push
rcrl
cmpsb
xchg
and
in
sub
and
dec
scas
sub
mov
pop
push
mov
mov
aad
sbb
out
add
pop
je
push
push
mov
daa
pusha
popl
fucomp
or
bound
fiadds
xchg
data16
sbb
mov
push
mov
or
cltd
flds
sbb
cs
jne
mov
or
test
cli
fstpt
jne,pn
ss
stos
add
mov
mov
pop
fldt
cmp
jo
mov
js
and
pop
fnstsw
and
xor
mov
pop
add
mov
outsl
adc
adc
sub
mov
ret
pop
rcr
ds
mov
dec
loope
cmp
clc
fistpll
cmpb
jne
lea
add
mov
dec
add
push
shrb
js
mov
inc
test
pop
fidivs
lea
jmp
pop
nop
ficomps
jecxz
imul
sub
mov
hlt
enter
pop
sub
push
or
xchg
push
add
lds
sub
xchg
mov
add
or
add
jno
add
add
js
dec
mov
test
cmp
cmp
add
das
or
test
xchg
call
xchg
jnp
cmpsb
pusha
adc
adc
mov
jl
lock
and
cmp
addb
pop
das
dec
jge
mul
mov
pop
addl
das
push
push
rcrl
mov
int
ficompl
sub
sbb
loopne
mov
in
pop
lea
push
xor
loopne
add
fsubr
push
xorb
adc
pop
es
push
sbb
cmp
sbb
cmp
outsb
std
out
cmp
mov
pop
call
or
jae
repnz
inc
call
or
inc
inc
sti
inc
or
in
and
pop
mov
rcll
push
pop
xor
repz
xor
pop
rolb
ret
and
nop
sbb
xchg
test
in
mov
imul
add
push
ret
xchg
cs
jns
inc
call
dec
outsl
mov
pop
adc
fistpll
and
add
cmpsl
movsb
add
add
add
pop
jne
or
pop
jne
push
sbbb
sbb
add
dec
xor
movsb
lods
adc
or
push
jo
push
push
ret
xlat
push
ror
xor
cli
sbb
add
pop
add
mov
lea
lea
loopne
add
orb
stc
adc
xor
or
leave
pop
cmp
push
fwait
loope
jne
cli
fcomps
inc
sti
inc
jle
daa
sub
dec
push
imul
mov
push
in
mov
or
cmp
sub
add
sub
shl
pop
jo
cmp
push
inc
push
jg
lock
push
fcmovnu
das
add
push
and
jo
fadd
sbbb
push
adc
and
or
push
mov
in
hlt
movsb
dec
jb
ret
fs
clc
pop
cmp
out
loope
pop
movb
push
cmp
arpl
pop
sub
inc
fsubrs
and
lock
add
inc
adc
test
jge
xor
push
pop
push
sub
and
cmp
repnz
scas
cld
sti
cmpsl
stos
andl
adc
movsb
add
les
sbb
jo
adc
test
mov
pop
insb
out
jne
adc
cmpsl
mov
ret
decl
or
dec
cmp
and
or
cmp
or
dec
in
cld
pop
imulb
sub
test
or
cld
nop
lock
mov
lock
dec
mov
or
movsb
push
push
outsb
loope
pop
dec
inc
add
jp
mov
xor
xchg
inc
leave
push
cmp
lahf
jae
and
dec
test
push
addl
adcb
divl
mulb
pop
ja
bt
jae
xchg
nop
or
and
inc
xchg
loope
jp
adcb
jne
and
sti
mov
push
js
dec
out
pop
and
xchg
jmp
inc
xchg
inc
pop
in
sahf
out
push
cmc
adc
lods
mov
rorl
mov
pop
pop
test
test
rcll
ja
jle
inc
push
loopne
call
adc
and
add
fdivl
leave
movsl
cmp
pop
fsubl
jle
xchg
outsl
xchg
fcomp
aas
fs
jle
gs
aam
push
bound
add
aam
lods
push
adc
rol
sbb
fdivr
push
clc
xchg
or
dec
repnz
out
jmp
add
push
mov
mov
push
cli
pop
cmp
je
inc
inc
testb
pushl
pop
popf
test
cmp
mov
jmp
mov
or
push
into
mov
das
mov
cs
xchg
pushf
and
jbe
jle
xor
mov
and
rclb
bswap
or
jmp
inc
jo
jbe
cmp
jle
in
pop
mov
add
push
inc
sarb
add
stos
aam
cltd
lcall
ss
lock
lods
pop
dec
dec
pop
rcll
into
aaa
orb
leave
popa
mov
cltd
cmp
lret
push
mov
pusha
inc
and
pop
fcoms
sarl
or
push
sub
stos
test
les
int3
shl
mov
lea
ds
lea
mov
dec
xchg
enter
xor
sub
cld
add
xchg
xchg
in
test
nop
xchg
lcall
clc
adc
mov
sub
jecxz
sub
dec
adc
mov
or
cmp
xchg
xor
sub
inc
add
mov
rcrb
outsl
lds
ljmp
pop
pop
lret
inc
mov
push
mov
push
aad
add
les
mov
popa
lret
push
je
mov
mov
sbb
in
dec
les
jle
out
mov
push
add
adc
adc
pop
pop
push
and
xor
mov
dec
in
rclb
mov
shl
fcomps
push
pusha
push
push
cmp
sub
lock
clc
ljmp
jge
sbb
ss
les
mov
dec
pop
mov
mov
ss
loope
mov
pop
and
inc
cs
sub
fs
push
push
rolb
dec
push
push
pop
and
jbe
xchg
inc
push
jle
ljmp
add
push
dec
dec
jbe
mov
inc
dec
adc
mov
adc
out
ljmp
push
cmc
ljmp
pop
or
insb
icebp
or
std
cmp
repz
std
add
dec
mov
mov
mov
in
cmp
in
sub
lods
xchg
push
xchg
lea
fdivrs
dec
xor
xchg
push
cmp
mov
xchg
icebp
jmp
xchg
shll
or
and
ficoms
mov
jge
push
xor
hlt
hlt
lods
cmp
in
packssdw
cmpb
nop
pop
adc
and
adc
das
sub
es
dec
push
xchg
inc
inc
cmp
xchg
inc
sahf
mov
xchg
ret
mov
mov
orl
aas
negb
cmp
mov
cmpsl
xchg
mov
inc
mov
xchg
ret
in
cld
test
mov
out
jmp
movsb
xchg
pop
inc
mov
add
arpl
or
lock
mov
test
sarb
xchg
or
inc
je
xchg
shll
jmp
add
pushf
inc
lock
sbb
not
sub
ret
adc
and
pop
sahf
je
push
mov
and
adc
push
xchg
jae
mov
cwtl
push
cld
lea
cmp
fisubl
cli
rolb
popf
ja,pn
into
mov
data16
addr16
movsl
lahf
mulb
loopne
add
add
sar
mov
or
in
adc
loopne
add
test
out
aas
mov
outsb
cmp
mov
cwtl
jne
aas
lahf
mov
shll
int
addr16
and
jmp
loope
mov
push
lock
out
pop
cmp
xor
pcmpgtb
add
adc
loopne
pop
sbb
imul
test
mov
jp
cmp
in
fistl
and
mov
mov
sbb
sbbb
add
ss
jno
cltd
xor
sbbb
mov
nop
add
pop
cmp
sbb
jne
stc
dec
cmp
fdivrl
inc
cmp
inc
es
mov
mov
gs
mov
shlb
stos
das
mov
xor
jne
rolb
mov
xor
inc
pop
push
cmpsb
jne
js
push
or
or
xorb
jecxz
hlt
and
mov
pop
push
mov
lods
xor
fldenv
pop
addl
dec
cmp
das
inc
pop
or
pop
insl
or
call
imul
daa
pop
outsb
or
fcomps
dec
popa
hlt
fucomi
ja
sbb
inc
jae
dec
lock
adc
jne
cmp
fistpl
jb
scas
jl
and
sub
jg
rolb
test
xor
and
test
or
adc
push
push
sbb
insl
xchg
fildll
and
sbb
adc
or
or
push
aaa
inc
dec
push
inc
mov
mov
inc
sub
or
push
cmp
das
cs
das
ds
lea
pushf
fsubrl
cmp
ljmp
cmpw
inc
or
dec
xchg
push
call
mov
mov
jb
stos
in
inc
push
clc
push
lock
test
adc
xor
dec
or
aad
movsl
cmp
xor
addb
aad
imul
movsl
shlb
leave
add
shrb
movsl
in
sbb
add
movsl
shl
inc
lea
mov
test
pop
jno
mov
int3
adc
add
call
jno
fdivrl
dec
and
add
inc
lea
cmp
test
in
fsts
push
sbb
xchg
addr16
out
sub
and
mov
inc
dec
and
inc
mov
sbbl
push
out
pop
ja
insb
es
addr16
push
sub
arpl
stos
mov
adcl
call
cmpsl
xchg
xor
ret
clc
jg
xchg
push
mov
xchg
mov
enter
bt
jae
inc
jmp
ret
mov
scas
inc
add
aas
iret
mov
je
or
sub
fists
or
inc
addr16
nop
clc
dec
shll
inc
mov
imul
cmp
sub
xor
dec
push
pop
and
dec
jmp
sub
mov
cmpsl
jecxz
sub
add
fiaddl
pop
gs
sub
test
pop
mov
rcrb
fs
cld
push
movsb
repz
xor
shlb
cwtl
cli
mov
cmp
je
cmc
fidivrl
ret
mov
jnp
into
mov
mov
jmp
adc
insl
dec
test
pop
loop
arpl
xchg
jno
out
test
push
test
mov
mov
cli
ret
sub
xor
pusha
cmpsl
jp
pop
in
sbb
mov
repz
pop
dec
jg
cmp
mov
xchg
jmp
and
adc
popf
push
imul
aad
cmpxchg
push
pop
mov
icebp
push
rorl
mov
cmpb
pop
cmp
loopne
cmp
iret
cmp
int3
clc
and
inc
push
pop
and
hlt
movsb
pop
aad
test
push
mov
cmp
stos
add
or
mov
jmp
cmp
roll
mov
push
sub
xor
mov
mov
test
nop
adc
in
shrb
flds
loopne
outsb
xor
das
mov
pushf
cmp
and
mov
enter
pusha
dec
xor
add
pop
push
cs
mov
dec
sub
popa
adc
cli
inc
push
push
inc
inc
dec
inc
scas
xchg
push
mov
dec
dec
push
dec
inc
dec
cmp
add
cmpsl
or
cmp
jp
and
repnz
and
pop
loopne
std
popa
xorl
cld
aaa
push
mov
sub
ja
and
bt
adc
add
dec
repnz
mov
jne
and
xchg
cmp
loope
scas
inc
and
cmp
xor
pop
inc
cmpsl
xorb
xchg
push
add
shlb
hlt
je
movb
xchg
addl
call
mov
push
sbb
mov
jbe
sbbl
adc
and
div
dec
cltd
scas
mov
pop
adc
adc
mov
push
push
nop
movsb
adc
xchg
or
mov
mov
or
xchg
shrb
xor
rol
push
test
sbb
cs
lea
leave
and
and
jg
mov
mov
je
call
sbb
inc
sub
out
jne
mov
into
jp
push
into
jo
mov
mov
cmc
adc
cltd
mov
jge
sub
add
sbb
cwtl
add
inc
mov
cmp
popa
test
xchg
cltd
mov
js
inc
cltd
xchg
adc
push
in
pop
test
adc
and
sub
pop
and
es
aad
pop
enter
cs
arpl
clc
cmpl
data16
or
das
mov
adcl
mov
enter
fstpt
lds
dec
mov
mov
sbb
js
cmc
push
adc
pop
clc
and
add
and
in
popf
push
adc
adc
or
pusha
bound
ret
das
andb
add
mov
je
mov
cmpb
cmc
pop
cs
fadds
jmp
addr16
aaa
je
inc
adc
xchg
push
jb
in
jmp
mov
lods
and
cmp
sub
pop
iret
dec
inc
es
adc
sbb
das
imul
jp
mov
dec
and
jl
inc
sbb
add
xchg
dec
push
cltd
popa
push
jb
or
add
in
inc
cltd
sub
inc
imul
sbb
adc
loop
adc
dec
sub
je
and
xchg
pop
mov
mov
test
mov
dec
xor
mov
rorl
rclb
sub
xor
mov
sti
sub
mov
les
adc
scas
movsb
add
sbb
leave
in
sub
inc
fisttpl
push
insl
cmp
jb
mov
popl
das
cmp
shl
and
pusha
dec
imul
mov
daa
push
pop
xchg
xor
cmp
je
inc
iret
sbb
inc
testb
test
adc
mov
mov
je
mov
mov
dec
or
cltd
pop
fists
mov
mov
lea
pusha
lods
pminsw
mov
sbbl
adc
adcl
fcoms
in
mov
and
cwtl
lock
or
push
dec
push
cwtl
jnp
ds
push
xorl
pop
aaa
cs
push
pusha
nopl
or
aad
pop
adc
inc
xor
jp
inc
and
and
adc
das
push
inc
call
pop
xor
ret
or
insl
pop
stos
dec
sbb
dec
ja
and
or
or
jbe
hlt
jmp
pop
cs
pop
es
mov
adc
sbb
lcall
xor
pop
jmp
mov
movsb
das
sbb
xchg
sar
mov
xor
inc
or
dec
sub
ret
lea
subb
gs
into
adc
mov
bound
nop
loop
ja
xor
inc
xchg
inc
add
add
push
inc
lret
inc
pop
rol
ja
sbb
fs
inc
dec
dec
rcll
testl
ret
inc
pushl
adc
sahf
push
jp
lahf
insl
addr16
and
lahf
outsl
mov
ret
int3
cs
ds
test
push
sbb
fiadds
loopne
int3
push
or
aaa
gs
mov
fld
xor
iret
inc
xchg
inc
cmp
jg
or
test
push
push
mov
mov
add
mov
rclb
ljmp
cmpb
mov
lods
sbb
or
inc
daa
pop
or
dec
or
negl
inc
dec
scas
fadds
mov
inc
push
or
in
pushf
ret
inc
add
push
orb
xor
jb
xchg
cmp
outsl
imul
je
cmp
and
adc
clc
sarl
xor
inc
daa
ss
adc
add
push
inc
push
mov
cwtl
xchg
inc
mov
push
xor
push
loopne
insl
push
push
pushf
movsb
push
mov
push
out
ljmp
dec
pop
and
push
add
cli
jbe
movsb
je
outsb
jae
clc
push
push
xchg
nop
loop
mov
dec
add
add
movb
testl
lds
int3
and
xchg
push
and
fildll
sub
adc
add
stos
stos
rolb
adc
cmp
mov
add
fcmovbe
sbb
jns
ja
in
lcall
cmp
pop
fs
outsl
arpl
or
mov
adc
adc
or
adc
popa
stos
inc
mov
or
pop
cmp
sti
jbe
imul
push
sbb
push
add
dec
sarb
adc
ss
and
sbb
or
push
push
pop
push
pusha
lods
sbb
push
pop
jl
and
clc
or
movsl
jle
jp
out
adc
jbe
outsb
mov
add
xlat
and
les
adc
loopne
xchg
fwait
pop
je
pop
xor
imul
add
rorb
lret
sub
pusha
insb
andb
je
addr16
sar
je
jmp
or
ret
mov
nop
hlt
jbe
je
inc
xchg
mov
lahf
aas
and
idivl
mov
fadd
inc
sub
or
adc
adc
push
sbb
mov
popw
fs
ja
pop
inc
and
popf
ret
fs
jp
push
sar
sbb
push
into
pushf
cmp
in
add
ja
cmpl
jg
mov
imull
xor
xchg
mulb
sbb
dec
adc
xor
or
xor
add
nop
dec
aas
mov
mov
xchg
outsb
aad
push
or
bound
mov
jg
cmpl
jge
inc
mov
dec
sbb
add
movb
mov
sub
mov
jge
xchg
sbb
add
cmp
or
mov
inc
dec
inc
push
xchg
lock
mov
pushf
outsb
mov
js
add
pcmpeqw
or
or
pop
mov
je,pt
outsl
das
mov
xchg
pop
inc
leave
or
sub
xor
lret
inc
sub
adc
xchg
mov
dec
xor
sbb
pop
xchg
test
mov
push
fcomi
jno
add
push
dec
iret
push
push
sbb
sub
loopne
mov
and
lea
or
push
inc
sbb
sbb
sahf
sub
pop
insb
jnp
out
and
cmp
je
mov
bound
femms
out
les
inc
enter
fwait
std
cs
aaa
fs
mov
testb
stc
sbb
dec
and
aam
add
jl
scas
push
sbb
jae
adc
nop
rol
fs
sahf
inc
movsl
pusha
add
push
adc
ds
ret
sbb
inc
movsl
stos
das
aad
cmp
dec
mov
jp
ret
jno
and
inc
add
int
push
or
sbb
addr16
add
jnp
xchg
pop
jo
rcll
loop
inc
push
and
es
inc
fwait
jno
xchg
or
jae
push
push
push
rcrb
pop
in
test
lahf
jle
testl
mov
test
jne
dec
push
pusha
or
cmp
cmp
mov
and
jmp
fwait
inc
hlt
add
mov
push
jb
push
cmp
dec
andl
rcrl
inc
fistpl
jno
xor
mov
out
ret
jb
aam
loope
pop
cmp
loopne
xchg
inc
mov
sub
pop
xchg
jae
inc
lods
fs
jmp
xor
outsb
add
xor
gs
lock
rcr
push
or
shr
inc
cs
cmc
pusha
andl
das
pop
jae
insl
pushf
sbb
inc
shll
cmp
cmovl
shrl
arpl
push
inc
sahf
addr16
jne
out
fldenv
adc
iret
lret
jne
add
jo
fs
loopne
fnstcw
jo
popf
testb
incl
cmpl
sbb
pop
mov
add
popa
sbb
scas
mov
stos
mov
fsubrs
daa
jmp
cmp
data16
hlt
fucom
xchg
icebp
dec
cmpsl
in
cltd
mov
and
dec
lock
out
pushf
adc
and
stos
push
insb
shr
dec
enter
in
or
xor
hlt
movsb
jbe
fldl
pusha
and
shl
call
dec
ja
shlb
leave
loope
addr16
bound
and
arpl
inc
and
sbb
push
xorb
sbb
jb
xchg
bound
adc
mov
jmp
or
negb
rcrl
jae
shrl
sub
scas
xor
mov
fiaddl
addb
sub
js
jle
scas
add
mov
negb
sub
push
push
add
xchg
sbb
push
ret
stos
sbb
push
mov
lock
cmpl
jne
cmp
jae
std
ret
push
lea
push
inc
lahf
adc
ret
loope
dec
jmp
push
icebp
xchg
cltd
dec
sub
mov
pop
fstpl
pop
fists
add
jmp
adc
mov
mov
dec
adc
mov
in
xor
jne
mov
sbb
ss
jmp
push
in
mov
mov
pop
loop
das
dec
mov
inc
or
xor
arpl
mov
cltd
xchg
xchg
pop
pop
push
scas
push
jnp
dec
jae
mov
cmp
les
push
aaa
or
adc
or
and
add
pushf
xchg
es
imull
iret
fcomi
inc
push
push
adc
pop
pushf
sub
or
arpl
mov
inc
jp
push
add
push
ds
mov
push
mov
push
js
clc
push
pusha
sbb
adcl
test
sbb
movsb
inc
dec
jne
or
dec
jp
cmp
xor
sub
xchg
test
aaa
mov
pop
xchg
dec
push
in
pop
aas
jne
imull
adc
lock
mov
addr16
mov
mov
mov
imul
aaa
mov
cmp
arpl
inc
jnp
mov
pop
jmp
ret
mov
mov
mov
mov
mov
sbb
mov
repz
loopne
and
ret
arpl
add
add
pop
lock
cmpsl
outsl
mov
dec
or
jns
add
mov
and
cmp
pop
nop
ljmp
add
cmp
jl
mov
mov
mov
jnp
cmc
jo
xchg
testb
push
pop
movb
cmpl
xor
pop
lret
repz
std
mov
test
jl
inc
xor
mov
es
xchg
and
std
dec
incl
jne
pop
pop
mov
cmp
pop
pop
ja
ljmp
cs
xchg
lock
cmp
jne
test
mov
fisttpll
fmuls
leave
add
rol
jne
mov
lret
adc
mov
jne
daa
enter
add
fwait
shlb
mov
mov
push
outsb
or
mov
dec
inc
adc
mov
adc
pop
xor
add
outsb
mov
je
lods
or
adc
push
mov
ja
xchg
xor
jle
jb
movsb
xor
hlt
mov
mov
clc
outsb
mov
ja
cmp
jle
cmp
adc
call
push
ja
sarb
xorb
and
pop
mull
je
xor
cmp
call
cmp
das
add
lahf
rcrb
or
sbb
ds
or
cld
or
inc
int3
cmc
push
mov
jl
in
push
jb
cmp
adc
js
mov
add
test
insl
or
lds
and
add
cmp
les
roll
push
sub
and
jo
ja
test
cmp
lea
inc
dec
dec
scas
xor
dec
in
jo
repnz
imul
fs
outsl
rclb
nop
xchg
adcb
push
xchg
xchg
add
loopne
cltd
or
pop
in
fsubs
jae
push
sub
fistl
and
cmp
mov
rolb
test
xlat
icebp
adc
mov
test
inc
clc
notl
pop
sub
nop
pop
add
cwtl
mov
in
add
cli
push
or
inc
inc
pushf
cmpsb
jnp
push
pushl
sahf
orl
lret
mov
pop
mov
dec
leave
fadds
push
outsb
mov
inc
jb
std
xor
dec
nop
pop
pop
sbbb
pop
dec
add
scas
inc
cmp
mov
lret
push
mov
push
push
xor
loop
mov
lcall
xchg
push
jbe
cmp
test
mov
cwtl
jmp
aam
cli
pop
imulb
push
and
pop
mov
and
pop
lahf
adc
or
mov
cmpsl
mov
mov
add
or
sti
dec
jne
cmpb
xlat
movl
repnz
sbb
leave
mov
mov
jo
in
dec
pop
pop
cmpb
andl
call
out
push
add
decl
cmpb
bound
mov
or
filds
call
test
loopne
jmp
rorb
adc
push
sbb
xor
nop
xchg
sbb
std
cmpl
or
cmp
aas
mov
imul
sbb
inc
mulb
repz
xchg
icebp
dec
xorb
int3
int3
sub
stos
fwait
les
addr16
mov
outsb
bound
lea
je
sarl
adc
sbb
adc
mov
dec
push
push
xchg
pop
leave
outsb
mov
loopne
rol
xor
stos
mov
es
push
add
out
jge
into
outsl
stc
lcall
push
jmp
ds
push
xor
xchg
inc
push
gs
test
sbb
or
fsubrl
imulb
shll
mov
pusha
mov
cs
scas
dec
std
cli
push
push
pushl
fsubs
add
push
aaa
pop
sub
add
pop
orb
push
add
pop
loop
xchg
or
add
test
sub
push
pop
push
pop
jl
push
punpcklbw
out
data16
dec
xchg
push
push
sub
lds
jo
and
je
or
insl
add
sbb
pop
cmp
movsb
sbbl
mov
hlt
enter
mov
add
or
push
and
out
sahf
dec
pop
jo
cwtl
pushf
jns
out
mov
loopne
dec
out
frstor
dec
jnp
fwait
mov
dec
xchg
push
rol
arpl
cs
or
insb
into
call
fsubs
popf
jb
test
adc
sbb
mov
mov
xchg
adc
xor
xor
hlt
fbld
adc
call
dec
mov
mov
test
jge
xor
cmp
jg
repnz
scas
test
cmp
int3
xlat
xchg
jge
push
outsl
dec
test
inc
adc
mov
jp
mov
les
mov
fwait
pop
int
ret
test
repnz
sub
lock
sub
pusha
lods
test
or
iret
dec
testb
jne
mov
outsb
sbb
je
movb
hlt
mov
aaa
dec
test
xor
and
pop
call
stc
movsb
adc
mov
xor
mov
out
or
je
xchg
or
icebp
test
cmp
and
cmc
aaa
push
xchg
add
mov
aas
push
in
push
into
sub
or
and
ljmp
xchg
iret
mov
aaa
pop
and
out
ja
adc
cmp
xchg
gs
and
mov
jne
pop
or
ror
pop
and
dec
sub
loopne
add
loopne
call
inc
dec
jne
jno
dec
ret
cltd
icebp
jno
mov
adc
sbb
pusha
int
lds
cmc
jno
push
sub
or
aaa
mov
adc
jp
and
push
movsl
xchg
jecxz
sub
jmp
push
sbb
fmul
inc
jo
cmp
cli
rorb
jmp
arpl
lods
jmp
sqrtps
push
dec
gs
aam
out
out
inc
test
cmp
fmuls
push
ret
mov
out
shll
aam
push
dec
mov
xchg
push
inc
xor
outsl
jp
push
xchg
inc
dec
jne
cld
adc
cmp
add
and
inc
xor
insb
mov
xchg
pushf
or
arpl
jle
pop
rolb
imulb
loop
cmpsb
leave
add
callw
mov
jl
rorl
cmp
insb
pop
cmpsl
and
push
cli
pusha
movsb
icebp
inc
and
and
movsb
popa
add
mov
xlat
fcomps
inc
call
inc
and
adc
fwait
insb
int3
xor
sub
adc
int
inc
pop
sub
and
push
les
push
aad
add
cmp
add
lret
add
js
jl
inc
dec
test
xchg
jge
mov
push
jle
mov
insw
movsb
stc
adc
pop
jo
pop
adc
jbe
jns
pusha
andb
mov
mov
push
cmp
sub
and
aas
push
ljmp
or
enter
cmp
xchg
imul
dec
fsubrs
rorb
les
lods
xor
call
or
inc
pusha
xchg
outsb
pop
xor
roll
xor
push
mov
pop
pop
inc
xor
pop
cmp
cs
dec
mov
sbb
addl
cltd
sub
in
in
jg
push
and
add
mov
je
shrl
pop
pop
data16
inc
mov
xor
pop
push
loopne
test
mov
push
or
bound
sbb
sub
loopne
xchg
add
and
cmp
test
push
add
xchg
psrld
call
test
inc
cmpb
test
dec
sbb
xor
pushf
ret
lahf
and
cmp
dec
xchg
adcb
scas
jb
lods
add
pop
test
inc
push
aam
inc
inc
sub
mov
outsl
mov
nop
adc
pusha
ret
sbb
mov
mov
inc
xor
lds
pushf
pop
jl
push
push
movsl
add
aaa
cmpsl
cli
and
push
push
cmc
daa
add
loopne
mov
dec
sub
inc
or
jl
adc
adc
out
movsl
and
mov
shl
aaa
in
pop
pop
filds
push
xchg
or
add
inc
jg
mov
inc
popa
insb
jae
test
notl
push
jb
sbb
pop
xor
mov
in
mov
shll
cmp
leave
mov
inc
or
incl
fimull
mov
xor
mov
cmp
jne
mov
lods
std
pushl
sbb
test
jne
dec
jne
jmp
cs
dec
push
add
clc
jle
dec
cmp
add
pop
cmpb
or
xchg
mov
fisttpl
ret
mov
push
dec
fisttpl
mov
movzwl
in
lcall
call
mov
and
cmp
je
mov
dec
and
outsb
or
sbb
dec
and
jmp
jle
in
subb
fnsave
loop
mov
insb
sbb
test
clc
pop
jne
out
jne
pop
pushf
cmp
aas
pop
je
pushl
add
add
decb
ja
cld
push
jecxz
leave
add
call
jmp
sbb
decl
push
cmp
mov
cmp
jb
cld
push
daa
outsb
fucomip
add
add
adc
add
mov
sub
pop
jle
add
sbb
mov
aaa
mov
mov
ds
in
push
push
adc
dec
push
jne
mov
mov
cmpb
ja
jb
add
add
pop
sahf
out
call
out
mov
mov
out
rcll
mov
sbb
adc
pop
test
add
call
dec
repnz
or
push
outsl
decl
fwait
mov
lods
cmp
lcall
or
shl
dec
pop
add
cmpsb
sub
mov
addl
outsb
fildl
add
pop
pushl
or
daa
aaa
mov
mov
xcrypt-cfb
cmpsl
in
inc
leave
pop
inc
xchg
ja
add
or
inc
xchg
xchg
int3
pop
and
lret
xchg
jg
dec
push
mov
pop
add
sbb
dec
hlt
sbb
or
adc
dec
addr16
rolb
mov
mov
mov
sbb
shl
testb
fldt
dec
je
popa
sub
rcr
mov
xor
popf
bound
das
push
dec
add
or
repz
mov
pop
pop
pop
pop
push
pop
bound
test
ret
fldl
ds
fmuls
dec
adc
test
and
fbld
sub
addl
push
das
pop
mov
pop
test
jno
pushl
fildl
sbb
adc
rcrl
jecxz
fsubl
adc
pop
add
insl
clc
xchg
jno
and
sbb
lods
xchg
stos
imul
orb
dec
add
push
jns
popa
push
xchg
cltd
mov
in
fcompl
cltd
cltd
rorb
jle
test
xchg
pop
inc
or
push
fadd
stos
mov
out
push
outsl
jle
add
jo
or
dec
adc
je
adc
mov
in
pop
mov
cmp
xchg
xchg
hlt
inc
dec
fs
push
dec
add
icebp
or
leave
push
sbb
xor
sbb
ss
lods
fadd
repz
jl
les
sub
int
add
and
xchg
ret
lcall
or
adc
mov
testb
push
mov
dec
adc
cmpsl
jge
pop
testb
and
inc
cwtl
pop
adc
or
pop
push
xorl
cmp
xor
xor
stos
cltd
bound
nop
pop
fwait
addr16
in
cmp
repnz
push
push
sbb
lods
inc
cmpsl
pop
sbb
call
ret
sub
add
or
sbb
mov
aas
or
or
mov
aas
insl
adc
mov
jmp
stos
xchg
mov
out
outsl
push
mov
cmp
dec
add
jmp
or
inc
imul
and
sub
cmp
dec
inc
pop
aaa
subl
xlat
push
push
adc
enter
mov
adc
pop
jbe
push
add
add
rolb
je
leave
cmp
mov
nop
cwtl
add
es
push
icebp
popa
jb
add
push
fildll
mov
xor
or
mov
push
es
sbb
or
arpl
ja
bndstx
or
adc
pusha
enter
xor
outsb
inc
and
insl
mov
das
negb
fisubrs
loopne
dec
push
add
mov
repz
mov
xlat
add
cmp
fsub
sbbb
or
mov
adc
cld
pop
test
es
enter
daa
inc
cs
or
dec
push
inc
push
sub
add
jmp
xor
and
or
mov
aaa
mov
add
daa
or
adc
adc
push
pop
test
fstps
mov
push
hlt
mov
mov
mov
inc
xor
js
mov
cmp
sub
mov
pop
and
inc
push
sub
rolb
add
mov
js
jnp
sub
xchg
int
jo
pop
in
inc
cmc
xor
xchg
push
dec
into
addb
cmp
mov
push
adc
in
and
out
jns
cmpsl
push
mov
cs
pusha
xchg
or
and
sbb
rcrl
add
bound
mov
mov
push
test
pop
movsb
aas
cwtl
mov
pop
add
sbb
cmp
lock
cmp
and
pusha
xor
push
cs
dec
or
inc
cwtl
push
jb
js
xchg
or
jmp
enter
push
hlt
mov
fadds
pushf
sub
lods
sub
test
dec
shlb
push
or
fstl
adc
inc
lcall
adc
adc
push
roll
cmp
jb
stc
push
pop
cmp
sub
mov
push
sbb
sbb
cmp
or
sbb
or
leave
popa
jl
add
cwtl
nop
iret
cli
sub
sbb
inc
mov
rorl
pop
and
cmpb
nop
stos
inc
or
lea
cs
mov
and
inc
cltd
xor
imul
and
or
int
dec
or
inc
in
pop
sub
push
lods
sbb
xchg
call
rorb
sub
add
mov
or
sub
in
mov
add
inc
leave
xor
xor
push
xor
adc
addr16
sub
add
cmp
add
mov
or
popf
adc
mov
push
dec
les
or
xchg
sbb
test
sbb
call
popf
outsb
sbb
cmpsl
lods
push
mov
push
hlt
ss
push
adc
xchg
pop
dec
cmp
fadds
fiaddl
push
and
adc
enter
or
adc
fcmovbe
mov
add
dec
sbb
and
push
pop
xchg
or
ret
push
ja
and
sbb
lods
iret
les
inc
out
scas
pop
push
shrb
add
sbb
or
push
cmp
ljmp
push
push
jo
enter
sub
or
add
stos
and
adc
cmp
xchg
adc
push
pop
inc
xchg
and
sbb
nop
outsl
dec
sub
dec
sbb
gs
adcb
add
ret
in
and
jns
sbb
adcb
popa
mov
sbb
mov
pusha
inc
subps
sbb
inc
cmp
stos
adc
stos
fs
pop
adc
adc
dec
adc
adc
lods
cmp
test
sub
mov
sub
xchg
or
sub
cmpsb
xchg
test
and
xor
sbb
xchg
ss
cmp
add
add
cmp
sub
cmp
mov
daa
sub
mov
push
push
push
xchg
andl
subb
pop
adc
dec
add
cmp
loope
jmp
mov
stos
adc
add
adc
sub
add
loopne
xor
inc
sub
jns
push
insb
cmp
xchg
adc
push
mov
out
or
xorb
push
push
fidivrs
mull
insb
push
je
push
lret
call
punpcklwd
adc
jne
out
pop
sub
mov
cld
xchg
inc
ret
mov
pusha
mov
mov
sbb
inc
or
sahf
push
mov
in
imul
inc
jo
push
int3
dec
fiadds
psubusb
xor
xlat
mov
push
push
add
jo
lret
sarb
sete
adc
adc
sbb
lods
sbb
mov
roll
mov
fidivrs
push
hlt
add
sub
adc
dec
and
pop
inc
movsb
pop
ficoms
xchg
inc
addb
orb
push
add
pushl
adc
push
outsb
movsb
push
ss
ja
xchg
push
das
pop
sub
or
add
enter
aam
pop
fs
add
add
pop
loope
xor
test
jnp
daa
push
push
cmpsl
or
orl
xor
mov
jl
in
fdivrl
testb
repnz
push
push
xchg
pop
sbb
pushf
clc
cs
or
cmp
and
push
mov
sbb
xor
adc
or
stc
cwtl
sub
andb
mov
lock
xor
pop
rorl
jmp
push
clc
jb
pushf
das
inc
cmp
jne
and
adc
popa
insb
mov
stos
pop
ret
mov
inc
and
xchg
adc
sub
inc
push
cmp
in
mov
cmpsb
xchg
test
and
and
xchg
daa
sub
sbb
sbb
sub
add
sub
es
rol
jne
mov
push
xor
or
inc
dec
sub
push
clc
test
dec
pop
sub
mov
inc
push
test
add
decl
in
shlb
mov
and
roll
in
push
add
xchg
push
add
mov
js
mov
scas
push
add
repz
jo
clc
fmuls
ret
sbb
mov
pop
lods
pop
sub
jmp
nop
mov
outsb
cmpl
add
das
cwtl
inc
and
mov
ffree
ret
ret
ret
sub
das
and
adc
repnz
clc
out
or
shrl
adc
or
and
push
or
jo
push
inc
mov
mov
loopne
push
cmp
adc
ffree
test
xlat
nop
sbb
xchg
addl
fsubrp
addr16
ja
sub
adc
pop
mov
cltd
or
clc
loopne
add
add
fldt
push
mov
push
data16
inc
add
mul
clc
push
mov
lock
shll
push
sub
out
push
test
sbb
inc
out
push
loope
or
imul
cmp
pop
divl
js
lock
fadd
imul
bnd
jl
int3
push
mov
idiv
push
je
aaa
leave
out
idiv
notb
insb
jo
xchg
cmc
push
mov
xor
adc
or
notl
lods
roll
sub
in
mov
mov
bound
mov
cmp
mov
jno
mov
xchg
add
sbb
mov
scas
jle
sbb
or
sbb
mov
pop
icebp
mov
out
test
add
sbb
je
pop
mov
dec
addl
cmp
jne
jg
icebp
pop
in
pop
cld
mov
push
or
xor
lock
inc
pop
add
xchg
insb
adc
test
aad
cmp
les
push
xor
mov
js
imul
dec
xor
fstl
and
add
xor
jmp
rcll
cmc
adc
sub
mov
sahf
add
xchg
add
pusha
mov
ljmp
lea
lods
add
mov
ret
insl
xchg
pusha
mov
cmp
pop
fs
das
mov
xor
out
or
or
sub
hlt
jg
mov
movzwl
cmpb
je
or
add
pop
faddl
iret
or
jmp
int3
xchg
int3
gs
inc
cmp
inc
and
pop
das
add
jg
and
sbb
and
cmp
xchg
in
xor
add
mov
cmpsl
jecxz
adc
inc
and
adc
push
add
frstor
clc
incb
cmc
int3
or
adcl
and
fsubrp
jle
pop
mov
push
into
or
les
in
and
cmp
inc
fidivrs
movsl
jne
ds
repnz
jbe
pop
les
xor
pop
jl
mov
cmp
cvtpi2ps
fisttpl
popf
inc
xchg
cmc
nop
testb
imul
lods
cmpsb
nop
sub
inc
pop
add
xchg
xlat
and
dec
jb
sahf
xor
les
jecxz
xchg
fdivs
mov
xchg
loopne
shlb
outsl
jmp
sbb
inc
jg
cmp
out
cs
in
push
or
das
das
sbb
fimull
push
adcl
jns
add
out
mov
add
out
add
inc
loop
xchg
xor
lret
data16
mov
or
mov
mov
mov
mov
xor
mov
mov
mov
adcl
or
inc
or
movsl
enter
lahf
mov
mov
add
push
out
or
jo
or
nop
jns
mov
adc
mov
loopne
xchg
mov
or
jl
in
lods
adc
mov
sbbl
mov
shrd
outsb
cmp
repnz
sub
xor
sti
in
jge
comiss
es
stc
mov
cmp
jg
sarb
mov
ret
mov
xchg
xchg
cli
cli
lock
add
sbbl
mov
movsb
cwtl
dec
pop
mov
addr16
std
inc
rcrl
sarb
roll
int
cmc
dec
mov
inc
jae
adc
cmp
leave
daa
ret
sbb
sarb
inc
add
mov
xor
gs
add
sahf
testb
outsl
sub
pop
or
and
pop
sbb
mov
shlb
lds
mov
inc
rolb
ja
sbb
sub
jle
jne
repnz
mov
dec
in
cmp
or
mov
out
pusha
mov
pusha
fstpl
sbb
aaa
je
add
add
ss
sub
xchg
jnp
fwait
inc
pop
xchg
add
inc
ds
loope
push
movsb
hlt
push
popa
xor
push
in
aas
pop
cmp
jg
dec
mov
and
jbe
icebp
sbb
rcll
jae
sub
mov
addb
push
dec
sbb
jo
lret
mov
cld
stos
mov
add
jl
in
sbb
sbb
pop
pop
nop
popf
aas
mov
out
arpl
addr16
je
insb
push
or
sbb
or
rcl
dec
rorl
aaa
dec
push
in
cmpb
lea
jg
add
xchg
xchg
addr16
jg
or
xchg
xchg
xchg
xchg
adc
and
fnstenv
rcrb
mov
sub
pop
inc
ljmp
data16
incl
mov
inc
inc
jg
mov
fsubs
and
jg
inc
mov
cmp
jl
add
cld
mov
and
inc
pop
pop
mov
push
cmp
inc
imul
sbb
roll
shll
mov
test
leave
out
inc
mov
mov
sarl
jbe
lock
pop
add
xor
adc
nop
mov
xor
push
add
jo
mov
addr16
lret
add
inc
add
fsubrl
jl
mov
or
test
mov
pop
lea
imul
pop
sbb
or
mov
lock
pop
or
or
jecxz
sub
add
or
mov
inc
pop
jmp
cld
sub
push
icebp
push
aam
and
rcr
xor
mov
imul
mov
and
nop
push
or
xor
in
loopne
movb
sti
add
ret
rclb
mov
enter
cmp
shrb
popf
negl
inc
xchg
add
xchg
pop
scas
ret
mov
sbb
adc
addl
adc
dec
into
fimull
mov
les
pop
xchg
ds
mov
xchg
sub
pop
xor
sub
jne
xchg
add
imul
ja
or
imul
mov
testb
adc
popl
pop
test
push
mov
cmpl
cltd
ret
jne
or
jb
xchg
aas
mul
clc
cmpsl
addb
xor
js
cmpsl
adc
xchg
pop
jno
icebp
sbb
repz
lods
push
loopne
jmp
mov
les
addr16
repz
sub
inc
rolb
mov
jecxz
adc
inc
add
pop
jnp
in
imul
pop
mov
or
push
push
mov
xbegin
push
imul
stc
dec
adc
into
mov
outsl
les
leave
rcr
out
jo
leave
mov
and
jl
inc
inc
xor
fmuls
add
bound
sbb
not
jg
pop
dec
pop
pop
pop
or
adc
push
aaa
incb
xlat
and
add
xchg
insb
mov
andl
sbb
mov
or
cmovg
lmsw
cli
push
add
or
addr16
cmp
push
lds
xor
test
pop
sub
mov
subb
frstor
or
pop
sbb
add
add
xor
push
mov
cmp
or
sub
mov
pop
test
in
mov
pop
cmp
fdivs
ljmp
inc
xchg
jne
or
mov
das
jmp
dec
adc
or
dec
add
test
dec
xchg
pop
and
hlt
adcl
and
push
fadds
or
mov
loopne
das
mov
cmpl
int3
mov
pop
jnp
clc
fistpl
xchg
movb
pop
dec
movd
ret
sbb
or
mov
addr16
xor
cwtl
or
add
test
pop
pop
movsb
dec
pop
out
mov
insb
inc
inc
dec
add
xor
outsb
clc
add
xchg
or
add
mov
push
mov
out
sbb
and
or
sbb
jp
or
stos
sub
bound
push
int
sbb
addr16
insl
adc
rcll
sbb
iret
repz
push
sbb
or
and
nop
push
push
dec
and
mov
or
xor
jbe
scas
movsl
mov
arpl
outsb
sbb
and
shr
mov
xchg
dec
mov
fiaddl
mov
aas
loope
push
mov
mov
rol
scas
inc
mov
push
ds
icebp
inc
out
cmpsb
xcrypt-cbc
cmpsl
push
push
push
add
xchg
enter
or
test
arpl
filds
inc
xchg
mov
orl
andl
and
push
mov
sti
inc
jb
std
push
sub
daa
cmpb
jne
popa
adc
ljmp
inc
call
notl
mov
stos
sbb
xchg
cmp
adc
rcrl
xor
mov
sbb
cld
mov
loopne
fmul
mov
cmc
fcmovnb
pop
dec
shll
xchg
push
add
and
aaa
ss
xchg
mov
inc
ja
add
mov
adc
cld
scas
push
roll
cld
in
fcoml
cmp
adc
or
je
dec
add
pop
push
or
and
mov
adc
rcpps
sub
add
lods
ffree
popa
test
dec
inc
cmp
and
sbb
push
jbe
aam
cmp
and
or
mov
iret
imul
pop
xchg
das
lcall
inc
and
cmp
adc
lret
ret
ret
ret
pop
push
dec
mov
and
mov
inc
out
mov
inc
sbbl
jecxz
rol
xorl
inc
cmp
test
cmp
add
jno
and
pop
fldcw
jl
into
and
or
outsl
dec
sbb
sub
cmpl
add
jecxz
inc
or
sub
pop
push
xchg
in
sub
adc
push
sub
and
inc
adc
and
push
xchg
xor
mov
xchg
nop
lcall
jnp
add
nop
popa
xorps
pop
sbb
mov
dec
fcomip
cmp
adc
xor
inc
aas
or
sub
iret
xlat
inc
sbbb
inc
pop
popf
lcall
dec
jnp
pop
push
je
inc
ljmp
jne
sub
pop
add
jnp
or
dec
lahf
imul
and
jae
mov
sbb
ret
test
jle
mov
loope
add
push
in
push
test
pop
inc
clc
js
inc
dec
dec
inc
dec
movsl
xchg
push
mov
adc
push
and
adc
mov
adc
dec
movsb
jno
push
mov
shl
je
add
and
mov
movmskps
in
popf
loopne
xchg
or
mov
ljmp
add
addl
hlt
rolb
call
sub
cmpb
mov
dec
imul
mov
fnstcw
sbb
push
andl
add
imul
imul
jg
andl
insb
arpl
testl
push
jg
jp
jno
cs
adc
xchg
pop
cs
inc
cmp
clts
dec
sbbb
test
aaa
je
xor
ja
sbb
clc
xor
or
xorb
mov
hlt
aam
imul
dec
push
xor
movl
pop
lret
xchg
sbb
cmpsb
inc
hlt
jp
iret
filds
add
jbe
inc
sub
dec
rolb
pop
pop
ss
shr
jge
dec
add
push
pop
jne
cmpb
in
pop
shlb
aas
lods
or
mov
dec
jg
jle
mov
aam
mov
cmp
or
iret
and
hlt
ja
add
pusha
cld
and
mov
sbb
dec
inc
jmp
loop
repz
mov
jp
cmp
sub
je
sub
add
cmpb
movl
mov
aam
pop
jl
or
imul
es
or
sarb
inc
loope
add
leave
cmp
sbb
pop
mov
pop
and
jb
adc
aaa
nop
inc
or
xor
dec
adc
or
mov
push
cmp
pop
mov
cmp
xchg
jns
and
push
cmpsb
mov
ss
dec
push
mov
jl
lock
pop
xchg
mov
cwtl
sub
fists
aam
cmp
mov
nop
sub
loope
add
inc
notl
add
xor
mov
mov
adc
ret
jp
sub
subb
popf
cld
lcall
mov
sti
lock
mov
add
inc
and
cmp
push
push
sarl
mov
orl
jle
cmp
out
rclb
je
or
mov
icebp
or
in
fsubrs
shrb
addl
je
ret
mov
adc
cwtl
cltd
mov
or
or
sbb
push
mov
test
xor
mov
out
pop
aam
dec
push
clc
or
xchg
xor
dec
and
or
push
add
cltd
adc
xor
and
mov
jmp
mov
mov
push
inc
out
jb
ds
mov
inc
xorb
rolb
jmp
xorb
cmc
mov
pusha
and
ds
add
and
pop
push
aaa
or
xor
clc
xchg
shl
push
mov
add
dec
jmp
push
xchg
inc
inc
cs
cltd
std
test
or
jp
inc
je
sub
push
arpl
cmp
pop
lcall
push
xor
sbb
add
xchg
inc
add
adc
jle
mov
xor
jl
jmp
jne
rolb
sti
inc
mov
dec
cmp
aaa
jne
sbb
push
jne
das
or
push
xor
jns
daa
add
cltd
pushf
lahf
and
sbbl
sahf
mov
adcl
sti
add
mov
add
fsubp
jmp
nop
cmp
mov
inc
shrl
jo
js
xor
lret
ret
lea
ret
outsb
gs
mov
test
mov
jno
xbegin
dec
jmp
mov
adc
add
xchg
mov
xor
xor
int
push
aam
mov
push
arpl
jae
mov
sbb
pop
mov
or
pop
movb
xchg
jg
call
and
push
pop
xor
pop
daa
jge
test
in
adc
aas
mov
ret
addr16
pushf
orb
jmp
and
loope
nop
mov
push
push
enter
sub
add
inc
ja
jmp
sbb
test
shll
and
sahf
iret
inc
inc
or
adc
push
iret
in
sbb
and
adc
and
add
jecxz
pop
in
push
repz
mov
adc
jae
in
in
add
sub
movsl
fwait
je
out
aas
dec
pusha
mov
inc
lret
dec
pop
add
or
clc
mov
outsb
sbbb
dec
mov
test
je
or
ret
and
fcoml
mov
hlt
adc
push
lea
mov
cmpsl
orb
lds
je
das
insl
loopne
inc
mov
xchg
push
and
fdivrs
adc
dec
sbb
and
loop
fdivrs
mov
sbb
outsl
cmpsb
cmp
jmp
adc
sbb
cwtl
xor
xor
inc
imul
jp
xchg
mov
or
leave
add
adc
pusha
adc
fdivrs
jle
cmp
push
es
ja
mov
sub
sbb
pop
xlat
push
out
mov
sbb
icebp
das
nop
mov
in
adc
out
add
and
cmp
jmp
mov
jecxz
cmp
in
or
adc
jmp
mov
imul
push
xchg
movsb
and
repnz
je,pn
mov
dec
outsl
jge
test
adc
cmpsb
je
imul
mov
pop
je
in
shrb
fimuls
jle
call
jns
mov
orb
sbb
mov
mov
jmp
push
add
test
adc
xchg
sub
addb
xchg
or
push
jnp
pop
jle
adc
les
cmpsb
or
mov
test
cwtl
or
pop
pop
sub
push
sub
sub
jmp
testb
or
adc
repz
mov
je
jmp
sub
cmp
das
xor
push
add
insl
aas
mov
adc
dec
mov
push
popa
data16
clc
aam
inc
xor
mov
push
lods
push
movaps
lds
fwait
mov
mov
mov
divb
dec
push
and
and
aad
or
add
mov
cmp
sub
add
rcrl
adc
xchg
inc
ss
pop
ja
inc
xchg
inc
dec
icebp
cmpsb
outsl
dec
xchg
lahf
add
mov
or
push
push
push
lcall
and
test
jno
cmc
cmpsb
push
push
push
pop
cmp
jmp
or
xor
jno
outsb
and
pop
sbb
stc
out
mov
scas
test
lea
and
inc
stos
push
jmp
or
adc
jno
xlat
cmp
pop
sub
jmp
stos
mov
and
inc
imul
outsl
jle
xchg
dec
push
repnz
mov
xchg
rclb
or
jmp
jnp
inc
sub
dec
mov
leave
loopne
lahf
or
jb
inc
mov
xchg
add
or
inc
mov
sbb
jle
sbb
test
xor
stos
mov
pop
imul
lea
cltd
js
lods
sbb
or
jg
lret
pushf
ffree
sub
test
mov
sbb
in
loope
sbb
push
aas
ljmp
or
mov
push
enter
icebp
repz
addr16
push
mov
addr16
xchg
adc
call
push
bound
ds
popa
inc
mov
cwtl
dec
cmp
push
stos
mov
aad
loopne
pop
and
out
push
mov
cmpsb
in
add
pop
and
pushf
sub
xchg
cmc
orl
in
adc
jecxz
jne
cmp
idiv
add
mov
jmp
in
and
outsb
insb
and
xor
movb
and
pop
sub
push
mov
adc
mov
popa
call
lock
daa
leave
cli
mov
testb
sbb
clc
jne
mov
cmp
cwtl
inc
add
mov
test
adc
addb
addb
dec
hlt
dec
inc
clc
mov
movb
mov
je
imul
stos
pop
inc
adc
mov
or
sub
adc
imul
rorl
ja
stc
xchg
dec
cs
and
jns
sbbb
daa
and
sub
dec
pop
or
daa
pusha
aas
lea
aad
das
dec
rolb
mov
mov
xchg
stos
adc
icebp
adc
arpl
or
inc
add
pop
cltd
push
test
pop
lcall
adc
xor
adcb
add
and
std
cmp
bound
jnp
add
jg
mov
sub
sub
lcall
mov
cmp
je
cmpl
rolb
test
sbb
inc
cmpsl
ljmp
cmp
das
mov
dec
leave
mov
push
ret
fdivp
je
xchg
pop
gs
push
rcrb
sbb
xchg
xchg
or
jae
jbe
mov
add
adc
rcrl
mov
xor
iret
inc
inc
adc
scas
sbb
pop
xor
cwtl
repz
mov
je
or
sub
arpl
out
xchg
cmp
sub
roll
cs
push
cld
pop
popa
or
or
nop
sbb
mov
lock
adc
nop
or
xchg
ds
jecxz
add
mov
mov
and
leave
mov
out
add
leave
andl
in
push
push
enter
repnz
in
sbb
cmp
movsl
movsl
in
lock
pop
sbb
adc
shlb
sub
inc
fstpl
clc
cmp
jle
dec
push
int
xorl
jne
mov
pop
jg
out
add
sub
dec
push
iret
iret
sub
clc
lea
mov
fstl
mov
sbb
lret
fisubrl
out
loope
movb
lea
pop
mov
out
add
test
inc
mov
ror
xorb
ja
in
scas
or
dec
insb
inc
enter
in
push
mov
adc
dec
dec
add
adc
add
shlb
inc
and
popa
and
aas
fsubl
test
xlat
sub
sbb
loopne
jecxz
inc
sub
jo
imul
sbb
push
lcall
mov
jl
cmp
xchg
cwtl
mov
dec
insb
sbb
inc
clc
push
pop
adc
push
mov
dec
cmp
mov
dec
js
gs
insl
imul
dec
in
es
cmp
push
test
movl
jb
add
inc
test
mov
or
ss
sub
jle
adc
cltd
push
test
jl
loop
sub
cmpsl
mov
je
mov
or
adc
mov
rolb
je
or
jmp
mov
movsb
dec
sbb
add
cmpb
mov
push
shll
lods
ret
sbb
xchg
pop
adc
inc
test
movb
push
insl
and
pop
inc
add
shlb
nop
shrb
pop
cmp
push
and
cmpsb
nop
xchg
loopne
mov
xor
push
sbb
dec
adcb
mov
pop
fidivl
adc
decb
mov
cmp
lahf
push
sarb
adcl
test
sbb
or
xchg
and
jmp
jno
jb
shll
add
xchg
rcrb
push
mov
je
or
int3
mov
lea
clc
dec
or
jne
inc
mov
pusha
sub
or
push
hlt
rorl
adc
jne
loop
icebp
jno
ret
outsl
add
insl
adc
aaa
popa
add
cwtl
mov
loopne
mov
mov
push
aad
jl
sbb
push
push
orl
push
or
cs
inc
and
lods
and
or
in
rcl
push
adc
inc
mov
and
push
add
enter
lahf
xchg
call
inc
add
and
push
pusha
push
fnstcw
clc
jge
mov
adc
cmp
xor
mov
mov
xchg
sub
mov
orl
or
pop
adc
pop
ret
in
aad
cwtl
adc
xchg
daa
and
or
dec
enter
push
mov
outsl
xchg
jmp
sbb
int3
mov
daa
sbb
in
jg
sbb
lcall
sbb
loopne
sbb
mov
es
sti
sbb
mov
inc
mov
xor
aam
sbb
inc
nop
xchg
sub
cmp
pop
shrb
push
sarl
scas
adc
mul
cs
int
inc
mov
xor
mov
add
sub
cmpsl
add
mov
push
cmp
inc
lods
fidivl
ror
mov
push
mov
mov
or
fistps
popa
rsqrtps
push
jecxz
mov
mov
adc
lods
std
loopne
inc
mov
push
push
outsl
sub
or
push
xor
push
push
adc
adc
sbb
ror
lret
add
bound
and
add
lods
jmp
dec
lods
push
add
add
inc
pop
js
scas
adc
add
orl
inc
fisttps
add
sbb
xor
adcl
mov
popa
inc
insb
loopne
jmp
xor
or
and
xchg
or
adc
loop
inc
mov
adc
xchg
sbb
or
xchg
or
inc
push
mov
loopne
fildl
xor
cmp
outsb
jns
jo
mov
dec
push
shr
clc
leave
je
call
dec
inc
shrl
add
adc
mov
inc
push
add
shrl
mov
add
mov
sbb
mov
mov
add
inc
imull
ret
lods
rclb
and
jge
cmp
rcrl
andb
sbb
jl
add
mov
xchg
mov
push
mov
sub
pop
es
and
jb
hlt
mov
loope
sbb
mov
mov
test
xor
cs
and
addr16
std
mov
sub
jle
inc
test
je
sbb
hlt
jbe
inc
push
inc
dec
outsl
cs
xchg
or
push
iret
mov
pop
dec
push
sbb
or
or
or
jb
xor
lock
repnz
scas
push
lock
xchg
add
mov
in
mov
mov
popf
mov
xchg
loop
add
testl
add
fsubl
sti
lahf
sbb
inc
mov
dec
cmp
jl
inc
pop
ret
int3
outsb
daa
xor
mov
mov
sub
pusha
mov
fdivs
xor
xchg
stc
inc
cwtl
cwtl
mov
pop
nop
add
and
jo
mov
mov
mov
dec
arpl
ret
adc
mov
cs
inc
push
and
cmpsl
xor
xchg
test
mov
xorb
sbb
mov
mov
push
or
imul
cmpsl
inc
mov
or
sbb
or
push
push
cmp
add
push
add
add
mov
iret
add
dec
xchg
add
xchg
loop
or
xchg
add
inc
cmp
imul
dec
mov
inc
push
mov
inc
inc
and
cmp
aam
sub
adc
jecxz
xor
pop
adc
hlt
nop
and
adc
dec
jb
in
and
xor
aas
xchg
jmp
subb
inc
add
or
sbb
or
out
dec
or
notb
inc
gs
push
or
paddb
jp
and
test
jmp
into
mov
lahf
or
xor
pop
inc
clc
cmp
enter
clc
inc
out
inc
stc
mov
imul
push
je
dec
ss
xchg
mov
lret
pop
test
adc
call
or
pop
cmp
adc
adc
lock
movsb
jmp
add
push
add
lahf
push
adc
xchg
sbb
loopne
pop
mov
mov
xor
int
dec
jp
push
add
mov
cmpsl
aaa
pop
or
addl
shlb
fcomps
push
mov
mov
mov
mov
imul
jbe
lods
inc
notb
pop
cmp
jg
push
lea
inc
cld
pop
or
rol
push
jecxz
cwtl
and
loop
hlt
mov
or
lock
sbb
add
dec
jo
scas
sbb
adc
mov
mov
mov
or
jge
push
sub
hlt
ret
jne
sbb
enter
add
jecxz
mov
dec
mov
les
fs
enter
lock
aaa
clc
jmp
repnz
mov
movsl
in
loope
sbb
adc
adcb
push
fcoms
leave
push
push
mov
cwtl
shrb
cwtl
js
xchg
insl
pop
xlat
and
cmp
enter
sbb
xchg
aaa
hlt
aad
aas
insl
mov
adc
aaa
js
inc
mov
sbb
fsts
push
add
and
inc
mov
pop
shll
mov
lcall
inc
nop
or
adc
mov
dec
jle
inc
dec
addr16
scas
or
out
push
addr16
outsl
fsubs
mov
pop
xor
cwtl
pusha
add
lret
ret
out
or
rorl
hlt
arpl
fs
inc
adc
sbb
xor
adc
jg
cmp
shl
cmpsl
test
in
and
adc
cmp
mov
in
and
lods
scas
sub
fwait
hlt
pop
sahf
ja
lcall
xchg
ja
sbb
adc
inc
fsubl
adc
add
shlb
xchg
cmp
pop
inc
dec
jne
jg
adc
leave
adc
adc
xchg
push
dec
mov
mov
mov
cs
push
cmp
or
adc
pop
mov
lea
in
push
xor
fmul
and
hlt
pop
dec
insl
imul
jbe
xor
lods
stc
fldl
or
push
nop
push
popf
sub
xor
xchg
dec
or
mov
or
jb
testl
mov
icebp
out
jge
add
push
mov
pop
les
cmp
std
fs
std
out
mov
in
inc
loopne
xchg
mov
subl
push
xor
or
call
test
jecxz
orb
hlt
test
sub
or
mov
and
adc
nop
ss
ds
insl
fst
testl
push
push
lods
add
push
push
xchg
mov
movsb
cmp
fdivrs
imul
lock
push
hlt
jne
clc
sub
and
add
xchg
jl
nop
push
or
pop
fsubrs
test
nop
jae
xchg
aaa
lahf
sbb
xchg
or
sbbb
xchg
or
cmp
xchg
or
mov
leave
movsb
mov
jne
adc
and
sbb
or
jge
dec
loopne
insl
or
xchg
out
testl
shrb
inc
and
pop
xor
xlat
or
cs
sbb
push
mov
andl
fisubl
imul
in
adc
cltd
fwait
add
inc
fdiv
cltd
jge
and
adc
push
or
pop
pusha
ret
mov
push
mov
push
inc
fs
outsb
arpl
xchg
and
inc
inc
stos
lcall
movsl
rcll
cmove
add
shrb
add
clc
adc
popa
xchg
pop
xchg
xor
outsl
add
dec
adc
icebp
inc
insb
popa
addr16
sub
or
das
or
mov
add
or
dec
popa
push
popa
insb
adc
subl
dec
push
mov
add
push
add
lahf
push
stos
adc
call
sbb
inc
push
cs
pushf
ds
repz
aam
add
xor
cwtl
enter
cmp
push
outsb
je
xchg
mov
out
cmp
mov
jge
mov
ss
or
xor
pop
notb
and
xor
fs
push
test
inc
add
xor
cld
fbld
filds
aaa
push
and
mov
ret
dec
pop
push
inc
daa
sbb
dec
pop
repnz
incl
stc
fwait
sti
xor
mov
push
pop
movsb
dec
push
je
lods
les
xorl
mov
dec
imul
sbb
sti
ss
add
xchg
scas
dec
shl
loopne
inc
add
add
dec
ret
das
sbb
push
mov
imul
bnd
imul
dec
xor
pop
add
arpl
lret
mov
fs
fdivrl
int3
in
and
xchg
add
inc
cmp
div
and
adc
fs
and
mov
imul
test
enter
inc
cli
repnz
cltd
sub
jl
xor
dec
add
push
jne
cmpsl
mov
jae
cs
out
es
roll
fisubs
filds
or
add
test
or
inc
jb
ljmp
in
or
in
or
stos
stos
insb
jo
sbb
inc
ja
pop
cmc
push
orl
jae
ret
scas
inc
gs
add
push
cmp
inc
adc
popa
xor
sbbb
push
popa
fs
cmp
push
nop
inc
call
and
adc
xchg
outsl
xor
or
subb
fs
push
xor
xchg
sub
or
mov
and
nop
mov
out
shrb
into
jne
sbb
insb
pop
int3
cwtl
push
sbb
cmp
vandpd
ss
push
xlat
rclb
pop
or
sahf
imul
and
inc
xlat
aam
inc
dec
addr16
test
xor
mov
pusha
xchg
fildll
fimuls
xor
enter
pop
xor
adc
jl
add
scas
push
out
popf
xchg
add
add
shlb
aam
les
adc
loopne
out
pop
push
loopne
insb
inc
cmp
xor
inc
outsl
mov
xor
inc
cld
cld
or
data16
fsubrs
imul
cmpsb
add
add
or
fsubs
push
add
xor
jb
nop
add
jle
lret
mov
sbb
push
mov
je
rclb
xor
fbstp
insb
data16
xor
and
mov
sub
or
jl
push
pop
nop
and
push
inc
rcrl
push
xchg
cld
or
sbb
push
jo
dec
ficoml
fiaddl
jo
pop
or
push
or
inc
push
pop
pop
ja
add
test
int
xor
je
arpl
or
mov
jbe
out
jl
test
sub
add
fisubrs
push
outsl
mov
movaps
addr16
sbb
jo
fdivs
adc
sub
sbb
stc
mov
cwtl
nop
cld
push
push
fadds
add
mov
cmc
stos
call
inc
jae
inc
dec
inc
xchg
shlb
jae
push
inc
sub
pop
xchg
inc
xorl
stos
adc
mov
insl
loopne
inc
or
inc
xchg
push
pop
icebp
push
or
sbb
pop
call
mov
xchg
jae
lods
or
jae
pop
pop
and
adc
jecxz
and
or
jns
nop
pop
call
xchg
or
or
sbb
dec
pusha
cmp
adc
push
mov
outsb
and
sbbl
adc
push
xor
orb
ds
inc
jno
pop
ret
push
adc
out
lods
and
cmp
cmp
nop
adc
push
xchg
pushl
pop
js
mov
xor
ss
cli
cmp
xor
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
cmpb
or
or
and
add
pushf
mov
mov
mov
mov
and
add
add
stos
xchg
pop
cmp
add
sub
sbb
dec
jecxz
mov
std
and
fsubl
xor
push
xchg
adc
push
testb
inc
cli
and
cs
in
add
add
xor
mov
jns
push
inc
or
lock
test
in
test
loopne
push
push
sarb
xchg
pop
push
popf
push
fnstcw
mov
pop
sbb
dec
xchg
mov
mov
xchg
mov
insl
cmp
adc
clc
push
push
or
je
push
je
jmp
orb
mov
sbb
sub
cmpsb
or
mov
jns
stos
pop
cli
push
sbb
sbb
or
ljmp
mov
inc
fists
inc
jnp
dec
add
cmpl
and
inc
jmp
loope
ljmp
xor
sbb
insb
movsb
inc
inc
dec
pusha
sub
dec
call
jl
jmp
nop
or
mov
leave
jecxz
aam
ds
imul
aad
or
xchg
mov
cmp
cmp
adc
inc
or
cmc
or
fnstcw
adc
pop
inc
iret
adcl
jge
adc
jl
pop
push
cmp
testb
jl
or
dec
mov
and
ret
sub
test
lahf
rcrb
dec
loope
fldt
jge
lds
pop
dec
add
mov
pop
mov
xor
jmp
popa
and
mov
cmp
lods
add
mov
lds
sbb
movsl
ret
pushf
mov
xchg
or
jmp
inc
sti
push
add
pusha
xchg
xor
loop
das
ret
push
adc
andl
mov
scas
and
xor
movzwl
mov
and
in
or
pusha
adc
adc
fildl
jno
jle
inc
loopne
dec
xchg
cmp
xor
add
sti
cmp
ja
sbb
xor
pusha
je
pop
inc
popa
mov
or
sub
jg
mov
ret
lock
push
clc
andl
inc
into
sub
sbb
add
insb
clc
push
insb
push
sarb
ljmp
add
jmp
cmp
jle
int
xor
cli
sub
sahf
sub
in
jle
adc
jmp
icebp
mov
mov
cmp
ja
jo
adc
adc
xor
jmp
ss
xor
inc
shl
push
xor
std
leave
pop
nop
pushl
shrb
aaa
in
xlat
adc
in
cld
jp
pop
adc
push
clc
dec
and
mov
inc
xchg
adc
xor
sbb
pop
xorl
push
lahf
xchg
orb
sub
mov
adc
jns
bound
sbb
pop
mov
cmp
pop
sbb
enter
sub
and
inc
dec
xor
add
pusha
ss
loopne
cmc
imul
pop
fs
or
insb
pop
sbb
push
bound
in
orb
orl
cmpsl
push
dec
shrl
insl
mov
xor
xor
cltd
dec
jecxz
jp
pop
push
cmp
xchg
outsb
mov
roll
cmp
sub
mov
inc
sti
mov
xor
rcrl
inc
cmp
add
push
jo
fdivrl
cmp
lock
and
jg
addr16
xlat
add
pop
inc
ret
adc
pop
out
inc
add
xor
push
sub
das
add
add
sbb
lcall
add
insb
insb
adc
push
add
mov
iret
push
xchg
sbb
mov
add
push
jmp
sub
jo
lods
mov
mov
dec
jg
cmpl
adc
mov
adc
lea
push
push
fnstenv
outsb
mov
inc
mov
add
js
xor
jmp
dec
xchg
xchg
shll
clc
jo
imul
or
mov
cmpb
add
xchg
lock
dec
mov
or
and
fisttpl
dec
sbb
inc
add
push
loopne
jae
enter
bound
inc
jbe
ret
cmp
adcl
mov
sbb
push
xor
rol
mov
add
int
sbb
push
popf
iret
lods
push
rol
jbe
lret
aas
lcall
aam
cmpb
adc
cmp
push
pop
add
push
inc
ret
pop
push
testl
xor
dec
add
pop
nop
mov
ja
js
xor
pop
leave
mov
insl
add
push
mov
repz
gs
dec
push
mull
ljmp
out
testb
adcb
dec
js
rorb
inc
into
pop
xlat
or
mov
inc
movsl
jge
jmp
and
xor
or
push
pop
test
es
push
push
and
cmp
and
test
jo
iret
in
push
sti
sub
sub
xchg
pop
push
fcomi
mov
fcompl
mov
into
adc
sbb
ret
adcl
xor
xor
mov
push
push
sar
imul
or
stos
gs
outsl
add
loopne
push
pop
cmp
mov
scas
pop
fs
and
fsubs
dec
cltd
add
adc
pop
ret
std
add
push
push
out
mov
sti
cmp
mov
scas
loopne
xor
or
lcall
movsl
fnstenv
ret
sbb
rorb
pop
adc
mov
pop
cmp
je
add
ds
fadds
xchg
shr
iret
and
add
pop
int
jnp
movl
or
mov
fidivl
gs
jne
out
ss
cmpsb
or
or
je
arpl
add
sub
daa
push
mov
mov
adc
and
xor
ss
pop
and
lds
and
fs
pop
adcb
and
pop
sbb
cmp
mov
pusha
clc
lcall
xor
cmp
jge
mov
mov
cmp
jae
mov
lock
int
pop
jbe
sbb
add
cmp
cmp
roll
and
xor
sbb
or
dec
push
or
pusha
inc
popa
mov
push
push
rorb
push
push
dec
add
fsubrl
lcall
xchg
mov
fwait
ret
mov
push
and
pop
rolb
fwait
insb
lea
shll
xchg
lea
sbb
cld
divb
or
mov
outsb
ficoml
push
and
add
mov
add
test
je
jae
fldl
repnz
mov
clc
ss
jne
outsb
jne
and
enter
sbb
dec
add
cwtl
push
inc
push
fwait
ret
xor
xchg
ret
lsl
xchg
ret
mov
std
in
and
push
fsubrs
mov
inc
pop
addl
inc
jp
push
nop
int3
xchg
addr16
xor
cmp
add
outsb
inc
out
stos
mov
xor
decl
je
test
sar
xor
mov
pop
mov
mov
test
push
mov
and
ret
fidivl
fs
adc
ret
push
les
mov
add
cmp
cld
test
dec
or
ss
mov
loope
xor
push
mov
aas
fcmovu
adc
lea
cmp
pop
adc
aas
add
push
adc
inc
rcll
cmp
inc
adc
std
and
je
inc
sarl
das
pop
xchg
loopne
mov
and
sbb
lahf
int3
add
sub
std
push
out
xchg
jne
inc
clc
cld
and
orl
mov
cmpsb
sub
cmp
adc
cltd
pop
xor
jle
or
mov
rcr
jl
loope
sub
aas
les
sbb
add
push
movb
test
and
fcoms
pop
fisttpl
dec
andb
and
lcall
lea
mov
jecxz
in
pusha
push
push
rcrb
push
push
add
dec
fimull
mov
cld
jno
jnp
loope
push
decl
aaa
fadds
das
jmp
mov
push
sbbb
divb
jne
cmp
mov
notb
stc
lock
inc
fisttpll
cmp
push
loope
jo
mov
or
push
icebp
push
mov
jle
push
push
dec
cmp
cmp
std
mov
mov
adc
push
fsubs
mov
imul
sub
stc
inc
cmp
xlat
mov
adc
add
push
xor
movl
fadds
pop
push
or
xorb
cltd
in
push
push
push
add
inc
push
sub
cmpl
icebp
movsb
ret
pop
movsl
add
imul
sub
stos
test
and
lea
lea
dec
insb
sbb
mov
sub
sub
add
dec
cmp
sbb
xor
add
add
lods
xor
enter
hlt
hlt
pop
fs
ss
hlt
sbb
js
mov
je
pop
aad
cwtl
test
in
loope
jp
adc
or
pop
imul
mov
add
and
icebp
mov
das
leave
lock
movsb
loopne
in
pop
add
rolb
cmpsb
filds
std
fs
aas
not
in
scas
fdivs
xchg
es
aad
mov
cmpsb
cli
xchg
or
push
sub
sub
test
shll
jp
outsb
jge
int
in
sbbb
push
pop
loopne
and
in
je
dec
add
fs
rcll
dec
pushf
pop
jo
jg
or
ret
xchg
lahf
or
shll
inc
test
cmpl
ror
out
mov
inc
or
sbb
xor
orl
dec
aas
pop
imul
adc
and
loopne
loope
es
jo
or
or
push
and
adc
int3
aam
mov
pop
push
std
sub
shr
in
ret
shll
stc
out
push
sbb
mov
push
daa
cmp
adc
pop
xchg
dec
pop
rclb
stc
mov
push
call
rolb
mov
cld
sbb
and
cmp
decl
jb
test
fs
add
bound
inc
pushf
sbbl
or
xchg
les
mov
jns
xor
xor
or
or
clc
xor
jns
and
fwait
inc
mov
or
push
mov
push
ss
mov
add
les
inc
adc
and
aad
adc
in
adcb
and
dec
call
adc
push
add
adc
or
and
int
inc
hlt
xchg
inc
lods
adc
dec
push
enter
push
dec
inc
lret
add
cwtl
push
fdivs
out
jae
int3
jmp
cmpb
testb
mov
mov
and
adc
mov
add
add
cmpsl
cmp
inc
gs
or
cmp
inc
leave
or
dec
push
ret
scas
inc
cs
pop
pop
mov
fsubr
adc
int3
cmp
cmp
pop
sti
cmp
xor
je
jp
pop
ss
out
cmc
aam
sbb
xchg
cmp
jl
fistl
cltd
xor
daa
inc
pop
jmp
adc
rcr
sub
jle
fidivrl
pop
mov
xor
repz
or
sub
and
push
mov
xor
push
dec
dec
push
cmp
movl
sub
push
cwtl
loop
xor
test
repz
xchg
or
dec
ljmp
mov
mov
xchg
and
loop
xchg
repz
clc
loopne
rorl
mov
popf
cmp
dec
scas
jne
add
xor
mov
push
std
add
mov
cmpsl
movsb
clc
push
dec
sub
outsb
test
repnz
add
mov
and
dec
inc
mov
cmc
out
leave
sbb
lret
push
ljmp
jp
add
ds
and
je
mov
xchg
out
and
jne
test
prefetcht0
mov
add
push
jae
sub
dec
sbb
push
jecxz
xor
xchg
fmull
push
and
or
sbb
cmp
out
mov
add
push
and
push
add
popf
push
push
shlb
jecxz
sub
mov
fwait
repnz
add
loop
lcall
and
fsub
and
and
mov
mov
jg
mov
push
cmp
mov
pop
lret
cmp
and
imulb
inc
xor
lea
xchg
or
push
xchg
xchg
outsl
cmp
xchg
xchg
inc
and
inc
mov
pop
shrb
lea
sub
in
adc
shll
cmp
jne
xor
fldcw
shlb
sbb
mov
mov
xchg
adc
jne
jg
or
inc
jbe
jb
mov
or
inc
inc
aam
add
sub
or
xchg
hlt
inc
mov
pop
or
sub
lahf
popf
sub
cmpl
cmp
pop
xorb
mov
out
int3
jno
out
xor
xor
les
mov
fcomps
adc
push
or
cmp
pop
push
outsl
add
inc
adc
shlb
ret
das
push
insb
sub
dec
pop
add
ret
jns
push
cmpl
fdivrl
sub
add
fwait
cmp
or
push
fidivl
lods
add
xor
jl
or
inc
xor
dec
loopne
xchg
adc
imul
scas
mov
xor
aas
jg
aam
jo
jb
adc
clc
dec
rclb
mov
mov
in
mov
add
xor
mov
xlat
mov
enter
xchg
icebp
daa
mov
cmp
lcall
push
push
pop
in
adc
je,pn
int
jne
cmp
sub
and
jp
inc
xor
cs
push
push
enter
movb
mov
loope
test
lds
xchg
fisubrs
ret
xlat
loope
mov
sarb
movsb
loopne
setne
out
dec
ss
clc
inc
xor
push
inc
mov
outsl
and
xor
and
lahf
enter
mov
lret
add
into
adc
out
out
add
pop
pop
add
movl
aaa
cmp
dec
je
or
sub
imul
sbb
jl
adc
sbb
push
popa
xchg
xchg
ja
pop
lods
jne
test
inc
pop
or
jl
adc
filds
les
push
enter
cmp
subb
adc
cmp
cmp
sbb
xchg
add
pop
loope
fimuls
inc
cmp
sbb
sbb
les
push
jb
jo
ds
pusha
add
pop
xchg
push
mov
into
adc
mov
stc
xchg
cmp
in
in
cmp
fbstp
push
dec
push
or
pop
sub
lcall
jb
jl
push
js
inc
mov
sbb
or
xchg
lods
dec
dec
popf
or
cmpsl
roll
jmp
aad
mov
pop
les
push
mov
pusha
out
fisubrl
inc
or
push
xor
shl
push
inc
push
shll
pusha
cmp
enter
mov
into
fidivrs
cmp
or
decl
mov
movl
and
mov
mov
xchg
ret
push
popa
adc
push
xor
pop
dec
xor
nop
mov
adc
push
pop
fmulp
or
femms
lock
inc
or
fs
das
xchg
dec
add
in
pusha
push
fdivl
enter
cmp
fsubr
sbb
cmp
push
outsb
and
ret
inc
cld
xlat
jne
fdiv
mov
enter
xor
or
inc
test
inc
stos
push
mov
cmp
test
dec
into
jle
push
jo
lock
push
push
sti
adc
sub
fsubl
mov
subb
aam
dec
mov
in
xor
add
pushf
pusha
dec
in
or
xor
fs
imul
push
cltd
pop
inc
xor
lock
fnsave
xor
dec
cmpsb
adc
jno
adcb
rdpmc
leave
add
mov
frstor
cmp
xchg
mov
in
mov
cs
xor
cmp
test
and
in
push
push
cwtl
xchg
push
add
push
inc
pop
push
xor
les
sbb
inc
out
insl
inc
pop
sbb
mov
adc
lea
xchg
rorl
inc
add
or
pop
adc
mov
fdivrs
xchg
lret
and
jo
daa
gs
insb
jo
inc
pushf
jns
dec
loopne
cmp
jne
sbb
push
insl
sub
push
pop
movsl
push
nop
addb
push
lcall
mov
inc
mov
out
dec
or
lcall
cld
mov
adc
mov
mov
or
ficoms
push
in
and
xchg
jb
cmpl
and
cmp
sbb
cmp
shlb
cmp
sahf
lods
pop
mov
dec
xchg
outsl
std
add
es
into
mov
mov
and
xchg
push
mov
imul
and
xchg
adc
mov
dec
or
inc
dec
jne
out
inc
mov
mov
fildl
xchg
loope
lret
push
add
enter
dec
les
lock
fstps
stos
fs
push
cmpsl
fcompl
cld
push
test
aaa
pushl
dec
cmp
jns
add
movsb
jo
mov
mov
xchg
push
push
adc
in
add
mov
sub
pop
or
outsl
cmp
sub
adc
sbb
adc
adc
mov
loopne
cmc
fiaddl
mov
or
sbb
nop
loopne
mov
stc
cwtl
cmp
inc
roll
mov
outsb
dec
push
xchg
popl
and
or
imul
sti
inc
mov
add
xchg
test
adc
enter
pop
xor
in
fdivs
dec
push
pop
dec
and
insb
inc
loopne
loopne
jmp
icebp
pop
and
inc
stc
pop
push
imul
pop
les
sbb
or
test
mov
pop
cmc
xlat
push
ror
inc
add
mov
repnz
nop
dec
adc
cmp
insl
ds
aam
scas
push
sbb
inc
pop
test
cmp
push
xchg
sbb
pop
mov
pop
push
dec
jne
fcoms
and
inc
jmp
pop
jge
and
arpl
es
les
data16
dec
loopne
dec
imul
ja
lret
cmp
jmp
push
mov
adc
add
je
and
cmove
adc
cmp
ljmp
cmp
sbb
in
jle
scas
adc
push
inc
loopne
xlat
sub
pop
loop
stc
mov
or
and
push
dec
adc
cmp
jmp
jmp
cmp
lahf
inc
or
push
sbb
add
or
pop
lods
std
mov
lret
jne
mov
sub
mov
or
comiss
add
sbb
ret
xchg
stos
xor
movsl
inc
sarl
not
out
mov
lahf
bound
int
mov
out
rol
and
jae
dec
cmp
fsubrs
jne
add
sbb
pop
adc
add
push
gs
jge
inc
dec
sub
push
jne
nop
das
xorb
jb
int3
fsubs
and
cwtl
in
xchg
nop
insl
inc
movsb
sub
dec
or
sbbb
xor
pop
movsb
cmpsl
push
xlat
sub
jl
inc
adc
cmp
cmp
sbb
inc
sar
sti
xor
add
push
mov
ret
mov
in
push
inc
sbbl
in
je
std
pop
cmpsb
cmp
mov
jmp
negl
dec
add
les
mov
jb
adc
aaa
dec
and
dec
inc
jne
mov
popa
std
xchg
dec
ret
fidivs
xor
addr16
pop
sub
pop
jb
in
or
xor
adc
pop
push
xor
push
mov
add
loope
cmp
mov
add
mov
pop
push
sbb
xchg
adc
sbb
jb
insl
cmp
cmp
fwait
add
add
das
inc
xor
adc
jg
pop
lods
scas
les
or
mov
mov
mov
mov
mov
clc
mov
pop
sbb
mov
ret
xor
pop
mov
cli
fs
lods
fwait
addr16
dec
pusha
pop
sbb
push
mov
ret
push
insb
and
xchg
xchg
push
xchg
and
push
fs
jae
adc
movzwl
cmp
cmpl
jp
push
sub
aam
daa
add
pop
lds
push
xchg
cmp
xchg
sahf
xor
pop
subb
js
add
adc
push
pop
add
fbld
xchg
lahf
xor
inc
arpl
sub
mov
and
mov
cmpsl
mov
test
mov
xchg
push
test
push
push
pop
pusha
js
daa
adc
sbb
cwtl
or
arpl
inc
jp
add
jmp
lods
lea
loopne
sub
or
rol
rclb
mov
movsb
cmp
ljmp
or
sbb
fisttpl
mov
and
jne
jg
orb
sbb
lret
dec
adc
cmc
sahf
add
orl
mov
lds
mov
pop
cmp
js
inc
add
xchg
add
adc
cmp
test
lcall
pop
fistpll
lret
inc
jecxz
ja
adc
mov
adc
push
jo
xor
push
xchg
sub
push
add
ljmp
js
aam
adc
sar
xor
xor
cli
int
pop
icebp
lock
add
pop
inc
sbb
inc
push
mov
mov
pusha
mov
cmpl
pusha
push
pushf
add
xor
xor
iret
adc
lcall
int3
mov
ds
movhps
mov
inc
add
push
add
outsb
pop
inc
or
jnp
xor
xchg
add
cmp
pop
jmp
inc
dec
pop
mov
jo
cmpsb
add
mov
push
mov
push
mov
mov
push
ret
sbb
std
inc
testb
je
subb
sub
pop
fadd
adc
aas
lods
addb
dec
pushw
test
test
and
push
sbb
inc
jno
test
addr16
out
cmpsl
mov
pop
outsb
repz
add
icebp
mov
mov
movb
mov
outsl
jecxz
inc
arpl
adc
push
lea
add
push
sub
push
icebp
aam
ret
mov
and
loop
aad
and
rolb
cmp
scas
shlb
dec
xchg
into
inc
lcall
ret
or
cmp
aaa
cmp
andb
shl
sbbl
dec
stos
scas
lods
dec
arpl
ret
lea
lea
iret
test
xor
jmp
shrb
push
js
push
xchg
rol
std
inc
into
test
clc
inc
adc
xchg
mov
cmpsb
test
xchg
dec
ja
pop
movb
inc
push
add
and
cmp
lret
cmp
jb
rorl
push
mov
or
mov
test
sbb
andl
mov
inc
pop
cmp
js
inc
xor
out
jecxz
rorb
push
xchg
hlt
into
pop
loop
shlb
mov
cmp
add
add
in
bound
arpl
and
push
adc
dec
je
xor
data16
add
adc
dec
jecxz
mov
adc
jmp
cmp
out
or
mov
mov
mov
xor
jp
add
test
push
cmpb
ss
jo
loope
jle
push
movsl
push
movsl
or
and
aaa
inc
movsb
add
popa
enter
sub
mov
and
nop
jb
call
or
add
xchg
pop
test
pop
call
push
cmp
aaa
ljmp
leave
and
push
test
iret
scas
aam
in
cmp
push
sub
push
movsb
ud2
add
fstl
push
push
test
or
in
push
sbb
mov
adc
sbb
add
insb
cmp
mov
xchg
xor
lock
xor
inc
cwtl
and
cmp
lahf
or
xor
or
jle
add
sarb
push
push
mov
sahf
jmp
incb
fsubr
sub
cs
sub
pop
mov
rorb
sahf
sub
mov
loope
sub
imul
xchg
xchg
es
rolb
cli
cwtl
inc
and
pop
call
push
dec
or
popf
xchg
push
call
xor
or
in
fimuls
xorl
jbe
pop
cli
and
cmpsb
adc
rclb
adc
sub
cmp
pop
and
test
mov
jge
les
cs
addr16
mov
pop
xor
or
jl
adc
rep
push
in
stos
call
dec
lock
ret
push
pop
pop
sub
and
or
mov
rolb
fs
or
add
sub
and
fwait
adcb
daa
je,pn
in
aaa
in
xor
pop
pop
loopne
mov
hlt
js
mov
push
or
inc
cmp
mov
scas
or
mov
and
cmp
sub
jle
aas
dec
or
and
lcall
aad
movsb
dec
jmp
jb
mov
in
lods
mov
sbb
je
mov
loopne
insl
or
inc
clc
mov
mov
pop
dec
pop
js
adc
aaa
sbb
cwtl
add
push
mov
push
mov
pop
adc
shrb
scas
das
mov
ja
push
mov
push
xor
aas
xor
ret
out
dec
adc
sbb
dec
xchg
sub
pop
sbb
lahf
adc
adc
pusha
jno
add
aas
cmpl
jb
xor
xchg
out
test
pop
cmp
pop
push
test
jb
dec
pop
sub
dec
lock
push
cmpsl
and
dec
call
adc
rcr
mov
sub
xor
pusha
loopne
sahf
nop
orb
jno
inc
jecxz
mov
or
fdivrl
add
insl
rolb
mov
movsl
xor
loope
ficomps
repnz
adc
jg
je
sub
je
jmp
daa
sub
shlb
sub
lock
ja
push
add
sub
mov
sub
jl
lock
aam
sbb
sub
cmp
loope
push
imul
push
loop
out
mov
hlt
testb
add
add
test
cltd
fcmovnb
nop
jb
test
je
in
jmp
sub
ret
imul
mov
inc
jmp
andb
add
imul
mov
clc
adc
xor
jbe
dec
cli
and
rolb
mov
add
fstpl
and
jge
mov
aad
lods
and
fadds
inc
fiaddl
mov
inc
sbb
adc
dec
gs
arpl
ficoms
into
mov
ret
mov
mov
pusha
xlat
xchg
or
mov
pusha
or
xchg
lock
shll
fcoms
dec
sbb
in
jns
xor
inc
pop
rcl
mov
lods
or
push
pop
imul
rclb
inc
shld
iret
xor
xchg
push
sbb
lcall
xchg
rol
and
ds
inc
add
sbb
test
das
gs
cmpsb
mov
outsb
xchg
push
addl
xlat
push
js
jbe
pop
ret
pop
addr16
shlb
rorl
fmuls
in
jno
fmuls
fcmovnb
cmp
pop
imul
repz
ss
dec
into
cmp
inc
push
add
push
mov
or
dec
shl
sub
add
fmuls
and
mov
enter
aad
pushf
add
outsl
je
fidivrs
call
add
shll
gs
xchg
iret
inc
mov
push
push
clc
and
mov
pop
push
sub
push
les
test
shlb
or
push
push
inc
xor
mov
insl
inc
jmp
jo
push
out
inc
jge
mov
or
adc
add
movl
leave
inc
dec
insb
mov
or
cs
add
test
sub
dec
mov
movb
sub
bound
xchg
add
sarb
push
aaa
inc
mov
push
pusha
sub
xchg
in
out
inc
dec
ret
cmovl
sbb
mov
sub
xor
rclb
cmp
adc
adc
jnp
mov
xchg
jns
xor
mov
pushf
nop
sub
xchg
or
aas
mov
jmp
stc
xlat
inc
aaa
fisubrs
add
outsl
das
jmp
xchg
int3
icebp
mov
push
dec
mov
dec
std
arpl
test
sub
out
lss
gs
inc
rclb
xor
clc
std
mov
inc
int3
sub
mov
fstl
adc
or
je
add
shl
or
sbb
adc
push
push
out
aaa
mov
pop
pop
out
cltd
nop
push
xor
add
and
cmp
push
sbb
stos
adc
jns
mov
mov
adc
imul
add
push
mov
or
and
fisttpll
fadds
jle
and
das
jmp
mov
sbb
cmpsl
jmp
inc
je
and
shrb
fmuls
sbb
pop
push
mov
pop
adc
inc
shlb
fisttpll
add
and
int
jb
jne
push
call
sub
inc
jmp
push
cmp
jne
mov
ret
ss
jle
lock
xchg
pop
sub
shrb
cmpb
sbb
add
sub
dec
inc
scas
cmp
push
shll
sti
pop
inc
jg
addl
add
loopne
sahf
lea
scas
fs
adc
loopne
push
sti
jl
mov
mov
adc
and
and
out
xlat
inc
mov
adc
inc
lds
jmp
and
jge
fists
jecxz
ja
ljmp
mov
sbbl
pop
enter
nop
ja
jle
negl
adc
inc
cwtl
std
out
sahf
xlat
push
cmp
xchg
xor
xor
sub
sub
andb
sbb
out
sahf
out
je
jo
sahf
out
sahf
insb
or
or
lahf
out
pusha
add
pop
mov
into
repz
push
xchg
jp
in
js
cmp
or
fists
movsb
add
bound
jmp
sahf
test
push
rclb
imull
subl
cwtl
ja
push
pop
js
popf
sbb
shr
out
aas
aaa
mov
clc
je
mov
inc
loopne
and
cwtl
and
add
mov
pop
testl
jo
and
push
jns
add
push
push
rolb
xchg
or
mov
add
sarb
mov
mov
add
mov
nop
mov
jae
scas
inc
pop
orb
sub
ss
push
mov
xlat
neg
mov
inc
insb
xchg
push
push
xchg
push
dec
outsl
jo
je
push
inc
jns
sbb
xor
adc
ficoms
imul
fisubrs
fstl
xor
std
mov
aas
mov
loopne
outsl
jb
clc
lahf
add
data16
jp
push
inc
jb
jae
inc
scas
adc
mov
push
pushl
pop
bound
outsl
ss
pop
xchg
lea
cltd
outsl
orl
inc
inc
imul
mov
jae
es
insl
popf
loopne
insb
push
mov
fsubrl
or
inc
and
imul
js
or
mov
adc
mov
dec
jecxz
push
push
jns
fisubrl
mov
je
cmp
mov
in
loop
shlb
push
int
lock
clc
add
cmpsl
push
arpl
or
xor
jo
adc
adc
imul
pop
adc
js
fs
jl
cltd
mov
or
nop
cmp
inc
outsl
sbb
add
ss
fmuls
js
lods
nop
pop
jl
lds
rclb
adc
or
mov
or
push
mov
xchg
or
imul
mov
pop
or
ret
test
sar
mov
jl
xchg
push
mov
jo
frstor
xchg
adc
or
or
fstl
add
fistpl
fcompl
in
or
gs
jb
fiaddl
mov
dec
dec
js
insb
push
je
sbb
or
sub
in
popl
add
or
sub
add
sub
add
cmovns
pop
or
jbe
mov
and
mov
orb
jmp
xchg
add
scas
cmp
xor
xchg
push
fs
push
pop
and
xchg
rolb
xchg
inc
inc
xchg
push
daa
ljmp
inc
pop
mov
iret
pop
adc
mov
cmp
and
mulb
xchg
push
lods
pop
std
loope
pop
pop
scas
adc
jl
and
lds
cmp
enter
xchg
jnp
and
subl
add
inc
fimuls
xchg
inc
xchg
stc
je
jl
cmp
dec
mov
scas
mov
add
inc
pushf
mov
push
es
and
nop
sahf
mov
enter
lds
mov
pushf
ficoms
mov
mov
add
cwtl
nop
int
adc
pusha
cltd
push
subl
js
add
add
stos
cmp
clc
pop
jnp
inc
cmp
repnz
insb
je,pt
loope
push
sahf
or
mov
decl
mov
or
insl
fstl
add
add
cltd
add
dec
test
movsb
add
inc
add
popf
popf
add
je
cwtl
pop
add
pop
daa
pusha
sahf
xchg
and
cwtl
push
int3
cmpsb
jmp
adc
mov
mov
les
add
lret
movsl
imul
or
or
or
int3
push
or
mov
lock
pusha
jle
or
cmpsl
std
inc
jecxz
mov
rcrl
roll
test
adc
pop
in
in
push
sbb
adcl
or
dec
xchg
mov
jbe
mov
stos
mov
jnp
psubsb
pop
cld
nopl
pop
and
add
lds
aam
rcrl
mulb
pop
xchg
int3
les
push
aam
cmpsl
mov
lds
adc
icebp
addb
cwtl
ss
mov
inc
sbb
add
out
sub
mov
pop
and
dec
lret
lock
rorb
add
or
gs
repnz
loopne
je
ja
andl
xlat
push
and
ds
push
out
sbb
les
ret
sarb
inc
test
xor
mov
cltd
dec
test
cmpsb
mov
lret
lret
cs
add
int
imul
clc
push
fmul
cmpsl
mov
inc
sub
push
sub
rcll
xchg
sarb
pop
and
aad
shrb
or
dec
pop
and
clc
or
ret
lods
test
je,pt
and
pop
scas
jo
inc
push
or
sbb
xchg
fnsave
or
stos
loope
fadds
lock
repnz
in
push
in
in
fs
dec
cmp
push
call
fwait
int
jo
push
or
mov
mov
paddsw
adc
test
js
mov
dec
cwtl
jle
push
jl
adc
pusha
push
mov
pop
pop
sbb
subl
or
sbb
cmp
aam
dec
jbe
and
dec
orl
iret
lds
mov
jnp
jo
mov
push
fdiv
outsb
negl
add
push
pop
test
xor
sbb
cwtl
pop
push
sbb
call
xor
push
fadds
sbb
out
imul
add
xor
inc
pop
sbb
add
lods
lock
nop
negb
mov
nop
xor
subl
pop
adcl
adc
lret
rclb
inc
cmp
push
mov
mov
xor
rol
xor
inc
dec
jne
cld
pop
pop
and
lea
sbb
add
mov
out
cs
mov
imul
cmp
and
adc
inc
js
mov
push
adc
dec
adc
fprem
test
sbb
popf
shll
adc
mov
jmp
rclb
out
aam
inc
je
dec
jne
cmp
xchg
inc
mov
and
cmpsb
adc
movsb
mov
or
xchg
jo
or
or
xchg
popa
pop
ret
sbb
add
inc
decl
xor
sbb
andb
cmp
insl
shll
add
lahf
push
mov
sti
rclb
decl
lock
adc
push
repz
icebp
mov
shll
jne
xor
jle
dec
jmp
shlb
js
jb
mov
mov
sub
mov
xchg
push
jmp
loopne
loope
sti
push
xchg
push
lods
das
dec
ljmp
adc
aaa
mov
test
testl
out
inc
jns
and
pop
and
and
dec
stc
insb
popa
leave
mov
adc
sbb
inc
add
aad
mov
add
test
out
stos
mov
pop
test
adc
or
mov
xor
clc
sbb
call
loopne
mov
add
mov
xchg
fcomps
xchg
out
mov
or
std
push
cmp
sti
xchg
and
adc
insb
xor
cmp
jg
mov
pushl
dec
mov
or
add
mov
mov
loopne
mov
or
adc
cmp
sbb
dec
iret
arpl
pop
or
jb
mov
inc
mov
outsb
pop
dec
das
popf
andl
xchg
dec
popa
add
add
jo
lahf
imulb
inc
push
gs
insb
pop
mov
inc
ss
imul
addr16
adc
dec
jle
mov
nop
jo
call
xchg
fildl
inc
jne
push
and
addl
mov
or
inc
in
scas
or
addr16
outsb
sbb
jl
and
sbb
das
adc
popa
and
mov
pusha
rorl
pop
fwait
or
mov
push
or
push
jnp
sub
shlb
push
cwtl
cmp
xor
jo
push
sub
push
jo
mov
push
mov
mov
daa
psllq
push
pop
inc
je
inc
jge
and
push
bound
mov
shll
cmp
pop
xor
jmp
mov
das
dec
push
pop
arpl
mov
push
push
adc
inc
imul
sbb
adc
or
ja
ret
push
xor
dec
pop
call
fstl
fwait
rcrb
push
clc
mov
push
loopne
mov
pop
xchg
push
lret
cli
inc
popl
push
dec
pop
inc
ljmp
xchg
push
dec
push
xor
sbb
pop
dec
dec
arpl
or
mov
jb
dec
dec
inc
push
dec
dec
push
mov
jnp
inc
inc
push
xchg
fisttps
and
stc
ret
popa
out
inc
inc
xor
xor
mov
movsl
or
dec
inc
and
inc
outsb
and
xor
inc
dec
neg
push
push
lock
push
push
dec
sub
dec
mov
push
das
sbb
mov
sbb
inc
inc
das
mov
orl
test
mov
mov
adc
push
push
push
dec
or
pop
adc
push
pop
mov
dec
in
pop
pop
invd
cld
and
push
mov
mov
outsb
cmpsb
test
movsl
pop
lock
stos
sbb
mov
add
jl
adc
add
sbb
sbb
jne
add
sbb
add
or
outsb
or
cmp
fsubrp
arpl
sbb
and
or
pop
sub
insb
dec
sbb
and
push
push
pop
mov
inc
or
jmp
or
push
rcrb
add
out
adc
pop
shlb
je
sub
test
adc
test
jbe
jb
mov
outsl
test
fildl
push
adc
adc
jg
cmpl
scas
test
inc
and
or
jecxz
pop
xlat
sub
inc
cltd
adc
out
push
sbb
and
sti
xchg
pop
aas
and
dec
data16
fimuls
adc
ficompl
jp
arpl
sbb
inc
sbb
adc
xchg
aaa
xchg
in
imul
cmp
test
xorb
adc
lea
inc
ljmp
adcb
lods
movsl
or
xchg
lret
jae
dec
les
jmp
mov
mov
iret
cmp
je
mov
xlat
ret
lods
rolb
inc
mov
add
mov
shll
lret
sbb
inc
adc
shlb
out
push
xchg
out
int
push
scas
int
pop
or
les
inc
sub
mov
add
inc
shlb
out
insl
shr
adc
in
imul
sbb
arpl
adc
jp
mov
mov
sbb
mov
xchg
lods
mov
push
pusha
dec
or
imul
jo
call
mov
inc
fiaddl
push
fcomp
mov
xchg
push
push
or
cmp
call
or
push
inc
je
mov
jo
lods
sti
clc
sbb
ret
inc
mov
out
out
sbb
xchg
mov
bound
mov
jg
sbb
and
aam
dec
call
xor
addl
xor
imul
loop
push
inc
adc
pop
stos
xor
or
add
lds
inc
lea
stos
je
push
sub
jbe
scas
jno
sub
fldcw
ret
jecxz
clc
dec
sub
push
push
mov
xor
imull
rcrl
inc
push
das
fimuls
ficoml
jp
mov
mov
jae
xor
out
insb
push
add
repnz
or
and
outsl
sbb
popa
inc
sbb
xchg
xchg
sahf
dec
insb
bound
cs
ss
sbb
shrb
mov
cld
movb
add
int
mov
cld
dec
dec
add
cmp
cwtl
ret
fs
or
mov
add
leave
cwtl
icebp
cwtl
jb
mov
add
adc
pop
cltd
in
add
lock
or
inc
mov
mov
add
in
push
jne
pop
enter
lcall
or
sub
mov
jo
xchg
and
and
repz
enter
dec
in
sahf
sbb
jns
cmp
jb
push
aaa
cmp
andb
mov
or
inc
cs
pop
lock
in
loop
dec
leave
rcrb
xchg
cmp
repz
lods
and
and
leave
js
push
jb
cmp
inc
and
flds
pop
and
xchg
movsb
mov
pushf
and
out
jg
pushf
sbbl
pushf
jbe
add
mov
clc
sub
mov
push
push
push
mov
push
adc
rcrl
cmp
sub
cltd
mov
xor
fcomip
push
cwtl
sub
mov
mov
jnp
mov
push
jp
pop
rorb
outsb
loope
push
movsb
rcrl
or
push
mov
sub
movsl
aas
add
jmp
inc
jmp
in
sbbl
pop
dec
sub
mov
cs
insl
hlt
lock
in
push
sub
adc
bound
inc
rcl
shll
mov
or
mov
inc
pop
ret
cmp
mov
pop
stos
lea
mov
jmp
add
in
repz
mov
test
inc
cmp
mov
and
xchg
adc
orb
nop
fadd
inc
and
pop
lret
xorl
movsl
push
aad
in
fs
xchg
mov
fsubrl
xchg
hlt
and
xchg
int3
loop
mov
shr
unpcklps
add
test
scas
add
fsubs
jg
pop
pop
mov
pop
int
jns
rcl
bound
sub
and
popa
cmp
adc
push
push
push
sub
mov
adc
mov
and
cmc
clc
addr16
and
inc
or
test
lret
jae
inc
and
and
sbb
inc
dec
pop
xor
xor
imul
mov
push
or
shl
in
fisttpll
cs
or
push
pushf
js
and
pop
push
cwtl
ret
sbb
addr16
lea
les
test
mov
xchg
push
add
push
push
hlt
pop
mov
mov
aaa
sbb
pop
inc
push
fwait
call
and
push
push
inc
add
mov
jl
sbb
mov
aam
daa
mov
xor
mov
pop
loopne
mov
lods
pop
movsl
ljmp
arpl
daa
sbb
adc
sbb
je
jbe
fwait
int3
xorl
push
xchg
inc
inc
sbb
mov
lods
in
mov
sbb
or
xor
and
cld
ret
pop
mov
ja
add
push
mul
out
mov
add
push
pop
or
or
xlat
xor
aad
push
push
or
mov
push
lea
or
mov
or
add
and
or
and
cmp
ja
lods
mov
mov
or
cmpsb
shr
cmp
mov
cmc
add
add
iret
dec
sbb
dec
movb
outsb
icebp
addr16
outsl
pop
leave
adc
call
xor
or
js
test
mov
push
in
and
sub
xor
ds
jne
add
inc
adc
mov
sbb
inc
dec
push
dec
ficoml
je
adc
inc
ljmp
mov
mov
and
mov
iret
adc
cltd
mov
jbe
in
jge
jg
testb
je
push
xchg
dec
ret
inc
adcl
leave
push
loope
dec
mov
and
mov
jp
dec
push
push
lods
add
icebp
ficomps
inc
add
push
push
push
arpl
stc
divb
cmp
arpl
std
mov
add
mov
cltd
dec
fisttpl
andb
or
test
push
mov
xchg
nop
add
test
popf
push
stos
inc
lods
enter
in
inc
lods
push
inc
cmp
mov
aaa
shl
push
xchg
jo
movsl
push
int
add
call
add
mov
test
dec
icebp
aad
add
jne
mov
cmp
dec
fs
pop
inc
mov
daa
sbb
sbb
cltd
pop
adc
push
mov
inc
mov
loopne
lea
loope
ss
cmp
loope
mov
adc
cmc
inc
das
and
cmpsb
shrl
ss
sbb
pop
mov
imul
rcll
jge
lds
add
pop
mov
data16
push
add
sar
dec
mov
and
mov
or
mov
or
mov
pop
loopne
cmpsb
jne
add
into
rolb
jb
adc
aas
ds
aas
std
xchg
xchg
mov
lds
and
out
andb
and
cmp
cmp
fisubrl
or
shll
sbb
mov
xchg
pusha
cmp
je
movups
loopne
and
adc
leave
out
push
cmp
cld
dec
pop
in
or
insl
push
add
xchg
xchg
add
or
scas
orb
jmp
cltd
daa
sub
je
inc
inc
pop
imul
push
sbb
sbb
or
xor
fcmovu
imull
sbb
inc
clc
lods
inc
sbb
int3
mov
push
movsl
xchg
inc
rclb
bound
lock
push
je
in
mov
xor
sti
inc
aas
add
pop
sub
or
das
scas
aam
cltd
out
lret
dec
test
xchg
xchg
inc
xor
sub
incb
lock
js
mov
pop
movsb
aaa
pusha
arpl
adc
adc
sub
mov
pop
ret
cmpsl
rorb
inc
push
test
ja
lods
mov
mov
imulb
iret
adc
mov
dec
fisubs
lods
mov
test
rorl
jo
xor
movsb
inc
push
cltd
inc
ljmp
xchg
lock
popa
pushf
or
scas
loope
int3
movsb
jp
or
into
jge
ds
call
adc
pop
cmpsb
stos
lds
mov
push
push
adc
or
and
or
ret
ret
cmp
sbb
test
ljmp
bound
xor
outsl
sbb
fwait
adc
sub
lock
mov
popa
frstor
jg
and
movsl
fbld
in
xor
jns
sbb
popw
aam
shlb
add
mov
sbb
or
ja
lret
adc
lods
call
push
mov
pop
mov
lret
data16
push
or
sub
or
testb
push
shl
push
divl
add
rcrl
orl
sar
ret
pop
fmull
add
or
ret
inc
in
xlat
xorb
mov
test
adc
sub
xchg
and
js
inc
push
movsb
and
mov
in
cmp
sub
stos
mov
sarb
repz
out
push
and
sub
cmp
orl
and
scas
andb
es
fsub
aaa
mov
cmp
subb
and
push
jge
jecxz
jge
daa
mov
mov
pop
and
push
sub
out
fdiv
dec
jmp
jns
pop
push
sbb
dec
add
fistpll
scas
notl
inc
push
adc
sbb
inc
mov
addl
insl
push
popa
loopne
movb
out
push
ret
bound
data16
xchg
pusha
imul
leave
xchg
sbb
xchg
out
ret
mov
cmp
adc
loope
test
and
xchg
lea
lcall
pop
add
or
aam
add
mov
mov
add
mov
jne
movb
add
push
jbe
pop
and
adc
mov
loope
inc
mov
mov
imul
push
shrb
add
jne
add
cmp
jge
or
insl
notl
adc
adc
sbb
outsb
add
xor
cmpsl
and
dec
rorb
pushf
mov
loope,pt
outsb
sbb
js
and
and
insb
mov
enter
adc
jns
jmp
push
xor
and
mov
sub
roll
std
jecxz
mov
mov
jmp
gs
push
xor
out
cmp
adc
icebp
and
addb
repz
cmp
mov
mov
not
clc
and
sbb
mov
add
negl
jnp
or
sbb
scas
sub
jno
inc
add
ds
push
inc
movzwl
test
jmp
push
cmp
ss
xor
addr16
xchg
dec
pop
data16
mov
cld
icebp
adc
push
push
xchg
pop
das
cmpl
movsl
push
out
cmp
mov
orb
clc
sbb
sub
jl
stos
icebp
dec
adc
pop
aaa
or
and
or
testl
push
or
mov
mov
xorl
push
mov
add
arpl
lcall
and
add
push
mov
ljmp
and
pusha
shll
dec
mov
push
lods
jecxz
sub
and
cmpsl
mov
movups
or
push
xchg
cmpl
add
adc
and
push
das
andb
jge
add
push
push
out
mov
sub
lea
outsl
loopne
mov
cmp
inc
push
outsl
call
pop
cmp
mov
cmpsl
in
sarl
xchg
push
icebp
icebp
jne
dec
fstps
imull
imul
mov
in
xor
dec
rcr
mov
sbbb
sub
rcrb
add
bound
push
push
add
movsl
xor
andl
fsubrp
mov
pop
mov
mov
pop
add
test
inc
add
sbb
pop
pushf
stos
shrl
movl
nop
push
push
and
and
pop
scas
insb
pop
cld
push
push
add
and
mov
lock
xor
jae
sub
lock
push
cmpl
dec
or
mov
aaa
mov
cmp
inc
sarb
enter
pop
add
or
jne
ss
dec
iret
cmp
rolb
lock
popa
xor
rolb
cltd
pop
cmp
icebp
jl
aaa
adc
cmp
jg
mov
or
jle
add
nop
call
push
hlt
loop
push
cli
push
inc
neg
sub
inc
jg
lret
add
lea
cmp
add
loopne
sbb
notb
push
pop
adc
xor
mov
out
int3
fiadds
fcomp
orb
push
fmuls
xchg
sbb
scas
into
je
or
int3
or
in
test
cmp
adc
xchg
insb
sub
icebp
add
jle
sub
jge
ret
adc
gs
or
inc
ret
push
lock
jg
or
jl
push
cmp
je
repz
jo
hlt
jo
orl
nop
mov
not
push
or
jle
add
adc
xchg
xor
cli
js
ss
mov
push
xor
jg
push
inc
adc
shlb
push
jbe
inc
xor
pop
pop
pop
mov
jbe
enter
add
andl
ss
movsl
sbb
int3
jbe
nop
pop
cwtl
fdivr
push
or
inc
mov
insl
mov
cmovae
das
les
ret
lret
mov
xor
outsl
pop
je
cmp
sarb
add
push
push
mov
mov
push
push
mov
and
inc
jmp
push
push
mov
mov
fisttps
sahf
dec
xor
loope
js
jecxz
dec
inc
mov
push
adc
mov
nop
mul
sbb
pop
or
mov
xchg
aaa
mov
push
das
inc
push
fbstp
pusha
sarb
jmp
xor
push
xchg
add
ret
pop
or
lods
mov
loope
mov
and
push
push
test
dec
and
aas
sbb
sbb
and
pop
sbb
jb
mov
je
loopne
shr
or
enter
fld
inc
mov
pop
lea
lret
xlat
xchg
call
cmovs
push
jle
lock
jmp
movw
jb
pop
and
test
adc
pop
push
data16
imulw
data16
or
std
xchg
cmp
and
and
stos
add
jne
sub
gs
xor
faddl
ljmp
lods
add
push
lahf
lret
loopne
push
add
dec
in
movsb
or
mov
imul
test
add
xorb
bound
adc
push
ja
mov
xor
shlb
mov
jnp
cwtl
or
hlt
shlb
push
push
rcr
add
das
mov
fisubs
cmp
mov
push
dec
int
pop
push
or
jo
mov
push
dec
repnz
call
mov
and
pop
sar
xorb
jecxz
rolb
mov
lods
shl
sub
mov
fcom
and
or
push
sbb
adc
call
xor
xor
jp
mov
imul
hlt
int3
add
shll
ffree
rorb
xchg
stos
push
call
sub
hlt
loopne
faddl
pushf
jp
dec
int
out
pop
loope
test
and
rol
mov
outsb
out
das
push
subb
sbb
or
jbe
decl
mov
inc
fmuls
fidivl
mov
and
mov
mov
or
imul
mov
jbe
push
push
loopne
lods
cmpsl
mov
adc
outsb
jle
mov
jno
cmp
mov
aam
hlt
test
imul
adc
push
push
lcall
int
fcoml
fadd
fs
int3
add
xchg
daa
sub
mov
xor
iret
xchg
mov
adc
adc
push
subl
notl
pop
scas
daa
nop
xchg
mov
and
subl
fsubl
adc
mov
pop
outsl
pop
pop
rorb
bound
adc
clc
aam
mov
std
pushl
adc
cmpsb
dec
jb
jne
jmp
leave
mov
loop
and
cmp
mov
xchg
xchg
in
inc
dec
hlt
sarb
insl
rcr
rorb
mov
add
pop
jne
sub
mov
enter
xchg
mov
and
scas
dec
leave
xlat
mov
pop
aaa
leave
hlt
cmp
js
pusha
sub
sbb
push
sub
loopne
xchg
fisttpll
ljmp
inc
cmpsb
jnp
push
out
jecxz
xchg
in
sbb
bound
adc
mov
push
push
adc
lea
into
xor
out
cmpsl
pop
mov
mov
nop
sub
fistl
or
sbb
lret
out
sub
mov
rcl
imul
sub
lea
ds
daa
mov
neg
rolb
add
or
in
les
inc
sbb
in
test
add
or
xchg
mov
mov
clc
mov
and
push
nop
in
add
in
adc
inc
rolb
and
lock
or
es
push
mov
sub
notb
inc
ja
popw
clc
nop
das
cmp
arpl
insl
jo
pusha
cmp
jg
or
outsl
or
sbb
dec
push
fildll
dec
ret
insb
jmp
inc
and
inc
dec
jne
jns
add
xor
pop
and
stc
cmpsl
rorl
adc
xorb
adcb
into
xchg
push
pop
xor
jo
mov
sbb
pop
pop
or
adc
and
push
cmpsl
flds
cmp
call
sub
aad
ss
adc
pop
rcl
mov
cmpb
aas
shrb
or
les
add
fldl
jno
push
cmpsl
or
jne
pop
daa
cmp
dec
xor
pop
addl
sarb
cmpl
fstpl
fldl
pop
mov
incl
pop
dec
je
inc
shrb
bound
jb
mov
mov
cmpsl
adc
add
sub
push
mov
mov
and
popf
xchg
or
add
add
sbb
adc
scas
lret
stos
xchg
pop
dec
cmp
xchg
adc
aam
inc
clc
push
add
ret
dec
sarb
push
or
xchg
sbb
xor
inc
jmp
dec
jno
cmpsb
fistps
adc
sbb
nop
jecxz
cmp
add
cmp
add
ljmp
and
pop
mov
cmc
adc
sub
insl
sub
mov
rorl
cmpl
stos
pop
xor
add
or
xchg
xchg
mov
mov
add
pop
push
arpl
filds
mov
sbb
test
pop
inc
cwtl
or
push
dec
push
imul
add
ret
dec
sub
mov
imul
mov
ret
xor
fnstsw
imul
cld
or
push
lds
call
and
bound
mov
push
and
push
stos
jg
test
mov
mov
cmp
ss
subl
sbb
clc
mov
sahf
pop
xor
pop
in
xlat
jb
cmp
inc
add
clc
mov
jne
jae
loopne
xchg
mov
imul
mov
lods
push
cmc
dec
call
outsl
fidivrl
xorl
adc
xor
and
mov
mov
add
jbe
jecxz
out
cmp
and
imul
push
imul
adc
inc
hlt
pop
fisubrl
enter
inc
adc
mov
pop
ret
cli
lahf
dec
sub
imul
sbb
nop
inc
sub
notl
mov
es
sbb
lcall
dec
jbe
jmp
mov
adc
mov
sbb
adc
jae
mov
pop
mov
out
test
insl
or
pop
and
adc
ljmp
add
repnz
add
xchg
push
inc
jae
mov
sbb
fstl
mov
cmp
xor
sahf
ja
cmovg
add
or
xor
sbb
xchg
movsb
popfw
xchg
inc
scas
rcl
in
imul
push
mov
sbb
fiadds
test
cmp
and
jo
sbb
call
adc
xorb
xchg
lods
movsb
cmpsl
ret
test
addl
push
cmp
test
pop
mov
lret
rolb
jmp
mov
insl
ja
or
add
jo
jg
mov
inc
and
push
sbb
and
mov
inc
and
or
dec
mov
push
jo
sub
out
out
add
jp
xor
inc
cld
adc
fidivrs
xchg
xor
mov
sahf
mov
jmp
bound
lods
mov
mov
icebp
mov
loopne
call
test
inc
sbb
adc
repnz
inc
sub
in
cvtdq2ps
call
sub
pop
imul
call
and
call
and
or
loopne
inc
decl
adc
sub
add
imul
adc
cmp
mov
jg
dec
jo
pushf
daa
jne
mov
les
and
sbb
mov
mov
push
test
ficoms
ljmp
outsl
jmp
push
xor
cmc
sub
pop
fadds
xchg
cmc
xor
imul
xor
or
fiadds
gs
cmp
jle
sbb
mov
out
in
nop
jbe
sub
add
push
ss
andb
pushf
inc
rorb
xor
add
add
pop
dec
or
lock
pushf
sub
cmp
jmp
sti
in
js
outsl
push
hlt
pop
sub
cmp
push
and
pop
roll
cmovl
in
sbb
jecxz
mov
or
add
or
jmp
cmp
andb
jnp
jo
and
loope
daa
test
popf
push
lods
mov
rcll
cmpl
add
jle
push
outsl
clc
dec
negb
xchg
popf
in
stos
add
lea
push
add
add
dec
inc
fs
subl
add
inc
mov
pushl
add
xor
mov
inc
mov
adc
adc
jmp
fmuls
sbb
movsb
sub
mov
enter
jmp
lods
fidivrs
jg
add
int
lcall
sarl
cmp
lret
dec
dec
or
or
sar
hlt
adc
pushf
lods
push
adc
into
push
mov
fidivl
data16
or
aas
pop
fld
pusha
dec
in
push
lret
nopl
in
mov
repnz
out
cmpl
lds
into
or
rorb
fimull
sahf
xlat
test
lret
sub
test
fs
pop
mov
in
adcl
or
sbb
dec
mov
cmp
rolb
std
add
test
jns
loop
loopne
rcrl
push
xchg
push
pusha
addr16
mov
or
ret
or
push
sbb
lds
inc
cmpb
and
scas
mov
or
or
clc
not
jne
rolb
popl
add
adc
je
loope
add
test
jae,pn
mov
nop
xlat
pushf
lea
js
mov
scas
scas
in
mov
jmp
push
adcl
shrl
lahf
aaa
movsb
inc
test
cmp
jo
mov
int
sbb
jno
sbb
or
xor
or
push
cltd
nop
mov
push
xchg
pop
and
call
push
leave
fiaddl
mov
int3
mov
sub
push
mov
mov
sub
or
mov
cs
mov
adc
addb
mov
sub
dec
shlb
add
add
aaa
lahf
jmp
lcall
mov
or
xor
pop
adc
bound
adc
mov
rclb
adc
sti
adc
xchg
cmpsb
test
sbb
sbb
pop
add
add
pop
outsb
xchg
pop
push
push
clc
js
imul
clc
add
push
insl
cmc
add
call
push
pop
filds
rcrl
or
jno
sub
jo
lods
fwait
dec
sub
scas
ret
sbb
mov
aam
sbb
and
mov
test
sbbl
imul
sbb
push
repnz
sbb
clc
adc
test
xchg
addb
jmp
add
lds
ret
inc
cs
fiadds
push
loopne,pt
or
hlt
in
mov
cmp
loopne
add
call
lock
jnp
repnz
faddp
and
mov
or
sbb
xor
sub
scas
pop
sub
adc
add
xchg
or
in
aad
es
out
aad
shl
mov
push
test
ss
addl
push
jae
test
adc
or
mov
or
enter
xor
jo
lret
js
pop
cmp
push
dec
ds
lret
out
pop
data16
stos
fadds
or
pop
clc
ds
lock
and
xlat
xchg
fsubs
push
add
leave
sbb
movl
or
add
out
inc
or
jmp
xlat
pop
cld
dec
adcl
pop
sub
mov
jbe
adc
cmpsb
xor
mov
adc
xchg
dec
aam
stos
dec
xchg
shlb
lods
and
in
xchg
sub
aam
imul
insl
unpcklps
mov
mov
add
movsb
fucom
add
fidivrl
cmpb
cmc
xor
cli
inc
and
inc
mov
enter
out
xchg
mov
sbb
out
hlt
insb
call
enter
push
fstps
or
pusha
mov
push
pushl
cmpsl
orl
shl
js
int3
push
mov
sbb
rsqrtps
xor
cmp
aas
fisubrl
test
pop
pushf
clc
adc
add
dec
xor
pop
mov
mov
jo
popa
loope
adc
jge
pop
dec
adc
int3
push
arpl
mov
push
pusha
push
xchg
in
mov
xchg
xchg
fcmovu
aam
mov
js
push
decl
pop
lret
jb
or
push
push
adc
xchg
jne
xchg
pop
fstps
add
fs
les
pop
arpl
cmpsl
cmp
mov
push
mov
mov
fistpl
xor
fistl
jne
xchg
cwtl
test
push
sbb
jns
or
xchg
sbb
cmp
loopne
fdivr
jp
popf
ret
stc
and
mov
mov
lock
fcmovnu
lret
xchg
test
cwtl
push
sbb
dec
adc
dec
lock
inc
xor
out
testb
je
dec
or
ret
cli
or
enter
adc
movl
jp
inc
loopne
dec
pop
lock
xchg
xchg
fistps
cmp
jne
add
or
shlb
pop
or
xchg
adc
cmp
push
inc
outsb
int3
je
adc
pop
fwait
cmp
push
ficompl
and
inc
jl
push
lret
jne
cld
rcrb
or
cld
and
xor
push
rorb
pop
dec
or
imul
jno
fs
pop
xchg
loop
xorl
and
inc
outsl
mov
adc
push
cmpsl
cmp
out
or
shlb
subb
fsubrs
test
aas
fbstp
mov
lcall
xchg
lods
adc
fdivl
cwtl
cmp
sti
adc
inc
testb
and
adc
or
and
inc
sbb
dec
mov
or
push
adc
fdivl
mov
xchg
adc
mov
push
xchg
insl
push
and
lods
ss
int3
push
mov
adc
mov
sbb
fdivl
push
sub
movl
mov
pop
sub
sbb
lea
fwait
hlt
and
lds
cld
push
stos
leave
mov
in
nop
add
movb
fstpt
lret
clc
rol
in
xor
and
out
and
loop
in
mov
xor
mov
out
jle
arpl
je
mov
dec
daa
addb
call
inc
lret
shrb
leave
mov
mov
iret
enter
imul
or
jecxz
cmpsl
cmp
cld
add
mov
inc
xorb
mov
mov
test
push
pop
fisubs
jo
je
imul
push
jmp
inc
pop
rcrb
mov
dec
push
push
loop
or
jp
cwtl
push
arpl
outsb
fcomps
imul
adc
mov
mov
mov
adc
dec
add
sub
hlt
into
mov
roll
jbe
mov
and
js
pusha
adc
mov
jnp
sbb
fwait
add
mov
cs
adc
xchg
mov
push
dec
mov
inc
loopne
out
xor
sbb
mov
xor
push
je
std
sbb
mov
rcrl
and
imul
xor
push
push
stc
push
inc
shlb
inc
decl
inc
out
cmp
xchg
je
icebp
sub
or
test
aam
loope
loop
and
sbb
push
loope
lcall
or
pop
pop
call
pop
pusha
into
xor
adc
and
testl
in
outsb
inc
jb
xchg
addb
cs
fsubs
jbe
pusha
test
add
sbb
add
or
fiaddl
mov
and
call
shlb
rclb
inc
add
xor
push
push
mov
in
stos
ret
mov
and
lods
mov
popf
loopne
cmpsl
call
jmp
out
sbb
jmp
mov
pop
and
xchg
leave
hlt
and
lea
push
rorb
fiaddl
or
xchg
add
cmp
cmpsb
or
mov
fldt
push
jae
stos
lds
daa
pop
add
stos
les
cmp
pop
dec
ret
push
push
ja
test
lcall
arpl
in
popa
loop
loope
jle
or
mov
daa
dec
adc
jb
lahf
jo
pusha
xor
movl
adc
add
loopne
add
mov
test
mov
sub
ja
push
or
sbb
dec
imul
test
pusha
or
in
cmp
icebp
and
js
mov
xor
rcrb
and
xor
dec
mov
les
mov
or
or
int
xchg
pop
dec
out
out
sbb
sbb
sub
test
and
xchg
movsb
jne
lea
pop
lret
or
jp
xchg
out
imul
movntq
xor
jle
jne
mov
push
push
pop
pusha
enter
dec
xchg
push
inc
xor
inc
jbe
sub
lock
ss
test
outsl
and
mov
pop
lock
dec
push
je
add
add
cmpl
sub
leave
cld
inc
add
insb
shrl
jl
jne
pop
in
mov
fsubr
ret
mov
icebp
loopne
adc
adc
and
and
sbb
xor
shlb
xor
sbb
and
jg
mov
xor
push
sub
dec
sub
sarl
ret
inc
add
scas
jge
inc
bound
push
lds
cmp
js
sbb
arpl
or
push
push
mov
lcall
popa
nop
jmp
or
ds
fstp
push
add
push
jecxz
fildl
std
aaa
xor
sbb
xchg
pop
cmovs
sahf
push
testb
je
dec
sub
pop
and
sub
leave
and
fldenv
pop
pop
dec
adc
std
sti
mov
add
mov
add
sbb
fisttpll
mov
mov
sub
pop
add
arpl
jmp
popf
rcll
mov
mov
loopne
dec
adcb
sbb
adc
out
movsl
or
mov
jnp
bound
xchg
xor
mov
push
repz
into
daa
lea
fiadds
add
adc
mov
ss
sti
sub
push
sahf
xchg
fldt
sbb
jo
popa
pop
pushf
adc
jge
jne
iret
idiv
cld
sub
pop
xchg
add
push
and
jmp
push
mov
add
adc
pop
adc
inc
mov
scas
sbbb
dec
jle
adc
cmp
add
ds
add
cmp
jne
mov
or
add
pop
push
and
or
add
pusha
int3
inc
and
stos
frstor
lahf
or
sbb
adc
cmpsl
sub
mov
pop
add
xlat
cmp
dec
rcrb
mov
lea
lea
cld
add
stc
adc
je
dec
test
fwait
scas
jmp
or
outsb
int
inc
or
je
or
je
jmp
mov
mov
jmp
mov
jmp
lods
sub
jb
adc
push
jmp
mov
or
mov
mov
jmp
mov
or
adc
mov
out
xor
mov
adc
rorb
xor
fdivs
jge
sbb
cwtl
hlt
jmp
rcrl
add
lock
or
aas
sub
aam
out
add
addb
sbb
test
xchg
in
mov
cmp
xchg
stos
pop
mov
sub
inc
or
ret
into
daa
mov
call
mov
not
fldt
gs
pop
mov
adc
sbb
fisttpll
adc
imul
es
add
xor
fimuls
or
jo
test
adc
data16
fldt
push
ja
jae
add
push
adc
and
repnz
test
inc
pusha
xor
nop
ret
pop
sub
mov
mov
sub
mov
mov
push
es
fcmovbe
fcoml
mov
mov
push
nop
jg
jp
adc
loope
xchg
xchg
nop
test
ja
sbb
sub
dec
data16
dec
mov
cmp
sub
mov
insb
adc
or
mov
leave
dec
movb
push
sub
pop
mov
and
loopne
ret
mov
mov
mov
jnp
sub
add
or
jns,pt
into
scas
cmp
ss
push
dec
cmp
sub
cmc
addb
jno
daa
push
push
imul
adc
imul
cmp
adc
mov
pop
mov
xchg
mov
push
inc
call
inc
sub
mov
outsl
ret
pusha
imul
test
dec
arpl
push
adc
pop
mov
jnp
rorb
xchg
sarl
dec
cmpsl
push
movb
pushf
sub
adc
sbb
adc
pop
xor
mov
daa
ret
jl
and
out
xlat
call
mov
jnp
and
lret
push
movsb
push
inc
cmp
out
leave
jo
in
xor
loope
xchg
cmp
push
inc
push
lock
sbb
mov
lcall
push
in
lock
jo
or
sbb
add
dec
jg
mov
inc
dec
or
inc
mov
lcall
adc
inc
push
daa
insb
stos
adc
aam
out
mov
enter
and
xor
aam
std
push
xor
adc
cli
lock
or
dec
out
hlt
nop
pop
dec
xor
push
mov
js
or
add
clc
add
xlat
or
mov
loopne
add
mov
cmpsb
sbb
aaa
orb
je
loopne
push
nop
clc
and
or
add
sar
sbb
mov
dec
rolb
push
or
mov
lock
xchg
sbb
mov
add
and
ret
es
push
sub
jmp
ret
pop
or
push
call
or
adc
sbb
add
inc
add
push
mov
mov
dec
xor
into
scas
sbb
in
and
gs
neg
in
cmp
sar
js
bound
add
and
punpckhbw
lock
fcomp
or
jnp
bound
jne
pop
mov
pop
push
int
xor
add
pop
mov
lods
in
fucomp
sub
xorl
or
mov
mov
dec
and
mov
jbe
xor
xchg
daa
and
fidivl
mov
xchg
xor
lock
adcb
push
outsb
cmp
jbe
cli
sahf
cs
fcoms
add
fcomps
pop
xor
addr16
test
or
or
or
add
inc
inc
jbe
mov
pop
into
dec
pop
mov
pop
lods
fnstcw
sub
mov
js
inc
jmp
jbe
and
cwtl
loope
push
mov
mov
rclb
nop
sbb
add
cli
loopne
or
add
in
frstor
adc
aaa
ljmp
fcompl
cs
int3
lods
adc
sbb
pop
cltd
inc
jb
xor
shll
orb
mov
cs
push
push
cmp
or
xchg
xchg
add
shlb
push
cmc
testl
jbe
jbe
jge
sub
push
jbe
mov
jne
pop
dec
and
push
sbb
and
and
insb
xor
xor
sbb
sbb
movsl
mov
add
xor
enter
and
popf
mov
dec
popf
add
cs
mov
aam
imul
stos
push
jl
xor
mov
dec
cmpsl
sti
jmp
cli
movl
cmpl
push
in
or
mov
and
imul
test
cmp
cmp
mov
push
adc
stos
das
push
pusha
push
jle
add
and
jne
jmp
sbb
xchg
mov
xor
lea
divl
xchg
push
stc
xchg
xchg
or
dec
xchg
loopne
pop
loope
icebp
mov
fcom
xchg
mov
dec
jle
jne,pn
or
mov
or
sbb
adc
and
test
adc
pop
rorb
pop
jns
inc
mov
nop
or
inc
add
adc
and
sbb
ljmp
push
ds
adc
out
faddl
push
sbb
push
jo
subl
xchg
int
xchg
push
push
pop
ja
lahf
lea
sahf
jbe
sbb
adc
jmp
into
or
adc
je
sahf
dec
test
arpl
sub
std
enter
les
sbb
aam
ret
or
lods
inc
inc
adc
add
lods
xor
inc
inc
mov
push
adc
lods
xchg
xchg
dec
pop
adc
mov
je
dec
jmp
or
cmp
aam
ret
xchg
shlb
lahf
cmpsl
mov
ja
xor
or
fld
stos
or
cmp
shll
fstl
xchg
frstor
adc
inc
test
adc
lahf
test
ss
cmpb
out
adc
punpcklbw
inc
pop
test
sbb
cmp
test
dec
mov
mov
lret
xchg
pop
cli
mov
jmp
mov
iret
pop
push
add
add
add
inc
inc
lea
pusha
xlat
xor
sbb
adc
inc
sbb
sarl
adc
fstpt
mov
or
pop
call
push
sub
je
jmp
mov
mov
int
jmp
mov
mov
loope
sbb
pop
fsubs
in
mov
push
mov
inc
mov
mov
cmpsb
xor
fdivrl
aas
and
mov
inc
mov
leave
or
stos
call
or
lret
add
xor
dec
out
sbb
outsb
pop
sbb
fcoms
movsb
sahf
xchg
sub
inc
in
jmp
mov
fmull
sbb
inc
out
jmp
test
sti
mov
add
pop
adc
adc
xor
scas
shll
sti
or
inc
push
shrb
testl
inc
cmp
add
and
or
mov
dec
cmp
scas
pop
push
loopne
inc
inc
xor
push
out
ret
pop
sahf
mov
sbb
sbb
mov
dec
imul
or
xchg
pop
add
icebp
adc
loop
idivb
dec
pop
and
pop
push
push
fs
xchg
add
push
xchg
pushf
in
add
mov
data16
out
adc
jo
xchg
jle
insb
lret
popf
les
dec
cmp
jle
out
das
and
jne
cld
flds
cld
sbb
mov
sahf
or
or
cmc
les
push
and
loopne
je
add
ja
imul
jne
pop
add
xchg
inc
pusha
push
inc
add
add
adc
sbb
test
shll
or
xchg
inc
xor
adc
imul
xchg
push
cmp
jae
inc
push
test
cmp
shlb
loope
xchg
insl
sub
cmp
pop
or
sbb
jl
push
cmp
mov
test
and
enter
pop
cld
lods
pop
in
daa
and
jnp
inc
ret
xchg
and
in
jnp
mov
dec
jbe
mov
push
push
pop
push
adc
and
or
loopne
cmp
mov
fistps
mov
jmp
push
inc
push
xor
std
adc
adc
je
ss
jns
add
mov
fistpl
push
pop
sub
sub
adc
mov
sbb
add
ficomps
push
inc
sub
xor
and
shl
jno
add
pop
pop
loopne
adcl
enter
iret
xor
sub
pop
push
stc
mov
ljmp
addl
push
test
mov
leave
rcrb
nop
out
jp
inc
sub
inc
das
leave
data16
test
sbb
mov
gs
or
push
add
xor
inc
adc
xchg
loopne
mov
mov
test
or
or
pop
js
out
repz
nop
dec
mov
les
and
push
subb
stos
subb
icebp
insb
pop
add
out
push
or
enter
mov
adc
popl
dec
pop
xchg
or
hlt
movsl
or
adc
mov
movsl
pop
pushf
cmp
xchg
add
aam
add
sub
adc
jmp
mov
xchg
fwait
jmp
xchg
fists
or
movzwl
adc
add
cmc
or
movsb
test
xor
sbbl
dec
mov
testl
pop
lret
cld
pusha
ret
xchg
pop
mov
cmp
push
cmpsb
loopne
sub
push
divb
mov
mov
mov
dec
dec
test
cmp
mov
push
adcb
inc
sub
stos
femms
xor
notl
cld
inc
pop
add
push
dec
pop
dec
sbb
cmpb
push
idivb
mov
add
jno
xchg
outsl
sarb
andl
xchg
cltd
add
cmp
cmp
sbb
insb
adc
jo
cli
dec
daa
shlb
shlb
xchg
mov
pop
cmpl
leave
pop
les
int
cs
pusha
xchg
mov
jb
fisttps
xor
repnz
or
xor
sbb
sub
mov
push
jns
pop
push
loop
insb
adc
mov
push
bound
loop
test
and
iret
mov
mov
xor
add
out
sarb
push
adc
and
inc
dec
sub
andb
jl
mov
push
inc
push
in
cmp
mov
mov
hlt
fsubr
sub
jne
mov
dec
or
mov
or
add
orb
subb
mov
outsl
adcl
bound
popf
sub
sub
cmpsb
mov
nop
dec
jl
je
movsl
nop
xor
push
adc
test
pop
push
dec
clc
sub
push
dec
pop
das
lea
add
or
pop
adc
adc
pop
or
push
and
push
inc
fsub
sub
in
movlpd
and
pop
add
sub
shl
mov
pop
or
push
or
aad
or
aad
out
subps
xor
pop
add
cmpsl
fiaddl
pushl
pusha
arpl
sbb
dec
ret
inc
pusha
xor
clc
add
and
inc
add
adc
dec
popa
add
push
call
adc
xor
and
std
jns
dec
or
test
loop
dec
or
inc
pop
or
stc
sbb
pop
inc
filds
cmp
jne
add
push
sbb
xor
add
icebp
test
daa
push
pop
fisttps
dec
lds
imul
popa
xchg
add
and
inc
bound
cmp
loope
loopne
pop
mov
or
dec
ja
mov
ret
sub
jmp
mov
insb
out
out
cmpsl
mov
stc
ja
or
data16
test
jmp
stc
push
movsl
lea
cmp
mov
push
sub
inc
xor
clc
xor
adc
add
and
loope
in
inc
or
loopne
mov
in
jns
filds
mov
sub
mov
xor
js
sub
bound
rcrl
jne
fldenv
in
repz
push
and
and
mov
or
pop
loope
dec
jb
sbb
sub
subl
add
xchg
mov
xor
adc
or
scas
and
dec
jo
xchg
in
mov
jbe
mov
int3
mov
lock
cmpb
or
sti
call
es
cmp
test
loopne
or
je
inc
inc
mov
lock
adc
enter
jmp
xor
in
scas
add
in
inc
add
inc
gs
sbb
cmp
loopne
imul
loop
outsb
aas
add
xor
push
adc
adc
cmpsb
enter
or
movsl
lods
cmp
xchg
pop
adc
push
mulb
add
in
dec
push
mov
loopne
popa
inc
fisttpl
cltd
rolb
mov
adc
cmp
adc
test
inc
add
std
sub
shlb
or
xchg
cmpsl
dec
adc
shll
adc
xor
and
es
adc
mov
pop
ficoms
lret
rcl
adc
jo
cmp
js
inc
mov
sub
cmp
or
and
js
pop
pop
fmull
add
lods
or
pop
sbb
and
pop
mov
mov
cmp
inc
sbb
loopne
or
imul
pop
sti
xor
outsl
add
stos
add
mov
stc
je
inc
call
daa
enter
push
jb
and
push
andb
leave
pop
and
xchg
mov
inc
sbb
ds
das
pop
and
sub
dec
gs
add
jl
popa
sar
cmp
pusha
and
xchg
mov
adc
dec
sbb
xor
into
insb
push
sub
push
inc
jnp
dec
into
jp
mov
neg
add
mov
sbb
mov
jecxz
adc
jns
in
sti
mov
ds
jbe
ja
pop
xchg
mov
dec
add
adc
xchg
push
pop
inc
sub
or
ss
fs
dec
mov
sub
mov
sub
nop
cmpsl
test
inc
adc
and
jb
mov
push
add
pop
pop
xchg
insb
jae
mov
add
sbb
sub
pop
jo
jb
xchg
jb
ss
test
popa
pop
and
pop
sbb
mov
cs
jnp
add
mov
mov
ret
aas
fs
or
add
mov
cmpsl
lds
and
movsb
cmp
jmp
inc
mov
insb
dec
xchg
movsb
fnop
xchg
xor
pop
mov
add
lahf
adcb
push
jae
sub
xor
mov
sbb
inc
pusha
jo
add
xor
dec
sbbl
inc
add
mov
sbb
xor
je
jne
sahf
adc
imul
fsubrs
fcmovbe
rcll
ss
ja
xchg
mov
cmp
inc
in
pusha
gs
addb
or
push
jne
sub
sarl
mov
jnp
adc
cmp
and
push
mov
cmp
rolb
or
daa
xor
and
sbb
mov
and
sarb
aaa
inc
mov
inc
push
rorb
cmp
outsl
cmc
js
jbe
mov
add
fidivrs
jb
iret
mov
nop
inc
add
or
rol
add
loope
add
add
dec
inc
jb
add
aad
or
dec
in
and
test
cmpsb
add
sub
and
cwtl
rcr
ja
loope
push
dec
mov
js
nop
push
xchg
adc
pop
inc
inc
mov
subl
fildl
pusha
or
add
dec
mov
add
fildl
add
push
dec
fildl
add
pop
dec
dec
fildl
pusha
pusha
and
and
ja
inc
mov
xlat
lock
dec
inc
inc
push
push
cwtl
call
dec
push
dec
enter
aaa
push
fcoms
sub
push
hlt
das
mov
mov
leave
ret
mov
push
mov
and
or
jo
mov
in
enter
not
mov
add
pop
pop
push
shll
push
inc
loopne
aaa
js
loopne
push
dec
push
mov
call
sbb
push
push
inc
push
inc
or
mov
inc
pop
xchg
or
test
sub
sbbl
je
sbb
nop
pushf
and
or
aam
repnz
inc
test
cmp
push
in
mov
fistpl
jg
fmuls
aaa
sbb
mov
aam
mov
jp
or
mov
insb
xor
insb
lods
ss
adc
je
mov
or
pusha
pop
loop
fadd
incl
inc
or
pushf
aas
mov
sub
or
lods
mov
mov
xor
rorb
sbb
push
jl
inc
iret
xchg
sub
inc
adc
loop
dec
shlb
mov
testb
out
or
or
and
push
and
sbb
pop
imul
imul
mov
fld
test
scas
stc
je
ja
adc
push
push
xor
enter
rcrl
adc
pop
ds
lds
insb
insl
outsl
pop
push
jno
bound
xor
shll
cld
or
adc
adc
push
add
push
push
xchg
sbb
or
enter
jns
push
mov
mov
loope
or
incb
push
jle
inc
jmp
ja
fwait
ret
add
or
dec
inc
mov
hlt
fs
popa
js
dec
add
fidivs
push
fiaddl
add
push
lea
xchg
push
or
adc
nop
pop
pop
outsb
das
nop
inc
pushf
push
scas
jo
inc
int
rcll
pushl
cmp
inc
or
cmp
icebp
fidivrl
push
je
push
mov
adc
out
std
mov
inc
js
push
lcall
push
xor
adc
nop
jb
mov
outsl
pop
xor
push
into
imul
jecxz
mov
ds
jo
push
adc
lock
imul
bound
mov
push
iret
or
cmp
adc
pop
pop
or
cld
push
or
es
mov
addr16
push
outsl
mov
xchg
or
sbb
xor
mull
cmp
or
xchg
leave
test
mov
and
push
scas
addl
insb
xor
in
js
or
xchg
lret
ret
das
pop
and
jl
cmp
add
insl
and
and
jns
xlat
or
and
pop
adcl
add
test
cmp
add
inc
in
push
or
sbb
sbb
sbb
cs
push
sbb
add
addb
sbb
in
and
and
stos
mov
or
xor
inc
and
test
add
movsb
xor
mov
xor
es
add
in
icebp
sub
pop
mov
sub
sub
push
jb
sub
xchg
dec
and
adc
xor
test
sbb
mov
sbb
and
aaa
xor
jl
and
cmp
inc
sarb
and
mov
pop
loope
ret
cmp
push
repnz
or
adc
or
jns
cs
xchg
push
inc
cmpb
push
pop
push
inc
sbb
sarb
enter
xchg
out
lods
and
cwtl
nop
es
cmp
jo
inc
push
push
push
call
pop
pop
sbb
mov
outsb
cmp
sbb
arpl
add
lds
leave
add
jb
dec
and
sbb
and
push
dec
push
mov
bound
add
and
adcl
es
cs
and
sub
cmpsb
xchg
stos
sub
mov
cs
and
or
inc
jae
adc
add
xor
inc
leave
add
or
pusha
add
cmp
cwtl
addb
dec
nop
je
wbinvd
out
shl
or
jb
stos
add
rcll
lahf
mov
test
pop
mov
xchg
and
bound
out
cmp
ficoml
cmpsb
push
dec
sub
mov
xchg
outsb
cmp
mov
mov
adc
js
test
repnz
fsubr
popa
jns
inc
nop
adc
mov
push
add
cld
xor
imul
adc
shrb
push
push
adc
or
dec
mov
jae
cmp
mov
jg
loope
aam
jo
das
in
mov
daa
adc
in
inc
add
add
and
sbb
and
rcll
cltd
loopne
stc
jge
sbbb
mov
aad
addb
cmp
popa
and
js
push
das
movsl
xor
inc
and
testb
insl
lods
adc
pushf
jb
or
mov
adc
push
notl
adc
add
lods
and
int3
jo
into
xor
adc
cmp
sub
inc
imul
fwait
movb
mov
or
imul
add
or
lret
dec
sbb
outsl
adc
movsb
and
jns
xchg
dec
lock
xor
push
and
insl
daa
mov
adc
inc
test
aas
jbe
push
dec
mov
adc
jge
jge
mov
push
or
scas
adc
or
inc
pop
and
add
pop
inc
outsl
sarb
ss
in
in
pop
push
pop
dec
fadds
cld
pop
cmp
aaa
outsb
inc
pop
inc
inc
jl
test
rcr
inc
mov
and
mov
arpl
clc
es
movsb
push
outsl
push
add
in
push
ja
jp
jns
mov
addb
push
push
sub
addr16
ficoms
lcall
jge
xchg
mov
add
fstpt
jnp
js
cmp
pushf
dec
cmp
inc
push
adc
add
add
add
add
rolb
popf
xor
add
add
or
push
jp
inc
mov
pop
inc
add
mov
mov
mov
mov
mov
jmp
ljmp
sbb
mov
mov
mov
sbb
iret
or
jmp
std
pushl
data16
sar
sar
scas
jl
jbe
mov
in
cmp
fidivrs
xor
mov
ds
jl
mov
mov
idivb
mov
push
call
mov
push
fs
ds
push
lea
repz
je
push
in
jb
jae
mov
sahf
jo
xor
aam
lahf
repz
and
mov
in
jle
push
addr16
cbtw
pusha
pushf
adc
es
dec
add
icebp
mov
jns
int3
inc
cmp
pop
xor
shrb
or
sarb
fadds
add
or
stos
xchg
adc
xor
addr16
xor
adcb
xor
mov
mov
xchg
sub
inc
mov
mov
mov
inc
ljmp
lock
mov
mov
out
xor
pop
xchg
push
dec
lods
jmp
xor
pop
pop
sub
rorb
push
loop
or
add
fimull
nop
or
rolb
adc
and
xchg
pop
inc
mov
cwtl
pop
xor
repnz
sbb
inc
hlt
ret
ljmp
clc
repnz
jno
sysret
push
dec
scas
pusha
sbb
mov
fsubrs
push
cmp
jo
and
adc
outsl
sbb
mov
xadd
leave
dec
xor
jl
add
xchg
pusha
xor
and
mov
incl
and
inc
cmp
jle
icebp
push
push
or
les
jne
or
je
and
cmp
push
inc
jl
mov
cli
aaa
test
insb
gs
mov
add
les
push
jbe
jecxz
xchg
shrb
mov
adc
inc
hlt
pushf
cmpsl
fcmovu
popa
cmp
sbb
xchg
idivl
repz
mov
dec
aam
add
sub
lods
dec
pop
add
dec
jno
adc
xor
adc
movsb
add
arpl
push
push
into
or
pusha
lods
pop
jae
fstpt
hlt
mov
push
xchg
cmp
dec
lods
mov
cmp
out
outsb
sbb
xor
hlt
shrb
push
neg
add
dec
call
add
or
cmp
movsb
lods
out
sbb
rorb
leavew
insl
enter
pop
ret
ja
mov
pop
and
inc
xchg
mov
mov
sub
push
test
sbb
adc
mov
mov
push
adc
pop
movsb
or
sbb
enter
push
mov
enter
jg
pushf
pop
add
push
sbb
nop
pusha
and
daa
std
sarl
enter
xchg
cmpsb
fisubrs
inc
add
mov
std
xchg
push
popa
and
faddl
push
sbb
popa
les
cmp
test
loop
aad
jo
das
pop
call
dec
mov
mov
sub
xchg
mov
sub
leave
movb
push
or
xchg
cmp
fidivl
pop
pusha
out
mov
cltd
dec
sbb
push
loopne
fistl
sub
imulb
xchg
xor
push
pushl
add
test
cld
mov
adc
sbb
inc
add
xor
push
push
mov
aas
call
xchg
pop
or
mov
cmp
push
lea
mov
sti
rorl
add
inc
add
inc
inc
sbb
movb
dec
cmp
mov
mov
add
es
cmp
mov
xor
xchg
cmp
xor
mov
or
filds
push
out
push
add
or
adc
dec
dec
pop
dec
stc
xchg
add
fdivs
clc
mov
push
fdivl
jg
in
sbb
inc
pop
inc
mov
mov
adc
sub
das
pop
cwtl
adc
loopne
cmp
gs
and
sbb
ja
jl
rcll
gs
push
jg
adc
pushf
mov
mov
lock
jo
xor
cmp
or
cwtl
xchg
je
adc
fsubl
lods
pop
sahf
lret
jnp
or
adc
add
or
adc
pop
adc
mov
popf
mov
push
mull
sub
mov
fisubl
mov
sbb
inc
adc
imul
add
mov
lcall
add
inc
adc
adc
popa
pop
enter
test
adc
jno
inc
arpl
je
adc
mov
xchg
jmp
xchg
dec
movsb
xor
shl
pop
pop
cwtl
push
inc
sub
rolb
sub
and
dec
shr
add
jne
dec
and
mov
sbb
repnz
repnz
clc
hlt
mov
inc
or
add
inc
fildl
rol
xlat
imul
insl
push
ja
je
mov
sbb
push
mov
inc
daa
or
sub
mov
sub
inc
or
inc
sbb
mov
and
or
or
ds
push
inc
add
hlt
inc
cmpsl
xor
jno
jp
das
adc
jge
jmp
popa
sub
cmp
lcall
ss
adc
mov
xor
mov
cld
sbb
jg
xor
push
lods
inc
and
sub
sub
sbb
adcl
mov
mov
fstpl
sub
or
outsb
add
adc
push
mov
adc
add
fimull
push
or
push
xor
addr16
xchg
adc
sub
push
cwtl
xor
xor
dec
add
lret
cmpsb
fs
out
lock
xor
or
cmp
movsl
push
mov
xlat
xor
add
adc
lods
push
fidivrl
outsl
adc
hlt
pop
add
into
pop
sti
cmp
ret
into
lods
push
push
cmp
pusha
pushf
fidivrl
jp
and
adc
mov
dec
sbb
add
jno
popa
jmp
lea
mov
sbb
ret
fdivrs
sbb
adc
sbb
sub
add
lock
outsb
inc
fbld
test
jne
repnz
jmp
mov
pusha
sub
jne
inc
and
or
jp
mov
mov
and
adc
fisubrs
jl
cli
ljmp
sbb
push
mov
dec
or
mov
pop
hlt
neg
jmp
add
test
subl
pusha
xchg
mov
pop
mov
and
push
add
adc
mov
and
mov
or
stos
xchg
stos
nop
mov
sub
aas
cld
lret
inc
ds
cmp
popf
movsb
or
push
mov
les
test
or
es
lods
fistpll
xor
add
mov
mov
xchg
add
in
je
pusha
inc
dec
mov
push
orl
aas
add
ja
cmpsb
pop
adc
fdivrs
orl
xor
or
jmp
push
popf
mov
inc
out
loopne
adc
or
inc
or
out
fdivp
hlt
rorb
cmp
cs
or
xchg
inc
xchg
out
hlt
pushl
test
fidivrl
xor
sub
mov
adc
push
push
ja
loopne
and
push
je
xor
or
cs
ret
sub
mov
jbe
insb
aaa
and
or
lds
dec
call
xor
lcall
sub
pusha
orl
or
sub
jl
xlat
subb
push
add
sahf
call
push
inc
inc
in
push
xchg
xor
out
lods
into
out
pop
inc
pop
push
sub
xchg
sub
mov
std
aaa
add
inc
into
xchg
cmp
adc
movsb
inc
xor
dec
pop
cmpl
mov
sahf
cmp
dec
out
fs
mov
push
pop
sbb
mov
mulb
mov
push
movsl
adc
pusha
jge
push
neg
cmp
sbb
cmpl
rolb
outsb
cmpsl
inc
rorb
ds
cmp
cmp
inc
mov
jns
mov
push
dec
inc
mov
mov
adc
push
mov
sub
add
pextrw
pop
push
add
xor
lods
and
add
jmp
test
stos
add
jo
rclb
imul
add
insl
fimull
add
je
pop
das
adc
add
aam
ret
js
lock
fnstcw
enter
insb
pop
mov
add
add
lods
or
push
mov
shlb
jmp
cmp
sbb
scas
mov
jl
dec
xchg
xchg
in
xchg
add
xor
inc
push
mov
outsl
cmpsb
orb
pop
cmp
mov
das
add
mov
add
test
jge
ljmp
movb
bound
add
cmp
test
aaa
and
mov
neg
sbb
mov
dec
sbb
push
xor
movsl
out
cmp
adc
sbb
cmpsl
add
ss
and
mov
push
jp
pop
sbb
sub
xor
inc
enter
cmp
test
cmp
xor
enter
clc
pop
dec
sub
push
sub
cld
dec
sbb
adc
inc
test
fisttpl
and
mov
or
cmp
lock
pop
sbb
and
push
stos
push
test
rcll
push
mov
clc
sbb
add
push
and
pop
mov
push
xor
fwait
idivb
push
ja
ror
out
es
jb
pusha
fwait
inc
and
aas
mov
mov
test
add
push
push
mov
insb
pop
mov
or
sbb
call
sbbb
push
mov
nop
stos
push
sarb
add
pushf
or
adc
adc
add
aam
stos
push
std
or
mov
add
jo
push
add
hlt
xor
add
movsl
lods
add
out
jno
xor
pop
js
popa
jmp
adc
roll
pop
mov
or
add
or
icebp
out
sbb
addb
mov
and
inc
pop
or
lret
hlt
addb
pop
or
jl
sub
ret
bound
dec
mov
sbb
outsl
or
mov
jne
cvttps2pi
jo
pusha
adc
push
getsec
out
imul
pop
loopne
popa
inc
pushf
jmp
sub
add
mov
add
mov
pushf
pop
cwtl
cltd
scas
pop
mov
pop
in
lods
mov
ds
in
pop
add
or
jg
arpl
jo
out
mov
push
dec
add
lock
and
imul
xor
adc
clc
js
clc
dec
cmp
paddq
pop
insl
and
add
and
mov
dec
jne
or
pop
hlt
movl
rcll
out
and
inc
xor
sbbb
mov
add
loope
mov
add
xchg
or
aas
cmpsl
mov
inc
and
pop
dec
add
xchg
mov
sbb
icebp
jmp
pusha
mov
sub
sbb
testb
fiadds
xor
jb
push
mov
sbb
loopne
cld
js
or
add
mov
inc
sarl
sub
add
xlat
sbb
fsubrs
or
testl
and
or
dec
pop
xor
scas
adc
mov
lea
push
mov
add
aaa
push
adc
hlt
push
loop
ljmp
popa
rorl
jge
sbb
out
outsb
scas
jnp
sbb
pop
mov
cltd
sarl
jo
dec
ja
mov
sbb
or
jo
mov
sbb
or
mov
pop
mov
insb
nop
das
or
pop
jns
jge
rcrb
add
testl
xor
leave
jne
push
xchg
push
add
push
movlps
xchg
mov
hlt
in
loopne
sbb
add
pshufw
test
inc
ret
ffreep
ljmp
out
lcall
mov
popf
data16
add
pop
dec
je
inc
mov
push
pushw
outsb
add
imul
or
pop
insl
xlat
pop
and
sub
push
fildll
mov
hlt
sub
shrb
pop
aas
sub
pop
out
xor
jns
or
orb
aam
pop
jb
ret
inc
hlt
hlt
movl
xor
xchg
dec
push
adc
ds
xchg
xchg
and
adc
enter
sub
fmuls
xchg
push
dec
pusha
das
inc
or
sbbb
lods
les
dec
cli
xchg
xlat
aam
jno
adc
cmp
and
push
dec
inc
scas
lcall
test
js
or
lock
ret
mov
xchg
orb
or
incb
mov
mov
or
pop
pusha
pop
es
stos
lahf
loope
sub
xor
or
sbb
or
bound
js
mov
add
add
fbld
adc
or
hlt
adc
das
inc
adcl
jp
add
push
clc
aaa
sbb
add
testb
jne
loope
pop
cmpsl
jo
inc
jmp
je
sarb
add
xchg
cmc
mov
xor
jecxz
mov
xchg
jmp
ret
jo
dec
scas
or
or
inc
sub
hlt
sub
aad
icebp
inc
or
or
xor
leave
mov
das
xor
addb
repz
loopne
mov
push
jb
ret
mov
iret
xor
and
mov
cmp
xlat
add
jbe
sarb
clc
jne
pop
insl
roll
cs
or
adcl
lds
or
aaa
subl
movswl
rclb
cmpl
outsb
pop
push
orb
ficompl
mov
add
clc
nop
push
jmp
or
inc
add
xor
sbb
or
mov
mov
sbb
or
inc
xor
sbb
lock
shlb
or
jmp
push
out
or
shrb
mov
mov
and
push
mov
dec
call
add
adc
pop
push
sbb
sbb
mov
movsb
je
scas
aas
in
cmp
and
cmpsl
inc
sbb
xor
rolb
sbb
inc
mov
push
pop
push
cmp
fisubrs
mov
outsl
jnp
inc
and
shlb
mov
popf
les
pushaw
jge
jmp
push
mov
cs
jae
leave
lock
lock
or
in
in
dec
lcall
mov
push
dec
negl
xor
add
add
dec
outsl
in
inc
and
inc
sub
push
and
lock
add
testb
and
andb
xchg
pop
inc
add
addl
mov
adc
add
add
jl
push
ffree
push
adc
adc
mov
fsubrs
adc
mov
ja
add
sbb
add
js
mov
ljmp
sbb
and
daa
std
cs
adc
sahf
sub
mov
sub
sub
and
and
mov
addb
test
mov
es
add
mov
mov
stos
adc
in
jbe
cs
out
jo
loopne
nop
mov
jl
bound
dec
cmpb
adc
inc
xchg
mov
xchg
add
xchg
push
pop
dec
fnsave
push
xchg
inc
pushf
popa
pop
das
sbb
adc
jno
loopne
out
dec
jns
sub
cmpsl
divb
inc
push
push
inc
scas
hlt
and
xchg
pop
add
or
jne
test
mov
add
insb
push
xor
outsb
cmp
adc
add
sub
dec
es
out
fnstsw
sarb
int3
lcall
outsl
or
aaa
out
sbb
mov
in
mov
loopne
insb
xor
dec
movsb
loop
push
mov
and
pop
dec
clc
sub
xchg
movsb
hlt
cmpb
andl
xor
jle
jne
lea
loope
sub
dec
subb
scas
xchg
call
testl
xor
mov
sub
jo
inc
cmp
cmp
loopne
and
xchg
mov
adc
mov
add
mov
jns
adcb
mov
push
outsb
adc
movsl
sub
xor
xchg
mov
and
aas
loopne
out
in
movsb
adc
pop
mov
or
mov
inc
add
push
cld
dec
mov
das
daa
push
lret
push
and
xchg
lds
or
sub
mov
inc
adc
xchg
repz
sub
mov
les
sub
js
cmp
je
jae
push
adc
adc
int
pop
or
pop
inc
cmpsb
push
sbb
cmpsb
not
fistl
cs
sub
push
mov
mov
push
or
sbb
xchg
mov
dec
or
and
scas
mov
cltd
dec
xchg
sub
push
mov
add
das
andl
fldcw
lsl
pop
mov
xor
mov
and
mov
and
cmp
dec
dec
ljmp
xor
adc
divl
shlb
lahf
fdivrs
pop
xchg
jnp
mov
jno
dec
outsb
push
xchg
mov
or
cmp
or
jns
nopl
adc
inc
imul
daa
loopne
mov
shlb
insb
in
aaa
cmp
addr16
test
xor
mov
sbb
lahf
pop
orb
fistps
popf
push
je
rcll
pop
and
and
push
and
push
imul
gs
inc
mov
sbb
pop
ret
jle
loope
sbb
add
jb
sub
andb
mov
cs
pop
shrl
roll
xor
cmpb
sbb
adc
sub
js
in
cmpsb
xchg
add
and
adc
insl
mov
xchg
fwait
nop
rorb
cmpsl
add
das
and
jl
cmp
add
inc
aas
lcall
pushf
cwtl
jg
sub
xchg
cmpl
dec
or
frstor
cmove
lock
push
addr16
cmpl
ja
and
lock
sub
cmp
inc
or
mov
or
push
push
mov
xor
add
xchg
xor
fistl
jecxz
jne
clc
xchg
aam
sub
jo
cmpsb
or
cmp
enter
nop
inc
push
mov
rorl
das
in
sub
addl
adc
popf
and
and
lock
and
mov
and
cmp
inc
dec
pushf
push
int3
dec
jno
dec
mov
or
dec
lahf
dec
test
adc
sbb
jecxz
popl
je
mov
jnp
inc
pop
or
jnp
jne
repnz
push
jl
loop
ffree
or
out
push
adc
and
pop
orb
jmp
pop
std
mov
pop
inc
test
arpl
imul
int
sbb
push
cwtl
es
sbb
mov
cmpb
sub
jb
sarb
and
or
dec
adc
pop
popa
das
mov
lret
lret
sbb
and
xlat
fldcw
push
mov
mov
add
mov
pop
jo
nop
pop
rolb
das
cmpl
sbb
inc
inc
push
std
lds
rolb
push
sub
jb
or
loop
or
xorb
ret
pop
inc
sub
fbstp
cmpb
adc
jne
add
fcoml
sbb
add
cmp
ret
js
pop
dec
adc
and
test
ds
ret
pop
es
mov
pop
xor
cs
jo
lea
push
sbb
clc
xchg
inc
les
and
daa
xchg
sub
or
lods
testb
xlat
inc
jns
mov
outsb
sbb
orl
sub
or
imul
xor
popa
add
push
loopne
xchg
ljmp
push
sub
push
jo
ja
pop
cmp
dec
out
popa
push
or
dec
inc
inc
jle
es
pop
push
xchg
in
clc
cmp
addr16
xchg
call
xchg
int3
and
dec
nop
enter
adc
test
rcrl
lret
les
xchg
sub
loope
push
lcall
adc
out
pop
add
pop
add
nopl
repnz
push
loopne
fwait
out
cmp
ret
in
imul
push
add
and
add
cmpsl
pop
push
lock
popa
fadds
dec
or
cmp
adc
cltd
sbb
add
pop
inc
insl
pusha
add
mov
icebp
push
dec
xor
cwtl
adcl
adc
enter
xchg
nop
or
dec
mov
pop
out
loop
adc
stos
pop
sub
inc
pop
inc
cmp
and
pop
nop
mov
push
stc
adc
push
rclb
sbb
mov
call
jo
mov
pop
inc
push
inc
add
mov
pop
pusha
pop
cmp
movsb
push
shrb
lds
loopne
xor
lret
and
sub
pop
or
fisubrs
inc
stos
inc
loopne
mov
rcl
adc
in
outsl
ret
dec
push
and
pop
jg
es
xchg
sbb
and
sbb
clc
sbb
jnp
sub
push
adc
push
lock
fisubrl
lret
push
push
xor
xor
adc
lea
cmp
dec
and
ds
adc
jl
imul
push
push
pop
shll
leave
sub
and
lods
and
das
movsl
ret
adc
jnp
sbb
fs
sub
or
inc
popf
cmpb
adc
dec
das
dec
cmp
rorb
xchg
jmp
popa
xor
movsb
sbb
xor
test
insb
sub
mov
push
xchg
mov
dec
je
adc
or
imul
pusha
sub
sbbl
adc
cmp
mov
mov
inc
jno
push
mov
mov
mov
aad
push
pop
add
mov
int3
push
jnp
scas
lahf
jl
je
push
ret
mov
xor
push
es
mov
xor
idivb
add
sub
push
xchg
mov
loop
mov
sub
push
jmp
addr16
outsb
rolb
push
sbb
xchg
movl
mov
xlat
jo
push
and
je
dec
dec
pop
rdpmc
decl
aaa
cmpl
sub
jbe
stos
pop
les
dec
add
sbb
pop
xchg
cmpsl
cli
xchg
cmp
fs
push
xor
outsb
jecxz
mov
aaa
pop
lret
lea
adc
sbb
inc
cmpsb
filds
and
lock
cmp
divl
pop
inc
mov
mov
out
push
out
inc
push
test
into
sbb
movsl
mov
daa
or
js
and
test
insl
adc
fimuls
nop
pop
pop
cmc
dec
ljmp
adc
inc
adc
shll
mov
and
and
sub
icebp
decb
sarb
jns
ret
mov
jo
jp
test
add
push
aam
inc
fsubs
pop
cmc
je
jns
stos
pop
push
adc
stc
bound
sbb
pop
push
imul
sbb
arpl
or
xlat
scas
jno
xor
mov
stos
adc
imul
and
icebp
call
cmpl
rorb
xor
pop
sbb
inc
xchg
addb
loop
mov
and
cmp
in
xor
test
mov
test
push
xor
ds
dec
mov
push
pop
xchg
repnz
jo
pop
jmp
xchg
ljmp
lds
jmp
cmp
lods
jo
jno
movsb
add
add
pop
imul
cmpsl
mov
add
pop
xor
mov
lock
insl
push
insb
add
jne
ljmp
push
hlt
mov
inc
inc
or
sbb
mov
add
or
or
mov
or
aaa
push
dec
je
xchg
pop
jnp
cs
clc
je
cmp
arpl
push
and
jnp
jmp
int
stos
nop
imul
imul
test
jnp
sbb
mov
push
mov
jl
or
ljmp
loope
xor
outsb
push
jp
cmp
jl
lds
sbb
push
mov
xchg
push
xorl
add
or
adc
sub
sbb
or
xchg
movsb
sub
outsl
jb
test
or
pusha
pop
mov
sti
push
cmp
sbb
pop
ret
jae
or
stos
push
cmp
jne
xchg
pop
mov
mov
ret
nop
and
fwait
xor
pop
xchg
cs
inc
out
xchg
in
sbb
scas
mov
jo
adc
mov
aas
push
test
sbb
and
xchg
movsb
mov
push
mov
jp
add
mov
sti
sub
cld
ret
adc
andb
test
adc
cmp
movsl
jge
test
cmp
jne
outsb
adc
push
enter
pop
push
cmp
pop
mov
or
out
mov
mov
inc
cmp
out
push
pop
shl
inc
adc
jae
dec
imul
out
mov
push
sbb
sbbb
ljmp
les
pushf
mov
and
and
mov
sti
add
imul
and
sub
out
add
push
pop
push
push
cmp
and
mov
mov
add
aad
mov
sub
push
jl
addr16
lock
xor
imul
inc
ret
push
push
sub
shl
push
push
test
lds
sarb
daa
cmp
outsb
or
sub
flds
inc
or
or
bound
sbb
mov
daa
pusha
pop
adc
mov
add
or
movsb
mov
dec
nop
dec
push
mov
fiadds
adc
js
xor
push
sub
clc
jg
adcl
ret
adc
dec
cld
mov
jecxz
add
je
pop
or
dec
hlt
iret
mov
cmc
dec
pop
imul
push
sbb
in
or
adc
fdiv
cmp
cld
inc
push
inc
mov
enter
xorb
lock
or
and
mov
mov
testb
js
inc
fisubl
pop
adc
ljmp
inc
xchg
push
ja
fucomip
jns
rclb
divb
shrb
insl
add
jne
adc
jmp
and
or
lods
mov
xor
shlb
inc
add
add
pop
push
mov
fadd
ffree
add
sub
xchg
fdiv
fiaddl
dec
push
inc
loop
inc
jno
arpl
or
jo
mov
mov
popf
add
xchg
push
ret
and
adc
adc
add
pop
push
fmulp
jnp
add
push
or
mov
scas
inc
add
and
cmp
sbb
inc
dec
js
imul
push
add
cmpl
and
pop
push
jmp
mov
or
das
inc
xchg
add
add
les
dec
stos
jo
jne
xlat
fmuls
cmp
add
adc
and
hlt
sub
es
cltd
scas
pop
inc
inc
and
jp
loopne
movsl
jle
push
or
mov
lcall
or
push
int3
and
pop
movl
push
xor
sub
sbb
test
ss
pop
xlat
outsb
pop
roll
dec
dec
jl
sbb
or
in
jle
mov
xchg
loope
adc
aam
int
and
xor
fcmovu
mov
leave
fmuls
popa
insl
adc
xor
sti
imul
adc
cmp
rcll
sbb
sbb
ror
inc
and
adc
insb
out
insb
mov
push
dec
add
pop
add
or
jmp
add
dec
dec
adc
andb
push
sarb
pop
mov
icebp
je
pop
push
bound
xlat
shlb
push
dec
jmp
ds
push
push
fisubrl
add
pusha
das
mov
or
xor
pop
sub
xchg
lods
mov
fdivrl
push
add
inc
inc
les
fcoms
adc
pop
inc
xor
imul
sbb
sbb
or
push
sbbb
mov
jo
adc
and
inc
movsb
scas
test
xchg
or
inc
dec
les
add
xor
adc
or
nopl
out
push
jne
popa
mov
cs
out
mov
sub
add
ret
sub
incl
and
into
mov
jmp
inc
mov
sahf
adc
les
adc
inc
mov
mov
xor
jb
pop
xor
push
dec
inc
and
jno
jnp
test
inc
loopne
in
dec
les
stos
or
or
cmp
mov
enter
jnp
outsl
dec
cmp
aaa
icebp
ret
pop
insb
mov
aaa
sub
lds
cmp
mov
dec
aaa
mov
add
adc
mov
pop
fucomip
xor
and
popf
aam
hlt
sbb
testb
inc
cmp
mov
mov
jne
add
add
jne
mov
dec
loope
add
sbb
jne
pop
popa
pop
inc
lahf
and
and
lock
or
sub
mov
add
push
mov
pop
xchg
fs
adc
mov
add
jle
pop
cmp
and
pop
mov
adc
or
scas
hlt
and
outsl
nop
or
inc
sbb
mov
ss
lock
dec
lock
lock
sbb
aaa
xor
pop
xor
push
xlat
mov
xchg
cld
mov
mov
orl
push
pop
sbb
pop
arpl
cmp
sbb
in
movb
cmp
xor
pop
sbb
rcll
and
shll
dec
xlat
sahf
ficompl
gs
adc
sbb
pop
mov
or
pop
jnp
add
pop
mov
cltd
cmc
mov
cmpl
inc
cmp
cli
ja
push
aam
cmpb
mov
addl
dec
and
mov
cmp
xchg
in
sub
push
loopne
mov
xchg
lea
mov
jecxz
inc
fimuls
daa
or
out
push
cmp
sub
or
popl
inc
dec
xchg
push
or
shrb
add
xchg
xor
pop
pop
or
xor
and
cmp
mov
cmp
mov
xor
push
and
add
movsb
mov
mov
or
nop
fwait
adc
cmp
lahf
inc
inc
or
mov
mov
je
arpl
test
dec
sub
nop
xor
add
cmpsl
dec
dec
dec
cmp
in
mov
les
imul
mov
sbb
hlt
or
inc
dec
inc
out
sbb
push
adc
and
jne
inc
mov
push
cmp
sbb
adc
mov
xchg
imul
jne
jno
dec
inc
dec
xchg
jo
jo
cmp
or
rolb
mov
rolb
pop
sub
fidivl
xor
xor
cmpsl
adc
jecxz
xchg
sbb
sarl
loopne
hlt
sub
push
addr16
xor
inc
adc
iret
popa
xor
inc
roll
dec
call
add
push
daa
mov
test
bound
rolb
xchg
out
pop
imul
xor
jmp
jbe
and
int3
fldt
adc
jl
mov
xchg
out
fwait
add
dec
ret
xor
xor
inc
push
not
lds
sbb
dec
fcomps
and
xor
mov
sahf
outsl
ret
lret
shlb
rorl
adc
decl
icebp
sub
adc
or
inc
sbb
inc
lcall
sub
stos
mov
insb
and
dec
dec
xor
popf
rorb
push
and
mov
and
test
xor
leave
aam
add
lcall
insl
jae
or
test
sbb
add
adc
repz
lds
fisttps
push
add
ljmp
jne
shr
repz
or
in
and
movsb
dec
roll
cmp
add
pop
push
test
arpl
outsl
pushl
adc
push
je
mov
imulb
test
sub
pop
dec
inc
add
inc
xchg
or
add
inc
adcl
add
dec
sbb
cmpsl
sarb
data16
jne
rcrb
in
mov
push
pusha
orl
mov
push
jo
adc
and
sarb
adc
xor
sub
pop
sbb
and
filds
movsb
push
rclb
enter
xlat
test
adc
dec
mov
jo
push
sub
push
xchg
adc
arpl
js
jle
jae
push
arpl
sub
pop
mov
add
xchg
inc
adcl
push
jecxz
movsl
lock
cmp
lcall
in
xchg
nop
jmp
dec
adc
ljmp
inc
pop
add
jno
test
call
adc
and
rclb
jnp
adc
xchg
cmpl
test
push
mov
adc
iret
sub
add
cmp
in
cmp
movsb
je
xor
jno
and
xor
mov
push
push
aaa
cmc
int3
js
cmp
cmpsl
inc
daa
ds
inc
aaa
bound
dec
inc
add
and
shll
add
adc
inc
shlb
outsl
ret
push
dec
add
stc
add
leave
neg
and
xor
rolb
arpl
scas
inc
stos
adc
pop
out
xchg
cs
sbb
or
ret
push
push
xlat
adc
or
push
or
and
or
inc
fidivs
repz
in
outsb
movsl
or
pop
and
add
or
push
jg
jo
aam
shrb
addb
hlt
mov
mov
movb
stos
cmp
xchg
popa
pop
or
ret
or
inc
insb
pop
push
xchg
push
testb
and
mov
pop
sub
dec
sbb
cmpsb
xlat
sbb
inc
rclb
push
sbb
test
and
push
les
pop
dec
decl
popa
dec
test
inc
lea
mov
mov
in
add
sbb
adc
mov
sub
fiaddl
inc
and
and
xor
insb
shr
cmp
push
jno
addr16
pop
or
dec
lea
jne
test
fs
push
mov
lret
jecxz
unpcklps
sbb
test
pop
sbb
aas
lea
mov
stos
cmpsl
pusha
mov
inc
lea
xorb
in
mov
push
mov
pop
xor
or
xor
jb
aam
cmpl
push
fistps
xchg
adc
jl
cmp
out
shl
pop
jmp
imul
jl
repnz
setge
add
mov
jns
std
movl
pop
fcomps
movsb
push
cli
daa
jle
sub
xor
and
imul
sub
popf
xchg
bound
or
sub
adc
aam
loope
leave
clc
popf
mov
dec
lods
add
adcb
mov
xor
push
xor
cmovle
sbb
imul
xchg
sbb
pop
push
pusha
jae
mov
enter
pop
rsqrtps
lock
and
dec
adc
pushf
sub
push
add
aaa
push
xchg
pushl
jo
sar
jns
adc
jmp
xchg
int3
jae
pop
push
add
push
cmpsb
sub
fistl
add
cmp
cmc
rcrb
adc
and
xchg
subl
js
cli
sbb
or
iret
aam
jo
cmp
pop
jne
int
push
addl
or
lret
pusha
sahf
mov
add
xor
sub
xchg
jo
iret
inc
ror
loop
mov
add
dec
sahf
cld
bound
mov
mov
ss
cltd
add
sti
and
loope
inc
popf
stc
or
fistl
xchg
and
ja
inc
mov
loop
or
jp
sarl
inc
and
clc
and
call
or
in
cmp
xchg
mov
pusha
lret
je
jmp
adc
pusha
pop
mov
mov
or
jmp
int
imul
sub
fisubrs
sub
arpl
sub
adc
ds
xchg
xor
mov
sti
nop
xorl
nop
mov
les
or
arpl
pop
insl
push
push
pop
pop
and
cmp
push
je
cltd
scas
outsl
lods
inc
lds
xor
jle
push
shlb
ret
sbbb
push
enter
adc
lret
cmp
inc
add
or
pop
mov
js
sahf
sub
xchg
xchg
pop
int3
test
and
push
mov
add
adc
cmp
mov
sbb
cmp
sub
pop
fwait
dec
xor
and
sti
cmp
and
or
xchg
mov
mov
fldpi
sbb
jne
test
test
xor
outsb
jge
mov
icebp
pop
out
cs
inc
dec
jecxz
mov
arpl
add
das
pushf
xchg
addr16
lods
insl
int3
stos
test
or
xor
or
fbld
xchg
mov
fldenv
inc
fnsave
mov
sti
aas
adcb
stos
jecxz
dec
dec
and
clc
add
adc
rorb
mov
or
sub
inc
pop
sbb
inc
daa
mov
jns
or
stos
xchg
inc
xchg
mov
loopne
outsl
dec
xor
mov
outsl
pop
push
dec
pop
cmp
and
add
loopne
mov
mov
add
or
or
sbb
mov
les
daa
loopne
mov
xchg
loopne
xchg
jmp
test
sbb
popa
inc
fmuls
or
adc
jle
dec
pop
and
and
jo
add
add
js
mov
data16
cltd
mov
and
pusha
cmp
fcomps
adc
dec
jo
lret
decl
add
sub
cwtl
sti
mov
push
inc
add
xchg
sbb
cmp
insb
mov
or
mov
gs
and
ja
sbb
jmp
sbb
push
test
push
push
mov
pop
cmpsb
rorb
push
xlat
sub
mov
push
sbb
addr16
and
mov
rclb
loop
adc
out
daa
lods
mov
and
jo
jle
lds
movsb
or
jo
cmpsb
sti
dec
sbb
lock
sbb
mov
ret
or
mov
mov
imul
jb
fbld
loopne
push
sub
sbb
je
das
inc
fistps
jge
pop
mov
add
movsl
enter
out
push
lock
mov
or
test
mov
sbb
fbld
iret
push
loope,pt
inc
and
add
or
movsb
sub
and
dec
sbb
xchg
pop
ja
mov
add
push
pop
dec
ja
fcmovnbe
shrb
js
sti
lahf
cmp
adc
mov
mov
mov
test
arpl
es
sub
enter
pusha
cmp
nop
or
adc
loopne
push
mov
cwtl
ss
in
flds
mov
test
dec
ss
ds
test
mov
push
rorl
scas
test
inc
enter
icebp
adc
push
xor
enter
mov
enter
nop
sbb
iret
and
xchg
mov
cmp
enter
ret
lret
cltd
stos
adc
pop
lcall
dec
lods
test
add
out
add
roll
pop
push
lock
mov
jmp
dec
imul
out
jge
ds
call
fcompl
sbb
sbb
mov
cmp
add
push
and
movsl
xchg
xchg
jo
mov
clc
mov
cmpsb
jecxz
adc
mov
mov
iret
dec
or
pop
mov
adc
outsl
add
inc
xor
cmp
inc
daa
insb
xor
jp
and
cmp
xor
movsb
fists
adc
xor
cmp
lds
and
or
pop
add
mov
stos
add
add
insl
pop
aaa
add
enter
inc
add
sub
jmp
pop
push
pop
aaa
and
dec
adc
inc
arpl
jmp
add
add
dec
cwtl
inc
call
add
fimuls
jge
fists
sbbl
adc
inc
and
jecxz
or
sbbb
daa
in
test
fs
pushf
scas
sbb
sbb
rclb
add
pop
clc
test
pusha
bound
in
or
arpl
and
test
cmp
dec
clc
jle
outsb
sti
cltd
dec
jne
lea
movsl
movsl
imul
pop
pusha
xchg
add
and
push
pusha
movq
lds
adc
mov
pop
push
cmp
je
outsb
pop
adc
shlb
push
sbb
pop
mov
cmovle
fcoms
add
cmp
adc
xchg
dec
inc
push
ss
add
push
sub
ja
cmp
xorb
adc
inc
mov
nop
cmp
xchg
mov
daa
call
je
sub
aaa
repz
sub
push
inc
shll
adc
jmp
push
jno
clc
sbb
jno
add
ret
mov
or
adc
add
add
push
mov
mov
arpl
rorb
mov
in
aaa
mov
or
jmp
inc
sub
test
popa
lods
push
out
mov
stos
mov
and
adc
inc
or
and
insb
cmpsl
or
iret
out
and
popl
xchg
cmp
xor
clc
outsl
jo
nop
mov
cwtl
nop
or
jecxz
mov
push
cmp
adc
es
add
lods
pusha
inc
es
js
jl
fld
push
sti
ja
sbb
js
cmp
pushf
or
movsb
sbb
push
stos
add
xchg
je
jb
fwait
scas
jl
js
inc
jb
jb
inc
and
jo
mov
je
data16
sbb
stc
mov
faddp
pop
in
and
adc
pop
scas
push
or
iret
push
fisubl
adc
outsb
pop
dec
xchg
dec
cs
push
fadds
sbb
pop
mov
jbe
or
push
xchg
dec
mov
mov
mov
aaa
inc
and
pop
cmp
or
sarb
pop
aaa
add
and
sub
fs
pop
iret
cs
add
push
inc
xor
inc
lret
sbb
adc
dec
push
add
xchg
xchg
int
movsl
out
je
inc
je
jno
cmc
push
nop
jl
call
scas
and
add
sbb
dec
add
sti
out
jl
sarl
add
cmpsb
cmp
fsubr
add
push
push
push
pop
fdivr
sub
inc
add
fbstp
mov
mov
push
call
xchg
clc
int3
and
or
jmp
push
adc
sub
notb
jne
sub
addb
mov
mov
or
jo
or
push
push
les
add
out
push
dec
mov
outsb
add
adc
push
outsb
shrl
inc
scas
test
je
ja
cmp
fs
mov
fsubr
pop
jbe
pop
lock
mov
ret
jmp
hlt
jns
je
sbb
movsl
push
mov
dec
sbbl
cmp
sbb
fbld
sbb
stos
xor
cmp
test
bound
imul
inc
negb
adc
loopne
cmp
or
nop
je
dec
int
push
por
sbb
call
popf
xorl
or
add
addb
xchg
xor
add
lock
movsl
sarl
pop
sub
dec
test
or
mov
lds
pop
or
and
adc
or
pop
and
fidivrl
js
insb
sbb
jbe
sbb
je
xchg
lods
push
sub
lock
mov
pop
xor
pop
out
dec
adc
lods
mov
pushl
dec
push
std
pop
add
xchg
or
cmc
sbb
test
push
adc
rorl
or
cmp
mov
xchg
push
mov
add
aaa
adc
mov
inc
dec
and
jle
inc
pop
sub
fld
xor
pop
test
jo
jo
mov
pop
icebp
fldenv
sub
outsl
cltd
push
pop
outsl
test
insl
sbb
inc
cmp
andb
cli
jo
add
jmp
imul
das
mov
xor
pop
and
mov
adc
push
mov
push
clc
pop
inc
add
jge
cmp
arpl
test
xor
mov
add
or
adc
lods
popf
dec
xchg
sarl
push
nop
cwtl
mov
adcb
ljmp
ret
sbb
movsl
push
mov
cs
add
clc
addr16
mov
push
ret
dec
sub
pop
lcall
push
adc
and
jmp
mov
push
xor
lahf
shll
dec
xor
dec
cmp
sbb
push
cmp
lret
and
cmp
imul
inc
mov
jo
xor
js
sbb
aas
sub
lea
mov
std
xchg
mov
fcmovbe
inc
cli
mov
or
out
and
cmp
push
or
cli
ss
push
pop
rorb
js
jne
jae
add
aad
inc
xor
pop
mov
add
jmp
cmp
outsb
movsl
add
pushl
pop
or
pushf
das
sbb
and
xor
cs
or
fmuls
add
jmp
sbb
push
or
or
sub
jmp
sbb
xor
xor
inc
or
and
lea
mov
sub
add
lock
xlat
add
ljmp
xchg
xor
ja
mov
popf
lods
jo
into
repz
movb
jecxz
inc
lcall
sub
incb
add
jmp
sub
cmp
sub
pop
add
sbb
cwtl
dec
pusha
mov
scas
movsb
imul
push
or
xchg
push
arpl
mov
cmpsb
jmp
pop
shlb
xchg
xor
adc
imul
push
and
and
push
shl
int3
xor
pop
fiadds
jne
push
push
dec
insb
adc
je
jp
inc
rcr
test
sarl
jge
adc
add
call
cmp
cli
dec
jne
loopne
sub
sub
pop
inc
lods
and
cli
jbe
je
pusha
pop
insl
fisttps
dec
mov
rcrl
mov
jl
stos
test
cltd
sbb
push
dec
lea
gs
sbb
cmp
add
ljmp
push
sahf
pop
push
push
js
loope
incb
lcall
or
adc
add
ret
or
add
bound
push
in
les
fcmovb
xlat
addr16
sbb
sbb
in
sbb
jg
xor
ja
dec
stc
push
sahf
mov
mov
xchg
mov
push
mov
or
add
ret
push
push
sbb
mov
push
add
jo
adc
and
test
dec
mov
sub
cs
xchg
loope
xchg
cmp
fwait
adc
addl
inc
mov
rcl
movsl
rorl
js
pop
adc
xor
insb
clc
adc
jmp
dec
and
push
or
mov
inc
cmp
adc
lret
xor
inc
cvtdq2ps
push
mov
or
shlb
xchg
in
and
fwait
jne
push
adc
sub
or
mov
cltd
or
mov
out
and
add
add
pop
adcb
ret
mov
aam
push
add
mov
mov
push
and
push
mov
inc
js
push
outsb
inc
cmp
or
leave
je
pop
aaa
lock
insl
mov
xor
add
arpl
sub
adc
dec
fdivrs
scas
ret
or
or
pushf
movsb
mov
cmpsb
push
lcall
mov
push
cmp
outsl
dec
ret
or
dec
idivl
xchg
sub
add
sbbb
in
out
and
and
or
mov
test
adc
inc
sub
add
cmpl
and
jo
je
inc
dec
cmp
mov
cmpb
mov
insb
add
or
add
stos
hlt
lea
pushf
rorb
lods
push
or
or
rorb
jb
xor
xchg
inc
lea
inc
jecxz
mov
arpl
push
daa
or
mov
aam
push
lea
daa
and
cmp
mov
jno
mov
jae
lea
test
inc
negl
mov
insl
rcr
movsb
hlt
mov
add
dec
dec
add
or
ret
data16
test
sahf
xlat
pop
nop
ret
dec
inc
dec
dec
dec
call
out
xchg
push
movsb
sbb
jbe
add
pop
or
sbb
adc
fs
adc
or
sahf
ret
movb
decb
sub
xor
inc
xchg
into
inc
mov
testb
and
test
orl
or
push
sbb
mov
add
std
pop
and
push
aas
adc
pop
mov
aam
popl
mov
test
push
loopne
xchg
add
mov
inc
xor
les
cmp
mov
and
mov
aam
push
push
inc
add
mov
popa
push
vcvttsd2si
jmp
dec
or
test
int3
mov
rol
mov
rcl
adc
dec
cs
lcall
fnstcw
mov
inc
loopne
or
push
loope
mov
cmp
mov
rclb
adc
nop
mov
scas
mov
adcl
xchg
sarb
pop
cmp
cmp
in
pop
in
cmp
pop
loop
xor
mov
sbb
fisubl
pusha
inc
insb
insb
je
add
mov
mov
pop
jae
loope
add
pop
loop
mov
mov
jmp
xor
fwait
and
jne
add
aam
inc
je
in
cmp
lcall
or
sbb
aas
in
and
outsl
dec
popf
jmp
dec
mov
xchg
add
jae
aaa
jmp
ja
inc
paddusb
mov
mov
jle
mov
out
jo
mov
xor
fsubrl
inc
pop
loopne
rol
push
push
xor
xchg
add
push
les
ret
mov
mov
les
stc
popa
mov
xchg
and
aas
pop
push
ja
add
fdivr
orl
daa
cmpsl
fs
lock
xor
outsb
imul
jle
aam
jg
icebp
and
jmp
stos
xor
mov
adc
inc
popa
arpl
dec
or
pushf
lea
les
sub
xchg
in
rcll
cmp
ss
mov
pop
sub
inc
js
sbb
enter
jne
sub
and
and
cs
mov
test
dec
xor
fwait
xor
push
in
inc
push
movsb
push
xor
stc
test
adc
xchg
and
inc
call
inc
cmp
or
insl
xchg
and
ds
insl
pusha
call
out
scas
stc
dec
faddl
push
cmp
test
xchg
inc
pop
adc
cmp
pop
loopne
add
ljmp
inc
fiadds
aam
ror
mov
mov
insl
sarb
mov
les
daa
stos
stos
sbb
push
xlat
inc
xchg
jbe
and
in
lret
cmp
add
add
fwait
adc
cmp
fidivrl
and
int3
cmp
ds
call
xor
repz
inc
scas
roll
fisubrs
sub
adc
das
sub
add
adc
data16
repnz
dec
jecxz
and
add
mov
dec
sti
inc
lret
lods
ficompl
call
xor
mov
xchg
and
inc
push
fisttps
inc
pop
jg
insb
add
lret
mov
and
dec
lds
mov
and
mov
cmp
and
and
sbb
lret
mov
in
cmc
inc
or
cltd
and
sub
inc
pop
aas
pushf
add
cs
aad
daa
inc
inc
inc
cwtl
pop
mov
mov
add
sub
lods
shll
xor
popa
add
xchg
or
xchg
inc
xor
arpl
hlt
fstpt
mov
aaa
addb
push
inc
push
fimuls
test
inc
xchg
pusha
stos
call
jne
mov
lret
nop
test
sbb
mov
incb
push
add
xor
xor
outsl
jp
mov
push
adcl
sbb
movd
push
jg
not
pop
fdivs
mov
popf
inc
add
push
lods
loope
mov
adc
insl
jge
push
aaa
lea
cmp
and
mov
mov
jns
js
add
loopne
mov
scas
nop
push
pop
add
push
xor
std
push
cmp
int3
shlb
or
in
psubsb
and
in
bound
fadds
mov
xchg
pop
pop
pop
and
or
or
loope
imul
hlt
jge
jle
inc
setle
cmpsl
mov
cmp
jge
orb
mov
jmp
sub
dec
push
divb
fidivrl
lds
xchg
addr16
pop
cmc
fucomp
sub
sub
mov
cmpsb
cmp
ss
sbb
xchg
and
pop
sar
cwtl
or
add
and
xor
mov
mull
mov
bound
push
or
lea
insb
aaa
mov
cmpb
in
dec
popa
add
mov
movsl
dec
xorb
mov
cmp
inc
xchg
or
repnz
cmp
pushf
ss
xchg
or
outsb
or
inc
or
sbb
sbb
or
cmp
repnz
push
mov
test
push
aas
or
jae
es
dec
mov
push
sbb
add
sbb
adc
vpalignr
loop
jmp
cmp
jnp
shrb
sbb
jo
lcall
sub
cld
clc
mull
jp
lret
mov
cmp
sub
sbb
push
adc
xchg
aam
push
or
adc
inc
sub
fisttpl
dec
or
lods
xor
lahf
mov
jl
rcr
sub
xchg
mov
mov
ss
in
pop
repz
inc
add
sbb
mov
fcmovne
aam
pusha
push
pop
stos
jge
movsb
cmpb
dec
sbb
shll
ja
out
sarb
add
xchg
loope
pop
jne
or
loop
mov
sbb
test
push
mov
ss
push
dec
mov
pop
sub
pop
pop
repnz
hlt
add
fsubrp
push
loopne
outsl
add
add
sub
inc
jg
hlt
cmp
ss
xor
and
fisubrs
jle
popf
insl
cmpsl
xlat
ja
rorb
xor
jbe
pop
dec
pusha
popa
pusha
loopne
mov
or
ds
stos
push
xchg
stc
cmp
xor
and
andb
or
jmp
push
pop
jno
mov
xchg
loope
or
sub
sub
dec
subl
push
subl
or
rcr
sarl
xchg
rcrb
movb
and
mov
das
sbb
and
jbe
pop
adc
xor
cmp
mov
movb
movsl
xchg
xor
pop
insl
xorb
sbb
or
shrl
out
mov
dec
js
imul
or
mov
ret
sbb
inc
test
rolb
mov
testb
mov
inc
fiaddl
mov
cmp
dec
lahf
add
ret
cmp
ss
or
jne
lods
or
sbb
xor
sub
and
jecxz
mov
sbb
adc
add
jns
cmp
push
hlt
pop
sbb
and
into
in
imul
adc
add
mov
mov
cmp
cmp
rorl
ret
arpl
outsl
les
mov
mov
and
je
mov
push
int3
push
sbb
mov
add
add
push
mov
push
push
sbb
pusha
repz
imul
sbb
aam
dec
sbb
loopne
cmc
sbb
xor
shlb
test
mov
xchg
ret
sbb
inc
adc
rorb
lods
jne
js
test
bound
cmp
movsl
mov
and
sub
arpl
push
sub
inc
les
popf
lea
xchg
add
imul
sub
aas
test
movl
mov
in
mov
and
roll
inc
pop
sub
push
in
sar
mov
testb
lret
ljmp
dec
jo
and
icebp
cld
andb
or
dec
and
leave
add
xchg
inc
push
push
push
loope
roll
popa
cmp
xor
rorb
mov
mov
push
test
les
sti
in
inc
insb
movsb
popa
out
or
in
jg
adc
xlat
push
push
xchg
scas
xor
push
mov
insb
gs
ret
mov
dec
pop
or
in
push
lods
and
and
loop
ret
adc
test
and
sbb
or
mov
rclb
add
jae
lea
das
subb
add
addl
push
cmpsb
dec
pusha
push
jae
into
pop
sub
xchg
mov
test
add
ljmp
jb
xchg
int3
xchg
nop
jle
dec
mov
das
movsb
sbb
int3
icebp
pop
roll
fdivs
imul
add
gs
and
pushf
mov
or
cmp
add
jb
push
lret
pop
dec
dec
test
jmp
jp
addb
push
inc
inc
jne
jnp
fidivrl
leave
jne
pop
push
dec
and
cli
or
add
and
mov
xchg
add
ret
or
rol
or
ret
js
sbb
mov
inc
inc
mov
sbb
or
daa
mov
inc
push
push
dec
push
call
mov
dec
sub
je
jbe
inc
mov
and
jp
xchg
icebp
cmpsl
loopne
loope
mov
or
push
cmp
subb
mov
test
sub
outsl
add
cmp
dec
cmpl
mov
ret
or
push
cmp
jne
in
ret
clc
mov
adc
cmp
push
and
adc
sbb
imul
add
push
rol
stc
mov
add
xchg
add
jl
push
lahf
add
hlt
xor
in
scas
adc
inc
dec
or
add
or
loopne
mov
add
or
das
pop
add
xchg
add
pop
scas
imul
cmp
add
inc
jno
aaa
subl
push
push
add
and
sub
xchg
jle
outsb
and
xchg
sbb
imul
inc
fstpl
cmp
mov
sub
aam
rclb
movsb
test
pop
pusha
test
outsl
cltd
xor
in
or
and
mov
add
jecxz
inc
hlt
loopne
inc
imul
ja
add
inc
lods
jne
cmp
push
arpl
insb
int3
sbb
ja
cltd
ja
mov
mov
popa
or
pop
insb
push
or
lds
push
popf
rcl
mov
adc
sub
js
daa
push
sbb
adc
add
mov
mov
pop
ja
jae
cmovae
imul
jo
mov
pop
scas
orl
jp
mov
das
sub
cmpl
add
pusha
data16
es
out
push
add
popa
xchg
loopne
inc
xor
scas
movsl
icebp
sahf
cmp
fistpl
mov
add
or
sub
std
test
push
jne
xchg
lahf
emms
inc
adc
pop
lea
add
jl
cmp
mov
movl
sbb
push
push
lds
cmp
xchg
sti
push
daa
subl
addb
mov
mov
movsl
add
ljmp
ret
mov
out
add
push
pop
mov
cmp
push
lock
xor
fs
rorl
cvtps2pi
fdivl
and
xchg
repnz
push
and
xchg
ret
lods
test
test
lds
lods
mov
test
insb
ljmp
pop
repz
mov
mov
add
movsl
push
xchg
pop
push
filds
xor
pop
dec
into
sub
pop
sbb
rcrb
mov
sbb
lea
je
add
andb
lock
sub
sbb
add
loopne
test
mov
jne
jl
and
dec
and
pop
and
test
js
insl
imul
sar
mov
clc
jge,pn
mov
sub
or
lock
dec
push
add
cmp
je
jb
pop
lahf
in
mov
sub
inc
loope
idivl
pop
popa
call
sub
mov
lock
leave
inc
inc
call
scas
in
mov
fiadds
gs
imull
movsb
mov
lgs
adc
and
sbb
or
pop
inc
sbb
mov
daa
push
nop
xor
push
stos
mov
inc
pop
into
out
adc
or
loopne
inc
push
shrl
outsl
mov
push
mov
js
xor
fld
xchg
dec
dec
nop
pop
push
popf
js
rol
ret
push
into
push
lock
icebp
lods
fisubs
cvtpi2ps
cmp
push
gs
push
mov
inc
or
pop
lods
leave
jl
push
lcall
push
dec
mov
mov
cmp
movsl
push
pop
sub
mov
add
dec
movsb
popaw
es
daa
pop
mov
or
ret
aas
jmp
rolb
cs
push
std
sbb
xchg
outsb
xor
pop
pop
sub
sub
gs
ud1
pop
mov
andl
adc
nop
int
test
repnz
and
test
xor
test
cmp
and
mov
dec
in
insl
shlb
xchg
push
movsb
sub
add
lea
js
sbb
cmp
cmpb
je
pop
push
push
or
in
test
negb
fists
sub
push
or
adc
gs
mov
xchg
mov
das
dec
ljmp
push
clc
dec
ret
pop
adc
or
je
jge
adc
fcoml
push
and
fists
mov
sub
fildl
lods
push
cmp
push
out
or
inc
in
and
add
popf
and
nop
sub
or
fstpt
cmc
xchg
fists
adc
outsl
nop
add
pusha
int
xor
mov
lea
lea
sub
add
pop
rcrb
icebp
stos
ds
sub
jbe
mov
inc
cmp
mov
push
add
je
sbb
les
arpl
jg
or
pusha
test
mov
xor
cs
cmp
std
je
test
aaa
pop
test
movsl
add
andl
sbb
xorb
or
setle
mov
mov
push
cmpsb
orl
imul
mov
mov
dec
jnp
dec
mov
mov
rcll
notb
fnstcw
adc
fisttps
adc
loopne
fcoms
jne
ret
xor
sahf
je
loop
cmp
xor
pop
jle
cs
xchg
inc
out
test
jae
mov
je
fdivr
out
add
cmp
sub
cld
push
nop
cmp
jg
mov
mov
jo
add
hlt
jge
ds
fiaddl
or
loopne
mov
lock
mov
testl
xchg
adc
daa
jnp
adc
pop
or
push
jno
les
or
pop
movb
shlb
mov
shlb
dec
inc
fs
popf
movsb
pop
mov
inc
ljmp
inc
loop
inc
pop
xor
insb
pop
or
pop
xor
int3
rclb
les
push
fldl
rcl
nop
out
fmul
ret
add
les
ja
pop
cmp
je
push
fld
fs
inc
mull
add
add
adc
shll
cmp
pop
mov
fcmovnb
aas
and
mov
pop
stos
insb
ret
mov
sub
push
mov
pop
xchg
je
dec
fstpt
add
enter
pushw
add
add
imul
dec
dec
scas
push
sbb
and
pop
mov
and
hlt
fidivs
jnp
dec
xor
pop
xchg
and
or
jmp
cmpl
repz
faddl
mov
out
push
popf
sbb
repnz
out
adc
sub
clc
sbb
mov
sub
andb
jle
jl
test
mov
mov
les
insb
addr16
push
imul
jo
sbb
push
adc
push
add
pop
pop
push
scas
divb
cmp
xchg
out
cmp
push
xor
xor
sahf
xchg
dec
sub
sub
out
cmp
and
jns
sahf
sbb
sbb
iret
dec
repz
loopne
and
and
pushf
cmp
fcomps
sbb
nop
push
pusha
pop
sahf
fnsave
xchg
test
jle
mov
call
sub
jns
add
mov
jp
jbe
hlt
sahf
enter
test
cmp
inc
cmpsl
gs
out
les
fs
mov
jmp
mov
dec
gs
jbe
or
adc
inc
or
das
push
shrb
sbb
out
es
xor
push
nop
xor
push
adc
pop
push
out
push
pop
dec
sbbb
sbb
sti
and
movsb
in
or
or
addl
and
fldl
push
xchg
cmp
ds
repnz
xchg
sbb
sbb
ss
mov
and
mov
sub
dec
nop
and
xchg
pop
adc
xor
sub
sub
sub
je
cmpsl
stos
sarb
xchg
inc
mull
enter
fwait
sbb
dec
or
inc
dec
push
dec
fstl
pop
or
les
xchg
mov
testb
mov
rcr
out
insl
jo
push
cmovnp
pop
add
mov
rorb
es
mov
sbb
lret
clc
add
push
mov
adc
push
popa
insb
xchg
add
mov
sbb
shrl
push
pop
xlat
ss
mov
pop
sbb
fstl
ds
dec
shrb
add
xor
or
imul
push
dec
xor
lock
add
ja
loope
dec
ds
pop
jb
inc
int
int3
add
add
lock
test
pop
push
push
add
sahf
push
inc
jae
adc
nop
lods
pop
aam
movhps
push
adc
push
push
sbb
and
inc
add
inc
sysenter
loop
xchg
bswap
into
daa
mov
jb
dec
pop
clc
add
and
mull
push
push
comiss
sub
daa
xor
pop
loopne
aaa
cmpb
sbb
movsl
cmpsb
adc
push
std
rcll
sub
movl
add
scas
rolb
ds
ret
pop
clc
sbb
pop
push
xor
push
mov
pushf
push
push
push
movsb
mov
dec
loope
push
push
pushf
sub
or
clc
or
or
andl
mov
out
sbb
addr16
addr16
pop
dec
stc
cs
imul
pop
sub
add
std
mov
negb
sub
dec
ja
mov
rep
subb
je
pop
test
imul
imul
inc
or
cmp
out
jae
popa
nop
mov
inc
mov
sbb
cmp
pushl
in
mov
insl
push
pop
xor
cmp
or
dec
ja
fsubl
pop
pop
lock
push
sub
scas
in
adc
push
mov
iret
pop
xor
insl
sbb
adc
xor
sbb
movsl
add
xchg
test
xchg
je
or
push
or
dec
cmp
lret
lea
add
testb
out
decl
inc
lea
out
or
sbb
xchg
or
push
arpl
cltd
loop
sbb
imul
pusha
mov
movsb
insl
jno
pop
je
sub
outsb
push
iret
add
and
movsl
les
xchg
xchg
add
sbb
adc
out
fs
xchg
add
add
and
push
push
roll
mov
repnz
jecxz
pop
or
and
or
adc
cmp
sbb
movsb
fisttps
int3
xchg
cmp
add
out
les
push
mull
cwtl
lock
or
lods
nop
xor
jle
push
lahf
sbb
movsb
inc
adc
add
push
adcl
lds
mov
cmpsl
inc
imul
jae
jmp
and
mov
gs
or
sbb
popf
jge
add
mov
movsb
jmp
mov
addr16
call
adc
out
inc
loopne
or
imul
loopne
inc
add
push
mov
adc
andl
add
cmp
jns
xorb
ljmp
add
or
sbb
adc
push
mov
mov
xchg
cltd
xor
push
add
mov
adc
rolb
and
adc
js
pop
adc
sub
cmp
or
push
and
mov
mov
xor
lock
pop
mov
lret
adc
movb
add
or
test
shlb
sub
ficomps
cmp
dec
clc
aam
pop
mov
mov
mull
in
jo
ret
testl
pop
ja
aaa
fcmovnu
incb
mov
add
add
add
add
outsb
inc
filds
add
cld
or
or
or
push
pop
into
and
adc
cmp
push
ret
push
cmp
xchg
ljmp
jmp
ret
xor
in
in
jecxz
loop
loope
loopne
mov
fdivr
fcos
fdivr
xlat
mov
xor
insl
loopne
xor
sar
iret
sbb
inc
lea
xchg
dec
fstpt
push
lock
inc
inc
push
cld
sbb
jnp
push
call
iret
shrl
push
dec
push
ds
repz
pop
shlb
jno
imul
mov
test
pusha
in
push
lods
dec
int
mov
sub
ds
clc
fdivs
jnp
out
je,pt
es
mov
sti
xor
hlt
push
jl
pop
or
out
add
or
dec
pop
es
inc
aas
mov
push
test
test
in
and
push
cmp
addr16
mov
dec
cmp
xor
out
mov
push
jne
mov
add
add
pop
sbb
or
test
test
xchg
aad
pop
xchg
xchg
push
popf
addb
lods
or
mov
shll
jle
jb
sub
imul
pop
adc
dec
dec
gs
push
push
add
mov
sub
ja
xchg
mov
push
inc
lcall
mov
sbb
or
rolb
test
or
ret
jbe
jne
sub
sahf
xor
and
orb
push
and
leave
or
xor
and
push
insb
std
movb
ret
mov
sbb
call
sahf
imul
pop
stos
cmp
xor
cld
jl
adc
and
inc
add
push
iret
xchg
lods
or
aaa
loope
add
pop
add
notb
dec
add
xor
sbb
adc
dec
inc
add
cmp
sub
add
aam
adc
inc
inc
add
fiaddl
add
das
call
mov
test
adc
sbb
mov
or
add
aaa
xchg
push
js
test
jl
or
dec
adc
xor
incl
push
sarb
and
mov
pushl
add
sub
xor
cmp
xorb
sub
lret
dec
dec
dec
xor
pop
sub
les
test
sbb
ds
mov
xchg
xor
insb
repz
push
subb
mov
out
lcall
test
hlt
mov
add
cmp
xor
dec
enter
jp
mov
sahf
jnp
push
xor
test
mov
push
hlt
push
sbb
jnp
mov
enter
push
int
cmp
xchg
mov
sarb
repz
fsub
in
inc
cmpb
imul
out
mov
adc
push
mov
jo
push
call
adc
and
addr16
iret
hlt
pop
jl,pn
into
cmp
out
popf
js
fsubs
xchg
xchg
lea
mov
xchg
mov
out
mov
ss
inc
jge
sub
mov
sti
xor
insb
add
push
in
jns
sti
fidivrs
or
sbb
je
idivb
insb
data16
es
pop
sahf
pop
test
dec
pop
add
shlb
sub
loopne
or
pop
add
mov
mov
loopne
push
cmp
out
push
pop
call
ja
pop
test
add
mov
int
mov
sub
xchg
ja
and
icebp
clc
cmc
scas
testb
mov
cmp
je
aaa
xchg
in
cmpsb
les
xchg
sbb
pop
pop
sub
test
pop
push
fimull
dec
aam
in
mov
cmpsl
or
and
bswap
push
cld
mov
push
sahf
jbe
adc
mov
inc
repz
push
fdivrl
dec
adc
mov
lds
xchg
je
les
push
les
mov
daa
imul
or
mov
out
push
adc
mov
add
fsub
jp
out
cmp
scas
pop
add
call
jle
adcl
or
add
and
decb
add
adc
sbbb
pop
jg
sub
rorb
insb
xor
adc
lods
jbe
je
dec
inc
sub
add
xchg
scas
adc
inc
jns
cmp
cwtl
jl
add
or
push
fs
xor
in
lds
hlt
outsl
dec
adc
call
mov
adc
jb
or
push
pop
add
cmp
fcmovb
dec
test
movsb
add
push
pop
or
and
ss
adc
dec
or
fnstenv
sub
or
sti
inc
xor
rorb
add
outsb
lcall
add
jmp
psubsb
leave
cmp
aam
or
fcompl
or
orb
adc
mov
sbb
push
or
pushf
cs
xchg
pop
xor
mov
fsubs
push
in
pop
gs
jne
sahf
out
orb
pushf
out
sarb
fisubrl
je
pushf
cld
sbb
js
push
push
out
js
pop
mov
inc
push
inc
push
pop
jno
push
mov
lods
orb
rolb
dec
scas
pop
aam
int
mov
mov
in
test
popa
and
inc
out
push
xchg
test
mov
lahf
aas
mov
fldl
out
movsb
int
push
pop
add
inc
in
mov
jne
sub
mov
xor
ss
lea
mov
fsts
xchg
roll
arpl
inc
fldl
or
xchg
or
mov
add
and
sbb
jecxz
cmp
and
sub
jbe
shr
push
sub
or
nop
pop
mov
add
popa
pop
sbb
repnz
mov
xlat
mov
ret
sbb
mov
push
push
sub
rcrl
jb
test
add
sub
scas
ja
sub
xor
inc
mov
rcrb
fisubrl
or
dec
push
fisubl
orb
inc
loopne
js
push
xchg
daa
push
jo
or
add
or
inc
insb
in
and
insb
xchg
add
dec
outsl
sbb
dec
push
pusha
je
push
fidivs
xchg
or
sub
rcpps
push
popa
push
movl
and
sub
lods
mov
cmp
mov
mov
mov
xor
and
push
adc
lods
ret
pop
mov
call
mov
xor
sub
adc
add
nop
and
add
adc
fs
cmpb
adc
gs
and
cmc
mov
adc
add
mov
mov
cmpsb
inc
pusha
or
xchg
jb
es
mov
xchg
in
pop
jbe
jne
add
inc
add
dec
xorb
or
testb
jp
mov
test
push
or
or
mov
xchg
int3
adc
add
cmp
jl
outsb
or
insl
push
jge
fmuls
mov
or
clc
dec
lods
mov
mov
pop
out
sbbb
icebp
xorl
or
add
lret
pop
adc
mov
fstps
shrb
push
dec
gs
inc
test
xchg
sbb
fcoml
dec
loope
dec
mov
in
test
sub
add
push
xchg
inc
mov
dec
jne
arpl
cmp
cmp
add
push
es
pop
sub
sub
and
add
push
or
inc
dec
mov
pop
cmpsl
aam
mov
pop
leave
dec
shll
adc
xor
shll
adc
sbb
shll
sub
adc
pop
dec
sub
scas
push
push
fs
sub
pop
inc
and
cmpb
mov
imul
lcall
mov
nop
push
fisubl
mov
in
inc
xchg
mov
aaa
push
mov
leave
add
add
adc
je
sub
int
mov
je
lods
repz
sub
push
dec
je
ja
push
pop
iret
xchg
out
cs
xor
std
adc
push
test
outsl
add
dec
mov
adc
sarb
test
jne
mov
xchg
subb
pop
inc
clc
or
xchg
sbb
les
push
insl
xchg
xchg
xor
mov
inc
addb
mov
or
ficoms
notb
mov
or
xchg
dec
shl
incl
dec
fs
sub
jmp
adc
sbb
loopne
fwait
add
repnz
jne
js
je
loopne
xor
xor
clc
inc
cmp
mov
scas
in
loope
jne
push
push
push
xlat
mov
xchg
pop
rcrl
inc
xor
or
xchg
pusha
jnp
jbe
jo
lahf
or
insb
inc
xchg
subb
sub
adc
push
sbb
cmpsb
pop
dec
xchg
popa
mov
pushf
addb
push
xor
and
jae
mov
jo
mov
cmpsb
xchg
pop
stos
mov
mov
in
pushf
push
push
stc
hlt
js
loope
aas
rcrl
push
push
cld
fwait
jbe
adc
insb
push
lea
lea
and
fldt
sbb
pop
xor
inc
testl
aas
pop
popa
adc
inc
pop
das
and
or
adc
dec
adc
subb
shll
call
enter
sub
cmp
outsl
out
sub
js
xor
inc
push
inc
adc
stc
or
adc
rcl
call
fcoms
ficoms
loopne
adc
repz
aad
push
jbe
xchg
pop
jb
daa
ffreep
xor
push
and
mov
cmp
lods
sub
xor
inc
mov
adc
lods
cmpsb
add
push
add
add
pop
jg
mov
xchg
add
jb
outsb
pusha
movb
jmp
cmp
popa
jecxz
jne
sbb
dec
jns
ret
in
xchg
fistpl
xchg
xlat
les
pop
scas
dec
cmpsb
or
faddl
mov
xchg
or
cmp
push
in
sti
pop
stos
movsb
icebp
add
dec
sbb
jecxz
cmp
in
shrl
mov
fstps
inc
stos
add
add
add
popf
sbb
fsubs
fucomi
sub
adc
loop
rcrb
add
add
insl
lods
pusha
loop
push
movsb
jo
ss
shrb
pop
inc
sti
orb
jnp
xor
cmp
mov
push
or
dec
mov
xchg
lock
push
pop
scas
xor
inc
cmc
aam
loop
sub
ret
imul
je
and
adc
cs
shlb
sbb
push
adc
xor
or
and
mov
in
fbstp
xchg
mov
ret
mov
add
push
dec
xor
sbb
inc
pusha
orl
sbb
ret
or
lods
and
or
in
ja
lods
lea
mov
xor
fwait
in
add
xor
xchg
pusha
test
out
push
sbb
push
xor
add
lcall
jle
daa
popa
pop
cmp
cmpsl
decl
add
lds
sbb
and
or
or
and
push
inc
dec
lods
js
sti
insb
mov
cmp
cmp
xor
adc
roll
sbbl
ss
call
popa
adc
lock
xchg
mov
orl
and
rcll
pop
push
and
push
add
cld
dec
or
mov
sbb
add
sbb
dec
ss
cmp
cmpb
pop
add
mov
mov
add
push
loope
xor
pop
bound
jl
sub
sti
adc
mov
jl
pop
mov
movsb
adc
mov
loopne
and
jmp
insl
imul
ror
push
addb
or
dec
lret
outsb
push
push
stc
mov
push
ret
xchg
inc
clc
je
adcb
jle
and
or
lods
mov
pop
fmul
mov
jo
jl
mov
jmp
cmpl
sub
jo
in
decb
jbe
aas
test
sbb
je
out
ds
fmuls
out
mov
jbe
rclb
lcall
or
push
in
xchg
fistps
dec
sub
push
mov
sti
or
pushf
sbb
mov
sub
dec
shll
clc
mov
or
adc
out
in
jne
fld
es
jmp
jecxz
push
dec
cs
push
mov
lea
lea
shrl
add
jmp
pcmpgtd
xor
sti
cmp
xchg
hlt
pop
add
dec
paddb
int3
ja
cwtl
cmp
cmp
jp
lcall
cmp
xor
insl
mov
cmc
pop
mov
mov
lahf
jo
and
push
adc
clts
xchg
adc
in
and
sbb
push
inc
adc
or
pusha
and
push
ds
and
xchg
incb
js
pusha
mov
push
inc
jmp
mov
xor
dec
and
xor
xchg
cli
int3
movswl
pop
aad
sub
loopne
inc
or
push
addb
cmp
fsubl
jl
cmp
push
imul
loope
rorb
mov
and
and
dec
cmpsl
dec
mov
add
add
movsb
cmp
sub
pop
js
xor
adc
lods
les
loopne,pt
xchg
daa
stc
add
out
pop
cmp
jns
sub
pop
sbb
xor
dec
sbb
mov
mov
cmp
xchg
mov
fdivrl
xor
xchg
sub
inc
pop
rcr
add
adc
dec
call
add
jb
stc
fstpl
fwait
dec
cmp
jmp
mov
add
je
shlb
sub
mov
mov
or
cli
imul
and
insb
mov
sub
cmpsb
outsl
sbb
addb
or
sbb
and
or
sub
mov
sub
stos
push
cwtl
incb
push
mov
xchg
incl
or
loopne
sahf
jl
pop
sbb
adc
js
mov
sbb
ss
ljmp
mov
ja
xor
adc
jae
movb
xor
pusha
negl
jb
dec
add
xchg
in
sbb
call
inc
ljmp
dec
or
enter
fstps
sub
sbb
movsl
dec
sbb
call
dec
cmp
lahf
and
sub
loopne
dec
inc
shll
push
call
in
push
push
dec
sub
imul
add
add
jb
inc
cmp
push
outsb
sbb
pop
pop
mov
loopne
adc
add
lods
dec
repz
orl
cmp
dec
mov
out
push
sbb
mov
mov
sub
xor
xlat
jle
xor
ret
jne
add
add
add
and
xor
or
sub
mov
clc
mov
and
and
or
rcll
adc
add
in
sub
loopne
xor
xchg
adc
jle
xor
bound
push
xchg
sahf
lret
insl
jmp
and
xchg
or
jecxz
pop
aam
xor
enter
and
sbb
or
arpl
cmc
mov
outsl
je
ret
dec
in
adc
or
push
cmp
cld
xchg
push
lock
cmp
cmp
xor
pusha
popa
sbb
or
icebp
add
or
and
add
popf
pop
pop
adc
inc
mov
sbb
in
add
addr16
adc
mov
or
pop
push
icebp
add
std
or
ret
sbb
adc
or
mov
dec
pop
cmp
popa
into
lods
dec
loop
and
lock
sbb
pop
lock
aam
cmp
fwait
or
rcll
popa
inc
jb
dec
xor
test
lahf
xchg
ret
xchg
xlat
imul
mov
jne
daa
or
movsb
testb
dec
rol
out
xchg
imul
xor
cmc
pop
lret
adc
mov
dec
xchg
adc
ret
sbb
sub
xchg
cmpsb
aam
add
je
lea
push
lret
push
xchg
or
push
pop
lcall
pop
loopne
fisttpll
push
or
inc
test
jge
inc
mov
push
movb
pop
inc
sub
cmpsb
outsb
insb
hlt
lods
leave
mov
sub
jnp
scas
xchg
mov
or
xor
dec
mov
inc
cmp
mov
jo
dec
mov
in
test
ja
pop
sbb
mov
insl
adc
cmp
adc
popa
sbb
testl
inc
cwtl
pop
lock
sarb
jmp
gs
sub
sbb
cmp
jl
pop
cltd
fs
daa
pop
sub
cmp
adc
and
ss
repnz
and
sub
test
rcrb
adc
in
aas
xchg
fcmovb
mov
addl
push
mov
cmp
sbb
mov
mov
rcrb
pop
pop
pop
and
dec
movsb
out
dec
sbb
jg
adc
dec
and
sub
sbb
and
fisubs
push
or
adc
mov
sub
std
dec
sbb
jg
or
push
mov
mov
fstpt
dec
or
push
add
mov
test
jbe
push
roll
lretw
xchg
sub
or
call
gs
dec
adc
je
sub
jbe
cmp
inc
or
xchg
mov
jb
sbb
or
es
sbb
or
mov
dec
adc
loope
jge
imul
adc
sbb
mov
inc
adc
imul
adc
pop
sbb
pop
adc
push
cmp
push
sub
or
test
push
mov
inc
into
cmp
push
dec
in
or
jmp
pop
inc
cmpsb
jb
clc
mov
loop
mov
xor
test
or
and
stos
push
inc
popa
sub
daa
arpl
xor
in
mov
inc
mov
sbb
push
add
mov
lods
pop
sbb
mov
pop
push
xchg
xor
icebp
imul
or
mov
mov
push
pop
pop
adc
push
xchg
and
inc
or
or
scas
xchg
sub
repz
test
xchg
sbb
xor
loope
arpl
pop
and
mov
mov
fs
popf
adc
ss
mov
lods
inc
rclb
incl
xorb
cmp
cli
xor
add
mov
inc
inc
add
mov
sub
inc
or
add
push
jmp
addl
mov
test
in
aad
and
aam
xor
scas
sti
cmpsb
xchg
mov
aam
std
cmp
aam
mov
pusha
pop
add
ret
ds
sub
leave
mov
mov
or
pop
movsb
sub
sbb
and
mov
mov
arpl
pop
fs
pop
sti
iret
dec
pmuludq
pusha
add
orb
or
and
orl
pusha
repnz
lock
inc
pop
mov
jle
pop
jno
dec
rolb
inc
pop
dec
mov
daa
adc
push
xor
cmpsb
mov
loope
fnsave
inc
pop
mov
in
push
aaa
push
cmp
lock
loope
test
push
insb
add
pop
inc
mov
aas
adc
clc
mov
jecxz
and
sbb
sbb
push
sbb
push
ja
mov
inc
decl
inc
cltd
enter
cmpl
ficomps
sahf
or
loopne
inc
add
dec
and
data16
orb
push
lahf
adc
decl
fadd
imul
rolb
andb
scas
loop
in
sbb
adc
popl
leave
inc
aas
xlat
xor
outsb
and
push
arpl
push
adc
add
or
cs
mov
cs
in
cmp
and
and
jle
sbb
jmp
adc
and
xchg
sbb
leave
les
dec
lock
push
dec
cwtl
mov
addr16
xor
fld
adc
dec
into
mov
setb
jb
call
cmp
jne
mov
cld
arpl
and
add
jo
cmp
add
sbb
pop
push
xor
dec
or
or
or
inc
lods
lret
fcmovne
mov
dec
loopne
pop
aaa
pop
push
xor
jns
push
mov
cmp
dec
shlb
mov
lods
jne
push
or
imul
pop
xchg
push
inc
push
and
dec
mov
xlat
into
cmp
mov
or
es
cmpsb
xchg
mov
adcl
cmp
xchg
incb
or
js
mov
xor
icebp
or
or
ret
xchg
clc
and
adc
jbe
repnz
js
sbb
xor
and
pop
movsl
test
xor
adc
and
add
dec
pop
inc
inc
or
inc
and
add
mov
ja
adc
mov
pop
cmp
inc
popa
rclb
add
sbb
cmp
dec
dec
aas
dec
add
mov
inc
add
scas
or
inc
add
push
pop
insb
aad
or
rcrl
sub
scas
adc
mov
inc
adc
push
or
cvtps2pi
push
and
adc
jb
lods
ds
xchg
fs
mov
ss
addw
outsb
repnz
and
dec
mov
cmp
loope
lock
clc
dec
and
mov
push
dec
addl
mov
mov
cmp
ret
pop
aaa
adc
testl
sti
out
int3
cmp
or
jno
rcl
pop
or
push
ret
sbb
notb
xlat
sbb
jmp
adc
stos
inc
add
adc
push
addr16
mov
adc
dec
cmp
mov
cmp
daa
sbb
sub
cs
jp
inc
sbb
and
mov
push
push
subl
imul
into
lock
inc
arpl
sub
dec
movsl
add
loop
cwtl
pop
das
aaa
orb
cmp
and
nop
scas
dec
push
ret
pop
hlt
pop
mov
inc
or
fs
loopne
adc
adcb
inc
and
add
dec
mov
lahf
pop
and
push
add
pop
test
es
add
mov
dec
enter
das
sub
adc
push
mov
jne
test
sbb
dec
pop
hlt
mov
inc
add
xchg
cmpl
sub
inc
add
or
adc
and
lods
ds
imul
lret
mov
or
or
or
mov
inc
aam
ret
sbb
fistl
hlt
cmp
add
or
adc
jnp
hlt
lods
push
ljmp
sbb
icebp
add
push
ret
or
adc
adc
outsb
xor
xor
push
inc
mov
jmp
sbb
nop
out
in
add
cmp
sbb
sub
mov
in
xor
daa
xchg
ucomiss
loopne
push
inc
xchg
iret
out
jo
out
ret
aaa
imul
pop
movl
dec
adc
int3
aad
sbb
popa
mov
or
pop
call
fstps
add
loope
adc
push
arpl
xchg
es
pop
dec
cmp
xorb
lods
push
pop
loopne
dec
xchg
call
testb
je
or
ret
mov
add
jae
inc
or
subb
cmp
out
xor
mov
ja
les
xchg
or
mov
pop
loop
adc
push
xor
inc
dec
call
shrb
sarl
sub
adc
xor
aad
lock
stc
je
add
int3
fdivr
dec
cmp
leave
mov
hlt
bound
addb
dec
pusha
adc
xchg
sbb
gs
mov
fwait
rol
mov
arpl
inc
xor
es
sub
xchg
mov
push
je
mov
mov
push
lock
pop
repnz
pop
push
add
or
jmp
sarb
pusha
inc
lcall
sbb
and
icebp
xchg
mov
and
push
inc
and
xchg
mov
jns
js
xchg
mov
mov
and
mov
mov
xchg
popa
sub
or
dec
add
or
lods
fwait
pusha
outsl
push
and
or
ja
test
mov
push
inc
adc
add
add
adc
mov
add
rcl
sahf
push
rorb
incb
shrb
aam
inc
ja
adcb
adc
adc
dec
rolb
push
rorb
icebp
and
nop
mov
mov
mov
movb
ss
sub
setae
adc
rcll
or
dec
dec
or
dec
je
scas
push
dec
orl
push
insl
inc
cs
push
pop
lretw
jbe
fstpt
fcoms
adc
fldl
sbb
in
aas
sbb
push
cmp
loopne
jmp
adc
adc
iret
and
rcl
andb
daa
shrl
ret
jmp
or
and
ja
popa
cmp
ds
pop
sbb
mov
mov
cmp
test
fldl
je
sbb
mov
push
xor
push
sub
rclb
ret
orl
sbb
or
xchg
jo
add
inc
les
cmp
jl
mov
and
sbb
xchg
sbb
das
outsb
mov
add
negl
insl
mov
sub
popa
in
and
dec
dec
daa
mov
hlt
inc
inc
inc
je
mov
pop
stos
cmp
pushf
mov
fisubrl
data16
and
xor
mov
jg
dec
add
outsl
mov
ret
cmp
js
jg
rcrb
adc
jne
add
cmpsl
push
sbb
dec
icebp
sbb
roll
lret
aas
push
inc
add
pop
js
imul
sbb
pop
mov
pop
or
adc
cmp
lds
test
or
sub
outsl
and
ja
mov
pop
outsb
rolb
roll
sbb
jmp
add
daa
adc
outsl
xor
add
push
popa
xor
push
adc
xor
roll
and
hlt
pushf
pop
int
and
jb
pop
lods
jecxz
js
dec
cmp
psubw
test
jne
leave
outsb
das
add
dec
fildl
xchg
jo
cld
mov
mov
dec
insb
es
jl
loop
scas
jmp
cmpb
sbb
std
sbb
mov
or
pushl
jecxz
push
pop
movsl
pushf
inc
js
and
nop
cmp
movb
scas
in
nop
clc
mov
mov
mov
cmpsb
imul
cmpsl
add
xor
add
add
mov
mov
sbb
pop
sbb
orb
add
fimull
push
or
and
pop
out
repnz
ja
rclb
bound
mov
adc
xor
imul
rclb
jns
movsb
inc
xor
or
add
mov
adc
push
ja
sbb
inc
call
jne
cmp
clc
push
or
fistpl
idiv
sbb
inc
or
loope
sbb
fwait
mov
popa
clc
xchg
lea
fst
add
pop
fmull
dec
ds
cs
decl
add
outsb
or
push
inc
xchg
rolb
js
out
add
idiv
dec
dec
sbb
push
mov
xor
mov
pop
loopne
or
mov
and
repnz
inc
inc
es
ljmp
dec
cmp
inc
pop
stos
pop
jo
rcr
adc
push
add
pop
add
in
pop
jmp
and
mov
add
das
and
andl
stc
xor
inc
inc
pop
adc
xchg
mov
adc
mov
clc
in
call
sub
cmp
push
add
insl
fidivs
add
movl
inc
push
push
sti
and
das
in
or
add
ja
in
push
xor
iret
add
inc
jno
stos
and
mov
and
mov
ljmp
add
cmp
adc
cli
sub
push
addl
mov
jo
mov
aad
mov
add
bound
pop
daa
or
mulb
mov
push
lea
ret
adc
sub
insb
inc
adc
inc
dec
mov
jecxz
mov
daa
mov
or
xor
or
sbb
pusha
xor
rclb
ja
add
sbb
cwtl
jl
insb
mov
nop
and
cs
cmp
dec
popa
sub
sahf
mov
push
xchg
hlt
divb
cmp
push
xor
dec
inc
mov
fdivl
in
add
push
scas
sbb
setnp
insl
aas
iret
mov
push
cltd
pop
inc
fs
mov
nop
inc
int
jne
sbb
mov
cld
add
jmp
inc
addb
ret
sbb
mov
js
mov
add
jmp
adc
dec
out
es
jne
dec
hlt
sahf
jmp
insb
loopne
sbb
fcomps
lock
add
push
outsb
cli
cmp
add
push
lea
out
and
push
outsl
pop
mov
jge
and
push
shrl
cs
scas
adc
mov
cwtl
pop
int
shrl
mov
add
daa
add
mov
xchg
xchg
push
mov
shl
xor
test
inc
sbb
cmp
xor
movsl
fwait
imul
xchg
mov
and
or
inc
subl
and
int3
lahf
add
push
jns
add
scas
add
add
adcb
dec
add
sti
mov
mov
std
adc
mov
movsb
imul
add
sub
jae
add
push
sbb
pop
mov
sub
jae
pusha
cmp
bound
inc
sub
pop
loope
adc
pop
pop
xlat
cltd
xor
or
push
sub
inc
fbstp
push
cs
stc
and
sub
pop
orl
push
shlb
lods
cmp
jne
dec
rorb
adc
in
sti
dec
ds
sub
sub
leave
in
or
or
or
xchg
push
or
push
sbb
scas
popf
jp
aad
cmp
fisttpl
adc
mov
adc
dec
add
dec
or
pusha
or
insl
sub
es
or
push
jl
fimuls
inc
push
jmp
sub
push
add
push
push
pop
or
add
cltd
push
sbb
lock
add
fwait
or
adc
movb
add
adc
inc
push
cmp
xor
mov
push
add
and
push
inc
push
jle
addr16
cmp
inc
jmp
add
pop
mov
pushf
lcall
adc
push
pop
pop
lock
dec
sub
cmp
sub
xchg
insl
jecxz
pop
je
lea
dec
xchg
and
dec
push
scas
loopne
rcll
nop
lds
test
cmp
movsb
ss
add
xor
xchg
js
mov
xchg
jge,pt
add
ja
lods
jb
cmp
pop
sar
inc
xorb
add
icebp
push
and
add
add
in
das
and
add
adc
dec
adc
add
pop
shrl
loopne
pop
lods
ljmp
sbb
sbb
jmp
sahf
test
aam
jmp
cmp
adc
xor
push
in
mov
push
adc
lea
add
push
mov
jle
call
push
dec
lock
pusha
xlat
inc
adc
dec
cmpsl
and
mov
sbb
and
xor
adc
insl
cmpsb
mov
add
lods
or
or
adc
adc
add
cmpsl
iret
mov
xor
dec
xchg
push
cmp
inc
sub
adc
or
adc
je
adc
cmp
sub
push
loopne
inc
dec
dec
stos
xchg
sbbb
xchg
filds
pusha
lock
push
jo
iret
ds
add
xor
dec
arpl
addl
xchg
add
add
mov
xchg
adc
pop
and
add
mov
ja
pop
pop
pop
das
test
cwtd
push
pop
notl
test
cmp
outsb
mov
dec
inc
sub
add
push
mov
inc
sub
pop
add
mov
inc
outsl
jmp
mov
cmp
movsb
cs
push
xchg
sub
or
push
mov
or
adc
fisubl
aad
and
roll
mov
push
inc
and
cmp
hlt
sbb
xchg
sbb
addb
das
je
mov
inc
add
push
test
loopne
daa
lahf
roll
sbb
sahf
out
lret
psubq
mov
cmpsl
jo
pop
leave
inc
xchg
sbb
out
inc
ret
push
jmp
les
pushaw
xchg
cmp
sysenter
aad
or
and
push
jo
push
cmpb
dec
xor
cmp
outsl
loop
fsubrl
pusha
shrb
and
dec
fwait
jne
rolb
pop
popa
mov
or
add
sbbl
sub
mov
dec
xchg
xchg
cmp
lahf
fs
mov
dec
stos
loopne
loope
out
xor
ret
pop
inc
add
add
jae
loop
rcrb
jl
bound
pop
fstps
push
dec
or
fxch
adc
adc
lret
mov
mov
and
xor
nop
inc
sahf
push
jbe
and
into
jo
sbb
fildl
es
std
push
rol
gs
adc
mov
das
ret
loop
push
xor
jg
inc
int3
lods
sbb
or
and
in
and
test
or
push
inc
aad
clc
or
ret
mov
pop
mov
mov
inc
jle
loop
adc
push
fs
cmp
cmp
and
adc
jle
xor
xchg
jbe
dec
or
or
sbb
jne
jle
je
sbb
pusha
inc
lcall
sbb
add
xchg
test
xchg
imul
pop
imul
lods
cmp
je
lods
push
lcall
xor
arpl
scas
cmp
lret
inc
imul
loope
rorl
fcmove
sbb
icebp
pop
push
pusha
sbb
xor
push
adc
orl
push
aaa
test
jo
or
jne
shrl
bound
mov
mov
and
pop
push
jecxz
pop
dec
movsb
pusha
cmp
les
push
dec
mov
rcrb
bound
add
faddl
jae
ret
jecxz
xchg
mov
outsl
and
xor
lods
sub
ret
adc
xchg
ret
dec
daa
test
xor
cmc
fisttpll
cmp
jp
push
mov
fsubr
and
sbb
bound
and
push
cwtl
or
loopne
or
in
js
push
push
xor
inc
sub
xchg
and
and
pop
and
or
popa
daa
lock
or
popa
push
dec
push
or
mov
test
or
dec
cmp
js
movsl
dec
push
push
xor
push
cld
mov
add
shl
sbb
xchg
adc
inc
out
sbb
adc
clc
mov
pop
and
pop
pop
mov
cli
and
fsubs
lea
adc
out
mov
xchg
out
test
inc
mov
xchg
daa
test
call
clc
fstl
stos
or
aam
cs
andb
fidivl
cwtl
push
pop
sbb
jo
enter
inc
add
xor
cmp
sbb
adc
sbb
sub
or
mov
inc
and
mov
loope
shlb
stos
dec
pop
aas
sub
and
xor
bound
inc
and
push
fbld
fmuls
pop
inc
sbb
dec
mov
out
cwtl
xchg
imul
inc
mov
cmp
inc
shll
or
popa
test
inc
or
cmp
mov
and
add
or
fisttpl
sbb
adcb
lods
int
jle
dec
jne
push
mov
and
aas
enter
inc
push
and
cwtl
jg
mov
adc
cmp
add
add
ljmp
jmp
cmp
mov
add
sti
insb
sbb
lock
out
mov
xor
fwait
mov
adcb
sbb
sbb
jmp
ds
and
xor
fwait
push
mov
pop
mov
mov
or
in
mov
je
add
jmp
bnd
in
xor
or
add
push
cmp
jge
sbb
sbb
mov
mov
dec
stos
xchg
adc
push
push
cmp
das
popa
xchg
sbb
xor
ret
push
movl
pop
sar
sub
and
jmp
sbb
into
add
mov
or
js
out
pop
mov
mov
testl
push
jp
les
loop
cmp
pop
dec
and
pop
sarl
cmpl
xor
cs
pop
data16
rorb
rcrl
adc
jmp
daa
rorb
xlat
mov
or
or
cwtl
and
icebp
push
xor
mov
movsl
fdivrl
movb
icebp
add
adc
data16
cmpb
xor
mov
jnp
fdivr
int3
shrb
sbb
and
test
inc
inc
subps
das
test
add
and
daa
or
test
push
push
sbb
rolb
sbb
and
sub
dec
pushf
es
or
sub
push
jo
jb
mov
jo
test
cmp
dec
mov
add
test
and
adcl
xlat
sub
popa
fldl
cmp
dec
sti
or
adc
test
mov
clc
ret
mov
gs
mov
mov
addr16
hlt
mov
sub
add
xorl
loope
jmp
sub
sbbl
xchg
or
jmp
add
mov
roll
sahf
js
mov
mov
and
add
and
add
sbb
arpl
sbb
in
or
adc
sahf
cmp
mov
movsb
loopne
es
arpl
addl
pop
and
push
movsl
dec
and
dec
dec
sub
jnp
pushf
xchg
es
loopne
into
sub
std
add
sbb
push
cmp
cld
push
jne
shlb
cmpb
call
cld
scas
mov
push
lods
ret
dec
dec
ret
pop
and
sbb
pop
dec
lcall
filds
push
aam
sub
jns
arpl
pushf
mov
sti
pop
out
mov
pusha
test
dec
push
push
sbbb
nop
jecxz
or
pop
mov
pop
jge
enter
test
mov
shrl
sbb
sub
fidivs
fstpl
loopne
inc
jle
out
fisttpl
mov
or
inc
or
shrl
adc
lahf
mov
or
pop
mov
or
adc
adc
push
mov
inc
xor
jo
mov
mov
and
repz
jbe
lods
push
pop
add
xchg
fisubl
push
sub
xor
or
test
and
xchg
xor
mov
adc
inc
sub
out
addb
movsb
das
mov
jmp
ret
ret
js
js
cmp
dec
jo
mov
and
and
pop
mov
sub
pop
dec
jge
sub
mov
and
xor
sub
adc
cmp
jg
sbb
jecxz
add
in
lock
fs
jae
lock
test
shlb
jl
add
ret
movb
popf
nop
ret
fwait
fs
bound
pop
iret
jo
xchg
fstl
rol
daa
aad
inc
sbb
loopne
inc
dec
insl
pop
sti
and
pop
mov
bound
dec
push
xchg
push
out
sub
int
sbb
add
push
xor
movntps
mov
outsl
or
and
push
ret
fcmovnb
sbb
sbb
push
or
pop
or
and
inc
pop
lahf
push
cmpsb
push
fists
setge
or
pop
mov
cmpsl
sub
lods
push
add
data16
cmp
xchg
idivb
push
push
in
push
add
movsb
xor
jo
jmp
dec
add
push
daa
add
aas
xor
inc
scas
adc
shlb
and
push
jg
aam
loop
lea
xchg
sub
and
jne
outsl
popa
jmp
icebp
sub
ljmp
cmp
cwtl
push
pusha
les
sub
cmp
and
or
pop
mov
cmpb
mov
stos
sub
inc
jp
adc
pop
or
or
inc
dec
and
pop
push
cmp
mov
or
stc
mov
sub
iret
iret
jle
dec
inc
scas
ja
movsb
int
mov
add
xchg
sub
mov
mov
fisubrs
jns
adc
add
pop
mov
pop
cmc
outsb
dec
adc
ret
leave
inc
and
fsubr
addl
xlat
add
stos
dec
and
pop
cltd
pop
xchg
out
bound
sub
jl
lcall
pop
mov
rcll
add
sub
inc
gs
mov
sub
gs
lret
add
xor
add
jbe
jnp
nop
dec
nop
or
xorl
or
pusha
push
xchg
cmp
push
popf
jbe
insl
jle
clc
dec
jne
or
pop
adc
push
subb
in
ja
mov
xchg
mov
cwtl
cwtl
lock
inc
out
movsl
call
cwtl
pop
ffreep
push
mov
hlt
inc
sub
test
shlb
pop
hlt
test
bnd
jns
inc
push
cs
adc
test
or
imul
push
test
cmp
bound
cmp
adc
sbb
inc
or
sbbb
loope
push
hlt
pop
inc
cmp
adc
sbb
idivl
imulb
xor
fsubs
imul
addb
adc
pop
or
mov
push
adc
pop
mov
dec
mov
movsb
test
mov
mov
idivl
sub
and
in
gs
popf
pushf
xor
xor
fucomi
fiadds
addb
sbb
xor
shl
and
das
dec
or
mov
loop
jne
push
inc
pop
push
aas
xor
iret
filds
call
sub
cmp
orb
dec
mov
test
insb
jmp
sub
dec
rcrb
mov
jne
les
lods
test
das
mov
mov
pop
ds
push
aam
sub
xor
aas
adc
dec
clc
lock
pop
inc
mov
ffreep
pop
stos
xor
in
cmp
push
roll
or
jecxz
mov
adc
pusha
xor
sbb
xor
dec
ss
cmp
jae
fs
out
sti
mov
aas
cmpsl
xchg
out
or
jmp
lds
or
mov
mov
mov
and
inc
lods
test
xchg
arpl
or
inc
pop
adc
cs
je
idivl
inc
sti
call
unpcklps
or
mov
and
mov
push
or
faddl
push
pop
xlat
xchg
add
mov
and
add
lea
call
mov
pop
push
cmovae
push
call
loope
mov
mov
cmp
sbb
mov
lea
push
fs
push
fbld
fldenv
push
pop
and
pop
outsb
sub
sub
adc
and
imul
add
pop
mov
pop
leave
in
dec
loopne
orl
dec
test
push
sbb
sbb
popa
fldl
push
sub
adc
subl
dec
xor
add
xor
add
lds
movl
lea
dec
or
inc
ret
push
sub
enter
inc
jecxz
and
iret
or
je
pop
dec
sbb
in
xor
inc
or
xor
xor
fiaddl
adc
xchg
inc
mov
ja
xor
and
xchg
sbb
and
xchg
and
shr
inc
cmp
inc
xor
cmp
push
dec
std
sbb
add
lds
lods
in
xor
xchg
mov
pushf
rcll
das
pusha
lods
adc
test
and
jae
pusha
adc
push
and
addr16
clc
jae
xlat
sbb
pop
das
movsl
jle
cli
nop
jmp
push
test
mulb
xchg
test
xor
lret
shlb
dec
lea
jae
mov
adc
jo
xchg
test
daa
push
adc
push
push
mov
cmp
xor
inc
push
adc
das
add
mov
push
aas
add
dec
bound
clc
cwtl
jg
xor
and
xchg
mov
dec
popa
and
and
sub
dec
sbb
mov
mov
mov
movsb
std
dec
adcl
adc
push
push
test
les
inc
mov
adc
add
test
mull
cltd
aam
mov
xchg
jno
mov
dec
sub
or
sbb
nop
fucomip
inc
mov
imul
push
pop
mov
jg
add
dec
inc
jbe
and
loope
test
or
sub
adc
sbb
jg
xchg
push
inc
pop
mov
sub
jl
pop
fnstenv
out
in
inc
pop
lods
jno
cmc
mov
adc
sub
adcl
out
adc
sub
mov
sar
inc
push
cmp
es
fs
popa
adc
push
gs
add
lds
sub
inc
movb
jbe
adc
add
imul
ljmp
flds
xor
and
push
mov
sbb
adc
fisttpl
cmp
xchg
fsubrs
repz
das
arpl
adc
dec
out
jbe
adc
xchg
jp
xchg
je
cmc
pop
cmp
movsl
mov
clc
das
int
stos
xchg
stos
jne
jno
push
mov
ss
cmp
xor
sbb
cmp
inc
emms
and
loopne
and
hlt
xchg
adc
mov
sbb
pop
push
dec
inc
sbb
ja
dec
push
add
outsl
fsubrp
mov
xchg
sub
out
das
pop
gs
nop
cmp
test
aaa
pop
add
cld
xor
adc
dec
cmp
sub
fst
xchg
add
or
into
je
add
mov
xbegin
clc
imul
pop
ret
inc
adc
push
ret
out
adc
jo
add
loope
aam
ret
iret
inc
jns
push
cmc
dec
filds
add
pusha
cmp
dec
bndstx
dec
adc
shl
or
fwait
or
add
addb
adc
mov
push
mov
insl
or
add
push
ss
add
mov
push
fs
xor
push
push
push
push
and
add
sub
sbb
adc
lea
or
pusha
sbb
aas
sbb
cmpl
mov
cmp
adc
adc
jae
adc
popf
test
inc
insb
push
hlt
push
and
sahf
adc
adc
or
pop
fadds
pop
and
cmp
cmpsl
jp
xor
ss
push
cmp
add
loop
adc
je
push
pop
je
jo
pop
push
mov
sbb
mov
inc
cmc
mov
lret
pop
nop
loop
pop
xchg
pusha
pop
push
lock
nop
jle
sbb
jno
dec
out
test
ljmp
sbb
xor
cmpb
inc
mull
movsl
mov
mov
les
cmpsl
cmp
test
rorl
outsl
lods
in
and
test
jb
xchg
mov
ja
notl
arpl
and
jns
cmc
cmpsb
adc
stos
and
mov
sbb
cmpl
lret
shlb
aad
jl
and
xor
add
movsb
mov
stos
sub
adc
xchg
fimull
mov
test
sub
cltd
dec
jg
cmp
jne
adc
push
stc
jp
ljmp
imul
mov
js
imul
dec
jb
or
add
ss
pop
fs
and
nop
std
inc
es
mov
pop
call
les
xchg
jg
cmp
or
orl
or
or
adcl
jg
js
dec
mov
xor
jmp
sbb
imul
adc
mov
jb
adc
sub
mov
popf
cwtl
cmp
xor
push
sub
popa
std
jmp
call
push
xor
lock
and
sarb
mov
xor
adc
popa
inc
or
xor
cmp
sub
add
xor
daa
pusha
aaa
adc
ret
xor
push
shrb
xor
sbb
jbe
xor
sbbl
out
cltd
fnstsw
mov
or
sbb
test
loopne
ljmp
pop
add
xchg
cmp
xor
xchg
rcll
test
loopne
out
xor
push
mov
xchg
addr16
push
decl
xor
int
in
push
bound
icebp
push
lock
in
xchg
push
cmp
loopne
sbb
jecxz
push
clc
dec
call
push
xor
popa
add
movsl
in
sub
and
lods
xor
aam
dec
push
insb
sbbb
daa
call
jl
mov
and
int3
insb
add
mov
cmpsb
loope
sub
mov
cmpsl
jbe
arpl
inc
imul
pusha
pop
rcl
xor
mov
adc
inc
addl
cmpsl
movsb
mov
inc
mov
sbb
movsb
lcall
movsb
sbb
sub
xor
xchg
dec
or
unpcklps
or
mov
adc
inc
mov
xchg
inc
dec
ret
push
push
mov
mov
subl
cmc
outsb
and
mov
add
dec
dec
jecxz
ja
rcrb
xchg
or
add
js
jns
imul
or
push
pushf
aam
addl
xchg
cld
shl
dec
ja
push
hlt
xchg
outsb
sti
pop
pop
push
inc
mov
sub
pop
push
pop
cwtl
subb
nop
adc
pushf
test
sbb
jo
add
aaa
inc
test
mov
imul
push
hlt
adc
stos
sbb
pop
pop
add
push
psrlq
push
pop
shlb
or
add
mov
aas
mov
inc
or
movsb
test
jnp
xor
sub
aad
sub
in
xor
and
dec
dec
and
daa
adc
andl
imul
test
clc
jg
cmpsb
mov
fsubrs
addb
mov
and
add
aam
ret
lock
mov
mov
dec
xchg
add
sub
adc
or
inc
or
xor
sbb
sub
pusha
test
rorb
push
xchg
and
add
out
sbb
adc
push
jnp
out
inc
xchg
pop
inc
stos
sbb
sub
fs
sbb
shlb
outsb
popa
adc
clc
mov
jno
cmpsl
inc
inc
mov
dec
adc
push
lock
inc
pop
mov
orl
lock
or
ret
adc
fistps
inc
test
xor
inc
pop
outsb
inc
push
and
cmp
inc
test
test
and
push
decb
test
popa
mov
xchg
mov
js
and
pushl
xchg
mov
sbb
add
sbb
sub
or
mov
inc
sub
gs
jnp
pop
mov
inc
rcll
mov
cmpl
add
jae
jecxz
les
es
cmp
cmp
mov
or
xor
bound
inc
push
arpl
mov
mov
daa
push
mov
push
add
pusha
add
rolb
not
inc
mov
xor
jmp
lret
cmp
push
leave
bound
xchg
sbb
or
dec
and
cmpb
daa
xor
test
push
push
jl
cmp
mov
dec
push
dec
mov
xchg
xchg
pop
and
pop
cli
rcrl
xchg
adc
rcll
je
push
andb
ret
adc
loopne
mov
adc
je
and
loopne
cwtl
pusha
adc
add
lods
frstors
lcall
xor
movsb
mov
pcmpgtd
lods
xchg
ds
loop
mov
ss
jl
loopne
ja
adc
push
lds
mov
movsl
je
cmp
jnp
dec
jns
addr16
dec
es
jg
test
arpl
or
jo
sub
mov
lods
xor
cs
orb
cmpsl
and
jmp
in
stc
jmp
rcrb
or
cmp
pusha
and
scas
and
inc
pop
xor
pop
inc
mov
add
aaa
mov
divb
dec
adc
mov
icebp
addr16
xlat
push
aam
ja
or
push
adc
lret
inc
adc
out
inc
or
mov
inc
xchg
test
inc
dec
aaa
pop
fisttps
sbb
and
dec
mov
scas
sbb
push
dec
cmp
scas
popa
ja
jne
adc
adc
aas
xor
add
loop
inc
xor
xchg
jne
sub
int3
loop
xlat
sub
xchg
mul
lea
sahf
jmp
sbb
mov
ja
adc
inc
loop
push
add
mov
jmp
adc
lea
lods
dec
mov
cwtl
les
jno
in
dec
and
xchg
ja
inc
push
xor
dec
pop
lea
fmul
add
fs
xchg
test
add
mov
inc
bound
popa
js
or
jge
jb
test
cs
sub
add
pop
push
pop
xchg
mov
nop
ret
or
inc
jecxz
push
test
enter
add
sub
mov
push
push
insb
cwtl
std
pop
testl
mov
add
cli
popa
in
mov
jnp
inc
mov
mov
dec
mov
pop
add
cli
inc
sti
pop
pop
xor
in
jns
lea
inc
loop
and
dec
or
dec
sub
mov
or
adc
dec
mov
inc
js
mov
icebp
inc
cmp
outsl
dec
loopne
and
pop
sbb
rcrb
mov
add
cmp
push
adc
add
imul
mov
dec
mov
xchg
mov
mov
je
jecxz
xchg
lret
push
insl
xchg
rorb
xlat
aas
jb
xchg
or
and
push
mov
mov
push
ds
ret
mov
sbb
xor
jo
xlat
cltd
cld
movsb
popf
in
xor
adcb
cmpb
dec
dec
es
pop
xor
repz
fsubs
push
movswl
mov
hlt
xchg
sbb
jg
mov
inc
shlb
mov
add
mov
mov
jne
movb
push
fdivp
popf
sbb
or
push
bsr
adc
insl
or
jecxz
inc
test
push
mov
add
xor
dec
mov
loop
inc
or
mov
mov
or
dec
dec
rcl
xor
xchg
int
outsl
repz
ret
xchg
or
sbb
cmc
divl
sahf
js
jmp
test
pop
pop
adc
xchg
sti
fadds
xchg
and
data16
neg
pop
je
dec
dec
xor
lds
shr
add
nop
imul
add
cmp
jge
mov
pop
or
rolb
icebp
jle
or
shll
mov
movsb
inc
test
test
cmpsb
add
jo
movsl
shr
adc
rorb
xor
xchg
ficompl
leave
gs
fdivrs
push
shlb
xor
sub
pop
repz
loop
push
mov
inc
inc
add
xchg
sbb
push
push
or
or
aas
insl
aam
mov
popl
or
pusha
cmp
aad
push
nop
es
call
xchg
js
and
sub
addb
inc
cmp
push
pop
dec
cld
pusha
cmp
push
in
pop
add
pop
sub
or
add
jne
push
or
adc
aaa
jns
cwtl
jae
lcallw
fimuls
enter
mov
xchg
push
push
popa
or
xchg
xchg
ljmp
pop
cmpsb
xor
xchg
add
je
xlat
scas
rcrb
xchg
xor
add
insl
repz
dec
xor
imul
mov
dec
shld
sub
cltd
outsb
je
mov
sub
and
subl
hlt
and
repz
push
adc
arpl
dec
inc
add
gs
dec
inc
xor
lock
js
andl
popl
push
imul
lcall
dec
fisttpl
push
and
dec
inc
sub
inc
jecxz
sbb
dec
sub
mov
xor
js
and
xor
loop
dec
xor
sub
enter
add
push
mov
cmpsb
in
cmp
push
in
cs
xor
mov
jae
jne
sub
das
cmp
jae
mov
and
mov
fsubl
ret
add
push
mov
sbbb
push
mov
out
jns
pop
imul
or
fs
aaa
xor
mov
mov
dec
mov
or
inc
mov
sbb
mov
pop
add
js
xchg
roll
sub
test
cmp
and
stos
push
daa
jns
and
out
lcall
or
add
mov
xchg
pop
repz
pusha
lods
enter
sub
ljmp
pop
adc
sbb
or
gs
cmp
test
push
push
and
jge
invd
and
sub
mov
sub
mov
adc
cmp
decb
mov
pop
es
sub
das
cwtl
sbb
add
shll
orl
dec
push
stos
sub
das
xor
fcoms
adc
pop
ljmp
push
movl
mov
popa
xchg
add
pop
push
adc
inc
push
or
pop
iret
sarl
and
dec
sbb
push
xor
push
mov
add
out
add
imul
mov
mov
adc
test
nop
cmc
dec
mov
clc
sbb
pop
ss
shlb
lcall
pop
add
fistl
jb
pop
xchg
push
outsb
pop
pop
or
fldcw
add
push
jo
or
test
push
pop
xor
add
clc
xlat
ret
into
ja
jmp
add
rclb
stos
add
loop
push
es
sbb
xchg
cwtl
pop
por
arpl
mov
adc
cmpsb
movsl
cmp
sub
test
push
clc
sub
lock
in
mov
xor
push
lock
jne
stc
mov
and
and
dec
xor
daa
sbb
daa
test
mov
sbb
jnp
movsl
xor
jns
inc
cmp
push
cmp
xor
or
pop
test
push
or
pop
push
push
pusha
sub
jmp
mov
int
pushf
dec
mov
sbb
xlat
add
jbe
imul
cmp
les
daa
ss
orl
movsb
rcll
mov
jge
sbb
aas
clc
sti
daa
es
adc
nop
iret
mov
popf
xor
lahf
xchg
inc
pop
je
aad
mov
mov
lcall
lods
inc
mov
or
pop
mov
pop
loopne
scas
jmp
sbb
imul
xchg
fisttpll
adc
or
xchg
sbb
insb
in
popl
xchg
mov
inc
pop
and
xor
mov
jmp
lret
jne
lods
ret
clc
and
daa
xchg
dec
loope
ret
xor
mov
shrb
fistps
add
or
add
loop
lods
dec
dec
inc
cwtl
fnstenv
test
add
icebp
aas
mov
push
inc
sub
test
or
inc
xchg
xor
rolb
add
lret
pop
outsb
pop
mov
scas
and
pop
push
je
daa
mov
sbb
or
cmp
mov
xor
jl
jle
and
add
inc
inc
loopne
daa
cmp
pop
mov
xchg
lds
jo
xor
ret
sbb
xchg
int
fidivs
jns
nop
mov
loopne
clc
mov
cmp
push
ret
rclb
pop
fstpt
out
sbbl
jmp
cbtw
shlb
jns
in
loope
push
movsl
xchg
pop
repnz
or
dec
cmp
cmp
push
fsubl
lea
push
sbb
in
icebp
ss
xor
addr16
cmp
add
or
negl
nop
imul
and
pop
es
adc
aad
lret
and
sbb
and
sbb
push
aam
aam
xor
jne
pushf
add
imul
xor
xlat
mov
test
push
mov
iret
or
mov
daa
aaa
ret
xor
cltd
insl
pop
dec
pop
mov
lea
fists
or
push
call
jo
dec
rorl
nop
sub
push
push
test
xor
aad
mov
jbe
adc
sbb
nop
xor
adc
cmp
or
adc
push
jnp
es
es
lahf
iret
add
jo
push
inc
mov
xor
push
sub
xor
sub
movsl
popf
ret
and
sbb
xchg
add
cmp
mov
nop
xchg
mov
sbb
cmpb
cltd
call
pop
mov
mov
xchg
xchg
xchg
add
mov
outsl
push
imul
add
mov
mov
ret
fdivl
into
cmp
insl
adc
cs
ret
add
lahf
pop
lret
jno
dec
in
shl
or
daa
imul
ret
icebp
cmp
je
dec
mov
test
cli
test
sub
insl
sbbb
mov
mov
adc
movsl
pop
pop
aaa
sub
shl
scas
stos
movsb
idivl
enter
jl
mov
add
ljmp
and
loopne
stos
cwtl
pop
xchg
fistpl
mov
loope
lock
push
push
or
push
pop
mov
jmp
push
jno
push
faddp
xor
inc
rcrb
es
sub
push
adc
rcll
dec
mov
clc
sahf
sarb
leave
and
loopne
sub
pop
cmp
mov
arpl
andl
inc
adc
fs
add
aam
lahf
test
inc
inc
leave
inc
sbb
lcall
xorl
mov
sub
addr16
mov
cmpb
xchg
andl
icebp
scas
mov
ret
xchg
pushl
ljmp
sub
sbb
sub
jle
or
scas
or
lret
or
add
inc
ss
pop
and
mov
or
mov
mov
lods
scas
inc
and
and
and
add
cmp
sbb
jle
mov
fcomip
xchg
cmc
dec
pushf
pop
mov
movsl
pusha
push
xor
mov
mov
inc
scas
adc
and
push
fwait
loop
and
lock
sbb
ret
das
aam
and
rcrl
mov
pusha
adc
sub
inc
fs
jbe
mov
mov
sbb
sub
in
lcall
sbb
or
mov
adc
in
pop
into
mov
xor
xchg
mov
pusha
mov
and
add
movsl
adc
mov
in
mov
stc
dec
out
xor
lcall
mov
stos
xor
mov
jb
sub
test
inc
inc
or
sub
test
movsb
xchg
decb
sub
sub
add
or
xorb
mov
in
dec
repnz
push
clc
clc
movsl
cmp
in
xorb
dec
or
call
and
xchg
xor
outsb
rorb
fmul
fmul
adc
test
sub
in
dec
sub
outsl
lock
adc
out
in
add
ficoml
add
pop
pop
lea
inc
stos
push
les
push
jmp
movb
jmp
push
push
or
jmp
cmp
add
jnp
mov
fcom
addl
jo
je
rorl
int3
jb
cmp
sub
add
cs
int
dec
rcrb
or
rcll
or
ds
mov
dec
mov
inc
in
in
dec
inc
in
cs
mov
xor
mov
or
pop
add
mov
sub
mov
sub
orb
mov
jmp
inc
push
rcr
aam
adc
sarb
dec
dec
or
jnp
fsub
loopne
adc
das
cs
mov
mov
sub
fdivrl
adc
outsb
ja
push
cli
add
add
dec
sub
dec
roll
jmp
jbe
xlat
xchg
mov
and
into
xchg
mulb
adc
mov
lahf
jmp
into
pop
mov
and
into
adc
into
inc
cmp
repnz
lcall
pop
and
mov
arpl
aas
sbb
fisubl
dec
add
jle
sbb
add
push
dec
pop
mov
lcall
fdivs
imul
aam
dec
cmp
or
vsubpd
les
pop
enter
test
and
add
into
or
rcrl
sub
adcl
adc
js
notl
mov
push
lock
adc
mov
stos
cmp
iret
mov
lods
fs
pop
rcrb
mov
inc
cmp
mov
sub
push
sarb
push
lods
mov
pop
pop
daa
cmc
inc
sbb
sbb
jmp
rorl
xor
fadd
nop
subb
sbb
mov
pop
mov
lea
daa
adc
mov
lret
dec
inc
bound
mov
fcomi
xor
xchg
dec
scas
test
xor
rcrb
cld
mov
add
push
push
cmp
sub
mov
aam
or
xlat
popf
dec
dec
jne
and
xor
lock
xor
lcall
push
aaa
aas
fcompl
adc
push
es
mov
sub
ss
adc
cli
inc
adc
addb
inc
adc
sub
test
loopne
fcoms
test
hlt
mov
or
mov
dec
cwtl
cwtl
and
ss
push
add
jo
mov
push
call
adc
push
add
jp
mov
testb
je
add
xor
je
xchg
pop
add
xchg
cltd
xor
xchg
sub
sub
fbstp
in
adc
push
pop
and
xchg
xlat
xchg
cmp
pushf
add
inc
adc
loope
and
xor
fdiv
xor
add
cmp
mov
orl
icebp
mov
mov
push
dec
shlb
aam
mov
sub
jmp
pop
xchg
and
mov
out
jge
and
sub
cs
jmp
pop
aam
add
cld
popa
push
fcomp
add
sarb
test
rcll
add
dec
or
adc
and
dec
cmpsb
adc
popa
cmp
loopne
xchg
cmp
cmp
or
and
data16
sbb
cmc
hlt
sub
mov
xchg
shrb
les
aam
pop
dec
pushf
sub
test
sub
or
mov
cwtl
and
daa
std
add
add
out
jne
add
dec
add
inc
add
lea
ret
adc
stos
imull
movl
imul
push
ja
fdivrl
and
cmp
mov
cmpsl
lods
add
out
xchg
nop
inc
push
lods
xchg
pop
push
sbb
test
in
jns
inc
sahf
imul
mov
cmp
xchg
int3
and
mov
lods
sbb
dec
xor
pop
aad
add
cmp
addb
cmp
je
adc
inc
fwait
insb
adc
lea
hlt
sbb
je
addb
test
xchg
cmp
xchg
ds
xchg
addr16
xchg
dec
js
call
gs
cmpsl
mov
push
pop
clc
popa
jae
inc
es
loop
mov
push
inc
sub
addr16
sub
out
stc
jp
xlat
sahf
adc
or
adc
push
mov
lock
imul
and
rolb
add
ret
xchg
or
sbb
cmp
stos
or
mov
pop
dec
pushl
push
ja
popa
adc
push
shll
in
adc
xchg
negb
cmp
add
jp
dec
testl
in
fstpl
xchg
data16
incb
add
push
or
mov
icebp
or
fdivrs
xor
iret
xchg
adc
xor
inc
adc
inc
ret
stc
add
and
lods
push
std
stos
jb
push
inc
adc
add
faddl
sub
add
lahf
jne
or
pop
inc
add
pop
popa
sbb
mov
nop
sub
ret
push
mov
jge
push
add
pop
inc
insb
lea
push
insb
adc
cs
xchg
jne
inc
inc
inc
cld
cmp
pop
es
xlat
adc
in
or
xchg
push
imul
mov
jp
popa
cmpsl
jge
push
gs
adc
xorl
fcmovu
pop
sahf
push
and
add
out
aaa
lock
adc
pop
lds
iret
mov
roll
push
das
jno
stos
cs
sbbl
rcrb
pop
call
lods
pop
enter
insb
mov
ss
in
mov
adc
mov
in
push
add
xor
pop
xor
hlt
pop
in
ret
jns
pop
dec
add
adc
dec
sbb
sbb
xchg
xor
dec
sahf
adc
pop
movsl
icebp
movswl
or
movsb
fcoms
das
push
sbb
je
cmc
inc
mov
stos
cmp
adc
sbb
test
sbb
mov
jg
dec
ja
mov
mov
xchg
fcompp
insb
or
add
xor
lret
sahf
bound
test
pcmpgtd
or
xchg
sbb
add
push
cmpb
push
lods
jecxz
or
pop
out
adc
cmp
pop
int3
inc
insb
mov
sub
jo
rorb
or
dec
rolb
mov
and
rcrb
subl
ret
jg
cmp
ja
je
adc
out
lock
outsb
cmc
das
test
loope
rol
inc
fs
xor
sub
mov
fcomi
arpl
pop
ds
inc
popa
out
fsubl
inc
ret
pop
pusha
fs
and
mov
outsl
adc
jae
inc
adc
iret
and
or
decl
das
add
roll
rcll
and
or
inc
cs
fstps
xor
add
xor
pop
lock
loope
or
sbb
or
adc
in
call
lock
bound
mov
fs
pop
pop
mov
mov
push
mov
mov
pusha
add
sbb
inc
add
mov
jmp
xorb
push
mov
add
sbb
inc
fs
add
adc
dec
sbb
and
adc
and
insb
cwtl
cmp
push
xor
call
jmp
xor
sbb
sbb
sub
or
in
iret
das
rcrb
add
add
push
outsl
sbb
jmp
call
push
insl
fisubrs
lcall
inc
sub
cmp
jo
pop
add
xor
inc
cmp
cs
mov
cmp
jne
in
mov
xchg
xchg
dec
jne
rolb
inc
inc
push
inc
inc
loopne
shrb
jmp
popa
xorb
in
jmp
adc
mov
cwtl
fwait
rclb
xor
fsubs
pop
xchg
lock
loopne
adc
inc
stos
adc
fs
and
sbb
jbe
pop
mov
pop
cmp
and
aas
push
fildl
push
scas
pop
adc
sbb
mov
lret
and
dec
adc
mov
or
sbb
push
or
in
jl
incb
push
dec
jne
pop
dec
or
push
iret
fsts
inc
inc
leave
sub
push
add
scas
jle
and
jbe
or
mov
jmp
dec
mov
aam
clc
jo
xchg
xchg
enter
mov
xchg
or
xchg
mov
inc
cmp
xchg
xchg
stos
sub
hlt
mov
jns
adc
pushf
xor
cmp
xchg
mov
adc
or
mov
or
je
pushf
and
and
mov
add
ja
add
jp
ret
lcall
mov
lods
sub
fdivs
add
lcall
adc
js
hlt
pop
sbb
fld
shrb
pop
inc
adc
mov
cmpl
push
adc
mov
jge
jg
dec
and
mov
dec
adc
js
adc
mov
jl
mov
inc
adc
sarb
mov
sub
xchg
pusha
xor
push
dec
fiaddl
mov
cmp
add
lret
pop
decl
adc
dec
imul
mov
shl
dec
bound
adc
push
xchg
adc
aas
mov
shll
cld
sahf
es
dec
jne
add
stc
inc
sbb
gs
sti
add
add
mov
icebp
jo
fs
cwtl
les
shll
xchg
cmp
mov
popf
in
sub
adc
cmp
xchg
dec
or
imul
add
cmp
xor
nop
in
cmp
adc
cltd
inc
xor
mov
rcll
sub
movsb
push
push
jp
xor
xchg
fs
xor
sub
sub
orb
pop
jmp
jae
mov
sti
add
ss
xchg
or
test
pop
mov
pusha
ljmp
or
or
addl
ret
and
dec
insb
iret
add
imul
and
sbb
mov
push
enter
rclb
jne
mov
and
sbb
mov
or
adc
inc
cmp
jp
sbb
mov
push
pop
xchg
mov
inc
daa
and
pusha
or
dec
add
push
negl
sbbb
pop
mov
dec
mov
js
sbbl
loopne
sbb
xor
scas
std
jmp
dec
ret
ret
cmp
cmp
xchg
xor
roll
addl
xchg
shlb
mov
adc
xchg
or
pop
shlb
inc
cmpsl
add
ljmp
fsubs
cmp
and
add
mov
cmpsb
rorl
jg
jnp
pop
inc
clc
jge
sub
repz
movsb
fisubs
pop
adc
add
adc
add
cmp
or
mov
push
xor
loopne
adc
xchg
out
rcll
push
mov
pop
mov
pop
daa
pusha
sub
cmpsb
test
inc
xchg
sub
push
fildll
aas
scas
inc
bound
test
add
rorb
fs
lea
adc
inc
mov
jmp
jl
dec
xor
aaa
std
and
sub
movsb
fisttpl
jmp
dec
add
rcll
or
out
incb
je
imul
idivl
add
sbb
and
sub
loope
pop
es
mov
fisubrs
notl
mov
jno
xchg
addr16
test
mov
into
fmull
hlt
mov
rclb
iret
cltd
push
repnz
and
xchg
popa
aas
adc
inc
movl
fcoml
inc
dec
or
sbb
out
cmc
push
cmpsl
sub
push
testl
fs
enter
sbb
sub
or
leave
add
sbb
pop
dec
ds
xchg
and
or
cwtl
lds
jmp
jle
sbb
sbb
ss
pop
or
or
pop
mov
adc
jne
or
pop
mov
jmp
adc
push
mov
clc
jo
jo
rcrb
mov
fnsave
daa
sbb
sahf
dec
mov
mov
sub
add
popa
push
pop
adc
dec
notb
imul
jmp
mov
popa
mov
sbb
sysret
jbe
inc
add
sbb
adc
mov
or
and
enter
cmp
out
mov
push
sbb
xchg
jne
or
add
arpl
adc
push
push
stos
inc
jns
cmp
aas
hlt
adc
cld
dec
cld
dec
mov
sub
and
pop
inc
hlt
mov
and
push
movsl
sub
jmp
jge
add
rcrb
je
scas
inc
ret
cmpb
fadds
aad
invd
pop
fisttpl
pushf
lods
std
add
cmp
xor
push
cmp
rolb
mov
aaa
mov
in
sub
aas
sbb
clc
adc
sti
out
lods
xchg
mov
out
and
arpl
jg
or
add
pop
jg
movl
xor
adc
lods
pop
das
in
add
aam
sti
jmp
sub
test
cmc
daa
lock
xchg
xchg
lret
mov
and
nop
lahf
mov
push
xchg
push
stos
mov
imul
xor
ss
sbb
jnp
lcall
adc
pusha
push
std
cwtl
dec
adc
jno
mov
imul
jmp
test
pop
addr16
sub
and
dec
nop
push
loopne
rcl
push
mov
or
add
xor
shl
jnp
ss
lock
je
xor
push
aam
sub
lea
jno
lea
inc
xlat
mov
pop
in
cmp
inc
pop
lock
add
mov
xor
sbbl
xor
hlt
add
dec
mov
outsl
loopne
leave
cltd
inc
pop
push
xor
mov
push
or
ret
scas
mov
pop
inc
mov
adcb
pop
mov
lret
pop
push
lea
or
scas
cmpsb
mov
aaa
int3
js
sbb
addl
insb
lock
add
and
fists
dec
jne
sub
mov
testb
and
push
in
add
push
pop
sbb
adc
inc
fmuls
popf
inc
nop
insl
scas
in
pop
insl
fprem
mov
and
push
mov
add
or
fs
push
shrb
xor
enter
inc
sub
sub
push
aas
rol
dec
xor
jne
sub
mov
mov
pop
sbb
fwait
loopne
shl
pushf
andb
out
loop
out
jecxz
lods
add
les
push
cmp
lods
or
adc
inc
add
xchg
pusha
sub
fcmovnu
movl
inc
pop
sub
add
cmp
fdivrs
in
sub
add
sahf
lods
lahf
xlat
or
xor
or
fisttpl
mov
cmp
mov
xchg
dec
xlat
pop
push
pusha
repnz
call
in
in
inc
lret
dec
and
pop
sbb
sbb
lcall
cmc
insl
jmp
cmp
add
inc
jmp
pop
sbb
push
add
add
xor
lds
mov
faddl
inc
test
test
push
jmp
push
insb
push
dec
dec
push
clc
add
fcomps
mov
xchg
xchg
dec
sbb
and
mov
rclb
adc
jmp
and
xchg
cld
out
mov
push
rolb
fidivl
ret
inc
mov
das
mov
add
dec
insb
jno
inc
sbb
mov
mov
rclb
cmp
xor
fwait
xlat
jne
xor
dec
in
test
fdivrp
push
inc
xor
shrb
adc
xor
or
dec
inc
ror
xor
shrl
lock
lock
cmp
adc
gs
xchg
loopne
lret
mov
ss
out
cmp
or
cmp
xchg
sub
jmp
xchg
xchg
sbb
js
sub
clc
into
push
fs
nop
popa
xchg
cmpsb
lea
and
bound
mov
nop
les
or
adc
sub
mov
js
inc
movsl
stos
out
push
push
or
loop
vpmadcsswd
dec
das
add
rclb
insb
inc
or
add
jle
dec
enter
mov
sbb
and
lods
test
or
cmc
fcmovnu
or
jns
adc
cmp
or
mov
adc
es
push
jne
daa
xchg
jb
add
fsubs
add
push
inc
xor
rclb
xchg
icebp
pop
push
fwait
imul
cmp
hlt
movsb
out
lret
lods
je
pop
fcoms
push
mov
gs
push
pop
ret
mov
dec
mov
in
adc
sbb
push
or
or
cmpb
adc
test
mov
and
lods
jg
and
mov
push
pushf
fwait
sub
add
cmp
inc
nop
popf
scas
pop
int
shlb
stos
in
les
enter
pop
cmp
enter
test
xorb
xor
hlt
lock
or
sbbl
mov
mov
push
cltd
mov
sub
lea
sahf
jnp
cmp
lds
jp
cmpl
stos
and
js
fistpll
add
adc
sub
push
cmpsl
cmpl
sbb
das
mov
or
jmp
pop
fcmovu
stos
xorb
inc
sti
mov
fs
fistpll
daa
and
mov
mov
pop
pop
arpl
mov
cmp
cs
push
testl
pop
push
jnp
push
sbb
jo
cs
push
int3
sbb
inc
sbb
jmp
inc
dec
scas
sbb
xor
rcrl
std
push
not
fisttpll
mov
adc
xchg
cmp
and
sti
dec
mov
and
inc
les
adc
hlt
ss
mov
bound
inc
call
dec
ljmp
push
push
loop
mov
jbe
add
and
hlt
mov
dec
ss
jle
sbb
sub
cwtl
sub
sbb
inc
mov
lods
das
mov
test
push
ds
mov
dec
insb
jbe
mov
addr16
adc
cld
mov
addb
inc
dec
mov
inc
and
dec
inc
push
cs
adc
dec
test
mov
sbb
push
dec
sub
adc
mov
jg
xor
cmp
nop
mov
dec
sub
insl
in
pop
pop
cltd
adc
ret
sub
arpl
and
xlat
out
int
mov
and
add
dec
push
sbb
dec
mov
mov
out
cmp
adc
pop
inc
sub
sahf
or
daa
pop
sbb
and
jp
mov
xor
enter
jo
orl
test
movsb
or
int
fistps
xor
jne
mov
add
adc
sbb
cmpsl
les
xchg
jnp
pop
iret
ficoms
insb
add
pop
hlt
lret
adc
pop
hlt
lahf
push
push
inc
loope
add
push
shr
or
mov
and
push
adc
ja
xchg
inc
inc
or
repnz
ficomps
ret
ret
mov
or
xor
jno
movsb
xchg
sbb
es
popf
adc
mov
cmp
mov
inc
lds
mov
mov
and
sbb
scas
in
mov
arpl
stc
sbb
orb
cs
or
cmp
xor
outsb
add
dec
dec
dec
std
push
and
adc
fcomip
daa
mov
dec
gs
push
lea
ret
pop
dec
daa
mov
ret
push
fbld
in
push
divl
push
aaa
mov
or
xchg
cmp
les
shrb
rolb
or
fs
push
push
xchg
mov
adc
push
pop
mov
imul
mov
push
filds
xor
xor
nopl
fldt
adc
sub
cmpsb
sub
pusha
sahf
shlb
dec
inc
stc
test
inc
sbb
inc
iret
push
mov
xchg
xor
add
bound
jg
push
cli
or
xor
and
ret
insl
xchg
sub
mov
add
adc
lahf
inc
adc
sbb
mov
xor
push
adc
add
push
push
dec
pop
push
arpl
cmp
repnz
push
lods
add
je
xor
pop
movsb
ret
dec
adc
push
adc
movsl
and
rcrb
bound
push
lods
dec
sbb
push
xchg
inc
popf
and
cmp
in
xchg
mov
mov
and
fldenv
scas
popa
cmp
and
jmp
push
add
push
and
mov
pop
xchg
xor
jae
adc
andb
jg
test
in
and
or
and
popf
cmpsb
pop
dec
hlt
xor
lock
fcomip
out
daa
ss
ss
es
push
pusha
and
outsl
sub
jg
sbb
loope
pop
hlt
lock
dec
sub
data16
jmp
mov
push
xor
inc
pop
lock
cwtl
sub
and
add
sub
push
dec
mov
or
enter
rolb
dec
ret
push
sbb
rclb
es
sbb
js
mov
inc
rorl
mov
dec
push
jl
or
dec
mov
leave
jo
xor
jmp
sbb
pusha
jno
push
push
push
adc
xor
and
push
add
sub
add
lcall
and
add
sub
es
dec
aas
mov
add
sub
and
add
jne
push
adc
mov
dec
cmp
cmp
xor
pusha
outsb
sbb
shrl
mov
cmp
insl
mov
or
push
push
jae
pop
push
call
sbb
pop
adc
in
dec
fs
shll
jne
dec
adcb
jp
fwait
mov
daa
push
int
pop
dec
popa
inc
add
popf
dec
in
insb
enter
popf
jb
es
mov
call
stos
je
lock
mov
cmp
enter
clc
xchg
jb
jmp
addl
or
fiaddl
sbb
mov
jno
dec
adc
add
pop
xor
and
add
xchg
lcall
leave
cs
adc
or
sub
dec
movsl
xchg
ret
sbb
xchg
mov
sbb
sarb
xchg
add
jl
or
loopne
sub
add
arpl
pop
ficoms
sbb
mov
xchg
subb
pushf
cli
cmpsl
movzbl
mov
sub
inc
das
xchg
push
mov
inc
xor
push
xor
test
sti
ffreep
add
inc
lds
lock
inc
cmpsl
test
add
dec
add
repz
xchg
aas
cmp
movsl
subl
stos
repnz
jae
sub
mov
in
and
sub
add
test
push
xchg
inc
cmp
xchg
mov
lock
inc
js
lea
jmp
xchg
mov
sub
or
mov
pop
stos
or
mov
or
and
jecxz
add
or
jge
add
and
push
andl
jge
or
cmp
sbb
sbb
mov
adc
or
sbb
mov
push
cmp
mov
fcmovb
xor
adc
push
sahf
cmpsl
outsb
push
dec
in
pop
or
adc
push
and
sbb
and
sub
pop
and
and
mov
sarb
mov
jae
mov
or
xchg
jge
movsl
or
and
push
popa
rorb
xor
mov
hlt
pusha
rcrb
pusha
sub
mov
cmp
and
add
ret
hlt
adc
add
adc
shll
mov
shl
testl
xor
cmpb
mov
fsubrs
push
push
inc
jnp
cmpsl
out
dec
pusha
js
test
add
dec
in
jnp
mov
je
inc
lcall
sub
cwtl
shlb
enter
movsb
fmul
hlt
test
or
aam
je
xchg
or
xor
or
mov
or
test
push
push
dec
dec
mov
fisttpl
test
int
push
dec
sub
inc
dec
dec
inc
dec
insl
insl
mov
addb
push
push
xor
mov
dec
jle
rclb
and
inc
jbe
adc
cmp
mov
mov
inc
cmp
insl
jo
mov
mov
xchg
das
inc
in
inc
out
cmpsb
mov
popa
sbb
les
popf
repz
jno
or
adc
sbb
aas
mov
mov
sti
add
mov
mov
lods
roll
divb
mov
dec
sbb
mov
test
jl
push
mov
push
imul
sub
jbe
pop
jb
adc
or
add
loopne
inc
jecxz
ret
je
dec
mov
push
rorl
sbb
pop
iret
cmp
je
in
jecxz
loopne
sub
pop
mov
enter
sub
out
pop
mov
and
adc
loope
xor
cs
outsl
enter
ds
ret
and
adc
mov
inc
jl
inc
pop
adc
repz
xor
sub
mov
jle
mov
aam
fistpl
cltd
popa
jo
and
add
lock
int
sub
mov
push
mov
sub
jno
and
xchg
inc
in
mov
or
ret
and
out
xchg
ret
data16
daa
or
sbb
inc
js
or
ds
cwtl
ret
push
mov
dec
xor
jecxz
je
stc
subl
les
rcll
les
xchg
xchg
out
xor
icebp
repnz
xchg
xchg
xchg
hlt
cmc
div
xchg
xchg
xchg
xchg
clc
stc
cli
sti
xchg
xchg
xchg
xchg
cld
std
call
loope
jecxz
xchg
xchg
xchg
in
out
xchg
xchg
xchg
xchg
call
xchg
xchg
xchg
in
in
out
out
xchg
xchg
xchg
xchg
rcl
rcl
xchg
xchg
xchg
xchg
aam
xlat
xchg
xchg
xchg
xchg
fcomp
fcmovu
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
rol
ret
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
int3
int
iret
xchg
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
movsb
movsl
cmpsb
cmpsl
xchg
xchg
xchg
xchg
test
stos
stos
xchg
xchg
xchg
xchg
lods
lods
scas
scas
xchg
xchg
xchg
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
xchg
xchg
xchg
xchg
addb
xchg
test
push
test
sub
frstor
nop
je
xlat
cmp
ffree
mov
add
fnop
adc
dec
fldt
inc
mov
or
mov
pop
and
andb
or
daa
and
stos
fistps
leave
push
xchg
jo
test
mov
jbe
xchg
pop
cs
and
push
int
cmpsb
mov
or
adc
mov
mov
or
inc
mov
jne
negl
jne
push
push
call
loopne
jb
test
imul
push
add
inc
add
ret
aaa
push
movsb
mov
mov
pop
or
cli
sbb
jb
inc
cmp
mov
pop
mov
mov
dec
adc
bound
push
xor
jmp
aaa
push
jle
cmp
adc
jno
rcrb
sub
dec
mov
jns
add
shrl
sub
cmp
push
push
test
add
fcoms
cmp
aad
imul
mov
sub
bound
add
fcoms
inc
inc
fcmovnb
inc
mov
lods
aaa
cmpsl
fldcw
int3
cmp
rolb
lret
and
xchg
in
dec
adc
fmul
repnz
addr16
sub
ret
lock
sti
sub
test
nop
mov
dec
jge
add
dec
in
adc
dec
leave
and
xor
inc
nop
pop
dec
pop
pop
inc
xchg
mov
xor
cmpb
or
mov
in
int3
xor
clc
mov
fnsave
inc
sub
pop
push
fnstsw
inc
ds
call
inc
fsubs
mov
in
push
lods
fucomp
or
xor
out
xchg
mov
in
xor
call
cld
pop
out
clc
mov
and
pop
dec
adcb
lds
adc
lcall
fbstp
cli
dec
gs
adc
or
xchg
fs
inc
adc
or
adc
push
inc
pop
or
adc
inc
add
or
and
inc
ss
or
rorb
test
rclb
and
dec
or
iret
movsl
or
maskmovq
add
inc
push
or
jns
in
adc
push
xchg
and
add
sbb
push
or
repnz
lahf
imul
push
push
ret
lock
dec
fs
popa
or
jns
jge
adc
jnp
or
mov
inc
outsb
test
add
js
les
enter
or
enter
jae
push
sbb
sbb
out
nop
sarl
movsl
mov
test
cmp
je
cmp
dec
outsl
adc
sub
lcall
xchg
inc
mov
inc
mov
cmp
pop
inc
aaa
or
std
pop
pop
sbb
jns
or
out
inc
jle
add
scas
in
test
pop
or
pop
mov
jmp
pop
ret
ss
jb
and
xchg
mov
or
inc
inc
adc
leave
inc
mov
rclb
or
inc
lds
add
and
sbb
scas
ds
repnz
jb
je
in
inc
je
loope
ss
inc
lds
int3
scas
xchg
add
nop
int3
pop
and
mov
jecxz
mov
pop
push
inc
jmp
sahf
inc
and
xorb
out
rcrl
push
mov
fdivl
add
dec
into
iret
xor
ds
cltd
sbb
scas
mov
or
and
test
mov
in
cmovne
popf
sub
mov
adc
pop
mov
sub
or
data16
jnp
xor
mov
xchg
and
xchg
add
cmpsl
cltd
add
mov
adc
mov
decl
push
add
push
ds
jne
sub
mov
xchg
or
mov
cwtl
xor
clc
lcall
push
aam
popa
outsl
fcoms
push
add
ss
test
fdivl
push
aas
add
lods
adc
and
mov
out
js
mov
push
inc
jp
divl
cmp
push
push
xor
sub
pop
mov
push
jno
xchg
cmc
sub
enter
jl
sbb
xor
pushf
jae
lret
xchg
jnp
mov
pop
ljmp
add
sub
pop
dec
xchg
call
and
pop
or
add
add
lea
cmpsl
adc
push
nop
xchg
pop
and
sarb
push
pop
repnz
stc
adc
jbe
lret
shr
lret
frstor
stos
jmp
xor
pop
adc
insl
cmp
add
and
mov
icebp
fisubrl
inc
ljmp
ljmp
dec
sbb
xchg
shrl
xchg
pop
data16
jmp
push
and
loopne
or
add
jmp
and
and
xchg
sbb
ljmp
or
pop
mov
xchg
adc
jbe
inc
cmpsl
outsl
add
ja
add
cmp
adc
jl
pop
add
xor
in
aaa
xchg
sarb
and
popa
int
hlt
pop
fisttpl
lods
dec
insb
pop
daa
jle
out
das
and
dec
push
and
or
push
xlat
fsubr
call
sbb
mov
sbb
fs
push
les
sbb
nop
cmp
add
pusha
or
or
nop
add
adc
add
nop
add
bound
cmp
movsl
mov
pushf
nop
jle
mov
adc
jl
testl
stc
in
pop
sahf
out
ficoms
dec
pop
fwait
xor
jns
add
or
cltd
pop
fstpt
inc
mov
adc
es
out
sarb
and
incl
shlb
pop
push
pop
jl
iret
roll
jl
pop
pop
shrb
mov
int3
fcomps
out
inc
fdiv
cs
jae
loopne
dec
inc
rolb
lock
lock
imul
and
scas
push
movb
mov
fimuls
js
xchg
mov
inc
push
subb
push
adc
sub
idivl
dec
and
rolb
call
cmp
jo
push
xor
test
out
out
mov
addr16
aaa
sub
pop
movntq
out
jbe
sbb
js
ljmp
or
out
inc
xor
test
and
scas
mov
lahf
scas
dec
pop
pushf
mov
xchg
pushf
cmpsb
jge
shlb
push
dec
icebp
pop
fidivrs
dec
nop
inc
xchg
sub
js
ret
mov
mov
xchg
push
subl
int3
sar
add
adc
idiv
cmc
or
sahf
repnz
repz
fwait
cs
push
inc
push
push
repz
nop
pushf
inc
push
pop
push
sahf
cmpsl
jge
push
mov
pusha
loopne
movsl
gs
jp
mov
iret
pop
and
xor
xchg
insb
cwtl
lds
mov
xor
pop
mov
cmp
pop
add
repnz
add
push
lahf
inc
mov
lds
push
imul
pop
sub
mov
inc
testl
ret
push
adc
push
pop
test
jle
mov
mov
push
data16
nop
lcall
lock
mov
popa
call
stc
pop
fistl
aaa
add
cmp
push
push
push
dec
and
or
or
lret
mov
ss
addr16
jae
xchg
xrelease
add
adc
fdivl
scas
cmpb
push
lahf
mov
hlt
xchg
sbbb
cli
xchg
mov
inc
sub
sahf
add
scas
pop
or
dec
loopne
lock
jnp
fmuls
and
dec
inc
xor
dec
cmpsl
push
in
push
jo
sbb
and
xor
dec
jecxz
inc
hlt
mov
clc
aaa
push
ss
pop
ljmp
xchg
sbb
push
aam
pop
out
lock
xor
cmc
pop
push
push
addr16
leave
bound
ficomps
jecxz
insl
dec
movswl
cmp
or
inc
inc
inc
mov
or
rol
rolb
dec
pop
les
jne
pop
insl
or
int3
pushf
inc
es
or
jne
sub
cmp
test
mov
nop
or
lock
sub
fisttpll
inc
cwtl
sbb
jecxz
daa
sub
les
stos
pop
lock
cltd
or
ret
adc
mov
ljmp
jp
mov
into
loopne
add
or
cmp
jl
xor
add
sub
out
or
sbbl
lea
int
pop
xchg
pop
jno
js
sbb
dec
push
or
adc
cmp
inc
inc
in
add
aam
cmp
cld
fistps
sub
lock
and
inc
sbb
sub
cmp
cld
adc
mov
add
push
jae
iret
and
insl
bound
lcall
ret
ja
mov
sub
xchg
mov
pop
jae
jo
push
rcr
dec
mov
adc
test
std
rcrb
push
push
mov
cmpsl
outsb
int3
add
clc
xchg
xchg
rol
or
or
lret
push
push
mov
or
adc
frstor
mov
jne
inc
push
sar
ss
lea
rolb
ljmp
adc
push
inc
inc
mov
enter
and
xchg
cld
jne
add
scas
xlat
and
fisubrs
cwtl
and
and
inc
clc
test
push
ds
je
mov
mov
or
or
or
ret
insl
dec
add
push
inc
cmp
add
xchg
leave
call
add
notl
cltd
or
sub
test
pop
push
sbb
xor
test
mov
sti
cs
notl
mov
sub
cmpb
hlt
mov
add
pop
and
inc
cli
or
mov
mov
pusha
mov
les
add
jo
ljmp
adc
loope
aaa
mov
ret
push
pop
sub
or
adc
mov
sub
push
mov
pop
shll
or
rolb
adc
xor
push
adc
leave
add
leave
or
cld
lock
rolb
fstpt
xor
je
push
jo
je
add
subb
cmp
add
sub
mov
pop
sub
or
rorb
dec
cld
pop
jbe
cmp
cmc
stos
dec
xor
gs
test
pop
mov
mov
push
inc
push
xor
fisubrl
sub
adc
xor
dec
adc
dec
orl
rol
push
cmpsb
adc
std
cltd
fstl
cmp
mov
push
xchg
mov
push
lahf
adc
sub
push
adc
add
es
test
sbb
sub
or
aaa
or
cmpsl
add
xchg
jb
test
dec
or
jnp
sub
in
inc
rcrb
incl
mov
aaa
fs
add
cwtl
or
push
rcrb
js
into
icebp
mov
lcall
int3
jge
sub
enter
fsts
lea
or
sbb
cmc
mov
icebp
push
xchg
add
iret
cmpb
ret
sahf
adc
cmp
jl
or
jno
lret
inc
sbb
dec
lret
test
sub
into
mov
popf
loop
mov
mov
adc
imul
or
int
sbb
movb
push
clc
das
addr16
cli
inc
jle
inc
nop
adc
scas
mov
add
stc
add
adc
push
sbb
ss
jmp
cmp
rcl
push
or
cmc
jmp
inc
mov
dec
and
cwtl
cli
cmp
jne
movsl
leave
mov
sahf
faddp
pop
stc
std
jle
lds
dec
jae
test
sub
push
push
or
adc
and
dec
bound
je
inc
lcall
jno
xlat
call
xchg
and
and
mov
jmp
mov
sbb
add
cli
push
dec
adc
jno
movb
mov
pop
outsl
pop
or
pop
jl
loope
xchg
add
xchg
std
add
mov
je
xlat
call
mov
imul
nop
lahf
dec
jns
bound
cwtl
pause
lods
imul
addb
xchg
xchg
jl
xchg
repnz
inc
dec
mov
sub
jg
dec
mov
and
sarb
inc
jne
fimuls
das
adc
adc
adc
or
rolb
xchg
das
test
adc
add
jb
jnp
add
sub
aad
inc
fsubr
push
ja
push
bswap
adc
jo
jg
sub
mov
mov
jmp
sbb
cmp
add
dec
imul
inc
jne
pop
push
add
or
push
dec
mov
add
cmp
push
xchg
cmp
inc
imul
add
mov
or
mov
sub
and
movl
subl
add
cmc
rcrb
insl
lods
pop
push
adc
repnz
rcll
clc
popf
call
into
push
enter
push
int
xchg
mov
add
cmp
scas
repnz
and
out
jg
pop
sar
mov
shl
sbb
sbb
shl
cmp
je
pop
bound
pusha
rorb
inc
sbb
sub
mov
and
and
xor
mov
and
icebp
mov
adc
mov
imul
pop
fmuls
leave
je
stos
adc
btr
mov
cli
insb
sti
std
ud0
push
push
inc
adc
pop
jmp
ret
push
jae
mov
push
sbb
clc
lea
inc
push
aad
xchg
xor
ds
cmp
mov
xor
shlb
jl
cli
pop
ja
push
xlat
pop
stos
mov
add
mov
jmp
inc
cmp
jne
inc
decl
jne
les
and
out
addr16
push
sbb
rcrl
nop
mov
call
adc
lods
mov
mov
aam
xchg
lret
leave
jmp
lahf
inc
outsb
scas
sub
or
test
jo
push
jns
dec
inc
movl
sbb
dec
push
out
out
outsb
xor
add
enter
add
adc
push
mov
lods
push
shlb
sbb
icebp
mov
and
cmpsb
pushl
push
xchg
mov
xor
ret
dec
adc
and
and
ret
jle
idiv
mov
stos
push
ja
inc
dec
push
int3
sbb
add
xchg
ret
adc
sub
or
sub
inc
out
pop
push
inc
or
stc
adc
or
enter
or
add
loope
push
int3
inc
add
arpl
imul
ds
pusha
adcb
add
fs
call
out
or
dec
xor
in
sub
out
sbb
xor
aaa
ds
and
jmp
aas
and
add
stc
testb
push
inc
clc
fdivrl
xor
dec
mov
loopne
ret
push
lock
popa
mov
les
fwait
pop
xchg
adc
sbb
ljmp
fisubl
or
dec
or
inc
jbe
mov
pop
orl
pop
ret
add
sub
sbb
jns
dec
mov
rcrl
movsb
mov
imul
mov
mov
enter
sub
pop
mov
das
or
gs
push
cmp
fiaddl
insb
or
or
mov
dec
push
sbb
adc
adcb
cmp
adc
jg
pop
pop
sbb
test
xchg
adc
jnp
sbb
and
adc
push
dec
pop
mov
movsl
add
dec
or
fs
loopne
push
das
cmp
push
and
or
and
and
mov
imull
xor
clc
push
mov
adc
sub
fwait
and
or
add
adc
sub
mov
inc
add
lret
stc
mov
and
popf
lods
and
hlt
leave
jae
xabort
xchg
inc
fldenv
dec
push
clc
inc
inc
dec
cmpsl
adc
mov
push
sbb
push
sbb
enter
fmull
lcall
mov
xor
daa
and
clc
out
popa
add
fs
testl
cmp
add
xor
push
dec
adc
test
xor
jge
jecxz
fs
sub
pop
daa
daa
dec
push
add
adc
pop
and
jge
mov
adc
adc
sti
sbb
mov
js
js
mov
test
mov
mov
xor
nop
loope
addr16
in
adc
ds
or
ja
sub
add
jo
adcb
mov
xor
aam
icebp
gs
in
andnps
pop
xchg
adc
repnz
orl
add
outsl
pushf
roll
dec
sbb
cld
jl
sub
nop
mov
out
mov
xor
or
push
aam
or
outsl
dec
imul
out
dec
fmuls
mov
in
sbb
and
xchg
sub
inc
sbb
clc
and
pop
and
cmp
inc
mov
ss
pop
xchg
mov
cwtl
imul
pop
pop
ss
and
inc
imul
roll
cmp
flds
push
aad
movq
rcrb
mov
push
push
imul
add
call
fs
inc
loopne
psubusw
add
xchg
inc
in
in
out
inc
mov
xlat
cmp
adc
gs
movb
inc
push
or
enter
add
cmp
in
add
lea
lds
mov
and
mov
lcall
sysret
nop
loopne
add
add
rorb
or
leave
fistps
sub
call
and
jo
loopne
inc
mov
movsb
jns
push
or
mov
adc
aas
leave
rolb
adc
insl
loope
ret
ja
aas
cwtl
popa
sub
add
sbb
std
ret
repnz
lea
into
or
push
mov
vpshaq
pop
and
test
sbb
out
and
pop
andb
pop
sub
add
pop
inc
push
ret
adc
inc
sbb
leave
mov
push
jmp
inc
cmp
jmp
fcmovnu
adc
stos
xchg
movsb
daa
xor
dec
repnz
sub
inc
pop
adc
mov
jmp
insb
cmp
mov
and
shrl
adc
xor
adc
push
mov
repz
jne
push
push
sub
push
dec
test
adc
nop
enter
pop
adc
push
cmp
fimuls
lahf
rorb
jne
adc
fisubs
xor
or
jmp
stos
aam
daa
andb
xor
shl
mov
in
icebp
cmp
repnz
roll
imul
popl
rorb
xchg
pusha
add
push
mov
cmp
jmp
inc
mov
rorb
mov
add
lret
sub
pushf
xchg
shr
push
mov
std
cmpb
jne
or
push
enter
jne
lds
xchg
xchg
adc
out
add
scas
xor
xchg
and
pop
arpl
js
mov
jo
stos
adc
cmp
out
add
cmpsb
lock
sbb
cs
pop
push
dec
enter
je
and
loope
adc
sbb
pop
xorb
imul
mov
js
mov
sbb
and
add
sub
pop
push
cmp
fnstsw
subb
or
xchg
push
dec
dec
push
pop
adc
pop
sbb
aaa
arpl
shrl
adc
mov
xchg
sbb
push
dec
adc
xchg
xor
fstps
sub
pop
arpl
xchg
or
dec
cltd
pusha
cmpsl
cmp
lea
and
sbb
adc
or
adc
scas
iret
ret
cmovns
and
jnp
es
iret
daa
outsb
ss
pop
push
aad
ljmp
adc
add
sbb
xor
mov
mov
or
dec
aad
jns
add
mov
cmp
jl
lea
shr
addb
aas
adc
add
cwtl
es
sti
dec
adc
fisttpl
or
repz
fiaddl
jp
mov
and
movsb
mov
mov
int3
adc
popa
push
push
adc
xchg
test
bound
adc
stos
jno
ja
dec
cwtl
jo
add
pop
xor
xchg
mov
pusha
mov
xchg
inc
ja
inc
pop
push
inc
out
mov
outsb
lea
jae
adc
pop
jle
rorl
mov
push
test
dec
adc
mov
xor
push
bnd
inc
push
jb
or
icebp
movsb
and
mov
rol
push
or
sbb
addl
shl
pop
pop
fdivs
lods
adc
lea
dec
add
inc
jmp
es
jne
add
cli
sbb
xor
sub
xchg
bound
push
jns
and
jg
cmp
mov
ret
xor
xchg
push
jge
call
or
outsb
fildl
inc
jge
sbb
jle
and
mov
mov
pop
or
add
adc
cwtl
sbb
sub
add
cld
jne
out
pop
sbb
jne
sbb
dec
jo
add
jo
cmp
mov
pusha
or
scas
test
jae
mov
xchg
jno
adc
das
std
and
cmc
add
jle
cmp
inc
xchg
xchg
dec
pop
mov
jmp
push
jno
push
mov
mov
and
movsl
int
or
mov
pop
scas
mov
aaa
adc
push
and
aaa
xor
pop
cmp
lea
xor
inc
or
ja
xchg
adc
ljmp
inc
lcall
cmp
jle
and
test
rcll
jmp
lcall
pop
sbb
js
sub
icebp
xor
jle
inc
dec
or
xchg
mov
fsubrp
rcrb
xchg
pop
movsb
and
dec
inc
cwtl
iret
and
mov
out
adc
clc
sub
imul
rorb
mov
jmp
out
mov
lahf
mov
mov
in
ret
pop
loopne
adc
fsubr
and
mov
mov
lds
and
xor
hlt
xchg
push
adc
popa
loope
or
cmp
rcll
mov
push
les
sbb
test
call
mov
xchg
lock
jno
loop
xor
mov
cmp
dec
add
adc
outsb
js
and
sub
jnp
mov
pop
adc
sbb
pop
pop
cmp
inc
mov
mov
xor
add
and
jmp
fstpl
jmp
pushf
or
add
add
sbb
mov
addr16
pop
fiaddl
and
adc
mov
jno
movsl
lret
cmpsb
jo
xchg
push
clc
ret
pop
xchg
cmp
pushf
adc
fwait
data16
out
xchg
shrb
adc
adc
scas
mov
xor
pushf
pusha
rorb
cmpsl
inc
xchg
pop
and
cmp
movups
pop
push
lods
inc
push
sbb
xor
fisttps
jnp
clc
mov
pop
xchg
push
mov
push
pop
and
idivl
bound
lcall
cmp
add
mov
mov
inc
lds
push
adc
lock
sahf
push
inc
jne
xchg
and
aad
xor
adc
aam
add
and
or
add
xor
sub
and
shl
push
jo
jo
cmpsl
ljmp
cmp
fisttps
dec
hlt
test
jnp
jle
inc
inc
mov
pop
movsb
xlat
cltd
push
push
add
and
add
add
adc
sub
loop
cmp
jge
and
inc
xor
pop
sbb
or
mov
push
push
or
xor
push
aad
or
push
xchg
js
pop
icebp
inc
mov
imul
mov
adc
pop
adc
shl
bound
dec
jmp
sbb
xchg
sbb
adc
xor
repnz
pushf
ret
out
or
sub
push
outsb
notl
mov
mov
scas
aaa
xlat
and
mov
loope
mov
adc
xchg
loope
sub
and
adcb
xchg
xchg
inc
pop
imul
xchg
push
adc
loope
and
nop
xchg
hlt
and
sarl
je
xchg
jbe
sub
daa
ss
pop
adc
xor
adc
lret
sbb
jns
sbb
rclb
into
or
mov
ja
subb
cmp
sbb
ja
push
ret
pop
adc
push
ret
dec
or
test
inc
insb
and
sbb
mov
mov
or
adc
or
xchg
add
test
cmp
daa
push
bound
push
sarb
adc
shrb
adc
jne
les
mov
cwtl
sbb
inc
adc
or
or
inc
xchg
inc
dec
ret
adc
or
dec
sub
mov
ficoms
inc
jo
inc
or
jne
fimull
aaa
fsubrp
sub
mov
notb
mov
nop
rcrl
adc
mov
inc
and
mov
hlt
sbb
stos
and
push
imul
aam
pop
jmp
add
dec
or
cli
xchg
icebp
out
loop
xchg
scas
jg
adc
xor
pop
and
inc
adc
or
mov
push
lods
jge
mov
or
or
sbb
lahf
sub
adc
cltd
push
xchg
inc
mov
push
and
sbb
or
arpl
outsl
mov
adc
mov
pop
mov
pop
cmpl
cmpsl
inc
lret
loopne
sahf
in
cwtl
mull
mov
pusha
in
fdivs
jle
sbb
insb
in
cld
dec
mov
cmp
addb
pop
insl
ret
loopne
sar
sub
adcb
jl
test
sarl
in
out
mov
aas
dec
add
inc
fcoms
sbb
in
push
sub
pop
movsl
push
pusha
sbb
push
and
cmp
jl
dec
outsb
daa
pop
adc
popa
jb
loope
inc
xchg
sub
mov
daa
es
andw
sbb
fmuls
pop
dec
shlb
sub
xchg
xor
mov
dec
lds
out
pop
and
adc
xchg
std
adc
shll
and
adc
xor
push
or
je
fwait
cmp
mov
insb
xlat
add
and
xchg
stos
sub
lret
dec
inc
jb
js
imul
sub
xchg
andb
inc
xlat
xor
test
mov
test
jae
and
and
xor
jno
movsl
ficomps
test
push
ret
add
adc
psrlw
jge
lock
lock
rorl
test
iret
adc
sahf
push
pop
insl
xchg
xor
outsl
ud0
sbb
mov
sti
dec
sbb
pop
data16
adc
aad
mov
mov
imul
jb
sarb
add
gs
incb
or
cmp
adc
sbb
test
test
aam
outsl
aam
inc
add
or
push
addr16
sbb
cmc
loopne
insb
in
hlt
xor
fldt
add
or
or
shll
cwtl
xchg
ror
bound
aas
add
cmp
mov
push
pop
shl
nop
in
mov
pusha
jl
wbinvd
sub
fstl
lret
adc
cmpb
sub
les
adc
fcoml
xor
add
pop
fptan
adcb
xchg
cmp
lock
cld
sub
mov
test
xor
xchg
push
js
divb
push
or
jne
add
cmpl
sub
push
and
scas
cwtl
sub
or
mov
cmp
xchg
cltd
dec
mov
jge
pop
in
adcb
inc
mov
xor
das
and
outsl
mov
clc
xchg
xlat
clc
arpl
sbb
mov
adc
add
or
popa
test
add
mov
iret
jae
jmp
insb
push
mov
lahf
dec
mov
outsb
inc
mov
repnz
sbb
subb
in
adc
ds
dec
rorb
movsb
orb
pop
and
scas
packuswb
jmp
push
adc
mov
push
nop
incl
test
mov
mov
mov
push
push
add
test
ss
add
cmp
outsl
testb
push
fsts
lret
adc
inc
adc
cmp
lret
call
les
cld
adc
loope
rep
pop
or
jne
or
mov
stos
dec
jns
les
inc
lods
push
push
push
rep
cmpsl
cmp
fwait
out
leave
mov
push
pop
push
inc
daa
mov
pop
inc
addb
stos
mov
push
xor
rorb
js
mov
shrl
mov
mov
cmpsl
lods
add
ret
xchg
and
jne
adc
pusha
daa
mov
add
ret
test
jl
pop
jmp
sub
mov
mov
je
cmp
mov
inc
jb
dec
subl
xor
aad
jg
push
and
sbbl
dec
xchg
add
mov
in
cs
push
pusha
adc
or
mov
ja
dec
fldpi
jge
cmp
sub
shl
fwait
jo
movsb
and
xor
nop
jno
js
or
ja
movsb
push
mov
fisubs
mov
popa
rol
or
ljmp
sub
or
ss
into
out
repz
and
adc
roll
or
pop
dec
sub
cmpsb
nop
inc
push
cmp
sbb
mov
push
and
int
push
xchg
dec
outsl
mov
shlb
pop
pop
mov
adc
push
sub
mov
loopne
adc
sub
inc
sbb
xor
call
push
add
jne
loope
push
pushf
test
xor
pop
enter
push
sub
adc
adcl
mov
jo
fidivrs
out
arpl
pop
xor
les
xor
cmp
mov
mov
pop
cmp
adc
out
mov
je
adc
and
test
int3
pushl
mov
push
idiv
xchg
jle
flds
adc
and
or
loop
pusha
data16
lret
mov
mov
inc
or
and
loope
fstl
jecxz
and
pop
jo
add
lret
or
sbb
loop
fs
mov
adc
sbb
cli
push
call
inc
xor
arpl
jmp
and
cmp
push
enter
movsb
out
sub
pop
push
loopne
loopne
jno
cmp
jg
adc
mov
mov
shlb
sbb
maxps
imul
and
lret
in
popf
rclb
in
loope
add
mov
movsb
pop
aaa
add
cli
push
xchg
out
or
in
add
testb
ljmp
push
pop
clc
cmp
sti
aaa
outsl
enter
xor
pop
out
imul
mov
and
mov
stos
fmull
push
leave
sub
sub
push
mov
add
pop
dec
js
mov
jle
fs
fildl
cmp
fldt
xor
jnp
jo
jle
setp
add
sbb
xchg
mov
xor
jle
pop
jb
adc
sbb
lret
aas
or
or
or
pop
aad
mov
xchg
popf
xchg
and
fisttpl
and
subl
loopne
rcll
cmpsl
in
cmc
mov
add
in
add
add
aaa
and
sub
popf
out
add
push
push
sbb
mulb
adc
dec
pop
pop
aam
test
enter
cmp
jb
jns
movsb
leave
das
sbb
jns
jns
adc
mov
imul
push
mov
mov
addr16
add
add
mov
dec
fimuls
nop
and
ss
cmp
pushf
or
lahf
movsbl
stos
das
xor
mov
out
push
adc
icebp
xlat
mov
cmp
mov
andl
test
mov
test
sub
pop
push
insl
and
test
mov
mov
and
cmp
jne
mov
push
outsb
sbb
movsb
cmp
pop
sub
faddl
jno
or
mov
inc
adc
sbb
xchg
push
dec
or
jne
mov
add
push
into
add
xchg
fsub
mov
jb
es
mov
mov
aam
xchg
lods
sbb
mov
in
popf
js
out
mov
stos
nop
popa
mov
xor
xchg
movsl
mov
shl
dec
dec
jns
cmp
pop
ret
adc
inc
jbe
arpl
out
cmp
movsl
pop
rorb
adc
xchg
sti
loop
add
sahf
decb
ds
jne
xor
sub
adcb
loope
push
movsb
and
sbb
sbb
and
ljmp
dec
jmp
or
sbb
std
add
pop
jne
jge
adc
ret
or
jg
nop
out
sub
adc
add
lds
cltd
rorb
in
jmp
jg
andb
cmc
add
jge
mov
daa
inc
data16
mov
add
pop
push
movsb
lods
push
dec
xor
pop
inc
sbb
or
daa
sahf
jno
jnp
nop
inc
push
xchg
push
push
clc
push
movsl
dec
sbb
fisttpll
movsl
dec
call
mov
and
sbb
xchg
pop
test
imul
push
xchg
add
lock
or
notb
and
jecxz
add
das
adcl
xor
mov
pop
fwait
shlb
cmp
jg
or
mov
roll
call
jbe
fldt
subb
cld
push
add
jns
adc
push
dec
daa
lret
or
xor
notl
cwtl
and
mov
pop
mov
shlb
and
jo
pop
clc
fwait
daa
mov
lock
sub
es
or
inc
daa
ret
dec
pause
imulb
jo
dec
xor
xor
xchg
divb
mov
sahf
push
pop
jmp
cmpsb
push
inc
ret
repnz
lock
push
loop
sti
add
or
and
inc
or
ljmp
adcl
and
in
movsl
jecxz
gs
sbb
add
or
sbb
add
fisubrs
sbb
dec
ds
outsb
xchg
push
aad
sahf
out
push
icebp
sbb
aaa
push
jno
fisubrs
fistpll
inc
aaa
das
inc
push
popa
pop
dec
mov
jl,pt
adc
push
lahf
idivl
movsl
mul
push
dec
sub
pop
xor
cmp
xor
push
push
or
aaa
cmpsb
in
mov
test
cmp
mov
in
sbb
dec
loopne
bound
xor
sbb
mov
jmp
add
cmpb
mov
dec
ret
insb
push
inc
push
inc
mov
rorl
fstpt
fsub
mov
aam
pop
mov
xor
fcomps
mov
stos
xchg
sbb
cs
fidivs
movsl
jnp
push
fcomip
pop
clc
mov
call
cmc
xchg
xchg
mov
mov
dec
xor
out
mov
movsb
add
mov
inc
push
mov
dec
push
push
lock
cli
inc
ljmp
dec
add
cmc
adc
push
addr16
and
xchg
xchg
and
dec
repnz
push
arpl
add
dec
push
adc
or
stos
out
push
lds
sub
xchg
call
jae
in
jge
cld
add
push
and
adc
sbb
pop
pusha
sub
cmp
lret
lods
clc
cmp
cwtl
movsb
jge
test
add
aam
and
mov
mov
test
enter
sub
mov
jnp
or
inc
sti
xor
adc
sbb
mov
and
mov
sub
push
mov
insb
or
jmp
inc
xchg
xor
and
lcall
int3
xchg
and
lock
xchg
arpl
inc
dec
sbb
mov
inc
push
or
xor
xlat
adc
daa
mov
sbb
loopne
shrl
pop
outsl
inc
loope
and
push
xchg
inc
aam
push
inc
xchg
xor
push
das
arpl
mov
inc
inc
icebp
sbb
pop
rclb
or
ret
jp
rol
xor
mov
xorb
adc
add
gs
xor
jg
inc
loopne
stos
ret
jmp
lods
jmp
jo
dec
out
inc
mov
add
push
shlb
add
mov
sahf
add
cmp
adc
pop
ret
divl
sub
imul
mov
jnp
je
addb
push
adc
and
jmp
in
adc
jbe
cmp
imul
mov
dec
pop
and
add
xchg
imul
mov
and
xlat
mov
and
mov
sbb
adcl
add
sbb
movsb
adc
jmp
or
out
adc
and
add
cmp
push
and
push
sub
push
testl
insb
lahf
je
cmp
jg
pop
inc
test
push
movl
mov
add
inc
lock
inc
ds
ss
popa
mov
loopne
xchg
cmp
mov
xchg
inc
shrl
imul
ja
inc
pop
dec
dec
inc
in
sahf
cmpsl
push
pop
imul
fnstsw
pop
mov
out
sahf
testl
repnz
popf
addb
fisttpl
mov
pop
test
sub
add
jg
or
mov
push
push
jmp
lods
ss
pop
sbb
and
fwait
add
or
inc
adc
or
lods
and
fs
xchg
dec
xchg
addr16
loop
in
dec
or
inc
push
insb
dec
iret
pop
pop
or
xchg
inc
mov
stc
xlat
or
sub
inc
enter
movsb
cmp
lds
lock
enter
mov
jl
jmp
in
enter
aaa
cmovns
pop
sbb
cld
push
push
inc
dec
scas
insb
adc
xchg
jae
stos
jnp
inc
mov
xchg
fdivs
sbb
jle
and
push
adc
or
xchg
sub
les
outsb
loope
les
rclb
dec
imul
dec
sbb
mov
pop
xchg
push
xchg
addb
cmp
inc
call
arpl
mov
push
inc
andl
and
in
movsl
jne
cltd
jge
mov
sahf
sbb
xor
inc
sbb
bound
push
sbb
xchg
lret
pushf
add
adc
add
mov
cmp
xchg
into
fwait
cmpsb
addl
out
adc
cmp
sbb
sub
andl
add
add
dec
xchg
test
mov
test
cmp
cltd
push
mov
cltd
mov
fs
imul
movsb
filds
dec
cmpb
jg
lods
xlat
cmpl
jl
arpl
push
in
cmpl
dec
sti
adc
mov
push
add
in
xchg
jmp
mov
mov
int
imul
push
ret
push
xlat
push
mov
pop
mov
mov
or
jg
sarl
aam
js
je
mov
and
shr
sub
adc
mov
sti
sbb
es
sbb
stos
je
push
dec
fs
xchg
sbb
pop
je
adc
dec
adc
call
jae
pop
xor
insb
faddl
xchg
nop
ficomps
adc
dec
in
sbb
mov
pushf
test
cli
sbb
nop
dec
decl
and
xlat
stos
add
lret
dec
jno
mov
ret
fcom
push
push
adc
sbbl
adc
imul
rclb
xor
xchg
ds
daa
daa
call
inc
cld
mov
cld
or
pop
lea
cmpb
mov
fcompl
lret
dec
push
mov
pop
ret
rclb
popa
xor
jl
and
or
add
arpl
daa
fisttps
cmp
add
loopne
test
jecxz
in
aaa
ss
cmp
add
nop
fistps
lcall
fucomp
sub
adc
mov
dec
mov
and
adc
push
pop
adc
jle
push
sbb
xor
xor
mov
and
pushf
dec
push
push
in
fadd
sub
push
mov
mov
mov
inc
cmpsl
inc
popa
jge
jle
sub
or
mov
aas
fmuls
or
push
dec
and
push
lahf
lods
add
and
sub
pusha
test
or
jno
pop
sbb
push
push
cmp
sub
insb
and
inc
lock
cmp
cmp
shrb
fisubl
xor
pop
nop
sbb
adc
fistpl
cs
push
adc
ret
add
inc
lcall
mov
je
jmp
sub
xor
cmpl
out
push
inc
jl
jmp
ss
and
inc
pusha
cltd
call
xchg
mov
lock
movsl
xor
lds
and
fcmovnbe
push
shll
sub
add
ret
adc
fstl
xor
pushf
dec
dec
adc
cltd
mov
pop
add
fmull
fcmove
sti
movsb
add
adc
push
nop
sbb
jns
add
and
and
pop
lods
test
dec
ret
daa
sbb
sbb
insb
xchg
cmpsl
mov
adc
xchg
xchg
adc
loope
test
inc
push
int
ss
mov
adc
movsb
incl
sbbb
into
mov
ja
adc
outsl
mov
xchg
imul
and
xchg
add
pop
mov
push
addb
or
ficoms
sbb
bound
js
push
in
pop
subb
sub
addb
clc
aam
xchg
mov
cmp
adc
mov
fs
jp
xchg
mov
arpl
mov
stos
adc
movsl
test
sub
or
insb
icebp
mov
add
test
nop
sbb
sbb
xchg
adc
leave
adcl
stos
inc
xor
adc
mov
iret
mov
and
jmp
mov
inc
and
stos
shl
in
and
addl
mov
sub
and
or
lcall
dec
and
int3
add
jg
push
push
inc
jo
mov
and
pop
cmpsb
xchg
sarl
repz
incb
add
pop
add
and
outsl
push
add
pop
pop
fisttps
fldt
inc
inc
jns,pn
sub
arpl
mov
push
jmp
xchg
je
movb
jo
movsb
call
cmp
jne
rol
sbb
pop
cmp
inc
out
mov
mov
jp
mov
push
push
dec
add
dec
adc
or
call
ret
lods
mov
dec
cli
inc
dec
int
mov
cmpl
scas
fdivrs
adc
and
fldl
sub
subb
dec
scas
loope
add
je
outsl
jo
sub
inc
or
adc
push
push
mov
ljmp
sahf
xchg
jnp
adc
jmp
sbb
inc
stos
sbb
xor
and
mov
inc
cmpsl
imul
nop
bound
push
or
adc
adc
pusha
xlat
or
rclb
dec
bound
xchg
adc
xchg
sbb
sbb
nop
pop
loop
fs
sub
mov
jmp
or
and
xor
and
dec
sub
pop
cmp
inc
ret
and
aas
adcb
dec
test
lret
push
inc
les
pop
popa
or
aam
add
sarb
test
adc
bound
inc
xchg
cmp
xchg
xor
dec
sbb
push
dec
cmp
xchg
push
push
sbb
mov
and
pushf
cmc
cmp
inc
mov
or
rorb
sub
lea
or
adc
adc
adc
inc
xchg
rclb
andl
adc
push
leave
adc
mov
cmpb
dec
xor
push
fidivs
jb
push
ja
xchg
out
xchg
cli
sbb
sbb
xchg
xchg
pop
inc
sbb
cmpsb
xchg
add
xchg
rorb
fidivrl
fsts
rorb
movsb
and
inc
dec
mov
dec
mov
dec
adc
pop
aas
push
and
and
fnsave
cmp
aaa
ss
dec
test
xor
add
loopne
push
popa
xlat
sub
add
sbb
cmp
stos
shl
xor
mov
cmp
dec
mov
dec
inc
push
ret
iret
ret
lahf
popf
ret
sbb
xlat
es
sbb
fcmovnb
and
adc
jg
mov
int
imul
and
xor
xor
adc
or
loop
push
inc
adc
sub
dec
fsubl
dec
inc
add
inc
push
push
adc
add
jmp
xchg
add
pop
mov
aam
incb
cmpsl
xor
test
xor
or
lret
js
dec
orb
add
iret
dec
adc
jl
xor
dec
inc
pop
fiaddl
repnz
or
fisubrl
in
or
rcrl
out
out
sub
adc
and
mov
or
cltd
cmp
jne
add
lods
mov
xor
add
and
insl
sbb
aaa
nop
push
rol
push
xor
xchg
pop
mov
mov
movsb
and
pop
insl
and
push
inc
mov
or
or
add
or
mov
xchg
or
adc
loop
fnstenv
popa
insb
mov
jg
out
sti
and
jbe
jle
mov
outsb
inc
pushf
jle
dec
test
add
pop
hlt
test
inc
mov
adc
lock
cltd
add
push
in
inc
fcomp
imul
push
daa
gs
add
push
dec
push
adc
pop
fadds
dec
xlat
pop
xchg
push
and
or
andl
orl
jns
dec
jp
repz
sub
inc
rorb
cmpsb
sbb
cmpl
imul
cmp
inc
xor
add
mov
mov
jno
xor
inc
adc
add
or
sbb
in
jb
inc
dec
aad
adc
ss
ds
ret
fwait
mov
cwtl
loop
orl
sbb
lods
inc
ja
add
pop
add
addr16
pop
push
dec
sbb
idivb
dec
cmp
add
push
rorb
or
shlb
and
dec
jb
sbb
das
mov
sbbl
subl
das
pop
xor
lds
daa
lcall
cmp
fdivl
and
push
ret
push
out
cwtl
inc
sahf
iret
nop
pusha
inc
clc
adc
push
push
or
or
add
in
or
xlat
scas
inc
and
cld
incl
out
ret
pop
int
mov
lds
mov
dec
pop
mov
push
imul
jg,pt
jo
push
dec
add
not
andl
or
loopne
inc
sbb
mov
test
and
ljmp
adc
jb
movsl
fists
or
ja
and
pop
ja
xchg
or
mov
push
sar
clc
sub
nop
outsl
fiaddl
bound
push
push
mov
sub
jp
inc
inc
rolb
mov
inc
dec
adc
inc
repnz
inc
inc
ja
xorb
or
push
cvtps2pd
or
sbb
push
call
add
addb
repz
add
inc
clc
push
sub
jns
dec
je
adcb
shrl
mov
cld
jl
jnp
mov
fimuls
push
hlt
push
ss
test
mov
aas
jb
lods
ret
jle
pop
sub
scas
and
and
add
add
pop
jo
call
sub
test
or
test
call
push
xchg
push
xor
test
push
sub
lret
add
lods
jge
add
test
mov
ss
js
push
in
add
adc
cwtl
or
les
jle
test
movsl
subl
mov
cmp
cmp
push
add
adc
ss
adc
or
jns
push
lret
imull
mov
xorb
cwtl
push
rcl
test
fldl
pop
xchg
rcrb
jns
sbb
test
dec
sbb
jns
ja
pop
jns
adc
inc
add
and
mov
add
cltd
xchg
inc
leave
push
add
push
test
popa
leave
and
inc
push
inc
and
sbbb
and
adc
mov
pop
dec
addb
mov
in
clc
inc
subb
add
lods
andl
pusha
inc
sub
or
mov
xor
add
pop
mov
imul
aad
arpl
and
push
sub
jp
push
cmp
push
pop
mov
xchg
rorb
add
je
js
sub
test
js
sbb
es
outsl
dec
ss
lahf
js
imul
jno
adc
and
ljmp
repnz
pop
in
out
out
xchg
cli
scas
pop
in
bound
outsl
push
push
adc
ret
jl
adc
fistps
sub
dec
jl
test
fistps
push
mov
xchg
outsl
or
push
out
fiadds
hlt
cmp
mov
and
fs
fcmove
in
and
pop
sub
gs
sub
xlat
icebp
xchg
sub
addb
mov
adc
xchg
and
mov
shll
or
add
test
mov
inc
sbb
lea
call
mov
movl
inc
cmp
pop
cmp
inc
adc
jl
popa
pop
adc
es
cmp
pop
or
xor
and
xor
sbb
push
lds
sbb
scas
lea
ljmp
mov
pop
push
jl
mov
pop
sarb
sbb
mov
cmp
pop
push
or
aaa
fnstenv
push
lcall
xchg
addr16
fsubrl
aad
sub
nop
icebp
add
leave
jb
fisttps
ja
orb
jle
adcb
sbb
pop
xchg
pop
mov
sub
add
add
lahf
ror
pop
and
cmp
je
or
xchg
add
roll
js
and
dec
pop
pop
enter
pusha
popa
add
lds
xchg
push
cli
mov
xor
mov
iret
test
sbb
or
jbe
rol
bound
js
rorb
pop
out
push
jno
sub
fwait
cmp
mov
movsb
sub
je
jno
xlat
pop
jmp
adc
sbb
movsb
adc
imul
xor
mov
sti
cmp
pop
and
enter
add
lret
inc
imul
insb
sbb
out
scas
stos
dec
lock
stos
adc
out
xor
dec
jb
sbb
mov
jne
pop
dec
sbb
push
stos
mov
hlt
shr
movsl
aas
add
xchg
or
cmp
loope
mov
popf
or
xor
insl
in
sbb
mov
sub
les
push
rorb
xchg
pop
fs
xor
mov
cmp
call
jb
adc
adc
inc
adc
sbb
adc
xchg
aad
rcll
adc
mov
fldenv
adc
push
push
or
es
xor
add
addl
lret
dec
addb
pop
adc
pcmpgtw
stc
in
adc
test
cmpsl
pop
outsl
mov
mov
xchg
stos
test
adc
xchg
sub
mov
dec
pop
aad
cmp
adc
cmpsl
dec
sub
addr16
test
mov
or
and
add
push
adc
push
scas
nop
dec
mov
test
lods
sar
mov
add
jb
daa
adc
inc
mov
push
fs
icebp
inc
lcall
inc
pop
rclb
mov
inc
fadds
or
test
push
pop
lret
xchg
inc
pop
push
or
add
shlb
push
pop
pop
or
mov
adc
jmp
inc
push
mov
mov
push
mov
adcl
mov
xor
scas
add
cltd
es
es
jo
adc
enter
xor
in
xchg
dec
jnp
adcl
jge
push
mov
jmp
dec
mov
xadd
mov
cwtl
nop
xchg
sbb
sti
push
call
sbb
sbb
jo
sarl
push
les
push
add
lea
lock
add
lea
push
cld
mov
adc
imul
add
and
test
mov
ret
sbb
sbb
inc
sub
or
xchg
inc
clc
stos
sub
fsubs
in
or
pushf
dec
icebp
sub
sbb
sub
das
jp
shrl
sbb
and
shlb
adc
mov
pusha
push
add
push
add
inc
and
and
xchg
mov
push
inc
fdiv
nop
andb
mov
inc
adc
movsb
mulb
lret
pushl
in
shrb
add
xor
push
xchg
push
mov
loope
dec
lcall
aam
fildl
xor
xchg
sbb
sahf
bound
mov
jmp
loopne
aad
jp
sub
enter
imul
adc
adc
aam
subb
and
sbb
lock
dec
addr16
add
movsbl
out
das
sbb
sub
adc
sub
dec
loopne
out
rcrb
xchg
in
adc
jge
mov
dec
fsubrl
and
sti
jns
add
mov
cmp
stos
mov
clc
hlt
pop
lcall
push
test
hlt
int
and
xor
rcrb
add
push
ret
xor
mov
hlt
and
jne
sub
adc
iret
mov
bound
dec
das
push
cmp
and
call
jne
dec
add
mov
inc
mov
pop
lods
dec
sbb
mov
jecxz
dec
adc
add
mov
jg
mov
inc
loope
sbb
add
sub
stos
sbb
mov
adc
ficompl
ret
imul
test
add
push
dec
hlt
inc
or
or
or
and
mov
sbbl
jno
jp
sbb
sbb
cmp
xor
mov
ret
test
sub
rorb
adc
add
adc
andb
cmc
xchg
xor
adc
pusha
test
jae
xchg
rcr
mov
dec
test
mov
addb
nop
inc
pop
cmp
dec
inc
pmullw
xorl
push
cmp
addl
in
enter
setb
xor
push
rcll
sbb
aaa
fldl
das
sub
pop
sub
sub
adc
subb
pop
and
jne
fldcw
fprem
sbb
movsl
sub
mov
adc
mov
push
sub
ret
das
enter
push
gs
xchg
or
fiadds
icebp
sbb
cmp
lock
xchg
and
inc
push
bound
dec
inc
stos
pop
mov
aam
insl
je
cmpsb
test
push
fwait
or
cmp
ret
test
sahf
std
dec
push
add
and
and
inc
pop
push
xchg
dec
ss
scas
mov
not
arpl
add
into
ljmp
push
sub
rclb
int
push
xchg
ffreep
mov
mov
mov
add
into
mov
xor
insb
inc
call
incb
clc
lock
add
and
push
sbb
es
popa
je
add
push
cmp
and
or
jns
dec
clc
shlb
subl
push
mov
dec
pusha
stos
loopne
cmc
xor
xor
add
cmp
or
cmp
mov
pop
pop
stc
dec
daa
js
mov
aaa
sbb
mov
cmp
sub
mov
repnz
insl
test
in
fstps
shll
js
pop
and
stos
jo
mov
sbb
rcll
popf
and
fwait
out
insl
or
fs
push
out
loope
test
imul
cmp
iret
out
mov
je
inc
mov
test
jae
jae
iret
ficoms
add
and
outsl
push
data16
xchg
mov
popf
jp
insb
test
mov
adc
jmp
and
push
mov
xor
add
lea
cmp
xor
add
mov
lret
sbb
cltd
loope
imul
xor
jo
inc
bsr
shll
mov
xlat
xchg
xchg
notb
dec
xor
outsb
faddp
xchg
fdivrp
sbb
or
nop
xchg
sub
das
cmp
mov
adc
adc
inc
sbb
push
cmp
inc
ds
xor
xchg
das
clc
push
and
or
jnp
jbe
mov
sbb
dec
mov
hlt
lods
fldenv
inc
stos
test
pop
mov
xor
fidivl
mov
push
or
test
cmp
push
pop
sarb
or
psrlq
jl
jg
aaa
in
dec
push
add
or
pop
jbe
inc
and
sub
popa
inc
or
or
add
and
out
pop
in
or
sbb
cs
xor
lahf
gs
je
pop
movl
inc
add
insb
or
sbb
in
sub
and
imul
fisubrl
in
and
push
adc
adc
xchg
movsl
and
lock
dec
outsl
and
inc
sbb
and
popa
push
and
or
lods
pop
out
jp
daa
mov
lcall
fmuls
push
pop
jnp
mov
inc
dec
iret
sub
jl
mov
mov
mov
inc
fs
push
xchg
push
fs
push
jo
pop
sub
or
add
dec
xchg
or
mov
lret
jne
pop
ret
inc
add
push
cmp
iret
leave
dec
and
push
leave
jae
pushf
sbb
pop
inc
ds
iret
adc
add
or
mov
add
sbb
bound
xchg
subb
push
fcom
mov
addb
sbb
sbb
mov
xchg
sub
sbb
xor
aaa
add
icebp
xchg
test
pop
test
lret
sbb
divl
mov
sub
cwtl
sti
or
mov
jb
mov
test
ja
pop
inc
add
mov
cmpsb
testb
movsb
movb
test
dec
and
inc
xor
vmwrite
cs
and
xchg
inc
mov
nopl
loopne
pop
pop
hlt
jbe
cmp
pop
pop
push
jmp
cmp
je
ret
shlb
inc
dec
inc
dec
adc
jae
or
push
or
push
lahf
or
aaa
inc
lods
sbb
sbbb
jb
push
push
or
xor
and
je
add
push
sbb
lret
xor
adc
xor
mov
xor
aaa
xchg
call
pop
inc
roll
adc
adc
xchg
lea
sub
sbb
cld
in
pop
or
pop
aad
in
andb
and
pop
jae
add
dec
jmp
xchg
mov
push
les
in
xchg
push
out
shr
sub
add
or
cli
jmp
aad
mov
push
adc
mov
adc
test
daa
in
push
call
xor
push
inc
subl
rcrb
pop
xor
mov
xor
rcrb
and
subb
dec
mov
pop
mov
das
xor
in
test
xchg
insb
sub
pop
test
insb
push
arpl
aad
addr16
adc
cld
arpl
xchg
lock
loopne
jl
xchg
cltd
or
std
outsl
and
lea
lea
xor
add
sarl
dec
jb
push
push
push
aas
xchg
xor
popf
flds
inc
dec
push
push
dec
inc
pop
scas
test
nop
xchg
and
sbb
mov
and
orps
sahf
push
and
and
mov
add
xchg
push
stc
in
jne
mov
mov
mov
test
push
pop
ss
pop
or
test
test
sub
jns
in
dec
push
mov
dec
andl
jmp
sbb
mov
and
mov
push
sub
dec
mov
jne
xchg
out
add
inc
dec
mov
push
push
push
test
dec
push
outsb
jne
or
jns
add
fcmovnb
jae
mov
pop
xor
out
movl
pusha
enter
pop
sahf
cmp
test
lahf
lret
clc
jo
xchg
ret
mov
adc
push
addr16
push
cmp
jl
and
dec
mov
push
jns
das
push
sub
loope
mov
adcl
sbb
and
add
stc
addr16
push
dec
mov
mov
sbb
adc
mov
es
xchg
lret
outsb
push
inc
rclb
gs
mov
xor
mov
sysenter
inc
mov
je
dec
inc
pushf
xchg
sbb
in
nop
inc
xchg
mov
adcl
dec
movsl
xor
pushf
ret
push
sub
clc
in
enter
inc
movsb
xchg
inc
push
fs
test
test
in
sub
pop
lret
dec
sbb
arpl
pop
mov
push
inc
daa
push
sub
lock
aaa
mull
push
push
das
push
and
mov
dec
fsubrs
mov
sub
pop
das
rcrl
lods
xchg
or
jae
daa
mov
push
fistpll
popa
lea
cmp
xchg
mov
lea
jp
jg
mov
test
add
sbb
enter
nop
and
adc
and
mov
adc
rclb
pop
rcrl
push
push
notb
lods
mulb
mov
fnsave
push
or
xchg
movsb
popa
jbe
es
mov
mov
add
push
mov
test
or
loopne
bound
mov
push
popa
xchg
and
inc
movsl
push
xchg
mov
iret
repz
or
adc
sbb
punpcklbw
and
push
loope
imul
imul
addr16
push
movsb
xor
out
shlb
mov
ljmp
sbb
pop
popaw
pop
test
enter
fwait
shrb
sbb
push
inc
jb
hlt
sar
and
sti
pop
mov
pop
hlt
xorb
or
pusha
push
mov
mov
dec
push
push
dec
pop
inc
ret
inc
dec
test
mov
and
dec
push
inc
push
dec
pop
and
push
mov
pop
sub
push
inc
mov
fs
dec
pop
dec
loop
orb
or
xchg
adc
rolb
jb
add
dec
aam
enter
fadds
mov
and
and
in
loopne
cltd
in
sbb
and
leave
add
in
add
pop
call
jb
xchg
in
or
xchg
or
in
int
xor
xchg
lock
sti
sub
das
push
push
ss
fs
mov
adc
xor
jmp
addr16
sbb
and
cmp
add
mov
jb
mov
mov
jb
jb
je
jb
jb
jbe
js
jb
jb
jp
jl
jb
jb
jle
pusha
popa
jb
jb
bound
gs
jb
addr16
jb
jb
imul
jb
outsb
outsl
push
push
jb
jb
push
push
push
push
jb
jb
push
push
pop
pop
jb
jb
pop
pop
pop
pop
jb
jb
pop
pop
inc
inc
jb
jb
inc
inc
inc
inc
jb
jb
inc
inc
dec
dec
jb
jb
dec
dec
dec
dec
jb
jb
dec
dec
xor
jb
jb
xor
xor
jb
jb
ss
cmp
repnz
scas
sub
add
xchg
add
add
inc
cs
mov
xor
inc
ljmp
push
mov
sub
cmp
gs
mov
xor
mov
js
pop
inc
insb
outsl
inc
mulb
add
or
je
or
sub
or
inc
js
add
sti
lahf
pop
adc
or
jge
xchg
push
mov
dec
mov
jns
lahf
lock
cmp
les
or
jge
test
cmp
sbb
or
sub
jbe
inc
imul
xor
scas
push
add
clc
inc
dec
or
ljmp
out
gs
test
push
pop
add
and
adc
add
jae
xchg
inc
pop
jmp
fs
inc
jbe
imul
cmp
fidivrs
inc
aas
adc
inc
dec
inc
dec
cli
in
jp
mov
lock
fwait
dec
imul
jge
orl
dec
adc
xchg
mov
adc
xchg
push
or
mov
sub
pop
je
test
xchg
mov
mov
xlat
rep
inc
dec
cli
inc
loopne
out
mov
nop
dec
and
add
ja
push
and
mov
popf
das
jbe
pop
movsb
xchg
push
sub
jge
xlat
push
and
mov
lahf
xchg
lods
or
push
xor
xchg
sub
xor
adc
push
sub
push
pop
fdivr
cmp
jg
cmp
jl
or
jg
dec
stos
xorb
cmc
test
jb
rep
jmp
dec
out
ja
scas
inc
mov
loop
unpckhps
sbb
shlb
or
pop
jbe
dec
leave
jmp
ret
or
mov
mov
rorb
test
jl
dec
pop
pop
mov
mov
cs
stos
or
jne
or
das
fmuls
push
or
pusha
mov
stos
xchg
push
mov
adc
pop
outsb
xor
xor
xor
test
fxch
pop
jmp
cmp
jne
pop
in
mov
inc
cli
adc
mov
cld
cmp
fisttpl
clc
dec
lock
rorl
div
mov
inc
sbb
or
push
popf
loopne
xor
xor
ljmp
jo
je
inc
jne
push
dec
jne
ret
mov
movsl
jge
inc
mov
inc
add
cmp
jbe
mov
add
lea
sub
inc
and
lock
push
cmp
push
cmp
add
out
andb
jle
mov
pop
pop
inc
loop
scas
xor
pop
mov
mov
div
jl
test
sub
sub
and
adc
and
sub
mov
sub
sub
out
xlat
cltd
sbb
and
sub
ds
into
mov
push
xor
sub
and
hlt
xor
lahf
inc
cs
cmp
fsts
call
pop
or
sub
add
jmp
mov
mov
and
pcmpeqd
or
sub
es
int3
sub
add
test
xchg
sub
cmp
lock
mov
and
jle
jno
imul
and
ret
dec
ret
push
das
jecxz
pop
hlt
cmp
or
sub
cmp
sbb
and
and
fistpll
push
out
loop
mov
push
add
inc
sbb
lock
xor
les
imul
out
or
cld
cmpsb
mov
filds
mov
clc
add
sahf
and
xor
jns
cmp
je
cmp
je
mov
je
cmp
je
xchg
je
inc
sarl
inc
inc
jmp
sar
imul
lret
jp
shrl
mov
cmc
inc
mov
lods
sub
stc
fisubrl
mov
lods
mov
in
imul
cmp
enter
dec
inc
pop
ret
scas
insl
pop
ret
xlat
shrl
sbb
push
es
adc
lcall
jg
push
add
jb
scas
push
lret
lock
pop
mov
jne
cmp
repz
daa
and
out
push
cmp
and
push
inc
dec
outsl
cmpb
inc
aam
jmp
insl
sub
std
data16
xor
incb
sub
mov
adc
pusha
mov
das
inc
gs
mov
sbb
cld
mov
lcall
mov
sub
sbb
call
fcmovbe
jmp
imul
mov
adc
inc
push
inc
cmp
dec
and
hlt
loopne
xor
mov
mov
mov
stos
scas
cmpsb
ljmp
dec
xchg
lret
jge
nop
rol
cmp
stc
bnd
mov
sub
mov
dec
and
sbb
inc
shll
push
stos
and
add
movb
sti
scas
fsubr
mov
sub
rclb
or
clc
adc
je
dec
shrl
push
fabs
ret
icebp
add
mov
jl
fcomp
fldl
cmpsb
outsb
add
je
fidivl
pop
add
outsl
dec
fbstp
lea
inc
fwait
mov
mov
mov
in
add
ret
push
mov
stos
jbe
add
jns
cmpb
or
lcall
call
jae
cmpb
jb
movb
mov
or
ja
jmp
data16
dec
xor
mov
mov
pop
add
push
inc
icebp
loopne
clc
rcr
jecxz
ljmp
ret
sbbb
enter
incl
cmp
idivb
neg
neg
sbb
int
xchg
lret
out
hlt
add
fmuls
aam
pop
xlat
inc
sub
sbb
jae
dec
add
dec
inc
jo
fildll
outsl
fdivs
mov
fidivl
cld
or
fwait
or
jne
mov
decl
and
jne
dec
jne
jmp
mov
add
stos
aas
mov
inc
or
mov
adc
sub
pop
test
aas
mov
divl
mov
pop
sbb
mov
test
std
push
lock
fclex
mov
sub
inc
mov
mov
cmp
imul
into
daa
dec
push
mov
cmp
insl
outsl
js
or
into
je
sub
cmp
inc
push
sub
pop
add
test
dec
shlb
sbb
incl
fcompl
add
aas
jmp
fstpt
fstsw
test
inc
cld
mov
sbb
push
adc
or
lods
fbld
add
and
sub
add
lret
sub
icebp
jae
fimull
movsl
sub
mov
xchg
gs
je
jg
es
push
inc
imul
push
cmp
xchg
add
aaa
add
stos
adc
cmp
or
leave
add
aas
or
xor
ret
daa
mov
push
mov
mov
xchg
jno
add
lret
and
push
xor
lods
nop
dec
mov
xchg
iret
push
inc
lahf
push
inc
in
cmp
dec
jle
xchg
push
aas
mov
sub
rclb
lds
add
mov
mov
mov
pushf
mov
mov
mov
nop
xchg
lds
sub
shrl
shll
fs
adc
xchg
cwtl
and
pop
in
or
add
std
pop
and
inc
imul
nop
mov
lret
adc
and
sub
push
jmp
add
test
xchg
data16
mov
xchg
stos
sub
popa
je
shlb
push
in
inc
mov
push
or
adc
adc
scas
movb
push
insl
jle
subb
shrl
mov
fsubrs
or
stos
mov
andb
pminub
movswl
mov
push
icebp
mov
andb
mov
popa
lds
roll
add
jb
or
cmp
pop
dec
inc
fs
adc
sbb
adc
fisttpll
movsb
mov
or
gs
cld
scas
cld
and
jp
inc
out
add
pop
mov
xchg
rorb
sub
push
mov
ds
imul
sub
or
or
sub
sub
sbb
jp
sbb
dec
insb
insb
push
pop
enter
pop
arpl
mov
mov
mov
data16
and
add
aas
push
xor
mov
scas
adc
mov
fists
incb
jp
data16
pop
iret
mov
mov
add
inc
lods
addr16
or
add
xlat
push
or
pop
add
fcomps
daa
push
movb
inc
lock
adc
repnz
lds
inc
insb
jne
sub
rcrl
adc
inc
test
adc
addl
jns
ljmp
and
add
pop
pop
inc
loop
mov
rorl
or
ss
ja
stos
sub
dec
cld
jnp
xor
sub
push
mov
popl
pop
xor
adc
xchg
mov
imul
mov
dec
imul
add
pop
or
pop
shrl
dec
sbb
clc
adc
mov
add
sub
pop
mov
mov
loopne
or
mov
mov
add
push
cmp
ja
sub
mov
push
push
inc
inc
repnz
pop
add
lea
outsl
decl
xor
xor
and
shr
add
cmpsl
jne
mov
repz
jne
inc
sbb
and
inc
outsl
inc
or
testl
cmpb
shll
dec
cmp
dec
je
mov
cmp
push
fisubrl
mov
or
add
push
lcall
and
sti
je
movzbl
add
sub
jp
shlb
pop
lcall
xor
pop
or
popa
push
dec
add
ret
pop
xchg
adc
sbb
fiaddl
mov
sub
addr16
sbb
filds
xchg
xchg
ret
pop
cs
add
mov
add
shrl
inc
push
in
push
push
adc
mov
das
dec
test
fisttpll
fiaddl
cmp
jbe
mov
sbb
or
test
mov
cmova
sub
or
push
adc
psrlw
jle
add
inc
inc
fs
orl
aad
imul
sbbl
add
cmp
inc
pop
xchg
mov
dec
or
or
mov
adc
sbb
loop
hlt
pushf
fsts
cmp
int
mov
outsl
xor
pop
inc
dec
mov
add
mov
fimull
je
jae
cmp
sbb
sub
mov
lods
cltd
mov
ret
adc
or
lahf
pusha
or
jae
sbb
aad
cmp
jo
mov
inc
xorl
add
mov
pop
cli
xor
adc
shll
mov
xchg
xorb
and
test
addr16
mov
xor
push
iret
push
add
jo
leavew
inc
jge
add
mov
add
call
lock
call
mov
enter
adc
mov
sub
ss
dec
xchg
xor
pinsrw
das
and
xor
les
orl
sub
mov
cmp
sbb
sub
sarl
stos
xlat
mov
jg
incb
roll
dec
push
sbb
jle
aam
xor
je
cmp
popf
jbe
mov
dec
or
iret
fidivs
and
sub
mov
pop
mov
dec
push
mov
inc
xor
dec
mov
gs
push
or
fadds
xorb
push
inc
sub
push
adc
xor
and
mov
add
loope
add
or
fidivrs
sub
dec
lods
loope
aas
clc
not
and
mov
aad
pop
fwait
add
loopne
push
test
imul
sbb
and
je
jae
sub
fnstcw
pop
pushl
xchg
push
mov
and
push
in
inc
pop
dec
imul
cmp
shrb
adc
or
push
ret
push
add
adc
add
add
jo
jns
insb
mov
outsl
gs
lods
es
ljmp
add
lds
outsl
lret
sub
dec
dec
dec
bound
movsl
mov
movsb
mov
mov
nop
dec
mov
push
dec
pop
cmp
pop
sub
cmp
push
sbb
cmp
push
xlat
push
int3
adc
jmp
dec
dec
push
inc
push
or
xchg
or
cmpb
add
mov
and
fdivp
and
dec
push
and
mov
jo
lea
push
jo
jmp
pusha
rcll
mov
xorb
jg
out
xor
shrb
fnstcw
adc
dec
mov
cmc
cmp
inc
and
hlt
clc
cld
loopne
inc
js
cs
insl
inc
push
xchg
fs
mov
outsb
loopne
sbb
in
je
enter
test
add
ret
aaa
aaa
mov
sbb
adc
or
mov
and
scas
mov
cmp
cmp
jmp
inc
dec
loopne
adc
je
movl
ret
lea
jmp
lcall
std
and
add
test
testl
out
sarb
rorl
clc
lea
dec
dec
or
dec
adc
push
cmpsb
inc
sub
pop
and
enter
pop
fldcw
pop
push
or
movsb
sbb
sub
jno
iret
push
ds
call
push
aas
xor
xor
repz
mov
mov
shrb
xor
aaa
dec
ss
or
flds
and
cmp
adc
clc
call
loope
fisttpl
ljmp
push
lods
jno
lods
mov
pop
mov
hlt
mov
jbe
or
clc
dec
push
cmp
mull
inc
cld
xchg
out
cltd
loopne
je
inc
mov
push
push
arpl
in
decb
cs
mov
pop
sub
jbe
sbb
pop
test
xor
lods
pushf
adc
pop
mov
jne
movb
das
inc
cmp
inc
sbb
and
mov
xlat
test
add
add
cmp
xor
dec
push
inc
xchg
cmpsb
push
mov
xor
adc
cwtl
cwtl
shlb
xor
mov
pop
jbe
mov
das
add
mov
inc
pop
sub
inc
push
and
adc
add
fdivl
iret
lcall
sub
pop
lea
ja
sbb
sbb
pop
mov
jp
jle
movsb
into
add
cld
xor
fwait
out
push
cmp
sub
lods
mov
adc
repnz
hlt
pusha
jmp
mov
lret
bnd
shlb
addl
add
pop
lock
sbb
or
clc
cmpsb
pop
insb
jg
enter
adc
mov
test
jns
mov
jne
push
push
inc
shll
sbb
mov
jae
std
icebp
mov
and
cwtl
or
lret
add
mov
xchg
or
xchg
mov
rep
sbb
lods
cmpsl
ret
push
test
mov
mov
sub
mov
jb
cmp
imul
xor
mov
add
gs
sbb
add
pop
push
jb
popa
push
out
inc
and
inc
add
je
dec
std
outsl
or
ret
and
mov
mov
cmp
pop
and
sti
dec
and
add
and
xchg
mov
push
lahf
cmpsl
jge
push
in
stos
mov
mov
das
pop
cs
push
push
cmpsl
cld
xchg
xor
mov
push
clc
fcompl
cmp
fsubrl
sarl
inc
dec
push
call
adc
fisttpl
inc
mov
push
je
xor
and
fdivr
inc
daa
adc
add
pop
or
push
test
dec
mov
arpl
jne
inc
push
inc
push
cmp
sub
xchg
pusha
xor
jb
push
pop
add
imul
fs
xor
rcr
cltd
or
jne
lea
jp
pusha
test
or
jbe
sbbl
mov
scas
sbb
ret
sbb
adc
mov
aad
xor
neg
or
lds
push
jne
int3
lahf
xchg
push
and
pmulhw
cltd
jns
loope
shll
pop
icebp
sub
stc
sbb
pushf
fnstcw
leave
inc
mov
lahf
and
mov
shrb
add
or
in
sub
xchg
outsb
lock
test
aaa
es
jmp
addr16
divb
pop
rcrl
cmp
ja
mov
lahf
pusha
or
imul
lcall
pop
ds
inc
cmp
movsl
adc
pop
fisubrl
mov
mov
add
inc
je
mov
fsubp
fwait
outsl
or
je
mov
inc
je
mov
dec
je
dec
pop
psraw
jp
mov
addr16
mov
lock
jbe
leave
ss
lods
test
mov
dec
sub
pop
clc
adc
xchg
push
sub
sbb
xchg
add
std
xchg
iret
xor
mov
ret
push
sti
pop
xor
scas
pop
lahf
and
stos
add
orl
call
xor
mov
push
jmp
mov
outsl
mov
mov
addr16
dec
sbb
mov
pushf
sub
inc
lods
nop
xchg
int3
dec
sbb
dec
dec
mov
popa
or
sarl
popa
pop
sub
sar
nop
lret
jge
aaa
push
rcrl
sbb
add
test
out
xchg
cmc
jmp
jg
popa
faddl
les
sub
inc
xor
fstpt
sbb
and
jno
pusha
call
pop
add
xchg
fsts
push
out
mov
into
fnstsw
or
adc
mov
jo
hlt
insb
mov
call
adc
or
mov
aaa
repnz
dec
enter
cli
jg
mov
dec
or
cmp
inc
stc
inc
cmp
jae
loop
mov
fs
inc
sarb
lock
adc
push
add
or
add
aaa
xchg
lock
sbb
sbb
mov
or
dec
cmpsl
inc
pushf
jl
jae
mov
jp
clc
dec
lods
mov
adc
decb
lcall
cwtl
mov
inc
pxor
xchg
imul
push
fldcw
js
inc
popf
loopne
out
mov
inc
in
adc
cli
push
cmp
pusha
ficoms
test
jo
dec
out
jns
pop
enter
push
shrb
or
jp
fldcw
fs
lods
sarl
notb
sbb
nop
add
mov
icebp
dec
inc
inc
lods
add
dec
mov
std
push
rol
out
les
mov
vpcmpgtb
incb
jb
lcall
jle
shlb
out
fistps
push
sti
insb
cli
cmp
ja
adc
pop
pusha
xchg
nop
jle
dec
add
inc
dec
jne
cmpb
shrb
dec
mov
aas
aam
mov
in
icebp
movsb
push
in
push
roll
repnz
ds
lds
lock
ret
or
mov
std
std
nop
inc
adc
mov
pop
inc
movsl
scas
cmp
mov
loop
outsl
or
mov
test
jg
mov
add
jb
jge
hlt
or
aaa
push
and
mov
lods
and
call
dec
fs
shrl
ljmp
push
mov
fcom
xchg
adc
lock
dec
xchg
xchg
sub
jnp
insl
imul
fcoms
insb
push
add
mov
pop
rclb
sti
add
push
xchg
jne
shrl
dec
pop
xchg
sbb
enter
enter
outsb
imul
cmp
jb
adc
sub
fcomip
popf
data16
mov
or
add
and
hlt
xchg
inc
pusha
jmp
js
sbb
jno
mov
scas
je
idiv
cmp
clc
push
cld
mov
xchg
push
inc
mov
add
outsb
movaps
or
sub
add
push
push
push
push
adc
sub
adc
xchg
sub
mov
or
sub
sbb
sarb
push
pusha
xchg
and
cs
pop
xchg
movsl
pop
pop
add
or
mov
add
mov
mov
insb
test
rcll
ret
and
cmp
xchg
mov
mov
fsubr
xor
sub
pop
stos
or
jmp
inc
in
inc
aaa
add
mov
sbb
dec
sti
je
add
test
and
out
dec
or
adc
or
or
sub
sbb
repnz
in
push
rorb
add
jecxz
lahf
lret
in
push
in
jge
call
mov
jecxz
xchg
push
add
lods
imul
movsb
cmc
pop
sbb
iret
in
pusha
in
adc
push
and
push
sbb
scas
adc
imul
into
test
push
in
push
test
adc
lea
mov
adcl
sbbl
sbb
inc
cmp
cs
add
adc
aas
je
dec
push
sub
cmp
test
adc
inc
pop
jp
inc
lds
push
xlat
gs
lret
or
mov
addr16
dec
push
sub
or
in
mov
idivb
aad
lds
jge
test
mov
xor
jne
mov
pop
jl
jne
gs
mov
dec
popa
add
loope
lahf
stc
les
stc
out
popa
jns
add
add
adc
add
scas
sti
cmp
movsl
push
xor
arpl
push
js
leave
or
push
push
jecxz
push
subl
sbb
pop
aas
out
xchg
movsb
push
cmp
jo,pt
dec
pushf
rorb
insb
lahf
rorb
pop
jmp
dec
jne
cmp
jne
mov
add
mov
fidivs
ja
xchg
dec
js
lds
mov
or
or
push
les
insl
pop
pop
jnp
lods
mov
adc
sbb
pop
jl
iret
jnp
lods
push
flds
imul
jns
cmpsl
leave
aas
jo
adc
dec
repz
lret
mov
movsl
out
iret
mov
sub
ds
orb
lock
ret
mov
bound
mov
inc
adc
dec
std
hlt
and
pop
xchg
fsubrs
adc
hlt
dec
jl
subb
adc
jmp
sbb
cmp
push
inc
sub
sub
xchg
xor
sti
ret
push
mov
je
add
jmp
out
add
push
movsl
in
loopne
test
call
mov
daa
mov
das
xchg
pop
xchg
inc
push
repnz
mov
mov
test
xorb
jmp
mov
clc
dec
jg
repnz
and
and
add
rolb
push
pop
or
and
je
xchg
lret
jmp
cmpb
dec
mov
push
iret
add
lret
std
jbe
mov
mov
nop
add
sbb
mov
loope
add
scas
sbb
dec
sbb
int3
outsb
dec
outsb
mov
sbb
jp
add
dec
fisubl
rcrl
push
and
xlat
imull
inc
pop
cmp
popa
xchg
push
enter
dec
pop
hlt
dec
adc
sub
jb
or
mov
dec
xlat
movsl
mov
icebp
jne
push
ljmp
mov
rcl
sub
daa
test
jns
add
ja
jns
adc
cmp
inc
jmp
and
xor
sbb
mov
xchg
xor
pop
push
add
dec
stos
scas
push
mov
add
iret
sbb
call
lock
sub
testl
stos
pop
pop
repnz
fsubrp
sbb
std
add
push
or
into
es
adc
mov
aam
test
sahf
jge
pop
fwait
mov
jo
fstpt
cmp
sbb
inc
xor
mov
adc
nop
fadds
das
push
dec
lret
jnp
or
adc
and
clc
ret
cmp
sub
mov
aas
inc
adc
cmp
sbb
roll
inc
mov
pop
xor
mov
mov
push
pop
xor
inc
add
sahf
push
mov
pushw
inc
pop
dec
das
fwait
xor
mov
and
imul
in
in
lret
mov
adc
aaa
fwait
xor
pop
ss
mov
jb
test
mov
pop
cli
pop
and
or
and
sti
push
ret
and
add
in
jmp
out
push
clc
and
jp
adc
call
or
cmp
mov
and
popf
addr16
aas
iret
lret
dec
dec
inc
ret
dec
xchg
mov
or
aas
xor
lock
inc
inc
enter
dec
lret
in
pop
xchg
nop
xchg
int
xchg
and
rcrb
add
fnstcw
scas
rcll
pop
add
cmpsb
imul
xor
in
dec
xor
xchg
out
insb
sub
call
or
pop
inc
iret
dec
movsb
nop
and
out
pusha
sbb
xor
jmp
jl
je
xchg
cmp
rclb
dec
or
mov
dec
je
inc
mov
daa
mov
sahf
lret
xchg
sub
incl
mov
inc
pop
ljmp
mov
xchg
sbb
sar
iret
and
in
fwait
shr
sti
loop
enter
es
jo
cmp
mov
and
cmp
fsubr
jle
add
push
push
mov
xor
add
notb
push
push
mov
mov
mov
xor
cwtl
pushf
inc
imul
js
arpl
sahf
rorb
orl
cmp
add
pushl
rclb
jmp
mov
dec
lea
sbb
nop
cmpsb
inc
mov
sbb
xor
sub
cs
add
push
pop
sbb
shll
add
jecxz
hlt
add
imul
mov
lock
jle
je
or
dec
mov
in
xor
jmp
mov
shll
pop
lds
mov
addl
jne
xor
jmp
lock
pop
lock
jmp
jge
mov
inc
stos
pop
mov
push
sbb
in
ja
aaa
add
sub
add
add
testl
das
leave
clc
es
add
add
mov
xor
mov
loopne
sbb
dec
mov
cld
cmpl
add
aam
add
lcall
or
jg
out
pop
or
sub
push
mov
xor
xchg
or
fdivp
or
mull
cmp
sbb
std
or
pushaw
nop
inc
arpl
loopne
ljmp
test
xchg
bound
cmp
xor
and
xor
xchg
out
sar
aaa
sbb
lods
or
sbb
pop
fisubs
mov
outsb
xchg
out
iret
movsl
push
mov
sarb
mov
fsubrl
fistpll
stc
into
xor
shll
mov
stos
push
sub
cmp
cmpsl
loop
or
sbb
shl
orb
mov
dec
mov
out
sbb
out
or
adcb
das
jmp
push
cli
shrb
push
inc
or
rcll
and
mov
rolb
jge
pop
repnz
pushf
inc
jns
sbb
mov
adcl
lods
aad
inc
mov
inc
and
pop
add
cmpb
mov
ret
xchg
push
pop
ja
xchg
jnp
rcll
add
fildll
ljmp
dec
and
lods
mov
fs
sub
pop
movsb
sbb
bound
clc
xor
xchg
mov
out
sti
push
jg
cmp
sbb
out
fisttpll
in
rorb
mov
cmp
movb
movsl
adc
loope
mov
les
std
push
rorb
or
rclb
mov
mov
mov
ja
fs
test
mov
stc
add
or
icebp
outsl
and
sarb
adc
sub
jns
hlt
stos
add
xchg
mov
push
and
enter
insl
mov
ret
add
imul
popf
add
push
mov
mov
shlb
das
and
lret
jl
call
sub
ja
movsb
pop
mov
mov
fisubs
roll
nop
sub
and
pop
mov
cmp
mov
pop
cmp
push
sub
xchg
je
std
push
push
jmp
add
je
jmp
cmp
fists
je
sub
add
jmp
sub
lds
sbb
mov
add
lcall
or
or
andb
insl
push
movsb
push
popa
daa
jae
sbb
nop
daa
push
adc
sub
lods
sub
lock
pop
cld
xorb
hlt
nop
sub
jae
rolb
cmp
push
outsl
pop
paddsb
jge
mov
orl
push
imul
mov
add
pop
xor
adcb
gs
sub
jbe
sub
cld
push
enter
mov
lods
aam
adc
roll
loopne
aas
fmull
jmp
mov
xchg
jge
mov
mov
movsb
test
add
leave
and
nop
int3
nop
and
and
int3
jb
dec
dec
cltd
rolb
push
bound
enter
dec
daa
pusha
lock
and
cmp
xchg
or
js
pop
push
pop
movsb
or
test
cmp
in
ficoms
leave
and
xor
xchg
aad
shl
rcl
in
lock
push
clc
int
mov
mov
iret
jp
cmpl
and
mov
faddl
lret
xor
xor
lds
dec
adc
sub
and
rol
xchg
add
sbbl
and
aaa
aam
push
cmp
cld
pop
pop
mov
outsb
inc
clc
mov
pop
adc
xlat
mov
dec
sti
push
dec
xlat
inc
adc
in
mov
div
das
adc
pop
sar
clc
adc
jno
ret
xorl
les
and
fdivrl
mov
loopne
cmp
add
testl
cmpsb
mov
push
adc
ret
adc
hlt
clc
ret
pusha
cmp
ret
pop
test
jecxz
mov
stos
xor
pop
mov
push
adc
rclb
add
push
or
xlat
ss
adc
cmp
mov
testb
xchg
data16
sbbl
mov
pop
lock
xchg
jmp
testl
xchg
lods
adc
aas
or
sti
jmp
and
dec
or
mov
push
add
add
add
xchg
xor
mov
sbbb
movsb
cmp
dec
sbb
or
stos
int
add
leave
cmp
daa
dec
sbb
sarb
add
jle
adc
inc
push
into
xchg
cwtl
or
or
shll
scas
and
sbb
push
pop
jmp
movsl
mov
fdivs
jge
xor
inc
lock
cmp
scas
xchg
jmp
inc
mov
push
or
inc
xor
loope
jne
sbb
push
adc
dec
mov
cli
ret
clc
pop
lock
nop
mov
and
mov
loop,pn
xchg
js
dec
cmp
nop
jg
xchg
or
or
insl
adc
xchg
jb
mov
mov
xor
int
test
jge
pop
mov
icebp
xor
leave
jmp
push
add
pop
mov
movsb
bound
out
and
std
inc
addr16
cmp
and
mov
outsb
sub
pushf
shrb
push
mov
add
mov
out
fcoms
xor
mov
xchg
icebp
push
sarl
jl
add
shlb
pushl
cwtl
adc
dec
push
or
ja
call
and
inc
sahf
jge
adc
sbb
insl
pushf
pushf
in
pop
xchg
or
add
arpl
push
dec
add
cmc
movsb
xchg
hlt
in
je
cmpb
push
sub
adc
in
cltd
jns
aad
add
scas
add
dec
mov
adc
into
and
or
xor
push
pop
jno
mov
and
data16
pop
and
and
fsubrl
sbb
cli
sarb
cli
jbe
mov
fwait
push
fidivrl
je
fsts
or
inc
lea
mov
and
aas
das
arpl
adcl
sbb
or
jne
sbb
lds
call
dec
mov
lahf
mov
inc
add
or
clc
andl
xor
adc
cmc
sahf
mov
inc
add
imul
xlat
arpl
sbb
or
sbb
ret
adc
jle
scas
movsb
lcall
xor
pop
sub
jb
inc
add
fldt
outsl
add
enter
decb
dec
adc
push
pop
ficomps
inc
mov
dec
pop
or
inc
jl
inc
scas
mov
loopne
sbb
repnz
inc
arpl
pop
dec
popf
imul
sahf
sub
mov
in
mov
mov
pushf
inc
call
enter
sub
mov
mov
push
setae
sbb
sbb
adc
pop
cs
fcoml
push
movsb
pop
fsubrl
mov
shlb
fs
dec
xor
aam
fdivrs
cmpxchg
mov
jle
es
test
sarb
xchg
pop
movsb
rolb
sub
mov
push
or
enter
add
mov
xor
rcll
popa
sbb
daa
insl
xchg
les
ret
adc
xchg
pmulhuw
hlt
mov
dec
test
add
std
or
push
hlt
mov
scas
pop
cmp
in
sub
or
or
cmp
mov
mov
sarb
lods
mov
das
aas
scas
adcl
fs
xchg
lods
fwait
dec
sti
add
pop
jo
push
js
push
arpl
xor
cmp
pop
push
cmp
subl
push
inc
jae
push
sbb
jbe
jp
xchg
push
jns,pt
xor
and
mov
push
popa
fsubl
cltd
jp
in
jmp
es
enter
adc
dec
xor
mov
repz
inc
stos
sub
shl
jbe
mov
sbb
adc
loopne
sbb
jo
xor
ja
xor
adc
enter
add
adcl
mov
adc
mov
adc
mov
loopne
jo
loopne
jp
loopne
sub
pop
adc
or
add
inc
fsubrl
sbb
repz
xor
inc
call
add
jns
lret
or
push
rolb
rolb
aas
xchg
es
xchg
adc
aas
fbld
lock
test
sbb
and
jne
jmp
cmp
sub
xor
mov
sarl
and
call
icebp
mov
cmp
je
sub
sahf
rorb
sub
scas
push
cmpb
aas
inc
or
dec
cwtl
sub
sub
xor
add
das
sub
mov
jmp
xor
push
xchg
decl
push
adc
adc
mov
inc
rclb
cmpsb
testb
adc
daa
mov
ret
and
cmpl
prefetch
or
and
adc
les
cli
jecxz
mov
push
decb
lret
fcomi
xor
add
inc
call
pop
insb
lret
repz
cmpsb
fs
call
cmp
repz
in
inc
lock
cmp
repz
xor
sub
sahf
cmpsl
test
sbb
adc
sahf
out
or
add
out
imul
in
repz
repz
sbb
and
jnp
aam
pop
int3
push
and
push
sub
jns
out
sub
xor
movsb
cmp
jns
mov
and
mov
push
dec
leave
jae
pushf
jl
js
pushf
cmp
iret
je
jo
insb
iret
leave
jae
pusha
push
pushf
cmp
pusha
insb
pop
jo
iret
leave
jae
je
js
jae
pushf
cmp
dec
orb
iret
leave
test
mov
jae
pushf
cmp
cmp
cwtl
xor
mov
repnz
cmp
and
jae
mov
mov
cmp
or
or
iret
leave
les
add
in
imul
out
fdiv
fsub
ret
jns
fsub
lahf
xchg
aad
add
and
xorb
cmpsb
sarb
push
sub
mov
pop
test
mov
nop
mov
fwait
andb
orb
mov
sub
pusha
or
jb
mov
pop
in
adc
and
int3
pop
sbb
clc
adc
add
enter
addb
add
sahf
ljmp
hlt
adc
pop
add
ret
cli
mov
lret
clc
push
ds
rclb
int
shrb
out
add
xor
scas
or
add
cmc
xchg
jb
imul
out
lea
pusha
jmp
push
add
ljmp
addr16
inc
or
hlt
popl
dec
push
inc
push
fiaddl
add
push
xchg
xchg
adc
fs
or
inc
dec
mov
cmp
sahf
or
sub
and
popa
push
sub
out
add
adc
out
cmp
jne
inc
scas
sbb
fmull
imul
inc
cmp
or
dec
add
push
dec
xchg
pop
loope
ret
adc
repz
addl
sbb
pusha
pusha
pop
dec
dec
or
push
dec
push
insl
gs
dec
fcomp
es
sub
test
pop
push
dec
jne
xor
and
sbb
add
adc
or
sub
out
adc
and
mov
loopne
mov
sbb
xor
das
inc
xlat
fstpt
nop
scas
sqrtps
xchg
or
rclb
das
and
scas
pop
push
inc
leave
outsl
mov
inc
dec
pop
addb
cmpsl
cmp
mov
ljmp
and
dec
add
pushl
inc
inc
jp
imul
jge
lods
jae
movlps
dec
push
aaa
xor
lods
mov
aam
rorl
sub
mov
jae
dec
mov
push
cmp
mov
out
or
sub
xchg
je
adc
pop
push
pop
dec
shr
jl
sub
add
cmc
stos
cmp
push
sahf
ljmp
ret
clc
mov
pop
push
and
or
imul
sbb
lea
bound
outsb
imul
das
movb
sbb
pushf
mov
sbb
and
aas
inc
sbb
mov
inc
into
adc
decb
jne
dec
mov
ret
xchg
cmp
jae
push
je
mov
scas
ret
push
pop
idivl
pop
sti
mov
fs
and
and
ror
dec
sbb
or
aas
push
mov
pop
add
push
inc
pop
inc
rdmsr
out
cmc
or
aas
movb
movsl
mov
add
xor
insl
popf
fildll
shr
enter
push
dec
mov
sbb
scas
and
mov
stc
ret
je
cwtl
sbb
out
add
mov
sbb
add
jae
xor
cltd
rorl
push
mov
ret
mov
mov
mov
pusha
imul
and
or
out
fmuls
jmp
and
dec
mov
por
lahf
fwait
sbb
mov
mov
andb
ficomps
inc
fmull
xorl
sbb
jbe
fstp
fld
mov
daa
adc
inc
clc
jecxz
mov
cmp
pop
mov
ret
push
adc
add
xor
fsubs
jnp
jne
jnp
mov
stc
adc
lret
adc
jl
mov
ss
add
lcall
out
fmull
imul
add
mov
into
mov
dec
and
sbb
int
js
adc
mov
dec
std
divb
jmp
bswap
test
sbb
dec
push
repz
test
add
xor
or
push
sbb
push
sti
fidivrs
mov
jmp
mov
ja
mov
mov
fnstcw
ret
or
ja
push
loope
and
movl
sbb
and
cmc
xchg
inc
sbb
hlt
loopne
sub
jnp
jmp
adc
cli
test
xchg
xor
pop
rolb
daa
sbb
punpcklbw
inc
inc
pop
inc
cwtl
pusha
jo
js
or
sbb
dec
xor
pop
inc
je
mov
outsb
push
fstp
add
hlt
out
incl
stc
push
cmpsl
cmp
fxch
mov
mov
xchg
fwait
pusha
jmp
out
dec
movsb
push
dec
rolb
mov
or
xlat
ret
add
mov
in
pop
add
mov
adc
test
and
cld
cmpl
bnd
add
push
or
stos
sarl
add
push
popa
or
push
push
lret
shll
and
add
adc
sbb
fdivl
fs
ds
pop
pop
xchg
je
sbb
neg
or
je
cmp
jle
inc
sbb
and
push
in
dec
push
lea
lock
sbb
pop
push
ret
sbb
push
jmp
dec
fimuls
or
jle
imul
cmp
loop
push
cmpsl
pop
nop
add
mov
mov
or
dec
adc
adc
inc
andb
sub
xchg
adc
xchg
leave
push
and
dec
jbe
push
mov
pop
inc
jmp
push
inc
push
mov
add
xor
inc
rcl
mov
pop
pop
mov
add
xchg
shrb
popa
sub
mov
jbe
jecxz
add
insl
shrl
into
pop
out
rolb
jo
jb
in
mov
int
sbbl
adc
xchg
push
add
push
nop
mov
int3
movb
out
pcmpgtd
push
add
add
loope
lea
arpl
pop
mov
sub
dec
jge
mov
fisttps
push
adc
aam
aam
call
dec
mov
inc
mov
pushf
sub
jg
into
outsb
or
rep
sub
ljmp
and
or
add
movsb
movb
inc
dec
repz
mov
mov
sbb
repnz
ljmp
xchg
fcmovnu
inc
outsl
mov
sbb
add
jl
jbe
add
inc
addr16
lods
mov
or
lea
mov
push
jge
and
cmp
jb
mov
pop
add
add
decl
lret
jg
fldenv
push
xchg
or
fnstcw
sub
loop
and
sub
adc
or
iret
pop
test
fcoms
insl
mov
dec
mov
jnp
pushl
ljmp
jbe
mov
inc
subb
jg
mov
add
sahf
add
or
outsl
jmp
push
ret
or
notl
jb
fsubl
xor
sub
and
inc
fwait
mov
adc
add
jl
mov
pop
gs
stc
cmpb
jl
incb
push
cmp
jl
xor
jmp
les
pop
ret
push
xor
ds
push
and
ret
or
push
and
mov
loop
test
or
sbb
fdivrs
sub
ret
inc
xchg
popf
dec
mov
jmp
push
and
cmp
mov
jg
loop
lea
fldt
sarl
push
fmulp
rcr
sub
outsb
in
pcmpeqb
jle
add
insb
sarb
mov
ret
fmull
cltd
xchg
lret
stc
enter
pop
stc
ret
fldt
out
jno
imul
enter
cli
adc
add
dec
ds
pushf
or
ret
mov
adc
xchg
jl
xchg
cwtl
push
and
sbb
lret
pop
ds
add
mov
out
push
mov
sub
test
out
sub
cld
mov
xor
leave
sbb
mov
insl
faddl
call
call
mov
outsl
dec
jmp
lods
inc
cmpb
xlat
fadds
outsb
xor
fwait
jg
js
xchg
push
or
push
push
int3
into
sbb
rorl
mov
test
popa
push
pop
test
enter
mov
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
jg
clc
js
aas
sbbl
pop
mov
add
leave
repnz
bound
call
jl
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
jmp
stos
mov
cmp
or
mov
pop
out
sub
imul
jmp
cmp
inc
xor
cmp
call
mov
popf
sti
jmp
stos
push
incl
das
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
ljmp
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
incl
ds
push
cmpsb
scas
mov
pop
or
addl
cmp
call
mov
pop
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
jmp
sbb
stc
repz
mov
subb
lcall
mov
push
pusha
les
outsb
bound
xor
push
clc
mov
push
xor
cld
insl
or
adc
pop
pop
or
inc
incb
lds
loopne
jne
adc
or
sub
or
mov
and
xchg
es
or
add
lcall
fincstp
fildl
nop
sub
cmp
xor
shl
rcl
rcl
rcl
cmp
add
fbld
add
sub
sbb
inc
loop
pop
test
mov
dec
pop
testl
push
xor
push
js
xor
mov
jmp
pop
add
push
enter
pushl
or
mov
iret
inc
jo
das
sub
xor
mov
adc
inc
in
pop
pop
ret
fwait
lahf
fbstp
inc
jo
out
call
add
push
rcll
inc
movsb
mov
jl
pop
jge
or
jo
rcl
loop
shld
loopne
ss
loopne
aaa
push
sar
inc
fcmovnu
lahf
push
ret
clc
lods
inc
cli
ret
outsl
ret
insl
or
call
add
add
push
push
outsl
sub
arpl
out
mov
add
test
les
iret
inc
es
je
xchg
inc
xchg
pop
das
add
imul
out
mov
daa
dec
lret
push
or
mov
scas
aam
pop
sbb
cmpsl
dec
fcoml
adc
pop
cmpsl
movsl
sub
cltd
dec
mov
jns
push
mov
add
xchg
faddp
fimuls
fdivrs
dec
push
add
fstl
mov
aaa
insb
push
lea
dec
push
scas
mov
mov
inc
cwtl
out
and
je
movzwl
cld
ss
mov
jl
or
lcall
push
leave
mov
sub
or
mov
mov
jne
add
lea
sub
mov
inc
cmp
jne
inc
rolb
or
ret
push
mov
cmpsl
addb
and
mov
lcall
pop
sub
mov
add
or
mov
and
or
aaa
icebp
jecxz
inc
lret
jbe
push
mov
lods
movsl
lea
cmp
xor
icebp
je
cmpsb
pusha
and
loop
and
imul
add
or
cmp
mov
cmp
jne
pusha
mov
inc
mov
xlat
dec
ret
push
notl
xor
insb
mov
ficoms
into
add
cs
int
pop
lcall
or
sub
inc
leave
jmp
or
add
cmp
cli
sub
mov
addb
xor
loop
mov
push
push
lcall
mov
push
ds
sbb
sti
jne
test
clc
sbbb
adc
mov
out
xor
and
jns
roll
push
clc
push
sbb
ret
clc
mov
mov
popa
xchg
xorb
roll
aam
cmp
mov
fldt
mov
add
push
ss
jne
icebp
push
push
dec
xor
inc
jp
pop
mov
in
inc
popa
xchg
dec
mov
fucomip
adc
push
mov
in
ds
mov
ja
and
imul
xchg
into
mov
sub
loopne
daa
mov
shrl
cmp
cmp
filds
call
dec
dec
sbb
sbb
xchg
and
or
pop
or
mov
pop
test
lahf
or
rorb
add
jo
and
sbb
sbb
mov
icebp
loopne
test
lds
xchg
push
adc
add
push
cmp
ss
sbb
testb
ss
cwtl
cmp
sub
push
push
mov
push
sbb
sbb
and
push
inc
add
xor
jmp
sahf
inc
lock
sub
or
adc
dec
mov
cmp
mov
sbb
add
add
mov
adc
mov
shrb
js
outsl
mov
cli
and
div
pop
shlb
cmp
sub
loope
jae,pn
hlt
and
dec
dec
ljmp
sbbl
adc
jne
sub
nop
and
ficomps
mov
movsl
and
mov
rep
insl
nop
or
dec
fdivrs
ljmp
cmc
loopne
cmp
or
jle
and
scas
sub
mov
add
jg
jne
sub
pop
sbb
push
je
jecxz
xlat
jbe
dec
lea
les
jne
loope
inc
aam
ss
jne
xchg
xor
add
inc
lock
pushf
sub
inc
push
sbb
adc
and
and
xchg
lea
push
pop
xchg
stc
mov
scas
mov
push
out
cmp
jae
xor
out
adc
hlt
mov
jno
popf
jno
adc
pop
lcall
add
pop
dec
push
or
roll
jecxz
repnz
dec
xchg
add
sbb
xor
inc
aam
ret
pusha
dec
movsb
cmpb
xchg
fisttpl
mov
adc
adc
or
scas
xor
adc
ja
dec
xor
cmp
in
mov
push
jp
out
movb
pop
jmp
adc
sti
in
ds
dec
pop
fld
je
add
mov
adc
mov
and
adc
arpl
add
out
gs
add
imul
inc
outsl
arpl
add
inc
stos
js
add
outsl
sub
or
xchg
ficoms
fistpl
fldl
or
lods
testl
add
adc
stc
pop
cwtl
sub
pop
ret
imul
sub
mov
sub
ret
mov
or
out
xchg
pop
fadd
jb
add
or
mov
cmp
xchg
xchg
jmp
enter
add
or
insb
outsb
jg
fwait
sahf
es
or
or
mov
and
add
call
loop
xorl
les
add
or
addl
adc
add
leave
idiv
loopne
or
ret
popf
inc
jns
push
xor
adc
je
xchg
xchg
add
lea
enter
ret
testb
aas
jo
mov
add
dec
jb
and
push
pop
cmp
lods
test
sbb
cwtl
dec
xchg
mov
mov
and
fsubs
test
jne
add
add
mov
scas
mov
or
decb
jmp
mov
adc
mov
jl
push
or
sub
push
mov
nop
clc
sub
sub
int
pop
mov
jge
aam
push
nop
lret
negb
cmp
imul
lahf
push
in
and
daa
and
jno
mov
gs
mov
xlat
mov
xor
jae
lea
shlb
loopne
and
fucomp
mov
rorb
fisttps
or
je
push
cld
push
xchg
cwtl
nop
hlt
call
adc
mov
or
jmp
jecxz
sbb
les
adc
pop
add
sub
cmp
jnp
xor
or
fs
mov
scas
sbb
nop
lods
je
mov
inc
adc
or
lods
sub
mov
adc
mov
mov
or
or
dec
mov
adc
xchg
lock
lock
cld
push
jg
mov
jne
mov
enter
cmp
dec
push
sub
dec
fs
cld
dec
in
repz
fsubs
pushf
sub
repnz
adc
fadds
mov
inc
and
add
add
aam
dec
shlb
cmc
cmp
mov
lea
inc
jge
xchg
and
sbb
gs
enter
sbb
rolb
add
mov
add
mov
imul
cmp
mov
jle
dec
dec
pop
dec
jnp
or
jg
pop
mov
pop
jecxz
cmp
pop
jmp
sub
int
sub
dec
sbb
int3
outsl
add
test
incb
jne
push
sub
cmpl
adc
jl
inc
fadds
add
push
test
adc
push
add
pop
daa
xchg
pusha
jbe
adc
jbe
andb
jmp
xchg
cltd
repnz
xlat
roll
pop
add
mov
xor
test
fsubrs
jmp
loop
in
xchg
inc
dec
sbb
cmova
ret
pop
jle
shrl
add
adc
xchg
jno
pop
test
andl
gs
pusha
add
dec
outsl
addl
decl
push
mov
cmp
inc
hlt
mov
rolb
imul
or
push
or
rcrb
jbe
jmp
pop
mov
nop
xor
popa
jp
sarl
xcrypt-ecb
cmpsl
or
adc
push
and
adc
sbb
pushf
push
mov
and
shufps
xor
fstl
clc
scas
push
or
push
fisttps
icebp
mov
mov
insl
inc
pusha
test
adc
adc
push
pop
mov
cmp
adc
pop
inc
push
add
mov
inc
mov
jle
or
int3
or
mov
xchg
jge
push
sbb
cmp
push
shl
inc
dec
lods
ret
pop
sbb
jne
dec
orb
lahf
add
andl
dec
clc
orps
mov
test
je
add
or
testb
jno
mov
std
or
push
adc
or
adc
pop
pop
orl
cmp
adc
sub
mov
sahf
cmpsb
fsub
mov
clc
sbbl
loope
add
xor
dec
cltd
in
mov
jno
js
cmp
out
bound
add
pop
jge
pop
push
rorb
push
add
mov
mov
xchg
dec
movsb
add
hlt
cmp
mov
cli
pop
outsl
add
add
imul
lods
icebp
cmc
shlb
and
jnp
je
iret
adc
sbb
dec
daa
jge
imul
xor
sub
add
push
inc
cld
lods
fildl
sbb
shl
sub
popa
dec
out
ret
aad
add
add
xor
shll
dec
add
mov
sbb
fadd
or
mov
movsl
cmp
cs
ret
ret
cs
and
and
and
clc
cmp
cmp
loopne
or
xor
sbb
or
movsb
div
pop
add
xchg
inc
jbe
std
adc
add
add
cld
add
decb
adc
movsb
sub
add
das
xlat
jno
hlt
inc
mov
sub
add
test
or
scas
call
sub
pop
add
data16
fdivs
mov
or
negb
push
mov
inc
fdivl
idivb
inc
xor
lcall
rcl
arpl
xor
out
and
jnp
js
mov
outsl
lea
nop
xchg
cmp
jbe
cmp
cmp
mov
nop
adc
sub
mov
and
pop
out
ret
incl
mov
mov
pop
call
dec
mov
mov
dec
or
sbb
enter
out
dec
enter
fmul
loopne
jecxz
in
mov
je
ja
cmovle
xchg
fmull
lret
jmp
mov
add
push
push
jb
ss
and
les
sbb
dec
ss
inc
pop
inc
dec
mov
adc
in
test
dec
roll
push
rorb
mov
push
jnp
inc
jmp
or
insb
shll
test
cwtl
inc
pop
stos
pop
lahf
xor
adc
push
mov
xchg
xchg
xchg
xchg
fiaddl
movsb
cld
sub
ret
fisttps
insb
adc
and
xchg
ret
inc
xor
mov
jl
dec
mov
fsubrl
loopne
push
adc
cltd
movsb
push
sarb
sar
pop
fldt
xor
loope
and
das
or
jp
test
jg
or
jbe
cmpb
jne
nop
subl
sarb
and
inc
jmp
mov
inc
cmpsl
mov
lock
cmpxchg
or
es
cmp
sbb
sub
dec
daa
pop
inc
mov
jbe
mov
dec
jmp
xor
les
inc
push
mov
nop
loopne
sqrtps
add
jmp
cmp
into
fld
sub
add
ss
sub
adc
add
jmp
or
or
ds
pop
aaa
in
mov
or
sarb
xchg
mov
mov
lcall
push
xor
cmp
ja
mov
mov
bound
xlat
or
popa
insl
sub
testl
inc
pusha
or
sub
push
ret
dec
xchg
xor
fstp
adc
cmp
cmovbe
jno
xchg
adc
mov
aaa
jnp
push
fidivrs
sub
ja
add
push
and
jg
and
push
mov
cmp
jne
jnp
add
stos
adc
sbb
data16
or
loop
push
xchg
or
mov
or
push
cmp
jne
push
adc
cmpsb
cltd
and
or
jbe
pop
dec
pusha
add
adc
jns
clc
adc
std
jne
sbb
shr
sbb
iret
out
outsl
scas
push
mov
shr
or
aaa
pop
movsl
xor
jle
ret
cld
fwait
outsl
cs
pop
and
mov
cmp
jne
dec
imul
rcrb
jecxz
sbb
xchg
inc
mov
jb
adc
lret
sbbl
scas
stos
pop
xchg
fsubs
enter
call
or
push
inc
cmp
je
mov
or
je
scas
xor
imul
js
popa
pop
je
pop
xchg
imulb
jne
dec
and
push
and
fcmovnu
jmp
or
jmp
and
ja
cmp
ja
push
fildll
aam
add
push
xor
dec
je
xchg
and
pop
xor
mov
sbb
inc
push
fdivrs
js
pop
sub
jmp
inc
dec
jmp
mov
sub
fbstp
xor
outsb
cmpsl
jbe
push
mov
negl
add
mov
sub
call
jmp
ret
push
mov
mov
inc
test
je
inc
mov
dec
jne
pop
rorb
push
cmp
mov
inc
pusha
mov
inc
sbb
repz
jle
xor
xor
pop
addb
add
and
loopne
xchg
inc
lods
sbb
iret
or
aas
rcrb
mov
and
adcw
pop
jne
fs
add
sub
lods
or
jns
and
mov
pop
aaa
mov
and
mov
pop
xor
lock
sbb
or
data16
add
dec
inc
cltd
adc
roll
nop
mov
orb
clc
mov
dec
add
push
sbb
popa
insb
push
fninit
jl
jb
cs
mov
add
hlt
inc
sbb
stos
into
inc
lahf
cmp
add
inc
daa
imulb
mov
xor
push
push
aam
or
inc
xchg
rorb
faddl
jne
sbb
and
jge
ret
or
lcall
imul
sub
mov
mov
mov
movsb
pop
pop
cltd
push
pop
testl
push
add
jmp
test
pop
fadds
add
dec
add
jge
std
cmp
xlat
stos
mov
test
and
ficompl
adc
rorb
push
stos
and
inc
pop
cld
or
cld
aaa
inc
cmp
in
cmp
je
pop
mov
std
lods
gs
lds
mov
mov
jecxz
lahf
mov
jne
ja
lret
jb
paddd
inc
push
mov
loope
add
ret
rorb
popa
bswap
dec
mov
test
sbb
dec
add
inc
fstpt
hlt
lcall
aaa
jmp
aam
sbb
outsb
ljmp
ss
adc
sub
dec
inc
push
xchg
fnstenv
lcall
xchg
pop
add
movsl
into
scas
xor
xchg
pop
loopne
je
rcr
jg
mov
cmp
movsl
xor
mov
aaa
cld
jb
imul
in
mov
imul
xor
out
icebp
js
add
jg
popa
mov
push
mov
mov
mov
call
dec
xor
mov
or
push
xchg
jbe
sar
mov
test
push
add
repnz
je
pop
mov
fadd
pop
insb
sub
mov
pop
rcrb
push
push
lea
mov
jecxz
mov
dec
aaa
jbe
mov
shll
jl
jne
das
mov
and
sub
pop
xchg
jb
cs
or
data16
cli
push
mov
cmp
inc
mov
mov
leave
jne
lock
fstl
in
dec
adc
dec
push
cmp
sbb
scas
scas
and
add
dec
jne
jmp
mov
mov
cli
pop
push
push
xor
jecxz
dec
cmp
xchg
pop
sahf
outsb
ficompl
push
mov
mov
adc
lcall
in
mov
push
xor
call
add
mov
push
push
push
sbb
hlt
xor
jg
mov
dec
lods
mov
mov
movl
movsl
pop
or
pop
xchg
jo
enter
jp
cmp
mov
push
pop
cmp
jp
cmp
fistl
push
in
ret
mov
xor
mov
outsb
cmp
shlb
outsl
sub
in
push
push
inc
data16
and
push
or
push
pusha
push
push
cmp
and
mov
push
or
add
addl
push
jae
inc
fwait
rolb
and
fisubs
ja
pop
scas
leave
rolb
cmp
mov
ljmp
push
inc
mov
cli
add
or
xor
loope
negb
push
aas
loop
cwtl
or
xorb
mov
cmp
leave
mov
jo
add
lds
aas
adc
cmp
inc
inc
dec
adc
outsb
loop
fwait
stos
cld
sahf
or
test
inc
iret
call
int3
out
mov
cmpl
sub
add
les
imul
inc
daa
cmp
in
and
pop
dec
mov
cmc
js
mov
in
jmp
adc
cmp
adc
or
push
jns
je
orl
xchg
xor
push
cmp
pop
lea
push
sub
mov
xchg
push
cld
jl
insl
lcall
fldenv
ds
add
inc
add
dec
add
pop
dec
push
out
out
cmpl
rcrl
inc
or
js
ret
lock
mov
dec
sub
xchg
xchg
daa
push
add
push
xorb
lcall
add
aad
inc
push
aas
lret
inc
loopne
push
dec
fdivrs
dec
xor
xor
call
mov
inc
mov
jg
pushw
sahf
movsl
movsb
xchg
xchg
dec
jne
shl
mov
sub
ljmp
adc
arpl
sbb
mov
sbbl
mov
sub
insb
shll
push
cmova
pop
loope
inc
adc
or
inc
icebp
push
daa
sbb
jmp
wrmsr
lods
jo
popf
pop
cltd
cli
jo
cmpsb
movl
mov
mov
adc
push
push
movsb
popl
mov
pop
mov
int
in
xchg
cmp
adc
add
or
pusha
add
fbstp
inc
jbe
sbb
shlb
out
int
xor
insb
or
adc
pusha
add
jae
mov
rcrb
je
mov
pop
push
test
loop
inc
test
dec
fnstcw
add
les
jp
or
lods
in
sub
dec
mov
xchg
lret
leave
fstpl
pop
push
pop
cmp
dec
je
jmp
ss
jmp
cmp
cs
es
mov
jmp
mov
jmp
mov
jmp
mov
inc
add
fucomip
push
push
sbb
into
je
mov
fsubr
push
mov
jmp
mov
ror
inc
add
xchg
scas
jmp
cwtl
mov
mov
mov
jecxz
insl
jb
push
je
push
outsl
pop
xchg
pop
cmpsb
cmp
inc
inc
lahf
xor
andb
add
into
outsb
add
pop
out
push
inc
stc
cmp
push
popa
orl
xor
cmpsl
jbe
test
mov
je
or
cmp
sbb
mov
or
mov
cmp
je
cmp
jne
and
cwtl
int
test
pop
mov
insb
or
inc
aam
xchg
into
inc
es
adc
pop
mov
inc
fiadds
in
shlb
jg
orb
lds
jmp
xchg
push
sbb
inc
js
dec
pop
mov
rol
dec
inc
add
dec
cmp
fs
popa
cmpsl
test
or
push
into
mov
hlt
add
fisttpll
jecxz
mov
push
adc
xchg
sub
mov
orb
fcoml
jbe
in
aaa
fcmovne
out
add
sbb
pushl
add
mov
and
mov
inc
ljmp
xchg
neg
sbb
inc
leave
and
js
in
mov
mov
lret
sbb
es
cwtl
call
and
sbb
adc
inc
and
cmpl
push
mov
xlat
mov
mov
cmp
sub
sub
add
push
mov
sub
xlat
xor
pushf
add
mov
add
ret
add
sub
mov
scas
inc
push
mov
pusha
xchg
xchg
pop
into
or
add
xchg
jle
xchg
push
in
ss
enter
mov
inc
outsl
mov
jmp
push
icebp
inc
inc
pop
pop
jae
dec
jb
aas
mov
sub
xor
cmp
sub
cmp
sub
dec
inc
aad
pop
dec
mov
sbb
and
aam
cmp
scas
loope
xchg
cmp
adc
aas
leave
add
push
cli
inc
and
addr16
pop
mov
pop
popa
adc
jb
cmpsl
mov
mov
mov
cmp
aad
xlat
add
lret
incl
push
mov
inc
jo
xchg
cs
jp
inc
icebp
scas
bound
lahf
outsb
orl
clc
dec
jl
lock
or
clc
std
mov
scas
mov
push
sbb
add
or
iret
mov
dec
and
inc
jg
ss
inc
cld
dec
sbb
orb
xlat
pushf
adc
adc
inc
lods
repnz
xchg
push
xor
add
or
inc
pop
or
shll
fsubs
inc
sub
mov
js
clc
pop
stc
mov
loopne
jb
sub
mov
sub
ret
inc
inc
clc
pop
mov
jbe
int3
sbb
pop
addr16
or
adc
icebp
jmp
lock
dec
dec
lods
adc
jne
push
add
xor
aam
ja
mov
mov
mov
sbb
push
mov
jge
cli
femms
and
push
cmp
je
fadds
mov
pop
je
or
mov
call
lahf
xchg
sti
rcrl
shr
pop
scas
pop
sub
and
imul
or
or
addr16
in
add
fdivr
ja
cli
cmp
push
lret
test
sbb
not
pop
add
pop
pop
xor
add
fcoml
testb
fmull
fnstcw
push
sub
mov
add
test
daa
loopne
mov
daa
inc
shlb
cmp
pusha
cld
add
push
mov
cli
cs
movsl
mov
inc
cmc
sbb
and
jmp
xchg
jl
adc
or
and
add
pop
rcrl
mov
scas
rorl
insb
ljmp
fsubrs
inc
repnz
lds
push
sbb
test
push
mov
testb
negb
js
cltd
ret
mov
dec
add
in
cld
outsb
mov
add
movsl
push
push
inc
pushf
adc
repnz
cmp
cmp
cmp
sbb
aaa
stos
cmc
mov
jle
lea
jmp
addr16
cmp
pop
inc
xchg
xor
xor
orb
pop
dec
ja
pop
dec
and
inc
inc
mov
xor
adc
cld
and
pushf
ret
and
jmp
or
cmp
push
iret
lahf
mov
aaa
int3
aas
ror
test
add
add
cmpsl
sub
sub
inc
push
xchg
xchg
jo
adc
aam
or
cld
push
scas
or
mov
jnp
es
jl
cmp
jge
sub
in
lret
sbbb
jg
out
or
mov
adc
shr
in
jmp
and
mov
lea
addb
js
es
sti
fstpt
sub
cmp
jle
inc
sub
add
lea
std
scas
hlt
mov
cli
lea
push
aas
mov
negl
inc
dec
jge
clc
fcomi
divl
cmp
adc
imul
add
gs
cmp
loopne
add
or
lea
arpl
add
cmpsb
insb
push
add
lahf
das
aad
add
shrl
mov
push
mov
push
inc
sub
jle
jb
adc
adc
orl
je
lret
mov
or
adc
sbb
ret
adc
scas
ss
mov
mov
or
xor
pop
adc
cmp
inc
lods
jo
adc
mov
rcr
arpl
jp
sar
pop
cmp
sub
jmp
push
add
clc
scas
push
push
pop
cmp
add
mov
sub
std
shl
mov
inc
push
cmp
adc
jp
call
inc
sti
jb
dec
adc
inc
call
or
jl
pusha
mov
out
pop
stos
pop
add
imul
sub
clc
test
out
xor
pop
call
outsl
or
imul
add
xlat
pop
wbinvd
pop
xchg
xchg
pop
cmp
cld
movsb
pop
sahf
pop
fdiv
pushl
mov
pandn
jmp
cwtl
fs
inc
call
aas
lock
sbb
std
inc
sbb
cs
pop
and
mov
sbb
adc
add
adc
ds
insl
lds
push
mov
loope
dec
aad
lea
or
int3
scas
outsl
mov
push
mov
fadds
xor
pop
daa
daa
xor
sti
mov
add
clc
or
or
or
scas
or
je
pcmpeqb
adc
mov
and
mov
in
push
adc
or
out
clc
cmpsb
fwait
adc
jmp
inc
aad
push
or
pop
jbe,pn
mov
push
jmp
mov
call
xor
dec
daa
inc
clc
sub
testl
and
cmp
addl
test
xor
sti
xchg
mov
insl
adc
cmp
mov
mov
sahf
add
and
lret
sbb
add
js
pop
in
sub
in
sbb
popa
es
push
cs
nop
or
repz
and
mov
inc
and
push
test
cltd
jne
popa
test
sbb
and
fmul
insl
push
aas
xchg
push
mov
cmpsb
inc
add
add
inc
outsl
cld
rorb
push
push
add
sarl
shlb
push
das
call
mov
cmp
sbb
sbb
or
or
or
xchg
adc
xlat
or
sbb
mov
in
sbb
jmp
and
inc
insb
lea
mov
dec
es
adc
js
subb
pusha
add
cli
dec
adcb
std
mov
inc
and
add
and
mov
xor
cmp
and
ds
mov
push
inc
dec
or
pusha
and
dec
push
inc
insb
and
mov
in
inc
sbbl
popa
jge
pushf
cmp
and
dec
mov
dec
jne
sub
ja
sub
adc
sub
mov
adc
dec
xor
shrl
lar
es
ja
sti
add
add
pop
pop
fildll
mov
icebp
mov
inc
or
push
in
lock
cmp
and
or
or
cmp
adc
popa
adc
in
or
inc
sbb
push
jecxz
or
pop
sbb
fstps
cltd
icebp
jmp
imul
pop
subl
sbb
popa
enter
xorl
mov
arpl
cltd
or
arpl
add
rcll
inc
inc
push
pop
lods
rorl
pop
inc
ret
outsb
mov
movsb
push
arpl
jo
pop
fsubs
adc
sbb
lods
adc
insl
push
das
shlb
rcl
movsb
sub
bound
push
push
call
mov
aam
push
scas
in
and
mov
cmpxchg
test
lock
and
arpl
push
add
jmp
js
mov
push
sbb
leave
sbb
addb
cmp
push
adc
mov
xchg
data16
cmp
jmp
mov
pop
pop
ficoml
cmc
cmp
jae
cmp
mov
shrl
adc
jl
daa
mov
popa
jmp
or
or
add
js
adc
shlb
sbb
decl
inc
addb
pop
pusha
adc
in
jo
outsb
repnz
sub
sub
lock
sarl
adc
dec
cmpsl
xchg
push
bound
mov
addr16
pop
inc
pop
int
mov
clc
add
ret
mov
sub
into
iret
xor
mov
jne
pop
xor
out
push
fisubrl
dec
rcrb
pop
fimull
and
cmp
mov
xchg
fdivs
daa
lods
sbb
ss
pop
cmpsl
adc
sub
xlat
fists
test
mov
lret
or
and
scas
fmuls
and
dec
push
stos
sub
and
ret
fcom
nop
or
adc
jp
sub
xchg
mov
andl
jno
pop
dec
and
mov
xchg
sub
xor
add
testb
or
pop
lret
dec
cmp
lret
daa
lock
add
xchg
int3
and
xor
and
mov
xchg
ja
inc
and
and
in
adc
pusha
pusha
inc
sub
loopne
adc
addb
sti
imul
addr16
iret
jl
add
mov
addr16
push
jmp
mov
dec
call
pop
sbb
neg
jg
rolb
jns
jo
mov
cmc
dec
sub
pop
pop
ret
jne
pop
mov
xchg
pop
fldt
pop
aas
cltd
mov
pop
int
xchg
inc
movsb
ja
adc
xor
and
or
push
lea
ret
pop
inc
dec
xor
popa
es
xchg
mov
lods
cmp
rcrb
clc
push
push
push
xchg
test
rolb
call
ja
xor
js
push
jmp
shlb
jle
jmp
xor
lods
andl
pop
insl
sub
loopne
mov
sbb
or
or
scas
insb
xchg
andb
cli
sub
std
aaa
pop
xchg
xor
popf
adc
out
lods
mov
pop
decl
stos
or
xchg
xchg
call
or
test
sub
fisubs
and
xchg
lcall
repnz
test
loop
popa
cli
lock
or
out
test
add
cmpsl
loopne
add
cmp
or
subl
add
sub
inc
test
insl
inc
lcall
dec
jne
push
sbb
mov
add
aas
xchg
addb
aaa
xor
inc
clc
rorb
xchg
js
or
movl
xor
sbb
loop
lcall
mov
incl
addl
filds
and
mov
mov
cmpsb
fiaddl
push
or
push
inc
or
mov
or
xor
int3
mov
call
je
mov
insb
cmp
push
and
aas
adc
fwait
xor
mov
stc
pop
jne
int3
adc
out
call
ds
sub
lock
inc
out
inc
push
pop
add
mov
sub
mov
adc
sbb
add
and
adc
inc
imul
cmp
jne
lea
jg
add
or
pop
mov
enter
inc
out
xor
repz
jmp
iret
sub
jno
bndldx
clc
fidivs
inc
cmp
stos
push
mov
in
push
push
gs
imul
shrb
jp,pn
je
ret
add
je
loop
xor
outsb
xchg
xchg
hlt
int3
inc
cmp
test
lods
pop
inc
stos
inc
fildll
and
mov
add
ss
xor
outsl
outsb
addr16
nop
mov
das
pop
movsb
or
pop
dec
shlb
outsb
stc
jecxz
in
or
inc
dec
mov
testb
mov
xor
je
cmp
in
pop
pop
xor
aas
aad
sti
xor
xor
and
popa
cmp
movsb
insl
lods
lds
sub
dec
push
pop
sbb
cmp
test
mov
loope
lea
repz
aaa
test
xor
sbbl
adc
xor
or
push
lahf
jnp
adcb
adc
pop
test
orb
xor
lock
jns
sbb
push
dec
push
scas
popf
jmp
add
inc
rorb
repz
and
cmc
add
std
test
je
mov
inc
cmp
mov
rorl
leave
fbstp
lods
and
call
ja
js
gs
pop
and
dec
pop
sarb
sti
addr16
and
out
movsl
pusha
sbb
push
mov
dec
inc
pop
bound
push
or
jo
sbb
jbe
mov
mov
dec
push
push
cmp
popa
fisttpll
sbb
mov
cmp
add
inc
inc
xor
ret
sub
shlb
imul
xlat
push
rcl
add
mov
add
pop
jbe
sbb
add
pushf
fcoms
mov
push
rclb
adc
cmp
mov
mov
ret
popf
les
cld
mov
cmp
stos
sbb
mov
inc
mov
mov
add
out
or
cmp
mov
addr16
in
or
pop
xor
jmp
sub
add
ja
cmp
sub
inc
push
cmpsl
push
xor
test
iret
out
stos
jo
inc
add
or
lret
sbb
and
inc
cmp
dec
inc
dec
cmpsl
ja
jge
es
cmpsl
js
inc
mov
aad
push
push
sbb
add
in
in
aaa
mov
mov
push
lret
inc
xor
sbb
pop
inc
mull
mov
jmp
out
cmpl
inc
mov
in
xchg
or
inc
inc
xchg
test
rol
or
sbb
lret
mov
jmp
sti
lahf
mov
push
jmp
pop
xchg
jb
movb
incl
gs
loopne
je
adc
sbb
push
enter
adcb
insl
mov
cmp
dec
mov
ja
inc
out
cmc
mov
mov
sub
enter
ds
mov
sbb
add
push
add
je
add
ja
adc
add
cmp
enter
push
inc
and
adcb
cmp
jle
in
adc
sbb
call
or
rcrb
fnstcw
mov
loop
loope
sbb
mov
pop
inc
fmulp
mov
pop
sbb
adc
out
add
adc
mov
push
jnp
inc
mov
or
xchg
subl
test
pop
adc
movsbl
lea
shlb
or
lods
xor
mov
sub
xchg
dec
sbb
sti
dec
pop
xor
mov
lock
inc
pop
push
fcompl
cmpsb
pop
sbb
xor
sub
movsb
mov
and
and
sbb
movsb
sbb
movsb
dec
xor
pop
sbb
xor
pusha
pusha
sbb
loop
and
pop
popa
cmp
cmp
adc
pop
jae
cltd
and
sub
test
addr16
sub
sub
or
popl
lea
cmpsl
jmp
ss
cs
dec
je
dec
xor
lret
add
notl
cvtps2pi
inc
test
adc
sub
sub
add
lret
jne
faddp
and
sub
xor
fwait
call
mov
add
mov
mov
xchg
lret
push
pop
and
divl
jne
sub
pop
arpl
leave
cmp
xchg
and
xor
push
repnz
aam
xchg
sahf
aam
add
jnp
sub
pop
ss
or
cmpsl
scas
xor
or
and
sub
cmp
lret
jne
sub
sub
add
icebp
loopne
add
add
movsb
mov
adc
lea
jnp
jge
pop
lret
inc
xor
dec
push
mov
add
sub
popa
cmp
fdivs
xor
in
adc
jo
nop
add
sub
cmp
adc
and
and
add
jo
je
jo
loop
and
addr16
pop
je
addr16
and
orl
xor
dec
ss
push
cltd
xor
fcmovnu
mov
call
pop
fisubrl
in
push
xor
sub
push
xor
sub
pop
pusha
adc
sbb
xlat
in
and
sub
pop
addl
clc
or
cmpsl
test
mov
sbb
cmpl
xchg
pop
rorb
ret
push
push
mov
add
mov
mov
push
arpl
inc
add
rcrb
popa
loope
xchg
jl
push
sub
mov
hlt
mov
xchg
pushf
add
adc
jl
cmp
jge
mov
push
out
push
dec
fcompp
xchg
sti
dec
cmpl
and
mov
les
fdiv
filds
add
push
mov
incb
arpl
or
insb
jnp
push
mov
lock
add
cmpsl
pop
loopne
nop
sbb
and
insl
add
dec
cmp
outsl
xor
fs
popa
add
or
dec
add
dec
iret
jmp
and
mov
insb
test
rol
xchg
jp,pn
add
nop
sub
adc
xchg
frstor
mov
add
xor
pusha
or
pop
dec
gs
lods
xor
mov
adc
adc
test
addr16
xchg
or
sbb
mov
cld
and
ret
ret
push
pop
ret
push
loope
add
mov
mov
push
ficoml
dec
fdiv
or
jb
jg
es
push
adcl
add
push
pop
idivb
add
adc
decb
push
pop
hlt
je
out
rorb
cmc
xchg
icebp
enter
pop
push
fdivrs
daa
inc
push
pop
jno
push
lret
xor
push
sbb
insb
cmpl
add
adc
dec
mov
loopne
jmp
je
cmovb
or
add
add
fildll
push
pop
push
test
or
or
sub
sbb
shlb
or
sbb
or
pop
repnz
in
dec
stos
lock
lods
adc
sbb
jl
or
repz
mov
or
or
pop
addl
lret
aaa
movsb
sub
into
test
or
cs
sbb
or
jbe
out
aas
fwait
push
push
push
addl
aaa
movb
pop
mov
pop
or
xor
repnz
and
xor
and
xchg
or
orl
or
shrl
je
nop
sbb
jbe
mov
xlat
sbb
movsb
dec
pop
jnp
das
cmp
or
shlb
jnp
lea
or
xchg
pop
divl
movl
ja
pop
call
dec
out
into
cmc
add
mov
mov
out
das
adcl
enter
cmp
xor
mov
xchg
push
nop
or
mov
or
sbb
push
inc
shrb
sbb
and
stos
iret
out
pop
fadds
clc
and
dec
mull
dec
or
std
rcrl
sbb
sti
mov
scas
daa
add
bswap
movsl
adcb
testb
scas
ret
push
push
adc
xchg
push
je
adc
loop
cmp
adc
or
hlt
notl
les
sbb
sbb
sub
push
movb
fldl
mov
push
inc
fcmove
mov
fcoms
pushf
and
mov
pop
adc
xchg
aam
mov
mov
sbb
xchg
xor
enter
dec
ja
loope
or
mov
pop
cmp
and
xchg
mov
cltd
js
cmp
xchg
sbb
popa
adc
aas
add
push
add
xor
or
cmp
mov
push
fbld
pop
push
xor
push
inc
dec
jne
dec
push
and
mov
jp
push
push
and
push
arpl
mov
outsl
push
leave
and
repnz
nop
inc
inc
mov
sbbl
pop
jmp
xor
mov
test
xor
fdiv
jmp
add
cltd
or
mov
icebp
lahf
neg
or
loop
mov
xchg
mov
lret
sub
cmp
jb
je
std
into
fisubs
adc
dec
pop
outsl
add
mov
pop
lea
xchg
pop
push
lcall
lock
mov
adc
cld
dec
jl
aas
ret
mov
lea
or
add
int
inc
and
add
je
or
adc
imul
imul
jmp
sub
jg
dec
jne
clc
inc
cld
mov
int3
ficoml
fimuls
mov
js
or
sub
push
push
scas
js
outsl
and
mov
mov
xor
cld
ja
and
ja
xchg
push
pop
fistl
test
ja
idivl
sbb
pop
pusha
shll
test
out
xor
mov
cmpl
je
shll
pop
sub
test
jne
jmp
push
testb
dec
rorl
pop
dec
and
leave
mov
ljmp
sarl
cs
pop
aas
movsb
pushl
mov
mov
mov
jecxz
lcall
inc
jle
xchg
jns
out
and
add
aam
xchg
mov
add
push
insb
rorl
repnz
lahf
idivb
mov
test
pushf
dec
js
lods
cmc
or
mov
sbb
push
push
add
out
jg
lock
inc
movsl
xorb
sub
lret
push
enter
outsb
shrl
cmpsl
imul
xor
ljmp
addb
sbb
inc
inc
dec
or
insb
sub
add
ret
shrl
and
stos
aaa
in
mov
inc
and
pop
pop
movb
jbe
movsl
cmp
jmp
push
sbb
sub
add
push
pop
mov
jmp
inc
loopne
andl
pop
mov
movsb
js
std
push
les
cmp
jbe
sub
insl
mov
push
pop
xor
push
or
sbb
stos
movsl
inc
inc
les
pusha
add
out
out
push
mov
inc
xor
dec
idivl
adc
or
or
jae
addr16
mov
call
ret
sub
lock
js
xor
sbb
pop
mov
push
gs
and
lret
cli
pop
pop
pop
push
ret
xor
pop
push
pop
jo
mov
xchg
sbb
aas
cmp
out
inc
sub
inc
or
add
xchg
ds
insb
mov
xor
fs
push
inc
sbb
cltd
add
jne
and
or
pop
loopne
add
movsl
pop
cmc
shrb
loop
subb
dec
pop
rorb
bound
orl
mov
dec
mov
sbb
push
loope
insb
pop
push
daa
flds
adc
xchg
sub
pop
adc
xor
push
pop
loope
or
xor
xchg
xorb
pop
test
aad
test
pop
add
jp
in
mov
sbb
pop
xor
add
scas
jmpw
inc
test
xor
jnp
xchg
pop
xchg
icebp
push
into
je
cmp
dec
add
bnd
sub
sub
dec
push
data16
mov
mov
testb
test
jno
xchg
mov
pop
stos
sbb
pop
push
aam
imul
cmp
jbe
adc
pop
pop
sbb
ret
sub
insb
sbb
inc
lods
or
jecxz
push
dec
cmp
mov
mov
fisubl
push
cmp
test
add
mov
add
fiaddl
mov
jbe
data16
xchg
adc
adc
aas
sub
scas
cmpsb
imul
add
and
shl
mov
push
adc
or
xchg
sbb
xchg
ret
jmp
rolb
xlat
sbbb
jne
push
in
adc
sub
data16
jne
shlb
and
rcll
mov
lret
je
cmpsb
lock
mov
lret
and
mov
cli
inc
inc
inc
fsub
adc
dec
ss
push
pop
dec
or
popf
cmpsb
or
pop
das
cmp
fmull
dec
mov
pop
and
push
sbb
mov
adc
add
push
dec
add
xchg
imul
push
fiadds
movsb
cmpsl
mov
sub
push
test
pusha
clc
mov
jmp
sub
push
xchg
es
adc
mov
sbb
jge
mov
push
adc
lea
incl
in
outsb
push
inc
mov
dec
push
cld
mov
dec
in
mov
movsl
andb
push
push
lock
add
jae
jb
push
add
adc
mov
and
or
dec
cs
cmp
jmp
inc
hlt
mov
cmp
jno
xor
mov
ret
popa
cld
jnp
xchg
dec
in
aas
lods
push
sub
fiaddl
fidivrs
jge
and
add
inc
inc
cmp
aam
je
scas
or
int
add
xchg
xlat
inc
lret
pop
fadd
adcl
dec
out
dec
std
aas
test
iret
test
je
and
or
add
cmpsb
ds
loop
and
call
test
sbb
insl
stos
subl
jle
shlb
test
inc
sahf
and
test
sub
add
incb
mov
or
dec
sbb
roll
loop
test
shlb
push
add
push
or
jns
jbe
stc
inc
lcall
ret
rolb
add
fadds
xor
push
mov
xchg
xorb
shrb
add
mov
call
repnz
push
adc
or
int3
inc
mov
mov
les
jne
insl
imul
movl
push
bound
aaa
js
fdivr
decl
sub
in
xor
sahf
add
movsl
movsb
dec
sahf
jmp
jle
dec
call
mov
cmpsl
mov
add
cmp
jne
push
or
loop
push
pop
jmp
xor
adc
lods
jecxz
je
push
xchg
inc
pop
lock
pop
clc
clc
and
mov
mov
aaa
bound
test
dec
pop
cwtl
jmp
mov
loopne
sub
or
dec
fwait
or
xchg
xchg
mov
push
and
divb
lock
sbb
aam
mov
mov
mov
int3
cmp
dec
push
inc
push
pushl
push
push
rcrl
nop
dec
mov
jno
adc
xor
or
outsb
pusha
sti
loop
push
mov
push
out
and
cmp
cmp
icebp
push
jle
mov
jle
and
push
cmp
mov
add
mov
and
pop
imul
add
jp
cmp
je
lea
add
js
pusha
sbb
sub
mov
stc
xchg
rcl
inc
xchg
add
xchg
aam
sbb
add
jne
or
int3
and
fdivl
jbe
adc
and
inc
and
xchg
sti
mov
je
pop
out
movsl
add
sbb
hlt
leave
js
mov
ret
pusha
lods
aam
xchg
xor
jmp
js
mov
cmp
scas
mov
push
fs
clc
sbb
sub
lea
pop
outsb
add
or
jo
jns
dec
xchg
inc
sub
rolb
jae
add
into
inc
movsl
fs
rolb
loopne
mull
push
push
mov
test
stos
mov
jb
push
shll
or
test
test
push
pop
inc
shl
bound
push
or
or
push
pop
pop
aam
call
dec
add
adc
cwtl
pop
decl
xlat
mov
dec
jae
sbb
sbb
in
dec
addr16
xchg
mov
ret
cmpsl
test
cmpl
jbe
leave
or
mov
pop
pop
or
push
cltd
push
pop
sub
dec
jbe
pop
shlb
push
cmp
jns
sbb
je
ret
adc
xchg
jl
dec
sahf
pushf
inc
mov
jb
lods
pop
mov
inc
js
push
cmp
pop
dec
les
dec
xor
ret
mov
test
sbb
sbb
pop
sub
dec
jbe
push
addb
add
shrl
loopne
daa
jmp
es
jmp
loopne
lock
arpl
push
or
das
xor
cwtl
cmp
and
popf
jecxz
adc
into
adc
mov
js
mov
test
pushf
pop
daa
adcb
or
push
xchg
push
mov
pusha
sub
rcl
xor
adc
dec
movsb
stc
cmp
inc
or
repz
ds
lods
jmp
shlb
dec
mov
jmp
js
bound
cmpsl
xor
adc
adc
mov
enter
movhps
adc
mov
cs
stos
mov
sbb
xor
fcoms
les
adc
fcoms
stos
pusha
cld
movsl
je
dec
test
movsb
adc
inc
sbb
dec
rcll
repz
jecxz
pop
adc
and
or
into
pop
roll
jbe
and
push
scas
lock
aaa
pop
xor
or
cltd
loop
aas
clc
dec
rcll
sbb
or
outsl
ret
dec
push
sub
clc
mov
pop
testb
and
rcr
test
sbb
jns
into
push
cmp
fcoms
push
and
jnp
popf
mov
jmp
push
cmp
jb
adc
jmp
mov
inc
cmpsb
into
and
lea
cli
loopne
and
mov
mov
jb
xor
jmp
lea
insb
sub
cmp
je
pop
pop
les
dec
adc
cmp
dec
addr16
jb
sbb
pop
pop
sbb
aad
incb
js
jo
dec
sub
jg
pop
jbe
idivb
je
ret
mov
push
gs
pop
mov
inc
add
push
ja
into
add
xor
mov
sub
xor
fldcw
xchg
sbb
faddl
lods
dec
je
lds
dec
notl
push
push
cmp
rorb
pop
out
lcall
and
adc
loope
inc
dec
adc
or
cmp
test
jbe
xor
sarb
hlt
sbb
push
sub
lods
inc
dec
nop
jmp
enter
rcrl
fimuls
push
jnp
jo
int3
xor
shlb
sarb
orb
inc
ss
pop
je
insb
aas
mov
cwtl
pop
pop
jl
cmp
jne
lea
mov
push
adc
adc
dec
dec
push
push
adc
adc
negb
mov
cwtl
jae
into
inc
and
pop
mov
push
cmpsb
inc
add
mov
sub
xchg
xchg
mov
inc
sbb
mov
pop
addr16
pusha
and
pop
fidivs
mov
pop
mov
mov
or
insb
push
xor
jne
lds
mov
mov
ret
push
ret
sub
push
sbb
pop
mov
movsb
xor
test
fmull
ret
in
mov
push
cmpl
jne
sahf
test
cmp
int3
cmpl
out
fldl
mov
mov
pop
push
pop
dec
fistl
fisubrs
movsl
popf
adc
rcll
mov
aas
stos
jo
push
adcb
mov
jbe
faddl
sbb
leave
mov
cmpb
push
bound
jl
sbb
repz
fsubl
and
ret
mov
cmp
in
dec
or
push
jl
pcmpeqw
pop
jp
test
add
es
aaa
dec
sbb
ljmp
jge
jno
cmp
pop
out
out
sbb
shll
fcompl
lods
ja
adc
pop
pop
iretw
lock
mov
xor
mov
in
test
push
stos
gs
push
mov
sbb
loopne
cmp
sub
int3
test
cld
ret
roll
imul
inc
adcb
push
cmpsl
sub
sbb
add
ja
jne
push
jle
mov
adc
mov
gs
or
push
xorb
push
fiaddl
push
inc
orb
lea
pop
jg
shl
hlt
push
push
jne
cld
mov
pop
mov
and
lods
mov
cmp
and
xchg
mov
lods
ss
pop
sbb
ret
mov
add
pusha
sbb
das
je
xor
fs
ss
push
dec
push
push
jecxz
xchg
add
and
je
sub
add
xchg
mov
xor
mov
and
mov
cmp
or
or
ret
or
push
adc
andb
rcll
inc
orb
cmovae
pop
shrb
lfs
les
or
es
or
xor
mov
lock
sahf
push
push
fcmovb
jmp
jbe
and
gs
andl
dec
hlt
push
inc
call
jg
js
inc
or
mov
pop
orl
fs
ljmp
push
add
fmull
jl
roll
addr16
ljmp
sub
daa
bound
mov
sub
fiadds
mull
sbb
xor
push
fbstp
ret
pop
xor
lods
dec
adc
xchg
inc
fisubl
mov
pop
test
sub
jno
inc
sbb
cmc
aaa
in
pop
add
mov
movb
aad
fs
push
fs
test
rol
mov
mov
sbb
sqrtps
pusha
push
insb
imul
ficomps
pusha
sti
mov
adc
dec
rcll
xor
dec
push
sub
add
outsl
data16
outsb
in
outsl
mov
or
push
mov
push
jp
inc
pop
cli
inc
bound
bound
lret
mov
fadds
lods
test
xor
jmp
add
jmp
cmp
incl
sub
add
jo
push
sbb
inc
add
hlt
icebp
or
mov
std
ret
add
nop
aas
pusha
stos
mov
push
inc
mov
inc
xor
pop
xor
cmp
movsb
lea
and
out
imul
cltd
and
leave
push
inc
push
jg
and
and
push
adcb
cmp
mov
push
dec
lea
fisubrl
es
sub
dec
scas
inc
sbb
or
ret
pop
push
sbb
xchg
sbb
testb
mov
sbb
pusha
adc
dec
push
and
mov
sbb
iret
in
add
sbb
and
lods
or
sbb
push
xchg
pop
jo
sbb
into
ljmp
add
xchg
insb
jbe
inc
iret
cmp
lret
cmp
xor
adc
vmwrite
mov
xchg
popa
cmp
or
mov
xor
mov
cs
dec
pop
ja
push
and
adc
cmpsb
dec
xchg
push
test
flds
adcl
dec
xor
dec
mov
push
jl
popa
fs
fstpl
pop
jbe
test
push
mov
fadds
jmp
pop
inc
push
adc
push
rclb
cli
or
cmpsb
cltd
inc
lods
inc
or
dec
sar
shr
dec
dec
pop
loope
jbe
or
or
lock
mov
das
je
int
or
movsb
xchg
xor
cmp
lea
adc
pop
int
ficompl
rorb
adc
add
sbb
and
and
popf
push
or
andb
inc
dec
loop
push
sbb
cs
and
mov
cmpsl
cld
test
test
clc
jmp
lea
and
xor
add
adc
mov
adc
in
mov
mov
scas
ror
jg
popl
jle
enter
shl
mov
jmp
jg
pop
mov
cmp
ja
jmp
push
fdivp
xor
les
xor
push
out
sahf
out
push
repz
jne
ret
pushf
push
cmpsl
fnstcw
push
scas
adc
js
xchg
out
mov
adc
insb
ret
cmpsb
or
cmp
pop
push
or
arpl
pop
xchg
adc
in
test
push
sti
mov
mov
divl
in
dec
cld
and
mov
lods
aas
sbb
jg
add
test
fildl
push
inc
sbb
adc
inc
adc
inc
sarb
ret
push
mov
push
andl
popf
sbb
clc
add
std
cmp
js
pusha
xor
sub
clc
mov
ret
shlb
mov
mov
lcall
leave
cld
and
lret
lcall
popf
in
add
mov
or
das
pop
out
and
push
xchg
jne
jle
xor
sbb
xor
pusha
xorl
inc
xor
xor
enter
es
cld
xor
test
jb
scas
inc
adc
movl
push
sahf
adc
or
and
call
fmull
cmp
dec
icebp
mov
pop
fwait
sbb
ds
mov
or
sahf
jbe
xor
js,pt
sub
leave
aaa
aam
cli
aam
insb
fsubr
int
testl
pop
mov
rcr
and
data16
mov
ret
out
push
mov
movzwl
imul
nop
lret
rcl
or
or
sbb
push
dec
imul
or
stos
mov
inc
iret
dec
push
call
movsb
pop
or
push
pop
enter
mov
call
mov
jns
push
sbb
adc
inc
pop
push
lret
pushf
les
aaa
leave
clc
push
cmpb
decl
jmp
jo
jle
stos
ljmp
sbb
mov
xor
xor
fdivrl
push
les
mov
lock
dec
push
lock
shr
or
fcomps
repz
push
xor
ret
add
inc
jo,pt
add
xchg
ja
xchg
jne
or
aaa
sahf
xchg
dec
sbb
je
test
sbb
add
add
clc
sub
mov
mov
pop
pop
test
popa
cmc
mov
jg
shrb
addl
arpl
sbb
pushf
out
sub
push
shlb
lds
push
jne
adc
mov
pushf
dec
inc
test
test
lea
sbb
and
pop
sub
jno
outsl
inc
loopne
pop
push
loop
mov
or
or
mov
jbe
jge
cmp
sbb
cltd
inc
sub
sbb
data16
jnp
faddl
js
mov
sahf
xor
das
jae
repz
sub
dec
cmp
inc
insl
add
jle
pop
pop
loop,pt
push
push
lock
je
jne
inc
shr
sbb
sbb
or
jbe
rcrl
je
xor
movsl
fisubrl
push
movsb
fnsave
inc
jg
ret
sbb
outsb
dec
add
add
dec
inc
sbbl
add
lock
fstpl
xlat
dec
dec
jp
and
sbb
mov
subl
fcoml
pushf
cmp
in
inc
and
inc
fmuls
in
pushw
out
rcll
sub
or
aaa
je
and
sub
and
dec
enter
jnp
shl
adc
aad
andl
in
jo
mov
inc
or
mov
dec
lods
shlb
sarb
insb
xor
lock
mov
adc
mov
mov
pop
js
sbb
mov
xchg
add
std
das
mov
jge
mov
inc
mov
inc
ljmp
inc
sbb
icebp
test
int3
jg
loop
sub
mov
sarb
rcrb
jg
push
loope
fwait
pop
mulb
mov
cmpsl
push
mov
push
adc
sub
adc
fmull
or
adc
inc
sbb
pusha
mov
push
lea
or
dec
mov
incl
xor
push
bound
jg
test
push
jle
mov
sbb
pop
and
je
inc
pop
cmp
jb
push
adc
dec
mov
aam
sbb
xor
dec
jg
or
adc
push
push
add
cmpsb
adc
add
pop
outsb
dec
dec
ret
sahf
and
mov
lahf
movsb
sub
lar
sets
sbb
addl
xchg
or
in
and
dec
mov
jle
pusha
push
mov
xlat
jbe
sub
cmpsl
bts
lods
mov
cltd
or
pop
je
cmp
or
xchg
je
cmp
scas
jbe
mov
xchg
add
push
jb
xlat
adc
daa
push
cmp
add
sysexit
inc
mov
cli
hlt
popa
fs
inc
dec
fildl
and
cmpsb
xor
rorb
jbe
and
xchg
or
push
add
mov
jo
push
jg
fdivrl
loope
or
dec
xor
outsb
sbb
ss
push
dec
or
sub
repnz
dec
ret
ret
cmp
or
pop
push
add
inc
sbb
add
pushf
push
rclb
pop
or
xor
rcrb
cmp
and
or
or
inc
in
addr16
add
lods
push
inc
cmp
das
out
adc
aam
dec
jo
push
popf
inc
cmp
lea
testb
adc
adc
lea
movsb
lods
mov
cltd
jbe
enter
dec
add
or
push
pop
sarb
scas
add
div
cmp
loopne
pshufw
add
sub
sub
or
cli
sbb
jnp
jge
xor
add
arpl
jmp
and
mov
sub
push
adc
push
xor
jmp
mov
ljmp
add
mov
sub
aas
sub
cmp
dec
mov
mov
cmp
jbe
idivl
jne
andl
ret
mov
mov
adcl
xorl
xor
outsb
dec
and
xchg
fstpt
mov
in
or
jb
and
scas
loopne
mov
imul
cmp
fistpll
pop
mov
cmp
mov
jb
pop
adc
jno
push
in
inc
inc
mov
into
inc
aas
rorb
dec
imul
xor
jmp
lea
or
inc
mov
stos
call
lret
pop
aam
xor
outsl
lds
cmp
outsb
mov
cmp
cmp
rdtsc
jmp
fldl
adc
cwtl
lea
inc
dec
arpl
call
dec
ret
adc
stos
cmp
pushf
iret
push
pushf
or
int3
adc
dec
jg
or
jmp
addb
roll
adc
dec
enter
push
or
shll
and
and
inc
aaa
call
cmp
inc
pop
out
js
loop
mov
mov
adc
out
iret
ss
pop
insl
jb
sbb
or
aad
andb
fdivrl
cmp
or
call
mov
icebp
fnstenv
aas
cs
arpl
xor
cli
push
jmp
popa
faddp
in
mov
in
in
jbe
inc
jecxz
jnp
sub
cmc
pop
add
mov
pop
mov
sbb
lea
jbe
pop
mov
mov
mov
clc
mov
gs
inc
inc
inc
sub
or
jb
sub
or
icebp
xor
aaa
mov
leave
lods
iret
popa
adc
push
and
mov
mov
popa
inc
jb
or
mov
mov
inc
adc
and
push
mov
mov
cmpb
cmp
pusha
xchg
ja
jl
adc
and
adc
loop
in
lock
fldt
daa
faddl
dec
mov
jge
neg
aas
add
test
mov
mov
dec
sub
fcomi
pop
fiaddl
xor
push
cld
je
inc
fbstp
insl
hlt
fmulp
fldt
fwait
jl
sub
jle
mov
das
and
adc
push
nop
add
mov
add
inc
mov
add
mov
cmovae
sbb
cmp
cmpsl
xor
adc
cmp
aas
or
add
cltd
mov
mov
dec
xchg
dec
and
xchg
ret
addb
sbb
sbb
sub
push
cwtl
sbb
rorb
mov
inc
mov
pop
xor
ss
cmp
ffree
and
les
inc
xlat
ja
lea
fnstsw
fnclex
xchg
subl
loop
dec
add
mov
pop
jb
rcrl
ds
into
fldcw
pop
jmp
or
clc
push
mov
pop
fs
hlt
and
fninit
push
mov
add
mov
fwait
jo
lock
push
orb
repnz
mov
adc
adc
dec
mulb
pop
xorb
sub
ja
insl
sub
es
add
cli
push
ds
adc
adc
xchg
mov
jbe
std
push
push
fldt
fistpll
fwait
ret
das
pop
pusha
pop
adc
inc
mov
in
or
out
mov
fstp
fwait
scas
mov
push
adc
aam
ljmp
popl
inc
push
mov
popa
fdiv
jge
sub
or
cmp
fsubrl
dec
xchg
adc
fimull
aas
js
push
cmp
dec
mov
mov
mov
je
pop
push
cmp
rolb
sub
jmp
es
cmp
mov
sbb
add
scas
dec
push
notb
adc
cmpb
fsubrs
sub
mov
cmp
jp
jle
mov
mov
push
jo
incb
cmp
mov
push
sarl
mov
jg
cli
jne
sbb
movsb
jg
or
pop
in
fldl
jp
cmp
lock
sub
loope
pop
addb
jne
push
mov
jne
pop
push
mov
sub
adc
pop
in
movsb
inc
in
lcall
mov
or
lock
ror
push
dec
or
add
add
add
jne
pop
loopne
fisttpll
xor
jg
jo
popa
adc
add
out
iret
test
mov
loopne
jmp
rolb
inc
inc
and
adc
xchg
jg
lahf
mov
or
imul
sub
arpl
sti
outsb
test
testl
jne
push
dec
mov
add
sbb
xor
adc
and
add
popa
dec
cmp
lahf
jp
adc
and
mov
push
sbb
push
lret
es
lret
adc
pop
and
hlt
and
xchg
mov
dec
or
jb
imul
or
add
push
or
adc
outsl
jg
fstpl
or
nop
inc
cli
insb
test
jp
sbb
sbb
aaa
mov
popa
and
leave
sti
push
inc
mov
adc
xor
data16
idiv
push
cmp
inc
xor
sbb
jge
inc
dec
in
inc
rclb
push
daa
lods
xchg
ret
dec
pshufw
bound
mov
jecxz
testl
add
and
and
push
add
push
cwtl
inc
jle
sbb
add
push
cmovs
pop
push
imul
jmp
adc
or
divl
cmp
jg
mov
mov
cmp
xchg
inc
push
sbb
push
adc
adc
cmp
jg
add
loope
mov
stos
add
push
pop
jne
call
and
insl
jl
mov
sbb
push
pop
inc
mov
adc
or
inc
pop
xorb
lea
add
add
out
xchg
mov
and
mov
push
icebp
adc
scas
inc
mov
ljmp
add
fs
inc
call
roll
subl
xor
in
jg
jle
push
pop
add
dec
loopne
dec
out
inc
je
or
inc
mov
std
jl
and
rorb
nop
inc
sub
jp
push
inc
xchg
jg
xorb
mov
stos
mov
jbe
inc
sbb
pop
divl
cltd
mov
push
sub
test
inc
inc
or
lahf
and
in
add
mov
sbb
dec
mov
xor
insb
cmp
arpl
fisttps
mov
or
add
push
and
jbe
adc
inc
jl
pop
cmp
rorb
daa
fidivs
test
pusha
in
in
insl
fmull
inc
adc
daa
jne
fwait
and
pop
inc
negb
ljmp
and
or
jno
scas
subl
addb
sub
cmp
loop
jl
cmp
notb
add
add
cmp
xlat
xorl
sbb
xchg
rorb
inc
stos
icebp
jo
inc
rol
or
adc
movl
lock
ja
xchg
idivl
call
adc
cli
adc
sbb
cmp
call
cwtl
incb
out
or
push
dec
stos
test
jne
xor
push
pushf
orb
mov
movsb
and
xor
adcw
cmpsb
adc
and
jb
cmp
pushf
cs
and
inc
push
inc
push
mov
sub
mov
mov
adc
or
pop
jp
add
enter
les
add
leave
mov
inc
sbb
sbb
mov
mov
mov
adc
sub
repz
sub
scas
pushf
jmp
cmp
or
xchg
mov
test
loope
mov
nop
push
stc
sbb
lcall
adc
enter
std
jg
or
sbb
mov
loop
push
ficompl
pop
fidivrs
jb
sub
sbb
aas
sub
out
xlat
daa
cmp
sahf
data16
int3
cmp
data16
pop
adc
inc
push
dec
or
imul
jmp
push
sbb
imul
cltd
sub
bound
and
push
dec
xchg
arpl
addr16
insl
cli
sub
adc
xchg
addr16
or
mov
inc
sti
fdivrl
cmpb
clc
adc
jp
push
testb
push
hlt
repz
jl
lock
add
imul
loopne
in
int3
push
loopne,pn
addr16
and
push
adc
xchg
inc
sub
sbb
xchg
ret
sbbb
mov
aam
dec
sbb
mov
faddl
faddl
jmp
sbb
lea
movsb
outsb
lock
add
inc
out
and
pop
and
in
stos
inc
ss
or
call
cmpsl
imul
jb
dec
and
adc
sbb
jge
stc
in
movsl
push
movsb
mov
mov
xor
xchg
push
in
lcall
jmp
jl
sub
push
adc
ror
test
mov
sarb
das
or
cltd
test
mov
fisubrl
decb
jg
pop
scas
add
add
or
pop
sub
pop
xor
mov
mov
fwait
leave
inc
pop
push
fcmovb
mov
pop
add
or
push
ss
or
js
movsl
pop
xchg
pop
into
dec
dec
sub
pop
fadds
in
sarl
jg
out
shl
add
in
mov
gs
sti
xchg
pop
mov
test
lock
push
mov
rclb
hlt
sub
push
push
push
or
call
ja
nop
fwait
cmp
fidivrl
cmpsb
jne
cmp
lods
mov
shrb
cmpb
add
mov
adc
push
sbb
stc
stos
sbb
inc
xlat
add
or
daa
mov
sub
mov
mov
int3
or
add
add
movl
mov
loope
ds
in
test
add
sbb
jecxz
jle
pop
ds
push
add
pushf
mov
dec
test
mov
jmp
std
repz
scas
xor
lock
fldt
dec
mov
fdivrp
push
les
leave
cwtl
sti
mov
and
loopne
imul
or
add
negl
loopne
loopne
add
shl
scas
lods
sbb
data16
icebp
jl
pop
call
sub
lds
and
xor
xor
mov
jne
sbb
lods
ret
and
sahf
mov
sbb
cmp
cmp
cmp
inc
xor
push
jns
fisttpl
mov
mov
aam
adc
popf
add
dec
sub
sti
cmpsb
pushf
mov
push
lret
push
cmp
and
imul
mov
xor
jns
subl
cmp
or
insb
or
add
dec
or
sub
in
sbb
pop
or
inc
std
xor
sbb
in
mov
sub
and
mov
dec
daa
ret
pop
add
mov
cmp
fld
insl
lock
push
rorl
roll
pop
inc
add
sub
jg
enter
mov
mov
mov
repnz
mov
mov
ror
add
inc
add
scas
mov
adc
cwtl
pusha
adc
push
sbbb
sub
cmp
mov
cmpsb
icebp
or
adc
sbb
das
adcb
jmp
jo
mov
mov
addb
clc
cld
lea
imul
add
jae
test
imul
and
mov
and
cmp
jno
add
add
fstpt
lret
sub
push
push
or
xchg
push
movsb
testl
mov
add
les
add
jo
dec
push
pop
sub
add
and
std
and
mov
lea
push
jo
cmpsb
add
xchg
movswl
sub
add
stc
adc
outsb
imul
push
or
sub
je
loope,pt
mov
call
push
mov
addb
mov
or
pop
xchg
or
repz
jmp
lock
icebp
inc
daa
pusha
sti
add
jmp
pop
insl
sub
mov
mov
and
push
push
sub
xor
in
aas
jbe
movsb
fildl
lahf
dec
jmp
lea
push
jg
xlat
test
jbe
loopne
jne
mov
inc
mov
bound
push
dec
js
je
push
push
push
add
push
fimull
adc
mov
std
fadds
or
int
insb
fdivs
jmp
jno
nop
mov
hlt
pop
movsbl
or
sbb
cmp
and
push
cmp
mov
xchg
add
sbb
inc
add
jmp
add
xor
pop
mov
sahf
inc
call
push
sub
inc
sti
xchg
arpl
sub
push
inc
add
dec
sub
cmpsl
mov
inc
cmp
or
xchg
jl
mov
cmpsb
inc
je
ficompl
stos
push
stos
xor
dec
outsl
dec
cltd
inc
inc
xlat
test
mov
in
dec
nop
mov
and
add
adc
imul
jae
sub
push
push
test
movsl
mov
and
add
xor
leave
mov
es
loope
arpl
mov
push
push
pop
in
jg
mov
push
dec
jecxz
decb
das
and
sbb
inc
mov
sahf
loopne
cld
jne
add
push
clc
or
pop
lcall
movsb
test
fcoml
jle
push
movsb
jo
pop
push
test
mov
and
fldl
add
xchg
mov
lods
hlt
out
aaa
pop
add
bnd
or
insb
add
nop
orl
pop
jmp
pop
add
and
ja
pop
add
ret
jle
roll
jge
sub
test
mov
stc
lods
orb
jo
cmp
jno
insb
mov
mov
add
sbb
cmp
jle
fidivrl
fisttpl
pusha
outsb
sub
mov
mov
cmp
das
mov
mov
sti
adc
xor
jne
repz
std
lods
push
push
insb
push
or
mov
push
aaa
or
cmp
adc
cli
aaa
in
cli
xor
mov
fmull
pop
mov
or
les
cmp
add
cmp
and
pop
mov
rcll
or
and
mov
imul
xchg
test
mov
cmpsl
dec
cld
lods
jne
imul
push
mov
test
xchg
out
sbb
lea
cmp
pop
jmp
data16
int3
xor
push
xor
or
out
pop
test
movsb
and
dec
in
mov
xor
lock
adcb
or
jbe
fistpll
nop
mov
push
nop
into
scas
xor
sbb
sub
daa
or
xchg
loopne
xor
xor
mov
std
or
scas
test
aaa
pop
sub
add
fidivrs
lret
jne
adc
cltd
mov
sub
push
rclb
pushf
mov
and
lret
arpl
ljmp
push
or
mov
add
jle
or
inc
sbb
xorb
mov
cld
mov
insb
mov
push
ret
adc
movsb
imul
sub
xor
and
leave
add
out
adc
jnp
or
xor
fbld
loope
and
out
or
xor
sub
cmovs
and
adc
cs
je
adc
sbb
inc
mov
sub
inc
loopne
dec
push
inc
pop
mov
add
out
repnz
sub
es
pop
test
out
js
and
sub
fdivrl
dec
cltd
sub
sub
rclb
mov
or
add
adc
arpl
push
mov
adc
gs
jecxz
imul
lods
das
jbe
or
pop
mov
aam
push
mov
popf
cmpsl
lods
sahf
xor
loope
ds
xchg
insb
and
loopne
add
or
jnp
and
mov
fsubl
sbb
jg
push
test
loopne
add
push
mov
loop
mov
xor
cmp
sub
sbbl
fs
or
dec
mov
ljmp
cwtl
mov
push
aad
je
adc
mov
in
jae
cmp
adc
dec
add
es
push
movsl
pop
sbb
adc
shll
xor
rcl
psllw
push
xchg
cs
add
sarb
ret
pop
mov
fldt
push
ret
push
adc
test
cwtl
dec
jl
pusha
mov
cmp
inc
popf
cwtl
pop
cwtl
andl
and
mov
or
sub
xor
movsb
and
adc
fs
ljmp
mov
add
or
add
scas
sarl
mov
and
push
js
add
mov
jnp
adc
ret
add
mov
push
dec
fistps
inc
push
insl
call
and
pop
inc
aaa
js
sti
mov
sub
push
xlat
sarb
xchg
xor
arpl
aaa
cmp
push
mov
mov
push
mov
imul
jge
or
dec
push
mov
sbb
std
or
pop
shr
sub
mov
stos
pushf
mov
sbb
mov
ja
mov
or
sti
dec
ret
and
sbb
xor
adc
adc
sbb
hlt
mov
shr
push
push
sbb
or
pop
test
xor
movups
adcb
or
popf
push
jg
push
mov
inc
imul
inc
push
ret
nop
outsl
add
and
test
sub
testb
add
enter
xchg
cli
negl
xchg
pop
out
mov
nop
incl
orb
lods
mov
jne
add
pop
loopne
push
test
push
dec
adc
hlt
data16
pop
jg
je
cmp
je
data16
jle
xor
je
inc
xor
adc
cmp
push
mov
orl
mov
add
stc
push
popf
dec
xor
xchg
test
mov
imul
push
data16
cmp
and
or
adcb
xor
sbb
sub
int3
sbb
aas
jne
iret
arpl
jbe
sub
mov
in
push
mov
adcb
jle
fwait
je
jo
adc
hlt
test
push
bound
cmp
dec
sub
sbb
dec
or
mov
mov
inc
cmp
mov
adc
cwtl
mov
pop
or
les
cmp
or
cltd
pop
pop
sub
cs
out
add
xor
mov
mov
sti
adc
inc
add
add
add
pushf
loope
lock
es
cmp
sub
inc
inc
and
and
in
xchg
adcl
push
sbb
clc
dec
out
mov
sarb
push
aaa
addb
fistpl
pushf
add
lahf
outsl
and
and
and
adc
push
xor
pop
lahf
movsb
jb
inc
mov
push
out
jne
mov
or
jns
cwtl
loop
add
cmp
addl
aas
lock
or
inc
psubb
dec
xchg
push
ret
ljmp
loop
cli
jle
add
je
or
dec
add
dec
lret
xlat
xchg
inc
cs
inc
pop
lock
cmp
adc
mov
sahf
mov
add
sub
jne
push
jl
inc
in
aas
push
push
mov
add
fs
mov
in
inc
bound
testl
add
xor
out
xchg
jae
jle
movsl
adc
mov
mov
push
jb
test
in
test
xor
mov
xchg
movsb
or
inc
add
add
or
fsubrl
add
popa
and
inc
and
outsl
mov
cmpsb
adc
jae
xlat
outsb
pushf
xchg
adc
adcb
roll
push
sbb
nop
pusha
les
lods
lods
inc
mov
test
xor
adc
xor
pop
insl
mov
inc
add
inc
jmp
adc
sbb
je
mov
jmp
dec
or
xor
inc
ret
adc
ficoms
adc
lcall
mov
ja
push
jo
shr
inc
leave
loop
push
adc
es
sbb
inc
cmp
mov
rcll
xchg
or
xor
push
sbbb
add
int3
les
cmp
xchg
xchg
in
lahf
add
sbb
repnz
cli
nop
xchg
lods
mov
imul
in
movsl
test
mull
imul
cs
icebp
mov
imul
jno
xor
ret
adc
dec
add
divb
mov
lret
cmc
cmp
mov
or
or
add
int
test
inc
push
or
gs
pop
push
test
fnstsw
or
aas
adc
inc
fisubs
and
or
inc
adc
adc
jns
xor
cmp
insl
push
xchg
sub
movsb
mov
idiv
es
push
icebp
insb
es
and
push
push
gs
push
pop
fstps
loop
push
or
mov
ljmp
and
jmp
into
inc
mov
lcall
lods
inc
pop
popf
add
cs
movl
loopne
cmp
sbb
jnp
inc
xor
aam
andl
insb
movb
pop
nop
xchg
cmp
lock
adc
lret
add
out
lock
jmp
ret
clc
inc
jl
mov
xchg
xor
outsl
ret
cmp
xchg
mov
sbb
test
inc
mov
mov
mov
mov
push
stos
aam
mov
mov
gs
jbe
shll
pop
outsl
and
push
lods
mov
aas
or
outsl
mov
jb
or
xchg
sbbl
movsb
pop
inc
jmp
add
sub
push
dec
dec
lea
xchg
cmpsb
das
pop
cmpsl
push
cmp
jne
loopne
dec
dec
xlat
mov
pusha
xchg
sub
sub
test
pop
jp
hlt
mov
fsts
mov
dec
sbb
js
push
mov
jl
js
mov
scas
sbb
add
mov
or
adc
frstor
push
fistpll
pop
cld
jae
xchg
std
rorl
jb
negb
cli
cmp
ja
cmp
sti
jbe
sub
mov
dec
clc
jg
add
xor
sub
jns
xchg
push
pop
iret
cmp
add
or
add
aaa
je
fidivrs
movsl
fcomps
paddq
or
pop
je
xor
adcl
je
or
inc
loope
cmp
insb
cmp
jl
nop
mov
scas
pop
xchg
addr16
dec
sbb
inc
fisubrl
xchg
shlb
scas
lret
mov
mov
push
and
cmpsb
mov
daa
fmull
jbe
fwait
pop
test
xor
mov
or
xchg
aas
xor
dec
sahf
mov
mov
shlb
rorb
push
stos
mov
sahf
jbe
inc
push
es
fidivl
js
jmp
cmp
add
inc
inc
sbb
pop
inc
in
ret
cs
sbbb
jg
sub
adc
shl
ret
mov
cmpxchg
adc
mov
inc
jmp
fisubrl
mov
push
mov
movb
icebp
add
sub
jns
cmc
icebp
test
sarb
or
add
push
or
pop
and
push
push
sbb
ds
xor
jmp
mov
inc
or
je
or
ss
xor
mov
ret
lods
mov
lods
push
lret
push
cmp
jne
fistpl
or
sub
rorb
sbb
popa
dec
call
in
addr16
add
cwtl
test
cmp
sbb
add
pop
fmuls
fisttpll
sub
fisubs
dec
setg
cmp
dec
pop
cwtl
mov
add
or
sub
into
cmpsl
mov
shlb
inc
lods
cmp
push
mov
les
push
jge
mov
fwait
or
sbb
cli
push
movl
mov
mov
inc
sub
pop
subl
or
push
dec
into
push
dec
nop
jmp
dec
fstpt
cmp
sbb
test
inc
and
es
push
rcrl
rorl
push
imul
in
cli
out
mov
push
add
pop
cmp
push
jbe
js
xor
or
or
xorl
cmp
sbbb
sub
mov
adc
mov
sbb
popf
mov
mov
push
cmpl
repz
pmuludq
add
insb
dec
addr16
mov
xor
add
aaa
dec
hlt
daa
push
mov
cmp
ud2
mov
dec
mov
mov
mov
movsb
or
in
sbb
push
pop
loopne
xor
pop
ja
fwait
in
add
orb
inc
adc
jl
cld
cmp
jb
add
sub
lea
test
fcomps
dec
fldt
and
rcrb
jmp
add
sub
jbe
pop
add
out
sbb
lods
push
and
sarb
daa
clc
adc
xor
imul
xchg
pop
jmp
push
lret
xchg
je
push
adc
pop
sbb
ja
add
lea
rorb
add
xchg
nop
push
push
sbb
adc
dec
pop
imull
fisubl
loopne
xor
test
rcrl
mov
setae
jbe
cmp
add
xchg
adc
add
and
daa
hlt
push
enter
push
sarb
out
mov
add
adc
dec
imul
out
mov
add
adc
ja
xchg
hlt
xor
adc
popa
xorl
adcl
pop
cltd
jne
sub
pop
lea
inc
sbb
out
sbb
shr
adc
repnz
popa
dec
fwait
adc
or
loop
rclb
and
cmp
jge
sub
lea
mov
lea
push
adc
dec
imul
or
pop
out
mov
loop
and
dec
adc
add
adc
call
adc
mov
jne
mov
add
aam
roll
addr16
add
and
or
push
dec
dec
fs
jle
js
push
inc
dec
adc
lods
dec
xor
loop
sbb
add
mov
sub
out
jl
dec
xor
je
mov
andps
push
and
push
cltd
shrb
mov
lret
jb
hlt
mov
xchg
in
ret
dec
add
sbb
jp
neg
mov
add
adc
je
insb
ret
ds
xchg
rclb
jne
or
mov
sbb
cmpl
or
in
mov
loope
adc
test
fstl
sub
outsb
dec
outsb
adc
push
push
jbe
pop
cmp
cwtl
pop
pop
dec
aad
pop
xor
mov
jle
dec
mov
adc
shlb
adc
xor
outsl
sub
loope
pop
inc
mov
push
add
stos
test
gs
xor
loope
add
int3
push
add
icebp
mov
ret
lock
push
lea
push
xchg
add
sbb
cmp
sbb
add
das
cld
push
lods
mov
add
les
leave
or
jne
dec
inc
cmp
into
jae
inc
cmpsb
sbb
enter
sarb
pushl
add
jl
cli
push
js
sti
mov
repnz
and
add
adcb
sbb
out
pop
and
or
add
or
fmull
add
mov
xlat
add
pop
add
adc
xor
xor
pop
je
sub
inc
test
imul
fcoms
push
pop
add
enter
aas
jmp
pop
xchg
adc
push
lcall
sbb
cmp
jae
add
repz
push
add
iret
repz
or
repz
ffree
movl
lods
cmovns
add
or
jle
push
mov
icebp
cmp
lret
lds
std
lock
mov
ret
cmpsl
xchg
sub
movsb
loopne
ret
imul
shl
les
jo
out
test
ljmp
leave
adcb
jnp
xlat
lods
loopne
decl
je
add
adc
push
in
psubb
pop
rcrb
clc
and
and
in
rcr
add
rcrb
sub
lock
and
je
in
pop
cmp
in
fcompl
inc
ficompl
das
pmulhuw
aas
call
int
mov
ja
dec
in
in
cs
mov
jb
push
xor
pop
jbe
loopne
nop
xchg
pop
clc
movsl
fsubl
pop
jb
scas
push
fs
xchg
cmpsb
fisttpll
je
pop
jb
jo
or
rcrl
jmp
jmp
dec
jp
mov
fs
lock
xchg
and
stos
jmp
mov
sahf
jnp
nop
out
test
and
pop
sbbl
push
jle
mov
xchg
or
das
mov
popa
dec
arpl
mov
jnp
adc
cli
ret
push
fisubrl
jbe
flds
cmpb
cs
mov
es
sub
and
add
inc
cli
mov
add
push
aaa
lods
jp
js
dec
lea
test
fcmovbe
dec
push
push
or
aad
out
add
ror
mov
sbb
rclb
dec
push
inc
testb
push
and
or
sbb
mov
sub
cmp
fwait
lods
incb
loopne
add
ret
fisttpll
push
and
xor
xor
les
inc
adc
push
mov
sar
adc
and
xchg
shrb
sahf
jmp
insb
stos
dec
jbe
ja
cmpsl
test
cmp
push
sub
rcrb
loope
adc
pop
inc
xchg
inc
je
xor
and
xchg
inc
fwait
or
inc
pop
sti
popa
stos
movl
mov
pop
or
adc
ja
push
adc
pusha
sub
fsubs
ret
sahf
mov
stc
and
pop
add
sub
and
cmpsb
std
and
dec
je
add
and
or
sub
std
es
sarb
aam
sbb
loopne
sti
sbb
jg
jmp
mov
push
dec
movsl
pop
push
jmp
adc
sarb
movsl
mov
add
mov
mov
scas
daa
xor
mov
aaa
pop
stos
jno
bound
aas
das
adc
dec
or
add
or
xor
clc
dec
xchg
clc
movsl
lods
lea
inc
inc
push
test
push
jo
ret
push
xor
or
jp
sbb
popa
fcmovnu
adc
sub
dec
outsb
test
or
mov
lods
das
test
and
clc
jp
movsb
addb
adc
add
xchg
add
test
js
dec
lock
and
dec
cli
add
sbb
out
dec
orl
sub
adc
adc
jmp
movsb
adc
in
insb
fsubs
hlt
xchg
mov
dec
cmpsl
sahf
movsb
rorb
mov
cld
dec
scas
mov
sbb
jmp
lds
mov
adc
or
push
jns
loop
int
and
scas
inc
adc
pop
sti
dec
push
lea
lahf
rclb
jle
adc
add
push
push
add
nop
and
xor
mov
sbb
push
and
cmp
aas
sbb
or
add
xchg
cmp
add
jecxz
insl
mov
lods
mov
outsb
or
jne
je
push
sahf
testl
test
insl
std
sub
mov
fadds
shll
aaa
cmp
mov
push
push
jbe
cs
push
push
jle
adc
aas
pop
jge
push
and
lods
or
or
movsl
jne
jns
push
dec
lea
pop
and
mov
mov
shrb
sarb
daa
sub
sbb
popf
sbb
pop
sub
mov
and
mov
push
jno
scas
sbb
adc
scas
fnstenv
xor
xor
inc
mov
push
cmp
and
mov
and
sbb
inc
inc
push
movb
pop
cmpl
fidivs
adc
add
push
lds
xor
pushl
xor
jb
mov
dec
fimuls
jno
and
or
shlb
scas
jb
xor
jp
xor
stos
test
jmp
daa
dec
inc
push
push
hlt
filds
inc
adc
sub
push
push
push
or
cmp
in
fs
lret
sahf
inc
add
and
add
dec
cmpl
mov
fisttpll
xchg
daa
aas
cld
xchg
jnp
es
push
cmp
xlat
jne
inc
adc
push
fs
cmp
addr16
int3
mov
int3
in
push
rorb
sub
call
or
cmp
rorl
mov
rorl
mov
fsubl
or
add
lods
cmpsb
imul
ss
je
add
dec
dec
int
inc
mov
jne
jnp
gs
sbb
xchg
hlt
ret
adc
or
and
add
inc
xor
xor
ja
test
mov
cld
ss
xor
inc
adc
jae
add
and
rorl
bound
xor
mov
push
pop
and
sub
mov
lock
es
sbb
dec
insb
mov
pop
mov
cmpsb
jl
jnp
add
out
mov
sub
mov
test
cmp
jo
push
inc
adcb
pop
or
dec
je
lcall
stos
loope
dec
movsl
incl
sbb
sub
les
dec
xor
and
inc
lcall
lret
or
or
dec
sub
jo
jge
mov
mov
add
mov
jae
xchg
lret
insb
pop
push
popa
imul
sbb
or
xchg
inc
sub
or
mov
jbe
lret
fwait
jl
inc
and
filds
leave
shlb
jge
repz
mov
jns
or
adc
sbb
or
movsl
ret
sub
aaa
addl
jae
je
cmp
nop
mov
dec
mov
je
mov
xor
push
jne
adc
mov
sbb
sbb
xor
sub
or
mov
push
inc
int3
push
inc
into
nop
cmp
addb
shl
add
push
in
xor
bound
pop
mov
push
ret
imul
nop
dec
fisubrl
mov
push
orl
xor
jne
mov
test
call
popa
dec
mov
and
cmpl
movsl
adc
loop
mov
cmp
add
mov
pop
aad
inc
sub
cmpsb
clc
adc
cltd
dec
cmp
sbb
mov
outsb
add
add
or
mov
inc
ret
loope
sbb
je
mov
and
dec
dec
jnp
mov
add
jnp
xor
cmp
cmp
sbb
andl
cmp
xor
aam
inc
inc
mov
inc
add
arpl
adc
push
push
dec
fiaddl
enter
add
mov
and
fisubl
pop
xor
dec
in
loopne
sub
push
sahf
lcall
ljmp
and
dec
es
enter
add
cmp
jo
out
jne
testb
dec
push
cmp
test
clc
jne
cmp
cmp
and
add
sbb
sub
add
add
xor
sbb
xchg
add
and
ret
loopne
roll
push
les
je
push
adc
sub
push
inc
aad
cs
cltd
push
fisubl
clc
push
jne
xchg
jle
iret
sub
xchg
mov
test
add
mov
xchg
add
inc
sub
and
pop
push
push
rcrb
clc
and
or
push
inc
stos
nop
pop
sbb
cltd
add
push
ficoml
cmpsl
and
push
xchg
inc
mov
or
pop
js
ret
fwait
in
movsb
test
push
mov
testb
pop
push
das
mov
dec
ficomps
push
pop
sub
mov
cmp
clc
flds
bound
jmp
xchg
or
mov
add
inc
add
dec
incb
push
addr16
mov
ret
in
rclb
mov
adcb
and
sub
xchg
jle
sbb
jbe
or
cld
and
sbb
lock
cmp
xchg
fs
xchg
lret
push
or
push
fs
loopne
mov
data16
inc
add
enter
sbb
mov
push
test
enter
sbb
aaa
fsubrs
mov
ror
pop
lea
lea
movsb
mov
fisubrs
jo
enter
in
add
adc
out
in
add
or
out
pop
call
sub
mov
jmp
mov
mov
push
sbb
push
sbb
jmp
and
mov
mov
add
add
mov
xchg
ror
je
out
mov
push
mov
outsl
imul
lea
or
lret
mov
aad
les
ja
test
sub
push
loopne
loopne
add
mov
or
and
dec
fadd
popf
dec
inc
xlat
xorl
shr
mov
fisubrs
push
push
mov
push
jmp
push
push
or
push
repz
jmp
push
or
dec
push
cmp
imul
push
add
rcll
push
xor
xchg
jg
lea
dec
arpl
sub
subb
xchg
pop
jmp
and
add
push
or
insl
pop
mov
add
jmp
mov
data16
add
insb
mov
adc
jmp
nop
jl
add
es
jbe
push
sub
jle
jbe
dec
mov
sbbl
xchg
test
cmp
sbb
dec
xchg
mov
imul
push
sbb
inc
or
push
adc
mov
push
aam
les
pop
es
rolb
sbb
adc
mov
cltd
jg
or
mov
cltd
push
call
push
mov
and
push
shlb
xor
xor
or
inc
mov
jno
pop
or
or
fcompl
aad
movsl
mov
fcoms
xchg
stos
inc
loopne
pop
xor
jmp
add
repz
dec
add
enter
xchg
mov
ret
mov
xor
psubusb
xchg
fildl
rcr
mov
insl
dec
adc
pop
pop
test
andb
sub
sub
inc
mov
cltd
adc
mov
repnz
scas
jno
fwait
xchg
push
push
lock
test
push
mov
xor
cmp
adcb
scas
in
mov
lds
shlb
scas
cmp
jne
sbb
daa
xor
add
adc
and
push
mov
in
js
sbb
subl
lock
mov
test
popa
xor
or
xorl
dec
pop
add
lods
inc
xor
sbb
mov
shr
aam
sub
dec
jb
cmp
mov
data16
jns
outsb
sbb
xchg
outsb
inc
sub
insb
mov
xchg
pop
pop
add
sbb
fnstenv
mov
sub
xorl
jbe
dec
xor
ret
shrl
mov
add
xlat
mov
adc
clc
movsb
add
fnstsw
xlat
leave
fists
popf
inc
add
frstor
movb
in
scas
add
fmuls
adc
pop
push
shrb
imul
rcrb
pop
fdivs
sbb
pop
mov
pop
cmp
aas
pop
sbb
inc
mov
fidivrs
or
adc
push
movsb
lock
dec
inc
iret
repnz
mov
mov
pop
jmp
movsl
je
mov
add
mov
xorl
bnd
enter
sbb
mov
sbb
adc
movsb
fcmovb
mov
cli
aam
pop
leave
xchg
mov
dec
ds
aam
lods
pop
enter
mov
pop
mov
jns
or
addb
sbb
imul
sahf
adc
in
hlt
jno
movsl
repnz
call
adc
pop
dec
sbb
dec
and
pop
push
jmp
outsb
cs
cltd
negb
out
hlt
je,pn
jb
inc
sbb
ret
jae
push
push
pop
es
fwait
or
test
inc
fsubl
sbb
jmp
ja
mov
jmp
enter
sub
sub
inc
scas
add
andl
push
das
adc
scas
mov
out
xor
nop
cmp
jae
jl
lret
jg
fwait
adc
push
pop
lods
lea
lret
popf
jne
mov
jg
jbe
pop
and
pop
and
cmp
ja
fwait
and
fwait
shrb
data16
jo
test
bound
lcall
xchg
js
xor
pusha
xchg
test
push
aam
scas
xor
cmpsl
ficoms
lret
mov
cwtl
rcrb
xor
inc
push
inc
add
in
fadd
test
push
adc
xor
adcl
mov
pop
cs
lret
sbb
fists
das
pop
arpl
cmp
pusha
lock
hlt
stos
out
mulb
int3
movsb
and
fadds
loope
jmp
cmp
inc
jle
adc
adcb
xchg
sbb
sahf
in
call
or
jae
add
loopne
test
jle
pop
or
cwtl
aas
clc
clc
cmp
jp
jns
add
push
mov
in
std
gs
aam
in
pop
in
adc
cmp
leave
and
sub
add
sahf
xchg
addr16
shr
mov
sbbb
outsb
and
adc
fnstenv
loop
adc
dec
xrelease
mov
xchg
dec
dec
inc
sbbb
orb
jbe
jg
repz
aaa
push
mov
inc
aam
out
push
leave
fisttpl
ret
add
sub
push
test
mov
sub
dec
xor
jmp
iret
pop
test
ret
clc
rep
jb
jo
push
int3
int3
jnp
fwait
push
dec
pop
inc
or
movl
xor
js
inc
rclb
and
addr16
add
movsb
and
push
imulb
cmp
jbe
push
sub
cld
aam
pop
sti
cmp
cmp
enter
mov
adc
cmp
rolb
repnz
xchg
adc
rolb
sub
xor
push
orl
cmpsb
mov
and
in
add
loop
hlt
adc
cmp
jo
jle
dec
loopne
cmp
je
sarb
adc
add
sbb
or
mov
nop
adc
jae
sub
inc
add
lahf
gs
pop
pop
or
adc
sbbb
clc
nop
jmp
dec
inc
sbb
or
andb
jmp
and
aam
jne
js
les
and
adc
mov
icebp
dec
dec
lods
in
mov
out
int
add
faddl
je
clc
add
xchg
lret
into
roll
sbb
xchg
out
inc
and
add
cmp
push
and
rolb
sbb
sub
std
and
shll
stc
sbb
add
xlat
pushf
jne
adc
add
jmp
mov
out
add
and
sbb
push
hlt
inc
cld
sub
xchg
sbb
jo
or
or
mulb
add
test
mov
add
into
dec
lock
rcr
lock
push
dec
add
dec
inc
bound
movsl
push
xor
jnp
rcrl
jle
out
adc
jle
sbb
sti
rolb
jle
jle
inc
or
or
or
ljmp
jae
pop
addr16
ret
xor
mov
xor
adc
push
xchg
xor
data16
repnz
test
lock
ficomps
push
pusha
in
xchg
adc
addr16
outsl
add
pop
inc
daa
movsl
mov
fucomp
call
call
and
xchg
jmp
inc
pop
ja
cmp
mov
lret
loop
jl
inc
sbb
je
in
and
sbb
inc
aas
lock
mov
fildl
mov
outsl
dec
jbe
je
or
movzwl
add
sub
push
inc
sub
inc
and
daa
pop
js
pop
shlb
xchg
adc
or
sub
sbb
add
adc
sub
push
pusha
jp
gs
sbb
sar
push
aaa
cmpsl
cmpsb
cmpsb
loopne
and
xor
and
lock
inc
and
stos
add
clc
or
xlat
scas
fwait
mov
jp
out
sbb
ret
decb
insl
in
cmp
out
fildl
sbb
js
outsb
adc
cmp
iret
ds
push
xor
cmp
pushf
insl
fs
or
jnp
mov
push
and
pop
push
add
fwait
ret
jbe
cmp
rclb
inc
andb
mov
mov
popa
sub
cmp
and
jp
outsb
inc
mov
add
roll
cmp
push
int3
sub
push
and
pushf
and
rcrl
and
adc
repz
mov
addb
cli
push
jns
push
push
and
dec
dec
sub
mov
push
pop
cmp
inc
push
pop
dec
push
repnz
push
mov
jno
cmpsl
rclb
xchg
push
subb
cmpsb
and
fists
add
and
pop
sbb
add
or
daa
aas
adc
pop
fists
sub
xchg
adc
mov
adc
mov
clc
js
inc
and
push
enter
shrb
inc
orb
inc
enter
and
inc
pop
pusha
loope
inc
enter
loop
iret
or
push
inc
cwtl
add
and
push
sarb
in
and
mov
push
push
add
sub
test
jp
inc
add
fdivrs
filds
xchg
adcl
sbb
loopne
jne
test
in
xchg
fwait
pop
outsl
dec
aas
dec
jmp
mov
outsl
in
imulb
mov
xchg
arpl
sub
aad
mov
cmc
lods
xor
das
insb
out
sbb
inc
xor
pop
fcomps
lods
hlt
movsl
aaa
dec
push
xchg
sub
cmpsl
in
sbb
cmpsl
jns
or
push
inc
add
and
mov
mov
in
cmpsl
mov
mov
es
ja
mov
xchg
leave
leave
mov
push
clc
inc
ret
pop
cmpsl
cmpsl
cmpsl
adc
push
dec
sbb
inc
clc
and
inc
out
adcl
xchg
pop
mov
js
mov
int3
xorl
cli
test
push
pop
jnp
mov
je
mov
xchg
mov
pop
arpl
jns
shll
adc
mov
mov
xchg
add
xchg
jl
pusha
push
xor
dec
mov
xchg
mov
mov
shrb
ja
and
and
or
cmp
nop
xchg
add
fisttpl
std
dec
push
adc
lret
ja
shll
jg
test
push
loop
dec
bound
push
pop
push
hlt
popa
mov
and
pop
cld
mov
fistl
cmpsb
cltd
xor
shrl
mov
or
cmp
mov
xor
push
and
xor
in
enter
add
xchg
stos
inc
scas
shl
inc
xchg
add
cmpsb
add
adc
out
sub
mov
xchg
out
add
nop
dec
add
fcoms
jp
scas
push
add
jl
sahf
push
push
cmp
mov
clts
mov
inc
add
aad
leave
mov
sbb
enter
jae
sub
inc
cmp
mov
or
or
lods
or
and
pushl
mov
inc
mov
rorl
mov
insl
add
mov
jge
and
pusha
call
nop
dec
pop
and
push
bound
inc
outsl
repnz
add
dec
add
mov
adc
lahf
add
cmp
out
adc
cmpsl
add
or
add
les
pop
inc
mov
jo
call
xchg
dec
enter
in
jbe
enter
fadds
lea
ret
push
movsb
ret
mov
and
pop
movb
nop
mov
pushf
mov
adc
sub
pop
xchg
adc
popf
mov
or
pop
fdivl
sbb
lea
and
cmpsl
es
inc
daa
dec
pop
adc
jecxz
leave
mov
mov
enter
pop
inc
inc
mov
push
push
shll
rcl
sbb
dec
jl
lcall
in
xor
mov
dec
fisttpl
loope
add
fildl
or
arpl
mov
or
inc
push
jecxz
or
push
jmp
sub
vpinsrw
cmpb
mov
sbb
push
movsl
mov
mov
push
xchg
xchg
push
mov
or
push
add
adc
lock
inc
ss
rcrb
outsl
in
dec
pusha
mov
mov
shrl
cmpsb
sbb
and
inc
and
pop
pop
rol
hlt
cmp
hlt
xchg
loopne
or
mov
cld
das
clc
mov
mov
add
sbb
dec
fdivrl
inc
adc
push
lea
hlt
xor
shlb
enter
lcall
mov
sbb
xchg
or
cmpsl
ss
xchg
dec
sbb
insl
inc
adc
jmp
dec
cwtl
cmp
xchg
sahf
xchg
and
sub
dec
je
and
imul
hlt
movsb
cmp
sbb
sub
in
dec
hlt
and
add
add
inc
imul
cmpsb
or
rclb
ror
lock
in
dec
lock
imul
cmpb
push
and
pushf
pop
pop
or
inc
lahf
jle
clc
adc
add
mov
inc
add
cmc
or
popa
nop
mov
or
nop
test
daa
movsb
push
dec
test
add
or
lods
add
xchg
add
push
dec
arpl
add
push
lcall
dec
aaa
in
push
add
fsubrs
sub
lock
sub
and
insl
pop
adc
jnp
scas
sar
jl
movl
add
cmp
fsubl
inc
adc
daa
in
and
inc
jo
xor
jl
mov
jne
ljmp
xor
sub
sub
inc
and
add
call
es
sub
lea
sbb
or
fistl
push
and
inc
mov
or
int3
je
pusha
xchg
push
pop
or
hlt
and
cli
xchg
rcl
subb
mov
loopne
push
xor
jg
and
faddl
repnz
pusha
dec
sbb
aaa
mov
jecxz
mov
xor
or
dec
loope
lret
and
testl
xchg
cmpl
sti
movsl
mov
mov
jg
push
jmp
inc
add
inc
mov
outsb
test
push
imul
test
enter
insl
push
pushf
mov
lods
add
cmc
push
mov
push
push
scas
cli
add
popa
dec
push
inc
cs
inc
rcll
sub
sub
push
push
pop
pop
add
mov
dec
or
outsb
pop
das
movsl
imul
bound
insl
xchg
dec
sti
adcl
inc
or
adc
dec
jp
add
aaa
adc
test
dec
pop
jno
jg
popa
mov
inc
es
sub
xor
mov
rcl
xchg
inc
cmp
cmp
lods
xor
sub
dec
rclb
push
xor
out
cmp
xchg
test
lods
js
sbb
iret
ds
negl
sbb
sbb
leave
or
add
adc
or
lret
ret
push
clc
shl
sbb
mov
xor
jmp
nop
out
sbb
cwtl
insl
xchg
or
data16
cmp
mov
inc
push
sbb
aas
add
jb
ja
mov
xchg
or
lahf
or
xor
dec
add
or
and
push
int
or
mov
push
adc
or
ltr
pop
xor
lock
orb
cmp
cmp
mov
lea
ds
mov
pop
cmp
cmpsb
insb
popa
mov
cltd
subb
adc
nop
adc
lods
je
lea
xor
sahf
es
sbb
cmp
jae
or
inc
mov
or
sbb
jmp
push
addr16
testl
xor
push
enter
sbb
loop
orl
loop
sbb
lret
xor
and
sub
das
dec
icebp
cmp
push
inc
or
sahf
xor
jbe
mov
sub
fiaddl
outsl
dec
arpl
jne
rolb
repnz
push
or
jl
pop
pop
or
dec
xlat
mov
push
xor
adc
adc
call
xor
mov
sbb
add
or
sbb
sbbb
add
test
mov
inc
or
pop
pop
inc
in
add
mov
sub
and
mov
fwait
js
adc
outsl
jmp
fnstsw
repz
lret
add
add
sbb
mov
adc
jne
dec
or
inc
mov
jmp
lret
cmpsb
or
cmp
jo
push
push
jp
inc
ret
cwtl
sbb
push
outsl
popa
mov
add
xchg
mov
dec
push
mov
sbb
push
or
mov
mov
add
dec
add
add
mov
sbb
xchg
fidivl
sarb
mov
add
sbb
sbb
mov
mov
mov
cmpsl
pop
fiadds
add
inc
dec
aad
jge
in
cmpb
xchg
ret
fimuls
rol
adc
popf
cli
mov
xchg
scas
fdivl
fcoms
jae
sub
mov
jbe
dec
js
pop
adc
cmp
adc
jne
mov
lods
imul
lea
daa
int3
inc
cmp
test
xor
fsubl
dec
xchg
jle
stos
dec
or
sbb
add
mov
or
inc
and
or
xor
mov
inc
and
leavew
push
mov
dec
add
mov
incl
cmpsb
push
out
sub
js
push
stos
popa
jecxz
orb
xor
cmp
popf
outsb
dec
push
mov
lcall
push
pop
dec
inc
adc
inc
lret
adc
je
inc
xchg
inc
aad
push
test
shrb
nop
lock
mov
sub
adc
shll
es
pop
dec
hlt
push
mov
add
adc
pop
sub
add
push
inc
sub
pusha
bound
push
shl
call
push
cs
dec
push
popf
dec
sbb
cld
sbb
mov
dec
popf
jo
dec
lods
dec
enter
mov
add
xchg
loop
jg
adc
std
sub
leave
aam
in
mov
or
orb
dec
jle
dec
sub
jo
cmp
push
xor
mov
scas
jl
fistpll
push
dec
xor
cld
sbb
dec
movsb
dec
adc
sbb
sbb
enter
mov
outsb
jecxz
and
dec
es
jmp
push
pop
inc
sbb
in
je
mov
xor
push
in
mov
push
xchg
lcall
sub
les
mov
adc
sbb
in
push
add
jl
adc
sbb
and
pop
mov
sarb
out
sub
adc
pusha
or
mov
mov
push
push
or
push
xor
sub
insl
sub
add
aam
and
push
and
push
or
pop
nop
dec
add
or
or
clc
mov
popa
cmpsl
xchg
ja
mov
adc
xor
adc
adc
jb
push
clc
ja
add
jbe
test
and
xor
inc
push
xchg
push
pop
inc
dec
sbb
subb
xor
jl
sbb
pop
cwtl
sub
or
into
inc
jnp
xor
cs
pop
jp
jp
xor
loope
push
iret
shl
fadd
inc
and
jae
inc
inc
and
add
push
insb
mov
sub
sub
jbe
dec
adc
jns
insl
sbb
sbb
jmp
mov
hlt
add
or
outsb
sub
les
xchg
enter
loopne
and
add
jge
lahf
and
lods
mov
xor
mov
mov
inc
inc
cvttps2pi
adc
fs
mov
jae
pop
cmp
dec
inc
divl
cli
adc
jmp
xchg
cmp
mov
adc
xchg
outsl
pop
pop
add
pop
cwtl
cwtl
mov
es
push
mov
je
jne
xor
enter
xor
pop
pusha
or
and
dec
and
push
and
pop
lock
dec
jo
repnz
je
sbb
or
inc
pop
nop
xchg
push
nop
daa
aam
mov
test
cmp
xor
je
add
mov
clc
sbb
sbb
jo
dec
lock
adc
mov
dec
or
xchg
fistps
dec
or
sbb
or
in
xchg
lock
or
movsb
scas
pop
mov
and
adc
adc
xor
lcall
fidivs
aam
dec
inc
fsubr
push
inc
dec
inc
cmp
cmp
inc
pop
in
insb
inc
cmp
or
nopl
push
loop
sbb
pop
imul
pop
adc
jle
pop
xchg
notb
out
or
sbb
outsb
jmp
and
cmpl
or
mov
lret
call
or
cmp
jmp
movsl
aam
enter
xchg
xchg
push
add
sub
mov
xchg
xor
call
mov
jle
or
rcll
out
or
cmp
lahf
lock
add
dec
adc
and
aaa
push
or
sub
mov
inc
add
cmp
imulb
or
xchg
or
cmp
push
mov
add
fsubrp
and
sbb
mov
xor
and
xchg
sbb
sub
add
inc
adc
stos
mov
push
add
inc
stos
lods
adc
xor
ljmp
sub
inc
ret
pop
pushf
adc
loope
jge
and
mov
addr16
xchg
push
pop
jae
data16
push
push
pop
daa
push
sbb
dec
push
sbb
call
test
cmp
aad
out
push
js
sbb
pop
adc
inc
cmp
add
inc
out
shll
adc
jmp
pusha
or
sub
push
jle
nop
sub
push
notl
xor
fsubl
sbb
stos
loope
or
add
lea
sahf
push
scas
fcmovb
or
add
nop
mov
adc
mov
and
imul
testl
cmp
push
fdivl
jle
fisttpl
loopne
sbbl
lea
testl
mov
jl
push
std
popf
xor
push
xlat
xchg
lea
ret
addb
cmp
xchg
mov
inc
xchg
inc
jle
jl
pushf
test
cmpl
aaa
xorl
mov
popa
addr16
mov
add
imul
cwtl
mov
mov
dec
xchg
mov
inc
xchg
cli
in
movsl
lds
pusha
or
sbb
in
adc
es
test
clc
testl
lret
push
shll
cmc
ret
or
pop
push
pop
stos
clc
test
shrb
push
clc
xor
jo
sub
repz
xchg
dec
or
inc
and
jmp
es
shrl
xchg
or
or
shll
and
mov
push
and
or
or
popa
cmp
jge
mov
push
sbbl
xchg
dec
push
dec
adc
andb
cmpl
pushf
add
clc
mov
push
mov
mov
cmpsb
push
mov
or
xor
cwtl
mov
and
dec
lcall
orl
loopne
and
add
add
ja
cmp
cmp
les
in
add
sbb
add
jo
movb
push
pop
pop
movb
std
mov
adc
jg
and
out
imul
sbb
fimull
fisubs
jmp
movsb
lock
sub
outsl
lock
mov
jne
leave
dec
jo
sub
pop
adc
mov
inc
rcrl
mov
or
pushf
dec
repnz
or
adc
clc
scas
push
test
imul
sbb
jmp
popf
arpl
js
lods
fstpl
push
or
or
jne
dec
pop
cmp
xchg
loope
andb
out
sbb
sub
or
mov
add
into
dec
push
adc
jle
dec
movsb
mov
insb
jl
pushf
out
loope
jp
mov
incb
adc
push
loopne
inc
or
negl
push
jmp
mov
je
lahf
cmp
pushf
das
adc
ss
add
adc
push
bound
js
les
mov
or
add
mov
adc
aam
loop
rolb
mov
filds
dec
mov
add
jl
xchg
mov
mov
dec
rclb
popa
pusha
addb
push
adc
mov
test
ss
ficoms
rcl
je
pop
cmp
add
clc
jmp
xchg
pop
aam
loopne
clc
out
scas
mov
cmp
jbe
test
mov
and
test
or
ja
inc
lods
cmp
daa
hlt
xor
inc
mov
out
add
push
in
scas
ret
push
icebp
imul
repz
sub
push
rcl
lret
mov
xchg
and
xor
mov
jns
add
es
xor
or
mov
stos
cmpsb
mov
and
and
sub
and
aaa
ss
lds
mov
mov
add
adc
cmp
call
lcall
xor
movsl
mov
mov
ljmp
jne
cmp
jne
mov
out
aad
sub
xor
jb
dec
sub
pop
xor
adc
aad
stc
pop
inc
and
bound
lcall
cmc
inc
clc
or
sub
popl
xor
add
add
push
test
jg
xor
jg
dec
fwait
add
idivl
leave
ja
push
cwtl
inc
mov
insl
fstl
add
nop
push
mov
xor
inc
cmp
aas
testb
daa
jmp
test
mov
clc
or
push
or
add
mov
jg
xor
and
in
jle
and
add
cmp
sbb
and
cmp
sbb
imul
out
inc
cwtl
add
into
xchg
sbb
pop
sub
outsb
ret
xor
cmc
push
and
loop
adc
je
or
sbb
inc
sbb
add
loopne
push
and
inc
adc
or
loopne
jecxz
mov
cmp
inc
subb
dec
punpckhdq
or
imul
or
adcb
push
mov
mov
mov
pusha
subb
or
cmp
hlt
push
or
mov
sub
push
scas
mov
movsb
push
sbb
rcll
fwait
adc
insb
push
mov
in
cmp
mov
adcb
or
arpl
mov
arpl
ret
dec
sbb
push
and
inc
lret
adc
push
fs
push
sub
cmpsl
or
loope
outsl
cmpsl
repz
fs
pop
xchg
add
pop
mov
cmpsb
xor
pop
mov
push
lds
dec
pusha
adc
sbb
cmp
mov
sub
dec
aaa
sbb
mov
pop
bound
nop
lcall
sbb
cmp
and
push
jo
jne
sbb
fcoml
mov
daa
xor
add
fists
and
or
pop
pop
mov
daa
or
loopne
enter
adc
mov
pop
das
pop
and
push
xchg
inc
in
or
add
dec
popa
and
sbb
aam
pop
add
xor
mov
loopne
sub
dec
insb
inc
xchg
and
js
or
sbb
mov
movsl
xor
inc
cmp
jbe
in
mov
adc
sbb
mov
enter
push
in
mov
cmova
ds
sbb
sti
shl
add
loopne
repz
cmpsb
or
lds
jno
arpl
enter
cmp
das
jmp
sub
mov
and
cmp
push
sti
or
push
pusha
pmaxub
outsl
pop
js
or
std
sbb
and
mov
dec
in
roll
int
inc
dec
add
sbb
jmp
push
jge
addl
scas
ss
fidivrs
pop
orb
mov
and
or
sbb
dec
and
aad
cmpsb
inc
movhps
dec
ret
cmpsl
adc
pop
cmpsl
popa
lods
or
or
stos
sub
pop
pop
test
ljmp
lock
daa
xchg
aam
sbb
fsubr
mov
push
push
lock
and
lds
mov
xor
mov
cmp
shlb
xor
iret
aam
dec
and
jl
or
xor
sub
sbb
int3
mov
push
mov
dec
pop
pop
fldcw
sbb
mov
push
movsl
xor
jnp
or
jp
push
or
rorl
sbbl
inc
mov
and
push
add
dec
pop
push
test
call
outsl
ret
adc
fmul
adc
jo
stos
mov
lea
pop
add
lods
push
cmp
inc
addl
jo
icebp
push
ret
mov
xchg
jle
jmp
xor
push
or
xchg
add
int3
push
mov
insl
loop
fmulp
js
add
dec
arpl
addr16
adc
push
das
xor
ds
lock
pop
or
xchg
xor
or
add
lea
mov
pop
pop
inc
lods
jge
fs
or
incb
dec
push
mov
xor
dec
dec
sti
divl
xor
jbe
dec
jb
or
rorb
mov
adc
adc
xor
xor
adc
movl
mov
push
or
or
stos
cmp
and
sub
and
inc
roll
aam
test
or
or
mov
lea
jmp
and
movsl
adc
clc
dec
mov
inc
sub
push
adc
std
cmp
mov
xchg
xchg
jns
and
jne
add
sbb
mov
sbb
adc
shrb
adc
dec
dec
imul
cmpsb
cmp
adc
test
mov
clc
fidivs
jb
lea
xchg
mov
ds
lock
sbb
mov
rcll
and
lea
xchg
lahf
scas
js
pusha
push
adc
dec
xchg
sub
adc
or
and
sbb
fldt
aam
jns
pop
sub
mov
xor
push
insl
notl
dec
or
dec
sbb
cmp
aaa
cs
and
subb
fstpl
out
adc
bound
idivb
fisttpl
bound
or
cmp
push
push
sub
sub
and
rol
push
adc
jle
push
cmp
rep
cld
aas
add
sbb
ret
popf
nop
adc
jge
sub
scas
inc
movsb
lock
rclb
ljmp
inc
mov
jmp
out
or
shl
sub
or
mov
mov
xchg
pusha
cmp
jg
jno
inc
xchg
mov
mov
das
push
add
lea
lods
lea
lds
dec
sbb
dec
xchg
mov
pop
les
inc
fwait
sub
lea
xorl
jnp
mov
inc
xlat
into
loope
push
sub
pop
in
int3
out
fisubrs
dec
adc
jl
add
call
int
scas
xor
or
inc
or
push
push
push
xor
adc
iret
mov
inc
cmp
sbb
movsl
roll
nop
adc
inc
jmp
jo
mov
cmp
ss
push
mov
push
nop
dec
insb
fsubs
pop
mov
lds
mov
mov
fidivrs
sub
and
mov
add
xor
clc
nop
mov
xchg
clc
jge
test
insl
pop
out
or
je
sti
decl
adc
sub
test
sar
mov
lret
and
mov
lock
mov
fwait
cli
movsl
scas
or
mov
testb
mov
jge
mov
inc
mov
decb
call
out
shll
xchg
out
xor
cmp
jle
push
adc
adc
lds
dec
sub
mov
js
cltd
pop
push
ds
cmp
enter
mov
inc
and
inc
imul
mov
xor
in
scas
sbb
cmp
pop
popa
cltd
mov
call
xor
mov
rol
cs
pavgw
shll
cli
and
inc
add
and
adc
rcrb
xor
cmp
add
ss
popf
in
mulb
xor
push
pop
sti
jge
sbb
or
dec
xor
cli
dec
pusha
scas
xor
clc
pusha
cli
sar
scas
ret
icebp
ljmp
cmp
add
fmull
sbb
xor
jp
ret
jno
pushf
inc
and
in
rorb
sub
push
push
xchg
pop
mov
cli
jne
adc
fs
mov
mov
inc
stos
insb
test
enter
cmp
inc
js
mulb
push
push
mov
xor
daa
inc
xor
cmp
dec
dec
push
pop
pop
int
scas
and
insb
mov
xchg
sub
add
cltd
pusha
je
mov
push
mov
lea
dec
in
xor
lcall
mov
jne
push
or
and
inc
mov
stos
cli
lods
iret
in
frstor
iret
push
jns,pt
mov
cmp
std
xchg
in
iret
rorb
push
sbb
sub
jb
sbb
add
insl
stos
pop
xchg
push
xor
xor
test
jl
mov
pop
or
jmp
cmp
stos
cmp
push
aas
adc
push
cmp
push
movb
in
mov
je
and
aam
mov
xchg
and
sub
push
jns
je
dec
mov
add
addb
and
loop
push
sub
fwait
add
sbb
jmp
cs
clc
add
pop
xchg
add
xchg
loop
dec
cmp
sbb
xor
push
addr16
pop
sub
add
mov
pop
fsubs
cmp
bound
sbb
or
pop
enter
add
pop
xor
enter
and
dec
jno
add
xor
add
cmp
enter
sbb
sub
mov
sub
xchg
push
jle
mov
ja
subb
movsb
jo
loopne
cmc
flds
inc
cmp
mov
out
fs
and
add
push
xchg
rol
add
adc
lea
dec
add
out
sub
inc
mov
pop
add
repz
pop
popa
ja
shl
addr16
test
je
jmp
jl
fs
test
inc
mov
push
in
fucomp
call
test
aas
xchg
rcr
xor
add
dec
rorb
cwtl
push
mov
daa
xchg
mov
xlat
lods
cmc
add
insb
mov
outsb
pop
aaa
jno
sti
js
ss
inc
sub
mov
mulb
mov
add
push
incb
outsl
or
sbb
out
cwtl
bound
sub
cltd
push
xor
and
xchg
push
lods
movl
cmp
repnz
shrl
loop
aam
push
js
fadds
das
aam
les
mov
and
cmp
dec
add
sbb
lea
cmp
mov
mov
mov
or
cmp
or
inc
or
jle
mov
jbe
pop
sbb
add
testb
push
xchg
jmp
jnp
div
test
addb
xchg
xchg
and
or
push
fildl
cmp
fbstp
leave
inc
dec
cmpb
xchg
pop
cmp
jae
cmp
adc
push
out
ds
dec
jp
mov
mov
or
sub
and
mov
inc
ds
dec
mov
es
mov
pop
js
pop
icebp
push
add
adc
imul
sbb
lahf
clc
andl
cltd
sub
js
test
pop
mov
lret
pop
jno
mov
cmc
cmc
xlat
or
mov
or
cs
xor
mov
sarb
xchg
adcl
mov
rorl
cmp
cs
ret
jg
out
pushf
jae
lods
cmp
xchg
add
inc
cmp
xchg
loopne
sbb
inc
push
adc
cwtl
insb
jge
in
out
ss
inc
jge
nop
rol
outsl
clc
sbb
lret
add
mov
sbb
or
dec
xchg
jge
stc
fs
inc
pop
xor
ljmp
pushf
insb
je
sub
mov
pop
dec
aam
or
push
or
add
adc
inc
bnd
sbb
adc
sub
data16
jbe
or
inc
test
pop
fimull
jne
bound
scas
mov
push
mov
push
lret
sub
pop
adc
cmp
addb
inc
int
fs
jne
mov
mov
mov
aas
adc
inc
mov
notb
adc
sti
and
push
mov
mov
popf
xor
loope
xor
lock
addr16
cmp
jg
punpckhdq
pusha
test
xor
jl
or
or
pop
or
or
pop
jle
mov
mull
hlt
add
mov
xor
pop
sbb
inc
pop
out
or
xchg
add
movsb
pop
sbb
jno
mov
xor
in
xor
inc
xor
cmp
jnp
orb
pop
clc
xchg
jmp
mov
insb
lea
mov
mov
sub
shlb
or
or
andl
loop
sub
sbb
test
jno
inc
cli
and
dec
lret
and
add
dec
and
inc
test
adc
jne
sbb
sub
xchg
mov
sbbl
sbb
and
jbe
cmp
out
or
and
pop
rclb
lretw
and
mov
hlt
sbb
das
mov
hlt
pop
inc
inc
mov
or
je
mov
das
mov
jecxz
mov
inc
and
mov
inc
jnp
and
xor
and
cmpl
inc
leave
enter
and
mov
and
and
dec
dec
xchg
push
add
dec
fcom
ret
scas
mov
sub
inc
shr
jbe
clc
sti
daa
lds
inc
cmp
or
fbstp
or
add
and
adc
and
mov
je
rorb
loop
or
fsubl
sub
imul
leave
sbb
out
mov
jecxz
fbstp
push
mov
push
ljmp
stos
jp
in
jg
jle
xchg
pop
cmpsl
dec
pop
gs
shlb
mov
or
inc
dec
jl
sbb
pop
lock
sub
test
rorb
daa
add
sbb
adc
shrb
data16
shll
pop
les
je
or
sub
cltd
adc
dec
dec
jae
pop
out
pop
loope
sub
inc
and
cmc
adc
mov
push
mov
inc
ret
push
in
pop
rcrl
push
mov
and
ss
add
add
or
lret
xlat
shlb
aam
imul
sub
sbb
mov
movsb
inc
loope
mov
cmp
jae
adc
ret
pop
sbb
pop
mov
jbe
sub
enter
push
lock
je
clc
and
or
call
add
sub
adc
xor
shl
fcoms
push
inc
add
out
dec
cmp
fdivrs
add
or
incl
rolb
dec
sub
pusha
aad
adc
mov
cld
rolb
or
cmpsl
fimuls
mov
sbb
test
mov
aam
or
mov
add
call
loopne
mov
negb
aas
dec
insb
mov
shr
push
cmpsb
aas
hlt
popa
cltd
xchg
dec
call
adc
in
sbb
and
mov
push
pop
pop
mov
mov
lock
jge
xor
adc
add
or
sar
insl
and
or
in
push
pop
aam
loopne
clc
lea
mov
mov
out
lea
xor
inc
mov
or
sahf
insl
rolb
push
incl
pop
dec
pop
inc
xchg
je
nop
pusha
add
inc
insb
add
inc
or
aaa
dec
inc
inc
cmp
lods
add
aas
xchg
ss
jg
andb
je
adc
addb
or
int3
sbb
enter
jne
or
rclb
xchg
push
inc
xchg
jne
add
into
mov
sbb
js
clc
sub
sbbb
cmp
xor
adc
pusha
pop
lock
shr
adc
push
icebp
stc
aas
xchg
xchg
cmpsb
imul
hlt
cs
shll
in
xchg
enter
lea
xchg
dec
jbe
mov
icebp
hlt
lea
sub
mov
lea
pop
loope
adc
lock
stc
bound
push
loopne
loopne
jae
or
call
mov
or
xor
mov
jb
movsb
icebp
loopne
lods
sbb
imul
sub
out
add
push
inc
fs
rcrl
sbb
push
xor
push
mov
popa
or
or
add
daa
inc
mov
adc
xor
and
add
xor
xlat
lods
rorb
lock
loopne
inc
adc
add
mov
test
mov
or
xor
inc
cmp
addr16
sbb
inc
js
or
aam
loop
push
inc
aam
imul
sub
xor
xorl
and
adc
jns
push
adc
or
cmp
es
mov
ret
jmp
mov
inc
or
shrl
and
cs
jmp
jecxz
test
clc
inc
adc
add
adc
mov
ljmp
ret
leave
adcb
mov
rcr
repnz
jae
mov
aam
mov
mov
in
xor
push
lock
jge
xor
add
popf
out
cld
sar
xchg
inc
add
rorl
sarl
mov
mov
jb
mov
jns
inc
mov
add
pop
and
jb
pop
dec
rol
push
hlt
popa
or
fs
fidivrs
or
add
fadds
jbe
mov
mov
inc
sbb
dec
push
ja
andl
dec
add
jl
inc
repz
jecxz
fs
outsl
sub
aam
push
roll
or
cmp
mov
push
paddb
add
xor
in
popf
test
stos
sbb
je
hlt
jle
cmpsb
mov
sub
mov
xlat
int
sbb
loopne
jae
pop
aam
cmp
add
popa
int
push
in
call
dec
jae
enter
fdivrs
add
sub
enter
loopne
dec
adc
sub
ret
sbb
aam
jnp
jae
aas
push
inc
lret
mov
repz
add
mov
frstor
sub
aam
mov
dec
cmp
mov
les
sbb
add
or
dec
pop
mov
cmp
xor
movl
and
adc
es
push
loop
inc
or
add
pop
out
or
add
sbb
add
es
mov
cvtps2pi
dec
je
add
add
adc
adc
fstpl
movsl
scas
inc
mov
or
and
or
cld
insb
dec
cmp
push
call
and
leave
ret
xor
sub
inc
mov
mov
cmp
adc
dec
addr16
dec
jl
enter
inc
dec
dec
fdivr
add
cmp
xor
data16
xor
inc
and
cmp
je
mov
je
sbb
mov
mov
mov
js
andl
mov
js
es
push
lea
dec
and
push
mov
enter
js
movsl
lods
or
js
push
mov
jp
outsb
ror
call
pop
jmp
pop
lea
dec
xchg
test
sub
mov
ret
inc
adc
cs
mov
or
sarb
adc
aaa
int3
inc
sbb
xbegin
test
jnp
xchg
adc
inc
repnz
call
int
xchg
push
sub
cmc
dec
ret
push
js
movsl
inc
or
dec
fldcw
dec
cmp
cli
movsb
adcl
adc
mov
cwtl
ret
inc
inc
mov
jne
or
add
xchg
push
std
xor
mov
mov
xchg
adc
loop
xlat
push
shl
stos
shrl
roll
inc
scas
ret
add
fisubrs
aas
add
dec
dec
adc
xor
ret
add
add
xchg
jp
shlb
pop
or
das
push
mov
and
jbe
dec
je
inc
push
faddl
hlt
sub
or
add
ror
push
aam
add
and
sub
sbb
aam
xlat
mov
mov
cmp
mov
fsts
inc
sub
push
rclb
pop
loope
adc
ret
or
das
sbb
or
ror
stc
adc
or
mov
movsl
mov
xchg
or
jl
pop
iret
or
sub
loope
jge
pop
pushf
hlt
dec
aam
push
pop
jae
inc
mov
cmp
iret
inc
mov
and
sbb
out
add
or
es
push
lock
cld
stos
jle
sbb
flds
fadds
fistps
mov
into
or
out
add
push
cmp
pushf
inc
cs
imul
adc
dec
je
pop
les
dec
dec
out
and
or
bsr
xchg
inc
loopne
movsb
xor
aas
push
ficomps
sub
fsubl
mov
mov
mov
into
stos
imul
or
roll
xor
cmp
lock
xchg
mov
xor
cmp
xlat
pop
mov
adc
call
pop
push
out
add
test
imulb
push
dec
jmp
cmp
jl
or
sti
ffree
jge
mov
dec
inc
inc
into
inc
jl,pn
fstp
xor
inc
add
jle
adc
mov
repz
add
fiaddl
lret
mov
pop
pop
outsb
adc
mov
jns
sbb
mov
sbb
cmp
jl
loopne
int
jo
loope
xchg
ficompl
incb
cld
jmp
in
add
loopne
mov
nop
pop
ror
orb
lods
adc
sbb
cltd
rolb
int
leave
loope
sbb
rcl
pop
ret
neg
cmp
sahf
rcll
add
adc
inc
sbb
int3
lock
in
sbb
sub
pop
sbb
jb
sahf
popa
jo
sub
ds
inc
push
mov
cmp
push
add
cmp
dec
subb
and
push
inc
rol
test
add
idiv
push
leave
sbb
pop
je
mov
jno
xchg
pop
sbb
cmc
sbb
jno
andb
and
or
xor
push
sub
jno
push
lahf
jbe
sbb
pop
or
jmp
jge
push
cmp
add
pop
add
sub
fisttps
sub
decl
ja
subb
sbb
add
mov
inc
jl
outsl
ljmp
xchg
adc
enter
jo
and
negb
es
in
push
lcall
lock
adc
or
pop
push
adc
fwait
add
xor
mov
inc
cmp
adc
roll
rcll
sub
sbb
sbb
sub
jle
xor
or
or
aaa
int3
jno
and
push
jo
pop
loopne
int3
fdivrl
add
aad
jp
fimuls
sub
mov
jb
dec
xor
in
loopne
loop
adc
xchg
js
adc
call
adc
jge
out
dec
adc
cld
add
or
into
inc
mov
mov
dec
pop
lock
clc
ret
jb
push
dec
xorl
add
dec
lea
sbb
out
loopne
dec
push
mov
cmpb
fmul
pop
pop
push
push
cwtl
lock
adc
enter
mov
xor
int3
faddl
sbb
xchg
add
push
push
andb
pop
popf
cmp
lock
out
pextrw
dec
jmp
dec
addl
shlb
mov
shl
cs
test
cmp
dec
popa
mov
test
enter
test
cli
mov
or
xor
ret
mov
sbb
lock
adc
pop
daa
xchg
fcmovne
movl
mov
loop
cmp
ja
cli
ja
repz
xchg
inc
push
or
jge
push
xor
mov
xor
arpl
pop
push
shl
mov
sbb
sarb
enterw
sub
lods
sbb
clc
xor
mov
mov
shll
lret
mov
cmp
pushf
aad
aam
jp
sub
add
jecxz
sub
lds
lods
daa
add
ss
xorb
inc
add
fimuls
add
movsl
bound
add
jmp
imul
jo
arpl
lds
repnz
in
adc
sub
inc
push
jno
sbb
insl
mov
and
ret
sbb
sub
stos
push
and
adc
lods
fdivr
lret
add
adc
fiaddl
shlb
add
dec
fsub
push
adcb
lock
sbbl
jno
mull
dec
push
lret
xchg
dec
lds
mov
xor
mov
sub
xchg
mov
stos
inc
rorl
cmpb
xor
push
shlb
gs
push
mov
mov
lock
ja
mov
jecxz
mov
add
decl
inc
outsb
dec
test
ret
push
mov
lahf
sarl
sarl
in
dec
add
jge
dec
stos
add
addl
lea
lods
ret
or
je
adc
jns
pop
arpl
arpl
push
inc
push
push
xor
add
insl
xor
nop
push
in
inc
or
jbe
shlb
xor
inc
call
xchg
icebp
dec
mov
dec
inc
cmc
pop
sbb
imul
add
icebp
or
adc
xchg
adc
or
xchg
push
inc
cs
jmp
das
mov
add
xchg
aaa
sub
aaa
pop
in
mov
je
mov
pushf
push
movsl
addl
xor
add
xchg
xchg
sbb
repz
outsb
pop
cmpl
dec
enter
and
sbb
inc
lock
add
movsl
pop
sbb
sbb
add
testl
push
js
mov
aaa
leave
ret
mov
cli
outsl
mov
jg
shl
test
sub
incb
add
add
push
inc
xor
xchg
push
lods
jp
adc
mov
inc
mov
xchg
or
xor
pop
pop
ret
adc
je
sarl
jo
cmp
clc
js
lock
sub
xchg
sarl
imul
out
push
adc
aam
push
jbe
in
cmpsb
xor
pop
mov
into
and
adc
add
imul
push
cmp
or
cmp
loop
jno
adc
add
fs
jg
mov
mov
daa
push
enter
xor
jno
jg
pop
push
imul
add
pusha
xor
push
mov
cmp
fcoml
or
adcb
mov
inc
jge
roll
in
int3
push
lret
mov
test
or
mov
jb
mov
sub
xchg
or
iret
inc
sub
enter
add
adc
in
fcomps
rorb
mov
jl
xor
mov
mov
inc
call
sbb
inc
les
mov
test
adc
jl
in
add
adc
leave
mov
sarl
cmpsl
xor
mov
jle
dec
fisttpll
sbb
xchg
cmp
or
cwtl
or
lret
mov
fsub
dec
bound
stos
subb
dec
push
test
inc
aam
fsubs
cmp
fldl
pop
fnstsw
push
lret
adc
adc
sbb
in
fs
adc
sbb
xor
cmp
rcr
jno
mov
lods
jp
mov
mov
fsubrs
adc
xor
pop
adc
clc
leave
mov
mov
mov
add
sar
add
rorl
add
adc
inc
xor
sub
pop
inc
pop
jp
add
inc
or
out
inc
push
and
stos
mov
cli
mov
dec
or
push
pop
xchg
ljmp
imull
push
es
mov
les
movsl
or
pop
sbb
rcr
xchg
xchg
and
jge
dec
or
adc
mov
xchg
sub
cli
or
rorl
adc
inc
sub
mov
add
mov
sub
push
adc
clc
lret
push
js
dec
jae
lcall
lcall
dec
je
jmp
xchg
add
push
mov
inc
mov
jnp
rcll
fcoms
aaa
int
jmp
sub
sub
scas
insb
add
xchg
ss
cmp
adc
mov
je
push
arpl
movb
xor
mov
mov
or
pop
mov
push
pop
push
pop
pushf
pop
repz
or
adc
in
adc
in
psubsw
and
jp
lret
adc
cmp
std
push
pop
cmp
sar
jae
jl
and
add
xchg
nop
les
add
jmp
dec
cmp
into
sbb
rcl
mov
ljmp
inc
test
add
xchg
adcl
sar
mov
jp
lcall
add
and
sub
lea
repnz
daa
mov
pop
flds
or
adc
test
add
sti
test
in
push
pop
fstps
aas
dec
adc
pop
sub
movsl
xor
dec
push
shlb
ret
dec
in
sarb
or
xchg
test
sub
xchg
dec
add
fadds
mov
in
cmp
mov
dec
add
gs
add
cmp
cmpsl
xor
sbb
cltd
cmpsb
cmp
adc
js
in
sub
fnstenv
push
es
loopne
mov
rorb
xchg
or
ret
pop
imul
outsb
sub
or
pusha
ss
pop
add
xchg
sahf
cmp
sbb
les
sbb
inc
shr
add
fcomp
cld
popa
push
rorl
sbb
inc
mov
sub
lods
mov
adc
enter
bound
in
xor
jle
cld
sahf
dec
push
pop
and
push
or
pop
or
sbb
inc
clc
jge
jbe
pop
xchg
or
lock
mov
push
pop
mov
lret
jmp
inc
cmp
lret
in
jle
clc
and
in
mov
pop
daa
or
sbb
enter
rcr
into
mov
inc
call
call
jg
mov
mov
outsl
push
dec
ffreep
mov
cmp
or
inc
movsb
inc
or
push
add
mov
popa
lea
or
sbb
cmovl
aam
push
aam
pop
mov
inc
popf
dec
addr16
subb
ss
shll
adc
lock
dec
in
push
push
mov
lea
movl
loopne
fiaddl
enter
out
in
or
mov
xchg
icebp
adc
and
push
test
mov
adc
inc
xchg
cs
andl
adc
xchg
mov
xchg
pop
cmpsb
xchg
dec
mov
lea
scas
je
pop
cmpl
or
adc
mov
mov
mov
push
add
test
adcl
jg
xchg
inc
xchg
and
outsb
or
mov
mov
jp
shr
pop
jne
lods
int
cmp
cmp
jge
mov
push
jge
lods
and
loopne
pop
add
mov
sti
inc
loopne
fnstcw
mov
fistpll
orl
inc
bound
mov
sbb
sub
stc
dec
jge
lea
pop
add
sti
adc
adc
dec
addl
aad
in
sub
lret
dec
xchg
jge
add
push
push
or
and
add
sbb
pop
xor
add
jp
rolb
ret
or
fld1
rclb
jbe
push
popf
fisttpll
sbb
mov
jle
push
cmp
mov
shll
and
dec
xor
cmp
xor
lcall
inc
shll
or
sbb
xor
sub
add
out
inc
int
mov
stos
jl
enter
add
sbb
push
insb
iret
fstp
add
and
in
adc
rclb
pop
adc
mov
sarl
sbb
loopne
in
jbe
into
out
test
fmull
adc
pusha
das
xchg
testb
add
xor
mov
fs
or
pop
inc
negb
mov
sbb
sbb
lock
hlt
sub
adcl
push
lret
lahf
ja
jge
inc
loopne
mov
mov
adc
insl
rcrl
in
mov
dec
jae
jl
lods
sub
mov
add
mov
ret
add
pushf
jb
mov
nop
jo
js
or
xchg
inc
mov
mov
cmp
icebp
popa
cmp
jns
cmp
push
aas
xchg
dec
and
pop
mov
adc
dec
test
subb
std
sub
adc
test
and
adc
add
and
and
pop
bound
and
push
inc
mov
lcall
mov
mov
das
and
jbe
add
nop
addb
sbb
cli
push
push
inc
add
repnz
and
pop
add
ficompl
sar
ret
stos
test
push
jo
dec
jae
or
cmp
nop
xor
out
pop
push
lcall
xchg
xchg
js
dec
xlat
test
add
or
fldt
mov
or
push
adc
icebp
ficoms
or
push
xor
adc
adc
push
sbb
add
clc
jmp
in
add
mov
movsb
lods
ret
cli
rcr
pop
clc
adc
push
jge
fsubl
push
or
nop
cwtl
clc
addr16
xchg
std
lods
add
push
pop
adc
sti
enter
sub
cmp
pop
ljmp
push
push
mov
sbb
jne
adc
cwtl
push
clc
pop
ret
test
add
rcr
ss
mov
adc
dec
loopne
sbb
ss
or
push
inc
test
cmp
sar
sarb
mov
fdivrs
mov
fdivrl
dec
mov
cmp
pop
or
mov
repnz
nop
xchg
mov
aam
xchg
pop
mov
ret
sbb
add
ss
add
pushl
mov
fimuls
cmp
mov
je
mov
lea
push
xor
cmp
mov
repnz
loope
cmp
jg
dec
fsubp
movsl
jo
dec
adc
ret
call
aaa
or
pop
push
clc
adc
push
adc
outsb
lret
push
shll
push
sahf
inc
sbb
leave
jb
mov
fnstcw
mov
fsubrs
fisttpll
andl
push
mov
ds
gs
js
add
clc
pop
cld
mov
int3
cld
mov
hlt
aaa
int3
test
jae
push
push
hlt
mov
mov
add
lea
jp
and
push
mov
dec
jp
sub
dec
or
or
add
ret
pop
inc
dec
and
insl
and
push
lret
ret
lock
push
push
pop
fldl
in
sbb
rolb
adc
test
jp
popf
jmp
movsbl
inc
or
push
cmc
add
adc
sub
mov
cs
or
lock
adc
sbb
sub
mov
cmpl
xor
sub
jnp
pop
push
stos
shlb
mov
push
fsubrs
jo
adc
jbe
rclb
add
and
test
leave
pop
pop
ret
ss
callw
shrb
scas
out
dec
pop
mov
sbbl
sbb
inc
jns
and
xchg
mov
cwtl
jo
nop
or
fcoms
call
repnz
repnz
outsl
ror
jmp
pop
inc
push
outsb
insb
and
popa
jnp
cmp
mov
test
lock
add
mov
movsl
ret
cmp
les
sbbl
jg
lahf
or
dec
add
inc
xor
xchg
cmp
sbb
lds
inc
shrb
dec
cwtl
jo
dec
sub
in
adcb
into
cli
mov
cmp
inc
sub
rorb
shll
aas
fs
jb
jbe
cmp
add
inc
cmp
sub
cmpsl
and
movsb
nop
std
sub
bnd
jl
sbb
mov
testb
mov
adc
or
and
sbb
cmp
jl
jp
cli
mulb
adc
dec
adc
or
je
add
out
fldl
fdivr
pop
cmp
sub
push
adc
jae
push
pop
dec
inc
ss
call
test
and
pop
das
xchg
sahf
sub
mov
les
addl
js
mov
aad
sub
je
roll
and
or
js
jne
clc
sbb
xchg
cmp
cwtl
or
jle
pusha
and
call
sub
fs
cmpl
enter
dec
pop
das
xlat
and
inc
in
adc
lahf
add
sub
sti
jecxz
shlb
jae
or
enter
test
pop
inc
pop
pop
ret
jno
push
stc
sbb
inc
adc
div
inc
add
movsl
gs
fwait
sbb
insl
inc
incl
inc
add
jge
xor
orb
rorb
dec
pop
insl
shlb
lea
sub
add
or
jno
addl
jmp
rcrb
sbb
into
clc
outsl
dec
pop
pop
js
test
inc
dec
sarb
xor
int3
jl
cs
and
jno
xchg
mov
add
lock
sahf
out
cmp
nopl
je
aad
or
mov
inc
jecxz
push
nop
push
push
shlb
shl
xor
cmp
or
outsl
out
rcr
rorb
imul
mov
cmpl
add
dec
loopne
out
call
clc
mov
jb
cld
dec
je
sbb
int3
decl
mov
sbb
pop
add
xchg
mov
mov
dec
jb
adc
faddl
andl
shlb
mov
or
int3
cmp
mov
lahf
pop
push
xor
and
cld
push
or
push
faddp
sbb
addr16
rcr
outsb
aaa
mov
dec
add
add
xor
xchg
loope
inc
sub
add
dec
push
addr16
and
lret
add
sbb
mov
es
dec
fiaddl
add
sbb
fsubl
mov
add
loope
inc
mov
push
cmpsl
xchg
and
iret
jns
sbbl
inc
outsl
pop
dec
inc
cmp
ret
int3
sahf
push
dec
pop
jnp
ljmp
in
sbb
or
imul
shlb
adc
rclb
inc
int
popa
dec
and
into
add
loop
cmp
inc
and
and
mov
xlat
cmp
jl
sub
sub
cmp
rcll
nop
insb
into
inc
push
mov
inc
dec
cs
lods
test
dec
inc
sbb
jp
shll
mov
test
pop
mov
cli
cmp
inc
and
ds
xor
sbb
jns
cld
jbe
int3
xchg
cwtl
sbb
and
xor
adc
xchg
sahf
or
lret
mov
dec
add
out
jb
pop
insb
mov
xor
push
cli
add
mov
sub
xchg
cmc
popf
adc
dec
and
loope
dec
inc
pushf
aam
inc
scas
mov
sbb
notb
add
xlat
cld
or
or
add
push
xchg
adc
rorb
mov
mov
adc
dec
pop
or
sbb
mov
dec
call
dec
clc
xor
adc
pop
dec
xchg
fsubs
in
add
mov
inc
and
mov
pop
add
add
rolb
repnz
or
imul
hlt
jge
jl
divb
aad
out
enter
push
sub
add
subl
jg
dec
xchg
sbb
call
add
inc
dec
jl
or
pop
push
add
out
jo
shlb
cmp
jns
add
in
cltd
decb
add
or
jbe
popf
shlb
pop
sbb
adc
inc
cmp
sbbb
adc
sub
call
lret
fs
jmp
js
in
inc
roll
pop
push
dec
aas
enter
mov
lea
movsl
loop
push
cwtl
pushf
pop
add
jp
and
fistl
adc
sti
jno
fistps
inc
mov
dec
aaa
xchg
mov
adc
arpl
std
or
scas
mov
fisubl
add
sub
mov
sahf
cmpsl
adc
in
nop
lcall
insb
loopne
jne
or
sbb
neg
and
lds
loopne
push
test
fdivs
cmp
mov
mov
jbe
xchg
daa
les
or
pop
ret
or
inc
je
inc
in
dec
xor
ljmp
jo
mov
jo
jmp
cltd
out
jae
add
xchg
daa
ja
cmp
add
pop
mov
sbb
insl
dec
inc
insb
add
pop
pop
adc
pop
pop
add
fsubp
mov
xor
mov
xchg
mov
mov
or
cs
sbb
adc
mov
divb
mov
xchg
sub
daa
jne
nop
loop
or
push
jbe
jo
mov
push
testb
stos
into
bound
mov
dec
add
xchg
stc
aad
jo
or
ret
or
push
ret
out
xchg
push
xchg
adc
sbb
cmp
div
push
hlt
xchg
cmp
mov
jmp
cmp
push
nop
add
sub
test
push
in
sub
adc
jge
hlt
xor
test
movsl
xor
icebp
into
add
mov
and
ss
pop
scas
adc
dec
js
mov
jnp
dec
xchg
sub
fstpt
sbb
and
in
dec
repz
ret
stos
test
cmpl
fwait
cwtl
lods
test
inc
xlat
and
lcall
pop
inc
sbb
cltd
imul
inc
sbb
dec
dec
sbb
cmp
pop
fmuls
jo
jae
add
jbe
subb
rcrl
das
xor
dec
repz
idivb
or
adc
xor
adc
push
decl
xchg
fdiv
std
gs
mov
sti
add
cmp
pop
shll
or
jle
jl
and
jo
outsl
pop
inc
test
push
adc
adc
js
push
ss
push
rcrb
popa
mov
psubsb
lods
inc
xchg
and
jg
jecxz
xchg
ficoms
aaa
add
add
lcall
mov
ret
xor
mov
add
sbb
and
fs
pusha
daa
ret
and
stos
push
mov
and
sub
push
pop
xor
inc
add
test
xchg
dec
jmp
cmp
or
dec
sbb
or
test
push
pop
mov
push
push
iret
jmp
add
push
cmpsl
sub
add
or
and
nop
in
xchg
mov
jge
iret
aam
and
cmp
push
shll
fidivl
sub
scas
subl
out
mov
rcll
jnp
push
scas
dec
adc
inc
push
push
into
sarb
push
add
rorb
loope
adc
enter
insb
adc
mov
mov
cmp
mov
sub
pop
inc
rorl
sub
rcrl
xor
mov
and
xor
sbb
ret
sub
dec
scas
xchg
mov
mov
fdivs
dec
cld
dec
addr16
popf
sahf
xor
nop
mov
push
js
push
jle
or
inc
dec
and
movswl
iret
jmp
js
je
test
movsl
xor
cmpb
test
cmp
aad
mov
cmp
mov
xor
cmp
push
cmpsb
jge
jl
push
add
lea
pop
ret
dec
lock
jae
jp
js
and
and
addl
inc
sub
sbb
mov
add
dec
mov
jno
pop
jmp
cmc
gs
dec
xor
pop
jb
push
dec
rcrl
pop
pop
xchg
jle
sub
sbb
mov
arpl
pop
push
sahf
fs
or
fsubs
lcall
test
jl
lock
je
test
inc
enter
fs
adc
xchg
lret
mov
jl
jl
push
add
sub
pop
adcl
insb
inc
and
dec
mov
adc
sahf
xchg
mov
test
adc
push
sbb
stos
cmp
sbbb
add
inc
stos
shrb
je
jns
sbb
pusha
pusha
inc
and
roll
js
cs
in
lea
roll
mov
dec
xlat
leave
push
push
push
das
xor
pop
decb
test
inc
cld
jp
scas
add
mov
wrmsr
xor
or
and
cmp
adc
cmc
cmp
add
test
ds
add
fwait
sbb
rcrb
inc
testl
les
jg
push
or
sub
xchg
ret
jo
inc
add
testl
movl
jl
ss
mov
dec
inc
dec
xlat
pop
mov
pop
push
dec
mov
mov
dec
dec
xchg
fldl
push
or
jecxz
push
dec
fstps
movsb
push
and
cmp
adc
sbb
xchg
add
popl
mov
popf
fimuls
dec
jp
dec
dec
adc
ds
cwtl
xor
add
enter
aam
xchg
fadds
mov
mov
out
orb
or
mov
mov
sahf
sub
or
pop
cmp
push
xor
jle
and
out
andl
call
test
sub
push
jo
mov
test
mov
or
das
jb
mov
sub
cmp
mov
inc
repnz
xchg
mov
rclb
dec
test
mov
sub
ljmp
inc
or
dec
or
je
std
and
adc
add
add
mov
nop
movsb
dec
leave
shll
adc
iret
lock
ret
imul
add
or
adc
push
and
sbb
push
adc
into
mov
pop
xchg
jl
jbe
sub
or
cli
jmp
pop
out
loopne
cmp
sub
test
jnp
cmp
add
add
nop
dec
jmp
pop
xchg
cmp
sbb
pop
mov
cmp
mov
test
repnz
add
fmul
into
jnp
sub
sbb
arpl
shlb
pop
add
add
add
pop
iret
rorb
inc
mov
nop
mov
pop
aaa
dec
push
add
mov
in
add
shll
cld
leave
adc
dec
popa
mov
sub
imull
addr16
mov
jo
pushf
and
stos
adc
sbb
jp
movsb
out
and
je
enter
cs
push
ss
paddsb
mov
sti
pop
loop
test
xchg
xchg
or
add
bound
mov
adc
or
and
xor
ss
dec
ja
cli
pushf
or
ljmp
and
jl
pop
outsb
js
inc
inc
add
nop
imul
mov
dec
push
pop
and
inc
jbe
mov
jmp
and
and
ret
shll
fldcw
add
xor
push
push
pop
imul
ffree
sbb
gs
add
ja
push
mov
xchg
inc
jns
xchg
jae
or
dec
push
es
loope
jecxz
adc
xor
mov
sub
mov
enter
push
addb
adc
pop
push
dec
inc
inc
fadds
inc
stos
mov
repz
xor
sbb
pushf
cmpsb
push
jl
xor
mov
push
and
sti
addb
push
jp
xchg
dec
fiaddl
iret
rdpmc
imul
idiv
cmp
std
sbb
lea
mov
push
shr
mov
sub
sub
fstpt
inc
fmull
fmull
mov
shrl
sbb
addr16
sub
out
mov
adc
lods
popa
add
test
or
imul
and
ss
cmpl
mov
mov
gs
mov
arpl
dec
pop
add
jmp
mov
and
xor
pop
jmp
pop
out
pop
add
je
div
roll
mov
movsb
adc
mov
mov
mov
push
jl
xor
sbb
adc
inc
in
mov
add
andb
addl
pop
cmp
push
dec
xor
push
or
call
dec
adc
push
sbb
push
xchg
or
mov
add
sub
or
outsb
jae
adc
adc
push
or
jbe
push
lods
sub
enter
popa
dec
sbb
in
push
lea
mov
lea
dec
pusha
mov
cmp
pop
loopne
pop
push
popa
outsl
mov
pop
jno
push
ja
cmp
or
sar
add
sbb
jne
sbb
mov
test
loopne
ret
lea
add
and
lret
add
loopne
insb
inc
or
push
sahf
adc
addb
cmp
cli
pop
xchg
add
dec
push
jg
ja
xor
sbb
push
sub
add
leave
outsb
test
rcll
mov
jecxz
add
pop
adc
or
jg
mov
js
push
jne
scas
inc
pusha
dec
inc
addr16
push
add
and
jns
cli
jge
inc
add
or
jp
push
flds
sbb
insb
pop
fiadds
repz
mov
mov
fwait
lret
or
aam
jmp
add
dec
mov
inc
orb
or
int3
shlb
cmp
fcoml
inc
or
sbb
cmpsb
rcr
hlt
and
lret
add
hlt
lock
or
mov
aad
jg
inc
dec
mov
iret
rorb
or
fists
sbb
or
ja
inc
mov
push
daa
and
jno
sub
push
clc
jbe
jl
out
std
push
dec
mov
push
add
inc
out
sbb
test
mov
imul
dec
fiadds
mov
jnp
sbb
icebp
sub
xchg
rcll
andl
dec
sbbb
mov
dec
in
or
aam
fdivrl
stos
mov
aas
sbb
cld
fisttps
adc
or
or
rcll
lea
adc
xor
dec
repz
sub
popa
dec
xor
add
testb
and
movl
sub
inc
pop
push
call
inc
lea
out
in
push
test
cmp
in
jp
ds
cs
lea
inc
jge
ret
mov
push
dec
jecxz
jmp
jecxz
xchg
sbb
sub
push
rcl
test
xorl
test
or
cmpsb
mov
pop
jge
mov
pushf
mov
or
xor
adc
popa
push
fsubrl
pop
lret
imul
adc
or
imul
outsb
add
cmp
sub
mov
inc
pop
pop
pop
lea
mov
jg
dec
and
jmp
out
fs
and
rcrl
enter
add
ret
das
ss
adc
cmp
loopne
cmc
jp
movl
or
test
in
push
mov
xlat
or
aad
push
inc
jnp
add
cwtl
fbstp
sarl
add
sub
mov
mov
jle
push
cs
jge
sub
adc
mov
das
push
jle
nop
hlt
dec
cli
jmp
and
sbb
int
xchg
adc
stc
and
shrb
test
cmp
mov
cmp
adc
and
in
jp
loope
pop
push
and
xor
and
dec
clc
or
or
fsubs
addr16
pusha
mov
pop
ret
hlt
sbb
pop
hlt
sbb
add
or
fstps
or
add
fdivrl
xchg
dec
data16
or
aad
sahf
out
xor
jo
sbb
mov
mov
imul
adc
or
add
mov
dec
inc
pusha
mov
cmp
push
dec
and
inc
jb
pusha
icebp
orb
mov
xchg
in
sub
mull
into
or
loop
lea
sub
int3
lods
sbb
pop
xor
shl
imull
add
roll
sbb
insl
or
lcall
xchg
loopne
and
lret
jae
mov
sbb
inc
xchg
adc
movb
adcl
jne
movb
add
cld
adc
jns
sbb
inc
call
cmp
cmp
jb
neg
mov
jmp
and
jne
ret
dec
push
in
int
xor
xor
jl
clc
scas
cltd
add
push
ja
cld
add
add
xchg
sar
mov
push
sub
mov
incb
fmul
add
mov
add
push
das
test
into
jno
mov
jns
dec
jge
sahf
or
adc
mov
push
xor
or
jne
or
adc
push
out
mov
add
rolb
cltd
notb
mov
add
ret
cwtl
pop
rolb
pop
sub
lret
imul
lcall
lahf
shl
fisttps
test
push
and
add
insl
adc
adc
mov
arpl
or
add
out
neg
xchg
ret
or
imul
daa
imul
xor
lods
pusha
sub
fisttps
pop
mov
cmp
xchg
mov
pusha
sbb
adc
xor
loopne
ja
or
pop
loopne
cmp
dec
stc
loope
add
cmp
cmp
andb
call
cld
mov
or
shrb
jge
mov
adc
lret
mov
pop
pop
xor
aad
push
push
and
sbb
jb
rcrb
and
mov
mov
mov
push
xchg
es
jno
mov
fstps
cs
and
mov
fidivrs
xor
and
xlat
inc
push
adc
popa
and
add
or
cmp
orb
push
adc
sub
push
sub
ljmp
fidivl
mov
mov
sbb
in
and
pop
or
adc
fs
or
push
mov
lcall
mov
push
pop
repz
sbb
pop
add
fwait
mov
imul
imul
ja
movsb
inc
pusha
mov
out
sahf
adc
or
mov
aaa
add
inc
dec
and
loope
ret
xchg
mov
lods
mov
test
mov
test
sbb
push
and
mov
mov
pop
aaa
and
cmp
or
sub
adcl
add
push
and
pop
push
pushf
out
pop
mov
inc
and
xchg
pop
roll
shlb
sbb
sbbl
adc
loopne
dec
sbb
sbb
jns
and
pushf
sbb
fadd
mov
movsl
mov
test
test
inc
push
cmp
xchg
fcoms
test
sub
add
add
jge
dec
inc
cs
decb
mov
shl
inc
js
push
push
cmpb
push
add
pop
pusha
dec
dec
mov
or
push
lods
and
lcall
sbb
add
or
sub
sbb
jo
sub
add
test
mov
mov
sbb
inc
rcll
and
pusha
pop
xchg
arpl
dec
nop
cmp
sbb
jbe
mov
mov
cwtl
jg
orb
cmp
dec
or
mov
push
jbe
jbe
push
inc
fld
push
mov
pusha
movsb
xchg
add
pusha
jne
stos
pop
sub
call
and
or
sarb
mov
mov
sar
test
insb
lods
call
jne
pop
sub
inc
push
adc
orl
xchg
xor
lret
push
or
adc
and
outsl
lds
cwtl
pop
xchg
or
mov
push
dec
jno
jbe
lock
rcrb
lcall
and
cltd
push
cmp
call
aad
imul
nop
jne
test
add
pop
fisttps
mov
dec
xchg
scas
adc
outsb
inc
pop
push
push
xor
or
movsb
pop
repnz
cmp
jne
leave
jo
jle
add
add
xchg
or
push
xlat
xchg
mov
add
out
push
sub
fsubrl
dec
imul
add
popl
add
dec
in
inc
mov
adc
inc
adc
out
push
je
inc
repnz
cs
jne
xchg
push
add
pop
loopne
inc
in
sbb
or
ljmp
nop
nop
dec
adc
nop
xchg
and
test
pushf
mov
adc
push
adc
ret
flds
cltd
fisubrl
pop
notl
leave
and
add
mov
or
dec
addb
pop
push
or
dec
pop
push
xchg
pop
call
sub
cmp
add
add
jb
add
rcrl
add
push
popa
sbb
sub
or
test
ds
addl
add
sbb
sbb
mov
mulb
scas
xlat
negl
mov
inc
xor
xchg
lods
notl
push
jl
pushf
push
repz
xorl
xor
sahf
adc
inc
cmp
push
dec
sub
sbb
adc
adc
xchg
add
rorl
testb
sub
scas
mov
xor
cltd
in
cmp
pop
adc
jbe
test
movl
mov
cmpsl
fists
adc
add
enterw
mov
cmp
mov
pop
js
push
fcmovnu
movzwl
das
lds
loope
xchg
lahf
cwtl
sbb
push
sbb
xor
mov
cmp
jno
ljmp
or
je
mov
jl
scas
pop
addr16
cmp
dec
fs
aas
sbb
mov
mov
stos
or
xor
xlat
add
or
insl
mov
mov
daa
call
repnz
inc
popf
mov
push
cmp
in
xor
dec
sbb
idivb
pop
in
dec
dec
add
inc
popf
or
pushf
or
sbb
movsb
stc
jecxz
lds
sbb
jae
sbb
into
or
inc
xchg
out
and
adc
fs
lcall
bound
sub
dec
fs
and
jo
or
cmp
dec
and
or
jno
pop
inc
and
add
daa
std
psubb
mov
ficoms
xchg
scas
jnp
adc
cmp
sbb
sbb
dec
lds
mov
js
sbb
jmp
push
dec
mov
or
sbb
stos
clc
lds
cmp
stos
adc
nop
lds
aaa
push
xchg
add
hlt
cmp
xor
or
or
lea
push
lret
cmp
imul
testb
push
popa
add
lock
inc
dec
fmull
sub
sub
push
adc
mov
sbb
subl
jl
sbb
test
or
xor
pop
addb
xor
filds
nop
repz
test
cmp
jae
rcrl
bndstx
mov
or
outsb
les
or
inc
mov
push
outsl
pushf
stos
test
jns
xchg
stos
dec
or
popa
and
sub
dec
fsts
pop
lock
data16
cmpsb
loope
lret
push
push
sbb
pop
dec
out
jecxz
xor
add
jae
shlb
pushf
xchg
aam
mov
mov
add
ret
cmp
in
loopne
outsb
adc
bound
lock
inc
sbb
ja
cs
negb
and
cs
cs
and
push
je
imul
mov
lret
lods
or
xor
xor
and
and
add
loope
xchg
ss
sbb
mov
jmp
loope
mov
fs
rclb
mov
push
xor
call
loop
fidivs
ljmp
or
mulb
divl
fstpt
insb
or
or
add
ja
add
add
jb
jae
out
add
test
or
dec
out
test
mov
pop
sub
data16
inc
xchg
xor
ret
scas
adc
cmp
xor
gs
loopne
call
or
xor
dec
pop
cwtl
xor
dec
push
and
popa
popa
cltd
orb
fistl
add
sub
imul
test
ret
xchg
pop
adc
lds
jnp
and
mov
mov
ds
adc
pop
adc
pusha
popf
cmp
insb
fiaddl
or
inc
sub
sub
inc
iret
sub
sbb
lock
or
movsl
or
push
adc
dec
cs
mov
push
lahf
cli
mov
fldcw
repnz
dec
add
mov
push
call
or
or
adc
pop
pushf
fimuls
rorl
lret
jo
shl
push
ds
loope
jl
test
push
pop
inc
pop
jecxz
mov
and
sbb
dec
push
jp
xlat
in
and
clc
pop
cltd
push
insl
lea
dec
pop
testb
lock
leave
or
mov
inc
rorb
xchg
inc
add
inc
adc
lcall
sbb
rorl
loope
test
add
push
push
inc
and
adc
imul
call
loop
fldcw
or
cmp
or
jp
rcrl
les
adc
and
inc
inc
sub
mov
mov
sahf
icebp
pop
mov
sub
out
lea
sub
cmp
insb
add
sub
sarl
xorl
inc
pop
fisubrl
xor
jnp
enter
pop
lds
sbb
mov
aaa
movsl
xor
pop
add
jo
mov
sub
adc
sbb
mov
inc
lds
dec
pop
cmp
insl
sbb
daa
sbb
inc
mov
xor
pop
js
pop
push
lds
xchg
mov
push
push
lods
push
add
and
push
push
testb
add
cmp
sbb
adc
xor
xchg
test
lds
arpl
xor
mov
pushf
sub
push
in
lcall
pushf
mov
cltd
mov
sbb
jge
push
lds
push
mov
mov
add
ss
or
add
mov
mov
and
jb
imul
dec
inc
mov
inc
push
xchg
mov
push
cmp
divb
mov
adc
mov
repnz
sbb
dec
stos
push
nop
jnp
xor
out
add
scas
pop
movsl
loopne
outsl
mov
push
into
enter
xlat
inc
lret
or
sbb
jo
mov
test
xchg
add
mov
push
inc
sub
jne
xchg
imul
pop
sub
addr16
xor
cwtl
or
scas
cmp
bound
das
push
fwait
or
mov
xlat
imul
mov
outsb
add
sub
cmovns
xchg
add
mov
push
ficomps
and
push
in
loopne
mov
outsb
jge
and
inc
xchg
add
mov
rorb
mov
inc
dec
xor
and
pop
iret
sbb
xor
daa
xor
sbb
inc
jge
stos
xchg
inc
jmp
push
ud1
adc
pop
add
inc
popa
pop
mov
push
and
fiaddl
insb
and
xchg
pop
xor
add
mov
push
pop
ret
popf
out
ret
imul
js
push
sahf
mov
lret
or
sub
rolb
insb
movsb
pop
jge
push
movsl
and
push
sub
add
push
inc
mov
xor
data16
fdivl
pop
fidivl
or
decb
jl
jp
cmc
xor
inc
pusha
sbb
cmpl
and
or
cs
sbb
out
lods
rcll
pop
adc
jmp
mov
dec
inc
pop
dec
cmp
aam
add
sub
adc
push
loope
je
mov
inc
pop
pop
sbbb
mov
push
hlt
scas
ret
clc
inc
add
stos
in
push
fcompl
test
adc
inc
repz
inc
int3
in
and
adc
inc
dec
xor
inc
loope
out
into
jg
aad
inc
faddp
pop
shrl
and
inc
sbb
xchg
jle
cld
dec
aas
adc
add
nop
mov
pop
jle
dec
xor
iret
mov
mov
cmp
ret
clc
jecxz
xchg
and
add
mov
cmpsl
loopne
add
sbb
jg
mov
sub
pushf
mov
xor
negb
or
sub
dec
add
add
inc
xchg
subb
and
jne
fildll
adc
and
mov
shlb
inc
testb
add
dec
xor
push
cltd
adc
je
and
cmp
adc
and
mov
xchg
cmpsb
lods
out
and
adc
pop
sub
mov
push
mov
mov
fwait
adc
nop
pop
pop
insb
test
out
je
inc
and
or
dec
inc
xor
repnz
lods
xor
or
scas
mov
addb
mov
or
adc
mov
fildll
lea
add
shlb
or
push
dec
fldt
adc
jl
ret
xor
inc
sbb
jo
dec
push
jg
push
or
jns
and
scas
fsubs
pop
dec
inc
or
push
sbb
mov
pop
inc
jg
loopne
or
aas
mov
popa
mov
pop
clc
jns
jnp
add
cmpsb
repnz
add
fs
pop
push
pop
pop
mov
jmp
add
mov
hlt
fisubl
cmp
mov
enter
pop
inc
push
push
test
pop
jnp
fidivl
loopne
negb
add
insb
adc
push
cmp
inc
or
push
shl
ret
stos
mov
inc
lock
cmp
push
fnsave
push
push
aad
push
inc
cs
inc
lret
push
es
iret
lcall
and
addr16
enter
dec
add
pushf
cmc
test
pop
ss
mov
clc
push
sub
and
aad
inc
movsb
xor
pop
je
dec
das
lods
sarb
jle
movl
das
mov
lret
daa
loope
rol
loop
add
and
int
adc
sub
mov
push
mov
mov
cmp
repz
xchg
adc
fs
leave
xchg
out
pop
adc
xchg
push
or
sub
movsb
subl
in
fsubs
repz
addr16
hlt
mov
faddl
daa
cmp
jbe
es
les
loop
xchg
das
xor
cmp
jp
popa
daa
js
jae
push
push
fwait
mov
imul
and
push
dec
fmull
sub
xor
jmp
inc
popf
add
mov
xchg
pop
rorl
xor
or
adc
cmp
mov
and
addb
inc
std
and
mov
sbb
pop
leave
push
jb
cld
dec
rcll
inc
sahf
add
addl
sbb
dec
test
sbb
test
sbb
sbb
push
jb
mov
fbstp
sub
add
jbe
subb
cmp
mov
and
iret
int3
cmpsl
das
mov
test
mov
dec
pushf
adc
bound
cmp
xchg
xchg
and
mov
add
addr16
dec
jl
sub
fcoms
jg
ja
mov
divl
jg
mov
int3
push
jo
lret
mov
popa
ljmp
inc
ror
adc
in
sub
shlb
sbbl
cmpl
push
cmpl
ja
aam
push
mov
add
inc
cmp
imul
aam
add
sti
subb
into
add
movsb
or
or
push
push
inc
enter
lock
outsb
sbb
sbb
xchg
sub
aam
subl
fldl
mov
inc
jp
jmp
jns
adc
insb
aas
add
in
iret
xor
xchg
ss
add
push
jo
sarl
push
dec
add
fbstp
add
arpl
mov
ja
inc
pop
shll
add
push
sbb
stos
xchg
or
test
pop
ss
les
fsubl
sub
and
enter
fwait
inc
aad
data16
add
or
mov
cltd
inc
xlat
and
mov
icebp
mov
aad
jb
dec
dec
xchg
aad
mov
or
je
add
push
data16
subl
cld
xlat
inc
loop
addb
and
sub
and
pop
mov
pusha
orb
insl
mov
cmp
mov
out
push
test
add
inc
or
scas
dec
enter
gs
lods
test
mov
ret
or
xchg
test
loopne
inc
test
add
movlps
das
sbb
jo
sub
cs
mov
popa
pop
mov
adc
nop
or
pop
inc
mov
aam
mov
or
test
jmp
cmpsb
push
mov
arpl
xchg
mov
add
imul
push
and
lret
imul
sbb
icebp
sbb
jns
addr16
mov
sbb
pop
icebp
movsb
add
clc
imul
cmp
adc
or
push
cmp
xor
mov
mov
test
lods
in
popa
jb
cmc
cltd
mov
jmp
push
cmc
cmovno
addb
lock
mov
adc
dec
adc
in
pop
or
sbb
xlat
fstpl
and
mov
jb
call
inc
xchg
push
push
mov
pop
or
test
insl
cmp
cmpsl
cs
dec
add
mov
add
aas
das
add
insb
and
fadds
adc
pop
dec
pop
daa
sar
dec
and
clc
add
xor
add
stos
or
fnstenv
mov
mov
stos
mov
mov
jbe
pop
xchg
inc
cwtl
sti
inc
jg
push
test
popf
jg
xchg
rcrl
push
add
and
inc
dec
or
cmp
rolb
or
sbb
and
push
mov
lock
pop
ljmp
or
add
lock
xor
inc
sub
push
mov
jnp
push
mov
pusha
orl
pop
sbb
out
xor
add
mov
rcll
das
loopne
sub
ljmp
jle
lea
mov
insb
push
addl
adc
cmp
lcall
sub
mov
mov
xor
dec
sub
jmp
mov
mov
fadds
pop
pop
xchg
rcrb
les
iret
pop
push
sahf
adc
pop
adc
aas
cs
frstor
jecxz
mov
xor
cmp
inc
insl
adc
xor
bound
push
push
jae
sub
pop
mov
jmp
or
adc
adc
dec
leave
xor
aam
sbb
jmp
pushf
jmp
ror
roll
jnp
cli
in
lea
inc
push
aad
push
out
jo
imul
jmp
cmp
cmp
mov
sub
add
mov
add
inc
fisubrl
fnstcw
jne
sbb
xchg
test
out
pop
repnz
loopne
pop
mov
nop
dec
insb
mov
fs
and
add
inc
test
or
xchg
xchg
push
add
fistpl
iret
xchg
and
out
out
scas
pop
jb
push
inc
fs
outsl
pop
in
xchg
dec
bound
out
add
adc
adc
in
adc
lods
loopne
rcrb
adc
mov
sbb
adc
test
test
mov
fs
aas
jno
push
add
mov
jle
mov
test
ljmp
cs
dec
enter
sar
pop
mov
shr
adc
es
cmp
inc
test
push
jecxz
scas
rcr
or
in
jmp
or
mov
mov
dec
ret
int3
mov
ss
add
jge
gs
sub
adc
in
adc
js
dec
and
fdivp
and
je
mov
jmp
aad
ret
mov
rorb
fdivrs
scas
insl
hlt
insb
or
mov
mov
mov
mov
xor
jae
das
or
jmp
mov
mov
cmp
dec
leave
popf
loop
mov
test
xor
or
add
mov
fistpll
sbb
pusha
or
mov
ja
and
clc
and
mov
add
outsl
push
or
dec
add
push
sub
fcomp
shl
lds
add
fstps
lods
fadd
adc
call
movsb
xchg
les
cwtl
jg
xchg
loope
jmp
in
add
pop
dec
or
dec
aad
add
ja
imull
ja
repnz
pop
jmp
or
lcall
mov
in
add
mov
adc
rol
xor
fisubs
stc
adc
and
jle
inc
xchg
fsubrl
out
out
mov
adc
out
stos
shl
pop
pop
lcall
push
cmc
mov
bound
inc
stos
pop
cmp
test
mov
pop
ljmp
jo
dec
dec
sbb
adc
adc
jg
jp
aas
je
movl
dec
cmp
add
or
adc
jno
cmp
loop
sub
add
jno
jmp
pop
nop
sbb
dec
xor
stos
jns
dec
in
aas
pop
sarb
mov
out
xchg
add
dec
pop
sub
cmp
pushl
mov
leave
or
fisubrs
lds
incl
nop
or
jo
pop
mov
xchg
ret
adc
out
and
ret
cmp
jg
add
xchg
daa
cmc
dec
or
push
add
pop
jecxz
out
adc
pop
push
push
add
fbstp
in
adc
shrl
das
or
jl
das
orb
adc
inc
les
xor
sbb
lods
setbe
in
cmp
xor
or
je
sub
xchg
push
inc
sbb
jge
lret
cmp
mov
loopne
dec
add
fbstp
jge
in
cli
loopne
mov
sbb
add
pop
jg
das
or
rclb
mov
or
lea
loop
je
fcomps
rolb
jle
aam
xor
mov
xor
or
jl
jecxz
jne
sbb
repz
ret
jmp
inc
cmp
sub
pushl
cmp
bswap
ss
test
xor
xchg
mov
mull
dec
mov
into
push
mov
jne
dec
push
sub
popa
cmp
xchg
sarb
jmp
push
jne
mov
add
arpl
lods
imul
or
add
movsb
out
insl
mov
out
paddb
and
mulb
bound
and
xor
inc
mov
lea
pop
scas
jmp
jnp
mov
rol
add
daa
sahf
insl
pushf
cmpl
in
and
test
cmpsl
jmp
rcrb
inc
add
sub
out
xchg
inc
es
adc
jp
adc
cmp
fsubl
loopne
cmp
or
dec
push
faddl
inc
and
pop
loopne
sbb
aam
shrl
add
xorb
mov
ss
inc
add
ja
add
inc
xor
xchg
add
add
shrb
or
xor
shll
rolb
dec
add
add
add
popf
xor
jae
rorb
dec
cwtl
es
xor
xchg
andl
inc
dec
fnstenv
and
sbb
stos
mov
jo
adc
or
sbb
pop
mov
daa
out
jl
je
insl
dec
or
cmc
ret
mov
cmp
std
and
stc
and
push
pop
adc
sahf
xchg
and
aas
pop
jl
mov
pop
mov
mov
add
xor
in
inc
inc
mov
mov
sbb
mov
daa
pop
mov
hlt
mov
and
loop
cmp
out
mov
outsb
les
incl
adc
push
rorl
and
sbbb
aas
or
ret
das
decl
dec
sub
dec
sbb
sbbb
add
or
or
sub
add
in
sub
xor
in
lds
aas
sahf
xchg
inc
popa
lods
mov
sbbl
adc
jp
movl
jae
inc
sub
sub
mov
pop
cmp
pop
push
jle
mov
and
mov
movl
mov
rorb
arpl
add
mov
cmp
ret
pop
mov
in
or
or
daa
add
adc
subb
jmp
pop
and
ret
fsts
ret
cli
push
and
je
mov
add
xorb
lahf
mov
stos
je
and
or
or
loopne
shrb
aam
add
shll
mov
push
imul
adc
xchg
mov
push
lea
dec
sbb
sbb
sbb
dec
inc
inc
pop
lods
push
adc
scas
xor
xor
jnp
xchg
es
add
sbb
adc
decl
or
xchg
popf
mov
pop
mov
dec
cmp
inc
js
stos
pushf
add
int3
inc
mov
xchg
sahf
addr16
mov
dec
push
sbb
jmp
push
mov
jae
xor
jp
add
mov
add
pushf
sub
test
enter
inc
test
insb
push
or
in
andb
push
cwtl
cmpsb
xor
clc
xchg
imul
fisubs
mov
lret
push
sub
ljmp
lcall
jl
andl
lock
pop
movsl
xchg
mov
ss
pushf
movsb
outsb
mov
shrb
dec
xor
xchg
adc
cld
rolb
rorb
mov
loope
aam
and
imul
push
jge
adc
add
mov
shrb
inc
pop
cli
aas
outsb
cmp
jge
mov
orl
adc
add
mov
mov
lds
inc
cli
adc
mov
mov
jp
shlb
jl
jne
sub
xor
mov
clc
or
and
jbe
push
or
pop
pop
push
push
add
add
scas
or
adc
mov
dec
adc
mov
xchg
sub
lock
pop
or
xchg
sub
loop
fildl
xor
shll
je
sub
adc
push
daa
or
inc
adc
testb
pop
jmp
sbb
nop
mov
outsb
add
in
push
adc
scas
adc
hlt
adc
subl
sbb
lock
rclb
dec
inc
sti
lock
paddw
mov
and
jle
cld
mov
and
je
inc
cld
fsts
xchg
adc
pusha
xor
dec
cs
push
sbb
cs
enter
cmp
inc
jle
int
lahf
lods
roll
imulb
mov
push
bound
jl
mov
xor
inc
in
pusha
das
add
test
adc
jbe
xor
lret
cmp
push
sbb
mov
fcmovnu
mov
test
adc
cmp
push
imul
cmp
adc
insl
aad
jae
aaa
cmc
ds
and
popf
mov
js
cmp
scas
fdivrl
ss
dec
sbb
xor
add
in
jecxz
sub
ficoml
fildl
aas
mov
aas
adc
jno
inc
or
loop
lret
inc
adc
cmp
cwtl
shll
adc
lods
clc
pop
adcb
mov
push
aaa
les
arpl
push
les
imull
insb
jge
vmovntpd
and
inc
mov
mov
cld
and
cmp
outsl
or
mov
mov
push
cwtl
popa
inc
lret
mov
les
add
lret
adc
mov
and
sarl
mov
or
adc
add
lds
ss
mov
sub
pop
pop
filds
orl
lret
aam
pop
ds
shlb
xor
addr16
enter
push
fs
push
and
pop
or
mov
jmp
stos
add
or
cmp
push
xlat
cmpl
push
dec
adc
add
aam
cmp
add
js
adc
adc
popa
es
adc
adc
add
loopne
inc
xorl
cld
jb
dec
je
dec
adc
das
imul
or
and
add
pop
inc
loopne
repnz
cmp
cmp
push
add
insb
sbb
fimuls
cwtl
fsubl
dec
cs
inc
shl
fldl
cld
mov
adc
adc
rol
xchg
movsb
mov
sbb
adc
iret
xor
or
push
mov
add
add
imull
mov
add
push
sub
out
sub
lcall
je
movsl
mov
adc
roll
sub
push
push
in
sub
pop
in
push
xor
icebp
fstpl
jecxz
pop
inc
mov
mov
and
jg
or
fstl
adc
sbb
cli
xchg
sbb
arpl
push
mov
xor
out
push
mov
out
ds
frstor
fdivrs
xchg
lea
call
pusha
inc
adc
cmp
enter
mov
jbe
push
dec
jle
call
les
and
push
xor
popf
xchg
lods
cmp
daa
mov
cmp
add
dec
fsts
xchg
push
or
cmp
pop
xlat
inc
xchg
add
lods
pop
movsl
and
xchg
notl
cwtl
inc
addr16
and
ljmp
push
adc
sahf
xchg
xor
push
test
fcomps
xchg
out
cmp
sub
das
sub
pop
or
imul
and
ljmp
mov
loop
shll
sbb
jae
imul
sub
es
sbb
sbb
mov
nop
sbb
stos
dec
pop
test
xor
div
loop
push
out
mov
ret
lock
mov
test
inc
roll
xchg
add
fisubrl
iret
mov
loopne
or
adc
mov
out
push
cmp
inc
ret
xchg
sbb
int3
inc
and
dec
imul
cmp
xor
sub
push
or
lock
mov
xor
jg
add
pop
mov
sbb
lahf
push
add
mov
frstor
pop
movhlps
sarl
add
add
and
sbb
cltd
inc
xchg
push
cmp
dec
roll
ja
inc
dec
add
lret
adc
int
add
pushw
pusha
push
add
sbb
lock
mov
add
xchg
sbb
and
sarb
xor
sbb
aad
mov
or
lock
enter
mov
and
shlb
jg
mov
pop
inc
cld
jle
nop
sub
jns
pop
mov
cmp
js
adc
pop
mov
bound
inc
inc
dec
inc
adc
jns
add
sbb
jns
jp
in
es
or
cmp
movsb
dec
inc
dec
push
cmp
and
incl
push
loopne
jo
cmpsl
clc
mov
and
sub
jp
fldt
xchg
fimull
push
das
enter
inc
movsl
in
shr
mov
pop
push
mov
cmpxchg
dec
ret
push
and
adc
ss
adc
push
push
out
cwtl
add
test
and
cmp
cmpsl
push
push
mov
jle
dec
daa
xorb
jg
xchg
push
cmp
lret
mulb
sbb
push
inc
xchg
mov
push
das
sbb
inc
in
or
ficoml
or
rcrl
xor
inc
lods
movmskps
jg
cmp
icebp
mov
jmp
or
andb
aas
gs
pop
dec
or
insb
xchg
xor
or
rclb
in
jb
ljmp
leave
or
and
jge
cmpb
and
lods
sub
sbb
mov
and
cmp
push
mov
sbbb
mov
jo
rcr
fisttpl
and
mov
aad
xchg
mov
or
inc
xor
mov
mov
lret
loopne
pushf
xchg
iret
aas
adc
rcr
in
xchg
sbb
add
dec
out
adc
sar
adc
pop
daa
sub
add
jb
js
idivl
call
sbb
rolb
pop
add
inc
pushf
cmpsb
fld
ret
push
add
pushf
inc
mov
push
dec
add
insl
sahf
jns
les
xchg
inc
jle
rcrb
sbb
sbb
fcoms
repnz
push
in
and
mov
mov
test
sub
in
lcall
mov
in
push
sub
mov
pop
sub
iret
add
sti
xor
and
inc
pop
sti
sbb
and
jb
fcoms
xchg
mov
nop
mov
stos
mov
lea
lcall
inc
ret
fcomi
mov
stos
aad
dec
loop
xor
adc
add
push
mov
push
mov
inc
mov
mov
pop
ret
mov
push
xchg
lock
clc
popa
add
ja
adc
sub
xor
inc
lods
rcrb
inc
fdivs
xchg
clc
inc
movsl
imul
push
out
call
in
aam
jl
push
or
scas
cmpsb
sbb
mov
testl
xchg
out
inc
push
nop
pop
pop
pop
pop
or
sub
aam
jl
lea
out
jnp
jnp
mov
mov
out
xor
push
movb
jmp
aaa
or
test
and
nop
pop
loop
add
sbbl
add
or
push
mov
xor
insl
and
mov
aaa
add
cltd
mov
sbbb
insl
push
nop
add
xchg
push
sbb
push
pop
or
mov
shlb
fistpll
add
xlat
lods
notb
test
cmpl
leave
push
test
dec
and
mov
idivb
push
inc
adc
adc
clc
inc
jbe
clc
dec
cmp
jl
fwait
jp
test
pop
call
jbe
fildll
add
adc
lods
jb
cmp
mov
inc
enter
push
in
mov
or
or
dec
add
add
add
roll
cld
adc
and
lods
jo
add
call
orb
mov
test
mov
ret
dec
stos
test
das
loope
sub
std
xchg
pusha
mov
cltd
loope
cs
test
out
sub
mov
or
inc
ret
dec
sbb
mov
xchg
test
sarb
fwait
or
negb
jbe
dec
int3
addb
inc
and
ss
popa
or
aam
push
add
jge
mov
add
add
push
mov
filds
add
mov
inc
push
mov
jle
jl
inc
dec
jl
loopne
mov
sub
mov
aam
test
pusha
cmp
sub
icebp
aam
scas
pop
dec
hlt
hlt
pop
mov
or
test
push
js
xchg
add
mov
sbbb
push
cmc
or
ror
cli
xor
add
popf
out
jo
mov
gs
push
enter
push
ds
leave
mov
rcr
xchg
dec
gs
nop
pop
test
je
nop
outsl
mov
lea
sbb
push
push
pop
cmp
into
mov
lock
or
mov
dec
xchg
jae
adc
js
fildl
cli
mov
add
xor
sar
cmp
inc
or
rolb
lock
loopne
jg
call
push
lock
in
xchg
inc
mov
cmc
sub
sbb
sub
dec
push
add
pusha
xor
fidivs
cmp
jp
or
testb
inc
pop
add
popa
jb
xor
jne
xchg
shll
inc
sar
dec
push
js
enter
cld
push
lock
sub
push
adc
into
les
loop
js
mov
xor
shlb
adc
push
add
or
lahf
adc
pushf
mov
aam
adc
sbb
or
test
nop
xor
jecxz
pop
add
add
inc
xor
test
and
inc
xchg
mov
cld
mov
scas
jmp
sbb
ret
loope
jne
cmp
js
push
adc
add
or
data16
inc
add
dec
inc
sub
jns
movb
clc
jnp
int
inc
scas
jge
push
pop
loopne
and
adcb
punpcklbw
pop
add
sbb
addl
push
jp
lock
pop
lcall
incl
decl
xchg
sub
mov
add
inc
sbb
call
rorb
or
dec
add
push
decl
sbb
rclb
add
push
inc
addr16
add
inc
dec
sub
mov
push
cwtl
dec
ret
mov
fmuls
add
adc
mov
icebp
sbb
sbb
add
or
insb
adc
fcoms
loopne
rcrb
xchg
cmp
mov
daa
push
push
mov
inc
jle
mov
add
cmp
imul
or
push
xor
xor
repz
or
mov
inc
jmp
add
mov
stc
lret
leave
mov
clc
add
pop
das
mov
ljmp
mov
mov
mov
cmpsb
push
mov
mov
out
push
mov
sub
add
pusha
cmpb
dec
loopne
insl
sub
mov
sahf
ret
adc
mov
fstl
inc
mov
push
cltd
out
leave
xchg
mov
pop
in
cmp
cmp
les
push
ret
cmp
rcll
push
stos
cmp
or
pop
push
sub
push
jmp
sub
pop
hlt
out
popa
addr16
sub
pop
jbe
ljmp
sbb
add
jbe
dec
xor
rcl
and
push
enter
in
jmp
js
mov
mov
xor
stos
sahf
sbb
loope
int
mov
sarl
rolb
adc
adc
sbb
xor
popl
pop
dec
dec
xchg
pop
outsl
fmull
pushf
nop
inc
pop
push
cmp
mov
mov
cltd
push
dec
int3
fdivr
mov
fidivrl
cwtl
loop
dec
loopne
mov
jle
pop
pop
push
cltd
inc
or
sub
cmp
je
dec
das
lods
jo
cmp
sbb
push
and
std
adc
inc
lcall
movsb
aas
mov
outsb
mov
in
fwait
jb
and
dec
add
idivb
testl
or
dec
fcmovb
frstor
imulb
dec
add
or
repnz
adc
pop
push
mov
adc
fisttpl
push
cld
add
fmull
fmuls
cmp
dec
fsubrs
and
adc
decb
jl
and
add
add
sbb
test
jbe
add
in
cltd
out
nop
inc
adc
xor
add
mov
aaa
add
mov
xchg
cmp
inc
nop
push
pushf
inc
inc
cld
sbb
call
lock
fcomps
add
add
xor
inc
lock
ss
orb
adc
movsb
add
test
or
xchg
add
es
mov
mov
and
or
aaa
pop
pop
push
sti
mov
ds
call
sbb
inc
roll
sti
cmc
imul
es
sub
adc
and
sbb
add
je
sub
push
ret
or
lcall
inc
movsl
test
cmpsl
cmpsl
cmp
cltd
sbb
inc
cmpsb
ret
dec
push
call
btrl
sub
dec
push
fwait
sub
inc
and
test
adcb
adc
das
in
adc
out
outsl
lea
pushf
and
lock
push
test
clc
lods
sub
add
cwtl
add
mov
mov
pop
cmp
ret
adc
sarb
nop
addb
dec
mov
stc
dec
iret
pop
mov
xacquire
xchg
push
push
call
inc
data16
js
hlt
mov
pop
aaa
mov
cwtl
ss
xchg
iret
pop
insb
cmc
sbb
cmp
inc
sub
mov
mov
or
shl
jae
add
jl
psubusb
popa
clc
ja
out
inc
or
adc
inc
cmc
push
or
and
loopne
ret
out
inc
add
sti
jae
repz
cmp
movsb
cld
xor
cmp
mov
jl
and
loopne
jg
adc
mov
cmpsl
push
add
into
cmp
pop
fcompl
je
jo
adc
add
push
add
xor
pusha
sub
xlat
xor
jmp
lods
mov
cmp
roll
adc
adc
sahf
rorb
jne
dec
js
adc
inc
xor
pop
pop
xor
pusha
jnp
xchg
dec
sbb
pop
xor
sbb
lahf
pop
call
ret
in
inc
inc
xor
sbb
add
adc
jmp
mov
ljmp
and
hlt
inc
int3
or
push
and
adc
test
lea
push
dec
push
dec
fwait
dec
cmp
into
sub
sbb
jae
inc
sbb
xchg
shlb
dec
mov
xchg
fidivs
adc
and
dec
aam
adc
xor
or
inc
adc
rcrl
test
pop
daa
push
xor
add
outsl
clc
mov
popa
and
sub
shl
or
std
or
mov
rorb
pop
inc
and
sub
add
jmp
js
pusha
orl
sarb
notb
or
push
nop
jge
mov
mov
xchg
mov
xor
cmpsl
push
nop
scas
cmp
add
push
pop
or
or
pop
incl
dec
push
nop
test
pop
adc
mov
shll
popa
in
xor
nop
push
sbb
adc
dec
inc
push
mov
or
fimull
jbe
pop
adcb
sar
jne
adc
add
das
push
scas
adc
rorl
pusha
fsubr
pop
sbb
inc
js
cmp
mov
and
movsb
lahf
add
xchg
xor
add
mov
pop
adc
fmuls
cmpl
xor
and
and
int3
jo
lea
cmp
pminub
fildl
cmp
lahf
nop
mov
push
adc
mov
adc
jp,pt
fisttpll
mov
arpl
hlt
xor
push
nop
or
adc
cmp
jo
xchg
test
mov
pop
aad
push
push
inc
xchg
lret
add
sbb
fcoms
add
push
stc
fsts
fisttpl
movsb
movsl
outsb
or
mov
inc
pop
jle
sub
sbb
js
mov
or
jo
or
pop
lock
push
sbb
incl
dec
pop
decl
push
imul
pusha
pop
cwtl
pop
adc
mov
jae
shrl
dec
add
pop
adc
adc
xchg
or
push
dec
out
inc
sbb
add
leave
xor
or
pusha
xchg
jo
push
push
pop
es
test
mov
lock
xchg
add
or
adc
fistps
movsb
rcrb
pop
mov
dec
push
shlb
sub
movd
mov
mov
adc
out
pop
add
inc
sar
loop
mov
add
dec
mov
pop
andb
mov
add
movsl
and
add
es
adc
and
inc
jmp
mov
and
insl
andb
inc
scas
and
inc
arpl
das
mov
cmpl
js
testl
popa
cmpl
rorb
or
pop
jp
subl
ljmp
jne
jl
sahf
mov
lock
inc
mov
mov
rcl
aaa
cmpb
icebp
fimuls
and
dec
add
inc
sub
or
rcrl
sbb
gs
jo
lea
xor
xchg
xor
jne
dec
gs
fimuls
and
negl
rcrl
out
std
test
xchg
mov
ret
sti
popf
in
out
jle
jecxz
inc
add
xor
repz
jbe
dec
xchg
and
dec
cwtl
push
jae
bswap
mov
out
jg
faddl
jle
mov
lods
inc
daa
add
aad
call
rolb
jle
pop
add
fwait
ret
sbb
scas
mov
add
push
fistps
jnp
fwait
xor
sbbb
je
cmpw
add
pop
rol
lods
stc
scas
in
mov
sbb
fsts
inc
xchg
dec
imul
jp
inc
loopne
jae
out
or
cmp
add
xchg
sub
mov
sbb
imul
scas
roll
push
xor
dec
ja
shl
inc
int
aaa
xchg
or
in
xchg
xchg
js
sub
js
dec
inc
dec
popa
dec
test
sbb
hlt
inc
pusha
jno
inc
mov
pop
inc
loop
add
es
flds
mov
fisttpl
or
jbe
jno
jo
pop
dec
lcall
and
clc
pop
mov
xchg
roll
sbb
xchg
aaa
insb
enter
js
mov
fiaddl
sub
cmpsb
sbb
sub
adc
cmpsb
inc
loopne
add
xlat
fadds
pop
sub
cmp
or
fwait
sub
inc
cmp
or
push
or
add
or
inc
or
or
adc
adc
xchg
xchg
xor
mov
incl
pop
jmp
mov
inc
sub
rcll
mov
roll
dec
jg
adc
ret
wbinvd
mov
ss
sbb
lds
and
js
pop
sbb
mov
cwtl
push
ja
push
or
cld
ret
add
rorl
mov
fcoml
movsb
adc
jb
cmp
mov
mov
outsb
adcb
inc
xchg
scas
and
sub
insl
addr16
push
sbb
je
in
leave
cmp
xor
sub
add
movsb
xor
push
lea
push
add
cmc
jo
add
dec
inc
rol
adc
cmp
jle
inc
inc
andb
inc
cmp
mov
je
xchg
cmp
sub
or
mov
inc
cmp
inc
icebp
add
inc
cmpb
jge
jne
adc
aaa
lea
nop
nop
rcrb
or
leave
movsb
push
xchg
sub
pusha
mov
and
lahf
and
push
or
and
lea
js
adc
push
jl
in
pop
adc
aam
pushf
les
push
or
mov
or
arpl
inc
repz
adc
add
cmpsl
cmc
inc
xor
mov
pop
push
mov
inc
push
ret
add
sbb
stos
mov
cmp
cmc
push
push
mov
fildl
sub
sub
pop
ret
pop
ret
dec
xchg
in
add
data16
jge
neg
call
test
sub
mov
decb
sub
fadd
mov
arpl
test
fistpl
push
xor
mull
mov
mov
cmp
shll
in
iret
adc
pop
add
les
inc
dec
jb
sti
wrmsr
pop
jbe
jle
into
lock
shlb
or
lock
jmp
dec
jg
jne
sbb
dec
push
stos
jmp
addr16
push
adc
scas
add
and
xchg
gs
inc
inc
dec
push
sub
push
aam
dec
adc
cmp
lea
loope
shlb
jno
xchg
inc
aas
ja
adc
sub
rcl
aad
adc
or
jns
in
stos
aas
jb
cs
fnstcw
outsl
aam
mov
adc
mov
or
pop
scas
and
sub
and
cwtl
rolb
imul
jb
js
xchg
divl
mov
lea
cmp
mov
das
adc
push
and
inc
add
and
mov
sbb
mov
sbb
pop
xchg
test
ret
jge
and
or
arpl
jbe
pop
xchg
inc
and
xchg
xchg
add
xor
dec
sub
sub
cwtl
add
adc
repnz
movsb
cs
imul
pop
sub
mov
jle
fnop
fsubs
or
ret
push
lea
addb
jo
add
sub
js
pop
sti
inc
or
add
push
movsl
sub
sub
and
adc
mov
cmpsb
ds
dec
dec
add
das
cmp
push
incl
or
popf
mov
xlat
add
jne
hlt
lret
or
xchg
mov
stos
jl
or
sub
loope
rcpps
call
mov
aaa
je
dec
and
inc
inc
and
mov
pop
mov
lea
sbb
push
push
push
ret
test
sub
test
dec
cli
outsb
shll
jecxz
inc
cmp
adc
adcb
inc
dec
lock
test
lfs
sbb
xchg
sbb
adc
or
enter
pop
dec
orb
and
push
loopne
inc
testl
pop
inc
pusha
cld
jns
aad
cmp
leave
out
push
movl
mov
sbb
or
mov
loopne
stc
jl
js
ret
push
xor
jle
or
xchg
xor
push
ret
je
outsl
ret
and
mov
shl
jl
dec
js
clc
movsl
pop
dec
xchg
add
imul
sub
rorl
mov
loop
out
mov
cltd
lret
jbe
cmp
push
mov
ret
test
sub
pop
mov
jle
lock
and
dec
incb
adc
adc
sarb
test
test
sbb
add
es
addb
incb
aaa
or
add
dec
cs
fmull
or
jg
rcrb
dec
cmpb
adc
cmp
sbb
adc
mov
mov
ljmp
add
movsl
adc
pop
jne
enter
cmp
aam
push
inc
inc
sarb
inc
movsb
and
dec
xchg
movsl
adc
test
or
inc
mov
fmul
xor
lds
adc
cltd
and
jl
or
fnsave
add
sahf
add
sub
cmp
and
movsb
push
cs
mov
pusha
addr16
push
andl
popa
dec
pop
leave
stos
pusha
stos
pop
push
xchg
out
cltd
stc
xor
add
pop
or
call
sbb
sub
dec
mov
cmp
test
push
sbb
jbe
xchg
dec
add
dec
adc
scas
pop
push
jp
mov
dec
loopne
or
outsb
mov
cmp
add
ds
scas
cmpb
or
adc
mov
push
in
add
push
out
ds
sbb
sti
sahf
sub
scas
cld
push
les
push
jo
imull
and
push
in
es
fs
iret
mov
ds
cmp
cmc
add
sub
arpl
pop
and
adc
ds
lock
iret
add
dec
or
iret
xor
mov
and
and
adc
push
fldt
sub
lahf
frstor
fstpl
fisttpll
stos
pop
call
stos
add
outsl
aas
or
fsubl
outsb
sub
inc
add
cmp
mov
pop
dec
jno
subl
inc
mov
mov
mov
dec
nop
fwait
hlt
mov
push
adc
shlb
mov
call
sub
fucom
adc
adc
push
iret
pop
sbb
lods
push
jbe
mov
imulb
or
xchg
mov
mov
add
xor
imul
xor
cltd
cmpsb
add
pop
xor
inc
xor
dec
movsl
dec
xchg
push
xor
sub
imul
leave
decl
pop
cmp
pushf
dec
push
mov
adc
sahf
add
sbb
pusha
sub
jnp
xchg
mov
dec
dec
jns
xor
push
fdivs
out
dec
ficompl
sbb
xchg
push
push
pop
in
test
pop
std
jge
pusha
pop
imul
test
inc
pop
push
or
dec
or
das
push
inc
fadds
std
shl
das
push
mov
enter
push
testl
push
and
mov
sub
dec
popf
jp
dec
ss
inc
xchg
sbb
push
jo
jo
sbb
jo
out
roll
dec
mov
inc
sbb
inc
add
or
stc
rorl
and
rcr
inc
adc
andb
mov
pop
shll
loop
repnz
iret
mov
subl
fistl
jle
mov
sub
je
rclb
jbe
cli
sub
mov
enter
xchg
je
jno
lea
add
mov
push
and
sub
sub
mov
and
neg
jns
add
sbb
stos
mov
add
push
adc
jbe
dec
gs
je
jo
mov
insl
jge
andl
jge
popf
xchg
jne
pop
sbb
and
fdivs
sbb
cmp
cld
push
shrb
dec
cmp
mull
inc
xor
xor
sbb
hlt
mov
mov
shlb
add
and
inc
cmp
imul
in
push
cmp
and
leave
in
jecxz
outsl
xchg
iret
pop
das
cld
mov
pushf
or
lret
aaa
mov
mov
jbe
adc
ljmp
inc
addl
adc
movsb
and
sub
xchg
adc
cpuid
jb
sbb
push
xchg
sbb
mov
push
xor
icebp
push
cs
add
sbb
adc
cmp
int
std
add
pushf
fstl
push
cltd
xor
das
or
adc
mov
mov
inc
cmp
enter
cmp
je
jbe
mov
dec
dec
test
movsl
js
in
push
sbb
clc
ss
std
or
push
je
and
rorb
mov
inc
pusha
xchg
sub
and
sbb
or
clc
fstps
cmpsl
xor
fisttps
push
and
fiadds
or
jnp
sub
cmp
pop
and
and
and
test
adc
jle
push
add
nop
xchg
xor
and
mulb
pop
cmpsl
movsb
push
sub
dec
pusha
ja
leave
sub
ret
and
or
dec
dec
inc
out
inc
fldenv
jmp
cmp
outsl
ficompl
pop
add
xchg
or
jne
loopne
ss
or
lret
xchg
pop
sub
sub
fdivs
and
shrb
and
imul
subl
or
fisttps
lods
nop
jle
jo
gs
nop
push
mov
hlt
orb
lret
add
jge
fcoml
cmp
test
icebp
xchg
and
mov
or
sahf
inc
push
push
cmpsb
test
and
aaa
xadd
notl
insl
sub
mov
bound
rcll
or
cmpsl
lock
loope
mov
je
xchg
adc
mov
dec
push
das
leave
sub
mov
add
add
add
pop
adc
movsb
ret
ja
inc
inc
xchg
and
xchg
xor
xchg
jbe
or
imul
jne
movzwl
dec
or
movsl
sub
add
lea
lea
movb
mov
or
cmp
mov
ret
sbb
xchg
lea
mov
add
add
fsubrs
rcll
mov
test
jno
xor
jae
add
push
add
mov
sarl
jl
mov
pop
sub
out
outsb
in
mov
dec
adc
dec
add
push
lea
dec
lock
push
push
push
mov
push
std
push
in
rorl
pop
cmpsl
sub
ficompl
add
scas
stos
lret
das
jle
rcrb
pusha
lea
sbb
push
sub
addr16
and
xchg
dec
outsl
inc
stos
out
cmpsb
or
cmc
add
ss
mov
dec
jmp
fwait
mov
aas
jmp
adc
lea
shlb
push
cltd
inc
divb
sti
or
test
outsb
cmpsb
mov
sbb
dec
or
sub
and
sub
adc
cmpsl
dec
or
xor
sub
jbe
pushf
xor
aaa
mov
sbb
adc
add
push
cmpsl
loope
shr
xchg
push
jge
or
jl
xchg
mov
ret
dec
imul
sbb
shll
cmp
and
jge
aad
mov
jnp
add
inc
jmp
orl
push
add
pushf
ficompl
xor
sahf
add
fisttpll
fdivr
test
into
test
pop
sub
or
mov
jl
adc
sti
mov
push
rol
and
out
sub
insb
inc
enter
dec
out
adc
inc
xor
out
test
inc
es
push
mov
shll
or
addl
mov
sbb
pop
add
or
push
enter
or
popa
xor
lods
cwtl
add
sarl
and
test
movsb
fdivr
add
mov
ret
testl
pop
jmp
negl
add
cmp
mov
ret
imul
mov
lcall
lods
add
mov
jg
sbb
loop
pop
sub
in
aaa
lds
and
int3
adc
and
xor
pusha
imul
mov
dec
cmp
add
push
add
cmp
rolb
mov
push
push
movsl
ret
pop
and
mov
jae
lods
push
push
jo
jl
xor
pop
pop
cmp
pusha
test
mov
add
xlat
cld
or
mov
fld
dec
xchg
imul
push
adc
fadds
jmp
jmp
push
sbb
jne
xchg
push
sub
loope
imul
jge
dec
inc
test
ret
or
add
movsb
xchg
push
or
push
mov
dec
inc
faddl
fimuls
je
cwtl
enter
aaa
mov
inc
adc
pop
fcomps
sbb
add
cmc
enter
push
loopne
inc
xchg
ffreep
dec
sbb
add
xlat
mov
xchg
and
inc
pop
decl
iret
jmp
add
mov
or
add
cmpsb
cmp
mov
xor
sbbb
das
cmp
xchg
add
and
lock
and
inc
clc
add
pop
aas
test
and
add
cltd
mull
test
xor
loope
and
mov
adc
cmp
push
imul
rorb
dec
fcoms
xor
mov
dec
inc
push
adc
test
mov
mov
cmp
lahf
lea
sahf
stos
mov
sub
dec
and
xor
jns
inc
push
pusha
jo
push
fildll
fsubr
fstps
in
pop
fidivl
or
orl
mov
stos
lock
or
push
push
or
in
outsl
data16
cwtl
xchg
cld
filds
fmuls
adc
inc
fmuls
ja
hlt
pusha
shl
ficoml
aaa
fadds
adc
fsubs
clc
mov
dec
imul
shlb
fmuls
jae
xor
aam
adc
mov
jl
aam
adc
xor
jge
adc
and
in
xor
lcall
push
in
imul
in
adc
sahf
dec
mov
loopne
clc
lcall
mov
adc
sbb
mov
shrl
flds
gs
sbb
mov
loope
and
cmpsb
mov
clc
push
jns
cmpsl
in
in
call
out
in
cld
sbb
inc
fwait
iret
insl
push
pop
inc
or
pop
fwait
sbbl
pop
inc
adc
ret
rcrl
xorb
push
sub
std
add
push
xchg
or
xchg
sub
mov
loopne
imul
jl
arpl
test
sub
arpl
repz
imul
arpl
and
or
les
lahf
pop
movb
xchg
xchg
ljmp
sbbl
or
mov
mov
pop
dec
pop
in
add
test
aaa
cmp
add
push
sbb
mov
mov
and
inc
dec
mov
incl
cmp
mov
pop
sub
aam
mov
jne
bound
out
daa
rcrb
jbe
jns
insl
shrl
jmp
dec
sbb
bound
adc
inc
int3
adc
je
inc
cmp
mov
int
cmp
dec
dec
dec
dec
dec
cmp
or
data16
sub
dec
jae
in
pop
and
pusha
mov
cmpb
adc
jne
jns
jmp
push
rcrb
sbb
inc
mov
pusha
mov
push
adcb
add
and
stos
in
sbb
jge
sub
scas
sub
imulb
decb
add
sbb
popa
lods
mov
lock
mov
push
sub
mov
adc
mov
sbb
xor
mov
insb
push
mov
mov
and
lahf
sub
fdivl
sub
dec
add
cmpl
fdiv
mov
shrl
sub
push
es
imul
push
cmp
pop
add
push
sar
dec
sti
rcrl
push
fs
pop
mov
daa
adc
faddl
outsb
lahf
add
add
aam
sub
sbb
nop
shl
add
mov
push
sub
lahf
fidivs
mov
movsl
and
add
and
push
sub
dec
in
loopne
add
adc
push
sub
sti
mov
jl
pop
pushf
scas
push
and
aas
sbb
or
faddp
or
lods
add
adc
push
push
adc
sbb
or
stos
adc
subl
lcall
add
jp
into
and
jo
sbb
ficoms
push
incb
nop
pop
push
add
jo
add
pop
push
es
add
ret
data16
icebp
sub
incb
pop
or
add
sbb
jno
dec
adc
enter
insb
add
cmp
jae
sub
pop
in
adc
sub
adc
push
dec
sub
sub
push
xchg
loope
sbb
je
out
or
or
rol
sub
xor
orl
es
popa
lcall
dec
add
jns
mov
or
sbb
sbb
pusha
jo
inc
cwtl
add
inc
and
xchg
scas
es
nop
nop
nop
jne
mov
aam
sbb
push
test
fnstenv
outsl
push
pusha
lods
xchg
sarb
ret
jb
pop
cltd
add
ficomps
test
movb
aam
add
pop
dec
fimull
jb
adc
mov
or
sub
les
mulb
inc
push
mov
cmpsb
mov
pop
mov
sbbb
or
push
adc
cmpsl
sbb
lcall
call
sub
jge
push
push
push
push
jo
xor
xor
insb
sub
push
fwait
dec
xor
pusha
dec
jb
jb
lods
fidivs
aam
xor
mov
push
pushl
fistpll
add
imul
jge
mov
adc
clc
mov
call
ja
sbb
ret
out
in
lods
pushf
or
fcmovbe
gs
push
xlat
lea
push
clc
xlat
or
cltd
add
loopne
repz
add
mov
or
lods
pop
adc
clc
adc
or
sahf
loop
xchg
je
or
push
sub
scas
shll
jae
daa
push
and
and
ljmp
or
xchg
imul
cld
pop
shlb
pusha
call
xorb
enter
push
aaa
jge
inc
sub
pusha
add
fiaddl
cmpsb
mov
shrb
and
adc
adc
jo
jo
int3
jno
clc
push
mov
adc
jl
adc
or
add
add
sub
shlb
lods
mov
outsl
lcall
adcl
adc
rol
out
jbe
in
mov
movsl
pop
lea
sub
test
or
ljmp
movl
or
flds
add
adc
mov
cmp
je
sub
push
pop
jl
sarl
add
adc
push
aas
adc
mov
mov
insb
adc
add
add
call
sti
sbb
sub
inc
shlb
cmp
and
push
test
inc
std
push
add
mov
or
enter
fucomip
pop
pop
xchg
or
orb
xchg
sub
lods
dec
flds
in
enter
std
mov
mov
insb
add
movsl
daa
mov
nop
les
pop
mov
dec
mov
jle
add
mov
sahf
pop
icebp
add
sbb
icebp
sub
add
jno
icebp
adc
lret
sub
call
adc
sti
push
push
sub
and
mov
adc
mov
jns
add
inc
sbb
ljmp
mov
xlat
and
cmp
adc
pop
outsb
out
in
js
lcall
add
or
out
jmp
pop
pop
add
fisttpll
push
sub
add
addb
nopl
sarl
dec
sti
inc
mov
lret
or
push
mov
insl
mov
push
imul
xchg
jmp
fisubrs
pop
or
shrl
addr16
imul
into
add
push
or
loopne
sub
fucomp
lea
mov
or
adc
xchg
push
mov
inc
cld
xchg
and
lea
rolb
sarl
jo
or
mov
fisttpl
dec
roll
sbb
mov
add
adc
or
or
add
add
loop
out
cmp
popa
shrb
xor
lcall
adc
inc
mov
decl
dec
sbb
jge
xor
stos
gs
test
mov
sub
fadds
arpl
test
ret
sub
test
sbb
iret
adc
inc
loope
mov
loope
movsb
test
adc
jb
inc
mov
out
andb
inc
jo
aaa
mov
inc
or
lret
and
inc
psubsw
add
and
bound
call
adc
lret
xchg
xchg
cs
fisubrl
xlat
dec
cwtl
lock
add
inc
add
add
in
sub
test
push
nop
inc
xchg
xchg
push
dec
syscall
imul
adc
out
mov
inc
adc
pop
cmp
add
pop
or
pop
ja
leave
sub
int3
jp
hlt
pop
and
sub
adc
and
ds
jge
jnp
adc
mov
add
sar
cmp
cmpsb
xchg
adc
jmp
dec
mov
and
je
hlt
mov
fs
les
mov
jo
mov
lret
mov
into
dec
xchg
adc
sbb
ret
bnd
pop
push
adc
xor
push
cmp
ret
inc
or
and
mov
iret
xor
add
dec
in
xor
inc
cmpl
mov
scas
pop
xor
shll
insl
mov
addl
adc
jns
stc
jno
add
xlat
sbb
fs
jecxz
mov
fcmovnu
add
inc
sbb
enter
push
enter
and
push
pop
sbb
add
sbb
or
or
es
push
popa
dec
in
or
push
cmp
js
cmp
xor
fs
in
sahf
inc
repnz
push
and
jge
jbe
sub
and
sbb
fs
adc
mov
sub
cmp
scas
fcmovnu
push
inc
push
pop
or
push
sbb
adc
rcrb
outsb
jnp
sbb
sbb
lods
sub
popl
add
icebp
inc
and
sbb
daa
and
cmp
and
cmp
cmp
inc
fs
cs
in
into
dec
jle
adc
fs
inc
mov
adc
mov
test
and
adc
movq
repz
rcrb
mov
dec
cmp
adc
pusha
addb
sbb
sbb
lcall
push
lcall
lcall
and
nop
clc
je
cmp
stc
out
push
xor
ds
or
pop
outsl
addr16
fsubrs
add
jp
adc
add
mov
iret
outsb
push
add
sub
scas
cmp
pop
out
xchg
adc
cs
adc
dec
jb
xor
or
mov
inc
dec
clc
clc
mov
pusha
pop
call
jl
pusha
test
pushf
jl
mov
push
cmp
cmp
les
insb
fbld
and
int3
xor
mov
cwtl
or
in
lods
mov
mov
mov
cs
lret
int3
rcl
fcomp
lret
in
mov
xchg
scas
repnz
sbb
and
and
jb
pop
cs
xor
cs
lret
in
inc
inc
dec
dec
in
mov
pop
pop
cs
lret
pusha
fs
jb
je
jl
mov
mov
jb
pushf
mov
pop
lods
mov
mov
mov
in
mov
fcompl
lret
loopne
call
jb
hlt
clc
cld
add
cs
dec
add
or
adc
in
mov
mov
sub
xor
xchg
lret
in
cmp
inc
dec
dec
jb
pop
cs
push
pop
pop
cs
lret
in
fs
mov
sbbb
test
in
mov
mov
lods
mov
mov
mov
jb
pop
cs
fcomp
cs
lret
in
in
in
lock
pop
hlt
clc
cld
add
xchg
lret
movsl
add
or
adc
jb
pop
sbb
and
cs
lret
sub
xor
bnd
mov
sbb
lret
in
enter
jb
pop
aam
fsub
pop
cs
lret
in
in
lock
movsl
bnd
clc
cld
add
pop
cs
lret
or
js
lret
in
mov
mov
xchg
cwtl
pushf
mov
movsb
test
mov
jb
pop
cs
ret
lret
in
int3
rolb
mov
mov
call
lret
in
clc
cld
add
jb
pop
or
adc
xchg
lret
in
sbb
and
in
mov
cmp
lret
cmp
inc
dec
dec
lret
in
mov
mov
fs
in
je
jl
test
pop
mov
in
pushf
mov
mov
mov
mov
lret
in
mov
lret
enter
dec
pmuludq
clc
dec
in
mov
mov
lret
enter
lret
in
mov
mov
in
lock
clc
lret
movsl
bnd
add
or
adc
sbb
lret
in
and
sub
jb
pop
cs
cmp
cs
lret
in
dec
dec
push
push
in
mov
fs
cs
lret
push
lret
in
mov
mov
nop
xchg
cwtl
pushf
xchg
lret
in
mov
jb
pop
cs
mov
in
enter
in
mov
in
cs
lret
call
in
jns
cld
add
or
lret
or
adc
sbb
in
mov
mov
xor
cmp
xchg
lret
in
inc
dec
dec
push
push
jb
pop
cs
pop
pusha
fs
lret
in
insb
jo
js
jb
pop
jl
test
mov
in
mov
mov
mov
mov
jb
enter
jb
pop
cs
loopne
cs
lret
in
in
lock
clc
jb
mov
add
cs
lret
in
adc
sbb
jb
pop
and
sub
cs
lret
xor
cmp
lret
in
mov
mov
dec
pop
jo
cwtl
sub
pop
movsb
test
mov
mov
or
out
jnp
adc
and
sbb
add
and
and
push
or
cmp
shlb
outsl
add
sub
fmull
xchg
aam
aas
aas
aas
sub
add
mov
and
or
or
or
lock
sar
repz
test
add
clc
inc
inc
mov
repz
inc
xor
inc
sbb
out
pushf
cltd
inc
xor
and
jne
push
inc
jo
pop
pop
stc
scas
cmp
inc
and
sbb
or
imul
push
dec
mov
sti
mov
inc
shrb
out
notl
lods
or
das
pop
cmpsl
out
in
add
xchg
push
push
jbe
frstor
adc
dec
fldt
or
loopne
adc
pop
cld
mov
push
push
int3
pop
roll
add
pop
je
idivl
xorl
mov
sub
mov
add
mov
addl
or
push
mov
repz
jl
or
subb
enter
push
stc
pop
add
pusha
mov
pop
push
mov
mov
fs
jo
sub
pop
movsl
bound
les
xchg
lret
mov
add
fsubr
jns
pop
sub
in
dec
in
push
sbb
rorb
xor
cs
or
in
imul
ja
in
mov
sbb
xchg
dec
in
sarl
cmp
test
push
sub
xlat
dec
in
push
pop
sub
adc
xchg
xchg
lret
mov
sbb
cwtl
icebp
jb
pop
and
and
add
cmp
inc
dec
in
jecxz
lret
in
jns
and
cs
inc
push
xchg
push
jb
cwtl
or
mov
xlat
mov
ret
dec
dec
and
sub
fwait
xor
add
outsl
jnp
scas
sbb
sub
pop
and
or
ss
mov
push
dec
mov
inc
insl
mov
mov
mov
mov
add
enter
push
pop
adc
push
scas
jecxz
insl
arpl
mov
xlat
dec
jo
jb
daa
nop
cld
sbbb
das
das
and
pusha
push
inc
pop
sbbb
fsub
jmp
add
add
mov
rorb
daa
andb
jno
imul
mov
add
and
jne
jo
loope
pop
aaa
sub
push
xor
je
push
or
sub
dec
pop
adc
out
add
and
pop
fcoml
dec
daa
bswap
rcrb
cmp
add
lock
xor
fs
and
and
jo
idiv
ret
xor
xor
xor
pop
sub
jbe
fwait
jle
outsl
mov
scas
std
push
testl
clc
ret
repnz
fists
fidivl
jne
push
outsb
dec
sti
ss
inc
bound
and
imul
leave
jb
add
pop
push
lods
mov
or
jbe
sub
inc
dec
gs
and
hlt
lret
and
fs
mov
xor
fidivrl
fcmovbe
rcl
jle
arpl
inc
jb
and
or
xchg
sub
data16
push
push
add
test
jne
sahf
shrl
jae
fidivs
mov
inc
jecxz
add
or
or
insl
outsl
jbe
mov
popa
enter
push
inc
daa
mov
pop
and
sub
cltd
jl
pop
pop
arpl
fistl
jp
and
int
sub
aad
cmp
or
inc
insb
sub
or
jb
jne
outsb
and
sbb
sub
mov
stc
xorl
cmp
and
subl
fbld
dec
jae
into
mov
cmpl
jnp
pusha
adc
jnp
pop
sub
cwtl
fdivrs
insl
data16
jae
and
sbb
inc
mov
mov
and
and
jns
fisubrl
adc
data16
xor
mov
push
and
xchg
mov
mov
and
sbb
or
enter
jb
and
je
je
popa
jb
dec
sub
push
push
and
sahf
popa
jns
xor
mov
jae
push
pop
add
mov
add
popf
cmp
jl
arpl
inc
and
popa
jne
outsl
and
and
sbb
imul
ficoml
xchg
popf
fadd
push
cmp
sbb
cmovge
inc
sbb
adc
jae
and
push
es
scas
jbe
bound
xor
incl
mov
cli
ret
sti
lret
mov
cmpsl
adc
je
dec
push
push
les
fistpll
pop
mov
pop
and
iret
aam
mov
mov
out
lret
mov
mov
aad
stos
adc
mov
jge
lret
mov
jp
mov
int
lret
in
adc
mov
out
adc
sbb
sahf
std
stc
enter
xlat
mov
loopne
push
mov
push
inc
in
add
push
repz
push
mov
sbb
push
inc
sub
repz
sub
dec
inc
adc
repnz
mov
iret
mov
mov
popa
or
cld
push
and
lret
and
aaa
mov
lea
nop
cltd
jns
mov
pop
testb
aad
test
lahf
and
mov
pop
xorb
popf
ret
fbld
pmulhw
ss
pop
dec
insl
jno
loope
pop
mov
testl
insb
jae
xchg
sub
sub
bound
imul
and
add
pusha
or
xor
es
addb
bound
add
dec
imul
dec
mov
push
and
mov
mov
or
and
ficompl
lods
fsubrs
jae
jne
push
add
xchg
ja
inc
bound
jnp
mov
daa
adc
jbe
addb
xor
test
lahf
inc
fimull
pop
xchg
sub
and
sbb
sar
addr16
sbb
mov
into
push
push
fs
ret
xor
jne
mov
push
and
sbb
arpl
jae
addb
xor
das
sub
inc
in
das
mov
js
sub
inc
mov
jo
mov
push
dec
dec
push
push
je,pn
aam
or
data16
mov
sbb
or
jmp
aam
scas
leave
iret
iret
filds
inc
inc
xorl
rcrl
dec
jmp
dec
push
lret
add
js
pop
int3
or
stc
je
push
inc
mov
dec
push
test
push
test
add
pop
inc
les
divb
pop
ret
push
dec
xchg
push
sahf
or
mov
lods
or
insb
je
jbe
jl
push
popa
idivb
jae
or
pop
fsubrs
add
jo
adc
jge
leave
bnd
or
insl
push
mov
pushf
test
push
cmpsb
xor
dec
loope
mov
sbb
mov
add
fbld
dec
fsubs
sub
mov
das
cs
mov
add
fs
jg
jmp
lret
mov
flds
mov
lahf
lahf
pop
clc
popa
mov
aas
hlt
pop
cs
call
dec
loopne
fcompl
fdivs
es
dec
repnz
dec
int3
fisubrs
addr16
and
in
dec
sahf
add
lods
int3
lods
pop
mov
das
int3
add
sbb
addr16
lods
xchg
aaa
leave
dec
pusha
push
push
adc
sbb
jo
pop
rol
xchg
dec
shl
inc
cmp
cmp
data16
mov
popa
fcomip
pop
xchg
or
in
adc
cmp
inc
xchg
js
pop
xor
push
daa
dec
mov
dec
ss
add
cmp
mov
cmp
pop
jb
loopne
pop
fwait
push
insb
sahf
add
sub
xchg
arpl
lock
xchg
pop
add
add
out
sahf
das
and
movsb
and
addr16
nop
pop
add
mov
inc
dec
mov
bound
cmp
sbbl
divl
fbld
or
in
enter
aas
aam
jo
pop
int3
enter
ret
cmp
dec
sarb
aas
mov
nop
popa
pop
imul
pop
mov
mov
pop
cwtl
xchg
aas
nop
or
mov
cmpb
or
nop
or
mov
pusha
pop
xlat
scas
loope
pop
xlat
push
pop
push
pop
mov
dec
pop
inc
and
jb
inc
cmp
imul
cmp
xor
dec
push
mov
sub
pop
xor
sub
and
test
sbb
in
ficoml
pop
or
les
add
adc
inc
cs
add
pop
xor
das
cld
clc
hlt
popa
and
aam
sbb
xchg
in
call
js
pop
loopne
xlat
mov
pop
ror
pop
jb
or
aas
sarb
pop
mov
fadds
mov
mov
in
in
nop
pop
fsubrs
repnz
sbb
cs
jo
aas
nop
or
pop
mov
push
push
or
nop
or
mov
xor
or
nop
or
mov
adc
in
mov
or
cmp
or
add
std
and
hlt
lock
enter
dec
enter
aam
int3
enter
enter
and
mov
pop
sbb
iret
push
lods
in
xchg
dec
scas
pop
test
mov
pop
pushf
aaa
cwtl
xchg
imul
mov
cs
push
or
inc
and
insb
and
pusha
imul
jg
cs
push
dec
dec
cs
cmp
cs
sub
in
dec
sub
test
pop
in
call
in
sbb
and
adc
leave
test
or
jb
jp
std
cmpsl
clc
cld
leave
lds
in
enter
call
xchg
pop
aam
pop
in
inc
cs
xchg
enter
xchg
les
rorb
cs
cs
lock
lods
cld
mull
fcoms
mov
mov
jbe
test
sbbb
push
scas
loopne
xlat
je
jo
and
sbb
pop
je
and
jb
insb
pop
push
jb
pop
pop
and
jb
push
push
jb
pop
jb
dec
inc
pop
jb
pop
inc
cmp
and
jb
xor
pop
enter
sub
pop
jb
and
and
jb
adc
cs
push
testl
nop
dec
add
sti
pop
mov
hlt
lock
cs
or
call
in
mov
push
in
cs
enter
mov
jbe,pn
pop
mov
mov
and
jb
movsb
pop
mov
jb
jle
sti
xchg
out
enter
pop
add
pushf
cmp
pop
push
push
add
pop
repnz
das
dec
pop
and
push
jb
mov
pushf
cmp
enter
sahf
dec
cmpsb
mov
adc
mov
ja
inc
push
pop
js
test
fmulp
ja
mov
mov
imul
jne
add
enter
cmp
clc
jbe
fildll
xchg
add
insb
sbb
sub
dec
cmp
in
fcompl
pop
js
iret
and
add
movl
leave
cld
or
sbb
mov
cmp
mov
je
or
movsb
mov
xlat
sahf
dec
pop
jb
or
in
mov
lock
sub
cmp
leave
and
insb
cmpsl
xor
pop
mov
push
add
pop
loopne
mov
mov
add
mov
mov
xor
pushf
pop
enter
pusha
pop
enter
jo
sbbb
xchg
dec
inc
nop
mov
mov
daa
pop
jb
jo
mov
dec
outsb
js
mov
cltd
fsubrs
and
shlb
leave
and
push
pusha
and
adcb
mov
rcrb
leave
and
mov
and
in
dec
cs
push
pusha
xchg
dec
cs
jbe
in
add
add
das
mov
xchg
pop
jb
js
enter
or
push
aas
jb
sbb
jns
es
je
das
mov
add
pushf
pop
jb
inc
test
or
leave
jae
aam
in
hlt
dec
cmpsb
jne
or
ss
push
sbb
xchg
pop
mov
js
and
xlat
cmpsb
loope
jbe
xchg
xor
jb
and
leave
and
inc
pop
enter
das
lods
or
mov
and
cmpsl
fcoml
and
pop
push
cld
xchg
pop
xor
or
pop
sbb
sub
es
cmp
fs
xchg
pop
mov
xchg
movsb
mov
sahf
imul
xchg
xchg
out
aam
in
hlt
dec
cs
testb
adc
cmp
iret
mov
fisubl
fs
jl
mov
cwtl
or
and
aam
repnz
add
leave
and
xor
xchg
pop
jb
pusha
jl
xchg
xchg
iret
mov
pushf
pop
lods
xchg
pop
cmp
mov
mov
cmp
in
pop
pop
cld
push
mov
jp
sub
in
dec
cmp
pop
in
dec
js,pn
movsb
xchg
dec
cs
das
mov
jnp
pop
jb
and
inc
jl
and
outsl
mov
ret
and
shrw
push
popa
pop
and
pushf
sub
add
imull
mov
add
xchg
popa
pop
jb
or
dec
enter
add
popa
aas
mov
sub
or
xor
pop
xchg
test
out
hlt
sub
repnz
mov
and
js
xchg
pop
jb
jo
push
and
adc
add
sub
test
out
pop
adc
sub
inc
aad
sub
lcall
xchg
popl
das
and
jbe
sbb
xlat
xchg
xchg
out
pop
mov
cs
loopne
and
pop
adc
xor
sub
mov
pop
test
jo
nop
ffree
nop
fucomi
inc
mov
mov
pop
rcrb
jnp
add
mov
test
dec
pop
cwtl
pop
sbb
add
int
pop
inc
pop
or
xchg
call
mov
jae
mov
sbb
dec
mov
insl
ljmp
daa
cs
daa
iret
mov
je
xchg
push
hlt
cmpsl
sbb
in
add
dec
pop
inc
mov
repnz
or
lds
pop
adc
pushf
popa
mov
ss
int3
and
or
das
clc
lock
nop
imul
inc
test
mov
ret
mov
mov
pop
enter
pop
push
push
lods
mov
push
aad
outsl
sbb
and
pop
pop
in
test
mov
push
mov
in
pop
fs
push
pop
push
enter
cs
rclb
je
outsl
popa
ds
in
pop
pop
mov
cmp
mov
pushf
in
dec
lods
mov
mov
xchg
dec
repnz
sbb
xchg
pop
jb
cmp
pop
insb
pop
jb
and
leave
and
leave
and
cld
xchg
dec
es
nop
sbb
dec
cs
cs
mov
mov
cs
cld
leave
and
sbb
and
dec
pop
xchg
pop
jb
insb
jl
pushf
pop
jb
and
leave
and
in
dec
pop
or
sbb
xchg
dec
cs
cs
cs
mov
dec
call
in
and
mov
fbstp
mov
fists
ja
cs
add
xlat
test
push
jecxz
mov
cltd
inc
int3
jo
mov
adc
out
in
les
and
cmpsl
movq
cwtl
xchg
in
repnz
and
test
test
es
iret
inc
int3
add
lock
dec
xor
dec
in
adc
xchg
inc
pusha
addr16
add
fs
adc
push
adc
ja
das
jl
adc
out
or
pop
adc
sub
test
scas
rolb
mov
and
scas
enter
add
scas
sbb
dec
nop
push
or
outsb
inc
inc
ret
aam
xor
adc
or
and
mov
xor
sub
pop
xchg
outsb
and
ret
sub
adc
pop
cmp
sub
push
or
xchg
xor
xor
and
jl
mov
call
in
push
shl
mov
shrl
xor
nop
das
test
sub
pop
insl
popa
xor
sbb
int3
jnp
sbb
push
adcb
xor
insb
mov
aam
outsl
add
push
daa
adc
sahf
fistps
pop
cli
xchg
and
dec
push
pusha
add
push
inc
mov
dec
push
ret
mov
and
sub
inc
mov
xchg
dec
jge
xor
mov
subb
dec
push
xor
adc
mov
push
sub
and
fistl
jl
test
mov
push
ss
stos
jne
out
jnp
or
jae
and
jg
cmp
or
cmp
dec
sub
call
daa
stos
or
add
andb
fcoms
and
scas
jne
mov
adc
push
cmp
mov
adc
movsl
bound
jbe
dec
sbb
cmc
or
push
sub
add
pop
sbb
cld
sbb
sbb
xchg
or
shrl
xor
pop
mov
pop
and
in
mov
or
xor
xlat
xor
shll
or
or
pop
or
xchg
or
mov
cmp
mov
sub
pop
mov
cmp
xor
fiadds
lds
inc
shrb
adc
fists
mov
adc
mov
pusha
adc
lods
loop
add
test
adc
or
push
xor
inc
add
or
xor
xchg
clc
cmp
inc
lods
aam
inc
sar
mov
mov
add
inc
out
lock
insb
cmp
nop
dec
add
mov
stos
movsl
inc
adc
pop
out
test
cmp
and
xchg
icebp
sub
push
dec
out
adc
inc
imul
rcrl
popa
sub
pop
hlt
xchg
xchg
call
jno
xchg
or
adc
imul
out
pop
cmp
mov
mov
aam
and
adc
sbb
les
ffreep
sub
and
fisubs
mov
and
test
fprem
add
or
mov
popf
nop
enter
add
jnp
and
push
adc
sti
js
inc
fisubrl
mov
push
addl
push
movl
popa
bound
data16
ljmp
push
insb
insl
outsb
outsl
jo
jb
je
jbe
js
jp
pop
adc
push
dec
fldt
jne
or
adc
jle
and
imull
inc
popa
pop
xchg
andl
and
mov
sbb
insl
imul
and
ljmp
fimuls
popa
pop
adc
and
es
adc
push
pop
or
outsl
sub
dec
push
pop
cmc
push
outsl
outsl
and
rcl
cmp
shr
xor
stos
std
jo
mov
ja
jne
out
in
push
sbb
sbbb
ja
imul
sub
xor
push
xchg
int3
insl
ja
outsb
insb
push
ret
outsl
jge
pusha
out
outsl
rep
sub
movsb
sbb
adc
push
pop
and
cmpsb
xchg
or
pushf
mov
jbe
xchg
loopne
dec
push
jb
sbb
pop
add
outsl
insb
jl
pusha
push
add
xchg
dec
cmp
cmp
pop
adc
sti
xchg
outsb
push
push
addr16
ret
popa
sbb
sysret
sub
sahf
sbb
or
aas
jne
mov
loope
and
inc
add
ds
sbb
popaw
sahf
insb
jns
aas
outsb
das
insl
mov
mov
insl
pop
and
cmp
bound
sarb
lret
jle
add
push
inc
pop
xchg
mov
addr16
aad
xchg
inc
mov
xchg
repnz
imul
jns
push
test
ja
inc
push
in
push
das
jne
push
cs
sahf
adcl
outsl
inc
and
xor
sbb
mov
xor
push
int
fwait
sub
inc
outsb
and
push
outsl
lock
aad
stos
filds
inc
dec
inc
add
mov
ficoml
dec
outsl
add
pop
lcall
adc
sbb
push
inc
xchg
aaa
inc
mov
repnz
mov
out
dec
and
adc
lods
mov
add
cltd
xor
push
out
dec
and
enter
in
cltd
aam
imul
imul
mov
xlat
dec
outsb
and
outsb
leave
adc
test
xor
subb
dec
push
jl
push
and
imul
add
mov
loope
rcll
outsb
or
and
scas
cmp
push
adc
frstor
xchg
into
push
adc
push
loopne
push
inc
pop
inc
gs
jo
sbb
mov
push
adc
insl
pop
nop
testl
dec
jo
adc
push
push
loopne
loopne
inc
popa
dec
js
adc
adcl
push
pusha
adc
push
mov
and
out
jo
push
enter
adc
shlb
repnz
pop
mov
inc
xor
int
cmpsb
push
sbb
add
xor
outsl
insl
scas
imul
mov
inc
dec
lock
push
ret
daa
push
mov
sbb
aad
movsl
jne
jb
xchg
jns
jno
roll
out
iret
stc
sub
dec
adcl
cmp
cli
sub
and
shlb
mov
sti
outsb
das
and
inc
xchg
mov
and
test
stos
cmp
inc
dec
push
dec
inc
push
push
hlt
push
inc
inc
jl
fistps
dec
push
dec
dec
push
outsl
cld
sub
or
sub
dec
lea
cmp
fs
shll
pop
push
outsb
dec
movl
fldcw
and
add
mov
das
jl
inc
adc
out
sahf
idivb
je
push
test
jns
mov
add
jns
divl
and
xor
repz
sahf
out
push
iret
repz
mov
call
hlt
add
adc
add
push
add
sbb
es
lahf
xchg
xchg
mov
adc
jl
mov
mov
arpl
jg
push
jbe
test
push
xchg
or
aaa
add
cmp
xchg
xor
jbe
pop
dec
adc
mov
outsl
add
adc
push
dec
inc
subl
mov
xor
adc
adcb
ja
add
xchg
push
add
and
add
call
adc
pop
shlb
sbb
or
adc
xor
aaa
addr16
mov
in
add
xchg
test
cmp
jns
lods
push
add
rol
lahf
add
push
or
inc
add
out
ds
nop
xchg
insb
mov
jl
adc
jnp
mov
pop
and
cmpsl
mov
aas
push
in
add
pop
andl
push
jge
adc
push
cmp
sub
and
add
jnp
aas
push
pusha
aas
push
jo
xchg
push
add
repz
add
repz
add
sahf
out
mov
sbb
xor
dec
or
js
out
jnp
scas
push
or
jns
out
psubusb
in
adc
cmp
repz
iret
cmp
push
adc
push
pop
sti
loopne
cmp
sbb
push
cmp
imul
add
cmp
repz
dec
jo
test
repz
andl
mov
mov
sahf
out
sbb
xor
dec
out
sahf
out
fs
jl
sahf
out
sahf
xchg
out
lods
dec
add
jmp
stos
dec
fwait
add
sahf
xchg
push
cmp
js
xor
inc
push
inc
or
sbb
ficoms
rolb
mov
sbb
cmpsb
add
adc
sbb
nop
pop
pop
jecxz
fnstsw
sbb
ja
push
rorl
in
sbb
orl
xchg
push
rcll
jmp
mov
sub
xchg
inc
adc
add
iret
and
lods
pop
add
aaa
or
out
push
pop
push
xchg
ja
pop
add
rcrl
jg
stc
mov
repz
sti
cld
std
dec
repz
incb
add
addb
addb
add
jo
inc
xchg
add
push
sbb
fstps
inc
pop
fldt
je
iret
repz
nop
mov
iret
repz
fdiv
sub
push
xor
cmp
inc
dec
dec
dec
sahf
out
dec
push
cmp
sub
and
add
or
inc
push
iret
repz
inc
ds
push
std
fs
cmp
repz
cli
test
cwtl
repz
repz
lods
test
iret
aam
call
out
ds
repnz
xor
sahf
out
lock
out
pop
out
xchg
jne
out
in
sbb
out
sahf
push
jmp
ljmp
add
or
ja
mov
inc
inc
add
add
push
or
daa
call
add
test
add
lea
push
inc
xor
stos
adc
mov
mov
pop
or
pop
add
pop
aad
fmuls
lcall
aas
cmpsb
mov
push
pop
push
iret
repz
pusha
pop
pop
push
push
dec
push
mov
cmp
filds
int
adc
iret
pop
or
push
push
adc
das
ret
cwtl
test
sub
add
jnp
mov
jg
loopne
pop
xor
add
iret
repz
fadds
aam
int3
enter
repz
sarb
mov
test
mov
cmp
xchg
nop
mov
into
test
jl
je
cmp
repz
push
cmp
repz
push
push
dec
dec
push
in
ret
pop
pop
rolb
sbb
pop
movsb
dec
xor
gs
les
jns
repnz
shrb
movsb
addb
cmp
mov
dec
dec
pop
cmpsl
pop
cld
mov
and
or
pop
mov
enter
xor
add
cmp
or
xor
push
out
pop
sbb
bound
adc
mov
dec
add
xor
adc
imul
je
xor
add
jnp
inc
das
push
push
sbb
dec
arpl
sbb
lea
aas
xor
loop
push
mov
dec
and
cmc
inc
inc
gs
js
sahf
jae
xchg
inc
test
dec
pop
or
dec
cs
jbe
inc
sbb
adc
jns
add
sbb
jmp
mov
les
sbb
fnstsw
add
dec
mov
inc
mov
in
or
daa
jl
invd
test
mov
pop
bound
dec
add
pop
sbb
in
and
and
insb
and
sub
inc
inc
push
cmp
adc
fisttps
xor
xor
inc
xchg
fcomp
push
xor
xor
or
scas
sub
push
push
dec
or
mov
xor
xor
fisttpl
mov
pop
sbb
inc
inc
push
push
cwtl
adc
inc
dec
and
jno
loope
or
pop
and
pop
imul
cmpsl
cmp
loopne
push
outsl
outsl
imul
aaa
sahf
push
dec
loopne
dec
mov
movsb
les
nop
push
jl
push
push
sbb
aam
jns
outsb
mov
daa
das
pop
mov
nop
fcomi
mov
and
mov
rcrb
jmp
pop
add
or
popa
sub
movsb
jbe
pushl
pusha
jb
fs
push
shll
decb
lcall
je
sub
mov
das
js
and
mov
mov
and
sbb
adc
int3
pop
fsub
lds
push
inc
sub
inc
push
in
pop
and
sub
insb
rorb
jbe
xor
push
push
arpl
inc
and
pop
dec
inc
jl
xchg
pop
mov
inc
push
popa
sub
jne
dec
cmp
ficompl
loopne
sub
jbe
std
int
xor
sub
popa
or
xor
stos
mov
dec
mov
sbb
aas
xor
dec
jo
je
leave
push
in
xor
jae
arpl
jl
xor
jbe
sarb
cmc
dec
inc
pop
or
mov
rorl
push
mov
test
insb
fldln2
dec
and
shll
jbe
fucom
jno
add
add
inc
sub
and
idiv
xchg
cld
mov
popa
inc
push
shlb
push
add
pop
add
iret
push
jo
cmp
jne
cmp
sub
cmp
push
or
fs
push
repnz
mov
in
ret
mov
and
jg
cltd
pusha
xchg
add
or
or
popl
inc
adc
out
xor
fiadds
pop
mov
mov
and
cltd
loope
inc
add
adcb
push
inc
mov
add
xor
add
fisubrl
arpl
xor
pop
aaa
mov
mov
add
add
call
push
add
sub
or
pop
push
add
in
testl
sub
sub
adc
sbb
add
sub
sub
in
cmp
push
bound
and
sub
sti
out
idivb
push
add
add
push
das
add
sbb
push
adc
sbb
sbb
sub
and
and
xchg
add
push
and
add
sbb
xchg
push
push
sahf
out
sahf
outsb
jge
mov
out
or
sbb
repz
repz
jl
iret
repz
lcall
out
ds
int
inc
push
imul
fwait
cmpsl
mov
jl
out
add
adc
repz
cs
pop
jl
mov
mov
shl
adcl
jo
inc
inc
popa
pop
xchg
push
movsl
je
fstl
push
push
push
icebp
jns
push
bound
sub
inc
dec
mov
iret
arpl
outsl
popa
pop
cmp
jb
dec
dec
add
mov
test
stos
addr16
mov
mov
cmp
aam
and
adc
pop
mov
loope
fldcw
pusha
cmp
lahf
in
popa
push
andl
pusha
movsb
and
add
adcb
fcmovnbe
push
imul
adc
aaa
xor
xchg
and
cmpsb
add
imul
fwait
jp
mov
iret
xor
or
popf
fwait
lds
sbbb
push
adc
out
mov
fldenv
sbb
xchg
jb
add
jbe
das
dec
inc
and
jmp
pop
rcr
jne
jno
jbe
xchg
xor
push
mov
sahf
push
push
rcrl
mov
jp
gs
test
jns
loopne
enter
loope
jnp
cmovb
imul
and
jo
rcr
or
jmp
les
xor
nop
adc
fs
inc
sbb
sub
sbb
test
jo
dec
fs
imul
sbb
add
bound
and
sub
in
inc
mov
fsubl
adc
or
loope
mov
enter
inc
xlat
sub
and
dec
pop
insl
bound
inc
popa
addr16
jae
add
les
or
mov
mov
je
add
xchg
mov
dec
arpl
flds
mov
sub
push
add
dec
xchg
sub
add
add
fucomip
add
add
push
add
pop
push
add
add
or
add
adc
nopl
or
push
pop
push
sbb
in
sub
or
and
int
push
push
adc
push
adc
or
jb
or
and
sub
dec
sub
dec
insb
and
add
or
rolb
add
mov
enter
add
mov
jge
dec
and
add
mov
pop
or
or
or
push
movups
adc
adc
out
sbb
sbb
sbb
push
sar
push
pop
and
and
and
es
sub
sub
sub
cs
filds
jg
cmp
pop
adc
xchg
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
aas
enter
jecxz
in
out
jmp
in
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
pop
pop
xchg
sub
or
out
adc
adc
adc
sbb
sbb
out
jne
and
and
and
xor
inc
dec
dec
push
out
sahf
out
pop
fs
je
sahf
out
sahf
test
jns
out
pushf
mov
jns
out
rol
rcrb
in
idiv
cmp
sarl
push
or
adc
cmp
repz
sbb
and
out
jne
mov
aaa
sbb
xlat
mov
sub
fsubl
cs
imul
sub
push
das
add
or
and
js
pop
jnp
das
and
inc
sub
and
pop
inc
loopne
ret
adc
push
dec
js
daa
and
fs
xor
orb
gs
adc
out
ds
push
jb
or
adc
out
mov
arpl
sbb
cmp
popf
fs
je
bound
dec
test
mov
and
insb
push
push
dec
dec
or
scas
xor
inc
jne
mov
cmp
adc
jo
dec
xor
jbe
inc
arpl
stos
mov
cltd
xchg
xchg
lea
jae
xchg
imul
inc
or
movl
adc
arpl
sub
aaa
sbb
arpl
shrl
mov
pop
pop
jne
imul
mov
mov
call
movsl
jno
dec
ret
sub
push
push
mov
mov
je
adc
pop
adc
adc
dec
lock
incl
add
cmpsl
pusha
pop
out
verw
rolb
insl
shll
outsl
lock
es
pop
aas
lock
pop
inc
fcoms
aaa
sub
mov
sub
sub
xchg
adc
subb
xchg
sub
sub
mov
ja
in
cwtl
cltd
cmp
adc
dec
mov
cli
adc
cmp
adc
enter
mov
test
mov
push
adc
and
inc
push
shl
or
shll
call
xor
pop
idivl
xor
sub
mov
and
cmp
cs
out
add
bound
rorl
cmpsb
je
jbe
mov
push
adc
inc
pop
fcoml
movb
add
mov
scas
arpl
lods
lcall
push
mov
dec
in
mov
mov
loopne
insb
inc
push
stos
pop
push
mov
dec
pop
mov
cmp
sbb
insb
pop
outsb
inc
jbe
psraw
mov
inc
bts
inc
sbb
sbb
xchg
inc
xor
xchg
or
push
stos
addb
xor
aaa
add
or
movups
adc
jb
jns
push
adc
sbb
iret
or
or
sti
das
je
adc
or
mov
loop
jo
mov
pop
iret
repz
ret
cmpsb
push
test
cmp
xchg
cwtl
lahf
cmpsb
repz
repz
mov
repz
aad
fucom
in
cmp
repz
icebp
cmc
stc
std
jns
cmpsl
stc
add
or
sbb
out
sahf
out
daa
sub
cmp
inc
dec
push
pop
pop
sbb
push
add
xor
pop
or
push
pop
js
cmp
repz
mov
repz
mov
cmpsl
xor
mov
divl
and
roll
and
push
inc
mov
cli
mov
sbb
push
jbe
clts
jb
jb
or
or
jb
or
out
out
push
subl
mov
leave
and
pop
add
adc
leave
and
push
and
je
and
pop
push
push
xor
and
addr16
jmp
fs
repnz
pop
mov
aam
fldenv
test
fdivrl
out
fs
or
enter
ret
ret
ds
aas
cmp
adc
iret
repz
cmp
adc
dec
pop
and
add
pusha
nop
inc
jb
and
inc
enter
loopne
dec
and
sbb
sub
xchg
dec
pop
pusha
loopne
adcb
repnz
icebp
and
cmp
xor
inc
loope
nop
mov
push
loope
and
mov
mov
xor
loop
xchg
pop
jb
push
pop
and
rclb
leave
and
jb
pop
and
jecxz
jecxz
cltd
dec
dec
pop
jecxz
xchg
dec
cs
das
inc
xor
in
xchg
pushf
in
in
in
in
adcl
iret
ds
adc
pusha
inc
lcall
in
mov
mov
inc
jnp
push
inc
repnz
and
mov
aam
clc
test
xchg
out
sbb
fs
xchg
out
jns
fs
and
mov
lods
jo
dec
or
inc
fcoms
push
mov
pop
mov
movsb
mov
inc
imul
inc
inc
dec
mov
test
cs
jge
or
push
shrl
or
sub
aad
and
adc
jno
cs
dec
pop
xchg
das
xor
sub
dec
cmp
js
xor
xor
and
icebp
lds
adc
xor
xor
pop
insl
adc
push
inc
pop
ja
aas
data16
mov
sub
clc
sub
outsb
add
aas
mov
shll
test
and
mov
sub
pop
inc
inc
mov
ret
inc
inc
dec
push
dec
push
inc
inc
and
xchg
xchg
mov
sub
sub
adc
pop
xchg
add
pusha
aas
js
jo
or
or
sub
dec
mov
ret
lea
popf
insb
mov
push
or
sahf
out
xchg
loopne
inc
ret
cmovno
and
sub
push
cmp
xor
inc
jge
stos
dec
int
push
test
inc
dec
aad
mov
or
push
mov
push
movsb
and
bound
movl
push
fwait
dec
inc
outsl
sbb
inc
aad
mov
dec
inc
jae
mov
xorl
fwait
inc
std
xor
sub
loopne
mov
inc
bound
into
push
js
xor
or
outsb
pop
adc
xchg
cs
or
mov
mov
push
mov
jbe
xchg
jno
or
js
inc
pop
sub
jnp
lea
inc
je
or
mov
push
dec
push
pop
inc
lods
hlt
popa
cmp
sub
cwtl
arpl
fcompl
sbb
arpl
ds
ja
inc
lods
adc
sub
bound
int3
test
les
dec
out
jae
mov
shrl
cmpsb
ret
out
pop
insb
cmpb
inc
mov
cs
cltd
adc
inc
or
movsl
mov
shlb
sbb
std
jb
inc
insb
int
js
adc
icebp
outsb
gs
aam
sbb
sbb
mov
popa
jnp
pop
jbe
sbb
js
pop
inc
dec
push
push
sub
push
arpl
push
sti
xor
repz
je
xor
inc
sbb
inc
pop
push
inc
dec
jl
jl
pop
sub
sbb
imul
jp
aam
push
push
movsb
jo
add
lock
jae
mov
pop
mov
sub
jo
add
mov
xor
inc
lds
add
gs
inc
mov
push
adc
das
mov
sub
and
jnp
mov
push
jne
add
insb
sbb
test
mov
cmp
test
pushl
pop
mov
int3
lock
sub
push
adc
xchg
pop
les
pusha
daa
dec
icebp
daa
test
mov
icebp
pop
in
in
pop
push
and
or
push
push
xchg
push
clc
js
imul
xor
pop
aaa
fmull
adc
xchg
or
pop
cmpsl
xchg
test
mov
shl
fidivl
pop
jo
add
add
add
or
dec
ja
xchg
mov
fsubrs
dec
repz
xchg
and
add
cmp
mov
fisubs
push
inc
nop
jno
or
adc
cmpsl
mov
push
addb
mov
push
stc
cmp
repz
loope
addl
cld
clc
lock
jae
out
out
lea
icebp
pop
shlb
or
cmp
sub
decl
iret
aas
incl
dec
mov
jae
dec
mov
shrb
sbb
and
adc
ljmp
out
pop
fbld
insb
pushf
pop
mov
outsl
lahf
pop
or
cmp
add
xor
or
cmp
incl
aaa
testl
dec
mov
ja
call
adc
sub
sbb
jmp
out
xlat
test
cwtl
pop
movsb
fs
push
stos
imul
add
xor
push
into
incb
shll
decl
inc
mov
mov
jle
inc
mov
lea
jge
loop
shrb
out
push
fisubs
loope
sar
ljmp
bound
pop
mov
insl
popf
pop
or
cmp
push
testb
cmp
incl
dec
mov
jbe
dec
mov
jne
ljmp
sub
sbb
mov
in
aad
push
pop
cmpsb
xchg
push
test
gs
push
out
outsl
mov
pop
lahf
push
inc
dec
push
dec
xor
and
jae
outsl
neg
bound
mov
sbb
sbb
push
bound
mov
inc
sub
adc
push
sbb
push
and
mov
std
data16
or
ss
andb
sbb
or
mov
push
sbb
add
outsb
push
ss
jmp
popa
dec
mov
xor
aas
lret
xchg
scas
out
aas
stos
adc
shl
aas
jmp
cmp
jmp
jnp
push
loope
pop
stos
jb
push
test
inc
rclb
ss
pop
and
sbb
popf
cmp
out
adc
add
jns
adc
and
xor
lcall
adc
jns
ja
push
push
adc
sahf
out
xor
cmp
sahf
out
sahf
sub
sahf
out
push
and
jns
out
xor
es
sahf
out
sahf
daa
cs
sahf
out
das
aaa
ds
outsb
and
fucomi
xchg
pop
xor
or
push
dec
mov
cs
or
mov
adc
sbb
scas
push
xchg
aaa
and
out
inc
cmpsb
insl
addr16
and
iret
repz
inc
cs
push
xlat
insl
daa
dec
scas
outsl
jns
js
sahf
out
jns
pop
bound
insl
mov
dec
arpl
adc
das
daa
stos
pop
lock
pop
aaa
adc
jbe
mov
aaa
cmp
outsl
fbld
add
test
shrb
and
cmp
sti
aaa
cmpl
add
add
jge
pushl
lods
adc
push
adc
pop
and
xor
inc
mov
adc
mov
bound
jo
adc
xor
or
sub
inc
lods
add
mov
rcll
mov
inc
test
push
test
push
popl
gs
bound
gs
add
ja
adc
push
pop
popa
jno
adc
dec
cwtl
and
lock
and
push
lock
loope
icebp
dec
inc
jo
imul
rorl
adc
addr16
push
adc
aas
pop
cmp
mov
and
mov
cwtl
pushf
mov
mov
xor
mov
into
cmp
shrl
rclb
jo
nop
out
lcall
aad
out
sahf
adc
and
xor
jns
out
inc
dec
orb
cwtl
mov
out
sahf
ror
fsub
lock
out
clc
mov
push
dec
push
sahf
out
sahf
pop
pusha
push
sahf
out
nop
cwtl
mov
sahf
out
ror
fmul
out
sahf
loopne
lock
add
or
repz
sbb
push
sub
out
sahf
out
inc
dec
push
pop
sahf
out
sahf
pusha
push
jns
out
cwtl
test
ror
jns
out
fsub
call
sahf
clc
mov
jae
sahf
adc
push
test
sahf
rcll
divb
mov
cmp
repz
pusha
push
add
repz
js
jns
jnp
mov
push
loopne
lock
rcrb
inc
sub
xor
and
inc
out
adc
out
sahf
ja
pusha
push
je
pushf
mov
movsb
test
xchg
inc
ficomps
push
pop
xchg
cmpsb
cs
iret
jnp
push
je
xchg
xor
push
sahf
out
iret
xchg
lods
push
mov
insb
mov
or
mov
les
int3
iret
jae
jnp
movsb
jbe
aaa
push
je
cmp
repz
dec
adc
and
repz
add
jbe
push
in
xchg
int3
repz
push
push
mov
xlat
cmp
fists
sahf
out
int3
les
mov
movsb
pushf
xchg
jns
out
mov
sahf
out
pop
push
dec
inc
sahf
out
sahf
cmp
sub
sbb
cmp
out
or
cld
outsl
push
in
cmp
repz
inc
cmp
andb
cmpsb
jo
jns
out
push
sub
xor
inc
out
sahf
out
dec
push
push
pop
mov
jnp
pop
fs
inc
xlat
fsts
jno
dec
sti
icebp
fmull
and
sahf
out
orps
pusha
push
aad
dec
test
add
and
add
nop
push
add
add
stos
test
scas
ss
jl
dec
add
and
mov
add
sbb
inc
sarb
add
sub
insl
mov
push
mov
pop
adc
cmp
push
jl
sahf
in
shrl
pop
hlt
repz
idivl
int
roll
mov
cmp
repz
imul
add
push
or
nop
insb
ss
out
add
mov
add
jo
call
fnstcw
or
sti
mov
int3
push
clts
loopne
adc
test
xor
out
adc
and
jge
iret
xrelease
push
fucom
jns
pushw
pusha
loopne
jo
dec
repz
out
hlt
or
jl
cld
into
repz
adc
push
sbb
sbb
jns
out
push
xchg
add
sbb
movsb
dec
repz
int3
call
sbb
stc
cmp
and
test
and
and
adc
dec
out
fldcw
sahf
cmp
mov
sub
sub
cs
rcr
jnp
das
mov
mov
cmp
cmp
cmp
je
ds
insb
mov
rclb
cmp
outsb
cwtl
and
jbe
jge
jns
es
enter
testb
jp
stc
xor
mov
add
sahf
mov
push
in
int3
addb
sbbl
fdivl
sahf
xchg
mov
cmpsl
stc
out
cmp
cmp
es
or
xchg
mov
mov
test
mov
jge
xchg
push
or
sti
add
mov
fidivrs
fsubr
adc
insb
ds
repz
mov
fldenv
insb
inc
lods
movsb
lods
scas
cmp
in
fnstcw
pop
scas
mov
hlt
mov
mov
mov
out
fnstcw
cld
mov
cmp
pop
xchg
shlb
jl
ja
mov
mov
les
test
sarb
sarl
rcl
ret
ja
into
push
dec
ret
ss
xor
cwtl
enter
jns
sbb
ss
pop
jle
popf
imull
push
mov
sarl
in
sbb
xchg
movsb
adc
out
lcall
je
fidivrs
rcl
sub
dec
push
mov
jns
adc
sahf
push
cwtl
mov
aad
fdivrs
dec
jnp
mov
mov
xor
out
ds
pop
loope
loop
jl
sahf
sahf
int
fsubp
push
out
jmp
in
out
cmp
out
push
cmp
push
repz
cmc
dec
repz
mov
fdivrs
idivl
sbb
sti
push
std
cmpsb
dec
incl
insb
add
mov
add
out
mov
push
add
xor
out
ss
aam
pop
dec
or
in
mov
or
inc
or
in
out
repz
push
pusha
hlt
cwtl
or
xor
out
push
loopne
or
insb
ss
mov
dec
adc
nop
adc
adc
adc
fiadds
out
lcall
lods
cld
imul
and
push
and
xor
out
mov
and
jo
aam
js
test
push
or
ret
int
out
mov
add
push
push
mov
out
adc
push
push
fs
out
sahf
js
mov
dec
repz
or
and
push
repz
repz
lods
out
ds
fdiv
or
and
sahf
out
sahf
push
outsb
xchg
repz
add
sbb
iret
repz
lcall
pop
sahf
out
sahf
jbe
lods
loop
cmp
sarl
xor
test
cmp
repz
test
jns
cmpsl
sub
data16
rcr
sbb
iret
repz
test
cmpsl
stc
pop
xchg
push
je
cmp
lahf
out
int3
call
out
cmp
outsl
test
and
pop
xchg
mov
bnd
push
push
pop
mov
int
mov
mov
push
sahf
out
lcall
cmp
sarl
cmp
pushf
sarb
out
hlt
or
jns
out
xchg
lret
in
mov
repz
sub
jmp
cmp
ds
outsb
push
outsl
test
rolb
int
jns
xchg
mov
sbb
dec
jns
rcr
sahf
cmpsl
stc
or
lods
jns
out
mov
and
insb
repz
out
popf
shl
and
subb
jns
dec
gs
lods
sarl
jns
add
ds
repz
idivl
out
mov
jl
out
push
mov
repz
rcrl
cmpsb
mov
imul
lcall
ja
leave
out
adc
cmp
cmpl
stc
adc
jns
out
xchg
shr
popf
iret
repz
pop
inc
mov
or
cmp
out
mov
dec
repz
repz
mov
sahf
out
mov
iret
sarl
loope
mov
iret
repz
xchg
mov
repz
out
push
push
mov
imul
cmpsb
mov
int
jns
stc
push
movsb
xor
ds
repz
out
sahf
out
nop
scas
aam
iret
repz
sbb
in
out
or
xor
out
mov
cmp
cmp
repz
mov
sbb
cmpsl
push
ja
aam
jns
out
xor
push
push
xchg
dec
repz
out
lcall
jp
dec
je
sahf
les
cmp
repz
mov
cmp
repz
test
push
insl
push
lret
loop
dec
add
jecxz
push
sub
in
sub
jle
add
scas
mov
push
mov
xchg
pusha
xchg
ret
mov
xchg
adc
ret
add
add
xor
ret
push
mov
inc
add
repnz
add
push
lret
decb
data16
mov
aad
push
add
add
push
inc
xchg
and
filds
movsl
adc
dec
sahf
rorb
and
cli
add
mov
push
xchg
adc
ljmp
sub
add
or
lea
sub
adc
mov
push
add
add
push
add
pop
shl
roll
adc
cmp
pop
add
push
inc
mov
mov
add
mov
add
sahf
sbb
shlb
push
icebp
adc
insb
and
sbb
inc
shll
push
jp
into
sbb
ret
xor
add
add
inc
stos
es
and
add
fiaddl
push
add
out
push
in
xor
push
add
adcb
out
cmpb
sbb
cli
ficoml
jbe
inc
movsb
mov
imul
loop
cli
scas
add
or
cmp
or
jge
repnz
cmpsb
es
scas
xchg
xchg
cs
fidivrs
inc
out
push
mov
add
icebp
add
mov
xchg
add
dec
add
add
and
add
fisubrl
scas
ljmp
add
add
push
sub
add
or
sub
add
jp
ret
scas
add
roll
add
add
add
push
dec
add
lret
add
rolb
iret
test
or
rorl
bound
rolb
add
icebp
add
xchg
addb
add
fildll
add
dec
add
add
add
add
inc
add
sub
add
add
and
adc
push
es
push
js
adc
adc
daa
add
add
add
sub
add
add
inc
jg
fs
and
sub
add
add
xor
or
pop
add
add
add
add
das
add
add
add
add
add
adc
push
add
add
add
add
pop
add
add
add
cmp
xor
xor
pop
add
xor
inc
add
inc
add
dec
add
dec
loope
add
add
pop
add
addr16
and
add
inc
and
jo
xor
mov
pusha
subb
dec
dec
push
and
mov
insl
data16
inc
cmp
dec
jne
push
inc
jb
adc
ret
orb
sbb
in
gs
out
xor
pop
push
inc
sub
sub
adc
push
xchg
sub
bound
sbb
fiaddl
mov
add
icebp
mov
es
ss
push
ja
xchg
js
rclb
jecxz
xchg
in
sub
adc
out
dec
add
inc
inc
fs
cltd
push
das
lea
jecxz
test
push
mov
sub
or
pop
sti
rcl
sbb
pop
aaa
pop
dec
inc
nop
dec
insl
xor
sub
push
dec
push
xorb
or
mov
or
xor
loope
les
xor
dec
imul
xor
and
inc
outsb
arpl
addl
and
xor
xor
mov
dec
mov
inc
sub
inc
or
mov
mov
cmp
xor
xchg
xor
stos
xor
jmp
push
xchg
sub
popa
mov
jns
and
bound
addl
add
xor
xchg
xor
mov
pop
in
fmuls
fistl
or
lds
pop
xchg
push
xor
in
push
xor
nop
push
or
adc
sbb
lods
outsl
add
or
or
adc
enter
jo
cli
fsubr
sub
cs
adc
xor
xor
add
je
push
xor
push
and
iret
cmp
gs
xor
inc
insl
inc
or
xchg
xchg
cmp
mov
bound
daa
xor
cmp
ret
cmp
dec
mov
or
mov
dec
lea
xchg
lcall
jo
sbb
ficompl
push
cmpsl
and
inc
xor
ss
xchg
notb
inc
mov
fcoml
inc
mov
in
inc
es
jg
popa
ret
test
stos
mov
aas
adc
mov
adc
cmp
add
push
addl
xor
and
shlb
das
inc
xor
add
xor
lock
xor
aaa
add
inc
das
lea
sub
mov
adc
dec
in
ja
inc
dec
sub
adc
inc
or
mov
lods
mov
pop
adc
mov
cmp
arpl
add
xor
and
xor
js
repz
xlat
stos
or
ficompl
subb
addl
jns
cs
nop
adc
test
adcl
insl
add
mov
cmp
pop
enter
sbbb
xor
jne
inc
cmpsb
pusha
test
insb
pushf
sub
imul
push
inc
and
xor
mov
or
stos
inc
dec
inc
sbb
jae
sahf
dec
mov
push
adc
bound
push
push
pop
mov
mov
imul
cmpsl
inc
dec
jo
jno
lock
loopne
arpl
pushf
jmp
mov
es
xor
mov
sub
inc
sub
lcall
mov
test
test
add
xor
inc
sbb
add
rsqrtps
inc
andl
sub
testb
mov
insb
mov
inc
pop
fiaddl
mov
inc
mov
cli
xchg
das
lea
sub
bound
push
mov
push
out
mov
sbb
stc
sarb
inc
push
push
xor
lret
xor
dec
xor
aaa
imul
xchg
pop
mov
adc
mov
mov
jo
or
and
lds
mov
push
call
inc
add
xchg
addb
pop
ret
pop
push
mov
and
sub
lods
push
cwtl
adc
push
arpl
aas
or
insl
xor
aas
push
dec
inc
rolb
in
insb
inc
adc
lea
stos
xlat
jnp
mov
xor
dec
or
lods
add
pusha
pop
push
cwtl
jae
push
ret
andb
mov
scas
cmpsl
mov
dec
adc
sub
push
mov
sbb
cltd
adc
sbb
adc
das
inc
test
add
sub
loopne
mov
fsubrs
sub
jmp
inc
shlb
arpl
adc
addr16
imul
insl
push
in
sarb
sbb
test
fwait
add
xor
inc
xorb
pop
fists
add
or
inc
pop
test
xchg
push
adc
or
dec
and
lods
sub
mov
arpl
push
jbe
inc
dec
inc
pop
andl
scas
add
rcrl
loope
jae
orl
add
arpl
insb
and
aad
xchg
push
mov
hlt
andl
repz
push
push
lahf
inc
sbb
and
lods
mov
scas
loope
cmc
jle
and
xorl
lds
push
jne
and
mov
xchg
or
cmp
inc
loopne
sbb
dec
mov
push
jae
xchg
mov
int
sub
cmp
mov
in
jnp
or
push
fwait
imul
jb
loopne
mov
jecxz
xlat
rolb
lret
add
xlat
xlat
jmp
clc
bound
push
popa
imul
insl
sub
cmp
inc
call
mov
imul
adc
and
in
inc
sbb
push
pop
adc
xor
push
or
sbb
lods
addl
jae
sub
add
inc
adc
pop
rclb
jno
xor
test
push
push
inc
mov
push
mov
jg
sub
scas
orb
dec
sub
dec
lds
inc
xchg
inc
mov
js
push
cmp
fstpl
push
gs
xchg
pusha
out
sub
xor
test
jbe
mov
mov
leave
pop
les
xchg
sub
push
pop
js
push
stc
test
adc
jo
nop
mov
jne
pop
dec
outsb
add
jns
jo
or
fucomi
and
push
dec
loope
das
or
sbb
in
sub
dec
fs
orl
dec
rorl
dec
ljmp
inc
sub
push
push
mov
and
push
inc
jecxz
in
les
mov
inc
sub
dec
adc
sbb
test
notb
notb
in
adc
movsl
or
stos
jb
cmp
push
adc
sub
ret
push
scas
mov
rolb
ret
cmp
cmp
mov
lods
sbb
sbb
sub
inc
or
pop
imul
add
pusha
dec
jno
insl
jne
pusha
pop
out
dec
add
sub
inc
push
adc
stos
inc
in
imul
loope
sbb
dec
insl
add
dec
gs
sub
adc
inc
jns
add
push
aaa
push
popf
dec
lds
mov
push
cmp
mov
adcb
jno
push
dec
mov
push
addr16
mov
inc
subb
outsl
dec
gs
or
dec
dec
push
inc
adcl
pop
loop
movsb
fmuls
or
inc
rcrb
outsl
and
pop
mov
jo
add
push
test
or
xor
sub
or
mov
arpl
sbb
lods
pop
gs
inc
shll
imul
sub
movsl
mov
xor
mov
divl
pop
test
and
mov
arpl
mov
sbb
rolb
imul
xchg
dec
mov
or
jb
mov
insb
outsb
jbe
les
sbb
add
mov
or
pop
mov
ret
outsl
dec
dec
call
inc
fistl
xchg
dec
in
inc
sub
gs
int
mov
add
inc
dec
outsl
test
adc
ljmp
dec
adc
adc
inc
jo
or
mov
adc
mov
push
jecxz
sbb
insl
jb
mov
add
inc
addb
arpl
ss
or
adc
mov
push
pop
or
lahf
lret
xor
rcrl
lahf
cmp
cwtl
les
pop
cmp
dec
sarl
add
push
xor
or
and
push
jae
add
sbb
add
dec
jecxz
pop
dec
daa
out
mov
inc
sbb
inc
and
dec
mov
fistpll
push
and
pop
dec
aaa
push
pop
imul
test
add
xlat
insl
out
mov
xchg
push
loop
fisubrs
pop
push
inc
mov
dec
dec
fidivrs
fiaddl
or
es
dec
push
inc
cmp
xor
xchg
jnp
mov
push
scas
dec
dec
inc
xchg
sarl
push
add
dec
xor
or
mov
push
or
push
pop
push
jbe
sbb
or
iret
fidivrl
push
add
or
dec
mov
dec
push
adcl
es
pop
push
jb
ret
jne
ret
or
xor
or
dec
push
inc
sub
sbb
inc
outsb
jle
adc
popf
add
add
dec
add
cmpl
incb
add
jl
cmp
out
pop
shl
mov
sbb
add
and
ljmp
adc
pop
cld
jg
xchg
out
xchg
clc
aas
push
pop
jmp
rcr
push
sahf
cld
add
pop
or
push
aas
sbb
jg
add
and
addr16
xchg
or
pop
enter
jo
sarb
mov
add
psubb
lods
mov
push
out
imul
neg
out
fimull
dec
ret
out
mov
add
dec
ret
lock
sbb
pop
push
aas
mov
mov
pop
xchg
addr16
lock
incl
pop
std
cmp
push
fnstsw
add
jl
out
mov
jbe
jg
cs
inc
add
jo
mov
pusha
iret
rolb
xor
cltd
cmp
ror
ds
push
xor
push
cltd
pop
and
push
out
insb
xor
jg
fidivrs
sbb
cmp
jmp
push
xchg
iret
add
add
and
cmp
cs
add
comiss
dec
pop
outsb
daa
rcrl
pop
std
clc
xor
jg
aas
rcrb
fdivp
inc
imul
push
inc
pop
shll
clc
popl
adc
sub
test
lahf
add
xlat
pop
sbb
ja
xor
add
pop
cs
add
cwtl
shrl
xlat
pop
in
pop
and
adc
jae
pop
cs
add
addr16
xor
ja
pop
cld
push
cmp
stos
push
fs
fsubrl
aaa
adc
das
xchg
pop
lock
or
push
sbb
loop
inc
fldcw
jge
cmp
sbb
push
sub
sahf
int
mov
add
inc
addl
fsts
xor
sbb
push
push
sbb
dec
rolb
fldt
loopne
jne
ret
roll
lock
cmp
xor
fcompl
jl
sbb
fstps
sbb
or
test
jbe
insb
sbb
enter
adc
nop
dec
jecxz,pt
add
addb
addb
rolb
out
in
jne
incl
cmpl
mov
xchg
xchg
mulb
cmp
subl
mov
in
popf
cmp
cmp
and
daa
and
cs
xor
neg
jae
and
ja
cmp
mov
fdivrl
push
mov
out
fnstsw
push
push
daa
lret
xor
ss
outsb
daa
xchg
push
sbb
dec
daa
dec
addl
daa
mov
out
mov
push
daa
clc
push
cmc
mov
ja
mov
or
lahf
cmp
in
adc
ret
leave
inc
sahf
cmp
rep
loope
daa
xor
and
daa
inc
mov
movsl
daa
dec
sub
daa
jg
push
aas
push
xor
mov
xlat
lock
dec
sub
pop
aas
jns
dec
mov
push
pop
push
es
and
fidivrl
and
and
mov
and
mov
xor
sarl
mov
push
xlat
push
lret
into
jge
daa
push
and
push
mov
push
fs
or
insl
pop
daa
dec
daa
jb
mov
repz
push
addr16
pusha
push
xor
mov
add
testl
xchg
inc
inc
inc
or
hlt
or
mov
scas
pop
iret
in
dec
push
pop
es
daa
inc
aad
jge
ss
push
push
dec
dec
pop
in
fwait
mov
out
in
dec
cmpb
sub
add
clc
daa
mov
xorb
sti
push
mov
mov
ja
dec
pushf
es
mov
fwait
xor
filds
scas
mov
arpl
daa
ds
rorl
ss
xor
arpl
sbbb
roll
cmp
lahf
cmp
insb
sub
out
fs
sbb
push
fbstp
mov
adc
dec
lret
ljmp
mov
daa
dec
add
pushf
fisubs
jle
xor
in
enter
repz
lock
mov
or
fbstp
in
push
mov
sbb
or
stos
movsb
fdivrl
push
repz
daa
xor
xor
cmpsb
arpl
cmp
in
pop
aas
das
es
bound
cmp
ss
push
inc
sub
push
daa
mov
adc
and
and
push
cmp
bound
fs
pop
int3
inc
push
outsl
outsb
data16
inc
push
shlb
fldt
push
inc
mov
and
inc
jbe
fidivs
call
stos
sub
pop
lock
ret
aas
jmp
dec
push
pop
in
and
dec
dec
xchg
daa
mov
subl
adc
jmp
pop
adc
or
mov
aas
popa
dec
inc
sub
and
jle
adc
pushf
mov
sbb
cmp
dec
sbb
dec
mov
popf
loope
push
jl
and
pop
fldz
fprem
or
sbb
xchg
es
jnp
mov
xor
dec
xor
ds
jbe
daa
dec
daa
dec
daa
clc
negl
dec
sarb
dec
mov
adcl
rorl
mov
int
push
jecxz
clc
lahf
mov
cmp
dec
lock
cltd
cltd
pushl
mov
push
mov
aas
in
stos
or
mov
and
or
mov
and
dec
pop
jmp
cwtl
bound
mov
add
inc
push
ja
insb
inc
fisubs
insb
push
xchg
and
push
mov
lahf
adc
pop
pushl
inc
pusha
and
mov
cmp
pop
es
or
scas
orl
jmp
je
mov
pushf
mov
pop
push
pop
xor
rcr
daa
je
push
sbb
into
aaa
daa
and
mov
repz
cwtl
and
pop
sbb
jbe
stos
sub
movsl
sub
insl
adc
mov
xchg
lds
loop
xor
push
and
loop
jno
mull
fnsave
mov
xor
daa
and
pop
dec
jmp
xchg
add
fmuls
subl
movsb
pop
cmc
jo
pushf
aas
lahf
lcall
push
in
popf
or
adc
or
add
or
out
fstl
push
pop
jg
add
pop
push
sub
shlb
lret
and
js
daa
mov
inc
or
ja
xorb
mov
pop
rolb
xor
add
mov
sub
jl
int3
ud2
jnp
cmp
push
into
add
pop
lock
cmp
data16
pop
add
popf
adc
mov
add
movq
lds
lock
adc
cli
push
push
out
add
aas
dec
mov
sarb
aaa
add
iret
pop
mov
aas
jo
jmp
loopne
outsl
aas
ja
inc
xchg
add
in
add
cvttps2pi
ret
push
mov
cld
int3
iret
popl
or
xchg
mov
jnp
cmp
decl
cmp
aas
jo
add
inc
mov
mov
mov
or
mov
out
dec
dec
dec
fs
test
rolb
jo
mov
aaa
jo
pop
ds
jg
inc
add
add
and
mov
imul
push
jne
push
push
or
xlat
fsubl
and
inc
aam
loope
push
imul
in
pop
cmpsl
outsb
push
sub
sbb
add
mov
and
xchg
or
xlat
daa
or
jnp
fnsave
add
add
mov
add
pop
stos
and
push
out
jae
jp
dec
popaw
push
dec
mov
inc
adc
insl
and
fmulp
jnp
sub
jb
jb
add
xlat
addr16
cmpsl
inc
subb
cmp
lock
mov
push
inc
pop
arpl
dec
jbe
sarl
or
inc
bound
and
ja
add
mov
jb
add
pop
outsb
sbb
jecxz
adc
popf
xchg
out
je
push
in
sahf
jbe
outsb
je
insl
mov
jb
mov
or
or
inc
or
mov
fisubl
add
lea
movsl
sbb
js
push
scas
jnp
imull
or
neg
cmp
mov
lret
sti
faddp
ret
outsl
into
adc
jae
sub
sub
sub
sbb
insb
outsl
movaps
loopne
adc
bound
sti
mov
cmp
jae
jbe
neg
or
xchg
push
or
and
mov
push
mov
scas
sbb
daa
pop
or
dec
lea
sbbl
repnz
adc
xchg
add
das
jbe
inc
jo
or
pop
cmp
ds
jbe
and
fimull
in
push
jnp
popa
out
cmp
pop
push
xchg
ja
fimuls
push
dec
sbb
orb
push
add
jno
daa
ret
add
sub
jbe
jo
ret
shll
and
pop
sbb
iret
jae
mov
cmp
cmp
adc
push
lds
xor
push
insb
fisttpll
xchg
jbe
out
or
dec
sub
sbb
mov
and
jp
dec
setnp
mov
das
cs
inc
mov
and
pop
lcall
xchg
popa
jg
popf
sarl
repz
sbb
jg
jnp
shlb
rcrl
jo
aad
add
xchg
xor
iret
xchg
mov
push
push
xlat
add
shrl
or
aam
addb
mov
sub
pop
sub
and
jbe
pop
and
xchg
fidivrs
cmp
addl
stos
aaa
es
lahf
push
jnp
pop
dec
jmp
pop
fwait
das
sbbb
mov
adc
jle
add
mov
mov
adc
sbb
repz
mov
mov
mov
outsb
getsec
je
mov
arpl
pop
mov
out
xor
ljmp
push
jecxz
pop
pusha
test
imul
pop
dec
pop
sarl
push
ja
daa
por
inc
xor
mov
arpl
inc
roll
pop
jg
ss
arpl
pop
lods
stos
mov
out
arpl
add
movsl
pop
dec
stos
push
addr16
cmp
arpl
subb
stos
or
push
jne
je
imul
out
sbb
mov
popa
stos
add
and
sbb
xor
sahf
mov
push
lods
push
jnp
out
xor
ss
stos
outsl
addr16
ret
addr16
roll
jb
inc
lods
fdivs
stos
mov
jg
jmp
cmovg
negl
jb
dec
cmp
sbb
arpl
jecxz
xchg
xchg
aas
aas
popa
xchg
pusha
or
and
lock
setg
ret
jnp
adc
out
pop
outsb
lret
pop
jo
add
push
sub
outsb
shrb
lods
shlb
push
push
lock
dec
jg
test
or
cmpsl
insb
xlat
fldcw
push
dec
and
xor
js
xor
adc
outsl
mov
aaa
shlb
arpl
jo
pop
pop
mov
fs
orl
dec
sbb
mov
scas
or
das
loopne,pt
orb
push
pop
push
jl
aaa
adc
mov
movsl
pop
outsl
adc
fisubrs
jns
push
mov
unpckhps
add
add
out
mov
pop
ja
pushl
push
or
insb
loop
dec
sub
loope
add
sub
push
adc
or
push
addl
sub
pop
mov
inc
lret
mov
pop
daa
sbb
jo
push
and
inc
inc
nop
shll
mov
fists
jmp
negl
dec
pop
mov
fbstp
jne
and
test
mov
arpl
inc
adc
or
loop
mov
push
cmp
mov
dec
ja
shlb
jne
sbb
and
call
loop
ffree
shll
addr16
mov
mov
andb
jecxz
xchg
mov
insb
insl
pop
sti
imul
xlat
ds
inc
push
xor
inc
dec
arpl
outsb
ret
fildl
sarl
out
push
push
adc
mov
dec
dec
dec
dec
or
add
inc
das
mov
out
add
sbb
or
xor
arpl
cmp
movl
add
jae
add
sbb
icebp
push
idivl
ljmp
xor
fwait
or
test
pop
jnp
imul
jne
jo
add
push
dec
sub
add
xor
sbb
jo
jecxz
pop
pusha
or
jne
jbe
push
fildl
inc
jp
psllq
adc
jnp
inc
test
inc
data16
dec
fwait
arpl
fistps
mov
mov
test
mov
daa
pop
sbb
in
das
xlat
xor
imul
add
dec
dec
xor
data16
xchg
xchg
xchg
adc
out
bound
ret
test
repz
pop
cs
adc
sub
mov
ds
inc
sti
sbb
add
daa
arpl
call
mov
inc
dec
outsl
mov
mov
ret
in
push
sbb
mov
fstpl
or
push
dec
mov
jecxz
mov
or
inc
mov
stos
jbe
outsl
pop
cmpsl
and
in
pop
adc
and
adc
out
scas
xor
sub
ja
stos
pop
nop
call
fwait
popa
aad
int3
out
adcl
dec
pop
shll
pop
iret
sbb
lahf
sub
ror
imul
push
sub
cmp
xorb
pop
aaa
adc
sbb
lahf
arpl
push
add
pop
inc
xor
or
pushf
ja
pusha
push
jae
or
mov
mov
dec
out
xchg
add
and
mov
or
sub
and
pop
lret
push
pop
and
shlb
stos
sbb
push
testb
cs
push
jnp
pop
mov
xchg
fs
and
js
xchg
jo
push
mov
xlat
lods
ss
push
cmpsb
pop
sub
and
push
jmp
rclb
pop
lret
mov
out
xlat
outsb
sbb
sbb
jne
xor
push
mov
xlat
mov
sub
loop
adc
adc
js
lcall
and
sbbl
cmpsl
rolb
sbb
repz
add
add
cmp
pop
and
pop
imul
sbb
xlat
jae
roll
adc
sbb
dec
mov
insl
xor
pop
adc
pop
dec
push
adc
les
sbb
and
movb
stos
pop
adc
xchg
mov
mov
rol
dec
pop
push
aas
jo
sbb
pop
sub
ficompl
daa
idivl
les
stos
sbb
stos
xchg
mov
jne
cmpsb
shll
push
add
stos
andl
iret
and
add
push
pop
shrb
ja
push
mov
add
fstpl
orl
sbb
out
insb
adc
push
sub
popa
push
jecxz
and
mov
mulps
mov
jmp
cmp
aaa
mov
pop
fwait
cmp
outsb
lret
or
fmuls
xor
out
in
and
and
mov
or
xchg
and
mov
pop
fwait
popa
add
inc
loopne
and
push
add
int3
in
stc
xlat
imul
add
daa
dec
ret
sub
or
xchg
inc
test
or
mov
pop
psubb
cmp
jnp
push
fyl2x
insl
loope
add
or
ret
sbb
jg
lret
xchg
lock
or
or
pop
or
sub
roll
pusha
or
flds
orl
mov
cmp
add
mov
in
add
jae
loopne
jo
popa
mov
lret
int
adc
arpl
aas
jnp
mov
add
in
stc
push
in
aad
mov
insb
add
or
loopne
jnp
loope
jge
icebp
sub
and
adc
adc
lar
or
jnp
adc
or
pushf
pusha
insl
and
or
lds
push
adc
aas
add
add
mov
xchg
push
ret
loop
mov
fdivs
leave
icebp
arpl
and
out
and
add
xchg
or
test
in
bound
sbb
xchg
add
test
lahf
mov
push
inc
mov
cmp
push
nop
mov
test
or
add
xchg
pop
nop
mov
in
push
xor
adcl
add
nop
and
mov
add
jmp
jg
les
inc
and
inc
roll
mov
dec
sbb
add
or
outsl
cmpl
addr16
mov
jns
cmp
add
push
or
sub
push
pushl
fcom
mov
loop
nop
sbb
nop
add
rol
mov
bound
jge
bound
les
sub
or
mov
pop
pop
inc
dec
out
enter
jnp
push
shrl
bound
add
pop
loope
cltd
push
sub
inc
stc
lds
jmp
nop
stos
or
ret
inc
add
mov
ja
or
xor
and
or
enter
mov
stos
ret
outsl
add
xor
arpl
mov
adc
inc
mov
bound
roll
push
loope
mov
jno
or
dec
or
or
and
pop
cmp
inc
inc
mov
adc
sub
dec
xchg
push
dec
and
insl
mov
sqrtps
inc
scas
popf
xchg
js
mov
popa
daa
cltd
push
lods
push
jge
mov
add
fisubl
push
cmpsl
shrb
sub
mov
jmp
dec
lods
mov
dec
and
cli
dec
fs
dec
movsb
in
xor
or
stos
inc
adc
leave
or
or
pop
fmull
mov
fadds
push
mov
shrl
test
lods
scas
popa
xchg
sbb
push
adc
mov
scas
xchg
cmp
and
or
push
or
cltd
dec
enter
adc
jns
imul
push
es
shl
sub
pop
test
cltd
sbb
imul
or
and
clc
movsl
call
add
ret
xor
inc
ret
dec
cmp
mov
scas
pop
in
dec
pop
sub
hlt
add
insb
outsl
ret
pusha
or
push
fisttpll
dec
test
xchg
mov
or
cmp
push
sub
leave
rcrl
ds
loope
push
cs
rcrl
mov
or
sub
leave
lock
push
cmp
adc
adc
gs
push
and
inc
cmp
pop
cmpsl
mov
xor
clc
mov
arpl
pop
in
mov
ss
or
xor
add
add
add
xchg
pop
leave
add
inc
sbb
inc
incl
adc
leave
and
add
cmc
jo
xor
cmp
sbb
sbbl
jmp
jne
jo
adc
enter
pop
arpl
mov
mov
mov
sbb
pop
jnp
xor
sbb
insb
mov
xor
andb
push
ficoml
and
rolb
or
mov
sub
sbb
test
inc
push
shlb
pusha
popf
xor
js
add
sub
inc
xchg
rolb
pusha
cmp
inc
adc
add
mov
mov
xor
inc
and
push
sbb
mov
or
sub
xlat
xchg
pushf
mov
xor
gs
and
addb
setne
adc
fisubl
jl
jo
jb
push
fistl
and
dec
sub
and
dec
sub
daa
or
xchg
and
nop
xor
sahf
fistpll
sbb
cmpsl
sub
out
ret
pop
out
and
mov
rcr
xor
dec
push
ja
sbb
mov
add
pop
and
pop
mov
std
dec
hlt
jne
mov
daa
stc
and
dec
es
push
sbb
xor
pop
or
pop
push
dec
jbe
jge
and
inc
in
fs
add
ja
pop
sub
das
pop
mov
xchg
sub
or
xchg
jae
xorb
sbb
adc
rcrl
sbb
sub
xorl
mov
add
cmp
imul
push
popa
sub
jmp
sbb
xchg
orb
ret
mov
push
aas
and
cmp
pop
pop
sbb
imul
cltd
mov
mov
daa
cmp
out
xorl
xor
xchg
lods
int3
adc
call
es
repz
adc
jae
push
mov
stos
push
push
cwtl
sbb
mulb
cltd
sbb
jbe
and
push
mov
dec
and
stc
inc
test
fistpl
in
mov
pop
xchg
push
cmpsb
rcrb
mov
sbb
fmul
movsb
cmp
jns
dec
mov
jns
add
xor
push
push
cmc
mov
dec
lea
mov
xchg
icebp
add
sbb
lds
int3
pop
loopne
cmp
xlat
mov
pop
jo
mov
push
je
ja
adc
loopne
xor
mov
and
add
sub
push
push
xchg
pusha
dec
add
loope
mov
xor
jne
mov
lcall
push
fwait
sbb
push
cmpsb
stc
lods
nop
or
iret
rol
lds
push
insb
xorb
and
mov
dec
xchg
add
sti
push
loop
test
and
mov
mov
xor
push
sti
sbb
mov
sub
test
and
popf
sbb
push
sbb
and
and
cmp
scas
insb
adc
jmp
outsb
sbb
jo
xchg
lods
sub
je
cmp
stc
xor
aaa
test
jo
mov
sub
adc
pusha
adc
cltd
inc
sbb
loop,pn
xor
orb
fadds
xor
mov
sbb
cli
xchg
xor
imul
loope
clc
cmp
arpl
xor
cmpsb
shld
repz
sub
push
inc
and
std
pusha
jnp
sbb
or
xor
mov
push
addr16
icebp
sbb
xchg
sbb
sbb
and
and
push
lods
sbb
adc
rcrl
sbb
push
mov
nop
in
or
pop
or
cmpsb
xor
nop
dec
push
mov
jl
add
aaa
or
or
lret
sbb
fnstenv
sub
adc
and
adc
cltd
and
daa
pop
loopne
sub
dec
outsl
outsb
xor
pop
mov
test
push
lret
aaa
sub
das
dec
bound
pop
aaa
sbb
xor
dec
in
outsb
pop
insl
jns
insl
xchg
and
and
adcl
adc
pop
mov
addr16
or
push
sub
shl
mov
inc
inc
in
in
arpl
push
rolb
and
dec
pop
call
push
jge
inc
cmp
das
inc
inc
mov
cmp
cltd
dec
inc
push
and
mov
rol
adc
and
cmp
inc
fucomi
mov
push
popa
nop
sbb
sbb
push
aaa
in
movb
lods
pusha
sbb
adc
and
sub
and
js
push
and
pop
cltd
xor
push
dec
jne
movb
addb
jnp
addr16
mov
xlat
dec
jb
pusha
sbb
pushf
add
nop
fcoms
inc
push
pop
ss
loop
out
push
push
and
fdivs
pop
pop
sbb
cmp
xor
sub
push
sbb
xor
cmp
cmp
xchg
mov
daa
xchg
sbb
push
or
pop
in
subb
aad
xor
mov
adc
insb
and
fimuls
popa
xchg
mov
xorb
inc
cltd
ds
and
and
cmp
mov
inc
mov
pop
mov
add
pop
outsl
adcb
adc
das
mov
mov
sbb
pop
jno
sub
push
repz
or
push
arpl
inc
movsb
fidivrs
xor
and
xchg
mov
rorl
jne
and
inc
loop
mov
mov
mov
mov
push
lret
jge
dec
ss
dec
dec
push
cmpsb
add
and
sbb
imul
jae
jno
inc
push
dec
inc
sub
lret
adc
in
or
mov
out
push
xor
inc
adc
roll
jmp
push
fwait
sub
adc
push
dec
clc
jmp
dec
and
call
ds
cmp
shlb
int3
xchg
sbb
sbb
inc
mov
xor
lods
cmp
movsb
test
push
mov
fdivl
fwait
push
int
pop
out
add
iret
popa
pushf
out
mov
pop
cmp
pcmpgtw
and
imul
insb
sub
jae
jb
adc
fildl
test
xor
push
cmpsb
loopne
push
add
sub
jl
sub
jo
insb
rolb
adc
mov
fstl
pop
pusha
in
push
cmpsb
adc
nop
mov
test
mov
mov
mov
jmp
popf
fwait
fcoms
sbb
cmp
sbb
sbb
pop
inc
jge
fs
mov
int3
adc
std
pushf
cmp
sub
pop
sub
cmpsb
sbb
push
cwtl
push
dec
ret
pop
mov
lret
mov
inc
or
fsub
inc
or
sbb
pop
push
xchg
xchg
or
movsl
mov
sub
xchg
jge
push
sbb
pusha
push
in
cmp
das
fsts
enter
fidivs
mov
add
sub
push
and
outsb
arpl
and
pop
or
and
sub
cmpsl
inc
jbe
adc
and
mov
mov
jo
and
jno
mov
fistl
cli
stc
test
imul
sbb
dec
and
sub
and
call
xchg
imul
rcrl
int3
xorb
insl
test
fstpl
test
xlat
sbb
jo
ret
test
mov
and
pop
pop
filds
lods
ret
cmp
xor
adc
xor
adc
nop
sbb
inc
mov
inc
insl
push
adc
push
mov
sbb
fnstsw
stos
shll
imulb
pop
imul
inc
sbb
xchg
sub
pop
add
jns
in
adc
and
or
in
pop
test
sbb
adc
and
and
pusha
negl
outsl
insl
xor
ljmp
int
mov
sbb
adc
and
mov
and
adc
push
mov
xchg
push
dec
movsl
popf
pop
cmp
pop
sub
jo
dec
dec
dec
sahf
xor
add
ds
push
push
xchg
cmp
mov
jne
and
out
rcr
sbb
sub
xor
sub
pop
in
call
imul
cmp
mov
adc
imul
pop
jno
xor
cmpb
pop
and
pop
jae
sbb
and
loopne
ficoml
scas
pop
leave
push
sub
push
sub
mov
cmp
push
push
push
fnsave
push
aad
or
rclb
push
daa
xchg
ja
imul
add
dec
fs
in
add
jae
mov
test
inc
push
stos
daa
loopne
push
pop
fistl
lret
mov
jae
mov
imul
sub
andl
and
pop
push
mov
sbb
in
fdivs
sub
int3
shll
mov
fs
gs
sub
dec
andb
es
xor
std
push
mov
push
jns
mov
insl
arpl
push
cmpsb
insl
shll
adc
and
addr16
lcall
jae
add
cmpsb
imul
dec
jnp
or
add
adc
into
xor
rcll
adc
pop
cwtl
cmc
mov
add
aad
and
mov
sbb
sub
add
sub
insl
jnp
fstl
xor
xchg
btc
push
movsl
test
cmp
jno
movups
cli
insb
outsb
fdivrs
xchg
push
cmpsb
sub
insb
push
mov
or
outsb
sbb
add
lods
jmp
mov
inc
or
cmp
push
xchg
push
cmp
cli
insb
pusha
cs
pusha
rcrl
lahf
inc
shrb
add
mov
dec
jb
ds
xchg
outsb
dec
xor
push
imul
dec
cs
gs
inc
cs
cmpsl
or
je
push
push
jb
sbb
fsubs
divb
pmulhuw
xchg
dec
xchg
lock
mov
lret
or
add
add
add
dec
add
inc
xchg
or
xlat
cmp
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
dec
add
jmp
add
dec
