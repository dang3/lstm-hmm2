jnp
mov
popa
mov
sbb
sub
test
addb
push
lods
ret
inc
inc
add
and
xchg
insb
pop
ucomiss
push
mov
lcall
xchg
ds
stos
in
mov
sbb
cmpsb
push
pop
dec
lods
aas
xchg
mov
lahf
jp
mov
cmp
xchg
hlt
cmp
xlat
fstps
sbb
pop
outsl
out
jne
js
adc
gs
xchg
test
or
push
push
imul
cli
push
dec
daa
xchg
movsl
negl
push
pop
loopne
mov
addl
mov
adc
xor
dec
xor
cltd
pusha
mov
sahf
add
pop
repz
in
jg
pusha
inc
int3
jp
lods
idiv
popa
dec
aas
ja
pop
cld
xchg
ja
cmp
pop
push
neg
dec
movsl
lods
loope
gs
movsb
cmp
push
push
push
sub
xor
test
pop
cmp
das
out
add
addr16
decb
mov
jg
sti
pop
mov
dec
cmpsb
loopne
and
push
dec
cs
and
sub
stos
je
and
or
ljmp
xchg
xchg
call
dec
jne
imul
cli
orl
and
adc
pop
push
mov
jno
jae
pop
in
jge
add
shrb
inc
pop
jo
or
mov
pusha
mov
mov
std
mov
es
ss
mov
movsb
mov
mov
aad
negl
mov
insb
xor
icebp
mov
jb
push
aaa
cmpsb
pop
aaa
imul
das
mov
mov
and
jg
pop
dec
daa
shll
inc
jl
inc
shrb
dec
jge
sbb
lds
xchg
mov
jne
mov
nop
jmp
das
push
inc
mov
cmp
mov
pop
push
jp
das
sbb
in
and
testb
repz
sbb
mov
lods
mov
movsl
adc
mov
jnp
mov
mov
stos
dec
mov
pop
cmpsb
mov
pop
test
movsl
mov
inc
cs
and
fimull
aaa
push
in
inc
jnp
dec
mov
jecxz
std
pop
fs
dec
pop
pop
push
sbb
loope
fsubl
push
in
dec
stc
sub
sub
pusha
mov
jge
mov
mulb
or
and
push
inc
movsl
lahf
pop
sub
std
pop
push
push
mov
jne
push
rclb
sub
inc
mov
mov
xor
pop
ljmp
in
mov
lret
inc
pushf
xor
nop
js
mov
xor
push
dec
pop
movsb
sbb
mov
mov
jecxz
aad
stos
daa
cmc
push
pop
test
aam
sbb
pop
jns
scas
loop
pop
call
in
dec
popa
movsb
dec
xchg
jg
jnp
mov
jo
or
inc
loope
push
pop
mov
in
push
xor
dec
push
and
loope
sbbb
ljmp
in
pop
jecxz
sbb
xor
mov
cld
xchg
cmc
jmp
adc
ficoms
pop
mov
pop
cmp
inc
sbb
jp
xchg
stos
movsl
sbb
lock
xor
and
leave
inc
push
leave
aas
imul
adc
cmpsb
xchg
addr16
jns
mov
add
jmp
xchg
mov
jp
sbb
sub
negl
or
imul
das
and
mov
js
call
mov
dec
sub
sub
stc
sarl
cmp
mov
pop
mov
popa
sbb
sbb
xor
and
js
jl
pop
and
jnp
pushl
cmp
mov
insw
enter
scas
lods
cs
sub
hlt
imul
sbb
les
cmp
or
xchg
enter
sahf
iret
ja
inc
sbb
ret
and
mov
data16
xchg
imul
adcb
fisubrs
adc
hlt
push
pushf
movsb
jae
stos
test
mov
movsl
adc
push
or
push
jns
adc
and
mov
or
pop
insb
sbbb
sbb
addr16
jecxz
fsts
popa
push
popf
pop
add
mov
int
mov
dec
cld
jb
push
mov
dec
fisttpl
lock
pusha
aaa
inc
mov
repz
test
sbb
mov
in
lahf
dec
sub
aas
dec
mov
rorl
mov
mov
cmp
sti
push
sarb
cmpsl
insl
dec
std
xorl
mov
lret
jae
mov
dec
mov
mov
loopne
call
jae
add
hlt
mov
lods
mov
jnp
ret
sub
xor
mov
push
fs
pop
sbb
cmpsl
push
pusha
aas
mov
adc
mov
orb
imul
adc
fistps
jmp
js
push
cmp
pop
and
jbe
insb
stos
cmp
je
ret
lods
push
pop
mov
push
out
leave
xor
fisttpl
js
insb
cs
inc
push
mov
pop
push
aad
sti
inc
dec
or
jnp
dec
dec
lret
rorb
push
push
imul
sbb
addr16
xchg
andl
inc
outsb
adc
xor
and
icebp
stos
mov
and
dec
clc
insl
daa
ficomps
mov
pop
mov
push
or
mov
xor
sub
popw
fistps
add
into
and
cmpsb
and
and
push
or
xor
fcomps
push
dec
data16
scas
inc
pop
or
xchg
aad
dec
in
push
and
sbb
pop
jge
dec
sub
pop
xchg
outsl
dec
jmp
ret
pop
inc
mov
ds
jle
sub
pop
arpl
aas
inc
mov
pop
pop
push
pop
shll
xor
repnz
loopne
cld
mov
sbb
inc
bnd
mov
lahf
pop
dec
mov
fidivrs
jle
push
xor
jg
insb
arpl
lret
sub
and
hlt
and
ljmp
xor
int3
movsb
jmp
jb
xor
add
push
mov
dec
cmpsl
sbb
in
pop
popf
xchg
cmp
or
popa
jb
cmpsb
outsl
das
stos
inc
ja
out
adc
stos
jo
iret
or
cmc
scas
push
or
leave
mov
daa
add
out
or
xor
pop
aas
pop
mov
ss
jmp
jge
outsl
scas
imul
out
in
or
dec
inc
cmp
pop
add
and
xor
loopne
jge
xchg
lods
xlat
repz
mov
js
adc
cli
andl
and
out
mov
pop
push
sub
sbb
sbb
fidivrl
push
inc
in
gs
push
mov
stos
cmc
enter
jge
outsl
mov
aaa
stos
add
xchg
mov
lods
adc
xchg
imul
mov
jge
int
adc
inc
jmp
push
nop
js
int3
add
jnp
fisttpll
jne
sub
pop
mov
mov
add
dec
inc
daa
arpl
mov
xor
mov
loopne
jp
xor
pop
daa
test
pop
push
cli
in
jae
push
imul
aam
mov
mov
jle
out
dec
lret
xchg
jb
mov
xor
dec
pop
pop
fwait
push
and
xchg
mov
scas
negb
xchg
mov
jecxz
sub
xlat
inc
dec
push
mov
jo
sbb
mov
imul
imul
std
mov
shll
adc
mov
dec
xchg
dec
scas
mov
test
mov
sub
mov
shrl
clc
negl
cmp
mov
outsl
xchg
ja
lods
loopne
push
sub
cs
loop
and
push
push
xchg
js
cmp
out
fnstcw
inc
xor
jae
push
adc
stos
loop
loop,pt
mov
pushf
test
pop
pop
ljmp
aad
inc
daa
and
xchg
push
loope
push
cmpl
xchg
cli
jp
js
pop
lods
sbb
jno
dec
aam
inc
lcall
mov
js
cld
pop
outsb
jge
stc
sarb
mov
scas
inc
xor
call
idivb
mov
adc
and
mov
fsts
lods
sti
cmc
fisubl
fxch
aas
cmp
push
cmp
inc
sbb
xchg
into
test
push
jg
sub
sub
enter
inc
dec
mov
icebp
dec
test
sub
jp
mov
mov
push
lret
mov
mov
mov
lret
cmp
aaa
cltd
and
inc
xchg
outsb
mov
lods
jl
ljmp
xor
xor
dec
imul
imull
call
cmp
sbb
cmp
fstpt
cmc
adc
movhps
pop
push
arpl
outsl
push
push
mov
inc
sub
xchg
out
sahf
popf
or
mov
loope
jp
inc
mov
cmpsb
inc
out
in
dec
pop
and
cld
mov
or
add
pop
out
repz
push
out
stos
bound
jbe
cmp
add
dec
jecxz
sti
insl
aaa
in
mov
pop
sub
and
lahf
xchg
daa
push
rorb
outsl
test
dec
jae
scas
les
push
pop
lock
out
scas
cmp
lahf
push
cmp
sub
dec
out
ficoml
pop
dec
stos
test
fdivrs
nop
sbb
in
and
sub
popa
scas
outsl
aas
lock
aaa
repnz
push
out
cmp
sbbb
divb
mov
daa
cmp
std
aam
and
icebp
hlt
and
stos
add
xchg
sbb
adc
outsl
jnp
sbb
sbb
mov
scas
data16
insl
pop
add
fimull
pop
pop
lods
sub
outsl
jnp
repnz
sub
and
cmc
sbb
adc
fidivl
and
dec
push
push
imul
nop
lods
add
inc
popa
sahf
mov
sub
xchg
pop
mov
pop
stos
mov
add
or
insl
lods
dec
push
out
das
mov
mov
xchg
jl
sbb
sub
dec
mov
sbb
push
add
sahf
inc
out
sbb
movsb
mov
mov
push
push
push
push
adc
cmp
xchg
cltd
popf
lret
into
repnz
push
ja
mov
jno
icebp
add
shlb
lock
dec
jl
mov
mov
andl
cmp
cmp
pushf
or
jge
clc
loopne
push
sbbl
stos
jno
int
adc
push
mov
jecxz
clc
or
push
xor
shlb
cmp
div
dec
xchg
adc
pop
enter
sub
movsb
test
jae
jno
mov
inc
pop
insl
fldt
into
jge
mov
or
dec
mov
and
adc
xor
pop
sbb
imul
lret
sbb
lods
pop
inc
test
das
lcall
sub
jl
mov
add
dec
jae
push
push
pop
ss
or
cmpb
loopne
adc
inc
mov
inc
decb
sbb
lods
cmp
add
mov
xchg
popa
mov
sar
sub
pop
xchg
sbb
cmp
jo
jnp
fsubrl
stc
push
adc
popa
mov
and
pop
js
fldenv
cmp
pop
je
enter
mov
sub
mov
jnp
repz
in
adc
pop
pop
daa
cmpsl
out
sbb
mov
test
jne
mov
jae
insl
cmp
int
jmp
mov
cmp
lds
aas
insl
xchg
stos
jle
popa
pop
cld
mov
jg
or
cmp
lods
cmp
aas
scas
sub
mov
je
ljmp
mov
enter
jns
sub
into
pop
out
test
lods
lods
aaa
cmp
rol
data16
xchg
mov
stos
inc
test
mov
mov
jnp
pop
repz
push
std
push
aaa
scas
dec
or
mov
mov
xor
arpl
sub
mov
jns
and
jle
dec
loope
lds
or
push
pop
push
loopne
out
cmc
leave
stos
inc
cwtl
adc
in
lods
cmpsb
mov
jb
mov
std
leave
movsb
pusha
and
push
mulb
aas
out
jmp
mov
sbb
sub
rcr
js
pop
int
scas
std
dec
mov
pop
ret
hlt
dec
lcall
inc
and
cwtl
dec
hlt
pop
mov
cmp
lea
aam
dec
jmp
and
rclb
push
test
cmp
cmp
pop
pop
jbe
ljmp
mov
mov
inc
jg
lret
cmp
imul
iret
pushf
lret
and
jl
cmp
pop
xchg
or
cmc
int
pop
and
iret
push
jp
jo
sub
shlb
in
xchg
sub
sahf
xor
lret
adc
dec
cmp
mov
inc
popf
lods
fdivs
jae
int
mov
mov
xrelease
xchg
xchg
fmulp
jbe
cmp
int3
pop
inc
sub
aaa
dec
inc
inc
inc
std
js
add
xchg
pop
bound
jmp
pop
or
lock
mov
cmp
lds
inc
push
sbb
aad
dec
jnp
pop
in
aaa
add
add
pcmpgtd
or
sti
push
lock
scas
movsl
pop
scas
mov
add
mov
mov
jmp
mov
mov
jecxz
push
in
arpl
jp
outsl
cmp
jle
jo
cmp
ds
cltd
pop
push
inc
cs
shlb
jmp
pop
mov
sub
jo
imul
mov
lods
xchg
andb
mov
clc
dec
adc
cs
mov
cld
mov
dec
add
in
jp
mov
in
in
push
sub
ja
loope
sti
imul
stos
push
pop
xchg
xchg
dec
scas
pop
fnstsw
icebp
adc
mov
int
sub
movsl
or
pop
ja
and
rclb
xor
imul
sbb
test
aam
fisttpl
rorb
push
xor
mov
outsl
jnp
add
inc
dec
into
xor
mov
cmp
cmpb
sarl
inc
jecxz
hlt
sub
call
jecxz
hlt
xchg
cli
cwtl
pop
mov
sub
scas
push
xor
xchg
insl
xchg
pop
mov
pushf
divl
or
mov
imul
out
push
enter
xchg
xor
add
dec
insb
pop
aam
pop
pushl
xchg
jnp
cmp
lcall
mov
xchg
mov
sbb
sahf
push
and
das
icebp
lret
test
xor
mov
into
repnz
movl
arpl
imul
mov
inc
inc
mov
sti
pop
and
mov
push
dec
lods
pop
cmp
imul
iret
in
jnp
xchg
stos
bound
insb
dec
imulb
xchg
das
loope
jbe
imul
cmp
ficomps
loop
insb
mov
fwait
test
data16
shrl
dec
out
outsw
pop
loopne
xchg
fldenv
or
add
sbb
hlt
mov
aas
movsb
test
jnp
test
out
xchg
sub
cmp
cs
push
das
sahf
sub
pop
sub
sub
sbb
cli
in
jg
lcall
out
mov
pop
sbb
ficomps
jne
cli
mov
lea
xor
pop
jl
dec
mov
pop
mov
xchg
mov
pop
mov
xor
in
inc
xor
pop
icebp
jbe
or
push
xlat
ret
lods
pop
out
fbld
sti
mov
cmp
cli
fs
jnp
mov
mov
sahf
cmp
cmp
add
push
and
jp
insb
push
jb
mov
push
ds
stos
pop
or
adc
xchg
adc
int
sbb
mov
sbb
xor
scas
or
sti
mov
jnp
jp
cli
mov
mov
lods
mov
and
in
aad
cmp
les
stos
int
xor
jp
add
cmc
and
cli
js
jecxz
sbb
fsubs
gs
out
mov
std
cltd
int
stc
mov
arpl
fmul
pop
jge
mov
jl
mov
mov
cmp
call
jno
xor
inc
std
adc
adc
gs
sarl
hlt
sub
sbb
mov
mov
inc
push
push
and
jge
sub
movsb
push
push
lods
pop
jno
stos
sub
sub
rcll
repz
scas
pop
jl
adc
mov
mov
nop
mov
pop
cmp
sbb
add
test
dec
mov
mov
sub
arpl
movsl
push
pushf
dec
mov
cli
popa
into
test
lock
mov
cmpsb
sub
cmp
cld
jo
mov
xor
ss
pop
aam
dec
mov
push
sub
pop
push
sbb
jecxz
out
cmp
push
insb
cli
enter
int
or
xchg
mov
fcomps
rol
loopne
push
jge
lret
test
enter
mov
pop
mov
fistpll
pop
lret
xchg
repz
mov
jne
aaa
movsl
sub
and
sbb
inc
pop
das
add
repz
loopne
and
imul
addb
add
in
add
push
mov
std
mov
int3
imulb
inc
gs
sub
pop
cmp
cmp
stos
repz
test
cs
and
mov
stc
lret
or
fstp
adc
shll
aas
imul
mov
arpl
cmpsl
lods
arpl
xchg
add
inc
sti
inc
jle
in
popa
lods
xchg
nop
imul
sub
mov
jbe
imul
sbb
out
sbb
inc
in
mov
lods
daa
stos
cmp
fptan
icebp
les
loope
jbe
and
dec
out
mov
scas
insl
sahf
sub
loope
scas
dec
out
subl
and
mov
and
dec
cld
enter
lret
outsl
aaa
cmpb
or
pop
adcl
mov
jl
popa
push
sbb
or
add
outsl
or
push
inc
pop
mov
xchg
jo
push
fdivrl
add
shrl
insl
jl
popa
sbb
bound
arpl
jne
mov
imul
lcall
pop
cmp
dec
aas
mov
xor
cmp
pop
dec
mov
testl
add
pop
inc
sbb
dec
xchg
repz
clc
loope
cmpsb
imul
ret
or
sub
fs
in
imul
sti
inc
shrb
sbb
push
pop
mov
test
notb
cmp
mov
inc
cli
sub
adc
sti
js
xchg
push
mov
pop
sub
mov
lcall
pushf
insb
push
sub
dec
jl
outsb
and
mov
bound
jno
push
pushw
inc
push
cmp
inc
push
pop
lods
test
pop
mov
mov
test
movsb
ret
pop
cwtl
cwtl
or
xor
leave
ljmp
mov
xor
or
push
and
popf
clc
imul
arpl
dec
addr16
rcll
dec
ss
mov
and
xchg
notl
xchg
dec
inc
in
mov
aas
mov
fiadds
mov
and
shlb
push
mov
repz
jns
dec
cmp
cmp
shr
insl
mov
pop
push
and
fwait
cld
fstp
pusha
data16
jae
cmp
mov
mov
iret
hlt
hlt
jns
add
outsl
sahf
mov
sub
inc
testb
leave
lcall
xchg
repnz
lret
xchg
insl
scas
mov
frstor
aam
arpl
sti
pop
loop
cmp
add
sbb
cmc
fistps
icebp
mov
push
das
mov
imul
mov
jmp
pop
imul
adc
push
outsb
mov
sub
pop
cmpsb
pusha
jmp
sub
das
push
div
and
jg
mov
in
or
lods
jg
adc
cmp
ja
jp
or
jle
mov
mov
loop
sub
mov
sbb
aas
mov
scas
sahf
jecxz
push
out
or
xor
lret
jnp
aaa
mov
scas
scas
push
lods
stos
xor
stos
mov
push
jb
inc
dec
dec
cs
push
aas
lret
mov
sbb
cld
cmp
and
and
xlat
inc
loopne
mov
in
lcall
js
pop
movsb
imul
dec
mov
push
lcall
addr16
cmp
jne
mov
add
lock
pop
pop
mov
adc
xchg
dec
jne
jg
add
push
dec
inc
pop
jg
pop
sub
mov
and
push
xor
xchg
in
mov
mov
pop
push
jae
repz
popa
dec
out
mov
flds
pop
into
ds
lods
pusha
and
nop
and
or
mov
sbb
cmp
mov
push
bound
xor
fbld
xchg
lcall
out
pop
popa
add
aas
and
cmp
sbb
xor
mov
ss
scas
jae
pop
xchg
adc
xchg
push
je
xchg
sub
push
ficomps
outsl
mov
add
mov
ds
sub
int
in
and
in
xchg
jno
out
jge
sbb
add
nop
mov
jp
adc
xchg
or
adc
in
xor
or
mov
pop
andb
sub
or
cmpsb
loopne
in
in
add
jp
stc
test
pop
sub
sahf
cld
gs
pop
mov
mov
adc
push
mov
mov
js
and
mov
mov
dec
into
imul
mov
bound
mov
lods
mov
mov
mov
stc
stos
mov
mulb
aam
and
aas
cmp
and
test
adc
push
cwtl
add
add
aad
stos
adc
xor
cmp
call
cmp
mov
stos
mov
iret
lods
imul
adc
cmpsb
cmpsb
pop
mov
xchg
dec
sti
fs
cmp
push
fdivr
in
mov
mov
pop
adc
inc
xchg
or
and
inc
push
aaa
sub
xor
cmpsb
mov
inc
sub
push
mov
cwtl
inc
add
xchg
sahf
ret
jnp
movsb
clc
push
test
arpl
rcr
pop
cmc
pop
sub
pop
push
xchg
fdivrs
pop
es
push
mov
add
push
dec
bsf
pop
popa
lods
mov
mov
stos
in
insb
jnp
and
cmp
and
loop
cmp
rcr
mov
mov
push
stos
sti
les
call
ret
inc
or
and
xlat
je
sti
sub
sub
jl
clc
pop
sub
std
pop
or
and
sahf
movsl
repz
and
stc
mov
pop
subl
adc
xor
sbb
mov
lds
xlat
xchg
jns
mov
mov
out
push
js
pusha
pop
test
gs
push
fcomps
lods
in
imul
jbe
mov
es
jns
and
adc
rcll
dec
jo
outsb
cmp
xor
push
and
inc
daa
sti
mov
cmpsb
mov
cs
mov
dec
sarl
cld
jno
jne
iret
int3
stos
sbb
and
lahf
sub
les
jnp
cmpl
push
and
jl
cli
call
xchg
aaa
hlt
movsb
sub
lods
ror
mov
lods
insb
aaa
repz
fstl
dec
jecxz
push
leave
mov
inc
add
fisttpll
loopne
lock
and
sbb
lods
xchg
rcrb
or
cmp
sbb
nop
rcrb
and
pop
push
rcll
das
xchg
hlt
sbb
subb
sub
or
xchg
inc
rep
xchg
xchg
and
xor
loopne
xchg
mov
cmp
subl
sub
test
inc
sti
imulb
outsb
imul
adc
es
cwtl
add
jle
lods
scas
sub
dec
inc
lcall
test
push
add
rcrb
dec
gs
pop
pusha
dec
inc
push
push
mov
popf
inc
out
les
xchg
push
dec
pop
push
cmp
ljmp
outsl
js
xchg
fs
xchg
aaa
add
cli
popa
or
dec
add
ja
pusha
jl
lods
inc
pop
xchg
mov
xchg
hlt
aam
cmp
ret
or
shrl
lea
loop
mov
inc
popf
dec
or
mov
and
es
outsl
cmp
pushl
xchg
int
xor
mov
adc
cmp
not
in
and
sahf
add
outsb
imul
mov
dec
lods
pop
stos
imul
inc
sbb
fisttps
jnp
mov
outsl
jne
test
in
mov
jb
inc
mov
insb
pop
mov
jno
and
mov
lahf
das
sbb
xchg
sbb
fdivrl
push
mov
cmp
push
dec
outsb
idivb
dec
fwait
xchg
test
aaa
inc
inc
sti
dec
mov
test
jle
hlt
or
addr16
inc
jo
dec
add
pop
pop
sti
xlat
aas
push
push
aas
push
stos
loopne
and
aas
pop
das
add
imul
js
outsb
and
popf
or
jl
add
aaa
cli
loop
inc
mov
adc
imul
js
jp
push
push
icebp
or
and
ret
dec
lods
lcall
mov
loopne
or
movsb
xchg
rcr
sbb
scas
sub
mov
xchg
pop
jge
mov
cmp
mov
int
stos
inc
jl
jecxz
bound
test
lret
xchg
out
and
in
jle
lcall
sub
pop
fidivs
imul
dec
jp
es
stos
stos
mov
arpl
mov
xchg
aam
push
jo
dec
jnp
mov
int
stc
dec
out
mov
or
daa
push
mov
jno
sbb
call
test
jne
fisttpll
loop
inc
outsl
mov
ret
sub
jle
outsb
lock
loopne
mov
inc
sub
and
fs
inc
iret
cmp
loopne
daa
cmp
insb
sub
and
inc
aad
add
scas
mov
push
adc
in
sub
popf
add
mov
test
movsl
cmp
xchg
out
cmp
les
jp
cli
mov
js
adc
je
cmc
fmuls
imul
jae
nopl
gs
dec
clc
gs
addr16
cwtl
setno
test
loope
jmp
mov
push
push
or
push
pop
das
mov
pop
push
cmp
cmp
sbb
pop
stos
cwtl
push
pushf
out
shrl
scas
jne
jge
cwtl
jne
hlt
shrl
dec
cmc
xorb
mov
insb
xor
and
popf
test
hlt
pop
sbb
add
push
gs
xor
ret
hlt
aaa
movsw
and
loopne
adc
jae
push
in
imul
test
xor
xchg
push
js
hlt
int
jae
mov
cld
mov
jge
jnp
adc
cmp
cwtl
push
adc
or
subb
arpl
add
ja
pop
mov
sbb
mov
inc
sti
xor
fisubs
pop
sub
clc
push
test
and
sbb
jge
std
jb
icebp
cmp
mov
out
mov
pop
sbb
jmp
dec
int
in
mov
arpl
arpl
pushf
js
cli
pop
jno
cmp
push
sbb
je
mov
and
and
push
and
dec
ja
and
in
jae
inc
js
jns
outsb
pop
adc
je
push
cmp
movsb
lds
jnp
and
dec
and
mov
cmp
mov
lods
mov
popa
jl
lods
out
push
shl
jae
test
mov
loopne
and
lods
lea
inc
adc
inc
outsl
fiadds
outsl
inc
jmp
push
fcompl
sti
testb
pop
pusha
pop
sub
gs
mov
daa
lods
cmp
mov
mov
in
adc
sti
xor
and
or
push
shlb
sub
movsb
push
cmc
js
pushf
xor
sub
movsl
lods
inc
jle
stos
pop
dec
and
imul
movsb
lods
out
dec
bnd
push
xchg
jne
popa
mov
movl
sarl
jge
test
js
adc
pop
scas
xor
les
inc
sbbl
and
out
fimull
inc
sbb
imul
cmpsb
inc
int
in
mov
loop
movsb
lock
jnp
jg
popa
jecxz
sbb
int3
jg
pop
push
jle
loop
sub
push
sub
cmp
cmp
test
cmpsl
mov
nop
test
mov
jg
jecxz
sbb
push
inc
mov
xchg
pop
mov
and
mov
pop
xorl
leave
data16
das
cmp
cmp
lret
mov
test
pusha
xor
mov
test
jle
mov
in
fucomip
int3
and
aaa
lods
insl
and
test
push
into
pop
and
xchg
jg
aam
call
mov
mov
and
sub
push
das
jno
add
mov
pop
and
in
add
inc
test
jae
sub
mov
out
out
dec
scas
ja
sub
clc
add
addr16
pop
xchg
lahf
or
dec
lcall
popa
push
test
daa
jo
xchg
loope
and
cmpsb
pop
or
pop
pushf
sbb
jle
movl
pop
jbe
rcr
or
pop
arpl
sub
sub
xchg
mov
hlt
mov
xchg
push
jns
dec
push
jg
movsb
cs
mov
adc
cli
aaa
pop
imul
movsl
sub
popa
lods
fmul
mov
and
inc
xchg
les
das
xchg
lret
and
inc
or
sub
jmp
fstps
push
js
mov
sub
cmp
lea
xchg
test
scas
push
mov
out
push
sub
jne
dec
and
stc
cmp
out
jno
adcb
push
and
mov
int
push
mov
adc
add
push
jnp
push
xchg
and
sbb
pop
repnz
in
fs
inc
xor
inc
inc
jge
and
and
mov
mul
sbb
in
add
loope
pop
ret
jecxz
pop
js
dec
mov
xlat
push
xor
fistl
inc
cmp
outsb
fidivl
lods
int3
inc
icebp
pushf
arpl
inc
call
in
sbb
ljmp
lahf
loope
out
sbb
stos
jo
jl
and
mov
or
sub
or
push
bound
imull
inc
and
jg
inc
jns
jmp
cmp
es
dec
int3
adc
lcall
dec
dec
in
dec
push
mov
test
sbb
imul
inc
inc
test
je
ljmp
pusha
mov
mov
pop
lea
mov
hlt
pop
or
pop
xlat
dec
push
mov
imul
mov
roll
mov
cmp
adc
filds
add
icebp
in
adc
aam
lods
cmpsl
mov
fstps
jno
pop
mov
clc
js
daa
mov
jnp
mov
pop
push
outsl
xchg
mov
int3
cmp
outsl
sbb
and
mov
imul
mov
push
iret
lods
sbb
test
lods
mov
adc
xchg
sbb
and
dec
push
jne
cmp
dec
andl
jecxz
jmp
mov
or
add
repz
push
scas
jb
lret
xchg
shll
cmp
xchg
inc
daa
push
mov
cmp
inc
sbb
lret
insb
sti
mov
dec
and
popf
fwait
sub
jecxz
xchg
jns
and
mov
lea
sbb
mov
das
add
mov
sub
push
jne
int
mov
scas
test
dec
pop
rorl
sub
dec
jle
mov
gs
stos
push
sub
push
or
pusha
jo
jnp
cld
dec
inc
or
cwtl
mov
cmp
add
dec
mov
das
repz
mov
inc
xchg
arpl
je
out
clc
jle
xchg
out
adc
inc
jns
add
mov
in
mov
loope
push
outsl
sbb
jno
xchg
add
popf
shlb
and
xchg
cmp
arpl
ds
aas
xor
loop
fadd
outsb
push
daa
cmp
stc
adc
cmp
das
ret
dec
scas
push
lret
push
or
xlat
add
dec
mov
lea
mov
gs
outsb
or
dec
mov
mov
adc
xor
mov
mov
mov
xchg
xchg
or
jae
mov
cmp
mov
popa
lretw
sbb
inc
xor
sti
cmp
or
scas
add
cmp
lcall
scas
jae
add
and
sti
jmp
insb
lods
pusha
idivb
in
mull
xor
dec
mov
sbb
mov
aad
push
out
xor
mov
pop
mov
sbb
sbb
xor
ljmp
mov
inc
cld
insb
dec
cmp
and
push
aam
xchg
jae
scas
in
mov
fsubrs
push
mov
mov
jl
aaa
add
cmp
cmpsl
cli
mov
imul
cmc
fdivl
and
jmp
cmp
mov
or
push
and
stos
in
xor
push
cmpsb
jae
arpl
sbb
jae
test
lods
mov
aas
nop
pop
mov
push
stc
pop
stos
inc
lods
lahf
imul
dec
sahf
jge
movsb
adc
jae
aam
loopne
je
push
outsb
dec
fistps
and
jnp
adc
out
adc
xor
dec
cmpsl
popa
cmpsb
jl
dec
inc
inc
sti
add
insl
mov
cmpsb
aas
cmc
daa
sub
stos
and
test
push
loopne
enter
subl
xchg
ljmp
movsl
sti
fcoms
and
sti
sub
cmp
cwtl
jp
mov
or
jns
jno
jnp
pop
test
push
popa
and
jne
sub
gs
pop
sbb
mov
push
sbb
dec
adc
push
cmpsl
movsl
leave
and
clc
add
xchg
inc
and
mov
cld
or
pop
jmp
cltd
jne
dec
std
mov
outsl
cli
pop
ljmp
enter
fiadds
decl
cltd
mov
and
push
lret
mov
outsl
in
jb
adc
mov
pop
cmp
das
and
cmp
ficoml
inc
test
cli
mov
and
sub
insb
push
lret
test
lods
std
imul
jbe
jno
jp
sahf
pop
sub
xchg
or
cmp
sbb
scas
fistpll
push
nop
cmc
pop
nop
outsb
lods
cmpsb
popa
add
cmpsl
pop
icebp
arpl
int
xchg
icebp
xchg
jl
loopne
inc
test
les
mov
push
mov
push
mov
xchg
cmp
jp
push
or
mov
and
sub
mov
push
ljmp
int
jmp
pushf
jae
inc
xchg
sbb
sti
mov
dec
mov
mov
xchg
nop
inc
jge
mov
mov
lcall
lcall
mov
jno
adc
movsl
jl
mov
jae,pt
test
dec
dec
inc
jp
test
xor
or
jmp
cmp
movsl
cli
sbb
pop
mov
popa
lods
insl
gs
imul
jno
pop
ds
xchg
mov
mov
dec
lret
inc
jb
popa
jle
lock
imul
std
mov
push
dec
jmp
aad
ja
adc
mov
fiadds
mov
and
push
push
cmpsl
ds
mov
dec
mov
sbb
adc
push
mov
mov
stos
adc
jns
jns
and
cmpsb
movsb
xchg
adc
into
cli
push
stos
push
or
es
jmp
lods
add
cld
test
sub
adc
jbe
mov
je,pn
pop
xchg
int3
add
mov
sub
sti
cmp
adc
clc
push
je
inc
add
mov
pop
fstpl
mul
sbb
dec
mov
jae
divl
into
cltd
jg
mov
cmpsb
jp
cmc
test
mov
mov
cmp
push
cmp
in
out
sub
stc
pusha
add
mov
xchg
scas
aas
pop
fbstp
je
mov
mov
mov
leave
ja
jae
arpl
gs
mov
inc
mov
iret
ja
popf
aad
dec
ss
sbbb
cmp
push
call
loopne
xchg
lods
cmpsl
push
jge
movsl
pop
or
mov
andb
jmp
gs
pop
jno
sbb
mov
push
mov
mov
bound
and
cmp
repz
cmp
shrd
inc
adc
cltd
andl
icebp
sub
add
mov
test
cmpl
rclb
je
jb
jno
and
or
dec
xchg
andb
or
mov
mov
gs
mov
push
scas
repnz
push
test
xchg
add
sub
ljmp
mov
repnz
mov
and
or
sub
fwait
jns
frstor
cmp
sub
aam
mov
aaa
push
xchg
insl
mov
ud0
sbb
xchg
popa
sub
fwait
jne
pop
inc
fwait
cmp
mov
pop
fwait
cmpsb
scas
aas
outsb
cld
push
cmp
xchg
rolb
lods
inc
imulb
bound
test
inc
mov
xchg
mov
jmp
in
pop
inc
stos
jl
daa
incb
dec
pushf
lods
xchg
sbb
mov
jp
jle
cltd
test
push
or
testb
loope
cld
push
data16
xchg
rcrb
movsl
adc
movsb
rcrb
movsb
mov
or
inc
push
xchg
push
ret
ja
adc
sti
movsl
sbb
fmuls
lahf
pop
mov
sub
pop
dec
pop
xor
aas
adc
add
stos
ds
cmc
aaa
lds
xchg
cmp
mov
insb
pop
out
add
shll
mov
gs
test
ds
mov
outsb
pop
push
dec
push
cmp
fidivs
lods
mov
iret
inc
out
std
adc
add
mov
xchg
pop
or
aam
xor
ss
mov
pop
sbb
mov
mov
mov
sub
cmpsl
push
push
jne
cmp
mov
ret
and
mov
add
test
mov
cmp
push
jbe
dec
lods
scas
sbb
rorl
mov
mov
loopne
dec
xor
dec
xor
or
out
add
mov
xor
pop
xchg
hlt
rcrl
cwtl
lea
jns
pop
test
into
mov
outsl
dec
inc
xchg
into
inc
divb
sub
cmp
negl
add
pop
xchg
sbb
push
xchg
cmp
jbe
mov
push
js
and
pushl
dec
mulb
add
cmp
imul
insb
js
jle
mov
or
cmp
decb
call
ret
les
jno
stos
mov
push
xchg
out
sub
mov
inc
push
jnp
mov
sub
push
aaa
divb
cmp
pusha
cmp
push
push
ss
orb
adc
rcr
xor
push
sub
cmpsl
pop
das
test
and
loopne
lds
sub
push
pushf
insb
loope
out
mov
and
addr16
dec
fisubs
mov
arpl
pop
push
insb
ret
pop
push
insl
ret
popa
push
outsb
iret
add
xor
mov
xchg
xchg
out
sub
dec
imul
and
inc
add
loopne
stos
js
popa
inc
ret
aas
cmc
pop
int
mov
into
roll
add
outsb
fs
push
mov
ror
mov
pop
das
pop
cmp
xor
js
xor
mov
dec
rolb
lds
call
addr16
xchg
adc
xor
out
inc
adc
daa
inc
add
test
sub
call
sbb
aaa
in
mov
aaa
in
xchg
cmp
mov
add
push
adc
fildl
scas
mov
mov
outsl
aas
pop
test
pop
push
xor
arpl
sbb
fimuls
pop
xor
aam
cmp
inc
mov
mov
ja
or
in
mov
fistpl
inc
xor
addr16
xchg
inc
xchg
push
mov
cmpsb
daa
jno
repz
xchg
iret
rolb
ljmp
jo
arpl
mov
inc
sbb
pop
cmp
mov
or
push
cli
push
gs
mov
pop
mov
nop
dec
sub
subb
xor
push
lods
adc
sub
fbld
add
mov
push
jne
cmp
ja
int3
ss
jns
jno
sbb
mov
adc
inc
jg
inc
gs
adc
int
inc
cmp
addl
adc
aam
sub
dec
and
cmp
movsb
pop
lea
movsb
clc
sub
cmp
pusha
loopne
sub
je
xchg
jp
mov
sub
inc
out
pop
das
aaa
das
imul
iret
outsb
test
inc
imul
lret
cmpsb
mov
xchg
data16
push
ficompl
cmpsb
pop
imul
sti
arpl
rcr
inc
jno
sbb
popf
pop
pop
out
je
aaa
ja
jmp
push
push
mov
push
xchg
mov
push
dec
pop
scas
pushf
es
cmpsl
sub
cmpsb
push
cwtl
lock
pop
imul
push
fiaddl
sti
cmpsb
and
inc
mov
test
push
inc
fwait
icebp
sti
xchg
mov
jbe
imul
pop
push
test
ror
mov
jl
cmpb
sti
dec
adc
and
movsb
call
shrl
sbb
jmp
fidivrs
jle
lahf
lds
lods
dec
or
enter
and
pop
add
lahf
add
psubb
adc
lea
movsl
imul
inc
sbb
bound
push
inc
and
negl
ss
inc
lods
cmp
push
push
hlt
sub
xchg
repz
popa
add
pop
pop
mov
xor
push
push
mov
sbb
push
pop
jae
sub
or
dec
inc
loop
sbb
dec
loop
in
cmp
or
or
mov
xor
dec
pop
and
inc
sub
xchg
mov
fisttpll
movsl
xor
push
jp
and
and
arpl
push
dec
cmpsl
inc
mov
insb
xor
dec
pop
pop
enter
clc
jo
sarl
cmp
xor
stos
sub
adc
add
lock
dec
add
mov
movsb
cwtl
arpl
aad
roll
sbb
jg
and
pop
sbb
out
mov
jg
jg
pusha
sub
mov
adc
dec
lahf
sub
popa
or
das
pop
filds
cmp
call
cmp
jno
sub
clc
push
jecxz,pt
and
les
sub
mov
mov
popa
ficomps
push
xchg
mov
adc
sbb
inc
imul
sub
or
inc
es
sbb
jle
pusha
into
aaa
imul
icebp
xchg
and
or
sbb
and
sbb
addr16
std
push
mov
out
sub
lock
call
ss
pop
ds
adc
mov
fstpl
jns
arpl
dec
jnp
cltd
cmp
lcall
imul
lods
fcomps
dec
cli
jo
cmp
and
pop
mov
cld
xor
mov
inc
xor
mov
xor
push
mov
xchg
shl
das
pop
cmp
bound
dec
inc
loopne
loopne
out
cmp
sub
inc
push
xchg
jg
push
cmp
popa
jl
mov
xlat
aam
mov
push
call
ret
cltd
out
scas
mov
mov
cmpsl
mov
or
scas
test
or
scas
daa
mov
cli
mov
int3
cmc
and
mov
xchg
repz
fimuls
mov
ja
out
mov
scas
mov
movsl
and
cs
push
xor
stos
mov
push
jg
lock
ja
es
ja
dec
out
pop
sar
stos
adc
mov
mov
je,pn
mov
fwait
and
rcll
xor
fidivrl
adc
mov
push
and
sbb
cmp
xchg
jl
xchg
jo
mov
jbe
inc
ret
xchg
psllq
out
out
das
aad
dec
aam
idivl
shlb
xchg
lock
ljmp
inc
or
negb
mov
scas
cld
xor
imul
into
mov
jg
mov
sub
addr16
inc
ret
add
add
addr16
lret
jle
addr16
aas
out
cmp
insb
lods
out
cmp
cmc
nop
ss
jo
mov
mov
jle
cmp
add
add
ret
cwtl
ffreep
add
mov
sub
jno
xchg
loopne
dec
xchg
dec
mov
dec
iret
mov
fcmove
push
adc
mov
dec
mov
daa
pop
cwtl
decb
mov
cmp
push
into
and
pop
cmpsb
push
pop
ja
movsb
mull
out
jge
mov
sbb
addr16
jl
and
push
xchg
sbb
lods
xchg
out
scas
or
test
add
pop
or
pop
jl
cmp
and
subl
imul
aaa
insl
outsl
dec
cltd
rcrb
mov
mov
inc
mov
adc
mov
inc
sbb
or
addb
push
ljmp
mov
mov
push
jg
jle
cmp
mov
notb
jno
fbstp
pop
dec
adc
shrl
cwtl
scas
push
and
pushf
mov
push
push
fwait
aas
ss
pop
outsl
insb
scas
mov
mov
push
xchg
fs
and
ret
ret
jnp
not
jp
imul
hlt
rcrl
mov
int
push
into
repz
inc
or
mov
inc
loope
push
sbb
pop
mov
and
lods
rolb
sub
cmp
out
and
cli
xchg
movsb
adc
das
cmp
sbb
mov
pop
pop
dec
pop
xor
test
and
sbb
fsubl
ss
inc
dec
lahf
cmpsl
fs
sbb
adcl
push
into
mov
rorb
push
scas
jns
idivl
sub
jmp
mov
mov
out
pop
icebp
pop
out
mov
and
mov
inc
lods
movntps
faddl
outsl
and
or
outsb
lods
out
lock
push
test
in
pop
outsb
xchg
xchg
shrl
mov
and
xor
sbb
push
out
sub
jg
inc
cld
jecxz
mov
cmp
hlt
xlat
add
pop
inc
nop
and
std
dec
push
pop
pop
pop
add
jge
add
addb
push
adc
cmp
subl
mov
adc
js
xor
xor
mov
outsl
cmp
movsb
std
fnsave
in
inc
sbb
mov
pop
jge
fstpt
push
imul
dec
lods
scas
pop
out
imul
adc
add
mov
sbb
mov
pop
inc
inc
aas
inc
lods
xchg
cmp
int
push
movsb
mov
fsubrl
out
xor
movsl
mov
pop
fisubrs
mov
inc
testl
lods
lret
add
dec
mov
lods
lods
sub
mov
push
out
jl
or
sub
daa
hlt
sub
fwait
loope
mov
push
cs
dec
cmp
sub
dec
rcrl
inc
arpl
inc
dec
push
scas
ja
and
mov
and
mov
adc
jb
leave
int3
or
mov
fdivs
push
push
jge
movsl
adc
mov
sbb
std
and
xor
clc
jo
mov
ret
push
cld
sti
not
mov
jns
inc
repnz
sbb
sbb
mull
inc
and
dec
mov
shlb
je
ds
iret
sub
jle
psubsb
mov
or
xor
pop
mov
or
inc
pop
mov
sbb
jne
lret
adc
cmc
faddl
es
imul
push
dec
jmp
movl
fisubl
jmp
in
and
jne
out
pop
aam
xlat
outsb
xchg
ss
jl
dec
mov
mov
pop
jge
pop
sub
lods
dec
test
inc
daa
mul
lods
or
lret
and
and
push
jbe
cmpsb
gs
arpl
jecxz
cs
add
sub
xor
and
inc
cmpsl
movntq
js
push
je
jl
cmp
mov
scas
loope
test
std
test
mov
arpl
inc
cmpsl
sub
cmp
ret
lahf
and
sbb
pop
mov
mov
lock
mov
adc
ficoms
pop
test
jae
xor
adc
ja
int
arpl
das
jg
mov
mov
addr16
xchg
push
je
add
or
cmp
in
es
lods
dec
shrl
out
sub
scas
add
std
mov
nop
inc
dec
in
add
daa
in
mov
push
outsb
arpl
cmp
lcall
pop
jns
push
mov
popa
rolb
adc
push
mov
lcall
sub
mov
out
add
pop
loope
jbe
lods
push
pop
inc
mov
dec
fdivrs
out
cmp
je
xor
inc
and
push
gs
dec
or
mov
lea
cmp
mov
dec
fwait
js
je
adc
mov
or
push
mov
mov
mov
addr16
stos
xchg
popa
sub
leave
pop
mov
addr16
dec
jbe
lret
xor
add
adc
test
dec
mov
aaa
out
out
inc
xorb
movsl
jmp
outsb
in
fistpll
loope
into
out
push
fs
ja
test
clc
dec
push
add
cli
pop
nop
pop
sbb
cli
movsb
xlat
add
push
mov
pop
cli
mov
outsb
pop
pop
jae
mov
popa
xor
ss
out
dec
sub
jo
lcall
xchg
int3
js
sbb
lret
sbb
add
mov
out
iret
jl
and
sahf
push
mov
mov
mov
sub
push
mov
mov
push
lret
sub
divl
test
fsubl
repnz
sar
lea
adcl
lret
loopne
fmuls
aam
and
test
es
jno
cmp
and
out
pop
sbb
lcall
push
repz
add
sar
mov
xor
nop
jo
and
pop
jmp
pop
ja
xor
divl
xchg
xchg
jae
movsl
enter
and
jp
aad
inc
cmc
pop
hlt
sub
loope
test
pop
push
ret
xchg
pusha
sbb
mov
push
lods
les
daa
dec
lea
jnp
jnp
push
jl
sub
insl
sbb
push
jecxz
sub
push
push
sar
xor
das
xchg
push
loopne
gs
sbbl
mov
jl
xor
fs
or
js
mov
cmp
imul
lea
xchg
clc
jmp
arpl
outsl
bound
inc
and
mov
shll
out
push
cmpsb
test
pop
in
xor
and
xchg
cltd
push
sbb
sbb
push
aaa
and
jnp
push
push
in
inc
and
jbe
fsubl
pop
sub
lahf
stos
inc
add
mov
outsl
push
addb
add
inc
pusha
je
fwait
mov
lret
movsl
dec
lods
mov
rolb
jg
cmp
pusha
cwtl
xchg
mov
sbb
pushf
mov
iret
ret
sub
insl
test
sub
mov
mov
in
xchg
xchg
cltd
fsubrl
mull
shlb
stos
lea
adc
mov
mov
imulb
push
sbb
push
scas
in
test
push
add
lret
xchg
into
push
into
cs
rorb
gs
inc
imul
pop
sbb
sub
sub
dec
pop
sbb
pop
lods
inc
cltd
and
jp
pop
icebp
call
repnz
ljmp
xchg
je
sahf
cmp
cwtl
xchg
mov
mov
pop
inc
mov
and
jns
push
inc
outsb
add
cmp
int3
xor
cmp
cmp
sarl
ffree
js
stos
stos
in
outsb
push
jns
pop
sub
data16
pop
push
mov
stos
adc
sub
sti
cmp
out
stos
and
scas
je
pop
or
push
mov
cmpsl
pusha
jo
inc
adc
insb
je
xor
jae
test
outsl
dec
and
mov
jb
push
adcb
push
push
test
dec
add
insb
bound
mov
cwtl
xchg
lret
cmpsb
insl
adc
jge
adc
imul
mov
jo
jecxz
shlb
mov
or
sti
je
lcall
xchg
imul
cmp
daa
daa
cmp
add
ret
and
add
mov
in
test
mov
imul
aaa
dec
adc
aad
icebp
sbb
push
push
mov
mov
in
outsb
cli
pop
push
xchg
hlt
clc
adc
imulb
sbb
imul
in
decb
loope
jp
add
mov
in
in
and
loope
cmpsb
xlat
dec
bnd
repz
out
mov
mov
in
outsb
ficompl
xchg
aam
xor
scas
xor
cmp
imul
out
ret
daa
test
fists
and
add
mov
in
lds
mov
imul
mov
stos
pop
push
scas
cld
inc
xor
mov
and
push
sbb
push
fidivrl
pusha
je
jge
inc
nop
js
xchg
addb
cmpsb
xchg
lcall
nop
dec
ficomps
in
adc
and
dec
adc
test
xchg
je
pop
out
sub
pushf
and
sahf
test
adc
stos
icebp
cmc
in
dec
movsb
adc
stos
jl
and
xchg
mov
js
pop
mov
mov
popa
fs
or
add
xchg
xchg
add
cmp
cmp
xorl
in
aaa
mov
imul
adc
inc
lcall
inc
mov
adc
mov
repnz
dec
stos
out
adc
sbb
sbbb
mov
push
clc
cmp
clc
sub
cmpsb
jl
dec
sbb
mov
and
add
lods
jno
mov
pushf
arpl
ret
mov
outsb
jb
movsl
ret
lcall
push
mov
xor
je
sub
cmp
xchg
xchg
cmp
shld
bndldx
dec
cmpsl
jb
lods
aam
jne
and
inc
dec
ljmp
push
mov
das
adc
jmp
aas
push
mov
xor
mov
andl
fisttpll
out
mov
cmp
xrelease
mov
or
test
mov
fwait
mov
fcompl
push
movsb
mov
and
mov
scas
loope
mov
pop
cli
jnp
lahf
repz
add
movsl
jae
adcb
aas
inc
je
aas
mov
jle
lcall
mov
mov
add
add
stos
in
aam
cmpsl
inc
mov
repz
pop
in
testb
fistpll
add
mov
sub
outsl
sub
adc
push
xor
mov
aad
nop
dec
push
jle
add
add
out
fsubrl
add
mov
jbe
addb
mov
in
xchg
movsl
sub
outsl
dec
stc
aad
outsl
and
outsb
test
mov
sbb
and
xor
inc
movsl
call
jg
bswap
add
bound
shrl
movsb
dec
mov
mov
in
popa
dec
and
mov
sti
push
adc
and
pop
dec
and
mov
add
add
imul
in
push
lods
adc
negl
fwait
push
pop
mov
pushf
cwtl
inc
jae
and
inc
fisubrl
xor
and
add
jo
sbb
pop
fmuls
cmp
ljmp
push
xchg
lea
cmp
and
repnz
lods
inc
adc
add
jns
inc
test
ret
lea
mov
iret
adc
aam
add
js
jns
dec
cwtl
add
pop
and
movsb
ret
jl
lea
imul
cmp
xchg
test
cwtl
int
pop
fistpl
js
addr16
sbb
fdivrs
push
out
and
mov
pushf
ja
fdivl
fwait
mov
dec
mov
add
push
xchg
shr
roll
mov
ret
adc
mov
call
int
cltd
sbb
lds
add
and
jb
ljmp
mov
pop
mov
and
in
xchg
adc
int3
hlt
pop
enter
inc
or
mov
loope
cmpsb
insb
ds
jne
shrl
or
pop
pop
cld
sbb
jnp
and
imul
sbb
stc
push
inc
jle
dec
xchg
shrl
fsubrs
push
mov
xchg
or
pop
scas
cmpsl
scas
and
mov
mov
add
in
arpl
mov
fsubrl
fs
incb
stos
push
mov
sub
push
sbb
sbb
pop
das
sarl
es
ret
arpl
test
cmpl
or
loopne
leave
out
loopne
in
mov
in
mov
jle
outsl
sub
jp
mov
repnz
push
jo
jnp
push
das
je
das
loopne
cmpsl
jg
push
add
adc
xchg
cmp
mov
mov
cwtl
sbb
and
or
outsl
push
dec
and
adc
sarl
inc
mov
jb
add
inc
jnp
insb
stc
rorb
xchg
aas
cmc
dec
add
cmp
cmpsb
js
push
or
test
insl
test
jge
lcall
push
mov
inc
out
out
lods
cmpsl
cwtl
mov
jbe
xor
mov
jb
movsb
ret
popa
sub
push
popa
or
in
push
repnz
movsb
push
mov
shll
sbb
cmp
gs
add
or
push
jecxz
scas
pop
iret
and
das
add
pop
sbb
mov
in
stos
xchg
push
scas
jecxz
rcrl
scas
scas
xor
nop
out
in
scas
dec
push
daa
nop
scas
mov
xorb
mov
sub
cmpb
and
cld
pop
pop
and
scas
push
push
fldt
or
test
movsb
testb
mov
adc
and
xchg
outsl
inc
mov
loopne
out
fdivr
jg
insl
lahf
arpl
add
adc
sbb
shlb
inc
jg
sub
fs
pop
shll
and
mov
sub
or
xor
test
sub
jle
lds
jbe
outsl
pop
jae
cld
iret
ja
dec
das
aam
inc
test
stos
in
test
pop
mov
fstps
push
mov
outsb
jl
jge
fstpt
fs
dec
adc
push
lods
aas
push
push
inc
inc
hlt
inc
mov
push
andl
cld
push
lds
pop
cli
cmp
int
das
xor
mov
jl
sbb
shr
gs
scas
dec
sbb
or
and
cmp
addr16
ljmp
test
sbb
outsb
jns
cmc
dec
rcrl
fiadds
std
push
jmp
mov
aam
pop
stos
jae
js
jg
shll
mov
sbbl
mov
adc
inc
cwtl
xchg
in
cmp
push
xor
pop
scas
arpl
dec
aas
out
pop
mov
insb
cmc
or
push
adc
hlt
lret
in
add
jp
add
negl
in
mov
scas
pop
jns
cmp
pusha
mov
scas
mov
rolb
mov
in
std
popa
stos
or
mov
cmc
cmp
in
test
pop
adc
bound
inc
push
jp
dec
into
lods
jnp
sbb
push
cmp
push
xchg
jp
mov
lods
data16
jne
inc
xor
lods
inc
sub
pop
mov
jnp
loopne
jno
jp
loopne
das
pop
outsl
jne
mov
mov
lea
mov
xchg
mov
jns
shlb
stc
adc
ret
leave
push
jmp
push
and
lds
mov
sub
dec
push
les
and
xor
dec
test
push
imul
or
lret
add
pop
hlt
sbb
cmpsl
mov
shlb
add
lods
lcall
loope
xchg
push
mov
hlt
ds
sti
cmp
lods
push
rol
mov
mov
xchg
and
sbb
mov
pop
in
loopne
pop
xchg
and
in
bound
mov
popa
movsb
sbb
jbe
adc
call
fwait
jns
inc
jg
out
mov
or
and
test
test
divb
fbstp
sub
loopne
mov
ss
repnz
jbe
outsl
std
cltd
sub
enter
xor
int
xchg
push
scas
push
out
jp
imul
gs
mov
xchg
sbb
inc
test
es
push
jl
sbb
lahf
mov
fucomi
in
mov
xchg
cmp
push
jle
std
add
cld
shll
mov
enter
add
mov
dec
inc
dec
hlt
ss
mov
outsl
pop
xor
xor
mov
out
mov
inc
outsl
mov
cmp
cmp
fsubs
call
push
fwait
insl
loop
stos
mov
shrb
popa
and
xchg
xchg
mov
aas
test
std
leave
adc
jmp
jg
add
and
sub
jbe
jnp
ja
pop
push
dec
pop
push
xor
decl
push
sub
push
cmp
sub
addr16
mov
cmp
lods
push
and
fwait
pusha
jb
movsl
imul
pop
sarb
sarb
pop
scas
cmp
pop
inc
imul
and
scas
mov
in
fld
sub
jns
leave
insl
fs
mov
push
pusha
insb
test
sub
pop
mov
clc
fld
jp
mov
dec
sub
ds
pop
push
popf
mov
inc
sbb
adc
cli
sti
mov
nop
imul
xor
adc
push
or
cs
lret
push
ljmp
jne
push
sbb
mov
daa
imul
fcomi
push
xchg
mulb
psubb
pushf
fcoml
int
arpl
movsl
mov
jp
cmp
scas
add
dec
in
and
adc
test
push
cmp
call
push
ljmp
inc
test
xchg
fneni(8087
push
pop
jmp
mov
or
mov
mov
mov
shll
imul
pop
and
in
jb
mov
push
adc
push
lods
outsl
adc
or
shlb
lret
clc
mov
and
adc
push
cli
mov
outsb
push
cld
aad
xchg
push
dec
clc
pop
loopne
jle
push
into
jae
dec
stos
pop
or
nop
shrl
sahf
inc
aaa
repz
cmpsl
sbb
lods
iret
mov
add
das
fldenv
out
test
ljmp
sbb
mov
sub
mov
popa
lea
pop
sbb
mov
or
adc
dec
cmp
adc
pusha
push
icebp
mov
aas
dec
xor
add
ficomps
mov
pop
out
movsb
and
push
xchg
jno
push
push
daa
lret
pop
out
aad
adc
add
hlt
imul
scas
adc
push
inc
ja
insl
push
xchg
cld
jnp
pop
ret
movsb
fndisi(8087
psrld
leave
mov
xor
jp
mov
andb
mov
dec
lahf
mov
jp
jge
aas
push
add
mov
push
inc
ds
mov
ret
pop
icebp
jae
mov
repz
je
insb
ss
mov
fdivrs
push
jmp
adc
jle
mov
xlat
pop
push
jns
ja
inc
xchg
mov
cmp
jp
cwtl
jge
jp
scas
movsb
cmp
or
int
push
xchg
sbb
sti
xor
test
pop
sub
mov
stos
mov
les
sub
dec
mull
cs
je
test
rorb
mov
mov
stc
loop
xchg
shr
mov
jmp
mov
icebp
shrl
xor
test
cmp
lds
pop
or
or
sub
xor
xchg
adc
jg
repnz
pop
sub
fistps
fistpll
rcl
mov
and
out
mov
push
movsl
jae
mov
inc
inc
pop
jecxz
lods
sbb
js
pop
stos
adc
ret
xor
aaa
mov
jns
xor
gs
aaa
iret
lds
jle
push
mov
push
mov
into
push
imul
push
pop
jbe
push
fst
call
sbb
jb
push
lods
je
inc
fs
xchg
inc
jae
xchg
sbb
repnz
jo
dec
lret
mov
inc
xor
mov
repnz
shlb
add
adc
dec
and
or
movsb
mov
and
jae
or
push
out
test
xchg
movsb
pop
movsb
adc
cs
dec
pop
xchg
jle
and
je
fcmovnbe
push
out
ja
xchg
ror
gs
or
xor
sbb
mov
int
aas
arpl
sub
loope
repz
ret
incb
jmp
lds
fmuls
lods
pushf
dec
mov
std
inc
mov
into
adc
scas
ja
out
add
add
mov
test
jecxz
out
repz
push
xchg
int
in
dec
dec
adc
lret
pop
or
inc
xchg
rolb
mov
dec
cmc
jmp
push
ror
fsub
ret
fwait
imul
xlat
lret
sub
cs
sbb
xchg
mov
dec
fistpl
dec
jl
push
fisttps
mov
jg
inc
xchg
and
dec
outsl
fsubl
andb
pusha
dec
mov
pop
mov
popa
icebp
in
push
jl
imul
addb
mov
xchg
fidivrl
cmp
fdivrp
jmp
push
out
aam
or
sbb
cmp
and
jg
dec
ret
inc
jae
or
jae
or
ja
inc
xchg
ja
inc
adc
add
mov
movsb
push
inc
fwait
push
pop
into
xor
stos
fnstsw
jecxz
scas
push
add
xchg
out
pop
and
xchg
pusha
js
in
pusha
fistl
sbb
jecxz
push
jle
xchg
lods
sbb
or
sti
int3
sbb
cmp
out
adc
lds
push
xchg
fimull
cltd
inc
jbe
and
pop
or
push
and
sar
scas
push
js
mov
push
sbb
out
mov
or
jl
popf
sub
ret
jns
and
and
inc
mov
pop
test
stos
add
test
push
and
aam
fs
outsb
gs
loop
ds
pop
xor
fsubrl
dec
inc
fcomi
in
inc
xchg
inc
jae
cmp
dec
ljmp
shlb
jae
into
aas
mov
jne
les
jecxz
push
pusha
inc
out
test
lods
jp
lea
lds
sub
ficomps
and
mov
push
mov
pop
push
outsb
jae
and
cmp
add
jmp
mov
mov
hlt
mov
push
or
push
sarl
mov
sub
out
pusha
in
or
cs
push
or
push
jle
and
xor
cmp
pop
scas
mov
mov
cmp
push
addr16
scas
sahf
lahf
fnstcw
test
jnp
pop
or
idiv
push
test
dec
aaa
clc
jg
fwait
icebp
mov
shl
outsl
sub
cmc
sbb
or
adc
mov
dec
nop
xorl
adc
push
or
test
testl
outsb
xchg
popa
mov
lods
test
pop
fstl
sarl
push
loope
xlat
cmp
cmp
xchg
pop
fisttps
jo
fistpll
xor
and
pop
xor
mov
xchg
mov
mov
sahf
mov
or
push
sbb
mov
and
int3
sub
mov
jnp
jo
imull
aas
movl
xor
add
inc
sbb
sti
jg
loop
negb
inc
int
fldcw
inc
mov
aad
mov
sub
les
adc
pop
and
stos
nop
sbb
mov
and
mov
cmp
stos
adc
push
mov
sbb
cmpsl
pop
mov
imul
dec
xor
es
mov
loope
int
jl
xor
mov
inc
pop
ret
shr
xor
jnp
push
dec
xor
pop
and
mov
add
cmpsb
push
test
dec
jmp
pusha
jbe
inc
lods
pop
cmpsb
stos
sbb
lds
cmpsl
mov
cmp
movsl
adc
aad
cmpsb
cmpsl
and
leave
jne
popa
cmpsb
fsubl
jmp
insb
into
add
cmp
cmpsl
pusha
mov
mov
imul
add
or
stos
push
mov
push
xor
push
push
cmpsl
adc
jecxz
aas
clc
xchg
mov
bound
push
mov
outsl
mov
popf
mov
sbb
stc
lods
stos
mov
repz
lea
xchg
pop
pop
lods
lods
arpl
xor
pushf
into
inc
cld
or
fisubs
mov
ds
aas
and
sub
push
push
into
mov
mov
hlt
pop
sub
fwait
cmp
cmp
pop
adc
cli
enter
sbb
add
or
xor
push
cmp
mov
orb
subb
dec
test
jno
in
imul
cmpsl
push
push
mov
cmc
leave
and
xchg
jl
insb
add
imul
add
pusha
mov
es
mov
cmp
mov
inc
sti
ficomps
fdivrs
pop
push
or
cmpsl
fcoms
jns
into
jecxz
sar
movsl
data16
add
stos
fnstcw
xor
arpl
lahf
jno
inc
push
push
inc
addl
out
fdivrp
sub
int
adc
pushl
mov
int3
repnz
jo
sbb
cmp
jl
jge
jp,pt
lahf
dec
or
stos
jne
bound
jnp
leave
lods
scas
or
cmc
push
dec
jmp
jb
loopne
arpl
add
adc
push
jnp
mov
aam
pop
push
jl
mov
jecxz
les
stos
outsl
and
ljmp
and
sti
pop
mov
cmp
pushf
adc
imul
pop
push
pop
dec
mov
pop
push
js
arpl
mov
shll
push
loop
lret
cmp
outsb
das
mov
adc
pop
inc
cmpsb
sub
pop
add
pop
inc
dec
out
mul
mov
dec
cmp
aam
lret
sub
cmpsb
insl
sbb
xchg
fisubrs
cld
inc
dec
sbb
inc
xlat
inc
jno
mov
adc
adc
cmpsl
sbb
dec
push
imul
out
pop
aam
push
jl
subb
jmp
ja
aaa
mov
add
orl
mov
xor
sub
fists
mov
cwtl
insb
mov
jb
mov
sub
xlat
pushf
inc
or
repnz
cmpsl
inc
jo
jbe
sbb
inc
mov
sbb
out
fdivs
adcl
jge
push
aad
xor
sbbb
mov
jecxz
stos
in
or
ret
and
inc
mov
dec
cmpsl
popa
push
mov
cwtl
imul
nop
out
pop
shrb
popf
xchg
xor
nop
xchg
cmp
data16
fmuls
std
dec
in
xchg
ja
dec
push
out
out
aam
es
pushf
dec
fadd
inc
inc
arpl
sbb
ret
mov
add
fistpl
pop
sbb
inc
pop
stc
mov
shrb
stos
lea
movl
pusha
and
fwait
push
add
movsb
pop
mov
jae,pt
ret
jbe
sbb
push
lods
push
out
outsl
add
in
adc
mov
jl
cmp
pop
jb
cmpsl
stos
clc
clc
xchg
pusha
nop
pop
fildll
sub
popa
movsb
sub
and
test
adc
and
aaa
adc
jne
or
dec
sub
mov
adc
imul
mov
adc
addr16
sbb
nop
rol
inc
andb
and
into
sbb
in
icebp
gs
adc
cltd
jbe
cmc
push
push
iret
mov
mov
xor
sbb
sub
push
xchg
adc
inc
mov
daa
mov
mov
jle
inc
loopne
cmp
add
jo
sub
pushw
push
pusha
cld
imul
mov
mov
adc
dec
je
jo
fidivrl
adc
xchg
pop
repz
mov
loope
mov
jbe
xor
in
xchg
addr16
mov
adc
cmp
call
xor
das
push
sbb
xchg
cli
pop
imul
loope
outsl
jecxz
nop
test
inc
hlt
cmp
pop
and
cmc
mov
and
push
clc
jbe
add
out
mov
mov
and
sub
test
ret
movsb
xchg
lcall
pop
sbb
push
lods
in
jg
fwait
das
out
outsl
pop
pop
add
mov
xor
mov
cmp
pop
push
pop
andb
sarl
aaa
mov
xor
dec
sbb
call
pop
mov
outsb
sbb
and
mov
rcrl
or
cmp
arpl
push
jg
pop
adc
loopne
sub
out
sti
test
mov
adc
xor
ja
fs
insb
add
jns
fidivl
or
inc
repnz
or
lcall
insl
inc
dec
inc
sbb
inc
dec
mov
push
insl
dec
lock
dec
bound
sti
pop
or
aaa
push
mov
mov
pusha
xchg
scas
inc
jno
repnz
fimuls
mov
scas
call
jle
js
jp
add
pop
adc
mov
pop
pop
fwait
mulb
pop
loope
bound
adc
gs
add
push
mov
ret
jno
gs
mov
fistpl
dec
sbb
xor
inc
cmpsb
rorl
pop
inc
daa
add
imul
shrb
lods
gs
sub
jbe
gs
sub
add
jp
mov
and
mov
xchg
lock
lcall
sub
aas
sbb
sub
inc
mov
outsb
sbb
testb
pushf
mov
push
sub
jg
sbb
adc
cmp
hlt
and
jns
aaa
mov
mov
cmpsb
mov
test
pop
std
cltd
or
adc
add
stos
inc
inc
push
sub
nop
arpl
repz
sub
jle
pop
push
inc
loopne
xchg
insl
sub
insb
cmp
adc
lret
mov
es
mov
dec
xchg
jmp
dec
cmp
popf
and
push
pushf
shll
popf
add
and
roll
mov
xor
scas
xor
addr16
or
cmp
sbb
je
scas
fwait
push
test
fisubl
fistpll
ret
and
and
inc
add
mov
and
mov
cmp
aam
ficomps
pop
mov
movb
arpl
cmp
push
test
lret
scas
call
and
push
cmp
inc
repz
std
dec
xor
sub
mov
mov
pop
add
dec
add
jnp
shll
pop
pop
inc
jg
and
mov
adc
cmp
or
fwait
in
mov
inc
jnp
pop
out
mov
popa
dec
shll
pop
or
not
fsubl
fmuls
int
arpl
addr16
mov
or
and
mov
stos
imul
and
mov
and
push
jl
sub
cld
int
push
xchg
and
sti
or
or
pop
mov
cli
test
std
jg
scas
or
rcrl
loopne
repz
enter
mov
subb
mov
add
xchg
push
jo
or
push
mov
cmpsl
cmp
push
call
popa
add
dec
inc
loope
pop
daa
pusha
idiv
dec
addr16
inc
lds
pop
icebp
sub
dec
and
adc
dec
push
xor
aas
popa
lcall
cli
jmp
jo
test
ja
or
jle
sbb
addr16
xor
pop
outsb
sub
sub
fs
mov
ds
out
jle
ljmp
pushf
pop
movsb
mov
sub
pop
das
mov
icebp
inc
sar
xchg
jle
test
dec
mov
sbb
jbe
mov
lds
xchg
mov
sbb
jge
bound
mov
insl
xorb
iret
fbld
push
cmpsb
cmp
nop
fcompl
lods
mov
int
pop
xchg
sub
sub
mov
dec
mov
aaa
jno
cmc
jnp
cmp
jg
scas
aad
xor
in
insb
push
cmpsb
subb
repz
inc
xchg
push
aad
sbb
dec
cli
ss
imul
pusha
ficomps
xor
fwait
mov
inc
lods
test
loope
sub
fldt
add
xor
mov
in
dec
adc
daa
test
add
inc
ret
add
jnp
push
mov
gs
mov
sub
stc
push
popa
add
rcrl
and
add
cmp
cmc
pop
jae
mov
loop
clc
std
adc
outsl
cmp
pop
inc
imul
mov
in
jge
orps
out
sbb
cmp
fistl
popf
aaa
mov
fistl
fstpl
jno
shll
xchg
add
ror
xor
test
arpl
insb
ds
pop
mov
sub
movsl
inc
mov
movsl
inc
and
imull
adc
push
and
cli
push
lds
jge
sbb
std
pop
sbb
xchg
mov
push
js
gs
imul
adc
mov
out
enter
adc
mov
cmp
enter
mov
hlt
add
pop
fidivrl
sub
inc
inc
cmp
incl
xchg
cmpl
mov
lret
and
xchg
mov
imul
addb
mov
mov
lret
cmp
or
dec
cmp
outsb
sbb
lods
mov
popa
jge
mov
inc
loope
jo
frstor
pop
adc
dec
or
adc
xor
bound
xchg
cmp
jb
mov
xchg
lcall
xor
push
mov
inc
xchg
cmp
pop
out
inc
mov
jnp
pop
cmp
into
les
inc
jae
push
add
sub
es
jo
mov
int3
cld
lcall
xor
pop
outsb
test
mov
mov
cmpsl
inc
sbb
cwtl
sbb
sub
sub
adc
pop
mov
jne
inc
addr16
sarb
fwait
xor
sbb
mov
mov
xor
mov
popf
pop
sub
popf
insb
outsb
addl
add
int
ja
pop
cmpsb
lods
stos
cmpsb
mov
into
mov
sbb
jo
jge
mov
pop
inc
insb
dec
pop
pop
nop
mov
push
les
add
in
adc
sub
add
aad
push
or
push
ja
dec
or
fnsave
fisubrs
outsl
mov
adc
mov
gs
div
cs
popf
xor
ja
push
pop
sbb
pop
mov
push
pop
sub
arpl
hlt
dec
pop
sbb
loop
jecxz
and
movsl
xchg
xchg
add
pop
dec
mov
and
mov
in
jne
sub
loopne
cld
comiss
fmull
je
iret
lret
xchg
addr16
push
movsl
ret
jnp
mov
push
sar
lods
outsb
das
cmp
testl
aaa
sbb
insl
add
push
pushf
fsubs
scas
std
xor
mov
mov
xchg
sarl
pop
sbb
into
push
jb
push
jl
jbe
rcrl
push
pop
push
imul
mov
cmp
cltd
jns
shll
xor
xchg
add
cmpsl
adc
or
outsb
adc
mov
pop
cmp
mov
leave
xchg
mov
clc
dec
dec
int3
xor
fdivs
cwtl
test
mov
push
scas
cld
pop
sbb
push
sub
or
jecxz
dec
cmp
mov
xor
push
pop
nop
enter
mov
js
xor
and
lahf
dec
lods
push
mov
gs
hlt
std
jge
cmp
scas
pop
lock
inc
fidivl
adc
stc
je
sti
add
jle
mov
imul
imul
out
nop
jb
movsl
mov
movsl
mov
push
mov
ret
popl
test
pop
and
push
mov
mov
mov
lds
mov
imull
xchg
sub
mov
jle
les
push
cmpsb
push
imul
jae
andl
sti
cmp
fs
push
cmpsb
in
fnstenv
das
inc
test
out
std
pop
subl
mov
ds
cmp
loopne
mov
ficoms
push
mov
call
data16
or
cmp
mov
mov
pop
cs
daa
sub
test
gs
cmp
pop
jbe
arpl
test
lret
insb
cmp
cmp
mull
femms
mov
dec
mov
add
push
mov
imul
mov
int
mov
loopne
push
push
add
lods
jno
lods
lock
mov
lcall
imul
pop
repz
je
dec
jl
fs
scas
xor
pop
sbb
in
cmpsl
pop
arpl
cmp
mov
cmp
insl
and
dec
cmp
pusha
sub
aaa
xor
and
pop
int
mov
cmp
outsl
jns
dec
cmp
test
sti
xchg
mov
insb
gs
xor
adc
fsubrs
in
xchg
jns
int
mov
mov
sbb
push
das
dec
ljmp
jle
push
or
add
mov
mov
inc
pop
or
pop
add
sbb
push
shll
mov
dec
test
js
dec
sbb
fisttps
test
inc
cld
test
push
pop
sub
cmp
sbb
popf
lahf
addb
fdivrl
dec
xchg
mov
adcb
add
jmp
out
out
aas
in
sarl
inc
cmp
mov
shrl
and
pop
adc
lds
xor
pusha
push
lahf
fstps
lret
lods
add
dec
bswap
adc
mov
push
jnp
out
lcall
adc
or
insl
inc
mov
popa
xchg
subl
in
xlat
mov
pop
xor
dec
mov
cltd
repnz
inc
jmp
out
inc
stc
cmp
hlt
and
jle
pop
sbb
dec
lods
push
push
jno
dec
cltd
and
fldl
mov
jmp
mov
add
out
xor
sbb
lahf
sub
xor
adc
ss
cmp
fs
pop
jno
inc
enter
push
flds
in
call
aas
arpl
mov
je
ds
and
dec
xor
and
pop
inc
add
fsubrl
data16
bound
fwait
mov
mov
mov
sub
ds
loopne
mov
cltd
sbb
sbb
pop
sbb
std
mov
dec
mov
sbb
cmp
push
sbb
inc
leave
or
fs
out
and
arpl
mov
pusha
push
push
mov
js
push
insl
dec
ds
andb
mov
add
mov
lds
sbb
sbb
lcall
or
push
adc
sub
out
dec
mov
lahf
cmpsl
jno
pop
or
test
cmp
lds
pop
push
adc
sarl
dec
mov
into
insl
js
xor
dec
cmp
push
je
sbb
mov
bound
stos
xor
xor
in
sbb
pop
add
mov
stc
insl
pop
sub
or
push
add
cld
imulb
push
xchg
and
clc
pop
int
mov
cmp
and
pop
jns
jmp
sub
test
inc
inc
sbb
into
shlb
pop
mov
bound
cld
aas
fidivrl
mov
sub
out
loopne
inc
popf
outsl
das
mov
idivb
test
xchg
xor
mov
std
popf
dec
pop
pop
pop
jb
pop
sub
push
scas
push
sarl
add
mov
cmpl
fistpll
imul
pop
sub
pop
push
andl
mov
data16
push
scas
leave
out
loopne
jmp
mov
mov
add
hlt
xlat
cmp
inc
mov
mov
cmp
and
loopne
pop
test
jne
add
fdivl
dec
push
jle
ljmp
sti
and
ljmp
xor
fisubrl
jge
sbb
flds
xadd
mov
inc
call
cli
pop
xor
outsb
pop
sbb
mov
dec
out
sub
mov
fmull
xor
and
dec
xchg
ds
push
loopne,pn
mov
and
mov
xor
jo
out
dec
daa
pop
rolb
jmp
data16
xor
gs
pop
mov
xor
sub
mov
imul
repz
add
mov
dec
fsubs
gs
adc
pop
cmp
sub
idivl
mov
mov
pop
movsl
and
out
add
ss
pop
cmp
daa
dec
push
inc
and
cmpsl
scas
jmp
mov
dec
lock
and
push
shr
mov
rclb
push
sub
pushaw
push
inc
and
and
add
mov
nop
insb
sub
gs
inc
push
pusha
mov
rcrl
stos
mov
xchg
xor
jge
xor
outsb
stos
mov
lahf
incb
dec
mov
daa
cmp
out
push
and
and
mov
cmp
jecxz
leave
hlt
imul
mov
sahf
pop
lcall
outsb
jp
push
sub
hlt
xchg
xchg
xor
lret
mov
pop
stc
cwtl
mov
test
icebp
fstpt
xchg
or
loope
xor
mov
and
cmpsl
pop
imul
hlt
jno
enter
jno
cmp
shl
dec
es
gs
sub
xor
push
mov
mov
in
inc
pop
sbb
arpl
lret
push
mov
jns
cmp
sub
push
add
addb
movsl
inc
pop
mov
mov
lods
lcall
movsl
notl
pop
mov
ja
mov
jns
lock
sahf
sbb
sub
cmp
lret
mov
push
mov
push
inc
push
mov
or
sub
insl
xor
and
sbb
cld
shrl
push
test
mov
enter
pop
push
xchg
dec
ds
iret
mov
imul
das
inc
clc
mov
in
mov
dec
and
aaa
xorw
adc
mov
lret
push
mov
repz
popf
cmpsb
sti
jno
sub
xor
enter
mov
mov
aaa
mov
sarb
loop
dec
mov
jp
jle
add
push
dec
pop
mov
pop
mov
jmp
pop
stos
scas
mov
cld
inc
stos
in
stc
mov
mov
push
stc
out
ljmp
jmp
mov
ljmp
mov
xchg
int
andl
shl
ljmp
lcall
xor
cmp
add
push
xchg
fwait
shrb
or
sahf
out
mov
xchg
in
insb
add
icebp
jbe
xchg
arpl
mov
hlt
mov
fmul
sbb
cs
inc
cmp
mov
daa
xchg
mov
adc
icebp
rcr
inc
push
imul
aaa
adc
stc
cmp
repnz
jnp
and
gs
push
ja
mov
xchg
outsl
inc
popa
imul
inc
xor
je
sub
lea
push
pop
sbb
xor
mov
sbb
ss
mov
jnp
lods
dec
mov
sub
les
arpl
stos
pop
jnp
push
out
js
pop
mov
jge,pt
jo
ja
adc
test
push
mov
repz
mov
mov
push
inc
add
inc
or
jno
xchg
adc
sbb
je
and
aaa
int
daa
lret
sarb
sub
dec
sar
scas
outsl
xchg
mov
add
adc
sub
lods
clc
add
call
or
cmove
sti
daa
inc
fwait
xlat
cwtl
xor
adc
aaa
push
bound
dec
lahf
fmul
mov
bsr
loope
xor
dec
scas
sub
fadd
jmp
xchg
mov
inc
add
xchg
or
mov
imul
pop
test
cld
cli
dec
add
xchg
push
dec
mov
xchg
cmpsl
and
cltd
sar
adc
push
out
gs
test
cmpsl
xchg
sbb
mov
repz
ja
addr16
xchg
xchg
mov
icebp
ds
stos
std
dec
mov
aas
rcrb
adc
dec
xor
cmp
dec
testl
xchg
aas
cmc
std
pusha
push
sti
add
or
lcall
bound
addr16
lret
test
mov
out
leave
shlb
test
push
ss
cld
popa
cmp
mov
insl
cmp
mov
mov
daa
orl
icebp
sub
mov
jp
punpcklwd
sbb
sub
loopne
in
jb
inc
lods
int
mov
andb
sbb
inc
lret
gs
jmp
mov
push
hlt
jb
leave
add
mov
test
or
push
mov
cmp
cltd
inc
xor
mov
mov
pop
movsb
popa
incb
lods
pop
adc
ljmp
lds
cmp
sbb
lahf
push
leave
or
sub
or
stc
lret
in
cmp
cmpsb
imul
cltd
adc
jne
dec
aad
mov
es
mov
stos
negb
sub
dec
loope
lods
test
loope
mov
jae,pt
fs
loopne
push
add
sti
aaa
addb
xchg
jmp
cmpsl
cmp
rclb
mov
shlb
push
cltd
jnp
xlat
stos
pusha
inc
jl
jecxz
dec
popf
sbbl
jmp
mov
scas
push
inc
jp
mov
and
push
out
movsb
jle
pop
jnp
adc
pop
stos
inc
aas
sub
xchg
inc
lea
dec
and
xchg
daa
iret
out
shrb
pop
dec
mov
xchg
nop
stos
sahf
mov
xor
insl
pop
xor
cmp
cmp
cwtl
insl
in
sub
xor
imul
adc
popf
hlt
fdivrl
mov
mov
pop
daa
inc
jp
sbb
or
dec
push
fiadds
mov
mov
xchg
std
aad
cmp
rcrb
add
mov
dec
stos
jmp
pop
push
xor
ljmp
pushf
push
jg
inc
xchg
das
scas
test
mov
fwait
test
call
and
out
imul
cltd
jo
xor
fstpl
cs
mov
sub
xchg
test
and
push
push
push
xchg
jae
cmp
pop
push
inc
sti
popa
call
pop
outsl
aad
ret
cmpsb
pop
lahf
dec
cmp
movsb
sub
dec
cli
sub
addb
bound
add
or
je
in
rcr
popf
jp
cli
adc
and
out
cmp
test
adc
call
cmp
inc
adc
repz
adc
xor
clc
mov
ja
inc
repnz
xor
rorl
pop
inc
aaa
push
pop
add
inc
ss
add
outsb
inc
cmpsl
push
repnz
xlat
js
xchg
inc
cltd
imul
sub
mov
push
aas
cltd
arpl
sub
and
mov
inc
push
out
cmp
daa
icebp
test
dec
dec
push
pop
xor
test
push
pop
imul
jbe
nop
or
lods
jmp
sbb
rcrb
add
rcrb
std
cmp
cwtl
sbb
mov
jge
xchg
pop
fwait
dec
mov
pop
lods
or
xchg
ljmp
paddusb
add
jmp
cli
adc
cltd
in
xor
cmp
in
and
and
scas
add
scas
cmp
jb
push
xchg
roll
dec
pmulhuw
push
in
lods
leave
dec
sub
fisubrs
and
js
inc
movsl
and
lods
fimull
popf
or
mov
jbe
sub
loope
add
cmpsl
ja
sarl
popa
lret
jno
jle
movlps
xlat
ret
xor
fisttps
insl
cmp
pop
add
pusha
lods
jp
fwait
adc
dec
push
sti
addr16
sub
dec
pusha
lcall
shll
rcrl
jecxz
inc
cmp
jae
fisubs
les
cmpsb
aad
dec
pop
or
inc
cmpsb
das
push
outsb
mov
inc
je
or
dec
pop
mov
jle
sub
mov
xchg
or
stos
test
icebp
mov
inc
sbb
xchg
lods
mov
movsl
jp
sahf
mov
add
pop
mov
pop
jo
scas
and
jmp
push
mov
jo
loop
pop
add
in
sti
addr16
fsub
cmp
cmp
jne
add
movsb
dec
inc
aad
outsl
add
mov
xchg
fucomip
sub
jo
insb
loopne
inc
ljmp
sub
xchg
mov
sub
sbb
mov
mov
cwtl
mov
mov
sbb
in
dec
hlt
xor
xor
pop
lods
jns
stc
push
mov
dec
add
test
popa
stos
mov
sbb
sbb
xchg
pop
pop
sti
xlat
xchg
sub
jnp
and
pop
or
out
pusha
push
mov
imul
adc
fwait
or
inc
pop
add
test
mov
mov
mov
aam
cmpsl
stos
mov
loop
in
sbb
pop
dec
test
cmp
jb
add
or
mov
jmp
mov
dec
mov
pop
xlat
clc
lock
adc
cmpsl
call
unpckhps
das
pop
ds
sbb
lea
test
pop
sub
mov
pop
mov
fsubrl
cmp
int
xchg
stos
or
arpl
cltd
dec
xchg
daa
push
xlat
ret
and
push
mov
test
cli
or
and
xchg
imul
cmp
outsl
repz
inc
mov
jg
test
mov
mov
das
into
add
inc
outsb
shl
mov
insb
jecxz
inc
cmp
inc
incl
arpl
cmc
scas
scas
cmp
cmp
pushw
movsb
arpl
sub
xor
or
lods
jle
leave
loop
add
lahf
xchg
xchg
mov
dec
sub
dec
ret
sub
mov
adc
nop
dec
cli
mov
mov
shr
pusha
enter
xor
sbbl
mov
and
mov
mov
push
ljmp
jl
xchg
inc
push
loopne
inc
lcall
and
int
ja
mov
fsub
mov
xchg
fsubp
and
push
mov
xcrypt-ctr
cmpsl
pop
scas
imul
out
jmp
mov
lahf
cmpsl
jae
ds
dec
rolb
pop
or
outsl
out
sti
pop
mov
mov
xchg
cmp
xlat
insl
jo
shr
int3
cld
push
jmp
scas
mov
mov
adcl
sbb
rorl
sahf
ja
inc
xor
or
iret
jno
scas
add
or
fbstp
push
mov
das
loope
pushf
xchg
mov
adc
adc
push
push
xchg
adc
mov
cmpsl
xor
lgs
fadds
clc
rcrl
and
or
adc
ja
jbe
lcall
add
mov
xchg
test
movsb
dec
lcall
cmp
sub
mov
xchg
dec
jo
xor
fistps
mov
pop
adc
xor
cwtl
and
lods
mov
mov
mov
bound
shrl
jno
pop
lock
in
xor
outsl
hlt
xlat
loopne
xchg
add
sub
sar
cwtl
cwtl
insb
out
test
test
and
sub
sub
mov
push
xor
cmp
sub
mov
push
movsl
mov
mov
cmpsb
xor
lock
push
std
jnp
add
push
cmp
sahf
pop
sbb
xchg
aaa
inc
ret
mov
and
gs
xchg
in
popa
cmp
mov
adc
lahf
dec
mov
cmp
loope
out
push
mov
hlt
adc
jb
jmp
xor
aam
bound
ss
aad
sbb
lods
inc
cmp
scas
sbb
imul
lods
adc
mov
lods
test
cmp
push
and
lods
jl
fmulp
mov
dec
repz
mov
and
xor
sub
xchg
xchg
loop
into
cli
xchg
push
not
cmp
dec
mov
idivb
addr16
shrl
std
xor
jnp
hlt
add
repnz
adc
add
or
jmp
dec
mov
pop
in
xlat
pop
or
addr16
jo
sbb
and
movsl
xor
fisubl
adc
add
clc
cltd
movsl
push
xchg
pop
or
in
icebp
lea
daa
sub
aas
adc
dec
cs
insb
push
push
push
jns
jecxz
sub
cmpsb
adc
clc
jge
sbb
inc
hlt
scas
inc
add
subb
cmp
jnp
out
sbbl
xchg
sbb
mov
mov
xchg
add
mov
jmpw
adc
jl
jae
sahf
pop
das
sbb
fildl
xor
mov
xchg
cmp
test
dec
stos
rorb
sub
aaa
push
mov
cld
fisubrs
pop
call
inc
xchg
cs
inc
jo
add
repnz
sub
lret
jo
lret
outsl
jge
outsb
adc
out
xchg
imul
dec
jne
mov
lret
pop
push
test
mov
cli
test
add
xor
dec
dec
jnp
pop
test
pushf
or
mov
jbe
sti
xlat
pop
cmp
in
cmp
out
call
jl
and
scas
cmp
popf
hlt
push
adc
adc
std
lds
xor
sub
xor
inc
push
movsb
pusha
les
or
fistpl
movsl
insb
pop
fucomi
das
or
stos
add
cmp
int
push
and
test
push
cmp
or
cmp
es
add
lret
mov
repz
jbe
inc
aaa
inc
dec
outsb
cwtl
xchg
incb
andb
dec
lods
ds
mov
lods
xlat
mov
dec
inc
in
or
pop
filds
xchg
cmp
add
push
jae
cmpsl
gs
ret
xor
jmp
imul
push
mov
pop
fucomi
or
aaa
sar
rcl
aam
in
imul
arpl
int3
dec
mov
or
fcomip
sbb
sub
out
icebp
cmp
xchg
xlat
ljmp
xchg
lea
or
inc
adc
ljmp
jmp
sub
push
cmp
sub
push
test
cmpsl
scas
push
sbb
cmpsl
sub
pop
mov
dec
int
dec
mov
pop
xchg
push
pop
pop
fadds
in
add
xlat
mov
jo
jle
sbb
push
ret
mov
cmc
out
orl
sahf
add
test
dec
dec
paddsw
fs
push
outsl
jl
sbb
leave
imul
dec
inc
mov
sub
mov
xchg
lret
dec
mov
adc
xor
movsb
sbb
mov
push
filds
lret
scas
test
int
out
mov
fwait
xor
and
dec
inc
xchg
cmp
in
mov
mov
faddl
dec
nop
inc
out
mov
sbb
mov
xor
or
mov
cmp
rol
push
and
mov
xchg
sub
dec
mov
insl
rorb
adc
pop
sub
pop
hlt
aaa
imul
dec
not
xchg
aaa
push
es
xor
sti
fisubl
retw
loopne
adc
xchg
push
jp
out
pop
inc
sbb
jmp
push
adc
cli
out
jno
stc
xchg
xchg
mov
push
pop
jo
inc
hlt
scas
push
arpl
movsb
mov
cmc
jge
loopne
hlt
push
adc
hlt
xor
sub
push
popa
stos
movsb
cmp
shlb
jl
cltd
rcl
cmpsl
add
jp
sub
lods
popa
pop
add
outsl
gs
mov
mov
aas
lock
jecxz
out
pop
les
into
xor
push
xchg
lock
xor
addb
shlb
daa
jns
ljmp
imul
lods
dec
and
cmp
andb
movsb
mov
in
xchg
lods
adc
loop
scas
sbb
gs
hlt
cmp
sti
pop
lret
sub
sbb
into
cmp
or
in
int3
call
adc
and
mov
sbb
and
mov
out
subb
test
sti
jle
pop
add
xorb
mov
mov
add
pop
adc
mov
inc
jmp
loope
cmpsb
dec
jnp
xor
imul
mov
sub
pop
sub
imul
add
pop
inc
dec
dec
adc
push
and
push
scas
and
xor
mov
jns
mov
sbb
shlb
sbb
inc
push
jnp
mov
shlb
push
mov
mov
xchg
dec
pop
imul
cmp
aad
inc
addr16
out
mov
or
dec
jmp
push
ss
push
cmp
xor
sbb
inc
or
sub
pop
outsl
insb
cmp
lret
push
and
cmpsl
callw
inc
dec
dec
cmp
fldenv
das
aam
add
pop
pop
out
clc
lcall
push
dec
lods
movzwl
lds
outsl
xor
jmp
arpl
inc
pop
lret
enter
cmpsl
cmp
loope
rorl
cmpl
and
inc
lods
jl
out
stc
dec
mov
das
outsl
xchg
dec
inc
cmp
xchg
je
mov
dec
lahf
inc
iret
pop
addr16
and
mov
pusha
pop
xchg
add
xchg
push
sub
push
scas
xor
mov
xchg
mov
mov
mov
into
daa
movb
hlt
sub
inc
sub
pmaddwd
jae
add
sbb
push
adc
daa
dec
add
mov
loop
push
dec
push
test
push
into
stos
lea
fdivrs
ss
mov
xor
std
xchg
js
roll
jne
ret
int
or
lret
sbb
cld
mov
notb
mov
mov
popf
movsb
lcall
pushf
inc
mov
icebp
insl
addr16
scas
adc
cmp
xchg
mov
sahf
aas
sub
jle
sub
jb
jns
jg
leave
mov
pop
shll
sub
lcall
addb
push
ja
insl
lret
lea
cwtl
mov
pusha
mov
sbb
sbb
test
cwtl
pop
lods
ss
push
or
mov
pop
sub
jo
adc
xchg
test
mov
cmpsb
pusha
repz
xchg
negl
scas
movsl
lret
popf
icebp
mov
and
cmpsl
inc
mov
test
sub
es
jp
cwtl
add
out
enter
mov
fidivs
add
sub
jns
add
cmpsb
dec
jo
cmp
nop
mov
push
and
pop
popa
pop
sub
dec
mov
sbb
adc
pmulhw
js
or
das
xchg
and
pop
jbe
gs
lods
call
fcoms
je
xchg
hlt
jns
cmp
cmp
jae
leave
mov
push
pushf
ja
mov
xor
fcomp
push
fistpll
sbb
into
xor
dec
add
jg
dec
addr16
int
mov
dec
pushf
inc
ret
dec
sbb
movsb
jmp
test
push
mov
mov
loop
aaa
test
pop
jg
test
out
sub
gs
mov
lcall
xchg
jg
lods
mov
jb
lret
out
xor
mov
push
stos
fistl
xchg
popf
and
stos
mov
sbbb
pop
cmp
call
adc
je
pop
in
sbb
mov
test
js
stos
and
loopne
shlb
pop
adc
sbb
xor
cld
movsb
pop
lret
add
xchg
sbb
aaa
iret
mov
movsl
lcall
cmpsb
or
sbb
add
pop
jbe
shr
std
sbb
sub
mov
in
cwtl
mov
stos
mov
js
popl
adc
adc
scas
arpl
pop
xchg
sub
push
mov
xor
mov
mov
or
jo
jnp
jbe
arpl
xor
xor
jmp
daa
sahf
jnp
les
xchg
movsl
mov
or
dec
mov
daa
mov
adc
pop
stc
add
cltd
sub
mov
mov
inc
xor
clc
rcrb
mov
test
and
rolb
inc
xor
jne
fiaddl
or
xor
inc
push
add
popf
and
cmp
cmpsb
rcrl
movsb
add
jle
sahf
outsb
mov
cmp
int
push
aas
mov
bound
xor
nop
xchg
mov
and
cld
jl
repz
mov
sbb
mov
inc
int
mov
or
or
nop
enter
pop
mov
arpl
cmpsb
clc
movsl
xor
enter
cli
outsl
mov
sbb
push
movsl
xchg
pop
cmpsb
push
dec
pop
scas
jmp
sbb
pop
sbb
mov
cmpsb
mov
mov
repnz
ljmp
adc
push
mov
enter
and
adc
mov
inc
scas
xchg
rorl
push
mov
ss
rolb
jb
add
fmull
ficompl
dec
pop
pushf
icebp
jle
or
clc
shrb
and
or
loop
in
mov
mov
add
mov
out
jge
loopne
call
cmp
outsl
js
addr16
inc
jno
pop
dec
mov
imul
mov
test
mov
xor
loop
jl
iret
add
mov
mov
out
addr16
mov
pop
adc
shlb
mov
ret
mov
mov
imul
jbe
cwtl
pushf
mov
cmp
jmp
mov
adc
sbb
sbbb
sub
ret
pop
fmul
or
test
jo
and
dec
push
xchg
mov
inc
movsb
scas
scas
pop
mov
jmp
nop
fmull
push
mov
push
cmp
cmp
or
cmp
inc
movsl
xchg
xchg
stos
sub
inc
out
mov
in
in
xor
cld
into
dec
pushf
lods
or
cs
sbb
inc
cmp
sbb
lret
adc
ss
shlb
jg
cmp
cmp
cmp
cwtl
fs
test
test
jge
xor
arpl
out
jbe
sub
push
int
leave
or
inc
loope
mov
repnz
mov
cmp
inc
adc
sbb
js
in
xor
outsl
lahf
pop
dec
cmpsb
jle
in
pop
adc
or
xor
cmc
cmc
movsl
jge
mov
mov
or
aas
loop
cmpsb
or
fwait
movsb
xor
dec
cmp
mov
arpl
push
aaa
cltd
ret
push
lahf
imul
push
mov
mov
or
mov
les
push
mov
cmp
fdivrs
xorb
adc
jae
xor
add
jl
rep
repz
sti
imul
cmp
jno
add
mov
mov
das
imul
adc
addr16
mov
push
push
dec
sbbb
cmp
out
pop
outsb
push
mov
jge
fadd
jne
mov
mov
idivl
inc
movsb
lods
dec
out
test
cmp
mov
cmp
ficoms
adc
arpl
adc
sub
lods
shlb
mov
imul
pop
sbb
pop
fwait
lds
lret
pop
xchg
or
sub
cld
xor
popa
loopne
in
popa
in
int
imul
or
lahf
aaa
imul
icebp
mov
fdivrl
push
xlat
inc
xor
movl
cwtl
scas
jne
xor
pop
lret
pop
jle
push
jmp
mov
out
adc
push
subl
xor
pushf
mov
imul
test
aas
mov
imul
xor
pop
lods
fistpl
inc
mov
add
out
bound
outsl
lret
mov
repnz
sbb
es
add
test
arpl
imul
mov
pop
adc
outsb
xor
out
ds
mov
nop
fwait
inc
inc
xchg
scas
sub
add
decl
pop
dec
bndstx
aaa
add
ret
enter
popf
xor
mov
xor
or
test
and
cmp
adc
xor
pop
inc
push
arpl
mov
hlt
jnp
movsl
cmp
mov
imul
cld
inc
mov
aaa
jge
sub
add
sbb
dec
push
jl
imul
test
outsb
mov
int3
or
sahf
xor
out
stos
mov
out
out
cmp
pop
inc
div
xchg
and
and
cmp
cmp
mov
test
cmp
daa
pop
push
jno
add
jns
sbb
repz
incb
mov
adc
mov
jo
dec
mov
jns
sub
inc
in
call
cmp
add
outsl
std
jle
std
shll
push
aam
mov
adc
je
xor
xor
les
ss
mov
pop
nop
bound
inc
mov
jno
daa
xchg
add
fnstenv
pop
cmpsb
adc
fsubrs
adc
pop
sbb
fldenv
test
push
push
push
ds
inc
fwait
cmp
insb
inc
push
out
pushf
mov
imull
inc
lea
mov
xchg
cmp
mov
out
enter
xchg
pop
mov
jl
je
aaa
and
push
sbb
cmc
lock
cmp
cwtl
jo
adc
out
popa
ret
cmc
adc
xchg
mov
popa
jg
js
out
rolb
mov
in
lds
cltd
cmp
out
aas
pop
mov
aad
ds
or
cmpb
and
movsb
movsb
fst
dec
jnp
fbld
jns
iret
xor
insb
in
ret
popa
inc
inc
fcompl
xor
daa
adc
jmp
jp
nop
arpl
sub
mov
jle
mov
cmp
push
push
add
sti
inc
mov
cmp
outsl
push
out
outsb
adc
adc
xor
daa
jno
cmpsl
addr16
jle
add
xor
lods
pushf
mov
cld
xor
sub
push
jg
cltd
sub
add
mov
lods
sarb
dec
imul
out
push
sub
add
xor
lods
push
lahf
scas
jae
xor
sub
mov
xor
je
adc
fs
jb
mov
xor
mov
shrb
cmpsl
aam
imul
add
popa
dec
or
or
push
jne
mov
cmp
mov
sbbl
test
lahf
imul
insl
xchg
cmpsl
sub
je
jbe
outsl
inc
mov
jmp
cmp
hlt
mov
push
lret
les
aad
sub
mov
dec
jl
outsl
xor
imul
insl
xchg
js
sarb
pop
add
cmpsl
imul
or
ret
leave
xor
call
mov
cmp
mov
fisubrs
leave
movsb
xchg
js
ja
mov
popf
sub
scas
pusha
xchg
xor
test
dec
jae
xlat
movsb
jg
push
and
dec
mov
popf
jl
pushl
arpl
dec
lahf
push
push
inc
aaa
stc
sub
mov
adc
mov
cmp
int3
push
test
cmp
adc
or
lahf
mov
loopne
inc
mov
mov
scas
inc
negl
in
sub
mov
imul
push
cmp
lea
or
mov
pop
inc
sub
popa
test
fwait
mov
outsb
and
push
jns
les
lea
imul
sub
out
jle
xor
dec
or
mov
jnp
mov
test
add
fisubl
pop
adc
dec
test
or
fwait
jl
cmp
cmp
les
lret
inc
add
mov
pop
addr16
dec
lcall
stos
lahf
into
pop
out
sbb
mov
lds
push
xor
insl
fimull
pop
outsb
jg
jge
jne
dec
scas
lea
and
inc
xlat
mov
dec
sbb
push
les
test
xlat
gs
das
pop
jo
jmp
xchg
mov
or
mov
jnp
mov
insb
push
int
lret
cli
enter
adc
jns
xor
jecxz
ds
mov
sahf
xchg
sbb
and
lock
adc
sahf
popa
add
dec
ret
mov
push
jnp
les
cld
push
pop
dec
rclb
in
out
push
mov
sbb
cmp
inc
fldenv
aaa
pop
push
push
out
outsb
mov
push
gs
bound
xchg
sub
adc
jnp
mov
pushf
int
addr16
cmpsl
jno
into
push
cmp
and
xchg
jl
outsb
inc
and
pop
mov
push
cmp
jbe
and
xchg
and
sbb
sub
insl
sbb
iret
push
and
push
js
mov
hlt
adc
xchg
repz
test
test
xor
xchg
dec
xor
sti
adc
cwtl
mov
add
aam
rorl
pop
inc
ja
js
cmp
roll
push
rorb
push
sets
pop
xchg
fidivrl
mov
mov
jmp
into
cmp
insl
scas
xchg
enter
or
cmp
in
ret
mov
in
push
add
pop
jmp
mov
lret
xor
xor
int
dec
dec
lret
and
cmp
mov
xchg
mov
pop
stos
xor
push
sub
inc
out
adc
das
pop
or
ss
aad
cwtl
pop
and
add
xor
dec
aas
sub
jle
loope
adc
mov
jle
imul
aam
cmc
and
mov
sub
arpl
test
add
add
dec
fidivrs
ja
jbe
mov
jb
inc
xor
jno
mov
in
pop
pop
xchg
testb
fistps
call
jb
stos
enter
mov
jmp
sti
mov
dec
arpl
push
enter
add
dec
loopne
in
mov
stos
cmp
lods
loopne
jp
xor
movsb
in
xor
jnp
pop
dec
aam
inc
xor
and
hlt
inc
and
pop
cld
ret
inc
sbb
xchg
mov
int3
test
jno
call
imul
push
dec
sbb
lods
ja
lods
and
cmpsl
add
xor
and
and
pop
jno
jbe
mov
pusha
js
js
push
pop
lods
cmp
int
and
cwtl
or
mov
arpl
sub
ret
jne
pusha
inc
mov
pop
mov
lock
xchg
pop
add
dec
push
sbb
outsb
in
punpcklbw
xor
sub
repz
outsl
outsb
out
fdivrs
es
push
inc
mov
inc
in
outsb
lods
icebp
ljmp
push
cmp
inc
push
fs
dec
jbe
push
mov
gs
push
imul
outsl
xchg
leave
push
cmpsb
mov
sbb
bound
jp
push
fidivrs
jg
cmpsb
mov
mov
shlb
sbb
add
mov
push
add
imul
or
inc
and
jno
lret
dec
mov
xchg
or
jge
pop
xor
int
push
pop
gs
push
add
and
and
xor
sub
jb
imul
repz
sub
dec
scas
xor
pop
mov
xlat
sub
popl
jmp
repz
repz
push
mov
jecxz
mov
pop
stos
imul
pop
xor
outsb
mov
in
cmp
lcall
push
scas
roll
jno
nop
mov
mov
test
inc
pusha
sub
loop
into
add
add
in
ret
lods
xchg
sbb
ss
mov
sbb
in
mov
mov
mov
test
mov
cmpsl
mov
scas
hlt
sub
inc
bound
xchg
addr16
fcomps
insl
ja
jg
in
or
dec
ljmp
cmpsb
lea
shlb
repnz
adc
cmpsl
nop
cmp
pop
lret
xchg
and
imul
cwtl
jno
data16
div
sti
push
mov
mov
in
mov
mov
xor
push
mov
outsl
icebp
sbb
cmpsb
dec
push
xchg
rolb
mov
pop
scas
xor
dec
xchg
jbe
xor
add
cmp
std
pusha
cmpsb
push
repz
es
repz
dec
adc
jno
cmp
pop
dec
aas
adc
leave
or
fistl
jnp
lods
mov
ret
in
mov
fwait
mov
lods
jb
outsl
sbb
cltd
xchg
cmp
std
insb
into
test
lcall
scas
jmp
ficoms
repnz
add
mov
xor
xchg
push
mov
push
icebp
into
cmp
add
jne
mov
mov
int
xor
in
and
test
and
arpl
pop
lret
jbe
sub
mov
sahf
or
imulb
fsts
or
inc
dec
popa
jmp
scas
js
shll
ljmp
or
and
fimuls
mov
cmp
mov
xchg
out
inc
test
dec
mov
xchg
call
repnz
pop
es
fmuls
add
sub
pop
into
mov
fmulp
lods
or
jae
imul
dec
xchg
fs
insl
lea
sub
xchg
and
imul
aas
cmp
aad
int3
inc
es
pusha
outsb
js
into
mov
scas
jae
cmp
jbe
jg
cli
mov
ljmp
cmp
cli
pop
fnstcw
push
sub
aam
push
sbb
mov
push
inc
mov
loope
push
cltd
dec
xor
movsl
push
lea
mov
sbb
stc
fs
mulb
stos
cmpsl
int
dec
inc
push
insl
jns
rsm
out
fwait
shrl
adc
pop
pop
clc
pop
mov
push
inc
dec
clc
roll
lods
adc
xor
mov
adcb
mov
and
mov
mov
pop
sub
pop
add
int3
jecxz
cmc
imul
inc
jnp
xchg
add
popa
lret
mov
and
aas
push
in
inc
and
sbb
movsb
pop
jge
ret
adc
js
insb
adc
int3
movsl
sbb
and
jmp
inc
sbb
fmulp
pop
push
adc
stos
push
adc
mov
das
repnz
lret
mov
jp
cmc
fisttpll
popl
add
cli
lds
add
pop
sbb
outsb
loopne
testb
inc
mov
aaa
gs
in
xchg
popf
stc
sub
push
scas
sub
cli
adc
cmp
outsb
sar
or
pop
popa
inc
popa
mov
pop
xor
jae
pop
fs
inc
and
outsb
clc
pop
inc
xor
jno
xor
sbb
mov
rep
fdivrl
or
pop
sub
icebp
addr16
dec
xchg
test
jo
popf
inc
repz
push
adc
mov
hlt
inc
into
xor
or
jbe
stc
ja
and
daa
subb
inc
int3
dec
or
scas
inc
mov
fstpt
mov
out
push
outsb
and
pop
push
jns
cwtl
mov
call
addr16
and
xor
sub
dec
cmp
out
outsl
fldt
sub
cmpsl
and
push
dec
and
clc
cmpsl
int
cmp
jg
pusha
push
jmp
insb
mov
adc
push
sahf
or
pop
mov
jno
or
push
xchg
jl
xor
dec
pop
cltd
mov
loopne
movsb
mov
jge
or
cmpl
pop
dec
call
sbb
push
jns
pop
imul
jns
dec
mov
mov
dec
xchg
cmpsb
iret
xchg
sahf
aam
inc
lods
mov
fcmovnu
xlat
insb
ljmp
imul
cmp
into
and
dec
xchg
sar
fbld
cmp
mov
inc
popf
adc
or
sahf
sbb
jle
add
fstpl
jp
xlat
int
test
loop
inc
mov
scas
cmp
xor
sarb
pusha
ja
test
rcrb
push
sti
out
jno
ret
cltd
xor
je
push
inc
adc
dec
test
push
out
pushf
scas
dec
call
xor
inc
xchg
mov
sbb
outsb
orl
cmpsl
inc
stos
xorl
ret
outsl
jne
fiadds
fldt
shll
mov
cmp
mov
mov
roll
mov
ds
adc
inc
cmpb
lahf
inc
gs
movl
mov
pop
cld
mov
aam
std
sbb
add
mov
mov
std
testb
pop
push
mov
lock
xor
mov
cmpxchg
push
pushf
sbb
mov
or
popf
sbb
mov
pop
pop
rep
adc
dec
shll
test
pop
rcrl
repnz
mov
add
pop
dec
test
xorl
pop
insb
fs
call
out
cmp
mull
jge
data16
daa
or
mov
add
jl
push
sub
fcomps
sbb
push
cmc
cmp
sbb
cmp
pop
popf
adc
setg
imul
or
pusha
jae
push
fucomp
inc
mov
addr16
jmp
push
js
xchg
lahf
imul
sub
ret
pop
pop
icebp
dec
jmp
inc
push
sbb
inc
adc
mov
dec
lcall
bound
nop
dec
xchg
pop
imul
dec
lss
push
sbb
hlt
push
adc
push
push
cmp
sbb
clc
sbb
mov
push
cmp
imul
pop
sbb
out
xchg
and
cld
inc
sub
and
fistpl
daa
insl
jl
test
ret
adc
dec
aas
jecxz
mov
daa
sub
mov
add
jl
sbb
inc
pop
stos
inc
cmp
cmpb
movsb
mov
mov
fisttps
pop
pop
imul
push
push
imul
mov
sbb
loop
inc
xor
aam
arpl
pop
cld
imul
push
sbb
push
adc
loop
imul
dec
cmpsl
or
jne
lcall
mov
mov
nop
mov
int3
xchg
clc
mov
push
cmp
pop
add
xor
lods
push
push
nop
dec
lret
pop
push
dec
push
pop
imul
push
sub
push
mov
scas
clc
pop
push
jae
jae
xor
xchg
and
dec
fistpl
add
cs
or
dec
push
xchg
aam
fs
inc
daa
insl
pop
es
sbb
sbb
les
mov
movsb
pop
mov
inc
outsb
push
fisttpll
movsb
lret
jmp
fmul
loopne,pn
sbb
fs
mov
sbb
in
scas
sahf
sbb
out
repnz
mov
loope
out
xor
xchg
mov
in
add
stos
xchg
out
les
call
aam
inc
movsl
sahf
sub
aaa
outsl
movsb
fadd
push
outsl
aas
mov
je
aaa
mov
add
sub
sub
imul
pop
mov
loope
dec
dec
mov
xchg
lret
inc
cs
or
mov
mov
sbb
dec
mov
cld
or
mov
fsts
or
movsl
mov
push
aaa
or
or
mov
scas
lock
mov
lods
mov
loope
sbb
add
mov
mov
sub
std
jo
stos
cmpsb
insb
imul
add
es
xchg
shll
hlt
mov
push
sbb
arpl
push
scas
addr16
mov
adc
js
push
xor
lods
outsl
cmp
xchg
leave
push
push
mov
cwtl
cs
sahf
inc
stc
add
int
fwait
xor
subl
xor
pusha
xchg
fnstcw
mov
mov
mov
add
dec
xchg
cmp
bound
cs
add
mov
push
adc
push
cmp
imul
xor
mov
adc
add
outsl
fs
dec
and
dec
sub
xchg
scas
and
mov
pop
add
pop
insb
data16
xchg
mov
push
sbb
cmp
push
and
mov
jle
test
mov
dec
cmp
es
cmp
push
adc
xor
and
push
xor
loope
pop
loope
push
flds
jl
cmpsl
int
cs
pop
xchg
andl
jle
in
outsb
insl
ljmp
mov
sub
rcrb
dec
xchg
sub
scas
imul
test
cmp
aas
outsb
cmp
mov
insl
in
notl
cs
pop
shlb
sub
xor
mov
jg
sub
aaa
push
fsubl
cli
fwait
mov
push
sbb
cmp
jp
cmp
icebp
ret
pusha
fstps
mov
lods
les
and
cmp
lahf
jle
sbb
push
fwait
and
pop
add
and
jns
insl
repnz
cltd
out
mov
movsl
loope
dec
push
arpl
or
jmp
xchg
sub
test
ja
pop
or
test
pop
jnp
dec
jnp
mov
int3
and
jne
mov
lods
insl
jl
imul
pop
jae
dec
mov
inc
sbb
and
or
jmp
jmp
mov
lods
movsb
and
adc
cmp
pop
and
or
popf
pusha
push
xchg
sub
push
and
lock
test
pop
mov
fs
scas
sub
loopne
rcrl
outsl
pop
adc
mov
adc
jno
sub
xor
daa
lea
outsb
movsl
cmpsl
adc
fiaddl
call
stc
insl
mov
adc
inc
xor
or
nop
xor
dec
inc
mov
mov
ds
dec
xor
mov
int
dec
repnz
ret
aaa
int
or
dec
ja
push
addb
xchg
xchg
leave
test
lahf
cmpb
mov
adc
push
and
sub
xor
adc
push
pushl
mov
or
outsl
les
inc
inc
pop
fadds
pop
sbb
cmp
lret
mov
js
mov
dec
inc
sti
stos
sub
out
and
lods
popa
pushf
inc
or
call
adc
push
mov
sub
les
fwait
xchg
sbb
mov
jg
jp
push
or
ja
mov
lret
inc
shlb
ljmp
pop
dec
add
insl
sub
icebp
les
cmp
int
pop
imul
loopne
mov
incl
fcomip
cmp
pop
mov
sbb
inc
daa
push
int3
mov
dec
inc
mov
xor
xchg
js
popa
call
and
shlb
jle
mov
sbb
push
xchg
clc
inc
call
adc
dec
leave
mov
push
dec
xor
pusha
lods
pop
mov
and
out
addr16
cmp
call
xchg
imul
xchg
cmp
enter
leave
push
fwait
and
add
mov
in
xor
pushl
das
mov
mov
in
sbb
mov
in
outsb
and
xchg
and
out
sbbb
xchg
push
lods
aam
sahf
xorb
push
cs
adc
push
ja
aad
arpl
mov
dec
in
mov
sbb
outsb
xchg
lds
adc
scas
dec
sbb
pop
popf
dec
cmpsl
mov
jne
repz
adc
pop
pop
push
mov
pop
xchg
mov
jbe
call
sbb
fstp
xchg
cmp
adc
inc
or
dec
aam
inc
es
out
inc
fistpll
movsl
inc
addl
and
sub
test
mov
clc
jne
add
shl
sub
jns
jb
cmpsl
pop
sub
and
mov
sub
push
jl
and
mov
inc
pop
mov
jge
stos
dec
pusha
add
in
jmp
mov
sbb
xchg
push
mov
sub
std
push
pop
mov
xor
mov
and
bound
cmp
mov
out
popa
mov
cmpsl
sbb
sub
sahf
sbb
inc
shll
mov
pop
outsb
sbb
stos
shlb
rcrl
loopne
adcl
xchg
arpl
mov
xor
loopne
lahf
push
scas
mov
imul
cmp
mov
push
imulb
cltd
sbb
pop
mov
dec
ds
loope
sub
je
inc
aaa
sub
adc
subb
fs
xor
sub
js
mov
ret
push
xchg
push
stos
jge
cli
xchg
andl
pop
test
pop
lods
mov
xchg
sti
andb
stos
addr16
adc
cmc
daa
mov
mov
sub
push
movsl
dec
or
out
jmp
out
mov
cltd
sbb
flds
mov
and
xchg
lahf
sbb
bound
movsl
dec
mov
xchg
std
add
movl
mov
aam
lret
mull
and
daa
repnz
stos
adc
xchg
mov
or
call
cmp
cltd
imul
dec
std
cld
xorl
inc
mov
sbb
sbb
push
sbb
arpl
cmpsl
mov
lods
lcall
imul
rcr
adc
xor
shl
sub
fstps
cmp
icebp
mov
cwtl
js
iret
call
inc
aad
mov
mov
sub
inc
push
orl
test
mov
xchg
dec
lea
not
fmull
out
pop
pop
push
sti
dec
cmpsl
mov
jne
call
in
and
xchg
insb
cmp
popa
outsl
int3
mov
call
cld
jo
mov
push
rcrl
aaa
test
rcrb
aad
ret
cmp
pushf
or
jo
andl
int3
jns
lock
dec
pop
clc
ret
push
call
hlt
adc
sub
fsts
jp
jno
mov
inc
jns
jnp
lret
dec
dec
xchg
repz
xor
aaa
inc
mov
dec
mov
sub
outsb
jp
xchg
lea
mov
push
push
mov
mov
cmpsl
sbb
jg
lret
mov
mov
xor
in
test
xchg
sysexit
cmpl
sub
or
bound
pop
int
mov
in
jmp
and
or
sbb
aas
fldenv
dec
ds
arpl
jle
inc
push
xor
add
pop
push
gs
mov
sub
mov
addr16
mov
adc
and
movsb
call
sahf
int
shll
addb
fs
sub
and
sub
shl
push
mov
fcoms
push
out
add
or
adc
mov
add
std
iret
inc
movsb
mov
push
into
xor
je
inc
mov
mov
or
add
xlat
add
mov
out
xor
arpl
jmp
out
repnz
scas
js
lahf
popa
push
dec
jmp
stos
and
dec
mull
push
pop
dec
cmp
les
mov
jp
lds
xor
negb
sbb
pop
add
jp
add
es
popa
aaa
lock
test
aaa
jmp
popf
test
int
xchg
imul
dec
push
imul
ret
int
cmpsl
imul
test
sbb
xchg
dec
mov
mov
cld
nop
pop
sahf
adc
add
loop
dec
mov
jmp
xchg
cs
mov
pop
rorb
add
sbb
pop
cmp
mov
popa
mov
cmp
mov
mov
xor
inc
pusha
pushf
hlt
dec
ja
iret
mov
inc
test
push
movsb
xchg
mov
mov
adc
out
sbb
js
andb
aaa
adc
jbe
and
mov
push
lahf
popa
push
add
sbb
pop
and
adc
test
ficoml
cmp
pop
hlt
scas
scas
or
test
add
out
cmpsb
and
add
andl
sbb
sub
mov
je
inc
and
jge
mov
stos
ss
lods
mov
cmp
sub
stos
insl
or
jne
mov
subb
inc
xor
ret
call
aaa
dec
inc
movsl
pop
mov
sub
xchg
cmpsl
out
insl
and
cmc
fs
loop
sub
mov
pusha
or
inc
pushf
lods
sub
or
mov
lahf
and
clc
push
js
in
mov
jbe
orb
cmpsb
out
pop
push
add
scas
pop
xor
adc
lahf
xchg
and
out
mov
dec
sbb
mov
roll
pop
lcall
add
push
arpl
mov
mov
cmp
cmp
imul
or
push
cwtl
mov
push
mov
sub
movq
mov
rolb
pop
cmc
fcomps
sub
mov
imul
add
mov
pop
jb
daa
pop
adc
cltd
xchg
fsub
xchg
xchg
fcoms
mov
sub
mov
imul
push
xor
mov
xchg
sbb
sahf
mov
mov
es
mov
inc
or
push
sahf
arpl
jb
and
aam
ljmp
jb
pop
jmp
movsl
dec
jp
xor
loope
inc
scas
ja
and
dec
test
cmp
add
clc
out
daa
cs
pop
insb
or
pop
push
aad
sbb
call
or
adc
mov
popa
and
test
sbb
stc
pusha
and
out
add
addr16
add
nop
sahf
inc
jge
call
std
cmpsl
push
cs
mov
jle,pt
int
pop
adc
mov
xor
into
pop
daa
pop
arpl
mov
push
jl
loopne
push
ljmp
les
frstor
sbb
push
mov
jns
dec
xchg
push
jg
xor
dec
adc
addr16
xchg
testl
push
mov
imul
sbb
xchg
dec
fisubrs
fnsave
pop
addr16
ror
mov
sub
dec
and
inc
dec
dec
xchg
clc
jge
cmp
sub
pop
push
push
xor
lahf
or
fisttps
out
addr16
ljmp
in
pop
jae
mov
dec
aam
mov
lea
dec
inc
mov
movsl
cmpsl
or
cmpsl
lock
out
xchg
and
xchg
or
insl
jg
sub
lret
sti
fcomps
xor
sub
repnz
test
cmp
lcall
sub
aas
fldenv
lcall
push
inc
enter
sub
sbb
lds
rcrb
mov
inc
or
jg
pop
push
shll
inc
cmpsb
sarb
mov
pop
sbb
mov
aas
jno
dec
sti
ja
push
sbb
mov
and
jmp
nop
mov
xlat
movsl
dec
jg
jb
mov
lock
lret
xchg
cltd
sbb
repnz
inc
push
mov
int3
mov
test
mov
cwtl
push
test
xor
sub
cmp
dec
out
orl
cmpsl
lods
gs
sbb
cmp
add
ret
insb
jle
test
push
mov
mov
call
es
and
sbb
movsl
pop
sub
jge
mov
dec
in
push
mov
sub
jge
jae
dec
enter
xor
fsubs
xor
lods
adc
and
cmc
xchg
imul
pop
leave
ficomps
xchg
and
sbb
mov
sbb
mov
bound
js
xlat
push
hlt
enter
shr
dec
jo
mov
popa
jne
lds
jno
leave
clc
pusha
call
xchg
xor
jmp
les
insb
push
xor
outsb
fs
and
stos
dec
sub
test
sbb
bound
xor
fistpll
in
ljmp
jae
outsl
jg
iret
test
mov
pop
sbb
iret
movsb
xor
into
mov
ror
jmp
mov
sbb
add
aam
mov
ja
fildll
popa
outsb
imul
mov
sub
cwtl
push
outsl
sti
push
sbb
push
and
and
inc
aaa
cmp
or
push
mov
xor
mov
dec
aas
jne
fs
jnp
mov
shr
sahf
dec
dec
pop
js
xor
adc
lret
adc
mov
or
dec
dec
fwait
sbb
inc
in
clc
ljmp
sub
fsubl
push
sti
mov
mov
loop
ljmp
subb
ficoml
lods
sbb
dec
push
imul
jo
insl
sub
mull
cmp
jl
pusha
out
pop
sbb
sarb
adc
jnp
xchg
push
inc
cmpsl
popa
call
rolb
xchg
inc
je
adc
stos
xchg
lds
cmp
adc
cmp
pushf
mov
cmpsl
or
movsl
dec
sarl
stos
leave
mov
in
sbb
orb
stos
dec
imul
or
mov
inc
repz
bound
gs
mov
loopne
ljmp
iret
cmp
out
mov
out
orl
pop
loope
inc
pop
inc
mov
insb
mov
hlt
stos
jl
je
lock
cmp
stos
xlat
aam
pusha
lret
push
mov
push
fs
sbb
lock
mov
dec
inc
in
sbb
shll
das
test
mov
lret
repz
rcrl
stc
fimull
inc
or
int3
ret
jbe
test
sbb
ficoms
adc
mulps
and
mov
mov
mov
imul
cmp
mov
mov
out
call
insl
jo
mov
test
incb
daa
das
outsl
push
pusha
xor
push
jae
rolb
dec
cmp
movsl
push
and
jg
bound
aas
adc
outsl
insb
inc
pop
fcompl
pop
mov
or
mov
or
stc
fs
lds
popf
push
mov
sub
int3
sub
int3
sub
xor
sub
xor
cmp
stc
outsb
cmp
movsl
add
popa
push
fdivrs
in
jnp
movsb
cmp
in
pop
sub
add
jae
pop
dec
gs
cmp
popf
ss
mov
jnp
cs
xor
sub
repnz
and
jmp
jno
sti
add
aas
jnp
mov
mov
dec
imul
mov
js
inc
adc
xchg
shlb
mov
add
fwait
loope
lret
imul
adc
das
jecxz
xor
inc
subl
xchg
dec
sub
lods
pop
inc
lahf
outsl
inc
fs
test
push
add
ja
cmp
push
mov
add
loopne
jp
insl
mov
test
mov
loopne
mov
in
inc
adc
dec
jmp
mov
jns
and
sbb
bound
lea
pop
repnz
dec
cwtl
mov
aaa
mov
xchg
mov
movsb
mov
cmpsl
jo
mov
shrl
popf
aas
rcr
mov
sar
ljmp
das
movsb
mov
sbb
mov
or
and
dec
aas
ja
insb
jo
xchg
jb
xchg
xchg
hlt
mov
or
pop
lcall
push
fimuls
pop
lods
scas
out
stos
insb
aaa
pop
fnstcw
in
xor
jnp
dec
outsb
or
mov
sub
cmp
cmp
xor
int
js
lcall
mov
xchg
lea
mov
mov
xor
jo
mulb
jne
push
adc
popf
or
sub
cwtl
scas
data16
into
lods
or
dec
lret
scas
stos
outsl
in
xor
inc
dec
mov
and
sub
aaa
push
and
shlb
dec
cmp
sbb
enter
adc
jo
lock
adc
lods
mov
xchg
mov
xchg
sarb
lds
test
push
fildl
mov
xor
push
cli
push
lock
test
dec
testb
lret
xchg
push
outsl
adc
inc
cs
xor
adc
adc
test
ret
cmpsl
push
rorl
pop
push
pop
pop
xchg
int
loop
jae
add
mov
shrl
sbb
cmp
sub
mov
lret
imul
leave
xor
f2xm1
add
mov
add
or
push
insl
and
sbb
orl
movsl
push
sbb
inc
int
into
aaa
popf
and
jo
push
imul
mov
mov
push
and
les
cli
insb
scas
dec
in
sahf
jne
mov
xor
sub
leave
xor
push
lock
inc
or
pop
mov
outsb
popa
lret
clc
and
pop
mov
loop
xorl
xchg
mov
loope
jbe
hlt
imul
fcoml
add
nop
icebp
fisubl
push
mov
and
in
push
mov
rcll
jns
ds
dec
xchg
shlb
out
cmpsb
fists
xor
filds
dec
jns
and
jecxz
insb
out
or
or
outsl
or
sub
pop
cld
lods
into
pop
xor
dec
lods
mov
jp
rcl
xchg
pop
in
pop
push
imul
imul
pop
mov
imul
aam
or
test
mov
mov
xchg
gs
mov
fs
popl
mov
fsubl
mov
ficoms
imul
jnp
xor
fs
adc
lods
sbb
and
pushf
xchg
pop
dec
movsb
xchg
insb
and
jp
and
sub
jge
pop
inc
in
xlat
pop
cli
sub
or
push
pop
in
dec
inc
xchg
dec
fsubs
dec
push
fimull
loop
jb
dec
adc
add
cltd
pop
mov
fistps
test
inc
and
pop
or
mov
clc
xor
adc
test
sbb
inc
fidivrl
dec
shlb
shld
cmp
mov
xchg
and
cmp
inc
and
es
cltd
and
fisttps
cmp
les
xchg
test
mov
lods
mov
push
jb
popf
js
jge
mov
and
jge
outsl
je
mov
das
imul
sub
movsb
inc
or
cltd
test
fnstenv
repz
push
out
std
cmp
mov
sete
mov
mov
outsb
dec
shl
adc
stos
int
sbb
push
std
xor
sbb
addr16
xor
es
out
das
and
sub
aaa
leave
xchg
int3
dec
pop
inc
sar
cld
push
cmp
imul
mov
je
push
add
jae
pop
sbb
shll
std
mov
pop
outsb
push
lahf
popf
dec
fldt
push
mov
cs
inc
cmp
xchg
lret
in
mov
pop
xor
lods
int3
push
ret
int3
std
sbb
jae
push
inc
bound
mov
sub
sbb
mov
push
pop
push
add
insb
daa
std
or
mov
mov
in
jle
xor
lock
mov
das
stos
sub
xor
dec
pop
jge
dec
jo
sti
jl
and
jecxz
inc
xor
test
into
cs
xchg
loope
in
cmc
insl
je
pop
ret
push
mov
mov
mov
decl
in
sub
mov
sub
jb
and
lods
hlt
push
ficompl
mov
xor
into
add
mov
dec
mov
roll
outsl
mov
imul
dec
mov
les
es
xchg
jmp
iret
and
pusha
jp
jp
and
rcrl
or
mov
addr16
mov
sahf
xor
pop
mov
cmp
fstpl
or
pop
inc
cmc
imul
jbe
cmc
in
std
rcll
shll
or
xlat
ret
rcll
push
ja
pop
in
mov
push
jbe,pt
enter
loope
leave
add
jbe
mov
test
jae
insl
movsl
gs
rolb
mov
pop
jl
shl
lods
notb
xor
push
loopne
popf
subl
test
cmp
inc
mov
cmp
sbb
movsb
imul
rcl
and
dec
cmp
sbb
jne
jmp
mov
imul
arpl
daa
clc
jp
xchg
prefetcht0
scas
dec
add
and
repnz
aas
ljmp
push
sub
mov
jb
jp
jecxz
ja
sbb
test
sub
push
in
xchg
add
sbb
andb
lods
sti
or
sub
add
mov
repz
jbe
test
push
jnp
xchg
adc
jo
pop
or
pop
pop
lahf
and
or
add
sahf
cmp
push
sbb
pop
out
lret
filds
popa
mov
and
xor
into
pusha
push
adc
push
lret
clc
test
xchg
test
push
repz
cli
call
loop
leave
popa
push
loope
dec
jne
insl
je
mov
cmp
test
fmull
mov
and
insb
push
inc
stc
cmc
inc
inc
cltd
imul
mov
lret
mov
lock
sbb
mov
sub
mov
sub
mov
ljmp
iret
and
out
shrl
mov
xlat
push
sbb
push
in
dec
lcall
mov
sub
add
mov
mov
xor
cmp
cmpsl
in
sub
xchg
inc
jl
jmp
mov
and
cmp
and
push
or
scas
cmp
mov
push
fs
hlt
push
mov
add
pop
inc
inc
xor
jge
sbb
inc
loopne
or
sti
sbb
sub
jg
add
lods
sbb
insl
ficoms
sbb
ret
adc
xor
jge
scas
das
incb
imul
outsl
outsl
std
jo
mov
in
mov
push
call
sub
incb
popa
loop
push
outsl
dec
cli
pop
push
popa
in
scas
data16
dec
dec
fnstcw
pop
sti
mov
mov
mov
pushf
sub
lret
testb
cli
sbb
jle
lock
aam
sub
loopne
adcl
push
ljmp
je
xor
push
mov
test
mov
inc
inc
and
movsb
fildll
test
adc
cmp
into
loope
outsl
cmpsb
xor
stc
mov
in
insb
xor
cwtl
dec
outsb
lods
fdivl
push
loopne
dec
cmp
cli
inc
pop
inc
hlt
adc
mov
jl
xchg
jae
adc
mov
lods
cld
xchg
xlat
push
popa
lahf
xchg
push
mov
cmpl
push
jae
test
push
les
hlt
popf
stos
jl
or
and
and
aaa
or
das
mov
or
dec
je
nop
lods
pop
adc
dec
pop
addl
dec
pop
int3
cltd
sbb
and
mov
pop
pop
xchg
mov
pop
bnd
dec
cmp
or
dec
push
mov
jo
popa
lcall
or
pop
cs
dec
test
aaa
mov
adc
pushf
inc
lea
dec
std
icebp
inc
sub
mov
shr
mov
dec
inc
lahf
mov
mov
lahf
fwait
daa
cwtl
outsl
lods
and
stc
hlt
push
repnz
out
int
addr16
mov
jg
mov
sub
mov
xor
adc
pop
clc
ds
test
pop
ljmp
and
mov
subl
cmp
mov
mov
movsb
out
xor
mov
sarb
xor
jae
stc
inc
test
in
adc
jg
fabs
cltd
or
cmp
mov
into
mov
add
or
push
loopne
sti
dec
pop
inc
jp
and
mov
call
xlat
fs
mov
and
pop
inc
insl
shlb
fsubs
mov
sub
insl
and
cmp
pop
cld
shlb
jbe
les
mov
outsl
sub
push
test
mov
lods
xor
call
jg
mov
xor
and
sub
mov
pop
jl
cli
mov
jp
xor
and
insl
imul
imul
jg
or
fsubp
push
mov
push
imul
movsl
in
sub
test
adc
loopne
insb
fiadds
jno
negl
ljmp
or
push
sub
mov
push
nop
icebp
inc
pusha
xor
mov
adc
jno
clc
xchg
cmp
xchg
jbe
popf
dec
mov
xor
mov
mov
mov
inc
fimull
push
inc
das
inc
pop
fstpt
fsubrs
sahf
daa
mov
sub
addr16
add
inc
sbbb
pusha
pop
pop
fld
int
add
mov
xchg
nop
shrl
out
push
xor
pop
mov
sub
fcomps
inc
adc
jecxz
pushf
mov
stc
adc
das
out
aas
aas
and
jmp
mov
dec
insl
punpcklwd
insl
push
push
inc
mov
imul
mov
jb
adc
dec
jne
xchg
jecxz
lret
adc
jle
xlat
popa
adc
in
movsl
inc
mov
popl
mov
jge
data16
xchg
fucom
push
lret
gs
movsl
add
push
das
rcrb
inc
orl
jecxz,pt
imul
leave
fimull
fldcw
or
fsubs
stc
out
fstps
hlt
xchg
sbb
pop
aad
stos
add
scas
outsl
popa
dec
add
push
mov
push
pop
xchg
inc
and
mov
sub
lahf
insb
push
push
test
nop
sub
cmp
ss
iret
les
add
imull
sbb
cltd
rcrb
sbb
mov
and
pop
lcallw
aas
fxch
mov
test
push
inc
cmp
daa
jmp
sub
hlt
jmp
jecxz
aas
jle
push
xor
insl
xor
mov
jb
push
jo
and
movsl
cmp
in
imul
sbb
jecxz
test
outsb
mov
adc
jecxz
mov
pop
pop
fs
div
test
mov
mov
mov
or
out
jnp
push
adc
jns
fistl
push
mov
dec
mov
cmc
xor
hlt
pop
rolb
mov
std
pushw
pop
test
jno
xor
jnp
pop
std
nop
dec
and
dec
or
push
jo
add
out
addr16
adc
jle
mov
pop
jbe
add
fldt
les
lods
add
loopne
rdtsc
adc
mov
push
sti
in
jmp
pop
mov
adc
fcmovu
push
data16
jb
ja
shlb
loope
jnp
lret
repz
addr16
mov
jp
sub
pop
test
jmp
into
xor
or
imul
cli
adc
pop
stos
mov
mov
dec
ds
shll
xlat
or
mov
stos
sbb
aam
cmp
sub
jb
add
mov
leave
xor
addr16
mulb
add
and
cmp
ficoms
out
idivb
mov
adc
jecxz
lea
fstps
inc
inc
mov
pop
push
add
jne
xchg
ss
movsl
mov
mov
insl
daa
xor
jo
inc
jae
mov
imul
sub
into
and
mov
mov
push
adc
sbb
scas
cli
mov
add
cmc
cmp
stos
inc
leave
lods
es
popa
xor
mov
pop
sbb
clc
pop
push
gs
mov
aam
sti
movsb
xchg
fdivrp
je
inc
aam
add
cltd
push
insb
cmpl
pop
mov
shl
xor
int
es
inc
frstor
mov
inc
leave
add
test
test
and
push
pop
inc
mov
arpl
push
scas
jg
outsb
mov
leave
sub
outsb
jl
adc
inc
stos
dec
inc
lret
cmp
arpl
jo
test
rclb
xchg
test
adc
inc
ja
sbb
mov
jb
aaa
or
pop
iret
js
ljmp
addr16
or
or
popf
and
idiv
jp
scas
sarl
pushl
dec
pop
js
out
mov
add
or
pop
mov
inc
stc
push
das
movsl
arpl
insl
add
sbb
push
pop
iret
mov
push
or
sub
jno
out
xorl
push
subl
and
push
dec
sub
mov
divb
cmpsl
xor
leave
sbb
sub
addr16
inc
lds
push
jns
mov
lret
mov
jecxz
jne
cld
aad
aaa
das
dec
pop
sub
and
test
pusha
mov
pop
lret
addr16
cmp
mov
and
lahf
pushf
mov
push
jnp
mov
jp
lods
push
lcall
aaa
aas
ja
jle
adc
dec
xchg
dec
jbe
in
sahf
or
push
jmp
dec
mov
xlat
scas
data16
pop
fisubs
data16
shrl
pop
pop
add
cmp
push
test
and
xlat
cmc
loop
or
rol
ss
jb
push
cmp
push
xchg
imul
jo
fisttpll
mov
lahf
gs
pop
add
pop
stos
adcb
scas
mov
jns
call
push
pop
mov
stc
pop
stc
or
test
sub
xor
insl
cmpsl
add
lahf
outsl
ljmp
pop
pop
movl
jp
jl
pop
movsb
dec
mov
add
ret
shr
ds
jnp
or
pop
jmp
inc
sarl
nop
mov
cs
imul
out
std
or
push
std
push
sbb
add
imul
imul
dec
push
incl
arpl
sarl
repz
fisttpll
or
fisttps
sub
dec
ds
inc
cmp
mov
fildll
cmp
adc
ja
nop
cmp
push
ss
lahf
push
and
xchg
cmp
push
fnstsw
pushf
loope
mov
mov
dec
pop
stos
cmp
sub
repnz
jae
mov
sub
test
lea
sub
out
jecxz
or
in
test
addr16
shr
subb
or
test
outsl
add
shll
addr16
xor
adc
and
sub
popf
lahf
xchg
repnz
adc
pushf
pop
out
and
mov
outsb
lds
or
lods
cmp
cmpb
inc
fdivr
mov
insb
popa
aas
roll
out
inc
stos
xor
pop
push
mov
loope
xlat
nop
push
jmp
hlt
add
xor
or
mov
sbb
in
pop
mov
fists
negl
imul
inc
test
sub
jle
loope
or
sti
ret
xchg
int
add
mov
cld
adc
clc
add
arpl
xlat
gs
sti
or
jecxz
push
mov
add
add
xchg
insb
mov
out
lea
in
xchg
sub
adc
sbb
out
pop
popa
addb
leave
jl
xor
dec
jae
test
mov
mov
mov
and
sbb
add
movsw
int
mov
rcr
inc
outsl
mov
notb
dec
pop
and
xlat
ret
inc
dec
dec
sbb
pop
adc
inc
loopne
mov
sbb
cmp
aas
insb
in
sub
sub
xor
ret
cmpl
mov
aad
jle
repnz
in
repz
imul
and
cmp
sti
pushf
mov
shll
cmp
cmp
inc
and
test
cmp
inc
mov
sub
sub
in
loop
mov
mov
bound
mov
in
adc
inc
pop
call
ret
jns
int3
adc
cmc
mov
mov
mov
addb
dec
mov
mov
mov
xor
pop
fidivrl
pop
out
mov
insb
fmull
mov
cmp
sbb
ljmp
lods
pop
jge
pop
mov
sub
into
add
inc
mov
inc
adc
push
inc
sub
lcall
mov
xchg
pop
lea
push
lahf
xchg
pop
aaa
pop
sub
fbld
outsb
or
add
jno
ja
fidivrs
sub
movsl
test
inc
lahf
and
adc
fimuls
pop
xchg
popf
in
arpl
xchg
pop
cwtl
jo
dec
pop
adc
movsl
pop
stc
movsb
jns
mov
in
test
mov
or
cmpsl
adc
aas
jo
or
fmuls
out
sbb
xor
jg
xor
and
cmc
leave
mov
push
jl
mov
nop
or
cld
xchg
adcb
movsb
xchg
adc
lds
lods
sub
xor
cmp
pusha
je
fsubrl
sub
xchg
xlat
sbb
add
out
jae
shr
test
cmp
sbb
sahf
mov
repnz
push
xchg
jmp
push
outsl
int
ret
and
dec
inc
fistps
jle
mov
jmp
daa
shrl
shlb
mov
test
jl
pop
jmp
sti
mov
push
sbb
inc
or
inc
xchg
je
call
addr16
pushf
aam
pop
xor
and
mov
sub
mov
and
cld
std
mov
xchg
inc
cmp
add
nop
out
sbb
mov
loope
fs
rorl
out
addb
pushf
xor
xor
dec
gs
loope
mov
sub
arpl
ja
dec
mov
and
shl
add
fbstp
leave
in
push
pop
loopne
add
sub
ss
orl
and
ret
js
or
pop
xchg
lock
jae
orb
mov
sti
inc
ja
loop
stc
adc
mov
mov
sysret
xchg
jns
xor
push
cld
or
outsb
mov
lahf
scas
pop
or
mov
roll
aam
sbb
jp
roll
insb
mov
pop
xchg
xchg
add
and
js
mov
popl
mov
mov
sbb
pop
lret
inc
and
adc
xchg
adcb
rcll
rcrb
ja
dec
pushl
iret
pop
cld
insl
les
xor
cmp
jbe
int
les
cmp
aas
push
rcl
pop
or
xchg
mov
dec
out
pop
push
je
inc
mov
or
in
rcrl
mov
scas
lret
xor
cmp
xrelease
xchg
rep
scas
in
inc
notl
dec
dec
into
and
add
scas
xchg
inc
jnp
cmp
out
fs
pop
pop
dec
sub
jns
sbb
xorl
mov
mov
sbb
mov
enter
or
sti
fnstenv
leave
pop
cli
cmpsl
xor
pop
or
mov
add
mov
cmpsb
inc
pop
lcall
inc
outsl
pop
into
movsb
mov
sub
xchg
shlb
add
loopne
dec
in
loop
xchg
inc
out
dec
push
aam
cmc
add
cmp
fadd
dec
jae
aam
jg
inc
xor
int3
mov
xlat
add
pushf
xor
jecxz
flds
je
inc
mov
shrb
push
rolb
push
mov
sub
cwtl
inc
sti
int
dec
ret
iret
mov
dec
leave
mul
lcall
cmp
add
nop
icebp
test
int
int3
jge
push
movsl
mov
cmpsl
popa
aam
fdivs
flds
sbb
xlat
or
mov
inc
mov
cmp
mov
or
mov
push
adc
cltd
inc
add
jmp
loope
jle
jle
loopne
add
mov
jmp
adc
sub
pop
fcomip
in
mov
mov
outsb
jnp
loop
or
and
fcompl
cld
ds
mov
dec
out
jle
adc
pushf
mov
add
call
mov
adc
clc
mov
dec
jmp
push
jne
mov
pushl
add
xor
and
mov
lods
push
dec
addr16
dec
pop
in
repnz
cmp
popa
mov
jle
js
sub
jb
dec
sbb
adc
loope
dec
jbe
jae
jg
fwait
sbb
sub
dec
mov
or
cltd
jae
push
mov
mov
fidivl
lods
sub
and
mov
adc
push
sub
pop
lret
icebp
ret
add
inc
and
push
sub
push
and
ret
movsb
repnz
int3
in
push
cmp
stos
enter
and
adc
imul
jns
pop
xor
sarb
inc
push
mov
inc
aaa
inc
mov
jecxz
cmp
out
push
out
cwtl
repnz
test
jno
and
fs
negb
rorl
inc
jnp
xor
push
pop
inc
sbb
or
rcl
ljmp
adc
adc
add
dec
cmp
mov
out
sub
jae
outsb
gs
data16
mov
sti
arpl
inc
in
sbb
loop
mov
adc
test
xchg
movsb
insl
mov
std
add
fcoml
dec
mov
mov
mov
and
in
xchg
mov
jns
lods
xchg
pop
scas
dec
xor
outsl
cmp
sub
cmpb
or
jle
aam
ret
pushf
xchg
subl
and
in
or
mov
push
roll
dec
setp
les
jo
dec
adc
and
dec
orl
ret
out
gs
test
push
add
xor
fiadds
cld
push
shlb
pop
add
lret
aam
in
int
lcall
cld
aam
ss
sub
or
gs
lds
scas
test
push
addr16
dec
pop
int3
daa
lock
outsb
mov
in
pop
adc
push
sbb
jg
fs
pop
mov
shlb
into
push
mov
sub
pusha
gs
es
xchg
jle
bound
jb
jnp
push
mov
inc
notb
sub
push
shrl
sub
and
adcl
cmp
push
dec
outsl
mov
fildll
mov
xchg
lcall
pop
outsl
push
int3
popa
mov
sbb
mov
sti
jle
mov
pop
mov
movsl
inc
movsl
out
cmp
mov
cltd
cltd
loopne
xor
push
and
push
mov
xor
push
sub
aaa
xor
mov
dec
ja
cld
call
stc
bound
stos
pop
cmp
sub
ljmp
mov
les
movsb
pop
xlat
nop
xlat
jnp
cmp
mov
sub
test
mov
imul
cltd
or
and
in
pop
daa
and
push
mov
mov
insl
out
mov
sbb
sbb
arpl
and
mov
mov
sti
sub
insb
jle
mov
sarl
push
decb
loop
jmp
iret
mov
movsb
xor
pop
xchg
push
add
mov
sti
adc
mov
push
push
outsb
pusha
imul
mov
inc
cmpsl
jnp
mov
stc
movsl
mov
jmp
dec
cmpsb
pop
insl
dec
ss
pop
sahf
push
add
fldcw
cmpsl
es
xor
dec
sub
mov
xchg
mov
outsl
xchg
les
jns
inc
inc
xchg
in
xchg
xchg
or
mov
fcomip
dec
mov
dec
mov
in
pop
inc
dec
orl
xor
outsl
push
mov
mov
clc
mov
or
push
out
xor
inc
pop
cmpsb
fiadds
push
sub
inc
cmc
out
ror
jo
pop
fbld
dec
pusha
imul
pushf
movl
mov
sub
sahf
push
repnz
push
stos
mov
cmp
or
add
xchg
popa
mov
jo
cmc
pusha
jns
outsb
adc
add
mov
mov
pop
push
cmp
fcoms
je
cmp
jge
dec
fadd
bound
inc
cmpsl
lods
mov
cmp
cmpsl
adcl
clc
push
movsl
add
cli
call
pusha
mov
movsl
jp
and
jge
mov
jbe
cmpsb
adc
or
les
jne,pn
xor
push
pop
jnp
adcb
xor
fisttpl
roll
inc
arpl
inc
shll
and
ljmp
push
sahf
jbe
xor
bound
mov
or
adc
rcrl
fwait
adc
adc
aam
push
push
jg
jns
insb
mov
or
out
pushf
xchg
bound
lahf
into
add
inc
pop
push
mov
out
mov
fcmovnb
loop
mov
push
out
js
add
mov
push
ss
mov
test
test
outsb
insl
mov
adc
js
xchg
xchg
int
fucomp
pop
aas
test
lock
out
fildll
sbb
fcoms
jne
outsl
hlt
or
aaa
hlt
test
inc
ljmp
stos
ss
aaa
xor
fiaddl
cmpsl
lds
pushf
mov
push
mov
ds
subl
sbb
pop
lods
adc
outsb
sti
repz
call
ja
decb
cs
movsb
xchg
scas
or
cmpsl
mov
adc
add
jae
ds
movsb
dec
js
gs
xor
or
ret
xchg
fisttpl
scas
icebp
mov
cs
pop
xchg
xor
cmp
xchg
add
xchg
shll
cld
xchg
cmp
mov
mov
popa
xor
jmp
sahf
adc
sub
cld
addr16
pop
inc
gs
push
xchg
cmp
or
pop
jmp
test
std
add
mov
mov
dec
mov
iret
pop
das
test
inc
xchg
xchg
dec
cli
cltd
daa
imul
jge
pushf
std
add
push
cmp
jae
rcrb
loope
or
and
and
pop
and
insl
pop
and
xchg
sahf
sti
dec
jmp
cmp
push
xor
mov
pushf
inc
mov
out
imul
adc
test
fs
push
in
mov
mov
cwtl
cmp
test
dec
jnp
mov
jp
mov
xchg
inc
mov
mov
inc
mov
sbb
ljmp
dec
sub
mov
loope
mov
test
js
pop
push
inc
pushf
aam
aad
mov
test
mov
cmpsl
add
add
xchg
adc
dec
cs
pop
mov
cmp
das
shr
mov
xchg
jle
cmp
mov
fistpll
pop
fidivs
cmp
loopne
test
insl
movsl
inc
cld
pushf
dec
jno
mov
sub
xor
pop
ja
mov
push
jecxz
addl
sahf
jge
orl
xor
cmp
pushf
arpl
mov
xor
mov
pop
jle
popa
stc
add
testl
pop
xor
les
cltd
in
pop
mov
or
ret
and
mov
cmpl
das
outsb
pusha
bound
outsl
adc
xchg
xchg
insl
ss
cmc
sub
cmp
fsubrs
pop
pop
cmp
mov
out
scas
xchg
jo
data16
cs
stos
mov
mov
mov
sbb
add
in
nop
call
xchg
dec
push
sub
rorb
xchg
dec
test
popf
cmp
cmp
jg
sbb
out
fistpll
inc
xor
fdivl
sbb
sahf
popf
scas
fistl
gs
cwtl
mov
bound
stos
pop
call
in
mov
jl
cmp
out
ficomps
in
in
nop
or
js
into
or
lods
mov
outsb
cs
xchg
xchg
xchg
xlat
fs
and
mov
mov
push
lea
dec
push
in
dec
xchg
cmc
cs
fstl
inc
sbb
aad
mov
pop
cli
enter
pop
loop
mov
iret
rorl
nop
xor
add
iret
mov
enter
adc
daa
jae
in
stos
sbb
mov
loopne
bnd
xchg
sbb
ljmp
lods
std
es
mov
push
out
sub
into
push
lock
cld
in
push
rep
push
and
fcoml
sbb
push
cmp
mov
and
xor
roll
popf
arpl
jo
outsl
lret
mov
outsl
jmp
bound
pop
dec
into
inc
adc
pop
das
push
aam
scas
dec
pop
dec
dec
imul
cmp
jo
xchg
cmp
stc
sahf
test
pop
or
fnstsw
push
outsb
aam
mov
iret
jle
jbe
mov
dec
lcall
insb
xlat
inc
mov
sbb
faddl
stc
pop
stos
pusha
inc
ljmp
arpl
adc
jo
fneni(8087
push
mov
sti
push
aaa
decw
and
inc
sub
xlat
adc
mov
dec
pop
jp
movsl
sub
and
aaa
xor
and
mov
sbb
gs
out
mov
mov
and
sub
cmp
imull
mov
or
mov
adc
xchg
push
sbb
pop
mov
sbb
lret
inc
inc
retw
arpl
cmp
sbb
inc
mov
ficompl
jl
enter
pop
stos
and
test
jl
fcomi
in
inc
push
pop
aas
in
lds
xchg
mov
imul
mov
push
push
cmp
movsb
cld
rclb
or
inc
push
cmp
mov
addr16
in
inc
adc
ret
pop
arpl
adc
sahf
mov
mov
and
daa
add
fwait
movsl
insb
inc
f2xm1
lods
pushf
sahf
fldl
sti
je
push
testb
fisttps
mov
mov
or
ret
mov
mov
xchg
xor
pop
outsl
push
push
stc
dec
mov
mov
push
push
nop
imul
incb
xchg
test
mov
repnz
sub
adcl
mov
aad
adc
push
cmp
adc
pop
ror
daa
xor
repnz
popa
mov
pop
jae
push
pop
or
mov
out
cli
leave
add
mov
subb
sti
loopne
mov
and
adc
lds
dec
xchg
sub
repnz
adc
dec
cmp
lret
cmp
scas
popf
sub
dec
lods
gs
imul
pop
adc
pop
movsb
stc
aaa
jge
lds
sarb
push
push
out
mov
scas
pop
or
push
mov
mov
in
inc
fcomps
std
cmpsb
ret
push
into
mov
cltd
jmp
mov
xor
std
mov
je
pop
mov
out
test
xor
push
sub
fcomi
xchg
stos
lret
mov
push
enter
shl
sub
cmpsl
daa
inc
rolb
push
inc
data16
sub
rcrb
loope
cmp
xor
in
sub
movsl
add
xchg
imul
xchg
and
pop
inc
daa
add
cmc
mov
dec
sbbb
jp
aas
mov
cmp
dec
sti
sub
mov
pop
jge
inc
je
xchg
mov
arpl
cs
jbe
and
adc
imul
sbb
cmp
aaa
jl
pop
adc
push
and
pop
push
pop
outsl
and
fidivrs
or
lcall
and
mov
adcl
imul
orl
lds
imul
rolb
insb
out
aam
leave
lea
push
test
clc
aam
test
arpl
inc
imul
jns
xchg
cmp
stc
mov
aad
dec
push
les
add
xchg
pop
in
movsb
cmpl
in
mov
test
adc
lcall
sub
scas
mov
xchg
movsl
dec
adc
add
int3
add
ror
negl
popf
ss
cmpl
sbb
jnp
add
xor
test
xchg
xor
test
iret
mov
pop
imul
sar
aaa
out
jne
aad
imul
jb
out
mov
sbb
jb
out
adc
add
adc
outsl
push
mov
fs
imul
popf
push
mov
jp
in
movsl
mov
mov
jbe
xor
adc
sub
aam
xor
out
xor
in
cmp
loope
adc
xchg
lods
jmp
xor
mov
jl
cmp
out
dec
sbb
mov
sarl
aaa
xchg
rcrb
aam
mov
dec
daa
dec
jge
jb
push
fmul
fdivr
das
test
inc
and
scas
xor
mov
pop
cwtl
int
rorl
lea
mov
dec
xor
xor
loop
adc
fnstsw
rcr
inc
mov
shll
mov
jb
mov
pop
fisubs
int
pop
insb
enter
imul
aam
mov
cwtl
insl
pop
pop
jae
sub
pop
mov
adc
jb
inc
pop
dec
cmpsl
insb
add
fistpll
xor
popa
int3
mov
aam
int
iret
jae
xchg
dec
sti
cld
in
mov
sub
enter
push
test
push
pop
push
cmp
cmp
lods
mov
cmovl
or
fs
cmp
jns
test
es
and
cmc
pop
loope
stc
data16
fldenv
push
aam
notb
jge
add
and
aas
insl
inc
jns
sbb
adc
aam
inc
pop
mov
insb
adc
lret
dec
fildll
jg
mov
test
sub
inc
int3
push
inc
data16
and
outsl
xor
addr16
data16
inc
inc
sub
adc
mov
sub
vmovd
sbb
mov
xchg
lds
int
outsl
sub
add
sbb
insb
fwait
dec
js
fsubrl
mov
ret
mov
sahf
push
sbb
js
jns
xchg
dec
mov
call
stos
data16
in
inc
sbb
dec
ss
imul
add
mov
mov
adc
push
cltd
jecxz
out
and
sbb
les
sbb
addr16
leave
xlat
dec
js
sub
mov
lods
subb
test
test
inc
scas
xchg
mov
jne
or
scas
outsb
push
out
je
fbld
test
test
mov
stos
ljmp
scas
das
fdivr
jb
dec
xor
std
stos
mov
and
mov
cmpsl
or
insl
cmp
inc
jbe
inc
popa
mov
and
cmp
inc
fs
adc
inc
cs
adc
ret
outsl
jge
cmp
fdivrl
rorb
lea
movsl
ja
push
je
jbe
cli
mov
or
outsb
cmp
sbb
int3
js
xchg
xor
pop
inc
aas
mov
add
out
sub
mov
sub
test
sbb
daa
ja
mov
outsb
mov
addr16
fisubs
push
jmp
cmp
dec
sub
dec
add
fistpl
and
in
jmp
add
fldcw
addr16
mov
jg
lods
jns
divb
loopne
nop
imul
pop
inc
dec
mov
arpl
and
repnz
mov
outsb
cld
fdivrs
add
int
icebp
sarl
xor
push
rcr
xchg
andl
movl
and
inc
fwait
push
sub
xor
in
popf
mov
movsb
fwait
repnz
dec
xlat
aaa
loope
mov
nop
mov
pop
xchg
xchg
mov
or
fwait
mov
aaa
test
xchg
inc
and
scas
lret
sub
push
aas
or
sub
cld
nop
push
repz
jne
fwait
pop
nop
or
mov
or
mov
js
lretw
aam
test
xchg
sahf
gs
enter
imul
push
dec
push
call
aad
movsl
add
movsb
insl
iret
xor
push
test
xchg
cmp
adc
mov
xor
ficompl
popf
out
or
xchg
ds
int3
shll
pop
mov
xor
out
outsb
in
dec
cmp
fistpll
xchg
lret
jle
test
loope
fmul
jns
arpl
mov
mov
push
cmpl
les
and
sub
jnp
shlb
pusha
fsubp
adc
xchg
push
stc
or
cmp
mov
push
push
sbb
imul
daa
dec
mov
mov
adc
xchg
pusha
sbb
mov
pop
xchg
stos
lcall
popa
jge
test
cmpb
jne
jnp
mov
dec
sub
jp
in
xor
imul
testl
xor
inc
adc
and
popa
lds
loope
cmp
fdivs
aaa
add
mov
or
mov
cmp
push
dec
mov
imul
test
mov
aaa
in
fmull
pop
fdivl
daa
inc
pop
movsl
inc
ss
and
int
int3
mov
mov
loopne
repz
jne
loop
inc
mov
hlt
mov
adc
ret
int
xchg
fbld
push
push
fdivl
or
mov
inc
push
sbb
test
sub
insb
gs
sbb
jb
add
hlt
lret
push
and
xchg
repnz
mov
mov
into
push
push
xor
push
mov
sbb
outsb
or
or
mov
dec
sub
pop
insl
add
aad
pop
push
jo
jne
popf
mov
pop
pop
jae
push
pop
jge
mov
inc
push
icebp
mov
jns
jo
in
in
sbb
cwtl
fisttpll
aam
stos
pop
cmp
adc
xlat
xchg
hlt
ret
int
mov
mov
mov
loope
jne
adc
imul
mov
or
fisttpl
add
adc
stos
cmc
adc
cmp
movsl
mov
loop
ficompl
pop
xor
into
aam
ljmp
add
mov
add
cld
es
arpl
cwtl
cltd
sarl
jbe
es
cli
in
add
xorl
push
popa
inc
outsl
xchg
cmp
inc
mov
jmp
mov
rolb
mov
fisttpll
jge
sub
negb
and
popa
adc
mov
repnz
mov
xchg
lea
and
mov
fbstp
mov
lea
int
sbb
push
xchg
mov
negb
pop
jno
daa
dec
xchg
pop
jo
xlat
push
adc
mov
addr16
pop
fnsave
and
pusha
stc
fstpl
jge
inc
in
cli
sti
jl
mov
stos
and
movsb
xchg
xor
pushf
inc
jae
clc
imul
notl
lret
int3
stos
cmp
and
sub
dec
push
stc
fs
mov
push
mov
pop
mov
repz
cmpsb
sbb
mov
jmp
xchg
or
pop
insb
sbb
iret
lods
push
scas
pushl
and
cmp
xor
and
test
cmp
sub
cmpsl
iret
scas
cmp
sub
pop
iret
or
dec
test
ret
jae
shll
and
mov
jae
inc
xchg
cltd
insb
jno
mov
add
pop
mov
das
cmc
inc
les
push
mov
jmp
int
and
or
push
nop
ja
pop
aaa
xorb
cmpb
testb
cmp
push
aad
jae
xor
xlat
push
jg
mov
or
and
sub
xor
enter
inc
inc
pop
mov
lret
test
add
jl
in
mov
push
xchg
out
xchg
sub
pop
add
in
push
add
jle
fwait
adc
xor
addb
incl
jecxz
in
dec
xchg
into
push
and
rcll
movsb
movups
arpl
adc
cmp
inc
mov
cs
xorl
cmp
leave
ja
movsb
adc
dec
rcl
add
dec
stos
in
mov
dec
dec
mov
pop
cmp
orl
jmp
sbb
imul
popa
inc
iret
mov
jl
movsb
mov
cwtl
negb
mov
ret
pop
pushf
fdivrs
mov
jns
sbb
fadds
adc
mov
mov
mov
cmp
mov
in
cld
addl
jne
mov
or
shll
sti
jns
rcrl
daa
lea
imul
fs
es
cmp
push
adc
cmp
pop
sub
push
pusha
sbbb
mov
cmpsl
add
mov
out
jae
sub
inc
scas
inc
scas
andl
shll
cmp
mov
in
lods
daa
xchg
adcl
inc
movl
inc
lea
outsl
sbb
push
clc
les
lock
xchg
xchg
fists
ret
lret
mov
call
add
add
xor
cmp
mov
movsl
rcr
lret
cmp
push
lcall
stc
sbb
stc
pop
test
jecxz
pop
mov
sti
mov
add
xor
insb
pop
test
cwtl
jae
sbb
movhps
js
ja
add
cmpsb
jne
jb
mov
mov
ficompl
dec
jbe
sub
les
je
jge
push
in
orl
ljmp
lods
adc
sahf
xchg
into
out
sub
repz
sbb
sub
ret
mov
fnstcw
cmp
inc
inc
repnz
gs
sbb
inc
cs
rcll
out
insb
insb
loopne
adc
cwtl
mov
pop
lret
inc
into
pop
icebp
sti
mov
outsl
mov
cltd
sub
inc
mov
adc
mov
into
cmp
xor
cmc
jns
lret
clc
jmp
mov
repnz
sub
int
pop
inc
inc
jno
pop
dec
add
aaa
pop
mov
loop
inc
push
jbe
and
pop
push
repz
dec
sti
xor
jnp
inc
outsl
adc
adc
loope
jmp
push
pop
and
sbb
mov
aas
addr16
and
popa
dec
inc
popa
aad
mov
push
cmc
mov
xchg
rcll
dec
popa
data16
scas
ret
fbstp
pop
adc
mov
jle
call
xlat
dec
loope
xor
mov
mov
ljmp
gs
mov
and
out
xor
pop
ljmp
push
push
inc
aaa
xor
mov
sbb
cmp
aas
js
mov
push
cld
xlat
push
add
lret
push
push
xor
rcll
and
addr16
arpl
pop
pop
fs
inc
cmp
mov
mov
int
das
lret
dec
aam
push
mov
sbb
mov
pop
add
push
call
sbb
add
push
neg
enter
popa
adc
out
orl
loop
mov
xlat
das
imul
cld
or
arpl
fldt
cmp
addl
mov
sbb
push
nop
test
mov
dec
in
pop
xor
call
sub
adc
cltd
fldt
adcb
and
inc
out
add
push
pushf
jmp
sub
cltd
sub
mov
inc
loop
jle
pop
rclb
ja
out
jecxz
adc
daa
stc
push
add
mov
ja
lret
int
adc
xlat
sahf
hlt
add
popa
mov
addl
leave
fisubl
adc
mov
rcr
cmp
adc
test
clc
dec
das
mov
fdivr
adc
aas
cmpsl
lea
mov
or
adc
leave
xchg
push
rorl
mov
stc
xchg
inc
push
adc
jbe
shrb
sbb
xor
mov
fnsave
and
sbb
ss
popa
fwait
ds
adc
mov
call
xchg
push
hlt
xor
gs
inc
jae
cwtl
clc
clc
mov
sbb
jns
stos
test
rolb
push
shll
ss
or
ret
pop
push
cwtl
pop
push
shll
test
rcrb
inc
popa
movsb
cmovl
std
lock
pop
dec
or
ds
movsb
dec
add
rcrb
xchg
sub
mov
inc
mov
insb
sar
shl
and
stos
dec
dec
pop
fidivrl
bound
jns
addl
and
arpl
loop
call
pop
setae
jecxz
out
test
popf
out
inc
pop
and
pop
xchg
and
and
inc
inc
rcl
xchg
and
xor
jge
insl
imul
mov
shlb
aaa
mov
mov
outsb
lcall
pop
testb
imul
and
nop
xchg
in
jo
leave
sbb
inc
fstl
mov
iret
push
add
add
out
mov
imul
in
dec
lcall
lret
push
push
jp
addl
fs
aas
jne
test
mov
dec
mov
pop
sarl
and
cmp
jl
xlat
mov
sub
mov
fs
lcall
cmpsb
push
call
sahf
std
add
mov
stos
or
inc
jo
dec
sbb
xorb
pop
cmpsb
fsub
out
ret
push
cmp
gs
xchg
ficoms
fdivs
movsb
jmp
ret
sub
mov
xchg
ret
sbb
cmp
arpl
imul
rcrl
inc
push
sub
mov
adc
sbb
mov
push
or
jb
jg
sub
aam
rep
popa
test
test
mov
enter
jmp
push
shrl
mov
ss
adc
mov
loope
pop
pop
sub
jl
inc
and
dec
inc
adc
cwtl
push
test
lods
add
cmpsl
xchg
sbbl
xchg
mov
jns
shlb
mov
lahf
jl
test
js
mov
sbb
mov
push
inc
cs
pop
loope
movsb
mov
dec
sub
add
xor
andl
adc
sub
pop
jle
pushf
in
dec
jg
mov
sub
mov
or
mov
push
popa
adc
loopne
mov
cmpsl
in
arpl
insb
repnz
xchg
and
stos
mov
or
push
ret
add
inc
xor
add
inc
and
pop
lcall
inc
mov
mov
cs
lds
lcall
cmp
xchg
fisubl
pushf
cmp
dec
fisubl
test
daa
nop
or
mov
push
and
int
xor
push
js
push
dec
testl
mov
sub
cmpsl
ja
add
leave
mov
push
inc
outsl
insl
pop
inc
mov
mov
inc
fwait
or
int3
push
scas
dec
popa
cld
add
inc
adc
mov
inc
mov
sub
add
jbe
push
adc
xchg
and
insl
adc
sub
pop
imul
cld
pop
dec
jne
mov
ljmp
and
inc
ds
sbb
jb
adcb
push
add
subb
xor
mov
das
cmpb
lock
pusha
mov
sbb
xchg
jp
and
fstpl
insl
mulb
adc
push
pop
dec
ds
aad
andb
and
push
and
popa
pop
scas
dec
inc
shlb
adc
daa
fs
xchg
lea
sbb
sub
cmp
dec
or
push
push
arpl
push
inc
jne
pop
push
jbe
out
lret
xor
test
cmp
cltd
jp
test
push
add
lock
clc
ss
jnp
mov
or
mov
mov
cmpsl
sbb
notb
test
js
xchg
mov
push
std
sbb
stos
jae
icebp
fwait
dec
xchg
in
imul
dec
sbb
push
ror
pop
ror
push
and
icebp
add
mov
inc
js
or
push
and
sub
popa
adc
sub
call
clc
das
pop
pushl
stos
mov
xlat
imul
ja
mov
push
mov
xchg
inc
pushl
outsl
ret
sbbl
decl
mov
pop
nop
sbb
xchg
nop
dec
jne
sbb
push
xor
xchg
subl
movsl
sbb
mov
mov
mov
mov
jns
add
inc
adc
dec
ds
adc
das
enter
and
or
jl
xchg
ljmp
pop
sub
inc
pop
repz
sub
loop
cmpsl
adc
add
mul
pop
aam
push
insb
arpl
jne
adcb
cmpsl
sbb
outsb
mov
sbb
das
sub
sbb
outsb
mov
pop
adc
int
sub
push
pushf
mov
movnti
rcll
mov
cmp
pop
pop
jmp
int
sbb
shrb
mov
int
sti
shll
bound
cmp
dec
addb
cmp
shlb
mov
push
filds
xlat
or
add
inc
xor
in
ds
pop
xor
mov
cmpsb
in
pop
xchg
adc
aad
dec
push
xchg
push
gs
lret
pusha
adc
mov
scas
inc
das
dec
cmp
imul
pop
out
repz
xor
out
cmp
fadd
mov
inc
mov
pop
das
outsl
shll
cmp
stos
jmp
insl
daa
or
adc
mov
cmp
pop
adc
and
xchg
push
into
iret
sbb
jb
cmp
shrl
push
add
adc
push
xchg
mov
push
or
clc
push
xchg
mov
mov
jl
out
cmpb
pop
cmp
es
inc
bswap
mov
xor
xor
or
jecxz
xorl
test
nop
pop
data16
rcr
call
mov
xor
shl
in
xorl
inc
pop
ret
sysexit
dec
pop
xchg
dec
mov
in
fwait
out
mov
lret
mov
add
icebp
xchg
add
test
mov
jmp
test
lret
and
stc
into
mov
daa
daa
inc
arpl
cmpsb
loopne
sti
adc
sti
pusha
test
or
call
mulb
mov
dec
inc
lods
push
xor
xchg
push
dec
add
ds
pop
repz
sbb
xor
arpl
idiv
outsb
test
mov
aad
popa
ret
or
lock
xchg
dec
loopne
int3
cmp
std
push
stos
mov
mov
or
xchg
mov
xor
xchg
test
stc
ds
jp
addr16
in
mov
mov
mov
inc
mov
leave
push
arpl
movsb
cmpsl
inc
ffree
cmp
xor
scas
sub
mov
sar
loope
jg
cmp
inc
cmp
xor
shr
int3
popf
lds
sub
fstpl
fldt
push
sub
and
rcr
push
or
inc
mov
data16
bound
sub
fmull
jae
lret
fcomi
push
icebp
mov
mov
enter
pop
bound
jo
hlt
sub
test
lds
in
notb
push
insb
and
push
pop
idiv
add
inc
daa
pusha
xor
popa
stos
dec
cmp
xlat
cmp
pop
mov
arpl
inc
pop
inc
dec
jae
xor
mov
mov
icebp
sbb
xor
adc
jp
cmp
mov
in
notl
xor
jmp
popf
pop
gs
and
scas
push
in
mov
lahf
mov
outsl
pusha
and
dec
sub
inc
sbbl
pushf
std
jns
pop
xchg
sbb
pop
out
sbb
push
sbb
out
push
arpl
adc
leave
push
push
sahf
dec
pop
cld
sbb
pop
pop
fmuls
out
adc
clc
cmpsb
je
ljmp
les
int3
cwtl
pop
sub
lret
aaa
dec
inc
out
movq
je
mov
ljmp
push
ss
adc
iret
cmp
leave
sub
and
sbb
aad
mov
out
rcrb
xor
add
std
nop
rol
adc
xchg
pop
inc
pop
push
add
mov
sbb
cltd
push
jle
cmpb
xorb
sub
sbb
lret
pop
push
push
adcl
push
mov
xor
inc
pop
sbb
mov
adc
daa
sti
nop
in
lds
sub
loope
xor
outsl
mov
xlat
xchg
rcl
sub
and
pop
push
lea
or
jo
into
repz
sbb
cmp
gs
fs
rcrl
xchg
aaa
pop
xor
lret
inc
xchg
dec
push
scas
cs
jno
ret
bound
cli
jle
or
js
test
mov
or
lds
push
push
out
push
leave
jge
inc
mov
pop
shrl
movsl
add
movsb
out
leave
push
push
push
inc
mov
pop
fldenv
cmp
outsl
out
sbb
dec
sbb
or
loop
loop
fwait
jge
sbb
xchg
ds
mov
push
xchg
cmp
jg
or
fsubrl
rorb
dec
cmc
cltd
daa
and
push
xchg
pop
mov
dec
sbb
push
inc
adc
dec
jle
pop
sub
jmp
paddsw
sbb
sbb
shrb
add
xor
sub
popa
push
pop
mov
imul
push
mov
dec
mov
mov
push
xchg
movsb
inc
arpl
nop
mov
jbe
adc
cmp
mov
jl
and
stc
adc
aaa
push
ss
adc
outsb
negb
aam
cmp
lods
xchg
mov
sub
mov
mov
out
mov
cmp
incb
icebp
jmp
jnp
and
jae
cwtl
fcomps
insb
adc
cmp
sbb
dec
in
or
fidivrs
pop
test
fidivs
sti
mov
jnp
outsl
or
mov
leave
inc
xchg
sub
push
imul
and
daa
sub
dec
cmc
cmpsb
pop
sbb
mov
inc
pop
pop
push
sub
cmp
add
outsl
or
jecxz
insl
sarl
sub
mov
movsb
xchg
xchg
rorl
sahf
movsl
sbb
lods
adc
out
shrl
loopne
rcrl
loope
movl
push
lret
jg
lods
xor
xlat
mov
dec
cmp
popa
mov
data16
xchg
mov
push
xorb
pop
push
jmp
xor
inc
stc
lods
shrl
mov
cmc
inc
mov
pop
xor
or
inc
add
sbb
push
test
add
push
out
mov
push
mov
adc
testb
rcrl
mov
sbb
lcall
jge
mov
sbb
push
outsl
lea
dec
scas
lock
scas
pusha
sub
jne
fwait
sbb
cmp
outsl
mov
and
or
adc
decb
mov
add
loop
ja
fnstenv
bound
mov
pop
mov
mov
mov
out
mov
das
cmp
test
fistps
push
xchg
add
ds
imul
sbb
addl
jbe
aad
aaa
sbb
fcoms
movsb
sub
mov
ljmp
inc
push
cmpsb
mov
fxch
xor
jp
push
or
mov
push
push
mov
add
loopne
outsb
xor
int3
js
pop
fiaddl
xor
add
mov
shlb
cmpsl
sbb
inc
mov
imul
add
mov
xor
imul
push
lret
out
or
rorl
popa
cmp
test
ds
or
movsb
fst
lea
adc
cmp
aas
pop
mov
movswl
sub
adcl
push
test
sahf
fidivrl
xor
mov
mov
imul
pusha
pop
aam
mov
add
mov
push
insb
fnstcw
popa
pop
cld
push
pop
imul
pop
mov
mov
jne
out
aad
mov
inc
cmp
sub
jnp
into
push
xor
or
lods
mov
jb
lock
sbb
and
or
lahf
das
fidivrl
jl
aas
inc
mov
aad
ljmp
arpl
stos
sub
dec
scas
jmp
movl
jmp
mov
mov
aam
xor
popa
or
xchg
aad
mov
lahf
push
pop
shlb
and
xor
ffreep
and
fimuls
lock
lret
push
pusha
cs
unpcklps
mov
add
aaa
out
das
mov
jb
sarb
mov
jle
leave
xchg
and
jmp
rorl
cwtl
mov
pop
adc
movsb
bound
icebp
jnp
test
inc
lods
in
jae
add
jae
fdivl
es
adc
into
inc
jnp
mov
cmp
lods
add
adc
mov
and
xchg
mov
lahf
push
xchg
std
add
sahf
loopne
ds
and
xchg
mov
popa
inc
loop
rcll
sbb
mov
imul
andl
and
addr16
xor
mov
pop
cmp
pop
push
mov
add
imul
lods
dec
dec
xor
xchg
std
mov
and
shl
jns
lret
dec
aam
out
nop
push
adc
jno
dec
mov
lcall
fidivrs
inc
addr16
clc
mov
jnp
ljmp
push
fsts
mov
add
cmp
pop
mov
frstor
fcomps
xchg
roll
and
xchg
sub
pop
add
inc
cld
inc
jle
loopne
insb
test
notb
fldl
cltd
or
and
adc
repnz
jnp
inc
js
jle
pop
fists
pop
les
inc
faddl
jno
push
pusha
dec
xchg
push
shlb
mov
push
mov
adc
pusha
lods
insb
inc
push
orb
arpl
push
test
pop
and
dec
mov
loope
shlb
lret
mov
je
dec
pop
xor
mov
mov
std
mov
mov
popf
insb
and
hlt
sub
into
jns
mov
jne
adc
das
je
inc
sti
daa
and
or
test
fistl
je
std
scas
mov
test
int3
mov
aaa
flds
pop
mov
pop
push
xchg
adc
xor
pop
add
jae
mov
enter
ss
lret
add
scas
push
jbe
mov
bound
xor
lock
mov
ja
fsubl
pop
iret
jle
and
jl
js
cltd
nop
loop
jl
xor
push
sbb
ja
arpl
jnp
push
add
ljmp
test
incl
fwait
adc
cmp
sub
jb
lea
ss
jb
lcall
push
in
xchg
jl
add
or
test
sarb
lods
jnp
adc
pushf
sub
jno
dec
mov
mov
fcompl
inc
mov
mov
adc
dec
mov
mov
scas
popf
clc
push
mov
add
push
dec
imul
pop
or
dec
call
and
mov
orb
sub
push
sbb
mov
outsl
jp
aaa
in
mov
mov
mov
xchg
mov
xor
pop
or
sbb
mov
mov
imul
sarl
pop
es
inc
push
jmp
sub
and
cmpsl
mov
fdivs
sub
xchg
sub
mov
add
mov
xchg
and
mov
dec
pop
push
mov
inc
xchg
push
pop
in
dec
cld
mov
or
sbb
dec
push
inc
push
repz
sub
push
mov
mov
daa
inc
push
test
popf
adc
pop
cmp
and
outsl
ja
sub
xor
mov
pop
push
notl
and
gs
mov
push
outsb
lahf
xchg
iret
inc
mov
mov
pop
push
jp
testl
ljmp
call
mov
fcomp
dec
mov
mov
jmp
pop
dec
pop
pop
rcrl
lods
push
popf
pushw
xchg
mov
mov
popa
repz
push
xchg
pop
xchg
push
or
pop
aas
nop
mov
push
leave
mov
dec
stos
dec
mov
stc
lods
insb
cmp
js
pop
ljmp
in
out
dec
cmc
inc
out
out
test
stos
xor
in
imul
push
push
mov
pop
sbb
push
bnd
js
pop
ret
popf
fwait
test
cmp
fsubrl
js
xor
aas
sti
or
jmp
rcrb
mov
or
clc
jae
les
sbb
jae
lea
jg
popf
fisttps
lret
test
jnp
pop
lret
sbbb
in
and
mov
je
outsw
fcoms
mov
imul
ds
mov
sub
dec
mov
in
push
test
dec
das
pop
xchg
mov
adcl
cmpsb
push
repz
or
mov
loop
fidivrl
push
pop
jns
leave
mov
lea
pop
in
je
fdivrl
cwtl
mov
and
aam
arpl
jno
les
mov
adc
dec
scas
mov
aad
movsl
aad
push
lret
es
inc
into
cmp
xor
and
int3
mov
push
mov
ficomps
xor
cltd
pop
movsl
ret
repz
cli
in
mov
jne
out
outsl
addr16
jae
sub
lods
jp
outsb
cmp
loopne
out
popf
je
and
fwait
and
adc
xchg
and
pusha
xor
stos
jg
push
or
lods
lret
jmp
sti
xor
sub
mov
or
xor
or
iret
mov
bound
mov
cmp
loopne
dec
jns
inc
adc
push
orl
add
lret
xorl
imul
sub
test
xchg
loopne
adc
enter
pusha
mov
loope
pop
mov
mov
jnp
push
push
jbe
jge
jge
lods
xchg
and
push
rcr
es
push
movsl
xor
pushl
xor
inc
into
push
mov
sub
or
fs
pop
inc
jb
shrb
es
ss
sub
or
mov
scas
mov
push
add
jnp
bound
push
mov
push
cmc
dec
adcl
fldenv
fwait
xchg
jecxz
dec
pop
addr16
ret
loope
xorl
inc
push
inc
adc
sub
jle
cmp
pop
sub
loop
gs
inc
jns
into
fwait
cmp
jb
out
or
cmp
jae
cmc
dec
pop
mov
insb
jnp
repnz
call
andb
inc
in
pop
jb
cmp
in
lods
pop
xor
jmp
xor
and
mov
stos
xor
call
div
js
testl
push
mov
jl
pop
mov
cmp
sti
shlb
loopne
cli
jns
push
aad
sti
lret
in
jns
popf
push
lods
inc
add
fwait
loop
adc
in
movsb
mov
mov
insb
adc
cmp
xorl
xchg
fcmovnu
xlat
pushf
lcall
mov
mov
pop
lea
mov
fistl
popa
insl
xchg
mov
mov
dec
pop
jnp
and
mov
outsb
in
out
dec
divl
jle
aaa
outsl
bound
imul
jbe
cmp
mov
cli
stos
mov
lods
icebp
xchg
fcomip
cmc
and
cmpsb
xchg
dec
imul
pop
mov
or
hlt
add
xor
mov
adc
push
sbbb
test
aam
add
sub
outsl
or
sahf
test
jmp
insl
pop
push
ja
xchg
push
cmp
outsl
fwait
popf
mov
dec
add
jne
pop
pop
scas
fwait
loopnew
sarl
into
inc
xchg
sub
into
add
outsb
and
jnp,pt
and
jp
out
scas
jne
stos
xor
dec
add
lods
loopne
aas
in
adc
mull
icebp
nop
loopne
scas
cmp
lea
add
mov
repnz
stos
fmuls
xor
push
add
sub
and
add
xor
enter
ret
inc
push
in
data16
sub
pop
pop
and
jg
or
repnz
xchg
jno
sbb
mov
cmc
in
cli
lods
roll
cmp
mov
pop
lret
std
xor
fcompl
inc
jae
xchg
cmc
adc
pop
daa
dec
insl
push
mov
xor
fs
imul
mov
in
inc
je
dec
into
or
inc
shlb
push
dec
adc
push
ds
push
and
and
fcmovnb
or
or
insl
pusha
mov
add
inc
popf
inc
mov
outsl
je
adc
or
das
cmp
xor
adc
inc
mul
shlb
mov
adc
dec
mov
clc
and
lods
fildll
adc
mov
lret
fwait
shll
cmp
idiv
xchg
icebp
jl
out
insl
jns
test
cwtl
pop
fildl
rclb
imulb
jns
jmp
hlt
lcall
mov
push
push
jg
jl
aad
cmpsb
lods
les
ficomps
adc
cmp
cli
dec
inc
insl
jge
lods
lret
cmp
mov
insl
outsl
mov
call
and
iret
sahf
and
sti
ficomps
aam
scas
cmp
scas
mov
pop
sub
push
push
dec
ljmp
rorl
mov
mov
fadd
outsb
add
aas
jg
int
pop
pop
jecxz
push
and
mov
xchg
sbb
inc
inc
imul
sbb
xchg
lea
movsb
lock
pop
adc
jecxz
sbb
jne
adc
mov
jns
mov
popa
out
mov
jl
xor
adc
rcrb
jnp
mov
jne
lods
cwtl
push
sbb
cld
cmp
out
push
fwait
imul
stos
gs
outsl
xorb
lods
movb
fadds
mov
repz
repz
notb
pop
mov
pop
jne
jns
outsb
push
xor
mov
sti
ljmp
push
sbb
sub
adc
or
sbbl
pop
sti
add
lahf
and
aas
inc
adc
loope
add
orl
mov
dec
cltd
mov
clc
push
shr
stos
lods
mov
test
mov
and
sbb
mov
loop
inc
cld
jl
pop
test
xchg
xchg
mul
push
sub
adc
lds
cmpsb
stos
sub
push
arpl
push
daa
outsb
mov
dec
adc
inc
jecxz
push
dec
fmull
pop
mov
fucom
pop
xchg
or
lret
cmpsb
cmp
sub
shrl
int
jnp
lea
adc
pop
dec
cld
xchg
dec
fidivrl
and
repnz
shrl
test
in
mov
sahf
aas
gs
add
sub
push
mov
aam
icebp
inc
pop
adc
test
adc
mov
leave
daa
or
xor
mov
dec
mov
sti
and
in
mov
xlat
xchg
pop
nop
test
je
sti
jge
jge
add
mov
mov
jl
xor
and
es
lock
dec
mov
arpl
sbb
aam
cld
stos
and
ret
les
xor
mov
in
pop
push
cmpsl
leave
movsb
add
sub
bound
aaa
in
dec
insb
pop
les
nop
cmpl
int
push
sub
sbb
lcall
xchg
fcoms
inc
xor
enter
xchg
or
or
arpl
int
mov
sbb
movsl
aaa
stos
push
push
push
jge
fcomi
cmpsl
daa
mov
xchg
stos
mov
aam
pop
sbb
call
xchg
ret
add
adc
and
inc
push
push
adc
xchg
into
inc
out
test
jno
js
popa
cmp
jns
inc
xorl
std
mov
jle
mov
cmp
dec
outsl
popa
je
push
or
pop
jge
int3
pop
lock
leave
mov
int
outsb
sub
jae
pop
mov
imul
pop
aas
daa
iret
pop
push
subb
iret
jmp
int3
jnp
rcrl
lret
or
out
jge
imul
stos
jns
jno
xor
mov
dec
jp
jp
ret
pop
popl
in
mov
push
push
gs
fisttps
push
fimuls
push
jo
stos
and
mov
les
cwtl
movsb
popa
imul
ficomps
jp
mov
jmp
cmp
inc
or
cmp
and
pop
fsubl
and
mov
mov
mov
imul
or
cmpsl
pop
mov
cmpsl
scas
mov
jecxz
cmpsb
fistpl
call
inc
loopne
cmp
xor
pop
loop
in
dec
les
sub
push
sub
cmp
pushf
scas
push
sub
pop
push
push
or
scas
push
arpl
mov
and
jno
jne
cltd
pop
mov
cld
cmpsl
and
int3
mov
adc
xchg
add
push
inc
push
out
sbb
lods
inc
cmp
insb
call
xor
xchg
insl
inc
sbb
or
test
sbb
jb
pop
jno
rcl
push
and
cmp
mov
es
lods
popa
push
cmc
sub
xchg
push
mov
xchg
ds
mov
outsb
push
add
push
add
and
or
sbb
scas
mov
ret
pop
and
test
les
lods
pop
aaa
fs
scas
jbe
pop
xor
sarb
scas
sbb
cmp
adc
push
lock
jg
mov
and
aas
jns
jno
rcrb
aad
popa
call
inc
or
lret
inc
outsl
in
imul
jmp
daa
pusha
mov
dec
in
iret
dec
sub
ljmp
jle
add
and
int3
adc
cmpsl
push
jp
pushf
inc
pop
dec
psubsw
mov
dec
cs
arpl
xor
jp
push
imul
je
jp
inc
sbb
xchg
dec
sub
sahf
dec
pop
data16
lahf
clc
pop
lahf
adcb
out
pushf
jo
les
jecxz
and
jge
cs
lgs
loopnew
push
adc
loope
pop
iret
adc
daa
sti
or
test
adc
or
pushf
es
je
xor
sahf
push
test
xchg
xor
sbb
push
fcoms
jae
mov
movsl
imul
jae
sahf
dec
dec
mov
clc
gs
mov
pop
lret
arpl
or
cmp
imul
loopne
adc
into
xor
mov
cmp
adc
stos
push
imul
xor
mov
call
lods
mov
std
xor
js
push
cmp
jae
bound
push
cmpsb
add
jns
imulb
dec
jmp
push
jne
cmp
cltd
mov
out
imul
jge
jbe
cmpsl
popa
or
push
pop
xchg
rolb
pop
stos
rcrb
add
push
sahf
test
sbb
movsb
mov
pop
fimull
lods
jle
sbbl
cmp
arpl
push
daa
fisubl
incb
mov
push
xor
pop
scas
mov
xor
cld
stc
in
pop
pushf
pop
call
mov
pop
add
inc
repz
pusha
out
out
pop
jnp
xchg
jmp
ljmp
jo
xor
insb
adc
lods
cmpsb
push
mov
ds
xchg
sub
stos
in
test
xor
insl
loopne
cltd
jno
loope
mov
or
mov
idivl
mov
pop
popf
int
adc
pop
icebp
clc
push
mov
mov
iret
mov
mov
xor
mov
les
ss
and
subl
cs
mov
sbbl
sarl
push
fisubrs
pop
jnp
notb
test
test
mov
mov
imul
pop
push
pushf
push
sub
sahf
adc
push
mov
mov
negl
dec
loop
adc
dec
fstpt
add
sbb
addr16
and
ja
test
shll
push
pop
ds
and
pop
cmp
xor
push
push
aam
pop
xor
cmp
int
jnp
fadds
pop
outsb
mov
lret
movsl
clc
jae
roll
enter
cmp
xcrypt-ctr
cmpsl
fimull
movsl
and
hlt
dec
adc
push
pop
push
inc
pop
jbe
popf
in
fwait
mov
pop
mov
jno
adc
pop
sbb
movsb
mov
mov
inc
xchg
sub
jne
pusha
lods
cwtl
adc
adc
je
fistpll
out
mov
inc
aaa
sbb
nop
fcoms
jo
cld
mov
nop
sar
inc
mov
lret
inc
scas
sub
call
push
stos
or
mov
aam
jae
divl
sahf
stc
pop
adc
mov
or
ja
dec
negb
xor
jae
pushf
mov
mov
icebp
dec
push
mov
hlt
mov
xchg
daa
filds
test
inc
jecxz
cmpsb
add
or
mov
push
adc
pop
call
lods
aaa
int
loope
or
scas
cld
icebp
je
and
sbb
rcr
scas
arpl
popa
movsb
adc
lods
lods
imul
movsl
ja
sub
jb
sahf
outsb
je
pop
push
test
jle
inc
std
fcoms
mov
pop
add
ds
dec
ds
movsl
lea
adc
das
mov
lock
and
dec
add
loopne
es
rorb
mov
push
or
cmp
insb
xchg
repz
jno
push
pop
dec
stos
aad
xchg
sti
arpl
cld
and
inc
pop
add
mov
sbb
lods
js
enter
outsl
aam
mov
mov
cltd
mov
cmpsb
xlat
and
stos
lret
jae
insl
scas
sub
adc
sbb
rcrb
ljmp
push
lcall
jl
loope
cmpsb
mov
pop
into
stc
mov
sar
or
hlt
subl
xchg
mov
cmp
pop
ss
add
dec
sub
add
insb
pop
and
subb
les
pop
xchg
imul
inc
jbe
fisttpl
push
mov
dec
out
xchg
xchg
hlt
out
add
popa
imull
dec
lds
pop
and
faddl
push
push
test
jle
xchg
mov
adc
xor
stc
inc
sahf
push
mov
nop
xchg
xor
push
jo
lock
sbb
sarl
repnz
cwtl
sub
ljmp
and
dec
cmp
mov
mov
aaa
inc
and
push
outsb
ljmp
mov
mov
mov
dec
push
adc
imull
lds
xor
pushl
inc
movsl
and
arpl
pop
mov
ss
shl
or
sub
jb
ljmp
sub
push
movsl
xor
dec
int3
adc
add
jae
inc
pop
out
fdivrs
xchg
dec
xchg
test
xor
push
pop
in
mov
mov
adc
addl
jmp
dec
jae
xchg
aaa
cltd
lods
sbb
test
lret
jae
leave
cltd
lret
fistps
insb
and
aaa
rclb
sbb
xor
pop
aam
or
xchg
push
adc
xchg
out
icebp
mov
mov
pusha
and
insb
jb
cmpsl
xchg
pop
hlt
dec
xor
push
dec
pop
push
test
pop
mov
xchg
xchg
lds
xchg
or
movsl
xor
or
fcoml
jb
cmp
inc
bound
mov
mov
into
and
jge
pop
or
xchg
sub
test
cmp
xchg
cwtl
lret
push
cmp
leave
dec
jecxz
push
xchg
pop
jo
lret
mov
mov
std
mov
mov
mov
popa
mov
rorl
cmpb
movsb
mov
xchg
test
arpl
dec
ja
xchg
sar
sub
pop
jae
subb
lea
pop
push
xor
jae
dec
push
aas
mov
ret
inc
std
fs
and
insl
sub
push
rorl
jl
dec
jne
test
lahf
and
push
dec
push
add
pusha
jno
es
sub
sub
outsl
cmp
ja
stos
rcr
xchg
xorb
sub
push
mov
in
mov
and
mov
sbb
je
repnz
pop
add
cmpsb
mov
insb
dec
into
cmp
jno
cmp
pop
pop
stos
mov
or
ss
xor
inc
sti
adc
into
fisubrl
sahf
je
dec
cmc
adc
in
add
xor
enter
fdivrl
lea
jnp
in
push
mov
sub
nopl
pop
movsl
pop
sub
or
scas
adc
scas
ja
arpl
aas
push
and
jle
jb
cmpsb
push
push
xchg
ret
daa
xor
imul
or
mov
add
xor
jge
mov
sahf
ficoml
jae
adc
mov
mov
and
stos
pushf
fwait
inc
or
lret
in
add
push
and
xor
iret
cmpsb
adc
add
rcrb
fldt
pop
xor
je
and
mov
mov
xchg
out
push
mov
cmp
orps
into
lods
dec
dec
inc
adc
movsl
push
xor
call
adc
push
and
pop
mov
repnz
lret
add
inc
out
sti
mov
je
pop
cmp
int3
cmp
xlat
nop
xor
cmp
jo
rol
leave
mov
dec
sbb
cli
and
mov
mov
mov
stos
pop
addr16
jnp
or
fcmovnu
push
mov
mov
sbb
jp
jmp
pop
jae
and
cmc
jl
in
outsl
inc
mov
pop
lea
sub
sub
add
cmp
inc
mov
and
sub
fs
cli
daa
cmp
mov
mov
mov
aas
imul
jle
and
arpl
cmpsb
mov
and
xchg
and
inc
mov
sbb
stos
clc
jmp
push
or
xor
and
imul
sbb
cmp
xor
stos
xlat
adc
inc
inc
adc
test
cmp
repz
pop
ja
in
icebp
add
or
enter
xor
test
cld
pop
mov
sbb
cmp
nop
sub
jo
sub
outsl
xchg
pop
sbb
push
mov
pop
lods
icebp
lret
push
pop
mov
pop
adc
adc
and
xor
mov
sub
xchg
cli
dec
jmp
push
ret
adc
int
mov
in
adc
sbb
mov
cmp
jl
mov
dec
add
popa
and
jle
movsb
xor
sbb
dec
aaa
mov
and
pop
adc
jns
out
lea
je
jg
xchg
mov
inc
jnp
push
dec
popa
push
sbb
xchg
or
dec
bound
das
fs
stos
rcll
dec
or
pop
fld
sub
mov
dec
insb
push
inc
mov
pop
inc
aam
add
outsb
js
add
pop
xchg
repz
pop
cmp
xchg
adc
dec
test
dec
outsl
ljmp
out
jno
push
mov
or
push
xchg
push
jae
pusha
imul
and
sahf
dec
mov
xchg
xchg
push
dec
enter
rorb
mov
push
cmpsb
mov
mov
in
outsb
adc
xchg
or
cwtl
rorl
lcall
popf
pop
dec
cmp
xchg
mov
xchg
push
dec
and
add
mov
in
jge
test
sbb
cmpsb
pop
dec
mov
pop
in
sbb
xchg
outsb
jb
sahf
xchg
insb
sti
mov
jl
inc
movsb
xchg
imul
cmp
jns
push
je
push
and
add
dec
out
pop
pop
dec
mov
push
cmpsb
jge
push
sbb
fs
mov
in
outsb
dec
pop
pop
xchg
dec
sti
pop
ret
inc
jge
inc
inc
movsb
jno
jnp
or
pushl
sub
mov
sbb
pop
add
cmp
lods
loope
sub
inc
mov
mov
movsl
les
popa
jle
xchg
loope
inc
mov
lahf
out
xchg
inc
sbb
ds
mov
jg
sbb
inc
xchg
mov
push
fadds
sub
xchg
mov
out
pop
movsl
mov
pop
jb
adc
dec
scas
xor
repnz
mov
xchg
arpl
inc
sub
jne
out
sahf
cmp
add
jo
jmp
aad
cs
mov
sub
je
clc
insl
inc
jbe
mov
test
lcall
dec
adc
mov
js
cltd
add
je
sbb
jge
imul
xor
xorb
xchg
xor
fisttpl
bound
rcl
add
pop
pop
pusha
pop
xchg
notb
sub
sub
cld
adc
in
addr16
jno
mov
push
loopne
clc
jge
pop
cwtl
mov
add
int
jbe
test
push
and
dec
std
and
cltd
jmp
cmc
lret
rcrl
push
movsl
mov
fidivs
sti
jnp
mov
cld
sub
or
and
push
stos
out
les
shlb
movsb
jecxz
push
lods
cs
bound
popa
lods
push
or
mov
mov
daa
sbb
mov
test
mov
sbbb
add
jnp
pop
sub
sub
inc
or
sub
mov
daa
sub
sti
js
pop
repnz
scas
arpl
mov
inc
bnd
js
in
lods
inc
stos
pop
out
fbld
call
push
inc
lea
hlt
rclb
das
int3
frndint
fldt
or
mov
imul
and
aad
movsb
addr16
loop
ja
outsl
cmpsl
inc
lea
adcb
adc
pusha
adc
rorb
ret
call
push
adc
rcrb
inc
sbb
jb
sub
lret
adc
xchg
call
xchg
scas
fldl
ss
lret
adc
test
or
data16
mov
and
add
shll
jmp
cmp
aad
clc
pop
pop
xchg
jae
jo
loop
dec
lods
push
arpl
mov
cmp
and
or
add
andb
lods
and
mov
mov
hlt
test
add
push
in
cmp
daa
jecxz
xor
push
js
add
pop
mov
stos
dec
and
btc
mov
enter
mov
js
insb
call
cmp
fstpl
or
pop
cld
pusha
outsb
scas
sbb
lods
repnz
cmp
mov
push
lcall
outsb
pusha
inc
sbb
test
or
xchg
imul
movsb
push
mov
mov
and
jne
mov
pop
cmpsb
cmp
xchg
fdivs
pop
and
add
inc
clc
mov
cmp
les
add
dec
and
lods
mov
gs
cmc
and
jns
lcall
subl
push
cmpsb
add
sbb
outsl
or
pop
and
insb
pop
imul
insb
iret
scas
inc
add
xchg
push
dec
jne
xchg
xor
loop
outsb
and
fs
sahf
lods
pusha
xchg
mov
cmp
pop
outsl
movsl
gs
xor
pusha
repnz
jne
fwait
sbb
inc
inc
xchg
ficomps
pusha
or
bound
sub
cmp
lods
fimuls
xchg
lods
dec
lea
adc
mov
mov
mov
sbb
cltd
bound
outsl
sub
aaa
dec
xor
sub
mov
xor
sbb
dec
pop
sub
inc
xchg
sub
and
inc
imul
xchg
sub
sbbl
push
scas
lods
pop
mov
cmp
mov
call
loopne
cmpsl
cmpsl
add
out
popa
jmp
or
sbb
or
dec
sub
out
jge
xchg
or
int3
pop
push
mov
xor
or
dec
mov
fdivrp
adc
sub
sbb
mov
sub
insl
or
adc
and
roll
insb
cmp
mov
xchg
rclb
add
pop
xor
fdivl
into
int
mov
fildl
mov
and
jp
xor
or
mov
idiv
addl
lods
vmaxss
aaa
add
adc
cwtl
test
inc
jo
addr16
lret
push
add
jg
and
or
cmpsb
fs
jbe
lret
and
int
sub
mov
das
test
in
divb
dec
sar
add
mov
inc
inc
or
in
aaa
scas
popf
jg
daa
pop
sbb
adc
adc
aas
enter
mov
out
mov
jg
xlat
inc
jne
mov
push
out
cltd
mov
out
mov
mov
call
inc
call
je
clc
push
pop
test
in
insb
jns
mov
or
adc
repnz
dec
aas
or
sti
pop
xchg
lods
hlt
sub
subl
dec
movsl
mov
cmp
insb
mov
sbb
inc
es
jb
dec
dec
jg
and
dec
mov
lret
push
and
jle
mov
hlt
aam
arpl
insl
pop
into
dec
cli
jle
jl
out
mov
mov
sbb
sbb
fwait
mov
dec
lret
stos
cmp
adc
pop
call
andl
pusha
scas
push
aas
push
outsl
sbbb
pop
ficoms
or
sub
out
mov
jmp
cmp
mov
fisubrl
pop
pop
dec
and
je
sti
pop
mov
mov
xchg
in
dec
lret
mov
pop
dec
je
mov
mov
lcall
rcrb
outsl
mov
sbb
push
stos
cmp
gs
mov
mov
bound
mov
mov
fs
xchg
push
test
cld
mov
inc
push
in
movsl
jno
inc
fadds
add
data16
loope
imul
mov
mov
stos
add
add
lret
push
inc
xchg
ss
cltd
add
xlat
inc
or
cs
out
dec
dec
sub
nop
jb
sbb
repz
jmp
and
xlat
jmp
insl
pusha
addr16
dec
mov
and
pop
sub
or
pusha
push
dec
lret
and
andl
mov
cmp
inc
add
jg
bound
lock
inc
xlat
or
mov
mov
inc
rorb
dec
sub
nop
adc
jp
hlt
jbe
push
jg
cmp
add
sbb
pop
rorb
gs
rorl
xchg
iret
scas
mov
imul
imul
test
cmp
add
push
add
in
lahf
pop
sbb
inc
xor
mov
mov
out
push
fwait
push
movsl
push
loope
popf
jl
popf
jl
pusha
divb
push
pop
fcoms
add
xchg
jae
adc
shrl
pop
xor
inc
dec
loopne
stos
test
cmp
pop
cld
inc
fstl
xor
xor
mov
stos
xor
dec
or
popf
inc
sub
fidivrs
mov
or
xchg
mov
mov
inc
mov
sub
pop
lcall
gs
add
call
or
push
stos
cwtl
bound
cmp
inc
cmp
lcall
sbb
daa
inc
add
les
add
inc
int3
cmp
imul
iret
data16
add
adc
mov
push
jmp
outsl
enter
add
xor
js
pop
push
and
jmp
insl
adc
cmp
lahf
mov
aad
and
dec
pusha
xor
sub
mov
sub
pop
cmp
pop
cmp
pop
aas
outsl
lea
pop
rcrb
ret
in
gs
lock
push
lea
ja
rcrl
mov
in
insl
dec
push
push
push
jmp
or
jns
js
lcall
inc
and
add
sti
lods
pop
inc
cmpsl
stc
loopne
jmp
nop
iret
mov
jo
aam
int3
xor
sarl
mov
xor
cmp
dec
mov
mov
dec
pop
movsl
xchg
inc
ds
mov
dec
mov
movsb
jmp
mov
jbe
addr16
arpl
xchg
jb
outsl
jg
cmp
in
push
adc
sbb
or
out
push
pop
mov
repnz
inc
jno
test
adc
pushf
xchg
fcoml
sbb
push
test
dec
jp
loopne
and
mov
dec
movsb
mov
loopne
dec
ret
xor
add
aam
pop
push
xor
pop
add
push
or
aad
shll
add
cli
scas
cmp
inc
test
mov
nop
popa
xchg
adc
daa
mov
sbb
test
ja
bound
pop
add
jmp
pop
inc
push
xchg
arpl
cmp
push
pop
xchg
jns
lock
sub
jl
lods
insb
inc
push
cs
xor
mov
out
and
cmpsb
or
and
xor
mov
xchg
cltd
mov
dec
loopne
aam
scas
jno
cwtl
ret
gs
sbb
push
in
ds
call
pop
xchg
pop
mov
pop
mov
loope
dec
into
pop
clc
push
cmp
jo
shll
pop
push
pop
mov
xor
mov
testl
xchg
pushl
xor
jp
pushf
cmp
sbb
aaa
loop
or
push
sarb
inc
cmpsl
push
pop
xor
aad
xchg
jl
xchg
jp
jmp
sti
pop
xor
cmp
jno
sub
pop
adc
in
dec
rep
push
pop
lea
dec
clc
orl
lret
sbb
insb
and
test
mov
mov
dec
pop
jl
incb
out
push
cmpsl
aad
adc
shlb
mov
cmpsb
fs
fisttpl
lods
push
lock
sbb
mov
cmp
push
popa
push
into
rorb
daa
lods
loop
adc
inc
pop
mov
jl
adc
les
xlat
dec
mov
test
cmp
movsl
fstpl
push
cltd
sbb
bound
or
inc
ja
clc
dec
mov
bound
hlt
imull
js
data16
rcl
in
or
sbb
jns
add
adc
fcoms
push
pop
jmp
bound
shl
in
arpl
cld
subl
popl
roll
mov
pop
sti
xchg
pop
cwtl
xchg
sarb
add
lret
lock
mov
lea
imul
mov
dec
cmpb
inc
lods
inc
subb
icebp
sbb
xchg
inc
in
cmpsl
insl
push
js
cwtl
xchg
mov
outsl
es
add
insb
mov
popa
pushf
je
dec
jg
dec
xchg
jne
jno
add
hlt
add
cmp
xchg
pusha
xchg
insl
nop
hlt
inc
fadds
ficoms
mov
cmp
mov
cmpsl
ja
push
pop
jno
inc
outsb
and
subb
dec
push
inc
xor
sbb
fs
je
push
mov
outsl
mov
mov
jne
xchg
inc
pop
jbe
xor
jbe
sahf
sahf
jle
mov
inc
fidivs
in
jle
mov
repz
mov
pop
lods
insl
jmp
in
sub
mov
sub
lret
cmp
mov
jmp
sub
lret
add
mov
xchg
mov
push
loop
std
or
sbb
aam
aam
jl
jb
outsl
mov
inc
cmpsl
mov
ja
ret
mov
push
ret
sbb
dec
dec
sbb
and
outsb
xchg
sbb
popa
imul
pop
sub
inc
addl
test
popa
mov
stos
scas
push
ss
int3
add
dec
mov
leave
pop
pop
es
dec
sbbb
inc
pop
in
push
stos
xchg
insb
imul
repz
push
bound
xchg
push
inc
sub
insb
xchg
xorl
sbb
jo
fiadds
outsl
mov
sbb
mov
movsb
xor
push
mov
dec
pop
xchg
push
scas
sbb
jg
bound
or
push
cmp
jp
push
pusha
mov
in
je
push
jle
dec
xchg
pop
ret
lods
outsl
fiaddl
mov
mov
loop
jne
pusha
outsl
loope
out
mov
popa
les
js
outsb
push
dec
jne
movsb
adc
inc
mov
arpl
mov
mov
out
jbe
push
adc
push
addr16
insl
lock
and
push
data16
mov
arpl
pop
sbb
mov
mov
xchg
daa
adc
cmp
push
arpl
pusha
je
scas
shll
subl
push
outsl
bound
ret
into
mov
popa
jb
dec
cmpsb
sahf
mov
orb
jb
lods
aas
cmpb
pop
test
mov
dec
stos
and
int
repz
cli
movsl
addr16
xorb
jns
mov
andl
and
insl
test
js
push
std
in
pop
jnp
aaa
or
push
push
rcrb
int3
cmp
inc
inc
dec
fists
aaa
and
pop
mov
and
jb
mov
popf
inc
adc
and
iret
pop
es
cs
test
cwtl
lds
jae
mov
fsubrs
negb
loopne
inc
lahf
mov
lock
xor
std
mov
push
lods
mov
in
roll
arpl
and
push
push
push
or
fdivrp
setb
cwtl
iret
cmp
pushf
cmp
in
mov
fdivr
sbb
cwtl
inc
test
pop
adc
mov
cld
inc
push
xor
push
xor
jge
mov
inc
pop
outsl
or
dec
cmp
xchg
dec
lock
lahf
popa
outsb
mov
subb
ret
fbld
gs
arpl
and
pop
movsl
and
or
daa
ret
cli
outsl
add
ljmp
jg
sbb
insb
jns
ds
jp
dec
mov
xchg
push
lods
push
arpl
js
fildll
xor
jg
inc
cs
scas
pop
int3
jg,pt
cmp
aad
movsl
or
dec
jmp
stc
aam
bound
enter
int3
mov
sub
js
leave
cmp
xor
out
inc
test
ljmp
mov
mov
cmp
sbb
sub
scas
jne
stos
repz
movsb
dec
adc
dec
xchg
pop
and
hlt
and
sub
aas
in
stc
inc
addr16
cli
popa
sub
mov
leave
aad
int
or
push
or
and
aaa
in
sub
pop
lods
mov
loop
mov
rorl
mov
test
notl
cwtl
scas
call
icebp
dec
test
dec
mov
sbb
xor
daa
xchg
lock
in
push
xchg
mov
jb
lea
inc
aaa
inc
das
imul
das
pushl
mov
xor
je
aas
movsl
pop
cmp
imul
dec
push
mov
push
inc
fimull
fstl
js
add
cmp
sub
adc
pop
cmp
pop
shll
loopne
int
cmc
mov
jmp
xor
jp
push
popf
inc
mov
fwait
lock
add
ja
std
leave
and
sti
add
dec
dec
push
mov
adc
das
sub
ffree
xor
add
fists
xchg
sbb
iret
lahf
xchg
iret
mov
imul
push
mov
jae
adc
imul
daa
ret
mov
inc
cmpsl
push
jp
push
xchg
inc
test
cmc
leave
repz
or
inc
addr16
test
es
jne
xchg
jge
mov
cwtl
pop
pop
xorl
mov
push
pop
or
in
imulb
add
dec
repz
aas
mov
shlb
scas
sbb
incb
out
hlt
sbb
sbb
aas
ja
jns
inc
sub
jb
loopne
out
daa
xor
inc
pop
jg
xor
push
sbb
or
push
and
xchg
add
push
fildl
push
inc
mov
add
mov
ja
cmp
outsb
addr16
add
pop
jmp
mov
aaa
dec
pusha
and
inc
mov
sbb
push
push
mov
push
ja
or
sub
jg
sbb
mov
iret
outsb
and
pop
dec
mov
mov
inc
movlps
jo
lods
das
and
in
sub
out
pop
cld
pusha
outsb
mov
subb
sarl
and
xchg
xchg
xor
movsl
xor
inc
out
xchg
sbb
jge
xor
mov
mov
mov
sub
ficomps
clc
add
int
jmp
sti
cmp
xchg
adc
int
sub
push
add
int3
sub
xchg
pop
mov
jno
ss
cmp
into
mov
and
stc
loope
insb
cmp
imul
outsb
cmp
and
sbb
pop
cmpsl
nop
add
maxps
jg
dec
ret
mov
mov
pop
insb
cmpsl
mov
lods
cmp
lret
pop
add
paddb
xchg
add
je
bound
movsl
mov
call
jge
add
out
sbb
bound
mov
xchg
xor
adc
mov
push
jnp
jmp
imul
pop
mov
sub
or
sarb
jp
adc
insl
sbb
add
inc
jmp
lods
in
cs
pop
mov
test
cmp
loopne
dec
ret
cmp
jo
mov
hlt
ljmp
dec
xchg
mov
mov
lahf
pop
lods
insl
testb
jmp
ljmp
hlt
mov
jmp
pushf
push
sub
and
or
dec
push
mov
imull
sub
pop
mov
xchg
jp
icebp
sbb
push
sbb
xchg
push
cwtl
xchg
gs
xor
lcall
add
xchg
jnp
movsl
push
outsl
scas
mov
jl
hlt
dec
dec
jns
adc
call
inc
xor
pop
jp
dec
or
ljmp
adc
jae
in
cmpsl
fistl
cmp
jae
mov
movsb
and
xchg
inc
mov
ljmp
mov
cli
outsl
and
push
xchg
xchg
lea
adc
fs
gs
inc
outsl
push
shlb
movsl
add
xorb
xor
mov
jmp
movsl
sub
sub
xchg
xchg
fcompl
mov
jae
arpl
imul
ljmp
mov
movsl
fdivrs
hlt
arpl
inc
bound
out
js
sub
or
inc
rcrb
int3
push
xchg
in
jne
gs
or
mov
adc
xchg
scas
ja
dec
fiaddl
sub
xchg
xor
movsb
rcll
sbb
fdivrp
pop
sbb
nop
stos
add
mov
cmp
push
insl
aaa
popa
mov
lea
das
mov
lret
adc
es
or
cltd
pop
adc
add
xor
ffree
xchg
mov
loopne
push
cld
inc
sub
cwtl
mov
push
scas
bound
in
ror
dec
cwtl
addr16
push
out
sub
mov
xchg
pusha
xor
xchg
test
or
lea
inc
dec
cmp
je
fidivrs
imul
sbb
cmp
in
ss
outsl
mov
and
jo
push
je
push
jp
mov
push
adc
cmp
xor
push
fwait
push
outsl
inc
xor
fidivs
add
rorl
cmpsb
jle
push
mov
mov
iret
pop
enter
push
shl
cmp
cwtl
lods
push
mov
out
inc
scas
in
adcl
xchg
mov
lret
into
fadd
int
shl
adc
push
gs
jns
jecxz
test
pusha
jns
mov
or
insl
xor
aas
cmpsb
imul
xor
jnp
fs
sbb
adc
pushf
cmp
loop
testb
xchg
mov
fisttpl
mov
out
jle
int
dec
clc
test
or
scas
jb
add
mov
pop
test
mov
movsl
ss
jno
mov
mov
cmp
push
jmp
inc
mov
add
inc
arpl
loopne
push
es
push
adc
arpl
xor
leave
push
cmp
mov
jmp
push
cmp
out
pop
mov
bound
jp
jns
pop
les
ja
push
mov
cmp
in
clc
dec
pop
fscale
cmp
sbb
jo
pop
sbbb
mov
mov
sub
or
scas
cmp
loope
bound
and
push
jae
sub
pop
mov
mov
aad
inc
mov
jnp
lods
mov
int
mov
mov
movsb
or
mov
mov
mov
push
int3
ror
mov
loopne
xchg
xchg
xor
xlat
xor
push
and
sti
push
mov
push
xchg
xchg
or
xchg
sti
gs
and
add
gs
out
lods
inc
push
lcall
adc
mov
out
rolb
repnz
mov
jge
out
cmp
or
jge
imul
mov
jle
add
popf
popa
out
cmp
push
xchg
mov
fmuls
push
adc
jl
adc
xor
jno
pop
outsl
mov
test
inc
push
test
les
aam
push
pop
xchg
xor
cmp
cmpsb
xchg
dec
pop
pop
adc
dec
ja
jmp
hlt
jne
jnp
testl
cmpsl
mov
scas
pop
rclb
popa
loop
pop
addr16
js
lea
jne
repnz
into
jl
scas
fcmovnb
add
loopne
add
int
fwait
lods
add
push
aas
pop
jno
dec
dec
jno
mov
xor
pop
outsb
xor
and
jns
xor
xchg
sub
and
ret
adc
arpl
mov
popl
and
leave
mov
dec
push
jo
in
dec
mov
arpl
sbb
dec
aam
or
mov
mov
popf
test
cmpsl
sti
jns
xchg
xchg
cwtl
enter
test
mov
push
sbb
jecxz
in
mov
xchg
das
imul
jmp
and
cltd
sub
aam
mov
ja
and
outsl
test
data16
and
loope
jmp
push
dec
adc
repz
jo
outsl
shll
pop
movsl
pop
or
fs
dec
cmc
xchg
mov
sti
dec
outsb
pop
mov
cmpsb
jle
mov
ret
rcll
mov
xchg
sbb
jle
jl
and
push
xor
xlat
outsl
inc
mov
inc
sbb
insl
dec
jecxz
cmp
setb
add
int3
add
fldt
and
cmp
mov
pop
in
sub
jle
xchg
pop
sub
pop
mov
popf
sub
mov
mull
lahf
nop
inc
jns
push
sub
js
ret
mov
jnp
push
rclb
popa
mov
je
movsb
idivl
mov
popa
lods
sbb
aad
andb
imul
mov
sti
into
in
lds
mov
out
ret
cmpl
cmp
fwait
icebp
pop
insl
sbb
ds
fwait
adc
xor
enter
pop
pushf
not
cld
scas
popf
push
and
sub
mov
lahf
inc
adc
inc
hlt
or
jmp
push
pop
pop
scas
push
fildl
cmpb
int
orl
mov
inc
movsl
hlt
mov
sbb
pop
pop
or
insl
mov
insl
inc
dec
or
fsubp
inc
and
dec
dec
std
lcall
dec
add
shl
into
ds
dec
into
outsl
mov
lret
aaa
cwtl
and
jp
mov
push
outsl
and
xor
cmp
mov
mov
aam
test
fistl
imul
jmp
inc
cld
dec
xchg
call
mov
pop
imul
pop
loop
jg
outsl
inc
testl
inc
pop
mov
jno
pop
lahf
xchg
add
out
cs
and
dec
mov
xchg
in
dec
movsb
cli
dec
lods
fwait
adc
mov
add
and
jns
stc
adc
inc
outsb
mov
mov
push
inc
jg
cmpsl
cli
pusha
jl
fisttpl
sbb
mov
loopne
out
popa
adc
lahf
xor
mov
xchg
xchg
cmp
sub
data16
setle
movsb
dec
pop
bound
dec
jp
cld
inc
movsl
inc
out
and
test
mov
mov
stc
mov
sbb
xchg
popa
scas
mov
pop
jnp
sub
pushf
inc
pop
cmp
mov
lods
out
jne
cmp
pop
lea
cwtl
mov
test
xchg
icebp
jnp
stc
out
lea
inc
inc
mov
inc
insl
ss
movsl
lahf
adc
in
dec
pop
sub
scas
adc
sbb
push
adc
dec
mov
outsl
xlat
cmp
loop
inc
and
sub
das
lods
ds
dec
jmp
cmpsb
sub
xchg
xor
test
daa
and
sbb
add
ja
cmpsb
cmp
mov
pop
fldenv
inc
cld
pop
push
pop
and
loop
test
add
adc
mov
sbb
inc
fisubl
pop
hlt
and
lea
mov
aaa
fdivrs
push
jg
jmp
dec
xchg
push
jb
jnp
cmpsb
es
pop
jb
pop
arpl
das
cltd
inc
inc
dec
dec
push
js
insb
stos
mov
inc
mov
test
lahf
xchg
mov
xor
aad
shll
dec
cltd
mul
pop
ljmp
cmpb
inc
mov
ds
mov
das
aas
outsl
mov
test
sbb
and
jg
ror
jmp
iret
push
cmp
shr
in
mov
sub
repnz
in
push
nop
jge
and
sub
loop
adc
cltd
jge
int
bound
addr16
push
fisubrl
cs
int
mov
inc
incl
imul
outsl
dec
pop
mov
repz
clc
and
cli
mov
movsb
lret
lods
insl
cmp
andb
mov
aaa
inc
jle
fstps
sub
jae
pop
cmpsl
mov
mov
mov
fstl
mov
jo
cltd
push
rol
sbb
imulb
in
outsb
lods
data16
adc
movsb
pop
call
pop
call
inc
mov
adc
insl
push
repnz
sub
jge
test
push
mov
mov
xchg
pop
ret
pop
lods
outsb
jne
xor
ss
into
push
dec
imul
lcall
mov
in
pop
orl
jnp
lret
sub
dec
sub
bound
ss
push
sbb
test
push
mov
rcrl
add
jle
pop
push
dec
xchg
xchg
pop
popf
idiv
lea
pop
jg
lret
or
or
out
insb
inc
int
pop
lahf
imul
lea
out
pop
mov
js
mov
xchg
push
and
jne
and
mov
or
xchg
push
and
mov
mov
pusha
sbb
jmp
sbb
cmpsb
push
inc
enter
sub
pop
aaa
xchg
bound
mov
or
cmp
xchg
and
call
in
sbb
jg
pop
bswap
jns
pop
push
outsb
in
into
xor
out
std
pusha
jp
mov
std
and
mov
test
add
test
sub
add
addr16
cmp
xchg
lahf
loope
arpl
in
pop
pop
and
jl
mov
js
bound
movl
xchg
sub
cld
pop
mov
mov
pop
sub
dec
add
test
stos
mov
or
ja
scas
and
mov
mov
ja
dec
cmp
std
xlat
lods
mov
rcl
sub
mov
inc
loope
aam
sub
push
arpl
push
popa
ret
xor
mov
adc
fwait
pop
mov
push
scas
sbb
mov
pusha
jle
sub
aas
aas
frstor
jecxz
popa
mov
rcll
cmp
mov
jb
loope
sub
loopne
push
adc
and
xor
outsl
arpl
xor
mov
xor
fmull
add
inc
xchg
cmpsb
mov
adc
ja
push
fisubrs
adcb
das
pop
or
js
cmc
packssdw
jno
sub
mov
inc
imul
dec
sub
adc
or
jae
cmp
pop
adc
pop
insl
std
enter
ret
pop
push
sbb
lret
ds
push
push
sbb
mov
add
fisubrs
repz
cmp
aad
rcrb
or
pop
and
orb
test
pop
cmp
pop
cld
pop
ss
mov
sub
mov
pop
push
or
imul
adc
or
xchg
aad
dec
pop
cmp
daa
ret
pop
mov
jns
test
pop
js
mov
bound
inc
xor
add
jmp
lds
add
popf
mov
fs
jne
add
sub
dec
xlat
jbe
in
sub
aam
rorb
cmp
fimull
sub
sub
mov
add
dec
in
jo
pop
mov
in
push
jb
sbb
cmp
cmpsb
push
and
dec
inc
out
ljmp
mov
es
adc
daa
push
movsb
inc
ss
ljmp
sub
popa
pop
adc
jle
lret
sub
cs
jns
mov
or
cmpsl
cmp
cmp
sub
cmp
outsb
arpl
jb
jnp
pop
mov
sbb
mov
jg
push
or
js
xor
pop
cs
cmp
or
fstpl
cmpsl
jge
popa
cmp
loope
pop
pop
shlb
push
adc
mov
das
cmp
lret
dec
in
pop
sbb
push
and
mov
push
stos
out
xor
gs
je
jno
rolb
ret
and
sub
rorl
icebp
bound
pushf
mov
add
faddl
mov
push
dec
dec
rorb
xor
lds
xchg
mov
or
dec
pushf
stc
mov
dec
push
int3
dec
int3
jmp
mov
and
gs
es
jmp
vprotb
push
cmp
cmp
pop
pop
jbe
sti
lods
sarb
popa
rcrb
out
test
addr16
pop
call
push
out
stc
xor
xchg
jmp
leave
xor
push
outsb
cltd
jns
xchg
in
mov
jmp
mov
in
inc
add
pop
mov
pusha
mov
push
addr16
xlat
pop
hlt
stc
cmp
fcomps
mov
cmpsl
add
inc
pop
bound
xchg
shl
push
sbb
roll
jl
ret
mov
in
inc
dec
jp
imul
add
sbb
test
enter
mov
jmp
dec
shr
jg
test
xchg
mov
xor
ror
push
mov
paddsw
pop
ret
push
fdivs
sti
mov
push
and
and
sbb
bnd
adc
cli
adc
sub
repz
sbb
daa
cltd
and
int
pop
stc
out
cmpsb
adc
jle
ja
xchg
xor
dec
clc
and
adc
aad
shrb
or
mov
mov
cmp
mov
ret
xchg
inc
adc
repz
test
lea
lret
mov
add
mov
movsb
sub
xchg
jle
aaa
jb
mov
adc
dec
leave
aad
aaa
xchg
lea
divb
mov
shl
push
outsl
adc
inc
scas
jno
mov
push
pusha
sub
push
subl
test
out
push
outsb
dec
mov
adc
es
hlt
inc
fucomp
mov
popf
out
mov
rcrb
insb
lret
jl
ss
mov
insb
fmul
cli
inc
cmp
sbb
jl
push
jl
jecxz
cs
jle
mov
ds
popa
dec
inc
xchg
cwtl
mov
and
sub
pop
and
dec
dec
mov
fcomps
jmp
daa
pop
xchg
in
in
sbb
clc
movsb
cli
fadds
repz
stos
out
aad
cmp
incl
inc
imul
fbstp
inc
pop
jb
lcall
mov
mov
sti
sub
push
mov
outsb
mov
and
mov
fcomps
out
push
xchg
ret
mov
pushf
adc
outsl
int
xor
fcoml
pop
out
inc
add
lods
and
popf
pop
out
mov
testb
icebp
arpl
es
jo
xchg
in
loop
int
mov
adc
idiv
mov
adc
outsl
push
movsb
push
jae
in
mov
jne
add
nop
pop
scas
dec
or
in
pushf
lock
inc
jb
mov
cmp
sub
and
repnz
cmc
enter
pop
pop
jp
dec
jne
mov
stos
adc
pop
mov
and
mov
fimull
addr16
pop
inc
mov
push
fs
in
loopne
mov
mov
xchg
xchg
pop
repz
mov
pop
repz
mov
dec
pusha
cmp
ret
mov
adc
dec
mov
add
mov
lds
add
jl
mov
lock
xchg
shlb
add
sbb
dec
dec
sahf
mov
cmpsb
dec
sti
pop
cltd
xor
int3
hlt
adcl
pop
subb
and
adc
movsb
xor
mov
mov
mov
adc
aad
add
in
adc
into
pop
fs
std
mov
and
repnz
jle
xchg
jg
lret
or
inc
sti
mov
mov
lret
dec
jae
mov
add
std
or
mov
ja
test
adc
jno
iret
sbb
ss
aaa
pop
divb
jne
pop
fmulp
or
aad
xor
and
mov
movsl
jne
jge
mov
sbb
repz
mov
pusha
lea
jle
mov
lret
sub
in
stos
rorb
adc
fs
cmp
mov
mov
xchg
cltd
sub
orb
mov
add
icebp
jb
adc
push
outsb
scas
or
sbb
aas
shlb
dec
xor
push
add
xor
shr
mov
loop
sti
dec
mov
mov
out
sbb
mov
mov
or
pop
add
jno
ds
add
aas
mov
js
xchg
lret
push
daa
test
fdivrl
jp
pop
mov
push
xchg
sahf
sbb
sub
lods
ret
adc
push
lea
mov
or
or
push
cmp
xlat
or
inc
jns,pn
out
xchg
add
sarl
sbb
mov
xchg
mov
jl
insb
mov
lahf
int3
lcall
sbb
ret
xor
and
sbb
pop
sbb
ljmp
inc
sbb
ret
mov
jmp
fsts
mov
rcr
popf
stos
pop
mulps
pusha
fisubs
mov
daa
jmp
mov
dec
xorb
dec
dec
sub
sub
mov
cmp
dec
out
mov
xlat
xor
mov
je
movsb
mov
lods
sti
pop
xor
stos
repnz
push
int
push
xchg
ds
lods
jl
fistpl
cltd
add
sbb
jo
push
inc
xor
pusha
bnd
inc
cli
ret
jge
dec
outsl
int
pop
and
jae
mov
movsl
loopw
cmc
jae
cltd
icebp
mov
mov
dec
iret
push
aas
mov
push
ljmp
mov
and
mov
mov
arpl
adc
jecxz
xchg
arpl
pop
adc
ficompl
sub
les
rcl
dec
or
popa
push
mov
arpl
add
pusha
pop
push
xor
fs
inc
add
mov
ss
xor
arpl
shll
int3
pop
loopne
mov
mov
push
pop
jno
push
add
or
cmp
cmp
push
xchg
mov
call
mov
test
mov
mov
loope
mov
add
push
jmp
adc
addr16
pop
xchg
or
pusha
in
rolb
gs
push
insb
scas
negb
jne
out
bound
movsb
adc
pop
aas
int
sahf
data16
lea
push
inc
jmp
imul
sbb
mov
lret
test
mov
sbb
fstps
shlw
xchg
lret
test
mov
push
push
inc
insl
and
or
or
mov
fidivrs
fstl
es
sub
sbb
push
test
lcall
mov
sbb
xor
and
add
test
shrb
hlt
addr16
out
sub
in
sub
mov
xor
sbb
movsl
or
and
ljmp
int3
and
cmc
and
inc
in
xor
inc
and
push
repnz
or
push
and
mov
jnp
sub
pop
push
mov
jae
loopne
repz
in
jo
lods
jg
ja
mov
out
in
push
push
pop
push
scas
mov
andl
pop
imul
pop
jnp
shll
idivb
adc
rcrb
cmpsb
outsl
cmpsl
std
jmp
cmp
int
mov
hlt
enter
std
shll
dec
or
sub
cmp
fmull
adc
mov
pop
jl
rorl
adc
mov
and
and
aaa
loop
jnp
fnsave
add
inc
aaa
pusha
cmp
outsl
add
jle
add
ljmp
test
aas
cmp
and
mov
adc
outsl
push
xchg
dec
xor
or
xor
dec
dec
or
repz
decl
mov
push
add
xchg
cmpb
lret
pop
adc
inc
cmp
xor
or
mov
lcall
xor
add
sbb
push
inc
fcmovne
mov
cmpsb
mov
add
ret
jb
push
xor
lret
mov
scas
pop
xchg
mov
scas
push
push
mov
stos
out
sbb
pop
push
xchg
adc
cmpsl
jo
mov
sbb
outsb
mov
sub
dec
data16
mov
mov
imul
push
fs
dec
sbb
push
cmc
or
imul
dec
inc
out
mov
jmp
xchg
rcrl
mov
imul
leave
inc
popf
jo
dec
push
mov
cmp
es
dec
addr16
cmp
lret
mov
test
fcoml
scas
ret
cli
int3
test
push
nop
imul
jg
scas
sub
jns
xor
imul
movsl
adc
jp
imul
push
jb
out
test
and
fs
adc
sub
pushf
bound
dec
in
pusha
push
mov
adc
mov
fiaddl
cmp
aaa
pop
and
push
sub
add
xor
inc
icebp
xchg
out
sbb
loope
mov
adc
dec
add
push
dec
test
jns
pusha
xchg
test
and
sub
aas
mov
xchg
mov
or
daa
sub
cld
out
jbe
inc
jl
pop
scas
or
lods
insl
xchg
fcomps
sub
cmp
mov
mov
sbb
in
lret
sbbb
mov
push
aam
insl
dec
lret
ret
dec
scas
das
sub
ljmp
fiaddl
sub
out
frstor
scas
mov
add
xor
jmp
movsb
sub
sub
shrl
and
ljmp
faddl
dec
jg
addr16
inc
mov
nop
mov
inc
into
sub
jl
pop
adc
xchg
xchg
or
dec
out
dec
mov
push
stos
sub
dec
mov
mov
dec
add
sub
mov
pop
dec
stc
sbb
adc
imul
idivl
test
jno
imul
sbb
or
imul
pushf
fisttpll
jae
sahf
mov
ret
inc
movsb
imul
jl
rolb
push
daa
and
push
sbb
jo
imul
xchg
pop
scas
sub
xor
jae
psrlw
popa
adc
or
icebp
jg
sbb
pop
lret
push
cmp
mov
lods
lea
fbld
rcll
mov
xor
xchg
dec
aam
mov
jb
lock
add
sbb
or
andb
mov
push
inc
clc
sub
out
out
outsb
jb
cmp
push
cmpsl
adc
cmp
cwtl
imul
jmp
call
sbb
push
ret
mov
test
and
and
push
fdiv
xor
sub
js
cld
xchg
push
jo
or
add
popa
push
sub
inc
jmp
in
mov
push
push
lods
pusha
pop
dec
sub
push
repnz
and
inc
adc
dec
xor
push
adc
push
lods
push
nop
hlt
mov
cmp
sbb
and
mov
cmp
mov
xor
ds
hlt
add
pop
sahf
lock
dec
xchg
sub
mov
add
or
push
cmp
xor
outsb
lahf
les
mov
popa
pop
sarl
dec
dec
adc
test
mov
mov
mov
bound
cmpb
jo
sbb
ss
fs
cltd
je
inc
icebp
pop
in
jb
cmp
cmp
pop
out
test
loopne
xor
sahf
adc
or
repz
aaa
cwtl
out
inc
cmpsb
mov
mov
inc
adc
and
fstpl
cwtl
aad
in
mov
add
lock
cs
mov
sahf
add
cld
xor
clc
and
mov
push
add
pop
cwtl
lea
add
jno
push
mov
mov
mov
data16
mov
pop
cmp
sub
cmp
mov
dec
mov
popa
stc
insb
fists
push
sub
jns
push
xor
xchg
cmp
test
push
add
lea
sti
mov
jg
sbb
xor
lock
sbb
repz
inc
or
mov
bound
jge
sub
xchg
jmp
insl
pop
ljmp
insl
insl
fistpll
cmc
sahf
fcoms
movsl
dec
loopne
or
and
dec
cmp
and
lods
cwtl
dec
sbb
mov
fs
mov
es
sbb
add
dec
outsl
cmc
xchg
dec
add
mov
sub
mov
orl
cmpsb
loope
push
pop
and
push
or
jg
inc
and
push
xchg
inc
or
pusha
xchg
jns
sbb
out
xchg
ret
cmc
dec
lahf
xchg
cs
dec
jge
push
test
mov
mov
add
mov
pop
push
mov
xchg
aas
aad
nop
push
in
es
xor
sub
cmp
pop
jnp
aad
mov
mov
push
out
inc
lahf
jnp
pushf
add
dec
or
inc
aas
sub
stc
dec
jnp
or
pop
call
lahf
bnd
pop
andb
roll
xchg
pushf
or
push
icebp
lcall
daa
dec
mov
sub
xor
inc
cld
gs
dec
cmp
xchg
push
adc
mov
and
ja
test
test
das
cmp
lret
sub
sti
ja
inc
stos
xchg
mov
aas
call
xchg
push
sahf
lock
aam
cmpsl
js
outsl
cwtl
in
fbld
and
pop
cwtl
jge
push
ror
daa
mov
mov
mov
insb
push
cmpsl
aam
jnp
push
jp
sub
lahf
jbe
xor
xchg
xchg
lods
sub
jg
push
and
mov
jne
xor
aaa
insl
out
rcll
cmp
pop
sbb
pop
inc
arpl
pop
or
sbb
cs
adc
adc
inc
lret
loop
lods
lea
dec
dec
loope
sub
int3
ficomps
jo
addr16
ret
dec
mov
push
mov
jo
std
mov
push
ja
out
jl
sub
jle
xchg
scas
xor
jle
adc
out
push
stos
jno
enter
mov
xchg
mov
inc
cmp
add
cmp
push
jns
xor
mov
push
into
dec
cld
mov
fidivrs
inc
lahf
pop
push
ljmp
dec
inc
add
aam
xorb
xchg
ss
jno
out
or
dec
and
push
sub
insl
push
lret
call
jmp
mov
dec
lret
fsts
push
es
jmp
pusha
mov
dec
lds
das
test
fistpll
aam
push
call
adc
mov
sbb
sub
sbb
stc
sub
in
dec
out
mov
mov
jo
rorb
mov
adc
shld
pusha
cld
pop
sub
fs
aad
or
lcall
mov
add
imul
bswap
in
jno
cwtl
dec
out
cli
inc
push
xchg
pop
xor
mov
mov
add
pop
mov
cmp
cmpsb
dec
jno
or
inc
ss
sbb
faddp
mov
mov
movsl
pop
push
fsubl
gs
inc
loopne
cmpsb
lahf
movsl
mov
aas
pop
and
cmp
xor
es
inc
or
insl
cmpsl
adc
adcl
and
dec
cld
jecxz
je
xchg
dec
adc
and
push
jmp
push
int
add
xchg
pop
outsb
mov
int3
sub
aas
out
ss
fs
xchg
sub
inc
mov
lds
inc
in
xchg
mov
loopne
mov
and
rorl
sub
lods
mov
or
push
lods
cmp
dec
arpl
push
cs
push
dec
xor
push
aam
xlat
push
adc
outsb
fisubl
xchg
push
or
es
push
push
out
push
popa
mov
mov
sbb
and
or
mov
ret
jl
push
adc
test
xchg
sub
mov
test
jne
sub
cmpsb
sbb
pop
fnstenv
leave
inc
stc
or
cmp
cmc
add
mov
je
jge
test
leave
nop
inc
fsubs
pop
jg
stos
fcmovnb
mov
and
inc
test
mov
cmp
and
mov
dec
stos
popl
adc
inc
cmp
dec
fs
mov
push
sub
cmp
imul
out
jno
mov
outsb
fistpl
mov
sub
xchg
push
dec
xchg
or
outsl
mov
add
jbe
int3
mov
xchg
cmc
popa
outsb
pop
aaa
xor
xor
stos
pop
imul
or
das
stc
jno
aaa
pop
jmp
inc
sub
pop
pusha
popa
and
divl
lahf
inc
sub
aaa
inc
push
pop
inc
pop
dec
jb
idivl
jle
xchg
push
lods
out
jae
rcrl
nop
jne
sbb
xor
out
sti
xchg
fiadds
jge
data16
rorl
mov
or
mov
mov
sbb
pop
xchg
push
push
divl
mov
inc
and
les
xlat
mov
arpl
pop
rclb
inc
paddsb
je
outsl
loopne
call
inc
push
mov
xor
pop
out
or
jge
sahf
inc
int
add
jl
lods
movsb
aad
mov
xor
adc
es
imul
lea
mov
mov
daa
sbb
andl
in
push
pop
jmp
sti
or
imul
hlt
inc
fistpll
cld
inc
stos
lret
lock
stc
nop
dec
mov
mov
xor
dec
rcrl
notl
outsl
cmpsb
mov
jns
ljmp
cmpsl
push
mov
dec
imul
mov
add
dec
int
sti
jl
adcl
and
and
in
xchg
inc
inc
ror
testl
in
mov
jmp
repnz
add
decb
inc
xor
xchg
sub
gs
imul
mov
mov
scas
mov
jp
icebp
xchg
xrelease
sti
jne
push
push
popa
dec
imul
lods
jns
negl
and
lock
mov
push
mov
fsubp
call
mov
rcll
cld
repnz
jbe
inc
fdivp
repnz
imul
push
out
add
stc
movzwl
xlat
pop
dec
iret
subb
out
shlb
pop
lea
ret
cmp
ret
pop
sbb
arpl
outsl
add
test
sub
cmp
imul
mov
fildl
roll
stc
out
xchg
cli
fdivrs
jle
cmp
and
mov
dec
mov
movb
test
xor
mov
pop
inc
pop
lds
add
push
xor
out
or
pop
xchg
daa
push
aam
mov
sbb
jne
popa
mov
mov
lcall
or
pop
mov
mov
inc
dec
subl
inc
or
sub
test
mov
mov
test
or
neg
outsb
inc
push
mov
dec
jno
sbb
arpl
dec
pop
xor
mov
dec
lea
adc
xchg
cwtl
in
aam
insl
call
stos
dec
add
adcl
jl
mov
or
scas
lea
dec
inc
jecxz
mov
std
push
lret
loop
cld
pop
repz
popl
adc
xor
pop
fs
lahf
stos
lahf
mov
jne
xchg
cmovns
pop
adc
arpl
pop
mov
cmp
sub
push
int3
inc
stos
mov
mov
adc
movsb
lcall
movsl
pop
or
jno
mov
cld
xchg
jb
mov
popf
jno
lret
mov
and
mov
addr16
or
popa
jne
ret
cmp
xor
nop
data16
lahf
xor
adc
mov
xchg
jecxz
ret
mov
xor
add
add
pop
scas
xor
pop
cmc
and
xor
loopne
jne
xchg
pop
xchg
int3
ret
movsl
rcl
or
sbb
mov
sub
frstor
int3
int3
stos
and
cltd
addr16
cmp
mov
sbb
je
xchg
fsubrl
hlt
bound
outsb
in
test
je
inc
rcrl
sub
outsb
xor
adc
mov
popf
pop
stos
aaa
jo
test
mov
in
lods
jmp
js
fstps
aad
jnp
xlat
inc
push
sub
jge
pop
insb
or
mov
dec
inc
jbe
jge
push
mul
fwait
in
gs
xor
inc
lods
xchg
push
jg
mov
xor
mov
adc
bts
ss
jp
adc
out
jp
and
std
cmp
inc
lds
rcrb
or
inc
sub
scas
pop
push
push
mov
out
jns
test
ds
loopne
in
jl
mov
add
sub
cmc
xchg
pop
pop
test
or
and
xor
xchg
or
cltd
xor
cmp
movsb
popf
jge
in
mov
pusha
mov
adc
and
pop
add
sbbl
loope
xchg
jg
sbb
pop
xchg
add
sub
push
inc
lcall
dec
in
adc
mov
jp
pusha
xchg
bound
adc
ja
add
inc
mov
sbb
inc
loop
xor
push
fsubrs
loopne
sahf
jnp
sub
sbb
xor
add
out
jmp
shlb
je
lods
movsl
inc
aam
push
mov
jecxz
dec
mov
leave
sub
cmp
push
inc
jae
pop
insl
ret
mov
inc
jge
insb
xor
or
adc
pop
mov
inc
fld1
shrb
xchg
mov
imul
inc
aas
add
jno
jns
jp
dec
popf
imul
dec
mov
xchg
push
mov
push
ss
jb
inc
adc
add
lods
mov
mov
push
xor
xchg
ljmp
lret
push
fbld
stos
lods
sahf
push
insl
mov
sbb
sbb
xchg
mov
aas
loop
xchg
or
adc
adc
pop
sub
inc
test
or
jae
sbb
adc
stos
xor
cmp
jecxz
outsb
add
mov
push
sbb
cmp
aam
push
sti
dec
jnp
mov
sbb
in
icebp
nop
sbb
lcall
push
lods
and
pop
mov
je
int3
and
popf
cmp
mov
pusha
xor
cmp
pop
cltd
aad
mov
and
sti
sti
mov
mov
or
addr16
std
or
mov
lods
adc
pop
insl
jp
jbe
adc
sub
push
nop
dec
dec
sub
call
loope
jecxz
test
xchg
ret
cmp
test
mov
cwtl
or
lea
movsl
popf
and
loopne
mov
adc
cli
adc
in
mov
imul
sbbl
xchg
mov
test
movsb
mov
push
inc
nop
repz
call
cmp
dec
imul
push
test
mov
aam
lock
dec
dec
pop
repz
fsts
aas
push
dec
fldenv
dec
and
fisubl
shll
pop
cmpsb
adc
aaa
mov
xor
arpl
imul
pop
push
xchg
push
inc
ret
mov
jge
popa
mov
loopne
dec
es
lods
je
mov
outsl
xor
xor
xlat
xchg
cmpsl
lods
inc
dec
mov
orb
add
pusha
jl
push
inc
sub
jp
popa
loope
lods
out
js
dec
test
ja
adc
outsb
mov
stos
cmp
test
rorl
xlat
cli
cli
cmc
jb
mov
sub
pop
mov
xor
jo
out
jl
decl
dec
cmp
insb
jecxz
xchg
ja
cmp
data16
outsb
test
inc
data16
sub
pusha
adc
dec
xchg
push
sahf
scas
test
inc
je
xor
add
jnp
lcall
ret
pop
popf
pop
stos
mov
incl
lea
leave
mov
stos
xchg
outsl
adc
inc
pop
and
dec
xchg
or
pop
push
mov
pop
sub
out
push
adc
jmp
adc
sub
xor
sarl
push
mov
xor
or
and
lret
xor
xchg
pop
popa
push
xchg
inc
dec
and
out
mov
sti
add
jnp
push
fadd
push
pushf
push
cwtl
pop
das
ljmp
dec
lods
fdivrl
clc
loope
adc
clc
lret
adc
cmp
fs
jg
mov
pop
in
add
daa
movsl
scas
push
jl
sti
or
sbb
lea
mov
mov
insl
lret
pop
xchg
lds
lds
jecxz
cs
mov
mov
movsb
sahf
mov
jno
push
or
adc
sahf
shrb
sbb
in
cs
test
mov
jo
fs
jbe
rol
xchg
leave
jne
or
add
pop
int3
pusha
outsl
mov
mov
push
and
cs
mov
cmp
mov
loop
lea
sbb
xor
es
add
aas
and
sbb
sbbl
mov
jnp
xor
addr16
inc
fistpll
aam
addr16
push
mov
imul
or
pop
stos
pop
jbe
sbbb
adc
sbb
movsb
aas
aaa
js
sub
and
or
aam
ja
and
inc
mov
adc
sbb
daa
xor
mov
daa
addr16
neg
sbb
mov
xchg
fbstp
addr16
scas
mov
ja
popf
jmp
mov
outsl
iret
mov
mov
inc
adc
adc
clc
nop
das
xchg
stc
inc
xchg
push
and
repz
les
sbb
test
and
sub
xchg
cmp
push
mov
rcll
hlt
sub
inc
mov
js
and
stos
push
sbb
mov
sub
xchg
mov
cmc
xor
sarl
push
xchg
out
and
out
pop
test
and
dec
cmc
jge
lods
mov
adcb
mov
jp
xor
pop
inc
js
loopne
inc
loope
sbb
shlb
mov
dec
mov
mov
push
xchg
ja
push
cmp
js
push
mov
ret
hlt
rclb
stc
mov
mov
push
ffree
lret
xor
daa
call
mov
subb
adc
xchg
pushf
sbb
inc
lds
arpl
sbb
fcmovnu
mov
add
test
pushf
sbb
mov
push
lock
or
stc
mov
xor
jo
test
arpl
idivb
cmp
sbb
jbe
insb
out
sbb
arpl
adc
inc
push
insl
mov
cltd
dec
mov
lcall
mov
adc
shrl
iret
pusha
push
mov
xlat
add
dec
jns
jge
cmpb
inc
sub
inc
pushf
inc
mov
test
roll
fisttpl
xchg
cmp
popa
repz
mov
mov
xor
xlat
cs
in
xlat
imul
add
lcall
in
mov
fcompl
push
out
scas
or
setg
sbb
inc
scas
inc
test
xor
repnz
insl
pop
idivb
or
xchg
xchg
in
sub
push
push
movsl
movsb
js
jecxz
jle
sub
fcoms
out
lods
jl
iret
popf
mov
mov
jge
pop
mov
xor
push
rdpmc
add
jb
movsb
cld
jbe
stos
insb
add
aam
fdivrs
push
push
add
sub
out
outsb
out
dec
cmp
push
xchg
aaa
inc
fsubrs
add
jbe
mov
xchg
mov
mov
mov
mov
pop
loope
xchg
push
shr
mov
loopne
mov
jae
sub
or
ss
je
fists
aas
movsb
xchg
sbb
cmp
or
insl
push
jnp
popa
mov
cmp
push
mov
pop
mov
hlt
mov
push
pause
lcall
inc
outsl
mov
outsb
push
mov
push
push
sbb
lahf
fs
lods
in
or
and
test
xchg
xchg
movsb
clc
sahf
mov
int3
push
mov
xor
loop
mov
and
sbb
test
mov
sahf
pop
and
pop
push
lea
addr16
mov
dec
or
shll
xor
outsb
push
mov
cs
xchg
or
sbb
mov
scas
stos
inc
test
mov
xor
push
gs
ljmp
xor
inc
adc
jne,pt
divb
fwait
push
lahf
jbe
adc
lods
outsl
cmp
adc
and
outsb
adc
test
xor
jmp
mov
mov
add
mov
cmp
jae
imul
adc
mov
int
ja
cmp
lds
ljmp
enter
add
mov
pop
dec
cmpsb
iret
mov
push
mov
or
les
cmp
mov
add
call
sarb
lret
js
jmp
xchg
jbe
faddl
add
outsb
faddl
and
sbb
loopne
sbb
inc
dec
fdivl
lret
repnz
out
je
jge
cs
xchg
dec
jnp
mov
dec
jnp
loope
add
push
and
mov
stos
push
sub
jne
mov
jns
test
dec
in
and
into
jo
js
sub
in
inc
and
movsl
sbb
aaa
xor
adc
fnstsw
je
mov
mov
xor
mov
int
adc
je
mov
sbbb
cmc
push
lret
lret
push
out
mov
add
push
xlat
sub
ret
mov
enter
push
scas
flds
mov
mov
mov
iret
lods
dec
xor
push
inc
shll
adc
dec
addr16
ficoml
sbb
sub
fisubl
out
push
sbb
sahf
inc
test
sub
imul
insb
lods
imul
lds
das
sub
test
rolb
int3
insb
movsb
adc
sbb
test
mov
jb
mov
push
test
inc
dec
dec
addr16
xor
mov
mov
pop
mov
mov
roll
lea
xchg
cmpsb
pop
jno
pop
mov
and
arpl
mov
std
adc
cmp
push
mov
mov
jnp
inc
push
sti
dec
dec
mov
sbb
js
imul
pushf
xchg
xorl
push
pop
aaa
mov
js
fisubrs
jns
fdivs
insb
pushf
clc
jbe
orb
or
rcrb
std
adc
dec
dec
ljmp
xor
xchg
dec
sbb
mov
lahf
std
push
lahf
lret
rolb
gs
dec
pop
push
fnsave
fistl
andb
jo
xchg
cs
inc
hlt
and
mov
leave
faddl
sub
push
lods
out
dec
dec
xor
gs
adc
add
shrb
leave
dec
push
out
mov
bound
fsubs
lahf
imul
or
mov
cmpsb
add
cmpsl
fisubrs
int3
fcomi
nop
push
mov
jnp
and
mov
jno
inc
lcall
rol
dec
fcompl
xor
jecxz
sub
test
loopne
mov
or
jp
adc
inc
add
push
in
ss
js
pop
repnz
sahf
movsb
fwait
cmp
dec
das
or
aam
push
xchg
stos
dec
cltd
jp
pop
add
loopne
pop
or
adc
jbe
iret
fdivrp
cmp
sub
cmc
or
push
addr16
aam
push
cltd
sub
insl
pop
scas
mov
dec
imul
xor
push
into
jl
dec
das
add
in
cltd
cmpsl
inc
pushf
xchg
add
fbstp
iret
outsb
cmp
jo
push
jmp
nop
rol
cld
sub
jo
push
sbbb
mov
mov
scas
cmpsb
jnp
in
adc
insb
jae
addr16
mov
filds
insb
repz
xor
insb
mov
xor
or
push
mov
lret
neg
cmp
jp
mov
nop
aas
sbb
data16
xor
bound
sbb
mov
xlat
cmp
bound
stc
aad
dec
add
iret
mul
aaa
stos
negb
clc
pushf
sti
and
frstor
mov
adc
test
jne
jbe
das
mov
inc
fimull
push
xor
mov
sub
out
cmpsl
inc
scas
xchg
out
sub
xchg
icebp
pop
pop
lcall
add
fcompl
shrl
cmp
fwait
aaa
punpcklwd
or
mov
sbb
addl
pop
pop
mov
nop
add
movsl
fnstsw
push
mov
add
int
push
clc
jne
pop
daa
dec
andb
out
sbb
xrelease
dec
imul
mov
mov
or
mov
nop
dec
cmp
das
popf
fwait
mov
cmc
pop
mov
cmp
adc
sbb
xor
int
arpl
push
sub
test
cmp
jl
push
data16
imul
mov
fistpl
shrb
jns
push
mov
mov
xchg
mov
and
sub
int
enter
pop
jmp
leavew
push
in
int3
fidivrl
dec
dec
dec
jbe
call
insl
cmp
fdivl
adc
fsubrs
mov
leave
sub
xor
lret
mov
mov
notb
xor
rcrl
bnd
jns
mov
int
push
hlt
adc
hlt
mull
test
xchg
xor
push
shrl
push
mov
fwait
sub
cmpsl
cmp
lret
adc
add
jl
out
clc
pop
adc
sub
aaa
xor
sbb
frstor
loopne
jb
xchg
xchg
mov
lods
cwtl
xchg
sub
test
add
add
lods
xchg
cmp
imul
xchg
jle
test
out
nop
push
sbb
aaa
jnp
test
rcrb
fsubrs
xchg
adc
movsl
aas
dec
cmp
mov
scas
rcrb
int3
leave
mov
ljmp
cmc
test
sub
aas
inc
cmp
fwait
mov
add
add
and
fs
push
pop
popa
cwtl
cmp
dec
sbb
push
sbb
pop
push
sbb
xchg
shrb
mov
nop
rcrl
inc
sbb
mov
daa
dec
mov
xchg
lods
push
push
inc
sahf
dec
shlb
mov
test
ja
jno
xchg
test
lret
std
xor
arpl
orb
sbb
add
adc
inc
adc
or
fdivrs
mov
and
mov
mov
mov
outsb
lret
pushl
pop
jle
subl
or
xorb
xor
jp
dec
addr16
cmp
pop
nop
push
cmp
mov
mov
mov
push
pop
jnp
arpl
dec
adcb
sub
pop
dec
jle
lcall
dec
mov
in
sbb
fldln2
and
pop
test
dec
pop
pop
xor
jmp
mov
sbb
xchg
notb
xchg
xor
sbb
icebp
in
movlps
sub
ret
cmp
sbb
xlat
mov
lcall
addl
test
and
push
push
jns
jmp
popa
mov
adc
cltd
dec
out
ret
das
es
sbb
stc
movsl
pushf
xchg
xor
insl
and
lods
lds
dec
push
lea
les
mov
add
je
addb
cmp
je
int
dec
jl
sub
sub
adcb
xchg
cmp
and
dec
idivl
pop
jg
lds
adc
cmp
pop
sub
dec
fs
gs
inc
dec
jne
pop
mov
lea
xor
shrl
pushl
sub
pop
in
ret
mov
push
sub
xor
insb
pop
pop
cltd
int
and
mov
hlt
bound
xor
and
dec
xlat
or
imul
mov
imul
xchg
lods
cs
sti
hlt
mov
dec
aaa
cmp
jle
mov
lret
mov
stos
inc
xor
jnp
mov
dec
dec
jp
cmp
movsb
jns
adcb
push
in
ret
pusha
popf
cmp
jne
pusha
sub
sahf
xchg
rorl
ret
movsb
imul
pop
push
pop
push
movsb
shr
mov
xchg
sbbb
scas
push
mov
jnp
sahf
ret
cmp
and
mov
loopne
xor
fsubrp
pop
jmp
call
aaa
addl
test
sti
lea
push
push
push
dec
aaa
jge
int3
ja
mov
dec
pop
jge
cmc
dec
imul
lcall
push
cmp
mov
push
cmc
jecxz
mov
inc
inc
js
push
in
adc
pop
inc
mov
mov
push
add
mov
jb
pusha
adc
push
sbb
push
scas
dec
jnp
mov
pop
mov
jno
fwait
stos
sbb
sub
sbb
push
sti
out
jp
or
test
adc
mov
stos
sub
pop
xchg
mov
push
mov
cmc
pop
dec
cmpsb
cmpsl
lock
dec
cmp
mov
movsb
mov
cltd
adc
add
test
stos
mov
jae
jle
in
movsb
inc
fwait
dec
andl
fdivrs
adc
sbb
popa
xorl
rorl
jnp
mov
scas
mov
fbld
mov
xor
and
push
dec
stos
mov
bound
push
outsb
add
and
cmp
mov
jecxz
shrb
daa
adc
mov
pop
je
dec
pop
test
mov
sub
cmp
fst
jnp
stos
cmp
outsl
mov
mov
pop
jne
dec
inc
stos
push
pop
jbe
outsl
out
call
jg
outsb
and
add
lods
je
iret
cmpsb
fdivr
hlt
lds
xor
xchg
pop
xchg
dec
xor
inc
pop
mov
outsb
fcmovnu
shrl
aam
and
das
loope
sbb
mov
lods
add
pop
loop
scas
jmp
jmp
out
dec
or
mov
outsb
nop
inc
cwtl
outsb
xor
and
mov
js
shr
adc
insb
xchg
push
adc
outsb
cmp
push
cli
push
adc
sti
sbb
pop
xlat
jl
cmp
mov
mov
aad
mov
packuswb
and
add
cmp
call
inc
push
inc
sub
add
stos
lods
mov
insl
dec
lret
add
dec
cmpb
and
das
push
in
xchg
mov
outsl
cmp
aas
bound
sbb
add
mov
out
xchg
scas
mov
mov
adc
movsb
dec
sti
add
mov
sbb
pop
adc
dec
inc
xchg
jl
cmp
imul
mov
pop
inc
jecxz
xchg
dec
mov
mov
sti
pop
jp
call
sub
add
ja
cmp
xlat
push
cmpsl
sub
add
mov
ja
stos
add
mov
xchg
cmp
mov
ljmp
sub
xchg
or
jge
lods
divl
add
dec
xchg
imul
outsl
xchg
mov
pop
mov
ljmp
pop
xchg
dec
out
add
fsubr
iret
sti
jle
lcall
subl
pop
mov
push
pushl
xchg
pop
adc
lret
les
pop
imul
inc
outsb
repnz
jl
dec
notb
jns
mov
pop
jbe
inc
test
fwait
adc
jnp
push
mov
sub
dec
test
mov
mov
pop
ljmp
jecxz
sub
inc
aas
or
sbb
xchg
cltd
jno
cwtl
mov
mov
inc
insb
sub
test
in
jbe
out
inc
and
cmp
cmpsb
mov
pop
mov
jl
and
test
pop
mov
int3
mov
add
pop
dec
push
cwtl
subl
dec
stos
mov
mov
dec
out
ss
xor
fwait
push
outsl
sub
inc
mov
ret
xlat
icebp
cs
shlb
fwait
in
cmpb
addb
in
fsubs
mov
xor
push
xor
jno
ret
mov
xor
pop
stos
sbb
int
pop
push
mov
adc
push
jns
insb
sub
scas
dec
data16
into
insl
aam
leave
and
stos
in
xchg
dec
and
push
in
cmc
push
and
sbb
call
aam
pop
imul
add
mov
xor
dec
fsts
mov
add
loope
gs
mov
dec
push
sbb
xchg
decb
movsl
cmpsl
xor
mov
pop
sti
jle
scas
adc
aas
xchg
push
iret
xchg
repz
xchg
bound
jge
inc
xor
mov
fisubs
int
mov
mov
in
xchg
loope
inc
cmp
mov
rolb
mov
jb
sub
in
xlat
xor
adc
or
cmpsl
jge
jno
andl
push
mov
cmp
lock
jmp
mov
es
xlat
push
adcl
pop
stos
cmp
jecxz
bound
in
push
or
sub
and
xchg
stos
scas
or
arpl
push
cmpsl
mov
dec
out
mov
hlt
mov
outsl
inc
xchg
mov
insb
xor
mov
loope
or
imul
bound
xchg
lods
mov
cwtl
insl
sub
sub
dec
inc
insb
insb
sbb
xchg
adc
xor
inc
repz
into
call
jnp
mov
pusha
sub
repz
mov
cmpb
push
mov
and
xchg
and
pop
adcb
jno
cmp
shlb
dec
cmp
sub
scas
cmp
jecxz
cs
add
and
add
inc
jnp
pop
push
push
xchg
push
stc
mov
xor
movsb
inc
fcmovne
dec
sbb
mov
mov
xor
inc
sbb
push
rcll
sub
mov
fwait
cmp
ret
jns
js
test
inc
rclb
xchg
imul
adc
into
inc
ret
push
lret
and
mov
cmc
arpl
push
xor
gs
mov
jns
cld
gs
and
out
xor
sub
movsl
insl
cmpsb
pop
mov
stc
stos
scas
xchg
lods
test
adc
ja
mov
lcall
pop
and
out
pop
xor
test
fisttpl
fdivrs
cmc
sub
xor
sti
mov
jecxz
mov
pop
fsubr
and
call
fs
test
jno
cmpl
or
adc
cltd
fcompl
push
jg
cmp
inc
aad
sbb
jle
ret
insl
pop
push
ror
ja
and
adc
dec
out
pusha
jge
dec
cmp
inc
xchg
inc
loopne
es
lods
adc
mov
pop
push
out
in
mov
daa
ret
push
jo
dec
cmp
push
or
loopne
call
mov
and
jbe
or
addr16
inc
js
pushf
stos
jl
stos
daa
dec
mov
push
push
gs
sahf
ret
mov
push
loope
jns
push
xor
jecxz
push
push
inc
and
aas
adc
mov
mov
push
cs
mov
mov
cld
pop
outsl
clc
mov
add
fwait
lahf
gs
ret
xor
push
out
test
xchg
loope
cwtl
out
mov
into
in
out
je
adc
sbb
pop
outsb
je
add
in
adc
mov
push
push
imulb
or
outsl
jnp
es
mov
pop
lods
and
mov
jno
fistps
xor
jmp
rcrl
stc
aas
cmpsb
fs
cli
sub
cwtl
pushf
ss
push
dec
push
pop
sub
jne
lods
sub
ffreep
add
filds
pop
lds
mov
jp
adc
dec
xor
add
idivb
lods
sub
and
jg
subb
fs
repz
and
pop
call
xor
xchg
loop
sub
inc
dec
movsl
pusha
sahf
inc
mov
imul
inc
cmpsb
jno
adc
jne
shlb
mov
mov
imul
inc
cltd
and
xlat
jnp
or
jae
in
pop
lods
imul
insl
inc
push
call
insl
fs
les
lret
inc
das
sbb
pop
aas
fsubs
adc
jmp
or
sbb
pop
les
push
sub
or
cmc
insl
pusha
repz
push
addr16
push
mov
mov
dec
jb
push
inc
pop
pop
jbe
inc
pop
jae
ja
inc
mov
cltd
imul
xlat
push
mov
jae
rcrl
movsb
sub
mov
xlat
decb
jle
rorl
fisubl
cld
dec
fsubrs
sbbl
sarl
das
sbb
sub
add
pushl
mov
sbb
sti
pop
lcall
pop
add
jecxz
inc
test
pop
push
pop
inc
les
or
outsb
andl
and
loopne
pop
sub
arpl
mov
movsl
lea
int3
imul
mov
std
cwtl
mov
sub
mov
push
or
lret
jl
push
sbb
pop
mov
sub
jne
lock
sbb
and
test
faddl
imul
add
outsl
xor
outsl
sub
mov
rorb
mov
loope
xlat
cltd
sbb
jae
inc
loopne
sarl
sbbl
loop
cmpsl
dec
inc
xor
or
pop
add
aas
mov
adc
gs
sub
ss
cmp
push
in
sub
jmp
in
insl
jl
mov
nop
stos
dec
xor
add
nop
add
out
cwtl
imul
insb
mov
sub
hlt
sub
loope
std
mov
movsb
xchg
addr16
test
xor
fs
es
cli
test
add
push
or
fwait
pop
mov
jnp
pop
sbb
xchg
and
bound
sahf
jge
pop
push
lods
mov
cmp
pushl
mov
and
daa
pop
test
jo
mov
xor
jns
shrl
sub
pop
and
loope
sub
and
sbb
cmp
xor
mov
movb
aam
pop
loop
ljmp
addl
add
icebp
lock
adc
inc
mov
stc
mov
arpl
aas
mov
xchg
mov
sbb
and
dec
jge
arpl
or
sub
dec
outsl
rolb
subb
xor
fsts
jae
and
sub
add
bound
test
mov
dec
adc
sub
push
fstp
cmp
out
fdivrl
adc
mov
xor
and
inc
test
jo
nop
cmpsb
pop
inc
push
sbb
mov
jmp
cs
sbb
push
mov
and
mov
push
pusha
pop
jae
jle
shl
das
daa
jo
mov
icebp
ret
push
outsl
movsl
and
outsl
movsl
jae
and
test
inc
and
dec
popl
dec
adc
inc
in
aad
insl
fs
cmp
xchg
stos
xor
popa
xchg
adc
rolb
pop
repz
xchg
dec
inc
sahf
lcall
popf
insb
mov
mov
fisubl
xlat
gs
jb
inc
fldl2e
jle
sub
cmp
shrl
mov
out
cld
inc
arpl
jecxz
push
fs
mov
movsl
push
je
push
shrl
sub
jl
sbb
out
popf
push
lret
dec
clc
test
stos
leave
xor
cmp
jle
scas
out
xlat
shufps
cmp
pop
movl
inc
jnp
add
fsubl
orl
fidivrs
or
push
pop
flds
and
dec
fstpt
daa
les
lahf
rorb
add
pop
mov
ret
stos
mov
adc
sbb
xlat
mov
pusha
jns
cmp
xchg
mov
xchg
pop
das
sahf
cmp
mov
je
ds
addl
cmp
mov
cmpb
movsl
cli
insb
cmp
sbb
push
mov
cmpsb
sbb
sub
jecxz
lahf
lods
mov
mov
add
pop
sbb
movsb
test
or
jnp
bound
adc
dec
cmpsb
aam
nop
inc
test
inc
mov
jle
mov
mov
fbld
bound
mov
pop
clc
ljmp
lods
push
inc
pop
imul
jl
in
rcrl
pop
leave
sbb
jae
shll
lods
movsl
jno
inc
faddl
outsl
inc
inc
in
ja
pop
aam
sti
das
push
jecxz,pt
xor
sbb
push
pop
mov
sub
divl
inc
jp
xchg
push
jns
das
add
std
adc
les
and
mov
mov
ljmp
sub
pop
fcmovnu
imul
sbb
mov
sahf
xchg
fxch
sar
sbb
rorb
and
imul
xor
or
or
cmp
and
mov
cli
and
sbb
lods
cwtl
sbb
sub
xchg
hlt
daa
and
push
mov
xor
lcall
std
fbstp
dec
inc
loopne
fdivr
fs
cld
sti
sub
cmpb
sti
scas
xchg
jecxz
outsl
adc
mov
mov
pusha
inc
dec
dec
xor
cmp
mov
dec
mov
aad
or
push
shrd
lods
sti
cmpsb
notl
push
jg
test
mov
jmp
push
mov
mov
adc
cmp
mov
mov
adc
jl
test
mov
shrl
inc
pusha
jle
sub
loope
adc
outsl
dec
pop
dec
ret
xchg
xchg
inc
xor
stos
xchg
fcoms
popa
push
adc
jle
pop
inc
mov
xor
mov
loope
mov
inc
lock
scas
sub
xchg
cli
push
out
dec
lods
scas
aad
mov
jg
xchg
push
mov
mov
xlat
lods
mov
add
jmp
stos
xchg
mov
int
xchg
pop
dec
inc
pop
inc
dec
inc
mov
push
dec
mov
push
sbb
adcb
ss
fmul
sub
jle
mov
sub
sbb
pop
lods
mov
ss
popa
lock
pop
mov
mov
sbb
push
push
scas
dec
aad
in
inc
pop
push
es
andl
sub
push
mov
adc
cltd
push
addb
sbb
fwait
in
dec
cli
ljmp
addr16
push
movsl
roll
test
lret
or
xchg
pusha
js
jmp
clc
imul
in
cltd
ja
int
dec
pop
scas
jle
outsb
pusha
push
inc
xor
sti
mov
pop
sub
ja
scas
mov
movsb
mov
rclb
inc
je
movsl
sub
jnp
std
jmp
adc
sbb
inc
sub
insb
inc
aam
sti
shll
popa
mov
scas
pop
dec
push
ds
fmulp
sub
mov
inc
push
pushf
pop
sub
cmp
mov
arpl
fs
sbb
mov
dec
mov
sbb
sbb
xchg
add
push
int
xchg
xchg
mov
push
insb
sbbb
mov
std
sbb
sbb
out
inc
push
push
jmp
add
jnp
pop
cmpl
mov
pop
mov
dec
jnp
es
icebp
hlt
pop
and
adc
adc
xor
sub
sbb
xor
dec
outsb
adc
dec
lea
cmp
push
mov
mov
cmp
sbb
sub
jae
or
jecxz
and
xor
mov
xor
ret
xor
icebp
mov
int3
mov
pop
fdivrs
into
sbb
dec
mov
bound
push
mov
add
lret
test
dec
cmp
sti
movsb
cmp
dec
pop
push
scas
movsb
mov
scas
out
mov
xchg
orl
stc
mov
xor
outsl
jle
out
fistl
adc
xor
xchg
add
sbb
and
xorl
pop
xchg
push
push
add
jle
pop
das
out
jb
mov
insb
sub
mov
in
xchg
mov
xor
sbb
fildll
mov
lea
stos
dec
outsl
loop
add
ljmp
mov
shll
cmpsb
jbe
and
test
and
adc
mov
inc
int
mov
jnp
xchg
sbb
nop
daa
inc
out
pop
ret
push
mov
clc
mov
lahf
sbb
dec
mov
dec
testb
add
std
push
add
cmp
out
fs
ja
mov
stc
into
adc
addr16
jne
out
sbb
mov
into
hlt
hlt
aas
mov
loopne
jae
cmpsb
nopl
mov
pop
xchg
adc
push
add
dec
mov
jmp
pop
add
les
jbe
and
xchg
ficoml
jno
fs
inc
and
ficoms
cmp
lret
femms
dec
lods
mov
cltd
push
loop
jo
mov
out
fwait
and
sbb
mov
push
mov
xchg
push
xor
inc
stc
insb
mov
test
jo
sbb
mov
scas
mov
js
push
decl
fwait
iret
gs
pop
sbb
sbb
cli
inc
push
lret
sbb
adcl
xor
mov
push
ljmp
test
lea
ja
push
xchg
adc
cmpl
cmp
adc
enter
pop
push
stos
scas
movsw
cld
add
pop
xchg
xchg
mov
mov
cltd
and
add
sbb
shlb
mov
fsubs
int
andb
popa
mov
dec
leave
cmp
and
clc
sbb
leave
adc
test
popa
pop
mov
in
or
xchg
jo
xchg
xor
insb
ja
mov
xchg
jne
and
xchg
mulb
shll
imul
sbb
pushf
dec
dec
fidivs
ss
and
lds
mov
mov
cltd
js
add
aaa
imul
in
pop
je
popl
add
push
inc
inc
call
inc
cmp
mov
das
faddl
stos
in
xor
imul
ret
mov
inc
frstor
addr16
frstor
ds
push
out
and
int
sbb
outsb
push
or
pusha
roll
cmovle
sbb
insb
push
roll
outsl
sbb
arpl
mov
jle
into
insl
in
mov
shl
sbb
outsl
out
repnz
mov
xor
in
enter
and
jl
push
std
ja
push
cld
dec
out
jo
xchg
imull
lahf
jecxz
inc
nop
adc
inc
push
cmp
push
inc
enter
out
popa
cmpb
loop
and
xchg
fcomps
pushw
mov
xchg
inc
fs
inc
ljmp
add
fistpl
cwtl
aas
mov
subl
pop
xchg
inc
call
push
push
push
jp
daa
push
pop
cltd
jge
into
cld
xchg
test
pop
fistps
and
and
test
mov
test
repz
popf
and
and
sbb
gs
in
jae
mov
add
cmp
mov
xchg
and
repz
daa
dec
movsl
xchg
fldl
es
lods
xchg
xchg
pop
jnp
scas
pushf
cltd
push
add
imul
pop
inc
push
xlat
fs
mov
popa
mov
inc
inc
sbb
inc
mov
or
enter
adc
or
loope
sub
pop
js
in
int3
test
inc
arpl
jns
or
adc
adc
sbb
call
test
sbb
repnz
out
ja
mov
xchg
mov
inc
fisubl
fisttps
push
inc
in
mov
repz
inc
lea
mov
test
dec
sbb
call
aam
cli
lods
mov
dec
sub
outsl
lods
divb
jns
or
push
mov
push
push
cmpsb
in
pop
mov
cmp
mov
aas
rolb
add
mov
pop
iret
lcall
cli
sub
push
mov
js
lret
daa
scas
mov
xchg
loope
daa
push
pop
sbb
sbb
addb
mov
xchg
push
jnp
popa
or
ret
xchg
push
pop
lahf
inc
sub
push
dec
jne
mov
repz
pushf
or
cwtl
faddl
inc
popa
popf
enter
enter
imul
cmpsl
out
jnp
in
xchg
mov
outsb
into
imulb
je
pop
inc
js
fs
popa
mov
pop
enter
loope
pop
call
aam
mov
adc
out
je
cmp
popf
add
jecxz
arpl
into
push
cwtl
xchg
inc
clc
jp
push
lods
test
dec
mov
test
sbb
pop
inc
mov
add
dec
bound
mov
dec
sbb
add
fstpt
mov
out
das
aam
lock
push
and
xchg
gs
in
adc
outsl
mov
xchg
loope
std
movsl
aam
fcomps
test
push
orb
dec
je
or
jle
outsl
clc
icebp
cs
pushf
out
insl
iret
nop
pop
mov
adc
push
add
inc
cwtl
hlt
dec
lret
push
ret
or
mov
mov
dec
daa
call
sbb
sbb
adc
cmp
cmpsb
jae
jno
fwait
xor
ja
outsl
shlb
movntps
and
adc
hlt
fadds
out
dec
xchg
loopne
and
mov
imul
push
mov
jl
rorb
mov
rcl
mov
ja
pop
dec
sub
lods
aas
dec
out
inc
cmp
mov
test
cmpsl
jno
ss
push
sahf
fwait
add
gs
addr16
pop
lcall
es
dec
jno
xchg
or
sub
inc
cmp
mov
cld
and
cmp
cmpsl
sarl
in
or
pop
adc
mov
inc
ja
mov
push
ss
jge
test
popf
in
je
sbb
and
lea
cmp
jle
lea
lahf
inc
in
dec
fwait
shrl
dec
sub
movsl
sbb
sbb
add
shrl
sbb
das
in
cmp
or
mov
orl
pop
add
push
shll
sbb
inc
jl
mov
sub
xor
sub
jge
mov
iret
js
dec
mov
cmpsl
sbb
js
push
xor
push
jg
out
ficoms
inc
add
or
insb
dec
test
repnz
int3
jns
push
xorb
test
cmc
lds
in
sbb
js
or
stos
mov
lret
and
popa
dec
add
xchg
inc
jl
rolb
push
pushf
jno
pop
jbe
out
pop
xchg
in
cmp
push
daa
push
mov
pop
into
sbb
fildl
add
xchg
cmpsl
inc
dec
cmpsb
push
lret
adc
scas
pop
mov
mov
mov
xchg
sub
xchg
nop
scas
in
xor
xchg
stos
idivl
mov
jecxz
push
pop
mov
mov
push
pusha
not
push
pop
movsb
sbbb
jg
adcl
jg
fwait
mov
ret
mov
rol
enter
xchg
jns
sti
and
adc
pop
xchg
aaa
ret
idivb
jl
mov
dec
sub
pop
inc
push
stos
dec
pop
pushf
mov
fistps
pop
and
pop
mov
xor
and
jg
cmp
shrl
stos
dec
dec
adc
std
pop
mov
mov
imul
and
rorl
xor
pusha
adc
xchg
xchg
pop
sarl
add
dec
jle
arpl
sbb
sbb
mov
mov
aaa
pop
data16
push
rol
cmpsb
cltd
aas
fistpl
mov
push
outsl
jle
jbe
mov
popf
pushf
nop
add
notl
dec
imul
nop
inc
in
xchg
popf
jo
cmpsb
rcrl
cmp
sbb
mov
xor
test
pop
dec
push
and
into
pop
push
loop
push
out
jno
inc
adc
push
pop
inc
push
lods
mov
ret
and
das
ja
mov
xor
jmp
sbb
inc
imul
or
sbb
dec
jnp
adc
int
aas
dec
push
mov
and
aaa
xchg
dec
setle
dec
scas
and
mov
xor
das
imul
lods
inc
stc
pop
addl
repz
popa
outsl
add
xor
fs
xchg
pop
cmp
jp
js
aas
jnp
jl
repz
adc
xchg
xorb
and
push
jp
outsb
subl
ljmp
push
cmp
sbb
stos
mov
sbb
push
repz
pop
inc
mov
out
add
pop
and
or
jae
mov
jge
testl
jmp
xlat
sbb
mov
jl
jnp
dec
out
in
pop
hlt
insl
and
xchg
pop
in
xchg
scas
mov
pop
cmc
mov
leave
lods
iret
pop
leave
mov
test
inc
dec
lahf
push
stos
sbb
pop
mov
jl
testb
outsb
insb
icebp
mov
cmp
mov
push
add
out
fisubrs
push
cmpb
shrb
push
outsl
pop
jl
cmp
mov
sub
push
mov
test
jle
push
mov
adc
sbb
outsb
fcoms
mov
adc
stos
sbb
mov
lock
int
jns
rcll
insb
fdivrs
adc
xchg
sti
adc
push
adc
jle
lret
stos
repz
or
iret
cmp
dec
mov
pop
inc
loop
and
inc
lret
xchg
ljmp
xor
dec
mov
jmp
cmp
sbb
loope
mov
jmp
push
lods
sbb
xlat
mov
lret
ret
test
aaa
scas
sarl
inc
out
add
adc
add
scas
mov
into
jg
inc
gs
dec
xlat
xchg
ja
mov
jle
and
mov
popl
cs
adc
shlb
and
jb
ljmp
lret
mov
sub
xchg
dec
fwait
mov
cs
out
push
push
adc
sub
dec
mov
daa
fnsave
inc
and
dec
rclb
and
mov
sahf
leave
cmp
inc
int
sahf
sti
leave
shlb
xor
cmp
in
arpl
loop
push
ret
mov
pusha
shll
int3
xor
sar
dec
sbb
nopl
mov
lcall
je
dec
jmp
into
mov
frstor
out
cmp
sub
cmc
clc
mov
push
xchg
enter
jle
in
jmp
stos
inc
xor
scas
loop
jnp
arpl
inc
mov
xor
mov
xchg
pop
in
add
xchg
mov
inc
insb
pop
mov
fisttpll
push
xchg
sub
xor
pop
mov
adc
in
mov
cld
stos
out
repnz
rorb
lret
movsb
push
repz
mov
jl
fcoms
mov
push
in
inc
or
scas
outsb
les
dec
mov
mov
in
xor
jecxz,pt
adc
xchg
push
push
and
arpl
inc
adc
push
push
pop
push
cmp
mov
out
bound
pop
xchg
mov
sub
aas
pop
fcoml
sbb
dec
lods
pop
fmuls
and
cmp
cmp
test
clc
popf
mov
imul
pushl
mov
movsl
insl
jne
push
scas
ja
sub
add
enter
lret
mov
lret
fistpll
dec
fbld
sub
enter
int3
aam
fisttps
sbb
dec
jmp
inc
cli
loope
push
ja
stc
adc
test
pop
xor
cltd
insb
mov
cmp
push
mov
data16
mov
jae
shrb
xchg
xor
aas
jl
mov
imull
pop
and
dec
jp
mov
jl
mov
push
packsswb
sbb
mov
mov
lods
xchg
or
add
repz
or
popl
fmul
jne
std
sub
and
dec
movsl
push
jo
or
push
rorl
xchg
loopne
pop
push
jne
outsb
clc
or
bound
cmpsb
adc
xchg
and
xor
push
add
pusha
test
icebp
mov
and
gs
stos
add
jbe
jb
mov
movsb
adc
push
lock
inc
rclb
pop
dec
xchg
dec
ficomps
push
nop
lahf
sub
jmp
data16
repnz
push
imul
jp
out
and
pop
stos
dec
mov
test
repnz
sbb
mov
out
cmp
ja
push
popf
int
scas
cmp
out
cmpsb
sbb
jp
push
pop
lods
cmpsb
pop
pop
pop
jnp
mov
nop
xchg
inc
inc
jp
pusha
jbe
xchg
aam
cmp
jmp
jmp
insl
cmpsl
jb
pop
cmp
xor
sahf
pushf
outsl
xor
nop
cmp
push
outsb
in
arpl
clc
sbb
loope
aas
mov
clc
push
xchg
test
and
cmc
dec
adc
jecxz
enter
test
adc
scas
data16
mov
in
jle
or
dec
cmpsb
das
int
push
pop
or
and
jge
and
xorl
xchg
jo
inc
mov
and
jae
test
imul
test
cmpsb
insb
sbb
shll
mov
mov
cmpsl
push
shrl
adc
jg
sub
push
push
insb
push
fcoml
xor
mov
inc
or
das
pop
bound
sahf
cli
sub
popa
xchg
jp
int
xchg
daa
sbb
and
mov
pop
test
test
xor
ret
lods
jp
aas
push
test
aaa
rorl
pop
mov
sarb
xor
xor
cmp
mov
jge
or
push
mov
js
mov
jns
sbb
xor
jns
xor
aas
sbb
shl
enter
cmp
mov
sub
inc
sti
cli
cld
addr16
xor
lock
mov
mov
add
bound
js
jle
dec
cmpsb
scas
push
add
xchg
jnp
mov
jbe
add
xorb
imul
into
inc
xchg
repnz
mov
push
test
call
sub
jne
cld
or
fwait
iret
cmp
jecxz
mov
or
outsb
orb
mov
inc
inc
dec
insb
xor
mov
mov
push
dec
cwtl
dec
sbb
jle
ret
cmc
xchg
xchg
daa
test
push
ret
mov
push
xchg
cmpl
mov
inc
xor
sub
jg
roll
or
cld
push
inc
xor
fcoms
adc
fwait
pop
movsb
mov
mov
in
adc
and
cmpsb
arpl
mov
jae
push
popl
inc
or
push
pop
outsb
jns
dec
outsb
xchg
loope
out
adc
pop
in
jbe
pop
aad
cmp
in
cltd
add
adc
outsl
test
and
fists
push
xor
xchg
scas
fildl
inc
nop
pop
inc
xor
ds
inc
lahf
mov
js
das
pusha
push
pop
fidivrs
cmp
fwait
mov
inc
cs
jp
xor
adc
pusha
jns
cs
cmc
fists
pop
mov
sbb
ja
sub
test
insb
xchg
cmp
push
iret
mov
cmp
outsl
imul
jne
inc
dec
and
push
cmp
rclb
imul
mov
fs
arpl
js
pop
push
or
fcoms
jl
adc
scas
in
movsl
mov
mov
shlb
or
arpl
in
dec
in
dec
insl
jmp
in
js
test
mov
xor
or
ds
cltd
pop
fs
lcall
test
xor
out
fsubrs
gs
loop
adc
and
mov
jge
adc
adc
sub
mov
inc
mov
movsl
mov
mov
xor
jge
and
jns
cwtl
lods
ds
ret
movsb
sarb
test
jno
rclb
sarb
mov
push
push
jne
mov
xchg
ss
stos
jno
push
xchg
or
pop
pusha
lcall
imul
xor
dec
xchg
testl
jbe
or
int
mov
jnp
in
push
inc
jb
push
imul
cmpsl
aam
sbb
js
sahf
mov
ja
xor
pop
add
fists
adc
ja
xchg
daa
xchg
addr16
sbb
mov
into
fsubrs
test
jns
and
mov
adc
mov
mov
iret
adc
and
mov
push
push
adc
fwait
sbb
cmpb
adc
xchg
fmuls
loope
mov
enter
rcrb
push
xchg
cltd
in
jmp
call
mov
xchg
cmpl
lcall
cli
movsb
cmc
mov
test
mov
insl
cmpsb
add
sub
cmp
add
xchg
mov
cmp
push
inc
mov
jae
xchg
repz
lcall
cmpsl
xchg
mov
sahf
adc
adc
pop
loope
int3
and
dec
cmp
pop
in
repnz
fbld
ret
inc
sub
in
dec
push
enter
inc
mov
add
movsl
jecxz
das
sbbl
sub
std
cmpsb
inc
xor
inc
cmp
dec
ja
loopne
das
add
and
push
xor
xor
dec
scas
aaa
lea
inc
rolb
sub
xchg
loopne
push
jge
into
fcoml
sub
dec
push
push
movsb
loope
push
leave
cmp
mov
inc
in
movsb
mov
lods
in
adcl
clc
rcrb
loope
and
xor
dec
fnstenv
and
aaa
std
sbb
test
mov
shrb
dec
jo
mov
loop
push
sbb
outsl
push
jle
bswap
adc
js
mov
pushf
les
pusha
cmpl
imul
cmp
xchg
mov
fcmove
aaa
mov
hlt
and
iret
pop
and
jo
jns
repnz
mov
fisubrs
mov
movsb
adc
arpl
outsb
xchg
ret
pusha
push
pop
mov
add
scas
leave
and
xchg
ljmp
cwtl
mov
jne
std
pushl
mov
test
cmp
dec
out
pop
mov
ret
xlat
cmpsl
jmp
mov
in
jno
stos
mov
js
ja
daa
lods
dec
ss
sbbb
mov
sbb
aas
xchg
add
jo
fnstenv
and
loop
test
je
movsb
mov
pop
pop
sbb
lods
lds
jecxz
pusha
xchg
scas
xchg
push
add
push
jne
jge
sbb
fnstsw
push
xchg
in
testl
mov
imul
call
adc
mov
xchg
sbb
push
flds
test
fildl
fsts
or
mov
mov
outsl
ljmp
xor
shrl
sub
add
or
enter
arpl
fsubrs
fidivl
loopne
faddp
sub
repz
mov
cmp
jae
jg
dec
shl
cmp
jg
subl
pop
in
jecxz
jp
sti
lcall
xlat
sti
mov
jp
pop
scas
pop
repz
inc
xchg
jg
sahf
and
mov
loopne
lods
and
int3
cli
outsb
dec
sub
add
and
sbb
aas
and
push
jns
adc
cmp
in
xchg
outsb
pop
adc
and
add
lcall
gs
or
je
arpl
or
ret
add
mov
cmpsb
adc
jnp
stc
cmp
leave
mov
add
inc
scas
test
and
jmp
es
adc
cmp
out
add
incb
or
fstpt
pop
jne
pop
push
lds
loopne
jnp
dec
insl
adc
imul
test
pushf
add
and
sbb
inc
push
xchg
lret
fnstenv
imul
loopne
outsb
insl
push
xlat
aam
pusha
cld
test
and
jmp
pop
sub
xchg
aaa
lock
and
pop
add
mov
xlat
lea
cmp
cli
fldt
cld
int3
add
push
pushf
push
pop
lds
xchg
imul
mov
std
shlb
jno
dec
daa
jg
fimull
lcall
loop
push
fwait
adc
mov
adc
movsb
jl
push
push
lods
icebp
xchg
pusha
sti
insl
imul
mov
rcll
jecxz
lret
loope
add
push
mov
clc
push
jnp
into
aam
cmpsl
mov
pop
in
scas
pop
inc
loopne
into
fs
daa
jne
pop
push
jnp
test
mov
repnz
pop
add
shrb
pop
nop
jns
mov
hlt
sub
stc
pop
movsl
push
pop
outsl
es
andl
stos
xor
sarl
ljmp
sbb
fstpl
lods
dec
outsl
sub
iret
paddb
sub
mov
sbb
and
arpl
push
cmp
add
inc
push
mov
lahf
xor
mov
les
or
jnp
rcrb
enter
sbb
lods
dec
pop
cwtl
shlb
sbb
daa
mov
inc
pusha
lea
push
ret
aaa
and
addr16
into
add
test
dec
inc
mov
mov
xor
and
cmpl
cmp
addr16
out
cmp
pop
jae
ljmp
sbb
jl
je
xor
leave
and
sahf
and
dec
push
ds
addr16
repz
call
xor
sbb
in
loop
pop
aam
cld
adc
sbb
lea
pusha
mov
sbb
dec
jo
addr16
icebp
jge
std
dec
lods
hlt
adc
inc
pop
add
adc
int
add
idivb
cs
adc
xor
cltd
test
cs
orl
sbb
adcb
xchg
and
mov
mov
pop
xor
cli
push
add
dec
jnp
hlt
mov
pop
mov
dec
in
xor
inc
dec
test
and
sub
addb
mov
mov
clc
push
add
push
pusha
push
xor
out
sbb
adc
rol
in
cmp
mov
xor
test
pop
push
sub
xor
add
arpl
push
inc
push
add
push
pop
fbstp
cmp
dec
insl
sub
sbb
in
mov
jl
xchg
sahf
xchg
mov
outsl
into
inc
insl
loop
out
cltd
sbb
add
or
adc
xor
sbb
adcb
jae
add
cmp
dec
sti
int3
dec
adc
aad
cltd
mov
cltd
dec
ds
pushf
sub
pusha
jl
xchg
add
sub
jne
jno
mov
mov
pop
jg
jnp
sub
xor
dec
sbb
push
ret
mov
pop
in
jmp
in
push
jns
pop
shlb
lds
jo
imul
mov
sub
jmp
imul
bound
push
aas
or
in
pop
dec
into
fmuls
out
push
add
jbe
jmp
nop
inc
cmp
cld
push
mov
jmp
inc
mov
fcmovu
idivb
push
inc
jmp
cmp
xor
cmpb
fmuls
adcl
pop
sarl
mov
sbb
pop
test
jge
sarl
push
adc
push
mov
nop
cmp
and
aaa
ja
sub
movsb
cmp
addr16
test
sub
lods
popa
cmpsl
push
inc
jns
jle
repz
fs
fisubs
push
data16
ja
movsb
pusha
test
xchg
testl
test
out
push
pop
or
xor
and
les
or
adc
imul
jle
and
mov
lea
push
mov
xchg
add
or
xchg
sbb
out
sub
mov
or
jmp
inc
cmpsb
mov
xchg
adcb
cli
and
jbe
popa
fsub
mov
ret
mov
jnp
test
jno
in
insb
jmp
data16
out
fldlg2
adc
sub
cmp
push
addb
into
xor
mov
push
js
in
rcll
leave
nop
out
cmpl
icebp
bound
imul
add
sub
push
jecxz
imul
loop
push
mov
hlt
push
cmp
jle
lea
push
scas
fs
pop
mov
cmp
jnp
adc
push
adc
fiadds
adc
int
fldt
les
rdrand
and
inc
repz
add
test
mov
ret
sub
arpl
test
xor
dec
inc
nop
xor
adc
dec
inc
pusha
sbb
mov
mov
insl
push
and
test
movsl
jmp
cwtl
clc
imul
sbb
aaa
xor
leave
add
pop
repnz
push
xor
imul
and
dec
addr16
xor
jno
jle
or
test
cmp
ja
mov
sbb
xchg
insl
out
mov
shlb
into
cmp
imul
adc
cmp
pop
in
fcomi
cmp
jp
movsb
jbe
aaa
dec
xchg
dec
push
sti
out
mov
push
sub
sub
xchg
popa
sbb
mov
adc
cmpsl
adc
cmpsl
loop
popa
push
add
mov
mov
addr16
jge
jo
mov
mov
jbe
push
xor
mov
enter
and
push
iret
cmp
mov
push
dec
cmp
mov
test
cli
ja
mov
push
cmpl
sub
xchg
daa
mov
mov
mov
movsb
pop
std
addr16
mov
inc
inc
insb
pop
sub
inc
jmp
movsb
inc
arpl
sbb
mov
out
or
lcall
addb
push
ret
xchg
adc
popa
es
pop
inc
mov
fadds
inc
imul
mov
lods
enter
inc
adc
inc
iret
rcrl
pop
or
inc
dec
arpl
and
out
fdivr
outsl
insb
push
pop
fwait
sub
lret
inc
movsb
pop
adc
jecxz
ljmp
jae
fs
sbb
pop
daa
icebp
xor
lcall
popa
daa
lea
inc
inc
das
fs
xchg
cmp
push
inc
test
ret
sbb
xchg
das
and
inc
bound
push
pop
mov
out
insl
mov
xchg
push
les
mov
push
rorb
aad
aaa
int3
adc
cmp
sahf
cmpl
cwtl
insl
mov
test
js
xorl
push
cmc
add
xor
dec
sti
add
adc
sub
movsl
mov
push
push
fcmovbe
dec
in
lcallw
xchg
leave
jnp
std
cmp
add
repz
ret
or
push
push
out
mov
sbb
push
pop
pop
mov
cltd
adc
cmp
mov
xorl
sbb
mov
mov
and
xor
mov
aaa
push
dec
xor
xchg
push
xor
mov
in
mov
lods
inc
mov
ret
push
fisubl
mov
shll
sub
add
mov
pop
add
and
sub
test
cmc
ficoml
cmpsb
fwait
ja
cmp
stos
sahf
test
or
dec
aas
cmc
cmp
inc
ja
cwtl
js
arpl
jae
xor
das
lods
js
and
adc
outsb
aad
mov
mov
movsl
pop
mov
addl
movsb
push
adc
cmp
stc
inc
movsl
mov
rclb
or
ljmp
ss
xorb
aaa
fbstp
jne
adc
cmpl
inc
mov
mov
xchg
xorb
dec
insb
push
fdivrl
xor
sub
aad
mov
dec
jge
arpl
sbb
sub
cmpsb
jl
testl
ds
push
js
mov
dec
into
ret
jecxz
pop
cmp
nop
fwait
stos
xor
or
leave
aaa
and
in
test
jae
xchg
insb
cmpb
and
iret
dec
ds
inc
dec
shlb
insb
sbb
scas
push
inc
int
addl
sub
jge
mov
xchg
jbe
sti
pop
mov
xor
and
xchg
xor
cmc
shll
pop
mov
push
stc
mov
sahf
repz
push
out
pop
sub
pushf
pop
push
fs
icebp
bound
inc
mov
and
shll
outsb
pop
sbb
outsl
pop
adc
ret
notl
pop
mov
push
scas
loop
xchg
sbb
es
push
aaa
dec
adc
push
ss
dec
push
push
xchg
mov
jmp
pop
imul
pop
iret
test
xor
jo
sbb
arpl
or
test
ret
xorl
push
jg
jnp
pop
pop
in
js
push
fs
lret
dec
mov
inc
inc
arpl
inc
in
pop
mov
sub
aaa
sub
sbb
gs
dec
out
lahf
hlt
iret
insl
mov
leave
pop
mov
dec
out
flds
loopne
cmp
push
mov
pop
dec
cmpsl
test
xor
adc
dec
pop
ret
push
jp
xor
and
dec
sub
out
jl
in
fcomps
inc
and
dec
ret
pushf
lock
dec
daa
xchg
mov
push
push
popf
sbb
mov
iret
ja
jecxz
je,pn
data16
dec
inc
cli
insl
xchg
out
ja
sahf
invd
enter
int3
xchg
add
pop
jne
sub
roll
outsb
outsb
lahf
jns
or
mov
mov
jne
ffreep
clc
rcrl
jns
push
jbe
push
into
cmp
shlb
dec
stos
push
pusha
cmpsl
xor
mov
add
pop
pushf
inc
mov
call
cmp
aas
fsubrl
push
xor
cmp
cmp
jnp
xor
add
js
fwait
nop
mov
pusha
pop
fs
imul
mov
jo
sbb
jge
or
sub
das
fiadds
adc
daa
cmp
shrl
push
js
or
stos
cmpsb
test
sbb
fidivl
in
jecxz
mov
inc
pop
jge
movups
push
and
test
imul
cmpsb
int
dec
insb
gs
cmpsl
fbstp
repnz
dec
daa
into
cmp
imul
push
pop
icebp
not
push
mov
test
lret
lods
mov
push
inc
inc
and
push
inc
or
imul
sahf
or
out
stos
mov
imulb
push
jl
out
shll
fs
cmp
and
fisttpll
sub
outsl
sub
sub
fidivrl
mov
dec
or
lods
adc
push
mov
mov
jbe
cmp
mov
cmp
push
daa
push
call
into
dec
pop
or
aam
mov
mov
push
sub
dec
cld
dec
sbb
mov
sbb
jg
test
xchg
sbb
cld
cltd
xchg
sbb
ss
mov
mov
pop
sub
push
add
xchg
cs
xchg
scas
imul
dec
mov
inc
aaa
push
push
push
mov
sti
nop
adc
inc
adc
mov
xchg
pushf
sub
sub
jmp
sub
test
ss
out
add
dec
fs
xor
lods
loop
dec
inc
xchg
outsb
add
jnp
daa
rclb
hlt
test
stc
xchg
cmpsb
mov
and
add
lods
and
mov
pop
popa
mov
loope
stos
mov
stos
cmp
leave
mov
push
mov
loop
adc
cmpsl
fsubl
andb
jmp
dec
cmpsb
vdivps
dec
cmpsl
and
xchg
stc
enter
js
gs
sbb
mov
sub
lods
xchg
movsb
xor
test
mov
jl
loopne
sub
push
ficoml
push
insl
fcomps
mov
push
arpl
xor
gs
or
add
int3
jno
push
sub
leave
out
jl
mov
push
add
sbb
mov
pop
adc
cmp
pop
add
inc
xorb
popa
xchg
insb
inc
and
and
inc
mov
xchg
xor
int
stos
inc
ret
sti
sub
xchg
js
js
and
inc
mov
adc
sahf
or
push
xor
addb
mov
std
jns
adc
aas
xor
sub
xor
popf
push
mov
dec
or
ja
mov
fistpl
pusha
push
push
pop
push
dec
icebp
jg
and
ficompl
sub
popa
jmp
test
pushf
add
sbb
xchg
xor
int3
ja
inc
pop
and
pop
lahf
mov
imul
sub
dec
out
mov
sub
dec
or
cmpsl
sub
jge
or
pop
cli
jbe
pop
cmpsl
rcrl
dec
jb
and
outsb
jle
bound
cmpsb
insl
gs
and
jl
test
pop
jnp
nop
pop
imul
insl
mov
jmp
dec
jb
out
hlt
ret
pop
pop
out
sbb
inc
add
and
lahf
sub
notl
jns
je
sbb
xchg
lea
xchg
push
sti
outsb
arpl
cmpsb
xchg
inc
add
loopne
out
or
pusha
pushf
xchg
cmp
int3
lods
pop
xchg
gs
cmp
loopne
push
rorb
add
ja
mov
sahf
push
fnstcw
mov
subl
mov
sbb
inc
pop
icebp
std
pop
mov
test
pop
dec
xor
movsb
mov
jns
rcrl
movsb
stos
leave
jle
jmp
add
out
test
ljmp
adc
xchg
je
mov
sbb
mov
sub
pop
sbb
xor
in
inc
mov
insl
mov
sbb
pop
loop
sbb
mov
sub
mov
loope
hlt
push
ds
psrad
mov
sbb
cld
mov
dec
outsl
inc
and
test
movsb
jo
outsl
aas
cmp
loop
arpl
lret
adc
push
sub
cmp
dec
das
sbb
pop
add
inc
push
mov
jbe
arpl
lahf
bsf
add
andb
popf
mov
mov
mov
sub
push
shrb
insl
cmpsb
fcompl
adc
xor
mov
pop
xor
mov
add
pop
pop
fsubl
inc
or
stc
cmpsb
or
aam
popa
mov
mov
mov
outsl
push
pop
repz
setae
insb
jb
dec
push
fidivs
fwait
sub
decb
lret
mov
jnp
lret
mov
mov
cmpsb
push
je
xchg
icebp
mov
push
aas
sarb
sbb
mov
rorb
sub
xlat
fs
lods
dec
cmp
negb
add
sub
xchg
mov
jb
inc
pop
out
enter
clc
push
mov
jmp
dec
mov
pop
jp
push
scas
fists
mov
dec
push
sarb
cmp
and
and
mov
decb
stos
arpl
push
inc
mov
ret
add
or
pop
test
movsl
pop
cmpl
or
jnp
hlt
xchg
loopne
xchg
dec
mov
bnd
sbb
add
inc
push
in
enter
add
lods
jb
pusha
push
int
jae
je
inc
lcall
and
xor
lods
out
lods
movsb
inc
dec
or
jnp
cmc
pop
lret
inc
into
push
outsb
stc
mov
shrb
in
mov
stos
pop
pop
adc
xchg
and
aas
test
shr
lods
bound
dec
mov
sub
pop
out
fwait
mov
int
stc
pop
adc
cmp
mov
cld
jne
xchg
lea
movsb
bound
mov
js
xor
mov
xor
imul
push
aas
pushf
xor
sbb
pusha
xor
stc
inc
inc
lods
add
push
dec
push
roll
imul
test
into
pop
push
insl
add
add
cli
sbb
leave
dec
fndisi(8087
ss
inc
xchg
and
cmp
arpl
lret
imul
fstpl
mov
pusha
int3
mov
lock
and
gs
dec
xchg
cltd
push
push
mov
lods
inc
xchg
xchg
xlat
test
nop
jp
lds
sarb
push
inc
mov
pop
xor
cmpsl
pop
jae
add
jns
scas
cmpsl
sub
mov
adcl
mov
popa
mov
pop
sbb
push
pop
push
mov
jge
add
loope
push
movsb
mov
mov
mov
mov
cltd
pop
mov
addr16
jg
daa
data16
inc
mov
pushf
mov
js
scas
inc
mov
mov
cli
dec
cmp
dec
mov
fcmovnbe
outsl
mov
dec
cmp
pop
data16
scas
sti
loopne
mov
mov
addl
test
call
sub
push
push
iret
dec
mov
or
inc
push
mov
out
cmp
negl
imul
mov
or
dec
and
lahf
mov
dec
jno
mov
inc
sub
jo
inc
scas
icebp
cmpsb
mov
pop
dec
gs
mov
mov
mov
ss
int
out
add
xchg
mov
mov
pusha
les
int3
jl
adc
jmp
add
jmp
sub
dec
xorl
push
subb
outsl
gs
push
addr16
int
shlb
fs
scas
out
xchg
pusha
jmp
lret
mov
js
mov
stos
addb
inc
push
or
int
sarb
pop
cmpsl
packuswb
test
cmp
mov
fidivrs
inc
pop
jae
jae
ret
and
xchg
jae
and
sub
in
pop
mulb
push
mov
mov
mov
sarl
xor
imul
out
xchg
test
jg
in
movsb
stos
aaa
loope
xor
popa
jae
in
cmp
pop
clc
test
mov
dec
and
pop
and
inc
and
mov
shr
jmp
cmpb
jecxz
ret
inc
arpl
pop
push
fldenv
mov
xchg
jo
loope
hlt
inc
into
out
icebp
xchg
add
mov
cmovbe
data16
daa
adc
jnp
daa
sbbb
sbbl
xchg
mov
aas
jns
in
out
pop
push
pushf
nop
cwtl
push
sub
mov
stc
and
add
lods
jo
xchg
push
mov
jmp
popa
add
inc
out
xchg
cmp
ret
lods
sub
cmp
popf
xorb
sub
mov
dec
mov
sub
sbb
imul
out
pusha
push
bound
mov
sahf
cmpsb
inc
pusha
jmp
dec
imul
cmp
arpl
out
adc
je
roll
mov
pusha
sbb
mov
xchg
bound
push
nop
add
test
mov
push
adc
cli
jl
pop
mov
mov
sub
repnz
pop
enter
push
fwait
icebp
jnp
js
push
rorl
xchg
movsb
in
jecxz
imul
and
jl
outsl
mov
push
xchg
push
clc
xorl
lock
jg
and
mov
in
inc
push
fisubrl
dec
scas
jp
sbb
mov
mov
ja
cmp
int
incl
add
bound
arpl
cmp
pop
cli
lret
or
dec
fwait
pop
in
or
xchg
push
add
push
ret
je
jae
cmp
xor
lret
jle
lds
xchg
pop
fstl
test
pop
stos
adc
sti
add
dec
push
inc
negl
sub
pop
adc
add
ljmp
mov
and
pcmpeqb
addr16
dec
adc
nop
or
adc
mov
test
jno
xchg
lret
push
jb
dec
xorl
push
pushf
dec
arpl
loope
or
popf
lods
adc
jmp
xor
push
cmp
push
ljmp
sbb
push
sub
insb
daa
idiv
jge
arpl
push
scas
addl
or
stos
out
adc
sbb
push
pop
lea
imulb
int
add
add
fcoms
inc
mov
or
mov
sahf
cmpl
stos
adc
fwait
pushf
nop
push
outsl
ljmp
adc
xor
mov
js
mov
ljmp
out
adc
insl
jo
test
mov
add
mov
dec
jge
jnp
pop
sub
and
push
sbb
dec
cmp
dec
arpl
dec
adc
test
pop
cmc
mov
push
pop
inc
pop
inc
cmp
enter
mov
jne
or
data16
xor
sahf
jno
daa
push
cmc
adc
rcl
or
jo
fcoms
arpl
or
cmp
lods
imul
add
dec
imulb
push
jne
mov
cmc
test
les
mov
stos
mov
insl
add
xlat
popa
fsts
lcall
inc
sub
cld
mov
mov
jl
jbe
jge
push
and
pop
xor
aam
cld
stos
cli
shl
adc
ret
enter
mov
stos
jno
movsl
mov
fwait
xor
lock
mov
ret
and
fs
dec
jne
sbb
push
mov
scas
push
out
divl
hlt
das
in
jl
jbe
cmc
aas
mov
repz
inc
cltd
shl
loopne
add
inc
cld
cmp
xchg
cmp
dec
jmp
cmp
mov
mov
hlt
jno
xchg
popf
sub
push
ja
ja
dec
pop
pop
mov
scas
into
cmp
jbe
sub
sbb
jno
jmp
cmpsl
or
sbb
stc
jle
xchg
popa
jo
aas
es
imul
cld
gs
lods
xchg
popf
xchg
out
adc
xchg
mov
jb
syscall
adc
repz
jne
lea
rcll
rcl
jnp
cmpsl
mov
xchg
add
push
inc
mov
movsb
andnps
hlt
adc
cwtl
push
adc
pop
lods
pushf
push
adcb
cmp
ret
pop
shll
movsbl
push
lds
mov
pop
sbb
inc
das
jmp
gs
cld
push
out
insl
test
out
shlb
mov
jmp
insl
into
out
fisubs
sbb
lods
sbb
cwtl
cwtl
xchg
andl
sub
out
mov
repnz
andnps
ljmp
subb
pop
inc
aad
cmp
jp
in
sub
xor
mov
xchg
xchg
push
repz
test
sbb
pop
xor
sbb
sbb
cmpsb
adc
sbb
xchg
and
lds
xlat
jl
mov
xor
lcall
mov
imul
pop
aam
std
out
mov
inc
jge
mulb
xchg
cmpb
jge
aas
mov
mov
adc
push
adc
dec
xchg
sbb
jae
jge
lods
mov
arpl
test
jns
movsb
jle
cltd
mov
enter
lods
pusha
sub
shrb
xor
jmp
sti
push
test
insl
add
mov
xor
shll
pop
jnp
inc
sub
stos
popa
nop
xchg
push
pop
sbb
push
fcomp
pop
pop
inc
inc
int3
je
cmp
int3
loope
or
fstps
push
shlb
mov
xchg
adcl
or
and
data16
mov
insl
adc
daa
lret
test
in
cmp
outsl
mov
lahf
js
pop
mov
add
fldenv
in
cmp
xor
dec
lret
pop
xlat
mov
cmp
insb
sub
and
sbb
and
mov
push
movsb
inc
pop
outsl
cmp
inc
stos
notl
inc
movsb
inc
adc
push
stos
pop
test
fcmovnb
and
fiadds
das
icebp
sub
in
stos
jmp
push
cmp
cmp
jns
mov
and
test
or
dec
mov
jecxz
pop
arpl
mov
push
sbb
mov
stos
add
push
adc
insb
and
xchg
sbb
cld
std
ds
or
or
imulb
sub
movsl
das
mov
inc
jmp
adc
mov
jge
int3
enter
pop
sti
sbb
sub
test
adc
sbb
aam
scas
pop
repz
mov
mov
loop
jo
nop
enter
loopne
repnz
fmull
das
sub
adc
pop
inc
push
mov
imul
jmp
add
lods
xor
aaa
out
jmp
add
adc
push
ds
and
cmpsl
aas
add
inc
fbstp
xchg
mov
fdivl
loopne
sub
pop
pop
sub
addb
pop
fs
xchg
push
sub
data16
imul
cmp
das
cmp
insl
clc
dec
dec
cmp
push
testb
jg
mov
pop
inc
xchg
pop
push
lahf
insb
pop
lock
in
clc
in
insl
inc
scas
leave
pusha
xchg
shlb
sbb
add
orb
jle
arpl
aas
test
dec
xchg
mov
sbb
test
inc
adc
movsb
adc
inc
fsubl
sbb
daa
cmp
notb
lds
das
sbb
scas
aas
pop
push
cltd
lock
push
push
fldt
js
dec
in
inc
clc
mov
sub
inc
jo
scas
in
add
push
sbb
lds
out
inc
out
push
xchg
enter
in
pop
das
hlt
xor
push
fs
out
and
repnz
orl
mov
aas
imul
mov
mov
in
xor
out
xor
in
jne
in
mov
pop
ljmp
hlt
sub
inc
aaa
dec
sbb
lock
leave
cltd
or
cmp
add
outsl
pop
or
inc
fbstp
lret
push
push
std
mov
fistps
jl
ret
cmp
push
mov
push
outsb
into
inc
add
sti
movsb
sbb
jns
in
dec
lahf
stos
pop
hlt
shll
xor
das
sti
lahf
je
jecxz
lods
outsb
sbb
mov
pop
clc
insl
xchg
xor
inc
pop
clc
xchg
ret
mov
jecxz
xor
mov
pop
pop
outsb
sbb
cmp
imul
arpl
aas
adc
jg
loop
jmp
stc
ret
mov
leave
xor
adc
inc
add
adc
mov
xorl
sbb
enter
cmc
dec
xchg
sbb
jbe
xor
mov
gs
icebp
xchg
cmp
test
stos
or
cld
aas
jnp
jns
fisubl
test
push
and
movsb
in
dec
fwait
cmc
add
std
out
push
sbb
pusha
lret
int
jmp
rorl
pusha
add
mov
cltd
pusha
mov
sub
bound
or
and
insb
loope
arpl
inc
jb
dec
mov
outsl
cmp
andb
cmc
movsl
inc
fucomi
inc
inc
mov
leave
imul
sub
sbb
mov
add
cltd
sahf
repz
in
add
adc
xchg
loope
cltd
inc
movsb
stc
pusha
idivl
outsl
test
cmp
pop
stos
xchg
and
int
inc
cmovns
das
insb
add
addr16
movsl
adc
xor
inc
xchg
adc
shll
jmp
fcmovnu
in
repz
mov
imul
test
jecxz
data16
jp
or
or
bound
ja
aas
cld
and
repz
lahf
test
xchg
and
gs
lods
pop
xor
and
outsb
mov
pop
pop
popf
xchg
aas
mov
cmp
push
scas
pop
sbbb
mov
inc
mov
in
and
push
call
aam
and
call
pop
xbegin
leave
xchg
cmc
pop
mov
outsl
mov
xor
mov
add
and
mov
pop
mov
fisubs
jo
xchg
and
inc
mov
push
jno
popl
test
cmp
sbb
push
dec
adc
pop
or
scas
cmpsl
jnp
xchg
lods
pushf
and
jns
sbb
cmp
loopne
jle
adc
out
or
xchg
aas
les
dec
xchg
mov
mov
mov
mov
xor
leave
gs
dec
jae
mov
xor
xchg
mov
pop
mov
or
mov
inc
or
ds
outsb
jno
or
push
test
cmp
xor
sbbb
mov
xchg
cmpsb
mov
flds
int3
inc
movsl
sbb
das
test
mov
frstor
inc
sub
xor
in
xchg
pop
fildll
adc
gs
pop
xchg
push
inc
push
dec
adc
das
fnstenv
dec
lods
adc
xchg
stc
fisubrs
mov
fnstsw
push
jb
dec
and
mov
pop
stc
popa
push
adc
inc
rcrb
lcall
lock
cli
in
ds
xchg
sbb
jmp
mov
icebp
cmp
outsb
enter
add
jae
arpl
stos
pop
testl
pop
and
out
pop
test
pop
pop
aam
jbe
addr16
xchg
or
and
outsl
push
repz
test
adc
repz
pop
cltd
in
int3
flds
sub
inc
cmp
add
add
sbb
imull
jl
sub
mov
imul
inc
hlt
pop
and
mov
mov
xor
nop
fdivs
repz
inc
loop
adc
int
test
int3
stos
inc
sub
mov
call
dec
sbbb
mov
rolb
xor
mov
inc
and
pop
test
dec
add
fistpl
call
jle
xor
sbb
and
sbb
inc
push
or
sar
sti
push
fdivrs
mov
ja
adc
push
out
mov
cmc
icebp
sub
fmuls
dec
std
xchg
outsl
inc
jg
rolb
jae
mov
loope
xchg
outsl
pop
stos
and
inc
psubsw
rclb
push
sbb
add
clc
pop
idivb
fstps
test
sbb
sbb
fildl
inc
fstl
xor
xchg
das
lcall
int3
mov
cs
outsl
mov
sahf
test
jbe
lock
ljmp
lods
ds
mov
out
sti
int3
shrl
pop
or
sbb
dec
jb
lods
dec
out
dec
dec
in
mov
add
out
in
xor
out
pushf
adcb
shlb
lds
mov
sub
pop
dec
push
bound
imul
sub
cmpsl
mov
mov
add
sub
jo
jne
xchg
cwtl
cltd
cmp
add
xor
pop
ficoml
movsl
jl
or
mov
imul
mov
enter
or
rclb
insl
push
dec
fstpt
sub
and
sub
jo
cmp
fadds
dec
out
mov
mov
frstor
dec
mov
js
cld
pop
jl
cmp
inc
cld
mov
xchg
or
mov
fs
adc
mov
dec
mov
inc
push
add
adcl
mov
dec
jge
aas
pop
pushf
lret
mov
xor
movsl
push
mov
jb
dec
les
xor
mov
adc
into
test
dec
adc
movsl
cmpsl
movsb
js
push
pcmpeqw
test
div
hlt
dec
dec
jnp
mov
jmp
jmp
shl
mov
std
adc
hlt
sub
mov
pop
pop
in
call
mov
test
testb
into
sub
add
cli
cmp
aas
xor
test
xrelease
inc
pop
insb
and
test
pop
fdivl
gs
sbb
jg
jp
dec
scas
std
jle
sbb
int
adc
jae
in
mov
mov
sub
dec
daa
cmp
dec
xchg
int
mov
aas
insl
xor
int
mulb
inc
and
ja
sub
jb
dec
cs
out
sbb
dec
dec
mov
fidivs
push
jne
xor
xor
rorb
pushf
adc
ja
sub
mov
lahf
xor
mov
sub
pop
lods
out
push
mov
xor
push
mov
mov
mov
and
aam
xor
sbb
pop
sbb
std
clc
sub
jae
test
add
xchg
lcall
sbb
je
test
out
mov
mov
mov
xchg
fchs
xchg
xchg
cmpsl
dec
adc
mov
pusha
sbb
push
andl
insb
sbb
imul
je
test
in
xchg
bound
leave
aam
clc
fisttpl
mov
sahf
mov
xor
movsl
adc
ds
mov
jb
and
insl
cmp
and
les
pop
test
inc
call
add
sub
mov
mov
lahf
mov
dec
fistl
cmp
sub
popa
shlb
jae
or
push
daa
sub
imul
push
inc
inc
shlb
pop
mov
mov
add
mov
test
sti
ficoms
jl
stc
pop
fs
clc
push
ss
xchg
lahf
inc
scas
push
pop
test
or
and
mov
or
mov
test
insl
aaa
dec
push
test
mov
test
imul
dec
cmp
adc
loope
mov
cld
outsb
daa
insl
lods
cmp
lahf
sbb
or
lods
pop
add
sbb
sti
sub
outsl
leave
or
repnz
mov
pop
jbe
jp
cmp
inc
popa
aas
xchg
in
ret
fcoms
ret
stos
pop
test
sahf
roll
cld
mov
jmp
cmp
ds
loopne
add
fdivl
sub
lods
mov
jb
hlt
dec
adc
sahf
mov
cmp
mov
sbb
xor
sub
mov
int
sahf
test
cwtl
mov
xchg
jb
pop
inc
dec
lods
inc
and
adcb
or
mov
jno
jb
jge
add
fistl
insb
fsts
push
test
or
int3
js
loopne
mov
xor
inc
cmpsl
inc
inc
cmp
jg
gs
mov
sbb
dec
je
sbb
sti
adc
or
dec
inc
fwait
mov
fnstenv
cwtl
or
jae
sahf
dec
inc
xchg
pop
call
test
pop
aam
xchg
repz
xchg
je
aas
xor
clc
jns
paddw
and
pop
loop
popa
in
fmul
or
idiv
pop
das
inc
jo
xchg
retw
jns
sbb
lods
orl
in
fidivl
in
lea
int3
test
mov
incl
test
enter
and
test
add
dec
js
sbb
cmp
pushf
and
popa
popf
jbe
int3
frstor
sbb
push
mov
sti
inc
popa
aaa
fistps
out
add
inc
cmpsb
mov
adc
mov
add
stos
cmovp
insl
sarb
or
or
adc
push
imul
outsb
sub
into
push
add
sub
pop
jae
mov
bound
outsb
gs
idivl
jl
mov
mov
sub
lea
popf
inc
stos
sub
jecxz
jne
dec
bswap
fs
aam
sub
sbb
cmpsl
jno
out
mov
mov
sub
pop
arpl
cmp
jge
addb
push
cmpsl
lods
mov
aas
sbb
cld
pop
and
mov
into
mov
cli
out
xlat
jge
cmp
scas
popa
mov
xor
jb
dec
rolb
dec
pop
inc
lods
jp
inc
popa
fnsave
cli
mov
push
out
push
js
xchg
movsb
push
leave
popa
test
inc
sbb
and
nop
or
imul
add
xchg
xlat
stc
mov
into
cmpl
jmp
ja
fcmovnbe
pop
pop
pop
dec
add
jle
adc
mov
std
and
loopne
pushw
bound
mov
popf
add
push
mul
and
into
cmc
js
add
add
into
dec
pushf
jno
cwtl
mov
imul
pop
add
mov
pop
pusha
addr16
hlt
lret
fwait
push
jmp
mov
enter
push
cwtl
hlt
xchg
test
pop
mov
push
test
icebp
xlat
sbb
pop
add
cmp
sub
jmp
mov
mov
in
xor
or
out
shrl
and
lea
out
call
aam
or
push
adc
jae
cmp
loop
jp
hlt
insb
pop
leave
jp
add
cld
or
mov
pop
subb
push
outsb
mov
mov
push
fisubs
push
popa
je
sub
jbe
push
and
movsb
lods
jb
or
sub
outsl
sete
outsl
push
aam
xor
outsb
xchg
imul
push
pushf
cs
fptan
popf
push
call
adc
mov
sub
mov
ds
or
scas
pop
sti
arpl
cld
pushf
nop
push
mov
ljmp
sbb
mov
mov
movsl
jl
out
push
fdivs
cmp
jge
push
adc
jb
or
cltd
or
jae
add
push
into
mov
mov
cmpb
xor
or
sbb
push
push
lret
mov
cmc
adc
xchg
cmp
arpl
jb
jge
in
addr16
pop
mov
push
icebp
jp
pop
ret
jg
cmpsb
mov
push
jmp
aas
dec
pop
roll
sbb
xchg
pop
pop
in
push
jnp
adc
mov
xchg
mov
or
xchg
lret
cli
dec
mov
rclb
mov
sub
into
loope
jbe
lds
mov
int
lret
adc
lcall
arpl
loop
stc
hlt
daa
fbld
pop
push
push
mov
mov
popa
lea
test
push
insl
jae
je
and
sbb
dec
add
pop
xchg
adc
arpl
mov
das
scas
mov
data16
test
mov
cmp
or
inc
inc
sub
loope
dec
hlt
lods
pop
dec
repnz
push
jl
stos
xor
imul
mov
jl
jecxz
adc
add
mov
cmp
shlb
mov
aaa
loope
mov
mov
negb
leave
fstl
cmp
cmp
adc
dec
pop
stc
lret
add
dec
lea
mov
fstps
mov
loope
pop
repz
lock
cmp
lods
jbe
fstl
mov
shlb
or
call
xchg
inc
fnstcw
xchg
in
es
adc
inc
xor
or
das
inc
stos
sub
dec
push
jns
or
sub
sbb
jne
push
popa
stos
jnp
stos
test
pusha
xor
inc
movsl
push
mov
lea
pop
push
and
popa
push
jmp
mov
mov
pop
outsl
pop
push
lods
in
aas
out
fdivp
int
sbb
adc
add
xchg
pop
xor
add
lods
and
inc
pop
push
lahf
pop
in
sbb
sahf
xchg
mov
push
mov
loop
lods
push
xor
push
es
cmp
lods
mov
lods
sub
imul
lods
and
fwait
add
push
sti
in
inc
cmpsb
mov
sbb
stmxcsr
mov
in
sbb
or
cmpsb
add
daa
dec
xchg
mov
insb
adc
inc
fisubrl
insl
or
pop
fisttpl
xchg
or
xchg
pop
mov
cmpsl
inc
repz
imul
xchg
mov
int3
mov
sbb
xlat
push
rclb
repnz
fs
sub
cmp
fidivrl
rcrl
mov
push
pop
outsl
push
rcrb
pushf
pop
imul
outsb
lret
mov
std
mov
pop
insl
push
add
hlt
sub
add
inc
movsb
and
test
repz
pop
add
mov
push
test
sub
sub
adc
dec
mov
scas
jecxz
and
xorb
aaa
inc
dec
pop
arpl
fwait
sub
int
sub
in
push
and
sbb
pop
sub
jg
and
cmp
mov
dec
sbb
shrl
aaa
add
push
pop
test
xchg
cmp
sbbl
dec
mov
es
dec
pop
ret
scas
ja
pushf
mov
mov
int
fiaddl
pop
add
mov
mov
xor
xor
testl
mov
sub
jp
jne
rol
add
int
adc
sbb
int
xchg
rolb
push
ljmp
dec
addr16
or
push
subb
dec
std
add
into
adc
sbb
insb
sub
es
jb
loope
adc
cmp
jns
lods
sbb
lahf
cmp
lret
jae
lods
bound
and
mov
aad
movsb
int
sbb
icebp
mov
sub
int3
jmp
insl
pop
into
pop
cmc
dec
int
outsl
ja
cmp
dec
sbb
dec
adc
xchg
mov
cmp
insb
adc
xchg
mov
sbb
push
mov
pop
pop
rclb
pop
push
mov
sub
aaa
pop
dec
sbb
out
pop
xchg
inc
or
imul
inc
ret
cmp
rcl
jle
or
pop
sub
xor
lock
lods
jo
or
pop
push
mull
mov
and
mov
jle
fcmovu
push
jmp
rcll
arpl
mov
pusha
cwtl
int
mov
pop
mov
xchg
into
ds
sub
dec
outsl
fdivr
dec
pusha
popa
mov
mov
mov
dec
sub
push
sub
ds
mov
push
jecxz
dec
push
loopne
movsl
out
addr16
inc
cmpsb
adc
lods
xor
sub
pop
and
xchg
inc
pop
xchg
outsb
mov
mov
stos
dec
inc
fisttpll
mov
icebp
pop
or
mov
test
add
adc
movsb
jl
popa
faddl
inc
out
std
sub
cmp
push
sbb
popa
pop
jns
mov
inc
push
nop
mov
into
ficoml
pop
jl
nop
fs
inc
push
mov
xor
cmp
testl
jne
jmp
lret
jle
fisubl
fbstp
imul
sbb
sti
cwtl
mov
aad
sbb
and
push
mov
or
mov
cmp
xor
and
scas
mov
mov
dec
pop
jg
adc
and
movsb
es
mull
dec
loop
insl
test
mov
popf
scas
lea
dec
scas
mov
push
add
and
xor
in
aam
mov
adc
xlat
and
fcompl
jns
dec
cmpsl
lret
mov
and
outsb
test
iret
bound
gs
mov
mov
cltd
sub
in
outsl
jns
ds
ss
dec
push
mov
sub
push
xchg
fnstsw
mov
sub
call
sarb
into
arpl
jmp
jno
xchg
push
outsb
xchg
bound
adc
xchg
inc
xchg
mov
add
mov
popf
push
push
pop
mov
out
push
push
es
mov
xor
jbe
fildll
cmp
mov
inc
stc
mov
and
jmp
out
dec
add
insb
and
fisttpl
jp
xchg
out
sub
push
adcb
fwait
mov
scas
adc
movsb
xchg
or
pop
cmc
or
jo
pop
xor
out
and
sub
mov
stc
jle
or
orb
fdivl
aaa
xor
jecxz
jl
data16
pop
xchg
inc
push
or
cld
adc
pop
jno
aas
inc
xor
nop
int3
gs
test
gs
test
pop
inc
ret
stc
and
inc
mov
inc
ljmp
jp
xor
stos
jo
xor
adc
jb
push
jp
dec
mov
scas
inc
push
mov
sub
inc
mov
push
arpl
xor
out
jg
or
je
cltd
sub
sarb
pop
mov
adc
arpl
stc
lcall
mov
sbb
adc
jmp
jb
fcompl
pop
out
js
cmpsl
pop
fdivrs
mov
sbb
int
daa
adc
adc
ss
in
jp
jmp
int
adc
mov
movsb
cmpsl
mov
fsubrl
mov
outsl
jmpw
out
mov
mov
xor
mov
aam
dec
add
push
ret
ret
andb
out
jecxz
js
push
inc
xchg
xor
pop
xor
fmull
popf
mov
mov
aam
mov
movsl
std
cs
cmp
push
dec
cs
jno
sub
jnp
addr16
pop
xor
aam
inc
lods
negb
daa
xchg
cs
add
xor
fucomi
pop
jno
insb
ja
iret
scas
cmp
test
fdivrs
add
inc
rolb
sahf
xchg
pop
cmpsb
xchg
jbe
aaa
orb
mov
aad
push
or
pop
cmp
add
mov
dec
adc
call
push
jmp
or
ss
push
aad
popf
int
inc
xchg
dec
and
cwtl
fstl
pushf
cmp
icebp
xchg
inc
xor
insl
mov
xor
stos
cmc
or
aas
cmc
je
adc
ss
lods
push
and
mov
inc
mov
or
cmp
mov
pusha
ds
pop
movsb
pause
add
mov
jae
dec
add
dec
mov
mov
sub
push
cmp
jae
mov
xor
scas
fdivrs
mov
cld
cmp
loopne
inc
ficompl
mov
test
mov
xor
mov
idivb
sbb
mov
sub
sbb
adc
cmpsl
ljmp
jle
adc
mov
inc
stc
inc
clc
clc
jmp
mov
sub
stos
mov
mov
add
test
sub
shll
in
subb
rolb
nop
xor
mov
adcl
jp
pop
xchg
pop
mov
push
mov
daa
push
hlt
aas
dec
or
sub
data16
aaa
and
fmuls
jg
xchg
ret
jns
sub
neg
scas
ret
clc
ja
adc
fidivrs
fwait
dec
insb
mov
jae
mov
test
adc
cmp
cs
fstps
xchg
cmp
or
shld
or
cmp
mov
jns
sti
xor
cwtl
push
data16
decl
and
adc
cmp
jle
and
aaa
push
cld
imul
out
lods
loope
mov
sub
cmp
mov
cmpsb
xchg
mov
int
pop
dec
fwait
popa
inc
popa
in
xor
test
jo
add
es
cmp
js
je
xor
xorl
push
repnz
iret
dec
rcl
stos
or
inc
or
xor
and
test
or
mov
xchg
movsb
fs
test
pop
enter
dec
xchg
addr16
xchg
jg
mov
jg
pop
jmp
popa
mov
pushf
pushf
jge
ljmp
fninit
mov
push
shll
xchg
push
jne
stos
or
je
into
mov
jl
jo
xor
pop
lock
les
push
add
dec
push
sbb
fwait
push
mov
jno
push
scas
lcall
dec
pop
lcall
mov
mov
xchg
sarb
inc
lret
xor
enter
mov
aas
mov
sbbb
and
mov
dec
mov
imul
xor
xchg
and
scas
lds
sub
es
jge
ja
cs
and
inc
cwtl
mov
sahf
jmp
int
xrelease
sub
lea
dec
sbb
cwtl
jne
into
imul
inc
and
jno
incb
cmp
dec
xor
mov
mov
jbe
pop
push
clc
inc
or
fnstsw
pop
mov
mov
cmc
cmp
in
repz
adcb
test
sti
into
subb
or
ret
xchg
sbb
dec
hlt
and
iret
arpl
push
sbb
pushf
xchg
inc
inc
sar
mov
lds
addr16
sbb
jp
icebp
push
lahf
faddl
inc
scas
out
les
jmp
xor
negl
pop
push
cmpsb
or
js
mov
lods
testl
adc
aas
test
sub
jb
aad
mov
add
push
xorl
inc
lods
push
out
cs
je
test
mov
jae
mov
cmp
sbb
xchg
sar
add
cmp
inc
adc
adc
inc
add
push
pushf
out
or
dec
push
fwait
inc
pop
or
lea
add
pop
pop
xchg
das
insw
outsl
xchg
daa
dec
xchg
stc
mov
das
mov
mov
imul
rolb
das
jmp
pop
or
xchg
pop
xor
scas
push
loopne
movsb
lcall
jl
stos
fnstcw
xchg
int
cmp
out
jns
add
les
scas
inc
sub
outsb
imul
adc
in
and
es
iret
shl
adc
ret
inc
sub
arpl
imul
sub
mov
push
addr16
fcoml
repnz
and
inc
filds
sub
enter
es
mov
call
adc
and
xor
aad
rcrb
add
xchg
push
arpl
dec
out
scas
arpl
out
scas
push
arpl
push
and
stos
insw
das
push
push
mov
cmp
scas
loop
sbb
das
cmp
cmp
xchg
ljmp
mov
xor
mov
sub
jne
and
cmp
dec
sbb
ds
add
mov
mov
mov
xchg
int
sbb
push
cli
stc
int
sub
mov
push
jbe
rcl
cmp
inc
scas
xchg
call
pop
mov
pop
pop
adc
stos
imul
adc
pop
mov
repnz
add
xchg
mov
stos
mov
jne
test
mov
jp
int3
stc
lods
pop
imul
sub
scas
inc
dec
fnstcw
push
cld
jnp
std
cltd
mov
outsl
mov
sub
sbb
pop
or
fdivl
movsl
outsb
and
adc
pop
add
fs
imul
popa
pop
push
repz
push
loope
shlb
push
sbb
adc
movsl
xchg
adc
ficompl
popa
mov
jnp
add
mov
push
sahf
fdivl
daa
and
arpl
xchg
or
les
fmull
add
movsb
testl
movsl
xor
cmp
xor
lods
mov
pop
cmp
bswap
mov
dec
lods
and
inc
sbb
rclb
leave
or
mulps
jno
in
loopne
lret
mov
in
dec
mov
adc
xor
call
push
lcall
mov
xchg
pop
inc
cmpl
inc
add
cmpsb
cmpsl
sub
popa
cmp
in
cmpsb
pusha
push
cld
pop
int3
ret
imul
sbb
jae
mov
movsb
sbb
ja
shrb
gs
dec
pextrw
xor
inc
lret
inc
fwait
mov
daa
push
pop
das
jne
mov
fstpt
pop
xor
jmp
in
dec
jmp
or
ljmp
pop
and
push
aad
sub
dec
dec
arpl
call
cmovae
pop
push
cmp
mov
pop
mov
adc
pop
add
ficomps
loopne
cmp
push
sub
jle
mov
dec
bound
ljmp
sti
pop
mov
in
jge
js
outsb
sub
lock
je,pn
pop
push
call
movsl
mov
cmp
add
pop
sbb
add
pop
dec
int
xchg
mov
inc
mov
test
xchg
shrl
sbb
aam
or
and
push
mov
xchg
gs
inc
cltd
std
dec
mov
push
xlat
jo
xchg
mov
addr16
loopne
jmp
inc
xor
push
pop
jo
xlat
fcomps
test
mov
out
popa
sub
push
fiadds
pop
outsb
scas
adc
push
lods
dec
mov
xor
add
xor
test
cmp
test
test
push
lea
mov
add
jp
push
xchg
push
cmc
mov
mov
sti
scas
mov
sub
sbb
popf
jne
incb
or
xor
or
mov
daa
es
push
sbb
dec
idivb
inc
addl
jp
pop
jl
mov
loope
mov
pop
orb
adc
addr16
sbb
mov
scas
xlat
xchg
bound
push
xchg
lods
dec
mov
dec
sahf
add
dec
iret
and
in
out
add
adc
sub
jne
and
adc
sub
addr16
ret
jl
xor
mov
pop
jmp
sbb
inc
cmp
arpl
rorl
xor
pop
icebp
xor
bound
sub
xchg
jns
mov
inc
out
pop
test
xchg
fcmovu
imul
out
shll
dec
addb
ret
pop
mov
jnp
scas
fs
mov
lock
and
adc
ljmp
shrl
lea
adc
mov
das
push
sub
jg
ret
sub
jno
ljmp
scas
dec
pop
imul
jnp
clc
jo
mov
pop
hlt
sub
dec
imul
pop
movsb
aad
mov
jle
int3
iret
inc
push
push
movsb
movsb
jp
into
pushf
lcall
sbb
inc
int
insl
mov
filds
jp
add
sbb
pop
out
iret
lcall
nop
lods
jle
mov
mov
imul
mov
jnp
popf
pushf
pop
outsl
dec
jmp
ret
ss
pusha
add
inc
dec
push
cs
dec
cld
jl
mov
dec
mov
aad
lods
fs
test
xor
mov
and
sti
jp
aas
mov
adc
popa
imul
inc
aad
xchg
rcrl
popf
or
adc
or
mov
sub
lret
push
les
cmc
add
xor
fwait
fs
hlt
sub
fst
lea
les
sub
movsb
incl
pop
mov
data16
sub
in
push
sbb
cmp
bound
lods
fsubrs
sub
sti
lds
sti
aaa
mov
xchg
inc
xor
mov
es
push
add
jge
mov
lret
shll
lock
adc
mov
pop
rcl
add
add
test
sar
dec
pop
movsb
push
and
mov
dec
jns
das
adc
movsb
inc
fidivrs
mov
insl
xor
lahf
cmp
or
insb
outsl
adc
push
push
jl
in
insl
arpl
ljmp
insb
xchg
out
cld
jl
mov
mov
loopne
lret
bnd
jns
jle
sti
sbb
imul
and
pop
popa
hlt
andl
pop
mov
les
or
insl
jle
test
pushf
pop
leave
add
dec
lea
rcll
or
add
call
pop
jnp
xor
icebp
ss
mov
fists
add
call
and
popa
in
add
or
pop
loop
call
xorb
jle
xor
pop
fmull
in
mov
insb
jmp
imul
mov
push
jb
shrl
aam
shll
out
pop
pop
movsl
xchg
pop
mov
jne
mov
shl
test
pop
pop
xchg
xchg
xor
mov
push
imul
or
or
or
cmp
pop
dec
fwait
and
xchg
add
adc
jl
mov
outsb
test
adc
iret
les
fildll
stc
and
orl
jae
xchg
loop
loopne
and
mov
pushf
clc
aam
inc
jno
test
mov
loope
mov
lahf
dec
scas
cltd
cli
test
in
test
stos
movsb
add
add
push
cmp
jecxz
and
or
pop
pop
mov
cmp
int3
pop
in
and
pop
mov
aaa
mov
push
in
bound
shll
ss
pop
jae
jae
xchg
mov
sbb
jmp
mov
aaa
pop
push
scas
ss
push
lods
xchg
lods
cld
pop
divb
loopne
pop
pop
ret
out
push
fimull
sub
test
and
dec
cmp
in
xchg
or
sbb
mov
in
movsl
arpl
xchg
push
sub
lods
mov
mov
sub
je
or
mov
push
dec
jl
loope
test
push
mov
loopne
in
insl
dec
ss
in
ss
into
sbb
call
pop
jnp
xchg
push
jg
imul
pop
nop
fbld
jno
movl
jnp
jo
movsl
aaa
div
fnstsw
test
sub
cmpsb
push
insl
and
sbb
fldcw
or
sub
dec
xor
in
jno
in
or
push
pusha
dec
enter
add
and
jg
cmpsl
xor
data16
sarb
xor
push
mov
stos
inc
std
sub
or
and
cmpsb
rcl
xor
cli
xor
subb
mov
sub
mov
adc
mov
pop
mov
les
jne
cmpsl
xor
fwait
scas
lea
test
dec
cwtl
sbb
xchg
push
cmp
inc
fldenv
cli
mov
mull
int3
mov
das
cmp
push
cmpsb
adc
add
inc
ljmp
cmp
pop
jl
jecxz
inc
adc
mov
or
fsubl
xor
mov
imul
mov
inc
and
xchg
sarb
sbb
popa
mov
mov
imul
add
cmp
in
mov
mov
jne
popf
pop
outsl
sub
ss
jmp
mov
jo
outsb
mov
sbb
lds
out
pop
pop
clc
add
adc
ss
mov
pop
mov
sbb
push
pop
push
dec
add
insl
out
mov
loope
fs
insb
push
outsb
mov
inc
xchg
xchg
cmp
cmp
repnz
andl
mov
xor
lods
insl
fidivl
pop
fisttpl
or
shrb
adc
sbb
mov
stos
inc
imul
jnp
xchg
aad
mov
cmp
mov
sbb
mov
outsl
cmp
movsb
das
pop
adc
insb
rolb
lods
mov
divl
and
lret
movsb
lock
repnz
or
fstpt
imul
mov
ljmp
clc
loope
daa
pop
out
rcrl
rcrb
adc
mov
fildl
daa
lods
mov
hlt
out
push
roll
cmp
push
mov
push
repnz
test
xchg
loopne
push
add
aad
mov
js
bound
lods
aaa
stos
mov
mov
fwait
cmpsb
cmp
fistps
stos
fadd
jge
add
push
jp
js
nop
decl
lods
push
pop
cmp
mov
dec
imulb
js
clc
cmp
nop
fildl
cmp
and
mov
sub
push
out
lods
ja
jl
adc
fs
sar
cmc
adc
xor
dec
inc
fdivl
lods
mov
aad
mov
xor
adc
hlt
pop
loop
mul
sub
adc
ret
add
outsl
shr
stos
cs
cmovnp
inc
fisubs
orl
fistps
inc
xchg
jecxz
inc
addr16
adc
mov
insl
and
push
jmp
mov
sti
mov
out
out
mov
sbb
aas
cmpsl
insl
mov
imul
movsl
cli
push
pop
mov
out
cmpsl
in
test
enter
xlat
dec
mov
cmpsl
mov
fcoms
insl
stos
inc
sbb
in
xor
add
mov
sbb
jo
mov
mov
mov
pop
outsb
jb
adc
data16
lahf
jmp
cmp
xor
pusha
clc
mov
sti
in
push
push
test
mov
pop
int3
xor
test
sbb
bound
adc
stos
mov
and
in
rcrb
inc
rcrb
adc
sti
mov
movsl
mov
popa
cmpsl
out
in
loope
push
icebp
insl
loop
xor
inc
inc
mov
pop
scas
sbb
xchg
nop
pop
ds
or
leave
std
mov
or
outsl
add
mov
out
fyl2xp1
xor
pop
sbb
scas
xchg
les
fadds
or
xlat
sbbl
lret
pop
cmp
adcl
mov
sub
loop
lret
adc
outsb
stos
mov
ja
cmpb
imul
cmp
cltd
sub
mov
mov
inc
cmpsb
mov
mov
adc
mov
dec
cs
lahf
mov
outsl
bound
and
dec
jl
mov
sub
popf
adc
push
test
mov
decb
test
insl
mov
shlb
and
cld
mov
mov
mov
dec
stc
cs
sbb
xchg
push
and
cmpsb
push
dec
sub
popl
lock
adc
into
push
js
loopne
mov
jp
push
into
out
pop
mov
sbb
cmp
popa
and
inc
bound
addr16
scas
scas
and
mov
popf
sub
push
xorb
and
frstor
test
inc
pop
mov
adc
cmp
test
jecxz
hlt
dec
dec
out
cld
inc
stos
lods
sbb
pushf
aam
mov
pop
lods
or
and
xchg
jecxz
imul
leave
jmp
pop
or
mov
inc
sbb
gs
xor
xchg
scas
add
cmpsb
adc
call
out
int
and
jbe
xor
nop
jmp
mov
cmp
push
ja
sbb
out
mov
cmp
stos
xor
mov
cmp
lret
inc
icebp
cmp
pop
sub
mov
adc
outsl
xor
and
ret
pop
arpl
cmp
test
cmp
xchg
mov
xor
mov
out
jmp
aad
or
adc
mov
xchg
jge
sbb
mov
add
ss
leave
sub
test
hlt
sar
ficoms
test
lods
pop
testl
in
decb
push
sub
insl
mov
mov
outsb
or
xchg
rcrl
push
xchg
inc
cs
std
mov
icebp
push
mov
xlat
add
mov
jl
in
sub
push
je
aam
jno
dec
and
hlt
stos
out
test
jae
enter
add
jl
jo
and
jnp
push
jno
jns
in
out
addr16
adc
ficompl
test
clc
sub
aas
movsl
fisubrl
ret
cs
or
call
inc
das
dec
scas
std
lcall
and
cs
pop
jae
cmp
xchg
shll
pop
or
js
lea
jge
repnz
sub
daa
dec
pop
shll
in
sbb
test
cs
xchg
pop
and
sub
jl
pop
add
or
inc
fwait
sub
sarl
push
mov
aad
add
test
ret
ror
xchg
mov
mov
jnp
lea
and
movsb
fwait
add
add
xchg
add
rorl
out
push
stos
movsb
sub
and
pusha
gs
push
imul
mov
popf
jecxz
cmp
addr16
sub
icebp
popf
shlb
popf
fwait
mov
mov
sbb
lret
ss
lods
cmp
shll
js
add
cltd
fiaddl
icebp
xchg
add
js
cmp
decl
iret
cmpsl
xchg
rolb
xchg
mov
mov
jg
scas
sbb
push
adc
or
adc
lret
int3
cmpsl
mov
mov
adc
aas
les
lds
imul
dec
jecxz
sbbl
push
push
pop
out
fs
test
jne
mov
push
out
int3
ret
arpl
sti
cmpsb
iret
daa
int3
pop
push
out
cwtl
mov
mov
pop
pop
push
dec
test
test
xor
and
insb
test
dec
adc
and
xchg
cwtl
lret
inc
inc
mov
dec
sub
int
mov
movsb
les
inc
xchg
dec
int
in
jecxz,pn
outsb
and
movsl
cmp
add
popa
jle
imul
mov
xor
pop
mov
xlat
dec
repnz
xlat
cmpsb
repnz
mov
repnz
push
repnz
addl
add
test
pop
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
jecxz
sub
loope
and
push
jl
push
clc
mov
jb
add
adc
in
pop
push
and
cmp
movsl
jg
stc
and
pusha
fldl
xor
inc
ss
dec
daa
pop
push
xorb
xor
sub
aas
insl
nop
mov
mov
cmp
xor
inc
lahf
imul
cmp
inc
scas
dec
ret
cmp
mov
sbb
dec
fwait
adc
pop
mov
divl
xor
xor
xor
jnp
adc
pushf
or
xor
testl
imul
stos
xchg
cmp
mov
adc
pusha
jp
adc
jmp
sbb
pushf
push
dec
add
lea
jmp
sub
adc
daa
mov
or
out
fidivrs
test
mov
dec
push
sbb
scas
mov
and
aas
xor
fs
push
and
inc
mov
mov
sbb
adc
clc
loope
push
cmpsl
mov
lds
in
push
dec
or
test
push
addr16
xchg
and
jno
push
cwtl
jle
jno
xor
movsl
dec
insl
in
xchg
mov
adc
lret
inc
loope
xor
popf
inc
cmp
fwait
xor
in
inc
subb
cmp
stos
cmp
enter
inc
adcb
pop
stos
fdivl
ja
arpl
or
inc
push
sub
dec
fisttpll
out
or
mov
jge
daa
lahf
jecxz
add
outsb
jne
xchg
mov
or
jne
fdivl
pop
leave
test
icebp
lods
test
sbb
inc
clc
jecxz
test
lret
sbbb
rcr
xchg
mov
add
pop
mov
arpl
sti
xor
js
sub
push
adc
je
xchg
xchg
add
push
andb
or
subl
push
fwait
je
xchg
and
sub
stos
add
dec
push
nop
in
call
dec
out
sbb
aam
stos
sub
jb
pop
movsl
aad
movsl
cltd
ss
mull
jo
and
mov
push
mov
mov
add
cmpb
cmpsb
add
ds
inc
cmpb
movsl
mov
je
inc
cmp
lock
jge
fmull
adc
xor
adc
jb
aas
mov
packsswb
adc
ss
and
mov
and
xchg
jns
xor
pop
adc
push
pop
push
cmc
push
call
mov
adc
push
and
xor
pop
jle
rorl
pop
arpl
and
shrl
mov
ficoms
dec
fiadds
xor
sbb
mov
inc
mov
inc
add
lods
scas
jns
test
gs
pop
lods
dec
mov
les
sbb
addb
loop
loope
in
cld
cs
loop
clc
in
int3
jl
shrl
xor
sub
cmp
push
jo
fisubl
lret
jb
and
pop
cmpsb
rclb
pop
cs
jl
adc
lods
js
testl
mov
scas
mov
movsb
mov
cmp
adc
jnp
das
popa
adc
jnp
jne
or
movsl
fwait
dec
and
push
push
into
movsl
push
mulb
xchg
dec
add
dec
cwtl
cmp
dec
inc
lods
inc
push
cmp
mov
rcrb
in
loopne
mov
cmp
add
jg
cltd
loopne
addr16
cmpsb
fwait
and
adc
pop
mov
add
movsl
das
call
movsb
or
jecxz
inc
cmc
mov
mov
cmp
push
ljmp
out
call
push
inc
sbb
adc
shlb
jae
gs
loopne
xor
aas
sub
pop
clc
cltd
cmp
adc
cwtl
sub
adc
sahf
jl
movsl
aaa
xor
out
test
pop
mov
jle
lods
add
ret
dec
add
orb
out
out
call
push
mov
daa
or
in
out
sub
outsl
push
jo
push
inc
movsl
iret
js
mov
xchg
adc
push
into
rclb
imul
jl
test
xor
into
xor
ret
aam
sbb
dec
das
mulb
out
loop
out
pop
add
mov
xchg
push
stos
push
xor
call
icebp
dec
stos
mov
sub
pop
mov
pop
mov
je
sbb
add
ret
pop
imul
cmp
sub
and
mov
inc
mov
and
call
fmull
ret
add
mov
adc
jmp
pop
pop
stos
push
adc
mov
in
test
lds
inc
fsubp
cmp
xorb
and
scas
clc
sub
jb
aad
xor
and
cmp
mov
sub
add
mov
pop
mov
int
and
mov
subl
add
adc
punpckldq
pop
idiv
pushf
icebp
sub
jns
xor
dec
insb
sub
pop
jnp
xchg
bound
pusha
add
jp
adc
in
in
pop
stos
mov
scas
das
dec
idivb
jae
cmpsb
insl
cmpsl
notb
lcall
or
mov
lahf
xchg
mov
push
pop
add
ljmp
sbb
arpl
mov
cmp
mov
aas
inc
xchg
test
fcoms
xor
cmpsl
mov
mov
pop
push
fs
psadbw
dec
jg
xor
daa
in
out
lret
stos
xchg
and
or
mov
fcom
push
lcall
mov
pusha
lods
add
movsl
lock
xchg
jmp
mov
lcall
jae
push
nop
inc
xchg
fs
rsqrtps
mov
xorl
lods
xchg
sub
xlat
prefetchwt1
cmpsb
andb
jle
jle
lods
mov
aaa
loope
xor
stc
cli
movsb
outsb
push
sar
and
sbb
fcoml
add
in
sbb
outsl
pop
ljmp
das
popf
sub
jl
dec
ds
jl
mov
mov
add
mov
pop
xchg
clc
in
mov
fsubrs
fcoms
xchg
pop
adc
jmp
int3
rorl
pop
cmp
adc
mov
fsubrs
sub
cwtl
int3
inc
ljmp
out
adc
cld
dec
sbb
push
push
daa
mov
addr16
xchg
pop
add
mov
lods
sarl
test
outsl
sub
and
loop
pop
mov
and
jo
push
int
push
pushl
add
dec
clc
mov
pusha
sbb
cmp
or
sbb
jae
inc
mov
outsb
pushf
cwtl
dec
sbb
xchg
push
aam
sbb
rcrl
mov
sub
loop
lahf
inc
push
jnp
movsb
mov
and
inc
push
sbb
mov
rcrl
cmp
jns
imul
dec
jl
mov
pop
enter
jnp
mov
cwtl
mov
lea
inc
and
jae
lods
mov
cmpsl
dec
mov
jnp
or
jge
xchg
adc
pop
or
sub
push
scas
jo
ja
insl
xchg
or
dec
xor
fbld
insb
fcoms
jmp
adcl
cli
call
pusha
in
add
lcall
add
cmp
adcl
and
in
inc
std
inc
or
inc
icebp
mov
cmp
push
lods
call
mov
xchg
push
cltd
cld
dec
mov
fbld
insb
or
rclb
add
out
andb
movsl
jne
jbe
lret
inc
jmp
loop
jbe
inc
mov
cmpsl
sbb
iret
push
sub
xor
adc
fs
int
dec
ret
pop
jecxz
clc
pop
subl
mov
test
pop
jno
mov
cli
mov
and
sub
dec
mov
push
jae
fidivl
fstps
jg
sub
sbb
push
dec
push
mov
jle
rorb
push
xchg
jg
ret
dec
sub
adc
cli
pop
daa
int3
xor
mov
out
test
clc
roll
test
xor
pop
outsl
and
or
sub
sub
pop
outsb
pushf
sub
test
dec
out
push
and
mov
xchg
adc
and
lods
pop
into
outsl
inc
inc
lcall
sbb
in
addr16
mov
shll
pushf
sahf
fisubrl
loop
add
push
test
nop
jecxz
mov
jae
push
dec
mov
ret
je
push
movsb
cwtl
dec
test
inc
xchg
sbb
test
ret
push
mov
hlt
sub
xchg
push
xchg
mov
ror
pop
outsl
dec
jl
mov
leave
insb
dec
test
rcrl
mov
pop
cmpsb
cltd
xchg
and
xchg
call
lods
cmp
xchg
push
adc
sub
imul
inc
push
iret
scas
inc
insl
mov
pop
push
and
popl
mov
fwait
das
cld
pop
mov
inc
adc
data16
pop
mov
xchg
pop
jnp
call
push
into
add
sub
dec
inc
stc
nop
mov
jae
and
push
sti
insl
jno
adc
or
das
call
push
mov
sbb
icebp
dec
push
add
incl
inc
push
cmp
nop/reserved
sarb
xor
mov
pop
adc
mov
outsb
out
inc
insl
into
insb
adc
dec
daa
dec
pushf
adc
hlt
jno
in
sbb
test
xchg
mov
add
add
mov
pop
sbb
std
mov
xchg
imul
imul
data16
gs
mov
hlt
jp
mov
clc
insb
js
adc
jle
xchg
lcall
mov
or
xor
xor
outsb
loop
push
or
mov
and
repz
push
mov
pop
jae
add
cmp
ret
cmp
rorb
adc
mov
mov
xchg
repz
mov
mov
push
mov
xor
adc
xchg
dec
push
mov
mov
mov
rol
add
icebp
mov
jae
xchg
pop
lcall
clc
xlat
icebp
sub
andl
daa
xchg
data16
loop
pushf
cmpsb
stos
inc
movsl
gs
out
sbb
and
inc
scas
imul
pop
mov
dec
mov
popf
insl
sahf
insb
jge
enter
in
xor
imul
cmc
jmp
sti
ds
das
inc
lcall
imul
xchg
fwait
mov
inc
inc
cld
cmp
adc
inc
dec
mov
test
and
add
fisttpll
out
adc
jge
pop
jnp
or
xor
negl
dec
arpl
xor
int
sti
pop
jecxz
test
mov
out
aad
mov
neg
xchg
push
popa
out
sub
andl
jecxz
test
mov
xor
sbb
xor
mov
push
jecxz
mov
imul
ds
sbb
xor
cmpsb
es
into
lods
cwtl
rcrb
jnp
cmp
mov
mov
mov
push
cmp
push
movsl
aad
sti
test
icebp
nop
mov
inc
xlat
mov
lods
pop
mov
adc
std
clc
adc
lea
or
xchg
pop
iret
xchg
cmp
and
icebp
js
inc
sub
imul
jcxz
or
cli
push
fwait
or
bound
gs
mov
pop
jge
lods
mov
inc
sub
dec
mov
aad
pop
mov
jae
mov
int
dec
mov
loop
jns
mov
clc
mov
jp
stos
jnp
push
jg
out
rorl
repnz
sub
jmp
mov
jmp
cmp
addr16
sbb
cltd
out
outsb
dec
js
adc
mov
out
loop
and
dec
into
xchg
insb
xchg
or
mov
xrelease
ja
pop
lods
mov
pop
add
loopne
clc
sbb
aam
je
or
imull
dec
dec
ds
je
or
rorl
adc
ja
inc
imul
repz
icebp
fldcw
aam
inc
movsb
xchg
cmp
mov
or
push
inc
mov
out
cmpsb
sub
adc
pop
loopne
stc
dec
xor
jecxz
stos
pop
les
xchg
andl
xchg
hlt
aam
imul
dec
sub
and
sub
pushf
dec
lcall
add
jae
loop
js
push
jmp
adc
insb
push
sub
sub
adc
push
cli
std
add
dec
xchg
mov
fistpll
loope
sbb
cld
lret
mov
jle
into
or
movsl
cld
cmp
or
adc
test
mov
mov
das
cmp
lret
js
xchg
fadd
sbb
insl
lret
and
movsl
jb
mov
cmp
test
cmpsb
jb
cmpb
adc
dec
and
shll
cli
add
mov
push
je
out
add
and
push
sub
nop
adcl
jge
pop
inc
outsl
adc
dec
push
jno
and
sub
push
repnz
xor
mov
imul
rcll
xlat
dec
ret
cmp
pop
pop
jbe
sar
jmp
hlt
pop
outsl
cli
mov
repz
mov
fwait
jl
mov
dec
sub
out
inc
cmpb
and
popa
clc
inc
adc
or
adc
adc
ljmp
cmp
mov
push
ret
test
mulb
mov
movsl
mov
xor
lock
pop
fbstp
andl
jecxz
lods
pop
mov
int
pop
xchg
enter
dec
pop
fsubs
mov
je
dec
cmp
xchg
cltd
pop
sbb
jbe
arpl
loopne
arpl
clc
arpl
test
js
mulb
mov
sub
cmp
inc
shrl
jbe
sub
xchg
inc
les
mov
push
in
movaps
cmp
loopne
mov
mov
mov
testl
fwait
dec
mov
pop
arpl
ds
pushl
repz
mov
rcrl
ljmp
or
mov
sbb
pop
jmp
sti
in
inc
dec
scas
in
mov
dec
cmpsl
inc
xor
fidivrs
push
fiadds
adc
sub
xor
inc
mov
stos
xlat
xchg
mov
inc
mov
lcall
xchg
cmp
inc
pop
jp
mov
loop
jl
jbe
cli
aas
aaa
je
add
xorb
sbb
push
inc
mov
cmp
movsl
rolb
ljmp
push
daa
dec
test
cmpsb
xchg
mov
mov
lods
push
and
jmp
aas
cmp
cmpsb
or
movsb
cmc
sbb
mov
jge
in
jae
pop
bound
aaa
stos
inc
dec
push
arpl
push
cs
pop
imul
jmp
test
dec
test
xor
scas
divl
or
push
mov
mov
fst
sub
decb
mov
jecxz
jle
aas
aam
dec
orb
jns
dec
out
adc
jae
jbe
and
sar
push
fnstenv
dec
int
push
into
test
lods
push
pop
cmc
out
les
mov
or
dec
mov
add
and
mov
pop
push
and
sbb
pop
push
and
push
and
cmpsl
dec
mov
mov
sbb
int
inc
mov
std
and
out
lea
inc
jno
pop
jb
lea
insl
jb,pn
js
outsb
fidivrs
sarb
inc
rolb
sub
xor
lcall
lods
mov
mov
push
dec
outsl
pop
mov
sbb
rorb
scas
xor
jae
push
fsubl
push
mov
push
or
movsb
pop
cmp
sub
ds
ljmp
sbb
leave
sub
loope
test
movsl
mov
push
push
lcall
xchg
movsb
and
insl
lret
jo
dec
shll
cwtl
pop
adc
inc
sub
pop
arpl
or
xchg
frstor
mov
jg
aas
scas
pop
mov
pop
stc
mov
inc
andl
cli
pushf
sbb
fwait
jns
jbe
arpl
sbb
jb
mov
sub
push
jl
cmp
pop
dec
jno
aaa
mull
jb
jnp
sbb
and
cmpsb
stc
in
mov
xchg
sub
adc
and
pusha
adc
xchg
mov
aas
mov
lahf
lods
je
arpl
sbb
ret
cmp
xchg
push
inc
loopne
xchg
aas
inc
mov
daa
xor
jns
jg
fisubl
xor
stos
fildll
fdivs
inc
fwait
xchg
mov
or
mov
push
sub
std
add
cmc
es
pop
mov
stos
pop
pop
mov
outsl
or
lret
movsb
ret
jecxz
inc
ljmp
cmp
lea
addr16
dec
or
xor
mov
mov
ss
xor
aam
mov
sbb
cs
lods
mov
in
push
insb
pop
stos
imul
push
sbb
arpl
loop
addr16
jmp
inc
out
movsl
mov
hlt
sub
sbb
jb
les
dec
dec
loop
iret
dec
test
lret
inc
scas
and
sbb
pop
jbe
and
pop
adc
lods
push
outsl
and
in
std
ljmp
enter
adc
jne
jae
into
ret
rcll
and
int3
add
add
loope
push
mov
fstl
mov
aas
inc
push
jmp
sub
and
inc
push
out
pop
adc
sub
in
rdmsr
xor
mov
ss
dec
scas
push
jns
inc
popa
andb
adc
movsl
cmp
mov
mov
inc
stos
fwait
je
xchg
dec
mov
pop
mov
pop
cmp
scas
stos
mov
cmpsb
add
ftst
mov
inc
lods
daa
and
fimull
fisubrl
test
movsl
loopne
add
shrl
test
js
dec
xor
mov
add
lods
leave
mov
and
mov
and
fldl
inc
add
mov
test
sbb
imul
sub
and
sub
xchg
mov
lahf
stos
loop
pusha
enter
add
test
icebp
pop
leave
and
or
test
add
aad
jo
jo
rorl
repz
pusha
scas
pop
in
mov
mov
pushl
orb
adc
pop
cwtl
xchg
rorb
inc
sar
das
mov
loope
dec
xor
fisubrs
outsl
lret
mov
jp
dec
mov
jae
mov
jne
sbb
jmp
jbe
xor
mov
imul
or
jnp
imul
cmp
add
cmpsl
xchg
ljmp
sti
imul
negb
dec
mov
and
mov
lret
sarb
bound
xorl
xor
mov
push
add
out
sub
loope
adc
lods
cmp
int
sub
loopne
cwtl
dec
fs
jmp
mov
sahf
add
jl
inc
lret
mov
stos
ja
out
sbb
sub
xor
inc
mov
std
ljmp
jb
fimull
cmp
shrl
pop
jg
aam
pop
cmc
mov
subl
cld
lods
iret
inc
adc
enter
insb
cltd
adc
repnz
dec
dec
mov
movsl
mov
add
mov
insl
lods
aaa
mov
adc
cmc
test
int3
jns
shl
out
ja
enter
mov
cli
icebp
inc
test
inc
push
clc
jp
add
or
push
jp
aaa
es
in
cmp
jno
aam
movsb
or
push
imul
push
rclb
push
loop
ljmp
lret
ljmp
arpl
data16
clc
rcl
sbb
lds
in
jmp
std
pushf
aas
and
dec
jp
lods
bound
cmp
xchg
push
mov
aam
cwtl
lock
loope
jo
out
js
data16
mov
jne
out
pusha
ss
mov
fistpll
cmp
outsl
gs
xchg
and
mov
cwtl
sti
adc
pop
jno,pt
xchg
std
sub
add
xor
out
pop
or
pop
gs
in
push
xor
push
jae
add
or
push
jne
fisubrl
xor
inc
bound
cmp
cmpsb
stc
dec
das
mov
sub
xor
inc
jmp
outsb
mov
movsl
outsl
cmpsb
ret
dec
popa
inc
bound
out
andl
in
cmp
jle
sahf
mov
add
int
nop
jo
and
mov
movsb
roll
xor
inc
jns
pop
out
dec
pop
add
jge
push
push
jo
test
dec
push
mov
and
jb
ds
jb
mov
push
mov
out
rcl
in
in
test
call
push
cld
jecxz
add
or
scas
pop
sub
mov
pop
xchg
push
adc
sub
mov
sub
mov
lahf
cmp
movb
mov
ret
dec
xor
push
cmc
arpl
sbb
pop
stos
dec
mov
mov
lret
lcall
adc
add
cmp
jnp
xchg
xchg
jl
call
lret
dec
lret
xchg
clc
push
dec
pop
imul
lea
fistl
mov
sbb
das
outsl
fs
enter
mov
mov
sbb
cwtl
andb
stos
mov
bound
xlat
mov
cmp
in
fwait
sbb
sbb
adc
pop
push
sbb
imul
stc
mov
mov
aas
mov
pop
mov
outsb
jbe
out
pop
aam
rclb
add
xchg
scas
add
lds
sub
jb
or
and
pop
sub
dec
mov
test
popf
nop
inc
mov
cmp
hlt
inc
aas
imul
fwait
shl
hlt
mov
adc
sub
lahf
mov
imul
mov
sub
or
mov
xor
xor
push
xchg
xchg
popf
shlb
cmp
adc
fcom
addl
mov
mov
lea
adc
shrb
test
dec
mov
pop
xchg
daa
gs
scas
pop
push
in
inc
inc
mov
ret
sub
jb
jnp
and
popa
shll
popf
push
xor
pop
enter
jns
mov
pop
movsl
pop
sbb
jns
jmp
inc
mov
jge
add
pop
sbb
mov
jno
mov
jmp
pop
int
mov
add
add
pop
adc
xchg
jnp
adc
cmp
outsl
movsl
incl
mov
mov
lret
rcl
jp
mov
aam
arpl
addb
push
pop
adc
enter
cs
jbe
outsl
sub
adc
pop
mov
add
mov
and
jo
mov
add
fisttpll
imul
push
ret
outsb
xchg
test
sbb
lods
out
or
mov
mov
adc
pop
movsl
mov
les
rcrl
cmpsb
mov
fwait
mov
mov
imul
jle
mov
pop
dec
pusha
mov
mov
clc
push
imul
push
mov
lea
sub
movsl
into
insb
push
mov
jne
outsb
fs
stc
dec
xor
mov
jbe
jnp
mov
into
cwtl
aam
outsl
add
mov
mov
int
push
incb
xor
add
and
xlat
daa
sub
cmp
dec
inc
cwtl
jbe
icebp
aas
inc
pop
cmp
scas
out
push
mov
push
mov
pop
pop
cmp
push
loop
jmp
mov
mov
js
je
nop
adc
cli
xchg
sar
inc
loop
popf
sub
jne
and
jl
xchg
das
xlat
xchg
sub
rolb
fwait
sbb
push
insb
pop
sbb
je
pusha
sbb
ret
iret
out
int
mov
mov
out
dec
lret
xchg
sbb
mov
dec
sub
and
pusha
loop
xor
push
pop
dec
dec
lods
cs
dec
jnp
stos
xchg
inc
push
imul
std
jns
push
lret
pop
inc
mov
mov
outsl
dec
movsb
fimuls
outsb
adc
ljmp
and
push
ss
loope
rclw
xlat
or
mov
mov
lret
sbb
mov
mov
sbb
lods
mov
push
jmp
out
jl
sub
pusha
bound
or
or
pop
mov
mov
add
xor
int3
es
mov
mov
pop
leave
adc
pop
sti
xchg
fmull
jnp
add
lret
shll
jnp
orb
jb
mov
and
and
mov
fwait
andl
push
jecxz
test
pop
lods
test
jp
pusha
jne
in
sti
dec
push
lcall
pusha
scas
inc
outsb
mov
xor
jbe
fcmovnbe
shll
push
push
mov
inc
test
pop
inc
cli
pop
xor
or
inc
add
jbe
push
xchg
mov
lods
add
mov
mov
jg
scas
ds
push
subb
mov
xor
mov
iret
inc
incl
lret
bound
xchg
inc
sub
imul
mov
lcall
stos
xor
std
fmulp
repz
out
sub
mov
stos
mov
decb
mov
aaa
lret
xor
std
dec
orb
test
mov
popfw
testl
sti
sbb
arpl
ja
adc
mov
pusha
movsl
mov
ds
inc
inc
push
push
pop
iret
push
jge
add
jl
inc
fistl
ja
orb
or
pusha
jge
in
mov
jp
sahf
psrlw
lret
inc
bound
js
addr16
popa
or
sbb
insl
push
cmpsb
push
mov
sub
gs
and
pop
and
mov
mov
loope
dec
arpl
pop
addr16
adc
cs
es
and
into
aas
xchg
icebp
jl
xchg
push
cli
push
iret
hlt
jne
jne
stc
inc
cmp
das
scas
push
popa
mov
xor
xor
scas
mov
lds
repnz
jbe
loope
loop
lods
sti
pop
out
loop
out
or
dec
or
sahf
sbb
push
ja
loope
xchg
shlb
mov
mov
or
inc
or
lock
push
mov
in
nop
sub
xor
mov
test
jnp
and
mov
jns
jne
jle
mov
cmpsl
pop
mov
cmpsl
mov
mov
jnp
sbb
pop
xchg
mov
clc
jl
call
nop
or
je
in
lods
adc
rcrb
cmc
movsl
push
imul
mov
xor
sub
call
outsb
adc
outsl
and
adc
mov
push
sbb
mov
cld
testb
dec
sub
in
mov
and
cmp
and
test
push
popa
daa
dec
fldl
jl
stos
xchg
add
mov
in
push
shrl
scas
shll
pusha
insb
xor
les
neg
imul
frstor
pop
cmp
gs
je
pop
push
pop
cmp
xlat
xchg
ret
sub
lods
test
jbe
pop
out
pop
int3
sub
lea
inc
out
lret
das
cmp
pop
fisubs
adc
mov
pushw
movsb
pop
jno
inc
imul
jge
jns
rcrb
adc
jecxz
inc
sbb
xor
sti
mov
mov
in
les
inc
mov
mov
pusha
sub
fstpl
mov
ds
xorb
xor
pop
movsb
or
clc
insl
js
es
jle
dec
adc
dec
bound
inc
jle
aad
shrl
pop
push
lds
pop
out
daa
fucomip
mov
cmp
cmp
cmp
sahf
int3
test
popf
dec
add
out
push
jae
out
jne
subb
pusha
sub
or
lahf
movsl
pop
push
fsubl
mov
data16
jmp
add
sbb
or
sbb
pop
push
loope
daa
lods
xchg
sbb
data16
pop
jmp
fwait
aaa
data16
jg
mov
aam
push
adc
mov
sub
leave
pop
roll
out
mov
jnp
dec
cmpsb
cmp
jl
jns
pop
scas
sub
movsb
or
pusha
and
addb
shlb
push
push
aas
dec
xlat
mov
repz
imul
popa
popa
movsb
popa
push
insb
inc
mull
jno
addr16
or
adc
xor
jb
jle
cld
sub
lods
faddl
lahf
outsl
cmp
outsl
es
test
jae
test
mov
int3
and
mov
mov
or
inc
fimull
mov
mov
jmp
je
test
scas
lock
lret
roll
xor
jb
es
repnz
lods
nop
mov
jp
fs
mov
fdivs
imul
inc
data16
mov
and
fldt
idivb
or
push
popa
jae
orb
mov
mov
jecxz
mov
stos
ds
mov
lods
and
mov
decl
je
or
enter
in
sbb
mov
xchg
jno
dec
mov
jge
add
fcoms
push
jp
mov
sahf
jb
iret
jns
insb
and
push
push
and
or
test
mov
push
mov
movsl
lods
push
cmp
mov
aas
repnz
iret
sbb
sbb
out
cmpsl
or
cmpsb
mov
jb
lret
jae
mov
cld
adc
and
mov
sub
dec
jbe
cmp
jne
xchg
arpl
sbb
mov
pusha
test
cwtl
and
movb
mov
push
cmp
push
daa
daa
stos
in
test
enter
xchg
jb
push
pop
imul
pop
inc
shrl
pusha
sub
jno
mov
jl
sbb
dec
xchg
inc
cld
scas
sub
out
pop
bound
inc
ds
mov
push
sbb
arpl
dec
ja
lods
subl
mov
cmpsl
and
loopne
rcll
cmpsb
ja
shl
push
mov
dec
movsb
dec
pop
and
mov
dec
pushf
pop
push
push
dec
into
jmp
ret
sbb
cmp
sbb
cmpsb
adc
jnp
sbb
inc
add
jl
addr16
sub
lods
rcrw
dec
mov
adc
jae
cmp
cltd
popa
sub
fs
jno
cmp
inc
jae
push
push
dec
movsl
xor
test
nop
xchg
and
xor
cmp
mov
push
mov
mov
jo
xor
int
lret
mov
rcr
sbb
dec
mov
pop
xor
pop
roll
pusha
mov
xchg
je
in
cmc
push
xchg
sub
pop
mov
xchg
sarb
adcl
or
fstp
jmp
test
mov
loope
jnp
call
icebp
repz
push
push
outsb
ret
sbb
loop
pushf
or
mov
lahf
add
mov
sub
xor
push
sti
mov
jl
pop
jp
sar
and
inc
mov
add
clc
ret
mov
add
lock
mov
sahf
in
sbb
cmp
orb
push
mov
ret
dec
enter
xchg
or
mov
in
mov
scas
shll
mov
sbb
test
test
pop
movsb
mov
test
dec
cmp
sub
cmc
sub
fcompl
add
loopne
sub
gs
jmp
nop
into
rcrl
mov
or
sbb
mov
imul
xor
stos
sub
stos
mov
ljmp
out
test
shl
jns
push
int
jne
out
sbb
mov
jo
xchg
inc
dec
mov
or
mov
les
jne
dec
sahf
pop
mov
sbbl
ljmp
into
pop
xor
jne
xchg
into
xor
call
sub
jecxz
mov
cmp
cmp
adc
cmp
pop
jb
jge
movsl
dec
xchg
cmc
test
and
adc
pop
shlb
dec
sub
adc
jnp
sbb
xchg
sbb
iret
mov
mov
aad
push
js
test
dec
push
scas
movsb
outsl
and
scas
test
in
adc
bound
push
fs
cmp
cmp
imul
jbe
pop
push
mov
mov
lret
daa
inc
pop
xor
cmp
in
push
fdivrs
cmp
xchg
dec
rol
js
jle
and
scas
mov
mov
mov
test
out
mov
out
xor
push
push
pop
push
xlat
out
mov
mov
push
loope
mov
cld
shrl
xor
out
sbb
jmp
inc
adc
mov
jno
mov
sub
cli
mov
push
cli
mov
or
int
xor
dec
adc
fcompl
fs
mov
push
sti
into
outsl
add
pop
ss
jnp
cmpsl
arpl
cld
mov
jae
daa
jnp
movsl
in
push
push
jo
push
and
cmp
ljmp
add
add
mov
mov
shlb
sub
insl
ds
scas
int
mov
inc
test
pop
push
inc
cmpb
push
pushf
out
cmp
inc
in
hlt
jnp
leave
pop
xchg
idivl
jg
imul
int3
mov
mov
fcomps
mov
and
jmp
push
ret
imul
cwtl
loop
std
jl
test
dec
push
mov
mov
pop
rclb
aaa
sbb
or
in
cld
dec
loopne
adc
cltd
lds
lods
lahf
stos
push
sahf
pop
in
sbb
ja
in
pop
jnp
mov
jo
push
cmpsb
adc
popa
mov
inc
lods
dec
stos
ret
out
ret
imul
into
push
cmp
loope
movsb
iret
movsl
inc
int
sahf
xchg
insb
mov
mov
mov
mov
inc
daa
cs
lds
jp
rolb
dec
pop
subb
xchg
xchg
add
or
loopne
inc
pop
cmp
scas
repz
sub
std
mov
add
fnstsw
dec
mov
xchg
pop
outsl
cmpsl
aaa
mov
les
adc
cmp
and
bnd
lret
dec
jle
arpl
scas
lret
xor
int
inc
stos
xor
push
adc
scas
mov
sbb
jmp
sbb
test
jnp
mov
mov
adc
jo
bound
add
pusha
mov
mov
fmuls
in
scas
dec
popa
mov
and
in
shlb
push
clc
add
inc
imul
mov
pop
xchg
outsb
lahf
fs
inc
xchg
cli
loop
sbb
pop
imul
clc
jl
inc
lock
lods
dec
ljmp
mov
movsl
mov
orl
cmp
ds
test
js
jo
outsb
sub
jg
push
gs
push
push
pop
cmp
push
push
test
inc
inc
inc
add
mov
mov
out
sub
movsb
xor
adc
dec
jmp
fistl
dec
into
push
xor
or
sbb
xchg
sub
je
call
setb
ret
mov
hlt
outsb
outsb
push
sahf
mov
pop
fisttpl
add
cmpsb
push
popa
adc
add
and
lcall
adc
rorl
push
scas
bound
sti
inc
sbb
jae
sub
pop
mov
jae
icebp
mov
and
outsl
stos
dec
dec
js
push
frstor
or
mov
insb
xchg
or
jns
xchg
adc
jp
adc
subl
xchg
mov
ret
push
lods
sti
test
jmp
jnp
dec
mov
fdiv
mulb
mov
out
mov
hlt
dec
test
sub
push
outsl
xor
subb
ja
mov
icebp
inc
ja
inc
mov
pop
adc
cs
mov
imul
sub
inc
andb
sarl
mov
push
jne
mov
imul
popa
or
mov
or
lods
pop
mov
je
mov
jle
mov
loope
addl
int3
adc
ret
adc
xorb
mov
pop
xchg
sbb
nop
xor
cmp
and
or
dec
adc
xlat
jle
cmp
es
out
ljmp
cmp
xchg
imul
cmp
pop
add
mov
test
dec
pop
loop
push
push
push
cmc
inc
jmp
adc
insb
jge
mov
int3
jl
lret
fwait
sbb
outsb
lcall
mov
mov
inc
lock
mov
inc
out
popa
aam
mov
mov
push
cmpl
test
es
jg
aas
js
sbb
mov
push
adc
pusha
outsb
movsl
mov
imul
xchg
xor
rorl
lret
ret
and
jnp
jg
cmp
flds
pop
push
pop
daa
dec
push
mov
jle
fistpl
xchg
ja
sub
xchg
mov
mov
popf
lret
pop
push
orl
loopne
dec
scas
sbb
dec
inc
scas
in
pop
js
xor
in
inc
mov
mov
ja
cwtl
xor
jbe
imul
inc
std
and
sub
sarl
and
pop
movsb
test
adcb
sbb
rolb
push
cmp
sub
mov
shrl
sbb
jmp
pushf
jp
pop
leave
dec
mov
mov
ljmp
inc
popa
arpl
je
int3
ret
lahf
pusha
pop
mov
jp
js
mov
push
jmp
enter
sbb
insb
shll
jecxz
test
sbbl
test
insb
mov
daa
sub
adc
jg
scas
xchg
data16
sbb
and
xlat
pop
push
sub
push
mov
in
xchg
add
out
loop
imul
gs
add
xchg
add
dec
cmpsl
sub
adcl
lret
dec
insb
cld
popa
push
mov
or
dec
sub
cmp
and
adc
pusha
mov
fldt
mov
xlat
dec
cmp
jb
xchg
clc
mov
mov
sbb
xor
std
xor
xchg
ror
outsl
pop
ja
xchg
adc
mov
xchg
dec
mov
cmp
jl
lods
fimuls
test
xchg
cmp
add
flds
loop
adc
fimuls
and
mov
stos
mov
outsb
xlat
mov
jmp
insb
popa
insl
xchg
adc
push
iret
cmpsl
outsl
adc
inc
inc
shlb
add
xchg
dec
stos
cmpsb
xorl
lock
or
ds
dec
shr
imul
sub
or
andl
nop
push
pop
test
add
mov
xchg
mov
mov
loopne
movsb
mov
sbb
jno
dec
add
mov
mov
sub
cmp
adc
xchg
mov
fs
jl
sahf
xor
ds
sbb
popa
or
jnp
je
jle
es
jae
jmp
lcall
out
decl
sub
cmp
xchg
sub
lret
dec
leave
dec
pop
add
jo
push
lods
sbb
loopne
cmp
jl
cs
outsl
or
xor
push
xchg
shrb
cmpsb
fcoml
xchg
pushf
sahf
jge
xchg
stos
push
jae
adc
lods
sarl
adc
and
xchg
fmuls
cmpsb
push
sub
shll
popf
mov
test
jmp
push
popf
pop
add
aaa
in
rcrl
scas
mov
stos
adc
and
xor
cmp
or
cld
loopne
mov
add
out
or
sub
cld
test
pop
dec
je
jne
push
sbb
lret
xchg
xor
add
out
sbb
out
decb
loopne
push
jg
pop
adcb
and
xor
xor
fs
stc
and
xor
xchg
out
jns
mov
outsl
and
mov
das
ret
push
or
adc
cmp
rcrl
cmp
jg
lods
mov
mov
cmp
fisttps
movsb
mov
in
xor
sub
or
outsw
out
add
sbb
hlt
cli
mov
mov
pop
aam
or
add
mov
aaa
inc
fisubl
mov
imul
mov
mov
ds
fsubrp
int3
dec
stos
cmp
mov
into
ret
jae
and
in
or
xchg
jns
fbstp
rcl
pusha
push
dec
dec
ja
cmp
inc
or
cmp
ds
and
mov
lds
mov
xchg
mov
fdivs
dec
and
mov
js
pop
enter
pop
clc
jns
shlb
arpl
mov
sbb
loope
xor
les
dec
rcrb
mov
xchg
rorb
in
mov
dec
xchg
mov
lods
int3
stos
mov
pushl
sub
push
leave
inc
scas
movsl
xor
adc
int3
jb
mov
or
xor
jae
inc
loop
dec
iret
cmpsl
cmc
cwtl
inc
mov
pop
inc
scas
ja
fs
adc
sub
outsb
movsb
lods
xor
sub
aaa
out
xchg
cmp
sahf
jl
hlt
adc
jp
sbb
xchg
in
int3
cmp
test
rcrl
js,pn
popf
in
mov
sbb
and
pop
call
sub
or
sub
mov
popa
mov
enter
xor
lods
jo
push
and
mov
loop
fucom
pop
mov
jno
pop
movsl
mov
or
out
outsl
and
push
adc
daa
cli
adc
push
mov
andb
dec
add
hlt
pop
push
bound
inc
mov
jb
imul
inc
jmp
arpl
out
decb
sbbb
and
icebp
mov
ret
push
lds
cmpsb
ljmp
pop
arpl
mov
cmp
add
mov
add
sbb
pop
or
mov
cwtl
add
pop
dec
in
popa
ja
js
in
mov
sub
not
add
sbb
xor
adc
das
pushf
adc
dec
lds
jb
mul
mov
pop
jns
inc
mov
clc
xchg
insl
ret
push
add
fisttpl
lds
into
or
loope
mov
inc
mov
inc
insb
fs
dec
and
xchg
clc
inc
mov
add
sbb
repnz
js
rcr
jae
xor
int3
dec
cmpsl
stos
lods
adc
out
mov
xor
out
int3
test
mov
cmp
int
xlat
shr
push
lods
je
test
push
cmp
sarb
stc
dec
sub
mov
jo
sub
xchg
mov
loope
dec
std
stos
cwtl
aad
pop
push
aaa
dec
add
inc
outsb
inc
cltd
sub
push
test
sahf
add
dec
fdivr
sbb
push
fnsave
jbe
setae
mov
into
jmp
xchg
add
sbb
data16
sub
mov
inc
inc
mov
inc
loope
inc
clc
jg
jg
push
ja,pn
ret
inc
lods
push
sbb
pop
imul
outsl
add
sarb
sub
pop
fidivs
push
sub
mov
xchg
and
daa
popa
bound
push
loop
or
jbe
sbb
jecxz
pusha
mov
bound
lahf
cld
push
or
jno
jp
jl
pop
jae
sub
push
adc
sti
and
das
push
jne
data16
push
lds
push
movsb
xlat
into
scas
mov
mov
and
imul
mov
adc
xor
outsb
and
fbstp
call
lahf
mov
test
jae
imul
sti
dec
fisttps
gs
xchg
je
dec
fwait
sub
test
sbb
lret
add
lea
and
xor
inc
inc
xchg
mov
icebp
and
pop
cmp
push
insl
jp
jae
scas
cmpsl
std
insb
shr
js
push
dec
stos
cmpsl
xor
sti
adc
outsb
add
insl
je
fsubl
in
sub
mov
in
mov
imul
cmc
push
lods
xchg
sbb
xchg
jne
jge
rorb
mov
lret
xor
xor
ret
jl
lods
jp
loop
and
daa
sub
stos
sbb
test
pop
sarl
inc
jl
popa
add
xchg
push
xchg
imul
cmp
mov
xchg
aad
outsl
push
and
shrb
mov
aam
jno
fimull
and
fistps
repz
fwait
add
lock
andl
sti
push
sti
cltd
mov
xchg
sarb
mov
in
shl
sahf
gs
add
lods
mov
aaa
mov
cltd
add
jno
xchg
xchg
or
test
jmp
int3
sbb
jg
mov
adc
push
push
push
fs
les
inc
dec
push
hlt
addr16
mov
imulb
push
call
mov
inc
test
cmp
mov
lret
sub
push
outsl
insb
enter
xchg
dec
or
test
inc
inc
pop
shl
mov
jne
xor
clc
je
mov
pop
aas
divl
sbb
cmp
adc
lods
lock
daa
int3
divl
out
int
add
dec
idiv
pop
sub
pop
dec
out
cmc
or
jnp
int3
cmp
sbb
repz
lret
lret
cmp
mov
bound
lds
mov
not
and
sub
xchg
mov
push
popa
push
imul
add
dec
sbb
ret
pop
icebp
outsl
lock
iret
xchg
xchg
imul
cs
and
js,pt
xchg
push
ss
push
mov
xchg
shll
bound
bound
movsl
enter
and
out
cltd
add
jnp
jmp
fadds
and
dec
sbb
lcall
cs
dec
push
scas
mov
cmp
sahf
das
cmpsb
jne
push
lock
xchg
jecxz
add
push
xor
xor
add
adc
xor
sahf
dec
popf
loop
pop
sbb
and
cmp
dec
xchg
mov
mov
xchg
cmpsl
xchg
inc
add
inc
jg
sub
pop
cs
mov
sti
outsl
mov
xlat
call
ja
inc
xchg
jno
aas
hlt
sbb
arpl
hlt
dec
cli
jb
xor
dec
aaa
imul
or
cmp
lret
pop
stc
arpl
jl
mov
in
repz
loop
xor
sbb
jnp
outsl
ret
jns
jb
adc
mov
sbb
inc
xchg
cmpsl
mov
lds
xchg
xor
in
cmc
mov
push
test
inc
jmp
shll
pop
mov
jnp
lret
std
dec
push
int
jge
sbb
jns
imul
lahf
jns
dec
cmc
imul
lea
sahf
xchg
loop
cmc
or
ja
push
in
cmp
sbb
push
and
mov
dec
add
pop
nop
mov
sbb
test
dec
lock
cs
mov
out
xchg
sub
dec
aam
shlb
outsb
loop
mov
and
fcmovne
dec
xchg
loop
jns
push
add
cmp
push
das
mov
fwait
and
scas
mov
push
repnz
outsb
fmulp
add
mov
call
xchg
jge
or
mov
lcall
repnz
mov
dec
lea
mov
jne
adc
leave
dec
pop
adc
add
hlt
js
inc
mov
push
outsl
int
stc
pop
rorl
sub
adc
or
jb
push
add
jp
stos
or
push
adc
pop
cmpsl
icebp
add
out
mov
adc
dec
jmp
addr16
xor
imul
sub
and
inc
js,pn
insl
cmp
mov
je
stos
push
mov
cli
daa
out
pop
nop
mov
shlb
cmp
mov
sbb
sarb
xor
pop
sbb
mov
insb
cmp
xchg
sbb
mov
inc
pushf
arpl
test
cmp
popa
xor
cmp
cmpsb
lea
push
nop
stos
into
sahf
jb
xchg
repnz
popa
fcomps
mov
pop
enter
add
out
push
mov
cmp
in
cmp
cmp
ja
test
mov
sbb
popa
loopne
or
ja
negb
push
jbe
mov
or
add
or
inc
push
rdseed
mov
or
push
aaa
mov
addr16
pop
push
cmpsl
mov
and
addb
cmp
lret
jae
out
add
in
mov
mov
das
in
mov
xor
sbb
js
lds
add
enter
xchg
add
xor
adc
xchg
and
pop
fs
xor
push
ret
rorb
imul
in
mov
movsl
ret
sbb
cmc
xchg
mov
cmp
adcl
mov
cmp
insl
aas
adc
jmp
dec
test
roll
bound
jo
daa
jl
pop
ja
mov
popa
mov
mov
push
in
jg
lods
push
movsl
add
addl
inc
xorps
stc
imul
mov
cltd
pop
mov
out
jo
push
popa
lods
daa
add
push
in
cmp
mov
mov
jb
data16
cmpsl
cli
cld
cwtl
pop
clc
lods
in
add
sub
lock
pop
das
aaa
add
xchg
dec
dec
fsubrs
mov
jp
mov
cli
pop
sbb
push
mov
dec
mov
lcall
add
adc
icebp
push
and
cld
xor
or
movsl
leave
pushf
sahf
adc
icebp
test
inc
aaa
and
cmp
push
bound
dec
cmpsl
xchg
mov
repz
aaa
aam
pushf
mov
addr16
lret
mov
xor
xchg
xor
adc
das
loope
jns
add
pop
jle
mov
cmp
repz
mov
ret
fwait
add
imul
sbb
hlt
rorl
pop
or
dec
inc
xor
test
inc
cmp
pop
lret
cmpsl
mov
jp
out
jmp
shrl
jne
jmp
rcrl
sarl
lock
rcrb
bnd
xorl
call
sbb
rolb
pop
arpl
dec
imulb
subl
sti
int3
mov
pop
push
adc
ret
ss
cmpsb
movsl
incl
mov
or
ret
ljmp
addr16
repnz
repz
sub
ffree
dec
or
adc
mov
cltd
adc
jg
out
iret
mov
sti
outsl
stos
sub
mov
shrb
notl
mov
push
pop
leave
pop
mov
popa
stos
or
jne
sbb
movsb
push
xchg
int3
daa
divl
push
dec
repnz
xor
jl
rorb
pop
sar
movsb
jo
mov
xchg
mov
and
xchg
xchg
mov
int3
push
lret
out
rcll
mov
jg
sarb
mov
sbbb
jnp
mov
and
sub
shll
movsb
scas
lods
enter
lcall
cmp
pop
jno
imul
push
push
xchg
and
bound
adc
push
add
and
bound
in
push
jno
add
test
lret
insl
stos
xchg
iret
sbbl
adc
cltd
outsl
mov
sub
jg
orb
bound
fsubrs
jbe
jnp
sub
cmp
cmpsl
add
cwtl
in
jle
or
adc
xor
inc
push
and
xor
popf
push
or
xchg
xchg
sbb
xchg
push
sbb
fdivrs
je
jbe
loopne
stos
sub
sub
bound
mov
dec
inc
jmp
jge
xor
scas
outsb
push
adc
adc
cltd
mov
adc
push
xchg
in
out
xchg
iret
push
and
pop
ss
pushf
jecxz
dec
scas
call
rcl
sbb
inc
mov
jmp
fdivl
pop
repnz
xchg
fnstenv
out
inc
sbb
cmpsb
outsb
pop
jmp
or
stos
nop
stos
dec
insb
insb
inc
xor
mov
mov
inc
cmp
and
fisttpl
iret
mov
dec
mov
fmuls
es
add
in
add
lods
scas
stos
adc
sub
mov
fisubrl
mov
fs
mov
addb
add
push
xchg
clc
sbb
pushf
adc
ljmp
inc
xlat
xor
jg
aad
push
mov
inc
xchg
repnz
fisttpll
jb
xchg
popa
dec
gs
xchg
into
pop
cmp
adc
js
lret
mov
out
int
movsbl
and
inc
in
adc
or
in
jp
dec
insb
imul
ljmp
jnp
in
pop
push
adc
iret
cli
sbb
jmp
gs
push
adc
insb
jnp
mov
pop
or
xor
cmp
std
xchg
repz
cmc
xor
or
adc
enter
mov
jbe
int
mov
sti
nop
sbb
jle
loop
mov
add
xchg
lods
or
arpl
lock
movsb
mov
inc
fidivrl
adc
pop
xchg
sbb
fbstp
imul
push
movsl
int
cwtl
mov
xorl
pop
dec
or
xchg
in
in
movsb
outsb
jnp
movsb
sub
pushf
insl
jbe
xor
outsb
inc
inc
shlb
inc
mov
mov
push
sbb
out
loopne
dec
pop
cwtl
add
jle
or
incb
cmp
out
cmpsl
cmpsl
fwait
rep
dec
and
mov
pop
in
xor
dec
int
filds
adc
mov
xor
adc
out
scas
sbb
ret
sub
xlat
jne
mov
jp
js
xchg
cmpsb
ss
sub
jns
inc
mov
inc
outsb
adc
jns
dec
push
test
js
mov
idivl
sahf
xor
fwait
mov
push
aam
lods
mov
mov
shrb
insb
pusha
adc
nop
inc
xchg
shl
pop
mov
sub
daa
jl
daa
jbe
movsb
leave
or
push
into
sub
insl
inc
inc
stc
test
mov
sahf
lret
push
arpl
inc
int3
or
pop
stc
insl
and
ss
inc
or
dec
mov
xor
pop
mov
jnp
adc
pop
add
xlat
or
sbb
in
jp
bound
or
insl
xor
sbb
dec
stc
mov
fistl
cltd
cmp
cmc
xchg
arpl
div
lea
jnp
aam
aaa
push
dec
cmpb
shlb
int
fidivrl
mov
hlt
pop
pop
out
cmp
push
lea
xchg
mov
mov
inc
xorl
push
mov
mov
inc
jl
inc
cmpsl
adc
mov
stos
repnz
scas
std
dec
sbb
loop
sub
jbe
lods
or
lods
imul
or
lock
shll
int
or
xchg
les
mov
in
push
fs
mov
clc
stos
int3
into
inc
or
stos
movsl
sbb
fs
inc
sbb
in
mov
cmp
sbb
add
push
out
cmp
push
outsb
sub
jg
andl
repz
pop
cmpsb
push
lea
js
js
mov
xchg
pavgw
add
mov
ficoms
inc
lahf
mov
sarb
adc
shll
out
and
mov
mov
and
ror
cltd
repnz
jle
push
jl
das
scas
inc
adc
mov
xor
and
jnp
enter
stos
mov
test
mov
mov
bound
mov
mov
mov
pusha
dec
pop
aam
aad
jb
cmp
dec
mov
xor
in
addr16
mov
pop
stos
dec
xor
and
mov
jp
xor
in
pop
cmc
lods
iret
xchg
or
xchg
in
jp
pop
bound
push
test
sahf
sub
cmpsb
mov
lods
jl
dec
jge
mov
sahf
xlat
fdivrs
and
sbb
pop
xchg
insb
ja
gs
bound
adc
lods
xchg
xchg
stos
test
ret
or
jg
push
or
stos
adc
sbb
xchg
push
fistpl
rep
sbb
es
arpl
sbb
shll
xchg
push
imul
xor
jb
mov
push
xlat
lods
xor
mov
cmp
pop
push
ja
inc
mov
dec
mov
pop
sub
jmp
negb
sub
cmp
jo
sti
int3
add
inc
jmp
mov
hlt
insl
frstor
loope
pusha
dec
andb
scas
arpl
jae
dec
movsb
outsb
enter
lret
mov
xchg
movl
xchg
repnz
and
jg
push
stc
shll
mov
sbb
jmp
cld
stos
pop
cwtl
call
and
dec
push
mov
jge
sub
lret
inc
lods
aas
sti
sti
lds
daa
movsb
dec
pop
cli
stos
in
mov
or
jne
mov
push
out
mov
outsb
inc
mov
xor
push
xchg
adcl
fldenv
or
sub
loope
xchg
add
mov
mov
sbb
xchg
ds
mov
es
sarl
mov
ja
std
xchg
mov
or
in
jle
aad
add
pop
xchg
aad
mov
jp
fsubp
pop
test
xchg
test
iret
mov
adc
ss
enter
mov
mov
inc
jne
jbe
mov
mov
jl
pop
xor
xlat
mov
mov
push
add
stc
sbb
xlat
cwtl
movsb
lods
test
pop
and
div
pop
sub
jecxz
mov
orl
in
jle
in
dec
lods
aaa
adc
sbb
cmp
jo
jmp
dec
lahf
push
cmpl
sub
jp
js
popf
inc
cmpsb
sbb
out
adc
sbb
push
xchg
lcall
mov
jge
stos
jnp
shlb
pop
in
add
loop
inc
xchg
mov
lahf
out
outsb
lahf
inc
push
dec
in
test
ss
arpl
pop
pop
mov
xchg
fimuls
iret
inc
mov
xlat
out
xchg
loope
jl
mov
push
loop
sbbl
push
fwait
lods
add
sbb
cli
push
sbb
aad
mov
stc
sbb
lret
daa
lods
lcall
xchg
mov
adc
imul
dec
inc
dec
fs
outsl
jmp
xchg
fmulp
add
mov
inc
inc
adc
xor
mov
hlt
inc
out
add
or
push
mov
xlat
repz
push
cs
adc
bound
iret
ljmp
xor
mov
mov
sbb
in
dec
jnp
mov
jo
cmp
lea
add
or
ljmp
fidivl
inc
fcomps
outsl
sbb
cwtl
jl
icebp
mov
bnd
jge
mov
sub
loopne
mov
push
outsl
lds
movsl
sbb
push
sti
mov
jbe
lret
ror
clc
or
sbb
cmpb
inc
in
scas
cld
jecxz
adc
xchg
push
fldenv
sub
pushf
sbb
inc
and
bound
jmp
mov
mov
shl
cmpsl
stc
es
ret
in
testb
and
shrb
aas
andl
imul
mov
prefetchwt1
das
cltd
xlat
push
call
add
cmp
xchg
or
sub
inc
icebp
movsl
mov
popw
movsb
push
push
sub
dec
pop
add
mov
jne
xchg
mov
mov
outsb
adc
shrb
mov
push
loop
xor
inc
xchg
addr16
pop
mov
insb
mov
inc
ljmp
add
loopne
test
xchg
dec
push
push
cmp
jbe
add
push
mov
adc
sbb
adc
addl
mov
xchg
adc
mov
xor
call
icebp
dec
push
test
es
cmp
jnp
nop
in
loopne
mov
ss
jne
pop
mov
cmp
sub
and
inc
sub
fcomps
addr16
arpl
lea
mov
repz
push
out
and
adcl
sub
add
sbb
in
inc
movsl
lods
fimuls
mov
jns
mov
mov
test
leave
es
ljmp
int
mov
inc
aaa
jle
dec
js
sub
ljmp
dec
cmp
and
add
and
mov
add
cmp
pop
outsl
in
bound
xchg
mov
test
imul
movsl
xchg
mov
xchg
xor
mov
leave
pop
add
push
pop
out
clc
jp
dec
dec
sahf
cmp
sbb
sub
std
xchg
popf
mov
outsb
dec
mov
xchg
icebp
xor
gs
dec
push
or
mov
xor
push
scas
ret
xor
das
or
clc
loope
lret
hlt
sti
hlt
or
jl
inc
mov
add
cmpsl
sbb
lret
movsbl
es
cld
mov
add
adcl
test
mov
dec
adc
adc
mov
cltd
jle
outsl
imul
xor
arpl
sub
fmuls
pop
cmpb
test
cmp
aaa
jp
dec
ss
aam
mov
imul
aad
movsl
loop
scas
daa
push
call
rclb
daa
cmp
mov
mov
pop
inc
sub
mov
fisttps
lock
leave
jmp
call
inc
aam
cmpsb
push
cmp
cs
dec
dec
popf
pushf
cmp
lods
das
movsb
mov
aas
sub
subl
mov
pop
push
mov
add
cmp
loopne
adc
dec
mov
fs
insb
sub
xor
push
shrl
jbe
and
lock
fbstp
mov
shrl
popa
mov
mov
jns
into
mov
iret
test
jp
je
outsl
mov
push
mov
pop
and
out
icebp
lods
and
push
popf
sub
test
xchg
mov
in
xor
and
xorl
orl
outsb
jo
push
cmp
adc
mov
imul
and
or
daa
add
push
nop
das
and
sub
shlb
add
imul
inc
inc
mov
add
cmp
into
or
out
mov
shlb
push
lods
adc
addr16
cs
addr16
adc
pop
mov
mov
ljmp
pop
sub
inc
ret
pop
outsb
pop
or
call
out
sub
outsl
mov
lret
cwtl
sub
stc
enter
loope
and
push
dec
adc
mov
mov
aad
push
test
xor
jge
lods
cmpsl
lret
adc
adc
pop
in
pop
dec
dec
inc
ds
ss
xlat
and
in
lods
mov
pop
mov
fucompp
bound
pop
jge
loop
cmc
mov
jge
imul
nop
mov
iret
pop
dec
arpl
push
jp
or
push
rorb
push
das
gs
lods
inc
cmpsl
mov
ljmp
xchg
cmpsb
mov
adc
pop
pop
push
shl
and
les
sub
add
test
jge
pop
or
ja
mov
push
fildll
sub
test
std
and
jge
test
push
mov
mov
ret
int3
fucomp
daa
js
mov
sbb
lds
jns
xchg
lods
sub
test
loope
popf
outsb
aaa
daa
xor
adc
and
out
sub
shlb
mov
push
sbb
and
shrb
push
dec
jle
sbb
fmull
aam
pop
xchg
push
in
inc
push
in
call
mov
pushf
jp
adc
pop
xor
push
clc
mov
cmc
xchg
lea
lods
mov
enter
mov
mov
in
and
mov
and
mov
pusha
push
jns
jg
mov
sbbb
dec
je
adc
pop
jp
stc
jl
int3
jcxz
push
xchg
xlat
sahf
outsl
adc
or
mov
cmpsb
push
das
inc
insb
les
or
hlt
push
and
adc
mov
ror
daa
jbe
lahf
xor
loope
in
je
cmp
mov
mov
inc
lods
ljmp
jne
or
out
dec
sbb
int
pop
jp
inc
mov
mov
xor
ja
ds
jp
imul
fwait
mov
push
imul
mov
pop
push
mov
or
in
mov
add
pop
and
mov
add
cmp
lds
inc
xchg
packuswb
test
xchg
outsb
mov
aaa
cwtl
cmc
adc
cmc
cwtl
xlat
mov
add
add
pusha
enter
mov
xorl
repnz
mov
movsb
dec
jmp
xchg
or
push
fsts
aaa
in
push
lods
mov
adc
scas
test
pop
sub
sbb
pop
rorl
mov
mov
cmp
pop
pusha
inc
mov
ds
arpl
shrb
hlt
sub
not
sbb
mov
mov
es
lods
daa
jnp
je
cmpsb
jnp
xor
cmp
add
adc
in
sti
mov
mov
insl
orb
cmp
push
pop
in
dec
test
sti
or
sbb
stos
mov
add
stc
dec
pushl
inc
rorl
fadds
test
and
cmp
inc
lods
and
stc
outsb
test
push
xchg
cmp
or
sbb
pushf
jl
cld
sub
mov
xchg
mov
int3
or
mov
adc
xchg
std
dec
std
loop
pop
jae
shrl
ds
jb
outsb
jmp
push
and
fwait
iret
dec
mov
fwait
push
pop
in
xchg
push
lods
outsb
sbb
enter
popa
add
inc
fsubs
xor
lret
mov
addr16
jle
sub
and
jb
mov
les
mov
push
pop
cmpsl
mov
jg
lds
fisttpl
jmp
in
bound
push
repz
xchg
jmp
xor
inc
xlat
popa
cld
dec
and
jecxz
std
jae
push
jge
mov
dec
dec
inc
or
add
mov
jae
addr16
add
outsb
movsb
cmc
insl
insl
push
inc
push
cld
popf
xlat
mov
cmp
jbe
or
cmp
sbb
in
jl
jae
sti
in
aad
clc
inc
fstpt
in
mov
fbstp
inc
xchg
fldcw
iret
push
repnz
jmp
push
test
inc
push
push
jg
int
dec
xorl
imul
in
shr
mov
movsb
insl
js
clc
shlb
adc
out
xchg
shl
imul
arpl
lock
loope
out
inc
pop
cs
jbe
dec
jne
mov
daa
bound
inc
out
subl
call
push
gs
stos
std
roll
add
inc
les
push
jbe
fmull
mov
mov
jl
inc
das
in
jmp
pop
or
arpl
xor
xor
mov
test
js
xchg
movsl
repz
popa
xor
hlt
or
xchg
in
pop
das
ret
add
repnz
dec
adcb
xor
xchg
pushf
inc
mov
xchg
sbb
daa
into
push
into
mov
cmp
pusha
sbb
sub
adc
mov
cli
pop
push
outsb
out
aaa
push
mov
mull
int
pusha
ret
push
jae
ss
gs
scas
lret
mov
jnp
mov
sub
jo
sbb
sbb
dec
mov
mov
push
xchg
jp
out
mov
dec
jbe
cmpsb
cmpb
add
int3
cmp
gs
pop
add
pop
jle
mov
insl
out
mov
arpl
test
pop
mov
cmpsb
lcall
movsb
adc
mov
mov
sbb
dec
insl
pop
push
and
cmpsl
sbb
out
cmp
xchg
mov
jle
or
ja
outsl
int
mov
ja
je
jno
dec
lods
pop
inc
pop
inc
imul
mov
pop
lret
rcll
imul
addr16
pop
ss
ret
lods
lret
or
jmp
sub
mov
mov
mov
jne
lret
icebp
in
mov
fldcw
sub
jmp
cmp
das
movsb
xchg
add
xor
dec
insl
mov
out
popa
shrb
gs
add
movsl
sahf
popa
jge
xor
inc
adc
and
insb
mov
aaa
pushf
pop
in
fisubs
cld
stc
ss
popf
dec
imul
dec
pop
push
scas
cmpl
cmpb
daa
popa
push
outsl
mov
fbstp
inc
xchg
jg
and
pop
pop
inc
popa
ret
jmp
mov
pushf
testb
data16
jns
loope
xchg
mov
pop
or
dec
sbb
cmp
scas
push
arpl
pop
loope
ss
popa
xor
cmpsb
cmp
imul
jp
dec
movsb
mov
mov
xorb
mov
xchg
sbb
cmp
lret
lds
test
fwait
add
add
xor
dec
push
pushf
mov
inc
mov
addr16
mov
sbb
popa
not
push
mov
sub
pop
pop
js
or
mov
jge
addr16
jb
ret
mov
sbb
mov
sarl
int3
cmpsb
call
xor
push
loopne
pushl
loope
push
mov
mov
inc
mov
popa
repnz
mov
jl
cmp
cltd
sub
mov
lret
cmp
aad
xchg
cmpsl
loop
lret
arpl
cmp
daa
xchg
pop
pusha
loope
dec
mov
xor
pop
push
cmp
adc
inc
ret
sbb
fsubrs
arpl
iret
mov
orl
movsb
fisubs
jae
mov
and
leave
imul
push
bound
mov
dec
mov
std
push
xchg
pop
dec
out
js
cli
push
sarb
sbb
cmp
mov
mov
cmp
icebp
es
cmp
je
or
and
mov
jle
jp
and
stc
dec
dec
add
and
scas
jnp
test
outsb
repnz
insl
dec
out
jbe
sub
mov
mov
or
cmpl
fnstsw
sub
js
in
int
ja
out
or
ficomps
jae
fcoms
dec
pop
and
scas
imull
sbb
mov
stc
add
xchg
stos
push
or
cmp
jg
in
or
mov
and
popa
mov
ret
cmpsl
jle
sar
jge
and
leave
sbb
clc
pop
rclb
mov
daa
lods
dec
repnz
jmp
sub
jne
xor
xchg
lea
add
inc
loop
out
test
cmp
cmpsb
cmp
jne
insb
ljmp
gs
jl
and
mov
pushf
adcb
adc
sub
sbb
outsl
dec
mov
mov
inc
int3
mov
push
arpl
inc
aas
mov
fs
lds
clc
push
pop
icebp
cmpsl
jp
jnp
mov
into
sub
rorl
pop
cmp
std
dec
sbb
enter
pop
js
jb
mov
pop
ss
shrb
xchg
out
xchg
adc
or
xlat
pop
popf
sti
cmp
xor
mov
loope
jb
jmp
mov
mov
cmc
loopne
lds
xor
jb
push
pop
and
mov
and
lods
push
push
test
push
inc
outsb
ja
mov
insb
jl
ljmp
int3
adc
icebp
pop
stc
push
insb
jg
mov
push
pop
push
dec
imul
pop
mov
inc
aam
pop
sbb
or
stc
imul
lret
mov
xor
repz
xor
push
xchg
ret
xor
out
insb
popa
or
push
jae
and
js
push
dec
stc
outsb
push
imul
push
sbb
insl
cmp
imul
mov
xor
fcoms
and
out
mov
mov
pop
adc
inc
addr16
scas
cmp
lret
in
push
mov
add
push
lods
mov
mov
es
test
fs
mov
push
pop
jle
push
sub
mov
and
sarb
push
pop
push
movsb
inc
int3
jo
push
xchg
cli
sub
mov
mov
enter
xchg
sbb
mov
dec
and
sub
pop
sub
cmc
gs
imulb
ret
jl
jno
aaa
sbb
aam
push
jae
push
mov
adc
jno
cmp
push
dec
lret
inc
push
or
outsl
int
jg
cmc
adc
das
addr16
cld
imul
inc
adc
jno
push
fnstenv
cmp
mov
lcall
sbb
shr
dec
popl
enter
xor
jecxz
clc
mov
lahf
mov
sbb
xor
lock
push
dec
sbb
mov
int
cli
cmc
adc
pusha
shlb
leave
sub
add
das
inc
inc
cmpsl
pop
sub
mov
jns
jne
rclb
or
shll
xchg
pop
cwtl
cmp
in
add
nop
subl
mov
sub
pop
bound
or
je
lea
mov
pop
jno
pusha
in
adc
and
popa
subl
dec
sub
iret
scas
xchg
push
dec
mov
fimull
xchg
ja
iret
or
fidivrs
and
or
inc
inc
and
in
fwait
popa
sub
incl
out
scas
outsb
mov
cmpsb
jne
adc
inc
hlt
sub
cmp
aad
imul
daa
pop
xchg
in
test
xchg
insb
andl
pop
aas
mov
jb
icebp
mov
dec
aad
gs
cmp
push
imul
sbb
or
xchg
lock
notb
mov
fcoml
push
xor
bound
rolb
clc
ret
xorl
sub
out
outsb
dec
ret
outsb
mov
mov
je
mov
das
cltd
inc
dec
rcrb
inc
mov
call
stos
xor
jbe
cmp
or
je
and
inc
xchg
add
adc
pop
imul
sbb
jge
xchg
lods
jns
imulb
mov
inc
cmp
push
mov
cmp
popf
inc
mov
stos
push
push
mov
das
bound
nop
push
and
adc
insl
and
mov
mov
ficompl
push
addr16
and
loop
inc
xor
xchg
add
iret
xchg
arpl
sti
popf
stos
lods
mov
cmp
push
sbb
aaa
xchg
xchg
adc
sbbb
repnz
out
xchg
sbb
cmp
das
cmpsb
cmpsl
inc
pop
fistl
lods
addl
mov
ds
push
dec
fmulp
adc
mov
outsl
ja
push
cwtl
jp
scas
popl
jno
xlat
cltd
jns
inc
fwait
jl
inc
call
insl
cmpsb
jno
add
ja
out
pop
xchg
daa
jae
sbb
inc
cmp
repz
aas
addr16
scas
loope
repz
lods
daa
inc
xchg
sub
cmp
inc
pop
cmp
jmp
repnz
dec
enter
pop
jl
push
sub
es
add
in
inc
inc
xchg
or
mov
pop
add
int3
inc
into
adc
jecxz
dec
aam
xor
sbb
aaa
mov
adc
mov
push
mov
sbb
mov
into
imul
imul
pop
mov
fucomp
shrl
mov
cli
pop
pop
je
cmpsl
iret
and
dec
jmp
mov
test
movsb
enter
xor
in
es
stos
add
and
pusha
mov
sarl
adc
mov
push
pushf
or
pop
imul
cmp
push
out
mov
mov
fstps
cltd
and
push
add
and
dec
xchg
stc
ret
pop
cmpl
jl
ljmp
and
pcmpgtw
pop
dec
jo
incl
and
out
mov
cmovle
push
jb
jp
les
es
pop
test
nop
mov
add
jnp
int3
sub
test
out
mov
mov
lods
and
mov
xchg
pop
rclb
xchg
inc
mov
movsb
mov
adc
retw
inc
loopne
lcall
mov
out
mov
int
and
jno
jb
dec
pop
adc
sahf
stc
cli
adc
add
add
movsl
and
xor
test
cli
subl
aam
xorb
adcl
movsl
jmp
jbe
jae
outsl
out
pop
test
xor
jmp
jb
or
daa
add
das
dec
pop
pop
shll
shlb
sbb
mov
out
out
push
divb
dec
mov
test
adc
sbb
lods
xchg
adc
pop
cld
sub
gs
xor
xor
push
jle
cmp
add
shr
dec
ret
or
in
or
insb
mov
mov
loopne
in
int3
or
imul
ljmp
out
adc
push
outsl
bound
aaa
test
bound
jmp
adcb
cmpsb
lret
pop
or
mov
pop
cmp
sahf
or
push
adcb
nop
in
adc
mov
mov
test
xchg
pop
xor
dec
cli
pop
into
add
test
pushf
inc
ss
push
and
push
mov
pop
aam
scas
push
test
sub
dec
xor
aam
fwait
sub
push
xchg
sub
sub
push
mov
xchg
mov
repnz
xchg
sbb
dec
pop
movsb
lea
pusha
or
cmpsl
cmpsb
adc
jbe
dec
push
cmpsb
push
addr16
stc
cmpsl
arpl
dec
ljmp
lods
dec
dec
and
aam
fidivs
lcall
popf
jge
lahf
cmp
sbb
lds
scas
xlat
ja
and
mov
pop
jmp
dec
cmp
sahf
mov
sub
mov
xchg
js
mov
in
mov
lcall
pusha
xor
mul
lret
pop
mov
push
mov
add
and
sub
fst
pop
sbb
lea
inc
roll
mov
je
out
adc
mov
jmp
pop
cmp
cli
jl
cmp
dec
repz
jp
inc
xchg
push
xchg
int
cmpsb
aam
mov
pop
inc
nop
addr16
add
and
xchg
jb
xchg
sub
sub
mov
hlt
cmp
push
jb
jecxz
xlat
mov
pop
mov
xlat
and
add
nop
mov
test
mov
inc
adc
adc
pop
push
fs
addr16
pop
bound
in
call
dec
fstpt
xchg
mov
stc
push
pop
sub
ja
pop
dec
lock
pop
xchg
push
lret
std
sahf
data16
sub
xor
pop
jle
jp
jnp
cmp
mov
sub
mov
test
inc
jmp
shlb
daa
jno
clc
rol
or
xor
insb
scas
add
out
js
pop
mov
test
ja
jnp
ror
rorl
cmp
jmp
pop
push
out
pop
das
xlat
orb
out
call
dec
or
pop
jns
dec
dec
xchg
pushf
inc
repnz
push
sti
xor
xchg
push
mov
in
les
sbbl
clc
adc
loopne
loop
adc
ret
inc
stos
cmp
andl
cmp
cmp
rolb
xlat
mov
jbe
adcb
pop
leave
xchg
je
jle
test
cltd
dec
dec
dec
mov
cmp
fadds
outsb
cmc
ds
sbb
dec
inc
adc
daa
and
mov
pop
pop
jne
xchg
incb
pop
das
out
adc
addr16
push
mov
xor
mov
jae
ss
loop
data16
mov
sbb
lods
mov
adc
pop
out
adc
negl
mov
fisttps
std
inc
or
cmp
push
lcall
adc
stos
push
cmp
and
inc
mov
testb
fwait
rcrl
mov
dec
cwtl
sarl
pop
jae
mov
push
outsb
imul
push
and
in
add
mov
das
sub
mov
ds
xchg
push
xorb
xchg
mov
lahf
lahf
mov
rorb
or
movsb
jae
js
inc
mov
add
push
je
popa
imul
into
test
cmc
rcrl
sbb
xchg
mov
cmp
sbb
pop
nop
lock
push
enter
xor
dec
pop
mov
gs
sub
dec
test
int3
lret
sub
add
scas
inc
jb
out
pop
fidivrl
shlb
mov
sub
mov
xchg
lsl
cmpsb
xchg
dec
or
pop
dec
sub
icebp
arpl
pop
mov
push
cs
ret
cmpsb
addr16
nop
aam
pop
arpl
je
xchg
mov
add
push
jb
pop
inc
jg
push
popf
mov
mov
sarb
inc
jnp
loope
mov
jb
mov
into
inc
sub
sti
inc
xchg
loope
dec
add
cmp
mov
mov
and
cmp
xchg
jl
pop
clc
aad
and
push
xchg
jg
pop
push
sub
push
sub
stos
mov
xor
inc
sub
into
mov
dec
ret
xlat
rcrl
xlat
mov
xor
mov
mov
mov
xor
push
rol
mov
pop
adc
mov
xchg
mov
jns
icebp
and
into
test
xor
cmp
outsl
ja
and
and
jl
mov
int3
add
test
pop
mov
inc
out
sub
ss
sbb
dec
adcl
xchg
cmpsb
jecxz
xchg
inc
mov
add
mov
aad
push
enter
lea
aaa
inc
dec
dec
test
sub
daa
popa
mov
sub
push
sar
dec
pusha
xor
movsb
scas
or
jecxz
decb
jmp
shr
loopne
sub
and
push
jae
dec
mov
jb
mov
cli
in
inc
jp,pn
out
test
jp
dec
shll
jmp
fwait
push
stos
hlt
mov
ljmp
dec
cmpsl
imul
push
int
aaa
or
inc
gs
sbb
sub
insb
xchg
cmp
mov
jb
and
sub
mov
test
jae
hlt
mov
jle
push
loope
pop
mov
stos
imull
cmpsb
lds
sbb
jecxz
inc
jae
adc
fsubl
mov
bound
jg
jecxz
xor
mov
int
ljmp
mov
repnz
mov
lahf
xchg
dec
xlat
out
testl
insb
sub
in
xor
xchg
test
aam
das
push
cmp
sti
je
ljmpw
push
dec
dec
or
mov
int3
mov
push
and
dec
push
jb
mov
xchg
popa
cli
jge
bound
outsb
fldl
xchg
mov
xchg
frstor
dec
jno
aaa
inc
test
int3
addr16
jmp
pop
jecxz
jp
add
fcmovne
lods
dec
push
stc
pushf
mov
sub
scas
bnd
add
xchg
inc
incl
push
inc
pop
frstor
je
popa
pop
lcall
loopne
ja
mov
pop
mov
mov
test
mov
inc
sbb
jnp
mov
leave
or
imul
fbld
jl
xor
jp
jle
outsb
stos
shll
ret
or
inc
push
xchg
out
inc
aaa
jae
pop
cmp
in
ss
push
int
adc
pop
xchg
adc
push
fs
xlat
pop
or
fmuls
out
into
mov
jnp
imul
and
jns
daa
into
shlb
inc
jns
dec
call
pop
daa
mov
arpl
jmp
scas
cmp
jmp
push
dec
push
in
jno,pt
mov
pop
jg
test
popf
stc
xor
pusha
xor
mov
std
sbb
adc
out
ljmp
or
cmc
and
dec
adc
outsb
sti
lods
leave
sub
flds
pop
xchg
loopne
cwtl
mov
popf
inc
mov
or
mov
adc
mov
jno
sbb
iret
insl
cltd
ds
sbb
pushf
inc
sub
xor
cmp
pop
out
xchg
fnstsw
or
popf
test
cmp
fcompl
repz
lea
xor
arpl
out
xchg
js
ja
mov
adc
push
xchg
mov
popw
ja
test
inc
add
cmp
out
and
int3
aad
inc
out
mov
push
inc
shll
cmpsb
jns
dec
pusha
fbld
bound
or
xlat
stos
pop
popa
mov
dec
shrb
sahf
add
sub
in
ret
cltd
sahf
fsubs
in
adc
enter
cmp
xor
test
pop
mov
pop
sbb
cmp
cmp
mov
in
bound
inc
es
cmp
add
push
mov
xor
xor
dec
into
mov
jbe
inc
test
out
sub
jg
ret
test
push
or
aad
mov
out
push
xchg
outsl
arpl
jmp
lahf
adcl
int3
ss
adcb
rolb
mov
and
addr16
mov
dec
int
dec
xor
sarb
int3
stc
test
mov
and
pop
pop
jecxz
nop
cvtdq2ps
sbb
movsb
inc
aas
aaa
pop
pop
inc
outsl
push
jne
imul
xchg
xor
nop
js
dec
xor
adc
fwait
push
adc
popf
movsl
cli
push
add
pop
ss
adc
subb
cmp
jmp
pushf
mov
jge
mov
inc
scas
dec
mov
stos
outsl
push
sub
fstpl
dec
sub
inc
testl
out
fsubrl
cmp
sub
test
and
mov
call
add
outsb
addb
mov
imul
into
push
sbb
loope
jo
cmp
outsb
inc
rorb
xor
enter
in
std
xor
dec
inc
outsl
sbb
xchg
and
imul
jne
add
lret
aam
pop
mov
add
push
mov
jg
dec
push
jnp
jo
push
repz
cmp
stc
or
mov
pop
xlat
add
pop
xchg
inc
mov
outsl
and
mov
or
scas
add
mov
lret
popf
add
hlt
jno
or
fldenv
sbb
adc
add
and
pushf
pusha
mov
inc
inc
fs
dec
outsl
mov
stos
cmp
xchg
xor
sub
push
and
adc
gs
scas
push
hlt
cmp
dec
inc
inc
push
das
hlt
xor
or
pop
dec
insl
push
outsl
pop
sub
pop
into
cmp
jecxz
jmp
fdivl
cwtl
push
call
sub
push
pop
push
inc
add
addr16
cltd
jnp
and
test
int
push
add
fwait
lea
sahf
test
or
dec
jo
subb
rcll
fs
mov
fwait
lods
jg,pn
je
jge
icebp
cmpsb
pusha
outsb
push
jne
mov
sbb
enter
mov
push
dec
xchg
stos
mov
sub
push
test
jg
dec
mov
mov
sub
stc
fs
jmp
cmp
fimull
das
xor
lea
dec
xrstors
push
in
or
sbb
je
stos
lods
outsb
cld
fildll
mov
sub
pop
dec
push
or
mov
push
jg
fidivrl
push
dec
ret
adc
pop
fstps
sub
add
mov
insb
orl
xor
roll
jp
es
push
jns
lock
popa
dec
daa
outsl
mov
imul
push
push
movsb
mov
push
and
cmp
and
cmp
mov
add
cld
lods
popf
sub
lods
data16
xor
fistl
hlt
js
insl
pushf
test
push
cmp
imul
lret
push
rdtsc
inc
mov
jb
imul
mov
inc
fmulp
lods
cmp
nop
aas
sahf
pusha
insb
movsb
js
std
icebp
cltd
es
add
adc
cmpsb
and
sub
cltd
jae
mov
out
andb
add
mov
test
add
cwtl
sbb
dec
adcl
adc
mov
in
jb
mov
cmp
and
fcoms
mov
sbb
cmp
sub
sbb
loopne
js
and
inc
add
push
inc
xchg
jmp
sbb
or
jnp
xlat
lret
wbinvd
testb
sti
jbe
arpl
lret
js
outsb
mov
scas
sbb
push
and
cltd
inc
repz
aas
cmpsl
pop
mov
mov
popa
push
into
into
fimull
xor
dec
mov
orl
movsl
fildll
add
dec
pop
jge
aad
fidivrs
xchg
sub
cli
jp
and
pop
push
push
lcall
inc
pop
lods
pop
or
mov
popa
push
inc
loope
push
mov
loopne
ljmp
inc
scas
pop
and
jns
adc
xor
push
mov
mov
mov
pop
pop
add
xchg
xor
mov
sbb
out
ja
xchg
xchg
repnz
aad
dec
dec
adc
xlat
sti
push
mov
inc
js
and
popa
ficoml
cltd
iret
xor
xchg
iret
cmpsb
out
push
int
and
into
nop
dec
hlt
adc
lods
daa
in
jne
bnd
stc
cmc
mov
cld
push
mov
daa
dec
dec
or
movsl
and
push
scas
adc
ja
cmp
sti
scas
test
cmp
jp
pop
hlt
and
jle
gs
pop
out
push
mov
fildll
inc
pop
insl
sahf
loopne
mov
mov
test
cmp
jmp
mov
xchg
inc
data16
loopne
sub
adc
aas
nop
jns
inc
mov
pop
xor
cmp
mov
or
mov
mov
sbb
xchg
shlb
sub
mov
fs
pusha
imul
imul
push
mov
cmp
xlat
out
adc
xchg
xor
in
cmp
addr16
inc
mov
sub
pop
cmc
inc
jnp
mov
or
repz
jae
ja
fidivs
sbb
sub
jecxz
dec
decb
lods
xlat
pop
mov
push
cld
inc
cwtl
hlt
repnz
push
cmp
inc
sbb
call
or
cmp
daa
jnp
and
add
jl
sti
sbb
lock
in
mov
pop
bnd
add
sub
xor
scas
mov
loopne
aad
sub
ret
in
daa
popf
aam
sub
mov
cmp
add
dec
mov
ds
out
jbe
outsb
mov
clc
xor
hlt
aas
daa
aad
cli
cmpsb
shl
dec
jae
adc
mov
data16
inc
dec
push
loop
push
outsb
popa
lret
mov
jae
outsl
mov
xchg
push
add
sub
gs
loopne
inc
imul
insl
sbb
imul
outsb
cs
xor
push
aaa
rcll
or
fs
leave
jns
push
jecxz
xchg
dec
repz
arpl
mov
dec
push
lods
mov
add
mov
cwtl
dec
testb
and
mov
push
bound
xor
xchg
cmp
imul
adc
ret
movsl
repz
and
add
xchg
sbb
shll
jge
and
daa
rcll
test
push
dec
rcl
dec
sarl
mov
mov
je
adc
mov
mov
pop
imul
enter
mov
jmp
jbe
dec
cmp
out
mov
ljmp
loopne,pt
xchg
scas
jbe
push
cmp
xor
push
pop
ja
movaps
adc
testb
cltd
sbb
test
cwtl
or
out
mov
sub
dec
lahf
sbb
cld
inc
out
cmpsl
xchg
xchg
sahf
or
dec
scas
and
mov
les
add
divb
orl
ja
stos
mov
ret
pop
cmp
outsl
cmpsb
test
add
out
jg
shrb
mov
test
aam
inc
sbb
adc
pop
outsl
sub
daa
push
mov
mov
mov
aam
dec
outsb
xor
push
pop
das
jo
jge
repnz
in
out
jecxz
movsb
pop
add
xor
push
outsl
notl
or
nop
mov
jns
fildll
fcoml
inc
sbb
mov
imul
mov
or
sub
cmpl
mov
imul
loopne
repnz
loop
mov
aaa
cmp
cmc
mov
cwtl
mov
mov
sbb
ss
cmc
sub
das
nop
pop
mov
aas
out
lret
scas
mov
dec
mov
ficomps
mov
adc
inc
test
jge
sbb
or
adc
mov
aaa
pop
les
xor
xor
jno
sbb
sub
push
loopne
or
cltd
ljmp
xchg
mov
pushf
and
and
out
inc
dec
and
pop
push
xchg
sbb
sub
cmp
lods
in
xor
cmp
push
or
xor
das
movsb
push
stos
lret
and
sub
nop
inc
add
sub
add
xchg
aas
test
inc
loop
outsl
imul
cld
ss
dec
stos
popa
xor
in
sti
outsb
movb
cmp
jno
mov
sbb
in
fisubrs
sbb
js
lret
leave
mov
mov
fdiv
pop
repnz
mov
leave
mov
pusha
loope
lret
pop
xchg
pop
mov
mov
add
hlt
xor
mov
dec
call
jo
imul
push
inc
or
and
mov
imul
cmp
in
adc
ficomps
jae
dec
adc
les
mov
out
ror
add
mov
push
or
jl
add
dec
mov
out
cmp
call
popa
jl
rolb
push
cmpb
mov
aaa
mov
and
inc
ror
movsb
scas
insb
or
push
lds
sub
pop
xchg
jnp
movsb
sub
sub
addr16
cli
xor
insl
insb
push
lock
mov
push
jp
fimuls
imul
fs
cltd
daa
ja
pop
xchg
hlt
into
repz
movsb
mov
mov
push
xor
sbb
loop
jae
cmp
mov
cmpb
aam
pop
dec
les
test
je
lods
mov
add
jne
mov
cmpsl
push
fadds
xor
jb
je
pop
xor
mov
add
mov
dec
sarl
mov
pushf
xchg
add
or
daa
out
in
pushf
push
ljmp
sahf
xchg
hlt
iret
shrb
xor
stos
lods
add
jge
stos
mov
mov
pop
fildll
leave
cmpsl
stos
lret
dec
pop
lods
push
jp
movsb
pop
int3
lcall
cmp
flds
and
lcall
outsb
es
jle
mov
mov
loopne
or
push
ja
or
xor
and
adc
cmc
loope
rcrb
push
lods
dec
cmp
xchg
lcall
inc
ret
xor
push
jmp
sub
cmp
mov
mov
jae
mov
xchg
jae,pn
out
ret
or
mov
mov
and
sub
dec
subb
leave
int3
out
xchg
xor
fsubrl
cmp
jbe
or
or
je
xor
or
cli
jbe
pop
jge,pn
nopl
mov
sbb
iret
in
and
sub
in
add
cmpsl
cs
xchg
jp
andb
arpl
rolb
sbb
sbb
pop
mov
sub
and
cwtl
ficoml
pop
mov
fisubrs
pop
dec
mov
xchg
and
adc
mov
dec
or
cmp
insb
cmpsb
push
ljmp
movsb
xor
js
mov
mov
cli
cld
loope
aas
ficoms
mov
inc
and
or
sub
pop
mov
adc
cld
negb
js
mov
dec
or
imul
imul
mov
push
pop
scas
rcl
inc
clc
loop
xchg
mov
in
dec
dec
enter
jne
aas
mov
dec
shll
mov
cmpsb
mov
movsb
inc
pop
jmp
mov
push
fwait
cmp
bound
xor
mov
call
test
push
fwait
and
stos
mov
adc
mov
push
cmp
dec
pop
or
nop
xchg
dec
data16
je
call
dec
scas
xchg
push
pusha
cmp
scas
push
mov
pop
adc
cmp
adc
add
sub
xchg
mov
in
out
loope
in
rcll
mov
cmpsl
inc
mov
rcll
icebp
stos
inc
dec
pop
popf
shrd
add
out
pop
push
test
cmpb
jb
in
call
in
bnd
jo
daa
xchg
sti
ret
ja
inc
sti
inc
and
add
orl
aam
add
sbb
mov
repnz
in
push
pop
jo
aad
out
lds
js
inc
add
mov
fwait
loopne
int
movsl
rcr
stos
inc
lret
dec
push
pop
rolb
out
xor
push
test
cld
push
lret
pop
test
stc
lret
xchg
mov
xchg
add
pop
xchg
cmp
jno
jno
movsb
adc
jb
xchg
insb
jnp
pop
jg
sbb
jg
add
dec
outsb
cmpsb
test
mov
aas
insl
fwait
xchg
sti
jmp
addl
jmp
pop
mov
or
inc
push
in
int3
sub
test
lock
mov
pop
or
ret
fs
out
fs
adc
add
jl
imulb
cmp
in
test
or
pop
jbe
cmp
lahf
adc
test
xchg
sbb
xor
mov
xacquire
int
xchg
adc
sub
rcll
outsb
adc
and
clc
pop
dec
mov
push
push
enter
aam
jno
jb
adc
in
sbb
xchg
stos
pushf
js
daa
mov
fbstp
add
adc
push
fcoml
lods
xchg
test
xor
or
xchg
stc
lods
mov
jae
cmp
cwtl
pop
inc
jno
xor
inc
movsl
cmp
scas
imul
fisubrs
test
inc
xchg
jle
lds
mov
or
popa
pop
add
cli
jp
dec
lds
ret
pop
cmpsl
adc
adc
fiaddl
std
jno
xchg
clc
dec
arpl
pusha
add
add
std
pop
in
pop
lahf
pop
jae
jb
jl
xor
jge
repnz
inc
push
push
mov
iret
mov
inc
adc
cmp
cmp
loopne
pop
test
stos
arpl
int
push
mov
jnp
daa
inc
in
pop
aam
add
ss
xchg
xor
mov
popf
lock
push
sbb
pop
mov
in
out
jo
imul
cmpsl
cmp
mov
mov
sbb
sub
std
mov
rcrl
outsb
sbb
adc
aam
test
and
and
adc
pop
xor
jnp
jb
jbe
xor
push
das
xchg
jl
cmc
in
and
aad
lock
jl
movsl
jmp
mov
aaa
and
mov
jae
add
cmc
sti
sub
or
xchg
in
jmp
cmp
daa
in
adc
rclb
in
movsl
dec
mov
or
xor
xor
in
mov
dec
sahf
cmp
lahf
imul
xchg
mov
ja
or
jae
or
xchg
pop
aas
jbe
fdivp
xchg
mov
testl
mov
test
xchg
jae
mov
int
gs
mov
addr16
stos
faddp
fimuls
test
mov
cs
fsub
bound
aad
movsl
into
cli
jne
aaa
pop
add
mov
je
mov
sub
dec
nop
popf
dec
enter
xchg
shr
imul
push
cmp
mov
sti
outsl
sbb
arpl
pop
ss
arpl
mov
inc
data16
dec
imul
addr16
mov
mov
pop
inc
push
adc
jl
mov
inc
jmp
mov
shrb
jge
mov
xor
xchg
fisttpl
mov
sub
push
pop
out
lods
out
andl
sub
cld
dec
cmp
pop
inc
pushf
mov
mov
rcrl
imul
out
mov
add
daa
mov
out
jge
daa
inc
fistpl
stc
or
imul
mov
sub
inc
out
es
dec
fldl
data16
popa
add
push
and
lea
inc
push
js
in
clc
je
loope
clc
outsl
scas
pop
pop
mov
movsb
push
aad
jp
pop
mov
mov
inc
mov
outsl
cmp
adc
sbb
loope
mov
inc
or
mov
mov
adcb
cmpsb
and
lods
xchg
cmpsl
cs
mov
je
jno
sub
stc
push
xchg
mov
xchg
sti
dec
mov
scas
jecxz
fadds
sub
sahf
dec
push
dec
sub
or
pop
cmp
movsb
push
stc
pop
scas
dec
mov
adc
pushf
inc
pop
xor
mov
xor
xor
pop
mov
imul
mov
add
sbb
in
cmc
addr16
pop
push
addr16
aaa
add
adc
jae
pop
bound
movsb
shl
int3
into
adc
cmp
push
je
and
pusha
inc
dec
mov
aam
imul
mov
lea
push
popa
frstor
test
rcll
jl
add
movsbl
mov
sbb
mov
hlt
mov
and
adc
lret
pop
movsb
inc
cmpsl
fwait
jl
jbe
stc
test
cmpsl
sub
xchg
dec
aaa
imul
daa
pushf
xchg
sub
fbstp
ss
mov
inc
sub
ret
aam
pop
int3
test
out
mov
ja
and
mov
or
lods
push
cmpl
inc
leave
repnz
shl
loope
sbb
push
push
insb
pushf
mov
push
lock
pop
cmp
popf
aam
adc
out
dec
push
adc
xchg
or
fabs
lds
hlt
imul
push
sub
or
adc
adc
xchg
push
int3
sbb
adc
push
sbb
or
jno
dec
cmpsb
mov
shll
scas
shl
pop
sub
outsl
cltd
ss
or
dec
jo
pop
in
mov
mov
rorb
jmp
cmp
cmpsb
test
xchg
push
sbb
std
dec
jp
pop
pusha
enter
orb
ds
outsb
sahf
fimuls
test
push
mov
mov
insb
cmp
adc
xor
pop
add
hlt
test
aam
mov
xchg
out
jnp
xchg
test
cs
data16
pop
xor
jae
in
nop
dec
xor
xchg
mov
adc
push
cmpsb
dec
mov
scas
mov
idivl
aas
adc
cmp
es
xchg
mov
sahf
pop
add
loop
daa
ret
cwtl
adc
add
pusha
add
pusha
jno
xor
mov
and
mov
dec
mov
mov
xchg
push
dec
data16
push
mov
dec
icebp
sub
scas
jmp
dec
mov
mov
xor
jmp
cwtl
test
mov
mov
jnp
sub
loop
shll
in
add
sub
xor
scas
and
fnsave
cmp
jp
push
out
outsl
xor
rcrb
pop
sahf
xor
call
jmp
push
jg
ret
lahf
andb
into
mov
hlt
cmc
inc
out
and
mov
icebp
mov
inc
or
idivb
add
jp
pop
and
outsl
movsb
popf
lret
arpl
out
push
jge
stc
int
out
sti
add
pop
add
pop
lahf
xchg
cmc
mov
jo
xor
loopne
fcomps
xchg
mov
int3
jns
push
xor
add
lahf
dec
sbb
jle
jge
nop
inc
add
cmp
lcall
pusha
addr16
xor
outsl
ljmp
xchg
out
in
outsb
jne
push
cmp
aam
cmpsl
xor
pusha
rep
mov
and
and
and
jbe
add
out
cmp
divb
test
mov
out
push
cmp
add
f2xm1
scas
xor
mov
lret
lcall
push
sbb
and
mov
cmp
gs
mov
imul
fldenv
fwait
xchg
mov
stc
hlt
into
jmp
mov
sbb
adc
mov
insb
sbb
sbb
xchg
mov
xchg
fsubs
lahf
add
or
adc
das
daa
bound
cli
jge
adc
fldcw
xor
push
sti
shrb
inc
out
pop
xchg
pusha
sbb
sub
sbb
xor
mov
scas
push
adc
jge
cmp
arpl
or
insl
dec
lods
mov
sbb
mov
jbe
dec
cmpsb
pop
xorl
lds
push
add
das
pop
cmpl
xor
dec
xor
dec
imul
sahf
add
jp
fidivrl
gs
and
cwtl
and
and
cmp
inc
push
mov
cmp
loopne
jl
gs
inc
jge
sbb
adc
jae
jle
fisubrs
adc
movsl
xor
add
stos
das
hlt
arpl
xor
sub
inc
stos
mov
adc
pop
fdiv
sarb
xchg
jmp
ret
fxch
bound
pop
fnsetpm(287
ds
pop
dec
into
push
and
xchg
and
mov
shl
cmp
mov
jae
imul
cmpsb
sub
mov
jmp
insb
ljmp
rorb
divb
pop
ja
faddp
xchg
arpl
popf
cmp
hlt
iret
outsb
pop
cmp
hlt
jg
jnp
mov
mov
bound
fisubl
dec
pop
cld
add
xorb
loope
jo
in
fnstenv
sub
daa
jbe
scas
out
nop
imul
push
jnp
add
push
cs
shll
xchg
fucomi
push
aas
outsl
xorb
jnp
lods
lret
inc
arpl
push
mov
cli
mov
sub
sti
mov
push
mov
andb
fldl
inc
lea
rolb
jo
xor
inc
mov
jns
repz
mov
mov
xor
leave
into
xor
adc
fwait
lea
imul
fwait
repz
cmp
cmp
testb
mov
movsl
lret
mov
lock
adc
xchg
ret
adc
mov
pop
movsb
jno
sub
mov
push
xchg
jbe
pop
fadd
mov
or
adc
adc
mov
mov
lret
mov
mov
cwtl
push
adc
mov
fistps
adc
nop
pop
es
adc
loopne
pop
sub
stos
cmp
jl
scas
lods
sbb
mov
cmpsl
xchg
jno
imul
out
imul
daa
inc
data16
xchg
shll
testb
jns
xchg
inc
fnstsw
or
pop
mov
les
fsub
fldl
add
inc
xchg
testb
daa
push
cwtl
sub
mov
fstpl
test
popl
movsb
cmp
mov
pop
xchg
cwtl
ja
pop
and
and
mov
jl
sub
int
outsl
es
lods
into
mov
jo
mov
cmp
xor
inc
push
adc
out
or
and
call
sbb
lahf
mov
fbld
aad
aas
je
arpl
test
pop
outsl
jp
enter
stc
sti
xlat
fsubp
test
pop
loop
cmp
adc
cwtl
jp
jns
pop
xor
scas
sbb
push
add
fs
sti
sub
mov
push
xorb
ret
and
and
and
push
aaa
dec
sarb
in
test
inc
fwait
xchg
jl
pushf
push
pushl
out
mov
xchg
xchg
movsl
mov
inc
sbb
fneni(8087
test
cli
and
in
fs
pushf
sub
imul
adc
push
cmpsl
cmpsb
pop
xor
push
repz
leave
je
cmp
aas
loope
rorl
jo
pusha
in
jb
pusha
dec
out
mov
adc
ss
ja
pop
mulb
xchg
scas
repz
adc
cmpsb
icebp
pop
mov
mov
cmp
cmpsl
mov
out
subb
dec
mov
andb
mov
mov
aaa
mov
imul
mov
test
mov
pop
inc
inc
cs
cmp
push
in
lods
inc
fdiv
push
mov
dec
mov
ds
sub
push
add
dec
int
nop
jge
cwtl
xchg
movl
xchg
test
rcrb
xlat
fadd
xchg
cmc
imul
sti
aas
rorb
xor
lods
sbb
and
fidivrs
mov
mov
jae
nop
mov
adc
inc
jb
push
in
pop
inc
std
lret
jo
mov
pop
adc
cmpsl
das
mov
adc
or
pop
ds
pop
xor
cld
fidivl
subl
lods
das
jnp
pop
jmp
jecxz
iret
push
mov
xchg
add
mov
cltd
jl
je
jg
clc
sub
test
std
mov
inc
js
push
fs
jb
xor
std
cmp
mov
fbld
popf
mov
jo
jb
cmp
rcll
lods
jns
or
in
pop
outsb
sbb
jbe
imul
push
mov
xchg
arpl
push
stos
sub
idivl
testl
popf
add
bound
dec
imul
test
scas
and
pop
movsb
loop
movsb
insb
cltd
nop
insb
nop
popa
clc
cltd
fwait
movsb
pop
pusha
or
fsubr
and
sub
fmuls
cmp
ds
mov
repnz
add
mov
inc
aas
jg
mov
adc
sahf
addr16
xor
call
jmp
dec
das
or
cmp
and
outsl
mov
push
movsb
jo
fldt
adc
pop
fbld
data16
popf
mov
mov
sbb
stos
mov
xchg
mov
jg
test
sbbb
int
mov
shlb
lret
add
mov
pop
inc
push
xchg
mov
popa
and
cmpsb
and
sbb
lret
ret
push
or
stos
nop
pop
add
and
fisttpll
xchg
add
aam
stos
push
movsb
imul
movsl
jp
rcrl
sbb
pop
mov
or
dec
pop
push
push
roll
sbb
test
orl
jbe
outsl
xchg
in
mov
jmp
enter
push
sub
mov
rorl
push
sub
jmp
and
aad
jecxz
fwait
inc
push
mov
mov
and
rcll
lds
popa
pusha
mov
jle
inc
inc
ds
loopne
jb
inc
xorb
xchg
loope
jae
sbb
or
leave
nop
lret
xchg
adc
xchg
and
or
mov
iret
movsb
movsl
or
ss
mov
or
arpl
mov
dec
stos
cmp
inc
loop
push
or
inc
mov
decb
testb
push
push
dec
cld
aad
imul
dec
mov
or
lea
pop
cmp
mov
jo
fisubrl
stos
dec
cmpsl
inc
pop
into
mov
movsl
lods
jno
mov
push
pcmpeqb
add
in
movsb
jl
sbb
lahf
fldl
inc
cmp
mov
push
subl
into
mov
or
hlt
dec
xchg
fld
hlt
adc
pop
jnp
addr16
push
mov
push
fcoms
sub
fimuls
shrb
and
rcrl
lret
xor
jbe
out
inc
jne,pt
mov
mov
adc
dec
les
push
jns
and
out
mov
ljmpw
jns
sahf
push
xchg
mov
pop
pop
sbb
lds
mov
and
mov
cwtl
popf
cmp
fistl
fbstp
inc
inc
jmp
adc
xorl
cmp
cmc
push
adc
inc
inc
or
mov
imul
inc
or
bound
mov
dec
lods
sti
sahf
push
cmpsb
ficoms
jecxz
scas
clc
fldt
push
stc
data16
lcall
or
pop
push
xchg
or
int3
xchg
jmp
sahf
out
xor
aaa
pop
fs
mov
int
jg
sbb
dec
lret
and
mov
xchg
ret
xor
mov
add
pushf
pop
lret
mov
push
iret
push
test
and
xor
movsb
sbb
jae
lods
mov
pop
adc
sbb
lods
inc
pop
and
or
and
and
adc
fs
push
out
inc
jbe
cmp
adc
cmp
inc
jae
jns
incb
repnz
int3
in
lea
mov
fsubs
arpl
jae
cmp
xor
test
int
xchg
jl
lahf
mov
mov
call
inc
jo
insb
cmp
ljmpw
clc
int
jns
pop
or
add
mov
xor
aad
rol
sarb
hlt
in
cwtl
mov
pop
sub
or
adc
jle
dec
mov
xchg
push
outsb
das
add
shlb
xor
repz
xorb
push
xor
add
cmpsb
mov
stc
ds
push
mov
xor
and
add
fwait
xchg
inc
push
es
ret
test
scas
sub
mov
dec
mov
pop
cli
cmpsl
add
adc
pusha
sub
cli
fimuls
ret
and
movsl
lahf
xorl
sub
dec
mov
mov
mov
push
fidivl
push
data16
int
add
dec
insb
arpl
cli
cmp
adc
rcl
jns
adc
into
hlt
adc
out
xchg
std
add
shl
leave
pop
daa
mov
cltd
inc
cmp
pop
sbb
in
push
dec
xor
adc
ret
pusha
xor
sub
rcll
fstpl
stos
filds
andl
fwait
divl
xchg
pushf
mov
stos
push
pop
mov
adc
push
jo
cmp
push
outsl
push
test
lods
dec
xlat
leave
stos
xchg
rcrl
enter
push
std
push
push
js
pop
js
push
pop
or
cmp
push
lret
cmpsl
lret
xchg
sub
xor
mov
xor
in
aas
mov
lock
jbe
add
cmp
std
lods
sub
das
iret
pop
scas
mov
cmpsb
mov
gs
xchg
dec
mov
sbb
adc
insb
movsb
xor
push
dec
shr
sub
lods
fiaddl
cmp
sub
jae
sub
cltd
movsb
jp
ret
add
into
mov
jl
xor
out
xchg
pop
pop
push
test
bound
insb
mov
rorl
scas
js
sub
movsl
inc
cmpsb
jno
mov
xchg
jae
add
jmp
mov
dec
inc
sbb
subl
jp
mov
outsl
mov
jecxz
xchg
into
xchg
mov
nop
mov
bound
mov
inc
sbb
cmp
aam
dec
mov
jnp
enter
mov
dec
pop
mov
add
inc
fwait
and
mov
jg
das
add
xorb
jno
cmp
pushl
jmp
ror
mov
push
pop
nop
test
popa
fsts
mov
int
popf
add
outsb
into
push
shlb
mov
pop
mov
mov
and
lea
scas
mov
movsl
sbb
jp
xor
je
pushf
aam
mov
into
ss
into
stc
cmpsb
sub
idivb
sbb
xlat
dec
test
mov
out
sub
es
mov
loope
mov
rclb
cmp
mov
ss
xchg
rcrb
pop
shr
pushf
js
jb
rorl
add
cld
nop
jle
mov
testb
mov
adc
and
cmp
push
subb
je
pop
jns
jecxz
pusha
pop
sub
inc
sbb
sbb
fwait
outsb
into
cmc
jecxz
xchg
data16
or
out
and
cmp
int3
shlb
xor
andl
std
pop
movsl
sub
inc
imul
mov
mov
pusha
negb
mov
cmp
cmpl
incl
cli
repnz
cmp
sub
xlat
mov
jl
arpl
test
stos
mov
shlb
daa
sub
scas
xchg
pop
mov
dec
rcll
mov
add
dec
or
cltd
xlat
mov
jns
ret
pop
imul
and
aad
jnp
stc
out
xchg
adc
pushf
dec
sbb
xchg
dec
jne
out
xchg
lret
inc
ss
loope
sbb
and
inc
and
mov
stos
adc
push
arpl
jb
sub
jge
mov
lcall
and
cli
rorb
or
push
and
mov
mov
push
pusha
and
and
fadds
fidivrs
mov
xchg
imul
xchg
push
push
outsl
jmp
xchg
adc
pushf
sar
cmp
push
inc
dec
sub
pop
adc
jbe
sbb
pop
ret
lahf
adc
adc
mov
inc
data16
movsl
stc
dec
repnz
jl
cwtl
jge
push
mov
mov
sbb
cld
test
pusha
inc
pop
add
sbb
aam
cmpsl
add
mov
jb
inc
mov
mov
int3
out
cmp
das
cs
sbb
sub
scas
cmpsb
loope
jns
std
xor
gs
pop
mov
adc
mov
int3
cwtl
pop
jecxz
cmp
dec
xchg
xor
sbb
movsl
mov
aaa
or
jae
es
fisttps
cmovp
inc
das
cltd
mov
push
xorb
push
cmp
das
orb
ret
sub
fcmovne
test
push
xchg
flds
jle
cmpsl
push
and
js
mov
iret
dec
pop
inc
fsubrl
cli
or
xchg
or
popl
adc
xchg
jns
faddl
inc
mov
mov
add
fisubl
xlat
cwtl
movsb
int
xchg
enter
pop
add
call
stos
imul
sub
xchg
mov
add
test
dec
sub
jae
inc
mov
hlt
add
and
mov
cmp
stos
xchg
daa
scas
fistpll
jmp
push
jo
test
and
out
mov
jne
adc
lods
test
push
lcall
push
xchg
outsb
out
sub
sub
lea
popa
mov
aam
pop
adc
movsb
add
add
pop
xor
or
mov
nop
int3
nop
push
sbb
or
pop
mov
push
mov
call
mov
adc
daa
pop
push
es
fisttpl
loop
pop
xchg
cltd
mov
push
lret
daa
outsl
and
loop
add
shlb
in
dec
outsl
xchg
and
add
sbb
push
nop
movl
orl
sub
pop
lfs
lds
adc
cmp
push
cmp
mov
xchg
and
js
and
outsl
mov
lods
js
jmp
dec
out
dec
ret
je
xor
inc
mov
lret
sub
dec
ss
jle
rcrl
mov
outsb
and
dec
test
jge
sarb
outsb
and
xchg
mov
sbb
dec
or
icebp
enter
shr
push
rcl
fcmovb
mov
xlat
jmp
push
cltd
dec
jae
outsb
push
rcl
xchg
add
add
adc
outsb
pusha
out
cmp
outsl
nop
fwait
or
xchg
lret
in
mov
ss
jnp
or
test
scas
mov
paddsw
mov
ret
stos
xchg
xchg
dec
stc
icebp
pop
lcall
fcompl
bound
cmp
lea
popa
vmwrite
mov
in
jns
add
loop
mov
push
mov
popf
jp
inc
jne
fsts
push
movsl
ret
pusha
push
cli
sub
ss
xchg
loope
xchg
addr16
xchg
mov
outsl
inc
das
scas
fdivrp
inc
test
dec
mov
and
dec
sbb
xor
add
push
adc
pop
inc
or
mov
hlt
adc
sbb
daa
sub
push
sub
push
adc
lret
aam
call
cmc
sub
nop
push
jmp
ret
pop
in
jl
cmp
sub
cmp
test
hlt
inc
sbb
mov
dec
or
sbb
inc
push
push
cmp
mov
movsb
mov
sahf
or
inc
add
xchg
xlat
push
lods
xor
pop
icebp
add
jo
imul
push
push
daa
cmp
jge
jae
out
es
lods
push
sub
lahf
inc
loopne
bound
mov
dec
stc
xchg
xor
adc
push
ret
test
loop
stc
push
test
sbb
xchg
adc
pushf
les
imul
push
loope
push
adc
add
ret
rcll
xchg
mul
mov
jns
add
xor
dec
jnp
sub
add
hlt
cs
dec
out
pop
add
add
shlb
and
aad
popf
aam
pushf
ja
daa
jle
and
or
stos
mov
or
inc
jg
test
sbb
push
loopne
gs
mov
insb
push
xchg
mov
test
push
jbe
push
leave
xor
inc
mov
outsl
into
int
icebp
ret
ss
xchg
adc
xchg
pop
mov
out
mov
out
and
mov
or
cmpsb
jl
fidivs
pop
jne
clc
cs
lods
nop
jle
jb
gs
cmp
push
mov
add
sbb
cld
xor
xchg
pop
inc
shll
dec
mov
push
add
les
aas
pop
loopne
and
cltd
xchg
pop
mov
mov
inc
adc
lret
rcll
xor
lret
adc
ss
aam
sbb
push
adc
push
test
cmp
test
jae
test
aaa
cmpsl
cmp
mov
jge
imul
test
push
xor
in
sbb
push
jae
subb
sub
or
sbb
popa
imul
push
or
mov
enter
mov
mov
fisubrs
sbb
push
sub
pushf
cmp
jo
xchg
outsl
mov
stos
sub
mov
rcrl
out
dec
sub
outsb
pop
pop
push
clc
pop
xchg
lret
mov
pop
fwait
std
push
xadd
out
mov
dec
adc
cmc
cmpsl
pushf
pop
jp
xlat
mov
push
mov
idiv
inc
mov
mov
out
cltd
jns
cmp
jns
outsb
aaa
cli
in
test
sbb
push
loop
jae
and
jae
xor
jnp
movb
dec
out
ficoml
dec
dec
adc
xlat
fistl
scas
mov
in
push
insl
mov
jecxz
cmpsl
push
test
lcall
je
mov
pusha
ljmp
popa
sub
push
cmp
mov
mov
insb
mov
loop
movsl
cmpsl
int3
adc
pop
icebp
or
inc
inc
mov
xchg
xchg
pop
cld
pop
test
push
popf
imul
mov
movsl
push
jge
int
pushf
sarl
xlat
leave
test
filds
add
jecxz
negb
mov
cmp
sarb
js
sbb
push
aas
aam
lods
inc
icebp
push
mov
push
cli
int
xor
das
cmpsl
scas
sahf
int3
pop
data16
roll
sub
push
mov
pop
xor
int
mov
xor
xchg
mov
mov
fcoml
lret
inc
push
cmpsl
fsubrl
pop
scas
push
mov
add
push
dec
imull
insl
repz
pop
pop
add
mov
jge
es
xchg
fxam
bound
imul
xor
or
and
rep
cmp
xchg
or
mov
nop
aam
or
sahf
mov
push
add
test
jl
mov
cmp
jno
inc
lds
adc
push
mov
ret
push
cld
js
stos
out
jp
mov
xor
cwtl
sbb
sbb
mov
push
loop
and
jp
pop
hlt
pop
pop
fsubrs
fwait
cmp
rcrl
push
mov
inc
out
daa
add
mov
rcrl
jp
daa
je
cmp
and
movsl
je
mov
pop
fldl
or
jae
xor
sti
ljmp
imul
mov
lret
insl
mov
cmp
pop
inc
in
mov
mov
jne
sahf
push
pusha
dec
push
sub
loop
lods
pop
mov
in
jo
lahf
cmp
xor
sbb
outsl
imul
xchg
and
adc
or
xchg
data16
cmp
or
arpl
push
mov
or
outsb
mov
push
xor
xor
jl
cli
adc
xor
inc
jno
std
aas
sub
hlt
in
inc
aaa
notb
cmp
pop
mov
test
mov
inc
movsl
mov
xchg
popf
out
fmuls
lock
xchg
or
frstor
das
jbe
movsb
icebp
decb
dec
loopne
push
and
xchg
outsb
jnp
mov
mov
push
dec
outsl
lds
mov
pop
mov
pop
sub
xorb
out
and
dec
out
and
test
leave
pop
in
mov
jne
mov
pop
dec
iret
iret
xchg
push
aas
or
fmuls
pop
negl
xor
mov
mov
and
and
inc
addb
jecxz
adcb
cltd
sub
sub
xor
out
xorb
cmp
jg
mov
js
repz
xor
dec
or
and
mov
dec
add
fidivs
cli
inc
sbb
sbb
xorb
or
pop
jns
inc
outsb
xorl
pop
jp
fcoml
or
scas
cmp
lcall
pop
outsb
mov
mov
jb
and
mov
push
repnz
jae
outsb
into
mov
xor
mov
mov
loop
or
sub
imul
das
adc
clc
in
sub
pushf
arpl
sbb
adc
push
jne
in
adc
dec
stc
jl
cwtl
sbb
mov
ja
jp
inc
inc
movb
popa
adc
test
xchg
dec
mov
das
sbb
xchg
mov
clc
ss
cmp
lret
bnd
push
push
hlt
cld
dec
arpl
dec
dec
mov
rolb
add
sarl
in
inc
mov
mov
push
pop
add
jne
in
xor
in
imul
fmul
in
test
in
push
sbb
imul
cmp
int
mov
in
xchg
dec
flds
dec
imul
shlb
mov
cmp
test
into
popa
cmp
shrl
inc
dec
sub
inc
cld
xchg
mov
mov
lret
or
fsubs
and
sahf
push
inc
inc
pop
movsl
filds
sub
xchg
xchg
cmp
inc
jecxz
loopne
inc
mov
lock
sarb
mov
int3
mov
mov
lahf
adc
popf
pop
xor
imul
or
cmp
or
inc
xchg
xor
pop
in
adc
cmp
jl
xchg
call
hlt
jge
add
out
mov
sbb
scas
push
mov
xor
push
js
test
or
ja
ja
adc
aas
lret
out
add
test
rcrl
fwait
mov
jp
pop
mov
mov
mov
sarb
insl
mov
adc
dec
imul
xor
adc
lcall
inc
dec
mov
pop
inc
loopne
pushw
pop
fcomps
dec
mov
call
lret
cmp
dec
fs
push
movsb
add
shrl
mov
and
dec
rorb
mov
jb
add
insl
stc
inc
mov
mov
sub
sbb
repnz
push
pop
out
dec
dec
fmuls
mov
mov
mov
pop
cwtl
icebp
push
lock
sbb
xor
sbb
test
mov
gs
push
add
push
test
xor
sub
and
mov
arpl
inc
jmp
ja
fists
xor
mov
push
mov
jle
lods
mov
ret
add
shll
repz
out
stos
or
dec
push
inc
addb
fbld
out
sub
aas
push
jg
test
pop
gs
imul
push
clc
dec
add
pop
or
decb
js
adc
pushf
mov
iret
lret
push
jno
push
or
cmp
subb
lea
addr16
shlb
aam
cld
push
mov
shlb
sub
out
jnp
dec
fisubrl
adc
lahf
push
cld
fwait
dec
insl
push
jo
jae
sub
jb
gs
popf
lock
test
fdivl
mov
sub
xor
adc
xor
jecxz
leave
sbb
das
jb
scas
adc
lock
pop
xor
and
fstpl
ret
lahf
push
fs
test
and
xchg
mov
inc
les
inc
fs
jnp
xlat
add
movsl
dec
enter
pop
mov
inc
mov
jbe
dec
mov
hlt
enter
popa
sub
cmpsl
loope
xchg
cli
mov
push
push
sub
hlt
pop
or
faddl
mov
in
jmp
outsb
xchg
fisubrs
inc
pop
lea
std
lea
ljmp
aam
cmpsb
push
test
into
stos
movsb
scas
cli
mov
mov
scas
mov
sarl
sbb
add
int3
loop
pop
mull
dec
xor
pop
shll
in
aam
mov
loope
mov
sub
outsb
or
jns
xchg
adc
mov
mov
lods
xor
pop
jmp
jo
jae
shll
sub
mov
push
mov
pop
pusha
inc
dec
mov
pop
iret
es
mov
sub
cmp
out
inc
es
ja
jecxz
jbe
imul
jae
cs
push
popa
scas
sbb
inc
sbb
adc
inc
outsl
push
cwtl
lds
lock
adc
jb
leavew
jmp
xor
fisubrl
test
ljmp
xchg
mull
sbb
or
cmp
inc
jae
and
cmpsb
cmp
mov
in
push
pop
icebp
sub
dec
add
mov
inc
sbb
push
sbb
mov
insl
xchg
inc
add
dec
test
enter
xchg
cwtl
xor
adc
dec
push
mov
movsl
mov
xor
jb
xchg
sub
xchg
sub
inc
ret
int
lret
add
xchg
das
ret
loope
fildl
lea
mov
leave
fisubl
dec
sti
out
add
sbb
pop
js
xchg
jns
adc
les
mov
fwait
sub
adc
pop
dec
enter
xchg
push
out
mov
gs
mov
mov
mov
arpl
or
out
inc
shrl
outsb
pop
xchg
sub
arpl
fcompl
xor
jmp
adc
push
cs
and
adc
sbb
ljmp
lods
inc
mov
and
repnz
lret
mov
repz
int3
idivb
stc
jecxz
push
sub
sub
and
pop
aam
xor
xor
scas
addr16
dec
fs
sbb
and
cwtl
shlb
sahf
pop
pop
insl
dec
fucom
inc
daa
addr16
test
pop
arpl
data16
inc
mov
sub
fwait
in
pop
mov
jo
sbb
xor
fs
loop
xor
daa
sub
outsb
imull
sti
inc
les
imul
imul
into
add
mov
lahf
sahf
adc
mov
fimull
mov
sbbb
lahf
arpl
inc
cmp
push
mov
repnz
jne
pop
scas
int
mov
pusha
adc
and
cmp
arpl
dec
jmp
sub
sbb
jmp
out
ss
lods
jnp
pop
mov
cld
mov
jne
sbb
jg
fldl
adc
ja
adc
pop
sbb
mov
pop
repnz
and
movsl
xor
mov
stos
cs
lods
addb
out
shl
inc
adc
cmp
pop
lds
inc
sbb
xchg
dec
push
scas
mov
add
fs
mov
push
mov
xchg
cmp
add
push
sub
lea
add
add
add
xchg
lds
dec
add
add
inc
adc
dec
clc
and
enter
lods
cmp
data16
imul
aaa
fwait
mov
lcall
ret
jmp
dec
push
sbb
pop
inc
dec
xchg
push
mov
jecxz
aam
out
pop
add
addr16
popa
sub
cmp
fs
cmp
mov
add
or
nop
outsl
fldl
lcall
fmuls
test
mov
mov
cmp
xchg
dec
insl
sbb
je
fs
lods
xor
dec
push
adc
pop
inc
pop
stos
mov
jae
cmpsl
mov
adc
frstor
outsb
jg
push
add
jno
xor
sete
out
out
sub
pop
sahf
xchg
jo
and
dec
jb
test
idivb
mov
add
xchg
or
outsl
mov
mov
mov
sub
jecxz
and
jns
cs
dec
sbb
adc
sti
arpl
sbb
fistl
xchg
adcb
and
in
mov
cmp
icebp
push
movsb
push
sub
pop
sahf
movsl
xchg
mov
adc
sbb
cmpsb
xchg
stc
mov
shlb
sarb
repnz
inc
mov
arpl
aad
sbb
test
loope
addr16
dec
jne
jns
sbb
or
je
cmpsb
fadds
scas
adc
and
pop
ss
jg
outsl
mov
sbb
shr
pavgb
cmp
fisttpll
fidivs
jo
imul
add
cmpsb
mov
in
data16
loopne
sahf
mov
pop
xchg
cmp
add
inc
cmpsl
push
jp
imul
xor
icebp
and
addr16
out
scas
int3
and
cli
push
xchg
cmpsb
loope
icebp
movb
push
pop
je
dec
mov
sub
sub
fistpl
cmp
rcrl
dec
mov
sarb
sub
push
out
insl
sub
cmp
dec
cmp
ja
pop
push
inc
repz
mov
mov
xor
adc
adc
jns
mov
imul
inc
xor
dec
push
cmpsl
jl
jp
mov
arpl
sbb
and
leave
outsl
and
push
lcall
pop
xchg
notb
repnz
pop
and
mov
lods
xor
addr16
movsl
xchg
cmpsl
xchg
mov
xor
adc
xor
fs
call
push
mov
push
adc
pop
push
outsb
mov
pop
sbb
pop
pop
add
addr16
dec
fldt
jl
mov
push
pop
gs
inc
dec
scas
mov
adc
pop
and
mov
add
cmp
adc
pop
insl
adc
jmp
stos
sub
inc
sbb
imul
fs
arpl
adc
out
inc
cvtps2pd
mov
pop
mov
mov
es
adc
cmp
mov
sti
arpl
push
fistpl
lds
mov
inc
pop
mov
sub
add
xor
push
ljmp
inc
xor
jne
arpl
and
mov
jle
inc
jecxz
mov
mov
jae
pop
dec
push
arpl
mov
xor
add
dec
lret
inc
mov
stos
sub
dec
mov
and
mov
sbb
pop
sbb
pop
dec
dec
inc
pop
inc
mov
sahf
imul
mov
add
imul
popa
dec
inc
xchg
outsb
pop
pop
dec
sahf
jo
decl
btr
hlt
sbbb
scas
dec
add
push
dec
imul
xchg
mov
sarb
aaa
mov
mov
scas
das
sub
dec
dec
pusha
inc
dec
or
xorl
and
cwtl
test
lds
test
aaa
adc
jle
jae
lahf
sarb
inc
jg
push
and
xchg
jmp
loop
xor
movsl
addr16
call
add
sbb
or
lds
jae
fsubrl
sbb
xchg
pop
xor
fcompl
adc
pop
jo
push
jns
daa
dec
pop
xchg
stos
pop
jo
movsb
or
loope
daa
fsubs
je
repz
jo
add
addr16
jg,pt
pop
dec
icebp
xchg
or
jp
hlt
shlb
and
sbb
mov
pop
add
sbb
movsl
pop
mov
dec
xor
cmp
adc
dec
arpl
out
mov
je
sub
push
or
aaa
lret
sbb
cmp
rolb
sbb
pop
je
stos
js
sbb
std
inc
mov
hlt
scas
mov
out
repnz
outsl
mov
jmp
addr16
jle
mov
and
inc
std
das
negl
inc
subl
inc
mov
lods
add
lds
bound
fwait
cwtl
mov
lcall
sub
out
jnp
lods
fwait
push
adc
sbb
cmp
push
inc
push
dec
hlt
push
or
push
inc
arpl
mov
push
jl
sbb
lock
je
pop
fsubl
frstor
inc
push
mov
pop
push
and
addr16
mov
shlb
daa
leave
xor
clc
jnp
lock
insb
fisubrl
add
stos
in
mov
enter
inc
lcall
lea
dec
push
inc
mov
stc
das
xchg
cli
in
push
insb
cmp
push
jb
cmp
mov
mov
imul
and
rcrb
sar
insl
pop
mov
pop
pop
cmp
cmp
movsl
test
test
test
add
cli
dec
test
mov
adc
jmp
in
or
scas
dec
jbe
lcall
sbb
add
and
sbbl
cmpl
ja
xchg
loope
cwtl
lods
bound
inc
adc
sub
add
stos
push
jo
xchg
movsl
xchg
add
in
mov
into
int3
pushl
loope
cmp
and
in
push
rclw
mov
and
fsubs
mov
mov
xlat
mov
inc
mov
cmp
jmp
cmp
mov
dec
inc
stos
and
repnz
sub
jmp
sub
lods
les
inc
ljmp
scas
rol
or
jno
test
fsubl
sub
scas
pop
aam
pop
insb
shlb
jae
xor
mov
pop
fstp
dec
arpl
icebp
push
add
adc
jmp
dec
jbe
imul
out
add
jb
ret
divb
dec
mov
adc
or
lcall
jno
idivl
or
mov
imul
add
xchg
es
and
dec
jnp
aaa
jle
xchg
test
inc
das
repz
aas
sbb
inc
roll
dec
clc
and
lds
adc
loope
add
out
fwait
popf
pop
mov
dec
mov
sbb
xchg
pop
mov
sarb
push
mov
dec
push
sarb
scas
sub
add
mov
mov
loop
ret
mov
inc
les
mov
adc
in
inc
mov
mov
lea
das
sub
cmp
mov
add
les
jp
sub
jge
icebp
inc
mov
rcrl
outsl
lock
pop
mov
and
fs
leave
pop
mull
mov
hlt
xor
or
push
mov
inc
mov
sub
push
sub
lods
mov
arpl
sub
aam
les
inc
mov
cmc
mov
xchg
dec
lds
push
xchg
shr
dec
ret
ds
lret
stos
arpl
icebp
repz
jae
jecxz
xchg
xor
push
ja
lods
fcomp
lods
fisubs
xchg
cmp
lods
fstpt
fstpt
sbb
jecxz
lcall
push
daa
xchg
ds
dec
inc
mov
push
mov
fimull
push
ds
jne
cmp
hlt
je
add
scas
mov
add
xchg
daa
lods
xchg
add
movb
sahf
and
ret
push
fwait
std
sbb
sub
mov
pop
xchg
repnz
or
insl
push
adc
jl
enter
jns
jg
sbbl
dec
mov
mov
daa
mov
out
test
test
push
les
sub
stos
mov
out
test
rcr
sub
mov
push
fs
or
cli
mov
out
outsl
int
jae
cmp
out
cltd
lahf
in
cmp
jg
jge
dec
arpl
pop
push
pop
arpl
dec
xchg
fiadds
xchg
jo
insb
imul
test
xchg
sbb
pop
inc
ja
xchg
and
stos
lahf
adc
xchg
pop
lds
sub
icebp
daa
mov
and
js
mov
mov
nop
imul
push
inc
outsb
adc
cmp
xchg
push
push
xchg
or
test
lea
xchg
dec
push
sbb
and
cmpsl
dec
arpl
and
outsl
ja
pop
xor
pop
scas
mov
push
mov
inc
subl
push
sub
je
fsubs
outsl
dec
jbe
xchg
enter
in
outsb
dec
jne
sbbl
insl
push
push
jo
leave
mov
push
test
xchg
add
xor
jb
add
cmpsl
fucomp
mov
outsb
xor
add
pop
out
arpl
push
pushf
fldcw
dec
xlat
int3
sahf
xchg
gs
jl
xchg
dec
mov
imul
push
pop
xor
bound
fimuls
adc
pop
jl
mov
and
test
push
mov
xchg
and
dec
ficoms
mov
or
inc
mov
jl
xchg
repz
sub
and
pushf
xchg
mov
push
pop
in
cmpsl
je
inc
xchg
jbe
jns
int3
arpl
out
dec
dec
inc
fimull
add
inc
pop
aad
push
mov
pop
out
movsl
jae
fstl
lcall
insl
push
push
ja
lcall
daa
lahf
stos
add
frstor
sub
pop
cmp
cmp
mov
test
sub
mov
sbb
push
in
push
jp
insb
xchg
popa
pop
mov
mov
jge
sub
fwait
stos
pop
jmp
mov
js
outsb
push
pop
outsb
sbb
xchg
mov
mov
popf
je
push
pop
mov
xor
cmpsb
or
or
or
xor
test
rcll
cmp
addr16
xor
cld
mov
imul
cmpl
sub
insb
fmuls
test
push
ret
pop
call
xor
and
movsl
sub
mov
xor
leave
jp
movsb
jae
ljmp
jg
inc
pop
sete
mov
outsl
repnz
into
test
adc
pop
sub
not
dec
cmp
addl
mov
sub
sahf
sbb
or
mov
mov
ss
rcrl
or
or
aad
aas
sahf
and
scas
sbb
sbb
sub
aam
mov
lret
mov
movsl
sbb
or
mov
ret
and
push
and
cmp
mov
cmpsl
cmpsl
in
adc
in
sbb
js
adc
push
inc
xchg
bound
outsb
push
mov
loope
pop
je
push
insl
mov
cmp
test
movsl
adc
int3
cmp
lods
or
into
or
cmp
jbe
push
shll
bnd
dec
mov
sbb
mov
lock
and
xchg
cmpsl
mov
shrd
mov
decl
add
or
jmp
int3
aam
fiadds
pop
sti
or
addr16
jmp
enter
pop
pop
aam
out
mov
push
or
out
movsl
inc
out
pop
hlt
push
cmp
sbb
insb
cmp
ret
aad
addl
ja
hlt
jbe
addr16
dec
push
sarl
push
ds
and
ret
xchg
enter
jecxz
imul
scas
pop
push
mov
in
or
or
inc
cmpsb
addr16
push
test
xor
cs
add
mov
orb
sub
je
lods
xor
sbb
push
ret
or
xchg
pop
mov
and
mov
mov
pop
mov
push
pop
ljmp
ljmp
imul
xchg
pushf
mov
movsb
stos
js
cmp
pop
das
xchg
addb
sbb
sbb
outsl
repz
repnz
aad
iret
movsl
dec
mov
push
or
imul
inc
jbe
outsl
dec
pop
dec
lods
pop
pop
mov
mov
cmp
out
cmp
inc
push
dec
or
out
inc
jg
jno
mov
outsb
idivl
push
daa
jge
dec
or
mov
add
std
xchg
pop
sahf
mov
push
cmp
nop
jmp
cmp
push
pop
roll
hlt
sub
mov
popa
lods
leave
pop
imul
mov
push
sub
push
outsl
loopne
pop
adc
adc
jmp
mov
daa
dec
loop
aas
sbb
jg
vandnps
push
data16
clc
ds
testb
dec
jbe
inc
js
fdivrl
xor
add
jnp
cmpsb
sbbl
sbb
rcrb
scas
mov
jnp
into
unpcklps
add
push
dec
ret
test
testl
in
es
adc
jbe
mov
pop
xorb
imul
pop
icebp
cmp
cs
jb
call
inc
dec
ss
mov
mov
push
mov
cli
dec
or
xchg
cmpb
ss
dec
mov
jae
xchg
fs
js
je
sbb
sub
pop
lcall
dec
fs
cmp
fiaddl
pop
mov
fcmovnbe
outsb
dec
int
es
mov
mov
movb
notl
pop
es
data16
in
mov
es
test
mov
adc
pop
mov
bnd
xlat
loope
sub
mov
mov
fcompl
mov
sbb
inc
into
imul
out
and
xlat
dec
les
inc
cmp
inc
adc
push
add
pop
sub
mov
xor
jl
imul
adc
pusha
into
and
insb
subl
xchg
mov
jle
push
inc
xchg
inc
sahf
lods
jnp
enter
in
jnp
xchg
add
daa
push
into
inc
dec
cmp
popa
outsl
js
fisubl
arpl
pop
mov
ds
inc
mov
and
sub
pop
add
cmpl
jns
popa
cltd
test
push
mov
add
xor
inc
xor
xor
adc
movsb
pop
mov
jle
sahf
jb
repz
xchg
pop
cmc
mov
adc
jae
mov
inc
and
jo
xchg
inc
sbb
mov
stc
sub
xchg
cmp
dec
pop
out
jp
push
stc
mov
mov
and
inc
sub
repz
sub
dec
or
popa
sahf
arpl
pusha
data16
hlt
sub
scas
add
jg
dec
inc
jecxz
mov
outsl
pop
xor
aaa
add
lret
push
insl
pop
addr16
pusha
cld
rcrb
adc
sbb
jne
xor
iret
adc
scas
add
pushf
lods
adc
xor
cmp
push
in
sbb
dec
clc
mov
inc
cmp
xchg
push
inc
jp
repz
sbb
xchg
add
sahf
push
pop
pushf
pusha
and
insb
outsl
push
or
aas
dec
test
out
clc
lret
enter
sbb
adc
mov
mov
pop
xor
sahf
jno
and
rcrl
mov
inc
push
inc
push
xchg
adc
cmp
cs
dec
mov
push
test
sbb
ret
cwtl
ljmp
push
rcll
rcrl
adc
mov
cmp
mov
fs
sbb
xor
ficoms
cmp
inc
dec
nop
out
stos
sti
pusha
mov
cld
mov
pop
sub
lret
clc
sbb
dec
sti
cmpsl
stos
add
fsubrl
jmp
test
dec
fsubs
pusha
sub
xchg
pop
fisttps
cmp
sbb
jbe
test
gs
inc
out
xchg
outsl
hlt
negb
int3
mov
scas
fmuls
cmp
push
lahf
shrb
sub
or
in
cwtl
cmp
cld
mov
cmp
out
test
or
xchg
push
add
inc
lret
aad
jae
test
push
loop
sbb
out
mov
pop
adc
push
cmp
enter
sub
mov
cmp
cmp
adc
outsl
push
add
pop
or
fistpl
cmpsl
hlt
mov
sbb
icebp
imul
jb
sbbb
add
shlb
jp
and
sbb
mov
fsubl
push
xchg
adc
xor
mov
jbe
aaa
and
pop
xor
inc
add
mov
or
aam
mov
cmc
pusha
pop
stc
inc
xchg
jnp
mov
popf
cmpsb
dec
or
push
outsl
add
nop
pushf
mov
xchg
in
mov
rorb
movsl
cmpsl
xchg
int
lock
bound
pop
xchg
jge
cmp
iret
mov
inc
jmp
mov
pop
jns
and
test
mov
jae
sbb
hlt
mov
mov
mov
hlt
sbb
mov
lret
sahf
cwtl
xor
in
mov
push
hlt
jae
ljmp
ds
or
mov
jmp
cmc
pop
sbb
xchg
add
outsb
je
unpckhps
aam
scas
movsb
sbb
daa
arpl
sbb
icebp
push
int3
mov
cmp
xor
jp
dec
arpl
out
dec
in
mov
xchg
test
lock
jae
not
clc
loopne
outsb
ret
xchg
mov
sbb
mov
jmp
push
sahf
test
cs
dec
mov
or
mov
clc
je
inc
je
add
push
cwtl
jne
mov
loopne
pop
test
pop
ja
push
jns
sti
inc
mov
stos
cwtl
js
add
jg,pn
scas
xchg
mov
bound
call
fwait
addl
mov
pushf
dec
sub
imul
sbb
adc
mov
imul
mov
adc
xor
mov
mov
dec
bound
sbb
push
pushf
divl
jl
jg
cwtl
popf
mov
rcr
nop
popa
mov
sbb
sbb
popf
jecxz
mov
jb
mov
mov
popa
insb
add
pushf
jp
das
xlat
pop
aam
xor
mov
dec
inc
int
leave
test
imul
add
into
cmp
xchg
cmp
xchg
pop
jmp
and
cmp
xchg
mov
movsl
push
dec
cmp
lcall
jbe
in
mov
sbb
cmp
xchg
push
dec
jmp
test
test
sbb
lods
and
test
shlb
sub
dec
scas
insb
mov
cs
rol
mov
pop
and
lea
push
or
or
cmpsl
jnp
outsl
cmp
bound
js
scas
xchg
xchg
or
jl
push
sbb
orl
icebp
cld
xor
and
inc
inc
and
inc
push
mov
jecxz
and
cmp
push
insl
xor
jl
inc
mov
push
cmpsb
push
pop
daa
arpl
mov
jae
jl
fcmovne
and
lret
imul
push
push
cmp
xor
dec
cmpsb
lock
cmpsl
add
or
mov
int
addb
mov
std
xchg
outsb
cmpsl
lods
ja
out
sub
add
mov
adc
loope
andl
sbb
enter
lahf
cmpsl
mov
fwait
popa
cmpsb
jne
mov
sub
leave
jmp
stos
cmp
addr16
imul
sbb
mov
ds
mov
sbbb
push
adcl
mov
jecxz
repz
jg
xchg
popa
mov
sahf
jbe
shlb
xor
push
jo
xchg
scas
mov
pop
pop
movsl
or
icebp
jecxz
xchg
sbb
xchg
arpl
or
mov
pop
nop
hlt
pop
aad
int3
sbb
sbb
mov
movb
mov
push
push
sbb
xchg
fs
mov
dec
pop
test
push
fiaddl
pop
mov
xor
inc
mov
mov
inc
js
pusha
sbb
aas
inc
mov
ret
add
lock
sub
movsl
xor
std
mov
das
call
push
scas
inc
nop
push
shrb
mov
push
mov
cmc
mov
addr16
inc
and
sahf
stos
pop
adc
dec
fstl
and
enter
mov
lahf
addr16
or
push
pop
and
pop
loop
sub
sti
pop
xorb
cmp
xchg
xchg
add
scas
lcall
mov
rorl
test
das
cltd
add
inc
push
and
add
and
cmpsb
dec
sbb
push
lods
pusha
jbe
repz
in
mulb
mov
mov
inc
ja
sbb
std
pop
mov
lds
jg
push
add
inc
xorl
adc
mov
cmp
fwait
loop
mov
bound
outsb
movsb
js
fdivl
out
mov
jge
nop
push
js
ret
adc
mov
popa
imul
aaa
repz
decl
aam
inc
inc
dec
xlat
jl
cli
lret
jp
pop
es
pushf
mov
daa
out
jg
xchg
mov
dec
mov
and
xorb
mov
jo
sbb
mov
xchg
adc
bound
push
add
dec
cmp
sbb
pop
bound
inc
xor
mov
xchg
movsl
push
sbb
add
fnstenv
xchg
lea
dec
and
icebp
add
xchg
pop
xor
cmp
inc
imul
cltd
lea
out
nop
insb
inc
daa
pop
add
pop
jns
call
pop
pop
out
add
ss
adc
das
aam
cmp
mov
jo
jecxz
xchg
and
popa
mov
das
cmp
add
xor
jae
and
xchg
sub
mov
and
push
arpl
xchg
sahf
pop
imul
push
adc
popf
pop
ljmp
jnp
jne
imul
lods
push
jg
add
pop
sub
loopne
nop
sbb
pop
sbb
dec
shlb
and
push
sahf
or
js
insb
scas
or
jb
mov
mov
mov
jbe
or
cmp
dec
sbb
movsl
pop
iret
add
xchg
ficoms
cmp
add
pop
cmp
xchg
iret
cmp
jnp
aas
jle
xchg
jnp
cltd
mov
push
mov
sub
mov
scas
or
mov
outsl
test
sbb
push
movsb
cmpsb
imul
cmpsb
movsb
repz
pusha
sbbb
sub
jo
cwtl
ja
mov
test
push
dec
mull
pop
push
xchg
pop
push
add
scas
mov
sbb
cmp
dec
mov
push
shrb
sub
cmp
lret
pop
movsb
aas
sub
mov
mov
mov
cli
add
jg
or
cmp
fbld
inc
loop
adc
mov
push
inc
clc
shrb
outsb
dec
fsubl
sub
inc
push
and
cmpsl
in
xchg
ss
popa
js
hlt
dec
push
shl
cmp
and
shrb
pop
push
or
and
add
push
mov
popf
mov
xor
pusha
mov
addr16
mov
je
insl
rcrl
cwtl
mov
pop
scas
lods
daa
and
xlat
xor
mov
inc
sub
je
dec
arpl
mov
test
insl
daa
xor
out
jo
shrb
push
movsb
adc
and
addr16
pop
cmp
repz
pop
push
pop
lock
outsl
xchg
add
dec
movsl
xor
xchg
jno
or
cmpsl
inc
jo
add
sbb
mov
push
mov
adc
ret
mov
stos
jle
movsb
xchg
inc
aam
jmp
jge
into
outsb
rcrl
push
call
jl
pop
push
or
dec
imul
jmp
or
mov
insb
push
addl
sub
and
out
dec
shll
bound
push
mov
mov
cmp
jg
jmp
cmpsb
cmp
test
xchg
xchg
scas
xor
sub
push
xchg
mov
jecxz
mov
jp
and
xchg
inc
iret
popa
fimuls
imul
stos
cmpsb
add
lock
add
cmp
aaa
xchg
and
lea
sub
jle
jne
push
ret
gs
mov
mov
mov
mov
push
pop
pop
cs
lock
and
inc
jle
lahf
loope
scas
cmp
sahf
xchg
jp
or
dec
or
mov
xor
mov
scas
push
bound
rcrb
xor
jb
cmp
jle
sub
mov
add
iret
push
mov
push
push
adc
je
dec
sbb
lds
decl
gs
inc
ret
jnp
scas
cmp
mov
js
sbb
jp
fs
insl
or
xlat
sbb
add
mov
data16
sub
cltd
repnz
test
cld
mov
xor
rorb
cmp
cmpsb
mov
mov
rcrb
dec
xor
add
and
mov
inc
rcll
js
popf
push
inc
jbe
jbe
gs
inc
add
xchg
loopne
jae
adc
dec
jecxz
pop
aaa
xor
lahf
stos
pop
outsl
insl
xchg
pop
cld
lock
or
insb
gs
pop
rcrb
jle
lea
mov
jbe
ret
movsl
subl
cmpsb
xchg
sahf
mov
push
mov
lods
fwait
push
int
scas
insb
pop
in
push
insl
mov
pop
movsl
adc
popf
xor
fsubl
ds
jns
xchg
mov
or
mov
cltd
loopne
sub
sbb
arpl
test
cmpsl
xor
jl
push
xchg
dec
aas
loopne
push
pop
dec
sub
js
popa
scas
xchg
js
adc
test
movsb
and
cmpsb
lahf
jns
daa
cmpsl
mov
imul
dec
data16
xchg
mov
test
shll
or
cmp
movsb
push
mov
ret
int3
push
aas
push
or
out
jb
hlt
sti
add
out
call
jmp
insl
out
lock
cmpsb
xor
sahf
sbb
cmp
mov
addr16
into
xchg
pop
and
xchg
inc
and
mov
push
push
mov
dec
testl
push
xor
js
orl
push
outsl
dec
pop
fwait
mov
stos
push
shrl
fistpl
data16
insb
dec
enter
insl
out
jg
add
outsl
lea
movsb
arpl
mov
scas
mull
pop
xchg
imul
in
int
sub
push
mov
cmpsl
imul
outsb
test
sti
and
pusha
mov
addr16
ret
adc
inc
mov
movsb
jmp
pop
mov
pop
push
jg
mov
lret
xchg
push
mov
ja
call
push
xor
push
mov
imul
pop
cli
in
shl
repnz
jmp
and
xor
push
cmp
daa
imul
movsl
daa
cmpsl
cmp
jae
fadd
hlt
mov
out
lret
aam
mov
and
push
vprotw
outsb
pop
jbe
scas
jb
sti
cs
icebp
adc
xchg
loope
cmpsb
pop
gs
cmp
inc
lret
popa
loopne
jb
rcrb
test
cmpsl
andl
mov
mov
call
mov
xlat
lods
xor
stos
andb
and
cmp
push
loopne
mov
test
movsb
mov
out
mov
mov
cmc
sub
negb
lods
call
idivb
pusha
sbb
imul
xchg
hlt
cmp
sbb
jae
jns
sbbb
insb
stos
cmpsl
push
fs
adc
pop
inc
push
stos
in
pop
arpl
xor
or
scas
loop
mov
inc
test
add
repnz
ret
mov
cmp
mov
in
jnp
jmp
in
inc
lahf
and
xchg
sbbl
cmp
sub
push
push
movsl
fwait
inc
hlt
dec
test
es
adc
xchg
nop
adc
into
jg
dec
add
xsavec
mov
jnp
xchg
sub
add
push
ja
js
divl
mov
dec
adc
jae
ds
xor
cmp
arpl
xor
push
addr16
loopne
mov
inc
popa
add
jb
sbb
xchg
loop
push
aad
or
mov
mov
jbe
sub
scas
mov
je
outsl
ljmp
push
ret
aam
lret
cmpsb
add
push
pop
and
xchg
dec
inc
cmp
xor
jo
sahf
outsb
cwtl
jle
int
dec
pop
sbb
popa
dec
add
xchg
loope
add
cmpsl
fbld
push
push
inc
in
sbb
repnz
jbe
das
pop
pop
fucomi
xor
mov
inc
dec
xor
inc
pop
jle
cld
movsb
mov
mov
cmpsb
inc
xchg
adc
xor
sbb
js
mov
and
pop
or
mov
push
lock
xchg
mov
inc
sbb
pop
jmp
sbb
cmp
std
jmp
sub
gs
add
ljmp
arpl
cmp
inc
add
inc
mov
adc
xor
ljmp
xlat
loop
add
xchg
or
cmp
cmp
pushf
cmpb
pop
pop
xchg
xchg
dec
and
pop
pushf
mov
cmpsb
fwait
lods
mov
pop
sub
gs
fs
nop
stos
je
inc
push
lret
push
dec
pop
pop
lcall
scas
push
fs
inc
fidivrl
out
xchg
incb
incb
mov
pusha
jno
mov
pop
test
dec
jl
xchg
push
sti
lret
testl
daa
pop
jns
ja
int3
addr16
jnp
sub
scas
xchg
cld
inc
imul
lock
lods
testb
inc
test
dec
push
aas
push
and
inc
lcall
sbb
xchg
popa
inc
shrl
and
mov
jo
mov
divl
js
or
jne
push
and
imul
popa
mov
scas
out
test
cmp
scas
cmpsl
je
jae
inc
push
gs
movsb
dec
mov
inc
shlb
inc
and
cmpsl
pushf
or
sbb
out
jb
inc
add
cs
xchg
mov
imul
insb
dec
push
fistpll
push
notb
insb
inc
adc
sub
std
stos
or
aaa
xchg
inc
cmp
adc
pop
scas
dec
adc
lods
mov
or
push
sub
sbb
sub
push
pop
pop
and
icebp
xchg
lret
pop
inc
cwtl
mov
iret
push
jb
js
xlat
and
sub
stos
int
sub
loop
imul
imul
pushf
cld
jno
jp
cmp
and
pushl
jge
js
mov
push
jns
test
or
xchg
nop
xor
dec
sbb
mov
cmp
dec
pusha
scas
loopne
fs
add
in
sbb
das
jmp
sbb
xchg
imul
push
mov
ret
xor
mov
add
jnp
mov
or
sahf
test
inc
test
mov
pop
push
jb
in
cmpsb
pop
inc
add
push
repz
outsl
jb
mov
leave
aam
mov
ja
xor
stos
cmc
mov
cmp
je
out
jl
jno
adc
mov
imul
loope
inc
pop
lret
orb
dec
mov
add
pop
test
imul
pop
sub
int3
push
std
inc
cmp
inc
jnp
add
enter
xchg
stos
jne
ret
insl
sbb
sbb
outsl
lcall
rcll
mov
es
pop
js
dec
jmp
adc
sbb
add
pop
mulb
lea
xchg
lock
xchg
iret
sbb
movsl
mov
inc
sbb
add
push
sbb
pop
mov
aaa
arpl
fs
xchg
je
sub
gs
jl
inc
mov
add
outsb
in
test
xchg
xchg
jg
push
adc
test
repz
aas
out
outsl
call
pushf
xor
test
fucomi
push
push
imul
js
push
push
inc
jbe
pop
lret
jp
xchg
dec
mov
mov
dec
outsb
fistl
sbb
mull
rcrl
cmp
mov
gs
xor
mov
or
jl
and
jne
dec
cmp
lcall
in
mov
xchg
in
je
sub
icebp
leave
pop
xchg
xchg
sub
movsb
cwtl
les
adc
jo
mov
lea
popa
pushf
fsubl
mov
mov
sub
imul
or
rcll
rcll
dec
cmpsl
cmp
inc
adcl
popa
add
jae
adcl
dec
xchg
jle
cmp
outsb
loop
addr16
mov
imul
in
aas
pop
xor
int3
mov
fisubs
push
lods
cmp
push
xchg
test
pop
imulb
mov
loopne
cmp
xchg
xchg
je
test
das
lcall
out
pop
jns
std
stos
in
fsubs
ds
fimull
notl
aad
inc
sti
pop
xor
dec
or
scas
mov
sbb
and
xchg
xor
pop
dec
jecxz
add
push
xor
cmp
aad
test
rorb
mov
fwait
adc
and
xorb
push
mov
dec
xor
inc
push
jecxz
movsl
cmp
or
sbb
xchg
out
filds
mov
iret
jge
imul
xor
and
mov
stos
ficoml
adc
outsb
lods
leave
or
fisubrs
aaa
jne
push
sub
adc
out
mov
pop
out
jb
popa
pop
sub
mov
mov
pop
jmp
add
and
and
cmp
sub
pop
sub
xchg
mov
pop
stos
js
xor
or
cmpb
out
das
mov
fistl
testb
or
arpl
sbb
arpl
movsl
ss
push
imul
or
stos
xor
mov
and
pop
and
imul
insb
dec
js
rorb
xchg
call
push
mov
imul
sbb
sub
cmp
hlt
scas
push
mov
jmp
pop
xchg
xchg
int3
mulb
mov
pop
sbb
repnz
sarl
dec
mov
dec
js
dec
adc
mul
cmp
jl
cmp
pop
out
int
in
jae
mov
cmp
mov
bswap
jne
inc
subl
add
mov
pop
pop
dec
sbb
jl
addr16
push
xchg
cltd
mov
pop
jge
sub
arpl
insb
subl
ja
mov
into
push
or
cmc
jb
out
dec
xor
test
test
sub
fwait
and
addr16
and
sbb
inc
movsl
jecxz
scas
pop
add
cmp
xchg
clc
into
push
outsl
lods
mov
cmp
data16
adc
data16
cmp
add
adc
sbb
add
push
ret
mov
cmp
nop
jp
adc
dec
jnp
sub
je
mov
sbb
push
xchg
and
je
dec
cwtl
je
data16
adc
push
mov
mov
fisubl
dec
sub
stc
fisubs
int
lret
jae
push
fldt
add
jecxz
data16
inc
sbb
imul
and
sar
xlat
pop
mov
pop
mov
jae
mov
int
mov
scas
je
pop
cmpb
sbb
push
dec
inc
add
xor
push
cmp
mov
inc
sarl
and
adc
aad
outsl
xchg
or
pop
test
movsb
sahf
bound
outsb
add
out
jb
cmp
push
sub
add
repz
jne
arpl
pop
mov
test
mov
mov
movl
xlat
roll
mov
shll
cmp
push
iret
mov
cmc
sub
xchg
arpl
lcall
fsubs
dec
cmc
loop
add
mov
jle
xchg
scas
and
push
cmp
sub
stc
add
movsb
dec
mov
out
out
dec
std
rep
fnstcw
cmpsb
xor
out
adc
imul
mov
push
inc
dec
aad
movsl
adc
mov
test
test
pop
mov
mov
imul
add
stos
add
xchg
pop
ljmp
rolb
adc
repnz
scas
int
je
cld
and
jo
xchg
inc
arpl
fmulp
dec
pop
xor
ljmp
movb
loopne
sbb
mov
dec
vminsd
out
sbb
cltd
das
dec
add
dec
add
test
inc
pop
push
dec
rolb
scas
mov
addr16
test
in
movsb
and
pusha
mov
dec
pop
push
shl
call
int
inc
cmp
js
mov
jns
insl
jle
imul
out
fdiv
push
push
shl
jno
mov
inc
fwait
sub
xchg
imul
sub
xor
xor
mov
mov
xor
test
aam
int
ljmp
jl
inc
aas
sub
clc
or
outsl
mov
inc
pop
hlt
cmc
lret
mov
sti
rolb
add
xchg
and
jmp
les
lret
outsl
sahf
stos
ljmp
outsb
jnp
cmpsl
cmp
sbb
call
cmp
in
fldt
ds
inc
push
mov
sbb
or
adc
pop
movsb
roll
mov
ds
mov
es
inc
dec
repnz
jg
filds
push
sti
jle
add
mov
aad
std
adc
ret
adc
fs
out
in
lcall
cmpsb
loopne
in
movsb
cmc
push
or
pop
inc
js
icebp
inc
movsl
adc
arpl
dec
gs
insl
outsb
inc
and
hlt
mov
cmp
sub
repz
and
scas
inc
cmc
xchg
jl
sbb
cld
incb
subl
dec
dec
loopne
mov
leave
jnp
mov
insl
sti
popf
push
dec
out
lcall
sbb
loop
jnp
js
jge
fistpl
shrl
xchg
and
sbb
sbb
rep
pop
nop
mov
popa
aad
xchg
leave
outsl
mov
xchg
and
add
das
dec
jle
adc
push
das
mov
sub
mov
jnp
aad
and
pushf
cmpsb
push
loopne
nop
rcrl
pop
js
cwtl
mov
daa
add
xchg
outsl
in
xchg
jnp
push
and
sub
mov
fnstcw
stos
push
xchg
cmp
je
sahf
fwait
inc
sub
xchg
hlt
add
mov
dec
setnp
aaa
sub
fs
xchg
and
pusha
imul
les
add
aam
sbb
jnp
cmp
pop
outsb
mov
sti
push
addl
and
pusha
push
cmp
pop
into
iret
mov
movsb
sahf
inc
adc
out
hlt
loop
divb
pop
dec
js
cmp
xorl
dec
jb
mov
cmp
popf
cli
cmp
ret
out
in
fdivrs
cmp
cwtl
hlt
int3
aam
xor
xchg
jnp
test
push
test
jb
or
sarl
movsl
scas
inc
xorl
fmuls
jl
mov
and
lock
dec
push
lods
cmpsb
add
addr16
lods
ja
rcll
out
xchg
loop
and
or
pop
pop
lea
lods
adc
test
or
dec
cli
lds
push
shrb
or
adc
lcall
cs
jp
out
pop
mov
std
lods
mov
scas
dec
mov
imul
shrb
xor
lods
jp
xor
xor
push
mul
test
lea
sti
lods
pop
les
movsl
fld
cmp
sub
pop
inc
fisttpll
pop
rorl
das
and
es
adc
fdivrs
sti
pop
in
pop
push
and
xchg
scas
mov
lret
and
add
test
cmp
sub
mov
gs
dec
inc
pop
dec
pop
pop
xchg
test
pop
xchg
mov
aas
mov
jg
data16
enter
fs
adc
push
arpl
movb
jnp
jo
int
imul
push
hlt
leave
das
aas
mov
dec
scas
insl
test
cmp
pop
ss
movb
and
push
jl
fs
push
mov
or
into
sub
push
jle
dec
jp
outsb
xchg
inc
add
sahf
add
call
scas
test
mov
xchg
sbb
cmovl
in
mov
inc
cmpsb
int3
pop
sub
sbb
daa
pop
add
mov
lahf
inc
inc
inc
das
adc
jg
cmc
add
int
cwtl
sub
fcmovbe
dec
cmp
cmpl
int3
fcoml
mov
push
push
bound
dec
sti
mov
call
das
js
pop
movsb
addl
jp
sbb
dec
mov
xchg
adc
mov
sbb
pop
ja
xchg
push
jp
sbbl
mov
int3
popf
sbb
adc
mov
jle
out
xor
mov
mov
lods
jl
outsl
ja
mov
in
or
cmp
xor
arpl
movsb
stc
sub
cmp
sti
or
cmp
push
xchg
cmc
popa
jle
jecxz
push
inc
scas
push
xor
and
push
popf
rorl
inc
scas
push
iret
cmpsb
stos
movsl
leave
pop
cmc
xor
nop
cli
pop
test
add
sahf
movsb
jecxz
int
jl
nop
clc
pop
arpl
stos
mov
nop
jns
aas
pusha
xor
inc
mov
pop
outsl
dec
outsl
or
jno
mov
int
dec
push
fstps
scas
in
and
ljmp
pop
mov
sub
xchg
dec
cli
std
adc
enter
sbb
pop
addr16
fs
ljmp
xchg
xor
inc
push
jne
out
push
mov
pop
gs
add
or
pop
jb
xor
inc
imul
ss
loopne
pop
dec
mov
das
fs
in
adc
push
add
fs
cmp
and
rolb
sarl
iret
call
mov
cmc
push
pop
pop
inc
dec
cmp
std
xlat
inc
sub
es
dec
jecxz
das
pop
sub
in
jae
pop
and
outsb
jnp
xor
repz
imul
dec
add
repnz
sbb
bound
dec
add
and
fmul
pushf
pop
jge
mov
inc
ds
push
out
shll
mov
stos
xchg
pop
in
mov
mov
pop
cltd
mov
mov
test
pop
fidivrs
pop
out
xor
in
mov
notb
stos
leave
in
adc
xlat
jns
jge
pop
rcrl
push
movsl
xchg
sub
enter
cmpsb
inc
mov
push
testb
pop
or
xor
sub
mov
sbb
cmp
loop
icebp
cld
jl
rcrb
nop
dec
and
je
lcall
pop
test
mov
imul
mov
pop
dec
mov
cmc
cmp
cmp
inc
xchg
xchg
push
push
movsl
push
cmpsl
push
fs
testl
or
lock
loope
lods
dec
test
mov
mov
es
mov
add
adc
sub
add
arpl
mov
sub
xorb
add
and
mov
loopne
push
mov
addr16
hlt
add
xor
jb
cwtl
fwait
mov
fldcw
lods
push
icebp
lock
test
outsb
inc
mov
dec
add
xorl
lret
xor
push
int
les
jmp
jns
jmp
xor
sub
push
lock
cmc
xchg
push
sarl
xlat
sete
popf
mov
push
aaa
mov
xchg
dec
sbb
inc
ficompl
sahf
jo
mov
adc
xchg
inc
jmp
mov
movsl
jmp
cltd
pop
sbb
jb
fists
or
mov
jo
and
xchg
add
or
test
push
add
xor
je
orl
jno
in
push
dec
xchg
adc
sbb
sbb
push
jnp
push
dec
sub
push
out
lret
sub
mov
dec
xor
push
and
xrelease
mov
cwtl
imul
xor
stos
jl
adc
lahf
add
mov
fdivrs
lret
or
jmp
cwtl
ret
ljmp
insb
sbb
inc
fs
and
mov
jmp
dec
lahf
out
lock
inc
lret
jo
inc
sub
push
imul
pusha
dec
push
mov
jo
int
mov
xor
or
add
lahf
mov
lock
out
out
inc
movb
or
loop
dec
push
mov
addr16
xchg
mov
push
xchg
add
sub
push
push
xor
push
add
hlt
pop
scas
ret
sbb
fsubrl
mov
aaa
xchg
sub
jno
xor
pop
mov
scas
push
cltd
push
push
xchg
ja
mov
jnp
movsl
mov
push
inc
arpl
mov
lret
in
jp
xchg
pop
jne
pop
shll
out
jne
bound
arpl
and
jg
jge
mov
stos
xorl
inc
push
imul
jns
and
fwait
pusha
mov
sarl
notb
fisttpl
add
xor
test
dec
push
mov
sub
xchg
push
jp
ret
sub
and
lods
sub
add
vpmadcsswd
imul
fcomps
into
push
or
add
ss
and
adc
dec
roll
rcl
sub
and
mov
aas
rep
ja
jl
fsubl
jnp
xor
or
shr
push
inc
mov
mov
test
jo
shl
es
bound
adc
pop
dec
call
mov
into
mov
ficoml
lahf
mov
inc
mov
push
dec
out
mov
push
adc
loopne
xchg
mov
cmpsb
or
je
test
sub
jmp
jmp
jo
lea
insb
add
mov
sub
jae
mov
mov
push
ljmp
loope
and
rorl
mov
popa
push
adc
cmp
pop
in
ds
sarl
or
mov
movsb
sbb
nop
aas
jnp
and
jp
pushl
rcll
mov
lret
dec
xchg
pop
mov
je
lret
mulb
cmc
ds
mov
bound
lods
and
dec
popf
pop
inc
adc
mov
loopne
xchg
idivl
pop
mov
sbb
pop
push
sbb
push
push
jmp
xchg
push
jl
clc
jl
mov
cmpsb
outsb
adc
xor
cmc
inc
sti
adc
movsl
rorb
lock
push
cltd
out
add
repz
es
scas
mov
and
push
adc
in
xor
jp
xlat
mov
fcoml
fisttpll
and
packssdw
es
inc
mov
adc
test
aam
in
dec
fsub
fmuls
inc
test
jo
out
xor
pop
mov
push
pop
movsl
xchg
pusha
mov
cmpsl
mov
repz
clc
je
in
mov
sbb
pop
stos
dec
scas
notl
mov
xchg
leave
dec
movsl
mov
mov
add
popa
icebp
xchg
outsl
inc
mov
lds
das
and
movsb
fld
sahf
outsl
mov
adc
ret
mov
shrb
mov
imul
mov
xor
lahf
xchg
pop
aam
icebp
int
push
fcomi
dec
shll
int
mov
inc
pop
mov
out
fsubl
outsb
jmp
addr16
bound
stos
int
das
sbb
fstps
sbb
lods
and
xorl
xorl
negl
push
pop
ss
lods
je
out
mov
std
cli
mov
stc
mov
movsl
orb
pusha
int
aad
push
mov
sub
faddl
mov
test
and
push
int
ja
add
inc
int
out
sbb
aad
cmp
push
arpl
gs
test
push
dec
filds
arpl
and
shrd
cmp
ficomps
in
inc
add
imul
popf
movsl
sbb
jb
cmp
push
pop
push
inc
cwtl
fcom
push
push
rolb
pusha
mov
or
mov
pop
jnp
jae
insl
sub
cmp
cmpsb
js
inc
add
jae
jp
stc
or
jnp
dec
inc
and
adc
out
jle
cmpsb
or
stc
arpl
pop
js
and
jno
jp
mov
enter
cwtl
and
popf
addr16
je
push
incl
mov
add
addr16
arpl
test
mov
dec
jb
sbbl
dec
dec
xor
shll
outsb
mov
pop
data16
and
imul
filds
enter
adc
aad
ret
push
jecxz
push
jae
push
or
je
pop
std
xchg
add
popl
mov
jp
xchg
inc
roll
xor
sub
adc
dec
sub
mov
orb
dec
mov
jnp
xor
cltd
js
iret
mov
pushl
sub
xlat
mov
rol
add
pushf
call
dec
sti
mov
push
dec
add
fs
hlt
scas
lods
cmp
sahf
std
nop
mov
aam
gs
das
imul
or
aaa
sub
fisubrl
push
jns
pop
pop
inc
jecxz
fldt
xchg
mov
dec
pusha
sti
je
inc
mov
sbb
addr16
sbb
test
lahf
mov
sbb
dec
sbb
imul
sbb
and
and
cmp
adc
sbb
lods
mov
ljmp
jecxz
pop
xchg
cld
cwtl
je
bound
pop
orl
and
push
xor
pop
push
cmpsb
inc
pop
jae
sarl
and
dec
push
push
push
inc
popa
adc
cmp
add
cmpsb
cmp
popf
cmp
or
lods
inc
adc
ror
test
inc
dec
clc
jae
shll
jne
in
mov
aad
ss
icebp
sbb
pop
pop
jl
fidivl
sbb
into
cmp
or
ljmp
pop
fwait
in
pop
xchg
js
enter
aam
rclb
lcall
jns
lahf
mov
pop
arpl
cli
into
mov
adc
mov
out
lcall
into
lds
outsl
test
cmp
sbb
into
adc
fdivr
arpl
fnsave
lods
pop
shll
je
pop
shlb
shl
test
mov
jge
scas
pop
cmpsl
mov
mov
xchg
arpl
out
outsb
push
pop
cs
push
test
inc
mov
inc
mov
in
dec
test
sub
mov
mov
push
pop
mov
idivb
cltd
inc
adcb
cli
insl
dec
out
sub
jl
aaa
aam
dec
inc
dec
jne
mov
sub
pop
std
xchg
jge
stos
fsubs
dec
pop
mov
or
sbb
mov
addb
call
je
adc
push
add
mov
je
sub
jno
test
sub
test
shl
pop
sbb
xchg
cs
push
daa
cli
or
mov
lods
cmc
addr16
pop
nop
mov
cmp
push
cmpsl
dec
xchg
incl
fwait
mov
jge
in
push
push
mov
arpl
xor
xor
jmp
jmp
sbb
jl
in
mov
adc
std
cmp
sbb
mov
dec
scas
add
xchg
pop
jns
inc
lret
push
dec
dec
add
leave
imul
cmpsl
lret
push
xor
aam
bound
jns
jnp
cmpl
pop
jne
jp
xchg
sarl
movsl
pop
movl
ficoml
pop
inc
int
sbb
stos
inc
adc
mov
test
xchg
mov
dec
icebp
xchg
mov
lock
mov
lahf
dec
enter
jle
inc
popf
mov
jl
pop
and
lret
sarl
push
adc
ret
scas
sub
push
aas
xlat
cmp
xchg
and
dec
shrl
ret
movsb
mov
jb
cmp
inc
andb
dec
fdivrs
loopne
inc
sbb
outsb
lods
out
xchg
dec
je
jo
xor
mov
mov
stc
pop
fs
xor
inc
push
dec
jmp
cmp
in
mov
test
add
popa
test
cmp
cmpsl
sbb
dec
push
dec
leave
xor
add
mov
pusha
lods
out
xchg
shll
lret
cld
jle
add
roll
push
sub
mov
pop
mov
fdivl
aad
ffreep
lret
and
mov
pop
add
int
jne
mov
clc
ds
xchg
data16
sbb
mov
cltd
in
pushf
mov
loopne
xchg
fsubs
aas
pop
dec
inc
inc
gs
xor
xor
xchg
jge
decl
add
andl
pop
pop
daa
ret
movsb
rcrb
fisttps
jg
pop
and
dec
sbb
cmp
mov
push
repnz
cli
sarb
push
loope
or
jge
xchg
dec
push
popf
xchg
inc
mov
adc
aad
in
mov
jl
mov
into
rorb
adc
cmp
jno
mov
sub
jle
loope
scas
inc
nop
adc
jl
sub
inc
push
lods
cmp
inc
xchg
push
xor
jo
cmp
add
ja
mov
aam
cltd
test
add
and
outsb
or
pop
adc
mov
roll
addr16
sbb
aam
pop
rcrb
or
inc
xchg
lods
arpl
or
jnp
mov
cmp
nop
dec
jmp
push
imul
mov
es
cmpsb
sti
movsl
add
add
mov
int3
and
lods
imul
ret
das
jns
and
lret
mov
push
aas
test
jecxz
test
int
cs
cli
decb
ja
pushf
popf
scas
int3
dec
fidivrl
pop
add
inc
jg
inc
jmp
lods
push
iret
inc
jle
ja
fiaddl
hlt
jne
sub
aad
stc
cmp
fdivl
testb
or
roll
add
jl
cmp
lahf
jnp
pop
lahf
pop
dec
stc
lods
aam
clc
sub
push
mov
adc
push
and
xchg
push
dec
mov
cmp
das
pop
and
xchg
rcrl
sbbb
cmpsl
jno
out
push
xchg
sub
push
movsb
mov
jne
push
popa
call
dec
pop
lds
and
inc
inc
aaa
mov
jnp
add
mov
push
push
xor
repz
mov
adc
jae
inc
pmulhw
repnz
pop
hlt
push
xchg
and
pop
out
es
jmp
insb
mov
jnp
cmp
add
or
xchg
fwait
sub
lds
data16
fisubs
test
mov
or
outsb
sub
pushl
mov
inc
bound
lret
mov
xor
xchg
loop
inc
mov
cmp
clc
adc
stc
sub
aas
mov
sub
xchg
outsb
push
mov
std
xlat
scas
jnp
push
ja
jmp
push
cmp
xchg
mov
mov
or
and
or
mov
scas
xor
lock
imul
jns
dec
scas
mov
stos
int3
popa
leave
inc
sub
add
and
ficoml
in
ret
jnp
sbb
and
push
cli
stc
dec
push
data16
jae
inc
pop
mov
call
mov
mov
clc
mov
mov
jnp
cltd
je
pop
mov
push
inc
insl
out
outsb
or
push
xor
mov
mov
xor
inc
cli
jp
repnz
pop
pop
cs
test
popf
jns
cltd
out
pop
outsb
movsl
jmp
inc
sub
add
gs
fldcw
pushf
pop
push
loop
jle
insl
sarb
add
mov
enter
rclb
pusha
inc
int
and
lret
adc
lea
xchg
mov
xor
test
scas
and
fsubl
fcoml
xorl
xchg
adc
xchg
arpl
sahf
cmpb
push
mov
and
add
mov
mov
sub
repnz
push
call
and
sub
dec
jns
push
mov
pop
xor
adc
outsb
inc
leave
jae
pusha
iret
jecxz
inc
push
jle
and
dec
cmp
push
andl
enter
and
movsl
fdivl
mov
push
je
mov
mov
dec
cmp
out
ds
add
dec
daa
or
js
mov
mov
cmp
inc
lahf
scas
fstl
push
gs
sub
sub
inc
notl
xor
adc
jno
push
sbb
push
sub
icebp
gs
xlat
push
jb
ret
mov
neg
sbb
sub
les
je
sbb
mov
or
inc
icebp
repz
pop
adc
dec
std
leave
ljmp
pushf
and
sbb
imul
pop
pop
and
xchg
push
inc
jmp
sub
jb
cmp
lea
lods
add
pop
dec
sbb
and
push
add
push
movlps
fistpl
mov
jo
and
in
test
movsl
scas
mov
cmp
dec
mov
jae
sub
clc
or
cmp
outsb
mov
popa
cltd
and
sbbb
mov
adc
mov
out
push
push
das
loopne
inc
push
and
xor
data16
shl
ljmp
fs
push
add
mov
inc
into
insl
mov
cmpsb
pop
pusha
xchg
insb
shll
cmp
cmp
fcmovnu
divb
or
pop
sbb
popa
and
std
rorl
test
dec
gs
pop
pop
movsl
xor
into
cmp
leave
mov
sbb
cmpsl
cmp
sub
lret
jne
repnz
or
mov
dec
and
fs
insb
popa
or
arpl
shlb
push
imul
jae
scas
sti
out
jo
jbe
inc
out
pop
in
int3
mov
sbb
rclb
ljmp
push
inc
int3
xor
shll
enter
test
add
lea
add
in
movb
lods
cmp
or
outsb
dec
addr16
dec
cmp
jae
mov
lret
pop
mov
sbb
jmp
stc
cmp
inc
shlb
xchg
int3
sahf
movsb
imul
push
mov
push
mov
lcall
mov
xor
out
sub
add
test
mov
add
sti
lds
mov
test
arpl
shl
in
sub
mov
mov
repnz
dec
push
mov
adc
jae
clc
lea
or
pop
jns
lcall
inc
lcall
fistl
inc
inc
push
sbb
aas
xchg
push
push
and
push
pop
xchg
call
js
dec
fwait
inc
shll
jbe
xor
iret
dec
add
pushf
dec
clc
rcrl
pop
push
stos
int3
imul
js
arpl
adc
inc
faddl
adc
aaa
push
popa
rcll
flds
stc
mov
sbb
sub
dec
scas
nop
mov
loopne
adc
mov
out
mov
dec
jge
and
insl
lea
scas
xchg
xchg
mov
mov
jp
lods
cmp
mov
mov
dec
and
fs
mov
orl
pop
insl
xchg
out
add
push
mov
xor
push
jae
pop
jge
cmp
mov
fadd
aam
subb
and
lcall
test
lahf
add
and
mov
pop
add
xor
test
pusha
test
mov
mov
imul
sub
jl
add
das
scas
mov
xor
and
inc
inc
push
jge
sbb
dec
mov
jb
or
in
jb
mov
outsb
or
or
or
and
nop
aaa
int3
mov
cld
and
mov
lret
dec
pop
pop
push
clc
cli
xor
pop
gs
and
sub
mov
xchg
cvtps2pi
test
loop
test
movsb
scas
jne
lcall
ret
mov
mov
or
in
sbbb
ss
sahf
sbb
rcll
loop
cmp
fiadds
aaa
fwait
adc
mov
cli
mov
pusha
adc
mov
mov
mov
cmp
push
lea
mov
sub
stos
xchg
imull
jns
test
sbb
mov
mov
add
adc
pop
inc
cmp
xchg
leave
jae
dec
adc
xchg
adcl
sub
jecxz
repz
mov
aaa
imul
in
data16
loop
add
out
xchg
ja
insb
stos
in
and
fidivrl
mov
mov
mov
lahf
dec
sub
jne
xor
outsl
insl
outsb
mov
rcl
mov
mov
pop
cmp
add
gs
insl
inc
movsb
push
push
push
daa
push
sub
and
gs
mov
or
inc
aam
in
fldcw
dec
mov
mov
lcall
pop
mov
sbb
sbb
negb
aas
jae
dec
xor
fisubrs
stc
jne
aas
sbb
enter
insb
sub
std
mov
out
mov
pop
xchg
mov
push
and
test
lock
lods
jnp
mov
mov
lods
fwait
mov
jnp
popf
sub
pop
enter
loope
dec
insb
fdivrs
pop
jp
xor
pop
add
sub
mov
clc
mov
adc
in
jmp
inc
ljmp
cmp
mov
bound
cmc
mov
stc
and
cmpsl
adc
push
and
std
inc
mov
pushf
sub
push
and
sub
daa
xchg
outsb
pop
inc
into
data16
movsl
mov
mov
dec
js
push
mov
xlat
mov
add
shlb
bsr
or
push
ss
bound
jmp
xchg
aam
roll
mov
pavgb
push
xchg
outsl
dec
mov
mov
inc
sbb
cmp
lcall
leave
dec
cmp
loopne
jnp
out
jns
add
fadds
leave
inc
inc
daa
push
and
dec
lret
arpl
js
inc
daa
std
push
mov
mov
sbb
out
shll
cli
pop
mov
mov
push
dec
inc
fcoml
call
adc
lea
mov
pop
sub
add
scas
cwtl
out
push
mov
mov
adc
ja
iret
inc
outsl
int3
test
imul
jecxz
sbb
pop
mov
lds
add
out
aas
mov
mov
cmp
xor
xchg
push
push
sub
jo
and
cmp
lods
cwtl
lods
jecxz
add
push
adcl
lret
xchg
jle
in
add
xor
pop
fisubs
test
mov
mov
push
cmpsb
mov
mov
cmp
sahf
outsl
mov
lea
mov
call
push
inc
fwait
add
loope
cmp
mov
cmovae
and
cmpsl
sbb
jl
into
pop
cmp
aam
mov
sbb
fs
mov
pop
push
dec
sbb
ror
mov
inc
inc
imul
push
inc
xchg
adcb
mov
lods
sub
jo
push
cmp
adc
mov
sub
int3
cmpsl
addl
stc
loope
and
lods
push
xchg
adc
lds
dec
mov
mov
xchg
test
shll
jns
push
lea
aam
sbb
jge
ficoms
inc
popl
inc
pop
and
enter
pop
or
or
mov
cmp
add
mov
lock
push
andl
mov
mov
stos
add
sub
test
sub
add
push
adc
out
ss
pop
add
sub
adc
dec
mov
jbe
test
pop
push
stc
lahf
push
xchg
test
jle
mov
mov
add
cmp
xchg
int3
ds
cmp
sbbb
ljmp
inc
jne
xor
jecxz
jno
sub
ret
stos
xlat
stc
inc
mov
mov
in
fs
cmpsl
mov
inc
dec
fsubp
inc
iretw
add
lods
mov
ficomps
loop
data16
das
ja
rclb
test
jmp
aaa
cld
mov
dec
mov
leave
sahf
add
lahf
js
andb
sub
bound
negb
out
inc
stc
test
mov
aas
pop
sbb
jge
rorb
pusha
enter
add
mov
int3
mov
mov
jl
jnp
mov
jge
inc
sbb
cmp
shr
mov
pop
dec
outsb
ror
push
lret
xchg
or
sub
push
pop
mov
pop
or
pushf
test
dec
push
jb
outsb
mov
pop
fldenv
jnp
ljmp
out
lret
in
push
or
stos
jge
outsl
mov
cmp
push
fs
stos
imul
xchg
mov
jb
ss
lret
push
jnp
add
cmp
movsl
rorl
jnp
cmp
mov
jns
sub
stos
xchg
or
sbb
insl
push
cmp
lods
cmp
cmp
pop
xchg
repz
or
shrb
sub
xor
dec
mov
push
lcall
pop
fnstenv
andb
pop
mov
mov
dec
push
aas
push
sub
push
pop
out
xor
dec
imul
dec
or
out
in
insb
ds
cs
pop
fimull
mov
sbb
mov
imul
mov
sub
mov
mov
jns
or
dec
fstps
outsl
pop
jmp
xchg
inc
jl
rcr
cmp
inc
xor
sbb
and
loopne
push
xchg
and
lret
xchg
sub
test
jg
pop
hlt
jmp
or
adc
pop
aaa
pop
mov
pop
and
and
xchg
addr16
insl
adc
in
pop
xchg
gs
sbb
inc
mov
or
pop
cmp
ret
aam
xchg
mov
sub
iret
sahf
xchg
pop
sti
test
push
lds
sub
dec
mov
push
mov
or
sarb
mov
cs
lods
orb
add
jle
or
push
jne
and
jp
imul
mov
mov
jecxz
bound
pop
addl
and
fwait
or
xor
in
cmp
inc
add
cmp
pop
and
fwait
or
scas
mov
stos
pop
ja
gs
xor
and
mov
jg
sub
or
movsl
lret
flds
xchg
or
add
mov
push
outsb
xor
stc
pusha
movsb
xchg
push
xor
jl
std
mull
jmp
ja
hlt
sbb
mov
imul
inc
cld
jbe
pop
lods
xchg
int
xlat
pop
fs
xlat
push
or
dec
inc
jmp
dec
xor
mov
or
cmp
or
jno
mov
mov
push
cs
fs
add
jb
adc
in
cmpsl
push
call
jnp
mov
push
pop
xor
lcall
out
imul
popa
add
jb
jp
movsl
inc
inc
mov
push
add
movsl
mov
inc
xchg
cmpsl
inc
mov
mov
adc
pop
test
jge
add
out
int3
incl
mov
xchg
bound
push
mov
into
movsb
xor
test
inc
mov
push
cmp
inc
fimull
sbb
inc
push
pusha
mov
sub
data16
into
scas
sub
rcrb
mov
pop
mov
jmp
mov
enter
ret
pop
addr16
mov
dec
hlt
in
rcrb
mov
jns
cmp
lds
pushf
xchg
popa
js,pt
xor
xor
and
mov
hlt
adc
mov
shlb
stos
loop
fbstp
cmp
pop
cmpsb
sbb
sub
jp
cmp
popf
jne
dec
data16
jns
jbe
fcmove
push
cmp
sub
push
fwait
xchg
cmp
int3
sbb
sub
ret
jmp
and
push
push
dec
fists
mov
inc
jge
pop
xor
cmp
add
pop
in
mov
jge
pop
mov
pop
fs
push
divb
jl
imul
aas
sub
mov
sarb
mov
popa
daa
add
and
dec
movsb
inc
dec
jl
pop
jbe
lods
add
sbb
clc
jp
mov
inc
push
push
sub
mov
lret
adc
outsl
adc
jae
xor
jae
xchg
gs
push
loop
mov
jbe
pusha
sub
or
inc
mov
into
mov
lret
es
lods
push
shlb
scas
test
mov
cmp
jge
xor
int
or
aaa
aaa
mov
out
cmp
in
mov
andl
ljmp
outsb
lods
insb
push
sbb
vpshaw
xor
xchg
add
and
scas
adc
sub
aas
mov
add
lods
mov
add
pushf
add
sub
mov
mov
es
cld
aam
daa
or
mov
lds
mov
or
adc
mov
ss
mov
jmp
sbb
pop
in
mov
cmpsb
sub
dec
pop
jnp
pop
add
adc
sub
aaa
mov
xchg
pusha
loope
jge
out
cmpsb
cmp
inc
mov
lret
add
jecxz
outsb
and
xor
test
aaa
clc
push
jp
push
xlat
test
dec
gs
cwtl
pusha
insl
ljmp
outsl
pusha
and
addr16
jnp
in
lds
imul
cld
mov
add
xor
inc
dec
inc
mov
sbb
dec
push
mov
and
aad
mov
mov
shlb
loopne
jnp
ljmp
sbb
xchg
pusha
push
lea
and
inc
pop
stos
fstpl
nop
or
push
jmp
pop
mov
jns
or
and
jnp
push
cmc
clc
sub
add
insl
ret
lea
sbb
mov
adc
lret
mov
dec
pushf
inc
mov
push
bound
test
je
lahf
bound
xor
daa
dec
popf
bound
mov
in
decl
fwait
sub
outsl
mov
out
sub
push
or
sahf
xor
dec
out
fists
pushf
popa
aad
mov
inc
dec
lods
imul
or
push
dec
pop
imul
or
in
adcb
pop
and
mov
stos
push
pop
push
adc
xchg
or
sub
outsb
pop
xor
daa
jns
push
mov
pop
outsb
testb
mov
pop
data16
push
dec
or
jg
into
pop
mov
popa
cmpsl
sub
adc
jmp
sbb
repz
es
and
push
aas
movlps
or
mov
aas
push
and
dec
ljmp
int
xor
mov
cmpsb
cmp
adc
push
je
sbb
sub
fcmovu
imul
sti
movsb
adc
lods
fmull
daa
test
aaa
xchg
and
aas
jg
loopne
out
ja
sarb
fdiv
stc
lods
inc
push
and
mov
add
inc
pop
fadd
repz
adc
dec
inc
mov
fs
mov
ljmp
es
sub
mov
das
jns
test
addr16
mov
pop
xchg
fists
xchg
xor
sub
sub
mov
mov
add
scas
adc
clc
jl
jl
dec
insl
xor
mov
jbe
nop
int
mov
ficompl
je
inc
push
or
cmc
icebp
mov
and
mov
cmp
cmp
or
xchg
xchg
lret
lret
ljmp
jecxz
test
pop
and
cmp
pop
fs
jle
jle
mov
push
inc
and
bound
adc
mov
scas
mov
pop
mov
js
and
imul
sbb
test
or
adc
les
aam
sbb
mov
cld
xchg
gs
imul
sti
sahf
icebp
fs
dec
xor
sahf
mov
in
mov
and
jbe
jg
pop
pusha
pop
movsl
adc
xor
sub
xchg
test
and
and
jns
mov
addr16
sarb
adc
push
sub
add
xor
stos
int3
aad
fldl2t
outsl
mov
add
inc
jbe
stos
les
iret
enter
stos
outsl
mov
sbb
sbb
enter
sub
and
xchg
sbb
repz
push
mov
imul
sub
or
popa
mov
push
jbe
jg
add
inc
lods
push
out
or
inc
mov
daa
fld
mov
pop
xchg
xchg
es
cs
jb
test
push
lods
les
mov
xchg
pop
movsb
rorl
xlat
idivb
jg
ss
and
aam
push
mov
push
mov
dec
mov
out
jge
xor
movsl
jne
mov
cmpsl
sbb
mov
inc
popf
ret
loop
outsl
test
lods
cmpsl
jp
pop
jl,pt
push
jno
dec
cmp
popa
sub
add
mov
jbe
loopne
int
lea
push
push
mov
sahf
lock
inc
cmpsl
add
dec
cmp
movsb
int
pop
mov
push
pop
jecxz
out
jbe
adc
fs
jno
inc
fnsave
bound
ret
outsl
dec
add
mov
and
js
lods
add
dec
cmpsl
cmp
mov
jno
out
jge
dec
xlat
insl
jge
sub
out
pusha
stos
fisttpl
jbe
fnstsw
testl
ffreep
dec
pop
mov
data16
add
xor
adcb
inc
pop
dec
filds
jge
inc
push
add
lods
gs
sbb
stos
pop
sbb
sub
xchg
mov
mov
popf
lds
movsb
cmpsb
addr16
cmp
add
out
outsl
imul
mov
fwait
out
and
das
in
pop
data16
dec
and
lods
fldt
les
scas
jmp
jge
lock
out
ret
sbb
lock
lret
punpckldq
mov
imul
or
ds
popa
xchg
sarb
pop
dec
add
in
mov
lods
fwait
mov
push
iret
lods
enter
idivb
pushf
jp
pop
adc
pusha
jbe
or
push
js
push
lea
pop
sbb
mov
js
and
sub
xchg
inc
xor
clc
pop
or
push
and
test
stc
sub
dec
subl
and
fisttpll
mov
shrl
das
cmp
lds
push
xchg
xor
mov
mov
dec
mov
xor
pminub
mov
in
push
and
movsb
adc
adc
push
add
and
jle
or
fisttpl
cmp
sbb
inc
test
imul
xchg
loop
xchg
adc
bound
sub
or
push
mov
jp
jnp
sub
dec
into
popa
rdmsr
or
push
aaa
or
xor
in
fistps
pop
xchg
dec
cmc
sub
add
test
pop
sub
mov
dec
ljmp
dec
adc
inc
cmpsb
aad
mov
pop
clc
pop
fiaddl
pusha
pusha
cmpsb
adc
push
adcb
test
das
addr16
test
cmp
and
add
faddl
inc
mov
iret
insl
dec
mov
xchg
lret
dec
mov
and
test
or
push
lret
imul
nop
lods
repz
clc
dec
jle
cld
push
sbb
insb
mov
lods
pop
mov
test
jp
test
sarl
xorb
mov
mov
mov
push
dec
jmp
rol
stos
sahf
xchg
xor
sub
movsb
dec
icebp
push
push
inc
xchg
in
inc
insb
and
movsb
das
lock
popa
jne
xchg
cli
sahf
mov
mov
inc
dec
pop
xchg
mov
insl
ja
call
fdivrl
sbb
cmp
pop
into
mov
repnz
jns
mov
lods
push
xchg
adc
or
jle
and
inc
arpl
imul
xchg
arpl
popa
mov
xchg
sub
mov
xchg
scas
mov
inc
andl
iret
mov
cmp
jbe
add
insb
dec
xor
xchg
inc
pop
test
fs
adc
in
adc
nop
lret
jle
push
mov
hlt
in
sub
mov
cmpsl
sbb
adc
jge
inc
push
xchg
fwait
inc
pop
inc
or
push
xchg
inc
shlb
xchg
ss
jge
daa
sub
xor
pop
and
mov
pop
mov
xor
in
inc
sbb
sbb
shrb
pop
push
xor
pop
push
testb
addr16
mov
push
dec
in
inc
das
pop
push
dec
sbb
mov
movsb
pop
push
mov
pop
jp
xchg
arpl
insl
jnp
mov
mov
push
sub
out
push
stos
pop
jecxz
je
call
mov
inc
push
mov
jnp
and
push
pop
in
sbb
sub
stos
sarl
jl
pop
dec
data16
es
add
push
inc
push
or
das
dec
dec
fists
xchg
jle
test
mov
sub
fdivrs
mov
inc
adc
lods
test
mov
ret
dec
mov
mov
sbb
popa
mov
es
xchg
inc
push
xchg
rclb
inc
mov
aam
movsl
mov
popa
cmc
test
fdivrl
test
xor
shl
push
lret
and
movsl
sub
lock
cmp
leave
dec
cmp
test
in
pop
jmp
sbbb
add
lahf
orl
xor
jae
std
jne
loop
xlat
mov
pushl
mov
jg
dec
lret
into
mov
push
aas
pop
bound
jp
jno
xchg
adc
ret
ret
jns
cmp
dec
stos
dec
fsubs
sub
fildll
pop
icebp
jge
pop
mov
dec
jne
inc
inc
push
mov
bound
mov
sbb
mov
pop
call
xchg
xchg
and
es
in
stos
mov
xor
push
mov
loope
fld
xchg
mov
sub
mov
mov
push
jmp
xchg
jns
jg
and
je
add
pop
or
shrb
inc
std
adc
popf
sahf
data16
sahf
and
cmpl
mov
or
cmp
aam
cmp
les
cltd
gs
inc
mov
and
cmp
decl
into
lods
sbb
or
xchg
ljmp
leave
push
xchg
mov
pop
mov
sub
push
pusha
mov
ds
cmpsl
mov
mov
mov
lods
fs
push
xor
cmp
jg
gs
imul
mov
pop
lods
leave
pop
mov
sub
sti
pop
mov
ds
xchg
hlt
dec
push
push
ljmp
fmuls
cmp
mov
lds
scas
sub
inc
sahf
or
mov
mov
bnd
push
mov
sub
js
jl
mov
jno
inc
mov
inc
cmpsb
lahf
fs
loopne
cltd
pop
add
cmpsb
jnp
add
test
dec
imul
dec
pop
inc
push
and
and
dec
scas
push
out
je
push
pop
movlps
stc
fwait
rorl
out
xchg
jl
pop
popf
lock
imul
incb
jg
ja
adc
out
dec
add
dec
inc
nop
fisubrs
repz
and
mov
hlt
shll
inc
add
fidivrs
pushf
cwtl
pop
lret
gs
cs
je
cmpsb
das
xor
fcmovnbe
sbb
pusha
pop
outsl
je
std
jno
and
xchg
and
inc
into
dec
cmp
movsl
jne
out
out
fwait
jge
push
pop
mov
imul
fs
xchg
test
rcr
and
or
lret
lock
cmp
aaa
fimuls
aas
iret
lods
mov
jle
sahf
jge
mov
add
sbb
xchg
cwtl
jno
aam
jp
add
stc
adc
adc
mov
pop
mov
dec
adc
in
mov
sub
les
arpl
std
mov
push
jo
test
dec
call
xor
lret
and
dec
rcrb
push
movsl
loopne
mov
mov
xchg
mov
movsl
enter
lods
adc
notb
je
imul
mov
ja
mov
addr16
leave
cmp
lret
dec
or
das
sbb
call
mov
das
outsl
sbb
aas
add
enter
sub
pusha
lcall
pop
xorl
sarb
or
add
fdivrl
imul
xor
sbb
movsl
dec
sbb
pop
sahf
out
jns
cmc
notb
mov
jcxz
imul
cmc
gs
and
lods
mov
shr
pop
imul
add
cmp
inc
and
lea
cmp
mov
mov
out
inc
sub
fsts
jb
inc
stos
adc
frstor
pushf
out
xchg
xchg
inc
inc
clc
call
mov
and
xor
xor
rorb
inc
xchg
adc
push
xchg
inc
scas
dec
icebp
inc
test
or
scas
outsl
scas
mov
mov
into
mov
orb
push
pop
ljmp
add
mov
mov
or
out
xor
mov
xchg
mov
push
les
out
test
push
xor
cmp
lret
stc
jne
les
jp
pushf
push
ljmp
int
xchg
push
push
jb
test
dec
and
dec
add
hlt
repz
push
mov
pop
nop
inc
addb
mov
xor
mov
aaa
outsb
in
adc
cwtl
mov
pop
or
mov
mov
sub
sub
xchg
hlt
push
push
iret
sbb
jle
std
cmp
adc
add
push
outsb
stc
outsb
shrl
mov
lods
insb
and
push
push
aad
sbb
push
and
adc
cmp
push
sub
stos
or
sbb
pop
incb
push
mov
fs
in
sbb
loopne
cmpsb
xor
scas
outsb
push
test
mov
inc
scas
aas
xchg
popf
push
adc
in
dec
dec
out
mov
shlb
and
outsb
cmp
cmp
or
jae
sub
jnp
popf
mov
push
ljmp
xchg
ret
mov
jecxz
hlt
cs
int3
subb
sahf
dec
mov
push
out
jp
and
mov
stos
jmp
movsl
repnz
dec
pop
hlt
inc
xchg
push
imul
fistl
xor
sbb
mov
push
sbb
aaa
cmpsb
aad
outsb
mov
iret
cmp
insb
out
pop
sub
mov
subl
pop
mov
mov
and
cmp
hlt
adc
or
ds
pop
in
jo
and
xchg
je
lods
test
mov
push
flds
ja
insb
cmp
roll
mov
aaa
cltd
xor
dec
adc
std
lret
ds
jge
mov
mulb
inc
jp
lcall
sti
jecxz
jp
cli
incb
push
std
sbb
add
shll
aam
xor
std
jno
shrb
mov
loope
pop
mov
fs
pop
and
imul
mov
xchg
xchg
cltd
imul
xchg
loopne
test
and
jns
dec
cltd
xor
jae
mov
pop
div
pusha
dec
pop
test
push
dec
mov
jle
dec
push
push
hlt
dec
inc
pop
add
mov
inc
inc
add
out
xlat
xchg
addl
lret
pop
mov
push
pop
mov
cmp
loop
mov
incb
xchg
xor
push
outsl
in
sub
mov
jno
jg
adc
cmp
outsl
mov
dec
dec
inc
push
out
xchg
movsb
inc
dec
cmpsb
xor
mov
aas
pushf
lret
les
push
jmp
jo
inc
mov
push
cwtl
ja
jo
sbb
cmpsb
gs
xor
inc
adc
mov
push
aam
iret
lea
pop
imul
mov
fs
jnp
xor
mov
bound
test
sub
fs
icebp
jb
xchg
inc
in
mov
enter
xor
xor
stos
push
or
fcoml
sbb
jb
scas
leave
jp
push
scas
insl
inc
pop
fs
stos
lahf
sub
mov
imul
pop
mov
lock
mov
cli
fistpll
xor
add
dec
cmp
mov
or
ds
cs
std
inc
outsl
ss
dec
fs
shrb
push
loop
popa
mov
add
cmp
pop
push
and
ret
add
jno
mov
and
sbb
call
sbb
in
jns
and
ficomps
adc
jge
gs
andb
sub
test
outsb
pop
outsl
add
enter
fwait
push
sbb
push
aam
stos
out
in
add
push
pop
and
push
mov
call
insb
std
xchg
xchg
cmp
pop
and
jo
cmp
add
js
pop
and
cwtl
add
dec
imul
daa
pop
mov
shlb
aas
mov
call
push
rorb
imul
push
addr16
jg
sahf
cmp
mov
pop
fnstcw
mov
mov
or
rcr
loopne
inc
xor
test
pusha
fisubs
cltd
mov
dec
sbb
or
fimuls
popf
jns
in
push
outsl
sub
stos
xor
push
lret
hlt
jo
or
adcl
in
insl
sbb
dec
or
and
fwait
mov
sbb
dec
and
add
sarl
xchg
outsl
jg
mov
jns
insl
or
out
mov
sbb
imul
sbb
dec
xchg
cli
mov
in
cmc
inc
sar
test
fadds
daa
ret
push
xor
movsl
sbb
hlt
adcb
push
gs
ficomps
xor
fisttpl
jno
dec
push
xchg
add
mov
addr16
cmp
sbb
and
icebp
jmp
or
sahf
les
push
and
adc
dec
fsubs
ds
add
cltd
in
xor
stos
xchg
das
fwait
pop
fistps
xor
jmp
aaa
into
mov
xchg
mov
lret
dec
push
push
cmpsb
jg
ja
fdivrl
mov
inc
mov
push
xlat
push
sub
sbb
adc
sbbl
pop
sub
scas
repnz
pop
add
dec
movsb
in
loopne
fs
rcrl
cmp
dec
cmc
jns
jae
cmpsl
adc
lea
arpl
call
fcmovne
dec
or
jb
fwait
lock
cmpl
test
add
sbb
push
dec
jo
cmp
push
outsb
pop
jmp
jmp
shll
xchg
addr16
ja
in
imul
mov
nop
repnz
in
insb
sub
sarl
push
mov
sub
out
rorb
sub
arpl
dec
dec
push
pop
dec
inc
push
cmpsl
scas
xchg
and
aam
mov
in
xchg
mov
mov
xchg
loopne
fdivrp
cld
push
dec
dec
push
lret
lret
lret
in
leave
ljmp
xor
in
cwtl
adc
xchg
sbb
lds
sbbl
ds
in
xor
inc
and
cld
push
or
shl
ret
mov
sbb
xchg
mov
and
int
rcr
inc
dec
cwtl
aad
dec
lds
mov
dec
cwtl
outsl
test
es
or
loope
push
xchg
mov
enter
aaa
push
xchg
cmpsb
jb
xor
test
cmpsl
jge
movsb
jae
leave
cltd
add
jle
or
hlt
xchg
popa
lea
cmpsb
in
out
inc
ljmp
popa
iret
push
xchg
enter
mov
dec
int
stos
fnsave
sub
std
ret
and
imul
inc
iret
addl
loope
inc
stos
sbb
dec
outsb
int
int
push
hlt
rolb
dec
xor
lods
jnp
stos
icebp
mov
mov
lcall
sbb
xchg
out
out
mov
in
rorb
sbb
dec
js
dec
bound
jecxz
mov
dec
jle
setge
sub
inc
sub
jge
outsl
imul
or
or
outsl
scas
in
xlat
inc
daa
jnp
mov
mov
adc
aad
mov
xor
mov
mov
mov
jge
mov
jno
in
mov
mov
lock
insl
push
js
xchg
push
mov
std
cs
push
outsl
popa
loop,pn
fwait
push
arpl
ss
aam
push
ret
rcrl
add
aam
call
ret
jecxz
outsl
aaa
mov
arpl
push
mov
je
aam
mov
xchg
dec
cld
testl
pop
mov
inc
pusha
push
adcb
mov
xor
pop
andb
cmp
leave
cmp
add
lods
mov
jp
inc
movsb
stos
mov
loope
movsl
sbb
xlat
sbb
das
mov
out
jae
mov
mov
pop
mov
jbe
lock
cld
add
int
inc
addl
xor
movsb
add
test
xor
inc
mov
dec
dec
int3
sub
sbb
dec
pop
imul
shll
sbbl
sub
cmp
jge
inc
mov
dec
xchg
mov
xlat
cwtl
cmpb
arpl
into
cmp
jl
jns
loopew
pushf
cmpsb
aaa
sbb
cs
outsl
pop
jecxz
and
pop
loopne
mov
sti
sbb
insb
cwtl
popf
push
loope
aam
dec
mov
fadds
sub
xchg
dec
punpckhdq
cmpsl
xlat
sbb
aam
cli
or
rclb
sub
repz
push
test
pop
imul
fbld
insb
mov
dec
cmovne
nop
das
addr16
dec
cmp
jle
sbb
sub
add
jne,pt
sbb
xor
dec
cld
mov
loope
js
lret
ljmp
xor
adc
je
out
mov
adc
sub
inc
mov
aam
xchg
pop
imul
dec
hlt
jg
movsl
lock
shr
cmpsl
jecxz
call
mov
xorl
scas
adc
xor
popa
dec
add
sub
lods
dec
xor
les
adc
in
stc
and
notb
pop
xor
xchg
jmp
mov
pop
icebp
dec
movsb
icebp
mov
mov
lods
sub
ret
sti
out
mov
lret
dec
sbb
inc
fistl
mov
scas
pusha
imul
xchg
iret
addr16
jl
jae
out
test
inc
into
mov
xchg
imul
mov
pop
and
jle
cli
mov
mov
outsl
cmp
jno
mov
mov
sti
mov
cmp
sbbl
xchg
cmp
dec
xor
push
ds
dec
xor
jge
mov
adc
xor
lcall
cmpb
push
xor
cld
jo
dec
xlat
pop
imul
test
loopne
pop
ljmp
fistpll
inc
loope,pt
dec
stos
scas
test
enter
mov
push
xor
pop
clc
cmp
pop
adc
jne
pop
push
xchg
pop
movsl
bound
imul
loope
xchg
das
push
test
call
iret
xchg
add
push
mov
fwait
in
movsl
loop
addr16
push
inc
mull
cmc
lds
imul
lods
push
mov
xor
and
mov
mov
add
in
pop
mov
push
sbb
andl
mov
test
inc
jl
test
pop
mov
pop
push
lods
push
mov
pop
cmp
add
pop
insl
cltd
int3
lret
bound
inc
stos
fs
clc
fdivrs
and
jbe
mov
sub
stos
outsl
ja
or
add
push
pop
xor
leave
cwtl
fmuls
into
es
pusha
cltd
xor
jbe
loopne
pop
mov
sbb
cmp
lods
sti
cmp
and
mov
pushf
cmp
es
negl
daa
jae
popa
sub
negl
out
shrl
lods
divb
push
mov
fs
insb
clc
ret
sahf
dec
mov
ret
lahf
gs
aad
testb
push
lahf
push
cld
imul
js
jle
xchg
insb
stos
pushl
add
sub
icebp
jnp
xor
popa
mov
lods
mov
push
push
jo
mov
xor
movb
mov
seto
push
jg
ror
pop
inc
lcall
and
push
insl
sub
xor
cmp
ret
adc
stos
int3
stc
mov
sub
lods
je
ret
arpl
fucomp
mov
ljmp
adc
pop
sbb
push
cmp
jbe
mov
sti
rcrl
sub
fnstcw
xor
push
scas
mov
in
mov
mov
jno
push
add
hlt
test
inc
and
xor
mov
mov
inc
icebp
sub
jmp
ds
fdivrs
pop
adc
icebp
push
loope
jl
xor
jbe
gs
fstl
sbb
pop
ss
push
inc
ljmp
pop
sbb
lret
fnstenv
xchg
testb
aaa
repnz
mov
push
mov
jl
dec
mov
gs
jl
push
add
test
ss
sbb
imul
repz
movsl
stos
movsl
lock
hlt
push
pop
add
xchg
aaa
cmp
xchg
call
aam
sub
cmpsl
pop
push
popf
insb
sub
aad
mull
lods
out
in
sbb
enter
sbb
jae
mov
dec
dec
add
jmp
xchg
jg
or
jl
inc
push
sbb
repz
jae
adc
sti
and
add
inc
mov
inc
insl
pop
jge
loop
pop
sub
pop
insb
inc
movsb
push
pushf
push
fs
pop
mov
jmp
adc
mov
mov
es
in
inc
fmul
and
pushf
hlt
sbb
imul
mov
nop
push
and
out
int3
inc
fisubrs
lds
adc
fists
sub
mov
out
rclb
pop
dec
cmpsb
add
rcrb
pop
aam
xchg
mov
sub
mov
sub
or
movsb
ret
mov
push
jbe
flds
jecxz
imul
sti
pusha
clc
mov
push
aam
xchg
movsb
dec
nop
pop
and
push
xor
sti
sbb
loope
mov
cltd
adc
dec
out
dec
int3
into
push
nop
xor
dec
divl
movsb
mov
popf
adc
mov
inc
lcall
mov
inc
add
xor
mov
hlt
sub
mov
stos
adc
cmp
mov
pop
inc
mov
in
adc
dec
cmp
mov
mov
pop
sub
sbb
fs
mov
cld
or
jmp
test
sbb
into
mov
arpl
jg
dec
push
aaa
sub
and
jnp
out
fsubl
popa
adc
push
push
sbb
or
shlb
rcr
sahf
sub
das
cld
arpl
inc
shr
push
into
js
inc
cmpsb
int
sub
xor
sub
adc
sarb
jb
fwait
mov
sbb
cli
xor
xor
sbb
or
sub
pop
jmp
aas
dec
fiadds
aas
jecxz
dec
arpl
test
jg
sti
xchg
cmpb
sub
push
inc
repz
icebp
push
lsl
sub
push
stos
push
push
jb
dec
or
pop
dec
xor
sub
dec
pop
ljmp
loope
lock
xor
sub
cli
cmp
std
add
pop
xor
jl
or
roll
push
fstpt
cmp
es
mov
mov
clc
xchg
int3
outsl
jl
cmp
push
cmpsb
push
mov
sbb
repnz
loope
mov
mov
mov
hlt
call
daa
mov
das
jle
cmpsb
pop
sub
or
cli
pop
ss
in
mov
dec
data16
ljmp
and
xor
xchg
out
mov
cwtl
xchg
ja
cmpsb
cmp
movsb
movsb
sub
jnp
outsb
sub
push
sbb
in
sub
xor
mov
stc
dec
jb
cmp
lods
push
inc
push
pusha
lcall
and
jecxz
int
out
xchg
jae
push
je
sti
dec
js
jle
push
push
rclb
adc
inc
push
or
test
dec
and
out
mov
andl
xor
dec
lods
rorb
in
daa
jmp
test
leave
or
fimuls
xchg
enter
fcmovnbe
cld
fs
js
std
outsb
ja
cli
push
dec
dec
or
shl
dec
pop
jb
dec
hlt
push
push
ret
push
inc
cmp
pop
std
pop
cmp
inc
leave
mov
sub
mov
testl
jns
cmp
push
hlt
pop
xchg
inc
mov
inc
jno
test
rep
outsb
push
rolb
cmpl
xor
cmp
leave
out
mov
push
adc
xor
pop
popa
aam
sahf
jp
sub
rcll
mov
aas
xchg
bound
xchg
ds
jb
push
pop
loop
pop
cmpsl
xchg
outsb
imul
cltd
decb
or
xor
mov
xchg
orl
into
or
cmp
jne
out
jmp
jl
pop
cld
xchg
test
imul
repnz
push
push
dec
mov
pop
sub
lods
and
push
cmp
lods
ja
push
mov
inc
or
mov
cld
int3
inc
pop
clc
cli
testb
cwtl
stc
movsl
gs
insl
test
xchg
je
xor
leave
insb
cs
fcomps
movsl
adc
pushf
cmp
sbb
sbb
jle
cmp
mov
sbb
dec
int3
mov
jecxz
lods
mov
std
test
sbb
cmp
cld
ss
cltd
std
fildl
sahf
mov
xchg
push
jecxz
lcall
pop
imul
push
roll
fstpt
sbb
jnp
cmc
fdiv
mov
pop
jp
cmpsl
add
xor
filds
xchg
push
xchg
lds
ret
pop
inc
aad
popa
push
xchg
out
mov
jp
dec
roll
xor
lahf
cmp
jge
adc
push
cltd
insb
xchg
jnp
push
hlt
dec
inc
mov
lods
mov
or
jnp
push
iret
inc
imul
popf
push
or
dec
pop
mov
stos
out
dec
filds
jge
rorb
dec
inc
push
dec
sti
push
add
xor
push
cld
jl
outsl
sub
jl
lods
stos
xlat
pop
cmp
sub
push
cmpsl
int
aas
xlat
push
lea
jae
arpl
scas
movsl
xchg
out
xchg
xor
xchg
mov
sbb
fcomps
push
mov
cld
cmp
out
stc
leave
xchg
movsl
inc
pop
jl
je
dec
xchg
ja
popf
jae
xor
mov
js
push
and
mov
outsl
jle
dec
je
int
jno
ss
sbb
pop
outsb
outsl
scas
icebp
scas
ds
mov
fsts
pop
sbb
mov
arpl
mov
cmpsb
mov
test
insl
xor
nop
icebp
enter
jns
enter
push
movsl
pop
cmpsl
shll
add
lret
push
cli
inc
lods
lods
jae
notb
add
pop
mov
imul
xchg
cmp
cmpsl
das
cmpl
pop
push
pop
xlat
enter
jmp
cwtl
mov
sub
inc
push
cmpsb
add
aas
jo
jo
inc
cmp
push
pop
outsb
mov
dec
popa
sbb
ret
sbb
pop
mov
cmp
sub
in
insl
sub
cwtl
pop
movsl
sub
or
sub
cmp
movsb
cmp
imul
pop
aam
ret
iret
dec
cmp
pop
jg
push
mov
mov
mov
inc
lret
jg
push
lret
pop
daa
maskmovq
idivl
mov
js
iret
push
push
nop
mov
outsl
aaa
fs
jge
adc
fwait
loopne
mov
divl
out
shrb
and
repz
cmp
xchg
sbb
inc
push
arpl
cld
sbb
add
push
and
es
adc
out
jb
and
fwait
push
lcall
outsb
cmp
test
fidivrs
adc
ja
adc
jbe
push
js
or
mov
je
data16
sub
cmpl
icebp
adc
ss
pop
loope
test
and
aam
loope
mov
and
lret
ret
scas
mov
fstl
dec
jmp
cmp
scas
fwait
mov
rorb
fistpll
xchg
pop
mov
subl
sbb
mov
push
mov
notb
push
stos
addr16
out
pusha
insb
xchg
addr16
mov
rol
aaa
in
mov
lods
push
je
cmp
push
cmpsl
inc
sbb
dec
add
cltd
pop
sub
sbb
rcll
push
xor
mov
mov
js
and
push
je
dec
mov
ret
sub
fildl
lods
into
imul
test
enter
jge
out
mov
sbb
xchg
in
loope
rolb
test
in
std
push
push
dec
pop
push
xor
sahf
imul
pop
mov
xchg
mov
mov
mov
aad
jecxz
call
xchg
xchg
add
mov
inc
movl
jl
into
cmp
movsb
cmp
cmp
adc
sbb
hlt
loope
out
and
cld
add
mov
stc
xchg
fiaddl
dec
or
and
imul
mov
out
mov
mov
push
lret
inc
mov
loop
xchg
push
fwait
sbb
stc
out
xchg
fstps
icebp
push
mov
pushf
sti
std
dec
pop
dec
inc
adc
pop
inc
insb
xor
stos
and
sarl
cmp
jmp
jl
fcoms
push
sbb
push
inc
stc
ficoml
dec
mov
dec
outsb
stos
jmp
lock
test
mov
outsl
mov
sti
lahf
leave
arpl
into
jecxz
jno
jne
aaa
imul
add
xchg
xor
xchg
jo
shl
mov
dec
adc
sbb
out
cmp
mov
lea
dec
arpl
cmp
in
inc
scas
divl
pushl
test
jmp
mov
jmp
jg
adc
pop
jle
stos
addl
push
bound
mov
dec
adc
mov
mov
mov
sbb
mov
stos
mov
stos
push
test
inc
xlat
fwait
jno
lcall
pushl
stos
push
inc
pop
cltd
sbb
pop
out
inc
data16
xchg
pop
sbb
sub
call
movsb
int3
call
rol
ljmp
stos
or
pop
inc
call
or
scas
xor
push
iret
dec
inc
jp
inc
xor
inc
adc
jnp
jb
stc
jno
or
jle
xchg
lods
fmuls
int
push
in
mov
or
das
inc
adc
add
adc
pop
dec
mov
xor
adc
fstl
mov
push
xor
popa
mov
mov
loope
dec
cmp
out
cmpl
stc
mov
jmp
jge
xor
add
or
movsb
pop
sbb
lock
sub
leave
inc
mov
shlb
imul
mov
imul
outsb
iret
or
mov
cmpsb
fidivrs
sbb
adc
js
movsb
or
mov
push
mov
cltd
pusha
js
mov
add
into
sbb
or
ss
pop
in
pop
stos
movsb
jle,pt
mov
mov
xchg
and
leave
idivb
xchg
in
pop
repz
into
jmp
data16
mov
rcll
in
hlt
xor
jl
imul
push
fimull
mov
inc
or
pop
lods
and
aam
sbbb
cmp
cmp
cmp
fimuls
sbb
pop
js
xchg
mov
nop
outsb
xchg
jp
sub
xchg
dec
lret
inc
in
loope
pop
movsb
cs
push
jle
xchg
or
scas
je
insb
bound
lock
in
push
ja
sub
add
scas
jae
je
lret
dec
hlt
lcall
mov
sub
cmp
push
loopw
inc
daa
mov
gs
xchg
out
sub
jb
mov
adc
in
fcmovnb
outsl
push
mov
test
jno
fs
dec
mov
cmpsb
fwait
pop
jge
lret
push
inc
xor
out
pop
stos
mov
and
call
mov
jns
arpl
adc
push
insb
jo
ds
popa
xor
ret
push
mov
mov
xor
push
xlat
mov
popf
pop
mov
xchg
mov
sbb
clc
sbb
movsl
jecxz
adc
in
int
outsb
mov
and
pop
in
or
push
test
jmp
mov
arpl
or
lock
test
or
sub
dec
std
ret
jge
test
push
sbb
xchg
rorb
imul
ficompl
outsb
stos
popa
out
xor
pop
cmp
sbb
fwait
aaa
adc
mov
imul
adc
stos
xor
lret
es
xlat
push
movsl
sub
cli
pop
ljmp
dec
ds
nop
arpl
dec
ds
jbe
or
adc
xchg
ret
push
in
sahf
dec
mov
rorb
push
imul
jl
sbb
aad
or
push
pop
mov
cmp
inc
pusha
insl
arpl
loope
ror
scas
add
pop
mov
mov
popa
je
imul
mov
inc
jno
jle
lcall
pop
and
cmpsl
cs
push
mov
sbb
loop
call
pop
add
and
aas
mov
and
shlb
xor
sbb
push
les
mov
idiv
mov
xchg
jge
aaa
aas
xchg
bound
dec
cmp
mov
xchg
jnp
stos
fidivrl
lods
mov
fucomi
push
push
dec
mov
addl
jmp
mov
and
lret
sub
stc
popf
imul
nop
pop
sbb
shrd
dec
push
ret
dec
push
fwait
jo
jne
shll
mov
push
ficompl
sub
dec
jnp
add
call
or
dec
daa
push
stc
daa
addl
push
mov
movsl
call
dec
js
mov
sub
rcl
in
mov
cmp
popa
fwait
pop
and
cmp
dec
pop
adc
jmp
cmpb
daa
inc
cltd
lods
sub
int
jne
sub
repz
jecxz
test
and
mov
fidivrs
mov
test
pop
push
pushf
pop
iret
es
bound
lods
sub
or
xchg
mov
movsl
test
enter
outsl
jb
adc
and
or
insb
cli
push
or
jle
je
shlb
xor
pop
imul
and
jecxz
mov
push
push
add
mov
adc
les
call
bound
cmp
jb
sub
mov
mov
lds
push
cld
adc
rcll
ja
lret
es
or
cmpb
push
push
mov
pop
outsb
sbb
pop
jmp
int3
lock
shll
pop
mov
inc
cld
push
bound
lock
jl
cmp
sbb
lea
test
xchg
sahf
cmp
mov
std
push
xchg
insl
test
mov
insl
dec
into
mov
dec
ds
inc
sub
mov
es
mov
stos
xor
or
pop
add
stc
mov
testl
cmp
pop
inc
add
push
mov
push
and
mov
xchg
movsl
les
and
out
cmpb
test
and
push
sbb
cmpsb
jle
outsb
push
mov
push
adc
roll
lods
mov
xor
mov
js
test
test
xchg
pop
sbb
xchg
jae
mov
jnp
into
push
test
or
push
inc
xchg
in
xchg
push
adc
push
jge
pop
mov
cmp
ret
sub
xor
fdivs
shlb
xor
adc
push
out
adc
cmp
push
and
sub
dec
inc
lods
cmp
mov
das
clc
push
sbb
push
xchg
lea
push
lret
shrl
or
movsb
inc
sbb
xchg
test
movsb
inc
adc
jno
stos
mov
je
jo
sbb
aas
adc
loope
test
outsb
jno
fidivrs
pop
push
imul
repnz
inc
dec
inc
pop
sub
test
sbb
jmp
mov
test
sbb
push
call
outsb
into
xchg
je
push
test
test
push
sarl
mov
mov
dec
cld
pop
stc
dec
outsl
pushf
pop
shlb
mov
lret
mov
sbb
inc
mov
pop
out
in
pop
jle
sub
test
inc
test
or
mov
cs
mov
fistl
adc
test
mov
cmp
insl
push
sbb
nop
mov
pusha
push
mov
mov
sbb
or
shll
push
mov
push
xchg
pop
stos
scas
mulb
stos
xor
push
push
add
addr16
test
push
xchg
shl
adc
mov
sbb
jp
addr16
sub
jnp
popa
dec
fwait
ss
cmp
add
push
xchg
mov
xor
jle
jns
sbb
and
sbb
aam
out
or
bnd
or
mov
pop
cmpsl
jg
or
mov
cmpsl
or
adc
data16
sbb
cmc
add
jae
adc
int
cmc
loope
test
pop
mov
lret
xorb
xchg
add
dec
out
in
pop
cmp
aad
cmpsl
arpl
push
pop
xchg
dec
xchg
imul
dec
notb
xor
adc
ljmp
or
sbb
cli
dec
pop
scas
jl
test
or
cmp
add
repnz
imul
inc
dec
adc
adc
imul
sbb
fwait
mov
xchg
cmpsb
inc
mov
outsl
movsb
inc
pop
ds
repnz
outsl
into
mov
sub
icebp
cltd
popf
push
je
outsl
push
sub
inc
out
je
imul
pop
xchg
sub
dec
xchg
jne
scas
cltd
pusha
push
sbb
sbb
dec
loop
movsl
out
pop
cwtl
mov
mov
xchg
addr16
and
inc
xlat
mov
or
jb
mov
mov
popa
dec
fildll
lods
in
xor
mov
imul
xchg
jge
aam
outsl
ficoms
push
addr16
mov
movsb
xor
addr16
cmp
inc
jne
aaa
adc
xchg
mov
fisubl
in
add
mov
fs
cld
mov
insb
mov
jnp
and
mov
fdivrs
add
and
jo
or
movsb
fcomps
add
insb
pop
sbb
cli
fldcw
pop
lds
push
and
ja
imul
sbb
mov
pop
pop
mov
testl
push
mov
mov
inc
cli
inc
loop
jne
lret
xor
shll
nop
add
loopne
fistps
test
pop
ljmp
cmpsb
sub
sbb
pop
fucomp
enter
push
push
gs
pop
jae
add
and
stos
repnz
cmpsb
aaa
jecxz
out
popa
lret
or
sbb
cmp
xor
adc
mov
jne
sub
mov
dec
imul
and
cmp
lods
movsb
outsl
jg
and
mov
daa
dec
adc
sbb
adc
push
mov
ljmp
adc
arpl
mov
stos
out
js
mov
lret
xchg
in
cmp
fisubrs
cld
cmp
cmc
jne
sub
shlb
xchg
pop
lods
pusha
insb
out
rcrb
ret
imul
dec
lret
dec
sub
jo
pop
xchg
mov
loopne
pop
andl
roll
js
loopne
inc
cmp
and
cmp
dec
cmp
fistpll
cmp
shlb
sub
cmp
pop
mov
xchg
outsl
lods
out
mov
mov
and
cwtl
mov
cld
jae
lods
ret
xor
pushf
pop
enter
xlat
lret
adc
ret
pop
shll
out
arpl
cmp
inc
pop
int
aas
dec
jge
cltd
push
pop
sub
xchg
insb
jnp
clc
sbb
std
jp
mov
mov
mov
mov
pop
jnp
enter
sub
adc
in
xor
hlt
lret
push
push
xchg
frstor
sub
dec
int3
inc
rorl
mov
lea
xor
jo
mov
xchg
mov
adcb
mov
outsb
jg
test
pop
sbb
dec
pop
mov
xorl
dec
push
loop
xor
fdivrl
dec
dec
test
mov
ret
in
or
inc
es
out
test
lods
sub
add
cmp
push
hlt
sbb
pxor
pop
inc
outsb
mov
addr16
repz
mov
movsb
xorl
imulb
sub
ret
or
outsb
push
adc
dec
pop
sub
into
cltd
mov
fbstp
xlat
mov
jmp
cmp
xor
mov
and
lea
add
pusha
ret
out
jg
mov
cmp
in
fcoms
inc
stos
dec
mov
inc
data16
push
fsubrl
jge
xchg
packuswb
xor
sbb
and
lcall
imul
in
dec
aaa
scas
xor
inc
fs
shlb
dec
pop
jno
int3
pop
inc
daa
pop
call
inc
sbb
arpl
sub
mov
push
mov
push
orb
xor
sbb
or
xchg
mov
push
pushf
add
lods
int3
mov
je
add
loop
sbb
insl
out
and
pop
lahf
shrb
shrb
jnp
add
es
xchg
es
ja
xor
sub
cmpsl
pop
ljmp
cmp
arpl
or
xor
test
push
and
iret
int3
enter
dec
xlat
mov
mov
ret
ds
dec
xchg
stos
cmp
mov
and
cmp
cmp
mov
popa
cmp
gs
popa
cltd
cmp
andb
dec
insb
mov
and
cltd
dec
cmp
fiadds
pop
cs
movsb
add
xchg
addr16
andl
pop
fldenv
add
adc
insl
stos
rorb
inc
pop
adc
push
mov
cmpsb
js
jmp
dec
scas
leave
lds
fiaddl
test
push
mov
test
out
dec
imul
xchg
lret
sti
pop
in
dec
sub
jb
aad
jne
push
push
dec
cmp
mov
js
pop
jno
pop
sti
xchg
loopne
xor
push
je
sub
lret
push
mov
mov
cmp
daa
mov
xor
push
jb
dec
and
js
insb
xor
arpl
decl
rcrb
test
fildll
and
enter
and
jp
xchg
xchg
or
push
or
rolb
xchg
push
repz
add
adc
popf
xor
js
lahf
jl
imul
addl
add
movq
popf
hlt
add
cld
pop
adc
sub
jmp
mov
jmp
out
xchg
xchg
and
mov
clc
add
dec
popa
stos
mov
cmc
adc
fildll
dec
jne
mov
sbb
push
adc
mov
lock
call
lea
mov
stos
dec
sub
cwtl
loopne
jbe
pop
mov
dec
or
gs
idiv
jmp
mov
out
mov
int
push
int
nop
jl
popf
adc
or
sbb
jmp
dec
and
mov
mov
dec
sbb
dec
mov
sub
cmpsl
sbb
movsb
es
enter
in
sarb
add
pop
mov
sbb
dec
mov
mov
cmp
mov
lods
movsl
pop
mov
add
aam
dec
cmpsb
sarl
mov
mov
gs
fldl
subps
pop
adc
out
movsl
mov
xor
outsl
mov
fiadds
sub
inc
mov
js
push
add
add
hlt
pop
dec
mov
pop
lcall
dec
jnp
xor
mov
mov
je
sub
mov
ja
sbb
add
lret
cmp
pop
cwtl
add
aad
cmpsl
sbb
mov
inc
int3
rclb
xchg
push
or
push
mov
movsl
call
sub
sub
mov
jo
ljmp
push
and
pop
xchg
inc
fstl
dec
dec
mov
xor
inc
ljmp
mov
into
fs
sbb
sbb
test
cmp
jecxz
push
adc
pop
hlt
bound
dec
pop
clc
cmpsl
inc
daa
adc
pop
imul
int
add
das
mov
lds
test
mov
pop
xchg
inc
inc
and
dec
loopne
popa
ja
push
ds
jnp
or
xchg
adc
dec
sbb
inc
test
xlat
inc
out
fisttpl
xchg
push
push
ret
pop
jp
inc
mov
sbb
rcll
jl
push
pop
aaa
repnz
mov
mov
adc
push
in
push
and
xchg
or
fcmovnbe
push
mov
cmp
push
das
ja
lret
jmp
mov
push
fsubrl
sub
jle
cmp
std
lret
das
aad
dec
push
out
xchg
mov
cmpsl
push
clc
xchg
push
stos
jae
push
test
push
sahf
mov
movsb
sub
popf
mov
and
clc
mov
add
andl
and
mov
dec
lods
or
mov
jo
push
jl
pusha
sbb
jae
sbb
inc
std
add
nop
jl
or
inc
cld
and
mov
cli
ljmp
out
lds
pop
or
pop
mov
nop
jno
xor
mov
cmp
je
mov
je
adc
xor
xchg
pop
mov
pop
test
xor
mov
mov
sbb
ljmp
std
leave
mov
fnstsw
or
mov
or
push
hlt
jns
lock
into
jg
and
pop
dec
unpckhps
cmpsl
lret
cmpsl
and
orl
dec
xor
mov
daa
inc
cwtl
outsl
dec
test
mov
test
jae
adc
das
and
mov
xchg
push
cmpsl
xchg
xchg
and
out
add
stos
xlat
rorb
fwait
neg
dec
xchg
jp
pop
dec
jb
xchg
shrl
movsl
sbb
popa
jge
push
jle
scas
lods
mov
pop
mov
jnp
sbb
inc
adc
jnp
dec
int
decb
icebp
ljmp
test
cmpl
jne
lar
adc
je
xor
jb
sub
adc
inc
mov
sub
jl
popf
push
data16
push
decl
clc
and
push
adc
or
test
cs
push
repnz
dec
and
sahf
xor
es
mov
test
inc
cmp
or
push
add
push
xor
ds
ds
dec
xchg
dec
or
or
nop
lods
mov
loop
lock
inc
sti
mov
arpl
scas
cmp
ss
sbb
add
sub
outsb
and
adc
mov
lret
fldcw
add
loop
xchg
or
mov
out
push
jo
into
push
call
mov
sahf
cmc
hlt
outsb
mov
repnz
das
mov
or
ds
xor
stos
push
dec
jle
push
mov
xor
popa
mov
lahf
sub
fs
dec
dec
div
dec
lcall
enter
inc
movsb
nop
mov
out
dec
addl
dec
jbe
pushf
mov
daa
sub
mov
lahf
add
popf
dec
sbb
insl
popl
inc
xor
jb
fimull
bound
cmp
sub
in
jl
ljmp
push
aas
and
jge
mov
push
sbb
lahf
cltd
out
xchg
sbb
sbb
les
inc
ret
sub
cwtl
cmp
ds
fcomp
xor
imul
sub
or
mov
movsb
out
movups
dec
aad
or
xor
push
fnop
sbb
lahf
sub
and
insl
add
jns
decb
jne
fadds
movsb
or
imul
mov
sbb
push
mov
add
add
lret
adc
nop
xor
inc
push
xchg
cwtl
or
outsb
lcall
pop
cmp
sbb
dec
inc
adc
jp
and
sub
xor
loope
aam
out
test
idivb
cmp
add
jae
jne
imul
rol
aam
dec
out
shlb
fbstp
and
sahf
pop
add
add
mov
pop
imul
mov
ss
out
dec
push
push
pop
cwtl
ljmp
push
fcmovbe
adc
mov
iret
inc
ror
dec
fidivrs
adc
inc
xchg
jae
mov
sub
cmc
cs
pop
arpl
and
test
sub
pop
jne
add
mov
pop
xchg
sub
mov
in
cltd
xchg
pop
outsl
pop
data16
fildl
push
dec
inc
add
sub
lret
lret
sub
mov
in
sbb
xchg
inc
sbb
inc
lea
movsl
push
insb
dec
pop
dec
andb
mov
dec
add
insl
rcrl
mov
and
test
test
out
inc
rcrl
dec
aas
in
fwait
xchg
pop
jb
aad
sbb
imul
sbb
add
pop
out
iret
pop
jnp
push
insl
dec
lock
push
ret
sub
rolb
ss
lret
mov
cli
push
xchg
mov
inc
ja
insl
mov
je
icebp
mov
dec
xchg
adc
inc
dec
loop
cwtl
sarl
mov
insb
dec
mov
mov
pop
rcll
out
stos
call
mov
mov
sub
push
std
add
std
cmpb
mov
les
push
daa
sbb
fisttpl
mov
adc
cmp
lea
fnstenv
sub
insl
add
jno
pop
loopne
cmpsb
shll
test
std
sub
or
daa
mov
fists
sbb
loopne
mov
cmp
outsl
ja
iret
in
mov
fwait
or
pop
mov
cmp
mov
push
and
mov
xor
inc
loop
dec
scas
add
fimull
mov
inc
dec
and
mov
adc
ss
sbb
add
loop
lods
int3
sbb
jno
sbb
popa
mov
mov
out
dec
sbb
cmp
add
js
dec
ffreep
clc
fs
xlat
nop
pop
ror
repnz
push
test
fisttpll
lods
dec
outsb
sbb
gs
or
rorb
aaa
cld
gs
xor
cs
dec
stos
mov
xchg
mov
ficoms
insl
pop
not
pop
std
cltd
pop
or
push
pop
subl
mov
push
daa
dec
sti
mov
ror
mov
sahf
pop
xor
int3
arpl
ret
xor
mov
sub
sub
imul
inc
mov
fistl
fldcw
adc
pushf
push
les
pop
sub
sbb
xor
pop
pushf
pop
mov
mov
bswap
out
insl
and
test
mov
ret
icebp
cli
jecxz
push
sbb
sub
cmp
in
vmovapd
xor
push
cld
xchg
pop
fwait
xchg
cmp
daa
sub
inc
cmp
clc
mov
cmp
jmp
in
test
add
jne
js
enter
and
inc
aad
mov
fwait
ret
lcall
fnstcw
push
test
clc
sbbb
movsl
hlt
pop
and
fs
push
inc
pop
inc
mov
sub
icebp
add
sbb
xchg
cwtl
into
rorb
push
mov
mov
or
je
lock
push
insl
nop
scas
add
and
sub
clc
addr16
xor
inc
lret
ss
mov
in
jnp
cwtl
call
jb
test
jp
sbb
inc
sub
and
and
loop
scas
push
cli
jns
mov
mov
push
adc
sub
fdivrs
jae
dec
push
ja
adc
aam
popa
cmpsb
sub
and
aaa
mov
xchg
dec
orl
add
jl
adc
mov
sub
jmp
sbb
hlt
stc
test
sbb
mov
fcmovnu
pusha
jo
push
cld
sti
scas
mov
ljmp
push
mov
sbb
sti
dec
cmpsl
add
add
call
jmp
inc
out
lret
push
out
jecxz
push
outsb
subl
rorl
lahf
ljmp
scas
jmp
out
test
outsl
stos
cmpsb
es
or
xchg
jno
sbb
xor
hlt
enter
subb
and
mov
fucomi
adc
shlb
aaa
movsl
sbbl
push
dec
mov
das
cmp
sub
pop
outsl
mov
mov
or
mov
sarl
xor
pop
shrb
shll
mov
icebp
or
in
adc
and
mov
mov
mov
pop
outsb
jecxz
xchg
mov
sub
rcrl
pop
inc
mov
aad
mov
mov
cmp
and
out
mov
push
pop
movsb
xor
imul
and
aas
xchg
sub
jnp
jl
sti
loopne
jl
lahf
or
insl
inc
cmp
clc
out
stos
test
mov
mov
sbb
adc
pop
pop
call
jmp
fcompl
out
adc
int3
gs
mov
push
pop
pop
push
sti
pop
ja
fcomps
mov
cmp
pop
test
jl
jbe
mov
xor
mov
inc
inc
jp
shrb
fldenv
xchg
jae
lahf
imul
in
test
les
pop
mov
pusha
mov
sbb
fs
rcll
jmp
or
xchg
xor
jbe
pop
xlat
mov
push
inc
sbb
int
sbb
test
loop
push
push
sbb
xor
inc
add
in
jge
fisubs
notl
dec
cli
xchg
xchg
mov
xorl
sbb
dec
test
mov
pusha
mov
les
jle
repz
dec
repz
divl
mov
sbb
insl
mov
lds
imul
js
xor
pop
enter
popa
mov
mov
cltd
adc
mov
and
out
imulb
jmp
mov
push
imul
test
iret
nop
popa
outsb
in
aas
arpl
outsl
pushf
sarb
into
pop
push
mov
outsl
and
loope
hlt
insl
xor
xor
clc
push
or
push
mov
dec
popa
pop
insl
sub
gs
es
pop
inc
outsb
xchg
mov
test
inc
mov
sahf
movsb
and
pop
pop
mov
int
into
ficoml
xor
out
fwait
adc
jnp
push
stos
xchg
mov
mov
jmp
inc
sub
icebp
push
sub
push
jbe
cmpsb
xor
pop
xchg
mov
xor
push
fcoml
outsl
xor
ficoml
or
lods
push
out
sub
dec
cmp
rcrl
sti
sbb
sub
xor
orl
inc
into
dec
adc
scas
cli
jns
das
fldt
mov
lahf
aas
add
jecxz
dec
sarl
pop
pushf
mov
xchg
jbe
int3
add
mov
mov
push
push
lods
lcall
jg
sbb
xor
push
xor
mov
and
ret
inc
xor
scas
push
mov
fwait
fwait
cwtl
int
mov
sahf
adc
jbe
jp
outsb
mov
pop
pop
push
das
xchg
stc
je
hlt
sbb
ss
test
js
insb
pushf
xchg
lods
sbb
sbb
sub
in
sbb
sar
inc
ret
cmp
mov
and
pop
and
sbb
ret
inc
insb
sbb
push
clc
mov
mov
lods
jg
push
lods
mov
cmp
scas
inc
pop
lods
cmp
mov
in
test
iret
in
inc
pop
dec
aas
daa
out
int
movsl
jl
pop
stc
daa
mov
sbbb
inc
add
repz
adc
sub
mov
adc
inc
movsl
aaa
jo
sbb
out
mov
push
fnstenv
fidivl
dec
dec
fwait
cmp
push
mov
and
fwait
je
push
stos
sbb
mov
dec
add
pop
pop
push
mov
inc
cmp
sbb
mov
mov
sub
adc
jl
aam
shll
push
push
aaa
pop
lds
imul
cmp
inc
xchg
cmp
sbb
pop
outsl
arpl
int
flds
xchg
pop
push
xchg
jg
push
nop
pop
add
mov
outsl
dec
test
pop
push
sti
and
add
sub
xchg
loop
jle
jge
int
add
and
mov
fistl
mov
rcrl
mov
dec
aaa
cs
arpl
outsl
shl
push
das
nop
cli
in
pusha
inc
adc
not
cld
pushf
pop
or
pop
dec
aam
sub
pop
ja
test
stos
mov
push
imul
adc
sbb
inc
adc
or
into
cmp
jle
pop
int3
in
sar
loop
push
pop
inc
aam
add
lret
or
scas
rcrl
bound
push
imul
movsb
popf
cmpsl
sub
push
inc
arpl
cmp
sub
push
inc
pusha
test
and
lods
push
inc
xor
int3
inc
lea
movsl
mov
lcall
cmc
out
mov
inc
test
loope
loopne
push
add
push
and
mov
inc
add
push
sub
mov
mov
pop
jnp
gs
aas
popf
push
xchg
and
xchg
cli
lods
mov
movsb
sti
mov
sbb
outsl
inc
mov
add
inc
add
dec
dec
pop
es
cmp
xor
cld
pop
aas
and
lret
mov
pop
in
jae
ja
jbe
loopne
sbb
jecxz
movsl
mov
addr16
pop
pop
dec
jecxz
mov
loopne
adc
mov
mov
jl
cmpsl
sar
mov
dec
loope
fmull
fldt
fs
mov
imul
mov
stos
dec
ror
pop
cld
cmp
shlb
cmpsb
cmpsl
jmp
add
xchg
push
push
adc
or
fcompl
repz
cmpsl
sbb
aaa
inc
clc
movsb
adc
sbb
push
xchg
dec
and
enter
cmove
xor
adc
outsl
fstpl
add
push
xchg
mov
das
and
out
frndint
adc
xor
frstor
pop
inc
clc
pop
leave
jae
cmp
ss
jnp
int3
daa
add
filds
sub
js
scas
leave
test
rcrb
cmp
xchg
outsl
and
js
test
or
jp
sub
push
mov
repz
lock
insl
fs
add
dec
fnstenv
mov
or
lock
aaa
stos
push
or
mov
lods
push
xchg
arpl
xchg
scas
mov
mov
or
cmpsb
xor
add
push
inc
jl
bts
clc
cmp
mov
repz
pusha
pusha
inc
add
inc
push
mov
sub
sbb
adc
divl
lret
imul
xchg
xchg
jb
jle
fidivrl
pop
push
or
scas
jmp
lret
push
or
std
push
iret
jbe
mov
movsb
cmp
popf
fmuls
popa
icebp
pop
xorb
inc
mov
scas
jnp
xchg
cwtl
shrl
dec
xchg
out
mov
jae
sub
rclb
cmp
out
addr16
jle
push
and
dec
inc
or
outsb
add
pusha
fnsave
ret
dec
cmpsl
mov
add
jg
daa
insb
sbb
adc
mov
jmp
stos
push
or
in
mov
xor
dec
pop
xor
movsb
xchg
add
pop
cmp
lcall
mov
mov
dec
jae
pop
data16
pop
dec
iret
imul
pop
pop
icebp
cld
je
mov
mov
push
mov
shll
push
xchg
ficoms
mov
and
scas
rclb
mov
pushf
cmp
jl
xor
punpckhwd
mov
ljmp
enter
icebp
jae
or
cmp
out
outsl
pop
jl
pop
dec
pop
data16
ss
shll
pop
add
clc
dec
add
loop
push
fs
cmp
dec
sub
out
jnp
pop
xchg
mov
sub
stos
loop
adc
pop
sub
lcall
xchg
jbe
frstor
xor
out
leave
xchg
inc
sub
add
test
cmp
das
xchg
mov
jns
jg
cmc
fwait
xor
pop
les
in
movsb
pop
sbb
push
push
mov
mov
in
outsb
inc
inc
dec
incl
aaa
ljmp
sbb
adc
jle
fsubrs
cmp
adc
inc
iret
push
into
inc
mov
adc
ret
cmpsl
dec
mov
pop
xchg
push
dec
jne
int
mov
sub
pop
sub
push
scas
jge
aaa
std
test
shrw
and
jbe
daa
std
xor
outsb
in
jge
outsb
mov
dec
push
xor
add
js
mov
mov
decb
mov
pop
mov
scas
mov
sarb
or
popa
push
add
mov
pop
cmp
es
mov
insl
sbb
xor
jge
je
push
jle
inc
sub
shll
sub
xor
fwait
jecxz
and
inc
jns
and
bound
aaa
div
mov
dec
out
nop
mov
loope
arpl
fistps
inc
scas
sub
mov
push
das
inc
xor
js
pop
sub
jns
jo
push
stc
dec
jmp
enter
add
sbb
push
fmull
icebp
fiadds
popf
mov
and
test
cmp
divb
push
movb
fbstp
push
test
or
dec
insb
jmp
mov
inc
sti
push
mov
ja
xor
dec
inc
mov
cwtl
icebp
aad
mov
jo
jne
ffreep
cmp
repz
and
gs
mov
push
scas
popa
pop
int3
inc
adc
nop
sbb
leave
int3
jp
data16
cmp
sbb
mov
cmc
int
movsb
movsl
mov
xor
mov
pop
mov
ret
lods
outsl
sti
mov
and
fimuls
fcmovbe
or
lahf
cs
cmp
mov
cmp
add
adc
scas
cld
pop
mov
outsl
pop
inc
add
mov
arpl
lea
stos
and
cmpsl
and
mov
bound
fists
in
sub
insb
ds
pop
dec
sub
scas
data16
add
jecxz
out
adc
mov
into
mov
xchg
sti
imul
fbstp
sarb
xchg
xor
scas
movsb
xchg
cld
aaa
pop
dec
jle
sbbl
jecxz
sub
pusha
sbb
pop
and
mov
daa
es
xor
das
cmpsl
daa
cmpsl
mov
popa
and
fs
lods
inc
fsubrl
sti
rcrl
cmp
je
std
fiadds
test
loope
jle
mov
out
sub
sahf
push
pushf
cmp
insb
mov
fldt
gs
movsb
cmp
sub
inc
push
jle
inc
cltd
js
xor
mov
jb
mov
push
out
sbb
push
push
jbe
xor
imul
push
imul
mov
sub
dec
fcmovnb
out
rcrb
movsl
lods
mov
int
fwait
mov
cs
and
in
vmwrite
sbbb
sti
fwait
lea
mov
int
xor
je
enter
push
add
test
cmp
test
push
mov
dec
pop
mov
and
add
mov
pop
jp
jb
test
test
sub
cli
cmp
and
pop
cmp
aas
jae
dec
pop
dec
push
dec
inc
add
imul
imul
pop
repz
into
shlb
inc
imul
jg
sti
pusha
out
lods
push
adc
mov
sbb
lret
and
mov
jnp
arpl
xor
movsb
int3
sahf
inc
jmp
ljmp
or
test
inc
imul
add
jp
dec
cmp
jl
ljmp
outsb
into
mov
push
adc
pop
mov
ret
sbb
inc
add
dec
jg
inc
jmp
xchg
dec
flds
sub
aaa
lahf
mov
lcall
imul
and
in
mov
dec
jb
mov
pop
pop
add
mov
jle
pop
cltd
cmp
enter
dec
sbb
inc
fdivp
clc
mov
xchg
add
imul
psllq
jle
cmpl
push
sahf
and
popa
xchg
es
jne
fcomps
ret
lock
mov
les
test
movsb
aam
xor
adc
pop
js
mov
insl
fwait
ret
mov
push
js
gs
jnp
cmp
out
cmp
pop
scas
pushf
push
mov
push
mov
mov
das
xor
decb
repz
push
std
sti
cwtl
jle
jge
push
out
mov
in
mov
pop
pop
xlat
ss
stos
mov
sbb
push
and
push
and
dec
inc
add
mov
or
imul
and
inc
add
xchg
xchg
push
and
push
js
cmpsb
cmp
pusha
sbbl
cmp
add
and
xchg
xor
cmp
ds
jecxz
out
lahf
pop
adc
inc
pusha
cmp
dec
add
jge
loop
jo
pop
push
or
dec
mov
mov
pop
cld
js
inc
popa
aad
inc
cmp
mov
mov
je
pop
loopne
lea
data16
mov
sub
push
xor
insb
and
shr
fcoms
push
movsb
ljmp
sti
sub
insl
movsb
int
adc
pop
sub
mov
loope
pop
mov
push
jl
jns
scas
aas
pop
adc
sub
rcrl
in
es
sub
sub
sbb
mov
not
jne
mov
push
xor
dec
bound
mov
movsl
and
push
ret
insl
sub
cmc
sub
aaa
cmp
sub
enter
jge
lcall
dec
roll
imul
ljmp
jmp
scas
mov
dec
or
dec
xchg
mov
mov
fdivrs
out
push
lods
aaa
neg
fiadds
insl
mov
addr16
xor
and
jp
in
xchg
jo
xchg
mov
cmpsl
xchg
sub
pop
sbb
xchg
adc
fisttps
adc
or
loopne
imul
in
and
pop
push
bound
push
sti
sbb
aam
jl
popa
mov
js
outsb
mov
adc
mov
mov
lods
adc
adc
stos
sbb
out
pop
arpl
out
dec
xchg
cwtl
cmp
and
sbb
das
inc
loopne
fidivs
fstps
lea
sub
cmp
xchg
ret
fs
add
xchg
mov
cmpsl
sarl
lret
repnz
mov
outsl
fucom
and
add
add
and
arpl
and
lret
out
push
push
push
inc
jle
cmp
push
loopne
mov
mov
mov
cmp
test
jg
push
aad
gs
sub
pop
pop
rcrl
inc
rorl
das
les
subb
jb
das
daa
jnp
sbb
pusha
and
mov
adc
mov
mov
test
mov
adc
aas
out
fidivl
pop
pop
push
cmp
pop
aad
or
out
aas
lahf
push
in
repz
push
inc
cmc
out
pop
push
cmp
into
fimull
sbb
mov
int3
cmp
enter
add
push
dec
pop
out
mov
sub
push
mov
addb
and
movsb
xchg
push
lods
lcall
decb
pop
in
sub
pop
insb
pop
mov
fadd
jecxz
outsb
insb
pop
imul
ficoms
cmp
mov
imul
scas
adc
popa
in
dec
jno
movsb
test
pop
sbbb
xchg
and
sbb
lods
loope
add
and
movsl
dec
movsl
and
in
in
into
xor
loopne
movsb
test
fildll
bound
jo
pushf
cmc
das
outsb
sbb
and
xor
dec
pushf
xor
jnp
es
pop
insl
xorl
dec
xor
aad
out
mov
xlat
inc
cs
js
sbb
scas
ret
in
dec
and
popa
pop
dec
subl
sbb
or
lods
cmp
movsb
repnz
dec
cmpl
lret
push
out
cmc
mov
adc
aaa
dec
aam
push
pushf
sahf
inc
out
nop
pushf
jmp
inc
mov
jo
repnz
nop
pop
arpl
mov
add
shlb
or
mov
lds
sbb
sub
inc
jmp
stos
icebp
lretw
pushf
mov
mov
outsb
test
lret
mov
data16
jge
cmp
rorl
and
jp
scas
imul
inc
xor
xlat
mov
cmpsl
aas
fnstcw
jae
cmp
cmovg
pop
cli
pop
scas
adc
nop
in
and
or
inc
lret
jecxz
mov
dec
and
push
adc
ldmxcsr
sub
sub
xchg
xchg
pop
cmp
fldt
lods
mov
inc
int
push
or
lret
nop
repz
xchg
js
mov
cltd
dec
pop
push
add
cmp
jo
std
bound
sbbb
sub
pop
push
aas
mov
andps
cmp
hlt
das
aad
cmp
scas
addb
xchg
sbb
mov
mov
punpckhwd
mov
imul
cmp
stos
jnp
imul
pop
cld
xor
push
insb
mov
and
sti
out
insl
pop
add
pop
hlt
lret
leave
jg
sahf
ficoms
out
test
addr16
push
adc
addr16
lods
ljmp
mov
iret
and
fnstenv
jecxz
and
int
xchg
and
cmc
enter
sbb
lcall
xchg
lcall
data16
xor
jae
ror
mov
adc
fisubs
adc
jns
and
mov
pop
daa
cwtl
cmpb
and
cld
in
addr16
xchg
in
pop
push
bound
negb
popf
enter
ds
xchg
dec
ds
loop
lock
insb
ret
xchg
jecxz
in
lcall
pusha
in
or
jnp
push
push
mov
iret
mov
in
lods
dec
and
lods
jmp
addr16
cmp
pusha
and
addr16
jno
into
push
fadds
shrb
pop
mov
jns
data16
cmp
push
pusha
bound
rorb
sub
lcall
inc
fs
inc
inc
sbb
push
rorl
mov
cwtl
mov
jbe
push
outsb
jnp
dec
mov
cltd
jecxz
xor
pop
adc
jne
cmp
sub
scas
push
fidivs
sub
jl
int3
xchg
scas
sbb
out
insb
repnz
jge
inc
pop
js
in
insb
push
or
inc
ss
inc
gs
adc
mov
icebp
pop
fimuls
out
push
or
ds
inc
cmpsb
inc
out
loope
and
fldt
pushf
stos
imul
adc
xchg
stc
enter
push
dec
adc
shrl
mov
stc
jns
loop
jo
test
push
enter
jp
ss
aam
jae
loopne
xchg
and
push
popa
into
xlat
cmpsb
ds
sbb
and
sub
imul
inc
jecxz
pop
sub
push
insl
aaa
jle
sarl
cmp
in
adc
mov
mov
and
aad
imul
cmp
push
add
test
outsb
pop
and
jecxz
inc
loope
mov
or
call
sub
aas
lods
fnsave
mov
les
ja
data16
in
scas
pop
inc
ja
or
sub
or
pop
ret
or
push
cmp
es
clc
mov
js
pop
cmp
or
lds
sub
nop
insb
pop
push
out
into
cmpl
loopne
sub
test
insb
cs
arpl
push
and
xchg
aam
dec
popa
mov
sub
cli
or
push
cmpsl
xor
enter
aas
pop
inc
mov
into
lods
adc
inc
adc
push
adc
pop
loopne
push
adc
dec
in
mov
xor
daa
imul
insb
rcrb
out
sbb
xor
jno
ret
or
call
push
imul
rcl
fbld
push
jb
lahf
or
dec
test
cmp
arpl
pop
loop
std
pop
push
and
xor
pusha
and
into
shlb
xchg
sbb
jnp
or
cli
push
sti
mov
testl
mov
sub
shlb
movsl
xor
push
xchg
leave
rcrb
and
faddp
xor
lret
sbb
popa
bound
and
into
lret
cmpsb
push
cli
cmp
popa
movsl
sbb
mov
mov
dec
and
and
sahf
ror
stos
shrb
sbb
sub
xchg
mov
push
and
xchg
or
sub
dec
ss
mov
mov
and
jns
mov
dec
inc
jle
mov
add
sub
dec
push
xchg
or
lahf
stos
or
data16
insb
js
mov
adc
xchg
mov
push
mov
fisubrs
sbb
mov
movq
mov
sahf
in
xorl
jl
mov
xchg
shll
dec
ss
or
fwait
arpl
loope
mov
and
xchg
out
adc
ljmp
int
or
test
pop
and
inc
das
sub
test
sub
test
cmpsb
inc
insb
bound
mov
pop
mov
inc
xchg
lds
jne
jge
outsb
sbb
xor
and
or
push
insb
push
jmp
push
leave
and
and
mov
addr16
mov
jbe
loopne
mov
jnp
subl
rcrl
stos
dec
mov
insl
cmp
sti
dec
xchg
ss
inc
sub
dec
cmp
add
jbe
mov
mov
sahf
gs
and
stc
mov
fs
arpl
sub
gs
test
sub
cmp
cmp
call
leave
add
roll
std
push
jno
jnp
pusha
lret
insb
mov
mov
adc
test
aaa
sub
fisubrs
and
inc
sbb
pop
push
xchg
dec
cld
pop
fdivrs
cmp
movl
loope
cmp
repnz
insb
stos
sub
sbb
dec
orb
sub
xchg
push
fldt
enter
or
mov
mov
sub
dec
jnp
mov
dec
addr16
cmp
mov
inc
cld
and
and
pop
mov
fdivrl
in
push
add
sub
mov
mov
test
packssdw
jge
clc
inc
iret
loopne
adc
fstps
test
sar
fwait
test
dec
data16
add
pop
lcall
test
cli
sbb
push
int3
inc
adc
lea
stos
lea
mov
sahf
cmp
xchg
mov
imul
outsb
ljmp
orl
mov
loop
pushf
movsl
push
jecxz
inc
cmpsl
outsl
out
je
xchg
in
xchg
pop
xor
imul
dec
sbb
aad
mov
add
int3
xor
mov
aaa
push
inc
jae
xor
int
xchg
jl
pusha
test
mov
inc
outsl
ret
inc
xor
push
push
cmp
mov
pop
push
or
les
pop
and
shrb
inc
movsb
sub
dec
stc
scas
call
lock
dec
cs
adc
and
out
push
out
fcoml
dec
test
notrack
add
mov
dec
bound
mov
sbb
sbb
vmovss
adc
inc
cmpsb
dec
cmp
loop
push
outsb
inc
out
enter
mov
loopne
push
sbb
add
jp
push
js
and
js
push
lret
aaa
dec
addb
js
movsb
ret
cld
lods
mov
ja
mov
movsl
dec
aam
xchg
push
in
push
pop
inc
scas
dec
push
xor
mov
popa
movb
sti
pop
jbe
mov
xchg
xchg
inc
pop
cmp
or
clc
data16
dec
das
cmpb
addl
lods
sub
loope
push
addr16
movsb
sub
mov
addr16
fimull
test
fistps
cmp
int
arpl
mov
inc
or
jmp
test
sbb
mov
lahf
add
lret
sbb
in
arpl
test
push
dec
icebp
mov
movl
cmp
mov
pushf
insl
frstor
addr16
push
inc
adc
mov
push
ja
sbb
frstpm(287
cmp
and
add
cltd
stos
sub
jo
popa
pop
adc
jno
jp
cmc
ds
cli
into
jb
mov
sti
arpl
outsb
out
outsl
add
cmp
cwtl
insl
xor
mov
pop
sbb
pop
or
inc
add
jb
mov
pop
mov
cmp
test
pop
fdivrs
loope
dec
jle
sub
cmpb
sbb
out
fsubr
aam
push
add
ficompl
push
sti
sti
adc
jle
adc
pop
and
fwait
xor
xchg
pop
outsl
sbb
xor
leave
out
movsb
jl
stos
ja
test
mov
jae
mov
mov
addr16
inc
and
aaa
xchg
faddp
lret
sti
xor
jg
and
test
fnstcw
test
nopl
pop
mov
inc
fisubrl
xchg
out
loope
mov
in
push
push
lods
out
shrl
inc
mov
fwait
cld
mov
cmp
pop
pusha
daa
cmp
cmp
and
loope
int
andb
aam
jg
sub
movb
pop
out
sbb
insl
nop
push
cmp
jnp
sti
xchg
call
movsb
mov
pop
push
add
gs
aas
daa
jp
scas
test
mov
dec
pop
sub
dec
or
jae
sub
xlat
mov
loopne
and
add
loop
loope
call
test
jae
cmp
sbb
xchg
lahf
dec
enter
les
scas
je
stc
and
dec
clc
cmp
arpl
lods
or
or
pop
mov
dec
xchg
xor
dec
ret
andl
pop
cmpsl
or
shrb
stos
outsb
je
cmpb
or
push
dec
mov
push
push
dec
bnd
push
adc
pop
ffreep
inc
pop
getsec
mov
into
repz
stos
cmp
xor
fs
mov
push
sbb
push
inc
push
jnp
push
jno
mov
pop
sbb
push
push
test
cmp
and
pop
mov
das
mov
call
mov
mov
cmp
and
cltd
fwait
or
arpl
cmpsb
in
imul
push
jmp
pop
clc
lret
stos
adc
cmp
insl
xchg
push
pop
cmpsl
lcall
sbbb
clc
jmp
es
pop
int3
ss
mov
jno
and
and
stos
mov
mov
jns
mov
addr16
xor
test
cmp
sub
push
mov
ret
cmp
fbld
pop
xor
jl
xchg
fists
and
dec
xchg
pop
sarb
stos
je
mov
insb
push
adc
inc
dec
das
ss
jnp
push
push
jge
mov
mov
adc
je
lods
xor
pusha
xchg
adc
xchg
mov
mov
mov
jmp
loopne
adc
or
or
sub
jle
jno,pn
addr16
ja
pop
dec
lahf
mov
negl
or
or
mov
pop
fwait
adc
pop
lods
movsb
in
push
push
push
pusha
sub
filds
scas
test
aam
jns
dec
and
scas
flds
mov
mov
movsb
xchg
jmp
lret
lcall
mov
dec
pushf
dec
adc
lds
jne
addr16
mov
push
mov
sbb
fimull
outsb
loop
arpl
mov
sub
sub
std
xor
jbe
je
pop
adc
mov
fsubl
daa
shl
adc
xor
add
outsb
xchg
ret
mov
cmp
pusha
push
out
lods
push
dec
pop
xchg
imul
scas
sahf
jp
push
lds
pop
add
ja
insl
or
sbb
loopne
mov
pusha
loop
cmp
das
cld
fwait
xchg
cmpsb
data16
adc
dec
add
and
cmp
push
lods
mov
fwait
lret
mov
mov
cmpsl
sahf
test
fcom
shrl
into
jno
insb
test
leave
das
dec
sbb
inc
stos
fcoms
mov
jle
or
addr16
and
outsl
xchg
mov
sbb
jle
jle
popf
inc
loopne
push
scas
cmp
pop
cltd
add
popa
push
or
stos
inc
shlb
cmpsl
xor
inc
jle
jl
je
sub
movsb
xchg
jg
jg
adc
dec
nop
jne
push
loope
jle
mov
jmp
xor
push
and
negl
sub
cwtl
mov
lods
jns
mov
xor
aad
pop
cmp
pop
mov
inc
lret
mov
aam
cmp
aaa
int
inc
xor
mov
inc
fmull
fwait
jle
addr16
test
push
sub
and
movsb
lods
xchg
orl
push
cmpsb
sbb
xchg
mov
add
jl
addr16
movsb
inc
jnp
stos
xchg
int3
push
movsb
cmp
push
dec
ret
sub
js
addr16
sub
push
in
mov
push
sub
stos
or
cmpsb
lock
and
dec
and
js
and
dec
and
sarl
cmp
cld
jbe
and
out
mov
out
lds
leave
lahf
pushf
arpl
xor
cmpsl
inc
fs
repz
mov
mov
mov
lahf
xchg
sbb
cltd
out
adc
idiv
ljmp
add
cmp
push
xchg
int3
and
imul
mov
loope
adc
bound
in
inc
lods
loopne
jl
arpl
dec
cmp
xor
ja
das
and
mov
mov
hlt
dec
test
clc
lcall
cmp
test
xor
outsl
sbb
pop
lods
sub
sbb
std
pop
xchg
fdivs
fwait
sub
inc
outsl
out
and
sub
jmp
inc
xchg
fcomp
dec
xor
push
xchg
jl
adc
jb
pop
mov
pusha
gs
dec
xor
insl
sbb
inc
ss
jp
sub
and
hlt
stos
mov
pop
push
test
xchg
mov
and
pop
mov
dec
ds
and
movsl
jns
inc
loopne
mov
push
stos
pop
xor
and
cmc
repnz
sub
popa
push
loop
sbb
lods
xchg
lods
pop
mov
and
push
sbb
ljmp
xlat
jnp
pop
nop
rclb
sar
jmp
repz
adc
dec
cmp
loope
fldenv
jle
repnz
pop
inc
inc
into
push
notl
push
cmp
inc
pushf
movsl
sarl
dec
lcall
cli
cmp
shlb
stos
stos
jge
push
jle
cli
loop
push
pop
sub
mov
mov
mov
lods
sbbb
dec
sub
and
aaa
pop
mov
in
sbb
rolb
pop
jnp
mov
lods
cwtl
vpcmov
daa
push
insb
scas
dec
outsb
lcall
and
popf
push
fwait
pop
inc
pushf
cmp
jmp
inc
mov
cmp
mov
and
mov
filds
push
enter
xchg
mov
scas
adc
mov
sub
mov
pushf
gs
xchg
hlt
pop
imul
test
mov
inc
mov
mov
outsw
sahf
fs
push
loope
dec
sub
fwait
mov
movsb
cmp
mov
inc
add
lea
ljmp
mov
arpl
mov
mov
mov
adc
outsb
ds
in
inc
add
sbb
aam
hlt
lret
inc
or
and
imul
fsts
or
xor
je
not
outsl
in
cmp
gs
fsub
xor
push
pop
scas
out
add
mov
loop
mov
push
lods
xor
jle
aaa
push
dec
leave
in
leave
jbe
lock
add
pop
mov
or
or
and
jne
fdivr
sarl
js
outsw
add
mov
xor
imul
fbstp
sbb
inc
mov
clc
popf
cld
jb
daa
inc
mov
data16
pop
push
out
imul
lods
inc
push
mov
dec
push
pop
roll
cmp
or
pusha
lock
xor
mov
push
loop
cltd
adc
pop
ficoml
movsl
jbe
scas
cmp
jp
testb
sub
mov
les
lods
jae
jl
pop
test
aad
cmp
call
in
arpl
lret
andl
fwait
mov
psubd
aam
mov
pop
shll
and
dec
in
dec
fiaddl
fwait
adc
push
add
into
jne
cwtl
adc
xor
rorl
or
sbb
cmpb
pop
sbb
icebp
push
add
push
pop
je
ret
stc
sub
jno
cmp
hlt
cmc
scas
mov
add
lret
je
inc
sbb
mov
pusha
mov
daa
das
fidivs
stc
dec
inc
jnp
pop
push
lahf
pop
movsb
mov
hlt
sti
js
mov
add
hlt
jno
add
push
jbe
jle,pn
inc
das
sar
mov
aaa
int
popa
int
pop
push
adc
inc
sahf
jl
jbe
arpl
in
dec
sbb
add
mov
jmp
mov
add
popa
dec
in
lcall
arpl
mov
out
xor
aaa
pop
sub
jl
iret
shlb
jmp
or
jno
fisttps
ds
jg
jae
sub
mov
push
dec
out
jb
fs
inc
add
lret
jb
adc
mov
fldt
push
mov
cmp
outsb
add
cs
add
xchg
aaa
call
jae
into
add
dec
mov
inc
cmp
iret
test
pop
mov
jg
mov
adc
cmp
and
pop
add
arpl
sbb
pushf
pushf
sahf
icebp
xor
or
mov
mov
pushf
jmp
push
dec
imul
jmp
inc
add
test
aaa
jge
arpl
mov
aaa
inc
mov
dec
test
out
xor
popf
insl
jns
andb
and
xchg
sub
popa
mov
or
sub
pop
jge
icebp
mov
pop
and
push
xor
sub
nop
movsl
movsb
mov
popa
or
mov
mov
jo
sub
xor
sub
dec
shrl
jg
or
lock
cltd
push
fs
inc
aam
push
ss
inc
mov
mov
lods
jns
mov
jo
inc
mov
pop
push
adc
push
xchg
cmp
and
adc
outsb
xchg
daa
add
sbb
dec
outsl
mov
subb
mov
xchg
mov
sub
sbbl
mov
mov
cltd
dec
jo
cmpsl
xchg
mov
mov
lock
outsb
arpl
jge
bound
push
mov
stos
arpl
push
cmp
mov
adc
bound
xchg
test
push
inc
push
sub
xorl
gs
int3
test
cmpsl
inc
lahf
adc
cmp
out
js
dec
out
int3
jl
or
fwait
in
dec
push
push
pop
rcrl
adc
pop
ljmp
pop
sti
pop
fsts
jo
arpl
mov
xor
sub
nop
movsl
movsb
mov
popa
push
push
fbld
mov
jo
sub
xor
sub
out
fs
fdivrs
lock
movsb
in
insb
jg
or
fwait
inc
dec
lods
push
push
imul
adc
cmp
insb
jne
addr16
jg
or
mov
push
mov
je
sahf
jne
addl
mov
add
arpl
arpl
popa
sbb
push
or
test
sub
nop
in
dec
in
js
pop
mov
jns
cwtl
stos
cmp
adc
jp
out
add
je
mov
pop
add
mov
lock
xor
add
iret
or
int
or
sbb
sbb
or
lahf
pop
outsl
ja
fnstenv
mov
and
and
mov
inc
dec
aas
jns
movsb
arpl
insb
push
fs
inc
imul
sbb
std
sub
mov
mov
fcomps
dec
mov
pop
xor
inc
pop
and
xchg
addr16
rclb
repnz
out
xor
bound
lea
inc
jae
sbb
cmp
mov
add
xchg
xchg
sti
add
xor
jl
out
or
mov
cltd
mov
ljmp
xchg
lods
ficomps
pop
xorl
lret
xchg
add
stos
mov
xchg
cltd
adc
insb
dec
push
lcall
sbb
arpl
mov
xchg
inc
sti
bound
idivl
cs
sub
lret
test
add
push
mov
jg
add
sbb
and
insl
scas
cmp
jecxz
mov
sub
pop
mov
out
cltd
and
lods
cmc
in
mov
orl
sti
arpl
inc
call
sbb
iret
adc
arpl
pop
out
push
arpl
inc
pop
jl
inc
stos
jae,pn
push
jge
pop
lret
cmp
inc
lahf
lods
mov
mov
push
pop
imul
cmp
leave
mov
in
mov
inc
lea
inc
lea
jmp
clc
sbb
xchg
xchg
sub
test
je
mov
xor
mov
cmp
mov
dec
je
test
loope
inc
sbb
push
or
out
pushf
sbb
jmp
clc
pop
imul
rcl
inc
add
outsl
test
pop
orb
mov
xor
popa
push
adc
xlat
ffreep
pop
jnp
sbb
xor
icebp
mov
mov
cmpsb
adc
outsb
adc
stos
adc
jne
or
or
stos
add
lods
test
cli
cmpsl
test
fcomps
test
xor
dec
repz
add
sub
lcall
lea
mov
mov
adc
push
xchg
loopne
inc
add
inc
in
mov
push
popf
jl
cmpsl
jae
popa
fdivs
aad
incb
push
data16
ja
lcall
repnz
cli
sub
ds
addr16
and
fidivrs
xorl
in
jne
dec
cltd
push
jle
push
xlat
cld
int3
es
pop
add
and
roll
ret
lods
jo
cmpsl
in
sub
mov
mov
adc
push
sbbl
xchg
mov
push
in
stc
pop
mov
jno
shlb
std
push
out
js
mov
adc
mov
add
mov
stc
out
test
pop
mov
sub
push
jns
sbb
pop
imul
mov
outsb
fisttpl
shll
mov
mov
outsb
mov
popf
js
or
test
pusha
imul
pop
add
mov
rolb
inc
adc
xchg
cmp
push
and
pop
xchg
out
xor
inc
add
add
repnz
pop
jecxz
adc
push
into
iret
inc
adc
fsubs
fldt
mov
xor
je
test
dec
mov
lock
in
or
mov
jmp
mov
xchg
xor
mov
and
lea
scas
sahf
adc
push
add
xor
pop
sbb
aas
mov
mov
xor
inc
retw
pop
mov
outsl
test
jge
sub
scas
ja
sbb
cmp
enter
cmp
or
movl
rcr
in
sbb
cmpsl
outsl
dec
cmp
dec
das
sbb
pop
fwait
cmp
dec
fisubrs
add
mov
jmp
push
cmpsl
adc
mov
decb
or
out
ret
jno
sub
cmp
mov
xchg
cmp
das
lahf
lock
dec
pop
bound
imul
mov
fbstp
lahf
sbb
jae
pop
and
fnstsw
inc
or
fcoml
popf
fsubrp
adc
jge
int
rolb
sub
xor
arpl
cmc
xchg
stos
lods
cmp
xlat
sbb
outsl
and
xchg
xchg
mov
add
mov
stc
movsl
jmp
mov
cmpb
mov
dec
in
outsb
mov
sti
push
ret
push
jge
inc
push
test
inc
pop
sbb
xor
and
mov
push
aas
push
and
jp
add
pop
popa
mov
push
cmpsb
pop
dec
xor
xor
sahf
imul
sbb
sub
cmp
sbb
pop
daa
mov
mov
mov
mov
in
outsb
lea
xchg
clc
sbb
mov
pop
jl
inc
add
cmp
adc
out
dec
inc
mov
pop
xlat
out
pusha
je
imul
icebp
push
stc
cli
pop
and
leave
test
mov
es
xchg
adc
inc
pushf
scas
mov
inc
mov
sahf
fistpll
mov
aam
lods
mov
dec
cwtl
pop
xchg
imul
movsb
adc
and
popf
aam
fwait
xchg
shlb
pop
adc
pushf
mov
ds
popf
dec
jbe
sub
les
mov
jb
test
dec
lock
and
or
dec
jne
mov
add
arpl
ja
dec
mov
lods
xor
adc
and
xor
lods
mov
cmpsl
mov
inc
push
push
cmp
idivl
push
mov
dec
fdivrp
pop
ret
xor
add
rcrb
loope
lcall
jl
mov
xchg
iret
inc
cmp
xor
cmp
lahf
cmp
divl
rorb
push
mov
adc
loopne
and
jne
fdivrs
popf
jne
cmp
xlat
daa
outsb
adc
ja
cli
int3
addr16
cmp
pop
or
pop
pop
in
dec
mov
cs
stc
and
arpl
mov
mov
push
imul
outsl
into
loope
or
lods
push
fs
lahf
mov
xchg
dec
jae
cmp
cmp
pop
pop
lret
mov
push
into
inc
mov
and
movb
xchg
adc
and
mov
shr
push
sub
cmpsl
or
popa
movsl
sahf
or
cli
jae
jno
rorl
insl
and
imul
jns
mov
push
pop
shrb
mov
mov
pusha
daa
les
cs
inc
icebp
pop
sahf
bound
push
mov
mov
aaa
add
out
shrb
outsl
xchg
fwait
movsl
adc
sub
movsb
xchg
das
jle
cmp
adc
test
popf
test
dec
test
sub
jl
popa
shl
loope
cmp
pop
inc
lods
das
push
loop
roll
pusha
mov
jne
enter
lods
imulb
adc
lcall
sarl
cmp
in
das
jns
xor
and
pop
jecxz
cmp
pop
fdivrs
jmp
dec
mov
xchg
movsl
mov
mov
xchg
cmpsb
push
adc
jp
movsb
push
inc
mov
daa
stos
sub
imul
mov
adc
cmp
dec
cmp
fiaddl
in
or
outsb
mov
and
pop
test
fsubp
or
dec
scas
or
out
push
dec
xchg
arpl
cmp
inc
pop
nop
stos
mov
push
xor
push
xor
mov
and
jg
dec
sub
scas
or
negl
pushf
push
pop
pop
inc
cli
hlt
push
les
add
add
test
mull
daa
push
sub
mov
fldl
jno
add
aaa
cli
mov
xchg
insl
mov
int
sahf
jnp
dec
jns
in
or
bound
adc
mov
jecxz
aas
arpl
inc
and
sub
lret
outsl
xchg
and
adc
or
aam
aaa
testl
dec
mov
fidivl
mov
sbb
sub
fadds
movsb
dec
call
dec
lods
adc
test
add
loope
add
movsb
popf
psllq
adc
setb
jl
mov
and
gs
jecxz
icebp
cmp
mov
test
lea
imul
pusha
sbb
push
jg
repnz
or
cltd
outsb
adc
cltd
xchg
sarl
push
sti
setl
insb
addr16
pop
imul
hlt
loop
lret
loopne
dec
lahf
cmp
rcr
cmp
jg
add
push
pop
out
mov
cmp
jno
jbe
mov
push
sub
adc
mov
and
mov
mov
adc
xor
movsb
jb
mov
insb
adc
add
mov
pop
add
add
in
cmpsb
mov
icebp
or
daa
mov
jns
and
int
ldmxcsr
sub
push
cld
int
fwait
add
pushf
in
add
inc
ret
mov
inc
inc
jno
mov
popf
mov
adc
in
test
fists
cli
xchg
jnp
out
gs
push
enter
pop
or
cmpl
pushf
push
adc
xorb
jl
add
shlb
xor
enter
jae
and
stos
mov
pop
call
js
outsb
jge
mov
lret
insb
add
pop
enter
fisubrl
mov
pop
imul
data16
ret
aas
nop
aad
sbb
pop
inc
inc
mov
stos
jnp
test
mov
das
dec
mov
sbb
xchg
shlb
xor
inc
or
jb
cmp
arpl
inc
xor
fists
pop
jmp
ja
in
cmpsl
add
sub
adcb
std
pop
fadds
insl
adc
pop
data16
xor
mov
mov
mov
mov
lahf
sub
push
mov
xor
mov
stos
xchg
xor
pop
shlb
xorb
xor
cmp
les
ja
pop
stos
or
cmp
dec
add
sub
cltd
jb
add
sub
jnp
sti
push
xor
push
mov
cmp
xor
cltd
mov
daa
les
imul
cmp
pop
enter
adc
and
pop
sti
push
xor
dec
pop
jp
xchg
icebp
adc
or
add
out
adc
xchg
arpl
in
or
xchg
push
daa
sti
and
jns
xchg
movsl
push
lock
mov
sbb
cmpsl
adc
popa
aam
scas
lret
inc
or
in
jmp
push
mull
or
xchg
pop
das
mov
dec
into
sbb
test
movsb
mov
pop
adc
imul
or
dec
dec
xchg
scas
cmp
xchg
jne
mov
call
push
mov
pop
xacquire
sub
aad
pop
jb
fmul
cmp
icebp
sti
fcomps
test
jl
in
outsb
mov
scas
mov
loop
scas
fdivl
cmc
je
jg
cwtl
push
scas
test
jnp
test
pop
pop
push
xor
pop
sbb
std
mov
test
lods
mov
mov
push
dec
int3
dec
sub
inc
xchg
xor
jl
andl
movsb
stos
sub
xchg
mov
pop
mov
xchg
aam
mov
mov
mov
aam
xchg
or
mov
popa
sarb
imul
and
in
pop
and
mov
inc
pusha
decb
addb
mov
add
popa
sub
leave
in
stos
aaa
lods
xchg
enter
or
fwait
daa
push
xor
lods
std
pop
out
sti
enter
lahf
inc
xchg
enter
fisttpl
mov
movsb
test
pop
mov
xchg
push
jo
add
mov
icebp
hlt
push
in
mov
fisubrl
inc
xchg
xchg
lcall
insb
ss
pop
loopne
jmp
pusha
jmp
mov
mov
fcoml
pushf
test
and
roll
jo
nop
movsl
and
ds
scas
lods
in
test
std
xor
add
sahf
jae
mov
pop
icebp
scas
mov
aas
inc
data16
mov
xor
testb
fsubr
push
adc
ret
xlat
jl
xchg
push
or
out
in
sbb
xchg
cli
and
ret
mov
cwtl
adc
push
mov
lods
sbb
scas
adc
jns
mov
sti
xchg
outsl
push
pop
xchg
pop
jnp
sbb
popa
subb
and
cmp
mov
push
jnp
mov
or
out
jo
or
inc
jnp
sbb
out
lahf
mov
popf
pop
pop
addr16
out
imul
xchg
cmp
jns
out
pop
jecxz
jns
mov
xchg
addr16
lods
mov
mov
lods
lret
sbb
arpl
push
fidivrl
mov
xorl
adc
shl
addl
lcall
rcrl
imul
fdivl
dec
or
loop
sti
lods
jno
mov
lahf
scas
xchg
push
mov
cmp
lock
in
movsl
mov
adc
jmp
dec
insb
call
pushf
mov
xchg
das
in
data16
cwtl
inc
push
add
test
pop
xor
cmpsb
adc
rorl
leave
cmp
add
push
cmp
pop
mov
xchg
xor
and
push
sarb
inc
push
jae
fdivr
pop
dec
pusha
sub
xchg
pop
mov
or
ja
sub
or
and
adc
xor
jb
jbe
fcmovnb
xchg
add
xchg
add
push
xor
insb
sub
andl
shll
sti
loopne
adc
mov
hlt
mov
jp
orl
dec
and
mov
sbb
push
mov
or
movsb
hlt
or
sbb
ss
mov
aas
add
xchg
lods
hlt
cs
mov
ret
cmpsl
or
in
add
xchg
daa
pusha
mov
sub
arpl
mov
test
cltd
adc
les
leave
sbb
pop
adc
shl
flds
popa
fnstcw
shr
mov
and
mov
inc
out
xor
fidivs
arpl
or
inc
mov
arpl
add
clc
lds
test
pushf
mov
das
cld
pop
jae
xchg
int
in
icebp
sbb
cli
pop
and
xor
adcb
mov
sbb
cmpsl
out
loope
cli
ljmp
adc
dec
outsl
push
add
and
or
ds
inc
pop
mov
dec
inc
inc
jmp
aas
aas
mov
mov
sbb
pop
js
mov
pop
pop
enter
aaa
and
dec
pop
jno
mov
and
in
lods
ret
jnp
inc
rcl
scas
inc
pop
mov
aas
fidivs
mov
arpl
shrl
je
lock
inc
xchg
rcll
call
xchg
roll
int
ljmp
cmp
adc
imulb
movsl
aam
cmp
test
push
outsb
pop
aam
jp
sbb
stos
movsb
xchg
cmp
and
loope
scas
xchg
jle
inc
dec
stos
xchg
xchg
sbb
iret
inc
pop
fxam
push
sub
mov
sub
outsl
add
pop
xor
mov
outsb
sub
aaa
cmp
cmp
adc
cmpsl
inc
mov
jge
or
ds
enter
xor
sbb
popf
adc
mov
inc
cmp
es
sub
ja
daa
xor
movsb
cmpsl
mov
fs
push
test
xchg
outsl
dec
mov
sarb
gs
repnz
js
fcompl
mov
adc
loop
orb
lods
jns
imul
inc
mov
loope
mov
jae
test
cmpsb
or
aad
xchg
mov
mov
ljmp
int3
cwtl
and
test
fcompl
mov
fistl
dec
cmpsb
jmp
popf
out
out
sub
sbb
dec
rep
mov
out
fsubs
dec
pop
adc
inc
jl
adc
mov
scas
addr16
xlat
sahf
cltd
adc
mov
fsubrl
js
or
dec
cmp
dec
jae
repnz
mov
ret
repz
in
js
jbe
outsl
xchg
mov
pop
add
in
sub
mov
jno
sti
testl
daa
pop
sti
daa
into
cli
xchg
lret
cmp
cltd
xor
ss
or
mov
inc
inc
mov
dec
jno
daa
clc
subb
and
scas
test
es
mov
fwait
in
fs
jp
cld
inc
adc
pop
add
mov
pop
daa
pop
mov
push
in
sti
ret
push
push
imul
xchg
push
pop
dec
mov
cmp
mov
mov
mov
outsl
fwait
aas
mov
xchg
lock
push
cmc
and
mov
xchg
ret
lods
inc
and
sbb
jp
popa
hlt
jnp
fwait
sub
sahf
ja
cmp
jl
push
out
sub
in
test
inc
dec
jns
cmpb
addr16
mov
ss
mov
sub
cltd
pop
pop
jns
push
imul
fisttps
lods
addr16
arpl
jb
test
loope
mov
mov
hlt
addr16
sub
xor
and
and
dec
arpl
pop
sbb
xor
fst
mov
and
push
push
ret
cmc
dec
push
cltd
add
inc
negb
aad
mov
xchg
negb
sub
jnp
push
inc
in
or
icebp
and
sti
das
aad
cmp
push
das
push
mov
aaa
mov
add
insl
nop
jo
out
fcompl
and
ret
imul
mov
push
and
xlat
insb
sub
outsl
loopew
add
out
jmp
repz
xlat
out
test
call
xchg
mov
imul
push
xor
hlt
pop
popa
scas
jnp
xlat
mov
sbb
dec
push
lock
scas
pop
or
pusha
and
push
int
rcrl
and
mov
daa
mov
pop
cltd
mov
je
jge
xor
sub
aaa
bound
and
outsl
scas
adc
cmp
testb
cmp
stos
mov
mov
mov
js
cmp
mov
loopne
lods
orl
mov
arpl
xchg
xchg
jge
stos
jnp
pop
outsb
push
addl
and
jnp
push
addr16
adc
cmp
scas
push
jg
inc
dec
dec
sub
jg
stos
xor
adc
jl
scas
sub
sti
lods
add
jnp
add
jmp
mov
inc
outsb
dec
push
xchg
pop
sti
andl
pop
rclb
pusha
ljmp
test
popa
insb
inc
leave
or
clc
dec
inc
sbb
dec
jb
int3
sub
cwtl
adc
test
mov
lret
add
dec
mov
cmp
mov
insl
add
fnstcw
sub
mov
push
bound
sbb
fndisi(8087
sub
outsl
loope
into
mov
cmp
inc
pop
push
jle
add
push
push
sarl
imul
or
mov
js
lods
dec
ret
outsl
inc
cld
jl
lods
xor
xor
xor
insb
inc
lods
loope
mov
imul
mov
push
jl
outsb
mov
mov
sbb
sahf
enter
jg
dec
push
call
dec
lods
out
add
hlt
mov
xchg
divb
dec
movq
cld
lods
sbb
test
test
aaa
popa
subb
add
xor
sbb
int
lock
test
cmp
adcb
jle
dec
out
jge
fdivrs
jne
fldt
push
jae
mov
inc
ret
ss
int
and
pop
pop
mov
cs
outsb
rcrl
mov
addr16
testb
and
repnz
cltd
mov
repnz
or
lods
ss
mov
sti
arpl
sti
aaa
mov
push
jg
add
xor
push
and
inc
xchg
fldenv
in
cmp
in
push
cmpsb
jg
decl
sub
test
mov
cmovns
ficomps
insb
push
pop
jle
add
repz
repz
mov
dec
imull
push
inc
stc
test
mov
jmp
inc
insl
sbb
icebp
shll
repnz
and
mov
mov
stos
sub
loope
push
ss
aas
push
or
cwtl
imul
inc
sbb
pop
dec
or
pop
in
aas
jns
pop
sub
jo
cltd
mov
xor
cld
push
sbb
dec
jl
sarb
fsubr
jns
add
jl
push
mov
daa
in
mov
mov
loope
xchg
sbb
cmc
adc
add
dec
xlat
push
dec
xchg
call
int
inc
xchg
pop
xor
pop
mov
insb
pop
fisttpll
outsl
xchg
jno
mov
xchg
mov
add
mov
sbb
xlat
divl
inc
push
mov
xor
inc
sbb
lahf
inc
xor
pop
ds
fsubrs
xchg
pop
xchg
movsl
push
mov
sub
insb
outsl
jae
xor
adc
fs
push
fwait
mov
movsb
xor
sbb
sub
outsl
in
into
in
sub
jnp
mov
adc
mov
and
movsb
jns
movsb
xor
sub
push
jle
clc
mov
dec
movsl
push
mov
mov
push
cli
outsb
xlat
xchg
scas
outsb
xor
sbb
adc
cs
arpl
inc
fwait
adc
cmp
adc
pop
cltd
pusha
je
mov
pop
jge
push
aaa
fstps
bound
sahf
xor
rol
lcall
inc
mov
xchg
mov
xchg
xchg
outsb
inc
push
xor
inc
les
int
stc
sub
pop
repnz
pop
pusha
fdivrl
inc
data16
jecxz
fs
inc
test
aas
pop
scas
cmp
jbe
nop
cmpsb
hlt
jl
inc
adc
popf
mov
or
jge
jo
fsubr
jb
test
dec
rcll
adc
movsb
ficoml
mov
xor
inc
fisubl
insb
decl
rorb
fdivr
mov
dec
stos
imul
inc
js
outsl
or
mov
scas
loope
push
pop
aad
je
imul
push
dec
fs
popa
add
jmp
gs
jmp
adc
push
lea
icebp
movsb
arpl
mov
into
js
in
cmp
sahf
cmc
insl
fs
or
jle
sbb
inc
test
dec
pop
xchg
int
ljmp
xchg
pop
push
movl
inc
out
push
xor
pop
push
ret
imul
xchg
mov
adcb
mov
repz
xchg
jo
mov
add
xchg
adc
ret
inc
sub
gs
mov
outsb
or
add
stos
rorl
push
push
cmp
out
jo
imul
mov
daa
loope
xor
mov
fs
lods
jo
sarl
xchg
push
inc
sbb
pusha
test
outsb
sbb
int
mov
pop
jae
lods
addb
inc
inc
lock
jbe
dec
and
sti
add
inc
loopne
mov
mov
dec
inc
cmp
mov
outsl
push
shl
adc
mov
mov
lahf
jns
mov
mov
lret
pop
dec
sti
popf
aad
mov
sarl
mov
xchg
je
mov
loopne
ja
mov
fcompl
in
pusha
push
sti
jae
xor
xchg
jbe
mov
mov
push
hlt
mov
rolb
dec
rorl
cmp
movsl
dec
in
rep
cmp
arpl
inc
lea
cld
test
xor
cltd
push
int3
pop
push
xor
outsl
push
stos
lods
adc
scas
mov
movsl
dec
or
outsb
ret
xor
popa
fildl
xor
leave
enter
xchg
mov
movsb
sar
bound
mov
adc
inc
popa
pop
out
ret
sub
mov
out
mov
scas
dec
push
push
fs
das
push
fdivrl
inc
bound
std
xchg
into
insb
inc
iret
mov
push
loope
mov
and
ret
push
push
mov
push
adc
or
add
sti
mov
bound
shlb
ja
stos
mov
mov
fcoms
test
paddusw
sub
mov
lods
in
test
pop
in
mov
xchg
call
jg
out
mov
jg
in
mov
sti
and
shr
lahf
lds
sub
pusha
negb
test
mov
sti
arpl
pop
jmp
xchg
bound
out
push
cmpsb
aaa
push
pop
cmpsl
add
outsb
test
or
or
add
mov
fstl
xchg
push
lock
fnstenv
jae
adc
cmp
push
cmp
shlb
adc
pop
push
mov
xor
mov
jb
mov
add
xor
and
sbb
sub
lcall
push
loop
fs
stos
cmp
stos
test
shrb
xchg
pushf
mov
lds
adc
loope
xor
push
push
mov
mov
mov
dec
add
lods
and
cmp
subl
jnp
shll
movsb
push
decb
adc
xchg
adc
dec
xchg
push
test
pop
inc
dec
addr16
inc
dec
mov
mov
cmp
dec
mov
jnp
inc
adc
incl
jnp
inc
sub
sbb
jg
dec
dec
mov
pop
mov
pop
ret
pop
push
add
xlat
adc
dec
rcll
enter
lock
fistl
xchg
mov
arpl
and
aas
mov
push
jecxz
scas
push
sti
outsl
fs
inc
and
inc
das
bound
inc
sub
pop
pop
add
scas
push
lds
call
lods
test
iret
in
pushf
out
add
sub
cmp
jns
leave
jle
jnp
push
lods
push
sub
adc
mov
mov
aas
sub
mov
sub
scas
sub
fisubrs
jg
push
outsb
test
jb
pop
jle
iret
pop
jp
sbb
dec
imul
push
inc
lret
xchg
pusha
inc
jae
jl
mov
and
out
xchg
in
out
in
in
out
adc
insl
jl
fwait
insl
enter
hlt
pushf
andl
pop
mov
fwait
dec
mov
rorl
dec
aas
std
adc
xor
sbb
xor
sbb
xor
movsb
mov
movsl
mov
iret
out
sub
mov
cltd
enter
pushf
mov
clc
add
jg
add
jg
add
inc
jnp
mov
jmp
mov
cmp
mov
daa
xchg
clc
and
push
mov
fsave
call
lods
mov
xor
test
pop
mov
cmp
jp
adcb
addr16
add
adc
repz
nop
out
sub
cmp
iret
mov
xor
cmpsb
mov
pop
jp
inc
push
nop
pop
jp
in
sahf
nop
js
repnz
ficoms
pop
xchg
push
dec
and
xchg
addr16
dec
add
stos
je
hlt
cld
mov
mov
gs
jl
iret
adc
in
addr16
sub
hlt
jg
xor
call
pusha
sbb
sub
inc
jbe
xchg
pop
fsubr
pop
ret
ja
int
inc
push
jg
outsb
push
hlt
jecxz
push
fs
and
xchg
out
loope
sub
aas
lret
pop
orb
jg
ret
daa
arpl
scas
mov
out
in
sti
in
jnp
xlat
adc
cmp
rorl
mov
dec
cli
ret
scas
insl
shll
push
mov
shr
idiv
adc
lcall
aas
or
jle
aaa
scas
inc
push
dec
sub
cli
das
adc
adc
jbe
dec
adc
xor
cmp
push
loop
xor
mov
aaa
mov
notb
test
sahf
orb
nop
pop
data16
dec
push
and
lods
jge
and
arpl
mov
dec
jp
mov
jo
nop
adc
inc
xlat
movsb
mov
push
inc
leave
or
push
pop
sub
rcl
xchg
cwtl
sti
aam
imul
mov
outsl
jnp
pop
in
xor
mov
jmp
push
test
mov
pop
adc
pop
dec
outsb
push
mov
cmpsl
and
xchg
sub
jno
sub
mov
push
push
bnd
push
insb
mov
sub
nop
dec
pop
push
cmp
data16
cld
sbb
xor
scas
test
jns
jge
ja
nop
in
push
enter
mov
or
cmp
dec
std
xor
dec
insl
push
sub
cmp
aaa
out
cmp
pop
in
arpl
dec
out
sbb
mov
push
mov
jmp
shrb
movsb
js
out
bound
pop
lods
mov
fwait
mov
adc
dec
test
cmpsb
push
push
sbb
mov
xor
jmp
sbb
sbb
mov
data16
or
xchg
aas
pop
add
call
dec
cmc
int3
mov
adc
mov
mov
lret
or
mov
lods
sahf
xchg
fwait
pushf
and
outsl
scas
mov
sahf
sub
repnz
mov
adc
sbb
bound
cmp
arpl
xor
fs
inc
jnp
test
inc
add
mov
inc
ror
jg
repz
movsl
jg
insl
jle
push
stos
test
inc
xor
out
push
jmp
data16
insl
test
out
leave
insb
mov
lret
mov
lea
mov
pushf
pop
insb
lods
or
dec
xchg
les
xchg
xchg
scas
test
je
jmp
bound
ja
leave
clc
dec
faddl
in
mov
stos
dec
and
mov
xchg
push
or
and
shl
iret
xchg
dec
lea
mov
push
adc
insl
dec
and
mov
lret
mov
xor
dec
adc
in
leave
sub
lock
push
cmp
inc
fidivs
push
imul
fs
iret
xor
outsb
ret
fs
test
mov
xchg
push
xlat
lods
stos
mov
inc
stos
mov
out
es
ja
out
sbb
and
push
aad
loopne,pt
cmp
mov
xchg
cmp
loope
imul
cmpsb
cld
dec
add
dec
push
clc
pop
in
sub
pushf
faddp
loopne
iret
jae,pt
cmp
clc
iret
adc
inc
cmpb
ds
push
ret
repnz
cmp
icebp
cltd
cwtl
pop
xlat
sub
outsb
int
test
cmp
filds
mov
cli
aaa
jl
dec
sub
sbb
mov
jecxz
push
jb
ljmp
movsl
xor
jp
add
fldl
lods
push
movsl
xor
cmovge
fiaddl
adc
orb
mov
inc
test
mov
dec
or
lock
xchg
mov
dec
jb
leave
aas
add
fs
sbb
xor
xor
scas
aad
mov
pop
mov
fbstp
jb
insl
enter
sbb
inc
aaa
inc
mov
mov
xor
mov
sub
push
fistpll
repz
outsb
and
loop
addr16
jo
call
lahf
es
pop
arpl
sbb
insl
divb
je
mov
sti
rcl
cmp
test
jne
sbb
or
add
xchg
cwtl
dec
test
sbb
mov
mov
dec
es
ret
test
imul
mov
jmp
shlb
adc
push
adc
dec
daa
cwtl
shr
lods
adc
dec
inc
mov
test
jge
inc
mov
mov
aad
xor
addr16
into
xchg
outsb
daa
popa
std
mov
shlb
fisttpll
iret
rclb
test
mov
xlat
sub
stc
xchg
imul
inc
jbe
jp
jnp
movsb
enter
scas
inc
and
mov
pop
push
xor
add
js
xchg
clc
pop
add
lcall
adc
pop
mov
add
jg
test
stc
cmpsl
fnstsw
and
adc
in
jo
hlt
mov
ds
rcrb
fisttps
adc
dec
xor
mov
outsl
pop
pop
ret
add
pop
add
dec
xor
ret
xchg
push
mov
jge
ss
push
addr16
pop
fdivrs
xor
pop
addr16
mov
pop
jecxz
outsb
and
movsb
out
enter
call
imul
push
jecxz
mul
push
out
pop
clc
dec
lcall
mov
addr16
and
lock
cmp
jl
pop
mov
js
pop
dec
mov
xor
repz
jp
sub
repz
xor
test
addr16
mov
pop
mov
dec
mov
adc
lock
fwait
mov
xor
add
pop
add
outsb
xor
mov
repz
test
rcr
xlat
sub
and
xchg
mov
adc
xor
arpl
mov
andl
xor
cmp
stc
pusha
mov
sbb
mov
lcall
outsl
cmp
faddl
lea
mov
pop
fsubl
cmp
mov
ret
icebp
movsl
sti
cs
mull
ds
rolb
arpl
mov
inc
inc
sub
cmp
shl
scas
or
dec
pop
add
pop
fcmove
scas
mov
jo
mov
sub
mov
cmpsl
inc
fistpll
adc
dec
cmp
or
test
sub
dec
aas
jmp
pop
fs
scas
movsl
int
ret
and
jns
sti
add
je
cmp
gs
xor
movsb
arpl
sbb
or
loope
cmpsb
xor
mov
and
fwait
and
movsl
iret
fbstp
xlat
loopne
push
scas
sub
mov
nop
int3
push
cli
xchg
xchg
ja
inc
jno
jmp
cmp
cmp
adc
jmp
push
mov
dec
pusha
push
lods
orl
mov
nop
lret
pop
push
mov
push
mov
fsubrs
inc
aaa
jno
jns
mov
out
jno
cmp
in
leave
pushf
int
lods
push
clts
cmp
lods
jg
stos
or
mov
and
or
inc
push
xor
repnz
dec
xor
mov
cli
test
pop
in
sub
out
psubsb
mov
jnp
dec
pop
icebp
mov
fiaddl
imul
lcall
jb
cmp
jp
mov
daa
outsl
pop
clc
popa
pop
enter
or
cmp
insl
and
inc
mov
leave
sub
pop
jl
fdivrl
das
popa
out
fst
pushf
out
int3
mov
adc
xchg
mov
add
mov
in
jnp
fdivl
or
imull
movsl
mov
push
mov
js
imul
repz
cwtl
cwtl
fbld
mov
dec
flds
leave
inc
jmp
dec
int3
add
pop
punpcklbw
mov
or
adc
mov
idivl
cmp
sub
das
dec
outsl
mov
test
into
aaa
cmp
jb
add
mov
push
jmp
into
js
xor
lds
das
push
sbb
in
add
inc
add
outsl
mov
cmp
and
retw
sbb
lock
imul
xchg
mov
pop
xchg
jo
sub
cmp
lods
cmp
cwtl
shll
int
sub
xchg
and
mov
pop
aad
stc
push
adc
pop
add
and
and
xchg
xor
push
mov
scas
jnp
std
bound
jb
sbb
sub
pop
movsb
fdivrs
shll
xor
xor
cmp
add
pop
xor
cltd
and
ret
pop
push
jmp
xchg
xor
xor
and
add
pop
push
int
leave
jnp
lcall
into
mov
in
les
sub
xorl
aaa
or
push
and
in
push
or
in
dec
mov
loope
mov
mov
sub
adc
es
stos
scas
xchg
int3
in
fs
test
mov
push
hlt
pop
stos
ds
mov
xchg
arpl
sub
scas
imul
inc
jbe
adcl
inc
cmp
xor
cmp
mov
jl
add
fs
mov
mov
jmp
test
adc
cmpsb
sahf
out
or
add
xchg
cmp
push
sub
jecxz
aas
and
fs
hlt
inc
leave
push
scas
imul
sub
test
dec
leave
test
scas
add
xor
push
das
stc
add
and
cld
test
jl
inc
mov
lds
imul
adc
sub
jmp
or
les
and
hlt
pop
push
push
dec
cmp
and
out
xor
test
dec
cmp
mov
cltd
aaa
ds
in
lret
mov
imulb
inc
loop
fwait
sbb
jge
mov
js
pop
jge
jb
test
js,pn
mov
pop
lea
push
icebp
xlat
and
out
cmp
mov
sub
pop
frstor
mov
std
xchg
and
pop
les
xchg
fidivrs
out
mov
cmc
in
mov
fstpl
ss
mov
mov
inc
cltd
pop
and
fisubrs
jo
pop
xor
in
or
repnz
adc
xchg
add
xor
mov
je
or
pusha
sub
xchg
in
in
or
int
mov
mov
cli
in
hlt
ljmp
clc
call
shlb
xlat
or
adc
jae
std
adc
imul
lahf
divb
clc
pop
and
mov
pusha
ror
sub
es
xor
dec
daa
test
mov
sahf
call
cmp
shl
sub
cmp
sbb
mov
pop
lret
push
cld
sbb
les
push
ja
inc
scas
and
mov
xlat
lods
subl
push
xor
sub
into
jo
push
into
mov
mov
pop
add
sarl
mov
dec
clc
and
or
xorb
cmpsb
push
push
popf
lock
adc
clc
push
aad
lcall
xchg
mov
dec
mov
add
jbe
ror
pop
subl
add
mov
push
daa
inc
rorl
cld
push
fsubrl
xlat
les
into
dec
mov
in
adc
sti
jecxz
mov
or
flds
lret
loopne
cmp
push
jns
lock
outsl
lods
outsl
aaa
rcr
jle
cmpb
lcall
lods
ss
cltd
outsl
mov
shl
pop
xchg
mov
push
outsl
xorb
js
push
data16
testb
lds
dec
mov
dec
outsb
out
jnp
or
call
fldl
fldcw
push
xlat
add
loope
mov
lret
imul
inc
sub
lret
or
fnstenv
cwtl
in
mov
cmpb
sub
ss
pop
scas
dec
jo
adc
xor
jo
inc
in
arpl
inc
insb
std
mov
iret
add
scas
cmp
pop
lahf
out
out
xlat
lods
in
cmp
repnz
jmp
int
call
push
mov
pop
lret
or
xchg
clc
cmp
pop
out
cmp
stos
test
imul
mov
movsl
push
test
hlt
xor
or
out
push
jp
shrl
mov
adc
pop
pop
pop
jbe
scas
cmpsl
jns
jo
loop
fidivs
cmp
movsb
mov
mov
pop
mov
dec
jmp
pusha
movsl
mov
nop
inc
mov
cld
add
pop
enter
jp
xor
int3
rorl
adc
popa
add
add
dec
fimuls
jnp
clc
xor
stc
fildl
add
scas
inc
shll
sub
jp
xchg
push
add
adc
pop
jge
jnp
jg
inc
ror
push
sub
std
adc
mov
inc
or
iret
dec
jge
insb
lds
jnp
sbb
lret
xchg
out
xchg
arpl
insb
add
sub
imul
dec
jge
addl
ret
mov
and
je
dec
test
int3
cwtl
lods
mov
jo
lods
inc
lds
daa
cmp
jp
jl
mov
sbb
jb
pop
imul
fldz
sub
mov
adc
sub
xchg
inc
pop
in
or
int
pop
push
jns
pop
arpl
fnstenv
outsb
cld
jl
cmp
push
dec
mov
cmp
mov
loope
fs
aam
add
repz
icebp
in
inc
cmp
cltd
and
ret
das
pusha
scas
mov
pop
or
sbb
inc
int3
into
cmp
pusha
or
insb
adc
jno
or
sbb
mov
xor
add
xor
scas
jne
xor
dec
fs
pop
lods
cmc
les
movd
dec
icebp
fdivs
subb
outsb
rcrb
movsb
xchg
shll
int3
or
dec
sbb
xor
popf
mov
iret
mov
lea
sti
adc
dec
rcll
push
inc
mov
sub
mov
repz
insl
inc
addr16
aad
mov
xor
push
xchg
pop
or
movsb
mov
pushf
aas
inc
and
subl
fdivrl
xchg
dec
lahf
xor
adc
adc
sbb
out
bound
or
inc
aam
pusha
jno
pop
aam
mov
sar
dec
in
cmp
push
pop
pop
push
jnp
call
movsl
hlt
sbb
popa
jge
xchg
xchg
jae
cmpsb
inc
or
dec
and
jb
jle
in
bound
mov
int
das
push
call
shrb
dec
insl
popa
mov
fisttpl
xor
pusha
clc
or
fsubr
inc
jne
int3
icebp
cmpsb
xchg
out
inc
mov
pop
xchg
and
call
mov
add
sub
cld
dec
or
xchg
cmp
jl
dec
arpl
mov
popa
sti
xchg
or
lret
cmp
outsb
jmp
mov
int3
insl
loop
dec
cmpsl
fisubl
pop
push
psrad
pop
jae
mov
outsb
jmp
in
das
sub
pop
ljmp
push
and
cmp
pushf
jo
leave
push
sbb
stc
push
popf
mov
arpl
sub
outsl
in
sub
inc
xchg
sub
or
fimuls
imul
jmp
sub
iret
aad
outsl
fists
addr16
or
fsubr
pop
cwtl
aam
cli
sub
adc
das
xchg
arpl
jns
inc
repz
js
push
mov
out
out
jle
mov
ja
rol
cmp
pop
xchg
dec
sub
in
push
bound
outsl
mov
push
xor
leave
sub
jecxz
push
push
ljmp
or
arpl
xchg
lods
imul
push
xor
lret
test
aad
jp
dec
and
andl
jns
insb
popf
and
daa
push
bound
xor
adc
push
xor
or
dec
stos
sub
jl
sub
scas
jnp
push
lret
test
and
push
ss
sub
mov
pop
fsubl
mov
add
cli
dec
xchg
inc
mov
and
inc
scas
push
loopne
popa
outsb
stos
add
add
sbb
test
int3
pop
aas
push
popf
xor
in
cvtps2pi
dec
lret
inc
aas
sub
sub
testl
dec
sahf
xchg
jne
inc
jbe
xchg
imul
mov
insb
imul
cmpsb
aaa
mov
orb
loop
jbe
lret
pushf
movsl
push
mov
cs
mov
pop
iret
ljmp
fwait
push
dec
mov
xor
cmpsb
adc
sbb
push
cmp
pop
fsubs
insl
bound
jmp
movsl
popf
and
test
data16
dec
adc
xchg
test
xchg
jbe
sti
adc
dec
pop
lret
sbb
movsl
sbb
test
fmull
mov
jmp
lcall
push
mov
and
pop
pop
mov
icebp
mov
leave
aam
movsl
mov
cmp
cmp
mov
int3
shll
add
gs
int3
int
mov
push
and
sbb
cmp
and
scas
arpl
repnz
mov
dec
mov
adc
cmc
call
push
cmp
add
mov
mov
sahf
ss
cli
adc
ret
popl
out
jb
stc
insl
sub
push
fwait
xor
or
jl
pop
sbb
int
mov
call
add
cmpxchg
shrb
and
out
loopne
sbb
ficomps
push
unpcklps
mov
imul
cld
scas
push
pop
jmp
sbb
pop
cmpl
outsl
in
dec
add
jne
jae
adc
jl
push
jp
int
cmp
xor
in
dec
in
inc
jb
mov
outsl
aad
xchg
jno
xor
mov
in
push
mov
lods
out
scas
js
mov
lret
lea
ljmp
loope
mov
adc
mov
cs
mov
cmp
add
icebp
inc
push
arpl
sar
xchg
xor
pop
stc
xor
sarl
xor
aam
mov
lret
int3
leave
out
or
mov
test
je
mov
sbb
movsl
test
test
sub
scas
xor
int
lret
das
movsl
add
arpl
pusha
dec
outsb
xchg
call
lods
pusha
movsl
out
lods
jo
adc
xchg
rclb
and
pop
sub
jmp
jle
fistl
call
sub
bound
jae
xor
xlat
inc
pop
repz
cmp
cmp
xchg
mov
add
add
pop
cmp
mov
dec
add
pop
jb
or
mov
stc
adc
jge
psubsb
mov
fldenv
mov
push
sub
popl
dec
jg
jnp
jecxz
cmp
hlt
arpl
and
inc
and
int3
mov
lahf
xor
mov
in
lods
mov
inc
inc
test
adc
mov
mov
loopne
fdivrl
mov
orl
call
cltd
push
je
add
test
cli
flds
std
in
push
ja
scas
pushf
cmp
add
cmp
rcll
rorb
xor
aad
xor
lret
lods
inc
nop
imul
jae
xor
pop
mov
nop
push
loop
pop
xor
ret
jb
adc
mov
mov
cmpl
or
and
sub
or
mov
xchg
mov
jno
outsb
push
ss
xchg
jnp
int
cwtl
lods
and
jp
and
icebp
notb
repnz
mov
loopne
dec
mov
xor
sub
jnp
adc
pop
loope
aam
push
fisttpll
stos
fucomp
ficoms
outsb
sub
lret
gs
and
cmp
or
bound
cs
mov
fadds
pop
das
mov
and
jecxz
mov
mov
inc
sbb
ss
enter
push
aas
outsb
test
inc
sub
sbb
ficoml
sub
insl
mov
test
adc
xor
loop
dec
mulb
mov
adc
clc
ret
inc
mov
lds
push
movsl
lahf
push
or
mov
stc
xchg
es
imul
lret
popa
xor
arpl
dec
mov
mov
dec
inc
loopne
test
inc
mov
or
xor
push
cmp
sub
movsl
mov
jmp
je
add
and
int
cld
jp
mov
or
stc
and
dec
loopne
rclb
inc
jle
pushf
imul
push
hlt
jbe
push
pop
xor
push
outsb
out
enter
arpl
outsb
aad
sub
xchg
xchg
push
ret
rclb
out
push
sub
sub
loopne
int
scas
lods
outsb
pop
or
test
adc
sub
jne
int
loopne
fisubrs
cwtl
shl
mov
sbb
adc
lret
and
leave
add
cmpl
xor
in
jno
dec
in
mov
cltd
adc
cwtl
cmpsl
ljmp
es
xchg
cwtl
imul
icebp
or
out
aam
mov
push
outsl
push
in
mov
pop
or
addb
scas
jge
xchg
lock
ljmp
dec
or
push
pop
or
movsl
adc
int
daa
adc
repz
fidivs
mov
loop
xor
sub
or
inc
test
jp
sub
jmp
mov
rcrb
imul
loope
and
clc
dec
cmp
inc
lds
loope
loope
fldenv
jge
xor
push
mov
lcall
pop
adc
dec
jmp
test
inc
inc
insb
lahf
add
pop
lret
cmp
fdiv
jmp
or
inc
push
xor
rcl
push
adc
cld
add
xchg
mov
incl
fwait
and
cmp
xorl
cmp
pop
mov
pop
sar
lods
and
outsb
mov
mov
scas
ja
scas
sbb
or
inc
jle
outsl
adc
cmpsl
sub
sbb
or
mov
inc
pop
jb
push
pop
jnp
jae
fdivrs
movsb
jae
lods
dec
aas
lock
movsb
call
push
arpl
mov
cmpsb
mov
icebp
mov
fistpll
push
push
xchg
cmc
scas
sub
xor
xchg
mov
icebp
adc
nop
xor
sub
pop
std
mov
xchg
mov
jmp
fsts
sub
push
adc
clc
pop
jbe
xchg
mov
push
jg
jl
dec
or
dec
flds
inc
iret
sbb
pusha
out
or
cmpsb
add
jno
mov
arpl
dec
push
das
jno
outsl
push
pop
push
jbe
or
je
add
movsl
stos
lahf
xchg
ss
daa
push
xchg
cmc
int3
jmp
xorb
inc
pop
jmp
cwtl
fwait
adc
scas
lcall
insl
xchg
dec
test
adc
and
add
lock
insb
xchg
or
ja
push
push
hlt
mov
imul
ss
scas
stc
fs
or
and
push
stos
dec
pop
cmp
dec
or
fs
xchg
lds
aaa
call
mov
pop
aas
push
mov
cmp
inc
xchg
aas
cwtl
add
sbb
push
adc
cmpsb
dec
out
mov
jne
inc
jnp
xchg
scas
cmpb
sub
mov
lret
stos
xor
push
fsubl
add
jge
jge
aad
push
pop
stc
jle
incb
cmp
or
test
push
jge
jl
jnp
and
jnp
mov
call
jmp
xor
jl
adc
mov
fsubs
outsb
adc
mov
inc
std
jl
dec
ret
sub
jecxz
rcrb
out
js
cltd
mov
por
in
mov
or
in
push
mov
sbb
addl
in
sbb
mov
dec
dec
pop
push
adc
leave
ss
dec
inc
in
mov
mov
xor
popa
jo
cmpsl
mov
sub
push
add
inc
test
sbb
out
cld
inc
inc
jecxz
aas
push
pusha
mov
adc
jmp
adc
sbb
fidivrs
mov
jns
cmp
pop
mov
mov
push
sub
jl
pop
jecxz
sbb
daa
ss
addr16
int3
jo
jb
sub
jo
inc
add
fsubrs
sbb
stos
or
sub
popf
and
rcr
outsb
dec
dec
cltd
and
pop
cltd
cmp
and
jle
test
add
cmpsb
iret
pop
out
je
or
out
inc
push
xor
test
cmc
or
mov
rclb
push
mov
sbb
cmp
xrelease
mov
push
test
movsb
jo
outsl
icebp
repz
or
mov
ret
lods
stc
adc
popa
bound
pusha
dec
out
mov
mov
xor
scas
stos
and
cmpl
mov
fistpll
mov
xchg
mov
adc
rcrb
je
lea
loop
push
add
xlat
subl
popa
outsl
ret
sub
loope
cmc
xchg
inc
jno
daa
mov
cmp
and
pushl
fstpl
add
xor
cmp
mov
andb
pop
test
icebp
mov
ljmp
xchg
imul
shl
xchg
dec
orb
outsb
aam
sahf
xlat
or
aam
mov
mov
xor
add
mov
jbe
inc
scas
jb
jmp
dec
mov
cmp
dec
or
xchg
pop
jg
daa
loop
inc
sub
lods
xchg
and
mov
xchg
sub
insl
mov
cmpb
adc
dec
jg
push
les
addr16
aam
sbb
cli
pop
jge
addr16
arpl
adc
popa
nop
iret
add
js
shl
cmpsb
pushf
sbb
popa
scas
scas
mov
xchg
pop
and
stos
mov
xchg
xchg
ret
mov
mov
fldl
push
pop
mull
sbb
scas
mov
adcl
lret
adcb
sub
mulb
in
inc
mov
mov
popa
cld
pop
repz
and
icebp
cmp
test
jae
sub
jl
jecxz
mov
pushf
jp
mov
xor
leave
daa
xor
test
sub
mov
ret
sbb
mov
insb
jno
leave
fisubs
dec
xlat
test
daa
clc
test
jae
nopl
jnp
rcrl
enter
ret
aad
andb
inc
or
push
or
orl
pop
mov
push
in
mov
sbb
pop
outsb
adc
cmc
ss
or
std
lahf
iret
loope
test
movsl
fiadds
or
loope
cmp
ficompl
sti
mov
clc
cmc
or
mov
call
mov
push
nop
add
ja
adc
adc
push
sahf
xchg
add
push
pusha
or
cmp
std
pop
scas
cli
jmp
cmp
mov
stos
jp
ds
mov
and
inc
mov
addr16
jl
pshufw
shrl
sub
outsb
movsb
mov
inc
shrl
xchg
cmp
gs
es
imul
dec
pop
xchg
push
loope
ds
jge
or
xor
jle
arpl
mov
pop
shrb
aas
pop
sub
pop
mov
shll
mov
and
iret
sbb
cmp
mov
push
or
add
mov
jae
aad
mov
mov
mov
adc
add
cld
or
push
prefetch
or
dec
cmp
nop
stos
dec
or
mov
scas
in
fstps
push
mov
in
and
jb
out
push
rorb
popa
insb
add
adc
pop
orl
inc
mov
cltd
cltd
fs
jo
sbb
stc
pop
sti
loopne
cwtl
outsl
into
in
mov
hlt
mov
movsl
shlb
enter
pop
mulb
icebp
dec
cmp
xchg
dec
out
repnz
out
sbb
fisubrs
xchg
paddb
jne
jnp
and
popf
cmpsl
fwait
pop
jae
adc
sbb
pop
sub
and
mov
scas
xchg
jge
gs
scas
mov
xchg
lock
add
dec
or
scas
dec
ljmp
cmc
dec
jne
adc
sbbl
sub
inc
push
xchg
pop
scas
jge
cmovb
jb
ret
lahf
test
pop
mov
add
inc
dec
push
xchg
jg
add
cld
loopne
roll
into
ljmp
cli
mov
mov
test
mov
and
mov
gs
push
js
sbb
out
outsl
jp
mov
loop
sub
cmp
mov
pop
fstpt
xchg
loopne
mov
mov
lods
mov
add
push
bound
and
or
xchg
cmc
xchg
subb
mov
loope
inc
bound
lahf
outsb
push
xor
and
xor
mov
adc
bound
nop
mov
inc
bnd
dec
xor
mov
cmp
hlt
cmp
repnz
data16
fisttpl
pop
sbb
dec
jns
insl
lods
les
enter
sti
jp
frstor
xchg
ljmp
aas
je
stos
test
sub
adc
int
push
nop
int3
inc
pop
push
ret
dec
int3
stos
movsb
movsl
pusha
nop
pop
cmpsb
popf
push
mov
fwait
lods
inc
jb
add
fs
call
or
mov
push
imul
mov
repz
inc
in
test
adc
and
fidivrs
or
testb
mov
arpl
xor
pop
sti
jecxz
stos
fs
and
enter
pop
and
sub
xor
mov
les
dec
pop
push
jb
jne
jmp
fimuls
push
das
xor
int
fwait
sub
jl
jge
sub
or
xor
sbb
clc
cmp
negl
push
das
movsl
dec
sub
leave
insb
push
cmp
push
adc
adc
aad
dec
in
shrb
sti
or
cli
pusha
push
pop
pop
pop
push
test
adc
icebp
push
repnz
ja
mov
xor
repz
mov
nop
xor
push
xchg
push
push
repz
imul
hlt
sub
ror
mov
and
stos
mov
xchg
mov
data16
push
in
subb
mov
arpl
arpl
nop
je
xchg
lcall
pusha
lods
test
and
mov
push
push
loope
daa
sub
in
or
push
addr16
push
or
lret
pop
dec
popf
sbb
adc
bound
popl
ljmp
pop
outsb
int
mov
jge
imul
mov
sub
mov
outsb
push
pop
ds
into
push
sub
lods
mov
daa
ds
shrb
add
push
jge
mov
xchg
add
xor
adc
pop
and
lea
fnstcw
cmp
dec
in
iret
or
addl
lahf
xchg
mov
push
mov
outsb
dec
mov
pusha
push
xchg
dec
rep
mov
sbb
mov
ret
pop
jle
iret
mov
orb
shll
xchg
movsl
push
push
ret
ret
jmp
ret
sti
add
push
fidivl
sub
dec
in
insb
push
push
fnstenv
or
adc
jp
outsl
xchg
cmpb
inc
push
mov
cmp
shll
gs
ss
daa
aad
cwtl
add
imul
pop
add
push
lcall
cmp
pop
dec
stos
std
inc
pop
test
test
dec
push
xor
dec
inc
divl
lds
and
add
mov
mov
dec
into
jne
cmp
or
inc
adc
icebp
ljmp
jae
adc
add
xor
dec
ret
dec
push
add
push
rorl
mov
mov
scas
push
das
fnstsw
je
cmp
add
imul
aad
outsl
repnz
jae
in
fsubs
outsb
jecxz
dec
lret
lea
inc
or
leave
icebp
test
in
pop
pop
ficoms
addl
popf
nop
jnp
out
or
cld
xor
ds
rorb
inc
fs
jno
push
cmp
and
xchg
ret
popa
pop
insb
cmp
xchg
adc
pop
mov
std
xor
addb
push
divl
scas
mov
mov
call
test
mov
cs
mov
jae
or
loopne
adc
mov
ds
inc
pushf
test
imul
jg
cmc
inc
xchg
lret
xchg
pop
movsb
scas
mov
adc
cmp
mov
scas
lret
ds
jmp
int
xchg
add
in
repz
sbb
movsb
xor
lret
enter
pop
movsb
enter
fcomps
popa
adc
pop
xor
jl
push
dec
in
ret
fstl
shll
pushf
pop
vrsqrtss
mov
sbbb
je
mov
pop
movsl
js
mov
or
sahf
xchg
int3
js
ret
jne
dec
pop
mov
xorl
ljmp
jle
scas
shll
push
mov
pop
mov
push
push
jl
arpl
daa
jge
adc
iret
inc
flds
mov
ds
cs
out
mov
es
pop
pop
sub
flds
iret
es
ficomps
add
and
and
in
mov
out
jb
xchg
ja
rcrb
xor
aam
dec
xchg
add
lret
inc
xchg
pop
iret
jge
fnstcw
dec
stc
sti
adc
dec
pop
lock
movsb
jb
push
hlt
adc
jae
mov
mov
subb
stos
jl
cmp
jl,pn
adc
mov
adc
in
jno
enter
push
lea
cmp
dec
mov
xchg
jmp
jb
xchg
inc
mov
fcomps
inc
cmpsb
mov
jno
outsb
mov
stos
push
pop
inc
pop
push
outsb
inc
sti
cmp
sub
xchg
and
aaa
cmp
adc
mov
and
or
sbb
cmp
jae
mov
jb
clc
loope
mov
fbld
and
inc
and
push
jo
adc
dec
dec
lahf
jnp
cli
les
scas
pop
mov
mov
cmpsb
mov
cmpsl
outsl
addr16
and
dec
test
mov
movsl
jb
mov
addl
cmp
mov
in
outsb
and
loopne
xchg
xor
insl
xchg
daa
flds
xchg
inc
pop
imul
stc
or
push
pop
jo,pn
pop
mov
mov
iret
add
cltd
jg
lret
outsl
add
add
push
sbb
mov
call
jnp
cmp
rclb
mov
cmpb
mov
hlt
outsl
sbb
push
out
jno
and
sbb
in
cmp
cmp
or
frstor
jp
add
mov
in
icebp
sbb
mov
imul
jecxz
call
out
push
cli
mov
mov
in
outsb
out
and
scas
jl,pn
inc
enter
sub
sbb
movsb
out
sbb
lret
es
or
scas
incl
sbbl
lret
dec
std
cwtl
out
int3
adc
xchg
movsl
lret
imul
outsl
addr16
mov
mov
mov
jb
outsb
lods
pop
arpl
inc
and
xchg
enter
mov
hlt
jns
mov
and
lods
movsl
aas
mov
jmp
imul
add
test
pop
ds
inc
xchg
sub
and
arpl
lds
dec
shl
cli
insb
jmp
aaa
inc
in
dec
das
lret
fucomi
and
sub
movsb
pop
jg
andl
gs
dec
lds
jb
push
jno
imul
push
popf
mov
stos
arpl
pop
in
jge
push
add
cmp
pop
fdivrp
sub
jne
jb
cwtl
push
fwait
sbb
ja
sub
test
push
jle
mov
sbb
fisubl
mov
jbe
mov
pop
arpl
and
jge
fldcw
pop
hlt
add
dec
cli
xor
decb
and
sub
repz
mov
push
jge
adc
jne
inc
fistl
addr16
hlt
icebp
pop
add
lock
pop
fistl
pusha
inc
add
inc
iret
add
mov
xor
test
sbb
sbb
or
jae
sub
add
je
mov
mov
inc
jae
mov
push
out
mov
adcb
out
or
sub
mov
xor
mov
add
sub
sub
inc
mov
notb
imul
push
sahf
mov
test
cwtl
jo
jle
inc
pop
xchg
test
jnp
or
test
mov
rolb
push
inc
pop
clc
lret
xchg
sub
inc
movb
mov
iret
out
pop
fdivrl
into
and
push
push
sti
pop
inc
push
jmp
cltd
pop
xor
mov
mov
xchg
rcll
mov
sbb
dec
mov
inc
sahf
sahf
inc
cmpsl
adc
dec
jae
adc
bound
push
jg
add
hlt
dec
add
mov
arpl
sbb
enter
dec
push
sti
push
test
xchg
mov
mov
rorb
inc
add
in
xchg
add
adc
arpl
add
adc
ss
movsb
arpl
cmp
cmp
ljmp
and
inc
push
adc
cmp
add
lea
pop
sub
xchg
dec
push
out
push
xchg
adc
pop
aaa
cmpsl
dec
cli
cmpsb
jge
inc
outsb
shlb
mov
xor
repz
sub
add
xlat
pop
outsl
jb
cmp
enter
dec
dec
mov
push
sub
ja
in
mov
mov
push
jnp
xchg
testl
out
cmc
pop
xchg
xor
push
adc
push
push
inc
pop
jl
movsb
mov
pop
inc
imul
push
call
adc
mov
mov
mov
mov
and
test
mov
arpl
scas
inc
xchg
or
or
subb
inc
das
in
leave
test
jno
jnp
fmuls
push
pop
push
shrb
es
mov
movsl
add
xor
mov
add
mov
sub
scas
out
mov
adc
hlt
mov
ss
pop
xor
mov
or
pop
xchg
outsl
nop
jg
mov
test
popf
jae
or
jl
add
rclb
sti
push
into
pop
insl
mov
orb
lods
imul
add
dec
push
daa
xor
das
test
xchg
pop
sub
loop
xchg
xchg
sbb
into
pop
xchg
imul
rcr
lea
xchg
jae
outsl
pop
jmp
cwtd
mov
and
cmp
js
jmp
add
lahf
std
addr16
enter
xchg
push
cli
rcrl
and
push
xor
imul
mov
push
pop
add
mov
clc
insb
lea
cmpsb
xor
aaa
test
dec
mov
add
jb
adc
add
cwtl
repz
inc
add
aam
and
cmpsl
mov
imul
add
jne
pop
jge
mov
and
popf
or
sub
test
push
sub
repz
inc
jnp
pop
pop
mov
nop
and
lods
shrb
mov
rorb
mov
adc
mov
cmpsb
push
push
daa
loop
aad
jle
push
and
test
xor
outsl
mov
sar
sub
push
xchg
inc
das
add
das
outsl
in
pop
jne
leave
out
xor
inc
rcrb
insb
dec
mov
popf
dec
scas
scas
test
in
arpl
loop
out
add
pusha
movsl
out
orl
pop
xchg
push
dec
xchg
xorl
cmp
dec
mov
jae
sti
pop
sbb
inc
subb
test
add
mov
dec
sub
loopne
fs
repnz
xchg
repz
xor
mov
xor
sub
fisttpll
cli
outsb
aas
mov
xchg
loope
es
mov
mov
daa
int
insb
mulb
out
mov
hlt
jne
mov
mov
mov
insb
inc
mov
outsl
jl
fnstcw
out
pop
cmp
pop
movsb
fdivr
js
shl
mov
out
js
sbbl
xlat
test
jp
and
call
xor
mov
outsl
mov
in
mov
cmp
in
xor
sahf
movsl
and
ror
sbb
jo
je
and
adc
jp
dec
pop
cmpsb
and
outsl
push
outsl
jg
lods
cmp
sbb
push
pop
test
popf
add
jge
sbb
inc
dec
ds
sbb
inc
mov
shrl
adc
dec
lods
cmp
sti
repnz
fwait
pop
pop
sbb
mov
out
cmpsb
pusha
iret
push
add
inc
les
sub
fiaddl
cmp
inc
repnz
mov
popa
popf
gs
jecxz
cwtl
daa
cmc
xchg
aad
sbb
mov
jmp
dec
lret
xchg
scas
xchg
sub
adc
mov
mov
bound
inc
adc
rol
mov
jl
cmp
int3
insl
adc
arpl
lods
sbbl
sbb
shll
idiv
mov
out
inc
push
inc
add
inc
or
pop
push
mov
fstpt
jnp
dec
in
cwtl
push
mov
and
xchg
mov
lcall
inc
mov
lret
xchg
xchg
mov
test
and
data16
cmpsl
inc
jge,pt
mov
lock
pop
add
bound
out
and
sti
mov
cld
jns
hlt
mov
test
pop
push
outsl
divb
sub
inc
iret
outsl
repz
mov
inc
dec
outsb
mov
nop
inc
cmpsl
or
sbb
adc
lock
out
daa
mov
add
inc
mov
and
mov
cmp
inc
cmp
lret
jp
je
xor
jo
inc
arpl
in
sbb
push
dec
xlat
das
js
jge
iret
mov
pop
dec
add
pushf
pusha
jo
mov
mov
pop
cmp
xor
xor
movsl
pop
loopne
mov
add
test
or
mov
cmp
cmpsl
mov
shrl
daa
cmp
cmp
sete
icebp
jns
mov
push
mov
dec
sub
sub
cmp
into
or
shrb
stc
imul
clc
add
cmp
jmp
out
lret
daa
mov
xchg
mov
mov
imul
cmp
mov
jge
jl
and
or
cmp
sbb
push
fsts
jae
cld
pop
or
je
and
sub
movsb
call
lahf
sub
adc
cltd
xchg
xchg
dec
fsubl
pop
adc
jp
lods
nop
jbe
das
cmp
popf
pusha
shrw
dec
insb
xor
dec
aam
mov
je
adc
sbb
xor
imul
push
push
iret
jo
xchg
push
hlt
cltd
mov
pop
jnp
mull
fxch
call
jns
into
xorl
cmp
adc
and
pop
adc
dec
mov
sub
mov
sbb
and
leave
mov
add
popa
xchg
jb
adc
daa
push
insl
out
pop
jae
call
stc
les
jl
mov
push
mov
leave
inc
pop
lahf
faddl
insb
jle
mov
cmp
adc
popf
xchg
mov
xor
lcall
fadds
call
enter
dec
repz
cmp
xchg
addb
push
aaa
insl
cmp
in
inc
lahf
inc
daa
mov
js
scas
pusha
push
fiaddl
jmp
mov
les
pop
cmp
xchg
lret
cmc
mov
pop
insl
xchg
inc
aad
repnz
jno
mov
fiaddl
jl
popf
mov
popf
loope
add
mov
sub
push
mov
sbb
pop
outsb
and
dec
aaa
pop
lods
popa
call
sbb
cmp
call
lahf
repz
inc
sbb
sbb
inc
mov
dec
cld
pusha
js
pushf
xor
cmp
xchg
test
rcr
push
mov
jp
or
scas
test
jge
mov
sbb
sbb
jp
adc
mov
out
xchg
jne
sbb
insb
xchg
pop
addr16
mov
das
das
clc
or
sub
dec
xor
negb
or
jge
mov
jns
inc
cmp
adc
lea
enter
sub
push
pop
add
dec
cmc
add
adc
test
pop
xchg
mov
sbb
mov
adc
add
shrb
outsb
movsb
mov
xchg
mov
out
push
into
popa
aas
addl
inc
movsb
iret
andb
jae
cmp
mov
inc
in
decb
cmpsb
cmp
add
sbb
mov
scas
push
stos
xchg
andb
iret
test
push
sti
pop
xor
cmp
inc
add
mov
sub
jnp
mov
pop
mov
jmp
inc
mull
fs
ljmp
lods
mov
sub
out
sbb
mov
aaa
aaa
nop
stc
pop
jo
mov
mov
push
dec
jp
inc
ret
addl
jmp
dec
pop
jp
lds
loop
pop
push
lock
sbb
hlt
jmp
xchg
mov
or
rcll
movsb
aas
popa
in
cmp
mov
lahf
dec
popf
mov
xchg
jmp
test
sub
lods
add
xor
push
cmpsb
out
jns
shll
fdivl
outsl
fsts
pop
mov
mov
xor
in
mov
push
jne
rcrl
inc
mov
and
pusha
or
add
xor
mov
arpl
insb
inc
stos
gs
mov
sbb
insb
dec
fucomip
xor
cmp
les
adc
xchg
jmp
mov
mov
popa
stos
fs
lretw
xor
in
fsubs
mov
ret
dec
cmp
cmp
fidivs
mov
pop
sahf
insl
mov
psubusb
push
dec
dec
out
add
xchg
push
mov
fnsave
mov
imul
mov
stos
pop
insb
dec
aam
jbe
fbld
das
pushl
xchg
adc
leave
lahf
pop
sbb
xor
fdivl
adc
push
sti
xor
inc
add
sbb
cmpsb
les
inc
jno
leave
rorl
fdiv
nop
mov
rcr
cmp
and
std
pop
mov
sbb
decb
dec
lret
bound
into
push
jb
and
jae
jae
int3
xchg
cmc
add
adcl
mov
mov
inc
sbbl
stc
jl
mov
or
mov
ret
insl
inc
pusha
pop
inc
xor
ds
repnz
ds
out
fwait
call
out
mov
add
test
in
sbb
orl
lds
out
fcoms
pop
pop
pop
jg
nopl
add
ljmp
imul
fisubrs
and
pushw
cld
adcl
rorb
cmp
add
xchg
cs
pushf
mov
sbb
aaa
add
gs
jbe
repnz
mov
jmp
push
es
lds
mov
pop
xchg
xchg
les
enter
arpl
lahf
int
inc
push
sahf
pop
and
enter
test
pop
mov
mov
je
stos
sarl
loope
xor
pop
pop
jg
cmpsl
mov
inc
lret
sbb
push
mov
dec
rol
outsb
icebp
cmp
pop
pop
jl
xor
test
out
cli
dec
jns
fucom
test
std
out
mov
rcrb
pop
cmp
leave
mov
ja
sti
lret
test
cld
dec
push
or
mov
mov
call
push
sbb
lods
div
icebp
lea
outsl
push
sbb
push
enter
push
cltd
fistps
into
insb
fidivrl
jmp
mov
add
in
jne
push
cmpsl
aaa
adc
mov
dec
stos
mov
cmp
aam
insl
adc
mov
dec
jg
xchg
adc
andl
fistl
add
adc
mov
mov
cmc
repnz
test
mov
push
adc
cmp
cmp
xchg
xor
das
hlt
jl
inc
call
test
or
dec
jle
jae
mov
dec
insl
push
cmp
shr
lods
ss
popa
pusha
lods
sbb
jne
imul
aad
add
cli
sub
into
cmp
lods
dec
jbe
jb
sub
or
pop
adc
out
pop
test
pushf
or
pop
hlt
add
cs
add
imul
clc
dec
adc
dec
andb
movsb
sub
cmp
pop
inc
xor
cmp
cmp
repnz
xchg
push
lds
adc
mov
inc
fs
sub
xchg
sbb
pop
dec
and
dec
dec
jle
bound
fsubrl
ja
sti
xor
xchg
je
adc
fisttpll
fs
stos
fsubrl
jne
dec
cmpsb
outsb
dec
mov
xchg
stos
xchg
xchg
ret
cmp
sbb
call
sti
inc
ljmp
addr16
repnz
fmuls
push
loop
push
jne
push
cmc
mov
cld
xor
mov
out
xchg
decl
jge
jp
lods
cmpsl
fs
cmp
test
test
lods
jbe
fisubrs
mov
outsl
xchg
push
xor
aaa
lcall
scas
loop
nop
loope
push
sub
adc
sub
cwtl
mov
loope
push
push
outsl
xchg
or
hlt
adc
sbb
push
pop
inc
inc
jnp
jp
jne
xchg
inc
insb
mov
cmc
lea
pop
hlt
add
pop
jnp
mov
arpl
sbb
ja
stos
push
inc
and
jnp
dec
into
add
mov
xchg
je
rcl
push
push
push
dec
roll
and
das
cmp
incl
push
iret
in
pop
out
cmp
icebp
pop
push
sub
xor
ror
pop
inc
mov
jge
cmp
jnp
insl
and
movsl
out
dec
or
jbe
ljmp
das
jp
and
loop
adc
dec
ljmp
cwtl
push
cwtl
cwtl
xchg
mov
inc
pop
push
mov
scas
daa
rcll
jle
pop
out
sahf
jae
loope
gs
mov
lret
aam
inc
ret
je
mov
mov
and
lret
add
lods
loopne
push
xchg
jno
cmp
jnp
sbb
into
jge
sarl
adc
stc
test
adc
sbb
jo
jb
pop
pop
push
inc
xor
cld
imul
cli
pop
xchg
arpl
mov
pushf
adc
imul
clc
adc
out
imul
dec
fldenv
fwait
stos
dec
and
sarb
fdivrs
cmpsb
pop
inc
insl
inc
sbb
mov
fnstcw
xchg
movswl
sti
imul
sti
push
sbb
stos
in
test
in
and
mov
add
jnp
adc
imul
inc
mov
adc
lds
je
adc
jge,pt
dec
inc
mov
shll
push
jg
jno
add
rcl
pop
sbb
xlat
outsb
mov
lods
call
sbb
mov
mov
jl
fadds
test
out
mov
sub
inc
scas
outsb
movsb
roll
mov
mov
repnz
or
out
scas
and
push
jne
sbb
clc
cmp
aad
xchg
gs
jmp
repz
sbb
hlt
test
push
inc
dec
lods
cmp
pop
mov
rorb
cmp
cmpsl
lock
push
test
adc
xchg
aas
movsl
sti
and
jle
pop
hlt
jno
jmp
std
aaa
dec
popf
mov
xchg
push
arpl
dec
fwait
jge
stc
in
imul
add
jg
adc
mov
push
mov
inc
adc
shl
jo
movsb
adc
sbb
jno
jo
inc
out
js
insb
jo
stos
jae
mov
mov
je
push
addr16
jbe
add
sub
mov
inc
cmp
clc
pop
inc
loopne
cmp
ljmp
dec
push
inc
sub
daa
xor
jnp
nop
into
aaa
add
sub
stos
out
add
lret
clc
push
fwait
sub
mov
fcmovbe
xchg
out
mov
imulb
lods
inc
lods
jp
xor
insb
fistpl
and
pop
push
adc
mov
lds
or
cwtl
adc
xor
jg
sbb
pop
in
push
imul
iret
arpl
orl
inc
cwtl
adc
pop
xor
shr
scas
xchg
mov
enter
test
ja
pop
mov
mov
and
dec
ret
push
dec
push
sbb
pop
pop
aaa
arpl
ds
incl
inc
xor
xchg
add
mov
mov
insb
es
pop
lret
mov
lret
mov
insb
lods
repz
outsb
sub
fistpl
mov
outsb
loopne
repz
mov
push
pop
jno
pop
test
aam
dec
bound
xchg
cmp
mov
out
pop
and
and
or
jecxz
shlb
out
mov
inc
out
fbstp
or
xor
mov
imul
jbe
das
cmpsb
movsl
sub
cmpsl
movsl
dec
in
cmp
mov
cmpsb
outsl
mov
xchg
mov
sbb
test
sub
mov
sahf
adc
addr16
or
pop
popa
mov
mov
and
lret
or
inc
mov
mov
outsl
or
movsb
adc
cmp
push
call
pushf
inc
ja
adc
pop
dec
rcrb
lahf
jnp
dec
xorl
mov
out
ret
lret
decb
in
imul
popf
int3
cmp
pop
mov
jbe
xchg
mov
push
imull
adc
fcomps
loop
pop
add
jmp
cmpsl
mov
or
lahf
call
fimuls
push
and
int3
push
mov
dec
push
sub
and
lods
fldl
mov
dec
cmp
loopne
dec
out
cltd
xchg
sbb
xchg
jecxz
lret
and
mov
mov
rorl
stc
xchg
add
aad
daa
add
rolb
fnstenv
xor
xor
xchg
inc
xchg
icebp
icebp
mov
cmp
subb
test
mov
xchg
mov
sbb
movsb
enter
shll
into
cli
mov
outsb
lret
jno
add
gs
icebp
sahf
je
lds
push
pop
sbb
gs
pushl
fistpl
push
mov
test
mov
lods
repz
dec
adc
fs
pop
push
out
hlt
sbb
and
mov
daa
imul
push
cmp
mov
sub
das
jae
pop
xor
dec
sbb
andb
adc
out
fists
scas
jns
push
cmp
pop
into
fadds
imul
ds
movsb
jp
popa
inc
mov
pop
pop
pop
dec
sbb
inc
stos
mov
push
lcall
cmpsb
test
inc
cmp
bound
pop
pop
xchg
mov
push
push
and
or
dec
in
mov
scas
xchg
out
jg
repnz
mov
roll
pop
sbb
pop
dec
cmp
pop
add
inc
dec
or
out
dec
mov
dec
addr16
mov
adc
sbbl
push
or
cmpsl
jb
mov
inc
dec
stos
push
jae
sbb
push
pop
insb
pushf
ret
jae
xor
ja
push
mov
inc
iret
push
imull
ret
inc
adc
mov
call
insl
jmp
add
sbb
push
lods
fxch
mov
mov
lds
pop
mov
out
lock
xlat
outsl
mov
lock
dec
jbe
lock
cmpsb
adc
mov
xor
sbb
hlt
shr
push
push
cmpsl
movsl
mov
adc
in
movsb
or
sti
rcrb
fcoms
imul
dec
mov
inc
inc
insl
xchg
push
into
push
xchg
push
xchg
mov
mov
gs
test
push
shrl
jge
pop
ret
pop
mov
xchg
adc
cmp
movsl
sub
popa
pop
sub
fsubr
mov
iret
sub
adc
pusha
insb
jno
cmc
mov
and
jo
adc
imul
jg
mov
and
mov
ret
loop
push
lds
or
adc
xor
lock
sub
lds
add
fwait
pop
sti
add
inc
sbb
push
ds
cs
int
push
cmp
sbb
lods
jp
lods
and
mov
sbb
mov
bound
xchg
push
jnp
adc
movsl
mov
push
daa
std
push
lret
inc
or
popa
cmp
nop
mov
jno
scas
loopne
push
cld
movsb
outsl
mov
xchg
adc
cs
aas
inc
jbe
dec
mov
jae
test
push
xchg
arpl
mov
pop
or
adc
repnz
jge
or
xchg
shr
add
sti
addr16
pushf
push
sub
adc
cld
sti
cmp
out
inc
lret
or
dec
inc
aad
cmp
jp
add
jnp
jno
test
cmp
leave
scas
cltd
cmpsl
dec
inc
mov
mov
test
xor
inc
and
out
enter
or
and
jbe
pop
jmp
xor
int3
popf
sahf
sbb
ljmp
dec
adc
dec
mov
xchg
adc
fwait
add
lods
fnstenv
adc
or
in
mov
leave
inc
pop
outsb
xchg
xor
pop
pop
dec
jp
xchg
mov
pusha
cld
add
jmp
dec
rcll
mov
and
inc
xchg
and
mov
out
adcl
lcall
push
push
mov
outsb
dec
scas
movsl
mov
dec
sub
fidivrs
and
pop
mov
push
mov
push
outsl
jae
push
addr16
xor
ja
test
and
jmp
movsb
sti
xlat
lahf
mov
in
and
scas
mov
lock
popw
les
cmp
shll
sbb
xchg
sub
in
dec
jae
and
mul
xor
in
scas
gs
xchg
insl
cmp
fwait
add
push
popa
or
push
inc
mov
loopne
stos
pop
outsb
lock
pop
push
xor
mov
sub
jno
dec
insl
sub
and
or
sbb
shlb
mov
push
or
into
repnz
insl
shll
mov
sbb
ror
cltd
in
aaa
lock
je
mov
lcall
outsb
jp
jno
aas
ja
push
jge
push
stos
inc
sti
xchg
mov
sar
outsl
mov
sbb
mov
jle
repnz
mov
pop
jp
xchg
fimuls
outsl
jnp
es
idivl
int
jp
jo
push
adc
stc
xchg
pop
adc
xor
cmp
imul
fsubrs
daa
cmp
das
sti
pop
mov
pop
ja
add
lods
dec
loopne
pop
fs
inc
psrad
dec
sbb
decl
adc
into
call
fistpl
enter
cmp
movsl
and
push
sbb
and
imul
xlat
inc
mov
cmp
push
rcr
sbb
jg
fcomip
and
mov
stc
dec
inc
pop
ret
pop
or
xchg
pop
mov
js
addb
jg
sub
and
pop
xchg
xchg
fs
or
data16
push
lods
ret
jns
mov
jecxz
xor
hlt
dec
push
sahf
pop
dec
mov
push
pop
mov
sbbl
sub
pop
inc
jo
lea
adc
popw
loope
xchg
add
sub
xor
mov
xchg
pop
xor
popf
mov
pop
dec
leave
cmp
lds
inc
aas
in
lods
ja
enter
mov
sbb
adc
outsb
inc
scas
jae
mov
sbb
mov
mov
xchg
or
lods
cmp
daa
ret
addr16
jp
inc
aad
push
sbb
enter
cmp
mov
daa
and
xor
lahf
lea
pop
inc
jb
in
jno
lds
mov
es
mov
imul
sbb
cld
sbb
fs
in
xchg
dec
mov
sbb
push
fcompl
xchg
int3
insl
cwtl
sub
mov
lret
push
hlt
rolb
jmp
sbb
sbb
xor
jmp
pop
outsl
jmp
dec
cltd
cld
mov
fnstcw
outsl
rorl
jb
inc
fstps
ret
add
fwait
cmp
adc
add
dec
or
xchg
xchg
imul
sahf
jmp
mov
in
pusha
push
pop
and
aad
lods
adc
mov
push
pop
mov
in
cmpsl
cmpsl
mov
scas
mov
mov
or
outsl
mov
push
fs
or
dec
in
imul
movsl
jns
pushf
mov
xor
push
mov
repz
push
dec
xorl
xlat
addr16
aam
test
mov
mov
or
addr16
push
or
in
rcrb
xchg
lahf
cmp
push
sbb
repnz
pop
push
imul
push
push
xchg
and
test
cmpsl
faddl
cmpsb
loop
sbb
call
pop
add
fsts
jae
xchg
jb
nop
mov
adc
data16
pop
dec
mov
popa
mov
sahf
xor
lret
out
cmpsb
cmpb
test
push
mov
faddp
xchg
out
and
mov
add
mov
jmp
out
jg
pop
addr16
add
outsl
aas
mov
in
mov
pop
test
enter
sti
cltd
mov
dec
pusha
mov
or
stc
mov
repz
adc
or
xor
test
enter
fcompl
aas
jo
mov
stos
mov
mov
movsb
out
jmp
xor
push
xchg
mov
dec
and
enter
shlb
setge
mov
mov
xchg
cmp
mov
sbb
test
sbb
mov
mov
stos
mov
xchg
xchg
stos
inc
xchg
andl
sub
jae
jne
out
outsl
bound
mov
es
pop
arpl
stos
ficoml
dec
jnp
mov
dec
out
jno
inc
fdivl
add
pop
outsb
das
test
pusha
rcrb
cmp
and
sub
pop
push
jge
in
xchg
shlb
and
movsb
push
sbb
mov
fstpt
les
inc
mov
jns
ds
mov
fdivrl
jle
add
mov
imul
sbb
imul
aas
add
xchg
inc
push
sar
xor
xchg
test
dec
sbb
mov
ds
mov
pmullw
xor
pop
sub
sahf
lcall
dec
mov
jo
je
xchg
dec
clc
jle
adc
dec
cwtl
or
jmp
ja
fiadds
dec
sti
jl
sub
mov
test
movsb
lods
test
mov
test
mov
jne
jns
jge
jnp
sub
pcmpeqb
mov
add
loopne
xor
cmp
mov
xchg
clc
test
push
sub
andl
xchg
aam
push
or
ds
push
mov
xlat
test
inc
fstpt
push
test
mov
xlat
mov
or
mov
mov
push
and
fs
sub
int
pop
sbb
jg
mov
outsb
sbb
arpl
int3
ffreep
jmp
mov
mov
jns
dec
inc
jg
push
ret
lds
cmp
test
es
lds
mov
and
mov
mov
inc
mov
std
cmp
jo
pop
pop
insl
inc
sbb
pop
xor
push
sub
inc
ja
mov
aaa
ret
mov
and
mov
test
loope
push
sar
mov
cld
es
lret
ja
xor
imul
or
ljmp
mov
add
push
and
stos
mov
lock
std
sbb
inc
xchg
pop
add
mov
xor
and
imul
enter
ret
in
hlt
push
aas
je
aaa
jecxz
xor
call
pop
pushf
mov
dec
add
mov
push
test
pop
mov
sahf
mov
and
mov
outsl
mov
fildl
sbb
repnz
mov
sbb
xchg
mov
mov
or
or
mov
frndint
or
push
imul
in
mov
rorb
mov
stos
xchg
cmp
bsr
ret
inc
jae
inc
pop
pop
sbb
pop
pusha
cld
scas
shlb
sbb
addr16
incl
adc
and
xchg
lcall
gs
dec
xor
stc
fwait
mov
out
mov
push
sub
jnp
sbb
movl
insl
ret
adc
js
pop
es
je
test
daa
dec
and
out
sub
js
rcrb
jno
jbe
push
mov
and
xchg
repnz
fnstsw
push
into
cmp
xor
cmp
sahf
fmuls
inc
inc
xchg
xchg
inc
gs
cmpsb
dec
inc
bound
lods
push
xor
movsb
std
data16
data16
out
nop
push
mov
pop
ds
pop
fdivr
adc
xchg
ja
or
sub
inc
xchg
jp
fsubrs
lcall
iret
mov
jns
cld
jl
mov
mov
push
int
aaa
inc
out
ja
pop
mov
outsl
adc
push
ljmp
mov
sub
and
and
mov
mov
xlat
mov
insb
loope
and
cs
dec
xor
dec
clc
sahf
addr16
arpl
push
insl
mov
xor
out
mov
jae
and
or
lods
mov
lret
dec
bound
adc
xchg
xchg
lret
ja
jno
insl
and
jle
pusha
aam
cmp
dec
mov
ja
and
lods
les
mov
std
pop
daa
push
daa
ljmp
add
in
sbb
mov
bound
and
test
fwait
popf
sbb
inc
lods
std
movsb
lods
scas
pop
fwait
sbb
outsb
pop
loop
enter
ror
repz
mov
fs
mov
rolb
xchg
fdivrs
dec
mov
daa
loop
and
cmp
insl
push
lea
dec
fsubrs
and
push
push
inc
pop
sbb
daa
and
sbb
adc
push
push
jmp
add
sub
sbb
test
test
inc
scas
or
xor
mov
or
xchg
or
int
cli
xchg
cmp
jmp
sub
mov
lods
icebp
shll
adc
mov
pop
popa
jno
xchg
inc
dec
outsl
push
sti
xor
jns
sub
xor
xorl
xchg
cld
pusha
ljmp
sbb
sub
mov
sti
push
repz
in
push
jecxz
in
push
jmpw
jbe
lods
daa
pop
sbb
enter
nop
cld
ds
push
xor
int
xchg
jbe
pop
scas
pop
mov
rcrb
lods
int
pop
out
xchg
fstpt
sbb
mov
lahf
inc
lret
xchg
xchg
push
aad
lock
stos
cmp
mov
push
mov
pop
test
jb
stos
push
movsl
fs
push
movl
pop
jg
jle
mov
ficoml
push
sub
cmp
xchg
or
jge
orb
jno
insb
test
repnz
pop
add
adc
sub
mov
and
cmpsb
lret
dec
test
sbb
jae
and
pushl
pop
outsb
inc
fsts
mov
mov
cmpsl
ficomps
icebp
push
jns
mov
and
xchg
loop
aaa
push
sbb
jbe
sub
in
pop
out
dec
adc
out
inc
xchg
loop
xchg
mov
mov
repnz
jo
pop
out
pop
xor
adc
sub
xor
ficompl
jb
sub
insb
inc
xor
inc
divb
sub
pop
bound
scas
cmp
in
mov
in
mov
loope
movsb
sub
cmp
arpl
outsl
lds
sar
cmp
mov
cmp
aad
cmp
xor
adc
js
sub
test
mov
int
cmp
mov
xchg
jle
mov
test
jb
push
inc
pusha
sbb
cwtl
xchg
pop
sti
out
pop
xor
jge
xor
stos
cmp
cmpsl
pusha
xor
or
sahf
ss
sub
dec
dec
aam
mov
aaa
inc
mov
sbb
sub
sub
xchg
test
jb
inc
popf
mov
push
add
cmpsl
cmc
adc
add
int
mull
je
cmp
mov
mov
jge
aas
xor
sbb
insl
xchg
jl
mov
dec
push
outsl
mov
cmpsl
aas
addr16
ja
enter
outsb
cmpsb
lock
arpl
into
add
stos
in
je
and
pop
nop
rorb
sub
mov
push
cmp
insl
dec
popa
jno
xchg
addl
sbb
loopne
es
enter
scas
cwtl
testl
jo
into
stc
stos
popa
testl
and
xchg
int3
pop
push
nop
pop
push
stc
push
pop
lock
pop
imul
je
test
inc
and
sbb
lcall
out
cmp
mov
icebp
dec
into
dec
cmp
inc
sbb
mov
fistps
pop
sub
mov
pop
inc
pop
ja
bound
loop
sti
and
in
cmp
and
cmp
scas
and
or
adc
arpl
loope
movsb
movsl
repz
sarb
movsb
jns
insl
outsl
mov
data16
ljmp
fs
push
sub
inc
adc
add
cwtl
dec
add
lret
lret
sbb
xchg
das
ja
inc
mov
gs
xor
xor
xor
mov
xchg
cmp
mov
test
fdivs
popa
lods
mov
in
outsl
push
fdivrl
cmpb
and
subb
outsb
lret
mov
xor
jmp
pop
mov
fs
push
or
fs
in
mov
mov
js
xchg
push
lret
popa
mov
pop
xor
xchg
adc
inc
pop
sub
popa
test
sub
sbb
jnp
out
test
pop
dec
xor
fstp
movsb
cmc
push
push
mov
cltd
pop
mov
enter
clc
dec
arpl
daa
sub
sub
inc
testb
jae
and
lds
loop
in
cmp
pop
jno
test
loopne
shr
sahf
int3
mov
xchg
aaa
adc
dec
pusha
int3
mov
push
sbb
dec
add
push
scas
sub
in
lahf
jnp
and
jmp
xor
jl
ret
add
enter
mov
gs
push
and
pushf
repnz
clc
xor
adc
or
or
mov
mov
sbb
mov
mov
jbe
jbe
push
add
jmp
cmpsb
ficoms
inc
mov
imul
adc
rcll
subl
cld
cs
mov
fs
push
cs
inc
pop
or
daa
mov
cmp
fs
cmp
rclb
or
sbb
scas
jp
sahf
les
imul
xchg
aam
leave
repz
lret
mov
bound
call
and
pop
int
dec
pop
and
xchg
mov
dec
ljmp
and
sar
jno
adc
mov
ja
mov
addr16
mov
ficomps
xor
jno
int
xchg
xchg
outsb
imul
mov
xlat
add
ljmp
test
and
out
pop
adc
aad
dec
xor
adc
cmp
inc
pop
subb
icebp
aam
jp
into
dec
xchg
aam
inc
sbb
push
push
cmp
es
pushf
and
jo
cltd
rcrb
push
jnp
pushf
sbb
xchg
jnp
mov
jl
ret
lods
inc
dec
sbb
and
xorl
add
xchg
pop
mov
imul
scas
clc
ret
inc
mov
mov
test
mov
icebp
out
bound
arpl
or
sbbb
test
jmp
xor
jmp
dec
fidivrl
sbb
out
and
sub
enter
clc
sahf
push
push
xor
or
xchg
push
shll
mov
pop
mov
pop
insb
push
test
rorl
lods
lods
loop
fiadds
fimuls
pusha
cltd
jns
pop
andl
sbb
dec
adc
movsb
pusha
jge
lods
push
cld
pop
mov
xchg
jo
loopne
popf
or
stos
cmp
lret
inc
push
sub
cmc
pop
sub
sbb
pop
xchg
js
shll
loope
int3
xchg
cmp
shll
push
xlat
insb
push
rorl
test
movsb
dec
dec
mov
and
inc
sbbb
mov
les
dec
push
push
inc
push
icebp
leave
cmp
push
adc
fsubl
ficoms
push
mov
mov
cmpsb
lods
add
sbb
or
pop
cmp
xor
and
movsl
add
and
call
popa
cmp
subb
jmp
sbb
and
jno
pop
add
pop
sbb
or
aad
stos
mov
add
outsl
mov
lods
insb
cmp
or
cli
dec
pop
test
xor
icebp
movsb
push
sti
arpl
inc
iret
xchg
lock
dec
pop
fs
adc
jo
imul
imul
xchg
sbb
arpl
aaa
outsl
cs
arpl
mov
cmp
push
inc
outsb
cmpsl
pop
popf
mov
imul
cld
rcrl
xor
cmc
test
push
cwtl
mov
mov
pop
push
or
lock
lret
push
add
push
jbe
cmp
les
inc
push
adc
cmp
js
stos
in
outsb
ficoml
iret
lds
dec
sub
xchg
mov
in
jno
ror
add
ja
xor
in
in
testb
test
jne
sub
add
cmpsl
jecxz
mov
aaa
xchg
gs
xchg
addb
loope
mov
out
pushf
enter
cmpsb
fistpl
loopne
mov
push
dec
movsb
cmpsl
ret
cmp
xor
dec
jnp
lahf
adc
sti
mov
scas
pop
add
cld
jecxz
cmpsl
and
cwtl
clc
or
mov
scas
out
or
and
icebp
out
sti
inc
mov
popf
repz
push
lock
sbb
std
adc
inc
jp
enter
popf
push
mov
fsubrl
adc
fsubr
lods
jb
mov
cmpsl
and
adc
jno
arpl
push
jmp
stos
push
imul
ds
push
mov
mov
xchg
inc
mov
sbb
push
adc
test
mov
add
sbb
xor
fisttpl
repz
ds
sub
ljmp
int
negb
inc
cmc
dec
stos
xchg
aas
pop
and
dec
xor
sub
mov
mov
pop
push
mov
fstl
inc
imul
fwait
popa
add
add
pop
mov
ds
lods
insl
xchg
scas
aad
cmp
or
push
jl
dec
ds
xor
stc
mov
cmp
inc
ss
inc
pop
ja
mov
xor
jbe
cmpsb
xchg
pop
out
in
aas
mov
rolb
dec
dec
cmp
mov
xchg
je
cli
insl
inc
sub
pushw
mov
pop
mov
lock
cmpsb
imul
iret
call
pop
out
cmpsl
test
pop
xor
mull
scas
ret
sbb
xchg
mov
out
xchg
add
mov
mov
into
add
inc
dec
pop
loope
repnz
imul
sbb
push
add
mov
test
sbb
lret
push
dec
fdivl
test
je
mov
lods
push
xor
or
pop
pop
lock
and
or
cmp
lods
dec
inc
loopne
cmpsb
out
jnp
lods
jmp
mov
mov
xor
xor
ret
addr16
mov
fs
xor
loopne
outsl
decb
push
sahf
sbb
mov
repz
nop
mov
cld
push
xchg
cli
cmp
imul
aaa
adc
fwait
jp
cmc
inc
jp
push
lods
cmp
mov
add
movsb
push
adc
jo
idivl
shlb
sub
and
ja
sub
stos
adc
mov
test
ret
subl
or
xchg
ds
adc
jbe
leave
int
outsl
inc
icebp
pop
push
loop
addr16
xchg
iret
ja
mov
sbb
mov
bound
lods
xor
add
jp
lods
pop
dec
mov
mov
stos
cs
sbb
rolb
mov
add
or
adc
fsts
dec
out
adc
xchg
dec
sbb
mov
rorl
cltd
out
cmp
aam
ltr
loope
cmp
and
shlb
jmp
enter
std
mov
cmp
loopne
jmp
outsl
ss
icebp
sbb
xchg
xchg
bound
jns,pt
hlt
lods
fmuls
lret
das
jo
dec
pop
dec
rcrl
fdivr
bound
sub
inc
sub
gs
lods
pop
add
cli
fisubl
sbb
mov
sbb
mov
dec
pop
icebp
push
xor
xchg
jae
mov
xchg
push
enter
je
lock
sub
xor
jb
lahf
push
iret
es
pop
ficoml
jl
or
pop
mov
in
in
mov
in
shlb
mov
idiv
jmp
xchg
sbb
push
adc
cmp
dec
in
scas
mov
fstpt
add
lock
int
aas
adc
xchg
sub
push
in
adc
mov
xor
add
adc
ficompl
enter
adc
ret
outsl
sub
subb
rorb
dec
aaa
sbb
xor
sbb
dec
mov
das
pop
xor
adcl
adc
sti
jae
xchg
mov
int
mov
dec
xor
mov
mov
add
push
push
cwtl
mov
cld
hlt
jle
cld
jns
dec
into
fwait
cmc
or
hlt
and
stos
arpl
sti
ret
loope
insb
jae
inc
out
xchg
mov
mov
mov
or
xchg
jp
pop
faddl
fs
mov
sbb
daa
cs
pushf
sbbb
xor
sbb
test
stc
cwtl
mov
mov
popa
xor
pop
xor
out
pop
inc
inc
outsl
test
cmc
ficomps
mov
xchg
out
insl
adc
and
dec
sbb
inc
ret
jmp
lcall
adc
pop
addr16
dec
addr16
hlt
test
bound
xchg
shrb
sub
sub
xchg
sbb
sahf
push
lret
mov
inc
mov
repz
rcl
iret
bswap
and
cwtl
ds
cmp
ficomps
mov
aad
in
dec
cmp
insb
or
stos
dec
imul
insl
adc
cmpsl
dec
loop
es
lret
sub
outsl
xchg
push
jne
jno
sub
int3
movl
jmp
ja
or
ja
mov
test
xchg
push
mov
pop
lret
sti
push
mov
fwait
lahf
insb
pushf
lods
jmp
and
aaa
dec
inc
inc
cmp
test
mov
negb
mov
jb
inc
xchg
mov
sub
add
test
sar
imul
insb
jg
test
shrb
jbe
je
shlb
pushf
test
mov
shll
lods
stos
jmp
or
dec
add
or
cmp
add
xor
cmp
jae
mov
fwait
dec
xor
outsl
pop
xlat
adc
sarl
cmpsl
filds
repnz
mov
pop
fs
cmp
add
pop
loop
jae
add
and
out
mov
pop
test
cmp
fdivrl
cmp
jns
das
mov
pop
mov
sbb
stc
cmp
xchg
add
or
in
or
cwtl
xlat
shlb
jecxz
es
jne
scas
cmp
lea
push
pop
sub
push
and
jg
or
mov
or
in
outsb
xor
pop
dec
push
push
getsec
jae
psubusb
clc
xor
cmp
enter
add
ret
pop
aam
lret
add
xchg
cmp
rolb
pop
push
popf
sti
arpl
adc
shlb
xor
rcrb
jle
lods
int3
loope
cmp
int3
inc
ss
sbb
inc
fdiv
inc
mov
push
cmp
xor
aad
cmpsb
mov
pop
sbb
or
fwait
cmp
popa
testl
jnp
call
jns
mov
sub
popa
mov
popf
rorb
mov
fidivrs
int
adc
dec
xchg
imul
and
scas
add
cmp
int3
pop
sub
add
xchg
cmc
sbb
stos
lods
aam
xor
mov
add
adcb
inc
sub
add
fbstp
add
aad
sahf
jb
fisubrs
cld
testl
rcrb
adc
lods
cld
mov
addr16
cld
test
addr16
sbb
pop
sti
movsl
mov
mov
shll
jnp
daa
rcr
mul
mov
popf
push
call
into
iret
cwtl
xchg
xor
fnsave
adc
sub
fildl
sub
push
fdivl
jmp
mov
dec
cld
outsb
mov
inc
je
mov
repz
push
mov
int3
das
daa
dec
mov
and
cwtl
inc
adc
sbb
xchg
scas
rol
xchg
inc
mov
dec
push
dec
add
dec
pop
pop
pop
and
test
mov
dec
roll
adc
popa
ljmp
or
sarl
adcl
add
hlt
lods
in
pushf
mov
pop
xchg
leave
add
rclb
cmp
adc
pop
cmp
leave
bound
icebp
lock
lcall
add
and
pop
movsl
rcrl
iret
cmp
pop
fimull
pop
test
jl
fwait
mov
add
out
inc
adc
adc
pop
pop
or
orb
jge
sub
pop
fnstenv
mov
push
popa
cli
or
aad
pop
test
aad
call
out
gs
pusha
sahf
add
call
rclb
lea
lcall
mov
leave
ljmp
mov
int3
iret
xor
jne
aad
dec
loopne
jne
or
outsl
xor
out
mov
mov
xchg
arpl
mov
addb
sub
das
sub
inc
and
out
adc
push
push
inc
and
call
sahf
xchg
out
cmp
data16
jge
add
adc
std
xor
mov
jl
sbb
dec
or
lcall
push
les
or
bound
push
jae
fwait
jbe
push
xchg
test
inc
cs
adc
pushf
mov
ss
das
lea
test
cmp
cmp
jnp
push
jmp
cltd
jne
cmp
xor
adc
add
inc
test
sbb
xchg
mov
push
rol
pop
sti
and
in
andb
out
adc
fsub
in
movsb
push
mov
aaa
pop
fsubl
outsl
insl
sub
cmpsl
and
mov
jg
pop
mov
mov
pop
into
jmp
jbe
xor
dec
ret
pushf
mov
jne
rolb
icebp
or
and
loop
or
dec
in
loopne
gs
adc
es
dec
ljmp
sub
adc
mov
mov
aam
fs
je
insl
sub
mov
cmp
or
sbb
mov
cmp
cwtl
ljmpw
adc
test
mov
test
pop
lods
dec
call
push
cli
push
sti
mov
enter
inc
push
xor
mov
pop
lcall
negb
lock
dec
sub
or
gs
jl
adc
push
decb
pop
xor
aam
add
sbb
imul
outsl
inc
in
stos
arpl
cmp
lea
add
mov
test
cli
inc
mov
cmpb
sbb
sbb
jbe
jge
or
in
lahf
jmp
in
fsubl
aad
mov
fwait
jmp
pop
and
or
push
stc
mov
mov
cmp
lea
outsl
add
int3
shll
pop
dec
push
cwtl
cli
movsb
mov
push
ss
sbb
mov
loopne
lahf
push
cltd
mov
jg
ja
or
push
repz
adc
dec
inc
pop
or
hlt
adc
jne
or
adc
rolb
jns,pt
cwtl
mov
jns
je
jl
push
dec
jl
push
push
inc
xor
orb
adc
and
mov
and
fsubs
sbb
xchg
fsubrl
mov
into
push
out
lods
jne
push
lods
mov
cmpb
int
cli
dec
fimuls
mov
ret
in
hlt
into
fnstsw
jmp
jle
xlat
xchg
pop
cli
aad
jnp
mov
mov
scas
stos
leave
cli
std
outsl
pop
inc
js
mov
and
push
mov
pop
mov
dec
aad
ret
and
pop
arpl
call
xchg
cs
loope
lea
mov
mov
fldl
cmc
inc
add
inc
mov
popf
pop
and
ficomps
dec
or
ss
into
xchg
add
jae
dec
mov
pop
dec
enter
xchg
call
or
lret
mov
ficoml
or
cmp
push
and
cmp
inc
mov
scas
push
inc
insb
loop
jl
insl
adc
add
push
jge
mov
jno
les
ja
sub
movsb
push
loopne
roll
or
adc
dec
pop
in
dec
test
imul
ret
and
test
xor
or
mov
ret
and
mov
and
or
cmp
inc
sbb
aam
repz
sub
sbb
fidivrs
jl
cmp
push
dec
scas
rcrl
repnz
aas
inc
stc
dec
inc
or
jb
mov
dec
jmp
ja
aam
loop
mov
cwtl
xchg
popa
jo
xchg
xchg
orl
or
sti
sahf
cli
mov
sahf
pop
sti
popa
mov
jmp
setne
mov
outsl
daa
mov
cmp
cmp
or
test
and
xchg
mov
loop
arpl
aam
xchg
sbb
or
adc
shrb
cwtl
dec
mov
insb
popf
inc
and
push
mov
pop
out
mov
cmp
cmp
mov
adc
cli
jge
cmp
pop
rorl
and
xchg
cmp
loopne
nop
icebp
cli
inc
pop
mov
push
outsl
adc
inc
addr16
pop
sub
maxps
clc
xor
mov
out
push
mov
and
adc
out
mov
ret
cmpsl
xchg
cmp
hlt
aam
pop
in
movsl
sub
jno
insb
mov
in
clc
stos
leave
mov
sbb
add
adc
inc
inc
test
cs
cmp
mov
js
pop
pop
inc
inc
lods
sub
stos
mov
imul
lahf
popa
or
mov
fs
mov
mov
daa
cmc
test
sub
push
mov
xchg
insb
jo
lods
out
in
decl
add
or
or
push
jae
sub
mov
fistps
ret
or
pop
pushf
addr16
jns
les
dec
xorl
call
push
cli
cli
clc
mov
lock
mov
sbb
into
mov
jmp
pop
bound
add
sub
xlat
adc
dec
loop
push
sub
test
cmpsl
jecxz
fsubp
sbb
sbb
add
outsb
lret
jbe
push
ljmp
mov
push
mov
mov
rolb
aad
xor
rolb
mov
enter
xchg
dec
sbb
xor
jl
jae
sub
lea
std
outsb
inc
adcb
cmc
mov
jnp
sbb
imul
lahf
inc
and
mov
mov
jns
cmp
cmp
popf
push
mov
lahf
adc
cmp
sbb
add
cld
pop
push
js
mov
sbb
hlt
push
shll
add
loopne
mov
cmpsw
inc
push
push
inc
dec
inc
into
popa
mov
adc
push
push
xchg
sub
std
sub
inc
loop
aad
sbb
repz
insb
daa
addl
fsubs
and
pop
and
cli
test
icebp
jne
jns
repz
ja
sti
inc
push
push
ljmp
sbb
movsl
dec
fldcw
aad
jl
push
enter
insb
rclb
cmpsb
movsl
imul
imul
icebp
push
andl
shll
out
int
jo
fld
sbb
jmp
mov
xor
lods
push
push
enter
push
or
mov
push
xor
mov
and
cmpsl
incb
lock
jne
arpl
mov
outsb
jmp
xor
dec
mov
and
in
les
mov
push
push
insl
jecxz
lds
mov
xchg
lds
outsb
cltd
push
push
cli
xchg
jmp
xor
add
adc
xchg
jg
cmp
cs
jle
push
or
inc
aad
arpl
add
jne
inc
lea
push
jge
clc
hlt
adc
popf
repz
adc
out
xchg
das
jle
out
cld
push
stc
out
pop
jne
leave
add
xor
int3
dec
mov
pop
push
pop
dec
lods
push
push
jecxz
sub
xchg
mov
bswap
sub
pushf
testl
mov
sbbb
and
pop
test
insb
lods
mov
das
xor
adc
mov
daa
mov
and
stos
movsb
lret
test
loopne
pop
mov
cmp
adc
xor
push
pop
test
or
out
cmp
mov
js
stc
out
orl
lahf
aaa
jmp
jae
xor
mov
push
mov
xlat
aam
xor
add
fwait
shll
jbe
in
xor
xchg
pop
int
xchg
shll
das
sbb
mov
fst
add
pop
push
push
testb
cmpsb
jl
mov
mov
push
push
and
dec
bound
cmp
xchg
andl
incl
xchg
jmp
mov
in
dec
push
stc
imul
enter
dec
jl
adc
mov
test
inc
int3
sahf
int
aaa
pop
ret
cld
in
pop
jge
jge
push
inc
xor
lret
cld
xchg
cmp
jge
push
push
std
jb
sub
pop
fs
cli
popa
hlt
xchg
stc
sarl
inc
push
mov
lret
es
ret
into
fsubrl
scas
aas
dec
jecxz
sub
or
push
inc
inc
and
inc
xor
mov
insb
andb
gs
xchg
shrl
ljmp
cmp
cli
in
mov
pushf
arpl
push
fdivrp
pop
sbb
mov
inc
jecxz
mov
int3
mov
cltd
loopne
sahf
out
sbb
jge
or
imul
int
std
pop
push
pop
or
arpl
mov
movsb
sti
add
mov
xlat
insb
lcall
fstpt
cmp
jg
rolb
fldcw
push
xor
jb
cmp
xchg
out
shlb
jl
add
addr16
lods
fadds
sahf
faddl
xlat
and
pop
test
lds
das
xlat
mov
bound
or
divl
dec
orl
xlat
cmp
inc
js
fldenv
inc
pusha
outsl
imul
inc
push
xor
pop
mov
stos
ds
icebp
jge
cmp
hlt
jge
test
and
subl
scas
in
pop
push
jg
mov
loop
fstps
xchg
call
arpl
inc
int
js
leave
pop
mov
aam
mov
inc
mov
std
or
mov
add
push
add
xchg
sbb
fnstsw
stos
inc
push
push
mov
jl
in
shl
loope
into
lret
jle
inc
mov
adc
mov
sahf
jne
cmp
pop
test
add
dec
add
xorl
test
rorb
jne
fsubs
add
xor
mov
mov
aad
and
dec
fidivl
cmp
push
jne
mov
arpl
push
or
cmp
pop
jb
jecxz
lods
push
scas
aas
test
nop
pop
jno
jge
je
jnp
push
mov
fstpl
out
fscale
mov
xchg
adc
loop
test
jno
push
and
xchg
xor
xchg
jns
out
mov
lods
xor
insl
cmp
xor
call
jnp
insb
aad
ss
roll
sub
cld
stos
sbb
leave
adc
test
cmpb
mov
std
adc
mov
push
xor
sar
and
cmp
fdiv
int3
add
jp
gs
cmp
jbe
jne
outsb
sbbb
add
adc
outsb
bnd
lret
out
dec
jle
or
cmpb
pop
pop
test
loope
mov
xlat
cs
jno
jbe
lcall
rol
data16
and
sbb
int
test
mov
gs
sbb
adc
cmc
add
pop
bound
sub
jbe
aad
adc
pop
or
outsb
arpl
xchg
jl
xchg
sahf
inc
loop
lock
loope
jecxz
lods
je
jg
aam
jno
sbb
push
insb
in
sub
sahf
popa
dec
pop
scas
cld
shll
xor
scas
rcrl
and
repz
lret
add
cmp
mov
cmp
sub
imul
repz
jmp
into
dec
sub
cmpsb
cli
jl
mov
lret
and
insl
pop
clc
bound
push
or
mov
pop
nop
and
sti
call
cmp
daa
jae
movsl
xchg
dec
inc
lea
xor
adc
dec
jmp
cmp
lret
mov
cmpsl
ljmp
in
mov
xchg
cmp
cmpsb
gs
in
jmp
mov
jl
into
cltd
call
sti
cmp
dec
les
mov
push
mov
test
cmp
dec
sub
mov
jo
repnz
pushf
xor
test
xor
lods
mov
dec
pusha
xor
sub
mov
dec
sbbl
jmp
push
std
fs
add
fstpt
sub
xchg
push
mov
shlb
mov
test
jns
xor
cmp
ds
adc
sub
jbe
bound
mov
jge
arpl
rcll
mov
xor
ror
int
sub
xchg
jg
xchg
dec
mov
add
dec
add
mov
xchg
or
mov
in
ds
call
shlb
jge
movsb
lods
adc
jge
mov
xor
inc
ss
in
jnp
pop
xor
aaa
mov
add
fidivrs
dec
into
add
add
arpl
or
fcoms
dec
adc
roll
pop
mov
xor
mov
int
mov
mov
movsb
xchg
movsb
add
mov
push
inc
sbb
pop
popf
out
dec
sbb
push
je
xchg
mov
sbb
dec
jecxz
pop
mov
loop
cli
xchg
mov
mov
test
add
cmp
mov
jns
push
push
sub
ja
in
scas
add
push
sub
inc
adcl
push
das
pop
or
and
or
loopne
sub
lods
fsub
mov
repz
jae
out
mov
sbb
jmp
cmp
int3
jbe
jns
scas
repnz
inc
mov
mov
ljmp
mov
test
out
hlt
and
fisubrl
cmp
and
stos
das
fisttpll
dec
dec
and
fcmovnb
cmpl
inc
loopne
sub
add
es
rorb
lret
js
cmpsb
ja
test
ss
jne
in
mov
popa
pop
int3
push
xchg
js
jmp
mov
mov
daa
adc
loop
cmp
jne
call
xorb
cmpsl
cmp
dec
sub
and
subl
sub
adc
jb
and
and
sub
jecxz
test
jp
lret
test
mov
mov
or
mul
add
test
adc
call
ja
bound
mov
jnp
lret
xchg
test
lods
push
dec
cmp
stc
cmpsl
fs
pop
jle
mov
sbb
inc
jb
add
pop
or
out
aas
rclb
sub
int3
arpl
rorb
fnsave
push
in
mov
mov
leave
stc
xchg
dec
xchg
fisttpl
xor
cmp
daa
inc
mov
mov
fstpt
xchg
mov
jns
mov
inc
cld
fstl
cmp
loopne
iret
leave
enter
cli
mov
pop
sub
data16
adc
aas
decb
inc
out
cmp
je
stos
test
mov
push
sbb
cltd
push
gs
jae
daa
setge
jl
dec
shl
andb
jae
inc
idivl
pop
add
jmp
cwtl
inc
int
inc
bound
fidivrs
add
dec
dec
pop
test
mov
add
test
repnz
pop
lret
xchg
fprem
xor
jl
dec
into
int3
je
xchg
push
inc
pusha
and
pop
inc
or
jg
cmpsl
inc
and
dec
jb
push
mov
push
faddl
add
scas
sarl
cmp
insb
jg
sahf
cmp
dec
test
jmp
cltd
jno
xor
sti
popl
jg
mov
jmp
mov
je
or
setae
inc
pop
pop
test
test
movsl
adc
xlat
xor
mov
mov
scas
addb
mov
lea
loope
xchg
test
int3
outsl
aad
fld1
or
sub
or
inc
js
bound
inc
mov
push
scas
mov
push
addl
mov
scas
adcl
shrb
outsb
mov
jne
mov
pop
outsl
outsb
add
dec
es
in
mov
push
fwait
add
bound
xchg
push
jg
outsl
es
inc
sub
jp
push
pop
pop
imul
or
gs
addr16
sahf
push
push
inc
xchg
insb
fildll
negb
jb
add
pop
mov
outsl
jge
cmp
push
inc
aaa
loope
jne,pt
jge
push
mov
dec
cmpsb
popf
lahf
mov
je
jg
int
dec
inc
pop
pushf
sti
jmp
lds
mov
cmp
bound
push
scas
fldcw
inc
je
scas
cld
in
cmp
mov
push
mov
sub
mov
jno
push
dec
scas
test
jno
push
dec
push
push
push
ss
add
jne
leave
imul
adc
andb
dec
cmp
mov
jno
jmp
inc
dec
hlt
filds
popa
pop
mov
push
jnp
imul
or
add
dec
inc
popf
lds
push
outsl
jne
lods
add
mov
imul
mov
push
xchg
inc
into
xorl
aad
sbb
scas
and
xchg
pushf
and
test
push
sub
xor
lea
mov
push
mov
insl
push
out
int3
pop
pop
cmp
test
mov
jo
aas
rcll
sub
dec
add
jae
add
outsl
loopne
jo
in
mov
jb
fld
les
pusha
jg
outsl
jg
jge
sub
imul
xor
nop
xchg
cmpb
mov
stos
outsb
push
push
outsl
imul
pusha
and
fiadds
mov
xchg
push
movnti
dec
adc
lret
popa
jo
push
or
mov
pop
setae
push
sbb
dec
in
popa
imul
outsb
or
push
sbb
sbbl
or
xor
inc
add
popf
fisttps
push
jmp
push
dec
pop
jge
lods
cmp
popa
data16
add
inc
mov
dec
test
xchg
mov
add
mov
imul
mov
xchg
es
paddb
aaa
push
xor
push
adc
fwait
nop
jmp
mov
inc
sbb
fsubrs
jp
dec
add
aas
inc
xlat
pop
imul
outsl
mov
dec
fwait
pop
or
int3
mov
mov
xor
insb
push
xchg
test
inc
push
dec
out
mov
pop
dec
or
lret
xor
or
arpl
adc
cwtl
jno
outsb
fisubrs
jbe
pop
addl
mov
push
mov
mov
leave
pusha
movsb
jle
dec
outsl
inc
add
mov
aad
jne
mov
dec
jae
imul
push
addr16
dec
xor
leave
scas
cmp
adc
imul
test
sub
cmc
push
in
sub
dec
sbb
push
call
rcrl
pushf
or
imulb
pop
dec
mov
repz
dec
adc
mov
out
lds
xlat
or
aas
movsb
sub
inc
dec
push
orb
mov
push
jae
jl
sbb
test
jne
fwait
pop
jg
clc
xchg
xchg
pop
ret
icebp
shrb
ja
xchg
pop
pushf
dec
xor
pop
test
sbb
jb
mov
je
movsl
arpl
pusha
jle
scas
sbbl
push
sub
inc
mov
stos
xchg
imul
jae
or
dec
add
dec
sbb
fistps
add
inc
js
pop
mov
jne
inc
jge
imul
pop
mov
repz
push
inc
xchg
in
out
scas
arpl
ficoml
and
outsl
ss
test
insl
pusha
stos
push
dec
fdivl
jae
jp
xchg
mov
push
pop
pop
push
push
enter
data16
xchg
add
dec
scas
push
jp
push
or
push
scas
subl
dec
jmp
pusha
fstpl
push
or
mov
add
jbe
stos
jle
mov
stos
repz
sub
dec
dec
and
pop
mov
or
fsubl
push
mov
rcrl
orb
movsb
or
or
pop
addr16
dec
pop
cwtl
insb
xchg
sub
mov
add
mov
scas
arpl
inc
in
mov
sbb
aas
pop
dec
clc
xchg
xchg
jnp
stos
cvtps2pd
sub
xchg
push
cltd
out
arpl
pop
or
dec
jae
faddl
pop
cmp
sbb
dec
lahf
xor
out
push
or
xor
jae
mov
pop
mov
mov
repnz
mov
popf
setb
mov
mov
dec
mov
movsl
jg
adc
subl
adc
pop
repz
xor
lahf
cmpsb
push
jle
scas
outsl
jae
cwtl
je
test
repz
dec
out
jae
notb
pop
adc
xchg
jb
xchg
daa
push
pusha
push
inc
insl
scas
lret
mov
jbe
xchg
xor
add
loope
mov
mov
dec
mov
lahf
dec
outsb
push
jno
adc
or
cmovge
dec
outsb
push
xchg
test
mov
pop
loope,pn
mov
inc
jo
and
jl
push
sbb
test
jb
inc
cli
xchg
fwait
imul
push
scas
add
pop
mov
aas
in
cwtl
jle
addr16
xchg
push
cld
popa
cmp
cmpsb
cmp
push
nop
fisttpll
xchg
outsb
sahf
mov
mov
cmpsb
mov
lcall
negb
pop
pop
mov
add
cmpsl
xchg
pop
out
scas
out
outsb
mov
aas
insl
loop
jg
mov
aam
scas
mov
push
lcall
in
inc
gs
inc
sub
xchg
jae
bound
ljmp
lock
scas
jecxz
dec
jbe
push
jle
sti
mov
outsl
push
imul
mov
push
adc
cmp
addr16
outsl
pusha
mov
pop
jnp
dec
outsl
pop
lret
jno
in
aas
dec
xchg
stos
inc
jo
pop
aas
jne
add
cmpsl
add
in
pushf
cltd
arpl
stos
cmpsb
cmp
mov
inc
daa
hlt
scas
adc
sarl
movsl
add
pusha
jg
push
jle
in
ljmp
inc
inc
jp
and
gs
mov
xchg
cmp
dec
mov
push
nop
cmp
add
mov
shl
or
xlat
xchg
xlat
rcl
in
pop
or
andb
in
pop
adc
fmuls
mov
call
into
jo
dec
hlt
xchg
ficompl
or
dec
mov
jg
jno
dec
xor
dec
add
or
pop
and
dec
dec
or
lods
sahf
jg
fbld
mov
sub
add
pop
inc
or
xchg
pop
pop
jmp
add
dec
rclb
inc
pop
mov
sbb
jmp
sarl
jo
adc
dec
sub
add
cltd
add
insl
dec
outsl
cmp
movsl
xchg
fs
jmp
rcrb
outsl
inc
int
pop
out
xchg
stos
sbb
mov
lods
pop
inc
or
call
sub
outsl
mov
jnp
cmp
pop
aam
test
xchg
mov
jg
outsl
arpl
mov
and
jno
xchg
sbb
xchg
dec
dec
ja
imul
fcomi
pop
fstpt
mov
cmc
mov
mov
cld
cmp
mov
mov
mov
mov
mov
pop
das
and
popf
pusha
jmp
jl
mov
je
stos
xor
push
imul
push
mov
stos
pop
push
jnp
add
push
jl
dec
test
popl
into
imul
jo
test
arpl
lock
leave
ljmp
dec
outsb
mov
mov
cltd
sbb
dec
popa
push
gs
lock
jne
test
dec
test
inc
jge
push
or
int
sbb
popa
in
push
gs
xor
jne
jnp
and
or
inc
pop
dec
jl
cmp
int3
inc
out
mov
mov
lcall
sub
push
aam
dec
fisttpl
enter
add
imul
xor
add
bound
adc
sub
push
xchg
aam
jl
les
dec
cmpsl
mov
inc
mov
shlb
mov
cmp
sti
mov
pop
lcall
out
push
rolb
xor
stc
jo
cli
adc
aaa
mov
jge
outsl
jg
pop
arpl
andb
pop
pop
mov
mov
lret
push
adc
pop
dec
test
jle
mov
outsb
outsl
sbb
mov
std
jle
cld
jnp
lea
lea
jnp
outsb
test
sub
cmpsl
dec
aad
inc
cmp
inc
cld
mov
sbb
sti
or
dec
sbb
and
cmp
mov
aad
clc
mov
jge
cmp
jge
pop
push
jle
iret
push
cmp
mov
pop
ja
xor
in
stos
andnps
mov
mov
ja
pop
and
jle
repz
mov
mov
push
push
dec
mov
fildl
pusha
cwtl
mov
cmp
pop
push
ja
jb
pop
dec
mov
cmpsb
lret
adc
add
mov
pusha
pop
or
insb
insb
pop
xor
iret
enter
xchg
pop
call
shlb
cld
jmp
inc
mov
ret
cmp
cld
mov
pop
inc
bnd
ret
dec
add
cmp
cmp
jge
adc
jns
fstpl
mov
sbb
lods
xor
pop
sbb
xchg
mov
out
repz
aas
call
dec
push
andb
jl
insl
mov
and
subb
out
repz
mov
jo
ljmp
push
mov
xchg
pop
sbb
cltd
push
push
or
in
jl
dec
push
imul
add
sub
add
mov
daa
pop
and
lods
and
xchg
outsb
pop
ret
sbb
jae,pn
xchg
in
arpl
push
xor
loope
ljmp
jbe
shr
test
in
or
add
rcll
lcall
cmp
xchg
pop
push
cmpsl
lcall
aad
inc
dec
test
pop
push
push
imul
mov
inc
scas
mov
dec
mov
imul
or
cld
dec
sub
push
lcall
xor
inc
decl
pop
arpl
push
je
outsl
lret
jno
pop
lret
dec
mov
xchg
adc
outsb
xchg
enter
out
aam
mov
repz
xchg
out
cmpsl
popf
add
cmp
push
mov
mov
sbb
jb
sub
outsb
orb
rcrb
out
pop
fsubl
adc
dec
jl
push
jmp
insl
icebp
push
sahf
pop
adc
sbb
outsb
dec
aad
scas
fldcw
mov
fstpl
cmp
dec
mov
mov
add
fwait
dec
jbe
loope
mov
loopne
shll
push
inc
adc
stos
mov
jl
xor
in
inc
hlt
push
fldl
loope
imul
repnz
stos
xchg
arpl
inc
xchg
inc
mov
int
mov
and
jo
jle
pop
push
jge
ffree
xor
sahf
dec
dec
js
scas
popa
jne
jle
je
jecxz
mov
add
or
inc
sub
dec
xor
cmp
lds
fstps
mov
test
push
push
jle
fistl
mov
jb
or
xchg
lock
imul
idivl
out
adc
mov
mov
push
cmp
rolb
mov
inc
pushf
add
fstl
mov
pop
pop
pop
or
cmp
mov
mov
shll
pusha
adc
scas
aas
jno
sbb
pop
push
addl
inc
jl
hlt
pop
push
test
inc
pop
outsb
lods
push
mov
pop
je
outsb
popa
scas
pop
lea
enter
add
nop
jb
sti
dec
push
outsb
outsb
fimull
js
mov
int
lea
cli
push
jle
fisttpl
test
inc
mov
pop
cmp
jo
adc
out
sbb
sbbl
dec
mov
ret
pop
inc
out
jle
imul
or
outsl
jle
push
pop
sbb
mov
push
mov
jno
fwait
lahf
fcoml
daa
jl
jnp
cmc
sarl
xor
gs
popa
jnp
or
nop
clc
xchg
jb
lahf
test
aas
fdivr
daa
repz
mov
sbb
xchg
movsl
mov
adc
popa
ss
and
test
mov
jg
adc
mov
aad
xchg
fsts
add
pop
fcoml
ret
mov
hlt
in
jno
nop
in
cmpl
push
fs
cmpsb
in
add
xchg
mov
fstpl
sbb
imul
test
fadds
nop
jg
rcr
outsb
outsb
jbe
gs
mov
lock
lods
push
outsl
inc
ret
in
sbb
imul
outsl
jge
jns
leave
in
pusha
popa
add
arpl
sti
dec
pop
ss
imul
sub
test
mov
fs
movsb
ret
mov
cwtl
mov
cmp
adc
outsl
cwtl
or
rorl
je
dec
dec
gs
test
pop
mov
add
bound
jb
dec
jmp
pop
lahf
push
pusha
add
inc
push
cld
jp
dec
adc
mov
jno
push
pop
fwait
lods
outsb
mov
adc
pop
out
ret
mov
pop
pop
popa
pop
mov
in
hlt
sbb
pusha
jp
in
push
jl
mov
dec
pop
addl
cld
jecxz
mov
sbb
xchg
pop
jle
imul
movsb
insl
dec
fimull
dec
cmp
out
mov
orb
jbe
enter
filds
push
add
push
out
rorl
dec
out
jbe
mov
mov
inc
pop
jno
insb
mov
jne
arpl
clc
push
cs
mov
xchg
std
pop
movsl
add
inc
daa
sub
lea
sbb
xchg
cld
jg
dec
inc
add
ror
push
and
iret
dec
mov
aad
in
inc
lret
cmp
fistpl
push
movsb
fidivrs
cmp
push
push
rclb
sub
mov
ja
and
scas
aad
std
push
push
xchg
testl
add
jp
or
mov
mov
mov
jp
adc
rclb
fsub
cmp
lock
pusha
int
scas
shll
dec
push
test
nop
mov
xor
mov
jae
out
sub
mov
push
add
push
popa
sbb
push
clc
mov
imul
insb
sbb
dec
mov
sbb
xchg
mov
sbb
fwait
lods
mov
test
cltd
je
jp
xor
xchg
call
or
or
decl
insl
imul
mov
jno
dec
adc
pop
bound
xchg
mov
add
sub
stos
js
jle
pop
push
dec
test
arpl
sbb
aaa
jecxz
or
iret
mov
xchg
or
jl,pn
clc
je
xchg
push
dec
lock
loop
test
sub
add
aas
or
xchg
arpl
mov
mov
mov
inc
mov
aaa
addr16
push
cwtl
nop
push
pop
adcb
sub
inc
inc
inc
cli
mov
xor
gs
dec
mov
lcall
dec
je
test
cld
scas
inc
inc
stos
lahf
dec
sbb
arpl
adc
dec
jg
jo
adc
mov
cmpsb
dec
fdivl
mov
sub
movl
jno
push
repnz
fcomip
cmpsl
das
pop
cmp
stos
cmovge
cwtl
lods
sub
outsb
rclb
adc
sub
lods
out
cmp
sub
xor
bound
in
dec
stos
sbb
fwait
dec
incb
stos
pop
ret
or
ds
aam
out
nopl
rorl
pusha
xchg
or
push
push
icebp
mov
cltd
pop
scas
and
mov
insb
add
and
cmp
out
or
dec
ffree
lcall
mov
dec
mov
negb
mov
les
cli
cwtl
and
test
xchg
dec
pop
cmp
scas
scas
adc
jp
push
cmp
in
dec
mov
mov
int
jg
xchg
sti
test
mov
jmp
inc
add
imul
das
cmp
insb
in
and
push
flds
dec
jmp
push
decb
and
xor
mov
push
push
arpl
and
sbb
adc
mov
out
cmp
loopne
insb
lds
movsl
xchg
repz
imul
stos
mov
push
sbb
ljmp
test
jbe
dec
sub
scas
xor
mov
mov
mov
sub
mov
decb
adc
sbb
cmpsl
cmpsl
cmp
test
bound
jns
std
aaa
dec
mov
or
xchg
jp
jg
or
jg
insl
stos
repz
xchg
pop
push
sbb
sbb
mov
push
int
sbb
cmp
jle
mov
nop
lahf
or
xor
into
fidivrl
pop
sub
xor
dec
xchg
push
add
mov
xor
hlt
inc
test
cmpsl
xor
int
decb
lods
cmp
jecxz
inc
mov
cmp
sbb
xor
cmp
aaa
fdivs
sbb
aad
dec
mov
add
mov
aaa
inc
daa
mov
sti
pop
mov
mov
pop
pop
pop
cmpsb
jge
lds
nop
mov
jg
daa
add
das
mov
movsb
popf
loopne
outsb
sub
scas
cmp
dec
inc
fs
out
xchg
cmp
sbb
push
add
fdivrs
xchg
xor
pop
loop
cmpsb
xchg
mov
loope
mov
das
xchg
add
mov
cltd
lods
add
mov
pop
lods
test
adc
or
clc
inc
stos
pop
sti
out
cli
test
adc
mov
cmp
test
dec
pop
push
or
cmp
repz
lods
das
xchg
push
push
inc
xor
hlt
fs
into
xor
ret
dec
shlb
sbb
sbb
xor
sub
mov
hlt
mov
fs
jo
lods
push
mov
adc
push
xor
mov
push
sub
inc
xor
cmp
ja
add
sti
daa
popa
fldcw
xchg
inc
mov
sti
jne
addr16
sub
hlt
js
jle
dec
cmp
sbb
insb
adc
jg
xchg
icebp
mov
xchg
movsl
outsb
add
cmp
dec
lret
mov
and
mov
jne
fstpt
stc
mov
mov
xor
mov
xor
and
test
fistpll
mov
xchg
sbb
and
lods
sti
call
inc
loope
sbb
jno
mov
mov
stos
pop
push
lea
sbb
out
cld
cmp
dec
mov
jnp
popa
sub
ljmp
scas
loope
je
out
mov
push
or
pop
or
inc
arpl
inc
cmp
stc
dec
dec
pop
push
mov
clc
add
pop
dec
push
inc
pop
idivb
push
hlt
mov
cmp
mov
aam
dec
or
push
mov
lret
imul
xchg
stos
fsubrs
je
out
in
mov
inc
addl
cwtl
fwait
mov
rcr
mov
outsb
sar
lret
push
imul
sarb
mov
dec
xor
cmp
mov
sub
mov
inc
bnd
fs
imul
scas
iret
int3
dec
cmp
mov
iret
mov
sarb
or
lcall
push
fbstp
xchg
aad
dec
adc
imul
out
mov
cwtl
popf
movb
pop
xchg
test
or
push
adc
std
dec
push
rcrl
shll
push
sti
or
dec
cltd
repnz
add
out
add
mov
jmp
loop
call
lods
shll
pop
sub
mov
inc
out
jg
sarb
push
jae
das
mov
or
pop
jecxz
push
stos
dec
cmp
lds
loopne
cltd
adc
jg
es
nop
and
rcl
jno
stc
movsl
sbb
push
fldl
pushf
mov
inc
out
nop
data16
hlt
mov
jne
jmp
stos
push
into
jmp
mov
pusha
out
mov
movsb
push
into
dec
push
popa
mov
movsb
inc
cmpsl
or
stos
pop
dec
rcrb
in
cmp
inc
and
mov
sub
sub
pop
xor
mov
pop
mov
arpl
int
lcall
sbb
adc
or
xor
inc
into
mov
dec
adc
pop
dec
loope
lea
sbbb
stos
or
and
xchg
inc
movsl
mov
push
adcl
lahf
inc
repz
scas
std
xor
out
mov
testb
sti
stc
pop
pop
cmp
mov
sbb
mov
jb
std
fildl
pop
sub
and
mov
lret
mov
xor
mov
movsb
or
ds
jbe
jne
mov
js
movsb
pop
pop
mov
push
mov
shrl
repz
lds
fstpl
pop
bound
pop
out
dec
and
push
push
fdivrs
frstor
sbb
stos
outsl
stos
adc
jecxz
inc
mov
jno
stos
mov
adc
icebp
nop
inc
ljmp
out
cmpb
mov
int
jle
mov
mov
jmp
jmp
mov
mov
insl
jmp
push
or
lods
test
jge
push
jne
cwtl
call
cmp
and
sub
cmpb
lds
mov
shlb
ljmp
aad
mov
int
subb
clc
dec
sti
dec
jmp
sahf
loop
sbbl
inc
daa
push
push
outsb
jb
cli
mov
lahf
sbb
push
and
outsl
push
mov
xchg
lahf
push
xchg
push
scas
jae
sub
mov
push
rcl
dec
jmp
out
loopne
jne
sti
pop
xor
loope
xor
popf
cmpsl
leave
mov
or
pop
sbb
cmpsb
or
or
xor
filds
push
sti
aaa
mov
cmp
out
inc
xchg
aaa
xchg
dec
push
adc
xchg
mov
xchg
adc
sbb
inc
dec
hlt
sub
mov
nop
xor
xchg
repz
xchg
sub
and
das
hlt
hlt
inc
lret
clc
xor
push
lds
scas
insl
sub
and
jecxz
sbb
sub
cwtl
rcr
mov
insl
fwait
ret
cs
pop
ss
jl
sbb
mov
movsl
into
jl
js
adc
in
cmp
xor
test
mov
imul
mov
push
push
lds
jp
inc
lods
xor
loope
stos
je
in
adc
and
cmp
rorl
pop
xor
sbb
aaa
ret
jle
adc
cmpsl
sbb
jle
adc
push
cld
xchg
jnp
jbe
jae
adc
jnp
xchg
lcall
in
jl
xchg
dec
add
mov
scas
sub
popf
sahf
clc
aam
lock
xchg
cmp
jle
lods
insl
bnd
out
xlat
scas
popf
sbb
mov
movd
jmp
mov
and
cli
cli
faddl
pop
scas
outsb
pushf
dec
out
mov
inc
popf
add
add
je
test
push
call
insl
push
sub
clc
push
mov
adc
add
cmpsb
popa
js
stc
or
clc
lds
fimull
arpl
jg
mov
sub
push
jne
mov
out
jne
push
cmp
adc
roll
imul
ds
loopne
mov
pop
pop
pop
add
sub
fstpl
lcall
mov
push
lods
leave
adc
jge
cwtl
test
push
or
lods
xor
call
dec
movsb
pop
out
or
pop
divb
inc
pop
adc
out
pop
out
push
imul
jecxz
leave
pop
fwait
adc
adcl
mov
or
pop
lds
pop
or
mulps
lods
xor
cwtl
fbstp
iret
mov
push
mov
jae,pn
mov
jns
rcr
cmp
andl
mov
cmp
fsubp
push
in
mov
lds
add
mov
lods
in
fildl
inc
push
add
inc
jbe
cmovns
mov
inc
xchg
aad
dec
cwtl
lahf
jb
mov
pop
dec
push
sbb
sub
sub
mov
sub
ja
fiadds
and
cmp
lret
out
cs
aaa
in
fcompl
je,pn
subb
lock
sahf
pop
push
adc
cmpsb
adc
scas
pop
mov
push
rep
jb
add
dec
jbe
pop
inc
outsl
add
mov
dec
ds
movsb
jne
jmp
idivl
lahf
pop
pop
addr16
mov
stos
cmp
sarl
pop
test
pop
pop
push
jbe
ret
cmp
sub
sbb
adcb
mov
loopne
addr16
add
inc
and
cmp
sbb
stos
faddp
cs
jo
repnz
xchg
dec
data16
outsb
movsb
pop
xchg
mov
jb
outsb
sub
sbb
shlb
add
gs
hlt
loopne
push
mov
popf
xchg
xchg
pop
sbb
mov
jne
loopnew
iret
dec
mov
insl
pop
popa
sub
sbbl
xchg
cmp
jmp
testb
adc
inc
jmp
imul
adc
sbb
jp
outsl
dec
cmp
addr16
imul
dec
jnp
pop
aaa
outsl
ss
mov
mov
dec
dec
fldl
mov
cmp
out
mov
inc
xchg
sarb
aad
or
rcll
cs
jecxz
imul
je
xchg
cld
cwtl
pop
pop
loopne
lods
cmp
in
pop
inc
outsb
push
lret
arpl
jge
nop
mov
mov
imul
scas
dec
repz
inc
and
sti
cmpsl
mov
jg
mov
xor
sti
cld
or
dec
add
pop
stos
out
xor
test
in
cmp
mov
push
test
in
orb
shrl
inc
pop
test
mov
mov
outsl
lret
mov
das
mov
pushf
outsl
push
add
movsl
cmp
or
ret
xchg
test
push
scas
cmc
shrl
ret
inc
mov
cs
and
push
inc
nop
out
or
mov
arpl
push
pop
sub
fnstcw
push
mov
inc
pushl
repnz
inc
ss
sub
adc
xor
fdivs
add
adc
scas
movsb
xor
lock
pop
push
dec
cwtl
shlb
insb
jbe
out
cmp
push
fnstcw
pop
pop
test
and
int3
subl
pop
fnstsw
sub
push
push
jo
cmp
pop
sub
popf
les
js
push
incb
mov
pop
das
cmpsb
push
and
push
in
adc
insb
jne
out
cld
loope
mov
cmp
mov
jnp
push
loop
ljmp
mov
adcb
arpl
or
aaa
fwait
pop
push
out
push
cs
pop
stos
adc
jge
popa
or
popa
daa
outsb
lock
addr16
cmp
xchg
and
sbb
movsl
jno
xchg
fisubl
pop
or
adc
pop
dec
rorb
mov
and
sub
scas
cmp
scas
or
das
push
out
adc
loopne
notl
jb
lods
flds
mov
scas
push
stc
sbb
jbe
scas
fwait
insl
ja
aas
push
dec
sbb
cmc
mov
mov
cwtl
fwait
mov
into
mov
test
jp
pop
sub
or
sub
mov
les
cmp
cmp
or
mov
insl
mov
mov
popf
xor
jbe
imull
outsl
jb
mov
xchg
xor
cmp
mov
mov
pop
inc
jp
inc
dec
pop
jno
xlat
xchg
dec
pop
dec
pop
mov
in
and
pop
sti
pop
fnstcw
inc
mov
jle
jae
movsb
aad
fisttpl
dec
addr16
fdivrl
sbb
jp
push
sub
mov
push
push
sbb
add
pop
and
xchg
pop
mov
or
imul
inc
or
test
ss
int3
lret
add
push
mov
aaa
daa
adc
sub
xor
stos
addb
outsl
sub
xchg
je
pop
imul
mov
scas
or
icebp
mov
fdivs
and
aas
movsl
inc
in
add
inc
xchg
inc
sbb
sub
push
sub
stc
xchg
pop
jne
pop
cmp
mov
imul
pushf
jne
adc
jbe
and
insl
add
lds
repz
jnp
test
mov
push
mov
loop
imul
jnp
daa
aas
push
stos
test
clc
sub
jmp
loopne
pop
mov
arpl
in
jecxz
dec
jnp
push
adc
dec
repz
outsl
sub
pushf
mov
adc
xor
lret
movsb
cmp
xor
fildll
adc
cmpl
push
outsb
das
inc
das
mov
jle
adc
pop
or
outsb
jnp
scas
movsb
add
sti
je
push
loopne
cmp
push
gs
imul
ja
xor
mov
dec
test
add
sub
bound
mov
adc
sub
mov
push
add
outsl
pop
shrl
cmp
adc
cltd
dec
insb
xchg
push
gs
cmp
inc
addr16
xor
pop
arpl
push
ss
cs
rep
int
dec
push
stos
fistpll
pop
sbb
mov
cmpsl
mov
out
in
sub
mov
lock
into
ja
in
lea
addr16
std
push
dec
inc
addr16
scas
jb
or
push
js
outsl
jne
in
adc
leave
cmp
jecxz
sub
dec
jbe
or
fxch
cmp
mov
dec
mov
sub
mov
pushf
nop
or
outsb
push
in
xor
push
or
push
popa
sub
fistpll
jmp
inc
movsb
in
or
int3
jecxz
or
fisttpll
jo
mov
push
mov
int
in
jno
adc
add
data16
aad
shl
adc
aas
rorb
mov
sub
jno
add
stc
jnp
loope
cmp
arpl
mov
push
xor
dec
jmp
std
mov
fcmovb
xchg
add
das
jno
sub
jecxz
jbe
mov
fwait
out
sbb
rorl
rorl
ret
adc
mov
xchg
adc
fs
dec
push
int
push
xor
fistl
in
xor
out
outsl
popf
xchg
out
and
mov
cmp
sbb
fimuls
mov
jbe
xchg
addr16
or
imul
jnp
fcomp
cmp
push
aam
sub
sub
add
mov
dec
xchg
push
push
dec
cmpsb
sbb
sti
cmc
or
sub
repz
lds
mov
xchg
jg
rcr
xor
push
and
pop
or
fnsave
mov
push
shrb
push
xchg
inc
pop
xor
sub
push
push
stos
jl
out
mov
das
loope
test
and
xchg
aas
dec
fldcw
dec
fs
lds
in
inc
test
pop
out
lods
test
sbb
cld
inc
shl
jge
mov
arpl
sbb
jns
subb
mov
cwtl
dec
pop
and
xchg
xchg
mov
pop
daa
pop
repnz
push
and
in
clc
mov
xchg
xchg
pop
lods
roll
stos
repz
jb
dec
inc
dec
jl
mov
jb
lods
lcall
mov
mov
enter
dec
push
cld
lock
lret
arpl
push
loop
notl
outsl
aad
sti
inc
inc
cwtl
pusha
es
and
out
push
jnp
testb
popa
in
js
in
jne
andb
sbb
adc
nop
jp
cmp
inc
pop
movsl
xchg
mov
sub
xlat
cmp
inc
cmpsb
pop
gs
loopne
jmp
xchg
je
jae
imul
movb
jo
iret
scas
subl
xor
jns
mov
mov
add
push
fsubrl
xor
es
and
ret
iret
xchg
cmpsb
pop
ficompl
push
push
dec
pop
mov
cwtl
loopne
pushl
test
push
gs
rorl
xchg
test
adc
jne
jns
inc
jle
adc
sub
adc
fsubs
rcll
add
push
push
mov
addr16
test
jl
cmp
inc
add
sub
movsb
sahf
mov
push
stc
test
dec
push
and
sub
popa
add
outsl
jo
aas
xchg
cmp
rolb
stos
mov
pop
test
pop
and
push
mov
mov
lock
adc
mov
scas
and
inc
xlat
nop
stos
dec
lret
push
rorb
and
and
push
add
jns
jg
cmpsl
fisubrl
cmpsb
scas
inc
mov
test
subb
fwait
mov
push
adc
and
xor
xlat
mov
jmp
add
mov
wbinvd
scas
mov
cmp
les
fcoml
pop
loop
and
pop
adcl
inc
dec
and
adc
push
movsl
ljmp
add
jbe
bound
push
pop
push
jge
jns
movsl
insb
xor
cmp
cli
add
pop
mov
sbb
inc
in
and
outsb
inc
mov
out
push
aam
mov
or
outsb
sbb
popf
inc
andb
jnp
out
mov
add
insb
lahf
or
pop
cmp
pop
jg
cmp
xor
in
jns
imul
push
cmpsb
jbe
into
add
mov
cli
out
cld
imul
rcrb
cmpsl
xchg
int3
xor
in
mov
jnp
sarl
cmp
ret
int
mov
shlb
loopne
and
mov
sahf
push
sbb
aaa
mov
push
enter
mov
pop
or
cmpsb
loop
inc
stos
mov
not
jne
call
pop
cmp
lcall
xchg
mov
pushf
push
sub
pop
lods
out
and
or
inc
xor
inc
imul
pop
fs
jge
mov
pop
adc
adc
pop
jns
js
mov
out
mov
jnp
pop
push
sti
les
xlat
push
fs
mov
jne
jl
jg
loopne
adc
jno
dec
mov
arpl
push
les
adc
sub
xchg
or
push
pushf
insb
in
xchg
push
sbb
add
push
int
cmp
imul
mov
fstl
insb
jecxz
xchg
push
mov
lret
jmp
and
mov
push
popa
xor
xor
out
cmp
jge
insb
dec
pop
imul
cmpsl
aam
in
push
dec
xchg
mov
and
xor
pop
cmp
mov
cmp
mov
inc
in
xor
fsubl
leave
push
fstps
insb
outsl
dec
sub
repz
xchg
je
inc
nop
dec
enter
and
jne
xchg
clc
or
scas
insl
sahf
adc
cmpsl
mov
push
mov
jmp
inc
clc
in
repz
xchg
orb
or
jg
jecxz
mov
gs
sub
out
insl
es
xchg
dec
pop
xlat
pop
add
jno
xchg
sbb
jle
sub
push
shrb
movsb
adc
xor
lret
sub
xchg
ljmp
sbb
sub
or
hlt
push
fs
andl
dec
mov
bound
ret
pop
add
xor
or
push
daa
jne
repz
jae
mov
aas
push
or
dec
xchg
push
cmp
push
cmpl
cmc
lcall
sti
imul
loope
dec
adc
dec
adc
dec
ds
xchg
js
xchg
ds
mov
mov
lock
mov
jmp
pop
pusha
outsb
aad
mov
mov
lcall
movsb
js
js
mov
mov
adc
sub
movsl
and
lock
fidivl
clc
xor
sub
adc
std
into
arpl
jne
and
inc
sbb
pop
popa
insb
scas
sub
mov
adc
cmovg
shll
mov
leave
fisttps
sbb
aaa
repnz
sbb
cltd
cmpsb
sti
stc
mov
in
or
cmpl
leave
insb
mov
add
sub
mov
jno
sti
push
mov
fisttps
mov
mov
fwait
jecxz
lcall
cmp
pop
sbb
mov
outsb
or
dec
jno
cmp
pop
jmp
imul
adc
test
nop
jo
mov
cmpsl
pop
clc
lcall
cmp
cs
cwtl
cmovno
jecxz
rclb
int
cmp
fiaddl
pop
push
inc
idivl
mov
dec
mov
test
jmp
pop
xchg
and
fwait
inc
add
insb
mov
ret
sbb
xchg
js
sbb
popa
sbb
sub
push
push
scas
lock
fwait
iret
push
ds
aad
pop
xor
sub
js
int
and
lcall
dec
add
mov
lds
arpl
add
test
daa
jge
inc
mov
stos
mov
popf
in
std
cld
roll
mov
push
fwait
imul
or
mov
movsl
add
pop
lods
arpl
push
mov
inc
pop
ret
enter
cmpsb
xor
or
mov
add
cwtl
sbb
js
cli
sbb
inc
aas
cmp
sbb
insl
jmp
enter
or
dec
xor
cmp
das
gs
jmp
fs
sub
aad
inc
addr16
pop
movsl
xor
cmpsb
and
jae
or
cmc
stos
int
xor
andb
xorl
pop
mov
xchg
add
push
test
lret
jns
xorb
adc
gs
fwait
in
inc
cwtl
inc
add
mov
mov
dec
stos
movsl
and
add
mov
popf
fisubl
aaa
pop
or
enter
call
pop
xor
sub
xchg
or
pop
into
sar
xorl
hlt
cmp
test
mov
mov
lea
and
call
nop
mov
test
leave
call
pop
imul
push
adc
mov
aad
xor
and
jmp
in
jp
insb
data16
push
jne
push
jge
stos
and
mov
add
or
orb
dec
mov
xchg
mov
adc
icebp
jne
adc
jno
insb
mov
push
push
dec
mov
mov
imul
jns
add
and
inc
mov
popa
dec
dec
add
sti
or
fdivl
jmp
or
data16
ss
mov
out
mov
mov
xor
push
add
cmpsl
mov
dec
push
xchg
mov
pop
pusha
push
cwtl
dec
repz
subb
xlat
mov
repz
subl
push
xor
or
popl
jl
jae
xchg
sbb
in
sub
mov
das
sbb
jecxz
adc
lcall
inc
xchg
pop
xlat
dec
dec
test
andb
mov
fdivrl
add
mov
mov
mov
xchg
shr
lret
xchg
jle
xchg
adc
pushf
push
stos
inc
aaa
adc
cmp
push
mov
outsb
push
daa
pushf
or
cmp
imul
sbb
ja
mov
aas
cli
js
rol
mov
ret
scas
dec
enter
loope
adc
push
sub
cld
xor
mov
call
stos
in
sbb
lock
arpl
pop
cld
xor
cmp
dec
aad
imul
cmp
xchg
or
xchg
inc
out
mov
inc
les
pop
dec
mov
pop
pop
mov
addr16
loope
xchg
inc
pop
pop
lods
jne
or
sbb
ret
pop
gs
push
sub
inc
sub
mov
repnz
mov
mov
mov
cld
int3
rcl
or
sub
pop
sub
add
cmp
cmp
or
lds
adc
xchg
or
mov
out
xchg
pop
andl
jb
and
bnd
lods
xchg
push
adc
iret
les
jmp
ret
xchg
mov
int3
popf
cmp
mov
pop
cmp
cltd
sub
mov
lea
cmpsl
movsb
fsubr
test
lods
testb
mov
in
mov
imul
mov
testb
pop
adc
bound
sub
testb
stos
in
jle
add
or
xlat
mov
in
cmp
add
mov
dec
mov
mov
lea
daa
stc
jp
movsb
jmp
or
push
inc
pop
push
leave
jo
add
xchg
lahf
fs
sbb
pop
add
shlb
adc
roll
sti
out
in
add
jecxz
dec
cmpsl
jnp
push
call
movsl
and
xchg
stos
and
inc
sbb
dec
test
stos
jnp
mov
cwtl
addl
pop
add
pop
pop
adcb
out
mov
sahf
popf
pop
std
xor
pop
mov
jno
jmp
pop
lahf
mov
dec
lret
push
out
adc
mov
add
pop
xor
pop
inc
gs
testl
mov
lcall
sub
fs
inc
adc
pop
dec
push
push
jns
push
mov
inc
jnp
mov
pop
adc
cli
ffreep
loope
dec
xor
std
enter
lock
mov
push
sti
clc
std
mov
movsl
adc
mov
stc
and
adc
or
add
pop
or
pop
leave
xchg
shll
shll
xchg
bound
stc
pop
xor
in
mov
jle
adc
xchg
insb
scas
or
mov
dec
mov
pop
test
mov
ret
inc
insl
xchg
xchg
daa
sbb
out
add
pop
xchg
and
dec
add
cmp
lret
test
out
mov
jg
jmp
jl
jl
xchg
mov
mov
push
fimuls
outsl
jp
cwtl
jmp
insl
mov
add
inc
repz
or
or
insb
xchg
push
cld
mov
lcall
cmpsl
adc
sub
mov
or
dec
inc
jg
js
push
add
jns
stos
les
aas
pop
insl
jns
pop
popf
jne
sub
cld
cld
jl
jno
xchg
stos
adc
adc
mov
push
inc
cmpsl
jnp
jl
into
data16
fldt
jae
lods
add
mov
js
sub
mov
xor
sbb
mov
fs
xor
or
add
popa
add
push
push
lock
xchg
mov
inc
outsb
daa
hlt
xor
sahf
xchg
andl
aas
mov
scas
mov
or
loope
xor
and
fs
xlat
jg
mov
push
add
popa
sbb
stos
dec
mov
adc
arpl
aam
insl
mov
sbb
dec
pop
inc
ss
stos
add
pop
cmp
pushf
jne
mov
call
fistpl
xor
lea
out
xchg
idivb
or
xchg
in
mov
pop
js
push
inc
push
inc
jae
adc
icebp
out
sbb
xchg
bnd
mov
inc
aas
inc
or
dec
dec
push
inc
daa
loopne
lock
sahf
rcl
test
push
jno
out
test
push
into
ljmp
xchg
mov
fwait
inc
jno
test
data16
lods
pop
mov
adc
lcall
es
xor
or
cmpsb
mov
and
and
jl
insl
mov
mov
dec
mov
rorb
adc
inc
sbb
je
inc
mov
fsubs
jge
cmp
push
aam
movsb
cmpsb
jbe
adc
mov
or
xor
mov
fcoml
enter
xor
movsl
and
mov
fstpt
jl
pop
xchg
mov
mov
test
cmpsl
sub
lahf
lods
int
jns
int3
cmp
jae
sbb
pop
push
xchg
imul
push
add
cmp
mov
int3
inc
repnz
xchg
mov
inc
data16
cmp
fcomps
inc
movsl
in
adc
jmp
aas
sub
es
lret
add
inc
insb
shlb
dec
inc
sahf
addps
jmp
xchg
pop
sub
cmpb
or
dec
pop
cld
lret
les
xchg
inc
add
cltd
lcall
pop
arpl
mov
inc
push
lret
fwait
ret
cmp
dec
into
repnz
jle
xchg
fistl
dec
pop
cmpsl
mov
xchg
or
daa
scas
andl
sub
scas
adc
js
movsb
or
jnp
outsl
push
jmp
push
cli
icebp
jo
stos
movq
mov
arpl
dec
sub
push
lcall
andb
and
sub
jb
adc
fistps
aad
sub
jb
pop
movsb
leave
pop
outsb
je
dec
int
mov
movsl
sbb
sbb
js
sbb
inc
cmp
ret
jp
mov
scas
outsb
jne
scas
imul
inc
mov
daa
cmpsl
sahf
or
mov
cli
sbb
scas
imul
pop
shlb
push
scas
fs
cmp
push
int
movsl
insl
pop
sbb
adc
mov
pop
mov
jae
loope
mov
ds
stos
mov
cmp
ss
jno
lcall
inc
and
shll
les
cmp
out
inc
popf
in
push
ret
add
pop
dec
cmp
push
rorb
fisubs
leave
add
or
pop
lcall
push
roll
lea
and
and
pop
sbb
clc
movsb
je
inc
sti
mov
cmpsb
pusha
and
cmp
pop
sti
adc
or
mov
imul
xor
jecxz
jge
xor
mov
or
push
incb
push
movsb
je
cmp
dec
mov
hlt
and
jne
insb
pop
test
imul
push
jo
aaa
stc
sahf
popf
pushf
push
cli
into
mov
scas
aas
xorb
sahf
ss
sub
pop
add
jbe
jecxz
sub
js
jo
jae
sbb
sub
nop
or
inc
repz
mov
cmp
pop
lods
imul
pop
cmpsl
js
mov
jb
aad
or
aad
shrb
aaa
push
ss
xor
push
inc
and
js
daa
movsb
fabs
push
push
stos
hlt
enter
add
add
adc
dec
mov
repz
rorl
xor
xor
adc
mov
sbb
adc
inc
dec
mov
jae
push
out
push
adc
xor
imul
mov
push
cmp
jle
shrl
es
arpl
mov
rcll
or
cmp
icebp
add
mov
mov
push
pop
sub
mov
xchg
mov
adcb
jmp
out
arpl
xor
repnz
stc
push
add
xor
fadds
inc
in
into
cmpl
dec
pop
jne
mov
ret
fwait
dec
in
jge
aam
arpl
scas
aad
adc
push
jno
push
das
pop
mov
mov
pusha
jmp
push
inc
xchg
mov
and
pop
fiadds
cmp
popf
cmpsl
ljmp
mov
lcall
push
xchg
call
in
sbb
adc
push
testl
jl
pushf
jmp
ljmp
test
scas
push
and
xchg
xlat
movsl
pop
jnp
dec
mov
pop
or
mov
jge
clc
lret
jecxz
pop
insb
clc
lcall
push
daa
roll
jge
push
inc
and
inc
cmpsb
mov
cwtl
dec
jnp
xor
in
push
or
push
sbb
mov
out
lds
mov
popl
mov
push
popl
fisubs
jbe
jmp
test
inc
mov
jb
mov
push
mov
enter
sub
inc
adc
testb
xchg
jns
pop
rorb
mov
imul
inc
clc
dec
scas
dec
out
or
add
dec
insb
into
aaa
cmp
sbb
loopne
pop
cmp
inc
pop
dec
ja
sub
jne
jb
lret
cmp
cmc
add
or
daa
cmc
sub
sarl
icebp
popa
or
mov
lock
inc
loop
push
jge
lods
mov
xchg
lods
addr16
push
cmc
cmpsl
push
jns
push
mov
pop
popf
or
dec
xor
insb
sub
inc
xchg
aaa
lcall
cmp
incl
lahf
or
inc
std
or
jns
dec
sbb
insl
mov
jmp
mov
insl
rcrl
sub
lret
push
mov
inc
bnd
cwtl
push
adc
mov
inc
xchg
dec
pop
xor
cmp
mov
pushf
sub
test
xor
push
mov
xor
dec
fidivrl
and
cmpsl
sbb
push
xchg
leave
loopne
cmp
inc
push
pop
pop
and
sbb
loope
test
xlat
insl
mov
in
scas
addr16
adc
ljmp
fisubl
test
jno
adc
nop
movsl
xor
ja
adc
shlb
or
dec
bound
insl
and
shrb
inc
push
mov
int3
das
adc
cmp
into
sbb
push
lahf
mov
pop
dec
inc
add
icebp
mov
je
pop
inc
push
cmpsb
pusha
aad
xchg
leave
jle
outsl
insl
arpl
bound
mov
iret
mov
mov
imul
gs
cmp
sub
dec
mov
push
inc
push
jg
mov
inc
pusha
cld
lock
bound
xchg
mov
and
data16
add
mov
fnstsw
ja
ljmp
outsb
mov
das
jge
test
cmpb
inc
out
pop
jmp
test
js
xor
mov
inc
test
test
sbb
seto
push
xchg
in
shlb
push
mov
sbb
add
jno
mov
imul
xor
lock
or
pop
inc
mov
stos
imul
sub
imul
xor
mov
fwait
cmp
fldcw
inc
insl
xchg
push
pusha
ja
ret
push
jno
jns
rorb
loopne
mov
cmpsl
fsqrt
push
stos
aad
insb
mov
mov
sbb
and
dec
cmpsb
push
fdivrs
cli
cmpl
jnp
sbb
xor
sub
movsl
cwtl
add
mov
arpl
mov
jb
and
jge
mov
loopnew
pop
cmp
imul
inc
xchg
add
ja
mov
cmpsb
and
jbe
xchg
push
mov
ds
push
sub
xchg
loop
pusha
add
push
sbb
jmp
insl
cmp
jns
ret
adc
push
push
or
mov
inc
add
mov
or
pop
loopne
cmp
mov
adc
sub
notl
les
lea
xor
push
push
push
popf
xchg
fistl
imul
rolb
inc
sti
xchg
cltd
mov
fadd
loop
mov
lods
test
xchg
int3
dec
sub
daa
test
add
movsl
jge
add
sbb
jb
inc
pop
fucom
jno
lret
pop
mov
cli
add
inc
decb
and
movsl
inc
mov
in
mov
loope
sbb
add
test
jne
jl
fistl
xchg
xchg
test
repnz
add
jnp
dec
jb
div
sub
jge
inc
scas
inc
inc
mov
gs
mov
xor
jle
jne
push
adc
insl
call
pushf
enter
push
hlt
lea
push
in
or
js
add
xor
arpl
xchg
dec
repz
sahf
xor
pop
push
out
jmp
lea
xor
mov
arpl
pop
add
enter
imul
adc
cltd
repnz
or
test
xchg
insb
or
es
adc
cltd
dec
stos
in
insl
cmpsl
sbb
sub
test
adc
mov
push
xor
flds
cmpsl
hlt
jnp
push
fidivl
outsb
mov
imul
mov
xor
imul
xchg
loop
addr16
sbb
cmpsl
cwtl
lock
arpl
into
jg
pop
jnp
xchg
test
lea
imul
fs
adc
mov
repnz
aad
or
pushf
fwait
inc
mov
cld
xchg
jno
js
adc
dec
arpl
cmp
lahf
scas
roll
xchg
mov
in
inc
movsb
cmp
and
xchg
pop
cmp
pop
and
adc
popf
mov
adc
scas
pop
push
sbb
insl
test
dec
test
and
mov
cmp
fistps
jmp
mov
lret
rcrb
adc
inc
push
adc
sbb
mov
push
dec
out
push
stos
mov
cli
enter
push
enter
je
dec
pop
adc
xchg
pop
addr16
in
in
pop
pop
push
sub
lahf
lahf
push
xor
xchg
and
pop
sarl
and
lods
mov
das
pop
cmp
cmp
xor
outsb
insb
imul
mov
rorl
jne
xchg
jnp
jp
jb
mulb
aaa
pop
insl
es
popa
cmc
les
adc
mov
adc
dec
dec
mov
jecxz
outsl
test
push
mov
xor
xor
pusha
push
js
sbb
xor
test
pop
movsl
out
or
stos
sub
dec
call
adc
xorl
cmp
adc
cli
pusha
and
pop
in
jnp
inc
adc
addr16
sub
stc
xacquire
jl
xor
call
in
movsb
test
andl
dec
arpl
fidivrs
or
mov
or
mov
pop
imul
sbb
inc
iret
cmpsl
jo
stos
shrl
xor
loop
imulb
sarb
xchg
push
mov
lods
mov
push
mov
dec
jp
mov
push
jnp
cltd
cltd
shlb
std
jnp
lods
popf
cli
unpcklps
sub
mov
xchg
pop
mov
add
xorl
cmpsl
ret
dec
mov
push
mov
jp
loop
sbb
xchg
iret
push
inc
jmp
test
stc
les
cmp
inc
imul
or
repz
jle
jge
mov
ja
dec
pushf
out
mov
jle
sub
dec
cmp
and
jl
ror
push
fisubrl
and
scas
imul
sbb
cmp
adc
jp
xchg
or
cmp
push
cmp
sbb
inc
nop
fs
out
aad
push
dec
enter
das
inc
sub
mov
sub
leave
cmpsl
rorb
and
xchg
mov
cmp
into
sbb
pop
lock
sub
mov
lods
shlb
mov
xchg
rol
xor
std
jae
mov
push
test
hlt
icebp
movsb
jbe
addb
xchg
mov
sbb
add
fwait
shrl
fldt
rclb
xchg
mov
sub
inc
cltd
js
and
stos
add
imul
cwtl
xor
aas
loop
sbb
scas
pop
xchg
aas
out
and
imul
mov
dec
mov
or
enter
aaa
pop
dec
jle
mov
or
sub
ss
dec
test
mov
sbb
xor
nop
xor
dec
movsl
movsl
push
sti
inc
mov
jge
daa
in
outsl
jp
pop
fnstsw
mov
cmp
xchg
and
push
cmp
clc
add
mov
mov
loop
xchg
cmp
nop
push
daa
data16
rcrb
xor
inc
pop
aaa
or
or
scas
je
adc
adc
popf
inc
or
jne
subl
daa
popa
loopne
dec
divl
sbb
inc
sbb
mov
cltd
jmp
inc
mov
mov
add
negl
pusha
mov
pushf
repnz
pop
ds
or
out
int
sub
push
aas
mov
pop
push
fmulp
mov
add
or
into
mov
ja
insl
js
popa
test
hlt
xor
ljmp
cli
iret
jp
xorl
pusha
repz
movsl
out
adcb
leave
xor
mov
lock
inc
cld
adcb
add
imul
sub
dec
jno
imul
xchg
sub
js
mov
and
ja
xchg
adc
fs
es
pop
js
inc
sti
les
in
cmp
jle
insb
dec
pop
pusha
jg
inc
nop
adc
insb
dec
out
dec
inc
jecxz
dec
pop
ror
xor
pusha
push
xchg
iret
mov
sti
push
mov
stos
stos
pusha
or
imul
int3
push
int3
cld
xlat
adc
pop
xchg
clc
and
outsl
fwait
outsl
push
and
sub
push
ret
fcomps
cmp
mov
mov
movsl
ret
add
dec
cmp
insb
shlb
movsl
jae
adc
lods
call
sbbb
and
pop
addr16
push
jmp
stc
xor
lock
xchg
lods
xchg
mov
mov
dec
mov
mov
outsl
pop
adc
in
add
inc
lret
lods
cs
jne
pop
sub
sbb
nop
pop
out
push
push
sub
push
aas
mov
add
test
mov
xchg
xchg
mov
andb
push
fisubrs
popa
outsb
jmp
das
mov
imul
dec
ljmp
leave
mov
daa
dec
repnz
jbe
aaa
mov
ret
or
in
sarb
in
mov
jl
jb
iret
aaa
fdivrs
mov
pop
outsb
outsl
cmp
fcoms
mov
xchg
push
xchg
mov
inc
push
pusha
loope
mov
sub
or
sub
mov
xor
imul
pop
int
jno
and
jno
int
jae
or
mov
mov
xor
sbb
out
mov
inc
arpl
mov
stos
inc
add
mov
popa
insb
mov
mov
int
rep
mov
lret
mov
ret
mov
popa
mov
adc
adc
pop
jge
sub
mov
shll
xchg
movsb
jnp
push
adc
mov
push
lods
push
lcall
ljmp
push
xor
bound
sub
aas
push
movsb
pop
test
push
push
ret
push
das
xor
xchg
push
push
test
jns
jecxz
push
xchg
dec
push
or
add
cmp
push
int3
rcl
add
cli
mov
pop
nop
adc
mov
xchg
xor
pop
inc
sub
andl
dec
push
imul
jo
stc
dec
or
and
mov
fsubp
lods
push
fsts
enter
mov
sbb
pop
leave
pop
orb
mov
or
sub
xchg
xchg
xor
add
test
sub
push
xchg
push
mov
jp
add
repz
cmp
stc
mov
popa
mov
cmp
and
pop
mov
pop
stos
stos
inc
popf
andl
xor
adcb
sbb
mov
in
xlat
sbb
int3
add
aad
sub
int3
mov
lds
incl
add
pop
xchg
adc
or
outsb
out
inc
jmp
xor
insl
xor
xchg
or
dec
xor
leave
lea
mov
aas
mov
jle
push
push
cmc
dec
jns
or
imul
std
lock
add
dec
pop
mov
and
mov
insb
sbb
bound
fwait
pushf
jl
sub
ds
ret
cmpsb
push
sbb
int
add
cld
sbb
repnz
int3
adc
push
mov
stos
jnp
insb
ja
mov
pushf
lods
mov
inc
insl
lahf
add
jb
push
test
scas
xor
or
das
mov
outsl
lods
push
cmp
call
aaa
and
or
mov
xchg
sbb
mov
pop
fildl
adc
jnp
in
ds
pop
mov
insl
test
lods
mov
loope
xchg
and
iret
cmp
popa
jbe
mov
pop
sahf
adcb
and
arpl
ret
fs
movsl
sbb
bound
mov
rorb
cmpsl
adc
in
sbb
sub
mov
jecxz
aas
test
jecxz
inc
jo
dec
out
or
btsl
push
ds
mov
sub
orl
add
fstpt
cmp
scas
cmp
xor
fs
xchg
jg
add
mov
pop
or
mov
popl
mov
ds
sub
dec
iret
scas
outsl
insl
mov
jnp
and
popl
mov
ds
pop
push
jne
movsb
xor
or
sahf
ss
nop
das
jecxz
or
and
test
sub
mov
aas
insl
sbb
xor
dec
sbbl
fistl
shrb
insb
mov
nop
movsb
jg
pop
push
cmp
push
scas
addr16
inc
xchg
push
sub
ret
cmp
insb
je
sti
sbb
push
arpl
mov
jb
or
out
es
lea
inc
fsub
das
inc
lock
pop
sti
in
mov
fs
mov
xchg
adc
aaa
mov
sub
loopne
xchg
mov
pop
inc
movsl
cmpsl
arpl
xchg
rcrb
popa
jmp
mov
sub
add
jg
dec
xor
pcmpeqw
mov
cmp
shll
cmpsb
and
inc
in
cmp
movsb
mov
aad
add
adc
add
ds
dec
add
mov
fisttpll
into
push
sbb
pop
adc
adc
cwtl
jmp
push
mov
xchg
cmp
outsl
fnstenv
shlb
push
push
push
daa
sub
xor
xor
cmpsb
jns
lods
inc
push
adc
sbb
mov
mov
pop
fs
outsb
icebp
xor
aam
outsb
movsb
xor
imul
nop
in
cmp
push
aaa
push
push
mov
imul
iret
addr16
add
idivb
outsb
ss
rcrl
inc
out
add
sbb
mov
adc
xor
ljmp
jmp
jmp
ret
mov
ret
roll
adc
jae
adc
xchg
mov
insl
fbld
loopne
mov
push
jno
sub
cmpsb
lret
daa
push
ljmp
aad
in
mov
aas
push
sbb
test
outsb
xchg
lods
or
gs
outsl
cmp
test
pop
data16
mov
jb
nop
xchg
sub
push
xor
push
mov
push
mov
cwtl
adc
or
sbb
jae
push
sub
pop
loope
popa
xlat
inc
sbb
xor
and
xor
xchg
or
cmpsl
pop
cld
fdivs
shrl
addr16
pop
mulb
jg
shr
cmp
push
popl
hlt
stos
lods
and
xor
call
rclb
sbb
sti
shrb
and
inc
mov
imul
push
inc
sbb
arpl
and
inc
dec
clc
loopne
mov
mov
adc
xchg
shrl
pop
cmp
sbb
arpl
mov
popf
xchg
add
pop
in
xchg
int
add
mov
inc
or
pop
xor
outsb
test
scas
sub
aaa
inc
outsb
shrb
into
jbe
enter
pop
jnp
cmp
jmp
and
jp
psraw
sub
imul
mov
mov
mov
pop
and
inc
fidivrs
add
sbb
cmp
pop
push
dec
adc
and
dec
adc
aam
mov
insl
lock
ja
sbb
inc
call
movsl
mov
or
cs
sbb
imul
gs
mov
in
jg
or
into
adc
push
or
push
mov
mov
mov
fists
mov
mov
xor
jl
xor
ror
lret
xor
fadds
pop
subl
and
bound
pop
sbb
dec
sub
in
push
les
xchg
fnsave
xor
xchg
insb
loopne
in
repz
in
stos
add
aad
popf
aam
dec
outsb
scas
cmp
jno
sub
jae
xor
adc
imul
sbb
and
cmp
inc
loop
lret
mov
sub
xchg
sbb
fists
ret
pop
cmp
inc
push
loope
lret
sub
insl
jbe
mov
lahf
addr16
jbe
sti
mov
push
in
lahf
pop
add
xchg
adc
shrl
dec
sub
mov
movsl
mov
mov
call
cs
lcall
xor
cs
mov
test
adc
xor
pop
lock
cmp
lcall
pop
xor
push
push
push
cmp
popa
sti
pop
cltd
adc
mov
jnp
dec
mov
xchg
sbb
rcrl
mov
jle
xor
xchg
xchg
js
mov
popf
into
or
push
xchg
loope
out
and
divl
fisubl
pop
rcrb
inc
test
repnz
dec
int
insl
repz
icebp
out
xchg
in
aad
pop
cld
fmul
iret
jne
fisttpl
fs
jmp
or
test
fs
adc
loopne
ret
dec
sbb
and
xchg
test
subl
cltd
push
fisttpl
dec
mov
push
fwait
xchg
inc
adc
test
in
pop
and
mov
fmul
xor
xchg
das
lods
mov
cld
fmull
popf
bound
fcompl
out
stos
outsl
mov
cmpb
js
inc
cmpsl
jl
or
push
jge
fdivs
jmp
sbb
fildl
push
jmp
mov
xor
inc
and
dec
mov
shll
jecxz
mov
stos
add
dec
add
or
jo
movaps
xchg
mov
bound
pop
inc
inc
pop
imul
aad
ljmp
push
inc
or
inc
jmp
outsl
out
adc
stc
roll
xchg
push
or
mov
xor
jb
aas
xchg
movsl
stos
lret
cltd
pop
lea
or
mov
adcb
lock
pop
inc
cmp
add
mov
push
outsl
lahf
clc
negl
sub
sti
push
pop
mov
repz
pop
call
loope
xor
add
or
addr16
xor
ljmp
dec
cwtl
mov
js
in
fs
enter
pop
lods
fistpl
pop
call
mov
stc
mov
pop
in
aaa
mov
lods
stos
xor
mov
test
das
cld
push
mov
movsl
xlat
outsl
inc
adc
adcb
out
jl
cmp
imul
and
xor
rclb
mov
xchg
mov
dec
push
lahf
pop
push
inc
xchg
jl
pop
mov
sub
push
mov
fstl
cli
arpl
xorb
fldcw
dec
xor
cld
xor
mov
lea
push
cmp
iret
mov
dec
lock
xorl
xor
movsl
cwtl
mov
add
aaa
mov
ret
outsb
add
and
dec
push
test
and
aad
and
in
mov
repnz
jbe
sbb
icebp
ds
sahf
call
shlb
xor
or
dec
movsl
mov
mov
dec
and
lock
shll
dec
cmpb
in
jge
sbb
push
sbb
lods
push
adc
pop
push
push
mov
mov
sub
scas
mov
push
pop
add
xorb
sbb
inc
mov
xchg
mov
les
shll
lahf
call
stos
aaa
js
dec
movsb
cmpsb
push
iret
inc
scas
mov
int3
fsubrs
mov
leave
push
sub
or
stos
ds
je
adcb
push
cs
mov
mov
inc
pop
lcall
mov
jp
mov
stos
arpl
xor
daa
jns
popa
mov
shlb
cmpsb
jae
out
stc
adc
loop
scas
add
inc
mov
dec
mov
sbb
and
mov
push
shll
gs
call
xchg
aaa
cltd
xchg
dec
hlt
lds
cld
xor
jno
je
sbb
inc
pop
adc
add
mov
or
and
push
mov
je
mov
jne
push
aaa
loope
sbb
mov
mov
lcall
into
fstp
mov
push
sbb
push
push
ret
inc
mov
cwtl
mov
xchg
les
add
push
jnp
in
leave
out
or
ja
sub
mov
xor
fsubs
mov
push
int
fbstp
sub
insl
dec
adc
and
cmp
xor
rorb
mov
jb
ja
lods
mov
mov
jns
mov
cltd
call
xchg
ds
add
arpl
add
cmp
jle
das
cwtl
dec
xchg
mov
gs
xor
xor
pop
in
xchg
lods
push
ds
into
clc
hlt
push
mov
jbe
mov
lods
dec
inc
pop
cmp
jmp
movsb
shll
xor
out
pop
or
mov
test
imul
stos
pop
gs
mov
sub
mov
cmp
leave
fldt
lods
mov
jp
lret
insl
xchg
xor
leave
cli
add
push
sbb
and
mov
dec
mov
cmp
popa
pop
sub
mov
or
pop
adc
outsb
push
movsl
lea
clc
push
hlt
inc
negl
sbb
and
mov
das
lea
filds
adc
jle
push
in
dec
mov
mov
lret
cld
aas
out
sub
arpl
xor
cmpsl
hlt
cmp
mov
scas
mov
cwtl
mov
xchg
adc
dec
ljmp
mov
jecxz
pop
sub
ret
mov
jne
test
push
ret
subl
jmp
mov
leave
xlat
sbb
xorl
fiadds
push
in
test
sbb
sarb
mull
mov
and
out
inc
stos
xchg
push
cs
in
inc
lods
out
mov
dec
repnz
jne
dec
dec
mov
and
xlat
nop
scas
xor
cmp
xchg
hlt
js
xchg
adc
lods
lret
mov
push
pop
jbe
ficoms
cmp
pusha
mov
push
je
fsubr
aam
out
lods
or
fildl
sbb
push
fldt
stos
stos
dec
sub
sbb
push
stos
in
cmp
push
repz
mov
fisttpll
fwait
cs
push
insb
xchg
mov
inc
fsts
and
lret
mov
sub
imul
sbb
add
push
cmpsb
loopne
jp
mov
pop
or
inc
jle
xchg
mov
jmp
bound
xchg
scas
sub
cld
and
cwtl
rclb
jne
or
cmp
js
and
outsl
sti
outsb
pushf
mov
xlat
dec
sbb
outsl
insl
inc
imul
nop
loope
xor
ljmp
mov
xor
xchg
shrl
or
dec
mov
aam
mov
imul
push
push
call
pop
adc
sub
xor
jne
push
sub
mov
cld
movsl
add
addr16
mov
nop
inc
aad
pop
or
mov
adc
mov
jo
sub
and
mov
pop
push
dec
dec
sub
mov
aad
jbe
mov
lret
push
ret
xchg
movsl
xchg
repnz
mov
xlat
daa
adc
stos
push
cld
imul
cmp
add
ret
sub
push
cmpsb
sar
std
push
pop
xchg
jge
jb
push
popa
pop
stc
aam
mov
out
mov
fisttpl
inc
push
test
cltd
jge
mov
div
das
rcrl
xor
pop
loope
es
dec
cmp
es
sub
sbb
into
pop
cld
pusha
popa
in
jbe
pop
adc
sbb
add
aad
mov
dec
inc
xor
popf
sub
cld
mov
sti
les
pop
insl
daa
mov
and
and
cwtl
and
dec
test
pop
or
mov
out
push
fs
or
lcall
xor
sbb
mov
sbbl
sub
mov
jecxz
ja
fisttpl
mov
rcl
loop
xor
pop
pop
push
pop
add
mov
dec
pop
hlt
fadds
jbe
mov
cmp
and
cs
sahf
mov
push
rorb
out
outsl
es
addr16
cmp
adcb
fistpl
aaa
dec
push
mov
enter
movsb
jb
push
gs
imul
mov
loop
mov
dec
add
jl
fnstsw
xchg
inc
inc
and
inc
xor
rcll
sub
ds
enter
pop
out
and
push
mov
pop
iret
mov
ss
aas
add
outsl
shl
push
scas
repnz
cmp
mov
jl
scas
leave
cmp
lahf
ret
or
scas
mov
push
xchg
popf
sub
mov
or
addr16
icebp
out
dec
sbbb
mov
inc
xor
push
ljmp
mov
pop
sbb
pushf
pop
jecxz
inc
lock
jns
or
adc
scas
cmpsl
roll
mov
sub
and
rolb
imul
movsl
dec
dec
mov
inc
push
and
imul
jmp
insl
loop
mov
mov
scas
sub
xchg
adc
push
adc
loop
push
inc
popf
dec
loopne
loope
mov
cmpsb
ss
mov
jl
xchg
sti
les
lret
and
inc
fnstcw
test
mov
cs
movsb
fistl
jecxz
lods
mov
mov
lock
and
or
pop
adc
mov
cli
mov
mov
fstps
pusha
mov
in
and
dec
lods
push
mov
push
xchg
mov
dec
push
insb
jge
sub
inc
jo
aad
push
imul
xchg
inc
loopne
push
xor
mov
mov
hlt
cmp
add
ljmp
ficoml
jl
add
cli
out
jge
mov
sbb
cmp
int3
ja
das
jns
dec
pop
cwtl
mov
sub
or
scas
jns
or
dec
mov
lods
push
and
jge
sub
hlt
inc
ds
mov
sub
clc
test
cmp
or
jae
or
add
xchg
jg
ljmp
cs
into
jno
jmp
or
mov
fsubrl
push
mov
clc
cmp
mov
icebp
ds
ret
lods
add
cwtl
sbb
popa
clts
pushl
pop
loopnew
cli
in
pop
test
loopne
sbb
sbb
hlt
into
jno
jge
mov
dec
dec
lods
test
das
jmp
lea
leave
addr16
movsb
jecxz
push
daa
test
aaa
dec
sub
sub
andb
mov
xor
cmp
lcall
bound
inc
mov
mov
loopne
or
push
adc
out
jb
addb
push
pop
adc
xor
pop
orb
test
in
in
mov
rorb
and
jmp
movb
mov
mov
push
out
rcl
and
dec
xchg
sarb
imul
subb
fcoml
jnp
or
je
cmp
ljmp
rorb
int3
arpl
mov
aas
or
daa
loopne
sbb
add
test
js
pop
cmp
lea
insl
cmp
mov
xchg
lock
imul
push
inc
sahf
sub
inc
mov
gs
out
cmp
aas
dec
int
cld
mov
pop
bnd
add
push
arpl
pop
sub
dec
stc
es
pop
in
inc
pop
push
fnstcw
imul
mov
dec
pop
inc
jo
push
aad
fsts
pushf
js
or
fmul
or
push
fsub
mov
repz
dec
push
jl
daa
adc
sbb
sub
popf
sub
je
dec
sub
mulb
mov
cmove
cs
inc
jnp
mov
adc
pop
sub
ja
popf
in
icebp
or
add
aad
lea
jne
mov
mov
pop
cmpsb
popa
inc
sub
lcall
sbb
lods
sub
jae
call
push
mov
adc
call
mov
lahf
ljmp
mov
sar
xlat
in
or
mov
add
lret
mov
test
scas
pop
xchg
xor
pusha
push
mov
mov
mov
pop
mov
add
mov
cli
movsb
xor
mov
sti
arpl
adc
loop
ret
sti
and
add
mov
mov
pop
andb
sti
das
enter
xchg
out
mov
jnp
mov
mov
cmp
sti
stc
xchg
push
jmp
dec
cmp
cmc
jb
xchg
out
test
inc
mov
cmp
pop
dec
into
dec
jge
pop
mov
xor
into
adc
sbb
sbb
lahf
push
cmp
mov
push
int
mov
xchg
arpl
mov
sbb
inc
gs
bound
mov
jo
cmpsl
push
fisttpl
insb
mov
out
rorl
movsl
adc
pop
loop
cltd
lock
ret
cmc
lods
sbb
push
lods
mov
push
xchg
mov
sub
sub
xchg
aas
shlb
popa
xchg
sbb
repz
xchg
movsl
addr16
ds
xor
sub
sbb
or
sarb
push
es
xchg
cmpb
loope
push
hlt
pusha
mov
stos
out
loopne
js
xchg
dec
push
pop
xorb
es
mov
js
add
lea
mov
lret
pop
arpl
cmp
xlat
mov
cli
add
gs
movsb
inc
sbb
jne
jmp
pop
fdivr
fadds
lcall
mov
js
mov
push
fimull
push
jbe
xchg
dec
dec
push
xor
pop
arpl
ficomps
mov
sbb
sbb
icebp
xchg
imul
inc
jbe
cs
loopne
jecxz
lcall
jno
lcall
pop
add
xor
in
out
dec
sub
imul
mov
fdivrl
aas
inc
lock
test
fdivs
dec
pop
jo
popa
jnp
push
rolb
add
pop
inc
adc
sarb
mov
push
inc
int3
out
jge
insb
sahf
pop
cli
cmpsb
lret
jmp
sarb
and
mov
push
or
inc
fwait
inc
jno
adc
movsb
scas
setg
mov
arpl
pop
sahf
loopne
test
xor
insb
ja
xor
fwait
add
stc
js
stc
sahf
in
cmp
arpl
sub
jle
les
sti
xlat
and
sub
mov
cmc
popl
data16
jmp
shrl
add
sarb
loop
pop
xor
dec
notb
stos
aas
jns
insl
adc
adc
lcall
mov
test
test
adc
aam
pop
inc
rcrb
enter
out
aad
push
xchg
pcmpgtw
jno
sbb
outsl
mov
sbb
dec
fsubrs
sbb
addr16
adc
and
inc
movsl
pop
cli
push
scas
push
iret
int3
cmc
pop
test
shl
icebp
test
mov
cmc
pop
sub
fwait
push
movsl
mov
sub
fiadds
or
daa
mov
clc
mov
loope
jg
add
dec
popa
push
add
fdiv
mov
mov
push
in
hlt
push
lret
mov
mov
push
cs
int3
push
pop
leave
mov
pushf
and
imull
mov
jge
push
inc
lcall
push
nop
or
mov
mov
dec
mov
lods
mov
les
test
outsl
jp
add
and
mov
stc
movsb
rolb
cli
inc
mov
or
push
sbb
mov
outsl
push
adc
loop
pop
jl
popf
cld
sub
mov
mov
mov
xor
jg
jns
test
cmp
fdivrp
shl
dec
repnz
int3
pop
mov
xchg
test
bound
push
mov
pop
push
mov
sbb
mov
push
xlat
std
sbb
jmp
pushf
in
clc
sbb
pop
pop
fs
dec
pop
or
stos
mov
pusha
mov
scas
mov
mov
mov
dec
sbb
lods
xchg
xchg
jl
mov
cli
je
je
jmp
sbb
mov
sub
mov
dec
pop
inc
adc
pop
xor
lods
jge
bound
dec
jae
mov
pop
lods
dec
xchg
out
fsts
mov
xchg
xor
sub
hlt
lock
mov
fldcw
mov
inc
sub
popl
jmp
cmpsb
scas
xor
or
add
jb
test
mov
fs
int3
rorb
clc
push
out
push
pop
mov
pop
add
sbb
test
mov
sub
and
pop
lret
and
daa
loope
pushf
js
dec
lods
xbegin
xor
adc
mov
aam
jle
shlb
jb
out
pushf
test
fs
sub
or
data16
xor
mov
pusha
test
mov
stos
jbe
cmp
or
mov
imul
cmp
dec
rclb
icebp
pop
push
push
mov
mov
and
mov
jge
or
movsl
and
jle
jmp
mov
pop
pop
jge
pop
xchg
ds
cld
jmp
inc
pop
and
fsub
cmpl
icebp
int
negl
test
les
call
bound
xchg
mov
pop
xchg
fdivrs
fwait
stc
or
jae
mov
mov
dec
push
xor
cmp
cmpsb
jmp
outsb
and
addr16
mov
iret
or
push
sub
aas
fcompl
dec
dec
ja
dec
js
dec
cmc
loope
clc
lods
loop,pt
loopne
jns
popa
mov
mov
mov
push
cwtl
pop
add
test
inc
inc
inc
push
dec
dec
into
sub
dec
jg
pop
in
jge
or
xchg
xor
push
lcall
push
sbb
js
dec
push
lock
int3
lahf
xorl
mov
sub
mov
fstps
movl
cmpsl
cmpsl
adc
fisubs
fidivrs
or
das
out
and
inc
cmpsb
loope
mov
adc
add
xor
test
das
add
outsb
mov
sbb
push
call
jp
xor
xchg
loope
sbb
rcll
fldenv
mov
adc
xorl
cmpsl
movsb
push
sbb
xor
pop
mov
xchg
mov
or
add
jno
jp
imul
pop
repz
push
sbb
xor
adc
inc
std
and
mov
movsl
xor
adc
lea
pop
add
xor
adc
sahf
sbb
es
adc
or
mov
ja
and
mov
dec
push
sub
dec
lret
dec
pop
outsl
and
xchg
inc
jae
outsb
cmp
or
mov
imul
sub
test
adc
push
dec
sbb
lret
cmp
out
jmp
fs
loope
cmp
push
add
aas
jmp
fcomi
test
and
subps
fs
ds
test
ds
adc
pop
popa
push
inc
cmp
lret
lret
jae
sbb
mov
sbb
mov
fs
mov
lds
mov
push
call
push
push
pop
jae
int
lods
ja
enter
sbb
aad
insb
xor
mov
leave
push
mov
vmwrite
push
push
mov
pop
inc
mov
lahf
stos
dec
negl
cwtl
adc
sbb
mov
xchg
subl
mov
jb
scas
cmpsl
push
leave
pop
inc
mov
adc
xchg
and
cltd
mov
and
or
hlt
push
jb
sti
ficoms
mov
daa
negl
add
arpl
imul
test
inc
cmpb
int3
push
fldt
jl
cmp
sbb
xor
push
icebp
and
xlat
lret
pop
leave
shll
mov
out
sub
sbb
sbb
xor
mov
push
in
out
sub
push
adc
out
cmp
or
int3
mov
movsl
aas
adc
gs
inc
ficompl
je
add
ret
cmp
idiv
push
dec
cli
mov
ret
leave
xchg
dec
in
cmp
stos
cmpsb
mov
mov
jge
and
mov
inc
cmp
mov
in
jno
jecxz
cmpsb
inc
dec
inc
inc
cmp
mov
xor
sti
mov
scas
dec
mov
outsl
scas
imul
jmp
arpl
add
sbb
push
jbe
movsb
out
sub
pop
push
push
and
lods
scas
adc
lods
push
add
out
pop
int
mov
clc
gs
cltd
scas
pop
shl
stc
mov
pop
fstpt
mov
test
pop
mov
xor
mov
cmpsl
and
scas
pusha
mov
xorl
add
lahf
push
inc
lds
movsb
inc
dec
sti
mov
in
lock
cmp
repz
mov
mov
ss
idivl
repz
inc
adc
rorl
cmp
xchg
sbb
ja
out
inc
nop
adc
jo
mov
jo
add
pop
push
inc
sub
outsb
sbb
push
xchg
jnp
sbb
inc
pop
mul
or
orl
jne
mov
sbb
mov
mov
jp
movsl
mov
mov
lock
std
mov
jge
pop
xor
dec
pop
push
out
xor
dec
push
jo
xor
std
adc
push
test
andb
and
aad
mov
je
push
loope
iret
inc
push
adc
pop
scas
cmp
sub
mov
outsb
cld
adc
add
into
stc
or
outsb
and
iret
js
movsl
jle
out
test
mov
insb
push
fsubrl
pop
cmpsb
inc
cmc
jnp
scas
scas
inc
fsubl
out
sbb
pop
xchg
scas
subl
orb
sbb
xorl
xchg
iretw
mov
out
mov
sbb
je
mov
mov
xor
popf
sbb
inc
jecxz
adc
repz
pop
inc
fdivrs
mov
jno
inc
ja
pop
xchg
xor
fstl
and
lahf
mov
mov
or
in
push
mov
mov
and
stc
sub
and
iret
in
in
mov
mov
fldz
jne
adc
out
push
xchg
pop
insb
jns
leave
xchg
fidivrs
repnz
pop
pusha
xor
std
sub
shrl
outsl
jp
mov
push
xor
aad
push
pop
subb
xchg
aam
movl
xor
pop
rol
scas
xchg
inc
hlt
clc
mov
cmpsb
popf
jbe
pushf
in
mov
and
push
xor
and
mov
xlat
cmp
popf
jns
movsb
paddsw
xchg
or
push
outsl
int3
lret
dec
dec
fmuls
mov
stc
cmp
ror
lcall
mov
aam
lcall
xchg
hlt
loopne
cmpsl
pop
scas
sub
jo
mov
into
fdivs
mov
aaa
push
in
sbb
iret
push
inc
bsf
clc
pop
outsb
inc
pop
pop
mov
fwait
xlat
repz
dec
ret
adc
dec
push
sbb
xor
xor
mov
add
add
jp
xor
pop
push
mov
scas
cmp
movsb
mov
pop
out
or
fsubr
push
enter
fs
aas
bound
lret
pop
sub
jae
or
dec
sbb
test
neg
test
mov
sub
add
imul
ds
jb
push
stos
mov
mov
into
ret
adc
nop
add
insl
popf
pusha
outsl
cmovno
or
mov
repnz
decb
popf
fwait
xchg
scas
xchg
ds
mov
dec
jno
in
stc
dec
inc
sbbl
repz
cli
mov
iret
jmp
inc
and
sub
xlat
aam
ret
xchg
fidivrl
and
in
adc
leave
incl
aaa
data16
mov
fistps
fisubs
dec
push
sub
sub
sbb
jmp
pop
mov
sub
sbb
mov
mov
push
call
leave
inc
out
add
cmp
xchg
add
xchg
mov
or
movsl
dec
popa
push
ficoms
in
add
sbb
add
loopne
pop
mov
mov
js
adc
jp
inc
cmp
test
out
test
mov
test
push
or
test
iret
mov
mov
xchg
mov
ss
inc
adc
outsb
ja
addr16
leave
ds
call
nop
jo
jbe
jno
adc
hlt
inc
dec
pop
movsl
popf
test
jmp
call
pop
ds
daa
shll
jbe
xor
ret
fwait
pop
fst
lret
in
xchg
clc
call
fadd
push
dec
loop
jge
cmp
jo
movsb
pop
mov
inc
dec
mov
rcll
mov
dec
push
or
add
orl
or
outsl
add
jb
jbe
pop
clc
int
push
imul
aam
fidivrl
int
clc
negb
dec
adc
or
lcall
into
add
jg
into
mov
push
push
aad
mov
fwait
or
and
and
push
jmp
cmpsl
xchg
sbb
cmpsl
adc
push
testl
pop
cli
movsl
mov
repz
loopne
lods
je
mov
test
mov
dec
jbe
mov
mov
leave
sbb
in
out
pop
xor
push
xchg
inc
js
shlb
dec
inc
mov
stos
inc
xchg
lds
cmp
jg
mov
jecxz
sub
cmpl
jmp
xchg
cmp
pop
mov
pushf
mov
adc
dec
jbe
mov
rcll
jbe
pop
stc
jmp
add
dec
mov
nop
je
bound
shlb
cmp
cmp
adc
mov
xchg
pop
aam
rclb
ficompl
bound
cmp
std
xor
xor
dec
outsb
ret
outsb
rclb
dec
addr16
pop
xchg
int
arpl
mov
fimuls
scas
mov
xchg
sbbb
popa
mov
jae
or
data16
popa
outsl
adc
cmpl
add
adc
mov
fcompl
in
test
out
imul
cmp
adc
fldt
sub
dec
out
inc
loop
push
mov
sub
test
dec
btrl
xor
dec
jo
jne,pt
into
mov
pop
push
jmp
adc
les
jp
fsubl
aam
dec
mov
cs
daa
xchg
mov
enter
and
out
lret
cld
repnz
mov
movsb
xor
dec
push
cld
cmc
cmpsl
loopne
fs
ret
or
fnstenv
pop
adc
inc
mov
or
lods
xchg
inc
loope
pop
imul
push
fucomi
adc
cmc
add
dec
mov
outsb
xchg
rcll
jns
test
loopne
sub
mov
sbb
xchg
cltd
fwait
ret
lods
in
jp
dec
into
test
push
cmc
dec
mov
or
lods
sub
mov
pop
sbb
arpl
jbe
cltd
cmp
dec
int3
cmp
mov
ret
lods
xor
aam
jbe
lcall
jne
sub
repnz
mov
pusha
jge
fs
rorl
push
icebp
shlb
jmp
sub
pop
xorb
or
addr16
int
outsl
mov
mov
hlt
sub
sub
nop
cltd
jne
sbb
imul
mov
pop
adc
out
pushf
fcompl
dec
in
fsubs
push
and
dec
lahf
or
pop
int3
push
sub
cmp
cmp
push
enter
mov
xor
jo
or
lds
enter
mov
jae
or
xchg
xor
push
imul
adc
xor
or
mov
pop
inc
dec
lods
fldenv
pop
and
lds
mov
rcrb
mov
and
adc
iret
scas
sub
mov
cmc
les
mov
dec
pop
aas
xchg
xchg
pop
adc
inc
sbb
outsl
je
adc
xchg
movsb
cs
sbbb
inc
sbb
add
xor
ss
lds
scas
ljmp
mov
dec
adc
pop
sub
iret
sub
jg
fistpll
test
out
pop
es
push
cmp
adc
leave
lcall
hlt
int
movsl
mov
or
loop
pop
sub
add
lods
push
int
and
cld
leave
and
sbb
jmp
jl
mov
adc
cmp
xchg
ss
test
lret
push
inc
lcall
lods
xchg
cmp
push
in
leave
and
xor
push
jl
mov
lret
sub
lret
adc
xor
inc
and
add
and
sbbl
push
xorb
cmpl
addr16
push
imul
and
repz
push
or
sub
lods
pushf
push
insl
pusha
in
cmp
stos
sub
mov
mov
arpl
mov
adc
mov
push
lcall
lods
mov
pop
lret
mov
bound
and
adc
jnp
dec
lods
xchg
dec
arpl
in
and
cmp
enter
loopne
data16
inc
mov
mov
pop
xchg
push
and
jecxz
aad
adc
int3
iret
jne
sbb
icebp
mov
inc
mov
sbb
enter
and
add
dec
outsb
add
mov
in
xchg
lcall
or
push
cmpsl
jnp
out
in
xor
lret
mov
out
leave
mov
in
cmp
push
or
inc
fldcw
inc
mov
cli
dec
jb
sub
add
push
das
push
mov
lds
jns
push
mov
push
pop
sub
arpl
lcall
lret
dec
js
dec
add
push
mov
inc
mov
in
mov
mov
loop
mov
movsb
in
js
fiadds
xor
test
mov
push
sbb
and
mov
dec
jmp
adc
jecxz
icebp
push
out
stos
cmp
pusha
pushf
imul
or
cmp
mov
dec
push
pop
inc
lret
dec
loop
dec
pop
inc
inc
subl
mov
xor
out
or
insb
inc
cmp
mov
arpl
and
sbb
jo
out
outsb
push
jne
mov
or
stos
ret
dec
iret
in
mov
pop
dec
sub
lods
out
dec
addr16
ds
cmp
dec
jne
sub
dec
cmp
outsb
nop
mulb
cwtl
adc
daa
xor
das
mov
or
xchg
xor
xor
dec
pop
push
imul
mov
roll
cmp
mov
dec
test
pop
inc
hlt
sahf
sub
shr
cmpsl
mov
outsb
jl
dec
fs
add
dec
imul
jge
pushf
cmp
inc
or
fisubrs
cld
add
scas
xor
mov
in
and
jae
cwtl
sub
out
popf
fistl
mov
dec
sbb
pop
imul
jnp
fnsave
mov
movsl
in
les
adc
lahf
mov
mov
mov
cltd
dec
in
loop
lret
addr16
jb
lahf
mov
push
push
loope
movsb
in
and
clc
out
pop
out
push
pop
cld
scas
push
inc
lret
inc
xchg
dec
xor
pop
iret
das
dec
sub
arpl
cmpsb
repz
test
es
cs
mov
fld1
mov
imul
mov
int
xchg
mov
xor
pop
fisttpl
pusha
mov
xchg
scas
push
outsl
jl
data16
mov
lods
data16
mul
ljmp
int
sbb
and
pop
and
mov
pusha
into
shrl
pop
and
mov
mov
cmc
push
push
jno
arpl
sti
js
cmp
lret
clc
sti
push
and
stos
popa
push
push
sbb
push
pop
mov
push
add
xchg
pop
mov
in
jl
cmp
sbb
sub
add
adc
mov
int
mov
sub
mov
pop
outsl
fsubrs
scas
mov
test
cmp
jl
push
test
into
add
imul
push
cltd
mov
mov
pop
inc
sbb
jl
mov
xlat
fldl
lret
inc
pop
xlat
dec
mov
pop
sarb
pop
mov
dec
data16
loop
mov
or
sbb
cld
cmp
cli
mov
adc
dec
nop
and
xor
xor
in
jns
popa
push
fidivs
xchg
sub
movsb
add
jmp
adc
test
dec
out
testl
xchg
cwtl
sub
lret
jmp
lock
sub
repz
push
and
cmp
int3
mov
inc
xchg
cmp
cmpsb
jnp
push
cwtl
lea
and
mov
add
push
out
mov
adc
add
test
cmp
pop
mov
mov
fnstenv
and
jo
call
mov
das
adc
inc
sub
es
pop
or
loop
xchg
inc
xchg
add
shll
push
mov
mov
adc
cmp
int
push
cmp
popf
aam
jnp
daa
sti
movsb
popa
fcomps
sub
xchg
pushw
lock
ja
xchg
pop
sub
subl
xchg
repz
mov
add
mov
test
int
in
iret
cmp
shlb
mov
dec
orb
lea
dec
daa
push
hlt
push
cmp
arpl
in
imul
dec
adc
stc
mov
jnp
push
sbb
lret
sbb
dec
roll
out
dec
frstor
outsl
sub
ret
lods
cmpsl
xlat
outsl
and
jnp
adc
inc
addr16
insl
rclb
insl
mul
inc
add
mov
sub
xor
or
jl
aad
mov
divb
test
mov
js
int3
cmp
mov
ret
lret
roll
add
icebp
inc
js
shl
outsb
jnp
adc
inc
icebp
clc
imul
add
sub
ret
pop
inc
jo
fbld
int3
xor
insb
sub
js
xchg
subb
outsl
leave
xor
iret
pop
xlat
adc
add
push
inc
stos
jne
pop
pusha
insb
lret
sarl
jle
mov
and
sti
add
in
movsl
and
cli
mov
insb
mov
cmp
or
xor
nop
sbb
sbb
sub
and
xor
push
cmpsb
cmp
push
aas
xchg
push
cmpsl
test
or
insb
xor
push
stos
sub
popa
push
shrb
or
or
adc
mov
pop
xlat
sbb
fisubrs
mov
push
sbb
mov
pop
pop
loope
subl
movsb
jnp
arpl
push
stc
jmp
add
mov
push
lret
dec
aad
mov
out
jge
fs
mov
dec
mov
outsb
adc
cmp
or
mov
pop
push
adc
fnstsw
pop
push
cli
insl
sti
bound
scas
mov
repz
movsb
mov
and
xor
out
jge
fwait
imul
cwtl
lods
aas
stos
push
push
je
lods
test
daa
shl
sbb
fxch
xchg
push
pop
sbb
fnstcw
lds
clc
mov
stc
fdivrl
rcll
inc
sub
pop
mov
or
repz
dec
mov
lods
test
es
and
cld
stc
pop
movsl
mov
test
ret
push
mov
cmp
xor
xor
xchg
jno
cmp
push
pop
out
mov
sub
cld
jl
movsl
jae
std
xchg
aam
inc
pop
data16
loop
ljmp
mov
mov
sbb
mov
adc
pop
and
in
pop
cmp
movsb
in
outsl
sahf
push
sti
add
int3
mov
xlat
adc
add
jg
mov
fsubs
sti
outsl
sub
mov
pop
cmp
fs
arpl
or
cld
xor
xchg
outsl
les
mov
xchg
mov
das
add
inc
addr16
icebp
or
cmp
push
movsb
mov
rcrb
dec
mov
fisubrs
push
xchg
dec
lock
mov
stos
pop
inc
mov
pop
es
jl
cmc
xchg
aam
insl
sub
pop
and
mov
xchg
push
pop
inc
mov
addr16
sub
push
xor
mov
dec
xor
inc
sbbb
cmp
sti
xchg
arpl
or
mov
push
test
orb
repz
fisubrl
insl
mov
lea
push
cmp
dec
adc
push
subb
inc
add
push
mov
push
mov
mov
xor
test
clc
dec
push
add
push
insl
dec
jnp
aam
iret
cmp
cmp
mov
jecxz
dec
sti
inc
fildll
shrl
push
test
sti
pop
push
cmp
daa
add
mov
adc
jp
add
mov
out
mov
mov
aam
bound
iret
cmp
dec
stos
fcoml
xchg
adc
add
out
push
mov
lea
mov
push
push
adc
aas
jg
pop
mov
push
imul
fwait
insl
lcall
stos
mov
push
mov
push
mov
mov
mov
lret
push
and
mov
mov
jl
push
pop
outsl
inc
ds
movsl
xchg
and
imul
loop
add
incl
outsb
scas
jge
jnp
movsb
fisubl
push
dec
xchg
outsl
rcl
popf
loope
mov
test
dec
ja
es
int3
sti
stc
mov
cmp
and
iret
mov
out
cld
push
adc
arpl
gs
adc
inc
cwtl
faddp
add
test
je
jne
aam
movsb
arpl
mov
lret
repnz
mov
sub
or
repnz
mov
outsb
stos
inc
loope
insb
xorl
mov
jno
mov
mov
fiadds
add
imul
enter
cltd
push
dec
in
adc
mov
fs
mov
sbb
imul
sbb
mov
testl
ret
dec
pop
fisubs
add
inc
mov
repnz
aad
bndstx
mov
cmpb
scas
mov
in
jb
fcomp
pop
out
pop
xor
push
xchg
mul
nop
cmp
outsb
enter
push
inc
mov
cmp
or
mov
dec
inc
pop
mov
adc
std
dec
je
into
inc
fidivs
mov
hlt
jle
lods
pusha
outsl
pop
cmp
dec
call
divb
ja
lock
cmp
orb
dec
inc
sahf
prefetch
leave
stos
addr16
inc
sbb
and
pop
pop
daa
lcall
push
lret
sub
mov
push
cmp
mov
or
jle
pushf
pop
inc
lcall
push
scas
inc
leave
mov
rorb
jl
sahf
adc
xor
cmp
mov
xchg
xchg
mov
xchg
fiaddl
xchg
mov
ljmp
mov
cmp
cld
lods
mov
mov
adc
clc
sub
pop
push
mov
push
movsl
leave
inc
hlt
push
mov
adc
cmp
in
add
movsl
flds
mov
cmpsb
stos
mov
cmc
movsb
mov
sbb
mov
lret
repz
mov
aam
stos
sbb
pop
mov
sahf
stos
aad
and
sarb
dec
fs
adcb
cmp
push
add
ss
adc
or
adc
clc
daa
jecxz
xchg
push
pop
decl
sbb
push
xchg
pop
push
or
sub
and
mov
sub
sub
hlt
pushf
iret
pop
push
sbb
lods
cmp
mov
mov
xchg
add
cld
sbb
push
outsl
xchg
sbb
adc
add
hlt
nop
popa
loop
xchg
inc
fs
jge
jl
mov
and
pop
adcb
cwtl
incb
movb
mov
sbb
ljmp
mov
pop
enter
xor
mov
bound
fnsave
xchg
sub
fdivs
cmp
mov
std
jo
and
sub
hlt
cmp
adc
jle
mov
mov
cmp
fimuls
jae
out
mov
or
push
push
mov
mov
mov
outsl
pusha
push
xlat
ljmp
xor
es
mov
or
arpl
stos
xchg
or
int
mov
call
mov
mov
popa
mov
inc
xchg
popa
loop
xchg
inc
push
out
xchg
ret
jbe
xchg
enter
cmp
add
xor
shl
adc
and
aam
and
pop
cmp
add
dec
stos
pop
adc
xorl
shrl
call
inc
xor
dec
rorb
jae
out
imull
enter
cmp
add
in
jns
sti
inc
sub
cltd
gs
ds
in
adc
scas
les
xchg
ret
pop
mov
out
push
mov
fldenv
xchg
stos
add
mov
das
jnp
in
cmpsl
xlat
or
outsb
pop
mov
and
mov
mov
addr16
pop
repz
stos
loope
push
in
adc
ret
sbb
je
cmp
inc
cmpsb
sbb
cmp
mov
add
mov
pop
dec
dec
pop
les
inc
inc
ret
mov
aad
mov
nop
push
jle
mov
mov
cmp
je
xchg
or
xchg
inc
fimuls
jae
les
mov
jae
push
or
insl
testb
add
clc
mov
sub
ja
lds
mov
add
cmp
inc
cmp
dec
arpl
and
dec
mov
cli
or
adc
inc
push
inc
pop
cmp
lock
inc
sar
pop
adc
jge
or
xorl
mov
stos
adc
xchg
jge
mov
addr16
mov
loope
dec
mov
lods
pushf
lcall
in
daa
and
cld
mov
adc
mov
testb
daa
push
shlb
mov
dec
movsl
leave
dec
mov
loop
mov
sbb
push
xor
maskmovq
add
add
pop
mov
dec
jae
adc
loope
hlt
pushf
sub
inc
add
sbb
jmp
imulb
in
sub
push
idivb
loope
jo
lock
jecxz
jb
rorb
inc
mov
dec
pop
stos
andl
sbb
add
sub
pop
xchg
les
jb
inc
fisttps
or
dec
lret
fwait
cltd
push
adc
pop
lret
dec
mov
cmp
movsl
xchg
mov
mov
stos
mov
dec
mov
cwtl
xchg
sub
fwait
movsl
push
aaa
push
lret
dec
cmp
sub
inc
jbe
fwait
clc
mov
and
imul
popa
das
add
xor
jmp
pop
mov
loope
or
cltd
inc
fimuls
xchg
xchg
dec
in
add
loopne
adc
mov
mov
jb
xchg
in
mov
sub
jns
sub
or
cltd
test
dec
push
pusha
mov
mov
add
popa
fiaddl
jge
ss
std
sbb
nop
mov
sub
gs
dec
aaa
jge
scas
inc
aas
stos
mov
outsl
adc
dec
mov
mov
xchg
jb
sbb
imul
xchg
outsl
popa
adc
mov
push
jp
jp
inc
cmp
mov
xchg
fcoml
repz
and
inc
xor
adc
popa
mov
xchg
imul
arpl
inc
std
aam
mov
cmp
mov
push
pop
outsb
jp
pop
xchg
leave
xchg
dec
xor
inc
adc
cltd
scas
and
fwait
dec
adc
test
cwtl
sub
mov
sti
xchg
lahf
out
pusha
xor
sub
leave
sahf
pop
add
hlt
test
inc
sub
cwtl
scas
and
cltd
mov
xor
iret
loope
dec
push
adc
int3
test
and
stos
sub
gs
inc
rorl
jg
lods
cltd
int3
sub
mov
imul
les
mov
cmp
loope
mov
lods
daa
mov
adc
sub
cmp
daa
add
les
daa
mov
pop
sbb
jmp
mov
xor
inc
mov
cli
xor
and
and
movsl
shlb
push
pop
sub
mov
js
mov
xor
cmp
mov
pop
dec
ss
iret
lahf
mov
dec
pusha
cltd
addr16
movsl
jecxz
ret
outsl
mov
xor
sub
es
sahf
out
pop
adc
hlt
mov
fwait
rorl
ror
jl
clc
das
loope
push
inc
loopne
loopne
dec
shll
in
jmp
mov
stos
iret
enter
fists
movsb
in
shlb
jl
xor
inc
clc
out
pop
lret
adc
cld
scas
push
inc
add
arpl
push
loope
mov
xor
cmpsl
lods
fisttpll
sub
lret
dec
sbb
mov
inc
fcoml
jno
or
sub
popf
stos
or
sub
lret
dec
enter
push
call
or
outsb
dec
outsb
imul
sub
inc
or
or
fsubl
lods
addl
nopl
dec
add
adc
sub
jno
aaa
lea
jge
jns
jge
lock
xlat
outsl
aaa
or
cltd
leave
push
add
pop
or
clc
inc
adc
lcall
inc
outsl
leave
jno
pop
lret
mov
xor
xor
jno
or
xor
inc
popf
enter
inc
lds
xor
pop
push
aas
movsl
inc
jae
sbb
jge
insb
int3
test
mov
test
call
andb
test
xchg
test
outsb
outsb
xchg
push
jno
cmp
push
outsl
dec
jb
ja
out
cmpsb
add
xlat
loope
xchg
addl
jae
cmp
push
outsl
inc
jno
arpl
stc
inc
inc
xor
mov
idivl
loop
nop
lret
or
inc
xchg
adc
mov
lahf
push
add
mov
cmp
jl
fwait
sti
jl
cwtl
xor
mov
imul
sub
jno
sbb
jmp
fcomps
gs
add
fnstcw
add
dec
and
cwtl
push
pushf
stos
adc
dec
cld
and
pushf
inc
inc
jmp
cmc
push
cs
mov
outsb
adc
mov
mov
push
aad
or
mov
sub
xor
ds
loop
jae
loopne
bound
test
mov
leave
jo
into
inc
sarl
imul
ss
xlat
xchg
mov
fisubrs
jae
cmpb
mov
into
sub
push
mov
xor
adc
pop
jb
add
jge
and
aas
mov
sbb
cmp
das
test
xchg
sub
pop
mov
sub
mov
inc
shlb
push
repnz
mov
dec
mov
mov
jno
sbb
lret
pop
cmc
inc
mov
sub
sbb
sbb
das
mov
xchg
and
mov
jmp
test
andl
dec
maskmovq
testl
movsl
jno
rorb
loop
outsl
and
mov
lods
insb
sti
dec
and
push
jbe
mov
stos
dec
in
movsl
aad
sti
jecxz
aam
lods
push
arpl
cmc
lods
and
pop
cmpsb
lds
shrl
xchg
fwait
dec
adc
fnstcw
push
pop
sbb
or
pusha
cmp
int
sub
pusha
xchg
dec
jmp
xchg
push
icebp
test
test
arpl
jns
ret
test
lahf
and
clc
dec
notb
outsb
mov
xchg
mov
imul
or
cmpsb
and
scas
mov
lock
jns
insb
dec
inc
xor
adc
in
sub
pushf
lret
cmp
arpl
mov
push
inc
mov
xor
mov
mov
push
sub
adc
cmpl
xor
add
cltd
pop
dec
sbb
repz
sub
inc
cmp
or
adc
inc
mov
sbb
mov
mov
cmp
cmpsb
jns
jl
jo
movsb
imul
push
mov
out
mov
iret
mov
xchg
mov
xor
cwtl
out
mov
test
imul
xor
loope
lahf
add
mov
mov
sbb
add
add
fdivs
cmpsl
daa
xchg
out
dec
mov
je
and
aad
or
stos
xor
in
mov
sbb
lcall
iret
add
fsubs
jo
xchg
inc
bound
stos
aad
xor
jo
in
mov
orl
popa
xchg
into
stc
cwtl
imul
js
out
jp
or
test
cli
stos
into
mov
testl
iret
inc
movsb
rorb
push
jl
xchg
and
shrb
je
test
push
mov
xchg
and
enter
cmp
ja
outsl
fs
dec
fs
adc
xor
add
fimuls
xchg
jmp
nop
pop
sub
cmp
inc
jbe
mov
pop
cmpsb
jmp
pop
inc
xor
rcrb
call
aam
add
jnp
xchg
lea
sub
jnp
out
push
sub
mov
cmpb
imul
jbe
xor
rorb
xor
jge
lock
sbb
outsl
lret
ljmp
push
and
mov
jle
hlt
mov
mov
inc
push
or
leave
arpl
ds
cmpsb
jmp
adc
xchg
sub
daa
mov
aad
pop
insl
mov
mov
stc
out
pop
das
sub
popf
pusha
js
mov
mov
and
stos
pop
dec
in
pop
pop
mov
stos
sub
jo
outsb
mov
xlat
fstps
and
push
stos
jmp
les
outsb
enter
cmp
jle
outsl
push
js
je
inc
stc
lahf
mov
xchg
mov
out
data16
adc
lods
mov
xor
mov
add
outsb
in
adc
xchg
pop
dec
mov
mov
push
outsl
out
xlat
arpl
test
pop
outsb
jo
std
add
clc
dec
cmpsb
cmpsb
pop
xor
or
mov
mov
out
outsb
jno
adc
cmp
imul
pop
popa
test
loop
mov
lods
dec
inc
test
mov
lea
jl
pop
push
out
push
ret
push
lahf
imul
mov
ljmp
hlt
mov
push
imul
out
bound
lods
imul
mov
inc
fistps
es
fwait
lods
cwtl
dec
push
fcompl
sub
popf
mov
popf
sub
hlt
or
jb
sub
mov
pop
dec
inc
stos
dec
cmpsb
jae
cwtl
orb
dec
popa
mov
loopne
sbb
js
int
minps
or
inc
movb
push
outsl
dec
xlat
xchg
arpl
xor
mov
popa
mov
loop
jbe
mov
add
sbb
mov
pushf
jae
in
rcrb
and
push
dec
fwait
adc
push
jne
jns
rcr
in
mov
add
enter
fwait
gs
out
lea
pusha
mov
imul
mov
insb
bsf
mov
lret
inc
add
push
inc
adc
pop
mov
jl
sub
test
mov
mov
lds
mov
out
lea
mov
imul
mov
jp
pop
dec
outsl
mov
inc
and
scas
xlat
jbe
add
jnp
mov
dec
or
jmp
enter
outsb
mov
mov
xchg
or
or
mov
or
inc
cmp
rolb
sbb
cmpsl
hlt
sarl
xchg
js
push
or
adc
enter
cmp
imul
gs
jecxz
mov
inc
mov
or
adc
cmp
sahf
mov
sub
mov
add
stos
add
jp
shlb
gs
xor
addl
pusha
jp
cwtl
insl
add
jge
add
aaa
dec
pop
adc
adc
repz
xchg
pop
cmc
lds
push
fisttpll
jb
orb
lcall
pop
pop
sub
aam
cmp
shrb
es
and
adc
dec
out
imul
outsl
sub
jmp
addr16
mov
je
mov
or
cltd
cli
mov
pop
mov
inc
popa
cwtl
add
icebp
imul
daa
orl
fistl
or
enter
lret
imul
dec
mov
mov
jl
add
jge
dec
push
cltd
icebp
outsl
dec
pop
xchg
adc
pop
imul
mov
mov
jae
cltd
es
daa
or
mov
or
loope
addb
inc
xor
fistpl
inc
or
mov
hlt
pushf
xchg
inc
dec
inc
add
mov
mov
or
cmp
jl
int3
jl
mov
mov
mov
imul
sub
dec
pop
adcb
and
jae
push
mov
dec
or
lods
lds
dec
in
mov
pop
and
mov
mov
adc
push
movsb
push
pop
in
jg
lret
dec
sarl
pop
inc
mov
lcall
subb
xorl
outsl
stos
outsl
jp
scas
push
pop
mov
lcall
mov
mov
out
pop
and
inc
mov
xlat
sbb
jle
mov
jp
push
addb
outsb
popfw
adc
ja
pop
pop
int
ret
arpl
xorl
arpl
mov
pop
dec
je
pop
mulb
inc
lret
jle
scas
cwtl
arpl
xlat
push
mov
mov
push
xchg
add
jno
addr16
push
daa
stos
cmp
aad
es
insl
mov
gs
cmp
test
adc
lret
xchg
or
push
cmpl
pop
in
in
ja
aam
pusha
movsb
in
enter
xchg
xor
test
sub
or
mov
mov
push
ret
jno
sub
pop
or
inc
mov
movsl
in
mov
pop
fsubrl
inc
ret
pusha
cmp
and
fwait
test
lcall
mov
cmpsl
ret
mov
dec
mov
inc
jmp
push
test
mov
ret
pop
xchg
dec
or
sub
mov
mov
mov
lds
jns
mov
xchg
scas
add
push
dec
sub
fstpl
cmp
fs
xor
in
pusha
pop
clc
jl
xor
test
mov
push
xor
pop
dec
pop
jnp
adc
popa
push
pop
imul
dec
add
push
out
pop
mov
into
inc
fdivr
inc
loope
push
fisttpll
pop
cltd
fbstp
sub
jae
push
lcall
rcll
pop
inc
dec
jns
adcb
mov
loope
pusha
sar
pusha
xchg
adc
pop
mov
mov
adc
lcall
mov
sub
aas
loope
mov
sub
cmp
sub
gs
hlt
arpl
outsl
cwtl
xor
jp
sub
and
adc
pop
pop
das
adc
sar
inc
sub
mov
lds
mov
push
pop
pop
jne
hlt
dec
sbb
push
movsb
sti
push
sub
mov
mov
sbbb
aad
shrl
dec
or
inc
cmpsl
push
xor
gs
mov
or
movsl
daa
in
mov
and
fwait
push
loope
xchg
call
pop
pop
mov
mov
psrld
pop
cli
movsb
ss
loope
push
inc
fcomps
daa
cmc
out
outsb
mov
jne
data16
cmp
mov
fists
movsb
in
int3
push
in
xchg
xor
test
push
inc
push
dec
arpl
push
pop
xchg
movsb
mov
loopne
xorb
dec
in
adc
imull
push
inc
mov
adcl
adc
push
fdivs
movsl
sub
mov
in
loop
lahf
pop
dec
fadds
sub
pusha
cmp
daa
cli
jo
bound
cld
std
mov
pop
jae
fidivrs
cs
push
pop
push
mov
jge
adc
xor
jo
test
jle
aaa
mov
jo
push
mov
jno
cmpsb
mov
jnp
push
rcl
push
push
inc
inc
mov
das
inc
cmp
sub
sub
ret
mov
pop
nop
push
out
or
dec
hlt
mov
clc
cmp
int3
imul
push
fs
mov
push
jle
loope
imul
push
rclb
push
push
mov
cmp
addr16
call
jl
repnz
js
adc
push
xchg
cmp
push
mov
divl
push
push
push
outsl
pop
adc
mov
inc
pop
xchg
les
testb
xor
mov
addr16
daa
mov
dec
jne
into
int
cltd
std
push
mov
fsubrl
inc
ja
mov
mov
and
imull
add
push
std
fs
mov
lret
push
loop
insb
inc
mov
imul
test
sub
mov
popa
mov
aam
inc
xchg
iret
jle
add
imul
pop
push
outsl
stos
push
xlat
lock
test
dec
jo
xchg
mov
or
xor
cmp
outsb
jp
xchg
in
daa
shr
xor
jno
fs
sub
lret
mov
jle
hlt
xor
call
jno
pushf
mov
loop
jmp
js
xlat
and
rclb
jno
cmc
fs
ror
jno
mov
mov
inc
or
pop
xlat
movsl
arpl
or
sub
inc
push
loope
ret
pop
insw
int
mov
call
pusha
mov
loop
mov
xlat
push
loop
insl
inc
push
cltd
insl
ret
arpl
enter
leave
add
movsb
dec
sbb
pop
pusha
insl
js
stos
add
push
xchg
loop
mov
pop
jns
mov
je
lcall
je
dec
mov
insb
push
cmp
and
repz
jae
incl
jae
xor
sub
nop
dec
or
popa
loop
outsb
inc
push
mov
adc
ss
pop
push
outsl
stos
pop
xlat
aaa
arpl
fs
jmp
arpl
hlt
dec
or
sar
pop
push
outsl
pusha
pop
xlat
stos
arpl
lahf
jne
ljmp
xor
push
stos
push
ret
mov
push
enter
cmp
pop
push
outsl
sti
pop
xlat
out
inc
rclb
mov
inc
push
jecxz
ret
cmp
enter
cmp
inc
push
imul
xchg
dec
mov
dec
mov
inc
mov
lsl
call
das
imul
ret
test
sub
test
or
fmul
arpl
or
sub
out
jo
dec
and
in
cmpsb
jmp
movsl
dec
cmp
call
and
fistl
sbb
sahf
mov
loopne
xor
jno
cltd
push
out
orl
pop
push
push
mov
sbb
adc
pop
jno
cltd
out
mov
fwait
jp
dec
sete
push
cmp
scas
mov
pop
ljmp
jno
mov
cmp
pop
aam
mov
outsb
js
pop
imul
in
pop
dec
int
jl
popa
jle
popa
rolb
xor
lods
insb
jg
add
cld
sub
dec
ja
dec
and
mov
push
movsb
mov
pusha
addr16
or
fists
loopne
loope
lea
arpl
movsb
mov
mov
sarb
mov
jl
outsl
in
mov
pop
push
mov
rcl
or
xor
mov
jg
arpl
xor
jl
out
js
das
pusha
jbe
and
shrb
in
inc
cmp
sahf
lcall
inc
pop
cmp
mov
andl
dec
cmp
xor
jnp
dec
mov
jnp
pop
mov
jnp
movsl
push
mov
cmp
outsl
lcall
push
das
pusha
jns
mov
test
pushf
fldl
mov
dec
movsb
jae
inc
insb
std
push
sbb
in
mov
add
outsl
lea
addr16
pop
lret
pop
push
rorl
sub
test
out
and
insb
sbb
sub
lods
sub
lcall
pop
jae
adc
and
fs
int3
hlt
insl
pop
lahf
xchg
jl
cmpsb
cmp
inc
mov
mov
and
dec
cmp
test
mov
and
add
jmp
xor
shll
les
test
ja
dec
xchg
aaa
and
xor
sub
dec
sub
mov
xor
xor
sub
cli
xchg
lods
inc
mov
stos
stos
hlt
arpl
outsb
sahf
fmuls
outsb
loope
ja
enter
cwtl
cmp
es
adcb
sbb
fldt
mov
add
stos
call
movsb
movsb
add
fildll
mov
inc
iret
push
cmp
cmpsb
js
pop
pop
icebp
fldt
dec
and
xchg
lea
daa
adc
add
in
adc
fstpt
add
imul
lods
insb
inc
out
jmp
mov
inc
arpl
mov
loope
lods
cmpsl
aad
mov
cmpsl
dec
cmc
adc
inc
jp
xchg
push
pop
sub
cmpsb
jp
dec
push
aaa
movsb
ret
js
subb
aas
sub
mov
cmp
jecxz
mov
out
xchg
push
test
jmp
xchg
int
xor
jge
cmp
ss
push
das
mov
fildl
aad
mov
nop
mov
hlt
bound
pusha
pop
nop
clc
and
inc
mov
nop
mov
mov
bound
sub
ret
test
add
lret
scas
mov
data16
rorb
inc
loop
pop
mov
outsl
pop
cmp
pushf
jno
repz
test
or
and
mov
cltd
jb
pop
popl
pop
das
scas
mov
pop
sbb
sub
jp
jle
loop
pop
test
fwait
lock
dec
add
call
push
adc
sub
dec
jmp
dec
push
idivl
jge
push
std
mov
mov
out
mov
nop
push
sub
xor
cmp
push
in
insl
fcoms
cmp
cld
mov
sub
test
ja
sbb
jo
inc
shl
ds
test
aas
mov
cld
or
cld
pop
ret
inc
add
mov
pusha
or
jb
iret
dec
or
pusha
cwtl
stos
repz
pop
popa
sbb
jl
add
pop
cmp
xor
aaa
jg
rorl
xchg
int3
mov
cmpsl
pop
ficomps
xchg
and
push
fdivr
arpl
mov
or
addr16
inc
stos
les
sub
out
inc
stos
sub
sub
jne
imul
mov
cmp
xchg
loop
cltd
les
cmpsb
sbb
jle
sti
outsl
adc
inc
pusha
rcll
mov
insb
ret
test
call
xor
test
cwtl
aaa
das
add
xchg
pop
or
dec
rclb
add
dec
push
cltd
in
pusha
sub
insb
clc
and
popa
sbb
loopne
mov
mov
push
dec
jbe
and
mov
mov
inc
int
outsb
scas
pop
adc
push
cmpsb
mov
inc
les
dec
popa
mov
roll
jmp
pop
jg
test
mov
imul
fldenv
pop
scas
sub
xor
jg
pop
add
inc
dec
xor
fiadds
xchg
mov
shlb
adc
vpsadbw
jle
loopne
jo
push
inc
insb
bound
add
idiv
add
adc
out
and
mov
xor
adc
push
bound
cmp
not
adc
mov
adc
jno
xor
dec
movsb
xor
cmp
fists
icebp
int
sbb
sub
xor
cltd
inc
push
insl
lcall
inc
xchg
xor
scas
ja
xor
pop
mov
inc
pop
adc
out
fwait
cltd
in
dec
mov
mov
adc
popf
inc
dec
adc
outsb
xor
popa
cmp
jae
jnp
test
stos
sub
mov
orl
mov
stos
fwait
add
sbb
pop
iret
gs
cltd
dec
mov
mov
sbb
lods
push
insb
mov
lods
adc
stos
push
stos
dec
mov
jns
mov
or
jle
mov
arpl
xchg
loopne
out
pop
jne
imul
test
sbb
adc
addr16
cmp
pushf
outsb
xor
xor
add
movsb
jnp
test
ljmp
and
arpl
cmpsl
imul
adc
inc
lock
inc
pop
dec
dec
adc
or
mov
dec
cmp
mov
dec
mov
add
mov
pop
push
ljmp
ret
imul
sub
xorb
leave
jmp
scas
lods
cmc
mov
push
or
cmp
cmp
or
stos
outsl
insb
pop
add
mov
push
mov
scas
jge
or
mov
outsl
das
xor
sahf
sub
xor
jne
iret
sbb
gs
cmp
fsts
mov
inc
das
das
lods
int
sub
loop
mov
dec
or
jecxz
inc
cmpsb
xor
inc
aam
insl
loope
sbb
rcr
ret
test
mov
pop
add
xchg
mov
in
hlt
out
push
int
leave
pop
adcl
push
pop
rorl
xchg
hlt
bound
push
int3
pop
jae
insl
and
pop
mov
loopne
stc
sbb
jae
out
mov
adc
sub
popa
cmpl
sub
int3
jl
jmp
sbb
xchg
mov
dec
in
xchg
pop
adc
push
push
xor
cmp
xor
sbb
shrb
push
mov
cltd
loope
dec
xor
jg
test
sahf
push
in
or
xor
sarb
lret
imul
xor
mov
lods
fs
push
repnz
sub
cltd
push
dec
movsb
test
pop
pop
adc
pop
pop
sub
cmpsb
push
fidivrs
push
and
sahf
push
loope
push
js
jns
push
xor
in
pop
xchg
xor
mov
push
sub
subb
xchg
xchg
add
xchg
inc
mov
sti
repnz
push
outsl
mov
or
mov
push
sbb
mov
sti
jo
inc
inc
popf
fwait
push
inc
sub
or
dec
mov
or
lea
int3
pop
or
pop
cmc
cmp
loop
inc
inc
push
addb
outsb
inc
cmp
mov
xor
mov
cmpsl
adc
les
mov
pop
loopne
cmp
mov
pop
mov
daa
push
sub
pop
pop
jp
outsb
pop
je
push
mov
add
loope
mov
aam
add
int3
mov
scas
xor
in
and
je
push
fstps
int
sub
rorb
insb
mov
cltd
aas
mov
clc
mov
enter
aas
mov
push
mov
popa
push
cmc
jp
popa
loop
dec
inc
push
pushf
dec
ret
clc
outsb
dec
enter
cmp
mov
in
push
shrl
pop
mov
ljmp
cmpsl
sub
aaa
dec
aas
push
cli
cltd
dec
mov
out
mov
pop
inc
mov
or
sub
and
je
push
mov
and
push
pop
sub
dec
bound
xchg
jne
into
sti
cmp
leave
mov
mov
pop
inc
push
dec
mov
clc
xor
push
frstor
push
sub
xor
mov
popa
push
cmc
cltd
dec
popa
loop
dec
inc
mov
pop
push
pop
add
mov
scas
push
outsl
or
mov
sbb
mov
call
xor
xchg
in
add
inc
dec
mov
shrb
adc
ss
adc
xchg
pop
ja
pop
add
sub
fsubrl
dec
sarl
sub
or
lret
push
cmp
and
inc
mov
xlat
pop
fs
pushl
inc
xor
sbb
mov
adc
push
pop
cmp
scas
push
outsl
aaa
cmp
cwtl
xchg
loopne
mov
lods
dec
or
cmp
dec
mov
dec
in
int
push
lods
inc
dec
je
ljmp
adc
mov
cs
xchg
add
dec
cltd
mov
jno
outsl
xchg
in
cmp
and
jae
push
xchg
lahf
sub
stos
sub
or
push
inc
jne
mov
push
push
xor
dec
inc
adc
xor
insl
mov
ret
pusha
pop
mov
mov
add
inc
mov
push
sub
arpl
inc
adcl
pop
andb
stc
addr16
inc
push
adc
ret
mov
enter
cmp
push
push
mov
subl
and
mov
xor
arpl
push
xchg
test
pusha
test
pop
jp
popf
jmp
jne
int3
jae
sub
adc
xor
inc
pop
xor
dec
scas
std
cmp
push
mov
adc
cmc
pop
xor
push
xor
or
add
xor
or
shll
or
fsubs
adc
xchg
fadds
dec
xchg
adc
out
inc
cmp
pop
aas
in
sub
jnp
leave
cwtl
inc
sahf
adc
push
push
xlat
outsb
je
inc
mov
mov
popa
push
repz
rcrl
inc
pop
inc
xor
adc
fisttpll
outsb
sub
ret
imul
sub
pop
outsl
call
dec
aaa
sbb
sub
adc
call
test
insb
or
mov
mov
loope
adc
icebp
xor
xor
push
cltd
xor
mov
inc
xor
pop
outsl
or
jnp
outsb
inc
sbb
loopne
or
mov
ficomps
xor
dec
ret
call
js
outsb
fldl
cs
mov
mov
aad
out
pop
inc
sub
xor
pop
js
out
sub
mov
and
arpl
jg
pop
jge
push
scas
mov
xchg
mov
pusha
pop
push
add
mov
insb
and
ret
movsb
push
loope
sarl
sub
aas
push
jnp
push
xchg
nop
dec
push
mov
shrb
push
movsl
xchg
pop
jle
popa
insl
cmc
arpl
loop
aaa
inc
push
gs
ret
fildll
enter
cmp
cmpsl
push
outsl
cmp
rclb
sub
mov
outsl
sbb
xchg
iret
fmul
mov
sbb
jle
js
scas
fcoms
mov
jp
test
inc
inc
insb
push
dec
jae
sub
adcl
jp
out
sub
jmp
popa
pop
cmp
fistl
outsl
in
cld
scas
push
inc
and
shrb
mov
icebp
imul
jae
push
sahf
daa
mov
jmp
out
inc
daa
pusha
push
dec
jae
sub
mov
mov
js
je
popa
mov
sub
popa
or
cmp
outsb
cmp
jecxz
ret
sbb
enter
cmp
mov
aam
pop
cmpsb
lcall
inc
xor
shrb
sub
fsubl
call
bound
hlt
xor
inc
push
cmp
out
cmp
imul
dec
pop
inc
sar
pop
push
cmpsl
into
rcrb
pop
xchg
mov
push
sub
inc
imul
andb
adc
push
dec
stc
cmp
inc
mov
push
scas
jecxz
xchg
add
xor
in
test
dec
out
stos
mov
ror
dec
mov
aad
and
cmp
movsb
in
in
push
mov
dec
out
cmpsl
lea
stos
mov
sub
add
jp
or
je
mov
and
jnp
dec
sbb
in
dec
cmp
xchg
add
cmp
iret
shrb
dec
pop
xor
xor
stos
subb
mov
pop
jno
sbb
dec
fldcw
jg
fnstsw
mov
jb
add
stos
dec
frstor
jne
xor
jns
hlt
pushf
xchg
inc
pop
shlb
sbb
adc
cmp
pop
pop
inc
jl
mulb
daa
imul
jnp
mov
pop
iret
in
push
or
jl
clc
mov
xchg
imul
push
add
insb
dec
outsl
push
lret
rorb
dec
adc
movsb
rclb
dec
add
outsl
inc
scas
ret
outsb
pop
jae
addb
inc
loope
jae
cmp
mov
push
dec
decb
xchg
imul
inc
cwtl
shrl
in
cmp
mov
mov
clc
loopew
subl
aas
out
lea
in
add
inc
cld
cmovno
cmpsb
mov
das
stos
sbb
sbb
sub
xchg
xor
repz
inc
cmp
ret
add
scas
rorb
xchg
pmuludq
add
daa
push
into
out
cld
cld
sbb
jo
in
imul
or
lods
fisttpll
setp
pop
adc
repz
add
daa
fldcw
pop
sbb
cmp
sub
lahf
in
mov
ja
and
dec
loop
mov
sub
sar
jae
hlt
ja
les
jle
jmp
cmp
stos
mov
ret
daa
sub
roll
cmp
push
push
leave
fs
loopne
cmp
cmp
in
dec
or
jl
or
adc
lcall
pop
jne
cmp
push
mov
jns
cmc
aas
mov
mov
scas
int3
jb
repnz
dec
stos
push
mov
pop
loop
lcall
cmpsb
adc
push
pop
mov
cmp
shll
mov
mov
aas
mov
andb
int
push
mov
xor
in
or
xchg
pushf
xchg
inc
jns
lcall
xor
sbb
leave
inc
sti
inc
pop
fsubr
rep
xor
cmp
adc
jae
and
in
add
dec
movl
push
jl
adc
icebp
pop
addr16
outsl
insl
mov
outsl
mov
push
jb
mov
push
pop
dec
jp
mov
call
xchg
movsb
movsl
jno
test
jmp
mov
push
in
xor
cmc
or
bound
inc
fmull
and
sbb
cmp
arpl
sti
test
fcmovne
jo
sub
inc
lds
lahf
push
ljmp
mov
sub
inc
inc
mov
sub
push
inc
loopne
add
fdivr
pop
lods
mov
mull
pushf
mov
mov
xor
aam
sub
dec
es
push
jle
mov
sbbl
dec
mov
mov
inc
adc
add
bound
std
push
bound
sbb
mov
lods
cwtl
rep
stos
xchg
sbb
cmc
ficomps
int3
xor
mov
adc
fxch
mov
notl
fsts
in
mov
ja
dec
xor
addr16
fdivr
addb
stos
shll
pop
lods
enter
ret
fnstcw
push
dec
push
pop
test
mov
adc
pop
mov
in
test
scas
arpl
lret
lret
sub
push
insb
cmp
push
std
mov
mov
pop
pop
enter
in
mov
inc
push
mov
bound
pop
cmp
repnz
dec
pusha
and
jl
leave
sub
mov
push
and
test
out
inc
jo
pop
dec
outsb
pusha
icebp
in
movsb
in
sub
sub
dec
cmp
mov
mov
mov
inc
sbb
in
in
mov
outsb
movsb
adc
jle
stos
xor
xchg
aam
movsb
arpl
xor
imul
dec
repnz
out
jecxz
fdivl
sti
aaa
jae
push
pusha
inc
inc
ret
loope
inc
xor
dec
dec
pop
andb
mov
dec
sti
arpl
shrl
dec
divl
push
lret
dec
sti
insb
int3
dec
out
lahf
into
les
sub
insl
xor
mov
arpl
sahf
jmp
jnp
outsl
sbbb
push
mov
jne
adc
cld
insl
push
dec
dec
repnz
test
scas
movsb
add
and
pop
inc
dec
inc
scas
sub
xor
sub
pop
push
xor
add
loope
adc
dec
inc
push
repz
sti
dec
pop
imul
out
mov
inc
imul
out
pop
push
adc
pop
mov
mov
mov
adc
push
sub
dec
stos
leave
adc
inc
xchg
pop
mov
mov
insl
add
mov
fwait
sbb
sub
mov
mov
inc
and
movsb
mov
or
and
mov
ljmp
cmp
mov
sub
mov
xchg
push
sbb
pop
push
jmp
jg
jo
dec
inc
test
xchg
mov
jnp
add
mov
addr16
mov
cld
imul
cmp
outsl
push
in
dec
adc
mov
adc
arpl
sarb
enter
sub
adc
mov
inc
ficomps
inc
jle
jle
push
mov
push
add
insb
pop
adc
sub
in
pop
xchg
lods
adc
ret
xor
xor
pop
divps
jns
inc
into
push
add
mov
fs
push
hlt
and
lret
in
call
push
fsubp
mov
adc
cld
inc
xor
sub
xor
sub
jg
jae
push
orl
push
icebp
adc
push
mov
test
cmp
jmp
push
mov
daa
mov
inc
mov
cmp
sbb
xor
cmp
pop
sub
mov
jno
xor
push
mov
or
nop
repnz
call
push
sarl
or
jmp
pop
mov
jmp
fisttpll
fbstp
insb
test
enter
mov
jns
test
xor
mov
fidivrl
jg
add
cltd
pop
insl
in
mov
mov
lret
cmpsb
cli
xchg
sub
daa
arpl
xor
js
adc
mov
sub
or
sbb
push
leave
lea
xor
mov
sti
jl
lret
mov
xchg
cmpsb
adc
mov
mov
das
mov
xchg
leave
and
dec
cltd
insl
mov
cmpsl
mov
cmc
gs
adcb
dec
xchg
jle
mov
dec
mov
xchg
inc
adc
inc
clts
cmc
mov
adc
pop
stc
sub
gs
jnp
out
xchg
clc
rol
vandnps
addr16
pop
scas
stos
xor
mov
adc
cmp
push
sub
mov
or
or
push
ljmp
fldl
sbb
fwait
inc
adcb
daa
pop
iret
sub
push
inc
out
cmp
leave
push
lock
aas
mov
out
xor
movsl
xchg
xchg
fs
jle
add
cmp
or
pop
xchg
lcall
add
inc
push
cmp
push
arpl
mov
fucomi
mov
iret
mov
sbb
je
aad
test
mov
jge
mov
xchg
and
cs
cmp
inc
push
cmp
pusha
or
xchg
aaa
pop
dec
mov
inc
adc
xor
and
out
lret
aaa
lea
jo
sub
fiaddl
cmp
add
push
mov
fdiv
dec
adc
nop
adc
push
cmp
push
add
mov
fnsave
stos
xchg
popf
dec
nop
in
test
cmp
adc
and
adc
rcll
mov
cmp
ss
jp
test
pusha
enter
outsl
inc
stos
fs
loopne,pt
aaa
xchg
ss
pop
andl
and
jae
shrb
lret
push
es
enter
adc
jae
insl
pop
or
cmpsl
dec
in
aam
fcomps
cmp
or
daa
add
sub
or
add
cmp
xchg
push
or
xchg
cltd
add
clc
xor
ss
icebp
cltd
imul
sub
mov
ret
cwtl
sti
or
pop
jae
mov
into
pop
leave
nop
jo
leave
outsb
daa
fisttps
andl
sub
fiadds
dec
pop
push
movsl
xchg
jecxz
cmp
out
fdivrl
push
lret
scas
dec
sub
add
inc
cmp
icebp
es
push
aam
lods
sub
outsb
loope
popf
aaa
in
clc
mov
dec
push
test
xchg
sub
push
cmp
dec
cmpb
sub
mov
push
mov
dec
imul
jae
insl
add
cmpsl
mov
jnp
andb
jle
sbb
cmp
mov
fimuls
jo
in
sbb
cs
add
mov
pop
in
adc
jbe
lds
insb
into
sahf
mov
jl
xchg
push
dec
imul
dec
movsb
pop
or
js
xchg
subl
adc
insb
pop
movb
mov
push
sub
daa
sub
mov
mov
les
aas
daa
add
lret
cmp
sub
push
test
pop
xchg
aaa
std
aaa
clc
jecxz
and
fcmovnu
jg
hlt
les
xor
mov
inc
lds
ss
loopne
fwait
adc
mov
in
push
dec
sub
mov
imul
rcrl
xchg
leave
dec
stc
out
imul
jne
jmp
outsb
call
aad
lods
mov
imul
pop
xor
cmp
lret
jb
rorl
or
push
int3
nop
fsubs
add
and
popa
xlat
pop
dec
jg
aas
mov
nop
mov
ret
adc
and
xchg
inc
out
jg
fdivs
insb
or
repz
inc
mov
and
sbb
movsb
push
inc
cmpl
pop
sahf
leave
scas
negl
pop
mov
dec
pop
mov
testb
minps
sub
dec
outsl
enter
cmp
jae
and
jae
mov
sbb
ret
mov
popa
movsb
sbbl
push
push
sbb
mov
xchg
mov
cmp
jo
xlat
dec
or
int3
movsl
cmp
aad
sub
idivb
add
mov
loope
or
inc
or
or
in
shrl
jmp
pop
leave
adc
xchg
mov
clc
hlt
adc
or
pcmpgtb
ds
sbb
sbb
mov
add
popa
inc
mov
popa
popl
xor
add
repz
dec
pop
outsl
mov
dec
dec
push
arpl
mov
xor
outsl
lret
and
mov
fbld
adc
aad
aaa
popa
ret
pop
xor
cmp
mov
mov
sub
adc
out
mov
bound
out
pop
pop
push
inc
cmpsb
pop
or
inc
and
inc
xchg
mov
dec
push
mov
mov
jb
xor
sbb
mov
adc
adc
dec
scas
xchg
mov
cltd
adc
sub
pop
jle
mov
inc
fadds
xchg
lahf
outsl
push
xor
dec
xchg
or
mov
ficoml
mov
test
jmp
sti
das
mov
push
mov
clc
mov
mov
jae
sahf
mov
pop
call
inc
lods
inc
movnti
aaa
fs
ss
xchg
xor
mov
mov
cltd
dec
mov
and
cmp
out
lret
adc
call
imul
insl
jg
dec
or
jne
loope
cs
sbb
cmp
inc
pop
imul
mov
sarl
cld
mov
outsb
pop
pop
push
fisttpll
push
enter
out
out
push
fwait
test
sub
test
mov
js
insl
jbe
test
outsl
add
xor
aad
xchg
pop
add
pop
lret
fs
xor
pop
pusha
repz
lds
xchg
nop
cli
or
and
sub
and
jmp
arpl
pop
dec
aas
pop
mov
dec
push
adc
push
mov
cltd
xor
js
xchg
or
inc
or
or
adc
scas
sbb
out
mov
into
out
addr16
pop
fisubs
jns
gs
cmpsb
inc
mov
arpl
jbe
aam
mov
push
nop
sbb
subb
inc
call
lret
adc
sub
test
sbb
xor
mov
js
mov
xor
jne
sbb
xchg
dec
jge
pop
aaa
jmp
jl
jge
push
movsb
frstor
inc
subl
cmpb
dec
sbb
out
scas
rep
mov
popa
pop
dec
fwait
sub
adc
loop
jbe
pop
mov
dec
aaa
lock
add
pop
jne
lcall
leave
cmpsl
pusha
pop
addb
pop
pusha
mov
jmp
loopne
sub
fisubl
sub
push
pop
insb
mov
pop
add
xor
imul
stos
sbb
xor
mov
mov
in
fwait
pop
sbb
fldt
sbb
inc
aaa
movsb
or
popa
into
insl
mov
fdivs
scas
sub
sbb
mov
mov
das
sbb
std
sarb
xchg
arpl
xchg
stc
popf
inc
inc
xor
push
cmp
xor
daa
adc
out
push
xor
les
dec
popa
inc
or
fistpll
pop
push
mov
movsb
jg
push
fcoms
jo
add
iret
insb
aas
mov
cltd
enterw
xchg
pusha
add
cmp
sti
sub
les
xor
jle
cltd
lahf
mov
dec
mov
xor
aas
pop
insb
popa
sti
popa
shlb
add
inc
inc
imul
rclb
xor
scas
dec
and
lds
js
adc
xor
scas
imul
xor
sar
jmp
mov
jno
imul
push
mov
out
mov
push
mov
loope
inc
and
mov
inc
cmp
addr16
es
and
add
outsl
aad
push
adc
xor
pop
mov
mov
xchg
mov
test
es
cmp
jg
pop
xchg
pop
sub
lret
test
jnp
subl
bound
mov
sub
inc
lea
js
sub
pop
aas
push
or
dec
mov
pop
mov
popa
pop
ja
sbb
mov
and
sub
outsl
mov
pushf
ret
pusha
adc
pop
out
lahf
adc
push
test
dec
enter
cltd
push
add
sti
adc
out
jecxz
mov
add
scas
inc
imul
mov
out
daa
jne
add
or
or
xor
or
les
pop
popf
es
je
jl
jne
and
pop
mov
mov
xchg
xor
call
jns
mov
arpl
nop
inc
and
xor
sub
ja
dec
mov
stos
insb
enter
pusha
popa
add
cmpl
pop
sub
ret
and
mov
lret
mov
test
push
xchg
jo
push
int
ja
nop
addl
jmp
mov
xchg
data16
and
mov
xchg
cmc
adc
cwtl
jbe
insb
lea
stos
sbb
fisubs
dec
movsl
nop
push
mov
popa
mov
cmp
addr16
pop
test
sub
mov
xchg
nop
fs
aaa
and
popa
sbb
hlt
sahf
adc
test
and
pop
sub
loop
aaa
imul
cmp
clc
shlb
or
mov
cmc
fsubrp
cmpsb
in
jmp
icebp
rcrl
shl
lea
sbb
and
mov
popa
or
incl
jae
bound
jl
nop
je
fsubrs
test
dec
pop
test
inc
mov
jecxz
dec
ret
lds
iret
lods
sbb
cmp
mov
or
push
filds
iret
insb
lret
push
or
mov
inc
dec
arpl
jmp
fcoms
push
and
iret
push
dec
testl
sub
and
jmp
and
scas
into
push
pop
pushl
loop
and
lahf
sbb
pop
mov
push
push
dec
clc
adc
loope
pop
sbb
stc
fcomip
scas
cwtl
ret
ret
sahf
sub
test
mov
inc
loopne
lea
dec
mov
and
and
mov
or
add
adc
or
pop
mov
movsb
aam
in
fdivrl
pop
imul
and
sub
rcrb
or
and
les
repz
sub
subl
xor
xchg
stc
addr16
add
or
and
pop
inc
mov
push
cmp
lcall
push
shrb
call
push
test
jno
icebp
scas
call
or
add
cmp
add
mov
popa
pushf
xor
pop
pop
sbb
jmp
jo
xchg
sub
push
adc
dec
jne
dec
scas
jns
rep
sti
fwait
add
mov
mov
adc
incl
pop
adc
sbb
rclb
lcall
and
arpl
stos
in
loopne
gs
jnp
lods
pop
fistl
mov
cmp
cs
pop
ret
pop
jno
imul
cli
jg
add
sub
lea
adc
pop
test
sti
insb
jl
jae
ret
inc
fwait
inc
adc
cmp
inc
daa
mov
and
enter
mov
pop
out
cld
and
std
dec
and
adc
fs
or
mov
cmp
pop
aas
cmp
inc
cmp
xchg
nop
pop
out
int3
and
pop
and
jge
in
adc
mov
jmp
adc
inc
test
pop
das
pushf
xor
call
cmp
imul
jne
xor
lea
sbb
mov
mov
sub
inc
cmpsb
mov
cli
movsl
out
daa
sbb
or
and
testb
in
lock
sbb
mov
cs
jl
push
add
stos
in
mov
mov
scas
orb
inc
push
push
jae
inc
adc
cltd
je
outsb
jbe
pop
push
and
pusha
mov
or
outsb
mov
mov
push
inc
movsb
inc
mov
inc
les
adc
aam
int3
jbe
mov
cmp
ds
cmp
pop
iret
out
sbb
fmulp
xor
test
dec
scas
negb
cmp
or
idivl
and
out
adc
fildll
mov
add
jl
in
and
add
lea
pop
push
fs
call
jge
pop
cmpsl
insl
jl
xchg
add
xchg
dec
mov
pop
xchg
xor
inc
inc
xor
mov
xor
gs
addr16
mov
in
add
push
inc
movsb
mov
push
mov
sbb
addr16
mov
and
mov
out
hlt
mov
sub
pop
js
lods
mov
movl
jg
dec
aaa
outsl
call
aas
dec
mov
mov
push
xor
xchg
xor
popa
in
lock
mov
cmp
dec
jg
and
int3
das
and
dec
das
inc
jo
push
adc
js
movsl
icebp
insb
adc
mov
into
in
jle
sbb
pusha
push
insb
xor
pop
sub
pop
ret
lea
or
nop
insb
loope
add
pop
dec
cwtl
xor
or
imul
jecxz
pop
ja
add
in
ds
jae
and
or
xchg
and
push
adc
inc
and
call
aam
push
test
ja
lret
mov
xchg
xor
int3
mov
rorl
xor
or
and
sub
dec
stos
mov
adc
pop
imul
outsl
add
jl
into
and
ds
jae
pop
outsl
sbb
inc
adc
mov
jg
pop
and
xlat
cmpsl
sub
pop
push
xchg
dec
push
or
push
and
adc
pop
pop
outsb
or
clts
cmp
lods
lods
add
lret
popa
mov
add
fs
call
inc
clc
mov
imul
xchg
arpl
je
aad
mov
aaa
add
and
mov
pop
inc
push
dec
jmp
fidivrs
xchg
pop
cmp
add
mov
aaa
inc
sahf
mov
adc
cmp
mov
jno
lret
pop
sub
gs
imul
test
inc
pop
testb
shll
ficomps
shrb
jmp
cwtl
inc
mov
cmpsl
add
sub
insb
insb
mov
arpl
pusha
test
or
lret
and
xchg
jno
pusha
pusha
sub
movsb
stos
test
inc
push
outsl
mov
add
fstl
xchg
add
push
sub
and
jno
sti
push
aaa
and
push
cli
mov
sti
inc
idiv
push
add
add
shr
xor
shr
mov
cs
push
test
cmp
aad
out
or
punpckhwd
mov
stc
popf
les
lcall
fdivl
xchg
dec
daa
jne
jnp
subl
loope
and
mov
xor
or
or
jns
mov
mov
xchg
xchg
dec
ret
add
test
scas
jl
push
cmp
xchg
outsl
lcall
addr16
jg
adc
xchg
cmpsb
in
pop
add
loopne
addl
addb
loopne
xor
jno
std
lods
pop
fistpll
pushf
shl
mov
cmp
mov
lahf
adc
mov
jle
xlat
mov
ja
bound
je
sbb
popf
sub
push
pop
mov
nop
loope
xor
data16
daa
shr
cmc
and
pop
stos
cmp
cmp
and
mov
imul
adc
outsl
rorb
mov
popa
mov
aam
adc
jae
mov
xor
loope
adc
jecxz
leave
sub
fcoml
adc
xchg
push
mov
loope
or
jge
or
fists
in
cmpsl
dec
push
test
xor
fadds
call
in
sarb
shll
aaa
jle
or
nop
lahf
adc
inc
xor
aaa
in
mov
inc
mov
add
adc
jnp
cmp
cmp
test
xor
fdivrp
push
mov
sub
adc
fldcw
xor
inc
std
push
sub
test
xor
add
mov
adc
icebp
push
xchg
adc
daa
addr16
xor
lock
push
adc
mov
jle
lock
push
movsb
sti
mov
sbb
sahf
push
xchg
and
xor
and
mov
xchg
outsl
lret
pusha
adc
test
test
into
push
xchg
mov
inc
popf
js
jecxz
xchg
dec
scas
mov
hlt
call
cmp
test
in
mov
jg
es
cwtl
lret
stos
syscall
push
adc
cld
push
and
repnz
sbb
cmpsl
adc
mov
dec
inc
sub
scas
inc
sub
xor
jge
movsl
call
js
adc
mov
push
or
test
mov
ja
inc
jl
scas
loopne
jnp
sub
adc
mov
ret
push
jp
outsb
push
bound
inc
sahf
jl
aas
adc
movsl
inc
loopne
mov
scas
js
dec
cmp
lods
sti
jno
push
punpcklbw
and
aaa
jb
mov
inc
xchg
push
inc
cmpsl
popa
jo
and
xor
xchg
sbb
mull
jae
cmp
cmp
sbb
xlat
mov
jge
xchg
stos
jp
insb
sub
mov
jg
or
iret
cmp
add
lods
lods
fbstp
fdivs
or
movsb
clc
pop
fisttpll
adc
scas
mov
push
stos
and
push
and
dec
dec
test
and
xchg
arpl
push
in
jbe
jg
mov
jnp
loopne
out
pop
stc
test
repz
jl
mov
jae
inc
sub
jge
sub
fs
inc
dec
sub
adc
mov
add
punpckhwd
ds
pop
aaa
dec
xor
popa
sbbb
outsl
pop
lret
call
lret
add
arpl
cmp
jmp
and
xchg
mov
out
xor
dec
ljmp
out
out
or
pusha
leave
and
pop
imul
jp
loope
sub
jmp
std
addr16
jo
push
push
xor
add
js
xchg
call
sub
and
mov
dec
outsb
fs
add
imull
dec
and
cmpb
test
sbb
outsb
sahf
dec
lods
sbb
je
and
xchg
aas
cmpl
int
mov
rolb
lcall
adc
call
cmp
lods
es
add
pop
jl
xchg
and
popf
rol
mov
and
in
and
pop
jns
mov
std
cmpsb
das
lret
pusha
fcomps
xlat
das
cmp
aam
cmc
and
repz
in
cmp
push
dec
and
mov
add
mov
int
dec
xor
scas
sbb
notb
cmpb
pop
test
mov
lods
jno
jnp
lods
lcall
jno
mov
loop
cmp
inc
push
test
pop
or
or
mov
cmp
mov
dec
loopne
mov
pop
call
jp
mov
mov
mov
add
jl
and
mov
out
jnp
scas
inc
pop
and
ret
js
sbb
xchg
xor
mov
inc
dec
lods
insl
xor
addb
add
and
cmp
sub
mov
adc
pop
lahf
mov
jle
addl
jmp
leave
fadds
shrw
sub
mov
shll
mov
jle
pop
push
xchg
lds
or
inc
push
inc
push
xchg
scas
repnz
stc
pop
or
push
xchg
and
sti
test
jge
push
jge
jne
call
fstpl
pushf
mov
daa
adc
mov
pop
jb
sti
daa
sub
fistpl
mov
inc
into
sub
addr16
jo
push
je
lret
pop
push
mov
mov
dec
ret
pop
pop
cmp
call
stos
mov
lds
scas
mov
in
mov
pop
in
outsb
push
pop
dec
xchg
call
xchg
pop
jge
inc
jns
imul
ret
daa
sbb
test
sub
mov
pop
lret
mov
push
cmpsb
xor
call
in
jmp
es
push
cmpsb
jmp
in
sbb
mov
in
outsb
andb
xchg
xor
lcall
inc
push
test
xchg
pop
or
mov
push
push
daa
mulb
lock
cli
lods
pop
mov
dec
sub
in
sbb
mov
out
xchg
jne
push
ret
lock
imul
mov
pop
enter
insl
and
in
jns
push
outsb
jl
jns
popf
lods
push
jno
jp
in
or
inc
mov
imul
sbb
pop
push
inc
mov
mov
cld
xchg
push
sti
adc
inc
dec
test
jmp
daa
push
add
shlb
pop
mov
jb
std
sbb
pop
mov
mov
lahf
mov
inc
sbb
push
test
int
mov
push
jp
add
xor
mov
push
out
push
nop
stos
in
outsb
pop
pop
sub
jge
inc
data16
mov
or
inc
push
cwtl
and
sbb
jbe
in
push
in
sbb
and
cmp
into
arpl
les
mov
pop
xor
arpl
mov
mov
pop
out
xchg
and
loopne
fucomp
rorl
pop
out
fldenv
cmpsb
xor
mov
pop
out
icebp
and
shr
pop
adcl
cmpsb
rcrb
and
xchg
xlat
pop
out
xchg
cmpsb
lcall
jb
xchg
sti
pop
out
lret
and
xchg
sti
and
xchg
mov
in
jecxz
cmpsb
negb
daa
push
xchg
mov
incb
xchg
push
scas
and
sti
xchg
lods
adc
jae
pop
and
pop
pop
out
jne
lock
mov
mov
mov
stos
xchg
dec
inc
xchg
adc
movsl
mov
xchg
mov
movsb
jecxz
adc
aad
clc
sbb
cmp
add
iret
jnp
into
aas
dec
jne
pop
dec
push
mov
xor
add
adc
jbe
test
dec
or
mov
push
bound
je
mov
sub
push
dec
cmc
sub
lods
mov
sahf
mov
pop
add
jb
push
arpl
pop
cs
icebp
dec
roll
dec
insb
les
cmp
xchg
imul
pop
outsb
mov
dec
xrelease
das
xchg
pop
sbb
adc
xrelease
xlat
vmovaps
aam
sub
fs
lds
mov
popa
aas
in
sub
mov
lret
std
ficompl
push
jge
inc
pop
or
pushf
push
sub
mov
or
mov
outsb
lret
lock
cli
mov
sbbl
xchg
fiadds
dec
mov
adc
lods
sbb
in
mulb
mov
jne
mov
xor
adc
adc
imul
mov
es
jnp
notb
lds
add
adc
outsb
adc
int
sub
xor
add
xor
adc
jmp
and
loopne
mov
clc
imul
and
pop
mov
push
sti
sbb
xchg
xlat
inc
pusha
stos
sub
pop
lds
das
scas
pop
mov
dec
pcmpeqb
add
pop
je
ds
je
adc
pop
je
and
je
and
je
ds
jnp
ret
and
mov
xchg
scas
jmp
sub
xor
lahf
sub
fcmovbe
inc
decb
and
cmp
hlt
xor
cli
popa
inc
dec
je
xchg
xchg
cmp
xchg
mov
dec
iret
adc
pop
ds
mov
inc
out
cmp
push
mov
gs
lret
fistps
cmp
aam
xor
jbe
arpl
int3
mov
dec
sbb
cmp
rcll
insl
mov
jmp
push
int3
push
inc
xor
lods
mov
jbe
insl
jl
jo
daa
sbb
cmp
cmp
arpl
jge
hlt
adc
popa
push
inc
xlat
sbb
orl
mov
push
out
jecxz
adc
or
push
and
inc
fdiv
jae
mov
dec
lods
inc
pop
sub
repz
dec
sbb
xor
and
gs
inc
mov
xor
push
out
inc
jge
mov
addr16
lods
pushf
cmp
sbb
outsb
stos
pop
repz
adc
add
add
jecxz
sub
adc
cmpsb
pop
in
sub
repnz
rcrb
cmp
stos
movsl
jo
sbb
sub
andb
data16
loopne
mov
outsb
and
jae
addr16
push
mov
mov
pop
xchg
ffree
push
adc
test
pop
jp
mov
movsb
pop
pop
mov
int
sub
xchg
push
mov
fisttpll
push
and
and
data16
pop
fs
test
add
in
dec
add
pop
xor
dec
je
lahf
add
sub
sub
sub
mov
dec
daa
sbb
insl
mov
jae
loopne
lret
test
aad
imul
mov
mov
sti
lock
pop
imul
mov
jne
pop
jg
sbb
add
in
int3
push
lds
jg
mov
push
mov
gs
in
lock
push
push
rcrb
inc
arpl
pop
lods
mov
fidivs
dec
shlb
sti
aad
xor
outsl
jbe
fldenv
mov
xchg
mov
mov
and
icebp
push
lods
test
pop
xchg
in
stos
das
popa
xor
add
push
or
inc
sti
loope
xor
mov
ja
dec
in
insl
xchg
int3
or
or
inc
cmp
scas
mov
bound
dec
add
inc
mov
adc
xchg
insl
or
out
and
jmp
loope
repz
fisubl
and
sti
mov
mov
push
jno
add
test
mov
pop
aam
mov
pusha
or
scas
call
sbb
pop
add
int
push
cmp
xchg
add
js
xchg
lock
syscall
test
mov
adc
lahf
insl
sbb
aaa
jmp
dec
aaa
xlat
inc
in
mov
jl
fwait
add
sti
daa
dec
fbld
into
push
pop
loopne
mov
mov
mov
adc
cmpsl
jne
jnp
pop
push
dec
xor
cld
js
xchg
nop
xor
dec
push
mov
adc
pop
out
xor
sub
and
shll
jnp
xchg
or
popa
cmp
loopne
mov
xor
add
jae
dec
dec
cmpsl
cmpsl
xchg
cmp
or
stos
lds
outsl
call
mov
aam
and
mov
sbb
inc
jo
movsl
jg
xchg
and
or
adc
inc
pop
bound
inc
mov
add
adc
loop
movsl
ja
inc
add
iret
insl
call
add
movsb
mov
jnp
xchg
add
sti
popa
cmp
loopne
mov
sub
sub
xor
pop
jg
inc
and
ret
cmpsl
cmc
cmp
adc
enter
and
lahf
cmpsl
movsl
cmp
sti
sbb
pop
pop
bound
mov
loopne
pop
adc
outsl
cmpsl
insl
cmp
ret
lret
lods
clc
dec
add
fcmovu
roll
mov
add
jnp
xchg
les
popa
clc
sbb
cmp
aad
pop
add
xchg
or
popa
and
loop
gs
aad
pop
mov
add
dec
andl
push
dec
sbb
nop
jp
mov
clc
pusha
jb
arpl
push
dec
xor
cld
js
xchg
cwtl
nop
mov
adc
lahf
insl
sbb
jecxz
les
and
out
nop
sub
pop
mov
add
jg
icebp
and
sub
xchg
push
inc
mov
lods
mov
jecxz
rorl
pop
imull
arpl
cmpsb
push
dec
adc
cwtl
jl
mull
mov
adc
fldt
mov
add
dec
inc
lods
push
jnp
xchg
xor
ret
popa
in
loopne
mov
pop
mov
jl
fwait
add
jmp
and
pop
cmpsl
xor
push
pusha
and
mov
mov
pop
loop
pop
shrd
imul
iret
pop
mov
pop
lods
xorb
repnz
dec
pop
push
fs
mov
rcrb
mov
add
push
mov
jl
xchg
add
jnp
xchg
cmp
popa
fdivr
loopne
mov
cmp
outsb
inc
mov
add
movsl
and
shll
push
dec
loopne
mov
sub
dec
mov
sarb
movq
pop
call
pop
add
fldt
mov
add
jl
sub
inc
xor
xchg
sub
out
popa
int3
call
pop
ss
xor
enter
mov
xchg
call
mov
mov
ja
movsb
out
push
cmp
fwait
lods
adc
out
add
js
xchg
in
adc
and
adc
mov
cmpsl
insl
js
popl
sub
out
lea
pop
cmpsl
xor
inc
inc
bound
inc
mov
iret
call
in
mov
insb
clc
test
mov
adc
pop
ljmp
mov
add
jl
aad
pop
imul
mov
inc
mov
mov
fs
in
idivl
add
mov
push
dec
push
mov
adc
pop
sti
insl
cmp
filds
fdivrs
and
ds
add
xchg
jl
fwait
popa
sbb
pop
out
repz
and
xchg
cmpsl
stc
imul
out
adc
pop
lret
insl
call
add
movsb
mov
jnp
xchg
add
popa
xor
loopne
mov
dec
cmp
jo
mov
inc
adc
imul
pusha
push
dec
cmpsl
push
cmp
mov
lods
fmuls
add
std
push
jns
mov
ljmp
mov
add
jl
frstor
ds
add
scas
xchg
or
popa
and
loopne
mov
sub
sub
xor
pop
jg
dec
and
ret
cmpsl
stc
cmp
stc
adc
movsl
push
imul
mov
aaa
lods
clc
dec
pop
add
pop
call
inc
and
rcll
fcompl
lock
adc
push
xor
xchg
cmp
popa
aam
loopne
mov
cmp
push
ja
dec
mov
ret
call
roll
jns
dec
pop
cmpsl
jge
jae
dec
push
dec
lret
add
addr16
test
lock
or
bnd
jae
dec
push
dec
sbb
test
jnp
fs
inc
dec
mov
loopne
pop
adc
lock
dec
jnp
dec
cmp
shrl
lods
pushf
xor
scas
pop
pop
jp
jae
dec
dec
cmpsl
mov
adc
pop
pop
insl
cwtl
mov
rol
mov
jp
jae
inc
adc
sub
in
imul
pop
mov
add
jg
stc
daa
daa
cmpsl
leave
and
adc
mov
inc
bound
fneni(8087
icebp
mov
or
rorl
cmp
inc
loopne
mov
jae
pop
dec
fwait
mov
incb
lahf
iret
sub
js
xchg
clc
pop
pop
popa
subb
and
outsl
adc
pop
inc
outsb
pop
mov
add
xchg
inc
and
and
add
dec
fbld
cmpsl
arpl
add
sbb
cmpsb
sub
hlt
lret
pop
stc
and
shlb
loopne
insb
into
cmp
mov
inc
sti
sub
hlt
mov
mov
scas
or
iret
mov
hlt
pop
mov
hlt
inc
xchg
jne
shlb
cmp
clc
mov
popa
insl
adc
or
addr16
or
push
test
test
lret
call
aam
ret
pop
cmp
mov
int3
jle
icebp
popa
lcall
in
mov
mov
and
jo
je
daa
movsb
pushf
cmp
movsl
sub
pop
enter
pop
push
adc
push
test
lock
movsl
and
loop
std
or
dec
stos
insl
pushf
lcall
ja
cltd
xor
ds
xchg
lods
cmp
dec
push
shlb
cmc
loopne
inc
or
xchg
cmp
scas
sbb
fadds
test
ss
jmp
xor
lock
cmpsl
push
inc
or
pop
out
cwtl
negb
in
fistps
pop
frstor
fistpl
sub
push
inc
imul
pushf
adc
push
imul
pop
mov
adc
pushf
in
mov
xchg
lds
andb
inc
dec
daa
cli
pop
shl
adc
imul
popl
aas
mov
imul
rcrb
fistpl
jnp
loope
xor
pop
or
pop
pop
pusha
das
pop
fs
push
adc
mov
inc
out
pop
push
out
sub
and
push
sbb
mov
dec
adc
in
test
insb
or
in
fsub
or
sbb
pusha
pop
cmp
dec
ja
je
mov
out
lds
add
insl
mov
stc
jo
add
push
enter
imul
inc
jp
xor
jne
add
adc
popa
and
cmp
push
ret
mov
mov
pop
popf
or
enter
inc
fneni(8087
inc
sub
xor
test
aas
xor
clc
leave
call
pop
loopne
and
jo
hlt
jo
pop
int3
nop
push
push
cmpsb
xchg
rol
push
gs
call
imul
movl
xchg
mov
clc
movsl
and
mov
mov
mov
mov
mov
pusha
test
push
nop
push
dec
mov
dec
pop
call
nop
mov
dec
jge
pop
jecxz
movsl
inc
fdivr
in
inc
sub
mov
mov
adc
cmp
lods
inc
pop
call
decb
mov
arpl
pop
push
push
adc
cltd
lcall
push
or
push
mov
dec
nop
mov
pusha
lcall
test
mov
pop
lds
add
pusha
mulb
daa
jmp
and
xor
push
mov
cmp
cmpsl
repz
scas
jmp
jle
adc
pushf
test
arpl
jge
push
mov
pop
pop
stos
cld
iret
jecxz
push
adc
in
jl
nop
sub
enter
jmp
jp
leave
ret
les
xor
or
ret
ret
jno
std
jo
mov
adc
sbb
lods
dec
adc
adc
dec
stos
mov
dec
adc
aad
pusha
push
sbb
adc
insl
repz
and
add
imul
pushf
in
das
insb
sub
mov
movsl
xchg
shlb
fists
pop
pop
lret
icebp
pop
daa
xchg
jo
fcoms
ret
and
imul
movsl
lahf
call
shrl
and
test
call
test
fidivrl
and
fidivl
inc
inc
popf
notl
test
mov
pop
inc
movsl
aas
mov
jmp
fldt
mov
sub
test
mov
cwtl
jl
call
out
fstps
add
test
imul
and
fbld
mov
sahf
adc
jmp
dec
nop
or
mov
mov
xor
jp
fistl
loopne
xchg
repz
lea
addb
adc
inc
jno
push
and
test
mov
ss
imul
rcrl
idivl
iret
sti
addr16
test
mov
jmp
mov
mov
xchg
testl
out
jl
gs
inc
jmp
gs
inc
mov
push
mov
mov
or
xor
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cs
jnp
mov
mov
loopne
int
iret
into
fcomps
das
into
hlt
sbb
into
mov
sbb
test
add
pushf
sbb
iret
xchg
je
jae
imul
lret
jbe
push
mov
jbe
mov
push
xchg
mov
push
orl
push
jecxz
testb
mov
push
ret
mov
push
xor
and
std
inc
adc
lea
es
push
arpl
mov
push
lahf
mov
in
sub
cmc
and
adc
pop
mov
and
pusha
lea
jo
xchg
jo
xchg
adc
pop
xchg
insl
mov
lods
inc
mov
cmp
mov
push
loopne
xchg
jnp
clc
out
aam
or
ljmp
jnp
aaa
mov
ja
inc
push
cltd
repz
adc
std
aas
mov
mov
xor
pop
lods
xor
xor
out
push
push
xchg
xchg
fcoms
push
nop
and
std
sti
adc
movsb
add
pop
cmp
dec
ret
test
jge
dec
mov
push
addr16
push
add
int
adc
xor
push
mov
mov
rclb
cmp
inc
in
inc
jecxz
jp
push
ljmp
sbb
push
imul
popa
xchg
xchg
sub
fs
xchg
or
xor
daa
push
call
xor
das
xor
pop
cmpsb
int
pop
xchg
xor
daa
daa
fnstcw
shll
into
xor
mov
dec
push
mov
xor
sub
cmp
adc
xor
into
sbb
xchg
outsb
gs
pop
pop
stos
sbb
or
nop
push
data16
insl
mov
pop
mov
lret
adc
and
repz
popf
and
jo
xchg
pushl
mov
pusha
sub
loopne
mov
subb
shl
ret
insl
jne
pop
dec
into
push
pop
mov
cmp
dec
dec
pop
je
jne
test
push
dec
jp
jl
mov
stos
cmp
inc
dec
push
mov
pop
sub
push
sub
out
and
jae
test
outsb
arpl
cwtl
ror
pop
xor
jle
pop
arpl
dec
outsl
push
ss
pop
ds
daa
mov
cmp
and
cmp
push
mov
push
jl
push
push
xchg
mov
xchg
push
shlb
xchg
pop
cltd
outsb
or
ficoml
hlt
cmp
push
dec
jmp
pop
out
cwtl
sub
jmp
xor
shrl
pop
pop
mov
jl
stc
mov
xchg
sub
sub
dec
mov
inc
push
sbb
out
jo
les
pop
fld
and
btr
dec
push
test
jle
imul
push
and
xor
push
xchg
popa
mov
lods
inc
sahf
push
test
xchg
cmpsl
adc
xor
cltd
je
dec
push
scas
push
mov
stos
pop
mov
xor
push
js
std
sbb
cmp
fstl
lret
decl
and
into
repnz
into
xchg
add
mov
or
inc
sbb
into
bound
xchg
into
jb
test
add
cmc
into
adc
in
and
push
cwtl
lahf
fimull
negl
cli
or
lahf
or
lahf
sbb
aaa
lahf
sub
gs
cmp
cmc
pop
adc
icebp
ja
insl
std
adc
push
adc
cmc
adc
in
and
aad
xor
vcmpss
push
xchg
push
xlat
mov
push
mov
push
aaa
test
push
daa
cmp
xchg
dec
sub
cmc
pop
pop
cmp
mov
cmp
popf
cmp
daa
lea
sbb
std
cmp
daa
in
cmp
daa
fnstsw
lret
and
cmp
and
cmp
and
cmp
and
cmp
and
cmp
dec
mov
push
pop
mov
push
jge
push
push
lea
bound
cmpsl
push
mov
mov
notl
mov
xlat
push
or
mov
cmp
les
mov
inc
dec
xchg
mov
xchg
popf
xchg
or
mov
adc
std
notl
in
std
out
std
std
xlat
adc
std
aaa
adc
dec
sub
dec
pop
sbb
pop
pop
or
insl
pop
js
jge
push
arpl
popf
or
sbb
std
sub
in
cmp
fst
lret
cmp
cli
repz
lcall
xchg
mov
loope
ret
lret
pop
mov
xor
popf
xor
cmp
xor
cs
xor
fnsave
lret
das
int
fldt
cmp
fists
adc
sbb
pop
bound
stos
inc
mov
lret
je
into
jp
popf
into
or
lea
sbb
std
shrb
pop
nop
sahf
ret
ret
cmp
sub
cmp
sub
cmp
sub
cmpsb
imul
inc
mov
jae
nop
mov
nop
lcall
nop
mov
pop
cwtl
xor
aad
arpl
repz
lcall
push
dec
xor
pop
mov
push
lods
jp
popf
or
sbb
std
sub
in
cmp
fst
lret
cmp
cli
repz
ljmp
out
loopne
sbb
test
out
and
xor
cld
mov
pop
cmpsl
pushf
mov
addr16
mov
pop
mov
gs
jnp
push
push
mov
cmp
sahf
adc
test
jecxz
cs
jecxz
cs
jecxz
cs
jecxz
cs
add
int
adc
cmp
mov
mov
mov
insb
sbb
into
or
xchg
sbb
test
loopne
jae
ficomps
std
in
sti
std
aad
or
lds
sbb
xor
push
cmp
add
adc
adc
push
mov
add
adc
call
and
out
xor
fucomip
les
in
mov
push
int
cmp
or
mov
arpl
popa
xor
imul
xchg
ficoms
xor
fiadds
xor
fdivp
xor
fsubp
xor
fmulp
xor
jmp
ds
bound
push
lods
arpl
movsl
mov
cmpsl
je
xchg
cmpsl
or
fwait
cmpsl
add
repz
xor
ret
cmpsl
fdivl
push
in
in
in
cld
cs
sub
cmp
inc
jge
lret
jns
cld
cmp
sub
out
dec
sub
sahf
je
stc
adc
lods
inc
mov
repnz
and
ret
in
fadds
inc
mov
mov
mov
push
pop
ret
dec
cs
xor
mov
cmpsl
jo
fwait
cmpsl
add
andl
movsl
repz
sub
sti
push
cmp
sbb
jecxz
loope,pn
clc
and
in
adc
jge
mov
mov
mov
pop
insb
dec
xor
or
push
jno,pn
push
cs
lods
cs
jecxz
lods
jecxz
cs
jecxz
cs
clc
cs
jecxz
cs
add
shl
sub
sub
inc
jp
fs
js
pop
mov
mov
nop
push
mov
mov
xchg
mov
push
popf
mov
sbb
faddl
cmp
and
cmp
and
cmp
pop
mov
push
push
xchg
push
fidivl
into
sbb
into
and
jecxz
cmp
jmp
xor
ror
int3
sbb
into
les
xor
lock
into
test
add
pushf
sbb
into
xchg
sbb
movsb
insb
jnp
mov
mov
push
jo
push
nop
mov
in
sbb
xor
fiadds
das
aad
xor
das
aaa
xor
das
das
xor
sub
test
andl
mov
cmpsl
xor
stos
xor
xchg
xor
xorl
cs
xor
das
ret
xor
das
lret
xor
das
xor
in
cmp
mov
mov
aas
xor
adc
dec
cmp
incl
add
std
or
arpl
inc
adc
std
mov
stos
std
mov
bound
cmp
in
and
adc
jo
xchg
add
lds
test
xor
jp
dec
inc
mov
jbe
scas
mov
or
movsl
or
lahf
aad
icebp
lahf
icebp
or
lahf
add
int3
lahf
adc
cmp
and
sbb
inc
wbinvd
cltd
ret
jns
xor
pop
xor
repz
cmc
xor
fdivrp
xor
fsubp
xor
fsubrp
sub
add
cmpsb
or
push
out
lret
push
push
inc
mov
test
xor
and
cmp
pop
inc
je
ret
pop
jb
mov
cmp
hlt
test
dec
xor
cmp
pop
insl
dec
lds
cmp
inc
xchg
scas
inc
mov
pop
xlat
ret
and
mov
mov
pop
sbbb
jmp
push
icebp
push
loope
das
push
imul
mov
cmp
arpl
inc
aam
xor
fdivrl
mov
test
hlt
jbe
outsb
inc
shl
cmp
jmp
repz
stc
hlt
adc
xchg
ret
pop
add
mov
filds
add
pop
add
jo
imul
push
gs
jge
fsubrs
lods
mov
xor
sbb
movsl
pushf
mov
mov
addr16
and
cmpl
jo
data16
test
outsb
adc
pop
adc
sahf
pop
jmp
push
scas
imul
fisubl
sahf
into
addr16
aad
xchg
jl
cmp
imul
movsl
gs
adc
jns
nop
push
jno
cwtl
or
sub
subb
xchg
mov
mov
pop
add
mov
mov
fdivr
inc
and
mov
scas
pop
fisttpl
add
loop
outsb
rcrl
inc
mov
lds
pop
xor
repz
sub
cmc
scas
mov
aas
scas
les
dec
mov
push
xor
loopne
outsb
iret
out
xor
add
scas
mov
pop
mov
gs
lock
insb
xor
les
jmp
sbb
jmp
loop
sub
movsb
and
pop
push
dec
test
add
xchg
sbb
out
fs
pop
mov
push
pop
or
and
xchg
inc
mov
mov
mov
pop
cmp
sti
lret
mov
push
pusha
xchg
fisttps
mov
xor
xchg
movsb
push
iret
mov
rclb
dec
pop
stos
inc
xchg
lcall
sub
aaa
push
jnp
inc
xor
in
xchg
lock
inc
mov
int3
imul
data16
test
dec
mov
lods
mov
pop
and
cmp
sub
cmp
pop
and
pop
ljmp
and
cmp
and
cmp
and
cmp
in
cs
insb
btcl
lock
or
adc
mov
data16
arpl
jbe
cmp
dec
test
test
mov
push
mov
push
lods
push
pop
ret
cltd
leave
sub
sbb
lods
sub
int
lret
fstl
pop
push
xchg
rcr
data16
cmp
mov
out
cltd
adc
cs
icebp
ret
ja
lods
jne
jbe
popa
and
xchg
xor
sub
cmp
push
push
or
jle
negl
jb
xchg
leave
mull
inc
out
sbb
xchg
aas
mov
cmpsl
fnsave
add
or
sbb
cmc
iret
mov
mov
inc
je
inc
sbbb
insl
and
es
iret
popa
pushf
cmp
and
sbb
xor
pop
mov
mov
mov
xor
mov
jns
pop
mov
cs
pop
cs
push
jno,pn
push
inc
incb
cmpl
iret
dec
pop
adc
repz
mov
or
inc
arpl
out
nop
ret
das
xchg
ret
pop
xchg
into
pop
test
adc
push
out
test
add
dec
outsl
outsl
xchg
xchg
scas
lods
jbe
xchg
mov
lods
jae
nop
mov
push
xchg
mov
sbb
jo
out
aad
or
add
int
adc
xor
sub
adc
lea
arpl
push
cmp
push
mov
aaa
mov
scas
push
cmpsl
rol
or
jo
xchg
in
repz
data16
lcall
push
roll
push
add
sub
bound
or
mov
adc
xchg
xchg
movl
cmpsl
testb
lret
lahf
adc
cmp
scas
pop
add
test
sub
outsl
jl
clc
movsl
or
cmpsb
sbb
xor
subl
call
push
ja
lret
sbb
divl
push
lret
jnp
addr16
repnz
dec
fsubr
scas
insl
push
scas
cmp
sahf
sti
push
test
movsl
push
mov
xchg
sub
fadd
lret
psubusw
lahf
in
jecxz
cmc
or
lahf
or
ret
ja
adc
std
bound
jg
mov
fs
js
bound
push
mov
mov
sbb
daa
out
cmp
shl
mov
rclb
std
or
lahf
or
or
sahf
adc
ds
insb
jbe
push
dec
mov
push
xor
xchg
and
cs
in
pop
dec
hlt
insl
xchg
les
mov
or
push
xor
scas
out
inc
jmp
xor
movsl
fdivl
inc
lret
sbb
cld
pop
outsl
mov
adc
push
std
pop
adc
scas
dec
movsl
pop
mov
inc
iret
jo
sbb
aas
cmp
ret
loopne
pop
addr16
cmp
dec
add
push
inc
ficompl
movsb
or
xchg
add
cmp
add
cmp
iret
pushf
loopne
or
add
mov
popf
shlb
adc
sti
pushf
ret
jae
les
in
pushf
leave
fstpt
pop
fnsave
lds
fdivrs
fisubrl
mov
mov
jge
cli
jecxz
sbb
xchg
xor
inc
adc
xor
add
mov
xor
cs
call
mov
inc
xchg
fwait
aad
mov
and
inc
or
mov
jmp
jl
loopne
inc
push
into
test
sub
pop
imul
stos
push
mov
repz
xchg
adc
mov
out
fsub
cmp
sbb
mov
xor
fiadds
cmpsl
test
loopne
push
mov
sub
outsb
imul
pop
inc
sbb
cmpsl
mov
pop
pop
mov
jno
pop
jno
push
aaa
addr16
into
lock
das
insb
jnp
clc
xchg
aam
or
sti
sbb
cmp
mov
and
pop
aas
pop
loopne
fmull
int
testl
in
xchg
adc
std
in
adc
pushf
aam
arpl
data16
arpl
push
stos
fs
mov
test
push
cs
pop
mov
stos
popa
rorb
js
in
pop
inc
and
repnz
pop
not
cwtl
pusha
jo
je
ficompl
push
sti
and
inc
xchg
cmc
mov
js
sub
add
inc
outsl
ljmp
add
and
leave
jp
out
xor
sub
sahf
sub
test
inc
mov
dec
imul
xor
fimuls
xor
fcompp
aas
pop
cmp
cwtl
lods
inc
adc
inc
add
xor
ljmp
out
add
mov
adc
sti
into
and
jmp
xor
fistl
sahf
cld
idivl
mov
adc
add
or
clc
push
push
cmp
test
mov
nop
push
enter
sahf
inc
je
pop
dec
int
out
mov
push
stos
push
mov
add
cmp
pop
mov
lds
pop
xor
lea
or
aam
fcoms
sarb
outsl
leave
popa
fldt
ret
fdivl
int
and
mov
fcmovbe
stos
push
aaa
sbb
mov
mov
test
addr16
leave
push
and
jecxz
ror
fsubrl
rcr
sbb
int3
jle
cmp
and
xchg
push
sbb
mov
inc
mov
cmp
sti
pop
decb
xchg
mov
insb
repnz
adc
sti
pop
jb
jecxz
cmp
cltd
popf
sahf
les
xlat
ja
outsb
out
hlt
repz
mov
pop
xor
cwtl
repz
nop
add
adc
push
addr16
insl
inc
ja
fistpll
xchg
into
add
out
mov
sbb
ror
xor
sub
stos
data16
movsb
into
xor
gs
add
inc
gs
ret
xchg
and
and
dec
in
aaa
xchg
aam
mov
or
arpl
xor
ds
aam
cmp
lahf
dec
push
cwtl
popf
pop
push
outsb
pushf
push
mov
imul
aad
sbb
mov
xor
xor
jmp
mov
imul
sub
lret
push
push
xor
xor
mov
dec
addr16
subl
cmp
sub
frstors
data16
sub
arpl
data16
xor
outsb
push
arpl
add
inc
push
lcall
adc
mov
nop
in
in
mov
push
aad
or
jno
and
nop
sub
pop
mov
add
cmpsb
rcrl
imul
dec
nop
xchg
jae
nop
test
scas
enter
fsubrl
cmp
out
imul
stc
adc
jo
add
test
pop
cwtl
and
inc
sub
dec
mov
xchg
jl
xor
adc
add
jbe
cmp
rolb
mov
mov
es
mov
mov
inc
or
lods
mov
sahf
cmp
mov
aaa
repz
pop
add
lahf
adc
mov
lcall
add
and
nop
les
ret
add
mov
push
pop
lcall
cmc
loop
aam
test
fninit
adc
pop
mov
jmp
shrb
sbb
aas
out
scas
dec
mov
sbb
cli
in
sub
inc
faddl
jne
loopne
adc
mov
cmp
and
adc
jge
pop
pop
or
test
movsb
cmp
arpl
arpl
jnp
sbb
sbb
inc
and
pop
out
cmp
adc
add
lods
pop
mov
xor
mov
std
cltd
adc
pushf
andl
push
std
mov
add
rorb
jle
jae
ds
sub
xor
adc
dec
sub
test
jae
nop
pushf
cmp
mov
lahf
test
in
popl
loopne
das
cmp
out
pop
lock
mov
pop
sub
pushf
pushf
pop
or
add
pop
or
mov
jns
scas
xchg
jbe
mov
dec
loop
into
and
xchg
or
in
cmp
movsb
fistpll
sbb
lods
mov
cmp
dec
jnp
jl
jns
decb
imul
push
lods
cltd
out
adc
mov
pushf
in
fsubrl
jp
xchg
xor
andl
mov
ret
add
stos
sbb
imul
std
and
cmp
jmp
xchg
xor
cmpb
das
add
jecxz
cs
out
sbb
aam
fdivl
loope
mov
addr16
in
adc
imul
jmp
rcr
es
lods
xor
ficomps
lock
ficomps
bound
jecxz
ficomps
outsb
gs
push
sub
mov
or
ret
mov
popf
pop
rcrl
int3
sub
and
ret
cli
xchg
ja
pop
std
cmp
and
subl
push
or
cmpsl
dec
into
sbb
sub
cmp
pop
cmc
int3
xchg
inc
lea
ds
cmc
or
xchg
addr16
repz
jb
jae
mov
inc
cltd
pop
xor
xchg
pop
ret
mov
xchg
pop
mov
fisubs
in
and
xchg
dec
xlat
sbb
adcb
stos
dec
push
mov
and
ljmp
jb
lahf
leave
mov
js
aam
inc
insb
test
xchg
or
mov
stc
push
sti
bnd
push
push
gs
mov
nop
hlt
cwtl
out
inc
and
sub
push
or
mov
mov
aas
mov
mov
call
mov
cmpsl
push
or
cmc
inc
stos
xlat
sub
out
push
shll
cld
jecxz
jp
pop
xchg
jmp
sbb
inc
repnz
adc
sub
xor
cmp
lcall
xor
repz
addr16
cmp
xor
or
pop
repz
je
stos
scas
jo
pop
ljmp
xchg
loop
insl
popa
push
sahf
lods
andl
and
xchg
mov
adc
push
aas
loop
sub
icebp
inc
iret
call
bound
pop
mov
sub
test
push
jge
fiadds
sub
sti
mov
jne
sarl
rcll
push
inc
sbbl
fstpt
inc
rorl
test
mov
fsts
xchg
les
pop
and
inc
in
in
sub
std
xor
hlt
test
dec
push
pop
cld
xchg
inc
bound
jge
jns
dec
dec
clc
and
lret
dec
fdivp
pop
arpl
xorb
fdivrs
stc
scas
cmp
jnp
and
cmp
jb
push
das
cmp
cmpsl
jge
pushf
fwait
pushf
mov
push
jge
test
ret
inc
enter
lds
adc
pop
push
in
push
xchg
lods
add
xchg
and
mov
and
push
mov
stos
or
mov
flds
test
popf
pop
in
int
sahf
call
fcompl
in
iret
mov
mov
data16
pop
lret
and
iret
movsb
les
pusha
jne
leave
lahf
push
mov
push
mov
xchg
add
mov
out
enter
or
popa
mov
xlat
dec
xor
xchg
out
mov
mov
push
mov
pop
imul
out
cs
fnsave
mov
ss
push
or
xchg
push
jnp
nop
mov
or
mov
shll
jns
sub
xchg
int
mov
pop
pop
daa
sub
xchg
fisttps
repz
stos
sbb
sub
inc
mov
pop
xchg
xchg
scas
push
mov
jno
lahf
arpl
bound
jae
push
sbb
pop
xor
fimuls
xchg
iret
imul
inc
dec
mov
and
popa
ss
lods
inc
mov
xchg
jbe
mov
cwtl
or
shl
mov
push
jns
push
daa
jno
out
jbe
pusha
xchg
push
xchg
aad
push
mov
pop
mov
sub
loope
and
out
cmp
lds
ds
and
push
cmc
jns
and
pop
popa
adc
cmp
sbb
jns
movsl
pop
dec
rcrl
push
enter
insl
addr16
cli
push
es
out
loop
push
sub
cmpsl
pop
jne
xor
fdivr
and
iret
test
lock
or
sarl
dec
inc
dec
adc
loop
in
jecxz
cs
psrlq
cmp
cmpsl
lahf
cmpsl
or
jmp
jbe
push
push
stos
lcall
cmp
jnp
adc
adc
lea
jno
loopne
pop
cmp
adc
xchg
jp
pop
inc
jae
mov
inc
cmp
fistps
push
aam
cs
cwtl
mov
xor
sbb
fwait
push
fdivrl
pusha
iret
test
sbb
lock
repnz
fdivrp
push
dec
mov
in
ljmp
aas
shll
or
test
ja
add
mov
push
pushf
inc
mov
pop
es
in
out
xchg
shrl
jb
push
mov
cld
popf
adc
sarl
sub
pop
faddl
popf
leave
push
adc
adc
fldt
mov
enter
nop
lret
nop
ret
push
icebp
jo
xchg
divl
pop
sub
mov
ret
js
xchg
repz
arpl
popf
mov
iret
out
xor
in
in
fwait
iret
add
test
sub
inc
repz
add
ret
mov
xchg
sahf
add
xor
movsb
push
dec
movq
outsb
mov
dec
stc
xorl
xchg
inc
test
jbe
jbe
les
mov
push
pop
jl
inc
mov
sub
jbe
stos
cmp
fistpl
ja
sbb
js
je
test
sub
outsb
pushf
fs
inc
jg
mov
mov
xor
dec
mov
mov
add
enter
int3
mov
jge
cmp
je
or
fbld
add
test
cmc
push
out
stos
vmptrld
pusha
decb
sahf
in
or
mov
adc
je
xchg
into
shll
mov
push
push
mov
cs
pop
cs
das
jl
jno
pop
leave
add
int3
fistl
ds
push
cli
lods
dec
mov
mov
stos
mov
xor
pop
into
imul
push
ret
push
fmull
and
or
sub
push
xor
cmp
xlat
pop
out
mov
pop
pop
xor
mov
in
pushaw
dec
cld
mov
in
pop
loope
jne
dec
jae
and
jnp
or
sbb
cmp
call
add
mov
rep
pushf
sub
movsb
adc
dec
pop
push
push
push
sti
push
push
xor
imul
xchg
xor
out
faddl
pop
nop
sub
pusha
jle
test
add
inc
or
js
sub
jb
stc
mov
hlt
repnz
rcll
pop
movsl
jecxz
ja
xor
mov
mov
and
xorl
jle
test
xor
lret
inc
imul
aaa
cmp
test
cmp
out
mov
sbb
dec
xor
sub
aam
inc
jb
xchg
lret
out
add
mov
daa
mov
xchg
cwtl
lods
ja
adc
sahf
in
or
fists
loopne
jge
fucomp
repnz
pop
icebp
rol
jbe
jae
xor
mov
in
inc
cmp
in
aam
leave
mov
lahf
jbe
cli
ret
outsb
rcrb
rcr
cmp
arpl
outsb
adcb
sub
push
loope
pop
test
mov
aas
ret
ss
sbb
lods
insl
fs
movsl
loope
jno
jb
fcmovb
pop
and
enter
cmp
cmp
lcall
mov
jbe
loop
das
sub
daa
pop
mov
cmp
jl
icebp
pop
test
loopne
lahf
and
out
mov
fstps
out
and
mov
gs
outsb
into
sbb
into
sbb
into
ficomps
push
mov
xchg
testl
loopne
inc
rol
xchg
pusha
bound
lock
sbb
and
outsl
inc
es
mov
and
shll
cmp
js
fwait
fwait
sbb
sti
push
and
jmp
popf
hlt
lret
fbld
iret
cmp
pop
ja
mov
int
adc
imull
aas
mov
aas
dec
popf
mov
addr16
sbbl
add
adc
ja
adc
mov
pavgw
sub
inc
mov
and
out
mov
jae
xchg
or
xor
test
fsubl
lea
iret
or
aad
fmul
ret
stc
out
das
jge
xchg
or
xchg
jo
xchg
test
adc
lret
cs
pop
or
sti
loop
inc
mov
and
aaa
test
insb
insl
insl
pop
sbb
ror
lea
into
pushf
mov
dec
jne
daa
and
dec
jo
mov
imul
or
dec
cmpsl
rol
pop
mov
sub
jns
imull
ja
js
popa
xchg
lahf
inc
sub
adc
mov
les
shrl
push
xor
jae
mov
jne
jg
push
add
lret
xor
push
mov
cmp
or
jbe
jecxz
mov
and
mov
jno
in
fs
jecxz
mov
mov
int3
in
and
fwait
adc
mov
sbb
cmpsb
imul
pusha
mov
xchg
inc
inc
jnp
jge
sbb
cmovns
hlt
mov
ffree
mov
int3
data16
mov
cmpsl
and
sahf
jmp
addr16
in
fsub
imul
dec
pop
es
shll
mov
xchg
aas
cld
fsts
jnp
sbb
jecxz
and
fildll
cmpsb
insb
gs
roll
add
and
lcall
pop
xchg
mov
fwait
mov
push
jne
lds
xchg
popa
pusha
jecxz
lods
push
mov
aam
jbe
inc
inc
xor
loopne
and
popa
adc
xchg
jecxz
data16
xor
dec
jne
out
mov
ljmp
insl
test
repnz
sub
xchg
lahf
test
sbb
flds
mov
pop
fnstsw
cmp
aaa
stc
push
movsl
inc
loopne
lds
adc
in
add
lds
int3
sbb
sub
arpl
in
out
adc
dec
imul
mov
cltd
jno
push
es
and
mov
shl
ss
fmull
inc
cmp
push
pop
arpl
mov
mov
push
adc
fisttps
push
loop
dec
or
ret
jb
cmp
sub
ret
or
mov
push
hlt
jae
in
scas
scas
dec
push
dec
add
xlat
mov
jae
jb
subl
insb
mov
pop
push
jle
mov
mov
rorw
in
pop
dec
lret
imul
xchg
imul
daa
and
dec
loopne
and
mov
ss
out
in
outsl
ret
pop
aas
xchg
mov
or
add
push
mov
data16
iret
fistpl
push
or
xor
push
inc
mov
lds
out
cmc
and
dec
and
aaa
outsl
bound
loope
jg
js
aas
cmpsl
cmp
jg
xlat
icebp
mov
sub
lahf
jb
enter
push
sub
push
movsl
jl
push
mov
outsb
mov
mov
mov
mov
and
dec
fistpll
mov
xchg
mov
sub
and
mov
sbb
je
add
pusha
cmp
mov
in
xchg
inc
sub
addr16
stc
movsl
pushf
andl
jae
test
cmp
insl
xor
jae
insb
dec
orl
ret
inc
in
rorl
push
mov
imul
xchg
cs
ja
loopne
pop
inc
ss
pushf
inc
sahf
mov
test
repnz
jmp
cwtl
push
cli
cwtl
fisttpl
mov
aas
jno
les
js
pop
inc
inc
adc
fwait
push
jge
imul
pop
negb
jb
push
into
iret
cs
in
cmp
roll
xchg
ljmp
test
cmp
xor
repz
sbb
xor
mov
mov
in
jge
add
mov
pushf
lods
out
iret
sub
repnz
xor
pop
jb
in
dec
hlt
mov
or
mov
push
or
stos
mov
les
jecxz
out
sti
adc
std
stc
jno
lods
in
scas
ret
aaa
adc
push
rorb
stos
in
pushf
roll
mov
sahf
mov
mov
outsb
call
repz
push
and
push
xor
jbe
negb
in
push
imul
pop
testb
fidivl
mov
mov
mov
or
cmpsl
divl
pop
and
mov
lds
std
add
call
mov
insl
into
lds
fmuls
sbb
in
push
cmp
sub
mov
jle
xor
lods
fwait
pop
bound
or
jns
add
inc
leave
imul
xchg
xchg
push
pop
iret
pop
mov
or
minps
xchg
aad
mov
xchg
sbb
std
cltd
adc
lods
sub
lods
sbb
imul
pop
loopne
jge
ss
sbb
nop
iret
fwait
cmp
and
out
popf
or
test
push
je
into
pop
orl
loop
push
mov
push
movsl
fstps
cmp
in
in
in
mov
aad
in
loopne
movsb
frstor
into
sbb
rcrb
roll
dec
mov
stos
sub
rcr
dec
or
cmpl
mov
idivb
mov
inc
loope
or
sbb
fbld
dec
cmp
into
int3
lds
mov
mov
rcll
pop
test
xor
adcb
pop
cwtl
jp
cmp
pop
dec
mov
movsl
cmp
ljmp
mov
adc
jecxz
fadds
imul
imul
inc
cmp
daa
fists
loope
imulb
movsl
xchg
or
fwait
sub
cmc
pop
rorl
jnp
pop
insl
outsl
mov
fistps
or
jae
cmp
jno
out
scas
mov
fldcw
cmp
movsl
jo
xchg
inc
js
test
xlat
or
lods
inc
mov
jno
int3
and
push
push
insb
sbb
xorl
shl
nop
in
cs
adc
mov
pop
bound
ficoms
mov
pop
xchg
cwtl
adcb
and
addr16
sbb
mov
add
or
pop
gs
in
inc
adc
xchg
xchg
xchg
bound
push
mov
push
jb
inc
jl
sub
mov
cmpsb
push
sbb
mov
nop
lock
lret
aad
movsb
mov
rdmsr
mov
mov
ja
lret
mov
cs
movsb
outsl
mov
js
lea
push
mov
jns
test
ds
or
out
ja
fnstcw
out
pop
jecxz
and
pop
add
test
inc
imul
loope
out
ljmp
ja
push
mov
movsl
clc
mov
pop
mov
ljmp
int
adc
ret
ffree
fdivrs
xor
outsb
jle
aaa
and
cs
aaa
scas
push
jae
pop
or
mov
in
mov
xor
pop
pop
dec
stc
pop
push
lods
mov
das
int
pop
lret
add
inc
fs
lds
mov
xchg
sub
sbb
enter
jmp
dec
push
dec
ja
je
fdivl
mov
popa
jl
pop
ret
jnp
jg
dec
pop
inc
in
call
mov
or
test
adc
xor
push
lods
loope
pop
xor
push
mov
pusha
lods
push
test
push
sahf
lret
push
bound
sbbl
mov
mov
adc
cs
imul
jne
stos
or
imul
ss
subl
rorl
jo
mov
push
sub
add
std
mov
add
inc
dec
imul
lcall
push
push
xor
clc
movsl
sbb
sbb
xchg
das
fidivrs
rcll
cmp
test
or
mov
outsl
int
pop
lods
dec
into
popf
inc
jecxz
xchg
insl
fists
ss
neg
cmp
mov
xchg
inc
xchg
mov
and
fnstsw
aad
sub
xchg
leave
push
gs
adc
out
testb
sbb
mov
pop
jmp
jbe
jmp
xchg
or
push
push
push
cmp
pusha
mov
ficomps
xchg
mov
cld
sub
ljmp
mov
mov
sbb
sub
stos
std
ja
jecxz
push
fdivl
sti
scas
popa
sbb
or
push
outsb
add
daa
or
dec
fdivrs
add
testb
add
lahf
jne
gs
jno
sub
jns
stos
repz
in
xchg
stc
jnp
jge
jne
mov
ds
cmp
iret
repnz
stc
insb
and
jbe
sbbl
int3
xchg
inc
hlt
je
cmpsb
push
adc
cmp
roll
loopne
lahf
mov
out
mov
cs
stos
int3
adc
inc
sub
fstpl
jnp
das
add
out
cmp
loop
icebp
xchg
cmpsl
mov
ljmp
nop
sbb
stc
dec
stos
jmp
adc
dec
popa
in
stos
arpl
data16
push
out
and
xor
scas
or
cmp
insl
dec
adc
das
scas
decb
arpl
xor
or
andl
or
outsb
lcall
add
in
sahf
or
das
pop
xchg
adc
ret
fmuls
lds
sub
gs
fs
ret
xchg
test
inc
push
xchg
lret
jbe
daa
dec
mov
mov
mov
fnstenv
cmpl
inc
sub
cwtl
inc
mov
sti
lret
jne
ror
mov
and
ljmp
fidivs
test
movsb
orb
test
push
call
inc
mov
outsb
int
pop
lods
sbb
cmp
outsl
je
xchg
add
jb
cmp
mov
push
pushw
test
pop
cmp
cmp
mov
mov
xchg
leave
cmp
out
repz
addr16
rorl
cmp
jne
in
fwait
test
xchg
mov
lods
cmpsl
xorl
fbstp
mov
or
cltd
dec
xorl
clc
mov
push
or
aam
sub
das
out
adc
cs
mov
mov
insb
jmp
insl
cmpsl
xchg
inc
mov
enter
ss
xor
push
leave
mov
lock
jl
scas
inc
movsl
mov
insl
imul
sub
add
xor
inc
das
xchg
lret
dec
add
and
mov
faddl
jo
out
aad
inc
push
mov
mov
lret
fldcw
mov
pop
push
mov
mov
push
jb
xor
jbe
in
pop
mov
dec
push
push
xor
shl
push
pop
push
scas
aad
xchg
stc
mov
dec
xchg
loopne
push
pusha
cwtl
mov
loopne
ret
lahf
sub
push
dec
pop
sbb
lahf
outsl
aaa
xor
loopne
add
jl
divl
test
and
pop
fdivrl
and
add
js
inc
rcrl
pop
loopne
aam
repnz
repnz
cli
sub
and
mov
jbe
add
fidivrl
in
cmp
outsb
incl
mov
jbe
pusha
inc
dec
loopne
pop
adc
dec
in
fidivrs
mov
mov
pop
push
movsl
jge
adc
mov
add
ljmp
fdiv
sbb
addb
icebp
sbb
adc
pop
sub
insb
in
jns
into
daa
pop
xlat
mov
adc
mov
adc
ljmp
mov
pop
leave
aad
mov
xor
or
arpl
jg
push
in
cwtl
fwait
push
stos
dec
movlps
pop
push
ss
in
cmp
test
loop
leave
mov
xlat
std
in
hlt
ss
rorl
js
mov
mov
orl
int
aas
pop
movsl
cmpsl
xchg
into
pop
int3
pushf
mov
in
mov
aad
inc
sub
and
sub
jge
cwtl
nop
pop
mov
aaa
pop
and
and
jmp
in
xchg
scas
ss
shll
pop
stc
inc
inc
adc
repz
pop
mov
cmp
stos
iret
data16
dec
cwtl
push
hlt
push
adc
cmp
lods
aas
std
dec
xlat
cmp
mov
sahf
cwtl
leave
mov
pop
test
add
cld
or
repz
pop
push
cwtl
rolb
rclb
sub
xor
popa
packsswb
pusha
mov
into
mov
movsb
add
xor
daa
cmpsl
cmp
sub
add
xor
ret
inc
ljmp
mov
mov
lahf
rcr
pop
cwtl
mov
jl,pn
sub
decb
les
in
aad
hlt
test
cld
push
in
loop
push
inc
push
mov
imul
lret
cwtl
sti
jmp
and
pushf
xchg
scas
pop
or
ficompl
dec
jnp
cmpsl
fstpl
push
out
jns
bound
add
test
cmpsl
jmp
and
call
push
mov
int
mov
int
and
lea
fsub
daa
dec
pop
rorl
mov
adc
add
jae
mov
xchg
push
sub
jmp
sbb
aas
pop
and
jmp
adc
cmp
or
int
push
inc
movsl
mov
push
add
nop
jp
jno
jne
mov
lea
fs
inc
mov
lock
scas
mov
sub
iret
push
and
jmp
sbb
jnp
fsubs
add
popa
sub
rcrl
add
sbb
andb
lcall
cli
hlt
mov
cmp
pop
xchg
dec
ret
ja
sarl
add
xchg
push
sahf
inc
dec
jo
mov
and
mov
insb
test
inc
into
xor
add
lock
push
cmp
into
mov
imul
ljmp
pusha
cmp
pop
and
cs
add
xchg
cs
std
nop
or
fistpll
xor
out
xor
mov
lods
ja
cmp
lea
push
aas
sub
xor
mov
testl
xor
imul
imul
xchg
dec
xchg
rolb
jle
lods
mov
push
je
dec
cwtl
in
and
cmp
sub
dec
mov
nop
imul
insl
in
fabs
xor
xchg
or
ret
in
cwtl
roll
jno
scas
inc
jns
stos
clc
popa
aad
or
mov
sub
dec
xchg
outsb
mov
dec
in
pop
add
outsl
inc
repnz
insb
cs
out
out
gs
push
nop
arpl
adc
or
cwtl
sub
cmp
cmp
add
pushf
dec
or
xor
xor
xchg
pop
jo
push
das
mov
and
mov
dec
fmulp
lods
test
sahf
jnp
sub
ret
adc
js
adc
lahf
push
sbb
jge
int3
push
iret
xchg
fsubrs
jecxz
cmp
out
mov
repnz
mov
sub
ds
push
daa
pop
jno
lods
lahf
fs
adc
xchg
cwtl
sub
popf
leave
mov
mov
shlb
ret
sbb
inc
rcrl
xchg
fs
out
mov
add
movsb
imul
mov
inc
arpl
cli
dec
fmulp
pop
lcall
pop
pop
mov
mov
adc
ja
pusha
and
jae
mov
stos
ss
lcall
xor
sbb
filds
fistpl
jge
fdivl
xchg
je
fsubrs
scas
sub
gs
adc
test
xchg
inc
xchg
push
popa
mov
cs
shlb
mov
rorb
xchg
pop
enter
cmpsl
fbld
push
xchg
dec
mov
and
xchg
pop
xchg
cmp
pop
sti
cs
sbb
shr
in
cmc
dec
shrl
add
cmpsl
xchg
inc
ret
orl
jns
mov
and
cs
sbb
ret
pop
adc
int3
cmp
add
fimuls
lea
or
fidivrs
fwait
mov
stos
or
inc
jbe
dec
push
mov
cmp
mov
push
lods
xor
push
mov
xchg
push
enter
loope
stos
jae
fistps
add
xchg
xchg
andb
out
in
std
and
push
inc
xor
jb
or
cmp
daa
xchg
ljmp
rcrb
xchg
or
dec
std
jecxz
mov
sti
mov
ljmp
push
ja
adc
pop
into
pop
shrl
xchg
movsl
jg
rcrl
inc
ljmp
stc
inc
in
stos
dec
shrb
xchg
push
imul
push
xor
out
push
cmp
jae
adcl
push
sbb
cld
adc
cwtl
call
xchg
insl
adc
jne
scas
dec
dec
movsb
mov
aas
dec
or
xor
sahf
sub
cmpsb
iret
bound
pusha
or
pop
mov
gs
call
xchg
stc
es
mov
mov
out
pop
das
lds
sbb
add
pusha
cmp
je
pop
cmp
cmp
xor
mov
dec
jno
aas
pop
mov
sub
in
mov
adc
xchg
cmc
mov
gs
xor
lret
push
xchg
lock
push
cmpl
cmp
and
mov
pop
push
outsl
and
insb
dec
add
in
das
inc
push
xchg
mov
test
xor
or
pop
or
fdivrs
daa
xor
cmp
stos
in
pop
outsl
or
fcompl
and
mov
mov
jecxz
push
or
push
icebp
sub
jp
addl
sbb
dec
push
out
cmc
mov
xchg
data16
jae
scas
jle
mov
sbb
sbb
lret
loop
xchg
cmpsl
repnz
sub
bound
sbb
mov
je
mov
cmp
stos
mov
push
js
dec
sahf
add
inc
mov
xchg
and
outsl
adc
cmp
mov
ret
push
dec
pop
and
push
mov
sbb
mov
and
ret
xor
inc
push
or
jb
or
pop
dec
fcoml
jno
jmp
mov
cmpsb
mov
add
lret
mov
aas
sbb
xor
shl
insl
popa
in
rep
inc
dec
icebp
xor
out
inc
mov
aas
lahf
iret
fiadds
add
push
dec
add
adc
icebp
out
xchg
popf
jmp
pop
fwait
adc
pop
jne
xor
loope
loopne
ss
push
inc
out
push
cmc
lods
aam
adc
cmp
inc
cmp
and
gs
xchg
mov
xchg
stc
mov
sbb
pop
mov
mov
dec
rclb
jnp
push
adc
pop
jne
mov
mov
pop
mov
pusha
movsl
in
push
xor
push
roll
dec
push
push
pop
lods
xor
in
inc
push
mov
jae
jno
daa
int
push
dec
dec
add
cmp
stc
stc
cmpsb
sbb
std
dec
mov
cwtl
mov
jnp
push
inc
enter
push
daa
xchg
test
push
or
cmp
pusha
in
jecxz
inc
mov
mov
lahf
push
pop
and
sbb
dec
fbld
ljmp
cli
jbe
in
sub
inc
jle
pop
adc
lock
jmp
xchg
cs
push
mov
xor
aaa
mov
fisttps
neg
insb
or
in
incl
push
push
popf
inc
das
dec
adc
sbb
clc
or
movsb
jmp
xchg
pop
imul
mov
push
pop
insl
loopne
lret
add
repz
arpl
pop
xor
mov
push
add
push
xor
rclb
out
cmp
push
sahf
pop
fchs
or
insb
sbb
jae
pusha
mov
push
jbe
lods
leave
sbb
adc
cmp
rolb
pop
mov
or
inc
scas
nop
test
or
push
das
mov
xchg
hlt
xor
repnz
pop
inc
mov
xchg
push
jge
cmpsl
pop
sbb
inc
paddsw
test
movsl
cmpsl
ds
sarl
dec
fdivrl
pop
mov
movsl
mov
dec
lea
mov
xchg
sub
mov
sti
sub
xor
scas
stos
sarb
jbe
in
stc
dec
lcall
adcl
lahf
push
pop
pop
or
mov
arpl
ret
bound
icebp
cmp
cwtl
mov
xor
xor
mov
or
int
xchg
fldl
mov
lods
subb
mov
mov
pop
add
sub
sub
dec
pop
push
jb
lods
arpl
inc
mov
cmp
test
sub
loopne
je
addr16
push
jo
inc
stos
mov
pop
or
cmp
jmp
stos
jecxz
shrb
mov
xchg
inc
mov
and
push
push
insb
mov
adc
pop
pop
jbe
cmp
inc
xchg
or
and
add
sbb
jl
lahf
mov
rcr
dec
mov
inc
xor
pop
adc
xchg
sub
icebp
mov
or
jns
stos
stc
mov
adc
inc
jns
imul
cmpsl
pop
jb
fstl
inc
fcomi
mov
mov
negb
test
outsb
pop
addr16
xchg
insb
jne
nop
dec
inc
cmp
xchg
sbb
mov
cmpsb
es
or
cld
sub
jb
in
xor
call
daa
in
and
xchg
sarb
fs
subb
sub
mov
push
divl
arpl
xchg
mov
dec
mov
mov
lcall
and
sbb
xchg
mov
test
cmp
xchg
pusha
push
cwtl
jb
mov
inc
repnz
push
push
fcoml
addr16
pop
and
sub
insl
nop
rcrb
mov
mov
fldenv
and
inc
xchg
into
dec
les
pop
xchg
mov
jmp
sbb
push
leave
or
pushf
lret
push
loopne
sarl
and
rolb
pop
cmc
mov
xchg
xor
push
mov
sbb
jbe
adcl
xchg
adc
jb
push
push
xchg
or
cltd
stc
or
jbe
fimuls
in
fxch
mov
add
dec
aam
stos
aas
sub
cmpsl
cmpl
js
gs
jns
inc
dec
addr16
pop
test
lods
enter
in
pusha
jne
mov
xchg
pusha
add
scas
jbe
pusha
mov
lcall
daa
xchg
adc
insl
jecxz
aad
imul
or
jae
les
shrl
or
shrl
pop
cmp
dec
test
cmc
int
lock
fmull
dec
lcall
sub
inc
xor
leave
loop
std
cmp
mov
dec
clc
sti
xor
test
sbb
shll
shll
lods
stc
cmp
sbb
lods
js
pop
and
ja
inc
adc
fwait
push
scas
out
int3
sbb
push
orl
int
push
dec
inc
xor
pop
jge
cmp
rcll
aam
or
fnstcw
inc
and
inc
outsl
dec
mov
sbb
mov
dec
inc
cmc
mov
pusha
cmp
jp
rclb
gs
cmpsb
add
push
insl
mov
sub
out
xchg
fsubs
add
lea
xchg
mov
add
sbb
jo
xor
cs
xor
cs
xor
loope,pn
and
sarl
leave
cmp
movsb
in
sarb
sbb
jmp
data16
mov
add
int3
jnp
gs
inc
add
test
test
imul
call
cmp
or
in
sub
sbbw
jbe
in
jb
jmp
scas
aad
or
adcl
and
sahf
adc
dec
sbb
jae
std
scas
jno
stc
add
push
adc
jno
icebp
jnp
je
mov
mov
cmpsb
testl
pop
mov
inc
lods
insl
stos
mov
sub
enter
adc
andl
mov
test
mov
xchg
mov
dec
inc
mov
cmpsl
in
stc
or
sahf
pop
xchg
ret
mov
outsl
loop
dec
cmp
jae
shl
gs
add
mov
xor
inc
add
push
pop
scas
dec
xchg
psubb
mov
mov
sub
adc
mov
jb
xchg
ja
sahf
mov
jae
cmp
popf
cmp
push
dec
pusha
mov
mov
mov
jp
push
xor
add
pop
mov
dec
add
sbb
das
dec
lods
repnz
stc
xor
call
and
gs
je
pop
test
sub
cmpsl
in
fbstp
in
ds
and
sarl
rorl
and
test
pusha
bound
xchg
cld
or
movsl
push
mov
xor
popf
lea
repnz
ret
dec
xchg
pop
inc
insl
mov
sub
pop
xor
movsb
cmpl
push
lods
mov
jne
push
mov
aam
test
insb
jl
stos
mov
pop
or
pop
test
out
loop
sbb
mov
lahf
scas
jnp
les
pushf
add
push
cld
call
ljmp
xlat
mov
imul
jmp
ret
test
jns
cmpsb
and
lcall
push
icebp
mov
mov
adc
popa
pop
cmpsl
loop
mov
add
xchg
xchg
addl
shl
mov
mov
shll
outsl
out
sbb
int3
mov
mov
cmpsl
jl
pop
dec
aaa
cmp
xor
xor
pushl
push
rcrb
jbe
pusha
rclb
or
adc
xor
push
ja
imul
cmpsl
enter
cs
xor
add
insl
cmp
inc
mov
aad
nop
rcrl
sub
sub
jns
push
gs
sub
sbb
mov
and
add
ja
fstpl
int
pusha
dec
test
add
add
sbb
adc
xchg
mov
pop
mov
outsl
push
push
mov
mov
ja
mov
jbe
mov
aad
addb
sub
cmpsb
push
mov
pop
inc
mov
fisubs
popa
xchg
pop
mov
lock
imul
mov
inc
jbe
scas
adc
ret
mov
mov
int3
jae
insl
sub
mov
ja
cmpsl
imul
movsl
cmpsl
and
push
jle
mov
push
xchg
mov
sahf
adc
push
push
jne
sbbl
or
lds
sbb
lods
push
push
movntps
sbb
xchg
cli
push
dec
and
je
ja
adc
pushf
in
dec
pop
insl
lds
mov
out
push
pop
xchg
push
mov
dec
adc
icebp
cwtl
addr16
cmp
xchg
dec
testb
add
aam
jmp
mov
mov
test
inc
fstpt
jb
dec
int
adc
push
mov
mov
xchg
push
addr16
inc
add
mov
sub
test
pop
fdivs
imul
aam
fdivl
popa
xor
lds
inc
xchg
repz
shrb
xchg
cmp
jecxz
pop
add
sub
fisubl
in
lret
loop
stos
icebp
mov
or
sub
mov
xor
mov
int
mov
mov
pusha
iret
inc
xchg
or
cltd
xchg
dec
pop
dec
dec
mov
outsb
hlt
push
jmp
ja
popa
int
push
xor
dec
pop
lcallw
dec
insl
pop
xchg
nop
stos
mov
stos
sub
adc
mov
loopne
mov
or
cvtdq2ps
sbb
xchg
xchg
cmp
xor
mov
test
sbb
sub
xchg
lods
movsl
rorl
into
data16
ja
add
cld
xlat
movsb
sub
mov
push
cmp
je
sub
push
adc
cmp
add
inc
mov
scas
in
push
xor
cmpsl
or
cli
jecxz
or
das
stc
lock
fs
data16
pop
or
sub
pushfw
lret
roll
xlat
inc
lahf
arpl
aam
movsl
push
cmp
mov
pop
outsb
xchg
dec
add
aas
mov
sbbb
imul
dec
push
xchg
test
and
nop
sahf
xchg
cmc
mov
loop
inc
inc
or
icebp
mov
mov
pop
xchg
mov
and
jo
pusha
stos
repz
out
sbb
mov
xor
jmp
bound
addr16
stos
push
mov
fadd
jecxz
mov
and
or
loope
rorb
and
jbe
pop
pop
pop
rcr
xchg
fstl
or
add
xchg
pop
sbb
ljmp
fwait
jns,pn
stos
pop
xchg
popa
jae
inc
mov
or
bound
fsubr
rorb
stc
mov
xchg
xor
xchg
pop
mov
mov
loopne
jne
imul
in
shlb
loope
scas
dec
negb
fcomps
out
imul
and
xchg
call
lods
fucom
cmp
inc
cmp
xchg
or
sbb
bnd
or
and
mov
cmpsb
dec
sbb
pop
adc
aas
fldl
xor
cmp
mov
cmp
inc
jmp
into
dec
and
sub
sub
pop
popf
dec
jle
and
push
movsb
loop
arpl
fistpll
loope
aad
sbb
xor
mov
sbb
mov
cmpsl
sbb
pop
adc
mov
out
lock
iret
push
ficoml
cmpsb
adc
mov
mov
pop
inc
leave
fldenv
pusha
push
mov
push
xchg
pop
mov
fdivrp
mov
les
xchg
add
lods
fs
inc
mov
loope
fistpll
add
mov
mov
dec
dec
sub
outsb
cmp
lcall
push
pop
inc
cmpsb
imul
add
in
push
fbld
mov
jmp
das
push
es
and
inc
es
movsl
xlat
stos
push
jle
ja
sbbl
jmp
xor
sub
jge
adc
add
dec
mov
jbe
xchg
pop
jle
test
pop
loope
push
jmp
dec
mov
mov
fwait
mov
add
lahf
mov
mov
popa
aaa
lret
inc
dec
cmc
out
test
jae
xchg
inc
mov
imul
pushl
nop
xchg
adc
mov
push
std
dec
lret
or
dec
jo
jp
outsb
or
lcall
pop
in
push
push
xchg
mov
xchg
xor
out
sub
pcmpeqd
add
unpcklps
mov
jns
jae
pop
js
testb
dec
push
cmp
cmp
fs
xor
cmp
or
xor
jg
cmp
cli
adc
rcll
adcb
sub
gs
popf
int
dec
mov
fnstcw
pop
sarb
cmc
js
fnstsw
sbb
idivl
adc
pop
pop
and
pop
lock
jno
scas
mov
les
xchg
jp
pop
inc
insb
mov
aad
mov
inc
ja
cmp
or
or
cltd
test
insb
je
sahf
sbb
sub
cwtl
cs
mov
jne
pop
js
and
in
add
out
cs
sbb
sub
test
loop
negb
lret
pushf
ss
or
xor
mov
mov
jbe
add
pushf
loopne
pop
dec
imul
jns
dec
in
xor
int3
out
arpl
cmpsb
lea
sbb
xorl
push
lret
inc
insb
insl
fabs
jge
pop
and
mov
push
jns
push
push
mov
add
adc
imul
mov
xchg
cmpsl
xor
adc
jns
mov
out
push
pushf
mov
or
enter
cs
adc
adc
jecxz
pop
scas
sbb
stos
mov
mov
cmpsb
xchg
xchg
das
aas
into
xor
lock
pop
repz
arpl
hlt
cmp
inc
addr16
fcomps
xor
mov
add
mov
cmp
movsb
cmp
call
add
inc
inc
jno
les
test
pop
push
pop
xor
or
hlt
std
inc
jbe
leave
arpl
test
xchg
nop
push
or
push
jl
aam
dec
xchg
es
fisttpl
sti
dec
pop
fstpt
je
and
push
pop
mov
inc
int
divl
aam
push
dec
pop
or
push
inc
xchg
mov
or
shll
pop
fmul
jo
imul
xor
xchg
mov
or
shlb
sub
dec
addr16
push
push
addl
jecxz
lods
scas
std
shll
sbb
push
mov
push
pushf
cmp
sbbb
jmp
in
std
fnsave
sbb
push
dec
mov
mov
cmpsb
cmp
addr16
adc
sarl
ffree
call
fwait
shll
add
xor
std
add
mov
dec
inc
mov
jae
cmpsl
ja
arpl
mov
sbb
jmp
push
jo
inc
rorl
cmpsl
es
mov
mov
fisubs
sbb
mov
adcl
insl
push
leave
aad
push
mov
into
xchg
outsl
xor
inc
mov
pop
mov
jo
cmp
les
adc
push
outsl
mov
push
xchg
inc
test
repz
adc
adc
fists
pop
adc
mov
mov
jp
pop
cltd
mov
outsb
mov
test
addr16
bound
add
rorl
insb
mov
fistps
mov
das
adc
jne
sbb
lods
hlt
das
aad
xor
mov
aam
jb
xchg
adc
jle
fcoml
mov
dec
sahf
sti
imul
sarb
pop
pop
cmp
sub
or
xor
jo
sti
pop
incl
movl
mov
imul
pop
inc
clc
mov
push
cmpsl
inc
pop
mov
aaa
inc
mov
cs
pop
stc
sahf
pop
addr16
dec
xchg
idivl
mov
paddusw
pop
into
push
loope
adc
fdivl
xor
or
int3
sahf
call
cli
jg
sbb
gs
pop
inc
mov
pop
shl
push
addr16
aam
dec
sbb
fcompl
repz
fnsave
xchg
hlt
lock
je
or
test
or
sub
shll
fs
dec
and
dec
mov
sar
popa
sub
dec
in
adc
and
jnp
mov
dec
rdtsc
ja
lret
outsl
sahf
push
xor
clc
out
sbb
jl
fldenv
mov
rcl
inc
or
mov
sub
cmp
cmp
sbb
or
test
lcall
sub
add
xor
nop
mov
pop
movsl
lods
cld
xchg
call
enter
xchg
movsl
mov
jle
inc
xchg
cmp
movsb
repz
ljmp
stc
push
inc
clc
aas
pop
adc
sti
inc
aam
xchg
ret
sbb
or
int3
call
mov
mov
or
in
ds
dec
sub
push
outsl
shll
cld
push
adc
js
clc
mov
jg,pt
pop
inc
loope
cmp
mov
fistl
outsl
arpl
fisttps
xchg
and
lock
movsb
jecxz
mov
and
in
dec
movsb
push
insb
jp
pop
cmpsl
and
test
andl
cmc
inc
inc
dec
outsl
les
mov
mov
imul
add
adc
fs
jo
dec
fwait
inc
icebp
in
add
push
sub
jbe
mov
inc
add
int3
out
cmp
jne,pt
xor
or
lcall
lods
clc
jno
add
loopne
popf
adc
ret
imul
sbbl
mov
pop
cmp
xor
fwait
xor
pop
mov
aad
ret
sbb
pusha
pop
popf
add
jbe
mov
shlb
cmpsl
sbb
outsl
bound
push
jbe
popf
cwtl
cmp
pop
push
pusha
js
cmovnp
cwtl
outsb
pop
test
sub
mov
shll
popa
push
push
js
scas
sbb
jno
shll
push
mov
dec
decl
inc
dec
jae
xchg
or
sub
dec
incl
cwtl
outsb
aaa
repz
stos
sti
xchg
jg
cwtl
outsb
cmp
jnp
mov
lock
add
mov
sahf
lods
nop
jl
cmpsl
bound
jae
xor
mov
push
mov
fnstsw
push
jmp
aaa
in
push
pusha
or
sbb
cmpsl
divb
in
into
adc
xor
gs
adc
inc
sub
jne
cmp
notb
jl
movsl
push
insb
shl
dec
dec
xor
loopne
add
and
fstl
and
fstpl
mov
mov
mov
out
in
jae
cld
lret
adc
ss
cmp
mov
aas
fwait
jae
and
xor
in
adc
sbb
cmp
and
sub
pop
push
jae
xlat
push
pushl
sub
bound
lahf
xor
arpl
jbe
sbb
push
cmc
inc
mov
add
aam
dec
xchg
cmp
fcomps
cmp
adc
xor
cs
stos
stos
sbb
jae
inc
sbb
lahf
and
mov
aas
popf
add
xor
cmp
push
xchg
in
jge
fstpt
shlb
cli
cmp
es
lods
push
or
or
mov
in
invd
sti
cmp
push
out
xchg
mov
in
sub
cmp
sub
mov
icebp
sub
div
add
xchg
cmp
cwtl
sarl
mov
xor
ret
pop
ljmp
addr16
push
adc
iret
call
ss
out
popf
and
hlt
add
xchg
and
jne
dec
push
fwait
xor
cli
jg
sbb
stos
xchg
sti
jns
pop
adc
lods
lcall
mov
sub
mov
aad
rcrl
sub
jae
dec
insb
mov
leave
enter
cmp
jecxz,pn
test
mov
jae
or
call
cmp
scas
cmp
ss
in
mov
add
mov
mov
lods
mov
mov
adc
out
fldt
repnz
or
xchg
adc
cwtl
jb
clc
jmp
stos
mov
jns
pop
je
orb
xor
loopne
cmp
daa
push
fldcw
mov
sbb
jno
add
orb
cmp
stc
fneni(8087
cmpsl
push
pop
adc
ret
or
stos
push
sbb
and
push
xor
cmpsb
sub
movsl
insl
add
clc
loopne
mov
or
inc
add
xchg
push
jge
mov
cmpsl
push
pop
stos
push
and
pop
dec
movsl
lahf
nop
mov
loop
out
bound
fxch
xchg
and
movsb
bound
sub
in
mov
je
push
pop
mov
or
test
mov
fists
xchg
in
test
out
sbb
loope
xchg
je
aam
push
pushf
int3
int3
adc
stos
fcompl
add
sbb
or
cmpb
sbb
testb
pop
cli
sub
int
sub
cmp
jmp
jbe
stos
insl
mov
cli
push
push
adc
xchg
test
leave
sti
arpl
jmp
mov
fstps
sahf
int
or
add
scas
movsl
out
sub
movsl
pop
xor
ret
decl
jae
dec
or
ds
jb
push
cmp
jmp
mov
mov
and
sbb
cmc
movsbl
or
cmp
xchg
xor
mov
pop
cwtl
and
mov
movsl
cmp
mov
js
hlt
sahf
add
jns
xchg
push
ss
and
cmp
push
sub
dec
outsl
jge
stc
mov
pop
jne
clc
daa
mov
xchg
clc
inc
dec
dec
lahf
xchg
mov
cmpsl
cmp
inc
pop
je
xor
rcl
pop
enter
xor
scas
sub
ret
sub
cmp
sbb
js
push
xchg
cmpsw
xchg
xorl
cmp
aam
cmpsl
std
inc
adc
pusha
adc
jnp
pop
movsb
inc
mov
add
scas
add
lods
aas
jns
mov
fsubp
sbb
or
dec
stc
sub
inc
aad
lea
dec
popa
movsb
push
cmp
data16
ljmp
repz
leave
movsl
push
inc
mov
dec
rorl
popa
push
inc
mov
inc
fdivrs
mov
mov
aad
pop
ds
xor
test
jmp
pusha
dec
loope
es
mov
imul
loopne
push
jl
ret
out
sub
sarb
mov
push
mov
and
adc
dec
movsl
pop
jnp
cmp
jnp
mov
jge
xor
push
mov
in
adc
ds
mov
lahf
loopne,pt
lahf
cmc
and
cmp
or
xor
mov
or
pop
mov
mov
sub
inc
sarl
mov
mov
sarl
sbb
add
mov
or
push
xchg
mov
xchg
xor
fstpt
fxch
or
std
fs
in
mov
out
adc
add
jle
jmp
repz
mov
xchg
sahf
jmp
cmpsb
popf
mov
xlat
les
out
addb
fidivs
and
cmp
aaa
int
pop
out
jle
out
rcr
mov
push
daa
inc
sbb
mov
xor
mov
jae
lahf
pop
sub
mov
mov
test
sub
out
push
out
xchg
sbb
aaa
xchg
hlt
call
mov
ja
mov
add
xchg
iret
leave
sub
fcomi
xor
pop
lret
sub
mov
mov
or
aad
xor
fimull
mov
adc
movsl
fwait
imul
adc
pop
add
nop
pusha
aam
mov
xchg
sub
insl
adc
adc
adc
sti
jne
test
jnp
ja
add
mov
imul
in
popf
sti
sbb
add
jg
dec
push
scas
ss
data16
mov
in
mov
adc
into
sbbl
pop
cmp
add
add
jg
stc
cwtl
mull
push
push
mov
dec
adc
dec
pop
repz
dec
push
clc
mov
xor
stos
aas
iret
arpl
xchg
daa
out
jns
test
mov
pop
inc
enter
iret
push
fmul
inc
shlb
aaa
or
in
sahf
inc
jbe
pushf
jb
push
out
xor
sbb
in
jbe
arpl
pop
dec
cmp
xor
xor
fdivrs
and
push
xor
push
fnstcw
pop
lock
dec
cmpsb
stc
push
mov
pop
add
arpl
jl
aam
jp
in
add
out
fisubl
sbb
iret
cmp
repz
stos
in
cmpsl
sarl
leave
loope
or
sub
idiv
adc
mov
pop
cwtl
pop
add
xorl
rclb
pop
in
repz
bound
lahf
popa
xor
int
jp
pop
sub
mov
mov
aaa
and
mov
es
xchg
ja
mov
push
jmp
inc
mov
adc
push
jne
sub
jmp
iret
out
ret
nop
adc
xchg
dec
xor
loopne
mov
lods
clc
fdivl
ffree
push
mov
and
jb
push
insb
mov
les
lea
jmp
jne
mov
lfs
jns
or
iret
xchg
jae
xor
fisttps
movb
and
loop
aad
xchg
sub
jnp
mov
sbb
pop
shlb
xor
ret
adc
fcomi
cmp
or
jnp
add
inc
mov
inc
cmp
fsubl
xchg
imul
subl
lahf
fmull
push
pop
fidivrs
ds
pop
lods
pop
cmp
aaa
imul
pushf
fmuls
mov
adc
inc
pop
test
sub
cmp
adc
pop
aaa
and
mov
sti
mov
out
out
mov
fcomi
sbb
inc
and
popf
sub
lds
add
mov
ret
jnp
sbb
cmp
adc
sub
out
in
mov
adc
rcrl
pop
cmp
insb
or
xchg
mov
sub
mov
repz
push
mov
stos
popa
loopne
mov
sahf
xchg
hlt
cs
mov
pop
outsb
pusha
jg
imul
lods
repz
cmp
jnp
mov
pop
dec
ds
jne
loop
ret
cmp
or
jnp
loopne
pop
lahf
sub
loop
fcomps
mov
inc
popf
ds
sub
es
sub
lds
sub
sbbb
mov
mov
sbb
test
aad
or
mov
jb
notb
es
iret
and
xchg
cmp
out
cs
lret
cmp
push
jge
mov
push
xor
mov
lcall
bound
fwait
lods
sbb
xchg
into
fdivl
xchg
lds
pop
repz
iret
std
mov
xlat
popa
clc
xchg
mov
push
bound
or
movsb
fidivs
cmp
jle
loop
xchg
cmc
bound
lahf
sbb
cli
inc
mov
jns
push
push
stc
mov
push
mov
hlt
dec
in
add
and
mov
in
jge
ret
inc
cwtl
inc
pop
jb
les
inc
rorl
in
popa
jo
xchg
mov
scas
in
mov
cmp
xchg
jns
mov
dec
mov
and
xor
daa
test
paddw
scas
scas
stos
sbb
xor
mov
push
fdivrl
adc
push
adc
icebp
mov
xchg
mov
xor
bound
jl
lods
inc
sub
movsl
data16
pop
mov
add
dec
dec
mov
mov
loopne
push
rcrb
scas
into
or
inc
pop
hlt
loopne
jae
push
xchg
scas
dec
sub
and
push
pop
test
sbb
jne
push
pop
inc
dec
hlt
push
adc
jne
pop
pusha
add
and
adc
gs
sub
pusha
push
jl
nop
dec
enter
pusha
dec
pop
or
xchg
cmc
mov
and
cmp
inc
add
cmp
loope
inc
gs
and
imul
shlb
mov
and
xor
repz
xor
js
in
cwtl
mov
pop
das
repnz
and
test
sub
sub
dec
sbb
add
aaa
popf
in
push
ja
movsb
pop
shll
aas
adc
xchg
mov
inc
xchg
pop
lods
fistpll
repz
bound
ja
and
mov
loope
mov
add
sub
push
out
loope
sbb
mov
dec
sub
mov
jg
shll
jg
test
dec
inc
pop
ljmp
sub
mov
or
cmp
lds
mov
cmp
idiv
inc
add
mov
out
andl
fs
sbb
push
xor
lds
fnsave
lret
std
push
or
push
sahf
mov
fidivrs
pop
test
std
ret
ficoml
adc
jecxz
jno
cmp
adc
fsubrl
ja
mov
or
leave
xor
imul
icebp
cs
jle
mov
xor
cmpsb
lcall
movsl
dec
lret
std
mov
cmp
mov
xor
testb
stc
jb
push
add
xor
and
jo
push
ss
popf
push
out
scas
add
cmp
imul
sbb
sbb
jnp
cs
or
orl
mov
call
sbb
xchg
fsubrl
xchg
jp
or
and
xor
mov
inc
jge
cmp
loop
jl
lods
xchg
xor
fstl
das
mov
arpl
popa
repz
inc
adc
pushw
pop
mov
dec
loope
push
mov
mov
adc
push
dec
add
cmp
mov
xor
jmp
xor
mov
pop
inc
jo
aad
mov
movsl
loop
mov
push
jbe
jo
loope
shr
jp
or
and
jmp
pop
decb
xchg
sbb
div
push
add
cmp
xchg
lods
leave
daa
adc
xchg
fiadds
jnp
or
xor
and
in
es
aad
xchg
in
shrb
sub
mov
loope
out
push
xor
stos
mov
and
cmpsl
inc
outsb
push
cmpl
sbb
clc
in
and
out
sbb
aam
cltd
insl
cmp
mov
mov
mov
dec
pop
lea
xor
sbb
popl
xchg
fisttpll
push
out
or
call
ja
pop
and
dec
mov
stc
sbbb
fwait
dec
mov
cmp
push
ds
out
xor
dec
fimull
pop
pop
testb
js
sbb
push
repz
jnp
xchg
and
jge
or
push
xchg
stos
inc
gs
das
mov
add
push
cmp
mov
push
cmp
xchg
insl
push
sbb
iret
imul
mov
int3
fmul
cmp
pop
and
mov
lcall
xchg
pop
imul
stos
test
bound
clc
mov
inc
jo
mov
movsb
and
movb
nop
into
xor
rol
jge
nop
adc
cmp
icebp
ljmp
sbb
les
mov
sub
cmp
add
xor
loopne
je
mov
fs
adcl
fisttpl
les
sbb
mov
mov
mov
push
aaa
xchg
in
sbb
jne
sub
mov
mov
bound
les
jmp
arpl
pop
push
test
incb
jmp
push
sub
cs
and
cltd
mov
dec
out
data16
dec
rclb
cmp
aas
fidivrl
inc
fsubs
pop
jecxz
jbe
adc
xor
aas
sti
xlat
pop
sahf
dec
and
xor
cmp
int
push
sub
sub
mov
or
jno
test
lods
das
push
xchg
push
stos
cmp
xor
xor
hlt
fsubrl
push
adc
sub
sub
push
int
mov
mov
fwait
sub
out
jno
mov
cmpsb
jnp
das
ret
inc
fdivp
add
cld
fdivp
xor
stc
xchg
daa
pop
and
cmp
frstor
jns
push
jns
cmpsb
gs
ss
mov
cmpsl
shll
adc
or
test
in
pop
dec
ja
test
stos
sub
gs
jo
adc
push
in
cmp
loop
in
scas
xchg
cmpsl
mov
ret
xor
test
addl
lcall
data16
adc
aam
stos
add
add
imul
aad
orb
shrb
out
cmp
inc
les
pop
loop
clc
jnp
xchg
jns
dec
fs
sub
pop
mov
cmp
ficoml
ds
xchg
cmp
pop
sub
ficoms
push
cmp
mov
movsl
dec
incl
imul
lock
imul
dec
shlb
push
sarb
lret
lods
jmp
inc
test
mov
rclb
sbb
fldenv
jae
mov
mov
test
lcall
dec
insl
mov
lcall
inc
push
or
insl
notb
stos
adc
pop
pushf
aas
out
lret
dec
sub
mov
mov
fnstsw
sahf
dec
dec
adc
add
push
xchg
xchg
ja
test
cwtl
leave
fcoml
pop
pop
sbb
mov
sub
adc
push
adcb
mov
icebp
push
insw
or
scas
in
divb
aam
pop
in
popf
adc
ss
cmpsb
dec
and
int
les
fcoml
into
scas
sub
jns
int3
push
les
movsb
cmp
mov
jnp
mov
and
cmp
ret
sub
ljmp
stc
xchg
xor
in
push
adc
ss
dec
sti
cmp
loope,pt
xor
pop
xor
hlt
mov
ljmp
inc
push
and
jecxz
insl
pushf
cs
cwtl
in
lock
loope
addb
dec
test
lret
adc
js
shrb
adc
dec
lds
push
push
das
div
ja
cmp
sub
int3
or
jo
stc
push
arpl
fildl
inc
shrl
stos
cmp
push
ficoml
pop
mov
jo
fldcw
imull
lock
sub
inc
ret
mov
inc
pop
stos
in
mov
xor
test
fcos
adc
cld
aad
mov
sahf
xor
mov
pop
sub
jbe
add
inc
push
cltd
mov
inc
test
pop
mov
jge
push
cmp
mov
pop
mov
or
mov
mov
push
and
sarl
sbb
add
adc
xlat
cmpsl
in
andl
pop
xor
in
ret
and
aaa
xchg
int
pop
xor
adc
mov
cltd
push
scas
lods
popf
movsl
push
aaa
push
pop
add
aas
mov
pop
and
loopne
adc
cmp
sub
fdivs
leave
jecxz
aad
mov
lods
shlb
ret
std
mov
fs
mov
decb
adc
pop
nop
jae
push
nop
out
shl
sbb
mov
jge
push
inc
and
add
lods
popf
inc
adcb
cld
in
shl
jge
mov
pop
fbstp
adc
gs
mov
jl
inc
dec
sbb
rclb
push
dec
and
pusha
mov
bound
dec
pop
mov
arpl
xchg
test
and
mov
adc
aad
addr16
sbb
xchg
stc
ret
and
pop
sahf
into
js
add
inc
nop
mov
loopne
je
xchg
sub
lods
xchg
popl
cltd
jl
imul
sbb
arpl
loopne
adc
out
dec
cmp
sbb
mov
test
aam
sbb
adc
add
and
jns
push
js
dec
repz
dec
fdivp
dec
mov
out
sbb
call
inc
add
arpl
jnp
popa
filds
in
fs
int3
mov
insb
insb
dec
pop
gs
mov
mov
sub
pop
cltd
jo
or
add
jge
ffreep
jno
push
mov
mov
jg
fsubr
cli
dec
xchg
jnp
sahf
pop
inc
dec
mov
insb
test
sub
nop
mov
jge
xor
insb
adc
shll
lahf
sub
mov
mov
add
pop
ret
jg
xchg
bound
or
mov
and
push
mov
sbb
push
dec
xchg
push
ret
mov
outsl
ret
cmc
dec
shl
push
ja
pop
adcb
adc
bound
lods
addr16
mov
shll
jecxz
lret
jo
mov
cmp
out
inc
xorl
icebp
mov
adc
mov
mov
jmp
dec
dec
mov
jge
cmpsb
cmp
aad
pop
imul
bound
cli
idivl
mov
in
popl
adc
lahf
push
lret
and
outsb
dec
lea
stos
sarl
push
mov
out
ficompl
in
or
xor
dec
push
sbb
or
outsl
es
test
lahf
add
mov
inc
imul
imul
in
clc
mov
jl
fidivs
and
dec
jp
xor
xchg
lret
lcall
or
mov
jbe
iret
xchg
xor
sti
jecxz
out
jo
sub
enter
and
inc
dec
je
lods
les
ficompl
rcr
and
dec
pop
sub
test
sbb
mov
xor
xchg
sbb
xor
loopne
movsb
inc
mov
not
sub
inc
call
xor
mov
push
movsl
add
mov
dec
mov
xchg
wbinvd
fcoml
inc
ficoms
or
jb
dec
xor
pushf
cltd
lock
xchg
mov
mov
xchg
and
mov
mov
mov
decb
cmp
cmp
movsl
outsl
gs
push
movsl
dec
ret
aad
inc
dec
gs
mov
leave
mov
loop
ljmp
filds
sahf
sub
mov
ja
dec
imul
mov
add
pop
hlt
mov
pop
ja
testl
and
jle
sub
out
sahf
sti
mov
mov
arpl
cmpsl
mov
sti
xor
in
in
lcallw
cmpsl
add
sub
mov
pop
mov
jbe
mov
jmp
sbb
and
addr16
arpl
cmp
push
cmp
cli
add
dec
enter
and
and
cs
mov
mov
push
aam
dec
popa
sub
cltd
fdivrl
mov
lret
bound
sub
lods
fbstp
iret
lret
shlb
in
loope
dec
imul
and
push
nop
ljmp
cmp
or
dec
mov
mov
arpl
xchg
in
push
jae
imul
fldt
int3
enter
in
sti
sar
call
mov
cmp
out
push
jae
out
sub
outsb
das
into
cwtl
dec
push
sbb
adc
negb
scas
jae
ror
cmp
xchg
xchg
mov
mov
mov
mov
lret
jmp
cmp
insl
mov
pop
andl
out
xchg
xor
mov
pop
test
arpl
cmp
hlt
and
jns
adc
push
sti
dec
ja
aas
jg
clc
inc
pop
in
mov
ss
fstpt
clc
cmp
cmp
sbb
lea
arpl
sub
adc
pop
or
cmpsb
test
iret
add
dec
rcrl
dec
in
sbb
cmc
js
jae
xchg
and
push
jb
insl
xor
repnz
cmpsl
jb
test
cmpsl
imulb
test
and
add
aaa
cmp
stc
mov
cmpsb
shll
sub
popf
mov
pushf
into
cmp
stc
sub
add
js
loope
movsl
cmp
mov
mov
in
sub
inc
cmp
push
jl
xchg
dec
pushf
and
xchg
pop
popf
lds
out
fsubrs
cmp
push
jmp
mov
jns
push
mov
push
cmp
mov
addr16
push
out
sti
jle
and
xchg
push
test
outsl
push
sahf
addr16
cmpsl
cmp
and
sarl
aaa
mov
test
cs
mov
adc
icebp
sti
xor
cs
adc
dec
dec
pop
push
andb
cmp
xchg
orb
mov
or
lahf
sub
xchg
jl
mov
or
xor
shll
xchg
test
ret
negb
push
or
cmp
rcr
ljmp
and
ds
sub
or
mov
adc
mov
subl
fisttpl
enter
push
test
leave
addr16
lret
test
aam
negb
lahf
add
mov
nop
mov
or
jl
out
mov
jae
call
sub
push
cltd
outsb
jl
clc
stos
aad
jns
cli
gs
repz
mov
and
xchg
sahf
fs
mov
xor
bound
jne
andl
dec
cs
pop
ret
shll
ret
insl
loopne
sub
mov
dec
fstps
add
mov
bound
bound
adc
rolb
roll
inc
lods
leave
jo
movsb
and
lock
out
mov
mov
lahf
ret
test
jmp
mov
test
fwait
mov
add
dec
jnp
lea
addr16
test
arpl
mov
add
enter
adc
jmp
cmpsl
jo
dec
pop
lahf
fld
std
xchg
mov
mov
sbb
filds
pusha
or
or
stc
jns
and
je
cmp
mov
xor
pushf
dec
sbb
idivl
xor
dec
pop
add
sub
fcoml
push
roll
add
daa
les
aas
push
jne
mov
outsb
aad
sti
push
mov
pusha
adc
cmp
and
push
cmp
push
pop
inc
and
xchg
lods
sbb
or
mov
addb
stos
mov
push
cmpsl
pop
lds
add
pusha
ret
aas
xor
add
jb
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
and
jne
add
fbstp
xor
mov
cmp
or
cli
ljmp
cmp
scas
add
ja
push
cmp
ret
push
xor
dec
cmp
out
xor
add
add
add
popa
jo
fs
push
stc
sti
jg
hlt
inc
iret
and
dec
js
inc
mov
insl
imul
add
mov
test
test
mov
and
aam
call
add
imul
or
mov
out
adc
mov
je
or
call
sbb
inc
and
jns,pt
add
call
lcall
or
xchg
aad
jmp
rclb
or
add
out
rcrb
pop
inc
aaa
mov
fcmovb
inc
fcomps
or
push
inc
mov
cmpl
mov
or
ret
or
arpl
fsubl
es
ret
push
add
dec
inc
mov
mov
movl
ret
mov
inc
mov
push
add
jecxz
daa
sub
add
mov
mov
stos
aaa
andps
ror
invd
dec
cmp
add
and
bound
mov
mov
jb
rcrb
cmp
sub
aas
popa
jmp
adc
test
and
pop
stos
jmp
jp
and
jle
jl
or
jl
adc
pop
cmpsb
pusha
dec
sbb
push
push
xor
testb
mov
and
sbb
test
jae
outsb
cmpsb
sarb
subb
ret
push
mov
push
pop
pusha
mov
xor
and
aaa
add
jne
mov
out
or
xor
loopne
pop
rorl
roll
add
add
push
and
jne
mov
mov
add
adc
movb
test
xor
jns
mov
add
lret
push
call
movsl
imul
mov
and
xor
add
mov
push
adc
dec
rolb
out
add
xor
cmpsl
lret
lock
je
add
fcoms
cmpb
jne
and
je
add
cmp
mov
jg
shl
sub
fadds
pop
test
je
mov
dec
add
ret
sub
pusha
int3
push
pop
pop
pop
mov
fsub
push
cmp
add
adc
orb
je
or
and
adc
jbe
sub
jp
inc
adc
jp
push
jmp
and
clc
int
or
jge
sbbl
add
inc
rep
jmp
pop
push
clc
pop
insl
enter
push
hlt
test
dec
shll
lock
cmp
loopne
jb
shrb
fisttpl
sti
lock
or
ja
jmp
xchg
and
cli
or
or
pop
dec
ret
or
or
or
aaa
and
test
pop
lock
add
mov
shlb
cltd
stos
es
pop
cmp
cmp
jb
mov
stos
cmp
mov
mov
cmova
sbb
mov
mov
xorb
add
loope
cmp
aas
ss
fmull
in
pop
stc
add
sbb
mov
mov
xor
xchg
std
mov
xor
clc
cmpb
dec
pop
jbe
adc
sarl
cmp
inc
push
jne
cs
gs
push
push
cmp
push
lds
inc
push
orl
divl
repnz
or
mov
or
out
iret
push
in
or
mov
xor
and
out
int3
lcall
sub
xor
add
icebp
shlb
or
add
in
sete
jle
add
test
xor
inc
mov
push
out
or
out
xor
out
jno
sub
inc
push
loopne
cmpsl
mov
les
dec
and
adc
cmpsl
xor
test
adc
adc
pop
sub
aad
xor
mov
adc
adc
inc
mov
add
pop
and
xchg
mov
ret
or
and
push
les
ss
mov
enter
pop
les
sbb
inc
push
add
add
jmp
adc
out
fildl
test
pop
jmp
ljmp
sbb
outsb
sti
sub
dec
in
add
lret
addr16
cmp
jmp
pop
mov
sub
mov
push
mov
pop
les
inc
imul
add
stc
in
mov
lds
pop
ljmp
mov
jo
push
sbb
pop
test
sbb
dec
insl
aam
dec
lahf
mov
sbb
add
and
jmp
mov
sub
add
sbb
push
fisttps
rcrb
outsb
cmp
pushf
iret
cmpl
out
fsubr
mov
jns
jb
mov
or
cmpsb
lret
pusha
or
mov
hlt
ficoml
and
sahf
xor
pop
add
fldcw
add
je
inc
cmpsb
pop
addb
movsl
std
jae
sbb
mov
cmp
jmp
cmpsb
insl
adc
std
add
add
adc
pop
cli
cltd
fmul
inc
jmp
lea
addr16
push
sbb
and
mov
cmp
popf
loope
inc
xor
mov
movsl
add
mov
pop
add
dec
pop
lret
ljmp
lds
inc
repnz
xorb
mov
sub
ds
orb
xor
cmp
jl
cmpsl
popf
cmc
and
jle
add
in
mov
outsb
addr16
mov
sbb
aad
sti
testb
add
ret
bnd
add
cltd
xor
es
dec
xchg
push
xor
sbb
jo
and
das
inc
add
icebp
pop
mov
pop
mov
or
sub
add
mov
pop
lea
arpl
pop
xor
jg
sbb
mov
clc
shlb
test
pop
add
push
push
jns
pop
cltd
add
lahf
ret
fldl
cmpsb
cmc
adc
jno
add
out
mulb
ficoms
push
inc
and
inc
add
ret
push
loop
stc
fisttps
mov
subb
jl
pop
add
mov
or
shrb
insb
push
loop
add
push
loope
push
dec
and
repz
xchg
test
std
je
pop
xchg
loopne
sahf
lea
sbb
adc
add
mov
movb
push
xor
cmpsl
inc
jge
push
ret
rorb
xchg
sti
sbb
pop
rclb
outsl
popf
ds
jb
inc
jg
add
aam
adc
sbb
mov
jle
or
and
sbb
xor
je,pn
mov
fldcw
test
push
push
repnz
push
bound
sbb
or
sub
int3
jecxz
sbb
mov
sbbb
mov
fldenv
sar
sbb
inc
pop
sar
dec
sbb
ljmp
inc
xchg
inc
inc
xor
xor
push
or
or
adc
cli
test
adc
iret
rorb
add
and
outsl
push
scas
add
xchg
imul
push
add
ds
push
push
outsb
or
hlt
push
jne
pusha
js
ss
or
das
xchg
and
rolb
pop
push
sahf
push
ds
add
inc
sbb
test
sbb
push
xchg
jb
jns
sub
add
insl
stc
rorl
pop
mov
push
xor
jg
adc
fadds
add
clc
jne
push
xchg
mov
pusha
mov
aas
in
sarb
or
cmovbe
cmp
add
mov
inc
outsb
sbb
popa
call
jp
and
or
mov
repnz
cmp
js
stos
mov
add
and
push
or
cmp
mov
adc
push
jae
dec
ficoml
adc
and
adc
cmp
test
sarb
dec
pop
mov
mov
jb
fnstcw
add
js
dec
jl
addb
scas
or
lds
mov
insl
icebp
int
jno
mov
ja
add
dec
dec
or
stos
jne
out
int
push
icebp
adc
and
cmp
rorb
xor
add
xchg
xchg
es
cmp
jns
sub
mov
sbb
push
pop
add
xchg
aas
in
nop
mov
adc
inc
rorb
mov
cli
dec
add
inc
fs
dec
sbb
jne
in
inc
mov
adc
roll
and
xorl
mov
dec
push
out
sub
adc
add
mulb
dec
xorl
push
cld
in
add
cmc
jg
enter
xlat
icebp
std
out
mov
sub
out
movsb
add
lcall
xor
push
loopne
cli
or
xchg
mov
test
adc
repz
inc
xorb
into
add
psubw
adc
or
xor
clc
push
push
pop
mov
in
add
hlt
ds
xor
push
stc
dec
jb
lds
push
push
pushf
cmp
orb
cli
mov
cltd
mov
pushw
and
mov
inc
imul
mov
push
push
call
inc
and
and
addr16
jns
inc
into
sub
repnz
add
enter
nop
enter
add
cmp
xor
and
add
outsb
cld
adc
imul
pop
push
cmp
shl
push
aaa
stos
pusha
mov
dec
addl
test
xchg
and
dec
add
loopne
cmpsl
add
xorl
add
rolb
add
lock
mov
sub
shrb
idivb
xchg
inc
cld
and
mov
in
and
mov
nop
cmp
push
jle
adc
or
add
repz
lcall
or
add
cmp
sub
jno
and
pop
sub
dec
push
stc
cmp
xchg
and
jo
loopne
out
push
ja
xor
add
adc
pusha
push
mov
add
add
jbe
xorb
clc
mov
repnz
add
add
nop
dec
loope
add
hlt
xor
add
movsl
dec
push
jg
sahf
and
std
add
add
outsb
push
adc
push
test
cld
xchg
pop
or
addb
das
dec
add
sub
and
cmp
cmp
adc
pop
lods
sbb
jmp
mov
add
cmp
lock
cmc
enter
mov
mov
leave
ljmp
adc
mov
adc
sbb
dec
mov
in
dec
add
shll
xor
or
xchg
sbb
popa
scas
shl
mov
sarl
leave
dec
andb
jmp
or
xchg
sub
inc
push
bound
push
clc
and
xor
icebp
adc
pop
lods
cmp
shrb
pop
mov
fadd
jb
mov
fadds
fsubs
and
add
adc
mov
and
add
mov
mov
sbb
lahf
rcrl
and
xlat
sbb
outsl
push
xchg
subb
out
xor
add
les
sbb
in
mov
mov
and
inc
fstpt
jge
iret
xchg
adc
add
fisttps
mov
dec
push
adc
dec
adc
adc
add
bound
adc
addr16
pusha
sahf
jbe
pop
add
add
aaa
dec
pop
in
aas
loop
adc
and
mov
sti
rorl
sub
rolb
loope
jno
xlat
push
sbb
xchg
test
stc
sub
shrb
xor
push
icebp
inc
mov
xchg
adc
pushf
cmp
inc
xchg
outsb
pop
lahf
jae
dec
les
push
pop
cmpb
xor
mov
cmp
mov
xchg
cld
dec
ljmp
or
jo
sbb
add
lds
jb
pop
data16
pop
int3
xor
add
adc
movsb
je
popa
pushf
nop
repz
xor
js
or
mov
fwait
pop
add
lods
int3
inc
test
push
lcall
xchg
outsb
inc
bound
loopne
std
in
clc
mov
fdivs
adc
xor
mov
adc
lahf
mov
cli
add
lcall
mov
mov
pop
dec
and
and
or
mov
xchg
fnsave
push
mov
mov
push
std
aam
ficompl
mov
repnz
jne
jl
add
mov
pusha
add
filds
cmp
repz
pop
jnp
jl
bound
xchg
loop
scas
xor
ret
push
pop
jl
inc
jbe
lock
subb
jno
shlb
xor
mov
nop
fadds
xor
mov
mov
popa
push
mov
mov
inc
sub
mov
jl
shrl
lock
or
mov
jecxz
add
les
mov
call
cs
sub
jle
xchg
add
and
inc
sub
or
mov
pusha
adc
inc
lahf
iret
cmp
sahf
int3
cmp
test
add
mov
rolb
mov
add
cmp
repnz
jns
push
add
and
aad
call
hlt
psubsb
pusha
sbb
xchg
in
cmp
cli
mov
sbb
dec
loope
cmp
movsl
xor
pop
jbe
mov
sahf
loopne
add
xlat
in
mov
push
inc
jne
jns
adc
stc
popf
add
mov
push
add
and
fildl
ret
push
and
pop
adc
dec
mov
add
sub
faddl
adc
push
loop
adc
and
mov
jl
jg
add
fmuls
jne
aaa
sub
scas
iret
xor
pop
int
inc
das
push
sarb
nop
aad
add
adc
add
loop
adc
push
jp
xorb
pop
cmp
or
es
sub
negb
jo
jbe
in
popa
pop
inc
daa
pushf
xchg
fiaddl
orb
cmp
and
add
out
jle
jbe
add
jns
pushf
push
lahf
or
xor
lret
outsl
xor
stos
lock
and
inc
or
pop
add
push
inc
xor
pop
or
subb
jae
add
xchg
cmc
fimuls
jp
stos
into
orl
roll
cld
push
loop
add
xchg
loope
and
in
jns
xchg
pop
dec
lods
shll
roll
inc
xor
jb
adc
xchg
add
jne
popf
sbb
roll
test
jns
jae
pop
stos
lods
jno
cmp
inc
rorl
add
icebp
ss
daa
dec
inc
push
add
jne
dec
xor
cmp
nop
dec
sub
pop
sub
fisubrs
sbb
inc
pop
xchg
and
popl
mov
pop
stos
pop
rolb
pop
add
xchg
pop
inc
sbb
pop
cmp
test
mov
cltd
ds
mov
add
nop
fistpll
dec
jg
and
mov
ficoml
nop
xor
sub
mov
mov
xlat
push
and
jge
pusha
sti
cld
pop
outsb
lock
loopne
sbb
jne
sbb
pop
mov
dec
inc
test
mov
sbb
push
lock
mov
repz
roll
jecxz
add
das
inc
mov
or
int3
jge
stos
inc
xor
shl
daa
add
cmp
loopne
imul
add
and
shrb
inc
mov
sbb
popa
js
xor
and
addr16
jmp
mov
adc
xchg
lahf
jnp
or
data16
bound
xchg
and
mov
adc
stc
movsb
mov
add
insb
push
cmp
gs
xchg
test
clc
mov
dec
adc
inc
lahf
xor
mov
jo
mov
push
fldl
outsl
pop
clc
lahf
sbb
dec
stos
cmp
les
andb
or
aaa
stos
cmp
sub
lods
mov
and
imul
adc
xor
rolb
lcall
movsb
adc
aaa
mov
sbb
xor
fldenv
inc
xor
adc
mov
loopne
gs
loop
jg
ret
les
jbe
je
pop
stos
in
mov
add
jg
lahf
add
pop
push
ljmp
cwtl
mov
cmpsb
add
test
push
add
sub
adc
loopne
or
add
incb
push
jo
movsl
nop
push
add
jp
sbb
imul
add
mov
adc
sub
jo
or
cwtl
and
adc
sub
jle
sub
int3
push
and
add
std
test
or
dec
icebp
or
je
ja
stos
and
xchg
xor
add
out
and
fldcw
mov
outsb
or
rcrl
push
in
xchg
loope
cwtl
addb
pop
jo
cmpsb
dec
movsb
lock
mov
orb
mov
mov
imul
mov
pop
jb
dec
jno
jge
test
cmp
test
pop
repz
or
sbbb
push
add
push
rol
loop
shl
aas
xor
or
push
rorl
add
loopne
aad
inc
push
push
pop
mov
mov
lcall
xchg
imulb
jmp
cld
ja
addr16
nop
andb
mov
in
mov
cmpsl
enter
inc
xor
add
add
in
add
pop
sarl
jecxz
mov
in
push
sub
or
jo
arpl
imul
jl
jb
bound
add
sbb
mov
rolb
fadd
jne
or
add
jno
aad
sbb
push
loopne
and
aaa
push
insl
inc
inc
add
jg
push
pusha
in
js
inc
add
cmp
and
add
shll
sbb
add
sub
incl
mov
lahf
adc
repnz
popf
leave
cmpsl
add
pushl
push
push
adc
test
pop
sub
cmp
push
mov
mov
addb
sbb
fisubl
mov
fcmove
cmp
xorl
push
cmp
adc
and
cmp
jmp
ret
xchg
sub
daa
dec
dec
inc
push
and
mov
cmp
fmuls
pusha
cmpsl
inc
sahf
insb
std
xlat
in
cwtl
cmp
push
aad
loopne
loop
add
arpl
xchg
stos
jge
call
mov
mov
roll
insb
icebp
fisttpll
clc
lcall
into
jmp
loopne
stos
rcrb
shlb
inc
cmpsb
orl
pop
xorl
in
out
xchg
xor
mov
js
aam
sub
pusha
dec
ficoml
and
ss
fcmovbe
loop
fcomp
mov
test
dec
orb
lret
loope
or
or
or
push
out
xchg
cs
mov
pop
xchg
push
rorl
xor
mov
gs
nop
mov
sbb
rorb
inc
test
or
test
rcrb
and
add
pop
outsl
sbb
jecxz
inc
icebp
test
out
call
pop
test
mov
add
push
adc
jp
jae
nop
cld
sub
push
jo
repz
add
inc
test
pop
cmp
cwtl
jo
and
mov
mov
inc
push
push
stc
xor
jecxz
cmp
popf
add
push
jb
dec
cmp
mov
mov
es
inc
call
test
fnstenv
icebp
xor
add
iret
xadd
and
xchg
push
out
cmp
cli
cmp
xchg
addb
pop
scas
xchg
loope
je
cmp
fwait
push
sbb
pop
xchg
mov
pop
std
ja
add
push
add
jge
jl
sarl
sahf
xchg
call
notb
adc
xchg
pop
addr16
mov
jnp
int3
mov
orl
je
adcb
xor
xchg
sbb
lahf
mov
imul
pop
mov
and
or
jp
sbbl
lods
popf
mov
out
sub
jecxz
aaa
inc
add
aad
xchg
mov
adc
add
inc
adc
add
sarb
pop
dec
xorl
push
and
dec
lock
and
adc
add
mov
cmp
cwtl
adc
outsl
xchg
orb
or
pushf
sub
in
cld
jl
sbb
add
arpl
inc
in
add
sti
repz
pusha
xchg
add
loop
pusha
pop
xor
mov
adc
xor
in
int3
sub
push
mov
push
addl
inc
pop
shlb
int3
js
sbb
leave
xchg
inc
lea
adc
xchg
enter
pop
mov
movsl
xor
cmp
pop
xchg
mov
jl
push
cmp
lcall
xor
leave
incb
push
icebp
ret
and
xchg
pop
adc
xchg
fsub
clc
xchg
adc
gs
sub
xchg
push
or
insb
and
xor
ljmp
and
test
lock
aas
xchg
sub
enter
iret
xor
cmp
or
notb
stos
adc
leave
jns
lret
push
add
and
pop
xorb
sarb
add
xchg
mov
mov
lods
push
push
mov
test
adc
scas
lret
movsb
enter
sar
das
divb
ret
fidivrl
je
and
movsb
aam
mov
cli
or
out
jns
call
mov
mov
mov
push
jne
inc
fs
stc
xor
in
adc
lea
jg
cmp
adc
mov
popa
jns
lret
std
push
sarl
rcr
ret
inc
xor
js
movsb
xorl
mov
mov
push
stc
add
fcmovbe
imul
mov
jg
das
jle
mov
cmp
mov
inc
xor
inc
mov
lea
xor
pop
rolb
xchg
test
clc
push
int
mov
sub
sub
ljmp
fdivrs
adc
int3
adc
bound
sub
imul
add
or
repz
repnz
mov
pusha
sbbb
pop
push
mov
lea
test
test
inc
movsl
xor
xor
test
adc
outsl
bound
adc
cmp
fmull
test
es
lock
inc
arpl
lock
nop
fsubl
xchg
jb
pusha
cmp
and
mov
lods
mov
or
or
add
or
add
push
incb
faddl
sahf
test
aaa
cmp
lret
mov
sbb
mov
sub
fmuls
push
mov
jnp
push
aaa
mov
add
in
loopne
add
pushf
les
cmp
or
xchg
negb
add
xchg
outsl
cmp
rcrb
add
mov
mov
pop
mov
xor
flds
pop
movsb
add
lock
push
pusha
adc
fistpl
sarb
xor
andb
pushf
sbbb
ret
sahf
push
popa
enter
add
popf
test
sbb
popa
lock
mov
sbb
inc
test
sub
lret
sbb
add
sahf
nop
inc
push
inc
mov
cmp
inc
outsb
or
test
mov
dec
push
in
add
xor
ds
mov
sbb
fimull
and
pop
cmp
iret
or
stos
cmp
test
add
cmp
xchg
or
hlt
xchg
mov
push
mov
std
push
jo
sahf
mov
xor
fs
sub
adc
cmp
addb
dec
shl
lcall
sbb
adc
add
add
mov
rcrb
cmp
in
jl
mov
mov
xor
cmp
icebp
mov
xor
push
cmp
mov
push
lahf
in
addr16
addb
enter
or
cs
and
lock
es
push
pop
cmp
add
pop
sbb
mov
lock
mov
decl
adc
pop
dec
rorb
or
xchg
cmp
mov
shrl
cmc
push
ja
int
je
sti
pop
loopne
sub
sbbb
push
rcl
pop
orb
and
cmp
cli
rclb
xchg
jle
push
test
mov
les
xor
jg
insl
stc
pop
sbb
mov
xchg
sbb
mov
xor
loope
jo
movb
ficoml
mov
dec
dec
fcmovb
js,pt
add
mov
addr16
pusha
lods
loopne
sbb
stos
lods
xchg
outsl
test
inc
xchg
mov
adc
sbb
aas
cwtl
mov
xlat
lock
xchg
pop
nop
mov
les
shll
xor
push
addb
dec
jmp
xor
pop
mov
outsb
push
cld
mov
bound
add
mov
jle
int3
jne
nop
and
jo
nop
adc
lods
add
cmp
mov
sbbb
movsb
jbe
aam
addb
adc
enter
adc
mov
push
ljmp
xchg
mov
mov
add
mov
nop
add
xor
fistpl
out
fsubr
xchg
subb
mov
loope
loope
shlb
enter
shlb
mov
sbb
push
inc
mov
add
push
and
mov
adc
cmpsb
enter
jle,pn
test
inc
loopne
sbb
xchg
sbb
add
sub
push
pop
sti
shl
imul
inc
sbb
mov
mov
mov
bound
mov
sub
lock
faddp
mov
cmp
daa
push
pop
nop
adc
xchg
hlt
jg
nop
pusha
mov
das
and
cmpsl
add
mov
mov
ja
and
sub
mov
insb
rcrl
fimull
inc
sub
push
lret
jmp
out
icebp
ret
int
mov
cmpl
test
ret
mov
in
and
cmp
adc
jp
jl
lods
cmp
mov
xchg
sub
pushf
sbb
or
cmp
enter
out
jo
roll
cmp
xor
popa
lods
xor
or
ret
add
adcl
add
adc
push
lock
lods
and
mov
enter
jnp
mov
out
pop
add
ljmp
outsb
fisubrs
add
cld
insl
pusha
cmp
in
adc
xchg
xor
xor
add
xchg
orb
nop
cmp
jle
xchg
mov
adc
int
fsubr
xchg
mov
ror
insl
std
jae
and
cmp
push
rcrl
int3
lods
enter
ja
sbb
fsubl
insl
data16
adc
and
inc
lfs
pop
cltd
gs
cld
and
cli
add
dec
jbe
nop
jle
inc
test
mov
sub
sub
mov
mov
lock
pop
subb
pusha
inc
lock
test
sbb
dec
push
pavgb
int3
dec
loope
mov
xorl
dec
push
sub
xchg
jo
xchg
int3
jno
sbb
add
bound
sbb
mov
insb
gs
add
push
stc
lods
mov
push
test
in
cvttps2pi
inc
dec
test
cmp
aas
lods
pop
add
dec
call
xchg
add
pop
mov
cwtl
xor
lret
pusha
cmp
popf
jae
xchg
push
adc
sbb
dec
pushf
push
cwtl
add
xchg
orl
cmp
or
sbb
sahf
or
inc
xchg
add
mov
lcall
xlat
add
jge
mov
pop
push
add
popa
les
add
jl
cmp
scas
xorb
test
push
mov
cld
and
rorl
movb
pop
jp
xorl
andb
fistps
shr
xor
std
adc
and
loope
jmp
rcrl
sbb
scas
sub
cmp
sahf
cld
rcr
pop
jns
mov
xor
stc
xchg
cmp
rclb
inc
and
mov
cmp
jns
dec
add
popf
lods
xchg
sbb
adc
inc
cld
mov
adc
or
test
mov
pop
adc
cmp
push
stos
xchg
shrl
popa
and
rolb
adc
mov
adc
lea
or
push
lea
das
inc
mov
rcr
mov
cmp
loop
xchg
cmp
mov
adc
packuswb
sahf
rcrl
or
dec
lcall
loopne
andb
addr16
and
dec
xchg
inc
and
mov
add
sbbl
bound
inc
mov
mov
cmp
leave
fbstp
add
sub
out
add
dec
insb
inc
xor
popf
andb
inc
sbb
add
pop
xchg
push
push
mov
jb
push
inc
push
imulb
push
rolb
outsb
test
jne
mov
jl
sub
sbb
push
adc
push
xchg
push
add
and
mov
test
add
out
repnz
mov
mov
rclb
ret
adc
daa
testb
xchg
xchg
mov
lods
jecxz,pn
je
scas
add
iret
mov
mov
dec
or
lea
call
xor
mov
or
data16
pop
sarb
dec
adc
loopne
add
sar
sub
mov
add
repz
mov
add
mov
inc
icebp
ret
leave
inc
add
adc
adc
add
lret
mov
ds
icebp
lret
pop
adc
mov
lret
inc
out
test
daa
add
or
mov
and
jns
sub
push
mov
dec
sbb
xor
mov
sldt
rcr
inc
add
loope
and
xor
popa
jno
xorb
add
push
into
adc
xor
sbb
movsl
jg
imulb
lcall
cmp
xorb
out
mov
jb
dec
pop
sbb
addr16
fdivrs
or
dec
cmp
sub
xor
mov
test
mov
mov
rolb
push
jg
ret
push
xchg
mov
mov
repz
call
jg
ds
loopne
or
cmpsl
xchg
xchg
addl
sub
and
jmp
push
pop
test
shll
cmp
dec
sub
leave
cmp
jmp
and
inc
test
jns
pop
sbbb
add
arpl
adc
add
dec
ficompl
mov
xor
adc
inc
sbb
shlb
sbb
dec
hlt
add
jge
mov
std
sub
xor
orl
adc
jnp
adc
nop
movsb
mov
inc
or
adc
jno
adcb
cmpb
mov
stc
lock
rcr
add
insl
mov
jg
sbb
xrelease
aam
ljmp
sysenter
imul
or
out
jbe
adc
mov
inc
inc
int3
xchg
fnsave
add
jg
mov
pop
je
js
mov
add
inc
sbb
mov
out
lret
leave
xchg
dec
mov
cmp
mov
cld
push
enter
or
or
lcall
xchg
mov
add
sub
sub
and
sub
sbb
push
lods
pop
or
fdivl
and
jo
outsb
andl
add
into
add
lret
add
popf
inc
adc
stos
les
push
sub
pop
faddl
jecxz
int
dec
xchg
out
mov
pop
test
xor
add
xor
data16
add
out
scas
push
rol
cmp
mov
xchg
stc
cmp
mov
add
mov
insb
test
pop
dec
loopne
mov
and
mov
pop
int3
mov
sub
mov
push
repz
pop
mov
repnz
mov
xchg
mov
mov
pushw
mov
in
lods
orb
arpl
loope
je
adc
lods
rcl
add
push
loopne
sub
out
sub
mov
cmp
loope
scas
out
jg
daa
jp
dec
dec
inc
jo
jne
dec
aam
and
lcall
adc
inc
or
int3
popa
cmpsb
or
andl
and
loopne
and
xchg
outsl
add
cwtl
popa
shl
mov
aad
sbb
sbb
aas
xchg
push
cltd
lock
outsb
mov
outsb
and
jne
mov
add
into
cmp
mov
out
mov
loope
push
popfw
jno
push
fwait
test
cwtl
dec
in
outsl
jno
add
ss
aaa
int
mov
add
mov
sub
or
add
jbe
outsb
movsl
sahf
call
add
fcoml
adc
outsb
push
movsb
and
stos
jne
dec
fldt
inc
jge
movsb
clc
push
inc
pop
mov
rcl
mov
cs
fcmovnu
xchg
sub
mov
xor
xorb
and
or
js
daa
add
push
adc
subl
rorb
jnp
add
jb
cmp
xor
adc
clc
mov
and
filds
sbb
aam
dec
xchg
js
pushf
fcomi
mov
push
aam
or
mov
shlb
mov
daa
push
roll
pusha
icebp
push
mov
dec
xor
or
insl
sti
add
mov
je
std
inc
xor
pop
mov
das
mov
sbb
inc
insb
push
pop
aaa
int3
sarb
dec
push
shrl
mov
dec
xor
mov
pop
mov
stc
test
jo
fs
sub
mov
fcoms
das
clc
and
push
leave
adc
or
jns
jae
jge
ret
icebp
push
xchg
imul
jnp
or
mov
pushf
roll
push
or
mov
and
push
pusha
add
andb
add
lcall
xchg
push
stos
pop
test
xchg
sbb
mov
mov
mov
cwtl
cmp
mov
mov
add
jo
repnz
sbb
or
outsb
bound
pop
xchg
ds
mov
or
pusha
nop
adc
in
adcl
or
ja
push
xor
in
and
jnp
push
mov
test
jo
inc
pop
scas
sbb
add
push
xor
and
xchg
sub
sub
es
xor
movsb
icebp
add
add
cmp
lods
sub
mov
sbb
jae
sar
lret
imul
test
push
loop
pop
dec
je
mov
imul
push
rcr
lods
sbb
or
add
add
xor
pop
aad
add
std
pushf
push
test
sbb
sbb
sahf
nop
shlb
rcl
cmp
or
adc
cmp
add
hlt
repnz
and
xchg
mov
or
inc
arpl
int
fstl
test
shrb
mov
fmuls
push
inc
fstpl
cmp
roll
arpl
push
dec
dec
jmp
lret
mov
pusha
push
aas
add
xor
insb
fsubr
mov
jmp
sub
push
in
stc
rcll
mov
add
sahf
mov
mov
inc
nop
repnz
add
pop
push
pop
leave
xchg
sub
enter
add
or
rcl
nop
xor
add
and
loop
add
mov
subb
ror
in
fiadds
add
roll
subb
jge
lods
rolb
add
mov
sbb
icebp
cmp
nop
movl
adc
mov
scas
or
cmpsl
xchg
dec
loope
clc
sub
scas
sahf
xor
repz
xchg
mov
add
jl
stc
pop
mov
lods
std
add
cmc
mov
les
jmp
mov
fisubrs
and
in
xchg
mov
pop
inc
cld
rorb
in
addr16
mov
add
pop
add
mov
in
cmp
cwtl
pop
sti
cmp
test
jle
or
mov
sbb
insb
insb
jbe
pusha
pushf
push
arpl
call
pop
mov
leave
add
jg
xchg
mov
jno
sbb
add
mov
or
jbe
dec
inc
test
outsl
test
subl
shrl
lods
mov
push
nop
cwtl
mov
std
cmp
and
cmp
or
mov
mov
dec
mov
mov
xor
add
sbb
lock
pop
xor
add
bound
mov
pop
dec
xchg
addb
push
push
icebp
mov
test
cld
clc
mov
or
or
rcll
jmp
pusha
add
repnz
shrl
xor
jl
mov
rolb
popa
xchg
push
or
adc
mov
into
inc
cmp
mov
adc
lret
aam
mov
inc
xor
sub
lcall
or
test
icebp
jae
fmuls
mov
mov
outsb
add
aaa
xor
jle
outsb
enter
jl
mov
xchg
outsl
push
or
test
outsb
xor
ficompl
add
sub
add
xchg
mov
test
cmp
cmpsl
add
mov
ljmp
ja
cmp
test
pop
mov
cltd
jo
jle
push
dec
roll
orb
dec
gs
mov
mov
repnz
dec
inc
int
adc
sahf
push
inc
cmpl
sbb
enter
pop
aas
push
or
cs
inc
ret
add
mov
and
faddl
lock
or
pop
sbb
sbb
push
mov
inc
cld
aaa
icebp
mov
add
add
ljmp
data16
or
inc
push
in
add
andb
and
shl
mov
loopne
loopne
ja
movsb
nop
sub
mov
add
push
sbb
mov
movsb
test
inc
add
inc
mov
xor
andb
data16
cmp
ljmp
xchg
mov
inc
cmp
aas
sbb
jmp
pop
mov
das
leave
loopne
adc
add
or
and
mov
mov
sub
or
xor
pop
xor
mov
pop
xlat
aaa
dec
or
cmp
mov
mov
adc
jg
add
repz
cmp
cmpl
inc
cmpb
in
fsub
or
xchg
mov
mov
call
enter
push
jnp
mov
stc
js
adc
idivl
in
pop
cmp
mov
test
call
jl
and
data16
adc
lret
das
dec
sub
int3
ret
sbb
inc
push
add
adc
outsl
fsubrl
mov
popa
xor
and
mov
xchg
and
adc
xchg
mov
frstor
sub
sub
add
mov
je
and
adc
addl
test
adc
popa
stc
mov
cmp
pop
icebp
fcoms
push
outsb
push
inc
dec
push
ja
imul
sti
add
mov
push
cmp
or
mov
clc
mov
add
pop
jo
scas
mov
dec
cmc
xchg
pop
ja
dec
lock
hlt
fnsave
enter
outsb
xchg
call
nop
insl
xchg
js
or
sbb
shrb
sub
sahf
jno
leave
jmp
jae
mov
sub
xchg
pop
adcb
cmp
mov
jp
dec
add
add
inc
adc
and
mov
mov
or
sub
adcb
adc
dec
add
mov
mov
sub
sbb
scas
pop
or
mov
sahf
adc
mov
xlat
popa
lock
pop
xchg
push
push
in
adc
add
mov
sahf
jl
inc
cmp
mov
push
ljmp
or
mov
insl
out
inc
movsl
xor
sahf
loop
and
popa
inc
dec
pop
mov
jg
fs
dec
mov
push
jb
icebp
mov
mov
inc
repnz
psrlq
or
clc
les
cwtl
pop
test
dec
mov
push
push
sbb
loope
adc
and
ret
add
pop
fwait
inc
out
js
pushf
jno
std
outsb
adc
aaa
insb
add
add
sbb
enter
cld
mov
clc
jbe
adc
add
xchg
xor
push
imul
dec
data16
cs
stos
insb
inc
and
testl
fs
xor
sbb
les
lock
and
loop
mov
push
lods
cmpb
mov
sbb
cmp
fcmovb
xchg
sbb
loop
inc
add
fdivr
add
mov
popa
outsl
sbb
sub
add
xchg
jecxz
test
fcompl
push
mov
mov
sbb
es
mov
push
push
pop
xchg
mov
je
hlt
je
sub
mov
lcall
les
addb
adc
inc
and
add
mov
cmp
fdivl
add
sar
adc
lahf
call
daa
rcrl
mov
jl
adc
fs
mov
xor
jb
sub
pop
daa
call
lock
cmpb
inc
insl
sbb
jge
pusha
push
and
lret
cmp
stos
dec
add
cmp
ret
or
call
test
in
jno
mov
outsl
leave
hlt
cmp
imul
xorl
shlb
aaa
mov
adc
add
test
cmp
pop
pop
pop
int3
cmp
jecxz
push
cwtl
sub
add
inc
gs
sbb
and
std
adc
outsb
inc
dec
or
xchg
inc
inc
call
in
shl
adc
js
cmp
push
add
lds
xchg
mov
xchg
push
mov
loopne
jno
into
jle
cmpb
ret
out
shlb
xor
rorb
xlat
or
jnp
subb
icebp
les
inc
fldenv
imul
push
lock
movsb
mov
push
mov
mov
push
sti
and
scas
pop
inc
cli
out
movl
sbb
adc
ja
and
movsb
push
xor
jle
jo
sbb
pop
mov
in
out
mov
scas
repz
jo
dec
stos
shr
mov
sbbl
pop
mulb
iret
add
hlt
cmp
add
jle
fwait
xchg
inc
mov
pusha
lods
cmp
lods
push
inc
jne
out
in
test
pusha
filds
test
sbb
jp
int3
outsb
icebp
xor
cld
dec
clc
lea
enter
leave
jecxz
jge
adc
mov
xor
das
adcl
jge
inc
mov
out
xor
cltd
jmp
pop
sub
pop
add
xorl
sti
pop
or
add
mov
cmp
mov
leave
shll
mov
jle
mov
decl
mov
loopne
popf
loope
clc
test
loopne
test
push
mov
clc
ret
or
js
sti
push
fucom
cltd
insb
mov
cmp
fadds
mov
loop
mov
test
popa
es
jne
lods
sbb
test
ja
dec
add
mov
test
mov
cmp
call
ja
pop
stc
push
subb
aam
jo
sub
mov
movsb
and
cltd
cmp
cmpsb
and
mov
xchg
mov
js
es
arpl
sarb
pop
cmpl
arpl
sbb
movsl
xchg
sbb
std
and
xor
and
or
jmp
in
add
xchg
sbb
leave
xchg
or
nop
adc
stos
pop
sub
mov
xor
sbb
and
jnp
and
mov
mov
sbb
or
adc
sbb
cbtw
or
mov
xchg
les
ss
jl
cmp
inc
xor
xor
jns
sbbb
xchg
mov
lods
sar
and
and
xchg
xor
sbb
adc
mov
sub
mov
push
and
popa
adc
loopne
sbb
ljmp
ret
pop
sbb
sbb
lods
or
int3
and
adc
dec
rorb
mov
test
out
loopne
hlt
cmp
mov
and
push
mov
test
sarl
or
cmp
push
test
scas
or
loope
inc
or
sub
lds
push
jns
addr16
and
xor
xorb
adc
mov
mov
cmp
int3
jns
jno
arpl
xor
or
or
mov
push
mov
in
dec
adc
inc
andl
mov
adc
test
jae
xor
adc
xchg
je
mov
pusha
xor
mov
mov
inc
and
adc
xchg
mov
dec
aad
nop
sub
sub
xor
cli
push
test
xor
push
dec
and
jecxz
adc
mov
std
xchg
push
and
nop
xor
and
data16
sub
js
and
int3
xchg
adc
mov
cmc
ja
insb
push
mov
add
imul
rorb
in
sbb
sub
xor
cld
add
adc
leave
or
movsb
or
add
rorl
inc
xchg
shlb
push
mov
pop
jmp
lds
mov
popf
call
xchg
fimuls
mov
ror
out
adc
jae
ja
pop
mov
cs
inc
lahf
jno
add
cmp
add
test
pusha
arpl
pop
movsb
js
xchg
and
sar
das
ljmp
mov
fsubl
lcall
mov
or
add
icebp
jno
xor
xor
xchg
iret
pop
adc
mov
dec
push
cli
test
jp
mov
pop
xchg
enter
xorb
push
shlb
add
mov
bsf
in
sbb
in
in
dec
add
and
adc
cmp
xchg
fcompl
add
xlat
call
jle
adc
stc
sbb
push
mov
inc
dec
ret
xchg
jg
adc
out
les
arpl
ds
sbb
add
mov
fadds
push
test
adc
out
dec
jbe
ret
or
mov
pop
loopne
pop
xor
fstps
test
fsubl
cmc
dec
sbb
fidivrl
push
xor
dec
sbb
stos
push
sub
adc
xchg
ljmp
sbb
mov
icebp
add
jmp
dec
shlb
and
pop
inc
loop
push
inc
pusha
bound
sbb
roll
popf
sub
in
mov
lret
or
inc
clc
inc
loope
repnz
add
ss
push
cwtl
and
scas
add
jne
jg
into
sahf
adc
hlt
dec
cmp
push
sbb
xchg
push
fs
mov
ret
mov
inc
loope
clc
mov
out
push
push
mov
push
adc
add
lds
outsb
sub
movsb
add
adcb
xor
mov
jno
xchg
cmp
dec
xor
sub
mov
jnp
xchg
sub
cmp
std
es
test
sub
sbb
adc
add
adc
mov
or
pop
push
cmp
or
mov
mov
xor
mov
xor
subb
xor
sti
outsl
out
xchg
aas
stos
adc
and
nop
lods
aas
add
dec
mov
fdivrs
adcb
add
cltd
inc
xchg
jl
insb
xchg
ret
dec
adc
mov
test
daa
push
mov
cmp
xor
pop
sub
add
or
sbb
add
ds
xchg
mov
mov
sub
hlt
sbb
push
sbb
dec
xlat
xchg
add
insb
inc
loopne
add
mov
add
icebp
cmpsl
std
int3
sub
cmp
and
push
out
stc
shrb
movsb
sahf
loopne
dec
gs
repz
mov
jp
jo
inc
pop
xchg
in
test
imul
popf
push
call
jns
xor
add
pusha
push
mov
pop
jo
mov
inc
dec
pop
sub
stos
dec
pop
add
mov
adcb
sub
mov
je
data16
inc
test
repz
std
mov
je
sahf
cld
mov
cwtl
enter
push
sbb
adc
and
xor
iret
int3
test
jo
mov
dec
add
in
js
jbe
je
xor
inc
adc
dec
adc
lahf
idivb
lods
xor
fistl
jno
add
int
mov
sahf
test
mov
int3
mov
ret
enter
mov
add
jb
add
insb
and
flds
jp
push
ret
lock
dec
add
inc
mov
jb
add
push
xchg
sti
addr16
mov
and
scas
testb
js
push
nop
hlt
dec
fnstsw
push
sbbl
dec
inc
and
out
or
test
mov
or
sub
and
push
sub
add
adc
outsb
jno
adc
pop
pop
test
xor
inc
arpl
dec
mov
icebp
fsubs
dec
sub
mov
jmp
sbb
mov
add
lret
outsl
inc
mov
stos
add
dec
sbb
add
ljmp
outsl
mov
pushf
jo
movsb
nop
cmp
stos
sub
mov
push
dec
je
cld
in
push
jmp
mov
xor
and
pop
inc
xchg
repz
or
add
inc
enter
xchg
das
loopne
mov
inc
ja
cmp
cmpsl
push
movsb
add
or
addr16
pusha
sub
xorl
int
xor
ljmp
add
push
sbb
test
shr
xrelease
sar
xor
add
push
cwtl
sahf
fisubs
bound
add
adc
or
sbb
sbb
clc
in
loopne
dec
pop
add
cltd
inc
mov
das
add
out
adc
and
pushf
add
gs
mov
outsb
adc
fs
in
jbe
lods
fbld
jl
adc
lds
or
enter
add
xor
jne
cmp
insb
add
mov
sbb
lock
adc
insl
inc
xor
fadds
add
aas
mov
jmp
pushf
cmp
sarl
stc
adc
clc
mov
sbb
stos
imul
jg
xor
lds
test
jmp
or
call
add
leave
push
les
sub
add
scas
add
sahf
sub
cmp
sar
dec
cmp
inc
push
loope
hlt
leave
sub
imul
nop
in
or
mov
lock
jns
rclb
sub
test
adc
imul
cs
sub
jno
stos
scas
js
mov
cld
add
inc
pop
and
int
out
or
jg
adc
mov
add
gs
jle
mov
mov
lea
popa
pushf
pop
jbe
push
icebp
lds
add
sub
stos
enter
f2xm1
mov
jns
loop
repnz
or
sbb
js
adc
subb
sub
pusha
dec
push
xchg
push
fldenv
push
popf
push
movsb
mov
decl
test
pop
loop
xorl
movsb
jns
add
fists
hlt
dec
xchg
adc
cmp
add
push
notl
jb
sbb
add
arpl
mulb
int
mov
lods
hlt
add
test
movsb
or
and
ljmp
aam
test
push
int3
mov
adc
popa
aas
add
cmp
sbb
xor
add
and
and
clc
mov
jne
push
fcomip
scas
inc
jmp
out
sub
sbb
ret
inc
cwtl
mov
inc
push
and
inc
repz
or
sub
sbb
fadds
imul
clc
sbb
sbb
cmpsb
fldl
sub
cwtl
sub
js
rolb
pusha
inc
es
jno
and
inc
es
test
fiaddl
pop
sub
scas
mov
mov
je
push
or
mov
mov
fimuls
mulb
popf
add
jo
push
push
popa
cmp
xor
inc
or
and
inc
jge
call
ret
pusha
les
rolb
dec
out
mov
add
and
mov
idivb
xchg
inc
add
imul
adc
pop
sbb
clc
lahf
pop
pushf
sbb
cld
cmp
sbb
rol
addr16
cmp
inc
or
pushf
dec
das
xor
cwtl
inc
test
addr16
adc
add
dec
pop
dec
jnp
outsl
and
inc
sbbb
pop
and
fcomps
lret
push
add
in
ljmp
mov
cmc
xor
mov
pushf
xorb
pop
js
rclb
dec
or
test
test
adc
lock
or
int3
mov
cld
adc
jmp
mov
call
cli
mov
or
push
sbb
mov
sbb
xorl
adc
push
in
pop
mov
pop
gs
bound
mov
adc
sub
mov
inc
movsb
pop
fiaddl
xchg
xor
mov
and
jnp
sub
mov
call
popa
jo
sarb
adc
pushf
sahf
mov
mov
sub
cltd
rcrb
cmpsl
sbb
inc
push
pop
pop
add
mov
adc
sub
push
test
imul
push
sub
jne
test
les
jnp
out
pushf
xchg
movsb
or
mov
andl
xor
sbb
daa
pushf
ljmp
and
clc
jp
mov
aam
push
shll
and
push
or
inc
sbb
lods
mov
adc
xor
sub
movsb
out
daa
stos
loop
adcb
mov
add
loopne
mov
add
out
xchg
inc
int
xor
pop
add
or
ss
and
xchg
and
test
movsl
push
inc
je
pop
sbb
popa
bound
lods
lcall
or
int3
xchg
push
int3
add
xchg
adc
rolb
add
subb
or
push
inc
fmul
decl
lahf
xchg
pusha
jl
or
cltd
adc
pop
or
dec
mov
jns
test
sub
and
dec
xor
aad
cli
fmuls
outsl
and
in
loop
push
inc
pop
mov
aaa
mov
cmpsl
add
pop
in
ret
inc
adc
cltd
insl
fmull
mov
jp
jge
xchg
fsubl
rolb
mov
sbb
sub
mov
mov
or
inc
adc
or
mov
shl
loop
dec
pop
cmpsl
push
pop
ss
dec
test
rolb
xchg
scas
mov
stc
test
repnz
or
test
push
or
push
dec
push
je
and
insb
icebp
movsl
adc
pop
pop
jbe
sbb
add
gs
xchg
ret
smsw
lods
inc
stc
addl
push
hlt
jl
pop
or
add
fdivrl
shrb
xor
lods
pusha
add
pop
pop
pop
sarb
movsl
mov
cmp
aad
and
jb
lock
ja
or
and
sbb
inc
pop
rclb
mov
les
xor
enter
add
xchg
or
add
and
cwtl
xchg
mov
xor
push
sub
adcb
dec
xorb
rcll
js
dec
mov
das
aad
call
xchg
adc
add
and
or
int
and
arpl
outsl
fs
sti
xchg
xor
dec
inc
or
xor
pop
mov
xchg
add
sub
jno
push
mov
decl
ficompl
lods
cmpb
mov
dec
sbb
xorb
xchg
jne
outsb
adc
mov
les
roll
nop
add
or
pop
pop
cwtl
and
in
sbb
mov
shrl
sbb
inc
mov
xor
inc
in
inc
adc
enter
mov
ffreep
jmp
les
inc
mov
enter
rolb
inc
stc
mov
mov
xchg
dec
lret
mov
or
mov
adc
add
sahf
mov
or
sbb
arpl
mov
jo
pop
mov
mov
xchg
xchg
inc
add
aas
addb
push
imul
xchg
pop
test
adc
mov
fists
pushf
or
cli
adc
pop
jbe
inc
xor
icebp
lret
mov
xor
mov
dec
icebp
js
out
mov
je
jp
dec
pop
aas
pop
sbb
pop
and
fsubs
lret
or
icebp
pop
and
add
xchg
fsubl
pop
adcl
inc
clc
jno
test
int3
jg
xor
push
dec
cltd
js
sbb
inc
jmp
dec
add
xor
mov
sbb
add
sbb
jp
fs
xlat
inc
add
js
rol
fdivrl
or
movsb
cmp
dec
push
pusha
fidivl
lock
cmp
mov
sub
sub
sbb
fs
add
inc
dec
stos
insb
in
mov
add
sbb
adc
mov
lahf
push
sub
inc
sti
add
out
adc
shl
xor
mov
imul
test
xchg
jae
fsubrs
icebp
sub
pop
shrb
in
iret
in
je
sbb
in
rcrb
dec
adc
mov
lcall
push
pop
js
push
mov
addb
jbe
icebp
insb
cld
cmp
add
pop
add
or
scas
rcl
jp
jge
add
stos
add
pop
ret
inc
arpl
xor
push
jo
add
sub
sbb
sbb
shll
in
or
inc
jo
loope
cmp
jle
or
pop
jge
test
clc
add
mov
inc
in
inc
add
xor
xor
into
dec
roll
pop
jge
daa
adc
xorl
sbb
dec
mov
cwtl
les
shlb
out
or
cltd
movsb
inc
mov
cmp
stc
jecxz
xor
add
or
test
lcall
add
add
out
or
adc
movsb
test
add
xchg
repnz
mov
xchg
out
bound
pop
xor
xchg
in
test
mov
fdivl
sahf
and
mov
ss
sahf
xchg
clc
xor
pop
jns
orb
mov
pop
and
mov
push
mov
cld
rcrl
sbb
add
mov
cwtl
lcall
enter
test
and
inc
jbe
lock
dec
mov
cwtl
and
nop
xor
in
and
ret
jae
adc
add
dec
mov
pusha
cmc
mov
jno
xchg
mov
push
add
ds
fsubs
adc
or
mov
jne
inc
or
and
mov
push
insb
es
dec
xchg
pop
add
mull
pop
xchg
call
arpl
das
lret
hlt
mov
xchg
test
jns
addr16
repnz
pop
lock
and
andb
je
sub
lahf
xchg
add
cmc
rcrl
popa
or
stc
loopne
adc
inc
adc
mov
mov
sbbb
in
add
in
call
out
mov
std
fimull
push
sbb
push
push
pop
test
sub
scas
adc
mov
mov
add
fmuls
mov
or
push
into
sbb
or
pop
fsubl
mov
inc
push
mov
rclb
mov
clc
jbe
adc
jno
call
movsb
aad
add
jp
insl
cmp
and
loopne
jnp
sbb
xchg
push
dec
das
jl
xchg
ret
movsb
pop
orb
add
fiaddl
pop
jnp
stc
inc
daa
mov
sub
lahf
aas
ss
xchg
jo
aam
inc
call
adc
mov
jne
and
add
test
mov
lea
add
push
cld
gs
test
in
loop
pushf
inc
push
adc
outsl
in
mov
inc
add
lret
mov
mov
mov
add
sahf
mov
loope
push
clc
dec
in
std
xchg
les
inc
mov
lods
stos
test
pop
sbb
mov
and
pop
aam
cltd
jl
call
pusha
adc
mov
xor
cmp
push
int3
andb
fstpl
das
jecxz
fildl
loop
mov
scas
xchg
jl
movb
leave
inc
add
xor
inc
cs
cmpb
add
xchg
sub
add
gs
lods
popf
pusha
or
or
mov
popa
hlt
mov
out
nop
sarb
je
mov
add
pop
mov
or
mov
mulps
rep
adc
mov
daa
cli
add
mov
push
mov
add
xor
inc
add
sahf
ja
mov
dec
rcll
add
stc
jl
in
pop
jnp
mov
out
cwtl
jecxz
mov
add
icebp
xchg
inc
test
inc
jb
adc
inc
sbb
sbb
outsb
stc
mov
mov
mov
push
lods
repz
add
mov
xor
pop
jmp
cwtl
mov
mov
movsb
mov
sarl
mov
mov
iret
movsb
test
imul
dec
lods
jns
imulb
pop
stos
movsl
push
into
scas
lret
jl
fs
inc
mov
cmpsb
nop
adc
mov
insb
push
jbe
push
inc
mov
dec
hlt
leave
std
call
cwtl
dec
loop
js
add
gs
mov
jl
das
mov
xchg
mov
fmuls
and
jno
inc
rcrb
sahf
loope
adc
dec
movsb
data16
or
rclb
ret
xchg
dec
adc
pusha
mov
pop
stos
jnp
pop
mov
test
subb
ret
int
mov
incl
mov
imul
jge
push
pop
add
xchg
clc
add
call
inc
push
lock
hlt
or
hlt
mov
cmc
add
out
sub
lods
add
dec
mov
or
add
andb
jmp
cmpsl
jns
stos
xchg
imul
mov
and
sbb
js
jne
push
push
pop
push
push
ror
mov
popf
arpl
add
pop
pop
fs
stos
divl
add
cld
jl
sbb
mov
xchg
shlb
fsub
adc
into
fadd
push
sub
sub
xor
add
sbb
jp
stc
int3
pop
mov
dec
loopne
popf
daa
cmpsb
loope
and
xor
data16
mov
inc
fdivs
cmp
shl
inc
dec
jg
imul
loopne
xor
nop
mov
loope
add
push
insl
jbe
sahf
push
xchg
add
mov
add
cmp
sbb
js
push
push
and
dec
cwtl
loope
inc
or
leave
inc
adc
sbb
or
orb
cmp
lock
fidivs
decb
add
outsb
dec
das
mov
inc
call
mov
mov
sbb
add
pusha
js
mov
cld
addl
sbb
sub
sbb
pop
sub
cwtl
adcb
fs
test
jmp
add
inc
inc
not
ds
add
mov
and
dec
cwtl
mov
or
aas
cmpsb
inc
pop
mov
push
mov
add
pop
mov
sub
or
insb
xchg
test
add
addr16
rorb
xchg
loope
rolb
fmuls
cmpsb
ja
push
pusha
sarb
sbb
mov
lods
rolb
sbb
shlw
outsl
in
dec
sti
add
sbb
cmc
pop
pop
and
inc
lock
leave
icebp
add
jno
push
jbe
sbb
popa
divb
pop
mov
in
inc
enter
adc
push
es
adc
stos
sub
cwtl
sub
jg
rcrl
sbb
mov
pop
fcoms
sbb
popa
xchg
adc
sbb
scas
dec
rcll
fwait
and
inc
mov
xchg
nop
les
or
inc
movsl
and
mov
js
loopne
gs
jg
or
add
jle
xor
es
int3
mov
cmp
cmp
lods
clc
in
mov
xor
mov
or
loopne
pop
lea
inc
sahf
or
pusha
stc
lcall
pop
pop
pop
mov
pop
movsl
jnp
movsb
push
dec
adc
cmp
pop
lcall
call
sbb
cld
xchg
ret
call
cmp
arpl
fsubrs
push
mov
ror
sarb
rcrl
adc
add
cmc
pop
add
jno
sub
je
imul
cli
iret
lea
pop
outsb
and
and
fcoml
je
add
cld
pop
mov
adc
lea
pop
lds
adc
or
dec
mov
data16
je
add
les
mov
sarb
enter
lods
pusha
enter
lock
dec
pop
enter
sub
in
sub
or
xor
cmp
jecxz
cmp
inc
adc
in
jo
clc
rclb
movsb
mov
mov
insb
in
or
inc
enter
outsb
out
test
push
push
push
xchg
jp
add
repz
xor
rcr
in
ja
add
mov
adc
pop
mov
ficomps
mulb
insl
or
push
leave
je
pop
jg
jno
repz
std
sbb
mov
pusha
stos
ss
stc
pop
arpl
mov
add
lods
gs
cmp
je
inc
add
pusha
cmpl
insb
out
or
and
sbb
lds
add
decl
arpl
pop
sub
movsb
push
inc
push
jecxz
inc
outsl
xor
or
xor
pop
mov
fmuls
jmp
fiadds
frstor
test
push
rolb
bound
add
test
sahf
xor
stos
push
cmp
ljmp
xlat
sarb
stos
adc
je
inc
dec
mov
sub
pop
sbb
add
mov
pop
mov
cmp
gs
sarb
inc
arpl
or
cmp
rorb
dec
cwtl
stos
bound
pop
addl
lcall
adcl
outsb
imul
jge
cmp
adc
cmp
pop
add
and
mov
idivl
test
fdivs
xor
inc
pusha
mov
lds
add
nop
xchg
inc
pop
push
hlt
lret
jns
inc
call
test
pushf
inc
lahf
cs
loop
mov
cmpsb
jbe
pop
xor
fs
data16
push
jge
and
add
in
cli
cmpsb
sbb
out
fiadds
repz
incb
rcrl
push
das
dec
inc
cmp
stc
push
add
xchg
mov
dec
mov
mov
dec
dec
jns
pushf
stc
adc
add
test
arpl
ja
rclb
cltd
push
sub
inc
loop
dec
xlat
shlb
sahf
mov
mov
mov
loopne
les
mov
cld
test
int3
pop
xor
daa
dec
pusha
cwtl
push
cmpsb
aam
andb
int
test
in
insb
movsb
shl
clc
js
or
lods
mov
rolb
aas
fisttpll
sahf
dec
jns
sub
cmp
xchg
popf
adc
cwtl
mov
adc
sbb
xchg
or
push
mov
arpl
sbb
mov
cld
xchg
outsl
or
lods
or
gs
jnp
sti
jae
or
lret
lret
add
aas
inc
test
sbb
xchg
lcall
enter
les
shrb
jg
add
clc
fs
sub
in
idivb
jns
push
xor
mov
les
push
mov
cmp
adc
in
fsubs
adc
pop
pop
lret
and
fadd
mov
popf
dec
sub
xchg
sbb
sbb
add
sub
push
push
add
int
xchg
imul
das
jb
nop
pusha
rcll
xor
mov
push
shlb
scas
dec
pushf
xchg
test
stos
pop
xchg
nop
stos
add
and
cmc
bound
scas
fdivrs
int3
jo
outsl
inc
loopne
loope
popa
mov
cmp
sahf
push
dec
or
mov
dec
or
aam
xor
adc
lahf
mov
in
sbbl
lods
test
jg
insb
inc
pop
mov
sub
jno
add
ja
push
addr16
cwtl
popa
aaa
adc
stos
jno
or
pusha
adc
add
pusha
inc
dec
ret
add
jnp
stc
pop
mov
cmp
dec
jo
dec
adc
push
cmp
icebp
dec
add
popf
sbb
pop
lret
xchg
lcall
lea
hlt
clc
mov
jmp
aam
inc
push
jne
loope
call
ljmp
and
pop
mov
adc
sahf
lods
pop
les
mov
addr16
cmp
jle
add
jp
xchg
daa
test
sub
add
ds
add
icebp
aam
cmp
clc
sarl
or
pop
aam
test
or
and
dec
icebp
pop
xorb
jecxz
push
pop
rclb
mov
add
xchg
xor
adc
jb
add
lcall
add
dec
adc
sub
jmp
and
repz
cwtl
add
hlt
mov
test
popf
das
mov
movsl
lret
mov
push
push
push
mov
test
mov
push
xor
popa
insl
mov
xchg
jge
sub
jo
mov
xchg
inc
inc
andb
mov
mov
mov
push
pop
xchg
call
out
dec
shl
jecxz
rorl
push
test
out
jb
repnz
stos
xor
repz
adc
sub
clc
mov
push
jp
sbb
sub
cmp
dec
aam
or
mov
mov
push
or
cmp
jl
jo
sub
cmp
lahf
mov
cwtl
pop
orl
push
fsubs
dec
addr16
jp
sbb
nop
shrb
and
push
and
lds
add
or
addr16
dec
and
push
add
mov
ds
sarb
xor
das
push
sub
loopne
and
xor
mov
or
xchg
gs
add
cmp
cmc
addr16
xor
fadds
loopne
ficomps
mov
arpl
addl
into
stc
shlb
int3
inc
aas
sbb
and
jp
sub
push
iret
adc
pusha
sub
sar
add
rcrl
jg
cmpsb
nop
mov
in
pusha
mov
adc
rorl
mov
or
cwtl
pushf
lds
clc
pop
jae
or
in
add
add
test
lds
push
pusha
push
push
jl
loope
and
push
adc
mov
xorb
out
enter
push
sbbb
sbb
fwait
pushf
cmp
add
sbb
push
lods
repnz
rolb
mov
adc
and
or
flds
and
mov
mov
je
jno
les
mov
cmp
jne
lods
and
push
push
movb
xchg
iret
cli
push
push
jecxz
mov
or
and
jl
aas
faddl
or
loopew
mov
add
push
adc
lcall
jecxz
ret
sub
jl
push
frstor
in
ret
subl
cmp
push
push
sub
sbbb
sbb
sbb
add
jg
add
data16
stos
cmp
sub
inc
jg
fcoml
inc
add
js
sub
xchg
les
fwait
pop
xchg
scas
or
dec
xchg
xor
dec
fcmovnb
push
shl
repnz
adc
andb
cmp
add
fisubs
aas
and
sbbb
cmp
js
pusha
fst
flds
sarb
out
mov
and
sbb
jl
lods
paddq
adc
sub
sub
test
mov
and
push
cmpb
shlb
rcl
push
mov
imul
pusha
adc
mov
mov
add
jecxz
and
scas
sub
je
or
les
clc
mov
test
push
sbb
and
jl
hlt
add
aaa
ret
add
mov
shll
dec
mov
jecxz
ds
or
xor
sti
cmp
add
fstps
sbb
popa
sbb
pop
add
pop
dec
jnp
pop
adc
call
nop
push
and
imul
xchg
xchg
mov
sbb
pusha
push
inc
or
es
inc
iret
rorl
movsb
dec
or
xor
pusha
mov
call
inc
add
xchg
cmp
mov
aad
and
xor
inc
sub
mov
aaa
jge
sub
and
xchg
add
or
imul
inc
dec
add
jg
in
xor
jle
int3
addr16
sti
sbb
fdivl
bound
pop
sbbb
stc
mov
mov
sbb
xchg
rolb
lock
xchg
pusha
pop
movl
add
lcall
addb
cltd
stos
mov
or
fimuls
scas
enter
or
mov
pop
jo,pn
fsubs
cmp
fcomp
ret
sub
hlt
mov
or
ror
pop
cs
mov
fistl
cld
aaa
or
sbb
jno
aas
sbb
pop
dec
ja
into
dec
and
add
xlat
adc
pop
inc
pop
xor
sub
ds
pshufw
fiadds
insl
cmp
xchg
jne
cmpb
pop
mov
inc
lock
mov
fisttpl
dec
orb
mov
mov
sbb
push
ss
mov
bnd
mov
pop
sub
inc
add
mov
pop
add
mov
push
cmpsb
lock
push
push
loop
sbb
mov
icebp
mov
adc
mov
popf
or
xchg
or
js
cwtl
adc
pop
enter
sub
xor
cmp
call
out
repz
stos
inc
jge
push
sub
mov
push
std
sbb
repz
mov
add
cs
add
fcmovbe
mov
jns
sub
xchg
mov
sub
bound
cmp
loope
push
and
xchg
add
add
mov
decb
mov
inc
loop
sbb
cmc
sbb
sub
adc
pop
insb
jmp
mov
jl
sub
pushf
jno
roll
daa
cltd
mov
pop
sub
pop
data16
pop
jecxz
cwtl
aam
rolb
sub
sahf
adc
aam
or
stos
lahf
add
cmp
icebp
adc
and
shlb
int
in
add
push
mov
or
rcr
in
dec
ljmp
push
ret
mov
movsl
add
pop
push
inc
clc
faddl
jmp
lret
push
add
jecxz
or
pop
add
or
ljmp
push
adc
loopne
gs
mov
in
andb
sub
enter
addr16
repz
pop
xchg
sub
mov
mov
push
mov
cmpsl
scas
cld
or
jb
pop
out
cmpsb
and
push
ret
addb
add
sub
mov
add
mov
inc
push
ljmp
test
in
les
mov
and
lods
es
xor
pop
and
sbb
pop
push
push
mov
pop
sub
sbb
pop
dec
cmpsb
in
pop
pusha
sub
add
add
not
enter
cmp
or
out
rcll
mov
jnp
in
add
mull
and
flds
pop
add
pop
imul
cmp
orb
in
rclb
sub
sub
add
push
dec
pop
pop
mov
ljmp
add
pop
subb
pop
test
sub
into
rclb
ljmp
push
ret
in
push
xor
xor
test
push
add
sub
push
push
mov
mov
les
or
or
jmp
add
add
sbb
jmp
sbb
out
in
pop
pop
incb
imul
inc
mov
gs
daa
and
inc
mov
dec
hlt
jmp
cmp
or
mov
pop
jmp
push
mov
and
pop
jmp
push
pop
movzbw
sbb
mov
pop
not
add
cltd
xor
mov
push
cwtl
sub
push
push
clc
mov
sub
and
test
or
pop
xchg
mov
mov
cmc
out
into
cmp
push
sbb
dec
fcmovnb
mov
fmuls
push
mov
push
or
ds
add
or
pop
hlt
mov
add
add
and
add
sub
mov
ret
or
xor
repnz
sub
push
jmp
pusha
cmp
mov
xor
incl
sub
push
inc
rcrl
das
iret
rcrb
imul
pop
pop
push
mov
adc
cmp
sbb
or
imull
sahf
xchg
mov
dec
xor
adc
push
nop
jns
out
or
cmp
sub
or
jmp
push
jg
push
add
scas
push
notb
mov
adc
pop
adc
or
in
mov
push
xchg
leave
cmpsb
jg
adc
add
push
loope
in
push
adcb
adc
out
or
mov
in
add
cmp
ljmp
xor
or
filds
sbb
sarb
pop
push
xlat
out
pop
mov
pop
dec
sahf
hlt
xchg
sbb
sub
dec
out
icebp
imul
jnp
push
push
test
xor
xor
or
add
push
pop
cwtl
fstpl
dec
or
ss
xchg
xchg
mov
andb
sub
pop
adc
xor
call
xor
pop
or
out
and
mov
pop
push
dec
mov
imulb
adc
mov
jle
and
divl
loopne
jle
enter
add
out
test
test
pop
loope
pusha
cwtl
jbe
add
ja
outsb
in
testl
shr
and
cmp
clc
ret
add
aas
xchg
adc
add
add
mov
fucompp
sbb
sub
jmp
cmp
mov
mov
add
pop
and
or
jo
pop
inc
sub
inc
sbb
mov
je
pop
cmp
sub
jmp
sbb
push
mull
push
mov
add
sbb
test
or
inc
addb
jo
sub
pop
pop
hlt
in
mov
out
push
push
and
push
mov
pop
mov
repnz
xchg
or
jmp
mov
sub
hlt
cwtl
dec
xor
mov
adc
push
xchg
add
test
and
pop
sti
and
xor
pop
add
mov
loope
xor
dec
add
pop
inc
add
ljmp
xor
mov
insb
push
or
pushf
jmp
push
out
xor
dec
mov
mov
dec
pop
sub
fmull
adc
add
push
ret
pop
cmp
pop
xor
xor
in
out
pop
sbb
mov
push
je
inc
push
xchg
mov
inc
or
dec
jl
addr16
mov
fcmovb
or
adc
hlt
push
lds
xor
ret
mov
rolb
pop
rcrb
sub
pushl
inc
jmp
fstps
lds
pop
push
mov
jmp
pop
mov
sbb
out
lahf
mov
sub
xor
push
mov
xor
inc
cltd
pop
push
mov
ret
xchg
push
aas
pop
movsl
shlb
pop
cmp
add
pushl
pusha
lock
xchg
cmp
fsubs
repz
movb
sub
data16
adc
jp
aam
adc
in
push
sub
dec
iret
mov
push
pop
mov
mov
popf
mov
push
xor
out
pop
dec
or
ja
inc
adc
adc
dec
icebp
inc
outsl
lock
cmpsb
push
mov
arpl
sub
lahf
mulb
call
out
pop
cmc
jmp
adc
fwait
movsb
xor
es
loop
xchg
jae
xchg
or
hlt
sti
lcall
or
lods
cmp
test
or
push
push
push
mov
stos
mov
loopne
jae
sub
add
jmp
inc
add
or
sbb
xchg
pop
outsl
ficoms
test
add
sub
inc
adc
pop
rorl
lcall
daa
mov
pop
xor
sahf
inc
sub
inc
or
cs
rorl
subb
jno
dec
enter
push
pusha
pop
idivb
add
lock
out
dec
add
filds
loope
add
loopne
shrl
or
or
lds
push
sub
pop
addr16
sbb
jmp
addr16
mov
xchg
add
mov
xor
cltd
ljmp
scas
dec
rcl
jmp
in
push
or
add
push
fdivl
add
and
add
mov
and
adc
and
jl
mov
mov
and
inc
add
pop
ja
add
jg
mov
push
or
xchg
ret
pop
dec
shlb
xchg
out
aaa
and
daa
aas
data16
scas
cmp
rolb
lea
insb
sub
sbb
dec
decl
xchg
roll
bound
jl
mov
pop
pusha
in
or
push
add
xor
inc
sub
push
jne
jmp
dec
lds
loop
stos
push
loope
icebp
inc
pop
popa
out
push
jmp
rcl
dec
xchg
ss
lock
js
inc
sub
nop
andb
shr
cmp
or
test
out
pusha
push
or
jmp
add
imul
shll
loopne
pop
ljmp
in
sbb
push
add
inc
ja
pop
mov
xchg
inc
orl
inc
fstl
es
cltd
sbb
loop
mov
push
and
add
sub
add
outsl
ja
jmp
jle
shlb
sub
adc
int
movzbl
repz
jmp
pop
or
mov
cwtl
mov
std
aas
in
int3
or
shlb
or
pop
add
or
jmp
into
mov
daa
jo
and
pusha
push
ficoml
mov
ja
out
jmp
cmp
mov
and
sub
mov
mov
mov
sbb
mov
jo
clc
inc
sub
in
push
mov
sub
aam
loopne
dec
cmp
fcom
int3
movsl
lock
loope
adc
and
mov
mov
pop
add
and
daa
push
lcall
jp
jmp
into
dec
in
mov
xchg
mov
movsl
sbb
rolb
adc
and
leave
adc
xchg
or
roll
mul
push
add
cmp
pop
sub
pop
xor
jp
jmp
out
shll
out
jbe
push
pop
sbb
pop
test
push
mov
and
pop
jmp
lock
loope
mov
shrb
pop
xor
pushl
sbb
mov
push
mov
cmp
jb
and
jmp
frstor
dec
shr
push
lds
inc
or
xor
leave
add
adcl
jb
icebp
aas
sub
mov
test
cwtl
and
and
pop
dec
push
jmp
lret
dec
popa
jg
push
cmp
mov
add
or
or
mov
mov
add
daa
mov
push
xchg
cmc
mov
bound
hlt
xor
movsb
add
pop
loopne
jmp
test
pop
ret
xor
icebp
dec
mov
cmp
xchg
lret
add
pop
cmp
aaa
sub
ds
add
shl
inc
js
dec
mov
xchg
add
cmpb
neg
or
jae
inc
dec
xlat
into
fmuls
pop
jmp
cwtl
ret
push
enter
push
shr
inc
shrl
in
jle
int3
andb
push
push
es
std
repz
rclb
push
jmp
fisttps
and
fldl
inc
daa
sbb
sti
leave
cwtl
pop
push
insb
add
push
xor
in
mov
add
mov
mov
and
cmpsb
mov
mov
add
pop
or
pop
xchg
sub
xlat
push
adc
xor
in
sub
ret
add
pusha
xor
pusha
jecxz
push
push
jmp
pop
dec
pusha
add
inc
add
add
loop
push
addb
mov
es
sbb
cmp
sub
imul
pusha
shll
les
mov
sbb
or
adc
mov
inc
mov
jnp
add
out
push
mov
add
insb
mov
in
imul
xor
subl
xor
pop
or
mov
add
pop
loop
sub
mov
test
mov
daa
xor
jns
rclb
mov
in
push
add
adc
pusha
inc
mov
add
and
jmp
loopne
pop
cs
arpl
or
movl
adc
dec
jnp
les
fwait
xor
inc
clc
adc
loopne
filds
bound
roll
push
push
in
outsl
dec
adc
add
or
xor
loope
adc
or
dec
cmpsl
push
cmp
or
xorb
and
jge
adcb
fbstp
xor
pop
add
cli
jmp
dec
jnp
push
aas
push
mov
stc
pushl
aam
enter
push
in
cmc
jne
subl
cld
xchg
cwtl
testb
xor
jmp
and
xor
cmc
jb
dec
icebp
pop
jbe
xor
add
pop
push
mov
ljmp
inc
int
mov
out
push
lods
loope
push
stos
sbb
push
pushl
mov
sbb
jmp
and
xchg
add
inc
test
test
lods
js
push
push
inc
test
add
lds
adc
sub
popf
loop
inc
inc
popa
or
ret
ljmp
pop
add
movsb
sub
mov
or
pop
rcrl
push
dec
add
add
push
xor
add
lret
push
cmpsb
cs
cmp
push
adc
enter
int
imul
xor
adc
lea
ja
adcb
enter
pop
in
inc
into
mov
inc
sub
xchg
xor
out
jmp
add
sbb
cmc
es
fldl
jecxz
imul
out
sub
sbb
enter
adc
pcmpgtd
xchg
dec
push
pop
outsb
dec
xor
repz
cmpb
or
daa
jb
sub
jae
nop
add
popa
jl
jle
mov
fisttpl
add
push
xchg
mov
adc
pop
inc
imul
in
xchg
adc
and
fnstcw
sbb
out
jae
pop
nop
push
mov
cmp
ret
xchg
enter
dec
jns
ss
pop
and
pop
nop
pop
jb
push
and
jmp
mov
jns
arpl
clc
js
iret
movsb
flds
sub
vcvtps2dq
push
into
inc
daa
cmp
mov
or
jl
fsubrs
sub
push
inc
test
ds
sub
pusha
pop
les
mov
jo
inc
or
rcr
xor
push
shlb
in
imul
pop
or
push
ljmp
jb
movsl
xor
dec
push
shlb
mov
loop
sbb
fucomp
pusha
pop
mov
add
xor
vsubpd
and
es
sahf
hlt
loop
inc
mov
jmp
ficoml
pop
movsl
xchg
in
jp
out
add
jnp
adc
loop
sub
mov
push
pop
add
add
sub
inc
mov
xchg
xchg
push
fs
mov
mov
xor
repz
ret
and
xor
pop
subb
sbb
push
push
jae
scas
xchg
out
cmp
jmp
arpl
or
pushf
jmp
int
mov
and
popa
xchg
enter
lret
loope
test
push
lcall
addb
pop
and
adc
xor
pop
inc
cmp
cmpsl
cmp
push
push
pop
mov
and
add
pop
pusha
dec
enter
inc
xor
andl
sub
sbb
in
sahf
add
cmc
aad
mov
enter
fidivl
rolb
dec
inc
int3
mov
inc
pop
jnp
xchg
mov
jno
incb
pop
mov
add
test
add
sub
fadds
push
add
push
pop
xor
dec
xchg
sub
add
scas
insl
mov
add
iret
rorl
push
dec
and
subb
jb
fbld
scas
add
popa
test
ja
jae
sbb
add
push
test
push
lds
lds
and
test
fs
adc
dec
pop
jmp
and
xchg
pushf
adc
dec
inc
popf
pop
leave
sbb
jle
cltd
mov
xchg
adc
out
andb
scas
ds
data16
inc
pop
push
test
adc
adc
sbb
in
jl
test
sbb
dec
sub
push
inc
les
cld
xor
lret
or
fsubs
pop
jmp
imul
push
sub
push
mov
hlt
xor
mov
mov
fcmovbe
fs
xchg
mov
ret
adc
andb
push
add
fists
jl
push
jmp
rorb
pop
pop
add
cmpl
subb
jg
jns
pop
std
pop
add
pop
xor
subl
sbb
orps
movsl
ss
ret
jns
lret
cwtl
cmp
push
pusha
dec
sub
pop
gs
adc
sub
in
or
out
mov
jnp
sbb
jge
inc
or
inc
cmpsl
dec
or
dec
in
push
sub
lods
jns
and
imul
call
jno
in
add
nop
lods
push
rorb
testl
pop
xchg
das
xor
loope
jp
daa
mov
sub
ficomps
add
sbb
sbb
pop
iret
ffreep
adcl
fisubl
movsb
sahf
jns
sarb
jne
mov
mov
lea
or
pop
dec
sarb
add
jmp
or
fsubs
sub
test
push
sub
dec
cmpsb
pop
inc
push
cmp
iret
and
pop
neg
data16
ret
push
inc
jmp
mull
xchg
pop
jmp
aas
jbe
jns
mov
aaa
mov
and
sub
mov
push
push
sbb
xchg
fst
add
movsl
popf
mov
lret
call
ja
pop
hlt
mov
inc
movsb
pop
push
xor
addr16
cmp
jb
sbb
sub
push
scas
pop
and
bnd
test
mov
xchg
cmp
push
dec
lea
cmovl
icebp
adc
mov
dec
cmpsb
filds
sahf
push
mov
iret
xor
jne
push
xor
int3
push
mov
adc
pop
inc
pop
repnz
adc
enter
xchg
inc
dec
in
bound
ret
jbe
jg
rclb
movsl
jns
out
adc
or
push
in
xor
arpl
dec
and
pop
mov
jmp
rclb
adcl
neg
dec
cwtl
roll
jg
cmp
pop
jb
pop
iret
ret
xchg
xor
add
dec
add
dec
pop
adc
into
xchg
push
sahf
leave
push
push
cli
mov
mov
aas
mov
test
push
movsl
js
roll
push
and
push
xchg
push
fadd
or
or
pushf
loopne
adc
mov
add
cmc
jmp
inc
dec
mov
mov
and
add
retw
jnp
imul
jne
test
dec
roll
or
add
pop
pusha
mov
cmp
insl
push
or
sti
xor
jae
cmp
pop
xchg
lock
adc
rcll
or
sbb
add
jno
and
or
pop
cltd
lahf
test
hlt
mov
out
cwtl
mov
loope
outsl
push
dec
jmp
cmp
call
xor
shrb
xor
es
push
imul
push
jmp
cmp
xchg
test
jnp
out
aam
test
xchg
sub
fldenv
std
mov
mov
rcll
mov
jnp
add
mov
or
mov
mov
or
pop
fs
sub
fcoml
lret
push
xchg
pop
inc
loope
cmp
or
adc
sub
xorb
mov
stc
ret
mov
scas
jno
and
scas
adc
xchg
loop
lock
or
and
movsb
lcall
push
adc
lods
sbb
repnz
xchg
pop
dec
sub
or
shl
push
push
jge
mov
lods
lahf
push
inc
int
leave
xor
adc
les
xchg
mov
sti
fnsave
lds
push
pop
dec
inc
push
pop
mov
les
pop
in
push
mov
and
call
push
sub
sub
lock
inc
jl
into
or
insl
jb
adcb
out
jg
dec
or
cmp
fs
sbb
inc
and
gs
jecxz
xchg
cwtl
out
xlat
pop
inc
xor
inc
jb
ret
or
adc
lret
movsb
xchg
push
rcl
push
stos
or
add
and
and
repnz
sub
js
push
out
inc
lods
mov
xchg
dec
xor
sar
push
imul
enter
std
mov
push
cltd
sbb
jne
and
add
clc
in
dec
ljmp
pop
xor
mov
xor
les
push
lret
add
mov
loope
xor
add
lds
adc
pop
push
jl
test
xchg
cmp
call
add
in
and
clc
jmp
xlat
jg
dec
push
insb
add
pop
mov
xor
dec
pop
lahf
adc
dec
mov
and
clc
add
pop
out
clc
imul
daa
adc
push
mov
loope
add
inc
in
leave
mov
test
push
mov
push
jmp
fcomps
fprem
sub
shlb
push
adc
enter
push
std
not
or
test
bswap
xor
mov
push
pusha
pop
cwtl
mov
push
mov
insb
orl
pop
inc
or
addr16
pop
dec
or
jno
lea
loopne
dec
and
add
dec
mov
sti
mov
mov
cli
lods
mov
add
aas
pop
push
push
sbb
pop
call
push
inc
stos
pop
push
jmp
add
loope
pop
js
mov
pop
rclb
and
mov
adc
or
not
shl
test
mov
or
add
js
push
sbb
fisttps
arpl
fcomp
inc
adc
shl
das
outsl
fsubp
xchg
jge
add
adc
add
lea
das
lods
rorl
mov
push
lods
cvtps2pi
push
mov
mov
bound
mov
shr
scas
xchg
out
movsl
test
add
lret
sbbb
pusha
push
xchg
dec
cmp
add
pop
inc
and
add
repnz
sub
out
mov
nop
in
xor
rcrl
xor
jmp
cmp
push
jnp
lock
or
int3
popf
sbb
je
xor
xlat
jmp
xor
cmc
sub
adc
mov
and
ds
sbb
js
jmpw
scas
aam
lods
jle
pop
das
fisubrs
stc
bound
icebp
repnz
mov
add
pop
push
loopne
in
push
aam
mov
inc
iret
outsl
lea
dec
mov
aaa
dec
push
jl
sbb
push
xor
sbb
inc
mov
cmp
ja
push
or
xor
xchg
sub
scas
and
pop
shll
push
mov
aaa
pop
xor
addl
pop
xor
addb
test
jmp
sub
dec
dec
cli
add
mov
loope
add
pop
shll
stc
pop
stos
inc
rorl
orb
cs
inc
mov
xor
inc
movb
and
cmpsb
dec
jo
or
cmp
pop
cli
lret
jecxz
or
jnp
cmc
jno
sarl
mov
or
adc
test
jge
push
xchg
hlt
jno
inc
add
shlb
in
or
sub
mov
jnp
mov
mov
sub
bound
or
dec
out
push
scas
mov
cltd
jns
lods
mov
js
or
sqrtps
add
mov
push
cmpb
push
and
rcrl
ja
xor
add
mov
and
pop
sub
aas
and
cmp
add
add
and
push
je
ja
mov
and
jb
ds
cmpsl
repz
sub
push
cmp
pop
dec
shr
dec
add
push
lods
mov
cmp
lcall
shl
notl
jp
mov
mov
dec
imul
addr16
xchg
pop
sub
sub
push
cmp
cmp
ret
ror
and
dec
loope
xor
push
sbb
ljmp
fidivl
out
jge
sub
sbb
arpl
push
jp
add
repnz
test
mov
movntps
adc
and
je
push
mov
add
cmp
cld
cs
outsb
lret
mov
pop
pop
jne
mov
shl
mov
sub
sub
adc
cmp
mov
inc
lods
mov
dec
clc
std
mov
clc
mov
loop
das
dec
imul
jg
cld
test
add
jge
sbb
push
jmp
pusha
mov
push
jb
jmp
mov
inc
pushf
outsb
and
dec
jp
or
bound
rcrb
ret
xor
push
xchg
xlat
dec
cmpb
faddp
pop
out
sbbb
dec
pop
cltd
pop
push
lods
push
fsts
jmp
ljmp
sub
add
jmp
mov
xor
add
add
loope
add
in
add
ljmp
add
aas
shl
xchg
add
test
lds
pop
dec
cmp
cwtl
bound
sbb
jmp
sub
or
adc
out
or
add
clc
add
add
sahf
jno
sbb
rcrl
sbb
lock
insl
and
in
dec
pop
fbld
push
pop
dec
sub
loopne
adcb
shrl
push
bound
add
adc
sti
sub
repz
mov
adc
add
add
or
xor
das
add
jmp
push
pop
xchg
xor
fadds
iret
push
inc
insl
mul
pop
mov
pop
int3
test
imul
test
les
adc
negl
es
dec
mov
popa
sbb
jne
cs
sub
rol
nop
dec
test
xor
pop
adc
aaa
aad
jle
or
insl
inc
mov
movsl
cmp
or
add
or
stos
push
push
dec
pop
and
stos
or
lods
in
insb
mov
rcrb
dec
push
clc
iret
or
push
fwait
sbb
neg
test
aaa
jno
and
daa
dec
rorb
cmpsb
shrl
xchg
je
xchg
fimull
mov
sub
sbbl
pushf
mov
mov
nop
adc
fsubs
push
mov
pop
arpl
lea
mov
jmp
cmp
mov
stc
repnz
cmp
stc
xchg
jg
fidivrs
clc
inc
add
scas
decb
mov
sbb
and
cmc
push
dec
out
add
roll
movsl
jae
pop
lahf
dec
sarb
inc
pop
stc
pop
push
lret
sbb
iret
pop
je
push
mov
jo
insl
jmp
mov
mov
lret
add
and
adc
push
push
mov
movsl
mov
pop
or
movsl
inc
dec
add
or
xchg
outsb
fsubrp
fs
push
cmc
sahf
push
cmp
leave
or
sbb
sarl
sub
sbb
xor
xchg
into
xchg
and
shl
test
jns
or
imul
or
pop
mov
mov
ljmp
or
pop
ljmp
sbb
mov
sub
push
and
dec
mov
pushf
das
sub
jge
add
pop
shr
mov
leave
adc
fwait
or
fcomps
rorb
icebp
xchg
push
jno
pop
loope
cltd
jp
mov
icebp
push
and
add
xor
pop
pusha
push
arpl
xchg
push
cmc
push
sub
pop
add
orl
mov
mov
pushf
cmp
mov
pop
call
dec
aam
je
rorl
xchg
jp
sti
in
aas
ss
jae
imul
pop
hlt
int3
fmuls
mov
iret
mov
xor
dec
adc
cwtl
xchg
pop
test
sbb
mov
dec
jmp
int3
test
adc
or
pop
mov
dec
dec
popa
add
int
sub
cwtl
xchg
and
mov
xor
mov
ret
ffreep
xor
lcall
dec
push
cmpsl
loope
vmaskmovdqu
jmp
scas
xchg
iret
push
loopne
shrl
inc
jne
cmp
pusha
lods
or
ficoms
daa
inc
add
add
pop
sub
push
pusha
outsl
xor
in
mov
pop
enter
or
sub
movsl
lock
insl
pop
sub
aam
lret
daa
push
cwtl
adc
cmpb
sub
rorl
or
shl
aas
out
mov
or
movsl
mov
pop
repz
rorl
shrl
ds
pop
popa
dec
sub
repnz
jecxz
or
adc
or
imul
in
hlt
dec
mov
mov
jg
jmp
sub
pop
test
je
xor
xor
xchg
dec
or
sub
fwait
push
push
int3
insb
dec
pop
les
into
test
movsl
push
cltd
xchg
imul
or
ret
inc
das
mov
call
mov
and
or
stos
nop
push
or
cs
push
mov
push
sub
pusha
pop
movl
xchg
jmp
push
outsl
sub
lea
sub
inc
jmp
or
inc
jno
dec
and
rol
shrl
cmp
shrl
jae
jbe
or
scas
incl
cmp
sarl
in
aas
push
jo
pop
push
test
cli
loop
inc
mov
stos
dec
adcb
cmp
aas
dec
nop
loopne
sbb
lds
and
popf
mov
add
xchg
mov
repz
sub
or
jo
mov
dec
pop
inc
xchg
mov
xchg
mov
dec
test
aam
add
sbb
add
xchg
or
sbb
fucomip
aaa
cmpsb
aad
dec
int
icebp
add
mov
outsl
mov
test
leave
lret
lods
add
add
inc
stos
push
jmp
or
pusha
push
push
mov
or
shlb
gs
je
xchg
ret
shlb
push
sub
sti
and
jmp
and
inc
pop
cmp
and
out
adc
imul
push
push
dec
popf
pusha
pusha
xor
insb
push
pop
into
push
xchg
sub
fisubrs
jge
stc
push
pop
rol
pop
cli
push
jo
in
sub
add
out
fs
jmp
cmp
popf
adcb
das
adc
ds
das
insl
dec
pusha
stos
xchg
adc
xor
std
inc
paddusb
sub
pop
mov
fistl
adc
loope
sub
in
decl
pop
nop
and
out
jae
or
lahf
mov
add
pop
mov
jg
adc
adc
out
sbb
cmpb
mov
mov
pop
push
pop
into
roll
mov
add
insb
mov
push
or
xorl
push
mov
cmp
push
ret
jns
dec
mov
adc
or
add
add
sbbb
stos
dec
push
and
add
xor
jmp
lods
iret
test
es
orl
sbb
push
les
jg
js
in
jo
pop
sbb
shrl
inc
dec
js
fcoml
or
dec
ljmp
adc
rcr
sub
loopne
dec
inc
in
mov
add
or
add
les
les
test
mov
popa
sti
inc
add
pop
sub
pop
imul
mov
xchg
push
mov
jno
imul
adc
lahf
or
xadd
fdivs
push
cmp
fwait
add
or
jecxz
ja
fs
ljmp
jecxz
pusha
or
pushw
stos
mov
cmovp
sub
adc
or
jmp
es
sar
jo
jmp
adc
push
mov
lahf
cmp
push
popf
mov
add
pop
daa
orl
xor
sub
push
imul
mov
icebp
mov
ss
xorb
xchg
xorb
pop
add
sub
xchg
xchg
cmp
inc
lock
popa
fcomps
sub
or
dec
dec
push
sub
mov
jbe
mov
jle
or
cmp
insl
addl
inc
pop
faddl
mov
cmp
rcll
and
push
movb
xor
pusha
pop
adc
add
jo
adc
out
add
push
xor
je
inc
or
pop
adc
xor
add
xor
data16
movsb
pop
pop
push
sbb
test
pop
xor
stos
add
add
aam
fadd
fcomps
dec
jg
pop
daa
mov
add
pop
and
movl
mov
sub
dec
repnz
sahf
or
lock
adc
int3
pop
fidivrl
add
add
ja
pop
imul
mov
hlt
ret
mov
sub
not
icebp
into
sub
jmp
mov
popf
add
test
mov
pop
pop
sahf
pop
cmp
xor
mov
imul
cli
push
mov
jmp
in
sub
sbb
shll
repz
mov
pop
and
dec
aam
cwtl
sbb
xor
rorb
fisttps
push
cmc
mov
inc
mov
xchg
or
adc
lods
ljmp
jmp
jmp
insl
loop
xchg
pop
push
or
mov
test
cwtl
lods
incb
shr
data16
xchg
inc
or
clc
xchg
adc
add
dec
sbb
push
sub
nop
add
and
data16
stos
pop
dec
les
je
lret
daa
pop
jne
sub
cmc
and
and
shl
add
in
xchg
mov
xchg
incb
fdiv
cmpsb
cld
subl
add
mov
adc
out
push
mov
fiaddl
insb
pop
test
in
sub
aaa
dec
pushf
popf
hlt
das
popa
outsl
dec
mov
jo
popf
loop
ret
loope
inc
in
pop
and
cmp
push
push
xchg
loope
and
adc
dec
insb
push
and
dec
add
pushf
sti
adc
rorl
xor
push
xchg
inc
add
jl
inc
js
rolb
mov
rclb
jecxz
push
sahf
js
push
add
sub
pop
pop
mov
push
sbb
mov
sbb
cmp
pop
sub
inc
mov
enter
lcall
cmp
xchg
adc
mov
push
pop
push
and
jle
inc
pop
add
inc
and
push
cmp
inc
push
sub
repz
aad
movaps
ja
mov
jl
xchg
std
out
xchg
jmp
push
sub
ret
push
mov
negl
mov
adc
or
jno
sub
pop
add
repnz
shlb
rcrl
clc
jle
push
jnp
or
fnstenv
iret
dec
xchg
push
sbb
cmp
dec
xor
adc
sub
ffree
push
or
jmp
imul
notb
jns
ja
test
rcrl
xchg
xchg
mov
movsl
movsb
leave
cs
cmpsb
jno
add
inc
jmp
out
lds
push
dec
xchg
out
mov
jns
push
mov
stc
xor
cmp
inc
sub
hlt
jp
push
push
enter
in
mov
imul
jmp
ret
shr
or
lds
push
lods
mov
pop
pop
sbb
push
push
mov
sub
inc
repnz
cwtl
mov
sub
sar
push
or
inc
in
push
stc
add
fstpt
scas
scas
daa
sbb
inc
inc
xchg
dec
adc
rcll
push
add
inc
out
xor
mov
inc
push
les
or
add
sub
scas
int
dec
cld
push
cli
adc
sub
sub
dec
push
test
int
out
inc
mov
inc
cwtl
pop
pop
pop
push
mov
inc
gs
addr16
and
pop
add
cmp
sbb
fiaddl
pop
or
push
or
cmpsb
out
xchg
xor
clc
inc
jmp
adc
int
and
push
add
not
push
push
arpl
xor
xchg
lds
or
ss
dec
bound
mov
sub
inc
fcmovbe
jne
cmp
xor
stos
or
in
push
int3
pop
sub
dec
cmpsl
inc
pop
lret
push
push
sub
fs
push
mov
dec
cmpsb
and
jbe
and
or
cs
mov
ret
xor
repz
or
inc
dec
sub
jmp
pop
cmpsb
lods
in
dec
call
push
adc
xor
or
addr16
test
sbb
or
aas
je
push
movsb
imul
adc
and
sub
xorl
xchg
sbb
stc
pop
add
mov
scas
push
js
and
mov
mov
cmpsl
movsl
in
cmp
mov
enter
and
or
push
or
push
lret
cmp
mov
mov
cmp
jmp
cmp
inc
popf
cmp
adc
jno
dec
jg
fldpi
or
or
push
add
pop
mov
pop
adc
push
jge
xorl
shrl
roll
cwtl
or
sahf
add
cmp
mov
out
mov
idivb
sbb
lods
push
cwtl
mov
dec
inc
or
out
jmp
push
pop
pop
fsts
fdivr
add
sub
jmp
adc
bound
and
add
cmp
fsubrp
decb
pop
cmp
add
icebp
insb
icebp
cs
scas
or
sub
loop
ds
pop
jge
aam
fs
adc
ss
pop
outsb
push
push
int
add
ljmp
mov
push
shr
or
jbe
in
add
lret
xchg
fisubl
test
mov
and
test
cld
aaa
push
mov
pop
dec
add
fmuls
xor
sub
lods
mov
fs
sub
dec
and
pop
repnz
stc
pop
pop
dec
push
andb
jbe
dec
push
pop
dec
cli
xchg
movsl
pop
pop
addl
out
aas
dec
enter
cmp
or
pop
inc
mov
adc
movl
movsl
mov
lcall
dec
add
pop
cli
pop
mov
rcrl
fidivs
fadd
imul
mov
rorl
inc
pop
pushf
adc
repz
ret
mov
add
mov
lcall
int
add
jae
pusha
fdiv
push
sbb
xlat
push
mov
sub
xchg
push
jne
push
jmp
adc
add
lds
mov
in
and
lock
lds
fs
mov
and
xor
fs
xor
xor
jle
loop
jl
repnz
sub
dec
mov
adc
inc
movsl
in
lods
lock
lock
aad
sub
add
inc
add
in
pop
jle
inc
faddl
andl
pop
push
jmp
mulb
cmpb
jg,pn
neg
xchg
cld
movsb
sub
sub
add
sub
shl
lret
jecxz
dec
sbb
push
repz
or
loope
sbb
ret
aad
stc
popa
add
je
push
xor
jmp
mov
xor
aam
mov
test
pop
xor
pop
sub
sub
scas
dec
inc
add
xor
testb
add
pop
fmul
das
sbb
movsb
push
or
sub
mov
lods
pop
call
outsb
push
jmp
rcl
and
add
clc
xor
add
push
jg
xor
pop
clc
xchg
repnz
aas
out
cwtl
sbb
adcl
mov
adc
sub
jae
clc
aad
shll
sub
and
mov
inc
sbb
in
cmp
add
les
or
fucomp
addps
dec
xor
push
pop
test
jbe
push
add
cmp
lock
js
orb
jmp
xchg
imul
push
loope
and
jecxz
dec
int3
inc
rcrb
es
or
clc
add
ret
add
fnstenv
sub
mov
clc
push
sbb
rorb
xor
inc
jge
sub
add
mov
aaa
jns
add
inc
sbb
jp
ret
or
jae
ret
dec
aas
mov
and
mov
xchg
out
sbb
jae
loope
inc
adc
pop
add
popl
nop
out
sahf
mov
rcrl
mov
cmp
out
dec
les
adc
or
iret
fstpl
faddl
lret
jb
loope
cld
jnp
sbb
dec
in
clc
dec
dec
xchg
add
loope
imul
mov
ret
loope
rcrl
or
pop
mov
std
fiadds
push
lahf
and
push
push
xchg
or
or
push
es
mov
mov
ljmp
ret
dec
stc
mov
mov
jbe
mov
push
pop
mov
mov
inc
popf
mov
ljmp
add
mov
sbb
cmp
idivl
jmp
js
xchg
mov
xchg
sbbl
or
movsl
out
jb
xor
dec
sub
add
or
jge
test
mov
scas
pop
add
and
in
les
add
add
xor
jl
pop
push
add
push
loope
pusha
dec
pop
add
adc
cmpsl
cmp
ret
push
adc
dec
iret
and
aas
or
adc
insl
subps
je
add
dec
mov
pop
push
push
popa
adc
int
or
shll
or
nop
dec
jb
sbb
pop
inc
aam
push
rclb
sub
nop
stos
jo
mov
xor
sub
push
shl
shrl
pop
mov
ds
push
xchg
cld
in
repnz
mov
in
pop
jbe
sti
cmc
pop
inc
cmc
in
jno
sub
push
add
and
shlb
or
cmpsb
lds
movb
outsl
sub
add
adc
stos
orl
mov
into
std
add
push
push
add
sbb
dec
pop
loope
add
xor
mov
test
leave
push
cmpl
pop
pop
sub
movsb
pushf
out
scas
dec
addl
pop
xchg
gs
jns
cmp
lods
bound
push
sbbl
xlat
jge
es
sub
lahf
add
add
inc
roll
mov
outsb
sbb
js
rcrl
sti
enter
scas
scas
inc
out
std
ret
sub
in
frstor
mov
sub
gs
mov
lock
sbb
imulb
or
and
loop
adc
push
pop
jno
test
push
out
xlat
pop
jmp
pop
cwtl
xor
std
xchg
ljmp
xor
fcmovnb
lods
test
xchg
lds
mov
dec
add
pop
sti
or
imul
sbb
or
sub
xchg
adc
inc
ljmp
inc
stc
dec
mov
xor
ljmp
loopne
pop
movsb
lret
push
push
stos
cmp
mov
inc
jno
mov
xor
jae
mov
dec
pop
xchg
and
sbb
in
ds
mov
test
add
addl
sbbb
push
adc
stos
nop
cmp
ja
cvtps2pi
pusha
imul
push
push
push
addl
adcb
int3
xlat
jmp
inc
cmp
mov
add
mov
dec
fs
xor
push
mov
into
cmp
mov
sbb
shl
adcl
adc
into
nop
lahf
in
out
jmp
rclb
push
push
jb
sti
add
xor
hlt
xchg
mov
and
stos
out
test
xor
inc
adc
pusha
mov
ja
jmp
pop
lea
mov
or
add
pushf
push
cli
sub
mov
mov
or
test
sub
pop
lock
pop
dec
inc
push
cmp
lret
or
push
andb
shl
add
ret
push
and
push
cmp
dec
jbe
xchg
pop
mov
adc
mov
jae
jns
cmp
rcl
cwtl
add
fstpl
in
push
xchg
push
add
popa
or
pushf
aam
cmp
repz
movsb
or
negb
jmp
push
adc
sbb
cmp
pop
push
push
dec
dec
aad
cli
add
faddl
mov
out
pushf
mov
xor
push
sub
pop
push
cwtl
mov
shlb
arpl
or
into
insl
fistl
push
pop
orl
cmp
xor
jmp
or
iret
xlat
es
aad
inc
sub
out
jb
pop
lods
add
icebp
movsb
imul
aaa
xlat
push
sub
sbb
daa
xchg
jl
and
std
xchg
add
ret
add
adc
repz
das
inc
push
jmp
mov
mov
push
add
cs
sub
movsb
je
mov
and
inc
jmp
stos
sub
lret
fs
push
push
test
out
xorb
jmp
push
jae
enter
outsb
repnz
add
jb
stc
dec
loope
das
lret
push
adc
stc
frstor
inc
cmp
ss
inc
mov
test
pop
shrl
int
das
inc
mov
out
das
push
push
in
pop
mov
rcll
push
notl
out
mov
pop
jle
adc
inc
flds
jmp
int
in
xor
mov
mov
jbe
mov
cmp
mov
sti
dec
add
inc
add
or
mov
sub
sub
ret
rolb
xchg
xchg
icebp
xor
sbb
and
sub
xchg
int3
arpl
imul
xor
inc
pop
and
push
insl
or
in
add
push
fildl
stc
mov
shr
xor
clc
int3
les
xchg
adc
bound
imul
mov
les
test
icebp
dec
loope
pop
jl
or
outsl
add
jo
dec
xchg
and
in
repz
cmc
aas
ss
and
push
mov
iret
push
negl
fdivr
ror
mov
or
mov
push
adc
pop
inc
jp
cltd
mov
push
aaa
xchg
repnz
xor
pop
insl
aad
ror
sbb
add
add
dec
add
mov
imul
outsb
add
xor
lock
mov
xchg
adc
jmp
out
push
push
sbb
aad
clc
test
add
dec
add
adc
repnz
and
out
cwtl
cmpsb
movb
fdivl
push
and
shlb
or
dec
addl
popa
not
loopne
pop
and
mov
jle
clc
pop
dec
pop
pusha
xor
add
inc
pusha
add
outsb
or
push
mov
rol
out
inc
push
mov
add
aad
in
or
ljmp
jl
es
xlat
sbb
or
xor
adc
push
push
mov
jmp
notl
aam
jle
and
jmp
push
adc
and
adc
add
add
push
add
pop
shll
out
inc
sahf
fstpl
test
or
add
push
test
mov
scas
push
cld
std
and
sbb
add
shll
push
or
add
mov
hlt
push
loopne
sub
xor
or
mov
sbb
jmp
ret
filds
ljmp
sub
leave
and
ss
push
bound
mov
mov
mov
mov
pop
add
aam
push
xor
sub
inc
xor
xor
jno
jge
jo
lahf
int
xor
jns
lods
adc
in
mov
fistpll
cmp
sub
or
jo
mov
pop
cmp
push
loopne
cltd
sub
pop
lret
sbb
orl
test
mov
in
inc
test
adc
push
insb
xchg
cli
adc
jge
repnz
rcrl
movsb
repz
xchg
in
data16
loop
dec
push
shlb
testl
roll
or
xor
add
push
xchg
std
jle
inc
insl
xor
jmp
add
dec
and
test
mov
fsubrp
or
jg
lock
xchg
pop
push
loopne
jbe
add
jg
cwtl
repnz
xchg
repnz
add
sub
sub
add
sbb
gs
pop
sti
xor
outsl
rcl
jbe
cmp
dec
jb
shr
pop
aad
imul
int
jnp
inc
cwtl
xor
mov
push
adc
out
pop
lods
loop
push
aaa
and
or
pop
inc
sub
mov
sub
cs
add
jmp
and
or
enter
aas
repnz
xchg
ss
sbb
scas
or
mov
rcrb
test
push
mov
leave
mov
fabs
loopne
leave
je
lods
and
dec
mov
icebp
inc
dec
add
mov
and
and
pusha
or
jno
xor
add
mov
or
inc
pop
mov
sub
adc
cs
ljmp
sbb
xchg
addl
mov
xor
repnz
push
push
push
mov
neg
inc
rol
xchg
push
je
add
sub
sub
pop
mov
push
or
rcrl
mov
cs
data16
or
dec
push
add
bound
adcb
scas
daa
mov
jg
jmp
mov
jecxz
repnz
xor
add
xor
pop
and
pop
cwtl
inc
jns
das
enter
and
fstl
jmp
ljmp
pop
jl
jmp
adc
sbbb
or
push
shll
icebp
or
jo
insl
jb
daa
add
jae
cmp
push
or
xor
gs
lret
mov
or
cmp
iret
xor
pop
jmp
loopne
xchg
fbld
cmpsl
js
adcb
fbld
cmp
lret
xor
mov
add
jmp
push
mov
xlat
sbb
push
clc
hlt
stos
mov
add
mov
sub
sub
sbb
xchg
std
add
lret
add
ret
pop
das
push
ret
rolb
cld
mov
push
pop
js
dec
ja
xor
std
icebp
xor
push
inc
dec
in
push
mov
cltd
dec
mov
mov
adc
scas
add
sub
xchg
mov
test
jle
lods
pusha
pushf
shl
add
roll
adc
cmp
or
jo
or
lods
daa
rcrb
repnz
push
pop
push
ret
or
pop
idivb
push
inc
xor
jno
add
add
add
loopne
cmpsl
movsb
mov
push
pushf
lret
or
sbb
imul
cmp
add
sarb
sbb
add
push
ret
or
daa
xchg
and
or
add
xchg
push
dec
movsl
jnp
xlat
cmpb
xlat
push
pop
or
adc
js
push
and
outsl
push
pop
mov
add
pop
shr
add
pop
pusha
in
jmp
neg
add
push
repnz
dec
stos
dec
add
and
pop
imul
cmp
pushf
or
add
imul
xor
mov
sbb
sbb
sub
lods
adc
mov
insl
push
or
cmp
ficompl
or
scas
ss
aad
mov
pop
fwait
int3
cli
and
and
mov
roll
lock
popf
roll
jmp
mov
loopne
cmp
imul
add
mov
jp
nop
out
out
das
scas
push
aas
dec
incw
jecxz
push
push
push
inc
pop
mov
call
mov
mov
repz
rcrb
or
dec
xchg
pop
jp
aas
dec
jmp
add
cmp
fcmovu
and
and
dec
cmp
aas
faddl
dec
sub
push
ljmp
mov
inc
push
push
fldenv
push
mov
popa
push
add
sbb
xchg
pop
in
pop
mov
xor
loopne
pop
test
cli
int3
lahf
sub
shr
lret
clc
adc
cwtl
lods
jno
cmp
adc
mov
pop
push
add
and
and
out
loop
xchg
idivb
repz
xlat
mov
xor
push
adc
call
push
or
push
pop
xor
xchg
cmp
in
push
and
add
lret
imul
movsb
iret
test
jo
rclb
in
adc
lret
std
lret
pop
pop
push
cmpsl
insl
dec
test
movsb
add
imul
insl
or
loop,pn
roll
push
push
movl
stos
push
push
leave
jo
pop
adc
dec
add
mov
out
leave
sub
sbb
or
add
pop
xchg
jns
ret
adc
sar
es
fdivrs
movsl
sti
inc
das
negl
shr
into
pop
mov
xchg
add
jmp
pop
cmpsl
out
add
test
jns
scas
mov
adc
ja
outsl
xor
mov
pop
rcl
jae
pop
fcoms
sub
xor
or
jmp
fbstp
in
lds
insl
sbb
add
xchg
dec
imul
je
outsl
and
push
sbb
sarb
roll
out
sub
fmuls
pop
pop
inc
sub
outsl
repnz
lret
and
in
stos
xchg
mov
shll
pop
shr
mov
pop
jmp
mov
cli
jecxz
push
cmp
dec
add
leave
aas
lcall
inc
jmp
mov
mov
push
pusha
cmp
pop
sub
add
push
es
loope
push
mov
call
inc
and
bound
adc
in
sbb
pop
pop
add
dec
and
orl
push
xor
dec
mov
xchg
inc
mov
jno
repnz
fcmovb
js
mov
sti
int
push
js
or
lds
and
or
aad
adc
jmp
inc
inc
lock
pusha
mov
shl
shl
dec
aas
or
sub
add
sub
cmp
aam
int
arpl
std
int
stc
ljmp
test
shlb
subb
and
or
pusha
xorl
clc
inc
mov
push
lock
and
cwtl
push
jb
imul
adc
pop
pushf
pusha
add
icebp
xchg
jmp
lock
mov
jp
adc
cmp
lret
mov
xor
xor
jmp
add
in
insl
push
mov
add
pop
and
fs
lret
lahf
subl
into
and
stos
fwait
mov
and
inc
jnp
dec
sub
mov
cmp
xchg
xchg
mov
mov
test
and
das
add
stos
xor
adc
adc
and
enter
cli
in
sbb
add
sbb
mov
cmp
or
pop
pop
adcl
pop
imul
loopne
push
xchg
push
loop
or
push
nop
loop
or
mov
xchg
adc
xchg
pusha
inc
sub
sbb
push
repz
cmp
jo
pop
outsl
push
xor
icebp
es
pop
shlw
mov
into
cmpsb
adc
dec
stc
push
cmpl
inc
daa
rorl
xor
adc
pop
push
add
adc
or
adc
sub
push
or
addr16
push
sbb
add
sub
out
pop
and
sub
aas
or
xor
dec
sub
inc
or
push
sub
inc
push
cmc
in
sarl
cmpb
jno
pop
push
mov
cld
out
adc
mov
test
pop
in
xor
jno
bound
or
lret
push
mov
test
iret
cmpb
repz
sbb
iret
xchg
aaa
pop
sahf
rcll
hlt
adcb
mov
and
add
arpl
fisubs
neg
addr16
jle
inc
movsb
lret
mov
nop
pop
inc
inc
cwtl
dec
cmc
cmpsl
cli
sbb
push
push
je
out
add
jmp
push
jl
and
mov
push
popa
mov
xacquire
lods
sub
sub
push
insb
lcall
jle
cltd
movsb
or
sub
mov
imul
into
pop
cmp
or
mov
push
mov
lock
dec
push
mov
pop
push
xchg
repz
insb
int
and
scas
mov
jns
dec
cmp
xchg
testb
push
sub
int
jnp
sahf
loopne
push
cwtl
xchg
xchg
cmp
lahf
jmp
rorb
xchg
inc
movsb
xchg
mov
sbb
mov
xchg
mov
mov
push
push
push
cs
add
dec
mov
jmp
push
push
pusha
mov
xor
adc
test
cld
mov
adc
and
sub
setne
scas
jmp
clc
jno
pop
mov
or
cwtl
jmp
and
xor
out
sbb
sbb
inc
xchg
pop
jb
clc
inc
add
cmp
cwtl
pop
jl
adc
xorb
add
xorb
and
adc
dec
dec
jecxz
adc
shrb
dec
mov
cmp
push
mov
and
pop
lods
dec
adc
pop
push
or
push
rcl
xor
cmpsb
mov
cmp
pop
push
or
pop
test
add
add
cmp
into
or
or
pop
test
mov
sub
mov
sub
std
dec
push
mov
push
mov
xchg
add
pop
fs
test
fucomp
cmpsb
movsl
mov
push
xor
inc
push
push
and
jae
jg
and
test
push
add
in
jmp
pusha
inc
push
jmp
add
out
jns
add
push
adc
dec
icebp
sbb
mov
mov
sub
push
cwtl
xchg
dec
or
loopne
ficoms
pop
fbstp
and
jb
nop
jbe
sub
cwtl
add
sub
add
jno
andl
jbe
add
xor
je
clc
adc
dec
cmp
lea
sbb
arpl
pop
and
and
mov
xor
cwtl
sbb
dec
push
mov
cmp
cmp
dec
mov
inc
dec
pop
inc
daa
cmp
jg
add
cmp
add
add
inc
push
aaa
cmp
inc
enter
inc
adc
es
add
out
push
mov
inc
dec
in
push
xor
sbb
inc
pop
pop
cmp
add
push
or
add
loope
push
mov
mov
or
jge
mov
jmp
in
xchg
les
fiaddl
and
xchg
shlb
inc
imul
dec
into
cmp
loope
fbstp
movsb
xor
jo
int
mov
mov
lret
xor
test
shl
adc
jg
add
push
sub
pop
out
mov
push
adc
add
ljmp
gs
rcrb
shrl
mov
jb
jmp
jmp
dec
cmpsl
xor
or
jb
pop
push
popa
movups
pop
neg
add
add
ljmp
andl
out
cmpsb
inc
add
pop
lret
jmp
iret
rcrl
cmp
jmp
les
push
push
adc
and
cmp
push
push
fdivs
sti
punpckhwd
add
shrl
and
loope
roll
or
push
and
or
shlb
scas
push
stos
sahf
push
or
push
sbb
outsb
lret
jg
mov
imul
xlat
adc
xchg
push
gs
or
insb
cwtl
add
add
and
rclb
popa
pop
add
mov
sub
adc
sub
xor
mov
and
and
sbb
in
ret
cs
lcall
dec
xchg
repz
mov
jecxz
dec
and
fidivrs
repz
sbb
mov
popf
in
cld
pop
not
xchg
xchg
pusha
ror
xor
mov
sub
movsb
pop
popf
ret
adc
rolb
pop
mov
jmp
sub
out
cmp
fmull
mov
push
or
sbb
push
fsin
lock
sbb
or
or
data16
out
sbb
mov
adc
shrl
pop
rcl
push
xor
add
fisttpl
sub
push
xor
sbb
cld
xchg
aad
adc
mov
rolb
out
jge
sbb
and
int3
stc
roll
rolb
cmpl
push
mov
or
shlb
enter
andl
push
pop
loope
cmp
es
mov
dec
adc
xor
shll
clc
and
adc
je
das
mov
lock
cwtl
cmpsb
xchg
push
lahf
push
icebp
imul
cld
mov
adc
pop
dec
test
ret
adc
mov
cmp
push
dec
jle
std
push
out
fucomp
call
push
enter
in
cmp
clc
mov
ret
or
add
push
mov
mov
mov
or
xchg
shlb
xchg
insl
and
pushf
pusha
test
add
shlb
push
or
and
rcll
add
fsts
jmp
adc
jl
nop
jo
dec
dec
and
loopne
std
mov
sub
add
xchg
cmp
icebp
lds
or
out
xor
popa
add
jo
xchg
add
pop
mov
aas
xchg
inc
shll
inc
cmc
add
std
movsb
popf
les
in
xchg
pop
lods
scas
loopne
jmp
jne
ficompl
lcall
and
mov
aaa
fsts
es
repnz
cmp
dec
pop
stos
sbbl
cld
ds
push
cwtl
aam
outsl
sub
clc
cs
pop
lock
jno
cwtl
arpl
mov
icebp
cmc
call
push
inc
test
lahf
pop
jmp
pop
inc
fdivrs
mov
js
add
pop
enter
fs
jne
mov
sub
push
dec
add
sub
inc
fadd
aam
cmpsl
popf
xchg
bound
push
add
lret
cltd
cmp
loopne
adc
es
sbbb
icebp
dec
push
je
cmp
cmp
jmp
lock
rcl
push
adc
in
imul
jb
push
enter
xor
mov
andb
xlat
pop
pop
or
fdiv
inc
inc
add
pop
mov
test
test
nop
jbe
sbb
pop
pop
in
xchg
rcll
add
es
pop
or
adc
sub
push
inc
push
mov
adc
mov
xor
or
inc
rorl
and
outsb
or
inc
jmp
mov
jbe
shl
inc
jmp
in
mov
inc
xor
pop
lods
ret
jb
dec
sub
mov
mov
sbb
push
push
loopne
lock
jp
aad
mov
xor
cmp
mulb
out
out
ret
out
inc
test
push
mov
jbe
push
xchg
mov
adc
inc
es
jmp
add
adc
sub
mov
or
jo
push
out
popa
test
hlt
mov
loope
orb
dec
jp
mov
or
daa
cmp
lret
push
faddl
cmp
pop
push
shr
and
dec
cmp
push
inc
adc
or
jp
adc
das
movsl
lock
popf
jns
mov
sub
add
pop
pop
and
pop
pop
jns
fsubr
sbb
jb
pop
ja
lcall
ja
jle
fisttpl
dec
rolb
mov
pop
out
and
repnz
and
mov
cmp
jg
add
push
shld
cld
mov
sub
bound
andb
xlat
shl
add
int3
ret
mov
add
inc
xor
in
mov
xor
out
scas
push
or
ret
sbb
add
test
in
hlt
push
and
call
add
add
push
loope
add
jmp
jl
sbb
pop
neg
dec
push
test
stos
in
inc
aam
ret
dec
inc
pop
fdivs
adc
scas
pop
add
movsb
nop
sbb
xchg
or
mov
sub
pop
jl
sahf
enter
call
call
xor
jmp
push
or
insl
adc
in
adc
xor
dec
decb
jmp
shll
daa
cmp
or
cmp
mov
mov
or
add
and
add
in
or
std
adc
pop
pop
orb
push
push
orl
jmp
loope
scas
jg
aaa
mov
adc
pop
jbe
cmovg
and
ljmp
test
shl
sbb
mov
fnsave
push
daa
mov
mov
fwait
rclb
jl
test
data16
out
add
int3
lret
sub
push
mov
jl
inc
bt
inc
insb
inc
ja
mov
add
and
adc
mov
and
inc
imul
and
int
in
call
rolb
pop
and
ret
fwait
ror
jmp
add
fs
add
push
ret
dec
mov
fildl
adc
adc
mov
lds
repnz
inc
and
cmc
adc
enter
push
mov
andl
sub
or
pop
or
mov
loope
shl
int3
adc
leave
data16
dec
je
int
mov
xchg
or
cld
pop
ret
sub
xchg
les
sbb
and
jmp
sub
and
dec
dec
push
inc
inc
enter
sbb
cmp
add
lods
out
fs
xor
pop
dec
shr
pop
ret
mov
lret
pop
clc
or
ret
pop
mov
jne
sbb
sub
pop
test
test
add
jge
shr
nop
stos
dec
mov
rcl
cmp
jb
add
popa
cmp
rcrb
push
add
es
jmp
mov
movsb
and
shrb
add
inc
data16
and
mov
push
add
and
sub
fnstenv
filds
add
clc
sub
cltd
bound
sbbb
push
clc
jle
rol
in
push
inc
xorb
ret
stos
fwait
push
test
mov
dec
lret
adc
or
lcall
es
xchg
adc
dec
add
loopne
neg
sub
jo
jae
ficomps
push
xor
testb
test
push
push
push
sub
add
lret
nop
cs
jno
jns
lea
test
fs
sub
xor
push
stos
int3
xor
xor
adc
push
clc
push
push
push
sbb
sub
jl
xchg
mov
jae
and
xchg
mov
push
stos
ja
insb
aam
leave
test
gs
sub
movsl
adc
inc
out
jb
add
add
fsts
pop
sbb
or
mov
js
pop
mov
leave
or
pop
push
adc
mov
pop
pop
stc
orb
dec
flds
sbb
clc
int
add
cmp
jns
fisttps
nop
xor
pop
lock
adc
adc
xchg
aas
aad
lods
adcb
mov
jge
cltd
jmp
push
lods
xchg
lods
out
fbld
and
adc
loope
mov
push
push
cld
scas
dec
in
xchg
inc
adc
push
add
aad
xchg
or
jo
loop
add
les
rcr
adc
or
and
repnz
xor
or
sub
jmp
push
jmp
sbb
push
ficompl
add
inc
inc
call
outsb
adc
das
jb
jmp
aaa
clc
sbb
out
call
jle
daa
add
push
fs
cmp
jg
mov
push
jl
addb
ljmp
dec
cmp
jmp
cltd
sbb
mov
push
ss
push
rolb
sbb
aas
mov
or
sub
or
add
jne,pn
sbb
in
xchg
mov
pop
daa
mov
mov
call
leave
cmpl
push
inc
nop
sbb
cwtl
mov
mov
adc
imul
sub
sarb
or
insb
add
sub
sub
icebp
outsb
sub
fldl
push
lock
or
gs
andb
lcall
adc
jnp
sub
pop
sbb
or
pop
neg
dec
outsb
call
sub
pop
push
rorb
lahf
xchg
jnp
or
adc
add
xchg
adc
cmp
and
add
daa
or
cli
mov
jmp
repnz
ret
enter
or
leave
push
add
xchg
es
push
lahf
fs
push
cli
cmp
les
cmpsb
nop
mov
add
mov
daa
cmp
adc
xor
jne
inc
sub
std
int3
mov
loop
xlat
fmuls
sub
sbb
jge
xchg
scas
cmpsb
dec
and
adc
push
cmp
mov
adc
cld
cmpsl
push
mov
nop
sbb
repz
adc
or
loop
push
pop
mov
lcall
jb
icebp
and
outsb
arpl
jmp
inc
daa
popa
hlt
dec
pop
sarl
ja
sub
or
xor
mov
add
ret
push
icebp
scas
loop
loop
pop
cmp
pop
push
aam
jo
rcr
movsb
dec
pop
mov
bound
add
jecxz
loope
scas
jmp
jge
cmpsb
mov
in
sub
mov
inc
frstor
daa
and
mov
or
mov
jle
andb
xor
mov
adc
mov
push
popa
mov
inc
movsb
inc
popa
popa
cld
clc
xlat
jg
stos
cmp
data16
adc
dec
mov
add
outsb
mov
js
dec
push
sbb
mov
dec
loopne
notb
sub
int3
or
bt
pusha
xchg
xchg
add
andb
pop
xlat
loop
inc
nop
mov
cmp
adc
and
arpl
and
es
nop
fadd
pop
ds
jae
add
jno
xor
clc
addb
inc
dec
dec
pop
outsl
inc
or
push
rorl
xor
pop
adc
jmp
cmp
push
mov
ljmp
xor
add
fcmovnbe
outsl
or
orb
dec
sbb
cmp
ljmp
push
pop
or
xchg
or
sub
es
dec
cmpsb
les
fcoms
push
loope
xor
jle
sbb
xlat
sub
adcl
jbe
rorl
stc
in
and
loopne
enter
xor
mov
sub
cmpsl
or
cmc
pop
cmc
scas
mov
jmp
push
push
pop
movb
outsl
hlt
rclb
lcall
pusha
jge
popf
sbbb
xor
test
movsb
enter
es
jmp
movsb
mov
cli
pop
mov
jmp
divl
ljmp
out
sbb
insl
mov
xchg
add
fdivs
sbb
rcrl
lods
clc
inc
jne
push
sbb
cwtl
push
pop
inc
jle
xchg
mov
push
push
es
jmp
xchg
pop
ljmp
out
push
cwtl
addb
cli
dec
push
daa
add
jg
popa
mov
jmp
pop
test
pop
out
aaa
mov
cmpsl
jns
in
mov
popf
jae
mov
stc
addr16
inc
jp
mov
int3
xchg
push
mov
pop
roll
or
idivl
test
add
jg
or
jne
into
aaa
rclb
orb
xor
or
inc
and
adc
xor
add
ret
hlt
rorb
adc
stc
xchg
lea
push
test
mov
dec
inc
js
cmp
xchg
and
imul
lea
xor
gs
ret
in
lret
aaa
ja
push
mov
call
push
shr
lds
pop
std
iret
xor
lret
or
orl
cmc
push
popa
pop
or
xchg
xor
sub
fcoml
loop
repnz
popf
aaa
lahf
out
mov
daa
add
lea
adc
or
push
pop
xchg
aad
test
mov
out
add
jecxz
mov
sbb
into
pop
push
pop
push
xchg
pop
cmc
sub
jne
adc
aas
inc
jo
sbb
enter
rorl
imul
lods
jns
test
push
cmpsl
mov
les
nop
popf
dec
push
dec
push
bound
out
cs
cli
sbb
jne
cwtl
popf
pop
xchg
insb
dec
cwtl
mov
mov
xchg
adc
xorb
or
mov
mov
xor
in
add
inc
shrb
adc
stos
mov
jns
imul
rcl
cwtl
movsb
mov
or
lret
sbb
scas
out
mov
mov
mov
push
ds
adc
mov
jge
adc
pop
xor
mov
ljmp
ja
push
gs
mov
and
aad
sbb
gs
sahf
mov
or
jnp
test
cmp
mov
js
push
cmp
das
adc
add
add
out
sbb
or
adc
lods
outsl
adc
das
push
mov
pop
xchg
mov
xor
daa
sbbl
shll
xlat
sub
push
sbb
iret
jmp
and
xorl
aad
lret
mov
mov
outsb
jl
add
loop
xchg
imul
adc
adc
test
dec
out
ds
cltd
loop
jle
push
cmp
loopne
cmp
ss
or
lods
orb
and
icebp
adc
push
adc
test
jb
or
mov
dec
sbb
mov
mov
mov
sbb
sub
scas
jmp
mov
test
cmp
push
test
not
rorb
loopne
add
and
add
and
mov
mov
rorb
test
mov
out
divl
daa
clc
stc
xchg
loope
sub
fsub
pop
cwtl
push
call
jo
and
enter
inc
sbb
imul
nop
lods
add
insl
mov
sub
xchg
pop
out
je
daa
push
or
inc
cmpsb
cmp
out
and
adc
shr
adc
cs
lret
inc
fisubrs
iret
dec
jmp
xchg
mov
dec
mov
cmp
iret
stos
add
notl
enter
adc
jns
fistps
fsts
jne
cltd
ss
ret
lahf
inc
adc
ret
les
mov
push
mov
sub
out
mov
lock
subb
and
sub
or
popa
sub
addl
jne
push
pop
dec
jl
out
add
std
orb
dec
push
push
mov
jmp
push
scas
fs
mov
jmp
adc
bound
aam
inc
push
mov
add
adc
mov
xor
sti
and
add
outsb
fildll
mov
addr16
jmp
push
int
lds
xlat
or
jmp
pop
pusha
inc
jns
cld
arpl
mov
lock
dec
ss
and
loop
inc
add
dec
jo
lock
push
push
lock
not
add
sub
inc
pop
push
ss
ret
lds
insb
loopne
add
inc
mov
push
jmp
xorb
push
out
mov
in
add
std
wbinvd
pop
divl
adc
mov
add
aas
push
loop
lcall
push
pop
add
icebp
jmp
icebp
shl
mov
jmp
lea
ret
inc
loop
xchg
test
loopne
shlb
std
das
lock
icebp
loope
lret
add
cmp
mov
cmp
push
xchg
inc
push
pop
shlb
xchg
or
or
push
ja
sub
pop
push
imul
sub
pop
inc
add
push
inc
cmp
mov
push
or
sti
cmc
pop
push
sub
and
mov
pop
xchg
jbe
add
cs
div
imul
push
jnp
aaa
cmp
aam
stos
cltd
push
cmp
push
in
mov
popa
adc
clc
clc
int3
std
clc
hlt
adc
jecxz
or
sbb
add
shlb
cld
cmp
xchg
leave
fs
sar
divl
rcll
or
inc
inc
imul
stos
nop
xchg
push
bound
outsb
add
pop
cmp
leave
push
push
sbb
dec
dec
clc
inc
push
mov
sub
and
pop
jbe
or
push
pop
sub
sub
sbb
hlt
in
mov
pop
aas
stc
out
mov
stos
arpl
aas
inc
push
jmp
jg
and
add
lahf
xor
push
dec
mov
lea
imul
fs
mov
xchg
push
icebp
push
les
mov
js
es
and
repnz
outsb
sbb
push
hlt
sbbl
repz
aam
dec
mov
push
jmp
adc
xchg
mov
mov
mov
incb
mull
pop
outsl
jmp
mov
arpl
xor
dec
pop
mov
xchg
lret
lds
rcr
mov
fstps
dec
ds
clc
popf
or
mov
movsb
xchg
jmp
add
dec
push
pop
cmp
lret
cmpsl
into
or
push
jle
sbb
xchg
dec
shr
inc
lahf
icebp
ds
icebp
es
adc
loop
dec
hlt
in
pop
stc
fucom
sbbb
movsb
adc
imull
add
into
push
bound
jno
mov
outsb
and
inc
inc
sub
imul
rorl
add
and
pop
repnz
inc
jb
mov
cmp
push
push
add
movsb
bound
push
out
call
movsl
popf
pop
in
test
xlat
add
add
xor
sub
push
xor
loop
cmc
ja
adc
pop
push
shlb
mov
sub
and
pop
cmp
std
dec
jbe
dec
js,pn
insb
movsb
or
pop
sub
sbb
outsl
or
cmp
dec
dec
shr
jmp
jae
push
mov
xor
frstor
push
popa
out
iret
nop
lds
lahf
jae
or
and
mov
sub
jo
lods
dec
jbe
inc
dec
outsl
das
cmp
adc
cli
mov
push
mov
add
icebp
cmp
adc
and
mov
pop
test
jecxz
ds
mov
cmp
jo
jne
imul
cwtl
cwtl
sti
dec
inc
test
xor
jmp
or
xchg
mov
add
pop
dec
imul
pop
cmc
jno
adc
fisubs
mov
out
add
sub
xchg
test
stos
stos
mov
and
in
pusha
les
bound
in
pusha
sbb
mov
loop
js
int3
inc
sbb
ret
stc
dec
es
push
in
adc
mov
xor
xchg
movsl
dec
js
add
mov
sbb
leave
pusha
sbb
or
in
outsb
fstpl
xor
ds
dec
adcb
push
inc
pop
mov
int3
lret
or
or
xor
sub
outsl
mov
fwait
das
mov
jnp
test
outsb
loop
mov
or
lds
inc
mov
add
sub
mov
lahf
bound
fcoms
push
inc
addr16
ja
out
inc
repz
and
pop
bound
out
in
or
pop
push
pop
sub
jg
lcall
fstpl
sub
jne
sti
push
and
mov
jmp
add
lods
jne
pop
cmc
xchg
add
movsl
cld
pushl
sbb
jno
cmp
fmuls
inc
imul
subb
insb
xor
cli
mov
in
shr
xor
mov
stc
loopne
and
dec
mov
mov
andl
int
ljmp
dec
fisubrl
mov
push
xchg
xchg
mov
int
hlt
cmp
jno
insl
pop
or
ret
cmp
cmp
jp
popf
aad
mov
ss
or
clc
mov
icebp
pop
ret
into
push
mov
mov
shll
add
pop
cmp
test
pop
int
ds
out
das
pop
out
add
movsl
sub
daa
les
adc
push
clc
sbb
add
fnstsw
out
sub
adc
mov
fwait
add
xchg
adc
push
daa
pop
and
or
out
lds
add
rorb
mov
xchg
lock
inc
jge
sbb
jp
rorb
dec
xor
inc
rsqrtps
popf
jae
xchg
adc
clc
pop
sub
roll
cltd
mov
pop
ret
mov
add
adc
jmp
push
push
push
pop
inc
push
sub
dec
cli
shll
push
mov
push
push
in
pusha
icebp
push
cmp
bound
repnz
jmp
loopne
aam
mov
lods
and
or
push
cmp
inc
dec
cmp
xor
xor
push
cld
cmp
popa
pop
pop
lds
in
aam
add
shrb
pushf
pop
inc
into
jo
add
repz
ljmp
in
cmp
add
sbb
mov
and
ljmp
mov
icebp
push
mov
xlat
ficoms
loop
jcxz
adc
test
cmpb
ljmp
adc
dec
sbb
adc
mov
cmp
in
out
mov
jbe
sbb
outsb
jl,pn
add
sahf
mov
and
mov
imul
jno
lds
sub
or
pusha
or
cli
add
and
in
js
xlat
mov
push
cld
mov
pop
pop
mov
mov
push
ljmp
mov
and
pop
into
jmp
fbstp
out
pop
mov
sbb
arpl
adc
jmp
pop
jecxz
adc
mov
push
fistpl
push
cs
ljmp
mov
nop
icebp
mov
sbb
test
mov
jmp
mov
xor
scas
xor
aad
adcb
filds
lods
jne
push
push
add
fisttps
sub
and
mov
leave
or
cmp
cli
and
repz
push
syscall
pop
sub
or
lret
push
push
jl
jne
inc
push
jmp
out
pop
xor
pop
loope
xor
cli
or
in
sub
adc
stos
add
add
roll
lcall
pop
add
inc
mov
pop
pop
out
inc
sub
lea
pop
sub
cmp
mov
loop
cmp
jbe
shr
ret
xchg
push
mov
rcrb
or
push
iret
or
xor
ret
dec
inc
jmp
andb
mov
pop
nop
add
cmpsl
pop
push
jno
mov
cltd
das
sub
jg
inc
imul
add
inc
imul
cltd
cmpsl
pop
aas
cmpsl
mov
sbb
pop
ds
adc
pop
dec
addl
jp
pop
push
insl
shl
clc
hlt
or
push
ret
pop
mov
or
lcall
and
jmp
incb
and
inc
inc
mov
outsl
lret
sbb
lods
xchg
rep
adc
pop
daa
mov
pop
shll
cmp
add
insb
addl
out
push
or
out
cmp
lods
push
js
or
gs
or
fmull
and
jnp
adcb
cs
loopne
dec
or
pop
sub
mov
lcall
lret
clc
inc
adc
mov
or
add
pop
dec
into
lods
dec
ret
mull
mov
add
jmp
sbb
daa
jp
push
popf
xchg
scas
sarb
xor
std
jg
jmp
jae
jp
inc
pop
adc
adc
movnti
aaa
and
out
adc
test
scas
sub
rorb
pop
adc
jecxz
es
repz
in
sub
dec
ljmp
or
fcomip
lods
push
and
jmp
dec
js
andl
aad
push
aad
sub
and
inc
sbb
sbb
adc
adc
sbb
push
std
add
fs
mov
mov
and
outsb
outsl
leave
dec
dec
cmpb
push
sbb
jne
pop
hlt
xor
jmp
push
or
ds
andl
fucom
lods
pop
jge
sub
lret
loop
push
jp
lret
or
pop
roll
inc
adc
imulb
lods
cmp
dec
sub
sar
lret
pop
pop
add
ret
push
pop
pop
andl
das
mov
and
push
enter
push
mov
add
push
out
divl
mov
out
into
out
adc
clc
cmp
inc
aad
mov
lods
add
push
insb
xor
lds
pop
dec
and
push
shrb
ret
push
bound
pop
jmp
push
sbb
jne
inc
dec
push
outsb
mov
in
ret
ss
add
test
les
dec
mov
rol
xchg
jmp
rcll
adc
xchg
sbb
push
pop
lret
neg
sbbl
lret
aam
jmp
adc
xchg
jns
add
pop
adc
xchg
and
stc
mov
stc
or
adc
hlt
pop
cmpb
mov
loop
xchg
imulb
clc
pop
and
popf
push
mov
adc
xor
fwait
pop
push
imul
fwait
je
mov
enter
std
sub
stc
lret
dec
shl
xor
cmp
cli
pop
shlb
jge
cmp
adc
popf
pop
repz
jbe
jp
mov
pop
clc
add
pop
sub
lret
pop
adc
fistpll
clc
cmp
add
jmp
push
loope
nop
outsb
shr
sbb
xor
push
push
daa
clc
pop
or
inc
add
sub
jle
add
mov
icebp
sub
dec
orb
push
pop
pop
inc
enter
shlb
pop
mov
mov
in
andb
repz
add
inc
rcrl
push
jmp
std
add
jle,pn
pop
add
or
push
add
js
addr16
dec
rorl
sarl
fstps
clc
shrl
cmp
inc
sub
pusha
in
adc
inc
xor
adc
lods
pop
pop
dec
add
arpl
bound
aam
adc
xchg
sbb
je
cmp
and
aad
xchg
xor
sti
and
aad
or
clts
sub
and
sbb
push
mov
call
pop
cli
out
inc
roll
mov
push
rcrl
or
test
andl
nop
pop
out
mov
push
adc
insb
cmp
xchg
rcll
mov
sbb
fadds
out
xchg
mov
in
daa
add
cmpsb
mov
fdiv
push
mov
xor
pop
ss
push
xor
jmp
mov
xchg
inc
push
lea
adc
in
imul
mov
repnz
cmovge
leave
jle
loopne
sub
sbb
and
ret
sbbb
add
pop
aas
ja
cmp
mov
dec
add
sbb
loope
jle
sub
int3
rolb
or
adcl
imul
loope
mull
adc
or
mov
shl
bound
and
dec
ret
in
jmp
pop
jl
push
lret
stos
data16
inc
sub
add
sub
filds
ljmp
xor
cmp
fdivr
jae
jbe
mov
inc
jmp
xchg
cmpl
and
cmp
fstpl
mov
sub
adc
jecxz
pop
push
mov
add
movsb
adc
shlb
and
adc
add
add
sub
sti
cli
jns
cmp
pop
test
shlb
mov
repz
add
loopne
cmc
push
push
push
push
sub
add
lods
test
pop
sub
jb
mov
flds
mov
inc
adc
and
fisubs
out
cmpsl
icebp
push
push
sub
cmp
iret
cld
fimuls
test
ret
inc
neg
pop
add
ds
gs
add
sbb
hlt
lds
jp
and
lret
scas
int
sub
inc
mov
and
fldenv
or
push
dec
sub
out
ljmp
imul
pop
pop
mov
inc
and
push
loope
push
sub
lods
dec
sbb
pop
sub
inc
rcl
add
push
push
jmp
dec
push
and
test
xchg
or
sub
add
call
std
jmp
push
xchg
add
sbb
add
aam
in
dec
sbb
in
repnz
out
adc
pop
add
mov
inc
sbb
add
aad
out
xchg
pop
mov
repz
cmp
in
scas
inc
sub
imul
ret
les
ss
xor
push
or
xor
sahf
push
mov
and
push
sbb
ljmp
nop
cmpsb
pop
and
pop
and
aad
and
js
dec
pop
lods
popf
pop
jbe
cmp
sub
adc
or
mov
jb
mov
out
dec
mov
push
hlt
fdivr
lds
jmp
push
lret
movsb
shl
push
dec
push
minps
pop
push
jns
dec
pop
movsb
shl
mov
pop
cltd
mov
and
int3
dec
and
cmp
mov
add
jmp
dec
clc
sub
dec
movsl
jne
mov
adc
mov
sbb
dec
out
mov
lcall
loopne
jge
push
add
addr16
add
das
bnd
dec
xor
popa
or
jmp
sub
data16
pop
xor
cmpsb
add
sahf
sti
mov
jg
inc
cltd
daa
dec
jno
mov
insb
aas
popa
call
faddl
lret
adc
les
iret
pop
arpl
push
mov
lret
inc
dec
or
push
dec
mov
mov
dec
insb
inc
mov
rclb
js
or
sti
push
pop
jle
xchg
and
mov
arpl
inc
rorb
pop
cmc
xchg
cmp
inc
pop
inc
jg
pop
imul
jmp
sbb
jno
cmpsb
and
mov
xchg
mov
mov
dec
or
fistpl
pop
push
mov
sub
sbb
adc
inc
arpl
ret
fs
jmp
xlat
add
push
cmp
cmp
insb
mov
or
adc
adc
inc
fisubrs
jg
pop
fadds
ljmp
in
cmpl
dec
add
aam
sarb
popf
adc
push
sbb
rorl
push
jl
ret
clc
pop
xchg
leave
mov
mov
pop
bound
fmulp
push
lds
push
sbb
xor
adc
pop
lds
xchg
mov
shr
pop
add
out
add
mov
pop
xor
mov
dec
jmp
pop
scas
cmp
mov
sub
pop
addb
push
cwtl
popa
jmp
inc
mov
xchg
ret
or
hlt
arpl
add
mov
loop
sub
lret
xchg
adc
sbb
pop
stos
jge
imul
xor
jae
ror
out
sub
sar
jne
or
or
es
xorb
add
js
and
xchg
hlt
jmp
and
lret
push
xchg
sbb
jmp
daa
outsl
push
add
xor
cmp
and
xorb
add
or
or
ss
mov
aaa
insl
push
in
repz
pop
out
jge
mov
push
push
pop
pushf
into
pop
lcall
add
ret
test
xchg
or
pop
fisttps
mov
xor
cmp
imull
dec
repz
add
hlt
out
adc
adc
and
push
mov
add
das
les
adc
push
xor
add
fwait
xor
decb
fadds
and
lods
out
or
sub
xor
inc
das
andb
push
add
mov
or
in
ljmp
and
dec
in
push
insl
xchg
jns
enter
push
divl
das
sub
xchg
pop
adc
sbb
sbb
jmp
xor
xor
addr16
xchg
dec
fstpl
mov
mov
pop
add
and
or
lods
push
std
cmp
and
inc
push
je
outsl
nop
push
mov
hlt
cmp
icebp
push
fnstsw
pop
stc
mov
jmp
aas
mulb
add
jno
add
ja
ret
ss
pop
dec
pop
cmp
inc
pop
dec
mov
mov
lods
add
in
add
pop
mov
xchg
test
pop
addr16
sbb
fidivrs
xchg
or
shlb
pop
popf
or
cld
add
sbb
call
mov
xor
int
mov
nop
push
or
xlat
push
push
sbbl
or
fmul
jecxz
mov
mov
movsl
and
add
xchg
not
and
insb
aas
pop
call
sub
jmp
cltd
push
popa
jmp
xchg
dec
inc
dec
mov
out
mov
movswl
cmp
idivb
inc
mov
daa
out
push
mov
pop
sbb
push
jmp
pop
push
push
imul
or
cmc
dec
sub
or
testl
jle
mov
mov
das
lret
popa
adc
add
sti
adc
out
add
inc
cltd
inc
hlt
dec
repnz
jmp
ljmp
mov
jge
cs
push
clc
jp
fsubrs
loope
cli
pop
cmpsl
pop
dec
enter
les
mov
and
and
xchg
adc
cmc
testb
pop
out
movsl
sti
lods
jle
leave
test
es
fs
inc
loop,pn
mov
add
cmp
xchg
insl
daa
jp
inc
std
and
mov
faddl
fldcw
push
add
dec
stos
xor
testb
insl
shlb
inc
add
enter
push
push
dec
jbe
cwtl
xor
adc
imul
dec
test
fmulp
jns
out
call
pusha
test
pop
stc
mov
mov
xchg
cmp
stc
or
js
stos
xor
or
inc
cwtl
pushf
push
add
in
dec
cmc
cmp
push
mov
cmp
fdivrs
pop
mov
jmp
fcoms
or
push
test
sbb
mov
push
push
jge
mov
les
lods
repnz
cli
rorl
cld
jle
enter
pop
pop
push
stos
and
pop
cmp
mov
push
call
ret
popa
pop
sub
aas
out
jmp
push
push
lahf
pop
scas
sub
mov
out
js
jge
inc
and
adc
andb
mov
iret
sbb
out
pop
fcmovb
or
mov
or
movsl
daa
jbe
or
scas
jbe
insb
push
fnstcw
pop
pop
pop
lea
and
jo
xor
bound
pusha
and
repnz
in
xchg
mov
inc
pop
mov
pop
hlt
lahf
leave
dec
loopne
xchg
fistps
jecxz
pop
or
mov
jg
pop
stos
cli
jb
cmp
jecxz
pop
push
div
pop
pop
cmp
push
shrb
out
js
dec
popf
subb
fldcw
xor
dec
jge
jle
fisttpl
popf
roll
shll
inc
popf
add
inc
jp
pop
add
stc
cwtl
adc
shrb
add
pop
mov
test
out
sub
sub
inc
daa
pop
push
jb
or
lods
nop
jnp
mov
shr
and
lret
pop
push
pandn
das
js
adc
pop
jo
fsin
gs
orb
cwtl
arpl
and
pop
jb
push
jmp
push
mov
lods
jg
jne
push
xor
mov
pop
pop
sarb
mov
dec
dec
imul
sub
adc
test
cmp
call
jae
mov
dec
dec
or
and
add
inc
cld
xchg
pop
xor
push
lods
add
xor
das
inc
aas
add
mov
cmp
xchg
roll
orl
bound
shlb
or
sbb
jmp
inc
sub
es
jmp
in
pop
std
pusha
pop
leave
shlb
data16
jmp
xor
push
mov
aas
pop
jp
pop
dec
rep
add
push
int3
jle
cmpb
jmp
jmp
gs
rcrl
cmp
jb
push
jmp
stos
shlb
lret
mov
cmpsb
jp
and
sti
mov
loope
lods
xchg
lahf
call
jmp
loopne
inc
aam
js
push
int3
roll
xchg
adc
and
jmp
xchg
sti
inc
jbe
adcb
in
sub
nop
dec
pop
shll
mov
push
jae
mov
shrl
mov
addb
push
rcl
and
jge
sbb
xor
xor
inc
jmp
notl
out
pop
orb
cmp
fisttpll
lret
add
mov
mov
scas
lret
cmp
and
inc
jecxz
push
mov
pop
inc
cmpb
fdiv
jmp
pop
lds
adc
pop
cmp
pop
in
push
pop
mov
outsb
nop
stos
and
pop
xor
adc
test
jo
push
sahf
arpl
mov
push
in
shlb
jns
xchg
adc
cli
cli
in
dec
cmp
cmp
shl
and
xor
cwtl
sub
pop
adc
and
rolb
pusha
negl
pusha
test
jb
mov
ret
scas
xchg
jmp
jl
inc
cwtl
mov
aas
xor
fidivrl
lods
push
jg
daa
ljmp
and
or
jb
ljmp
adc
hlt
mov
jp
gs
es
adc
outsl
pop
roll
imul
ret
inc
in
cmp
sub
inc
test
add
out
and
push
popa
or
addr16
push
mov
sti
pop
and
and
xchg
push
sub
lret
icebp
add
es
inc
popf
test
or
fs
dec
xchg
fs
jns
dec
and
cmp
jecxz
vphadduwd
push
aam
mov
shlb
sti
adc
aas
pop
sahf
arpl
lods
cmpb
lret
xlat
xchg
or
in
pop
les
repnz
pop
popf
repz
loop
xor
aam
insl
daa
test
faddl
testb
mov
xchg
inc
test
test
mov
inc
push
push
lret
xchg
dec
and
dec
idivb
ret
and
xor
jmp
push
push
push
pop
pop
shr
cmp
out
pop
lcall
mov
push
jnp
push
adc
dec
pop
js
add
sbb
cmp
xor
dec
or
les
push
add
mov
jg
rcll
pop
outsl
mov
dec
sub
or
sbb
ss
sbb
push
push
addps
dec
ret
into
insb
inc
in
cli
add
push
pop
hlt
push
scas
pop
xchg
mov
mov
jle
and
pop
lret
or
insl
popf
cmp
out
sub
std
inc
push
cmp
xor
push
rorl
and
cs
sub
cmp
cmc
pop
cmp
dec
test
sub
or
push
push
pop
jmp
cmp
mov
mov
pop
pop
mov
jno
adc
add
sub
inc
movsb
gs
icebp
add
sbb
lret
or
ljmp
loopne
dec
or
sbb
push
ds
cli
dec
add
movsl
mov
sahf
aaa
aas
mov
push
xchg
adc
adc
push
cmp
pop
sub
cmp
sub
loop
sarl
add
jl
push
aam
arpl
les
pop
je
daa
out
ret
call
inc
lds
or
dec
addb
xor
rorl
ljmp
mov
push
xlat
sbb
add
cmc
mov
inc
jmp
cwtl
dec
jnp
cmp
dec
push
aad
lds
or
jmp
sub
aad
out
stos
bound
mov
push
push
inc
repnz
pop
test
cmc
into
pop
xor
neg
and
mov
or
add
mov
push
jmp
in
mov
sub
data16
dec
mov
sbb
jg
adc
add
mov
jle
repnz
pop
push
xchg
mov
add
sub
fwait
out
pop
lods
dec
iret
push
out
and
mov
mov
cmpsl
ret
icebp
je
push
jno
movsb
movsb
add
or
je
psrld
add
test
shl
lods
pop
cmp
or
pop
and
loop
ret
cmp
pusha
or
std
nop
stc
add
mov
inc
lock
xor
or
sub
push
ficoml
addl
add
loopne
xchg
ret
scas
loopne
shll
push
mov
xchg
inc
loopne
or
mov
mov
popf
lret
lds
dec
inc
je
pushf
loopne
push
mov
inc
in
jge
test
lds
pop
mov
sub
ja
or
or
sbb
pop
adc
inc
roll
sbb
pop
lds
repz
lahf
lea
sbb
cmp
adc
push
and
fs
bound
xor
push
mov
xor
clc
pop
add
sub
loopne
das
jmp
data16
daa
push
les
pop
loopne
and
mov
lahf
lock
pop
mov
push
and
lcall
mov
mov
jecxz
or
dec
add
inc
or
cvtdq2ps
xor
add
popa
fs
test
call
xlat
add
sbb
sbb
inc
push
xor
mov
pop
push
test
push
dec
outsl
pushl
sbb
cwtl
jl
push
pop
add
xlat
adc
repz
test
jmp
mov
fsubrl
jp
fsubl
je
dec
loop
inc
das
or
mov
mov
add
dec
jo
fdivrs
and
push
pop
test
adc
test
or
push
lret
imulb
dec
inc
mov
dec
add
jns
aad
cmpb
fmull
jns
cmp
js
sahf
mov
jno
pop
in
and
sbb
cmp
cmpxchg
jnp
adc
push
push
or
sub
repnz
jmp
add
and
ds
pusha
inc
inc
xchg
add
into
pop
mov
shr
xor
div
cmp
push
xchg
sbb
aaa
mov
jl
dec
push
data16
push
and
test
das
aam
das
jbe
or
pop
mov
dec
repnz
xor
sub
cmp
popa
adc
mov
punpckhbw
pop
sbb
jecxz
pop
dec
xchg
sbb
push
pop
jno
test
jne
cwtl
mov
xchg
and
cmpsb
in
mov
add
js
inc
add
jmp
xor
daa
pop
add
sbb
add
stos
stos
mov
push
jae
dec
xchg
cmpsl
popa
daa
push
in
and
dec
pop
das
cmp
sbbb
neg
dec
sub
jle
icebp
sub
and
and
mov
mov
lock
les
leave
fs
ret
lock
out
xchg
add
xchg
fwait
jmp
mov
int3
mov
jle
mov
pop
stc
sbb
jmp
aas
mov
xchg
mov
add
jb
enter
aas
xor
addr16
cmp
dec
inc
negb
pop
mov
int3
call
fsubr
jge
es
or
pushf
insb
sub
ds
push
decb
jl
jp
mov
out
fsub
push
mul
xchg
stos
fldl
add
add
add
cmp
adc
stc
inc
or
lods
fcomip
cmp
pop
cli
outsl
jp
js
fs
xor
rorb
icebp
add
add
mov
inc
pusha
addr16
mov
pop
or
sbb
pop
push
in
xchg
inc
push
push
mov
outsb
xor
orb
mov
mov
adc
aam
jne
or
dec
das
xor
mov
lahf
fiaddl
pop
mov
ss
or
sub
jmp
rolb
pop
xor
dec
and
popa
jmp
sbb
test
shlb
sbb
shrl
idivb
push
jp
mov
jl
sbb
sub
sbb
add
cmpsb
repz
jle
inc
ds
mov
in
or
js
lret
sub
push
roll
scas
es
pop
rcrl
ljmp
adc
sub
aam
in
mov
int3
xor
or
fistps
xchg
sub
add
js
and
enter
dec
lahf
xor
mov
rclb
push
xor
pop
push
push
dec
push
push
test
fucomi
fisubl
pop
and
sarl
mov
add
xor
or
test
push
adc
ret
sub
cmp
in
jmp
out
popa
dec
enter
xorb
push
fistpl
js
rorb
dec
pusha
jae
stos
ljmp
xchg
sub
pop
decb
jnp
add
jbe
push
mov
out
xchg
xchg
out
jmp
pop
gs
ljmp
jmp
add
scas
sub
aas
jno
add
inc
rorb
adc
push
repnz
daa
rclb
mov
or
fnsave
mov
cmp
adcl
test
pop
addb
cs
out
add
pop
jl
jmp
in
in
test
js
or
sub
mov
ds
adc
int
daa
pop
shlb
rorb
mov
sub
movsl
fldcw
cmp
inc
out
outsb
rcrb
add
sub
and
lods
aaa
add
mov
push
xor
dec
imul
mov
cmp
sbb
jmp
test
mov
cwtl
dec
xor
fcomps
stc
sbb
out
orb
popf
sub
inc
iret
or
adc
adc
paddb
jbe
rcll
adc
ror
sub
and
loope
sbb
cmp
nop
jb
xor
jmp
mov
mov
lock
mov
scas
inc
imul
mov
add
lds
mov
inc
push
std
test
or
sub
add
add
push
mov
pop
xor
xchg
push
aas
addr16
inc
mov
ret
inc
xor
repz
adc
int
xchg
add
push
cmc
mov
hlt
pop
sub
sti
enter
inc
push
test
lds
mov
repz
dec
dec
mov
repnz
adc
push
push
jle
mov
mov
push
jo,pn
add
xchg
push
mov
xchg
add
lret
dec
mov
and
enter
cmp
add
mov
jmp
shl
stos
clc
addr16
cld
sub
test
enter
add
push
adc
aaa
repnz
jno
xchg
jbe
inc
push
mov
shrb
or
and
add
fidivrs
xchg
jbe
cmpsl
fisubs
sar
add
popa
loop
push
inc
pop
push
xor
dec
jmp
cmpsb
and
inc
and
cmpsl
add
xchg
inc
in
adc
jne
fmull
pop
pop
sub
mov
push
mov
enter
adc
mov
test
fisttpl
inc
pavgb
sub
pop
jb
int
jg
pop
pop
adc
aaa
push
xchg
ljmp
std
pop
movsl
stos
adc
insb
hlt
sub
mov
mov
mov
pop
add
sub
call
leave
test
add
and
movsb
pop
cmp
scas
xor
inc
jne
sub
nop
repnz
adc
jnp
cmp
cld
test
mov
sbb
in
add
pop
cmpsl
aas
add
pop
sub
mov
mov
es
adc
pop
roll
dec
repz
or
pop
stc
dec
xor
fwait
pop
pxor
mov
incb
xchg
push
aas
arpl
dec
test
jg
faddp
dec
adc
in
cs
stos
mov
dec
les
push
cwtl
cmp
loope
cmp
int
add
es
roll
add
sub
mov
in
xor
pop
jmp
fnstenv
jae
outsl
push
pop
mov
cmp
lahf
dec
xchg
mul
xchg
xor
xchg
inc
xorb
or
aas
sbb
cli
sarl
outsl
pop
arpl
mov
dec
dec
mov
mov
out
icebp
scas
cmp
adc
adc
and
inc
test
sahf
out
adc
filds
lar
inc
sbb
movsb
movsb
add
push
mov
popa
push
lret
pop
xor
js
add
xor
scas
adc
adc
sub
enter
mov
push
xor
pop
sub
loope
mov
push
sbb
and
cmp
add
aam
sbb
clc
sub
or
cld
pop
pop
int
cmp
and
cmpsl
inc
jae
cmpsl
or
mov
jno
lret
test
arpl
jle
nop
js
jle
sub
or
or
sbb
push
rorl
pop
mov
or
adc
sub
xchg
jmp
mov
insb
mov
xor
xlat
pop
jmp
mov
adc
sub
out
dec
int3
xchg
orb
jo
popf
call
fisubrl
mov
or
add
adc
or
push
sub
cs
add
or
fdivl
testb
adcb
dec
addr16
sbb
pusha
push
xor
inc
inc
cs
cmp
push
sti
orl
out
addb
or
pop
sub
or
jg
inc
or
jmp
xchg
adc
mov
or
inc
xor
inc
cli
cmpb
add
faddl
sub
mov
or
loop
or
pop
push
inc
dec
add
test
pop
push
xor
lahf
add
push
add
fwait
add
jmp
fcomps
pop
or
mov
mov
rolb
shr
pop
pop
mov
mov
xor
pop
push
and
test
pop
add
sti
jne
addb
in
sti
mov
stos
inc
sub
jmp
neg
and
call
aam
or
into
mov
jmp
push
mov
sbb
or
push
pop
add
dec
or
cmp
scas
mov
mov
sbb
pop
arpl
xor
imul
inc
test
dec
ror
popf
testl
adc
popa
incb
and
ds
cmpb
jecxz
inc
or
daa
jmp
fs
jns
and
adc
shr
push
inc
inc
or
add
add
or
ds
scas
add
mov
jo
xchg
mov
pop
or
pop
add
push
add
pop
pop
push
or
cli
sub
jle
jg
dec
addr16
sub
aam
or
dec
scas
xchg
jecxz
jbe
daa
push
neg
adc
xchg
mov
arpl
sub
sub
jmp
mov
sub
xchg
mov
daa
push
imulb
jo
adc
or
add
aad
shll
or
dec
mov
movsl
mov
mov
inc
push
jno
daa
sbb
mov
shl
bound
les
push
imul
int3
pusha
jmp
mov
stos
jno
ljmp
inc
mov
sub
fldcw
jg
aad
or
mov
push
nop
sti
sub
push
iret
stos
inc
pop
jecxz
fwait
jp
add
bound
add
push
or
lds
jmp
mov
push
mov
or
rcrl
adc
test
in
push
in
and
dec
sbb
enter
orb
sbb
xchg
or
xchg
test
add
push
mov
xor
shlb
mov
out
dec
repz
push
or
mov
test
push
sub
rclb
add
sbb
inc
jg
lock
notl
loop
cwtl
imul
and
lret
or
jmp
and
std
xchg
adc
adc
shlb
aaa
iret
adc
and
out
and
mov
call
insb
jne
fstps
mov
mov
push
pop
sub
push
mov
inc
push
scas
std
out
dec
popa
mov
push
jle
sbb
or
cld
push
cmp
sbb
andb
ljmp
fwait
pop
pop
in
jnp
cmp
and
mov
sub
cmp
mov
mov
fldl
repnz
sahf
adc
daa
movl
add
outsb
in
and
push
pop
push
das
jge
dec
pop
loop
shl
push
xor
push
dec
cli
ss
push
or
pop
popf
cld
xor
shl
pusha
gs
push
sub
ret
add
imul
jmp
jl
push
push
jle
sbbb
adc
filds
inc
sbb
adc
out
mov
push
mov
and
fcoml
pop
sub
mov
mov
cmp
push
cltd
jmp
or
shll
ds
mov
cmp
dec
push
or
dec
ljmp
and
in
jecxz
pop
jmp
pop
cld
aas
mov
xor
push
add
or
repz
adcl
jo
and
ds
aad
mov
cltd
dec
xorb
xor
xchg
or
dec
sarl
loopne
incb
add
adc
xor
mov
jae
xor
jl
icebp
in
push
add
popa
jmp
dec
movsl
adc
pop
and
adc
xor
and
xchg
imul
jmp
imul
xor
push
not
pop
daa
std
jbe
fsubp
mov
push
aaa
push
push
outsb
pushw
pop
ja
cmp
div
jo
arpl
push
pop
jg
cltd
or
sbb
sub
push
mov
out
dec
enter
jl
in
lds
std
sbb
shrb
add
adc
inc
and
xor
push
addr16
sarb
inc
ja
addr16
jno
pop
stc
inc
adc
in
pop
sti
or
push
lock
not
pop
fdivs
fcomps
adc
dec
int3
and
repz
mov
fildll
cmpsb
xlat
out
daa
xor
sbb
pusha
add
xchg
out
or
adc
push
jb
pusha
mov
mov
or
and
mov
aam
sub
ljmp
mov
decb
push
push
sub
inc
and
jp
sub
add
add
scas
add
lods
push
fwait
pop
hlt
push
xor
xlat
sarb
sub
add
ljmp
shrl
mov
outsl
xchg
and
imul
xchg
int3
xchg
dec
ret
pop
clc
outsb
das
jmp
fsubr
push
pop
adc
jmp
loopne
push
lahf
outsl
push
scas
push
fidivs
push
push
test
fisubrs
push
lock
sub
daa
mov
stc
push
xor
mov
popa
or
adc
loopne
pop
add
ret
push
adc
jns
pop
and
es
mov
and
sub
loope
push
mov
add
jbe
dec
lods
pop
rcrl
fucomi
mov
mov
shl
push
cld
dec
dec
xchg
inc
cli
and
jb
dec
clc
or
rorb
push
es
push
sub
popf
jno
inc
dec
add
add
pop
push
push
push
jmp
mov
shr
cwtl
popf
cmp
loop
jmp
push
push
sbb
fstl
jmp
mov
or
aas
fcoms
cmpsl
cmp
mov
inc
sbb
add
sbb
xor
push
test
dec
fisubrs
xor
lret
daa
mov
dec
mov
iret
in
out
mov
adc
loope
xor
das
and
pop
aam
stos
cmp
and
push
pop
mov
loopne
in
xchg
cmp
or
subb
inc
and
insb
xor
out
jge
sub
std
lret
pop
call
sti
xor
mov
insb
scas
add
jae
mov
adc
cmp
sub
sub
xchg
push
mov
shr
xor
cwtl
mov
mov
adc
and
cmp
add
jns
repnz
cmc
sbb
pop
push
stos
sub
fiadds
sub
push
sub
push
mov
in
fdivrl
aas
sub
pusha
shl
mov
cmp
mov
cmp
mov
add
jle
arpl
inc
je
adc
add
dec
loope
push
fcmovnb
ds
jl
inc
pop
sub
ljmp
insl
or
loope
lock
shl
mov
cmpb
mov
jecxz
jmp
push
adc
push
sub
pop
decl
cmp
push
cmpsl
iret
repnz
add
inc
push
lahf
out
cmp
loop,pt
xchg
cwtl
dec
push
inc
cmpsl
cmp
push
movsl
mov
jmp
xor
push
in
imul
jnp
in
aas
lods
dec
dec
mov
bnd
pop
mov
push
add
push
xor
sub
lea
shr
dec
lods
jp
pop
mov
mov
addl
sub
xor
arpl
ds
or
add
sub
cmp
push
lret
xchg
sbbb
sub
dec
out
adc
out
sbb
cmp
repnz
dec
pop
sub
stos
xor
add
out
push
ja
jg
add
cmp
jmp
ljmp
lea
aad
mov
push
sbb
xchg
add
cld
mov
lahf
dec
outsl
roll
jns
or
sbb
cmpsl
cmp
scas
dec
sub
outsl
sub
loopne
jo
pop
iret
add
leave
adc
dec
loop
aas
jle
lret
and
push
push
push
cwtl
rorl
adc
pop
rcll
pushf
push
icebp
jge
jg
sbb
xor
jp
aam
dec
div
xchg
fcmovb
cmp
add
test
push
mov
jg
lea
dec
xor
je
jno
adc
stos
add
pop
dec
adc
sbb
and
or
xlat
fisttps
leave
sbb
jge
sbb
pusha
popf
loopne
das
pop
or
aad
pop
dec
ja
lods
sbb
xabort
fptan
fiadds
rcl
push
add
jl
push
cmp
jl
push
in
popa
inc
jnp
push
dec
push
nop
data16
lahf
xchg
call
test
jge
test
jl
jb
add
dec
notb
popa
in
fucom
mov
mov
dec
inc
pop
scas
add
or
jmp
leave
ds
aam
daa
pop
mov
mov
aaa
repz
jns
jno
mov
out
popa
das
push
push
test
fsts
iret
push
sub
mov
mov
cmp
add
pop
roll
sub
jmp
pop
push
mov
or
jae
or
pop
xlat
xorps
cmpsl
dec
mov
push
dec
and
in
fldenv
cmp
jns
lods
jle
shrl
jl
inc
sbb
aas
jl
sub
mov
imul
icebp
insl
mov
cwtl
aad
dec
jmp
or
iret
or
outsb
add
mov
in
adc
shrb
icebp
or
call
dec
jge
jbe
add
roll
ret
or
sbbl
jle
dec
es
sbb
pop
sbb
testl
mov
inc
stos
push
repnz
dec
add
or
cmp
jno
ficompl
movsl
lds
jne
xor
or
and
hlt
push
add
jb
sub
xor
enter
mov
fbstp
inc
mov
inc
test
mov
sbb
dec
adc
pop
dec
repnz
xor
push
enter
dec
push
mov
jmp
push
outsb
push
ret
jg
mov
pop
push
push
jmp
divb
pop
sbb
adc
jmp
jne
in
jnp
push
push
pop
jmp
jmp
push
adc
fdivp
rcl
or
xor
and
jmp
add
inc
xor
insb
mov
add
lock
js
es
mov
inc
imul
pop
out
lods
sbb
add
repnz
jbe
pop
mov
dec
dec
xor
pusha
cmp
das
cmpsl
adc
dec
pop
mov
xchg
mov
sub
test
mov
shl
jae
push
dec
dec
lds
outsl
push
sub
cmp
push
cld
popa
and
dec
or
je,pn
jg
push
sub
mov
movsl
loopne
xor
popf
xor
inc
push
std
enter
jecxz
push
movsl
jo
xlat
xchg
mov
cld
mov
iret
scas
adc
pop
pop
or
xor
cmpsl
not
mov
pop
popf
jns
addr16
sbb
mov
pop
mov
stc
shl
nop
or
fdivrl
cmpsl
add
pop
jmp
in
fsts
lahf
inc
and
inc
sbb
inc
jge,pt
fstl
out
jmp
frstor
mov
adc
shrl
mov
bound
push
jmp
out
enter
add
mov
sub
into
adc
mov
aas
push
jg
lret
xchg
jle
repnz
fsubrs
push
mov
outsl
add
inc
mov
or
adc
and
inc
pusha
cmp
xor
push
sub
or
clc
in
jmp
mov
call
cmp
dec
int
pusha
dec
xor
xor
mul
icebp
pop
pop
xor
dec
insl
fstps
mov
sub
andb
repnz
or
mov
dec
inc
xorb
add
pop
adc
int3
lock
in
enter
jmp
or
jp
mov
shll
cmc
xchg
dec
xchg
arpl
sub
jnp
jg
fdivrl
push
dec
xchg
aas
mov
lds
push
lret
push
lcall
rolb
jbe
xor
push
pop
or
and
jno
and
sbb
dec
jbe
or
mov
mov
lock
adc
out
adc
push
pop
cmp
push
sbb
repnz
cmpxchg
xor
fiadds
push
loop
sub
mov
sub
fsubp
adc
or
je
jp
insl
sbb
cli
mov
or
and
jp
add
sub
mov
add
lods
test
cmpb
xor
loopne
or
push
jmp
mov
and
shl
inc
test
add
adc
sub
lods
gs
pop
stos
sahf
in
inc
lret
imul
sub
adc
stos
xor
mov
out
inc
pop
pop
sub
rcll
jge
jg
imul
lret
lcall
data16
and
jbe
mov
clc
je,pt
xor
push
dec
in
in
roll
and
decl
mov
pop
dec
out
jno
jmp
ljmp
xor
inc
les
mov
add
sub
mov
sbb
jmp
xor
cmp
push
dec
dec
pushf
stos
dec
enter
sbb
push
aam
dec
in
push
sub
add
jmp
shlb
ret
clc
adc
sti
sub
jmp
add
mov
dec
sub
rorl
ss
nop
sub
mov
jns
jle
test
ljmp
push
clc
or
push
leave
inc
push
dec
stos
adc
shlb
pusha
adc
lds
sub
push
leave
or
lahf
pop
jp
add
subb
std
imul
dec
shrb
lahf
ret
imul
mov
ret
loop
mov
mov
mov
iret
pusha
sub
inc
dec
addr16
sbbb
je
push
mov
stos
xchg
pop
jo
add
shrl
popa
scas
shlb
mov
in
mov
fs
daa
les
jmp
imul
pop
xor
aad
sbbb
push
xchg
push
lds
xor
shll
or
pop
fmull
push
jp
xchg
lcall
cli
and
idivl
pop
mov
mov
add
gs
inc
scas
into
pop
push
repnz
icebp
in
jo
mov
push
das
pop
sub
push
pop
imul
push
iret
jb
push
dec
cmp
js
and
adc
pop
or
testb
inc
shlb
and
nop
add
mov
shr
aad
aas
stos
mov
repz
arpl
pop
ja
stc
mov
imull
dec
and
scas
jecxz
cli
scas
jle
add
xchg
stos
dec
push
imul
vcvtsd2si
cmpsb
movsl
mov
and
push
push
xchg
add
rsm
loope
add
idivb
and
mov
enter
pop
loop
mov
adc
cmpb
add
out
adc
add
orb
loope
adcb
subl
stos
in
add
les
mov
push
je
mov
xchg
mov
jns
mov
dec
xlat
sahf
decb
in
movsb
ret
push
jns
dec
int3
xor
add
inc
aaa
mov
mov
adcl
or
push
sti
ljmp
daa
int
sub
xor
sbb
xchg
pop
and
cmpsb
or
fstpt
orb
stos
mov
loop
mov
pop
adc
push
add
pushf
jp
or
cwtl
mov
test
fisubs
notb
lock
icebp
mov
or
lock
jae
enter
int3
sub
pusha
or
aas
dec
sub
pop
jo
mov
fistps
icebp
mov
or
mov
sbb
add
push
add
dec
xor
xor
pop
mov
sti
push
sahf
jle
adc
addl
call
stos
mov
sub
aad
movsl
pop
pop
pop
mov
dec
push
ds
or
imul
xor
rolb
sub
adc
jg
or
add
inc
add
subb
imul
or
stos
jmp
add
std
fwait
jmp
or
push
sbb
lahf
jne
dec
xor
sbb
mov
push
mov
mov
jl
js
sarl
pop
mov
fcoms
imul
daa
cmc
adc
mov
fwait
pop
dec
push
add
push
jmp
cmp
push
fiadds
addr16
xchg
dec
outsl
sbb
jp
push
cmp
or
mov
push
sti
jne
cwtl
fs
cmp
add
pop
add
icebp
lock
ficoml
mov
sbb
faddl
push
mov
jo
and
daa
xchg
clc
ja
fistpl
sub
sub
xchg
and
xorb
xor
insl
cli
jae
hlt
and
or
les
pusha
and
jp
add
rcrl
mov
outsb
xor
lret
jge
fcoms
inc
insl
and
aad
xor
fdecstp
scas
pop
jmp
stos
mov
adc
mov
jmp
bnd
jo
out
aam
pop
mov
mov
adc
popa
std
lahf
stos
add
pop
push
xchg
push
ja
out
subb
das
imul
add
daa
xor
mov
lock
fists
inc
jg
stc
test
dec
mov
cltd
jno
dec
les
sti
dec
nop
pop
jne
and
or
mov
sub
dec
dec
mov
push
add
inc
or
daa
push
daa
dec
and
and
mov
mov
sub
out
push
push
mov
jecxz
jmp
mov
bound
xlat
pop
mov
addb
daa
add
xchg
jge
cltd
push
dec
ds
sub
pusha
ja
daa
xlat
xchg
mov
je
and
pop
or
dec
shll
or
test
mov
sub
or
sbb
addr16
es
push
dec
pop
sub
out
adc
ds
add
mov
sbb
pop
andl
or
jb
ds
rorb
fsub
rcrb
add
jmp
les
frstor
or
ss
loope
in
add
jmp
sbb
pop
in
adc
xor
int
sub
and
inc
pop
sub
jmp
inc
stos
push
xchg
jecxz
leave
js
dec
sub
xor
loopne
int
popa
lods
or
cmp
xchg
adc
jmp
add
jns
mov
inc
or
movsb
mov
icebp
push
and
xor
and
pop
mov
sub
inc
sub
movsl
ret
inc
es
mov
xor
and
cmp
dec
outsb
sbb
pop
and
cmp
cmc
cli
push
push
dec
gs
icebp
mov
adc
sub
add
push
mov
xchg
icebp
in
sub
push
jle
in
inc
and
imul
add
movsl
and
mov
dec
mov
ds
inc
loop
jmp
xchg
call
pop
lods
arpl
push
out
pop
push
cs
jo
jnp
adc
cmp
cmp
sub
push
pop
clc
mov
xor
ljmp
add
loope
jmp
in
pop
pop
mov
shll
sbb
dec
loop
fbld
push
cmp
dec
jno
xchg
mov
jnp
or
or
adc
mov
or
dec
loope
sahf
popa
fsubs
ficomps
pushf
or
sbb
leave
aad
jecxz
data16
imul
xor
std
ret
add
or
mov
pop
push
test
fstpt
aad
out
aas
mov
je
fisubrl
adc
jmp
cmp
daa
jmp
and
xchg
jle
popa
jmp
hlt
push
xor
andb
out
dec
pop
or
stos
repz
aaa
xchg
push
cmpb
xor
jmp
fadds
or
pop
sub
xor
push
sub
adc
dec
cli
arpl
dec
xchg
cmp
jbe
cmp
jnp
out
daa
arpl
mov
dec
and
push
add
fidivrl
mov
mov
mov
icebp
pop
add
jecxz
add
add
imul
lcall
scas
cmp
addr16
sbb
mov
push
ror
pop
add
adc
jecxz
add
notb
ret
sub
mov
mov
es
xor
xor
xchg
imul
insl
xchg
movsb
xchg
loopne
shll
add
add
push
jnp
and
pop
inc
call
xor
and
cmp
push
into
fwait
add
add
and
pop
nop
repz
dec
pop
mov
testl
inc
gs
jg
or
pop
push
mov
or
jle
xchg
aas
mov
mov
ds
cmp
or
in
jmp
pop
add
insb
bound
loope
inc
bound
mov
jne
or
inc
push
rcl
call
ret
out
popa
or
pop
pop
incb
pop
jmp
cmp
adc
sub
daa
sub
inc
cmp
jns
das
mov
pop
or
pop
mov
dec
sbb
fstl
dec
cwtl
dec
pop
fsubrs
add
shl
pop
push
out
in
inc
mov
fwait
mov
dec
pop
cmp
or
imul
daa
push
push
les
mov
dec
jns
das
push
sbb
rcl
cmp
inc
mov
mov
imul
popa
add
dec
ss
pop
inc
or
push
cmc
insl
mov
xor
call
push
jmp
xchg
std
adc
bound
sub
push
decl
mov
or
push
sub
jns
cli
adc
or
adc
adc
sbb
mov
or
jg
mov
call
xor
or
rol
or
mov
cs
jae
mov
or
or
mov
push
push
mov
xchg
gs
mov
test
pusha
stos
arpl
push
mov
add
cltd
in
fsubr
mov
ljmp
shrb
mov
mov
jg
xor
push
js
clc
test
jle
sar
or
rcrb
mov
mov
out
flds
mov
jmp
lods
pop
mov
mov
lret
inc
or
aas
jl
pop
jle
adc
dec
int
in
adc
jmp
ds
add
xor
pop
test
inc
inc
dec
mov
push
gs
ljmp
push
das
mov
adc
psubusb
xlat
mov
sbb
xchg
cmp
mov
es
repnz
arpl
jns
jmpw
insb
bound
dec
mov
xchg
das
sub
and
not
pusha
jp
fs
jb
fstpl
add
ja
and
pop
pop
mov
andb
push
fs
jge
mov
sub
push
add
and
jmp
and
xchg
fs
daa
aad
xchg
sub
or
sub
jmp
js
jno
inc
xchg
add
inc
or
sub
pop
imull
andl
mov
arpl
xchg
inc
cld
push
pop
mov
push
divb
push
jmp
ficoml
and
adc
sbb
js
pop
dec
jle
data16
push
add
inc
lcall
mov
ss
push
sti
add
and
push
or
out
pop
inc
sti
pop
sub
out
fsts
jle
add
mull
mov
je
add
xor
inc
add
cmc
in
add
push
shlb
cmp
sbb
mov
or
or
or
pop
xchg
sbb
and
mov
adc
and
sbbb
or
addl
jge
adc
add
decl
subl
xor
stos
cli
push
inc
ss
insb
insb
jne
or
pop
mov
leave
jp
add
inc
push
sbb
or
movsl
jnp
mov
movsl
loop
sbb
scas
into
out
int
jmp
testb
fsubl
sub
xchg
mov
out
pop
nop
mov
cmp
mov
sub
add
test
setb
lahf
rcrb
loope
jmp
mov
lods
sub
pop
push
in
aas
dec
cmp
or
or
or
mov
mov
mov
sbb
xchg
rcll
leave
test
xor
cli
icebp
test
sub
repnz
mov
lret
mov
loop
pop
subb
sub
add
adc
inc
inc
ret
sub
pusha
fldl2t
pop
popa
test
push
mov
leave
out
test
fiadds
pop
leave
add
lret
pusha
arpl
pusha
pop
pop
push
ljmp
mov
jmp
test
icebp
push
xchg
add
aam
and
ljmp
add
pop
mov
addl
adc
lods
mov
cmp
sub
dec
mov
or
push
inc
adc
xor
sub
lret
cmc
xchg
scas
push
mov
or
pusha
imul
js
rcl
inc
xor
es
sbb
outsb
cmpsb
xor
and
leave
and
jne
mov
test
mov
adc
mov
fisubs
dec
push
fs
sub
addr16
loopne
jecxz
dec
pop
subb
pop
fistps
cmp
std
loopne
mov
sub
stc
pushf
fnsave
push
addr16
test
add
scas
test
movsb
and
add
cs
inc
sbb
test
dec
and
leave
cld
in
loop
mov
lock
mov
add
cmp
sub
and
and
adc
mov
fucomip
aas
dec
xor
or
ds
out
push
bound
jg
or
sbb
sahf
fimull
add
push
pop
lahf
call
sub
xor
sub
add
cmp
fwait
rclb
dec
push
inc
ljmp
imul
dec
adc
popa
ss
push
jmp
scas
int3
lret
repz
push
mov
insl
jmp
iret
mov
in
loope
mov
pop
xchg
dec
add
idivl
inc
popf
ficompl
adc
lret
daa
jp
dec
stc
adc
out
aas
icebp
pop
pusha
pop
mov
dec
dec
and
insb
jb
mov
lea
lock
adc
pop
lock
leave
or
stc
sub
or
dec
pop
pop
add
push
or
orb
hlt
xchg
jmp
lahf
add
cmc
sub
or
pop
lods
scas
repnz
popa
shr
outsl
mov
lcall
aad
in
sbb
jae
stos
addr16
cwtl
iret
pusha
sbb
daa
sub
js
orl
or
or
add
inc
jmp
leave
inc
test
cmp
ret
imul
jp
jl
sub
ret
cmpb
xchg
jae
add
pop
adc
pop
mov
pop
sub
clc
loopne
jecxz
inc
je
inc
sub
mov
popf
sbbb
jg
jns
inc
filds
int
lods
mov
push
or
data16
and
pop
xor
lcall
cmp
stc
bound
cltd
jle
jp
loope
jmp
mov
ret
sarb
mov
jmp
pop
gs
loopne
mov
mov
jnp
lret
lods
aad
cmp
nop
jecxz
pop
mov
dec
pop
push
and
xchg
mov
xorl
cmp
jb
adc
or
sbb
ret
fldl
icebp
or
pushf
dec
xchg
or
sub
adc
pop
xchg
add
xor
call
in
sub
sarb
nop
adcl
ss
push
int
out
xchg
dec
pop
jno
inc
mov
daa
shr
push
or
into
xchg
lock
rolb
or
sub
mov
aad
pusha
ret
jnp
adc
jne
mov
sub
inc
or
pop
lret
lods
lds
push
mov
orb
cmpsl
out
xor
ljmp
jmp
leave
jl
subb
mov
data16
nop
or
adc
and
or
adc
pusha
mov
jmp
jmp
and
sbb
xor
or
add
and
in
outsb
cmpsb
leave
pop
pop
arpl
inc
push
divl
sub
orl
sbb
push
nop
pop
and
push
jmp
shl
jmp
cmp
add
pop
push
lock
es
jl
pop
cmp
mov
loop
ret
daa
and
sub
mov
insb
mov
ret
jne
mov
sub
xlat
jno
sbb
orb
or
mov
push
orl
push
bound
in
add
lret
push
mov
aaa
rcr
xor
push
mov
jnp
adc
and
mov
int3
imul
scas
or
rcrb
bound
sahf
push
lret
daa
sub
cld
or
sub
push
jmp
push
cmp
jne
jns
and
lret
popa
movsl
push
jb
xor
adc
pusha
push
mov
xor
push
push
push
movsl
xor
inc
jg
add
jns
loop
xor
cmp
cmp
jle
cwtl
or
jg
je
movsb
pop
dec
repz
and
sub
pop
sub
stc
gs
imul
inc
and
adc
xor
ds
scas
xchg
sub
mov
addl
das
push
jmp
pop
lods
imul
cmpsl
adc
sahf
dec
cwtl
jbe
adc
mov
sub
loopne
iret
sub
dec
adc
xlat
dec
lret
inc
movsl
add
gs
push
loop
jmp
add
inc
sub
icebp
aam
mov
test
push
aad
mov
nop
mov
mov
pop
jnp
sub
cmp
jge
test
sub
das
sbb
dec
mov
adc
loop
mov
pop
shlb
es
dec
mov
movsl
cld
adc
jno
and
cli
hlt
test
rorb
pop
cmp
jb
daa
mov
ds
jmp
stc
cmp
pop
fimuls
mov
cld
dec
push
xchg
and
push
sti
add
and
ret
inc
es
inc
bound
daa
pop
dec
lahf
push
dec
lahf
repnz
sub
adcl
imull
addr16
inc
jmp
testb
add
cmp
cmp
cmp
fs
outsl
lret
in
daa
push
adc
jmp
cltd
ss
clc
lahf
inc
jae
ja
xchg
ret
mov
insb
jnp
cmp
dec
mov
das
lds
jecxz
or
mov
ljmp
push
hlt
scas
mov
jnp
jne
mov
mov
aad
clc
out
xchg
pusha
sbbl
push
mov
test
xor
jns
test
mov
jg
push
pop
in
mov
sbb
xor
outsl
mov
sub
push
xor
and
mov
add
inc
jbe
and
push
xchg
or
sbbl
push
mov
adc
leave
movsl
jne
fucomi
pop
pop
cs
jmp
lods
nop
or
jge
pop
push
or
mov
lds
data16
dec
adc
mov
cld
cmp
dec
in
ds
lods
cmp
push
push
xchg
movsl
add
add
adc
or
cmp
xchg
add
sub
dec
fsub
cld
ds
jmp
bound
dec
nop
or
or
mov
movsl
frstor
jg
mov
sbb
push
push
xchg
lret
add
pop
dec
aas
mov
aam
jg
add
pop
jmp
push
or
scas
cmp
add
out
jmp
pop
mov
lcall
lahf
lods
out
sub
cmp
sub
fcoms
push
xorl
adc
add
out
bound
jmp
aad
mov
das
stc
lret
arpl
xor
or
fcmovnbe
sub
int3
stos
repnz
xchg
push
pop
in
pop
sub
jmp
jge
int3
push
rcrl
fildll
imul
stc
lock
imul
jmp
mov
jmp
fsubrl
push
dec
add
sub
adc
cltd
push
and
adc
jecxz
sub
loope
pop
mov
jge
push
mov
push
mov
pop
or
inc
xchg
pop
ret
push
xlat
pop
in
xor
add
inc
cmp
call
testl
inc
fdivrl
ds
daa
jne
cmp
jae
push
enter
mov
add
adc
clc
pop
lret
sahf
sti
outsl
outsb
push
divb
push
sub
cmp
dec
add
jg
push
or
mov
xor
pop
mov
in
lods
add
inc
lahf
or
cwtl
sub
out
lret
adc
test
jbe
stos
sub
imul
jmp
cmc
paddb
xor
pop
mov
fsubrs
adc
popa
push
popa
inc
cs
cwtl
xchg
dec
popf
pop
out
push
clc
out
pop
roll
mov
sub
enter
daa
sbb
lahf
add
inc
les
jmp
sub
dec
int
rcrb
das
mov
pop
xchg
sti
pop
xor
dec
lret
mov
hlt
cli
ret
push
xchg
add
push
bound
cwtl
out
aad
insl
icebp
adc
xor
and
push
jmp
loope
loop
stos
dec
mov
or
outsl
xchg
lock
add
fiaddl
mov
popf
icebp
repz
jmp
pusha
movsl
dec
cmp
add
sub
sub
ds
fmuls
sub
push
xchg
jecxz
xlat
lods
cmp
idivb
and
lods
push
jl
nop
addb
jb
add
sahf
shrb
pop
add
xor
insl
or
dec
sbb
dec
add
inc
sub
cli
out
sbb
mov
stc
jle
cmp
lret
dec
loop
nop
lds
xlat
push
sub
setg
pusha
xor
inc
jmp
dec
test
pop
rcrl
sub
mov
lds
cs
clc
in
sbb
ja
jbe
push
stos
ret
jge
sbb
mov
inc
xchg
and
fildl
jbe
jecxz
mov
pop
out
fisttpll
shr
add
jp,pt
push
cmp
jle
cmp
stos
mov
mov
mov
jge
inc
pusha
lods
xor
loopne
xor
fnstenv
inc
int3
adc
lds
sub
and
add
pop
pop
popa
jo
xor
push
das
shl
mulb
mov
mov
int3
lock
and
add
test
add
mov
aas
mov
xlat
pop
pop
test
cmc
cmpb
sub
ret
and
add
loopne
jle
es
pop
out
in
xchg
imul
insl
cmp
add
mov
xlat
mov
sub
into
add
mov
pop
test
aas
push
sub
inc
cmpsb
aaa
add
inc
inc
aas
fs
mov
call
loop
ret
test
add
ljmp
mov
push
fdivrs
jbe
adc
pop
pop
aam
cmpsl
cld
adc
mov
push
sub
sti
jo
popa
dec
jb
dec
xor
subl
daa
mov
pop
mov
pop
leave
loopne
in
cmpsb
fnstsw
xchg
pop
jecxz
pop
push
or
jb
or
push
paddsb
outsb
pop
jmp
cli
pop
fiadds
add
sub
je
jmp
dec
jae
cmpsl
ret
pusha
mov
dec
mov
push
add
jmp
vpunpckhbw
out
xchg
data16
xor
mov
dec
mov
add
pop
popa
inc
cmp
pop
pcmpgtw
sbb
mov
scas
dec
clc
cmp
xorb
inc
mull
pop
cltd
push
mov
and
mov
ret
and
cmpsl
pop
and
addr16
movsb
pop
adc
hlt
mov
es
clc
ret
dec
inc
sub
daa
push
gs
cld
aam
or
aad
mov
andb
sub
mov
push
push
test
push
mov
push
push
push
adc
mov
mov
ljmp
int3
mov
adc
fiadds
fldcw
sti
rclb
rcll
add
or
push
shrb
push
xchg
adc
inc
shr
or
adc
shr
ficompl
inc
xchg
jl
and
pushf
fists
jge
inc
and
into
cmp
jno
cmp
push
jmp
mov
add
rorl
call
mulb
cld
push
or
dec
inc
outsb
add
push
cmpsb
imul
push
adc
in
add
pop
and
shl
xchg
push
add
push
and
pop
pop
das
hlt
cmc
jbe
or
ror
lret
mov
fdivl
push
lcall
jmp
jecxz
int3
icebp
fsts
pop
dec
aas
mov
add
push
adc
dec
or
pop
jp
xor
adc
sub
inc
cmp
repnz
xchg
adc
ljmp
popa
add
fistpll
sub
cmp
adc
push
jbe
fwait
xor
push
jmp
push
sahf
push
cli
push
outsb
shll
add
cli
cltd
aas
jp
loope
cmc
jmp
mov
outsl
push
sub
les
hlt
mov
or
sub
out
bound
movsb
repz
xchg
mov
sbb
fucomp
mov
xchg
dec
loop
push
pop
jle
dec
mov
leave
pusha
sahf
in
and
sub
pop
or
mov
inc
pop
push
sti
mov
xor
cli
loope
negl
jb
stos
push
enter
repz
mov
sarb
js
xchg
nop
jg
stc
stc
cmp
jb
or
or
xor
cmp
filds
push
int3
cltd
mov
test
push
add
aas
mov
or
cmp
jmp
pop
sbb
dec
jmp
jb
sub
push
nop
push
add
cwtl
popf
sub
adc
push
ds
or
or
jnp
xor
jae
lods
fcompl
xor
lcall
int3
lahf
stc
xor
ret
lods
jg
dec
xchg
nop
iret
cli
dec
mov
dec
sub
adc
outsl
push
pop
out
loope
sub
movsl
test
lcall
in
xchg
xlat
xchg
mov
mov
xor
or
sbb
sub
ret
clc
movhps
sbb
mov
outsb
adc
aam
jns
dec
ljmp
adc
out
and
push
add
xor
or
add
sub
aas
inc
test
push
inc
fldt
out
aas
adc
and
sbb
xchg
pop
and
cmp
mov
repnz
pop
add
push
mov
push
fstp
adc
sbb
cmp
lea
fsubs
add
xlat
adc
sub
mov
pop
in
jmp
loope
push
fs
cmp
cmp
sbbl
xlat
jnp
jmp
and
roll
add
and
and
orb
ret
das
jmp
icebp
pop
lahf
jno
dec
xchg
popa
jmp
in
xchg
cld
jne
idiv
jmp
mov
xor
add
dec
xlat
adc
add
inc
push
popa
shl
cmpb
xchg
or
aaa
or
pop
jg
loopne
pop
push
mov
push
xchg
lods
push
int3
sbb
sti
add
sbb
xchg
lret
xor
xor
and
testl
nop
cli
mov
xchg
and
or
xor
call
mov
cld
dec
xchg
ret
fisubrs
int
insb
sbb
daa
push
dec
stc
xchg
add
add
xor
jmp
dec
add
push
push
or
mov
push
mov
lock
inc
push
mov
xchg
mov
xor
repz
jnp
push
xor
pop
decl
mov
xchg
je
inc
incb
call
lret
jp
jae
mov
or
inc
mov
movsb
sbb
pop
push
ror
xor
push
les
adc
pop
mov
or
or
adc
mov
dec
sub
jmp
stos
aad
mov
xchg
shr
push
and
mov
out
pop
not
movsl
data16
xchg
push
repz
arpl
hlt
ss
push
insl
dec
inc
scas
jns
outsl
leave
out
jge
shll
int
sub
adc
je
insl
mov
xchg
popa
data16
jle
jl
insb
mov
orb
ja
inc
mov
adc
nop
cmp
cmp
mov
cli
fidivrs
leave
cmp
pop
popl
leave
mov
mov
add
push
std
subl
push
jnp
inc
cli
and
cmc
int
or
ljmp
xor
inc
xor
cmp
xor
out
filds
pop
push
push
repnz
mov
out
and
lock
lret
xlat
loope
add
frstor
bound
jle
ret
cwtl
jmp
scas
and
cwtl
iret
dec
fiaddl
pop
cmp
add
or
jmp
and
push
or
inc
pop
lcall
adc
pop
out
and
jb
movsb
pusha
adc
ja
push
fbld
dec
dec
scas
and
orb
or
test
test
or
repnz
dec
mov
and
or
push
jns
inc
in
adc
jbe
add
lea
adc
cmp
dec
lods
loop
in
xor
and
xchg
repz
daa
shll
xchg
nop
mov
mov
pop
subb
lds
leave
aaa
fimull
fstps
lock
mov
pop
divb
jg
loop
ficomps
js
cmpsl
test
fstpl
pop
pop
loopne
push
add
dec
out
js
out
imul
imulb
or
jmp
jp
aam
add
movsb
inc
repnz
add
add
pushf
xchg
lcall
fidivl
ljmp
lahf
loopne
or
test
bound
push
shl
jnp
push
fiaddl
xor
or
cmc
mov
or
jnp
xlat
cmp
jae
sub
cli
add
pop
incl
les
jl
mov
lds
mov
loopne
pop
mov
mov
test
xchg
stc
mov
cmp
xor
dec
add
lahf
insb
lret
xchg
cmp
xchg
std
mov
ret
cltd
fisttpll
jnp
adc
das
pop
pop
or
out
mov
repnz
adc
in
jecxz
cld
mov
aaa
test
cltd
mov
aas
sub
aas
outsb
mov
lahf
aaa
add
out
fsubrl
sub
mov
cmpsl
xor
adc
add
scas
enter
loope
fistl
aad
mov
xchg
jb
into
sbb
cmc
push
lcall
dec
lock
adc
push
int3
leave
push
dec
cli
xor
test
mov
sub
sbb
and
jne
out
cwtl
pop
adc
scas
push
jbe
add
jb
sbb
add
push
add
dec
jmp
insb
push
add
shrb
or
and
sub
outsb
or
cmp
movsl
jne
cmpsl
or
pop
push
mov
mov
dec
add
mov
cmp
in
in
xchg
adc
loopne
rorb
add
add
divb
push
ret
jp
add
mov
lret
pop
and
lahf
test
mov
adc
cmp
sti
insb
pop
xchg
mov
mov
adc
addb
xor
sbb
outsb
jp
pop
ljmp
pop
pusha
cmp
jmp
or
pop
je
iret
add
dec
stos
aas
jmp
out
pop
xor
clc
fstps
outsl
mov
mov
ret
clc
scas
cwtl
jae
xor
push
pop
xor
cmp
add
add
addr16
or
sub
inc
push
pop
or
add
cmp
stc
scas
mov
cmp
jp
lods
mov
lret
dec
dec
pop
cmpsl
inc
sub
or
cmpsl
mov
and
inc
mov
out
lret
clc
or
aas
cld
std
clc
dec
inc
xchg
xor
es
adc
sbb
dec
addl
inc
xchg
scas
mov
mov
dec
ret
dec
in
lret
inc
pop
test
sbb
lcall
mov
cmp
loope
stos
ficoms
jnp
pop
adc
shl
mov
dec
sub
cmc
shl
pop
sbb
out
bound
or
mov
repz
jne
dec
mov
mov
lods
decl
sub
pop
cltd
add
rcl
push
loopne
scas
mov
ficompl
in
mov
xor
push
lds
int3
lods
ljmp
pop
call
mov
in
mov
push
sub
lahf
xchg
add
push
push
pop
mov
mov
inc
mov
jbe
in
call
mov
jmp
outsb
inc
mov
ret
jmp
pop
xor
xor
subl
mov
sbb
push
dec
mov
inc
mov
cmp
adc
xlat
bound
and
dec
js
push
int
pop
jecxz
pop
push
jbe
sub
cmp
add
dec
adc
sbb
decb
sub
xchg
aad
xchg
cwtl
orl
xchg
sub
push
imul
inc
sbb
inc
or
ss
test
jmp
call
dec
sbb
pop
adc
scas
adcl
jmp
mov
sub
cwtl
mov
mov
mov
fists
cli
cwtl
dec
dec
jmp
and
out
stos
cwtl
pop
push
sbb
jns
or
jmp
add
pop
subb
jmp
decb
xchg
pop
mov
dec
add
ret
push
xchg
cli
popf
call
not
or
ficomps
mov
pop
xor
outsb
lret
ret
rcrb
shr
sub
xor
call
sarb
jns
sbb
dec
sub
aas
cmc
stos
mov
jecxz
adc
jmp
sub
popf
sbb
xor
lds
xor
aaa
add
add
pop
inc
mov
shr
inc
push
adc
inc
mov
pop
sbb
mov
mov
add
xor
pop
cmp
inc
cmpsb
mov
cmp
sbb
adc
push
mov
shr
and
push
test
inc
dec
iret
adc
jmp
insl
or
mov
loop
jecxz
or
add
xchg
pop
jbe
adc
sub
or
jns
inc
shlb
test
mov
xor
inc
and
sub
lret
add
mov
mov
sbbl
add
stc
push
dec
push
ds
or
sbb
in
cmc
cltd
cwtl
insb
icebp
pop
cld
pop
mov
repnz
aam
pop
add
daa
pop
and
das
dec
ficoms
jecxz
out
jno
aaa
mov
sbb
sbb
adc
cmp
jne
mulb
cs
jne
and
add
fimuls
icebp
push
mov
pop
push
loope
jmp
and
pop
pop
sub
daa
enter
push
lock
popa
ret
data16
and
jmp
sub
mov
xchg
mov
xchg
adc
adc
add
dec
mov
icebp
test
push
mov
jmp
add
pusha
adc
adc
mov
adc
xor
pusha
das
orl
add
sub
add
nop
test
mov
outsl
testb
lahf
es
pop
mov
mov
xchg
call
jne
add
inc
shrb
cli
mov
pop
adc
mov
mov
inc
add
push
and
mov
add
aad
stos
mul
mov
add
xchg
outsl
enter
mov
jecxz
cmpsb
gs
int
jl
cmp
mov
inc
pop
or
xor
mov
nop
dec
jecxz
shr
nop
mov
lods
xchg
adc
push
ds
sbb
lahf
jae
sbb
xor
inc
sub
or
mov
nop
xchg
stos
inc
mov
cmp
add
add
pop
mov
popa
dec
mov
fstcw
in
and
stos
add
push
mov
jae
rolb
dec
movb
inc
or
jg
or
add
out
push
mov
sub
lock
add
push
sub
inc
repz
shrl
data16
push
dec
or
or
ret
and
rorl
ljmp
dec
xchg
inc
jno
aas
inc
je
test
dec
cmp
add
pop
cwtl
mov
sub
mov
push
clc
iret
shlb
popf
xor
icebp
xor
cmp
popa
popf
ret
mov
add
xorb
or
das
push
aaa
popf
into
or
sbb
movsb
mov
cmp
jmp
enter
dec
and
jo
in
aad
out
js
pop
inc
pop
pop
xchg
mov
jmp
mov
push
outsl
and
leave
shr
add
and
cld
stos
pop
pop
jmp
enter
js
or
dec
popf
imul
jg
hlt
cmpsb
ud2
cmp
push
shlb
test
push
sbb
push
cmp
add
dec
mov
loope
fdivs
jae
xchg
or
and
adc
pushf
jbe
fs
xor
or
sbb
add
or
sbb
out
adc
or
pusha
bound
and
pop
stos
and
ja
add
push
or
outsl
pop
or
add
mov
aam
or
lret
cld
or
mov
lret
bound
sub
add
add
push
and
lods
sbb
inc
adc
les
jle
adc
and
and
clc
bound
and
sub
add
sub
in
add
or
xchg
xor
repnz
add
add
or
xchg
jno
js
or
or
test
and
or
sub
sbb
pop
test
outsl
out
add
add
rorb
sbb
loopne
push
std
fmull
inc
ljmp
or
aam
mov
add
mov
or
adc
cld
xchg
adc
adc
push
sbb
lods
dec
lea
movsl
data16
out
and
iret
xor
mov
xor
leave
dec
add
or
pushf
and
andl
pop
and
cmp
inc
push
scas
or
in
subb
push
test
mov
jne
or
inc
sbb
push
push
sub
dec
jae
and
and
jnp
mov
adc
pop
add
and
aad
cmp
mov
inc
lret
loopne
pop
mov
sbb
test
xor
xorb
push
cmp
push
js
sbb
mov
adc
lds
sub
sbb
inc
mov
sbb
add
mov
cmp
xor
xchg
fldenv
adcb
or
cld
call
adc
and
mov
decb
movsl
adc
add
jne
jmp
mov
call
leave
jne
pop
mov
fisubrs
rdpmc
rolb
mov
xor
sbb
repnz
into
js
aam
loopne
mov
xchg
or
push
fs
push
shr
or
sbb
adc
lret
rolb
adc
sub
pop
xor
movsb
ljmp
sub
cmpb
fwait
dec
aam
mov
dec
daa
outsb
sbb
icebp
int3
pop
movsl
sub
jbe
inc
cs
lret
int3
sbb
cld
xchg
ja
push
lret
pop
movsl
cmp
or
adc
jns
pop
repnz
xchg
push
sbb
ja
pop
pop
push
xlat
and
xchg
cmp
xor
call
addb
cs
mov
or
xlat
mov
push
shll
add
jbe
es
jne
decl
add
sti
mov
lahf
jbe
adcl
mov
xor
add
cmp
fbld
test
out
inc
mov
testl
mov
nop/reserved
push
scas
adc
dec
jno
loope
jbe
push
popa
stos
xor
mov
pop
mov
repz
pop
and
pop
pop
decb
rclb
fs
xchg
cmp
add
outsb
sub
pop
push
cmc
push
cld
stos
hlt
dec
jns
sub
sbb
push
push
push
xor
shll
movsb
add
out
xchg
sbb
mov
mov
push
mov
jge
pop
add
xor
add
mov
inc
ficoml
in
or
incb
pop
dec
lods
jmp
outsl
sub
adc
jmp
inc
add
xor
xor
insl
dec
cld
xor
xchg
ljmp
sbb
add
jno
inc
shll
js
insb
jge
add
lea
mov
xlat
mov
and
aad
mov
dec
fldl
jb
aaa
rdpmc
and
rcrb
cmp
sub
jmp
and
push
les
and
xlat
out
repnz
jnp
pop
mov
or
inc
or
aas
inc
inc
adc
fidivrl
xor
and
pop
mov
add
divb
das
or
jo
jge
sbb
mov
int
add
and
or
cld
fcomps
sub
rclb
dec
lock
sbb
lahf
xchg
imul
fisttps
sub
inc
lret
jmp
data16
or
lret
aaa
xchg
dec
jmp
cmp
pop
out
lret
mov
adc
xor
xchg
push
and
push
in
cld
push
jl
shll
push
loop
lea
lret
daa
push
int3
pop
lds
inc
imul
cmpsb
scas
push
or
push
lds
not
push
xchg
or
test
pop
adc
push
cs
xchg
movsb
fnstcw
adc
push
icebp
std
jbe
in
mov
jg
aas
cmp
mov
push
push
ss
sbb
pop
dec
lret
add
mov
loope
lods
xchg
pop
stc
cmp
xchg
je
dec
xor
xchg
push
cli
mov
mov
jae
fnsave
je
lds
pop
mov
and
push
push
sub
cwtl
mov
add
adc
adc
inc
push
mov
aad
add
fisttps
push
testl
mov
sub
mov
xchg
and
pop
mov
and
xchg
pushf
lods
push
dec
or
pop
lcall
inc
inc
xchg
pop
dec
ja
sbb
lea
and
add
jle
insb
pop
pop
sub
rcrl
pop
or
aad
ds
pop
inc
rorl
push
pop
mov
cmp
jmp
ss
add
jmp
inc
lea
mov
hlt
imull
imul
pop
dec
pop
pop
sub
icebp
inc
imul
addr16
aad
xor
cmp
adc
mov
loope
sbbl
cmp
inc
sub
push
pusha
icebp
push
js
mov
shrb
dec
mov
push
icebp
dec
push
stos
mov
add
sbb
stos
jno
mov
scas
adc
outsl
loope
leave
ss
push
mov
push
idivl
aam
lds
sub
pop
push
dec
movsb
push
add
push
add
out
cmp
mov
scas
lds
mov
or
jmp
out
or
pop
xchg
sub
clc
jge
and
cmc
pop
mov
cltd
ret
adc
loopne
rcrl
shlb
adc
pusha
sub
call
jmp
fstl
mov
sub
addr16
ja
xor
je
sub
or
loope
cmp
test
push
mov
and
mov
or
inc
mov
sarl
adc
add
or
adc
and
gs
pop
push
icebp
adc
or
push
dec
xor
shl
andl
xchg
add
fstps
sub
aam
daa
push
sub
scas
jo
and
jo
test
xchg
iret
pop
pusha
push
popf
add
jmp
lret
rclb
ljmp
pop
mov
adc
imul
push
inc
jecxz
fdivr
loopne
out
mov
andb
shrb
xchg
sarl
xor
je
pop
cmp
das
in
lcall
cmc
xor
sbb
lock
roll
dec
push
outsb
pop
xor
arpl
dec
cs
and
fimull
das
int
lods
push
push
jmp
inc
mov
pop
ffreep
enter
or
and
test
add
sub
sub
cmp
jo
inc
aas
and
mov
shl
scas
aas
sar
inc
gs
movsb
cmc
lods
loopne
dec
push
je
pop
es
inc
mov
add
pop
lret
push
jmp
rol
popl
pusha
lcall
pop
sar
cmp
jmp
scas
call
push
mov
pushf
mov
fstl
idiv
xchg
int3
dec
fwait
pop
dec
xor
repnz
fldl2t
xor
jle
mov
push
xchg
push
mov
pop
and
in
push
push
or
cmp
xchg
and
jecxz
add
cli
lcall
mov
cmc
add
adc
dec
sub
push
mov
out
push
sbb
enter
outsl
push
adc
jo
or
scas
mov
xor
loopne
mov
push
test
dec
dec
clc
shll
enter
repz
or
push
xchg
loopne
dec
adc
push
xor
out
in
flds
inc
in
sbb
ljmp
inc
insl
cltd
add
ss
jecxz
mov
imul
pop
fcompl
pop
fistps
dec
scas
dec
and
fstl
aad
ret
mov
stos
lret
pop
xchg
sbb
ret
hlt
or
inc
jb
add
dec
bound
insb
inc
sbb
sub
push
ja
push
pop
stos
mov
mov
test
stos
mov
outsb
iret
pusha
adc
cmp
mov
aad
hlt
pop
data16
insb
and
fistps
in
arpl
rcr
loope
jmp
sarb
adc
mov
or
xchg
jne
jmp
pop
out
jne
push
sbb
ret
xchg
sub
cli
push
jb
fistl
xor
add
or
sbb
cs
and
pop
lods
xor
das
mov
imul
lret
leavew
pop
aam
mov
push
mov
mov
pop
add
ljmp
lret
or
divl
jmp
inc
in
push
push
imul
and
add
repz
push
push
lret
lret
add
mov
jbe
pop
out
ret
push
add
inc
pusha
sahf
and
jmp
ljmp
sub
adc
arpl
fidivl
sub
or
adc
inc
mov
loopne
xchg
jne
mov
lcall
lods
adcb
push
out
and
add
out
jb
sahf
leave
adc
pop
add
jo
push
fwait
js
xchg
lcall
insl
vcvtss2si
xchg
sbb
pop
sub
cmp
into
call
jl
jp
lret
jge
push
in
add
addr16
pop
dec
clc
pop
push
ljmp
fisubrs
insl
fcoms
pop
pop
divl
cmp
or
inc
cs
lcall
fisubs
pop
and
jle
or
negl
or
push
mov
sub
mov
rol
add
or
daa
shrl
mov
cli
mov
rolb
fwait
mov
test
lahf
movsl
push
sub
mov
adc
sbb
jg
popf
sbbb
or
stos
xchg
fstl
adc
jp
adc
imul
inc
js
test
add
pop
sub
sarb
or
jmp
mov
pop
push
aam
cmpsl
adc
jmp
mov
or
sbb
scas
dec
bound
xchg
cmp
stos
add
xor
adc
sub
and
add
mov
and
test
cli
push
test
or
jb
push
mov
pusha
and
sbb
xchg
mov
xlat
mov
or
xorb
ds
out
fisttps
arpl
sbb
xor
inc
jns
or
gs
cmpsb
pop
cmp
sahf
or
js
scas
sub
cmp
pop
push
adc
add
fs
inc
xor
add
cli
xchg
mov
or
adc
dec
jmp
mov
jns
sub
add
lcall
mov
in
xchg
test
xor
cmp
adc
and
out
addr16
sub
inc
mov
pop
add
js
popf
pop
cld
fistpll
ror
pop
addl
jmp
mov
push
add
pop
in
scas
mov
pop
pop
jmp
popa
daa
pop
std
or
insb
inc
lahf
icebp
rcll
xor
sub
add
dec
pop
inc
mov
cld
loop
pop
xor
mov
das
pop
push
pop
jno
decl
lret
add
pop
jg
popa
mov
push
jne
dec
neg
lahf
pusha
and
xchg
call
data16
push
mov
sub
add
sbb
addr16
cmc
test
sub
adc
mov
notb
adc
out
pop
xor
fwait
ds
and
insb
test
pop
lcall
cld
rorl
add
push
mov
fldcw
jb
push
ja
inc
dec
pop
sbb
push
jne
jmp
mov
rcrb
sti
push
jl
add
pop
dec
ss
aaa
adc
sub
sub
stos
insl
inc
push
push
pop
test
test
xor
inc
adc
cmc
in
push
daa
shll
loop
jne
sbb
icebp
add
push
dec
mov
xchg
push
rcrl
sub
sbb
vsubpd
repz
inc
pusha
jmp
xor
outsb
adc
add
ret
frstor
or
pop
ja
dec
aas
stc
fwait
pop
dec
dec
cmp
das
pop
mov
dec
pop
cltd
push
jmp
pop
not
loope
pop
js
push
xor
addr16
cwtl
mov
imul
dec
repz
push
inc
lds
imul
pop
jge
stos
and
sub
pop
test
mov
sub
jle
mov
stc
lret
inc
jmp
rorb
add
push
dec
add
arpl
pop
push
roll
push
xchg
icebp
push
out
insb
lods
int3
mov
push
xor
and
inc
push
jbe
sbb
aas
imul
dec
arpl
shll
imul
sub
shr
inc
dec
push
adc
jmp
pop
add
push
mov
or
cs
mov
or
pop
fninit
xor
pushw
fildll
ret
int
inc
inc
xor
jae
loope
jne
into
enter
and
add
pop
push
push
xor
stos
mov
push
push
jmp
xchg
mov
mov
jecxz
shl
or
into
sbb
jbe
add
sub
pop
lret
mov
inc
shl
add
mov
inc
inc
inc
loop
adc
dec
sahf
rolb
jle
push
add
cltd
jmp
add
xor
gs
or
pusha
inc
sbb
pop
lahf
outsb
and
adcb
fdivl
das
jl
daa
jns
inc
jmp
add
ss
mov
mov
int
sahf
fwait
movsl
js
add
pop
mov
mov
xor
jecxz
adc
dec
cs
or
mov
jbe
lret
fdivl
inc
std
cmc
out
repnz
popa
rclb
adcl
insb
adc
mov
cwtl
jae
out
inc
dec
jmp
push
out
fdivrp
adc
xchg
icebp
cmp
repnz
shlb
cmpsb
lahf
pop
mov
sar
push
cmp
fldenv
data16
pop
cmpb
pop
repnz
jge
mov
sarb
loopne
in
out
add
push
push
mov
xorb
aad
lock
lock
xchg
nop
enter
fistps
flds
test
aas
shrl
repz
ja
rorl
out
sub
mov
js
sub
hlt
push
mov
xor
and
add
push
pop
dec
inc
jp
add
neg
cmp
std
mov
pop
dec
jmp
mov
mov
inc
inc
insb
xorb
cmp
enter
lcall
inc
ror
pop
push
dec
or
inc
pop
adc
in
fwait
pop
mov
dec
pop
rcr
addb
pop
push
adc
xchg
fwait
cli
and
xor
mov
mov
fbstp
aad
iret
movsb
xchg
mov
jo
and
ljmp
dec
testl
add
sub
add
jnp
mov
aaa
xchg
jb
pop
push
mov
push
adc
jnp
aam
insb
ljmp
mov
stc
test
or
sub
xabort
push
sub
scas
jns
xor
push
mov
ds
adc
xor
les
fdivrl
xor
mov
add
cs
xor
or
mov
loope
push
shr
insl
rcll
nop
jnp
inc
les
xchg
insl
xor
xor
int3
stc
or
cmp
cli
jmp
and
dec
shr
mov
mov
stos
xor
xchg
sahf
sarl
push
sub
xchg
xor
fcoml
and
orb
aaa
call
lea
ds
loop
shl
cmp
jmp
inc
xor
or
or
fadds
xchg
xor
mov
and
cmp
in
xor
sbbb
add
rorb
and
int3
inc
cmp
ds
dec
or
dec
cmc
add
insb
daa
inc
jmp
push
mov
push
adc
or
jmp
sub
cmp
jecxz
xchg
add
insb
lds
push
push
push
cwtl
add
sti
cmp
cs
pop
fs
cmpsb
or
add
add
xor
hlt
add
jmp
outsl
ret
andb
or
add
sub
sub
rolb
pop
add
add
pop
mul
adc
push
lods
sub
jmp
movsb
in
pop
inc
aas
dec
cmp
fldenv
mov
les
sub
mov
pushf
mov
sbbb
mov
add
pop
lahf
inc
scas
or
cmp
adc
pop
push
and
arpl
push
pop
popf
imul
or
pop
fs
mov
cs
or
fimuls
decl
pop
push
je
cmp
jmp
push
orb
in
add
movb
push
addl
cmp
jbe
fstpt
and
mov
sti
add
or
mov
repz
xchg
pop
add
shr
arpl
add
imul
dec
mov
push
mov
push
pop
jg
add
and
lock
inc
inc
addl
mov
arpl
test
icebp
cwtl
sub
mov
shr
roll
les
shrb
aaa
stc
and
cs
xlat
enter
jl
popa
ds
xor
dec
jno
mov
mov
dec
jp
mov
push
xchg
in
lcall
push
sub
cli
aad
int
pop
int3
repnz
cwtl
xor
sub
xchg
mov
popf
add
fisubs
xchg
mov
pop
push
sbb
sbb
sbb
push
stc
or
push
jmp
es
jg
popa
je
add
rclb
mov
sub
sub
mov
out
cmp
rolb
jmp
mov
std
pushf
push
outsb
xchg
sbb
scas
aad
mov
int
push
dec
fisttps
xchg
not
ja
xor
aas
sbb
sti
negb
xchg
jo
jno
ss
scas
das
les
push
jg
cmpsl
push
popf
adc
jmp
dec
xor
pop
popf
xor
outsl
inc
sbb
xor
js
out
imul
dec
mov
push
xchg
adc
pop
std
mov
push
xchg
sti
cmp
imul
andl
pop
inc
gs
pop
inc
test
xorb
bound
insb
ret
fwait
push
pop
mov
cmp
adc
xchg
jns
inc
jmp
fsubl
repz
mov
xchg
sub
jg
dec
xor
inc
mulb
dec
repnz
inc
adc
push
mov
dec
cwtl
shrb
popa
jp
push
jl
sbb
aaa
out
pusha
fcoml
jne
imul
dec
xor
call
nop
sub
cmp
add
repz
mov
ja
and
add
mov
adc
jno
ljmp
inc
sub
adc
adc
push
dec
lods
push
daa
leave
loope
push
add
insb
out
push
jmp
negl
xlat
push
push
sub
add
xchg
mov
clc
mov
push
into
fsts
stos
inc
test
pusha
jl
pop
push
dec
adc
cmp
jecxz
xchg
fnstcw
mov
xchg
ljmp
mov
cld
jg
sbb
add
inc
push
add
sub
dec
sub
mov
xchg
push
push
mov
push
mov
cs
cltd
dec
mov
xchg
push
test
dec
fsts
xchg
push
xor
shl
pop
incl
out
ret
and
jnp
pop
inc
mov
mov
sub
jnp
das
imul
mov
out
and
das
pop
jo
push
or
push
push
adc
cmpsl
lret
push
dec
add
xchg
xchg
jecxz
lea
push
jns
xor
adc
mov
jmp
xchg
pusha
xchg
outsl
repnz
daa
cmpsl
in
and
out
add
cmc
mov
loop
ret
roll
cwtl
jne
aas
sub
pop
fnsave
imul
enter
inc
scas
faddl
push
mov
or
mov
sub
mov
ljmp
bound
push
xor
shrb
fs
lret
data16
or
and
mov
andb
scas
aas
rcr
add
mov
add
shll
in
int3
jmp
adc
adc
jns
bound
xchg
and
lcall
push
pop
pop
and
and
or
push
push
or
dec
repz
inc
sbb
inc
out
or
and
adc
movl
mov
or
pop
and
scas
int3
xor
xchg
pop
adc
xlat
push
dec
mov
lds
or
or
pop
stos
lock
sub
icebp
jns
in
and
sub
mov
add
sub
xor
scas
and
adc
mov
push
sbb
and
mov
pop
jecxz
scas
or
in
push
mov
add
jmp
bound
fldz
xchg
pop
mov
sub
inc
dec
adc
imul
stc
cltd
pop
add
sub
sub
out
adc
pop
imul
aam
daa
insl
xor
add
hlt
rcrl
ja
mov
ficoms
sub
mov
dec
mov
and
shl
addb
push
mov
not
jle
or
and
icebp
xor
nop
ret
hlt
push
push
add
or
test
out
push
sub
push
dec
cmp
and
push
sub
xor
sub
out
mov
cld
and
jae
mov
pop
add
cmpsl
inc
xchg
cmp
cmpsl
mov
aaa
adc
ljmp
sti
lret
xlat
inc
add
ret
fxch
imul
xchg
inc
fldt
mov
outsb
cmp
insl
bound
sar
out
cmp
or
ss
push
stc
adc
adc
add
mov
mov
push
idivb
cmpb
das
das
mov
xor
scas
je
jg
lret
mov
add
loope
xor
aas
repz
inc
icebp
daa
and
cs
adc
or
dec
iret
jns
xor
int3
enter
neg
fadds
sub
push
sub
sbb
shll
and
sbb
loopne
adc
pop
cmc
fiadds
sub
into
stos
push
xor
push
mov
xchg
adcb
add
inc
fldenv
pop
mov
adcb
das
mov
or
lcall
jne
enter
shlb
lret
dec
jmp
mov
adc
push
notl
fwait
js
stos
mov
or
push
das
xchg
sub
mov
out
xor
gs
repnz
mov
push
or
or
sbb
fdivp
pop
add
inc
fildl
mov
add
pop
jne
imul
ficoms
lahf
mov
cld
mov
jmp
pop
xor
data16
dec
or
je
in
and
pop
rcrb
add
neg
push
loope
jle
pop
and
pop
xor
jnp
pop
sub
adc
pop
pop
push
jne
lods
adc
mov
int
loope
pop
orl
dec
clc
xlat
or
inc
jno
loop
cmp
in
dec
sub
sbbb
lods
xor
xor
icebp
cmp
or
subb
in
jle
pop
ljmp
jmp
cmp
or
jp
jp
mov
adc
stc
sub
lds
in
sbb
pop
cmc
add
add
and
sbb
daa
add
push
adc
pop
sub
xchg
sub
or
fwait
add
push
ja
sub
push
lods
scas
dec
jns
mov
or
xchg
jno
jmp
ret
ror
ja
ds
shr
add
lods
mov
or
adc
or
dec
testb
jp
dec
add
cmp
sub
inc
adc
xor
lcall
xchg
pop
mov
adc
icebp
or
loop
sbbl
mov
aam
adc
mov
pop
or
push
jne
add
cwtl
lret
imul
pop
int
xchg
inc
clc
scas
aaa
mov
push
clc
fimuls
jo
pop
adcb
loop
notb
dec
outsb
pusha
mov
push
jns
adc
sub
xchg
mov
stos
test
repz
mov
mov
mov
cmp
add
fistl
adc
in
mov
add
inc
add
mov
ret
dec
pop
pop
testl
mov
lods
push
lahf
mov
rorb
ljmp
mov
push
jo
fsubs
sarb
pop
daa
add
add
pop
call
pop
inc
test
loope
push
int3
xchg
xor
mov
pop
test
mov
xchg
mov
xor
popf
nop
pop
xchg
mov
mov
stc
fsub
andl
aaa
scas
addr16
mov
add
add
nop
fiadds
pop
sbb
sub
idiv
jno
xor
or
dec
popf
jl
add
mov
mov
ja
nop
or
rcll
out
jne
iret
stos
pop
push
or
bnd
mov
int3
xor
fsub
cmpps
lock
dec
mov
pop
sub
push
cmc
dec
adc
push
ljmp
jo
mov
or
sub
ds
outsl
nop
jle
cmc
test
cltd
cld
or
inc
inc
dec
adc
cli
add
xor
xchg
xchg
sub
mov
pop
popf
mov
inc
dec
or
dec
mov
out
xchg
repnz
inc
mov
or
xchg
jg
rcr
lods
les
std
aas
push
nop
in
push
pop
bound
hlt
add
push
adc
shll
mov
sbb
daa
or
push
data16
hlt
sbb
xlat
insl
jno
inc
cmp
xor
or
arpl
or
sti
cmp
dec
xchg
fadds
sub
jae
or
pop
dec
adc
movsb
pop
pop
dec
jb
in
das
jmp
aam
pusha
pop
push
mov
xchg
inc
lret
movl
dec
mov
jno
fisubs
dec
dec
push
pop
mov
xchg
rcl
mov
popa
cmp
or
push
mov
addb
push
adc
fsubs
push
jmp
lds
dec
lret
rcl
dec
xchg
bound
test
dec
dec
xor
mov
sbb
test
in
insl
xor
cmc
test
push
cwtl
loop
clc
mov
adc
sbb
neg
add
fstpt
daa
pop
popf
cld
and
jmp
lds
and
pop
or
xchg
or
cmp
lods
test
jmp
add
bound
lods
adc
in
push
mov
jmp
adc
in
xor
pop
xchg
mov
xchg
sub
xor
hlt
das
mov
je
sub
mov
add
sbb
outsl
popa
push
xor
pop
test
adc
stc
and
cltd
in
loop
cs
push
notl
adc
jecxz
sub
fistpll
ljmp
dec
dec
cld
daa
dec
adc
or
mov
cs
and
sbb
dec
and
jge
jo
add
mov
lret
dec
icebp
hlt
add
bound
mov
or
es
push
cmc
add
vaddsubpd
jecxz
movsb
jmp
loop
dec
pop
push
xchg
scas
xor
ret
out
testl
mov
push
test
inc
cli
fistps
push
sbb
addl
out
inc
dec
sub
sub
loopne
cmp
xor
loop
subl
jmp
test
je
push
xor
sub
jmp
in
sub
ja
bound
mov
cmpsl
sub
inc
pop
cli
inc
pop
dec
ror
and
pop
cwtl
mov
ffree
scas
jne
push
add
mov
pusha
jno
adc
jno
loope
fnstsw
es
pusha
pop
xchg
cmc
jbe
adc
pop
xor
xchg
repnz
inc
icebp
and
repz
pop
mov
gs
movsl
jg
cwtl
push
push
test
pop
push
mov
cmp
test
jecxz
inc
jb
mov
jo
cmp
loopne
mov
stc
arpl
fcomps
lods
push
sbb
andb
lock
imul
inc
add
ret
jnp
notl
lock
push
dec
add
jp
ja
inc
ja
dec
jecxz
mov
mov
push
out
cltd
dec
filds
fsubrs
bound
jmp
test
inc
adc
mov
jns
cli
ja
or
mov
bound
lret
xchg
push
push
mov
mov
dec
mov
adc
xchg
pushf
adc
xorl
hlt
inc
lret
test
jmp
pop
mov
not
cwtl
insl
push
ror
mov
xchg
scas
idivl
adc
lds
loop
xchg
insb
adc
dec
and
push
testb
jo
cmp
pop
pop
mov
cs
pop
mov
mov
push
or
fs
xor
add
sub
or
ljmp
xchg
xchg
aad
mov
cmp
repnz
cmp
mov
fldpi
fs
mov
push
das
dec
lods
lods
dec
mov
shrb
cmp
push
loopne
js
mov
add
and
or
push
loop
cs
not
nop
push
jmp
loopne
push
sub
fisubrl
xchg
fcompl
xchg
adc
adc
fucomip
jmp
clc
pop
rclb
imul
out
mov
movsl
roll
inc
jl
pop
xor
xchg
out
int3
sub
shrb
mov
nop
add
lock
cmp
je
js
push
out
outsb
push
scas
jnp
into
test
or
mov
sbbb
mov
popf
sub
insl
dec
das
popa
mov
fdivrl
outsl
dec
out
imul
fiadds
fiadds
mov
imul
cmpsl
cwtl
dec
popa
add
jo
sti
shl
pop
sbb
divb
jp
adc
inc
sarl
mov
mov
fistps
sbb
arpl
jb
je
addb
add
orb
mov
frndint
ret
push
dec
popf
in
add
push
iret
inc
jp
mov
loopne
test
sbb
jmp
sub
xor
push
inc
daa
sub
repnz
cmc
cmp
or
xor
andl
data16
movsl
pop
sub
jmp
jo
jp
sub
imul
aad
and
jg
sbb
cmp
rorl
jp
inc
clc
add
inc
ret
repz
jp
xor
mov
pop
movsl
xchg
push
out
sbbb
cmp
dec
out
inc
pop
hlt
mov
jnp
and
or
cmp
jle
repnz
cs
mov
mov
daa
pop
ja
pushf
mov
xor
pop
sub
add
loop
push
mov
notb
sar
rorb
xlat
ljmp
stc
cld
jmp
dec
fsubrs
or
xor
jne
cli
or
in
push
mov
jae
add
adc
push
xor
aam
mov
pop
rorb
pop
jecxz
cmp
mov
and
loop
pop
sub
pop
add
clc
adc
imull
inc
pop
xor
add
and
and
inc
pcmpeqb
in
popa
add
xchg
adc
js
push
cmp
jbe
or
dec
pop
sub
enter
inc
nop
mov
mov
stos
les
sub
jb
mov
sti
ss
inc
cmpb
add
in
xchg
adc
mov
or
mov
jmp
scas
or
xchg
sub
mov
and
push
pusha
fnstenv
adc
dec
cmp
stos
or
jne
dec
arpl
xor
pop
cmp
dec
xchg
jecxz,pt
xchg
in
movsl
mov
fwait
cs
push
loopne
outsl
mov
orb
jp
dec
mov
lret
ss
ds
stos
sbb
ret
sti
sbb
sbb
mov
adc
shr
rorb
fs
pop
in
xchg
out
fdivrs
pop
mov
add
xchg
dec
ja
cmpsl
out
sahf
shrb
dec
jmp
sub
sti
xlat
rolb
pop
xchg
out
push
aaa
lods
inc
push
jmp
add
inc
mov
mov
mov
hlt
pop
jmp
repnz
pop
rcrb
pop
and
rclb
out
popa
sub
out
add
dec
pop
rcrl
insl
movsb
add
sbb
add
push
pop
ljmp
adc
and
ljmp
push
repz
fs
std
div
adc
lret
test
mov
bound
mov
jecxz
dec
test
pop
mov
or
test
std
push
call
pop
push
adc
cld
and
or
sub
push
lock
jns
ss
jno
out
decl
add
push
aam
inc
mov
sub
or
fnstcw
mov
cwtl
inc
and
push
add
out
in
mov
xor
inc
and
mov
call
fisttpll
dec
push
xor
cmp
pusha
push
or
add
jb
add
fcomi
movsl
jb
in
sub
mov
mov
xchg
jp
jmp
or
or
jecxz
pop
jmp
outsb
add
gs
test
inc
xchg
icebp
push
sub
shlb
int3
leave
or
pop
xchg
loopne
insl
mov
gs
pop
xchg
mov
lods
fadds
jbe
mov
sub
jo
jne
lret
je
jl
in
cs
shlb
lcall
bound
sbb
lods
orl
push
sbb
pop
pop
jmp
fsubl
and
xor
or
ja
pop
lock
jge
add
lds
lock
es
push
or
cmpsb
jge
pop
jecxz
mov
sbb
shl
adc
push
cs
mov
and
push
jmp
mov
mov
mov
shlb
xor
fidivl
pop
jge
jp
decl
and
cs
inc
jno
decl
sbb
xchg
cmp
add
jmp
jmp
in
xchg
pop
xor
test
sub
push
sbb
repz
lret
dec
subb
dec
add
mov
jnp
jge
leave
stos
mov
push
gs
mov
pop
insl
ljmp
dec
fimull
dec
jle
mov
sub
ret
jns
cmpb
arpl
pop
push
jae
mov
adc
add
sub
dec
push
dec
out
add
rorb
mov
frstor
xlat
push
pop
xorb
cs
dec
lahf
mov
xchg
scas
outsb
or
push
pop
mov
xchg
std
cmp
dec
aam
andb
pop
pushf
mov
dec
or
mov
push
mov
pop
roll
scas
fdiv
stos
es
test
cltd
iret
dec
add
fiaddl
pop
xchg
movsl
repz
add
push
out
outsb
jmp
inc
cmp
ja
lock
inc
test
loop
scas
rcll
cmp
push
es
or
fmull
mov
mov
cltd
pop
mov
add
ljmp
lcall
movsl
add
test
icebp
mov
pop
and
push
add
inc
jns
and
cmove
mov
ja
lcall
rclb
mov
cli
insb
subl
or
add
stos
push
or
sarl
mov
xchg
xor
xorb
mov
dec
inc
dec
or
pop
mov
adc
scas
xchg
movsl
mov
shl
push
pop
sbb
fiaddl
and
xor
sbb
mov
sbb
xchg
aaa
adc
jg
adc
incl
pop
mov
jmp
push
or
push
xor
test
lcall
incl
fists
push
adcb
add
in
mov
sub
test
hlt
add
andb
mov
div
aaa
and
add
fildl
xchg
cmp
mov
sub
or
stc
std
inc
lret
sti
dec
or
leave
xor
inc
inc
mov
test
inc
jg
es
stos
add
mov
inc
jl
mov
neg
push
add
cld
clc
lock
loopne
jmp
sbb
fadd
cli
mov
movsl
outsb
mov
mov
sub
pop
clc
xchg
pop
clc
fcoml
mov
pop
fnstsw
pop
jo
bound
or
enter
cmp
fcoml
outsb
std
push
xchg
pushf
and
sub
popf
adc
pop
push
out
jp
insl
adcb
enter
pop
out
mov
out
or
cmp
or
dec
jmp
add
xchg
sbb
adc
nop
lcall
lahf
pop
sbb
push
lock
cwtl
push
push
bound
mov
pop
stos
add
popa
int
jmp
lret
dec
scas
orb
rcrb
or
jmp
popa
push
push
mov
sbb
jmp
loope
xor
cmp
mov
xchg
mov
pop
aad
loopne
repnz
fiaddl
ret
adc
jmp
xchg
rorb
sub
jo
and
push
fwait
or
sbb
enter
shll
inc
add
test
aam
sub
mov
inc
and
xor
neg
pop
hlt
mov
loopne
inc
pop
mov
or
out
and
das
int3
es
rcrb
ds
or
cmp
jecxz
mov
jmp
mov
xchg
sbb
lcall
inc
inc
ret
mov
out
push
push
test
inc
mov
dec
stc
pop
popa
or
xor
sbb
imul
fcomps
sub
inc
je
cld
in
rcrb
dec
jmp
cmp
jmp
out
push
xorb
pop
push
out
inc
xchg
sbb
add
pop
not
sub
dec
nop
lret
sti
jmp
push
adc
dec
xor
mov
sti
xor
dec
xor
mov
aaa
sub
std
sub
add
push
pop
mov
jnp
and
pop
or
xlat
dec
mov
mov
pop
int3
cld
sub
test
xchg
sti
add
loope
test
pusha
cmp
sbb
jg
pop
hlt
xor
xchg
push
mov
ljmp
inc
or
iret
dec
or
push
mov
sub
mov
adc
push
mov
es
cs
sti
mov
push
push
lret
sub
sahf
add
test
push
push
jmp
jne
and
and
fs
adc
and
xlat
add
fwait
pop
xor
sub
sub
pop
and
mov
dec
daa
enter
es
std
cmpb
pop
out
xor
daa
push
mov
repnz
xor
dec
jle
and
stc
fildll
test
pop
xchg
iret
or
das
stos
fs
mov
shlb
jmp
sub
mov
sti
cmp
jnp
sub
pop
loopne
in
mov
mov
push
adc
pcmpgtb
sbb
das
arpl
xchg
ret
pop
and
cltd
iret
daa
fcoms
daa
and
add
es
add
add
or
mov
jmp
inc
xor
icebp
ljmp
add
lret
add
ret
mov
cmpsb
dec
cmp
lock
test
add
insb
jp
add
mov
fwait
add
inc
dec
popa
sub
fucomp
xor
add
mov
add
ja
out
push
aas
sub
dec
shr
push
cmp
pop
adc
arpl
push
mov
mov
add
sub
jne
sub
fwait
pop
in
mov
mov
inc
adc
jl
in
mov
jecxz
test
pop
cmpsb
mov
sbb
in
inc
rcll
jl
mov
xchg
jnp
ret
mov
jns
inc
jmp
call
scas
adc
and
test
gs
mov
movsb
cmp
and
mov
ja
push
cmpl
daa
mov
sub
sbb
shlb
jmp
sub
inc
add
and
pop
or
mov
or
das
lods
loopne
jge
leave
call
pop
sub
int
aas
ficoms
loop
aad
pop
push
mov
pop
cmp
cmp
in
cmp
dec
mov
mov
mov
and
jl
lds
nop
push
movl
inc
add
pusha
lods
and
pop
xor
sub
incb
vmulsd
mov
in
adcb
add
ficoms
pop
and
dec
in
sub
pop
mov
adc
aaa
int3
fmull
test
add
sub
pop
loopne
sahf
push
cmp
inc
cmc
popa
xchg
mov
add
sub
sub
outsb
popf
scas
loope
pop
push
jmp
fidivrs
push
inc
mov
mov
mov
inc
jl
mov
pop
mov
add
fucompp
pop
dec
cmpsl
jg
mov
in
mov
add
dec
jae
pop
loope
out
inc
imul
and
pop
adc
pop
add
xchg
adc
cmp
lahf
fdivp
imul
int
lock
ret
add
fisubl
cli
xchg
cld
out
sarl
pop
addr16
or
loopne
pusha
add
nop
xor
jle
cmpsb
inc
movsb
cmp
pop
fucomip
jbe
push
xchg
push
and
or
xlat
cmp
add
sub
mov
stos
pop
in
nop
loope
leave
dec
mov
xchg
xchg
jmp
je
roll
cld
pmullw
pop
pop
stos
insb
clc
imul
out
pop
in
add
cmp
ss
stos
xchg
jb
lea
test
shl
cmp
lods
or
jno
push
add
test
lock
xchg
repnz
jbe
int3
sbb
add
push
or
jmp
cmp
out
cmpsb
adc
sti
pushf
or
jmp
mov
sbb
fdivrl
les
sbb
or
sub
test
sub
fldt
push
shl
adc
xchg
sub
push
out
mov
fsts
and
ficoml
pop
inc
sub
mov
or
cmp
aas
dec
jg
inc
test
or
shlb
ds
loop
stos
out
and
popf
push
scas
das
and
inc
loopne
mov
mov
out
mov
sbb
xor
imul
and
jne
clc
into
scas
daa
mov
push
or
dec
xor
sbb
add
xor
or
or
cmp
lock
ret
pop
imul
movsb
mov
aas
test
lods
mov
jmp
test
mov
cmp
les
jecxz
pop
jno
dec
push
aam
lods
loope
push
jge
jmp
jmp
cwtl
xor
add
je
cmpsb
mov
mov
cmp
sbb
into
arpl
xor
ds
adc
xor
xlat
out
push
jmp
daa
push
test
push
xchg
lret
pop
jne
jne
shrl
push
add
mov
xchg
iret
push
repz
xchg
pop
js
jp
push
mov
push
in
in
iret
pop
pop
shl
inc
ret
ljmp
cmp
insb
sub
ljmp
pop
jg
jb
movsb
sbb
sbb
add
xor
jmp
ret
pop
mov
mov
add
pusha
arpl
repnz
or
mov
add
mov
lock
xor
fstpl
lods
inc
jmp
or
xor
sub
lods
lds
rorl
fsubs
ret
addb
out
cltd
dec
mov
fcoml
sbb
add
leave
cmpsl
jmp
std
jg
pop
sbb
fstps
xor
sub
test
push
int3
jmp
push
pusha
sub
pop
sub
pop
jo
xchg
mov
scas
cld
pop
hlt
fdivs
inc
sub
adc
mov
sub
jo
push
fwait
push
test
inc
lods
push
push
pop
clc
ljmp
sub
ds
jmp
xchg
jnp
js
jge
lcall
push
and
pcmpgtw
pop
jb
mov
movl
sbb
adc
ret
outsl
adc
scas
int
loop
xchg
and
push
cwtl
xor
daa
bound
or
or
cmpsl
pop
pop
mov
jl
jg
scas
fiaddl
xchg
jmp
stc
xor
xchg
ret
and
mov
mov
push
dec
or
or
addr16
push
pop
daa
inc
push
sub
scas
pop
shlb
test
cmp
lds
add
orl
aam
sti
shl
or
xchg
adcl
pop
loopne
mov
insb
inc
mov
pushf
mov
cld
jle
rcrl
aam
lods
bound
pop
or
enter
movzwl
push
xchg
sbb
mov
pop
aam
cmp
adc
mov
add
mov
or
jmp
cwtl
ds
iret
add
jo
add
dec
inc
cld
adc
lcall
mov
cltd
out
push
adc
xor
lret
mov
icebp
pop
cmpb
sub
push
mov
mov
mov
fidivl
push
xor
pop
and
sub
sbb
test
loopne
icebp
dec
daa
mov
sub
adc
test
inc
xchg
inc
in
hlt
inc
mov
and
enter
mov
mov
scas
loope
mov
cmp
outsb
sub
inc
mov
ja
test
xlat
ret
xor
sbb
cmc
sbb
cld
repnz
divl
jbe
aas
lds
ds
push
test
stos
dec
sbb
movsb
in
dec
xor
push
dec
dec
leave
add
aam
mov
jbe
dec
das
dec
jae
lods
lods
mov
iret
in
inc
movsl
inc
test
jecxz
lret
push
jle
lds
mov
add
fnstcw
repz
jbe
and
mov
cmp
popa
sub
or
mov
subb
pushf
pop
out
out
or
jmp
fldl
adc
fsts
lret
cmpb
xchg
cmp
shrb
sahf
push
jno
mov
mov
sub
dec
mov
lds
cmp
loopne
daa
arpl
add
mov
cmp
lret
mov
xlat
add
xchg
jmp
pop
push
push
rcrl
iret
mov
and
addl
mov
jle
add
or
into
stc
push
das
cmp
dec
pop
int3
add
jne
ds
pushf
dec
filds
aad
ret
aas
icebp
inc
add
push
fisttpll
pop
xor
add
pop
int
shl
imul
dec
sti
inc
mov
and
pop
jmp
lods
ja
inc
scas
test
push
cltd
sbb
daa
jnp
out
or
not
dec
test
push
jmp
sbb
jmp
pop
aad
sub
push
jb
push
jbe
imul
mov
loop
rorb
dec
mov
insl
addl
ror
or
aas
popa
inc
add
incb
out
fimull
or
or
popf
mov
mov
ret
cs
jmp
callw
push
and
lcall
jno
ret
mov
xchg
sti
movsb
sbb
mov
iret
inc
scas
push
gs
mov
lods
mov
in
pop
movsl
aam
or
xchg
cmpsl
cmp
adc
jg
and
dec
inc
and
push
aaa
sub
nop
pop
push
mov
add
movb
repz
push
daa
pop
imulb
mov
or
push
sahf
test
call
movswl
or
loopne
xchg
sbb
push
jg
push
scas
out
sub
iret
or
in
jg
sbb
fildl
jne
dec
dec
xchg
gs
nop
mov
xchg
push
jb
xlat
push
inc
adc
mov
sub
rcrb
bound
push
xchg
and
xor
lock
xor
jae
scas
mov
inc
fdivrs
jmp
not
dec
xchg
mov
arpl
jmp
test
add
xor
mov
fisttps
xor
sub
add
xor
push
mov
call
dec
and
inc
mov
inc
add
dec
lods
dec
js
inc
std
fs
push
inc
nop
jns
add
fldenv
lea
mov
sahf
pop
jmp
fldl
popf
mov
sti
and
mov
mov
sbb
mov
cmp
dec
ss
push
pop
pop
mov
mov
pop
es
outsl
sahf
sub
sub
lcall
cmp
ret
add
or
add
aad
pop
dec
xor
inc
ljmp
cmp
jmp
mov
or
inc
or
mov
adc
jl
push
fsub
adc
out
sbb
es
jnp
pusha
ljmp
es
jb
and
or
cmp
cmp
cmp
stos
lods
add
faddl
jecxz
inc
mov
adc
or
and
mov
xor
cmp
insl
outsb
call
push
xor
lcall
pop
cmc
xchg
push
add
mov
scas
xchg
add
pop
jb
xor
neg
push
add
fimuls
push
insl
sarb
push
pop
mov
ret
jns
subb
js
sub
pop
pop
sub
ret
or
push
jbe
mov
sahf
movsb
imul
push
das
les
mov
mov
loopne
loope
push
insb
imul
inc
fs
stc
lcall
xchg
in
stos
push
inc
mov
in
pusha
add
sti
lret
jle
sub
push
or
jnp
lcall
clc
jbe
pop
into
push
cmp
rorl
loopne
outsl
cli
sub
push
rol
sub
cmp
test
fbstp
push
add
jp
push
pop
cltd
pop
mov
push
add
scas
leave
or
ja
imul
and
je
outsl
aas
mov
or
dec
and
fidivrl
add
ljmp
xor
jmp
lea
cmp
xchg
push
fs
jnp
or
inc
cmp
and
aam
subb
loope
jmp
scas
add
sub
adc
push
mov
cli
lea
mov
out
and
lahf
adc
add
mov
and
jmp
and
pop
into
inc
push
ret
or
and
sub
and
orb
fcmovb
out
pop
pusha
stos
push
inc
xor
xchg
and
xchg
pop
or
push
push
mov
pop
jo
or
mov
jge
rorl
or
mov
out
nop
push
and
mov
pop
popa
das
jl
jp
jae
scas
je
stc
push
shrb
jbe
xor
jmp
mov
aad
sbb
or
push
push
lds
jns
inc
push
mov
sbb
out
sarb
or
lods
rolb
mov
mov
add
das
mov
outsb
in
inc
rorb
jbe
inc
and
and
mov
jo
or
pushf
push
dec
in
fnstenv
sub
subb
pop
mov
pop
or
fisttpll
mov
je
xlat
push
dec
jbe
add
insb
popa
mov
jmp
pop
adc
in
jp
movl
xchg
loop
pop
movsb
adc
test
stos
mov
pop
and
and
or
push
pushf
sub
push
dec
sbb
sub
test
dec
add
insb
jg
out
push
inc
inc
push
mov
or
out
scas
adc
lds
mov
rorl
gs
cmpb
push
mov
or
ds
mov
and
dec
bndldx
pop
inc
aam
jmp
pop
and
dec
dec
call
std
ds
xlat
rcll
xlat
divl
pop
pop
xor
pop
mov
fildl
lods
jb
cltd
sub
dec
test
push
fisubrs
push
sti
inc
or
lock
xor
or
or
rorl
enter
pushf
lods
xor
xchg
sub
rorb
mov
push
jns
and
sub
push
xor
sub
jp
push
dec
and
ficoml
popa
adc
in
adc
push
std
test
xchg
adc
add
jno
jne
add
mov
cmp
sbbl
test
clc
dec
aam
test
data16
fldl
jae
stc
dec
loop
andb
aas
ret
dec
adc
jmp
out
cmpsl
and
movsb
lods
mov
cltd
or
lds
movsl
loopne
ljmp
or
pop
clc
pop
jmp
or
jp,pt
jmp
addr16
es
imul
jno
or
fdivp
dec
push
ljmp
push
and
mov
mov
in
xor
outsb
std
adc
jp
xor
icebp
imul
sub
cmp
out
jle
jo
xchg
add
or
sub
or
lds
pop
gs
call
not
push
mov
add
jmp
jmp
push
mov
mov
sub
mov
or
shrl
push
xchg
pop
jl
out
mov
dec
mov
out
or
mov
or
fcoml
push
add
mov
ja
add
jmp
sbb
pop
and
fldl
in
xor
out
fisubrl
in
jp
cmp
ss
and
dec
mov
push
and
cmp
popa
sub
sbb
std
inc
or
sbb
testb
sbb
sub
cmpsl
push
adc
xchg
sbb
cmp
daa
jae
scas
fadds
cltd
int
insb
mov
pop
insl
lret
pop
jnp
fmull
push
pusha
mov
test
pop
mov
xor
cld
out
ret
ja
xorb
mov
add
jae
pop
pop
ret
pop
jmp
out
mov
inc
dec
test
int3
stc
mov
sub
add
or
jnp
gs
in
cmp
nop
cmp
pop
cltd
adc
push
or
lahf
jle
cmp
shrl
es
inc
sarb
jnp
mov
inc
cmp
add
es
adc
jne
idiv
sub
dec
das
or
jns
push
xor
cmp
xor
jo
pop
xchg
lods
sub
std
in
jmp
jp
hlt
jmp
xchg
mov
std
mov
mov
add
das
pop
test
shlb
pop
es
fs
mov
dec
mov
pop
cltd
fs
adc
jno
xlat
pop
daa
cld
testl
shll
ljmp
shr
mov
cli
inc
addr16
or
mov
add
mov
xor
sub
lds
not
call
mov
mov
dec
addb
mov
leave
adc
psllw
jmp
repnz
popf
loopne
sub
xor
cmp
adc
adc
push
mov
dec
dec
out
xor
ret
push
jo
out
push
xorb
es
adc
sahf
mov
mov
leave
call
mov
jge
sub
mulb
sub
arpl
fadds
push
mov
mov
shrb
add
test
sahf
repnz
mov
sub
and
jnp
sub
aad
pop
push
incl
shr
push
mov
dec
in
pop
enter
xor
push
mov
pushl
ficoml
mov
mov
sub
sbb
mov
enter
inc
lods
xchg
sarb
mov
add
mov
add
icebp
or
loope
icebp
aaa
mov
scas
addb
pop
daa
push
ret
int
in
test
out
pop
dec
and
mov
cmp
push
push
pop
and
fstps
nop
stc
aas
rclb
pop
cmp
mov
sub
add
xchg
test
int3
push
int3
push
inc
sarl
pop
lods
sbb
xor
pop
push
xlat
mov
cmp
sbb
fiaddl
add
enter
push
clc
xor
xchg
adc
sub
fwait
mov
adc
pop
push
jge
nop
dec
out
outsb
sub
pop
dec
pop
mov
ret
dec
sbb
out
imul
cmpsl
xor
xor
nop
xor
stc
bound
jno
mov
inc
scas
rorl
inc
xchg
jmp
push
xor
std
sti
mov
inc
adc
notl
cltd
test
outsb
mov
jns
or
je
cmp
cmpl
enter
cmp
push
dec
xor
sub
pop
pop
movsb
inc
mov
jno
cmpsl
mov
sahf
jne
inc
fs
or
pop
not
setns
mov
lahf
mov
lock
adc
xor
sub
test
dec
repnz
mov
and
adc
jmp
inc
ret
xor
fisubrs
subb
dec
popa
dec
add
or
sub
dec
dec
dec
push
sbb
dec
push
sub
shll
cld
mov
out
adc
pusha
adc
sbb
or
inc
cs
or
jp
sbb
outsl
mov
or
and
inc
and
sub
rorb
push
mov
or
in
inc
maxps
sub
push
push
adc
or
inc
push
cmp
ja
inc
popf
sti
and
fadds
mov
and
ret
bound
push
push
adc
sub
ret
insl
fnstsw
add
into
pop
loope
push
jge
stos
pop
pop
xor
add
or
xor
add
mov
and
or
dec
dec
out
add
inc
mov
into
pop
pop
push
pop
mov
add
fisttpll
test
or
test
sbbb
mov
adc
out
das
jecxz
cwtl
daa
insl
leave
mov
add
gs
pop
jmp
push
loopne
add
fdivs
push
pop
pop
mov
dec
fnstcw
enter
mov
mov
loop
adc
mov
add
jb
subb
fdivrs
inc
inc
pop
arpl
lret
je
mov
ljmp
pop
sub
mov
mov
jg
xchg
dec
and
xor
jmp
je,pn
jno
stos
nop
cmp
inc
and
xor
cmp
fcoml
mov
dec
mov
push
push
xchg
fld
addb
lock
pop
sub
inc
pushf
add
adc
push
fdivrs
es
pop
push
es
pop
fcompl
test
mov
add
loop
inc
loope
mov
fldl
stos
sbb
addl
mov
or
lds
popa
mov
outsb
roll
pop
push
hlt
mov
adc
nop
pop
fisttpll
mov
cmp
add
push
add
jle
sbb
lret
or
pop
sub
nop
fdivrp
inc
pop
push
testl
add
pop
jbe
mov
add
xchg
push
ret
rcrl
inc
test
daa
test
fisttpll
or
add
pop
pop
movsb
adc
push
call
movsb
pop
cmp
loope
inc
cmpb
adc
enter
aas
mov
xor
inc
xchg
jo
xchg
and
leave
push
cmp
inc
pop
push
jnp
push
or
xlat
movsl
push
lds
and
inc
mov
mov
push
mov
or
shl
cmp
mov
dec
rcr
ret
pop
clc
jmp
int3
push
add
cmp
into
jmp
mov
fmull
push
cmp
into
add
dec
outsl
jns
adc
pop
inc
test
sbb
mov
mov
push
inc
mul
push
pop
pop
xchg
sub
test
repz
mov
lcall
fistpll
dec
cmp
jo
les
mov
mov
sub
add
inc
add
enter
cmp
sub
fisttpl
pop
inc
jmp
fwait
xor
int
ror
pusha
and
rolb
stos
or
imul
movsl
push
mov
mov
les
pusha
jae
mov
add
jmp
sub
std
sti
mov
pop
jmp
pop
loope
std
popa
loopne
jmp
sub
adc
or
cmc
cmp
mov
int
add
jmp
in
ds
scas
insl
push
cmp
scas
adc
or
jle
wbinvd
das
cwtl
mov
or
outsl
in
inc
pop
ljmp
das
rolb
or
cmp
sbb
ret
in
dec
add
leave
sub
filds
dec
pop
cmp
stos
fists
daa
xor
pop
int3
leave
ja
push
push
jp
outsb
pusha
ja
adc
jl
cs
ss
call
data16
inc
jge
cmp
stc
dec
jbe
pop
pop
pushw
ja
ret
imul
add
jmp
pop
inc
fcompl
dec
pop
push
cmp
push
lret
mov
pop
and
or
adc
xchg
or
jmp
imul
dec
pop
pop
cmp
inc
jnp
rcrb
pop
add
jbe
mov
mov
mov
das
test
or
xchg
enter
pop
cld
daa
inc
mov
ss
push
movsl
add
dec
cld
or
mov
add
je
dec
pushf
fildl
sub
pop
lret
js
sbb
repz
sub
out
push
jnp
mov
addb
in
dec
xor
leave
mov
call
adc
inc
aas
roll
test
icebp
out
add
add
out
mov
sub
jmp
hlt
cmp
int
xchg
ljmp
es
sub
sub
dec
inc
cli
inc
pop
or
rcrl
lret
rclb
hlt
adc
pop
xor
add
out
cmp
add
xchg
rorb
inc
pop
adc
insl
mov
nop
jmp
adc
mov
mov
add
je
flds
ss
sub
dec
loop
and
jbe
pop
into
mov
jno
mov
inc
add
xchg
inc
scas
push
pop
mov
and
add
mov
adc
lods
jo
call
mov
xchg
scas
jnp
jnp
push
and
push
data16
cmp
rorb
fisubs
ret
push
fdivrl
mov
test
shlb
or
sahf
jns
mov
or
aaa
andb
int3
fistps
hlt
shlb
mov
xchg
push
subb
mov
rorl
aam
push
loop
mov
cmp
stos
xorl
sbb
xchg
xor
daa
orb
arpl
mov
fbstp
sub
pop
sti
lea
and
pop
inc
push
shrl
pop
dec
xorb
bound
and
dec
scas
movsl
xlat
sbb
mov
lcall
xchg
jno
fadds
sbb
cmpsb
sarb
push
jge
ss
sub
xchg
sub
inc
rclb
jo
jmp
push
xlat
scas
enter
lcall
push
data16
stc
femms
or
sahf
aas
adc
repnz
xchg
int
and
adc
add
inc
push
push
dec
scas
fstl
mov
ja
stos
cmp
sahf
pop
mov
push
cmpsb
sbb
emms
jl
pushf
pop
das
je
jo
mov
sub
jmp
ret
pushf
push
pop
rcll
scas
adc
push
push
movsl
sub
adc
fnsave
sbb
clc
sub
pop
loopne
daa
add
and
call
and
and
add
addl
arpl
shlb
aam
movsb
inc
jb
orl
sbb
push
sarl
xor
repnz
mov
loope
jnp
cmp
inc
inc
jg
xchg
or
add
pop
loopne
fistpl
inc
xor
mov
dec
movsb
stos
add
loopne
fists
fmul
imul
shl
cmp
je
and
sahf
mov
stos
dec
pop
and
push
xor
out
add
ljmp
adc
jmp
sbbl
mov
aas
shrb
cmc
pop
call
jmp
jae
mov
sub
push
xor
adc
inc
adc
pop
mov
push
lret
mov
push
mov
call
dec
pop
in
fdivrp
loopne
and
lock
es
into
pop
dec
add
and
mov
sub
jmp
push
push
sti
cmp
cmp
dec
pop
add
xor
lret
xchg
inc
daa
lret
xchg
jl
add
adc
std
inc
sub
mov
mov
daa
pop
mov
xchg
or
push
out
nop
inc
test
popf
rol
push
adc
adc
insb
int3
fsubrs
inc
pop
lahf
lock
lahf
repnz
jne
das
ljmp
data16
imul
mov
sub
test
js
push
mov
cmovns
aaa
rcl
sahf
dec
push
pop
sbb
xor
dec
mov
shrl
pop
popf
push
or
ljmp
mov
pop
xchg
icebp
push
jmp
sub
xor
mov
pop
mov
push
cltd
cmp
xchg
out
jp
js
add
pushw
loope
inc
dec
movsb
cmp
xor
or
pop
dec
jnp
les
sarl
cmc
fistpll
mov
data16
ljmp
popf
cmp
dec
dec
mov
shlb
or
pushf
lahf
rclb
outsl
push
test
jnp
xor
out
push
and
mov
in
cmpb
rcl
sarl
shlb
push
mov
pushf
inc
int3
lret
xchg
push
test
les
sbb
dec
push
mov
jo
das
insl
data16
pop
xlat
sub
sbb
mov
daa
xchg
jge
adc
lea
jae
jns
jns
das
jne
jp
jg
cmpsb
out
fstl
cmp
imul
push
mov
jne
imul
dec
pop
add
jbe
push
jle
sub
cmpl
pop
sahf
mov
and
loop
xchg
add
xor
push
pushf
sti
jecxz
enter
fwait
movsb
mov
pop
xchg
cmc
dec
sbb
loop
addr16
mov
mov
cld
pop
mov
mov
idivb
push
xor
shlb
cli
sub
loopne
and
cmp
lret
mov
call
pop
add
inc
or
sub
lock
scas
pop
imul
push
jns
nop
jecxz
sbb
and
mov
bndldx
dec
icebp
sbb
popf
pop
js
das
push
inc
fistps
mov
sub
rcrl
xor
dec
sti
and
sbb
push
jns
pop
rorb
dec
xlat
sub
push
rcl
cmp
push
jnp
fsubl
mov
add
xchg
pop
jne
adc
data16
add
jge
cmc
push
cmp
rol
mov
pop
sahf
pop
scas
sti
push
jmp
add
in
fs
call
adc
adc
push
pop
pop
mov
out
lret
icebp
jmp
fdiv
mov
cmp
scas
ja
add
aad
push
jmp
mov
sub
mov
adc
stc
and
sbb
imul
outsl
xor
sub
sbb
lret
sub
mov
adc
sbb
pop
cmp
pusha
xor
mov
sar
out
insl
adc
add
xchg
adc
ljmp
push
std
sbb
inc
mov
sbb
jle
add
in
dec
pop
outsl
rcll
fsubs
dec
xchg
add
add
mov
sahf
iret
leave
jo
dec
insl
sub
cld
jae
dec
fiadds
repz
int
call
sub
dec
cs
jg
push
add
lret
push
adc
cld
push
lods
aas
loopne
or
jle
adc
jbe
cmp
rcl
add
jecxz
inc
mov
insl
push
jnp
jmp
sti
pop
jo
xor
jbe
add
pop
imul
dec
test
lods
fldenv
leave
mov
notb
je
lock
sub
imul
mov
sbb
sbb
push
mov
dec
mov
rcrl
mov
jb
mov
int3
scas
inc
call
stos
jns
repnz
push
rclb
cli
xor
sub
and
in
outsb
test
adc
push
loopne
nop
push
jne
pop
out
push
add
mov
xchg
stos
and
dec
insl
and
cmc
fisubl
outsl
repz
cmc
fildll
inc
scas
pop
dec
add
jbe
pushaw
adc
inc
pusha
scas
add
jne
dec
mov
xor
mov
add
lock
sbb
and
mov
mov
mov
xor
stos
int
pusha
inc
jmp
mov
ror
sub
dec
pop
pop
xchg
xlat
sahf
stos
sub
jno
add
popa
stos
cmpl
iret
push
inc
cmp
jg
push
out
or
xorb
popf
xchg
add
push
sbb
fidivrl
jle
jg
pop
pop
or
and
lea
mov
adc
sti
or
xor
or
les
xlat
cmp
xchg
push
outsl
sbb
in
bnd
dec
outsl
cld
inc
add
inc
mov
add
pop
push
push
stc
das
jmp
adc
inc
mov
sub
sarb
in
mov
rcl
test
cmp
xchg
mov
mov
cmc
add
fucomi
sbb
outsl
movsl
xor
stc
fstpl
jo
js
arpl
mov
jg
sbb
cli
lret
sbb
dec
arpl
decb
sub
pop
pop
or
and
add
es
or
cli
and
lock
sub
mov
and
subb
xor
pop
pop
xchg
or
aas
push
sub
daa
sbb
cmp
iret
inc
clc
or
iret
add
cmp
mov
sub
or
out
scas
push
push
inc
dec
nop
push
divl
jecxz
hlt
int3
das
clc
xchg
and
pop
add
xchg
in
jmp
mov
sar
leave
or
sub
inc
and
loopne
mov
clc
adc
cwtl
jo
out
sbb
sbb
lods
outsl
and
mov
pop
add
xor
jge
jl
aas
mov
mov
xor
push
adc
sbb
ret
jno
shl
clc
dec
xchg
ficoms
mov
not
jmp
pop
add
wbinvd
popf
lcall
ret
adc
sub
jl
fimuls
push
jmp
inc
jo
jno
js
cmp
lret
xchg
fisubl
nop
sub
lea
sbb
push
mov
lock
sarl
popa
jle
das
shll
pusha
clc
dec
add
xchg
jmp
in
add
pop
and
std
push
inc
ret
fistl
rcl
pop
add
dec
mov
lahf
push
repz
cmp
das
loopne
repnz
mov
mov
cmp
jp
out
xor
bound
movsb
dec
pop
adcb
jmp
cmp
dec
and
push
xchg
jp
shrl
testl
frstpm(287
jg
adcl
pop
jmp
xchg
push
out
iret
int3
pop
xor
mov
cwtl
xchg
inc
push
xor
lods
pop
test
dec
or
cmp
nop
push
fndisi(8087
in
cld
cld
sub
roll
in
lret
jle
jle
add
fcompl
popf
add
pop
push
es
sub
test
and
jno
lcall
and
ret
mov
daa
psrld
pop
push
cld
lret
sti
test
stos
fsubl
ret
lock
insl
dec
mov
cmp
pop
xor
ss
cmp
add
push
inc
or
xchg
inc
cltd
push
xor
into
inc
push
fstl
mov
xchg
jl
rclb
arpl
mov
loopne
shlb
mov
sub
out
mov
add
out
cwtl
xor
outsl
test
loope
aaa
dec
cld
sub
mov
not
je
std
fildll
add
loope
icebp
mov
push
pop
test
jmp
mov
dec
loop
test
pop
gs
dec
stc
jge
hlt
das
and
pop
mov
out
or
pop
popf
ret
das
push
cmpsb
cmpsl
ret
ret
jnp
sub
movsl
adc
mov
cmp
mov
inc
test
imul
shll
insb
pop
ret
icebp
adc
ljmp
pop
push
popa
pop
jp
add
add
lcall
push
jbe
and
cmp
inc
push
and
jne
xor
test
les
lds
aad
jle
das
mov
xor
mov
icebp
xor
jle
xchg
jo
adc
js
roll
add
add
mov
xor
hlt
sub
cmc
daa
cld
pop
add
pop
repnz
sub
lret
std
fsts
and
xchg
inc
addl
dec
cs
ret
pop
pop
sbb
mov
rcrl
add
mov
adc
in
xchg
pop
mov
jg
cld
mov
call
call
addb
mov
cmc
inc
lcall
test
jg
add
mov
cmc
sub
mov
cmp
push
lret
stc
push
sbb
xchg
sub
mov
mov
xor
or
add
push
shlb
xchg
adc
push
cli
xor
jecxz
inc
loopne
pop
cmp
xor
push
mov
push
inc
clc
push
add
mov
leave
xchg
mov
and
out
test
or
add
fsubr
push
out
das
adc
mov
dec
add
or
and
loop
or
fwait
pop
jmp
jecxz
mov
loope
adcl
pop
jns
imul
insl
add
and
pop
push
cli
mov
movsl
mov
mov
cmpsl
jne
in
push
mov
xor
xchg
mov
scas
dec
sub
push
addr16
ret
test
push
mov
addb
jecxz
push
das
xchg
loop
push
icebp
xor
xor
pusha
pop
push
jecxz
insb
jg
and
pop
mov
add
add
stos
xor
add
push
ret
push
cmp
push
pop
nop
mull
in
xchg
push
fbld
mov
sbb
fnstenv
adc
sbb
mov
daa
je
loop
lahf
icebp
sub
adc
pop
xor
push
iret
lock
push
pop
jbe
dec
inc
xchg
scas
lods
fdivs
sbb
enter
mov
cmp
pop
mov
cli
mov
inc
imul
js
mov
pop
push
scas
push
xor
repnz
pop
cld
outsl
dec
out
cmp
push
xchg
pop
sub
add
inc
and
mov
sub
jle
add
jmp
cmp
les
push
mov
in
mov
or
sbb
ss
pop
add
pop
xor
mov
mov
adc
in
cmpsl
inc
gs
xchg
mov
cmc
fdivrs
mov
cmpsb
or
mov
je
cmp
or
mov
or
popf
xor
xor
jmp
mov
scas
in
xor
jmp
xchg
xchg
mov
out
mov
sahf
pop
js
pop
mov
sbb
notl
mov
jmp
sbb
mov
mov
jne
push
add
loopne
push
je
mov
popa
mov
adc
jp
ret
adc
imul
test
or
and
cwtl
xor
in
jmp
mov
scas
adc
sub
mov
sub
xor
jmp
sahf
test
mov
fdivrl
das
rcl
or
popf
jg
or
test
movsl
jmp
cmc
mov
das
add
ret
in
rcll
in
rcrl
imul
cmp
out
rclb
push
mov
push
push
jecxz
imul
jmp
in
loope
and
and
dec
pop
add
outsb
inc
cmp
or
out
jle
mov
into
or
or
fmull
pop
push
push
cs
inc
adc
decb
push
shlb
add
out
cmp
jge
push
mov
or
mov
not
xchg
jns
cmp
mov
push
sub
pop
cmp
sub
push
mov
jne
jmp
aam
cmp
mov
add
mov
add
fstpt
sbb
out
xchg
mov
jl
sub
scas
rcll
push
xor
or
push
arpl
cli
add
ret
daa
push
jl
jecxz
in
leave
jns
int3
cmp
add
call
sub
adc
and
jmp
adc
lods
out
mov
mov
and
dec
xchg
aad
adc
add
jbe
inc
push
push
repnz
insb
mov
and
xor
push
stc
ret
adc
dec
mov
inc
mov
or
push
mov
dec
add
out
push
mov
inc
add
pop
pop
jle
filds
mov
loop
or
push
mov
ds
xchg
push
jno
push
jo
aam
stos
call
icebp
jae
es
jo
or
adc
fs
ror
pop
mov
mov
or
pusha
cmp
and
push
pusha
stos
inc
lahf
cld
xchg
adc
sub
enter
xchg
inc
into
aad
sti
popa
jmp
pop
mov
pop
push
mov
cmp
jecxz
xorb
xor
cmp
jns
ds
lock
push
stos
clc
xor
shr
add
lahf
neg
sub
add
mov
ret
mov
test
sub
dec
sbb
add
pop
loope
subb
jmp
jmp
popf
mov
mov
or
jb
sub
pop
adc
mov
mov
cmp
stos
cmpsb
push
xlat
jmp
xorl
xchg
loopne
fildl
jns
cmp
lret
sub
xlat
dec
xor
popw
mov
inc
and
add
and
bswap
push
sub
repz
fldl
scas
sti
sbb
das
jl
es
arpl
pop
xchg
sub
pop
xchg
out
stos
data16
or
dec
pop
pop
mov
sti
testb
enter
ja
add
cs
xor
jl
push
pop
sub
mov
inc
jmp
or
jae
sub
xor
neg
jo
push
mov
cmp
add
jns
ds
push
jo
fildl
pop
mov
mov
aas
adc
inc
cli
sub
ja
rcrb
lods
out
jp
sbb
out
dec
add
lcall
cs
pop
xchg
add
mov
and
add
add
push
outsb
sbbb
or
xchg
add
iret
add
scas
rorl
fwait
movsl
ljmp
das
out
add
or
jecxz
pop
push
or
push
push
out
and
in
outsb
lods
push
push
mov
dec
ret
ljmp
scas
push
popa
sbb
ja
pop
cmp
and
inc
ret
xlat
and
fiaddl
idivl
cmp
cmp
das
sub
push
call
xchg
sub
arpl
insb
pop
adc
outsl
push
stos
dec
pop
lcall
and
push
mov
inc
rcpps
or
add
adc
pop
outsb
ja
xor
xchg
sbb
dec
adc
dec
xor
pusha
icebp
mov
cmp
push
push
ret
in
mov
jae
mov
cmp
aaa
pusha
pusha
stc
adc
add
das
clc
dec
push
loop
out
loopne
imul
es
and
jnp
push
cmpsb
or
mov
test
dec
jne
ds
xchg
outsl
push
mov
xchg
sbb
jmp
xor
pop
shr
sbb
sarb
sahf
sub
popf
pop
xchg
icebp
xchg
pop
add
lock
pop
cmpsb
push
push
cmp
jmp
in
pop
fildl
cmp
ja
cmp
or
pop
int
ja
push
mov
mov
xchg
ret
push
inc
cld
mov
add
orb
xlat
xchg
ror
test
shlb
push
je
push
mov
cmpsb
out
gs
or
mov
sbb
sub
fnstcw
push
nop
pop
or
push
xchg
lock
xchg
jmp
out
sub
or
pop
divb
push
fmull
mov
mov
jge
lock
imul
sbb
fldl
sahf
in
adc
iret
ucomiss
in
adc
cld
xor
rclb
hlt
mov
add
jmp
lcall
out
push
xchg
jg
repz
out
xor
push
mov
dec
add
std
lock
jae
adc
push
add
push
sbb
pop
add
out
cmp
lock
inc
dec
popa
std
add
push
xlat
push
repnz
pusha
add
sbb
in
add
cmc
sub
mov
sti
enter
or
mov
lea
mov
jle
cmp
sub
jmp
push
jmp
jle
cli
insb
js
pop
movb
loop
cld
shlb
mov
mov
lock
add
stos
cltd
mov
dec
sub
jae
push
and
jmp
inc
xor
sbb
xlat
dec
push
jmp
and
cmp
dec
mov
loopne
mov
xchg
push
sahf
push
dec
shr
insl
sbb
in
xchg
xchg
cs
in
fwait
movsb
adc
es
inc
push
push
xchg
push
orb
sub
sbb
and
jb
outsb
repnz
inc
xchg
add
add
mov
lret
js
pop
es
sbb
inc
dec
into
lret
pop
sub
sbb
mov
push
adc
ficomps
aad
sub
pop
lcall
data16
ret
movb
xor
or
jmp
push
add
pop
arpl
and
in
cmpsl
pop
popa
lret
pop
xor
xchg
sub
jbe
rolb
leave
lods
jp
inc
subb
add
mov
mov
cmc
inc
push
ja
icebp
lods
fstl
out
test
cmpb
xchg
pusha
bnd
adc
addl
mov
test
xchg
or
push
test
mov
push
add
cmp
add
aam
jmp
call
lea
aaa
mov
or
push
dec
sbb
ret
push
fstps
adcb
sub
push
inc
lock
test
outsb
add
out
movsl
jns
jmp
lods
pop
stc
inc
mov
xchg
sub
aad
mov
or
jmp
and
push
fiaddl
jns
lods
pop
shr
add
aaa
subb
and
dec
leave
inc
sub
ds
ret
push
into
popa
inc
add
push
in
loopne
cmp
cmp
jg
mov
das
repnz
shrl
xor
insb
jmp
cmpb
pop
jbe
sbbb
dec
add
dec
orb
popf
popa
shrb
pop
into
jmp
or
sbb
sbb
pop
inc
adc
push
or
adc
test
push
or
loop
inc
xchg
daa
stos
add
dec
loope
not
neg
add
imul
add
into
push
add
jmp
out
lods
in
imul
push
mov
lock
and
mov
pop
inc
cmc
pswapd
or
jo
lret
insl
call
fcompl
mov
jl
mov
add
out
xor
lret
xor
push
fbstp
push
xchg
dec
push
dec
dec
dec
or
test
mov
scas
pop
xchg
repnz
orb
pop
pop
jb
movsl
jp
mov
call
out
sbb
cmp
dec
or
jge
push
or
add
push
xor
push
xchg
call
sub
mov
dec
sub
or
out
add
mov
insb
movb
xchg
xor
rolb
sbb
mov
sub
test
push
cli
fists
movsl
and
adc
pop
into
data16
push
pop
jae
movsl
inc
idivb
fcompl
xor
outsl
xor
popf
fimuls
mov
mov
jbe
test
add
fnstenv
pop
push
mov
cli
xlat
rol
testl
inc
fisttpll
pop
sub
inc
movl
cld
out
dec
push
rcll
push
add
push
int3
in
inc
dec
ljmp
rolb
or
push
mov
mov
cmp
es
pop
loop
rcr
jle
subl
xchg
cmp
lea
lret
sbb
stc
loopne
pop
mov
std
fadds
mov
rclb
in
pop
daa
add
out
add
pop
jmp
repnz
mov
inc
mov
pop
sub
pop
pop
add
mov
mov
das
mov
cmpsl
leave
loope
pop
push
pop
mov
xorb
stc
mov
mov
leave
pusha
jmp
xor
add
or
cmp
adc
dec
adc
cmp
addl
push
outsl
add
xchg
imul
inc
xor
popf
jmp
xchg
dec
pusha
dec
push
mov
incl
xchg
lgs
into
lret
in
ret
or
push
mov
in
sub
out
adc
push
pop
sbb
pop
xlat
add
push
push
sarl
inc
dec
out
mov
jecxz
lret
pushf
stos
cld
rcrl
add
push
pop
push
rcll
xchg
push
mov
movsl
xor
cmp
popa
and
sbbb
repnz
jp
add
pop
xchg
jne
sti
pushl
pop
imul
shr
cltd
iret
push
imul
xchg
lret
out
dec
and
clc
out
jp
loop
and
mov
mov
mov
push
push
sbb
jmp
adc
xchg
push
pop
and
ds
sbb
pop
push
and
jmp
jle
push
jbe
clc
jecxz
sbb
adc
push
in
arpl
pop
xchg
incl
push
int3
loop
ss
or
or
icebp
sbb
pop
sbb
or
adc
sub
cmp
mov
loop
dec
rcll
mov
jge
and
inc
adc
notl
sahf
inc
mov
push
push
in
sub
divl
out
pop
cld
popa
mov
mov
inc
sub
jno
add
pop
or
pop
jmp
fisubrl
pop
mov
inc
xchg
cwtl
and
fiaddl
jl
add
mov
pusha
inc
lods
mov
or
mov
xlat
or
cmpsb
cwtl
cs
push
cmpsl
jo
movsl
xchg
adc
pop
push
in
jmp
or
daa
jge
mov
push
pop
into
ja
daa
or
sbb
inc
or
daa
pop
idiv
das
add
arpl
ja
nop
push
dec
jecxz
push
jmp
add
stc
int3
cmp
inc
cmp
and
mov
adc
imul
sbb
jl
loope
in
sbb
push
add
inc
dec
orb
imul
pop
mov
addr16
pushf
and
rorb
repz
dec
add
mov
or
mov
xchg
fstl
pop
dec
mov
mov
les
xchg
jmp
test
and
sbb
push
cmpsb
adc
or
push
sub
cmpsl
push
loope
cmpsl
add
sbb
inc
sub
mov
mov
notb
and
pop
or
pushf
push
dec
imul
js
cmp
fildll
jp
inc
and
mov
jmp
jg
fimuls
pop
sti
fcomi
bound
dec
jns
daa
jne
imul
add
push
xchg
push
inc
cmp
popa
and
call
pop
xor
xchg
test
imul
mov
xchg
add
push
das
test
repnz
push
adc
jmp
in
or
jge
pop
dec
pop
scas
fs
in
out
in
push
test
pop
mov
jmp
mov
test
mov
pop
cmp
mov
mov
push
or
jae
jge
fldenv
aas
push
mov
push
push
test
into
pop
inc
push
or
sub
add
cmp
push
scas
ljmp
pop
pop
sbb
stc
test
je
pop
xchg
js
pop
fucomip
rcll
fisttpll
in
dec
add
test
mov
aad
push
in
mov
pop
jge
mov
dec
adc
nop
mov
daa
xchg
pusha
adc
shll
or
jmp
fisubrs
loopne
and
xchg
ja
jo
enter
mov
pusha
cmp
and
pop
pushf
nop
add
mov
cs
gs
loopne
scas
and
lods
push
inc
xor
xor
dec
push
nop
aam
inc
out
aam
add
sbb
mov
cwtl
adc
incb
and
out
je
sbb
mov
cmp
out
jne
cli
mov
mov
push
imul
or
pop
sub
std
sbb
xchg
imul
sahf
test
div
fs
jmp
imul
pop
add
loope
mov
xchg
out
mov
xor
sbb
fistps
push
mov
add
addb
fstps
mov
and
or
adc
sbbb
inc
or
pop
subl
mov
outsb
hlt
adcl
add
or
jmp
push
sub
decl
inc
or
pop
add
add
and
pusha
push
in
add
add
add
add
fcoms
push
ret
cld
repnz
sub
xchg
push
inc
pop
jecxz
or
push
adc
cmp
divl
add
ja
jnp
or
sahf
sub
cs
test
jo
inc
ret
xlat
add
andb
push
push
push
xor
testb
sub
add
lock
addr16
stc
lcall
mov
adc
arpl
adcb
repz
pop
add
jbe
jmp
ror
jo
xchg
sbb
jg
and
pop
inc
ret
add
sbb
pop
fs
rorl
inc
cmp
xchg
dec
insl
orb
add
jmp
lods
lsl
dec
push
push
xchg
loop
push
repz
pushf
cwtl
pop
sbb
popf
int3
mov
lcall
es
pop
push
mov
jp
pop
cmp
adc
mov
adc
cmp
xorl
loop
in
test
lea
in
or
pop
sbbb
adc
cmp
xchg
mov
xor
popf
inc
jg
cmpl
imul
std
xor
pop
inc
aas
xchg
lods
ja
add
adc
sbb
push
in
add
mov
xlat
inc
ret
cmc
and
pop
sbbb
xchg
sub
scas
and
mov
sub
jmp
lods
sahf
xchg
test
add
ret
mov
fs
mov
dec
cmp
inc
ja
dec
aad
int
inc
cmpsb
test
or
mov
pop
push
pop
shr
addb
pop
insl
xor
testb
test
sbbl
cld
pop
daa
and
inc
fisttps
loope
lods
mov
repnz
xor
push
add
bound
int3
aam
mov
inc
jne
jge
and
push
xor
ljmp
xor
or
add
xlat
inc
das
add
pop
loopne
jo
sub
or
add
mov
sbb
push
dec
lret
inc
dec
add
mov
mov
adc
jl
pusha
dec
dec
loopne
cli
subb
insl
push
cwtl
pop
repnz
nop
sbb
mov
push
loop
jl
dec
pushl
sarb
xlat
jmp
aad
outsb
movsb
inc
daa
xor
sarl
add
cvtps2pi
dec
cmp
xor
and
cmp
lea
mov
adc
orb
xor
fsubs
push
sub
ja
repz
xchg
add
pop
and
xor
daa
or
add
dec
sub
cmp
inc
pusha
jno
adc
push
cmovle
mov
mov
stos
pop
pop
jmp
in
add
mov
inc
push
add
mov
jmp
lods
pop
test
and
push
rorl
cmp
inc
mov
fbstp
dec
pop
sub
insl
adc
and
pop
daa
add
ja
add
add
adc
lods
incl
aas
push
add
nop
cmpsb
rorl
push
shl
fisttpll
mov
push
mov
bound
ffree
cmpsl
shl
imul
lret
fucomp
push
scas
fbld
and
loopne
shll
jns
push
pop
pop
js
mov
jmp
sbb
push
cmp
testl
nop
push
xchg
xor
dec
jg
das
icebp
jmp
clc
mov
or
rorb
push
xchg
mov
or
jae
xor
sbb
aas
adc
xchg
push
aas
add
pop
mov
aaa
jnp
jo
inc
mov
dec
adc
int
jbe
shr
movsb
data16
dec
ds
or
xor
outsl
in
stos
aaa
mov
sbb
sub
enter
pop
or
dec
push
inc
xchg
js
or
es
sub
outsl
cmpb
add
dec
shrb
stc
popa
or
in
and
testl
test
es
ds
push
adc
mov
ds
adc
add
std
dec
sbb
leave
sbb
fsub
pusha
and
lcall
test
enter
inc
jno
insl
xchg
pop
test
lods
imul
or
fldenv
mov
or
pop
in
arpl
adc
sti
adc
fcmovu
leave
lret
jp
dec
dec
sbb
sub
xchg
fisttpll
stc
push
push
and
mov
xchg
aas
daa
testb
mov
mov
addr16
push
in
fsubrs
add
add
int
out
jns
ds
or
movd
mov
mov
faddl
mov
andl
or
icebp
inc
jns
push
in
aad
fimull
js
or
sbb
inc
test
jg
fldcw
pop
lahf
adc
mov
outsb
jg
adc
or
aas
imul
scas
cltd
xchg
jmp
mov
sub
push
jne
jmp
mov
sub
mov
push
push
lds
test
sub
pop
adc
sbb
cmc
sub
or
jno
jbe
pop
xorb
mov
sub
push
mov
xchg
jmp
jno
jmp
pop
adc
xchg
hlt
pop
in
std
jmp
lock
pop
ret
xor
and
or
aas
mov
xlat
mov
fstl
mov
jns
filds
cmp
xchg
mov
mov
sub
out
loope
jle
sub
enter
mov
push
add
pop
ret
fdiv
sbb
pushf
xorb
int
mov
or
unpcklps
pop
das
movl
pop
cmovo
test
lock
and
insl
fildll
lret
xchg
jle
sub
pxor
dec
sub
pop
add
adc
roll
push
aaa
rcl
xchg
mov
push
cmpsb
sub
clc
dec
cwtl
inc
fadds
repz
pop
aaa
mov
sbb
sub
pop
adcl
sub
cs
push
or
jecxz
in
test
out
in
repz
add
push
pop
idivl
dec
mov
jl
in
jl
das
js
cmc
mov
loope
xor
mov
xor
loope
pop
jbe
push
pop
lods
xor
pop
test
mov
ds
test
fdivs
push
ja
mov
divb
add
fnstsw
test
push
loopne
add
pop
jmp
fs
dec
jbe
cmp
dec
sub
into
add
adc
in
jmp
dec
sub
mov
cmpsl
es
out
cltd
aad
ret
test
cmp
adc
scas
repnz
insl
jno
xor
jp
adc
and
sub
stos
incb
adc
dec
ret
jmp
ret
lahf
pop
ret
jb
push
jmp
loope
sub
and
mov
and
pusha
addr16
dec
pop
stc
andl
or
or
and
pop
xchg
sti
outsb
aaa
adcl
in
lods
pop
enter
add
inc
repz
das
cmp
mov
jb
push
clc
mov
cwtl
aaa
jmp
mov
push
jl
je
and
sub
pop
push
ret
adc
jmp
popf
hlt
js
jmp
call
xchg
inc
movsb
push
int3
jb
mov
mov
addr16
push
imul
sbbb
dec
lret
jp
adc
push
xchg
mov
push
sub
shr
cmp
or
test
xchg
je
mov
push
jmp
repnz
mov
jg
cltd
jl
cmp
jne
daa
cmp
shrb
ret
dec
dec
std
pusha
push
sbb
add
or
outsl
sub
shlb
enter
add
inc
pop
cmp
dec
out
fs
add
jmp
pop
pop
lea
sti
imul
fmuls
fisubrs
and
cmp
push
lret
mov
or
add
sbbl
shr
mov
or
xchg
clc
dec
subl
add
es
inc
pusha
cmp
dec
xor
or
lock
and
push
jmp
daa
add
fnsave
pop
push
pushl
mov
jmp
lea
dec
cmp
movsl
inc
jnp
jecxz
jne
push
ffree
jmp
mov
jb
cmc
pop
outsl
mov
mov
clc
clc
dec
jmp
cltd
and
movsb
mov
int
mov
in
xor
or
pop
push
stc
popa
push
push
sti
mov
shl
add
inc
xor
rclb
std
pop
dec
lret
pop
es
rcll
out
ss
push
add
mov
enter
insl
sbb
push
negb
sbb
rol
test
add
dec
cwtl
jnp
roll
fs
add
ljmp
inc
imul
repnz
std
sbb
push
inc
and
punpckhdq
aad
cmc
xchg
hlt
xchg
mov
xor
rolb
lret
add
and
icebp
shlb
mov
adc
add
adc
xchg
frstor
out
mov
test
call
add
inc
jle
stos
mov
dec
or
in
pop
push
mov
mov
jle
lock
mov
sahf
mov
pop
cmp
jg
lods
and
jne
movsl
add
pop
in
push
pop
xchg
mov
add
sbb
pop
lahf
sbb
mov
add
pop
or
add
and
into
cld
sub
jp
data16
pop
push
lods
add
jmp
push
ja
add
sub
or
and
mov
push
ret
xlat
pop
push
imul
add
test
mov
orb
pop
cld
addb
push
add
cmpsb
lretw
out
loop
test
push
and
jbe
loope
sbb
xor
mov
add
add
jns
sub
maxps
fmulp
test
mov
or
push
or
movsb
xor
lret
je
sbb
add
mov
xchg
fwait
out
fstl
pop
stos
push
pop
dec
xchg
xor
in
push
mov
inc
push
add
push
outsb
and
jno
inc
push
xchg
test
add
data16
sarl
inc
in
test
ficompl
pop
cwtl
pop
popf
pop
adc
fistpl
mov
add
xor
xchg
fsubrl
aam
mov
dec
sub
push
out
xchg
ss
cmp
psubsw
mov
push
and
xor
xlat
mov
and
popf
pop
xor
pop
int3
rorl
mov
stc
add
int3
pop
pop
scas
mov
jns
xor
and
cwtl
mov
inc
adc
push
add
mov
test
inc
sub
pop
rorb
fnstenv
pop
sbb
stc
adc
movsl
pop
push
bound
cmc
icebp
shlb
sub
clc
loope
jl
add
scas
mov
add
ret
mov
push
fnstsw
sbb
push
mov
and
sub
nop
xchg
sub
lock
dec
jp
dec
jmp
cmc
xchg
es
inc
fabs
jne
lahf
in
or
pop
ljmp
jmp
sub
lret
or
push
aas
cmp
addr16
pop
or
in
notl
jg
out
dec
pop
push
les
or
adc
and
dec
pop
in
sti
dec
push
xor
sbb
rol
jecxz
jmp
xlat
out
or
loopne
sbb
daa
loop
push
sbb
dec
mulb
loop
enter
adc
pop
sti
jns
xor
roll
push
jle
aaa
repnz
inc
loope
or
and
and
dec
push
popf
cmc
in
into
jg
dec
stos
mov
or
push
lret
add
sbb
xor
mov
sarl
out
fsubrs
add
inc
es
inc
movsb
inc
xor
sub
cmp
mov
imul
xchg
in
fstpl
push
add
xor
dec
cmp
iret
dec
enter
out
adc
stc
mov
sub
sub
cs
dec
or
mov
or
and
in
aam
pop
ret
mov
dec
sub
add
push
mov
xchg
pop
loope
adc
ds
fdivr
pop
dec
and
push
scas
inc
xor
inc
sbb
or
sub
mov
and
mov
out
cmp
rcll
flds
mov
leave
in
push
push
adcb
shll
pop
or
rcrl
jl
lds
leave
sbb
dec
ds
mov
test
repnz
int
add
dec
and
out
push
outsl
push
cmp
add
mov
push
jmp
mov
into
mov
lcall
jne
test
push
adc
repz
stos
jle
xor
cmp
xchg
xor
pop
cmp
jg
sarl
or
clc
cmc
sub
and
flds
dec
mov
int
jp
pop
sub
testb
in
inc
mov
mov
and
sbb
sub
pop
adc
cli
push
push
inc
into
cmp
cwtl
inc
push
imul
sub
daa
test
dec
aad
cmp
pop
movsb
push
pushf
or
adc
push
shll
push
dec
stos
add
cmpsb
dec
scas
pusha
insb
in
sbbb
or
xor
xchg
cmp
push
dec
xchg
mov
inc
dec
push
xchg
inc
dec
and
adc
xchg
jo
and
or
lahf
call
pop
inc
and
inc
sub
pop
jb
cs
sub
call
sahf
add
dec
and
mov
sti
cltd
pop
aad
inc
add
adc
scas
pop
xsaveopt
inc
and
aas
out
pop
ljmp
and
xchg
dec
sub
addl
or
call
dec
fld
sub
lds
movsl
jle
pop
movsl
test
xchg
add
xlat
jg
dec
int3
stc
rcrb
lcall
dec
adc
xor
mov
mov
stc
jecxz
nop
adc
cmp
sub
sub
and
out
imul
lret
insb
movsl
adc
pop
sbb
subb
push
xor
cmp
push
adc
pop
sbb
gs
inc
add
mov
insb
cmp
ret
fld
shll
addb
out
negl
adc
jl
add
push
mov
mov
loopne
cld
rorl
xor
xchg
out
mov
lret
jl
pop
mov
mov
sbb
cltd
sbb
dec
add
mov
sbb
adc
xor
outsb
js
mov
addb
xchg
xchg
dec
cmp
add
ja
negb
lea
std
pop
dec
out
jl
adc
push
and
add
pop
ret
push
testb
and
popa
out
xor
cli
add
mov
gs
mov
jge
pop
je
out
sti
push
addb
sub
push
shr
mov
lret
ret
jb
cmc
and
fcomi
jmp
or
sub
pop
or
je
dec
cmp
pop
and
stos
out
test
sbb
les
pop
and
adc
sub
clc
mov
xor
add
push
pop
jg
inc
jb
adc
rclb
shlb
xor
out
decb
push
mov
dec
jns
in
xchg
and
mov
in
imul
or
stc
cmpb
push
push
in
divb
adc
out
adc
aaa
dec
sub
and
fstpt
inc
sub
xlat
lret
or
out
jge
aas
out
movsb
iret
das
and
pushf
imul
sbb
dec
cmp
loope
mov
or
out
ja
sub
in
push
jnp
mov
cmp
or
jmp
or
pusha
loop
lahf
pop
and
adc
cmc
aad
aaa
subl
out
dec
pop
ljmp
cmovo
xor
filds
orw
xchg
imul
push
inc
mov
fstpl
mov
cmp
out
enter
dec
stos
pop
mov
popf
jnp
add
test
add
loopne
pop
xor
pop
leave
aam
mov
ss
mov
jmp
in
ljmp
add
or
int
pop
add
lret
pop
sub
pop
movsb
in
sbb
neg
mov
test
xor
mov
jl
mov
popa
js
lret
cvtpi2ps
cmp
in
pop
mov
pop
xchg
js
fisttpll
ja
sti
fs
pop
jae
mov
pop
xor
call
hlt
sub
pusha
inc
in
lret
cmp
dec
and
sbb
roll
ret
xlat
sbb
lahf
pop
add
fs
sub
and
xor
fwait
stc
or
pop
pop
mov
inc
rcll
sub
mov
ror
out
jg
xchg
or
push
xlat
das
sbb
adc
and
mov
xor
jmp
jmp
mov
in
jo
lahf
or
mov
pop
fcompl
push
mov
mov
mov
sbb
inc
mov
or
daa
loop
mov
push
stos
sbb
orb
and
mov
push
pop
mov
push
shl
and
dec
pop
add
push
cltd
int3
mov
jl
lds
mov
in
jmp
pop
mov
push
imul
into
mov
adc
fwait
adc
divb
jp
or
jp
jg
mov
push
and
xor
jno
popa
cmp
and
imul
pushf
ret
imul
aam
out
loope
jle
sub
jle
sub
mov
and
add
fcomps
negb
lods
repnz
xchg
mov
and
mov
add
mov
lds
xor
xlat
mov
subb
scas
enter
push
adc
lds
les
lret
add
aas
out
pop
push
inc
pop
mov
xor
pop
mov
mov
mov
ss
aad
test
mov
sbb
fstl
sub
jp
repnz
divb
mov
lahf
fmuls
jl
in
icebp
or
dec
xchg
push
cmp
ret
mov
xor
inc
xchg
and
pop
inc
std
cltd
xchg
adc
cmp
add
loop
mov
je
fcomps
inc
add
jg
mov
dec
bound
mov
add
cli
add
xor
mov
out
cltd
and
jmp
push
xlat
arpl
jns
jl
les
arpl
ds
sar
push
loope
jae
push
pop
adc
fcomip
mov
xor
and
out
roll
lret
insb
and
push
mov
stos
stc
jo
or
push
xchg
mov
cmp
mov
loopne
inc
push
dec
jo
xchg
fiadds
add
cld
add
repz
in
sahf
inc
xor
ljmp
das
shrb
mov
sub
jmp
jmp
mov
jne
lret
sbb
ljmp
cmp
push
das
out
inc
js
push
loopne
xchg
adc
and
and
ljmp
pusha
sub
sub
bound
repnz
popa
or
push
ret
outsl
sub
inc
or
das
inc
fcomip
cmp
xor
cli
mov
xchg
cmpsl
js
adc
sbb
gs
or
mov
rclb
lods
jnp
xor
test
add
mov
mov
out
mov
push
sbb
lret
cmpsl
popa
mov
ja
push
or
adc
mov
leave
sub
mov
xchg
and
pop
add
push
add
mov
jo
mov
es
add
lods
dec
or
add
or
or
movsb
mov
push
push
lret
shrb
xor
lds
add
mov
shrb
leave
data16
add
mov
je
loope
push
push
xchg
jecxz
cli
sub
ret
aam
add
inc
inc
fstl
pop
fstl
lods
inc
jp
loope
mov
or
jl
call
fs
adc
mov
leave
adc
into
test
in
or
shr
repnz
or
cs
dec
pop
sub
cmp
pop
push
icebp
rorl
mov
call
and
mov
xchg
xor
push
pushf
mov
sub
or
adc
push
push
cld
mov
mov
lret
daa
add
stc
in
xor
or
pop
test
push
loopne
pop
inc
andb
adc
and
xchg
cmp
mov
cld
xchg
inc
mov
dec
push
xchg
or
dec
add
pop
insl
lret
xchg
push
or
adc
cmp
insl
push
shr
sub
addr16
lds
data16
add
pop
popf
pop
add
pop
arpl
push
jnp
dec
adc
ljmp
loope
stos
xor
mov
mov
push
push
or
inc
sub
sbb
ds
sbb
and
pusha
or
inc
fiadds
idivb
push
inc
sbb
sbb
mov
or
pop
xchg
xchg
rorb
int3
sub
inc
or
ljmp
fdivrl
sbb
andb
jmp
mov
outsb
mov
icebp
int3
cmp
dec
mov
movsl
adc
mov
decb
push
jg
jp
rorl
sbbl
adcl
out
xor
shr
push
push
mov
or
inc
pop
shl
in
mov
xchg
test
push
dec
cli
insb
sub
mov
or
cmp
mov
jmp
dec
pop
xchg
xor
mov
dec
testb
cmp
je
jmp
ret
psubw
ja
fstps
and
stc
or
push
pusha
jmp
mov
cmp
pop
das
mov
dec
aad
push
push
imul
cmpsb
into
aam
jo
pop
idiv
jnp
int
sti
xchg
hlt
enter
pop
mov
jo
or
jmp
or
cmpsl
push
cmp
cmpsl
out
and
pop
and
xor
out
les
mov
add
mov
inc
test
mov
xchg
lock
xlat
inc
jo
cmp
bound
mov
push
repz
jmp
push
add
xor
outsl
pop
dec
xorb
xchg
fimull
sub
mov
cli
pop
lods
inc
jle
pop
or
xchg
fiaddl
into
mov
adc
repnz
loopne
dec
pop
in
and
xchg
out
xor
outsl
add
and
aas
enter
mov
mov
icebp
int3
and
add
pop
and
fldcw
adc
sbb
xor
sbb
push
int3
test
add
adc
jmp
jns
mov
loopne
and
dec
fisubs
xor
sbbb
pop
int
pusha
icebp
loope
daa
cld
leave
ficoms
testl
or
cmp
mov
adc
mov
jmp
push
mov
jle
out
cmp
rorb
cmc
jmp
pop
jecxz
ljmp
and
mov
push
movsl
pop
jp
cmp
shr
ficompl
add
fsubl
mov
shrl
leave
loop
dec
or
jg
pusha
and
sub
jle
imul
xlat
inc
test
jb
loope
lods
push
add
sbb
fneni(8087
dec
and
into
loopne
push
pop
jmp
add
jbe
add
inc
pop
push
pop
icebp
repnz
sub
les
pop
jge
addl
imul
or
les
adc
jl
pop
add
and
ljmp
pop
sbb
pop
pop
cltd
push
jmp
cli
fnstsw
add
cmp
jmp
inc
adc
ret
cmp
lahf
push
mov
loopne
xor
adc
pop
sub
imul
jmp
xchg
sarl
adc
out
loop
mov
mov
sti
shl
not
jmp
leave
dec
loope
out
cmp
or
cmpsl
add
sub
bound
cmc
jle
pop
ret
daa
pop
adc
and
jmp
push
or
repnz
jmp
inc
fnstsw
and
fldl
int
pop
push
sbb
lock
or
adc
mov
sbb
sub
addr16
or
adc
push
clc
das
or
and
pop
sbb
js
push
pop
dec
or
adc
insl
mov
scas
pop
js
xor
xchg
dec
cs
outsl
lahf
add
jbe
and
push
jnp
add
add
push
pop
je
daa
pop
mov
adc
cmpsl
dec
adc
add
scas
mov
daa
push
in
jmp
pop
xlat
push
push
and
std
jne
sahf
cmpsb
cwtl
push
cmpsb
jnp
dec
mov
adcb
loope
mov
pop
enter
dec
mov
jecxz
jne
and
sub
out
cmp
inc
adc
sub
mov
outsl
or
leave
inc
pop
lock
or
scas
cld
push
mov
cmpsl
imul
or
jne
rolb
mov
cmp
add
call
pushf
cld
dec
jmp
jmp
xchg
jo
jmp
shl
cmp
jne
stos
add
mov
pop
movsb
dec
loopne
mov
xor
jo
mov
ret
xchg
push
sbb
jg
adc
out
adc
xor
into
jmp
mov
jbe
add
les
dec
push
outsb
inc
mov
add
sbb
dec
inc
jmp
jp
rcrl
test
pop
out
dec
lahf
mov
dec
lods
dec
and
iret
nop
push
xchg
add
and
sub
rcll
and
ret
outsb
and
mov
and
pop
pop
mov
mov
repz
in
pop
hlt
in
mov
sub
pop
jne
fmull
pop
pop
decb
lret
dec
push
mov
push
fiaddl
add
jmp
add
pop
inc
cmp
outsb
aas
sbb
xchg
jmp
in
in
add
cld
not
xor
in
icebp
rcll
adc
negl
in
outsb
sub
into
lahf
in
dec
add
rcrl
neg
add
dec
in
es
test
add
cmpb
xor
adc
inc
sub
push
sbb
mov
xlat
pop
fs
or
daa
push
add
pop
fwait
idivl
mov
push
stc
addb
rcrl
mov
test
jnp
mov
jmp
push
lds
bts
add
adc
jmp
cmp
mov
pop
faddl
sbb
add
ljmp
fsubrl
push
jmp
das
mov
shr
mov
lcall
int3
mov
cli
popf
mov
dec
pop
loop
leave
push
add
sbb
mov
jl
xchg
dec
add
ss
sbb
mov
xor
inc
popf
cli
pop
call
arpl
push
mov
push
inc
mov
xor
arpl
mov
pop
lret
and
pop
inc
cli
je
sub
pop
xchg
rol
sbb
fnstenv
push
or
jmp
aam
dec
fdivr
daa
jno
outsb
and
pop
repnz
mov
push
adc
popf
subb
dec
cmp
js
int
or
jg
dec
xlat
or
es
cmpsb
push
push
daa
mov
xlat
shrl
and
lock
in
pop
decb
or
dec
out
jae
jecxz
add
mov
sarb
push
cmp
mov
cmp
stc
in
call
mov
mov
cmp
lret
inc
sub
lods
sarl
mov
sub
mov
jne
sub
xchg
push
lcall
sbb
push
cli
movq
sbb
lahf
repnz
add
mov
push
cwtl
push
push
repz
scas
psllq
cmpsb
push
ja
cmp
jnp
mov
xchg
out
aam
lret
insb
popa
dec
and
mov
sub
push
jmp
sbb
daa
pop
mov
sub
rolb
xlat
aas
pop
pop
cmc
and
dec
cmp
jmp
repz
inc
dec
jb
push
xor
mov
push
xchg
xchg
outsb
out
sub
lods
xor
dec
leave
sti
add
xor
adc
fnstenv
insl
cld
push
sahf
cwtl
mov
call
dec
jne
cmp
aad
dec
pop
dec
xchg
inc
mov
fnstenv
inc
ficoms
xor
ret
mov
fildl
or
enter
mov
adc
or
push
mov
dec
das
add
cld
aas
lock
push
mov
cs
movsb
pop
imul
pop
aad
das
scas
push
daa
ja
decl
bnd
or
aas
or
sub
and
mov
sub
out
add
into
adc
or
xor
xor
rol
or
push
jne
popf
sbb
mov
bound
imul
or
sbb
jnp
jbe
xchg
cwtl
xchg
rcll
push
daa
xchg
xor
incl
rcl
das
push
xchg
cmpsl
jbe
push
mov
ret
icebp
ret
repnz
push
add
neg
add
xchg
outsb
out
mov
push
popf
das
insb
cmp
cmp
cmp
out
push
pusha
inc
ljmp
inc
shrl
xlat
inc
mov
cs
or
add
addl
insb
jmp
mov
xchg
xor
stos
or
call
push
mov
push
jl
scas
andb
stc
or
pop
dec
dec
xor
lods
test
sub
and
aam
pop
jg
and
mov
jmp
sub
mov
lahf
pop
or
push
shlb
les
out
movsb
ljmp
ja
cmp
mov
sub
sub
arpl
push
jmp
incb
push
jmp
stc
out
scas
push
add
ljmp
mov
or
adc
fcomps
jmp
mov
and
push
push
cwtl
js
cmp
adc
inc
hlt
mov
push
mov
enter
sub
xchg
xlat
pop
aad
mov
popa
imul
jne
cmp
mov
mov
xor
fsts
inc
dec
loope
inc
out
jns
fnstenv
pop
repnz
pop
inc
or
or
lea
and
cli
std
les
imul
jbe
sub
or
jmp
lods
test
leave
stc
aaa
mov
jmp
lock
fbld
or
pop
enter
repz
fcmovu
sbb
mov
jg
jp
jns
fsubs
pop
cmp
push
mov
pusha
mov
pop
jmp
dec
outsl
imul
cltd
jae
push
ljmp
int
outsl
lds
adc
mov
xchg
push
cmpsb
push
xchg
pop
mov
fimuls
pop
add
lods
insb
stos
xchg
mov
xchg
repnz
sub
mov
lcall
ds
mov
cmp
clc
sub
es
repnz
rolb
mov
or
mov
jbe
daa
push
sub
popa
rcll
xchg
iret
add
pop
adc
inc
data16
test
mov
loope
inc
dec
xor
lods
orb
sbbl
out
sti
jg
ja
mov
aam
jns
imul
cmp
mov
push
and
jp
std
pop
jmp
push
insb
xchg
popa
add
mov
and
test
mov
add
bound
add
jne
cli
jbe
push
addl
cld
call
cmp
jns
aas
mov
arpl
in
out
mov
imull
jmp
js
dec
dec
add
mov
subb
sub
idivl
fldl
add
pop
loope
add
add
ljmp
in
pop
xchg
inc
pop
pushf
das
mov
ret
or
nop
fnstenv
and
pop
cwtl
mov
pop
fs
subl
mov
mov
push
add
or
jmp
sti
movsb
push
insl
push
hlt
add
mov
jp
xor
pop
xor
in
les
pop
push
loop
fwait
out
lcall
ljmp
neg
push
shl
mov
push
out
imul
scas
rcrl
cld
stc
push
mov
loop
out
add
xor
jo
loopne
mov
add
pop
pop
dec
es
sbb
add
sbb
add
adc
pop
push
ret
push
js
jl
loopne
mov
pop
shrb
and
push
cmp
mov
cmp
xchg
sub
or
adc
in
add
pop
xchg
loop
loope
sti
out
push
clc
jae
outsl
add
jnp
push
pop
push
popf
pop
adc
jb
and
hlt
sti
lret
scas
mov
sub
lcall
insb
fcomps
loopne
and
xchg
jl
loop
inc
ror
mov
stos
int
adc
pushf
pushf
push
pop
lods
mov
ss
mov
cmp
xchg
dec
in
cli
adc
lret
int
inc
add
inc
aaa
and
pop
xchg
lods
jg
out
mull
jmp
add
jle
and
mov
inc
and
in
enter
add
cli
lret
mov
xchg
scas
adc
add
imul
das
adc
push
inc
pushf
sub
pop
mov
sub
cld
sub
xchg
out
popa
inc
add
cli
lea
sbb
adc
sbbb
push
dec
push
pop
pop
loopne,pt
adc
nop
pop
xchg
mov
dec
sub
pop
fs
out
rorb
fstpt
out
pop
sbb
cld
xor
js
clc
mov
pushf
hlt
addr16
xchg
ds
es
pop
pop
add
xchg
jno
dec
fidivrs
lcall
mov
imul
dec
mov
out
fwait
ret
mov
xchg
lret
rclb
and
test
loopne
and
dec
mov
sub
jmp
and
push
adc
adc
xor
sbb
xchg
cmpsb
aas
jmp
push
xchg
fcomps
fdivl
dec
shr
popa
pop
into
pop
dec
push
enter
jp
add
or
sub
mov
ret
daa
pop
sub
test
sbb
sahf
mov
fldl
sbb
adc
push
or
xchg
add
jmp
jno
inc
push
into
filds
mov
in
add
jmp
inc
jg
push
rclb
pop
push
mov
add
push
inc
out
and
jge
add
pushf
divl
insl
pusha
movsb
mov
dec
sub
stc
popf
repnz
sub
ret
dec
test
sub
cmc
inc
movsl
sbb
test
sahf
xchg
mov
shl
inc
jbe
daa
push
dec
push
int3
rcrb
pushl
and
or
sti
outsb
jmp
mov
add
aad
sbb
inc
rol
adc
mov
pop
pop
orb
push
das
dec
xchg
push
popf
enter
jge
repnz
jp
and
sub
mov
sbb
cmp
xor
loop
add
sbb
pop
subl
or
jmp
ret
in
push
mov
lahf
push
xor
sub
enter
dec
testl
imul
out
or
sbb
arpl
sbb
add
and
cmp
js
inc
sti
push
jl
fldenv
stc
mov
es
adc
adc
shll
push
and
mov
pop
jge
cmpsb
movsl
std
inc
and
inc
xchg
jle
mov
push
push
les
push
push
or
stos
ficoms
push
push
jecxz
bound
pushf
dec
test
pop
xchg
psubusb
mov
cmpsb
mov
pop
call
gs
stos
cwtl
and
sti
xor
outsl
jns
pop
in
mov
inc
push
cs
xor
xor
ja
push
loope
pop
or
mov
mov
insl
jbe
mov
push
mov
sub
gs
movsb
aad
mov
imul
mov
sub
add
jns
or
js
clc
dec
or
pop
nop
sbb
loop
add
or
pop
jmp
inc
jnp
pop
int3
push
pop
adc
lds
push
out
repnz
lret
push
fdivs
inc
shl
adc
cmp
or
pop
loop
sbb
xchg
pop
mov
test
mov
mov
std
andl
xor
mov
push
dec
popf
push
and
or
cmpsb
mov
adc
jbe
call
mov
jmp
push
pushf
addr16
popf
push
xor
inc
imul
sbb
cmp
rcll
movsl
rcrb
das
lcall
gs
imul
daa
inc
sbb
test
or
je
out
or
mov
repz
repnz
adc
loopne
jge
stos
mov
daa
push
mov
adc
dec
mov
sub
adc
test
rclb
mov
mov
or
mov
add
sbb
subb
sar
sub
je
mov
push
mov
xor
lret
mov
cmp
fnstcw
ds
int
jp
icebp
cmp
push
xchg
push
mov
jns
test
inc
lret
fisttpl
clc
adc
and
and
aas
out
mov
rorb
in
xor
sub
imul
dec
lret
pop
adc
sbb
sbb
mov
fst
jp
cmp
inc
adc
mov
mov
add
jmp
out
rcrb
or
jne
bound
push
or
in
daa
pause
in
js
push
sub
pop
inc
add
bound
add
imul
mov
push
inc
faddl
je
add
std
mov
ljmp
in
or
pop
jno
push
test
or
jmp
pop
push
push
sub
cmp
lahf
repz
cmpsb
test
xchg
adc
stc
pop
std
mov
jmp
hlt
add
add
out
cmp
pop
sbb
inc
movhps
add
push
cmp
pop
cld
orb
pop
scas
pop
cmc
mov
push
std
and
jmp
inc
dec
xor
fnstsw
pop
jmp
addb
add
shr
add
pop
not
push
jmp
inc
mov
in
std
pop
jecxz
daa
mov
mov
push
adc
or
add
jmp
imul
scas
and
push
xor
js
filds
int3
testb
mov
mov
pop
int3
divl
mov
pop
inc
call
xchg
add
popf
aad
icebp
pop
mov
ds
sub
mov
sub
out
scas
sbb
push
mov
jmp
cmp
xchg
jge
sbb
dec
and
push
sbb
cmp
mov
xchg
int3
fisubl
xor
cmp
pop
adc
or
inc
aas
xor
adc
add
xor
fildll
ljmp
pushf
fsubrs
cli
jo
xchg
fdivrl
aam
les
push
mov
push
inc
mov
jmp
daa
in
sbb
je
icebp
mov
push
dec
data16
sbb
testb
dec
dec
xor
jle
rcll
dec
pop
std
repnz
inc
and
lahf
inc
aam
pop
add
daa
ret
jg
je
shl
mov
outsl
sub
mov
inc
popf
hlt
lea
adc
aaa
and
pcmpgtb
xor
mov
add
gs
sub
loope
subb
imul
xor
and
inc
mov
sbb
xor
xlat
pop
addl
or
add
cs
sbb
adc
sub
jmp
push
jg
cmp
cltd
pop
test
mov
sub
lahf
adc
and
pop
xchg
cmp
sbb
dec
add
pop
sub
rolb
dec
pop
jmp
adc
sub
pop
in
cmp
mov
imul
add
movl
mov
jo
cmp
pop
ja
cs
call
jge
mov
mov
inc
mov
xchg
sub
pop
add
stc
rorl
mov
pop
daa
sub
sbbb
jnp
mov
push
cmp
mov
xlat
lods
add
in
out
popf
clc
rclb
pop
data16
and
bound
add
cltd
pop
xchg
fdivp
sbb
adc
cmp
jp
xchg
clc
sub
int3
mov
pusha
in
in
int
loop
sub
sub
cli
sub
lods
adc
cmpsb
sub
movsl
push
push
scas
cmp
push
inc
push
sub
enter
push
pop
mov
or
push
cmpsl
lahf
and
mov
mov
adc
mov
daa
repz
lcall
lahf
jl
jb
dec
pop
or
cmp
xlat
std
imul
xlat
cmpps
push
scas
adc
addb
std
add
adc
mov
pop
or
jecxz
jmp
xchg
nop
mov
jl
add
dec
shl
pusha
mov
or
add
jg
dec
sub
cld
jp
lret
cmpb
mov
xchg
imull
adc
pop
movsb
pop
inc
pusha
fcompl
push
xchg
jo
add
scas
cs
iret
mov
xchg
xchg
ret
fwait
ds
in
in
mov
sub
mull
cmovge
jo
in
sub
pop
sbb
test
or
nop
sbbl
sub
jmp
and
push
ret
sahf
jo
mov
add
add
xor
and
jnp
rcrb
add
cwtl
pop
pop
jecxz
xorb
xor
push
bound
hlt
jbe
std
push
adc
rcll
or
inc
sub
repnz
es
pop
mov
pop
repz
and
or
sub
fstpt
jmp
adc
cld
add
in
push
cmp
nop
bound
dec
mov
iret
mov
cmp
adc
jmp
lods
cmp
jmp
cli
mov
dec
adc
gs
dec
sub
jg
push
ficoms
xor
jb
xor
pop
nop
sbb
inc
push
jns
aas
les
push
stos
jo
mov
lahf
adc
imul
cs
pop
cmp
ss
addb
add
or
daa
jbe
and
adc
jle
adc
sub
jp
test
push
pop
jle
sub
sbb
or
dec
add
sub
push
xor
je
mov
jne
jl
cmc
inc
movsb
mov
dec
push
in
sub
mov
mov
icebp
push
inc
jo
rorb
aaa
push
push
mov
dec
add
aam
cmp
pop
and
pop
sbb
mov
js
mov
fstpt
popf
je
or
out
jge
lret
lds
mov
test
cwtl
in
lock
dec
adc
adc
pop
xchg
out
jmp
sbb
pop
dec
pushl
sbbb
jge
adc
flds
sub
lods
or
sub
jmp
jbe
pop
in
roll
lea
dec
or
and
push
repz
sub
push
enter
fstl
mov
addl
or
pop
sub
fsubrs
dec
cmp
xchg
cmp
lret
or
add
sbb
std
insl
add
mov
inc
scas
fcoml
aad
call
xor
mov
dec
stc
nop
movsb
mov
gs
pop
dec
inc
adc
or
out
out
inc
cmpsb
pusha
push
mov
and
leave
xor
sbb
mov
sbb
pop
scas
sub
or
dec
push
cmp
pop
fwait
insl
jl
mov
out
repz
dec
add
dec
jmp
add
loope
nop
add
je
adc
out
adc
mov
inc
dec
andb
in
inc
inc
adc
neg
inc
xchg
add
ss
mov
or
testb
jno
js
sarl
adc
les
scas
push
xchg
cli
add
jmp
xorb
shlb
popa
add
fadds
outsl
repnz
pop
dec
dec
mov
push
adc
pop
and
sbb
pusha
jecxz
cs
dec
and
xlat
jmp
or
xor
jmp
mov
fadds
mov
mov
std
enter
mov
sub
jg
xor
jge
inc
outsb
faddp
jb
adcb
adc
push
xor
push
stos
push
sbb
cmc
adc
scas
and
push
xchg
and
jns
pop
arpl
loop
aad
pushf
or
add
jae
pop
or
xor
pop
xchg
inc
and
or
movsl
push
sti
pop
addl
mov
pop
inc
shlb
jmp
pop
sbb
rcl
orb
js
and
sbb
xor
jp
xchg
sbb
int
das
lods
leave
or
sbb
mov
and
or
cmp
xchg
daa
push
jns
jmp
rcll
push
mov
push
pop
sbbb
mov
mov
xor
and
adc
jne
xor
mov
jo
mov
rclb
cld
pushf
aas
popf
frndint
adc
jge
lahf
adc
xchg
sbb
cmpb
mov
or
jmp
outsl
sarb
arpl
sbb
notb
mov
subb
jb
aam
fiaddl
cli
mov
mov
jbe
stos
pop
xorl
push
adc
push
test
sbb
fldenv
ret
sbbb
jl
dec
je
xchg
inc
scas
bnd
or
ds
adcb
test
inc
or
jg
jbe
inc
adcl
xchg
jb
cmc
sub
inc
pop
sub
sarl
mov
jns
dec
xorb
clc
xlat
push
cmpsl
cwtl
pslld
sub
stos
inc
add
or
pop
inc
mov
cmp
js
xchg
rcr
pusha
mov
shr
pop
or
mov
loopne
pop
xor
test
das
adcb
int
jae
roll
mov
mov
cltd
cmp
sti
pop
dec
mov
xor
xchg
or
inc
and
mov
ds
stc
sub
dec
adc
insb
das
pop
ja
push
dec
stos
inc
cmp
add
popf
std
push
mov
sub
leave
and
xchg
push
cli
gs
add
jle
pop
pop
loope
xor
mov
inc
mov
add
push
lock
adc
push
sbb
jae
imul
outsl
popa
aas
push
dec
sub
sahf
cltd
stc
jmp
sub
icebp
mov
add
incl
jne
jns
cmc
and
jecxz
sbb
mov
dec
add
es
in
or
cwtl
jmp
dec
imul
aam
pop
cmpl
cltd
movsb
jno
push
fisttps
lods
jge
mov
push
arpl
lock
sbb
push
stos
hlt
push
stos
sub
adc
lret
imul
lods
and
mov
sti
mov
jl
rcll
pushf
sbb
sub
mov
sub
hlt
mov
ret
xor
mov
jmp
inc
push
test
jo
and
dec
add
adc
mov
ja
push
push
leave
hlt
fimull
int3
adc
inc
cltd
mov
push
out
shlb
mov
in
adc
ret
mov
in
add
rorl
cmp
push
sub
jae
mov
outsl
inc
pop
adc
pop
test
scas
loop
into
mov
jo
push
sbb
cwtl
faddl
push
mov
xlat
pop
popf
hlt
das
jle
and
mov
or
push
add
pop
lret
gs
sbb
xchg
xor
xchg
adc
and
mov
pop
adcl
xchg
aad
ljmp
enter
sub
cmp
daa
fstpl
add
sub
sahf
push
adc
push
xlat
dec
aaa
adc
jmp
imul
jne
faddp
xchg
push
add
sub
xlat
out
push
pop
cltd
mov
push
push
rcll
inc
out
pop
push
and
or
mov
pop
and
outsb
flds
mov
lahf
nop
mov
scas
xorb
xor
or
jmp
add
mov
push
sub
aas
dec
add
dec
or
mov
inc
dec
push
mov
jo
cmc
movsl
shrl
ja
arpl
into
xchg
or
fisttpll
std
jge
aaa
adc
cmp
xchg
sti
xchg
mov
pop
add
icebp
adc
push
cwtl
cmpsl
add
ret
dec
sarl
cmp
fldenv
inc
test
mov
jecxz
add
test
pop
sub
sahf
push
popf
repnz
cld
imul
adc
pushf
leave
xchg
jnp
adc
adc
dec
jbe
xchg
in
xor
jmp
and
lahf
hlt
sahf
mov
or
orl
push
insl
idivl
mov
push
or
and
push
or
or
dec
cmc
imul
mov
adc
rorb
dec
cmp
lds
in
dec
test
sub
xor
pop
movsl
mov
fidivrl
pop
dec
movaps
mov
fneni(8087
mov
push
mov
cmc
sub
sbb
or
push
dec
aas
pop
cmpsl
jmp
inc
scas
pop
jmp
sti
and
fbstp
lock
sahf
dec
ror
loop
xchg
js
dec
pop
mov
inc
jno
push
pop
cwtl
inc
add
mov
sub
data16
fwait
add
pop
sub
add
inc
or
sub
adc
cld
icebp
pop
popa
add
jmp
sbb
pop
repnz
adc
ret
sarb
and
jmp
fimuls
call
nop
xor
dec
notl
sub
pop
and
xchg
adc
mov
dec
jecxz
je
cmp
jne
cmc
adc
push
xchg
adc
inc
int
sub
pop
add
imul
mov
push
add
scas
jnp
leave
es
push
add
sub
add
je
arpl
xlat
push
push
pop
popa
mov
iret
add
out
push
push
push
rorl
add
push
mov
push
bound
mov
jmp
scas
mov
or
or
jmp
pop
xchg
popf
push
repnz
clc
or
pop
pop
scas
inc
cmp
data16
push
jl
mov
out
dec
push
call
in
scas
insb
fstpl
pop
and
rcrb
push
mov
in
aad
lock
dec
lret
fwait
or
jmp
rcl
pop
pop
mov
add
bound
jge
lock
aas
inc
jnp
not
shr
inc
mov
push
call
data16
nop
inc
jl
sbb
add
popf
pop
or
adc
sbb
dec
mov
xlat
loopne
sbb
mov
bound
fnstsw
mov
push
push
push
pop
lods
jb
ds
daa
loopne
int
pop
mov
jge
and
mov
lds
gs
or
andb
mov
jg
movsl
fs
mov
mov
push
mov
pop
dec
stc
addl
sub
jo
dec
lcall
popf
jg
mov
pop
push
repz
clc
shrl
loopne
push
out
push
lahf
mov
inc
push
daa
xchg
imul
pop
rorl
stos
mov
bound
mov
pop
sub
xchg
sbb
xor
les
sub
add
aaa
pop
dec
sbb
lds
jbe
xchg
or
xor
sbb
dec
adc
sub
es
nop
adc
pop
ret
dec
arpl
stos
cmpsb
ret
mov
mov
cmp
sahf
cmp
shr
mov
roll
and
negb
mov
mov
inc
nop
rcr
xor
sbb
rorl
sbb
push
bound
sub
in
insl
pop
loop
jle
pop
xor
aas
hlt
xorl
mov
leave
or
and
push
jmp
pop
dec
inc
lods
dec
mov
mov
add
lea
and
xor
sahf
jge
mov
pop
pop
cld
mov
jmp
dec
arpl
mov
std
out
and
cmpsl
stc
loopne
and
push
cli
je
push
push
jmp
pop
rorl
xor
cwtl
addb
dec
jmp
xor
sbb
push
pop
stos
ficoml
testb
jmp
ret
pop
btr
push
jmp
mov
xor
jp
adc
mov
scas
and
lock
mov
and
cmpsb
fimuls
pop
imul
orb
sbb
inc
subl
inc
mov
inc
mov
movsb
test
test
loop
loop
jge
cltd
mov
jmp
adc
xor
roll
add
insl
mov
out
mov
add
mov
sti
add
mov
scas
cmpsb
push
sub
push
out
jl
lods
adc
ljmp
inc
sub
insb
push
jmp
repnz
out
pop
pop
gs
nop
push
pop
or
cwtl
xchg
daa
adc
xor
push
push
cli
xchg
add
mov
add
enter
dec
pop
aas
pop
rclb
movsl
push
cmp
incb
lret
lock
icebp
xchg
imul
int
lock
pop
push
and
jge
push
das
notl
in
or
push
ja
repz
mov
lea
push
out
jmp
aas
and
sbbl
cmc
dec
pop
add
inc
jbe
adc
dec
adcl
push
cmp
jecxz
in
or
sti
in
mov
sbb
sbb
jmp
add
mov
pushf
pop
outsl
dec
sub
lds
dec
pop
rol
push
cs
mov
push
decb
add
cli
mov
loopne
icebp
push
bound
movq
arpl
push
lds
xchg
ret
ds
xchg
mov
fstps
push
push
push
xchg
lock
inc
jmp
push
or
lret
add
sub
push
pop
ret
and
mov
ja
cmp
fidivs
neg
test
or
shrl
shrb
lods
jo
popa
std
lock
add
mov
push
mov
or
mov
leave
dec
lds
scas
stc
icebp
sbb
adc
mov
mov
cmp
test
jg
jg
jbe
aam
es
hlt
add
mov
sarb
inc
and
cltd
xchg
cmp
ljmp
dec
cwtl
insb
inc
mov
mov
mov
push
jmp
into
push
pop
push
push
pop
dec
clc
int
js
jno
shr
or
sbbb
filds
add
stc
jno
cs
out
sub
bound
or
shrl
outsb
repnz
incl
push
push
sub
push
mov
fcmovbe
jg
icebp
push
iret
and
adc
ja
pop
sbb
add
jnp
movsl
cmp
call
test
call
pop
lods
aas
daa
enter
mov
jmp
pop
js
cwtl
mov
fstpl
xor
jmp
cmc
into
dec
pop
mov
inc
std
out
daa
jp
mov
sbbb
dec
int
ja
dec
ja
push
icebp
jmp
sub
addl
and
adc
mov
dec
mov
rol
loope
cmp
push
mov
mov
jo
nop
inc
add
adc
iret
xor
or
add
lods
ja
xchg
pop
xchg
pop
idivl
xor
push
adc
repnz
mov
mov
std
and
adc
shl
or
addr16
cmp
inc
pop
add
xchg
int3
pop
push
movsl
jns
scas
jl
sub
cmp
mov
pop
and
pop
jmp
add
push
les
pop
cld
cmp
inc
popf
jg
cwtl
push
jnp
sub
jmp
lahf
push
pop
negb
push
dec
xchg
fisttpl
lcall
fwait
punpckldq
test
int3
xchg
outsb
adc
adc
cmpsb
sti
bnd
lcall
movsb
xlat
mov
push
andb
jecxz
pop
icebp
test
fldl
dec
xor
jo
hlt
icebp
xchg
mov
call
test
push
fldl
cltd
mov
fwait
das
test
lea
popf
push
adc
jb
pop
inc
xor
ja
inc
xor
repz
addb
popa
cs
adc
or
inc
and
test
in
aam
cli
int
and
leave
nop
xor
test
sub
les
or
addr16
add
mov
mov
outsb
call
mov
mov
insb
filds
push
sub
rcrb
mov
xor
idivb
inc
mov
movsb
out
ret
scas
jle
mov
adc
fiadds
push
mov
sbb
gs
sub
mov
aad
int
inc
subl
test
xchg
imul
push
jmp
xor
out
data16
xchg
or
cmp
jne
gs
mov
fcmovne
cli
iret
push
push
push
xchg
mov
or
jg
call
hlt
stos
scas
jge
scas
imul
add
xor
and
or
adc
or
rcll
into
cld
adc
les
fs
add
jp
lds
lcall
xor
lret
or
out
mov
sub
fnstsw
ret
jmp
and
fists
jae
js
push
inc
sub
scas
je
out
mov
and
jl
mov
fmull
mov
push
mov
mov
mov
pop
pop
xor
adc
add
dec
pusha
jecxz
in
testl
jmp
ret
pop
es
insl
hlt
xchg
sbb
xchg
inc
test
and
call
lds
out
mov
sahf
mov
jge
adc
xor
jmp
hlt
xchg
sbb
pop
xor
sub
out
mov
in
inc
xchg
rolb
add
cwtl
icebp
pop
idiv
adcb
xor
pop
mov
jle
out
in
decb
pop
push
mov
es
sarb
pop
leave
lods
stos
push
sbb
xchg
push
dec
out
div
push
out
pushf
or
jmp
fdivrs
and
xchg
push
adcl
dec
jno
add
loope
and
and
xorb
scas
sbb
jns
sub
pop
movb
or
imul
loop
mov
arpl
out
jmp
cmpsl
and
lcall
divb
idiv
shrb
gs
adc
mov
ljmp
roll
inc
rcll
pop
mov
xchg
repz
push
fwait
aad
daa
lea
es
ret
mov
lcall
pop
sub
mov
jge
lret
sub
sbb
repz
push
dec
and
lock
je
das
js
mov
sbb
sbb
push
sbb
aas
das
loope
or
xor
shlb
inc
xor
adc
test
xlat
das
sbb
and
in
ret
dec
adc
out
or
mov
jl
xor
mov
imul
aaa
fsubrl
hlt
inc
add
repnz
jmp
jecxz
mov
jle
push
je
aas
popf
clc
pop
test
sub
and
cmp
test
sbb
cmp
add
fildl
jecxz
inc
push
aas
push
jmp
jae
cmpsl
pusha
mov
sbb
adc
insb
sbb
pop
out
imul
dec
mov
add
dec
cmp
lret
dec
cmp
stos
pop
xchg
jne
jb
int3
xchg
mov
arpl
loop
push
or
jp
xchg
cwtl
out
jge
cwtl
and
call
out
jne
mov
testb
mov
mov
mov
adc
cs
imul
xchg
call
rcl
sbb
mov
or
add
lcall
inc
push
sub
stos
loop
sub
lahf
insb
mov
add
mov
inc
cmp
jmp
ficoml
xor
sti
into
dec
dec
imul
dec
add
pop
hlt
pop
andb
daa
ja
mov
add
inc
dec
sbb
mov
sub
nop
or
sbb
addl
cli
divb
add
push
push
imul
adc
inc
fdivrp
in
add
jne
sub
inc
dec
or
repnz
adc
lods
imul
aad
lds
dec
pop
fidivl
jnp
xchg
pop
add
fsubrl
enter
bound
and
cmpsb
rclb
cs
jno
fsubrs
scas
cwtl
sub
insb
ljmp
shr
hlt
loop
mov
and
push
shlb
jp
jle
in
cmp
pusha
je
jmp
inc
fs
aad
mov
pop
jbe
lock
stos
adcb
into
or
sub
stc
pop
mov
pusha
pop
jp
fimull
cmp
ljmp
or
test
inc
mov
inc
or
or
xchg
jnp
sbbl
jne
or
ret
or
add
in
ljmp
test
or
addl
mov
add
dec
cmp
rolb
add
add
pop
inc
jo
clc
cmpsb
jnp
loope
cmpsl
sahf
ja
sbb
inc
sbb
add
pop
ret
incb
sub
jl
fsubs
sub
or
mov
jmp
bound
out
in
out
into
fdivs
add
aam
jg
and
repnz
cli
stc
add
dec
xchg
add
je
dec
jmp
cwtl
mov
push
mov
add
sbb
data16
divb
adc
pop
sbb
and
sub
es
daa
and
and
push
push
mov
inc
incl
sbbb
mov
imul
jne
lods
fwait
add
pop
sbb
stos
inc
mov
xchg
push
test
jno
jmp
js
inc
mov
sub
adc
fldl2t
cmc
jb
cmp
mov
call
notl
sub
mov
sub
sub
mov
fmull
cmc
out
cwtl
xor
cld
cmp
or
add
and
or
mov
addl
mov
sub
js
add
xor
arpl
mov
adc
inc
mov
push
pop
jmp
push
cltd
fadds
pop
jle
sub
xchg
jno
insl
dec
ret
jno
movsl
decl
jo
xchg
mov
je
shr
dec
out
in
ret
or
push
subb
jne
andl
aas
xchg
cmp
leave
pop
daa
fldl
sub
sbb
fldt
push
inc
aas
xor
or
xchg
xchg
out
sub
jnp
stos
sar
mov
adc
add
push
mov
das
push
add
push
lock
lahf
sbb
push
jmp
popf
rcl
in
pop
mov
cmp
sub
adc
fisttps
pop
pop
mov
jecxz
cmc
mov
inc
es
int3
add
call
xor
test
ds
pop
adc
and
push
adc
mov
pusha
aam
adcb
mov
sub
aad
mov
or
push
into
adc
movsb
repnz
shll
ljmp
scas
sub
push
pop
push
xor
std
insl
lods
or
add
cmc
adc
jo
and
pop
add
sub
pop
sbb
cs
lahf
rcrb
jmp
mov
fisubrl
jl
pop
jno
pushl
push
stos
jb
xchg
lcall
or
out
add
shll
add
push
into
scas
add
mov
cli
sbb
and
mov
push
or
ret
fndisi(8087
scas
xor
in
outsl
mov
out
lret
ja
in
and
jecxz
pop
shl
xorb
flds
cmpltps
test
cmpsb
inc
sub
xor
pop
cld
or
push
push
jno
imul
xor
sub
pop
cmp
push
xchg
push
nop
cld
iret
repnz
inc
lock
sarb
subl
ret
jno
push
out
xchg
adc
arpl
jmp
jnp
cmc
cmp
xchg
pop
cmp
icebp
mov
cmp
rcrb
mov
push
mov
mov
cmpsl
cwtl
test
pop
fs
lds
xlat
stos
lods
insl
mov
sub
xchg
sub
fsts
xchg
push
xchg
dec
sbb
and
xorb
addl
enter
pusha
ds
orb
jns
pop
loopne
sub
sbb
test
dec
sbb
subl
sbb
or
das
mov
adc
das
mov
pop
adc
lock
sub
insl
daa
not
and
mov
dec
arpl
inc
mov
pop
scas
jl
sub
jp
test
cli
mov
xchg
sub
int
xor
aas
inc
mov
add
clc
pop
xor
jg
mov
lods
push
cmovb
out
rolb
cs
add
int
lret
add
aam
add
inc
cs
sahf
stc
adc
fwait
push
int
dec
sbb
test
push
mov
into
jl
push
xor
pop
ljmp
insl
mov
sub
popf
push
aad
pop
lcall
jns
lret
hlt
push
ds
mov
xor
pop
popa
push
xor
adc
pop
add
ds
lahf
jg
xchg
push
movsb
popa
push
shll
dec
add
push
dec
jo
xor
add
dec
push
stos
add
ljmp
jle
dec
add
in
pop
jp
mov
xchg
js
mov
sub
mov
mov
jmp
inc
sub
pop
sbb
xor
and
negl
xchg
cli
cli
nop
add
pop
push
jbe
push
lret
xchg
push
sbb
sbb
lea
pop
lods
push
movsl
les
imulb
mov
pushf
ficoms
dec
ret
xchg
rcrl
push
outsl
sbb
push
mov
xchg
daa
push
mov
lret
in
cmp
push
cmp
mov
ljmp
inc
xor
adc
sbb
push
push
pop
cmp
lea
mov
sbb
aad
mov
mov
daa
push
push
pop
pop
or
lods
cmpsl
push
out
mov
add
jbe
mov
add
mov
sbb
pop
push
mov
pushf
dec
rcrb
mov
mov
jmp
pop
insl
fists
cmp
xchg
mov
jl
xchg
test
or
push
mov
push
push
mov
jmp
lret
sub
cmp
adc
pop
xchg
pop
sahf
out
inc
enter
adcl
addl
xor
in
ret
or
les
dec
push
std
cmp
mov
xor
jmp
cli
jae
lret
or
xchg
pop
jecxz
adc
clc
xchg
je
daa
hlt
dec
pop
push
outsl
loopne
sub
lea
loopne
jnp
pop
sub
adc
mov
out
loop
test
testl
fiaddl
int3
push
pop
pop
inc
xorl
movsl
fimull
ljmp
mov
fistl
or
sub
cmp
or
pop
push
pop
out
test
nop
jno
adcb
and
out
push
sub
xor
ja
push
pop
sub
jae
jg
pop
fildll
jmp
cmp
cmp
mov
mov
push
lds
pop
stc
mov
and
popf
xlat
ss
jmp
das
dec
mov
repnz
cli
int3
dec
aaa
pop
inc
popa
xchg
std
cli
jnp
outsb
push
ret
pop
inc
clc
fwait
lock
gs
xchg
inc
adc
rolb
or
jmp
and
dec
jmp
jp
add
add
xor
inc
push
stc
xchg
sbb
pop
push
sbbl
fldl
and
jb
cmpb
add
in
inc
mov
std
adc
and
push
ret
add
or
pop
mov
sbb
pop
mov
xchg
jmp
sub
xor
add
jp
add
hlt
arpl
mov
sub
jle
outsl
xor
and
inc
rcrl
and
and
sub
or
dec
pop
jl
mov
imull
xor
and
pop
xadd
xchg
data16
pop
cli
mov
xor
xorb
jle
add
cmc
push
ds
add
xchg
push
rcrl
mov
popa
insb
lret
mov
add
push
ljmp
pop
pusha
shrl
pusha
clc
xor
and
jp
out
pop
sub
ja
cmpsl
lret
xchg
xchg
idiv
aad
or
es
repz
scas
loopne
leave
adc
jmp
out
or
jmp
out
mov
mov
jmp
dec
gs
hlt
xor
mov
cmp
rorl
clc
hlt
xor
jg
in
aad
gs
sbb
repnz
icebp
in
popf
sbb
jg
mov
jp
dec
loop
and
add
pop
popa
jno
xlat
pusha
add
ror
sbb
mov
add
add
jmp
in
and
dec
cmpsl
cwtl
and
lods
add
inc
lret
adc
nop
ljmp
andb
adc
daa
ds
fbld
cmpb
sub
pop
pusha
dec
jl
js
nop
jb
sub
sub
popf
push
sub
push
dec
dec
pop
loope
and
pop
sbb
dec
pop
mov
js
mov
cmp
add
sub
int3
mov
nop
das
aam
sub
jmp
lret
pop
mov
fwait
xlat
mov
movsl
push
pusha
sub
mov
aad
hlt
shl
outsb
test
jnp
inc
data16
jo
jle
push
int3
pop
divps
ja
mov
in
repnz
iret
cmc
cmp
shrb
fistpll
or
jmp
fs
inc
mov
add
pop
lds
pavgw
push
and
nop
sbb
sar
inc
les
mull
jb
repz
and
sbb
push
xor
daa
daa
addr16
or
sbb
pop
dec
xorb
in
pop
adc
loopne
cs
or
inc
mov
push
loop
xlat
dec
adc
mov
lods
pop
push
inc
lea
ljmp
sbb
xor
inc
dec
xchg
push
lods
popw
imul
sar
data16
add
mov
pusha
dec
icebp
or
sbb
cmp
mov
inc
mov
loop
xorl
add
adc
daa
bnd
fmull
xlat
xchg
cld
and
mov
repnz
inc
mov
je
mov
inc
js
out
pushf
inc
jmp
jge
pusha
or
cmp
popa
add
add
cmp
or
sbb
or
pop
or
sub
or
loopne
xor
mov
push
cmp
fdivrl
das
loope
mov
ljmp
lds
fbstp
shr
stc
xchg
insb
push
cmp
pop
dec
adc
je
jle
xchg
adc
lahf
or
sub
pop
sbb
arpl
push
out
cltd
xor
dec
adc
or
cmpsl
and
add
in
mov
push
fmull
nop
jg
adc
imul
mov
mov
imul
cmpsl
push
or
loop
outsb
cli
push
orb
push
movsl
subb
pop
neg
or
lock
jnp
and
add
push
mov
clc
insl
cld
out
loopne
es
out
cwtl
sub
cld
jmp
cs
pop
mov
add
sbb
xor
pop
jg
jecxz
push
movsb
mov
jge
jb
dec
add
sahf
sub
pop
sub
loop
scas
adc
add
xor
or
pop
std
out
in
stos
les
test
pop
mov
icebp
test
jle
push
jmp
andl
shl
bound
xor
mov
push
out
pop
mov
test
call
push
dec
lods
inc
pop
test
dec
dec
jbe
nop
adc
mov
loope
std
inc
int3
xchg
out
andl
jmp
and
shll
dec
push
lret
repnz
add
imul
int3
adc
pop
jmp
pop
add
mov
sbb
clc
pop
push
mov
jmp
scas
pushf
jbe
sti
jp
movsl
pop
out
sub
imul
bound
sub
push
fmulp
push
es
inc
out
pop
or
dec
sub
push
add
push
and
dec
jecxz
push
fsubl
fmuls
lods
pop
pop
mov
pusha
rorb
mov
and
outsl
lods
imul
out
add
sbb
sub
stc
pusha
mov
adcb
call
mov
cmp
adc
or
fists
dec
pop
outsl
xor
pop
add
pushf
dec
xor
cmp
jb
sahf
and
add
repz
mov
dec
inc
enter
icebp
out
movsb
mov
jnp
movsb
lods
dec
lret
scas
je
adc
faddl
inc
ret
cmp
dec
movsl
ljmp
cmp
add
imul
adc
or
fiaddl
push
push
pop
pop
or
add
loopne
or
gs
sub
adcb
jnp
inc
inc
insb
adc
dec
jnp
test
inc
sub
add
jbe
orb
test
int3
adc
sbb
cs
jl
imul
ja
in
repz
jle
sbbl
in
popf
out
xor
enter
cmc
pop
push
add
das
sbb
sub
das
idivl
mov
lock
or
and
out
es
pop
push
notl
mov
or
jg
pusha
push
dec
dec
aas
xor
inc
push
push
pop
dec
push
or
add
push
jmp
insl
jns
cmp
popf
shlb
incb
or
jmp
repnz
or
sbb
loope
fdivp
cmp
push
mov
push
mov
xor
mov
daa
fimull
repz
pop
pop
push
lock
adc
push
stos
inc
lods
or
fucom
push
nop
pop
mov
ljmp
fldl
pop
jp
mov
inc
iret
sbb
sahf
jg
push
push
pusha
xchg
inc
es
xor
add
mov
mov
mov
or
stos
cmp
jmp
sub
cmp
mov
cltd
movsl
dec
and
nop
shrb
lahf
and
jmp
insb
mov
xor
xchg
int
rcrb
outsl
insb
cmp
jb
repnz
pop
cld
dec
sarb
pop
pop
push
add
mov
mov
cli
xchg
xchg
mov
pushf
aad
dec
add
cmc
pop
add
into
pop
add
pop
or
das
mov
shr
or
push
xchg
stos
mov
repz
leave
jle
mov
popf
lret
push
clc
outsb
std
mov
jmp
pop
lea
stos
adc
dec
adc
ljmp
push
mov
or
cmp
enter
jno
jns
pop
push
pop
lret
popa
dec
mov
mov
push
data16
outsb
xchg
fcmove
in
imul
inc
test
xor
repnz
xchg
sub
sub
push
jle
push
cmp
gs
test
xchg
mov
rorl
and
add
add
push
mov
sbb
loopne
mov
xor
xchg
mov
lret
cwtl
dec
lahf
fildl
cmpsl
mov
push
push
insb
or
jle
mov
xor
cs
add
imul
test
or
aaa
cmc
ret
or
push
inc
or
loop
nop
daa
sub
out
sbb
cmpsb
scas
and
adc
inc
mov
in
pop
inc
inc
mov
imul
das
mov
adc
push
addr16
and
mov
push
dec
movsl
jae
pop
mov
sar
pop
cmp
jge
mov
cmpb
dec
sbb
lock
add
xor
adc
add
mov
cwtl
and
xchg
xor
pop
push
nop
mov
cmp
dec
leave
sbb
inc
in
xchg
inc
sub
pusha
sbb
cmc
dec
cmpl
es
lds
xchg
pop
mov
mov
rol
addr16
push
mov
push
push
fildl
rcrb
push
mov
adc
idivb
jmp
add
xchg
jecxz
ljmp
mov
or
ss
and
pop
mov
jae
sarb
hlt
sub
int
mov
xchg
cmpb
mov
add
mov
in
inc
dec
mov
jne
sbb
ja
filds
clc
loop
dec
aas
jge
sub
dec
mov
out
sbb
pop
out
aam
adc
add
jmp
push
loopne
roll
imul
pop
adc
jnp
mov
push
xor
push
mov
cmp
shl
add
imul
filds
jnp
cli
add
sbbl
stc
jb,pn
xor
cs
stc
and
and
imul
jne
jecxz
push
dec
add
mov
mov
out
xor
mov
mov
and
add
adc
inc
outsb
orb
leave
ss
lock
orl
or
dec
in
mov
dec
nop
adc
xor
sbb
jmp
pop
sub
jbe
stos
cmp
lahf
cmp
lods
and
cmp
ljmp
das
inc
push
pop
test
test
pusha
dec
xchg
pop
aam
mov
pop
or
fs
outsb
sbb
add
inc
jmp
sbbl
dec
jl
lret
cwtl
mov
icebp
push
dec
gs
or
out
sti
movsb
out
out
mov
push
leave
mov
and
sbb
test
jne
pop
stos
mov
jle
push
test
inc
cmp
pop
or
jecxz
add
fsubrs
cmc
shlb
iret
dec
int
vpsrld
cmp
adc
testb
inc
or
int3
adcb
movsl
add
jmp
lret
dec
xor
mov
ror
pop
icebp
mov
lret
sbbb
xchg
jmp
mul
inc
lret
int3
pop
push
and
mov
sub
sahf
add
cmpb
xor
mov
adc
push
xchg
sbb
pop
xor
rol
repnz
test
mov
loope
pop
fimull
lods
aam
clc
add
jnp
dec
add
mov
cwtl
sbb
shll
push
xchg
add
jmp
jns
push
pop
pop
and
jle
push
mov
xor
lcall
push
das
fdivs
jb
jmp
sub
pop
xchg
cmp
scas
and
std
add
mov
or
pop
dec
lods
and
bound
imul
mov
shlb
movsl
jb
xchg
sbb
cmc
sbb
or
adc
loope
pop
ljmp
cs
fisubrs
aas
andl
pop
jp
cmp
push
fnsetpm(287
xchg
xchg
and
mov
jne
sub
test
fwait
aas
sub
movsl
cmp
sbb
push
and
adc
mov
add
inc
sub
add
dec
pop
scas
and
fsubs
lock
test
ss
imul
into
jmp
cmp
fs
in
pop
rorl
cli
jg
test
rolb
fistpll
aaa
mov
cmpsl
add
shr
xor
nop
je
sbb
or
dec
jbe
pop
inc
xor
dec
rcl
outsb
stc
mov
popl
jo
iret
mov
mov
and
or
in
jno
mov
mov
mov
jns
mov
jle
and
jmp
sub
daa
pop
in
push
push
rorb
or
enter
cmpsl
rcr
je
push
mov
mov
jmp
xchg
cli
cwtl
sub
jo
and
into
pop
cwtl
test
dec
xlat
push
mov
or
add
mov
not
xchg
push
lock
fimull
std
mov
jge
xchg
push
xlat
daa
xor
push
pop
mov
mov
and
jl
xchg
loop
pushf
movsl
cmc
ffree
movsb
dec
ja
cmp
sbb
cwtl
pop
jb
sub
arpl
push
dec
mov
xchg
mov
loopne
sbb
sub
and
inc
pop
mov
imul
sub
cmp
pop
pop
mov
jb
aaa
xchg
mov
pop
adc
push
mov
xor
add
sub
adc
add
adc
mov
mov
daa
das
jae
fwait
add
and
dec
pusha
fistl
adc
push
sub
cmp
stc
mov
sbb
xchg
pushw
pop
jmp
inc
inc
push
or
scas
mov
lock
test
sahf
cvtdq2ps
andb
fwait
xchg
stc
mov
jge
fdiv
stos
pop
jbe,pn
dec
add
shr
sub
jmp
stos
lret
iret
add
mov
sub
shl
mov
test
pop
movsl
cli
mov
dec
stos
mov
xchg
pop
popf
hlt
cmp
ja
dec
mov
jb
mov
dec
and
outsl
scas
mov
add
int
mov
repz
mov
sub
insb
stos
movsb
cli
test
shl
pop
lea
pop
push
lcall
and
push
mov
or
adc
sbb
mov
cld
xor
imul
jmp
std
jb
stos
shll
jmp
imull
push
xchg
pop
arpl
subl
stos
mov
push
mov
orb
jp
mov
or
jmp
xchg
fidivl
or
daa
mov
test
jnp
inc
sti
inc
jbe
add
mov
pop
jp
xor
ljmp
pop
push
orb
dec
jl
or
inc
jmp
addr16
mov
flds
inc
call
negl
jnp
and
mov
mov
add
and
sarb
push
push
sti
mul
dec
adc
pusha
scas
lods
inc
push
popf
pusha
fadds
ds
shlb
or
xor
fbstp
mov
adc
xchg
ret
test
pop
nop
pop
repnz
lret
insb
or
jl
mov
std
and
test
xor
dec
shl
adc
mov
cltd
mov
add
adc
add
outsb
add
jmp
pop
push
repnz
or
mov
inc
pop
add
cmp
mov
inc
sub
fdivl
or
pop
test
into
out
and
outsl
mov
fcmovnb
js
jns
call
xor
pop
add
fnsave
ljmp
jmp
sub
in
and
add
push
in
cmpsl
out
or
xchg
js
xor
in
add
lds
cmp
int
pop
std
xor
pop
and
lods
mov
push
mov
outsb
mov
pop
shl
test
or
js
jae
push
add
repz
fadds
cmp
call
push
ret
call
jnp
lahf
push
cmp
push
push
push
inc
mov
add
sbb
mov
test
pop
hlt
insb
dec
in
sub
dec
adcb
mov
add
not
dec
shr
or
adc
clc
adc
shlb
push
jmp
out
js
not
or
in
adc
add
push
cmc
or
pop
loop
jne
push
dec
mov
insl
aaa
adc
and
or
fildl
fs
or
filds
xor
and
fs
aas
dec
and
push
mov
add
rorb
icebp
je
or
adc
inc
shrl
scas
sub
jmp
lock
and
mov
and
inc
cmp
call
cmpsl
loop
adc
roll
mov
in
lds
and
sub
cld
fnsetpm(287
adcl
cltd
nop
ds
jl
add
mov
hlt
je
lods
sbb
sbb
mov
inc
push
out
das
jns
add
xor
jecxz
xor
jmp
dec
imul
out
xor
pop
cmc
inc
daa
pop
adc
cmp
or
cmp
cmp
mov
aam
mov
ficompl
repz
sbb
ret
adc
addb
icebp
insb
lahf
mov
cmc
sbb
sbb
out
inc
mov
push
outsl
adc
in
or
cmp
das
clc
cmc
add
pushf
jne
xchg
and
mov
xlat
sub
dec
pop
and
fs
xor
dec
je
sub
imul
inc
or
push
addb
sti
popa
ljmp
push
das
loop
movsb
cli
jmp
and
mov
arpl
insl
mov
adc
and
popa
les
inc
pop
ljmp
push
gs
adc
je
cltd
dec
mov
outsl
pop
pop
or
aam
and
shrl
pop
inc
not
and
or
push
add
push
aas
rorl
jmp
mov
aam
mov
sub
mov
rorl
lods
pop
mov
and
xor
ja
sbb
xor
repnz
ljmp
fabs
push
adc
fwait
mov
adc
xlat
push
leave
mov
add
lret
inc
bound
jne
dec
lock
scas
and
enter
mov
mov
in
test
push
jg
sub
addb
rorb
mov
lret
loope
pop
jmp
pop
pop
pushf
movsb
pop
adc
push
test
adc
jnp
and
adc
xchg
clc
sub
cmp
stos
push
xchg
rolb
cmpb
dec
xchg
sbb
push
sub
push
sahf
std
int3
pop
and
jnp
add
jnp
cmp
outsl
xor
cld
fdivrl
xor
lea
adc
xor
push
mov
scas
pop
pop
cmpsb
cltd
xchg
or
and
mov
loop
jle
movsl
frstor
insb
or
dec
and
sbb
xor
andl
out
mov
stc
subb
and
cmpsl
sub
adc
imul
aas
jbe
sbb
leave
je
xchg
dec
dec
inc
adc
outsl
xor
mov
mov
push
or
mov
ja
or
add
sbb
jb
lret
or
lock
subb
add
loop
jp
rcrb
xchg
in
add
cmp
out
jb
or
fldl
dec
cmc
repnz
and
cmpsb
mov
std
out
xchg
fstpl
mov
shr
into
popf
push
daa
adc
scas
mov
jge
stos
stos
popa
xchg
in
ror
cmp
xchg
data16
into
mov
xchg
in
and
or
xor
imul
lods
roll
repz
out
arpl
in
enter
in
add
push
ljmp
fadds
inc
or
jns
sti
sbb
rolb
sub
add
pop
sub
add
es
mov
mov
imul
sarb
je
push
cmp
sti
fistl
jne
std
jmp
pop
mov
cld
and
push
dec
or
dec
out
outsl
inc
push
rorl
fsubs
mov
xchg
decl
daa
jns
inc
push
repz
cmp
pop
std
pop
xchg
mov
xor
sub
sub
cmpsb
xchg
add
sbb
loope
cmp
push
add
adc
inc
cmpsl
sbb
or
xchg
xchg
pop
mov
xchg
insl
clc
inc
jle
nop
arpl
inc
inc
addb
int3
pop
push
sub
jl
sbb
push
ja
fdivl
ret
jmp
sub
and
repnz
and
dec
ja
addr16
pushf
andl
pop
clc
movsb
cmp
cmp
das
pop
pop
cmpsb
divb
repnz
and
and
push
ja
stos
stos
xlat
stc
jns
or
cmp
add
nop
mov
or
loope
lds
push
fs
fwait
out
cmp
adc
mov
push
mov
jbe
flds
stos
rcr
mov
xchg
sub
aas
pushf
dec
sahf
push
addb
movsl
cwtl
sbb
fists
jmp
dec
adc
shll
cmp
cmp
xchg
pushl
and
xor
push
or
push
shr
push
sub
loopne
xchg
xlat
not
or
add
push
mov
jo
cmp
das
mov
shr
imul
pop
jmp
cmpb
mov
popf
mov
cmp
push
aaa
daa
and
jb
shrl
imul
faddp
rorb
das
add
in
iret
push
mov
shr
xchg
pop
pop
mov
stc
clc
repnz
pop
aam
mov
xchg
adc
scas
mov
inc
or
mov
ljmp
dec
sti
inc
mov
das
mov
add
jge
dec
aaa
mov
mov
add
fldcw
mov
test
sub
int3
or
mov
movhps
mov
sbb
nop
loop
mov
push
mov
and
pop
rcrb
mov
dec
loopne
xorb
lods
jns
add
jmp
and
cmp
stos
adc
dec
or
inc
shr
clc
into
xchg
adc
mov
iret
out
shlb
test
xchg
xorl
movsl
or
xchg
aas
mov
adc
cmp
and
mov
data16
jns
mov
push
add
jmp
adc
dec
dec
notb
add
add
and
outsl
add
inc
jne
and
cmp
inc
leave
jno
push
cmc
inc
das
or
and
test
sbb
pop
mov
movsb
stos
shr
pop
push
inc
popa
cmpb
inc
push
push
push
mov
add
pop
add
cltd
mov
test
or
arpl
or
test
daa
repz
scas
cmp
inc
push
out
adc
xor
insl
loop
sbb
mov
gs
jl
sub
bound
rorb
adc
lahf
test
outsl
repz
jne
out
push
cmc
add
push
jo
insl
mov
cli
in
fnsave
cmp
push
les
call
push
inc
or
add
add
not
dec
mov
test
cmc
xlat
mov
or
jecxz
imul
add
push
mov
or
add
sub
jo
xor
dec
stos
add
filds
mov
jno
adcb
not
adc
lds
pop
inc
imul
andb
or
or
in
das
inc
stc
cmp
mov
sbb
mov
shr
cmp
fdivrs
sbb
or
xor
pop
pop
sbb
push
xchg
ja
push
mov
popf
pop
add
das
jmp
mov
jecxz
test
cli
inc
shrb
mov
jle
cmc
out
cwtl
xchg
cld
pop
push
jmp
lea
cmp
mov
push
mov
in
mov
dec
aad
sbb
inc
cmp
pop
cmp
imul
jmp
sbb
call
pop
mov
aam
scas
cmp
push
inc
sub
jne
xlat
jle
adcb
mov
inc
out
sub
jns
icebp
add
cmp
jne
popa
orb
xchg
or
pop
addr16
test
ret
push
inc
ljmp
test
and
pop
cld
aad
sub
add
xor
sbbb
in
sub
sbbb
out
pop
faddl
fildll
xor
rcrb
gs
das
rcll
cmpsl
lock
and
adc
mov
jmp
mov
or
cmpxchg
shll
fnstcw
push
dec
lret
sub
vpsubsw
stos
cwtl
or
loop
pop
sbb
and
hlt
rorb
rclb
add
loop
out
jmp
cli
rorl
mov
or
rolb
add
dec
negb
addb
movb
push
or
jle
flds
xor
rolb
lods
push
mov
xor
aas
inc
loopne
and
fs
nop
lds
and
add
das
xchg
jmp
cwtl
sub
push
imul
outsb
ret
inc
call
or
out
cwtl
push
jne
jmp
cmp
inc
xor
or
adc
push
and
mov
stc
adc
fists
orb
mov
and
shlb
sbb
inc
jmp
scas
out
btc
xchg
pop
add
add
aaa
and
xor
pop
sub
add
imull
pop
cmp
dec
cmp
mov
jmp
mov
mul
out
inc
sbb
repnz
and
cmpb
or
lock
and
pop
jg
imul
in
add
or
shlb
es
jle
outsl
add
add
mov
scas
jmp
cmp
pop
mov
popa
push
mov
pop
nop
xchg
mov
lahf
sbb
in
ret
dec
aad
ds
sub
fiaddl
push
mov
imul
sub
push
or
test
pop
outsl
scas
nop
mov
xor
dec
ja
pop
xor
jp
mov
jo
ficoml
out
das
push
shlb
aam
dec
std
sti
test
insb
pop
in
int3
mov
inc
clc
add
call
jmp
aad
xorb
inc
and
or
add
inc
arpl
les
push
xor
or
neg
loop
jns
adc
fidivrs
pop
xchg
pop
aam
push
or
mov
push
jmp
push
fdiv
sbb
stos
and
rcll
push
pop
pop
sbb
lret
mull
sbb
fcomip
rorb
repz
ja,pt
sub
adc
subl
mov
notl
aaa
daa
jmp
push
jecxz
in
out
mov
push
pop
xor
mov
or
lret
mov
sub
cmp
scas
lret
mov
xchg
jb
and
lods
and
xchg
pop
sub
add
scas
fldl
popa
aaa
aam
fmull
xor
or
sub
icebp
inc
pop
loop
leave
lock
fmulp
in
push
stos
mov
subb
pop
clc
addr16
mov
mov
fwait
mov
xchg
shll
mov
pop
lods
add
inc
loopne
loop
dec
add
cmp
dec
jno
enter
mov
hlt
aaa
shl
inc
cwtl
pusha
pop
and
jbe
dec
lahf
pusha
and
ja
ds
jmp
ss
pop
and
repnz
mov
push
shrb
xor
add
popa
jns
mov
cmp
adc
repz
sbb
adc
xor
js
mov
rcll
popf
add
aad
repnz
jns
in
lcall
div
mov
and
in
cld
das
adc
pop
rcrb
inc
add
and
and
cmp
addb
and
out
aas
sub
insb
push
push
cmp
out
xor
inc
add
int3
orb
adc
aam
xor
sbb
imul
sub
fisubrl
pop
pop
mov
inc
decl
adc
mov
push
lock
push
das
mov
adc
pop
aam
jmp
cwtl
shrb
cmp
pop
mov
add
mov
stos
mov
nop
lcall
shll
mov
mov
jne
cmp
pusha
and
fmul
test
inc
je
push
push
andb
adc
sbb
es
rol
cs
pop
push
or
dec
pop
rorl
cmpsb
icebp
mov
enter
test
add
ret
cmp
and
add
sar
jne
push
adc
pusha
mov
int
movsb
xor
mov
repz
xor
pavgb
fs
adc
aas
jmp
idivl
nop
out
add
clc
std
or
adc
icebp
dec
lret
pop
imul
leave
sbb
jnp
adc
fists
mov
data16
inc
pop
in
mov
jg
sar
pop
ss
inc
add
lods
push
loope
cmp
and
jnp
mov
ljmp
adc
stos
test
fs
sub
mov
aam
mov
pop
add
lods
fs
push
push
mov
inc
js
imul
movsb
add
bound
cmp
lmsw
gs
mov
xor
out
pop
lds
add
pop
sbb
jne
pop
xchg
push
jmp
das
xor
js
or
inc
mov
inc
or
test
out
adc
sub
pusha
push
push
add
popa
rclb
sbb
mov
test
pop
or
es
int
or
cmp
cmp
jo
dec
mov
mov
out
jmp
ja
clc
lret
jno
jne
std
aad
fbstp
sub
lods
dec
or
cli
jmp
sub
push
xor
xchg
pop
pop
leave
dec
arpl
hlt
jbe
sub
push
mov
xor
ret
data16
xchg
ret
jmp
sar
jg
and
outsl
add
or
out
pop
add
repnz
jmp
fwait
and
mov
mov
icebp
pop
cmp
xchg
mov
repnz
ret
adc
jns
stc
sub
clc
or
jle
adc
xchg
loopne
jge
ljmp
jmp
and
imul
xor
pop
cmp
sub
lds
sbb
adcl
daa
pop
je
or
ja
mov
pop
xlat
cmpl
cltd
jge
jmp
mov
inc
inc
dec
and
ret
jns
sarl
and
mov
mov
mov
add
rcll
dec
sub
sub
inc
inc
mov
std
les
cmp
mov
mov
xor
pop
pop
hlt
dec
nop
and
icebp
shl
imul
jl
jl
pop
push
dec
scas
cmp
inc
xchg
xor
add
jmp
pop
xor
scas
mov
dec
lock
scas
inc
icebp
xor
insl
mov
sbb
sub
les
push
pop
mov
pop
jno
add
jecxz
ret
pop
xor
outsl
hlt
popf
add
dec
push
cltd
pop
fwait
ja
and
jmp
mov
pop
jbe
add
push
enter
pushf
insl
shlb
sbb
rcll
xchg
ss
sub
loopne
or
xchg
add
mov
das
mov
repz
movsl
cmc
movsb
popa
dec
jmp
pusha
push
xlat
mov
sbb
aad
mov
sub
push
test
out
or
fsts
pop
jo
or
jge
jg
sub
pop
jno
mov
mov
sub
add
add
dec
jbe
or
or
sub
test
inc
mov
pop
dec
push
mov
stc
gs
sub
xchg
aas
lods
and
push
add
jns
imul
pushf
add
xchg
sti
rorl
test
jbe
stc
test
lret
xlat
mov
imul
mov
stc
mov
mov
cs
jno
dec
sub
dec
inc
arpl
js
xchg
dec
sarl
push
hlt
dec
xchg
push
push
cmp
inc
mov
stos
fstpl
or
push
jmp
push
adc
push
cmpsl
dec
sbbl
mov
in
sahf
pop
sub
std
es
sub
inc
in
shl
jne
inc
jg
and
jo
daa
push
imull
and
insl
les
addb
jae
sub
loope
cmp
mov
mov
jmp
mov
movsb
xor
dec
aas
loopne
sbbb
inc
mov
jb
or
aam
xchg
add
int3
mov
push
mov
int
inc
sbb
data16
call
jmp
ret
xchg
cli
pop
insb
inc
pop
push
rcll
add
jge
inc
addr16
push
inc
push
pop
lods
adc
jl
push
push
imul
ja,pt
mov
daa
and
mov
incb
enter
sub
push
rcrl
push
outsb
mov
push
xlat
xor
cmp
inc
jno
nop
in
popf
and
jmp
or
pop
adcb
in
mov
loop
dec
fcomps
jg
adc
pop
loopne
aaa
add
scas
rolb
adc
mov
fs
push
add
or
push
adc
dec
sub
jnp
outsl
adc
daa
pop
pop
bound
inc
repnz
lock
pop
mov
ror
push
or
mov
icebp
cmpsb
add
sub
int3
jg
cli
jg
xor
pop
cmp
xlat
inc
jno
sub
xlat
das
jge
xchg
mov
fucomp
push
dec
xchg
sti
sub
cltd
test
popf
fbstp
push
call
lcall
adc
add
sti
add
xchg
movsb
scas
lret
cmpb
rol
inc
leave
pop
pop
add
mov
fsubrs
test
mov
jge
jg
push
jge
gs
push
les
addl
push
pusha
add
xor
sub
ret
push
cli
aaa
add
lea
or
imul
pop
sbb
pusha
inc
pop
les
shrl
xchg
add
add
add
pop
hlt
dec
add
ja
or
icebp
mov
and
cwtl
adc
mov
loop
out
push
xor
or
xchg
pop
bound
sbb
add
pop
add
dec
dec
test
pop
mov
fwait
push
loope,pt
lcall
xorb
subb
pop
mov
sub
js
sub
stc
jne
enter
xchg
push
movsl
icebp
and
stc
mov
enter
dec
fcompl
mov
addb
adc
ss
in
push
inc
or
cs
jnp
sarb
mov
stc
or
pushf
gs
dec
inc
in
adc
jo
or
and
xchg
mov
nop
sbb
shll
xchg
add
es
leave
lods
dec
adc
adcb
testl
dec
add
xorb
icebp
or
sbb
inc
mov
out
xor
test
push
sub
xor
xchg
add
or
mov
inc
pop
lcall
inc
jg
inc
mov
stc
push
orl
jo
jns
sub
pop
data16
adc
push
xchg
lods
xchg
inc
sbb
cld
adcb
dec
add
adc
push
ror
mov
push
add
jno
inc
sub
xchg
add
into
out
imul
or
cli
mov
dec
orb
adc
stos
pusha
xor
add
out
add
cmpsb
hlt
mov
and
dec
cmp
mov
mov
out
dec
push
aas
jbe
xchg
ffreep
in
pop
pop
push
mov
in
mov
scas
sub
mov
pop
add
or
adc
xchg
add
cltd
in
scas
sub
cltd
sahf
js
pop
and
jmp
insl
mov
mov
ja
fistpl
jmp
push
gs
pop
jmp
jmp
or
fnstsw
push
jmp
repnz
add
push
lcall
inc
and
stc
sti
shr
dec
movsl
or
jnp
out
push
loope
negl
pusha
and
cmp
outsb
in
sbbl
aas
jmp
arpl
push
bound
dec
testl
add
sbb
push
arpl
xor
mov
push
dec
test
xlat
adc
add
scas
and
add
aaa
sub
and
push
dec
inc
mov
insl
outsl
test
div
notl
add
lods
add
jne
stos
das
bound
sbb
sub
xor
mov
cltd
dec
loopne
jmp
stc
ja
push
incb
or
inc
shlb
add
cwtl
popf
push
pop
xchg
not
or
fsubs
out
and
mov
addr16
jmp
adc
mov
sbb
sti
sub
jo
lret
add
push
scas
pop
push
mov
mov
ljmp
stos
jmp
sub
gs
enter
inc
jge
lahf
pop
inc
mov
jo
mov
decl
xchg
clc
pop
mov
ja
and
cmpsb
xchg
or
sub
test
xchg
jne
push
and
jnp
mov
lods
cmp
jae
pop
fnstcw
cs
pop
test
inc
rolb
repnz
sub
pop
push
mov
xor
jecxz
fadd
jns
or
shrl
cmp
lods
mov
out
push
pushf
jmp
call
mov
sti
push
xor
loop
inc
cmp
add
daa
or
sarb
out
push
cmp
push
add
push
pop
sbb
jmp
mov
orb
jnp
imul
lods
cmp
fsubrl
dec
or
adc
push
loope
jmp
sub
sti
les
add
pop
push
mov
pushf
cmp
cld
je
cltd
stc
sub
insb
test
nop
pop
pop
add
xchg
push
sbb
jg
sbb
pop
mov
inc
adcl
hlt
pop
popa
cmc
sarl
lods
icebp
shrl
dec
push
jo
pop
clc
cmpsl
hlt
mov
dec
or
mov
jle
push
xchg
mov
mov
fsubs
cwtl
sub
xor
jb
gs
inc
or
sub
mov
push
mov
dec
jno
sub
sub
jmp
imulb
jmp
sub
or
or
test
shlb
xor
jmp
out
add
rolb
ficomps
arpl
subb
pusha
int3
shll
sbb
dec
sub
and
adcb
jge
xor
adc
in
addl
iret
dec
adc
jl
shll
fldt
jle
je
pop
jo
loope
mov
mov
and
rcrl
push
clc
jo
cli
add
jb
xchg
and
add
or
lahf
sarb
rorl
insb
jmp
xor
push
pop
pop
jg
fbld
mov
xor
test
popf
lret
clc
movsb
add
into
pop
notl
mov
adcb
int
and
daa
xor
out
dec
inc
push
aas
add
addr16
das
push
notl
pop
bnd
xchg
jmp
lret
out
mov
adc
sub
test
incl
pop
adc
push
adc
add
dec
orb
push
popf
dec
jno
add
add
loop
cwtl
loope
in
aad
add
sbb
clc
pop
mov
inc
cmpsl
adc
push
or
dec
fmul
pop
xlat
cmp
or
push
dec
pop
mov
mov
or
mov
pop
addr16
imul
ret
or
xor
mov
jo
xrelease
sub
xor
cmp
test
fsubrp
dec
lds
shlb
in
sbb
shr
jg
or
and
sbb
lahf
std
jb
outsl
loopne
pop
hlt
pushf
pop
xchg
xor
sub
jmp
mov
je
or
or
das
imul
sub
pusha
loope
das
inc
xchg
outsb
xchg
lahf
jbe
push
or
xchg
iret
push
mov
cld
std
out
lds
in
pop
mov
mov
add
inc
clc
xor
push
cmc
or
lods
test
cld
push
add
mov
jmp
std
pop
into
cmc
xchg
cltd
jg
xchg
mov
or
sbb
push
xor
push
or
clc
cld
out
push
cltd
inc
mov
andb
mov
fcoml
mov
push
sbb
jp
xor
orb
cli
push
sub
and
xchg
sbbb
sub
dec
jmp
test
inc
push
daa
push
ss
add
gs
outsl
mov
dec
cld
loope
jnp
scas
pop
mov
mov
cwtl
test
out
mov
and
mov
ret
loop
xchg
lea
cwtl
jg
jg
fs
xchg
lret
add
pusha
or
sbb
jge
rcr
or
mov
add
out
pop
jns
mov
jne
jp
mov
pusha
xchg
mov
and
ja
add
call
ss
inc
jmp
or
sub
add
lret
ljmp
ret
mov
sub
cmp
mov
jb
rorb
jmp
xor
add
fidivrl
inc
and
jb
mov
sahf
loope
cld
or
addr16
ret
or
xchg
in
mov
pop
std
and
imul
jo
xchg
jne
imul
mov
add
or
jl
push
out
or
or
out
jg
in
out
jl
sub
cmpsb
xchg
mov
and
call
mov
cmp
xorl
cmp
scas
jne
sub
das
cltd
js
push
lods
push
lock
add
cli
test
sub
sbb
das
mov
xchg
or
data16
or
test
add
sti
lahf
or
xchg
nop
sbbb
xchg
or
push
or
adcb
add
pop
aas
das
jmp
fwait
mov
loopne
fucomp
adc
or
push
push
mov
xchg
loope
clc
mov
loope
push
inc
test
imul
loop
dec
cld
js
push
or
js
dec
add
xor
push
dec
sbb
arpl
pop
add
inc
dec
popa
xor
ret
adc
shrl
mov
adc
xor
pop
mov
mov
fsubrl
mov
in
add
out
xchg
enter
aad
jmp
cmp
pop
pop
xor
fsubr
mov
mov
sbb
adc
out
add
cli
inc
xchg
pop
jp
push
jne
jmp
pop
dec
js
outsb
inc
mov
leave
inc
bound
and
mov
cs
inc
or
imul
push
pop
stc
test
pusha
mov
inc
pop
lret
and
or
or
sbb
push
daa
mov
jmp
shrb
mov
pop
fbld
push
jg
pop
xchg
add
xchg
das
rcrl
push
mov
test
gs
loopne
into
mov
idiv
repz
out
sub
add
push
add
imul
iret
mov
add
sub
push
pusha
jge
ret
xor
inc
jmp
addr16
xor
xchg
or
mov
or
mov
in
in
pop
popf
fists
ja
sbb
jno
ds
cmp
shl
dec
xchg
pop
adc
pop
fcmovne
inc
dec
mov
jmp
and
pop
xchg
and
sti
imul
dec
push
ss
sub
mov
dec
pushf
push
push
das
sbb
pop
subb
loope
in
cmp
jge
pop
push
jmp
out
mov
adc
cwtl
xor
pushf
inc
mov
repnz
jle
push
daa
cmp
lahf
jle
shr
mov
dec
mov
add
or
push
push
jmp
mov
sarb
inc
adc
adc
mov
jmp
in
ficoms
outsl
pop
cmp
cli
test
lock
sahf
aas
mov
cmp
push
loop
cmp
clc
xchg
test
push
fcmovne
inc
and
sbb
push
pop
xchg
sub
jbe
popf
push
mov
and
pop
xchg
push
adcb
pop
addl
scas
xchg
imul
adc
scas
arpl
sbb
fcompl
mov
xchg
es
icebp
popf
add
pop
pop
rcr
jge
or
push
pusha
imul
fsub
rolb
xchg
cmp
or
mov
fmul
xor
or
sub
test
jns
pop
xchg
add
adc
sbb
cmp
lea
cmp
not
xchg
int
jo
sbb
jmp
imul
addl
push
xchg
add
mov
inc
adc
insl
sub
sub
mov
in
jmp
xchg
add
adc
sbb
fdivrs
out
cmp
bnd
mov
in
push
mov
mov
sub
lock
jge
andb
xchg
inc
vmovhpd
xor
sub
sub
inc
add
add
pop
mov
jmp
cmp
mov
dec
inc
sbb
stc
push
ljmp
sti
loop
pop
push
enter
lret
sbb
and
pop
push
push
ret
decb
mov
mov
cli
cs
loop
gs
fwait
aad
lds
push
dec
xchg
bnd
movsb
or
add
scas
push
test
add
sti
push
mov
das
sub
lods
mov
xchg
jg
insb
adc
sub
xchg
xlat
sbb
mov
push
mov
imul
out
push
addl
add
mov
clc
cli
cmp
hlt
push
push
das
add
sub
pop
icebp
and
push
jmp
out
cmp
pusha
pop
out
jno
xor
hlt
fcomps
add
movsb
push
push
stos
pusha
xor
cmp
add
push
jo
cmc
orl
lcall
daa
xchg
jg
testb
and
pop
sti
adcl
xchg
dec
lds
sbb
jo
data16
jge
in
adcl
push
fwait
out
dec
sti
and
mov
data16
cld
dec
dec
clc
pop
in
iret
into
cmp
scas
and
out
cltd
jns
call
clc
push
das
inc
jbe
inc
add
mov
push
jmp
or
rcrl
mov
bound
add
mov
incb
jae
add
jl
and
aas
sub
add
xor
dec
add
add
add
add
adc
shlb
adc
sbb
add
mov
or
jg
popa
xor
lcall
cmpb
sub
xor
lock
ja
or
dec
push
mov
repz
mov
push
mov
leave
cmp
into
test
pop
pushf
ljmp
dec
outsb
mov
mov
mov
jecxz
repnz
add
mov
push
mov
loopne
or
cli
push
cwtl
roll
sub
push
pop
add
jmp
mov
fisubs
stc
and
inc
mov
xchg
add
sbb
and
daa
cmpsl
or
adc
adc
cwtl
sbb
push
mov
jnp
add
sub
pop
and
jmp
push
mov
stc
jl
in
sti
sub
mov
push
sbb
test
pop
inc
sub
outsl
addr16
movsb
loope
mov
xlat
testl
lea
in
daa
push
push
sbb
jne
pop
fcompl
repnz
in
std
adc
pop
push
cwtl
scas
adc
pushl
ret
push
mov
inc
lcall
fcmovb
and
in
cwtl
pop
add
or
or
imul
fdivl
jo
and
and
imul
neg
and
sub
xchg
pop
xor
cmp
mov
sbb
cltd
adc
lock
pusha
xor
inc
push
stc
mov
add
inc
adc
push
pusha
ja
cmc
ds
jnp
loopne
or
add
mov
in
jg
cmc
xor
or
test
rorl
ss
adc
shlb
sbb
adc
rorb
inc
xchg
pop
cwtl
cmc
dec
pop
and
pusha
pop
in
pop
subb
xchg
test
push
icebp
cmpsb
sub
ss
fstpt
xchg
add
shlb
push
pop
repnz
aam
push
inc
adcb
aam
pop
fldl
sub
dec
mov
adc
sbb
sub
cwtl
inc
push
sub
in
add
add
cmp
fnstenv
and
pop
pusha
adc
cld
arpl
jnp
pop
inc
lret
sbb
test
fsubrp
dec
fisubrl
xchg
or
push
and
divl
cli
aaa
pop
pop
ror
flds
daa
sbb
bound
mov
ds
jmp
pop
mov
and
roll
jge
ds
push
adc
adc
sub
mov
sti
sbb
sbb
cmp
sbb
iret
pop
cltd
pop
or
sahf
jne
ds
inc
daa
jno
add
xchg
jae
jmp
cmc
ficoml
pop
sub
cltd
jecxz
adc
xchg
lcall
adc
xor
movsl
and
push
push
sbb
out
out
and
cs
cmp
inc
pop
shl
and
das
adc
push
jecxz
fdivrs
ss
cmp
sub
in
std
dec
mov
xchg
imul
decb
mov
nop
jmp
add
xchg
nop
push
push
add
and
push
mov
jmp
pop
xchg
sbb
jmp
mov
jecxz
out
pop
jmp
xchg
and
pop
xor
jle
leave
faddl
xchg
mov
add
sarl
cmpsl
lock
or
loope
mov
jbe
cmp
sub
mov
loop
pop
jb
out
sbb
jp
dec
stos
aas
push
iret
pop
and
in
xor
cmpxchg
popf
jns
subb
testb
sbb
outsl
insb
sbb
stc
add
loop
sub
in
and
or
ja
testb
or
mov
sarb
pop
pop
jno
bound
jl
bound
push
push
imul
popf
icebp
xchg
or
sub
xchg
js
popf
fnstenv
cs
es
orl
add
fnsave
jmp
pushf
mov
mov
pop
loopne
or
dec
pop
cld
and
pushf
push
inc
mov
mov
rcrb
push
outsb
popa
xlat
dec
add
sub
mov
aaa
call
xchg
adc
ja
lahf
xchg
repnz
ss
or
cmc
push
mov
testb
popa
ja
jecxz
jmp
jp
popf
cmpsl
hlt
gs
scas
mov
pop
inc
sbb
je
aad
xor
push
jle
xor
sub
push
insb
xchg
mov
sahf
popw
jmp
fbld
dec
cmp
mov
pop
or
sub
loopne
scas
dec
xchg
cld
hlt
movsb
mov
decb
or
sarb
inc
sbb
es
adc
ret
test
add
jle
pop
or
neg
add
or
xchg
bound
jge
dec
or
add
das
loope
sub
pop
fld
aas
mov
icebp
add
pop
ret
loop
pop
stc
xlat
ret
push
sub
loopne
mov
dec
cmp
shr
dec
add
aad
mov
gs
ss
add
or
or
sub
jmp
mov
loop
pop
adcb
add
rol
pop
push
sbb
mov
push
out
push
divl
jnp
xor
scas
pop
push
push
add
dec
inc
movsb
cmp
push
sbb
ror
fistpll
rclb
jnp
mov
scas
dec
xchg
gs
jp
xchg
out
hlt
je
add
jno
sub
push
cwtl
xchg
mov
in
jg
mov
ret
pop
pop
add
xchg
call
mov
add
arpl
ds
dec
push
mov
sbb
lcall
cmp
jmp
outsl
inc
fs
adc
dec
testl
inc
cs
repz
push
pop
push
jmp
imul
movsl
xor
gs
dec
mov
inc
and
push
dec
pop
jmp
subb
sbb
or
ficoml
jle
add
call
push
sbb
loopne
dec
test
mov
repnz
xlat
je
mov
jmp
sbb
inc
sub
and
mov
outsl
push
jb
xchg
and
lds
mov
sbb
mov
pop
incb
cli
arpl
push
push
cmp
mov
push
jmp
mov
xchg
mov
das
or
jmp
mov
fisttpll
loopne
mov
pop
pop
sub
push
sbb
cmp
or
gs
repnz
dec
fmuls
xchg
cs
jns
sbb
rcrl
or
add
sub
jmp
jmp
movsl
pop
data16
ja
adc
daa
or
stc
push
add
pop
aas
das
push
ds
inc
add
adc
and
push
jg
jge
and
adc
mov
dec
or
mov
in
dec
inc
add
sbbb
cli
fmull
les
nop
sbb
mov
push
dec
pop
sahf
scas
dec
pop
std
adc
dec
pop
scas
add
loop
push
jmp
mov
xchg
inc
mov
mov
and
fimuls
in
pop
das
xchg
pop
fisubrs
imul
cmp
rclb
addr16
pop
xlat
push
push
pop
push
stos
in
imul
loop
mov
push
leave
mov
cmp
pop
int
xor
ljmp
or
push
mov
push
sarl
int3
and
add
xor
and
adc
hlt
es
pop
jle,pt
dec
xor
fiadds
test
std
mov
mov
pop
sub
addr16
dec
ja
loope
ja
in
or
pop
push
out
bound
mov
push
xchg
push
jmp
mov
pop
stos
xor
mov
xchg
sub
ret
dec
pop
pop
pop
aas
jo
push
fists
xlat
jl
or
jne
aam
xor
jmp
adc
pop
int3
stc
sub
negl
dec
jo
cmp
imul
dec
push
jle
dec
sub
jnp
dec
sub
and
push
xor
in
mov
pop
enter
aad
jp
aam
sbb
rcll
xchg
add
sub
jp
sbb
neg
in
or
add
mov
sbb
pop
dec
das
sub
fs
jbe
add
test
movsb
push
add
lds
repz
jl
add
out
add
sbb
pop
dec
in
cltd
and
jmp
out
mov
insl
popa
lods
push
aaa
lods
pushw
sub
push
or
pop
fwait
jl
int3
rclb
inc
and
out
jmp
jo
cltd
cmpsb
adc
and
mov
add
pusha
movsl
sbb
pop
das
mov
stc
outsb
mov
dec
std
out
pop
add
sarl
not
xor
pop
ljmp
push
pop
repz
add
adc
xor
fisubrs
xor
adc
mov
xor
xchg
addr16
pusha
jne
jns
js
pop
fld
cs
push
dec
jg
and
mov
dec
mov
addl
push
mov
iret
hlt
inc
push
addr16
push
or
mov
dec
js
mov
cmp
add
or
or
mov
pop
dec
dec
stos
and
mov
add
je
mov
adc
pop
test
pop
pop
pushf
out
dec
out
jecxz
add
mov
gs
xchg
jo
cmp
xchg
call
cwtl
mov
ss
adc
pusha
cld
cmp
insl
pop
pop
push
add
jmp
jno
outsl
in
jl
mov
sub
aas
sub
jle
clc
mov
mov
push
jmp
out
lods
in
test
push
pop
jmp
inc
sub
das
or
je
lods
push
icebp
decb
mov
push
push
mov
mov
cs
arpl
imul
jnp
mov
popf
and
icebp
push
and
lea
pop
negl
pop
lock
loopne
js
sub
rol
sbb
xchg
fwait
sub
lret
sbb
ret
and
fidivrs
inc
imul
add
cmpsl
fs
jmp
fisttpll
test
subl
jmp
daa
pop
shl
push
inc
loope
test
faddl
mov
sahf
pop
push
idivb
dec
sub
sub
push
sbb
ds
dec
sbb
sbbb
lahf
nop
shrl
fcompl
enter
pop
aam
adcl
stos
fucomp
in
clc
fstsw
pop
lret
add
push
dec
movsl
pavgb
lahf
dec
fldenv
pop
repz
xchg
or
push
sbb
sbb
pop
iret
sbb
ja
inc
xchg
jge
idiv
enter
fwait
ss
mov
inc
nop
sub
aaa
ljmp
sub
mov
adc
cmp
lods
or
push
adc
mov
nop
fimull
cmp
movb
arpl
dec
pop
mov
add
pop
mov
jbe
add
adc
mov
das
cmpsl
mov
xchg
push
or
pop
stos
and
jbe
push
or
mov
nop
sbb
jb
lahf
or
xlat
add
xchg
and
std
sbbb
subb
inc
call
push
xchg
mov
xchg
jbe
rclb
push
adc
dec
mov
push
sub
push
jnp
subl
andl
das
mov
jno
rcll
mov
jmp
pop
mov
hlt
aas
inc
ret
pop
jle
jbe
add
add
inc
mov
ds
ljmp
insl
icebp
and
lock
ljmp
imul
pop
sbb
clc
push
movsb
adc
sub
xchg
lods
inc
scas
dec
and
fdivp
ljmp
ljmp
sbb
push
dec
or
push
popa
dec
or
cmpsl
cmp
icebp
xchg
xor
or
mov
cmp
aam
jp
inc
lahf
je
mov
or
stc
inc
add
inc
push
pop
nop
filds
ja
fcoml
pop
or
pop
and
mov
inc
sub
cmp
adc
or
jmp
sub
pusha
filds
adc
fistps
xor
in
imul
clc
pop
push
lcall
fisubs
divb
shr
jnp
jb
xchg
hlt
out
sbb
pop
jmp
push
mov
or
dec
jns
sbb
in
push
or
mulb
or
xor
cli
loopne
push
mov
dec
cli
mov
add
xor
pop
int3
shr
and
test
push
pop
xchg
add
rorl
xor
xlat
mov
cltd
add
push
jp
cmp
faddl
sub
incl
roll
movsb
loope
sub
add
data16
in
das
rcrl
xchg
mov
pushf
inc
jg
mov
mov
pop
adc
gs
mov
pop
xchg
gs
enter
push
push
mov
push
jl
leave
lods
add
sub
addr16
sar
pop
push
lcall
inc
or
cmp
fwait
inc
mov
imul
push
nop
jp
fs
and
idivl
lcall
inc
stos
inc
cmp
push
and
cmc
fbstp
cmpsb
clc
adc
lea
pusha
add
sub
add
nop
sub
subb
pop
mov
sbbl
mov
aam
and
sbb
jb
rcr
int
cmp
cmp
fists
xor
repnz
inc
pop
mov
inc
roll
out
add
dec
mov
in
jne
add
sub
jl
or
sbb
iret
ds
cmp
sbb
dec
add
inc
insl
addb
lods
cmp
push
nop
pop
dec
xor
pop
cld
cmp
in
nop
subb
pushf
loope
sub
add
xor
dec
pop
inc
xchg
inc
sbb
inc
push
add
not
and
add
pop
fcoml
imul
or
mov
addl
or
sbb
dec
sub
fcoml
add
mulb
push
sub
mov
push
mov
adc
adcl
test
and
mov
cmpsl
pop
xor
in
mov
lcall
mov
roll
jo
sub
sub
adc
or
mov
adc
or
lret
test
push
mov
ja
mov
aas
rclb
add
mov
out
sub
fucom
and
push
jmp
ja
push
jecxz
mov
out
add
jo
and
pop
rcr
sahf
dec
inc
clc
lea
cmovg
mov
sbb
adc
jo
mov
mov
into
aas
mov
mov
sub
pop
data16
faddp
xchg
push
sbb
pop
pop
xchg
cmpsl
rorb
cld
sbb
sub
jmp
pop
add
adc
cwtl
lea
pop
cmp
lret
sub
add
jb
add
or
and
inc
flds
add
mov
jmp
iret
pop
add
pop
mov
dec
scas
enter
mov
push
dec
add
push
push
adc
pop
rorb
add
or
jle
cld
xor
aam
add
fucomip
mov
jb
inc
and
fwait
push
sbb
sarb
or
mov
pop
cmp
jmp
hlt
mov
fs
sbb
adc
cld
dec
js
mov
pop
push
aad
std
shrb
sub
pop
fcompl
and
add
inc
sub
push
pop
and
sub
and
mov
lods
adc
xor
lds
shrb
imul
mov
hlt
dec
shr
clc
aas
sub
test
pop
push
aaa
ljmp
test
ret
in
sub
jmp
and
adc
sahf
pop
ljmp
jns
sub
sarl
incl
jb
in
in
jge
jmp
push
cmpsl
cmp
add
add
jmp
and
dec
int
jns
add
and
mov
shrb
xchg
mov
ret
data16
insl
add
pop
inc
mov
cmp
test
push
loopne
cmp
fldl
shl
sub
aam
inc
adc
sbb
jmp
xchg
in
std
sub
xchg
push
or
push
add
xor
call
mov
out
out
lahf
js
lret
sub
test
js
sub
dec
lds
xchg
mov
sub
add
mov
xchg
xchg
out
stc
push
ds
icebp
or
push
pop
add
xor
xor
call
dec
dec
sub
and
mov
incb
jo
mov
dec
sbb
xchg
add
clc
push
mov
inc
shlb
push
push
or
int
adc
in
jns
call
dec
jmp
add
pop
jb
and
jmp
jnp
push
jmp
sbb
or
inc
movsb
in
ret
repz
xchg
and
aas
jg
adc
pop
push
cmp
test
shr
jecxz
outsb
fs
pop
mov
sahf
pop
and
dec
add
test
sub
ret
ret
xor
loop
ret
mov
jne
jno
cmpb
inc
adc
out
fldl
sbb
addl
xchg
cli
pop
rorb
mov
push
mov
adcb
or
pop
sub
inc
inc
enter
dec
insb
lds
push
push
jg
xchg
and
orb
dec
aas
and
cmpl
push
in
test
insl
sub
not
lock
jmp
add
cmp
sub
xchg
test
push
add
add
or
dec
sbb
pop
mov
stos
ret
cwtl
cmp
mov
mov
jmp
out
popa
xlat
dec
fs
dec
aaa
xlat
loop
adc
sahf
push
xchg
fidivrl
mov
add
inc
dec
mov
jge
icebp
data16
daa
call
cmp
xor
push
push
pop
aas
pxor
pushf
test
mov
cmpb
xchg
not
sub
ret
push
and
add
add
jnp
mov
sbbb
xor
sub
fdivp
inc
dec
sar
and
enter
cmpsl
push
push
inc
xor
xor
hlt
pop
mov
or
fs
pop
pop
mov
sbb
push
test
or
jmp
nop
mov
adc
jmp
cmpsb
fwait
or
or
filds
adc
loop
xor
and
mov
or
and
dec
test
sub
push
bound
test
add
pop
pop
sub
push
pop
sub
dec
enter
mov
cmpb
inc
jecxz
inc
or
lea
mov
xchg
pop
or
inc
in
add
ss
mov
jmp
or
push
push
test
orb
sbb
mov
and
push
jmp
popf
pop
jmp
add
repz
shr
mov
push
push
add
pop
sub
out
add
arpl
or
xor
jnp
or
aad
mov
pop
nop
ljmp
push
sbb
popf
push
xor
in
inc
lods
cmp
adc
mov
cmp
xorb
movsb
cmp
inc
popa
fdiv
and
test
cli
cmp
mov
sub
inc
jne
add
repz
jmp
adc
cli
imul
inc
or
inc
andl
ret
imul
cld
mov
js
jg
add
pusha
mov
jle
dec
mov
xor
push
test
je
jecxz
out
sarl
push
les
mov
mov
add
lea
xor
mov
loope
push
pop
cli
mov
push
cltd
push
pop
cs
dec
dec
sbb
pusha
das
stos
mov
popf
sbb
mov
imul
and
repz
pusha
push
cmp
das
pop
xor
cs
sub
jmp
daa
and
or
mov
cld
stos
movsl
xchg
in
jmp
mov
cmc
dec
sub
mov
call
cmp
out
xchg
xor
arpl
lods
sub
loopne
cmp
negl
xchg
mov
stos
data16
inc
dec
xchg
push
dec
push
hlt
jno
mov
arpl
sub
popa
fs
outsb
adc
mov
or
or
mov
push
mov
or
scas
subl
push
addl
loop
outsl
sbb
out
ret
xlat
out
and
outsb
roll
push
pop
ret
out
popf
pop
ljmp
adc
dec
in
pop
and
sub
pop
sub
mov
sbbb
dec
pop
adc
push
or
add
test
push
imul
aam
sub
jmp
loope
add
dec
add
xor
and
push
sbb
inc
add
sub
loope
add
sub
and
hlt
loop
sub
shlb
inc
das
dec
dec
add
sbb
sarl
icebp
add
lods
jns
mov
inc
leave
sub
lret
add
and
jmp
mov
mov
mov
push
mov
add
test
iret
mov
push
sbb
cmpsl
xchg
cld
add
and
xchg
dec
rorl
std
call
adc
int3
cmp
cmc
and
and
inc
popf
push
mov
popf
inc
out
push
jl
fnstcw
push
adc
emms
mov
out
pusha
xor
out
adcl
cmp
jecxz
push
daa
cmpsl
inc
mov
add
pop
shlb
fldl
jmp
push
xchg
mov
mov
inc
lret
xchg
shl
adc
insl
popf
xlat
test
push
push
and
dec
add
aas
inc
out
dec
mov
push
push
loopne
push
inc
jae
or
pusha
sub
xor
add
add
push
fildl
sub
push
mov
add
arpl
orl
ljmp
icebp
mov
xchg
data16
and
sbb
and
sub
jns
add
jge
cli
inc
mov
es
cmp
or
xchg
add
sbb
push
rcll
adc
shlb
inc
mov
adc
cltd
leave
sbbb
daa
pop
pusha
rcll
icebp
out
push
es
rorl
adc
cli
pushf
movsl
aad
subb
jg
inc
pop
ja
loop
mov
out
pop
repz
lret
filds
mov
and
test
cs
push
add
scas
xor
jg
or
inc
sbb
outsl
pop
dec
and
sub
fldl
int
pop
inc
push
push
sbb
negb
push
push
cli
inc
test
fcos
push
insb
xor
mov
mov
mulb
pop
mov
out
push
mov
fmuls
sbb
ljmp
jmp
ljmp
pushf
xlat
or
clc
aas
adc
incl
or
push
sub
dec
and
push
pop
fisttpll
scas
pop
ss
mov
cmp
repnz
fsubrs
fsts
ror
outsb
and
rcrl
jle
cmp
xlat
mov
push
rorl
shrb
inc
cld
and
xchg
outsl
sar
and
mov
pop
int3
xchg
push
cmc
cmc
insb
ret
lds
sbbl
push
int3
pop
xor
loop
div
add
add
test
dec
adc
fwait
add
pushf
adc
inc
inc
push
cwtl
push
xor
inc
mov
roll
dec
in
adc
dec
cli
inc
out
ret
aaa
xchg
add
xchg
mov
push
xchg
sbb
repz
dec
or
inc
add
mov
lret
mov
aam
lea
les
mov
cltd
imul
test
push
fcmovnb
rol
js
fs
xchg
xchg
mov
sub
ds
sarb
push
or
jbe
add
mov
push
xchg
mov
mov
leave
add
push
dec
jmp
mov
xchg
out
pop
in
inc
dec
lock
addr16
mov
scas
mov
xchg
jp
xor
inc
jo
in
mov
arpl
push
shll
and
jmp
and
jbe
lcall
incb
xchg
cmp
pop
mov
lret
cmp
into
dec
dec
mov
repz
jbe
lock
jmp
jns
or
aam
lds
cmc
test
lea
iret
mov
aam
clc
je
inc
push
xchg
out
shl
xchg
jg
js
repnz
jb
shrb
push
hlt
add
loopne
xchg
xor
jbe
out
sti
or
sarl
xchg
cmp
out
jmp
push
push
test
and
sbb
push
jmp
out
add
add
and
adc
insl
jne
sub
int3
xchg
notb
rclb
movsb
ja
add
pop
jecxz,pt
dec
add
jmp
test
jecxz
jae
sti
loop
hlt
ljmp
cmp
sbb
cltd
insb
shl
mov
cs
ret
xlat
rcll
imul
add
xchg
cltd
xchg
xor
pop
mov
icebp
stos
add
repz
mov
jb
mov
pop
push
or
cmp
cwtl
pop
rolb
jo
sub
push
mov
and
jne
pop
or
jae
xor
mov
addl
ficoms
rolb
inc
mov
adc
jb
mov
adc
or
add
movb
loopne
jns
xor
ss
xor
jecxz
jmp
pop
mov
xor
xor
push
shrb
les
jo
jmp
push
push
pop
or
lds
xor
pop
add
fsubs
sbb
jg
es
sub
add
je
cmp
mov
and
dec
sub
imul
shrd
ss
into
icebp
pop
push
inc
cltd
mov
mov
or
pop
es
mov
out
test
call
jp
sbb
hlt
xlat
push
pop
rorl
daa
data16
in
ror
fnstenv
std
inc
jns
xor
sahf
jne
mov
cmp
xchg
dec
rolb
scas
hlt
push
sbb
js
add
cmp
js
inc
jb
mov
xchg
daa
pusha
xor
ja
fcmovnb
lahf
shl
fldl
loopne
cli
xor
out
cmpsl
jl
pop
aam
mov
jmp
sbb
fnstcw
pop
in
mov
bound
mov
jmp
inc
jle
addl
fs
cld
jecxz
inc
in
push
js
daa
pop
jae
inc
or
cmp
out
sbb
inc
sub
pop
ret
mov
push
jb
pop
loop
sub
and
aas
das
add
xchg
pop
aaa
pop
and
pop
add
push
push
cmp
je
cltd
pop
push
and
push
adc
pop
fisttps
and
mov
xchg
push
xchg
mov
push
iret
or
and
mov
push
cld
push
dec
adc
xor
xchg
jne
fildll
xor
push
xchg
inc
push
xchg
fcmovbe
mov
dec
sub
pop
cld
scas
push
add
mov
xor
mov
jmp
jecxz
fs
inc
aad
jno
mov
imul
jnp
push
inc
icebp
scas
aam
push
ret
push
clc
cmp
sahf
xor
and
add
popf
mov
sbb
cmp
jne
pop
rcl
add
jae
ss
jmp
xchg
inc
icebp
jno
shr
jecxz
inc
sti
es
push
loopne
das
int3
dec
popf
sarb
das
test
inc
sbb
pop
cmp
lods
lret
out
cmc
sub
mov
jmp
jecxz
ljmp
or
jmp
sbb
cmp
out
pop
fnstsw
jle
insb
out
inc
cmpsl
push
xchg
mov
rcll
inc
adc
adc
test
movl
out
sub
les
popf
ret
and
roll
add
pop
and
push
pop
or
push
push
jmp
push
pop
or
push
mov
aaa
dec
xor
or
mov
aad
imul
or
shrb
push
cmp
push
adc
add
in
cltd
pop
sub
roll
add
bound
inc
enter
popa
negl
xorl
and
ficoms
lods
adc
push
add
push
cmpl
mov
ret
or
and
mov
inc
out
sub
sub
subb
nop
mov
adc
push
pop
sti
xchg
ficoms
or
lret
ljmp
in
xor
jmp
mov
add
fwait
and
filds
adc
jno
imulb
shr
in
ret
jo
nop
pusha
clc
ret
mov
xchg
imul
push
mov
popa
xchg
and
or
rorb
negb
pop
jle
sub
add
inc
push
xorl
cld
mov
push
mov
mov
and
xchg
shl
add
jg
addl
jmp
jecxz
andb
iret
or
addr16
repnz
mov
pop
dec
xor
les
lret
push
cmpsl
push
fst
jne
call
or
dec
pop
dec
stos
js
cmp
or
fcoms
dec
and
or
sarl
lret
sbb
stos
outsb
mov
mov
inc
and
std
jmp
dec
adc
sbb
push
sub
jl
test
mov
ret
push
dec
and
pop
ljmp
push
js
or
ss
cld
xor
loope
jne
lods
add
sub
fadds
inc
add
sub
outsb
mov
es
add
mov
or
mov
rorl
sti
dec
sti
mov
orl
ljmp
enter
and
lret
lcall
inc
rolb
sub
xor
stos
pusha
jl
mov
or
jmp
arpl
push
add
imul
cmpsb
dec
dec
mov
push
cwtl
mov
dec
fucomp
sub
jmp
add
inc
push
dec
call
xor
push
sbb
add
or
fstpl
aad
shrl
mov
add
cmc
xchg
in
ds
dec
aaa
and
mov
dec
das
or
xor
mov
jae
push
leave
sidtl
jg
lods
in
sub
stos
jmp
push
enter
inc
mov
stc
imul
mov
je
and
mov
sub
scas
mov
mov
sysenter
dec
cmp
fucompp
cmp
add
jns
jbe
sbbb
push
adc
adcb
mov
test
mov
pop
adc
push
dec
jp
xchg
pop
xor
push
mov
or
std
xchg
add
sbb
fs
gs
and
jae
cmpsb
lods
push
or
dec
adc
xor
test
or
in
mov
push
inc
and
push
and
cmp
sbb
mov
pop
out
sub
push
add
mov
jae
dec
sub
test
dec
cld
jbe
mov
sub
add
cmpsl
lahf
jo
xchg
add
in
int3
in
add
jae
adc
lret
sub
enter
fstl
add
mov
roll
mov
sbb
push
out
movsb
mov
jecxz
inc
cmp
adc
hlt
add
outsl
sub
add
punpckhwd
jle
add
imull
out
xchg
and
cmp
add
out
in
pop
lahf
pop
pusha
mov
xchg
adc
cwtl
imul
sbb
pop
in
jge
mov
sub
ds
mov
inc
add
icebp
or
xchg
xchg
adc
pop
add
je
inc
jg
mov
or
cld
add
stc
pop
push
jns
push
inc
mov
push
mov
loope
add
pop
xor
sbb
add
cmp
popl
add
aad
inc
cmp
inc
mov
mov
jns
pusha
sbb
push
sub
push
fwait
adc
xor
cmp
dec
push
and
add
add
pop
cli
and
sbb
pop
cld
cmp
dec
dec
add
ret
aad
jmp
sub
pop
adc
dec
aad
or
push
push
cwtl
outsl
add
jecxz
pop
dec
jmp
mov
push
mov
movl
dec
xchg
sub
addb
or
and
mov
dec
mov
stos
pop
mov
leave
pop
sub
movsl
adc
ss
push
cmp
sub
cmpsb
mov
pop
pop
mov
jb
mov
add
xor
mov
popa
in
icebp
xchg
sub
getsec
xor
sbb
sub
push
jl
add
roll
push
mov
push
push
or
inc
repnz
pop
cmp
mov
push
xchg
testb
sub
pop
cmp
xchg
sbb
out
and
pop
pushf
mov
push
lods
push
add
out
push
mov
shlb
push
inc
push
jge
add
out
ret
dec
xor
nop
repz
mov
push
push
inc
push
add
and
jbe
inc
addb
inc
clc
pop
add
sub
pop
aam
jmp
xor
cmp
jmp
dec
nop
push
repnz
gs
sbb
ficomps
mov
xchg
sbb
mov
shr
xor
push
out
dec
neg
aam
xchg
and
jmp
je
dec
jmp
push
in
sbbl
mov
push
or
inc
int
dec
stos
fstpl
ja
adc
hlt
shrb
adc
enter
sub
and
push
mov
pop
or
lock
addr16
or
mov
sub
pop
nop
sbb
add
sub
int
cmp
je
in
out
jo
xchg
ja
xchg
cmpb
nop
mov
xor
pop
loop,pn
dec
out
lret
mov
sahf
jp
sub
js
clc
cmp
or
ljmp
or
jecxz
push
out
and
sub
and
fnstsw
repnz
pop
fimull
jne
cwtl
movsl
add
dec
test
sbbb
shrb
push
add
pushl
in
lods
push
int
stc
ljmp
adc
test
add
dec
or
or
das
pop
jecxz
arpl
push
lret
jo
push
mov
lret
ljmp
ret
push
test
dec
add
je
sbbb
add
mov
into
daa
shlb
movsl
addr16
enter
inc
movsb
push
add
and
sub
mov
loopne
mov
loope
and
aam
repz
pop
roll
mov
rcll
jne
fiadds
sub
inc
xchg
mov
add
pop
jg
aad
pop
dec
fdiv
push
sar
lret
insb
mov
notl
xor
dec
add
add
fwait
inc
sub
mov
aam
push
jb
inc
jmp
sti
cmpsl
insb
xchg
mov
inc
jg
pop
sub
pop
lods
push
cld
sub
push
lods
orb
mov
sub
add
push
cwtl
fmul
push
add
mov
jle
or
test
mov
sub
push
mov
inc
ror
insl
rclb
dec
mov
jne
xor
icebp
repz
xchg
pop
inc
mov
daa
clc
and
or
dec
adc
jl
aaa
or
sbb
xor
jmp
and
inc
pop
xor
sub
sbb
pop
call
mov
fprem
stos
dec
scas
lret
js
ljmp
jb
xchg
sti
jge
and
push
inc
pusha
xor
jle
push
xlat
je
inc
cmc
test
add
movsl
aad
xor
fsubr
enter
mov
jo
add
ret
outsb
pop
jmp
or
inc
movsb
or
or
cmp
cmp
dec
add
pop
inc
not
dec
pop
mov
push
dec
mov
push
dec
pop
enter
mov
mov
cmp
aaa
push
pop
addr16
jle
push
or
das
rorb
aad
dec
xchg
inc
mov
xchg
hlt
and
out
add
pop
adcb
stc
jmp
repnz
in
mov
enter
jns
mov
pop
xchg
aad
mov
inc
dec
in
xchg
adc
pop
mov
pop
cld
inc
mov
call
in
add
addr16
or
or
es
add
cmpl
add
mulb
out
add
xor
inc
fists
cld
or
push
sti
sub
push
js
scas
push
dec
mov
adc
or
out
js
mov
cmc
lret
ret
mov
rcll
ret
push
xor
shr
push
in
test
cmpsl
dec
cli
push
lahf
rclb
add
mov
cmpsb
adc
adc
add
pusha
fs
sbb
insb
cmp
or
adc
sub
or
sbb
paddd
loope
repnz
add
loop
mov
fidivl
clc
pusha
and
pop
popf
cmpsb
ljmp
mov
mov
pop
push
sbb
pop
cmc
inc
mov
lods
mov
out
add
pop
pop
das
pop
js
mov
insb
aas
movsb
jno
loop
dec
pop
clc
add
xor
scas
insb
insb
pop
lds
xchg
fiadds
mov
sub
cltd
std
pop
inc
addb
jg
mov
add
mov
clc
test
lcall
sub
cmpb
jl
nop
stos
push
into
push
cs
shl
jnp
or
sbb
or
aam
mov
in
jge
clc
mov
and
clc
adc
jmp
push
push
and
nop
add
mov
std
inc
mov
sbb
pop
movl
and
lods
dec
mov
ret
pop
lret
imulb
aad
jae
push
out
xlat
and
mov
xchg
fmul
xor
sbb
stc
les
or
sbb
or
cmp
push
add
mov
ret
jbe
pop
jecxz
push
inc
adc
or
dec
das
rcll
repnz
mov
inc
sub
pop
clc
adc
mov
or
psubsw
mov
add
cli
into
cmp
sub
add
dec
sub
mov
and
fldl
jne
leave
gs
outsl
rclb
jl,pn
iret
imul
cwtl
cmpsb
cmpsb
mov
inc
pop
or
push
repz
aaa
es
and
aam
push
pop
push
mov
inc
ljmp
idivb
push
add
adc
inc
push
cmp
inc
mov
loopne
push
inc
sub
and
sub
dec
jmp
xchg
pop
sti
arpl
sbb
movsl
or
add
adcb
mov
rcr
adc
push
jmp
push
inc
or
sbb
in
fiadds
or
dec
std
jg
jns
add
loope
adc
pop
aam
insb
push
mov
arpl
ret
inc
inc
xchg
and
push
or
in
xor
enter
mov
add
test
ret
inc
add
sbb
jb
andl
loop
mov
dec
inc
add
stos
add
jb
imul
sub
scas
pop
inc
mov
sub
dec
dec
mov
pop
xchg
mov
sbb
fs
test
jmp
mov
xor
gs
ljmp
pop
or
jno
and
fs
sub
or
xor
or
pop
mov
std
mov
jmp
mov
pop
xor
push
not
pop
ljmp
add
cltd
sbb
pop
mov
imul
push
lret
jmp
shlb
cmp
dec
adc
mov
lcall
imul
cli
mov
daa
or
xorl
lods
lcall
add
out
insb
cmc
mov
hlt
dec
ljmp
les
and
cs
sarb
jle
aad
push
mov
pop
jmp
and
add
mov
ljmp
and
cmpsl
fstl
js
inc
and
pop
mov
add
xor
pop
or
jmp
outsb
xchg
mov
jmp
sahf
push
push
fld
xor
outsl
testb
pop
adc
mov
insl
pop
push
adc
sub
add
jle
or
mov
add
sub
xchg
mov
loope
or
int3
mov
mov
add
fists
and
repnz
adc
jle
aam
rcrb
inc
push
mov
jp
xchg
push
push
nop
mov
enter
and
mov
and
lods
push
jmp
push
lahf
pop
mov
or
xor
ret
sbb
inc
pop
dec
add
pop
dec
test
push
or
test
xor
mov
push
jp
sti
cmc
data16
daa
push
incb
inc
mov
fcompl
add
push
sub
inc
sub
pusha
subb
add
or
inc
add
lret
fsubl
dec
xchg
daa
pop
mov
fldl
lcall
push
sbb
mov
test
or
pop
mov
mov
adc
aad
int3
inc
mov
jp
roll
xor
test
iret
test
pop
mov
rorl
mov
sub
outsb
inc
jle
paddb
sar
popa
pop
jo
push
icebp
sub
dec
aaa
mov
fstl
xchg
pop
fstps
call
stc
pop
sti
popa
xchg
leave
push
add
decl
inc
pop
aad
or
jo
ds
xchg
xchg
xchg
ret
jle
loope
jne
loop
pop
xor
push
inc
rcll
jne
mov
lcall
dec
insb
or
das
into
push
idivl
ret
pop
adc
push
push
sbb
dec
sti
xchg
push
cli
jecxz
jp
lods
mov
out
sbb
ds
xor
xor
cmp
pop
jecxz
test
sub
sub
int3
xor
shlb
jnp
dec
xor
sbb
test
sahf
sub
jge
cmpsb
push
jmp
push
cmp
pusha
pop
dec
push
hlt
or
xor
push
xor
lret
jbe
lcall
sub
incl
sbb
jl
xor
loop
push
loopne
imul
je
add
jbe
lret
sar
pushf
push
pop
push
jmp
cli
iret
xor
mov
xorb
add
sub
adc
xchg
fdivrl
fidivs
in
pop
jmp
fimull
mov
xor
inc
test
mov
mov
add
and
cmpsb
dec
mov
shrb
sarl
mov
sub
jp
sbb
xchg
pop
push
xchg
add
pop
push
outsl
or
adc
push
xor
stos
push
cltd
jb
cltd
mov
add
pop
inc
ror
fdivrl
add
pop
mov
fs
das
pop
xchg
add
add
shr
mov
inc
adc
mov
and
je
in
mov
imul
fiaddl
dec
lcall
pop
sbb
and
jmp
mov
pop
sub
pop
jl
rcrl
loopne
add
sub
cmp
mov
int3
xor
add
pop
add
call
mov
lret
in
lods
and
into
jae
mov
lds
push
mov
loop
rcr
out
loopne
mov
test
leave
dec
and
dec
scas
test
xor
xor
ljmp
inc
add
push
mov
pop
xchg
negl
popa
outsb
jmp
scas
mov
adc
ljmp
cld
mov
shll
pushf
xchg
add
test
incb
cli
push
jae
add
push
cmp
test
inc
stos
rcll
jg
cmp
ret
jno
push
adc
sti
pop
je
outsl
test
aad
mov
pop
sub
lret
and
jecxz
push
mov
push
pop
out
xor
stos
cmp
cmp
and
insb
pushf
add
and
aas
add
adc
insl
pop
jmp
cmpl
or
add
pop
jbe
push
lret
hlt
ret
test
testb
test
mov
ret
icebp
jmp
push
sbb
outsl
aas
int
das
out
dec
mov
adc
add
int3
out
add
push
jb
adc
dec
jae
js
testl
jno
arpl
xchg
jmp
das
mov
ja
sbb
ljmp
add
pop
push
jmp
outsl
ret
mov
rorb
push
push
push
dec
jmp
add
push
mov
mov
cli
insb
adc
cmpsb
sbb
shlb
dec
inc
push
cwtl
push
iret
into
or
jae
jmp
loope
cwtl
in
fisubs
add
sarl
and
movsl
les
dec
fnsave
cmp
mov
mov
add
cmp
std
insb
bound
mov
movsl
adc
daa
es
xor
adc
dec
mov
out
enter
and
push
pop
push
push
pop
pop
test
ljmp
pop
pop
or
pop
sbb
jmp
incb
out
pop
pop
or
jmp
pop
push
add
dec
jo
pop
add
stos
ret
dec
xchg
lcall
cmc
cwtl
xchg
mov
test
or
not
data16
daa
xor
shlb
push
lods
dec
add
mov
xchg
cwtl
and
pop
mov
or
test
or
cmpsl
pop
addr16
and
je
in
jno
pop
repnz
mov
das
testb
daa
sub
push
pop
lret
scas
jmp
test
fwait
mov
adc
lret
mov
mov
mov
jnp
sub
jno,pn
and
xchg
sub
add
mov
loopne
or
bound
ljmp
push
sbb
pop
jmp
adc
sarb
push
xorl
in
pop
out
fsubrl
xchg
pop
adc
jno
or
push
neg
add
out
ret
push
push
pop
push
push
dec
test
add
cmc
pop
cmp
mov
sbb
sbb
xor
xlat
pop
pop
loopne
pop
push
push
out
cmp
mov
pop
insl
outsl
sbb
adcb
stos
imul
out
pusha
fwait
cli
dec
sar
push
push
inc
xor
push
push
dec
nop
out
mov
nop
mov
fdivl
mov
into
es
mov
idiv
push
bound
jnp
imul
inc
add
adc
xchg
clc
sub
sbb
xchg
push
es
sbb
cmc
inc
in
je
lahf
insb
xor
ja
xor
enter
sub
push
or
jge
jp
popf
or
pop
jmp
mov
outsl
or
lret
cmc
push
shlb
add
pop
push
push
adc
outsb
test
inc
mov
inc
and
dec
pusha
sbb
repz
mov
shl
or
add
push
mov
pushw
sbb
xchg
cmpsl
jmp
stos
into
mov
mov
dec
out
pop
decb
subl
jnp
clc
imul
jnp
or
pop
shl
cmp
xchg
ret
jb
mov
dec
adcl
cltd
adc
mov
adc
add
pop
cmp
orb
or
negb
fcompl
inc
shl
imull
add
sti
mov
mov
xor
aam
stos
in
hlt
sarl
pop
dec
mov
push
dec
std
xchg
mov
test
cs
call
adc
xor
xchg
mov
mov
cli
fdivs
mov
popf
dec
aaa
mov
or
inc
push
jge
shrb
or
push
mov
inc
rcrl
int3
mov
mov
mov
js
mov
jnp
loop
sub
mov
dec
and
jne
loop
sbb
sbb
push
jnp
iret
pop
and
and
inc
repz
jnp
in
and
push
pushf
filds
push
roll
icebp
or
pushf
rolb
int
pusha
sbb
or
or
pop
and
orl
or
pop
les
add
inc
or
icebp
jmp
and
movswl
aam
pop
mov
push
pop
push
aas
ret
shrb
pop
jmp
push
and
pop
popa
and
adc
add
testb
dec
xor
shl
pop
or
mov
leave
sub
mov
or
test
add
adc
shrl
add
lds
and
xchg
adc
pop
add
adc
mov
xor
fs
dec
stos
mov
mov
sub
sbbl
sbb
sub
arpl
jno
cld
inc
fs
mov
push
push
mov
addb
loope
sbb
leave
shll
mov
pop
subb
adc
nop
mov
pusha
add
adc
jnp
inc
ja
addr16
test
cli
pop
in
mov
mov
daa
lret
push
xor
pop
inc
dec
test
jp
pop
out
fs
dec
adc
or
sub
xor
add
add
jmp
mov
lret
in
orb
rorb
jne
pop
cmp
sbbl
cmpsb
popf
je
out
movsl
mov
dec
mov
adc
sub
xor
push
and
in
push
repnz
push
push
ds
mov
shrl
mov
sub
sbb
enter
sub
js
ret
xchg
pop
mov
cmp
or
test
add
add
neg
push
mov
ds
inc
mov
adc
test
stos
inc
js
and
pop
dec
xchg
jmp
jmp
jo
fs
leave
push
pop
scas
pop
pop
sub
jmp
xor
jmp
dec
xor
add
js
pop
jnp
adc
add
xorl
mov
fsubl
aas
mov
ss
popf
sbbb
push
dec
pop
bound
jmp
pop
orb
mov
lcall
icebp
mov
or
push
sbb
mov
push
pop
pop
pop
popf
jle
inc
pushf
daa
pop
lock
push
les
aam
jmp
scas
pop
jmp
xchg
push
pop
fsubrs
clc
mov
mov
lods
sub
mov
ds
xor
nop
adc
sub
add
jnp
aaa
mov
inc
push
test
add
xchg
xchg
cmp
test
push
mov
push
xor
nop
xor
outsl
loopne
jmp
testb
push
enter
add
cltd
out
push
xor
sahf
mov
adc
scas
inc
or
mov
out
xchg
std
fisubrs
mov
jb
and
push
xchg
ljmp
jmp
daa
push
ror
push
inc
jo
out
pusha
fidivrs
inc
in
or
fld
or
add
iret
icebp
xchg
movsl
fidivrs
push
lret
pop
mov
daa
cli
jns
push
xchg
cmp
mov
push
push
push
xor
add
push
sti
stos
sub
push
fsubs
decb
aas
pop
sarb
ret
dec
mov
jbe
mov
xor
push
cli
push
jmp
aam
xchg
fdiv
push
cmpsb
test
sbb
mov
loope
repz
leave
cs
pusha
pop
inc
push
adc
push
push
addb
movaps
sbb
mov
les
stos
cltd
cmp
rcrl
lods
and
or
adc
nop
pop
jmp
and
pop
sub
add
xlat
mov
mov
jb
cmc
lock
dec
fwait
test
jecxz
das
jmp
mov
mov
ret
mov
dec
and
rcrb
push
and
cmp
addr16
mov
add
pop
xor
jle
cmp
push
jo
pop
outsl
ror
leave
sbb
push
mov
pushf
jne
rcl
sti
or
sti
pop
mov
fmuls
aas
pop
daa
addr16
mov
mov
push
and
inc
pop
push
mov
aad
mov
rol
push
sahf
add
mov
sbb
push
push
cmpsl
movsb
mov
pushw
cwtl
or
sub
mov
and
rcrb
js
adc
rolb
push
sub
mov
lock
jmp
int
mov
cltd
sbbl
xor
or
jle
insl
push
xchg
repnz
or
push
sub
cvtps2pi
sub
adcl
cmp
push
fmulp
sub
daa
and
push
mov
sbbl
add
call
push
lret
sub
push
xchg
pop
aam
mov
aam
and
add
imul
jmp
mov
iret
arpl
cmpsl
testl
lods
and
divl
or
pushf
pusha
mov
adc
mov
inc
add
sbb
loop
push
xchg
clc
fs
orb
pop
jno
es
adc
shl
out
xor
nop
inc
push
mov
neg
sahf
cld
xor
jmp
outsl
and
push
rolb
outsb
dec
xchg
sbb
mov
jmp
pop
jne
daa
add
push
scas
push
ds
inc
mov
cwtl
xor
std
pop
cmp
jnp
ljmp
mov
les
test
sbb
cmp
jae
imul
xor
push
sbb
inc
lods
mov
pop
fcompl
outsl
push
pop
mov
mov
xchg
add
shr
add
dec
and
fstpt
mov
mov
mov
sub
and
xchg
hlt
mov
dec
mov
popf
fistps
sbb
mov
pop
sti
inc
add
outsb
aam
popa
nop
and
and
fisubrs
mov
fisubs
mov
push
xchg
and
xor
bnd
pop
push
mov
stos
or
jmp
sarl
mov
sbb
leave
ss
es
jge
add
imul
jmp
dec
push
mov
scas
sarb
jb
popf
adc
data16
adc
xchg
shlb
pop
mov
nop
pushw
loope
lods
inc
jmp
push
je
rcr
nop
jge
push
push
sub
cmpl
sub
pop
mov
push
mov
inc
roll
pop
adc
cli
repz
jmp
mov
jns
in
sub
pop
addl
mov
shr
xchg
inc
mov
jecxz
add
jmp
jns
pop
sbb
or
or
add
push
fcompl
repnz
aad
out
xchg
mov
mov
jmp
xchg
mov
mov
add
not
push
add
push
sbb
sub
rcrl
sbb
int
pop
xlat
inc
push
add
fistps
dec
pop
jmp
sub
loop
mov
jns
xchg
inc
testb
mov
out
inc
adc
and
in
jp
addb
mov
jg
sub
loopne
xlat
add
mov
dec
add
mov
and
push
pop
adc
mov
jmp
or
dec
pop
pop
push
add
dec
sub
push
faddl
movsl
push
fidivrl
push
push
jno
jmp
pop
push
in
imul
loope
xchg
add
cmp
call
iret
pop
and
lret
xchg
mov
cli
rcl
jmp
sub
addr16
das
test
test
sti
dec
aad
fmuls
add
sub
mov
lock
mov
test
cmpl
mov
adc
mov
clc
outsl
sub
hlt
cmpsb
pinsrw
adc
loop
shlb
ds
fdivrs
ret
decb
rclb
or
clc
aam
mov
pop
bound
icebp
pop
pop
jbe
jmp
enter
dec
scas
cmp
popf
int
and
movl
daa
test
push
mov
xorb
mov
push
and
popf
cmp
shrb
mov
push
testl
arpl
xchg
clc
push
sbb
popa
cmpb
lret
pop
jne
xchg
add
jecxz
pushf
mov
dec
aas
inc
sub
adc
xchg
sub
movsb
dec
mov
pop
mov
push
xchg
jns
and
inc
xor
gs
ret
ja
dec
add
cmp
adc
loop
divl
daa
jge
imul
adc
ss
sub
add
jmp
aad
mov
orps
bnd
repz
and
or
mov
aas
sub
mov
repnz
xor
sbb
pop
bound
and
push
lods
das
adc
ljmp
loopne,pt
out
pop
dec
cmp
jae
ret
dec
pop
clc
jmp
out
enter
inc
and
xorl
push
std
sub
outsl
cmp
xchg
pop
repz
stos
inc
movsb
bound
loop
insb
add
add
and
push
cs
repnz
ret
repnz
or
jecxz
ds
adc
jmp
pusha
push
sub
lret
hlt
push
pop
mov
dec
push
in
xchg
cmp
push
mov
jmp
pushf
cmpsb
out
jbe
cmp
lcall
rol
in
data16
or
out
adc
jmp
pop
ss
adc
or
xor
addr16
pop
cwtl
xlat
mov
gs
push
negb
jg
push
mov
icebp
test
mov
cmpsb
inc
xchg
stc
stc
outsl
into
jg
stc
in
xor
subb
test
shl
fsubs
xlat
cmp
add
and
prefetch
stc
or
in
pop
das
push
mov
rcrl
push
fwait
mov
test
shlb
cltd
movsb
imul
xorb
mov
das
dec
iret
outsb
insl
dec
push
jmp
fists
push
add
pusha
push
faddl
ja
lahf
add
and
xchg
sub
and
ficoms
pop
dec
adc
lret
int
and
std
nop
ja
hlt
jp
shlb
and
mov
or
jle
xor
mov
push
stc
bound
aad
jae
sub
dec
push
in
sbb
xor
pop
outsb
hlt
pop
ret
jns
mov
pop
mov
and
pop
pop
out
xor
push
or
cwtl
or
push
adc
push
mov
sub
adc
xchg
dec
sub
lds
mov
lsl
mov
mov
inc
ss
fadd
out
add
data16
mov
pop
push
in
jmp
aam
js
mov
cld
pop
push
test
pop
mov
dec
dec
jge
imul
xchg
mov
popa
dec
int3
jbe
lahf
push
movsb
cltd
out
mov
add
xor
push
mov
pop
mov
mov
fsubrl
loopne
es
xchg
or
loope
push
push
push
pusha
jmp
std
mov
inc
insb
pop
xchg
pop
push
jmp
aaa
or
std
lods
push
fildl
and
addr16
sub
call
cwtl
pop
add
das
inc
jl
pop
scas
lret
mov
pop
jbe
and
les
call
int3
cmpb
xor
mov
jge
and
xlat
inc
inc
dec
adc
jge
push
add
push
cmp
push
sbb
jmp
add
or
push
pop
shr
jmp
push
rcl
mov
pop
lods
daa
xchg
inc
mulb
outsb
mov
pop
add
add
loop
xchg
sbbb
fstpt
js
sbb
sub
xchg
ficoml
pop
lea
sbb
fbstp
push
sub
mov
sbbb
fdivl
lret
mov
sbb
int3
adc
pusha
sbb
jae
pop
mov
sub
xlat
into
sub
jmp
lds
xchg
sahf
or
orb
sub
insb
dec
or
negb
pop
jmp
ret
lea
jge
add
push
mov
fst
xor
int
bound
mov
sub
out
or
inc
jns
rcr
or
cmp
add
sub
sub
clc
mov
shrb
scas
pop
aam
pop
pop
popa
sbb
sbbb
push
cmp
dec
mov
jmp
cli
call
and
das
mov
sub
push
xor
lods
xor
add
xor
hlt
push
sub
addb
or
lds
or
in
repz
cmp
cmpb
push
cmp
enter
add
jl
mov
rcrb
cmp
jns
and
inc
push
add
rcll
mov
scas
xlat
sbbl
lahf
push
and
stc
outsb
call
test
push
or
fcmovb
push
jne
scas
jecxz
lahf
js
and
xor
leave
jg
fisubrl
cmc
sub
addr16
call
bound
dec
push
adc
jmp
shl
pop
dec
dec
add
inc
dec
js
inc
add
add
push
fucomip
pusha
and
push
popf
sahf
lock
mov
loope
test
bound
add
fisttpll
stos
and
mov
in
push
push
mov
or
pop
es
mov
push
mov
xor
mov
dec
loopne
dec
adc
push
lock
rcll
popa
pop
add
fdiv
xor
jmp
jmp
pop
lret
daa
cld
pop
jo
mov
mov
add
cmovbe
mov
dec
inc
enter
adc
xor
mov
jo
sub
xchg
pop
or
or
xor
push
add
gs
fcmovne
lods
mov
out
nop
xchg
pusha
insb
jmp
dec
shll
cmp
das
int
pusha
movsb
rorl
and
test
andb
cmp
sbb
out
dec
pop
arpl
push
nop
movsl
inc
fidivrl
les
les
lret
xor
jne
add
insb
lahf
call
add
out
push
btl
jne
or
lcall
lods
sbb
adc
popa
test
aam
push
and
push
cltd
jb
add
jl
pop
pusha
cmpsb
sub
sub
jmp
or
sub
pop
sub
or
outsl
andl
pushf
outsb
mov
mov
jnp
nop
push
or
dec
in
int3
push
addb
pop
ljmp
clc
repnz
mov
pop
jg
out
jmp
inc
lahf
je
pop
mov
rorl
loope
push
lcall
movsl
sbb
mov
jle
inc
sbb
fs
stc
sahf
stc
je
ljmp
andl
repnz
orl
jnp
or
jmp
mov
sub
add
xchg
insb
push
cs
out
pop
je
xchg
push
jae
add
es
pop
adc
dec
dec
push
cmp
push
es
jb
icebp
sub
push
dec
rcrl
inc
std
adc
add
jne
sbb
dec
add
dec
pop
test
stc
imul
xor
pusha
cwtl
addr16
add
outsb
dec
jg
lret
add
adc
pushf
push
cmp
lods
stos
loop
adc
fcoms
mov
out
sub
test
pop
xchg
mov
hlt
imul
out
clc
push
jns
adc
lds
sub
add
in
es
movsl
cld
fwait
lock
sub
in
add
inc
daa
push
dec
mov
xor
xor
stc
jo
add
sarb
lock
fwait
ret
jg
mov
into
and
add
sub
push
das
mov
push
xchg
loopne
jnp
inc
popa
repz
add
mov
pop
scas
insb
lahf
test
dec
stos
add
mov
clc
test
movsl
clc
stos
xorl
cmpb
dec
inc
mov
xchg
daa
sub
les
mov
or
jmp
push
xchg
adc
in
add
in
xor
cmp
lret
xor
add
out
adc
clc
xchg
daa
fildll
dec
jns
pop
sti
cmp
or
dec
push
out
or
push
subb
faddl
push
push
push
pop
or
add
lods
and
adc
bound
ss
outsl
hlt
outsb
les
add
sahf
pop
pop
psrlw
mov
push
inc
add
dec
call
aam
iret
jecxz
or
and
test
test
add
loop
daa
outsl
fistpll
pop
jns
ds
push
mov
sub
sub
xchg
add
adc
fwait
sub
ja
test
movsl
lret
into
test
lret
push
adc
xor
or
movsb
pop
pop
push
fiadds
sbb
push
dec
or
inc
mov
inc
mov
adc
adc
je,pt
popa
xor
mov
ret
adc
in
lret
add
fiaddl
mov
push
dec
jmp
shll
and
cwtl
mov
jns
dec
inc
cmpsb
add
adcb
jg
xor
dec
fdivrl
mov
scas
add
push
mov
sub
out
and
xchg
js
jl
sbbb
ret
jmp
cmpsl
lret
mov
cli
mov
dec
pop
fs
mov
push
aas
mov
pusha
and
dec
hlt
push
test
loop
adc
sbb
negb
daa
cmp
hlt
jge
add
jns
popf
jbe
pmulhw
shrl
and
and
and
dec
imul
push
iret
das
jg
xchg
mov
stos
pop
push
aam
pop
pop
inc
dec
sahf
cmp
lods
sub
and
cmp
idivl
mov
shrl
xor
cmp
xlat
in
inc
xor
mov
sub
dec
xchg
pop
ret
popa
inc
in
push
adc
xchg
xorb
mov
xchg
inc
and
cmpsl
aad
outsb
dec
data16
imul
cmp
mov
out
dec
mov
sub
xor
cwtl
mov
and
repz
insl
leave
fnsave
or
jmp
inc
add
dec
add
rcrb
push
jp
xchg
mov
sbb
dec
popa
xchg
inc
mov
jnp
cmpsb
inc
jmp
push
mov
sbb
adc
loope
push
inc
xchg
aad
daa
push
push
jp
and
cmp
jns
sub
pop
pop
ljmp
jmp
mov
sub
push
pusha
push
add
jecxz
mov
push
push
pushf
inc
pusha
stos
pop
mov
pop
push
or
jns
jge
and
and
adc
xor
in
sti
out
mov
pusha
fildll
dec
cmp
add
pop
inc
shl
dec
je
mov
inc
push
hlt
fisttps
aas
pop
mov
xor
out
fstl
pop
mov
adc
add
stos
cmc
daa
cmp
dec
stos
mov
scas
test
mov
or
pop
xchg
shrb
xchg
push
sub
mov
mov
sarl
add
cs
loop
inc
or
dec
and
add
sti
adc
repz
mov
or
fs
repnz
xchg
jno
mov
push
xor
scas
imulb
or
icebp
xchg
fwait
mov
mov
sbb
leave
add
enter
adc
nop
fmull
hlt
inc
or
stos
mov
loopne
imull
fildl
mov
xchg
stos
xchg
fmulp
add
loope
scas
add
cmpsb
pop
add
nop
pop
and
stos
and
add
add
push
jmp
mov
out
sarb
inc
push
mov
sub
ret
data16
dec
push
out
mov
es
pop
adc
and
mov
bound
out
dec
mov
repz
mov
mov
shr
int3
jmp
jl
ficoml
mov
nop
pop
in
imul
ljmp
ljmp
cmp
inc
cli
push
or
ret
jmp
pop
mov
xchg
repz
or
pusha
xchg
notb
std
out
cli
je
sub
out
repz
ud2
lock
out
add
xchg
cmp
push
imulb
ljmp
icebp
cmp
lds
push
adc
cmc
sbb
in
add
cmp
rdtsc
jp
xlat
data16
sti
xchg
cld
cmp
dec
movsl
icebp
xor
inc
mov
outsb
sbb
lret
add
jmp
ljmp
cmp
jmp
sub
add
mov
std
gs
mov
aas
mov
jmp
mov
jns
data16
stos
mov
movsb
sbbl
dec
sub
adc
mov
dec
fldcw
push
jae
sahf
cmpsl
add
pop
cli
movsl
js
leave
out
push
sub
incb
mov
leave
enter
fs
fmul
pop
inc
dec
push
pop
iret
js
pop
pop
fiadds
sbb
add
push
pop
inc
ljmp
inc
mov
movsb
inc
cmp
and
pop
pop
not
pop
in
dec
popa
cs
cmp
fucomip
inc
or
in
das
rol
sbbl
out
ficompl
cs
add
int
in
in
mov
in
imul
push
push
add
hlt
push
and
or
dec
in
or
scas
pop
fnstcw
bound
js
push
jno
xchg
cmp
pop
and
jge
out
push
rol
test
dec
negb
xchg
inc
fucomp
nop
and
add
xor
mov
mov
popa
push
push
addb
push
sbb
repnz
cmc
or
shlb
int
jmp
xchg
push
mov
daa
add
add
jmp
stos
test
movsl
mov
adc
movsbl
mov
clc
cmpxchg
xor
pop
imul
pop
dec
sbb
inc
jmp
aas
test
in
lret
pop
add
loope
rcl
add
pop
in
test
call
pop
push
jmp
and
push
add
or
add
add
pop
inc
scas
testb
cmp
push
pop
jmp
add
xchg
dec
pop
popa
mov
lock
cmp
push
xor
aad
sub
aas
loopne
nop
es
ljmp
stos
scas
repnz
loope
push
xor
pop
popf
test
mov
mov
repnz
ds
pusha
cmpsl
icebp
inc
loope
xchg
hlt
or
jge
sub
push
sbb
or
mov
inc
or
cmp
add
mov
or
mov
loopne
mov
mov
test
stc
jmp
sub
inc
nop
enter
lret
dec
test
jmp
aas
mov
push
mov
or
out
in
push
ret
mov
enter
pop
hlt
iret
movsb
test
jmp
ret
inc
stc
mov
cwtl
imul
hlt
lret
and
sbb
call
dec
push
decb
cwtl
aaa
or
mov
pop
adc
push
ror
and
jno
mov
sub
sub
mov
mov
adc
stc
adc
mov
loope
enter
add
sbb
es
or
inc
mov
xorb
sbb
and
ja
shrb
add
in
xor
xor
jl
mov
sbb
pop
mov
lahf
jo
push
mov
mov
scas
xor
je
in
daa
dec
imul
clc
and
mov
xor
arpl
idivl
shr
dec
add
mov
addr16
pop
test
pop
jmp
incl
in
mov
in
push
stos
mov
adc
mov
fstpl
inc
xor
mov
jne
jmp
xchg
or
or
pop
sub
cli
inc
jmp
mov
jmp
adc
stos
inc
sbb
or
add
jb
cmp
out
push
or
jmp
mov
xchg
call
jae
jmp
xchg
mov
xchg
xchg
les
js
sbb
xlat
and
lods
xor
jae
js
test
sbb
clc
inc
dec
and
adc
mov
mov
pop
xchg
insl
add
cmc
adc
icebp
jns
movsl
push
pop
mov
xor
pop
add
out
loop
xchg
std
mulb
lods
push
data16
xor
jp
mov
inc
add
pusha
push
sbb
fnsaves
add
mov
jmp
out
imull
cmp
and
test
adc
jmp
jecxz
testb
cmp
push
jmp
jecxz
xchg
pushw
jmp
nop
cmpsb
icebp
ds
add
jl
dec
jmp
jne
mov
pop
sub
pop
shll
xchg
mov
rolb
inc
mov
push
pop
nop
mov
mov
mov
cmp
dec
jae
cmpsb
aaa
dec
ja
sub
roll
sub
and
ret
push
sub
push
sbb
mov
pop
sbb
jmp
test
or
sub
pop
adc
pop
pop
movsl
out
jmp
stc
lds
dec
adc
nop
push
jmp
out
mov
test
imul
stc
out
test
or
shl
and
mov
call
xor
fwait
add
jp
lea
cmp
adc
jbe
push
or
movsl
lret
sub
mov
adc
cmp
shrb
and
js
stos
or
bound
add
loope
push
aam
jmp
je
imul
pop
or
jns
push
mov
jmp
lods
and
fadds
or
or
jl
dec
roll
shr
cmp
test
xchg
pop
pop
subb
fisubl
xor
cmp
cmp
add
cmp
add
mov
push
jb
mov
fs
cmpsb
idivl
mov
xchg
pop
mov
cmp
dec
das
test
sbbl
and
mov
jmp
cltd
repz
cmp
jae
ret
movsb
fs
or
das
adc
pop
mov
addr16
aas
sbb
cld
lods
xchg
pop
or
ret
sti
push
sub
loop
dec
adc
lret
das
imul
ljmp
cmp
dec
push
in
xchg
jle
mov
test
out
add
fs
xchg
minps
lods
sarl
jle
scas
inc
dec
mov
xorl
faddl
insb
enter
insl
adc
push
push
adc
out
push
pop
call
push
sub
dec
xchg
mov
push
inc
and
iret
sub
out
lret
xchg
in
pop
ror
icebp
daa
mov
jle
dec
adc
cmp
lahf
psubsw
test
jmp
push
and
inc
push
jb
out
add
pop
fdivs
pop
pop
andb
push
adc
adc
pop
and
nop
testl
and
cmp
inc
add
adc
or
pop
xor
dec
sub
or
push
xchg
das
movsb
xlat
mov
pop
jl
rcll
rep
ret
sti
ja
inc
les
pop
add
lahf
jmp
jmp
add
or
leave
jle
lret
fucom
das
mov
stos
test
in
inc
shlb
scas
cmp
xor
imul
xchg
push
ud0
and
rclb
arpl
inc
addb
loopne
testl
imul
out
lret
and
jg
fdivs
xor
lock
fucomip
mov
negl
push
orl
cwtl
sub
and
std
sub
jl
popf
rclb
inc
push
jmp
jmp
sub
jmp
jg
mov
jg
dec
pop
xor
pop
lods
imul
std
das
dec
pop
cld
pop
cmpb
push
sub
out
xchg
dec
std
loop
pop
mov
icebp
sub
icebp
dec
das
pop
inc
movsl
jno
sbbb
push
cmpsb
or
imul
cmp
test
inc
push
jecxz
cs
jb
sbb
js
pusha
pop
cs
jge
adc
push
push
ja
cld
inc
lahf
dec
xor
sbb
lds
mov
cmc
pop
rolb
inc
ret
cld
or
jmp
sahf
mov
xchg
jge
testl
mov
add
cmpb
in
pop
rcll
sub
jg
lea
or
hlt
xor
mov
pop
mov
dec
mov
jnp
cmp
call
shrl
sub
stos
add
mov
inc
adc
subb
jmp
out
imul
pop
ss
out
or
jne
sarb
int3
dec
stos
xor
or
cmp
mov
push
push
mov
testl
loopne
insb
pop
sub
push
pop
mov
sub
pop
add
jmp
cmpsl
jns
or
push
and
or
xchg
or
sub
or
push
mov
sbb
add
sub
jo
in
sub
inc
int
xor
add
inc
lcall
mov
lret
push
pop
cs
repnz
add
adc
and
mov
outsl
lods
jge
push
push
xorb
jns
jmp
mov
pop
add
cld
dec
xor
sub
shrb
movsl
push
das
movsl
and
aaa
das
movsl
cs
mov
jle
cmpl
repz
and
adc
push
out
dec
inc
stos
orb
iret
mov
out
push
mov
mov
jle
mov
inc
xor
push
lods
je
pusha
rclb
jle
inc
outsb
jno
jle
add
repnz
cld
add
push
loopne
sub
jp
shl
lods
inc
mov
addr16
rclb
js
lahf
divl
push
addb
mov
cmpl
rcr
sub
jg
and
aaa
or
lahf
inc
lock
pop
pop
sub
push
test
daa
pop
mov
inc
mov
jmp
ret
push
sub
adc
add
pop
inc
push
sbb
jecxz
mov
inc
or
mov
in
out
rclb
lock
cmpsl
push
mov
shl
adc
test
jno
cmp
das
jnp
cwtl
daa
pop
insl
dec
lods
shr
adc
push
xchg
xchg
rorl
mov
pop
cld
jno
andb
hlt
clc
inc
push
sbb
sahf
sub
add
sti
nop
stos
sub
mov
aad
das
or
in
imul
and
or
mov
pusha
add
mov
int3
loop
mov
ja
outsw
jmp
inc
fcomi
pop
cmpsl
jge
pop
aaa
rolb
in
or
test
dec
jmp
mov
pop
adc
pusha
mov
push
daa
dec
inc
push
mov
mov
repz
xchg
add
test
mov
in
mov
xchg
mov
inc
adcb
pop
ljmp
sub
sbb
aam
or
adc
mov
loopne
outsl
mov
pushf
add
ja
xchg
sbb
inc
dec
das
sub
add
mov
int
xchg
fwait
mov
sub
cmc
sbb
or
out
les
xlat
and
and
in
add
negl
dec
cmp
add
daa
pop
push
mov
jbe
rorb
xchg
ljmp
xor
dec
inc
xor
sub
mulb
adc
xchg
add
fistpll
popa
xor
jne
mov
das
sub
and
das
mov
push
xor
dec
fimuls
sub
lea
insl
mov
std
inc
lahf
xor
push
and
add
daa
mov
lret
insl
cmp
jnp
out
add
inc
pusha
ss
xor
scas
cs
imul
in
xchg
dec
or
pop
in
loop
and
pop
sub
sub
and
repz
out
or
xorb
mov
cwtl
inc
movsb
movsl
addb
outsb
add
adc
ds
adc
push
push
push
sub
mov
leave
in
aas
enter
insl
push
lods
cmpl
fisttpll
leave
sbb
jge
repz
dec
mov
jnp
test
mov
gs
push
adc
jbe
sub
jecxz
std
add
add
mov
jmp
pop
mov
ret
mov
jle
cmp
xchg
mov
dec
jmp
stos
rclb
push
cmp
sbb
daa
out
jno
mov
or
add
dec
push
cmp
or
mov
call
or
push
xor
test
nop
data16
lahf
jge
and
dec
mov
shll
xchg
ss
jo
sti
es
adc
mov
jo
daa
mov
ss
pop
push
fcoms
add
push
xor
jge
cmpsl
icebp
jne
sbb
movb
inc
and
stc
or
les
mov
js
xor
js
jb,pn
nop
xlat
xchg
loop
add
and
pusha
xchg
nop
cmp
push
cmp
and
popa
mov
adc
test
and
out
and
inc
pusha
ds
test
jbe
dec
or
gs
dec
scas
xor
std
pop
jmp
mov
add
divb
sbb
hlt
sub
incl
in
fs
ljmp
push
mov
sbb
cmp
das
pop
and
inc
or
cli
add
sub
icebp
sub
adc
push
test
pushf
pop
imul
rcll
xchg
add
lret
xor
shr
add
mov
ret
mov
das
jo
aam
jo
push
jb
cmp
push
data16
cmp
xlat
lods
push
xchg
sti
gs
lock
and
sbb
jae
popa
mov
xchg
js
sti
and
out
ljmp
loopne
es
mov
xchg
mov
mov
inc
mov
lahf
push
ret
stos
lods
lahf
pop
mov
mov
pop
leave
xor
mov
mov
mov
add
push
dec
push
loop
clc
addr16
fmuls
sub
adc
jno
and
mov
clc
dec
test
or
test
jb
fs
in
mov
mov
sub
xor
stc
mov
add
push
jmp
pop
ret
push
lret
adc
xchg
mov
or
dec
out
push
leave
jmp
sub
les
out
add
push
fmull
bound
scas
push
jecxz
lock
stc
add
jg
shrb
pop
testb
xor
xchg
xchg
mov
jl
popf
cmp
dec
xor
cmp
cmp
pop
xchg
fldenv
push
pop
loop
add
ljmp
scas
inc
or
lds
scas
jo
adc
adc
push
mov
mov
or
test
sub
push
les
and
and
add
mov
test
push
jl
les
mov
inc
jmp
in
test
push
xor
dec
pop
pop
and
clc
sub
cld
int
add
and
inc
cmpsl
pop
jne
js
jnp
xor
orl
mov
jge
test
jecxz
in
sub
xor
dec
fs
rcr
inc
aad
lock
rcrl
into
add
rcrl
dec
je
mov
cld
subb
jns
jbe
lret
xchg
js
sub
pcmpeqw
into
pop
loope
mov
pop
sbb
ret
dec
inc
test
add
fdivs
mov
test
mov
or
decb
leave
push
mov
stos
iret
mov
adc
inc
jmp
pop
sub
xchg
aaa
sti
dec
leave
pop
arpl
xchg
fmuls
fdivr
lock
pop
loope
fadds
lcall
jae
ret
add
pop
and
push
mov
add
sti
mov
cwtl
or
inc
pop
jno
push
aas
fsubl
int3
insb
or
fldl
fs
dec
and
ds
lods
sbb
into
mov
pushl
sub
jno
out
adc
addr16
shl
add
add
nop
push
les
inc
loopne
in
test
ja
orb
shr
les
jmp
push
pusha
inc
push
es
or
mov
ljmp
cmp
fstpt
nop
popf
add
je
jmp
lahf
sbb
sbb
push
dec
xchg
xor
inc
jmp
inc
push
mov
imul
out
and
adc
inc
mov
adc
lahf
fldcw
sub
stos
jb
push
inc
repz
or
xor
add
jo
call
inc
hlt
mov
or
xor
cmpb
xlat
int3
cmpsl
scas
xchg
sarb
arpl
xor
sub
repz
cmp
stos
cmp
add
loope
add
sub
push
jne
jle
push
jmp
lds
pop
xchg
pop
icebp
and
mov
pop
xchg
mov
addr16
sbbb
das
push
mov
jo
adc
add
stos
enter
mov
jbe
xor
xor
xor
add
bound
push
push
xor
xor
xchg
inc
icebp
xchg
jge
bnd
mov
pop
sub
out
jmp
dec
push
sbb
popa
mov
iret
scas
xchg
xor
outsl
jl
or
adc
xchg
pop
daa
jmp
ss
mov
or
rcll
add
testl
adc
push
fsub
add
das
enter
sub
addr16
pop
adc
cmp
imul
mov
push
or
addl
test
scas
inc
pop
jg
insl
aad
cmpsl
aam
lods
mov
add
push
not
pop
xchg
jb
dec
add
push
in
jnp
mov
rcrb
jae
push
add
int
fistpll
xchg
jg
imull
or
jmp
pusha
push
push
push
dec
pop
jmp
cmp
rorb
push
adcb
faddl
orb
and
sub
clc
pop
pop
dec
or
or
jmp
push
inc
xor
in
orl
stc
pop
or
arpl
shlb
ja
sbb
scas
aad
or
arpl
pop
out
mov
xchg
je
xchg
add
fsubrs
mov
cmp
adc
fdivrs
popa
aas
add
jle
mov
sub
pusha
xor
pop
out
adcb
inc
xor
dec
or
andl
dec
sbb
notl
sbb
xor
daa
inc
outsb
mov
pop
sbb
push
adc
jmp
pop
ret
jno
inc
pop
out
sub
or
scas
adc
xchg
dec
pop
mov
cmp
or
addl
testl
and
mov
pop
rolb
jle
and
rcll
orb
and
jmp
xor
add
rorb
addl
cmp
es
dec
adc
lcall
push
ja
out
pop
xchg
adc
dec
push
sub
jmp
xorl
call
cmp
add
mov
push
stos
push
inc
or
mov
movl
ret
aad
mov
cmc
mov
or
add
ljmp
test
cmc
sbb
nop
push
xchg
cli
xchg
jmp
sub
push
jb
jmp
fsubrs
or
bound
popf
pop
test
clc
cmp
out
add
je
xchg
adc
sbb
push
pop
pop
adc
xchg
icebp
icebp
or
popa
or
leave
dec
xor
inc
dec
ret
add
in
cmp
xchg
add
cmp
push
mov
cmp
cmpsl
sahf
mov
cmp
mov
inc
addr16
pop
call
test
pop
push
out
sbbb
and
icebp
mov
jnp
adc
xor
cli
pop
out
cwtl
scas
nop
pushf
jmp
mov
dec
cmp
sub
add
mov
pop
fxam
add
xor
and
xor
dec
sbb
stos
dec
call
das
push
adc
ja
insb
or
jnp
inc
dec
pop
lock
pop
pusha
inc
adcb
mov
fsub
xchg
adc
ss
add
add
rolb
pop
popf
push
ds
mov
adc
jbe
cmp
incb
mov
or
imul
lods
jo
jns
dec
xor
subb
imul
sbb
inc
or
push
adc
dec
repnz
mov
sbbl
mov
push
push
mov
repnz
push
add
mov
and
ret
xchg
pop
add
idivl
lock
mov
call
push
repnz
and
ficomps
and
mov
pop
jmp
jle
ret
pop
std
xchg
sub
outsl
push
sbb
jmp
dec
shr
push
ds
push
or
dec
mov
hlt
lods
mov
sub
pop
xor
sub
test
and
inc
jmp
cmpsb
adc
int3
pop
xchg
call
jns
imul
add
loop
out
aam
pop
or
and
mov
les
ret
cmpsl
fisubrl
jmp
mov
jg
jb
jno
add
pusha
loop
sub
mov
lds
aas
sbb
leave
xor
lds
clc
adc
jmp
das
mov
xchg
arpl
fwait
add
push
push
dec
pop
loope
and
wrmsr
popf
aaa
or
and
dec
sub
icebp
icebp
or
inc
pop
adc
scas
loope
add
push
add
aad
pusha
xchg
xchg
nop
rcrb
fucomip
adc
jp
ficoml
movsb
and
popf
cli
push
push
gs
or
je
mov
jmp
das
or
sub
or
pop
xchg
jge
stos
mov
add
and
sbb
iret
ds
pop
push
push
xor
or
movsb
sbb
dec
popf
jg
jb
bnd
xchg
cli
and
adc
out
aam
jl
rclb
aad
lret
sub
repnz
aam
outsb
leave
xor
stc
popa
jo
push
or
jmp
pop
lcall
push
jmp
subb
dec
cmp
add
sarb
add
or
test
xchg
jg
les
incl
xchg
and
cmp
sbb
mov
cmp
int3
jmp
and
inc
dec
ja
dec
jmp
mov
cli
stos
xchg
xchg
add
stos
push
orb
add
rcl
insb
gs
pop
sti
iret
jg
jmp
enter
sbb
fnsave
and
or
mov
insl
test
pop
and
mov
sbb
push
aam
and
mov
scas
lea
jmp
pop
cmp
push
negb
add
and
mov
add
jle
add
add
push
push
inc
fiaddl
cli
pop
stc
dec
lret
cmc
jl
pop
adc
enter
pop
ret
pop
jecxz
adc
dec
sub
call
mov
lea
shll
inc
add
ljmp
adc
rcl
push
sub
inc
cmp
rcrl
jmp
hlt
mov
add
mov
shll
sbb
lods
loop
pop
mov
push
cmp
test
lods
jmp
imul
adc
and
jmp
and
cwtl
sbb
xchg
rorb
jbe
test
jle
outsl
popf
out
jnp
adc
adcb
sub
popf
dec
xchg
pushf
dec
mov
pop
cmc
push
mov
adc
pop
xchg
add
sub
mov
dec
or
push
push
in
cmp
jp
dec
and
jle
dec
ljmp
or
sub
sar
mov
jne
in
jp
inc
xor
add
jmp
mov
mov
mov
sbb
sub
rorb
add
pop
add
icebp
or
test
or
in
ds
xchg
pop
icebp
dec
out
add
jle
adc
icebp
jle
dec
xchg
not
dec
or
adc
mov
shrl
xor
pop
xchg
xchg
in
sbb
pop
icebp
andl
push
adcw
imul
jle
clc
jge
pop
jg
jp
ds
and
push
stos
mov
mov
sub
jg
mov
mov
rcll
outsl
into
dec
jle
push
push
aad
dec
lret
dec
and
fs
and
aad
mov
pop
dec
adcl
sbb
cmpsl
inc
ret
outsb
mov
pop
ja
rclb
lret
or
mov
or
dec
js
xchg
mov
xlat
mov
push
adc
fucomi
pop
int
movsl
sbb
sarl
inc
sar
mov
mov
inc
mov
sub
sub
mov
jno
jmp
xchg
mov
sub
dec
push
gs
xchg
lahf
outsb
add
mov
xor
pop
stc
arpl
jmp
pop
fistpl
das
mov
xor
pop
push
leave
xchg
mov
sub
fldenv
sahf
jmp
dec
cld
cmp
stos
call
mov
cltd
loope
loopne
mov
jp
dec
sub
dec
stos
movsb
cli
push
rcll
inc
negl
sub
and
test
out
add
mov
pop
ljmp
dec
addr16
dec
jg
push
pusha
bound
or
idiv
pop
aad
add
add
bound
insl
jmp
lret
add
jbe
ficomps
push
inc
imul
and
cmpb
or
or
inc
add
xchg
adc
fstl
repnz
lret
inc
sbb
icebp
ds
pop
xor
negl
mov
xchg
test
lahf
out
aad
mov
loopne
or
pop
jne
mov
je
pop
outsb
xor
movsl
jbe
mov
out
das
jns
hlt
mov
adc
outsb
sub
push
add
mov
mull
push
pop
aam
pusha
mov
inc
popa
int3
or
pop
fsubs
jns
push
jle
adc
xlat
pop
mov
adc
imul
xchg
pop
adc
mov
add
xchg
subb
and
mov
inc
in
sbbl
sbb
mov
add
xchg
push
push
add
push
scas
rcll
add
xor
pop
mov
out
jmp
in
add
push
pop
push
aas
mov
adc
add
in
and
inc
nop
sbb
adc
pop
mov
pop
pop
pop
sub
movsb
pop
js
and
pop
mov
fists
fcoml
pop
adcb
xchg
and
loopne
mov
add
pop
shl
mov
jmp
daa
cli
fisubrs
jns
mov
jnp
pop
notb
lahf
cli
fucomi
sbb
sub
mov
add
lcall
lcall
ljmp
or
adc
mov
and
push
add
aad
std
jmp
sti
daa
in
cltd
jle
sub
adc
dec
adc
jge
add
orl
shrb
jno
mov
mov
mov
iret
dec
test
fidivrl
fwait
push
divb
lret
sbb
cwtl
jl
js
int3
add
and
bound
dec
sbb
add
cwtl
stos
push
mov
mov
pop
lock
cmp
xor
pop
pop
jmp
add
movsl
pop
inc
aaa
xchg
xor
test
and
in
or
mov
nop
mov
adc
sub
ret
and
push
inc
and
jecxz
xchg
push
popa
outsb
mov
out
push
sahf
lahf
sahf
inc
pop
iret
sub
imul
add
or
ss
and
fsubrp
push
fs
mov
fimuls
das
lahf
mov
jp
arpl
dec
and
mov
jmp
sub
push
inc
outsb
out
xchg
rcrl
gs
or
repnz
jns
push
mov
mov
pop
add
jmp
add
int
hlt
jmp
sub
pop
not
add
daa
in
test
pop
mov
lret
nop
cmp
inc
cmp
xor
leave
ret
push
push
cli
inc
add
shr
inc
push
and
xchg
and
aad
sub
cmc
mov
mov
testb
pop
in
fwait
sub
fcmovb
out
adc
add
jnp
ret
or
dec
or
ja
sbbb
pop
dec
xchg
outsl
push
aas
and
add
xor
push
sbb
dec
xlat
sbb
xchg
arpl
push
cmp
fsubrl
std
fimuls
sbb
popa
popf
in
inc
sub
ret
or
dec
and
sahf
mov
push
cmp
je
and
pop
and
neg
mov
push
dec
push
rorl
mov
stos
xor
jo
popa
and
jno
sub
adc
dec
add
pusha
loope
jg
xchg
xchg
test
es
pop
scas
lock
push
std
les
xchg
arpl
xor
mov
jp
xchg
stos
lea
xor
iret
in
aam
out
or
add
int
jmp
cmp
les
ljmp
fdivs
push
inc
call
test
adc
mov
push
loopne
push
int3
dec
shlb
into
add
push
pop
cmp
push
jmp
cmp
xchg
and
jp
xchg
mov
cmp
ljmp
or
data16
or
cmp
cmp
and
fimuls
lods
out
mulps
movsl
xorb
in
adc
fcoms
scas
clc
aam
jge
push
jne
in
repnz
int3
lcall
sbb
or
arpl
add
outsl
sbb
icebp
mov
pusha
dec
iret
sbb
xor
sbb
imul
pop
pop
jg
lahf
sub
insb
xchg
push
cmp
xor
mov
std
outsb
xor
pop
pop
push
mov
fcoml
push
dec
inc
push
cli
nop
sub
fbld
jmp
or
push
stos
add
or
jnp
pusha
ret
imul
fnstenv
sbb
pop
jae
xor
neg
and
loop
xor
out
pop
outsl
dec
xor
addr16
sub
dec
je
sub
pop
pop
pop
mov
xlat
or
out
mov
cmp
psrlw
jle
fs
stos
pop
mov
jmp
xor
dec
mov
add
mov
repnz
xchg
iret
in
out
push
dec
jmp
clc
pop
xchg
pop
xor
cmc
add
dec
jle
inc
test
lea
out
mov
notb
cmpsl
pop
lahf
int
sbb
aam
push
vrsqrtss
ljmp
shl
testl
jg
push
jle
sub
hlt
and
lahf
aam
push
jne
jle
cmp
inc
jne
pop
or
cwtl
call
inc
inc
ljmp
jl
or
mov
shlb
pop
inc
add
pop
and
pop
inc
mov
sub
add
incl
add
repnz
mov
push
or
outsb
xchg
or
dec
pop
mov
arpl
add
jl
and
out
mov
sbbb
clc
dec
shlb
xor
pop
xor
sbb
xchg
divb
mov
adc
dec
add
pop
sub
lret
pop
mov
xchg
adc
xlat
jmpw
dec
jle
imul
lds
cmp
push
cmc
mov
shr
sub
add
dec
shll
inc
pop
pop
or
lods
push
enter
dec
push
xor
in
ds
sub
or
or
insb
shrl
pop
sbb
outsl
icebp
or
pop
aam
sub
test
pop
movsb
mov
xchg
dec
outsl
mov
repz
rolb
push
pop
cmp
popa
imul
sbb
pop
add
test
dec
lods
ret
stos
xlat
dec
cmp
sahf
or
jnp
das
negb
popl
push
shr
addr16
popa
repz
into
dec
inc
xor
outsl
syscall
bound
adc
or
push
mov
loopne
jo
pop
jmp
xor
xor
jge
pop
lock
outsl
inc
mov
nop
or
aaa
inc
jnp
dec
xchg
mov
mov
pop
and
and
mov
or
and
sub
fmuls
lahf
fistpl
inc
stos
inc
sbb
stos
pop
xchg
jae
cmp
mov
dec
pop
push
hlt
mov
cld
fstps
jno
jmp
jns
or
cmc
in
and
sub
xor
add
lea
cmp
or
push
mov
inc
pop
dec
or
test
scas
lret
or
mov
push
push
mov
or
mov
std
inc
mov
pop
xchg
push
add
sub
in
imul
outsl
mov
pop
mov
out
jp
or
popa
add
mov
dec
hlt
mov
mov
jne
adc
cmc
dec
pop
push
out
or
bound
add
gs
fstl
and
mov
popf
les
xchg
das
sub
mov
sarb
push
or
lcall
out
pop
jns
or
test
adc
imul
addr16
xor
sbb
daa
pop
sub
out
cmpsl
not
das
scas
xor
push
adc
aam
jae
mov
pop
cld
jg
daa
xchg
popf
dec
pop
dec
jno
sarb
popa
adc
pop
push
addb
stc
sub
es
cmp
add
mov
cwtl
cltd
lret
push
cmp
jp
push
add
outsb
add
outsb
mov
adc
jecxz
call
cltd
sub
popf
or
ljmp
mov
dec
loope
cmp
jmp
bound
leave
sbb
xlat
repnz
push
pop
pop
cmc
ljmp
add
xor
fcomps
stos
xor
and
enter
sub
daa
cwtl
paddq
bound
and
lret
mov
inc
rcll
icebp
pop
and
ja
jle,pn
cld
cmp
dec
dec
xor
fldcw
mov
sub
add
enter
xor
aas
repz
daa
adc
sub
xlat
loope
jmp
movsb
push
scas
mov
ret
popf
repz
inc
jmp
push
test
mov
out
or
xchg
adc
dec
addb
dec
jo
shlb
test
jl
je
cmp
dec
nop
adc
push
cmpsl
sbb
pop
xor
dec
fbld
shr
dec
fisubrl
lret
das
outsl
aaa
add
js
mov
and
insb
xor
out
lret
jmp
js
and
dec
shrb
xlat
or
cmp
add
std
aas
test
jne
stos
inc
repnz
xor
xor
cld
xor
cmp
out
mov
cmpl
decb
jp
not
shr
shl
or
pop
shl
fldl2t
sbb
dec
fsubrl
fldcw
test
notl
xchg
add
lods
jge
repnz
add
pop
iret
or
in
jmp
test
jmp
xor
push
iret
dec
shr
incb
push
mov
cltd
adc
addr16
add
push
push
pop
and
push
adc
call
pop
jnp
popa
hlt
mov
cs
and
push
sbb
fbstp
push
sahf
adc
loop
les
stc
push
iret
sub
test
aad
clc
loopne
push
shrb
mov
xor
ds
inc
push
lret
push
repnz
js
outsb
addr16
bnd
jne
xchg
and
rorb
sub
imul
and
add
xchg
addb
xor
out
jp
mov
testl
dec
lahf
push
jmp
xor
sbb
pop
add
mov
mov
jns
mov
dec
push
xorl
push
inc
push
xor
cmp
sbb
inc
push
lret
or
dec
lea
add
add
xchg
in
mov
adc
and
and
mov
movsb
mov
mov
test
sbb
add
enter
push
pushf
add
fists
in
xchg
pusha
scas
add
call
sbbl
fstpl
into
xchg
pop
xchg
push
jbe
out
andb
ljmp
call
xchg
add
rcl
bnd
ja
xchg
sub
mov
enter
add
out
inc
sbb
scas
add
jns
pop
cmpb
cmc
pusha
lcall
popf
mov
adc
repnz
ret
callw
arpl
jae
outsl
movsb
add
pop
mov
es
std
fmul
nop
add
mov
inc
out
aad
pushf
ds
sbb
pop
or
subb
and
lea
add
cltd
pop
aad
lahf
or
jecxz
fwait
sahf
inc
add
push
loopne
sbb
jmp
pop
movsl
sub
out
add
mov
mov
cmp
mov
inc
ret
add
fsts
sub
sbb
je
mov
xchg
sub
add
dec
cltd
lret
cwtl
push
out
add
pop
mov
sbb
int
lea
data16
mov
and
xchg
cwtl
das
pop
dec
rcll
cmpb
add
add
fsubs
mov
fwait
jle
add
or
sbb
pop
popf
mov
aad
aam
outsb
mov
sub
rol
sbb
pop
xchg
pop
xchg
fistpl
xor
push
cmpsb
push
mov
and
or
imul
add
outsb
push
call
dec
icebp
push
sbb
cld
mov
fisttpl
pop
xlat
dec
notb
push
cwtl
add
shl
fldl
enter
mov
and
pop
sub
push
iret
mov
add
inc
xchg
jl
jle
jmp
push
dec
aad
mov
sub
cwtl
and
out
mov
mov
add
fincstp
xor
test
and
repz
sbb
xor
cmp
hlt
cmc
push
add
or
subb
lods
sub
mov
push
int
fisubs
aas
xchg
or
fs
cmp
es
add
out
jb
add
jns
mov
push
pop
lods
lock
xor
dec
mov
les
or
pop
pop
xchg
pop
xchg
inc
imul
loope
add
mov
dec
xchg
mov
addb
add
repnz
out
lds
push
call
out
add
pop
fiadds
dec
stos
push
and
scas
push
and
mov
fcoms
add
imul
mov
or
lods
sub
out
insl
rolb
into
push
roll
pop
fildl
bound
jmp
enter
adc
or
add
push
aaa
test
imul
jle
fisubs
adc
jg
sub
sub
test
adc
push
cmc
jne
add
xchg
mov
data16
jmp
movsb
jle
ljmp
sti
add
pusha
and
fsubrs
add
push
jb
pop
inc
leave
insl
arpl
add
lea
add
jle
xor
sbb
out
jne
pushl
es
cld
xchg
add
pop
fsubl
leave
add
pop
xchg
push
mov
push
push
in
cmp
add
xor
dec
adc
sbb
add
cmp
stc
cmpsl
mov
and
shr
hlt
jp
testl
movq
cmp
mov
or
pushf
mov
push
int3
insb
rolb
cmp
clc
fs
push
lret
lahf
add
and
xor
mov
hlt
lds
leave
add
mov
and
in
add
out
jns
cmpb
out
xlat
adc
push
sahf
sbb
adc
pushf
in
mov
dec
and
imul
in
cmp
cld
addr16
xchg
mov
and
add
lea
cld
push
aam
xchg
add
ljmp
sbb
aaa
imul
adc
xchg
int3
pop
faddl
pop
xchg
sub
jns
add
out
ja
popa
mov
int3
std
popa
jae
cld
negl
sbb
sti
and
inc
xor
movntq
jle
sub
es
xchg
inc
sti
clc
mov
bsf
cmp
scas
jmp
ja
cmc
cmp
hlt
dec
bswap
pusha
faddl
rcrb
add
dec
jae
push
mov
xchg
aad
add
pushf
push
xchg
clc
mov
or
jl
paddw
jne
bound
mov
mov
pop
popa
dec
jns
add
insb
imul
mov
add
inc
add
out
add
cmp
add
ret
add
jmp
jge
cs
xor
clc
push
sbb
cli
mov
or
inc
fisttps
addr16
nop
icebp
lret
dec
mov
push
cmpb
into
pop
add
or
mov
in
sbb
lret
loop
and
pop
dec
mov
cmpsl
stc
jno
inc
pop
inc
test
inc
into
test
popf
lret
push
push
jmp
pushf
fstpl
ja
push
mov
pop
lahf
dec
pop
push
and
fidivl
pushf
sbb
add
or
rolb
dec
lock
fmuls
imul
mov
je
add
dec
les
xchg
pop
shll
mov
pop
mov
mov
cmp
hlt
mov
inc
lahf
ret
add
inc
std
push
inc
int3
lods
divl
sub
pop
inc
mov
xchg
push
mov
loopne
jo
ss
or
jmp
cmp
push
and
mov
insb
add
sub
add
xchg
repnz
fwait
shlb
arpl
cltd
ficoml
push
cli
addr16
outsl
mov
jge
rorb
jle
add
push
fildl
lds
and
nop
xlat
push
scas
pop
adc
mov
xchg
hlt
cmc
or
cs
fistl
push
scas
out
fs
mull
adcb
lea
and
or
inc
xor
xor
fs
add
pop
repz
pop
sub
xor
test
gs
cmpsb
ltr
addl
loope
adc
outsl
add
push
repnz
push
int
xchg
mov
enter
add
sub
cmpsb
mov
mulb
add
es
lock
bound
outsb
add
inc
sti
mov
dec
mov
jb
jp
rclb
loop
ret
mov
add
cmp
flds
and
jl
add
xchg
je
in
inc
mov
pop
or
adc
rol
adc
and
or
ret
xchg
cmpsl
and
and
dec
cmp
repz
xor
loopne
icebp
add
xchg
sbb
incb
sbb
xor
xorb
add
push
cmpsl
outsl
mov
add
mov
fwait
push
stos
in
and
cmp
test
mov
xchg
aaa
or
dec
pusha
outsb
push
dec
movsb
fmull
xor
inc
clc
inc
fwait
ja
sub
outsl
stc
jo
das
jnp
out
fldl
add
cmp
pop
dec
lds
cmpsb
jg
dec
push
lock
bswap
add
add
sbb
cmp
mov
sbb
jle
sbb
inc
leave
leave
mov
subl
mov
lahf
fdivrl
fs
push
or
add
adc
adc
xchg
sbbl
sbb
repz
imul
xor
jge
es
ret
sub
adc
cmp
mov
bound
inc
jge
and
add
xchg
mov
xor
push
add
call
mov
pusha
cmc
dec
add
mov
mov
mov
lds
femms
lods
xor
mov
add
pop
addb
ret
mov
cld
jge
xor
pop
popf
jecxz
cwtl
jmp
rorl
call
ja
movb
stc
pusha
lcall
mov
mov
or
incl
sahf
add
jno
xchg
xchg
ds
mov
mov
into
or
mov
rcrb
add
dec
fldenv
jae
repz
sbbl
xchg
push
jo
add
call
adc
lock
cmovge
loop
ds
lds
inc
lcall
or
xchg
aad
or
jb
inc
clc
add
sti
xchg
icebp
insb
push
dec
lcall
ret
pop
sahf
pop
mov
sbb
or
outsl
lods
push
in
iret
les
aam
aad
xor
mov
add
add
xor
imul
adc
rorb
hlt
jle
stos
cmp
imul
mov
push
gs
lea
aad
xor
fcmovnbe
enter
add
xchg
cld
bound
dec
les
mov
xchg
mov
push
xchg
or
ja
rolb
xor
pop
bnd
stc
xor
add
mov
mov
jmp
in
inc
pop
mov
add
jb
xor
cmp
test
sub
mov
movsl
std
xor
mov
xchg
hlt
cwtl
add
sar
call
in
xchg
testb
pop
enter
xor
jo
push
dec
loopne
fiadds
fstps
jo,pn
aas
cmpb
ret
pop
fwait
sub
xor
cmp
sbb
fisubl
sti
mov
mov
mov
test
dec
in
mov
inc
xor
idivb
cmp
xchg
loopne
xchg
push
int3
inc
mov
es
imul
pushf
add
ds
fisttps
xchg
call
lcall
pushl
inc
mov
mov
mov
mov
xchg
cmp
mov
xor
outsb
lcall
sbbb
push
ret
pop
ret
pop
dec
fsubrl
xchg
andb
test
jp
adc
inc
faddl
pop
cmpsb
imulb
xor
jg
mov
cmc
dec
arpl
add
data16
push
mov
or
adc
or
out
dec
sub
pop
adc
inc
adc
outsb
iret
pminub
mov
mov
xor
cmp
or
push
lret
pop
neg
and
jecxz
clc
inc
cmp
and
inc
orb
ss
add
sub
xor
dec
xlat
and
push
mov
int
pop
fstpl
shll
add
sub
out
cs
ret
push
in
movsl
mov
add
mov
scas
imul
sahf
sbb
rclb
xor
pop
dec
in
pop
int3
ret
jnp
xor
movsl
lcall
pushl
addb
cli
bound
or
or
lea
imul
maskmovq
testl
add
mov
cmpsb
ret
jecxz
push
out
jns
cmp
pop
jbe
adc
cmpsb
aam
insl
into
push
sbb
movsl
adc
cmp
mov
popf
cmp
ja
jge
mov
adc
loopne
and
cwtl
sbb
cs
add
push
out
add
mov
enter
stos
inc
das
xchg
or
dec
lahf
jo
xchg
add
inc
pushf
fmull
xchg
mov
and
out
add
clc
sbb
loop
inc
add
push
insb
xchg
dec
std
adc
add
add
add
es
and
adc
jmp
mov
mov
cmc
shlb
adc
xchg
imul
inc
cmp
push
outsb
dec
out
add
and
dec
or
mov
adc
subl
xchg
in
mov
popf
dec
sbb
xchg
pop
add
lret
es
aam
adc
add
mov
es
ficoms
add
les
loope
mov
adc
xor
push
jge
out
xor
add
jmp
bound
nop
xor
sub
add
adc
ss
ja
and
cmp
imul
add
scas
or
out
cmp
dec
or
lods
and
popf
fisttpll
add
fbstp
int
xchg
sub
mov
mov
adc
in
lods
aas
mov
mov
xor
mov
leave
inc
mov
xchg
sbb
lock
clc
push
popf
dec
sbb
mov
and
inc
loope
test
enter
in
inc
push
lret
mov
jno
mov
mov
rorl
test
add
push
vmwrite
and
add
mov
idiv
je
sbb
xchg
js
inc
ljmp
push
stos
adc
adc
push
and
ds
cmp
inc
rorl
mov
pop
test
movsb
pusha
scas
pop
add
add
jmp
loope
jl
frstor
jbe
repz
pop
pop
mov
aas
mov
test
xor
push
dec
les
mov
fcomps
pop
movsb
or
sahf
ss
adc
dec
stos
push
jmp
jae
jbe
notl
lea
pop
or
xchg
sbb
mov
pop
sbb
push
test
xlat
dec
dec
sub
jmp
loope
out
hlt
mov
fimull
sbbb
pop
cmp
rorb
rolb
dec
sbbl
push
mov
or
aad
pop
sub
pop
int3
sub
daa
loop
jg
mov
push
sbb
mov
ss
pop
cmpl
jno
popa
mov
sahf
add
les
mov
mov
cmp
xchg
add
hlt
sbb
fisttps
fwait
xchg
out
sbb
dec
fcompl
imul
mov
add
in
cmp
mov
xor
push
xor
insl
cmpsb
out
jne
push
sub
cmc
stc
test
dec
mov
push
push
mov
pop
mov
push
popf
out
pop
das
fstpl
fsubs
or
add
call
pop
repz
js
aad
cld
jmp
fwait
nop
xor
int
jbe
sub
in
add
or
enter
in
outsb
add
fs
add
and
mov
sbb
pushf
ds
or
jnp
mov
inc
add
or
sbb
lea
rcpps
inc
dec
loop
sbb
jae
inc
in
aaa
jmp
int3
call
pop
jge
loopne
mov
add
push
ret
fstpl
clc
push
xor
add
lods
mov
dec
dec
mov
mov
mov
xor
mov
js
dec
xor
add
pop
sub
push
call
mov
cmp
in
cmp
xor
das
mov
pop
fdivrl
add
dec
popa
mov
hlt
mov
cmc
push
stc
popl
data16
fsin
cmp
mov
ljmp
ret
cmpxchg
jl
jne
rorb
lds
push
hlt
sbb
adc
leave
fucomi
mov
inc
push
in
pop
xor
and
cs
adc
inc
and
fcmovne
cmp
cmpsl
sbb
mov
xchg
pop
vmxoff
into
movsl
subl
gs
cmpl
mull
cmpsl
and
sub
stos
sub
dec
test
and
lods
cmp
xlat
rcll
sbb
std
imulb
mov
test
fsubl
sbb
push
jae
outsb
mov
loopne
shrl
and
rorb
mov
push
and
sub
sub
movsb
pusha
mov
sub
sub
xor
adc
adc
shll
and
pusha
test
insb
push
addr16
sbb
fisubrl
int
add
xchg
mov
mov
sub
aas
add
xchg
fadds
gs
add
or
add
xor
shrl
pushf
enter
decl
push
pusha
or
sahf
xor
je
out
push
xor
hlt
push
push
xchg
pop
adc
and
push
add
xchg
js
push
xchg
sbb
std
jmp
push
add
outsl
or
jmp
or
sahf
ds
popl
push
cmp
adc
adc
ljmp
lock
pop
cmp
repz
out
loopne
push
aaa
or
or
lock
and
add
shlb
test
outsl
sub
into
add
imul
xchg
xor
cmp
sub
adc
or
pand
lret
sub
push
xor
add
mov
rol
xor
pop
mov
and
dec
ret
add
dec
rcrb
xor
xchg
mov
push
and
pop
fisttpll
cld
lds
jle
pop
pop
frstor
and
mov
sahf
std
or
and
stos
cmp
shrb
pop
insb
daa
icebp
adc
mov
and
cmp
lock
loop
stos
mov
and
cld
cmpb
mov
pop
inc
and
or
movsb
xchg
cmpsl
adc
mov
hlt
test
popf
adc
ja
lods
test
mov
xchg
jbe
mov
outsb
fwait
sub
repnz
lret
es
pop
adc
sbbl
stos
inc
sub
in
dec
or
daa
jae
jl
cwtl
test
nop
clc
dec
inc
push
out
xchg
fadd
mov
or
mov
loopne
xor
push
push
xchg
bound
mov
and
mov
push
sbbl
mov
mov
bound
and
sub
pop
or
outsl
inc
fwait
aad
xchg
adc
mov
enter
mov
pop
sbb
jns
loope
into
sbb
push
test
fldl
dec
jnp
mov
addb
mov
dec
adc
stos
xchg
test
nop
lea
cwtl
dec
pushf
mov
mov
or
test
dec
adc
dec
fdivs
xor
xchg
test
pop
test
das
dec
out
insl
xor
fsubrs
mov
in
push
in
inc
pushf
sub
jno
mov
pop
push
inc
aam
jl
mov
scas
cmpb
lods
and
xor
and
jb
push
daa
dec
pop
sub
cwtl
pushf
sbb
aaa
ljmp
add
sbb
dec
pop
push
out
lods
dec
nop
add
push
sbb
rcrl
mov
in
cmp
cmp
xchg
cmp
and
inc
cmp
hlt
jns
pop
js
inc
mov
push
sbb
test
cli
sbb
jb
xor
js
ds
lret
aaa
repz
xor
fbld
jns
das
and
rcrb
mov
adc
loopne
ds
stos
ds
cmpsb
movsb
and
movsl
jecxz
inc
sbb
mov
aam
xor
inc
pop
fisttpll
bound
cmc
shlb
fnstsw
sti
ss
les
test
dec
add
lods
push
pop
rcl
sbb
sub
fiadds
cld
rclb
mov
sti
outsl
lock
int3
jns
cltd
jl
lds
arpl
jge
ljmp
inc
shrl
subl
mov
iret
push
mov
shl
nop
fsubl
add
push
adc
leave
or
add
aam
adc
in
insb
test
ds
frstor
xchg
or
mov
test
add
add
xchg
or
mov
faddl
mov
push
lods
or
mov
add
insb
ret
sbb
or
cwtl
fdivl
popa
lea
pop
scas
mov
dec
cwtl
enter
cmpl
sar
and
xchg
push
jb
dec
inc
mov
or
pop
cld
mov
sub
sub
pop
fcmovnu
sbb
mov
mov
dec
and
cmp
loopne
test
inc
dec
mov
cmp
nop
pop
jnp
adc
sar
xchg
xchg
mov
push
mul
stc
ja
inc
mov
or
fs
push
loop
cmp
cmpsl
subl
add
jge
js
pop
push
stc
mov
mov
pusha
je
clc
loop
ja
or
add
icebp
loop
dec
mov
push
push
pusha
lods
adc
aad
enter
mov
mov
inc
push
push
dec
dec
cmp
pop
movsl
cmp
enter
std
sbb
pop
pop
or
inc
cwtl
inc
inc
sub
lret
dec
jp
fdivr
stos
loop
adc
ja
and
pushf
pusha
push
xlat
shlb
adc
cltd
sub
insb
test
inc
and
and
idivl
adc
sarl
push
mov
add
movsb
ds
test
jne
cmp
pop
xorb
add
ja
mov
xchg
inc
mov
cmp
jne
push
push
into
rclb
mov
stos
cmp
dec
xchg
fdivrp
and
mov
test
jno
divl
xchg
cmpsb
cwtl
cmp
add
mov
push
test
push
pop
cmp
or
jns
dec
fadds
mov
jg
push
js
in
lock
loopne
mov
daa
pop
shlb
xor
mov
and
inc
pop
in
sub
scas
nop
add
push
add
or
jb
rcll
es
std
pop
jmp
dec
mov
fs
and
gs
add
movb
pop
int3
mov
cld
or
aam
sub
rcll
mov
mov
test
xor
adc
mov
xor
mov
cwtl
adc
outsl
xchg
add
inc
mov
test
mov
pop
push
and
inc
dec
or
pushl
push
call
add
es
repnz
enter
push
adc
out
add
inc
and
clc
push
add
adc
xchg
sbb
cmpsb
mov
mov
sub
adc
pop
or
lahf
inc
mov
jne
push
add
lcall
mov
mov
jae
and
mov
jo
cli
xchg
add
ret
xor
push
xchg
and
stos
push
test
movsl
jnp
or
push
outsl
in
jno
jl
loop
adc
inc
enter
out
loop
cwtl
scas
add
mov
lret
push
movsb
push
aad
dec
mov
repz
add
cs
test
adc
iret
inc
rolb
xchg
inc
mov
outsl
mov
and
es
and
mov
sub
int3
or
ljmp
and
lret
dec
or
sbb
xchg
test
or
sub
stos
fmull
lods
lods
add
das
adc
adc
leave
int3
sbb
xlat
mov
decl
jle
inc
or
push
add
sub
sbb
cwtl
dec
daa
inc
pushf
stos
lods
test
sahf
push
in
mov
mov
xor
cmpsl
and
mov
adc
xor
mov
jno
sbb
or
jle
dec
xchg
aam
mov
je
cmp
aas
add
sub
scas
jp
out
push
rorb
daa
inc
dec
and
mov
jmp
and
sti
stos
and
add
neg
and
nop
sbb
mov
and
xor
or
xor
jl
inc
lods
adc
inc
mov
pop
and
movsb
xor
arpl
dec
inc
cmp
pop
add
rcr
stos
lods
mov
pusha
pop
fs
add
sub
pusha
fmull
pop
and
push
sub
test
dec
stos
mov
jns
subb
xor
mov
or
sub
sbb
inc
mov
push
xchg
add
xor
ret
daa
xchg
mov
clc
mov
pushf
add
cmp
mov
mov
jb
add
fs
hlt
or
mov
dec
pop
mov
iret
sbb
rcrb
add
adc
lods
outsl
inc
stos
jmp
jno
dec
pop
call
cmc
ja
dec
cld
xchg
loopne
mov
cmp
inc
jne
dec
jae
and
test
cmc
and
rclb
sbb
mov
and
dec
daa
and
out
sbb
call
daa
push
mov
das
and
fmuls
mov
sbbl
inc
push
sbb
jae
inc
pop
add
in
popa
adc
mov
enter
fsubl
iret
inc
pop
fnsave
mov
nop
mov
inc
scas
aaa
add
mov
movsl
jle
enter
add
lock
sub
daa
or
nop
mov
std
push
and
outsl
in
insb
or
jnp
lock
and
dec
aam
cmp
adc
mov
pop
fisttpl
cmpsb
popf
rol
ficoms
arpl
jns
and
ret
add
mov
pop
or
insl
ror
jl
pop
add
push
aad
dec
and
shll
popa
and
pop
in
or
and
loop
popa
and
loop
add
sbb
lcall
sub
sub
mov
incb
add
mov
sbb
and
pop
movsb
add
stos
aad
inc
add
xor
lods
add
sub
adc
inc
dec
lcall
fsubrs
jns
call
lods
dec
xchg
outsl
pop
arpl
and
or
pop
out
add
add
outsl
pop
pop
adc
push
mov
scas
adc
adc
loopne
out
or
mov
hlt
sbb
dec
leave
add
clc
sub
popa
aad
iret
dec
mov
xor
sub
xchg
in
clc
and
dec
jno
or
jge
cwtl
dec
aam
mov
rolb
and
icebp
xchg
pop
dec
in
jge
out
push
js
mov
ret
xchg
cmp
mov
insl
add
inc
scas
cmc
arpl
mov
aaa
add
pop
addr16
add
adc
and
push
jp
inc
inc
jmp
orl
fisttpll
call
mov
out
call
mov
out
xchg
cmp
out
ljmp
add
stc
jno
test
mov
adc
addr16
int
push
sahf
rclb
add
mov
mov
stc
sub
sub
shlb
sub
push
jmp
pop
mov
flds
sub
add
cmp
lea
or
aam
pop
or
out
lcall
xor
xchg
and
mov
sbb
or
mov
gs
xor
jne
push
aad
inc
push
shlb
dec
and
pop
mov
dec
cmp
rcl
jg
and
arpl
sbb
xchg
enter
das
jo
add
jg
push
adc
mov
hlt
adc
imul
pop
cmp
pop
pop
mov
sahf
mov
pusha
xchg
jmp
push
orb
mov
sti
pop
fadds
add
ret
mov
jb
or
jg
sbb
mov
xchg
push
mov
ret
add
xor
jmp
lea
inc
andl
clc
cli
sub
rolb
pop
sarb
xor
mov
mov
cmp
add
push
add
ret
push
cmpsb
mov
int
mov
inc
loope
icebp
hlt
mov
add
sbb
mov
dec
mov
ficoms
jle
ljmp
dec
mull
imul
pop
and
stos
leave
mov
orl
hlt
pop
and
and
sarb
clc
and
sbbb
xor
and
roll
and
mov
or
push
xchg
pop
add
push
out
mov
inc
sbb
cmpb
jmp
jo
xor
das
push
cmp
out
xchg
in
add
jmp
jp
sbb
aam
cmp
pop
or
pusha
pop
dec
mov
mov
mov
inc
in
js
push
adc
sub
cwtl
add
add
add
pop
pop
sub
mov
sti
lock
xor
and
jns
add
loop
call
push
xor
add
rcr
in
jns
incl
push
mov
mov
cwtl
push
fstpt
xchg
mov
roll
push
add
cmpsl
pop
add
push
cmp
add
ja
pop
and
pop
and
jne
adc
data16
sbb
lea
outsb
cmp
push
iret
lcall
es
add
pop
mov
cld
push
test
inc
mov
iret
out
xor
pop
sahf
lods
mov
push
orb
stc
cmp
cmpsb
icebp
sub
push
nop
stc
pop
loope
and
test
adc
pop
mov
out
xor
cli
pop
jl
add
call
xchg
or
leave
add
cmp
loopne
add
shlb
xor
inc
inc
mov
sub
add
pop
add
cmp
addb
mov
dec
sbb
sub
or
jmp
xchg
mov
cmp
add
jecxz
sbb
cmp
sub
pop
add
in
popf
sbb
add
iret
shll
cmpsl
xchg
mov
repnz
nop
mov
clc
cmc
mov
add
testl
outsw
out
xor
cli
mov
lods
fwait
jne
pop
add
inc
xor
pop
sbb
add
outsl
sbb
and
fwait
nop
jne
sar
sahf
adc
add
cwtl
dec
pop
xchg
fldl
enter
add
jae
int
js
cli
push
nop
sub
stos
sub
aam
out
imul
sbb
cwtl
dec
je
jp
add
and
cmp
insl
mov
pop
mov
mov
mov
jo
or
test
in
outsl
or
xor
add
dec
or
add
push
rcrb
enter
inc
movb
or
fsubrs
and
add
cmp
pushf
les
nop
xchg
xor
sbb
xor
lret
pop
shl
push
add
js
std
imul
sbbb
sahf
add
sub
pop
pop
cmp
add
adc
cmp
pop
lret
jae
push
inc
and
lcall
mov
add
jbe
or
repz
sub
test
into
inc
mov
js
adc
dec
add
or
repnz
add
cwtl
xchg
subb
outsl
jne
cltd
push
adc
in
jae
dec
loop
push
dec
rclb
and
adc
dec
les
ds
fwait
push
mov
imul
push
and
gs
jge
xor
pop
js
cmp
lahf
cmp
mov
insl
int3
subb
add
iret
push
orl
pusha
mov
cltd
stc
inc
push
jg
addr16
cwtl
adc
inc
leave
add
fcom
inc
add
add
jmp
pop
lods
ljmp
push
fsubrl
cmp
xchg
or
xchg
inc
cmpsb
add
push
dec
and
arpl
cmp
xor
pop
mov
xor
dec
sub
add
jns
cmp
mov
pop
pop
push
int3
lods
stos
add
test
and
pop
xchg
out
aam
insb
mov
in
loopne
call
or
sub
xor
pop
in
xor
mov
cmp
add
jle
xor
sub
adcl
or
sbb
jns
sti
out
and
dec
movsl
jle
push
push
test
xor
insl
lahf
dec
and
frstor
into
fstps
icebp
insb
aam
adc
xchg
std
and
mov
insb
or
mov
nop
sbb
bound
jl
test
inc
jns
xor
jne
sarl
aaa
pop
push
in
add
or
add
ret
push
cli
mov
aam
and
repnz
add
push
clc
push
inc
mov
push
nop
pushf
lock
push
adcl
pop
dec
cmc
cmp
sub
add
push
push
adc
fs
cmp
sub
push
dec
stc
push
inc
arpl
jle
pop
mov
push
adcb
loope
js
jo
add
insl
jg
add
loope
lret
xchg
dec
adc
cwtl
dec
xor
pusha
inc
dec
cmc
into
out
ja
jns
jecxz
ret
pop
jle
inc
or
out
mov
lock
in
repnz
lds
in
cli
push
les
dec
and
xchg
js
pop
cli
shl
lahf
out
add
movsb
sbb
xchg
inc
inc
fsubrl
jl
sub
jg
sbb
inc
pop
dec
in
adc
inc
popf
add
shll
and
pop
xor
jl
punpckhbw
jne
add
gs
cmpsb
add
xchg
imull
mov
push
sub
or
imul
mov
add
or
test
pop
pop
jg
sub
mov
sbbl
add
insb
daa
adc
sub
xor
cwtl
bound
enter
scas
sbb
sar
mov
pusha
popa
addb
shlb
sub
jae
adc
jb
js
sbb
test
pop
insl
xor
or
xor
mov
es
pop
adc
or
lods
xor
or
sub
and
push
and
xor
lahf
lods
xchg
mov
xor
clc
shlb
lds
xchg
pop
xchg
subb
and
add
das
mov
jno
sub
xchg
sub
mov
xor
inc
sub
sarl
cmp
cwtl
push
cmp
push
push
std
mov
clc
cwtl
add
pop
les
ja
movsl
test
jae
sub
inc
pop
jbe
adcl
xor
jl
test
lret
loopne
pushf
lods
xlat
push
inc
out
fimull
je
cld
inc
rorb
out
cmp
jecxz
sbb
mov
xor
inc
and
cmp
movsb
movsb
icebp
loopne
jne
mov
js
addr16
cmpsl
jg
sbb
lods
inc
dec
sbb
inc
pop
mov
and
subb
dec
stos
sbb
inc
mov
icebp
push
xor
inc
dec
xchg
mov
rcll
sub
inc
xchg
ds
inc
mov
dec
je
mov
out
jbe
mov
and
pop
adc
or
cmp
or
test
and
popf
pinsrw
sub
test
mov
sub
mov
sbb
test
inc
data16
xor
push
inc
ss
rclb
push
or
test
xchg
adc
cmp
add
cltd
pusha
pop
fcompl
xor
int
mov
inc
add
sub
sbb
lds
inc
dec
test
fstps
js
and
fs
adc
int3
cmp
sub
dec
into
ret
fimull
rol
inc
and
movsl
sub
xchg
mov
mov
sub
inc
data16
test
inc
pusha
jp
and
jmp
jno
nop
inc
xor
icebp
les
mov
mov
cmpb
adc
jno
sti
imul
shll
sub
jno
mov
add
push
pcmpgtw
pop
pop
cli
push
add
jae
idivl
pop
jg
adc
adc
jnp
or
inc
andb
popa
jbe
add
push
imul
and
pusha
mov
mov
out
add
jle
and
sub
sbb
test
cld
or
cmp
lds
mov
pop
je
push
pop
mov
xor
xlat
out
int
xor
add
mov
dec
jmp
les
and
add
cwtl
orb
daa
sbbb
xorl
ret
cltd
cs
and
inc
xor
pop
fimuls
sbb
decl
sarb
icebp
or
mov
adc
xor
out
lock
adc
dec
dec
addl
jge
push
lods
pushf
movsb
push
mov
js
nop
aam
sahf
movsl
mov
dec
jp
jg
roll
mov
ret
sub
add
fldcw
sub
push
push
adc
mov
xor
inc
fs
mov
cmp
cld
mov
pop
ficoml
add
outsl
imul
jb
js
pop
bound
or
push
or
lock
xlat
daa
pop
mov
mov
push
roll
mov
push
mov
add
repnz
xchg
lcall
pop
stc
adc
je
add
fwait
cld
stos
xchg
mov
mov
dec
call
jb
and
dec
fyl2xp1
leave
popf
pop
mov
adc
movups
cmpsb
adc
or
das
addb
fstl
fistpl
or
bound
and
cmpsl
xor
adc
stos
test
and
dec
lods
xchg
mov
scas
inc
mov
mov
xchg
xchg
cwtl
and
aad
push
popa
hlt
inc
cmp
push
pushf
test
stos
add
gs
hlt
movsl
pop
dec
shrb
ds
out
jecxz
inc
shlb
pop
rclb
insb
mov
mov
sbb
add
xlat
shlb
movsl
adc
lcall
mov
push
mov
out
xlat
jle
push
icebp
fnstsw
cmp
dec
subl
sbb
add
scas
loopne
test
push
ret
testl
and
fdivrl
push
add
lods
jg
pop
ret
ja
or
mov
mov
lcall
dec
es
or
mov
ljmp
pop
inc
push
mov
add
stos
sbb
ljmp
sub
cwtl
push
adc
popa
andb
pusha
popf
cld
mull
adc
xchg
orb
ds
dec
add
mov
gs
pop
jmp
add
add
inc
jbe
cli
rorb
inc
jl
imul
arpl
movsl
and
or
xor
and
addl
adc
in
push
xchg
pop
call
sbb
sbb
movsb
incb
xor
insb
mov
add
lods
dec
add
arpl
aas
loopne
rorl
bound
adc
cmp
loop
movl
sbb
sub
clc
add
mull
push
lret
rclb
push
bnd
loopne
jb
or
std
or
and
xor
add
insb
ret
enter
testl
adc
pop
shl
fcoms
aas
ret
loop
and
insb
push
mov
xor
xor
xchg
cs
add
xchg
adc
repnz
arpl
lret
cwtl
push
pop
or
es
pop
push
imul
pop
jle
and
insb
adc
mov
jno
std
pop
jb
push
adc
adc
testl
xchg
pusha
sbbb
inc
mov
adc
adc
sbb
and
xor
jbe
je
arpl
and
pusha
mov
pop
insb
stos
iret
sarb
mulb
mov
arpl
add
add
je
imul
rcrb
call
adc
jnp
cwtl
nop
sub
pop
push
jl
divl
aam
or
orb
enter
pop
or
pop
popa
xor
sbb
or
fmuls
icebp
or
and
movsb
sbb
pop
add
les
xchg
sbb
cmp
inc
mov
pop
jno
sbb
push
adc
sub
bound
or
sub
inc
cmp
jno
cs
imul
pop
jl
pop
adc
xor
sbb
or
fdivr
loope
sbb
loopne
pop
and
inc
ret
popf
sbb
fiadds
cli
test
adc
dec
push
or
fcoms
call
and
sbb
je
sti
or
pop
xchg
ret
mov
loopne
mov
test
mov
pop
add
jno
xor
test
cmp
add
je
sub
mov
push
add
jmp
push
pop
xchg
or
xchg
push
or
in
mov
fs
or
jnp
add
xchg
gs
or
push
cld
lock
xchg
or
addb
sti
mov
pop
jae
movsb
adc
adc
and
sbb
test
adc
sbb
push
pop
and
clc
aas
pusha
jl
or
inc
or
test
xchg
sbbl
call
mov
or
sti
push
xchg
and
adcb
jno
sbb
pop
mov
pushf
int3
cs
in
pop
faddp
sub
jge
ds
xorl
jae
faddl
pop
iret
inc
pop
add
adc
and
sbb
out
lock
or
dec
pop
inc
mov
scas
lock
sub
xor
imul
jl
enter
pop
cwtl
lock
movsl
xchg
je
dec
or
pusha
add
arpl
hlt
dec
gs
add
nop
and
or
jno
add
add
adc
mov
or
lods
mov
mov
and
sbb
addb
je
adc
mov
aam
mov
sub
lds
stos
or
mov
les
xchg
add
xor
lret
stos
inc
inc
aas
jb
shlb
adcl
dec
test
inc
add
ret
jmp
int
rolb
fbld
adcl
push
into
xchg
sub
jg
xor
rorl
add
push
add
and
int
ret
adc
ficoms
mov
cmp
icebp
les
jno
xchg
leave
xor
dec
fdivrs
sbbb
cs
enter
and
sbbb
out
xor
jl
fidivrs
xor
push
and
jl
push
jmp
push
outsl
hlt
adc
xchg
inc
adc
pushf
call
mov
add
inc
pushw
or
data16
push
pushl
add
xor
mov
xor
dec
adc
jne
loopne
push
push
dec
in
cs
repz
push
add
xor
out
pop
call
xor
sub
test
insl
or
or
xchg
mov
nop
add
jnp
adc
ss
mov
sub
aam
les
movb
and
mov
add
push
cli
and
aaa
and
push
faddl
xchg
jo
xchg
mov
or
mov
adc
cmp
les
jb
nop
rolb
es
std
and
dec
cmpsl
cmp
lea
fdivr
sub
roll
int3
or
mov
and
cmpsl
pusha
lods
sbb
mov
jg
jae
inc
notl
or
pop
popf
repnz
nop
jl
mov
test
push
jl
mov
fdivrs
add
sub
or
push
stos
mov
test
cmp
divl
les
xor
xor
leave
cwtl
clc
imul
in
xor
mov
push
or
fdiv
cmp
mov
or
data16
aas
xor
xchg
adc
add
into
imul
push
mov
out
stos
cmp
cmpsb
push
lods
mov
scas
jo
push
pop
sbb
sbb
lock
cmp
outsb
push
rorb
xchg
call
jge
or
ret
add
test
pop
iret
jg
adc
dec
into
xchg
mov
ljmp
and
cmp
clc
les
mov
popa
xor
mov
push
xchg
push
addb
xor
data16
lcall
jg
add
push
mov
fdivs
popa
scas
shr
mov
cmovo
shrl
xchg
popa
das
imul
push
aam
pushf
xor
hlt
add
scas
mov
adc
rcrb
push
andb
mov
sub
fsubs
mov
push
pop
fstl
cmp
in
ljmp
aaa
loopne
lret
pop
push
inc
inc
test
inc
push
mov
mov
xchg
lcall
cmovl
mov
mov
xchg
add
filds
xor
and
pop
jg
xor
fcom
loopne
add
fidivl
xlat
pop
add
pop
lock
sub
sbb
sub
xor
xchg
mov
cmp
push
mov
lcall
adc
push
in
xchg
repnz
push
les
mov
mov
pop
xorb
mov
lret
dec
dec
or
dec
sbb
inc
daa
mov
add
adc
xchg
xor
add
xchg
cli
sub
lds
test
push
push
push
shlb
push
repz
mov
lods
and
mov
and
add
lea
sub
xchg
add
data16
mov
cwtl
adc
inc
inc
out
jp
jl
mov
orb
ds
cld
setle
xchg
movsl
subb
and
test
sub
sub
sbb
lea
xor
add
repz
pop
int3
sti
add
fcomps
inc
add
call
outsl
cmpsb
mov
xchg
add
es
sbb
and
rolb
xchg
cmp
jp
daa
jl
ljmp
and
test
mov
mov
jo
cmp
jb
hlt
adc
popf
sub
and
jb
int3
cmp
xchg
xor
enter
xchg
dec
sbb
xchg
sbb
dec
insb
nop
add
fdiv
sub
bound
adc
sub
lock
iret
je
or
ja
add
lret
mov
cltd
add
clc
das
adc
cmp
xor
lret
dec
cmp
inc
and
inc
mov
cli
add
ss
adc
divb
loopne
xchg
mov
andb
cmp
movsl
xor
or
inc
add
iret
bound
and
add
lods
and
push
pop
cmpsb
bts
data16
inc
adc
cmc
in
xchg
and
int
cmp
mov
outsb
jno
lret
cld
rol
add
imul
mov
fcomps
cmp
xor
arpl
ror
adcb
inc
mov
adc
aam
mov
scas
cmpsb
add
out
pop
or
data16
andb
int3
imul
xchg
pop
pop
mov
mov
cmp
mov
vmread
icebp
sbb
pushf
sbb
in
cld
add
lds
repnz
and
adc
mov
scas
add
mov
add
andl
mov
or
rsm
mov
lret
sbb
xchg
scas
push
dec
sub
or
ret
sbb
loopne
aam
push
movsl
xor
in
and
add
adc
xor
xchg
cmp
sub
xchg
sahf
cmpb
or
mov
pop
loope
cmp
and
inc
pushl
jno
pop
jmp
adc
xor
lods
add
sti
pusha
jbe
mov
aaa
fadds
mov
jg
mov
sbb
mov
ror
add
rcrl
inc
fcmovb
sbb
inc
cltd
insb
adc
rcll
mov
mov
les
rclb
add
jl
inc
sarb
mov
ss
mov
pop
dec
cwtl
adc
cmp
ror
pusha
push
inc
aaa
mov
add
lds
cmpb
adc
xor
popf
xchg
xchg
and
push
cmpsb
sub
insb
xor
clc
mov
cmp
dec
and
mov
jns
das
or
popf
pop
add
test
mov
inc
and
lea
test
push
pusha
insb
loopne
and
fwait
adc
cmp
inc
inc
decl
mov
add
and
or
cmpsb
aaa
cltd
or
mov
or
xor
scas
orl
ss
cmp
pop
pusha
jge
lret
stos
movsb
mov
orb
push
ret
rolb
sub
int3
or
fs
and
push
cmp
sub
xchg
clc
or
inc
mov
and
pop
adc
mov
nop
ret
add
arpl
pusha
inc
test
and
lea
cs
pushf
push
stc
in
sbb
fcomps
arpl
and
jbe
sahf
dec
repz
add
punpckldq
rorl
test
push
sub
pop
sbb
cld
aaa
in
and
xor
and
hlt
and
pop
adc
lret
mov
jbe
dec
jg
add
and
movsb
add
mov
out
pop
push
cmp
cli
pop
dec
daa
loopne
sub
test
or
pop
notl
xchg
es
mov
aas
sub
shlb
fs
lods
mov
outsl
sub
inc
inc
sub
dec
ljmp
idivl
in
int
pusha
inc
dec
sub
xchg
jg
imul
aas
jmp
sub
mov
call
or
adc
scas
pop
push
xchg
cli
in
sub
sbb
cmpsb
fsts
inc
and
movsb
sbb
add
mov
or
xchg
in
mov
add
cmp
push
add
dec
popf
mov
mov
dec
add
push
mov
and
mov
bound
sub
test
roll
mov
mov
je
rcrb
lcall
pop
mov
cmp
xchg
sub
inc
jmp
mov
or
imul
xchg
movsb
lahf
add
or
add
iret
adc
es
mov
or
outsl
jmp
and
push
movsl
mov
or
rolb
daa
add
xchg
mov
sbb
sbb
xor
pusha
sub
nop
test
jnp
nop
adc
push
popf
sbb
cmpsl
shlb
repnz
aas
xor
xor
in
sbb
cmp
gs
in
arpl
and
cli
ret
inc
add
ret
addl
mov
or
nop
test
insl
add
mov
cwtl
push
mov
add
js
daa
aad
pop
adc
mov
sti
mov
insb
stos
sbb
cmp
add
push
out
outsl
popf
das
aas
adc
adc
add
sbb
cmpsb
sbb
pop
push
inc
xchg
adc
mov
fwait
xchg
sbb
daa
popw
push
pusha
and
xchg
sbb
movsb
cmp
adc
iret
lods
or
mov
mov
mov
xorb
sub
test
scas
cs
mov
xor
movsl
inc
test
mov
out
adc
pushf
test
sub
jae
das
adc
dec
scas
movsb
or
sub
inc
in
repnz
inc
xchg
bound
xchg
mov
sub
clc
mov
inc
dec
dec
cmpsb
add
les
lea
inc
in
leave
movsb
add
add
filds
sub
sbb
pop
clc
pop
mov
or
pop
ss
lock
jmp
xor
icebp
out
cmp
sets
cs
mov
mov
mov
lds
pop
and
lock
mov
mov
lock
in
mov
nop
pop
inc
push
push
aam
xor
les
test
cmpl
dec
outsb
cltd
inc
add
ljmp
dec
mov
inc
mov
push
jo
xchg
pop
add
push
aas
fndisi(8087
stc
mov
rcrl
std
sbb
loop
adcl
shlb
scas
pop
in
pop
sub
repnz
mov
and
notb
fs
sub
and
dec
addr16
mov
pop
movsl
adc
xchg
mov
divl
les
sub
cmp
add
xor
add
inc
subl
test
mov
cmp
add
cmpsb
dec
adc
je
das
or
mov
hlt
or
push
adc
into
cli
pop
push
mov
jecxz
shl
movsb
and
mov
sub
mov
sbbl
lods
or
or
pop
std
xchg
cmp
jl
add
stos
out
and
push
nop
orb
jl
sbb
das
fs
ret
mov
cmp
mov
mov
imul
popf
jb
decl
or
rcll
xor
nop
xchg
pop
and
lret
test
dec
lods
push
shlb
sbb
and
loopne
pop
add
sahf
daa
mov
and
cs
jo
add
sbb
cmp
mov
adc
push
cwtl
inc
and
js
rclb
shll
icebp
cwtl
inc
dec
inc
adc
push
mov
negl
shlb
repnz
jl
mov
push
cs
arpl
lock
aaa
xchg
popf
pop
sbbl
inc
mov
sub
test
into
and
jl
mov
lds
cwtl
aas
add
inc
push
lret
ror
push
dec
in
dec
das
cmp
cmpsb
cmp
xlat
ret
das
pop
adc
cmp
add
xchg
mov
add
sub
les
push
xchg
and
or
inc
mov
daa
add
mov
dec
cmp
cli
sub
shlb
mov
icebp
dec
xchg
jo
pop
mov
and
pushf
in
sub
add
jbe
jge
dec
add
push
sbb
nop
push
add
lea
or
xchg
aam
jo
add
add
xor
cld
jmp
pop
push
and
mov
jns
push
adc
inc
call
insl
popa
pop
les
out
dec
jle
xchg
out
mov
das
cmpsl
lcall
mov
enter
test
jo
pusha
leave
shrb
pop
cmp
fucomp
sbb
adc
arpl
pop
push
jmp
shlb
aad
push
mov
or
test
pusha
ss
push
inc
adcl
xor
and
pop
test
rcll
imul
test
add
ret
xchg
fiadds
or
pop
mov
lock
push
pusha
or
add
aas
mov
shrb
cmp
pusha
pop
icebp
cwtl
add
mov
mov
popa
mov
inc
xchg
popl
popa
test
sub
rclb
pop
sub
loope
sbb
stos
test
call
cmpl
insl
adc
sub
and
out
inc
iret
and
imul
ficomps
sub
dec
rclb
push
or
scas
jns
xor
aam
pushf
out
ja
sbb
andb
and
mov
adc
lahf
lcall
sub
mov
pusha
cmpsl
xlat
fwait
repnz
test
adc
mov
add
scas
jns
mov
fmull
das
xchg
and
stos
sti
shll
xchg
sbb
fcompl
xor
sub
clc
pushf
inc
fs
jecxz
or
into
mov
and
movsb
adc
adc
or
push
ja
xor
push
push
adc
nop
cmpl
mov
pop
pop
mov
push
mov
push
add
aaa
enter
inc
pusha
jp
sub
fxch
xor
movsl
fwait
pop
icebp
and
dec
cmp
jno
cmp
in
jmp
fwait
jecxz
push
jnp
loopne
pusha
adc
jb
or
cwtl
jl
push
nop
insb
aaa
or
adc
add
pop
mov
fimull
inc
push
shl
push
or
push
clc
and
xor
and
add
lods
movb
ja
adc
push
mov
adcb
add
rol
adc
cwtl
lods
add
inc
cmc
and
mov
cmp
mov
pusha
jbe
or
xchg
add
dec
cmp
mov
pop
push
push
lahf
test
test
mov
jecxz
lods
pushf
xchg
push
mov
rclb
jb
shlb
pop
or
sub
pop
or
and
add
mov
bound
or
sahf
ds
add
cmpsl
bnd
mov
imul
pop
ficoml
jmp
test
sbb
mov
pop
or
pop
mov
mov
lahf
add
sbb
mov
xchg
stos
jo
sarl
inc
aam
movsb
push
das
add
mov
push
mov
add
push
sbb
push
jae
or
push
rclb
pusha
inc
and
jmp
or
mov
enter
mov
and
or
nop
dec
mov
dec
mov
adc
nop
clc
add
xchg
fcmovne
hlt
push
sbbb
add
inc
cwtl
test
fdivs
ret
pop
xor
push
or
jge
sbb
sbb
cwtl
jl
pop
add
push
push
adc
jo
push
adc
mov
inc
pushf
jns
dec
jmp
or
pop
mov
adc
mov
repnz
mov
xor
and
shlb
cwtl
inc
insb
and
pop
push
jg
ja
mov
inc
xor
rcll
dec
out
mov
js
sbb
or
jo
pop
les
adc
sarb
mov
dec
jno
fbld
pop
push
mov
mov
ds
mov
cmp
sbb
and
inc
add
nop
dec
mov
adc
sbb
ret
pop
lods
in
adc
and
inc
sbb
and
aas
fsubs
sbb
sbb
jno
rcrb
inc
cmp
in
or
mov
add
lret
loope
cmpl
enter
xchg
jmp
mov
inc
js
sbb
pop
sbb
dec
push
addb
lods
jne
fsubs
jnp
dec
or
add
sbb
sbb
cwtl
pop
xor
dec
cwtl
push
mov
dec
jmp
or
mov
adc
fstps
and
in
jmp
rorb
repnz
nop
cwtl
sub
xor
add
bound
js
cltd
jp
add
xchg
add
cli
mov
push
out
popf
dec
push
cmc
mov
call
and
inc
push
push
adcl
adc
pop
test
cmp
dec
subb
mov
add
cmpb
sub
orb
jmp
jl
rorb
dec
pop
xor
mov
lds
cwtl
cwtl
inc
arpl
and
add
inc
xorl
or
jl
pop
cs
call
cwtl
mov
dec
add
out
andl
shl
test
mov
cmp
xor
and
aas
outsl
jnp
sbbb
fsubl
push
push
cld
rolb
stos
les
lods
push
sbb
and
add
shlb
aas
bound
loop
rorb
cld
in
sarl
inc
mov
adc
add
mov
mov
mov
clc
sarl
or
pop
test
sbb
sbb
dec
in
int3
movb
addb
mov
pop
or
ret
or
pop
dec
roll
movsb
mov
inc
jp
dec
or
or
inc
les
rolb
and
cmp
adc
in
add
add
or
imul
push
lods
xlat
and
lock
xor
loop
jecxz
mov
rcrb
in
cli
dec
outsl
ret
in
dec
mov
lods
orb
add
add
call
orb
rcl
cmp
fdivrs
sarb
daa
in
mov
pop
mov
pop
dec
rcl
xlat
push
xor
add
test
mov
mov
or
mov
je
mov
push
out
add
dec
jo
out
xor
add
adc
inc
cmpsl
and
mov
pop
mov
jno
mov
and
mov
pusha
fiaddl
lcall
nop
jmp
and
xlat
push
fcom
call
and
cld
adc
and
inc
enter
pop
add
dec
psrlw
sbb
dec
pop
jns
dec
lock
bound
xor
cs
sub
sti
js
cs
mov
push
stos
test
daa
sbb
mov
add
and
jl
inc
pop
push
add
stc
dec
add
jo
sbb
lods
add
ret
add
cmp
pop
pop
xchg
mov
pop
outsb
push
call
pop
ret
push
mov
popf
sbb
and
ret
xchg
inc
add
subl
xchg
jno
or
mov
jno
call
adc
repnz
test
clc
add
sbb
ret
sbb
or
mov
movl
into
aas
or
pop
in
jp
or
sarb
jg
rcrb
sbb
orb
arpl
sbb
mov
push
mov
mov
jp
adc
pop
add
cmp
pop
ret
xchg
mov
mov
add
lahf
mull
jb
mov
jmp
sti
add
xchg
adc
ret
shld
sub
mov
pop
es
adc
test
mov
icebp
adc
mov
data16
push
cmp
xor
mov
inc
mov
pop
ret
in
inc
dec
and
add
ret
jnp
adc
popa
add
mov
arpl
adc
sub
je
push
bound
mov
or
fldl
inc
mov
pop
push
pop
and
pop
xchg
mov
lret
dec
or
mov
sbb
push
aas
test
sbb
push
pop
xchg
scas
push
cmc
mov
adc
push
punpckldq
adc
addb
rorl
add
pop
es
iret
test
out
or
insb
or
mov
or
xor
dec
aas
push
jp
icebp
push
or
add
jb
pop
ret
and
test
lret
test
jp
sub
sbb
cmp
adc
ret
arpl
pop
cmp
sti
lods
jno
add
xor
or
rol
adc
sbb
or
mov
xchg
ret
loope
pop
push
insb
push
movsb
push
cmp
adc
add
aad
xchg
dec
ret
push
orb
sti
add
pusha
call
mov
inc
pop
and
pop
push
mov
inc
and
jmp
push
iret
les
push
testb
lret
sbb
decl
stc
and
add
out
mov
cltd
lret
xor
sbb
int3
fiadds
in
fcmove
xchg
inc
pop
call
mov
inc
jbe
and
and
and
cmp
dec
or
pop
jmp
add
inc
push
add
aad
dec
push
mov
or
mov
jmp
mov
iret
bound
shlb
sbb
or
dec
and
popf
inc
sub
xchg
inc
add
ret
or
aas
mov
stc
inc
adc
jmp
pop
sub
and
or
xor
jnp
fmul
dec
cmp
xchg
adc
std
xor
sub
mov
and
popa
mov
rcrl
sbb
fldl
sub
cli
leave
or
data16
nop
imul
pop
add
and
adc
jg
cld
sbb
push
in
sbb
movsl
adcl
leave
sbb
jae
jg
bound
movzwl
jmp
add
or
js
xor
nop
loop
mov
notl
sub
sbb
add
das
dec
popa
imul
sbb
test
xlat
push
mov
xor
sub
sub
mov
mov
xor
mov
rcl
xor
mov
mov
xchg
cltd
or
popa
xchg
daa
les
ss
xorb
cmpsl
pop
inc
sbb
hlt
fwait
adc
test
sub
mov
push
jns
mov
add
or
xor
jg
ret
call
jbe
es
adc
mov
adc
xor
cmp
leave
xor
push
popa
pop
ret
enter
push
add
ret
xor
cmp
adc
adc
and
shll
push
xor
or
or
test
out
subl
pushl
sub
incl
mov
xor
add
add
jne
xchg
mov
push
sbb
cli
cmp
fs
adc
pop
gs
dec
call
inc
dec
jge
adcl
sub
push
and
mov
push
sub
out
fdivrs
fdivrs
add
pop
inc
xor
clts
in
notl
ss
xlat
movb
shrl
mov
xor
jb
leave
sub
lock
jo
call
lcall
push
add
and
scas
loope
push
cmp
xchg
inc
ss
sub
mov
mov
gs
inc
je
sbb
mov
shlb
adc
push
aas
loop
xor
adc
jmp
add
jp
pop
or
adc
push
lods
dec
xchg
ds
negb
push
roll
adc
pop
push
js
cs
sub
cltd
sbb
subl
or
fistps
push
lret
enter
shll
add
in
sub
mov
arpl
pop
cmp
pushf
ljmp
mov
lea
mov
xchg
mov
popa
jmp
lock
in
inc
xor
pop
add
inc
hlt
xor
add
sbb
rcrb
mov
pop
and
xor
push
ja
sbb
sub
cmp
addr16
out
xor
mov
adc
inc
push
xchg
and
push
jmp
sub
dec
int
fcmovbe
xor
stos
mov
cmp
adc
sub
dec
mov
push
pop
xchg
cmc
adc
popa
icebp
jno
push
aas
add
mov
sub
adc
pop
jmp
push
sub
leave
mov
or
mov
push
and
jecxz
shlb
rcll
sbb
add
mov
sbb
shll
mov
sbb
cmp
lea
shlb
push
add
int
pop
xor
insb
loopne
dec
daa
add
mov
dec
or
orb
pop
adc
test
inc
push
pusha
xchg
mov
jno
nop
mov
pop
enter
push
cmp
inc
and
icebp
ret
mov
sbb
test
jno
aaa
inc
clc
adcl
cmpsb
dec
mov
add
fsubp
andb
pop
jmp
fsts
mov
cmp
pushf
fmuls
in
lods
arpl
sbb
cmp
cmpb
dec
insl
push
test
aad
jg
inc
scas
mov
lahf
scas
push
mov
or
sbb
cmp
and
mov
push
pop
mov
push
or
add
insl
mov
fld
jbe
jg
orl
sbb
pop
rcrl
jo
call
or
mov
push
movb
dec
enter
or
and
push
std
add
jne
mov
push
jnp
push
and
add
call
or
sbb
pusha
fmulp
and
push
mov
fimuls
pop
je
pop
insb
mov
push
mov
clc
rol
adc
dec
outsb
stos
add
sbbl
aaa
pop
popa
adc
push
sbbb
pusha
push
adc
jo
dec
and
fldl
call
mov
mov
mov
xchg
popf
or
add
cmp
inc
xor
mov
sti
es
inc
add
es
sbb
sbb
push
sbb
ja
mov
mov
iret
andb
mov
inc
stc
and
and
adc
mov
mov
add
jne
movsl
test
sub
xor
rol
fidivs
lds
xchg
das
inc
xchg
add
mov
add
sub
cmp
add
xor
push
leave
mov
cmpl
sub
push
adc
pop
dec
mov
add
mov
mov
pop
xor
and
icebp
and
mov
or
or
and
add
jmp
and
sbb
mov
jmp
out
iret
aas
mov
push
add
inc
pop
xchg
hlt
fmull
add
inc
mov
and
xchg
mov
xchg
sbb
icebp
and
mov
add
push
lahf
in
fldl
cld
pop
fnstsw
jge
test
sahf
mov
sub
int
les
clc
cld
jge
test
mov
data16
and
jmp
mov
jnp
inc
lds
adc
xchg
add
insl
inc
mov
mov
push
sub
push
or
sbb
xchg
and
jnp
xor
je
xchg
adc
rolb
mov
shrl
imul
mov
je
push
push
push
pop
xor
cs
adc
push
push
adc
ja
cmpl
adc
lock
push
dec
push
loopne
stc
adc
sub
mov
push
sub
test
jne
jne
inc
push
mov
enter
dec
push
andb
mov
add
jns
push
push
or
xchg
inc
ss
adc
lea
add
xor
dec
xchg
inc
pop
sub
pop
push
jl
push
data16
lods
sub
data16
or
xchg
push
push
inc
or
add
shl
mov
movsl
cli
shrb
mov
adc
andb
hlt
std
lock
dec
lods
cltd
aam
sbbb
pop
outsb
out
xchg
shlb
dec
and
lock
xor
cmc
jbe
adc
enter
add
push
push
mov
es
dec
pop
and
mov
fsubs
add
inc
inc
arpl
frstor
pop
cmpb
test
pop
and
popf
les
or
mov
mov
xorb
xchg
pop
faddl
jmp
xor
fists
insl
popa
clc
push
adc
add
pop
or
popl
nop
or
es
jmp
cs
xor
test
mov
mov
jno
popf
mov
jmp
std
lock
mov
es
and
repnz
int3
and
add
add
ret
xor
ret
sub
mov
inc
orl
dec
sbb
pop
ret
xchg
dec
pop
xor
call
fmull
mov
jl
les
sbb
sub
sbb
add
dec
sbb
popa
sub
pop
pushf
or
xchg
psrad
or
sahf
fucomip
popf
jo
in
dec
xor
rol
jne
add
mov
inc
xlat
push
dec
add
or
xchg
mov
or
cmp
pop
dec
push
jne
xchg
and
push
jae
cmp
pop
cwtl
daa
adc
hlt
add
lods
dec
push
and
push
popa
testl
out
dec
push
dec
sbb
repz
mov
xchg
dec
add
fmulp
pop
pop
mov
loop
inc
push
dec
test
push
push
das
popf
sbb
mov
rclb
popf
cmp
scas
movsb
test
xlat
outsl
jo
mov
jmp
mov
add
nop
add
out
imul
in
add
pusha
sarl
inc
aas
sub
pop
cmp
xchg
push
inc
lea
sbb
sub
dec
cwtl
fimuls
lahf
pusha
push
mov
pop
pop
and
lea
cmp
adc
and
jb
push
jmp
mov
adc
dec
sub
mov
pop
or
bound
adc
xor
and
subb
hlt
iret
add
push
fsts
jns
sbb
cmp
sarb
sbb
sbb
push
add
lds
ret
jne
mov
cmp
arpl
adcl
push
test
and
fiadds
ljmp
mov
or
enter
pop
xorb
loop
mov
sbb
mov
sbb
push
push
mov
loopne
lret
ds
xor
fdivs
jmp
pop
pop
add
pop
inc
push
add
add
xchg
cmpsl
movsb
shlb
mov
outsl
xchg
add
adc
pop
jne
pop
dec
pop
push
sbb
cmp
add
mov
and
gs
inc
adc
cltd
inc
pop
stc
mov
leave
sub
inc
adc
add
imul
add
push
xor
adc
incb
add
xchg
xchg
xor
and
mov
fisttpll
fsubrs
popw
xor
ret
arpl
and
pop
pusha
movsb
and
popa
push
and
mov
add
xchg
lret
push
addr16
dec
or
sbb
pop
add
fdivs
pusha
jb
inc
bnd
rcl
dec
pop
inc
popf
dec
adc
test
nop
cmpsb
pusha
mov
lcall
into
lea
and
pop
cmp
subb
or
test
xor
add
pusha
add
xchg
je
call
gs
imul
in
jb
insl
popa
or
push
cmp
gs
arpl
je
repz
aad
mul
jae
data16
addr16
fs
jbe
insb
xlat
jo
outsl
jae
ja
xor
sbb
sbb
outsb
addr16
cmp
push
push
jns
jne
or
sub
xorb
inc
push
push
dec
sub
jmp
js
inc
repnz
cmpsb
jnp
jo
or
imul
sbb
adc
into
push
pusha
inc
call
test
and
xchg
outsl
cli
sbb
sbb
add
sbb
push
mov
sbb
ret
dec
pushf
pextrw
sbb
vmread
add
arpl
or
and
or
push
and
scas
fs
daa
ret
dec
in
sbb
push
push
cli
and
ljmp
loopne
lcall
cmp
fs
cmp
fs
jl
fs
cmp
fs
cmp
mov
or
in
add
mov
or
sub
inc
adc
dec
push
sub
xchg
mov
mov
dec
xchg
mov
push
pusha
xor
inc
ret
aam
mov
inc
test
data16
or
mov
les
lcall
pop
and
sahf
xchg
add
or
or
or
enter
xor
xchg
and
fs
push
sub
cmp
fsubl
pop
cmp
loopne
andb
add
inc
and
sub
ds
fsub
rcrl
int
cmp
lea
andb
adc
mov
jle
sub
jnp
mov
pop
add
scas
pop
sbb
push
dec
int3
cld
jnp
mov
push
mov
add
sub
popa
pushl
in
push
xor
or
cwtl
cmpsb
xchg
jg
fidivs
pusha
shr
imul
inc
stc
mov
dec
add
inc
rolb
outsb
outsb
push
mov
mov
mov
jne
and
jmp
mov
adc
inc
jmp
ljmp
ret
sahf
inc
sub
adc
sbb
pop
js
shll
lret
into
or
lods
add
pop
arpl
mov
ljmp
cmp
adc
repz
dec
scas
pop
andps
mov
imul
add
int
pop
mov
xor
dec
cmp
sti
add
cli
cmp
jle
jmp
add
push
push
mov
xadd
sbb
mov
push
jbe
sub
repnz
xchg
fiadds
jecxz
jo
mov
out
orb
cmp
repnz
push
pop
sahf
pushf
sbb
inc
jmp
call
add
dec
cmp
cld
inc
cltd
sbb
add
jg
out
mov
stos
call
xorb
sbb
imul
lods
dec
push
notl
cwtl
bound
sbbb
es
cwtl
mov
pop
cwtl
or
hlt
mulb
cmp
push
movsb
bound
cmpsl
clc
cmp
outsb
jne
or
mov
xchg
out
push
mov
add
pop
push
cs
stos
xor
jl
push
jbe
popa
xlat
mov
add
fmulp
cmp
inc
popf
fs
cmp
inc
xchg
jle
loop
add
push
cld
jno
popa
add
test
in
stc
cwtl
out
icebp
nop
sbb
add
push
pop
xor
push
lock
int3
cld
dec
add
ljmp
lods
int3
pop
cmc
test
nop
shll
ljmp
xchg
mov
ret
dec
into
jo
adc
add
dec
fldl
jno
pusha
je
test
add
scas
adc
xchg
sarb
clc
daa
inc
lcall
or
and
add
xor
int
stc
divl
pusha
jl
add
movsl
int3
out
mov
inc
sbb
and
shlb
or
xchg
cld
std
add
xchg
fidivs
add
test
sbb
jno
add
icebp
xchg
jecxz
je
mov
mull
mov
add
loope
int3
hlt
bound
mov
sti
xor
inc
xor
clc
mov
pusha
fprem1
movsl
add
stc
or
hlt
outsb
jecxz
orb
cli
rolb
sub
pop
addb
leave
stc
enter
out
push
mov
sbb
pusha
rorl
sub
push
push
mov
dec
into
sub
in
into
and
inc
pusha
les
movb
mov
mov
sti
daa
inc
repnz
push
adc
add
add
adc
in
mov
xchg
add
out
jl
call
add
jl
pop
jmp
fisttps
dec
or
or
mov
cmc
addr16
jo
std
dec
jl
cmp
test
stos
in
andb
popf
pop
lret
add
outsb
lock
stc
push
adc
repnz
pusha
ja
mov
imul
push
push
mov
adc
and
jae
clc
adc
xchg
mov
push
nop
cmp
jp
cs
inc
dec
es
inc
adc
addb
jno
mov
and
movsl
mov
int3
sub
hlt
in
xchg
mov
out
mov
add
daa
inc
lcall
add
loopne
pop
mov
sbb
cltd
dec
leave
add
mov
pop
push
decb
shll
add
xor
cld
jo
add
out
stos
hlt
lock
cmp
out
cli
add
pop
jmp
test
jl
arpl
push
push
in
add
mov
cmp
xchg
add
outsl
sbb
fists
adc
pushf
lcall
jmp
je
lds
and
mov
fildll
pop
movsb
push
inc
sarb
inc
lcall
add
aaa
and
push
mov
popa
rorb
sub
mov
sbb
sub
sub
pop
push
cmp
mov
outsl
jo
popf
sbb
xchg
jle
mov
sub
and
orb
push
popf
js
lds
cltd
push
sbb
add
cwtl
adc
enter
xor
negb
jns
mov
sbb
sbb
aas
lcall
sub
outsl
lock
xor
push
pop
dec
add
mov
icebp
cmp
add
aad
and
sbb
inc
add
pop
inc
lret
loopne
test
test
les
repz
adc
mov
cmp
loop
adc
dec
sbb
pop
cmp
jo
push
out
dec
jbe
nop
jl
add
mov
mov
sbb
xchg
rep
xchg
push
int3
cmp
sahf
or
fnsave
pop
mov
lods
lock
xchg
dec
xchg
sbb
ficompl
pusha
lods
push
into
or
adc
icebp
inc
mov
xor
dec
lods
jne
push
pop
adc
push
inc
xchg
add
pop
outsb
dec
test
jp
cli
cmp
xchg
maskmovq
mull
xchg
bound
popf
inc
fs
jle
pop
sbb
aam
rolb
mov
inc
out
into
int3
negb
jmp
int
sarb
sbb
dec
cwtl
sub
sti
arpl
jns
loopne
pop
sbb
mov
pushf
lock
or
xchg
pop
inc
mov
mov
mov
pop
orb
cli
stos
push
pusha
addb
or
jmp
int3
jno
call
add
xchg
outsb
push
xchg
inc
push
rol
out
or
push
lods
mov
and
add
lock
arpl
lods
clc
roll
repz
shll
imul
xor
sbb
add
mov
adc
add
dec
cwtl
xchg
mov
imul
sub
jmp
mov
aas
xchg
and
loopne
into
add
sub
jmp
pop
cmpb
sbb
xchg
lds
inc
call
and
sub
roll
sub
xchg
je
into
outsb
jle
and
inc
sbb
sub
mov
push
xchg
int
imul
add
arpl
or
pusha
rorl
mov
adc
add
or
inc
repz
enter
add
sbb
adc
daa
testl
std
sub
insb
dec
add
hlt
add
jo
sbb
jno
mov
cmp
in
subb
ja
aad
mov
int
pop
jo
movsb
inc
add
shrl
lock
inc
aam
add
subb
cmp
test
outsl
daa
or
adc
icebp
popa
out
add
push
xchg
repz
sbb
cs
in
sub
jne
cwtl
and
xor
sbb
cld
test
xchg
or
or
xchg
enter
add
jle
mulb
nop
xchg
pmaddwd
pop
je
mov
hlt
adc
jae
pop
nop
add
xor
xor
sub
sahf
test
fsubs
adc
mov
and
es
ret
lods
add
sarb
jno
sar
xorb
faddl
cmp
sub
adc
add
or
push
xchg
sahf
insb
push
mov
sub
pop
notb
pop
pop
cmp
mov
xor
icebp
sbb
add
adc
xchg
mov
xor
dec
xor
mov
mov
adcb
push
jl
adc
leave
stc
shlb
rclb
sbbl
jge
nop
dec
xchg
js
testl
mov
cmp
lcall
cld
movsb
push
add
outsb
sbb
add
xchg
xchg
mov
add
push
pop
xlat
jo
add
call
add
cmp
mov
add
jecxz
mov
loopne
inc
jno
inc
cmp
pop
outsl
js
cld
push
filds
fstp
iret
jge
in
mov
out
inc
jg
jle
scas
add
pop
xor
cs
roll
mov
pusha
mov
repnz
jb
lahf
insb
ficomps
in
add
inc
pop
push
jmp
pushf
enter
int3
jmp
mov
fwait
add
lcall
pop
or
fbld
cmp
inc
jno
xlat
addr16
add
shlb
push
or
or
cli
and
mov
loopne
sub
add
jae
fmul
pop
add
jp
fsubs
les
push
and
fnstsw
fistpl
pop
push
movsl
mov
sbb
xorb
ja
dec
mov
dec
add
daa
xchg
rorl
notl
inc
iret
mov
xlat
mov
shrl
mov
fchs
test
lret
push
inc
ja
add
add
pop
and
jmp
jecxz
push
loopne,pt
and
test
mov
adc
addps
clc
inc
push
movsb
rorb
or
dec
jne
xor
add
dec
es
imul
clc
dec
sub
cmp
dec
add
sub
movsb
mov
pushf
add
mov
loope
in
fwait
out
mov
jecxz
inc
mov
daa
inc
push
xchg
shrb
ja
push
ljmp
xchg
dec
aad
add
xor
add
loop
mov
pop
jl
inc
push
mov
sbb
rorb
arpl
sbb
test
pusha
jg
daa
sbb
sbb
gs
cmp
adc
lea
lock
mov
mov
mov
xor
addb
push
add
cmp
cs
or
push
or
add
xchg
push
out
or
sbb
lahf
push
pop
ds
sbbb
in
jb
xor
push
xor
repz
clc
addr16
adc
sbb
mov
adc
adc
sub
out
pop
dec
add
mov
pop
leave
or
ljmp
imul
pop
add
dec
mov
push
cmp
je
das
sbb
ret
add
mov
or
add
push
xchg
sbb
cmc
jae
xor
pusha
aas
add
enter
push
add
std
mov
dec
push
dec
outsb
mov
mov
add
adc
loop
add
hlt
xchg
or
loopne
movsl
jne
popl
in
sbb
sets
rclb
push
pop
mov
imul
cli
cld
add
out
ljmp
lahf
jb
pusha
add
push
xor
xor
insb
push
test
aad
xor
vpaddb
jo
add
cmpsl
xchg
sbb
xor
js
lds
push
mov
add
pop
lods
data16
in
fildll
mov
mov
ss
and
sarl
jns
sbb
mov
add
fcompl
cwtl
icebp
aaa
inc
sahf
mov
add
orb
cs
fstl
ja
add
idiv
pop
aam
enter
inc
add
cmp
outsb
lahf
adc
add
dec
pop
adc
dec
and
add
cld
stos
loopne
pop
add
and
pop
add
xchg
cltd
adc
cld
pop
sti
cmp
cmpsb
nop
xchg
or
mov
add
pop
test
cltd
pushl
sbb
out
and
jbe
pop
out
mov
push
adcb
mov
cmp
dec
push
fs
addb
testl
pop
mov
sti
inc
cmp
les
loope
fnstenv
pop
add
pop
in
mov
inc
xchg
adc
mov
rcrb
push
out
in
cli
or
adc
add
imul
lock
sbb
cmp
out
in
imul
dec
sti
or
negb
add
xchg
jmp
xchg
inc
inc
and
mov
jne
add
jge
enter
inc
mov
xchg
stc
hlt
mov
add
sti
xor
or
scas
jmp
inc
add
cmp
int3
mov
mov
xor
pop
xor
test
testl
fiaddl
mov
adc
jl
pop
inc
hlt
es
and
jno
pushf
pop
add
loope
es
add
push
fs
in
mov
shlb
ljmp
add
out
push
add
push
adc
cmp
add
add
adc
jecxz
push
cmp
ja
pop
or
das
in
cld
nop
clc
clc
addl
out
or
pop
push
push
mov
add
dec
stos
enter
lds
sbb
loopne
adc
sbb
repnz
mov
xlat
jecxz
push
out
dec
bound
or
and
lock
add
aam
je
push
lea
add
ficoms
add
inc
test
mov
adc
pop
std
psrad
fwait
adc
mov
aad
or
stos
rcll
iret
fstp
xchg
sarb
mov
push
das
hlt
enter
add
mov
and
add
and
fsub
popf
bndldx
call
clc
and
notl
sbb
push
out
and
mov
jo
mov
add
cmp
or
call
clc
test
pop
sub
pushf
mov
mov
sbb
jecxz
mov
add
sub
out
add
sbb
sbb
jo
or
sub
das
mov
xor
in
mov
cltd
rcll
subb
mov
rolb
arpl
and
add
fistpl
in
in
inc
insb
imull
adc
dec
xor
pop
add
decl
cld
push
fs
daa
add
rcrl
setl
xorl
ret
push
lds
xchg
hlt
adcb
sbb
and
cmc
jl
lock
fwait
addb
adc
add
cmp
adc
pop
add
ds
add
mov
add
push
rclb
pop
out
inc
add
cmp
pusha
cwtl
ss
add
sahf
mov
mov
lcall
loope
bound
sbb
sub
scas
jmp
dec
dec
adc
pop
inc
pop
out
add
push
repnz
cwtl
mov
push
jge
lods
add
stos
loope
inc
mov
dec
pusha
sbb
loopne
cmc
push
mulb
lds
scas
mov
or
adc
mull
bound
jns
mov
xor
mov
xchg
stos
add
cmpsl
mov
push
lret
add
pop
fwait
lcall
and
add
test
shl
rcrb
out
bound
in
add
in
loopne
sub
repz
xchg
inc
add
pop
shrb
jbe
addb
xchg
pop
aaa
pop
sub
add
fidivrl
add
jle
movsl
adc
test
sahf
imul
pop
push
add
jp
mov
sahf
lods
cmp
jmp
stos
lret
insl
mov
inc
fists
imul
out
shlb
std
leave
xor
mov
lahf
outsb
mov
xor
add
inc
add
adc
push
adc
mov
add
sbb
pop
mov
test
inc
add
cmp
push
jmp
mov
sbbl
jge
mov
cmp
jg
cmc
js
xchg
or
jno
loopne
sub
mov
movsb
shrb
insl
jecxz
sbb
pop
mov
xor
add
sub
push
mov
dec
inc
cmp
fcmove
cmpsl
lret
add
test
add
sbb
push
aad
mov
je
sub
jb
fwait
xchg
xchg
out
and
xchg
jmp
rorb
pop
std
cmp
out
adc
mov
inc
cmp
out
add
pop
mov
shrb
out
ret
jl
pop
lcall
hlt
neg
imul
xchg
lcall
je
inc
out
inc
nop
xchg
shlb
decb
and
lods
les
jg
repnz
adc
movsb
mov
fs
lret
hlt
jl
add
cmp
or
lods
mov
ds
call
and
add
sub
and
or
xchg
rcll
adc
cmpsl
and
push
into
or
movsb
sub
scas
add
push
mov
and
sbbb
push
int
aas
lock
push
push
repnz
stc
ds
add
insb
push
in
add
jae
popl
adc
mov
add
cmp
lds
adc
jnp
jl
add
ja
loope
jns
inc
cwtl
pop
pop
mov
xor
or
inc
sti
movsb
test
mull
or
add
mov
lea
loop
mov
movsb
mov
add
mov
cmpsl
xor
pusha
push
testb
int3
mov
mov
push
int3
faddl
mov
xchg
mov
pop
xor
add
jo
and
sbb
cmp
clc
sarl
fdivrl
wbinvd
cmp
adc
jbe
je
icebp
jmp
dec
or
cmp
add
dec
pop
or
push
testb
mov
shrb
cmp
decb
mov
mov
add
test
sub
rcrb
pop
mov
sahf
add
mov
in
lock
add
pop
dec
pop
ds
rcl
jge
pop
jae
and
pop
stc
lea
fdivl
notl
or
bound
jg
inc
add
in
sbb
lods
pusha
ror
add
jmp
scas
add
es
pop
scas
add
dec
inc
sub
dec
ds
pop
lret
push
sub
jge
jg
enter
subb
shlb
ds
movsl
inc
or
add
and
push
inc
dec
jmp
push
mov
arpl
sub
out
rcrb
clc
inc
sbb
test
movsl
loop
popa
sub
add
mov
pushf
jno
pop
xor
ljmp
pop
sub
loop
xor
cmp
sub
push
lret
xor
or
pop
jae
mov
and
shlb
or
lds
imul
movd
orb
les
test
inc
push
mov
lods
push
pop
add
into
sti
inc
cld
and
cmpsb
cwtl
rolb
icebp
dec
stc
and
in
arpl
xor
lea
jno
call
stos
add
cmp
loop
push
jbe
inc
mov
push
orb
les
fmul
loopne
andl
fiaddl
cs
in
add
pop
xor
xchg
sbb
jecxz
add
cmp
lret
je
insb
mov
cmp
push
addb
pusha
push
fwait
push
push
cs
inc
lock
add
jg
inc
in
das
jmp
add
jl
and
inc
pop
test
push
push
mov
or
and
pop
pop
les
cltd
loopne
in
add
xchg
mov
insl
shll
dec
and
out
int3
or
mov
outsl
cmp
cld
insb
add
scas
add
inc
xor
adc
sbb
pushf
lock
dec
and
add
mov
or
add
ficoms
add
or
add
dec
xor
xchg
jo
test
dec
dec
xor
add
pop
mov
jecxz
inc
leave
cmp
jg
call
push
bound
scas
jae
adc
add
jb
lret
sbb
xchg
in
sar
bound
add
pop
and
add
cmp
push
dec
jae
es
push
sarb
in
testl
xchg
pop
and
push
jg
mov
adc
loope
je
std
add
mov
rorb
add
das
ja
fiaddl
hlt
cmp
add
inc
aam
sub
mov
add
mov
pop
movsb
aaa
add
pop
sub
push
xchg
rol
add
mov
cmp
adc
imul
inc
orb
push
and
mov
mov
dec
xor
add
adc
shl
add
pop
in
jb
xor
fadds
into
aad
cmp
or
add
dec
add
pop
inc
sarb
pusha
sbb
adc
addr16
add
dec
in
fnsave
push
xor
out
jae
add
sbb
pop
aaa
dec
jge
pcmpeqb
pop
lods
push
aas
push
int
enter
clc
in
shlb
jno
shll
movsb
cli
sbb
xchg
fwait
cwtl
movb
mov
fucom
cmp
xor
aad
pop
mov
and
jge
sub
cmp
xchg
push
dec
test
orl
pop
int3
add
and
mov
loopne
xor
pop
icebp
dec
dec
jg
inc
lea
and
cwtl
or
pop
movsl
rolb
xor
stos
push
js
mov
movsb
iret
outsl
cli
xchg
je
loope
push
mov
lods
mov
lret
mov
lods
das
add
push
sti
push
sbb
sub
cmp
cmp
add
lret
mov
xor
scas
push
push
and
xor
movsl
mov
popa
lods
and
aas
loopne
lea
js
loop
cmp
add
das
pop
shrl
push
add
push
sbb
cmp
data16
adc
mov
sarl
hlt
cmpl
out
add
lds
fcoml
in
sbb
mov
mov
nop
dec
mov
cmpsl
jge
add
inc
sub
stos
loopne
add
es
sub
xchg
mov
add
test
mov
add
sub
int
les
jge
test
mov
cmp
mov
nop
jmp
lea
stc
sub
movb
dec
sbb
enter
jo
adcb
pop
cmpsl
add
ret
out
call
dec
or
cld
add
pop
lds
add
jae
lret
sbb
in
mov
inc
outsl
dec
inc
xchg
shrl
int3
repz
clc
lock
sbb
orb
inc
outsl
rcr
jne
push
mov
pop
call
sbb
fs
rcrl
add
mov
add
push
xchg
testb
jmp
mov
push
push
aad
movsl
mov
fcmovne
or
jl
sti
xor
mov
into
sarb
and
in
or
data16
mov
add
pcmpgtw
push
mov
outsl
add
imul
pusha
stc
inc
pop
loope
scas
adc
addb
push
dec
subb
pop
cmpsb
js
ja
shrb
mov
jmp
stos
mov
pusha
xchg
lds
dec
or
jbe
sbb
dec
enter
add
rcrl
les
ljmp
lds
mov
pushf
jl
push
pcmpgtb
fmull
ret
shr
xor
fmuls
int
mov
push
inc
cmp
faddl
xchg
sahf
or
cmpsb
sbbb
and
sti
and
jmp
mov
ja
js
add
cmpsb
adc
or
pushf
push
cld
loope
psubw
outsb
aam
xor
scas
dec
push
rcl
add
sub
pop
jmp
out
xor
scas
sahf
in
xor
xchg
jo
mov
xchg
push
add
imul
mov
mov
mov
sar
in
cmp
xchg
shlb
outsl
add
xor
pop
fnstenv
adc
add
and
in
push
sti
repz
call
add
outsl
jmp
cmp
call
jns
add
pop
divl
xchg
xchg
cmp
add
pop
out
aaa
popa
sbb
out
loopne
dec
iret
adc
mov
add
cmp
add
push
std
add
test
cmp
add
lcall
add
push
hlt
clc
xchg
jecxz
dec
imul
pop
pushl
or
daa
std
add
loop
adc
xor
ja
mov
inc
xor
fcomps
add
pop
sbb
mov
dec
mov
adc
xor
cld
dec
popa
mov
adc
sbb
sbb
enter
sqrtps
adc
mov
and
mov
addr16
dec
mov
push
int3
add
gs
add
push
mov
xchg
fidivrl
cmpsl
js
sub
jae
cmp
ds
orb
jl
and
xchg
add
fcomps
xchg
je
add
in
dec
mov
cli
das
add
and
pop
fs
push
xor
lret
fmul
push
test
loop
add
mov
xor
lock
popf
sbb
push
adc
sub
cs
lods
jo
mov
adc
pop
inc
sub
push
xchg
movsb
sub
add
cmc
clc
mov
adc
mov
insb
repz
push
inc
xor
xor
push
jle
in
mov
adc
dec
ljmp
mov
hlt
jns
add
mov
shrb
jo
arpl
les
into
outsl
je
xchg
outsl
inc
faddl
icebp
loope
fwait
pop
cmp
pop
add
hlt
cltd
jnp
mov
pop
add
or
imull
inc
mov
leave
cmp
scas
xor
xor
enter
adc
sahf
mov
cmp
cmc
mov
and
in
xor
test
sbb
dec
and
add
pop
notl
adc
nop
add
jmp
and
add
or
out
hlt
push
add
mov
and
push
sub
and
add
mov
sti
pop
push
hlt
stc
fiadds
pusha
xacquire
pop
out
pop
cmp
cld
mov
xchg
and
call
stos
sbb
jo
pop
sbb
in
add
adc
inc
jp
mov
jb
js
or
inc
add
cmp
bound
sub
and
inc
jno
mov
adc
and
mov
push
sbb
test
subb
adc
and
in
or
inc
push
mov
in
mov
and
cwtl
and
and
adc
cli
popf
adc
adc
cmp
mov
test
jg
inc
pop
or
mov
adc
movsb
enter
cwtl
subl
xchg
sub
adc
and
cmp
stos
inc
popa
adc
mov
adcl
cmp
lea
push
push
aas
subb
les
stos
add
cmp
dec
cmpsl
in
out
ret
aas
push
push
daa
add
pusha
jb
popa
addb
and
mov
xchg
and
jnp
js
pop
incb
ret
add
rcr
add
sbb
cld
sub
jp
mov
dec
sbb
inc
jb
mov
dec
mov
mov
inc
add
jno
shlb
add
add
lret
add
shlb
ds
xchg
sbb
ss
data16
jl
or
pop
cmc
cmp
add
int3
mov
shlb
push
xchg
sbbl
and
clc
add
int3
icebp
arpl
push
cmp
insl
push
hlt
mov
inc
add
xchg
je
mov
cmp
adc
add
nop
stos
pop
add
dec
andb
and
sbb
sbb
push
add
push
push
dec
test
arpl
rorb
leave
ljmp
inc
mov
jb
inc
hlt
or
add
cli
dec
pushf
or
shrb
fmuls
or
add
or
or
mov
adc
inc
cld
and
test
rolb
int
nop
jl
cmp
jb
push
data16
pop
loop
adc
dec
xorl
jb
dec
fwait
sbb
popf
addr16
mov
in
ret
add
pusha
lods
fwait
ja
test
enter
pop
sbb
out
movb
sbb
and
sub
pop
jl
cmpsb
jnp
xor
sbb
jns
movsb
adc
mov
rolb
mov
and
cmp
add
jo
pusha
or
sub
adcb
xor
test
xchg
and
mov
ljmp
jae
sub
cmp
mov
repnz
js
insl
mov
dec
ret
rclb
std
add
in
ljmp
pop
ja
repz
pop
rcr
pop
and
add
push
dec
sub
test
clc
daa
sbb
cwtl
pop
adc
rclb
in
push
pop
cwtl
rol
or
and
movl
push
lea
adc
pusha
cmp
add
add
inc
test
add
add
mov
movsb
sub
sarb
enter
cmpsl
cmp
mov
mov
xchg
adc
push
push
xchg
fs
in
enter
cmp
out
popf
xor
adc
mov
mov
sub
cltd
sbb
mov
add
fdivr
or
scas
enter
nop
cld
fisubs
test
cmp
jae
jge
and
add
push
adcl
test
cwtl
leave
iret
mov
jae
les
adc
jno
popl
add
add
aam
add
repz
bound
subl
ficoms
scas
pop
stc
pop
add
imul
pop
pop
rcr
mov
add
subb
add
fsub
mov
rorb
loopne
lods
inc
push
lcall
push
int
dec
in
add
subl
add
sub
lock
mov
stos
inc
movsl
lcall
pushf
addb
call
adc
add
jbe
lods
test
jb
or
pop
mov
and
loope
mov
gs
adc
enter
mov
adc
dec
add
in
jb
xchg
je
outsb
xchg
mov
mov
orb
ficoms
pmullw
add
xor
push
mov
js
cli
adc
je
pop
ret
xchg
or
das
xchg
aas
jmp
sub
mov
add
cwtl
xchg
loopne
dec
aam
and
jecxz
sub
out
cmpsb
xchg
jnp,pt
lock
add
jge
sahf
mov
je
shlb
insl
add
and
mov
add
cmpsl
adc
add
mov
lds
clc
xor
push
imul
scas
inc
leave
sbb
pcmpgtw
loopne
lds
add
roll
lock
xchg
jl
dec
sti
imul
fisttpll
and
xchg
mov
dec
jl
iret
outsl
add
push
repnz
cs
call
push
ljmp
sub
adc
cmpsb
scas
adc
clc
fcomi
mov
addl
icebp
pop
cmp
mov
insb
add
xchg
push
jns
movb
add
not
jbe
ret
loopne
or
test
les
cld
adc
adc
cmp
add
aad
cmpsl
lods
pop
cmp
mov
jmp
testl
or
and
rcrb
push
mov
ret
rolb
je
add
xlat
jo
xor
loope
lret
mov
push
hlt
add
fistps
push
mov
cmc
loope
popa
cmp
adcb
xor
jbe
add
add
sahf
stos
add
faddl
jne
lahf
in
add
cmpsb
fsubp
rclb
jo
ret
dec
roll
add
cmp
pop
jp
popa
jmp
sbb
add
mov
out
dec
loopne
push
inc
aam
add
fidivrl
fsubs
cmp
faddl
pop
out
popa
pop
ds
movsl
pop
push
dec
adcb
mov
nop
sbb
adc
gs
jnp
inc
add
sub
pop
int
sub
or
mov
jbe
push
lock
inc
mov
inc
mov
aas
ja
pop
add
inc
lret
inc
bound
nop
push
out
jg
add
mov
insl
push
xchg
repnz
lds
add
idivb
add
mov
push
cwtl
sub
lock
sub
sarl
rcll
and
lar
mov
rcrl
inc
sbb
cltd
pop
add
jmp
ja
xor
add
adc
jns
fwait
div
inc
add
fmulp
add
in
add
mov
int3
mov
pop
es
xchg
add
pushf
and
aam
rorb
add
leave
popa
jne
xchg
adc
add
jno
ds
into
add
ret
push
jmp
lret
push
push
js
lds
dec
cmp
repnz
push
sbb
add
mov
ret
outsb
stc
push
add
das
push
in
pop
pop
and
rcr
clc
lcall
mov
rcl
in
outsl
cltd
pop
or
add
icebp
mov
add
imul
gs
pop
inc
shll
add
add
std
inc
or
int3
dec
xor
mov
stc
shlb
hlt
fadds
rcrl
sub
cs
mov
test
dec
test
jae
xchg
push
add
movsb
push
push
inc
clc
sub
add
jnp
addl
push
mov
mov
and
jl
or
xchg
add
aas
and
mov
xchg
pop
add
lret
lret
iret
cli
shlb
aas
pop
int
imul
jl
add
jmp
pusha
les
push
or
fimull
ret
mov
push
dec
add
sub
mov
cmc
icebp
insl
mov
mov
call
popl
mov
pop
add
enter
pop
push
add
fmulp
pop
mov
cmp
andb
mov
jle
adc
cmpsl
incl
shrl
add
dec
inc
outsl
lock
sahf
shrl
or
jb
int
dec
add
dec
xchg
imul
ds
shll
stc
pop
iret
xor
add
or
incb
sub
daa
and
add
rolb
xor
jae
push
jo
js
scas
push
mov
movsb
dec
sbb
loop
repz
mov
rcrb
fiadds
int3
repnz
andl
inc
in
nop
cld
lret
jbe
and
mov
xchg
mov
ficoml
xchg
hlt
and
or
xchg
ljmp
bound
sub
and
sbb
mov
inc
pushl
add
mov
xor
pop
add
jmp
ljmp
mov
add
movsl
cmp
decl
cmc
fdivs
cmp
jne
push
adc
push
cmc
cwtl
movsb
ds
or
mov
add
sub
add
sub
push
mov
loopne
mov
orl
sub
dec
sub
xor
mov
add
nop
lods
hlt
js
xsave
in
jo
add
add
lea
je
add
sbb
fucom
mov
mov
inc
add
scas
in
pop
push
rolb
push
js
int3
add
add
leave
sbb
out
cwtl
push
adc
ret
in
dec
ret
add
rcll
jp
mov
imul
leave
movsb
xor
jb
add
inc
pusha
loope
inc
jb
loop
add
fmulp
sbb
mov
data16
cmp
test
out
pop
push
cmp
add
pushf
pop
in
jl
pusha
inc
out
push
jmp
outsb
and
jno
sbb
jl
orb
xor
scas
mov
iret
jl
mov
cmpsb
dec
enter
sbb
std
int
jge
test
mov
imul
or
jmp
stos
xor
sbb
lea
icebp
pushf
add
fcmovnbe
jno
scas
xchg
andl
xchg
and
inc
or
add
ret
in
fwait
pop
xor
dec
rcrb
sub
push
or
clc
inc
mov
cmp
jecxz
or
dec
mulb
add
jle
cmp
fidivrl
stc
push
movsb
inc
clc
xchg
mov
data16
aaa
push
aad
jge
test
adcb
scas
mov
aad
leave
test
add
imul
rorb
adc
je
insb
dec
mov
pop
sbb
jo
push
dec
jmp
cmp
ja
add
cmp
add
sub
add
cwtl
xchg
push
mov
adc
cmp
push
push
adc
fcomps
in
push
dec
push
lret
jmp
inc
inc
sar
push
outsb
inc
dec
cmpsb
insl
add
lods
clc
add
mov
push
adcb
add
xchg
test
roll
aas
xchg
repz
call
sub
mov
popf
push
pop
icebp
daa
scas
jecxz
movsb
or
cmpsl
mov
aaa
ret
shll
movsl
sbb
loopne
jns
cs
stc
add
addl
jle
scas
lock
fimull
add
sbb
roll
jge
mov
nop
cmc
ret
arpl
cwtl
add
sub
repnz
mov
jb
imul
mov
and
pop
mov
mov
and
xchg
push
and
xlat
rorl
lahf
or
jbe
and
mov
cmc
sbb
into
scas
insb
xor
add
jmp
mov
in
ret
xchg
pop
test
rcll
add
shlb
mov
cs
pop
mov
or
adc
pop
pusha
sub
jns
cmpb
pop
xchg
sbb
and
pop
rol
and
aam
cmp
adc
popf
pop
adc
sbb
add
mov
mov
test
mov
gs
xchg
js
mov
xchg
pop
lods
jae
add
jecxz
xchg
cmp
and
add
xor
int3
push
push
xor
push
jle
inc
addr16
idiv
rorb
and
sub
add
insb
jmp
adc
and
or
mov
mov
fadd
mov
add
test
gs
xor
scas
into
mov
pusha
mov
imul
je
add
popf
adcb
cwtl
add
pop
imul
add
sahf
ljmp
pop
cltd
adcl
rol
inc
and
push
sbb
pop
sbb
xlat
lret
sbb
adc
xchg
add
jnp
xchg
shrb
jl
add
cld
rcr
pusha
jmp
mov
sub
lds
add
ja
jge
ljmp
pop
add
xchg
subb
sub
std
adc
clc
jbe
mov
ja
movsl
rclb
insl
cmp
mov
add
xchg
aas
jo
imul
iret
add
sbb
push
imul
inc
fldl
or
dec
int
xor
cmp
adc
dec
out
sbb
bound
icebp
add
fstpt
repnz
add
pop
mov
lods
jae
fisttpll
loopw
js
jl
mov
pop
jl
add
cmp
fisubrs
sbbb
mov
shrb
inc
or
enter
lods
mov
mov
cli
push
mov
add
mov
sbb
and
pusha
jo
mov
ror
outsb
adc
arpl
mov
sbb
jo
dec
xor
rcrl
test
add
ficoml
jmp
add
and
jl
sub
xor
ret
fisttps
in
pop
jle
add
push
xor
fwait
pop
xor
add
loop
xchg
mov
push
dec
cmp
call
lcall
push
clc
loope
add
enter
ljmp
cmc
mov
test
mov
adc
repz
mov
ret
mov
pop
push
mov
sbb
add
add
fucom
jg
addb
and
pop
pop
lds
push
jp
xlat
dec
mov
dec
jg
xorl
sar
roll
fdivp
aad
add
jb
xor
lret
daa
adc
xchg
test
pop
inc
mov
rorb
xor
and
mov
add
xchg
loopne
int
shrb
pop
fdivs
add
icebp
push
inc
add
adc
rolb
mov
loop
mov
add
sub
mov
repz
addr16
inc
mov
loop
jo
add
mov
cmp
adc
push
add
fiadds
ret
pop
inc
xchg
xor
dec
xorb
sysexit
movsb
das
loopne
cmp
add
js
pop
xor
stos
jmp
fwait
nop
cmp
push
aas
lret
cmpsb
ret
dec
orb
pop
xor
add
scas
xchg
in
aad
jbe
add
inc
addb
stos
add
mov
movsl
adc
push
add
loop
add
or
inc
cltd
sub
add
add
dec
xchg
mov
mov
in
dec
cmp
dec
jbe
cmp
shrb
lods
subl
add
mov
cmpsl
push
mov
pop
clc
pop
jg
xchg
mov
adc
sysenter
xchg
push
out
shrb
cld
pop
add
dec
cmpsl
sbb
xchg
push
insb
sbb
sbb
or
addb
in
push
xchg
pop
aad
test
mov
and
mov
pushf
fidivrs
mov
in
enter
imul
out
fcmovu
aam
fisttps
shufps
inc
outsb
clc
add
arpl
add
enter
movb
push
inc
popa
sub
ss
imul
and
stos
add
push
insb
pop
push
xchg
push
cmp
lock
pusha
pop
sbb
clc
mov
out
loop
mov
mov
hlt
push
lods
add
outsb
cltd
pop
mov
xchg
jle
jae
loope
iret
hlt
fists
fcmovb
sub
cmp
rcrb
cltd
mov
popf
push
incb
xchg
inc
fcmovu
add
mov
or
shrb
int
add
or
xlat
jbe
aam
mov
mov
mov
sbb
cmp
push
jnp
jmp
and
sbb
sub
ret
xor
ja
mov
inc
stos
pop
dec
add
fsub
in
xchg
popa
cmp
jl
mov
int
inc
pop
add
shll
pop
pop
je
inc
movsb
loop
ret
add
pop
into
loope
arpl
lods
dec
lock
xchg
cli
call
sti
jne
xchg
das
pusha
add
mov
cmp
repz
pop
add
nop
out
stc
movsl
mov
inc
inc
fldenv
add
add
cwtl
jg
or
imul
mov
add
shll
xchg
lock
mov
mov
fwait
addb
cmp
lods
add
filds
xchg
out
adc
test
xchg
ja
mov
jmp
into
std
popa
nop
pop
push
cs
fiadds
int3
push
inc
adc
aam
ror
leave
mov
movb
xlat
stos
pop
adc
xchg
xchg
js
dec
std
cwtl
imul
add
loopne
sub
inc
ss
dec
movsl
or
or
repnz
andb
cmp
movntq
loopne
cmpsl
mov
pop
xchg
adc
nop
add
inc
sahf
xchg
add
ja
add
xchg
xchg
add
ds
iret
adc
inc
test
movsb
add
and
sti
hlt
sub
ljmp
push
inc
or
int3
push
xchg
mov
pop
adc
xor
hlt
add
ljmp
mov
out
pop
pop
jb
push
cltd
adc
xchg
pop
dec
ret
mov
mov
and
imul
rolb
adc
dec
shl
bswap
xor
cmpsl
loopne
pop
xor
dec
pop
mov
lods
push
pushf
outsb
push
xor
mul
inc
jno
add
js
xchg
scas
add
or
pop
orb
les
nop
mov
xor
das
pop
in
push
and
mov
adc
add
add
inc
cmp
push
punpckhwd
add
in
in
push
dec
lret
jno
rcl
sbb
inc
pop
mov
add
add
cmp
and
sbb
or
mov
pop
in
push
add
jae
movb
movsl
sbb
clc
lahf
mov
aam
ds
cmc
loop
scas
adc
add
jne
roll
and
loop
mov
xchg
hlt
pop
xor
rcr
push
int
nop
add
dec
test
jmp
mov
call
mov
mov
add
xchg
inc
movsb
sarb
mov
lahf
push
std
sahf
add
push
call
push
out
mov
jg
push
mov
adc
sbb
mov
popa
testl
add
mov
enter
nop
add
es
add
mov
cmc
int
mov
int3
sub
out
sar
out
out
ds
add
sti
xor
lret
jne
add
pop
and
fistl
lods
push
inc
add
shrb
add
test
add
std
fidivrl
or
inc
mov
mov
or
add
cmpsl
sbb
je
fiadds
rcl
pushf
aas
xchg
lods
mov
xor
add
mov
pusha
cmp
add
arpl
cld
sub
xchg
add
sti
ret
push
mov
and
lds
jmp
add
incl
xor
popa
mov
pushf
jns
push
mov
sahf
sub
rcr
ljmp
sbb
jle
dec
dec
jno
ret
outsl
mov
clc
sarb
push
imul
add
inc
mov
or
and
push
sbb
push
icebp
call
out
xor
or
xor
add
fcomip
add
xchg
lahf
cmp
jmp
aam
xchg
gs
ret
mov
mov
sbb
mov
into
pop
stc
mov
fstpt
or
fcmovb
icebp
add
xchg
adcb
in
xlat
rclb
ret
or
push
pop
cltd
ret
pop
cmpsb
pop
mov
loop
subl
test
pusha
add
push
cmp
lret
loop
lds
jo
mov
and
add
je
repnz
push
push
add
xchg
fs
sar
cwtl
scas
insl
push
or
add
xor
call
add
ficomps
add
push
rcll
fcompl
sbb
cmpsb
adcb
dec
push
lock
pop
popl
bts
dec
adc
push
cmp
inc
and
movups
movb
shll
pop
add
cltd
add
fcoms
nop
xchg
cld
stos
add
stos
cmp
js
add
push
aam
sahf
add
lret
clc
dec
push
mov
jnp
cmp
mov
loop
add
in
in
jecxz
cmp
or
cltd
addb
mov
adc
je
call
add
push
mov
mov
mov
xor
testb
pop
lock
xchg
cwtl
mov
pop
lcall
mov
test
inc
das
jle
std
aam
subb
orb
mov
pop
sub
insl
xchg
imul
dec
rol
add
mov
add
xor
loopne
sbb
test
sub
ret
mov
out
in
dec
xor
xorb
add
mov
jb
movsb
pop
ds
jo
sub
xchg
jae
ret
cwtl
jb
jle
sub
ja
xchg
imul
sbb
daa
inc
cmpl
mov
cmpb
adc
loopne
lock
mov
inc
add
mov
sbb
incl
add
daa
xchg
xor
or
ret
xchg
stos
and
lcall
push
pop
sub
repz
xchg
and
sbb
imul
pop
add
loopne
lahf
shrl
lahf
mov
inc
aas
mov
inc
in
mov
add
mov
imul
sub
pusha
jo
mov
data16
xor
outsl
adc
dec
add
loopne
push
in
sbb
push
add
and
push
mov
je
adc
add
mov
push
jb
loopne
mov
inc
pop
icebp
or
lea
mov
je
scas
add
xor
hlt
adc
mov
dec
xchg
sbb
call
fdivr
push
shl
rorb
arpl
and
xorb
inc
adcl
clc
xor
add
addb
push
lret
pusha
or
sahf
dec
in
fists
jp
aad
push
popa
add
xchg
add
inc
rcl
jle
test
mov
or
js
add
pop
sub
sub
inc
and
js
mov
xorb
jb
add
ljmp
test
push
std
pusha
lret
xor
sub
sub
jmp
popa
cltd
xor
jbe
inc
mov
stos
iret
pop
insb
add
xchg
dec
and
std
xchg
fwait
repz
lock
jb
mov
mov
jo
jns
fwait
sub
mov
test
test
mov
loop
pop
adc
lcall
nop
pusha
pop
dec
or
or
xrelease
xchg
cs
sbb
add
rcll
xor
adc
test
dec
popf
out
add
add
mov
sbb
add
push
loopne
jb
sahf
add
es
cmp
jp
mov
pop
jmp
rolb
xchg
add
out
fwait
mov
sub
shl
push
mov
cmp
cmpb
lahf
xor
mov
xor
xchg
pop
add
adc
fidivrl
fnstcw
ds
sti
lahf
add
mov
addr16
repz
xchg
sub
dec
cli
outsl
insl
and
ds
cmp
cmp
xor
mov
pop
pop
xor
sbb
shlb
mov
mov
fildll
inc
sbb
sbbb
sarb
fnsave
dec
xchg
lret
xor
xor
mov
add
jns
mov
cmp
lock
xchg
push
loop
insl
pop
add
adc
pop
add
mov
dec
scas
add
inc
and
xchg
jmp
add
inc
sub
add
scas
xor
dec
push
pop
inc
pop
in
or
jg
je
adc
adc
mov
dec
or
and
adc
add
ret
scas
fwait
sub
add
lea
test
adcb
fnstsw
in
test
pop
aad
add
dec
in
je
xchg
add
mov
cmp
push
add
mov
jne
aad
xchg
jge
test
addl
je
sub
xorb
mov
add
jecxz
sbb
add
mov
jg
dec
adc
js
test
rcl
sbb
add
adc
clc
pop
hlt
orb
inc
cmp
bound
stos
and
cmp
add
arpl
xchg
add
mov
or
push
add
pop
jne
add
cli
roll
push
fiaddl
scas
mov
jo
ds
repz
add
std
push
cmc
shrl
insl
inc
and
inc
stos
hlt
mull
mov
imul
cmpl
scas
jne,pn
fdivl
jnp
add
popa
cmp
mov
sbb
and
ja
pop
mov
in
pop
mov
sbb
xchg
insb
lods
or
mov
int3
mov
jb
divb
nop
add
test
cmp
push
shrb
out
adc
add
adc
inc
dec
lods
jno
cmpb
std
fimuls
ljmp
xorb
mov
arpl
xchg
dec
js
andl
pusha
pop
pusha
sbb
fs
mov
or
pop
sub
xor
mov
jno
add
jbe
jle
sub
fmuls
sub
adc
sti
adc
inc
ret
or
rorb
das
pop
dec
xorb
or
popa
push
imul
mov
add
mov
jae
add
jmp
sub
in
in
scas
add
shlb
jmp
sub
loop
adc
or
mov
xchg
add
cmp
aas
rolb
jmp
imul
add
or
stos
jno
mov
jb
xchg
std
xchg
mov
sbb
cmpsb
jg
inc
sbb
loopne
xor
add
mov
shlb
dec
cs
hlt
dec
push
cmp
xor
dec
std
stos
insb
xlat
or
subl
je
add
aas
insl
jge
mov
mov
mov
and
pusha
add
inc
rorl
sbb
stc
cld
fs
mov
xor
mov
insl
sbb
shr
movsl
lods
add
cwtl
es
add
out
mov
fistpll
int3
sub
imul
and
add
addl
cs
sbb
ret
out
int
arpl
icebp
cmp
add
inc
fmuls
ss
call
mov
jp
cmp
fists
cmp
lds
insb
sub
pop
scas
sbb
adcl
xchg
inc
mov
add
xchg
js
scas
scas
add
aad
lret
repnz
mov
js
cmp
mov
mov
mov
sbb
cmp
cwtl
push
out
sub
cwtl
sti
cmpsb
test
inc
das
icebp
xchg
pop
and
mov
cmpsl
and
dec
xorl
jge
orl
arpl
loopne
idivb
hlt
push
scas
add
lods
in
pop
scas
lock
ror
outsl
inc
add
sub
add
mov
add
xchg
in
push
add
sahf
popf
or
xor
adc
enter
mov
shll
into
loopne
pop
xchg
xchg
adcl
add
stc
pop
mov
stos
mov
jl
lock
filds
sub
xchg
add
cli
rclb
movsl
xchg
shrb
or
in
popa
xor
add
scas
push
nop
js
mov
add
shll
mov
push
subb
shufps
and
mov
cbtw
roll
adc
sub
adc
daa
add
cld
mov
add
sbbl
out
sbbb
into
scas
repnz
add
test
rolb
cmp
movsl
sub
addb
icebp
stos
gs
dec
add
add
pop
loop,pn
jo
adc
mov
mov
pop
pop
cld
dec
xlat
mov
pop
inc
pop
lods
rolb
mov
mov
test
or
pop
dec
and
mov
add
cmp
nop
iret
adc
lret
sahf
js
adcb
xchg
and
xchg
scas
cmp
lods
fmul
adc
or
inc
jge
mov
add
xchg
loope
std
pop
add
pop
or
sub
mov
and
inc
sbb
fldcw
add
hlt
xchg
fdivrs
out
push
test
push
mov
adc
iret
add
add
inc
shlb
ficoml
rdmsr
movsb
das
leave
shlb
jmp
pop
enter
jg
jp
add
dec
mov
pop
xchg
xlat
outsl
inc
nop
je
addr16
jbe
adc
rcl
pop
repz
or
outsl
mov
and
push
mov
ss
popf
push
cli
loopne
ljmp
inc
je
jnp
int
add
dec
and
nop
xchg
add
push
jg
push
cmp
mov
pop
js
mov
daa
loopne
add
add
cltd
je
jnp
inc
fwait
add
enter
aas
xchg
andl
add
dec
data16
cmp
and
adc
fsubs
clc
mov
lods
test
subb
inc
mov
add
popf
fistpl
jbe
add
scas
lock
cmc
enter
add
and
ret
insl
jmp
xchg
decb
insb
cwtl
pushl
xchg
lea
and
pop
rcrl
adc
add
or
cmc
not
aaa
xor
add
repz
dec
out
sbb
ds
roll
jp
add
fdivrs
out
pop
pop
ret
adc
push
ret
aam
lds
add
sbb
enter
imul
cmp
popf
pop
fsub
leave
xor
add
push
add
lods
addb
add
add
add
lods
mov
pop
pop
arpl
sbb
xchg
xlat
add
inc
mov
lods
dec
add
sbb
out
xor
xor
sub
js,pt
cwtl
mov
jle
push
in
iret
mov
fcmovu
in
xor
scas
jo
push
js
insl
loope
sbb
xor
mov
in
add
xor
movsl
add
fucomi
cli
mov
mov
pop
pop
push
fcomps
popf
stc
add
out
xor
add
jl
insb
add
mov
jne
or
out
pop
mov
add
jns
add
push
frstor
add
addb
or
mov
shl
aam
adc
and
loop
add
mov
enter
adc
out
popf
adc
fdivs
int
sub
add
inc
push
jo
push
push
mov
cmp
push
loopne
sbb
cs
mov
dec
scas
and
sti
call
mov
incl
cwtl
jle
cmp
fadds
ljmp
insb
add
sub
xchg
mov
fucompp
add
popa
popf
add
inc
rcll
outsb
subl
mov
cld
pop
mov
mov
push
sub
pop
outsl
add
jge
push
mov
fs
xchg
js
sbb
add
popf
jne
js
adcl
add
dec
lea
cwtl
fdivrs
or
clc
add
jne
das
stos
in
inc
loopne
sbb
push
lods
xlat
cmp
movsl
mov
jne
inc
pop
subl
pusha
fsubr
lret
pushf
add
sysret
or
and
in
fs
lods
add
pop
push
ja
cmp
add
mov
mov
les
xor
rol
fwait
stc
fdivp
aas
or
add
sub
mov
and
dec
inc
andb
fldenv
xchg
cmp
jg
cmp
cld
divl
mov
dec
testb
push
cs
xchg
in
addb
add
push
pop
xor
daa
imul
ficompl
mov
lret
lods
jo
pop
shl
js
notl
xor
sbb
jbe
mov
mov
or
enter
mov
shlb
mov
imul
rorb
fldl2e
mov
popa
pop
stos
test
add
in
mov
fcoml
testl
push
loopne
loope
push
testb
xor
inc
xor
sub
jne
add
pop
fwait
insb
and
mov
shll
nop
mov
dec
sbb
dec
adc
das
sbb
loopne
imul
push
add
cli
out
loop
push
sbb
or
pop
loopne
nop
adc
xchg
rorl
jecxz
push
jl
push
aad
aam
fcomip
sbb
inc
movsb
jmp
pop
enter
outsl
scas
add
jne
stos
jecxz
cli
incl
test
das
sub
dec
in
mov
push
add
arpl
fnstcw
and
sbb
loopne
clc
xor
aas
add
daa
jne
sbb
push
add
adc
inc
nop
out
mov
push
test
fistl
test
shrb
daa
lret
int
repz
imul
mov
push
je
push
loopne
aam
fldl
mov
lock
inc
cltd
jg
push
enter
je
insb
sub
shr
jae
and
test
std
clc
add
jl
add
xchg
jp
outsb
push
dec
mov
cmp
dec
cmp
das
fcoms
jo
pandn
xor
inc
mov
mov
jmp
fadds
push
es
outsb
and
cmpsb
dec
pushf
inc
loopne
xor
xor
add
jns
dec
in
aas
jo
lods
add
mov
in
ja
jbe
xchg
pop
test
es
dec
pop
es
ficoms
pop
adc
push
jbe
lds
or
and
cwtl
shlb
movsb
ljmp
inc
add
xchg
add
inc
jb
xor
ljmp
out
repnz
push
xchg
push
push
dec
sub
nop
hlt
cmp
cmpsb
js
cmpsb
adc
push
dec
adc
pop
add
sub
in
test
add
stc
mov
mov
sbb
js
add
dec
fcmovnu
sub
xor
mov
dec
cmpsb
adc
add
add
js
xor
leave
negb
into
xchg
mov
cmp
mov
movsl
rclb
cmp
push
mov
dec
movsb
out
or
test
es
ret
xor
ja
out
daa
fsubrs
andb
addb
pop
lock
pop
and
xor
lods
int3
add
inc
aad
dec
inc
pop
popa
pusha
xor
fidivs
leave
lds
scas
and
or
xchg
inc
mov
adc
and
movsb
loopne
shlb
iret
push
add
jae
mov
cwtl
or
xchg
jmp
adc
sub
insl
xchg
and
xorl
sub
testb
adc
cltd
adc
jge
xchg
inc
mov
iret
repz
or
adc
add
daa
mov
int3
push
vmwrite
pop
in
jp
sub
pop
call
js
dec
shrl
push
js
add
cmc
mov
mov
push
out
frstor
inc
dec
fcmovnbe
repnz
ljmp
sbb
add
in
adc
fdiv
push
mov
mov
sti
push
push
dec
add
or
push
mov
and
mov
adc
add
inc
add
xor
xchg
rep
cld
mov
out
sbb
add
aas
divb
add
fs
std
rorb
sbb
mov
mov
cwtl
xlat
xor
cld
in
push
test
jbe
cs
nop
test
pop
cmp
mov
sub
xor
loopne
xchg
xchg
mov
add
call
insb
dec
mov
dec
push
sub
lock
xchg
dec
outsb
mov
mov
mov
mov
dec
pop
push
rorl
mov
pop
mov
mov
std
mov
lahf
test
or
add
scas
inc
jnp
sarb
popf
adc
pop
mov
adc
and
in
test
dec
xchg
sbb
icebp
daa
cs
sub
fmulp
xchg
push
xchg
nop
xchg
mov
js
out
dec
subb
dec
add
lods
and
pushl
pop
cmpsl
mov
dec
and
jmp
mov
xchg
fistps
xor
mov
jo
mov
push
pop
cld
pop
inc
loop
add
mov
cld
inc
adc
popf
jae
cmp
xchg
rolb
lock
mov
in
add
in
cmp
adc
add
mov
and
in
adc
add
and
jmp
dec
inc
cmp
sub
add
dec
or
jnp
test
inc
xchg
pop
xor
or
fcmovbe
mov
and
cmp
sub
add
sbb
mov
cwtl
dec
jbe
test
addr16
movsl
dec
pop
leave
mov
mov
add
inc
xorb
ljmp
add
mov
les
mov
pop
pop
sub
push
jnp
add
int3
sti
loop
in
je
push
jne
aad
inc
jb
fwait
pop
bnd
or
sub
cmpsb
call
lcall
push
test
push
xor
add
call
xchg
in
clc
cltd
add
sub
nop
pushf
mov
add
mov
ljmp
bound
mov
add
inc
in
xlat
rcll
and
nop
add
inc
fsubl
mov
jo
xchg
testb
adc
bound
mov
test
fwait
add
aad
cmp
dec
push
mov
loopne
jg
scas
fadds
ds
xor
sbb
sbbb
inc
inc
add
dec
call
jb
nop
sbb
xlat
mov
add
push
lret
jge
add
test
mov
xchg
jns
pop
xor
sub
adc
push
hlt
movsl
add
inc
in
fs
add
mov
add
je
xchg
sub
test
add
ret
push
mov
add
xchg
icebp
dec
pushf
or
add
or
pop
lret
xor
mov
xchg
and
adcb
pusha
cmc
mov
xchg
andb
cmpsb
add
mov
int
cld
dec
and
add
movsl
inc
mov
iret
ds
add
sbb
clc
inc
fistps
sti
add
jl
add
faddp
loop
or
cmp
push
aad
ss
cwtl
rclb
rcll
and
cmp
test
mov
xchg
dec
jge
je
push
xor
lcall
mov
pop
xor
cmp
sub
movsl
jbe
add
lods
add
add
cltd
xor
pop
jp
mov
pop
test
add
rcrb
and
pop
cmc
mov
daa
jo
xor
add
sbb
lock
cmc
ds
mov
add
jg
jge
and
cmp
fildll
adc
cld
mov
les
sbb
push
push
lea
add
jmp
cli
lret
imul
sarb
add
fs
adc
mov
andb
data16
pop
cld
lock
xchg
add
push
and
andl
add
push
jns
mov
or
iret
jnp
add
sub
nop
dec
lds
outsl
nop
mov
jno
and
add
dec
les
nop
int3
or
and
mov
dec
add
mov
fdivrs
pop
add
push
mov
icebp
cli
mov
clc
add
adc
in
ret
mov
cmpsl
mov
mov
xlat
dec
fldl
add
mov
sbb
lret
jo
rcrb
addl
and
mov
add
pop
into
push
pop
inc
xchg
out
adc
or
sub
popf
jmp
test
jle
test
inc
pop
sbb
ror
shl
pop
lods
call
ffreep
arpl
aad
xor
pushf
sub
movaps
sub
jge
add
cmpsb
fsubrl
in
push
out
sbb
sti
clc
out
popa
adcb
jne
fisubs
fisttpll
out
rcll
push
and
js
add
stos
pushf
xor
fs
cmovl
lods
xorl
and
mov
int3
icebp
repnz
cmpsl
in
jo
es
ljmp
pusha
jmp
popa
shl
rol
jno
loopne
xor
test
dec
adc
lods
push
add
sbb
cmp
orb
sbb
push
shrb
inc
pop
cmp
mov
push
mov
les
add
dec
enter
or
insb
dec
incb
test
push
inc
cmp
mov
cwtl
sub
shlb
pop
shll
loop
add
xchg
xchg
xorb
jbe
pop
cltd
jne
fwait
roll
jnp
stos
dec
push
push
aam
add
aam
loop
jmp
add
lcall
add
mov
adc
stc
adc
call
mov
inc
jb
sub
mov
add
clc
dec
jmp
test
add
cmpsl
xor
dec
das
xchg
mov
add
pop
add
adc
push
jge
add
add
es
cmp
loopne
lret
lods
or
rcrb
add
cmc
add
mov
daa
push
sub
jge
push
dec
cmp
add
popf
sbb
int3
dec
loopne
mov
enter
gs
cs
push
push
inc
arpl
pusha
repnz
push
in
test
adc
rolb
inc
push
mov
sti
mov
ja
push
lds
add
repz
lods
pop
aad
daa
in
pop
xchg
call
aad
daa
push
addr16
out
jo
out
jnp
sbb
out
test
lcall
xchg
add
neg
or
rclb
add
or
out
cmp
push
mov
cmp
push
les
outsb
lret
add
mov
adcl
sbb
xor
pusha
int3
xchg
add
and
lcall
add
pop
mov
and
jmp
add
sub
leave
cs
adc
ret
add
cmp
out
jmp
dec
bound
mov
jns
subb
jg
movsl
add
inc
cmpsb
push
orl
and
cltd
clc
add
shrl
xorb
pushf
inc
shl
push
das
adc
loopne
les
les
cltd
jnp
inc
pop
stos
popf
add
hlt
fisubl
shrb
shr
lods
add
gs
cmp
std
cmp
pushf
sub
mov
lret
pushf
adc
nop
pop
xchg
es
bound
mov
xor
pop
inc
or
or
jle
pop
mov
out
subb
pop
aas
and
jo
pop
mov
mov
fbstp
inc
add
xlat
cmp
jne
add
xchg
mov
add
xor
adc
sahf
sub
out
aas
ja
sbb
fwait
test
mov
pushf
pop
cld
test
lahf
pop
add
outsl
daa
xor
lret
addr16
push
lock
pop
add
inc
add
hlt
rclb
stos
test
dec
mov
shlb
xchg
repz
cltd
jmp
pushf
adc
add
fdivs
dec
std
mov
mov
jae
mov
or
hlt
mov
or
sbb
hlt
sbb
and
sti
int3
notl
add
push
sub
loop
jne
or
jae
xor
pop
adc
mov
sub
sub
mov
repnz
xchg
iret
scas
mov
add
sbb
pop
loopne
iret
add
jo
mov
add
push
push
add
adc
jae
cwtl
or
mov
xchg
adc
pusha
ljmp
dec
cmpb
sub
adc
je
repnz
lahf
pusha
and
addr16
pushf
add
add
nop
dec
rclb
ficoml
inc
fdivrl
or
mov
fldl
and
icebp
arpl
add
shrl
loopne
fildl
mov
test
sbb
inc
hlt
and
add
stos
test
lret
fs
and
sbb
aam
lods
add
inc
xchg
loopne
push
loopne
es
test
int3
jp
push
add
aas
pushf
inc
add
mov
repz
cmpl
addr16
push
xorl
pusha
shrl
mov
pop
xorb
push
adc
jmp
xor
aas
jne
mov
add
hlt
in
add
aam
sub
mov
lods
add
or
xor
add
js
add
std
sbb
jecxz
inc
dec
jb
add
aam
and
inc
add
xor
dec
enterw
add
xor
ss
or
or
iret
out
call
xchg
sbb
clc
into
add
mov
xchg
dec
cmp
add
push
nop
shr
inc
cld
cmp
unpcklps
sbb
sti
jne
add
popf
out
add
stos
mov
js
movsb
adc
lcall
aaa
inc
add
xchg
addl
mov
mov
pop
sbb
adc
test
std
pop
aam
add
push
sarb
add
or
ret
ds
adc
and
xchg
and
add
jbe
xchg
ficomps
cmp
scas
xchg
leave
addl
rep
pop
jge
add
incb
outsl
gs
loop
dec
inc
pop
lods
in
frstor
call
adc
xor
test
pop
in
lea
shl
xor
aam
imul
test
mov
scas
and
into
inc
push
inc
inc
or
repnz
hlt
ja
xor
jo
add
ljmp
jle
xchg
faddl
dec
pop
mov
fnsave
mov
adcl
xor
or
push
or
mov
cmpl
stos
mov
push
cmc
aad
cli
pusha
in
data16
and
pusha
or
jb
lods
mov
pop
cmpsl
aam
sahf
mov
mov
into
addb
mov
dec
dec
cmp
lcall
pop
add
pop
push
dec
mov
push
push
or
ret
push
adcb
icebp
je
out
mov
outsl
test
mov
ja
push
ljmp
jb
fldcw
pop
fbld
cmc
adc
xor
insl
inc
hlt
fwait
add
inc
mov
adc
mov
add
rcrl
push
jb
rorb
insl
cmp
divl
cmp
inc
shll
cmp
in
fadd
aas
mov
into
sub
imul
pop
adcb
popa
ret
push
mov
ret
sbb
test
ss
ud0
mov
mov
add
test
inc
popf
jb
inc
xor
loopne
mov
mov
stc
out
mov
loopne
roll
dec
cmpsb
dec
add
xchg
popa
scas
sbb
or
lds
add
push
rol
adc
mov
lods
jl
call
mov
ss
mov
jb
adc
pusha
xchg
add
stos
mov
cld
int3
sarl
lahf
or
add
lret
lods
lock
aaa
fisttpl
jb
int
call
call
sbb
loopne,pn
sbb
cmc
popa
add
inc
push
jge
test
pushf
jns
aas
into
add
or
sbb
inc
leave
test
aaa
bound
xchg
pusha
aad
jl
adc
push
out
mov
and
xchg
push
inc
push
sub
mov
loopne
je
outsl
mov
add
cmc
aam
mov
and
and
arpl
repnz
stos
lahf
push
pop
xchg
es
and
sub
add
adcl
adc
fucom
mov
add
mov
and
xchg
rorb
pop
xorb
add
sub
pop
inc
lret
lock
cmc
sahf
add
movsb
push
xor
xchg
jl
scas
mov
jne
add
mov
ja
mov
stc
aaa
push
add
lahf
push
mov
jmp
jnp
pushf
sahf
out
xor
xorb
xchg
xchg
clc
fsubrl
mov
add
incl
cmp
jg
add
jno
les
xor
mov
and
out
add
adc
call
add
in
jo
insl
pop
xor
stc
sub
add
rolb
or
push
pop
outsl
pop
add
imul
popa
std
add
inc
lock
push
dec
or
fdivrs
daa
aad
sub
sub
add
mov
fists
hlt
out
ljmp
fcoml
test
push
mov
scas
and
repnz
mov
test
pop
push
cmpsl
pusha
mov
add
jge
pop
or
dec
add
mov
mov
add
lods
movsb
roll
sub
and
mov
in
aas
lcall
sahf
adc
pop
insl
cld
fmul
testb
adc
lahf
call
mov
cmpsb
ficompl
inc
lret
pop
push
adc
dec
frstor
fsubrs
add
movsl
outsb
push
mov
mov
bound
and
cs
repz
mov
cmp
test
adc
add
mov
xchg
adc
add
mov
fisttpl
or
add
or
ret
push
dec
mov
mov
leave
test
ss
dec
or
dec
rcl
lods
cmp
aam
dec
sahf
jle
dec
test
jnp
push
int
cltd
adc
push
add
rolb
push
dec
jo
jl
add
das
mov
lds
shlb
imul
mov
mov
mov
dec
and
divb
sub
jecxz
stos
ds
push
dec
jp
adc
push
dec
test
popw
xchg
aam
addr16
scas
sar
leave
gs
bound
xor
stos
push
mov
bound
mov
mov
mov
pop
inc
xchg
inc
insl
add
fsub
daa
fidivrs
xchg
jge
gs
push
lock
outsb
and
add
cwtl
push
cmp
in
and
sahf
repz
mov
jo
pop
add
out
pop
xchg
push
dec
cmp
aad
pop
add
inc
sub
fcoms
sbbb
call
mov
vcomisd
incb
shll
push
inc
xchg
dec
imul
fnstcw
pop
add
rcr
pop
add
push
xlat
add
and
xchg
popf
xchg
jb
add
test
adc
mov
movb
cmp
test
mov
add
loop
inc
mov
pop
lods
add
scas
test
data16
pop
icebp
aam
mov
jae
cmp
push
insl
jns
in
push
pop
repnz
sbb
movsl
outsl
pop
std
mov
nop
xorl
subl
push
mov
xor
cmp
mov
xor
or
lock
adc
add
sub
dec
sti
inc
pusha
cli
pop
loopne
or
adc
add
insl
sbbb
pop
push
mov
inc
push
ret
sbb
and
clc
or
push
sub
mov
or
decb
add
ret
xchg
gs
push
jns
jge
cmp
lret
ljmp
add
fildl
xchg
xor
add
lret
adc
fimuls
loope
mov
in
pop
dec
ja
pop
into
repnz
out
loopne
pop
dec
jge
clc
dec
or
incl
and
cmp
jae
dec
jp
add
lcall
call
push
fwait
or
in
cmpsl
lods
out
add
roll
shll
lcall
cmp
add
ret
inc
dec
xor
lahf
call
call
bound
xlat
repnz
cli
add
adcb
aam
mov
aas
xchg
ljmp
sarb
pop
fidivs
xchg
mov
test
inc
pop
in
mov
das
inc
dec
shrb
out
push
insb
icebp
sub
add
inc
push
mov
mov
push
cmp
push
fwait
mov
pusha
outsl
movsl
jnp
dec
push
sub
sbb
add
and
adc
cltd
mov
or
pop
cld
pop
data16
nop
inc
call
in
cmp
cmpsl
out
fwait
out
cwtl
add
inc
jl
push
push
shr
add
fistpll
movsl
rcrb
mov
jae
mov
inc
test
pop
dec
push
lock
jb
addb
jg
and
pop
add
add
scas
push
cwtl
mov
add
rol
inc
ret
mov
xlat
rcrb
test
ja
push
dec
test
cmpsl
into
imul
sub
cltd
add
and
aas
add
xchg
insl
bound
jno
jp
mov
and
pop
imul
mov
cwtl
adc
sti
adc
fldcw
inc
and
and
adc
push
push
arpl
xchg
js,pt
mov
jae
xchg
leave
ss
inc
add
xor
frstor
pop
test
mov
dec
ja
rcrb
cmp
mov
inc
pop
mov
or
rorl
pushf
dec
rolb
stos
pop
lcall
lret
push
push
mov
repnz
sub
mov
mov
bound
shll
xor
sub
inc
loope
mov
pop
popa
cmp
incl
outsl
xchg
cmp
pop
punpcklbw
aam
add
mov
sub
xor
xchg
xchg
pop
cmp
stc
das
inc
pop
dec
push
jp
push
push
pop
test
pop
lds
xorb
xor
add
testl
stos
js
jo
or
add
pop
lret
in
adc
mov
js
xchg
into
pop
sbb
xor
dec
in
add
movsb
and
jae
dec
add
loope
movsl
add
inc
inc
jp
add
ret
add
in
clc
add
xchg
adc
sub
cmp
rclb
add
xor
mov
popf
xor
rorb
jle
cmp
jne
loope
add
adc
js
cmpsl
scas
movsl
loop
sub
xor
jo
pop
sbbb
add
std
scas
pop
add
push
jnp
sbb
inc
push
outsw
jge
add
xor
add
js
lret
icebp
cmp
add
pop
iret
addr16
gs
clc
sub
scas
mov
dec
rcrl
add
add
xor
lea
int3
add
iret
add
cmc
popa
lret
mov
jge
les
add
rcrb
dec
adc
add
mov
jae
cmp
or
mov
dec
add
sub
add
adc
pusha
js
das
cwtl
js
call
xor
inc
cmp
cmp
and
jl
insb
cmp
pop
add
jbe
mov
in
rolb
push
and
inc
adc
int3
cli
lahf
add
lock
iret
push
int3
inc
jns
add
add
sub
cmp
inc
mov
mov
lea
enter
cmp
pusha
out
or
xor
es
sbb
jnp
push
cmpsl
mov
and
ret
cmc
or
jmp
idiv
dec
pusha
adc
dec
loopne
movsb
clc
mov
or
jecxz
mov
js
cmp
mov
add
sti
and
add
js
in
adc
or
add
cmp
xor
pop
shlb
in
fsubp
arpl
adc
data16
and
mov
mov
add
insl
fs
rorb
mov
jle
mov
sti
out
mov
in
inc
sub
fs
add
xchg
sbb
mov
les
lahf
mov
cmp
add
fildl
jmp
stos
andb
xchg
jbe
add
mov
test
mov
and
xor
pushf
cmp
test
pop
add
pusha
es
dec
lods
ret
lods
lret
mov
enter
xchg
xchg
add
lock
xlat
add
icebp
cltd
push
and
or
stos
jmp
cld
dec
xor
addr16
in
sub
outsl
adc
and
jle
push
or
fadds
clc
mov
mov
addr16
fwait
repz
sbb
sub
ret
or
xor
js
iret
inc
cmpsb
fst
push
mov
add
pusha
jb
js
add
cmc
in
or
punpcklwd
jbe
cmovs
xchg
pusha
sbb
test
push
mov
test
aaa
cmp
scas
cmp
loopne
insb
enter
add
rorb
sbb
arpl
rorb
call
push
push
inc
mov
rclb
xchg
fsubl
add
fisubrl
add
mov
sbb
jae
push
mov
scas
in
add
pop
push
cmpl
into
shlb
stos
push
push
stc
fisttpll
fadds
out
jo
subb
mov
dec
fmulp
xorb
je
mov
inc
adcb
pop
cmpl
arpl
sub
sbb
inc
cli
jo
imul
lret
leave
loope
pop
jae
xor
loopne
sub
push
add
mov
mov
adc
icebp
mov
mov
bound
and
pop
lock
stos
loop
addb
add
lret
imul
int
jmp
mov
insb
sub
mov
add
sub
fimull
and
arpl
scas
sub
push
pop
cmc
pop
popf
imul
add
hlt
int3
mov
push
adc
sti
enter
inc
pop
jno
add
fwait
cwtl
mov
add
push
iret
psadbw
jae
add
insb
lock
xor
jae
push
xchg
dec
cmpl
mov
clc
sub
lods
jbe
inc
and
testb
jmp
addb
and
ret
pop
movsl
jns
add
sbb
rorb
lock
jg
popa
jb
add
and
mov
movsl
mov
ja
outsl
lahf
mov
insb
mov
lock
cwtl
xchg
mov
aam
mov
subb
adc
mov
and
add
lods
enter
mov
in
jmp
add
das
cmp
xor
adc
jecxz
adc
xorb
clc
cld
stos
es
xchg
aas
add
orb
xchg
dec
ror
mov
jl
add
fadds
add
lret
cli
data16
cmp
adc
test
or
loop
ss
lcall
mov
les
add
or
xorb
or
mov
add
xchg
repnz
jp
test
inc
add
dec
mov
fsub
add
sbb
or
inc
jbe
cltd
push
fdiv
and
test
lcall
mov
sti
jmp
add
ljmp
add
add
sub
jmp
push
xorb
std
pop
lods
or
out
call
inc
xorb
scas
test
aam
mov
cmp
cltd
add
sbb
mov
push
subb
pushf
add
out
and
es
add
jns
ss
int
lret
stos
pop
packssdw
add
xchg
leave
and
pop
int3
sbb
scas
loopne
and
faddl
mov
mov
mov
jg
stos
je
inc
pop
add
xchg
sti
ljmp
aas
sbbb
inc
sub
insb
in
in
push
xchg
jne
inc
jecxz
mov
andb
pop
xchg
iret
int3
adc
add
test
push
inc
add
call
in
mov
and
jno
push
cmpsb
fsubrp
iret
add
sbbb
dec
out
pop
ja
aam
push
mov
imul
jg
das
cmp
add
test
add
not
add
inc
jecxz
mov
jbe
jle
lods
mov
repz
adc
inc
leave
test
in
add
adc
adc
xchg
jbe
inc
pushf
push
pop
nop
xor
xchg
adc
or
sti
cld
and
hlt
hlt
or
push
dec
jmp
mov
jg
add
or
loop
jnp
mov
outsb
and
rcl
or
and
push
jno
pop
adc
das
fildll
in
sub
mov
ja
lcall
inc
jl
divl
push
bound
aam
inc
add
xchg
nop
or
cwtl
movsb
fcoml
out
in
mov
add
mov
xor
sbb
test
xchg
dec
xor
mov
mov
mov
add
dec
testl
lock
add
mov
adc
xchg
add
ret
sub
stos
pusha
enter
sub
cmpsl
pop
shl
xor
mov
dec
cwtl
sub
and
jp
orb
rcl
cmpsb
lods
pusha
clc
js
pop
cmpsl
das
mov
and
dec
or
rorb
movsb
add
jg
addl
jnp
sub
incb
pop
push
jb
outsb
aad
add
sbb
and
out
push
ss
stos
jnp
xor
dec
cmp
orb
dec
or
lcall
jne
divps
add
jl
dec
jecxz
incl
xchg
inc
mov
loope
int3
push
xchg
cmp
add
pop
or
clc
add
insl
pushf
orb
jp
jle
fs
icebp
nop
imul
add
push
push
mov
add
addl
sub
jae
mov
cld
andl
cmpb
rcrl
scas
rcrb
fsts
es
cmp
ds
adc
cld
jmp
lods
dec
aad
jno
add
jbe
je
repz
js
popf
add
sbb
pop
fstpt
mov
inc
and
cli
rcrl
xor
sbb
loop,pn
rcrb
mov
inc
imul
sub
push
dec
cmp
push
mov
mov
push
push
push
dec
sub
shll
and
mov
subl
push
cmp
pop
imulb
add
add
enter
ja
std
and
icebp
add
inc
mov
cli
push
aaa
clc
mov
jle
lret
fcmovne
adc
mov
pop
clc
insl
in
sbb
xor
test
jl
sub
into
sbbb
dec
xor
les
in
push
rorb
add
insb
inc
adc
mov
fiaddl
add
inc
sbb
or
cmp
push
js
jno
imul
add
pop
and
mov
inc
pop
enter
and
push
jns
popl
insb
and
jbe
imul
je
cwtl
pop
cltd
cld
loopne
cmpsb
in
add
pop
xor
fistpl
inc
rorb
and
and
imull
jl
xchg
jmp
imul
movl
sbb
cmp
sbb
add
pop
add
cli
inc
add
sub
popf
sbb
shrl
jae
jno
cs
or
in
pushl
clc
add
or
xchg
lock
cli
adc
jmp
cmp
add
push
test
fisubs
add
pop
stos
push
lods
aam
pop
pop
aaa
pop
outsb
push
pusha
xchg
rorl
cmc
inc
sar
cli
imul
pop
cmp
dec
inc
or
xor
mov
mov
leave
and
stc
ds
aas
outsb
mov
andb
cwtl
ficoms
add
xchg
xchg
sbb
insl
and
and
add
das
and
add
in
add
cmp
mov
push
xchg
pop
sub
and
cmpl
pusha
adc
jmp
jge
int
lock
in
insb
mov
out
mov
jae
add
fsubrl
add
and
mov
mov
outsl
add
loope
std
add
push
and
insb
add
or
xor
pextrw
xchg
call
out
sbb
mov
add
or
jno
and
add
mov
jae
je
add
pop
jno
add
cltd
fidivrl
cmpsb
cmp
out
stc
jecxz
rolb
lock
xchg
cltd
addr16
push
add
inc
aas
mov
imul
jb
enter
outsb
fisubrs
inc
scas
pop
and
mov
hlt
loop
pop
inc
push
jl
push
xchg
add
push
arpl
and
push
and
add
cmc
sbb
pop
add
xlat
mov
in
mov
cmp
cmpsl
inc
test
outsl
lods
hlt
jecxz
fstpl
and
xor
cmp
cmp
and
mov
add
push
xchg
les
jae
aaa
push
ret
push
rclb
incl
repz
jae
push
dec
pop
clc
mov
pop
adc
cmpb
or
and
or
idivl
xchg
sub
and
dec
jmp
add
fdivrl
pop
pushf
jecxz
add
hlt
call
rclb
pop
pop
lods
test
sbb
add
mov
xor
adc
movups
sbb
mov
pop
leave
scas
sbb
jmp
or
call
jg
pop
inc
sahf
imul
jge
pop
cmpsl
or
scas
sub
and
call
sbb
clc
ljmp
rorb
enter
test
push
jle
xor
sbb
aad
sub
dec
sbb
pop
pop
sub
sub
call
xchg
insl
fadds
and
mov
dec
ret
mov
clc
aaa
and
repnz
adc
loopne
jl
pusha
rcl
jecxz
mov
pop
lods
cmp
add
enter
pop
xchg
add
cmp
jb
mov
clc
add
and
sbb
xor
add
in
sub
push
pop
pop
add
inc
add
adc
jle
mov
nop
jae
add
movsl
stos
repz
or
mov
sahf
add
sub
and
mov
dec
dec
lea
push
inc
jge
or
pusha
rol
enter
adc
gs
nop
mov
sub
ja
add
push
jnp
in
add
out
repz
pusha
inc
jl
push
pop
addr16
aad
loopne
and
push
in
cmp
imul
aas
sub
insb
clc
push
pop
add
sub
xor
cmc
int
lahf
pop
cs
imul
data16
and
test
cmpl
mov
aad
fsub
mov
add
in
cli
xor
movsl
sub
ss
cs
mov
cmp
out
add
insb
fnsave
jb
add
jne
sub
mul
mov
add
mov
jnp
add
outsb
pop
jg
outsl
add
fs
mov
inc
movsb
loopne
decl
push
inc
add
sarb
add
aaa
sbb
add
xchg
mov
add
xchg
out
addr16
arpl
sbb
push
dec
mov
pop
inc
aad
movsl
push
dec
cli
jl
dec
push
inc
mov
movsb
pop
sbb
jp
movsl
insl
dec
dec
lahf
popa
add
out
scas
mov
icebp
add
mov
popf
gs
push
test
mov
cwtl
pop
sbb
inc
popa
xor
sub
lea
in
inc
sbb
add
and
cmp
adc
leave
lock
mov
mov
mov
loopne
inc
inc
insb
js
push
jmp
xlat
nop
mov
pop
pop
movsb
xor
shlb
sub
iret
adc
out
stos
add
xor
sub
addr16
arpl
add
cwtl
mov
and
cmc
and
or
jne
pop
jge
push
adc
add
xchg
push
rolb
fsub
fnstcw
xor
xchg
add
rcpps
add
cmpsb
fildl
add
dec
add
add
inc
jmp
movl
movsb
pusha
jo
nop
faddl
add
push
jg
push
clc
xor
sbb
adc
mov
dec
cwtl
mov
push
mov
add
stc
adc
les
nop
jl
loop
xor
int
add
add
ja
sbb
out
lcall
ja
add
add
dec
lock
sbb
xor
add
out
sbb
adc
out
repnz
mov
mov
je
pop
add
sbb
cmp
push
filds
mov
out
add
push
rsqrtps
sub
add
shl
pushf
or
jp
and
ss
mov
popf
decl
out
add
sub
push
add
lods
mov
repz
add
bound
out
rorb
cmp
popa
dec
push
mov
rcll
aas
pusha
stos
cmp
ficomps
pop
mov
lcall
imul
dec
clc
je
insb
cmp
cwtl
add
xor
add
stc
fdivs
repnz
aas
in
shrd
jp
addb
loopne
xchg
add
pop
int
add
aam
test
dec
iret
and
add
push
mov
xor
and
mov
add
sub
xchg
subb
aas
movsl
add
cli
loopne
fstl
mov
jno
add
xor
and
lahf
mulb
sub
stc
jl
mov
inc
jl
mov
inc
fcoml
jne
mov
sbb
jmp
add
mov
int3
lds
pushf
xchg
inc
sbb
imul
mov
add
mov
dec
jne
mov
add
push
insl
lcall
and
test
mov
clc
add
icebp
ror
leave
mov
enter
push
enter
add
test
mov
cmpsb
aaa
adc
insb
pop
add
mov
rcll
jb
outsl
or
lods
add
or
lock
adc
hlt
js
gs
xchg
mov
mov
sub
pop
dec
cwtl
sti
aaa
add
lea
dec
add
scas
insb
push
pop
pusha
cmp
adc
add
pusha
push
add
dec
push
push
cmp
lret
jecxz
xchg
addr16
std
push
add
jo
cs
addr16
rol
mov
fcmovnb
cmpsb
dec
rcrl
es
js
xor
mov
leave
push
dec
cmp
mov
orl
or
add
lods
sti
mov
jmp
add
in
xor
xor
sub
add
jecxz
sub
es
dec
repz
cs
push
add
shrl
pop
arpl
out
in
xor
pop
push
popa
and
cs
inc
and
adc
sub
adc
or
movsb
js
or
cltd
mov
add
aas
in
add
xchg
pop
in
lcall
cs
lahf
or
and
inc
xor
dec
les
leave
add
inc
scas
sub
and
neg
add
pusha
ret
lods
inc
add
cmp
or
inc
cmp
adc
scas
fidivrs
cli
sub
rcl
cld
add
push
pop
pop
jns
mov
mov
push
stos
jne
add
cmp
dec
xchg
repnz
idivb
pop
push
sbb
mov
add
push
adc
adc
in
cmp
pop
dec
mov
inc
jns
cmp
pop
ja
sbb
push
fadds
rcl
dec
inc
dec
or
js
and
gs
and
add
mov
sbb
test
inc
xorb
rolb
addr16
mov
les
adc
pop
push
add
mov
cmpsb
jp
mov
pop
ja
or
sub
clc
mov
imul
add
outsl
subl
mov
gs
sbb
pop
add
test
lret
or
dec
fcompl
add
xchg
sahf
stos
jp
add
and
mov
add
sub
call
add
rolb
jns
push
push
add
add
mov
call
xorb
cmp
pop
mov
sub
add
xor
repz
xchg
sub
mov
out
add
mov
adc
xchg
and
jno
inc
mov
cmp
push
rorb
andb
ja
pop
pop
and
add
xchg
shr
call
jmp
mov
push
add
jmp
sub
add
cmp
push
add
cmc
mov
aaa
dec
ja
add
or
add
je
ds
lods
adc
push
lds
and
xor
sbbl
sbb
loop
pusha
and
hlt
push
std
addr16
xchg
cwtl
mov
nop
add
mov
subl
ja
enter
sar
mov
push
fwait
or
mov
shrl
xchg
add
iret
inc
repz
sbbl
andb
jmp
xchg
rcl
out
cltd
dec
push
push
sbb
repz
pop
push
push
into
test
rorb
xchg
cmp
std
sub
xchg
sub
xchg
pop
fwait
add
inc
repnz
nop
nop
arpl
nop
rcrl
dec
add
mov
pop
popa
mov
pusha
xchg
orl
imul
jmp
loope
aad
and
xchg
add
mov
inc
mov
pop
cmp
pop
xor
mov
dec
add
or
cltd
mov
mov
and
shll
mov
sbb
test
mov
xor
add
in
sbb
mov
notl
cld
insb
pop
or
mov
cmpb
lret
mov
sti
int
loopne
addr16
leave
rorb
xorb
insl
push
dec
jnp
cmp
add
and
cwtl
rcll
dec
xorb
sub
add
mov
repnz
clc
xchg
cmpsl
add
std
dec
pop
push
sbb
ljmp
std
xor
mov
push
faddp
mov
push
xor
in
add
mov
mov
sbb
and
ret
or
mov
mov
pop
dec
sbb
adc
fmuls
mov
inc
push
ret
inc
aas
popf
loopne
pop
vfrczps
aam
mov
inc
mov
add
push
mov
leave
add
ss
loopne
push
add
test
in
test
bound
sbb
inc
adc
inc
add
jge
outsl
mov
add
repz
sbb
push
cltd
imul
pop
xchg
adc
lahf
sub
or
dec
push
jle
add
add
or
ret
mov
jo
sub
pop
cltd
mov
push
add
or
cmp
outsl
and
dec
es
mov
xor
leave
std
sub
arpl
xchg
fdivl
lahf
jb
mov
or
fsubrs
inc
push
or
nop
cmp
rcll
cwtl
insl
push
sahf
mov
scas
ds
aas
adc
arpl
xor
decb
pop
mov
fmuls
cld
add
add
pop
jge
sub
loope
fldl
mov
sbb
popa
repz
hlt
push
nop
mov
insb
mov
jno
or
add
mov
pop
mov
mov
repz
shll
cs
js
push
rorb
ficompl
std
add
sub
and
xchg
pop
push
inc
mov
xchg
cmp
dec
mov
xchg
mov
add
call
in
xchg
push
fmull
add
push
jp
jae
mov
inc
pop
fsubp
xchg
pop
xor
in
int
outsl
dec
movsb
adc
pop
push
add
int3
test
sub
mov
pusha
ss
xchg
add
outsl
push
cmp
add
ror
aam
mov
jmp
and
shlb
out
push
lock
add
icebp
cmp
or
popa
popf
and
in
add
filds
jmp
aaa
or
add
cmp
pop
scas
notl
je
push
mov
xor
ja
lret
mov
add
and
add
or
cltd
scas
pop
pop
lds
add
lahf
inc
inc
push
mov
cs
sub
mov
push
cld
daa
das
data16
xor
inc
mov
pusha
lods
mov
and
outsl
lea
and
jns
mov
jmp
enter
clts
imulb
daa
and
gs
mov
jbe
call
mov
jmp
sbb
lea
add
roll
inc
pop
int
sbb
adc
setb
orl
roll
mov
fs
in
push
pop
cmc
pop
mov
mov
outsl
adc
jne,pt
pop
jbe
dec
inc
faddl
jmp
push
iret
and
cmp
adc
dec
jbe
test
inc
repz
pop
dec
add
mul
arpl
mov
cmp
or
mov
mov
inc
inc
adc
adc
loope
nop
add
cmp
add
jp
les
adc
adc
pop
mov
and
pusha
arpl
add
clc
jbe
sub
out
fidivrl
inc
loop
arpl
ja
adc
jnp
add
aaa
or
adcb
mov
mov
adc
clc
xor
std
jp
test
sbb
add
cmc
loop
cmpsb
das
dec
add
popf
repnz
lahf
mov
add
inc
push
inc
xor
stc
jecxz
lock
xor
nop
jp
inc
xor
mov
or
push
mov
popa
icebp
lods
add
adc
jo
jae
cmp
mov
nop
adc
loopne
jno
or
xor
call
dec
in
pop
loopne
lods
js
jp
jge
add
lahf
std
mov
stos
cmp
addr16
clc
sbb
mov
call
adc
ds
int
sbb
mov
mov
addr16
add
and
fnstcw
cmpsl
arpl
test
aam
lea
dec
adc
add
fildll
or
sbb
or
xorb
fs
inc
out
mov
mov
mov
mov
loope
add
jle
repnz
jne
add
test
cwtl
or
lret
add
insl
jnp
insb
adc
jbe
push
enter
loopne
add
add
int
sbb
ljmp
pusha
fildll
xchg
sbb
test
stos
insb
lahf
rclb
sti
pusha
je
pop
call
scas
dec
popa
pushf
xor
inc
mov
pop
jecxz
es
loop
push
andb
jp
sbb
int3
add
lret
sbb
addr16
call
movsl
test
stos
add
test
adc
add
imul
mov
ss
inc
sti
cmp
mov
imul
js
sbb
lods
mov
aam
ret
bound
pop
sar
sbb
loopne
mov
mov
push
cltd
jno
sbb
iret
js
outsl
xchg
int
test
stos
imul
jecxz
xchg
ftst
rcrb
sbb
add
notl
mov
add
sub
rcr
test
mov
xor
add
fdivr
jno
iret
mov
sbb
montmul
cmpsb
add
jle
pop
shll
add
aam
test
add
pop
inc
pop
xor
js
lret
ret
cmp
ss
adc
fld
rclb
mov
cli
lret
add
dec
pushf
call
add
inc
pop
scas
rol
adc
imul
push
jmp
add
std
mov
pop
fs
sbbb
ret
mulb
sti
insb
lret
dec
clc
dec
adc
push
lock
mov
ffree
daa
add
mov
adc
mov
adc
pushf
dec
pusha
sbb
packuswb
adc
subb
lcall
mov
stos
les
int
jno
imul
add
jle
add
lods
mov
cwtl
int3
or
lock
and
jl
ds
or
sbb
jmp
pop
out
and
lret
add
imul
sub
test
lret
jle
lods
adc
push
add
dec
sbbb
inc
xchg
ja
ret
sub
adc
adc
test
popf
sqrtps
jmp
ss
rorb
leave
lahf
add
mov
and
iret
adc
mov
dec
push
insb
icebp
daa
in
mov
dec
addr16
cltd
lock
dec
cmpsb
jg
add
mov
fcomps
cmp
and
iret
test
flds
xor
dec
aam
lock
filds
or
in
jp
jno
loop
or
jmp
xlat
add
jl
pop
add
addl
mov
clc
push
out
pop
std
aad
jo
scas
jns
lock
add
pop
sahf
adc
addb
in
xlat
ret
hlt
and
add
nop
outsl
adc
andb
test
dec
sub
push
xchg
add
je
movsb
adcb
loop
ficoms
adc
xchg
jl
pusha
call
lods
jecxz
jns
push
mov
and
xorb
mov
outsl
add
mov
pop
and
dec
out
cmp
sub
fdivp
inc
in
jo,pn
or
stos
repz
fs
xor
test
jge
scas
fxtract
inc
jno
add
aad
lcall
mov
cwtl
jl
test
imul
add
xor
aas
or
in
in
arpl
add
scas
or
shl
clc
inc
ds
data16
lock
mov
lret
adc
or
lods
pop
cld
push
mov
push
and
cmpsl
in
adc
rolb
add
jbe
imul
and
pop
test
xchg
or
stc
add
adc
xchg
dec
add
pop
mov
add
clc
adc
mov
mov
add
pause
pushf
fwait
insb
scas
xchg
lock
pop
lods
sub
add
mov
mov
xchg
push
add
roll
imul
dec
add
mov
scas
push
mov
add
into
cmp
mov
push
jo
roll
es
aam
sbbl
subl
push
rolb
jl
sub
cmpsl
add
cltd
icebp
pop
adc
mov
mov
popf
dec
inc
jge
data16
enter
push
popf
jmp
mov
and
xchg
xchg
mov
add
mov
add
pushf
shlb
adc
fldcw
jbe
sbbb
addr16
inc
fs
lret
frstor
xor
mov
jmp
jae
cmp
jb
dec
ja
push
insb
jle
xor
sub
mov
and
fistpl
lcall
sbb
rcl
sbbb
and
mov
lret
inc
mov
mov
scas
mov
subb
popf
std
cmp
inc
jle
roll
push
and
das
pop
add
lcall
aam
cmc
or
push
cwtl
sbb
jg
and
sbb
bound
pop
imul
ret
or
loope
lea
add
or
ss
xor
lahf
fnstcw
test
push
repnz
gs
xor
sti
add
test
pop
imul
in
pop
xchg
cs
dec
loop
and
cmp
dec
pop
add
shrl
hlt
loopne
fmuls
cmp
lods
out
outsl
addl
popa
add
add
xorb
and
mov
xchg
push
or
fwait
or
shrb
shll
outsl
je,pt
jbe
push
shlb
adc
popa
lods
adc
sbb
les
mov
push
adc
and
push
mov
adc
inc
xchg
pop
sbb
andb
or
mov
pop
add
mov
pop
inc
addr16
cmp
add
push
pop
mov
subb
dec
aaa
mov
and
test
push
cmpsb
jnp
adc
inc
adc
pop
adc
inc
cmp
mov
pop
mov
movsb
lcall
xor
adc
mov
enter
lods
jp
mov
out
pusha
mov
push
or
inc
pop
add
bound
jg
add
loope
sti
jne
xchg
inc
jb
lds
mov
jl
es
push
jl
xor
mov
sti
inc
mov
jp
cmp
rclb
adc
and
sti
adc
outsb
add
sub
mov
lahf
add
test
dec
mov
mov
adc
dec
xchg
pcmpgtd
sub
sub
decb
mov
mov
xchg
cltd
push
mov
sti
lods
cltd
mov
jo
and
cmp
xchg
inc
test
inc
ret
mov
and
xor
notb
adcb
jo
adc
sarl
and
inc
popf
imul
push
add
lcall
xor
int
pusha
jns
pop
insl
dec
jecxz
nop
add
test
ret
sbb
add
adc
mov
add
lahf
cltd
rorb
dec
ret
mov
dec
pop
or
and
dec
shl
jge
subl
pop
and
jnp
bound
adc
mov
xchg
xchg
mov
mov
and
rolb
int
movsb
divl
nop
cmp
add
sarb
nop
sub
cltd
jl
xchg
pop
push
adc
movsl
inc
ret
shlb
inc
push
gs
add
sbb
clc
add
int3
and
mov
mov
inc
loope
sti
inc
insl
and
outsl
loope
lea
es
fstpl
mov
scas
loopne
cli
lret
iret
or
mov
pop
out
adc
pushf
add
pusha
sbb
loop
sub
shlb
mull
cmp
cmp
popa
push
shrb
add
fs
push
jle
add
dec
popf
cmp
cld
jle
cmp
add
mov
sbb
stc
inc
mov
cmp
loopne
inc
mov
into
or
lods
lods
dec
xor
sbbb
inc
clc
xchg
or
call
dec
jae
xorb
nop
and
sub
inc
inc
mov
out
js
push
mov
cmp
imul
pushf
mov
mov
and
xchg
push
pushf
cwtl
add
jg
push
pop
test
insl
ja
or
add
cmc
aam
cltd
sbb
pop
leave
andl
inc
dec
inc
xor
cli
xlat
inc
scas
lods
std
repz
fsts
cltd
test
add
jecxz
insb
cmp
pop
shrb
jmp
pop
aaa
je
mov
fsub
stos
xor
into
sbbb
sbb
xor
cmp
movsl
mov
testb
cld
add
addr16
sti
jno
inc
mov
sub
dec
dec
popf
enter
clc
mov
sbb
lods
lahf
mov
aas
cltd
mov
leave
jo
xor
pop
add
add
enter
roll
pop
and
inc
xchg
test
insb
pop
push
push
sub
and
out
mov
mov
int3
loopne
add
mov
sub
aas
add
shll
lock
stc
xor
sbb
and
int3
sbb
xorb
xor
or
loopne
cmp
add
aaa
push
mov
in
js
clc
pop
movups
push
xor
pop
pop
dec
xor
sbb
sbb
fsubs
add
arpl
fs
out
add
dec
or
out
or
mov
in
lock
pop
push
inc
add
cmp
pop
xor
fstpt
mov
addr16
dec
lds
mov
pop
daa
test
stos
xchg
mov
cmp
ds
jle
adc
mov
add
push
sbb
jp
or
sub
pavgb
mov
sub
dec
mov
hlt
cmp
leave
cwtl
shlb
test
push
shr
pop
mov
inc
and
or
mov
fdivl
test
and
cmpsb
movl
cwtl
loopne
mov
add
icebp
or
in
cmp
outsl
add
and
xchg
enter
call
mov
aas
add
icebp
mov
inc
push
pop
rcl
pop
push
cld
repz
nop
jmp
or
fwait
in
fs
pusha
mov
and
adcb
pop
cmp
jmp
mov
icebp
dec
lock
add
in
bound
mov
add
call
jl
shlb
dec
jo
in
je
add
inc
into
sub
or
emms
xlat
movsb
adc
and
push
shl
mov
adc
mov
aaa
das
add
or
into
push
js
adc
jns
xchg
sub
and
add
sbb
xchg
mov
xchg
or
sti
leave
shlb
sub
mov
inc
cmp
push
test
push
cwtl
subb
cli
add
xchg
inc
and
bswap
sub
pop
rolb
jl
cmp
gs
add
adc
push
movsb
inc
mov
xchg
mov
cmp
dec
shll
fwait
pop
or
sahf
adc
jp
mov
lods
test
repnz
or
pop
sub
or
inc
jne
xor
mov
jmp
je
inc
inc
xchg
hlt
add
mov
inc
call
jmp
andb
cmp
pop
icebp
sbb
inc
je
mov
imul
cli
cmpsl
and
fcompl
cli
rolb
movsb
and
dec
insb
and
sub
rcr
bound
or
mov
aad
push
sbb
adc
divb
dec
sbb
fwait
icebp
or
shlb
add
add
sub
mov
adc
movsl
loopne
add
mov
cmpsb
add
in
pop
aaa
push
shl
test
adc
inc
vhsubps
repnz
add
xchg
pop
push
subb
jb
cmp
lret
adc
mov
repz
sbbb
and
xlat
adc
pop
push
out
sti
push
jns
test
popa
int
fimuls
es
mov
subb
movsb
mov
and
adc
sbb
cli
cmp
or
and
mov
add
sbb
add
push
pop
test
xchg
leave
sub
clc
fistpl
lods
inc
int
add
xor
add
add
and
test
jae
je
xchg
movl
dec
adc
outsb
add
rcrb
mov
cmp
inc
int3
inc
pusha
subb
mov
add
mov
push
pop
add
nop
cli
adc
stos
xchg
adc
dec
add
out
nop
stc
icebp
xchg
popa
lret
mov
lcall
clc
pushf
add
push
repz
inc
and
push
fsub
sub
test
pop
in
push
add
loopne
cmpsl
add
out
sub
ds
xlat
xor
mov
call
cmp
ret
loop
aad
xchg
pop
mov
add
test
or
pop
sbb
pushf
rolb
outsb
mov
js
xor
xorb
inc
adcb
icebp
push
mov
add
mov
loopne
fs
xor
add
mov
mov
out
inc
ds
dec
add
sbb
mov
lret
out
jbe
pop
in
fcomip
add
cwtl
mov
push
jb
repz
sbb
add
shrb
or
xchg
jl
arpl
test
loopne
inc
adc
add
nop
in
rcrb
dec
sub
mov
mov
fwait
xor
lahf
pusha
sbb
rcrb
int
popf
scas
xchg
cmp
pusha
cmp
inc
jb
leave
pusha
mov
sbb
sub
cmp
add
pop
add
stos
and
cs
outsl
add
pusha
mov
rolb
in
add
and
push
add
pop
add
and
dec
xor
xor
decl
test
sbb
mov
sub
jb
pop
pop
adc
sahf
fs
mov
sub
arpl
mov
pop
pop
loop
ljmp
push
add
and
xchg
faddl
xchg
adc
sbb
add
adc
xchg
int3
pop
icebp
cmp
and
add
lahf
in
inc
pusha
mov
xor
or
sub
inc
add
ficoms
push
jg
andb
sarb
fldl
mov
out
rolb
int
inc
or
repz
cmp
inc
xor
dec
ficoml
or
add
sub
cwtl
pusha
rcrl
and
adc
test
pop
loopne
ds
adc
jecxz
mov
lds
pop
insb
inc
sbb
sbb
icebp
enter
loope
popa
imul
and
call
mov
sub
xorb
adc
std
cmp
and
fcoms
mov
mov
aad
repnz
test
cmpsb
nop
movsb
sub
ret
mov
imul
and
push
pop
adc
push
add
jl
sub
out
adc
push
and
or
pop
push
pop
sbb
in
jle
jp
cwtl
call
mov
push
cmp
aad
loopne
pop
pushf
sbb
mov
mov
mov
and
cwtl
and
xor
sbb
inc
nop
mov
mov
mov
cmc
jl
nop
ret
inc
cmp
sub
int3
sbb
fcom
mov
pop
and
into
cs
pop
sub
js
mov
sbbb
cmp
push
dec
ficomps
sbb
adcl
mov
sub
inc
bound
std
xchg
and
sub
int
push
repnz
and
mov
push
pushf
inc
mov
pop
popa
adc
mov
jo
adc
push
mov
ljmp
add
push
add
sub
in
adc
xor
mov
loop
pop
pop
into
push
pop
jg
pop
loopne
mov
call
sbb
test
pop
or
pop
int
dec
pop
sahf
stc
movsl
icebp
sub
fnstcw
mov
fs
push
into
fsubl
test
cmp
adcb
pop
cmpsl
aam
cmp
jno
nop
pusha
and
push
sub
jp
sub
fwait
test
add
mov
dec
push
sbb
jg
lods
add
xchg
pop
xchg
cmp
cmpl
cmc
mov
jns
sbb
cmpsl
pop
ficoml
shlb
imul
das
inc
and
adc
in
push
add
mov
clc
inc
subl
xchg
enter
add
sub
mov
in
nop
sub
adc
jo
add
jmp
inc
push
and
add
mov
inc
adc
push
cwtl
stos
xchg
sub
mov
mov
cli
pop
loope
push
xor
mov
out
repz
cmp
xchg
scas
pop
pop
je
testl
and
xor
sbb
and
pmullw
lods
or
sub
inc
or
push
or
in
les
fmuls
sbb
ss
mov
aas
test
xchg
cmp
cs
lret
repz
mov
xor
arpl
add
push
mov
lds
jmp
mov
push
out
cmpl
mov
cmp
mov
and
lret
stos
mov
loopne
subb
dec
push
out
mov
add
movl
das
in
add
cmp
adc
or
faddl
sub
jle
pusha
add
push
sahf
adc
dec
or
add
pop
push
xchg
xchg
inc
sbb
imul
outsl
imul
icebp
dec
testb
jne
hlt
add
pop
xor
into
mov
dec
not
push
repnz
jo
loop
add
pop
jp
or
lret
mov
cmp
cmpsb
insb
add
mov
jl
aad
add
clc
aam
add
testl
cmp
sti
mov
pandn
xchg
je
xor
test
jae
clc
sub
or
cmp
cmpb
ds
outsl
add
dec
es
push
and
adc
daa
mov
ficompl
add
ret
fadd
jbe
pop
int
add
enter
setno
shlb
outsl
stos
in
hlt
mov
sub
jle
out
push
cmp
inc
sub
inc
leave
add
cld
lahf
popa
xor
sub
jns
jge
pop
push
inc
adc
lods
sbb
je
add
jo
mov
or
enter
xchg
lahf
pop
pop
mov
aas
mov
int3
pop
jecxz
sbb
or
fadds
dec
push
and
ds
into
cld
mov
rclb
insl
sub
add
jecxz
adc
add
add
inc
lcall
cmp
daa
jns
and
icebp
dec
stos
mov
psubw
pop
push
or
add
sbb
ds
sub
dec
lock
xor
mov
cmp
push
mov
aam
pop
sahf
das
call
ret
loope
hlt
push
clc
ljmp
cmp
pop
add
out
ret
and
stc
rolb
mov
mov
xchg
sbb
xor
fidivl
in
or
and
call
pop
out
adc
mov
clc
outsb
mov
adc
mov
add
sub
sbb
wbinvd
lret
sub
cmpl
or
push
vmovupd
sbb
push
mov
lahf
pop
sbb
out
sti
xchg
and
or
cmovs
push
jb
adc
scas
cmp
jno
pushf
hlt
mov
xor
mov
arpl
fildl
adc
add
aam
out
cmp
data16
popa
ret
jo
push
cwtl
jns
sbb
add
addb
in
repz
subb
aam
jo
ds
ret
xor
cmovp
pusha
xor
xor
inc
xor
or
jp
cmp
lds
ret
push
repz
jmp
pop
ja
add
xor
and
adc
popa
add
jmp
xor
adc
mov
push
xor
pop
or
cmc
loopne
test
push
fmuls
cmp
cmp
pop
mov
ljmp
dec
adc
cmp
pop
and
std
cmp
pop
mov
sub
jle
nop
sub
ret
mov
mov
out
mov
insb
jl
xor
sbb
fdivrl
call
andb
and
or
popa
mov
rcll
inc
jns
adc
cmpsb
enter
inc
sbb
orb
inc
js
nop
pop
push
mov
lahf
mov
fucom
push
cmpsl
cmp
outsb
push
loopne
sarb
movsb
nop
adc
addr16
adc
add
adc
jno
sbb
add
jl
test
add
and
hlt
or
adc
jmp
dec
ror
add
pop
push
dec
and
add
mov
lret
xchg
sbb
insb
xchg
call
stos
rorl
push
and
xor
repz
cld
cwtl
inc
cmp
out
adc
adc
mov
loop
xor
addl
aam
cltd
sub
dec
sti
adc
add
ficoms
flds
mov
add
test
inc
and
or
js
mov
test
test
jne
shll
add
mov
or
and
in
int3
aad
sbb
lcall
ljmp
inc
push
jl
mov
inc
xchg
add
lea
and
or
pop
inc
iret
add
leave
in
int
jnp
pop
lcall
sarb
and
cltd
push
pop
test
out
sbb
pop
paddb
xor
cli
sub
in
sbb
enter
pop
or
aam
pop
add
int
inc
sti
fldenv
insb
sbb
cmp
or
bound
pop
and
cmp
sbb
push
pop
mov
test
sub
pushf
push
xchg
lods
pop
rolb
lret
pop
fiadds
jno
test
or
ret
sub
mov
and
sbb
ds
sti
lods
push
in
popf
test
and
pusha
pop
dec
sbb
pop
nop
push
jp
das
clc
sbbl
mov
adc
add
enter
aaa
xchg
mov
in
cmpb
fadds
out
repz
mov
les
mov
add
inc
test
adc
push
push
sub
sub
repz
inc
into
dec
gs
hlt
popa
pop
inc
aam
in
insb
cmp
lods
mov
or
xchg
mov
dec
cwtl
pop
sub
adc
pop
enter
jno
dec
lods
pop
test
xor
sbb
push
mov
cmp
cltd
inc
ds
shr
in
pop
mov
repnz
xchg
je
in
and
jbe
inc
or
xor
add
repz
push
mov
xchg
sbb
insb
cmpsl
add
faddl
rcrb
pop
sbb
cmp
orb
adc
cmp
cltd
andb
fildl
insl
sbbb
push
cli
adc
shl
cli
roll
call
aaa
ljmp
xor
sbb
cmpsb
and
icebp
xor
ror
cmp
mov
bnd
mov
cmp
jo
mov
call
leave
pusha
sbb
test
push
out
cmp
sub
and
xchg
mov
movups
scas
sub
dec
cmp
cli
inc
lods
aas
int3
push
arpl
sbb
xchg
fdivrs
xchg
pop
adc
mov
mov
add
mov
mov
cld
jmp
data16
xchg
out
pop
stos
pop
mov
xor
push
or
jae
loope
in
repnz
pop
dec
xor
clc
adc
jl
popf
rolb
stos
mov
aaa
sub
int3
pop
iret
add
mov
cmp
pop
inc
and
cmp
or
xor
bound
and
sub
push
cmp
data16
nop
lods
push
es
sub
mov
push
jns
xchg
pop
pop
add
and
sbb
fbstp
sti
add
or
in
add
data16
mov
icebp
fwait
lahf
cltd
sub
jecxz
mov
insb
orb
mov
in
sbb
into
xchg
jo
jp
add
push
popa
in
pop
mov
test
insb
in
xchg
jnp
fmul
lahf
mov
jmp
dec
inc
movsb
pop
adc
sbbl
mov
shlb
int3
add
mov
push
adc
stos
in
add
mov
sub
mov
aas
push
in
idivb
add
cmp
mov
repnz
inc
sbb
icebp
imul
or
push
nop
pop
cld
outsl
fwait
test
repnz
daa
fstl
incb
jmp
sti
lock
push
ficompl
repnz
ja
add
pushf
add
and
pop
sbb
mov
cmc
jp
lock
sub
cwtl
rcrb
xor
jmp
pop
mov
lock
fcomps
in
add
addl
fimull
pushf
mov
addl
das
inc
push
int3
push
or
ret
test
sbb
mov
xor
mov
enter
pop
mov
push
bnd
add
jns
push
les
in
mov
adc
repz
dec
cmova
fsubl
mov
xchg
pop
popa
loopne
xor
pop
sbb
mov
adc
sub
das
je
add
data16
nop
inc
add
add
roll
mov
push
xchg
pop
orl
pop
cs
dec
push
jno
inc
retw
mov
mov
or
rorb
js
push
ds
pusha
adc
mov
sub
inc
sub
repnz
mov
and
add
aaa
mov
xor
lods
add
sbb
lods
jns
sub
push
shl
pop
xor
sbb
xor
sbb
push
or
pop
adc
addr16
stc
lcall
inc
dec
cmpsb
adc
inc
into
test
sbb
adc
inc
push
cld
jns
cmc
add
iret
in
lock
or
adc
add
mov
in
sub
test
in
adcl
call
into
pusha
and
mov
cli
mov
mov
add
lidtl
dec
fmull
pop
fimull
test
push
and
iret
mov
andl
sbb
adc
mov
add
mov
pop
cmp
xchg
popa
adcb
in
add
push
push
aas
stos
jg
and
mov
add
inc
movsl
cmp
push
lds
mov
or
jnp
pusha
rolb
ljmp
add
dec
jnp
push
and
imul
xchg
adcb
pusha
mov
inc
sahf
mov
jp
popa
and
xchg
pop
mov
nop
add
icebp
mov
jecxz
sbb
xor
xlat
test
cltd
add
pusha
sbb
dec
pushf
imul
and
push
add
pop
and
movsb
dec
divb
js
xor
xchg
mov
mov
jle
add
imul
mov
pop
popa
add
mov
fwait
or
jb
icebp
inc
sub
add
dec
imul
les
scas
outsb
push
orl
stc
in
inc
outsl
test
fucomi
call
testl
dec
push
add
mov
imul
jo
or
pop
lea
and
add
push
cmc
es
les
cmp
or
loopne
or
add
mov
dec
into
test
sub
jo
sti
and
sbb
push
test
sar
rcrl
fstpl
push
fdivrs
adc
jl
xlat
loop
add
insl
andb
cmpsb
enter
aas
inc
add
dec
outsl
cltd
hlt
inc
jge
mov
mov
sub
cmp
mov
jb
orb
movsb
sti
dec
mov
pop
aas
add
rcl
or
cmp
mov
sbbl
inc
pop
sbb
add
mov
fs
ja
addb
rolb
dec
mov
mov
enter
mov
rcr
sbb
adc
jl
dec
add
xor
xchg
popa
test
add
xchg
jbe
bnd
cmp
push
lods
sub
and
jg
mov
mov
sub
or
inc
imul
mov
adc
subl
test
imul
sub
lods
mov
pop
jae
add
gs
out
iret
je
mov
adc
fld1
mov
mov
shrb
or
inc
sub
call
fiaddl
mov
mov
xchg
sub
add
scas
repnz
scas
mov
lds
push
adc
sub
ljmp
cmpsl
xchg
adc
add
test
mov
dec
out
add
ret
or
add
push
add
or
mov
pop
xchg
jne
hlt
imul
bound
and
add
lahf
iret
mov
outsb
mov
jne
loopne
aam
add
loopne
pop
and
and
mov
cmpl
mov
frstor
adc
inc
mov
or
add
pop
xlat
push
test
xchg
add
pop
pop
or
cmp
add
sbb
outsb
cmp
mov
int
sbb
xor
jl
add
scas
sarb
outsl
sub
and
jne
aam
cmc
or
cli
jmp
xchg
pusha
mov
mov
js
xlat
int
lock
pop
cmpsl
dec
lahf
in
and
call
cmpsb
movsl
and
cmpsl
andl
add
jb
shlb
pop
scas
jecxz
loope
pusha
adc
fsubr
add
clc
ss
insb
jle
sbb
cmc
aam
xchg
lods
push
rdtsc
jge
mov
cmp
lahf
rolb
inc
jbe
xor
sub
cmp
in
mov
jae
add
adc
or
jg
cmp
mov
addb
mov
pop
push
cmp
add
sub
xchg
xchg
ja
stc
add
js
xor
pop
xor
sub
xlat
leave
mov
icebp
shr
je
sub
repnz
mov
out
xchg
push
sbb
rcll
pop
leave
fistl
push
pop
add
xor
jno
add
ljmp
sahf
test
inc
xchg
cmp
mov
inc
adc
pushf
nop
add
dec
loopne
and
xorl
xchg
sbb
sbb
xlat
hlt
mov
negl
add
shll
scas
ja
adc
cs
xlat
xchg
mov
stos
push
and
adc
xchg
adc
sub
mov
xor
cmp
imul
mov
sahf
xchg
jno
hlt
add
sbbb
and
mov
xchg
roll
rolb
xchg
add
mov
add
sahf
add
or
cwtl
int3
fimuls
cmpb
xor
dec
fcmovb
mov
sbb
adc
lahf
ds
xchg
loop
outsb
jns
adc
enter
add
mov
mov
sbb
mov
adc
mov
add
in
and
repz
sub
loop
adc
mov
add
scas
cli
test
mov
adc
push
and
pop
add
mov
lods
add
push
fwait
in
pop
orl
aaa
ds
dec
add
test
add
mov
sti
int
push
loope
cmpsb
xor
cwtl
push
xchg
ret
or
sub
xor
pop
cmp
sub
pop
adc
xchg
imul
add
pop
lea
push
nop
insb
add
or
cmp
pmaxsw
fwait
cmpsl
lods
add
loope
jae
add
or
add
add
adc
mov
cltd
push
add
arpl
lock
das
add
push
out
add
add
scas
cmp
cmpb
pop
mov
and
sbb
fs
dec
fmuls
xor
cmp
test
ljmp
add
adc
fdivrs
insl
cmp
in
sub
xchg
xor
je
cmp
nop
push
or
outsb
add
push
ds
mov
loopne
testb
dec
push
rclb
test
jb
clc
out
adc
mov
mov
dec
cld
add
nop
and
inc
or
xchg
and
add
push
jne
xor
dec
insb
cmp
sbbl
add
hlt
jecxz
add
shlb
aaa
jmp
add
scas
mov
test
fldl
add
inc
clc
mov
xchg
cmp
leave
jne
lds
jge
orb
lea
popl
jp
call
adc
cmc
sti
lods
dec
xor
dec
xchg
lret
xorl
push
daa
outsb
and
outsl
push
fidivl
in
xchg
shr
int3
lock
rcrl
stos
jns
cmpb
add
mov
xor
in
inc
dec
mov
adc
ret
jno
sub
pop
int3
add
sub
idivb
mov
sub
or
sub
push
popf
cmp
mov
ret
repz
add
mov
mov
stos
sbb
add
fldl
in
shrb
test
dec
ret
into
nop
cmp
clc
int
shrb
sti
jge
inc
dec
or
mov
popa
cmp
xchg
dec
add
jne
xor
jg
add
outsb
orb
xor
aas
jne
add
fs
and
enter
aad
std
jg
shl
mov
cltd
xchg
nop
fdivrs
fisubs
stos
pop
dec
cmpsl
pusha
mov
inc
add
mov
das
or
rcll
mov
add
mov
aaa
add
mov
adc
sub
fldt
shl
sub
add
arpl
in
xchg
push
fidivrl
xchg
sbb
add
cmpsb
pop
push
test
inc
push
push
mov
outsl
rolb
dec
mov
test
loope
cwtl
add
mov
sarb
pop
fisubl
pop
push
cmp
int3
sub
push
int
lret
mov
stos
mov
or
dec
add
lds
xchg
aaa
test
mov
dec
imul
aam
add
rolb
add
cmp
add
mov
mov
cmp
push
fs
mov
xor
jmp
in
push
pop
hlt
xchg
test
adc
pop
push
sbb
and
sbb
xor
sar
fucomp
mov
cwtl
xchg
add
divb
jnp
and
mov
push
add
xor
std
call
cmp
or
add
cmp
mov
push
mov
in
push
jl
jg
ja
sub
add
or
push
and
shr
cmpsl
or
fstp
lcall
int
sti
lret
fcomps
push
pusha
add
mov
in
enter
fxch
imul
ret
sbb
xchg
adc
arpl
cli
jmp
mov
mov
pop
int3
dec
push
sbb
jne
idivl
sub
outsb
add
xor
cmp
movsl
sub
push
loope
add
loop
add
adc
mov
dec
in
and
pop
dec
mov
pop
jecxz
scas
notl
and
mov
mov
pop
movsb
add
lock
add
pusha
cltd
xchg
mov
clc
lods
add
call
fdivrl
pop
pop
outsb
popf
jbe
adcb
xchg
cmp
or
push
push
dec
add
scas
les
push
xlat
xor
jo
and
fmull
mov
dec
dec
add
add
leave
push
dec
mov
pop
orps
xchg
dec
sbb
mull
pop
add
subl
fistpll
add
xor
aaa
add
sbb
jae
add
mov
ds
cmp
pop
aaa
xchg
aam
xor
mov
cmp
add
rolb
ja
inc
nop
mov
cmp
lock
xchg
xor
inc
mov
cmc
pop
minps
out
add
push
sbb
mov
add
hlt
iret
inc
add
notb
push
mov
xorl
inc
cmp
imul
jmp
sbbb
adc
pop
adc
add
daa
jecxz
inc
cld
ja
add
data16
add
inc
mov
test
cltd
es
adc
hlt
xor
mov
roll
cli
xor
cmp
dec
in
sub
rol
sbb
ficomps
xor
sbb
adc
cmp
cmovns
xchg
lret
and
and
aad
add
pop
xchg
jecxz
cmp
add
mov
in
and
outsb
pop
paddsw
add
add
jle
push
popf
popaw
stc
hlt
add
call
or
cmp
out
add
les
add
dec
inc
movsl
push
cmc
mov
mov
or
add
xchg
test
jmp
mov
sahf
adc
fwait
sbb
inc
shrb
jb
in
ljmp
dec
xchg
push
iret
nop
mov
pop
cmp
outsb
inc
xorl
jecxz
sahf
loopne
xchg
adc
call
adc
mov
cmp
add
jne
divl
and
orb
push
and
mov
hlt
adc
pushf
call
ret
cwtl
add
cld
push
xlat
xchg
shl
mov
sbb
rorb
lea
xor
mov
xor
fsubl
pusha
loope
add
dec
les
enter
inc
js
jmp
mov
push
mov
call
sub
sub
enter
push
fucomip
add
scas
push
xor
in
add
lret
pop
aas
testb
rolb
leave
push
cmc
jbe
add
pop
pop
test
pop
push
adc
rcrb
jb
inc
or
mov
cwtl
nop
shrb
mov
cld
clc
add
xchg
and
cmc
cwtl
cli
xchg
mov
add
dec
add
leave
addr16
andb
mov
push
mov
xor
mov
sahf
subl
jno
in
and
or
js,pn
push
loop
dec
ret
sbb
in
sbb
adc
aaa
mov
movsl
add
in
popf
mov
mov
add
loope
xchg
mov
imul
out
sbb
sbb
pop
in
das
sbb
arpl
js
jp
add
popa
cmp
add
imul
scas
xchg
scas
lods
and
cmp
xchg
mov
jmp
mul
xchg
insl
call
popa
loop
push
int
and
dec
pop
xorb
inc
lds
mov
push
push
sbb
lret
sbb
repnz
movsl
mov
add
imul
jo
rcll
shlb
jp
add
fidivl
loop
lods
sbb
mov
pop
fistl
scas
add
in
add
lahf
add
mov
shrb
out
cmpl
xlat
push
repnz
test
dec
shlb
rcr
pop
add
and
mov
add
add
pop
lret
sti
add
mov
or
loopne
aam
std
andb
pop
aad
incb
ret
adc
mov
dec
nop
add
add
aas
fnstcw
jmp
cmp
pcmpeqw
in
push
add
out
out
sbbb
mov
add
popa
lods
inc
sbbb
add
add
imul
xchg
loop
xchg
test
data16
pop
mov
mov
dec
mov
inc
sub
add
jmp
mov
sbb
add
inc
ds
test
pusha
add
xchg
test
and
lahf
dec
add
xchg
pop
inc
mov
add
aam
sub
add
mov
inc
test
loopne
add
flds
push
push
add
mov
outsb
inc
mov
pushf
sub
das
subl
jg
or
pop
outsl
in
add
int3
jnp
hlt
push
jmp
ja
repz
xchg
mov
mov
sbb
xchg
in
subb
fstl
arpl
fists
rcrl
inc
jbe
inc
pushf
aam
dec
ret
sbb
or
je
push
in
add
lea
outsl
mov
mov
cmpsl
rolb
aas
or
test
cmpsb
fisubrl
imul
dec
iret
push
jmp
and
loope
loopne
jne
aas
adc
and
outsl
adc
mov
fiadds
inc
push
sbb
add
add
inc
ja
push
add
push
lods
fisubl
fwait
sbb
popf
rcl
add
lahf
xchg
adc
shl
jne
add
mov
sarb
mov
push
in
mov
enter
cmpb
imul
sbb
add
int3
lods
ret
push
ss
add
add
rorl
arpl
jae
jmp
mov
add
sub
add
sbb
xor
jmp
add
ret
pop
popf
dec
and
hlt
mov
dec
mov
int
out
add
insb
rcrb
mov
or
sub
xchg
cmp
sahf
int3
mov
ja
scas
rolb
adc
jae
pop
adc
push
rclb
mov
add
or
inc
dec
dec
hlt
scas
cmp
sbb
and
lock
jg
addr16
shlb
loopne
cli
dec
enter
inc
scas
add
ds
push
pop
mov
push
movsl
or
dec
cmp
cmp
mov
xchg
push
roll
enter
cmp
pusha
inc
and
aad
push
clc
lcall
push
add
cmpsb
dec
xchg
xor
push
js
pop
adc
lock
add
add
pushf
push
fucomi
scas
xchg
xchg
add
cmc
aaa
mov
dec
mov
jo
mov
jle
dec
sarl
inc
add
add
mov
aas
add
pop
hlt
leave
xor
add
pop
add
cmpsb
loopne
push
cmpsl
call
or
mov
jp
cli
int3
or
aad
push
aaa
repz
add
and
inc
mov
mov
jg
mov
push
push
lods
movsb
adc
repnz
xlat
add
sbb
je
jl
sti
add
lock
jns
jge
add
add
adc
pop
jl
shrb
add
jne
pop
dec
mov
and
xor
lock
xchg
push
push
lods
mov
and
add
daa
stos
aam
loopne
xchg
dec
add
inc
pop
testb
outsl
cmpsb
nop
push
add
xor
add
sti
test
jg
and
in
pop
dec
add
jo
mov
add
bound
rol
xor
push
sbb
js
das
and
repnz
shll
or
push
ljmp
push
push
imul
and
adc
inc
xchg
lret
jl
fiadds
jne
jmp
das
mov
jae
fsubr
add
sub
jno
push
cmpsb
dec
dec
loopne
or
sbb
into
sub
loope
add
js
mov
inc
mov
aam
mov
mov
push
adc
lock
ret
add
or
loope
stos
pop
add
dec
inc
add
mov
stc
jno
lods
into
push
adc
rcl
and
push
and
push
pop
sbb
call
hlt
inc
icebp
push
dec
popf
out
add
cltd
outsl
mov
sbb
data16
lea
mov
fwait
xchg
add
xchg
sub
add
dec
mov
add
cwtl
jp
pop
fcmovnbe
mov
mov
xor
sub
in
add
jle
sbb
and
dec
je
cs
pusha
out
sahf
lea
pop
xor
mov
inc
test
add
cmp
clc
jo
jno
in
xchg
out
mov
sbb
andl
fwait
adc
sbb
add
inc
add
jae
insl
repnz
gs
add
inc
push
verw
addb
cwtl
sub
andb
pusha
add
add
out
mov
jp
orb
repnz
add
test
insl
js
cmc
jg
outsl
push
push
out
out
daa
mov
push
icebp
adc
jne
add
cli
mov
clts
push
inc
jnp
add
sub
mov
pusha
sarb
cmp
mov
cmpsl
test
pop
add
mov
shrl
fbld
hlt
out
popa
pop
adc
cwtl
jno
add
jnp
cmpsb
fldt
in
jp
add
loope
add
repnz
or
stos
push
or
pop
push
arpl
cltd
mov
ss
mov
bound
addb
inc
ret
cmpsb
sbb
loop
and
shll
lret
pop
jns
nop
add
not
fs
xor
ljmp
jmp
mov
mov
sbb
push
les
mov
imul
mov
mov
add
jne
icebp
add
test
cs
imul
mov
in
orb
jae
jmp
push
icebp
loopne
xor
add
in
test
push
jg
add
sti
mov
out
and
loop
mov
imul
ljmp
add
test
lcall
add
adc
mov
sub
adc
add
mov
dec
add
js
movsl
mov
sub
or
or
add
je
addb
cwtl
mov
sub
push
mov
sub
mov
in
dec
std
adc
inc
fldenv
adc
mov
add
mov
or
dec
push
sbb
and
loope
cmp
jnp
jge
fadds
inc
add
test
mov
and
add
ret
pop
push
add
das
std
push
lock
insb
jl
adc
adc
cs
js
sub
aas
xchg
inc
cs
decb
mov
or
adcb
or
outsb
addr16
inc
jnp
sarb
dec
sub
lock
push
pop
add
jp
xchg
sbb
aad
add
lcall
and
sub
fdivrl
out
ror
xorb
adc
pusha
push
add
fwait
or
add
add
pop
or
cmp
inc
cwtl
lds
js
cmp
add
out
sbb
call
stc
mov
dec
fdivrl
subb
cmp
add
and
ficompl
clc
test
loopne
mov
xor
stos
rolb
test
push
lock
movsl
add
push
push
out
lahf
popa
mov
mov
daa
mov
jle
roll
dec
pop
add
sub
push
add
jb
or
mov
iret
add
fisubrs
add
call
sbb
sbb
movsb
jae
sti
sbb
pop
xchg
add
pop
jge
popf
ljmp
dec
xor
pcmpeqw
xor
loopne
xor
add
mov
inc
jb
adc
sahf
dec
mov
inc
test
dec
xchg
dec
or
pop
fsubs
push
fucom
mov
sarl
xchg
xchg
cmp
mov
bound
loop
jae
in
out
mov
xchg
and
xchg
add
movsb
loope
mov
add
add
test
fisttpl
add
mov
jns
and
jmp
sbbl
cld
jl
dec
push
push
rcrl
jmp
add
outsb
les
es
popf
sub
ud2
add
and
sbb
add
sbb
sarb
cs
js
cmpsl
jmp
cmpsl
pop
cmpsl
and
test
xor
in
sub
subl
and
add
arpl
jb
or
or
xor
stos
push
adc
dec
add
mov
cmp
gs
add
bound
mov
rol
dec
mov
test
outsl
sarb
inc
pop
repnz
mov
hlt
lcall
and
xchg
int3
mov
clc
in
cmp
js
out
sbb
xlat
jbe
add
and
mov
jge
sub
cmpsl
and
scas
pop
jecxz
cmp
jmp
and
enter
je
or
pop
inc
enter
pop
inc
adc
lods
or
inc
add
loopne
sub
add
std
push
push
jae
jle
and
lock
js
pop
xor
aam
or
aaa
test
mov
ja
xor
jno
das
and
xchg
cltd
cmp
sbb
andl
rolb
je
out
in
jns
dec
and
mov
xorb
pusha
add
scas
adc
ret
stc
sarb
jecxz
dec
int3
stos
mov
ljmp
aas
call
mov
addb
sbb
dec
or
add
mov
add
dec
add
in
mov
add
and
cmpsl
cmp
xchg
dec
add
or
sar
out
inc
imul
fstps
sbb
mov
mov
mov
aad
add
test
mov
and
lods
arpl
dec
insb
adcb
mov
fsubs
xchg
std
jle
mov
outsl
in
and
add
push
lods
lds
push
shr
jns
xchg
cwtl
loope
in
adc
jecxz
sbb
cmpsl
jne
cli
or
pushf
orl
mov
cld
sbb
pop
add
xlat
mov
push
mov
pop
out
test
ret
dec
add
mov
or
cmp
and
mov
pop
mov
xor
mov
out
and
rcll
and
lock
js
jae
mov
jbe
push
stos
pop
nop
add
rorl
add
jne
mov
mov
mov
xchg
shll
dec
ret
cmp
scas
inc
mov
pusha
aas
mov
mov
add
pushf
add
je
mov
fcmovnbe
cwtl
pop
cmp
pusha
or
mov
cmp
xchg
out
adc
sub
and
add
add
and
cmpb
scas
daa
mov
mov
fstps
sbb
push
sub
adc
xchg
lods
dec
iret
add
test
shrb
sbb
add
mov
pop
pop
stos
loope
pop
clc
pushf
js
push
xchg
imul
lds
lods
cmp
adc
jmp
add
pop
das
mov
mov
push
les
aaa
pushf
in
add
inc
sub
inc
dec
sbb
add
pusha
sub
out
es
jo
mov
shll
and
data16
dec
popa
jne
sbbl
stos
ret
xor
imul
add
sub
xchg
inc
inc
mov
mov
push
push
stos
jb
scas
xchg
aam
jmp
push
in
add
jae
mov
out
or
ds
add
cmp
movsb
adc
cmp
je
stos
stos
lds
or
sbb
loop
push
cmc
add
cmpsb
out
xlat
int
inc
fadds
sub
jmp
aaa
xor
adc
push
add
or
in
test
sbb
mov
negl
data16
jo
movsb
int
mov
hlt
rorb
push
xor
faddl
sub
cli
sub
push
outsb
jl
out
push
jb
fdivrp
pop
cmpsl
mov
and
rcrb
sub
add
stos
pop
xlat
adc
insl
inc
cltd
dec
adc
jmp
mov
mov
inc
jecxz
fstpl
sbb
cwtl
lds
fwait
pop
outsl
cmp
push
popa
icebp
xor
jno
es
add
lds
or
sbb
rcrl
shlb
int3
repz
inc
test
shr
rclb
or
ss
push
xchg
sbb
ret
ljmp
add
inc
pop
inc
insb
xor
fnstcw
xor
add
xchg
ljmp
add
aaa
es
xchg
and
repnz
inc
int
jg
stc
insb
dec
fs
add
pop
xchg
int3
pusha
sub
bnd
test
imull
mov
and
add
je
push
dec
lds
aas
gs
jo
jo
xor
push
jecxz
fstps
fbstp
cmpb
add
mov
jecxz
mov
sbb
push
add
daa
pop
out
imul
add
push
dec
cs
jmp
js
rolb
outsb
mov
mov
add
mov
popf
push
mov
out
xchg
add
mov
ret
adc
in
fimuls
shll
sbb
cmp
shl
mov
mov
aaa
mov
loop
or
inc
or
sub
mov
cmp
enter
rolb
andb
and
mov
or
outsb
jecxz
ficoms
and
call
pop
add
scas
fwait
or
inc
flds
mov
jl
shll
lea
outsb
mov
test
jno
outsl
out
rolb
xor
pop
dec
xchg
out
sbb
sbb
add
movsb
imul
shlb
lds
and
push
dec
push
mov
pop
add
pop
int
in
lret
int3
ret
sub
punpcklwd
jl
and
test
adc
or
cmp
or
jle
cmp
imul
add
cmc
in
lret
filds
ja
mov
push
adc
pop
jecxz
fnstcw
inc
dec
and
movsb
fwait
jecxz
call
pop
ja
cmp
sbbl
fistl
sbb
in
mov
mov
xlat
add
pop
es
cwtl
sub
rolb
in
bound
mov
xchg
mov
add
xor
xchg
mov
push
sbb
inc
mov
xchg
sub
sti
mov
or
mov
sbb
add
fbstp
addl
rcll
fyl2xp1
cltd
add
mov
enter
dec
iret
add
scas
mov
fnstenv
mov
xchg
mov
in
pop
movsb
subb
cmp
adc
setbe
xchg
pusha
test
rol
jecxz
fnstenv
push
and
scas
mov
cld
adc
add
inc
test
push
push
test
pop
mov
incb
and
int3
add
add
push
movsb
iret
repz
jge
fimuls
or
jle
repnz
pop
sbb
push
fs
ljmp
cmpl
std
xor
jl
icebp
into
sbb
jne
push
jb
xchg
add
rcll
inc
outsl
mov
inc
in
in
inc
add
pusha
dec
aas
in
ds
pop
mov
jno
jb
test
faddp
ds
sbb
or
pusha
imul
pusha
dec
rcl
and
out
inc
clc
rorl
dec
mov
add
das
or
dec
or
rolb
aaa
fmuls
dec
or
inc
ljmp
xchg
sbb
pop
xchg
cmc
sbb
mov
and
rcrb
sarb
lea
cmp
in
inc
cli
add
sbb
bound
call
sub
outsl
add
xlat
xor
lock
push
lock
dec
ljmp
xor
xor
inc
pop
stos
mov
jmp
inc
call
xor
ds
pop
add
test
xchg
and
push
stos
jmp
xor
lahf
pop
stc
scas
or
imul
xor
cmp
pushf
mov
je
stc
fcompl
rorb
aas
jo
or
xchg
pusha
les
pop
add
push
jne
cs
add
popa
lret
icebp
and
and
and
inc
xor
outsl
dec
icebp
jns
cld
inc
movsb
pop
xchg
mull
out
inc
sub
mov
add
sub
cmp
in
adc
cmpsl
adc
sub
or
leave
es
cmp
subb
lcall
les
popf
mov
jne
push
push
xchg
xor
out
ret
lcall
stos
push
push
sbb
jae
sub
mov
inc
testl
lock
xor
lods
mov
or
adc
mov
popf
xor
shll
loop
pop
out
add
jmp
cmpsl
xor
jns
jl
dec
es
adc
adc
adc
enter
push
shlb
jecxz
and
adc
inc
pushf
jecxz
out
enter
inc
sahf
push
push
imul
xor
sub
adc
imul
lcall
cmp
rcrb
pushf
and
or
nop
add
jbe
idivb
mov
lret
or
xchg
push
dec
cld
mov
pop
fdivrs
sbb
ficoml
das
cmc
pop
mov
pop
cs
pushf
adc
sarb
inc
add
cmp
add
pop
push
cmp
insb
and
or
cwtl
mov
xchg
dec
sub
clc
inc
sub
out
loopne
jo
mov
cld
sbb
stos
sub
movsl
lods
cmc
dec
push
add
enter
les
adc
or
dec
push
loopne
iret
icebp
mov
pop
xchg
mov
push
pop
cli
dec
or
sbb
push
pop
rcll
mov
enter
lods
xor
mov
add
repnz
add
pop
mov
std
js
out
lock
jg
mov
or
cmp
lret
or
mov
jp
pop
clc
inc
mov
test
subl
test
mov
stos
pusha
inc
cmp
andb
fs
inc
or
rclb
fbld
movb
dec
adc
mov
push
xchg
lret
pop
enter
lds
test
push
adc
pop
adc
push
xor
xchg
in
push
inc
pop
pop
clc
dec
cvtps2pd
xchg
into
es
nop
addb
rcl
xor
movsb
les
jbe
mov
shrb
mov
add
lds
arpl
outsl
in
or
jno
fistl
orl
movsl
loop
add
adc
sbb
xor
push
inc
int3
cld
adc
pop
xorl
mov
pop
insb
aas
mov
and
repnz
clc
jmp
testl
push
in
je
inc
mov
insb
shrl
je
frstor
xor
mov
xchg
lock
push
int3
mov
outsb
sbb
pop
inc
hlt
js
int3
adc
gs
xchg
and
pop
cs
or
or
add
or
adc
push
jl
pop
aam
dec
neg
fsubs
jmp
out
sbbb
xor
add
or
or
sbb
jecxz
cmp
mov
popf
jecxz
cmp
clc
push
inc
add
enter
inc
nop
push
cmp
out
adcb
das
mov
mov
or
xor
ja
hlt
adc
negl
test
imul
popa
stos
lea
sbb
pop
add
add
lahf
lock
add
dec
mov
call
hlt
aam
sbbl
inc
or
ret
and
add
insl
fs
int3
cs
or
push
inc
enter
ljmp
jnp
fs
xchg
sti
adc
cmp
add
push
out
mov
pop
sbb
sub
mov
ret
adc
sbb
add
push
aad
push
mov
aam
lea
xor
add
fst
enter
jmp
xor
mov
pushl
lret
cmp
stos
dec
faddl
loopne
hlt
pop
lret
mov
adc
pop
mov
and
push
rcrb
test
addb
mov
fadds
inc
mov
sub
outsb
mov
add
popa
xchg
mov
mov
dec
push
cmpsb
dec
mov
leave
cld
repnz
cmp
fsub
add
in
jecxz
addb
stos
sahf
arpl
popa
pop
pusha
test
pop
adc
pop
mov
lock
cmp
jmp
lods
test
add
or
mov
lds
fmuls
test
movsb
int3
std
bound
jns
jns
sbb
jb
add
and
test
test
fwait
sbb
pop
negl
int3
xchg
pop
pop
mov
testl
jne
dec
fstpl
je
pop
adc
add
or
push
sbb
subb
and
xor
mov
dec
push
xor
mov
add
cmp
push
mov
insb
test
scas
inc
fs
and
push
sub
mull
inc
jo
jne
jecxz
das
or
push
repz
insl
arpl
push
jo
cmp
popa
adc
add
pop
sbb
sbb
les
push
mov
hlt
push
mov
push
insl
mov
insl
mov
add
rcll
or
xor
popa
xchg
out
lds
mov
pop
inc
xchg
outsl
jne
mov
mov
jns
pusha
sti
shll
lock
nop
lods
add
inc
lea
add
ja
in
pop
mov
js
lret
jns
ljmp
xor
pop
jo
push
inc
pop
add
mulb
std
pusha
int
dec
add
int3
lock
fadds
insl
ds
repz
in
cmp
ficoms
adc
lret
xor
sub
jp
fcmovne
sbb
pusha
stc
sub
pop
outsb
clc
add
pop
push
xchg
outsl
adc
lds
xchg
inc
inc
jns
arpl
inc
cmpsb
fsubs
mov
ds
adc
pop
mov
jo
sbb
jo
faddl
fnstenv
or
cltd
add
xchg
sbb
mov
adc
dec
rcrb
or
lock
jne
add
gs
mov
aam
dec
sbb
mov
jg
js
sub
fnsave
cmp
pop
adc
inc
mov
pop
xlat
cmp
pusha
shlb
test
add
push
add
roll
iret
in
rolb
jecxz
scas
and
or
cmp
inc
addl
jl
fisubrl
push
pop
fdivrs
fsubrl
jl
sub
jmp
dec
mov
fs
pop
jmp
dec
mov
js
and
pop
shl
add
int3
bound
inc
pop
inc
enter
xchg
push
pop
dec
lcall
adc
cmp
cwtl
pop
into
push
shrl
js
xor
pushf
fisubl
xor
js
sub
jl
icebp
mov
push
sbb
es
push
push
and
aas
add
xlat
addl
add
popf
int3
cmp
inc
dec
insb
xchg
les
pusha
fildll
lcall
add
shlb
int3
les
mov
mov
clc
pushf
js
dec
sub
hlt
sbb
subl
add
cmp
adc
rorl
mov
lds
lods
sbb
es
data16
jae
push
lcall
add
mov
cmc
mov
shlb
popf
add
in
inc
fsub
out
pusha
icebp
repz
add
fsub
pop
mov
and
or
stos
cld
enter
pushf
inc
adc
test
push
mov
in
xlat
dec
in
inc
jo
mov
nop
dec
sbb
jns
sbb
and
insl
jmp
add
and
bound
xor
mov
add
int3
les
pop
adc
add
clc
or
mov
pop
gs
lcall
sub
sbbb
mov
sbb
lock
jb
repz
mov
popf
in
inc
mov
add
movsl
push
or
fldt
pop
push
mov
shlb
push
and
andb
add
lds
repz
pop
or
addr16
push
inc
jno
or
sub
pop
add
jne
outsb
fnstenv
adc
arpl
lock
xor
add
xor
sub
xchg
imul
add
mov
popa
imul
in
xchg
dec
jns
xor
inc
push
or
or
adc
and
movsl
fdivs
cmpsl
mov
push
test
jge
mov
inc
mov
int3
int
icebp
push
lcall
aas
push
in
aas
cwtl
and
cmp
xchg
clc
sbb
inc
ja
xchg
popa
sbbl
pusha
aas
das
pop
jae
mov
div
cmp
xchg
xor
mov
and
rcl
mov
js
push
in
mov
mov
xchg
push
mov
mov
repnz
int3
dec
test
sti
lods
xadd
xchg
sub
in
outsb
mov
or
gs
ret
jmp
mov
push
sub
jnp
sbb
dec
and
hlt
dec
lods
mov
loop
out
lret
ljmp
or
pop
inc
movsb
add
mov
sub
sbb
mov
out
clc
lcall
mov
xchg
sub
sub
mov
xchg
cmp
add
sub
stc
pusha
push
scas
call
sub
repz
dec
test
inc
xor
push
xchg
mov
fcmovbe
test
shrb
sub
mov
sub
fwait
dec
add
divb
pop
pusha
jno
sbb
lret
cmpsl
sbb
test
lods
insb
test
or
popf
sbb
stos
push
popa
sbb
xor
jae
sub
push
or
mov
sub
add
loop
lock
push
and
sub
push
lcall
pop
xrelease
and
dec
cwtl
pop
sub
or
add
and
jecxz
shlb
pop
xchg
test
andl
iret
ljmp
dec
inc
icebp
inc
adc
insb
adc
daa
xor
shlb
push
dec
pop
push
in
mulb
inc
jb
cmp
stos
insl
fs
pop
leave
inc
xchg
test
mov
loop
pop
out
out
push
sbb
clc
and
sbb
int
sbb
jae
int
leave
icebp
or
dec
loopne
fidivrs
data16
dec
notb
cmp
xchg
pop
fcomi
jo
pop
stos
and
and
xchg
mov
in
iret
mov
xorb
dec
dec
into
xor
test
out
daa
add
test
mov
mov
add
scas
pop
or
dec
nop
push
add
jmp
and
mov
inc
or
lcall
add
cli
mov
iret
jno
repnz
insl
fdivrl
add
test
sbb
xchg
inc
stos
mov
pop
dec
cmp
mov
clc
push
test
pop
xchg
sbb
lret
mov
add
add
sbb
xchg
sub
lret
call
fidivrl
mov
sbb
jbe
inc
sbb
mov
enter
bound
add
test
fsts
out
jle
inc
pushf
sub
ficoms
icebp
xor
dec
sub
add
pop
stc
cmp
lds
adc
xor
xchg
shl
stc
dec
insl
shlb
adc
pushf
push
lock
push
and
pop
sbb
sbb
xchg
push
push
inc
mov
iret
inc
inc
aas
dec
mov
scas
mov
and
aam
fs
movsl
daa
icebp
orb
jns
add
mov
jg
stc
cmp
jns
push
add
fcomip
jge
or
sub
in
xchg
daa
pusha
and
cmpsl
or
dec
xchg
cli
pusha
push
in
or
leave
cwtl
out
dec
orb
jecxz
cli
dec
add
sub
mov
mov
add
lds
push
subl
rcr
roll
orl
push
pop
sub
shr
sahf
dec
or
shrl
inc
add
outsb
adc
jl
add
cmp
xchg
push
cs
cltd
data16
pop
out
cmp
cs
adc
add
xchg
xchg
sbb
add
fdiv
mov
fsubrl
jge
lock
call
cmc
mov
push
cmp
dec
rclb
pushf
and
divb
out
add
add
xor
stc
in
clc
pop
or
outsl
jnp
pop
or
or
or
pop
pushf
ret
into
sahf
aam
bound
jae
mov
in
insb
add
or
daa
dec
pop
dec
int
sub
mov
add
lcall
sbb
xbegin
test
orb
das
scas
mov
and
adc
stos
jb
mov
popf
or
cmp
test
enter
dec
cwtl
push
lea
mov
fisubl
or
mov
movb
mov
pop
pop
lock
or
push
icebp
pushf
xchg
dec
adc
add
in
aam
mov
mov
xor
or
cmp
dec
and
mov
sbb
or
push
out
dec
dec
out
mov
xchg
adc
push
hlt
mov
setp
fildl
rorb
xor
les
add
dec
add
dec
jne
dec
sbb
xor
fs
mov
inc
popf
sti
add
mov
mov
push
push
mov
dec
cltd
sub
or
dec
jnp
pop
xchg
cld
sub
loopne
aaa
cmp
cld
xor
mov
dec
sbb
inc
pop
sbb
mov
mov
ss
xchg
add
cmp
jb
sti
dec
rclb
cmp
insb
jns
js
add
rclb
add
lret
cmpl
mov
mov
shr
add
jge
mov
ljmp
ds
and
xchg
in
mov
and
jne
insl
rolb
movsl
iret
and
cmp
mov
push
int
popa
xlat
mov
subb
loope
inc
push
adc
pop
dec
mov
in
cmp
rorl
icebp
lret
inc
loopne
incl
or
pushf
mov
dec
jg
xchg
stos
fmul
fldcw
ja
add
insb
ret
jo
fnstenv
loop
mov
in
je
pop
pop
imul
icebp
jo
cwtl
movsl
add
loope
mov
sar
xchg
inc
and
testb
cmp
dec
pop
push
add
loope
xchg
vaddsubpd
adc
orl
insb
and
sahf
cmp
inc
push
add
and
and
jl
sub
or
dec
bound
dec
add
int3
movsb
adc
add
pop
or
push
fsincos
bound
add
dec
and
jns
add
push
jecxz
aam
fcmovne
addb
pop
adc
addb
push
sbb
mov
or
jno
add
lret
cmp
lock
add
or
push
insl
pusha
bound
daa
addb
icebp
sub
xchg
call
icebp
pop
clc
inc
cmp
add
test
jp
cmp
imul
and
add
fs
leave
icebp
add
lcall
nop
xchg
nop
insb
and
call
pop
jmp
dec
out
incb
idivl
or
jmp
bound
sub
flds
xchg
sbb
ljmp
adc
orb
xor
rcl
sub
cwtl
pop
hlt
inc
push
pop
cmpsb
mov
jno
push
out
hlt
fsubr
sbb
in
movsb
and
add
bound
and
mov
je
lods
fs
mov
sbb
and
les
add
push
mov
or
daa
add
and
dec
cmp
or
mov
ljmp
je
out
mov
pop
rcrb
orb
pusha
out
mov
xchg
xor
sub
xlat
pop
adcl
sub
cmc
fdivl
adc
aam
dec
fsubl
outsb
push
inc
dec
adc
sub
push
call
loopne
loop
add
ret
cli
pop
mov
lds
mov
js
sbb
sbb
mov
pop
mov
add
icebp
or
push
cs
inc
or
fadd
sub
mov
push
and
mov
add
sub
jb
lea
or
push
pop
in
aad
int3
inc
adc
in
pusha
jo
adc
add
insb
push
outsb
jle
sub
mov
inc
sub
sbbb
push
dec
mov
sbb
sbb
int3
add
mov
test
rol
cmp
iret
xor
insb
in
add
sub
mov
faddl
push
jns
les
lock
in
add
jl
push
iret
mov
jbe
lcall
jge
jo
outsb
dec
sub
fcmove
shll
aas
mul
loopne
cwtl
jo
fildll
push
pop
hlt
dec
inc
lock
pop
mov
shlb
jbe
add
in
mov
pushf
int
add
add
and
mov
js
lock
sbb
adc
popf
push
lds
lods
enter
iret
pop
xor
sub
xor
aas
and
adc
loope
jns
dec
shr
xor
sub
icebp
cmp
aas
gs
and
fmull
pop
int3
add
call
imul
add
push
pop
inc
test
add
xor
lahf
insb
popa
and
pop
mov
mov
or
iret
scas
stc
dec
lods
inc
pushf
add
cmc
out
inc
push
adc
add
mov
xchg
data16
mov
or
mov
xor
mov
mov
shl
lock
add
into
jo
push
cmp
add
mov
mov
push
lods
sahf
cmc
mov
addb
movsb
adc
xchg
iret
xor
mov
jecxz
add
in
sub
nop
mov
sub
cmp
dec
push
sub
cmp
adc
repnz
inc
movsl
in
imulb
iret
pop
lds
in
pusha
adc
inc
aad
incb
push
jnp
mov
ds
xchg
jmp
call
out
adc
lds
out
add
fbld
nop
or
ljmp
inc
lret
in
add
xor
mov
mov
and
pop
pop
addr16
add
xor
xchg
insb
ret
pusha
or
or
pop
aaa
lahf
lds
add
pandn
jge
add
or
inc
add
fdivrs
enter
jbe
xchg
sbb
inc
sbb
sbbl
add
call
jmp
xor
pop
scas
pop
xchg
xor
sub
inc
sub
rclb
add
repz
xor
fcmovbe
xor
cmp
sbb
mov
jmp
pop
in
xchg
pop
rol
or
popa
pushf
dec
aas
icebp
or
sub
je
push
mov
jo
sbb
xlat
in
insl
sbb
jb
xchg
adc
and
lds
mov
and
inc
xor
daa
dec
xlat
add
sbb
pusha
mov
add
mov
dec
shrb
push
shl
jl
push
mov
or
adc
xchg
movsb
mov
inc
xchg
xor
mov
call
and
test
push
mov
pop
push
int
mov
lds
addb
cmp
iret
xchg
arpl
push
dec
xor
call
bound
test
and
jmp
pop
lret
jae,pt
or
sbb
pop
add
repz
bound
cmp
sub
dec
cmc
pop
sbb
clc
xor
pop
pop
shlb
add
xlat
xor
repz
mov
aas
xor
mov
push
test
add
inc
push
sbb
clc
adc
pop
call
pop
pop
cmpsb
enter
dec
add
jnp
fiadds
or
into
dec
dec
pop
inc
and
loop
sbb
mov
push
int3
loopne
cmp
pop
push
or
or
push
imull
std
in
xor
sahf
sbb
int
rcll
adc
mov
and
test
sbb
test
mov
mov
rcrl
xchg
dec
push
jnp
cwtl
and
inc
int
or
jne
adc
lock
out
push
and
aaa
shrb
fcmovnbe
loop
inc
sbb
subb
movsl
sub
mov
clc
repz
mov
add
nop
mov
mov
pop
inc
mov
inc
push
dec
ja
cld
out
shll
fwait
pop
sbb
mov
ds
int
lock
cmpsl
stc
and
add
loope
mov
dec
dec
out
inc
xchg
cmp
in
add
dec
jl
jecxz
jl
in
pop
mov
ror
pop
pusha
add
int3
bound
enter
adc
add
in
out
jle
sbb
adc
xor
xlat
sub
dec
or
jb
pop
push
pop
inc
adc
outsb
ss
into
int3
nop
or
mov
pop
or
inc
leave
jbe
dec
adc
mov
push
testl
xchg
movsl
mov
outsb
cmp
dec
and
mov
test
jmp
pop
test
add
shrb
adc
pop
rolb
lods
jne
add
daa
jmp
or
push
punpckldq
aaa
gs
xchg
std
push
adc
ljmp
or
jge
add
sar
sbb
test
data16
push
mov
add
nop
in
adc
hlt
mov
je
lahf
shr
pop
scas
sub
or
movsl
jno
jmp
sub
jl
ds
pop
mov
dec
xchg
mov
jae
push
inc
pusha
add
sbb
out
sub
je
adc
dec
push
mov
or
fstps
js
les
fmull
mov
fidivl
test
xchg
rcrb
add
xor
das
add
mov
xchg
int3
mov
inc
and
jne
or
pusha
pop
cwtl
and
lret
jns
enter
sbb
xchg
cmpb
mov
ret
aam
andb
fs
push
push
or
fldl
push
mov
ret
mov
leave
test
mov
into
and
cwtl
adc
rcrb
int3
dec
cmp
adc
jmp
dec
daa
popf
in
add
movsl
sbb
push
movaps
xor
fdivl
mov
hlt
daa
int3
push
sbb
es
push
cmp
faddl
jno
adc
jns
or
scas
sbb
xchg
and
cltd
mov
add
popa
pop
push
or
loop
inc
in
lods
and
subb
xor
inc
mov
mov
iret
mov
lahf
or
ja
pop
mov
lods
pop
cmp
jl
test
lahf
test
pop
jmp
icebp
adc
push
pop
add
rorl
and
pop
and
push
or
popa
mov
mov
fs
hlt
add
rcl
push
cli
inc
add
ljmp
mov
shlb
roll
dec
iret
xor
stc
cwtl
insl
das
pusha
jl
jne
add
rcr
icebp
lds
jmp
mov
movsb
fs
mov
sub
pushf
daa
iret
cmpsl
cmp
xchg
imul
icebp
sbb
mov
out
add
sub
mov
cwtl
loope
and
and
call
add
test
mov
aad
add
pop
or
mov
jo
test
lcall
push
lock
aaa
cmp
sbb
loopne
lds
mov
das
scas
lcall
mov
add
add
adc
hlt
hlt
lss
pop
push
and
sbb
push
add
push
movsl
inc
jge
and
je,pn
xor
sbb
dec
les
dec
fst
repz
or
sbb
sbb
adc
mov
inc
mov
nop
in
enter
jb
enter
pop
call
mov
xchg
xor
sub
jge
adc
or
xchg
and
cmp
add
sub
cmpsl
bound
filds
sub
inc
popa
adc
and
push
and
mov
cmpsl
dec
mov
sbb
ljmp
push
mov
movd
iret
orl
xor
sbb
and
mov
shr
and
or
push
add
test
pop
dec
cmp
mov
int
shll
es
xlat
push
push
loop
dec
sub
cmpsb
sub
mov
jl
sbb
fmull
add
push
push
xor
aad
add
ficoms
clc
repnz
add
cwtl
leave
mov
mov
repz
add
add
push
mov
sub
mov
lds
addr16
loope
xorl
hlt
push
iret
stc
loopne
pop
add
loop
in
je
outsb
inc
cmp
inc
int3
xlat
ficomps
jl
std
cmp
ds
arpl
mov
inc
sub
adc
jecxz
xchg
inc
jl
push
aas
xor
insb
fsubp
sbb
cmp
add
xor
jl
test
pop
inc
xor
in
mov
aaa
jnp
or
xchg
divb
movl
stc
shlb
xchg
popa
int
out
pop
pop
push
cld
shll
inc
aam
gs
add
xchg
or
nop
sar
andb
insb
jno
mov
adc
mov
fmull
int
or
add
outsb
in
mov
ss
jo
jnp
xlat
dec
cmc
adc
pop
das
cwtl
and
push
outsl
test
lcall
lods
or
test
dec
cld
pop
mov
fsts
pop
dec
xor
sbb
inc
arpl
and
cmpb
inc
push
sbb
cmpsl
or
enter
fmuls
or
add
jge
fwait
rcrb
sub
adcb
sbb
push
cmpb
pusha
popf
dec
sahf
add
jp
test
clc
mov
pushf
loope
pusha
mov
sub
push
inc
xchg
sbb
roll
sbb
outsb
cmp
mov
and
fs
mov
into
push
or
sbb
dec
movsb
mov
inc
pop
push
cwtl
inc
mov
ret
call
and
xchg
fidivs
repnz
and
insb
add
mov
ljmp
lods
add
orb
subl
cmp
xorb
adcb
or
adc
push
mov
inc
jmp
pusha
mov
cmp
mov
int3
gs
add
push
or
lret
jb
enter
iret
fwait
mov
inc
loopne
mov
inc
lods
movsl
ret
add
lods
mov
mov
ret
lock
add
xchg
and
pop
mov
add
je
mov
movsb
push
pop
jno
jp
iret
mov
mov
mov
insb
les
adc
add
fdivp
loope
mov
mov
movsb
insb
add
je
mov
add
lods
rcr
in
cmp
lock
mov
lss
ds
add
push
sub
adc
jnp
adc
fadds
adcl
outsl
imul
xchg
jb
cmp
add
fistps
lret
pusha
enter
mov
adc
xchg
push
add
xchg
pop
add
mov
aas
aas
push
xchg
mov
mov
lea
mov
adc
jns
adc
or
push
fndisi(8087
je
mov
andb
test
jno
out
add
rol
sub
notl
push
in
push
testb
rcrl
mov
and
pushf
ja
data16
inc
fs
lds
adc
mov
int3
fisubs
notl
xlat
push
add
mov
adc
mov
fwait
mov
and
sbbl
and
les
subl
pop
test
pusha
popa
jno
and
adc
add
rol
dec
push
bound
sbb
movb
jns
shlb
adc
fisubl
in
fmull
pop
sbb
mov
xchg
pusha
pop
mov
in
xor
or
aad
mov
leave
test
into
roll
dec
mov
xchg
or
cmc
aas
movsb
iret
imul
call
mov
rolb
imull
fldlg2
or
pop
les
jno
outsl
mov
imul
out
dec
jne
fsubrs
test
xor
sbb
stos
rcrb
cmpb
shll
add
in
add
int
xchg
add
stc
pop
jl
push
test
push
mov
loopne
fsubrl
inc
pusha
xchg
add
xor
or
mov
push
add
add
pop
stc
add
fs
incb
xchg
pop
mov
sub
pusha
loope
out
push
sbb
push
xchg
jo
ficompl
push
std
mov
je
test
popa
mov
mov
adc
push
add
ficomps
xor
rolb
dec
lods
enter
aaa
sub
dec
or
xor
mov
push
pop
mov
or
mov
sbb
push
fsubl
jp
dec
xchg
jo
cmp
pop
mov
mov
mov
xchg
rorb
fmull
in
test
or
mov
test
arpl
xor
jnp
inc
jno
add
inc
iret
dec
daa
inc
mov
xor
mov
mov
xchg
pusha
add
sti
add
xchg
push
mov
mov
or
add
jo
or
xor
pop
outsb
insl
sub
aas
adc
or
add
xor
lret
fwait
adc
jp
fwait
pop
xor
mov
cmp
push
sbb
jo
rorb
and
jmp
xchg
mov
scas
sub
add
cmpsl
cwtl
les
lods
adc
arpl
jns
rclb
adc
pusha
or
lods
andb
pop
mov
cld
les
pop
add
fwait
xchg
mov
mov
mov
bound
rolb
adc
call
push
test
mov
cmpsl
add
mov
insb
dec
or
xor
mov
daa
clc
fcmovbe
push
push
mov
pop
ljmp
in
mov
xchg
xor
fildl
cmp
xor
and
push
mov
sahf
mov
loop
and
into
std
add
jae
ljmp
mov
mov
adc
ret
pushf
mov
pop
mov
cmp
push
push
outsb
test
and
mov
inc
pop
xor
xor
mov
sbb
frstor
mov
xchg
sub
inc
adc
mov
test
mov
inc
mov
xchg
mov
cmp
and
lock
lods
leave
xor
mov
pop
cmpsl
lcall
test
add
loop
cmp
xchg
pusha
fs
ja
ret
movl
lret
sbb
je
add
popf
mov
cwtl
outsl
cmp
repnz
nop
and
cmp
cltd
add
dec
ljmp
imul
call
inc
xor
sub
jbe
adc
divb
cmp
and
push
sub
xchg
clc
sbbl
add
int3
out
dec
mov
adc
gs
sbb
add
sti
mov
ljmp
in
lods
mov
scas
adc
aas
outsl
in
inc
mov
pextrw
push
nop
aam
adc
out
fs
out
jp
jge
sbb
les
insl
out
fsubs
jae
add
cmp
insl
out
push
sub
sbb
jo
add
cmp
imul
aad
cli
xor
xor
rol
in
adc
jmp
add
jae
add
test
icebp
and
cmp
inc
add
pop
pop
outsl
add
dec
outsb
pop
cmp
ss
pusha
or
cmp
mov
inc
or
and
pusha
in
subb
pushf
mov
add
sub
nop
popa
push
push
jae
pop
add
dec
xor
pop
bound
mov
inc
out
nop
nop
add
cld
sahf
imul
sub
push
or
aaa
adc
add
xchg
pop
xlat
out
xor
xchg
loopne
xchg
adc
xor
add
add
insb
repnz
xor
or
and
inc
pop
xor
xchg
sub
jo
dec
xchg
add
mov
inc
je
add
ds
stc
xchg
sbbb
mov
insl
cmc
jbe
arpl
pop
push
pop
nop
faddl
faddl
and
sub
dec
inc
adc
test
icebp
xchg
dec
mov
jmp
inc
or
fsts
inc
sbb
push
cmp
dec
popf
aam
outsb
jno
outsl
jnp
inc
clc
mov
mov
add
call
adc
xor
pop
in
push
push
shl
movsl
mov
xor
bound
aam
pop
pop
xchg
mov
xchg
pushf
cmp
enter
aas
inc
mov
jecxz
rclb
arpl
les
into
mov
imul
cmp
add
out
add
jns
test
or
faddl
jnp
ss
in
jb
add
sbb
push
mov
leave
outsl
aad
fmul
xor
int3
dec
and
mov
cmp
mov
add
in
enter
or
xor
popa
test
pusha
lock
das
js
adc
fsub
aad
push
hlt
adc
push
push
inc
or
or
call
movsb
or
cmp
addl
repnz
test
add
sub
cmp
cmp
adcb
add
xchg
mov
xchg
or
sub
sub
push
hlt
jecxz
add
mov
pop
mov
xor
inc
test
add
mov
add
roll
rorl
adc
jp
sbb
test
mov
ja
repz
lds
mov
push
mov
int3
mov
out
es
ja
xor
imul
rclb
clc
dec
sub
add
ds
test
xor
pop
insl
and
shrl
in
push
scas
or
adc
xor
inc
jge
xor
test
je
add
pop
add
mov
insb
aaa
or
xor
decl
aaa
jnp
inc
dec
js
add
fcom
fs
adc
test
add
pop
sbb
mov
mov
pop
adc
or
call
test
dec
aad
imul
add
mov
sub
cmpsl
pop
je
test
cmp
jle
xchg
xor
mov
or
or
mov
hlt
in
pusha
out
cltd
mov
lds
push
jo
add
jbe
push
push
cltd
jle
arpl
mov
out
cmp
pushf
cs
movsb
jle
scas
add
cmp
fidivrl
into
ret
xchg
xor
push
pop
aas
test
sarb
add
sub
and
in
cmp
mov
push
lea
xchg
add
inc
fstpt
jp
add
mov
push
mov
add
mov
hlt
add
lcall
or
in
out
cmp
rorb
loop
fisubl
stos
out
and
scas
bound
push
pushf
stc
sub
clc
pusha
mov
in
jecxz
fistpl
mov
loopne
inc
adc
jbe
mov
outsl
and
add
notl
sbb
jo
add
ds
jo
mov
xor
into
xchg
enter
xor
add
repnz
xchg
movsb
push
pop
mov
loopne
and
test
lods
pop
insb
jecxz
adc
push
test
mov
ds
cmp
add
sub
js
rorb
mov
add
pusha
jns
sbb
out
mov
push
add
and
cmp
in
inc
mov
fisubs
mov
sub
push
sbb
call
sub
xor
loope
aas
ret
movsb
jo
mov
and
fdivrs
dec
mov
add
fdivrl
lods
dec
xlat
loopne
pusha
add
xchg
nop
cld
ljmp
sbb
inc
add
inc
stos
into
or
test
fcoms
les
outsl
lods
loopne
jno
mov
outsl
faddp
xor
aas
push
daa
mov
popf
fcoml
mov
pop
add
and
test
push
insl
or
test
aaa
add
insb
xchg
xor
push
mov
add
ljmp
inc
add
xor
xor
push
imul
sub
syscall
dec
movsl
add
out
push
out
sti
xor
dec
jns
and
mov
add
xchg
int3
or
repz
mov
xlat
and
lds
mov
shr
pop
add
loope
cmp
je
add
scas
mov
xor
stos
or
sahf
inc
xor
push
icebp
add
xor
mov
int3
or
and
push
in
xorl
add
dec
int
cmp
mov
sbb
mov
and
sahf
mov
fcmovnu
ds
mov
xlat
mov
jae
push
push
and
into
bound
and
push
or
fnstsw
lock
mov
inc
or
ja
xchg
into
lods
push
jne
mov
jl
mov
mov
pusha
fmul
or
clc
inc
inc
sub
shll
in
cwtl
call
sbb
dec
shrb
rolb
in
fnstenv
aas
cmp
ret
daa
std
shlb
jns
pushw
inc
es
jg
or
and
jns
and
add
sbb
cld
push
sbb
mov
lea
inc
mov
sub
es
stos
nop
into
subl
jae
and
or
jg
or
xchg
push
ret
or
pop
mov
dec
dec
or
inc
inc
xor
xor
mov
mov
pusha
mov
enter
push
fmull
add
add
int
loope
fdivs
pop
daa
lock
sbb
gs
xchg
sub
xchg
inc
loope
incl
bound
outsl
pusha
hlt
repz
push
sbb
int3
and
push
andb
into
hlt
ret
jp
mov
adc
xchg
xor
lock
xchg
data16
cmp
jmp
imul
lret
fsubs
fcmovb
enter
dec
call
mov
sbb
int
das
dec
or
movsl
mov
addr16
push
cmpsb
jl
push
and
fldcw
mov
sbb
mov
ja
mov
or
adc
aam
inc
adc
inc
in
stos
xchg
push
les
mov
or
add
fildl
xchg
pop
sub
cmp
add
out
mov
sub
fs
lcall
repnz
lahf
inc
push
jmp
es
daa
cmpsb
enter
add
xor
xor
orb
fadd
cld
xchg
lret
sbb
or
je
inc
sbb
hlt
call
pop
mov
xchg
inc
jecxz
cltd
cwtl
xchg
lahf
xchg
push
jb
mov
and
add
in
xchg
jmp
test
add
cmc
dec
add
lods
sbb
shrl
mov
hlt
pusha
inc
mov
adc
cmp
jns
pusha
and
add
sub
popa
pusha
xor
nop
or
cwtl
push
mov
cli
or
and
imul
mov
mov
push
jae
lock
push
xor
sbb
add
aam
inc
ss
inc
adc
aas
rcr
xlat
jmp
pusha
sbb
pop
add
jbe
sar
lret
popa
add
xor
mov
aas
and
lcall
xchg
outsl
sbbb
mov
mov
enter
or
cmovns
addb
mov
mov
add
inc
or
xor
jl,pt
add
xchg
call
cmp
seto
leave
mov
cmp
jle
xchg
imul
aas
inc
jns
jge
add
stos
jle
and
loop
les
sbb
inc
mov
pushf
icebp
mov
add
dec
dec
sarl
inc
xor
pop
inc
mov
andb
add
xchg
mov
icebp
mov
inc
add
cmpsb
ret
and
sub
mov
and
in
hlt
inc
fisubl
inc
add
hlt
std
fcomps
push
mov
pop
sbb
push
rorb
mov
adc
inc
sbb
ret
lods
add
imul
lock
add
jo
call
in
push
lahf
addr16
xchg
adc
and
hlt
icebp
les
xor
inc
bound
sbb
and
gs
add
push
pop
cmp
xchg
pop
push
cmp
and
add
or
or
les
push
or
adc
jae
negb
call
mov
and
mov
in
dec
aad
sbb
add
movsb
clc
cltd
aas
ret
push
sbb
inc
das
and
lods
pop
cmp
cmpb
mov
js
and
push
dec
imul
cwtl
shll
sarb
fldt
mov
cwtl
ja
inc
inc
pusha
sub
add
bound
lahf
iret
cwtl
pop
cmc
data16
ret
in
adc
inc
and
cmp
and
xlat
rol
cltd
mov
inc
cmp
call
jg
sbb
cmp
inc
or
add
popa
bound
icebp
call
mov
es
inc
adc
hlt
lcall
mov
call
mov
mov
add
and
mov
xorb
xor
icebp
sbb
mov
ret
inc
leave
subb
sub
js
jns
data16
repz
and
in
lods
sbb
insl
xor
and
xchg
push
hlt
mov
xchg
data16
hlt
adc
inc
jns
pop
push
mov
je
or
mov
loopne
fmull
or
inc
fidivrs
pop
mov
loope
stos
push
jno
icebp
outsb
test
data16
xchg
iret
and
dec
in
adc
add
arpl
push
repz
mov
xor
int
mov
push
sub
dec
xorb
xchg
xchg
arpl
sbb
add
cli
jns
xlat
adc
add
in
loopne
loop
neg
ret
mov
enter
push
adc
scas
out
mov
push
jb
push
cmp
jbe
and
rclb
pop
add
pop
repnz
js
sbb
addr16
insb
shr
xor
mov
das
push
adc
jnp
sti
inc
movsb
mov
dec
add
inc
lcall
outsl
ljmp
sets
frstor
xor
cmp
iret
xchg
fwait
xchg
cmovge
out
pusha
jae
sub
mov
dec
adc
or
jns
pop
pop
push
mov
jo
add
xchg
stc
jmp
or
adc
sbb
addr16
ret
lock
push
jbe
inc
pop
orl
sbb
les
pop
push
xor
push
nop
jle
sbb
and
jg
mov
mov
xor
enter
mov
add
aad
or
xor
jb
push
nop
fnstcw
bound
add
outsb
aam
sub
fdivrl
xchg
cmp
or
rclb
push
movsb
mov
inc
icebp
add
mov
push
inc
addr16
add
daa
pop
aaa
or
fs
adc
xchg
call
lock
enter
push
inc
mov
sub
lea
cmp
push
xchg
xor
adc
fdivrs
or
inc
inc
into
insb
sub
xchg
mov
pop
add
mov
rorb
add
dec
insb
add
xor
cmc
jl
sahf
adc
inc
aas
movb
mov
sarb
les
rorl
jp
addr16
lock
xchg
add
inc
insb
fs
mov
or
xchg
insb
add
sbb
mov
or
add
data16
mov
lea
pop
xor
dec
add
adc
add
inc
sbb
xor
inc
push
add
pop
mov
inc
add
clc
push
shlb
and
add
aad
je
jne
test
jno
bswap
and
cmpb
mov
pop
inc
add
and
add
test
xchg
jg
sbbl
mov
jnp
insb
cld
hlt
adc
add
inc
icebp
insl
pop
sbb
insb
adc
inc
sarb
xor
inc
enter
xor
push
sbb
dec
dec
xchg
mov
hlt
add
adc
or
dec
add
inc
pop
inc
ds
xlat
icebp
add
out
insb
lods
or
inc
mov
add
icebp
xor
mov
mov
popf
fisubrl
loopne
cld
sbb
fldenv
pop
cmpsb
mov
mov
mov
jg
filds
lahf
data16
lock
shl
or
hlt
adc
les
lret
or
iret
hlt
shll
adc
dec
imul
mov
jmp
mov
xchg
adc
dec
adc
cmp
fwait
clc
push
and
xor
les
inc
mov
add
inc
xor
sub
xchg
jne
add
mov
add
shr
mov
jnp
or
jmp
clc
addr16
xor
test
clc
out
dec
sbb
sbb
sbb
cmc
pop
int3
bound
pop
andl
or
lods
sbb
and
xchg
movsb
or
dec
sub
sbb
sub
mov
xor
clc
xor
bound
shl
scas
lret
loopne
lods
or
or
mov
fs
pusha
push
push
shrl
lods
stos
pop
add
push
idiv
icebp
je
icebp
sbb
ret
lods
fs
sub
andb
cmp
add
push
sti
lods
jo
jp
mov
lods
push
adc
adc
mov
lea
inc
sbb
imul
jg
and
les
mov
leave
rcrl
jmp
decl
and
andb
xchg
mov
and
mov
xor
in
mov
fs
adc
jmp
add
repz
add
push
testb
pusha
xlat
pushf
loopne
les
adc
pop
arpl
dec
sbb
lods
dec
loopne
cmp
pop
sub
lds
sbb
xchg
and
sbb
add
outsl
pop
inc
sub
fidivs
push
int3
jmp
pop
cmc
rcll
add
call
outsl
sarl
das
mov
push
cmp
sub
sarb
or
inc
pop
jp
shufps
mov
add
sti
push
sbb
xchg
xchg
shl
shll
enter
data16
pop
out
push
mov
out
jp
cmp
pop
icebp
test
inc
mov
cmp
and
sub
enter
mov
sbb
nop
js
stos
pop
or
dec
fs
int3
pop
xchg
std
push
hlt
sub
daa
sbb
popl
cwtl
jmp
sbb
lods
add
jne
in
jle
jmp
mov
cmpb
and
push
add
insl
xchg
addb
es
pushf
arpl
push
call
xchg
or
add
xor
xchg
lods
cli
lret
nop
faddl
ficomps
cli
mov
mov
shll
sbb
add
jl
and
icebp
jo
mov
sbb
mov
insb
repz
push
rol
andb
adc
test
mov
push
pop
push
sahf
ljmp
mov
sbbb
sub
shrl
mov
xor
jg
push
hlt
mov
add
cmpsl
jne
sbb
fcoml
or
rolb
adc
or
fadds
xchg
inc
arpl
subb
xlat
and
xor
hlt
push
je
ficompl
shr
enter
gs
and
push
cld
cld
add
stos
pop
or
imul
or
aas
dec
fxch
inc
decb
ljmp
xchg
pop
repz
mov
mov
cld
js
jle
pop
nop
inc
cmc
xchg
orb
cmpsb
add
dec
lahf
push
bound
mov
and
out
adc
mov
outsb
inc
push
out
jb
add
lock
lahf
inc
stc
sbb
sbb
nop
decb
mov
jp
add
add
dec
subb
popl
xchg
call
inc
clc
mov
adc
andb
cmp
shlb
xlat
fs
adc
mov
add
jl
iret
scas
fs
pop
mov
mov
inc
sub
cltd
or
inc
prefetch
or
dec
or
fwait
adc
cs
fldcw
push
mov
inc
add
cmp
push
lea
cmp
shrb
cwtl
divb
pop
mov
jmp
js
xchg
mov
lahf
das
test
mov
xchg
mov
sbb
aam
test
out
in
or
sub
mov
dec
test
cmp
xchg
in
insl
insb
jecxz
add
arpl
lods
pop
xchg
test
sarb
sub
and
lock
xor
jne
call
inc
mov
xor
fisubrs
and
cwtl
lods
sahf
sbb
push
add
xor
inc
arpl
rolb
add
in
xlat
pop
ja
in
insl
lods
cmp
push
lock
push
sbb
loopne
or
mov
mov
inc
ljmp
pop
pop
scas
sbb
test
scas
mov
in
xchg
add
hlt
add
push
inc
repnz
pop
gs
dec
dec
mov
adc
lret
call
mov
clc
xchg
mov
cmp
sbb
fs
mov
mov
or
and
shrl
icebp
push
add
adc
pop
loopne
call
inc
and
andl
outsl
adc
cmp
pop
and
xorb
xchg
in
inc
adc
sbb
mov
in
or
mov
and
lods
adc
pop
daa
mov
fbld
stos
dec
or
test
sahf
rol
jne
pop
xor
adc
mov
in
ds
mov
and
aaa
adc
xchg
dec
mov
lods
adc
lock
cmpb
xor
push
fnsave
repz
mov
xor
mov
lods
jle
jae
mov
add
lret
push
dec
jb
call
cli
push
sub
fwait
daa
xchg
bound
dec
lcall
pop
and
pop
hlt
loope
nop
cmp
mov
add
dec
adc
jmp
push
sbb
add
adc
ja
mov
test
lods
xchg
pop
and
imul
pushf
adc
lock
mov
or
inc
xor
imul
leave
sub
xchg
aam
in
inc
mov
cs
cmp
add
shl
push
add
jl
outsb
in
jle
loopne
and
add
mov
sbb
ss
add
fistpll
add
outsb
je
jl
cmp
adc
inc
test
popa
test
pop
pusha
ss
add
orl
pop
cmp
js
pop
iret
js
dec
movsb
or
orb
lods
jp
and
shrl
hlt
mov
adc
add
fimuls
and
in
pusha
arpl
add
or
xchg
sub
movsb
je
xor
pop
pop
add
push
add
xchg
sarl
add
cltd
jns
addr16
mov
orb
pop
push
jge
sub
and
shlb
lods
sbb
adc
add
cli
pop
pop
and
stc
push
fldl
push
xchg
repz
bound
push
lahf
xadd
jmp
jge
adc
add
mov
pop
inc
or
cltd
stos
or
mov
inc
repz
jo
jnp
mov
lock
push
or
sub
push
add
sbb
sbb
shlb
cmp
ss
adc
aad
lock
jg
xchg
ret
and
add
and
mov
sahf
or
inc
fwait
lahf
pop
xchg
xchg
pop
xchg
out
nopl
add
into
mov
outsl
or
push
mov
adcb
push
sbb
test
loope
push
pop
imul
rorb
ret
es
lahf
js
cmp
adc
push
cmp
das
imul
or
mov
pusha
or
jecxz
out
scas
or
imul
pop
add
dec
mov
cmp
in
xlat
xor
xor
pop
add
push
flds
xchg
inc
xor
add
xchg
js
adc
in
rolb
push
call
mov
fprem
xchg
js
les
hlt
stos
scas
movsw
imul
inc
push
lock
cmp
add
xor
xchg
rclb
adc
sub
mov
cli
adc
sbb
addr16
hlt
mov
outsl
dec
xlat
sbbl
or
je
ror
add
inc
mov
and
inc
adc
pop
pop
mov
lock
pop
mov
or
inc
scas
icebp
movsb
add
fcmovnu
push
movsb
push
loopne
add
xchg
std
in
pusha
sub
add
ucomiss
pushf
sub
inc
daa
and
test
inc
int
shrb
xor
or
sbb
in
cmp
shrb
incb
loop
hlt
xor
jmp
or
inc
jl
sbb
cmpsb
mov
iret
mov
add
sarb
cs
pushf
cltd
mov
add
in
mov
test
cmp
mov
scas
inc
dec
push
iret
push
or
cmp
or
cmp
jo
push
mov
sub
mov
jbe
cmp
dec
out
test
xlat
imul
and
xor
leave
fisubrs
sub
mov
lods
mov
inc
leave
outsl
cmp
test
mov
add
sbb
or
xchg
and
ficompl
cmp
lcall
inc
and
adc
cmpsb
inc
lea
es
call
cwtl
pop
mov
arpl
add
enter
ror
push
add
repz
push
inc
xchg
dec
xchg
pop
adc
orb
cmc
pusha
mov
outsl
dec
scas
mov
sbb
fprem
sbb
adc
and
test
pop
cld
popf
mov
repnz
pop
sbb
mov
mov
xor
xor
xor
shrb
imul
and
and
mov
add
add
out
sbb
and
pop
shlb
inc
adc
pavgb
xchg
push
add
jae
cmp
pop
nop
mov
xor
mov
jne
loopne
or
cmp
cwtl
data16
sbb
outsl
xor
fwait
sub
inc
pop
cmp
jmp
xor
arpl
mov
dec
dec
cmp
scas
sub
xchg
jle
lods
xor
xchg
aaa
dec
xchg
mov
aas
rcl
inc
fildl
icebp
jae
ret
sbb
cs
mov
rolb
sbb
mov
inc
pushw
xchg
loopne
add
stos
daa
xor
iret
mov
sub
mov
sbb
push
cwtl
neg
xchg
mov
xchg
lock
jmp
cmp
or
mov
out
test
sub
fists
xlat
mov
cmp
xorb
insb
arpl
fiaddl
addb
jbe
xchg
jl
cmp
add
xor
pop
mov
sbb
pop
mov
shlb
xor
lds
sbb
pop
inc
xchg
mov
repnz
mov
subl
dec
pusha
mov
rorb
dec
mov
clc
sbb
mov
xor
inc
or
decl
jl
dec
cmp
into
aaa
adc
addb
mov
mov
enter
fldenv
sub
sbb
or
xor
mov
pushf
mov
int3
call
inc
lock
xchg
mov
mov
bound
add
sub
fdivrs
cmc
test
add
dec
jb
fs
adcb
sbb
add
ficompl
dec
push
call
js
xchg
popf
cld
les
ljmp
jle
test
scas
add
sub
adc
and
ljmp
mov
push
rorb
call
sub
addr16
cli
push
mov
xor
dec
mov
pop
push
int
dec
mov
adc
jb
adc
clc
pop
in
mov
xor
fadd
movsb
dec
repnz
add
and
scas
dec
test
push
sar
xor
pop
mov
and
arpl
push
sub
dec
xor
stos
inc
adc
jns
je
fsubrs
lock
and
fcmovu
push
ror
cld
arpl
mov
cmp
adc
pusha
sub
pop
add
adc
jl
or
mov
shll
push
sub
mov
aam
mov
inc
stos
jnp
add
add
adc
pop
icebp
lods
jp
arpl
fistl
add
xchg
ret
sub
add
sbb
dec
jbe
lock
cs
mov
imul
add
out
fisttpl
add
lcall
mov
mov
ret
call
roll
pop
imul
and
dec
fwait
inc
pop
jmp
ljmp
fsubs
insl
cmpb
ret
add
mov
and
cmc
out
lods
cld
fdivrl
int
or
inc
and
fsubrl
mov
mov
addr16
sbb
sbb
lods
sbb
adc
or
insl
mov
cltd
sbb
add
xchg
addl
sbb
cli
and
pop
pushf
addb
inc
popa
add
pusha
arpl
push
sbb
orb
divb
lods
jle
jecxz
push
insb
andb
sbb
mov
test
lcall
stc
mov
insb
xchg
or
mov
bnd
mov
lds
repnz
sub
adc
cltd
lods
pop
cld
out
daa
xor
pop
cmpsl
push
fcoms
bswap
pop
pop
out
and
lahf
inc
sub
add
js
shll
sub
sbbb
inc
mov
xchg
in
add
add
mov
repnz
out
mov
pop
adc
std
or
rolb
sub
jne
and
fsub
addl
inc
test
ret
repnz
shrl
inc
or
lcall
jg
xor
push
xor
aas
or
sub
jmp
sti
cwtl
sti
lahf
jge
adc
in
std
cli
xor
push
pop
mov
push
xchg
push
mov
cli
pop
inc
jne
mov
adc
and
fdiv
add
out
mov
and
cmp
cmpb
push
push
push
xor
mov
pop
pusha
mov
out
adc
inc
and
sub
dec
pusha
dec
addr16
pop
mov
pop
lock
mov
jmp
loopne
and
jo
cmpsl
lock
dec
cltd
cmp
xchg
ljmp
mov
pop
mov
adc
aam
int
inc
ljmp
outsb
outsb
mov
mov
je
mov
add
rcrb
pop
push
in
or
lods
jae
jo
sub
shlb
or
mov
xchg
or
fidivrl
mov
arpl
adc
sub
push
mov
js
xor
sbb
roll
push
xor
mov
mov
dec
das
and
ss
stc
loopne
setns
inc
adc
push
orb
adcb
mov
add
cmc
inc
sahf
arpl
push
add
mov
aad
and
pop
push
push
ror
pop
or
stc
sbb
call
add
out
lret
jbe
add
int
sbb
add
xchg
das
inc
and
add
and
sbb
pop
dec
mov
enter
loope
sbb
jge
xchg
xchg
mov
mov
sti
adcb
pop
mov
or
repnz
mov
mov
inc
mov
ficompl
lock
in
rol
sbb
insb
aam
test
mov
add
lahf
test
shll
or
cwtl
imul
adc
mov
lock
mov
scas
das
push
and
rcl
adc
nop
es
push
mov
mov
sub
add
cmovb
sub
push
aaa
or
pop
dec
mov
outsl
add
lret
ljmp
jle
adc
test
mov
addr16
sbbb
pop
lods
pop
dec
push
adc
add
or
iret
jle
inc
clc
push
mov
sub
xchg
insl
jl
mov
sbb
add
jnp
mov
imul
loopne
xchg
cwtl
imul
out
les
mov
mov
pop
mov
sub
xor
mov
jo
or
shll
sub
add
jmp
popa
jae
mov
xorb
lock
adc
movzbl
sub
mov
xchg
mov
dec
lret
pusha
cmc
fldt
movzwl
add
shr
add
mul
push
insl
lock
repnz
test
pop
shr
sub
call
jg
shll
sbb
xor
int3
std
daa
in
mov
pop
movswl
fldl
mov
inc
pop
je
add
fldcw
movsl
xchg
cld
mov
sti
mov
mov
outsl
jno
daa
add
in
add
add
sub
mov
repz
repnz
ljmp
jbe
mov
insl
sub
inc
cmp
mov
push
roll
cmpsl
das
adc
or
pop
je
dec
cmp
jb
or
xlat
cmp
push
arpl
sbb
outsb
push
icebp
cmp
mov
sub
cmp
repnz
push
lods
sub
jmp
or
int3
adc
push
loop
dec
pop
add
push
xor
inc
pop
mov
leave
sarb
pop
insb
in
into
xchg
int
pusha
sbb
adc
test
pop
notl
mov
dec
insb
loopne
mov
int
jnp
jecxz
pushf
nop
inc
ljmp
push
aam
cmpl
mov
xchg
andb
dec
or
lea
adc
mov
and
cmpsb
and
ficoms
mov
pop
lret
lock
mov
dec
outsb
sub
mov
add
xor
and
adc
pop
push
scas
dec
in
arpl
jns
cwtl
dec
add
jp
push
nop
dec
orl
out
outsl
xor
daa
adc
pushl
inc
lret
add
hlt
rcrb
cmp
dec
pop
call
xchg
pusha
call
imul
call
push
or
mov
add
xor
mov
sbb
add
loopne
pop
mov
popf
subl
mov
inc
mov
inc
mov
xor
movsl
push
cltd
out
sub
jmp
mov
roll
cwtl
popa
jmp
pop
or
rcrl
loope
pop
lea
inc
push
add
xchg
push
cwtl
loop
test
addb
or
jbe
in
vmaxss
mov
mov
pop
jb
mov
das
push
movsl
or
adc
adc
pop
mov
rclb
mov
div
imul
inc
or
jbe
mov
cmpsl
cmp
or
sahf
add
jg
jb
jmp
mov
sbb
shr
adc
jmp
aaa
xor
stos
and
ds
or
add
add
test
cmp
shll
sbb
jnp
fidivs
xor
adcb
xchg
out
xor
adc
mov
xor
pop
lea
xchg
arpl
sbb
add
mov
mov
or
sub
jns
jp
insb
rcll
mov
shll
popa
nop
aam
mov
iret
push
popf
or
cmpsb
jp
xor
push
sub
xchg
jge
pushl
push
mov
imul
inc
dec
lea
jb
jecxz
push
repz
sub
movsl
popf
cmp
sub
mov
rorl
add
push
and
fidivl
jle
push
push
cmp
test
fcmovnb
pop
popf
cs
lea
js
out
bound
sub
fs
add
pop
fldt
cmp
mov
adc
mov
shlb
cs
aaa
lock
add
lahf
imul
add
nop
dec
cmp
and
pop
push
sbb
test
xor
dec
push
clc
inc
jo
lea
pop
push
adc
or
pusha
mov
pop
popa
andl
test
popf
and
mov
cltd
aad
adc
jg
div
fadds
mov
sti
mov
mov
pusha
jae
pusha
mov
call
rorb
add
push
pop
popa
pop
push
xor
pop
mov
dec
nop
mov
fldl
or
lods
imul
sbb
jo
or
mov
fs
push
sbb
out
mov
inc
sub
pusha
mov
push
inc
outsl
popf
mov
icebp
mov
add
test
fstl
mov
seta
adc
xorl
lock
hlt
xchg
sub
xchg
mov
jae
lahf
push
out
enter
adc
sbb
sbb
cli
subl
mov
popf
and
sbb
add
pusha
test
outsl
pop
push
pusha
cwtl
adc
aam
jns
adc
test
pusha
scas
dec
and
push
ret
movsb
inc
test
pop
and
sub
andb
xor
push
add
and
push
cwtl
sub
fistpl
or
or
rcll
out
add
sub
stos
rcrb
stos
add
mov
shll
or
pop
cmp
mov
cld
lea
and
subb
shr
mov
add
cmp
lds
xor
call
push
add
xchg
push
sbbb
and
sbb
nop
mov
or
push
fcompl
jecxz
out
stos
inc
das
addb
dec
xchg
inc
pop
adc
inc
add
mov
pop
jmp
inc
pusha
dec
fisttpl
pop
add
or
cli
cmp
add
and
inc
xlat
xlat
sub
dec
and
lods
lock
iret
add
imul
popa
inc
sub
dec
ret
outsb
push
adc
mov
mov
pop
xor
inc
cmp
add
pop
clc
xchg
mov
jg
mov
sbb
dec
adc
andl
sub
adc
mov
jg
sbb
mov
push
lahf
jno
sbb
xor
lea
dec
xor
popa
fisubl
pusha
xor
inc
stc
add
mov
pop
add
loope
xor
mov
adc
push
sbb
jae
rolb
jbe
in
repnz
xchg
outsb
and
fwait
push
test
sbb
movsb
int3
or
adc
nop
xchg
in
or
popf
ja
push
mov
rcl
jo
mov
and
inc
movl
mov
pop
xor
inc
dec
xchg
mov
add
insl
cmp
clc
xor
out
mov
jbe
add
mov
out
rolb
push
xor
mov
dec
loope
xchg
cmpl
xchg
out
jl
mov
stos
repz
add
out
pop
xchg
fnsave
adc
xchg
out
add
pop
mov
jb
dec
or
or
cmp
xor
pop
jecxz
or
fadd
xor
pop
jecxz
lcall
sub
pushf
dec
fdivrp
pushf
mov
jmp
scas
cmpsb
cmp
lds
mov
out
js
add
mov
jp
insb
orb
or
and
dec
pop
push
jo
out
dec
pusha
je
cltd
mov
sbbb
mov
dec
cmpsb
inc
imul
mov
pop
test
dec
cmc
mov
add
mov
in
iret
icebp
das
cmpsb
lret
dec
adc
jmp
into
inc
push
and
or
add
mov
outsb
add
test
dec
sbbb
stos
iret
pop
xchg
sub
mov
and
mov
pop
insl
adc
fadds
adc
xchg
movsb
push
repnz
pusha
or
add
pop
pop
push
popa
movsb
jmp
jb
test
mov
xchg
mov
mov
or
movsl
inc
xchg
scas
jae
inc
pop
add
or
outsb
popf
pop
and
xchg
sub
add
sub
xor
fstpt
in
adc
cmpsl
xchg
dec
loopne
es
push
addb
stc
or
fcoml
xchg
xor
jmp
aaa
lea
and
mov
push
and
sbb
hlt
add
mov
add
pop
fsubs
repnz
popa
mov
insl
jb
leave
pop
iret
mov
loopne
call
clc
scas
pop
fstpl
mov
or
mov
in
test
adc
mov
movsl
rcl
push
sbb
or
pop
mov
sub
and
xchg
aaa
push
xchg
dec
push
shlb
nop
xor
xor
cli
insb
pushf
sarl
mov
push
stc
bound
or
pop
clc
pushf
add
pusha
andb
push
inc
jge
sbbl
adc
in
popf
aaa
sub
inc
outsl
out
roll
and
loope
outsl
jb
or
and
xchg
pop
dec
std
stos
push
sub
mov
mov
fsub
add
jmp
lods
inc
lods
sub
mov
sbb
xor
jno
dec
push
insb
jne
outsb
push
or
decl
xtest
outsb
cmc
or
push
push
mov
or
adc
fsubrs
dec
repz
sub
adc
sub
clc
mov
pop
cmp
pop
push
inc
xor
loopne
imul
data16
push
xchg
orb
out
mov
lahf
pusha
orl
jmp
jne
fiaddl
mov
outsb
mov
call
rcrb
cwtl
shll
les
lods
rol
es
mov
pop
cltd
lcallw
js
or
je
jmp
add
enter
loopne
nop
adc
outsl
sti
add
in
es
and
push
pop
pop
dec
fisubl
movsb
rcll
call
outsl
mov
cmp
mov
add
pop
sub
ja
dec
fisttpll
out
sbb
adc
call
mov
adc
or
test
sub
inc
rcrl
adc
mov
pop
inc
ret
hlt
test
and
jl
fwait
icebp
add
sbb
insb
shl
adc
add
rcrb
es
push
sti
xor
popf
inc
pop
ss
mov
mov
adc
mov
inc
mov
lret
xchg
inc
cmc
mov
arpl
fnstenv
lea
sub
aad
addr16
das
and
xchg
lcall
outsl
add
insl
pop
inc
or
pop
and
jno
push
addb
inc
cs
negl
push
divl
mov
adc
in
add
mov
dec
imul
cli
xchg
iret
mov
adc
scas
add
lods
pop
or
mov
ja
inc
aas
insb
adc
ucomiss
iret
push
arpl
jae
jo
test
test
lahf
mov
sarl
mov
in
outsl
inc
mov
in
sbb
mov
mov
pop
mov
xchg
xor
std
pop
das
ja
jg
leave
and
nop
sbbl
push
into
test
int3
shll
dec
inc
sub
jns
rorb
xchg
mov
and
mov
add
sub
sub
sbb
add
ficompl
and
and
xor
push
adc
sub
add
sti
pusha
jl
lcall
xor
xchg
pop
lods
dec
pusha
test
dec
add
repnz
cld
ja
out
adc
add
stc
fdivrs
dec
jo
xchg
sbb
adc
sbb
push
pusha
outsl
fistpll
dec
sbb
xor
in
add
outsb
rcrb
cmp
adc
dec
icebp
sub
push
ss
in
push
pushf
loopne
and
mov
push
pop
and
aam
testb
xor
dec
add
push
call
pop
insl
jbe
lds
addb
jnp
inc
mov
adc
or
pop
cmp
call
dec
and
xchg
fs
push
and
mov
inc
movsb
loopne
pusha
mov
add
xor
jo
test
daa
fistpll
subb
addl
pop
cmp
cld
add
xchg
push
pop
addb
xchg
adc
popa
pop
repnz
loope
enter
jg
xchg
int3
ss
adc
sub
push
or
jne
fs
dec
inc
xor
jmp
dec
stc
sbb
sbb
inc
es
js
neg
add
mov
push
adc
mov
cmp
add
add
and
sub
xchg
je
add
jns
adc
pop
jo
xor
dec
idivb
dec
cmc
mov
mov
lea
and
gs
fdivrs
add
popa
leave
push
test
mov
adc
sub
cmp
jp
add
sahf
lcall
fs
push
stos
leave
jge
jne
inc
sbb
xchg
push
push
push
dec
pop
rcll
gs
das
mov
or
sub
jp
pop
and
sub
inc
int3
dec
add
repnz
sbb
dec
fiaddl
xchg
sub
mov
add
xor
orb
jnp
push
cld
xorl
dec
or
and
scas
adc
dec
or
call
add
push
imulb
or
dec
lret
push
fwait
shll
lock
ds
add
adc
pop
pop
outsb
xchg
add
sub
mov
cwtl
dec
or
popf
xchg
add
adc
mov
or
inc
out
mov
in
mov
pushf
xor
aam
fidivs
or
xchg
jp
pop
dec
cmpsl
sbb
and
popl
scas
insb
push
mov
push
ljmp
jecxz
add
cmpsb
int
mov
xor
or
enter
cmpsb
lock
popf
push
inc
jmp
popa
scas
jmp
movl
mov
and
cmc
outsb
outsl
data16
out
stc
mov
add
sub
add
mov
jno
pushf
into
pop
iret
rorb
or
subl
adc
xchg
dec
sarl
out
nop
adc
pop
popf
fistps
and
jmp
pop
sub
sbb
inc
lds
and
pop
inc
adc
dec
xor
push
cmp
rolb
sbb
test
fnstenv
sub
loope
insl
es
add
dec
bound
ret
pop
mov
add
or
ror
and
sub
or
adc
push
imul
push
mov
adc
xorb
arpl
and
mov
cmpsl
lcall
aad
mov
push
inc
adc
pusha
ljmp
out
push
movsb
xchg
rclb
aaa
clc
shll
movsl
sbb
or
imul
sbb
inc
or
xchg
daa
push
sbb
jbe
push
mov
inc
and
pop
icebp
adc
imul
inc
mov
or
ficomps
inc
pop
fistpl
mov
adc
adc
jg
sub
and
or
leave
lahf
or
roll
jo
or
mov
movsl
inc
mov
icebp
cltd
insb
add
and
test
pop
popa
jmp
sub
call
cwtl
rcll
pusha
xor
cmc
test
add
aad
sub
add
roll
cmp
mov
popa
mov
mov
cmp
mov
pop
add
iret
sbb
mov
out
lock
pop
adc
pop
xchg
and
lret
ljmp
dec
outsb
movl
lret
push
mov
mov
and
jns
cmp
or
in
add
xchg
fnsave
xorl
lret
call
sub
sbb
adc
adc
out
and
push
mov
adc
rorb
add
jl
sbb
add
fwait
dec
or
adc
or
push
movsb
daa
push
inc
es
outsl
icebp
xor
adcb
rclb
inc
sub
cmp
jle
repz
or
loope
sub
push
addr16
les
pusha
cs
mov
jns
sub
pop
pushf
mov
adc
in
mov
inc
cwtl
xchg
pop
xchg
push
stc
mov
jnp
mov
jge
loopne
mov
loopne
sbb
frstor
dec
cmp
push
pop
mov
mov
mov
call
and
cs
cld
fsubs
insb
add
push
add
gs
dec
shrb
mov
pusha
mov
scas
sbb
fstps
shrb
xor
adc
into
xchg
loopne
aam
or
dec
push
sub
clc
pop
call
pusha
int3
outsl
gs
cmp
out
add
mov
xorb
cld
mov
int
loop
mov
punpckldq
fldt
jge
popf
pusha
fdivs
and
push
test
jns
int3
add
cmp
sub
or
mov
jae
jo
lea
mov
les
mov
push
adc
aam
jl
cld
sub
stc
push
pusha
enter
das
jp
cmp
out
jo
push
mov
mov
add
dec
jb
pop
adc
or
inc
into
mov
mov
testb
int
inc
iret
push
rolb
idiv
adc
pop
xor
lea
or
int
and
cmpsb
aam
jle
pop
daa
enter
pushf
mov
dec
push
add
inc
add
lds
ret
out
mov
int3
idivb
mov
or
imul
int
rolb
push
loopne
mov
stc
fwait
mov
or
lock
loopne
xor
sbb
add
xchg
lods
mov
push
xchg
sub
xchg
pop
jb
cmp
xor
jecxz
in
add
jno
jo
and
mov
lds
and
das
ja
inc
push
sbb
js
pusha
ret
mov
mov
es
dec
imulb
push
pop
dec
xlat
out
mov
movswl
popa
mov
imul
push
mov
pop
add
js
lods
pop
mov
fisubs
icebp
adc
and
push
pusha
mov
pusha
mov
inc
out
or
add
lea
add
scas
jl
and
rcr
sub
icebp
adc
call
stc
pop
cmpsb
and
xchg
pop
subb
sub
js
add
inc
subl
jae
pop
fsts
nop
aad
jnp
cld
mov
cwtl
imul
add
xchg
sub
mov
jne
loop
lds
clc
mov
test
add
lcall
mov
mov
enter
ljmp
test
mov
push
or
lea
fcoml
lahf
clc
imul
fildl
dec
stos
jne
inc
xor
jp
mov
or
mov
push
add
push
pop
loope
mov
faddl
adc
xor
loop
adcb
add
fs
test
mov
jo
fs
and
leave
and
pop
orb
or
sub
push
call
mov
ret
pushf
sub
or
mov
sti
imul
add
out
cmpsb
shlb
mov
push
jmp
cmp
mov
gs
adc
sbb
movsb
imul
in
xchg
lcall
push
mov
pop
mov
cmp
mov
daa
xchg
in
adc
inc
and
movsl
add
jmp
ljmp
cld
xor
sub
js
add
inc
popl
iret
cmp
imul
add
cmp
push
jno
rclb
pop
ss
roll
call
psllw
inc
jecxz
mov
loopne
xor
pop
int
push
sbbl
sub
lock
testl
cmp
orb
cmp
cwtl
enter
idivb
repnz
mov
fwait
or
mov
and
call
inc
or
jle
cmpb
aas
call
xchg
xor
dec
fnstsw
loope
addb
push
and
add
sub
cmp
add
fnstcw
xchg
xor
push
cli
add
fs
sub
rclb
cmp
xor
outsl
movsb
in
ja
insb
mov
ljmp
xor
fistpll
aas
ds
add
jbe
push
popa
lea
int3
adc
mov
mov
fcmove
add
xor
cmp
pop
js
sbb
inc
dec
lea
push
sbb
test
and
cli
mov
add
dec
les
movsl
jge
scas
add
pop
dec
lcall
ds
add
ja
add
jmp
aam
xor
pop
je
sbb
sar
jge
push
lds
test
bound
or
xlat
jp
out
mov
popa
mov
addb
add
xchg
add
inc
sarb
cmp
mov
fsub
or
adc
sub
adc
lods
clc
shlb
mov
push
repz
into
pop
sbb
data16
add
inc
fdivl
cmp
cwtl
iret
add
xlat
push
lods
adc
test
inc
stos
mov
int
in
add
or
mov
jbe
movsl
pop
ficoms
push
scas
cwtl
xor
ret
stos
daa
add
add
inc
xor
ficoms
dec
fs
jne
push
in
lds
loope
outsl
cs
ss
sbb
jge
pusha
lcall
mov
aam
cmpl
jmp
testb
push
cmp
addl
push
dec
shrl
push
jb
sbb
ret
dec
add
inc
mov
ret
add
jae
pusha
mov
es
xchg
test
cmpb
in
push
mov
int3
popl
add
xchg
imul
sub
adc
push
cli
adc
orb
cwtl
insl
sarb
xchg
pop
int
add
add
mov
pop
pusha
xor
lock
or
in
cs
lods
add
test
inc
cld
bound
sbb
jns
divl
out
add
push
mov
dec
dec
cwtl
adc
dec
xor
mov
push
dec
jecxz
sub
xchg
adc
shl
mov
push
int
sbb
push
add
jge
ss
mov
or
aas
popa
stc
and
es
cld
ljmp
das
inc
popf
femms
in
add
inc
les
xchg
add
mov
scas
rcrb
into
pop
cmp
xor
and
ret
inc
add
dec
fldl
inc
fstenv
arpl
xor
add
xchg
jo
sub
rcrl
je
mov
pushf
add
lods
shr
add
in
stos
xchg
rcl
or
cmovl
in
cmp
imul
sarl
jp
push
mov
or
inc
push
lea
stos
add
cmpsl
push
inc
push
cli
sahf
fiadds
mov
push
es
sbb
push
add
xor
xorb
mov
out
add
incl
imul
cs
lret
add
jnp
shl
fs
loopne
repnz
shlb
lods
jnp
cmpl
fcomp
arpl
add
push
rorb
add
hlt
dec
imul
nop
mov
fld
lret
shlb
add
sbb
pop
mov
inc
in
xor
jae
pop
mov
outsb
mov
add
dec
subb
adc
adc
fildll
andb
repnz
cmpsl
rol
js
cwtl
enter
push
iret
jp
and
aaa
inc
pop
xchg
add
jmp
and
push
add
jmp
add
mov
add
test
fs
inc
rcrb
shll
lods
rclb
fwait
ret
sbb
ja
push
lock
adc
in
in
add
imul
jo
pusha
mov
out
inc
xchg
pop
xchg
sub
add
or
mov
fsub
cmp
mov
xchg
andb
dec
rclb
mov
cltd
adc
cmp
addl
push
sub
pop
xor
aad
mov
fstpl
adc
cltd
jb
sub
or
cmp
push
add
fs
add
in
pusha
sar
in
ljmp
xchg
fsts
xchg
dec
xor
nop
stos
in
insl
ljmp
xor
mov
pshufw
add
dec
loope
addl
pusha
shll
and
xchg
call
jge
mov
dec
fwait
xchg
xchg
jg
mov
ljmp
out
sub
clc
jo
jecxz
dec
mov
add
lods
fmuls
lds
test
cli
call
loope
mov
xchg
orb
lods
sub
fisubs
jnp
add
test
dec
xchg
popa
jne
call
push
insb
add
fcomip
roll
int3
notb
std
loope
mov
jae
js
xchg
imul
mov
fcoms
cmp
popa
mov
add
in
rcll
and
movsl
push
movsb
sbb
jp
xchg
lea
push
cltd
js
xor
dec
add
aam
repz
sub
lods
add
mov
lods
push
xchg
stc
add
inc
push
into
adc
inc
push
imul
addl
ljmp
add
push
inc
mov
adcl
negb
fnstcw
and
jge
fiaddl
add
orb
das
in
adc
push
fadds
mov
jns
push
arpl
insl
lea
test
dec
sub
ja
jo
shll
adc
push
xchg
and
loopne
adc
sub
xchg
outsb
adc
inc
iret
dec
xchg
pop
and
jp
popa
std
sub
pop
and
and
call
mov
in
rorb
jmp
insl
out
jbe
add
cld
mov
mov
xlat
adc
out
out
xor
ret
jmp
ficoms
loop
mov
sbb
push
or
ja
call
addb
xor
movsb
add
notb
sbb
fstp
add
popa
fadds
cmpl
add
mov
adc
xor
mov
push
mov
in
dec
mov
dec
paddw
pop
cmp
add
call
sbb
or
mov
pop
cmp
lret
xorb
aas
mov
dec
aad
mov
mov
mov
stc
sbb
sub
push
notl
push
mov
sbb
sbb
cltd
vminps
jge
daa
adc
icebp
ret
lcall
lcall
xchg
test
mov
imul
lahf
pop
repz
mov
sbb
jb
adc
lods
xor
test
and
leave
push
lock
xor
sub
jno
xchg
or
mov
stos
bound
cwtl
leave
add
ror
shlb
hlt
adc
cmp
jmp
subb
lret
test
push
mov
adc
ljmp
cmp
mov
and
pop
enter
push
int
nop
imul
cmp
mov
and
mov
fimull
pop
hlt
pop
sub
jnp
inc
ret
dec
adc
call
mov
mov
adc
scas
add
inc
inc
call
push
pop
insl
xor
pop
in
decl
rolb
push
icebp
jl
cmp
test
iret
add
mov
xchg
rcrb
mov
lock
in
and
sbb
push
vpunpckhqdq
mov
jb
pop
cmp
jnp
adc
push
lock
jg
fwait
sub
xchg
mov
cmp
maskmovq
push
incl
or
pop
shr
and
sub
jge
sbb
push
mov
les
pop
inc
std
push
fsubrs
inc
or
je
push
xor
adcb
mov
sar
incl
pop
xchg
popf
add
sub
in
add
add
push
dec
aad
cmpsl
adc
inc
xchg
sub
adc
jbe
movsb
mov
add
gs
out
add
sbb
dec
lret
add
mov
jle
rclb
add
hlt
lea
add
inc
add
dec
loopne
dec
pop
mov
push
iret
daa
jnp
dec
push
jecxz
pop
xor
pop
pop
pop
ljmp
leave
scas
loopne
enter
clc
and
inc
idivl
mov
nop
mov
es
pop
pop
or
jbe
dec
mov
loopne
push
test
add
xor
in
dec
loopne,pn
dec
fldl
jl
add
movsb
js
jmp
ja
in
push
cld
add
add
scas
stc
fcoml
push
pop
movsl
pop
mov
das
add
jg
dec
outsl
into
sbb
sbb
or
pushf
nopl
dec
mov
les
push
addr16
shll
fstpt
lahf
pop
adc
add
jl
shl
xor
ret
aam
cld
clc
push
in
push
pop
push
mov
add
out
lea
mov
call
pop
mov
cwtl
mov
stc
test
sbb
push
mov
daa
lret
or
mov
xchg
test
pusha
mov
inc
shrl
and
push
out
add
ljmp
test
jmp
pop
add
movsl
sbb
cmp
dec
pop
cli
les
jl
aas
add
pop
das
push
or
xchg
call
jne
hlt
dec
and
dec
dec
popa
cs
pop
out
jg
out
push
out
mov
icebp
inc
outsb
cmpsl
enter
and
test
mov
sub
dec
pop
mov
or
mov
sub
pop
adc
ds
sub
movsl
ret
mov
push
inc
mov
mov
push
or
jmp
insl
add
inc
mov
jno
xchg
inc
stos
sub
cmove
aaa
dec
pop
jl
cwtl
sub
mov
clc
jmp
vpunpckhdq
jmp
cli
fcomps
ret
jno
pop
xchg
lods
adc
test
roll
jle
mov
add
or
mov
cwtl
xchg
test
lret
add
adc
adc
mov
pop
dec
adc
out
pop
mov
add
mov
xor
icebp
mov
add
mov
movsl
and
xchg
inc
pop
xchg
inc
push
pusha
adc
sub
popa
call
notl
add
xor
jns
shlb
mov
jmp
inc
loop
and
sar
cmpsb
sub
push
cltd
push
cld
cmpsb
pop
in
fsts
clc
cld
push
adc
icebp
mov
hlt
jns
sub
rcrb
push
sbb
data16
add
inc
rolb
cs
jecxz
push
stos
jecxz
add
mov
mov
mov
sbb
xchg
stc
sbb
rolb
or
movsb
jmp
in
adc
sbb
add
out
std
sbb
push
scas
ret
add
or
movsl
pop
lahf
sbb
je
pop
add
mov
mov
cmpb
jbe
mov
movsl
mov
cmp
cmp
loope
adc
lds
mov
mov
imul
lods
add
stc
sub
loope
jno
push
lret
and
and
mov
dec
jo
aaa
movsb
sub
xchg
xchg
or
hlt
pop
lret
mov
xchg
mov
mov
lea
outsl
sub
jmp
mov
ja
and
clc
push
add
add
pop
adc
adc
or
xchg
or
add
mov
daa
cltd
daa
iret
pop
inc
test
test
xor
aad
push
cld
call
mov
mov
jb
jnp
nop
push
push
push
add
mov
popa
outsb
mov
popf
out
sub
sbb
test
rclb
nop
popa
pop
out
loope
adc
iret
push
push
ss
fsubrs
pop
dec
shrl
xorb
fdivs
mov
icebp
jle
andb
sub
or
pop
or
outsl
and
add
or
push
inc
add
mov
bound
sbb
outsb
repz
insb
push
sbb
hlt
in
cmp
data16
popf
sbb
sbb
mov
movsl
sub
in
mov
xor
add
aaa
out
arpl
add
adc
and
inc
add
mov
pusha
dec
push
and
pop
jo
add
push
stos
scas
add
popa
pop
dec
pop
test
sbb
ret
mul
insl
add
adc
or
ret
subb
das
call
loopne
mov
call
pop
jne
sub
addb
push
bnd
pop
dec
jle
mov
inc
add
out
ja
mov
push
scas
loope
jg
loopne
pop
into
aam
adc
into
cwtl
rclb
sbb
arpl
cmc
cmp
lea
jno
add
pop
xchg
in
fsub
sbb
test
jb
mov
nop
inc
sub
adc
pop
mov
movsb
das
fildl
sahf
xor
dec
out
add
mov
push
out
sbb
push
pop
pop
pop
inc
or
mov
dec
dec
sbb
rcrb
frstor
pop
xchg
pop
jnp
push
add
out
mov
add
push
mov
lret
pusha
aaa
pop
test
adc
lds
adc
fildl
test
scas
loopne
out
cmp
sub
test
insb
sub
mov
cmc
les
daa
test
add
jnp
add
xor
mov
int3
add
cmp
in
dec
mov
pop
push
ss
mov
push
lcall
adc
push
sbb
mov
cmpsb
or
push
daa
jmp
out
das
ds
sahf
mov
sub
test
mov
imul
rcl
movsl
je
mov
adc
shrb
test
mov
dec
std
push
adc
adc
mov
insl
mov
repz
rclb
push
lea
and
adc
xor
jb
jae
js
jbe
cs
jle
lods
mov
gs
xor
mov
cmc
cmc
or
sbb
rcll
add
insl
pslld
inc
mov
dec
xor
xchg
and
dec
xchg
test
mov
repnz
sub
xor
dec
xlat
je
mov
pop
jmp
adc
add
mov
sbb
cmp
call
stos
pop
sub
ret
xor
push
mov
push
and
or
dec
movsb
loopne
fmuls
mov
inc
and
fiadds
test
add
xchg
mov
inc
and
cs
or
add
sbb
cmp
mov
jne
and
movsl
pop
rorl
aad
in
push
popf
inc
mov
dec
das
mov
cmpsl
call
xor
xor
cmpsb
or
adc
xchg
in
xchg
inc
int
jle
add
push
sub
popf
inc
clc
aaa
lds
xchg
das
sahf
inc
ror
or
addl
lret
cmp
jp
add
in
pop
mov
jno
push
cmpl
call
repnz
inc
or
ss
sub
test
js
stc
lods
fcmovb
pop
pusha
dec
cmp
sarl
shlb
notl
cmp
in
mov
add
add
dec
sub
push
xor
adc
adc
and
mov
xor
xorl
pusha
jb
inc
mov
jecxz
adc
or
fiadds
sub
enter
lods
fs
pop
mov
pop
cltd
and
cmc
cmovnp
push
or
inc
pop
ljmp
aaa
pop
in
add
or
xor
inc
cmp
repz
dec
and
adc
xchg
arpl
sbb
sub
push
pop
add
sbb
mov
out
outsb
mov
push
mov
lret
cmp
mov
aaa
mov
rcll
daa
mov
pop
out
nop
mov
add
aad
divps
fstpt
cwtl
ret
fisubrs
nop
mov
sub
cmpsl
adc
cmc
and
popf
scas
xchg
adc
and
and
xchg
add
and
sbb
xchg
mov
js
mov
push
enter
jae
daa
add
push
js
in
call
dec
push
or
daa
dec
adc
mov
adc
and
cwtl
pop
pop
stc
adc
mov
pop
ja
mov
sbb
lcall
rcll
add
jns
xchg
inc
movsb
pop
add
xor
and
ss
push
lret
hlt
dec
js
movsb
adc
and
add
in
xor
pop
jo
mov
icebp
add
test
add
dec
lock
dec
mov
outsb
or
mov
pop
outsb
add
nop
sbb
orl
mov
mov
mov
lcall
push
shlb
nop
jge
xchg
shll
or
in
push
dec
pop
dec
dec
aam
scas
sahf
cld
rcrb
push
xchg
mov
out
mov
mov
adc
mov
out
xorb
fidivs
sbb
pop
lcall
adc
enter
add
ja
rcr
fxch
and
arpl
dec
xchg
pop
sub
loop
leave
adc
les
jo
add
dec
sub
popa
cs
inc
jae
fnsave
pop
or
pop
fadds
in
pusha
clc
mov
insb
das
lea
shll
pop
lods
and
popa
sbb
xchg
or
mov
insl
sub
push
pusha
lods
imul
pop
and
pop
stc
xlat
inc
fwait
cmpsb
inc
push
push
sub
xchg
or
xor
jo
incb
pop
mov
fcmovne
inc
mov
inc
and
sbbb
fstpt
inc
sbb
adc
js
mov
jecxz
roll
mov
nop
test
cs
arpl
push
mov
imul
mov
lea
xor
mov
pop
sbb
subb
xor
repnz
pop
sbb
repnz
fadd
adc
pop
pop
xchg
stc
add
cltd
cs
sub
outsb
hlt
add
mov
mov
movsl
inc
cmp
testl
add
or
mov
jns
push
fcomip
pop
xor
fldcw
cmp
dec
pop
fmuls
dec
dec
pushf
dec
outsb
or
in
out
jb
pop
mov
movsl
push
jnp
jo
cmpsb
add
clc
imul
pop
add
lret
push
in
add
mov
mov
mov
xor
or
adc
or
icebp
popf
insb
adc
jb
push
lret
mov
pushf
gs
sub
mul
loopne
andb
pop
js
subb
in
orb
push
insl
sbb
lret
sbb
movsbl
mov
add
mov
or
pop
subb
and
aad
add
add
shlb
lods
push
dec
pop
int
outsl
fcmovnbe
xorb
lds
xchg
xchg
mov
add
xor
and
xor
mov
stc
mov
ja
adc
int
sbb
shr
fildll
mov
js
xor
mov
push
cmpsb
or
jns
inc
pushf
movl
imull
pusha
push
movsb
cmpsb
daa
adc
add
scas
sarb
mov
testl
je
mov
call
xchg
fcoms
adc
dec
test
negb
push
mov
cmp
ret
sub
adc
dec
pop
push
xor
icebp
addb
cmp
adc
test
add
cs
cmp
clc
hlt
xchg
pop
mov
add
aaa
mov
fsubp
in
aam
xor
cwtl
out
dec
rorl
and
jno
add
push
push
add
or
bound
xchg
mov
push
das
enter
andb
mov
mov
xlat
mov
imul
add
int3
push
loopne
jns
jl
imul
popa
scas
add
fwait
mov
xor
out
and
nop
cmc
push
fwait
in
mov
inc
stos
push
test
andb
adc
shll
xchg
or
lret
loop
pop
scas
dec
loop
push
adc
cmp
pusha
inc
mov
mov
sub
jmp
and
rcrl
mov
cmp
sub
les
loopne
cmp
std
xchg
and
add
mov
in
lcall
pop
xor
jb
adc
xorb
popf
push
dec
daa
pusha
test
adc
cmc
mov
lods
add
xor
push
pop
je
sub
loop
adcb
fadd
jge
xor
leave
sbb
and
push
mov
out
sahf
xchg
sub
cmpsb
stos
loopne
jge
cmp
imul
arpl
mov
notl
mov
andb
lret
dec
add
adc
jo
gs
jns
stc
jbe
dec
cmpsb
loop
or
adc
out
mov
lock
test
push
xchg
fistpll
sbb
test
sbb
sbb
mov
add
jns
mov
jle
or
repnz
cmpsl
inc
cmp
pop
inc
ljmp
subl
iret
mov
and
cmpl
imul
mov
cmp
cli
movsb
sub
sub
sub
fwait
push
xchg
movsb
notb
cwtl
imul
mov
das
fidivl
je
dec
out
mov
pop
push
or
cs
pop
addb
ret
hlt
or
mov
xchg
jg
push
mov
inc
adc
or
bound
pop
test
adc
popa
ljmp
cmp
dec
lret
push
stc
push
sbb
pop
jnp
xor
repz
jge
adc
and
jp
add
dec
push
dec
fcmove
adc
cmp
add
shll
scas
nop
mov
mov
dec
pop
lea
mov
imul
push
pop
jbe
dec
dec
and
xchg
dec
fistpl
and
sarb
cld
shll
jbe
xchg
xchg
push
mov
sbb
rcll
push
xchg
addl
rcrl
mov
pop
and
xchg
icebp
in
mov
add
mov
leave
scas
dec
cli
loopne
scas
cmpl
out
sahf
stc
outsl
test
mov
arpl
add
aaa
je
imul
neg
mov
cmp
push
mov
fnsave
dec
cmpsb
cmp
add
cmpsl
or
pop
mov
push
ja
or
sub
pop
mov
cltd
cs
lds
arpl
call
sbbl
add
add
xchg
mov
xor
loope
mov
cmp
jmp
movsb
test
aad
daa
repz
add
push
mov
push
es
or
addr16
dec
fidivrl
adc
ds
adc
pop
testl
call
sbb
inc
push
push
faddl
mov
and
sub
hlt
pop
push
xchg
or
icebp
add
xchg
push
sub
add
pop
nop
fadds
sbb
add
aad
adc
pop
sub
data16
loopne
jle
add
fsts
das
fldl
leave
cs
add
mov
mov
mull
out
clc
xchg
xor
push
rclb
push
add
ret
icebp
js
cmp
insl
mov
movsl
cld
repnz
mov
inc
dec
or
nop
xor
or
adc
lret
mov
inc
ror
add
sub
call
push
addl
dec
in
movsb
and
orb
dec
xlat
outsl
or
int
iret
out
loope
repnz
mov
pop
cmc
pop
jae
xor
pop
ja
mov
sarl
cmpsb
pop
add
sbbb
out
cmp
loopne
cwtl
out
fstps
addr16
mov
xchg
or
loopne
imul
mov
or
shrb
arpl
sub
and
mov
push
popf
sbb
lea
aam
sub
jp
nop
pusha
fisttpl
add
xor
fwait
jne
ficomps
inc
pop
call
movsl
pop
mov
stos
xchg
lock
cmp
pop
and
cli
loopne
test
ds
outsl
addl
adc
mov
cmp
imul
dec
sbb
adc
sub
pop
push
shl
and
cmp
and
add
es
popf
and
loop
es
roll
mov
dec
mov
xor
test
les
add
adc
pop
mov
nop
loope
cmp
sbb
cmp
adc
jnp
inc
ret
sbbb
inc
adc
push
int
lds
nop
es
pusha
mov
mov
test
and
mov
xor
orb
rcll
mov
xlat
imul
xchg
mov
jmp
mov
adc
or
add
mov
lods
mov
adc
jo
mov
add
xchg
outsb
mov
or
hlt
cmp
add
pop
and
mov
lea
and
sub
fnstcw
jbe
pusha
sub
ret
inc
imul
shlb
inc
aad
out
or
imul
adc
ja
test
fcmovnb
loop
add
std
repz
mov
test
pop
in
imul
cmpsb
test
dec
fsubrl
lea
and
or
out
push
sub
aas
pop
xor
jno
sti
jbe
lcall
movl
or
pop
fcoms
daa
mov
neg
bound
pop
inc
orl
lea
and
sub
mov
mov
ret
pop
fwait
jmp
adc
dec
xchg
push
add
test
sti
and
and
jecxz
inc
mov
push
cmpb
ret
or
ss
ljmp
add
aam
cmp
loop
xor
mov
in
or
pop
jbe
xchg
or
mov
in
and
push
out
into
cmp
and
xor
movsl
sbb
mov
repnz
jg
mov
sub
pop
arpl
into
repz
xor
cmc
test
adc
lods
push
in
les
pop
or
pop
enter
xchg
sbb
popf
push
int3
imul
scas
xchg
cmp
pop
add
cmpsb
ss
outsb
test
inc
loopne
mov
cli
cmp
dec
adc
and
clc
sti
push
mov
subb
or
fisubl
shrl
inc
lcall
or
cmc
jo
sub
filds
ja
add
stc
shll
pop
pop
into
or
lcall
adc
std
xchg
and
jp
cmp
pop
lock
push
push
out
inc
lock
dec
popa
mov
rolb
insl
xor
jae
adc
sub
pop
sahf
lret
xchg
repnz
xchg
repz
ret
or
loope
aaa
les
adc
repnz
mov
cmpsb
dec
or
insb
dec
inc
sahf
mov
inc
inc
cmp
sbb
push
jl
mov
fimuls
enter
hlt
popa
mov
not
loope
pop
sar
sbb
jo
mov
pop
popf
xor
jae
push
cmp
jp
addb
push
pop
inc
add
inc
dec
adc
push
testb
loopne
add
data16
mov
loopne
mov
cmpb
xchg
insb
imulb
or
pop
mov
adc
fidivrs
fbld
out
cmpsb
stc
call
pop
icebp
xchg
testl
cmp
fwait
in
add
pop
mov
push
mov
or
or
push
jmp
pop
gs
mov
test
pop
push
lret
push
leave
push
pop
mov
mov
mov
xor
pusha
in
xchg
mov
sub
scas
in
loop
adc
mov
mov
sbb
out
mov
sub
int
mov
jb
aaa
cmp
push
mov
pop
std
adc
in
shlb
and
mov
cmp
scas
fimuls
sbb
sub
jns
xchg
and
stos
adc
adc
outsl
movsl
push
dec
mov
push
rclb
adc
xchg
push
xchg
push
add
je
mov
add
addr16
xor
add
ficomps
mov
inc
sbb
dec
fs
dec
xchg
fcomi
xor
ljmp
sub
adc
sahf
es
test
push
dec
sbb
cmp
or
sbb
push
adc
jnp
sub
movsb
outsb
pushf
das
mov
daa
pusha
inc
aam
push
pop
xchg
mov
push
mov
aaa
enter
add
xchg
dec
adcb
lock
sar
lea
mov
jl
pop
push
popf
or
mov
dec
stc
and
out
ja
test
rcrb
out
sub
ljmp
and
ss
enter
mov
add
sub
test
popf
fwait
es
aaa
jg
xchg
add
ja
out
fsts
push
xor
dec
cld
adc
mov
adc
inc
orl
adc
ret
ret
bound
and
inc
add
rcr
mov
sub
xchg
aam
inc
mov
shll
fwait
mov
jp
xchg
xchg
jns
xor
mov
das
sub
sbb
adc
sbb
into
fucomi
cs
add
mov
shrb
adc
mov
into
mov
add
sahf
call
divb
pop
dec
adc
mov
rorl
adc
rep
pop
and
dec
or
and
pop
call
insl
lret
sbb
sbb
fists
fwait
enter
inc
inc
push
pop
clc
fiadds
ffreep
and
pop
aaa
or
pop
fcoml
jmp
dec
hlt
fmul
popf
daa
jns
dec
or
mov
lcall
sbb
cmp
cmp
mov
pop
mov
rcrl
pop
sbb
mov
jmp
dec
out
sbb
mov
adc
jns
cmpsl
aaa
pop
add
les
sub
jbe
or
cmp
in
adc
outsl
test
pop
test
repnz
sbb
and
push
xchg
outsb
repz
xor
leave
or
pop
cwtl
push
mov
rcll
mov
mov
and
shlb
xchg
rclb
and
sarb
imul
popf
xchg
push
and
lods
outsl
jle
test
xchg
and
lds
sub
in
and
ltr
xchg
loope
add
leave
push
inc
push
mov
movsb
push
pop
popf
xor
ror
stos
adc
jnp
adc
inc
pop
add
mov
mov
mov
leave
add
setle
add
incl
shrl
add
sub
dec
mov
dec
dec
adc
enter
or
sub
jmp
daa
sub
inc
outsb
cmpsl
mov
add
mov
int
rcll
imul
sbb
pop
loopne
test
dec
xchg
mov
aam
fcmovne
cmp
or
or
rcrb
xor
loope
fisttpl
rorb
mov
mov
movsl
out
lcall
ds
or
or
and
jns
jmp
js
loopne
dec
aaa
xchg
cs
and
lcall
cmp
inc
add
add
mov
sub
icebp
cmpb
popf
sbb
sub
popf
je
push
and
push
loopne
shll
dec
testb
xor
sti
or
movsb
pop
je
xchg
cmc
negl
cli
je
std
jo
inc
adc
xor
jne
or
js
mov
cmpsl
out
js
dec
adc
subl
jno
daa
jo
push
jmp
adc
lea
call
xchg
pop
loope
cltd
loopne
push
xchg
lret
cld
lods
andb
mov
cmp
lds
cmp
add
adcl
cmpb
les
jne
add
mov
xchg
icebp
mov
cmp
test
cld
add
fwait
insl
gs
and
add
push
jg
mov
shl
pop
sub
cs
or
and
out
dec
push
lret
mov
add
mov
mov
mov
sbb
mov
jns
xor
xchg
sbb
mov
test
mov
mov
pop
std
nop
sub
inc
xor
xor
adc
add
fwait
or
inc
mov
pop
das
mov
fiaddl
loop
pop
aaa
and
sbb
mov
cmp
test
adc
or
push
jnp
cwtl
push
sbb
into
fwait
sub
sub
sbb
jae
cmc
sti
cs
mov
js
shll
dec
dec
mov
jge
push
pushf
inc
and
loopne
push
test
adc
adcl
rolb
dec
push
jno
or
push
sbb
pop
pop
fdivrl
lods
sbb
js
add
mov
add
rcrl
xchg
xchg
and
orb
pop
pop
mov
mov
jg
aad
push
xchg
add
push
cmpsl
cmp
add
stos
or
mov
pop
adcb
sub
adc
add
mov
adc
add
xor
or
pusha
xor
push
pop
dec
jle,pn
cmp
mov
or
imul
push
test
push
sti
jmp
sub
pop
xchg
outsl
popf
mov
jnp
adc
jns
movsl
adc
or
and
movsl
sbb
sub
in
pop
arpl
add
sbb
or
orl
adc
jg
fld
cmp
xchg
shl
or
mov
mov
outsl
push
js
loopne
xor
lret
test
xchg
loopne
mov
loope
cld
std
movsb
mov
aam
inc
in
inc
add
iret
and
ja
mov
pop
daa
cmpsb
xlat
out
jecxz
lock
cmp
cmpsb
mov
mov
mov
jbe
fidivl
jo
in
add
cmp
aad
mov
addb
or
push
pop
xchg
fdivl
inc
adc
fiadds
fwait
je
mov
push
pop
insb
jns,pt
dec
mov
pushw
push
cwtl
jle
loop
xor
mov
xchg
test
ja
iret
or
xchg
jbe
adc
xor
pop
add
imul
nop
imul
mov
add
sub
pop
mov
xor
lds
sub
loopne
sti
pop
mov
add
loop
out
enter
aam
bound
or
sub
in
in
and
cmp
cmpsl
fldl
out
xor
mov
mov
rolb
inc
dec
lahf
jbe
cmp
js
adc
inc
mov
jnp
movsb
les
inc
adc
xor
pop
cmp
cmpsl
xor
jno
call
aaa
into
mov
and
xor
popf
mov
fcompl
aam
in
dec
lahf
xor
decl
sbb
and
rorb
add
in
idivb
xor
out
sbb
ljmp
mov
pusha
insb
xchg
inc
mov
mov
mov
pop
xor
adc
repz
fiaddl
sbb
mov
int3
int
jmp
xchg
mov
mov
mov
loop
xchg
insl
movsl
fbld
repz
std
popa
jg
mov
pop
ja
insl
ret
inc
mov
test
mov
fwait
std
addb
filds
popf
sbb
adcb
or
mov
hlt
cmpsl
data16
daa
int
stos
decl
imul
repnz
mov
aad
xor
icebp
out
rcrb
fstpt
inc
sbb
test
rcrl
add
mov
addr16
cmpsl
xchg
inc
adc
mov
imul
or
mov
mov
fs
pushf
imul
pop
add
sbb
stc
cmp
push
pop
sub
test
movsb
cmp
push
xchg
insl
stos
rorb
add
test
in
fidivrl
add
inc
movsb
jge
fldt
sub
inc
adc
pop
pusha
nop
cli
mov
add
test
adc
push
pop
je
lds
jmp
sub
pusha
loop
mov
xchg
pop
movsb
push
push
mov
pusha
imul
das
dec
lea
mov
sar
mov
jbe
xor
jg
push
push
popa
xchg
adc
jmp
aaa
scas
das
jle
mov
dec
sub
sti
or
out
les
mov
mov
lock
js
insb
adc
lahf
nop
repnz
in
jae
xor
jmp
and
les
jecxz
sbb
ror
xlat
mov
scas
push
movsl
jp
dec
xchg
cmc
aad
jge
dec
mov
jle
in
js
lahf
in
daa
jmp
dec
mov
and
xor
add
scas
xorb
push
xchg
pop
and
pop
cli
ja
jae
push
test
test
mov
stc
enter
cmpsl
cmp
repz
add
jae
loop
mov
test
shlb
jmp
cmpsl
loopne
mov
sbb
pop
pop
adc
ret
push
push
or
loopne
mov
outsl
test
sbb
orb
fcoms
negb
dec
enter
outsl
lahf
fadd
rcl
stos
mov
add
call
lock
pop
xchg
push
lock
jg
dec
repnz
mov
outsl
xchg
xchg
in
lods
test
repnz
xcrypt-ofb
cmpsl
sub
jecxz,pn
xchg
loopne
jp
cmpsb
lahf
sarl
test
push
out
test
push
loope
ja
push
lahf
mov
sub
cmp
inc
add
xlat
or
fs
xor
in
push
mov
movsb
cmp
jns
or
add
mov
insb
xor
push
dec
and
mov
das
pop
hlt
clc
es
adc
popf
sbb
test
mov
dec
mov
add
pusha
or
lea
mov
mov
and
movsl
jnp
rclb
pop
add
popf
sbb
mov
jns
mov
das
sub
push
mov
stc
adc
inc
ja
jle
shl
push
or
mov
pop
or
or
scas
sbb
add
mov
loop
pop
jge
aaa
adcl
pop
ss
mov
leave
and
xorl
sub
rclb
xchg
dec
call
shr
push
add
or
sub
jmp
mov
mov
adc
mov
mov
jnp
cmpsb
mov
fld
jl
pop
sub
and
pop
mov
lods
xor
mov
or
push
jecxz
jno
xchg
mov
add
lock
pop
cli
ljmp
dec
js
popf
mov
mov
aaa
daa
sbb
cmc
in
inc
cwtl
pop
cmp
int3
aam
imul
sub
popa
jmp
jno
sti
out
add
clc
mov
pop
enter
and
test
movsb
out
cmp
cmp
adc
dec
add
xor
fimull
mov
pushf
push
or
add
jp
sub
in
push
mov
xchg
inc
adc
shrl
jb
adc
imul
test
popa
orb
jecxz
inc
push
mov
cmp
ss
xchg
mov
inc
push
sub
adcb
call
sarb
dec
jge
add
jecxz
cmp
mov
add
pop
jne
mov
outsl
scas
add
outsl
or
daa
fisttps
inc
jl
hlt
push
jo
jbe
mov
sub
mov
sbb
call
out
xor
lcall
cmp
mov
add
ret
sti
jae
cmp
std
mov
pop
stc
loopne
lea
dec
popa
repz
add
sub
pusha
cmp
mov
pop
add
jmp
xchg
pop
inc
jb
enter
mov
and
jnp
lods
add
jmp
and
testb
adc
scas
aad
jp
add
repnz
mov
cs
loope
xchg
outsb
aaa
mov
pop
mov
das
inc
add
lahf
loope
sub
divb
out
xchg
stc
push
cmpsb
cmp
pushf
add
sbb
inc
arpl
inc
lods
inc
cmp
push
add
bound
or
pushf
lods
inc
pusha
sbb
push
mov
mov
jmp
pop
adc
pop
insl
stos
pusha
fimuls
inc
in
shrl
in
push
sub
add
inc
test
movsb
xchg
pop
xchg
stc
sbb
and
cwtl
cmc
push
rolb
xchg
adc
bts
and
add
popa
or
push
int3
lea
daa
dec
add
out
int3
fisttps
add
mov
stos
jecxz
xchg
ja
cmpsb
and
and
and
jp
in
pop
gs
pop
adc
repnz
aad
jl
imul
adc
pop
dec
add
shrb
inc
daa
orl
shlb
sbbb
mov
inc
adc
lods
and
add
hlt
test
sbb
inc
stc
shll
jl
add
lods
cli
in
jg
dec
popf
dec
daa
test
cmp
call
push
movsl
xchg
adc
cld
pop
add
jp
stc
sub
loope
aad
jmp
decl
and
inc
sub
inc
adc
inc
mov
mov
mov
mov
es
adc
and
aas
sub
add
xchg
outsb
add
cmp
push
mov
ret
js
mov
mov
subb
js
add
add
pusha
mov
sub
dec
xor
pop
mov
ror
jo
sbb
cmpsl
fimuls
mov
cmp
inc
sti
loop
xor
cltd
cltd
and
cmp
lods
rclb
add
faddl
imul
sti
add
jb
push
mov
fdivs
add
push
out
and
jb
add
and
pop
das
sub
mov
jmp
adc
outsl
jne
cmpsl
add
aad
jl
or
cmp
xor
mov
cld
ljmp
loope
adc
ret
loopne
mov
pop
cmp
adc
add
nop
pop
mov
add
lahf
nop
xchg
push
test
test
xrelease
add
jae
data16
fldl
push
lds
xchg
and
cli
fiadds
leave
xchg
stos
jo
jno
mov
and
add
add
xor
add
xor
pop
sub
dec
sahf
call
outsl
arpl
ljmp
inc
xor
mov
arpl
sbb
push
xor
sub
jno
sub
dec
js
push
rorb
xchg
add
adc
xchg
dec
xlat
mov
or
cmp
cmpsb
fs
mov
addr16
data16
cmpsl
push
add
sarl
subb
adc
lock
dec
sub
and
or
xor
xor
mov
unpckhps
sub
fsub
je
and
add
jbe
out
xlat
mov
adc
xor
dec
mov
jnp
pop
js
subl
out
pusha
mov
push
mov
pusha
pop
popa
jmp
fs
mov
jb
cmp
jbe
sahf
in
imul
popa
popf
cmc
fldt
cs
icebp
jno
imul
push
jnp
jno
push
jle
lret
fxch
ss
sub
sub
add
jo
enter
imul
fucomip
jo
cmp
jmp
or
push
icebp
clc
inc
ror
test
sub
add
add
into
loop
pop
xor
mov
mov
adcb
pop
mov
outsb
cmp
push
mov
pop
mov
jbe
pop
inc
fisubrs
pop
out
add
nop
xchg
jb
repnz
bound
stos
lret
and
pop
mov
pop
push
jns
pop
dec
pop
ljmp
inc
sbb
nop
mov
sbb
testb
and
in
push
int3
add
out
push
cmp
cltd
cmc
jnp
lahf
add
or
pop
in
js
fadds
or
pop
and
ret
testb
movsl
sbb
jb
mov
roll
add
test
lods
jne
add
jecxz
adc
jmp
adc
mov
jecxz
es
pusha
cmpl
mov
jns
xlat
adc
adc
push
in
add
add
jbe
imul
dec
nop
or
leave
fwait
sbb
pop
pop
jns
inc
mov
ficoml
daa
jp
jae
rcrb
int3
les
jae
and
sub
add
fcoms
jecxz
jno
inc
pusha
fstpt
jp
jg
cmp
adc
int
mov
add
scas
jl
fs
je
push
jecxz
add
jo
arpl
js
clc
mov
mov
pop
sti
out
adc
shlb
dec
sub
aaa
mov
jo
cmp
add
and
pop
pop
das
xor
pusha
sbb
mov
xchg
jnp
rorb
cmpsl
or
arpl
cltd
jecxz
in
data16
inc
inc
dec
pop
cmp
sbb
idivl
jecxz
mov
add
lahf
les
jmp
and
jno
movsl
ret
hlt
loopne
pop
inc
pop
add
sub
jae
add
sbb
mov
and
movsb
ret
pop
stc
mov
or
mov
mov
xchg
rorb
push
add
push
mov
xchg
fwait
leave
jge
fcomps
xchg
push
repnz
dec
xlat
pop
xchg
test
xchg
sbb
and
adc
jnp
adcb
pop
dec
mov
mov
rcrl
enter
and
xor
cmp
subl
idiv
cmp
rolb
jp
loopne
popa
dec
sbb
bound
inc
push
push
lret
inc
mov
stos
jl
dec
mov
iret
xchg
ret
mov
pop
xchg
xor
stos
les
cs
or
add
mov
jne
fidivrl
inc
jno
inc
jg
lahf
mov
add
jle
inc
insb
jae
nop
xchg
and
subb
push
das
lret
imul
jb
push
hlt
xchg
jl
mov
or
fsubrl
push
loopne
enter
fs
jnp
cmp
rcll
std
add
sti
add
mov
das
nop
sbb
ret
push
flds
lds
je
scas
push
push
lods
mov
inc
leave
int
fsubs
jbe
xchg
stc
cmp
push
push
scas
xor
xor
push
in
leave
add
mov
mov
mov
jle
pop
and
sbb
mov
mov
insl
sub
cmpsb
clc
fadds
mov
jmp
loop
add
aaa
std
inc
lods
add
dec
js
mov
bound
sub
push
mov
fwait
sbb
sbbb
or
lcall
jo
cmovp
jbe
or
sahf
cmp
test
imul
push
lock
bound
test
aas
imul
lods
inc
xor
test
and
faddl
sbb
cmp
add
int3
je
inc
rolb
rcll
mov
inc
or
xchg
ret
add
and
arpl
es
call
jo
xor
cmp
lret
adc
stos
les
pushf
add
int
add
mov
push
lds
jbe
pop
pop
mov
add
stc
mov
fimull
mulb
faddl
adc
xchg
aad
mov
adc
fstpl
mov
pop
vcvtpd2dqy
push
xor
repz
mov
aam
jb
and
xor
cli
mov
jmp
xor
mov
dec
mull
jae
mov
movsl
popa
or
mov
jmp
dec
mov
pop
in
or
ja
rorb
xlat
mov
idiv
adc
mov
loop
fisttpll
movsb
cmp
add
and
cmp
enter
push
scas
cmp
popf
adc
jecxz
rcll
add
aad
jp
push
adcl
xchg
dec
loope
sbbl
mull
add
iret
adc
je
and
jmp
in
mov
push
sub
les
add
cmp
jnp
adc
mov
fcomi
subb
inc
adc
adc
ljmp
sub
dec
adcb
jmp
jp
stc
loopne
popf
and
arpl
cmp
popa
test
icebp
ljmp
add
inc
pop
fnstcw
jae
jmp
fildl
aad
adc
pushf
xchg
fldenv
add
lods
mov
dec
dec
mov
stc
jae
push
lods
or
xchg
adc
aaa
xchg
lock
lock
leave
or
dec
add
xchg
flds
daa
pop
ss
or
xchg
lods
sub
adc
push
push
adc
popa
pop
cmpsb
mov
fdivr
inc
cmc
add
dec
jne
stc
mov
sbb
push
push
movsl
adc
sahf
popa
adc
push
dec
ret
pop
call
ja
add
shll
push
sbb
xchg
or
cltd
push
jg
mov
xor
push
dec
cld
push
fs
xorl
xchg
jbe
xor
pop
gs
or
mov
sarb
add
cmp
mov
cld
push
mov
jge
movsb
cld
jno
out
or
mov
dec
movsl
int
inc
cmp
jo
cmpsl
aam
stc
in
mov
jp
movsl
mov
loopne
repnz
xchg
mov
das
enter
mov
mov
inc
adc
rep
dec
stc
shr
pop
test
adc
scas
add
inc
adc
or
mov
mov
xor
sahf
xor
jb
jmp
sub
rcll
cmp
sub
mov
push
hlt
mov
andl
inc
dec
js
xchg
or
incl
sub
add
gs
repz
mov
mov
xor
mov
popf
dec
inc
inc
adc
add
sub
mov
sbb
out
sub
jbe
xchg
aam
filds
mov
ss
aas
push
mov
negb
hlt
mov
je
and
mov
cmpsb
add
mov
adcb
adc
enter
in
lret
inc
inc
in
add
add
addb
push
sti
daa
adc
sbb
add
loopne
or
int
sar
inc
adc
xchg
jecxz
dec
inc
dec
mov
ds
xchg
xchg
lcall
lods
push
adc
adc
pop
decb
test
in
cmpsb
sahf
push
sub
xor
add
dec
lods
ds
stc
xor
sbb
stc
test
fsubl
push
jbe
idivb
inc
outsl
subb
dec
in
negl
pop
pop
gs
rorb
mov
fcmovnbe
or
push
dec
jl
sbb
stos
push
cmovnp
lret
test
cmpsb
or
push
pop
add
and
or
lea
add
push
jne
sub
cmpsb
adc
bound
push
mov
cld
ret
hlt
xor
movsb
addl
mov
or
xchg
cld
push
jp,pn
sbb
movsb
sbb
popa
je
in
jno
loop
adc
mov
xchg
pop
mov
iret
mov
add
cmp
xor
popa
jmp
push
add
in
and
push
or
xchg
insl
divps
fidivl
aam
fidivl
ss
jns
dec
sbb
inc
stos
add
jmp
mov
push
pushw
mov
shll
add
sti
test
inc
dec
and
mov
int
ret
xor
cmc
repz
addr16
and
xor
jo
imul
jmp
sub
jle
ds
add
jg
lret
in
sbb
jae
push
xor
or
fbstp
push
clc
adc
and
mov
jecxz
pop
and
and
ss
sub
pop
lcall
call
pop
lods
mov
ret
jmp
aaa
mov
jnp
orb
jecxz
push
mov
inc
dec
gs
daa
lods
sbb
and
lret
sub
pop
push
icebp
data16
pop
repnz
loop
movzbl
pop
into
mov
inc
push
je
dec
dec
sub
lock
daa
popf
adc
adc
in
mov
leave
sbb
sbb
leave
test
lahf
addb
test
mov
adc
popf
xlat
add
cmp
stos
addr16
xchg
rorl
xchg
mov
faddl
add
mov
push
xchg
cmp
sbb
add
popf
jmp
dec
mov
loopne
xchg
xchg
aam
push
xor
repz
mov
lahf
inc
xchg
cmp
mov
mov
mov
fcoms
mov
inc
inc
setge
cmpsb
jle
push
xor
dec
aaa
std
mov
lea
adc
pop
popa
add
or
xchg
pop
sbb
cmpsl
push
and
push
lret
and
mov
xchg
xchg
push
imul
push
adc
sbb
negb
sbb
add
lahf
icebp
dec
add
push
loope
test
add
pop
scas
sahf
lods
hlt
cmp
rclb
and
iret
lods
dec
ficoml
cmp
xchg
sub
loope
push
adc
xchg
repz
fcomps
jle
inc
mov
rcrb
pop
add
roll
mov
add
sbbl
mov
fildl
sub
and
test
pop
ret
sub
push
scas
xor
test
xchg
add
popf
mov
out
cli
dec
push
in
add
mov
xchg
andb
add
mov
jle
pop
sbb
sub
jns
cmp
pop
dec
mov
in
and
daa
in
lea
xchg
xor
mov
adc
mov
jns
mov
mov
int3
lods
xchg
mov
push
fidivrl
loopne
dec
and
sbb
test
shlb
sub
jb
mov
sub
movsl
into
push
mov
or
jmp
push
es
and
les
sub
stc
mov
out
or
mov
add
cli
dec
push
out
outsb
xchg
pop
sbb
test
push
scas
and
xchg
adc
cwtl
out
ds
push
subb
and
sbb
mov
lahf
add
ffree
xor
jne
das
test
scas
into
ss
mov
sub
hlt
pop
pop
xor
mov
pop
cmp
mov
push
ret
push
mov
pushf
add
pop
js
sub
mov
sbb
cmp
adc
dec
pop
int
das
in
dec
mov
iret
add
fmuls
arpl
dec
add
mov
fldln2
jnp
add
lea
pop
dec
scas
jb
add
inc
clc
rolb
xchg
ljmp
push
scas
inc
or
cmc
push
subb
lcall
in
mov
and
pop
cmpsb
ret
lock
rcrl
add
add
or
mov
je
inc
stc
adc
sbb
daa
jb
movsl
pop
mov
mov
xor
aam
adc
pop
push
ret
pushf
xchg
loope
inc
cmp
addr16
test
cmp
cs
out
int3
add
cmpsb
xchg
jle
xchg
xor
and
sbb
pop
sbb
sub
fs
stc
sbb
and
data16
pop
push
enter
mov
lret
jb
pop
mov
mov
lahf
push
cmp
pop
leave
and
jnp
sub
dec
out
sbb
testl
pop
jne
dec
and
dec
add
or
enter
and
and
jne
cmpsl
sub
mov
movsl
add
mov
and
or
js
pop
cmpl
mov
lea
jne
stc
test
cs
imul
pusha
in
dec
aas
cwtl
or
mov
or
mov
loopne
jmp
adc
sti
leave
cli
push
mov
xor
add
stc
or
fcompl
dec
pushl
pusha
jns
repnz
mov
dec
adc
popa
mov
sub
pop
pop
fimuls
pop
push
and
pop
or
sbb
or
ja
xchg
mov
pop
mov
ret
jl
jno
pop
sub
sub
test
xor
push
fldt
shlb
xor
jl
add
xchg
outsb
jle
xchg
mov
mov
dec
cli
cmpsb
inc
or
cmp
shll
jmp
mov
inc
push
int
push
cli
outsl
cmp
leave
sti
sub
or
jne
and
jno
jg
or
sbb
sub
add
repz
rdpmc
pop
mov
pop
fiadds
adc
or
mov
loopne
out
sbb
push
aaa
xor
outsl
adc
jbe
loopne
mov
jmp
out
out
jns
inc
lcall
out
jae
popa
cs
icebp
dec
mov
or
or
sub
imul
test
out
dec
fdiv
daa
sub
sbb
stc
sbb
outsl
add
sbb
add
sub
daa
xchg
in
mov
notb
xchg
jbe
dec
les
mov
mov
push
ret
push
push
clc
mov
or
mov
dec
pop
shl
jle
cmp
addl
push
add
mov
adc
loop
add
sarl
je
cmpsb
jae
mov
pop
sbb
bound
cmpsb
in
xchg
mov
and
or
pop
jmp
pusha
sub
or
and
rorl
or
in
icebp
xchg
fwait
dec
in
shlb
pop
outsl
pop
sarl
je
lock
add
inc
inc
in
and
popa
je
push
push
cmpsb
and
or
mov
mov
dec
mov
ret
out
call
sbb
mov
loopne
lods
xchg
dec
scas
mov
imul
push
pop
ja
pop
xchg
fstps
xchg
push
xor
rcrb
xchg
sub
pop
inc
jecxz
xorb
aad
jmp
cld
repnz
xorb
jo
pop
sti
push
sbb
adcb
fwait
aas
pmaddwd
call
aaa
inc
ret
cmpsl
push
mov
je
decl
roll
outsb
popf
out
push
pop
nop
xchg
dec
pop
test
loopne
sbb
sub
imul
scas
popa
push
neg
adc
fisttps
xor
add
dec
mov
xlat
in
insb
shrb
lea
cs
pop
lock
cwtl
cmc
and
add
dec
mov
mov
jp
or
pop
jne
mov
mov
enter
mov
add
and
or
mov
or
lods
fld
test
cmp
and
mov
mov
orb
mov
cmpsl
xchg
adc
mov
repnz
push
mov
test
adc
add
bnd
or
xchg
bound
mov
fdivs
test
xchg
leave
pop
push
xor
push
cwtl
or
mov
cmp
xchg
sarb
iret
addps
xchg
dec
and
add
sahf
push
outsb
scas
sbb
add
mov
rolb
nop
hlt
out
add
sbb
cmpsb
dec
pop
leave
orl
repnz
lds
in
mov
push
mov
mov
mov
mov
test
xorl
mov
adcb
sbbl
sbb
push
adc
dec
icebp
xor
std
lahf
repz
mov
cwtl
and
aad
addb
out
lds
mov
and
adc
icebp
sbb
ror
test
sub
adc
sbb
mov
shrb
push
nop
jecxz
shll
pop
pop
jo
xchg
sbb
mov
cmp
mov
sub
dec
dec
popa
sbb
popa
push
xchg
dec
out
xor
popa
jg
mov
jno,pt
xchg
loope
insb
mov
pop
and
sbb
lock
rcr
jo
pop
xchg
mov
shl
sbb
mov
sub
dec
add
mov
cmp
rcr
jl
cmpsb
inc
xlat
push
cmpsb
aad
xchg
out
jl
lds
cmp
pop
fistps
lea
xor
xor
movsl
adc
sbb
gs
sub
xor
rcrb
outsb
mov
jno
sbb
mov
in
or
pop
jle
or
cld
rcrl
loopne
mov
mov
jns
push
dec
pusha
or
cmp
and
mov
ficomps
inc
imul
mov
mov
aas
xchg
sarb
gs
inc
cmp
cltd
inc
stos
cli
fs
ret
ss
std
ljmp
sbb
inc
xor
xchg
and
mov
inc
mul
add
ret
or
inc
mov
mov
cmp
dec
cmp
aaa
lret
inc
and
aam
lret
xchg
adc
iret
fimuls
pop
nop
push
aad
sub
pop
ljmp
inc
sbb
or
int
sbb
add
psrlw
shl
imul
add
jp
cmpsb
push
cltd
call
cs
lahf
daa
inc
jl
xchg
dec
enter
or
add
mov
and
push
sbbb
mov
adcl
fstl
das
mov
xor
xor
cmpsb
inc
add
inc
mov
pop
and
mov
pop
push
lret
mov
xor
dec
jae
popf
sbb
and
sub
push
mov
pusha
clc
mov
popa
sub
xchg
repz
sahf
sbb
xorl
mov
mov
enter
pop
sub
insb
xchg
loop
sahf
in
inc
inc
pop
es
insb
stos
xchg
pop
or
jl
inc
pop
fnstsw
dec
push
cwtl
imul
lahf
inc
push
cli
pop
mov
xchg
test
cmp
rorb
pop
adc
shll
pop
sbb
adc
pop
mov
sub
addr16
faddp
fcompl
push
stc
daa
ja
mov
jle
fnstsw
fiadds
aam
jb
mov
outsl
xchg
mov
repz
imul
insl
adc
popa
pusha
addl
xor
in
adc
les
cs
mov
popa
pop
mov
add
or
hlt
push
sarl
repnz
cltd
inc
out
sbb
scas
cmpsb
xorl
or
add
scas
add
punpckhdq
xor
test
mov
pop
cld
adc
xor
aad
mov
adc
fildll
subl
or
or
testl
stc
inc
xor
sbb
lods
cli
mov
movsl
sti
xchg
test
xor
bound
sub
enter
pop
cmpsb
clc
aaa
lea
cltd
push
cltd
adc
mov
dec
adc
hlt
sarl
pusha
inc
in
sub
inc
jp
xchg
add
xchg
aad
fsubs
testb
cld
aas
xchg
add
pop
fs
repnz
in
into
mov
je
xor
sub
arpl
add
cmp
loope
lods
lock
mov
add
sbb
cs
jmp
xchg
enter
fwait
cld
lock
adc
sar
aaa
gs
xchg
dec
je
jp
push
int
xor
cli
loope
data16
sbb
push
jno
add
and
sarl
mov
mov
push
fists
add
jnp
std
loope
cwtl
or
mov
jbe
lcall
xor
or
lahf
push
popf
inc
mov
andb
pusha
inc
outsl
repnz
cmpsl
inc
cmp
mov
test
mov
ljmp
jecxz
fwait
push
xchg
in
sub
mov
faddl
add
sbb
jne
js
lock
call
mov
push
out
mov
jmp
jae
jg
pop
std
lds
add
frstor
lds
adc
in
mov
sub
mov
pop
jmp
ljmp
lea
call
imul
mov
rolb
mov
xor
fldt
inc
ret
inc
mov
jo
iret
call
ficompl
pop
jmp
call
cmp
adc
stos
movl
or
movsl
int3
gs
scas
cmp
lds
cltd
dec
nop
in
mov
adc
pop
push
ret
add
rcll
arpl
adc
sub
bound
or
mov
mov
jp
popa
nop
inc
lock
dec
je
lret
test
fsubs
and
inc
lock
mov
ss
sahf
dec
add
push
pushf
xchg
jp
cmpsb
add
mov
cmp
dec
add
inc
inc
xor
push
insl
or
dec
and
xchg
or
test
pop
mov
dec
mov
dec
ja
sbb
je
imul
add
sub
sti
add
or
fsts
sub
fwait
pushf
fstpt
or
xchg
sarl
push
mov
mov
jmp
fcmovu
adc
sub
nop
push
push
xor
out
jnp
jo
lahf
xchg
rcll
and
push
jmp
shlb
add
xor
cmc
daa
adc
mov
push
cwtl
jo
test
pop
inc
and
fnstcw
push
add
rorl
int3
sub
popa
out
pusha
push
fdivrl
adc
add
les
push
pop
mov
xchg
cltd
add
dec
mov
jge
pop
int
adcl
dec
popa
mov
mov
lea
mov
sub
mov
sbb
jne
in
cltd
mov
add
jb
push
test
mov
lods
std
cmp
idivb
mov
jbe
pop
xchg
in
cmpsl
or
jnp
mov
push
enter
push
xlat
rorl
scas
aam
add
call
inc
dec
push
sbb
pop
adc
cmp
iret
add
das
adc
mov
dec
fwait
xor
jne
mov
sub
sar
aas
fwait
mov
in
xchg
or
stos
cmp
ss
xchg
jl
pop
jbe
adc
jo
xlat
xor
jb
add
push
cld
sub
pop
adc
mov
cmp
mov
cmpsl
sbbl
lock
adc
test
frstor
jmp
adc
and
rcr
mov
add
mov
push
in
push
jmp
loopne
and
inc
dec
pop
out
mov
xchg
cmp
in
ret
loop
fimuls
testb
adc
lret
loopne
aad
aas
mov
xchg
sbb
mov
mov
inc
sbb
dec
jle
iret
test
xlat
dec
fsubs
xor
xchg
fistl
adc
mov
bound
sbb
fstpt
mov
jb
add
and
fcmovne
shlb
js
add
and
push
sbb
pop
clc
add
sbb
cwtl
ljmp
xchg
mov
stc
aas
testl
xorb
sub
in
sub
scas
inc
pop
add
lods
sar
mov
ljmp
add
lcall
mov
mov
push
jecxz
dec
mov
mov
sub
xchg
scas
pop
lods
out
and
repz
insl
mov
sbb
and
stc
cld
mov
sub
shll
push
pop
sbb
and
insb
cld
or
jne
and
adc
shlb
rcll
aam
sub
add
push
stos
int3
in
repz
ret
dec
aam
aam
sbb
pop
cmp
xchg
mov
mov
jne
push
aaa
popf
sbb
cmc
cmp
cltd
cmp
std
mov
outsb
test
sub
push
shll
and
test
add
pop
cwtl
mov
add
add
leave
cmp
pop
xchg
sbb
mov
jg
aaa
or
das
dec
jl,pn
add
popa
sbb
sbb
pop
mov
or
pop
neg
mov
arpl
dec
lcall
jp
leave
pusha
loope
and
fs
fbstp
adc
hlt
lcall
jmp
jns
clc
mov
insl
or
pop
push
mov
leave
or
mov
je
faddl
adc
lahf
push
clc
pop
pop
cmp
mov
cld
add
out
out
xchg
add
cld
or
stos
xchg
mov
roll
jne
bound
mov
pop
mov
fnstsw
adc
lock
mov
pop
sub
xor
andl
pop
adc
mov
jno
arpl
pushf
sbb
add
or
jg
test
or
outsl
cmp
and
adc
mov
inc
push
xchg
scas
pop
out
adc
xor
dec
add
jg
cs
sub
push
cmpsb
lea
ja
addr16
cmp
and
js
xchg
add
adc
js
dec
and
push
sbb
cld
push
mov
jge
jns
int
test
mov
loopne
mov
les
lods
pop
mov
mov
and
aas
mov
mov
inc
out
daa
push
in
push
shrb
test
push
cltd
lock
cvtdq2ps
out
adcl
sub
roll
push
inc
pop
pop
pushf
shlb
cmp
inc
jnp
jo
add
cmp
mov
add
imul
sub
dec
in
jecxz
dec
popf
int
xor
pop
adc
es
or
mov
loop
xchg
cli
je
in
pop
xchg
div
loopne
mov
add
daa
mov
push
jb
inc
or
pop
into
fstps
cmp
int3
mov
dec
add
mov
subb
lcall
mov
fsubl
cld
fcomp
pushf
icebp
cmp
mov
mov
push
sub
frstor
jo
cltd
rolb
add
lahf
out
xor
jno
fs
mov
pop
xchg
sub
mov
xor
dec
je,pt
out
popa
xor
pop
fidivl
dec
shlb
lret
push
adc
cmp
cmp
incb
adc
popa
xor
sub
popf
adc
roll
scas
mov
jmp
pop
das
sub
es
mov
or
cmpsb
push
dec
pop
clc
jle
adc
or
std
inc
adc
call
add
mov
mov
mov
cld
and
push
sbb
dec
adc
mov
ret
or
dec
xchg
jnp
pop
popa
fimuls
mov
mov
jg
ror
lock
mov
xchg
out
aas
pop
je
dec
ud1
xor
mov
mov
sub
shl
and
or
aaa
dec
mov
pop
test
adc
or
mov
lret
dec
std
cld
xchg
sbb
lret
les
rorb
mov
push
pop
xor
in
jge
xchg
jbe
jle
sbb
mov
xchg
stc
push
mov
adc
add
mov
mov
mov
push
or
loope
xchg
mov
dec
daa
jle
jae
rcr
nop
add
call
outsb
or
adc
lea
test
hlt
fbld
add
or
jl
jno
andl
jle
dec
lock
xchg
mov
into
or
shll
out
cmp
fistps
fcoml
pop
outsl
add
pop
call
vpaddsb
out
and
jnp
testb
push
xor
int3
fists
mov
xchg
push
fnstcw
push
xchg
fistpl
mov
scas
popf
sbb
add
or
jl
dec
fmul
dec
fcomps
nop
mov
add
sub
into
lahf
xchg
cmpb
jo
cs
lret
mov
mov
add
add
popa
test
clc
or
popf
jb
lods
loopne
push
xchg
pop
pop
fsubl
and
inc
adc
and
test
cwtl
out
and
mov
fiadds
sub
hlt
jno
inc
ret
jle
pushf
dec
mov
mov
xchg
imul
add
sub
sbb
mov
pusha
adc
jnp
aaa
push
cmp
dec
lods
xor
push
and
cmp
mov
sbb
ja
loop
dec
mov
stc
adc
add
loop
mov
push
in
add
add
in
push
call
jl
out
cmp
jp
sahf
pusha
pop
xchg
movsb
rclb
xchg
jg
pusha
xor
icebp
movsl
fdivrp
and
ret
stc
outsl
xchg
add
jb
mov
js
cmpsb
idivl
es
enter
xor
jo
cli
aam
sbb
mov
cmp
push
lret
xchg
cmp
add
mov
mov
rorb
dec
dec
mov
scas
pusha
pop
add
add
or
lar
aad
pusha
in
rorb
inc
std
sbb
sbb
and
aad
outsl
lahf
mov
sbb
xor
stc
and
and
jmp
sbb
jo
movsb
inc
pop
dec
mov
movsl
inc
jmp
sbb
mov
ds
pop
sub
int3
cmp
pusha
mov
add
adc
popa
mov
cs
mov
or
push
fmul
lds
push
pop
jne
popf
iret
jg
or
adc
jne
xchg
cmp
aad
rcll
fstpl
mov
lods
or
adc
add
icebp
adc
add
xorb
mov
or
and
xor
fisttpll
sbb
sub
sti
dec
and
jg
jo
push
sarb
loopne
lret
scas
or
jnp
add
xchg
pop
push
cmpb
or
sbbb
movsl
or
std
iret
nop
inc
outsl
and
fiaddl
lahf
xchg
out
int
or
call
testb
stos
xchg
or
or
cmp
push
sub
lret
push
mov
daa
jb
sbb
je
pop
jecxz
dec
mov
mov
jecxz
dec
mov
fwait
push
aaa
push
std
das
lret
out
outsb
cmpsb
popa
mov
into
xchg
dec
iret
add
push
mov
paddb
jg
jno
aam
or
pop
or
mov
jo
out
fcoml
mov
mov
xlat
loope
xchg
outsl
outsb
fs
pop
sbb
adc
sub
mov
mov
mov
addl
push
in
push
adc
sub
divl
shlb
mov
mov
mov
popf
test
imul
inc
inc
in
and
xchg
jnp
movsb
cmp
loopne
shr
repnz
xchg
jno
or
pop
ja
add
movsb
jnp
jb
ficoml
imulb
push
imul
push
lods
pop
add
insb
scas
hlt
xchg
mov
jmp
adc
adc
cmpsb
inc
in
jne
adc
mov
test
daa
xchg
gs
xor
ja
push
int
adc
pusha
stos
or
cmc
sbb
pushf
jg
add
rcrl
mov
lods
jno
add
hlt
clc
sarl
mov
dec
iret
bound
xchg
add
or
add
fldt
sahf
movsl
inc
adc
sahf
sbb
iret
push
mov
shr
add
cli
or
mov
xor
stc
daa
adc
xchg
mov
add
or
pop
mov
push
aam
das
leave
pusha
shrl
hlt
xchg
mov
dec
filds
psllw
add
pop
lock
sbbb
jmp
xor
pop
add
sub
push
mov
mov
loope
sbb
add
fsubrs
cmp
pop
sbb
test
add
imul
movsl
rcrl
call
pop
test
adcb
jge
cmp
sub
pop
aam
add
mov
iret
xor
mov
ret
test
xor
lahf
aaa
xchg
add
xor
cmp
or
pop
ds
mov
sbb
hlt
sti
adc
mov
fldenv
shl
rorb
stc
jp
cmp
data16
add
ret
cmp
imul
scas
adc
pop
fsubs
push
shll
dec
aaa
xor
adc
fisubs
pop
imul
imul
pop
clc
lods
test
jae
testl
call
add
mov
outsl
mov
sub
imul
mov
popf
pop
int3
cli
lea
stc
cmp
nop
fucomip
loop
push
jno
xchg
pop
add
daa
push
dec
jp
pop
andb
xor
jg
pop
push
dec
ja
lods
fisubs
jecxz
dec
pop
dec
cmpsl
sub
lret
inc
popf
or
nop
mov
or
into
xchg
imul
mov
mov
jmp
adc
xchg
imul
in
jp
scas
cs
sub
mov
add
push
jmp
jp
or
rolb
add
out
xchg
out
fidivs
cmp
xor
push
scas
dec
adcb
pop
adc
in
jp
dec
data16
sbb
rcl
xchg
repz
jae
sarl
mov
dec
shll
sbb
push
adc
or
loopne
push
adc
jo
pop
cmp
ja
add
dec
pop
or
in
and
out
imul
jo
cwtl
pusha
mov
fisttpl
xor
push
icebp
add
cmpsl
ror
xchg
in
nop
jl
frstor
icebp
inc
xchg
or
in
and
fisubrl
add
sub
inc
fldl
sub
mov
xor
and
pop
adcb
ds
das
and
pop
xorb
xlat
jo
or
lea
imul
cld
xor
test
daa
pusha
pusha
roll
ljmp
push
add
mov
xchg
add
dec
mov
add
sbb
popa
repnz
andl
or
ljmp
jmp
dec
dec
xor
imul
add
pusha
mov
hlt
call
mov
call
cmp
cmc
cwtl
dec
sahf
inc
shrb
mov
or
stos
mov
add
int3
add
sub
sub
pop
mov
adc
xor
xor
fimuls
adc
out
mov
push
call
andl
add
mov
daa
cli
pop
inc
imul
mov
add
repnz
or
into
cltd
push
nop
jns
aas
std
sbb
jg
insb
cmp
sub
cmp
pushf
out
fisttpl
dec
mov
or
mov
sahf
mov
ret
xor
loopne
lods
daa
jno
iret
mov
pushf
cs
inc
or
dec
cmpb
pop
sbbb
jle
or
imul
cmc
outsl
cmp
mov
sbb
pop
push
xchg
add
xchg
cmp
mov
mov
imul
int3
mov
cwtl
xchg
push
cmc
xchg
jmp
dec
xchg
rorb
sti
adc
pop
mov
adc
lea
and
dec
lock
daa
adc
int3
sbbl
dec
inc
or
test
inc
daa
stos
cmp
xor
mov
push
pusha
fwait
clc
cmpb
mov
sub
je
lahf
mov
add
sahf
and
popa
mov
adc
add
jge
mov
push
push
add
or
cmp
mov
pusha
lahf
fldz
or
ljmp
mov
sub
add
dec
inc
out
dec
xchg
test
mov
lock
lods
loope
repnz
pusha
adc
add
int
pop
test
in
xchg
inc
in
add
ljmp
pop
push
fstl
push
push
push
aas
icebp
repz
pop
out
lahf
push
pop
jmp
push
push
xchg
or
push
and
mov
and
xor
aaa
cmp
adc
mov
test
cmpsb
jns
aaa
mov
andb
aaa
push
mov
push
mov
or
dec
push
sbb
pushf
scas
popf
nop
int
dec
lret
les
mov
pop
cmp
iret
jmp
inc
popa
idivb
or
mov
sub
cmp
iret
add
in
jl
cmp
adc
scas
xor
mov
outsl
hlt
sbb
pusha
int3
push
pop
es
mov
daa
mov
mov
shrl
xor
xchg
lock
mov
jecxz
pop
mov
mov
cmp
xchg
push
mov
push
mov
mov
out
insb
jle
push
sbb
add
sbb
mov
test
addr16
hlt
and
push
adc
ljmp
push
push
pop
out
add
lret
mov
outsb
inc
mov
adc
cli
push
bound
scas
pop
orb
jnp
push
xlat
mov
cmpsl
inc
add
lea
aam
cmp
or
xor
addl
mov
push
fwait
ss
pop
jg
push
icebp
add
js
add
and
enter
mov
mov
xchg
cmp
das
in
sahf
lods
cmp
js
and
add
jb
das
sub
push
jo
test
jmp
test
fiaddl
int3
mov
jl
sub
xchg
mov
cmp
mov
or
popf
and
inc
mov
call
jmp
dec
movsb
ret
cmc
and
add
push
push
sti
pop
call
fldt
mov
jbe
movlps
sub
mov
stos
aaa
cmp
pop
gs
pop
add
inc
fwait
mov
fstl
pusha
add
or
lds
jge
imul
pop
jno
pop
test
iret
push
dec
mov
gs
insl
mov
daa
or
sbb
out
jp
mov
xchg
test
jl
dec
stc
int3
sbb
inc
pop
pop
add
push
jbe
movsl
aam
hlt
sbb
pop
adc
cmpsb
xor
pop
mov
shll
jo
inc
push
push
scas
int3
sbb
mov
jbe
xlat
repnz
xchg
mov
jnp
jo
bound
fcoms
aam
xor
outsb
and
push
mov
lcall
lcall
add
add
adc
sbb
fiadds
and
inc
push
dec
sub
imul
movsl
stos
testl
mov
dec
add
xor
pushf
or
add
repz
jne
mov
push
mov
lods
out
stos
add
sbb
iret
sub
push
sub
mov
inc
in
test
stos
leave
fdivl
idivl
dec
hlt
add
and
inc
mov
adc
push
repz
push
sbb
inc
add
movsl
das
iret
stos
imul
stc
leave
push
fiaddl
fidivl
pop
mov
mov
cmp
stos
inc
and
icebp
xor
std
xchg
ret
mov
adc
mov
or
stc
popa
movb
nop
repnz
mov
test
and
adc
jae
push
ja
mov
mov
cmpsl
cmp
les
jo
loope
sub
pusha
add
push
sbb
or
clc
pop
fldcw
sbb
ret
push
jae
ljmp
mov
jbe
test
outsb
cmpsl
add
fwait
add
popf
push
movsl
fmull
xchg
and
pop
out
sar
or
insb
cwtl
add
xor
xchg
jno
aad
hlt
popa
pusha
test
pop
fiaddl
xchg
cli
sbb
inc
enter
mov
push
inc
add
mov
pop
lret
je
dec
jg
push
mov
push
and
popf
mov
stc
pop
ljmp
mov
out
mov
jmp
jge
ss
enter
sub
sti
or
repnz
mov
mov
das
and
cmp
or
test
jl
add
sbbl
xor
mov
bound
add
jp
push
sbb
dec
nop
into
push
adc
pop
pop
add
add
lods
ja
pop
fcompl
xor
add
fisubrs
jl
aam
or
std
icebp
adc
rcr
pop
inc
inc
dec
pop
push
popf
repnz
sub
jge
cli
sub
addr16
pop
shll
mov
pop
shrb
mov
mov
dec
lcall
ficoms
lods
in
hlt
sbb
cmp
push
xchg
mov
add
mov
or
mov
mov
jo
popf
stc
mov
ret
mov
add
push
add
sub
pop
pop
imul
rorl
aam
fstpl
or
and
mov
xchg
mov
or
mov
dec
clc
mov
adc
xchg
cltd
pop
lret
cmp
test
dec
nop
ret
cmp
and
push
sbb
sub
mov
jnp
pop
or
jmp
sbb
mov
movsl
clc
rorb
cli
xor
fldenv
xor
mov
inc
jle
push
xchg
push
pop
mov
nop
adc
and
mov
out
adc
pop
push
psubusw
je
mov
sub
sub
mov
adc
dec
mov
and
push
mov
fldenv
int3
adc
faddp
cmp
xchg
add
lds
rclb
repz
add
daa
mov
jl
fmull
out
xor
mov
sar
and
cli
lods
aas
and
push
xor
inc
xor
jno
dec
rep
push
loop
xchg
popa
nop
adc
push
int3
ss
movsl
xchg
shrl
pop
scas
movsb
dec
repnz
or
adc
push
roll
xor
mov
xor
shrb
test
adc
add
push
cmpsl
in
insl
and
movsl
mov
addb
cld
and
mov
inc
sub
add
adc
fdivl
mov
loope
mov
loop
sub
or
stc
jg
sbb
repnz
and
gs
sbb
mov
repnz
into
jne
cmp
xchg
mov
fistpll
rolb
sub
pop
int3
sub
jge
rorb
hlt
adc
cmc
out
ja
or
sub
mov
hlt
sarl
sub
repnz
jle
push
test
mov
mov
mov
add
dec
in
or
stos
add
push
or
fdivrl
popa
push
das
mov
xlat
mov
das
mov
cs
sub
pushf
rcrb
dec
nop
sub
mov
insl
bound
add
mov
pop
call
in
lea
xchg
int
sti
pop
jo
jecxz
dec
loope
sbb
ja
cmp
rcrb
fadds
inc
adc
insl
add
ja
lds
mov
mov
or
or
inc
insl
or
dec
mov
dec
xlat
and
push
enter
ret
inc
mov
inc
and
pop
inc
sub
movsb
addb
adc
ljmp
inc
jmp
dec
hlt
out
add
mov
rclb
stc
cmp
arpl
pop
mov
and
js
mov
jb
push
ljmp
fcmovbe
xchg
and
aaa
jbe
fs
add
int3
stos
insl
popf
negb
mov
stos
mov
add
cmpsb
cmp
daa
or
xchg
inc
outsl
mov
pop
lea
push
cmp
jbe
nop
mov
dec
push
jno
adc
push
mov
and
mov
jns
inc
jg
mov
je
add
sbbb
xlat
andb
mov
insb
add
inc
fnstcw
outsb
fisubl
sub
cmc
in
or
pop
mov
movsl
and
mov
insb
mov
adc
fdivr
popa
in
adc
jne
dec
add
out
sub
cmp
adc
jnp
jno
cmp
xor
sub
dec
lods
jnp
mov
pushf
arpl
push
or
cmp
xlat
and
or
dec
mov
out
lea
mov
aam
inc
ficoms
sbb
jb
mov
jge
iret
sbb
bound
rcll
push
jle
fimuls
inc
mov
out
mov
popa
cmp
je
add
roll
movsl
dec
xchg
xor
jle
xchg
push
outsb
flds
or
mov
testl
mov
dec
jl
add
jmp
push
scas
test
pop
dec
xchg
outsb
bound
loopne
push
jns
pop
sub
mov
add
inc
lds
jge
dec
xchg
jmp
cli
mov
xor
push
pusha
in
stos
cld
testl
je
jmp
add
andl
popf
sub
loopne
mov
sub
jle
xchg
and
jo
lahf
in
sbb
jbe
xlat
push
stos
div
das
fiaddl
clc
aaa
divl
add
add
outsl
repz
hlt
push
icebp
add
push
adc
cli
cli
xchg
in
scas
mov
jno
sbb
mov
cli
outsl
push
ds
adc
pop
xor
sub
std
dec
adc
dec
adc
int
push
xchg
xchg
push
adc
shr
dec
mov
pop
pop
jge
add
add
ljmp
pop
lahf
sub
das
jne
notb
mov
aaa
jecxz
adc
xor
mov
add
inc
add
mov
push
lds
loop
add
gs
jno
mov
out
mov
addb
iret
stc
in
lahf
push
sbbl
fcoml
add
es
adc
and
xor
pusha
ja
mov
in
pop
lods
add
lahf
out
fcomps
ja
push
sub
and
push
or
out
mov
cmp
xchg
pop
push
ljmp
mov
xchg
adc
pop
imulb
fstpt
fnstcw
inc
nop
xchg
xchg
jbe
inc
push
out
ret
add
xchg
mov
add
nop
mov
jne
stos
cltd
movsl
sub
test
adc
inc
gs
mov
inc
dec
loopne
xchg
xchg
lret
mov
mov
or
xchg
mov
lds
mov
sub
sbb
cld
add
cmp
call
clc
inc
xchg
aaa
cltd
add
cli
ret
mov
in
and
movsl
xor
dec
out
imul
lret
mov
fldl
bt
dec
or
lea
fs
add
ficoml
push
push
jecxz,pt
rclb
add
cld
mov
cmp
or
sub
lods
imul
xchg
pop
xchg
movsl
ret
jmp
push
daa
popa
test
add
push
pop
add
inc
movsl
outsb
loopne
pop
adc
mov
std
adc
adc
js
repnz
stc
xchg
leave
fldcw
push
mov
lahf
xor
pop
icebp
cld
fs
hlt
or
pop
je
loope
mov
mov
aas
das
inc
push
insl
fisttpll
add
cmp
dec
loope
xorl
fnsave
idivb
add
and
push
mov
add
xchg
inc
xchg
mov
lahf
inc
mov
mov
sub
and
push
faddl
jae
repnz
aam
outsb
xchg
pop
xor
popa
push
loope
pop
aad
sub
ret
pop
jmp
adc
inc
push
adc
mov
pop
std
test
loope
insl
add
aaa
popf
sti
or
loope
mov
inc
xor
jp
or
adc
pop
repz
leave
outsb
jg
add
add
xchg
cli
leave
sbb
xor
inc
in
nop
lock
idivl
into
mov
jne
popa
mov
mov
sbb
mov
inc
call
rcll
outsb
aad
flds
dec
nop
mov
das
fs
shrb
test
jle
lcall
jp
fcomi
jo
loop
insl
inc
sbb
mov
or
cmc
xlat
mov
sub
mov
std
mov
pop
sbb
mov
rolb
mov
in
jnp
xchg
pusha
out
mov
cmp
cmp
addr16
inc
push
xchg
cld
xchg
out
jo
add
enter
mov
cmp
fimuls
test
pop
dec
cli
pop
enter
xchg
xchg
out
cmc
adc
stos
mov
sub
or
out
dec
adc
xor
in
xchg
fiaddl
jne
jl
push
push
imul
scas
rcll
loopne
adc
into
cmp
mov
mov
sub
in
add
mov
popa
xchg
in
in
test
out
add
fistps
test
jae
rorl
fsubp
aad
xor
xor
pop
es
adc
or
and
push
sti
inc
xchg
out
lea
and
dec
adc
mov
mov
insl
and
xor
add
iret
sub
sub
inc
cmp
dec
or
jmp
add
shr
adc
adc
ss
popa
aaa
mov
or
fcoms
jmp
jle
jne
and
bound
popa
sbb
inc
cmp
push
test
xchg
xchg
mov
or
add
clc
into
adc
lret
pop
jo
pop
sbb
sub
or
jmp
jne
sub
cmpsl
add
dec
add
loope
int3
je
dec
pop
and
sbb
push
std
ljmp
push
inc
fnstenv
or
jno
je
pusha
or
in
cltd
push
pop
push
js
or
pop
jns
inc
or
popf
jl
faddl
sub
pop
adc
pop
pusha
jae
mov
mov
cmpsb
popa
mov
dec
jo
rcll
xchg
dec
cs
mov
mov
pop
mov
dec
jp
mov
push
dec
imul
and
rorl
lock
pusha
jp
and
add
xchg
lahf
popa
int
imul
pop
lods
dec
mov
nop
xchg
insl
and
add
xor
mov
repz
xchg
add
push
inc
push
sbb
add
and
or
adc
int
mov
sahf
leave
mov
jecxz
es
lods
pusha
cld
in
andl
jp
mov
xor
movl
lret
mov
jae
pop
pop
sbbl
ja
popa
lahf
enter
dec
or
sahf
inc
xor
shll
jle
cmc
dec
sub
push
loop
add
fdivs
inc
add
lock
dec
xor
push
dec
jg
dec
mov
mov
test
jnp
add
xsha1
cmpsb
mov
mov
sub
sar
lret
cmpsl
and
mov
pop
xorl
clc
push
int
fs
movsb
movb
pop
out
test
bound
rcrl
insl
mov
stc
sahf
int3
cmp
incl
xchg
cli
mov
pop
add
mov
in
stos
xlat
rclb
push
jo
mov
xorb
test
rorb
popa
xor
cmpsl
es
std
fildl
loopne
sahf
test
mov
pop
sub
dec
out
push
dec
arpl
fdivrl
in
test
aaa
adcb
pop
stos
inc
dec
pop
lret
push
aad
fistl
pop
and
adc
adc
or
lcall
add
jnp
jge
movsb
int
data16
mov
or
jno
aad
addr16
pop
adc
push
scas
mov
pop
adc
movsb
mov
jle
in
sbb
push
data16
popa
in
fwait
push
mov
cmc
test
lock
pop
cltd
mov
inc
ret
and
inc
adc
add
stos
adc
jmp
inc
subb
les
ds
sbb
pop
adc
jg
mov
jae
pop
stos
clc
orb
repz
add
int
mov
xchg
jg
sub
enter
mov
mov
jmp
dec
add
jae
add
dec
xchg
pop
jns
sub
dec
mov
addr16
pop
daa
inc
sbb
cld
cmp
and
xor
add
cmpsb
mov
mov
clc
push
dec
aaa
jo
sub
push
xor
pop
sarb
xchg
sti
and
cs
addr16
mov
outsb
xchg
cwtl
add
xor
cmpsl
sub
xchg
cwtl
and
pop
dec
add
mov
add
push
dec
out
adc
sub
xchg
enter
mov
rcll
mov
jmp
xor
mov
das
psraw
movsb
cmp
imul
lret
sub
into
in
and
xor
adc
mov
test
pop
xor
pop
outsl
cli
add
add
lods
and
mov
push
jl
mov
add
pop
cmp
fsubrl
inc
sbb
pop
xchg
mov
mov
xor
in
push
int
arpl
nop
push
jle,pt
pop
pop
jle
dec
mov
aas
lods
sub
das
cmpsl
pop
outsb
and
stos
pop
lods
xor
aad
push
cwtl
lea
inc
mov
mov
xor
pop
xchg
sub
ss
shll
enter
div
int
dec
push
dec
rorb
sub
sub
dec
xchg
inc
lods
mov
fisubrs
add
lret
or
add
or
cmp
stos
fmuls
xor
les
pushf
in
add
or
out
gs
testb
pop
push
jo
pushf
add
ss
pop
xchg
cwtl
pushf
mov
mov
pop
lcall
mov
jne
in
add
pop
adc
mov
jle
sub
lret
scas
imul
aam
xor
out
mov
or
jne
nop
jns
lods
cmp
pop
pop
cwtl
and
add
dec
stos
jns
ds
lahf
fmull
das
jge
ja
lods
cs
shll
xor
inc
mov
cmpl
sub
popa
mov
adc
popf
in
push
loopne
jns
je
mov
cmp
dec
dec
xor
add
push
sub
pop
add
popa
test
loopne
mov
cmpsb
andb
mov
inc
dec
add
cmp
add
pop
pop
nop
xchg
rcr
add
movsb
dec
mov
cmp
jnp
insl
xchg
add
leave
sub
cmpsl
jnp
cmpsl
in
inc
inc
cmpsb
dec
les
aas
push
repz
push
mov
add
dec
cmpsl
push
push
push
or
jp
movsl
flds
sub
or
jmp
cmp
fadds
adcl
add
pusha
das
fbstp
iret
xchg
subb
pop
dec
decb
gs
push
call
xor
push
jns
xchg
cwtl
sbb
or
sbb
xor
add
push
push
fisttpl
lds
pop
mov
mov
xor
cwtl
sub
mov
or
gs
loopne
lds
nop
mov
ja
pop
clc
jmp
aas
lcall
sbb
mov
out
or
cmp
popf
add
pop
or
rolb
add
push
and
les
or
adc
adc
push
test
das
sub
push
dec
or
stc
js
nop
stc
xchg
mov
pushf
sub
push
push
iret
icebp
lods
cmpsl
scas
adc
inc
out
fdivrp
push
add
loope
aaa
icebp
insb
movb
xor
mov
fnstenv
fdivs
push
pop
xchg
inc
mov
and
popf
mov
and
adc
cmp
jg
jge
add
hlt
icebp
lret
push
movsb
xor
push
aad
insl
neg
mov
adc
xor
xchg
xor
pop
call
imull
mov
sub
lods
in
xchg
rclb
xorb
sahf
jle
xor
pop
mov
rcll
pop
push
and
mov
insl
test
loope
fidivrl
push
xchg
popf
push
lods
and
and
xchg
push
mov
mov
push
inc
and
xchg
lahf
test
xchg
ficoms
stos
sub
xor
pop
cld
nop
aaa
lahf
push
sti
add
hlt
popa
jmp
out
jno,pn
and
push
rcrb
and
aad
cmc
enter
pushl
xchg
pusha
test
mov
sub
iret
mov
enter
sti
mov
pop
ret
mov
mov
push
inc
and
nop
sti
mov
popf
hlt
pop
fcompl
add
dec
idiv
mov
xchg
xchg
fwait
lds
iret
in
repz
scas
xchg
push
add
cld
ja
adc
in
sub
cwtl
scas
dec
lods
adcb
mov
push
pop
je
incb
adc
push
mov
xchg
mov
jg
insb
stos
jmp
sub
xchg
movswl
addl
dec
inc
mov
addb
fistps
add
pop
mov
xor
mov
aas
dec
adcl
xlat
xor
cmp
jo
jmp
mov
dec
fsubl
jmp
mov
cmp
push
dec
mov
xor
pop
dec
fstpl
inc
mov
mov
jnp
out
mov
ljmp
stos
jb
fldl
scas
mov
mov
cmpsl
jne
xor
add
mov
lret
adc
clc
push
xchg
push
cmp
pop
in
rorb
dec
js
cmp
pop
movsl
shll
fwait
sbb
sub
mov
xchg
fidivrs
push
lods
test
loope
loopne
or
cs
dec
inc
out
adc
movsl
movsb
pop
mov
dec
imul
lods
mov
pop
and
adc
mov
xor
sbb
or
mov
mov
xor
sub
aas
push
add
push
add
cmp
js
lret
or
stos
insl
lahf
mov
call
cmp
js
nop
js
push
add
and
dec
sub
sbb
popa
push
aad
and
push
sar
add
rcrb
popf
std
cmp
push
push
mov
cmpsl
das
mov
lods
scas
hlt
dec
bound
inc
inc
xchg
icebp
mov
movsb
pop
sub
mov
mov
data16
jecxz
inc
das
add
jmp
mov
iret
mov
enter
je
lock
inc
add
cmp
pop
jmp
out
mov
scas
test
jmp
test
push
pop
sub
add
inc
cmp
jns
sub
das
mov
push
sbb
mov
cmp
fistps
pop
lret
and
cs
mov
xchg
mov
pop
jecxz
mov
lret
stc
add
loope
in
scas
in
fildll
cwtl
inc
arpl
jp
cmp
xchg
lcall
cmp
enter
dec
repz
fisttpl
inc
dec
and
jne
mov
shl
subl
cmpl
sub
clts
aam
pop
mov
fsubl
adc
jbe
imul
mov
cmp
add
mov
and
cmp
fnstsw
pushf
sbb
pop
add
push
pop
lods
jle
and
lea
add
jae
or
mov
pop
fimuls
lcall
push
push
stc
adc
fisttpl
loope
xchg
push
mov
fbstp
movswl
sbbb
or
pop
in
lods
out
adc
sti
int
outsb
mov
dec
mov
and
test
add
pusha
sub
jmp
jg
scas
mov
lock
xchg
xchg
lds
jnp
or
lds
loope
add
je
shll
push
xchg
dec
pop
cmpsb
push
add
das
pop
imul
jecxz
add
mov
cli
mov
in
sahf
add
out
sbb
int
cmp
adc
ds
or
fdivs
popf
and
adc
mov
xor
or
add
mov
fimull
gs
jno
mov
mov
jp
je
loopne
push
mov
lods
inc
enter
mov
xchg
popf
push
mov
and
jno
or
adc
sbb
lret
add
push
nop
div
add
cmp
in
mov
icebp
add
test
xor
lret
or
or
push
jge
lock
insl
jg
popf
loope
lcall
or
and
add
inc
sub
cmp
fisubrs
imul
mov
push
push
push
pop
dec
pop
mov
mov
xor
and
or
add
daa
mov
add
mov
lods
cwtl
stos
js
nop
and
fstps
jl
pop
dec
ljmp
repz
pop
sbb
xor
data16
mov
inc
mov
dec
sub
cmp
nop
cld
mov
roll
dec
mov
std
hlt
test
stos
je
mov
pop
ja
add
nop
sub
sub
jns
jae
mov
cmpsl
lahf
test
das
clc
fcoml
cmp
sbb
pop
cmp
mov
mov
call
insb
inc
lret
push
xor
mov
insl
ret
lods
add
ds
notb
mov
sub
popf
test
sub
jecxz
sbb
lea
mov
push
mov
pop
call
test
lcall
sbb
fstl
inc
test
das
jnp
sar
push
mov
mov
mov
mov
pop
popf
and
mov
sbb
lret
xchg
xchg
and
sub
ss
js
and
sub
mov
xchg
repz
sbb
xchg
add
add
rcr
jns
sub
push
shll
add
xchg
sahf
out
jb
sub
dec
rcrl
es
clc
aaa
mov
mov
mov
lahf
fnstcw
add
cld
lods
addb
ss
cs
mov
loope
cs
inc
jno
dec
add
cltd
cmp
pop
jg
or
aaa
push
cmpsb
push
in
xchg
loopne
orb
bound
pop
mov
adc
aad
scas
xor
cs
inc
jo
push
mov
add
xor
sub
jno
sub
add
push
push
mov
add
pusha
cltd
push
jnp
sbbb
mov
popa
outsb
test
and
push
jge
xor
daa
xlat
inc
or
xor
sbbb
xchg
push
push
dec
enter
mov
stc
cs
and
inc
daa
jl
inc
sarl
outsb
inc
int
sahf
lahf
dec
adc
sbb
mov
cld
push
nop
icebp
push
dec
inc
aad
mov
xlat
pushf
sub
cwtl
incb
movb
pop
nop
cmc
pop
cmp
sbb
sub
inc
xchg
pop
pop
sub
test
sub
mov
jmp
scas
adc
notb
mul
add
cltd
or
loopne
lret
mov
mov
ret
inc
je
pusha
push
mov
je
out
and
outsl
arpl
jecxz
cmpb
or
adc
or
adc
out
mov
sub
popa
xchg
repz
sbb
pop
cli
call
lods
insl
aaa
shrb
sbbb
in
pop
rorl
pop
pop
and
adcb
pop
mov
add
cltd
daa
cmp
jmp
sbb
jecxz
jle
and
mov
pop
loop
adc
sub
and
std
pop
mov
inc
xchg
gs
jecxz
add
xchg
jb
nop
into
add
pop
je
les
mov
clc
sub
insb
push
pushf
mov
xor
out
mov
addl
push
in
push
dec
jmp
mov
cmp
repz
or
sbb
cmc
pop
cmp
repnz
mov
mov
adc
sub
mov
movsl
repz
clc
addr16
pop
mov
cwtl
sub
cmp
add
sbb
mov
popf
sarb
inc
jbe
dec
lods
repnz
lea
add
xchg
cmpsl
lret
arpl
add
mov
sub
dec
imul
and
pusha
cmpsb
mov
sub
fcomps
sarl
iret
fs
and
lahf
xor
push
pop
enter
popf
xchg
or
or
cwtl
sbb
stos
add
out
in
insb
sub
push
xchg
mov
das
add
sbb
or
loop
rorl
xchg
out
lds
xchg
pop
mov
add
xchg
bound
test
popf
add
mov
sub
push
mov
or
xor
dec
pop
pop
mov
fidivrl
addb
xchg
mov
fsubrs
shr
in
mov
leave
imul
jbe
ss
dec
icebp
in
xor
test
insl
add
ljmp
or
test
stc
roll
cmp
sub
movb
in
sub
cld
pop
jb
add
xchg
adc
jb
cmp
lock
arpl
cld
mov
add
out
cmp
sahf
cmp
mov
jb
mov
insb
sbb
xor
nop
pop
aam
mov
pop
jnp
jne
aaa
lods
jmp
leave
movsl
jo
xor
jg
icebp
cld
movsb
inc
mov
in
cli
xor
fisttps
and
stos
inc
add
xchg
test
in
sub
mov
repz
mov
loope
jge
add
xor
jle
sbb
xchg
xchg
sub
pop
inc
mov
popf
xchg
sub
jnp
outsb
shrl
out
test
loope
jbe
and
shr
outsb
loopne
dec
incb
or
pop
addb
mov
jge
inc
pop
rclb
xlat
cmp
sbb
add
xchg
sbb
lods
sub
pop
mov
add
movsb
nop
das
inc
sbbl
jg
jecxz
cs
popf
adc
jg
shrl
aam
dec
dec
jns
add
mov
xor
push
lret
and
inc
ja
add
push
mov
pop
nop
repz
mov
add
xor
mov
in
pusha
xor
add
xchg
xor
sbb
dec
lods
or
test
popa
loopne
and
mov
xor
dec
xor
in
push
mov
mov
mov
dec
push
repnz
gs
negl
in
lods
or
inc
adc
or
push
push
rclb
and
xlat
xchg
xchg
outsb
fidivs
pop
mov
xor
out
stc
sub
xchg
movsl
fmuls
add
fidivs
add
adc
inc
mov
xor
rcrb
inc
fisttpl
andb
adc
add
xchg
jge
cmp
pop
imul
mov
pop
enter
popf
or
jg
jge
mov
stos
dec
push
mov
repnz
faddl
pop
pop
inc
stc
mov
cmp
call
jns
cmp
cs
and
adc
and
cmp
lret
pop
fs
xchg
mov
loop
add
outsl
scas
mov
xchg
loope
mov
mov
cmp
or
and
mov
mov
jg
cs
ja
and
adc
mov
xor
daa
dec
into
lret
or
sub
fs
cld
call
sarb
es
pop
shrl
add
mov
or
fistpl
lods
and
fs
jge
sub
mov
inc
or
jnp
mov
adc
xchg
scas
stos
pop
and
notl
add
push
mov
pop
popa
popf
sbb
mov
dec
daa
xchg
and
xchg
jg
mov
dec
dec
jne
outsl
pop
xchg
outsl
leave
sub
gs
andl
mov
clc
cmp
dec
shll
inc
pop
push
sbb
push
sub
push
cmp
sarb
sbb
dec
mov
add
pop
xor
popf
mov
dec
sbb
movsl
mov
hlt
mov
mov
xor
push
and
test
ss
adc
mov
rolb
mov
mov
shll
push
jle
jo
add
imul
xchg
dec
pop
fsubl
cltd
add
arpl
mov
adc
jl
push
insl
jb
mov
mov
int
pop
push
sbb
push
sbb
iret
jno
test
jg
inc
push
sbb
xchg
sarb
cld
cli
inc
push
pop
mov
enter
push
xor
scas
xor
pop
lea
jbe
push
push
xor
in
add
lods
adc
in
imull
orb
dec
cmc
mov
in
insb
xlat
int3
outsl
xor
popf
test
jno
cwtl
daa
jns
mov
cs
sub
aad
sbb
ret
orb
aam
mov
mov
int3
or
loopne
add
aad
mov
data16
add
or
adc
jmp
fldt
push
aam
jle
dec
shll
loope
and
test
int
jne
add
lcall
mov
lock
repz
scas
pop
push
das
fistl
inc
test
and
cmpsb
cmp
in
loope
movsl
xor
shll
lods
dec
and
lahf
cmp
imul
out
mov
inc
testb
sarb
and
pop
mov
mov
mov
imul
andb
stos
mov
push
jge
cmp
add
nop
jl
ljmp
fmul
fcmovb
add
pop
dec
xchg
or
pusha
popa
jg
enter
push
stc
dec
pop
jmp
leave
add
loope
xchg
out
and
add
jg
push
sbb
test
adc
stc
dec
or
xchg
dec
fidivl
fistpl
dec
das
lods
shrl
lods
subl
pop
iret
mov
adc
sbb
jmp
push
popf
fcomi
fs
scas
int3
mov
test
inc
push
pop
push
out
mov
arpl
dec
mov
mov
dec
pop
int
mov
lea
arpl
jo
mov
lea
data16
sbb
dec
or
ficoml
jb
xchg
cmovo
bound
adc
sbb
cli
das
cld
addr16
cmpsb
add
mov
push
or
push
loope
pop
stc
in
xchg
and
andb
mov
adc
mov
mov
and
les
cmc
and
mov
adc
add
fildl
or
push
int3
jo
fidivl
dec
add
roll
and
dec
bound
xor
mov
cmc
dec
add
xchg
xor
outsl
imul
inc
cmpsb
popf
mov
cmp
enter
popa
adc
mov
jmp
aad
shlb
sbb
mov
mov
xor
ja
mov
push
ja
js
pop
push
mov
mov
rclb
jo
nop
push
aaa
inc
jge
shll
mov
cltd
mov
dec
ss
dec
fs
mov
add
rorb
xor
xchg
or
push
xchg
clc
mov
out
imul
push
sbbb
loop
dec
clc
dec
add
adc
lods
cmp
mov
add
repnz
pop
cmp
sar
mov
pop
fiadds
dec
out
or
dec
mov
fistpl
cmp
cmp
mov
add
aam
jmp
mov
jne
xchg
mov
push
jle
pop
push
add
scas
sub
daa
xchg
and
dec
jnp
push
add
mov
xchg
daa
dec
pop
fwait
adc
ret
test
or
jno
es
or
cld
mov
clc
shll
xchg
int
popf
mov
jge
mov
int3
in
dec
xor
adcl
in
ljmp
xchg
push
andl
lods
mov
iret
loopne
lea
adc
or
movsl
fstl
popf
push
push
inc
sarl
mov
dec
push
mov
pop
cltd
mulb
popf
and
mov
pop
pop
add
mov
sbb
and
sbb
clc
nop
pop
outsb
lret
xchg
and
push
add
pop
pusha
lods
or
jl
loope
cmp
dec
mov
sub
pop
xchg
sbb
lds
pop
and
mov
in
cwtl
mov
aaa
inc
sbb
and
or
mov
loopne
push
lahf
sbb
add
cli
rol
sub
cmpsl
loopne
cs
aaa
int
repnz
mov
rcrl
push
sbb
mov
cmp
adc
data16
sahf
or
fldenv
push
ret
mov
ljmp
jg
cld
out
pop
call
and
cmpsl
fstpt
mov
adc
aam
sbb
xor
test
jbe
sub
and
inc
add
xchg
cli
mov
or
inc
push
push
mov
roll
xchg
or
and
adc
lods
iret
mov
and
iret
and
and
cmc
iret
sub
xlat
jmp
or
push
sub
icebp
fucomip
loope
imul
mov
loope
add
xor
popf
test
repnz
loop
jo
sarl
xchg
cwtl
jle
mov
or
mov
pop
lods
pop
pop
xor
mov
fldt
add
add
cwtl
subl
mov
outsl
mov
dec
adc
sbb
or
scas
outsb
cltd
lahf
push
fsubs
add
sub
popa
jnp
adc
mov
lods
add
idivl
push
std
mov
xor
xchg
loope
cmp
loop
mov
pop
lret
add
sbb
loope
and
adc
and
lea
pop
rcl
leave
add
mov
pop
mov
rolb
js
sbb
cmp
mov
xchg
test
lret
push
or
mov
cmpsb
hlt
pop
cld
xor
push
pop
pop
mov
test
adc
mov
mov
cmpb
mov
xchg
cltd
jg
pop
loopne
cmp
jle
mov
add
fadds
mov
fidivrs
sbb
pop
sbbb
fstpt
popf
mov
sarl
mov
popa
xor
hlt
mov
or
sbb
in
xchg
adc
dec
das
out
mov
jne
dec
in
lock
dec
out
aaa
lock
inc
ja
dec
jl
sbb
xchg
scas
sub
xchg
push
sbb
cmp
sbb
outsb
adc
test
pop
shll
arpl
fsubl
sbb
xorb
sti
mov
push
and
dec
ret
iret
cmc
xchg
fsubrs
scas
pop
or
in
popa
jp
movsl
mov
test
and
dec
fldenv
and
das
push
pop
mov
and
pop
and
test
xor
lds
sbb
std
pop
fs
test
bound
in
xchg
daa
js
ja
mov
dec
mov
add
add
pushf
push
push
xchg
test
leave
pop
mov
sub
pop
divl
dec
sahf
adc
jecxz
mov
sahf
mov
in
scas
push
xchg
mov
mov
xchg
jge
cmp
mov
outsl
mov
fdivrs
sbbb
fabs
and
fcompl
ret
ret
add
popf
jmp
dec
push
pop
and
mov
pop
mov
jbe
cmp
mov
cmp
cmp
mov
pop
pop
jno
lahf
cld
inc
sbbb
xor
mov
popf
cld
pop
lds
shlb
cmpsb
in
aas
and
in
push
pop
push
and
es
cmp
add
out
divl
sbb
jg
push
lea
inc
in
cld
out
jnp
pop
adc
fsubs
icebp
int
xchg
sub
fidivs
faddl
xchg
cmp
hlt
jmp
push
js
lods
add
pop
cmp
cmp
mov
mov
mov
rcr
shll
mov
xlat
inc
push
xchg
and
push
push
lock
enter
cltd
dec
xor
leave
lds
jg
add
mov
xchg
pop
mov
sub
call
decb
push
pop
push
leave
jns
cmpb
adcl
push
adc
loopne
mov
mov
add
mov
mov
sti
xchg
jp
shrl
or
arpl
into
iret
pop
movsb
push
pop
xchg
aam
sub
inc
adc
imul
mov
adc
cmp
add
adc
pop
push
fsubrl
movsb
cmp
lret
pushf
pop
popf
je
jno
sub
cmpsl
push
add
or
pop
sub
add
mov
test
data16
and
mov
add
daa
fmull
popa
jg
and
add
fistpll
aaa
ljmp
je
pop
push
icebp
test
imul
std
scas
mov
imul
rolb
mov
daa
dec
fistps
outsb
push
shl
sub
mov
outsb
jmp
or
in
hlt
dec
nop
mov
fiadds
jbe
xor
shlb
jl
hlt
adc
int3
jmp
mov
jo
xchg
clc
loope
icebp
sahf
das
sub
subb
pop
jle
fistpl
pop
xchg
xor
in
adcl
andl
pop
pop
out
nop
lcall
xor
pusha
add
and
adc
mov
gs
adcb
and
inc
pop
imul
sbb
mov
push
push
outsl
jnp
fidivrl
scas
jno
into
adc
and
xchg
pusha
cltd
xchg
xchg
clc
ret
sbb
fists
loop
popa
mov
insb
or
mov
pop
pusha
inc
repnz
mov
xor
pushf
dec
mov
add
cmpsl
js
xchg
into
ret
or
pop
int
dec
fsub
repz
adc
sub
mov
gs
add
mov
fnstcw
dec
outsb
jp
pop
push
icebp
jp
fwait
lret
call
pop
add
lret
cmp
ret
mov
xor
mov
and
stos
sbb
mov
xorl
stc
or
out
fs
jnp
and
sbb
arpl
pop
add
pop
jmp
je
test
das
sbb
xor
push
hlt
cwtl
inc
jecxz
add
inc
shll
push
pop
dec
in
cmp
mov
lahf
out
pop
pop
scas
bound
cwtl
rorl
add
in
mov
iret
jl
inc
dec
sbb
mov
sti
add
mov
and
mov
or
mov
xor
xchg
rolb
mov
dec
or
push
push
leave
scas
or
daa
fmul
push
loope
out
jo
cmp
mov
aas
or
fldl
dec
mov
pop
leave
mov
mov
adc
icebp
pop
stos
repz
lcall
loopne
pop
cmc
fidivrs
add
jecxz
jmp
inc
dec
insb
push
push
sub
cmp
push
rcrb
mov
jb
adc
and
mov
add
inc
push
scas
mov
jmp
or
jmp
xchg
mov
adc
inc
and
pop
sub
dec
push
fistpl
xor
mov
cmp
std
es
mov
add
insl
jae,pn
das
mov
jg
and
pop
out
pushf
sub
xchg
mov
xor
add
push
xchg
testl
xorl
rdmsr
es
inc
les
repnz
push
xor
test
iret
cmp
mov
pop
jmp
in
aaa
daa
insb
loopne
add
push
subl
fmull
lret
and
daa
mov
std
daa
mov
add
add
cmp
popf
jne
pop
xor
rcr
popf
je
incb
inc
mov
sbb
lcall
xlat
add
dec
arpl
mov
and
popa
outsb
sub
out
jl
fucomp
js
rolb
sub
dec
and
push
sbb
xor
xor
pop
mov
dec
push
jmp
adc
aam
cmp
sarl
xchg
dec
push
mov
out
clc
sbb
pop
and
jnp
dec
sub
jns
cmp
pusha
addr16
cmp
jb
inc
add
or
dec
lcall
push
sub
mov
or
fdivs
xor
pop
pop
pop
ja
dec
pusha
in
loopne
sbb
popf
movsb
xchg
jbe
sarl
lret
cmp
inc
cs
insl
ljmp
fmul
cmc
jo
pop
push
jmp
mov
movsb
cmp
pop
leave
pop
out
jp
pop
or
cmp
mov
fistl
push
jae
jne
nop
xchg
xorb
lods
pop
jo
mov
lods
inc
shrl
jg
pop
mov
push
nop
imul
lret
incb
stos
outsb
outsl
sbb
jecxz
sub
in
fldl
cmp
mov
inc
add
jl
dec
sub
add
iret
push
push
mov
pushf
and
push
mov
pusha
and
lret
fcoms
repz
outsb
bound
inc
movsb
push
mov
adc
pop
add
pusha
jecxz
mov
xlat
bound
arpl
fisttpll
arpl
test
std
jle
cmp
sbb
xchg
mov
pop
repz
in
mov
pop
jne
mov
cwtl
pop
push
add
popf
lds
xchg
leave
push
push
mov
jle
daa
int
in
popa
jecxz
cs
push
in
add
daa
mov
fadds
data16
cwtl
pop
cld
pop
rcrb
addb
test
pop
loope
sbb
ja
mov
mov
pop
mov
and
icebp
fmull
add
jmp
mov
jno
add
shrb
and
scas
nop
pop
daa
mov
aam
ret
xlat
push
test
pushf
jmp
add
jne
shlb
outsb
mov
in
xchg
movsl
sbb
cltd
mov
mov
cmp
dec
out
fwait
leave
xchg
mov
das
adc
stc
out
sahf
cld
daa
fs
add
lret
dec
test
sbbl
nop
xchg
std
pop
sti
cmpsl
fs
push
andl
mov
popf
mov
in
pop
mov
aas
mov
cmp
and
sbb
daa
and
in
push
je
and
push
jmp
or
cmp
sbb
jb
adc
xlat
push
cmc
pop
mov
icebp
or
add
sbb
xchg
cmp
or
pop
push
adc
testb
test
mov
call
fsubrl
add
movsb
pop
fdivrl
push
lret
sbb
ds
add
inc
jbe
ret
icebp
pop
dec
mov
dec
testb
mov
pop
sbb
daa
dec
fs
pusha
push
mov
adc
and
shlb
or
test
into
adc
push
push
xchg
mov
cmp
add
adc
call
gs
xchg
scas
lea
aam
sub
cmpsl
add
daa
pop
popa
pop
mov
adc
mov
scas
add
lret
mov
ljmp
xchg
shlb
add
pop
ds
mov
mov
add
sbb
loop
push
adc
and
pop
loopne
hlt
pop
dec
popa
lods
jecxz
jnp
int
pop
sub
js
nop
fnsave
mov
xchg
pop
add
insl
enter
adc
fimull
adc
jnp
test
dec
icebp
inc
and
int
inc
mov
pop
mov
mov
or
sar
mov
jno
sbb
add
rorb
and
push
push
cmp
adc
push
pop
popf
outsb
add
aam
neg
add
inc
inc
les
div
inc
cmpb
mov
ds
push
pop
dec
xor
inc
lret
mov
jp
inc
cmc
jmp
addr16
push
lahf
jns
loopne
lahf
or
clc
mov
jo
lock
mov
lcall
icebp
add
int
outsl
mov
sub
or
out
pop
test
out
sub
inc
adc
xchg
push
adc
jo
nop
xchg
mov
jp
mov
daa
in
or
cli
ficompl
call
cmpsb
mov
loopne
adc
int
cmc
fldcw
sahf
add
xchg
mov
add
rolb
pop
dec
out
sbb
in
mov
out
icebp
inc
add
mov
icebp
hlt
testb
sahf
ss
call
sbb
sbb
push
inc
add
pop
add
aas
les
or
cltd
mov
nop
push
and
or
repz
cltd
add
jg
loope
sub
push
dec
into
adc
lret
xchg
or
jbe
pop
push
or
adc
or
pushf
cs
imul
sbb
sbbb
addl
push
mov
cmp
or
ss
repz
nop
sub
push
inc
loopne
rorb
add
loope
push
and
push
popf
cmp
ret
andl
xchg
mov
sub
and
mov
jo
push
and
rclb
or
call
push
adc
sub
pop
mov
push
daa
in
push
adc
or
add
shlb
push
incl
and
mov
std
cmp
dec
fisttps
push
push
push
mov
int3
jne
add
mov
inc
mov
gs
sbb
sub
rorb
iret
add
cmp
and
or
inc
cmpb
orb
inc
or
test
sub
mov
int
or
js
mov
cmpl
xor
imul
inc
test
std
inc
lods
arpl
mov
cwtl
lret
mov
ret
shr
mov
and
jmp
mov
rorl
enter
push
mov
rol
shr
test
shrl
pop
cli
mov
push
add
or
or
dec
pop
sbb
mov
push
pop
cmp
clc
or
and
es
in
cli
lret
ret
jmp
push
fs
push
inc
inc
adc
test
fwait
mull
or
fimuls
jmp
or
les
dec
pop
mov
cmp
inc
sub
mov
jmp
mov
cwtl
fisttps
push
mov
mov
leave
adc
or
add
rorb
adc
jmp
sub
or
lea
push
xchg
nop
and
or
jne
sahf
xor
adc
insb
jmp
mov
jle
xor
mov
or
cmp
sbb
iret
pop
sub
xchg
adc
sbb
aam
sub
pop
jnp
and
mov
test
in
ret
sbb
loopne
lret
call
dec
insb
xor
jecxz
stc
pop
scas
and
pusha
add
push
hlt
add
push
sbb
std
inc
xor
or
test
pop
pop
rol
leave
ret
pusha
sbb
dec
cs
out
add
mov
jmp
add
adc
add
xlat
and
sub
xchg
push
add
into
ret
sbb
xchg
pop
popf
aad
aam
push
mov
sub
or
adc
add
push
ljmp
data16
rol
pop
shlb
mov
mov
popf
shrb
adc
sub
mov
cmp
mov
xlat
jp
out
test
arpl
mov
adc
add
push
pop
mov
mov
pavgb
js
cli
sub
rorb
aaa
add
out
xor
push
xchg
inc
enter
sbb
cli
xor
push
lar
notl
dec
sub
enterw
movl
loop
xor
mov
sahf
aas
push
addl
leave
add
dec
add
mov
dec
lcall
pop
mov
sbb
inc
stos
xchg
mov
iret
pop
sarb
es
add
icebp
push
or
sbb
cmp
scas
fildl
filds
and
shl
sbb
pop
pop
jl
ret
mov
popf
dec
sbb
fbstp
cltd
sbb
aad
jle
push
cwtl
enter
and
jmp
add
ja
cmp
pop
mov
add
stos
outsb
jae
jns
inc
dec
add
jle
rcrb
pop
lret
and
stos
inc
mull
out
fs
scas
int3
dec
lds
iret
insb
pmuludq
push
adc
mov
jl
mov
ss
ds
nop
lahf
or
and
in
xchg
add
push
sbb
pop
pop
in
outsb
movsl
inc
je
jb
push
mov
lcall
xor
call
inc
lahf
adc
inc
cmpsb
and
adc
mov
outsb
mov
mov
cli
add
jb
mov
pushf
sbb
add
clc
mov
xchg
loopne
and
add
add
dec
repz
or
fadds
push
push
mov
add
ja
push
xlat
fwait
or
addb
out
add
in
push
test
adc
push
aam
outsb
cmp
jb
add
inc
lret
ja
adc
std
int
in
stos
call
sub
addb
lcall
js
cmp
lods
imul
jg
je
pushf
aas
or
or
shrb
jle
mov
pusha
stos
dec
insb
mov
sbb
mov
aas
cmp
push
fdivs
aad
add
push
jnp
pop
jp
mov
inc
or
sbb
and
add
xor
sbb
sub
jmp
sti
jo
xor
arpl
jb
imul
pop
add
in
dec
pop
mov
xchg
je
mov
daa
inc
ret
int
and
sub
dec
and
cmpl
xchg
add
xchg
add
pusha
and
pop
clc
xlat
and
sub
sub
sahf
push
jl
push
incb
out
int
or
leave
push
mov
xor
dec
sub
push
and
rorl
or
int
xor
add
or
push
sub
add
cmc
push
sarb
mov
add
mov
icebp
dec
or
pop
sbbb
adc
pop
xchg
fildl
jge
les
push
xor
stos
mov
enter
jo
shr
xchg
jl
mov
lcall
mov
xor
pop
fists
adc
add
jl
insl
loope
xchg
and
and
jle
pop
jae
add
jecxz
out
mov
pop
jmp
test
dec
cmp
sub
aaa
add
pop
add
arpl
iret
call
push
sub
cmp
xor
shll
outsl
testl
cltd
ret
stos
sub
sbb
sbb
and
push
je
mov
call
out
lea
sbbb
movb
inc
pop
lret
je
or
jnp
jno
mov
lods
dec
jge
test
cmpsb
out
sbb
cmc
jne
shll
fidivrl
fdivl
cwtl
dec
pop
and
add
xchg
pop
repnz
jnp
lock
repz
ret
add
and
add
pop
xchg
cli
mov
in
fmuls
mov
hlt
inc
add
in
imul
mov
push
xchg
sbb
lcall
das
dec
jp
outsl
enter
pop
xchg
cs
addr16
pop
mov
ljmp
ret
push
aad
sub
add
testl
push
mov
jecxz
mov
sub
xchg
jp
icebp
sbb
inc
add
xor
jl
jp
rcll
lahf
ret
add
nop
add
loop
mov
es
mov
add
fidivs
cmp
addl
movw
shrd
cli
add
mov
push
cmpl
cmp
add
shrb
lock
jo
xchg
cmp
ljmp
mov
pop
mov
mov
pop
roll
movlps
aaa
mov
pop
add
inc
leave
push
mov
jbe
sbb
repnz
in
outsb
add
pusha
flds
add
movsb
shlb
sub
adc
pop
ret
mov
xchg
rcr
fs
sti
xor
xchg
addl
xor
jp
mov
std
sbb
cmp
mov
sub
adc
cmp
out
mov
int
fstpl
add
push
insb
idivb
je
rclb
xchg
test
xlat
inc
loope
mov
iret
push
popa
jnp
je
leave
jo
add
icebp
shll
lock
test
lds
jae
sub
into
add
mov
lods
in
jg
xor
out
daa
sbb
cld
adc
cltd
jmp
cmp
arpl
js
shlb
mov
pop
cmpsl
sub
int3
xchg
lods
sbb
sbb
lods
push
call
or
sub
fcoms
mov
inc
shll
cmp
je
jg
and
cmp
adc
lods
xor
xor
int
add
sbb
or
lret
mov
mov
lea
pop
pop
out
rcrb
add
add
jmp
ljmp
mov
xlat
and
xchg
jno
sbbb
add
outsl
in
loopne
pop
push
cltd
cwtl
inc
les
cli
mov
mov
iretw
rorl
pop
aas
insb
in
mov
jbe
ret
dec
shll
cmp
je
adc
mov
test
les
jl
pop
pop
cmc
push
dec
lock
mov
add
jp
sub
jl
pop
fisttps
push
ds
sbb
dec
call
fnstenv
jnp
add
enter
lea
mov
mov
xor
inc
mov
into
dec
pop
xchg
shrl
push
xchg
mov
xlat
push
push
and
shrb
dec
imul
pushf
cmp
insb
and
mov
lock
inc
ficoms
pop
lret
fwait
stos
pop
into
jo
mov
lcall
push
or
leave
fildl
loop
xchg
int3
or
inc
leave
add
or
inc
dec
add
lcall
daa
and
ja
inc
rolb
add
fldl
add
outsb
addb
imul
pop
and
mov
add
push
cmpsl
xlat
dec
add
push
stc
insl
mov
add
mov
sbb
mov
mov
testb
sahf
add
cwtl
add
xor
and
sbb
cmp
mov
inc
mov
add
xchg
inc
adc
pop
add
lahf
mov
push
movsl
add
sub
pop
lret
ds
cmp
stos
daa
inc
popf
add
rclb
or
sbb
aad
pusha
adc
call
hlt
dec
mov
jno
rorb
daa
and
int3
sbb
or
enter
movsb
add
loope
sub
cli
popf
xchg
or
mov
pop
addl
loop
call
aam
ds
add
flds
adc
cmp
adc
xor
push
adc
mov
pop
pop
add
loop
sbbl
push
xchg
das
testl
add
add
cli
pop
push
mov
scas
xor
jns
mov
test
or
ljmp
pop
pop
sub
orb
cmp
fs
cwtl
loopne
push
mov
or
shl
out
add
outsl
cli
pop
mov
ret
sub
aad
jp,pn
stos
xor
fs
call
xor
cli
xor
jle
popf
mov
sbb
add
pop
test
addl
adc
les
and
gs
push
addr16
add
push
push
pop
aaa
sahf
bound
cmp
jmp
je
pop
mov
mov
add
iret
dec
movsb
pop
push
pusha
mov
pop
mov
adc
test
push
xchg
notb
sti
shll
faddl
popa
add
push
or
in
pop
jle
or
jge
push
mov
in
adc
sbb
mov
inc
mov
imul
test
adc
add
fcmovbe
inc
or
out
jle
jl
pop
out
imul
adc
je
xor
mov
mov
test
es
xchg
add
inc
popf
out
std
leave
push
xchg
add
pop
push
loop
xor
mov
jno
jge
icebp
pop
jnp
xor
test
scas
lea
push
mov
mov
mov
lahf
mov
add
cmp
lea
repz
xchg
mov
cmpsb
pop
push
push
pop
sbb
scas
ljmp
xor
test
jb
add
insb
sbb
call
imul
subb
lret
mov
outsl
andb
push
add
leave
cmp
cmpsl
ljmp
sbb
push
outsb
and
hlt
jmp
jecxz
jg
inc
into
xor
or
inc
and
jecxz
in
icebp
std
daa
jo
mov
push
jg
dec
push
lret
xchg
clc
arpl
mov
inc
inc
add
sar
cmpsl
es
xor
adc
and
arpl
xor
or
add
cltd
inc
ret
jp
lods
int3
sbb
cld
add
decb
push
push
ss
mov
hlt
lret
cmp
popa
push
es
add
lods
pop
dec
mov
xchg
add
and
xor
sbb
stc
pusha
mov
xor
nop
in
imul
dec
popf
xchg
adc
cmp
push
stos
sbb
movsl
in
popl
cltd
and
cli
das
pop
bound
add
in
scas
mov
push
repnz
pop
push
mov
sarl
adc
test
int
aaa
enter
mov
cmp
mov
pop
sahf
push
je
add
pop
mov
sbb
stos
mov
jg
or
lock
xor
sti
push
lock
sbb
into
fs
in
or
mov
or
sbb
mov
sbb
cmp
mov
add
or
pusha
mov
dec
pop
and
mov
push
sbb
cmp
push
pop
in
and
mov
sarl
add
inc
cmpsb
mov
xchg
ljmp
ja
sbb
call
push
lds
pop
loopne
inc
push
jbe
add
lahf
or
cmovl
add
lea
cmp
pop
add
sbb
cmp
cld
add
jge
pop
inc
pop
insb
in
sub
fisubrl
in
mov
and
push
or
std
lret
add
jg
xchg
or
hlt
fidivrs
fldcw
pop
pusha
ljmp
push
pop
repnz
fisttpl
push
fldl
es
push
add
or
sub
xchg
fsubs
xor
out
adc
and
or
je
test
jb
add
aas
test
xor
push
xor
loop
out
sarl
sti
and
add
jg
addr16
mov
dec
mov
arpl
pop
loopne
inc
mov
subb
add
add
incl
data16
aad
clc
push
sub
dec
rolb
push
adc
and
cmp
add
loop
push
repnz
xchg
push
and
aaa
insb
jmp
cmp
or
rolb
cwtl
mov
sbb
or
add
cmc
mov
sbb
sbb
fdivrs
push
pop
add
inc
shl
in
cmp
shll
and
cmc
das
repz
popf
addl
outsl
xchg
gs
push
inc
cltd
mov
rcpps
and
inc
test
outsl
jl
and
dec
dec
mov
or
sbb
frstor
adc
add
lret
and
xor
adc
test
pop
mov
mov
mov
cltd
jns
jo
jbe
and
mov
xchg
pop
push
sbb
arpl
pop
jae
rclb
pusha
inc
decl
ljmp
jle
dec
xchg
jmp
xor
icebp
and
popf
add
push
in
adc
test
stc
clc
icebp
xor
out
gs
movsb
add
jle
or
and
std
jo
ds
add
clc
jp
pusha
pop
js
mov
add
mov
shrb
or
in
popf
jb
out
jle
jg
int
loop
or
mov
shl
loope
push
push
push
cmpsb
jno
hlt
clc
sbb
lahf
pop
inc
inc
sub
jo
fbstp
loope
sub
or
xor
jo
sub
push
js
xor
inc
xchg
jge
sub
loop
and
adc
pop
add
mov
bound
adc
add
adcb
loopne
imul
cmpsl
fisubrs
fucom
popa
mov
ja
mov
pop
inc
andb
in
jl
jo
rorb
add
and
sarl
movsl
out
push
iret
ds
add
ja
repnz
mov
dec
jg
sub
adc
sbb
sbbb
notl
daa
out
pusha
imul
ja
stc
or
xor
or
and
xchg
mov
lods
dec
push
cmc
push
xchg
insb
mov
dec
or
mov
mov
jp
hlt
out
dec
subb
mov
lcall
sbbb
and
mov
pusha
jbe
and
in
shr
add
inc
push
addl
pusha
rolb
mov
pusha
int3
xor
mov
lcall
mov
cmp
xor
dec
roll
push
pushf
ret
insl
fsubrl
xlat
mov
push
or
adc
cwtl
add
popa
pop
jns
fcmovbe
fldl
fiaddl
ja
pandn
cmp
lods
das
frstor
popa
pop
addr16
push
fwait
lock
mov
stc
iret
xor
push
push
in
or
inc
add
xchg
xchg
fcompl
stc
cli
and
mov
fistpll
inc
cmpsb
add
addr16
xor
add
push
or
lret
in
mov
rclb
cld
loope
mov
aad
pminub
ljmp
adc
lahf
inc
jns
jae
pop
inc
dec
dec
pop
add
inc
inc
test
pop
nop
pusha
or
jno
inc
cmp
mov
mov
inc
mov
bound
xor
pushf
or
jle
xor
int
cmp
shll
add
pop
fcoms
mov
mov
jo
verr
dec
fbld
repnz
jo
add
in
int
stc
enter
or
fs
add
std
xor
or
stos
sti
jno
jge
repnz
push
cld
push
or
xor
std
add
or
aad
jbe
pusha
test
jmp
xchg
sub
xor
and
nop
and
jne
movsb
mov
ret
add
movsb
push
addr16
div
mov
dec
add
pushf
aaa
cwtl
mov
repnz
add
nop
mov
inc
xchg
je
dec
sets
dec
inc
nop
scas
addr16
and
scas
sarl
in
stc
add
xchg
scas
cmp
ficoms
pop
pop
inc
cmp
cmp
add
inc
into
mov
and
pushf
inc
sub
lods
cltd
ret
sbb
mov
out
dec
inc
cmp
pop
orb
dec
rclb
inc
mov
jmp
pop
jl
rcr
mov
sbb
xor
testl
add
push
mov
pop
sbb
push
xor
js
mov
cmp
inc
jl
cmpsl
popa
cmp
test
add
dec
xor
icebp
shlb
cmp
mov
in
cmp
dec
cmp
add
js
add
out
xchg
sahf
in
jg
loop
fisttpll
subb
sub
addr16
add
movhps
add
or
and
mov
movsl
je
lcall
xor
adc
xchg
std
add
pop
sbb
and
lahf
sbb
jo
push
filds
cmp
mov
mov
loopne
inc
adc
jnp
rolb
or
jecxz
lods
push
xorb
test
hlt
inc
sar
cmpsb
sub
pop
fmull
add
or
mov
jo
arpl
mov
test
incb
push
subl
fidivl
lret
xchg
sbb
pushf
pop
rcrb
lds
dec
jb
cmp
roll
xor
add
pusha
cmc
sbb
sub
int3
das
mov
add
scas
popa
mov
adc
cltd
data16
mov
mov
in
push
xchg
js
inc
sbb
stos
jo
outsl
jmp
and
inc
clc
xchg
fistl
mov
movsb
sub
or
lahf
pop
adc
in
imul
dec
xchg
mov
loopne
mov
pop
xchg
and
adcb
xchg
add
mov
add
movsb
nop
addr16
jb
shrb
movsb
xchg
push
jae
ds
or
js
mov
pop
test
addl
pop
adc
xor
or
add
mov
popf
cld
jle
int
and
pushf
jg
daa
push
dec
fs
repnz
adc
movsl
or
sti
out
sbb
mov
jp
add
jns
insl
xchg
or
sub
pop
pop
adc
addb
sbb
adc
xchg
orl
add
in
and
dec
in
inc
iret
add
pop
and
or
clc
adc
imul
xchg
add
push
fcmovu
pop
dec
lock
dec
jb
in
frstor
sarb
lods
jb
pop
call
push
pop
ja
clc
icebp
negl
repnz
out
stos
lret
pop
sahf
add
inc
jmp
pop
xor
inc
mov
arpl
enter
fs
lock
add
ja
mov
sti
aaa
rorb
mov
fisubl
pop
mov
sbb
or
push
dec
jmp
loopne
addb
stos
pop
mov
ss
jle
lock
sbb
xor
xchg
orb
ja
pandn
ja
lods
loopne
clc
fildl
loopne
sbbl
push
mov
fwait
and
pop
add
push
cli
inc
test
adc
pop
and
jl
add
fadds
test
pop
lcall
push
js
and
inc
adc
pop
mov
inc
push
push
mov
int
out
popf
fs
lock
loop
xchg
rcll
mov
movsl
fisubs
mov
xor
test
rcrl
cmp
lcall
fnstcw
rclb
arpl
pop
pop
jge
fldcw
inc
clc
push
cmpsl
and
adcb
ds
or
mov
faddl
add
jb
insb
dec
adc
mov
inc
inc
popf
lock
pop
dec
ror
push
mov
mov
push
add
dec
cmp
jl
movd
or
mov
pop
fdivs
jnp
in
stc
cmp
lahf
mov
sbb
insl
dec
nop
in
jns
xor
les
lock
mov
mov
int3
adc
fwait
pop
xlat
jns
add
cmp
mov
lods
outsb
add
imul
jg
or
mov
sbb
pop
xchg
ljmp
pop
and
test
inc
push
pushf
inc
std
xor
push
jg
adc
push
clc
add
cmp
adc
mov
pop
pop
into
cld
inc
xchg
sub
push
inc
push
cs
add
sbb
push
insl
add
fisubrl
lea
add
inc
sub
popf
shll
enter
bound
jge
pusha
std
clc
push
imul
stos
sbbb
push
fistl
add
push
lret
mov
and
sub
cld
add
sbb
sub
test
lret
dec
incl
test
xchg
movsb
add
adc
jo
dec
call
dec
push
jl
lock
ror
xor
repnz
mov
iret
cmp
and
sbb
pop
test
js
push
sub
shl
rorb
cmpsl
pop
dec
dec
repz
jmp
pop
rorb
hlt
daa
mov
dec
mov
inc
add
mov
cmp
jo
movsb
mov
xlat
je
test
idivb
enter
add
push
iret
stos
cmpsb
sbb
icebp
mov
mov
fistpll
pusha
mov
mov
add
js
testl
out
xchg
insb
loop
push
movsb
push
add
mov
xor
scas
popf
mov
jbe
lcall
adc
jae
mov
add
insl
sbb
repnz
sbb
loop
sub
lcall
or
xor
ljmp
push
add
adcb
sub
lock
sbb
test
mov
mov
sub
mov
cwtl
gs
sbb
fdivs
loope
push
repz
repnz
movsb
adc
add
test
add
pop
ficoml
lea
jp
out
inc
pop
xor
and
cmp
std
cld
repz
movsb
xchg
shlb
and
pop
pop
cwtl
mov
adc
in
pop
push
loope
int
inc
dec
roll
popa
add
loope
iret
repz
mov
stc
cmp
add
popf
pushf
scas
sbb
sbb
outsb
sahf
inc
sbb
cmc
mov
sti
inc
sbb
or
loopne
fldt
andb
mov
out
mov
je
pop
enter
adc
and
add
adc
inc
subb
mov
into
jae
xchg
add
adc
cmp
mov
inc
push
xchg
pop
adcb
stos
sbb
lock
call
fcmovb
sti
loopne
adc
mov
gs
loop
and
out
jnp
sbb
test
inc
jns
add
push
inc
popa
or
pop
repz
outsl
test
add
xchg
cmp
add
dec
ret
out
push
les
or
mov
sub
popf
cmp
addl
ljmp
pusha
or
xor
subb
repnz
mov
dec
pushf
push
xlat
lcall
or
sbb
out
jg
testb
in
xchg
add
adc
mov
loopne
adc
jns
loopne
fsubs
xchg
jp
repz
repnz
pushf
add
sbb
stos
addb
push
xorl
std
cmp
and
adc
jne
mov
and
ret
add
mov
pop
fcompl
or
dec
inc
sti
out
pop
arpl
mov
inc
bound
jno
xchg
fcomps
js
mov
daa
or
dec
lods
movsb
rcrb
add
mov
add
fidivl
mov
add
mov
xor
dec
push
xchg
jl
xchg
test
rcl
and
loop
fistpl
xor
push
cs
cmpsb
cmc
mov
test
stos
xchg
loop
pushl
fsubs
jl
xor
iret
pop
xlat
call
test
ficomps
push
into
pop
add
daa
xor
add
and
add
shl
push
and
push
add
loope
jb
sub
add
push
sbb
mov
and
xor
pop
out
js
cmpsl
enter
jbe
shrb
and
pop
sbb
mov
pop
mov
dec
mov
ss
stos
push
mov
sbb
test
xor
outsl
lea
add
lret
add
fisubrs
iret
dec
dec
push
sub
sbbb
jmp
mov
and
inc
iret
dec
mov
stc
add
push
cwtl
ret
ficoms
pusha
scas
nop
mov
jne
dec
shrl
sub
sub
jg
adc
add
test
mov
pop
jecxz
fcom
push
jo
pop
pop
mov
sbb
xor
add
pushf
cmp
or
xchg
add
and
xor
or
mov
sahf
popa
xlat
dec
cmp
adcl
addl
sti
adcl
add
dec
inc
jbe
mov
xor
or
inc
add
adc
sub
hlt
mov
popf
inc
jne
insl
shrb
testb
and
add
pusha
adc
cmp
mov
ret
sub
pop
xchg
add
and
add
sbbl
fisttps
std
in
xor
pushf
pop
repnz
add
pop
shlb
pusha
jle
xor
fdivrs
add
inc
mov
add
sti
nop
aas
add
dec
add
sbb
adc
jg
cmp
lcall
jno
mov
cmpl
roll
lcall
xchg
cmp
inc
imul
sahf
adc
xorb
lahf
xchg
leave
inc
addb
cmp
pop
das
call
stc
outsb
aas
sahf
movsb
jge
add
lret
mov
or
mov
daa
into
icebp
inc
adc
pop
jl
push
or
outsl
add
push
outsb
cmp
in
add
jb
push
pop
or
cmp
mov
mov
and
icebp
xchg
add
ficoml
mov
cmp
cld
lods
and
push
stc
in
add
or
sub
adc
in
pushf
ljmp
call
or
mov
sub
mov
sbb
jle
shl
xchg
push
roll
mov
std
dec
cmpsb
mov
xor
or
add
xchg
cmpsl
add
fldl
jb
dec
push
sysenter
add
test
dec
add
sti
adc
jg
pop
add
sub
add
jne
in
cmc
add
les
wrmsr
sbb
cmp
rcr
loopne
enter
and
add
sahf
push
mov
pop
add
pop
mov
add
call
out
int
and
lds
mov
xchg
movl
push
jp
in
sub
insl
push
jge
jbe
mov
push
iret
or
add
and
jbe
iret
xchg
mov
mov
push
or
cld
sti
or
add
xchg
cmp
mov
ds
out
inc
dec
dec
add
cs
mov
and
add
xlat
xorb
jns
xor
xchg
outsb
inc
push
xchg
jl
add
or
sub
iret
out
add
mov
popa
fmuls
test
mov
into
scas
outsb
jp
add
mov
filds
push
add
insl
xchg
fnstcw
jae
dec
fadds
cmp
dec
cmp
pop
adc
pusha
gs
mov
adc
cli
push
xchg
mov
dec
das
aam
add
xchg
adc
xor
add
pop
test
aad
lea
jmp
pop
shrl
test
daa
les
xlat
push
stos
ret
cli
jne
add
in
mov
cwtl
faddl
xor
xor
add
pop
out
addb
sbb
add
std
pushf
add
es
cld
pop
data16
xchg
adc
lock
add
mov
add
or
mov
mov
rcll
mov
sbb
aaa
incb
jmp
js
mov
jmp
arpl
pop
fldl
mov
rcrb
add
xchg
cmp
ret
mov
inc
mov
fidivrs
add
push
fldcw
xor
repnz
add
mov
and
and
and
pushf
dec
out
pop
cmp
push
adc
jle
nop
loopne
sbb
cld
dec
add
push
adc
or
sbb
je
jb
rcl
loop
lcall
fiaddl
cld
mov
add
movsl
rcl
lods
push
das
add
mov
cmp
jp
add
xchg
ss
add
inc
mov
loopne
stc
xor
jae
sbb
mov
xchg
push
push
add
lret
stos
jae
add
or
mov
adc
shlb
enter
ret
pop
jle
lock
aam
cmp
push
lods
xchg
pop
add
dec
jmp
or
or
loop
or
fwait
lods
mov
mov
adc
and
int
mov
rorb
cwtl
ja
scas
add
fs
ret
and
jl
push
push
and
in
adcl
inc
jns
xchg
aam
push
xlat
inc
scas
xor
jl
adc
xchg
scas
out
cmp
or
lret
insb
sub
mov
ds
paddd
add
mov
push
adcb
jmp
push
adc
psadbw
jo
push
sbb
addr16
outsl
add
insl
sbb
xor
push
sbb
fs
mov
mov
popa
insb
movl
mov
lcall
adc
shrb
sub
pop
fnstsw
sahf
sbb
repnz
scas
out
pop
xor
pop
cmp
pop
lret
neg
mov
int3
nop
std
out
add
enter
aad
add
sahf
call
int3
in
and
push
cmpsb
daa
loope
push
pop
wrmsr
pop
sbb
push
add
orl
and
cmc
fadds
icebp
add
test
or
push
inc
jecxz
fmuls
pop
mov
inc
lock
inc
mov
fisttps
and
ds
dec
add
push
mov
fcomps
mov
inc
adc
pop
aad
aam
mov
shl
add
sbb
loopne
push
jl
jge
add
push
in
mov
leave
push
movzwl
ud0
aam
addl
mov
and
leave
add
imull
and
outsb
leave
pop
adc
or
mov
mov
pop
addb
mov
add
ret
sbb
call
imul
dec
adcb
movsl
or
push
add
and
js
adc
push
fs
mov
add
test
push
or
stc
pop
ja
add
sub
shll
xchg
clc
push
cmp
cmp
cltd
mov
jnp
adc
mov
dec
push
mov
cmp
imul
rcr
sti
sub
mov
outsl
add
lcall
pop
std
jmp
jp
and
ljmp
fcoml
cs
sbb
mov
add
je
xchg
dec
xchg
call
dec
in
inc
add
mov
dec
mov
in
push
mov
xorl
jb
clc
imul
int
mov
js
or
call
jp
push
cmp
push
addr16
dec
xadd
sarl
sub
mov
sarb
nop
push
cmpsb
add
movsb
lods
ret
test
sbb
call
inc
xchg
pusha
mov
loopne
or
addr16
in
movsl
push
insl
jl
push
mov
jae
xor
inc
pusha
dec
sbb
addr16
and
push
sub
xorl
testb
sbb
sub
cmp
insb
orb
add
cmp
leave
int3
or
addb
cld
pop
xchg
loop
loope
out
inc
pusha
and
outsl
mov
jmp
mov
negb
and
shll
xchg
or
stos
adc
lock
outsb
mov
mov
ss
mov
jo
cmp
push
lahf
inc
add
in
lock
ret
xchg
push
cmp
jmp
xchg
aad
or
jnp
popf
clc
adc
and
rclb
adc
and
dec
pop
xor
cmc
sbb
jmp
xor
or
inc
rolb
nop
fmuls
sbbb
or
xor
ret
sbb
ljmp
cmp
addl
shr
adc
xchg
scas
xor
fsubr
aas
jnp
sbbl
and
jge
faddp
in
into
dec
movsb
xchg
or
sub
or
icebp
lods
cmpb
sbb
add
sbb
fistl
int3
mov
inc
lock
sub
cmp
mov
push
es
pushf
rorb
roll
out
add
mov
lahf
loop
nop
push
mov
sub
cwtl
mov
xor
out
or
jbe
dec
jmp
add
xchg
psubsb
out
in
add
xlat
jno
jo
pusha
call
into
sbb
pop
ja
shlb
mov
mov
add
scas
addr16
outsb
adc
ret
mov
hlt
sahf
add
and
lds
jle
loop
pop
xchg
es
icebp
rorb
jno
out
insl
pcmpeqd
cmpsb
lcall
sub
push
add
or
popa
loopne
add
push
or
add
inc
xchg
jmp
int3
sbb
mov
mov
clc
xor
clc
cld
add
lods
sbb
sbb
add
fs
push
push
xchg
xchg
inc
nop
dec
xor
add
pushf
out
adc
roll
mov
je
in
add
mov
cmp
into
cmp
pop
dec
push
add
mov
mov
in
stc
pop
divl
mov
fwait
add
xlat
xchg
stos
je
or
dec
lret
sbb
jns
xchg
push
mov
push
inc
pushf
enter
shlb
je
add
sbb
add
adc
or
cmpsb
pusha
push
mov
rolb
pop
xrelease
mov
xor
push
incb
inc
sub
repnz
imul
sub
xor
nop
add
popf
aas
add
fisubrl
jns
mov
xor
jmp
stos
out
je
add
mov
jo
push
mov
adcl
mov
cmpb
dec
gs
sbb
push
push
pusha
inc
sub
sbb
stc
adc
and
xorl
loop
mov
push
adc
adc
jecxz
js
adc
adc
xchg
sbbl
add
dec
fadd
cmp
and
popf
insl
mov
les
or
mov
dec
lods
xchg
add
sub
cmp
ret
clc
jecxz
push
lods
std
pop
out
test
mov
adc
inc
xor
in
push
add
hlt
cmp
test
jl
xchg
shrb
imul
es
sub
shlb
mov
xchg
sbb
sub
nop
xchg
add
cmpsb
imul
mov
pusha
or
in
test
inc
es
mov
or
jae
out
mov
cmp
mov
cmpsl
add
rcll
leave
sbb
fiaddl
hlt
cmp
add
inc
pop
dec
mov
enter
ds
sub
fimull
orb
xchg
xchg
cmp
xor
sbb
popa
inc
daa
add
fcompl
mov
add
sub
dec
mov
ret
sbb
lahf
mov
jnp
jmp
test
add
out
inc
jno
faddl
leave
push
dec
adc
add
inc
or
pop
xchg
cmp
add
loopne
out
scas
sbb
ret
outsl
jbe
add
in
rep
arpl
sbb
icebp
push
mov
cmp
stc
ss
call
int3
jne
add
xor
mov
pop
sub
out
enter
push
lahf
pop
repz
xchg
add
mov
push
add
mov
xor
call
pop
ds
push
bound
sbb
data16
add
vhaddps
into
add
xor
incl
fnclex
in
outsb
ret
loopne
cld
xor
sbb
nop
imul
test
addb
jecxz
out
add
rolb
aam
pop
mov
sarb
sbb
add
mov
ret
testl
adc
fsubs
dec
add
repnz
nop
sbb
sub
fisubrs
icebp
cwtl
xchg
sbb
mov
jecxz
push
sti
xor
add
arpl
addb
inc
mov
int3
rcrb
push
lahf
adc
mov
aam
psrad
sti
adc
and
mov
popa
add
hlt
push
imul
out
imull
popa
rclb
xchg
daa
inc
xchg
mov
imul
xor
push
add
xor
aad
mov
sbb
ds
inc
jne
popf
cmp
sti
add
push
adc
movsl
dec
pop
add
or
aad
stos
fimuls
sarb
pop
inc
or
lidtl
mov
xchg
movsb
dec
jmp
ja
push
mov
pop
popa
sub
inc
jge
in
nop
call
mov
add
add
je
lahf
pusha
sbb
add
dec
sub
add
cmp
sub
push
xor
ret
push
xchg
loopne
sub
loope
or
mov
lea
push
add
push
test
add
push
stos
cmp
inc
aas
std
cmpsb
add
mov
adc
pop
fimull
ja
ffreep
and
mov
mov
add
insb
test
pop
sub
mov
fmull
jmp
mov
push
inc
testb
adc
jbe
or
pop
sbb
xor
add
es
sarl
repnz
add
loop
sbb
and
fucomip
aas
sbb
add
jbe
sub
xor
cld
and
mov
adc
out
je
add
gs
inc
popa
add
add
in
scas
add
xchg
cs
fsubs
adc
lcall
jge
sub
inc
dec
xchg
rorb
add
push
ror
je
sti
aad
enter
faddl
dec
lret
push
add
ja
inc
icebp
addr16
jno
iret
popa
mov
cmpsl
clc
and
dec
cmp
jge
inc
sbb
add
cli
xlat
nopl
roll
sbb
dec
xchg
cmp
leave
loop
adc
je
adc
mov
test
ljmp
je
cmc
dec
adc
pop
pushl
mov
cmp
clc
push
jo
add
aam
xchg
dec
pop
lret
sub
cwtl
fs
mov
or
or
lock
mov
out
add
push
test
sub
or
push
orb
pop
xor
imul
pop
add
orl
lahf
xlat
push
sbb
and
lods
add
iret
pushf
ror
outsl
mov
aas
jp
sub
dec
add
rol
mov
imul
lods
aad
add
add
fiadds
add
icebp
add
jl
xchg
inc
inc
mov
add
and
prefetcht1
iret
popa
shrb
loop
shlb
movsl
outsl
out
fimull
mov
xor
filds
pop
dec
sahf
hlt
sub
jnp
not
insb
jmp
sbb
or
les
xchg
icebp
jbe
mov
jle
pusha
outsb
add
maskmovq
imull
sahf
xchg
adc
adc
cwtl
add
push
flds
pusha
imul
les
add
int3
lahf
add
fdivp
lods
jno
mov
sbbb
add
das
jp
add
push
sub
stos
in
or
pop
xor
add
popf
in
mov
cwtl
cmp
xor
add
in
fcoms
dec
pop
push
and
xlat
loope
mov
jns
imul
addl
sub
jg
add
cld
inc
in
sub
cmp
sub
mov
mov
xchg
je
pop
scas
js
repnz
in
jo
psraw
add
push
fs
dec
inc
cwtl
add
or
jg
lock
and
popa
pop
inc
mov
sub
aas
sbb
jbe
xor
pusha
cmpsb
pop
add
popf
lea
stos
add
hlt
add
jecxz
push
ret
sub
or
test
mov
das
imul
xchg
mov
insb
shrl
xlat
stos
jne
fimull
sub
cmp
pop
add
insb
cmc
and
fisttpl
sub
rcrb
and
popa
add
cld
aaa
push
fcom
add
sub
add
or
add
mov
jp
and
xor
test
xchg
loopne
mov
jns
cwtl
scas
sub
int3
add
and
mov
add
insb
call
aam
pop
jbe
stos
inc
jecxz
xor
add
and
mov
pop
sub
hlt
nop
and
push
es
icebp
push
adc
notl
sbb
out
xorb
ja
popf
repz
add
mov
dec
push
mov
inc
sub
cmpl
test
lods
and
in
iret
scas
cmp
and
insb
sub
ljmp
push
and
push
stc
or
lahf
sbb
dec
or
test
stos
push
push
mov
xchg
jae
sahf
pusha
or
lret
cs
push
xorb
mov
sub
test
in
push
imul
out
jmp
cwtl
or
add
cmp
fisttpl
or
test
xchg
sbb
add
xor
addb
nop
pop
bound
mov
xchg
pop
cltd
rolb
in
xchg
call
jmp
scas
outsl
aam
jne
mov
aad
adc
lods
add
repnz
sbb
xor
jl
stos
xor
ds
addb
xchg
enter
adc
loop
push
mov
aam
add
fsubl
push
sub
icebp
xor
push
adc
mov
sub
and
rcrb
add
mov
scas
mov
mov
cmp
push
and
push
xchg
movsl
dec
in
movsb
add
fwait
push
push
xlat
cmpsb
sarb
mov
lret
fnstsw
xor
adc
pop
sbb
xor
mov
add
pop
xchg
push
scas
adc
pop
xchg
cmc
adc
xor
add
cmpsl
outsb
mov
out
jo
je
fstps
inc
inc
pop
js,pn
mov
loope
jne
pop
aas
cwtl
and
lock
add
inc
xor
testb
mov
iret
lods
sahf
rclb
add
adc
or
and
inc
orb
stc
push
cwtl
cmp
inc
xchg
insl
add
test
frstor
sub
add
loopne
add
and
cmp
ficompl
add
adc
sbb
das
loopne
xchg
xor
mov
in
test
cmp
cli
add
pop
lds
mov
shlb
add
mov
dec
or
mov
cmp
push
add
clc
ss
cld
jne
movsb
adc
dec
outsb
add
and
jge
jg
mov
jo
mov
test
add
loopne
mov
sub
mov
add
mov
push
push
jo
sub
mov
mov
push
sub
or
inc
add
js
push
bound
dec
pop
pop
mov
in
scas
mov
mov
add
sbb
jg
test
fisubrs
xchg
pop
xchg
jmp
fadds
movsb
lcall
sub
xchg
faddl
inc
movlps
sub
div
inc
push
jmp
mov
test
test
dec
fprem
add
sub
pop
rcll
mov
cmp
mov
call
add
iret
in
inc
sbb
add
sub
roll
aam
mov
mov
icebp
jle
add
xor
mov
dec
add
lods
pop
jmp
adc
pop
add
in
call
pop
mov
stc
xor
push
add
ja
cmp
aaa
cmp
stc
add
test
aad
fs
mov
sarb
jge
add
cmp
dec
mov
mov
pop
add
rcr
popf
ja
push
and
add
cmp
lods
cmpsl
and
enter
add
out
and
fisttps
add
jo
aas
mov
shll
or
mov
cli
pop
loop
aam
adc
add
insl
pusha
fs
cmp
loope
push
js
add
inc
pop
fs
jb
or
rolb
fadds
mov
add
cmp
sub
and
jp
add
leave
dec
or
inc
negl
cmp
xor
popf
add
mov
xor
aad
jbe
adc
mov
add
in
adc
mov
dec
add
sbb
addl
sarb
cmp
popf
rol
lods
movzwl
sub
les
xor
xlat
xchg
ss
je
lock
cmp
fdiv
and
push
lods
xorb
inc
push
push
mov
lcall
pop
and
sbb
imul
pop
stc
out
shrb
add
fiaddl
push
or
test
ljmp
pusha
add
icebp
jns
xor
add
scas
aad
movsl
adc
mov
dec
lds
mov
out
data16
xchg
loope
leave
push
repnz
pop
xchg
dec
ret
sbb
aam
ljmp
and
add
sti
or
xorps
test
cwtl
or
and
push
sub
daa
jge
add
or
mov
push
jmp
out
lea
add
or
movsl
sbb
stos
leave
mov
insl
mov
or
sahf
xchg
cli
push
ficomps
not
dec
add
inc
xadd
jne
jnp
fldt
hlt
and
add
or
outsl
push
add
add
dec
cmp
bound
cmp
js
add
jno
adc
hlt
mov
int3
ja
mov
shll
sub
mov
dec
sarb
stos
lret
and
sbb
ret
jp
jg
mov
adc
push
push
push
out
addl
jo
mov
loopne
push
mov
xor
lea
mov
leave
hlt
push
pop
fadds
ss
addr16
pop
ja
add
mov
jp
imul
popa
add
bound
out
add
dec
call
fisubrs
mov
int
daa
in
jmp
sar
add
mov
dec
pop
or
xchg
xor
mov
mov
pop
cs
sub
add
or
push
femms
cmc
in
aad
loopne
or
push
xor
mov
and
jo
sub
push
xchg
dec
lea
xlat
add
cmp
and
add
and
loopne
scas
mov
int
dec
jge
add
sub
repnz
pop
lods
mov
add
popf
test
dec
call
and
lahf
rcll
dec
add
mov
mov
imul
movsb
shrl
cmp
test
cwtl
pushf
ds
push
fists
roll
fisubrs
and
or
cmpb
insb
movsl
xchg
gs
dec
add
jmp
mov
rcrl
cltd
or
hlt
mov
mov
sbb
icebp
pop
addr16
mov
je
push
and
inc
add
mov
or
xor
jo
aad
data16
ss
dec
mov
jle
nop
mov
adcb
add
sub
in
cli
in
add
push
xchg
mov
sub
jb
push
out
or
imul
nop
add
cmp
jo
aam
faddl
dec
les
xchg
movsl
ss
mov
dec
dec
sbb
and
mov
and
insb
ds
clc
loopne
je
add
int
jno
sbb
dec
mov
jo
add
insb
sub
sub
sbb
cmc
mov
add
cmpsb
xchg
pop
in
lcall
movsb
inc
sub
ds
out
sbb
jle,pn
cli
popl
subb
jl
xchg
repz
inc
nop
loope
mov
mov
insb
imul
push
addr16
add
test
cwtl
cmpsb
jne
mov
cmpsl
movsb
call
lods
jo
mov
cwtl
adc
cmpsl
loopne
mov
in
js
cmpl
scas
add
add
xchg
in
sub
int
adc
add
push
jmp
mov
jge
sub
popf
xor
stos
add
ret
cwtl
cmp
in
add
mov
mov
jbe
nop
mov
add
jnp
dec
add
leave
xor
inc
dec
pop
inc
inc
mov
add
push
subl
dec
stos
add
jns
in
mov
fldenv
push
sub
mov
test
aam
js
add
loope
xlat
shl
scas
hlt
add
jns
aas
mov
sub
ret
and
jo
adc
sbb
sbb
pop
jnp
cli
add
test
inc
mov
mov
xlat
jl
push
js
or
lock
loopne
outsb
clc
das
xchg
cmp
adc
sub
mov
stos
rol
pop
mov
pop
pushf
xor
push
outsb
cmpsb
inc
push
fnstcw
add
imul
pop
dec
pusha
or
xchg
andb
and
pop
add
arpl
cmp
in
lock
lock
scas
and
addr16
sub
sbb
inc
popa
addb
addl
add
xchg
dec
push
sbb
sub
adc
fidivl
jle
mov
arpl
inc
xor
jne
cs
stos
push
cmc
hlt
nop
add
mov
cmp
lock
js
nop
mov
push
sbb
inc
dec
ret
sbb
xlat
mov
sub
cmp
mov
xchg
jb
outsb
popf
fadds
das
pop
add
and
add
mov
scas
imul
dec
xchg
mov
push
sarb
les
sbb
testl
inc
jo
inc
lret
int
data16
divb
or
mov
aam
add
hlt
dec
mov
xchg
push
loope
rclb
leave
and
sub
inc
in
inc
mov
pushf
jecxz
xchg
es
fadds
jl
sub
sub
std
aaa
add
adc
mov
les
add
add
xchg
lds
imul
scas
movsb
lea
jp
add
inc
nop
push
add
mov
and
pop
sbb
dec
imul
add
ss
add
mov
nop
insl
ror
pop
jmp
mov
lret
or
add
aas
jmp
push
or
ljmp
jle
pop
add
loop
dec
mov
push
in
add
mov
cmp
sub
js
data16
jge
repnz
mov
sbb
sti
xor
add
add
add
ficoms
fs
add
ds
push
jae
mov
mov
loopne
and
cs
imul
mov
shll
iret
insl
inc
lea
add
mov
fdiv
xor
inc
sbb
mov
mov
xchg
adc
mov
jno
xchg
add
and
pop
pop
insl
add
popa
sbb
push
push
pop
jge
enter
ret
adc
add
movsl
mov
mov
add
fdivrs
push
jg
std
or
push
xlat
test
add
jmp
sbb
xor
pop
bound
int3
outsb
xchg
jb
jo
pop
lds
add
mov
adc
stos
cmc
subb
add
movsl
ret
xchg
mov
cmp
adc
add
call
test
mov
adc
mov
and
rorb
add
sub
lods
adc
fs
pushf
fldln2
add
mov
adc
addb
xor
add
call
pop
pop
and
push
jne
call
pop
sbb
pop
lret
stos
or
cmpsl
add
rcrl
xor
call
or
cwtl
test
lods
xlat
sbb
jmp
push
inc
scas
sub
popf
add
mov
jle
add
test
sub
add
add
add
aaa
or
pop
add
and
add
add
push
cld
and
mov
jl
jecxz
jb
xor
sbb
lods
aad
xchg
push
add
dec
bound
out
mov
or
push
push
mov
jb
test
out
jae
stc
and
ja
add
xchg
xchg
repz
aad
scas
add
ljmp
inc
mov
lret
call
test
xor
xlat
pop
popa
into
pop
sbb
ficoms
push
rclb
cwtl
add
sbb
adcb
mov
or
push
fisttpl
cmp
stos
subl
shrb
out
mov
jl
out
arpl
add
inc
xor
leave
jg
add
mulb
pop
xor
mov
lret
mov
jo
enter
dec
ja
lcall
out
or
insb
fldln2
sahf
iret
add
jne
sub
mov
sbb
sbb
xchg
jo
add
notb
clc
gs
shlb
stc
mov
xor
add
pop
scas
xor
ret
xor
push
roll
add
pop
jge
xchg
in
add
add
and
mov
sub
shlb
fwait
push
mov
push
cmpsb
movsb
dec
stc
inc
xchg
xor
mov
jg
lret
subb
lock
pop
jns
xchg
test
fnstcw
jge
fwait
sbbb
push
repz
movsl
lahf
pusha
mov
adc
enter
jbe
and
inc
mov
fldl
jmp
mov
rclb
into
add
sub
jns
add
jle
negb
mov
leave
dec
movsb
add
outsb
in
sti
int
mov
mov
daa
negl
lods
xor
lret
mov
mov
mov
mov
pop
jb
add
clc
and
add
cltd
stc
fsts
jg
not
das
pop
add
add
mov
xchg
add
xor
mov
in
lock
repnz
xor
call
add
pushf
pop
js
mov
add
jg
aam
movsl
test
sbb
inc
xor
xchg
les
daa
movsl
sahf
insb
js
aam
out
cmp
mov
lods
in
es
sbb
decb
mov
jne
or
outsb
loop
in
aad
mov
jp
pop
test
or
add
aad
sub
inc
ja
add
in
mov
mov
sbb
or
mov
jns
push
and
icebp
les
pop
jp
mov
les
int
adc
jb
enter
xchg
mov
loope
fs
cmp
leave
sbbb
imul
add
iret
jle
xlat
or
sbb
lds
and
or
pop
and
lahf
pusha
pop
bound
cwtl
dec
add
jbe
subb
jns
pop
adc
leave
mov
push
sbb
pop
add
nop
add
mov
pop
jno
xchg
pop
les
dec
pop
cmp
rolb
int
das
push
nop
out
and
jle
add
stos
lcall
sbb
mov
outsb
sbb
mov
or
insb
aam
out
mov
mov
or
sti
pop
sbb
rolb
mov
jns
mov
push
dec
pop
cmp
adc
mov
repz
xor
adc
sti
pusha
add
addr16
js
xor
xor
ds
sub
js
push
push
add
sub
imul
and
cwtl
sbb
out
or
pop
xor
add
fs
addb
sub
movsb
sub
mov
cli
pop
sbb
insb
sub
leave
cmp
pushf
orb
orb
inc
es
lret
movsb
dec
ret
shl
jge
add
movsl
add
and
add
loop
cmpb
cs
out
cld
add
stc
repz
movsl
shrb
mov
sti
punpcklbw
lahf
data16
push
lock
pop
cmp
mov
xchg
push
and
add
sub
pop
and
stos
xchg
dec
sbb
ss
sbb
add
cwtl
lods
pushf
push
nop
mov
cld
add
jmp
outsl
xchg
mov
pop
pop
cmp
lret
dec
loopne
add
inc
cbtw
xor
mov
mov
adcb
fsubrl
add
sub
mov
mov
and
pop
outsl
sub
loop
jmp
dec
inc
xor
and
add
pop
jg
fsubrp
imul
mov
add
add
popa
sub
stos
mov
ljmp
adc
or
sub
scas
int3
add
jno
repnz
add
aam
aaa
into
xchg
push
pop
and
cltd
fsubr
and
setge
sub
push
jle
add
mov
push
xor
xor
cli
cmp
mov
mov
cmp
jl
rcr
rolb
add
jle
cmc
stos
aaa
xor
and
pop
out
ret
cmp
jmp
inc
sti
add
lcall
add
sahf
in
add
scas
lock
jb
cmp
mov
sbb
xor
or
je
mov
dec
addl
lea
add
xchg
mov
add
push
mov
mov
out
je
movsb
add
mov
and
and
pop
jo
dec
sub
xchg
movsb
inc
into
xchg
adc
jl
xor
dec
inc
add
in
les
adc
js
add
insb
outsb
add
add
inc
mov
add
xor
and
iret
add
adc
add
xor
pop
stos
lret
xchg
js
mov
push
push
cwtl
add
inc
sub
push
add
jns
dec
fistpl
add
lods
stos
xchg
or
pushf
dec
movsb
and
test
mov
add
rol
mov
popl
jl
insl
pop
adc
aaa
icebp
cmp
or
test
popa
jmp
mov
cmp
loope
lock
pop
inc
xor
daa
mov
cli
sbb
jmp
addb
adc
push
addl
dec
inc
or
shrl
hlt
fiaddl
loop
test
adc
mov
mov
add
and
mov
dec
push
std
and
icebp
jo
jmp
xchg
sbb
addr16
imul
pop
sub
and
aaa
cmp
hlt
lods
push
mov
popf
and
les
cli
scas
loope
aaa
subl
add
rcrb
je
pop
loopne
shll
push
clc
pop
jmp
call
xchg
xor
mov
es
push
jo
mov
faddl
sti
xor
lds
pop
les
xor
cld
pop
mov
xlat
lcall
scas
adc
pop
out
adc
cmp
xchg
and
add
or
imul
dec
stc
cwtl
out
cmp
jb
das
xchg
push
imul
jle
fdivs
fistpll
test
test
and
mov
add
frstor
enter
xchg
mov
pop
mov
aam
movsb
add
cmp
mov
arpl
rolb
pusha
mov
test
sub
lcall
dec
push
cmp
pop
and
jb
call
adc
loop
inc
mov
jge
add
jns
jl
xor
or
or
insb
mov
cmpsb
movsb
popa
jle
sub
pop
cmp
stc
inc
xchg
dec
mov
filds
clc
fisubrs
add
jmp
mov
mov
add
jo
adc
add
push
fwait
push
adc
push
cs
shlb
gs
xor
in
dec
popf
add
fxam
inc
lret
sub
add
and
lcall
mov
je
add
adc
mov
push
add
push
mov
add
in
lea
imul
or
xchg
lock
or
and
add
xor
pop
in
hlt
nop
aaa
pop
popa
add
inc
and
cmp
mov
call
icebp
push
push
addr16
negl
push
add
adc
insl
xchg
add
adc
stc
enter
cmp
leave
inc
movsb
inc
jmp
add
xlat
inc
push
add
lods
or
dec
cltd
sub
add
cmp
and
popl
pop
dec
inc
xlat
sbb
push
cmp
orb
test
shll
subb
sbb
and
and
jne
jae
mov
sub
inc
dec
ja
add
popa
mov
movsb
add
das
lahf
add
repz
iret
loopne
out
pop
xor
dec
jno
and
push
mov
add
mov
mov
aaa
lret
repz
inc
xchg
std
mov
mov
imul
pop
cs
addr16
push
jle
daa
pop
loope
dec
push
xchg
jl
aam
orb
loopne
xchg
cmp
jge
xor
stos
xorb
push
pushf
inc
push
add
cmp
sbb
pop
add
roll
jae
mov
pop
rcll
add
jb
xor
mov
inc
sbb
pop
stc
mov
cwtl
xchg
sbb
jge
pop
push
add
sbb
mov
cmp
mov
loopne
add
fs
pop
mov
inc
cmp
into
jbe
shl
sbbb
add
pop
mov
sahf
loope
mov
pop
dec
mov
ljmp
jo
and
push
push
mov
out
push
cmpb
or
xchg
insb
mov
add
jecxz
leave
mov
dec
adc
add
dec
aaa
sub
out
push
add
cwtl
shrl
and
xor
les
xchg
nop
stos
adc
les
mov
imul
add
test
push
inc
fs
je
das
xchg
in
push
push
adc
in
xor
sbb
jg
leave
pop
orl
jge
roll
popf
or
sub
jo
mov
fwait
mov
inc
push
loopne
mulb
fdivrs
sahf
ds
and
xlat
mov
cmpsl
cwtl
dec
push
add
idivb
add
sub
add
xchg
inc
add
dec
inc
scas
pop
mov
popa
fnsave
pop
push
add
cmp
loopne
aam
repz
test
mov
ljmp
cmp
and
addb
gs
add
jae
add
pop
loop
in
xchg
add
pop
add
daa
or
adc
lret
sub
aaa
mov
pop
xor
fldcw
dec
cltd
stos
popf
add
adc
xchg
mov
ja
jbe
sbb
lret
push
stos
adc
dec
shrl
inc
and
bound
fstps
pop
stos
loope
cmp
insb
mov
and
jmp
sbb
xor
push
test
or
data16
add
push
pop
in
sub
loopne
mov
jno
inc
shrb
dec
jp
or
mov
adc
and
imul
sbb
test
fcomps
adc
mov
loopne
pop
add
cld
sbb
fincstp
push
das
xchg
pop
int3
add
call
roll
clc
movb
lods
outsb
jnp
call
pop
jg
push
sahf
inc
icebp
repnz
or
mov
jns
cmp
ret
push
jl
ss
xor
add
jle
mov
jae
popa
mov
push
mov
faddp
add
repnz
add
dec
jle
pop
mov
das
add
pop
xor
cmp
ficoml
add
mov
loop
sbb
jle
or
mov
and
das
daa
and
mov
add
test
shl
mov
xor
scas
dec
in
repnz
bound
int
push
dec
ret
mov
arpl
add
ret
pusha
mov
dec
pop
pop
sarb
in
pop
test
mov
aam
sbb
sbb
arpl
and
cli
push
in
sarb
clc
dec
add
adc
push
ja
lret
pusha
add
sahf
cli
push
push
mov
push
rclb
mov
je
pusha
mov
repnz
push
pop
or
xor
and
ja
hlt
sbbb
adc
cmc
nop
fs
sbb
jg
xchg
mov
orb
fldenv
xchg
insb
bound
and
pop
mov
sbb
jle
add
sahf
out
inc
adc
push
aas
jae
in
sbb
xor
ljmp
cwtl
sti
mov
rolb
pop
mov
cwtl
in
fidivrs
xor
cmpsb
dec
scas
mov
hlt
dec
add
pop
int3
dec
pop
push
push
int
and
mov
lgs
add
jg
ljmp
icebp
les
xchg
push
adc
fdivs
stc
mov
clc
ret
repnz
pop
inc
jbe
pop
jmp
jl
pushf
dec
xchg
or
xor
or
mov
shl
cmp
test
lea
add
sbb
cmp
ja
adc
dec
add
mov
add
mov
jle
scas
add
jmp
mov
insl
arpl
roll
cmpsb
dec
sbb
push
in
add
jno
jmp
push
pop
adc
iret
sub
lods
aas
adc
add
arpl
mov
ds
add
test
sbb
add
stc
dec
int3
in
fnstsw
scas
out
ja
inc
cli
aaa
sbb
inc
dec
cmpsl
cmp
jbe
add
jns
xor
dec
pop
pushf
hlt
push
jnp
adc
icebp
xorl
xor
add
test
stc
sbb
inc
sub
out
dec
ficoml
push
push
bswap
sub
pop
and
mov
jl
mov
xor
sbb
add
push
mov
scas
in
lret
jg
add
lods
sub
xlat
call
push
xchg
dec
sbb
cs
mov
cmp
push
push
call
adc
cmp
add
push
inc
out
add
pushf
enter
incb
mov
int
lock
testl
add
std
loop
mov
sarb
add
xchg
andl
shlb
mov
xchg
and
insl
daa
mov
xchg
xor
imul
sub
add
inc
ja
add
int3
test
add
adc
add
sub
xchg
add
cmp
lods
adc
fucomp
dec
testb
aam
dec
or
mov
pushf
jb
fsubs
fmull
push
xchg
sbb
sbb
subl
test
fwait
add
shll
mov
sub
subl
jnp
or
xchg
pop
and
xor
test
push
add
sbb
jne
add
test
addl
jp
mov
cpuid
inc
and
adc
cmp
aas
or
stc
add
xchg
cwtl
pop
jg
sbb
inc
dec
mov
insb
fldl
clc
jno
jae
jge
xor
aas
repz
pop
sahf
pop
mov
aas
push
cwtl
xor
jbe
inc
add
xor
fadd
mov
xor
das
or
arpl
sbbl
addr16
imul
lods
outsl
add
popf
push
shll
pop
inc
sbb
pusha
dec
jl
add
ja
test
add
bound
xor
sbb
inc
xchg
sbb
rclb
dec
icebp
stos
in
pushf
dec
adc
sbb
push
sahf
add
mov
add
dec
out
add
insl
fiadds
clc
ret
rcll
cmp
ret
cld
inc
popa
mov
add
lcall
xchg
or
xchg
add
cmpsb
in
clc
xor
add
daa
int
mov
out
mov
aam
test
je
xlat
mov
add
mov
lods
add
ja
repnz
mov
add
popa
xor
loope
mov
in
scas
and
addr16
into
out
add
cmp
dec
ret
mov
add
cld
div
stos
dec
add
inc
imul
daa
sub
push
leave
insl
fstl
xchg
fstpt
and
cli
xchg
hlt
xor
add
sbb
cwtl
add
pop
mov
ja
adc
sbb
inc
jl
cmc
mov
out
sbb
pusha
push
sub
push
fadd
cmp
loopne
icebp
sbb
repnz
bound
cmc
mov
sbb
lcall
out
xor
loopne
icebp
stc
cmp
push
add
pop
pop
add
or
js
lahf
into
dec
dec
rolb
mov
test
loop
sbbb
xchg
mov
shll
jmp
add
or
daa
add
std
adcl
jl,pn
xor
out
jmp
push
js
push
outsl
or
add
adcl
fmull
add
dec
int3
and
icebp
ss
sbb
cld
dec
add
das
lahf
cmc
subl
int3
and
jo
fistpll
jg
out
sub
add
std
gs
cmp
loope
sahf
jbe
inc
outsl
daa
into
pop
push
mov
shrb
mull
adc
add
cmc
push
cwtl
lahf
sti
es
push
xorb
push
or
dec
or
fdivrs
insb
in
fstps
adc
fiaddl
pop
lcall
mov
test
lea
xorb
icebp
or
add
popf
jmp
mov
insl
pop
mov
popl
cmp
lods
subb
mov
in
dec
add
rclb
pusha
icebp
out
and
pusha
sbbb
out
mov
sbb
add
sbb
mov
in
pop
or
pushf
jp
sbb
pop
scas
jecxz
push
shr
es
mov
or
mov
call
xor
dec
test
nop
add
in
arpl
in
dec
cs
add
sahf
fmuls
popa
sarb
or
jle
xchg
incb
adc
or
lret
pop
adc
test
cld
pushf
adc
add
xchg
pop
aad
pusha
sbb
xor
push
out
cmpsl
lahf
add
fwait
xchg
shlb
sub
shll
pop
cs
cmp
jg
push
aaa
cmpsl
dec
stos
test
xor
mov
addl
and
jbe
lds
xchg
pop
sub
pusha
fwait
adc
mov
push
or
inc
fmuls
ja
xchg
out
insl
les
frstor
mov
adc
incb
in
push
fnstcw
jb
mov
test
push
lods
jbe
jne
shrb
dec
pop
inc
fldenv
adc
outsl
pop
stc
pop
sub
mov
sub
cmpb
jb
in
add
aas
add
int3
and
nop
in
nop
inc
rcrb
loopne
and
cmp
addb
sub
outsl
mov
inc
adc
jge
or
mov
fstps
add
mov
dec
ret
add
pop
andb
add
flds
mov
push
fs
imul
and
aam
repz
rorl
add
scas
inc
adc
ret
fnstcw
gs
lods
mov
inc
hlt
xchg
add
inc
xor
mov
dec
sbbb
stos
test
fcmovbe
scas
push
jbe
loope
mov
sub
pop
orb
add
dec
in
ss
les
inc
popf
lret
or
xchg
andl
ljmp
cmpsb
shrl
or
scas
call
add
enter
push
and
jae
std
movsl
fcoml
mov
sbb
inc
cwtl
scas
fidivrs
fsubrl
jle
testb
psubusw
xor
and
jle
aas
xchg
xchg
repnz
mov
mov
faddl
add
aam
or
lcall
pop
jo
mov
xchg
mov
gs
inc
xor
scas
test
sub
add
sbbb
rclb
add
repz
add
xor
ss
inc
inc
add
testl
es
out
push
flds
mov
out
pop
in
lock
sub
in
xorb
mov
addr16
cld
jl
jl
jecxz
int
sub
and
sbb
mov
mov
imul
insl
jnp
lea
int
cld
xchg
lock
jle
pusha
sub
pop
push
xchg
in
or
xchg
int
fbstp
mov
add
mov
pop
loope
addr16
mov
add
add
pushf
pop
js
insb
lahf
jp
mov
add
fwait
gs
mov
sti
sbbb
cmc
mov
fmuls
sub
sarl
cmp
add
push
imul
and
stc
je
add
out
adc
orl
fadds
out
xor
ljmp
pop
iret
cltd
xchg
cwtl
or
inc
sub
dec
cli
add
out
mov
sbb
ds
jmp
test
mov
jno
adc
aam
std
pop
xor
cmp
sbb
dec
lahf
xchg
iret
sbb
jle
mov
scas
lock
add
popa
pusha
push
xor
add
xchg
sbb
hlt
pusha
mov
nop
movntq
out
add
dec
pushf
push
repnz
lret
outsb
lods
dec
cltd
movsb
add
mov
loopne
ret
mov
rorl
jo
rclb
rolb
insb
ljmp
mov
addb
rcr
or
pusha
or
into
popf
out
sub
add
outsb
pop
mov
fs
add
xor
addr16
mov
jae
fwait
xor
mov
daa
addl
add
sbb
add
mov
rcll
jecxz
dec
enter
and
xchg
mov
mov
add
es
inc
sub
add
js
add
out
les
cmp
dec
ret
sub
insl
mov
cmc
mov
pop
or
cmp
stos
or
adc
lcall
loopne
add
imul
cli
add
js
test
cmpsb
dec
lds
mov
out
pop
movsb
push
fsubl
dec
jl
push
push
pop
mov
xchg
inc
or
inc
js
insb
sbb
inc
cmp
and
or
faddl
xchg
mov
sbb
add
and
mov
flds
test
js
pop
popa
js
mov
sbb
sub
addr16
icebp
test
mov
cld
add
test
cltd
div
lcall
jns
clc
pusha
push
dec
mov
mov
add
stos
cmpsl
test
subl
xchg
scas
into
push
test
xchg
ja,pt
mov
adc
add
pop
add
stc
adc
xor
cmp
add
pop
test
bts
cmc
cmpb
pop
stc
inc
outsb
adc
movsl
pusha
pop
pop
aaa
shlb
sbb
fwait
adc
loop
dec
ret
dec
movsb
andb
cmp
cld
adc
in
add
or
mov
lea
and
movsl
mov
add
inc
andb
and
inc
fisttpl
imul
outsl
sub
mov
xchg
add
add
lahf
mov
sbb
xor
sub
cmpsl
or
cmpsb
jbe
adc
cld
xchg
movsl
xchg
push
add
add
xchg
or
pusha
push
test
cmp
mov
out
sbb
mov
orb
addr16
mov
pusha
cld
add
push
push
cmp
dec
std
push
shl
pusha
mov
incb
push
adc
std
and
cmpsb
les
cltd
push
lods
mov
inc
cwtl
adc
aas
repz
jb
xchg
sbb
fsub
dec
call
mov
push
pop
cmp
mov
pop
cmp
inc
mov
push
and
cltd
clc
pop
lcall
push
adc
mov
sbb
sbb
xchg
jecxz
aaa
mov
push
lock
xchg
lahf
aam
and
xchg
pusha
sub
jne
inc
fildl
sbb
push
aas
fs
scas
add
sbb
sahf
push
mov
cmp
int
sub
incl
sar
add
sub
call
or
cmpsl
repnz
add
mov
xchg
add
pop
rcll
fsubrs
add
add
cmp
inc
xor
cmp
cmp
test
test
insl
movsb
adc
and
cmp
jno
jb
lcall
push
repz
int3
xor
add
outsb
loop
fs
mov
mov
outsb
add
jp
lcall
xchg
push
adc
mov
test
dec
inc
mov
shl
cmp
mov
adc
pop
pusha
hlt
mov
aas
mov
add
icebp
dec
outsb
fmul
arpl
filds
jp
popf
push
ret
lret
add
or
rol
xchg
or
adc
cmp
addb
xchg
cmpsb
je
add
mov
jg
cs
dec
mov
add
pop
and
jecxz
fsubp
pushl
shl
xor
lret
js
adc
mov
imul
sub
sub
pusha
fcomps
cmpsb
jno
add
add
cmp
mov
add
add
sbb
and
mov
cmp
lret
push
lods
jne
add
sub
je
js
dec
push
dec
enter
sbb
aam
sbb
jb
jp
fwait
mov
in
aas
imul
jbe
jnp
les
sbb
xchg
outsb
ss
jno
adc
and
data16
stc
rcrb
push
xlat
or
ret
push
sub
cmp
push
iret
and
mov
popf
mov
sbb
pop
pop
movsb
mov
mov
subb
sbb
subb
sub
adc
pop
daa
sub
push
in
mov
in
orb
cmpsl
add
lcall
test
popa
sbb
movsl
xchg
stos
adc
je
add
lods
inc
xor
aas
cmpsb
push
add
mov
es
pop
mov
or
stos
mov
pop
sets
xor
enter
test
add
loopne
jo
push
mov
imul
lds
movq
mov
fistps
shrb
es
push
sbb
push
stos
insb
nop
cmp
adc
dec
jge
add
arpl
xor
add
movsl
xchg
pop
push
pop
adc
pop
jae
mov
movl
adcb
add
popa
cli
mov
cltd
mov
and
add
and
jp
jbe
add
int3
push
push
jb
jmp
in
insb
add
fistps
lock
pcmpeqd
jae
movlps
sub
adc
pusha
mov
sbb
loope
pushf
nop
mov
add
add
lahf
jns
sbb
aam
stos
out
cmpb
iret
jp
add
fwait
cmp
or
add
mov
loope
out
sub
add
scas
jle
rolb
sbb
sar
stos
fcomps
js
xchg
mov
andb
pop
adc
lea
test
dec
cltd
mov
dec
pop
inc
jbe
xor
adc
ljmp
outsb
sbb
jmp
sub
mov
add
ret
pop
xchg
jb
fldl
pop
mov
sbb
add
ja
repz
add
jecxz
pop
stc
mov
repnz
push
into
fisubrl
ret
sub
inc
add
xlat
lret
daa
dec
subb
insb
mov
cmpsb
mov
push
lea
add
fiadds
sub
popf
testb
xor
mov
push
sti
rcrl
sbb
mov
dec
lds
pop
jns
add
out
add
cmp
inc
xchg
sub
jp
ret
cmpsl
fdivrl
rolb
pop
ss
out
loope
stos
add
sahf
daa
pop
sbb
sbb
test
insb
mov
or
pop
rcll
pop
pop
mov
add
xor
or
pop
aad
xorl
cvtdq2ps
sub
adc
outsl
push
pop
adc
cmp
das
and
adc
add
jecxz
in
repnz
adc
cli
adc
fadds
imul
cmp
scas
sbb
cmp
mov
push
outsb
arpl
test
or
adc
loope
sbb
sahf
jl
lea
fldcw
pop
lcall
xchg
jmp
and
jnp
addr16
xor
and
xor
add
fs
xor
pop
adc
xchg
ret
mov
pop
loop
and
mov
add
add
iret
jecxz
mov
andb
cmpsl
fidivrs
inc
out
cmp
test
cld
cmc
sub
std
jg
imul
mov
fwait
xor
pop
lret
shll
push
fadds
or
movsl
aaa
mov
add
xor
jle
adc
dec
add
repz
jp
cmpsl
mov
daa
pop
mov
pop
dec
or
inc
ds
or
fcoms
iret
out
xchg
jo
pop
jb
push
pop
adc
test
and
aam
and
and
in
dec
inc
pop
cmp
popf
add
fs
push
arpl
jecxz
cli
dec
dec
pop
push
add
int
dec
std
jbe
repnz
shrl
lock
push
mov
jecxz
loop
add
fistpll
fcomps
enter
pusha
adc
mov
lcall
ret
xor
xchg
repnz
das
pop
and
adc
jno
pop
mov
push
lahf
dec
inc
inc
sub
iret
adc
cld
jne
xor
sti
pop
xchg
pop
push
sub
add
cmp
xor
or
pop
xor
ss
mov
inc
cmpsl
sbb
sti
cmp
mov
xor
fidivl
outsb
popf
cli
mov
out
stc
lret
clc
adc
sbb
mov
hlt
lods
testb
dec
pop
sbb
outsl
inc
cmpsb
adc
insb
lret
aas
and
pop
das
inc
jno
sub
push
in
adc
or
mov
xchg
add
sub
jne
test
lock
xchg
inc
lds
out
cmp
loope
sarb
insl
add
clc
dec
xor
hlt
mov
ror
sub
test
mov
ret
inc
pushf
test
mov
sarb
xchg
sub
int3
in
pop
fcmovu
iret
cs
adc
push
add
loopne
add
in
push
add
loope
in
jge
sub
cld
loop
sub
push
lea
in
sahf
add
int3
xchg
lods
es
bound
adc
add
test
mov
scas
cmpsl
push
jb
push
in
outsb
out
inc
fidivl
push
aaa
and
add
lret
das
jo
out
stos
cwtl
cmp
xor
ds
xor
sarb
inc
aas
into
adc
jecxz
aaa
mov
xchg
pop
adc
add
mov
xchg
add
mov
ljmp
cmp
add
outsb
lahf
lea
push
add
frstor
out
lods
and
add
fsubs
cwtl
mov
enter
jns
xchg
add
adc
sub
jmp
int3
dec
pusha
pop
ja
cwtl
add
cmc
mov
inc
shr
mov
cmp
sti
add
and
jecxz
cmp
addr16
pop
xchg
push
andb
insl
negl
mov
lcall
fldl
clc
cmp
push
push
cld
lods
add
pop
adc
sub
mov
ret
push
dec
add
dec
xchg
or
add
loope
jae
add
lods
fwait
in
cmpsl
sbb
shl
add
xor
add
xchg
fnstcw
mov
add
adc
mov
pop
push
or
loope
stos
in
dec
ss
test
pop
or
mov
add
and
fisubrl
xchg
sub
jns
and
les
sbb
shlb
jno
jmp
mov
movsb
cmpsl
add
push
or
bound
ret
cmpsb
lahf
mov
test
xchg
add
jne
push
pop
push
jl
insl
adc
or
jmp
add
sub
jecxz
loop
decb
pop
xlat
shrb
mov
sbb
sub
cmp
rolb
dec
inc
push
xlat
cli
mov
add
test
dec
pop
and
xchg
or
cmp
adc
or
sub
das
hlt
popl
test
xchg
outsl
mov
xor
pop
mov
sub
xor
fistpl
mov
lea
push
ret
inc
add
push
push
js
pop
add
add
push
sbb
fisttpll
mov
jecxz
cmp
loop
pusha
mov
pop
scas
inc
lds
mov
test
push
movsl
fadds
add
lods
les
int
adc
push
xorb
dec
mov
mov
add
add
adc
xchg
call
repnz
xchg
xor
js
add
jl
cwtl
in
sub
mov
add
and
adc
iret
popa
shll
inc
push
push
push
cltd
add
pop
pop
in
test
push
in
mov
add
mov
mov
les
gs
rolb
arpl
mov
mov
stc
sub
subb
or
mov
cmc
add
jl
lds
repz
fcompl
js
xchg
add
mov
ret
aad
andb
mov
sbb
stos
sbb
cmp
popf
jns
adcb
inc
in
add
inc
inc
fdivrl
and
add
inc
mov
mov
pusha
ret
rclb
cmc
inc
aas
ljmp
fidivrs
and
add
xchg
fldt
imull
arpl
lret
sbb
add
cli
rcrb
cmpsb
jo
mov
adc
or
jo
pop
xor
adc
pop
dec
aaa
mov
ljmp
dec
ds
rolb
dec
xchg
adc
inc
mov
orl
dec
mov
mov
push
mov
push
jns
rolb
loopne
xor
xchg
add
out
rolb
dec
adc
cmc
test
ljmp
in
lock
hlt
add
data16
popa
aas
roll
sbb
sub
lods
test
mov
mov
sbb
dec
mov
add
es
lret
xchg
pusha
or
cmc
enter
fwait
rcrb
xor
or
mov
sbb
add
inc
jle
sub
imul
add
xchg
pop
or
pusha
cmp
shll
filds
scas
pop
or
arpl
and
or
push
stc
aad
add
cmpsl
add
fcomi
mov
push
add
jge
xor
add
push
jl
shll
mov
or
jge
mov
push
mov
add
stos
pop
lods
lret
loope
ror
push
push
xor
shlb
out
push
mov
ljmp
jmp
or
mov
ja
imul
stc
mov
add
sub
pop
mov
inc
cmp
shrb
dec
ror
outsb
fadds
xchg
out
mov
jmp
cltd
daa
inc
mov
push
lods
add
ljmp
add
add
pusha
add
adc
in
push
sub
dec
push
push
add
adc
jns
adc
jecxz
sbb
loopne
mov
lcall
gs
std
clc
shr
xchg
push
fadds
insb
cmp
xor
add
jae
js
jl
add
lahf
mov
mov
sbb
mov
xor
dec
icebp
add
push
push
adc
test
cld
sub
xchg
scas
dec
aaa
inc
or
xor
jl
ss
in
sub
dec
incl
mov
outsb
loopne
outsl
sub
add
rcrl
sub
int
loop
and
pop
popf
addr16
lea
addb
mov
push
les
add
dec
jo,pt
sub
push
imul
sbb
les
inc
jecxz
sub
aas
push
pop
mov
and
or
cwtl
sub
add
insb
clc
inc
cmpsb
loopne
jns
add
call
xorl
jecxz
and
in
fwait
es
stos
xchg
inc
filds
cmc
cmp
aad
add
or
cli
cld
pop
mov
jnp
add
fisubl
repnz
movsl
pop
inc
mov
mov
sbb
out
inc
mov
in
or
cmp
bound
pushf
add
mov
add
fadds
mov
lock
mov
orl
push
js
add
jno
sub
dec
jb
jo
je
or
jnp
mov
mov
fistpl
rcl
data16
mov
mov
mov
xchg
mov
cwtl
dec
fs
pop
sbb
jb
sarl
imul
xchg
sub
sarl
add
mov
xor
mov
outsl
movsb
and
inc
popa
mov
aas
je
icebp
lahf
into
adc
mov
jecxz
mov
inc
cwtl
jo
mov
add
addr16
dec
push
xor
sbb
add
setp
cmp
mov
cmovbe
cmp
cmp
add
loope
bound
add
push
xor
cmp
xorl
push
scas
add
in
scas
loop
mov
xchg
xor
in
aas
add
dec
mov
pop
std
sub
jmp
or
mov
cli
rclb
cld
pusha
dec
fprem1
scas
push
push
add
mov
and
push
dec
scas
lret
ret
jecxz
fucomp
shlb
sahf
mov
add
sbb
adc
jno
add
cli
xchg
mov
xchg
add
adc
xchg
xchg
mov
lock
in
sub
inc
mov
push
icebp
xchg
push
roll
inc
mov
roll
pop
add
mov
repz
mov
dec
cld
test
dec
add
mov
cmc
out
rorb
adc
dec
sahf
lock
movsb
rcrb
push
push
int3
cmp
cwtl
sbb
popa
fwait
insb
adc
aaa
xchg
add
dec
idiv
call
ss
out
cmp
push
leave
sub
and
add
fwait
stos
dec
xor
add
xchg
scas
mov
stc
add
mov
in
test
jns
sub
push
push
int
jge
push
mov
or
mov
and
pusha
inc
cld
daa
add
fisttpll
stc
push
add
subl
push
sub
test
mov
add
aad
sbb
mov
add
cmpsl
pusha
push
xor
jae
mov
cmp
out
adc
mov
xchg
dec
ret
mov
inc
mov
mov
add
pop
cmc
pop
and
andb
loop,pt
insl
mov
loope
dec
out
pop
cmp
push
dec
mov
pop
or
xor
test
out
adc
ficoml
in
adc
mov
pusha
orl
lock
cmp
push
pop
bound
cld
sbb
ds
inc
dec
call
movsl
loop
dec
pushf
int3
and
and
add
rcrl
add
and
jns
int3
push
adc
jbe
leave
or
dec
pop
inc
push
xchg
cwtl
iret
aad
cmpsb
pop
shrl
jp
mov
pop
mov
mov
shlb
push
add
add
jl
pop
and
lock
cli
jmp
cmp
fistpll
pusha
shrl
add
inc
jmp
insb
int
mov
cmpsl
add
aam
xor
shlb
cmc
lock
pop
sub
aas
push
lea
inc
adc
adc
fisttps
adc
add
outsb
xchg
dec
xorb
fistps
xchg
or
cmp
pop
imul
nop
out
int3
lcall
xchg
cmp
dec
loopne
bound
xadd
cwtl
inc
xchg
inc
sbb
adc
outsl
mov
adc
aam
mov
int
cmp
dec
sbb
lds
daa
pop
insb
add
adc
and
push
push
xor
pop
aam
dec
out
test
pop
push
sahf
ud2
jne
pop
mov
xor
loopne
fimuls
jo
sub
mov
add
inc
jge
add
repnz
adc
outsl
rolb
or
mov
loopne
das
iret
dec
add
pop
lods
in
xchg
jnp
inc
rcll
pop
sub
pop
inc
mov
pusha
mov
repnz
stos
adcb
sub
mov
push
repz
dec
inc
add
add
int
fwait
rolb
fidivrl
mov
dec
jno
mov
push
scas
add
mov
ficompl
push
pop
loopne
lods
loop
pushf
push
xchg
add
sbb
or
xlat
sub
adc
mov
ficomps
fwait
add
mov
push
jo
or
sbb
push
es
or
push
add
ss
push
add
stc
cmp
stos
js
aaa
add
orb
dec
insl
fcompl
jmp
jmp
jmp
xchg
mov
cmp
cs
repnz
adc
jmp
jo
mov
jle
and
mov
or
insb
push
stc
adc
das
inc
xor
inc
aaa
test
add
or
mov
jns
cmp
bnd
adc
add
sub
js
mov
les
mov
dec
add
add
ljmp
xlat
add
jb
xor
pop
adc
pusha
and
cltd
lcall
subl
dec
stc
mov
decl
loope
jno
in
jae
mov
or
addr16
add
roll
int3
mov
jle
add
push
push
add
sub
leave
jecxz
lods
mov
outsb
sti
cmp
fs
rcl
xorl
dec
je
std
sub
sbb
ror
jmp
scas
dec
dec
lods
xchg
pop
push
in
out
pusha
out
andb
fcoms
xchg
out
popf
xor
pop
pop
inc
xor
xorl
and
jl
xchg
js,pn
out
and
sbb
jns
adc
add
loop
inc
std
add
xchg
mov
in
sbb
mov
pop
jge
xchg
lock
pop
jp
add
int
dec
add
pop
sub
sub
or
shr
mov
sub
xlat
imul
jbe
push
jae
scas
ffreep
shl
test
imul
lret
or
out
mov
repz
add
add
inc
or
mov
dec
in
fcoms
bound
pop
add
std
jle
pop
add
nop
add
xchg
pop
into
add
jnp
push
adcl
pop
imul
push
add
xor
jle
jmp
filds
push
jp
mov
add
push
or
sbb
loopne
xchg
call
stos
inc
arpl
in
inc
xchg
add
add
adc
pop
not
jns
lds
outsb
pop
adcl
add
push
dec
pop
pop
jmp
xchg
clc
xor
jecxz
xchg
divl
aaa
pusha
stos
jo
xchg
push
aas
xor
mov
sub
data16
shlb
mov
or
jmp
imul
add
sbb
stos
inc
pop
loopne
mov
push
dec
add
xchg
enter
add
mov
add
sub
and
cmp
mov
add
sub
shlb
jmp
fnstenv
lahf
ljmp
mov
cmc
add
push
cwtl
dec
jmp
pop
dec
lahf
sbb
sub
jo
dec
pop
bound
mov
mov
test
sbb
enter
add
push
in
jne
and
dec
rcrl
test
mov
xor
xchg
addb
add
in
mov
add
mov
subl
ret
cli
push
leave
shlb
jne
push
add
shlb
faddl
inc
sbb
jo
pop
add
jecxz
mov
adc
mov
add
jne
pop
fildll
fildl
nop
stos
cmp
lock
mov
xor
jmp
pop
sbb
test
push
sbb
js
inc
push
ret
sahf
cmp
imul
xlat
mov
fucomp
and
cs
mov
mov
add
std
adc
jb
inc
jmp
in
fprem
call
add
dec
faddl
in
mov
add
mov
out
or
int3
jl
popf
and
or
outsb
xor
icebp
push
add
out
insb
push
cmc
jecxz
shrb
imul
mov
scas
cwtl
adc
mov
xor
or
xchg
pop
jb
xor
shlb
xorb
loopne
inc
arpl
add
aas
fiaddl
dec
sbbl
mov
sub
ficompl
add
lock
and
out
add
sti
dec
push
add
dec
add
clc
addl
lret
std
pop
push
cwtl
add
inc
pop
scas
and
lcall
insl
fwait
sbb
jecxz
add
inc
jge
jl
add
inc
lock
pop
test
das
and
pop
clc
xor
jg
imull
pop
mov
gs
lods
jb
clc
movsb
call
dec
aad
lock
jmp
pop
jecxz
test
add
xchg
adc
std
cwtl
or
sarb
mov
es
jg
add
out
das
stos
ljmp
mov
add
pop
jnp
or
add
sti
jp
mov
loope
add
mov
or
cmp
jle
add
adc
sbb
or
mov
sbb
add
and
pop
xchg
arpl
test
xchg
push
rclb
jno
adc
lret
inc
loop
clc
inc
faddl
mov
call
fstpt
jg
push
or
adc
mov
stos
pop
dec
insl
add
inc
movb
add
rcrl
aad
jl
sbb
gs
sarb
cmp
dec
add
lock
jg
test
test
in
or
ds
xor
xlat
or
mov
add
sarl
jae
or
add
fsubrs
dec
xchg
out
and
test
outsb
mov
jo
push
scas
add
push
movsl
pop
in
jg
lcall
adc
aam
add
sub
je
jnp
cmp
add
sahf
aaa
insb
jns
inc
push
adc
add
jae
push
add
repnz
pop
sub
stos
add
mov
fadds
adc
scas
jg
hlt
outsb
jge
add
je
push
imul
add
and
flds
pop
sbb
mov
xor
mov
mov
pop
add
sbb
lcall
and
adc
push
adc
add
dec
sbb
cmpsb
push
add
cmp
add
cmp
jle
add
loop
cmc
sbb
dec
aaa
xchg
xor
jo
push
popl
add
adc
mov
push
mov
fisubl
addr16
cmpsb
ja
cmp
enter
loopne
jbe
add
in
js
rorb
fadd
add
or
jmp
enter
js
add
jbe
in
push
jge
and
shrl
stos
mov
inc
mulb
xor
inc
add
sbb
jl
test
add
fistpll
adc
pop
cmp
add
jl
xchg
loope
xchg
bound
cmp
add
and
cmp
and
lret
cmpsb
dec
add
pusha
jge
incl
sbb
and
xor
loopne
add
or
hlt
mov
sar
adc
out
test
cmpsb
sub
adc
lods
add
cmpsl
push
pop
add
xchg
das
in
add
dec
mov
jle
add
push
fwait
out
push
add
shlb
add
inc
xchg
add
fimuls
rolb
fisttpll
enter
jnp
lret
mov
aas
mov
xlat
lods
ret
mov
and
adc
add
jmp
ds
jmp
movb
mov
adc
les
add
jb
std
pop
add
xchg
jge,pn
pushf
es
adc
adc
add
push
lods
rclb
sub
testl
fstpt
pop
add
mov
call
mov
push
dec
add
sbb
mov
stos
jo
fimuls
mov
add
mov
ret
lock
aad
jns
fwait
jmp
mov
inc
nop
push
add
popf
pop
add
pop
sbbl
push
insl
les
cld
push
scas
adc
add
push
icebp
lods
push
int3
decl
insb
dec
fwait
cwtl
cmp
leave
add
jbe
je
jge
cmp
push
in
lret
popf
cs
or
xchg
popa
add
repnz
mov
inc
add
lahf
cmp
push
aam
push
icebp
loop
adc
jno
push
gs
and
aaa
jp
push
cmp
subb
lahf
jmp
js
add
rcl
mov
movsb
jge
dec
loopne
mov
mov
add
xchg
cmpsl
adcb
cmp
adc
add
arpl
testb
pop
or
cmp
mov
in
data16
add
sbb
xchg
add
and
mov
mov
pop
fdivl
bound
sbb
aad
add
ret
sub
mov
add
xor
clc
pop
lods
lds
adc
mov
xchg
mov
aam
jl
sbb
mov
inc
add
pop
add
xchg
mov
movsb
add
aas
push
push
test
adc
pushf
nop
rcrb
mov
mov
mov
and
sbb
dec
push
cwtl
inc
push
xor
roll
mov
xor
imul
sbb
stos
xchg
sbb
lods
fucomip
jl
dec
and
pop
cld
lods
xchg
pop
mov
add
mov
jnp
push
adc
test
jae
add
push
add
xor
add
mov
xchg
inc
das
js
dec
push
aas
add
cmpb
daa
add
mov
fwait
sub
int3
xor
sahf
jge
add
movsb
aad
test
mov
adc
add
pop
push
out
fs
rclb
sub
inc
ljmp
add
aad
dec
push
push
push
rolb
or
mov
xchg
and
fistpl
ja
inc
add
loopne
mov
clc
mov
mov
sbb
loope
push
aam
or
or
and
in
sub
test
fwait
pop
sbb
mov
dec
je
inc
add
icebp
stos
mov
iret
andb
test
xor
cli
or
inc
jne
fisttpl
mov
movsl
test
movsb
xchg
sub
in
lock
testl
scas
mov
iret
in
pop
push
sbb
in
rcrb
ret
cmpsl
sbb
or
pop
xchg
cs
dec
and
xchg
ret
out
lock
es
sbb
lock
cwtl
bswap
ja
add
add
ficoml
mov
lret
push
loopne
push
add
and
jl
cmp
into
adc
cmp
std
mov
add
test
movsb
cli
fistpll
add
int
lods
stc
pop
push
mov
int3
out
jecxz
in
fiadds
aas
sarl
jae
rolb
sbb
adcb
push
push
rcr
add
inc
or
jl
inc
and
bound
inc
mov
test
imul
jle
or
mov
out
push
rol
adc
repnz
sub
ss
xor
cld
lds
add
out
imul
push
or
mov
mov
add
jle
into
ja
test
inc
mov
push
clc
push
pop
mov
ds
inc
add
push
mov
test
inc
add
inc
xor
push
icebp
add
cld
shrb
dec
cmp
mov
sub
imul
stos
sahf
rcl
arpl
loopne
xchg
jne
push
cmp
lahf
icebp
pop
in
lfs
add
add
scas
daa
movsl
push
test
ljmp
mov
mov
xchg
scas
xchg
test
push
adc
test
repnz
adc
or
pop
cmp
dec
rol
add
xchg
or
bnd
or
mov
xor
aam
fstps
sahf
push
pop
sbb
add
sti
xchg
cli
cltd
sub
dec
test
pop
xchg
shll
cmp
icebp
ljmp
add
mov
lods
dec
xor
in
add
adc
fs
mov
or
lds
jns
inc
sahf
sub
cmc
push
nop
sarb
rolb
jo
add
ror
addr16
add
js
xchg
jecxz
clc
mov
in
shll
dec
ficomps
xchg
rolb
or
test
mov
add
aas
or
aaa
mov
or
pusha
ror
ljmp
xchg
clc
jp
fiaddl
push
pop
cs
jno
sarb
xor
call
inc
out
mov
rclb
jp
in
jae
ret
insl
sarl
sub
push
xlat
inc
xor
pusha
test
jo
mov
insb
jg
mov
jbe
fildll
fstpt
in
lfs
inc
daa
fs
xchg
mov
lock
outsb
pusha
mov
loop
add
fmulp
pop
orl
xchg
aam
shlb
dec
sbb
notl
sbb
hlt
add
fmuls
sub
aam
add
inc
mov
add
in
sbb
sbb
sub
lahf
push
fs
mov
int3
jp
scas
jl
arpl
dec
inc
pop
xchg
mov
lahf
or
stos
nop
inc
cmp
popf
fcoms
popa
popa
pop
jg
out
test
jecxz
pusha
push
push
insb
mov
dec
or
jp
mov
xchg
jg
mov
sub
flds
xchg
sti
mov
or
psubd
pop
sbb
xorl
mov
and
iret
mov
lods
shl
shlb
int3
or
addb
stos
xor
xchg
stc
js
and
and
sub
cmpb
sbb
mov
pop
leave
mov
dec
add
popf
dec
sbb
cltd
cmp
lahf
mov
hlt
stos
dec
add
ret
cmp
add
ja
bound
fcomps
sbb
scas
mov
mov
pop
xchg
stos
sbbb
push
push
ljmp
rcrl
cmp
xchg
mov
jecxz
push
jge
xchg
sbb
andl
loop
adc
dec
nop
adc
push
iret
movsl
xor
push
add
mov
add
imul
push
cltd
or
into
xchg
and
cmp
pop
ljmp
imul
enter
mov
xlat
sahf
cmp
roll
insl
es
inc
ja
shl
and
in
fsts
xchg
in
ret
inc
mov
sub
pop
xor
ret
pushf
xchg
adc
mov
xchg
sbb
sub
mov
push
add
and
or
and
lahf
insb
inc
les
add
faddp
aaa
insl
ret
mov
dec
addr16
mov
sahf
xor
cmp
xor
push
popl
xor
mov
nop
cmp
or
cmpxchg
adc
mov
lods
cltd
loopne
rol
das
cli
fs
insb
popf
jmp
or
jb
das
dec
into
and
sub
jle
subb
push
add
icebp
lods
ss
pop
in
cld
test
add
std
xchg
rcrl
daa
push
lret
cwtl
pop
in
les
stos
and
or
jnp
push
fdivrs
ret
or
inc
pop
fnstsw
sahf
mov
rcrb
divl
cli
xchg
pop
in
std
enter
mov
fisubrl
cli
mov
pop
test
bound
inc
insb
adc
add
add
les
ror
sbb
arpl
mov
cld
pop
lret
xchg
add
sbb
pop
xor
dec
pop
or
adcb
xor
mov
andb
stos
shlb
pop
mov
add
jg
pusha
mov
subl
leave
cwtl
dec
pushf
add
int
cwtl
or
lea
adc
nop
pop
and
cli
pusha
pop
jne
add
and
pusha
stos
mov
dec
gs
inc
int3
repz
lret
xchg
les
and
bswap
push
mov
mov
pop
xor
adc
leave
sbbl
clc
add
inc
adc
mov
push
xorl
outsb
push
int
jae
add
xor
sub
mov
mov
into
nop
loopne
xchg
or
xor
push
cmpb
shlb
ret
leave
in
dec
push
mov
loopne
xor
fmuls
scas
int
repz
cmp
loopne
mov
push
stos
orb
mov
sub
xor
pop
hlt
xlat
cs
pop
mov
rolb
xchg
les
gs
mov
into
mov
sub
cwtl
test
and
cmp
mov
push
xor
in
mov
in
add
inc
fbstp
out
push
add
jl
push
into
or
addr16
jns
rcll
sbbb
mov
jbe
test
jg
movsl
rolb
sub
push
xchg
loopne
sub
mov
pop
push
cmp
inc
test
xor
and
aad
pop
ficompl
scas
fstpl
cmc
dec
cmp
xor
mov
dec
push
popa
cmp
jo
jo
mov
jns
cwtl
or
adc
add
xorps
ds
pop
dec
and
mov
repnz
nop
lret
add
pusha
and
pop
sub
add
adc
push
lret
fcompl
icebp
mov
sbb
mov
jns
mov
xlat
clc
pop
scas
xchg
add
push
add
mov
mov
add
std
pop
mov
xor
or
xchg
adc
push
mov
or
xor
jbe
push
mov
mov
shll
xor
ds
cmp
aam
cmp
or
test
mov
addb
inc
mov
push
or
xor
xchg
cmp
xchg
inc
or
or
aaa
inc
popa
mov
mov
xor
mov
popf
je
pusha
pop
and
lock
jge
xchg
or
pop
cmp
and
mov
pop
xor
jo
sub
add
shll
add
test
fwait
out
lock
pop
xchg
mov
dec
movsl
cmp
xor
ds
inc
xchg
sbb
dec
dec
sbb
jae
scas
or
das
xchg
jge
pop
lds
add
push
loopne
dec
out
pushf
fstl
lea
add
mov
sub
inc
pop
push
xchg
dec
lea
shlb
jge
xchg
stos
push
add
xorl
js
cmpsb
scas
sbb
add
cmp
dec
or
inc
test
add
sub
cmpsl
push
scas
sar
roll
popa
and
in
cmp
loop
lods
fadd
aam
std
pop
stos
ljmp
pop
and
sub
cmp
push
cltd
push
dec
aad
jecxz
pop
and
out
pop
mov
leave
xor
dec
sbbb
mov
adc
mov
test
add
std
mov
ljmp
sbb
mov
pop
loop
mov
mov
lods
xor
mov
lock
push
xchg
add
inc
xor
add
ret
push
xlat
cmp
fstl
push
push
enter
dec
add
stos
sahf
xlat
adc
add
mov
shl
add
aas
xor
es
pushf
das
cltd
push
push
mov
adc
and
orb
cmp
in
stc
int3
push
jp
in
add
test
or
loopne
add
xor
rolb
outsb
or
cmpsl
imul
mov
add
clc
push
mov
jno
flds
adc
add
stos
ja
shll
push
in
push
icebp
test
pop
insb
pop
pop
or
add
shlb
std
add
or
test
arpl
inc
adc
mov
loope
adc
xor
xor
ljmp
jmp
dec
add
in
cmp
int3
pop
add
mov
add
dec
inc
pop
push
jne
call
sub
in
iret
les
push
cwtl
test
xor
adc
rorb
scas
inc
mov
mov
inc
jns
jne
add
enterw
pop
mov
mov
mov
add
xor
aam
aad
cli
push
pop
es
pmulhuw
pop
or
outsb
or
inc
loope
dec
insl
adc
stc
add
mov
add
mov
lret
and
pop
sub
xor
cld
fiadds
arpl
roll
loopne
mov
mov
ss
out
fcoml
stos
lea
cs
mov
leave
add
pop
test
ja
scas
imulb
add
cltd
call
testl
mov
adc
push
and
add
sub
cld
jge
cld
mov
sbb
and
or
rclb
es
ficompl
into
rclb
mov
js
pop
out
sbb
push
daa
sub
aaa
dec
mov
or
add
sahf
enter
popf
test
pop
fdiv
xchg
jnp
xor
je
add
sub
cmc
cmp
xchg
popl
add
movd
push
out
or
xor
xor
je
mov
fnstsw
push
cltd
hlt
iret
cmc
xor
xor
dec
in
pusha
pop
cli
ljmp
cwtl
push
xchg
shrb
dec
sbb
mov
xchg
add
mov
adc
aam
add
push
cmp
add
leave
sbb
jne
les
popf
popa
jl
movlps
lds
sub
mov
loopne
push
jnp
pop
add
cmp
sub
adc
lahf
xchg
xor
out
lods
in
jae
cld
dec
add
cld
sbb
xchg
add
fbld
enter
sbbl
inc
cmp
sub
shl
pop
or
sub
pop
dec
rol
dec
fwait
lret
add
inc
and
jae
jnp
jo
add
psubq
pop
cmp
add
jo
jecxz
jg
push
test
xchg
and
sbb
pop
add
divb
add
jbe
in
insl
jp
add
repnz
mov
dec
in
xor
push
stos
ja
dec
add
inc
mov
jae
add
dec
mov
jmp
adc
push
push
pop
cmpsb
sub
pop
mov
jnp
sti
adc
shll
shlb
les
add
adc
je
cld
adc
nop
sub
testl
pop
shlb
pop
rcll
mov
hlt
lock
add
test
jb
not
addr16
cmp
pop
and
shrb
sbb
adc
jae
jbe
into
out
inc
daa
aad
add
jne
loopne
fwait
add
mov
add
addl
jns
cmp
pop
add
pop
fisubl
pop
mov
push
push
mov
cmp
inc
cmp
inc
daa
adc
dec
xchg
in
add
stos
dec
xchg
pusha
shlb
mov
sub
push
jo
push
push
or
pop
add
clc
dec
and
daa
shlb
add
int3
fdivs
push
test
and
xchg
mov
cld
add
xor
shl
inc
nop
je
cmpl
add
mov
or
imul
adc
or
push
ds
sbb
jge
add
jecxz
pop
adc
jp
mov
dec
or
es
mov
mov
and
testl
sbb
in
in
xchg
decl
sub
int3
pop
data16
xchg
and
std
clc
xorb
add
adc
popa
insb
ljmp
pop
ja
test
cli
add
lahf
lcall
add
lret
test
inc
mov
dec
xor
add
dec
mov
adc
jno
cmp
cs
jne
lock
jb
xchg
inc
stc
in
add
sub
repnz
aas
add
aaa
xlat
sbb
lea
pop
pmulhw
into
or
mov
push
ss
in
jo
mov
in
mov
lods
inc
lea
cmp
push
hlt
out
inc
lods
or
cmp
xchg
add
stc
sbb
ret
pop
cmp
add
out
fnstenv
lea
pop
mov
lock
pushf
mov
scas
call
rolb
sub
mov
pushf
add
out
inc
cli
push
cmp
out
filds
loope
add
or
les
cli
or
test
int3
test
xor
push
cltd
push
add
xchg
aaa
rorb
mov
add
loopne
fwait
and
aad
inc
mov
inc
adc
scas
sub
outsb
sbb
sbb
push
fiaddl
and
push
cmp
mull
loopne
push
pop
faddl
subb
mov
or
cs
mov
jno
mov
mov
test
jnp
mov
push
xor
or
mov
out
aas
out
lret
sub
push
add
and
popf
add
cmp
outsb
mov
pop
testb
push
out
in
push
xor
xchg
lods
or
add
test
inc
pushf
arpl
ds
lahf
adc
out
repnz
cmp
inc
outsl
mov
pop
arpl
inc
cmp
pushf
xlat
int3
sbb
add
push
js
mov
xchg
mov
fiaddl
out
push
add
mov
mov
loopne
mov
cmp
mov
sti
sbb
mov
pusha
lahf
xor
add
outsb
mov
add
ret
mov
aaa
add
insb
adc
pop
add
stos
push
adcl
pop
dec
loopne
cmp
push
mov
pop
pop
inc
stc
fwait
sub
roll
orl
inc
and
lock
pushf
mov
pop
jmp
add
dec
fisubl
test
xor
ljmp
in
jl
add
and
dec
fimull
cmp
aas
js
andb
or
jle
movb
xchg
enter
inc
dec
adc
add
mov
and
sbb
add
std
xchg
sub
rcrb
cmp
fmuls
lret
lds
repz
push
sbb
lock
lds
pushf
or
pop
add
not
lods
in
movl
dec
jbe
xchg
fisubs
mulb
xchg
stos
inc
pop
iret
loopne
xor
sbb
cmpsl
mov
cmpsb
sub
cli
mov
out
int3
addb
pop
sbb
adc
add
fistps
leave
lds
lods
jp
das
jl
out
testl
and
loop
sbb
or
addr16
in
sbb
lcall
test
mov
lret
push
dec
jns
int3
out
add
xchg
and
mov
add
shlb
ror
inc
pop
lock
inc
stos
adc
xor
add
loope
insb
mov
mov
das
fisubl
pushf
cwtl
pop
mov
js
mov
add
shr
data16
decb
gs
negb
add
pop
fidivrl
je
add
adc
xchg
cli
cmp
cs
jbe
jle
mov
lock
push
cmp
inc
and
jge
sarb
mov
dec
cmc
pushf
xor
loop
fisttpl
je
mov
push
fistps
cli
mov
push
and
xchg
jne
mov
push
or
andb
test
fldl
dec
in
inc
add
pop
push
add
or
sbb
xor
jge
inc
xchg
adc
add
js
das
test
in
push
loopne
icebp
test
mov
xchg
adc
ficoml
fwait
testl
or
lods
addl
sbb
stos
jg
sbb
test
pop
add
and
sbb
push
lret
xchg
std
add
and
add
mov
or
dec
adc
fisubrl
inc
inc
test
ja
and
cmp
out
into
daa
inc
jb
pop
adc
mov
add
test
xor
add
push
dec
loop
fmul
pop
fistpl
mov
movsl
sub
shll
jb
push
mov
push
push
in
ffree
dec
pop
sub
add
hlt
mov
scas
loopne
push
outsb
add
jo
jae
add
xchg
xlat
roll
int
ja
push
nop
mov
add
js
jbe
add
imul
bound
outsl
add
pusha
sbb
xchg
inc
addl
daa
jnp
xchg
add
movsl
dec
cmp
loopne
insb
sub
fistpll
faddl
add
inc
add
scas
adc
xchg
stos
or
mov
cmpsb
ret
dec
int
xchg
sti
je
mov
cmpb
mov
sbb
add
or
push
ret
mov
leave
mov
xchg
inc
fucomp
mov
cmp
xchg
inc
push
inc
repnz
add
pop
ja
sub
cmp
push
mov
add
pop
js
mov
filds
cmpsb
clc
test
mov
ds
xor
pop
loopne
stc
add
jecxz
cmp
enter
sahf
adc
inc
xlat
or
mov
push
imul
shlb
fdivl
sar
test
cld
mov
add
stos
cli
je
in
push
xor
in
dec
add
jecxz
fs
xchg
pusha
adc
push
jae
push
xchg
clc
push
and
add
cli
mov
push
xchg
stos
jb
js
add
fsubrl
sahf
hlt
xor
ljmp
and
sbb
or
push
negl
lods
sbb
cld
bound
push
push
rorl
cmpsl
call
pop
and
inc
cmp
xchg
dec
fildll
sbb
mov
mov
add
test
xchg
into
decl
sti
adc
or
jne
fsub
rcrb
jbe
icebp
popf
push
call
lcall
repnz
add
xchg
imul
in
stos
inc
shrb
add
push
or
and
ficoms
xor
sbb
or
addb
das
push
cmp
std
add
imul
cmp
xor
add
movb
stos
add
mov
fmull
cmc
mov
test
in
cmp
out
loop
add
js
sbb
in
mov
xor
add
mov
add
popf
sub
rcr
push
ljmp
lods
mov
jae
out
hlt
addb
push
and
ds
add
sbb
lea
aad
stos
sub
or
fiaddl
jmp
add
sbb
repz
xor
idivl
shr
cmp
js
loop
add
mov
inc
and
ret
stos
add
test
enter
adc
inc
add
outsl
add
test
mov
cwtl
pop
sbb
and
out
or
insb
cmp
add
cmpsl
out
push
lock
mov
or
pop
enter
add
pop
xor
dec
lret
aaa
add
lahf
iret
outsb
cmp
xchg
sub
cld
add
push
mov
pusha
pop
lret
cwtl
add
les
add
iret
mov
mov
movsl
sbb
adc
push
dec
push
sbb
push
outsl
mov
ljmp
mov
push
push
or
rclb
ljmp
and
inc
scas
add
push
push
dec
push
out
add
shrb
movl
dec
les
out
mov
pop
roll
add
jle
out
out
scas
xchg
bound
jb
pop
sbb
add
jp
cmp
add
mov
inc
int3
iret
pusha
mov
sbb
sub
inc
add
mov
jns
push
and
sbb
lods
add
je
sbb
ja
inc
push
dec
push
int3
imul
pop
jecxz
lahf
add
sarl
cmp
push
aam
sub
cmp
addr16
lods
mov
rclb
lea
pop
stos
outsb
in
cli
add
incl
sub
scas
add
and
add
pop
ja
adc
mov
hlt
mov
sub
shl
sbb
cmp
mov
cmp
out
scas
sbb
repnz
xchg
shrb
popa
push
dec
addr16
pop
mov
sahf
add
mov
ficompl
stos
js
push
lgs
pop
fadd
cltd
fnstcw
add
cmp
or
mov
je
mov
ss
sahf
out
add
push
push
lret
push
popf
jo
and
bound
and
fdivrs
sbb
inc
and
clc
push
test
cmpsb
mov
push
dec
mov
add
sub
mov
dec
or
cmpsl
and
push
test
mov
add
and
jg
cwtl
push
or
out
mov
add
jmp
add
xchg
fistpll
dec
add
out
roll
fstpt
pop
push
add
imul
add
popf
fmuls
into
inc
dec
or
testl
and
push
inc
push
jg
icebp
sub
push
jno
es
inc
outsl
fldenv
push
imul
adc
jno
add
push
movsb
das
popf
cli
pop
add
sbb
jl
dec
in
mov
jbe
add
xor
fisttps
mov
ds
jp
push
in
out
push
pop
aad
mov
xor
movsb
pop
jne
cli
adc
add
add
lret
scas
mul
pop
pop
add
cmp
cmp
or
aam
adc
and
cltd
sub
jle
mov
fimull
aam
into
and
push
cmp
xor
jo
inc
add
and
or
cmp
mov
leave
pop
addr16
lods
das
pop
cmp
sbbb
mov
mov
sti
lahf
xchg
sub
add
dec
and
outsl
add
mov
inc
cmp
fucomip
shrl
stc
or
dec
push
sub
push
dec
sub
and
adcb
addl
fistl
add
sar
rcr
lret
jo
lock
inc
pushf
add
fwait
mov
enter
xchg
std
xor
cmpsl
cld
jle
sahf
fldl
sbb
fldt
add
jno
outsl
add
divl
out
lahf
daa
and
scas
cmp
push
aad
mov
dec
in
xchg
push
add
pop
insb
pop
push
add
dec
push
xchg
jnp
iret
push
rolb
jle
std
xchg
mov
js
cwtl
insb
jp
add
push
out
pop
mov
add
inc
add
mov
push
add
fcom
add
bound
add
and
cmp
ds
lret
das
cs
jne
add
xchg
in
pop
repnz
mov
adc
prefetcht2
fs
cmp
and
xchg
js
cmp
flds
cmp
mov
inc
and
xor
enter
push
adc
add
and
push
mov
inc
mov
aam
or
push
scas
repnz
addl
and
jecxz
mov
sahf
xlat
imul
dec
aas
in
popf
cvtpi2ps
adc
std
sbbl
pusha
sbb
sub
lods
adcb
xor
js
xor
adc
mov
clc
pcmpgtw
pop
ret
pushf
vpackssdw
movsb
ss
notb
pop
xorb
andl
mov
add
cwtl
mov
repz
cmp
loopne
xchg
add
jnp
fmuls
mov
outsl
pop
inc
mov
js
icebp
lret
test
add
inc
gs
pop
arpl
pop
inc
lds
mov
push
add
fstpt
cmp
xlat
add
gs
imul
fwait
pop
scas
xor
adc
add
fs
mov
and
gs
jg
mov
pusha
ljmp
sahf
push
out
movb
in
mov
mov
mov
outsl
mov
inc
in
in
rorb
ja
lahf
or
cwtl
mov
lcall
hlt
pop
jmp
mov
dec
pusha
cmp
jne
jl
or
adc
fwait
cmp
fists
or
jg
add
add
in
scas
ljmp
dec
push
pop
or
stos
cs
fucomi
add
adc
js
and
and
jl
std
jae
faddl
cmp
mov
xlat
orl
sbb
mov
cmpsb
repz
add
mov
movsb
lods
inc
sub
aam
xchg
add
ss
sub
addb
xor
add
cmp
mov
adcb
ljmp
aaa
mov
mov
inc
dec
xchg
mov
ret
stos
fidivrl
ja
add
jl
add
inc
mov
pop
sbb
inc
sbb
or
xor
cmp
xchg
orb
sbb
mov
ret
add
imul
mov
push
mov
adc
jbe
ja
test
add
push
or
dec
jae
pop
test
hlt
ret
loopne
inc
orb
pop
mov
mov
add
mov
fcmovne
enter
lret
push
jnp
mov
lea
inc
ret
push
pusha
fmul
xchg
cmp
mov
xchg
in
jns
or
negl
sbb
ret
add
adc
in
jo
leave
add
and
pop
es
cmpsb
test
push
inc
xor
lock
jge
dec
push
pop
int3
loop
adc
fwait
lods
les
push
xchg
inc
sahf
xchg
xorps
mov
cli
add
das
sub
dec
sub
ds
rorb
add
push
jns
xchg
add
mov
xchg
push
cmc
jae
or
or
xorl
jno
lock
dec
jp
add
fstpl
add
cmc
mov
leave
mov
push
push
cmp
sahf
mov
insb
xor
lcall
and
xchg
mov
xchg
lods
add
push
shlb
jle
add
push
mov
sbb
outsb
imul
inc
mov
pop
sbb
imull
stc
cmp
pusha
jno
push
icebp
jne
inc
adc
push
sub
inc
pusha
push
inc
es
jge
mov
orb
add
int
or
sub
stos
add
out
fadd
test
xor
cmc
sub
lock
push
push
mov
inc
fdivl
cmpb
push
sub
mov
and
js
icebp
test
xorb
mov
shlb
xchg
subl
inc
mov
sub
add
in
test
daa
jg
pop
pusha
pop
jno
add
and
mov
sub
lods
adcb
add
pop
add
cli
mov
mov
rolb
jno
cmp
pop
sub
or
inc
pop
inc
mov
dec
push
sarb
notb
ret
fwait
dec
add
sub
nop
jg
push
xchg
sbb
lock
ja
out
clc
push
fcmovnu
daa
pop
inc
adc
cmpsb
lahf
sub
addr16
add
push
insb
andb
sub
jne
bound
gs
pop
stc
pop
scas
sub
mov
sti
stos
stos
add
lods
or
inc
push
imul
pusha
mov
add
pop
or
add
and
push
cmp
lahf
pusha
cmp
add
negl
mov
jecxz
dec
movsl
add
cli
mov
setp
ret
jecxz
adc
lock
xchg
test
sub
sysexit
xor
mov
or
cld
aam
push
mov
add
adc
stos
push
int
int3
jp
add
cmpsb
or
mov
add
mov
xchg
test
pop
lock
mov
in
repnz
mov
sub
push
add
test
outsl
shrb
or
lahf
push
stos
sarb
push
xchg
dec
adc
pop
jp
out
cld
or
inc
push
test
inc
les
push
adc
fucomp
shl
hlt
outsb
or
mov
adc
in
cs
mov
add
ds
pushf
jge
dec
loopne
fldl
test
dec
mov
sub
aad
jae
jne
mov
pop
add
out
call
add
lret
jl
andb
xchg
add
or
popa
pusha
add
push
xor
es
loope
mov
or
jge
insl
inc
jns
and
adc
add
fdiv
nop
fnstsw
sti
lds
call
leave
das
setbe
sub
add
mov
add
mov
out
pop
leave
add
loope
or
ja
add
add
insb
iret
push
std
sub
mov
add
mov
or
jmp
and
sbb
out
sti
loopne
cmc
or
add
and
test
jne
fcos
les
out
pusha
ret
js
or
mov
xchg
jno,pn
je
jae
push
or
adc
fmuls
cmp
and
dec
or
add
popf
or
adc
pop
loopne
pusha
cmp
daa
faddl
jle
xchg
push
sub
lea
outsl
push
clc
push
add
mov
push
sbb
sbb
adc
add
shrl
xor
add
test
movsl
out
fcmovnu
add
in
retw
add
addr16
sbb
xor
add
pusha
mov
cmp
repz
cmc
dec
rcrb
jnp
add
scas
inc
push
inc
fldl
fs
clc
sbb
dec
mov
push
add
mov
filds
sti
mov
sub
add
sbb
add
push
faddl
mov
rcr
add
xchg
push
jmp
fdivs
mov
add
pop
xlat
scas
xor
mov
das
push
lret
inc
xor
add
dec
dec
inc
rorl
mov
test
nop/reserved
loopne
inc
shr
mov
lods
mov
sbb
push
sub
cmp
push
and
ja
add
jle
xlat
mov
xchg
cwtl
cmp
push
and
orb
mov
add
int3
test
jg
mov
pop
faddp
mov
add
aas
mov
dec
xchg
xchg
pop
jle
sbb
dec
nop
xchg
or
mov
aam
mov
call
fmul
add
mov
fiadds
pop
mov
cli
push
mov
cmpsl
add
sub
bound
add
fistl
notb
or
and
pusha
jnp
push
in
or
shl
jb
mov
xchg
xor
addr16
mov
jge
enter
jl
testl
andl
xchg
mov
sub
add
insb
testl
cmp
clc
add
pop
xor
rolb
sbb
sbb
clc
jmp
mov
add
xchg
jmp
fildl
repnz
mov
mov
dec
add
clc
sarl
call
dec
dec
dec
push
inc
sbb
add
mov
addr16
push
fcomps
lods
pusha
add
sub
jp
add
lds
add
and
push
out
dec
fwait
add
lock
sbb
fcoml
loopne
add
fwait
int3
add
xor
or
pop
call
sub
jecxz
scas
shl
push
sbb
pusha
sbb
popl
mov
roll
jb
jle
pop
xchg
das
and
in
iret
push
jp
mov
nop
xor
aad
jle
rcrl
sbb
add
jno
cltd
add
dec
js
jb
ja
add
repz
dec
cld
icebp
clc
test
les
jle
sar
add
cmp
cmpsl
mov
add
mov
das
sbb
xchg
xor
mov
sbb
dec
in
push
add
gs
xchg
add
es
andb
push
pop
enter
jge
js
mov
xchg
orb
xlat
iret
inc
mov
shll
dec
stos
mov
fwait
push
xor
push
addl
add
cltd
cmpsl
or
int
sbb
mov
lock
add
popf
rcll
cmpb
pop
icebp
pop
sti
add
dec
mov
and
enter
clc
jle
pusha
lds
fistl
iret
jmp
mov
test
xchg
inc
push
aam
or
sub
or
mov
mov
mov
sub
adc
mov
incb
mov
fwait
mov
mov
test
dec
mov
adc
jnp
and
frstor
cmpb
mov
pop
lahf
jne
xchg
dec
add
and
nop
pop
shll
lock
adc
add
mov
into
xchg
fcoml
pop
rcll
or
xchg
lahf
sbb
mov
icebp
jge
bound
pop
dec
aam
es
pop
repz
push
add
sbb
add
add
insb
out
push
lds
arpl
filds
icebp
mov
xor
ret
inc
mov
sbb
mov
xchg
add
add
pop
mov
cmp
inc
adc
ret
sbbb
xor
rolb
data16
stc
inc
mov
push
sbb
fimull
js
push
add
mov
add
fisubl
add
or
orb
push
fs
xor
cld
in
add
dec
dec
push
jl
jbe
cmpl
add
or
lock
sbb
sbb
out
jo
rcr
outsb
test
mov
add
add
or
pop
mov
xlat
testb
adc
push
xchg
jp
sbb
ja
rolb
xlat
movsb
add
insb
mov
incl
addr16
push
into
sub
stc
je
popf
aas
sbb
add
stos
inc
xchg
add
mov
arpl
push
gs
add
outsb
cmp
add
daa
and
jle
push
add
movsb
cmpsb
in
push
push
and
mov
jo
jne
in
sub
xlat
cmp
hlt
addb
pop
inc
xor
jle
cmpsl
daa
std
inc
faddl
out
mov
test
xor
loopne
push
fldl
sahf
pop
cmp
rolb
inc
add
js
into
dec
xor
mov
add
mov
pop
mov
jns
xor
add
push
xor
or
jge
mov
add
scas
loope
jmp
insl
mov
test
push
cli
lds
and
add
add
sbb
xchg
icebp
dec
test
xor
scas
sub
pop
inc
arpl
add
xchg
jno
faddl
pop
pushf
sbb
repz
lahf
int
sub
push
jae
in
adc
or
pop
addb
mov
mov
lcall
stos
es
mov
add
enter
jmp
ds
rolb
aam
dec
adc
mov
movsl
cmpsb
shll
or
in
mov
and
daa
add
dec
cmpsb
and
or
sar
cltd
in
sbb
loope
mov
adcb
cmpsl
jg
jno
jbe
add
in
fs
sub
cmc
add
shlb
pop
and
sbb
jle
das
add
pop
daa
adc
mov
adc
mov
mov
dec
or
testl
aam
repnz
mov
pop
add
pop
adc
enter
add
mov
sbb
fs
mov
es
clc
or
addl
dec
add
test
mov
jp
push
mov
xlat
arpl
jo
add
mov
dec
aas
add
int
xchg
js
push
enter
into
in
cld
pop
sbbl
xchg
add
mov
xlat
add
add
outsl
insl
pusha
dec
push
mov
mov
out
jl
add
mov
push
in
fiadds
jp
jge
inc
dec
and
testb
jecxz
mov
test
pop
adc
test
rcll
or
mov
nop
add
in
cld
dec
mov
mov
add
out
cld
add
mov
popa
ret
jmp
aad
jge
jp
jg
add
jl
cmpsl
xchg
or
cmp
mov
jge
in
iret
sub
mov
adcl
dec
sub
xchg
dec
stos
jge
mov
mov
push
push
aad
add
ret
jmp
adc
pop
shlb
adc
or
jecxz
fildl
mov
sbb
xorl
cld
cmc
je
call
sbb
test
add
sbb
ja
jns,pn
add
es
or
cwtl
test
mov
pop
sub
add
adc
test
mov
jnp
add
int3
adc
pop
mov
jp
outsb
nop
and
lock
shll
lods
or
add
mov
add
pop
orl
jmp
add
push
mov
movsl
xor
out
adc
cwtl
or
add
add
xor
insl
rorl
adc
sbb
pusha
cmp
es
pop
rcrl
sbb
jns
std
adc
mov
popf
xchg
fsts
test
test
xor
add
mov
sbb
add
xor
or
test
add
jno
call
nop
fwait
dec
or
pop
xor
pop
loop
sti
or
in
jns
pop
cld
mov
pop
in
lret
nop
sbb
stc
popf
call
mov
sbb
and
roll
add
divb
dec
and
adc
enter
or
push
cwtl
mov
in
pop
popa
dec
inc
jge
ss
out
sahf
inc
je
jmp
add
sub
inc
lods
cmp
rclb
pop
or
or
stos
idivb
lock
dec
pop
jg
xor
sahf
push
add
clc
pminub
outsb
aas
mov
stos
fs
ljmp
sub
scas
and
dec
mov
test
in
aas
imul
out
xor
or
shrb
push
fwait
inc
lock
data16
pop
push
xchg
add
adc
mov
mov
aam
fists
sbb
repz
xchg
pop
out
cmc
test
loopne
lock
and
popl
pop
mov
testb
pop
imull
or
mov
mov
repnz
inc
jmp
ds
add
cmpsl
cmp
add
ss
test
cmp
mov
dec
hlt
mov
push
add
and
push
lret
icebp
faddp
scas
andb
aaa
mov
incl
pop
bound
mov
incl
repz
and
and
mov
add
adc
pop
pop
addl
mov
xchg
pop
xchg
hlt
pop
sbb
push
subb
loopne
dec
xchg
sahf
js
push
testl
add
aam
dec
push
loopne
fisttpl
jmp
and
int3
push
inc
fmull
lcall
add
jp
data16
shlb
xchg
fstpt
add
iret
jecxz
pop
ret
add
xor
and
mov
shl
mov
fisubs
pop
in
fiaddl
add
cmp
repz
add
adc
jo
mov
addr16
hlt
add
insb
loopne
jge
cmp
add
stos
and
jle
xlat
add
sub
dec
stos
push
scas
hlt
add
and
insb
les
mov
add
inc
add
in
jno
sub
pop
sub
mov
lods
mov
xchg
test
add
loop
push
pusha
dec
out
ja
cwtl
aas
jmp
sbb
pop
pop
adc
cmpsl
int
sub
cmp
aam
sahf
xchg
xor
inc
into
and
pusha
inc
sub
push
adc
movsb
test
lcall
xchg
daa
and
outsl
xchg
addb
adc
arpl
add
dec
inc
add
addl
in
fcmovnb
push
mov
repnz
jno
xchg
or
xchg
xor
or
in
add
dec
push
pop
mov
and
jl
pop
sub
data16
enter
movsl
andb
jle
repnz
sbb
pop
pop
fldt
cld
inc
adcb
inc
mov
jmp
loopne
clc
imul
mov
and
add
js
xor
mov
pop
repz
adc
and
mov
insl
pop
jecxz
jne
xchg
adc
adc
pop
out
pop
daa
hlt
sti
cmpsb
or
xchg
mov
and
loop
les
pop
push
jae
lret
cwtl
jbe
xchg
mov
add
call
push
in
pop
xchg
ret
add
aas
pop
xor
adc
dec
or
popf
push
sbb
mov
cli
and
xor
mov
fidivl
insb
out
ss
out
lret
cmp
jo
ja
jmp
movsb
inc
ret
jmp
es
push
sub
and
fadds
add
push
sub
jb
jle
fwait
push
cmp
leave
pop
fdivs
loopne
incb
pop
pop
add
pop
mov
add
mov
inc
jne
sbb
add
cmpsl
xor
mov
rolb
add
in
inc
jbe
and
stc
xchg
sub
sbb
sbb
in
test
pop
addl
mov
nop
scas
xchg
cmpl
dec
icebp
fs
loopne
popl
mov
jbe
iret
inc
or
push
mov
pop
push
in
push
add
stc
inc
fnstcw
loopne
mov
pop
pop
and
push
push
testb
js
ja
or
add
aam
or
negb
je
loop
push
dec
add
sbb
push
out
push
mov
jg
xchg
adc
pop
mov
dec
cmp
xchg
lahf
add
movsb
ret
not
call
ss
in
pop
mov
ds
sub
cmp
rorb
mov
mov
fwait
gs
add
and
cs
sub
jl
add
jp
cwtl
inc
ret
add
sub
mov
les
shr
mov
sbb
lret
loopne
cmp
or
mov
orb
call
adc
jne
add
imul
add
outsb
xchg
inc
ret
dec
aad
push
sub
jp
dec
out
movl
and
incb
sub
enter
xchg
rolb
or
mov
cmp
js
ret
fwait
cs
xor
int3
adc
sub
testl
xchg
mov
jle
or
pusha
jbe
enter
or
roll
into
lods
mov
dec
andb
jo
xor
fisttps
add
cmc
dec
or
add
xchg
fnstsw
jno
jp
lds
pop
add
push
add
enter
repz
fwait
sbb
sub
sub
add
pop
cmp
cmpsl
fsubl
addl
mov
bound
sbb
movl
pop
hlt
sub
add
scas
cmp
mov
add
testb
xor
sub
int
adc
jmp
mov
fstps
lods
add
adc
pop
or
outsb
cwtl
push
or
xlat
add
test
sbb
test
and
mov
lahf
inc
and
sbb
enter
mov
outsb
insl
data16
aas
xchg
add
xor
test
add
gs
push
sub
addr16
ljmp
sbb
pop
test
adc
pop
sbb
dec
or
pusha
rcrl
pop
sub
pop
rcr
xor
push
push
cmpsl
dec
or
or
add
lea
mov
shlb
ja
es
xchg
mov
cmp
ret
shrb
sbb
insl
daa
pop
pop
mov
lahf
fadd
jbe
push
inc
add
mov
imul
push
add
test
add
popf
sub
pop
xchg
dec
adc
lds
add
andl
dec
push
jo
shll
outsl
add
mov
cmp
sbbl
sbb
add
pop
push
jecxz
mov
add
subb
in
ret
sbb
mov
sbb
mov
or
addl
cmp
decl
cmp
xchg
int3
mov
mov
lret
bound
cli
xchg
xor
pop
add
mov
pop
test
shlb
stc
nop
push
add
inc
cmc
mov
or
pushf
inc
daa
je
lock
pop
aas
in
add
lcall
lock
ficomps
add
mov
sbb
and
fldcw
fnstsw
mov
lods
push
out
cmpsl
rorb
xor
pop
out
fcomps
inc
pop
loop
test
mov
pop
rclb
int3
add
jmp
ss
mov
inc
sbb
mov
lret
xchg
mov
lds
dec
icebp
cmc
or
ja
xchg
xor
xor
sub
es
jmp
lret
or
jbe
sbb
mov
push
subb
push
jbe
out
inc
add
imull
arpl
sub
push
fimuls
cmpsb
push
movsl
test
or
or
fisttpll
in
filds
sbb
scas
int
test
and
repnz
mov
sub
or
mov
and
add
add
pop
cmp
cli
and
ds
cld
inc
mov
push
xchg
xor
sbbb
pop
sub
dec
ds
mov
adc
nop
add
movsb
jo
cmp
outsb
jg
aas
orb
push
loopne
inc
imull
mov
repz
sbb
mov
sbb
iret
addl
pop
testb
cmp
addb
das
enter
test
add
lret
shrl
add
fidivs
std
sbb
pop
fiaddl
and
pushf
aas
lods
or
mov
pop
enter
aad
pop
addb
add
and
lock
cmp
lods
adcb
lret
inc
mov
rclb
enter
rcrl
add
scas
xchg
loop
mov
cmp
sub
xchg
jo
stos
aaa
pop
add
add
xchg
push
mov
scas
subb
cmc
into
out
or
add
dec
cmp
mov
and
sub
rcrl
mov
push
jg
add
cld
insl
and
sbb
xor
pusha
pop
add
fisttpl
add
jno
cwtl
clc
and
inc
insb
pop
lcall
sti
cli
rolb
mov
fidivs
and
cltd
data16
sarl
mov
xchg
aad
ret
loope
sub
and
iret
loop
ret
scas
push
jecxz
adc
je
jbe
inc
fsubs
lret
xor
negl
notb
add
addl
add
lds
stc
cmc
lcall
imul
inc
cwtl
sub
xor
xchg
mov
mov
pop
adc
addb
repnz
and
xchg
movl
pop
mov
sbb
test
xor
push
push
add
int3
add
lret
cwtl
dec
out
sbb
in
in
mov
rolb
pop
add
pop
pop
dec
cld
aam
jb
mov
fadd
int3
xchg
in
jo
je
sbb
call
pop
dec
mov
mov
or
cmp
pushf
push
sub
cmp
mov
add
fcmove
je
icebp
cwtl
mov
aam
ja
scas
xor
insb
fdivs
adc
push
inc
mov
mov
add
mov
nop
out
scas
stos
cwtl
add
lds
pop
jge
cmp
pop
pop
std
in
int
add
call
loop
push
in
mov
push
sti
jbe,pt
pusha
sbb
xchg
out
daa
add
stmxcsr
scas
jbe
sti
mov
in
outsl
pop
jmp
add
and
cmpsb
inc
jbe
add
fcmovu
faddl
inc
daa
and
jg
cmp
cld
or
imulb
inc
jmp
xor
xor
jle
pop
ja
loop
mov
out
rorb
loopne
test
adc
dec
or
mov
cmpsl
int
out
and
insb
fildl
test
jp
adc
pop
xor
popa
add
inc
dec
in
mov
jbe
shll
cmpsl
and
adc
xor
sahf
add
dec
lods
cmp
inc
dec
lret
sub
add
test
and
mov
add
imul
mov
pop
and
add
sahf
mov
ljmp
add
cmp
and
out
sub
sbb
mov
enter
int3
out
inc
loope
inc
jmp
cmpsl
subb
ds
xchg
add
fists
xchg
mov
mov
push
sti
stos
add
fsubl
push
lods
push
xchg
add
fwait
mov
cli
ret
shll
mov
mov
dec
movd
jne
push
mov
sbb
add
or
fiaddl
add
jo
or
or
lahf
sub
add
add
in
loope
mov
mov
cmp
jl
add
mov
pop
xchg
or
fildl
push
shrb
inc
test
je
adc
dec
in
adc
jmp
pusha
push
cmpl
cmpsb
fcomps
sbb
fs
stc
and
and
sbb
push
add
jmp
daa
clc
jbe
mov
nop
pop
mov
inc
pop
fildl
or
jne
test
cli
mov
enter
dec
jg
loope
int3
aas
js
sub
lret
add
jne
xchg
cltd
mov
mov
push
sbbb
pop
pusha
repz
mov
mov
add
cmp
xchg
inc
or
jge
vminss
add
movsb
mov
incl
xor
lods
int3
daa
scas
inc
enter
adc
inc
std
add
or
and
aas
divb
cmp
aas
mov
iret
fidivs
push
jno
sub
push
in
faddl
add
mov
sub
pop
ljmp
out
incl
push
adc
xchg
sub
fmulp
addr16
or
cld
dec
push
nop
xor
or
pop
inc
lcall
push
out
inc
jns
nop
add
jnp
rclb
add
add
or
js
mov
xchg
jecxz
and
sahf
sub
iret
mov
push
mov
movsb
sub
into
add
leave
int3
outsb
adc
inc
and
enter
aad
pushf
mov
or
addr16
xor
ljmp
mov
iret
or
adcb
lock
jns
adc
and
imul
mov
add
loopne
mov
mov
xor
loop
dec
dec
cmpsb
or
push
insb
sbb
mov
movb
push
int3
cmp
movsl
add
push
mov
mov
mov
mov
xor
pop
sbb
imul
push
mul
popf
and
pop
in
fnsave
mov
lock
stos
mov
pusha
fstps
jmp
pop
repnz
xlat
xchg
insl
dec
add
in
xor
aas
lea
rorb
sub
mov
or
leave
fimuls
stos
rolb
ret
cmp
insb
xchg
std
addr16
sbb
cmp
adc
sbbb
add
flds
sub
or
roll
sbb
lea
loopne
jecxz
mov
add
stos
ds
sysret
xor
outsl
sbbl
lret
add
cmp
or
adc
pop
stos
fisubs
and
sbb
mov
pop
outsb
add
xor
lahf
dec
add
jge
jecxz
xor
test
dec
jo
lret
cmp
movsl
nop
out
add
int3
cmp
rolb
cld
mov
lock
and
xchg
mov
outsb
popa
adc
mov
add
and
xor
adc
mov
and
bnd
jno
push
adc
scas
add
popf
adcl
cmpsl
add
ja
mov
pop
dec
mov
movsl
in
loop
cli
enter
pop
hlt
pop
adc
mov
add
mov
sbb
lods
aaa
xor
add
jns
xchg
adcb
jmp
xor
adc
sub
sbb
jo
stc
push
mov
xor
push
test
dec
jg
pop
data16
cs
mov
and
add
mov
sub
sub
movsb
cmp
aaa
ret
scas
dec
clc
xchg
ja
push
imul
add
xor
or
add
fsubs
and
das
enter
mov
add
orb
push
push
xlat
sbb
xchg
arpl
int
sub
fstl
shll
xchg
inc
in
dec
out
or
mov
or
jns
push
push
add
jb
iret
mov
inc
xchg
movsb
add
imul
add
lods
jmp
or
adc
std
xchg
inc
nop
movsb
sahf
cld
bound
xchg
add
mov
enter
lea
dec
mov
stc
dec
add
int3
pop
push
in
and
or
lds
add
mov
add
mov
mov
imul
push
and
pop
addl
lds
test
xchg
dec
mov
cmp
mov
mov
mov
sub
pop
subw
xor
add
and
test
mov
push
adc
pusha
jno
mov
pop
mov
mov
adc
add
inc
aad
sub
xchg
nop
pusha
add
in
nop
jmp
rolb
and
in
cli
pusha
add
sbb
outsl
mov
xchg
jp
lret
pop
sahf
add
pop
add
or
mov
or
push
adc
inc
cmp
movl
sbbl
clc
adc
out
leave
mov
add
or
and
lock
stos
dec
lret
imul
rolb
mov
clc
push
orb
cld
push
inc
es
ds
push
xchg
repnz
ror
sbb
hlt
sti
sbb
mov
movsl
out
add
bound
test
data16
scas
roll
shlb
add
loop
jno
int3
cmp
mov
popa
or
add
inc
push
dec
and
and
jnp
shrb
ret
arpl
pop
bound
test
sub
cltd
popa
sbb
add
scas
push
push
repnz
mov
xor
xchg
xor
xchg
cld
add
pop
dec
je,pn
mov
push
shlb
fstpt
lea
loope
add
inc
add
push
nop
mov
addb
add
mov
js
add
mov
shlb
pop
sbb
inc
or
and
repz
adc
negb
icebp
in
inc
aam
stos
mov
shrb
push
ja
aas
adc
add
movl
imul
inc
int3
add
inc
inc
xor
xor
ljmp
xor
jno
pop
outsb
aam
lea
in
scas
or
mov
jmp
mov
adcl
or
mov
test
rol
iret
sbbl
add
adc
add
jg
push
jge
popa
add
jl
inc
add
lods
vmptrst
and
add
outsl
scas
xlat
xchg
leave
and
mov
dec
test
flds
push
sub
mov
xchg
add
iret
add
pop
es
das
sub
and
cld
lods
call
jne
jmp
ret
andb
mov
pop
mov
xor
inc
mov
ss
jne
mov
fs
push
cmc
ss
push
sti
pop
enter
orb
xchg
aas
js
in
xor
add
cmp
xchg
pusha
andb
loopne
sbb
add
imul
adc
or
add
sub
dec
dec
push
mov
aad
into
bound
jns
sbb
push
add
mov
add
pop
mov
int3
decb
scas
outsl
xchg
or
push
cld
jg
cmp
shlb
out
mov
es
out
js
sbb
inc
icebp
and
out
lcall
fstl
ret
add
mov
inc
mov
arpl
cli
movsl
xchg
sub
add
sub
jg
rsm
addr16
flds
lret
and
push
rcrb
ljmp
mov
aam
call
cmp
rcr
add
scas
add
std
test
sahf
or
mov
scas
ljmp
test
sub
add
mov
mov
push
dec
pop
cmp
fdivrs
mov
sbb
bound
popa
push
pop
mov
dec
jbe
add
aad
ret
insb
inc
add
mov
jne
cmp
rclb
cmp
xor
sbb
xchg
jns
fwait
andnps
aaa
add
fbld
js
jmp
mov
xor
aas
push
std
jb
dec
add
sbb
fs
lret
hlt
lods
or
inc
jp
sbb
mov
add
fsubr
xchg
and
and
dec
dec
jo
add
mov
sub
add
inc
adc
dec
jl
or
les
push
mov
mov
jae
xchg
add
push
jno
add
adc
fwait
sub
clc
add
mov
inc
sysret
mov
dec
jno
add
fdivs
add
mov
and
add
aas
sbb
or
add
push
in
adc
loop
add
sahf
inc
popa
mov
orb
test
xchg
adc
jge
notl
orb
sbb
and
add
sbbb
jg
sub
sarl
pop
test
cmp
adc
fwait
jo
mov
add
cld
jecxz
fcoms
rcr
call
add
shrb
movsl
mov
pop
lcall
xchg
enter
sarb
lock
add
adc
hlt
popa
push
int
andb
or
mov
fnsave
les
sbb
ret
xchg
subb
mov
add
push
cmp
aad
mov
mov
dec
cmc
rol
das
add
push
call
pop
stos
pop
je
test
enter
outsb
pop
clc
dec
fisttpll
insb
add
mov
cld
bound
pop
shlb
add
mov
iret
in
sub
push
rclb
cld
and
ljmp
aas
sarl
mov
and
jl
adc
mov
sbb
cmp
adc
je
cmp
adc
arpl
jl
adc
adc
fdivrs
adc
mov
ret
inc
adc
dec
dec
testl
stos
pop
adc
daa
fiaddl
add
lahf
aam
cmpsl
sub
add
jle
mov
cmpsb
pop
pop
cmp
xor
lock
push
sbb
dec
mov
dec
out
mov
add
mov
out
add
jp
lcall
shll
stc
inc
cmpsl
or
daa
cld
jp
sbb
jge
cmpl
aam
shrb
sub
vsqrtss
dec
pop
push
add
push
mov
sub
add
mov
dec
add
in
lret
add
in
les
xchg
cmp
mov
div
xchg
push
lret
pop
add
pop
das
flds
push
jnp
add
adc
add
jg
and
lods
mov
daa
int
in
rolb
xchg
imul
fldl
out
xchg
les
add
scas
xchg
lock
jo
cli
fldenv
pop
mov
cmp
add
sbb
mov
cmpb
js
int
faddl
outsl
pop
rolb
out
push
ljmp
cmp
add
ljmp
sub
mov
adc
loopne
jecxz
leave
pusha
arpl
lods
subb
xchg
testb
push
cmpsb
xchg
cwtl
fimuls
sbb
xor
lahf
add
pop
imul
cmp
sbb
in
jecxz
xchg
cmp
notl
dec
add
dec
lock
add
inc
test
imul
mov
stos
xchg
fidivrs
setle
push
inc
inc
jecxz
xor
rolb
out
push
mov
add
stc
xchg
inc
dec
inc
int3
repz
adc
push
push
push
add
jle
sbb
dec
outsl
and
sbbl
inc
xor
es
les
push
cmp
sub
orl
lahf
stos
pop
mov
sarb
jnp
cmp
dec
xor
adc
outsl
adc
loop
xlat
add
in
push
ljmp
aad
into
xor
nop
add
stos
shrb
add
sub
cmpb
jecxz
sbb
pop
clc
jg
push
popa
pop
sbb
sub
into
inc
jae
cmc
arpl
bound
mov
and
pop
jae
add
lods
inc
jge
lods
xor
mov
insb
js
add
in
std
int
cmc
or
out
bound
lds
test
xchg
movsb
xchg
pusha
inc
mov
add
addr16
adc
and
dec
sub
push
loope
sbb
pop
aad
pop
mov
cmp
inc
lock
or
inc
cltd
sub
stc
aad
jnp
int
dec
add
scas
cli
fisubrl
mov
mov
pop
dec
call
lret
dec
clc
fildl
cmc
xor
and
cmp
pop
not
mov
and
push
mov
pop
inc
cmp
loope
ds
push
add
gs
flds
sbb
adc
mov
les
fcoml
popa
adc
mov
subl
jnp
clc
sbb
lds
jle
les
fisttpl
into
add
xchg
inc
enter
cmpsb
push
push
aad
call
add
shrl
int
mov
in
mov
call
xchg
adc
adc
fadds
cmp
xchg
mov
adc
xorb
lcall
xor
jmp
sub
adc
int3
repz
in
xchg
dec
insl
add
sbb
enter
add
pop
push
dec
mov
adc
dec
into
cmp
or
inc
add
xchg
pushf
test
fidivrl
xor
mov
lods
fs
es
sbb
jno
into
xor
cmpsb
ds
push
add
mov
sub
icebp
cmp
xchg
xor
fisubs
mov
cmp
stos
inc
std
push
dec
faddl
insb
dec
imul
out
xor
test
ds
mov
cli
dec
daa
xlat
sub
add
loopne
mov
and
push
push
add
mov
cmpsb
and
add
aad
inc
ja
fcompl
mov
mov
pop
mov
add
add
gs
bound
mov
and
or
cmp
test
je
jb
sete
fdiv
rcrl
push
mov
mov
inc
nop
adc
divl
jl
mov
pop
stc
adcl
gs
mov
cmp
mov
es
sbb
aam
andb
clc
jmp
aad
push
add
insb
aas
inc
lods
shrb
mov
je
adcb
repz
add
or
pop
mov
pop
xor
lods
mov
repz
mov
int
mov
rcl
leave
add
dec
fmul
setno
dec
pop
outsb
push
jae
jl
nop
fldl
adc
xor
cmp
notl
mov
or
hlt
lret
out
fcomps
or
mov
cmp
popf
xchg
mov
adc
fisubrl
and
into
lds
add
mov
cmp
lods
add
xchg
and
cmp
lcall
adc
ja
inc
pop
dec
add
loop
xorl
push
ret
push
cs
mov
stc
std
bound
test
inc
pop
push
add
daa
leave
les
and
and
add
lods
pop
mov
jmp
add
mov
insb
test
jns
or
jno
pop
add
cmp
add
ljmp
pop
lahf
xchg
clc
dec
cs
add
sbb
add
adc
es
push
faddl
jle
cmpsb
stos
sub
cmp
stos
mov
cs
add
das
addr16
mov
add
xchg
loop
stos
jecxz
add
ljmp
add
mov
shl
sub
jns
packsswb
cmp
fmulp
pop
lret
sbb
lock
push
jmp
cmp
ja
add
add
stc
mov
arpl
add
dec
loope
divb
mov
out
push
cmp
or
inc
push
stc
xchg
adc
lock
nop
jae
fsubrl
call
mov
das
add
xor
cmp
pop
dec
jge
sub
mov
rolb
mov
jno
ret
add
push
jne
call
xchg
add
and
add
cmp
movb
or
inc
and
xchg
es
nop
into
lods
repnz
dec
sti
lods
add
sub
add
pusha
cmpb
xchg
jae
or
jl
mov
dec
lods
in
or
insl
jmp
cmp
mov
pop
add
enter
sbbl
insl
add
lahf
popl
inc
int3
addr16
xchg
aaa
fsubs
pop
xchg
or
or
xchg
add
test
daa
orb
inc
bound
mov
inc
and
ljmp
stos
add
cs
shrb
jae
mov
xchg
sbb
add
dec
int3
cmp
or
pop
je
inc
fldl
popf
sti
in
add
add
shll
movsb
out
pop
push
add
in
repnz
fs
pop
pusha
mov
sub
loopne
push
out
lcall
cmp
loop
es
into
idivb
imul
in
push
add
fldt
rcll
push
ja
les
dec
add
lret
into
sub
stc
jp
add
add
and
adc
mov
xor
or
push
movsl
mov
scas
outsl
pop
add
addr16
pop
add
lahf
lea
xor
lods
fdivrs
sbb
push
mov
mov
add
lret
push
push
dec
add
push
or
and
int3
leave
sub
push
rorb
mov
test
insb
jno
in
aaa
mov
aad
push
sbb
inc
adc
pop
sub
inc
int3
cs
cli
xor
mov
adc
add
inc
mov
lret
pop
pop
cmp
pop
and
mov
cmp
js
mov
xlat
add
lret
adc
jl
add
jle
dec
jo
add
outsl
fmuls
mov
sbbl
dec
and
je
jne
add
push
jne
pusha
dec
call
add
addl
mov
push
test
add
clc
add
xchg
in
fisubl
fwait
dec
js
push
push
cmp
cmpb
add
push
inc
mov
push
sahf
mov
add
into
xor
das
addb
out
aam
push
dec
ss
xor
jmp
add
repz
add
cmp
arpl
inc
cmp
add
pop
pop
dec
jecxz
cwtl
pop
in
and
fadds
fisubl
add
js
jnp
add
pushf
cmp
nop
in
jb,pt
adcb
fdivrs
pop
cmp
out
loopne
and
add
sti
mov
aas
add
fldenv
inc
lret
filds
xchg
add
mov
mov
add
inc
mov
add
inc
out
push
add
sbb
je
pop
add
xchg
add
dec
test
add
jae
imul
ret
dec
jo
add
rorl
out
add
sti
cwtl
fs
xchg
add
and
inc
add
lea
fiadds
jg
adc
pop
add
repnz
addl
cli
push
sub
push
mov
adc
mov
insl
jbe
jnp
pusha
fwait
pop
mov
shlb
bound
sub
inc
loopne
inc
scas
call
mov
dec
mov
sti
or
dec
xchg
cmp
xor
push
mov
adc
lret
pusha
incb
sbb
insb
mov
sti
dec
sbb
pop
test
add
mov
ret
jecxz
or
pop
data16
bound
cs
sbb
dec
hlt
add
call
or
mov
pop
pop
xchg
inc
gs
out
sub
js
jp
cmp
movsb
stos
mov
sbb
or
jns
mov
add
xorl
xor
inc
add
pop
pop
or
xor
ret
outsb
dec
les
bound
adc
push
add
mov
in
push
popf
test
fadds
cmp
mov
subb
sbb
scas
fwait
inc
fisubrl
cltd
jmp
xchg
add
inc
fs
dec
aad
add
add
mov
mov
out
xor
aad
xchg
fcomps
ljmp
pushf
data16
add
dec
pusha
adc
inc
sbb
rcrl
aaa
aad
cmp
mov
jl
pop
push
sbb
xchg
mov
sbb
lret
xchg
andb
dec
sbb
xor
mov
pushf
imul
mov
jl
jno
out
in
fcom
fwait
addb
mov
int3
imul
jbe
mov
insb
fistps
adc
sbb
cmp
push
inc
push
int3
push
bound
les
xor
cs
add
adc
fadds
xor
push
jge
push
sti
arpl
and
mov
xor
add
imul
stos
clc
add
int3
fstpt
add
mov
pop
push
aas
test
pusha
jns
insb
or
mov
adc
add
sub
test
xor
insl
sarl
jmp
mov
stos
add
rcll
das
std
and
test
dec
lods
lds
sbbb
inc
xchg
add
arpl
mov
adc
cwtl
insb
pop
outsl
cmp
add
aam
fmull
lds
test
sbb
dec
sbb
sbb
push
stos
add
add
jne
stos
xor
mov
jl
out
das
mov
or
mov
and
or
ja
xor
add
or
les
mov
psubw
push
mov
aad
call
push
or
cmpsl
mov
pop
add
leave
repnz
stos
pop
jcxz
mov
push
in
jmp
test
mov
out
ja
and
inc
mov
test
cli
arpl
adc
mov
push
aam
push
mov
mov
xor
insb
loop
cltd
cwtl
sub
inc
jo
mov
sbb
das
test
iret
loopne
add
mov
ret
adc
or
sarl
out
add
pop
aas
ds
arpl
mov
sub
add
lea
loope
cmp
jb
sub
xorb
add
sahf
les
cmp
mov
pusha
add
mov
mov
inc
or
xor
scas
imul
mov
lcall
mov
sahf
dec
add
fwait
aad
add
pushf
aam
push
sub
xor
add
cmc
imull
cld
mov
jb
cmp
adc
add
insb
sub
jge
add
shl
repnz
sahf
fidivrl
adc
mov
cmc
pop
aaa
mov
cs
xorl
cmc
mov
int
xchg
ljmp
pop
test
mov
test
mov
inc
xor
popa
rolb
xchg
std
hlt
push
bound
xchg
loopne
add
aam
fiadds
pop
mov
xchg
adc
out
add
stos
mov
cmpsl
aad
mov
ds
xchg
sbb
ret
lock
jns
mov
cld
or
iret
add
add
add
xor
dec
loope
ret
test
divb
gs
lods
cmc
sbb
mov
add
push
rcrl
add
test
out
jbe
add
adc
mov
ds
inc
mov
pop
dec
inc
in
loope
sub
insl
fwait
jno
adcb
mov
add
push
push
sbb
push
adc
cwtl
xchg
add
jbe
jmp
xor
pop
sbb
lods
hlt
add
xchg
cltd
jo
and
adc
jb
pop
inc
div
add
pop
pop
mov
pop
data16
adc
testb
js
mov
pop
push
xor
inc
add
or
adc
jae
sarl
popf
aad
xchg
mov
addr16
aaa
adc
and
inc
add
aam
into
mov
pop
pop
lods
fwait
scas
daa
lock
push
cmp
dec
mov
nopl
shr
rcrb
clc
xlat
lea
adc
xor
dec
xor
pushf
add
adc
add
xlat
push
jns
es
neg
leave
cld
sbb
or
sbb
push
pop
adc
cmp
dec
out
lret
sub
add
lea
mov
cwtl
lcall
add
iret
enter
add
dec
mov
sbb
roll
je
jne
push
out
push
aas
popf
xchg
in
jp
sub
mov
jnp
int
decl
xor
fimuls
or
mov
cmp
stos
mov
test
pusha
loopne
out
inc
addb
add
stos
lahf
fwait
in
xchg
add
push
mov
test
sbb
incb
add
movsb
enter
arpl
and
xchg
mov
loop
add
subb
push
add
xor
fimuls
xchg
add
push
rclb
add
cli
loope
ret
pushf
sub
push
aaa
add
sbbl
jmp
shll
stos
fmuls
flds
mov
mov
cmp
mov
stc
dec
push
add
sbb
push
mov
sbb
xor
lret
inc
faddl
lods
aad
sbb
movsl
sub
cmp
sub
xchg
fisubs
dec
cmp
rcll
stos
add
xchg
push
add
lods
jb
sbb
fistpll
mov
and
and
pop
add
in
mov
push
adc
adc
je
cld
xchg
add
shll
shrb
rclb
mov
cmpb
jl
push
and
scas
cmpsl
out
sub
inc
lock
push
add
jl
mov
push
pusha
or
and
push
add
sarb
cmp
add
jmp
movsb
mov
in
push
stos
test
add
pop
dec
mov
rcll
mulb
add
add
ja
jns
stc
or
cmp
subl
out
add
sbb
testl
mov
data16
lcall
or
jae
jo
mov
add
inc
fsubl
roll
mov
sbb
imul
mov
mov
add
dec
jge
push
arpl
loope
popa
and
jl
push
pcmpeqb
cmpsb
fistl
scas
out
in
fnstcw
mov
add
dec
add
fcoms
jg
movq
fsubl
lods
add
mov
mov
jae
jo
flds
or
mov
add
cmp
cltd
add
mov
cwtl
mov
mov
mov
scas
inc
fistpl
fmuls
add
and
aam
adc
and
push
xor
dec
sbb
out
in
outsl
or
jns
aam
or
sbb
test
je
jo
add
xchg
arpl
enter
sbb
fcoml
xor
mov
jae
jl
push
xor
inc
jecxz
pop
gs
shl
add
sub
add
mov
stos
xor
movsl
push
push
in
mov
add
lret
pop
scas
pushf
pop
std
cmp
cmpw
push
dec
jnp
inc
sbb
scas
add
call
sub
push
test
jno
out
movsl
mov
mov
inc
sti
int3
jle
mov
lea
imul
mov
push
xlat
pop
mov
imul
arpl
pop
mov
imul
add
sub
xchg
in
scas
pop
scas
pop
mov
repz
rorb
jmp
cmp
imul
test
inc
sbb
cwtl
shlb
sbbb
fstp
add
jno
dec
popf
loop
mov
loopne
dec
icebp
sub
lahf
add
movsb
ret
lcall
sub
adc
cmp
jg
dec
inc
add
je
ss
jnp
cld
mov
cli
mov
daa
pop
push
aam
std
mov
add
fwait
lock
xorl
and
adc
push
xchg
ja
mov
out
add
pop
inc
sbb
or
sbb
andb
insb
or
jo
pushf
add
stc
aam
adc
loop
mov
out
mov
jle
loope
leave
xchg
jb
pop
add
pushf
add
push
add
xchg
fstl
cmpsb
jge
sub
sub
sbb
rcrb
push
cmp
cs
stos
xlat
add
loope
adc
mov
add
jmp
shll
mov
lock
inc
jle
inc
xor
pusha
stc
call
aad
xor
data16
mov
xor
adc
or
clc
xor
add
cmp
fwait
out
add
hlt
push
xor
aad
mov
add
ror
inc
mov
into
jge
mov
aam
add
lods
fstps
mov
subl
add
xor
imul
and
xchg
mov
xchg
scas
je
adc
jmp
add
lods
stos
in
call
inc
and
dec
jge
cs
add
orl
mov
pop
rolb
lret
and
jb
das
lahf
or
mov
insl
push
popf
pushf
lcall
pop
add
mov
fldcw
add
scas
fs
mov
xor
daa
scas
stos
xchg
mov
cmpsl
add
and
fdivrs
mov
xchg
icebp
inc
push
push
mov
xlat
mov
mov
es
mov
pop
jbe
push
pop
aas
jae
inc
popf
xchg
xor
mov
mov
daa
std
xchg
add
xchg
idivl
xchg
dec
mov
insl
les
mov
xor
pusha
cmpsl
loope
xchg
inc
add
std
adc
add
mov
cmp
ds
xor
pushf
add
jp
fwait
shrb
sbb
leave
mov
sub
or
push
lcall
into
xchg
push
imul
pop
mov
cmpsb
mov
and
sub
sub
sbb
pop
test
add
xchg
dec
and
das
stos
shlb
call
xor
mov
inc
push
mov
mov
and
mov
inc
dec
cmpsl
sbb
add
mov
xor
mov
sbb
scas
or
out
jo
mov
xchg
push
stc
jns
cmp
push
scas
jge
pop
jno
out
push
mov
shll
enter
rorl
cld
add
xlat
icebp
pop
add
test
pop
mov
or
add
pshufw
jp
cmp
aaa
xchg
or
add
mov
lcall
pop
push
adc
sub
daa
mov
out
fstps
push
dec
stc
xor
dec
ror
mov
sbb
add
lahf
imul
sbbl
cmpb
addr16
mov
sbb
jmp
mov
jns
fiaddl
lods
pushf
loop
mov
scas
or
roll
add
mov
pop
jo
leave
xor
xchg
cli
xchg
popa
inc
int3
mov
or
loop
fisttpll
inc
pop
mov
mov
add
ret
add
mov
mov
xor
dec
subb
xlat
mov
add
mov
jno
pop
dec
test
repnz
repz
mov
scas
js
cwtl
jmp
mov
xor
pop
ret
lock
xchg
test
test
add
lret
xchg
sarl
push
rorb
das
xor
and
add
fsubr
inc
maskmovq
rclb
mov
or
icebp
cmpsb
aam
xor
add
push
and
adc
sti
xchg
ret
sbb
faddl
jge
arpl
into
cmp
add
jb
fprem1
cld
add
jno
xchg
push
add
inc
jmp
mov
sbb
dec
inc
enter
mov
sub
adc
adc
ja
cmpsb
out
aad
add
cwtl
gs
inc
aas
pop
add
cltd
xor
add
fisubrs
rcl
adc
aad
jle
faddl
push
xchg
gs
movb
cld
imul
das
jbe
add
mov
lods
ljmp
inc
mov
cmp
jo
mov
ja
adc
add
mov
pop
add
adc
push
and
push
push
or
pop
das
ss
sbb
test
add
loope
stos
flds
add
jg
cmp
aas
add
xchg
das
addr16
stos
fisttps
inc
mov
xor
adc
push
push
mov
add
loopne
or
lret
and
pop
data16
cmp
add
jne
sbb
jmp
lret
or
int
imul
pop
lods
adc
add
aas
push
or
icebp
sub
sahf
xor
roll
sub
and
dec
nop
mov
in
out
pop
add
loop
cld
jb
mov
mov
dec
inc
push
and
out
xlat
js
mov
dec
mov
punpckldq
std
jns
inc
jno
mov
insb
sbb
pop
xchg
hlt
and
and
jl
mov
iret
mov
movsl
repz
stos
mov
add
add
dec
ret
and
mov
sbb
filds
dec
cld
int
add
sub
addb
fmull
add
dec
mov
in
mov
add
sub
aam
repz
in
sahf
scas
or
xchg
test
cmc
fidivl
enter
fstpl
testb
sbb
dec
pusha
add
fs
aas
das
cmp
incb
push
test
test
cmp
jae
scas
pop
mov
rcrb
icebp
clc
mov
roll
outsb
bound
pop
xchg
rcrb
or
sbb
data16
daa
cli
mov
std
add
fisubl
clc
jo
sub
or
adc
aaa
adc
ds
inc
add
mov
mov
xorb
add
inc
or
dec
andb
xchg
hlt
call
adc
cmp
sub
mov
addb
sbb
repz
shr
sub
push
ret
adc
imul
aam
insl
enter
int
movsb
mov
add
sbb
pop
xchg
xchg
mov
mov
outsl
mov
xor
adc
or
add
stos
add
xchg
inc
and
adc
lahf
sub
notb
add
adc
dec
xchg
popf
ds
add
and
sahf
and
rolb
adc
loope
subl
hlt
stos
add
lret
jbe
add
shr
push
cmp
xlat
sarb
push
add
xchg
push
nop
pop
js
add
sbb
or
sahf
mov
lret
fs
stos
mov
mov
pop
iret
dec
adc
lods
nop
adc
add
adc
movsb
adc
pushf
lret
shr
lods
mov
push
es
and
test
cmp
add
loope
xchg
jbe
or
mov
add
fiadds
lret
add
jno
gs
xchg
or
or
and
sbb
subb
repz
cmp
rorb
xlat
add
dec
cmp
add
enter
push
mov
pop
loopne
sub
in
cmp
mov
add
pop
or
rcr
cmpsl
es
mov
xor
jecxz
add
sub
xor
test
pop
sbb
inc
inc
sub
and
jnp
add
das
pusha
push
adc
and
mov
scas
mov
add
xor
test
call
pop
addl
addr16
and
cmc
mov
fstl
cltd
add
pop
decb
aad
push
pop
ljmp
aaa
mov
add
jno
orb
test
loopne
incb
mov
xchg
or
dec
and
aas
and
out
movsl
mov
pushf
or
dec
aas
mov
or
dec
dec
xchg
daa
sbb
inc
imul
pop
add
add
loopne
inc
aad
push
mov
pop
mov
jle
shl
ja
add
ss
add
adc
cli
xchg
repnz
aam
and
std
das
or
mov
and
and
and
inc
shlb
cmp
test
sub
clc
in
pop
push
jo
xor
cwtl
les
loopne
xor
ja
sub
add
sub
xchg
and
add
cmpsl
fimuls
push
mov
int
sbb
sahf
mov
mov
shll
xor
outsb
mov
mov
xchg
scas
cmp
or
data16
fdivs
movsl
sti
les
sub
jne
cltd
jno
jmp
call
add
sub
pop
inc
popf
dec
pop
add
enter
nop
dec
or
or
lcall
xchg
loop
add
pop
xchg
je
add
icebp
or
lea
pop
add
gs
mov
rclb
test
stos
in
add
andb
pop
push
cmpsl
sbb
pop
mov
into
arpl
imul
or
jl
cld
repnz
xchg
rcll
jnp
lret
add
push
int3
push
rcrl
out
and
add
pop
cmp
mov
mov
add
push
enter
mov
add
and
add
mov
leave
add
pushf
adc
pop
js
inc
pop
test
adc
mov
add
std
xor
mov
and
add
push
sub
push
cmpb
sbbb
cmp
jne
push
xchg
jmp
add
ret
xor
cmp
pop
nop
add
adc
cmp
add
adc
addb
add
sbb
xchg
pop
pop
sub
and
or
cmp
lret
daa
outsl
and
sub
test
add
sbb
xchg
mov
inc
add
cli
pop
cmp
test
outsl
sub
repnz
loopne
cs
lcallw
jl
add
shlb
add
adc
setae
sub
xor
inc
jl
add
mov
xor
lret
mov
push
inc
adcb
push
imul
xor
or
jb
orb
pop
add
add
in
pop
loop
dec
movb
add
and
or
add
xchg
cmp
shrb
add
ss
icebp
fisubrl
sub
ja
stos
push
add
arpl
movsb
fidivrs
jecxz
add
dec
loopne
je
push
and
sub
pop
add
outsb
ror
cmpb
add
int3
fisttpll
jo
add
rorl
add
popa
shrb
je
mov
inc
add
repz
xchg
loop
add
push
outsb
mov
int3
cmp
cmpsb
cli
sub
and
jbe
ficompl
cmpsb
sbb
xchg
lock
cld
fdiv
push
aaa
int3
jno
cmp
dec
xor
mov
mov
adc
in
js
sub
add
aas
push
rcr
fidivl
mov
cs
rclb
jbe
or
add
loope
and
cmp
xor
hlt
xor
std
sbb
sbb
imul
jo
xlat
enter
pop
jp,pn
and
sahf
loopne
fcoms
add
push
add
aas
or
mov
inc
xchg
cmp
xchg
addb
pop
adc
sbb
aam
cld
pop
add
fidivs
jmp
test
cld
loop
cmp
lea
mov
add
xor
dec
and
jb
inc
push
leave
shl
daa
add
mov
lds
daa
add
or
jns
mov
rolb
jg
jne
and
cmp
dec
add
xchg
in
inc
sarl
addr16
lahf
or
jnp
bound
out
mov
or
or
adc
mov
pop
repz
popf
stos
cwtl
inc
inc
pop
add
sarb
ret
push
push
pop
jns
in
xlat
add
loopne
add
test
or
out
mov
andb
mov
andb
pop
pop
cwtl
add
sbb
add
adc
mov
cmp
mov
lock
add
fnstenv
mov
sub
out
xchg
sbb
dec
push
add
sub
fildl
fidivrl
aas
and
mov
xchg
into
add
jbe
repz
sub
add
int
add
xor
loopne
and
leave
pusha
or
mov
adc
xchg
xchg
push
imul
cmp
add
dec
add
stos
add
popa
pop
lret
fidivrl
out
xchg
arpl
mov
add
daa
je
cmp
popf
add
jmp
or
jl
add
ja
mov
add
push
mov
pop
add
ljmp
add
lret
or
adc
in
fnstenv
das
mov
push
dec
jns
push
xlat
cmpsb
mov
pop
inc
inc
mov
int3
jns
add
dec
hlt
cmp
cmc
std
inc
clc
or
add
mov
xor
or
mov
gs
add
icebp
outsb
scas
test
sbb
lret
rol
sub
or
add
insl
mov
popa
lock
int3
xor
scas
xchg
sbb
cmpsl
gs
dec
add
clc
fdivl
inc
add
pop
inc
and
pop
pop
cld
sbb
jecxz
xchg
push
sub
xor
mov
jmp
stos
mov
fnstsw
lea
xor
mov
or
pop
sbb
ljmp
or
xor
or
fstps
sbbb
lahf
dec
jbe
jge
pop
adcl
lea
mov
das
add
mov
rolb
or
imul
shrb
outsb
cmc
and
out
pop
add
mov
in
dec
cltd
arpl
or
adc
fld
sbb
lret
and
mov
push
roll
fistps
lock
add
mov
stos
xchg
push
sbb
pop
add
push
ss
add
nop
lea
push
xchg
cmp
test
test
cs
mov
popf
mov
adc
and
mov
xor
sti
ja
repz
pop
insb
imul
aam
cmp
out
ret
loop
lock
add
into
cmp
std
test
ja
jle
rolb
fadds
aad
repnz
push
sub
mov
add
andl
push
cs
sbb
pop
xchg
fildl
xor
lcall
add
cmp
add
lret
iret
es
jbe
mul
jg
xchg
out
or
dec
add
fcmovb
mov
jmp
stos
sbb
roll
add
movsb
inc
into
pop
ja
psraw
or
clc
pusha
int3
adc
jg
adc
mov
out
add
pusha
mov
jge
or
push
adc
xor
adc
pusha
lret
fs
sub
sub
std
out
mov
lahf
mov
add
mov
cmpsl
movsl
sti
aad
add
jns
outsb
xor
add
aaa
jle
data16
add
mov
cwtl
pusha
jns
inc
addb
cmpsl
push
ret
xchg
add
jae
adc
cmpsb
movsl
mov
imul
ror
mov
test
add
cli
js
dec
xchg
bound
shrl
jmp
fdivs
out
into
jbe
jecxz
xor
adc
sub
xlat
inc
fwait
dec
sbb
fsub
dec
pop
out
lret
xor
lret
add
mov
push
or
inc
push
aas
pushf
push
andb
add
cwtl
out
loopne
push
int
icebp
adc
add
tzmsk
jp
mov
add
jle
bt
add
and
xchg
dec
pop
arpl
or
rol
call
aas
mov
mov
pop
dec
push
clc
push
jno
repnz
add
sahf
pop
push
montmul
arpl
sbb
sbb
nop
add
fxch
push
add
mov
jo
add
lahf
jno
frstor
testb
dec
mov
push
inc
lea
jb
sarb
add
int3
adc
and
or
pushw
push
mov
fdivl
add
mov
add
enter
int
add
push
bound
pushf
imul
inc
fcoml
jl
sub
cs
sbb
xchg
les
cwtl
and
jecxz
fsubrs
mov
and
push
mov
sets
andl
inc
push
cli
in
ret
adc
mov
add
pushf
adc
cmp
int3
inc
cld
pop
jl
addr16
div
or
xchg
dec
push
loopne
lar
fldenv
add
xor
cld
xor
adc
mov
mov
xor
shrb
ret
hlt
add
mov
mov
push
rolb
arpl
add
vpandn
aas
xchg
push
and
jl
mov
in
push
jg
movsl
mov
and
xor
add
xor
mov
or
add
test
inc
lret
cmp
mov
imulb
jb
add
adc
and
roll
xchg
jle
add
xor
adc
push
test
aad
mov
jo
push
mov
cmc
add
nop
xchg
roll
or
pop
push
bound
add
push
push
sti
pop
je
rol
fimull
add
adc
stos
movsb
xchg
sub
sub
push
out
fistps
rolb
inc
push
pop
popa
push
mov
lcall
push
int3
iret
mov
xorb
rolb
xchg
and
test
adc
fnstsw
add
dec
push
stos
scas
add
cmpsl
ss
dec
add
rorb
cli
add
js
or
jne
push
icebp
jge
sbb
or
mov
pop
aam
ds
arpl
shlb
ljmp
stc
or
add
loop,pn
lods
mov
fadds
test
loope
mov
aaa
pop
inc
addl
hlt
mov
aas
cmpsl
sub
add
pop
mov
jbe
jns
sbb
ficoml
cwtl
sbb
enter
loop
out
add
cmpsl
add
jl
into
mov
sub
arpl
cmp
scas
sahf
movsb
inc
subb
add
sahf
pop
int3
popa
lea
xorb
int
gs
daa
mov
cld
pop
mov
fs
add
lods
ds
mov
sahf
adc
orb
faddl
sub
pop
push
add
push
sbb
decl
adc
mov
or
movsb
inc
push
fstps
push
xor
incb
fldl
sub
push
xorb
cmpsl
fmul
add
insb
sar
fs
or
push
out
mov
test
in
xchg
add
mov
sub
ror
mov
add
aad
lahf
enter
je
mov
negb
or
stc
call
pop
lcall
inc
mov
adc
jecxz
add
xchg
outsl
mov
rclb
mov
adc
andb
andb
rcl
mov
add
push
lds
add
ficoml
xchg
lock
adc
les
push
add
mov
mov
jle
nop
pop
add
xor
pop
mov
mov
jl
push
ret
movsb
add
sahf
inc
cmp
dec
xchg
test
push
mull
dec
cmp
add
inc
std
pop
repnz
mov
xor
or
add
rcll
mov
cmp
mov
cmp
cmc
int3
adc
inc
mov
lds
iret
cltd
dec
outsl
xchg
add
cli
aad
aam
vmwrite
add
mov
sbb
pop
pop
adc
mov
xor
das
jb
sub
repz
add
frndint
inc
pop
xlat
in
insb
divb
aaa
sbb
push
add
aas
add
jns
addb
cmp
and
xor
mov
lret
push
iret
lods
dec
add
or
loopne
sub
xchg
add
mov
pop
xchg
dec
fmull
je
add
clc
mov
aam
call
in
add
push
lea
hlt
push
ret
and
pop
int
xchg
test
call
loope
add
cld
push
clc
nop
cmp
dec
adcb
cmp
and
add
test
cmp
mov
xor
pop
add
in
call
pop
inc
roll
and
aas
or
cld
int3
cmc
adc
adc
jg
add
xor
ja
mov
pop
add
insb
jecxz
mov
cwtl
out
and
push
sub
push
adc
lods
fs
push
scas
add
fists
push
and
xor
inc
gs
push
mov
push
sub
sub
jmp
add
xchg
pop
push
scas
loope
popa
and
js
dec
push
roll
dec
dec
pop
dec
add
xor
jo
arpl
cli
pop
push
ljmp
pop
pop
push
mov
cld
sbb
push
movsb
or
xchg
add
dec
sbb
push
clc
loope
add
xchg
jmp
pop
fisubs
and
stc
inc
add
out
cld
and
stc
push
mov
mov
inc
je
add
pop
out
dec
out
fistpl
pushf
add
ret
stc
dec
sbb
addb
or
test
adc
pusha
and
insl
test
mov
adc
fdivrl
aam
sub
mov
pushl
aaa
lods
xorb
add
inc
lahf
mov
or
pop
fcomps
dec
das
and
stos
mov
loopne
push
mov
add
xchg
mov
jns
sub
in
sbb
fstl
mov
add
mov
stc
cmc
add
hlt
in
xchg
add
aaa
icebp
aam
pop
xor
add
sahf
repnz
mov
mov
fwait
jmp
lods
pop
data16
mov
mov
lock
sahf
sub
or
add
loopne
and
or
aam
mov
or
rorb
mov
mov
insl
dec
daa
fsubrl
pop
xor
jp
int3
inc
sarb
xor
jmp
adc
add
hlt
out
add
sbb
add
aas
icebp
mov
lcall
std
jg
cld
inc
xchg
push
scas
pop
pop
push
or
fiaddl
mov
test
jl
push
jg
outsb
lds
and
dec
and
movsl
addl
jmp
pop
repz
or
sahf
jge
or
shlb
and
add
stc
push
sub
pusha
shlb
push
pop
xchg
cmp
insb
mov
xor
lock
in
cmp
jne
fsubr
leave
pop
and
adc
ljmp
add
xor
ljmp
mov
ds
jmp
aam
es
mov
stc
push
pop
sub
sub
sub
sbb
mov
scas
pop
sbb
jo
and
sub
mov
add
pop
inc
cmp
xor
jo
xor
adc
jne
mov
xchg
mov
notl
int3
leave
sbb
adc
shrb
xchg
cmpb
inc
nop
pop
inc
and
jbe
cmp
enter
fsubl
inc
xchg
and
xor
push
pop
inc
xchg
add
nop
lret
xor
mov
dec
stos
test
leave
mov
or
sub
clc
add
mov
out
rcrb
adc
movsb
adc
dec
in
push
and
sbb
jbe
and
out
mov
cmc
ret
xor
cmp
push
ja
fimull
test
add
push
fcom
xor
fimuls
addb
aas
and
lods
mov
and
mov
inc
jbe
and
aad
jo
loope
mov
ds
jo
xchg
or
mov
popf
and
test
movsb
repz
jp
cld
loope
mov
or
cmpb
add
sub
mov
mov
xor
sbb
loope
stos
xchg
andb
nop
adcb
cmp
stc
loop
add
popf
ja
jecxz
adc
lcall
xor
mov
out
adc
pop
mov
cmp
xor
icebp
adc
rcl
pushf
xchg
ret
add
ja
les
xchg
es
xchg
ret
lds
cmpb
or
sbb
std
cmp
stos
xchg
jo
pop
mov
inc
sub
sub
out
les
nop
jl
lods
push
pop
inc
cli
jbe
add
mov
inc
add
in
add
movsb
inc
push
mov
iret
sub
pop
xchg
jle
cld
mov
adc
add
sbb
xor
fwait
aam
add
sub
mov
sbb
orl
push
andl
fiadds
inc
adc
mov
mov
jl
sbb
popf
and
pop
imul
cmpb
enter
lea
add
sub
inc
loopne
stc
nopl
add
push
movsl
cmp
sbb
xchg
cli
xor
imul
push
cwtl
pusha
pusha
sbb
push
add
sahf
add
das
sbb
add
jp
loope
leave
and
int3
daa
inc
outsb
add
xor
add
nop
imul
pop
sbb
inc
adc
out
cmp
addl
mov
mov
add
push
jecxz
add
int
jmp
xlat
rcl
fucomi
dec
sarb
popf
push
cmp
mov
adc
cmp
add
andb
in
sub
imul
pop
xchg
loope
fbld
rcll
and
adc
jmp
fdivrs
push
dec
pop
mov
pop
in
pushf
repz
andb
pop
mov
les
in
mov
dec
int3
lods
ja
mov
adc
mov
and
and
mov
fadds
add
xchg
js
mov
pop
mov
dec
and
jg
movb
scas
mov
and
jle
add
cld
add
jle
pop
cmp
cmpsb
sub
add
jo
inc
add
cmp
mov
mov
fstpt
jl
mov
cmp
fdiv
push
cltd
notb
rcr
xchg
mov
add
sbb
je
hlt
mov
inc
jmp
loop
stc
add
cmpsb
push
dec
js
repnz
sub
fcmovnb
pop
mov
sub
popf
leave
shlb
and
mov
mov
test
js
lcall
add
inc
pop
add
cwtl
push
imul
popa
add
xorb
xor
scas
add
push
mov
out
loopne
and
iret
sbb
bound
mov
xlat
jbe
ffreep
and
dec
mov
cli
fadds
mov
loopne
repz
adc
out
mov
jnp
inc
push
cmp
cmpb
and
cmp
sbb
and
es
pop
add
xchg
cmpsl
arpl
and
imul
cmpsl
pop
inc
ret
and
add
push
sar
lds
dec
stos
sar
xor
jecxz
xchg
add
mov
push
push
fxch
or
ja
push
lods
mov
aas
sub
fisubs
and
ljmp
mov
sbb
cmc
shr
mov
and
adc
pop
xchg
out
pop
mov
nop
cmpsl
dec
sub
mov
and
dec
mov
loopne
shl
sub
dec
out
or
jmp
sub
iret
jbe
adc
test
jae
movsl
add
int
and
adc
jno
call
sbb
in
jne
data16
mov
jecxz
add
pop
nop
push
add
mov
and
movsl
push
fcomps
and
mov
jo
add
pop
pop
icebp
rcrb
add
pop
bnd
mov
sarb
daa
loopne
cltd
dec
mov
or
pop
inc
repz
push
pop
lret
mov
cmp
scas
out
pusha
das
cmc
divb
xor
jne
out
sub
or
mul
cmp
jge
pop
clc
push
les
ficoms
add
movsb
daa
es
sbb
lret
sub
lahf
add
clc
hlt
push
out
mov
inc
add
ret
adc
jle
mov
add
ja
jp
cltd
pop
ret
adc
add
cld
cmpsl
ds
sub
test
add
inc
lock
sbb
out
add
test
mov
mov
jl
jge
xor
loopne
sub
stc
or
ja
out
dec
xor
inc
icebp
push
jne
int3
loope
fs
add
nop
sbb
jno
cmp
sti
adc
adc
call
adc
aas
adc
adc
test
lock
int
xor
mov
xchg
mov
ljmp
sti
adc
inc
or
test
mov
inc
out
inc
inc
mov
dec
or
inc
std
mov
sub
push
mov
in
push
pop
imul
mov
xchg
insl
xchg
rcpps
cmp
cwtl
lret
cli
inc
loopne
pop
jle
pop
fprem
icebp
test
jmp
popa
addr16
adc
adc
inc
push
dec
test
jae
add
jne
inc
insl
pop
and
mov
pop
lcall
out
call
pop
in
xor
add
jnp
sbb
jae
jle
pop
in
mov
pop
jns
add
fwait
addr16
cltd
in
or
dec
inc
into
xchg
sub
pop
jg
pusha
xor
add
and
cwtl
mov
popf
mov
adc
or
add
enter
adc
or
jl
imul
inc
or
add
inc
ds
mov
jg
fcom
les
sarb
pop
cmp
movsl
add
mov
dec
ds
shrl
inc
xlat
add
jl
sbb
mov
cs
jle
or
add
test
mov
jp
lea
iret
add
mov
add
sarb
add
or
dec
mov
jo
xor
jns
xor
mov
adc
add
dec
cmp
out
jo
mov
stc
inc
out
lea
fildl
fs
ss
cld
jns
jp
scas
getsec
clc
es
pop
or
and
add
pop
nop
push
mov
add
pop
add
out
scas
mov
aam
mov
and
mov
hlt
dec
xor
adc
pusha
or
mov
pavgb
and
mov
sub
add
sub
add
ljmp
cmpb
xor
mov
and
pop
jp
xor
or
adc
pop
int3
les
sbb
sub
in
sbbb
xchg
lret
shlb
add
mov
dec
imul
cmp
mov
add
ja
aad
add
add
add
cli
in
nop
mov
lods
mov
or
fiaddl
test
out
cmpsl
cld
pop
push
pusha
cmp
add
mov
cmp
mov
inc
icebp
in
loopne
jns
jbe
jb
cld
push
cmp
mov
sti
sub
or
cmp
mov
dec
mov
sub
dec
push
mov
rorb
jl
das
and
in
add
bound
test
cmc
sbb
cmp
lret
dec
adc
pop
sbb
mov
inc
xor
out
add
gs
pop
rolb
fwait
adc
dec
pusha
xor
mov
mov
jge
inc
addb
add
jb
popa
je
mov
lods
sbb
sahf
xchg
imul
ds
inc
push
xchg
jmp
or
xor
mov
mov
xchg
lret
jg
or
ja
push
gs
mov
or
and
add
sbbl
movl
mov
add
js
fwait
add
xchg
inc
imul
sgdtl
lods
sbb
loope
ja
inc
jb
dec
and
xor
inc
pusha
and
movsl
imul
cmp
repnz
mov
dec
aad
xor
add
xchg
lcall
fs
jg
pusha
push
jmp
mov
addr16
and
mov
inc
push
outsl
xor
cmp
dec
aaa
and
fistps
add
inc
adc
sbb
repnz
push
outsb
call
dec
sbb
int
aas
repz
add
daa
and
pop
fists
stos
jecxz
aam
add
xchg
fmull
add
mov
fisubrs
movb
enter
xchg
pop
pop
mov
xchg
add
xor
xchg
pop
ret
pop
or
jmp
add
loopne
push
movl
cmp
xor
sub
aam
mov
rcrb
sub
push
loope
scas
xor
sub
decb
adc
je
push
fcoml
repz
push
add
mov
pop
add
movsb
pushf
inc
add
inc
movsl
xor
adc
hlt
bound
sub
ja
sahf
test
aas
sbb
pop
jecxz
push
mov
roll
je
add
mov
movsb
repnz
xchg
add
xor
and
lahf
out
add
pop
cmp
in
loop
pop
inc
jo
fadds
add
jmp
xlat
push
add
jcxz
not
test
cmp
cmpsl
xorl
sbb
or
sub
aaa
pusha
jp
and
sti
or
fmul
add
add
add
sub
iret
dec
push
xchg
mov
add
mov
out
adcl
add
sub
loopne
adc
daa
je
lods
loopne
test
adc
ret
mov
loope
dec
add
adc
pop
add
sbb
mov
icebp
adc
cwtl
sarl
arpl
test
idivb
loope
or
pop
lea
cmc
pop
jmp
sub
scas
repz
cmp
in
add
mov
lret
je
clc
xor
add
jae
outsl
jno
packsswb
inc
add
jae
pop
sub
nop
sub
cmpsl
cmp
pop
add
dec
fimuls
mov
testb
std
xchg
rcr
add
and
or
jne
in
dec
pushf
es
jge
jp
add
fdivr
clc
outsb
add
and
xor
rolb
mov
xor
sub
add
pusha
stos
sbb
int
leave
rcrb
arpl
and
inc
mov
add
xor
pop
arpl
add
insl
hlt
lahf
add
xchg
mov
into
movsb
jae
cmp
and
push
push
enter
cli
pop
add
in
pop
adc
mov
sbb
xchg
shll
pop
pop
mov
mov
xor
add
adc
push
xor
mov
mov
xor
lods
adc
sub
inc
imul
addr16
add
dec
sub
sbb
roll
fidivl
xor
test
cwtl
add
lods
push
out
dec
int3
repnz
fistl
or
fdivl
jg
xchg
fldl
rorb
outsb
out
jp
lods
fdivrp
xor
shrb
hlt
add
cmpsb
arpl
xchg
mov
mov
add
pop
fcompl
xchg
fnstsw
lds
ss
shlb
iret
add
fildl
adcl
std
inc
roll
cmpsb
roll
mov
sbb
xchg
ljmp
add
sarl
aam
pop
stos
mov
inc
or
popa
add
pushf
xchg
push
mov
jnp
dec
aad
adc
add
bound
mov
inc
call
lret
add
push
xor
add
mov
pop
adc
inc
jle
cmpsl
call
pop
add
in
adcb
sahf
inc
push
testl
and
mov
add
xchg
bound
into
leave
pop
mov
cmp
push
aad
xchg
in
lods
and
add
cmpb
pusha
lods
in
in
cmp
jg
mov
xor
lret
push
sbb
inc
or
lods
cmc
inc
add
pusha
mov
jle
cld
popa
sti
and
jp
shlb
daa
rcrb
stc
mov
add
and
and
int3
mov
in
icebp
and
inc
adc
inc
repnz
add
add
testb
fisubrl
mov
inc
shrl
push
ret
jge
push
jecxz
jmp
sub
xchg
icebp
sub
add
jnp
leave
or
mov
sub
enter
xor
add
dec
popa
mov
aas
sub
rolb
add
stos
shrl
outsb
or
inc
xor
in
jno
add
pop
jo
int
nop
int3
mov
add
dec
push
pop
loopne,pn
cltd
pop
jmp
push
jmp
cmpsb
mov
aas
divb
pop
in
movsb
cs
movsl
leave
push
pop
mov
clc
add
cmp
fistps
jbe
add
dec
pop
sbb
ljmp
fistpll
inc
dec
lock
insb
add
enter
shll
and
mov
mov
and
je
in
or
popa
pop
push
sarb
sbb
mov
and
outsb
out
enter
cld
add
lods
sub
inc
movsl
jae
mov
inc
lcall
stos
jecxz
and
xor
shlb
add
cvttps2pi
fldenv
pop
pop
add
jl
fs
add
cwtl
idiv
or
imul
int
test
rolb
or
sub
mov
adc
jb
out
add
push
into
add
sbb
or
ljmp
add
out
sub
stc
pop
sar
js
push
mov
jl
add
push
mov
loope
pop
pusha
ja
dec
out
clc
and
out
mov
pusha
test
add
mov
pop
jo
add
cmc
and
cmp
jne
ds
add
mov
or
dec
xor
mov
call
jbe
add
pop
pop
lret
mov
movb
mov
dec
or
stos
xchg
mov
jb
sarb
les
testb
insb
test
sahf
pop
out
mov
add
in
lret
ficoml
xchg
mov
andb
cmp
dec
add
add
testl
and
mov
adc
pop
xor
in
jbe
divb
sbb
or
outsl
andl
sub
jbe
push
xchg
dec
mov
movsl
dec
mov
and
dec
leave
xchg
jns
call
cld
jne
aas
jno
push
dec
or
fadd
xchg
out
mov
test
daa
fdivl
test
add
jle
pop
sbb
sbb
mov
mov
add
mov
bound
xchg
test
pushf
scas
or
push
lods
and
sahf
jne
jle
mov
xlat
mov
add
push
jnp
or
add
add
add
xor
aaa
add
inc
fstpl
test
mov
add
jge
add
and
add
xor
repnz
popf
repz
cmp
stc
daa
sbb
cmpsb
dec
lret
sbbl
frstor
loope
in
test
stos
ret
add
out
pop
add
push
jno
cmp
out
out
or
jo
xchg
pop
aad
cmp
inc
subb
or
add
out
mov
data16
pop
in
xchg
insb
clc
cli
inc
jl
pop
mov
push
inc
dec
sub
adc
mov
xorb
mov
sbb
aad
popl
jae
adc
xor
add
mov
add
push
addb
lods
jbe
add
aam
fcomp
dec
in
jo
or
sarl
add
adc
loope
movsl
add
cwtl
mov
fildl
mov
sub
mull
pop
scas
add
sub
ja
add
int3
jns
mov
pop
add
xchg
add
outsl
jg
pop
mov
pushf
lock
shr
mov
pop
dec
adc
add
fcoms
sbb
cmpsl
sub
pop
xlat
pop
imul
cwtl
sbb
pop
dec
mov
sbb
stos
pop
popf
aad
xchg
dec
sarl
push
lahf
lock
and
popaw
pop
aam
test
icebp
or
rorb
outsl
dec
mov
cmp
cltd
cmp
ljmp
ret
in
adc
xchg
sbbb
adc
add
shll
add
in
sbb
outsl
orb
add
ds
test
inc
wrmsr
aaa
loope
hlt
add
mov
xor
stos
lea
js
inc
data16
mov
mov
aaa
xor
lods
cmp
lods
cmp
jge
jecxz
insb
jmp
xchg
orl
subb
or
std
cmc
testb
clc
mov
pop
dec
push
cmp
mov
dec
jbe
aaa
mov
inc
pusha
mov
leave
adc
out
push
push
fmull
dec
testb
dec
into
xchg
and
lahf
ss
push
shrb
cmpsb
pop
jecxz
mov
adc
and
dec
xor
xlat
inc
add
js
xchg
in
add
pushf
xor
add
enter
addr16
dec
and
inc
nop
mov
or
mov
icebp
lcall
mov
jb
adc
or
mov
add
arpl
cvtpi2ps
push
jne
icebp
in
cmpsl
adc
add
mov
cmpsb
bound
and
ret
adc
pusha
sub
sub
cmp
leave
xor
inc
xor
mov
aad
pop
adc
mov
inc
imul
and
pusha
addb
inc
mov
cli
and
add
outsl
mov
ret
fcmovne
add
add
mov
add
jbe
flds
push
or
cmp
and
mov
mov
mov
push
dec
cli
inc
pop
mov
mov
cltd
sbb
addb
into
pop
mov
pop
inc
sbb
ret
xor
sub
movsl
pop
mul
into
add
outsl
cld
or
scas
roll
inc
add
pop
add
pop
cmpsb
outsb
rcrb
arpl
jns
add
mov
dec
jno
adc
std
or
test
add
in
iret
mov
add
fiaddl
out
flds
lds
cmp
pand
rclb
cmp
and
psubw
sti
inc
xchg
mov
fldl
jge
test
addr16
lock
hlt
call
cmp
test
push
sbb
out
inc
popf
or
xor
daa
in
fisubs
inc
add
xchg
xchg
leave
inc
add
jb
lods
xlat
fildl
sbb
or
jge
shrl
loop
pop
sbb
imul
push
call
fs
pop
sbb
mov
cmp
pop
xchg
out
divps
mov
xchg
lock
add
in
push
lods
cmp
and
imull
popf
jecxz
mov
mov
pop
adc
push
xchg
lret
add
incl
hlt
and
xchg
test
in
or
inc
arpl
add
cmp
inc
test
pop
rcrb
in
mov
ret
sub
cli
adc
loop,pn
and
fsubs
rcl
push
sarb
test
sub
xor
push
jno
jle
mov
cmc
pop
mov
lret
ss
jle
add
dec
sarb
jbe
or
pusha
icebp
repnz
pop
xor
ds
jns
add
jl
sti
cli
fwait
lret
jne
cmp
add
cmp
lds
rcrb
imul
sub
subb
mov
sub
jl
leave
push
adc
js
shlb
xor
loopne
sub
pop
mov
out
add
aas
push
js
cmp
mov
sub
test
add
sub
call
aaa
data16
and
push
push
push
daa
out
jg
add
lods
dec
mov
mov
leave
add
dec
mov
xor
enter
jecxz
lcall
out
pop
outsl
pushf
ja
repnz
cmp
scas
cmp
and
xlat
pusha
andb
loopne,pt
add
bound
cmp
xchg
xchg
cmp
sbb
aas
inc
lcall
insb
lds
xorb
jae
inc
jb
add
and
push
jp
test
shr
fs
shrl
sbb
mov
push
xlat
inc
cmp
mov
adc
inc
ret
xchg
movsb
or
rol
inc
cmp
add
dec
jbe
and
push
es
adc
fs
and
insl
shlb
jl
add
adc
cld
insb
frstor
lock
push
adc
int3
dec
repnz
pop
popf
cmp
add
push
insl
aam
jne
jb
in
or
mov
pop
lock
sbb
sbb
pop
js
inc
std
loope
cmp
jno
dec
push
into
jl
js
dec
sarl
add
jns
cmp
add
cli
rolb
test
in
mov
add
fsubl
add
pop
cmp
add
sub
add
call
dec
cmp
xor
mov
xchg
lret
add
aas
cmp
add
pop
ja
movd
out
and
or
add
sub
gs
or
adc
xchg
ret
add
pop
movsb
dec
aaa
nop
dec
jle
add
add
add
xchg
xchg
jl
in
lods
cmp
push
add
push
lods
or
add
enter
int3
dec
js
sub
add
cmp
mov
loopne
ljmp
gs
mov
mov
pop
pop
mov
sub
aad
iret
lahf
jg
sbb
cmp
add
cmpsl
pop
outsb
dec
mov
shlb
dec
pop
mov
add
je
inc
cmp
lcall
sbb
push
shrb
adc
jp
mov
sub
xchg
add
pop
fildl
test
pushf
pop
incb
sbb
add
arpl
sub
ret
mov
sub
xchg
add
mov
jge
jo
add
xchg
jp
pop
mov
add
aad
xchg
push
xor
add
hlt
push
into
push
loopne
inc
add
enter
push
ss
adc
pop
and
xor
test
add
sub
loopne
xchg
fcmovb
add
adc
out
add
push
xchg
addr16
ja
lret
cld
jge
in
test
pusha
shrl
mov
scas
sarl
stc
cmp
xor
fs
jge
in
call
mov
inc
fmull
insb
popf
hlt
mov
cmp
pop
sbbw
jp
out
out
cmp
mov
add
dec
out
xor
cltd
cmpsb
stos
in
fldenv
dec
rorb
xchg
jg
mov
out
pusha
fiadds
xor
add
or
push
jb
push
pop
xor
cmp
add
push
mull
add
je
fisubrl
sub
mov
add
push
or
cmp
mov
sbb
pushf
shlb
ss
das
cmpsl
xchg
xchg
dec
rorl
add
or
push
iret
add
sub
and
in
add
fdivrs
in
pushf
xor
adc
sub
nop
mov
icebp
cwtl
adc
je
cld
and
arpl
hlt
add
push
cs
imull
push
std
and
jle
loop
clc
inc
cmp
pushf
test
mov
shl
in
sti
and
fs
dec
add
clc
sub
js
ret
mov
pop
fidivrl
mov
and
loop
add
bound
stc
mov
push
add
xor
in
loope
shlb
aam
or
sbbl
inc
pop
add
std
jecxz
sbb
mov
cwtl
cmp
add
hlt
pop
and
inc
add
cmp
call
jg
loop
lret
jbe
cmc
jnp
cli
pop
pop
push
test
cmpb
add
shr
pop
js
test
mov
cmp
sub
fidivrs
pushf
loopne
aas
js
push
add
std
dec
mov
xchg
add
dec
in
aas
imul
add
push
fildll
icebp
iret
nop
add
cld
js
popa
mov
imul
sahf
add
rcll
loop
cmpsl
pusha
xchg
and
pop
imul
pushf
adc
xchg
mov
and
sbb
or
adc
xorb
sbb
cmp
jp
add
out
cmp
fstps
mov
and
sub
add
dec
divw
fidivrl
es
add
lods
and
xor
push
add
repz
rcrl
aas
adc
pop
fidivrl
push
rorl
and
xor
adc
cwtl
js
inc
hlt
stc
add
loope
adc
in
mov
cmp
push
fs
outsb
pop
dec
out
add
fcoms
xlat
add
imul
mov
mov
add
jo
fdivrs
mov
add
mov
ds
sbb
push
mov
fstps
in
outsb
lds
not
outsl
or
push
lret
sbbl
sub
jae
jp
pop
mov
pop
jge
mov
div
sub
cld
pop
fstpt
push
popf
imul
in
pop
testb
push
mov
ss
dec
add
adc
push
push
iret
sahf
shll
push
cltd
jns
test
add
iret
je
lods
clc
ret
and
sub
fidivrl
add
push
and
push
or
es
loopne
jl
sub
or
or
inc
and
adc
xchg
xchg
cmp
dec
hlt
jns
cmp
jnp
cmp
fsubrl
adc
cmp
xchg
mov
imul
cmpsl
bound
mov
xchg
add
jmp
in
and
push
inc
xchg
subl
xchg
adc
decl
jb
mov
lret
mov
fbld
hlt
in
add
movsb
xchg
add
add
loope
add
test
sbb
out
cmp
sub
add
outsb
mov
add
jl
inc
add
adc
mov
and
or
xchg
js
shlb
push
add
pop
rolb
cmp
shl
jo
sbb
push
mov
test
jmp
mov
jbe
sbb
cltd
andl
push
insb
dec
mov
lock
sbb
add
out
dec
pop
cmpsb
dec
mov
cmp
sbb
add
push
ja
into
rolb
mov
cmp
cld
mov
xor
jb
inc
fisttps
jnp
stc
push
pusha
pop
xlat
pusha
pop
clc
xor
into
call
add
sub
add
mov
cmp
out
or
mov
sub
dec
sub
cmp
pop
sti
adc
and
mov
jns
inc
cwtl
fdivp
add
js
xchg
push
push
add
test
or
es
add
ljmp
pmuludq
test
mov
cmp
shll
andb
movsb
push
sbb
pusha
enter
fwait
cmpsl
loopne
loope
outsb
push
jge
add
xchg
fcomps
pop
add
iret
lcall
out
in
add
imul
jns
push
cmp
stos
pop
repz
and
lods
imul
repz
into
lcall
mov
outsb
push
mov
test
push
push
cmpl
xchg
fs
scas
dec
adc
out
sub
movsl
cmp
inc
cs
hlt
add
fadd
popa
call
adc
mov
jmp
dec
add
jle
subb
xchg
testb
fstl
adc
mov
cmp
add
pop
jnp
inc
and
rolb
add
jo
add
xor
add
roll
lret
jl
xor
mull
mov
sarb
xor
cs
or
push
adc
or
mov
ja
call
ret
inc
jg
fwait
out
adc
sti
ja
arpl
movsl
pop
into
xchg
pop
inc
adc
push
cmc
loopne
mov
cld
mov
mov
pop
mov
add
icebp
aam
movsl
cmpb
cmpsb
add
mov
add
mov
jae
call
inc
mov
dec
mov
nop
ret
xor
verw
insb
pop
push
add
jl
lcall
adc
inc
fsubrp
das
ss
jno
dec
nop
push
add
push
pushf
test
add
daa
cwtl
jo
jns
sub
jo
rcll
sarb
ret
and
mov
inc
adc
cld
fcmovbe
stos
add
sbb
lahf
jno
cld
push
or
jge
fadds
mov
push
add
add
jnp,pt
xorl
add
cwtl
mov
push
out
or
movl
dec
shll
mov
cs
fnstcw
inc
or
je
pop
addr16
fcmovnu
jmp
in
add
adc
add
push
subl
push
inc
and
mov
fiadds
push
dec
xchg
and
add
push
je
or
inc
push
enter
xor
cmpl
add
je
daa
mov
pop
add
lea
gs
jp
add
pushf
xchg
push
jmp
idivb
clc
aam
pushf
add
sbb
mov
mov
adcl
pushf
lahf
jg
cmc
cmp
add
dec
jb
test
shlb
xor
pcmpgtb
push
xor
fwait
and
and
fidivrl
jmp
add
sub
mov
pop
inc
roll
add
in
and
imul
xchg
imul
test
cli
fsts
jl
cmpsb
mov
mov
cmp
inc
add
ljmp
lea
nop
shl
add
dec
lock
movl
dec
loopne
xor
sbb
add
jb
jnp
loopne
or
out
push
mov
fldt
cmp
icebp
or
dec
and
add
ljmp
add
mov
push
jo
jno
les
jo
out
jae
imul
test
fcompl
add
jno
mov
aaa
sub
jns
pop
push
pop
fiadds
cli
cmp
iret
cmp
je
pushf
cmp
inc
xchg
jo
add
sbb
out
add
cmpsb
rol
push
jne
add
sub
dec
sbb
mov
shr
add
push
xchg
adc
repnz
pop
loope
add
add
add
dec
ds
loopne
xlat
inc
ss
add
mov
xor
loopne
in
lock
add
sbb
outsl
aas
ret
dec
sub
es
add
jg
call
sbb
stos
jb
mov
mov
and
jl
lret
sub
movq
pop
imul
mov
mov
fistps
lds
add
cmp
lahf
xchg
adc
aad
cltd
cltd
dec
pop
and
jb
or
or
iretw
cs
adc
add
negb
cmp
arpl
and
cld
cmp
test
icebp
jecxz
xlat
jnp
add
push
add
test
add
les
inc
cmp
movsb
add
adc
imul
aad
cmpsb
jb
repz
pop
cmp
lods
jne
ss
xor
push
pop
jg
sub
add
outsb
pop
test
cmp
add
cmpsb
jp
mov
pusha
iret
lahf
stc
push
and
xchg
jb
sbb
mov
lods
sbb
stos
aaa
bnd
mov
orl
jns
std
xor
jle
xchg
inc
xchg
cwtl
popf
sbb
test
sarl
loopne
or
jae
xchg
push
mov
mov
mov
movsb
movsb
pop
mov
or
mov
cwtl
xchg
cmp
cmp
pop
add
mov
add
loop
adc
call
rcrl
sarl
rcl
loop
xchg
add
and
xor
sahf
mov
dec
pusha
xlat
add
insb
cmpb
jge
xchg
add
dec
enter
imul
mov
dec
aaa
cld
xor
insb
enter
out
shlb
xchg
loopne
sbb
bound
hlt
je
arpl
js
sub
rolb
mov
lods
add
add
addl
addr16
xor
mov
jl
add
cmpsl
mov
and
pop
mov
add
lods
push
pop
pusha
dec
cmp
adc
jno
fiaddl
cmp
in
add
cmp
cmp
mov
mov
filds
sti
pop
jo
pop
stos
rcl
dec
dec
clc
add
pop
mov
das
hlt
leave
add
mov
pop
lods
add
rorl
cmp
inc
mov
adc
add
adc
adc
pop
mov
dec
dec
roll
jl
repnz
xor
xor
mov
int3
adc
push
jne
popf
pop
adc
cmpsl
insb
pop
mov
pop
jmp
cmp
aas
add
add
ret
aam
paddw
pop
and
xor
xor
lods
and
subl
mov
xor
mov
add
cltd
jb
and
ret
les
sub
fbstp
je
add
push
pop
repz
insb
mov
xor
rcrb
mov
fistpll
leave
cmpsb
pusha
push
and
xchg
loop
cwtl
adc
mov
dec
mov
push
arpl
dec
repz
mov
xor
repnz
add
pushf
sbb
test
stos
add
idiv
daa
call
cmp
pop
lret
add
jne
mov
mov
shl
sbb
mov
jp
and
or
and
mov
dec
add
repz
call
jl
sub
mov
lcall
mov
test
popw
adc
push
sahf
in
lods
mov
push
mov
pop
pusha
lods
ds
cwtl
or
sbb
and
add
lahf
cmpsl
or
js
mov
clc
add
pop
cli
out
mov
rcrb
xor
inc
xor
mov
push
sub
pop
movsb
add
shlb
repnz
sahf
add
mov
pop
es
jne
mov
push
clc
mov
mov
adc
leave
or
pop
lcall
push
pop
scas
es
push
icebp
in
add
ja
or
faddl
jg
cwtl
fcomps
xchg
fstps
sbb
cltd
push
orl
fcmovu
add
mov
int3
pop
cmpsb
pop
aas
mov
iret
call
fcompl
and
in
imul
or
or
movsl
movsb
push
stos
add
aad
sarb
dec
sbb
fst
inc
test
add
cmpb
aad
lods
jg
cmp
mov
add
push
or
sub
out
inc
in
lds
pop
test
pop
sbb
inc
push
add
sub
js
rolb
test
pop
insl
dec
mov
pop
pop
add
mov
xor
mov
xor
cmpsl
rorb
mov
xchg
mov
mov
mov
or
mov
pushf
dec
sarb
sti
cmp
pop
lcall
add
popa
adc
xchg
inc
push
and
and
popa
jg
add
xchg
into
rolb
outsl
cmp
jg
test
addr16
mov
add
inc
sarb
jns
xor
or
sbb
jmp
imulb
mov
nop
add
insb
pop
adc
dec
add
mov
imul
mov
aaa
addb
push
repz
add
or
roll
add
ror
push
test
or
pop
push
into
inc
daa
push
dec
cmp
add
ret
outsl
push
lcall
rdmsr
in
add
fs
loopne
cmp
mov
push
push
mov
mov
test
xor
and
mov
aas
jbe
and
test
xchg
jle
mov
lods
add
jae
and
stos
adc
cmp
push
xorb
mov
sub
dec
xor
xor
mov
std
add
test
aad
outsb
inc
or
fstps
or
jecxz,pt
add
or
xor
xchg
adc
add
cmp
out
and
sbb
add
xchg
jo
stos
in
cs
das
jl
arpl
add
mov
sbb
add
sbb
xor
push
ret
jl
je
mov
pop
outsl
xchg
sbb
add
pushf
mull
out
test
jno
sub
roll
inc
or
sub
dec
pop
sub
add
mov
sahf
adc
cs
fdivrs
jge
sub
add
nop
inc
mov
leave
fimuls
in
insb
add
out
push
add
jp
jo
cmpsb
add
mov
add
push
mov
add
pop
mov
and
or
add
daa
add
add
mov
cmp
sbb
int3
loop
clc
push
inc
in
gs
jbe
jg
rorb
pop
adc
mov
xchg
and
enter
push
mov
add
out
push
sbb
add
add
cmpsb
fidivs
add
jo
loopne
add
js
add
cs
dec
std
add
dec
adc
fs
jns
clc
push
cmpsb
insl
pop
inc
add
mov
add
fcmovnb
dec
lds
mov
add
xchg
mov
add
and
push
test
jge
imul
add
and
jl
fs
and
mov
cmpb
mov
sub
jae
test
xor
and
test
pop
and
push
int3
and
inc
clc
leave
mov
addb
inc
cmp
out
mov
xchg
add
cmc
pop
pop
add
fdivrl
push
into
sti
nop
jp
aas
int
mov
movb
lock
lods
xchg
es
loope
adcl
and
dec
lret
xor
push
add
loopne
insb
xchg
outsl
mov
lds
push
xchg
add
dec
inc
xchg
xchg
ljmp
pop
fwait
or
or
nop
addl
adc
test
sub
insb
add
push
jecxz
or
pop
add
xchg
dec
iret
mov
jns
add
lods
popa
pop
mov
loop
jbe
frstor
rclb
xchg
mov
xchg
mov
fs
sub
push
adc
and
daa
cmp
pop
add
jb
dec
rcll
popf
nop
aas
pop
sub
ss
mov
fwait
mov
push
loopne
lahf
out
cltd
add
mov
les
add
fwait
jle
add
std
fcomi
jecxz
add
push
mov
xor
push
andb
roll
aam
sub
jo
jle
jmp
add
xchg
mov
out
insb
pop
add
adc
pop
cs
test
popa
mov
sbb
lock
aam
dec
fdivp
js
mov
repz
pusha
mov
andb
cwtl
pop
mov
sub
je
pop
addr16
jbe
inc
insb
push
nop
lods
dec
call
sub
in
aam
push
adc
rolb
ja
add
or
inc
out
addb
xchg
fadds
jmp
popa
sub
mov
rcr
add
adc
js
cmpsb
lock
push
ret
inc
sarb
pop
aad
pop
scas
push
loopne
call
mov
int
inc
xor
aam
mov
or
orb
nop
shl
sub
incl
aad
xchg
and
add
pop
test
std
push
pop
mov
xor
sbb
out
add
add
cmc
pop
out
jl
xor
dec
xlat
mov
mov
fbld
cmpsl
sbb
movsb
mov
add
xor
ret
bound
pop
mov
clc
fadds
push
aaa
lds
add
sarl
repnz
xchg
xchg
pop
fiaddl
and
pop
xor
sahf
and
incb
add
adc
push
xor
lret
add
xor
inc
inc
cmp
stos
dec
add
int3
roll
cmp
and
push
ljmp
jnp
add
jmp
jecxz
or
add
sub
out
cmp
mov
test
pop
out
in
repnz
ljmp
xor
mov
mov
or
add
cmp
pop
add
sub
sbb
das
scas
add
inc
add
dec
sbb
loopne
cmp
jl
add
and
loope
inc
add
pop
addb
leave
mov
in
popa
loop
clc
add
push
das
mov
mov
sub
add
aas
push
add
xchg
icebp
cmp
mov
sbb
lock
dec
addb
push
out
pop
xchg
mov
stc
xchg
jo
shrl
ss
jg
add
sub
int3
add
test
push
hlt
fucom
adc
mov
sub
xlat
add
xor
mov
sbb
js
je
adc
xchg
pop
mov
mov
cmp
sub
std
popw
pop
fsubrs
inc
rclb
daa
leave
dec
add
sbb
loope
sbb
or
rcrb
in
dec
jl
mov
jmp
out
repnz
sbb
add
loopne
jp
xor
cwtl
mov
jle
add
rorb
scas
or
xor
js
sub
sbb
fcomps
add
loopne
je
add
fwait
add
sub
push
fstpt
pop
mov
arpl
push
mov
popa
xlat
mov
sub
push
movaps
ficoml
clc
or
add
xlat
and
scas
push
xor
pop
push
mov
pop
icebp
adcb
xchg
push
or
cwtl
repz
sbb
dec
gs
push
outsb
repnz
add
mov
push
sub
xlat
push
rcr
jno
jmp
leave
cmp
adc
add
mov
sbb
or
lock
gs
sbb
add
aad
pop
add
mov
es
loop
psrld
pop
addb
sbb
push
shl
int3
jo
add
das
push
outsl
je
jae
jae
sbb
enter
mov
fisubrs
popa
fcomps
icebp
sbb
aam
add
fcmovbe
shl
cli
push
dec
hlt
sbb
pop
ja
or
fcoms
cmp
outsb
pop
mov
inc
xchg
test
xchg
add
cmp
inc
jmp
insb
jne
add
movsb
sti
mov
les
ss
add
or
clc
aam
subb
inc
or
xchg
mov
andl
roll
jbe
jl
push
mov
mov
ret
pop
sub
xchg
repz
cmc
inc
pop
clc
pop
scas
popa
xchg
adc
orl
cs
das
inc
and
dec
cltd
test
popa
mov
int
ror
cmp
ljmp
pop
in
shl
add
jl
mov
pop
clc
push
add
lret
dec
movsl
fildll
push
pop
dec
lahf
movsb
mov
mov
loop
outsb
cmp
add
sbb
xor
add
add
xchg
sub
add
fs
out
pop
ret
addr16
sub
inc
sbb
js
jg
or
cmp
jle
add
mov
or
mov
cmp
in
dec
in
iret
sbbb
test
push
jb
mov
pusha
sarb
imull
mov
fadd
insl
add
aad
cmp
adcb
popf
dec
inc
pop
or
pop
aam
jmp
mov
pushl
add
movsl
mov
outsl
jbe
add
cmp
loopne
fstpt
nop
add
in
adc
rorl
sbb
jnp
jo,pn
push
out
int
add
addb
fwait
pop
sbbb
in
adc
in
inc
and
cwtl
pop
loopne
jg
pop
int3
dec
pushf
leave
dec
das
mov
and
ljmp
cwtl
inc
push
sbb
or
cli
shlb
mov
sub
in
add
out
mov
xor
clc
cltd
add
dec
push
sbb
movsb
jo
in
stos
rcl
pop
test
ret
xchg
xlat
push
loopne
mov
dec
imul
inc
dec
icebp
mov
jae
jmp
nop
hlt
or
iret
add
add
and
sbb
roll
jle
cmpsl
sbb
push
pop
jmp
and
xor
add
movsl
mov
stos
sbb
cmp
test
or
lods
fiadds
out
mov
arpl
jb
cmp
das
pop
push
test
hlt
inc
adc
inc
mov
lcall
add
mov
cmpsl
out
pop
loope
bound
outsl
push
jb
dec
dec
ja
mov
or
push
and
insb
mov
ja
filds
dec
pop
mov
add
out
add
call
rcrb
inc
outsl
and
inc
jl
dec
and
xchg
movsb
adc
add
fwait
xorb
popf
hlt
mov
arpl
repnz
and
pop
jecxz
dec
xchg
mov
sub
fstpl
and
lds
push
xchg
out
mov
xchg
lods
and
aas
nop
add
or
cli
out
pop
cld
sbb
inc
and
mov
lock
pusha
add
out
jns
xchg
out
clc
es
mulb
add
push
cmpsl
or
cmp
sti
adc
mov
add
cwtl
push
and
cmp
inc
xor
lock
cmp
sub
test
imul
cmp
mov
pop
mov
lods
xlat
and
arpl
test
ljmp
mov
inc
add
data16
adc
and
add
int
mov
cmp
fsubs
repnz
lcall
push
out
pop
xchg
lods
lret
or
cmp
xor
push
cmpsl
notb
fsubs
pop
gs
mov
pop
test
or
and
cmp
sub
mov
sbb
add
movsb
mov
js
jp
ror
fnsave
jge,pt
add
fsubl
aad
add
mov
pop
sbb
scas
lcall
add
icebp
inc
xchg
xor
cmp
bswap
inc
jmp
push
mov
xchg
pop
mov
xor
inc
sbb
ret
mov
test
data16
or
sbb
or
add
inc
cld
das
xor
jl
and
fnstsw
arpl
cld
out
add
stos
test
mov
or
out
jmp
push
add
sub
push
dec
mov
cmp
ficoml
nop
sub
fwait
pop
nop
add
push
add
mov
or
enter
add
jo
adc
inc
add
scas
ret
mov
pop
jmp
adc
dec
inc
outsb
jge
pop
imul
loopne
aas
addr16
and
sarb
add
xchg
sub
lret
add
push
in
mov
hlt
sbb
das
mov
and
add
jp
xor
or
add
push
jb
pushf
adc
sbb
push
add
push
fdivrp
inc
in
roll
xchg
movsl
or
fs
pop
and
add
xlat
push
nop
push
inc
xchg
test
pop
cmp
xchg
pop
cmp
jnp
daa
cmp
add
je
test
push
adcb
dec
cmp
lea
push
add
ret
push
xchg
int
push
dec
or
inc
or
sbb
jl
pushf
out
push
add
add
lds
mulb
shll
repz
jle
call
jle
xor
xor
inc
adc
adc
dec
orb
pop
add
je
cmpsl
inc
cmp
xor
xchg
pop
int
mov
sbb
pop
aam
mov
data16
aad
and
jl
pop
mov
push
add
jle
sbb
movb
inc
cmp
incl
ljmp
sbb
xorb
mov
test
filds
mov
and
mov
add
xchg
adcb
inc
dec
or
or
dec
in
lfs
and
cmp
mov
lcall
inc
lahf
dec
scas
push
push
jo
pop
dec
insl
loop
es
xchg
add
or
in
jo
nop
cld
add
dec
dec
out
scas
testl
lods
sbb
jecxz
inc
push
mov
mov
cmpsl
ja
sarb
or
jo
js
testb
add
and
sbb
add
lret
jb
cmc
jmp
xor
xor
jmp
and
push
xor
jo
aam
mov
pop
es
inc
cwtl
je
test
les
sahf
lea
add
jo
lret
cmp
or
rclb
out
jb
push
add
or
stos
in
pop
test
cmp
aad
jae
repnz
add
dec
orb
decl
mov
ljmp
out
adc
jns
nop
add
ljmp
mov
and
insb
adcl
mov
push
daa
loop
adc
jb
cmp
fiadds
xchg
jns
adc
add
lock
add
jge
dec
popf
sub
in
int3
add
sti
fsubrp
test
or
sbb
and
add
sahf
int
dec
lods
rcr
in
cmp
test
add
lret
xchg
aas
push
lret
push
fstps
cmpsl
push
or
out
pop
loopne
pop
push
scas
add
inc
cmc
cmp
aas
jno
pop
inc
fsubl
inc
lret
mov
push
repz
xor
flds
hlt
mov
out
inc
fmuls
mov
mov
add
loope
adc
jp
mov
add
sub
jns
jg
add
inc
pushf
sbb
push
pop
lret
inc
mov
and
add
cwtl
sbbb
inc
movsb
add
shrb
cmp
pop
and
dec
and
add
jne
inc
push
sti
pop
and
mov
add
mov
jl
lods
fadds
std
xchg
ja
in
dec
pop
dec
lock
jo
incl
notl
cmpb
js
fsts
jo
test
insl
pop
jp
fistpll
jecxz
shl
xor
jno
add
out
bnd
addb
mov
and
push
adc
xchg
mov
adc
cld
cltd
add
fistpl
testl
test
add
mov
clc
insb
sub
push
aas
mov
add
mov
sbb
into
dec
mov
cs
jp
add
sbb
xor
or
test
add
dec
add
adcl
mov
add
aam
jmp
in
aam
addb
ja
push
mov
stc
add
imul
data16
sub
les
adc
jbe
push
in
pop
stos
xchg
bound
jg
insb
cmp
jecxz
imul
cmp
pop
pop
and
mov
add
mov
sahf
add
les
leave
ds
add
subl
div
lahf
nop
mov
push
cmc
mov
pop
fcoms
add
imul
pop
roll
cld
mov
addb
or
fwait
les
ds
aam
jo
add
mov
sbb
pop
pop
inc
lret
lea
sub
std
and
add
pop
aam
shl
mov
dec
mov
and
adc
sub
mov
add
sbb
xchg
hlt
repz
lret
xchg
test
inc
add
dec
push
popl
in
sbb
jg
lret
pop
movsl
pop
sbb
mov
aam
push
add
js
add
xchg
popf
out
push
or
hlt
sub
sub
cmpsb
mov
adc
xchg
add
out
dec
and
sub
jle
mov
lcall
cmp
std
add
nop
sarb
mov
mov
jne
cmp
data16
leave
push
inc
pop
cwtl
inc
cmp
jno
lods
mov
cmpsl
aaa
addb
sar
cmp
jmp
dec
cmpsb
inc
enter
fldcw
mov
js
in
pusha
jge
or
or
inc
cmp
ja
and
mov
ljmp
fldenv
add
stos
and
hlt
jp
push
sbb
lahf
add
pusha
cmp
and
pop
dec
add
xchg
cli
inc
mov
jle
cmp
sub
orb
xor
pop
add
lcall
or
movsb
add
jae
loope
and
xchg
out
std
sub
repz
fisttpll
pop
xchg
add
mov
ja
jne
cwtl
add
mov
lods
pusha
xchg
loopne
add
ficoml
das
or
js
dec
mov
mov
pop
xchg
sbb
addb
notl
add
out
inc
push
rclb
pop
mov
sub
arpl
es
pop
inc
add
pop
xchg
xchg
add
xchg
fcompl
inc
adc
test
xchg
or
pop
add
pop
psubsw
xor
sbb
mov
sub
mov
inc
jmp
mov
in
test
faddl
adc
and
cwtl
scas
add
cs
lcall
es
jns
mov
mov
scas
icebp
inc
je
sub
mov
pop
in
inc
cld
lcall
sub
mov
sbb
push
int
sub
cwtl
mov
mov
add
cwtl
xor
push
out
loopne
dec
lcall
repnz
dec
out
mov
insb
add
pop
sbb
dec
add
sbb
xchg
mov
sbb
add
rcrb
pop
push
mov
mov
add
int
push
add
xor
lret
inc
rorb
xor
add
fwait
int
jecxz
jb
add
ljmp
mov
jo
cmp
add
cmpb
rolb
jp
sub
imul
icebp
ds
dec
test
sub
ljmp
data16
add
in
mov
cmp
test
pop
add
pop
cmp
or
mov
aaa
add
xchg
fstpl
arpl
stos
push
imul
cld
xchg
sub
inc
sub
sbb
jo
inc
shll
subb
inc
in
push
mov
call
xchg
xchg
ret
sti
pop
les
push
inc
jb
add
xor
mov
shl
pop
gs
insl
sti
fstpt
out
sbb
mov
push
cmp
aad
out
pop
addr16
pop
xor
sbb
insl
out
repnz
dec
push
push
testb
jnp
sbb
mov
adcl
add
and
add
mov
addr16
pop
pop
and
ljmp
sub
mov
cltd
in
sti
shll
xor
ljmp
sti
push
jo
mov
sub
push
cld
test
jo
imul
pop
pop
xchg
adc
jbe
in
out
add
das
or
lods
cld
push
mov
insb
adc
push
leave
ret
mov
mov
push
adc
pop
add
fsubr
mov
stc
jns
mov
xor
mov
jae
pop
cmp
test
inc
sbb
fcmovne
xor
imul
movsl
ffreep
loope
pusha
fnstcw
jecxz
and
add
dec
jo
add
cld
cmp
or
pop
sti
jg
ja
add
in
push
push
xchg
push
pop
into
in
add
inc
jo
mov
roll
lock
add
xor
pop
adcb
push
mov
lods
jmp
fcomps
cld
pop
int3
add
pusha
dec
cmpsl
imul
push
add
sbb
jno
ss
push
mov
pop
push
arpl
pop
mov
adc
mov
fistpll
and
test
adc
mov
pop
aam
ja
mov
pushf
adcl
sub
xchg
fnstenv
fadds
mov
shlb
sub
mov
add
xchg
pop
add
mov
in
and
pop
sub
nop
mov
movsb
ltr
fnstcw
push
lcall
sbb
push
in
or
int3
push
and
fistpl
or
lret
inc
xchg
scas
incl
les
arpl
push
sub
test
add
pop
ds
icebp
cwtl
ja
sub
rcrl
xor
aam
xchg
inc
lcall
icebp
pusha
mov
lods
cmpb
push
stc
test
add
xchg
scas
add
mov
sti
add
lds
sbb
testl
mov
cmp
add
arpl
dec
adc
fs
mov
mov
popa
aas
ljmp
stos
cmp
mov
stos
repnz
cmp
dec
sbbb
adc
ret
aam
add
lcall
bnd
orb
or
cmp
cmpsl
or
inc
divb
sbb
cli
in
lea
js
sub
pop
sbb
mov
add
mov
add
andb
test
sbb
lahf
sbb
mov
add
cmp
xchg
dec
sub
or
test
or
dec
cmpsl
hlt
xchg
inc
imull
andnps
or
xlat
test
movsl
and
or
mov
sbb
or
mov
sbb
mov
or
sahf
movb
lds
fsubrl
std
lods
aam
out
xor
mov
add
add
imul
mov
add
cmp
insb
rcrl
cmp
lock
pop
lret
push
or
lds
int3
sub
sbb
fcomp
mov
add
adc
testl
jge
jp
dec
pop
shl
in
or
data16
sbb
es
mov
stos
inc
test
notl
nop
xchg
add
mov
test
sbb
add
or
loopne
push
add
pop
jae
cs
pusha
sti
add
lahf
add
mov
dec
push
xor
out
dec
and
pop
stos
push
outsl
popa
into
mov
sbb
ss
mov
cmpsb
mov
adc
mov
jns
sbb
ret
fadds
sub
repz
aam
addb
pop
leave
dec
test
push
mov
loopne
orb
jno
nop
sbb
dec
cmc
sub
daa
add
add
pop
sbb
xor
pusha
ja
mov
xor
andb
mov
out
mov
add
or
add
jge
or
pop
inc
mov
testl
xchg
imulb
add
xlat
mov
into
rcr
fucomp
add
rcr
mov
and
adc
jp
mov
pushf
sbb
push
sub
lods
mov
and
out
add
shll
sahf
add
and
push
adc
fisttpl
jge
xor
repnz
add
xchg
adc
adc
pop
lods
pushf
mov
shl
test
sbb
adc
add
xchg
adc
cmp
iret
xchg
int
dec
sbb
inc
lahf
inc
add
sbb
pop
dec
in
dec
xchg
jecxz
iret
pop
or
rolb
ret
add
mov
cwtl
xor
clc
sub
jae
pop
add
test
sub
pop
lods
pop
cmpb
adc
pop
jp
add
inc
mov
aad
jl
xchg
shll
pop
push
loope
jp
iret
push
xorb
in
add
dec
cmpsl
xchg
push
jmp
outsb
cmp
adc
inc
daa
cmp
adc
jmp
xchg
pop
and
and
and
adc
idiv
mov
add
in
add
add
or
cld
loopne
sbb
int
mov
mov
add
pop
popf
mov
add
pop
dec
orb
or
loop
sbb
add
push
repnz
lret
dec
arpl
rcrl
enter
adc
les
or
es
fiadds
loop
scas
std
mov
addb
mov
fisttpl
in
or
add
aam
leave
int
sbb
mov
ss
std
sbb
mov
xor
dec
jp
out
add
sub
iret
addr16
arpl
test
sarb
ja
cmpsl
jbe
and
pop
pop
add
add
mov
dec
jne
adc
and
pop
jp
mov
or
push
add
pop
cmpl
dec
mov
test
jns
mov
test
es
insb
jae
and
adc
sbb
xor
jo
enter
add
and
bound
jmp
int
lock
shrb
js
pop
xor
sbb
std
add
mov
scas
add
inc
push
or
rcll
add
pop
les
test
push
aaa
jb
cmpb
ret
hlt
mov
lock
insb
xor
mov
cmp
fildl
inc
xchg
push
pop
out
sti
clc
mov
ljmp
gs
dec
add
aad
mov
mov
mov
add
mov
loope
or
add
dec
pop
pushaw
inc
dec
jl
icebp
popf
jb
cmp
lahf
xchg
adc
fstpl
pop
stc
mov
push
arpl
pop
fldenv
xchg
cmc
ja
mov
adc
xlat
dec
xor
frstor
add
lret
loop
call
xor
orl
add
mov
sub
dec
rclb
cmpsb
inc
dec
cmp
movl
pop
jnp
or
loop
jge
std
shlb
loope
add
jmp
inc
repz
push
push
xchg
bound
rorl
push
sbb
mov
push
fwait
or
ja
es
jns
loop
add
add
negl
mov
pop
and
repz
jo
shrb
loope
jle
xchg
add
iret
add
pop
push
jns
xchg
push
stc
add
insb
lcall
dec
inc
movsl
push
js
lret
lret
rclb
lcall
enter
in
roll
test
add
addb
sbb
cmpb
into
or
flds
mov
mov
sbb
pop
dec
aas
mov
leave
ljmp
nop
clc
or
lret
fimull
add
jnp
aas
mov
hlt
sbb
les
std
push
mov
adc
das
lret
mov
jp
popa
movsb
mov
sahf
fwait
dec
bound
jge
and
sub
sbb
jns
xchg
add
push
loopne
popa
out
inc
cld
push
push
aas
dec
adc
push
add
sub
loopne
mov
or
pop
xchg
loop
jo
jl
mov
add
mov
cli
es
push
push
mov
add
jle
ficoms
sub
out
or
daa
inc
inc
add
scas
aas
push
add
in
xchg
fs
push
leave
loope
sbb
loope
pop
cmp
sbb
push
fldl
jb
int3
push
ljmp
xlat
rolb
pusha
aam
sub
ret
scas
lock
mov
push
or
add
inc
mov
mov
cltd
pop
shlb
loopne
stos
loope
lock
insb
pusha
add
jg
inc
mov
xchg
add
and
aam
sbb
add
xchg
out
pop
loopne
xor
push
or
add
xor
addb
clc
push
cmovae
outsl
sbbb
add
rorb
jo
add
cmc
shlb
pusha
lock
scas
sbb
mov
test
xchg
shll
mov
or
and
add
dec
jg
ffree
xor
add
mov
dec
pop
cmpsb
add
mov
cmpsb
push
xor
mov
xor
ja
lea
mov
outsl
insl
std
xchg
pusha
sbbb
mov
insb
leave
mov
inc
repz
scas
xchg
and
std
sub
cmp
add
loopne
sarb
out
adc
stos
mov
mov
pusha
test
js
lahf
add
imul
mov
fldenv
sbb
shlb
sub
lcall
sbb
mov
mov
in
fdivrl
add
add
js
and
inc
mull
sbb
add
fwait
cmp
mov
xor
cwtl
ret
or
inc
lock
add
or
mov
jbe
xchg
imul
and
addl
cld
into
test
sub
call
in
sbb
push
add
jecxz
loop
inc
add
push
fs
bound
jb
and
add
mov
xor
nop
pushf
push
stos
push
mov
aas
filds
and
setg
lret
push
inc
inc
and
test
mov
jb
test
mov
in
push
call
xor
jl
decb
insb
mov
inc
mov
sbb
jno
add
aas
js
xchg
mov
enter
pop
adc
test
mov
and
cwtl
add
int3
ret
or
push
jecxz
add
std
xchg
in
stos
pop
rorb
int3
mov
les
cmp
lods
cmpb
mov
clc
test
push
mov
addr16
or
jns
pop
repz
pop
out
and
cmp
xor
nop
mov
add
cmp
test
movl
add
iret
cli
fisubrs
mov
mov
sbb
mov
loop
fdivl
stc
jp
jne
add
cwtl
jno
stos
mov
loopne
mov
push
in
mov
dec
pop
push
add
sti
loopne
int3
fidivrs
add
xlat
fldt
add
int3
sub
imul
dec
push
or
aam
repnz
add
jne
jle
pop
stos
popw
bound
inc
xor
les
ljmp
jle
add
xchg
push
cmp
push
add
fs
and
mov
scas
in
add
sub
add
fnstcw
sbb
and
cmp
xor
jbe
jb
jp
daa
dec
add
xchg
or
add
ljmp
add
andl
iret
add
insl
enter
inc
loopne
in
pop
push
orb
mov
xor
push
mov
xor
pop
sahf
les
add
adc
pusha
in
push
in
dec
bound
shlb
cmp
cmp
jp
cld
add
rcrb
xor
jle
cmp
movsb
mov
pop
pushf
jb
lock
xchg
push
add
pop
or
orl
sub
jnp
mov
xchg
dec
roll
cmc
cld
jnp
add
xchg
pop
sub
lods
rcl
ljmp
mov
add
sbb
inc
or
sti
call
push
push
pushl
pop
rclb
aas
lcall
inc
das
add
dec
repnz
dec
lods
pop
jb
add
std
imull
jnp
mov
sbb
lds
mov
jno
ficompl
push
insb
ss
or
add
mov
enter
hlt
inc
stos
pusha
sti
cmc
das
add
adcl
fcmovnbe
or
push
ficoms
popa
out
push
cmpsb
add
pop
mov
add
mov
cltd
mov
jge
xor
je
rcl
sbb
jecxz
jp
or
add
icebp
jg
push
and
inc
add
mov
js
leave
data16
rolb
jl
add
andb
hlt
mov
clc
adcl
xor
fnstenv
pop
adc
lret
inc
shlb
and
mov
das
add
call
out
add
adc
idiv
nop
stos
out
pop
jl
cmp
mov
cld
add
xchg
test
sbb
add
in
dec
mov
sarl
dec
mov
xlat
mov
sub
add
fisttps
add
icebp
push
jecxz
mov
add
cmp
add
daa
nop
or
bound
pop
movsb
and
jae
test
or
cmp
es
mov
gs
mov
cmp
sbb
push
adc
jle
cld
jle
add
cmp
mov
mov
mov
add
mov
mov
pop
bnd
add
stc
mov
out
pop
jo
orb
repnz
adc
mov
mov
push
xchg
iret
add
pop
inc
std
xchg
dec
jns
pushf
sbb
mov
ss
inc
fisubl
add
cmpsb
xchg
jge
shll
mov
movsl
add
je
jb
lahf
inc
and
popl
iret
nop
xchg
loopne
ds
xchg
jno
scas
or
adc
sbb
pusha
call
pop
flds
out
inc
and
add
mov
pop
sbb
les
cmp
and
xchg
scas
add
adc
imul
repz
aam
cmp
cltd
sbb
add
je
mov
in
dec
fxch
push
lahf
sub
scas
enter
scas
mov
ret
xchg
pushf
xor
jp
pop
orb
mov
divl
jmp
ret
mov
outsl
xorb
cld
inc
mov
loop
add
inc
jg
ja
push
adc
add
xchg
xlat
inc
imul
jmp
orl
and
mov
lock
dec
inc
xchg
add
fs
hlt
cld
mov
xchg
in
dec
jbe
sbb
jle
add
xchg
add
add
mov
shlb
dec
xor
dec
fcompl
outsb
daa
mov
mov
add
mov
test
add
sub
popf
adc
shrb
cmp
push
aam
xchg
pop
sub
add
lods
sub
sbb
lds
inc
fistps
sarl
add
pop
add
or
add
int
pop
add
mov
lock
addl
dec
mov
scas
add
jbe
fiaddl
aas
add
jae
in
mov
cld
mov
repnz
xchg
mov
xchg
testl
popf
jl
shrb
test
loopne
divb
add
xchg
sub
aas
fcoml
dec
rolb
rcl
lods
loopne
loope
sub
movsb
mov
pop
jne
nop
and
cmp
mov
addl
push
call
movsb
es
cmp
rolb
scas
fwait
mov
call
pop
push
les
xchg
stos
loope
inc
mov
sbb
add
adc
or
lret
xor
mov
aaa
dec
adc
push
add
fs
jl
dec
faddl
into
imul
fdivrs
pop
mov
xchg
out
xchg
test
lock
xchg
fs
mov
aaa
cmp
or
in
add
add
jge
addl
or
rcrl
movsl
add
repz
les
jmp
sbb
or
aad
push
or
clc
xor
cld
push
mov
movsb
lea
cmp
inc
mov
mov
shrb
cmp
push
faddl
mov
inc
enter
and
clc
jnp
jge
pop
neg
jnp
cmpsl
cs
add
sbb
xchg
cmp
scas
push
mov
or
lock
jnp
jns
mov
add
push
push
mov
pop
push
mov
mov
outsb
inc
shll
add
add
pop
mov
frstor
inc
sub
shl
scas
orb
dec
sbb
mov
cld
stos
loopne
add
nop
push
jnp
mov
ficoms
pop
insb
sub
push
pop
lock
xchg
int
clc
lods
sub
lret
dec
inc
data16
lods
xchg
pop
or
cltd
addl
mov
stos
sbb
addr16
or
ja
test
pop
pusha
cwtl
aas
mov
scas
add
les
nop
cmp
add
jg
lret
pop
int
cmp
inc
testb
and
ljmp
mov
daa
out
jecxz
les
inc
nop
mov
cmpb
subl
imul
xchg
adc
jle
popf
call
sahf
icebp
loop
push
or
sub
jns
add
aad
mov
cmpsl
test
scas
mov
cmp
sti
das
and
dec
out
pop
shl
push
or
mov
mov
mov
lret
rorl
lods
sahf
add
dec
add
dec
jne,pt
jb
pop
out
mov
in
mov
add
ja
fcomps
xchg
add
inc
xchg
in
rorb
inc
rolb
cwtl
add
mov
arpl
popa
testl
popf
xchg
pop
mov
cld
call
stc
jo
aad
sub
cltd
push
or
and
stos
pop
or
or
idivl
add
ja
hlt
add
mov
and
push
enter
inc
out
ds
faddl
in
aam
pop
adc
test
pushf
lods
adc
das
out
jo
gs
ja
or
lock
movsb
incb
jmp
adc
or
nop
sahf
xor
dec
cmp
sbb
mov
add
adc
cli
pop
xor
push
mov
insl
jl
daa
jo
jl
add
loopne
or
sbb
test
insl
cmp
ficompl
jo
jg
push
pop
xor
dec
lret
pop
test
dec
add
std
les
les
pop
cmpsl
push
inc
es
sub
mov
loopne
pop
addr16
push
cmp
ja
in
pop
cmp
pop
add
jo
jp
fadd
fwait
mov
lods
add
and
pop
jmp
add
dec
lds
push
xlat
dec
adc
cs
sbb
push
adc
dec
push
add
inc
ss
mov
lods
shlb
in
cmpsb
aad
sub
dec
jmp
divl
repz
add
pop
or
mov
mov
adc
out
mov
jno
in
fcomps
jo
out
mov
cmpsb
xorb
add
stc
fucomi
and
mov
std
pop
jns
sahf
sbb
enter
fists
popf
addl
std
clc
psubsb
sub
test
jg
xchg
lock
cs
stc
inc
pop
sub
sub
or
hlt
xchg
and
add
sti
mov
pop
push
out
stc
call
scas
lret
icebp
jns
jmp
idivl
add
bound
xchg
sarl
lock
or
inc
pop
addr16
inc
mov
jnp
pusha
ljmp
cmp
scas
pop
call
push
push
push
hlt
loope
rol
orb
sbb
push
out
mov
inc
call
nop
sbb
or
dec
fisttpl
arpl
mov
ljmp
jnp
inc
repz
sub
pop
aad
mov
in
push
and
dec
insb
loope
cmp
hlt
add
or
cmpsb
mov
jmp
loop
push
mov
shlb
sub
or
jno
nop
xchg
xor
dec
xor
sub
pop
and
test
popf
cmpsb
call
stc
cld
mov
js
imul
mov
movsl
ds
in
dec
sbb
pushf
add
cmpb
scas
xor
mov
cmpsb
jno
push
inc
outsb
or
data16
push
mov
push
mov
std
inc
shl
mov
xchg
icebp
pop
movsb
add
pop
pusha
into
dec
std
push
cs
inc
out
add
lea
push
sbb
and
aad
add
mov
push
cmp
add
mov
jae
add
pop
add
lods
mov
add
adc
out
add
shl
sub
mov
pop
jp
enter
je
imul
jno
mov
pop
cltd
add
and
ret
cmp
or
xor
sbb
aad
pop
and
mov
and
and
sub
fcmove
cmpsl
cmp
sbb
ret
rolb
int
pop
or
jns
add
test
ds
mov
mov
xor
pushf
ljmp
add
adc
imul
pop
addb
and
repnz
push
leave
add
outsl
pop
and
loop
pusha
add
add
test
xlat
cmpb
dec
sbb
mov
lock
inc
or
dec
imul
jle
dec
push
cmp
push
popa
add
leave
mov
aas
add
repnz
add
out
lret
inc
call
mov
out
add
sbb
xor
sub
mov
inc
jmp
jno
gs
add
out
cmc
jns
rolb
fwait
or
out
mov
add
jmp
mov
xor
add
cli
test
xor
loope
add
xor
gs
out
add
sahf
adc
pop
cmp
xchg
andl
add
imul
jmp
dec
jmp
pop
adc
cli
roll
enter
adc
xchg
lcall
test
call
es
lea
add
lods
adc
xor
nop
inc
repz
movb
enter
xor
mov
subb
mov
or
loop
xchg
rorb
inc
in
movsl
loopne
lcall
mov
jle
mov
shr
cmp
add
sbb
ja
xchg
add
jb
or
repz
aas
adc
or
daa
and
int3
xor
fs
loopne
and
mov
lock
push
adc
adc
add
test
adc
inc
out
mov
and
cmpsl
fcoml
jno
add
sahf
cmp
or
mov
jg
mov
inc
andb
dec
inc
and
ja
decl
iret
lahf
cs
movsb
xor
fcomip
cmp
cmp
xor
add
mov
shl
add
or
stc
aam
int3
pop
mov
clc
sub
test
pushf
out
jge
push
pop
push
movsb
or
or
aam
add
sub
imul
int3
add
int
sbb
add
test
in
insl
add
fiadds
jb
or
shl
aas
add
xor
adc
mov
jne
dec
mov
pop
clc
mov
addb
sbb
xchg
add
inc
sub
loop
mov
shrl
loope
ja
dec
xchg
add
and
add
sbbb
add
aad
or
ljmp
pop
add
lahf
cwtl
adc
push
cmp
gs
inc
add
push
jbe
shll
cmp
push
jl
fidivrl
push
and
shll
add
jmp
sbb
or
cmp
ret
dec
cmp
add
dec
stos
dec
or
or
push
xor
inc
cmpsl
add
adc
xor
hlt
repnz
rcrb
andl
mov
jmp
adc
add
xor
inc
add
push
test
insl
mov
test
inc
rclb
add
sub
pop
add
cld
cmpsl
jnp
cmp
pop
add
js
pop
add
inc
push
data16
mov
decb
mov
push
cmp
jl
dec
loope
mov
mov
cmp
pop
xor
addr16
daa
adc
rcr
inc
adc
cmp
test
or
jecxz
mov
mov
mov
cmp
add
out
mov
add
hlt
jbe
lds
in
sub
or
stc
add
mov
push
mov
sbb
cmp
xor
int3
xlat
jg
and
inc
and
mov
sub
iret
add
or
xchg
push
add
and
mov
add
dec
adc
out
fcoms
mov
cld
and
mov
shrb
out
push
xor
and
aas
pusha
adc
mov
testb
dec
xchg
addr16
inc
push
test
sub
or
popf
mov
push
lods
sub
pop
xor
rorb
dec
add
sub
pop
add
mov
mov
and
test
cmp
cmp
ficoml
jge
sub
or
int3
mov
mov
sbb
pop
xor
or
les
sbb
mov
fldl
sti
lods
sbb
push
inc
int3
bound
xor
jmp
jge
rcrb
cmp
and
lcall
mov
fildll
mov
add
xchg
and
in
xchg
mov
add
and
pop
loopne
dec
pop
rclb
xchg
or
dec
inc
jg
jnp
push
nop
cwtl
jp
cmp
sub
adc
in
xlat
inc
hlt
and
bound
fcomip
mov
fmull
pop
inc
jno
inc
stos
push
lcall
fld
leave
jge
mov
loopne
out
fmuls
sahf
mov
pusha
and
add
and
shrb
xor
and
test
mov
sbb
sbbb
xchg
rorl
mov
jg
pop
add
iret
pop
and
ret
xchg
cmp
stos
ds
je
sub
out
pop
add
dec
mov
xchg
pop
jle
mov
mov
cmp
inc
mov
and
sub
dec
fs
xor
jle
cmp
popa
mov
inc
pop
add
shlb
add
xor
xchg
pusha
mov
or
mov
in
dec
add
sbb
mov
fdivrl
xchg
lods
push
add
or
xor
shlb
pop
dec
jns
int3
pop
shlb
aaa
add
sbb
lock
add
leave
xor
cld
add
out
dec
imul
xor
add
cmpb
sarb
add
adc
in
sbb
add
jl
in
shr
add
dec
scas
fdivs
cmp
add
cmp
lret
fdivs
add
cmp
add
addr16
sti
imul
mov
pop
out
mov
fadds
pop
add
dec
push
ffreep
mov
or
test
sub
add
dec
lock
cmp
inc
sub
cwtl
or
mov
and
cmp
fistps
sbb
mov
fsubl
into
jmp
or
ret
nop
xchg
sbb
push
frstor
inc
cld
push
aaa
add
bound
mov
rcl
mov
xchg
fcompl
add
jae
push
add
fstpt
push
nop
mov
aas
push
enter
add
adc
xor
mov
mov
ret
and
sub
imulb
inc
sti
into
movb
inc
add
vpshufhw
cli
mov
and
pop
xor
int3
add
or
sbb
sar
sbb
lret
lods
shll
inc
fistpll
cmpsl
popf
int
int3
nop
add
jp
inc
and
sub
sahf
call
rorl
or
cld
jo
daa
cmp
mov
out
cmp
bound
xchg
repz
and
enter
test
hlt
lock
mov
repz
cmp
mov
mov
iret
sbb
jl
add
cmp
gs
hlt
movsb
movb
sbb
add
sbb
jg
add
cs
jno
add
jp
ljmp
pushf
sub
dec
adc
and
scas
outsl
jno
add
lods
pop
jecxz
add
repz
scas
ja
mulb
mov
gs
xchg
push
pop
test
add
adc
xchg
pop
dec
pop
push
and
sbb
cld
xchg
add
pop
test
lods
dec
iret
adc
xchg
push
cmp
push
push
mov
out
sbb
or
add
imul
dec
push
lds
jmp
call
arpl
in
xchg
xor
outsl
lret
leave
push
xchg
ret
xchg
sub
push
imul
ss
div
add
mov
mov
cmpsl
inc
lea
push
or
dec
mov
push
cmp
add
es
mov
sti
jo
call
xchg
and
add
shll
or
push
fmull
clc
je
lahf
add
test
xor
mov
mov
xchg
in
and
js
and
out
movl
cwtl
jl
mov
ret
rclb
rclb
pusha
lods
xor
cmp
fiaddl
hlt
sbb
enter
xchg
xlat
repnz
aad
cmc
pushf
mov
fdivr
adc
rorl
aam
imul
test
pusha
dec
mov
das
arpl
shrl
mov
insb
ljmp
add
lret
cmc
ret
or
call
pcmpeqb
dec
paddw
scas
bound
ljmp
pushf
repz
mov
in
shlb
test
lret
jo
add
pop
mov
add
test
lea
mov
pop
jg
dec
aam
daa
call
aas
sub
add
lret
shrl
sub
mov
test
pushf
dec
xchg
es
push
out
lret
daa
add
loopne
push
pop
push
cmpsb
add
in
inc
fmull
ds
dec
addb
cli
push
xchg
and
jno
inc
cmp
sbb
in
xchg
daa
ficoml
xchg
push
add
or
mov
jl
push
test
sbb
push
push
in
mov
sub
and
sub
inc
cmp
pop
push
inc
adc
xor
adc
sbb
aad
xorb
xor
and
leave
push
aaa
xchg
lock
xchg
aam
push
cmp
cmp
pop
jae
push
in
xchg
adc
popf
mov
lock
sub
or
push
shll
add
mov
sbb
dec
cli
xchg
mov
jns
push
push
pusha
mov
decb
jge
mov
add
dec
xchg
stc
add
aam
xor
mov
je
dec
outsl
pop
mov
xor
filds
sbb
add
mov
outsb
push
movb
cltd
rclb
stc
sub
movl
lea
cltd
rolb
pusha
mov
adc
inc
and
in
xlat
fwait
xchg
sti
js
add
push
out
jl
shlb
add
or
adc
mov
mov
add
int
adc
inc
inc
add
mov
cwtl
outsl
sub
in
pop
adc
or
push
add
popf
lods
mov
mov
mov
mov
pop
fwait
nop
js
and
je
cwtl
shr
nop
addl
xlat
push
enter
jo
inc
jbe
sbb
stos
mov
pop
test
mov
daa
inc
push
notb
lock
cmpsb
jne
cmp
ret
mov
mov
aad
mov
jmp
loopne
call
pop
add
ja
lahf
lock
jge
nop
adc
insb
mov
xchg
insl
out
dec
push
cmp
inc
push
xchg
cmp
loope
mov
test
or
mov
movsb
xor
negl
sub
stos
in
data16
imul
nop
or
push
jns
add
push
sbb
pop
ret
loope
mov
outsb
shll
mov
inc
into
jmp
rclb
aad
bswap
jmp
and
call
cmpsl
add
pop
data16
movsb
in
pop
push
mov
add
insb
inc
ret
push
popa
push
and
cmc
mov
imul
loop
add
gs
add
aaa
pop
pop
clc
sbb
out
add
xchg
xor
add
add
test
lods
adcl
mov
mov
test
aam
xchg
add
xchg
loopne
dec
nop
outsl
popf
je
add
lret
push
inc
xchg
nop
addb
out
mov
inc
pop
mov
cmp
stos
out
iret
sbb
out
inc
addr16
jmp
cwtl
icebp
inc
in
aad
fldenv
add
mov
cld
push
adc
sub
push
push
mov
stos
imul
add
aad
mov
or
mov
nopl
dec
and
addb
mov
mov
in
jns
insl
push
xchg
mov
iret
js
fsub
jnp
mov
and
rolb
scas
mov
jmp
and
inc
sub
cld
pushf
int
insl
int3
mov
call
dec
mov
push
js
pop
adcl
stc
lock
imul
ret
xor
inc
inc
in
xchg
add
inc
inc
or
in
into
mov
push
test
jns
push
jno
dec
icebp
or
jne
movsl
in
shlb
push
es
mov
adc
jg
cmp
ret
add
cmp
jl
or
and
add
aas
mov
flds
call
mov
std
sbb
rcr
dec
xlat
xor
push
push
adc
popa
mov
xor
pop
nop
call
or
add
add
data16
fdivrs
daa
mov
xor
scas
cs
out
cmc
push
mov
inc
dec
mov
std
and
mov
sub
mov
sbb
sbb
inc
lahf
fsubs
or
sub
cmp
jg
lret
mov
out
scas
add
ret
push
cmp
and
sub
sbb
add
fists
xor
sub
cmp
popf
js
add
and
mov
xor
sti
and
push
xor
jle
xchg
add
cli
addr16
xchg
daa
add
or
es
into
sub
icebp
cmp
les
inc
movups
add
outsl
or
loop
cmp
adc
and
cmp
into
subb
push
enter
mov
loope
mov
je
mov
out
mov
add
and
xchg
push
je
add
and
mov
add
je
xorb
cmp
movsb
mov
pop
lret
scas
fnstsw
sbb
sbb
mov
jg
sbb
cli
cmpsb
scas
fstl
movsl
into
sub
hlt
lret
loop
in
fistpll
dec
jg
fldl
mov
pop
push
xchg
add
in
and
mov
add
in
add
cmp
jge
pusha
imul
or
adc
fwait
mov
aad
dec
mulb
adc
sub
add
lds
push
or
push
sbb
fsubr
sub
int3
inc
xchg
je
jo
jbe
sbb
popa
add
pop
cmp
push
pusha
xor
mov
xchg
push
jge
pop
push
xor
jo
lret
mul
add
cmp
add
pop
das
inc
outsb
add
mov
adc
mul
orl
mov
add
shr
arpl
pop
sbb
mov
nop
imul
mov
add
lahf
add
shlb
add
cltd
std
jo
test
imul
mov
cld
verr
jbe
push
repz
or
aas
xor
shll
and
repz
cld
xor
js
test
xchg
stc
mov
nop
faddl
push
insl
shll
pop
add
shrb
in
dec
aam
adc
mov
and
icebp
inc
add
stos
jns
lea
add
cmpsb
into
fs
mov
inc
adc
or
sbb
pop
aad
add
ffreep
cs
adc
outsb
pop
add
add
cmp
js
push
ret
lock
sbb
fdivrl
add
idivb
add
fsubrp
je
xchg
jecxz
outsb
movsl
daa
add
shlb
add
mov
sbb
std
rorb
adc
mov
cmp
sub
or
iret
fisubs
cmp
ljmp
adcl
mov
push
and
mov
lods
mov
int3
jle
ljmp
imul
outsl
ds
jl
add
mov
push
andb
add
push
or
insl
pusha
scas
fs
jnp
icebp
add
mov
inc
imul
jo
pop
clc
mov
mov
lods
mov
sbb
jle
dec
sub
rcrl
pop
shll
dec
cwtl
sub
push
pop
add
nop
or
mov
xchg
adc
mov
sbb
pop
sbb
add
aam
xor
xor
inc
enter
add
jl
add
in
out
push
mov
push
and
jbe
xor
pop
add
pop
inc
xor
fs
mov
inc
and
cmpsl
aas
xor
pop
lods
add
out
hlt
inc
ret
push
sbbb
hlt
outsl
inc
sub
icebp
sub
lret
jb
jecxz
cmp
outsl
movsb
add
sbb
nop
cld
add
cmpsb
paddusb
insb
add
mov
mov
mov
out
pop
push
iret
shlb
dec
pop
out
pop
and
inc
sbb
sub
cmpl
add
pop
jae
out
call
ja
arpl
pop
movb
sarb
sub
dec
push
cmp
add
jmp
loop
lea
push
add
cmp
mov
cwtl
xor
add
jns
inc
rclb
add
mov
mov
cld
push
cmp
mov
inc
sbb
lods
pop
lods
incb
ds
add
outsl
add
out
mov
leave
add
push
data16
lea
add
gs
lods
add
scas
repnz
push
adc
add
add
jle
cmp
mov
xchg
push
inc
or
sbb
aam
in
add
dec
jbe
loopne
dec
mov
ret
xor
and
add
insb
clc
sbb
mov
pop
mov
rclb
pop
rorb
fnstcw
dec
sbb
sbb
cltd
ljmp
rolb
mov
js
push
xor
insl
jecxz
in
add
sti
push
add
ret
adc
outsl
push
cmp
xchg
call
sti
int
gs
pop
pop
xchg
cld
loopne
fldl
shrl
rcll
inc
mov
sbb
repz
cmp
arpl
outsb
enter
fwait
test
pop
sbb
fs
push
shr
iret
and
cld
adc
adc
cmc
or
sub
sub
push
add
xor
out
pushf
cmp
das
dec
mov
add
sub
adc
dec
aad
pop
lods
jmp
dec
sub
cmp
or
cmp
push
pop
inc
pushl
or
ffreep
adc
mov
pop
add
arpl
xlat
cltd
inc
dec
lock
add
mov
popf
add
mov
int3
mov
in
adc
in
loopne
cs
mov
cmp
sub
adc
incl
jnp
aad
iret
inc
push
and
jo
repnz
loop
cmp
fnstsw
leave
orb
hlt
add
inc
insl
sbb
dec
dec
and
sbb
scas
mov
mov
or
and
or
add
jp
xchg
cwtl
sbb
aad
adc
pop
in
add
add
fsubs
mov
inc
xchg
add
test
js
mov
pop
cltd
push
bound
xchg
push
xchg
mov
inc
xchg
cmp
sbbb
pop
push
lods
shlb
mov
sub
je
add
jl
or
mov
xchg
enter
mov
xlat
or
xchg
add
scas
push
mov
sbb
add
dec
outsl
cld
ss
cmp
std
mov
add
insb
inc
sub
jae
add
xchg
out
adc
ja
sbb
dec
nopl
leave
loopne
adc
daa
add
adc
add
adc
inc
loope
fs
aaa
inc
cmp
add
xor
lret
int
popl
dec
sub
sbb
add
mov
xor
sbb
pusha
mov
jp
and
loop
push
xchg
je
mov
jl
jns
pusha
fwait
mov
jge
cmpsb
jo
mov
dec
xor
jl
add
xchg
jle
repz
dec
es
ror
jge
add
bound
faddp
mov
cli
ret
add
push
subb
xorb
or
das
sahf
cmp
jmp
cmp
add
enter
test
pop
aas
cmp
add
mov
mov
and
leave
cwtl
repnz
push
sti
sub
dec
shrl
mov
fldl
cmp
loope
mov
dec
hlt
pushf
add
out
lret
adc
les
rolb
add
dec
pop
ret
push
stc
cmpsb
movsl
cwtl
sbb
cmp
incl
mov
jl
pop
xor
add
sub
fcom
cmp
jae
cmp
fwait
add
adc
inc
test
in
and
pop
mov
cli
and
adcb
dec
mov
lcall
mov
shr
add
adc
add
dec
outsb
pop
cmp
ljmp
pshufw
mov
pop
add
ret
pop
repz
out
fisttpl
rclb
jecxz
fsubr
test
mov
loopne
or
add
cmp
loope
aas
std
pop
outsl
insb
sub
push
out
enter
lock
std
add
push
mul
test
fwait
cmpb
js
test
jecxz
dec
cltd
push
xor
pushf
adc
cwtl
ret
loopne
pop
add
xchg
int
sarb
jne
loopne
add
out
xchg
push
add
push
cmc
mov
repnz
jno
or
add
pop
adc
mov
add
adc
or
daa
cli
mov
cmpb
leave
jmp
sbb
or
or
add
mov
jbe
sub
aas
add
jl
jp
loopne
shll
arpl
je
dec
add
mov
sti
xchg
dec
das
test
or
cs
sarb
inc
mov
das
jle
cmpsl
mov
mov
dec
into
cmpsb
push
popf
pop
and
adc
nop
pusha
mov
and
lock
lret
fistpl
lods
les
cmp
sarb
jg
xchg
mov
arpl
add
in
jmp
pop
cmp
xchg
fwait
xchg
adc
mov
adc
or
nop
and
in
das
fcmovnbe
out
incl
repnz
cmp
add
mov
inc
or
test
inc
cmc
mov
push
xchg
xchg
add
jg
mov
int3
cmp
insl
inc
rorb
mov
sbbl
sbb
mov
mov
jmp
sub
push
popf
pusha
rcr
xor
or
xchg
lcall
inc
cwtl
jnp
adc
add
xor
mov
pushf
iret
add
pop
filds
popf
add
sub
int3
add
in
or
adcl
ds
lret
lahf
add
fnsave
shll
aam
mov
and
mov
arpl
add
hlt
and
pop
add
dec
lock
jo
mulb
add
shlb
add
mov
mov
out
mov
int3
repnz
es
les
add
cld
insl
xor
mov
or
and
out
loope
push
lods
repnz
dec
int
rcrb
mov
jle
jb
push
ljmp
leave
mov
fwait
mov
pop
lahf
mov
xchg
or
push
jge
es
mov
mull
ret
adc
and
stos
adc
add
mov
aam
mov
pop
sbb
daa
or
gs
leave
push
adc
imul
loop
sub
xorl
push
xchg
stos
push
rolb
or
add
mov
cmpsl
ss
inc
jo
add
add
and
enter
fstpl
mov
test
push
enter
mov
adc
dec
pop
add
ret
bound
pop
push
shll
add
out
cmpsl
leave
dec
xchg
add
daa
and
mov
push
xchg
add
fwait
cli
mov
add
lods
sbb
jmp
jbe
movb
mov
cli
enter
pop
mov
or
pop
mov
inc
int
pop
and
sbb
cwtl
es
aad
pop
ror
das
int
test
dec
sbb
mov
fildl
rcr
gs
mov
mov
popl
out
push
mov
ja
add
pop
nop
stos
pop
int3
add
mov
rcr
js
xchg
and
fcmovnbe
or
jp
xchg
xchg
lds
int
or
cmpsl
sbb
add
xchg
add
dec
adc
add
in
ds
add
in
shl
mov
sbb
cmp
sub
jmp
ficoms
add
sbb
jo
mov
lahf
sarb
mov
jb
inc
push
cmp
lmsw
sbb
in
mov
loopne
into
ljmp
lcall
in
out
movsb
xor
xor
les
add
or
mov
insb
push
psubusw
fs
aad
add
mov
mov
mov
cmp
or
aam
mov
daa
sub
pop
rcll
pop
cmp
and
add
clc
mov
mov
push
shlb
xor
popa
cmp
push
sbb
xor
inc
dec
xor
fprem
mov
mov
lret
jnp
mov
shl
cwtl
push
gs
add
inc
jl
dec
faddl
aad
pop
xchg
ja
cmp
sbb
inc
jns
sub
jne
pop
sub
dec
push
mov
outsb
jae
insb
push
cld
adc
lds
test
leave
or
add
xchg
add
lea
mov
addb
popf
push
xchg
aam
and
or
fisttpll
popl
movsb
sub
fsubp
mov
push
movsb
add
fstps
mov
lea
aad
or
sbb
les
and
cmpsl
pop
iret
add
imul
in
jg
sbb
mov
add
popl
mov
insl
sbb
ret
push
int
jne
mov
add
cmpsb
ds
jae
daa
push
pop
add
xorb
or
pop
repz
mov
add
mov
data16
xorl
pop
push
sbb
cmp
mov
shlb
cld
bound
pop
cwtl
mov
inc
sbb
add
negl
shl
jge
xlat
cmp
pop
leave
jo
mov
adc
xor
out
inc
roll
sbb
shlb
aad
mov
cmpsb
dec
sbb
ss
call
sbb
push
jbe
add
loopne
xor
cmp
add
rcrl
dec
push
les
add
sub
mov
repz
sarb
dec
pop
push
xchg
add
sbb
adc
and
lret
mov
mov
int3
mov
es
sbb
xorb
repnz
aas
repnz
add
stos
cmp
sub
jle
add
mov
jmp
cmp
dec
and
push
push
out
out
add
push
cmp
add
inc
rcrl
push
jo
mov
pop
leave
push
test
add
and
test
pop
in
cltd
repnz
nop
jno
cmp
push
scas
sbb
in
pop
sbb
inc
add
fcmovne
xor
add
pop
std
xchg
add
mov
loope
sub
je
jl
cmp
add
call
jns
push
lcall
add
cmpsl
sahf
addl
leave
pop
outsb
aad
add
fimull
push
adc
fwait
mov
out
in
add
mov
idivl
or
lret
shlb
add
sbb
loope
cmpsb
add
inc
rorb
cmc
int
fcmovbe
sarb
daa
outsl
aad
push
add
adc
xchg
cmp
or
mov
ja
sbb
aas
mov
daa
pusha
pop
and
dec
pop
inc
cwtl
test
shll
xchg
jne
or
dec
jl
xor
sub
mov
nop
and
add
push
ret
sti
popf
inc
add
add
out
sub
mov
add
jbe
mov
fucomip
insb
xor
lea
mov
add
sub
dec
les
push
mov
xchg
cmp
ficoml
ds
mov
pusha
and
rolb
lea
mov
pop
add
jne
dec
testl
in
in
push
inc
mov
loopne
mov
xchg
nop
aam
dec
and
pop
pop
add
imul
adc
shlb
fadds
inc
gs
inc
xlat
movsb
dec
push
pop
dec
fildl
sbb
add
sbb
xchg
pop
pop
push
pop
in
dec
push
pushf
add
ja
push
arpl
add
or
ret
cmp
js
outsb
ds
fcoml
sarb
add
lods
rol
imul
and
pop
sahf
push
lcall
mov
push
rcr
mov
and
add
arpl
or
pop
ds
add
das
sbbb
pop
nop
jg
clc
cmp
sbbb
out
lea
add
jge
jo
cwtl
sub
movsb
add
push
stc
leave
pop
imul
push
fwait
lcall
aas
add
gs
sub
push
in
dec
loope,pn
jg
jo
out
outsl
jmp
lret
lds
jbe
mov
jge
in
das
and
fidivrs
add
xchg
xchg
push
mov
and
xchg
sbb
dec
sbb
xchg
xchg
or
ffree
loope
mov
xor
je
cmpsl
es
pop
pop
subb
ss
in
outsl
dec
ljmp
mov
add
add
aaa
inc
dec
lods
cmp
add
lock
push
or
pop
lcall
xor
adc
decb
and
dec
jl
or
add
adc
or
movsb
repz
rcrb
popa
lcall
xor
fcmovnu
xchg
sbbb
add
cmp
hlt
pop
jne
fwait
ds
add
repz
repnz
out
jns
cwtl
aam
adcl
cmp
add
cmp
mov
pop
cmp
enter
cmpsb
mov
cmpsl
mov
sar
ror
ret
in
test
fmul
out
inc
adc
add
push
out
mov
add
adcb
lock
int
add
hlt
dec
pop
mov
add
addr16
inc
fnstcw
cwtl
add
ljmp
pop
push
push
pop
aam
stos
jmp
cli
sub
xchg
mov
add
imul
sbb
push
stc
imul
mov
loopne
inc
int3
adc
pop
stos
adc
add
push
dec
outsb
out
pusha
aaa
mov
jae
outsl
and
fwait
bt
dec
dec
or
pop
push
lahf
or
hlt
imul
or
xor
mov
bound
imul
add
dec
sbb
or
cmp
pop
push
ja
mov
pushl
xlat
add
mov
and
push
push
incl
fs
hlt
xorl
jge
in
mov
lods
jg
xchg
add
and
pop
xor
push
sbb
inc
int3
ret
arpl
sbb
adc
mov
inc
and
stc
jl
loopne
sub
add
aam
mov
rorb
pop
clc
pop
adcl
andb
inc
mov
loopne
or
jecxz
add
lret
sbb
pusha
inc
push
mov
add
or
mov
jge
xchg
jns
ja
inc
mov
cli
xor
data16
lods
xor
jne
inc
xor
pop
sbb
add
mov
cli
cmp
add
ljmp
stos
push
push
fimull
and
push
add
adc
sbb
mov
sub
push
movb
pop
jg
sub
add
test
testb
mov
les
rcll
std
mov
jnp
xor
icebp
push
jecxz
jno
jns
mov
pusha
push
nop
mov
push
sbb
or
add
in
sbb
std
nop
fs
add
add
push
loope
adc
pop
add
add
push
dec
cmp
aad
sub
mov
lods
push
jbe
addb
mov
lret
inc
add
nopl
in
add
push
sub
inc
dec
shlb
xor
movsl
add
mov
and
or
out
addl
sbb
mov
enter
dec
scas
call
jecxz
lcall
dec
adc
xor
xor
xchg
fiaddl
ja
adc
addl
xchg
push
dec
fsubs
movsb
je
push
xor
xchg
push
ds
js
xchg
iret
and
cmp
call
mov
lds
cmc
push
add
or
add
xor
jecxz
sub
add
inc
push
xchg
pop
add
test
or
fdivrp
add
push
and
add
xor
lock
push
pop
mov
pop
or
mov
xor
cmp
sbb
test
push
push
mov
adc
mov
add
fadds
add
stc
imul
sbb
ja
add
cmp
out
pop
xor
pop
pushf
and
andb
dec
out
mov
add
dec
xor
insb
sar
push
inc
or
mov
push
cmpsl
in
add
jmp
pop
jmp
xchg
adc
imul
mov
inc
int
inc
adc
add
push
loopne
jle
aad
sti
add
aas
cmp
inc
or
jo
push
sub
mov
add
int3
mov
mov
rol
jne
bswap
fucomip
pop
xchg
roll
add
xchg
into
xchg
std
mov
stc
pop
xor
fcomps
push
stos
xor
add
das
adc
sbb
shll
std
sub
subb
orb
ja
inc
in
add
mov
cld
fidivs
adc
incl
jno,pt
adc
add
gs
mov
out
add
sbb
xor
dec
loopne
sub
add
daa
insl
mov
sub
testl
pushf
and
add
or
pop
imul
xor
cmp
icebp
aam
dec
add
xchg
cmpsl
mov
fbld
addr16
add
cltd
mov
loopne
push
cwtl
rcrl
divl
or
int
xchg
or
enter
xchg
mov
popa
push
inc
adc
incb
or
imul
xor
add
or
pop
push
add
or
dec
inc
sub
stos
insl
es
add
and
mov
xchg
mov
fdivr
pop
jns
ljmp
cwtl
cmp
cli
xor
or
lods
add
or
leave
jns
icebp
loop
xor
repnz
inc
sbb
inc
add
cmc
cmp
push
fisubl
popf
dec
ss
adc
add
test
inc
cmp
push
andb
fiadds
mov
or
sbb
add
mov
inc
adc
ror
and
jo
adc
sub
rorb
sbb
add
xchg
jecxz
or
add
xor
add
outsl
movsb
jo
cmp
or
out
push
and
add
cli
test
pushf
adc
sbb
loop
inc
sbb
test
or
add
out
fdivp
mov
or
imul
ds
jl
outsl
arpl
mov
loopne
fsubs
ds
in
or
xchg
in
add
negb
or
jge
outsb
push
or
lods
sub
andb
xor
scas
icebp
xchg
sbb
add
mov
xor
testb
xlat
and
cmp
pop
add
pop
mov
jo
inc
sub
mov
mov
mov
inc
sub
and
dec
adcb
and
mov
push
out
inc
pop
xchg
mov
int
sub
lahf
mov
push
add
and
xchg
mov
mov
nop
pop
test
dec
inc
cmp
cmp
cmp
out
mov
andb
add
scas
sbb
pusha
add
repz
jo
push
popf
js
add
movl
pusha
lods
push
xor
sub
roll
enter
out
and
jge
imul
lods
dec
pusha
add
jge
fimull
ljmp
xlat
fwait
shl
add
iret
push
jb
push
add
push
inc
sub
in
add
out
inc
adc
jbe
fs
xchg
enter
xchg
out
cltd
lock
or
fidivs
outsb
addl
pop
add
add
out
sti
jnp
push
out
mov
nopl
les
mov
fistpl
jp
addl
mulb
clc
add
push
add
gs
lock
out
lods
inc
lldt
test
ds
stos
mov
push
gs
or
subl
mov
sbb
shlb
xchg
cwtl
push
inc
in
pop
add
fistps
aad
fndisi(8087
sbb
pop
mov
aam
add
sarl
add
roll
sahf
in
rolb
pop
in
add
cmp
sbb
or
and
push
pushf
dec
addb
and
jle
jmp
mov
dec
push
test
add
lret
add
cmp
and
push
hlt
fwait
das
dec
rolb
cmp
mov
xor
xor
add
inc
inc
add
out
add
loop
in
addr16
aas
testb
aad
add
ret
mov
das
xor
add
dec
mov
mov
jo
sub
test
call
mov
mov
add
lret
inc
and
mov
ror
nop
sbb
add
shll
sub
add
add
testl
arpl
mov
adc
add
mov
fdivr
jnp
insl
add
sahf
jno
cltd
mov
and
ja
add
jnp
stos
add
lret
bound
xlat
into
add
ljmp
sti
mov
pop
push
sbb
add
fnstsw
sub
push
mov
std
outsl
pop
pop
cld
adc
adc
jl
add
pushf
fcom
jae
add
add
mov
js
sahf
notb
push
sbb
cs
add
push
testl
lods
inc
push
add
arpl
fcomps
popf
cmp
icebp
sbb
sti
push
sbb
aad
inc
int3
or
into
rcrb
pop
or
incl
lock
data16
add
es
add
shl
dec
sti
mov
or
mov
add
cmp
push
verw
ss
cmp
push
hlt
cwtl
add
mov
lods
test
orl
ja
add
sbb
mov
arpl
dec
sub
out
mov
add
stc
pop
cmp
movb
add
sub
movsb
in
shlb
addr16
cmp
lods
jl
add
fimull
int3
add
jns
gs
or
inc
rorb
iret
jecxz
sbbl
loopne
in
add
ja
lock
xchg
pop
and
mov
sbbb
add
jecxz
sbb
sarb
in
sub
pop
in
addr16
cmpsb
int3
add
movlps
add
cmp
xor
dec
cmp
pop
add
inc
adc
jae
nop
test
fwait
xchg
lods
cmpb
sbb
jg
mov
add
mov
data16
cltd
or
enter
add
push
push
loopne
outsl
mov
or
lods
fstl
cli
add
orb
add
dec
jnp
add
mov
adc
in
push
dec
add
mov
leave
sti
pushf
inc
add
add
ret
add
mov
and
add
int3
sahf
cltd
adcl
pusha
dec
mov
lcall
mov
cli
je
mov
cmpl
and
jl
shl
insl
or
inc
shrb
in
add
mov
in
inc
repz
add
lods
sbb
jo
into
mov
push
dec
push
mov
fsubrp
xchg
lcall
shlb
std
out
int
mov
sub
pop
add
xchg
xchg
popa
xchg
or
sub
lcall
and
sbbb
adc
adc
cmp
scas
out
xchg
dec
add
inc
dec
add
mov
xlat
inc
push
pop
adc
cwtl
inc
pop
js
clc
add
stc
test
addr16
dec
sbbb
inc
in
pop
push
mov
and
and
iret
or
adc
sbb
fs
cwtl
test
aam
mov
insb
xchg
pop
inc
das
popf
adc
adc
pop
fcmovbe
cmp
push
insl
jno
mov
into
insb
push
daa
cld
xchg
jge
add
mov
leave
jnp
or
sub
push
mov
dec
insl
jns
add
jae
in
mov
jl
dec
je
add
xchg
icebp
push
pusha
push
lcall
loopne
pop
fiadds
cltd
push
mov
clc
lea
aas
loope
dec
jp
ja
add
cs
xchg
fimull
enter
add
gs
loope
jbe
in
and
lea
clc
mov
mov
nop
sub
mov
inc
sub
xor
clc
pop
int
add
cli
daa
or
pop
ret
push
or
jns
js
add
scas
test
and
cmpsl
loope
std
in
sarb
push
adc
mov
popa
shll
add
cmc
subb
sbb
inc
push
pop
jo
push
sarb
mov
add
das
loopne
int3
test
adc
stos
and
out
jo
in
lcall
negl
xchg
lock
sub
pop
push
xorb
adc
mov
inc
ds
mov
pop
adc
in
add
dec
sbb
add
fistl
test
sbb
add
mov
inc
mov
add
mov
clc
aas
add
add
add
sahf
adc
pop
call
loop
inc
addb
test
mov
arpl
push
and
add
test
ljmp
mov
ret
bound
and
cli
mov
jecxz
in
xor
or
xor
mov
mov
xchg
addb
nop
out
push
add
jb
shlb
pop
dec
call
in
cld
call
xor
fwait
inc
std
in
mov
add
dec
mov
jno
mov
out
out
pop
mov
add
sbb
add
lods
lds
mov
ret
mov
push
xor
stc
stos
add
jmp
arpl
or
jo
sbb
adc
clc
mov
imul
push
std
jnp
dec
imulb
mov
shlb
ret
jmp
xor
pop
add
addl
ret
int3
mov
pop
dec
cmp
inc
add
adc
int3
pusha
add
or
mov
jns
rolb
inc
xor
dec
adc
stos
and
xchg
add
in
cmc
push
icebp
add
lock
fcomip
add
lcall
pop
jnp
outsl
add
arpl
addr16
cld
push
loopne
in
arpl
mov
arpl
push
mov
add
enter
jns
mov
rolb
pop
mov
jecxz
rcll
outsb
das
mov
xchg
push
mov
stc
popa
arpl
ljmp
test
orb
imul
mov
mov
cmp
jne
mov
lods
xchg
movb
jns
push
jecxz
sbb
shll
add
jne
dec
dec
lahf
jb
add
out
jg
mov
dec
aas
add
cmp
loopne
pop
mov
in
lahf
or
mov
lods
xlat
pop
add
mov
popf
imul
std
mov
add
cltd
gs
push
leave
lcall
jae
mov
mov
jbe
test
add
lods
mov
imul
jo
push
jg
mov
aam
fdivs
add
imull
mov
adc
shl
dec
sbb
and
mov
lock
mov
adc
loope
out
push
pop
imul
daa
or
out
mov
add
inc
xor
gs
cwtl
addl
call
dec
add
or
and
pushf
xchg
and
sbb
insl
inc
imul
add
pop
dec
lods
jns
add
adc
shll
adc
loopne
inc
loop
adc
push
movsb
sbb
mov
sbb
jns
add
mov
mov
add
aad
inc
adc
out
fimull
push
add
arpl
mov
pop
hlt
add
cmpsl
pop
and
jmp
mov
add
leave
jge
test
cld
mov
sbb
adc
cmc
push
mov
push
add
imul
adcl
xchg
jno
or
xchg
or
aam
and
pop
adc
test
std
outsl
clc
add
xchg
xchg
fildl
movsb
dec
jo
jmp
add
mov
adc
pop
sub
cmp
lods
mov
add
in
out
push
mov
sub
push
aam
xor
cmp
in
outsl
mov
add
call
adc
mov
es
jmp
xor
lods
pop
xor
lock
ret
push
mov
inc
xor
pushf
or
test
fadd
xor
xchg
push
pusha
repnz
xlat
andb
jecxz
mov
ds
add
insb
arpl
add
cmp
adc
add
mov
jge
push
dec
dec
or
sbb
ja
push
push
add
cli
int
fcomp
xchg
jns
push
push
fstpl
sub
daa
sbbb
or
cmp
test
add
call
shll
mov
icebp
add
push
divb
push
mov
mov
add
outsl
push
adc
clc
dec
lahf
add
cmp
mov
push
pop
or
mov
cltd
push
pop
lods
hlt
jbe
sahf
nop
add
aaa
push
mov
add
and
adc
ror
pop
push
mov
imul
rclb
fisttps
xor
mov
push
xor
fisubrs
dec
cmpsl
mov
push
sahf
imul
add
stc
sbb
rol
repz
jecxz
lcall
sbb
sbb
out
outsb
pop
into
addb
shlb
pusha
pop
sbb
push
in
nop
je
sti
jo
repz
fisubl
inc
dec
mov
or
cwtl
cmp
loop
jmp
mov
aam
fsts
xchg
xchg
and
jbe
add
scas
add
cmpb
divb
fsubs
leave
hlt
andb
or
adc
lds
sbb
jno
cmpb
sbb
push
dec
jge
and
dec
push
mov
lahf
add
pop
lret
andb
add
stc
icebp
sub
dec
adc
adcl
test
ds
xchg
repz
andb
ret
lea
ljmp
or
and
sbb
jg
add
js
mov
push
adc
xlat
jmp
in
cmpsb
je
sahf
pop
mov
jecxz
jge
pop
sbb
sbb
adc
pop
int
icebp
fdivrs
pop
mov
jb
mov
call
rolb
subb
cmp
pop
inc
clc
pop
add
nop
fisubrl
adc
gs
mov
jbe
sbb
scas
test
add
and
out
jge
cwtl
pop
in
es
fistps
sbb
rclb
sbbb
mull
xor
xbegin
lea
loope
xchg
mov
cwtl
push
ret
add
inc
repz
dec
pop
and
jecxz
subb
push
mov
mov
add
jmp
cmpsb
mov
add
sub
les
or
sub
cld
push
lds
push
xor
add
add
jl
xchg
and
cmp
sub
xor
pusha
andb
pop
aam
hlt
fildl
inc
dec
sbb
sti
pop
iret
push
mov
sbb
fwait
rclb
sahf
out
lahf
push
add
or
dec
inc
insb
add
xor
add
adc
or
sbb
mov
xchg
arpl
mov
cmc
push
add
repz
mov
mov
add
mov
adc
into
lock
clc
jle
adc
mov
or
and
dec
gs
test
dec
enter
jmp
push
aas
fisttps
add
fiadds
jecxz
ret
mov
push
pushf
jg
jne
sbb
fucomp
pop
mov
inc
mov
mov
adc
js
nop
fs
gs
jbe
or
pop
aam
inc
push
jge
js
testb
rorb
add
ret
enter
icebp
cwtl
dec
in
or
lods
add
mov
dec
add
inc
mov
jmp
in
jge
pop
pop
test
mov
sbb
test
iret
jg
add
aad
xchg
stos
outsl
scas
add
sub
hlt
pop
mov
popa
mov
mov
cltd
std
add
or
sbb
shl
pop
xchg
test
shrb
push
add
xor
jg
pop
stc
xchg
xor
add
sbbl
negl
leave
test
xor
or
arpl
add
icebp
dec
and
xchg
dec
jecxz
cmp
jmp
inc
shlb
add
popa
in
xchg
cwtl
decb
add
out
pop
mov
xchg
popf
rolb
adc
jno
enter
lods
sbb
test
sbb
aaa
push
and
push
inc
add
mov
jmp
pop
adc
or
pop
push
push
dec
inc
pusha
pop
loopne
adc
xchg
aas
lcall
pop
mov
cltd
mov
add
shlb
fildll
jo
add
roll
movsb
orps
xor
scas
xchg
imul
adc
pop
dec
lods
leave
sbb
push
jno
or
popa
adc
jo
push
je
xchg
sar
add
imul
pop
inc
adc
mov
sbb
out
push
andb
call
adc
add
jo
rorb
sub
fildl
jp
pop
jg
xor
lods
add
adc
sbb
adc
push
imul
push
imul
and
ret
cltd
adc
repnz
and
ror
add
dec
sub
or
cs
sub
filds
adc
out
jge
inc
sbb
mov
add
movsb
jne
and
roll
aaa
outsb
cmpl
fsts
pop
bound
popf
andl
js
push
jmp
cwtl
and
dec
add
mov
idivb
or
push
lock
mov
or
add
jp
add
shrl
pop
inc
push
push
xchg
push
addl
stos
xchg
aaa
add
sbb
adcb
test
add
lahf
push
dec
ljmp
sti
push
jp
add
notb
in
fldl
sub
or
inc
or
add
cmc
mov
mov
or
adc
mov
lods
fsubp
and
add
sbb
addb
loopne
add
sub
sbb
je
sub
cmpb
xchg
mov
push
shl
aam
fistps
in
inc
add
cmp
mov
jns
les
mov
sbb
xor
ljmp
test
cmp
mov
aad
repz
mov
fdivrl
lods
repnz
add
testb
mov
popw
jmp
hlt
and
mov
jg
or
cmc
mov
or
sub
jae
mov
or
aas
pop
or
call
call
jge
dec
daa
movsb
sbb
cmpsl
xchg
pop
pop
lock
cmovl
cmp
loope
pop
add
ja
loope
sbb
loopne
daa
stc
imul
mov
mov
in
imul
pop
push
dec
jmp
popf
lcall
shrb
inc
icebp
dec
xor
dec
cli
dec
add
loop
cmpsl
xchg
clc
sub
add
pause
or
xchg
dec
add
inc
daa
push
stos
mov
inc
out
sarl
or
popf
sbb
sbb
pop
cvtpi2ps
fldl
push
cltd
and
add
mov
jmp
add
adc
leave
mov
pusha
mov
call
dec
push
and
addb
pop
mov
add
xchg
sarb
dec
les
push
mov
mov
xor
jo
lds
lds
fs
xor
xlat
mov
or
and
add
incb
icebp
cltd
xor
sub
cmpsl
in
rolb
adc
hlt
jmp
js
cmp
sbbl
add
pusha
jo
test
inc
js
out
cli
popa
into
sub
add
stc
or
shll
mov
jo
pop
out
data16
add
in
pop
enter
test
dec
insl
xchg
movsb
test
dec
int
push
hlt
adc
adc
jns
jbe
add
nop
mov
outsb
add
sub
andb
fsubs
mov
add
push
paddq
sbb
sbb
lods
adc
div
jo
in
push
push
sub
xchg
faddl
fsubs
add
adc
push
add
lret
jo
inc
cmp
or
sbb
xchg
leave
div
je
mov
pop
incb
add
mov
popf
fiadds
or
jecxz
lock
push
mov
add
pop
cmp
test
dec
inc
add
sahf
mov
out
imul
pop
mov
or
lds
sti
push
jecxz
add
je
nop
adc
and
dec
repz
jns
sub
test
mov
cmp
jae
cmp
addl
inc
add
mov
xor
and
leave
jbe
mov
mov
xchg
ljmp
add
xchg
arpl
je
mov
clc
push
lds
movsl
ljmp
xchg
lret
pop
movsb
movsb
jo
add
and
add
inc
in
clc
sbbl
add
adc
jo
sub
bound
push
sbb
ss
add
push
jecxz
movl
bound
adc
add
rol
cld
xor
cwtl
jae
nop
out
adc
lret
dec
xchg
movsb
test
sbbb
push
jno
outsl
lret
repz
loop
mov
popl
aas
add
outsl
inc
or
adc
stos
cmp
std
xchg
cmpsb
dec
clc
stos
add
pushl
xchg
mov
aaa
add
dec
icebp
inc
xchg
pusha
cmpl
test
push
or
call
stos
inc
stc
loopne
pop
sub
pop
inc
std
rorl
pop
call
sbb
es
jo
mov
cltd
vmread
adc
sbbb
lock
cmp
mov
jg
test
enter
mov
adc
xchg
mov
fdivl
add
outsb
rcr
arpl
or
je
inc
hlt
adc
mov
push
mov
jge
les
add
or
pop
in
roll
in
jl
pop
mov
mov
ds
cs
adcb
js
lock
xchg
pop
add
test
sub
sbb
sbb
cmp
sbb
jl
pop
push
cli
mov
push
mov
mov
lds
xchg
push
lods
fisubs
cmpsb
and
lds
xchg
xor
jns
mov
rcl
stc
jl
add
push
movsb
es
adc
into
push
jecxz
and
xchg
shlb
push
pop
in
cs
loope
sub
xchg
aad
mov
adc
mov
add
rolb
dec
push
mov
jb
lods
xchg
mov
adc
shr
mov
xor
xchg
xchg
fcompl
xor
jle
or
inc
xor
adc
ja
mov
int
pop
repnz
cli
and
push
sbb
mov
mov
cmpsl
rcrb
mov
aas
add
xchg
lods
jecxz
test
xor
or
pop
in
inc
sub
subb
mov
mov
mov
stos
fsubrl
jo
xor
int3
fs
add
mov
sub
movsb
push
jmp
push
outsb
ja
fwait
add
lock
mov
jmp
push
fildl
push
push
jmp
nop
flds
inc
ret
xchg
sbb
shlb
or
movsb
add
dec
cltd
add
xchg
subb
add
mov
movsb
jg
test
dec
movsl
mov
mov
mov
xor
pusha
leave
lcall
pop
sarl
je
insl
sub
iret
inc
stos
sbb
imul
fld
cmp
ret
jp
ret
clc
mov
add
or
stc
aaa
add
ljmp
dec
repz
test
popf
ja
xchg
cwtl
rorb
aas
insb
shlb
or
inc
sbb
add
mov
add
div
cmp
decb
mov
mov
add
in
jmp
movsl
pusha
sarb
add
nop
add
push
std
adc
pop
inc
and
xor
add
cmp
call
rcrb
xchg
outsl
loope
lret
adc
addr16
push
add
lea
dec
jo,pt
ss
mov
cwtl
lahf
jmp
in
sub
cmp
stos
loopne
push
sub
xor
add
sbb
xor
les
subl
stos
test
sub
push
in
pop
push
pop
lds
cmp
outsb
add
out
rclb
ljmp
push
lock
pop
aam
add
xorl
dec
fildl
mov
lock
dec
mov
ret
adc
jne
xchg
sbb
push
adc
mov
ds
mov
pusha
cmp
add
or
add
xchg
xchg
xlat
into
dec
lret
add
fmulp
jb
loope
add
je
mov
sub
and
mov
xor
adc
in
add
inc
mov
pop
roll
jno
or
fwait
movsb
mov
mov
pop
das
push
inc
push
add
fdivs
add
decb
or
jp
pusha
js
xchg
sbb
js
repz
outsb
jmp
test
and
mov
jns
ffree
repz
sub
add
add
or
insl
inc
sbb
loopne
punpcklbw
outsb
and
or
les
ret
pop
push
mov
push
mov
push
dec
push
out
xor
dec
jnp
or
push
cmp
lret
mov
add
fidivrl
adcb
jns
add
xchg
mov
les
add
icebp
add
cmp
push
je
call
xor
push
cmp
mov
outsb
add
pop
dec
test
cwtl
iret
jmp
adc
pop
cmp
test
dec
shr
rclb
or
test
mov
outsl
arpl
cwtl
popa
jmp
add
mov
or
mov
jbe
cmp
jno
sbb
sub
loope
add
pop
mov
add
inc
dec
aas
sbb
mov
test
fimull
sbb
inc
jns
rolb
mov
sub
sub
ss
gs
add
insl
push
popa
add
and
add
sub
out
inc
and
sub
add
test
pop
xchg
jbe
add
je
cmp
mov
mov
and
orb
sbb
jb
dec
and
xor
mov
and
test
fwait
shlb
pop
fists
xchg
or
mov
lahf
or
cld
js
add
data16
jle
sub
lret
lock
cmp
pushf
push
pusha
mov
xor
mov
incl
push
cli
addl
mov
inc
subl
pusha
dec
inc
jl
jmp
dec
aas
sub
call
jnp
rcrb
mov
shr
jbe
add
push
dec
ud2
loopne
pop
sbb
inc
mov
add
mov
add
or
adc
outsl
andb
out
sbb
cmpb
jle
outsl
or
adc
repnz
fnstenv
inc
arpl
std
outsl
data16
cmp
popa
mull
xorb
mov
dec
popa
add
xor
add
sbb
jb
enter
aas
jo
add
pop
nop
sti
jnp
add
pop
into
xlat
cmp
add
pop
es
mov
nop
mov
push
cs
sbb
cmpsl
test
push
in
mov
or
mov
lds
add
pop
daa
jp
adc
push
xchg
nop
or
rcll
lcall
mov
inc
aas
add
shrb
adc
mov
and
into
jecxz
xor
scas
and
add
or
leave
cmp
lods
shll
fldl
sbb
sub
lock
push
or
push
inc
push
lret
mov
cmp
cmp
cli
repz
idivb
add
outsb
mov
verw
sbb
pop
add
jl
inc
mov
test
gs
add
mov
inc
andb
adc
jo
into
add
jle
xchg
negl
add
ja
dec
push
faddl
add
inc
fcomps
sbb
add
pop
add
insb
ret
aas
push
cmp
jge
add
adc
loopne
mov
xor
mov
pop
add
cld
adc
stos
mov
push
cltd
or
add
push
imul
icebp
or
scas
dec
push
pop
push
shl
add
call
insb
add
push
cmpsb
aam
in
mov
inc
pop
in
pop
lret
mov
pushf
rcll
jle
add
stos
out
sbb
in
aad
xchg
add
negl
shll
movsb
push
mov
sub
push
and
jge
or
fs
and
lods
or
ficomps
inc
fisttpl
scas
cmpb
hlt
adc
rcl
repz
cli
add
and
xchg
add
add
or
jne
push
mov
add
mov
sahf
call
in
movsb
jge
popa
pop
fwait
roll
cmc
insl
fiaddl
les
fstpl
enter
scas
push
mov
add
sbb
jge
mov
sbb
shlb
xor
jb
cltd
pushf
push
push
pusha
dec
inc
faddl
movsl
sub
xchg
sbb
add
rol
push
clc
repz
int
sbb
xor
cmpsl
add
push
ret
rolb
mov
inc
inc
imul
push
add
dec
sbb
fldt
mov
cmp
js
or
je
hlt
mov
push
cmc
int
lahf
inc
jge
sbb
stc
sbb
add
and
fdiv
dec
test
add
add
mov
cmp
adc
jbe
addb
out
mov
sub
adc
ja
jo
adc
cmc
int3
dec
enter
jno
pop
ficoml
gs
adc
and
inc
push
daa
sbb
pusha
add
test
push
mov
in
clc
cmpsl
insb
stos
test
sub
add
fadds
fldl
inc
xchg
movsb
adc
adc
das
aas
jmp
shl
pop
roll
call
jl
add
das
mov
filds
pop
mov
mov
push
repnz
adc
ss
js
scas
cltd
test
add
xor
imul
jl
add
stos
and
cwtl
shl
das
push
jecxz
shrb
pop
sbb
add
adc
test
lahf
leave
lret
xlat
pop
or
add
int
imul
stc
add
lods
adc
sub
or
adc
arpl
and
lcall
dec
sub
ja
dec
ret
fdivs
inc
cmc
xor
cmp
lods
outsb
add
and
sbb
in
aam
cmp
add
fadds
and
ljmp
nop
mov
adc
add
icebp
call
dec
add
inc
pop
adcb
aam
inc
add
cmp
jp
cld
sub
add
xchg
dec
xchg
lcall
rorb
adc
push
scas
add
or
test
cmp
daa
shlb
push
pop
adc
push
ret
icebp
adc
loope
mov
push
sub
adc
or
ret
cmp
xor
loop
testl
jmp
outsb
inc
adc
xor
sbb
lods
lret
sub
cmp
lods
je
and
out
add
sbb
lock
cmp
repz
out
push
aaa
bound
in
cli
loopne
pop
sbb
rolb
fisttps
add
in
xlat
bound
add
push
sbb
dec
dec
xor
jmp
stos
add
inc
cmpsl
gs
inc
mov
mov
jge
ret
incl
cwtl
fwait
xchg
imul
sub
lods
lea
add
xchg
cmpsl
add
inc
lcall
je
call
and
imul
in
cmp
rorb
aam
pop
fldt
orl
pop
dec
push
and
mov
lock
inc
aaa
gs
jle
adc
adc
xor
add
mov
aad
js
movsl
add
mov
stc
jbe
pop
je
aad
lret
xor
sar
jecxz
xor
nop
jl
test
loope
icebp
roll
and
xor
sub
push
clc
add
xchg
add
push
cltd
pop
mov
pop
repnz
xchg
jge
add
jnp
jae
mov
mov
mov
inc
out
pop
std
or
inc
dec
fnsave
sbb
je
js
inc
loope
add
push
and
sti
orl
testl
xchg
mov
mov
sbbb
outsb
pusha
jmp
aam
add
xchg
mov
out
jp
std
xchg
add
mov
aad
clc
jno
in
add
mov
dec
or
pop
sbb
mov
or
pop
jl
shll
mov
stc
cld
mov
add
sub
push
pop
scas
add
rolw
add
jl
add
pushf
mov
rcrb
popf
xor
push
and
imul
bound
push
subb
loope
imul
jo
adc
adc
insl
mov
hlt
add
and
rol
enter
ljmp
movb
ror
xor
add
test
lock
pop
cmp
gs
cli
pop
ljmp
clc
sub
mov
xor
adc
shl
cmp
rolb
and
lret
mov
push
or
loopne
popa
sbb
mov
sbb
mov
pop
add
sub
pusha
ljmp
repnz
ret
jp
push
mov
pop
mov
ljmp
movsl
dec
pusha
stos
arpl
push
mov
test
xor
push
mov
clc
and
cmp
push
jae
inc
cmp
cli
dec
add
lret
aaa
cs
lock
hlt
mov
add
loope
lcall
pop
adc
fdivrs
xchg
aad
aam
dec
cmpsl
leave
and
jp
add
fbld
xor
adc
ljmp
loopne
ret
pusha
cmp
cmp
insb
or
mov
adcl
scas
add
hlt
pop
inc
add
lret
mov
jnp
mov
push
das
push
mov
sub
xor
mov
push
in
insl
loop
out
jge
mov
add
sbb
rclb
ret
add
cwtl
sub
dec
push
xorl
mov
loope
push
nop
jg
loop
or
mov
add
xor
xchg
push
jo
dec
add
inc
outsb
out
dec
or
cs
or
jae
notb
add
cmp
adc
mov
xchg
adc
cmp
pcmpgtb
xor
pop
lahf
loopne
xchg
add
and
mov
add
cmp
push
pop
add
adc
lret
add
xor
mov
mov
jnp
add
movsb
scas
cmp
fcomps
les
add
lods
push
push
andl
or
pop
cld
sahf
out
push
scas
pop
pop
jmp
rorb
dec
rorb
mov
xor
test
jle
push
pop
sub
lods
repnz
add
mov
dec
adc
xchg
in
int3
scas
and
or
sahf
sub
into
add
jnp
pushf
call
mov
xchg
inc
add
aaa
pop
in
mov
add
push
jge
add
jmp
mov
dec
push
cmpsb
adc
add
push
orl
cwtl
scas
add
add
xchg
mov
xchg
pop
jno
aas
frstor
mov
add
pop
and
pop
add
xor
loope
mov
jmp
adc
xchg
xchg
jecxz
dec
pop
add
and
mov
in
movsb
and
add
push
fwait
sbb
dec
inc
and
add
add
lock
sub
pop
mov
mov
push
gs
mov
jo
in
and
fnstenv
dec
push
sub
dec
icebp
rolb
push
or
adc
add
adc
jl
add
test
out
jb
fdivrs
inc
add
mov
add
sti
pop
lret
add
lea
call
orb
scas
mov
shlb
jmp
jae,pt
clc
sub
aam
jg
imul
jnp
add
mov
scas
push
mov
movsb
in
adc
mov
iret
scas
push
mov
arpl
or
push
push
dec
pop
cmp
lds
adc
add
daa
test
adc
add
pushf
cmp
sub
lods
sbb
push
mov
insb
fs
addr16
add
xorl
clc
sbb
sub
insl
sbb
cmp
xchg
jmp
jle
jg
cmp
inc
xchg
out
or
loope
xchg
sar
rcrb
adc
add
sbb
jp
inc
cmp
xchg
or
mov
rsqrtps
xchg
repz
mov
inc
lock
repnz
ds
add
mov
movnti
jg
inc
call
sub
out
orl
fildl
xor
mov
lcall
jge
adc
leave
enter
xor
mov
mov
mov
outsb
add
cmc
aam
add
mov
ljmp
mov
xchg
xlat
inc
jbe
add
aad
ficomps
add
or
mov
cmp
xor
mov
sbb
jbe
pop
les
push
dec
pop
rol
or
sbb
sub
bound
add
negl
add
lea
ja
add
faddl
outsb
nop
add
rorl
lods
pusha
mov
call
addb
pop
xor
aad
cli
dec
mov
jg
int
xchg
xor
push
pop
test
mov
inc
push
dec
jbe
jne
lock
xor
mov
cmp
rclb
sbb
loop
std
inc
iret
adc
inc
ficoml
out
jbe
jo
adc
or
sbb
and
fs
adc
insl
ret
sub
add
stc
pushf
fmuls
insb
in
sbb
push
push
push
out
pop
inc
cmp
xchg
dec
xor
mov
lret
cmp
xchg
adc
repnz
add
aad
dec
repnz
add
pop
mov
sbb
dec
pusha
mov
jp
sar
icebp
xchg
lock
shll
mov
int3
mov
shlb
lea
test
cli
mov
mov
add
popf
add
jg
bound
repz
pop
mov
cs
andl
sub
mov
lods
aam
pop
xchg
push
icebp
jbe
iret
mov
into
add
cmp
jmp
out
push
arpl
pushf
push
and
and
inc
mov
call
or
add
cltd
add
push
das
aas
push
inc
pop
mov
jp
lock
push
test
aaa
add
sti
outsl
aas
push
xchg
lods
fiaddl
cmpsb
sbb
lods
test
fisttpll
mov
loop
add
adc
or
jne
jmp
push
jge
mov
cmp
and
popf
daa
or
out
add
push
mov
stos
mov
push
loopne
sbb
int3
dec
outsl
push
popf
add
scas
loop
mov
loopne
sub
shrb
pop
pop
aad
add
add
pop
xchg
outsb
subl
pop
pop
iret
sbb
adcb
outsl
jmp
aaa
xor
pusha
cmpsb
fldt
outsw
sub
dec
iret
inc
and
and
mov
popf
sub
and
test
cmp
xchg
js
and
and
adc
or
adc
adc
subl
sub
shrb
xor
mov
in
push
push
add
popf
lods
add
push
out
je
jno
cmc
dec
add
leave
and
dec
ds
sti
cli
jmp
add
xchg
add
movsl
ret
dec
ja
add
sbb
pop
mov
shlb
dec
imul
fiadds
mov
pop
pusha
cld
or
add
jp
add
movsb
fstpl
xor
cmc
stc
test
adc
add
adc
les
and
sbb
mov
bound
in
xchg
outsl
cmp
lods
out
push
add
dec
std
mov
add
cld
mov
scas
jne
mov
sbb
repnz
into
outsl
shll
dec
add
xor
cld
jnp
hlt
data16
nop
fs
shlb
push
xorb
sub
add
pop
add
adc
xchg
sbbb
test
inc
lods
adcb
mov
xchg
outsl
icebp
jl
lret
in
add
ljmp
add
loop
lret
repz
mov
sbb
xchg
jae
mov
fdivp
das
pop
js
nop
mov
dec
lods
add
pop
xor
jg
stos
nop
faddl
adc
int3
xlat
nop
sub
icebp
add
repnz
dec
or
add
and
stos
cld
repz
mov
dec
mov
and
add
les
add
xlat
xor
pop
mov
nop
dec
pop
in
or
mov
lret
adcb
mov
rorb
aad
lea
or
adc
shlb
int3
mov
dec
jb
rcrb
arpl
jmp
insl
sti
mov
add
sahf
test
adc
sbb
inc
pop
dec
and
sti
add
mov
fmul
adc
cli
sub
xchg
cmp
lcall
and
cld
adc
push
push
push
jbe
xchg
cmp
and
jnp
mov
stos
inc
sbb
and
mov
add
push
clc
xor
test
jns
push
rolb
cmp
mov
add
cs
add
xor
inc
pop
addr16
dec
adc
testl
or
hlt
jae
nop
mov
sbb
loopne
movl
pop
bnd
push
push
mov
faddl
out
cmp
or
cmc
sbb
add
lea
sbb
cmpl
popf
sbb
sub
or
sbb
push
mov
jno
or
adc
inc
sub
inc
push
movsb
subb
add
mov
daa
xchg
gs
jbe
dec
imull
inc
sbb
lock
mov
cli
adc
xor
and
ret
fmuls
push
lods
loopne
and
adc
aas
or
and
add
xor
cmp
out
popf
roll
or
test
imul
fimuls
add
and
mov
jne
add
push
add
dec
push
out
or
sbb
nop
cld
addb
roll
flds
aaa
loope
mov
or
fbld
xor
in
dec
stos
pop
call
xchg
adc
pop
or
or
in
mov
subb
dec
cwtl
fdiv
and
mov
sarb
xor
in
xchg
mov
add
shr
shll
mov
dec
or
pxor
add
xor
add
sahf
pop
pop
divb
sub
fcomps
imul
mov
inc
xchg
orb
popf
or
sbb
rcl
idivb
or
add
jp
pushf
sbb
scas
mov
movl
xchg
add
jp
mov
xor
in
adc
adc
pusha
mov
sbb
rcrl
push
sahf
sbb
ds
add
hlt
popa
mov
in
and
lods
pop
ret
imul
fs
xor
mov
cmp
cmpsb
fdivp
add
jae
xchg
test
push
xchg
sub
cld
addl
or
mov
adc
add
cld
mov
imul
mov
jp
push
dec
in
inc
arpl
dec
add
pop
rcrb
jmp
mov
iret
cwtl
cli
add
roll
fisubrs
js
stc
add
stos
nop
sub
mov
add
push
addr16
rcrl
add
imul
notb
mov
es
shll
insl
pusha
mov
cmp
xorb
imul
shlb
jge
dec
xchg
dec
xchg
add
mov
rol
das
jo
add
sub
mov
inc
ljmp
add
int
clc
insl
outsl
add
iret
pop
out
add
pop
call
sbbl
filds
outsb
hlt
in
push
jge
or
enter
out
add
iret
lret
dec
jno
out
clc
jecxz
sbb
mov
pop
add
jae
inc
sub
movsl
xchg
add
outsl
insb
mov
mov
leave
jbe
inc
jns
dec
push
inc
iret
je
xchg
add
nop
xchg
clc
dec
outsb
pop
add
and
mov
xchg
cmp
imul
pop
add
ret
push
incb
in
cmp
mov
dec
or
xchg
jbe
xchg
pop
adc
pop
push
sub
mov
add
pop
jo
pop
mov
in
pop
push
add
adc
lahf
mov
sub
lret
dec
xchg
scas
push
or
pushf
jp
movsb
mov
cs
pop
jmp
fld
call
sub
loopne
out
insl
cld
std
jg
or
cli
popf
or
or
inc
pop
cmpsl
mov
lods
std
xor
rolb
or
je
mov
mov
sti
fsubrp
sarb
mov
adc
dec
pop
push
out
inc
mov
xorb
pop
sahf
std
or
xor
sar
cmp
push
adc
pop
adc
call
call
jp
jmp
add
lahf
mov
es
clc
and
dec
loopne
loopne
sbb
ljmp
push
jmp
int3
push
add
enter
jecxz
imul
push
jmp
outsl
and
mov
out
fstl
daa
inc
int
and
inc
mov
cwtl
adcb
xchg
cmp
mov
add
xor
mov
adc
jne
add
notb
jmp
dec
pop
nop
add
outsl
adc
jl
cltd
adc
or
cld
pop
add
aad
js
cs
roll
mov
enter
inc
rolb
dec
xchg
sti
fiaddl
add
add
xor
loop
rcll
cmc
out
aam
sbb
cmp
push
sub
add
mov
cmc
loope
nop
cmp
dec
and
mov
jns
cmp
cmp
aad
cmc
dec
adc
xlat
pop
and
test
adc
out
add
pop
mov
imul
je
xorb
aad
pushf
sub
iret
ss
push
sbb
xchg
add
loopne
rcrb
loop
rcl
lcall
nop
jo
add
push
in
add
add
sbb
add
flds
int
push
sub
inc
ret
cmp
lcall
jb
out
jmp
fs
dec
jae
add
scas
repnz
or
mov
es
sub
test
lret
mov
sbb
mov
push
incl
mov
inc
jecxz
jo
add
test
test
sub
aad
dec
pop
aas
shrb
jbe
add
test
add
mov
jmp
jo
out
mov
add
mov
movsl
lret
mull
nop
push
in
dec
lods
hlt
add
pop
jp
xchg
dec
addr16
pop
mov
aas
mov
mov
and
gs
xor
add
pusha
addl
rolb
pop
ret
out
in
sub
imul
add
fimull
sbb
or
adc
mov
pop
inc
jne
rcrb
int3
movb
imul
aas
int
xorl
push
add
shl
push
arpl
sbb
enter
xchg
mov
mov
pop
imul
or
jp
lret
xchg
jmp
cmp
add
dec
ret
pop
out
cmp
jns
rclb
sbb
and
outsb
pop
jne,pn
add
imul
imul
pushf
lock
or
jecxz,pn
cmp
loopne
cli
mov
jae
add
mov
sub
sbb
lret
cwtl
dec
add
sub
xor
movsb
jle
add
test
mov
stos
jmp
add
jae
bound
shrb
into
cmp
xorb
ljmp
sbb
add
popf
dec
xor
mov
testb
mov
sub
add
shl
mov
test
pop
xchg
sub
add
dec
out
xor
stos
mov
jnp
and
mov
pop
dec
iret
imul
clc
orb
and
flds
push
jno
dec
popa
rorb
adc
loopne
test
fsubs
lods
cwtl
scas
push
sbbb
add
cmp
dec
fs
add
jne
es
jno
daa
lcall
pop
and
add
or
aas
sarb
nop
xchg
cmp
sti
sbb
jae
and
adc
or
in
ljmp
aaa
add
jmp
sahf
add
rcll
lods
add
aas
dec
adc
xchg
dec
inc
das
add
lret
shrb
clc
jmp
pop
jge
and
insl
pushf
add
inc
cltd
lock
fs
xor
and
pop
add
mov
das
push
xor
jmp
push
arpl
adc
jecxz
enter
xchg
adc
enter
xor
add
jne
pop
hlt
push
sub
add
pop
add
jecxz
les
cmp
inc
lcall
jnp
dec
sbb
push
inc
inc
imul
add
push
mov
inc
test
or
mov
pop
hlt
adcl
cmpsl
cltd
add
adc
arpl
leave
cmp
or
jg
insl
mov
nop
shll
in
push
ljmp
cltd
dec
ret
stos
xor
xor
or
pop
lods
add
mov
cmpb
lahf
loopne
aam
push
or
and
dec
shlb
cld
testb
sub
sbb
dec
push
inc
out
rorl
adc
rorb
jmp
lock
xchg
es
or
or
sub
in
test
xor
xchg
test
add
push
push
leave
std
jns
sbb
jg
sub
push
push
sub
cmp
mov
ja
jb
push
mov
jmp
and
push
cmpb
push
push
dec
shl
xor
dec
gs
ret
pop
add
cltd
sub
int
ljmp
xor
pusha
push
movsb
cltd
rolb
xchg
pop
es
rolb
lret
imul
hlt
stos
add
xchg
imul
or
loopne
add
test
dec
or
cmpl
gs
mov
add
add
pusha
jae
add
mov
sbb
mov
add
inc
lods
adc
int
push
test
sbb
or
or
sub
das
xor
xchg
and
test
dec
popf
add
nop
in
repz
and
pop
inc
sahf
sub
or
push
jp
xchg
add
int3
jge
into
arpl
lds
pop
xchg
or
jno
lea
out
int3
mov
push
fisttpll
and
ljmp
int
cmp
push
movsb
popa
fbld
aaa
fldl
not
push
inc
add
insb
dec
xchg
aad
mov
cwtl
jo
cmpsl
in
adc
ret
push
pop
add
mov
lock
add
mov
mulb
inc
ljmp
or
push
insl
add
mov
jnp
xor
lret
fisubrs
cs
fstps
mov
repz
push
xlat
or
out
xchg
cmp
mov
bound
cli
add
stos
aaa
mov
jae
cmp
sahf
shr
arpl
xchg
fldcw
subl
mov
or
xor
cwtl
andl
pop
arpl
shlb
shll
lds
jmp
neg
dec
cli
cmp
ret
mov
mov
jl
scas
xchg
lea
popa
jge
xlat
add
imul
pop
add
test
push
jae
jnp
adc
std
and
popa
cmp
dec
test
and
rclb
dec
fldl
enter
or
mov
div
jb
testb
bound
adc
sub
push
movsl
add
outsl
nop
outsb
int
fcomps
cltd
test
cmovno
add
lods
stos
jge
add
and
lds
hlt
test
or
and
mov
or
push
adc
loop
add
movsb
cld
xchg
dec
jmp
inc
int
pop
sbb
clc
push
adc
cmpsl
dec
xor
pop
clc
cs
jnp
movsl
add
ret
lea
jecxz
push
or
and
in
add
push
rcl
cltd
pop
add
xor
xor
push
push
fcomp
jbe
test
add
dec
cmp
cmp
or
cmp
repz
sub
fs
scas
shr
sub
pop
loopne
xor
fdivl
pop
sub
test
cmpsl
xorb
add
jo
add
mov
fisttps
mov
cmpsb
mov
adc
or
add
rorb
xor
ret
test
arpl
adc
fdivl
add
mov
pusha
int3
sarb
jae
push
xor
xor
lea
dec
sub
aaa
dec
ficoms
dec
imul
cld
jbe
shlb
push
dec
sbbb
bound
addb
sbb
es
dec
mov
movsb
shll
xor
adc
push
pop
pop
cmpsl
jb
lock
fildl
dec
mov
jecxz
inc
inc
mov
test
pop
push
pop
data16
bnd
mov
add
loopne
cmp
clc
repz
out
inc
insb
sbb
pop
jno
xchg
add
inc
rolb
push
add
jp
outsb
std
mov
dec
sub
add
imul
aam
push
adcb
add
mov
es
jae
sub
jge
subb
or
movsl
mov
stos
xor
add
out
and
popf
scas
das
icebp
or
sub
sbb
fidivrl
inc
icebp
mov
adc
pop
mov
mov
add
xchg
cmp
stc
cmp
dec
andl
jl
pop
mov
and
mov
repnz
imul
aas
cmp
cmp
pusha
and
lock
dec
adc
add
mov
mov
sti
test
addr16
cs
icebp
add
adc
ljmp
or
outsb
nop
inc
adc
pop
lods
pushf
or
call
add
adc
pop
inc
sbb
add
leave
pop
push
xlat
and
or
ret
or
dec
lock
push
adc
cmp
and
aad
or
sarb
es
add
cmp
xlat
mov
mov
sub
sbb
dec
pop
add
or
fxsave
push
bound
add
push
int3
aas
push
xor
add
push
cs
adc
int
loopne
xorb
jo
add
adc
and
stos
test
xchg
mov
ret
jg
xor
out
add
sbb
dec
mov
add
inc
rol
bound
add
mov
mov
dec
jo
cmc
sbb
push
clc
movsb
scas
add
out
test
add
or
insl
adc
faddl
add
jecxz
xchg
push
insl
mov
jae
adc
xorb
xor
outsl
aam
dec
pop
lcall
stos
adc
out
adc
mov
jge
mov
xchg
mov
and
es
js
mov
andl
sub
je
fcoms
add
lahf
sarb
cmp
inc
ret
insb
adc
cmp
adc
in
xor
nop
push
or
jmp
mov
js
add
arpl
dec
or
test
pop
adc
mov
sbb
add
dec
sbb
scas
scas
xchg
pop
mov
add
add
fnstcw
pop
les
push
rcrb
sub
rolb
and
in
mov
jl
jb
cmp
and
ss
outsb
pop
loope
cwtl
cwtl
pop
or
fdivs
inc
and
xchg
sbb
inc
ljmp
dec
or
inc
shl
fwait
mov
mov
inc
in
out
aad
xor
sbb
inc
jp
inc
cmc
mov
les
or
mov
cmp
negl
and
imul
xchg
shrl
xchg
xor
jge
lock
sub
push
cltd
lods
mov
pop
adc
test
push
inc
fildll
fwait
daa
in
mov
enter
hlt
dec
nop
add
lea
daa
loopne
add
fisubrs
loopne
sbb
xchg
add
dec
call
push
dec
push
jg
xor
add
out
aam
jb
sbb
jno
ret
jnp
ret
daa
fdivs
inc
addr16
cltd
mov
adc
add
fisubl
sub
loop
clc
cmovp
mov
add
cmp
add
cmp
jae
jns
mov
inc
add
gs
or
or
lret
testb
fldl
mov
icebp
out
hlt
filds
add
add
movsl
lret
pop
xor
adcb
push
cmp
repz
fldcw
scas
push
xchg
add
test
popf
mov
push
mov
inc
push
push
or
or
mov
mov
lret
cmp
sbb
in
into
pop
pusha
xchg
aas
inc
or
add
test
addb
cltd
aad
shrb
add
jns
mov
ret
jmp
test
in
frstor
mov
dec
mov
testb
jnp
xor
imul
push
sub
hlt
mov
test
add
mov
enter
sub
mov
xchg
add
pop
fbld
jae
sti
pop
lods
sbb
out
scas
lret
add
in
mov
insb
imul
add
fcomi
roll
xor
loopne
fs
add
xchg
movl
clc
sub
push
rcl
sub
sbb
outsl
mov
call
sti
mov
mov
pop
sub
sub
add
mov
rclb
push
pusha
push
jge
xchg
sahf
into
push
push
hlt
jns
insb
dec
add
shlb
push
cmp
mov
adc
testl
mov
sub
inc
add
rclb
xchg
jo
jne
jno
add
addr16
mov
hlt
add
loop
or
push
test
mov
xor
add
pop
in
mov
into
push
add
psubsw
sub
ljmp
push
sbb
lods
inc
pop
cmp
mov
mov
stc
pop
or
sbb
sbb
push
popa
pop
add
push
mov
ficoms
repnz
adc
lret
inc
rcl
inc
jmp
cmpsl
pop
and
in
mov
dec
sbb
test
fwait
add
sub
jbe
xchg
into
jg
test
repz
leave
call
out
sbb
cmp
enter
pusha
mov
cld
mov
inc
and
lea
pop
outsb
mov
mov
add
cmp
push
aaa
xor
jg
cmp
jmp
push
jae
test
ja
push
or
xor
sub
mov
andb
in
add
int
and
jg
fs
lock
filds
adc
out
rcr
popa
mov
movsb
fsub
mov
nop
push
fidivrs
outsb
loop
pop
add
enter
lds
pop
xor
add
imul
add
xchg
sub
into
aas
mov
jge
stos
loop
jbe
sub
fcompl
call
dec
pop
outsb
sub
imul
repz
fstpl
cwtl
xchg
aam
inc
sbb
add
fisubs
adc
call
and
aad
js
xchg
rorb
es
xor
sbb
inc
and
leave
add
mov
xchg
and
pop
mov
mov
push
insb
test
hlt
adcb
std
xchg
push
jg
mov
add
aad
sbb
pop
lods
cmp
out
jne
andb
add
mov
pop
cmp
cmpsl
push
movsb
xor
and
nop
test
nop
cmp
pop
mov
sbb
mov
and
add
adc
xchg
mov
fiaddl
gs
mov
cmp
test
mov
test
imul
mov
push
negl
pusha
scas
add
lods
and
dec
add
inc
mov
or
push
aas
subb
xchg
fwait
subl
pop
sahf
lods
xor
jg
cmp
jb
lahf
pop
sti
add
bound
imul
add
in
push
ljmp
dec
inc
outsl
pop
cmp
sbb
shll
iret
or
dec
add
mov
aam
mov
cmpsb
out
dec
cmp
jne
add
mov
lock
mov
mov
fs
dec
xor
lret
mov
shl
jg
scas
add
cmpsl
and
arpl
add
das
out
sarl
mov
push
addr16
jno
loopne
in
add
dec
adc
cmp
mov
nop
inc
mov
aas
sub
mov
das
rolb
pop
pop
inc
adc
std
dec
cmpsb
add
inc
mull
xchg
dec
test
push
or
out
add
scas
sbb
adc
and
shlb
push
push
enter
cmp
sbb
rcrl
jle
add
mov
pop
add
and
hlt
leave
add
cmp
mov
or
data16
mov
cmp
hlt
cmpsb
shr
scas
pop
cmp
test
inc
add
pop
shlb
jnp
add
cmp
push
pusha
rcrb
add
jbe
mov
add
push
cmpsb
into
xchg
repnz
add
pop
imul
dec
int
add
pushw
cmp
mov
call
rorb
add
mov
and
test
push
gs
add
pusha
out
adc
es
jg
mov
mov
and
leave
or
mov
jo
imul
add
add
loop
pop
xor
rcr
xor
out
push
hlt
xchg
add
xchg
pop
gs
loopne
dec
decb
sarb
test
addr16
xchg
enter
jbe
sub
or
push
aas
les
add
sub
test
mov
dec
xchg
cld
or
sahf
mov
stos
popf
inc
jmp
mov
jp
testb
in
test
ja
add
push
mov
das
mov
mov
pop
loope
xchg
and
and
pop
jmp
adc
and
loop
cwtl
mov
jne
mov
cmp
lret
adc
jl
sbb
ljmp
add
ret
jbe
add
int3
xor
add
movsb
inc
pop
add
or
pop
push
adc
mov
pop
xchg
sbb
jmp
add
jnp
or
and
outsl
jns
add
cmp
mov
test
clc
add
repz
std
dec
test
lock
or
mov
pop
add
imul
out
pop
and
cld
sbb
push
js
mov
sti
add
jp
mov
rorl
subb
mov
mov
je
xor
or
push
subb
sarl
pusha
inc
lock
out
push
popa
ret
call
mov
enter
shll
jge
imul
xor
adcl
cld
add
push
xlat
enter
sbb
jle
dec
stc
sub
imul
push
stos
add
ds
mov
lret
sub
adc
test
mov
in
push
sbbl
repnz
addr16
or
inc
les
xor
add
fcomps
enter
add
adc
xchg
cmp
dec
test
mov
xor
sub
dec
fneni(8087
add
push
adc
pop
jecxz
lcall
add
cld
nop
mov
into
add
ja
or
insl
cmp
rcl
jno
nop
jle
mov
sbb
mov
adc
stos
scas
jno
mov
push
iret
mov
cmpsl
ficoml
or
loop,pt
roll
in
jb
jb
add
jg
aad
xchg
mov
fdiv
add
and
push
aas
mov
cli
push
jne
outsl
or
add
pop
jecxz
inc
out
pop
add
inc
sub
nop
int3
or
adc
dec
jae
sbb
cmp
insb
lea
jmp
icebp
dec
add
dec
lcall
js
fnsave
xor
fdivl
lahf
push
inc
and
mov
dec
pop
sbb
dec
ret
lock
shr
jb
jg
add
mul
lods
pop
shrb
enter
adc
jo
fwait
add
out
and
add
push
stos
clc
adcl
subb
in
add
push
jecxz
push
fsts
or
push
sub
add
add
lcall
fwait
test
add
shl
and
fisubl
sbb
sbb
scas
dec
add
and
clc
popf
sbb
enter
push
imul
dec
lahf
enter
out
push
ret
mov
in
out
pop
test
sarb
in
movsl
inc
ljmp
sub
mov
jns
jg
push
add
or
add
bswap
je
xchg
push
add
and
rorb
in
inc
into
add
cld
dec
add
add
cli
repnz
add
xor
mov
xor
add
sbb
or
iret
add
mov
jge
push
inc
mul
outsl
pop
pop
mov
mov
test
je
iret
adc
dec
jl
add
xchg
push
sahf
nop
jbe
add
aam
xor
dec
pop
stos
add
inc
xchg
iret
leave
add
loop
add
inc
bound
sbb
scas
hlt
hlt
or
add
xorl
adc
test
loopne,pt
fsubrl
inc
sar
leave
sub
ret
mov
inc
xchg
push
mov
cmpsb
mov
sbb
inc
add
lock
or
popa
push
lods
in
mov
push
jns
sar
add
adcb
adc
sub
and
inc
rcrb
fs
and
mov
jle
test
mov
test
adc
subb
andl
and
adc
and
mov
hlt
inc
jge
es
push
pop
jle
out
lods
shl
cwtl
loope
add
repz
popf
ficoms
lret
jae
adc
in
add
and
fcoml
pop
out
push
add
push
cmp
cltd
scas
xor
add
sbb
jecxz
lods
cmpl
add
jns
add
add
mov
mov
rcll
add
fmul
inc
aaa
mov
add
mov
cli
cmpl
cmp
add
inc
mov
psubb
mov
push
jecxz
repz
les
lcall
cmp
sbb
mov
xor
clc
push
popf
pop
test
xor
push
add
notb
sub
sbb
rclb
xchg
add
fadds
xchg
pop
sub
adc
lcall
inc
add
out
sub
dec
mov
out
and
fwait
jns
bnd
pushfw
cmp
movsl
mov
mov
and
jo
in
fnstcw
subl
icebp
mov
mov
or
lods
push
aad
sbb
push
nop
int3
and
loopne
sub
inc
dec
dec
or
push
ss
leave
pusha
pop
xchg
js
jge
sub
and
psraw
jl
xchg
mov
mov
pop
jae
xor
nop
jbe
inc
xchg
dec
jne
lcall
xchg
sub
mov
xchg
movsb
mov
jnp
sahf
add
cli
or
mov
cmp
jmp
sub
cltd
jno
add
ja
xchg
cmp
test
ret
xor
inc
pop
mov
fmuls
fidivs
jg
ljmp
pusha
scas
inc
mov
sub
sti
and
mov
xchg
adc
xchg
sub
add
jecxz
mov
xor
jo
xor
cmpsl
push
cmp
scas
ljmp
add
sub
movsl
js
sub
flds
adc
fimull
daa
jb
add
lidtl
xorb
add
lcall
add
lea
inc
std
mov
push
or
cmc
push
dec
sub
cwtl
ret
cltd
fiaddl
xor
imul
mov
mov
cmp
add
pop
pop
dec
aam
push
fmul
push
add
add
jge
imul
in
add
mov
sbb
pop
flds
js
cwtl
mov
push
and
mov
aad
fdivrl
pop
adc
add
mov
repnz
sbb
pop
or
clc
mov
xchg
add
daa
add
add
adc
add
je
mov
das
loope
adcb
ss
add
lock
dec
jb
js
and
push
xor
add
push
popa
mov
sbb
mov
adc
push
enter
pop
cld
scas
mov
xlat
inc
add
sub
test
add
cmpb
outsb
xchg
movsl
je
mov
xchg
mov
add
mov
or
push
inc
push
add
add
shrb
out
add
mov
mov
cmp
leave
add
pusha
push
xor
xor
add
lret
imul
push
subb
sub
call
insl
pop
mov
test
sti
sbb
mov
add
add
pop
inc
inc
jae
add
dec
xchg
sbb
add
mov
add
push
dec
push
imul
cltd
test
icebp
add
out
cld
scas
or
jo
push
in
mov
call
mov
push
sub
je
loopne
add
inc
subb
clflush
sub
xor
jbe
add
std
push
pusha
push
or
lcall
xor
call
fisttpl
lds
arpl
cmp
sahf
xor
outsb
enter
sbb
out
add
arpl
cs
adc
iret
add
mov
xor
ror
adc
es
test
jb
jbe
in
add
inc
xlat
cltd
jmp
test
addr16
jmp
lock
lds
lds
stos
mov
xor
js
dec
roll
pusha
out
ja
aas
jno
scas
mov
sub
pushf
lret
test
jns
sbb
push
test
pop
aad
mov
stc
sbb
add
push
pusha
shlb
and
xchg
js
cmp
mov
js
andb
mov
push
scas
lahf
rol
jp
add
fcomps
mov
ja
inc
in
xchg
arpl
xchg
sarl
popf
mov
adc
jnp
mov
sub
pop
out
mov
in
or
adc
dec
add
adc
adc
jnp
pop
xor
jb
add
jg
dec
add
lahf
fldl
jno
add
push
out
bound
pop
lock
mov
inc
nop
cld
mov
xchg
add
cmpsl
fcomps
cmp
cwtl
push
xor
sub
ss
jns
movb
add
pop
divl
repnz
inc
call
push
bound
rcrb
mov
and
fcoms
add
add
pop
lret
sbb
repz
inc
call
outsb
clc
int
leave
add
add
add
sbb
adc
jmp
add
sahf
movsb
out
in
rcr
shr
jecxz
pusha
jo
ja
mov
insb
aaa
sahf
hlt
in
nop
iret
add
cmp
imul
test
loope
add
mov
mov
jecxz
sbb
lret
movsl
iret
in
into
cmc
movsb
mov
scas
xchg
mov
add
negb
or
or
jmp
push
cli
add
aas
and
das
or
jg
ja
or
fdivr
dec
int3
dec
pop
add
pusha
in
sbb
add
cmovle
imul
fwait
loopne
push
add
nop
pop
test
jo
rclb
mov
sub
rol
in
add
pop
fs
adc
add
int
lret
stos
add
jle
jge
sbb
dec
std
add
add
into
ljmp
incl
scas
lret
inc
pusha
add
push
insl
gs
int
add
jb
pusha
iret
jecxz
xor
fcoms
xor
xchg
loopne
icebp
loop
xlat
push
or
mov
ljmp
dec
sub
lcall
int
orl
mov
out
mov
stos
pop
and
test
dec
cwtl
add
bound
add
les
loopne
or
push
push
imul
lret
adc
rcll
rorl
cwtl
loop
or
repnz
js
in
sub
sub
cmp
adc
adc
mov
sbb
test
add
addr16
cwtl
inc
int3
lcall
or
scas
add
xor
xchg
testl
imul
cld
lahf
or
mov
mov
cmp
orb
lret
shl
pop
mov
or
add
pop
nop
cmpsb
pop
pop
jo
ret
bound
dec
add
aaa
fwait
mov
mov
add
gs
mov
stos
loope
cwtl
sbb
push
popa
pop
push
lock
add
bswap
rorb
bound
adc
sbb
inc
add
push
dec
mov
dec
sbb
aaa
cwtl
scas
cs
jne
cmpb
add
sub
shl
pusha
sbb
mov
notb
inc
dec
mov
out
xchg
adc
add
fs
cmp
punpckldq
xor
xchg
jnp
sbb
add
lret
dec
lods
in
les
dec
icebp
xor
pusha
outsb
loop
mov
mov
add
mov
es
add
cmp
push
add
or
out
jns
testl
add
mov
or
push
loope
add
or
push
ret
mov
pop
fs
ret
shlb
pop
jne
lods
stos
cli
clc
inc
sub
add
add
dec
ja
xchg
add
pop
mov
pop
setle
jbe
mov
and
outsl
push
cwtl
je
data16
add
bound
ljmp
faddl
pop
add
test
add
xlat
xchg
dec
pop
fisttpl
pushf
add
das
cmp
push
or
and
cmp
pushf
sub
sbb
bound
add
sarl
mov
and
pusha
pop
out
add
jg
aaa
mov
pop
testb
cwtl
mov
add
xchg
repnz
stos
nop
inc
add
daa
inc
loop
and
shl
sbb
sarl
addb
push
sahf
mov
push
and
test
jg
add
into
push
xchg
or
clc
xchg
add
fbld
clc
xor
sub
dec
adcb
add
cmp
sbb
ret
pop
outsl
mov
insl
add
pop
push
and
fs
or
fsts
andb
stc
arpl
push
push
add
hlt
imul
cmp
stc
stos
xchg
and
cmp
add
or
pusha
ret
dec
push
lret
mov
pop
aas
inc
sti
push
mov
or
sbb
cs
or
fcomps
add
xchg
push
pushf
popf
shl
xor
mov
jae
mov
mov
or
lds
cli
jb
add
sub
pop
cltd
mov
dec
jge
lcall
or
lret
or
mov
xor
add
mov
ja
and
dec
lods
sub
add
inc
jns
pop
stc
in
mov
fidivl
push
pop
ds
inc
psubsb
mov
subl
enter
jne
sahf
rorb
nop
or
mov
mov
fidivs
add
and
add
and
outsb
pop
invd
pop
mov
adc
mov
notb
inc
test
in
mov
inc
xor
lcall
fld
adc
or
adc
mov
std
pusha
pop
and
xor
mov
push
xchg
loop
sub
mov
arpl
aam
fdiv
cmpsb
sub
ficompl
xchg
pop
jl
pushf
add
test
cld
xchg
ljmp
divl
rcrl
add
mov
push
add
mov
jg
add
pushaw
int
aad
jb
cmpsl
ret
adc
pop
cmp
add
inc
lock
lock
xchg
ja
mov
adc
outsb
aad
scas
pop
test
pop
cwtl
jmp
xor
add
dec
inc
add
int
mov
sbb
into
sub
sub
push
and
add
push
push
pop
jns
add
xchg
pop
repnz
addb
sbb
mov
jae
jnp
fwait
mov
bnd
arpl
jo
andl
mov
or
add
jl
ffreep
imul
add
mov
test
or
sub
iret
push
sbb
sub
cli
add
push
lea
pop
addl
rcr
jbe
sub
add
sahf
outsb
xlat
ljmp
xchg
push
ljmp
or
aam
mov
cmp
and
mov
mov
add
xchg
ja
add
cmp
testl
mov
movsl
jmp
sbb
and
mov
pmaddwd
pop
pop
cld
fstl
xchg
or
stos
loop
int3
add
add
mov
lods
add
mov
in
jns
aad
cltd
popa
sub
push
loopne
jp
pop
out
adc
fwait
push
call
inc
mov
movl
lret
mov
bnd
in
push
or
fsts
jnp
add
clc
orl
stos
scas
iret
xor
cmp
cmp
dec
movsl
add
mov
xchg
cmc
mov
iret
sbb
ret
mov
rcrl
sub
push
decl
je
shll
stos
out
out
add
jae
adcl
add
and
fs
adc
adc
xchg
or
pop
cwtl
std
sub
dec
sbb
cmpsl
jo
mov
roll
pop
lahf
add
xor
pop
cli
int
add
mov
xchg
call
jnp
jno
ja
mov
mov
xor
test
adc
cmp
inc
arpl
int
scas
jle
into
xor
aas
cmc
nop
test
add
in
cmp
add
mov
xor
add
xchg
jne
pop
les
add
imul
cwtl
int3
filds
fs
add
loopne
and
pop
pop
mov
mov
or
ret
enter
subb
pusha
jno
mov
les
fsubrl
jmp
imul
lods
fwait
cs
dec
in
mov
inc
add
rclb
cmpsb
mov
mov
xchg
in
mov
mov
adc
sbb
call
gs
ja
rorl
sbb
pop
or
add
jne
lret
mov
xchg
rcl
dec
pop
enter
adc
add
movsb
lods
lcall
adc
test
filds
jge
mov
jl
cmp
dec
inc
push
jae
add
subl
adc
mulps
mov
jg
mov
push
sub
push
mov
les
adc
jle
push
js
loopne
push
je
push
mov
jg
jnp
add
sub
cli
push
jmp
and
cmpsb
fldenv
pop
cmpb
into
pusha
stos
pop
imul
lahf
rorl
je
fimuls
and
mov
addr16
adcl
push
aaa
aaa
xor
jl
inc
mov
mov
add
lcall
add
leave
bound
fcoms
push
or
sbb
xchg
jno
nop
mov
es
or
and
xchg
sahf
pop
add
test
les
cmp
sub
or
add
pusha
ror
daa
inc
fistps
inc
mov
pop
pop
loopne
dec
pushl
xchg
mov
add
cmp
push
mov
pop
xchg
jmp
xchg
icebp
and
pop
or
mulb
lds
push
shll
add
and
pusha
push
cld
pop
adc
add
pop
add
outsb
xor
cwtl
push
push
enter
jns
les
mov
pop
ret
jno
in
fiaddl
daa
cld
jmp
bound
mov
or
pop
popf
add
mov
out
jge
push
dec
sub
jl
jo
add
aas
out
stc
adc
adc
adc
mov
rorb
mov
jmp
add
cltd
jae
in
int
mov
divl
cmp
cld
add
or
add
xchg
pushf
fisubrl
mov
jbe
add
mov
xor
sahf
aas
add
ja
loope
icebp
adc
push
aad
rep
test
gs
jns
add
inc
jp
add
dec
cmp
pop
lret
add
bound
push
aam
add
test
add
out
mov
clc
xor
rolb
inc
lcall
push
mov
xchg
mov
sub
jp
icebp
add
adc
negb
and
jno
enter
pusha
add
cmp
add
cmpsl
push
addb
or
sahf
shrb
pop
and
in
add
popf
cmp
and
cmp
mov
adc
pop
loopne
out
nop
cmp
cltd
push
mov
jmp
or
or
or
shlb
dec
in
add
mov
add
cwtl
out
movsb
dec
push
nop
cli
lahf
loopne
push
repz
clc
mov
adc
ret
pop
enter
add
sbb
mov
ds
add
pop
imul
add
mov
ds
inc
jmp
dec
add
xchg
adc
push
clc
adc
push
mov
in
out
add
jmp
or
push
adc
sbb
movsl
add
mov
xchg
add
aaa
gs
dec
shl
pushf
pop
xchg
xchg
jne
xlat
and
out
pop
movsb
es
call
dec
pop
pusha
pop
dec
int
push
mov
add
repnz
mov
jmp
loopne
xchg
mov
rorl
adc
push
add
mov
ljmp
lods
ret
push
add
sbb
push
add
mov
jno
dec
nop
in
adcb
push
and
sarb
push
inc
cmp
jl
push
pushf
lock
mov
sbb
add
xor
test
sub
adc
ljmp
pop
fldcw
and
das
pop
mov
cmpsl
add
test
sahf
xor
fimuls
pusha
pop
outsb
add
push
and
sbb
imul
lods
addr16
xor
sub
dec
std
imul
and
aaa
test
jl
xor
fiaddl
sub
fistps
jl
clc
pop
jecxz
shlb
data16
add
sub
sub
mov
xchg
inc
in
dec
test
cwtl
mov
cmpb
mov
faddp
jo
xor
mov
sar
je
lods
mov
push
lock
and
cmp
sub
int3
sub
add
cltd
dec
out
lock
and
add
lds
fdivs
or
shlb
lea
mov
mov
out
data16
in
xchg
jae
push
sbb
push
and
and
add
push
lds
js
add
sub
jl
cltd
stos
lret
add
xor
leave
sub
push
sbb
mov
cwtl
mov
out
add
movsl
in
cmc
faddp
in
popf
je
add
jnp
cltd
shll
mov
cmp
sbb
sub
ja
sbbb
arpl
mov
shrl
push
add
add
pop
pushf
pop
mov
fnstcw
cmpsb
mov
sbb
sub
rorb
add
out
lock
mov
imul
push
sub
int
mov
lods
push
stos
push
pop
sub
in
sbb
add
aas
in
jb
jmp
xchg
push
mov
scas
jne
push
mov
xor
xor
jmp
jb
js,pn
sbb
lock
inc
inc
addl
in
mov
mov
or
icebp
sbb
mov
cs
cmpsl
cmp
loopne
call
ret
jecxz
jb
add
adc
lret
imul
shrl
das
outsl
add
adc
push
xor
dec
lds
and
sbb
cmp
jge
add
lods
push
and
add
adc
subl
ret
sub
mov
leave
rcl
fcoms
idiv
lods
inc
jge
dec
testb
push
test
imul
popf
les
roll
inc
test
xor
inc
ljmp
ret
ja
in
pusha
mov
adc
sbb
cmp
jne
add
pop
pusha
notb
ds
ret
mov
jl
loopne
cs
shrl
aas
addl
cvtpi2ps
fsubrs
mov
ret
loopne
pop
or
faddl
cli
fnsave
mov
mov
mov
mov
mov
sub
cmp
movsl
ret
das
sbb
mov
add
lret
pop
add
sbb
mov
test
shll
gs
fstl
nop
add
ret
inc
div
mov
push
xchg
mov
bound
xor
mov
pop
xchg
outsl
es
jo
sub
and
call
orb
adc
add
inc
pop
cmp
sub
xor
and
add
mov
add
add
add
mov
dec
mov
add
mov
mov
adc
inc
jl
and
fcoms
jnp
cmp
leave
rol
push
fldl
clc
sub
mov
adc
clc
mov
int
or
insl
in
pop
arpl
mov
fnstcw
and
aam
and
jno
roll
sbb
ja
leave
ds
add
jb
mov
dec
push
imul
inc
mov
cmpb
dec
movq
add
and
xchg
imul
dec
gs
add
pop
fcomps
pusha
mov
add
testb
hlt
fprem
sbb
sbb
adc
add
and
arpl
add
cmpsb
add
iret
jecxz
fsub
add
cli
aam
rorb
lret
jo
cmp
xchg
xchg
ja
shlb
add
dec
or
inc
rorb
or
add
adc
adc
pop
dec
pop
insl
add
sti
xlat
nop
add
jl
enter
loope
int3
dec
mov
movsb
lods
sbb
adc
adc
cmc
jnp
lret
xor
insb
lods
fisubl
add
mov
mov
ljmp
jb
rcrl
in
jae
cwtl
or
ret
push
dec
add
rcrl
cli
out
or
in
sbb
add
mov
adc
pop
fcoms
ja
imul
add
cmp
add
xor
add
sahf
std
stc
xor
adc
or
mov
pop
xchg
xchg
outsl
jl
add
add
jmp
xor
fs
add
push
sahf
out
jp
cmp
push
sbb
lahf
or
in
inc
xchg
mov
push
dec
dec
aam
ljmp
imul
pop
xchg
mov
mov
outsb
subb
adc
hlt
or
cltd
fists
push
out
jnp
jp
mov
add
inc
clc
add
ja
in
and
test
pop
sub
lock
stos
insl
inc
lahf
jle
cmp
cmc
add
inc
sbb
push
ljmp
out
jg
add
aas
filds
sbb
fldl
out
add
dec
imul
jmp
lds
push
lea
mov
or
adc
fstl
shll
jno
dec
inc
or
jl
mov
daa
call
pop
bound
in
push
push
push
pop
xor
sub
test
neg
cmp
and
std
and
in
aam
add
lock
clc
inc
jo
push
xor
ficoms
in
loop
push
mov
fwait
shlb
into
push
add
push
add
outsb
leave
hlt
fucomp
jnp
add
hlt
add
imul
cmp
lret
pusha
hlt
out
repz
adc
in
sbb
inc
inc
jmp
inc
add
and
pop
xchg
or
fiadds
mov
mov
add
frstor
inc
sbb
xchg
cmp
adc
in
andb
cwtl
lret
xor
ljmp
js
clc
ffree
jne
incl
mov
pusha
add
cmp
mov
stc
sbb
cwtl
sbb
nop
divb
push
and
cmpl
jbe
pop
jl
jne
mov
xor
add
cmp
cli
insl
adc
das
push
pop
ret
mov
xor
ss
pop
sbb
mov
mov
dec
cmp
lock
add
add
popa
adc
pop
jge
in
add
xchg
cmpsb
add
xchg
aad
jmp
call
and
addb
xchg
ja
jb
mov
mov
mov
cld
filds
mov
mov
ss
test
jnp
sbb
stc
fiadds
or
add
xchg
cwtl
in
insl
pop
jnp
mov
mov
push
cmp
mov
adc
scas
push
pop
shlb
fcmovbe
add
test
test
add
aad
pop
daa
jmp
mov
in
lods
jb
push
lahf
in
call
cmp
jl
out
pop
rolb
hlt
neg
pusha
in
pop
mov
pushf
shll
add
jmp
mov
cmpb
test
mov
lret
sbb
sarb
adc
xor
add
jo
scas
in
fwait
repnz
pusha
sbb
pusha
add
repz
mov
leave
sbb
push
mov
scas
and
jbe
or
pop
xor
rcl
in
icebp
adc
repz
jo
mov
lcall
xchg
inc
push
movsl
repnz
push
adc
push
push
fsubrs
jno
add
inc
add
xor
sub
jns
ljmp
mov
push
cmp
aaa
cmp
arpl
gs
mov
add
out
ret
cwtl
out
rclb
in
inc
data16
loop
add
bound
pop
mov
pusha
adc
sub
imul
or
add
sti
jb
add
cltd
mov
aaa
or
mov
ret
scas
stos
jg
pop
add
shll
jge
push
and
fmull
pusha
mov
mov
scas
lea
add
movsl
xor
jb
sbb
in
or
xor
in
add
mov
sbb
out
in
shrl
out
add
xchg
jp
add
dec
iret
jnp
loope
add
enter
add
xor
psllq
cmp
xchg
add
adcb
mov
clc
in
pop
iret
push
jmp
lea
sub
out
jne
mov
mov
sub
repnz
cld
mov
insb
mov
iret
lgdtl
cmpsl
daa
add
test
adc
push
push
fwait
cwtl
inc
loop
psubd
imul
clc
push
mov
sbb
adc
xor
int
dec
into
lock
repz
or
or
mov
mov
icebp
cmp
jl
dec
jp
dec
test
divb
aam
and
push
sbb
xchg
sbb
and
sbb
jmp
lahf
nop
xchg
and
outsl
or
mov
and
lahf
adc
lcall
sub
ret
or
mov
jge
testl
xchg
aas
aam
add
mov
sbb
cli
stos
or
fwait
pop
or
dec
rolb
cmp
jb
jle
mov
jmp
iret
fs
loopne
cmp
adc
mov
jecxz
aam
roll
jmp
pop
data16
call
dec
insl
filds
sub
mov
and
repz
xchg
add
mov
jno
pop
sub
add
jbe
sub
add
test
inc
mov
xor
pop
repnz
loop
ud0
int
movsl
sub
cmpl
cli
and
xor
add
clc
sub
aad
mov
adc
jnp
fcomip
js
popf
adc
jmp
adcl
rol
addb
divl
jecxz
dec
or
and
pop
cs
add
push
pop
mov
cwtl
xor
and
jl
add
fstps
push
and
in
jmp
sub
clc
sti
xor
mov
adc
je
cs
xchg
jno
ljmp
lret
mov
add
cli
in
out
aad
shll
fldcw
loopne
push
lret
inc
sbb
sti
stc
fisttps
dec
and
push
mov
mov
movsb
and
pop
add
sbb
push
or
in
add
call
imull
push
outsb
sbb
pop
jns
cmc
xchg
loope
std
aam
leave
add
adc
add
adc
lds
cmp
sbb
push
sub
loope
and
jge
push
js
dec
loope
adcl
push
or
add
loop
in
cli
xor
add
mov
mov
push
sub
roll
pushf
into
popa
daa
lods
cmp
jbe
loopne
xchg
inc
or
js
push
ss
add
xor
or
test
test
ljmp
dec
sbb
loope
adc
mov
jl
xor
sbb
sub
push
lret
xor
ret
cmp
popa
jge
cli
fmull
repz
insb
leave
adc
dec
push
shlb
hlt
and
rorb
pop
leave
add
pop
int
and
rolb
int3
xor
mov
imul
loope
data16
add
dec
or
rcll
sbb
mov
add
mov
scas
jno
pop
adc
inc
mov
and
stc
enter
inc
push
and
and
cli
pop
or
push
and
and
adc
adc
call
cwtl
inc
inc
pop
and
and
cmpb
dec
adc
mov
les
add
adc
jno
in
andl
sub
ret
sbb
and
ja
or
sbb
lret
push
or
mov
mov
add
test
push
bound
shr
add
cmp
dec
push
xbegin
jb
sbb
cltd
push
shl
je
aas
pusha
cmp
aam
xchg
addr16
inc
sub
clc
adc
test
inc
add
into
or
sbb
std
clc
dec
in
sub
gs
rorb
lods
and
sub
cmp
add
dec
sti
fimuls
cmp
add
lods
arpl
push
addl
subl
add
enter
faddl
fidivrl
push
xchg
ljmp
jae
adc
imul
xchg
xor
and
dec
paddsb
out
in
xchg
adc
imul
mov
jg
pop
sti
mov
push
inc
data16
jae
cmc
xchg
jns
adc
xlat
js
arpl
mov
dec
nop
ds
lea
test
cmp
push
sbb
push
rorb
roll
pop
sbb
das
or
jne
pop
aad
sbb
jg
sbb
cld
pop
sbb
repnz
test
jmp
nop
push
adc
pusha
inc
in
jno
cwtl
inc
mov
scas
push
add
hlt
aam
in
hlt
pop
pop
pop
jle
jmp
dec
jno
dec
andb
pop
push
add
inc
in
and
cli
nop
psrad
and
and
add
mov
mov
add
mov
sub
xor
shrb
push
dec
push
mov
and
sbb
push
mov
mov
xlat
mov
sarl
mov
mov
push
mov
push
andl
and
xchg
les
xor
push
or
test
mov
fs
xor
std
jae
inc
subl
rol
mov
push
sbb
jo
iret
mov
cmpsb
test
add
jae
lods
cmc
inc
push
mov
cld
out
rorl
add
push
inc
cmp
cmp
out
cmpsl
dec
jl
mov
clc
sub
mov
adc
cmp
add
pop
sahf
ret
stc
loop
mov
inc
test
mov
fistpl
lock
jge
add
or
cs
adc
push
push
clc
xchg
cmp
icebp
orl
enter
jns
mov
adc
mov
add
adc
decb
mov
mov
xchg
add
sub
leave
lock
imul
cmp
lods
jae
inc
mov
sahf
hlt
fsts
or
out
inc
icebp
cwtl
add
sbb
clc
popf
sahf
enter
sbb
lods
nop
add
adc
sahf
faddl
scas
sbb
xorb
adc
mov
add
mov
cmp
mov
inc
fdivs
jns
icebp
add
mov
jecxz
enter
pop
pop
inc
add
in
in
add
sub
add
mov
add
daa
sbb
dec
test
cmp
popa
testb
or
loopne
add
lret
push
cmp
add
sbb
add
in
pop
xor
jne
pusha
or
pop
inc
jl
insb
roll
mov
cmp
jmp
jg
aas
ficomps
mov
fistps
mov
add
rcll
pop
je
out
or
or
clc
pop
rclb
sti
adc
mov
mov
roll
pop
push
ja
ret
and
adc
add
add
inc
pop
test
sbb
pop
cli
push
lds
add
clc
push
pusha
outsl
lods
pop
shr
in
adc
es
jo
lahf
sar
mov
lret
mov
pop
pop
jmp
cli
clc
hlt
add
ljmp
pop
inc
pusha
sarb
rolb
test
popa
icebp
mov
sbb
add
sahf
bound
xchg
jno
mov
dec
add
mov
incl
mov
adc
nop
fsubs
and
das
in
add
adc
xor
lea
sahf
pop
inc
andl
ret
cs
xchg
push
xchg
insl
add
pop
loop
cmp
add
test
sbb
in
add
dec
cwtl
adc
aaa
add
xchg
insl
add
mov
jo
out
imul
jecxz
arpl
cs
sti
add
in
call
add
ljmp
or
lock
push
cmp
add
sub
sub
mov
add
fwait
mov
dec
add
shll
add
popf
sub
jb
xchg
faddl
negb
fisubs
lock
add
out
push
mov
dec
mov
mov
in
daa
sbb
fwait
scas
sbb
hlt
jno
xchg
enter
mov
xchg
loope
loop
pop
inc
push
test
out
repz
xor
cwtl
or
adc
out
sub
or
fs
aas
mov
or
mov
fmull
sbb
push
jo
cmp
add
push
out
sti
inc
and
aad
fldl
or
mov
flds
rclb
adc
and
push
pusha
cs
lods
add
jno
ffreep
loope
jo
add
sub
addr16
js
inc
mov
sahf
cmp
jle
xor
aam
add
ss
cmp
fbstp
mov
pop
inc
or
xor
ror
popa
es
pusha
or
xor
sub
std
mov
add
iret
popf
or
paddsb
call
add
rclb
insl
add
shlb
push
test
dec
sub
stos
jl
cmp
lea
adc
sbb
or
cmc
cmp
sti
add
sbb
push
ss
push
inc
and
repz
pusha
out
sub
cld
loopne
sarl
cli
stc
in
ret
sbb
ds
push
ljmp
or
stos
and
es
mov
stc
sub
int
lock
adcb
mov
cmpb
cmpsb
mulps
xor
mov
imul
ljmp
mov
outsb
pop
add
enter
dec
jg
add
mov
inc
add
sbb
push
and
fwait
scas
pop
mov
mov
push
out
vmread
fcomip
add
inc
or
adc
cmp
mov
mov
sbb
out
mov
mov
pop
test
add
add
and
mov
add
scas
dec
nop
cmp
cld
adc
xchg
jne
mov
pop
inc
pop
lret
insb
dec
push
pop
add
enter
add
ljmp
and
jns
xor
sbb
pop
inc
add
leave
int
xchg
daa
mov
dec
jecxz
push
movsb
sub
sub
jmp
es
pop
jge
pop
imul
loop,pt
add
popf
imul
cmp
adc
xor
xor
mov
aam
in
inc
repnz
aas
cmpsb
add
jl
dec
push
fwait
add
out
scas
lcall
add
jmp
mov
loopne
jbe
add
sbb
add
push
gs
scas
jl
or
js
sbb
mov
add
aas
and
test
add
clc
push
out
bnd
push
add
push
push
out
leave
sarl
aam
or
push
outsl
shrb
mov
add
mov
and
mov
push
insl
or
mov
jmp
adc
je
jbe
add
jno
mov
adc
jnp
test
inc
pusha
cmp
aad
or
push
decl
outsl
fs
add
icebp
sub
pop
add
ret
adc
pusha
add
push
imul
dec
scas
out
mov
push
imul
jb
dec
cld
add
pop
push
inc
test
movsb
adc
push
lahf
mov
add
in
push
rclb
loope
cld
subl
aas
lcall
xor
js
je
mov
incb
mov
test
dec
pop
stc
dec
xor
cmp
cmp
xor
lcall
scas
add
dec
cs
add
xorl
fldl
sub
jo
mov
rolb
mov
fimuls
xchg
cmp
stc
add
pop
iret
mov
sbb
or
fimuls
adc
dec
mulb
call
jne
mov
sbb
and
in
add
shl
std
pusha
push
sbb
addr16
mov
addr16
add
inc
sbbb
mov
in
add
xchg
mov
lds
push
mov
mov
and
jo
test
adc
add
in
add
imul
pop
inc
and
in
xlat
in
lds
jg
in
lcall
notb
sbb
push
xor
addb
test
cmp
in
mov
add
or
inc
add
mov
or
out
stos
or
push
call
out
lods
rol
mov
inc
fstpt
or
lahf
push
xchg
nop
sub
push
xor
push
and
fnstcw
jmp
mov
sub
hlt
add
sub
int3
adc
push
add
sub
or
inc
jae
add
inc
jle
mov
or
and
ror
cwtl
in
loop
mov
push
in
loop
pop
push
jo
xchg
addr16
cmpsb
xor
pop
cmpsl
mov
add
mov
and
leave
test
dec
add
mov
fsubrs
addr16
inc
dec
xor
add
stos
adc
flds
loope
mov
incb
jo
and
out
add
sub
or
loopne
aad
add
cmp
lock
std
xchg
sub
sub
mov
stos
add
arpl
popa
pusha
cmp
sub
nop
add
push
cmp
sarl
mov
inc
pop
clc
xor
hlt
mov
add
sub
sbb
jmp
xor
lcall
cs
inc
inc
clc
loopne
adc
dec
add
mov
js
pop
sbb
pop
jnp
insb
add
mov
daa
xor
loopne
cmpsl
adc
jmp
outsl
out
out
pop
out
fstl
or
int3
push
mov
enter
push
jge
xchg
dec
add
add
cmp
adc
mov
jae
sbb
push
test
dec
jno
fs
fwait
xor
adc
jp
add
out
enter
sub
jae
add
imul
fadds
cld
in
add
nop
mov
adc
pop
scas
pop
pusha
in
add
cltd
push
sbb
adc
js
daa
ret
pop
mov
les
cs
xchg
fs
jle
rolb
add
pop
scas
mov
mov
int3
add
inc
sahf
lock
jne
divb
enter
pop
jmp
aaa
int3
mov
pushf
call
lods
push
gs
icebp
add
adc
data16
test
jno
negl
xchg
mov
andl
add
mov
cmp
cmpb
movsb
outsl
nop
xor
inc
cmpsb
adc
mov
add
jbe
and
mov
pop
push
dec
cmpsb
cmp
pop
mov
xchg
dec
push
clc
jae
dec
xor
pushf
push
test
push
inc
sub
dec
inc
icebp
aas
cli
das
subb
lret
inc
jg
add
push
cmp
jae
dec
pop
jae
add
xlat
xchg
pop
push
shlb
sbb
pop
or
jns
dec
loope
inc
cwtl
xor
ss
mov
fistl
or
push
mov
lcall
test
mov
je
xchg
add
vmptrst
adc
pop
add
mov
jne
add
jo
lock
sbb
dec
enter
stos
xor
andb
cs
mov
sar
xchg
cld
add
out
push
add
xorb
or
aad
add
pusha
lock
ja
sbb
xor
xor
pop
call
lret
add
stos
cmpsl
push
mov
cmp
hlt
pop
and
sbb
cmp
pop
pop
add
push
push
cmp
or
mov
add
and
push
ret
shr
jno
push
adc
add
mov
wrmsr
popf
lret
add
lds
pop
leave
addl
dec
jns
add
sbb
xor
ret
sbb
or
bswap
xchg
inc
pop
add
and
in
mov
out
loopne
inc
jmp
add
cmp
add
lcall
add
xchg
add
mov
jnp
into
fistps
adc
push
lock
int3
mov
add
add
int
xchg
mov
shll
icebp
sbb
mov
rcl
add
in
add
jle
cmpsb
inc
pop
lods
fs
out
and
adc
jb
sbb
pop
shlb
dec
mov
mov
or
adc
jb
dec
ret
push
dec
data16
mov
lods
aad
mov
js
add
mov
sahf
lods
push
int3
mov
dec
jb
adc
jge
inc
mov
test
adc
adc
repnz
imul
stc
mov
mov
ss
push
push
movsl
subl
xchg
mov
sub
push
add
mov
push
xorl
sub
fisubrs
pop
cmp
gs
loopne
jle
je
hlt
cwtl
xchg
lock
push
adc
jge
mov
lds
jp
stc
cmpb
cmp
or
and
cmpsl
aam
sbb
jb
int3
aad
bound
cmpl
add
cmp
dec
pop
or
loop
add
pop
dec
cmp
sub
jmp
shlb
addl
sub
pop
push
sub
mov
fcmovbe
add
scas
enter
in
sub
and
in
imul
jg
mov
mov
pusha
mov
aad
rcrb
outsb
loopne
cwtl
jne
add
inc
daa
inc
hlt
ret
outsl
lcall
adc
xchg
or
add
add
clc
sub
sbb
pop
pop
lret
mov
pop
mov
adc
cli
jb
pushf
enter
cmpsl
stc
rol
add
add
lods
xchg
into
push
sub
leave
pop
add
fdivrs
add
inc
jle
lods
lret
jno
mov
mov
cmp
sub
dec
xlat
fsub
mov
test
add
sysret
int3
aam
repz
adc
push
mov
add
xchg
ret
divl
call
pushf
iret
or
add
cmc
pop
lret
cmp
sub
testl
fwait
add
jecxz
mov
movsb
jmp
das
inc
nop
outsb
cmp
orw
and
sub
and
inc
add
dec
add
pop
mov
xchg
movsb
push
pop
add
and
addr16
fiaddl
push
inc
pop
int3
adc
mov
js
inc
cmp
mov
into
add
shlb
aam
xor
mov
sbb
xchg
mov
cwtl
loopne
lds
add
dec
add
or
cmp
push
inc
adcb
into
insl
shrd
mov
push
xchg
notb
negl
add
push
pop
adc
inc
imul
out
add
mov
xchg
pop
adc
mov
xor
push
mov
out
sbb
and
sbbb
std
mov
or
mulb
stos
imul
pusha
mov
jecxz
test
add
in
add
imul
add
mov
xchg
repnz
add
inc
jg
lcall
lret
cmp
xchg
shlb
fwait
add
mov
add
sub
inc
inc
insl
pop
pop
roll
pop
in
dec
pop
xlat
mov
mov
jo
shr
xchg
add
jmp
jo
add
lcall
shrb
jmp
lods
mov
or
xor
clc
movsl
push
add
aas
test
mov
push
lret
les
add
popa
icebp
shlb
fs
ret
test
inc
pusha
xor
fsubr
and
pop
sbb
loopne
movsl
push
popaw
add
sbb
jp
lock
mov
arpl
sbb
cli
popl
mov
test
jge
lret
pop
inc
cwtl
lcall
add
lods
mov
jg
adc
add
xchg
xor
or
or
push
stos
mov
les
adc
lock
mov
xor
mov
sahf
adc
test
inc
inc
in
or
sub
inc
cmp
scas
pusha
cmp
out
imul
cmp
mov
sbb
jmp
aaa
cmp
fistl
mov
test
in
pusha
repnz
inc
fadds
xor
add
lods
in
add
sub
add
mov
or
add
in
adc
mov
mov
add
mov
push
xor
add
xchg
aad
add
out
xor
adc
je
add
xchg
jp
movsl
pusha
inc
addl
pop
cmp
subb
call
mov
in
int
mov
pop
cmp
mov
aad
sub
out
sbbb
mov
cwtl
testl
sbb
int
lods
rorb
scas
adc
pusha
dec
and
add
out
push
stos
xor
mov
lods
sub
lds
insb
sti
push
aam
add
ljmp
xor
push
pusha
inc
das
stos
add
cwtl
lock
cmp
mov
xor
js
dec
xor
inc
fildll
xlat
mov
rclb
jle
add
cmpsl
push
mov
xor
cld
cs
addb
aad
inc
in
sarb
pop
call
insl
pop
add
dec
adc
gs
aam
xchg
repnz
sahf
lea
in
inc
adc
and
arpl
push
lahf
push
sbb
call
sbb
icebp
pushf
add
daa
jnp
mov
insl
adc
push
xchg
sarb
ljmp
add
xchg
out
mov
aad
test
fcomps
das
and
add
pusha
and
call
sbb
pop
jecxz
mov
fadd
and
in
lret
js
add
sub
lahf
sbb
rsm
mov
inc
lods
lea
into
mov
adc
dec
cmp
xchg
push
xor
add
fidivrl
add
js
mov
push
mov
push
aaa
sarb
add
cmc
jmp
fstpl
add
lods
jmp
fnstenv
mov
lahf
fisttpl
repz
mov
outsb
pop
dec
lret
mov
adc
rolb
scas
add
mov
pop
loopne
cli
sbb
in
nop
addr16
adc
mov
sbb
arpl
mov
cmpsl
pusha
push
add
cmp
push
out
jo
rolb
dec
in
mov
push
mov
cmpsl
or
lds
test
in
add
bound
push
add
pop
negl
das
incl
bound
lahf
jl
xchg
dec
fisubrl
cltd
call
xor
lods
lea
add
pop
pop
jno
mov
js
cld
into
cmpsb
xor
fcoms
jbe
add
scas
adc
add
aas
movd
out
les
clc
sahf
or
shlb
popf
sbb
add
es
fistpl
movq
testb
push
test
sub
rolb
sarl
push
add
das
add
pop
pop
pop
test
rclb
mov
inc
and
aas
fistps
add
cmp
fildl
mov
jo
mov
add
inc
cmc
cwtl
sub
cwtl
call
popa
sub
into
jno
in
mov
daa
test
int3
sbb
pop
inc
mov
jne
out
pusha
cwtl
cld
dec
pop
add
cmpsb
out
add
dec
and
clc
push
dec
pop
or
sti
clc
iret
lods
inc
sub
add
xorl
add
jle
inc
out
jg
add
pop
push
add
loop
sahf
xchg
and
sbb
mov
aaa
adc
dec
pop
push
xchg
sub
pop
in
adc
cmpsb
or
aam
add
data16
stos
out
push
inc
mov
enter
je
pusha
sub
lds
cmp
jecxz
mov
mov
faddl
std
mulb
mov
pop
stos
roll
out
pusha
lret
pop
xor
dec
scas
cmp
xor
mov
inc
cmp
cmpsl
insb
sub
dec
sub
or
push
add
pop
add
dec
ds
adc
fldenv
icebp
in
add
in
mov
jmp
xor
or
in
xchg
aaa
push
push
add
test
lcall
ja
add
cwtl
add
scas
push
and
inc
add
mov
xchg
and
cmpl
scas
daa
pop
std
xchg
inc
push
mov
mov
js
jnp
test
shlb
shll
sub
sub
mov
add
xor
jmp
push
imul
sub
ror
sub
mov
cmp
daa
in
filds
pop
call
xlat
clc
mov
aad
inc
add
ja
mov
jb
add
or
mov
sub
adc
add
xchg
dec
or
mov
out
in
pusha
cmpsb
hlt
clc
push
inc
mov
mov
add
faddl
fnstenv
loop
cmpsb
add
repz
pop
add
mov
shlb
dec
jo
sbb
adc
jno
cmpb
jne
jbe
adc
pop
push
das
cmpl
sub
subb
add
add
push
sub
inc
in
mov
push
pop
jmp
adc
xor
sbb
fsubs
lret
cld
loopne
int3
add
push
shrb
inc
dec
jl
test
mov
insb
mov
jmp
movsl
scas
adc
stos
xor
jns
test
sahf
push
sbb
cmp
add
jne
cmp
lock
push
add
cwtl
mov
xor
push
cmp
add
sub
fiaddl
pop
xchg
xchg
pop
push
loop
add
push
sub
loope
add
testl
add
test
xor
sbb
mov
jg
pop
frstor
jge
add
loopne
or
jb
cmp
sbbl
xchg
jmp
dec
shlb
push
or
rolb
loop
jo
cmp
mov
sbb
mov
ja
dec
xor
call
add
adc
xchg
inc
xor
imul
mov
push
repz
lea
dec
mov
cmp
ret
push
or
or
add
leave
mov
es
pop
loope
repnz
popf
cwtl
add
jae
lahf
cli
xchg
dec
xchg
inc
add
sub
and
jl
fimuls
pmullw
xor
js
es
cmp
loopne,pt
mov
sbb
sub
fnstcw
nop
push
push
xor
test
roll
ficoml
mov
add
xor
es
adc
mov
mov
sahf
out
mov
xlat
rorl
in
inc
add
pop
ss
leave
mov
loop
into
or
fs
mov
js
call
test
inc
add
inc
das
cmpsl
dec
pop
add
cli
add
xchg
inc
add
dec
addr16
jmp
cmp
test
iret
add
idiv
ret
insl
es
add
xor
adc
add
les
movsb
cmp
ja
cmp
or
push
jge
sub
add
add
mov
nop
pusha
cwtl
xchg
add
sbb
loop
mov
das
lret
mov
inc
adc
add
add
mov
sub
test
or
mov
add
in
mov
jmp
or
cmp
fcompl
fsts
shl
movsl
add
add
add
or
es
loopne
int
sarb
pop
xor
mov
jb
sub
in
fdivrs
sub
xchg
dec
test
mov
dec
sbb
lcall
push
ljmp
mov
and
mov
mov
inc
inc
push
lock
xor
cmpsb
or
pop
js
sub
dec
and
xchg
add
adc
les
jge
xor
cltd
inc
scas
incl
stc
movsb
jnp
stos
fwait
sbb
lds
enter
push
sbb
xchg
sub
and
fnsave
add
mull
add
test
leave
xchg
dec
add
idivl
hlt
mov
std
cmp
xchg
add
decl
push
cli
jne
orb
dec
testb
and
cmp
sbb
sbb
dec
aas
cli
lcall
xor
jo
ret
sub
test
aad
orb
insl
jge
add
movsl
shll
jo
movq
mov
mov
inc
mov
dec
add
movsl
stos
sub
iret
arpl
add
repnz
in
in
js
ds
xchg
add
outsl
xchg
push
sub
add
dec
mov
outsb
icebp
lock
add
or
in
cwtl
jle
xchg
add
inc
fwait
pop
sub
and
inc
mov
mov
adc
push
orb
mov
imul
jo
mov
test
je
push
pop
nop
fdiv
xchg
inc
pop
in
cmp
mov
sbb
and
iret
add
out
xor
arpl
call
int
pop
test
adc
mov
icebp
add
loope
push
sbb
lahf
sub
rcrl
mov
mov
adc
mov
sub
data16
in
and
xchg
add
clc
js
nop
xor
or
notl
add
dec
stc
je
cmc
sbb
rcl
in
lea
mov
setge
add
fcmovu
mov
clc
out
cld
faddl
pop
adc
add
pusha
sbb
adc
or
jmp
adc
mov
cwtl
and
fdivl
stos
rolb
add
mov
pusha
inc
mov
call
cwtl
je
mov
roll
mov
add
in
cmp
sbbb
pop
add
mov
orb
mov
dec
sbb
add
lea
add
insb
pop
sbb
push
pop
and
stos
add
push
jb
pushf
mov
movzbl
adc
inc
add
jmp
mov
add
mov
imul
popf
pop
mov
add
unpckhps
sub
adc
incl
push
xchg
add
xor
cld
inc
mov
mov
inc
es
clc
popl
add
jecxz
add
push
sti
xor
cmp
popf
add
xor
test
cmpsl
jle
add
and
rorb
dec
inc
pushf
dec
mov
sub
xchg
shlb
inc
push
mov
in
dec
cmpb
cmp
sbb
inc
jbe
pop
lcall
xor
jl
add
inc
test
fwait
push
add
adc
jp
add
sti
mov
pop
cmp
std
aam
sub
mov
imul
add
mov
cmpsb
jecxz
mov
dec
stos
fisubs
cmp
add
test
decb
rolb
push
and
stos
sahf
loop
mov
imul
mov
mov
inc
xorb
add
lods
push
jl
add
shll
push
pop
xor
outsl
add
or
fwait
arpl
push
mov
cmp
in
cld
add
movsl
imul
insb
hlt
xor
into
jns
fisttps
sbb
add
shrb
mov
mov
lea
out
stc
push
xchg
aas
sbb
cmc
leave
mov
mov
int
mov
add
jp
sub
mov
jg
add
loop
jb
aas
jns
mulb
cmpsl
cmp
mov
add
mov
add
sbb
test
test
sub
out
or
movsl
adcb
loopne
adc
jg
xor
pop
dec
mov
lcall
xor
scas
mov
jecxz
out
mov
nop
fld1
or
mov
imul
iret
cmp
out
mov
add
xor
cmp
and
mov
mov
pop
jle
in
cmp
or
add
add
jbe
xor
ja
test
je
js
mov
sbb
sbb
dec
out
xchg
xor
xor
sbb
xor
push
xchg
cmp
adc
jnp
mov
mov
ficomps
pop
jae
pusha
sbb
fnstenv
dec
outsl
lods
push
mov
mov
ret
jg
loop
add
sub
inc
repnz
jne
aam
lods
xor
aaa
lret
xchg
add
fisttpll
jl
mov
bound
and
cs
mov
sahf
addb
jb
ret
jno
mov
ljmp
push
mov
jle
add
mov
push
xor
rorl
orb
cmp
test
nop
sub
dec
or
mov
mov
test
int3
push
xchg
hlt
add
sbb
jecxz
stc
and
sub
pop
cs
xor
mov
fwait
sarb
neg
cwtl
add
cli
add
rcl
xor
ror
push
jae
add
cmpb
and
jnp
mov
jns
clc
mov
inc
cld
jo
dec
adc
mov
in
scas
inc
test
loopne
loope
add
es
outsb
xchg
enter
inc
out
inc
pop
ljmp
testb
dec
out
pop
sbb
test
cmc
loopne
movb
stc
icebp
in
fcompp
pop
jl
add
bnd
mov
dec
xchg
xchg
dec
xor
dec
lret
fldcw
add
or
or
nop
dec
imul
pop
data16
mov
jge
add
test
add
test
jmp
xchg
push
loope
or
jnp
add
jl
sarb
std
add
mov
or
cmp
mov
into
fldcw
cmp
andl
mov
add
inc
add
add
fs
adc
sub
add
pushf
inc
mov
jo
pop
arpl
jmp
je
sarb
jmp
push
loop
add
lea
add
xor
lds
or
out
dec
jp
nop
rolb
mov
fwait
insb
cmp
std
jbe
leave
sub
add
xchg
add
scas
lds
test
ljmp
mov
pop
mov
pop
into
pop
lahf
jnp
add
pop
loopne
xchg
faddl
inc
sub
and
mov
adcb
enter
add
sti
sub
daa
in
scas
jnp
repnz
pop
push
cmc
add
cmp
mov
add
notb
pop
push
sbb
add
push
adc
xor
adcb
lret
cmp
inc
daa
sub
jmp
mov
mov
insb
lret
roll
cmp
out
add
dec
or
scas
ljmp
xchg
or
pop
add
lret
popf
ja
in
add
xchg
add
ljmp
sub
and
add
jnp
jo
sbb
jb
lea
add
sbb
dec
lods
sub
js
adc
add
cmp
les
add
sub
in
dec
add
test
loop
je
cmp
push
xchg
jecxz
adc
xchg
add
insb
fnclex
int
dec
jo
add
sub
add
cld
cmp
jo
lcall
xchg
std
xor
clc
fwait
add
mov
add
arpl
repz
std
add
push
sub
fldt
jne
test
mov
sarl
call
push
cltd
shrd
aas
test
mov
adcl
jg
mov
and
xchg
xor
cmp
lods
call
add
loope
cmp
clc
jmp
add
pushf
push
inc
leave
testl
loop
movups
aas
in
add
jmp
adc
call
jl
jns
testb
mov
mov
adc
sbb
push
mov
in
add
out
movsb
lock
pop
or
data16
lock
sbb
pop
add
loopne
mov
mov
push
dec
adc
push
movsl
in
pop
push
loopne
stc
nopl
popa
cmc
inc
xchg
or
rol
das
sti
cmp
cmp
pop
js
xor
cmp
push
add
int3
sti
dec
mov
push
ret
hlt
cmc
filds
mov
sbb
sbb
into
jmp
shll
dec
hlt
add
jge
fcomps
add
push
inc
jle
push
add
push
stos
dec
fdivrs
or
push
xchg
scas
rol
dec
mov
add
pop
mov
adc
dec
dec
add
jno
int3
add
mov
inc
imul
decl
mov
sarl
int3
mov
or
gs
pusha
push
push
ret
and
pop
fyl2x
popa
movsl
jo
inc
add
sub
fidivrl
cli
out
xor
shll
jb
hlt
test
and
mov
cmpsb
adc
cmp
pop
mov
or
sbb
les
cs
lods
sbb
rcll
cmp
sub
or
mov
sub
loopne
pop
add
cwtl
xchg
adc
cmp
add
iret
or
mov
pushf
xchg
push
insl
or
xor
or
dec
cmpsb
out
jae
rcll
pop
and
push
add
pop
sub
xchg
or
push
mov
loopne
rclb
fisttpll
pop
lahf
shrb
sbb
and
cli
sub
mov
loopne
in
out
mov
add
out
cmp
mov
fwait
sub
add
scas
xor
inc
and
xchg
mov
mov
adc
ds
pop
subb
push
xchg
or
push
mov
sub
arpl
adc
inc
mov
jle
call
jg
int
mov
add
into
mov
dec
stc
add
fadds
cmp
shl
add
xor
sti
sbb
mov
arpl
cmp
orl
xchg
cld
push
pop
mov
mov
pop
add
push
jle
sar
add
or
into
xor
pop
jno
push
and
leave
push
ja
or
rolb
es
sbb
sbb
mov
add
arpl
add
or
add
lds
imul
fldenv
mov
xor
arpl
pop
jp
adc
shll
dec
ss
faddp
or
xor
daa
or
jns
mov
mov
fwait
hlt
subb
stos
mov
pop
cmp
push
or
scas
and
rcrl
in
add
in
cmp
pop
jge
mov
pop
mov
jl
inc
inc
sbbb
mov
aam
inc
and
mov
push
fdivrs
out
dec
mov
out
jp
add
cmp
xor
aam
ds
jmp
dec
into
push
ljmp
push
jne
jmp
and
mov
repz
adc
stos
or
icebp
jge
cmpsb
test
aam
or
or
xchg
hlt
dec
add
jno
shl
add
das
jecxz
mov
sarb
add
adc
and
cmp
or
mov
adc
test
push
cli
test
cld
mov
add
jnp
out
roll
push
fcoms
shl
push
jo
ja
or
lock
cmpb
loopne
imul
mov
imul
add
andb
xchg
and
test
add
fsub
call
daa
in
aad
jo
or
mov
add
push
stos
flds
in
mov
add
sub
pushf
push
mov
les
das
add
stc
push
or
pop
scas
out
add
mov
sub
mov
fs
pop
fmull
add
sub
negl
adc
inc
jl
popa
mov
daa
pop
or
lret
mov
mov
mov
pusha
add
lods
aad
cmp
imul
pop
adc
add
daa
jne
je
shll
and
int3
add
aad
push
sub
insb
sub
mov
xor
lret
cmpsl
test
into
lods
or
loope
fsubrl
fldcw
jmp
lock
jo
cmp
iret
outsl
add
push
xchg
add
fnsave
jns
add
loope
dec
lret
add
data16
jecxz
decb
or
jle
adcb
add
je
and
mov
xchg
push
gs
jecxz
leave
fcompl
dec
lock
icebp
fs
mov
pop
int
mov
sbb
hlt
add
cmp
lret
add
inc
mov
mov
jo
lret
add
in
mov
cli
inc
std
int3
dec
lret
cmp
dec
sarb
xchg
and
dec
sbb
sub
xchg
add
xor
push
and
xor
into
scas
fldl
pop
pop
mov
dec
push
movsb
pop
add
pop
mov
or
mov
add
shll
push
call
pop
mov
xorb
adc
incb
inc
pop
andl
jnp
adc
jno
add
outsb
cmp
fidivl
aad
gs
add
xchg
pop
insl
sub
dec
add
cmpsb
inc
inc
orb
add
xor
pop
imul
add
cmp
enter
es
sbb
nop
add
mov
push
dec
je
rcrl
inc
leave
add
cmc
jnp
rolb
out
dec
or
faddl
inc
dec
mov
movsb
add
or
stos
mov
int3
nop
jo
test
inc
aaa
push
aas
fwait
dec
or
inc
js
mov
add
aaa
mov
jae
cmpl
push
jl
push
test
repnz
xor
shll
push
push
outsb
sarb
push
loop
dec
dec
pop
cmp
enter
out
add
cmc
cltd
jno
cmpsb
adc
add
lods
mov
inc
lock
sbb
xorl
lahf
and
rol
jno
inc
push
lret
lret
rolb
mov
mov
mov
out
aad
push
sub
mov
xchg
cmp
mov
mov
addl
std
jge
xor
cmp
or
or
push
adc
mov
bound
mov
aam
cmp
enter
mov
faddl
cmp
in
mov
frstor
cmp
out
fwait
in
dec
pop
pop
mov
fs
std
or
sti
dec
outsb
mov
lock
test
sbb
insl
mov
push
sahf
incl
cmp
add
lods
nop
fs
inc
pop
orb
dec
add
aas
inc
mov
aaa
lahf
outsb
inc
ss
cld
jbe
mov
sub
int
cmp
add
mov
add
jo
lock
or
push
cmove
pop
cmp
aas
shll
push
or
mov
or
adc
leave
or
jnp
add
add
fs
add
mov
inc
or
inc
divl
push
add
mov
test
sbb
movl
and
jle
sbbb
dec
add
xchg
xor
pop
sbb
pop
dec
ss
xor
ljmp
sbb
in
mov
nop
jae
jmp
popf
arpl
push
aam
sub
inc
or
test
int3
adc
adc
fldcw
add
ja
jl
icebp
ljmp
add
add
das
lea
xchg
xor
icebp
jge
popa
push
add
jecxz
push
add
nop
sub
lods
push
sbb
lock
movsl
add
test
testb
nop
flds
jb
pop
out
aam
filds
jmp
das
mov
rorl
mov
cltd
and
enter
addr16
add
or
loope
sbb
loopne
cmp
cmp
dec
div
roll
push
je
ficomps
rcll
add
cmp
test
ljmp
jle
stc
pusha
and
addb
shll
ss
mov
rclb
mov
dec
xchg
add
cmpsl
cmp
clc
outsl
and
inc
inc
fstps
dec
push
fldl
movsb
out
xor
lahf
add
add
movsl
cs
psllq
fldl
cwtl
repnz
mov
inc
ret
or
pusha
and
js
jge
xchg
outsl
push
sub
add
add
mov
add
mov
pushf
dec
leave
sbb
mov
inc
sbb
push
fcomip
insl
sbbl
add
add
outsb
add
adc
das
xchg
mov
loopne
ret
rolb
add
sub
aaa
add
or
out
push
js
enter
fistps
hlt
int3
mov
dec
out
scas
pop
push
mov
aaa
test
xor
shrb
add
out
sub
mov
insl
push
xor
lods
loope
js
addr16
and
jle
mov
sbb
push
sbb
into
push
or
addb
jle,pt
pop
fcomps
cld
mov
cli
jp
fxam
out
adcl
jno
adc
outsb
jo
add
pop
mov
and
out
call
or
movsb
mov
lods
lock
iret
add
jnp
pop
sbb
aas
push
sub
rcl
add
mov
xchg
psllq
mov
nop
sbb
pop
inc
loope
mov
and
sub
and
pusha
add
les
subb
inc
mov
in
sbb
mov
cwtl
cmp
xorb
cmp
stos
push
cltd
jp
lock
sbb
int
push
les
or
ljmp
cwtl
imul
push
testb
push
pushf
paddusb
sbb
insl
add
mov
js
add
je
mov
push
mov
imul
adc
aas
mov
add
negw
mov
or
stos
sbb
sub
test
fcoms
jo
add
mov
test
jl
int3
je
adcl
sbb
cmc
xchg
mov
in
mov
bound
sahf
imul
shrb
push
xchg
dec
xor
cmpsb
fcmove
or
js
add
or
push
adc
lea
sub
sbb
push
aad
push
dec
call
adc
mov
inc
sbb
adc
xor
jae
loope
ljmp
cmpb
lea
add
repnz
fdivs
iret
sub
rorl
adc
mov
push
sub
mov
out
xlat
mov
rclb
xchg
dec
mov
insl
push
add
out
in
sub
add
mov
cmp
cmpsl
nop
movb
sub
hlt
psubb
stos
mov
xorl
or
enter
push
sub
bound
adc
shrb
add
sti
je
mov
scas
xchg
mov
add
and
cli
cmp
repnz
shrl
add
cli
add
testl
push
push
jbe
rclb
jl
fildll
out
cld
add
mov
rorb
add
adc
mov
add
adc
inc
dec
int3
adc
add
flds
jle
scas
imul
or
mov
lock
or
pop
sub
mov
fcomps
xor
add
pop
fildl
outsl
out
jge
js
add
les
iret
out
flds
add
scas
push
test
movsl
jne
pusha
es
sarb
fcomps
pop
push
sarb
mov
dec
xchg
outsl
pop
je
push
lods
pop
mov
rcrb
mov
pop
or
enter
inc
movsb
pop
add
sub
in
in
mov
lcall
and
jne
add
fistl
lods
pop
int
add
movsl
neg
cmp
push
out
mov
mov
outsl
fsubs
cmp
mov
add
scas
les
mov
add
flds
jno
sbb
add
clc
roll
jge
pusha
test
leave
xchg
stos
inc
sub
push
jmp
pusha
fldl
xlat
lcall
mov
dec
mov
xor
daa
xlat
mov
test
inc
sarb
rol
addl
fyl2x
mov
in
pop
bound
jne
or
dec
aad
inc
add
fildl
test
outsl
data16
out
jecxz
dec
sbb
imul
nop
enter
inc
lcall
sub
push
shlb
xor
mov
jge
pusha
mov
xchg
xor
and
fbld
jno
jns
and
push
add
stos
aas
xor
lret
lahf
pop
push
fcomp
or
ja
mov
adc
adc
jne
lods
add
sti
pop
mov
repz
lret
sub
fidivl
push
sbb
or
mov
sti
fdivl
add
jl
and
sbb
lcall
ds
enter
mov
ds
les
orb
push
loope
nop
sbb
add
in
mov
or
rcl
dec
cmc
dec
int
adc
repnz
push
sbb
nop
push
ss
cmp
insb
adc
sub
mov
cmp
insl
pop
mov
adc
scas
fdiv
jg
pop
out
mov
add
push
and
mov
xchg
dec
out
adc
jmp
xor
dec
lret
lods
or
sub
sbb
mov
out
add
into
jbe
pop
cmp
or
ja
gs
cmp
xchg
pop
add
jnp
ret
int
je
push
cmp
mov
sbb
dec
aad
mov
sahf
pusha
out
adc
dec
cmp
cmp
add
add
jae
adc
pop
dec
jmp
mov
ret
pusha
and
inc
and
and
xchg
mov
aad
push
call
mulb
add
sbb
sub
mov
es
in
lret
xchg
cmp
sub
inc
jmp
mov
shrl
bound
or
pop
cli
mov
mov
stos
mov
push
adc
roll
push
addr16
rclb
bnd
loopne
loopne
mov
xchg
add
adc
xchg
pusha
mov
push
aaa
pushf
mov
fsubl
inc
xchg
xor
cmpsb
jbe
in
adc
movntps
add
mov
cltd
jno
add
ss
mov
into
push
ds
inc
fs
jge
stc
loopne
xlat
daa
testl
adc
jg
mov
jle
dec
mov
or
orps
add
inc
add
leave
pop
gs
dec
cmc
bound
dec
add
pusha
ds
pusha
xchg
dec
add
aaa
rcl
fmul
mov
cmpb
mov
sub
xchg
add
mov
pop
icebp
dec
xchg
add
stos
sbb
pop
push
pusha
inc
and
mov
add
lcall
bsf
cmp
outsl
mov
sub
add
mov
cmpsb
rdmsr
stc
gs
lea
in
mov
cmp
xor
and
call
imul
aam
add
or
adc
xchg
inc
js
cld
mov
sub
jb
stos
fwait
lock
pop
andb
or
pop
fstps
inc
sub
mov
cmp
mov
adc
hlt
std
add
lock
jg
fcoms
mov
repnz
add
jge
sub
dec
arpl
jae
mov
dec
inc
int3
out
jle
add
add
xor
stos
add
lds
arpl
push
push
out
in
adc
repnz
rcrb
call
sbb
rcrl
out
jp
add
cmp
nop
loop
mov
push
je
dec
add
sub
bound
les
dec
shrb
daa
cmpb
rorl
pop
and
dec
and
clc
rolb
cwtl
clc
xor
dec
lods
iret
imul
mov
outsl
adc
test
sahf
insb
jb
out
push
sbb
adcb
jmp
inc
push
sub
sahf
sub
mov
and
je
inc
or
sub
push
jmp
xlat
ja
pushf
inc
dec
mov
jno
leave
aaa
pusha
push
enter
xorb
out
mov
jbe
add
pop
xchg
add
or
mov
mov
cmp
add
loope
pusha
fnsave
add
jb
je
test
nop
int3
insl
dec
jmp
fsts
stos
add
fadd
or
aad
or
in
mov
dec
add
push
repnz
shlb
incb
pushf
insl
lock
jmp
dec
shll
cmpsl
shll
aam
ficoms
lea
add
pop
or
ret
cwtl
mov
xor
jns
or
or
adc
cmp
faddp
pop
lock
fwait
sub
dec
fcoml
mov
sub
mov
or
into
es
and
add
lahf
pusha
add
push
out
fmull
sub
pop
xor
adc
mov
movsb
ficoms
adc
push
push
cli
int3
loop
dec
sbb
push
pop
push
and
xor
jp
icebp
aad
adc
scas
mov
add
flds
sti
test
in
jae
inc
js
jnp
std
add
push
lret
and
lods
add
outsb
leave
movsb
add
mov
cmove
xchg
add
out
jg
outsb
inc
lret
and
stos
push
cmp
inc
jo
mov
xor
add
stos
dec
and
insb
mov
add
out
pop
inc
dec
mov
add
fwait
pop
mov
push
dec
mov
int3
shlb
sub
subl
ds
xchg
pushf
hlt
pop
adc
clc
xchg
and
jg
ud0
call
cmp
pop
sub
push
sub
add
cmp
bound
nop
and
inc
add
lods
add
fstpl
bound
scas
or
dec
shll
mov
add
mov
aas
jns
pop
add
shlb
jo
nop
cwtl
add
in
loop
cmp
ficoms
repz
xchg
add
imul
adcl
aam
adcb
push
and
mov
and
adc
or
stc
outsb
inc
leave
or
loope
sub
ljmp
fildll
add
jns
pop
leave
loopne
popa
mov
cwtl
push
add
aam
ja
fs
add
lea
pmulhuw
mov
mov
or
lahf
loop
add
add
insb
or
add
cmpsb
xchg
and
subb
stc
jl
mov
out
mov
jnp
jge
daa
sbb
sbb
add
jmp
push
sbb
mov
int
lods
add
fcompl
hlt
loopne
pop
loopne
cltd
stc
dec
test
push
cmovge
aad
repz
jae
movsl
out
or
mov
insb
jnp
mov
or
out
psrld
add
jp
lret
sub
pop
inc
scas
or
add
xchg
paddsw
xchg
jg
jbe
enter
je
xchg
cmp
lods
xlat
mov
data16
shl
jmp
imul
add
fucomp
pop
and
stos
inc
cmp
int
pop
or
ss
addr16
out
icebp
pop
add
dec
sub
stos
sbb
pop
call
mull
pop
push
mov
loope
imul
nop
cmp
add
mov
cmp
clc
push
wbinvd
loop
xor
sub
mov
add
adc
adcb
nop
fcompl
and
xor
mov
scas
cmp
cmp
in
sbb
inc
cmp
mov
les
repz
ljmp
push
cltd
outsb
sub
jg
push
mov
add
leave
call
ret
sub
mov
xor
int
es
add
movsl
jmp
aaa
test
mov
or
add
add
sbb
std
lret
lahf
mov
add
pusha
add
dec
popf
je
movb
mov
xor
fcom
es
push
testb
sbb
mov
jmp
shr
pop
cwtl
testb
das
je
mov
mov
enter
push
mov
push
cwtl
push
jmp
icebp
add
imul
xchg
insb
dec
or
insb
cmpb
or
pusha
imul
iret
fwait
or
push
xor
xor
mov
push
aas
ret
enter
cld
outsb
add
subl
fidivs
add
lock
pop
jecxz
add
push
arpl
sub
dec
cmpsb
in
or
fstpl
pop
imul
pusha
push
xor
lret
add
daa
pop
cmc
ljmp
mov
add
das
call
mov
imul
sub
int3
cmp
sub
mov
sbb
add
test
adc
ret
into
dec
aas
inc
aam
ja
and
add
loop
in
pop
dec
add
xchg
mov
xchg
lock
jmp
mov
dec
rol
hlt
movl
add
scas
fldl
or
mov
add
imul
and
movsl
pop
jo
shlb
add
lahf
scas
push
pop
sub
sub
inc
inc
lret
adc
sbb
mov
pop
add
mov
and
lahf
mov
imul
imull
pushf
outsb
mov
fldl
jne
sbb
ficoml
addr16
mov
clc
shlb
push
jo
popa
add
loopne
pop
xchg
outsl
fs
cs
cld
or
pop
or
pop
in
xchg
mov
dec
or
add
cmp
sahf
test
inc
jo
sbb
adc
or
add
dec
ret
addr16
add
sub
fnclex
xor
lods
add
dec
adc
out
add
fwait
mov
and
mov
mov
pop
je
sbb
and
in
out
xorb
add
add
sbb
add
xlat
in
sbb
push
jno
xor
mov
cwtl
pop
jae
jecxz
je
arpl
popf
sbb
clc
leave
stos
subl
popa
cmp
add
in
mov
jp
cli
xor
add
pop
xor
cwtl
pop
pop
add
test
jmp
add
jle
outsl
mov
pop
jp
loopne
jo
or
fadds
test
push
or
add
mov
jbe
rclb
mov
rol
loopne
xor
hlt
sub
mov
pop
push
dec
iret
je
les
cmp
dec
rcrl
repz
mov
test
into
pop
pop
outsb
inc
outsl
leave
stc
cmp
xor
mov
add
adc
lret
es
push
mov
mov
jo
and
pop
sbb
lret
xorb
sbb
xchg
aaa
mov
add
mov
or
add
mov
test
sbb
adc
sbb
jp
cmp
ja
bound
xchg
into
faddl
or
loopne
push
aam
xchg
xchg
mov
pusha
aaa
adc
movsb
std
sub
sbb
cwtl
mov
push
dec
inc
xchg
fsubrs
add
cmp
aam
pop
inc
jo
enter
push
jns
testl
sub
stos
scas
pop
xchg
setle
sbb
and
add
adc
rcrb
ret
mov
fs
loopne
adc
and
das
push
mov
sbb
and
xor
pop
adc
repnz
js
loope
fsub
rcrl
pop
cli
xor
sub
pop
pusha
dec
loopne
int3
lock
jns
stc
arpl
sbb
and
push
add
repnz
jns
or
pusha
ret
or
shrl
dec
pop
adc
add
adc
lahf
jl
add
loop
mov
mov
enter
add
popa
outsb
pop
cmp
aas
jne
sub
jp
push
cmp
out
bound
add
xchg
cwtl
fs
aas
lds
add
push
int3
add
sbb
scas
push
call
push
mov
stc
add
ja
add
or
in
leave
addb
push
popf
lods
jmp
popa
xchg
add
in
mov
mov
add
cltd
lahf
fs
movsb
dec
or
and
cwtl
or
add
xchg
adc
mov
lcall
and
out
arpl
add
shlb
xlat
sub
or
ljmp
adc
decl
rclb
push
lcall
pop
cmpsb
or
sbb
cmp
divb
xchg
stos
inc
fiadds
pop
sbb
adc
lahf
arpl
das
xorb
call
ret
adc
popa
cmp
les
sub
add
inc
bound
iret
scas
test
pop
ss
shr
dec
jg
pop
mov
xor
pop
addr16
mov
pop
sbbl
push
add
ret
xor
add
jns
sbb
inc
loope
pop
out
mov
lcall
repnz
add
pop
jae
pop
jbe
add
icebp
jo
test
insl
add
es
cmp
and
inc
sub
mov
pop
fadds
mov
or
xchg
sbb
pop
fidivl
dec
aam
js
loop
mov
sbb
add
dec
cltd
loopne
push
inc
add
mov
lock
in
pop
dec
int3
add
ficoml
xor
xor
mov
add
in
inc
repnz
mov
lods
lahf
xchg
lcall
hlt
fsubl
loop
out
loope
sbb
or
addb
stos
sub
mov
adc
sub
ret
mov
inc
add
push
mov
cmpsl
cmp
shrb
jecxz
gs
cwtl
add
cs
pop
or
sub
cwtl
jp
fsubl
stc
out
add
push
xchg
cmpsb
and
push
jb
daa
dec
cmp
sub
pop
xchg
stos
sub
mov
dec
movsb
dec
cmp
stos
out
sahf
sbb
pop
pop
adc
add
sbb
dec
add
xlat
pop
imul
nop
gs
jmp
mov
sarl
ja
cmp
xchg
loop
fstl
pop
out
iret
push
clc
call
aas
adc
dec
push
cmpsb
roll
xor
dec
push
imul
repz
sbb
clc
int3
jo
push
dec
movsl
jb
movb
int
lock
xor
shr
fdivp
jnp
push
movsb
sbb
out
out
add
mov
arpl
gs
ja
jmp
sbb
add
adc
rorl
cmp
add
add
arpl
add
pusha
xchg
mov
add
out
fldcw
push
add
cltd
movsb
push
jl
jge
cmp
mov
push
mul
sbbb
jno
xor
mov
in
or
jnp
cld
icebp
dec
inc
add
jge
sbb
lret
out
fsubrl
adc
mov
shlb
leave
add
pop
fistl
xchg
rcrl
shlb
out
repnz
mov
and
dec
mov
or
add
mov
negb
cltd
sub
int3
in
fisubrl
push
pusha
and
adc
jne
adc
fwait
mov
jmp
add
loope
adc
add
dec
mov
loop
sub
pushf
inc
mov
and
lock
nop
movsb
xchg
adc
push
mov
std
pop
add
sub
add
cmp
add
rorl
pop
dec
jnp
imul
je
shl
add
push
mov
and
lds
test
and
scas
insb
xchg
movsl
bound
pop
sub
pushf
and
imul
dec
aam
or
add
scas
or
clc
popl
lret
sub
jmp
out
cmp
jns
and
or
sar
hlt
add
pop
sub
or
sub
jp
rorb
add
ja
cmp
mov
add
jg
jecxz
push
aad
pop
inc
adc
add
mov
add
add
dec
push
pop
sbb
test
push
sub
aam
out
jb
add
cmp
cmp
pop
fiaddl
push
fistl
incb
lret
pusha
push
leave
cltd
mov
pop
cmpsl
fmull
out
pusha
mov
adc
cmp
adc
or
add
jle
add
lcall
push
push
adc
je
mov
xor
cmp
orb
mov
jg,pt
add
rorb
mov
clc
fs
pop
fcmovne
or
fsts
dec
sub
xor
int
inc
cmp
or
test
cmpsb
adc
stc
add
repz
add
hlt
shlb
sub
pusha
fwait
or
pop
mov
jbe
mov
imul
pusha
mov
push
iret
or
mov
fwait
into
sbb
lods
xor
std
xor
shlb
or
iret
xor
into
test
jne
sbb
js
or
lods
or
pop
sbb
xchg
pushf
loope
imul
mov
shlb
dec
push
push
add
sub
mov
inc
xchg
and
inc
mov
and
cmp
pop
jnp
rcr
and
roll
packsswb
mov
mov
add
jmp
and
or
es
xorb
addl
or
inc
xor
inc
aam
in
cmpsb
inc
add
je
dec
insl
setb
add
add
bound
addb
push
mov
or
sbb
mov
mov
add
or
jmp
xor
ss
sbb
sti
insl
std
fcomip
add
xor
enter
add
push
push
fsubrl
fcoms
clc
sbb
stc
xchg
add
movsw
lods
jns
xchg
std
pop
adc
xchg
push
mov
push
sbb
add
adc
and
xchg
dec
jo
add
sbb
decl
faddl
mov
mov
add
dec
pop
pop
fstl
bound
in
push
inc
mov
fmul
pop
jb
sbb
fidivrl
shll
adc
mov
adc
xchg
and
cmp
aas
addr16
dec
out
add
lea
cmp
std
lcall
hlt
sub
mov
testb
mov
jp
add
sbb
jno
addl
push
mov
mov
movsl
aad
test
sbb
movaps
dec
lcall
mov
cmp
adc
dec
push
push
jge
jnp
pop
loope
mov
sub
andb
rcrl
inc
xchg
das
adc
jno
jg
mov
lock
add
and
scas
aaa
scas
mov
gs
inc
ud1
mov
dec
cmc
push
fcmovnu
mov
adc
andb
loope
jno
call
sub
scas
and
lret
aas
stos
jae
pusha
ret
mov
add
bound
repz
mov
push
fadds
add
je
or
jno
adcb
sbb
outsl
out
or
add
xchg
adc
aaa
icebp
add
cmp
loopne
push
in
rorl
cli
sbb
pop
mov
fdivs
add
lea
sbbl
mov
push
add
mov
add
mov
fsubr
sbb
adc
and
sub
pop
test
shll
jbe
aam
fldl
sbb
push
cmc
add
jne
jo
es
add
sbbl
sub
lahf
dec
cmp
fimull
aas
cmpl
lock
gs
nop
sub
mov
add
inc
fbld
aad
dec
lahf
add
adcl
fldenv
add
adc
mov
sbb
icebp
dec
cli
in
aas
pop
adc
cmc
daa
inc
jb
sub
inc
cmp
push
and
lods
popa
inc
test
xor
mov
jmp
pop
xor
fisubl
pop
lods
add
or
lret
mov
mov
fcmovnb
fidivl
xchg
in
xor
orl
push
rcrl
cli
inc
add
adc
aaa
lret
jnp
push
mov
xchg
add
pop
pop
mov
jl
pop
add
cmp
mov
repnz
icebp
in
cli
dec
fisubrs
or
pop
int
push
push
xchg
cmc
pushf
dec
add
lock
and
push
or
mov
cld
inc
add
and
mov
sti
pop
mov
addb
and
outsl
movsb
mov
rorb
lods
inc
sub
add
jno
adc
test
mov
pop
push
test
dec
mov
sti
mov
dec
inc
lods
loop
pop
adc
ret
jnp
add
out
mov
nop
cwtl
mov
sub
and
fucomp
mov
push
pop
shl
add
loope
push
mov
and
mov
iret
ret
dec
jne
push
fstpt
test
pop
xchg
int3
shll
push
pop
movsb
sub
rcl
es
dec
inc
cmc
push
pop
leave
pusha
adc
push
add
test
adc
cmp
scas
add
int3
fmuls
insb
nop
inc
xor
xor
push
test
insl
push
xorl
jl
stos
cmpb
dec
pop
out
ret
hlt
mov
jle
lahf
fs
sub
shll
jg
add
div
gs
lea
add
into
aam
mov
add
pop
push
fwait
push
sub
and
test
out
sbb
scas
int
push
orb
addb
popa
cli
inc
push
andb
jl
ficoms
add
orl
and
clc
pop
jnp
jns
add
push
adc
rclb
sbb
int3
cmp
js
mov
insb
dec
dec
jo
jno
add
mov
stc
add
cmp
dec
int
addr16
shlb
add
adc
repnz
xor
ja
cmp
setl
addl
vmovaps
push
pop
out
xlat
add
mov
adcb
pop
push
cs
rep
orb
ret
or
and
cmc
add
dec
inc
lds
mov
call
adc
xor
mov
jle
call
adc
pop
cmpsb
in
push
cwtl
mulb
or
push
xorb
sar
aad
cmp
add
push
jb
jno
add
mov
fiadds
adc
outsb
jne
cmp
inc
mov
lods
add
adc
incl
jl
out
stc
push
mov
mov
jo
mov
add
pop
scas
imul
lcall
jae
cmp
fldcw
pop
jno
mull
shrl
mov
inc
clc
mov
and
push
mov
roll
stos
xor
jp
adc
pop
dec
das
dec
mov
clc
rolb
test
pop
rcrb
imul
dec
popa
in
lret
lret
sbb
mov
or
loope
cltd
jg
imul
jae
inc
pop
lret
xlat
inc
push
push
mov
insb
andl
testl
push
inc
adc
repz
xchg
sub
bound
inc
inc
add
gs
call
pusha
dec
pop
sbb
scas
ret
add
pop
aaa
mov
jp,pt
cld
mov
cmovp
leave
repnz
sti
loopne
mov
test
fisubrs
add
jecxz
xor
test
xor
sub
xor
add
sti
sub
rolb
cmp
mov
inc
in
mov
pusha
pop
sbb
iret
xchg
in
or
aas
dec
add
push
sbb
in
aam
add
xchg
pop
clc
out
jge
add
mov
add
add
lock
loop
insb
sbb
add
data16
adc
imulb
or
or
shrb
fidivrs
dec
roll
repz
paddusb
add
call
ja
mov
sbb
mov
loopne
movhps
dec
pusha
xor
push
cli
and
aas
sahf
mov
cmp
add
pop
sbb
adc
mov
add
mov
rcrb
fisttps
aas
adc
adc
and
mov
adc
and
sbb
cmpsl
test
loopne
pushf
mov
push
cmpl
jle
add
sbb
or
xor
sbbb
add
test
jns
pop
out
addr16
in
mov
push
sbbb
or
lds
mov
out
mov
pusha
cmc
int3
pand
sahf
in
jle
pop
xchg
add
inc
jbe
pop
jns
test
inc
mov
data16
mov
add
cmpsb
push
push
add
add
add
popa
icebp
loope
pop
ret
mov
les
filds
js
pop
stos
lods
cmp
adc
push
lea
fs
add
adc
aaa
and
pop
in
add
rcrb
arpl
stos
mov
clc
pop
outsl
loopne
testl
insb
out
shl
test
sbb
mov
sub
cld
lret
ds
andb
mov
jmp
lds
int
jo
testb
shlb
xor
and
and
ficoms
push
dec
add
cs
xchg
lods
lret
jge
inc
hlt
dec
test
fucomip
daa
adc
mov
fucomi
add
mov
push
sarl
ds
fsubrl
scas
xchg
adc
jmp
mov
mov
mov
shll
mov
cmc
inc
add
and
addl
int
cmp
in
mov
push
jl
dec
add
dec
jo
pop
jmp
xchg
sbb
pop
in
mov
and
add
pop
inc
push
sbb
mov
jno
inc
jae
push
push
xor
icebp
mov
pop
dec
fstp
fiadds
xchg
in
imul
pop
push
punpcklbw
mov
lea
mov
cwtl
pushf
add
dec
js
cmp
mov
jg
clc
inc
add
jmp
mov
sbb
pop
mov
cmp
inc
add
mov
jmp
add
nop
lea
add
pop
inc
sbb
add
push
add
ficompl
scas
pop
repnz
xchg
xor
push
mov
add
xchg
and
push
push
mov
push
pop
add
xchg
add
inc
inc
out
negb
push
cld
push
add
in
enter
inc
add
xorb
imul
push
add
imul
jb
cwtl
sbb
dec
lock
mov
dec
add
aad
and
add
cmp
add
ljmp
mov
mov
je
lcall
mov
add
jp
mov
sub
lcall
adc
test
add
jb
icebp
pop
add
sbb
push
test
push
sbb
ret
adc
outsb
jp
inc
inc
mov
enter
adc
push
xchg
add
out
add
add
mov
and
enter
mov
out
mov
in
dec
loopne
test
cmp
jo
mov
subl
push
sbb
call
inc
adc
aaa
and
jae
xchg
mov
xchg
sub
push
push
cmp
sub
pop
cwtl
add
arpl
cmpsl
fisubl
inc
inc
add
test
push
add
bound
sub
xchg
cmpl
xor
shr
add
lds
or
inc
es
jno
add
xchg
orl
push
inc
popa
sub
xchg
mov
stos
or
sbb
movsl
add
popa
pop
daa
pop
sub
adc
movsb
testl
cmpsl
add
sub
lret
insl
and
fwait
push
fimull
mov
cmp
xchg
pop
add
rol
and
lcall
xor
cmp
cwtl
dec
aas
mov
xor
loop
add
inc
xor
adc
adc
ljmp
pop
and
push
sub
dec
mov
nop
mov
dec
fs
xchg
in
inc
cwtl
or
incb
sarb
mov
outsb
out
shl
mov
and
cmp
mov
jns
rolb
sbb
insb
add
clc
roll
jge
dec
add
pop
xchg
mov
mov
stc
sub
shlb
test
mov
aas
lock
and
jbe
inc
xlat
push
cmpl
pop
cmp
add
mov
std
clc
mov
sarl
pop
inc
in
mov
inc
mov
pop
jns
lods
ret
sbb
push
xchg
shrb
fdivrl
mov
add
cmc
fldcw
add
shlb
fs
xlat
aaa
repnz
mov
dec
pushaw
mov
cli
stos
out
loopne
dec
pop
testl
mov
xchg
pop
fmull
and
sub
iret
push
insl
pop
nop
or
mov
fldt
add
push
stc
sub
xlat
xchg
xchg
out
pusha
lods
shlb
mov
add
jecxz
lods
lret
push
sub
sbb
add
jl
sub
xchg
mov
in
push
mov
pop
jle
ret
inc
pop
nop
xor
add
in
sbb
jb
push
std
xlat
loopne
dec
xor
dec
xor
out
cmpsb
xchg
clc
dec
inc
mov
ljmp
add
cmp
and
push
adc
mov
out
shrb
pop
je
std
fxch
aas
iret
xor
dec
gs
sub
mov
les
fdivs
push
clc
jb
cli
mov
jns
pop
mov
out
cwtl
outsb
adc
add
ds
xor
dec
mov
add
add
xchg
test
add
jmp
cmp
shlb
add
add
cmp
and
mov
fsubs
xchg
and
popf
lods
cmp
add
mov
cmc
les
and
rolb
js
add
andb
mov
pop
in
les
add
cmc
sbb
ljmp
arpl
popa
movsb
scas
cmp
loopne
stos
sbb
movsl
cmpsl
mov
and
test
outsb
pop
cmp
mov
adc
jle
subb
jnp
dec
and
add
in
sbb
pushf
add
cmc
iret
adc
push
shll
ja
cwtl
jno
lret
xchg
mov
push
or
sbb
in
add
jnp
pushf
insb
cmpsb
sti
pop
mov
or
fistps
adc
add
andl
mov
mov
lret
inc
jp
add
push
outsb
popf
aaa
add
jg
mov
stos
sbb
mov
enter
into
mov
push
jge
nop
push
and
mov
or
jg
mov
add
ret
cmp
dec
mov
std
sub
flds
pop
xchg
or
pushf
scas
jp
xor
mov
xchg
rcl
add
and
data16
push
cwtl
lcall
icebp
add
sub
mov
add
cmpsl
inc
bound
mov
xchg
enter
jp
jno
dec
lods
add
aas
icebp
jo
push
lds
mov
gs
sbb
test
cmpsb
jg
pop
and
insb
push
mov
stos
pop
and
or
pushf
arpl
add
call
inc
and
outsb
add
pusha
push
sbb
mov
test
push
mov
js
ret
into
decb
sahf
rorb
in
push
inc
pop
jp
cmp
add
aam
add
decb
pop
add
outsb
repz
mov
mov
or
mov
cmp
pushf
iret
cld
add
mov
mov
inc
add
sub
pop
and
and
sub
ret
ud0
scas
in
jo
inc
add
xchg
mov
add
mov
mov
mov
dec
sub
cmp
cmp
push
pop
add
xor
movsl
sub
clc
xor
add
jo
and
rolb
xor
sbb
mov
roll
cmp
inc
aaa
insl
mov
add
aam
in
int3
clc
je
add
ret
lds
and
jo
xchg
inc
push
jno
add
push
add
fisttpll
xchg
sub
lea
cmp
push
bound
test
xor
sub
ret
add
jns
in
cmpb
pop
cmp
xor
inc
jbe
jge
add
into
lock
scas
movsl
xchg
add
icebp
cwtl
pop
fldpi
add
out
jecxz
sub
mov
int
arpl
jo
jl
xchg
aad
mov
daa
inc
pop
adc
jns
out
pop
pop
mov
adc
imul
je
push
mov
pop
jo
loope
outsb
xchg
fsubrs
and
xor
add
pusha
cmpsb
sub
cmp
mov
stos
test
data16
ljmp
push
out
cmp
das
or
pop
fwait
push
jnp
mov
mov
inc
pop
mov
fs
push
lods
js
mov
adc
pop
fs
cmc
pop
jge
out
push
sub
pop
push
mov
or
adc
or
enter
jo
mov
fdivrs
push
dec
js
add
aam
sbb
or
jp
mov
adc
fs
scas
cmp
enter
dec
movsl
add
inc
cmp
or
xchg
insl
hlt
or
repnz
outsb
in
push
sub
mov
xor
loopne
adc
mov
mov
mov
in
pop
sub
cmp
movb
inc
mov
add
stos
fbld
popf
loope
xchg
lods
adc
andl
cwtl
fcom
inc
add
xchg
jl
pop
jb
movb
mov
mov
loop
sub
jecxz
add
sub
add
loop,pt
or
movl
xchg
cmpsl
mov
sbb
inc
cmp
nop
movsb
roll
pop
push
leave
ljmp
je
cmpsl
mov
dec
test
xchg
jbe
and
add
std
mov
in
inc
xchg
icebp
sbb
or
iret
ss
xchg
subb
aad
mov
dec
add
adc
mov
add
mov
enter
mov
or
cmp
in
int3
stos
jp
pop
out
pop
ja
mov
jmp
sbb
xchg
movsb
xchg
rorl
or
mov
sub
lea
add
nop
inc
dec
or
push
xorb
adc
inc
inc
cld
pop
hlt
std
add
jo
or
xor
mov
add
call
xchg
sub
xchg
xor
cmpsl
addb
cmp
add
and
sbb
addb
dec
push
repnz
movsb
sub
sbb
movsl
sbb
es
or
add
ss
inc
push
test
lret
out
jecxz
rorl
mov
popa
pop
fidivs
cs
rolb
inc
test
xor
dec
sub
push
mov
fwait
pmaddwd
les
pusha
cmp
cmpsl
xchg
lds
nop
iret
sub
sbb
icebp
push
pop
xchg
add
mov
mov
rcr
cs
hlt
test
xlat
pop
sbb
xchg
cmp
xorb
dec
add
iret
das
filds
lods
xor
jg
xor
rclb
insb
add
xor
adc
xchg
add
cmpsl
jg
cwtl
jge
out
add
inc
orb
push
insb
or
enter
sti
mov
jne
ret
pop
or
sbb
stc
cmp
sub
pop
mov
subb
shlb
mov
xor
loopne
std
mov
mov
xchg
add
mov
sbb
bound
imul
and
or
pop
fadd
je
add
sub
sarl
sub
add
cmpb
mov
jp
xor
rorb
test
push
subl
outsl
ds
add
clc
xchg
xchg
addl
js
pop
ret
add
mov
jecxz
push
jbe
add
sti
gs
cmp
les
mov
lret
out
ljmp
dec
adc
xchg
pop
aad
pop
add
mov
test
inc
shr
testb
cwtl
push
cltd
add
hlt
sbb
inc
mov
fsubp
test
js
popl
lock
sbb
mov
mov
push
lcall
push
or
aas
fsubs
dec
cmp
xor
pop
sbb
imull
and
add
hlt
clc
pop
inc
xchg
add
loop
mov
cmp
inc
add
add
lret
mov
xchg
popf
add
fidivs
repnz
pop
mov
mov
ljmp
in
mov
ja
xchg
lods
push
data16
dec
add
scas
enter
add
insl
fadd
dec
hlt
add
add
sbb
xor
popa
packuswb
imul
in
dec
and
sub
int3
popl
subb
mov
mov
nop
jl
into
cmpsl
push
sbb
fistpll
push
or
lcall
mov
js
test
outsl
je
sbb
and
aad
jp
mov
in
lea
xchg
add
ret
and
xchg
lret
adc
sub
pop
lcall
add
stc
push
lods
mov
add
pusha
pushf
rol
sub
lcall
mov
pop
data16
adc
lods
and
outsl
and
add
push
dec
and
or
add
in
movsb
test
fisubs
sarb
cwtl
mov
loopne
std
out
add
fldl
xchg
sub
pop
add
cld
sahf
and
bound
ja
lods
add
aaa
jns
or
popl
sub
cli
add
pop
fdivs
mov
add
xchg
mov
xor
outsl
dec
mov
pusha
cmp
repz
push
ss
dec
pop
rcl
cld
add
pop
in
sub
mov
xchg
movb
test
cmp
push
fistl
fisubrl
andb
call
xor
and
push
mov
add
mov
mov
xchg
data16
stos
ja
pop
adc
lods
ret
xor
xor
in
sbbb
add
jecxz
mov
push
fwait
lock
sbbl
outsl
subb
lret
ljmp
add
jnp
and
mov
int
nop
sahf
cmp
add
lcall
jb
ja
clc
or
add
addr16
jne
ljmp
cmpb
pusha
add
mov
dec
push
out
or
testl
jle
pop
test
push
add
jo
adc
test
jp
jge
test
test
scas
aas
aad
test
fs
mov
incl
push
mov
mov
push
outsl
out
or
or
jbe
push
add
sbb
ja
pop
sub
aad
add
mov
adc
sbb
add
popf
aam
add
out
in
mov
inc
jmp
mov
test
cmp
add
add
xchg
or
icebp
out
addl
mov
fiaddl
rclb
add
xor
adc
xor
rcrb
add
js
jle
dec
mov
ret
mov
adc
inc
and
add
js
popf
scas
movsb
aas
adc
loop
add
inc
imul
pop
or
add
mov
jg
jne
xchg
mov
cmp
cwtl
add
mov
mov
sub
sbb
mov
inc
aas
out
mov
lahf
in
fstps
and
push
cwtl
movsb
xor
mov
add
test
pop
addb
adc
jno
inc
push
xchg
in
pop
xchg
jp
sbb
add
outsb
inc
mov
lret
push
add
test
dec
sub
sub
adc
popf
add
std
sbb
mov
out
sub
out
pop
add
jae
in
mov
xchg
pusha
xor
push
add
mov
cmc
add
mov
pusha
push
add
mov
rcrb
fnstenv
push
add
ret
insl
push
or
add
cmp
inc
clc
fs
push
fisttpll
cmpsl
inc
fisubrl
xlat
or
std
clc
add
add
pop
mov
in
shlb
and
mov
xor
add
ss
mov
in
or
pop
flds
sarb
push
fcomps
int
dec
test
shll
push
inc
repz
sbb
push
in
mov
add
jo
mov
jnp
hlt
enter
fwait
dec
xor
roll
push
orl
shr
dec
dec
inc
pop
inc
push
notl
cmp
add
outsb
insb
adc
cmp
loopne
mov
stos
and
cwtl
lcall
add
in
dec
cld
jg
mov
sti
dec
xor
add
repnz
sbb
je
movsb
pusha
dec
xor
fisttps
cld
fcmovnu
mov
add
sbb
cmp
dec
jnp
mov
addr16
add
mov
pop
jbe
cld
push
arpl
add
add
dec
or
shll
into
inc
sub
inc
mov
xchg
or
inc
enter
mov
adc
shrb
ja
or
pop
cmc
stc
xchg
xchg
add
add
jo
leave
add
cmp
icebp
or
add
jnp
and
add
aad
jl
jmp
push
loop
fdivl
loopne
test
push
add
jno
int3
sub
fwait
in
testb
pop
cwtl
pop
push
or
outsb
jp
sbb
ja
add
pop
lret
mov
cmp
loop
dec
cmp
mov
insl
pop
push
ja
jle
cmc
and
int3
imul
adc
sbb
in
nop
push
ror
sub
aaa
in
in
mov
data16
mov
sub
jecxz
and
lods
dec
adc
add
ljmp
pop
push
jge
push
pop
sub
insl
jnp
js
mov
add
lods
mov
mov
jecxz
scas
or
nop
push
rorb
xchg
in
and
daa
sub
mov
loopne
mov
cmp
lods
pop
mov
add
xor
sub
stos
mov
scas
add
negb
sbb
adc
pop
ss
imulb
lods
fwait
push
out
lock
js
daa
movsl
add
mov
pop
cmpsl
cmpl
test
or
dec
push
pop
andl
jl
jmp
sbb
xchg
mov
add
jno
icebp
cmpsl
mov
mov
sub
mov
bound
add
cmp
add
push
and
pop
mov
inc
and
add
add
sbb
test
pop
out
sub
mov
mov
add
cmp
mov
fdivl
cli
jle
pop
add
jecxz
jo
dec
or
das
cltd
pop
fs
cli
push
dec
add
in
in
cmovle
sti
cmp
pop
call
idivb
mov
inc
adc
cmpsb
dec
add
mov
sarb
cmp
add
mov
insb
inc
loop
push
mov
or
rolb
orb
and
lret
ljmp
mov
fs
xchg
push
test
stos
inc
jno
dec
jno
jl
outsb
mov
loop
jg
ljmp
sub
jno
addr16
or
sbb
in
mov
sarb
push
xchg
mov
lock
push
jecxz
inc
mov
je
dec
das
push
loope
fldcw
test
test
push
lcall
inc
fldl
dec
hlt
xchg
add
iret
js
orb
mov
mov
fldcw
cmpb
sbbb
mov
in
add
mov
sbb
std
ja
movsl
pop
arpl
outsb
adc
inc
cmp
subb
push
ror
sbb
push
or
add
fistpl
test
add
add
les
andb
loop
and
outsb
outsl
dec
dec
loopne
adc
ficomps
jb
je
jo
cwtl
xor
push
and
cmp
adc
jb
xchg
add
xor
adcb
xchg
shrb
jle
add
pop
cmp
popa
xor
lret
not
add
sbbb
ds
sbb
dec
rolb
pcmpgtw
jl
sub
test
enter
xor
mov
movsb
shl
mov
sub
xor
repz
dec
push
mov
pop
xchg
bound
xor
clc
pop
xor
pop
adc
adc
inc
jo
out
jo
xor
dec
push
out
rolb
hlt
fdivrs
jg
xor
dec
movsb
ficoms
aam
pop
aad
or
mov
insl
movsb
aam
jne
push
lahf
xor
in
jmp
mov
mov
test
gs
inc
fs
sub
dec
sbb
push
mov
cwtl
add
or
mov
inc
sub
lock
insb
add
cmpsl
xchg
add
pminub
sub
pop
and
cmp
pop
cmp
inc
gs
pushf
out
pop
push
jle
inc
and
stos
mov
xor
dec
roll
sbb
sub
jg
ja
add
mov
sub
xchg
sub
xor
and
js
lds
xor
sub
sub
sub
and
mov
test
add
sbb
in
testl
push
stos
hlt
and
push
loopne
or
and
shlb
test
cmp
pusha
imul
das
mov
xchg
in
add
xor
repz
shrb
pop
and
xorl
filds
cmp
mov
test
xchg
or
aaa
sbb
push
push
fwait
or
adc
pop
cmpb
xchg
js
pop
cmp
add
nop
jp
in
pop
sbb
cmp
mov
jno
outsl
hlt
dec
adc
sbb
test
push
mov
pop
aas
dec
jecxz
jne,pn
pop
pop
and
stc
pop
xor
pop
pop
test
xchg
xor
mov
mov
fildll
add
ds
or
and
shll
or
adc
push
mov
add
lock
add
or
gs
and
push
inc
mov
out
add
jecxz
test
fdivs
outsb
adc
rclb
pushf
xor
push
pop
roll
mov
outsb
cmp
movsb
lds
sbb
neg
push
rcll
mov
sub
mov
xor
sub
into
das
stos
jae
push
mov
shrb
shlb
and
and
das
xchg
out
mov
shrb
adc
aam
hlt
js
lahf
mov
iret
cs
xor
jbe
dec
and
and
pop
xchg
cli
dec
and
arpl
adc
sti
and
ret
bound
outsb
mov
pop
leave
testb
jo
add
add
add
mov
aas
push
sub
pop
sbbb
sbb
mov
loopne
into
cmp
dec
inc
jnp
xchg
lock
iret
sbb
mov
xor
shrl
mov
xor
lods
movsl
pop
aad
inc
jo
jns
or
enter
dec
dec
clc
shrb
mov
mov
dec
and
aaa
add
in
dec
push
xor
pop
xchg
fisttps
fsubl
mov
es
pusha
cmp
std
sti
push
out
ljmp
je
int3
movsb
in
pop
outsl
hlt
subb
stos
add
pushf
scas
push
pop
orl
in
and
in
cmpsl
lea
cmp
clc
and
adc
or
inc
inc
cmpsl
mov
xor
stos
adc
xor
inc
jecxz
add
xsavec
aam
test
or
insb
fdivs
add
add
mov
mov
and
nop
mov
andb
xchg
aaa
cld
jo
enter
xlat
bound
popf
daa
rcll
pop
sbb
lock
lods
lahf
dec
fwait
adc
xchg
imul
xchg
pop
inc
and
mov
add
mov
stos
das
adc
movsb
incb
jo
mov
ss
push
pop
mov
loopne
add
jbe
pop
add
gs
bound
jae
nop
mov
rcr
xchg
hlt
aaa
jnp
mov
pusha
add
pusha
pop
cmp
xor
aaa
xchg
cld
test
add
lahf
inc
ss
rcrl
pop
call
push
dec
nop
outsb
sahf
cmp
dec
jo
xlat
add
adc
lret
cwtl
loopne
cli
jo
push
lret
and
cwtl
mov
lahf
flds
sti
cmc
lods
fidivrl
add
cltd
push
xchg
inc
int3
cmpsl
push
stos
int3
and
aas
mov
add
in
paddusb
or
shr
cmpsb
nop
add
into
subb
je
test
movsl
inc
fs
jno
or
mov
or
add
dec
or
sub
xor
fbstp
push
add
in
pop
loopne
sbb
lcall
xchg
push
push
subb
pop
push
add
js
test
xchg
popa
ss
dec
xchg
xor
add
push
mov
pop
aam
mov
sub
hlt
jl
or
nop
mov
int3
in
movsb
in
stos
dec
and
into
push
mov
sbb
adc
add
dec
add
or
outsl
and
dec
and
out
stos
rolb
add
fstp
cmp
test
ja
dec
aas
lret
movb
cmp
jle
pop
nop
and
pop
addb
movsb
xlat
test
subb
push
ja
dec
push
stos
xor
or
mov
iret
fld
xchg
enter
dec
adc
inc
pop
inc
rcrb
mov
cmp
lret
add
cmp
push
and
pop
xchg
jae
outsl
mov
mov
int
stc
fwait
or
in
push
lahf
pop
mov
dec
outsl
fadd
mov
add
dec
jle
lock
ret
iret
and
js
adc
sub
movsl
xor
fs
stc
shlb
jecxz
jp
xchg
pop
pop
push
dec
in
xchg
test
adc
jbe
filds
xor
roll
cmc
rolb
xor
and
ret
or
ficompl
sbb
je
cmp
push
inc
dec
push
add
pop
repz
inc
aaa
pop
or
data16
mov
pop
adc
add
dec
xchg
insl
pop
push
adc
sbb
add
mov
cltd
sbb
xchg
xor
out
sub
push
mov
mov
inc
dec
xor
les
jmp
xchg
pop
and
jl
insb
negl
sbb
fimull
dec
int3
xchg
inc
ror
dec
mov
mov
sub
jg
lret
cltd
mov
mov
adc
sbb
push
push
daa
mov
fldcw
dec
dec
daa
dec
nop
pop
loopne
call
jge
mov
push
out
jg
pop
dec
adc
xorl
sub
mov
aas
sbbb
in
sub
sub
int3
es
push
inc
cmp
push
hlt
lea
cmp
fldt
sbb
xchg
mov
pushf
loop
shlb
test
test
bound
push
clc
adc
call
addl
popf
or
jp
push
popa
cmp
adc
ja
mov
lock
movsl
pop
hlt
inc
out
xor
add
and
iret
mov
into
fldcw
cmp
lds
inc
and
push
pusha
inc
sub
jo
test
or
mov
xor
mov
lret
sbb
in
pop
sbb
adcb
mov
pop
inc
es
subb
and
add
inc
das
xor
jns
les
pop
or
test
inc
jl
adc
lods
and
or
mov
inc
adc
and
popf
fdivrp
std
nop
xchg
pusha
mov
addr16
cltd
shll
rorb
out
jecxz
add
scas
loope
add
call
xlat
jo
pop
roll
jg
mov
push
mov
cmp
nopl
fadds
add
push
ljmp
fwait
xor
or
mov
outsb
sarb
loope
cmp
inc
push
mov
pop
loopne
add
sub
xor
jno
movsl
nop
sub
sub
cmp
inc
jo
fwait
cmpsl
mov
fidivl
sbb
mov
shufps
mov
orl
popa
ficompl
popf
sub
mov
push
leave
xlat
cld
mov
ds
add
sbb
loope
hlt
sbb
jno
pop
push
cmp
or
lcall
and
pop
jg
out
add
sti
adc
push
scas
xor
je
sbb
adcb
cmp
cmp
jmp
xchg
cltd
call
andb
inc
fs
nop
push
and
inc
aad
or
inc
mov
sbbb
jnp
xchg
loope
adc
add
loopne
mov
add
and
jle
push
repz
dec
sti
mov
test
pop
das
jbe
add
into
push
scas
cmpsb
in
xchg
push
push
out
fsubs
xchg
adc
stc
aas
adcb
loop
fsubrs
fstpt
add
pop
and
add
add
cmp
and
mov
lcall
pop
pop
inc
xchg
mov
mov
dec
cmp
lcall
ret
mov
jo
xor
cmp
sbb
in
cmp
aas
cmp
and
jbe
add
and
sti
popa
sbb
lods
mov
gs
icebp
push
fiaddl
adc
lods
jno
add
jbe
inc
aad
and
xor
xor
mov
cmp
ss
bound
in
push
cmpsb
enter
and
sub
daa
or
mov
shrl
cmp
or
mov
mov
sub
and
enter
aad
xor
jno
lcall
out
sub
sbb
bound
testl
jo
lcall
inc
dec
stc
pop
cmp
dec
pusha
ficoms
jle
add
cli
fbstp
test
inc
lods
mov
jl
xchg
sub
in
rolb
cmpsb
push
inc
mov
mov
mov
addb
rcrl
lods
add
and
adc
fdivrl
xor
pushf
pop
cmp
mov
or
push
aas
sub
ds
jnp
imul
pop
jno
or
sub
std
daa
cwtl
arpl
les
mov
xor
xchg
inc
cmp
push
adc
xor
cmp
rorl
push
add
outsb
lock
adcb
xchg
mov
je
shll
rclb
cmp
inc
pop
das
add
xor
and
nop
push
inc
push
add
push
cmp
fcompl
cltd
push
movsb
adc
dec
and
jmp
ja
jno
fistpl
or
adc
push
mov
in
cs
adc
sarl
xchg
sub
jo
adc
add
mov
inc
ret
mov
or
bound
and
rolb
pop
adc
incl
inc
pop
sub
mov
add
insb
es
sarb
pop
sub
add
lock
push
test
jl
aad
rcr
pop
or
adc
sbb
rcrb
add
mov
sbbb
cmp
inc
mov
shll
sub
cmp
jg
addr16
subb
pop
and
jle
add
sbb
xorb
pop
dec
add
notb
fsubl
cmp
xor
xor
addb
xor
rcrl
xchg
xchg
shlb
out
add
roll
push
add
push
xchg
es
aas
and
scas
xor
xlat
and
sahf
insb
add
mov
push
xchg
inc
mov
sbb
cs
gs
inc
loopne
sbb
xchg
dec
add
xor
sbb
push
sbb
push
lahf
or
inc
cld
sbb
xchg
add
xor
addr16
adc
jns
fnsave
sbb
mov
cmpb
stc
arpl
inc
shlb
mov
push
add
clc
mov
lods
aas
jmp
inc
repz
pop
mov
addr16
pusha
xlat
test
sbb
push
fsubl
add
pop
cmp
dec
and
xchg
pusha
push
add
or
std
xor
add
sub
sarl
mov
inc
pop
pop
inc
je
test
std
sub
insb
popa
mov
andb
mov
mov
fidivrl
outsb
pusha
mov
xor
and
mov
add
pop
mov
fstps
mov
sub
sbb
mov
or
fld
xor
rclb
push
leave
xor
fisttps
push
inc
popf
xchg
mov
jo
shlb
add
cmp
shr
push
mov
fdivl
sbb
aas
jl
jae
pusha
push
mov
jl
cmpsb
xor
js
adc
pop
mov
rclb
mov
push
mov
mov
jae
jb
add
cs
pop
movsb
rclb
fistps
add
rolb
add
mov
mov
fdivl
and
add
imul
sub
add
inc
cld
sub
loopne
sbb
add
shrb
nop
mov
sbb
shll
mov
loopne
mov
mov
lock
addb
inc
dec
pusha
stos
mov
cld
shrl
inc
add
pop
mov
sub
sub
xchg
push
je
or
cwtl
sbb
aam
cwtl
cmpsb
adc
adc
imul
adc
mov
or
add
les
loope
inc
jb
rolb
mov
or
lea
or
inc
nop
add
andb
stc
dec
mov
pop
lock
cs
sub
jle
cs
pushf
imul
enter
jl
in
push
pusha
xorb
dec
movsb
loopne
pop
daa
sub
pop
push
add
pusha
das
mov
add
shl
rclb
xorb
mov
stc
pop
lcall
adc
inc
movsb
lahf
xor
fwait
xor
add
cmp
sub
or
mov
xorb
xchg
and
xor
mov
pop
sub
dec
cs
cmpb
lret
or
xchg
add
mov
rcr
push
leave
in
jle
sub
jo
loopne
out
or
or
mov
lahf
add
and
lret
ret
push
or
aaa
mov
jmp
xchg
add
inc
push
pop
add
rcl
and
xchg
movsl
or
xor
cmpb
adc
les
mov
loopne
je
sbb
or
xor
test
add
xchg
mov
cmpsl
lea
ds
sub
mov
and
pop
inc
pop
call
movsb
inc
mov
inc
add
test
loope
mov
rorl
sub
sbb
es
enter
pop
ret
inc
push
pop
adc
lahf
mov
jns
jp
add
or
add
mov
dec
fidivrs
dec
nop
call
mov
cli
add
mov
mov
add
fidivl
sub
sub
outsl
repz
clc
loopne
scas
and
inc
jge
in
rorl
dec
fadd
mov
clc
adc
fiaddl
sub
arpl
movsl
sub
mov
pop
fnstsw
cmp
les
ja
cld
mov
ss
or
cmp
mov
roll
xor
add
dec
mov
cmp
push
test
add
enter
mov
add
enter
sarb
pop
jmp
xor
sub
cmpb
cmc
dec
loopne
and
ja
add
pushf
add
add
int3
mov
mov
test
test
scas
dec
xchg
sub
adc
jns
add
adc
jb
subl
xorl
and
or
cs
pop
popa
push
movb
mov
or
xor
fs
dec
cmc
sub
hlt
mov
loop
sti
ds
mov
arpl
xchg
jl
dec
aas
jb
in
mov
mov
imul
mov
adc
sbb
add
mov
mov
cmpsl
and
sub
cmp
int
ficompl
repnz
jnp
sti
nop
fstps
test
rcr
jg
xchg
pushf
pop
xchg
add
fisttpl
jmp
insl
scas
enter
xor
dec
mov
loopne
add
jne
mov
mov
test
jg
add
adc
mov
mov
adc
ds
or
jge
movsl
popa
mov
fwait
sub
cmp
daa
pop
mov
aas
mov
inc
inc
or
lret
imul
in
inc
push
repnz
jp
ret
push
sbb
add
insl
fistl
dec
ror
jns
nop
mov
dec
add
cmp
incl
outsb
arpl
mov
push
push
add
cltd
push
xlat
ja
or
dec
cs
or
pop
pop
ja
cmp
popf
mov
inc
mov
push
xchg
mov
gs
pushf
inc
imul
fs
add
push
fadd
cwtl
inc
pusha
pop
cmp
test
pop
out
jmp
div
cld
mov
mov
sub
lcall
xor
lcall
inc
xchg
sarb
and
pop
rorb
test
mov
stos
xlat
inc
loopne
cmc
add
out
mov
xchg
or
and
and
fadds
je
mov
enter
pusha
imul
mov
outsb
pop
push
ja
sub
adc
cs
sahf
sbb
nop
mov
adc
xchg
ljmp
jnp
pop
dec
dec
inc
leave
mov
pusha
cs
inc
add
sbb
xlat
int3
cltd
push
inc
in
sub
stc
dec
cmp
aam
les
inc
lock
cmp
or
dec
mov
xchg
jle
push
adc
pop
stos
mov
dec
lods
loope
shl
pop
add
cli
ds
ret
sub
dec
sbb
jns
movsl
xchg
push
add
cltd
loop
add
pop
inc
mov
fadd
pop
cmpb
adc
or
adc
sbb
or
call
xchg
in
cmpsl
leave
inc
and
mov
lahf
add
and
aas
int3
xor
add
cmpsl
cs
shlb
add
mov
push
xor
out
add
lcall
ljmp
push
inc
lret
adc
repnz
pop
hlt
cmp
and
mov
add
jo
out
add
cmp
negl
sar
ficoml
push
insl
mov
scas
or
cmpsb
mov
addl
lahf
aas
add
xor
add
stos
mov
cmp
fiaddl
cmp
xor
addl
xchg
and
mov
push
into
mov
mov
xchg
fstpt
ss
jg
inc
dec
mov
push
jns
push
popa
cld
xchg
pop
daa
adc
mov
sub
cld
mov
inc
pop
sub
aaa
cmp
push
std
dec
mov
xor
pop
and
jns
add
jecxz
xor
jne
add
fwait
sbb
test
xor
test
dec
add
addr16
out
into
das
mov
fdivrp
icebp
pop
pop
add
pop
int
shrb
fldl
test
iret
jno
pusha
outsb
js
add
dec
or
xchg
mov
dec
js
aas
fstpt
xor
mov
xor
pop
nop
push
lods
mov
in
sbb
or
roll
call
inc
js
cmpsl
roll
mov
pop
ret
sub
and
mov
andb
xor
jnp
add
cmp
add
call
mov
insb
add
shlb
xchg
in
out
nop
test
addb
enter
gs
adc
inc
xor
pop
adc
or
addr16
cld
add
hlt
or
push
call
aam
dec
pop
inc
subb
jmp
or
rorl
ja
or
call
dec
aas
mov
jle
stos
mov
add
out
cmp
mov
adcb
in
inc
out
adc
add
data16
cmp
addl
push
jno
pushf
add
lcall
sahf
fcoms
xchg
xchg
cld
sarb
icebp
cmp
test
and
fisubrs
xchg
mov
and
mov
mov
cmpsb
add
xor
insb
std
loopne
cli
jo
adc
mov
add
fldt
roll
fldl
and
ret
mov
and
adc
mov
add
pop
xor
js
add
pop
popf
sub
rorb
pop
dec
cwtl
and
out
cs
enter
dec
and
inc
iret
xor
int
add
sbb
adc
and
and
add
and
pusha
pop
inc
xor
adc
iret
sbb
dec
add
sti
fstpt
fdivrs
jmp
adc
adcl
out
cmpb
in
mov
or
jl
sbbb
add
testb
pop
and
xor
pop
jge
mov
push
cli
or
test
add
stc
das
xor
cmpsl
addr16
in
mov
pushf
pop
and
fldt
std
dec
adc
mov
cmpsb
lret
push
outsb
push
xor
fisubs
test
nop
test
jle
lds
les
add
lods
pop
bound
in
or
add
sbb
inc
pusha
cs
mov
xchg
mov
add
pop
xor
test
xor
enter
jns
int3
sarb
aaa
inc
test
stc
lock
icebp
and
add
xor
add
push
fidivl
mov
adc
add
popf
and
adc
js
out
rcll
xor
or
int3
dec
fwait
out
insb
fcomps
hlt
mov
imulb
clc
mov
cmp
pop
adc
sbbb
inc
mov
mov
int3
hlt
stc
aas
data16
push
mov
sub
xchg
pushf
je
popf
sbb
pop
ljmp
push
dec
pop
movb
inc
inc
sti
pusha
sbb
ret
push
repnz
int
shlb
push
cli
mov
test
enter
or
insl
data16
lods
mov
mov
add
cmpsl
adc
add
test
not
insl
loop
push
shlb
fdivrs
pusha
inc
cmpsb
pusha
or
aam
xor
stos
jne
push
lahf
mov
lods
jle
xchg
jge
xrelease
adc
pop
ret
movsb
sbb
add
lock
in
push
je
add
mov
mov
push
lods
dec
aas
add
add
add
xchg
mov
enter
xchg
add
fld
jl
test
add
sub
xor
mov
pushl
pusha
mov
push
arpl
jae
add
xlat
imul
pusha
pusha
xor
or
add
add
pop
nop
shrb
inc
cmp
or
cld
fstpt
fwait
notl
fmul
adc
or
imul
jne
xchg
add
push
sub
popa
in
xor
xchg
jb
mov
add
scas
jmp
pop
mov
xchg
xor
and
xchg
aam
or
ds
jno
popf
dec
aam
ja
cwtl
and
cmpsl
cmp
shrl
lea
jp
nop
das
sti
pop
hlt
mov
ja
imul
fsub
pop
xchg
dec
mov
movsl
adc
es
dec
movsb
add
adc
fs
mov
push
test
dec
jae
xor
cmp
mov
loope
jns
aas
cmp
add
mov
call
cltd
das
push
pop
mov
das
nop
sbb
nop
xchg
push
inc
mov
adc
test
xchg
cwtl
in
add
jae
xorl
mov
mov
add
out
sub
xor
add
data16
xor
ret
and
mov
sbb
out
stos
push
movsb
or
mov
add
hlt
dec
mov
and
push
addl
aas
xchg
inc
scas
xchg
cmp
xorl
push
outsl
mov
adc
stos
lods
repnz
cmp
aam
popa
aas
shl
pop
pop
fdivs
push
fmull
cmpb
stos
or
add
push
or
das
pop
jle
adc
mov
cmc
movl
insb
adc
inc
cmp
lahf
adcb
xchg
rcr
shlb
decl
scas
out
dec
jae
shll
aas
mov
clc
or
cmp
fnstenv
test
add
xlat
lods
out
mov
repnz
xchg
fwait
mov
adc
push
enter
and
add
and
push
mov
adc
xchg
add
add
cs
xchg
pusha
sbb
xor
sub
adc
and
mov
lods
or
adc
adc
mov
xor
mov
jmp
ljmp
sbbb
aam
jbe
cmp
stos
and
dec
fdivs
jmp
push
pop
loopne
fwait
mov
rcl
stos
mov
mov
or
mov
or
xor
lock
xor
movsl
cwtl
pop
add
cmpsb
push
add
jp
mov
or
das
into
push
xor
jge
popa
std
enter
pop
push
sub
adc
pushf
scas
fs
cs
mov
inc
stos
gs
or
mov
aam
xchg
pop
or
xchg
cmp
test
jecxz
stos
out
je
sub
mov
mov
xchg
int3
xorb
data16
xor
mov
mov
scas
repz
add
cmpsl
enter
sbb
and
loop
jbe
loope
sar
sub
cmp
fisubrs
xchg
aas
mov
dec
mov
or
fisttpl
mov
push
aad
nop
fadds
xor
jl
pop
sbb
xor
jl
cmovp
frstor
jg
or
pop
cmpsl
vmovapd
jmp
sub
xchg
bound
mov
cltd
sub
es
repnz
movsl
bswap
or
and
cmp
xchg
dec
pusha
dec
aaa
shlb
mov
add
sbb
and
test
xor
add
shll
test
out
and
mov
adc
add
mov
xchg
or
push
movsb
adc
sbb
addb
iret
pop
test
mov
cmc
xor
inc
outsb
push
pop
mov
mov
fdivs
add
cmp
or
adc
fisubl
fsub
je
enter
inc
mov
push
insl
xchg
bound
cmp
test
mov
xor
push
mov
push
or
pushf
stos
jecxz
lea
in
inc
mov
mov
or
mov
in
dec
adc
cmp
outsb
dec
add
mov
push
idiv
push
popa
pushf
sub
movsb
clc
lock
add
jecxz
fcoms
mov
add
jl
jb
cmp
outsb
jne
cmp
push
in
test
push
xor
daa
loope
ret
cmp
jno
mov
movsb
mov
xchg
push
inc
sbb
das
sbb
inc
popf
push
mov
int
push
in
das
mov
and
in
adc
add
cwtl
push
roll
pushf
dec
cmp
fmull
push
cmp
std
ucomiss
fstpl
jae
add
xor
and
rcrb
xchg
out
sbb
insb
mov
or
mov
aam
pop
xchg
das
insb
in
pop
push
adc
push
loope
cwtl
push
data16
shr
pop
cmpsl
sub
loopne
xor
lret
in
mov
js
mov
or
in
lods
prefetch
mov
push
add
adc
cmc
inc
or
popa
xor
add
push
int
sub
inc
shrl
mov
sub
fistl
sti
add
test
xchg
test
xor
lock
sahf
sbb
push
mov
add
push
pushf
xchg
inc
dec
sub
ret
xchg
int
cmp
ds
inc
nop
dec
add
scas
daa
lret
add
xchg
push
mov
add
mov
add
push
and
add
xchg
lret
fistpl
inc
lods
cmpsb
or
shll
xor
push
adc
stos
add
bound
xorb
cld
shll
movsl
xchg
enter
jo
enter
scas
hlt
jns
pop
and
repz
cwtl
mov
mov
repnz
mov
push
ficompl
push
in
stos
jecxz
dec
or
int3
cmp
add
loopne
loopne
push
xor
or
dec
aas
stos
push
rcrb
mov
lods
movsl
nop
push
insl
ret
fwait
hlt
pop
xchg
sub
cmp
adc
mov
cmp
add
test
fsub
add
push
fstpt
aaa
stos
add
xor
fildl
adc
jno
testl
push
dec
mov
inc
ss
pop
testb
push
and
stc
addr16
imul
nop
push
or
aad
faddl
jbe
mov
mov
daa
nop
mov
sbb
add
mov
sub
fimuls
decb
inc
adc
orb
pusha
shrb
negb
push
jmp
xchg
or
sub
aam
movsl
add
pusha
nop
cltd
iret
cmpb
xor
movsb
inc
mov
xor
and
dec
inc
lods
subl
in
fwait
scas
xchg
js
pop
add
xchg
pop
xchg
sbb
mov
or
inc
orb
inc
addb
daa
das
adc
xchg
add
adc
dec
es
sbb
ficoml
mov
lds
je
sub
jo
or
inc
mov
push
inc
inc
jl
insl
sbb
test
sub
pop
add
jecxz
ret
das
or
into
int3
pop
jbe
jecxz
mov
sbb
xchg
xchg
mov
xchg
std
cmp
loopne
pop
jl
add
outsb
daa
add
lcall
add
maxps
or
inc
sbb
xorb
cmp
jmp
cmp
add
push
xorb
sbb
or
mov
xchg
add
fistpl
and
lods
inc
lock
mov
loopne
int3
enter
inc
add
pusha
shlb
sub
xlat
mov
adc
mov
inc
inc
inc
cmpl
pop
jle
add
and
mov
cmp
add
ss
mov
aam
jae
enter
jmp
mov
test
mov
aad
test
lcall
popa
push
push
sub
adc
fmull
inc
popa
enter
call
inc
dec
xor
sbb
adc
or
dec
lahf
add
cmp
shr
add
adcl
or
aam
jno
mov
sti
xor
sbb
and
and
mov
sbb
call
push
icebp
ret
rorb
popa
add
and
loopne
add
and
mov
dec
push
cld
add
jo
push
xor
cmp
sbb
and
lock
add
cmp
div
es
add
lods
in
cmpb
clc
dec
push
jl
popl
and
push
pop
mov
cmp
ds
add
pop
and
adc
adc
shll
aaa
add
das
and
jae
ret
or
pushf
jmp
sub
ja
mov
mov
jmp
jae
pop
push
ds
sbb
add
stos
mov
movsb
inc
sub
push
dec
sub
cmc
pop
fsubrl
addb
aaa
iret
push
ljmp
shrb
jnp
jmp
test
loop
add
test
adc
repz
ljmp
pushf
sbb
into
cmp
sub
fdivrl
add
adcl
popl
mov
jbe
fldcw
ror
mov
enter
aas
faddl
out
push
test
cmp
popa
inc
cmp
ret
rolb
xchg
jmp
jp
sbbb
je
push
mov
testl
cmp
pop
mov
dec
out
push
jge
sub
jp
inc
mov
mov
imul
fsubr
push
sub
scas
mov
pop
sbb
shlb
stos
addr16
movsb
cmpsl
aaa
add
jae
loopne
xor
or
adc
and
and
inc
cmp
sub
xor
xor
cmp
xor
out
inc
or
sti
fadds
inc
or
sub
adc
xchg
cs
pop
sub
pop
dec
rorl
add
push
mov
pop
ja
add
sub
fstps
aam
jbe
and
or
mov
stos
or
imul
mov
jl
cmpsl
hlt
rclb
rcrl
add
rcll
or
aaa
mov
adc
push
mov
pop
add
and
jb
push
pop
mov
pop
xchg
adc
nop
push
xor
test
and
mov
cs
cmpsb
sub
xchg
or
or
mov
or
add
xchg
cmp
je
inc
add
ljmp
or
and
popa
lock
mov
xchg
sub
enter
lret
mov
lret
pop
and
scas
test
adc
xchg
dec
out
rolb
out
push
repnz
adcb
or
or
inc
enter
jnp
dec
xor
enter
cmp
jbe
mov
sbb
shr
nop
and
ss
mov
pop
scas
xchg
xor
lods
pop
js
orb
cs
pushf
add
mov
jae
lcall
add
sub
mov
fwait
sbb
jae
cmp
dec
scas
sarb
and
insl
mov
and
jecxz
xchg
enter
repnz
push
dec
stos
adcb
inc
sbb
add
cmp
cmc
mov
sahf
cmp
call
lock
adc
xor
push
or
xor
add
inc
xchg
out
xor
push
jle
or
xchg
lcall
mov
cmpb
cmp
inc
js
add
mov
loopne
rcl
or
xor
aam
adc
sub
xlat
pushl
fs
pop
add
and
repnz
cmpsb
negb
dec
stc
xchg
add
jg
mov
xor
jg
push
push
mov
and
mov
adcl
pop
xchg
sub
mov
out
mov
lea
stos
fadds
jmp
nop
jae
add
pop
dec
fnstenv
add
adc
xchg
icebp
sbb
add
and
mov
add
ror
in
stos
das
shr
mov
cwtl
fdiv
dec
add
adc
mov
jmp
fisttpl
add
xor
mov
ja
lret
enter
loop
repz
stos
mov
mov
test
dec
and
mov
mov
daa
xchg
jns
std
push
dec
sub
sbb
inc
orb
ficomps
mov
add
mulb
pop
add
push
adc
fistpll
xor
shlb
aas
loopne
enter
xor
pop
fisubl
test
mov
cmc
shll
push
inc
add
jle
cmp
in
in
cmpsl
add
push
iret
movsb
sbb
pop
andl
test
xor
cmp
xchg
push
cmpsb
rcll
cmp
jg
mov
sub
and
sti
lret
dec
mov
inc
add
pop
rol
mov
pop
gs
mov
ja
imul
push
cltd
mov
aam
adc
xor
aas
sub
mov
cmp
push
dec
jo
imul
push
mov
cmpsb
cli
fnstenv
add
in
mov
mov
and
add
inc
push
pop
imul
insb
add
fistpll
and
push
bound
add
xor
add
stc
mov
dec
cmp
adc
ret
std
je
jecxz
mov
cmp
fwait
pop
daa
or
or
les
sbb
add
xor
rorl
das
je
nop
mov
stos
jp
adc
enter
mov
sbb
inc
dec
shl
cltd
aad
imul
xchg
dec
xor
jb
add
cmc
xor
and
add
or
aam
das
mov
sbb
pop
cld
jle
xor
adc
not
imul
lahf
jecxz
mov
mov
add
shl
int
pushf
or
cld
sub
mov
add
leave
pusha
dec
mov
mov
inc
pop
pop
cld
sbb
push
add
xor
fcoml
call
cmpsl
pop
or
mov
sahf
pusha
rclb
incb
mov
cmp
dec
jp
std
adc
fstpt
sub
dec
dec
jmp
push
call
js
sbb
xor
fcompl
outsb
inc
mov
xor
jne
and
mov
xchg
sub
lds
mov
cmc
test
jmp
dec
lock
lahf
mov
rolb
mov
imul
rcll
and
cwtl
test
jns
mov
std
out
add
jae
lea
add
adc
xchg
subb
and
and
push
xor
sub
shr
mov
adc
lods
mov
mov
push
jns
mov
push
adc
mov
scas
push
add
adc
dec
fistps
pop
orl
jp
xlat
add
jmp
add
aaa
inc
shlb
mov
add
addr16
mov
add
fnsave
and
pop
andb
popf
dec
mov
jb
les
jmp
push
outsb
cmp
loope
rclb
leave
dec
xor
shll
add
mov
ljmp
pushf
add
aam
je
iret
nop
loopne
dec
cmp
jl
sub
test
je
or
pop
cmp
pusha
or
into
pop
jp
pusha
sbb
adc
add
pop
ljmp
addl
lret
push
add
inc
lea
adc
dec
add
test
or
xchg
in
add
cmp
xorb
mov
dec
inc
mov
push
add
pushf
decl
test
cmpsl
pop
jl
and
add
das
xor
sbb
xchg
mov
movsb
pop
cmp
and
dec
jmp
jno
mov
inc
pop
jg
pop
fwait
and
mov
xor
je
add
outsb
jmp
cmp
cmp
push
test
mov
popa
and
movsb
mov
fs
add
in
xchg
stos
mov
ljmp
push
and
mov
add
add
test
push
cmp
dec
and
std
add
out
dec
push
es
inc
test
push
adc
add
call
inc
inc
inc
dec
testb
add
adc
fildl
xchg
or
shl
dec
cs
dec
repz
inc
fs
inc
cmp
popf
cmpsl
xchg
lea
pop
cmp
lock
mov
xor
fs
sub
filds
jne
mov
and
dec
movsb
test
pop
xorb
dec
test
lods
inc
or
xor
lret
push
sub
loope
scas
inc
lock
add
ret
xor
rolb
loope
pop
fwait
push
jmp
mov
add
mov
data16
adc
xor
movsl
xchg
mov
cmpl
xchg
adc
sub
fimuls
dec
mov
shll
push
xor
or
fwait
and
and
push
cld
ja
add
adc
jl
adc
jle
pop
in
dec
sbb
mov
pushw
lcall
mov
xchg
mov
andl
insl
push
pop
jge
add
cmc
pusha
imul
test
or
cmpsl
lods
jg
or
lret
jne
es
lds
jecxz
jp
xor
rcll
roll
inc
jae
pop
mov
mov
push
stos
in
clc
adc
lods
jns
stc
or
inc
fstpt
lods
mov
cmp
fisubrs
outsb
push
repnz
lcall
cwtl
add
push
xor
int3
add
aaa
jae
jecxz
fcmovnb
sub
fs
add
fisubs
mov
jno
mov
cmp
seto
and
mov
stc
jns
push
push
fs
inc
rorl
or
fdivrp
and
mov
inc
dec
or
cmp
mov
fbld
mov
push
mov
push
jo
xchg
mov
stc
shrl
jg
faddl
in
xchg
and
pop
fxch
cmp
sbb
pop
popf
jo
inc
lds
imul
aas
cwtl
js
int
sub
jecxz
cmp
fs
aaa
dec
int3
inc
stos
add
inc
pop
or
jb
or
push
push
adc
stos
adc
add
rcr
ret
hlt
or
bound
lods
scas
stc
cmp
inc
out
dec
mov
pusha
xchg
sti
ret
push
punpcklwd
xor
pusha
loop
lods
xor
mov
sbb
test
pop
mov
jp
push
test
lods
push
mov
pop
fmuls
ret
add
push
shlb
add
and
andl
sub
call
lock
xchg
rcl
sti
into
cmp
cltd
test
lahf
xor
adc
dec
xchg
repnz
sbb
sbb
push
add
fdivrs
add
or
adc
cmc
push
fucomp
sbb
dec
iret
mov
or
inc
pop
inc
pop
xchg
xor
imul
mov
cmp
adc
add
out
sbb
cmp
add
ja
xchg
push
or
test
test
sub
notb
pop
add
test
inc
sub
dec
jno
sbb
mov
popl
lock
mov
std
pop
or
lods
scas
sbbb
test
mov
mov
sub
popa
insl
or
in
addr16
adc
xchg
dec
cmp
fsts
jnp
mov
cmp
mov
test
lret
movb
scas
pop
sub
pop
iret
addl
jae
add
pop
push
clc
mov
int3
out
add
cmc
push
cltd
out
pop
scas
movsb
or
test
call
idiv
add
xchg
data16
mov
fmull
sahf
mov
ds
inc
xchg
cmp
mov
mov
jg
jle
push
add
loopw
popa
jmp
in
cmp
xchg
adc
adc
lods
bound
ja
sbbb
push
jne
movsl
adc
pop
add
in
inc
shr
jp
xor
pushf
arpl
std
and
or
push
stc
lds
outsb
add
rep
enter
mov
fs
add
mov
inc
jns
leave
mov
sub
push
fcmovu
add
leave
lahf
cmp
mov
add
lods
mov
test
add
in
jae
or
and
jbe
pop
add
inc
dec
lcall
enter
scas
inc
ret
push
or
pop
data16
cmp
mov
into
lahf
sbb
dec
movsb
pop
inc
decb
push
or
pop
and
ret
scas
and
sub
lock
xchg
push
into
add
int
call
inc
lahf
inc
mov
push
xor
xchg
push
push
orb
movb
sbb
sbb
inc
lcall
cmpsl
inc
popf
js
fwait
movsl
dec
cwtl
push
je
xor
dec
lods
sbbb
jmp
add
mov
or
push
inc
lea
addl
sbb
or
inc
push
scas
lods
pusha
enter
dec
push
out
or
or
imul
adc
jbe
mov
pop
cld
jmp
inc
or
xchg
push
jge
rcrb
cmp
aam
ficoms
dec
andb
mov
sub
loop
int3
and
cmp
xchg
add
jp
add
sbb
xor
mov
add
in
ret
test
sbbb
psllq
and
pop
rcr
lds
pop
add
and
jo
sbb
cs
test
add
xor
pop
push
fs
pop
push
shrb
sbb
dec
xchg
adc
mov
dec
jns
or
mov
sbb
or
pusha
mov
pop
or
xchg
rorl
jno
push
movsb
mov
mov
fldt
and
loopne
insb
je
and
jnp
sbb
jb
add
xor
or
sti
sbb
fdivrs
dec
inc
cwtl
jno
dec
push
cmp
mov
dec
inc
adc
scas
addl
cmp
pusha
cmp
and
int3
sub
dec
lea
mov
and
outsb
or
cmp
or
out
in
adc
into
sbb
or
mov
jno
data16
mov
out
fstl
sbb
mov
adc
fstpl
les
xchg
jecxz
popf
xchg
andb
out
rorl
fistps
loop
add
sar
mov
xor
stos
jno
add
jo
pop
adc
int
stc
movsb
nop
cmp
test
pop
dec
xor
ret
je
mov
sub
mov
add
icebp
add
lods
nop
js
inc
add
add
out
xor
popa
sbb
jnp
push
lods
js
out
pop
mov
inc
and
aam
filds
mov
pusha
push
inc
mov
cmpsl
addl
pop
mov
dec
mov
inc
sbb
and
jno
mov
cmp
xor
push
mov
and
cmpb
hlt
push
pop
add
dec
mov
lods
xchg
add
sub
dec
lahf
or
mov
adc
jl
pusha
inc
mov
daa
and
jno
or
mov
fisubrs
adc
mov
or
mov
test
int3
push
or
fimuls
cwtl
ja
stos
roll
xchg
inc
incl
popa
clc
jnp
jo
js
icebp
hlt
add
adc
movsl
enter
add
dec
dec
int
rorb
and
sbb
flds
stc
push
add
jns
adc
mov
or
subl
pop
adc
lods
rcr
or
cmpsl
cwtl
and
out
mov
stos
adc
movsb
data16
dec
push
and
mov
add
es
pusha
or
push
jo
mov
jmp
and
imul
lahf
jae
nop
in
test
dec
dec
adc
outsb
mov
addr16
sbb
inc
or
popf
popa
add
lods
push
stos
nop
sub
add
and
xchg
int
mov
push
lods
imul
jo
hlt
xchg
pop
loopne
mov
rolb
add
and
or
xor
or
addb
adc
push
xor
or
cltd
add
sub
sub
or
add
and
and
xor
inc
iret
xchg
les
adc
xchg
dec
test
push
clc
and
loopne
xchg
dec
rclb
lcall
add
add
pop
lods
or
dec
mov
cmpb
mov
lea
nop
inc
add
push
iret
subl
bnd
add
int
lahf
cmp
mov
or
dec
xchg
inc
call
add
repz
adc
adc
lods
mov
mov
mov
add
outsl
ret
inc
mov
or
fisubrs
pop
aas
push
or
push
addb
adc
dec
mov
and
add
stos
add
push
mov
fcoml
mov
aas
adc
push
clc
cmp
adc
je
iret
jp
cmp
sbb
fadds
add
xor
push
xchg
and
adc
sub
les
cmp
in
jns
imul
loop
add
jae
push
rcr
jo
inc
and
lds
mov
jle
sbb
cmp
daa
fisubrs
mov
inc
jno
inc
xchg
js
xchg
jne
inc
stos
jle
adc
push
xor
mov
sbb
xchg
adc
sub
dec
push
movb
sub
cmp
inc
inc
mov
insb
push
sbb
repnz
daa
and
xor
sbb
lds
pop
test
cmpb
pop
pop
cli
and
push
adc
add
insl
mov
cmp
or
stos
and
xchg
les
cwtl
popf
push
mov
les
outsl
jg
mov
cmp
adc
lock
jae
pushf
sub
flds
and
mov
adc
int
inc
pop
mov
sahf
pusha
insl
mov
or
mov
lock
adcb
insb
fdivs
xor
dec
mov
movb
mov
les
push
rolb
cmp
add
and
xchg
hlt
adcb
push
cmp
lret
cwtl
add
or
jb
cmp
rcrb
xchg
push
add
nop
rolb
jb
add
jmp
fistpl
xor
mov
jge
add
mov
dec
cwtl
stc
xchg
sbb
pop
or
xchg
adc
mov
or
dec
jae
xor
cmp
mov
and
std
mov
loop
fs
shl
pushf
aam
stos
sub
mov
xchg
imul
push
adc
add
int
pop
jb
or
mov
push
push
push
add
mov
cwtl
adc
sub
add
jno
push
lret
pusha
les
mov
adc
and
mov
pusha
pop
les
lea
adcb
mov
add
shlb
pop
popa
out
mov
and
aas
or
lods
or
fwait
rcrl
or
push
scas
sub
add
adc
rclb
push
rcr
inc
or
inc
dec
sbb
cmpsb
xchg
xchg
mov
fisubs
jnp
add
inc
cmp
jle
xor
pushf
inc
adc
pop
sahf
sub
rolb
sbb
mov
fistps
jae
jp
add
add
pushf
pop
inc
sbb
mov
mov
mov
add
add
mov
push
xor
adc
xor
mov
or
lret
and
mov
cwtl
add
test
sub
mov
mov
push
add
and
xchg
or
in
add
outsb
data16
int3
xor
cmp
add
push
mov
addb
stc
fmull
stos
aas
add
add
mov
sbb
imul
xor
addb
insl
push
lods
jp
in
add
xchg
jns
mov
adc
jle
or
adc
fldenv
or
or
inc
imul
sahf
mov
xchg
test
gs
inc
lods
or
mov
cmc
aas
outsl
and
add
cld
divl
scas
cmc
mov
push
nop
mov
sbb
es
mov
fidivrs
and
ficoml
mov
jp
out
inc
mov
xor
xchg
pop
sub
stos
dec
sbbl
rcrb
add
lahf
add
popf
cwtl
out
mov
cltd
add
je
lcall
rcrl
mov
mov
lock
push
mov
inc
sbb
xchg
negl
sbb
mov
inc
sahf
push
cmpsb
aas
jmp
and
cmp
push
int
push
pop
imul
jne
inc
add
jg
mov
cmp
xor
pusha
add
dec
test
mov
loopne
cmp
xchg
pop
dec
sbb
out
outsl
pusha
inc
cltd
jns
into
and
push
into
lds
cs
mov
sbb
add
jg
loopne
xchg
add
mov
adcb
std
pop
jae
mov
mov
xor
cmovbe
dec
inc
xchg
out
or
lcall
add
loop
xor
xchg
cld
dec
negl
mov
aam
inc
or
mov
add
jl
jg
jo
pop
xchg
ss
loopne
push
add
nop
mov
loope
les
xor
or
or
aad
dec
sahf
hlt
and
pop
add
je
or
sbb
xlat
adc
mov
cs
rcrl
and
pop
shrl
jmp
jo
add
mov
dec
orb
mov
repnz
decb
faddl
xchg
arpl
push
pop
push
rcrl
clc
xchg
lods
add
shlb
pushf
out
ds
cmp
pop
js
mov
push
cmp
sahf
sarb
hlt
mov
insb
shr
in
add
cltd
cmp
push
js
mov
mov
dec
imul
pop
fnstenv
mov
call
hlt
inc
dec
std
adc
cli
in
pusha
repz
adc
shrb
xchg
add
test
lea
out
dec
xlat
or
add
into
inc
xchg
mov
lret
imul
fwait
lahf
xorb
pushf
push
inc
xor
aas
mov
fisubs
mov
inc
adc
enter
pop
sbb
add
push
mov
ljmp
scas
insl
and
jmp
rcrl
rol
lock
adc
sarb
dec
hlt
mov
pop
pop
outsl
mov
movsb
mov
push
in
push
movsl
jo
js
hlt
ret
jno
nop
mov
stos
call
mov
ljmp
mov
jno
lock
pusha
push
xor
test
in
and
aad
sub
xchg
test
popa
or
xor
add
arpl
fs
push
inc
push
in
sub
add
ret
or
xor
add
js
mov
push
popa
xor
xor
ja
pop
bound
and
in
mov
add
es
fwait
rcrl
adc
jns
scas
sub
icebp
cwtl
call
fcomps
push
imul
sbb
push
sarb
hlt
push
pop
mov
jge
ret
dec
add
sub
pop
xor
mov
cmp
adc
add
movsl
mov
setb
aad
out
pusha
mov
nop
outsb
add
and
xor
enter
call
scas
lret
arpl
add
lret
icebp
out
xor
xchg
mov
lahf
mov
fdivrl
adc
cmp
add
enter
fs
sar
loopne
mov
lock
inc
sub
push
push
fndisi(8087
push
add
in
icebp
and
cmp
cmp
add
insb
subb
out
loopne
sub
repz
xlat
xchg
sbb
pop
mov
in
cmp
dec
ljmp
mov
mov
cmp
xchg
sbb
xor
sbb
sbb
mov
xchg
add
mov
mov
dec
pop
repnz
loope
mov
in
fs
add
shl
add
inc
mulb
stc
repz
inc
mov
xor
ss
or
scas
dec
lods
and
lock
movsl
into
das
sbb
cmp
lcall
add
inc
add
test
cld
xchg
mov
push
pop
mov
pop
mov
and
xchg
ret
ljmp
mov
and
pop
mov
adc
data16
inc
xlat
mov
icebp
insb
inc
or
call
jns
test
xchg
cwtl
sbb
push
in
push
xor
mov
xlat
jg
loopne
test
inc
dec
jno
ljmp
push
mov
inc
xchg
popa
adc
cmp
mov
add
int
cwtl
cmp
leave
fmul
mov
pop
pop
js
into
cs
xor
and
es
paddb
dec
add
arpl
mov
sbb
lcall
xchg
jp
imul
add
mov
jecxz
bound
sbb
pop
xor
rorb
lret
jmp
xlat
jb
pop
mov
aaa
mov
sub
mov
add
in
orl
inc
xchg
push
outsl
mov
cwtl
xor
dec
mov
ret
pusha
jns
sub
and
and
out
push
addr16
adc
jns
insl
jae
sarb
add
mov
push
add
loope
inc
insl
push
loope
and
add
icebp
popf
mov
xchg
sub
push
cmp
lds
jge
rolb
imul
cmp
movsl
cmpl
cmpb
scas
add
mov
fisttps
pusha
js
mov
mov
sbb
adc
or
test
fs
jbe
add
xchg
push
movsl
jl
sbb
cmp
test
ljmp
add
jp
xchg
pop
aas
testl
inc
jl
add
test
fdivl
lock
or
mov
sbb
add
push
mov
mov
in
cs
test
fwait
xlat
pop
enter
ret
inc
dec
sbb
and
lahf
call
pop
sbb
dec
inc
cmpl
fildll
clc
jae
ret
mov
or
pop
outsl
data16
mov
inc
push
lock
mov
dec
mov
pop
add
cmpb
push
les
movl
loopne
pop
or
cmp
xchg
jge
inc
or
out
roll
sub
std
cmpb
imul
sbb
fstpl
imul
or
xor
add
mov
push
mov
or
xchg
cs
push
mov
xchg
ja
adc
and
cmp
fadd
ja
and
adc
popa
xchg
clc
int
adc
xor
add
xchg
or
in
in
movl
xor
icebp
test
push
jmp
mov
les
ds
fs
and
add
xchg
push
out
mov
add
jge
jns
ret
push
pop
lock
add
test
addr16
cwtl
adc
inc
pop
xchg
mov
in
cmpl
data16
cmp
xor
push
cmpb
jl
pop
dec
adc
orl
push
add
sbb
mov
dec
mov
push
push
mov
clc
mov
mov
push
pusha
mov
and
scas
lods
or
xor
or
packuswb
fwait
xchg
mov
push
and
add
pop
loop
push
cs
insb
aaa
call
mov
in
lods
retw
and
inc
outsl
add
outsb
pushf
shrb
int3
mov
cmpb
pop
into
lea
mov
sbb
dec
xor
mov
fs
dec
test
les
pushf
ss
mov
sbb
insl
aam
rclb
shlb
nop
add
addb
add
inc
imul
ret
lret
inc
push
mov
dec
sub
cli
sbb
lods
add
lea
or
and
test
add
icebp
mov
dec
pop
addr16
sub
fs
loop
bound
fmull
or
cmc
or
sub
or
inc
sbb
lea
frstpm(287
mov
sbb
repnz
sbb
cwtl
or
outsb
inc
sbb
ljmp
inc
mov
pop
idivb
pushf
sbb
or
dec
aam
mov
xchg
in
lods
lea
enter
lods
lds
ret
ret
inc
sbb
sti
or
loopne
xor
cwtl
xor
test
cmpsb
aaa
xor
loope
imul
or
push
arpl
and
movl
add
pusha
scas
imul
lahf
out
or
and
cwtl
sub
add
xor
or
jl
adc
into
add
inc
jg
fiaddl
cld
pop
cmc
call
mov
mov
pop
faddl
inc
clc
movsl
inc
adc
clc
mov
test
pushf
shrb
pop
out
or
popw
lock
iret
cmp
es
or
mov
rcl
nopl
out
mov
inc
fdivrs
pusha
in
and
cmp
and
sbbb
test
adc
push
pop
push
and
xor
test
add
popa
cwtl
or
cmp
sti
pop
pop
or
xchg
inc
fisttps
adc
jge
pop
add
jnp
ficoml
mov
dec
sub
and
cmp
pushl
out
pop
sbb
lock
lret
enter
xchg
sbb
stos
fldenv
and
cli
mov
daa
push
and
pop
in
and
pop
ljmp
cmp
mov
mov
cmpb
pop
outsl
push
bound
mov
clc
mov
inc
or
es
xchg
pop
dec
add
shl
daa
cs
cli
leave
or
das
outsl
add
adc
xchg
fadds
sbb
pop
inc
cltd
xor
pusha
or
dec
dec
or
ret
inc
jnp
mov
inc
mov
je
push
jmp
scas
dec
pop
mov
xor
cld
lea
inc
sbb
clc
sbb
ss
add
jae
inc
rclb
inc
add
daa
inc
sub
pop
xlat
test
negl
add
pushf
movsb
inc
int3
mov
arpl
add
or
fidivrl
out
loope
inc
cmp
inc
in
lret
mov
dec
cwtl
jbe
xchg
fadd
cwtl
fsubrl
std
jns
xchg
xor
pushf
pop
int
ljmp
inc
dec
push
iret
outsb
xor
dec
cmp
mov
or
hlt
mov
loopne
lds
mov
pushf
lcall
adc
fildll
adc
sarb
push
push
in
mov
inc
loope
les
xchg
pop
adc
push
bound
dec
sbb
add
cs
lock
pop
push
and
inc
popl
jo
push
lds
inc
xor
int
ret
push
addr16
jecxz
js
and
adc
cli
dec
or
sbb
fldl
jmp
cmp
js
outsb
push
fmull
rcl
dec
dec
jns
pop
subl
sub
mov
cmpsl
adc
movsl
add
lock
shr
dec
lods
data16
mov
mov
jo
js
xchg
dec
mov
mov
mov
inc
inc
nop
add
jmp
neg
xor
add
push
rdpmc
dec
add
or
add
mov
xchg
cmp
fs
jo
shrl
lock
push
adc
popa
add
aaa
mov
in
or
sbb
pop
out
mov
cmp
into
add
data16
sbbl
push
push
cwtl
xlat
push
sbbb
je
cmp
mov
push
mov
loop
loopne
cmp
xor
shr
jae
push
jb
aam
sub
mov
jecxz
mov
xchg
sbb
pop
jecxz
dec
xchg
stos
xchg
rclb
mov
mov
xorl
inc
or
movl
cmp
bound
stc
out
adc
ds
lss
mov
jecxz
or
fisubl
mov
sbb
jne
lds
xor
inc
cwtl
add
mov
add
inc
and
mov
ret
sbb
sub
jns
and
mov
add
mov
jne
inc
push
aas
xor
cmc
and
and
xchg
push
sub
or
mov
and
adc
inc
cmpsl
sti
hlt
mov
mov
ret
int3
test
shl
cli
add
pop
mov
insb
flds
sub
xchg
aam
int3
push
push
push
cmp
add
add
jmp
sbb
mov
pop
cmp
stc
cli
test
xor
cs
adc
xor
ljmp
jle
cmp
imul
repz
inc
pusha
daa
cli
push
jmp
pop
add
mov
hlt
push
gs
ds
mov
jne
repz
pop
add
push
dec
adc
jb
inc
jl
adc
push
es
xchg
mov
sarl
sbb
ret
and
loope
jnp
add
jmp
add
fbld
into
or
cli
xor
and
xlat
pop
testl
movsl
push
lock
add
sbb
call
inc
cld
clc
adc
mov
rcrb
inc
push
add
add
pushf
add
out
clc
sbb
je
pop
lds
std
cld
jo
push
in
add
inc
fistpl
add
mov
lods
adc
test
xchg
data16
cs
leave
add
ss
sahf
lcall
sbb
push
icebp
pop
jge
lods
sbb
addb
xor
and
test
ja
mov
stos
pop
add
scas
mov
cmp
cmp
push
fiadds
add
movsb
cld
arpl
es
rorb
lds
adc
adcl
mov
jne
xchg
and
aaa
add
cmpsl
sub
xchg
mov
sbb
fstps
xchg
movsb
add
daa
leave
dec
stc
pop
adc
add
add
adcb
loopne
add
push
jle
sarb
add
mov
lods
or
jmp
pop
mov
test
movsl
inc
scas
aaa
xchg
lods
add
cmp
fnsave
ja
std
xor
or
in
incb
cmc
add
repz
inc
lea
sub
push
inc
or
stc
and
call
nop
cwtl
out
pushf
inc
push
fildl
mov
or
xor
mov
ljmp
mov
outsl
leave
popa
dec
mov
add
xchg
mov
cmp
stos
orb
les
test
jle
fwait
xchg
dec
mov
mov
test
push
lret
mov
cli
and
lret
cmp
test
icebp
inc
dec
push
push
push
jns
jbe
cmp
push
ret
push
in
dec
adc
xchg
sti
leave
cwtl
xchg
and
and
sbb
and
loopne
mov
bound
aam
fldl
rorb
pusha
mov
jmp
sbbl
faddl
js
test
roll
xor
inc
mov
lea
cld
cmp
xchg
jnp
push
jl
pop
dec
arpl
out
pop
add
lret
rcll
pusha
sub
jne
add
cmp
mov
mov
sbb
adc
loope
fs
mov
inc
xor
jnp
and
add
cld
cmp
mov
ss
cmp
cmp
pop
add
push
mov
mov
push
and
repz
sbb
cmpsb
xor
xchg
adc
lret
sub
fnstsw
mov
add
ret
add
loopne
jle
add
cmp
je
call
rolb
add
fsub
push
cmp
jne
xchg
lods
cli
dec
call
sahf
inc
push
xchg
roll
daa
add
inc
iret
pop
jge
js
addb
xor
cld
outsl
adc
aam
je
es
dec
pushf
add
bound
and
into
push
dec
shrb
mov
fcomps
push
movsl
lret
sub
mov
add
inc
pop
test
pop
mov
adc
pop
sahf
mov
lods
add
cmpb
popl
loopne
stos
sbb
add
jg
scas
push
fisubl
icebp
das
dec
pop
mov
jns
push
std
faddl
repz
int
rolb
and
and
cmpsb
pop
fdivp
jns
int3
mov
ja
mov
mov
jbe
out
fwait
inc
mov
insl
push
add
fs
add
mov
into
jl
cmp
popa
out
call
adc
lret
lahf
xlat
xchg
xor
mov
or
inc
mov
xchg
sbb
xor
or
add
iret
mov
cmp
cmp
jp
jnp
inc
enter
cli
mov
dec
loopne
mov
push
dec
add
mov
and
into
xchg
mov
scas
pusha
mov
or
or
es
frstor
mov
sbb
pop
or
sbb
outsl
adc
xchg
scas
inc
cmpsb
add
insl
jno
mov
inc
out
add
sahf
dec
inc
mov
enter
mov
into
xchg
mov
nop
cmp
mov
push
rorb
orl
mov
pop
scas
add
cmp
lcall
add
sub
mov
jl
roll
ljmp
dec
sahf
aad
in
add
xor
sbb
jmp
add
pop
cltd
xchg
scas
loope
xchg
add
fisubrs
xchg
jg
add
pop
stos
mov
cmp
jno
mov
or
sub
imul
inc
add
ja
xchg
add
mov
ret
adc
test
mov
lock
jp
and
ret
stc
std
fimuls
das
mov
mov
ret
popa
sbb
mov
sahf
ss
or
cmpsl
enter
bnd
xchg
loop
cmp
add
jo
xchg
je
sti
xor
cmpsb
or
outsl
mov
mov
and
pop
in
xor
push
pop
fcompl
jmp
movsl
imul
addl
inc
cmc
adc
xchg
inc
fwait
dec
shufps
add
cmp
sub
sahf
jle
les
mov
dec
rclb
push
jnp
add
les
jno
rcrb
leave
push
adcl
add
jl
gs
rolb
push
cwtl
add
and
ss
inc
dec
fadds
test
cwtl
mov
dec
jg
pop
sarl
mov
out
cmp
es
lahf
mov
mov
or
xor
in
push
add
jecxz
and
push
aam
ds
cmp
sbb
in
xchg
jae
hlt
mov
push
cwtl
add
mov
les
add
jns
mov
outsb
adc
inc
adc
out
jle
xchg
scas
push
das
mov
sbb
add
sbb
and
pop
or
pop
aad
xor
stos
sbb
xorb
pop
inc
cmpsb
or
insl
jb
js
call
mov
pop
dec
call
pop
mov
mov
xchg
lcall
push
movsb
ljmp
pop
shrb
cld
or
scas
push
test
pop
icebp
call
jb
push
in
scas
push
cmp
push
mov
inc
push
rcrl
mov
jo
sub
sbb
dec
rcr
xor
adc
subb
add
sbb
cmp
xchg
fiadds
mov
int
and
or
into
jecxz
in
mov
rclb
mov
and
insb
push
call
pop
push
pop
arpl
sub
dec
subl
jne
inc
pop
add
add
call
out
push
lret
sbb
negl
insb
or
cmp
sub
fisttpl
jle
test
jno
arpl
add
mov
sbb
push
cli
pop
push
mov
or
shrl
cmovs
addl
les
sub
push
stos
outsl
test
mov
add
rcl
mov
or
dec
mov
jae
inc
nop
hlt
aas
mov
inc
adc
jno
fdivrl
mov
and
rorb
pop
push
mov
cmpb
jbe
jmp
lret
bound
js
cmp
mov
cmp
jp
add
sub
push
pop
mov
mov
int
cmp
cmc
jbe
mov
mov
insb
or
jecxz
scas
mulb
push
out
add
je
pushf
ficompl
and
in
xor
into
imul
pop
cwtl
shlb
push
xor
push
into
or
mov
add
js
mov
adc
rcl
loope
scas
testb
mov
xchg
loop
jge
inc
jbe
loope
icebp
rcll
add
sub
push
jno
cmp
and
cld
cmp
jb
movsl
adc
in
and
shr
andb
cmpsb
sbb
js
sub
push
mov
leave
arpl
mov
add
hlt
sar
sbb
mov
jg
and
sbb
inc
pop
add
shrb
jne
dec
popa
add
xor
testl
faddp
adc
cltd
adc
enter
xor
dec
pop
cwtl
mov
ret
shll
popf
les
add
divl
ror
sub
mov
adc
fcom
inc
cmp
mov
adc
add
cmp
bsf
inc
mov
nop
sub
mov
push
imul
and
popl
dec
pop
xor
out
pop
jb
dec
mov
jnp
and
lock
popf
mov
lock
or
into
sbb
mov
xor
add
jne
scas
icebp
pop
cmp
jo
loop
xor
lock
test
pop
sti
js
inc
scas
loopne
insl
pop
testl
std
repnz
js
cmp
sub
imul
testl
mov
ds
das
adc
add
hlt
jmp
add
std
sbb
xor
mov
dec
push
sbbb
loope
int3
es
cmp
and
sbb
push
sub
insl
outsl
push
mov
cwtl
sbb
add
imul
mov
ffreep
mov
aam
in
and
stos
fs
and
add
loope
xchg
pop
mov
es
outsb
mov
mov
movsl
or
push
insb
nop
inc
and
cmp
add
inc
shlb
sub
add
xchg
arpl
jo
add
push
outsl
push
dec
fsubs
add
adcl
lock
jno
loop
mov
ljmp
pop
roll
sbb
mov
ss
out
jge
xor
insb
enter
add
push
xchg
aas
add
test
sub
jmp
push
pop
sbb
sub
sbb
jle
repnz
rcrl
mov
add
scas
pop
rolb
hlt
push
cld
jge
sub
inc
or
ret
ljmp
xchg
sub
cmp
dec
or
xor
aaa
sbb
ljmp
inc
and
aam
jb
pusha
jmp
mov
in
inc
sub
push
xor
mov
cltd
inc
add
cs
or
arpl
xchg
shl
dec
dec
add
rcl
mov
inc
dec
gs
inc
inc
sbb
popl
jle
or
pop
push
xchg
mov
sbb
pop
push
in
push
aas
enter
pusha
pusha
push
push
sti
dec
mov
push
das
or
mov
int3
pushf
cmp
repnz
xor
js
mov
and
jecxz
pop
nop
add
lcall
push
clc
jl
add
fisttpll
push
sub
cmp
rorl
adc
or
dec
repnz
jnp
lods
pop
fnstsw
mov
fwait
push
add
xchg
jg
add
repz
in
push
cmp
jmp
push
rcll
pop
iret
jmp
icebp
outsb
aas
je
pusha
les
xchg
xor
and
stc
xor
mov
and
call
lret
fbstp
and
adc
mov
test
sub
nop
imulb
scas
xchg
inc
inc
out
jne
add
in
lods
pusha
jae
fisttpl
ja
clc
push
lret
test
sahf
add
jbe
jb
xchg
push
insb
adc
pop
in
loopne
popw
push
add
jns
inc
iret
mov
cmpsl
popf
mov
imul
pop
pop
mov
cmp
dec
out
pop
lock
cwtl
test
jo
xor
mov
dec
adc
and
faddl
data16
xorb
leave
mov
cmpl
sub
xorb
and
ljmp
and
inc
xor
lods
add
in
shlb
cwtl
jb
jl
inc
add
movsl
jge
lea
xchg
loopne
int3
adc
inc
dec
lret
nop
add
mov
or
mov
leave
mov
inc
andl
xchg
test
jo
add
xor
mov
ljmp
xchg
popf
pop
cmova
test
cmpsl
mov
add
inc
sbb
jbe
or
addb
pusha
push
pop
les
imul
sub
movsb
or
out
dec
pop
dec
add
movsl
sbb
push
xlat
dec
inc
add
mov
inc
xchg
add
adc
in
dec
add
dec
sub
popa
mov
stos
inc
cmp
sbb
gs
xchg
mov
cmp
rolb
add
cmpsl
loopne
xchg
push
leave
add
cmpsb
imul
push
ljmp
icebp
nop
sub
stos
cmp
repz
leave
sbb
mov
fidivs
add
sub
dec
inc
cld
add
sbb
cmpsl
bound
pop
sti
sbb
xor
sbbb
movsb
push
and
xchg
inc
out
fistpl
dec
popf
add
inc
imull
push
aas
lds
push
mov
fcomip
inc
test
inc
fsubrl
add
std
fwait
mov
lret
jno
add
dec
or
dec
ret
or
jnp
add
and
loop
push
repnz
inc
jge
repz
sahf
out
movsl
js
jae
add
adc
int
leave
std
les
sbb
lret
mov
mov
and
add
push
fstl
sbb
push
mov
xor
cmpsl
arpl
jl
cmp
fadds
inc
ret
aas
xor
add
lahf
jg
xor
add
dec
rorl
jno
push
add
mov
or
or
sub
das
in
dec
popa
mov
jae
stos
fistpll
ret
xchg
lcall
mov
pop
jo
addl
and
fucomi
movq
sub
ss
lcall
push
xorb
add
neg
jl
mov
or
push
lahf
and
lret
inc
lods
aas
jbe
jne
jo
add
int
pushf
mov
add
cli
dec
or
mov
pop
pop
jno
les
inc
pop
lret
data16
adcb
jl
dec
test
jge
or
outsl
std
xchg
adc
lret
cmpsb
jle
repnz
jmp
hlt
mov
mov
xchg
lcall
je
lahf
lods
add
push
int
mov
shr
aam
orl
rorl
pop
std
jae
scas
dec
pop
in
cmp
dec
sub
movups
aas
icebp
pusha
call
adc
mov
mov
dec
and
and
mov
mov
push
inc
dec
js
pop
add
add
mov
lds
int3
mov
js
sub
push
mov
daa
rcrl
mov
rorl
push
ret
leave
add
ja
inc
xchg
sahf
sub
mov
fidivrl
repnz
sub
push
jae
pop
lret
popf
scas
je
cltd
mov
adc
enter
add
xor
adc
add
jle
loop
das
and
movsl
icebp
mov
or
int3
add
dec
mov
clc
daa
out
jp
sub
jns
or
push
xor
mov
add
mov
push
inc
pop
test
xchg
jns
es
push
mov
sbb
into
mov
clc
pop
sub
jne
cmp
add
gs
cmp
and
bound
jmp
mov
hlt
pop
mov
out
imul
xor
andb
fs
dec
dec
add
movsb
cmp
push
jge
in
add
shrl
mov
cltd
cmp
pop
sbb
xchg
inc
push
cmpsl
add
ret
pop
dec
enter
lcall
imul
xchg
xchg
jbe
add
punpcklwd
sub
pop
adc
repz
lock
stos
stc
mov
cmpb
add
or
inc
mov
cmp
mov
mull
dec
cmpsb
call
lret
mov
ret
in
sahf
loopne
shll
xchg
jmp
pop
and
or
pop
frstor
imul
mov
cmp
test
sti
inc
call
ljmp
inc
cmp
add
dec
cmp
add
jb
shrb
mov
inc
loopne
pop
testb
in
pop
mov
add
loop
enter
inc
add
fnstsw
dec
push
or
mov
cmp
xlat
xchg
insl
lds
mov
fsubl
xchg
xchg
inc
cltd
in
aad
and
data16
cld
scas
ret
repnz
jb
sub
dec
mov
clc
add
add
dec
add
popa
push
dec
mov
invd
bound
inc
jnp
outsb
pop
add
getsec
add
aam
ja
shrl
add
mov
mov
add
add
ficoms
add
and
sub
pop
jmp
add
ja
shlb
into
add
mov
dec
cmp
cmp
or
inc
shlb
add
dec
and
mov
mov
test
nop
mov
ret
test
cwtl
add
mov
sbbl
add
dec
dec
dec
cmp
ja
push
imul
and
pop
out
jne
jl
add
dec
icebp
sbb
xchg
mov
sbb
mov
push
cld
popf
xchg
fstps
cwtl
xor
add
jno
jae
pushf
dec
punpckhdq
jl
popf
mov
jb
pusha
cltd
cmp
out
xor
mov
cmpsl
mov
mov
dec
es
repnz
sbb
sub
loopne
test
cwtl
rcr
icebp
mov
inc
stos
mov
adc
test
push
movsl
mov
xchg
mov
add
xor
jge
mov
negl
push
add
mov
daa
add
shrl
repnz
mov
pusha
inc
loope
add
in
add
jbe
sub
fwait
mov
dec
cmp
nop
in
sbb
push
cmp
daa
mov
pusha
add
xor
sbb
dec
inc
jg
sub
iret
adc
movsl
add
jecxz
push
or
xchg
pop
dec
add
js
sbbl
push
mov
inc
pop
aam
push
test
sub
add
and
sbb
aas
hlt
dec
xchg
jb
add
push
aam
xchg
mov
scas
movsl
or
inc
pop
xchg
adc
push
jmp
xchg
or
sub
add
outsb
mov
xchg
xchg
scas
add
es
add
or
popf
fs
mov
adc
mov
lret
int3
mov
adc
ret
add
add
cld
stos
pop
out
push
rcr
stc
inc
fbstp
inc
and
psubsw
push
push
mov
dec
inc
jns
insb
bound
lods
inc
sub
dec
cmp
and
push
shll
and
clc
lahf
pop
add
mov
outsl
adc
inc
xlat
subb
dec
pop
jnp
mov
push
in
cltd
sub
sub
or
cwtl
ret
mov
add
inc
push
pop
inc
sahf
mov
xor
xchg
push
or
push
pop
popf
bound
mov
addl
xor
push
cld
push
add
fs
xchg
sbb
mov
rolb
les
cs
and
lahf
cmc
push
add
lret
std
nop
andl
mov
inc
xorb
and
arpl
fidivl
adc
pop
icebp
lret
jae
movsb
jge
jb
add
dec
xlat
or
push
roll
xor
add
lahf
cld
add
sbb
sbb
push
aaa
add
ljmp
and
add
in
out
aam
ret
loope
jle
movsb
cmp
jne
in
pop
das
add
dec
jge
xor
jl
mov
jo
jg
dec
or
fsubrs
dec
inc
ds
pop
in
nop
pusha
add
test
nop
and
inc
jmp
sbb
add
or
gs
insb
add
add
mov
and
mov
push
pushf
sbb
add
add
fwait
sbbl
rolb
push
addb
pop
push
cmp
or
xchg
mov
scas
daa
jmp
insl
jecxz
cmp
cltd
xchg
dec
xlat
daa
je
add
add
cwtl
mov
mov
aam
add
in
into
inc
add
lock
lea
mov
xchg
sub
add
std
fwait
jne
enter
lret
push
nop
or
testw
jg
dec
add
test
add
sbb
out
xchg
pop
divl
xchg
into
test
outsl
inc
popa
in
js
hlt
xchg
scas
iret
push
fld
inc
sbb
or
shr
lret
add
sbb
xchg
rcrb
stos
sub
add
xchg
inc
inc
or
add
pop
xor
fmuls
adc
cmp
shrb
mov
mov
data16
add
test
enter
out
sbb
outsb
into
sbb
jg
inc
jb
rcrl
sbb
rorl
sub
int3
fisubl
add
xor
add
pop
enter
mov
sbb
add
ds
pusha
mov
jl
add
incb
push
lretw
icebp
cltd
sbb
add
pusha
cld
rolb
xor
insb
addl
mov
sti
cmp
mov
or
fisttpll
addr16
cltd
rcrb
jns
add
adc
pop
into
mov
inc
adc
push
pmaxsw
cs
add
mov
shll
add
push
stc
andb
popa
mov
xor
fiaddl
sub
je
and
jecxz
or
sbb
lock
or
jle
ds
sub
lea
jno
psrlq
dec
loopne
nop
or
or
inc
test
fimull
dec
sbb
cmp
js
dec
imul
mov
and
pop
es
repz
int3
add
xor
and
fsubrs
xor
xchg
xchg
inc
dec
bound
fcomip
xor
fidivs
enter
xor
jp
mov
test
mov
outsb
add
fnstenv
push
pop
add
jbe
push
add
inc
cmp
or
adc
cmc
lods
outsb
stc
mov
mov
push
xchg
add
testb
xor
sub
sarl
aam
pop
add
adc
data16
push
pop
sbb
test
icebp
insb
cmp
and
dec
stc
scas
inc
enter
mov
lahf
aaa
in
push
test
popf
aad
les
sahf
inc
fadds
hlt
cmpsl
and
or
and
or
std
iret
frstor
scas
pop
cmpb
sbb
mov
add
sbbb
and
subb
add
dec
adc
in
add
out
lcall
arpl
and
jne
add
clc
mov
mov
and
shrb
ja
je
rorb
shlb
mov
add
fimuls
mov
push
mov
inc
dec
in
pushf
add
jge
jmp
mov
mov
add
lock
imul
xchg
loopne
add
pop
cmp
xor
fwait
lods
ret
push
add
je
add
xchg
or
loopne
dec
insl
jp
pop
jo
dec
stos
xchg
add
xchg
mov
mov
cltd
sti
jbe
scas
fucom
add
push
inc
cmp
pusha
add
cli
or
add
es
add
or
push
cmp
add
and
rolb
add
mov
xchg
inc
push
test
sbb
xor
xchg
add
jno
mov
scas
aaa
das
aad
test
mov
sbb
mov
fwait
dec
int
hlt
dec
stc
inc
mov
out
mov
lea
or
mov
and
add
dec
jbe
mov
enter
pusha
sahf
mov
aaa
cmpb
pop
or
sub
push
push
daa
lea
push
sbbb
sbb
mov
xchg
cmp
cmp
in
pop
cmpsl
sub
add
xchg
loop
fimull
sbb
sbb
ret
outsl
sub
xor
add
incl
js
jp
xlat
pop
add
loope
xor
xchg
jecxz
int3
in
xor
shl
in
out
ret
filds
adc
pusha
sbb
xchg
pushf
hlt
ja
xchg
add
aad
aam
es
lock
add
dec
jbe
ud0
lock
les
xchg
outsb
mov
cmp
test
add
inc
sarb
inc
xchg
add
nop
adc
iret
mov
orb
mov
inc
inc
lds
movsb
jne
pop
popf
jbe
add
in
push
leave
add
outsb
fadd
xor
sub
add
mov
hlt
xchg
fisubrl
add
rcl
into
or
push
inc
cmpl
dec
mov
inc
push
imul
inc
test
filds
lods
cmpb
mov
push
push
sar
inc
add
pop
jg
out
add
std
inc
aas
cmp
add
lock
shrl
push
add
mov
jno
pop
mov
lods
movsl
jo
insb
xor
xchg
rcr
fistpl
sub
cmp
clc
pop
inc
sub
and
add
xchg
mov
jg
aam
cmp
mov
inc
or
stc
test
loop
in
adc
fiadds
dec
into
mov
xchg
subl
fwait
and
cmp
scas
add
leave
out
xor
adc
loope
loopne
shll
add
sbb
js
xor
cmp
add
xor
jp
adc
nop
add
and
inc
test
les
or
add
rorb
outsl
dec
xor
fs
add
sbb
imul
mov
cmc
decb
or
cmp
push
shrb
jnp
shlb
sahf
sbb
or
xchg
psubq
int3
leave
inc
aaa
adc
xchg
pusha
xor
pushl
mov
clc
cmp
sbb
pop
add
mov
outsb
into
addr16
cld
test
js
jb
mov
iret
dec
ja
push
movl
test
mov
push
xor
and
add
pop
jmp
add
adc
sbb
sbb
pop
shll
push
das
mov
jo
insl
mov
push
push
mov
xor
shl
sub
out
out
mov
pop
cmpsl
out
add
cmp
mov
xor
icebp
in
inc
inc
dec
mov
mov
fcompl
das
add
lret
push
scas
xorb
add
push
aas
inc
js
xchg
ja
pop
inc
adc
add
inc
jle
xchg
pushf
scas
aas
fwait
and
cmp
leave
adc
shrb
xchg
add
into
stos
je
xchg
movsb
jo
add
adc
pop
add
inc
mov
add
cmp
imul
nop
les
in
xor
fxch
jp
add
mov
cmpsb
push
jbe
adc
cmp
xlat
lock
mov
cs
dec
xchg
push
add
pushf
gs
adc
hlt
sub
loopne
cltd
add
or
xchg
test
loop
lods
inc
or
pusha
ror
add
xor
and
pop
or
mov
mov
jmp
bound
les
sub
sub
cwtl
sbb
fmuls
cmp
loope
or
add
fwait
pop
movd
fcomps
fxch
test
xchg
arpl
sub
scas
jne
sti
jbe
add
dec
mov
jno
pop
dec
add
in
xchg
mov
enter
pop
add
cmpsb
lcall
mov
pop
imul
jecxz
mov
sbb
fsub
pop
mov
loopne
adc
jns
and
add
js
xor
inc
push
int3
push
mov
aaa
rolb
pusha
mov
movsb
cmpb
imul
mov
and
cmp
in
sbb
or
lret
int3
mov
add
cli
ret
rcrl
jo
in
push
mov
ret
push
fsubrs
add
repz
leave
ret
iret
mov
lock
adc
sub
js
adc
jb
call
add
notb
xorl
sbb
xchg
jbe
or
adc
add
into
mov
addb
mov
push
clc
dec
add
sub
pop
jp
xchg
jo
sbb
imul
ss
movl
add
adc
push
repz
add
sbb
ret
int
mov
add
jb
cld
daa
pop
in
mov
sti
out
ds
xor
mov
adc
js
in
cmpsl
add
mov
push
mov
xchg
popa
cmp
add
iret
das
cmpb
lock
enter
jmp
in
xor
pop
or
loope
bound
jl
push
jle
inc
sbb
aaa
sbb
and
or
or
clc
rcr
adc
add
jne
sbb
add
xor
push
push
sti
add
sub
push
pop
out
pusha
ljmp
add
and
pop
xchg
adc
test
mov
add
sbb
xchg
dec
shll
ret
mov
inc
mov
mov
aaa
pop
out
pusha
movsl
lods
jle
pop
jmp
add
xchg
into
fs
xchg
aad
dec
push
pop
pop
add
mov
xor
cmp
dec
std
inc
iret
jns
or
pop
out
push
and
adc
aas
push
jg
out
mov
jne
inc
sti
lahf
adc
or
xor
in
or
xchg
pusha
dec
push
lea
xor
jle
out
pop
add
mov
insb
ret
xchg
shll
repz
dec
add
jg
jae
jge
shlb
cs
roll
xchg
or
sub
or
scas
lahf
daa
inc
sbb
sbb
or
sub
lods
jne
insl
mov
lea
dec
int3
lret
mov
flds
add
xchg
mov
daa
add
push
xor
push
test
movsl
mov
dec
popf
sti
add
mov
sub
fnsave
pop
xchg
xchg
mov
push
int3
mov
sub
push
add
jl
fldl
inc
cmp
xchg
js
pop
js
adc
push
leave
mov
scas
add
ljmp
add
insb
and
mov
or
add
mov
xor
dec
adc
mov
add
daa
pop
rcrl
out
pslld
adc
jbe
inc
add
bound
mov
dec
xchg
sbb
pop
in
jmp
ja
add
mov
ja
inc
add
in
fldenv
icebp
mov
fisubrs
jbe
pop
jg
addr16
cmp
adc
mov
fcoml
pop
cmp
leave
jno
nop
cmp
sbb
jnp
xorl
adc
xchg
mov
dec
mov
fsubl
or
hlt
or
out
push
adc
mov
add
gs
mov
shlb
add
in
xchg
mov
jne
dec
sub
mov
jae
and
dec
call
add
add
push
inc
fldl2e
shlb
push
dec
je
add
ss
sbb
aad
mov
and
cmc
add
xchg
dec
xchg
mov
and
push
popf
add
push
cmp
or
into
push
ret
pusha
inc
movb
lcall
inc
into
jbe
add
mov
add
cld
mov
add
lcall
sbb
jge
inc
dec
rolb
stos
data16
lods
insb
aam
pop
cli
in
movsb
lock
pmulhw
inc
rcr
xor
add
out
jp
sahf
adc
jg
add
stc
loop
shlb
rcr
add
jo
xchg
add
fdiv
pop
or
or
and
mov
add
inc
add
push
cmp
sbbb
mov
inc
nop
dec
mov
inc
adc
fwait
and
movsb
adc
pop
xchg
mov
das
imul
cmp
js
test
mov
dec
add
push
orl
jmp
and
add
push
cmp
sub
mov
mov
hlt
sub
xchg
jecxz
scas
inc
ljmp
cwtl
add
fdiv
sti
inc
repz
adc
out
pop
mov
pop
popa
not
pop
inc
test
mov
fsubrs
adc
lea
cli
mov
bound
add
push
sbb
jo
lret
inc
movsl
add
dec
or
test
jecxz
xchg
mov
jns
or
es
add
lds
pop
mov
adcl
jo
add
mov
add
pop
aaa
cmp
mov
add
lret
cmpsb
aas
inc
enter
repnz
xor
jno
or
mulb
add
add
nop
adc
dec
pop
lret
dec
pushl
ja
shll
mov
aas
xor
jmp
push
inc
pushf
cmp
stos
mov
dec
inc
lcall
pop
insl
lods
pop
rorb
add
cmp
dec
rolb
mov
out
sub
add
out
shr
mov
and
lods
mov
sbb
icebp
dec
mov
add
fs
aad
mov
and
mov
jo
add
int3
nop
daa
xchg
roll
adc
scas
lret
xor
add
popa
inc
ret
sbb
inc
pop
int3
es
cmp
and
cmpsl
mov
notb
movsl
fldl
cmp
xchg
xor
push
adc
add
xor
adc
cmp
mov
jno
pop
in
cmp
cmp
out
pop
push
adc
repnz
dec
ret
loope
cmp
mov
in
addb
daa
stos
fsubp
pusha
cmp
cmp
cld
in
scas
popf
into
xor
jne
sub
xor
inc
pop
jbe
bound
inc
ss
call
add
rclb
mov
pop
jmp
sub
xchg
clc
aam
enter
in
pusha
mov
and
sbb
xchg
cmp
push
and
mov
frstor
push
adc
out
jg
add
fstps
loope
add
dec
test
pusha
hlt
xor
sti
jbe
repz
jno
xchg
push
popa
xadd
sub
pop
loope
dec
xor
sub
pop
mov
add
mov
mov
add
in
pop
sbb
or
sub
divl
push
es
pop
sub
jo
dec
push
add
out
add
inc
les
test
lock
incl
jecxz
inc
fs
mov
xor
mov
out
mov
lods
test
stos
mov
jnp
cmp
dec
add
nop
and
add
or
inc
pop
icebp
add
lret
push
sub
inc
fmull
shll
pop
fadds
inc
aad
leave
popf
jne
add
mov
addb
jo
push
into
pop
xchg
or
out
nop
sub
insl
pop
in
and
mov
jb
xor
fmulp
adc
mov
sub
aas
sar
add
sbbb
pop
sub
jno
outsl
in
add
ficoml
cmp
jnp
js
pop
popl
or
inc
adc
std
shll
lret
mov
add
xchg
cltd
adc
xor
add
mov
addl
pop
and
jbe
xchg
out
iret
add
js
mov
out
lea
in
add
cmp
rorl
dec
jl
mov
sbbl
in
popa
add
sbb
fxtract
lret
dec
test
and
pushf
in
inc
mov
jmp
mov
mov
and
pop
mov
xchg
add
je
mov
sbb
in
cmp
sub
lock
xchg
fisubrl
add
push
arpl
add
mov
insb
scas
subb
and
rcrb
roll
dec
mov
mov
cmp
loope
ret
push
and
or
into
sbb
es
dec
or
add
push
iret
add
pop
dec
add
mov
shl
push
and
mov
add
pop
popa
mov
pop
cmp
inc
push
insb
pushf
add
xor
or
add
adc
jp
loope
sbb
mov
gs
packuswb
cmp
sti
mov
mov
inc
xchg
pop
rorb
pushf
stos
arpl
cwtl
fs
xchg
add
in
fcompl
ljmp
cld
add
mov
scas
mov
add
lock
faddl
adc
add
lods
or
pushf
fsubrs
inc
add
aas
mov
add
ret
add
jne
or
repnz
rcrl
imul
add
lret
hlt
mov
add
das
lcall
xlat
mov
adc
faddl
lods
add
cwtl
add
xchg
cmpsb
repz
cvtps2pi
and
mov
add
cmpl
add
pop
mov
jno
popf
enter
cmpb
filds
arpl
cli
jbe
cmpsl
fcoml
mov
mov
repz
dec
icebp
mov
adc
rclb
repnz
nop
movsb
add
call
sub
sbb
and
xlat
cld
or
add
cmp
insl
xor
cmpsl
call
and
pop
cmp
cmp
out
lock
out
mov
cmc
cmp
mov
xchg
inc
sub
arpl
inc
mov
or
cld
lods
add
stos
inc
jae,pn
and
pop
nop
addb
and
add
pop
cmp
jmp
sbb
movsl
int
into
inc
insb
xchg
nop
jo
cmp
loop
lea
sub
add
ffree
out
andl
sti
fcoms
sbb
or
or
mov
adc
clc
clc
es
push
adc
push
xchg
cmp
sti
or
push
sub
imul
cmp
pop
sbbl
insb
inc
mov
daa
xor
pop
arpl
xor
add
mul
inc
les
je
cwtl
ss
pop
add
inc
pop
ret
jl
adc
clc
add
fidivl
movsl
arpl
loope
loop
mov
js
add
popa
jns
push
scas
je
loopne
fldl
fnstcw
dec
xchg
test
cs
push
sbb
add
leave
add
inc
nopl
lcall
mov
pop
dec
push
add
inc
ret
dec
jo
add
adc
cmpsb
jge
adc
xor
or
push
dec
add
mov
mov
sbb
and
push
or
fldt
dec
inc
sub
loopne
xchg
add
inc
mov
push
or
add
dec
lret
sbb
unpcklps
mov
arpl
xchg
cltd
dec
lods
adc
jno
test
popa
cmp
pop
or
jae
int3
add
insb
fwait
inc
add
sti
mov
push
adc
jg
mov
jae
testb
add
xchg
add
js
add
mov
flds
shl
aad
inc
sbb
cmp
fildl
jecxz
in
leave
sbb
add
stos
mov
orb
imul
repnz
fs
out
add
outsl
mov
mov
dec
xor
lea
xor
cmp
clc
pop
adc
jnp
jle
mov
mov
dec
inc
in
xor
mov
mov
dec
cmp
movsb
aam
sbb
pop
add
cmp
lret
sbb
sub
dec
lahf
roll
adc
hlt
fdivrl
ret
out
out
add
cmp
sub
pusha
mov
and
xchg
gs
jo
mov
orl
cs
mov
sbb
rcl
sahf
jmp
pop
add
and
add
cmp
aad
sbbb
int3
jb
and
dec
xor
sahf
add
repz
sysret
loopne
or
fidivl
inc
pop
push
xchg
or
nop
stos
into
adc
add
sbb
mov
mov
sarb
push
mov
enter
or
ljmp
outsb
pop
scas
mov
and
call
fildl
and
add
adcl
xor
pop
push
popa
add
idivb
movsl
and
pop
add
das
mov
inc
pop
outsl
cli
push
inc
or
xor
add
mov
mov
mov
scas
faddl
jmp
sbb
push
sbb
add
sub
call
pop
int3
dec
jecxz
sbb
adc
bound
insb
daa
int
icebp
pop
push
push
mov
in
in
pusha
jns
inc
movsb
jne
push
cmp
adc
outsl
clc
add
inc
lahf
sbb
push
cmp
push
xchg
adc
push
add
hlt
aaa
jge
sub
inc
add
nop
cwtl
imul
sub
or
pop
xchg
sbb
push
frstor
fsubl
scas
push
add
hlt
fistl
and
and
cmp
or
jl
mov
rcl
and
and
fbstp
add
sbb
mov
into
fisubrl
pop
sbb
fadds
push
add
push
add
and
pusha
lods
or
add
push
sbb
sbb
add
mov
add
ljmp
aam
repz
cld
add
sarb
xchg
adc
adc
int
push
nop
jmp
enter
xor
in
imul
test
sbb
inc
in
and
jmp
pop
pop
je
cmp
cs
into
adc
adc
lds
divl
mov
cmp
int
cmp
fdivrs
loope
mov
add
fiadds
addb
cmp
rolb
out
fstpl
lods
cmp
xor
cld
dec
xor
xchg
rorb
add
addr16
sbb
jge
pushf
add
rorb
mov
loopne
dec
jl
adc
and
sub
aam
negb
pushf
lret
push
and
sahf
dec
fdivl
add
ja
mov
adc
jg
in
jecxz
loop
addr16
sub
add
clc
or
xor
call
in
movsl
mov
add
es
dec
mov
insb
inc
ds
shr
push
pusha
hlt
dec
xor
fdivs
add
adc
and
addl
inc
xor
rolb
arpl
rolb
in
add
sbb
repnz
lds
sub
xchg
inc
xchg
add
call
xchg
dec
adc
cmpsl
lea
sub
fsubr
jae
inc
mov
mov
pop
popa
ret
xor
mov
iret
sbb
insb
jno
lret
das
push
push
mov
push
ret
push
test
icebp
lods
dec
xor
mov
aaa
inc
push
or
scas
and
dec
mov
addr16
fimull
filds
jae
mov
sbb
cs
xor
icebp
sarl
gs
add
xor
adcb
insb
add
pop
rorl
add
inc
dec
hlt
or
icebp
scas
jno
lcall
push
sbb
addr16
test
adc
and
add
push
jmp
push
pop
in
add
sti
xor
push
jae
jbe
add
in
pusha
push
jae
cmp
mov
pop
jle
dec
stc
clc
add
inc
inc
arpl
sti
lods
add
data16
add
jg
orl
xchg
or
mov
inc
add
pop
sbb
sahf
add
push
jno
or
push
aaa
mov
lret
jae
dec
shll
xor
xorb
mov
loopne
mov
fcompl
out
clc
add
add
dec
mov
test
fmul
add
and
jge
ret
jecxz
pop
jl
sbb
add
lock
cs
add
inc
shr
test
mov
adc
es
mov
cltd
mov
adc
push
xchg
test
add
xchg
nop
add
out
lock
pop
xchg
in
xchg
out
js
ljmp
lock
and
add
and
inc
lods
dec
imul
mov
out
jnp
mov
roll
inc
shrb
xor
add
and
dec
mov
pusha
or
pop
mov
in
setle
and
movsl
call
dec
add
push
sub
adc
xchg
roll
pop
xor
nop
sub
add
mov
push
xchg
sub
add
mov
inc
cmp
xor
mov
in
ficoml
mov
lcall
lock
shl
add
add
ret
cmp
icebp
cmp
in
xchg
push
out
inc
add
pop
lret
mov
into
lahf
cmp
jae
push
imul
jno
cmp
inc
mov
or
inc
daa
add
insl
jo
lea
add
sbb
mov
insb
arpl
add
fisubs
insl
add
lds
sbb
sbb
xor
pop
jno
add
icebp
sbb
and
inc
add
sbb
faddl
mov
lods
mov
pop
lret
dec
add
inc
fsubs
test
scas
mov
repz
xorl
jl
cwtl
dec
popa
push
add
mov
or
outsb
pushl
addb
ljmp
ret
inc
outsl
gs
mov
filds
movsb
imul
jno
mov
movsl
add
mov
xchg
testl
fimuls
cld
cmpsb
pusha
fcom
pop
mov
push
data16
cmp
jb
adc
pop
cld
inc
lret
push
or
fistpll
add
push
rol
add
js
addr16
sti
iret
jns
roll
mov
sbb
jnp
cld
add
cld
out
ds
mov
pop
repnz
dec
inc
push
add
sbb
pop
cltd
mov
mov
cmp
mov
dec
mov
add
ss
mov
cltd
bswap
icebp
and
popa
enter
add
daa
push
int
lods
xchg
add
ljmp
ljmp
dec
aas
test
jmp
push
pop
push
xor
sti
sub
jmp
inc
stc
mov
pushl
adcb
push
mov
and
bnd
add
or
stos
jg
sub
in
inc
lods
lret
stos
xor
mov
mov
sahf
and
push
adc
pop
rolb
fs
jo
int3
xor
add
loope
bound
incb
mov
verw
inc
xchg
xor
inc
pusha
sti
and
aas
arpl
imul
xchg
lea
pop
jns
aad
nop
dec
les
add
js
mov
ljmp
fwait
and
lret
lock
and
das
xchg
out
dec
addl
jb
dec
js,pt
adcb
int3
add
call
pushf
cmp
push
pop
iret
dec
mov
cmc
icebp
lock
inc
push
adc
call
sub
add
sub
xchg
add
inc
ret
push
xor
rclb
add
sbb
sbb
add
jns
dec
sub
add
fucomi
cmp
pop
movsb
sub
push
add
jecxz
push
push
cmp
mov
mov
sub
mov
add
ret
xor
xor
nop
subl
add
ljmp
sbb
mov
ret
add
add
mov
subb
cmp
jge
cmp
inc
roll
push
ret
dec
inc
push
mov
mov
sub
insb
stc
stc
dec
js
push
pop
insl
xchg
ret
pushf
jns
call
shl
stos
add
sub
sub
mov
pop
arpl
mov
xor
js
push
adc
add
int
dec
hlt
add
stos
jns
andl
or
gs
or
ja
add
sbb
popa
int
dec
adc
inc
cmc
aam
sbb
adc
setne
add
fldenv
aaa
pop
xchg
pusha
adc
into
inc
cmp
add
iret
push
les
xor
push
push
adc
loopne
adc
jo
inc
scas
inc
sbb
jmp
pop
sbbl
jg
int3
mov
jnp
scas
add
and
fnstenv
les
insb
fdivs
loop
push
xchg
shll
cmc
sbb
les
push
arpl
negb
scas
push
push
xlat
insb
add
add
inc
inc
aas
push
add
push
je
int
add
popa
mov
add
in
mov
das
mov
ret
flds
push
jp
push
outsl
add
rdtsc
xchg
mov
add
mov
call
sti
or
stos
pusha
sbb
add
mov
add
jl
jns
add
lcall
jns
mov
js
hlt
lods
push
mov
or
aam
sbb
jl
insl
cmpsb
push
or
mov
and
mov
sbb
lret
add
and
popa
pop
mov
scas
push
int3
and
dec
aad
xor
mov
mov
in
sub
sbb
add
jo
adc
iret
test
pop
mov
ds
add
in
mov
jle
rcl
add
jb
les
jo
movsl
jns
cmp
imul
and
cmpsb
mov
mov
dec
add
push
add
data16
popf
scas
sbb
lods
pusha
test
and
push
xorb
add
sbb
xor
cmpsl
lock
xchg
jle
sub
mov
pop
pusha
and
cwtl
jns
add
loop
jl
pop
xchg
cmp
xchg
lods
sbb
pop
push
ss
sbb
inc
mov
mov
in
int3
add
sbb
xchg
rorb
sbb
hlt
xlat
fmul
outsl
mov
push
aaa
pop
sbb
addl
add
clc
shrb
call
push
inc
std
mov
adc
or
mov
add
xor
cmp
add
imul
jnp
es
add
fwait
dec
inc
cld
jbe
sub
dec
movsb
pop
dec
jmp
add
jne
ja
pop
push
adc
inc
sbb
test
test
jns
in
fcomip
out
add
pushf
push
shlb
mov
and
nop
jg
sbb
call
iret
push
stos
or
movb
fildl
push
add
or
sbb
jo
lahf
inc
add
cmpsl
stos
mov
adc
pop
ret
mov
int3
mov
sub
mov
dec
in
add
jle
mov
in
push
add
add
adc
sbb
add
pop
mov
lods
mov
inc
cmp
add
rclb
and
pushf
daa
cwtl
repz
mov
push
adc
push
xor
sub
outsl
jnp
push
mov
mov
jbe
inc
add
push
clc
mov
push
pushf
add
cltd
push
into
jl
ds
or
xor
push
arpl
repnz
push
xchg
pop
jecxz
stos
cmp
mov
fistpl
mov
bound
rcll
xchg
movsb
xchg
and
add
call
push
add
movsb
mov
mov
add
xchg
sar
add
cmp
cmp
push
add
sbb
xchg
mov
jnp
adc
add
in
add
cmpsb
push
shr
pop
xchg
addl
imulb
mov
lods
call
arpl
or
fstps
rorl
add
dec
mov
mov
add
fcompl
xor
incb
adc
mov
adc
add
xchg
add
dec
sti
pop
imul
mov
inc
icebp
jl
mov
clc
cmp
sbb
sub
mov
pop
cmp
add
ret
adc
add
push
ljmp
loopne
mov
push
pop
ja
add
fadds
mov
cmpsl
fistpl
sbb
pop
jo
add
fstpl
scas
fxch
and
in
int
test
dec
shrb
inc
push
push
or
inc
movsb
jbe
mov
mov
pusha
lret
mov
xchg
dec
shrl
pop
jo
mov
lret
movl
or
add
out
cltd
mov
push
xor
add
xor
xor
sub
cwtl
hlt
mov
je
testl
std
dec
aas
rorl
mov
out
in
mov
ljmp
dec
sti
xor
jge
aad
push
addr16
aas
cmpsb
nop
mov
add
mov
cmp
cld
pop
and
js
sub
jbe
add
mov
lea
push
sub
adc
mov
mov
test
xor
gs
cld
mov
sbbb
js
add
xorl
call
adc
push
cmc
data16
test
pushf
pop
dec
push
test
xchg
mov
mov
hlt
lods
pop
sub
add
lret
inc
adc
push
shlb
fildl
hlt
jnp,pn
push
xorb
popf
mov
or
cmpl
push
mov
rclb
fimull
pandn
js
add
loop
xchg
inc
sbbb
stc
xchg
test
or
push
mov
pop
mov
je
xchg
xchg
clc
xchg
movb
adc
daa
mov
jp
add
iret
pop
enter
mov
test
nop
cmp
mov
fbstp
fadds
inc
shrb
mov
cltd
add
sub
pop
loope
xor
je
and
sub
add
mov
mov
sbb
inc
jne
pop
mov
jge
in
xchg
pop
addl
cli
sub
sub
and
jecxz
sbb
and
rolb
in
inc
lods
adc
or
push
inc
sub
inc
stos
jmp
jl
inc
mov
cmpsb
nop
sub
stos
inc
icebp
xlat
and
inc
sub
jns
test
add
xor
popf
insl
push
arpl
sbb
inc
ret
push
hlt
inc
cmp
cmp
sbb
jns
add
cmp
lods
add
sbb
cmp
test
add
rorl
inc
add
out
test
aam
adc
push
jge
stos
std
addr16
add
mov
mov
jl
cs
mov
push
inc
cmp
orb
mov
xchg
test
inc
dec
mov
imull
add
adc
add
or
imul
add
insl
mov
add
inc
fisttpl
sbb
daa
nop
push
dec
les
mov
loopne
xchg
std
jae
pop
mov
xchg
sub
mov
pusha
and
test
dec
pop
inc
or
xor
and
pop
add
mov
stos
add
push
pop
sbb
in
or
mov
adcb
lcall
arpl
dec
cmp
pop
fbstp
jle
add
repz
push
sbb
mov
mov
fmulp
sarl
sti
in
lock
cli
add
popa
mov
out
inc
psllw
add
cli
pushl
inc
pop
jmp
lret
lahf
push
jecxz
cmp
js
push
pop
xor
xor
add
data16
xchg
fwait
cmp
addr16
xlat
loope
data16
loop
cmp
sub
or
arpl
add
jl
cmp
iret
aam
adc
inc
mov
rclb
out
add
sbb
mov
push
adc
arpl
pop
push
jnp
incb
rorb
dec
dec
add
subb
sbb
repnz
pop
adc
movsl
sarb
or
jns
add
ja
push
fcmovb
je
dec
add
test
jge
xor
cmpsl
add
cld
insl
mov
jbe
add
das
loopne
int3
movsb
or
cmp
mov
in
mov
mov
xchg
mov
inc
xor
xor
push
repz
jg
inc
sbb
jmp
fadds
add
sub
les
jbe
inc
into
pop
fsubrs
xor
mov
pop
and
movsl
ja
or
dec
mov
nop
xor
adc
jnp
add
or
jb
rolb
cmpl
mov
xor
or
outsl
subb
cmp
or
add
jmp
xchg
jb
push
bnd
sbb
jbe
push
test
sub
or
mov
out
add
insb
add
pop
pop
inc
xor
mov
add
inc
xchg
xchg
int
cmp
pop
jmp
mov
js
pop
in
popa
sbb
sub
push
repz
pop
and
push
insb
loopne
mov
add
fs
lea
add
daa
add
or
jb
xor
hlt
add
test
stos
int3
add
jge
fidivl
mov
dec
test
mov
add
out
and
sbb
mov
ret
std
jnp
xlat
push
jle
ret
sti
stos
xchg
pop
cwtl
jne
rcr
sub
nop
inc
add
inc
js,pn
add
ja
les
sahf
cwtl
jo
repz
mov
aad
lea
test
fadd
test
xchg
cmc
inc
push
push
daa
sbbl
vmread
cmpsb
add
add
adc
in
add
mov
xor
or
dec
ljmp
xchg
das
mov
fmul
arpl
or
test
insl
daa
icebp
push
pusha
or
fidivrs
repnz
ja
push
mov
push
leave
les
iret
pushf
mov
mov
dec
and
cmp
lret
dec
and
test
mov
scas
cmc
test
imul
mov
sub
jns
xor
test
mov
fistpl
pushf
cli
femms
and
jae
add
out
mov
pop
pop
adcb
pop
push
or
test
add
into
nop
test
push
push
pop
or
inc
push
jb
jo
push
mov
add
ljmp
mov
inc
call
or
mov
push
pop
pop
pop
pushf
stc
aas
mov
loopne
and
push
cwtl
clc
call
add
jne
jp
add
dec
mov
jb
stc
popl
push
lret
mov
cli
sub
adc
add
cmp
add
dec
rclb
cmp
mov
jnp
and
jne
sub
add
test
aaa
fs
cmp
mov
sub
add
addr16
lods
add
leave
sahf
sub
nop
es
fadds
mov
inc
sbb
add
cltd
push
or
jno
mov
pop
add
push
jmp
jmp
xchg
adc
hlt
push
or
nop
mov
cmp
mov
orb
add
fsubrl
cmp
lods
test
pop
add
mov
mov
ds
pop
stos
call
out
mov
mov
jnp
inc
enter
add
adc
dec
inc
cmovb
push
add
sub
cmp
aad
loopne
stc
rorl
inc
mov
mov
pop
or
or
jnp
aam
cmp
xor
jmp
cmpb
inc
mov
lods
cwtl
add
cli
movsb
jmp
cld
lret
push
add
cmpsl
repz
in
cwtl
bnd
pop
push
inc
adc
clc
mov
add
out
and
add
loope
add
bound
enter
push
pop
popf
inc
loopne
lret
stos
add
or
pop
loopne
fwait
arpl
mov
add
ds
add
dec
jecxz
jmp
out
hlt
add
cmpsl
out
ret
push
jbe
jge
push
mov
jle
cld
add
clc
xor
or
int3
dec
sub
test
popf
push
je
add
sub
sbb
jl
jg
add
dec
xor
jp
cli
add
adc
pop
add
fistps
bound
cld
stos
jnp
mov
jne
adc
in
push
in
or
inc
sarb
rcrl
ds
cmp
mov
nop
out
pop
adc
pop
mov
cmp
mov
out
xor
inc
jge
outsb
push
jmp
mov
aam
xchg
leave
in
or
loopne
add
addr16
sub
movsl
add
mov
cmc
add
sbb
add
cld
rorl
sbb
dec
clc
pop
jnp
add
sub
dec
add
int
cmp
mov
jno
jnp
lods
add
clc
jns
mov
into
pusha
mov
xlat
mov
je
roll
sbb
in
push
or
and
xchg
jle
add
aam
stos
sbb
sbb
mov
adc
flds
jo
add
mov
add
jo
sbb
add
inc
sub
add
xor
add
aam
sti
cld
daa
sub
fisttps
or
push
push
sub
lea
stos
dec
add
aad
inc
add
ds
cmc
xorl
add
adc
fcmovnbe
cmp
cmp
jle
pop
push
dec
pop
sub
fisubs
add
add
ja
rcrb
test
add
imul
xor
test
sbb
xchg
in
std
adcl
mov
inc
xchg
dec
cmp
loopnew
test
add
jl
dec
cmp
fiaddl
call
clc
mov
mov
push
xor
sbb
adcb
mov
adc
add
frstpm(287
mov
mov
jge
jae
adc
mov
pop
push
and
or
ss
xor
cmc
add
xchg
roll
inc
sub
jbe
add
cwtl
jnp
mov
xor
xlat
dec
pop
and
dec
add
fiaddl
jl
les
aas
outsb
in
loopne
pop
and
pop
mov
add
ljmp
add
rorl
jbe
xchg
mov
jae
pop
mov
mov
mov
cmp
outsl
lods
lods
dec
pop
adcl
sub
cmpsb
add
dec
or
shlb
gs
and
jb
and
sub
adc
pop
inc
jecxz
in
in
push
sub
and
add
imul
or
stc
ja
cmp
fucomp
js
aam
push
in
sbb
hlt
lret
repnz
add
mov
out
loopne
lock
lods
sbb
lahf
fwait
bound
dec
sub
jo
sarb
push
add
xor
or
dec
pusha
test
lret
cmpsb
mov
push
dec
xlat
mov
cs
adcb
fisubs
idivb
cli
xor
xchg
push
dec
lret
das
popa
nop
rcr
and
outsl
test
pop
aas
inc
jmp
aad
rcll
sub
and
pop
push
mov
push
cmp
lret
push
jecxz
movl
adc
mov
mov
push
push
mov
popa
mov
leave
xchg
daa
add
iret
outsb
and
icebp
fildl
leave
mov
and
incb
es
sbb
add
stos
pop
outsb
in
push
divl
adc
hlt
add
push
or
xor
test
nop
add
stos
lret
inc
and
cmp
sbb
xchg
push
pushf
push
aas
les
or
imul
pusha
data16
shll
adc
mov
addb
jmp
push
mov
or
adc
add
clc
ret
add
mov
dec
xor
sarl
xchg
mov
adc
lock
mov
incl
sub
in
sbb
push
cmp
sub
aad
ficoml
rorb
or
ja
add
dec
mov
xchg
call
cmp
pcmpeqd
add
mov
xchg
add
inc
pushf
mov
push
add
aas
push
sarb
faddl
xor
inc
cmp
enter
mov
or
cmp
roll
dec
ljmp
adc
jne
jg
adc
lahf
add
aas
xor
add
push
sbb
and
shrb
or
mov
inc
jb
xchg
mov
sbb
jae
enter
icebp
popl
and
jne
shlb
notl
test
jo
enter
or
cmp
mov
clc
xchg
mov
mov
jno
das
add
jmp
addr16
add
and
adc
popa
lds
scas
jae
sub
xchg
jo
cs
mov
mov
jae
in
jmp
dec
jmp
add
es
jb
loope
mov
daa
nop
pushf
add
or
sar
shrb
push
mov
and
jp
and
dec
out
into
addr16
in
test
mov
mov
mov
or
or
mov
gs
jno
pusha
aam
add
add
add
push
lret
xchg
sub
cmp
push
jge
mov
jp
add
cs
xchg
leave
mov
cli
xor
mov
lret
movsb
push
cld
inc
mov
mov
fidivs
repnz
xchg
add
pop
dec
mov
jl
or
gs
mov
xchg
fs
test
push
dec
mov
aad
push
pop
or
xchg
mov
adc
loope
add
mov
mov
add
mov
jb,pt
insb
add
imul
shrd
add
lds
mov
popf
cltd
mull
mov
pop
iret
pop
jl
dec
test
mov
xchg
scas
cmp
push
add
int3
fadd
cs
call
sbb
movsb
or
xor
pop
enter
repnz
clc
pop
add
gs
cmpl
push
mov
dec
sbb
jmp
testb
fnstsw
shlb
mov
in
repnz
cmpsl
movsl
sub
cld
std
add
adc
sahf
mov
adc
out
mov
cmp
pop
stos
pop
add
jecxz
xchg
int3
nop
or
add
adc
mov
dec
jl
xchg
lods
mov
inc
cld
negl
or
in
add
test
jge
ret
add
or
mov
jne
inc
push
sahf
loopne
in
jmp
add
sbb
roll
mov
xchg
outsl
push
push
in
add
cmpsl
mov
push
mov
aaa
inc
mov
ds
cs
out
les
mov
daa
pop
push
cmp
pop
add
loope
or
lods
ljmp
pop
fs
add
lret
hlt
lret
imul
pop
js
roll
push
and
enter
inc
add
mov
inc
xor
add
sbb
dec
adc
stos
dec
add
outsl
lret
cmp
add
sub
cmpsl
popl
mov
shrb
arpl
sahf
mov
jae
push
add
repz
mov
sbb
pop
out
jno
clc
mov
jp
jae
clc
loope
cmc
test
dec
stos
push
xor
das
out
pusha
mov
add
sti
jb
out
xorl
add
nop
repz
adc
mov
xor
fists
mov
shll
sbb
cmp
out
add
push
movsb
mov
xchg
add
jns
mov
fildll
ja
icebp
add
pop
jl
mov
test
shrl
jo
jb
cmc
int
pop
lret
enter
mov
add
ss
mov
adc
mov
add
in
mov
jl
add
pop
scas
lahf
mov
push
sbb
daa
popa
add
shlb
mov
into
popl
arpl
mov
insl
je
sub
adc
dec
push
mov
inc
imul
add
sbb
shll
ljmp
pop
daa
pop
mov
movsb
mov
add
add
sub
std
hlt
add
mov
dec
xorps
jmp
fwait
add
push
mov
bound
fadd
inc
sbb
ret
mov
aam
test
adc
mov
add
std
clc
aam
push
ljmp
cmp
bound
lds
dec
in
repnz
pop
mov
mov
pop
ljmp
dec
shlb
imul
stos
add
add
add
imull
mov
lahf
pop
cltd
mov
xchg
pop
jge
fadd
filds
pop
pusha
xchg
mov
iret
mov
cli
cmp
pop
std
mov
test
add
jns
jp
cmp
pop
adc
ljmp
sbb
rclb
pop
adc
add
lea
movb
int
enter
xlat
jbe
add
jbe
cs
or
or
add
and
aaa
lret
rcl
sarl
push
add
adc
dec
sbb
add
jp
mov
je
stos
sar
divl
cmp
mov
xchg
dec
add
rcrl
fistl
dec
add
shll
adc
push
add
ret
fmuls
in
cmpsl
mov
testb
sub
fninit
xchg
add
jbe
add
cmpsl
btr
xlat
push
inc
add
imul
xchg
and
out
sbb
mov
inc
hlt
jle
cltd
lods
adc
mov
sub
mov
test
adc
pop
xor
push
inc
mov
push
adc
es
add
subl
add
in
jae
dec
and
sbb
sub
add
xor
mov
dec
jg
das
adc
push
sub
loopne
insb
add
jno
adc
cmp
aaa
scas
mov
ret
xchg
rcl
push
aas
pop
mov
cmpsb
fwait
mov
pop
lds
cmp
xchg
loopne
enter
dec
xor
loop
cmpsl
mov
into
outsb
sahf
inc
add
or
xlat
mov
sar
test
out
dec
out
pop
add
adc
pushf
addb
mov
push
push
fmull
add
sbb
fdiv
mov
and
jmp
std
push
sbbl
nop
xchg
adc
inc
sbb
jg
push
inc
mov
xor
aaa
xor
and
add
ret
lahf
mov
xchg
insb
add
mov
or
std
jo
mov
and
pop
out
add
and
mov
xchg
dec
mov
lock
add
jle
out
and
iret
orl
test
dec
insl
jae
in
cmp
andb
cmp
aam
lock
mov
xchg
jnp
je
add
fcmovbe
add
hlt
imul
add
outsb
pushf
adc
xor
mov
inc
xor
jle
add
out
or
xor
push
add
adc
in
mov
push
pop
mov
push
ljmp
mov
sti
dec
mov
xchg
add
pusha
mov
clc
jbe
inc
pop
insb
push
out
add
std
push
mov
lret
lods
mov
clc
sub
andl
insb
ficoml
xor
jo
jne
mov
jp
push
cwtl
mov
cmp
add
jl
xchg
inc
loopne
mov
sub
mov
adc
or
movsb
pusha
mov
aas
xor
cmp
xlat
hlt
xchg
es
bound
cmpb
cmp
testl
or
loop
in
mov
rcrl
mov
xor
in
add
sub
add
lahf
cmp
add
leave
mov
cli
rcrb
sbb
pop
mov
fistl
out
test
dec
aas
adc
sqrtps
sbb
xchg
fstpl
in
sub
adc
daa
or
sbb
cmp
out
aad
add
movsb
fldenv
pop
add
pop
and
mov
call
dec
push
sub
out
xchg
cmp
xorb
xlat
add
aaa
jle
mov
add
pop
pop
mov
stc
push
add
dec
mov
cltd
lret
cmpsb
push
mov
aaa
and
add
pop
js
add
dec
test
add
jno
mov
dec
fimuls
lea
test
in
add
or
pop
aas
cmpb
cld
sbb
enter
jge
sub
test
add
cli
shr
lret
out
mov
fcmovnu
and
cmp
dec
push
movsl
mov
dec
add
jb
mov
repz
in
notb
aas
jecxz
lods
hlt
dec
rcrb
pop
pop
mov
and
add
push
mov
fdivp
sahf
mov
adc
pop
xchg
sarb
enter
adcl
jg
mov
sbb
loopne
pop
aas
clc
ja
jle
cli
cmpb
out
push
mov
or
mov
push
xor
cmp
mov
ret
mov
add
xchg
arpl
out
jl
push
jp
jle
cs
push
mov
rolb
cmp
sbb
jno
pop
push
mov
xchg
dec
call
jp
mov
jne
mov
adcl
lret
popw
imul
inc
ret
cwtl
adc
push
inc
clc
shrb
inc
mov
int
mov
ljmp
sub
cmp
pop
scas
popf
mov
add
push
outsb
xchg
jp
add
lret
sub
inc
lods
add
mov
std
int3
scas
xchg
sbb
xor
mov
jb
add
add
lds
outsb
mov
xor
aaa
cld
jns
ljmp
aam
pop
sbb
sub
xchg
mov
loop
add
mov
shl
cld
jecxz
or
jle
lahf
jbe
mov
pop
sbb
or
testb
or
and
jge,pn
add
pushf
pop
inc
addr16
aaa
sbb
sbb
nop
jmp
rorl
xchg
and
or
inc
jno
clc
sbb
inc
es
out
add
jb
sub
dec
rol
mov
and
inc
daa
xor
add
mov
and
ds
add
insl
orb
in
dec
jge
repnz
rcrb
push
out
fdivrs
pushf
pop
aaa
mov
cmpsb
jo
cmpsb
add
sahf
fadd
mov
pusha
add
int3
in
add
lds
pop
push
or
mov
add
push
add
lods
fcmovne
imul
loopne
lea
sahf
dec
stc
in
mov
nop
pushf
push
addr16
mov
fmuls
push
sub
cld
xor
pusha
cltd
push
add
jb
out
in
ja
jns
add
out
inc
movsl
outsb
push
mov
aad
jb
sbb
cmp
in
add
lret
fldenv
dec
in
mov
inc
in
test
and
and
cmpsb
cmp
adc
cmpb
mov
call
mov
ss
adc
loopne
add
dec
jmp
sbb
jns
nop
loopne
add
push
les
sti
pushf
stos
add
push
or
and
push
mov
inc
aaa
shrb
adcl
cmp
cmp
mov
jecxz
or
pushf
jge
add
std
mov
cmp
adc
inc
addb
sti
stos
push
je
ljmp
inc
in
daa
jno
inc
push
mov
dec
sub
decl
add
out
mov
mov
leave
jo
xor
jmp
cmp
pop
pop
dec
xor
int
jns
hlt
rcl
mov
shr
xor
pusha
bound
in
std
add
cwtl
sub
popf
push
sahf
jle
out
call
outsb
cmp
and
add
stos
sbb
dec
jno
sbb
add
push
ficoml
js
aas
in
xor
mov
movsl
cmc
sbb
lcall
scas
push
shrl
and
sarl
jg
dec
dec
cs
xchg
stc
mov
fiaddl
lods
add
sub
sar
cwtl
xor
dec
adc
inc
push
pop
push
push
or
in
leave
add
add
in
jmp
loope
jp
repnz
and
call
dec
sbb
xchg
cltd
inc
movsb
lret
adc
andb
pop
dec
push
aas
pop
pop
divb
out
cmpsl
fisubrl
movsb
rolb
cmp
dec
sub
lea
mov
ret
sbb
mov
add
or
pop
pop
fldl
repnz
xor
dec
std
mov
mov
jae
xor
dec
inc
or
lea
mulb
bound
out
dec
add
pop
pusha
mov
add
pop
sub
stos
and
into
lock
loop
or
pop
xchg
mov
and
jl
mov
in
dec
scas
jge
or
inc
fldl
dec
out
stos
add
outsb
fwait
dec
and
iret
addr16
cld
sbb
stc
test
call
test
add
pop
fs
lahf
lock
jecxz
inc
add
jg
cld
jge
sti
je
push
add
inc
es
xchg
lahf
add
push
rorl
in
add
cwtl
cld
sbb
jl
sbb
js
int3
call
idivb
xor
jmp
loope
and
pop
movsb
dec
add
test
sbb
inc
mov
cmp
adc
mov
aam
push
add
imul
aas
mov
mov
adc
jl
nop
pop
adc
in
loop
testb
dec
push
repz
lret
mov
loopne
add
es
cli
add
imul
sub
pusha
and
test
mov
iret
mov
add
js
push
testb
sbb
or
stos
mov
adcb
add
fcmovbe
mov
movsb
std
sub
jmp
jo
fildl
add
or
mov
sbb
add
loop
pop
mov
xor
xchg
inc
popf
dec
scas
outsb
fimuls
es
pop
or
mov
add
mov
nop
stos
inc
cmp
aaa
roll
add
mov
pusha
out
or
push
pop
hlt
mov
jo
mov
rcrl
dec
push
add
push
das
clc
mul
add
mov
inc
xchg
add
push
cmc
sbb
push
or
rolb
lods
pop
mov
adc
add
stos
movsb
dec
in
pusha
inc
add
adc
andb
dec
shll
pop
add
pop
je
int3
test
add
dec
inc
add
insb
out
sbb
add
dec
cld
sbbb
push
testb
lret
enter
pop
add
sbb
sti
fsubrs
mov
mov
and
jg
xor
clc
push
adc
aas
loopne
mov
cmp
push
add
jle
inc
dec
outsb
adc
out
cli
les
adcl
shll
jae
shlb
adc
xor
add
jae
and
cmp
das
lds
rcrb
jmp
add
ljmp
mov
dec
enter
sbb
je
je
or
lods
mov
loopne
clc
loope
xor
fsts
arpl
add
imul
inc
mov
fisubs
mov
fs
daa
mov
je
adc
xor
add
test
jno
add
popl
mov
mov
cmp
call
jne
jmp
cmp
cmp
add
loopne
xor
add
mov
xchg
adc
inc
outsb
lock
adc
add
shll
mov
sub
in
jno
cmpb
add
xor
adc
shlb
add
mov
lds
dec
push
out
add
push
mov
xchg
fcmovbe
add
mov
in
dec
jge
mov
add
imul
movups
cltd
outsb
in
cmpsb
sub
nop
sbb
adc
inc
lds
ret
add
shr
pushf
in
xor
scas
jne
shll
adc
mov
insb
out
cmp
xchg
aaa
push
enter
dec
or
rcr
add
add
xlat
sub
xor
notl
cmp
sub
sbb
mov
or
jg
add
and
sub
es
jne
and
and
aas
pusha
mov
cmp
add
sti
or
xor
jno
mov
arpl
adc
ss
in
or
in
inc
cmp
cmp
mov
test
add
lret
pop
mov
xchg
pop
sbb
ss
pop
add
shr
push
sub
fs
and
rcrb
orl
push
inc
test
in
add
lock
add
into
sbb
jne
daa
pushf
adc
loop
call
pop
sbb
scas
in
jo
xor
mov
dec
bound
test
fsin
cmp
adc
add
mov
pop
int3
add
xor
fs
dec
andb
loop
jns
sub
sahf
idiv
add
sub
push
inc
and
sub
subb
mov
jbe
jp
jae
dec
test
xor
mov
xchg
addb
add
push
hlt
repnz
call
lea
shr
loopne
pop
popa
xchg
fwait
sbb
push
mov
push
incl
mov
int
push
add
shlb
push
fwait
shlb
pop
and
cmp
in
add
mov
jbe
add
imul
pop
xorb
xchg
lahf
in
jnp
add
push
xchg
xchg
pusha
xchg
mov
add
or
mov
cmp
negl
test
idivb
hlt
cld
xor
pop
sub
jg
add
icebp
push
fdivrs
push
clc
and
xor
or
pop
add
mov
shl
push
mov
adcb
jae
cs
aad
add
adcl
add
push
xor
frstor
test
jo
pop
pop
les
cli
jae
xor
je
dec
push
into
lcall
push
mov
icebp
add
icebp
jnp
jo
cs
jg
in
mov
pusha
and
or
popf
mov
xorl
add
popf
mov
mov
in
inc
addr16
in
stos
add
adc
sbb
popa
jo
jo
sahf
mov
sbb
imul
sbb
pop
xor
xor
mov
add
mov
dec
fs
idivb
mov
push
mov
aas
add
jae
mov
adc
dec
mov
aaa
jno
mov
mov
outsl
rclb
test
xor
sahf
xchg
insb
in
or
ss
shll
xchg
lods
imulb
into
xchg
dec
push
cli
fcomps
mov
sub
sub
xor
xchg
ret
jno
sbb
inc
inc
test
jge
jmp
cltd
jno
pusha
xorl
mov
aaa
lret
mov
push
sbb
xor
cmpsb
mov
pop
sahf
sbb
mov
or
xchg
nop
iret
call
jnp
mov
inc
or
out
sbb
fnstsw
lret
jo
add
push
sbb
add
pop
cli
adc
and
insb
sub
add
pop
call
pusha
int
lcall
cmpsb
imul
mov
sub
cs
add
add
dec
add
pop
xchg
or
ror
stos
cmc
mov
add
sub
mov
or
hlt
and
sbb
fisubl
imulb
add
jbe
sub
mov
or
mov
pop
inc
jns
mov
fs
out
mov
lcall
sbb
mov
push
repz
test
xor
push
gs
xchg
or
and
jnp
sub
add
out
sub
push
adcb
xchg
ljmp
mov
cmp
out
dec
sub
orb
lods
adc
inc
mov
mov
outsl
xor
inc
ljmp
test
das
xlat
addr16
add
mov
fs
push
xorb
adc
add
arpl
push
mov
arpl
dec
int3
jecxz
jbe
cli
add
loope
in
push
stos
popa
sbb
lods
rolb
inc
dec
add
int
adc
and
add
push
test
in
jmp
loope
add
push
mov
addr16
xor
aam
dec
insl
stos
sbb
adc
xor
mov
jg
add
mov
call
pop
test
adc
push
lock
inc
adc
inc
adc
push
dec
add
push
rcll
arpl
pop
pop
push
insl
les
jmp
and
push
push
mov
loopne
lods
outsl
jo
add
or
sbb
sbbb
push
dec
push
jmp
push
aam
rcl
cs
in
fildl
shll
pop
fadds
mov
xor
add
sub
pushf
dec
out
loope
imul
push
les
in
inc
stos
shl
out
testb
pop
mov
xchg
mov
lods
insl
jno
loopne
mov
divl
rorb
or
inc
inc
sub
dec
clc
lock
cmc
imul
inc
sub
aas
jns
add
xor
leave
sbb
popf
cs
lods
or
inc
dec
push
mov
sbb
add
rcll
or
xor
push
add
outsl
fisttpl
or
lock
and
pop
ret
shl
mov
enter
mov
dec
movb
ret
xchg
aam
les
mov
pusha
or
out
add
pop
xor
add
ss
insl
pop
sub
fwait
ljmp
mov
js
add
pop
mov
jecxz
jl
add
push
imul
jo
out
add
ds
mov
push
mov
add
je
add
dec
imul
xor
or
loope
in
shll
mov
daa
call
out
adcb
xchg
hlt
inc
add
fs
jmp
sub
rorb
not
push
lds
rorl
movaps
mov
inc
cmp
add
fsubr
in
fmuls
mov
pop
idivl
jle
mov
mov
push
sbb
movsb
jl
push
cmp
data16
cli
mov
mov
xor
mov
aad
xchg
hlt
bound
enter
jp
push
and
push
dec
cmp
add
push
xlat
popa
aaa
push
and
ret
add
sbb
in
jg
add
inc
pop
push
mov
ss
add
push
sub
lock
mov
sub
pop
or
out
loopne
cli
or
sub
inc
sbb
or
mov
jae
push
mov
jle,pt
add
shl
and
mov
cltd
pop
dec
out
cld
sarb
arpl
add
push
scas
lret
pop
sub
sub
ret
punpckldq
mov
roll
test
loop
pop
push
scas
pop
subb
push
jns
inc
add
jae
movsb
push
fcomi
stos
rorb
sahf
sub
push
out
inc
ret
inc
adc
cmp
adc
out
out
pop
mov
lods
add
jle
adc
push
xlat
sbb
xor
fiaddl
fldl
xchg
fisubrs
ja
jg
inc
dec
lahf
add
mov
add
mov
dec
add
mov
push
dec
add
cmpsb
adc
lock
sub
fadds
insl
adc
cmpl
jbe
dec
ss
lods
loop
rcr
and
adc
hlt
lret
out
aas
cmp
or
fwait
rorl
ret
data16
cmp
cwtl
pop
sarb
loopne
ret
add
daa
inc
add
mov
mov
stos
scas
xor
xor
xchg
mull
xor
pop
fidivrs
sub
pop
xor
or
adc
and
xor
cmp
push
or
sub
inc
mov
add
dec
sub
lahf
test
shll
and
verw
lret
push
into
push
inc
pop
or
repz
pushf
sbb
add
mov
jle
lahf
movd
jge
xor
nop
or
movlps
lahf
adc
pusha
mov
adc
notl
jb
jmp
pushf
cli
xor
stos
inc
inc
std
in
in
repz
xlat
add
inc
adc
adc
dec
sbb
test
add
pop
jno
or
stos
mov
or
loope
lods
subb
pop
inc
stc
fildll
add
das
and
pop
mov
outsb
mov
rolb
popa
push
mov
in
cltd
push
mov
mov
scas
xchg
mov
adc
add
cmc
addr16
add
and
rcll
push
out
call
mov
xchg
and
dec
pusha
sbbl
notb
add
pop
hlt
push
dec
imul
dec
inc
sahf
fdivl
incl
ljmp
sub
push
fsubl
cmp
mov
test
popa
xchg
es
loopne
pop
in
xchg
add
lcall
push
sti
mov
sbb
mov
lods
lahf
mov
jp
sub
cmpsl
mov
mov
add
sbb
xchg
xchg
push
pop
jp
insb
push
mov
daa
jbe
fwait
add
push
addr16
nop
and
add
aaa
inc
sarl
inc
enter
mov
popf
push
jb
or
rol
add
mov
pop
push
adc
add
loope
clc
mov
push
data16
add
imul
aas
sub
pushf
xchg
icebp
neg
xor
gs
incb
mov
imul
cmp
add
jmp
adc
in
jg
stos
mulb
inc
xor
ja
mov
add
sbb
pop
pushf
fildl
rclb
rorl
inc
outsl
rclb
leave
mov
mov
ret
rorb
push
mov
imull
in
adc
nop
jo
xor
and
xchg
jbe
adc
inc
mov
xchg
sub
cmp
sti
xor
mov
xchg
xchg
out
ljmp
jle
movlps
xor
adc
sbb
push
scas
lcall
push
leave
push
aaa
xor
lds
insb
add
mov
pop
jl
test
add
dec
jecxz
cmp
xchg
push
js
xor
add
js
addr16
add
imull
sub
pop
jbe
dec
sbb
push
or
ret
loop
jecxz
test
in
test
movsb
cmp
mov
add
mov
sub
cmpsl
loope
mov
jmp
adc
add
aam
dec
xchg
dec
jmp
mov
cld
mov
xor
lahf
inc
mov
sarl
xchg
test
lcall
push
mov
add
out
sub
add
adc
sub
add
repnz
insb
add
repz
pop
xchg
mov
shlb
aam
stc
add
xlat
add
cmp
push
add
gs
push
sbb
and
test
mov
out
sub
int
jo
fbstp
into
pop
mov
xchg
movsb
in
push
add
jp
cmc
jns
andb
push
add
lods
push
mov
stos
loope
enter
adc
pop
push
add
push
out
add
rorb
sub
jg
testb
test
stc
mov
mov
cmpb
les
fcmovnbe
sbb
jno
xchg
jp
dec
loopne
and
add
in
cmp
hlt
aaa
dec
adc
cmp
push
ljmp
add
xchg
xor
adc
ss
ret
mov
sbbb
jecxz
and
sub
push
xchg
ljmp
cld
out
and
pop
jnp
sub
shld
fmull
mov
dec
xor
nop
pop
push
mov
mov
jp
sbb
add
and
xor
mov
push
xchg
add
inc
add
mov
add
lcall
test
and
int
jmp
add
cmpb
mov
dec
jae
xor
push
nop
iret
rorl
inc
add
or
jne
mov
clc
in
add
push
lods
xchg
mov
add
outsl
cmpsb
fsubs
mov
rcl
add
out
loopne
lods
jb
scas
jg
sbb
jo
bound
xchg
arpl
pop
cmp
sbb
fmuls
leave
xlat
loop
mov
dec
xor
jmp
das
adc
mov
sbb
sub
xor
cmp
xchg
arpl
jo
add
scas
mov
mov
lahf
add
out
movsl
out
cmpsl
add
pop
dec
and
lods
into
add
or
outsl
xchg
pushf
xchg
sbb
inc
int
add
cwtl
xchg
sub
in
add
addr16
add
push
dec
loope
and
mov
pushf
add
mov
leave
adc
add
jmp
stc
test
shlb
insb
add
in
sarl
sbbb
lret
jmp
dec
mov
add
adc
cmp
gs
push
jno
sbb
lret
xor
add
orb
sbb
orb
mov
je
test
and
or
lcall
or
cmp
sti
push
pop
xor
xchg
cld
cmp
adc
adc
pop
mov
dec
int
push
daa
add
sahf
pop
ret
stos
nop
aas
add
and
mov
xor
cmp
inc
pop
push
mov
inc
add
fldl
sub
movsl
mov
sbb
cli
push
sbb
nop
add
sbbl
dec
loope
aas
movsl
add
test
mov
add
lret
rcrl
push
ret
add
ror
cmp
mov
les
mov
pop
fnstsw
stos
jae
add
test
jmp
mov
sub
xor
pusha
stos
mov
out
ret
les
sub
xchg
sbb
jbe
fwait
mov
add
mov
insb
cmpsb
jg
push
cld
jecxz
or
mov
rcrl
notl
addb
sub
push
outsl
mov
clc
lcall
cmp
inc
aam
imul
add
fwait
dec
push
jns
add
loopne
add
add
das
lock
jmp
push
ror
sbb
scas
sahf
fldl
das
enter
xor
outsl
lea
loop
mov
inc
lahf
shlb
jno
ljmp
and
ficomps
scas
nop
pop
dec
jns
shrb
fiaddl
lods
leave
lock
lds
mov
pop
jns
test
imul
add
mov
arpl
std
add
xor
aad
inc
mov
ljmp
pop
adc
inc
jg,pn
pop
jle
stos
or
mov
jl
jg
adc
pop
add
sbb
pop
shlb
xchg
mov
ss
add
icebp
rcll
popa
xor
add
pop
cmpsl
pop
mov
rcr
cltd
nop
add
out
dec
enter
push
inc
bound
gs
xchg
fwait
mov
stos
jae
add
inc
inc
inc
ss
and
hlt
xchg
clc
loop
and
stos
out
mov
popl
mov
pop
icebp
cmp
test
test
test
jne
add
cmp
mov
or
shl
cmpsb
pop
fs
add
or
xor
ds
mov
loope
fdivl
mov
repz
rcll
mov
add
lcall
and
pop
rorb
mov
xchg
aas
cmp
sbb
fs
icebp
addr16
mov
dec
sub
or
mov
add
or
outsl
dec
jb
jo
scas
push
add
int3
xchg
xchg
xor
or
xchg
call
xchg
mov
add
jl
orl
adc
or
pop
add
lret
and
in
hlt
stos
dec
divb
jmp
cmc
das
rcl
sub
and
sub
fdivrl
xor
mov
inc
sbb
inc
mov
fwait
sahf
dec
fsub
mov
mov
sub
cmp
loop
sbb
or
leave
cmp
movsl
icebp
dec
add
push
repnz
addl
lahf
add
or
fldcw
jbe
mov
cmc
dec
in
add
lahf
pop
lds
movb
pop
sbb
cmpsl
xor
out
aas
jmp
xor
inc
cli
adc
dec
add
int3
stos
adc
test
and
jl
xchg
movsb
imul
mov
lret
ret
ds
pop
mov
xor
pop
out
add
test
pop
pushf
xchg
add
daa
add
imulb
add
jmp
pop
xchg
iret
in
subl
mov
mov
lods
add
sbb
fld
add
mov
mov
mov
or
sub
and
or
add
fadd
rclb
jle
push
add
mov
sti
pop
jnp
sbb
jae
mov
add
outsl
add
jge
or
mov
stos
cmpsl
loope
pusha
in
add
lods
jnp
mov
and
movsl
and
nop
jmp
mov
xor
mov
shrb
push
adc
loopne
inc
pop
nop
sbb
repnz
pusha
dec
int3
ret
pop
and
mov
stos
add
out
pop
push
fwait
les
mov
adc
or
cmp
jno
div
bound
xchg
jne
push
pop
add
movsl
test
mov
divb
aam
or
pop
and
push
push
adc
cmp
add
subb
jmp
je
push
cmc
in
add
clc
pop
xchg
into
addb
lahf
mov
and
shll
add
or
out
fistpll
xchg
nop
ss
mov
scas
sbb
lods
jo
add
out
add
data16
mov
lock
add
dec
cwtl
push
jle
jp
xlat
int
jnp
fxch
ror
add
stc
cmp
sbb
or
dec
jp
faddl
fxam
inc
adcl
fdivrs
mov
add
test
shll
mov
sub
mov
cld
cmpsl
fcomi
test
pop
sti
mov
stos
mov
fst
sahf
fiaddl
push
add
lea
cli
stos
cmpsl
jl
pop
stos
addb
cwtl
or
mov
pushf
and
notl
and
iret
outsl
jecxz
jg
inc
cmp
leave
cltd
fsubs
cmp
fs
and
fs
jnp
and
dec
and
and
mov
adc
repz
jmp
sbb
add
mov
add
lret
sub
jl
add
push
or
cs
or
jnp
popf
add
ret
add
cmpsb
ret
je
lcall
jno
mov
int3
out
cmp
in
mov
mov
or
and
in
xchg
stc
fistpll
loope
pop
iret
jmp
insl
push
xor
roll
add
push
add
sbb
setnp
add
ss
adc
sti
testl
fisubs
pop
aas
les
jecxz
push
cmp
shlb
shlb
add
or
xor
ljmp
add
inc
add
mov
add
aad
add
cltd
jl
cli
dec
in
pop
call
int3
xchg
add
mov
add
xor
mov
or
mov
push
out
sbb
fmuls
lahf
mov
or
xchg
ja
cmp
adc
pop
popf
add
add
cmp
xchg
pop
xor
push
add
scas
push
out
push
inc
sub
sbb
or
in
xchg
add
mov
push
cmpb
jnp
test
sub
add
int3
adc
mov
cmp
inc
divl
jnp
pop
jl
addl
inc
xchg
enter
pushf
pop
sarl
mov
lods
lock
mov
push
loope
aas
push
iret
and
loopne
or
flds
mov
loop
shlb
adc
mov
add
rolb
roll
dec
data16
cmc
fdivs
sbbl
pop
es
mov
sub
enter
dec
sbb
rcrl
lds
dec
add
mov
dec
push
mov
push
mov
mov
aad
pop
push
or
out
add
sub
fwait
sarb
push
hlt
shlb
fstl
sub
mov
jp
addr16
outsb
adc
mov
ljmp
repz
xchg
pop
jns
ds
js
add
mov
xor
jp
add
jl
push
xor
enter
gs
nop
fcomi
add
insl
push
lock
popa
flds
lahf
push
sbb
adc
jno
rorl
jae
add
xchg
or
sbb
lock
mov
sbb
int3
repnz
xor
xor
jb
and
pop
imul
xchg
add
lret
fistpll
movsb
ret
mov
add
mov
in
xorl
and
shl
add
frstor
iret
add
outsl
fnstcw
sti
loopne
dec
test
ds
dec
mov
ret
or
dec
addr16
inc
inc
sbb
and
loope
lcall
ds
cmpsl
frstor
sbb
add
leave
stc
mov
push
add
movsl
inc
cli
loopne
push
pop
add
cld
pop
mov
add
mov
mov
in
mov
sbb
and
subb
inc
lds
gs
push
or
movsl
loopne
loope
jge
add
subb
sar
jle
jle
add
fnstsw
sbb
sbb
cmp
mov
sbb
mov
add
jae
enter
add
or
cmpsb
ljmp
add
test
mov
les
sub
adc
fdivl
cld
mov
push
mov
pushf
push
add
inc
insl
pop
test
sub
mov
and
pop
push
add
jns
aas
xchg
add
outsl
mov
push
sahf
add
shr
rcl
pop
sti
dec
mov
add
pop
add
scas
in
mov
push
sbb
andb
ja
and
xor
arpl
cmp
add
icebp
mov
sti
jl,pt
call
sub
stos
and
add
lcall
add
aam
add
sbb
test
pusha
movsb
and
negl
cmc
loop
jecxz
daa
pop
loopne
adc
bound
xor
mov
mov
jae
ret
sub
cmp
dec
clc
dec
test
push
rcl
dec
adc
cltd
push
lods
and
dec
sbb
push
es
shl
pop
adc
cmp
dec
add
cmp
arpl
mov
mov
cwtl
xchg
jne
xchg
sub
push
add
mov
add
es
mov
add
scas
stc
inc
cmpsb
popa
mov
fisttpll
cld
flds
clc
xchg
int3
add
push
out
pop
pusha
push
adc
xlat
in
jno
ss
insl
outsl
idivb
add
xchg
pop
jnp
cmp
sbb
loopne
add
mov
inc
arpl
fwait
mov
add
add
sbbb
add
jmp
push
test
rcl
mov
lds
push
dec
pop
push
dec
inc
cmp
mov
mov
cmp
mov
rcrb
cmp
mov
dec
sub
xchg
dec
arpl
jle
add
lods
pop
outsb
jno
fwait
lods
jmp
nop
push
jecxz
cmc
add
pop
pop
insb
int
fadds
mov
data16
push
xor
inc
icebp
out
xor
jle
jb
add
cmp
xchg
mov
sub
rcrb
add
cmp
sub
repz
push
shr
jbe
mov
stc
cmpsb
fwait
nop
push
cmpsl
je
xchg
jbe
mov
mov
imul
mov
daa
cltd
clc
cmpsl
sub
aad
fcoms
jns
jbe
add
mov
and
or
movsb
add
mov
jmp
add
cmpl
sar
stos
add
xchg
lret
sub
jbe
test
dec
xchg
scas
cmpsb
adc
add
add
mov
shlb
enter
cmp
addb
jecxz
xchg
iret
sbbl
lds
add
out
fsubrl
and
dec
icebp
fcoms
dec
imul
imulb
ja
pop
ret
and
sub
xchg
xchg
fstl
cmp
neg
mov
les
ret
mov
jl
lahf
test
ja
jecxz
repz
mov
jae
xchg
push
cmp
mov
aam
mov
pusha
sbbl
cmp
add
test
add
std
sahf
push
cmp
lea
push
mov
sbb
pop
or
pop
jns
inc
and
jae
jno
call
pop
pop
daa
cmp
cltd
push
push
xchg
repz
xchg
ss
dec
jne
push
add
in
movsb
push
inc
add
mov
lahf
je
dec
jae
add
add
xchg
sub
loopne
daa
lcall
xchg
mov
pop
cmp
push
inc
pop
add
or
in
stc
adc
movsb
push
inc
lcall
pop
fwait
sub
inc
jmp
and
lock
pop
cmp
add
xchg
lea
add
mov
xchg
mov
out
add
sti
dec
stc
fwait
push
cs
add
add
mov
sbb
sbb
stos
repnz
pop
mov
nop
sub
ds
insl
rcrb
data16
push
dec
xchg
call
movsb
lret
xchg
nop
xchg
test
inc
add
arpl
push
mov
int
outsb
bound
lahf
and
in
pop
fcoml
add
and
xchg
add
orb
jnp
int3
mov
mov
pop
add
pop
xchg
mov
xor
sub
sub
jbe
mov
shll
add
in
ljmp
out
inc
jns
add
xchg
adc
mov
xchg
mov
add
jo
xchg
daa
loopne
ljmp
andb
in
dec
sahf
sub
lahf
push
into
mov
pop
and
or
sbb
out
mov
insb
jne
in
rolb
xchg
jns
add
mov
ja
clc
scas
and
add
mov
enter
ja
int3
imul
pop
popa
mov
pop
orb
divl
add
fs
nop
dec
into
or
fstps
adc
xlat
or
popa
pop
adc
pop
mov
pop
mov
xlat
test
rcrl
add
fistl
jnp
icebp
adc
add
jno
lret
outsb
imulb
pop
inc
dec
jge
iret
xor
cltd
sbb
test
stos
mov
add
not
aaa
mov
xchg
dec
pop
rcrb
inc
pushf
jno
adc
call
sbb
jns
icebp
inc
push
pop
cmpsl
xor
push
sub
in
add
xchg
daa
ljmp
in
jp
dec
xor
fcoml
xchg
hlt
add
outsl
inc
jo
pop
add
jl
inc
aad
arpl
or
xlat
cwtl
gs
or
lret
xchg
aam
repnz
pop
mov
add
outsl
jmp
push
icebp
jle
cld
or
cmp
jle
js
popf
dec
mov
pop
daa
cmp
mov
sbb
jnp
lea
push
mov
pop
lds
add
sti
ret
in
daa
and
repz
add
mov
decb
add
mov
jo
adc
add
jne
sti
loope
smsw
hlt
out
inc
popf
sar
xchg
mov
mov
movb
pop
sbb
inc
mov
lret
ds
add
test
push
and
popf
add
adc
ja
jmp
push
xor
cmp
ds
xchg
testb
and
int3
push
xchg
dec
outsb
mov
xlat
add
mov
and
popf
out
jno
sub
sbb
repz
add
xor
pusha
jg
inc
ficoms
sbb
add
adc
and
repz
sahf
push
stos
aam
shlb
addb
add
decb
inc
add
cli
dec
addb
js
push
cmp
add
das
cvtdq2ps
nop
stos
push
jnp
and
add
pop
in
gs
jecxz
cmp
movsl
mov
loope
adc
add
fistpll
pusha
add
add
jge
hlt
adc
xor
adc
mov
and
adc
fdivrp
cld
jl
add
add
sub
hlt
jne
pop
nop
jnp
lods
xor
or
push
outsb
mov
out
insb
sbbb
mov
call
outsl
push
add
clc
stos
add
adcl
jae
adc
in
push
add
stos
outsl
sbb
add
ja
into
movsl
jne
jo
add
insb
mov
add
dec
sbb
scas
pop
add
stos
mov
inc
xorb
push
call
nop
or
xor
jae
jmp
data16
jmp
ret
fadds
in
add
mov
pushf
sbb
pop
cwtl
add
pop
and
sbb
jmp
out
add
push
xchg
nopl
divb
adc
lea
movsb
jecxz
or
mov
test
adc
outsl
and
je
mov
and
daa
nop
push
jl
cmc
inc
xchg
and
cmp
test
and
add
pop
and
rol
sub
adc
fistl
ljmp
xchg
xchg
cmp
adc
test
ret
testb
std
leave
jg
add
lods
lcall
outsl
in
and
push
push
add
fucomi
stos
mov
pop
lods
rdtsc
xchg
add
cmp
insl
mov
fstpl
negl
xchg
je
rcr
add
test
mov
xlat
cs
jp
enter
test
or
scas
sti
in
add
inc
lea
jmp
test
fwait
inc
add
sbb
sahf
add
roll
sbb
xlat
fidivrl
sub
insb
xchg
fwait
popf
movsb
movsl
pop
add
add
outsb
xchg
shlb
stos
jae
pop
lret
or
inc
lahf
and
push
jle
shr
sbb
js
ret
pop
pop
es
lret
nop
xchg
shl
jmp
mov
add
or
jo
push
add
pop
ja
adc
push
test
nop
out
ret
pop
outsl
cmp
and
jecxz
clc
push
or
mov
mov
adc
nop
aas
xor
test
mov
mov
cmp
add
popf
push
iret
and
in
sub
pusha
add
ss
adc
mov
or
dec
push
pop
mov
repz
mov
mov
jge
jnp
enter
sub
icebp
mov
popa
ret
and
shl
pop
rcrl
push
movl
iret
xchg
fiaddl
loope
ret
sbb
shlb
loopne
pop
sub
xchg
cli
loopne
loope
or
pop
fsubrs
xor
cltd
mov
testl
xchg
xor
jp
cmpsb
lods
add
lea
adc
mov
inc
mov
js
push
adc
adc
add
fldl
adc
shll
mov
popl
dec
xchg
loopne
push
or
pusha
add
shlb
sarl
sub
ljmp
lret
xchg
mov
popf
jne
shlb
clc
adc
mov
add
sbb
fdivrl
and
or
jo
lods
jno
and
mov
jnp
clc
cltd
jl
stos
and
push
mov
pop
ret
jns
loopne
cmp
mov
add
add
jecxz
shlb
lds
push
cmp
aas
fadds
ja
inc
mov
clc
pushf
adc
sub
rcll
aaa
int
cmp
sub
cwtl
in
push
adc
push
sbb
daa
pop
xor
add
pop
pop
into
xor
or
enter
cmp
cmp
sbbb
fsubp
maxsd
push
dec
inc
outsl
jge
pop
and
mov
lahf
jae
adc
cmp
add
dec
xchg
jle
mov
mov
sbb
sahf
fs
inc
orl
add
andl
or
mov
insb
xchg
xor
popf
test
fistps
mov
inc
lods
fidivl
loope
add
push
test
push
adc
inc
mov
subl
mov
add
insl
cmovg
cmp
leave
aam
mov
pop
and
push
add
test
shll
jg
inc
pop
cmpb
fldl
lret
mov
adc
and
pusha
add
xor
int
addl
imul
mov
cmp
jno
push
pop
in
jns
inc
fadd
insb
xor
mov
fdivrl
insl
fwait
sbb
or
dec
add
mov
dec
mov
or
inc
pushf
popa
js
hlt
nop
pushf
jl
cmp
dec
sti
jo
cld
cmp
jl
dec
cmp
ds
ret
jns
inc
push
repz
aaa
inc
cld
lods
clc
sarb
adc
in
xor
pushf
adc
popa
jmp
in
icebp
xor
push
add
push
jp
adc
mov
pop
sbb
pop
out
stos
push
inc
lea
add
push
popa
mov
das
cmp
dec
push
addr16
add
lods
leave
xor
ja
pop
push
inc
pop
call
andb
enter
mov
mov
pop
fwait
lock
dec
cmp
xor
popa
pop
or
jmp
and
imul
call
test
out
add
and
and
xor
adc
ds
nop
pusha
test
sbb
mov
push
repz
loopne
out
lock
test
ret
fistps
and
es
ss
jl
mov
imul
cld
add
add
call
or
push
push
xchg
cli
pop
add
ja
sub
cld
add
stos
mov
sbb
mov
inc
addr16
aad
add
sbb
arpl
add
test
add
push
lea
out
sub
mov
mov
cli
pop
pusha
inc
push
push
add
test
xor
dec
cmpsb
arpl
mov
adc
add
das
call
adc
add
loope
add
cmp
add
out
add
sub
enter
cltd
or
fwait
xchg
jo
mov
imul
add
or
insb
fnstcw
jnp
jp
add
push
sbb
rorl
dec
mov
lcall
xchg
pop
jl
pop
add
sub
insl
mov
inc
and
stc
xchg
inc
add
into
push
mov
test
pop
pop
fimuls
ja
hlt
add
cwtl
clc
aad
add
test
add
daa
arpl
mov
mull
std
incl
lahf
and
dec
lea
ja
addr16
xor
popf
sbb
sub
aam
in
push
mov
add
popa
jb
aas
fs
add
dec
mov
or
jo
clc
and
sbb
xlat
push
add
adc
pop
dec
mov
sahf
push
add
adc
push
sbb
paddb
push
arpl
sbbb
mov
push
gs
movntq
pushf
loopne
xor
lahf
inc
test
sbb
mov
lret
xor
cmpps
mov
ljmp
lods
mov
je
int
add
gs
pop
cwtl
outsb
add
mov
adc
shlb
out
jg
sbb
and
jl
add
add
cmp
imul
or
mov
dec
inc
inc
orb
mov
icebp
in
mov
aam
xchg
add
push
sbb
js
or
cmp
out
pop
add
cmp
mov
flds
sub
cmp
fbld
jg
lret
and
roll
addr16
and
je
inc
jne
add
icebp
scas
sti
pop
sub
mov
add
out
xor
sub
push
in
or
outsb
mov
loopne
test
add
cmp
xor
repz
jae
nop
loopne
or
sti
jnp
add
cmp
push
mov
jnp
mov
pusha
mov
std
add
in
mov
stos
ds
ret
fwait
enter
mov
adcb
scas
fsts
xor
roll
jnp
pop
mov
inc
xchg
xor
mov
ds
xchg
add
es
xchg
mov
mov
inc
xorl
sub
jne
sub
mov
out
sub
jmp
jecxz
cmp
inc
ds
sbb
movsb
and
add
iret
rorb
jmp
xor
push
push
add
scas
les
or
dec
loopne
xchg
movsl
insb
sbb
jns
ds
add
outsl
cmc
int3
xchg
or
pop
roll
je
add
loop
in
push
jbe
add
in
sbb
xchg
mov
and
pop
imul
rclb
and
jbe
sbb
insl
loop
outsb
dec
and
and
clc
das
cmp
fwait
adc
lcall
loop
or
hlt
aas
and
mov
divb
addb
cmp
add
fwait
push
lods
xor
call
adc
sahf
int3
adc
dec
xor
cmp
test
pusha
adc
pop
mov
add
icebp
and
add
idivl
dec
imul
jmp
add
push
xchg
testb
inc
xchg
gs
pusha
add
f2xm1
push
mov
aas
mov
ja
dec
add
out
popa
add
mov
cs
xorl
inc
mov
sbb
add
mov
pop
clc
xlat
gs
fcmove
cmc
pop
stos
mov
xor
popa
sbb
dec
cmp
and
and
and
out
testb
add
cmc
mov
call
mov
ret
push
bound
lods
lahf
and
xchg
mov
fwait
pop
push
jmp
inc
dec
add
and
out
sub
push
negb
jl
mov
add
arpl
ret
xor
popf
inc
lods
sbb
xorb
fildl
and
fisttpl
pusha
dec
add
pop
test
pop
call
rolb
aaa
sbb
sub
sub
sahf
cmp
cwtl
sti
pusha
mov
sub
push
lods
add
fldenv
fwait
add
cmp
add
xorb
roll
rolb
xchg
adc
in
out
and
xchg
dec
or
lock
test
sbbl
or
xchg
mov
dec
sbb
ret
loopne
adc
jle
outsb
sbb
clc
lods
inc
pushf
pop
rolb
add
and
sub
das
jl
std
xchg
loopne
xchg
mov
pushf
adc
mov
fldl
mov
pop
cld
cwtl
jp
roll
jo
or
cmp
clc
lea
scas
hlt
push
mov
outsb
sbb
pushf
or
in
xchg
jmp
repnz
popf
dec
add
lock
adc
push
jbe
mov
ss
push
out
add
fisubs
jbe
pop
mov
jg
shl
out
in
add
les
setge
and
out
push
shl
add
in
cs
outsb
sbb
pop
add
inc
adc
js
mov
jb
addl
sbb
shlb
cmp
jmp
hlt
or
stos
push
mov
cli
pop
mov
jae
into
in
adc
add
pusha
sarl
data16
decb
adc
popa
and
inc
xor
test
add
add
dec
cs
and
add
add
stos
cmp
jo
popa
nop
xchg
inc
sub
out
clc
lods
xlat
add
fnstenv
or
push
dec
pop
push
jo
pop
out
mov
nop
iret
aam
and
dec
jae
add
adc
add
pop
icebp
arpl
fs
jle
mov
push
cmpsb
add
sarl
sub
inc
mov
xor
adc
pop
ds
mov
mov
scas
push
fdivp
xor
mov
les
mov
add
test
mov
insl
js
xor
add
cmp
jecxz
flds
and
xor
shl
arpl
aam
loop
loopne
jnp
adcl
jae
sub
adc
xor
repz
into
add
js
repz
fdivs
orl
add
sbb
test
cmp
flds
inc
sub
push
cmp
repnz
mov
hlt
xchg
adc
sti
dec
mov
push
pop
fisubl
es
mov
cmp
xchg
inc
sub
ret
ljmp
or
call
mov
adc
add
gs
xchg
add
push
pop
dec
test
js
nop
in
add
mov
outsl
xchg
jae
adc
orb
jmp
mov
divb
test
cmp
es
cwtl
add
pop
add
in
addl
push
mov
lods
fdivrl
in
jecxz
ret
test
add
popa
cmc
mov
adc
dec
addr16
xchg
loopne
inc
testl
pop
les
add
call
and
mov
shl
into
and
dec
cwtl
inc
out
push
sbbb
ljmp
scas
pop
mov
push
das
rclb
js
shlb
lahf
cmp
shl
inc
mov
scas
cmp
mov
addr16
and
dec
add
rorl
sub
popf
cmp
add
cli
dec
clc
mov
repnz
xor
daa
dec
cmp
sub
or
xchg
jp
shrl
adc
cmp
lret
add
out
call
mov
dec
inc
nop
flds
add
test
cmp
out
arpl
shr
leave
lret
mov
pop
dec
mov
loopne
mov
les
call
sub
xorl
movsb
add
ror
notl
repz
adc
daa
and
add
mov
fdivrs
stc
jmp
lahf
ds
sbb
dec
pop
lods
or
add
sub
mov
jmp
jne
add
add
mov
inc
inc
and
add
pop
fcmovbe
add
sbb
imul
adc
inc
mov
int3
fstpt
sub
add
dec
pop
aam
testb
push
xchg
movsl
or
xchg
add
and
cmp
add
scas
cmc
lock
jmp
and
push
push
nop
in
add
mov
add
inc
jecxz
sarb
adc
pop
flds
stc
jg
or
add
adcl
push
cs
bound
mov
sub
dec
add
or
fst
mov
int
sub
mov
inc
mov
sbb
ss
repz
jns
out
add
lret
xor
setae
addr16
mov
jmp
jno
subb
add
push
inc
out
sbb
adc
add
mov
loop
add
add
add
jns
mov
popf
pop
mov
cmpsl
inc
scas
out
xchg
mov
sbb
shlb
nop
test
sub
sbbb
gs
mov
jp
std
rol
imul
loope
mov
lods
clc
push
popf
test
xchg
imul
fcoms
mov
xchg
and
xor
mov
out
jns
cmp
adc
and
pop
or
mov
sti
das
loopne
or
jns
mov
add
fidivrs
mov
inc
jecxz
mov
add
jns
sub
and
mov
xchg
jl
inc
addb
or
in
iret
clc
test
sbb
jmp
sbb
sbb
sbb
and
sarb
insb
add
out
mov
lret
xchg
xor
cmc
add
jl
loope
test
add
pop
sub
pop
push
inc
sbb
mov
cwtl
add
int3
xchg
fisubl
rcrb
add
xor
std
scas
sub
std
push
andl
add
jge
xchg
mov
std
in
xchg
add
sbb
pop
inc
jns
stos
add
xor
mov
xor
shlb
les
add
rorb
sbb
add
mov
pop
jo
nop
dec
or
push
shll
adcb
sbbl
or
cwtl
and
loop
enter
add
add
mov
xchg
test
mov
add
push
test
add
sarl
dec
ret
std
and
flds
repnz
adc
add
hlt
cs
xor
jp
jo
cmp
pop
push
or
clc
cld
scas
loop
lret
orb
insl
mov
jo
gs
inc
sbb
flds
dec
inc
test
xor
movsl
popa
fldl
es
jmp
add
adc
pusha
lret
ds
mov
into
add
or
jns
add
ja
andl
ficoml
push
lds
push
xor
pop
jo
pop
mov
inc
outsl
ss
icebp
mov
test
fidivl
mov
dec
dec
insb
out
test
je
sub
inc
test
add
fstl
xor
mov
mov
aam
test
xor
sub
mov
add
xlat
mov
arpl
mov
aas
call
or
stos
scas
nop
jg
sbb
into
shlb
out
sbb
jo
add
xlat
cmpsl
add
push
xor
dec
or
out
subb
adc
mov
cmp
outsb
dec
xorb
outsl
sbb
push
sub
psubb
filds
std
and
fs
mov
adc
inc
addb
pop
add
jae
mov
in
cwtl
push
mov
mov
ret
test
add
xchg
cmp
mov
rcl
add
cmp
adc
test
inc
cltd
int
in
jnp
pop
inc
cmp
les
inc
pop
add
rcl
popf
jp
fiadds
in
add
pop
pop
lds
and
mov
push
dec
jne
cmp
add
inc
out
mov
insb
jl
ficompl
and
push
add
inc
pusha
mov
lret
outsl
push
adc
add
cmpb
lock
jnp
fcmovnbe
cmp
xchg
lret
inc
add
pop
aaa
pop
ja
jne
mov
dec
push
add
dec
iret
std
stos
mov
mov
test
dec
add
push
flds
fdivl
mov
dec
loopne
cwtl
add
mov
pop
push
mov
sbb
stos
jo
test
loope
mov
jbe
add
cmc
inc
mov
shlb
mov
and
dec
aas
push
xchg
pop
loope
std
pop
test
push
add
adc
pushf
pop
lods
adc
add
pop
mov
cli
out
add
mov
in
dec
or
dec
adc
pop
pop
aas
add
and
into
fiaddl
mov
out
in
je
cmp
loop
addl
sbb
pusha
fimull
jge
pop
and
enter
add
fadds
loopne
sbb
jg
xorb
imul
add
xor
inc
or
jmp
add
mov
xor
pushf
mov
aaa
pop
cmp
shlb
je
mov
sbb
jp
or
xor
sub
dec
insl
and
fs
les
fwait
dec
lods
imul
ss
xlat
cmovae
pop
mov
sbb
inc
add
or
jae
les
mov
sbb
sbb
loopne
push
fbld
dec
dec
cmp
push
cmpsl
sub
bound
nop
sahf
add
mov
in
shl
xchg
add
jg
cmp
lret
adc
xor
hlt
add
clc
xchg
jae
scas
in
inc
add
mulw
lock
clc
sub
pop
ret
loopne
add
rol
ret
int3
cmp
insl
or
sbb
adc
xor
subl
jbe
out
pop
add
in
incb
ffree
in
mov
adc
dec
hlt
cmpsl
lods
int
nop
mov
rcrb
mov
into
js
inc
sbb
push
add
mov
aaa
or
cmp
lcall
add
and
pop
xchg
ja
shl
add
adcl
popa
orb
add
stos
sarl
cli
mov
pop
mov
aaa
and
mov
mov
sbb
jmp
sarl
mov
call
cmp
sbbb
cmp
xchg
fcmovnb
inc
pop
outsb
outsl
and
add
mov
mov
shll
mov
or
jns
jl
dec
idiv
jno
outsl
loopne
add
jge
mov
jne
cld
and
add
add
movzbl
mov
jp
add
shl
fldcw
imulb
pop
inc
dec
add
sbb
in
push
and
jp
in
sbb
lahf
icebp
cmp
std
rol
add
shlb
imul
scas
adc
add
negb
inc
out
add
sub
andb
arpl
pop
inc
jns
aas
loope
leave
dec
adc
jge
sbb
pop
icebp
push
xchg
inc
fs
fiadds
push
sti
shll
ja
rcrl
mov
pop
jo
repnz
jecxz
push
mov
mov
aas
add
mov
in
shrb
pop
cmp
xchg
popl
mov
push
dec
mov
sbb
mov
mov
sbb
stos
idivl
or
push
add
insb
cmc
add
fstpt
pop
xorl
sbbb
imul
fucomip
fadds
hlt
mov
leave
pop
sbb
cmc
roll
add
xchg
sbb
mov
test
ja
push
cltd
iret
cli
push
and
leave
bound
sbb
repnz
and
sbb
cmp
add
popa
sbb
mov
loopne
sub
adc
lahf
add
mov
fstps
dec
jo
lods
je
pop
pop
movsb
fistps
cmp
add
push
jle
cmpb
pop
loopne
aad
dec
adc
sbb
fistl
repnz
pop
pushf
outsl
out
add
hlt
out
add
mov
and
dec
out
push
sub
add
enter
push
sbb
jae
sub
lock
or
imul
clc
add
push
mov
lds
cmp
push
and
loopne
test
push
and
adc
and
add
aas
dec
xor
loope
out
pop
test
inc
test
dec
sub
jae
inc
movsl
inc
notb
mov
jbe
out
dec
cmp
les
xchg
cli
enter
adc
add
xchg
jo
push
sub
mov
and
arpl
fidivrs
mov
pop
and
inc
iret
lcall
std
add
or
addr16
inc
xor
in
mov
aam
inc
push
xchg
jns
pusha
inc
mov
push
push
pop
cmp
inc
xchg
mov
push
inc
xor
negb
cmpsb
sbb
add
mov
add
out
pop
push
jmp
dec
add
aas
pushf
insl
add
pop
std
xchg
or
sub
mov
inc
imul
aaa
rcrb
shrl
jne
jo
scas
subl
lahf
adc
xchg
or
stos
sub
or
sub
pop
or
push
iret
call
xchg
xor
mov
jecxz
add
movsl
mov
fwait
inc
ljmp
sbb
sub
xor
sbb
add
xor
mov
or
fdivrl
xchg
popf
mov
xchg
mov
jne
paddq
push
repnz
shlb
cmp
ret
psubsb
or
fiaddl
mov
je
add
dec
cld
scas
int
add
jbe
xor
or
cltd
lock
ror
sub
mov
mov
hlt
test
or
jbe
in
xchg
push
or
lods
mov
int3
roll
lahf
xor
inc
pop
orb
icebp
popa
jo
or
orl
in
fbstp
jbe
dec
push
movsb
jno
enter
fisubrs
ljmp
or
cld
pop
add
lods
insl
movsl
stc
and
cwtl
cli
dec
mov
add
rolb
add
mov
ds
mulb
hlt
mov
xchg
shlb
adc
dec
add
and
ja
add
and
add
out
dec
mov
and
dec
add
nop
int
pop
scas
ss
cmp
adc
rcl
pop
push
neg
fldl
adc
nop
xor
xor
sub
fwait
or
push
hlt
xchg
jb
push
jne
mov
pop
push
add
pusha
cmp
insl
add
mov
pop
add
mov
jns
ss
pop
outsl
jg
out
pop
add
adc
and
jmp
add
lret
mov
push
mov
test
jge
daa
loope
je
hlt
rorb
into
dec
sti
sbb
add
adcl
push
aam
xchg
ret
test
call
jns
clc
stc
push
lods
add
cmp
outsb
push
add
hlt
jmp
mov
fadds
xchg
mov
ljmp
add
roll
outsb
pop
cli
or
add
pop
rclb
decb
add
push
incl
adc
dec
add
fwait
push
xor
fdivrs
test
mov
mov
sbb
inc
pop
cmp
cmp
adc
add
addr16
fidivrs
inc
mov
inc
mov
dec
adc
cmp
addb
pop
and
mov
sub
and
or
repnz
out
jmp
cli
cwtl
pop
jp
xchg
loopne
insb
add
int3
mov
or
inc
push
add
pop
mov
jle
pop
lds
nop
jb
jne
add
mov
fwait
adc
jl
inc
push
push
lret
cmp
push
sub
mov
add
xchg
cmp
jb
push
lods
push
in
pop
andb
dec
inc
add
mov
push
pop
or
or
mov
in
cmp
pop
out
fistpll
inc
adc
adc
push
das
cmp
xlat
add
push
or
dec
xor
mov
cmp
repnz
adc
add
ds
xor
bound
sbbb
or
mov
and
shll
repz
icebp
mov
psraw
add
adc
out
jo
pop
loopne
and
scas
pop
icebp
test
stc
add
jb
rorl
add
jmp
add
stos
mov
push
add
test
pop
fdivl
adc
icebp
inc
mov
daa
mov
iret
dec
fistpll
sub
ljmp
dec
add
dec
pusha
inc
in
push
call
rcrb
jo
int3
scas
lock
add
xchg
scas
lret
mov
add
xchg
inc
dec
add
ret
imul
push
jns
xor
add
mov
jmp
fwait
popa
inc
jmp
hlt
adc
into
dec
xor
add
fwait
pop
cmp
addr16
addl
mov
clc
push
cld
jae
or
dec
les
mov
sbbb
aad
add
xor
add
imulb
test
adc
add
sbb
add
dec
inc
andb
mov
cmp
fiaddl
bound
loope
sti
dec
mov
or
cmc
lods
in
insl
mov
cmp
xor
mov
mov
movsl
xchg
loopne
or
imul
pop
add
push
negb
push
adcb
cmpsb
add
test
dec
mov
add
and
addr16
sbb
xchg
add
add
ss
movsb
adc
cmp
ljmp
pop
add
and
es
pop
stos
out
pop
jae
pop
mov
orl
push
cld
arpl
sub
ret
bound
lds
jge
push
mov
jecxz
jbe
testb
cltd
out
out
xor
in
jmp
mov
movsb
popf
mov
add
sbb
pop
cmp
push
daa
popa
rolb
inc
shll
add
test
daa
dec
xorl
rorb
jg
dec
scas
push
add
sar
insb
cltd
dec
xor
sbb
ffreep
ja
add
mov
orl
xchg
push
add
test
mov
int
add
pop
rcrl
movsl
jg
pop
xchg
lock
xor
pusha
xor
or
add
pushf
push
xlat
cmp
mov
aas
or
iret
dec
setnp
subb
cwtl
sub
push
arpl
mov
add
mov
sahf
lret
inc
subb
xchg
mov
movb
cs
cmpsl
push
cmp
add
jcxz
xchg
lods
enter
test
cmpl
dec
or
out
fistpll
sahf
lea
fistl
fnstcw
jle
mov
add
dec
negb
mov
xchg
iret
aad
add
inc
xlat
push
mov
add
dec
jp
push
xchg
addr16
enter
mov
je
dec
inc
cmp
cmp
outsl
inc
or
pop
push
and
rorb
sbb
dec
add
mov
inc
add
cmc
iret
or
mov
cltd
cmpb
int
sbb
sahf
add
mov
sub
inc
lcall
pop
mov
cmp
cmpsl
aaa
push
jo
ljmp
loope
mov
inc
test
xchg
ret
push
xor
pop
clc
mov
sub
inc
stos
clc
mov
fildl
xor
pop
adc
movsl
inc
test
jge
fwait
cmp
mov
xorl
push
lea
xorb
jbe
xor
add
push
dec
popf
adc
mov
jmp
add
sub
leave
into
xchg
add
mov
popf
cmp
call
sbb
scas
and
push
and
shlb
pusha
push
add
xor
cmp
mov
ret
pop
sbb
xorl
jle
dec
in
jne,pn
out
inc
and
or
add
mov
lock
in
mov
sub
pop
cmp
jne
aad
sbb
xlat
adc
add
mov
sti
add
xchg
xor
add
pop
cmp
pop
ret
adcb
add
pushf
lret
inc
adc
shll
and
in
push
adc
xchg
mov
jno
adc
xchg
mov
lods
cmpsl
jmp
enter
jae
mov
add
cmp
add
lods
movsb
negb
out
jp
mov
ss
mov
mov
rcrb
and
sbb
aaa
add
cltd
cld
xor
xchg
jg
in
push
sahf
or
test
adc
fiadds
add
mov
mov
cmpb
add
and
sbb
add
rorb
filds
inc
roll
das
mov
cmp
dec
cmp
cwtl
mov
add
xor
test
lret
cs
add
arpl
inc
add
call
int3
dec
pop
sub
jns
cld
add
jp
icebp
push
inc
adc
imul
mov
add
sbb
add
test
lds
fildll
jge
cmpsb
call
push
fldcw
mov
sub
pop
in
mov
adc
filds
add
jo
ljmp
loopne
test
cli
icebp
add
mulb
scas
inc
add
ja
lcall
pusha
adc
xor
in
lock
enter
subb
fnstenv
or
mov
pop
pop
xor
cmp
rcl
int3
loope
push
xchg
fs
call
jecxz
sbb
orl
leave
popf
into
dec
sbb
setnp
jle
popa
mov
or
mov
add
or
add
inc
jno
cld
mov
jl
or
pop
sbb
pop
inc
mov
jae
push
sar
add
lahf
fcompl
in
in
mov
fildll
xchg
add
pop
cmpl
repnz
xor
bound
pusha
adc
add
mov
xor
dec
jg
add
or
xchg
mov
sub
and
cmp
dec
add
pusha
cmp
ja
push
insl
mov
shlb
in
clc
or
xchg
xorb
adcb
push
incl
mov
icebp
dec
jae
sub
pop
add
in
test
or
push
aas
aad
dec
and
xor
push
xchg
jl
xor
jne
add
pop
dec
mov
shl
jnp
scas
mov
sub
and
add
imul
or
cmp
lahf
lods
jnp
mov
inc
mov
test
jns
pop
cld
das
pop
add
add
dec
cmpsb
ds
pop
je
inc
cmp
xor
loopne
mov
pop
std
add
test
clc
ljmp
into
cmpsl
enter
and
mov
push
push
mov
sbb
add
push
inc
or
aas
sub
shll
xor
pop
push
cmp
mov
dec
jno
shrl
mov
lret
aam
enter
sub
add
aad
mov
add
mov
pop
add
mov
jb
or
scas
jmp
fcmovb
aas
lahf
fcomps
js
mov
lock
loop
fwait
sub
sbb
test
repnz
jno
push
lods
pop
push
add
in
adcl
mov
leave
push
dec
pushf
cld
mov
xchg
int
xcrypt-ctr
cmpsl
lahf
jns
push
add
repnz
cmc
sbb
ljmp
in
sbb
add
cli
jnp
mov
insl
dec
push
movsl
xor
sub
popf
mov
jg
jno
add
pop
lods
add
sbb
and
mov
add
mov
mov
enter
add
sbb
jo
movsb
add
scas
mov
add
jecxz
cmp
iret
cltd
scas
xchg
dec
out
push
add
in
insl
add
sub
add
lahf
xchg
mov
jns
add
pop
mov
cmc
mov
xorb
testb
add
inc
es
fistpll
mov
ficoms
fdivl
pavgb
ss
and
and
push
add
xchg
test
pop
rcl
inc
shll
in
push
les
mov
mulb
push
add
mov
loopne
pop
cs
add
in
sub
sbb
sbb
jg
add
mov
sub
stos
xchg
bound
adc
add
dec
pop
mov
rclb
add
lcall
jp
add
adc
mov
lret
add
cs
ja
push
push
sbb
and
fidivrs
movsb
add
pop
stos
jp
adc
dec
sbb
loopne
mov
data16
cmp
sti
add
jg
jge
fiadds
incl
outsl
loope
imul
inc
fcmovbe
cmp
and
add
ret
in
jo
scas
add
sbb
mov
fisubrl
add
and
pop
test
pop
xor
dec
rolb
sub
pop
jl
mov
leave
lret
xchg
div
dec
or
ret
repz
call
push
xor
mov
mov
inc
mov
rcr
cmpsl
add
pop
aaa
and
push
mov
sbb
pop
incl
dec
jbe
add
popf
jp
add
mov
insb
popl
push
out
cmp
adc
out
mov
incl
adc
rclb
lea
in
idivb
push
cltd
mov
inc
jo
cmpsl
out
mov
or
loopne
into
xchg
or
clc
cmpsb
pop
notl
mov
add
pop
out
movsl
rolb
adc
nop
mov
orl
add
test
lock
cmc
jns
xor
lea
adc
jo
hlt
sbb
pop
cmpsl
and
and
mov
sub
addr16
mov
pop
and
sub
push
lahf
add
fcmovbe
ret
pop
xchg
add
add
orps
pusha
mov
add
filds
xchg
popf
sbb
pop
xchg
mov
jae
out
add
call
cmp
sub
and
gs
cwtl
mov
nop
loopne
fldl
xlat
je
add
lret
dec
xorl
sub
cmovl
adc
or
inc
arpl
xchg
and
xor
add
enter
xor
ja
lods
pushf
insb
pop
sbb
out
adc
xor
adc
jne
hlt
lret
add
fmull
andb
pop
mov
pop
cmp
test
or
repz
xor
pop
xchg
adc
insb
jecxz
filds
dec
rorl
rorl
in
lea
pop
rclb
xchg
add
pop
in
les
stos
jmp
inc
repnz
or
mov
cs
mov
mov
mov
jo
add
jle
std
and
add
out
lock
inc
cmp
test
xor
xchg
jno
push
jle
jp
add
arpl
addl
jne
cwtl
and
pop
dec
in
in
xor
js
repz
out
xchg
sub
cmp
fstpt
les
sahf
xchg
test
add
loope
xor
xchg
adc
aas
shl
add
ret
insb
rclb
lret
fisttpll
jo
enter
pushf
and
mov
push
mov
fs
xlat
or
sbb
or
add
out
daa
fmuls
iret
or
jmp
and
pop
inc
cpuid
add
lcall
add
or
xor
dec
shlb
pop
adc
roll
sbbb
imul
xchg
pusha
add
cmp
and
push
sub
add
test
adcl
xchg
add
push
sbb
dec
push
mov
xor
add
add
fdivrs
adc
add
mov
and
in
addl
ret
test
jecxz
inc
test
cs
pop
dec
jno
ds
call
cmp
lret
stc
shlb
cmp
mov
push
lret
pop
dec
je
pop
insb
mov
push
ficoms
adc
mov
jmp
loopne
ret
fdivr
add
mov
lods
mov
arpl
add
iret
adc
mov
xor
pusha
test
mov
jge
add
sub
pop
jbe
add
mov
lahf
add
mov
add
xor
mov
xchg
add
push
cmpsl
sti
out
pop
cmp
adc
jo
stos
inc
or
lret
cs
inc
pusha
add
pop
outsb
pop
add
cmpsl
pop
or
xchg
and
int3
nop
shll
les
fisubs
scas
jo
adc
lahf
cs
imul
js
add
pop
into
xchg
push
inc
bound
add
ret
mov
add
jo
pop
add
cmpsl
aam
ret
add
mov
add
pop
cmpsb
das
out
jno
rolb
pusha
ljmp
cmp
sbb
nop
mov
out
roll
int
enter
dec
bound
in
fiadds
das
test
cmp
mov
out
adc
add
imulb
imul
push
push
xchg
pop
push
xchg
mov
repnz
add
inc
testb
and
mov
rolb
add
xchg
inc
scas
packssdw
jae
adc
dec
and
adc
popf
adc
push
add
das
lea
or
js
add
fmul
ficompl
jo
mov
pushf
sbb
in
xchg
push
push
hlt
or
clc
add
dec
mov
mov
adc
rol
mov
xor
std
test
xor
pop
inc
lods
push
lods
jnp
dec
add
sbb
jmp
fwait
cmp
and
inc
pusha
int3
cmp
insl
mov
decb
inc
stos
push
jg
xchg
sbb
addr16
push
inc
push
add
cld
xchg
cmpsl
movsb
xor
and
sti
jno
add
pop
fucomi
cmpb
adc
push
fistps
mov
or
lcall
sbb
fwait
and
sub
mov
add
xchg
inc
xchg
inc
push
xchg
adc
and
sub
add
pop
inc
mov
out
add
mov
cmc
add
add
fwait
dec
mull
shrl
jg
add
mov
cs
mov
push
push
aad
jo
jae
add
inc
scas
iret
xchg
loopne
add
sbb
nop
mulb
jno
push
mov
xchg
ljmp
adc
nop
jbe
fwait
andb
mov
fistpl
leave
adc
into
adcb
test
jecxz
sbb
sbb
shlb
add
pop
sub
shlb
sbb
mov
xchg
mov
xchg
pusha
lock
test
add
or
iret
hlt
and
int3
add
fs
roll
mov
cli
imul
sbb
and
mov
lret
lret
in
add
sahf
out
xor
insl
mov
add
mov
aas
shll
mov
inc
rolb
fbld
mov
push
xor
mov
add
popf
mov
out
push
mov
cmp
mov
std
and
les
dec
xor
shlb
filds
jle
pop
jl
mov
lods
adc
add
pusha
jnp
mov
mov
add
mov
imul
inc
pop
inc
subb
cli
dec
pop
and
int
jle
dec
jne
nop
cmpsl
xlat
push
add
xchg
jbe
mov
jae
xchg
arpl
sti
loopne
add
icebp
stc
add
int3
mov
ljmp
pushf
xchg
aaa
jg
add
push
mov
jecxz
inc
sbb
in
popa
adc
jl
call
add
jg
cmp
outsl
push
push
add
arpl
dec
sbb
aaa
ret
jl
xchg
mov
mov
lret
add
or
mov
shlb
or
jecxz
or
movb
adc
ss
inc
pop
cmpsl
inc
loope
and
xor
add
fcomp
jecxz
xchg
push
outsb
cmp
adcl
mov
filds
movsl
xchg
and
cli
cmp
fnstsw
inc
jg
das
mov
jecxz
cmp
dec
int
sbb
outsb
mov
in
xchg
add
std
mov
add
adc
subb
divl
lahf
add
xchg
lds
push
call
iret
push
mov
cmc
add
sbb
ds
clc
data16
add
in
or
jo
add
jg
ret
dec
aaa
iret
andl
add
subw
and
sub
outsb
hlt
rcrl
xchg
and
fadds
loop
mov
sub
pop
jo
push
les
add
cmp
negb
or
lea
jbe,pt
xchg
add
inc
dec
dec
xlat
fstpl
add
and
ret
lret
xchg
inc
xchg
mov
cltd
inc
xchg
sbb
sub
mov
nop
jge
sub
in
pop
push
fidivs
lods
out
push
adc
cmp
arpl
push
rorb
les
jno
fadd
dec
pop
dec
clc
add
jecxz
add
les
mov
sbb
fdivs
imul
enter
cmp
cmpb
xchg
push
in
pop
or
dec
lds
inc
mov
lret
scas
add
cltd
stos
mov
xchg
fstpl
es
mov
mov
nop
and
pop
dec
inc
push
dec
imul
adc
test
sub
scas
and
aas
jl
push
mov
lret
pop
sbb
mov
inc
stos
add
mov
jbe
das
xor
lock
ja
inc
fldl
mov
shl
movsb
sub
mov
add
filds
jge
out
jns
add
push
mov
xchg
lods
das
add
test
add
cmp
loope
out
sub
rcrb
daa
jns
mov
push
cmp
jb
or
mov
inc
add
mov
pop
lret
daa
lds
loop
push
mov
popf
test
sbb
mov
rolb
inc
dec
inc
jno
int3
push
pop
je
add
into
addr16
add
add
icebp
test
add
cwtl
mov
mov
pop
add
inc
pop
adc
in
xor
nop
pusha
add
mov
cli
sub
mov
pop
std
andb
or
pop
fbld
dec
xor
mov
sbb
push
adc
popf
sbb
daa
jnp
or
and
cli
pop
pop
pop
std
add
mov
lock
cmp
int
sahf
mov
mov
xchg
lret
aad
out
push
int3
lds
add
adc
jmp
imul
xor
push
pop
jb
xchg
ja
or
inc
xchg
xchg
add
mov
mov
fnstsw
ror
mov
pop
ficoml
add
jmp
stos
test
lock
add
std
push
or
mov
xor
cmp
or
sub
push
ret
fldenv
cmp
inc
push
add
add
inc
je
cmpsb
jno
hlt
push
mov
adcl
in
movsl
mov
push
pop
int3
sub
int
clc
push
inc
mov
add
dec
inc
push
cmpsl
pop
fsubs
add
mov
add
push
push
aad
inc
pop
add
popl
sub
scas
adc
aaa
into
js
daa
add
ficomps
outsb
clc
adc
pop
dec
fdivl
add
sti
clc
jmp
add
test
xchg
cmp
aaa
add
lret
mov
pop
cmp
sub
cli
inc
cmpsb
xchg
xchg
jge
call
add
mov
adc
and
add
dec
fwait
outsb
stos
sub
icebp
cmp
or
fsub
daa
cmpsl
inc
pop
pop
pop
push
movl
into
cmpsb
stos
add
xor
add
pusha
gs
inc
cmpl
jecxz
push
fidivl
repnz
pop
cli
es
scas
xor
or
in
shr
rolb
popa
and
inc
dec
orb
mov
jmp
add
cmp
ficoml
add
xchg
adc
popf
outsl
jae
daa
movsb
cs
adc
add
outsl
mov
addl
repnz
pop
jb
add
jp
sub
lret
icebp
pop
sbb
rcr
push
xchg
loope
inc
movsl
int3
dec
pop
mov
mov
xor
push
shr
shrb
fs
mov
aas
mov
lock
aaa
filds
stc
repz
pop
mov
xchg
movb
movsb
iret
dec
xchg
add
sbb
push
add
in
mov
cwtl
in
clc
and
lock
pop
pushf
sbb
xor
notb
shrb
dec
mov
cld
je
push
js
scas
test
aad
loop
cld
mov
rolb
lds
lret
push
push
jmp
sub
pop
rcrl
je
add
rcrb
mov
sub
push
aas
nop
add
shlb
pop
xor
or
stos
and
mov
scas
adc
push
xchg
add
cmp
sti
inc
inc
dec
stc
add
jp
cld
jbe
in
jns
add
mov
stos
test
sub
std
dec
addb
add
jg
in
add
and
js
add
or
cs
fldcw
add
lea
adcb
dec
xchg
sbb
out
testl
cmp
add
ss
xchg
jo
fcomp
jb
mov
das
lcall
mov
xchg
cwtl
sbb
jl
and
out
inc
jg
add
jns
or
iret
fwait
lea
loopne
mov
mov
pop
icebp
and
mov
out
push
fwait
addb
popf
and
data16
xchg
lret
test
pop
or
aad
roll
or
or
outsb
add
xor
jmp
dec
mov
daa
push
pop
sbb
ds
loopne
add
fstpl
mov
out
cmp
div
orb
sbb
sub
adc
leave
subb
or
out
add
ja
add
mov
out
loop
push
xor
xor
mov
scas
or
lods
mul
xor
push
jbe
and
movsb
aad
xor
and
pop
adc
mov
mov
clc
je,pn
addb
in
fbstp
adc
je
and
sbb
pop
dec
fwait
pop
add
fimuls
pop
sbb
jmp
inc
adc
leave
jg
adc
push
in
add
mov
rcr
nop
jne
pop
clc
aaa
add
ljmp
mov
jnp
ret
push
stc
add
sub
aam
pop
sbb
test
das
sbb
sbb
je
adc
dec
push
sahf
loop
pusha
ljmp
and
cs
add
ds
xorb
sbb
nop
in
cmp
cld
lret
mov
jbe
push
push
scas
bnd
loopne
shlb
dec
or
lods
lods
das
add
xor
inc
add
and
xor
push
inc
lods
add
fistpl
lcall
jne
add
cmp
and
and
adc
jne
sub
sbb
fs
pop
rcll
test
dec
xchg
push
fucomp
add
jle
cmp
push
inc
add
fsub
fcoml
xor
mov
cmp
lret
cld
cli
imul
jbe
je
cmp
arpl
push
inc
xchg
sbb
xor
and
and
mov
sbb
bnd
sbbb
test
xor
mov
ret
stos
mov
fisubl
ljmp
push
push
mov
inc
fistpl
jmp
mov
add
dec
xchg
lock
cmp
leave
pop
mov
jecxz
mov
inc
scas
clc
fs
add
roll
dec
xchg
roll
dec
ret
addr16
cmpsb
int
arpl
cmp
mov
lret
call
and
add
xchg
jecxz
outsl
fldl
jae
and
sbb
je
daa
sub
scas
jge
jno
call
inc
and
outsl
outsb
push
add
sbb
pop
add
sahf
inc
ss
add
loop
push
push
jge
clc
int3
iret
jg
jne
pusha
cli
push
xchg
mov
std
pop
pop
dec
mov
inc
and
xchg
nop
sbb
mov
shl
fdivrs
ret
pusha
xor
rol
or
mov
mov
inc
xor
testb
add
mov
xchg
roll
mov
cmpsl
xchg
xlat
push
pop
daa
cmp
jle
push
push
dec
inc
mov
pop
mov
enter
mov
stos
imul
push
cli
pusha
inc
inc
stos
add
push
test
dec
call
sub
mov
cmpl
leave
mov
roll
adc
test
bound
xor
inc
jns
and
aaa
xchg
pop
mov
leave
jo
jle
sti
jp
add
lock
fs
dec
push
push
sub
jns
std
add
mov
test
lods
push
in
fstpt
push
das
sbb
stos
or
outsl
mov
add
sbb
outsb
push
add
stos
mov
xchg
add
ror
add
add
movsb
rep
xor
loopne
add
out
lret
mov
sub
jno
xchg
add
xchg
push
andb
iret
jecxz
test
xor
and
push
in
test
rcl
arpl
in
push
sub
in
or
incb
into
sub
test
mov
jno
jge
movsl
lds
fldl2e
inc
sbb
mov
icebp
aad
hlt
push
lret
jle
fnsave
daa
xchg
sub
xchg
loopne
push
pop
pusha
cld
loope
mov
sarb
push
testb
jmp
mov
mov
mov
cmpsb
into
xchg
rcrb
pusha
jmp
xor
add
mov
cmp
out
ret
pop
pop
inc
push
int3
mov
bound
insb
mov
dec
and
mov
add
and
jle
mov
cmp
faddl
push
xor
pop
lret
dec
dec
inc
and
movl
sbbl
xchg
sbbb
bound
in
sub
inc
sub
adc
add
stos
push
scas
jle
fcomps
gs
or
add
cmp
xchg
add
lcall
rclb
sbb
outsb
add
jne
ljmpw
in
or
bound
mov
sbb
test
cmp
cmpsb
or
add
popf
add
addb
mov
mov
stc
dec
cli
lea
jne
lock
in
in
add
dec
dec
jg
imul
call
icebp
mov
iret
mov
jp
add
push
out
gs
push
dec
add
xchg
andl
xlat
cmp
aam
movsb
pop
inc
or
bound
add
insl
jecxz
out
sub
sbb
loopne
dec
xor
es
jae
into
push
iret
ss
ds
adcb
push
nop
loope
add
or
clc
push
pop
add
fidivl
mov
mov
arpl
push
xorb
cmp
inc
cmp
and
mov
sbb
subb
hlt
test
cmp
cmp
mov
sub
outsb
add
pop
or
in
add
mov
icebp
and
cmp
jl
out
push
cmp
xlat
xorb
add
js
sub
sbb
out
jo
sbb
sbb
xorb
repnz
pop
rclb
pop
es
push
add
es
jg
add
mov
cmp
stos
roll
add
xchg
add
cmp
dec
rclb
add
out
outsl
xchg
outsb
pushf
adc
xor
adc
inc
add
inc
jg
ret
into
cmpsb
imul
add
les
add
pushf
shrl
dec
jnp
fs
jo
or
pusha
pop
aas
cmp
jle
dec
add
imul
repz
out
add
add
push
add
pop
jge
xchg
ds
shlb
add
lret
add
pop
leave
fisttps
scas
fs
add
into
pop
das
or
jno
mov
pop
pop
cmp
mov
shll
inc
add
push
in
pop
lds
add
dec
test
clc
inc
mov
scas
lret
repz
cmp
out
inc
jo
jo
add
imul
cli
or
call
and
test
hlt
xlat
testl
lods
popa
and
xor
lock
mov
add
and
and
insl
push
adc
add
adc
inc
insb
push
mov
and
inc
inc
xchg
jmp
add
imul
sub
jl
dec
lret
das
lret
sahf
pop
out
jle
dec
and
cmp
mov
add
shl
aam
sbb
mov
push
pop
ljmp
push
mov
dec
cmp
jo
fcompl
adc
sbb
push
or
mov
shrl
adc
jmp
das
mov
in
insb
mov
int
sub
leave
lret
sahf
inc
faddl
pop
ret
pop
jne
idivl
loopne
jg
f2xm1
add
sarl
pop
jp
mov
int
fcmovne
mov
push
pop
fmull
mov
lret
adc
dec
add
rcrb
mov
dec
dec
icebp
ljmp
add
sbb
jae
add
mov
pop
lods
sub
sahf
test
lods
loopne
xchg
pop
roll
fwait
jns
sub
push
add
icebp
cmp
sbb
inc
pushl
push
add
ret
mov
test
shll
add
std
aad
sbb
jmp
rcrl
add
add
push
add
in
rolb
xchg
mov
roll
adc
test
enter
add
leave
cld
pop
adc
sti
push
add
lock
adc
push
inc
add
sub
cmp
outsb
add
sub
arpl
sbb
dec
jmp
movl
inc
pop
jg
sbb
ret
adc
jo
mov
jbe
pop
iret
subb
and
inc
nop
sbb
add
or
dec
subb
add
pop
incb
push
or
jns
shlb
ljmp
rclb
push
dec
idivl
add
negb
enter
into
pop
push
popa
shll
add
cmp
pop
rcll
stos
add
aam
sbb
mov
loopne
jbe
or
mov
jp
orb
inc
std
sub
adc
sub
cmc
test
add
push
mov
add
ret
inc
add
mov
testb
cmpsb
sbb
add
pop
aad
add
jle
movsl
mov
out
lcall
adc
xchg
inc
push
add
jg
or
js
and
repz
pop
idivl
out
adc
repnz
adc
sbb
enter
add
addb
sahf
mov
pop
adc
sub
add
adc
rol
in
mov
jl
push
call
add
dec
xor
jne
aas
inc
and
cltd
jnp
cld
in
cwtl
or
adcb
add
test
cmp
and
add
mov
cltd
and
xor
sbb
mov
jbe,pt
add
jge
mov
or
xlat
adc
mov
and
imul
sbb
xor
jg
sbb
aad
jp
mov
add
adc
add
in
into
adc
inc
pop
and
push
fnstsw
mov
dec
ds
roll
nop
scas
clc
cltd
xlat
int3
sbb
xorb
aaa
orb
xchg
add
in
jg
out
mov
gs
insb
and
mov
sbb
xor
and
ja
cld
repz
inc
sub
int3
jmp
dec
add
orb
add
sub
push
lock
push
out
jecxz
fwait
add
jg
jle
call
jmp
xchg
cld
mov
cmc
mov
loopne
add
leave
jns
xor
add
call
gs
ds
pop
fcmovnbe
aad
rclb
add
cwtl
dec
hlt
mov
pop
test
push
jecxz
jo
add
jbe
pop
mov
pop
addl
adc
sti
add
mov
add
xchg
lds
add
or
sbb
sbbb
jl
and
es
test
out
lods
adc
mov
test
dec
push
xor
sbb
jge
sahf
jno
repz
fistps
daa
dec
sbb
xor
mov
xchg
or
or
out
fsubrp
cmp
lds
push
lock
addl
loopw
xor
pop
lcall
mov
mov
test
js
and
fs
push
push
add
bound
enter
push
sub
inc
movsb
lahf
insl
out
mov
sbb
lock
hlt
push
test
adc
fildll
scas
scas
sub
add
int
hlt
inc
mov
movl
dec
cmp
sbb
pop
pop
add
add
and
inc
and
jne
ret
jns
add
mov
movsl
add
sti
ds
mov
aam
lods
orb
cmpl
loope
scas
pop
push
lds
add
rclb
in
inc
add
fwait
adc
nop
roll
inc
arpl
xor
jg
add
sub
xor
or
ljmp
push
cs
xchg
add
ja
enter
repz
push
mov
and
dec
fwait
mov
jecxz
hlt
mov
pop
pop
or
add
ljmp
mov
add
fisubl
jb
subb
mov
outsl
pop
mov
add
pusha
push
lcall
pop
and
ss
mov
mov
std
loopne
test
mov
insl
sub
xchg
shl
aad
loopne
cmp
jnp
insb
mov
dec
outsb
shll
mov
les
ret
ljmp
jl
js
add
leave
jnp
lods
jmp
pushf
dec
add
lea
loope
inc
subb
and
xor
sub
adc
mov
cs
adc
incb
inc
fnsave
pop
repz
stos
jle
mov
bound
sub
daa
mov
and
push
dec
iret
fistpl
imul
inc
and
pop
frstor
mov
stos
sub
popf
adc
lea
in
mov
inc
or
ficompl
mov
nop
sbb
ss
inc
lock
adc
mov
rolb
dec
into
inc
mov
push
lods
cmp
dec
add
frstpm(287
es
push
stc
mov
lds
add
dec
and
lea
add
arpl
push
bound
and
test
jp
xchg
push
jecxz
mov
scas
test
sbb
fwait
add
inc
rcll
loopne
push
jne
add
enter
ds
push
imul
imul
loope
add
cli
adc
pop
mov
or
jle
sub
enter
add
mov
or
mov
xchg
ds
cltd
xor
inc
int3
rclb
pop
enter
cmp
add
push
pop
or
add
push
loop
add
outsl
jge
int
movsb
push
or
xchg
mov
jecxz
mov
dec
mov
add
jbe
xor
push
outsb
mov
rcrb
jmp
test
xor
pusha
cmp
inc
and
push
jo
cmp
add
inc
jecxz
clc
shrb
xchg
sysret
int
push
in
loope
addl
test
hlt
xor
mov
cli
icebp
gs
dec
add
inc
arpl
add
ljmp
add
lods
jp
dec
pusha
sbb
into
add
cmc
shlb
mov
xchg
ret
mov
cmp
add
xchg
hlt
sub
cmp
shll
sbb
pop
mov
or
mov
ja
pop
test
repz
add
hlt
insb
nop
sarb
lock
cmp
or
push
adc
pusha
mov
ja
or
les
hlt
scas
add
add
sahf
cltd
pop
not
sbb
or
lahf
sbb
and
cmpsl
sahf
es
out
add
into
aas
add
mov
lock
divb
fcmove
sub
cld
das
add
daa
jae
aas
clc
incb
les
test
mov
loope
insl
push
sbb
jne
add
mov
daa
push
or
jae
inc
nop
sub
cmpsb
sbb
add
xchg
outsb
ja
and
inc
cli
jnp
add
je
popa
mov
xchg
sbb
mov
stos
add
pop
sub
imulb
xor
add
je
out
mov
pusha
mov
out
jo
jns
adc
cmp
push
add
test
mov
cmpsb
fidivrs
push
mov
aaa
xchg
fcomps
icebp
pop
add
bnd
mov
push
pop
rorb
add
adc
stc
xchg
mov
stos
lds
mov
sub
jne
or
rclb
mov
and
mov
xchg
addl
pop
sbb
add
xchg
push
xchg
jnp
outsl
es
jo
sbb
push
loope
cwtl
test
jne
fdivrs
mov
imul
sbb
and
add
fcompl
test
sub
push
mov
lds
xchg
mov
dec
inc
addb
movsl
out
test
nop
xlat
rdpmc
push
push
xchg
aaa
mov
cmp
or
add
and
stos
mov
in
mov
addb
dec
mov
pop
xor
and
add
sbb
sahf
cmp
shl
addr16
jb
add
test
in
pusha
jns
cmp
mov
gs
lock
testl
fsubrs
outsb
xor
pusha
xor
ss
out
add
cmp
repnz
jne
pop
imul
xor
push
and
or
mov
fnsave
lods
cltd
and
adc
jno
pop
inc
rep
lds
stc
add
push
mov
mov
inc
sti
faddl
or
data16
and
sbb
jecxz
jb
dec
das
add
cs
mov
jmp
sbb
stos
fmuls
mov
lret
cmp
mov
add
ret
cvtps2pi
loop
add
in
fiadds
popf
cld
in
cmpsb
cmp
into
add
enter
or
jae
lret
cmpsb
cvttps2pi
xchg
fiadds
mov
add
add
mov
test
add
or
sbb
rcrl
xchg
add
imul
dec
cld
or
stc
dec
sbb
xchg
add
ret
jnp
bnd
je
add
xchg
add
push
pop
sbb
or
push
sub
xchg
push
lcall
add
add
in
inc
psrad
jle
pop
push
lods
fistl
lods
shl
les
gs
repnz
clc
pop
push
push
shll
add
xchg
cmp
sub
jno
sub
dec
cmpsl
out
or
pop
mov
push
cs
mov
shrl
call
int3
mov
mov
add
inc
iret
cltd
inc
insb
push
add
mov
mov
in
mov
xor
icebp
pop
inc
je
lock
out
fildl
dec
cmpsb
cmc
adc
lret
cmp
out
loopne
repz
inc
ret
push
addr16
add
pop
adc
add
and
daa
add
xlat
imul
add
and
pop
out
add
xlat
cwtl
add
out
imul
roll
dec
sub
mov
add
scas
mov
cmpsb
dec
xchg
cmp
adc
dec
add
sbb
cmp
jmp
loopne
add
pop
and
les
xchg
insb
pop
shl
or
dec
sbb
rolb
daa
cmp
cld
popa
xor
add
or
pop
pop
dec
fs
jb
jmp
dec
add
or
jo
cmpsb
jno
add
test
inc
test
shlb
adc
jg
loope
inc
outsb
lret
pusha
rcrb
pop
das
ja
pop
dec
sbb
dec
push
daa
add
add
jbe
les
adc
and
xchg
pop
shll
sub
adc
add
lret
repnz
dec
add
add
push
or
lods
cmp
xchg
sub
dec
jae
cmp
lret
dec
adc
mov
mov
jmp
iret
xchg
inc
xchg
jo
cmp
fisttpll
arpl
aad
xchg
mov
ljmp
dec
mov
xor
lcall
std
clc
jno
mov
push
stos
subl
and
add
sbb
andl
mov
inc
add
mov
fldl
push
xlat
jbe
cltd
adc
xor
pop
mov
jmp
enter
xor
add
add
std
lods
or
hlt
add
fildl
mov
mov
loopne
and
clc
mov
xor
sarb
faddl
imul
jne
mov
jg
push
sbb
sbb
pop
jmp
push
mov
mov
sbb
pop
sbb
cltd
lods
inc
repz
fisubrl
lds
pop
aam
add
es
and
in
add
inc
and
roll
shlb
jg
add
fcomps
mov
add
or
mov
add
xor
adc
add
mov
shll
xchg
xor
and
test
cmp
add
mov
out
setno
jecxz
popf
add
cmc
jmp
mov
sub
lret
mov
add
loopne
xchg
pop
jl
dec
xlat
ljmp
dec
gs
mov
outsb
call
jnp
in
scas
add
stc
mov
sbb
mov
fucomip
pop
add
and
in
jb
out
dec
xchg
push
nop
jle
pop
shll
push
lods
add
arpl
enter
out
jno
add
aam
stos
iret
add
mov
sub
add
popa
outsl
xchg
lret
add
in
xlat
push
push
int3
cmpsb
mov
jp
dec
xor
mov
insl
xchg
aas
xor
addb
mov
daa
addb
lods
out
sbb
sti
mov
ja
es
test
aaa
fldt
fwait
or
xor
addr16
jg
outsl
push
in
jb
scas
stc
push
out
sub
cmp
cmpsb
inc
lock
pop
mov
scas
out
adc
xchg
sarb
fiaddl
add
lahf
jp
dec
push
enter
fmull
notl
es
pop
add
pop
pop
out
push
push
shrb
incb
pop
imul
mov
and
jnp
add
cmp
xchg
add
mov
push
in
jmp
xchg
or
xchg
jns
cmp
push
dec
or
cltd
orb
push
psrlw
lock
mov
add
addr16
inc
xor
ss
adc
pop
jp
pop
and
pop
and
dec
jmp
pusha
repnz
sarb
or
push
pxor
sub
popf
mov
pop
add
std
xor
cmpsb
enter
inc
push
pop
mov
jno
arpl
add
jmp
aas
xor
sbb
ret
and
icebp
mov
xorb
ficoml
xor
add
or
push
decl
imul
out
xchg
mov
xchg
lahf
sub
push
insl
add
cwtl
adc
add
or
jl
stc
inc
push
aam
out
xchg
jne
pop
add
pushf
ss
daa
mov
test
adc
and
cs
fbld
sarl
pop
xor
adc
xor
mov
adc
push
inc
pop
fs
adc
popf
dec
cmp
push
sbb
loope
and
bound
stc
dec
push
adc
bound
arpl
mov
dec
sbb
or
lahf
and
xor
inc
or
add
and
add
and
sbb
xor
mov
popf
and
sub
test
fs
xor
xchg
adc
adc
int3
and
push
and
pop
push
ret
sahf
add
cmp
loope
cwtl
and
imul
hlt
ss
int3
push
or
push
std
add
sub
lock
xor
or
sarl
adc
cmp
jns
and
adc
adc
int3
push
call
mov
inc
sbb
adc
test
imul
push
xor
add
xor
lock
loope
adc
mov
jno
orb
aaa
int3
jo
adc
stc
inc
cmp
mov
dec
cmp
dec
xchg
movsb
sub
push
mov
inc
enter
fwait
push
sbb
int
mov
xchg
addr16
cmp
and
fs
and
push
and
inc
or
adc
xor
push
or
pop
mov
inc
sbb
jl
mov
mov
sbb
xchg
scas
icebp
andl
or
les
ds
push
jmp
inc
push
repnz
bound
xor
mov
sbb
add
sbb
bswap
arpl
clc
shll
inc
and
jmp
add
jae
fnstcw
call
imul
sub
scas
sbb
push
xchg
subl
ss
icebp
cmp
adc
cmp
call
fcoms
inc
cmpsb
sbb
pop
aas
inc
sbbb
jg
rcrb
sbb
fs
in
bound
adc
pop
adc
xor
lods
cmpsl
sbb
cmp
int
clc
sbb
cli
test
loop
test
and
lds
adc
dec
cmpsl
dec
bound
sbb
push
jl
pop
xor
jge
cmp
push
push
or
and
js
sbb
cmpsb
mov
jge
xchg
sbbb
cld
fldl
jecxz
add
sub
inc
pop
lods
mov
mov
cmpsl
adc
loope
or
and
in
insb
in
push
inc
movsl
xor
dec
and
jae
and
ret
or
jo
mov
sarb
imul
push
cs
cltd
mov
ja
add
in
inc
ds
adc
jb
addl
push
adc
std
rcrb
adc
mov
push
pushf
and
mov
cmp
inc
fildll
sbb
ss
jl
and
les
popa
loop
addl
and
fisubrs
dec
sbb
inc
xchg
jnp
mov
in
loope
add
jo
push
xor
or
inc
es
lock
adc
xor
ds
xchg
inc
ret
sbb
dec
and
add
mov
inc
or
add
loopne
sub
inc
inc
out
pusha
mov
and
out
cmpb
mov
dec
add
mov
nop
push
movsb
add
hlt
sbb
or
push
adc
sbb
sbb
or
sbb
xor
xchg
adc
inc
xchg
mov
fnstenv
pop
adc
xchg
out
rcrb
or
cld
sub
adc
repz
xchg
or
push
or
popf
mov
icebp
fwait
mov
sbb
and
lock
jp
pop
stc
inc
sbb
mov
pop
adc
out
mov
in
fcoml
adc
out
push
imul
in
inc
int3
in
cmp
dec
push
test
adc
ss
sbb
bnd
lahf
sub
sbb
lret
cmp
inc
mov
movsb
jl
rol
fmuls
test
daa
dec
xlat
mov
pop
stos
push
orl
or
dec
sub
mov
sub
and
jno
xor
push
or
lret
in
sbb
repz
popf
popa
dec
dec
gs
daa
mov
pop
mov
push
cld
rcl
mov
mov
lret
pop
mov
shr
pushf
enter
jno
cmpsl
mov
jmp
push
repnz
add
inc
outsb
add
xor
fldl
cltd
mov
and
lock
es
sbb
cltd
lahf
and
add
xchg
add
arpl
add
sbb
into
ficoms
hlt
inc
fildl
push
push
andb
lea
cmp
xchg
mov
inc
mov
or
mov
addb
jnp
pop
ja
add
adc
inc
inc
inc
sub
push
or
test
popa
push
xchg
pop
inc
hlt
jp
pop
mov
sbb
add
lret
add
xchg
imul
add
inc
push
arpl
push
cli
add
scas
push
sub
mulb
mov
fimull
setp
jl
das
mov
cmp
in
push
repz
mov
lock
adc
jmp
mov
adc
repnz
mov
xchg
and
loopne
nop
sub
stc
push
mov
push
mov
fwait
inc
sbb
fnstsw
push
or
add
inc
mov
sbb
push
gs
pop
mov
sub
jne
add
int3
shrb
and
mov
lds
push
inc
or
fldl
je
sub
mov
ss
xchg
ja
push
or
mov
cmp
bound
ret
mov
mov
loopne
daa
pop
or
lret
mov
add
leave
test
fcmovbe
inc
or
test
sbb
adc
imul
add
leave
sbb
hlt
jmp
adc
xchg
or
and
pop
adc
or
cmp
les
lock
les
shl
in
fdivs
cmp
mov
inc
mov
pushw
sub
cmp
sbb
mov
add
push
dec
adc
cld
xchg
test
fcompl
loopne
filds
imul
add
in
andb
js
lahf
fiadds
in
leave
push
mov
mov
mov
stc
jb
lret
mov
pop
or
repz
mov
idiv
loopne
in
jge
pop
enter
inc
andb
dec
cwtl
lods
add
popa
mov
insb
mov
xlat
adcb
sbb
iret
leave
rorb
sahf
fcoml
aam
ljmp
popf
in
jle
inc
push
inc
add
dec
or
add
fxch
shlb
out
pushf
fiadds
adc
add
pop
arpl
add
jle
sbb
es
arpl
shlb
in
jle
add
push
sbb
and
cmp
call
pusha
mov
lret
lahf
orl
pop
jae
daa
pop
add
and
cltd
ds
int
xchg
add
adc
repnz
andl
loope
enter
hlt
add
mov
cwtl
in
ss
sahf
and
scas
or
and
andb
rcrl
sbb
xchg
dec
test
lock
cmp
pop
mov
mov
adc
das
add
mov
ret
inc
bound
add
cmp
sbb
and
xor
lods
fisubl
inc
cmp
lret
and
loop
xorb
pop
pop
mov
out
or
int3
insb
out
rolb
adc
loopne
repz
sub
movb
adc
xchg
int
lock
pushf
jae
jne
jmp
or
int
inc
repz
pop
add
movsb
push
out
mov
out
sahf
addb
pop
push
add
loopne
or
sbb
leave
test
cmpsl
cmp
add
inc
adc
movsl
decb
inc
jge
out
mov
pop
int3
rolb
mov
pop
in
test
adc
add
or
mov
mov
popf
out
fnstsw
enter
inc
sbb
sbb
xchg
add
xchg
inc
mov
push
dec
popf
insb
test
call
cwtl
out
add
and
pop
addr16
push
hlt
stos
pop
ljmp
pop
mov
push
iret
scas
popf
aam
mov
pop
in
sbb
loop
js
jle
pop
sub
enter
adc
sub
and
sub
adc
pop
adc
inc
push
movsl
push
mov
sub
sbb
loopne
test
and
mov
cmpsl
sub
jb
sbb
test
push
in
push
sub
flds
sub
cmp
out
add
call
mov
mov
or
adc
js
mov
sarb
adc
scas
pop
push
dec
mov
mov
add
cmpsl
js
mov
add
test
jno
mov
shlb
lea
add
cmpsl
xchg
sbb
clc
out
addr16
xor
mov
in
xor
rcr
add
faddl
mov
decl
sbb
movaps
sub
add
inc
je
and
sbb
lock
add
and
sub
add
jl
add
lock
lret
lahf
pushf
inc
mov
sbb
int3
mov
dec
sbb
add
rol
inc
fdivl
imul
movsl
add
add
fmuls
push
lods
push
or
sbb
adcb
pop
add
push
icebp
lea
test
pop
loopne
aam
and
inc
adcl
popa
xchg
aas
jmp
stc
or
jno
or
les
shlb
inc
cmp
popa
jl
add
jae
shrb
test
mov
add
lea
push
iret
cld
cltd
dec
add
jp
hlt
push
arpl
rolb
add
movsl
add
jne
mov
and
add
inc
sub
out
es
shll
icebp
xor
cmp
xchg
sbb
jno
insl
loop
nop
ret
arpl
add
cmp
add
in
dec
rolb
stc
inc
mov
inc
les
pop
gs
xorb
rcrl
lret
pop
inc
fmulp
sarb
ss
adc
mov
push
add
sbb
xlat
clc
sarb
adc
add
jg
sbb
mov
xor
or
add
lcall
lock
lahf
cmpsl
sbb
push
loope
dec
sbb
movsb
in
pusha
xor
shll
adc
xor
ret
push
scas
das
fisttps
add
ret
pop
mov
push
push
add
shlb
cwtl
add
dec
rorl
xchg
dec
xchg
add
add
add
push
js
int3
xor
pop
push
mov
mov
divl
inc
out
addb
inc
mov
push
repz
or
adc
sbb
mov
lret
push
stos
mov
cwtl
call
ret
inc
cmp
addb
xchg
cmp
xchg
mov
pop
add
aam
jmp
ss
je
xor
daa
pusha
ret
push
cwtl
dec
stos
xchg
es
xchg
jb
xchg
and
or
mov
ss
sbbb
push
aaa
js
rclb
aam
sub
aad
mov
xor
ret
mov
scas
jmp
xchg
rolb
or
jbe
adc
pusha
sar
aad
pop
add
cmc
popa
add
mov
stos
push
lock
rcl
daa
jo
and
pop
test
push
pop
leave
xor
xor
mov
shl
pusha
or
add
ret
pop
push
mov
sub
pusha
pusha
pop
mov
ret
push
lret
mov
lock
fadd
mov
decl
add
aad
mov
add
movsl
inc
lock
dec
loopne
daa
xor
test
jle
popf
push
adc
lock
shl
dec
add
dec
ret
add
mov
add
lea
clc
imul
test
sub
imul
push
stos
fdivl
in
inc
addb
clc
push
nop
movsb
mov
lahf
insl
cmp
out
jb
cltd
xchg
mov
pusha
cmp
lret
fidivl
pushf
add
xchg
icebp
addr16
mov
lods
ret
mov
cmp
sbb
int
call
loopne
add
leave
inc
lods
adc
cwtl
mov
push
and
mov
shlb
and
xchg
push
push
mov
fisttpl
js
cmp
pop
test
mov
push
scas
push
clc
inc
nop
inc
mov
pusha
mov
jmp
push
xchg
loopne
mov
push
and
loopne
mov
and
inc
sub
adc
mov
mov
fidivrl
mov
pusha
mov
fdiv
push
aaa
nop
pop
icebp
add
cmp
mov
mov
andb
pop
jle
mov
pop
push
popf
pusha
rclb
bound
xor
mov
xor
leave
xor
mov
lret
jg
inc
pusha
cmpsl
jl
sbb
pusha
adc
xor
mov
mov
imul
mov
push
mov
mov
add
and
jg
and
xchg
push
push
jbe
pushl
sub
mov
jecxz
adc
mov
push
test
icebp
adc
pop
jecxz
mov
pop
sarl
mov
pop
pusha
push
mov
sub
cld
add
pop
les
movsb
push
popa
sar
test
ljmp
pusha
mov
pop
push
cmp
shrb
bound
pusha
adc
xor
sub
adc
xchg
sbb
pop
adc
pusha
or
lcall
fsts
dec
sbb
add
cmp
add
sbb
or
std
popa
daa
xchg
rclb
faddl
jmp
fs
jo
ljmp
popa
mov
hlt
push
pop
xchg
xchg
std
adc
sub
lock
sbb
sbb
jmp
pop
mov
or
rcrb
jl
ljmp
sub
rol
push
out
xchg
pop
ret
pop
add
push
cwtl
mov
jnp
add
dec
sbb
inc
data16
jno
and
push
outsl
rcl
or
inc
test
jecxz
fcoml
inc
xor
in
lret
xchg
popa
addb
xchg
rorl
adc
shll
xchg
push
into
cmp
dec
jle
sbb
dec
and
rcr
out
popa
add
pusha
or
fimull
and
loop
adc
sbb
pusha
push
pusha
add
roll
or
push
scas
gs
xor
orb
orl
lcall
je
pop
fsts
lods
and
mov
pop
stos
fisubl
jl
cmp
push
xor
iret
aam
mov
xor
jl
jns
push
sti
jae
inc
sbb
sub
mov
inc
clc
call
loopne
out
lds
rorb
pusha
fucomip
mov
push
mov
aas
adc
and
push
add
mov
aam
push
sbb
fiadds
cmpsl
jp
adc
mov
neg
bound
xor
mov
or
addb
clc
jae
xchg
pop
xor
into
data16
xor
rcrb
ds
pop
lahf
lds
add
sbb
add
jmp
add
add
in
and
or
inc
add
mov
cmp
pusha
sub
popa
js
lret
addb
jle
adc
adc
push
loopne
inc
pop
insb
pusha
scas
adc
cmp
mov
push
adc
dec
call
popl
aam
inc
push
sbb
lods
push
and
jno
xchg
sub
cltd
sub
xor
mov
inc
xor
fst
cmp
jge
lods
pusha
addb
loopne
lahf
arpl
cmpb
rorl
popa
int3
call
add
push
jl
adc
push
and
mov
pusha
fmuls
pusha
mov
insl
mov
cmp
push
sahf
movsl
fidivs
sub
sahf
ficomps
rcrb
out
sbb
pop
ds
enter
rclb
icebp
arpl
pop
add
sbbb
and
jge
dec
hlt
xchg
adc
xor
fcmovbe
add
cmp
jns
and
add
lods
data16
jno
and
test
sbbb
jo
xchg
push
xchg
jnp
ss
lret
cmp
sbb
lods
push
adc
outsl
xchg
mov
out
js
stos
and
dec
and
or
inc
fsubrl
in
inc
aaa
or
icebp
js
cld
and
mov
gs
pusha
outsl
bound
pop
dec
and
push
fs
mov
sbb
adc
lods
pusha
mov
xor
or
icebp
rorl
jg
add
inc
pop
mov
and
pop
pop
jmp
sub
fcoms
je
cmpsb
jmp
sub
popa
insl
adc
push
lock
lahf
insb
sub
push
push
or
xor
dec
sbb
add
ret
jbe
add
mov
add
in
xchg
xchg
jo
jl
loopne
mov
pusha
or
cmp
std
pop
pusha
push
push
cmp
punpcklbw
clc
mov
pusha
pusha
push
xchg
push
jl
rolb
push
add
inc
and
ds
addr16
pop
adc
shl
add
popl
sahf
adc
ds
dec
repnz
dec
xlat
clc
outsb
ja
pop
sbb
rcl
pop
add
mov
fs
sarb
or
imul
xor
push
shll
push
xorb
popl
mov
push
aam
fmul
xor
xor
jo
pop
pusha
add
nop
sarl
cmp
cs
xor
aam
inc
fbld
rcl
loopne
cli
test
add
xor
add
jae
mov
aaa
sub
mov
and
loopne
or
push
inc
mov
add
sub
mov
lret
dec
pop
adc
or
loope
test
push
int
imul
mov
int3
cmp
lret
lods
inc
mov
and
cmp
into
aam
fildl
jo
enter
call
mov
pop
cmp
sbb
xor
adc
pusha
jnp
addr16
rclb
bound
js
push
nop
pop
cmp
push
push
pop
sbb
xlat
dec
dec
adc
lods
rorb
cmpsl
and
enter
rol
lret
jo
insb
xor
sbb
inc
rcl
and
dec
aad
shll
inc
mov
js
adc
in
insb
or
outsb
xor
inc
jns
aam
inc
movsb
popa
and
loopne
mov
ret
jle
xchg
ja
add
or
cwtl
mov
idivl
lret
dec
pop
addr16
in
xor
mov
or
cmp
popl
and
sub
dec
fidivl
lcall
mov
or
fadds
js
pop
adc
inc
cli
gs
fdivrs
out
insb
daa
adc
cmp
inc
call
rol
xchg
add
mov
push
jl
xlat
pop
push
je
inc
lcall
popl
and
mov
pop
cmp
js
pop
pop
nopl
xchg
cmp
insl
int3
adc
adc
push
and
in
loopne
dec
mov
movsb
rorb
xchg
mov
and
mov
sbb
loopne
shr
mov
popl
and
sub
inc
nop
cmp
jl
adc
inc
rcr
xor
fldl
fwait
inc
mov
pop
lret
loopne
mov
cmpsl
fcoms
cmp
sub
clc
xchg
adc
addl
cmp
dec
or
jl
adc
leave
sbb
mov
pop
inc
faddl
addl
pushf
inc
mov
xchg
ds
and
cwtl
loopne
push
mov
sarl
daa
adc
cmp
fcomps
shrb
xchg
jl
sbb
mov
subl
mov
xchg
lock
mov
nop
xor
adc
push
pusha
mov
sbb
nop
pop
sbb
popa
js
popl
fildl
fdivrs
andb
mov
xor
insb
xchg
shll
mov
xlat
jns
scas
ret
dec
push
cmp
inc
sub
out
pop
adc
push
fiaddl
mov
jns
mov
sbb
and
or
fsubrs
inc
cmp
in
cs
inc
cwtl
inc
xor
pop
jne
mov
lcall
add
mov
mov
leave
inc
xorb
pushf
mov
call
das
lahf
adc
lock
xor
pop
nop
test
pop
push
jnp
das
shll
and
int3
or
call
bound
or
jae
inc
jno
test
iret
sub
and
sub
mov
add
and
ficomps
into
xor
mov
xchg
inc
lldt
mov
ja
icebp
loope
pop
lret
test
pusha
push
loop
push
cmp
inc
js
inc
mov
clc
push
and
adc
lock
sub
xor
mov
add
jae
add
movsb
jl
or
mov
adc
fdivs
xor
pusha
push
dec
inc
dec
mov
pusha
pusha
mov
dec
lret
lds
push
loopne
pusha
jnp
out
in
adc
mov
xor
sbb
loope
jno
lods
pusha
subl
add
mov
mov
popa
sub
mov
daa
cltd
lds
mov
popf
mov
or
movsl
clc
xor
and
loopne
inc
push
inc
or
repnz
adc
and
dec
loopne
jno
clc
es
pusha
mov
popf
clc
mov
icebp
test
pusha
mov
xor
rorb
stos
and
icebp
mov
add
clc
fimuls
mov
inc
inc
sub
sbb
subb
xchg
xor
and
fwait
sbb
or
sti
cmpsl
add
xor
cmpsl
popl
adc
mov
pop
stc
inc
jge
inc
stos
shl
jle
addl
cmp
les
mov
ss
push
add
in
test
psubusb
sarl
adc
xchg
shl
sub
pop
ret
inc
xorb
out
cmpsl
sbb
pop
dec
lahf
dec
and
push
pusha
icebp
inc
fsubr
push
mov
jae
pusha
fsubrs
xor
pusha
pop
bnd
add
inc
mov
add
mov
sbb
fwait
cmp
add
cmp
push
inc
out
pop
mov
push
jnp
xor
pusha
push
cwtl
xor
cld
andb
lods
pusha
cmpl
fdivl
push
pop
pusha
mov
ljmp
mov
or
out
dec
mov
mov
jns
cmpsb
adc
pusha
lods
adc
pusha
icebp
push
imul
push
nop
out
pop
pusha
push
pop
bound
sub
pop
pusha
pusha
jp
out
ss
stc
es
arpl
jp
out
inc
mov
arpl
push
and
loopne
dec
mov
mov
pushf
inc
es
inc
cmpsb
pop
jl
cmp
in
xchg
lock
mov
out
and
adc
and
cmc
add
fs
stos
adc
es
popa
pusha
shll
mov
inc
pusha
ror
xchg
mov
xor
pusha
fmuls
inc
inc
mov
sub
aam
ljmp
sub
out
and
xchg
adc
sti
cmp
mov
pop
rol
popa
adc
jecxz
mov
adc
addr16
jo
xchg
inc
fsubl
push
xchg
lret
bound
add
ss
mulb
jl
or
cmp
xchg
lock
dec
inc
sti
and
push
cmp
add
pop
imul
lea
popa
or
push
clc
adc
mov
and
adc
idivl
or
bound
lods
lock
xchg
cmpsb
dec
push
cmp
xchg
icebp
adc
popa
out
and
jg
push
in
imul
jbe
aaa
mov
sar
pop
and
adc
lock
lea
sbb
inc
adcl
cmp
sub
adc
cmpsb
scas
push
fisubs
xor
rcll
cli
and
es
sbb
push
ret
test
cmp
jecxz
sub
cwtl
mov
adc
test
push
shrb
ret
mov
shlb
xor
call
adc
sbb
sub
cmp
add
jecxz
add
add
cmp
lea
lds
es
and
icebp
jmp
inc
mov
jecxz
and
and
xor
lds
sti
inc
inc
mov
inc
roll
hlt
adc
adc
popf
lahf
enter
adc
pop
dec
and
sub
mov
cmpsl
or
push
les
or
mov
popa
xchg
pop
sbb
daa
mov
sbb
push
xchg
and
xor
mov
or
inc
add
dec
pop
xor
cwtl
xchg
push
sbb
in
inc
or
push
imull
add
cmp
in
dec
xchg
push
or
pop
xchg
enter
test
rcrl
adcb
mov
popl
xchg
mov
or
and
xor
pop
xchg
rclb
pop
aam
movsb
shll
ja
sbb
nop
rcll
bound
add
imul
or
es
sub
pop
jno
pop
jecxz
scas
and
sbb
roll
call
add
icebp
sub
lds
lods
imul
es
cmpsl
cmpsb
cmp
ret
add
shl
pop
mov
mov
paddb
sub
xor
nop
lods
add
sbb
cmp
data16
mov
lea
dec
pop
fiaddl
stc
or
out
adc
and
xchg
es
jae
addr16
mov
push
adc
jle
dec
test
add
jge
dec
in
mov
or
pop
lahf
iret
data16
adc
pop
repnz
and
imul
popa
aam
push
add
iret
sbb
mov
js
mov
ret
xchg
sub
lret
arpl
sub
inc
xorb
add
filds
inc
sbb
repnz
pop
mov
test
lods
sub
mov
dec
dec
xor
shlb
mov
rolb
push
push
nop
and
fwait
test
fldl
mov
aas
mov
adcb
mov
mov
pop
insb
sub
inc
xor
cmpsb
shll
mov
xchg
jo
cmpsl
inc
sbb
imul
xlat
fdivs
inc
pushw
dec
test
gs
enter
jl
or
push
pop
js
push
add
jno
lods
dec
dec
add
shlb
xchg
xor
jge
mov
adcl
sbbb
mov
push
add
int
add
dec
sbb
pusha
xor
ja
add
xorl
add
dec
loop
nop
push
cld
call
xchg
jbe
cmpsb
lock
dec
orb
rcrb
jg
scas
mov
js
mov
push
hlt
fsubr
outsl
fwait
and
push
or
cwtl
dec
add
xor
movd
pop
les
pop
dec
out
cmc
sub
dec
rol
jae
xlat
push
sbb
inc
adc
or
or
and
xchg
pop
jae
rolb
idivl
addl
sbb
pop
out
inc
mov
lahf
inc
bound
js
pop
stos
mov
sub
mov
andb
cmpsl
mov
push
popa
or
sbb
or
std
pop
popf
pop
in
stos
aam
out
cmp
cmp
movsl
cmpsl
jge
ss
inc
nop
mov
mov
pop
shll
test
out
or
mov
sub
cmp
stos
adc
push
shlb
rolb
popf
or
andb
pop
cwtl
lods
add
cmpsl
sti
cmp
inc
je
test
inc
dec
add
or
aaa
icebp
adc
adcb
cmpsl
dec
lds
mov
mov
sbb
add
mov
sub
sbb
cwtl
fistl
shrb
and
aaa
adc
push
xor
in
jbe
lods
fisubrl
inc
inc
and
inc
in
mov
int3
sub
pusha
mov
sub
sahf
cwtl
push
add
push
or
adc
xchg
pop
ret
dec
pop
mov
push
testb
xor
mov
stc
fldl
rcrb
push
or
push
cmp
popf
or
sub
lcall
mov
enter
notb
cmp
add
std
cmp
movsb
fistpl
sub
add
push
jb
inc
addb
xchg
xchg
push
mov
shll
pusha
push
incb
clc
mov
cmpsb
mov
mov
inc
pop
fisttps
mov
fsts
adc
inc
lret
sar
lods
sbbl
in
xor
mov
inc
add
test
or
or
je
jle
cmc
and
out
dec
mov
pop
bound
negb
xor
add
add
mov
push
pop
in
outsl
add
movsb
xlat
mov
sbb
lods
mov
dec
sbbb
add
push
mov
arpl
jo
sub
outsl
dec
jmp
mov
add
testb
push
test
mov
or
dec
addr16
flds
pop
enter
mov
mov
gs
add
outsb
or
daa
fcoml
add
adc
outsb
xchg
add
iret
cmp
shrl
add
lds
cltd
jmp
scas
push
add
cmp
lods
out
iret
jg
pushf
push
aaa
add
jae
iret
out
sub
imul
nop
icebp
int
mov
adc
adc
in
xor
pop
aad
dec
lods
jnp
xor
xchg
mov
sbb
ja
cmp
call
loope
and
stos
movsl
add
outsl
xchg
int3
dec
fbld
add
nop
pushf
imul
sub
movsl
sub
jge
add
xor
pop
mov
movsb
xor
les
sbb
jl
add
cmc
pop
mov
fnstenv
aad
lcall
test
jmp
ret
daa
sub
jbe
cmpsb
stos
bound
push
mov
ja
or
push
adcb
in
js
mov
add
repz
add
movsb
fsubl
push
add
sbb
je
push
fidivrs
daa
and
popf
mov
pop
inc
jae
xor
and
add
ds
insl
jo
or
pop
push
loop
add
int
push
daa
clc
mov
add
insl
add
add
inc
jmp
or
filds
sbb
push
and
pop
fwait
dec
jmp
nop
adc
mov
sbb
fs
mov
sub
lods
dec
add
stos
sub
add
jle
arpl
sbb
add
xchg
orb
xchg
test
cmp
pop
loop
xor
testb
scas
inc
xorb
cmp
mov
sarb
sbb
adc
sub
stos
or
popf
mov
or
sbb
jge
sub
xor
jecxz
inc
call
or
add
mov
fs
fldl
ja
jl
jbe
or
inc
push
andl
add
mov
add
sub
lcall
sar
sbb
add
jge
sub
jne
divb
rolb
ljmp
push
push
daa
ret
sbb
stc
shlb
ja
mov
push
icebp
repnz
mov
cmpb
fisubs
jne
add
inc
lock
ljmp
sbb
mov
lock
push
nop
push
lods
scas
jb
or
xchg
and
out
jmp
adc
add
cmc
or
out
mov
jb
fst
rcrb
repz
sti
das
pop
push
enter
insb
add
out
sahf
int3
shlb
scas
stc
bts
and
rorl
inc
and
mov
pusha
test
cmp
bound
test
movsb
repnz
rcrb
add
xor
inc
add
iret
fcomp
pop
or
add
adc
xchg
scas
jecxz
and
mov
dec
fbstp
or
push
iret
push
add
xor
cmpsb
cli
cld
sbb
dec
sub
data16
pop
mov
les
mov
jp
int3
sub
or
inc
loopne
mov
sbb
pop
mov
jno
in
or
pop
bound
iret
pop
cmp
inc
sub
pop
into
dec
add
cmp
popa
shl
incl
sbb
push
rolb
clc
roll
movsl
sahf
adc
mov
movsb
add
sbb
sbb
scas
ret
add
xchg
lahf
mov
addl
outsl
xor
and
insb
in
add
push
cmpsb
out
add
flds
xchg
cmp
mov
mov
xlat
dec
jl
xor
rolb
aaa
into
jns
or
or
test
pushf
pop
add
repnz
jp
pop
xor
mov
hlt
and
mov
jbe
sub
inc
int3
pop
packuswb
call
add
jge
idivb
push
push
orb
cmpsb
mov
inc
xchg
adc
and
je
data16
sub
addb
je
ja
out
ds
adc
shll
lods
scas
sbb
in
incl
pop
fwait
mov
iret
out
scas
cmpsl
seto
and
hlt
lret
pop
xchg
pop
xchg
add
test
pop
push
xchg
stc
out
and
adc
ret
out
imul
inc
sbb
repnz
xor
lret
xor
nop
cmpl
addb
movsl
call
ja
cmp
in
aas
add
mov
xchg
ret
mov
js
add
cmp
sbbb
ret
add
sub
mov
or
stos
sub
sbb
pop
adc
xchg
outsb
mov
rcr
leave
mov
adc
fadds
mov
and
inc
aam
es
and
sarb
into
jnp
add
mov
loopne
testb
adc
cld
pop
std
in
cmpl
stos
movsl
sub
xchg
adc
testb
out
inc
out
dec
repnz
test
mov
test
xchg
jge
scas
shl
addr16
and
ror
add
pop
xchg
fisttpl
insl
cmp
imull
xchg
xor
adc
cmpsb
fiadds
test
push
or
mov
add
pushf
sarl
pop
mov
in
icebp
xchg
mov
add
imul
loop
test
cmp
subb
insb
add
and
adc
push
leave
lret
push
addl
push
rorl
stos
jnp
or
das
dec
push
js
add
test
adc
adc
fsubr
jg
pop
lcall
mov
sub
out
outsb
add
pop
es
and
loop
cmp
cli
test
jge
jl
add
inc
xchg
scas
jno
push
jg
dec
pop
jo
ret
push
repz
mov
in
mov
jecxz
jb
imulb
add
outsl
ret
loopne
adc
fs
mov
push
rorl
adc
inc
rcl
jl
divl
xor
adcb
mov
or
mov
push
adc
xchg
jle
pop
ret
rorb
add
pushf
sbb
add
adc
push
sarl
xor
xchg
xchg
jae
push
movsb
out
add
lods
adc
loop
cmp
and
xor
add
in
out
sti
call
push
into
sub
loop
inc
cmp
mov
fadd
lea
add
loop
mov
mov
pusha
scas
add
pushf
sub
add
sbb
pop
push
sbb
mov
xor
hlt
icebp
add
and
cmc
bound
mov
jne
les
cmp
ljmp
call
or
push
jb
or
orl
insb
jl
test
mov
push
xor
add
or
pop
inc
dec
mov
add
loopne
inc
aaa
and
xlat
and
filds
inc
out
cmp
fwait
cmp
cmpsl
dec
pop
pop
fadds
ds
xchg
call
loope
push
ret
sbb
mov
lock
fimull
add
aas
mov
lea
cld
xchg
pop
xchg
jne
jecxz
lret
add
repnz
xor
inc
fldenv
in
pop
push
clc
fisubrs
xchg
add
and
jo
dec
add
cmp
popl
push
and
inc
out
shl
xchg
mov
pop
loop
add
push
add
fdivrl
fisubs
mov
shlb
jbe
sbb
rcr
inc
fmuls
insl
add
int3
add
fsubl
xchg
inc
cwtl
sub
xor
jle
loop
sbb
scas
rolb
sub
rcll
clc
rcrl
jp
add
mov
pusha
sbb
sub
jnp
arpl
pusha
or
imul
gs
jmp
add
add
pop
xchg
repnz
in
mov
scas
adc
mov
jnp
inc
mov
add
gs
pop
inc
mov
pop
xchg
jge
pop
cwtl
jo
jecxz
nop
sahf
orb
sti
xor
pop
jle
add
jo
ret
add
xchg
jmp
les
loopne
push
and
or
jno
add
out
sbbl
sub
dec
addr16
sbb
sub
loopne
xchg
shlb
repz
mov
and
adc
mov
xor
sti
dec
pop
add
cmp
popa
xchg
jmp
sarb
pop
jmp
shrb
mov
jno
mov
repz
icebp
repnz
scas
mov
ffreep
mov
or
add
and
add
xlat
pop
cmp
and
xor
xchg
xchg
push
jnp
jl
add
in
insl
sub
pop
icebp
or
jle
sub
mov
jge
add
pusha
pop
add
pushl
xchg
test
ret
lcall
add
push
sbb
push
das
mov
lods
scas
add
packsswb
outsl
jno
push
inc
xor
scas
in
sbb
mov
xorb
cmp
inc
imul
and
xchg
mov
sub
and
cmp
movsl
popa
addl
loopne
mov
xor
add
pop
shlb
push
xorb
mov
pop
add
js
xchg
push
push
jne
adc
sbb
cmp
push
mov
nop
pushf
mov
or
insl
pop
sbb
adc
add
push
roll
scas
or
insb
jl,pn
cmp
add
repnz
les
adc
lcall
mov
dec
popf
jae
je,pn
aas
xchg
scas
xchg
xor
arpl
lret
enter
jge
add
ret
xchg
out
sbb
iret
mov
inc
add
aad
mov
sarb
inc
pop
das
imul
inc
xchg
adc
imul
in
data16
mov
sbb
mov
dec
pop
sbb
mov
lock
ds
add
xchg
out
leave
jl
pop
cs
test
in
dec
popf
jecxz
push
xchg
sub
mov
pop
xor
mov
push
ds
or
pushf
lock
add
push
xchg
pop
fnstenv
jo
testl
inc
inc
insl
add
inc
jno
push
sqrtps
or
jp
mov
push
mov
jge
sbb
and
stos
xchg
mov
ds
add
or
sub
sub
leave
mov
xchg
cmp
int3
push
das
sbb
nop
jl
sbb
sub
outsb
daa
dec
push
add
mov
fnstenv
andb
sub
pop
add
pop
jno
test
ja
add
pop
fadd
and
int
push
mov
add
xchg
rcll
fildl
enter
sbb
imul
loop
add
mov
shrb
xchg
add
scas
pusha
div
decl
fdivl
xchg
orb
jmp
enter
cmp
dec
push
fldcw
sub
fsubs
int
out
add
sub
add
scas
cwtl
in
push
imul
in
mov
jl
in
add
adc
or
loopne
pop
jnp
and
fisubrl
pop
faddp
scas
int
inc
adc
dec
jnp
pushf
loope
nop
xchg
mov
mov
cltd
mov
add
cwtl
or
xor
call
les
out
add
jecxz
fidivrl
sbb
xchg
stc
inc
pop
or
or
pop
shlb
inc
inc
dec
mov
mov
mov
mov
cmp
nop
out
or
mov
mov
addb
movsb
loopne
push
shr
cld
add
add
push
cmp
leave
ja
add
in
icebp
xor
cmpsb
std
sbb
push
dec
ror
jnp
add
insb
mov
mov
add
cmp
lea
dec
int
push
add
orb
test
loop
scas
push
mov
xchg
xor
add
in
push
lds
add
sar
xor
add
add
and
inc
xor
xchg
nop
add
test
add
adc
iret
mov
add
xor
mov
les
enter
and
fsubrs
ds
inc
insb
je
insl
in
dec
cmp
pop
push
xor
out
andb
add
outsb
loopne
insl
and
or
adc
sbb
test
pop
fldcw
xchg
or
jg
sbb
add
mov
pushf
in
add
mov
push
jne
inc
repnz
fcompl
pushf
or
fdivrs
fs
stc
push
je
mov
repz
jo
push
insb
push
jns
mov
xchg
dec
in
outsl
nop
add
fcomps
push
orl
rolb
sbb
xorl
mov
popa
mov
mov
mov
sbb
pop
movsb
iret
and
push
pusha
jp
pop
pop
ficomps
lock
dec
ret
loopne
sub
fisttpll
push
and
sub
cwtl
or
add
sub
das
lahf
xor
or
js
xor
sbb
jg
push
xor
xchg
mov
xchg
xlat
add
push
arpl
cmpsl
testl
inc
pop
push
inc
loopne
cmp
jno
push
lea
js
popf
push
sub
mov
mov
mov
loop
shll
mov
je
add
mov
and
in
and
add
pushl
inc
push
cmpsb
lret
push
mov
mov
sbb
bound
jl
mov
mov
inc
cmp
cmc
jne
sbb
shl
psubusw
xor
or
and
nop
sbb
mov
add
test
call
sub
jmp
inc
cwtl
mov
call
jb
dec
add
adc
cmp
test
push
lret
jge
test
push
cmp
jne
pop
pop
mov
clc
fnsave
inc
dec
xchg
push
mov
out
dec
iret
push
add
hlt
out
and
sub
aas
jle
int3
mov
dec
out
add
cmp
add
jecxz
int
lock
sbb
xchg
js
aad
mov
xchg
mov
add
lea
push
xor
and
jae
mov
ljmp
push
out
or
pop
mov
std
sub
rorl
pop
sbb
add
roll
mov
add
sti
rclb
dec
sub
jns
js
sub
xchg
pop
or
sub
add
jecxz
add
test
arpl
inc
movsl
mov
mov
push
xor
enter
pxor
pop
rolb
push
sub
mov
sub
push
jnp
mov
in
inc
and
lret
jbe
add
shlb
iret
cli
cmp
movsb
dec
nop
daa
adc
dec
in
xchg
daa
icebp
daa
sarb
jb
and
rolb
cmpl
add
sbb
das
mov
mov
lock
jnp
roll
sbbb
dec
sbb
add
sub
call
sub
push
stos
aas
cmp
movsb
add
into
ja
push
inc
inc
add
jns
dec
pop
mov
fimuls
pop
call
orb
addl
sbb
push
push
mov
add
out
cmp
leave
cmp
scas
stos
xchg
and
outsl
xchg
xchg
pop
ucomiss
adcb
insl
sbb
add
xlat
dec
dec
push
loope
or
jecxz
fld
les
inc
in
iret
pop
inc
das
add
mov
faddl
xchg
xchg
outsl
mov
mov
mov
test
es
add
in
addr16
ret
pop
leave
inc
lret
cld
add
cmp
cmpsb
mov
pusha
es
add
push
mov
sub
add
pop
into
and
xor
add
insl
mov
adc
xchg
push
push
push
pop
mov
add
cmp
adc
mov
fcoms
mov
pop
or
movsb
add
xor
rcrb
decb
imul
pushf
pop
and
mov
add
in
sub
lods
loop
jno
stc
mov
xchg
mov
shl
xlat
repz
sub
sub
jecxz
sarl
icebp
xor
and
sub
and
pmaxsw
es
push
lds
xor
mov
push
outsb
js
add
mov
scas
inc
pop
and
adc
adc
cwtl
addl
add
or
push
pushf
sahf
fwait
xchg
sbb
bound
icebp
test
mov
mov
lret
pop
adc
lods
jae
in
bnd
push
add
xor
add
xchg
cmp
dec
push
movsl
das
pop
inc
rcrb
add
ds
push
mov
push
mov
aam
xchg
lock
xchg
jmp
pop
add
and
out
fldl
aad
aas
cmp
in
arpl
jg
loopne
jmp
sbb
jge
rcrl
xchg
test
mov
inc
and
fisubrl
add
jbe
add
pop
rorb
dec
or
in
jns
hlt
nop
mov
bound
adc
mov
sbb
and
or
add
pusha
jne
shll
cwtl
or
push
hlt
punpcklbw
add
rorl
and
scas
xchg
pop
cmp
jp
add
sub
mov
sub
pop
fstpl
pushf
int
movb
popf
mov
inc
into
add
cwtl
mov
mov
orl
int
jg
add
les
rcl
push
and
and
add
filds
out
mov
pop
pop
add
pop
insb
mov
fmull
mov
popw
cmp
fstl
pushf
rol
adc
sub
mov
outsl
mov
or
pop
cltd
stos
xchg
pusha
dec
xor
loop
inc
and
rcrl
mov
lcall
add
inc
into
rolb
inc
pop
push
xchg
pop
out
xor
cmp
jle
mov
adc
jno
cwtl
daa
push
push
add
xor
inc
popf
shlb
add
icebp
xor
shlb
xchg
push
add
adc
mov
ljmp
mov
hlt
popa
or
sbb
in
clc
lock
mov
cltd
ror
add
sbb
add
adc
sbb
mov
push
dec
rolb
pop
mov
int3
and
or
fs
jbe
rol
inc
fadds
test
les
mov
pop
or
adc
jp
loop
icebp
idivb
adc
add
popf
scas
dec
lods
shlb
jmp
pop
pmuludq
mov
leave
jmp
in
testb
jo
pushf
push
in
mov
shl
push
loope
dec
repnz
push
xor
sub
out
cmp
push
or
call
jge
mov
in
ljmp
fwait
in
rcrl
pop
push
mov
add
cli
mov
insb
mov
out
pop
fisubl
das
and
jbe
in
je
add
jle
sub
stos
jb
ret
inc
add
adc
in
sub
xor
add
imul
es
out
inc
xchg
popa
fimuls
sub
mov
pusha
add
lret
js
add
cld
sbb
dec
mov
xchg
lahf
pop
mov
testl
jns
add
cmpsl
inc
sarb
add
cmpb
mov
inc
arpl
sub
std
push
jnp
jns
push
movsl
xchg
iret
sbb
lock
inc
ret
jp
mov
cltd
add
lcall
add
pusha
test
mov
xor
dec
insl
dec
cmp
and
push
xchg
outsb
mov
mov
pop
es
decl
aad
or
xchg
inc
pop
ja
add
lahf
jp
fcoms
sbbb
pmulhuw
out
mov
pop
add
push
pusha
mov
repnz
inc
or
filds
das
jae
xor
xchg
add
mov
add
loop
adcl
sbb
jno
fiadds
cwtl
push
cs
cmpsl
mov
shlb
mov
jae
add
popa
rol
jae
cmp
jmp
ret
movsb
cwtl
lods
add
pusha
inc
dec
testb
dec
std
add
inc
mov
mov
outsl
cmc
sbb
add
adc
test
cmp
bts
jns
mov
iret
add
insb
add
ret
scas
sbb
ss
lock
mov
mov
sub
mov
dec
pop
and
pminsw
mov
loopne
or
cmp
jp
or
lock
jnp
data16
add
and
test
or
nop
ret
js
out
mov
cld
or
sbb
andl
dec
add
fldcw
add
vandpd
fisttpl
jp
ret
loopne
xchg
add
pop
add
cmp
inc
movsb
pop
adc
call
adc
in
stos
testl
sub
push
pop
dec
inc
jae
frstor
cmp
orb
sub
out
xchg
in
mov
nop
xchg
add
mov
and
imul
outsb
mov
mov
mov
sub
adc
das
xor
cld
add
mov
imul
fmul
in
add
add
jp
xor
dec
nop
add
cmp
sahf
rcl
lret
je
addr16
stos
mov
icebp
hlt
jg
mulb
xchg
insl
push
mov
ret
xor
dec
popa
orb
dec
add
and
xchg
leave
or
add
mov
cld
rcll
pop
scas
or
repnz
stos
add
cmp
or
xchg
mov
inc
jo
jecxz
jg
dec
or
stc
mov
add
lcall
int
js
and
push
pop
enter
inc
add
ret
jg
test
loop
jo
mov
fists
sub
xchg
add
jmp
loop
or
push
dec
iret
ficomps
xorl
inc
in
hlt
roll
and
jecxz
lock
cmp
jg
add
into
xchg
loop
pop
mov
mov
fwait
pop
mov
inc
lret
jb
xorb
add
xor
testl
push
std
cmpsl
mov
jg
aam
cmp
aaa
mov
add
sbb
or
mov
lret
jo
cmp
cltd
addb
xchg
add
cwtl
pop
mov
cmp
mov
xchg
lret
mov
xor
in
lcall
add
jb
xor
sub
or
hlt
aaa
add
dec
add
jno
add
cltd
cmp
or
test
or
out
add
mov
add
stc
cmp
cltd
loop
add
push
mov
insb
xor
add
mov
mov
sub
in
imul
xor
outsb
adc
pop
iret
rolb
cmp
cltd
jp
sbb
fbld
pop
xchg
test
cld
cld
js
add
ret
xorl
ss
fwait
in
addb
sbb
test
pop
mov
in
loop
aaa
jecxz
enter
aas
push
add
jo
mov
aaa
popf
mov
js
icebp
inc
mov
aas
xchg
cmpsl
adc
test
adc
jo
cmpsb
bound
xchg
pop
in
fldl
add
adcl
setns
enter
or
rcll
pop
int
int3
in
xchg
push
mov
add
sub
data16
daa
lock
into
add
cmp
lcall
out
lock
into
jl
fnstenv
push
addb
and
xchg
add
mov
ja
lret
jbe
dec
mov
pusha
sbb
das
enter
icebp
cs
add
cld
iret
adcb
dec
outsl
cli
gs
loope
arpl
jle
mov
adc
xor
outsl
lods
pusha
fidivrs
mov
jmp
and
mov
add
icebp
in
mov
movb
out
and
cmp
loop
sub
and
push
jecxz
push
mov
push
sbb
arpl
pop
sub
rol
fwait
push
add
sbb
push
jns
sub
add
adc
push
pop
popf
xor
pusha
das
push
inc
dec
cmp
add
push
sub
xchg
pop
into
jno
add
mov
nop
fimull
jae
ljmp
roll
add
outsl
add
push
dec
mov
add
adc
sbb
cmp
popa
lods
push
push
in
aam
ficomps
push
loope
lret
push
dec
jns
sub
push
js
push
mov
adc
xchg
add
jge
roll
ret
stc
popf
icebp
int3
iret
jns
imul
or
fildl
stos
test
enter
cmpsl
rorb
or
push
cmp
leave
jne
scas
mov
aaa
xor
ffreep
add
and
mov
ficompl
jae
pop
push
or
ret
in
add
fisubrl
stos
testb
pop
mov
lahf
and
cltd
xor
sbb
sar
fs
cwtl
mov
rorl
add
pop
cmp
add
js
inc
sbb
iret
cwtl
movsl
icebp
lret
lret
movsl
add
xor
dec
add
cmp
inc
mov
pop
test
sub
popf
roll
aaa
lods
fstl
cmp
add
and
sub
jne
and
jp
push
add
push
mov
call
in
pop
add
mov
add
fisubrs
push
add
pop
pop
mov
mov
adc
ret
or
cmpsl
inc
cltd
insb
push
dec
repnz
add
jnp
sbbb
stos
jl
pop
mov
imul
cmc
add
jmp
mov
imul
daa
pop
add
mov
in
data16
add
ds
sahf
iret
pop
jnp
add
add
jns
fstpt
xchg
add
sti
adcl
test
lock
jns
mov
adc
dec
sbb
test
jno
mov
das
add
xchg
xor
loope
jle
mov
scas
inc
fnstenv
cmp
lds
or
test
adc
inc
mov
mov
cli
popa
fstps
push
add
or
xchg
or
sarl
dec
push
test
and
inc
dec
sbb
mul
sub
mov
data16
je
jg
pop
cmp
jne
nop
pushf
test
and
add
xor
leave
add
mov
repz
sahf
mov
cmpsb
jbe
es
aam
scas
lret
faddl
test
test
mov
inc
add
push
mov
repnz
add
and
pop
inc
mov
and
adc
cmc
sbb
mov
sbbb
jg
xor
mov
lods
xor
jne
push
and
ret
sbb
stos
sbb
pop
xchg
hlt
loope
dec
mov
and
mov
out
out
leave
cmc
mov
or
or
xor
test
or
sub
fsubrl
add
vcvttsd2si
ljmp
xchg
mov
cmc
mov
jge
loop
movsl
dec
into
xor
add
pop
sarb
lahf
lock
rorl
nop
in
add
sub
push
lret
jo
add
mov
out
mov
es
add
add
pop
scas
js
sub
or
fdivl
scas
push
mov
sbb
bound
mov
push
aam
fsts
jge
add
mov
xor
cmc
or
hlt
jle
out
jp
push
cmp
cmpsb
jae
sub
adc
adc
push
inc
xor
push
loope
xchg
add
in
xchg
pop
lock
add
insl
dec
in
mov
out
mov
loop
std
inc
es
lret
xor
jmp
sti
movsl
jae
lcall
sbb
cmc
add
rolb
push
mov
rcl
adc
mov
lahf
sub
sbb
mov
adc
sbb
jecxz
mov
inc
add
lds
push
push
push
mov
je
fiaddl
rep
xchg
jae
jo
push
mov
cmp
cld
es
xor
addr16
test
and
add
pop
shll
addl
jne
clc
jle
cmpb
addr16
push
mov
sbb
aam
cmp
dec
or
cmp
adc
arpl
shl
dec
ret
out
std
ja
das
cld
jns
pop
add
adc
stos
sarb
inc
out
in
imul
ss
or
mov
cltd
lds
xchg
or
push
insl
push
mov
xchg
push
imul
cmp
test
shll
mov
out
pop
jmp
pop
cmp
jmp
jnp
or
mov
jne
push
add
add
fmuls
stos
or
call
sbb
mov
in
data16
rol
mov
int
pushf
and
mov
lcall
lret
sbbl
pusha
xor
inc
mov
mov
add
cmpsb
fmuls
push
cs
add
pop
mov
mov
jl
dec
mov
mov
xlat
jo
sbb
sub
and
or
xchg
pusha
adc
fistl
shll
xchg
cmp
aas
addr16
shrb
sbb
jmp
fistl
add
outsb
ja
mov
lods
js
shlb
adc
add
pop
cmp
test
ret
sbb
sets
lcall
ss
add
into
fiadds
jbe
adc
inc
cwtl
or
push
enter
ds
shlb
adc
mov
jns
add
push
inc
sub
popa
loop
sbb
movsl
rdtsc
call
and
shrl
fwait
push
and
add
mov
or
aaa
sub
nop
adc
push
mov
and
or
cli
push
push
dec
sub
push
in
mov
sarb
lahf
sbb
ljmp
cmp
iret
inc
push
dec
nop
subb
add
clc
cmp
icebp
or
int3
fsubl
pop
test
testl
mov
add
or
mov
adc
and
and
push
jg
and
adc
sub
jmp
add
fldcw
cs
dec
insl
repnz
mov
mov
sti
lock
fstps
addr16
push
push
and
idivb
pusha
xchg
test
adc
xchg
inc
enter
fcmovu
push
in
jmp
dec
push
iret
das
lret
mov
in
push
adc
mov
aas
pop
dec
cmp
cmpb
leave
push
mov
push
test
mov
mov
mov
imul
insl
enter
fidivl
mov
scas
loopne
clc
add
arpl
xchg
rolb
movsl
add
mov
sbbb
pop
insl
mov
out
adc
sahf
and
dec
jnp
xor
inc
jns
nop
cld
test
in
pusha
in
sbb
lahf
test
nop
pop
shl
and
sub
lret
adc
movsb
aas
and
or
cli
push
add
test
mov
and
xchg
hlt
push
lret
mov
add
inc
sub
adc
fildll
mov
push
stos
sarb
movsl
mov
cmp
pop
push
loope
adc
into
les
int
push
rorb
push
sbbl
add
cs
dec
add
mov
mov
gs
sbb
cwtl
icebp
xchg
sarl
das
add
stos
add
or
les
aas
jo
test
adc
enter
adc
cmp
testl
sub
and
int3
pop
add
jp
cmpsb
xchg
leave
xor
sub
push
adc
inc
jo
cwtl
mov
jg
add
xchg
loop
subb
fcmovne
or
sbbb
xchg
mov
loopne
jmp
mov
fldl
inc
loopne
dec
pop
inc
add
out
lcall
xor
js
out
sub
xchg
testl
adc
ror
rolb
testb
xorps
shl
aam
mov
push
leave
loope
mov
movsb
mov
jbe
loop
sbb
shlb
add
in
adc
sbb
cmpsb
repnz
outsl
adc
xchg
ss
sbb
lods
add
pop
mov
sahf
add
int3
push
testl
ret
cmp
or
int
xchg
cmp
es
cmp
push
inc
push
jmp
push
and
xchg
xchg
add
and
adc
dec
mov
mov
outsl
push
lcall
insl
test
subb
jno
push
adc
or
sub
test
mov
fistpll
inc
loope
and
mov
les
cmp
movsb
mov
push
mov
stos
mov
enter
adc
lret
cmp
fadds
jl
or
inc
lods
adc
mov
pop
dec
or
push
shll
mov
xor
aam
call
jg
adc
pop
rclb
push
iret
jbe
inc
in
and
mov
add
je
ret
pusha
and
mov
jl
dec
add
lret
add
adc
mov
sbb
fmull
inc
adc
icebp
cli
inc
imul
pop
fistpl
add
shll
imull
pusha
dec
mov
cmp
jns
call
push
adc
mov
iret
jmp
xor
jo
std
shl
fs
test
jecxz
jnp
lcall
jns
sbb
xchg
dec
push
fildl
or
clc
arpl
outsb
jno
fcomp
dec
or
js
stos
cwtl
or
imul
mov
js
add
cwtl
add
nop
ja
addr16
cmp
inc
cld
push
sbb
xchg
shlb
push
sbb
lock
sbb
or
sbbb
lock
sbb
jmp
shrb
dec
xchg
movsb
fs
cmpsl
leave
lock
sbb
xchg
jecxz
adc
xor
xchg
mov
sarb
xchg
or
cs
adc
push
call
fiaddl
daa
pop
je
sbb
sbb
sub
sbb
repnz
loopne
fsubrs
rclb
lahf
out
push
mov
in
and
idivl
jl
push
lods
or
xchg
imul
lret
nop
xchg
les
and
inc
mov
cwtl
and
xchg
mov
andb
nop
mov
addr16
inc
sbb
and
cmc
push
mov
mov
sbb
test
scas
xchg
mov
stos
jl
adc
clc
or
inc
test
pop
pop
mov
sub
sub
stos
adc
or
imul
rolb
fstps
in
leave
jge
adc
aas
mov
outsb
sbb
and
xchg
mov
adc
push
in
pop
sahf
ja
adc
sub
pop
jl
push
pop
in
loope
iret
jne
nop
or
xor
test
sub
rorl
sbb
pushf
add
mov
push
mov
mov
mov
lock
sti
imul
outsl
xchg
pop
pop
mov
mov
cwtl
adc
pusha
test
pop
movsl
repnz
movsb
adc
cmp
or
push
xchg
inc
movsb
adcb
inc
test
inc
mov
xchg
jb
rolb
adc
call
subb
cwtl
lret
sbb
hlt
shlb
mov
rolb
mov
and
repnz
cmpsb
cvtdq2ps
mov
sbb
subl
pop
sbb
and
inc
adc
loope
add
sbb
stc
cmpl
xor
and
and
add
and
lcall
inc
sbb
cwtl
xor
xor
lea
pop
into
mov
mov
icebp
jnp
sbb
outsl
sbb
pop
shlb
sbb
pop
fildl
iret
jno
dec
xchg
test
xor
mov
push
sti
and
mov
sbb
jmp
xorl
add
add
sub
test
std
jg
cmp
add
pop
dec
mov
nop
mov
xor
cmpsb
jae
add
ret
inc
cltd
xor
mov
push
add
or
cmpsb
dec
pop
add
rcrl
push
addb
inc
sub
mov
arpl
add
push
mov
inc
arpl
mov
xor
push
jmp
scas
lea
dec
push
add
cmpsl
push
test
cwtl
sub
push
mov
sbb
das
sbb
repz
mov
xlat
mov
mov
inc
pop
add
dec
sbb
call
push
jae
nop
dec
in
mov
out
scas
mov
add
or
rolb
fmuls
lret
in
dec
cltd
test
sub
sub
pop
inc
scas
cmp
cmp
jb
test
test
popa
add
xor
xor
mov
xor
negb
icebp
inc
incl
inc
push
jl
pop
movsb
cli
and
add
or
mov
jl
lahf
cwtl
sub
and
fadds
xchg
loope
dec
jno
sbb
jle
ds
idiv
adc
rclb
dec
dec
dec
stos
xor
inc
xchg
xor
xor
das
xchg
idivb
mov
adc
jl
fsubl
mov
xlat
dec
push
pop
into
or
sbb
jmp
pop
loope
es
inc
inc
jnp
cwtl
cmp
jmp
pop
ret
clc
daa
push
insb
test
pop
and
mov
cli
sbb
roll
and
js
mov
lret
xchg
xchg
pop
cmpsl
hlt
test
sti
scas
rolb
mov
sbb
pop
bound
pop
pushl
adc
push
leave
add
pop
pop
jecxz
add
sbb
mov
popa
cs
jge
jle
pusha
or
pop
incl
adc
pushf
or
fcoms
movl
add
add
or
dec
insl
shll
adc
cmpsl
push
xor
adcl
iret
aas
push
pop
out
daa
xor
sub
mov
dec
enter
xchg
clc
cld
enter
movsl
stc
pop
loopne
loope
sahf
and
or
int
push
fldcw
add
pop
mov
fstpl
mov
pop
pop
push
lea
adc
pop
add
mov
sub
xchg
mov
dec
add
mov
pop
filds
or
push
jl
inc
pop
std
pop
pop
or
sub
pusha
mov
mov
add
lock
das
orl
and
mov
daa
or
xchg
fisubrl
mov
sub
inc
sub
or
xor
lret
mov
cs
mov
sub
dec
push
mov
xor
cmp
mov
outsl
xchg
add
dec
xor
mov
dec
push
fists
ds
add
scas
cmc
and
sbbb
add
xor
ss
inc
jp
xchg
fdivrl
fstl
cld
imull
sub
outsb
fwait
pop
call
xchg
adcb
shr
dec
adc
mov
pop
jo
push
divl
out
enter
in
pop
nop
inc
sbb
rorb
roll
jns
xor
push
decl
in
push
rclb
add
pop
rolb
call
mov
sbb
adc
jle
in
rclb
xor
je
adc
cmp
imul
pop
mov
add
xchg
movsb
les
mov
fdivrs
dec
mov
imul
mov
loop
stos
add
and
lea
cmp
pusha
push
jmp
mov
incb
or
pop
roll
adc
push
inc
cmp
cmc
add
dec
js
xchg
test
or
add
int3
and
add
dec
lds
je
sbb
cmp
add
inc
dec
and
je
arpl
mov
popa
sar
leave
in
xor
pop
xchg
adc
int3
push
subb
lods
pop
add
adc
pop
jnp
nop
push
lock
ds
aam
shlb
fcoms
insb
or
add
xchg
gs
in
rcrb
repnz
add
jnp
lcall
xchg
call
adc
pop
push
adc
jle
cmp
mov
test
mov
das
clc
mov
rolb
mov
mov
lock
test
jle
xor
jb
adc
xor
leave
mov
out
pop
push
xchg
fs
dec
pop
or
cmp
outsb
add
clc
popa
imul
sub
add
rolb
or
fsubs
outsb
xchg
and
addl
int3
shrb
sub
push
cld
pop
add
ljmp
cmpsb
hlt
pop
or
outsl
cmpb
sarl
jnp
push
jl
imul
call
inc
adc
lock
es
adc
bound
rcrb
sbb
ret
shll
jae
inc
cmpsl
push
rcrb
out
cs
aam
or
enter
pop
or
adc
data16
fcoms
and
dec
add
dec
add
pop
into
dec
mov
or
les
push
mov
jecxz
lods
movsb
inc
je
lods
rclb
loop
mov
inc
roll
sub
nop
sbb
popf
cltd
les
xor
sbb
cs
or
push
jl
mov
sbb
xorb
sub
movsb
mov
push
pusha
push
clc
mov
mov
inc
dec
xor
xchg
mov
add
iret
and
xor
adc
cld
out
aaa
cmc
pop
repnz
add
cmp
inc
pop
outsl
inc
sbb
jle
add
jmp
sub
xor
pusha
imul
xchg
movsl
outsl
pop
fsin
inc
aaa
ss
xlat
jle
fisttpll
dec
and
jno
inc
push
or
xchg
ret
xor
push
pusha
add
arpl
add
xchg
nop
sub
aaa
adc
in
mov
or
mov
test
cwtl
xor
popf
lea
jecxz
pop
adc
jge
fsubrs
test
push
loopne
movb
pop
sbb
out
add
add
movsl
mov
sub
es
inc
pusha
mov
dec
fcompl
xor
add
xchg
sbbb
jns
add
cld
cmc
add
add
push
sbb
psubq
insl
push
nop
inc
lahf
scas
hlt
add
jge
bound
je
cmp
mov
in
fimull
shll
hlt
jnp
add
fidivrs
xor
inc
sarl
xor
loopne
jne
add
mov
sub
dec
lods
push
jge
pop
sbb
out
adc
outsb
cld
add
and
addr16
in
push
cmc
enter
sahf
test
rclb
lret
mov
jecxz
cmpsb
cwtl
or
adc
mov
lea
push
jmp
sub
adc
out
add
sarb
ds
mov
push
jo
test
test
mov
and
sbb
xchg
cmpsl
and
clc
add
aas
mov
mov
add
push
rcrb
fildl
add
push
pop
outsl
or
xchg
andb
push
xchg
xchg
cmp
dec
xchg
pop
jp
std
mov
imull
rolb
push
lock
fmuls
pusha
stc
and
in
jbe
adc
and
testb
add
mov
cmp
and
mov
ja
add
pop
out
test
mov
lds
sbb
sub
int3
push
xchg
sbb
testb
jne
stos
andb
cmpb
lret
push
dec
cmp
insb
out
gs
dec
js
add
xor
jae
scas
inc
jge
mov
cmc
js
scas
add
cmpsb
mov
add
mov
cwtl
andb
add
clc
add
ljmp
mov
jg
add
or
mov
mov
nop
pop
and
int
jl
xor
sbb
call
je
push
push
adc
push
sbb
fcmove
sbb
and
pop
fmull
mov
pusha
das
cmpsl
sbb
add
lcall
inc
push
pop
mov
sarb
mov
rcll
add
sbb
popa
popf
out
add
xor
add
sbb
cwtl
loop
sub
mov
ret
pop
and
inc
aam
adc
adc
cmp
je
pushf
daa
sbbl
in
add
aam
sbb
sub
or
xor
jo
pop
popa
push
and
add
pop
shlb
xchg
loopne
inc
inc
in
fcomip
in
dec
popa
loop
xor
cmp
add
pop
test
pop
enter
mov
add
mov
daa
cmpsb
add
xchg
cmp
out
add
out
jmp
mov
and
jbe
mov
sub
mov
les
out
push
test
aad
inc
pop
nop
add
jb
fildll
mov
fimull
jne
add
aam
scas
sbb
add
or
add
inc
sbb
ljmp
pop
push
add
js
add
js
scas
dec
in
sahf
rdmsr
lea
addb
testb
add
aam
add
cmp
and
mov
jbe
test
and
sahf
insl
add
mov
clc
lds
jl
sub
jg
out
sbb
ds
inc
inc
mov
inc
pop
jp
mov
andl
leave
cmp
xor
call
filds
cwtl
mov
nop
dec
insb
sub
push
jl
test
sub
cwtl
lods
sub
in
testb
les
add
mov
test
add
mov
jg
pusha
lahf
jp
aas
int3
sub
adc
popa
mov
jmp
ja
cmp
jno
push
dec
iret
mov
repz
pop
add
dec
fdivr
push
and
dec
xchg
lahf
paddw
loopne
ficoms
popa
sbb
adc
rolb
pushf
xchg
mov
loope
dec
or
adc
pusha
adc
jg
pusha
xchg
jo
fcomip
cmc
add
fcoml
push
xor
mov
or
add
cmp
cmp
loope
cmp
add
popa
mov
test
push
out
aad
movsb
and
idivl
lock
cmp
xchg
pusha
pop
iret
jo
xorb
or
jns
push
inc
movsl
outsb
mov
inc
mov
imul
lea
sbb
cmc
pop
adc
int
sbb
sub
cmp
inc
inc
jle
jp
inc
mov
pop
sbb
mov
popf
stc
out
add
sbb
xchg
ss
sbb
jmp
dec
ja
xor
or
mov
dec
repnz
inc
add
pop
pop
inc
pop
xor
int3
out
add
jae
add
jno
lahf
jne
es
mov
push
sbb
and
sub
pusha
fdivs
clc
and
fisubl
fistpll
lea
add
icebp
jg
std
push
cld
sub
xchg
add
sbb
mov
push
xor
add
ret
iret
pop
lds
add
jg
outsl
aaa
and
mov
je
xchg
jne
enter
mov
fs
and
insl
xchg
jae
add
push
fldenv
push
bound
out
fwait
adc
mov
test
jne
dec
cmp
fcmove
addb
xor
xor
jae
add
stos
notl
add
cmp
in
add
pop
pop
testb
sub
add
sbb
mov
pusha
sar
ret
push
jl
fstl
insb
rcll
cmp
loop
stc
jmp
sbbb
popa
jnp
inc
add
sub
movsl
in
or
add
jle
and
movsl
mov
ja
jp
cmp
add
insb
add
xlat
lods
add
dec
pop
dec
mov
scas
fwait
rclb
int3
jecxz
nop
push
add
adc
pop
adc
outsl
fwait
inc
mov
mov
add
stos
jmp
pop
add
add
dec
pop
mov
ja
out
lret
mov
add
or
push
mov
inc
cmc
mov
dec
and
pop
les
pop
mov
add
xor
adc
cmp
movsb
jnp
insb
les
lret
jg
add
test
jb
inc
dec
pusha
loop
dec
insb
adc
out
sahf
fcoms
mov
xchg
push
je
adc
add
movsl
icebp
add
int3
sti
add
fildl
mov
inc
subb
fwait
jne
cmc
lcall
add
inc
fcmovnbe
movsl
sbbb
repnz
ret
mov
xor
and
or
push
or
pop
xchg
mov
subl
es
int3
shrb
add
or
jmp
orl
add
or
sub
lods
pushl
xor
pop
cld
cld
push
xor
scas
mov
pop
out
xorl
push
sub
inc
dec
test
mov
push
mov
mov
add
xor
inc
in
push
push
pop
inc
pop
add
cmp
pop
es
stc
mov
cmp
clts
inc
adc
adc
add
inc
sbb
cmp
les
jnp
repz
add
insb
pushf
cmp
xorl
sbb
mov
adc
insb
arpl
and
cwtl
sahf
lea
add
or
add
push
inc
xlat
lcall
adc
mov
jns
jne
add
pusha
sbb
cmp
push
inc
scas
clc
imul
push
mov
lcall
mov
aaa
cmp
inc
lret
jle
xlat
xorb
clc
test
lea
xchg
fstp
mov
inc
add
push
roll
mov
or
movsb
stos
femms
or
scas
daa
stos
loop
cli
xor
xor
sub
add
cmp
jle
pop
in
dec
push
popf
aaa
addr16
xor
jo
cmp
std
popa
lcall
mov
mov
add
adc
verr
movsb
mov
xchg
add
popf
xchg
push
clc
sbb
stos
clc
rclb
popa
add
mov
adc
orl
jb
xchg
hlt
add
popf
adc
aam
out
enter
fidivl
add
fs
fcomps
aaa
stos
sbb
adcb
outsl
jns
pop
mov
add
cltd
inc
push
leave
dec
mov
add
sub
addb
fsubl
imul
mov
cmp
mov
lret
add
pop
sub
xchg
insl
xchg
popa
call
aas
mov
fwait
mov
stc
pop
or
push
outsb
xorb
mov
add
stc
mov
ja
daa
andb
in
mov
pushf
push
faddl
test
push
or
pop
out
add
inc
inc
xor
ret
adc
mov
lods
mov
dec
or
shl
aas
or
jne
sarl
pop
popl
js
in
jg
loope
and
not
popl
or
hlt
dec
cmp
and
dec
inc
adc
push
inc
enter
mov
aas
rclb
popa
jbe
inc
push
in
sub
pusha
push
mov
pop
push
lock
sbb
sub
mov
jl
nop
and
imul
inc
into
cld
pusha
test
aam
std
addb
loopne
add
adc
rol
xchg
pop
aam
inc
pop
pop
scas
sbb
or
scas
dec
add
mov
fdivs
mov
loopne
push
testl
xor
add
xchg
add
xor
add
mov
sub
fs
int
daa
add
sti
into
insl
adc
insb
add
es
adc
xchg
cwtl
hlt
add
roll
pop
stos
and
push
dec
jbe
lret
out
inc
push
filds
inc
jne
pop
in
mov
nop
daa
jns
loopne
add
push
loopne
xor
les
cld
mov
outsb
sbb
movsl
push
inc
incb
mov
pop
add
push
sub
imul
sbb
jl
or
hlt
mov
mov
push
lds
lock
and
mov
mov
dec
add
addr16
pinsrw
int3
mov
fld
data16
sub
xor
sub
repz
addl
rorl
mov
jo
add
bound
add
ss
popa
pop
dec
in
cmpsl
add
cmp
nop
mov
push
add
pop
test
sub
add
mov
pop
or
data16
or
push
lods
pop
and
mov
and
xor
add
and
dec
add
mov
mov
add
and
test
clc
scas
shlb
ds
pushf
lcall
and
xchg
sarb
or
fldl
hlt
jbe
sahf
xor
movl
xor
stos
mov
mov
imul
rorl
add
sahf
data16
adc
add
movsb
jne
push
aaa
cs
jns
dec
push
rolb
cld
pop
jle
sbb
add
adc
sub
add
jg
roll
rcrl
dec
xor
in
mov
mov
mov
nop
pop
sti
mov
pop
movsl
outsb
cmp
repnz
outsl
dec
push
sbb
xchg
pop
xchg
jl
adc
iret
out
add
test
jb
pop
fisttps
cltd
add
add
jge
leave
in
jg
add
jae
outsb
shl
testb
repz
xchg
inc
loopne
sub
divb
pop
add
lea
fs
fimuls
fisubl
lds
add
fwait
rorb
push
in
inc
jp
mov
fldcw
les
cwtl
fs
mov
dec
in
pop
or
test
dec
xchg
fidivl
add
jl
add
leave
fdivl
imul
rcll
ja
ljmp
xor
std
daa
sub
fidivrl
mov
add
popf
push
and
sub
test
add
in
mov
add
mov
cmp
add
sub
clc
and
je
pop
gs
rolb
add
cmp
push
repnz
add
sub
add
sti
shlb
mov
push
sub
and
mov
arpl
mov
addb
loope
ret
je
sbb
add
rorb
and
mov
pop
dec
fdivl
jmp
and
adc
xor
inc
xchg
not
imul
add
mov
xchg
add
inc
or
pop
jno
cwtl
flds
ret
add
cmp
add
mov
cmpl
inc
pop
shl
jae
dec
lret
push
or
scas
sub
pop
into
sarb
fidivrl
adc
push
push
dec
add
cmc
je
jae
add
outsl
mov
popl
cmp
push
ss
adc
adc
enter
adc
in
or
xchg
add
sti
mov
add
cmp
insl
or
ret
push
mov
cwtl
mov
fbld
imull
cmpsl
sbb
jne
jecxz
outsl
push
adc
mov
jb
popl
lret
js
add
jmp
lds
add
cmp
pop
jge
xlat
inc
sub
or
das
in
add
lahf
ljmp
pop
sub
loopne
pushf
pop
pop
hlt
mov
or
adc
mov
add
in
cwtl
mov
push
add
loope
add
pop
and
add
stc
test
add
mov
pop
mov
call
pusha
aam
mov
imul
push
sarb
scas
add
mov
frstor
sbb
or
push
pop
xor
jg
aas
adc
and
dec
cmovp
and
std
sub
nop
add
push
out
out
or
add
fcomps
orl
push
sub
sub
mov
dec
jo
fs
flds
fdivrs
jne
sbb
add
imul
jl
sub
shlb
imull
xor
dec
adc
into
aaa
xor
cmp
mov
bound
or
ror
lea
pop
dec
imul
outsl
mov
pusha
arpl
icebp
iret
adc
lods
pop
adc
cld
repnz
leave
arpl
enter
nop
pusha
jnp,pn
mov
lea
xor
sbb
loopne
xor
std
sbb
clc
xchg
sbb
int3
test
push
cmc
mov
repnz
les
mov
mov
sbb
lcall
pop
and
sti
outsb
shl
or
ret
mov
stc
pop
push
xor
test
in
sub
mov
xor
push
cmp
repnz
data16
and
adc
or
iret
inc
cltd
in
fcomps
ds
dec
out
ret
or
add
cmpsl
repnz
or
inc
iret
sbb
mov
xchg
pop
aam
add
ds
xchg
push
insb
add
les
pop
add
xor
adc
xor
mov
cmpsb
rclb
jae
dec
sbb
inc
out
sub
aad
je
pop
test
adcb
push
push
jne
xchg
rclb
mov
test
lock
ret
mov
adc
lcall
fs
in
ja
push
add
fwait
push
inc
ss
add
pop
cmc
shlb
add
aad
out
xor
fwait
cli
mov
mov
jmp
push
jb
scas
and
cwtl
xor
mov
pop
add
push
xchg
sbb
jne
add
jns
leave
nop
pusha
mov
fsts
sub
push
push
lds
ficompl
mov
cmpsb
add
in
clc
hlt
insl
mov
pavgw
cmpsl
leave
sub
cmp
mov
cmp
mov
shll
adcb
sub
pop
add
lock
adc
es
push
jnp
add
rcll
sbb
sbb
mov
aad
int3
sahf
xchg
add
jle
roll
loop
and
inc
mov
jbe
add
sbb
dec
xor
int3
pusha
add
outsl
or
xchg
decb
jle
fisubl
xor
rorb
add
inc
jns
inc
push
jl
shrl
inc
insl
loopne
imul
into
fs
adc
ss
test
std
lea
cmp
jle
sub
cmpb
add
pop
into
int3
cld
sahf
insb
cmp
outsl
cld
add
sbb
pop
sbb
aaa
and
cmp
and
xor
enter
lret
insl
mov
and
inc
xor
mov
scas
xlat
pusha
iret
inc
out
adc
popf
xchg
sub
js
sbb
add
out
cmp
popa
add
ret
cmp
lds
xorl
cld
add
sub
bound
mov
xchg
pop
mov
xor
lds
dec
in
ret
and
sub
movsb
xchg
sbb
adc
pusha
pop
push
repz
xor
sbb
fildl
int3
add
dec
clc
mov
aas
pusha
inc
adc
les
jo
leave
adc
cmpsb
inc
sbb
push
adc
out
add
pop
movsl
mov
add
or
mov
jbe
sub
add
sahf
pusha
mov
lods
adc
pop
in
add
mov
aas
jmp
adc
dec
or
cwtl
add
sahf
test
notb
sub
push
enter
mov
add
ss
sub
sahf
adc
sub
dec
add
pop
push
scas
jnp
xor
cmp
cli
ja
dec
mov
cwtl
add
add
lcall
repz
fistpll
add
inc
sarb
enter
xor
repnz
add
or
iret
add
scas
and
test
sub
cmp
hlt
xor
iret
add
pushl
nop
ret
bound
sbb
rclb
mov
cmp
cltd
iret
adc
aaa
jnp
aam
es
jbe
add
mov
pusha
cwtl
sub
ret
test
add
test
imul
jnp
and
repnz
daa
push
fwait
ret
add
adc
in
mov
cs
cmp
add
push
mov
sbb
mov
sarb
and
or
jl
mov
lahf
and
mov
or
int3
mov
inc
sbb
add
pop
jmp
cmp
cmp
or
gs
test
xchg
in
mov
and
sub
push
enter
cld
imul
push
xlat
mov
sub
sti
in
pusha
decb
pushf
fisubrs
fistl
testl
pusha
dec
lock
and
add
mov
inc
bound
adc
in
lock
add
roll
das
loopne
add
jbe
lods
jge
cwtl
add
popa
cmc
lds
mov
mov
adc
add
rcrl
rolb
mov
orb
rclb
mov
jle
add
stc
pop
flds
les
lods
ja
enter
jno
shll
add
int
sbb
push
mov
movsl
stos
popa
test
mov
sahf
insb
xor
mov
xor
pop
shll
pop
add
inc
dec
xchg
xor
cmp
pop
sbb
aam
ror
add
inc
test
xchg
data16
std
les
rep
sub
insb
add
mov
inc
xor
cmc
sbb
mov
dec
mov
aas
sub
sti
jl
mov
testl
mov
mov
push
add
outsl
jmp
mov
xchg
add
std
cmpsl
pop
sbb
lock
ljmp
cmp
push
mov
orb
cmpsl
lea
clc
jnp
xchg
pop
add
push
sbb
adc
mov
pop
pop
loopne
mov
jae
lret
xor
out
push
movsl
imul
mov
shlb
addb
leave
sarl
push
cld
js
sbb
imul
scas
and
stc
test
add
gs
cmp
sbb
push
fiadds
test
add
dec
cld
mov
push
or
stos
pop
test
jl
fwait
cmovns
jo
push
enter
inc
or
add
inc
popf
xchg
clc
mov
imul
push
ret
nop
sbb
sub
data16
fistps
adc
lahf
xchg
into
cmp
sbb
add
add
daa
aaa
shll
or
and
xor
and
adc
test
xor
inc
add
xchg
movsl
jmp
inc
sub
push
jg
mov
test
sbbb
movsb
add
test
ljmp
faddl
mov
cmpsb
adc
add
jnp
jecxz
push
cmp
adc
pop
in
cltd
mov
or
xchg
and
aad
push
int
arpl
nop
add
or
push
sbb
add
cmc
cmpsl
xchg
arpl
mov
dec
mov
push
fmuls
pushf
cmpsl
nop
out
and
out
je
push
dec
jg
ret
add
adc
jnp
adc
scas
mov
add
mov
add
adc
push
add
jb
inc
inc
lret
mov
dec
repnz
shrb
and
jae
adc
jp
add
xchg
jmp
jl
jo
addr16
xchg
out
inc
add
jge
add
repnz
negl
outsb
add
scas
arpl
inc
out
iret
shll
daa
or
add
push
and
push
inc
and
cltd
mov
fists
push
aam
scas
lods
setno
loopne
pop
popa
inc
xchg
les
adc
pop
repz
les
push
cmpsl
dec
ret
addr16
pop
js
filds
cmp
daa
sub
or
sub
pop
xor
add
jo
mov
stc
int
or
lds
dec
in
jo
in
xor
and
nop
push
pop
dec
mov
les
and
fmulp
stos
add
popa
mov
xor
cmp
push
cmp
js
lock
ja
shlb
jg
or
clc
in
fimuls
xchg
adc
sbb
jnp
inc
outsb
sti
mov
pop
incl
add
nop
das
ds
lds
xchg
flds
fwait
sub
xchg
loopne
jno
in
cmc
mov
or
call
push
shrl
les
gs
dec
shlb
inc
xchg
stos
add
add
mov
xlat
jp
lahf
push
lret
or
add
xchg
popa
or
sbb
xor
pushf
in
je
cmp
xchg
cld
sub
add
cwtl
or
cs
pop
lods
add
mov
add
pushf
lret
movsl
inc
cmc
xchg
lds
rorb
mov
add
mov
push
add
jp
pusha
add
insl
mov
testb
fidivrl
sub
fnsave
cltd
rorl
test
add
xchg
mov
sbb
add
mov
lods
adc
add
ret
sbbl
add
xor
xor
shll
cmpsb
pop
decb
sbb
rorb
subl
ja
popf
jge
add
adc
mov
outsb
or
add
cmp
mov
pop
add
pop
loop
repz
or
pop
jle
rcrl
inc
inc
pusha
cmp
push
je
add
sahf
jmp
js
inc
fsubs
pusha
and
add
je
int3
mov
test
call
xchg
loopne
jl
movsb
test
dec
jbe
clc
sbbb
xor
sbb
clc
pop
mov
gs
mov
fcom
jo
xchg
add
jno
negb
add
push
outsl
ljmp
test
mov
sub
xchg
inc
enter
aas
stc
inc
xorb
outsb
pop
mov
cmp
outsl
scas
cmp
movl
ret
lret
add
lock
jp
add
sub
fisubs
or
xor
xlat
les
mov
in
xor
jo
mov
push
cmp
pop
incl
into
push
or
adc
bswap
sub
pop
sub
adc
mov
add
mov
xor
jl
add
or
jnp
rclb
insb
popf
call
sbb
xor
and
nop
pop
adc
jecxz
mov
verr
inc
mov
add
and
pop
aas
dec
call
cmp
sub
xchg
jb
add
mov
add
popl
ret
fsubl
add
cmp
or
in
adc
inc
mov
and
rcl
add
mov
cmp
dec
hlt
lret
js
add
arpl
cs
imul
pop
or
cmc
add
pop
cmp
add
scas
xchg
repz
imul
jb
pusha
cmp
mov
cmp
stos
cmp
sbb
or
add
or
jbe
bound
cmp
add
mov
movsb
push
xchg
sub
jnp
pop
incl
test
js
xor
lods
fstl
xor
jnp
imul
and
add
pop
cmpsb
cmp
ljmp
mov
shll
call
idivl
mov
sbb
xor
jle
lock
add
addr16
addb
mov
into
cmpsl
sbb
add
mov
lret
sbb
cmpl
mov
jle
lahf
dec
andl
movsl
add
mov
cld
mov
aam
mov
xlat
fisubrl
add
mov
fmulp
orl
pop
dec
xor
lock
jmp
pop
dec
cs
sub
test
pusha
clc
push
outsb
rclb
mov
inc
roll
mov
loope
fildll
ja
jle
xadd
divl
add
in
inc
mov
movb
loop
sbb
loop
arpl
dec
add
jge
pop
pop
in
adc
ret
adc
jl
imul
or
test
and
push
fcmovnbe
hlt
xchg
add
out
testl
filds
add
cmp
ret
add
nop
imull
imul
push
cmp
out
sti
jae
add
push
movb
sbb
mov
push
mov
mov
jp
cmp
sahf
clc
repnz
add
add
cld
sbb
lahf
aaa
aam
je
add
mov
aam
sti
xor
cmp
lcall
div
sub
fistps
xor
push
ljmp
push
mov
sbb
test
insb
add
stos
mov
rclb
fs
add
mov
in
pop
dec
shlb
xchg
xor
sti
mov
stc
mov
jl
aas
stos
insb
sbb
daa
aad
cmp
mov
mov
or
xor
call
push
pop
sub
mov
lds
js
cmc
or
sbb
jo
mov
roll
scas
inc
add
jnp
add
ret
popf
jne
lods
int
loop
add
outsl
mov
outsb
lcall
and
insl
push
rorb
call
mov
xchg
jae
dec
mov
add
cs
add
js
pop
add
xchg
push
add
fisttps
or
stos
enter
add
test
jo
mov
leave
fwait
addr16
jbe
stos
add
sub
into
ds
rcrb
xor
imul
popf
jbe
jo
xor
dec
and
loope
add
sbb
adc
loopne
stc
movsb
sub
xor
add
shrl
lahf
sbb
pusha
jo
lea
neg
push
icebp
hlt
and
or
and
xor
pop
and
mov
ljmp
fsts
xlat
fwait
inc
outsb
and
iret
enter
mov
add
inc
jge
sbb
nop
lahf
out
test
mov
lock
sbb
sbb
pop
add
lahf
incl
sub
cmp
pop
add
adcl
in
mov
push
clc
xor
xorb
jl
cwtl
or
cmpsl
and
push
popf
xor
shll
mov
fdivrp
loope
dec
inc
leave
xorl
jne
std
push
jns
aam
dec
movsl
add
and
lods
add
test
aas
imul
add
pop
mov
ret
loopne
adc
test
mov
add
dec
push
mov
das
pusha
loopne
movzwl
adc
vprotd
inc
enter
data16
jecxz
sbb
fsubr
inc
and
add
dec
mov
mov
mov
jle
add
mov
pusha
add
in
mov
arpl
stos
mov
test
xlat
sbb
sti
pop
cmp
sbb
xchg
add
add
adc
cmp
iret
and
sahf
and
sub
push
mov
xchg
aaa
rol
fnstcw
inc
mov
jecxz
sub
sub
add
xchg
add
lcall
inc
sarl
jg
faddl
cmp
inc
divb
sbb
js
jae
adc
or
xlat
cmp
mov
fucomi
and
push
pop
cmpsb
sahf
or
push
lock
and
mov
add
lret
xor
jle
mov
lea
pop
fnstcw
add
push
data16
pop
mov
ret
mov
xchg
ds
sarl
mov
cmpl
out
xchg
pop
pop
or
mov
aam
mov
cmp
xchg
dec
mov
and
sarl
adc
in
add
ret
cmc
in
mov
mov
clc
sub
adc
add
jo
cmpsb
or
repnz
pop
and
pop
imull
sbb
inc
jp
call
pop
test
push
mov
or
mov
sbbb
jle
ret
dec
inc
mov
mov
in
adc
jns
xor
xchg
dec
add
loopne
and
in
clc
jne
add
fiadds
dec
xchg
nop
pop
ficompl
and
pop
jecxz
mov
xchg
fsubl
dec
fbld
test
in
in
arpl
inc
test
and
sub
add
inc
push
cmp
pop
outsb
pop
mov
nop
mov
or
ss
dec
inc
or
xchg
inc
arpl
mov
or
fdivrs
mov
cmp
mov
jno
je
mov
cltd
repnz
lods
adc
out
inc
dec
pop
xor
jae
lea
jl
push
es
fcmovnb
popa
add
popf
xchg
xor
add
and
fisttpl
sbb
out
and
ljmp
and
pop
jne
cs
mov
adcl
andb
pop
add
cmpsl
sbb
add
push
jns
push
xchg
sbb
sahf
pop
sub
or
pop
add
mov
xchg
in
mov
jg
lret
cmp
pusha
adc
xor
sbb
jb
stos
dec
mov
dec
js
add
lret
xor
xor
mov
pop
insl
stos
iret
adc
shlb
push
add
xlat
sub
push
in
filds
inc
ljmp
xchg
test
pop
and
mov
dec
mov
adc
dec
sub
movb
pop
ja
loopne
xor
in
jno
aaa
and
subb
das
or
xor
mov
push
rolb
mov
call
in
mov
xchg
xor
pop
shlb
push
loopne
cmp
sub
inc
push
int3
add
cmpsl
dec
xchg
xor
add
pop
inc
jmp
mov
xor
sbb
or
fsubrl
adc
inc
xor
add
mov
cmp
adc
pop
movsb
dec
aaa
mov
mov
mov
repnz
jo
stos
ss
rolb
push
cmp
add
sub
testb
in
stos
adc
and
mov
xchg
loopne
and
loopne
enter
and
cmpsl
sbb
lock
lock
cmp
mov
cmc
in
lock
mov
sub
orl
jbe
adc
andb
dec
pusha
lea
jl
notb
outsl
in
pop
rorl
and
push
enter
roll
stos
or
lahf
xchg
out
es
inc
ds
mov
mov
into
jmp
sub
or
lcall
cmp
in
xor
add
cmp
xchg
lcall
inc
les
xor
add
push
xor
dec
shl
clc
mov
inc
pusha
ficompl
add
out
jnp
add
sub
fs
out
scas
pop
dec
adc
fimuls
popf
xor
pop
sti
and
nop
push
pop
enter
xchg
jo
push
ret
fnstsw
dec
cli
pop
dec
add
in
repnz
or
popa
fsub
inc
xchg
es
cmp
or
test
inc
sbb
add
xchg
outsb
and
add
xlat
sub
repz
jg
mov
cmp
insb
add
ret
cli
sbb
cld
mov
in
jg
mov
aaa
add
mov
mov
cmp
je
jle
pop
and
add
push
test
jae
adc
and
sbb
pusha
push
enter
push
pop
scas
enter
add
cmp
add
ss
push
mov
lcall
js
sub
xchg
lods
cmpb
xor
cmovno
cmp
lahf
test
outsb
loope
or
rcll
enter
xchg
out
adc
cwtl
pusha
dec
cmp
push
inc
gs
xor
sub
test
sahf
inc
rorl
adc
and
fcoml
mov
xchg
add
jge
xchg
aas
call
dec
mov
push
mov
mov
inc
xchg
add
mov
mov
jns
les
push
or
xlat
in
imulb
push
fistl
push
sbb
call
jg
pusha
push
mov
or
mov
mov
leave
and
es
setb
ret
cmpsl
ret
stos
in
aam
sarb
add
outsl
lahf
adc
loopne
es
inc
sub
out
cltd
dec
xor
rolb
push
fsubrl
and
pop
xchg
jbe
pop
in
push
add
lds
inc
dec
je
inc
fmul
shlb
cltd
sbb
pusha
pop
push
mov
rclb
lock
mov
shlb
mov
inc
fs
push
cs
adc
sarb
movsb
xlat
and
shrb
mov
jg
nop
orl
pushf
pusha
xchg
call
push
fs
cld
adc
push
mov
in
add
dec
in
pop
xchg
rorb
add
loope
jl
push
insb
push
loopne
daa
cmp
xor
push
inc
lock
leave
repz
mov
movb
add
or
and
or
inc
mov
clc
xor
add
in
or
dec
popa
es
pop
mov
adcb
mov
std
push
cwtl
cmc
push
sub
mov
fisubs
notl
pop
push
rolb
movsl
jecxz
pop
rep
dec
pushf
add
xchg
mov
xor
sbb
pop
or
cmp
and
iret
add
jae
dec
jmp
loope
add
stos
in
cmp
xchg
rolb
inc
pop
fidivrs
icebp
and
sbb
divb
add
cwtl
mov
addr16
adc
aam
jae
out
les
ja
pop
xlat
push
rol
xchg
pop
mov
sbb
cmpsl
add
popf
daa
add
jecxz
cli
inc
cld
mov
cld
or
dec
inc
test
add
loopne
dec
inc
test
add
sbb
and
pop
sbb
mov
xchg
call
aam
adc
ds
pop
lock
addr16
sti
lock
aaa
cmc
jbe
repnz
xlat
mov
add
sbb
dec
ret
loopne
ja
test
xchg
push
cmp
out
in
gs
inc
jb
add
push
lcall
add
ja
test
loopne
loope
xchg
insb
inc
imul
cmp
and
int3
xor
test
jg
add
aas
rcl
lds
pop
call
lods
inc
comiss
fs
jp
and
dec
sub
jno
xchg
dec
imul
movsl
in
add
inc
fimuls
aas
iret
insl
hlt
jmp
xchg
sub
enter
add
add
or
dec
hlt
add
sbb
cmp
lock
je
popa
and
stos
mov
mov
jmp
add
pop
outsl
fs
mov
in
or
shrb
aaa
mov
cmp
or
mov
fisubs
loopne
shlb
add
sub
cs
inc
movsl
adc
mov
mov
je
mov
mov
dec
jo
add
cmp
negl
icebp
ss
cmpsb
aaa
ret
bound
loope
mov
roll
daa
push
nop
call
test
mov
add
lea
xor
enter
sbb
xchg
adc
jb
add
ret
pop
in
dec
mov
out
roll
leave
pop
add
or
xor
decl
je
cld
xlat
sub
jbe
sbb
dec
xor
mov
add
push
sti
cmp
outsl
jle
push
es
add
pop
xchg
dec
test
fdiv
and
push
cmpsl
add
add
mov
jge
mov
clc
sahf
nop
xor
fwait
enter
sbb
sub
ss
inc
cmp
insl
xlat
dec
std
and
jno
mov
ja
inc
or
stos
mov
pop
fs
cmp
andb
inc
fiaddl
mov
gs
or
pop
loopne
inc
fadds
mov
fdiv
or
xchg
lods
pop
sbb
or
test
and
daa
sbb
pop
mov
push
mov
out
ds
je
push
outsl
cwtl
sti
pop
adc
and
int3
scas
dec
addr16
pop
add
cmpsb
push
sbb
sub
add
cmpsl
fdivl
and
sbb
xchg
mov
dec
sub
and
inc
rcrl
adc
or
lcall
mov
or
mov
aad
add
add
mov
mov
jl
push
test
xchg
mov
inc
pop
test
mov
jg
add
shl
pop
dec
mov
scas
or
jle
xchg
test
into
mov
pusha
add
addl
xlat
pop
ja
repnz
add
mov
inc
icebp
lahf
leave
cmp
stos
lds
xchg
add
fdivrs
mov
adc
sbb
cmpsl
xor
mov
pop
or
clc
inc
and
ss
cmp
mov
fildll
fs
add
pop
enter
ficoms
js
ja
and
inc
pop
inc
cmpsl
lahf
insb
add
sbb
repnz
mov
out
sbb
pop
add
cmp
add
mov
jne
push
dec
xchg
and
xor
fs
mov
add
mov
push
jge
xchg
xlat
or
add
add
jnp
or
mov
jne
xchg
mov
mov
and
lods
lret
dec
rcrb
into
in
sub
add
aaa
or
mov
insl
pushf
add
mov
stos
sbb
pop
or
sub
enter
mov
sbb
loopne
sub
mov
add
lock
jge
daa
adc
lcall
arpl
enter
push
test
push
dec
rol
cmp
jmp
adc
push
mov
xchg
rcll
add
xchg
arpl
out
xor
sbb
sbbb
ret
outsl
out
sbbl
mov
insb
mov
xchg
inc
sbb
add
pop
aaa
mov
je
pop
cmp
push
lods
popa
jns
pop
sbb
mov
inc
test
cwtl
pushf
cld
inc
pushw
mov
or
xor
or
cmp
cmp
mov
and
je
or
jbe
xchg
mov
into
cmc
int
pop
push
mov
shlb
add
std
andl
dec
je
mov
adc
sbb
rcr
pop
pop
movsb
adc
sub
addb
pop
test
adc
dec
pop
lods
mov
add
adc
pushf
or
pop
sub
jno
pushf
inc
js
xor
out
mov
pop
cmpsl
lock
sbb
pop
add
out
xchg
push
jne
ss
cmpsl
add
mov
nop
adc
add
cmc
jp
fs
pusha
ja
jbe
jle
dec
and
iret
movsl
sub
mov
xorl
sub
xchg
je
filds
outsb
inc
sbb
or
nop
add
jnp
or
fmuls
cld
sub
xchg
int3
sub
cmp
pop
adc
push
sub
jb
js
pop
fstpt
adc
adc
add
fidivl
pop
xchg
ds
add
adc
pop
test
iret
inc
dec
out
sub
arpl
push
jne
pop
xorb
and
inc
cmp
sbbb
dec
popf
push
icebp
mov
enter
mov
jbe
out
lods
pop
fs
sbb
imul
mov
dec
push
push
sub
clc
inc
adcb
shll
ret
pop
push
pop
test
xchg
push
lods
and
inc
lahf
cmc
add
cmpsl
fnstcw
rorl
pop
bound
pop
ret
shl
mov
lock
pop
mov
shrl
fnstenv
addr16
fld
nop
filds
xchg
ficoml
mov
or
fsubrl
cs
push
xchg
mov
sub
test
adc
out
fdivrs
movl
enter
push
in
movsb
pop
push
nop
jg
sub
sub
mov
fiadds
jns
scas
stos
cs
shr
inc
outsb
and
mov
sbb
xor
sub
dec
dec
mov
cwtl
mov
mov
roll
add
inc
xchg
fnstsw
pushf
or
pop
inc
push
fists
push
pop
clc
jns
xchg
in
dec
shr
inc
or
test
rolb
cli
into
decl
cmpsb
pop
fildll
cld
roll
adc
pop
fistl
dec
add
in
add
inc
mov
pop
adc
add
jno
loop
dec
mov
jp
and
dec
jnp
mov
rclb
insb
lea
mov
fidivrl
adc
mov
mov
and
ja
push
add
push
aaa
cmpsb
cmp
mov
dec
fsts
inc
flds
cltd
call
in
loope
dec
cmp
fldt
arpl
pop
add
sub
mov
and
or
arpl
cmp
cmp
or
cmpsb
fcomps
cwtl
jnp
inc
sbb
inc
mov
add
pushf
push
push
gs
push
lahf
nop
roll
pop
inc
dec
das
mov
mov
je
add
mov
mov
xchg
mov
mov
fs
dec
sub
xorb
ror
mov
ss
lret
jne
push
xor
push
cmpsb
pusha
bound
xchg
mov
pushf
sub
or
add
mov
mov
or
cmp
sbbb
loope
fisttps
fnstsw
adc
fadds
stos
call
orb
jl
pop
push
pop
adc
leave
cmp
hlt
cmp
and
or
add
stc
fdivrs
daa
jno
adc
push
int3
jl
stos
add
mov
sub
push
div
mov
mov
popf
dec
mov
fcoml
add
mul
adc
add
mov
xor
dec
cmp
pop
stc
js
test
shr
sbb
pop
jg
call
xor
stos
hlt
mov
mov
cmp
xchg
pop
inc
test
in
or
ret
push
lods
or
out
outsl
xchg
push
outsb
dec
rcll
movsb
add
xchg
pop
in
mov
push
scas
cld
jecxz
add
ret
or
out
hlt
incb
popf
test
nop
add
out
scas
cmp
mov
icebp
jo
dec
js
daa
jne
shl
adc
mov
mov
push
cmp
jb
lods
add
lds
addr16
pusha
out
dec
cs
pop
inc
mov
divb
jle
add
mov
inc
cmp
and
mov
inc
pop
add
pop
adc
dec
xchg
enter
mov
add
cli
and
and
sbb
jmp
add
mov
loope
seta
xor
xor
test
push
nop
jg
ret
inc
out
inc
xchg
add
repz
dec
icebp
insl
popa
or
mov
xchg
dec
aaa
add
sub
cmp
sbb
loopne
xor
xor
fcoms
mov
add
stos
inc
mov
push
jge
and
out
mov
cmp
movsb
add
test
mov
mov
mov
aaa
and
inc
test
out
push
add
xchg
imul
push
dec
cmc
ret
push
gs
dec
pop
je
ret
and
push
mov
imul
sbb
cmp
les
add
test
add
subl
ret
jae
add
jge
xchg
js
imul
adc
mov
dec
dec
repnz
add
add
daa
loope
dec
fisttpll
pop
inc
or
cli
lcall
xchg
fisubrl
jno
dec
shrb
sbb
enter
add
cld
sbb
or
cmp
dec
and
popf
adc
gs
jae
xlat
sbb
je
push
jg
or
out
and
sbb
loope
scas
add
cltd
subl
sbb
or
test
in
fdivr
jno
push
push
fsubs
into
cltd
in
insl
jns
or
and
ja
add
push
mull
mov
xchg
jecxz
inc
inc
cmpb
push
mov
daa
rcrb
xchg
jg
mov
add
and
mov
push
xor
lret
xchg
add
push
lods
adc
or
clc
sub
shlb
jge
inc
rclb
std
or
sarl
cmp
sbb
cld
dec
mov
cmp
test
inc
movsl
cmp
xchg
sbbb
fbstp
add
jnp
rolb
xchg
dec
sbb
sub
rclb
or
sub
data16
mov
xchg
xorb
jb
xchg
add
add
and
mov
sbb
pop
add
mov
push
icebp
mov
mov
lods
push
sbb
cmp
mov
mov
pop
movsl
fidivs
pop
addr16
and
push
orl
push
sarl
cltd
or
call
jl
inc
shlb
add
pop
ret
into
loopne
dec
or
xor
nop
cmp
add
add
sub
push
mov
fs
mov
test
add
inc
pop
push
cwtl
int3
lods
pop
aaa
push
push
add
inc
popa
daa
add
les
mov
test
add
sbb
add
ret
mov
dec
add
xchg
lea
orb
enter
push
insl
loopne
mov
leave
xor
sbb
and
fimuls
mov
outsl
mov
insb
ss
add
dec
sub
adc
iret
cltd
add
aaa
test
add
ja
xor
loop
popf
test
add
insb
leave
popl
cmpsb
pushf
daa
lods
mov
xchg
jge
testb
cwtl
in
inc
pop
jo
add
dec
les
loop
cmp
sub
pop
add
je
ret
and
rolb
jae
sti
sub
adc
incb
push
test
out
ds
mov
add
dec
out
fucomp
sbb
hlt
inc
pop
sub
mov
dec
push
and
pop
icebp
cmp
sbb
xor
pop
cld
push
stos
cmp
and
cmp
repz
out
sbb
pop
ja
mov
adc
les
xor
test
rolb
push
and
dec
jp
add
mov
cmpsl
pusha
les
mov
add
out
clc
pop
cld
xchg
ljmp
jns
mov
fstps
and
mov
sarl
pop
inc
jge
subl
test
pop
fcomp
mov
cmp
xchg
cmp
xchg
sub
sbb
enter
cwtl
xor
mov
in
lock
jmp
mov
add
and
ds
and
mov
mov
lock
mov
movsb
jnp
sub
pop
inc
push
lock
push
jb
add
outsl
std
xchg
fistl
pop
movb
mov
rol
push
jmp
or
xchg
inc
adcb
stc
cmp
add
sub
pusha
out
inc
idivl
andb
cltd
sbb
sahf
sub
lret
or
xchg
xlat
in
add
bound
push
add
ret
and
add
add
sbb
pop
mov
hlt
xor
inc
pop
leave
inc
arpl
pop
subl
push
js
cld
xchg
movsb
inc
push
fs
inc
nop
add
js
add
mov
sbb
dec
push
into
xor
lock
add
bound
mov
popf
push
dec
xchg
cmp
pop
adc
sahf
xor
mov
jnp
clc
jnp
dec
nop
inc
insb
push
js
leave
in
xchg
pop
subb
lods
incb
les
or
pop
out
daa
cmp
call
add
and
inc
mov
js
mov
fcoms
dec
jae
out
in
into
inc
and
jb
lea
fcoms
hlt
xchg
mov
mov
addr16
and
pop
or
lds
jg
sub
or
add
dec
iret
xor
adcl
icebp
test
xchg
push
adcb
lock
and
popa
mov
lods
mov
add
notl
in
test
push
cmp
ja
sbb
fistpll
xor
cwtl
adc
aam
imul
out
fwait
in
add
jle
and
jae
lock
xor
testb
adc
mov
mov
add
push
jae
lret
rorl
mov
mov
and
js
out
dec
add
sub
fs
dec
out
ja
mov
xor
add
cmp
xchg
adc
scas
adc
mov
nop
push
ss
xchg
je
or
rcl
ret
pop
add
popa
and
pop
cmpps
add
inc
out
shrb
mov
xchg
add
ret
dec
clc
xchg
xor
into
inc
insb
cwtl
pop
fisubl
inc
push
adcb
add
mov
cmp
mov
mov
and
xchg
cmp
movsl
int
pop
jae
jbe
mov
loopne
push
dec
mov
js
xchg
imul
xorl
sbb
or
inc
xchg
pop
push
dec
mov
sub
xor
adc
jo
das
ret
xor
sbb
and
test
imul
flds
adc
xchg
popf
mov
xchg
jo
test
dec
adc
loopne
inc
lods
add
pop
sub
jmp
inc
jg
fadd
add
fisubl
mov
rolb
jp
jns
ret
xchg
jecxz
cmp
add
jecxz
sbb
cmp
insb
inc
iret
pop
lock
cld
jnp
roll
aaa
movl
pop
push
cmp
jae
jnp
inc
dec
fidivrl
hlt
lret
push
sbb
adc
les
cmpsb
cmp
pop
scas
jae
sbb
insb
cmpsl
mov
xchg
sahf
xchg
enter
pop
jno
cmp
inc
xchg
inc
cmp
push
mov
pusha
int
inc
adc
sarb
rolb
jp
lds
mov
mov
xchg
xchg
loop
pop
dec
fwait
and
mov
loop
mov
mov
movsb
outsl
sbb
add
aam
ret
fisubs
cmc
sub
clc
test
sarl
push
fwait
addb
xor
push
in
dec
dec
nop
xor
sbbb
call
mov
pop
test
push
jo
cmp
inc
pushf
test
xchg
add
pop
and
push
xor
data16
dec
push
mov
xchg
imul
xor
pop
addr16
push
inc
cmp
push
push
inc
jne
pushf
fadds
rclb
out
inc
xchg
mov
cs
int3
ss
pop
jne
aas
je
add
sub
mov
sub
lret
mov
push
mov
test
xlat
cmp
ja
pop
and
cmpl
gs
push
lcall
push
add
add
inc
leave
lock
mov
lock
sub
pushf
daa
popa
mov
push
add
mov
stos
or
hlt
pusha
ficomps
pop
adc
bnd
lock
shrl
ja
loopne
jp
shrl
jg
add
sub
push
cli
shlb
cmp
mov
mov
loopne
mov
xchg
out
or
out
icebp
adc
daa
loopne
mov
add
pop
add
mov
adc
push
mov
je
cld
add
pop
fimull
pop
test
xorb
fs
cmpb
push
xchg
mov
mov
pop
movsb
fs
add
je
inc
inc
push
mov
loop
sub
cmp
and
mov
fcomps
sarb
sbb
pop
add
fdiv
inc
xor
adc
sarb
mov
pop
dec
nop
or
xchg
je
push
pusha
sub
xor
movsb
or
push
inc
pop
stos
adc
jl
pop
adc
lock
adc
inc
xor
bound
dec
pop
pop
cld
inc
cmp
xchg
sub
push
fsubr
popf
sbb
jno
add
punpckldq
and
repnz
mov
mov
adc
shrb
cwtl
mov
mov
adc
mov
and
add
jge
cs
sbb
inc
jmp
add
xchg
in
or
sub
and
dec
mov
rcrl
pop
dec
push
scas
xor
ficompl
jb
lods
jg
mov
pop
dec
fdivr
addb
jns
sbbl
test
test
icebp
loope
enter
xchg
add
jne
add
repz
and
dec
rorl
movsb
dec
repnz
dec
js
clc
dec
mov
add
pusha
enter
lods
js
sbb
pop
and
xor
adc
popa
add
adc
call
stc
sub
cld
inc
hlt
add
xor
jo
cli
je
out
xchg
pop
pop
fwait
repz
repz
or
mov
ret
cmpb
js
xchg
test
inc
sbb
in
mov
je
xchg
pop
pushf
mov
clc
cwtl
insb
sbb
stos
inc
cwtl
clc
and
mov
and
data16
les
mov
push
inc
mov
iret
push
push
sbb
push
xchg
test
dec
adc
adc
mov
xor
out
mov
test
or
fld
in
and
cmp
jmp
les
add
orb
sbb
test
add
xchg
jns
push
imul
sub
push
in
jnp
cmpsb
shl
xchg
out
insb
inc
add
jb,pt
je
pusha
cmp
int3
xchg
scas
xor
mov
repnz
outsl
loop
cwtl
sub
jecxz
repz
pop
in
sbb
add
pusha
bound
adc
ds
xlat
push
cmp
sub
fsubl
ljmp
and
mov
lock
orb
lea
sbb
or
add
sbb
in
mul
test
dec
subl
mov
jbe
lea
add
mov
pop
faddl
enter
sbb
test
adc
cmp
test
sub
push
pop
int
adc
enter
scas
fadd
ljmp
dec
pushf
in
sbb
cli
jmp
add
pop
xchg
je
xor
and
cltd
pushf
sbb
cwtl
jg
fcmovnbe
or
pop
into
mov
mov
scas
testb
outsl
hlt
cwtl
pop
iret
scas
push
push
xchg
fsubl
sub
inc
rorb
xor
js
cmp
roll
lods
dec
sarl
pop
or
insl
addl
loopne
je
xchg
mov
inc
int3
out
adc
sarb
dec
add
popa
cmp
imul
fisttpl
xchg
and
mov
push
sub
int3
and
jecxz
adc
test
add
dec
daa
cmp
fmuls
mov
outsb
jnp
or
sub
and
nop
or
lds
cld
jno
add
pop
test
adc
and
sbb
mov
mov
push
js
mov
clc
or
scas
roll
xor
stos
add
dec
pop
sti
xchg
aaa
aad
xor
test
iret
adc
fistl
push
dec
popl
enter
cmp
mov
cltd
or
jecxz
sbb
loopne
mov
and
negb
and
imul
jne
pop
adc
xchg
shll
and
fcomps
xchg
jle
xchg
jno
mov
push
or
rclb
cmp
lods
dec
add
enter
cmp
add
daa
dec
flds
mov
gs
test
sbb
ljmp
push
or
add
test
hlt
dec
ret
dec
mov
sbb
je
test
mov
mov
jns
mov
ds
pushf
sahf
sbb
pop
call
jbe
pop
shlb
xor
cli
test
ret
push
pop
test
and
sbb
jmp
stc
out
fstpt
fisttps
mov
mov
add
loop
nop
scas
pop
add
dec
adc
cmpl
rclb
push
add
loopne
mov
dec
add
addb
andb
mov
xchg
sbb
add
push
mov
push
dec
repz
add
dec
adc
add
lret
or
adc
loopne
add
or
jle
dec
mov
and
and
rol
inc
mov
add
les
pop
lock
push
sti
sbb
push
or
sub
and
xchg
bound
icebp
sbb
rclb
pop
inc
loopne
jmp
pop
dec
insb
cwtl
lea
test
add
cmp
xlat
sbb
je
add
int
pop
push
jmp
shl
jp
out
mov
outsl
ds
movl
mov
or
aas
dec
lcall
mov
add
int
mov
pop
jmp
daa
cwtl
add
mov
or
inc
add
arpl
cltd
dec
add
mov
push
jp
mov
mov
adc
xchg
adc
loopne
and
clc
pushl
or
dec
std
cmp
add
mov
das
adcb
data16
stos
ja
stos
and
mov
mov
sub
filds
push
mov
jl
pop
adc
fiaddl
sbb
mov
xor
push
ss
mov
push
or
dec
out
sbb
add
mov
or
push
inc
cmp
pusha
or
add
jl
ret
mov
aaa
aam
push
rorl
in
xchg
add
add
call
aaa
popf
dec
sbb
sahf
mov
lods
or
jle
sbb
setns
subb
dec
gs
add
and
mov
es
rcl
inc
or
call
sbb
mov
into
xchg
add
and
mov
shll
lea
add
aaa
add
and
rol
ret
mov
das
xchg
lcall
ds
jae
xchg
data16
jb
add
fs
or
and
add
inc
and
je
out
ficompl
xchg
pop
pop
test
push
jnp
mov
dec
sub
and
xor
adc
insb
xchg
test
mov
cmp
pusha
add
and
in
loope
inc
or
dec
sub
jne
mov
add
or
inc
jo
hlt
sbb
out
jle
pop
sub
inc
mov
add
push
mov
inc
bound
mov
imul
outsl
scas
pop
ss
scas
or
pop
subb
aaa
or
and
test
bnd
pusha
leave
addr16
pop
aad
mov
adc
sbbb
xchg
je
add
xor
addb
add
hlt
mov
jnp
mov
xchg
sahf
cmpsl
xchg
sbb
loopne
in
sbb
mov
popa
data16
cmp
icebp
outsl
inc
xchg
in
mov
jmp
add
inc
mov
int3
dec
jbe
sub
and
xchg
shrb
stc
test
ficomps
add
jbe
or
dec
ret
lock
and
pop
repz
cltd
dec
fmul
push
add
dec
inc
addb
add
or
xor
jecxz
and
pop
jae
cmp
es
fmuls
xor
inc
jecxz
or
mov
inc
dec
xchg
add
data16
mov
dec
xchg
sbb
cs
xchg
jecxz
js
mov
call
loop
sub
inc
insb
inc
jmp
xor
fisubrs
and
insb
pusha
rcrb
adc
push
push
mov
pop
mov
add
xchg
scas
jl
inc
orl
mov
test
frstor
add
int3
icebp
jns
push
mov
test
adc
sub
inc
pusha
mov
dec
adc
pop
test
popa
daa
xchg
mov
inc
pop
rorb
mov
mov
push
add
xor
sbb
and
sub
enter
pop
pop
add
pushf
ss
add
or
jg
cmp
add
fdivs
ret
push
sub
orb
push
cwtl
jbe
sub
xor
pushf
cmpsb
adcb
push
popf
jmp
cmp
test
and
fdivrs
jmp
or
movsl
mov
pop
sub
add
sub
jecxz
mov
ret
insl
push
out
fistl
mov
cld
jb
pusha
hlt
add
jg
add
mov
cmp
sub
cld
movsl
inc
cwtl
push
sbb
stos
daa
es
add
sbb
mov
dec
xchg
out
clc
mov
adc
adc
jns
or
ret
and
addb
jecxz
test
sbb
lods
mov
mov
lds
cmc
dec
imul
sbbb
and
jns
addr16
sub
dec
and
cmpsl
add
ficoms
movsb
mov
or
mov
lods
add
mov
sub
sarb
sub
push
pop
or
je
sti
lahf
in
xchg
pusha
dec
push
sub
mov
pushf
ja
cs
mov
loopne
and
pop
pop
jnp
ds
stos
sbb
das
or
push
insb
pop
push
cmp
test
inc
addb
inc
add
cmc
sbbl
nop
cltd
add
cmp
xchg
add
vshufpd
test
add
jo
test
in
sti
add
std
sbb
in
mov
add
loop
or
cmpsl
jno
add
pop
movsl
push
adc
rolb
ja
xchg
and
add
mov
shrl
jmp
add
sbb
out
les
add
rcll
add
jae
fldcw
xor
popa
jo
lahf
in
add
mov
movsb
jmp
bound
and
aad
mov
push
add
xlat
cwtl
sbb
jl
add
mov
inc
sbb
pop
cwtl
xor
loope
xor
push
mov
push
int3
and
int
sbb
xor
sbb
je
jg
cwtl
cmp
mov
add
out
out
cmp
dec
jne
mov
mov
mov
repz
test
lcall
shr
test
in
lea
lock
rcl
jno
add
pop
out
in
daa
test
pop
and
pop
je
int
aas
mov
add
sbb
xor
call
hlt
lds
fiadds
mov
add
and
sub
mov
cmp
les
fdivrl
loope
jecxz
adc
sbb
push
into
popa
lock
in
mov
jbe
call
in
jg
inc
outsl
movsb
aas
sub
test
popf
cmc
dec
push
mov
sahf
add
or
cmp
cmp
ljmp
mov
sub
mov
dec
js,pt
mov
popa
scas
add
daa
ret
popa
xor
cwtl
add
sbb
inc
sti
outsl
movsb
cmp
add
or
push
pop
adc
shlb
pop
sti
add
mov
out
push
xchg
mov
mov
lcall
jbe
push
divl
inc
or
jge
call
or
mov
sub
cwtl
jl
daa
xchg
or
lock
xchg
pop
add
or
subl
cmpb
add
movsl
xchg
sahf
sub
cltd
inc
sub
push
sbb
paddb
outsl
rcrb
popa
cmp
add
pushf
call
fisubrl
ds
les
push
mov
flds
push
iret
xchg
add
mov
dec
aam
mov
add
adc
cmp
sbb
inc
xchg
enter
fcoms
adc
jae
call
je
jne
inc
push
and
mov
add
jl
mov
int
push
pushf
add
pop
cmp
loopne
sti
in
or
lods
test
add
push
addl
inc
in
xor
or
pop
imul
mov
jb
icebp
push
arpl
xchg
add
fcomps
sub
push
inc
inc
mov
stos
mov
cmp
test
fistps
shlb
popf
dec
sahf
inc
cwtl
mov
mov
mov
or
stc
cs
aas
inc
fs
or
mov
sub
sub
or
clc
pop
inc
add
bound
inc
sbb
sbb
data16
cld
sub
jae
hlt
lods
mov
rorb
sub
insb
nop
lahf
pop
test
sbb
inc
pop
push
into
iret
out
and
nop
loopne
inc
in
mov
xchg
out
xor
out
mov
push
dec
in
mov
push
push
or
adc
ljmp
add
test
scas
adc
xchg
imul
or
mov
xchg
ret
nop
mov
lds
pop
cmp
dec
insb
pusha
push
xchg
aaa
pusha
pusha
sbb
jecxz
dec
inc
aam
hlt
mov
and
imul
incb
nop
adc
pop
pop
add
ss
sub
dec
cmp
stos
mov
dec
mov
push
fsubrs
jg
xor
rcrb
popl
xchg
jmp
add
je
push
and
imul
cs
adc
pop
and
pusha
or
xor
add
dec
mov
push
xor
test
dec
in
push
add
cmp
stos
push
imul
jl
lods
cmp
jno
sub
loope
icebp
inc
test
adc
or
imul
fs
add
cwtl
orb
push
lret
cmp
outsl
mov
add
iret
xor
enter
inc
mov
into
mov
aaa
mov
and
add
xchg
sub
pop
jae
and
push
pop
jecxz
mov
and
mov
xor
scas
push
cmc
out
pusha
mov
nop
push
pop
ret
mov
xor
lds
and
shrb
neg
clc
stos
lret
mov
jo
in
inc
cmp
std
adc
leave
fildl
int
pop
push
pusha
add
hlt
shrb
add
jecxz
xchg
xlat
push
cwtl
aam
loopne
leave
pop
adc
xchg
repnz
bound
inc
add
push
mov
jecxz
sbb
je
cs
add
and
or
dec
sub
ja
stc
mov
add
in
dec
lds
or
out
xlat
mov
std
fs
inc
insb
lds
lock
cmp
pusha
mov
loopne
sbb
mov
or
mov
add
ficoms
jle
daa
cwtl
push
leave
jmp
test
nop
nop
push
add
xchg
jb
sbb
mov
adc
repz
mov
loopne
loope
add
bound
minps
pushf
xlat
ss
nop
and
outsl
push
rorl
mov
or
mov
orb
sub
push
add
xor
adc
lea
xchg
mov
mov
xorl
nop
xchg
sbb
jo
mov
inc
inc
in
adc
sbb
cmp
rcl
test
add
inc
push
es
add
in
mov
sbb
push
jne
cmp
lock
and
nop
push
push
rolb
or
cltd
popa
push
pop
cwtl
sub
sbb
xchg
les
push
repz
add
pop
xorb
cmp
dec
test
add
push
pop
pop
mov
je
and
dec
jecxz
add
add
enter
xchg
pop
adcb
jp
cwtl
dec
sub
sbb
test
pop
loope
outsb
pop
mov
sti
push
adc
test
movsb
or
outsl
or
pop
xor
xor
mov
and
addb
lods
inc
adc
cwtl
pop
or
dec
iret
test
out
les
push
andb
add
loop
dec
lods
outsl
daa
int3
mov
pop
or
pop
je
cmp
or
push
xor
dec
rolb
loope
and
cmc
mov
arpl
in
movsb
add
jle
aas
loopne
lock
out
imul
dec
in
mov
negl
add
mov
cmp
mov
sbb
xchg
lret
mov
pop
or
test
jl
xor
sbb
clc
ds
cmp
sbb
pop
xchg
inc
scas
sbbb
jle
push
add
je
pop
and
clc
mov
ficomps
add
imul
jl
int3
cmp
mov
pop
xchg
test
xchg
jno
inc
mov
pop
popf
in
jecxz
xchg
scas
sub
mov
out
mov
mov
out
stos
cs
cmpsl
add
add
in
mov
nop
test
sub
sbb
dec
push
rcrb
movsl
lret
pop
and
pop
add
dec
jmp
jae
mov
enter
xchg
mov
mov
lock
ja
adc
jns
out
mov
rcrb
leave
pop
iret
dec
loopne
fsubl
lahf
std
add
fcomi
outsl
or
and
imul
pop
jo
repnz
out
cmp
cltd
aas
fimuls
and
idivb
adc
push
jl
movsb
cld
mov
mov
pop
add
sbb
ret
pusha
dec
cmp
in
hlt
push
mov
ja
push
arpl
pop
mov
hlt
call
add
jbe
in
shrb
outsl
add
inc
sub
incb
pop
or
fstpt
jle
sub
movsl
cmp
mov
sbbb
sarb
mov
lods
mov
push
stos
xchg
xor
push
adc
cli
cmp
dec
dec
xlat
out
pop
xchg
add
test
mov
das
add
es
in
dec
jae
and
fdivr
lock
mov
aas
xchg
pop
aam
je
fisttpl
inc
fdivs
add
or
mov
sub
jmp
push
js
and
mov
int3
pop
and
mov
out
dec
popf
add
lea
gs
enter
mov
mov
or
add
cmp
push
xchg
adc
jl
mov
test
popa
imul
push
add
pop
dec
add
push
pop
add
lahf
add
add
shll
inc
adc
daa
mov
test
inc
mov
pushf
pop
or
sub
jmp
dec
pop
push
add
clc
repnz
xchg
dec
ljmp
mov
pop
fdivrl
dec
enter
inc
or
inc
das
rcrl
in
hlt
int
cld
nop
add
ljmp
xchg
out
mov
pusha
call
stos
clc
in
add
clc
and
adc
dec
and
xchg
in
pushf
pusha
out
xor
cmp
mov
add
loopne
jp
loope
add
add
pop
jge
push
or
inc
cmp
lock
mov
sbb
aad
daa
rolb
std
aas
add
add
lahf
ja
imul
fldcw
js
mov
cmpsb
push
aad
cs
mov
cmp
dec
push
les
mov
imulb
cmp
pop
loope
mov
push
pop
lahf
shll
aad
test
call
mov
test
rorb
sub
add
or
push
add
sti
roll
pop
stos
adcb
or
mov
mov
subb
inc
dec
repz
lahf
rolb
jg
fmull
fildl
rcrb
pop
mov
inc
pushf
fs
push
push
sub
rcrb
arpl
push
iret
out
adc
imul
lock
mov
mov
mov
xchg
sub
adcb
inc
adc
xchg
or
out
inc
jmp
addr16
add
aam
push
pop
add
mov
pop
add
jnp
dec
push
pop
mov
cld
push
or
daa
test
roll
shll
out
xchg
or
add
in
xor
cmp
mov
cmc
cmp
mov
sub
movsl
test
push
sbb
loope
jno
into
add
adc
icebp
add
xchg
scas
jb
push
jnp
sbb
pop
les
push
shlb
pop
jmp
cmp
or
cmpl
or
or
add
cltd
les
add
enter
shlb
mov
add
and
pusha
pop
jno
pop
sbb
lret
add
xchg
mov
cmp
in
mov
sub
or
dec
pop
inc
les
adc
addb
xor
jo
bound
shl
stc
jo
push
cmp
repz
add
call
adc
sbb
andl
sbb
xor
pop
out
sbb
rcrb
and
jge
notb
pop
test
popf
jl
loopne
and
add
xor
push
dec
fcompl
aas
call
mov
testl
push
enter
fbstp
or
fs
cmp
sbb
mov
nop
in
orb
in
cwtl
add
loope
jbe
mov
xor
jp
inc
les
sub
add
sysret
in
mov
add
call
and
imul
mov
gs
add
cmpsb
push
out
pop
and
push
push
pop
les
mov
lock
push
add
pop
adc
lcall
clc
aad
loopne
shr
add
cmp
sahf
clc
add
and
inc
daa
mov
xor
and
pop
jbe
insb
das
add
pop
mov
mov
add
and
repnz
pushf
xor
push
fwait
xor
pop
push
pop
push
das
xlat
pusha
sbbl
cmpsb
lret
orb
aad
xchg
and
dec
mov
pusha
mov
push
sbb
pop
xor
into
xchg
inc
ljmp
insl
lret
imul
cmpb
mov
in
add
adc
addl
enter
jl
add
mov
mov
xor
mov
pusha
adc
movsl
lods
cmp
cmpsl
sti
leave
cmp
add
mov
lret
out
xor
icebp
gs
xchg
lcall
cld
cmovb
inc
cld
xor
push
fwait
ror
cld
or
and
test
xchg
sub
dec
or
xchg
jp
int3
mov
add
or
popf
nop
sbb
arpl
jp
gs
jecxz
sub
and
out
aam
ja
mov
push
loope
xchg
push
push
nop
mov
adc
jae
shll
clc
pop
or
dec
push
cld
cmp
dec
push
xor
sub
mov
or
cmp
rcll
popa
sbb
stos
lods
lea
sub
je
jmp
jno
mov
in
clc
pop
lret
xchg
fcoml
dec
add
inc
shll
adc
adc
xor
pop
add
mov
xor
inc
or
inc
out
inc
cmp
xchg
testl
xor
push
test
jmp
push
fldl
pusha
push
shr
push
jo
cld
es
add
jb
mov
loop
cwtl
outsb
mov
mov
insb
lds
std
mov
data16
loope
dec
mov
add
xchg
mov
lock
inc
lcall
add
jno
xor
andb
jl
mov
jg
and
lods
in
ja
cli
adc
inc
push
pop
sub
xor
jle
push
scas
cmp
sbb
push
sahf
hlt
and
xchg
test
bound
fs
mov
popf
out
dec
cld
or
imul
bnd
xor
sub
jns
lock
dec
in
mov
nop
mov
push
inc
sbb
enter
adc
orb
fs
popa
test
sbb
cmp
je
mov
inc
jg
loopne
add
sub
outsl
inc
pop
fs
adc
inc
insb
pop
xchg
scas
and
test
dec
jle
adc
sub
xlat
xor
dec
ja
cmp
mov
dec
cmpsl
mov
push
mov
incb
mov
lret
popf
xor
mov
mov
or
mov
sub
cld
hlt
sbb
add
mov
les
orb
bound
xchg
sub
sbb
adc
adc
xor
insl
cmc
pop
nop
and
push
notb
mov
and
sbb
dec
mov
inc
test
push
jl
add
xchg
push
add
and
sub
fbstp
in
mov
into
pop
add
nop
add
mov
mov
out
clc
xchg
xchg
add
dec
sbb
loope
sbb
mov
fs
or
out
sbb
sbb
push
fadds
enter
aas
mov
or
fwait
cmp
add
push
test
stc
push
mov
inc
push
loopne
adc
add
xor
push
dec
adc
cmp
inc
cmpsb
sub
or
sbbl
push
dec
enter
add
dec
cmpsb
andb
xchg
jns
dec
hlt
pop
in
out
mov
mov
mov
ror
cwtl
push
cmp
stos
sub
or
xchg
outsb
dec
jmp
mov
add
loop
rorb
sbbb
mov
jp
add
mov
or
adc
dec
imul
sbb
inc
dec
or
shr
popf
adc
fdivs
mov
adc
add
hlt
sbb
call
pusha
cld
imul
iret
daa
and
and
shlb
push
fsubl
xor
mov
cs
jl
addb
jno
dec
sar
mov
nop
in
popf
pop
or
out
insb
or
xor
insl
add
cli
jle
xchg
std
subb
and
fistl
inc
push
hlt
movsl
enter
mov
push
fcomp
jne
add
adc
xor
add
add
stc
xchg
push
mov
cmp
pushf
push
shll
fdivs
out
and
push
inc
sub
sub
insl
icebp
add
shr
stos
add
divl
bound
shll
jb
subl
sub
xchg
dec
push
add
pop
jmp
pop
xchg
pop
sub
cmp
mov
pop
pop
repnz
jmp
cwtl
push
fwait
cli
mov
mov
or
jmp
aam
adc
add
shll
jle
fisubl
imulb
lock
imul
ret
dec
push
sub
out
pushf
jmp
cmp
inc
push
sub
dec
inc
jo
xchg
insb
xor
cwtl
mov
jecxz
lret
mov
and
and
cltd
jb
imul
add
inc
xor
mull
xchg
sub
aam
inc
push
sbb
sti
dec
call
pop
inc
out
push
lcall
sub
fs
mov
push
cmp
hlt
add
loope
cwtl
xchg
add
cmp
sub
cmpsl
add
lret
jl
xor
std
dec
add
and
test
add
jns
cli
mov
cwtl
push
and
test
pop
sub
jp
repnz
pop
push
in
in
add
mov
pop
xor
hlt
cmp
fstl
cmp
aas
sbb
cmpsl
adc
or
xchg
dec
xor
adc
test
test
sub
insb
mov
out
pop
nop
sub
push
mov
adc
xor
std
les
pop
pop
add
sete
int3
mov
cmc
mov
in
pushf
sub
adc
inc
enter
pop
sbb
cmp
inc
fdivs
aaa
xchg
arpl
mov
pop
mov
inc
pop
cmc
rep
push
mov
xchg
xor
add
push
insl
push
mov
mov
sbb
sar
sbb
std
fs
stc
mov
mov
out
sub
fisttpll
imul
dec
mov
jp
clc
mov
add
loope
bound
mov
pop
scas
cmp
hlt
addb
mov
cmp
push
pop
mov
leave
call
xorb
ss
adc
inc
or
aam
adc
or
xchg
js
cmc
push
and
mov
ror
sti
cmpsb
add
test
aad
cltd
xchg
jns
dec
and
mov
sub
test
pusha
insl
adc
add
push
sub
cmpsb
lock
xlat
imul
or
or
adcb
dec
js
jo
push
call
mov
xor
pop
clc
cmpl
dec
mov
inc
pop
adc
rcll
call
add
in
popl
add
jmp
add
int3
sub
pop
and
add
imull
jmp
clc
mov
inc
daa
pop
xchg
and
out
add
cmp
leave
scas
inc
fdivs
add
enter
add
into
pop
jp
inc
add
out
mov
adc
pusha
fcomps
pusha
mov
pop
xchg
sub
add
or
xor
pop
and
rclb
dec
xor
shll
mov
out
adc
nop
jo
bound
gs
aam
or
adc
inc
add
mov
fstps
aam
or
add
xor
les
mov
add
adc
push
jmp
adc
sub
add
pop
sub
call
mov
lods
and
xlat
test
sbb
aad
hlt
adc
adc
jp
push
mov
adcl
call
add
mov
lret
xchg
popf
or
fs
popa
jge
nop
out
icebp
cmp
and
xlat
and
mov
add
sbb
mov
lods
sbb
cmp
push
sub
adc
inc
andb
mov
sub
jge
pop
add
adc
adc
jno
dec
hlt
repz
mov
add
insl
push
mov
inc
or
mov
dec
clc
xchg
repnz
adc
cmp
popa
aad
aas
push
pushf
dec
das
pop
jl
push
rclb
pop
cmp
lea
fisttps
ss
iret
aaa
js
inc
mov
sti
outsl
cmp
movsl
pop
cld
or
popl
mov
pop
adc
pop
fcomip
jno
in
cs
mov
jmp
daa
dec
mov
pop
lods
adc
sub
lcall
xor
gs
incl
notl
cltd
push
push
dec
in
insb
nop
adc
loopne
mov
lods
xchg
lds
adc
in
faddl
aam
sub
ljmp
fwait
add
jl
jmp
inc
xchg
xchg
lods
icebp
mov
inc
jno
mov
or
mov
std
arpl
bound
add
frstor
adc
bound
out
imul
testl
fmuls
cwtl
sub
orl
cmp
das
outsl
sbb
fcoml
clc
arpl
aas
leave
mov
push
push
rolb
or
dec
xchg
inc
add
push
pop
inc
jge
enter
or
iret
mov
pop
or
add
bound
sub
sbb
jb
adc
rclb
in
dec
push
rolb
arpl
movsb
in
dec
in
lahf
push
call
sub
test
push
or
jecxz
mov
cmp
call
inc
pop
and
xlat
popa
xor
pushf
adc
inc
mov
jbe
adc
and
push
xor
clc
pop
xchg
fcomp
xchg
nop
jle
and
pop
jno
movsb
shll
enter
inc
mov
mov
inc
mov
add
jg
add
aad
xchg
push
out
add
fcoms
sbb
jae
add
scas
pusha
pop
inc
pop
mov
jl
mov
aaa
push
rcrl
jno
mov
fcompl
and
mov
popa
cld
lcall
inc
loopne
adc
xchg
mov
add
cmp
sti
adc
cli
loopne
cmp
es
jo
repnz
sahf
sbb
xlat
arpl
call
imul
outsl
sub
gs
out
enter
iret
sbb
jb
lret
mov
push
mov
cmp
mov
lock
dec
or
add
push
sub
adc
loopne
and
cltd
test
inc
mov
ret
test
in
add
cltd
push
js
push
inc
fadds
jae
int
cmp
sti
lock
pop
dec
xchg
fstpt
mov
fmuls
out
mov
dec
mov
loop
dec
push
adc
mov
push
hlt
jecxz
mov
ficomps
sbb
adc
push
scas
adc
insb
cmpsb
fs
push
hlt
cmp
inc
mov
popa
sub
mov
push
shl
int
pusha
ret
push
mov
cmp
mov
addl
cld
pop
pusha
inc
sbb
cli
jno
test
jnp
pushf
mov
sbb
add
pop
sbb
fbld
dec
mov
lcall
js
mov
repz
cmp
add
mov
add
dec
enter
inc
mov
mov
or
mov
push
clc
jne
mov
or
stc
leave
call
pop
call
addl
and
faddl
in
mov
in
sbb
adcl
inc
xlat
cwtl
inc
nop
mov
inc
cmp
xchg
addr16
pusha
pop
mov
mov
stos
icebp
mov
fists
ja
add
xor
mov
jle
lret
movsl
ds
jb
jns
add
xchg
jno
das
enter
xlat
and
int
jg
out
mov
mov
shl
cmp
cmpsl
mov
cwtl
mov
or
and
add
loopne
sub
add
mov
mov
mov
adc
jg
dec
lret
call
iret
cs
aam
cmp
add
mov
add
negl
push
xor
fldcw
xor
rcll
inc
add
and
mov
and
sub
jle
jo
mov
push
rcl
shr
jne
adc
cmp
jecxz
add
and
mov
mov
xchg
jno
mov
arpl
movl
adc
pop
mov
nop
int3
popf
push
push
jle
add
push
arpl
mov
inc
push
add
mov
cwtl
add
xchg
fs
ja
add
dec
sahf
push
xchg
inc
shrb
push
mov
adc
loop
sbb
add
icebp
xchg
add
in
xchg
mov
outsb
popf
mull
add
sub
popa
xlat
pusha
add
testl
sub
loopne
sub
inc
and
sbb
ss
push
fs
daa
ljmp
jo
iret
outsl
lret
subb
xor
jmp
dec
lock
sub
int
rcl
pop
fiaddl
push
ja
mov
stc
inc
es
das
pop
int
cmp
mov
negl
andb
or
add
mov
push
out
push
push
fcoms
inc
jbe
pop
lock
rclb
lcall
out
aad
arpl
in
dec
mov
aad
popa
in
mov
adc
lock
fwait
shlb
dec
sti
or
retw
mov
pop
jmp
repnz
nop
and
aam
push
sti
hlt
imul
jnp
scas
cmp
add
loope
out
and
fstl
add
imul
and
inc
les
arpl
push
push
sbb
adc
lods
add
pop
xchg
add
lods
arpl
mov
fidivrl
cwtl
sahf
inc
ret
loopne
in
pop
mov
push
jge
das
push
add
scas
adcb
push
push
xchg
int3
aas
mov
sub
fcompl
lret
push
in
incb
add
mov
mov
je
pop
call
xor
in
add
inc
das
and
loop
inc
sbb
nop
jno
ret
testb
clc
into
xorl
fsubp
ja
xor
xor
add
cmp
dec
pop
lret
add
pushf
or
cld
inc
mov
add
mov
push
xchg
std
lret
icebp
ja
jo
push
and
loope
bound
mov
fadds
pop
xor
sub
pop
xchg
sbb
mov
dec
mov
sbb
fidivrl
add
inc
popf
nop
inc
add
loopne
pop
jge
adc
out
cmpl
in
sbb
dec
adc
cmp
into
movsb
mov
dec
stos
inc
outsl
bound
sub
cmp
lcall
repnz
sarb
lock
jbe
adc
pop
cld
inc
push
sbb
xor
and
add
addb
add
cmp
push
jg
cmp
imull
pushf
sub
mov
push
fdivrs
jg
cmp
shll
add
cmp
inc
aam
rclb
cmp
lock
setno
add
cmpb
adc
inc
sbb
sub
or
mov
sbb
lods
int
xchg
xor
sub
test
loope
dec
into
rolb
minps
addr16
and
sbb
enter
add
adc
pop
les
pop
cld
and
mov
inc
data16
mov
mov
xchg
out
fisubrl
leave
jmp
daa
clc
ja
bswap
inc
in
xchg
or
sbb
mov
mov
adc
rcll
test
andb
in
mov
pusha
sbb
or
imul
clc
fwait
push
sub
and
inc
jns
xor
or
daa
cwtl
scas
mov
sub
mov
add
xor
es
inc
loopne
in
dec
bound
xor
push
outsl
sub
mov
pop
and
sti
xchg
dec
add
fildll
scas
add
jno
push
push
fwait
sub
andb
add
stc
mov
bound
fsubl
cmp
and
mov
daa
and
aaa
xlat
xchg
jmp
vmwrite
mov
mov
ljmp
add
jg
out
out
pop
push
push
clc
in
sbb
mov
fidivrl
hlt
ret
cwtl
aas
jge
sbb
icebp
jg
arpl
or
mov
shrl
dec
fisttps
and
mov
jmp
push
xchg
mov
inc
inc
test
cmp
test
mov
andl
nop
xor
add
sub
in
movsb
test
inc
sbb
or
into
mov
outsl
es
cmpl
rcrl
inc
fsubr
aad
push
aam
and
mov
lret
mov
push
in
pop
jmp
push
adc
aaa
ret
mov
orl
add
in
mov
sbb
cmp
aam
pop
mov
sub
adc
add
shrl
add
push
and
lock
pop
jo
mov
push
scas
out
push
cmpsb
cmp
xor
and
add
cmc
lcall
add
mov
fcmovnb
push
adc
daa
push
add
jge
mov
shrb
iret
ret
push
xor
jp
and
mov
mov
jne
pop
adc
nop
add
cmp
add
repnz
ret
ja
pop
add
in
sarl
dec
pusha
mov
sbb
cmp
adc
data16
cwtl
loope
ret
daa
add
pop
xor
pop
mov
add
cmp
mov
cmpsb
adc
adc
jne
int3
fucomp
shlb
repnz
xchg
adc
sbb
sbbb
lret
orps
cli
in
dec
add
inc
add
and
xor
scas
adc
and
in
lds
add
mov
sbb
push
and
or
cmpb
inc
lds
push
lock
pop
cmp
cmp
mov
lcall
xor
pushf
mov
stos
pop
sarb
shrb
add
sub
shlb
add
fisubs
add
push
mov
icebp
daa
mov
pop
mov
shlb
dec
or
les
ds
roll
push
gs
mov
fidivs
sti
fcompl
add
in
sbbb
mov
mov
xor
push
insb
sub
inc
fdiv
push
mov
push
cmp
cld
test
xor
loop
and
js
mov
ret
pop
jne
push
sbb
jge
mov
jo
js
popa
fs
outsl
aas
ret
js
add
sbb
les
sub
sbb
push
mov
mov
pop
orps
loope
sub
arpl
pop
add
jns
addl
cld
mov
bound
adc
cmp
pushf
or
xchg
lods
dec
clc
pop
push
sub
and
mov
dec
pop
pop
pusha
das
cmp
cld
loope
mov
dec
mov
xor
mov
clc
adc
aas
or
dec
roll
add
add
jne
stos
stc
popf
and
outsl
add
mov
push
sbb
imul
mov
add
pop
icebp
aaa
mov
push
pop
adc
and
lods
daa
fdivrl
ljmp
pop
aas
xor
cmc
adc
mov
add
xchg
or
fbld
mov
cmp
xchg
jb
les
or
loopne
mov
mov
inc
nop
aas
jmp
add
mov
icebp
jns
fs
jb
push
and
rcl
in
test
sbb
js
xlat
fisubs
add
ja
and
fistps
insb
add
fucom
sar
into
fsts
je
jecxz
cmp
mov
arpl
mov
mov
and
outsl
dec
mov
fistl
and
imul
lock
mov
daa
aas
jns
cmpb
out
setb
inc
jno
push
imul
xor
cmp
push
add
pop
dec
addr16
add
mov
orl
leave
mov
add
jl
pop
pop
test
xor
repnz
pushf
ret
push
mov
js
in
fsubrl
adc
sub
sbb
dec
lock
sub
adc
insb
and
mov
sbb
push
rcrl
mov
add
mov
xor
jmp
into
cmc
popa
jl
in
add
shll
add
sbbb
mov
icebp
jmp
mov
pop
xor
shl
inc
rcll
mov
add
mov
outsb
jbe
push
test
add
imul
mov
iret
fsts
add
fstp
dec
aas
xor
jg
cmp
lods
cs
or
movsb
fbld
fcompl
and
dec
sub
int3
add
lock
xor
xchg
dec
lods
sbb
push
cmp
rcr
insb
cwtl
add
inc
dec
jge
aas
into
rcrb
nop
mov
and
xor
pop
pop
cwtl
pop
popa
iret
cmp
gs
nop
fucom
cs
rclb
pop
mov
dec
sbb
and
mov
or
xchg
call
push
mov
mov
mov
xchg
fsubrs
jns
add
dec
sub
mov
or
pop
mov
add
cmpb
jmp
dec
popf
cmpsb
pop
fdivl
subb
dec
call
leave
mov
add
iret
jg
add
push
movsb
sub
inc
ds
inc
jno
push
outsl
pop
fiadds
adc
test
mov
imul
sub
jns
daa
mov
leave
adcb
hlt
clc
lcall
push
pop
xor
rorb
mov
enter
cltd
jae
sub
add
add
and
cld
fidivrl
mov
std
add
stos
push
rclb
dec
pop
add
add
pop
cmp
sbb
jns
cltd
add
lahf
add
push
lea
jno
push
sub
clts
lret
adc
pop
dec
xchg
and
mov
lods
lea
sbb
adc
xor
jmp
out
xchg
into
xchg
aaa
inc
dec
in
inc
adc
aas
jo
pop
or
pop
adc
add
xlat
xchg
add
jp
push
xchg
in
lahf
test
mov
jge
sbbl
clc
cmp
adc
aaa
xor
js
mov
cmpsb
movups
dec
pop
mul
adc
or
cmp
pusha
mov
cs
push
push
inc
loop
loopne
fadds
lcall
xor
adc
mov
addr16
cmp
adc
xor
movsl
cmp
cld
int
mov
xor
stos
ds
jp
repnz
or
add
lahf
xchg
push
outsb
xor
popa
mov
xor
add
test
jnp
loop
inc
cmpsb
add
lock
fyl2xp1
mov
sbb
mov
xchg
and
mov
movsb
pop
push
in
adc
and
scas
adc
repz
pop
inc
push
xor
js
aas
fiaddl
pusha
cmpsl
out
push
adc
jmp
mov
roll
test
js
stc
addl
adc
je
std
into
lea
dec
lahf
dec
mov
das
cmp
js
mov
push
cmp
nop
sbb
clc
addb
sbb
call
xchg
pop
cld
add
mov
andb
cmp
setp
lea
cmp
clc
mov
cmp
jmp
pop
subl
mov
pop
xor
iret
and
mov
ret
mov
cmc
test
fiaddl
sub
inc
jnp
mov
sub
mov
adc
fdivs
loop
sbb
rclb
push
push
add
mov
lock
sbb
jno
mov
xorb
sub
xchg
xor
insl
adc
hlt
jo
mov
out
mov
lret
sahf
jp
jl
fstps
sarb
jnp
imul
enter
jg
stc
pop
dec
push
push
mov
jbe
adc
in
bound
pusha
mov
mov
mov
lds
stos
loopne
test
std
pop
imul
filds
add
stos
in
pop
mov
sbb
in
mov
lods
inc
xor
adc
je
push
xchg
xor
dec
mov
mov
popa
rcrl
out
add
js
andb
cmp
add
rcll
sub
sbb
stc
add
test
jg
icebp
fildll
jb
andl
mov
add
dec
cmpb
jnp
xchg
inc
push
in
inc
iret
cwtl
mov
pop
add
mov
out
out
adc
adc
out
aad
pusha
gs
fstpt
xor
add
pop
xor
mov
jp
cmc
arpl
inc
ffree
add
inc
out
sbb
mov
add
inc
lcall
mov
mov
fcompl
adc
push
in
cmp
cld
adc
shrb
xor
adc
and
cmp
bound
pusha
add
gs
repz
mov
js
aas
pusha
leave
popa
es
mov
loope
imul
call
sbb
add
mov
call
xor
sub
test
test
mov
mov
add
imul
dec
mov
adc
dec
dec
jne
fnstenv
sti
in
or
add
mov
mov
or
pusha
das
push
sbb
fwait
sub
xor
lds
adc
pop
out
fwait
add
jp
mov
cmp
adc
rcrl
dec
lret
mov
sub
dec
jmp
daa
cmc
cld
dec
addr16
mov
mov
in
sbb
fldl2e
mov
cld
shl
add
dec
and
push
repnz
mov
lds
inc
addr16
ret
adc
imul
hlt
lret
rorb
out
xchg
les
movsb
or
mov
mov
test
gs
dec
push
mov
ljmp
jmp
mov
mov
pushf
dec
add
jle
xchg
addr16
mov
nop
inc
cmpb
mov
mov
fistpll
sahf
sbb
icebp
xor
cwtl
and
cmpsb
cld
dec
test
es
pop
xchg
adc
ss
or
cmp
es
adc
mov
add
or
cmp
mov
adc
add
cmp
ret
add
inc
or
xor
sti
cmp
into
or
sti
push
enter
pop
adc
mov
mov
xor
aam
add
fisttpll
push
add
in
std
mov
cmp
mov
add
dec
jge
pusha
icebp
js
stc
cld
pop
popf
push
cmp
xchg
inc
fcompl
dec
add
arpl
clc
mov
push
push
dec
sbb
xor
cwtl
adc
mov
ret
push
stc
fwait
push
repz
sarl
icebp
fcomps
push
pusha
adc
and
aas
dec
dec
mov
xorl
fidivrs
sbb
mov
movsb
jl
repnz
mov
mov
mov
test
sub
mov
mov
loopne
hlt
jmp
lock
imul
sbb
jns
inc
mov
aas
mov
dec
cmp
lea
mov
cmp
cltd
mov
adc
or
push
fstl
pop
clc
jnp
mov
cmp
in
cwtl
into
xchg
out
int3
sub
sub
push
nop
add
mov
jmp
out
push
rolb
movsl
jno
jecxz
mov
cli
jg
fsubrl
nop
adc
or
cmp
bound
adc
orb
jl
jno
sub
dec
out
je
sbb
adc
or
cmp
push
outsb
ds
subb
mov
ds
shll
test
insb
mov
xchg
daa
jbe
nop
cwtl
jg
adc
addb
das
add
int3
add
push
aas
jge
aam
push
cmp
inc
xchg
ds
push
adc
jae
ljmp
dec
aaa
or
fs
sub
push
push
jg
lea
rcl
je
adc
adc
pop
add
mov
push
in
jb
and
cmc
lods
or
mov
loopne
out
rolb
cmp
in
cmp
testl
push
sahf
out
xor
in
mov
push
xor
mov
popf
add
scas
or
dec
into
test
out
adc
add
mov
push
mov
bound
mov
stos
dec
mov
sub
ret
adc
pop
movsl
cs
addr16
out
filds
and
dec
pushf
jle
xlat
dec
cmp
and
mov
addr16
adc
inc
pop
cmp
insl
andb
in
add
lcall
adc
xchg
enter
jle
mov
add
and
ret
bound
jno
sbb
clc
test
dec
movsl
mov
mov
icebp
sub
adcb
outsl
cwtl
sbb
movsl
adc
shl
mov
fidivrl
out
pop
es
adc
test
lea
adc
sub
popa
or
add
cmc
mov
adc
sbb
mov
mov
mov
orb
mov
jmp
icebp
dec
imull
popf
add
cmp
xchg
repz
push
rol
pop
jno
and
pop
cltd
fadds
dec
cmp
iret
fidivl
insl
loopne
pop
aad
and
push
mov
xchg
movsb
cli
pushf
loope
push
adcb
cwtl
addr16
icebp
cltd
push
inc
stc
and
pushf
and
add
fnstenv
pop
mov
adcb
pushl
enter
pop
sahf
rcrb
out
mov
jno
cmp
cmp
test
call
cmp
xor
lods
dec
mov
pusha
iret
mov
roll
incl
mov
cmp
lea
repz
sbb
sbb
mov
inc
xchg
test
pusha
mov
mov
bound
rolb
xor
int
ljmp
add
les
or
mov
fs
mov
add
lea
pop
inc
adc
out
bound
hlt
mov
outsb
add
mov
add
mov
dec
hlt
clc
mov
outsb
insb
cmp
int3
in
mov
add
lods
ret
lret
mov
or
ja
adc
xor
imul
repz
jl
cld
leave
mov
movsl
inc
push
and
pusha
xlat
dec
mov
in
pusha
sub
mov
jae
into
inc
xor
xchg
addr16
add
jbe
jg
add
mov
adc
add
sahf
inc
add
mov
sbb
mov
sahf
pop
sbb
mov
sti
iret
les
add
imul
and
cmp
add
sbb
push
mov
sbb
xorb
testb
sub
inc
lods
or
mov
pusha
inc
ret
lds
cmp
pop
dec
mov
insl
leave
push
loope
in
xchg
cmp
adc
mov
ds
push
cmpl
dec
and
inc
imul
bound
nop
or
lret
pop
clc
pop
mov
loope
cs
inc
mov
inc
shlb
cwtl
dec
adc
ja
and
sub
xchg
pop
add
ret
testb
cwtl
sub
and
fmul
pusha
jne
adc
xchg
sub
push
pop
and
pop
ja
adc
dec
cmp
cmp
out
pop
test
ret
mov
lret
add
mov
mov
mov
mov
inc
adc
add
add
mov
pop
cmp
push
inc
je
fsub
mov
inc
push
sub
repnz
and
sbb
cmpsl
adc
in
mov
cmp
lods
fsubl
push
and
cmpsl
lea
pop
xchg
adc
add
push
imul
push
movsb
cmp
mov
mov
jl
add
pop
shrb
pop
popa
es
jge
jno
xor
mov
xor
enter
cmp
add
ret
ss
scas
adc
sbb
leave
out
mov
push
inc
fnstsw
je
mov
imul
test
adc
push
test
dec
ret
or
mov
in
sbb
mov
mov
push
inc
test
cmp
mov
hlt
sub
or
pop
clc
xchg
fldl
add
add
insb
cmpsb
add
xor
adc
stc
in
call
mov
fptan
jne
pop
and
adc
in
lea
jo
setp
pop
cmp
rorb
ss
push
sbb
cmc
jae
ja
dec
rcrl
xchg
orb
cmp
je
dec
add
xor
sub
xor
fs
lcall
rclb
xor
lahf
clc
stos
add
and
int3
cs
incl
xchg
ljmp
inc
mov
nop
or
xchg
adcl
mov
adc
inc
sbb
adc
data16
mov
mov
inc
leave
mov
sarb
out
movsb
adc
push
mov
ljmp
push
cld
pusha
rorb
sarl
and
mov
arpl
adc
adc
jo
call
movsb
leave
or
add
and
or
insl
jo
pop
mov
and
shrb
cmp
xchg
push
hlt
add
fmull
lods
xchg
pop
push
movsl
data16
mov
out
jmp
xchg
in
inc
jbe
popa
add
mov
mov
je
shl
add
mov
movsb
loope
inc
or
aam
sub
xor
pusha
xor
js
cli
movsl
cmp
jne
enter
inc
pop
lret
cmp
add
dec
and
pop
cmp
jl
rorl
inc
sub
cmp
stos
out
rolb
fdivl
mov
xor
jp
lahf
xchg
mov
dec
cmc
xchg
mov
pushf
xor
or
and
cmpsb
inc
cmp
or
pusha
into
push
sub
mov
iret
mov
idivl
out
cld
pushf
js
xor
hlt
adc
int3
dec
mov
imul
cmp
add
sub
stos
inc
repz
inc
div
add
adc
adc
dec
adc
xchg
push
jbe
cmc
shlb
mov
push
add
stos
push
push
push
adc
or
test
push
xor
cmp
cmp
xchg
rclb
pushf
mov
testl
jno
mov
pop
pop
jbe
sub
add
or
add
ljmp
xor
xlat
sbb
dec
push
leave
push
or
inc
mov
add
call
test
jl
dec
adc
daa
xor
cs
clc
adc
aas
int
cli
dec
lock
and
push
jo
and
adc
iret
mov
cli
add
cmp
pop
push
xchg
mov
pop
in
mov
fs
lea
add
mov
add
cmpsb
cmp
movsl
sarb
pop
lsl
test
adc
add
cmp
lock
and
es
movsb
add
mov
imull
outsl
cmp
sbb
push
loopne
mov
jg
push
movsb
sbb
push
repnz
test
add
sub
int3
dec
push
add
hlt
mov
xchg
rorl
mov
repnz
sub
dec
xor
adc
inc
adc
mov
popa
xor
aam
les
out
mov
cmp
push
push
add
push
rcrb
jg
add
sbb
jge
mov
dec
or
dec
and
mov
pop
add
bound
cltd
push
cmp
cmp
cmp
pop
sub
dec
repnz
test
pop
xor
andb
push
sahf
out
ret
or
ss
add
jle
addb
or
inc
push
xor
cmp
mov
test
test
and
pop
or
lods
aam
packssdw
or
cmp
jecxz
dec
lock
repz
or
sub
dec
adc
cmp
or
jge
sahf
add
inc
je
mov
cmp
mov
std
sbb
jecxz
testl
add
fcoms
and
pop
sarb
push
jo
xchg
adc
call
ffree
inc
mov
adc
and
imulb
push
and
xchg
dec
ljmp
cld
mov
pushf
clc
mov
xlat
add
inc
jnp
in
sub
and
addb
pop
stos
inc
push
xchg
mov
add
call
cmc
incb
stos
mov
aam
xchg
inc
inc
aas
xchg
hlt
cmpb
adc
mov
pusha
scas
fmuls
pop
sbb
shr
push
push
shrl
and
dec
into
xor
sub
sbb
xchg
or
call
je
dec
cwtl
movsb
push
sti
pop
enter
stos
sbb
mov
repz
lret
push
and
add
pushf
mov
sub
push
adc
cmp
xor
movsl
testl
push
xor
push
loope
shrb
addb
add
mov
or
in
dec
add
dec
cltd
xchg
nop
repz
rolb
adc
push
pop
push
inc
fisubs
test
add
inc
mov
in
insb
push
push
punpckhwd
or
aad
daa
popa
inc
add
mov
mov
push
push
imul
add
adc
les
stc
cwtl
inc
sub
add
jbe
pusha
xorb
cmpsl
lahf
ret
lds
or
mov
jae
jmp
loope
mov
add
add
cmc
pop
cmp
mov
aam
out
push
loope
xorb
rcrl
into
and
cmc
js
out
mov
add
bound
icebp
or
adc
and
mov
stos
je
or
loop
mov
and
push
fldenv
mov
xor
sbb
inc
in
test
jmp
and
add
popf
mov
subb
ret
jecxz
add
mov
clc
cs
add
shlb
lods
test
pop
icebp
lock
shrb
mov
pusha
ret
add
pop
test
push
sub
dec
dec
add
add
add
mov
call
in
cmpsl
je
idiv
xor
push
mov
push
push
jo
mov
test
mov
loopne
sbb
mov
jge
aaa
stos
or
mov
les
cmc
sti
bound
scas
push
and
pop
add
mov
xlat
cmp
or
cmp
les
enter
sbb
shlb
fisubs
sub
jmp
xchg
mov
add
and
call
mov
sbb
les
add
pushf
in
add
mov
mov
add
enter
push
sub
jmp
ret
mov
fcmove
add
lods
out
in
dec
addb
fnsave
cmp
test
es
cmp
mov
mov
add
clc
pushf
aad
sbb
add
stos
rclb
jbe
xchg
rol
addr16
mov
mov
or
push
ss
pusha
test
cwtl
add
jmp
jno
sbb
pop
or
std
adc
mov
sar
cmc
add
or
add
mov
sti
repnz
push
inc
sbb
or
jne
out
or
cmp
sbb
sbb
addb
int3
or
sarl
les
in
mov
mov
mov
outsl
and
add
daa
outsb
sbb
jnp
add
stos
mov
and
xor
or
divb
imul
cmp
mov
add
sub
fwait
cltd
js
or
repz
das
and
subb
fcmovu
out
jo
add
imul
leave
bound
lcall
push
sbb
adc
push
nop
je
inc
aaa
cwtl
or
nop
outsb
out
sbb
cmp
push
and
aam
add
xor
push
xlat
test
cwtl
call
clc
testb
add
push
lds
add
push
adcb
add
dec
cmp
insb
ja
pop
test
inc
rcrl
pop
xchg
icebp
jg
std
inc
or
pop
aaa
and
xorl
add
inc
sbb
pop
add
addl
push
out
or
add
mulb
jge
add
xorl
stos
push
pop
int3
xor
mov
repz
ss
sub
int3
mov
or
and
sbb
dec
pop
mov
add
pop
mov
call
popf
cmp
sbb
push
adc
rcll
pusha
dec
aam
sbb
or
cmp
mov
inc
mov
leave
jecxz
or
out
out
sub
fsubr
pop
roll
dec
popa
add
push
stos
adc
add
gs
pusha
push
div
and
push
xor
out
into
xor
add
repz
or
imul
dec
mov
mov
std
sbb
xchg
shlb
dec
add
mov
add
pop
jo
jg
sbb
int
loopne
ds
xchg
xchg
lock
pusha
lcall
imul
pop
sbb
cmp
rcrb
les
or
movsl
arpl
xlat
mov
fstpt
or
push
js
inc
repnz
pop
or
shl
add
dec
push
shlb
data16
shlb
adc
mov
inc
or
push
les
cmpsb
inc
sbb
cmp
inc
mov
push
pop
dec
ja
or
inc
test
enter
inc
fstpt
stos
cmp
neg
mov
mov
push
ljmp
nop
loopne
enter
jnp
orb
add
in
xchg
bound
add
push
xorb
orb
cltd
push
fisubrl
stos
add
leave
cmpsb
daa
inc
inc
lock
dec
or
push
outsb
cmp
in
jno
leave
mov
pop
mov
popa
jno
inc
or
add
push
enter
mov
cmpsl
and
lahf
inc
add
inc
cltd
pushf
cwtl
add
sbb
pop
popa
push
shl
inc
arpl
lret
xor
cmpl
add
jbe
lahf
add
mov
lods
nop
jno
add
jmp
or
xchg
sarl
or
out
sub
mov
and
or
outsl
repz
cltd
rclb
inc
push
add
inc
mov
push
sbb
cmc
xor
shrl
addb
sbb
sub
fistl
sub
test
cmp
or
ljmp
add
daa
shrl
mov
xchg
xor
jmp
pop
add
jae
loop
sub
add
loopne
adc
dec
cltd
pop
sbb
lret
pop
out
add
mov
out
or
push
mov
mulb
jbe
mov
leave
xor
lods
and
dec
mov
js
add
mov
call
incb
leave
cltd
bswap
sti
add
add
mov
fiaddl
push
sub
jnp
and
sbb
std
icebp
lahf
out
je
xchg
das
neg
lcall
scas
scas
and
and
stc
mov
scas
das
adc
inc
and
rolb
leave
addb
loope
insl
or
dec
xchg
mov
xlat
add
sarl
mov
xchg
addl
add
push
iret
ret
and
adc
dec
adc
adc
icebp
xchg
dec
dec
mov
sub
xorb
ss
out
inc
cwtl
rclb
mov
loopne
and
mov
adc
xlat
mov
xchg
leave
mov
xor
mov
pop
lea
pop
pop
or
sbb
or
adc
mov
cs
jno
jg
loopne
mov
mov
in
or
je
sub
add
add
mov
dec
sub
push
inc
adc
adc
or
sbb
rorl
mov
dec
add
scas
add
stc
pusha
xchg
int3
xor
jns
mov
rcr
or
iret
lret
and
or
sbb
adc
xlat
cmp
les
or
or
sbb
roll
and
lods
fcmovnb
nop
mov
outsl
cmp
loop
ret
mov
mov
hlt
fs
int3
scas
sbb
xor
bswap
test
inc
test
popf
dec
sub
pop
popa
xchg
mov
add
icebp
add
int
mov
nop
xor
ljmp
imul
inc
xor
decb
and
mov
and
cltd
inc
pop
jmp
pusha
enter
inc
or
repnz
cmc
dec
stc
mov
sub
lret
addb
add
xor
int3
jbe
push
fmul
adc
dec
test
dec
adc
roll
xorb
fimuls
cli
or
les
int
and
sbbl
mov
outsl
jl
or
or
aaa
xor
inc
subl
push
cmpsb
mov
negl
sub
mov
ret
pop
add
push
pusha
and
add
fndisi(8087
xchg
mov
test
popa
movsl
add
dec
dec
int
pop
jge
xor
add
movl
out
jno
jmp
lods
mov
movsl
sarl
aas
das
cmp
fsubp
jnp
pop
in
sbb
aas
hlt
or
nop
imul
scas
test
xchg
test
dec
or
mov
int3
jae
adc
pop
int3
lods
or
test
sahf
mov
lret
je
dec
mov
cltd
add
stc
nop
inc
les
repnz
dec
push
cltd
clc
adc
and
or
dec
cmp
aam
dec
sbb
mov
add
push
pop
mov
jle
add
arpl
cmp
in
inc
dec
jl
mov
ret
xor
dec
xor
pop
jecxz
pop
jmp
push
insb
jp
or
cmp
mov
fidivs
fadds
add
mov
pop
sahf
add
enter
mov
adc
and
leave
pusha
pop
jmp
mov
xor
daa
add
nop
rcrl
dec
and
nop
pusha
aad
jae
test
int3
nop
aam
xchg
xor
add
mov
stc
sahf
push
jnp
or
dec
adc
adc
pop
jo
mov
xchg
add
scas
aaa
add
mov
mov
cwtl
xchg
test
addb
outsl
jmp
pusha
xor
inc
jae
cmp
stos
cltd
push
mov
pushf
aas
loopne
add
cmp
adc
mov
cmp
add
sti
int
cld
adc
fwait
ljmp
test
pop
dec
and
int3
enter
push
sahf
cld
xchg
push
lcall
jle
popa
sarl
pusha
cmp
push
push
movsb
push
iret
adc
aam
mov
leave
mov
js
rorb
shrb
adc
mov
inc
dec
sti
enter
dec
jbe
hlt
dec
call
int
mov
insb
adc
cmp
test
icebp
adc
adc
jns
jp
xchg
mov
push
mov
pop
adc
add
int3
in
lock
aas
gs
lret
dec
cld
add
test
sbb
gs
xchg
addb
push
and
adc
outsb
jo
add
push
mov
jl
jl
add
push
adc
mov
loopne
js
stc
repnz
xchg
mov
cmc
cmp
addb
pop
and
insl
sub
sti
mov
mov
dec
dec
inc
or
mov
or
cmpsl
outsl
in
sbb
movsl
mov
xchg
adc
pop
cmpsl
mov
push
int3
pop
loope
lods
mov
mov
jbe
arpl
aaa
mov
fcompl
dec
jbe
rcl
mov
call
in
add
cmp
sbb
and
mov
nop
dec
scas
js
jl
pop
push
jno
test
fcomip
add
cmp
icebp
addb
push
dec
mov
outsb
inc
or
inc
adc
js
sarb
dec
pop
les
aaa
shll
adc
mov
jbe
in
xlat
pop
cmp
nop
xor
pop
insb
pop
icebp
out
fcompl
dec
test
xchg
sbb
add
cmp
jmp
aam
inc
or
out
hlt
jnp
cmpxchg
inc
jle
cmpsb
sub
pop
lods
pusha
pop
push
xchg
call
mov
sub
add
addl
mov
mov
inc
int3
xchg
add
and
cmc
lock
dec
add
inc
pop
iret
add
xor
es
test
lods
notl
dec
int3
xor
pop
mov
cmp
pop
into
cmpl
rcr
push
in
scas
sbb
leave
pop
lret
nop
mov
push
mov
and
sbb
int3
sbb
inc
mov
fdivrl
add
repnz
sbb
xor
je
or
repnz
sub
cmp
add
fnstcw
mov
inc
iret
xchg
subl
repz
imul
cs
jp
push
add
lret
add
cmp
dec
stos
fisttpl
in
mov
sbb
movsb
sub
pop
testb
nop
add
cmp
add
xchg
adc
mov
mov
pop
ret
loopne
xor
add
pop
sbb
cmpl
pop
sbb
and
js
nop
mov
pusha
mov
ja
cwtl
in
outsl
pusha
xor
xlat
xorl
inc
shrd
pop
pop
jno
movsb
in
add
leave
das
mov
int3
mov
rcr
mov
movsl
sbb
das
add
daa
lods
out
mov
fwait
add
sbb
or
es
loopne
ret
or
jo
add
cmpsl
add
push
out
mov
sbb
xchg
movsb
add
das
cmp
imul
mov
jp
inc
and
xlat
push
sti
enter
pop
push
loopne
dec
ds
xchg
add
jo
ds
mov
and
sbb
push
add
dec
fcmovnbe
xor
mov
test
jne
jo
xchg
xor
xchg
adc
cld
add
dec
mov
pop
outsb
hlt
addb
jo
add
sub
out
out
dec
mov
xor
std
mov
jae
pop
jnp
enter
jno
sub
push
push
movsl
mov
xor
pushf
mov
test
inc
cmp
add
mov
ret
mov
mov
jnp
inc
js
outsb
add
popa
dec
sbb
loopne
enter
jo
ljmp
xchg
call
add
mov
cmp
rolb
xorb
in
or
sub
and
lahf
pop
add
xchg
clc
xor
lock
clc
stos
inc
shlb
or
inc
sub
fstl
test
shl
loopne
pop
imulb
dec
jge
cltd
outsl
cmp
orl
iret
mov
sbb
xor
jb
jle
hlt
icebp
push
adc
pop
clc
fistpll
fnsave
xlat
add
stos
cltd
fldln2
xchg
repz
xchg
xchg
je
mov
pop
enter
xorb
mov
mulb
cmpsl
nop
outsb
and
cmc
xchg
mov
cmp
lock
lds
dec
or
pop
out
int
xor
mov
xor
and
outsl
mov
pusha
leave
sbb
xchg
adc
or
les
cmp
inc
inc
adc
callw
dec
js
jecxz
pop
push
or
and
cltd
mov
adc
lret
mov
lods
fs
inc
mov
inc
bound
or
ret
andb
aaa
faddl
out
and
pop
pop
jle
mov
xorb
mov
hlt
in
cmpsl
jmp
les
pop
jo
rolb
mov
add
xor
and
mov
push
test
mov
out
out
xor
push
str
test
shrb
sub
mov
lods
jl
aas
pusha
dec
mov
mov
in
loopne
inc
jb
add
in
jp
or
cmp
add
inc
jmp
pop
out
sbb
sbb
fwait
fs
pop
jno
pop
rcll
mov
inc
add
pop
test
adc
addb
movsb
jge
jb
jns
add
xchg
mov
sbb
cwtl
out
or
nop
jo
insl
ss
paddq
cmc
and
cmp
mov
test
inc
inc
lret
das
jnp
adc
dec
cmp
in
xor
add
into
add
cld
daa
cmpsb
loopne
sbb
push
hlt
jo
add
or
dec
cmp
xchg
sub
fs
inc
adc
jmp
inc
adc
push
cwtl
sarl
test
movsb
rorl
shlb
test
mov
mov
popa
mov
and
rcll
add
pop
cwtl
mov
adc
mov
sbb
inc
jnp
test
repz
add
push
mov
inc
adcl
xlat
popf
jle
repz
and
shl
leave
adc
inc
jno
je
fs
loopne
add
inc
mov
and
jae
mov
sub
testb
pop
xchg
imul
nop
sbb
inc
test
into
inc
cmp
pop
test
bound
lahf
dec
push
repz
inc
cltd
loope
jb
add
xchg
xor
jecxz
imul
pop
jo
mov
lock
les
add
outsb
push
pusha
and
stos
rolb
add
negb
push
ss
and
push
jae
mov
std
inc
movsb
pushf
call
inc
jle
cmp
scas
add
out
cmp
and
imul
js
dec
rcl
loope
icebp
add
pop
xlat
xlat
xor
imul
lahf
ljmp
adc
push
les
ds
and
loop
dec
roll
sub
mov
in
cmp
pop
sbb
inc
call
xor
pop
add
cmp
scas
add
push
and
or
sub
sbb
mov
mov
jnp
pop
out
mov
das
push
xor
xchg
sbb
mov
pop
mov
hlt
push
adc
jl
push
pop
rcrb
icebp
cmp
xor
and
repz
aam
inc
out
in
insb
add
dec
lahf
imul
and
cmp
out
xorb
das
add
sbb
jle
int3
adcb
popf
fildl
pop
cwtl
lret
andb
mov
add
cmp
adc
xchg
dec
rcl
or
mov
fcoms
xor
nop
fistps
iret
sub
jmp
outsb
and
add
lock
mov
mov
or
xchg
nop
stos
sub
mov
or
jecxz
pop
xchg
pop
int
addr16
jl
sbb
push
mov
ffree
pop
vunpckhpd
add
lret
lock
push
arpl
lahf
call
jno
add
loope
jbe
and
lods
sub
pop
scas
push
sub
pop
pop
mov
xor
mov
scas
pop
sub
xor
push
call
fisttpl
sub
xchg
mul
push
and
adc
push
add
out
cmp
pop
xchg
roll
test
inc
add
lock
rolb
call
jnp
inc
sub
mov
jns
inc
sbb
les
fdiv
das
les
adc
adc
dec
dec
ror
test
xchg
mov
repz
gs
dec
movsl
loop
ret
inc
iret
insb
push
and
lods
data16
add
test
pusha
mov
push
inc
cmp
sub
and
sub
xor
dec
arpl
test
inc
mov
test
mov
out
push
mov
cmpsb
jecxz
enter
jg
pop
scas
movsl
dec
mov
xor
addr16
add
pop
in
jo
adc
adc
jle,pn
dec
pusha
ficoms
int3
fistps
mov
push
xchg
inc
nop
lods
or
xor
stos
jns
cmp
roll
sub
mov
push
cwtl
and
sub
add
in
icebp
xchg
mov
jo
in
mov
out
fcmove
stc
add
hlt
inc
mov
pop
mov
lahf
inc
call
hlt
or
mov
add
fs
shr
pop
repz
inc
add
mov
stos
rolb
bound
push
out
add
shlb
jp
add
push
jo
jg
shll
jp
add
mov
das
add
rorl
in
sbb
sub
int3
adc
cmp
stos
pop
lar
into
decb
push
std
and
pop
mov
inc
add
dec
sbb
das
mov
bound
mov
or
push
rcrl
adc
out
xchg
sub
test
mov
ljmp
fmulp
or
int3
sti
inc
and
jae
push
outsb
or
mov
popa
pop
xchg
cld
and
negl
mov
mov
andb
adc
enter
js
lock
jne
jmp
pop
les
aam
xchg
jo
xchg
jp
xchg
or
sbb
push
insb
mov
xor
cmc
xor
out
push
ljmp
js
je
icebp
mov
xor
xchg
or
and
lret
adc
roll
je
xchg
lods
pop
xor
inc
mov
add
mov
inc
adc
dec
jle
leave
rorl
sbbb
cwtl
iret
add
xor
pop
xchg
add
rcrl
xchg
adc
mov
mov
cmpsl
xorb
mov
idivb
enter
mov
repz
mov
or
jecxz
cmp
add
jno
shrb
int
das
pop
push
test
push
add
adc
xlat
adc
push
pop
cmpsb
xor
pop
shll
pop
or
pushf
andb
mov
dec
ret
add
push
push
mov
adc
add
stos
ja
sarl
nop
mov
nop
sub
gs
jo
dec
not
out
xchg
test
xor
mov
inc
loop
push
add
out
out
xchg
repnz
cwtl
aas
add
sub
mov
add
cld
dec
js
repz
mov
pop
add
das
and
notb
mov
in
cmpl
cwtl
and
lahf
and
add
loopne
andl
out
pop
adc
inc
je
add
or
add
inc
push
xor
lds
sbb
cmovs
inc
mov
xchg
add
scas
cmp
fucomip
add
jge
rcrl
and
or
dec
fmuls
add
movb
sarb
cmp
roll
popa
in
dec
dec
jno
adc
mov
and
pop
cmp
add
cmp
cltd
ds
lock
call
add
out
mov
in
lock
push
int3
add
cmpsb
cltd
inc
add
scas
mov
fdivrl
sbb
adc
jp
cld
addb
pop
and
movsl
or
add
sub
pop
add
inc
cwtl
mov
adc
and
jae
jg
lahf
fidivl
mov
mov
pop
lcall
mov
sbb
nop
or
cmp
mov
inc
adc
or
shlb
jge
adc
pop
out
xchg
dec
mov
xor
sub
repnz
inc
lret
ja
in
and
fdivl
add
mov
inc
int3
add
cwtl
mov
rdmsr
std
loope
in
mov
in
push
pop
add
icebp
test
shr
das
push
pop
aad
ljmp
int
fs
loopne
jl
push
movsl
mov
add
int3
and
add
cld
jmp
jg
sub
add
mov
mov
jns
xchg
adc
adc
shl
std
push
call
push
sbb
dec
and
addb
pop
dec
and
dec
cmp
pop
xchg
mov
mov
adc
out
lock
stc
frstor
lcall
scas
hlt
or
jmp
sbb
fstpl
loope
adc
mov
adcl
fdivrs
or
loopne
bnd
jbe
xchg
shlb
inc
mov
repz
into
sarl
hlt
fwait
mov
dec
inc
adc
dec
ret
adcb
jge
xor
in
mov
in
ja
shlb
dec
xchg
out
sbb
mov
adc
add
mov
sbb
add
mov
jns
or
xchg
test
jnp
push
pop
add
out
or
push
insb
rolb
or
hlt
bound
jne
insl
xchg
flds
shlb
push
clc
push
popa
lds
cmpsb
outsl
daa
aam
push
lea
push
aam
rolb
incb
stos
sbb
inc
test
mov
sahf
and
add
xor
sti
scas
orl
mov
rolb
test
add
or
out
clc
inc
loopne
jo,pt
or
add
dec
mov
sahf
inc
mov
add
int3
test
enter
mov
icebp
or
mov
mov
dec
mov
lock
shll
addr16
inc
pusha
push
xchg
fadds
mov
addb
aam
add
cs
dec
clc
mov
mov
push
test
out
pop
lret
loope
sub
fnsave
lock
popa
jne
push
inc
jnp
aam
fwait
rcrb
xor
adc
pop
test
and
add
icebp
push
push
lock
pop
xchg
jl
in
pop
jecxz
push
mov
pop
jg
add
cmp
pop
xor
sub
dec
cltd
push
or
xchg
loopne
clc
jmp
lock
jb
pop
outsl
add
xchg
lds
cmp
mov
or
sbb
hlt
xchg
add
addr16
mov
enter
pushf
mov
xor
dec
bound
cmp
pop
add
aam
dec
sbb
xor
jmp
pop
nop
inc
pop
jo
das
out
addb
inc
push
or
scas
iret
lock
sub
xor
adc
aaa
int3
push
push
push
hlt
nop
dec
dec
sbb
aaa
into
dec
push
call
scas
dec
push
orb
jmp
mov
or
dec
pusha
mov
cmp
jle
push
add
aam
orb
add
ss
out
push
nop
cwtl
movsb
daa
jnp
mov
pop
leave
add
sbb
into
lahf
cmpsb
add
pop
mov
and
dec
je
das
pop
enter
shr
push
ljmp
cmpl
mov
out
push
push
jns
movsb
xchg
or
add
jo
inc
stc
icebp
inc
fmul
xchg
mov
mov
push
sub
push
stos
fs
rorb
jmp
and
inc
inc
xor
aad
mov
and
sbb
cmp
addb
xchg
sub
je
movsl
dec
xchg
add
out
repz
sbb
inc
mov
dec
mov
test
or
insb
out
inc
or
mov
popf
cld
sbb
adcb
lods
mov
jne
je
and
sub
or
je
movb
fdivrl
and
xor
push
std
xor
add
fs
syscall
lcall
add
lods
cltd
add
xchg
insb
shll
dec
jp
fdivrl
dec
push
dec
cmp
sbb
add
outsl
leave
lret
mov
scas
sbb
mov
inc
test
xor
shlb
jno
or
adc
mov
in
xchg
sti
add
sbb
fldl
pop
call
xor
js
push
popa
shlb
dec
mov
hlt
add
or
push
iret
mov
adcl
xchg
cmp
mov
sbb
cltd
sbb
aas
push
enter
nop
and
jmp
nop
and
dec
cmp
push
lock
pop
and
ja
sub
sbb
outsl
ja
nop
push
add
inc
add
pop
push
mov
jecxz
test
in
nop
loopne
hlt
jmp
jbe
imul
sub
shll
int
rolb
adc
hlt
fsubrl
cmp
aam
mov
dec
xchg
movsb
push
orl
cmp
les
je
add
sub
add
push
xchg
push
add
or
add
fists
ljmp
lea
mov
imul
add
cwtl
dec
xchg
fisubrs
adc
and
sub
pop
insb
inc
enter
add
movsb
repz
and
das
push
jo
cmp
ljmp
sub
pop
mov
adcb
cmp
adc
xor
loopne
push
stos
adc
cmpl
popf
push
inc
push
aaa
mov
pop
lahf
ror
popa
repz
pop
push
xchg
adc
lods
and
outsb
loopne
dec
sub
mov
or
lcall
mov
mov
loopne
lock
pop
pop
or
stc
shl
lock
ret
add
mov
fdivl
cmpsl
mov
sub
rcrl
push
rolb
sti
inc
add
shlb
in
xchg
push
in
adc
push
push
addr16
decb
jp
leave
loop
mov
jae
add
mov
xchg
and
adc
sub
add
push
bound
out
xchg
xchg
pop
nop
rcl
dec
adc
sarl
jl
jae
addb
and
dec
pop
lods
pop
test
dec
flds
add
js
lock
sbb
and
das
aaa
pop
pop
rol
xchg
adc
xchg
ljmp
sahf
outsl
mov
or
inc
sub
jbe
pushf
mov
nop
mov
stos
adc
or
inc
push
mov
pop
cltd
pop
notl
lcall
test
mov
xorl
lret
mov
mov
dec
jg
je
xor
dec
add
fistps
or
in
shrb
test
icebp
nop
enter
dec
jp
and
sub
inc
inc
stos
add
fsubs
cld
push
add
nop
mov
jne
mov
mov
sub
testb
add
out
add
pop
enter
mov
shlb
inc
jae
push
enter
adc
fldenv
movsl
cwtl
sbb
cmpsl
sahf
push
adcb
add
orl
mov
pop
pop
dec
std
js
mov
in
add
push
sub
or
inc
sbb
jae
lret
roll
xor
add
scas
movsl
fdivs
jl
popf
add
fs
addb
pop
imul
xchg
cmp
cwtl
pushf
sbb
int3
push
dec
insl
call
push
add
or
pop
repz
dec
movsb
fldenv
cmp
daa
into
and
loope
ljmp
insl
clc
adc
test
outsb
mov
lahf
fdivl
xchg
and
test
movsl
jmp
inc
push
and
mov
jbe
mov
push
push
pop
add
js
or
aaa
sarb
mov
add
test
jmp
jle
inc
in
nop
pop
lds
fcompl
jg
cld
repz
sub
xchg
mov
and
shl
jp
jle
or
in
lcall
les
push
push
fisttpl
lds
push
push
shrb
mov
insl
repz
stc
hlt
xchg
call
leave
lret
pop
mov
push
dec
inc
xor
or
dec
stos
pop
mov
inc
cmp
cmp
cli
adc
add
dec
lods
cwtl
je
inc
repnz
inc
sub
cwtl
xor
lock
clc
sbb
mov
add
and
sub
add
add
sbb
pop
sbb
push
or
add
nop
sbb
stos
mov
mov
push
cmp
outsl
loop
jno
lahf
and
jne
not
pop
adc
inc
stc
pop
jns
add
xor
es
xor
dec
in
call
add
cltd
mov
dec
or
daa
rclb
fldl
jl
cmp
insl
xor
dec
pushf
xchg
enter
leave
sbb
scas
xor
inc
push
movsb
rcr
mov
add
dec
inc
add
movsb
inc
sub
mov
das
or
popa
pusha
inc
lds
test
sbb
or
call
mov
push
mov
add
xor
outsl
xor
mov
inc
enter
loopne
inc
cmp
adc
lret
jle
dec
xor
test
sbb
test
repz
rcr
mov
cli
add
fwait
mov
mov
add
dec
pop
out
push
int
add
jge
icebp
js
rolb
or
push
dec
js
call
outsb
mov
cs
sbb
insl
inc
pop
push
fucomp
popa
xlat
add
xchg
dec
pop
inc
orb
rclb
push
dec
add
pop
das
mov
pop
rcrb
out
xor
and
in
mov
push
add
sbb
rolb
int
out
mov
aas
incb
icebp
mov
push
shl
xor
inc
movaps
push
add
pop
call
mov
lcall
jecxz
mov
repz
pop
lock
popa
pmaxsw
jb
xlat
mov
jns
clc
add
ja
daa
or
rcrb
loopne
pop
lods
and
dec
getsec
cmp
loopne
lcall
sti
add
xlat
adc
add
hlt
dec
dec
das
jl
xchg
mov
nop
sarb
add
push
sbb
pop
dec
cwtl
or
enter
add
outsl
stos
popa
add
pop
enter
sbb
sbb
mov
sub
inc
in
call
xor
xor
stos
lcall
mull
sti
push
jecxz
push
lock
jmp
mov
pop
out
add
or
adc
ss
sub
inc
inc
out
adc
cmp
pop
dec
jno
or
xlat
fdivs
add
cld
pop
mov
jb
add
push
or
mov
repz
adcb
arpl
mov
pop
mov
in
lcall
adc
add
cmp
push
ljmp
mov
jg
xchg
adc
adc
scas
add
cli
mov
frndint
roll
cmp
sbb
arpl
sub
mov
into
sahf
add
push
sbb
cmc
subb
jns
add
out
out
mov
jnp
sbb
insl
test
ret
hlt
xor
cmc
mov
inc
out
ss
add
addr16
add
insl
aaa
jle
sub
popa
dec
out
dec
jbe
add
and
lods
push
ljmp
cwtl
das
aad
xor
pushf
pop
and
aaa
cwtl
loope
in
adc
xor
jmp
push
movsb
sarb
mov
add
add
dec
js
stc
xchg
cmp
mov
or
push
add
cmp
ja
xchg
jno
dec
ss
sbb
cmp
sub
push
add
mov
aas
jecxz
adc
aam
out
add
vpandn
clc
pop
push
addl
scas
xor
sbb
cmp
adc
sub
add
inc
push
lahf
xchg
add
sbb
mov
pop
or
test
rol
xor
add
punpcklbw
pop
pop
jge
cmpsl
add
std
and
add
cld
jecxz
adc
and
ljmp
call
outsb
icebp
mov
loopne
add
sub
test
xchg
cltd
jns
add
cmp
mov
je
push
subl
cmp
adcb
fildl
in
mov
mov
mov
cmp
je
jno
fs
mov
inc
inc
lahf
cmp
enter
dec
jmp
scas
sbb
add
andb
pusha
movsb
aad
push
push
lcall
lds
jnp
test
mov
data16
pop
jl
fs
popf
dec
pusha
sub
push
mov
pop
sti
aas
subb
scas
dec
add
dec
dec
cmpsb
adc
add
adc
dec
iret
lock
shrl
xor
icebp
arpl
add
leave
cmc
add
mov
push
push
inc
lds
popa
imul
jne
addb
xor
call
add
dec
je
sbbb
add
cmpsl
lds
sub
pusha
jg
xchg
call
or
cli
lcall
pop
mov
sti
repz
mov
gs
rcrl
imul
pushf
sub
add
into
js
add
outsl
push
call
jns
mov
inc
add
sahf
ret
dec
shlb
add
sti
inc
shrl
xor
xchg
xor
outsb
add
enter
xor
std
popa
loope
fdiv
mov
loopne
scas
add
mov
inc
test
push
add
mov
out
ja
cmpsb
add
test
add
sti
inc
shl
mov
xchg
push
add
shll
cld
ret
pop
or
mov
add
popf
stc
add
lahf
sub
xchg
cmpb
test
mov
or
add
push
sbb
inc
and
or
int
push
add
push
add
mov
int3
fwait
xchg
shrb
stc
add
enter
out
xor
add
cli
or
mov
test
jge
out
clc
push
arpl
das
subl
xchg
std
cmp
nop
in
xor
out
movsb
xchg
andb
and
xchg
inc
stos
add
xor
fidivrs
popl
mov
test
cmpsl
and
cmp
and
xchg
xor
mov
test
pushf
inc
jno
inc
aad
rolb
pusha
inc
lret
adc
dec
xor
mov
outsl
iret
or
add
out
in
sbb
push
and
and
dec
push
movsb
add
adc
bound
add
xchg
push
pop
out
and
dec
and
cmpb
rep
daa
mov
sbb
add
pop
or
lock
push
cs
insl
pop
fstpl
cmp
mov
std
in
dec
daa
add
inc
test
imul
mov
cwtl
add
sbb
lods
add
iret
sub
stos
aad
in
mov
push
int
dec
add
js
int3
test
inc
outsb
scas
xchg
adc
int
lods
es
and
mov
xor
fisubrl
mov
test
pop
int3
daa
add
js
out
xlat
cmp
push
aaa
shlb
xchg
inc
adc
int
jg
add
push
insl
inc
test
sub
cmp
add
stos
test
je
jno
add
aad
out
mov
stos
pop
push
repnz
andl
lret
repz
data16
shl
call
lods
stos
data16
xchg
pop
test
mov
testl
cli
mov
shr
jp
sub
xor
aam
sbb
dec
add
xchg
dec
in
xor
addb
adc
fstpt
adc
pop
dec
shlb
add
xor
lret
jge
incl
fisubrl
fwait
addl
cmp
insb
xor
pop
sub
add
decl
jae
pushf
add
mov
add
xchg
rclb
shrd
inc
and
mov
cltd
shrl
daa
out
lcall
jo
lahf
rcrb
call
add
mov
and
add
ret
in
mov
add
fisubrl
int
jmp
neg
add
xlat
sar
les
cmp
and
push
lock
movsb
add
sub
fnstsw
cmp
inc
loop
cmp
mov
lds
cmp
lock
xchg
adc
rorb
jno
adc
and
mov
inc
arpl
add
mov
mov
lcall
and
mov
rcrb
pop
jnp
dec
mov
stos
lock
cwtl
int
inc
xchg
push
aas
mov
mov
lea
jmp
add
dec
inc
and
push
cwtl
mov
xor
fsqrt
fsubp
popf
add
movsl
sub
mov
sub
ret
push
addl
cmp
cltd
fistpll
jl
pop
testl
add
and
clc
loop
loopne
add
jg
or
mov
pop
ret
test
lock
out
stos
add
in
repnz
std
inc
push
jge
pushf
addb
es
add
aas
jbe
ja
jae
mov
stos
mov
push
pusha
into
hlt
add
pop
adc
add
xor
sbb
mov
adc
lods
in
shrl
sub
enter
int3
outsb
out
xorb
mov
sub
or
lcall
adc
pop
popa
daa
aam
inc
add
mov
cmp
xchg
ds
adc
ds
push
addr16
xor
add
sbb
pop
loopne
mov
sbb
faddl
push
push
or
add
shll
mov
jg
pop
clc
mov
iret
push
sub
test
mov
add
and
adc
mov
adc
jae
push
std
cwtl
fwait
cmc
adcl
xor
push
movsb
pop
mov
adc
sbb
mov
add
popl
fwait
ret
and
mov
mov
pop
std
or
lahf
or
dec
aas
jb
adc
cmp
das
sub
ljmp
fisttpl
aas
push
inc
jl
dec
inc
es
cli
andl
mov
sbb
or
xor
invd
jmp
fistps
mov
rolb
in
adc
jnp
add
add
inc
add
faddp
cmc
adc
shrl
or
inc
fsubr
sahf
add
sub
lcall
loope
push
int
movsb
aam
add
and
sbb
cltd
addl
or
and
imul
or
push
popa
subl
sub
mov
add
cs
sarb
jbe
jns
pusha
pop
xor
jl
add
mov
xchg
xchg
mov
das
sarl
ret
lock
add
push
pop
push
xlat
cld
shll
inc
add
sub
xchg
push
js
dec
or
jnp
iret
cld
push
sahf
add
outsb
jo
adc
test
add
pop
and
call
xor
cltd
and
sbb
lret
sbbl
outsl
or
add
add
and
aaa
mov
int3
cmp
adc
fidivs
xor
int
test
xor
and
add
sbb
push
xor
and
jnp
repnz
fcmovb
mov
test
jmp
add
sbb
pop
loopne
push
loope
ja
cmpsb
mov
add
add
outsb
in
sbb
jb
pop
cli
rorl
cmpsl
pop
or
pop
add
enter
out
mov
sbb
mov
dec
ss
jbe
xchg
cwtl
mov
sub
daa
add
clc
std
sbb
jecxz
pop
xor
jge
add
xchg
outsb
inc
out
mov
pop
mov
push
faddl
dec
and
repnz
jmp
pop
out
inc
pop
fiadds
dec
ljmp
xchg
shrl
xchg
pop
pop
arpl
and
fistl
adc
test
call
xchg
adc
inc
pop
and
sub
int3
sbb
fcompl
movsb
xorl
lock
pop
jmp
inc
in
cmp
or
sub
cwtl
push
or
call
data16
test
cli
sbb
adc
pop
outsl
jmp
adc
ret
add
pop
popa
iret
es
push
push
pop
push
mov
cmp
adc
mov
fcmovne
or
push
aad
mov
std
je
pop
ficoml
push
lret
enter
jne
ja
add
jnp
js
nop
aas
sub
sbb
scas
xor
cmc
cmp
mov
and
into
push
mov
orb
in
out
fldl
clc
mov
mov
js
gs
or
stos
fildll
sub
subb
xchg
xorl
push
push
loopne
cwtl
mov
dec
pop
cmpb
push
fwait
mov
xor
das
xchg
adc
pop
mov
roll
mov
push
add
sti
dec
cmp
push
push
sub
inc
insl
adc
adc
and
clc
and
adc
insl
and
in
xchg
outsl
dec
jns
ljmp
adc
clc
int
add
xlat
repz
movsl
dec
mov
cmp
sbb
lret
pusha
inc
shr
ret
pushf
add
push
dec
push
leave
aaa
rol
fmul
pmaxsw
jb
andb
sbb
pop
mov
mov
dec
pop
ret
cmp
sbb
mov
gs
dec
lcall
fucomp
and
dec
add
mov
gs
aas
sbb
int3
add
addr16
or
pop
cmp
lahf
fsubs
jnp
xchg
mov
arpl
mov
jae
nop
inc
cwtl
sub
pop
or
js
or
mov
fsts
in
or
jbe
xor
add
inc
mov
lock
std
and
push
pop
xchg
in
mov
loop
sub
mov
sbb
sarb
jnp
push
mov
and
cmp
ljmp
dec
cwtl
data16
cmp
mov
cwtl
pushf
cmp
push
add
in
mov
mov
push
or
jmp
outsb
xor
cmp
rorl
push
loope
and
add
mov
cmp
push
incl
or
rol
roll
cmp
and
pusha
iret
adc
mov
insb
and
aas
add
out
decl
in
shlb
mov
push
out
mov
add
cli
mov
adc
xorb
sbb
and
xchg
push
int3
push
nop
icebp
cltd
add
and
leave
sbb
inc
cld
push
imul
rcrb
add
xchg
dec
test
add
mov
sbb
out
mov
jg
jmp
jns
lock
add
addb
push
cmp
mov
jno
add
mov
jo
mov
fistpl
mov
inc
mov
xchg
in
fdivrs
add
es
je
aas
push
sub
daa
les
sub
cmp
mov
outsb
inc
clc
push
cmp
xchg
in
dec
sti
or
push
xchg
mov
movsb
dec
cltd
mov
out
add
pop
mov
fmuls
jg
push
loopne
movsb
stc
add
fcomi
shll
hlt
sbb
or
ret
xor
jmp
xchg
stc
int3
fmuls
and
dec
dec
imul
repnz
sahf
add
jge
sub
add
outsl
push
add
mov
call
mov
std
repnz
rcrl
cmc
push
pop
pop
fidivl
add
jnp
addb
dec
cmp
scas
lea
call
test
imul
mov
add
mov
in
mov
xchg
mov
add
scas
sub
shll
push
cmp
arpl
dec
gs
pop
mov
imul
pusha
es
out
mov
mov
add
or
pop
mov
dec
scas
pop
jbe
add
gs
fcoml
lcall
xor
cmpsb
add
popf
xchg
push
lods
test
add
adcb
xor
push
pusha
cmp
repz
popf
lock
nop
aas
add
xchg
movsl
bound
icebp
ja
jae
hlt
cmpsb
push
ds
fwait
add
add
hlt
roll
inc
lret
xor
xor
sub
mov
add
arpl
inc
data16
push
or
int3
test
cmp
clc
mov
minps
ja
lret
testl
movsl
jl
push
arpl
pop
call
inc
mov
or
mov
pusha
mov
jp
inc
add
nop
repnz
mov
jae
hlt
mov
fisubrs
mov
nop
sbb
into
add
idiv
in
ljmp
fs
pop
pop
mov
mov
mov
inc
rcrl
add
add
rol
out
cmp
pop
cmp
ds
mov
xor
add
lret
xchg
jbe
loope
clc
pop
insb
cmp
push
dec
js
int
xor
mul
aas
mov
cmp
je
sti
xorps
lret
or
or
jle
es
les
ljmp
xor
sub
add
rorb
ltr
inc
ja
decl
add
jp
mov
testl
stc
jae
in
sbb
or
inc
lret
bnd
call
sub
jo
aam
xor
xchg
fsubl
or
inc
shrb
je
push
or
mov
fcmovbe
or
adc
adc
das
add
jecxz
mov
add
or
push
lret
xor
and
cltd
pop
mov
popf
pop
test
cmp
jge
or
nop
stc
jl
cmp
sbbb
addl
xchg
fiaddl
mov
sbb
mov
test
add
mov
and
add
lock
arpl
nop
testl
inc
add
mov
addl
dec
push
cmp
popf
cmp
inc
popa
aam
add
subl
mov
inc
repnz
and
jo
jmp
jbe
add
cmp
sub
xchg
xor
push
ret
xchg
cmpl
mov
or
rorb
add
aas
mov
cld
ss
push
repnz
shlb
xchg
loope
ds
mov
add
adc
adc
subb
cmc
cld
jae
pcmpgtd
add
push
add
cld
or
lock
fcompl
mov
mov
sub
add
dec
sbb
movsl
mov
push
add
out
push
in
sbb
mov
sub
sbb
mov
push
imul
add
push
adc
sub
cmp
jmp
nop
insb
add
movsb
and
in
add
pop
rcl
movsb
cmp
add
mov
je
add
jp
enter
add
jle
loop
lods
dec
imul
into
fcmovnbe
mov
pop
enter
mov
add
lret
in
adc
cmp
xor
jno
xchg
add
mov
lret
dec
scas
cs
adc
pop
push
lahf
stc
fistl
add
pop
pop
filds
xchg
inc
das
cs
clc
lds
fimuls
jle
add
push
pusha
jno
rcrb
lock
int3
or
inc
scas
jo
es
ss
out
add
pusha
sbb
xlat
add
iret
jae
sar
xchg
pusha
pop
jb
loope
enter
sbb
or
shrl
aad
mov
pop
int3
call
nop
stos
out
cmp
push
daa
sahf
pop
add
pop
outsl
cs
pusha
pop
mov
rclb
mov
cmp
cmp
pop
mov
mov
repnz
push
adc
cwtl
das
jne
add
loop
xchg
xor
stos
inc
sub
mov
sbb
sub
jl
add
push
cmp
inc
rclb
mov
sbb
inc
xor
iret
in
xchg
xlat
push
maskmovq
mull
add
or
imul
shlb
adc
add
fistl
inc
imul
lds
mov
ficoms
bound
out
mov
mov
add
mov
xchg
jb
add
sub
je
dec
inc
addl
ret
ljmp
sahf
or
rcr
add
inc
mov
mov
mov
movsl
jg
add
and
aas
pusha
mov
popf
jnp
add
aam
push
cmpsb
scas
aad
adc
data16
test
push
outsb
add
jl
cld
add
ss
add
push
xchg
mov
movq
jecxz
ret
loopne
push
repnz
add
mov
iret
push
lods
mov
xchg
sub
mov
bound
and
jne
shll
pop
scas
scas
add
and
jmp
inc
sbb
je
push
scas
imull
cld
arpl
mov
fwait
push
add
pop
popf
scas
pushf
or
mov
add
cmpsl
lds
test
push
repnz
mov
or
call
mov
test
icebp
add
sbb
push
fdivl
std
add
jo
nop
inc
and
push
jb
sub
out
jb
in
out
mov
add
cmp
sbb
sbb
loop
cli
push
xor
or
xlat
mov
lods
mov
jo
iret
scas
adc
dec
cli
movb
rcr
je
add
addr16
repnz
push
test
push
pop
in
fpatan
hlt
fwait
aaa
add
cmpsl
fists
lods
daa
add
mov
add
inc
add
jo
addl
gs
push
stc
sbb
push
or
adc
movsl
std
arpl
adc
fsubrs
int3
add
xchg
lea
jns
hlt
add
or
dec
push
sub
je
cmpl
daa
push
add
lds
add
cmp
fwait
inc
xchg
add
jae
in
pop
cmp
pop
pusha
jbe
and
pop
xor
stos
mov
mulb
jno
test
adc
in
mov
inc
fsub
aas
add
cld
pop
or
aad
leave
test
outsl
das
xor
add
inc
mov
sarl
add
push
xlat
popf
jmp
mov
push
dec
and
stos
orl
mov
daa
test
fsubrs
aam
addl
xor
or
es
pusha
mov
jle
mov
cmp
mov
repnz
orb
or
js
mov
or
inc
or
pop
adc
ficoms
int
test
loopnew
push
mov
add
aad
test
jne
std
pop
addb
jmp
mov
in
dec
out
dec
add
push
inc
push
add
sub
fnstenv
cmp
or
cmpsl
andl
jo
fistl
sbb
add
or
sub
xchg
inc
lahf
pushf
add
fsubrs
add
push
je
sbb
xor
mov
sarb
sahf
dec
faddl
or
adc
loopne
add
testb
cmpsb
fsubrl
insb
js
adc
inc
xor
shlb
cmc
out
xor
xor
push
push
sbb
or
pop
ljmp
inc
jns
push
add
es
lret
mov
and
add
push
rorb
mov
mov
mov
lock
add
clc
js
jp
cmp
add
popa
mov
and
test
out
push
xor
cwtl
dec
mov
and
jl
add
imul
test
xor
in
lret
jb
cmpsb
clc
cwtl
add
jns
add
xchg
in
and
jb
add
jmp
outsb
lds
popf
and
pop
pop
mov
jecxz
add
arpl
and
add
pop
cltd
imul
add
aaa
and
xor
lock
rclb
lcall
out
test
enter
fdiv
mov
popf
xor
sbbb
xorb
and
test
addb
pop
adc
es
push
add
loope
push
cbtw
test
cmp
iret
fidivs
push
and
and
add
fstpt
int
sub
dec
clts
mov
xor
or
lret
mov
lods
out
adc
push
mov
pop
adc
ficoml
add
add
jns
xor
pusha
add
lea
cld
add
out
repnz
sub
jbe
mov
or
notl
add
push
in
add
sbb
jmp
add
fst
adc
sub
pop
dec
mov
outsl
imul
test
add
aas
pop
pop
ss
jge
xchg
adc
cmp
dec
test
mov
lods
aaa
hlt
fsubrl
sub
xorb
pop
addr16
stos
int
orl
push
push
cmp
in
fidivrs
aaa
or
pop
out
out
and
mov
jge
dec
mov
lods
mov
pusha
pop
sub
inc
push
stos
add
dec
mov
add
sbb
add
es
addl
cmpsb
pop
mov
pusha
lds
xor
out
add
ja
mov
pushf
out
gs
pop
dec
int3
incb
sub
mov
rolb
test
xorb
add
lock
or
dec
les
fs
sbb
pop
push
xor
pop
pop
add
popw
test
nop
jnp
dec
pop
add
inc
add
shl
add
icebp
not
add
mov
xchg
daa
add
fsubrp
fldt
pushf
es
push
icebp
cmp
pop
aas
or
aaa
jmp
cmp
xor
pop
adc
or
sbb
icebp
mov
shrl
loop
or
sub
movsl
shlb
jo
out
call
xor
push
mov
loopne
mov
movsb
andl
push
fcmovnb
cmc
mov
push
ljmp
xor
and
ljmp
mov
clc
add
out
mov
cmp
pop
inc
adc
xor
lret
stos
lock
xor
rclb
push
sub
mov
leave
and
sbb
add
jo
hlt
call
adc
xor
loopne
sbb
cs
inc
pusha
decb
mov
mov
mov
sub
push
rcll
loop
and
lahf
enter
mov
add
scas
cs
add
mov
insb
add
xlat
andb
rorb
pop
cmp
inc
cwtl
sarb
mov
cmp
loopne
adc
adc
jbe
xchg
mov
inc
xchg
sub
jmp
xor
xor
testl
adc
jp
cmp
cmp
add
cwtl
add
andb
add
cmp
dec
lock
imul
jno
cmpb
es
add
or
outsb
sub
sti
addr16
nop
mov
bndstx
lods
add
in
gs
add
cmpsb
xor
add
pop
mov
mov
jp
add
sub
daa
les
xor
mov
jbe
cmc
xchg
movsb
add
pop
fwait
data16
aad
mov
fisttpl
cmp
mov
adc
dec
push
sbbb
lahf
cmp
movsl
xor
jno
ja
add
cmpsb
mulb
cmp
enter
cld
scas
and
imul
cli
mov
xchg
imul
cmpsb
push
cmp
enter
cs
cmp
std
add
sub
cmp
sub
lods
add
mov
in
push
lock
rcll
lret
int3
and
loopne
cmp
xor
adc
sbb
inc
cmpsb
loop
add
push
dec
std
shlb
sbb
ret
inc
aam
enter
nop
jae
pop
cs
add
dec
push
sub
in
pop
repnz
outsb
ds
pop
test
ret
sbb
lods
sub
rolb
jle
pop
xchg
push
pop
repnz
js
sbb
lcall
mov
cli
jns
stos
xchg
or
popf
jg
pop
sti
add
fcmove
jmp
ret
xchg
out
enter
fiadds
add
insl
cmpsl
push
xchg
push
inc
sub
add
les
int
adc
adc
mov
mov
lds
sbb
dec
pop
adc
and
dec
mov
mov
iret
in
push
cmp
add
je
js
int3
adcb
leave
xchg
stc
sub
sbb
inc
mov
xor
repnz
add
syscall
imul
xlat
add
bound
addb
add
add
stos
mov
fdivs
sbb
nop
pushf
cld
jle
fs
add
jo
pop
lcall
lock
jne
test
fcoms
or
popa
icebp
imul
imull
into
add
scas
jo
int
push
adc
adc
call
xor
add
lahf
pop
insl
mov
jb
pop
adc
adc
pop
or
adcb
xchg
xor
faddp
add
push
jmp
in
pop
stos
cmp
xchg
push
test
insb
mov
loopne
pop
js
push
cmpsb
test
aas
sbbl
cmp
mov
pop
mov
pop
pop
mov
mov
aam
xchg
mov
in
rorb
lcall
sbb
movsb
mov
push
es
test
cmpsl
andb
fmull
maskmovq
in
jl
dec
ret
or
add
inc
push
in
add
outsb
push
add
sahf
shll
jb
add
fistpl
cmp
aad
xor
add
add
cmp
jne
sub
fstpt
outsl
pushf
mov
or
jmp
fdivrl
cwtl
xor
call
addr16
ret
or
repz
cwtl
fmuls
push
jnp
add
dec
sbb
lea
inc
mov
pop
xchg
dec
dec
and
xchg
xchg
or
addb
push
fsub
mov
adc
add
in
mov
imul
fsubrp
aaa
push
push
push
pop
mov
clc
jle
mov
leave
sbb
pop
sti
testl
sarb
mov
out
jp
fchs
outsl
cmp
add
sub
mov
mov
cltd
mov
add
cmpsl
jae
rcrb
and
out
push
stc
out
jmp
sub
test
stos
add
push
mov
add
lahf
gs
push
in
push
and
add
les
mov
sarb
cmpsl
cmpl
in
pop
pop
popl
lods
push
in
iret
sub
lret
mov
push
mov
out
add
jbe
push
shll
cmpl
dec
add
repnz
add
sbb
push
call
pop
lcall
xor
cltd
ja
test
hlt
shr
mov
flds
pop
clc
jnp
lret
in
xor
jg
mov
test
xor
subl
or
add
cwtl
pop
push
cmp
or
inc
enter
mov
sub
push
dec
mov
sub
lods
pushf
add
aaa
les
add
mov
cmp
cli
xor
cmp
shll
js
add
jns
and
adc
testb
mov
add
clc
aas
scas
pop
sub
pop
push
shrb
inc
iret
add
mov
shl
sub
mov
or
push
xor
xchg
dec
add
jle
mov
add
xchg
add
fiadds
xchg
pop
pop
inc
ds
out
lock
dec
pop
jl
lods
loopne
xchg
or
int3
daa
and
jge
dec
sti
jnp
add
mov
flds
xchg
mov
jmp
pop
mov
push
adc
ret
icebp
inc
push
xor
pop
lods
add
insb
popa
pop
add
jb
movsl
sbb
int3
lds
jecxz
nop
ljmp
gs
add
adc
sbb
cld
and
cmovae
mov
and
fcoml
add
mov
cs
mov
add
push
mov
loop
add
sbb
nop
mov
mov
mov
sub
add
xchg
pop
add
fwait
cmp
ficomps
add
fidivl
cs
inc
stc
add
jno
rcrb
mov
gs
pushf
shl
insl
rcrl
jnp
fsts
imul
sub
xchg
sbb
in
in
push
clc
in
and
cmp
clc
mov
cmpsb
mov
incb
pop
mov
pushl
cwtl
mov
cmp
loopne
inc
popa
adc
dec
into
and
add
push
out
shlb
js
dec
lods
rorl
cmpsb
paddd
add
add
add
adc
cmp
pop
jle
sbb
adc
addr16
or
sbb
mov
pusha
push
mov
cmp
push
jne
xchg
add
add
xchg
push
pop
mov
inc
lea
int
xor
ds
add
in
jne
sub
adc
rcrb
pop
mov
lds
cli
aaa
pushf
adc
clc
loope
leave
or
and
add
sub
cmpsl
jge
jno
dec
fs
popa
sbb
add
aas
icebp
mov
dec
adc
adc
scas
inc
fstpl
movsb
mov
faddp
out
mov
push
push
mov
mov
pushf
and
fdivrs
rclb
mov
sbb
andb
imul
and
xchg
jne
mov
sub
fbstp
mov
fucomp
repnz
in
pop
cltd
pop
hlt
mov
leave
add
xor
cwtl
sub
ret
add
or
orb
add
or
add
xchg
xchg
mov
iret
inc
add
jb
pop
faddl
xchg
pop
cld
adc
push
cli
scas
loop
add
push
shlb
jl
add
das
and
in
pushl
sbb
cmp
jge
adc
inc
leave
call
or
jnp
push
add
outsl
adc
lods
push
fs
add
add
sbbb
imul
xchg
and
add
ret
mov
pop
outsl
add
xorb
test
mov
movsl
push
fwait
mov
adc
mov
pop
data16
jo
add
pusha
aam
repz
dec
cltd
add
test
mov
les
in
sahf
ret
mov
addr16
jg
inc
int3
mov
jmp
mov
imul
je
test
sub
add
sbb
cmp
jl
add
insl
push
inc
orb
nop
sub
sbb
and
and
jmp
or
ss
and
inc
div
add
fstpl
ljmp
mov
mov
inc
push
push
xor
push
add
and
stc
add
add
rolb
aaa
xor
adc
shl
pop
lahf
cmp
dec
inc
daa
cmp
sarl
fistps
and
std
fwait
mov
das
outsb
mov
daa
add
inc
and
lahf
mov
pop
jnp
dec
mov
jmp
iret
push
cwtl
add
rorb
clc
or
xchg
out
push
sub
mov
out
daa
add
inc
dec
insl
mov
mov
pop
imul
jae
add
inc
pusha
jns
into
mov
sub
jle
add
fistpll
add
int3
int
lcall
push
fists
pusha
jg
pop
bound
mov
mov
xchg
outsl
cmp
lods
or
hlt
add
sub
pop
scas
sub
add
outsl
andb
jns
sbb
sbb
divb
ja
push
or
orl
jbe
dec
outsl
mov
mul
xchg
inc
cmp
les
int
mov
xor
lea
cmp
addb
out
sbb
mov
jge
lahf
add
add
cmp
jne
imul
add
jno
mov
mov
fwait
aaa
pop
add
push
arpl
and
sub
and
xor
std
out
and
jne
scas
add
dec
push
xor
push
cmp
adc
add
mov
es
push
pop
pop
jge
pusha
and
in
and
xchg
add
arpl
mov
shrl
jl
fildl
push
push
mov
pop
sbb
ljmp
mov
jle
dec
lea
imul
cmc
pop
mov
and
clc
lock
mov
aam
jo
pusha
add
or
and
and
and
ljmp
adc
int
add
stc
jecxz
and
clc
stos
jge
dec
or
pushf
mov
flds
fiaddl
and
cmpb
fs
sbb
mov
test
dec
cmp
add
pusha
mov
add
xor
aaa
test
fiadds
in
les
loope
in
nop
and
push
xor
out
arpl
repz
dec
adc
mov
add
inc
mov
add
dec
xor
add
mov
pop
jmp
add
xchg
dec
iret
pop
xsaves
not
cli
jle
ficoms
pop
aam
sbb
clc
push
add
xchg
sub
lods
push
add
out
sub
xchg
mov
aam
add
dec
jecxz
rorb
pop
mov
mov
mov
sub
xchg
mov
int3
adc
add
sarb
cmp
subl
mov
jb
lock
add
ret
xor
daa
add
in
mov
and
orb
mov
push
out
icebp
or
repnz
jbe
insb
push
and
pop
add
test
out
xlat
shrl
inc
in
push
xor
aad
cmpb
mov
call
into
xchg
add
or
cmp
lahf
mov
and
incl
mov
in
add
scas
push
add
mov
pop
xchg
fwait
shrl
mov
fsubr
popa
cld
push
loop
add
repz
pushf
add
movsl
lret
add
push
jmp
gs
adc
inc
mov
test
out
xchg
and
loopne
xorb
mov
scas
jmp
mov
in
add
cmpsl
and
hlt
cmp
aam
or
jb
dec
out
ret
inc
outsb
dec
pop
push
mov
cmp
mov
jns
mov
cmp
xchg
je
add
jp
in
daa
ljmp
shlb
and
gs
sti
into
inc
sub
shlb
add
pop
call
xlat
rorl
sbb
repnz
int
je
inc
sbb
add
fildl
lea
outsl
movl
fbld
popf
nop
and
popa
in
imul
hlt
loop
xorl
jle
adc
clc
xor
add
add
adc
sbb
jne
hlt
repnz
daa
addr16
or
and
aas
sbb
outsl
loopne
and
lahf
cld
out
or
add
dec
xchg
xchg
add
ds
cwtl
sbb
push
int3
jle
cmp
aad
add
shrb
lret
rcrb
imul
cld
cmp
fdivrs
xor
fadds
cmpsb
mov
cmp
rcrb
jbe
mulb
jno
sub
ret
aas
pop
sbb
lret
lds
jns
adc
add
adc
aaa
outsl
push
es
cli
xor
adc
add
repnz
mov
xchg
pop
jb
add
mov
jg
std
jecxz
cmp
cmpsl
jo
call
pop
pop
sbb
add
push
nop
aam
cltd
jne
sub
jl
add
cwtl
testb
fsub
les
fldl
add
call
fmuls
push
out
and
mov
inc
lds
in
dec
push
inc
popf
sbb
fldenv
jmp
jmp
in
mov
hlt
add
and
jb
in
jne
call
xchg
stos
ds
imul
cmp
xor
je
shll
xchg
add
pusha
mov
xchg
sub
add
jmp
mov
push
out
adc
in
popl
mov
xchg
push
call
add
cmp
shrb
mov
or
sub
pop
in
out
add
test
pop
xchg
sbb
movsl
addl
mov
push
imull
les
adcb
out
aad
jg
xchg
xchg
cmp
add
xor
test
mov
gs
int3
add
or
or
les
repnz
jmp
ret
jecxz
adc
add
and
push
cmp
outsb
cmpsl
xor
adc
push
cltd
push
push
int
and
lods
cmp
std
mov
dec
loopne
je
ficomps
add
dec
aam
fsubrl
cmp
int3
jae
xchg
push
cmpsb
pop
call
in
movb
cli
jae
cltd
or
inc
inc
xor
and
adc
imul
xchg
aam
divb
add
pop
push
pop
mov
sbb
push
mov
dec
pop
out
xor
dec
out
xor
test
mov
pushf
jge
insb
push
mov
add
mov
rcrl
incb
cmp
xchg
mov
push
out
in
pusha
jb
roll
add
call
in
rcrl
pop
mov
call
pop
sbbb
dec
mov
and
mov
and
xchg
jmp
les
int
ss
adc
sbb
push
xchg
sti
add
lds
mov
xor
xchg
sbb
add
je
sbb
and
cmp
dec
movsl
lea
add
jp
aaa
gs
xchg
adc
pop
imul
test
mov
mov
xchg
loope
mov
outsl
outsb
mov
inc
test
push
mov
lods
mov
mov
pusha
add
insl
xchg
jge
sub
add
mov
loopne
pop
imul
scas
xor
lea
aad
sub
ljmp
pusha
jno
test
cs
jno
cmp
js
or
mov
add
adc
sbb
test
cs
lods
xor
orb
cltd
add
mov
pushf
and
test
sub
sti
sbbb
inc
add
movsb
dec
arpl
shlb
dec
mov
hlt
xor
mov
xor
lods
hlt
cmp
inc
shlb
pop
mov
xor
outsl
das
inc
sbb
nop
sbbb
mov
aaa
xor
std
jo
xlat
xorl
or
ds
std
sbb
cmp
jge
inc
pushf
pop
repnz
adc
sbb
in
jg
stc
xchg
aas
xchg
xchg
pop
mov
rcll
testb
cmp
adc
add
fldt
add
mov
cmp
hlt
adc
test
pop
adc
cmp
push
dec
inc
cmpsl
xchg
iret
mov
dec
inc
enter
push
dec
jns
mov
mov
scas
lahf
add
pop
xchg
jle
shr
add
popa
mov
add
outsl
iret
inc
cmc
sub
inc
add
jmp
dec
add
pop
lods
mov
add
cmp
jo
xor
or
mov
out
fsubr
cltd
arpl
mov
fistl
xor
shrl
repz
sbb
out
or
inc
jmp
mov
pushf
sub
jb
add
nop
adc
mov
sub
push
and
add
out
out
jb
cmp
add
imul
pop
mov
add
enter
mov
sub
pushf
mov
and
mov
shrb
sub
push
in
adc
out
mov
mov
dec
push
inc
imull
pop
xchg
call
and
gs
pop
and
fists
adc
add
test
inc
mulb
cmp
outsl
aaa
push
pop
fidivl
clc
cmpb
xchg
sub
cli
inc
sti
and
cmp
mov
shrb
loopne
int
add
daa
xor
add
mov
mov
add
lea
fiadds
cmp
js
cs
xorl
ror
bound
dec
cmp
inc
or
call
mov
ret
loopne
pop
and
push
sbb
repz
mov
dec
sti
mov
inc
clc
pop
add
subb
mov
je
add
flds
xor
lret
jl
pop
iret
mov
and
pop
dec
add
orb
cld
fdivs
cwtl
adc
cmpl
and
or
aaa
or
or
push
or
sbb
nop
fisubl
mov
sbb
aam
shl
pop
sub
inc
xlat
popl
pop
add
inc
clc
jae
add
shlb
sub
or
inc
stc
enter
imul
das
add
scas
jns
mov
jno
pop
jnp
lahf
aaa
testb
add
xorb
stos
out
add
mov
xchg
add
fisttps
inc
add
aas
je
enter
cli
outsb
test
dec
mov
flds
popl
shll
fmuls
adc
mov
ror
cmp
sub
nop
das
ds
mov
scas
mov
dec
xor
push
sbb
jge
in
mov
push
add
pop
cmc
cli
out
loopne
sub
pop
into
pusha
stos
aad
jnp
push
push
adc
jae
mov
dec
call
fdivs
xor
sbb
fdivs
inc
addb
or
mov
test
xor
mov
out
neg
aas
add
dec
pusha
mov
sbb
or
test
xor
enter
mov
inc
xor
mov
lds
inc
aam
sbb
stc
mov
cmp
scas
adc
cmpsl
jnp
sub
sbb
mov
shlb
xor
xchg
orl
jo
xchg
loope
add
xchg
sbb
mov
cmp
push
dec
dec
lret
ficoms
shrl
icebp
push
bnd
in
cmp
push
jbe
aad
rolb
call
lds
repnz
add
xlat
jbe
sbb
imul
scas
jno
xchg
out
xor
and
loope
inc
pop
bound
add
adc
enter
movsb
jb
add
push
add
xchg
ret
scas
test
xchg
mov
lret
mov
pop
ret
and
jl
sbb
testb
in
in
cli
and
sbb
sbb
jb
in
dec
js
sbb
mov
and
in
das
add
sub
or
nop
jle
and
fcoml
cmp
push
and
out
and
int3
sub
imul
add
in
js
jmp
dec
push
in
add
jmp
jl
leave
mov
bound
test
daa
hlt
push
jnp
and
and
push
mull
jle
adc
or
xchg
add
mov
mov
adc
pop
add
or
fmull
js
pop
gs
outsl
jo
pop
mov
pop
mov
fsubrs
test
imul
int
mov
cmp
jno
inc
inc
sahf
cs
mov
movsl
fsubs
jo
add
sbb
neg
aas
aam
mulb
dec
sub
pop
loope
add
dec
divl
adc
pop
pushf
xor
ds
notb
bound
pop
push
popf
add
jnp
iret
mov
xchg
ja
fdivrl
jecxz
adc
daa
cmpsb
jle
jle,pn
rorb
repz
cmp
cmpsl
fsubl
stos
loope
dec
sbb
or
divb
ret
sub
mov
xchg
in
popf
mov
cmp
adcl
js
and
xchg
mov
out
in
sahf
in
add
mov
xor
popa
aam
jle
stc
nop
add
int
sub
inc
xchg
arpl
and
add
mov
mov
sbb
inc
add
mov
bound
stos
les
jl
rcrb
cmp
add
aad
jno
inc
std
mov
scas
mov
xchg
dec
jae
mov
cmp
mov
sbbl
out
xor
mov
jno
mov
cmp
cli
push
or
andb
jge
mov
add
xlat
inc
or
mov
ret
cmc
xchg
or
cmpsb
pop
in
add
imul
daa
adc
or
xorb
out
ja
push
pusha
in
sti
adc
jg
xchg
mov
cmp
xor
add
fildl
xorb
cmp
out
or
mov
xor
mov
sub
addb
dec
and
dec
mov
jge
in
jns
inc
xor
fiadds
jno
sub
scas
adc
xchg
mov
lock
or
add
nop
cmp
daa
in
add
and
fimull
loope
into
mov
inc
xor
jg
inc
mov
test
enter
mov
cmp
sbb
sub
jg,pt
adc
push
jle
pop
add
jae
insb
dec
das
rclb
mov
push
addr16
lock
jg
pop
mov
popa
fucomp
jge
es
jns
addl
cmp
sti
xchg
jg
out
adc
into
cli
xchg
inc
lcall
fisttps
clc
add
arpl
int
jg
mov
cmp
aam
ror
xor
mov
cmpb
leave
push
mov
mov
xor
int3
sub
or
cmpsl
add
fistpll
test
mov
xchg
dec
movsb
enter
imul
mov
add
popa
add
ret
out
sti
aas
outsb
lock
hlt
or
or
sub
cs
inc
and
mov
bound
lods
lock
mov
stos
lcall
xchg
mov
cmp
sbb
movsl
jle
scas
jg
or
and
cld
cmpsl
adc
dec
jbe
lahf
push
ret
sub
cmp
bound
xor
xchg
xor
sub
enter
shll
mov
dec
mov
push
loopne
jge
mov
xlat
sub
and
mov
sbb
inc
add
shlb
loop
repz
in
shr
jne
jmp
or
mov
mov
shrd
pop
pusha
test
cmp
xor
cmp
push
cld
test
jno
cmp
or
pop
and
push
mov
add
cmp
out
jmp
jb
add
mov
inc
cld
out
nop
or
or
dec
sub
xor
xchg
data16
cmp
inc
nop
mov
push
jmp
mov
repz
sbb
sahf
sarl
int
les
or
shlb
mov
hlt
or
jns
xor
ds
or
sahf
pusha
xor
testl
ja
mov
or
mov
sar
mov
or
scas
lahf
cmp
jp
sub
cmp
push
loopne
loope
inc
call
push
je
jo
mov
mov
test
sahf
push
sub
fucomp
shr
hlt
add
and
cmc
out
sub
sbb
mov
push
rcl
sbb
cli
push
cmp
aam
cmp
dec
dec
or
or
bswap
sbb
aaa
out
gs
das
sbb
and
jge
xlat
les
xchg
pop
jo
nop
sbb
imul
ja
in
and
dec
jmp
inc
gs
rclb
mov
add
xor
add
mov
lock
out
cmp
adc
sbb
rclb
cmp
inc
xlat
push
add
cmp
inc
or
repz
sbb
adc
cmp
add
mov
addr16
cmpsl
lahf
fsubrp
adc
push
rcll
or
fs
lret
dec
sbb
inc
das
pop
hlt
push
mov
pop
sbb
adc
xorb
adc
dec
push
pushw
push
mov
or
push
pop
imull
cmp
stos
push
xor
cmp
and
add
xor
sbb
cs
nop
aas
fsubl
rol
rcrl
es
cld
inc
pop
sbb
pop
arpl
jl
clc
lods
pop
scas
cmovo
cld
jo
hlt
xchg
pop
or
mulb
pushf
add
push
dec
sub
addb
cli
add
out
cld
sub
jns
adc
jge
or
or
xchg
fwait
shrb
into
add
and
mov
push
and
add
dec
and
or
xchg
jp
lret
xor
mov
add
sbb
out
inc
sub
push
nop
pushf
and
xchg
test
jnp
lret
movsl
mov
or
ret
dec
movsb
insb
dec
and
roll
push
add
sbb
sti
fst
push
push
xchg
mov
or
jl
sbb
adc
jmp
subb
ds
xchg
add
inc
add
data16
add
cmpsl
imul
pop
cmp
test
stos
in
nop
pushf
daa
in
cwtl
xor
xchg
je
andb
leave
sbb
andl
and
cmpsb
and
add
sbb
push
icebp
push
data16
push
xor
cmp
xlat
sub
jecxz
cmpsl
dec
repnz
sub
rclb
jns
inc
int3
mov
or
cmp
out
mov
xor
enter
ret
shrl
mov
imul
add
push
jo
push
scas
add
jno
insb
xchg
aas
mov
push
dec
movsb
inc
sbb
push
adc
cs
add
dec
adcb
cmp
pop
mov
push
cmp
nop
jl
adc
sub
push
jmp
imul
jge
enter
cli
fwait
xor
pop
add
lret
nop
out
mov
or
stc
rorl
aaa
add
gs
inc
lock
pop
inc
aam
or
or
xchg
dec
lret
nop
cmp
xchg
pop
dec
add
sti
lds
xor
pop
push
icebp
dec
inc
stc
push
ss
aam
or
sbb
or
and
out
je
mov
jmp
rolb
cmp
popa
dec
jbe
loopne
scas
adc
leave
and
jmp
xorb
pop
jnp
xchg
inc
inc
in
add
mov
daa
xorb
jge
addb
in
std
mov
test
and
sub
js
mov
flds
movsb
pop
lock
cld
outsb
ss
mov
rcrl
mov
and
pushf
aaa
mov
or
testl
mov
movsb
aas
add
mov
xchg
xlat
inc
fcomps
int3
lds
add
sahf
fdivl
adc
pop
adc
add
std
aas
into
mov
add
mov
cmpsb
cmp
or
pusha
addb
add
pop
rclb
jp
cmpsl
into
sar
repnz
inc
xchg
roll
xchg
shrb
add
xchg
sarb
in
enter
out
adc
sbb
jle
pop
int3
xchg
xor
cmp
sbb
mov
push
jecxz
add
cmp
das
or
ret
aad
clc
lods
add
bound
mov
inc
add
dec
cmp
pop
mov
sub
and
jge
mov
stos
inc
orb
and
clc
rcrb
mov
dec
xor
jno
jmp
lret
xchg
sbb
sbb
cs
mov
sub
stos
xchg
and
fistps
jecxz
or
out
fadds
dec
addr16
mov
push
js
jne
push
xchg
pop
or
mov
sub
lods
pop
or
aam
xchg
add
inc
scas
incb
jge
ffreep
adc
or
test
in
rcrb
push
jmp
add
out
jmp
sub
hlt
lds
xor
sbb
pop
add
push
add
test
mov
cmp
js
mov
and
adc
pusha
subl
xchg
nop
stos
sahf
arpl
test
dec
dec
or
adc
fs
cmc
ror
push
add
in
cmp
dec
mov
mov
add
call
inc
push
das
add
mov
mov
or
fdivp
xorl
or
shlb
pushf
add
aas
mov
dec
push
out
sub
mov
cmp
and
pusha
cmpsb
add
sub
cmp
add
add
frstor
mov
push
mov
iret
dec
lea
cmp
mov
fs
cmp
out
jl
sub
jbe
scas
pop
out
pop
cmp
add
out
pusha
mov
mov
xchg
clc
add
lcall
sbb
fwait
rolb
pop
add
inc
pop
enter
movsb
add
sub
je
scas
xor
popf
loopne
xlat
push
cli
insl
mov
inc
ret
inc
jge
rcl
cmc
add
outsl
push
int3
data16
mov
mov
pop
add
inc
jae
lods
rolb
add
cmc
pop
mov
shlb
add
iret
and
add
idivl
push
adc
push
or
hlt
inc
sbb
nop
sbb
rcrl
movsb
cmp
loop
pop
in
pop
mov
and
xchg
dec
push
add
push
dec
jbe
lret
cmp
cmc
inc
pop
inc
add
call
scas
iret
mov
gs
cwtl
ret
adc
clc
add
jno
dec
lcall
add
xchg
xor
push
loope
mov
lds
push
ret
adc
out
dec
cmp
mov
cltd
outsb
push
and
xlat
into
cmp
sub
lods
xchg
add
stos
out
add
iret
shl
adc
pop
push
push
push
mov
pusha
gs
add
xor
push
and
rcl
addr16
jae
add
push
scas
hlt
xor
xor
fcoml
jg
xor
or
jb
inc
and
xlat
inc
mov
or
rolb
ret
cltd
pop
add
loope
or
pop
aas
mov
jns
and
or
add
pop
mov
scas
daa
ss
xor
mov
adc
inc
lahf
movsb
sti
pushw
sub
add
fisubrs
scas
jnp
shll
mov
cmp
mov
lahf
push
stos
mov
xor
and
in
pop
shl
pop
fldl
xor
stos
adc
nop
das
test
test
lahf
pop
notl
push
push
scas
or
mov
out
popa
add
sahf
inc
jle
fsubrs
in
add
xlat
cmp
out
aaa
push
add
dec
cmp
or
jecxz
mov
or
cld
bound
in
pushl
jl
enter
cli
fwait
cmpsl
popa
mov
push
cmp
pop
push
and
cmp
xchg
add
push
decb
fs
mov
in
adc
mov
clc
je
fnstcw
xchg
imul
xchg
movsb
and
mov
cmp
jmp
roll
xchg
in
mov
xchg
sbb
adc
or
jecxz
je
sub
sbb
in
jne
mov
jp
out
push
inc
jo
push
rolb
lcall
xchg
sbb
enter
push
inc
mov
adc
mov
sub
aad
add
leave
lea
outsl
rorb
dec
dec
test
femms
xor
mov
add
pushf
push
dec
cmpsl
repz
lahf
sbb
lret
sub
out
mov
push
aam
mov
cli
add
sub
dec
sbb
into
mov
add
and
lea
cli
dec
sbb
popf
jns
pop
fbld
out
and
push
dec
mov
arpl
xor
add
pop
lahf
in
push
outsl
xlat
or
xorl
sub
push
cmpsb
jl
add
jbe
aad
mov
in
add
mov
sub
dec
xchg
pop
sbb
push
pop
xor
cwtl
std
popf
aas
popa
imul
je
cmp
rcll
adc
ja
dec
dec
mov
enter
xor
imul
add
sub
cltd
add
fs
xchg
mov
out
fcompl
repnz
and
lahf
scas
pop
jns
adcl
xchg
ja
xorb
mov
lods
jge
add
insb
xchg
shrb
inc
add
imul
inc
mov
dec
cmp
pop
call
cltd
aad
add
loop
cmp
xchg
mov
add
out
sub
scas
out
sarb
inc
adc
add
in
pop
adc
xor
inc
mov
add
sarb
sar
leave
fcoms
pop
jo
add
push
pop
fdivrl
xchg
sbb
dec
fldenv
cmp
es
cmc
mov
daa
pop
mov
xorl
adc
mov
fcomp
adc
adc
js
add
pusha
jp
lahf
add
ficompl
cmpb
or
mov
mov
push
lret
and
add
push
sbb
rclb
aam
sub
div
pop
sub
jae
adc
cmpsl
shll
ss
xchg
dec
inc
or
fdivrp
dec
orb
sbb
outsb
out
or
mov
or
lods
fistpll
adcl
push
mov
std
push
pop
enter
cmc
shll
inc
jge
ror
and
xchg
add
ljmp
bound
xor
sub
pop
out
scas
loopne
cltd
adcb
sub
dec
hlt
inc
jl
add
push
xor
movsl
add
lcall
add
add
sbb
or
stos
mov
mov
mov
and
and
lock
add
push
and
orl
cwtl
or
jge
or
mov
mov
pop
cltd
push
ds
mov
cmp
and
jmp
lods
fwait
adc
sbb
loop
daa
and
push
shlb
and
push
mov
pushf
cwtl
push
mov
add
mov
test
fsubrp
xchg
cmp
inc
cmp
icebp
call
ret
push
out
mov
cmc
pop
add
sub
gs
add
sbb
rolb
sub
sbb
jae
xchg
je
and
push
stc
aaa
or
fnstcw
jnp
mov
xor
jmp
jno
mov
sbb
mov
mov
cmpsb
add
outsb
sbb
je
mov
or
mov
add
bound
mov
lock
sti
and
mov
inc
scas
adc
pop
xchg
add
sub
pusha
ja
js
ljmp
push
add
mov
xor
and
outsl
aas
sub
sbb
sub
lea
add
lret
aam
test
stc
mov
in
js
and
xor
add
in
mov
les
or
enter
mov
inc
mov
xor
cmp
mov
aaa
inc
je
sub
andb
adc
push
lds
sub
jle
jl
mov
pop
adc
add
cltd
jnp
test
add
jge
jle
ret
mov
imul
sbb
shll
cmp
push
jbe
fdivs
xchg
lcall
inc
inc
inc
rorb
inc
frstor
js
mov
int3
dec
xor
sub
add
pop
aas
and
lahf
jg
dec
add
mov
cmc
cmp
cmp
and
inc
cld
add
pop
movsb
sbb
pop
jns
fbld
ljmp
jmp
mov
add
push
rorl
pop
fcomps
pop
test
add
fwait
cli
xor
cwtl
xchg
pop
and
fwait
mov
cmp
mov
adc
fwait
lock
jb
incl
lahf
pop
inc
sti
faddp
movl
sub
or
mov
add
idivl
mov
lret
cmp
add
cltd
test
mov
mov
and
ja
aaa
inc
mov
loopne
mov
inc
mov
sub
add
dec
outsl
sub
add
add
fdiv
imul
call
dec
mov
pop
stos
adc
add
or
mov
movsl
inc
pcmpeqb
lahf
and
pop
jle
mov
add
pop
jae
test
add
mov
pop
lods
mov
add
and
add
inc
jmp
pop
addl
scas
inc
mov
add
stos
fidivs
and
add
imul
es
fiaddl
pop
xor
and
push
mov
sbb
rorl
jnp
mov
outsl
xor
shll
call
sub
or
or
stc
add
mov
les
out
inc
sub
popf
rorl
sub
mov
add
dec
fwait
mov
leave
jno
addb
paddq
add
adc
add
sbb
and
mov
or
subb
xchg
mov
subb
xor
cmpsl
push
add
cmp
or
mov
add
cmp
loopne
push
mov
add
cld
popf
add
cmp
push
pop
lahf
pusha
lock
test
sbb
iret
mov
add
pop
pop
xchg
add
fucomp
insb
or
sub
stos
jge
movsb
lret
pop
cmp
pop
inc
mov
les
test
dec
fs
and
enter
in
ja
pop
sub
lods
mov
add
and
jg
xor
incb
cmp
mov
jno
loopne
ljmp
into
or
fisubl
lods
icebp
jg
pop
repnz
mov
orb
shlb
jl
jmp
add
jnp
jne
sub
adc
cmpsl
fs
adc
scas
push
inc
sub
mov
nop
xchg
add
adc
adc
lea
jo
sahf
jmp
jecxz
cmp
and
outsb
push
add
pop
inc
scas
xor
shrb
fucom
push
add
loop
jo
loope
faddl
popa
out
call
dec
int
sub
test
sub
lock
in
andb
pop
aas
push
daa
add
aad
inc
vdivsd
pop
bound
out
sbb
fsubrs
shl
scas
sub
mov
cltd
jb
mov
addb
mov
sahf
into
adc
aad
pminub
aam
lret
xor
pop
cmp
call
imul
rcrb
lock
mov
lcall
sub
hlt
jno
pusha
mov
or
xchg
xchg
lock
mov
andb
jno
lods
or
sub
pop
sbbb
jb
dec
loop
dec
jbe
sbb
mov
outsl
call
sbb
xor
ret
or
sub
lret
in
jmp
mov
jmp
lea
in
cmp
lock
mov
jo
sbb
adc
aam
and
aad
in
or
xor
dec
add
enter
xor
pop
nop
mov
xchg
pop
sarl
cmp
out
lret
sbb
cld
push
adc
dec
add
cld
dec
cmpsl
add
add
xor
or
jo
inc
xchg
dec
mov
repz
ja
shl
inc
fbld
call
inc
cmp
mov
sbb
add
cmpsl
enter
int3
jno
push
jne
in
add
mov
add
fdivl
add
in
daa
mov
sub
rcr
rorl
xchg
insl
mov
xlat
dec
add
dec
lods
repnz
aas
push
cmc
fsubr
repnz
add
adc
flds
rorb
inc
and
push
popa
push
pusha
add
mov
add
fsub
leave
sbb
add
icebp
jo
sub
jae
push
not
sti
add
iret
sbb
add
clc
imul
andb
test
pop
jbe
inc
loope
ret
add
push
adc
jne
mov
lea
imul
xor
popa
push
push
cmp
data16
pusha
je
add
xor
aaa
cs
lods
aad
cmp
rcrl
sbb
out
push
xor
sub
xchg
lea
sbb
das
sub
add
and
and
jns
ja
ljmp
js
std
push
int
rol
rcr
pop
rcrb
inc
add
jp
jbe
xchg
adc
popl
inc
enter
add
jecxz
and
add
or
aaa
ret
faddl
sbb
insl
test
enter
inc
jl
and
xor
add
mov
loope
addr16
in
add
inc
mov
push
sahf
adcb
cs
push
push
fisttps
jge
sbb
and
pop
add
cmp
mov
mov
push
and
mov
cmpsl
dec
jmp
dec
xchg
arpl
inc
xor
or
repnz
pop
push
lcall
shl
and
jge
or
jle
les
pop
lret
mov
cld
xor
push
aad
cmp
cmpl
mov
mov
rolb
inc
add
shlb
mov
rcr
insb
inc
lds
cmpsb
pop
imul
cld
inc
enter
cmp
xchg
sub
jne
mov
icebp
add
out
cmp
mov
sub
rorl
add
dec
sbb
jmp
add
ds
popa
add
cmpsl
push
addr16
pop
pop
aad
add
loopne
shlb
add
cli
shrb
ret
ljmp
mov
jo
cmp
inc
add
cli
fsubrp
shll
push
push
hlt
popf
push
mov
cltd
addb
mov
jg
jp
xor
cmpb
jbe
adc
call
jg
leave
faddp
mov
out
shlb
adc
inc
add
adc
lds
push
sbb
mov
jae
aam
dec
add
sub
add
xor
cwtl
mov
adc
cli
jns
sar
cmpl
out
inc
push
dec
mov
fadds
mov
lods
xor
jl
push
push
adc
mov
jbe
add
jp
insl
les
mov
add
xchg
mov
fadds
add
das
adc
cmp
add
xchg
roll
jne
inc
nop
cmp
add
adc
mov
mov
jns
inc
add
aaa
fld
mov
out
add
maxps
cmp
pop
xlat
dec
cwtl
lea
jge
mov
fildl
push
xchg
push
leave
inc
inc
cld
sbb
imulb
cmc
fdiv
push
add
out
or
insb
sub
hlt
xor
inc
adcb
mov
imull
mov
flds
dec
mov
pop
cmp
add
aaa
cwtl
lock
leave
pusha
pmullw
cmp
push
cmp
inc
jmp
scas
mov
test
push
xor
repnz
fistps
mov
adc
cmpsb
add
js
push
aam
lret
dec
dec
jmp
add
popa
mov
addr16
test
jne
fs
add
iret
adc
pop
xlat
rcll
scas
sbb
loopne
push
add
iret
std
mov
es
or
pop
pushf
and
mov
dec
add
push
fstpl
fcmovne
lods
call
add
cmp
xorl
add
mov
xchg
push
rol
gs
xchg
jae
and
cmc
jle
loop
add
leave
ja
inc
dec
mov
push
xchg
mov
filds
sub
mov
sqrtps
xlat
xor
pop
ljmp
pop
nop
mov
push
fisttps
pop
xor
mov
mov
mov
scas
add
xor
je
add
cwtl
sbb
jb
cmp
mov
jp
cmp
and
enter
lock
mov
int
std
stos
sti
add
out
inc
mov
stos
cli
xchg
inc
loop,pt
push
mov
mov
fcoml
mov
mov
add
aas
dec
fwait
cmp
lcall
sub
lret
add
jmp
jns
roll
sbb
push
mov
adc
add
loop
xchg
xchg
and
out
add
dec
push
repz
push
and
test
jo
cmpl
test
xchg
sarb
mov
mov
int3
ja
or
pop
inc
std
push
cmc
mov
or
lock
fiaddl
test
push
cmpsb
sbb
std
ss
xor
mov
inc
mov
mov
xor
dec
or
jo
inc
add
icebp
sarl
mov
xorb
sub
add
aas
fisubrl
push
xor
xor
sahf
and
lock
test
mov
mov
addl
cmp
sub
lock
test
push
idivl
cmpl
add
add
lds
int3
ret
push
xor
loop
mov
test
inc
rcrb
sbb
shrb
pusha
inc
ds
lcall
add
pop
xchg
add
ret
test
addr16
lds
inc
add
test
xchg
sbb
push
inc
jb
jae
ljmp
add
out
mov
and
scas
movsl
mov
loopne
jb
add
jle
faddl
cmp
cld
xchg
shl
push
add
push
jbe
add
out
movsb
or
stos
sbb
or
cwtl
js
addl
add
ret
sub
nop
mov
cmp
mov
xor
add
adc
out
enter
add
loop
popl
lods
xchg
inc
call
push
jns
add
mov
daa
sbb
add
adc
mov
xlat
pusha
loopne
mov
ret
sub
and
jge
shl
jb
sub
mov
xchg
pop
add
in
mov
xchg
xchg
xorb
pop
mov
fistpll
jbe
sub
movsb
in
and
cmp
add
lock
imul
xchg
xchg
roll
stos
dec
sub
mov
dec
add
nop
rorb
orb
into
popa
orb
push
mov
add
mov
add
pop
int3
insb
xor
xchg
add
cmp
push
insb
movsl
lds
mov
js
pop
cmpsb
xor
lock
add
sahf
xor
jge
mov
jnp
pushf
pop
cmp
js
mov
mov
das
inc
lahf
jp
mov
dec
sbb
lea
cmp
rcll
sbbl
roll
pop
mov
into
add
jnp
pop
add
jecxz
adc
loope
ret
mov
inc
pop
push
push
xorb
je
cmc
outsl
pop
movsl
xor
pop
cs
arpl
cmpb
jo
mov
mov
insl
cwtl
out
add
dec
jmp
cmp
add
push
int
and
sub
add
sub
mov
stos
xor
jecxz
outsb
mov
inc
cmpl
dec
arpl
stos
cmp
sbbb
enter
xchg
add
inc
out
xchg
xchg
in
andl
in
mov
js
ret
cmc
push
rcrl
add
test
dec
jmp
cmp
rolb
add
insl
shrb
pushf
add
popa
mov
ret
add
movsb
shll
dec
inc
femms
xchg
sti
int3
inc
mov
cmp
cmpb
push
fwait
mov
xor
pusha
ss
cmp
add
mov
add
jno
add
push
mov
jg
jle
xchg
addr16
lock
out
jae
add
push
test
pop
test
ljmp
stos
add
pop
fdivrs
push
and
insb
in
dec
addr16
push
sbb
mov
push
roll
push
mov
xchg
add
pop
cmpb
xor
iret
ljmp
imul
mov
pop
lret
and
inc
dec
adc
jmp
push
and
aad
jg
stos
inc
lret
cmc
imul
test
jge
aaa
xchg
nop
xor
pop
in
scas
mov
push
lret
and
xchg
pop
push
adc
jge
fwait
gs
cld
int3
jns
or
dec
mov
push
adc
mov
cmp
sub
jno
ds
dec
insl
jl
aas
inc
add
fildll
push
add
push
lods
xchg
loopne
mov
fwait
mov
ja
xor
clc
imul
or
pop
pop
sub
inc
sub
pop
xor
mov
orb
scas
clc
sti
dec
stc
test
push
fmull
sub
add
jo
add
call
xorb
add
sub
inc
es
adc
in
pop
add
jnp
leave
sahf
faddl
and
xor
add
sahf
subl
mov
loopne
push
shlb
adc
mov
jb
nop
loopne
cmpl
repz
cmp
add
xchg
jp
jmp
loopne
mov
add
jae
mov
jl
add
cmp
out
and
call
js
jbe
je,pn
cmp
add
mov
ret
lock
inc
roll
adc
imul
cmp
daa
jl
mov
or
add
mov
pop
add
mov
scas
popa
mov
jne
add
sar
test
xchg
xchg
inc
mov
sbbb
push
aad
jp
pop
pusha
mov
pop
sbb
in
popa
scas
data16
mov
mov
sbb
hlt
jno
add
push
jo
push
dec
sub
aas
in
loopne
lds
test
jo
add
scas
pop
sbb
jbe
push
inc
add
scas
mov
mov
cli
test
mov
jg
push
outsb
cmc
mov
pop
mulb
cld
inc
fsubrl
mov
mov
add
xchg
movl
outsb
add
packuswb
movsb
les
inc
in
xchg
sub
add
lahf
pusha
dec
icebp
adcl
cwtl
push
add
and
push
addl
inc
push
ja
mov
push
pop
sbb
pop
push
xor
mov
xor
add
push
inc
int
rcrb
repz
mov
adc
les
xchg
add
mov
shl
xor
pop
adc
imul
adc
mov
push
sbb
flds
push
mov
pop
pop
addb
mov
sub
and
add
jp
ret
fiaddl
dec
dec
paddusw
dec
aam
add
jle
hlt
xor
add
loopne
dec
or
enter
xchg
inc
adcb
in
add
jno
add
xchg
cmc
adc
pushw
popf
shl
adc
add
dec
sbb
hlt
xchg
cmpsb
test
add
lret
and
add
push
cmp
les
rolb
push
mov
add
sarl
sub
out
add
cmpsl
mov
jb
lret
fs
test
int3
or
test
pop
loope
call
push
ljmp
sub
jnp
mov
or
push
mov
cwtl
lret
mov
repnz
add
leave
adc
xor
xchg
lcall
pop
pop
and
rcr
iret
add
add
pusha
xor
mov
stos
lds
mov
add
add
or
addb
mov
add
add
stos
and
dec
outsl
add
shrl
xor
pushf
in
sahf
add
dec
mov
add
cmc
je
outsb
push
add
or
jns
or
jnp
pop
pusha
jg
scas
roll
mov
loop
pop
pusha
mov
xor
loopne
pop
imul
dec
xor
push
mov
adc
mov
jcxz
sub
fsubs
add
push
fmull
loope
hlt
sbb
sub
push
adc
lds
inc
fcmovnu
mov
lret
adc
sbb
mov
outsl
xchg
movsl
jb
add
iret
cli
js
xor
pop
sbb
jae
cmp
mov
fmul
sbb
lret
in
mov
add
stos
je
aas
aaa
popa
add
xchg
leave
test
jmp
inc
mov
sahf
daa
fs
out
mov
add
loopne
iret
push
inc
pop
out
inc
push
xchg
mov
add
push
lods
ret
cli
add
loope
inc
pushf
mov
jbe
std
call
xor
inc
es
pop
int
in
push
push
and
pop
add
sub
out
and
fidivrl
icebp
incl
pop
pop
stos
push
push
or
dec
rcll
repz
pop
adc
repnz
add
sub
jns
ljmp
push
cmc
mov
jp
push
mov
dec
pop
sub
mov
mov
dec
xchg
in
fiaddl
inc
adc
std
test
jno
dec
stos
movsb
adc
jns
cmp
xchg
sbb
dec
pop
push
repnz
in
inc
imul
cmpsl
sub
insb
sahf
sbb
add
dec
pusha
adc
nop
push
rcrb
loopne
aam
ror
add
rcrb
sub
jp
mov
jge
addr16
hlt
int3
inc
push
dec
sbb
mov
ja
mov
addb
xor
add
push
in
cmc
loop
iret
add
jne
or
cwtl
cmp
test
add
cld
and
inc
je
jb
enter
add
pop
push
pop
and
repnz
int3
mov
push
add
packssdw
inc
inc
out
rolb
xor
sbb
add
cmp
jns
mov
leave
add
lret
cmp
add
mov
add
sbb
gs
out
in
add
stos
es
icebp
dec
rolb
inc
fimuls
add
shll
rcrb
dec
jae
mov
pop
adc
xchg
in
xor
mov
mov
lret
movb
pusha
int3
jg
out
inc
out
lock
jnp
xor
scas
dec
imul
xlat
ret
loop
inc
push
sahf
mov
jle
cmp
and
jmp
cmpxchg
push
mov
enter
call
cltd
out
es
adc
popa
scas
fildll
add
jge
loopne
into
addl
sti
adc
add
or
ljmp
cmp
lods
push
or
cmpsb
add
and
icebp
movsb
push
xor
dec
jo
mov
xchg
inc
or
jbe
lods
loop
inc
add
pushf
push
stos
loope
stos
or
add
xor
jns
jno
add
in
movsl
pop
outsb
sub
int
push
test
js
aaa
xor
orb
fiadds
jmp
pop
push
add
cmc
scas
fsubr
inc
cli
cmp
mov
jb
lret
addl
repz
and
pop
mov
adc
sahf
sbb
cmp
adc
push
movsb
int3
loop
aaa
add
lods
fmull
hlt
mov
lods
push
rclb
add
daa
out
xor
lahf
push
push
mov
pop
mov
fwait
cmp
clc
add
inc
repnz
in
sub
add
fisubl
jl
pop
int3
pop
push
sub
pop
repnz
jmp
sub
jo
add
cltd
bound
add
add
push
mov
xchg
jp
add
lret
and
aaa
add
cmp
shlb
pusha
stos
inc
sahf
xor
dec
pop
mov
aam
xchg
pop
lcall
and
jmp
lods
call
pop
sbb
add
loope
inc
hlt
inc
pusha
cmc
pop
lahf
mov
sbb
les
out
push
add
filds
xlat
mov
jmp
shrb
out
lcall
leave
mov
jecxz
adcl
sbbl
mov
sbb
movb
or
fildl
or
sbbb
xchg
aas
add
div
sti
shll
outsl
ficomps
mov
or
or
hlt
add
pop
sbb
or
and
add
pop
push
jl
int
rolb
and
jmp
add
and
popa
or
inc
adcb
repnz
xchg
add
cmp
push
subb
jmp
idivl
push
adc
mov
push
shlb
cli
cmp
add
mov
insb
cmpsb
fisttps
mov
outsb
sahf
hlt
jnp
cld
mov
sub
out
movsl
adc
pop
mov
add
cmp
adc
dec
popa
cmp
push
lret
in
rclb
push
loop
and
add
enter
jp
add
cld
lds
xchg
sub
lcall
ret
xor
sub
cmp
jmp
ja
add
jo
push
stc
pop
nop
sbb
incb
sbb
xchg
out
iret
adc
std
je
xchg
adc
add
lret
push
movsb
xor
sub
jecxz
push
mov
inc
in
dec
faddl
adc
push
loop
and
fmul
shlb
sbb
daa
rol
and
mov
out
dec
incb
shl
in
inc
repnz
sbb
push
xchg
push
jae
sbb
bound
add
stos
xor
mov
add
push
add
in
mov
push
adc
pusha
sar
cmpsb
lcall
add
in
inc
add
insl
sbb
pusha
dec
sahf
ss
sbb
in
enter
mov
push
int3
cmp
pop
imul
imull
xor
scas
add
lahf
cmp
shl
xor
add
ret
lods
ds
cmp
testb
das
imul
dec
jnp
adc
stos
mov
or
nop
lock
dec
in
out
cmp
xorb
shll
mov
ret
lock
out
xchg
aaa
inc
pop
fstps
lret
jge
jmp
xchg
push
pop
gs
xchg
mov
xchg
jno
loopne
insb
pop
mul
in
add
dec
dec
bound
mov
add
jge
clc
add
hlt
repnz
add
addr16
jno
mov
adc
xor
xchg
cmp
add
das
inc
cmp
movsl
mov
mov
pop
js
pop
idivl
dec
fstpl
clc
lret
add
rorb
inc
sub
and
nop
pop
jb
jae
inc
or
int
mov
adc
dec
sub
add
movsl
cwtl
xor
outsb
adc
add
shlb
hlt
into
cmp
add
les
push
add
jl
xor
sub
add
push
cmp
int
dec
sbbb
and
add
lods
mov
and
add
push
rol
out
cli
jp
pop
rcrb
and
xchg
mov
push
xor
and
adc
div
xor
movb
jae
dec
mov
fiaddl
rolb
inc
les
add
js
cli
cs
lret
scas
add
in
adc
xor
xchg
pop
add
mov
stos
cld
pusha
push
push
add
jo
addl
adc
cs
dec
pusha
int3
fbld
add
test
add
stos
mul
inc
into
add
jno
loopne
xor
mov
push
jne
aam
pop
jecxz
sbb
sub
pop
or
add
out
add
sti
xchg
int3
mov
dec
pop
pusha
push
push
imul
or
ja
sahf
sub
bound
push
ret
roll
cmp
and
daa
dec
call
dec
mov
mov
addb
push
pop
sub
in
mov
dec
call
popa
daa
adc
ret
lret
mov
pusha
inc
and
je
fisttpl
lods
mov
jge
std
xchg
push
pop
or
lahf
aam
add
jns
filds
cmp
lea
or
iret
cld
xlat
push
pusha
or
add
xor
mov
inc
xlat
sub
fisttpll
in
sub
xor
fcoms
mov
pop
adc
xor
sub
or
mov
test
clc
shll
call
fsts
jg
mov
dec
stc
insl
sub
add
cmp
xor
fcmove
mov
gs
outsb
mov
imulb
dec
mov
mov
add
xchg
mov
mov
xchg
bound
mov
pop
int
cmc
sub
rcrb
sbbl
out
stos
sbb
pop
and
lock
icebp
jg
nop
add
push
insl
mov
pushl
mov
aas
scas
lds
add
loop
adcb
add
push
jae
cli
fnstcw
shl
sbb
lret
fistpll
idiv
cmpsl
mov
outsb
jecxz
rorl
xor
pusha
push
cltd
sbb
test
roll
mov
dec
subb
jo
mov
movsl
add
fimuls
ficompl
add
das
stc
arpl
dec
sub
loopne
fstl
inc
stos
cli
fbstp
je
jecxz
mov
jns
cmp
rcll
roll
dec
leave
rol
icebp
jb
leave
push
cmp
sub
int3
dec
push
mov
mov
and
ret
rolb
cmpb
xchg
les
fisttps
pop
movsb
add
notl
mov
jmp
pusha
out
cmp
push
and
add
and
add
enter
xchg
push
sbb
adc
xchg
jae
or
cwtl
and
movsb
or
xlat
ljmp
inc
mov
push
pop
aam
shlb
cmp
adc
out
push
sbb
test
lcall
loopne
je
insb
mov
sbb
pop
push
dec
int3
add
test
dec
test
sub
in
mov
pop
jecxz
add
mov
add
cmpsb
sti
mov
cli
outsb
dec
hlt
mov
stos
fisttps
and
mov
xchg
jae
or
cmp
pop
jb
add
mov
and
jmp
mov
int3
add
mov
bound
dec
xchg
mov
push
and
pusha
lods
aad
and
test
sub
mov
adc
icebp
subl
rorl
jle
shlb
sub
pop
add
or
daa
icebp
adc
or
out
xchg
popa
add
mov
pop
xchg
sbb
cmp
je
adc
jbe
loopne
pop
add
push
cmp
stos
stc
adc
mov
sarl
or
repz
insl
test
add
pop
jno
sar
test
fstpl
rcrb
inc
test
push
push
in
cmpb
add
cmp
lods
repz
or
aad
jns
jp
add
out
cmpsb
xchg
add
sub
or
std
fiadds
add
insb
dec
xor
add
lcall
xor
lret
bound
xchg
sar
add
sti
inc
hlt
pop
xor
loopne
cld
das
inc
jbe
clc
xchg
xorb
out
mov
filds
loopne
adc
arpl
and
adc
rolb
sub
aas
mov
jle
pop
pusha
jae
pop
push
jmp
dec
call
add
loopne
sub
push
je,pt
ret
insb
and
fmuls
orb
mov
inc
add
inc
mov
jae
add
xchg
shll
and
and
data16
add
mov
pop
pop
mov
mov
xor
push
bswap
pop
jne
sbb
ljmp
jl
push
movsl
mov
lret
add
add
cmpsl
sbb
lds
add
fnstsw
push
adc
jmp
lea
adc
jo
and
add
lock
adc
pushf
add
push
mov
jb
scas
and
jo
mov
adcb
xchg
jmp
dec
push
jo
xor
js
outsb
lret
adc
inc
add
sub
movl
add
jns
cmpsb
push
add
arpl
bound
xchg
add
jbe
add
addr16
add
mov
add
imul
aad
cmpsb
sbb
adc
shrl
fdivrl
sbb
test
mov
inc
pushl
insb
sub
in
inc
idivl
pop
push
orb
imul
imul
add
xchg
or
sti
pop
push
test
arpl
xchg
test
fs
mov
mov
in
test
pop
fisttpll
test
push
cld
mov
add
lods
enter
jno
and
add
push
pop
call
mov
add
jbe
in
pop
or
mov
pushf
lahf
add
pop
add
dec
add
shrl
mov
or
inc
lret
jno
inc
inc
sahf
add
leave
cli
add
fdivrs
adc
mov
and
pop
cs
lods
add
and
pop
test
icebp
jo
dec
add
xchg
mov
pop
and
pop
push
in
addb
adc
or
pushf
cmp
sbb
mov
cmp
pop
and
mulb
and
and
add
repnz
ljmp
int3
pop
or
andl
cmpsb
sub
and
push
in
sub
push
xor
mov
movsl
cltd
add
cmp
mov
mov
mov
or
add
out
pop
add
add
sbb
push
push
mov
push
pusha
stos
adc
mov
mov
je
mov
decl
fsts
in
stos
add
xchg
xchg
push
cmp
fwait
mov
insb
inc
xchg
test
xor
cwtl
out
add
fdivrs
pinsrw
adc
mov
add
testb
in
add
daa
jg
and
add
add
rcrl
mov
pop
test
add
push
lds
add
dec
nop
aaa
mov
sbb
in
mulps
adc
rorl
in
nop
adc
xlat
and
dec
fadds
push
cwtl
lods
hlt
pop
add
fidivrl
jle
in
xchg
std
sbb
push
sub
jnp
inc
cwtl
mov
pop
test
cmp
xchg
dec
xchg
inc
cmp
inc
sti
jl
mov
add
xchg
cwtl
faddp
bound
dec
cmc
xchg
or
flds
test
enter
pop
test
add
out
iret
sbb
jg
push
add
add
es
mov
fbld
ror
insb
mov
add
jecxz
loop
icebp
dec
mov
cmp
and
ds
mov
xor
pop
cmp
les
adc
or
mov
cmp
and
push
ret
imul
push
movsl
pop
es
sbb
xchg
xor
jns
add
shrb
or
add
mov
ficoml
push
adc
movsb
test
push
dec
mov
mov
out
pop
mov
jle
push
fadds
roll
and
dec
jae
iret
aam
xchg
mov
add
movsl
stc
popa
into
clc
cltd
adc
mov
clc
inc
cld
sets
int
cs
sbb
sub
popf
add
mov
movsl
pop
xchg
mov
lds
leave
pop
cmp
repz
lock
cmp
add
aad
and
dec
jmp
gs
loopne
lds
or
mov
insb
add
push
adc
adc
jno
mov
pop
jo
fldl
cwtl
das
or
and
jne
cli
xchg
aas
push
ret
shll
push
and
inc
std
mov
add
stos
nop
lret
add
mov
fcoms
subl
arpl
push
cmc
scas
or
or
popl
call
arpl
sub
adc
popa
add
push
adc
in
jns
pop
add
daa
sbb
loope
adc
lret
or
pop
loopne
jne
frstor
xor
jno
and
jl
cmc
cmpsl
mov
sbb
hlt
dec
arpl
xor
dec
sub
pop
add
std
out
out
mov
add
cltd
inc
in
jo
push
sbb
mov
push
push
inc
or
addb
add
imul
push
pop
inc
adc
pushf
lea
and
pop
pop
mov
or
repz
pop
add
inc
jnp
add
insb
or
dec
cwtl
cmp
shrb
call
push
mov
sub
ja
add
jo
rcrb
fstpl
pop
bnd
or
sahf
aaa
sub
lods
cmpsl
xchg
js
loopne
dec
or
dec
jnp
add
mov
subl
dec
xorb
push
aad
mov
fisubrl
sbb
stos
scas
fisubrs
xchg
push
mov
and
std
adc
or
push
cmova
adc
pop
add
sbb
pop
pop
gs
dec
or
sahf
xorl
sbb
adc
xchg
addl
push
cmp
rorl
dec
sbb
and
nop
and
inc
sbb
or
xor
std
pop
les
mov
xchg
jno
pusha
sbb
into
hlt
add
adc
xor
nop
aad
push
xor
sub
sub
gs
and
mov
adc
sbb
xor
pop
in
jbe
mov
fs
call
bound
insl
jnp
jns
xchg
leave
adc
add
xor
or
add
cmp
repnz
push
cmp
adc
shl
sbb
pop
sub
mov
push
push
test
fsubrl
add
repnz
pushf
ficomps
rclb
add
cwtl
leave
out
mov
fcomi
inc
dec
in
fs
aam
ljmp
jle
inc
cmp
mov
inc
dec
mov
sbb
fcompl
dec
xchg
mov
xorl
iret
mov
fisttpl
ret
xor
or
xchg
jbe
sbb
jnp
sbb
add
ja
shl
aas
pop
add
aas
out
imul
add
out
mov
add
pop
ljmp
pop
jnp
sbb
iret
mov
lret
repnz
insb
and
or
cmpl
std
add
adc
or
lock
add
outsb
cmp
mov
adc
cmp
dec
stos
decb
add
add
stc
lret
sub
lret
or
ds
shrb
dec
pusha
cld
or
incl
pop
inc
xchg
or
pop
inc
in
add
out
enter
repnz
xor
clc
test
pop
adc
dec
js
or
rcrb
enter
incb
inc
xor
and
jae
xor
sbb
xchg
movsb
rolb
jbe
inc
jg
cli
xchg
add
popf
test
lcall
mov
inc
mov
int3
into
add
jle
or
and
add
cltd
add
mov
or
movl
inc
add
mov
lcall
xchg
xchg
pop
adc
sub
in
inc
enter
in
stos
xor
ja
popf
out
pop
outsl
mov
xor
inc
in
push
add
in
data16
mov
add
insl
sub
adc
xchg
mov
xor
xor
pop
push
or
add
dec
and
inc
hlt
add
pop
cld
test
fcoms
sbb
movsb
retw
pop
sbbl
ljmp
bound
popa
cmpl
pop
mov
adc
adc
popa
cmp
test
mov
xchg
inc
sbb
mov
push
mov
out
mov
mov
add
pcmpeqw
setge
jnp
popa
aas
into
push
xchg
nop
or
push
jecxz
mov
subl
cmp
ja
add
xorl
adc
scas
mov
sbb
movsb
hlt
test
psubusb
repz
lock
or
jno
test
adc
das
pop
xlat
outsb
in
jno
pop
in
fs
shll
adc
add
mov
pop
push
push
lcall
aad
fs
xchg
repnz
scas
outsb
cmp
lods
add
pop
sbb
inc
adc
add
jmp
pop
movsb
test
add
and
push
inc
inc
test
bound
int3
add
or
loop
add
shlb
orl
and
ljmp
sti
add
stos
and
outsb
xchg
dec
pusha
add
mov
or
les
fbld
pop
mov
pop
sbb
push
mov
hlt
cmp
je
shlb
inc
pop
add
loop
in
mov
pop
add
mov
pop
int3
insb
pop
rcr
pushl
jecxz
mov
dec
cmp
add
adc
and
adc
test
dec
in
loop
dec
bound
lock
or
pop
add
push
inc
hlt
mov
fadds
or
add
addr16
sbb
or
mov
fmull
mov
ljmp
add
inc
sbb
mov
pusha
dec
shlb
gs
mov
jge
stc
xor
rolb
or
push
pop
cli
rolb
cmc
aas
and
mov
pushf
test
jp
mov
cwtl
insl
mov
inc
int
jmp
pop
mov
xchg
inc
xchg
ljmp
in
push
hlt
lods
stc
shlb
repz
or
add
sbb
xchg
fldt
and
add
out
dec
mov
mov
xor
call
pop
insb
addb
xchg
out
sub
inc
cld
adc
adc
mov
faddl
stc
pop
dec
movl
enter
data16
pusha
rorb
push
sub
fs
aam
push
lods
xchg
or
call
mov
mov
enter
outsb
xchg
jg
or
pusha
dec
in
adc
dec
mov
sub
sbb
mov
pmaxub
xchg
pop
cmp
mov
cld
imul
add
out
in
xor
rcrb
incb
add
cld
pop
cld
sbb
jno
loopne
mov
push
imul
sub
fcoml
push
dec
pop
and
dec
mov
and
ljmp
push
inc
sbb
test
lods
pop
pop
cmp
int3
push
jle
ljmp
in
and
pop
and
or
push
sbb
jo
pop
dec
faddl
gs
aas
test
mov
out
icebp
add
int3
cmp
push
push
mov
les
inc
scas
pop
data16
and
sbb
stc
and
cltd
xchg
clc
inc
mov
adc
fldl
xchg
sbb
mov
scas
lods
xchg
testb
xchg
mov
leave
aad
and
nop
stc
adc
pop
fsubs
push
adc
sbbb
push
sbb
loopne
mov
call
mov
add
adc
bound
xor
mov
imul
repz
fs
jb
jbe
popa
leave
imul
popa
sti
mov
pop
pop
dec
add
jnp
mov
add
dec
cvttps2pi
daa
arpl
or
push
xchg
jl
out
lret
cmp
push
movhps
sar
add
std
ret
lahf
push
mov
cmpsl
sub
sbb
adc
imulb
push
push
ja
fimull
pop
mov
mov
pop
bnd
flds
std
and
xchg
adc
repnz
gs
mov
adc
leave
jo
lahf
pop
popa
cmp
add
lcall
push
pusha
dec
add
test
sub
cmp
repz
imul
dec
or
jmp
fwait
and
pop
iret
out
cmp
sub
jecxz
add
popa
add
or
xorl
clc
adc
sub
pushf
add
jbe
dec
aaa
push
add
fs
dec
out
test
adc
andl
loope
bound
add
or
dec
orb
loope
mov
sar
in
push
ja
jns
lea
xchg
out
stos
cld
pop
mov
mov
xchg
add
add
std
xor
add
sti
ds
fistps
mov
hlt
xor
sbb
cld
shrl
pop
jns
in
mov
cli
mov
add
stos
adcl
or
xlat
push
inc
lcall
xor
add
jbe
popl
pusha
aaa
sub
jmp
addr16
adc
ljmp
ss
data16
inc
fcomps
rorl
testl
jmp
jns
int
mov
repnz
xor
cmp
call
mov
sub
pop
push
in
add
loopne
pop
jle
sar
adc
mov
push
inc
imul
and
int3
dec
ret
inc
add
xor
add
pminub
or
jp
add
cmp
pushl
pop
jne
mov
push
and
jmp
lcall
push
pop
sbb
iret
outsb
cltd
pop
mov
fidivrl
test
pop
dec
movl
dec
ds
addr16
or
adc
mov
push
adc
mov
add
and
jle
pusha
sbb
and
sbb
add
add
mov
ljmp
sahf
loopne
xchg
jmp
push
daa
xlat
movsl
add
inc
push
lock
lcall
jne
add
mov
idiv
dec
imul
and
les
inc
mov
dec
out
and
add
fwait
and
adc
push
rorb
sbb
mov
dec
pop
pop
sub
sbb
out
sub
xor
mov
faddl
push
les
or
rcll
pop
mov
aad
cmp
cmc
adc
mov
into
scas
xchg
mov
mov
notb
dec
jp
push
mov
jg
dec
jmp
mov
pushf
cmpsl
sub
sub
pop
aad
enter
negl
lock
test
mov
insb
sbb
jecxz
js
mov
cmc
mov
scas
and
xlat
popl
insb
jne
mov
ja
add
cli
xor
add
xchg
hlt
adc
add
cli
rorb
pop
out
rolb
inc
jo
movsl
mov
add
sbbb
or
add
sub
and
push
mov
arpl
jne
add
pushf
insb
cmpsl
jae
daa
add
jl
jo
mov
push
inc
aas
dec
pop
xchg
sbb
pop
xor
and
into
inc
add
mov
hlt
and
add
rclb
dec
push
and
pop
subb
dec
mov
add
and
add
cld
push
sub
push
mov
or
lcall
and
mov
pop
pop
aaa
cmp
xchg
adc
dec
sub
in
rolb
sbb
mov
inc
add
push
les
push
xchg
nop
bound
adc
sub
sub
test
insb
insb
addb
add
popa
adc
jmp
mov
push
mov
test
sub
insb
push
mov
dec
mov
fs
imul
rol
pop
nop
aas
ds
sub
inc
or
icebp
int3
add
aas
xorb
mov
pushl
pop
cmpsl
es
add
cmp
mov
out
mov
adc
xchg
daa
sahf
xor
addr16
add
sbb
and
pushl
push
push
fs
fnstenv
shrl
addb
mov
lods
test
jns
sarl
fadd
xchg
dec
call
mov
or
loope
xor
sub
mov
or
lret
repnz
cmpsl
and
add
aas
cwtl
lods
adc
mov
xor
sbb
out
add
adc
adc
jno
mov
cld
imul
fs
xchg
inc
loopne
and
mov
pop
mov
das
or
jo
cs
add
cmpsl
mov
insb
mov
mov
and
add
and
cmpsb
add
stc
inc
fstps
dec
nop
add
ja
sbb
add
sbb
add
pop
popf
push
sbb
add
jge
mov
jecxz
xchg
pusha
or
xor
dec
cmpsb
stos
lret
add
scas
int3
mov
sbb
jmp
rcrl
push
cld
mov
dec
push
cmp
inc
add
dec
add
xchg
gs
imul
jbe
fisubs
mov
push
cwtl
sahf
and
test
imul
aam
fucomip
mov
pop
mov
fldcw
add
mov
movsb
add
scas
jno
push
mov
shrb
pop
or
int
sbb
imul
jnp
lock
push
popa
call
pusha
dec
fiaddl
or
imul
loope
dec
mov
and
sahf
jle
add
adc
fsts
xorl
ja
pop
cld
or
pop
mov
out
dec
pusha
dec
mov
jnp
addr16
imul
cs
or
add
imul
lahf
orl
inc
hlt
cwtl
push
cmp
cmp
mov
out
dec
and
fistl
enter
push
lret
mov
or
and
mov
ret
out
mov
lods
add
mov
add
xchg
add
mov
repnz
rcrl
mov
adc
imul
andl
roll
fmull
adc
dec
jo
xchg
add
cmp
not
xchg
push
add
mov
popa
clc
xchg
jecxz
sub
sbb
fisttpll
and
cmp
adc
sub
xchg
mov
dec
jmp
sub
mov
mov
mov
lods
popa
movsb
mov
push
testb
inc
and
mov
sbb
stc
call
mov
dec
mov
repz
rcll
sbb
xor
jp
shl
aas
push
xor
push
loop
or
test
imul
xchg
sbb
popf
add
sub
popa
sbb
dec
insb
xchg
sahf
inc
xor
inc
sbb
bound
fucomip
call
rolb
jo
icebp
loopne
out
adc
cmp
into
pop
pop
push
mov
lcall
or
int3
fwait
dec
sti
add
mov
pop
in
shl
ds
cs
push
mov
or
inc
push
or
cmp
adc
lock
jp
mov
addl
rolb
shlb
jle
xor
dec
rcrb
and
xor
xor
or
sahf
mov
stc
insb
mov
leave
adcb
push
adc
loop
push
jle
mov
jge
int
sub
js
push
and
add
loope
lods
test
in
xor
add
adc
add
push
cs
fcoms
mov
leave
ljmp
jns
inc
jne
les
loopne
jl
pop
and
adc
fildl
test
aaa
sti
pop
aad
addr16
sbb
jmp
push
inc
jne
ljmp
clc
out
mov
ljmp
mov
or
pop
int
lahf
cwtl
and
jnp
ficompl
or
loopne
je
or
add
movsb
aad
mov
push
lock
inc
lret
stc
jmp
shll
add
loopne
arpl
dec
and
clc
adc
test
imul
into
xchg
jb
fbld
adc
imul
test
jecxz
fnsave
xchg
sub
mov
and
add
je
pop
sbb
mov
pop
enter
cwtl
loopne
pop
hlt
jb
push
add
mov
mov
lods
jg
and
mov
add
adc
test
add
mov
lcall
xchg
sub
insl
ret
inc
jle
stos
clc
pop
pushf
testb
std
cmpsl
outsb
aam
and
pusha
pop
sub
lcall
sbb
loopne
ret
cmc
push
bound
inc
dec
out
mov
mov
mov
sub
lods
arpl
push
orl
pop
and
lds
xchg
fmull
add
or
cmpsl
jo
add
mov
cmp
cmp
js
pop
push
test
nop
inc
add
out
mov
andl
sub
sub
mov
ret
mov
stc
xchg
repz
imulb
add
inc
iret
scas
or
pop
fisubl
jae
jnp
push
decl
and
push
imul
mov
add
lods
imul
ret
xchg
sbb
xchg
cli
inc
out
orb
mov
xor
cvtps2pd
loop
sub
mov
mov
sub
aam
inc
shl
push
lods
pushf
arpl
jno
xchg
add
jl
insb
or
mull
repnz
hlt
pop
ds
and
add
dec
ret
xchg
les
aas
pop
xchg
out
xor
inc
pusha
sub
add
pop
loope
movsb
lods
sub
mov
xchg
mov
mov
imul
fwait
pop
jecxz
or
add
sub
xor
fiaddl
dec
jb
add
fs
out
ss
mov
mov
jl
lret
popf
pop
cwtl
xor
mov
lret
stos
stc
test
pusha
xchg
push
jns
cmp
mov
les
xor
pop
mov
add
rcll
pop
push
popa
out
cmp
pop
arpl
sub
mov
out
pop
add
xchg
mov
cltd
repnz
mov
pop
lret
pop
jle
xchg
adcl
inc
stos
mov
or
mov
add
jle
std
inc
das
ja
enter
lods
stc
fiaddl
sub
rcll
adc
or
addb
xchg
call
mov
add
and
mov
or
mov
xor
adc
jno
mov
add
mov
add
outsl
adc
clc
sub
in
adc
lret
nop
pushf
or
add
jecxz
fcomps
mov
fmuls
jbe
mov
dec
or
fs
lock
or
notl
pop
pmulhuw
movsb
insb
jecxz
dec
out
jne
pop
add
lahf
mov
jl
dec
and
loopne
inc
add
in
out
repnz
loope
inc
xchg
mov
je
pop
mov
test
push
inc
mov
loopne
gs
pop
add
int
and
mov
inc
and
cmc
cmp
xchg
rclb
mov
test
loope
stos
inc
call
aad
sbb
mov
xlat
cmp
divb
adc
jnp
sbb
add
movsl
mov
add
fcomi
pop
xchg
or
ret
push
cld
loop
pusha
test
int3
dec
mov
jae
loope
add
pop
sub
and
stos
cltd
mov
push
push
out
popf
push
and
add
scas
dec
add
xor
pop
mov
shll
and
int
sub
movsl
adc
inc
pushf
mov
lcall
das
aaa
add
inc
add
inc
sti
fcoml
hlt
cmp
dec
xorb
movsl
mov
dec
enter
into
shll
or
scas
and
mov
adc
inc
pop
movsb
cld
popl
adc
push
xchg
call
andl
hlt
int
inc
cld
in
push
call
push
and
ja
add
dec
inc
sub
ret
dec
or
pusha
add
fisubrl
popl
mov
cmpsl
lcall
sub
mov
ret
repz
subl
inc
mov
loop
mov
sti
mov
in
push
add
int3
lock
mov
inc
xchg
pop
xchg
add
sbb
das
bound
or
inc
cmp
in
pop
imulb
popa
sahf
cld
or
outsb
xlat
stc
andb
pop
and
push
mov
les
out
mov
inc
adc
sbb
fs
pop
xor
scas
sub
add
lcall
jp
add
out
clc
fisttps
jmp
data16
or
mov
hlt
call
mov
add
or
cmp
inc
or
dec
gs
js
sbb
inc
push
mov
sbbl
cmp
inc
or
dec
flds
xor
cmp
mov
aad
rcrl
cwtl
add
js
xchg
cld
mov
adc
pop
ret
cmp
imul
sahf
xor
aam
jo
and
pop
cmp
add
je
cwtl
adc
out
and
pushf
int3
pcmpgtb
jae
xchg
icebp
ljmp
add
sub
add
sub
cwtl
pop
add
mov
aad
or
or
pusha
repnz
pop
inc
xchg
and
xor
rol
xor
xchg
and
mov
inc
jmp
xlat
add
lods
cmpb
xor
or
clts
movsb
push
and
dec
gs
int3
and
imul
dec
xchg
ljmp
push
cli
cmp
cltd
pop
push
rclb
mov
or
push
dec
inc
loopne
xor
mov
dec
test
add
jl
inc
jg
mov
sbb
mov
ja
jle
pop
pop
icebp
adc
sbb
dec
inc
and
movb
dec
mov
add
stos
pop
in
divb
push
sti
push
pop
in
sub
sbb
dec
and
mov
pop
inc
imul
loop
icebp
cmp
dec
fxch
mov
sbb
icebp
dec
mov
xor
pop
stc
mov
jle
enter
rcll
mov
pushf
xor
dec
in
and
insl
mov
addr16
push
ljmp
add
xchg
cmc
cmp
or
notl
add
jl
and
lods
or
sbb
pop
mov
dec
fwait
or
dec
mulb
movsb
ret
hlt
rolb
sbb
dec
or
fs
cmp
out
cmp
add
xor
call
mov
pop
cltd
mov
inc
and
je
xor
push
or
add
test
xchg
sti
sarb
add
mov
push
pop
xchg
cmp
aaa
mov
insb
cli
cld
std
or
jo
shll
js
hlt
mov
js
insb
mov
pop
jo
cli
cmp
jae
ds
xor
push
adcb
sbb
pop
dec
adc
jae
cmpsb
divl
and
popa
in
pop
fildl
inc
and
cmpsb
xor
dec
cs
shlb
mov
and
sbb
xor
cmp
jns
mov
add
imul
call
add
push
cmp
xor
sbb
lds
imul
add
dec
lcall
mov
mov
rcll
pop
mov
xchg
imul
loop
add
out
pop
add
mov
dec
pop
mulb
add
sbbb
xor
mov
sub
fsts
fldl
xchg
lods
add
jne
sub
shr
dec
movsl
add
push
cs
call
repnz
pop
pop
js
push
loop
mov
mov
adc
fs
dec
scas
and
es
cmp
push
leave
addl
clc
or
mov
add
ljmp
push
jecxz
imul
lds
xor
mov
inc
mov
add
insb
movsb
cwtl
movsl
add
jns
dec
outsb
psubusb
and
dec
or
pop
loop
inc
xor
xlat
ds
nop
adcb
inc
mov
scas
mov
lahf
jmp
inc
lcall
push
jp
push
adc
add
out
loope
and
mov
fsubrs
lods
inc
testl
pop
dec
dec
insb
rclb
mov
dec
das
adc
dec
icebp
call
add
rolb
add
inc
sub
pop
call
shrl
mov
push
or
add
xor
aam
in
add
push
fmuls
pusha
subb
insl
add
lods
xchg
pop
and
hlt
and
push
test
cmp
cs
mov
mov
les
or
dec
gs
cwtl
int3
stos
icebp
adc
lods
mov
add
inc
xor
movsb
test
stos
push
push
jno
xor
cmpsb
jbe
sub
or
and
pop
mov
sbb
and
lock
push
xor
loope
push
sub
in
cs
cld
jp
rcll
pop
fsubrs
dec
adc
add
call
push
jbe
loop
add
xor
push
lret
daa
movsb
sbb
mov
pop
inc
cmp
xorl
loope
push
mov
xlat
add
sub
pop
loop
add
sub
xchg
sbb
add
lock
outsl
lret
push
mov
push
and
cmpl
add
or
lcall
push
mov
in
mov
add
inc
and
aam
jne
add
and
mov
add
sub
gs
scas
mov
add
mov
rolb
inc
dec
push
icebp
adc
add
mov
aas
and
sub
pop
adc
rol
bound
pop
ret
cld
dec
mov
mov
add
dec
xor
loope
lret
pop
dec
or
push
cltd
and
xor
jl
sbb
push
mov
sbb
add
mov
mov
add
xchg
mov
lret
or
cmp
or
sbb
test
andb
gs
xchg
pushf
cs
inc
fdivrs
loope
in
push
push
jle
pushf
inc
add
loop
orb
add
mov
push
adc
add
push
je
shrb
cmp
xchg
jecxz
cs
jns
jl
cmpb
inc
test
add
stos
pop
fsub
movsb
dec
add
dec
aam
fmul
sbb
stc
adc
xlat
cs
pop
push
adc
push
loope
mov
ss
add
mov
add
dec
and
mov
cs
jo
xchg
sub
mov
sbbl
imul
je
leave
xor
and
test
scas
pop
sub
add
xchg
inc
test
repnz
popa
xlat
or
lea
xchg
mov
add
inc
decb
sbb
push
pop
push
dec
pop
inc
xchg
jecxz
xor
push
adc
lods
addb
sub
cwtl
add
fwait
inc
shrb
leave
add
popa
or
cmpb
push
dec
stos
or
adc
mov
cmp
sbb
lds
push
scas
inc
adc
fadd
xor
into
mov
or
or
shr
jae
mov
call
in
add
rcr
pop
loopne
flds
pop
inc
xchg
sahf
push
xchg
dec
xor
mov
xor
add
sbb
jecxz
mov
pop
adc
lods
test
and
add
pop
pop
inc
push
add
rol
dec
loope
subb
and
xor
push
push
or
ljmp
into
fadds
rolb
cmc
jno
xchg
or
mov
imul
xor
int
in
and
scas
or
xchg
mov
das
pop
and
adc
fildl
adc
add
mov
mov
mov
cs
imul
mov
push
push
mov
add
mov
icebp
sahf
shl
test
std
lock
and
aam
sbb
and
mov
xchg
ja
lret
adc
xchg
sub
cli
and
mov
out
add
daa
add
imul
add
enter
mov
xor
es
sti
mov
cmpsl
add
js
in
push
mov
test
dec
sarl
add
xchg
mov
add
jae
and
cmp
inc
add
add
jecxz
sub
add
sahf
add
cmpsl
sbb
int3
pop
inc
in
sub
sub
shrb
push
sbb
mov
push
pop
sti
lock
and
xor
pop
cld
push
dec
sbb
mov
rclb
cmp
add
ds
cmp
test
shlb
inc
es
push
mov
movsl
ljmp
add
scas
loopne
adcb
adc
mov
lods
pop
jnp
out
andl
inc
cwtl
add
xor
mov
sarb
push
push
and
pop
jmp
add
icebp
jnp
leave
clc
add
and
adc
pop
ja
mov
mov
in
push
adc
movsl
in
shll
mov
outsb
lret
adc
gs
add
nop
sahf
stc
lcall
jp
add
and
cmp
lds
insl
mov
sub
jns
movsl
and
push
cltd
enter
dec
pop
inc
iret
sub
aam
xor
pusha
mov
mov
add
in
out
inc
call
sbb
jmp
mov
lock
cmp
cmp
fwait
idivb
ror
ja
push
ljmp
add
sub
sbb
dec
adc
in
cmp
lret
loop
scas
jmp
pop
ljmp
sbb
xlat
add
push
daa
jp
into
pop
add
ss
cli
push
sbb
cs
fs
add
pop
push
insl
jl
inc
xor
jnp
inc
in
sub
imull
pop
and
sar
mov
xlat
xor
in
adc
repz
and
jl
adc
cmc
mov
fldl
cld
test
ror
testl
add
inc
add
push
jne
add
push
adc
insl
sub
add
jb
aaa
sub
jl
cmp
push
sti
add
insl
outsb
push
adc
xor
lock
add
stos
xchg
out
test
icebp
arpl
ljmp
inc
sar
and
pop
sbb
iret
cmp
push
pop
bnd
push
shl
push
or
test
aad
push
jo
mov
aas
adc
xor
xchg
mov
xor
sub
testl
in
ss
add
cmpsb
imul
lods
lock
xlat
dec
das
pop
in
pop
jne
push
hlt
sub
cmp
in
outsb
push
xor
pop
lret
movsl
or
lock
mov
adc
mov
xor
xorb
loop
lcall
jne
add
cmpsl
int3
shlb
sub
adc
repnz
mov
inc
inc
aas
and
std
inc
lods
mov
pop
das
jb
fsubr
add
cld
rclb
sbb
cmp
add
cmpb
aas
cltd
adc
movsl
cmp
inc
sub
cld
in
add
cs
push
pop
inc
cmp
in
mov
out
pop
movsl
lock
and
xchg
les
cmp
jge
test
mov
call
scas
sub
xchg
adc
mov
push
js
in
jl
imul
cmp
fbstp
int3
add
jmp
and
inc
cmp
adc
adcb
inc
out
shlb
pop
adc
jmp
in
adc
add
cmp
test
cmp
pop
cli
test
sub
add
adc
sub
dec
or
sti
loope
add
sahf
lret
aas
je
fwait
mov
xchg
and
inc
arpl
xor
mov
jae
sub
outsl
sub
jl
cmpsb
cld
jnp
pop
aam
mov
test
add
rcrb
push
aam
add
sbb
pop
out
cmp
xchg
inc
clc
jb
ret
pusha
lods
dec
cmp
cmpl
add
sbb
add
out
add
add
push
icebp
mov
add
adc
push
xor
cmp
add
mov
ja
fs
add
jmp
out
enter
ljmp
insb
add
mov
mov
cld
pop
push
or
movsl
subb
pop
imul
bound
jmp
lock
mov
aaa
adc
lods
pop
sub
cmpl
push
dec
mov
adc
lods
xor
addl
xor
pop
or
lods
outsb
mov
outsb
add
pop
out
mull
loopne
adc
and
testb
out
jmp
push
shr
cs
sub
add
sbb
mulb
adc
sti
xor
xor
stos
or
adc
insb
xchg
sti
punpcklbw
pop
add
repz
dec
jns
sbb
or
add
pusha
xor
and
push
mov
sub
hlt
jmpw
and
dec
add
add
and
mov
nop
shlb
mov
and
mov
xchg
pop
ds
add
adc
sets
xchg
shll
jb
xchg
mov
mov
shlb
lahf
cld
inc
add
lret
push
cmp
push
insb
lods
add
pop
mov
pop
iret
or
xor
cmpsb
cwtl
dec
and
enter
inc
or
andl
lret
test
roll
test
test
adc
fildll
xor
cmp
adc
gs
lods
xor
inc
lods
push
sub
cmp
push
add
movaps
lods
push
sbb
addl
lahf
daa
inc
xor
pop
shlb
arpl
push
sub
ds
add
and
jbe
and
add
jnp
mov
aas
push
das
fs
sarl
jno
jecxz
mov
jmp
gs
push
dec
cmp
in
jp
jmp
or
imul
xorb
mov
test
mov
add
fs
int3
jl
pusha
or
mov
lahf
ss
out
fnop
pop
mov
cmp
sarl
adc
adc
shlb
test
push
xchg
mov
cwtl
inc
jle
ljmp
or
stc
fisttps
cmp
into
test
fwait
in
push
inc
in
inc
stos
inc
outsb
testl
sbb
int3
lock
push
rorl
and
or
jl
mov
stc
shl
push
icebp
mov
jno
loopne
in
and
xor
les
clc
in
sbb
or
add
xor
cmp
fistl
shrd
add
push
jp
mov
mov
arpl
loope
inc
mov
add
aaa
lahf
add
jp
insb
push
add
inc
adc
fsts
xor
cld
or
or
cmp
jae
mov
shlb
scas
insl
lock
pop
mov
jb
outsl
mov
repz
fwait
lcall
add
sub
sub
test
adc
nop
add
movsb
cltd
outsb
adc
mov
sub
in
or
inc
call
in
add
aas
or
in
add
call
mov
mov
cwtl
sbb
add
movsl
adc
push
xor
add
sahf
or
sbb
mov
fdivrl
pop
pushf
into
cs
jge
sub
mov
mov
inc
aas
cmp
push
add
add
cmpl
add
insb
mov
movsb
test
push
push
push
mov
idivl
sbb
movsb
lods
xchg
sub
lock
nop
loope,pt
outsl
adc
and
aaa
fcoml
pop
in
sahf
mov
hlt
inc
in
test
pushf
std
rcl
adc
pop
add
cs
ret
and
xor
add
jbe
mov
test
xor
clc
add
jae
push
xchg
lock
out
or
gs
into
rcl
fbld
dec
dec
inc
dec
je
clc
popf
add
xor
pop
test
add
aas
add
out
pop
pusha
jecxz
dec
cmp
cld
and
mov
fsubs
in
add
fwait
xor
pusha
insl
lods
pusha
push
bound
add
orb
loopne
lock
mov
outsb
shl
sub
out
scas
cmp
das
cld
bound
sbb
orb
rolb
xlat
jmp
cmp
sti
sub
stos
lock
add
pusha
dec
pop
pop
push
mov
mov
cld
and
cwtl
mov
add
enter
add
or
add
leave
mov
sbb
adc
xorl
movsl
lock
and
shl
pop
jnp
pop
mov
or
repz
pop
pop
ret
jle
mov
or
push
jmp
adc
pop
inc
mov
push
xchg
xor
mov
pusha
out
jg
and
inc
shll
cld
inc
pop
jns
add
xor
aas
fwait
enter
aas
fcmovnbe
bound
out
popa
hlt
inc
push
cld
lcall
sbb
jg
sbb
cmp
add
movsl
cmp
shlb
inc
gs
and
int3
cmp
inc
insl
inc
movsb
shrb
add
ret
sbb
ret
push
cld
je
lcall
mov
inc
add
loop
fbld
mov
repnz
mov
cmp
inc
pop
pop
lcall
jl
mov
test
pop
cmpsl
in
add
inc
xchg
push
rcrl
imul
xchg
or
nop
ficompl
xchg
inc
xor
xchg
or
fwait
out
mulb
loop
cmpsb
mov
int
add
sub
xor
mov
adc
pop
xchg
adc
cmp
cmp
pop
adc
scas
outsb
fwait
jmp
add
mov
xchg
xlat
std
nop
aaa
add
xchg
adc
add
icebp
pop
add
pop
std
mov
es
cld
lahf
add
sbb
mov
xor
add
pop
daa
orl
cmp
mov
or
test
rcrb
adc
popa
inc
add
cmc
aaa
pop
mov
mov
pop
clc
iret
add
js
jecxz
imul
dec
cmp
ljmp
xchg
jge
test
or
sarb
cld
cmp
loop
xchg
mov
fistps
mov
jecxz
sbb
mov
cmp
nop/reserved
lods
dec
test
mov
pop
sti
inc
dec
pop
xchg
add
push
pop
clc
ja
push
add
mov
ret
int3
mov
lock
je
sub
js
adc
rclb
lret
add
pop
add
call
enter
jg
mov
jo
adcb
xor
into
add
jle
push
mov
enter
inc
adc
mov
das
xor
mov
and
add
pop
lods
or
test
add
mov
cmc
sub
adc
testl
out
pop
adc
sub
in
inc
push
xor
sbb
outsl
out
add
in
test
mov
or
flds
adc
out
jge
call
imul
fisttps
inc
dec
shlb
mov
ret
data16
add
xor
sarb
rorl
mov
inc
or
jnp
gs
mov
loope
mov
lret
push
xchg
add
repnz
inc
in
fisubrs
push
push
cmp
or
jle
je
stc
pop
loop
loope
xor
pop
mov
not
cmpb
xchg
inc
inc
lds
into
and
mov
out
dec
cwtl
clc
xchg
add
cmpsl
push
loop
push
dec
shl
mov
adc
sub
inc
lods
pusha
xchg
stos
push
add
jne
add
mov
push
cmp
xchg
imul
pop
sbb
rorb
adc
xor
mov
popf
cmpsb
ret
rclb
std
add
test
popl
xor
jns
ljmp
test
in
clc
cmp
jb
jbe
push
pop
dec
push
mov
subb
std
add
jl
inc
add
pop
add
and
je
or
andb
push
mov
xor
shr
mov
insl
adc
out
add
iret
cmpsl
and
sbb
adc
cwtl
sbb
idivb
mov
loope
test
add
push
cmp
fmull
jae
and
sub
shl
xchg
call
push
inc
fimull
fcmovne
adc
pop
add
jp
mov
and
nop
orb
sub
shrb
xchg
rcrb
cmp
lds
pop
sub
adc
outsb
adcl
mov
inc
lods
add
or
in
fwait
lret
pop
dec
into
adc
cltd
add
pop
mull
jecxz
push
cli
in
pop
sbb
bswap
call
jno
pushf
fs
stc
mov
shlb
xor
icebp
cmpsb
adcl
andl
mov
sub
adc
pop
out
sbb
mov
inc
lds
xchg
add
jbe
or
xor
sbb
shlb
rep
and
fcomp
rcr
pop
adc
jecxz
les
inc
jbe
mov
fmull
mov
jo
mov
into
and
dec
aaa
subb
sub
jl
nop
insb
sbb
pusha
push
shlb
mov
andb
push
leave
js
test
test
add
jg
cmp
fcompl
sbb
test
sub
and
push
adc
lods
dec
or
mov
add
loope
and
sbb
cmp
out
dec
movsl
fdivs
fimull
add
cli
loopne
jle
xchg
adc
bswap
add
add
add
push
dec
add
dec
