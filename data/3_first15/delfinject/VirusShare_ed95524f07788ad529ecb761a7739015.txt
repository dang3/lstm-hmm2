and
lock
inc
add
orl
in
fdivr
or
enter
sarb
enter
enter
inc
push
cmp
add
nop
out
outsb
dec
rclb
mov
push
call
and
out
in
ljmp
je
movzwl
mov
sbb
sub
mov
sbb
test
mov
arpl
rolb
jne
push
add
sti
ljmp
enter
add
mov
mov
pushl
rorb
inc
roll
mov
mov
inc
cmp
jne
mov
mov
mov
std
std
jnp
sub
ret
push
mov
mov
dec
call
incb
push
or
mov
mov
pop
neg
divl
mov
sbb
or
in
fcmovnu
adc
ret
inc
push
push
push
mov
mov
mov
call
and
sub
ja
pop
loope
push
or
push
or
ret
adc
jo
inc
inc
fldcw
outsl
adc
add
adc
jne
sbb
jnp
das
push
mov
cmp
jne
mov
adc
test
add
pop
pop
pop
xchg
fcmovnu
fnsave
mov
dec
cmp
jb
into
add
call
add
int
bound
jne
mov
insb
loope
sub
jnp
cmp
jmp
fbstp
jp
add
cs
sub
jmp
mov
lcall
jbe
mov
jnp
stc
mov
sub
mov
pop
in
test
aam
ret
test
or
jmp
fldt
sbb
sti
jne
or
mov
mov
in
lock
pop
mov
decl
fdivr
fiaddl
add
add
and
push
cwtl
loope
dec
mov
cmp
sarl
test
jecxz
add
sar
std
fdivp
popa
arpl
fnstenv
pusha
push
mov
testb
jne
js
insl
cmp
dec
cmpl
jbe
and
fldt
mov
rcll
jecxz
loop
incl
gs
push
and
icebp
out
add
mov
mov
dec
jmp
bnd
out
ja
mov
add
insl
in
fnstsw
sbb
cmp
mov
ds
add
or
push
jb
loope
ja
or
add
adc
adc
fcmovnu
cmp
das
add
adc
cs
je
push
mov
push
into
adc
stos
adc
pop
insb
shlb
mov
rorb
lock
add
ret
pop
loop
or
mov
add
mov
jecxz
mov
jle
add
nop
jbe
mov
cmp
mov
mov
jp
jbe
mov
sub
push
push
pop
shlb
ss
mov
mov
mov
out
add
lea
pop
mov
enter
inc
test
jne
fisttpl
and
add
mov
sbbb
pop
mov
inc
inc
add
movsl
lea
cmp
fidivrs
in
add
cmp
lea
xor
sti
jg
and
pop
cmp
pop
push
add
jbe
push
mov
cmpsb
inc
sbb
xor
jmp
adc
mov
and
mov
mov
adc
push
adc
push
pop
fwait
rorb
cli
ds
add
mov
push
jne
add
mov
jle
test
pop
stos
cmp
xchg
lock
je
jle
xor
sbb
mov
bound
adc
lods
xor
push
fisttps
inc
cmp
inc
push
xor
test
mov
jne
dec
jmp
imul
mov
jo
test
cmp
mov
or
cmpl
sub
inc
enter
dec
or
dec
ret
or
dec
jg
test
les
sti
inc
xor
or
fidivs
mov
sub
jmp
add
lret
mov
imul
test
je
mov
mov
into
cmp
test
or
adc
pop
dec
div
cmp
jmp
pop
push
insl
jmp
sub
push
push
pushl
mov
push
mov
add
cmpb
adc
pusha
cmp
adc
push
or
cmpl
inc
das
mov
xor
mov
xor
cmp
hlt
ja
ja
ret
mov
lods
gs
in
in
sub
pop
pop
pop
mov
push
mov
fistps
xor
in
sub
bnd
pop
or
test
and
adc
out
pop
add
add
mov
add
add
aam
and
push
arpl
dec
xchg
pop
mov
je
xor
int3
test
jne
fldcw
jb
sbb
loopne
daa
ds
push
cmp
icebp
jmp
mov
or
std
push
pop
xor
pop
cmp
roll
stc
add
pop
mov
int3
mov
jmp
push
fldlg2
jbe
jnp
adc
add
lea
adc
in
mov
jb
cmp
repz
cli
pop
jne
test
lea
std
ja
mov
sub
lea
andl
add
sbb
jbe
or
xchg
lret
add
mov
rorb
adc
add
in
pop
mov
ljmp
or
adc
sahf
out
cmp
or
push
or
xchg
mov
sub
orl
dec
or
roll
and
pop
inc
sbb
xor
jl
or
mov
hlt
imul
arpl
push
enter
ret
mov
int3
loope
add
xchg
in
inc
cmpsb
jb
cmp
sbb
inc
jnp,pt
add
push
arpl
xor
or
pop
add
add
adc
add
or
shlb
cmp
or
add
and
aad
sbb
out
pop
negl
sub
jg
clc
sub
or
jge
fldl
add
or
xor
outsl
jmp
adc
decb
insb
adc
ja
mov
sub
bound
jb
or
xlat
xorl
or
xchg
clc
xchg
add
push
orb
push
mov
add
sub
je
mov
aaa
mov
fcompl
nop
hlt
rcll
sbb
mov
sahf
sbb
cmp
inc
fldl
insl
or
test
cmp
sbb
jl,pn
push
or
lcall
les
jge
addb
fnsave
pop
or
arpl
adc
inc
mov
cmp
dec
ret
xor
push
push
and
loope
orb
movsl
mov
and
or
xlat
test
inc
xchg
mov
or
or
pop
cmp
xor
inc
inc
mov
add
dec
call
jae
sbb
jge
pop
and
add
lods
subl
subl
pop
jle
cld
mov
lea
add
dec
dec
dec
mov
xchg
push
mov
xor
jbe
outsl
xchg
aad
int3
lea
mov
les
adc
mov
pop
cltd
mov
mov
add
mov
jno
jne
mov
sarb
ret
push
cmpl
mov
fidivrl
or
pop
jg
pop
xor
adc
lods
pop
jmp
adc
or
jne
or
loopne
mov
mov
and
jo
jge
mov
jp
inc
cmp
inc
add
lock
out
add
adc
dec
hlt
sub
scas
mov
adc
add
xchg
mov
sbb
ljmp
pop
lods
sbb
dec
dec
xchg
pop
jmp
int
or
cs
dec
pop
je
insl
mov
sti
clc
aad
or
shlb
jecxz
inc
loopne
xor
add
mov
inc
add
divl
inc
gs
add
sub
inc
aas
adc
xchg
in
mov
je
aam
ret
rolb
jne
sub
mov
es
dec
inc
and
mov
mov
pop
dec
or
mov
orb
or
stc
jmp
pop
sbb
iret
nop
bound
sbb
sbb
pop
pop
in
and
add
cltd
sbb
rcll
mov
mov
mov
fmuls
pop
scas
loope
rorb
xchg
ja
inc
push
pop
jne
testl
pop
cmp
inc
adc
or
mov
test
pop
cmp
cmovb
cmp
or
sbb
ret
mov
js
mov
lock
or
orl
or
add
fiaddl
xchg
lcall
lret
sub
jbe
dec
cmp
inc
jne
sub
les
add
mov
movsb
fisttpl
test
je
sbb
andl
std
sti
or
orl
jmp
inc
cmpl
outsb
ret
jl
or
or
adc
dec
xchg
dec
push
cmp
nop
sub
add
inc
js
movsl
lea
scas
and
pop
iret
mov
xor
out
mov
arpl
mov
jno
clc
mov
or
andl
out
dec
sbb
cmp
jno
mov
bound
add
flds
push
sub
testl
or
insl
fldl
dec
fimuls
js
mov
test
adc
popa
lock
mov
pop
xor
xor
test
andl
jbe
inc
cmp
jl
in
addr16
lcall
icebp
add
xor
jg
mov
daa
add
jne
clc
or
xchg
fbstp
data16
push
add
loope
or
lods
mov
fbstp
out
dec
sub
test
ret
rorb
mov
shl
in
add
jb
in
loop
push
jmp
andb
cmp
or
fiaddl
ret
or
adc
sbb
adc
test
or
movlps
dec
popf
add
adc
dec
and
pop
mov
adcl
add
ss
or
mov
pusha
dec
xchg
arpl
dec
insl
push
jge
sbb
push
and
inc
lret
xchg
and
cmp
cmpb
sub
sti
or
call
mov
fists
pop
cmp
fidivl
fistpl
mov
sub
inc
xchg
inc
je
mov
testb
stc
leave
je
xchg
sbb
enter
idivl
add
sub
mov
sbb
pop
test
out
xor
xchg
xor
insb
sarb
out
sbb
add
scas
pop
add
and
xchg
stc
or
sub
or
cs
and
neg
aaa
cld
jmp
cmp
ja
mov
mov
shl
mov
and
adc
xchg
in
adc
rclb
cmp
sbb
xlat
movsl
cmp
ja
je
mov
js
rep
mov
and
rep
sub
jl
push
mov
cmp
sbb
std
sbb
add
fistpll
loopne
dec
mov
fnstcw
shlb
fwait
andw
les
outsl
mov
data16
cmp
jb
add
xchg
pop
sti
sub
mov
or
not
push
sbb
ds
add
sbb
fcoml
and
cmp
imul
add
xlat
ja
repnz
mov
loopne
add
mov
or
stos
or
imul
or
inc
mov
mul
js
aaa
insb
mov
clc
push
loopne
xor
es
filds
or
push
inc
dec
and
aas
sti
sub
mov
add
je
and
je
pop
je
lock
mov
xor
daa
adc
test
or
add
ljmp
adc
ja
cmp
ja
lea
add
add
sub
out
int
imul
push
neg
jle
js
pop
sub
mov
inc
inc
and
pushf
mov
fbstp
popa
jb
dec
and
adc
insl
mov
adc
push
leave
ljmp
aad
add
testb
jp
and
negb
dec
pop
add
pop
jne
push
or
mov
fimull
vcvtsd2si
mov
nop
fcomi
movzwl
shlb
mov
xor
push
fcomp
inc
push
push
inc
fs
movsl
inc
push
scas
dec
pop
iret
mov
xor
and
inc
das
hlt
push
cwtl
pop
mov
add
xor
hlt
sbb
pop
mov
fdivrl
rcrb
mov
xchg
jle
outsl
sbb
and
or
mov
ljmp
lahf
dec
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
idiv
inc
push
push
dec
popa
jae
push
popa
insb
jne
push
add
jecxz
sub
xchg
aad
mov
or
push
cld
ret
or
adc
jbe
pushf
sahf
in
push
inc
mov
push
negl
push
pop
push
push
mov
push
sbb
rolb
push
or
pop
add
jge
push
pop
push
push
int
adc
cmp
cmpb
je
add
jne
popa
out
xchg
rolb
test
leave
or
test
loope
sbb
sub
pop
xchg
daa
adc
mov
dec
jb
dec
cmp
adc
aaa
jno
cld
push
testl
push
cmpl
jo
cli
sub
je
cld
ja
sub
xchg
test
daa
mov
cli
or
jo
sti
ja
les
cmp
cli
out
push
je
sub
outsl
jne
ret
and
and
inc
jmp
push
pusha
add
stos
or
inc
orl
or
mov
push
cmp
xor
out
je
orl
into
lock
stos
sub
sbb
outsb
fistl
mov
ficoml
sub
fcoml
pop
mov
pushl
and
sub
add
sub
sbb
jo
jecxz
and
adc
nop
pop
inc
or
and
movsl
ficoml
das
je
dec
dec
pop
push
sti
pop
mov
or
shrl
pusha
psadbw
xor
xor
gs
pop
insl
inc
or
fistpl
std
ja
or
add
lods
adc
sbb
in
or
ret
adc
cmp
mov
inc
xchg
pop
adc
negl
dec
jmp
ret
xor
test
shll
frstor
dec
pop
add
xchg
jns
sub
pop
cmp
push
sub
aaa
cvtps2pi
dec
jmp
add
sti
xchg
pop
add
je
jmp
cmp
sub
insb
fldt
and
add
sub
std
sub
es
enter
leave
pusha
mov
loopne
dec
jmp
mov
jmp
bndldx
into
test
push
add
mov
jmp
mov
out
lret
aaa
js
dec
push
std
mov
add
lahf
cmp
jecxz
mov
add
sbb
sbb
mov
pop
je
sub
mov
movsb
cmp
js
arpl
push
adc
sbb
jae
pop
mov
scas
mov
aam
or
mov
call
mov
xchg
mov
mov
pop
mov
sub
popa
xchg
pop
inc
shll
lods
je
xlat
cmc
into
push
inc
add
mov
loop
mov
cmp
jne
add
jns
cmp
pop
mov
lcall
add
jnp
sbb
and
or
dec
test
pop
jo
adc
sub
ja
sub
mov
inc
fiadds
cltd
shlb
jg
xor
add
icebp
cmp
insb
add
xor
mov
sahf
pop
mov
xor
mov
scas
pop
cmp
jle
add
inc
mov
mov
es
adc
pop
lods
std
push
adc
or
shrl
adc
mov
xchg
ficoms
stos
xor
sub
fdivr
pop
cld
dec
movb
pushf
mov
push
mov
add
ret
mov
lock
idiv
add
mov
adc
mov
leave
mov
fbld
adc
jg
fisttpl
and
ret
jle
jnp
xchg
push
std
sbb
inc
bound
outsl
adc
imul
add
mov
mov
fidivrl
imul
inc
mov
dec
orb
fcompl
xchg
or
or
loope
push
and
push
mov
loope
xchg
sbb
orl
add
xchg
imul
push
or
fistps
add
add
or
jge
scas
or
mov
mov
jnp
cmpb
push
cmpl
fsts
mov
jle
mov
call
adc
cmpl
sbb
movsb
push
sbb
pop
mov
in
jo
and
pop
ret
add
or
inc
adc
in
sbb
sbb
and
test
cmp
jmp
adc
mov
xor
iret
shl
push
je
lock
pop
js
addb
inc
mov
sbb
mov
add
and
pop
aas
push
icebp
out
test
test
popl
dec
push
cmpb
sbb
rcr
mov
clc
dec
jl
lock
mov
or
adc
out
adc
ret
mov
adc
sbb
add
cmc
add
filds
jne
xor
daa
and
inc
jg
sub
and
pop
jae
or
test
stos
adc
add
mov
xchg
dec
inc
popf
sbb
or
xlat
pushl
pop
es
add
loopne
add
mov
add
or
or
push
cld
es
decl
int3
mov
mov
lods
mov
movsb
int
lahf
xor
aam
mov
pushf
mov
cwtl
mov
lret
or
outsb
leave
jns
push
cmp
test
dec
add
mov
mov
add
addr16
mov
sub
iret
pop
sub
dec
pop
test
mov
scas
push
mov
push
pop
pop
sbb
cmpsl
aaa
xlat
add
pop
shll
inc
imul
dec
xchg
adc
or
or
lea
cld
dec
aaa
adc
pop
mov
es
jne
push
ljmp
ja
and
pop
sar
aaa
add
dec
jmp
ret
lahf
pushf
lock
arpl
arpl
into
enter
sbb
or
add
sbb
sti
in
pop
aad
lea
jmp
arpl
cmp
mov
mov
aaa
mov
push
cld
sub
ja
add
push
shr
mov
icebp
incl
pop
cmp
jne
dec
je
mov
rorb
insl
fldcw
lahf
loop
sub
add
pop
adc
fcomi
sub
push
inc
sub
cmp
jne
je
ljmp
loope
cmp
fstpt
and
sbb
push
adc
scas
adc
shr
or
js
rcll
inc
pop
pop
xor
andb
add
cmp
push
in
xor
mov
push
insl
pop
or
xchg
ss
dec
inc
int3
pop
leave
mov
insb
cmp
pop
jecxz
fisttpll
jo
jle
aas
and
sub
sbb
arpl
aaa
and
pop
push
mov
cld
icebp
and
sub
xor
mov
je
icebp
lock
jl
icebp
dec
mov
adc
push
pop
stos
test
sahf
push
subl
pop
repnz
mov
xchg
inc
andl
lods
mov
push
sbb
jne
sub
bound
sti
sub
int3
xor
mov
sbb
push
xchg
movsb
clc
push
jp
fcompl
pop
cmp
inc
test
mov
push
fists
jo
push
cld
push
add
lea
and
sbb
jg
inc
jle
cmp
push
and
lock
xor
stos
push
lea
push
push
popl
mov
mov
mov
sbb
mov
xor
cld
mov
lahf
pop
dec
fisttpll
push
shll
jno
ret
pop
subl
xor
push
ja
incl
mov
pusha
or
mov
mov
mov
push
test
mov
clc
pop
subl
sahf
sbb
shll
jae
fdivs
jb
addb
pop
pop
insb
and
xor
and
cmp
fs
enter
adc
js
loop
or
cmpsb
add
or
mov
sub
fists
or
test
jmp
sbb
mov
adc
movups
pop
call
dec
in
and
cmp
hlt
rcll
xchg
adc
inc
out
and
or
adc
loopne
jae
push
push
or
es
loopne
js
insb
mov
jmp
push
mov
jl
and
dec
jle
or
cs
test
jne
xchg
adc
mov
cmp
sub
call
fcmovnb
mov
push
cmp
mov
loope
mov
add
nop
jge
mulb
pop
mov
es
or
in
ds
push
pop
fwait
das
cmp
mov
xchg
or
lahf
sub
enter
aaa
pop
hlt
test
sub
inc
push
sbb
dec
dec
inc
push
sbb
cmp
sbb
xor
pusha
imul
pop
xchg
je
in
mov
or
scas
popf
aaa
and
xchg
pusha
movsb
aaa
nop
add
mov
out
aaa
fs
xchg
sub
fsubl
test
pop
push
insl
scas
js
xor
sete
lds
aam
sub
in
mov
mov
scas
loopne
roll
and
mov
mov
and
xor
bound
rorb
dec
mov
jg
adc
test
jne
pushf
xor
mov
sbb
stos
fisttpll
mov
mov
add
imul
shll
or
or
fildll
sbb
leave
inc
das
jl
fldt
testb
flds
lret
add
mov
xor
push
jo
enter
mov
or
mov
sbb
jne
mov
mov
nop
je
cld
push
imul
mov
dec
daa
orl
les
xlat
inc
or
inc
mov
dec
std
mov
mov
outsb
or
incb
data16
mov
sahf
add
xor
jae
loopne
mov
stc
mov
sbb
xorl
jnp
stos
mov
mov
add
mov
add
xor
repnz
mov
add
hlt
decl
jne
sbb
out
mov
addb
mov
nop
and
cmp
sbb
add
cmp
aaa
add
pop
stc
sub
out
or
stc
cld
inc
cld
xlat
cmp
insl
pusha
enter
mov
adc
daa
adc
mov
jle
mov
and
imul
sbb
rcrb
or
add
push
pop
or
add
or
pop
pop
add
jbe,pn
pop
adc
inc
xor
mov
lea
or
sbb
testl
fs
add
push
or
outsb
lods
push
mov
je
pop
cmp
inc
dec
jns
add
test
add
add
pop
or
push
test
lea
cmc
cmpsb
cwtl
mov
je
jmp
mov
xchg
mov
outsl
dec
ds
xchg
cmp
xchg
or
adc
int
mull
sbb
add
sub
mov
mov
in
sbb
hlt
je
mov
enter
or
mov
jns,pn
jl
call
dec
push
sbb
in
inc
xchg
jbe
and
insb
xor
mov
dec
fmuls
adc
nop
clc
jnp
mov
or
mov
jg
fisttpll
sbb
fxch
std
lret
enter
ljmp
insb
fidivrs
divb
xor
add
adc
jecxz
f2xm1
int3
daa
shr
lret
xchg
sub
rcrb
adc
shr
sti
push
fld
mov
mov
fstpl
adc
fdivr
lret
dec
lret
int
fisubl
ret
outsb
lods
std
das
sti
je
insb
insb
add
ror
shl
inc
pushl
fabs
rcll
adc
fld
rol
sti
into
or
xchg
std
jmp
rclb
testl
pop
or
lahf
insb
mov
lock
int
int3
addr16
xchg
das
stos
imul
push
mov
jmp
imul
cld
jmp
add
js
add
sub
pop
hlt
fildll
fdivs
ljmp
js
jb
inc
mov
movzwl
shr
and
lods
ficompl
leave
cmp
fbstp
add
mov
adc
or
jne
inc
outsl
add
ja
jno
les
xor
mov
fistps
add
add
xor
jg
clc
inc
inc
push
push
adc
sti
fcoms
rorl
jns
push
dec
data16
cmp
movsl
cmp
inc
cmp
insl
lock
js
add
shl
or
mov
int
dec
or
push
adc
adc
cmp
dec
jne
dec
pop
aas
xchg
push
inc
mov
inc
mov
stos
pop
and
mov
adc
arpl
adcl
xchg
mov
mov
add
es
jle
popa
sbb
sbb
pop
call
mov
nop
cmp
and
add
mov
dec
pop
aas
testb
add
cmpl
adc
inc
ss
inc
mov
jne
sbb
sbb
lret
xchg
sub
out
call
sub
int3
jmp
divb
adc
jle
nop
scas
jnp
movl
jo
mov
fs
call
mov
orb
shrb
pusha
out
imulb
out
inc
xor
sbb
mov
ljmp
insl
xor
negb
inc
push
push
sbb
jg
jmp
sbb
push
sbb
jl
xor
mov
int
fucomp
mov
fistpll
shlb
sub
arpl
aam
mov
mov
lcall
iret
push
push
in
sub
rcrl
in
imul
in
push
test
mov
test
or
stos
insb
pop
pop
and
add
popf
out
subb
and
jmp
adc
out
jae
ret
ljmp
add
subl
xchg
pop
push
in
loop
inc
iret
xchg
mov
dec
inc
push
dec
sbbl
and
enter
movsb
addr16
dec
test
dec
lods
cltd
inc
push
nop
and
mov
sahf
add
xor
inc
nop
or
mov
jns
les
inc
sahf
sub
test
cmpsb
nop
add
xchg
aam
nop
out
jns
fadd
in
inc
push
loopne
sarb
inc
sahf
add
fsubr
push
nop
addr16
lock
enter
add
clc
adc
cmp
cld
sbb
xchg
sahf
add
or
or
in
jns
adc
inc
sahf
sub
insb
sbb
sahf
add
jl
mov
mov
cmp
xor
jns
nop
enter
push
nop
out
lock
add
movsl
sbb
in
inc
push
inc
dec
and
in
sbb
push
nop
or
inc
sbb
adc
pop
in
sbb
add
push
pusha
pusha
iret
add
sbb
push
sbb
insb
test
sbb
iret
jo
je
sbb
iret
add
jl
iret
add
mov
mov
test
mov
add
sbb
mov
repnz
iret
nop
call
movb
push
push
sbb
cmp
mov
inc
movsb
cmp
cmp
test
lods
push
pop
pop
mov
mov
sbb
mov
pop
mov
cmp
sbb
pop
sbb
add
int3
pop
pop
mov
shlb
sbb
adc
cmpb
sahf
add
fcompl
loopne
or
inc
in
pusha
xor
nop
in
cmp
addr16
sbb
or
add
nop
adc
sbb
add
jmp
xchg
sbb
mov
cmp
fcomps
add
cmp
enter
or
pop
enter
push
cmp
sbb
pushf
and
and
cmp
enter
sub
add
jae
xor
or
inc
sahf
xor
cmp
nop
addr16
inc
add
ljmp
xor
gs
je
inc
imul
jb
insl
inc
dec
cltd
or
jae
jb
sbb
jbe
test
dec
outsb
imul
ret
or
inc
add
popa
xchg
pop
or
das
adc
js
ud2
fsts
orb
outsb
gs
in
push
add
inc
and
daa
mov
push
fwait
inc
gs
insb
lods
mov
and
or
sbb
xchg
int
nopl
je
seto
inc
push
add
inc
cmp
push
jne
je
outsb
add
push
popa
dec
jbe
mov
outsl
adc
dec
jae
push
std
pop
sti
sbb
fs
dec
gs
popa
addr16
ja
sub
adc
push
in
sti
mov
jne
aam
push
popa
bound
and
outsb
fstp
aas
inc
je
insb
dec
inc
jae
gs
xor
imul
je
sub
add
adcb
push
xchg
inc
or
push
xor
fmul
adcb
inc
bound
add
push
push
pusha
fldt
push
outsl
pop
inc
imul
inc
lcall
dec
fildl
insb
insb
push
or
iretw
pop
leave
sub
dec
adc
push
inc
inc
push
outsl
insb
jns
sub
data16
imul
fdivs
push
cmovge
jb
pop
mov
dec
imul
inc
jns
or
adc
imul
inc
pop
notb
ja
enter
dec
inc
imul
jge
insb
shlb
xor
push
dec
outsl
jbe
pusha
js
mov
jne
inc
or
xchg
mov
or
insb
pusha
mov
jmp
xorps
lods
or
adc
cmpsl
sarl
popa
xor
add
fadds
sub
inc
cmp
jp
int
push
outsl
pop
ret
jae
sbb
aas
push
sbb
ss
jo
xchg
ret
adc
inc
and
jb
cmp
ja
flds
dec
push
mov
data16
ficoml
sbb
es
arpl
bound
pop
mov
mov
ret
inc
test
jo
insl
push
mov
jle
jb
push
dec
xchg
inc
popa
arpl
add
sahf
add
pop
push
and
dec
inc
mov
dec
ljmp
cwtl
push
scas
lods
mov
inc
lret
arpl
pop
pop
xchg
adc
outsw
inc
jecxz
daa
sub
mov
adc
cmp
mov
jb
push
and
push
lods
adc
adc
lret
adc
adc
jo
rcll
adcb
mov
cmpsl
push
jnp
push
sub
fdivl
push
shll
push
mov
dec
or
gs
push
in
mov
sbb
mov
dec
push
aas
push
arpl
mov
dec
push
push
fs
nop
jl
test
adc
add
out
inc
push
cs
fsubr
cmp
sbb
notb
push
inc
call
es
adc
or
or
out
mov
xor
pop
add
cmp
std
mov
push
push
sbb
or
add
pop
pop
ja
jmp
push
push
add
pop
mov
popa
mov
inc
dec
jne
aas
inc
std
cwtl
add
je
aam
add
push
fadds
je
mov
loopne
push
insl
stos
or
xchg
in
je
push
sub
pusha
inc
enter
mov
sbb
lea
mov
adc
or
dec
je
insl
dec
popa
jl
jl
insl
sub
jbe
imul
and
pusha
jno
push
xor
inc
jnp
pop
ljmp
jo
dec
pusha
dec
or
push
loop
fisttps
add
inc
sbb
shlb
adc
mov
adc
push
loope
xor
sbb
or
outsb
orb
notl
insb
scas
jnp
inc
and
movsl
inc
in
out
loope
jmp
mov
xchg
jne
mov
jmp
xor
pop
or
je
loope
xor
push
push
xor
call
in
xchg
bound
outsl
popaw
or
gs
mov
add
jae
pop
dec
jae
inc
cmpl
mov
ds
fsubl
popa
mov
inc
jg
frstor
das
pop
pop
aaa
ss
aaa
sub
xor
aaa
popf
mov
divb
xor
sub
xor
xchg
add
cmp
cmp
test
sbb
shll
mov
pusha
gs
bound
jns
popf
enter
cs
loop
je
rorb
pop
or
add
mov
sbb
add
cli
lods
or
push
decl
hlt
pop
fildll
ret
add
ret
insb
pop
fisttps
sbb
outsb
mov
pop
test
mov
sub
clc
ljmp
sub
jl
repnz
and
xor
adc
imul
sub
inc
popa
push
push
pop
mov
cld
es
lcall
sar
mov
lock
nop
inc
push
sbb
in
inc
push
sbb
aam
sbb
int3
enter
nop
inc
sarb
mov
nop
inc
push
sbb
sbb
xchg
push
sbb
mov
inc
addb
mov
cs
fs
mov
pop
push
in
dec
cs
dec
dec
xchg
dec
cs
cs
cs
and
mov
sbb
xchg
dec
adc
leave
dec
cs
and
lock
push
lods
loop
nop
fwait
push
mov
es
sbb
sub
jp
adc
xor
inc
adc
push
das
push
xor
mov
xor
xor
cmp
mov
fucomi
xor
aaa
or
xor
xor
pop
cmp
jns
adc
xor
xor
mov
leave
add
pop
cmp
fwait
insb
pop
nop
xor
sbb
je
mov
loopne
pusha
ja
ja
dec
gs
orl
inc
add
shl
lfs
in
mov
hlt
or
push
push
dec
mov
push
popw
add
int3
cmpsb
ret
cltd
in
add
popa
fisubs
or
mov
pushf
push
dec
xchg
add
xlat
imul
sbb
clc
mov
mov
mov
xchg
sti
sbb
mov
pop
xor
lret
shl
or
out
pusha
sbb
rcrb
jae
xor
jae
xor
sbb
mov
test
testl
and
inc
or
inc
aas
pop
ja
add
mov
data16
add
repz
lcall
push
mov
push
popa
mov
call
push
xchg
insb
sub
push
loope
pusha
jp
pusha
cmpsl
inc
cmpsl
add
sbb
pusha
push
push
mov
into
lods
movsb
xchg
std
call
mov
xchg
das
pusha
adc
pop
es
sub
jg
adc
dec
jbe
popa
data16
lds
sbb
mov
je
xor
xor
adc
cmp
pop
dec
push
mov
mov
add
ljmp
mov
cmpb
cs
fstpt
push
mov
push
push
inc
xor
jo
and
pop
aam
or
or
add
add
pop
sub
shlb
gs
push
fstl
out
in
sbb
add
adc
dec
subl
mov
subl
jp
adc
xor
inc
adc
dec
add
xor
adc
fwait
dec
popa
or
adc
icebp
lcall
jg
int
flds
nop
mov
pusha
clc
or
insb
lcall
loopne
add
add
movsl
mov
inc
pop
and
jle
xor
add
lahf
in
or
mov
sbb
pop
fdivrl
xchg
imul
push
dec
mov
push
ret
aam
clc
mov
rol
add
mov
xor
es
add
inc
or
sbb
stos
xchg
sti
dec
jp
andb
jle
sub
or
xor
popf
imul
adc
push
arpl
push
mov
inc
in
push
or
jo
mov
insb
add
mov
lcall
out
mov
in
or
inc
or
leave
push
mov
dec
push
pop
shr
xchg
add
jg
dec
shlb
fwait
dec
aam
dec
enter
or
scas
clc
or
sub
ret
insb
dec
mov
inc
pusha
push
push
xor
push
rclb
mov
inc
notl
adc
xor
or
jmp
out
xchg
aad
leave
cmp
pop
pop
jg
push
xchg
aad
test
fs
add
sbb
cwtl
sub
enter
add
sbb
add
pop
xor
adc
add
jg
or
arpl
lret
int3
enter
enter
dec
into
fcmovnu
fcmovu
lret
loopne
jecxz
in
das
inc
jb
outsl
jb
inc
fbstp
clc
push
jne
je
and
and
popa
jg
in
and
pop
xor
xor
xor
ss
cmp
inc
inc
inc
inc
inc
add
jbe
inc
push
xchg
add
mov
push
fs
push
leave
push
xor
push
mov
inc
xchg
mov
mov
or
add
test
stos
stos
fs
aad
add
add
mov
pop
inc
xchg
jl
mov
or
gs
inc
jb
fsubrs
loopne
je
xchg
sub
xor
jbe
inc
outsb
jae
lods
add
adc
xor
jbe
jp
push
imul
cltd
mov
or
insb
insb
outsl
arpl
arpl
shll
or
inc
gs
addb
pop
sub
sbb
push
push
adc
cwtl
lds
or
shrl
bound
js
jo
adc
mov
pop
inc
outsl
insl
insl
popa
outsb
xor
loopne
test
push
pop
adc
shrb
xchg
or
mov
loopne
push
outsb
push
out
and
jo
pop
std
sbb
xchg
mov
ja
or
jae
and
test
rorl
sub
insb
jae
ja
or
pop
xchg
inc
stc
cmp
mov
aas
inc
inc
xor
push
sbb
push
das
sub
push
outsl
imul
pop
and
push
sti
and
fs
pop
int
or
or
mov
add
enter
or
pushf
add
push
mov
mov
push
ss
jo
xor
sbb
dec
gs
cmp
ss
push
pop
nop
sub
xchg
pop
clc
sbb
jbe
jno
bound
fs
jns
jne
testb
inc
outsl
es
rcr
and
test
in
test
adc
jae
mov
ret
jo
arpl
adcb
add
pop
jg
mov
add
add
pop
inc
sub
loopne
xlat
cmp
add
sbb
push
or
adc
jae
pop
jo
inc
or
repz
fsubs
or
add
fdivs
add
loop
push
fwait
test
aam
and
and
test
dec
pop
jae
xor
sarl
inc
dec
inc
inc
pop
lods
push
nop
clc
jbe
mov
les
and
pusha
inc
inc
push
ret
inc
sub
fstp
fstp
rolb
add
add
sbb
int
imul
or
inc
or
jae
adc
xor
add
mov
add
dec
push
daa
sbb
insb
mov
dec
rcrb
in
jae
lock
arpl
mov
add
push
and
sti
lods
sbb
or
rcl
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
push
incl
mov
add
add
add
add
or
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
add
add
push
add
add
add
in
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
inc
inc
add
nop
add
add
push
add
in
add
add
add
add
push
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
js
add
add
xor
xor
xor
xor
xor
xor
bound
xor
add
dec
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
add
imul
outsl
add
jns
jae
je
add
jae
sub
and
dec
add
arpl
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jbe
popa
add
add
add
add
add
insb
add
je
data16
jb
insl
add
add
inc
add
add
imul
jb
jns
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
jae
imul
add
xor
add
add
add
add
xor
xor
sub
add
add
add
add
add
add
je
add
outsb
add
insb
add
popa
add
add
add
popa
add
popa
add
add
add
adc
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
popa
add
popa
add
add
js
add
add
add
sbb
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jbe
popa
add
add
add
add
add
insb
add
je
data16
jb
insl
add
add
inc
add
add
add
add
xor
xor
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
inc
inc
xor
add
add
pop
add
lods
pop
add
nop
pop
add
mov
pop
add
les
add
rolb
add
loop
add
repnz
add
add
add
push
or
add
add
add
add
add
add
sub
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
dec
gs
popa
addr16
outsl
js
add
or
es
inc
cmp
lret
mov
arpl
lea
adc
jge
jo
int
sub
js
aas
add
sti
arpl
int
dec
mov
dec
sub
shlb
arpl
jecxz
fwait
xchg
sub
cmp
sub
cs
push
inc
sbb
test
mov
rol
jecxz
add
rcrl
or
test
in
mov
cvtpi2ps
mov
jnp
fwait
push
sbb
jp
cmp
mov
jbe
into
ja
arpl
or
jb
insb
pushf
lret
or
push
inc
movsb
push
inc
imul
sub
jg
mov
inc
xchg
out
addl
mov
cmp
fcompl
dec
sbb
faddl
loopne
mov
adc
jecxz
push
adc
mov
mov
daa
mov
das
movsl
lahf
rcll
sub
cmp
xor
adc
nop
xchg
insl
and
mov
jae
push
mov
xor
xor
inc
mov
xchg
lods
xchg
push
test
push
sub
fcoms
test
pop
or
sub
xlat
adc
inc
les
fcomps
sti
xchg
fs
xor
adc
pushf
lret
adc
aam
mov
mul
jnp
adc
push
xchg
fdivrl
pop
sub
cltd
mov
push
loope
or
adc
les
je
push
push
adc
xchg
sbb
adc
rcr
pop
rep
adc
popf
xchg
push
inc
adc
lret
adc
dec
fistl
and
outsb
inc
call
adc
rcll
and
dec
les
push
adc
mov
mov
adc
mov
shll
insb
les
adc
adc
shll
hlt
sub
push
shr
and
adc
shll
insb
adc
insb
insb
push
insb
and
inc
lods
push
arpl
rcll
sub
fwait
mov
xor
rcrl
arpl
roll
rorl
mov
sub
xchg
rcrl
lods
xor
and
in
insl
jmp
inc
mov
jle
adc
lds
in
xchg
insb
add
shrl
sbb
or
in
adc
cmp
adc
mov
lret
adc
lret
mov
sar
adc
lret
in
lret
or
adc
adc
mov
dec
shll
sub
out
adc
adc
mov
push
in
mov
push
push
rorl
add
lret
adc
rcll
stc
shll
rcll
lret
adc
in
rcll
push
out
or
pop
rcll
and
shr
in
rcl
adc
lret
dec
adc
shr
sbb
adc
mov
adc
outsl
xor
adc
adc
inc
push
sti
dec
xchg
rcll
dec
rcl
mov
mov
shrl
mov
rcll
insb
adc
adc
in
jp
lds
dec
in
adc
push
adc
rcll
ror
test
jmp
shll
insb
insb
imul
rcl
in
rcll
adc
lods
lret
xchg
adc
adc
and
adc
adc
dec
dec
fwait
adc
mov
mov
adc
sub
inc
arpl
roll
fwait
imul
lret
imul
adc
ror
insb
jmp
rcll
push
adc
rcll
rorl
adc
arpl
push
fwait
arpl
lret
fwait
lods
mov
adc
insb
xchg
adc
sub
lods
adc
adc
insb
adc
push
and
sti
es
inc
dec
repnz
ret
imul
dec
jp
pop
add
mov
lret
lret
adc
in
outsb
mov
imul
js
jbe
jns
inc
mov
pop
int
aas
dec
test
add
xor
adc
mov
sub
mov
and
dec
jle
int3
fmuls
push
cmp
inc
outsb
fimuls
cltd
inc
pop
jns
jl
push
mov
insl
xchg
or
mov
nop
test
fcmovnbe
add
in
pop
sub
stc
repz
and
cmp
cmpsb
lods
add
inc
hlt
sti
jp
xor
pop
jl
js
add
xchg
js
cmpsl
fbld
xchg
and
ret
pop
cmpsb
addr16
mov
jp
cmp
xchg
jno
subb
sbb
call
dec
jno
sbb
popa
cmp
add
andb
pop
pop
jb
xchg
cmp
or
stc
push
andl
mov
pop
sti
subb
mov
and
jb
inc
test
ss
xchg
rorl
adc
adc
fstl
in
push
icebp
sbb
xchg
adc
and
or
adc
and
xlat
sbb
repnz
xchg
add
or
pop
je
sub
cli
mov
in
das
mov
mov
sbb
loopne
fs
pop
call
push
pop
mov
fidivrs
test
sbb
fbld
pop
push
pushl
adc
fiaddl
xor
mov
mov
xor
call
das
jnp
or
push
in
arpl
je
add
xor
loopne
jp
xchg
les
fidivrl
cld
rorb
xchg
insb
mov
cli
pop
xor
sti
sbb
push
ss
inc
xchg
fiaddl
adcl
fdivrl
outsl
stos
pop
fs
out
jbe
stc
ds
fs
jns
call
int
aam
cld
shl
cmp
cmp
cmp
orl
or
movsl
adc
lcall
ljmp
adc
sub
add
or
mov
push
xchg
lahf
daa
pop
xor
sbb
ja
inc
out
dec
mov
not
inc
adc
out
out
add
dec
sti
cmp
sub
xlat
and
cmpl
loopne
aad
jmp
inc
imul
shl
xchg
or
add
ja
xchg
out
mov
lret
pusha
aaa
pop
in
jmp
cmp
popf
add
pop
in
out
fdivr
outsb
jecxz
xchg
in
pcmpgtw
sub
pop
push
shld
mov
cmp
xor
xchg
rorl
mov
push
xchg
adc
add
push
push
lret
mov
xchg
iret
and
nop
cli
mov
sub
mov
mov
mov
mov
lahf
mov
mov
hlt
mov
mov
push
fiaddl
xchg
outsb
jle
out
mov
jge
sti
int3
lret
es
pop
xor
dec
push
aas
mov
add
mov
sub
adc
xlat
mov
shlb
jge
cs
push
jnp
pop
lcall
push
dec
dec
add
repz
rorb
out
push
lds
hlt
pop
lret
adc
push
mov
imul
stc
pop
aad
push
hlt
in
pop
lcall
push
lods
hlt
inc
mov
cs
bound
jae
pusha
dec
cmp
loopne
mov
ds
sti
jbe
loope
fistl
nop
sbbl
ficoml
inc
iret
pop
imul
pop
and
jge
leave
out
push
outsl
add
sti
or
lret
cmp
mov
add
adc
test
popf
xorb
loopne
movsb
clc
into
shll
ja
movsb
ss
outsb
cld
cmp
pop
test
jl
xlat
mov
lock
fcoml
sbb
jmp
mov
xchg
mov
aaa
cmp
loopne
lea
cmpsb
repz
inc
fs
repz
and
rclb
sarl
cmp
add
pop
mov
jbe
xchg
test
js
fwait
popa
aaa
adc
add
int
xchg
or
xor
jg
rolb
lock
rorb
scas
repz
push
stos
int3
or
xorl
sub
pushl
cwtl
test
mov
je
sub
nop
faddl
shrl
std
or
fdivs
or
inc
aad
mov
int3
mov
popa
and
arpl
fwait
inc
add
out
dec
ficomps
test
pop
addr16
pop
fs
xchg
mov
mov
aaa
out
mov
imul
jnp
leave
push
sub
add
lods
leave
lret
cmc
xor
inc
pushf
insl
rcr
test
add
push
gs
lahf
xchg
inc
stc
ljmp
cld
bound
mov
push
and
mov
out
jmp
ljmp
in
dec
sar
xchg
mov
push
push
in
outsb
aaa
xor
sub
add
push
mov
rclb
popf
imul
jno
pop
push
aam
jae
std
mov
popa
jno
push
xchg
ds
ss
mov
push
popw
andb
ljmp
mov
fstl
sub
adc
pextrw
jbe
popf
add
mov
sbb
outsb
mov
add
out
imul
sub
aas
rcll
lds
insb
xlat
xchg
cmp
mov
pop
js
jg
xor
sbb
test
js
ds
xorl
scas
popa
add
sti
shll
roll
divl
add
and
icebp
cmp
xlat
popf
sbb
js
jno
movsb
roll
clc
std
mov
movsb
mov
pop
bnd
and
pop
sub
push
xor
int3
adc
mov
aad
pop
push
sbb
das
das
into
dec
push
pop
sbb
pop
hlt
adc
int3
add
loopne
and
idivl
xor
arpl
inc
ss
rolb
cmc
add
mov
popa
inc
mov
lods
mov
push
sub
movsb
repz
sub
sub
leave
or
dec
fistpll
mov
loop
mov
and
das
jno
pop
mov
fsubs
pop
jge
pop
ljmp
pop
push
pop
and
xchg
inc
adc
das
jmp
and
adc
std
outsl
outsl
imul
mov
pop
shlb
pop
out
pop
jp
inc
push
mov
cltd
and
test
mov
out
dec
push
stos
xor
popf
adc
jmp
rol
inc
das
in
pop
shrl
add
mov
xrelease
lods
mov
mov
mov
add
hlt
hlt
pop
fdivl
js
punpckldq
outsl
ss
fcompl
sub
mov
outsl
adc
std
loop
cmc
ljmp
cwtl
cmc
lds
sub
hlt
repnz
pushf
or
and
push
aad
lahf
add
lds
lret
jmp
idivl
fidivrl
movsb
sbb
aam
mov
pop
dec
adc
arpl
xchg
fst
adc
das
or
adc
test
and
rolb
icebp
stos
arpl
imul
cmp
fwait
mov
adc
pop
popf
pushf
sub
ss
sub
clc
push
mov
aaa
ror
mov
mov
and
push
outsb
cltd
testl
cmp
pop
lahf
mov
mov
pop
inc
and
cltd
scas
pop
hlt
dec
mov
daa
xchg
adc
repz
scas
cmpsb
stos
mov
arpl
lods
ljmp
jne
inc
repnz
fimuls
jle
inc
and
jns
popa
jecxz,pn
imulb
rcll
testb
adc
lret
xchg
mov
aad
mov
scas
or
mov
xor
sub
call
pop
dec
xchg
js
xchg
sub
sti
mov
or
out
imul
icebp
xchg
loop
stos
ret
adc
sahf
loopne
pop
add
jae
cmc
arpl
sub
pop
addb
insb
lock
add
fcoml
adc
or
jl
daa
sub
sbb
stc
roll
ss
ja
push
pop
adc
mov
test
lret
mov
push
mov
lock
outsb
cmp
pop
sub
add
pop
jae
imul
inc
stc
mov
cmpsb
dec
imul
push
or
mov
scas
leave
jae
mov
jae
jbe
aad
mov
fldenv
and
call
sbb
or
xchg
out
lea
xchg
cmc
fidivl
mov
jl
add
iret
roll
pop
jmp
xchg
xchg
pop
jge
std
hlt
sarl
cmp
rolb
andb
xchg
add
adc
mov
sahf
negb
pop
js
inc
xor
pushf
jp
insl
mov
mov
or
rorb
push
pop
jno
xchg
jp
inc
ret
sub
inc
mov
leave
xchg
ds
inc
test
lock
mov
xchg
insl
mov
adc
push
stc
lods
mov
movsl
mov
push
pop
sub
adc
fimull
fstp
aad
push
ljmp
jo
xor
mov
enter
inc
fildll
and
pop
dec
lahf
test
dec
jp
mov
ffree
into
push
imul
xor
imul
add
stc
sbb
pop
es
cltd
addr16
or
push
push
pop
dec
les
mov
dec
xlat
mov
call
repz
cmp
cmpsl
xlat
pop
data16
inc
mov
cli
pop
push
fwait
push
in
addr16
repnz
in
rcrb
lds
hlt
rolb
push
jno
vmwrite
mov
add
and
push
adc
cmc
xchg
dec
in
push
cmp
or
lods
push
or
loop
popf
pop
sbb
pop
adc
daa
pop
sarb
jp
sahf
add
and
std
and
sbb
pop
sub
ret
add
dec
mov
inc
jb
push
aam
iret
pusha
sbb
clc
popa
rolb
add
mov
jbe
addb
xchg
in
sub
insl
sahf
or
call
aaa
and
inc
jb
icebp
inc
xchg
add
pop
xlat
inc
orl
or
inc
fwait
nop
loopne
mov
pop
fisubrl
movsb
push
stc
movsb
fcmovbe
loopne
ja
push
and
xor
psubb
lahf
mov
test
cld
movsl
es
stos
xor
subb
lds
adc
shr
xor
adc
mov
repz
test
push
or
loop
nop
xchg
into
gs
xor
cmp
jmp
mov
cltd
fdivrl
cmp
jmp
adc
mov
pop
jmp
aas
mulb
loope
push
pop
and
shl
jne
ror
sbb
xlat
mov
jp
inc
and
pop
sbb
stos
leave
adc
xor
adc
cmp
push
push
sub
loope
sub
xlat
test
add
lods
mov
enter
adc
inc
xor
and
mov
sarb
mov
into
pushf
jnp
std
pop
inc
or
mov
sti
and
int
hlt
inc
lds
aad
pushl
insl
adc
mov
inc
push
ja
ja
mov
in
push
pusha
negl
test
mov
cmp
dec
push
outsl
rcr
cmpsl
dec
xchg
pop
xor
adcb
scas
pop
aam
cmp
cmp
sub
jno
clc
insl
pusha
popa
cmpb
insb
arpl
pop
pop
lret
xchg
fdivs
xchg
int
push
mov
enter
out
push
mov
mov
sti
arpl
push
ja
sub
push
clc
or
movsb
aad
test
loopne
push
adc
sub
sub
nop
cmpsl
sti
mov
bound
addr16
aad
pop
leave
dec
enter
mov
push
jle
dec
jecxz
jecxz
jne
lods
test
fisubs
and
inc
inc
pop
movsl
fstpt
xor
sub
xlat
cli
adcl
add
lret
jge
repz
rclb
mov
mov
xor
xchg
loope
sub
push
cld
xchg
dec
and
inc
mov
jmp
jo
cmp
pop
add
gs
inc
mov
dec
push
add
pushf
stc
getsec
lret
mov
inc
pop
and
sbb
imul
mov
cmc
pop
adc
ljmp
push
outsl
stc
sti
mov
ficomps
add
pusha
jecxz
push
xor
add
scas
mov
jae
ja
and
out
popf
cld
clc
test
pop
aaa
lahf
int3
adc
sbb
ret
adc
movsb
in
or
jle
in
mov
inc
lods
fidivrl
inc
inc
mov
into
shrl
pop
fmull
jno
stc
sbb
xchg
xchg
cmpsb
adc
das
inc
dec
mov
repz
inc
movsb
inc
pop
cmp
sub
and
jmp
mov
sub
or
xchg
ret
mov
lahf
or
mull
test
adc
ret
stos
into
push
aaa
repnz
sarl
sub
dec
test
cmp
movsl
aas
adc
dec
xor
xchg
cwtl
inc
es
and
mov
mov
dec
xchg
add
ffree
jmp
fmull
mov
mov
aam
add
push
aam
jo
cli
sbb
movsb
sbb
movsl
mov
push
mov
sbb
dec
dec
sub
xor
cmp
mov
cs
insb
test
adc
bound
lock
cmpsl
mov
cs
jmp
inc
jl
jle
nop
cli
cmp
test
in
aas
aam
lods
jae
xorl
das
stos
or
stos
mov
loope
sub
lahf
sahf
loope
add
cltd
rep
jb
xor
lods
mov
push
mov
cli
arpl
test
and
pop
xchg
lea
xchg
fcoms
mov
or
xor
in
subl
and
adc
xor
push
enter
inc
sbb
js
adc
stos
gs
arpl
loop
mov
or
mov
sbb
mov
mov
lea
xor
arpl
mov
push
rcr
fidivl
push
push
fwait
ret
repnz
das
push
mov
push
cld
fiadds
xor
aad
std
push
mov
lret
sbb
mov
jnp
in
aas
sti
cmc
adc
test
cmp
leave
push
inc
sarb
roll
push
das
push
push
jnp
je
decl
mov
pop
mov
test
dec
ljmp
cmp
cltd
das
mov
or
mov
pop
sub
adc
sub
pop
push
out
push
pop
inc
aaa
dec
push
cld
adcl
stc
and
dec
int3
push
pop
sbb
mov
mov
add
mov
es
and
ja,pt
sub
scas
enter
mov
movsl
pop
sbb
insl
pop
mov
push
xchg
out
rol
test
mov
mov
push
rolb
mov
test
add
push
cmp
mov
dec
fs
mov
cmpl
cmp
dec
stc
pop
jle
inc
adc
mov
pusha
stc
mov
pop
lods
sub
push
jno
iret
icebp
into
adc
leave
xchg
notb
push
popa
sub
lret
inc
daa
mov
push
jo
cmpsl
pop
adc
cli
int
movsl
scas
andl
inc
inc
in
sbb
mov
dec
and
add
les
test
jecxz
fisttps
jb
xchg
out
call
shl
call
push
mov
mov
lret
shr
sub
ss
ja
cli
mov
xor
das
jl
test
add
or
rcr
int3
bound
int3
cltd
sbb
xlat
fidivrs
cmp
push
mov
and
repz
cmc
mov
call
push
loopne,pn
pop
notl
and
ljmp
jge
jbe
push
inc
stos
imul
loop
outsb
cld
mov
gs
jnp
or
or
lcall
xchg
sbb
shll
bound
sahf
cltd
sbb
popf
adc
inc
pop
mov
jmp
jl
gs
enter
adc
loopne
mov
pop
ror
xlat
int
jnp
push
xchg
scas
mov
inc
and
jmp
push
pop
rorb
jbe
and
pop
ret
repnz
adc
mov
xchg
loope
push
imul
icebp
inc
or
mov
push
xchg
lods
pop
ret
into
stc
mov
ljmp
mov
mov
fs
sub
imul
sbb
outsl
adc
std
pop
lret
scas
adc
mov
xchg
cs
lret
repz
aas
fidivs
xchg
scas
rcrl
fidivrs
ljmp
bound
pop
jnp
mov
cwtl
dec
rcll
stc
mov
fnsave
mov
sub
push
loope
push
movsl
sbb
pop
aaa
cmp
cs
push
xorb
rdmsr
mov
call
cltd
scas
subb
daa
out
xchg
shll
inc
out
mov
jecxz
jb,pt
inc
dec
push
mov
leave
aaa
mov
cmp
mov
xor
adc
scas
data16
mov
xchg
std
ds
fstps
sahf
xchg
mov
lcall
out
adc
mov
int
jno
pushf
cld
inc
add
pop
inc
arpl
xlat
sub
clc
mov
jns
repnz
xchg
ds
popf
jno
push
loopne
jbe
mov
icebp
ret
sub
sahf
xor
push
shrl
push
adc
mov
jp
gs
adc
xor
jecxz
mov
ljmp
or
popa
push
into
lods
cmp
jmp
jp
lret
add
pusha
sahf
stos
mov
in
and
or
out
mov
insl
aad
in
mov
pusha
aad
sbb
loope
xlat
sahf
popa
test
cli
mov
rcrb
or
dec
add
add
lock
mov
sbb
or
rcr
push
loope
and
pop
in
mov
adc
jg
jp
orb
and
in
sub
pushl
repnz
fdivrl
xchg
int
xor
sbb
push
pop
sub
or
outsb
into
enter
dec
sbb
mov
jmp
loope
cwtl
lret
incl
hlt
dec
cmp
imull
add
jo
sbb
mov
into
pop
subb
mov
mov
daa
nop
dec
or
int3
push
xor
mov
jmp
mov
mov
fidivrs
add
cmpsl
jmp
pop
mov
cmp
into
cltd
shlb
jle
jg
cli
jle
pop
ss
popf
mov
xchg
inc
ljmp
inc
add
sahf
stos
movsl
inc
cmp
fwait
call
pop
iret
xchg
push
sbb
and
test
xor
xor
js
inc
push
cmc
stos
mov
mov
mov
xlat
jge
mov
ja
pop
out
and
or
sub
fidivrs
movsl
lds
xchg
popf
ret
cwtl
cmp
push
fnop
cmp
dec
leave
stos
insl
and
lcall
or
or
mov
cmp
mov
ffree
inc
cmp
push
cmp
xchg
pop
scas
or
in
mov
jecxz
add
outsl
dec
pop
jl
jae
mov
inc
sub
lahf
stc
fwait
add
les
cmpsb
maxps
sub
mov
jb
stos
cmp
daa
cmp
jge
enter
push
in
jmp
stos
or
mov
xchg
stos
mov
push
xchg
cli
push
insl
ret
pop
mov
adc
cmp
mov
add
nop
jo
lahf
push
test
aad
andl
dec
nop
fmuls
xchg
cltd
xchg
push
inc
lods
pop
cmp
jnp
es
jg
sti
inc
jo
adc
int3
push
sti
jecxz
mov
aas
popf
adc
insb
dec
sbb
sbb
out
lods
fcmovu
xor
scas
xor
in
imulb
lods
sub
cmpsb
sbb
pop
aas
hlt
nop
mov
mov
lret
push
or
push
repz
in
jns
xchg
test
sub
arpl
add
dec
or
out
ds
xchg
shlb
or
cmp
mov
out
cmc
push
ret
mov
std
ret
jne
popf
mov
inc
rcl
cld
ja
mov
mov
xor
call
movsb
dec
ds
push
fs
fiaddl
lock
dec
mov
outsl
rcl
adc
and
lods
mov
xor
jae
and
fbstp
ljmp
mov
xchg
and
mov
cmp
or
and
xchg
cmpsl
mov
clc
sub
jne
pop
and
idiv
movsl
fisubs
insl
cli
and
sbbb
adc
stos
test
das
mov
mov
jp
add
jge
fnsave
pop
jmp
notl
outsb
push
or
lret
xchg
fsubrs
iret
jb
push
ljmp
jne
xchg
xchg
jecxz
push
add
dec
dec
xchg
mov
xchg
cltd
xchg
push
repz
rorl
push
and
pop
add
push
jne
sub
mov
pop
ljmp
or
lock
dec
scas
aaa
xchg
inc
rolb
xor
cwtl
les
test
jne
pop
mov
test
lock
cmp
sub
mov
les
jb
mov
dec
icebp
pop
xchg
xchg
in
pop
ret
in
mov
inc
data16
xchg
add
sub
push
ret
sub
lea
cld
lea
push
aad
inc
jmp
sub
fwait
int3
sbb
cmpsl
cmc
jns
filds
cmp
pop
sbb
mov
fdivl
icebp
dec
cmp
jnp
push
pusha
inc
mov
sbb
pop
lods
aad
pop
loope
orb
popf
adc
dec
adc
push
pop
jl
fmull
mov
mov
popf
push
jae,pn
popa
inc
lods
jne
sub
lock
cmp
fadds
cmpsb
xlat
jmp
inc
aas
mov
jnp
lahf
rclb
xchg
xchg
ss
xchg
jns
cmc
dec
ljmp
lea
cmp
or
pop
or
and
inc
jnp
gs
jne
das
test
adc
lea
xlat
xor
jg
subb
or
jns
lods
addr16
stos
mov
sub
mov
mov
out
clc
xorb
mov
or
inc
pushf
or
cmp
lcall
lcall
jecxz
mov
mov
les
adc
sbb
inc
leave
lock
ret
fmuls
insb
sub
xchg
cmpsb
in
inc
sti
call
pop
clc
shlb
sbb
imul
mov
jl
int3
orl
push
inc
rolb
mov
fsubl
fs
adc
sub
clc
jg
pop
shlb
stos
jnp
push
sbbb
mov
and
insb
mov
inc
sbb
andb
in
mov
mov
mov
mov
popf
lods
inc
pushf
adc
xchg
xor
cmp
sub
pop
ret
jns
sub
jge
dec
sbb
lahf
cmpl
std
pop
or
js
lock
inc
fmuls
pop
and
inc
scas
xchg
inc
mov
imul
push
out
sub
data16
std
mov
and
addr16
cli
addl
pop
xchg
mov
imul
sahf
sar
mov
push
and
daa
dec
push
cmp
imul
cs
jg
add
dec
ljmp
xor
test
repz
lock
xor
dec
sub
cmpsb
inc
jno
dec
dec
bswap
ljmp
in
hlt
sub
fwait
or
sbb
and
xchg
mov
push
sub
xor
push
int3
sbb
push
xor
cltd
test
jmp
xor
sbb
sbb
xchg
fisttps
sti
xor
loopne
cli
test
xchg
cmp
xchg
adc
jno
std
rcrb
fucomi
popf
dec
push
inc
pop
ss
es
add
push
push
fwait
push
loop
sahf
or
inc
push
fnstsw
fiaddl
ret
lods
imul
insl
xor
pusha
cmc
je
adc
xor
dec
test
dec
mov
shll
cli
inc
add
movsb
mov
xlat
mov
cmpsl
adc
push
add
mov
test
mov
push
pop
enter
loopne
aaa
or
and
mov
es
dec
xor
or
cmp
inc
sbb
fcmovb
sub
scas
fisubs
mov
sub
cmpsl
test
lcall
mov
inc
mov
push
adc
shll
jmp
outsl
inc
lret
in
daa
daa
xor
inc
push
cmp
movsb
xor
xor
popa
fadds
pushf
add
sahf
xchg
rorl
pop
sbb
cs
cmp
sbb
dec
mov
lods
push
in
xor
loopne
sbb
mov
not
jp
imul
fucom
fs
dec
push
pop
sbb
les
ja
pop
sti
in
dec
leave
jbe
gs
sbb
lahf
aad
lret
ja
jae
mov
mov
xchg
f2xm1
inc
test
les
fsubrs
rcrb
jae
cs
cwtl
jbe
inc
stos
leave
xor
mov
cltd
jmp
movsb
pop
inc
imul
out
mov
jecxz
popf
mov
mov
movsb
xchg
cmpsl
and
popf
sub
rorb
cmp
dec
xchg
pop
jg
push
call
cmpsb
mov
fisttps
into
jg
push
sub
jmp
and
xor
jbe
arpl
sbb
mov
xor
fldenv
mov
mov
or
hlt
sub
call
pop
adc
mov
mov
into
mov
xor
mov
inc
cmp
add
bound
xchg
mov
sub
loopne
mov
imul
in
cmpb
inc
jo
pop
lock
inc
pop
adc
mov
out
fcoml
cltd
lods
cwtl
mov
jg
int3
adc
xlat
mov
or
adc
xor
movsl
pop
push
in
imul
pop
pop
int
ss
mov
inc
pop
sbb
or
and
xchg
or
sub
push
mov
out
iret
or
mov
cmpsb
je
inc
lret
push
cmc
and
imul
inc
inc
cmp
insb
sub
jne
and
aad
inc
mov
cmpb
push
stc
loopne
push
pop
fistpl
in
les
aad
push
or
xchg
mov
orl
out
cmp
insb
sbb
pop
test
xlat
push
cmp
mov
rcll
xor
into
xchg
mov
clc
and
adc
adc
mov
and
mov
xor
jae
sub
mov
dec
xchg
hlt
fisttps
ja
adc
repz
cmp
push
ror
dec
xchg
repnz
dec
notl
xchg
or
add
shr
or
imul
movsl
lret
mov
and
aaa
push
lock
mov
mov
xchg
jnp
aaa
pop
out
adc
mov
cmpsb
mov
lods
xchg
shlb
xchg
xor
push
mov
adc
push
pop
lret
mov
addr16
pop
pop
mov
in
loope
sbb
xor
sbb
inc
pop
int
xchg
mov
out
iret
xor
jecxz
jbe
leave
subl
hlt
add
adc
inc
mov
or
pop
addr16
test
js
cmp
pop
or
jmp
hlt
arpl
and
lods
f2xm1
aam
cmpunordps
cmp
add
jns
ja
xor
arpl
xor
scas
xor
dec
xor
jne
aam
sti
jne
and
cli
dec
pop
adcl
call
xchg
stos
fstl
xchg
je
lret
imul
fwait
je
add
out
jne
jle
int
call
adc
dec
xor
sti
push
lret
and
mov
dec
or
dec
adc
pop
int
pop
leave
lahf
adcb
lds
lock
jle
jnp
xchg
push
or
mov
aad
out
mov
adc
push
xchg
sub
sbb
xor
jl
xchg
and
insb
imul
push
mov
pop
dec
movsl
sarb
jecxz
fnsave
andb
mov
xchg
xchg
into
jp
sarl
mov
jge
mov
or
cmp
xchg
jns
fcoml
lea
stos
lahf
mov
jl
lcall
xchg
cmpsb
mov
cld
je
subb
scas
fstps
sub
rcrb
jns
and
xchg
mov
push
subl
jl
notl
loope
leave
pusha
aad
xchg
add
loopne
jecxz
test
push
sub
cmp
dec
pop
pop
lods
mov
cmp
ljmp
xchg
xor
xor
add
sbb
repnz
fbstp
sbb
sub
loope
and
imul
jae
addr16
or
mov
call
sti
and
pop
clc
movb
xor
mov
lea
pop
enter
fisttpl
xor
daa
fisttpl
cmp
ljmp
jle
lcall
pop
out
in
adc
outsb
lods
hlt
xor
inc
jae
xchg
loopne
add
mov
fwait
loope
in
jb
dec
xchg
sub
fsubrs
mov
add
add
dec
xor
sbb
scas
push
repnz
roll
ljmp
mov
sbb
repnz
mov
in
mov
lds
call
xchg
cmp
mov
cmp
cmp
int
mov
push
insl
sbb
stc
imul
and
cwtl
jp
mov
add
xchg
sbb
xlat
xchg
clc
std
adc
sbb
lcall
add
pop
adc
mov
jb
pop
add
jno
push
sar
adc
rorb
mov
gs
push
jecxz
dec
xor
adc
ret
inc
scas
faddl
inc
je,pt
lods
mov
ja
mov
jge
aaa
pop
enter
sti
fmuls
movsl
cmc
cmpsb
cmp
lock
ds
mov
faddl
inc
push
cmpsb
jno
ds
add
ror
push
insb
aam
scas
bound
enter
mov
xor
pop
pushf
aad
arpl
ret
or
ss
pop
and
iret
xor
stos
fwait
push
in
icebp
dec
sub
popa
lods
enter
mov
mov
stc
sti
xchg
mov
sbb
push
push
dec
jl
mov
dec
inc
add
movl
aas
test
jmp
lods
lret
in
aad
movsb
cmp
adc
dec
xchg
test
lahf
lea
sub
imul
inc
jl
hlt
pop
test
mov
adc
and
in
cmp
cmp
push
mov
mov
add
hlt
jle
mov
jae
js
pushf
xchg
cmp
mov
cmpsl
adc
das
ljmp
pop
mov
push
gs
push
fimull
jp
insl
scas
mov
adc
shl
xchg
jmp
outsb
arpl
mov
rol
fsub
sub
ljmp
mov
xchg
pusha
dec
fldenv
jns
pushf
cmp
pop
push
cmp
and
cmpsw
dec
push
dec
and
hlt
inc
or
rcl
int3
ljmp
sbb
push
fistl
cmpsb
and
sbb
aam
in
nop
and
cwtl
and
mov
mov
ds
pop
test
sub
cmp
out
insb
inc
rcr
je
xchg
xchg
arpl
lret
cld
fildll
loope
popl
notb
scas
shll
push
xchg
mov
adc
dec
or
push
pop
push
ret
subb
fs
mov
lea
ss
jb
xchg
outsl
sub
cmp
lcall
add
xchg
cli
pushf
pop
addb
or
mov
shll
mov
jne
fiaddl
out
jp
cmpsb
add
adc
pusha
xor
aas
and
int3
dec
push
lds
les
add
xchg
inc
lret
arpl
sub
mov
cmpsb
cltd
xchg
mov
nop
into
mov
pop
iret
mov
sbb
test
lcall
lret
dec
and
push
xchg
jle
jbe
xor
cmp
loope
and
mov
push
stos
ret
aaa
outsl
icebp
dec
test
add
xchg
data16
lods
dec
rolb
in
aam
sbb
mov
cmpsl
ds
jae
sub
out
popf
jae
rorl
jl
ret
leave
fadds
in
repz
call
lcall
xor
pop
xor
mov
xlat
jmp
and
mov
adc
cwtl
pop
xchg
pop
xchg
shrl
cltd
or
push
outsl
inc
imul
add
test
sub
outsl
enter
cmp
add
mov
cmpsl
push
hlt
mulb
and
movsb
adc
pushf
dec
or
aad
scas
sub
leave
mov
not
add
push
jne
nop
sbb
jle
int3
cmp
ljmp
jge
out
dec
xor
jns
jnp
int
int
fldln2
jl
push
cwtl
aas
mov
dec
stos
hlt
push
push
cmc
lds
mov
pop
mov
inc
xchg
or
mov
push
popa
pop
popf
repnz
adc
cmp
cmp
movsl
iret
dec
mov
mov
das
push
mov
xchg
cmp
fimuls
lods
push
pop
dec
outsl
mov
jo
lock
iret
lock
cmp
or
addb
aas
xchg
cmp
insl
push
mov
sti
insl
sub
add
fists
mov
fs
or
divl
aam
dec
and
inc
andl
cmp
aaa
cwtl
jbe
mov
xor
arpl
jmp
xchg
adc
rcl
push
negb
dec
mov
jp
adc
shlb
outsl
fidivrs
in
and
loop
aam
movsl
into
stc
stc
xchg
cmp
int
stc
dec
dec
scas
jecxz
xor
test
adc
arpl
push
fcomps
lret
mov
stos
inc
inc
or
dec
cltd
push
jl
mov
fwait
pop
cmp
scas
scas
jmp
lret
xor
negb
movsl
test
sahf
in
inc
jno
mov
stos
mov
or
gs
je
addr16
adc
repz
and
dec
ret
sahf
mov
push
das
add
call
xchg
adc
xlat
fildl
mov
mov
sub
mov
out
mov
add
ret
push
cmp
sbb
insl
out
movsl
xor
xchg
xchg
dec
mov
lds
int3
aas
stos
xorl
in
into
jmp
pusha
push
cmc
sub
leave
les
xchg
jg
jmp
dec
pop
shrl
sub
and
add
fcmovu
mov
dec
lods
cld
ficompl
stos
into
add
out
cmpl
mov
add
outsl
mov
lret
xlat
call
sbb
sbb
movsl
sub
icebp
mov
cltd
inc
pop
mov
loop
sbb
inc
fadd
rorb
inc
pop
cmp
cmp
fdivp
dec
adc
pop
push
mov
push
push
fdiv
and
adc
punpckhwd
jns,pt
cld
sbb
add
and
rorb
mov
dec
lods
xchg
pop
or
cmp
ret
ss
cmc
mov
mov
or
jne
pop
lds
bound
mov
lcall
int
test
push
xchg
jecxz
xchg
lds
arpl
push
iret
daa
bnd
or
add
add
mov
mov
adc
push
jge
gs
lds
cmp
int3
addr16
and
imul
sub
jae
or
dec
jb
jo
call
sub
and
dec
insb
outsb
inc
cld
and
mov
or
dec
xor
in
fwait
into
jecxz
rolb
mov
inc
and
loope
inc
repz
aam
ret
inc
iret
scas
cs
clc
cmc
inc
les
adc
xchg
cmp
xor
and
ds
adc
and
sub
mov
mov
adc
cmp
cltd
imul
add
repz
xchg
and
scas
cmpl
dec
test
jge
test
aas
and
push
incl
repnz
in
outsb
xchg
pop
inc
test
jle
lret
add
and
adc
pusha
lret
pusha
push
mov
cmp
cld
adc
stc
inc
xchg
jle
pop
std
lcall
fwait
jmp
mov
sti
xchg
mov
jae
inc
mov
mov
pop
test
out
div
add
in
je
mov
aad
loope
decl
test
mov
inc
and
popa
add
cmp
mov
add
xor
mul
xchg
xchg
and
sub
dec
mov
lahf
iret
jno
mov
rcrb
mov
cmc
xor
sub
jne
clc
cltd
adc
push
stc
sbb
mov
and
fcomip
sub
out
fdivl
mov
test
scas
cmp
mov
push
pop
xor
pop
mov
adc
dec
mov
xor
std
ret
out
sub
sbb
fldcw
mov
pop
adc
push
and
popf
iret
pop
rcl
jg
mov
cmp
out
pop
lds
out
add
push
sbb
fwait
test
pop
dec
lret
nop
pop
mov
jl
mov
sbb
pop
popf
mov
push
jg
sub
jns
popa
jbe
adc
std
dec
test
sub
jp
call
inc
sahf
aam
gs
jle
pop
pop
sbb
repz
aas
push
jmp
mov
jmp
add
mov
add
jne
cld
push
mov
pop
cmp
cmp
mov
outsl
mov
jns
xlat
jb
insl
jl
sub
ds
sub
repnz
cmpb
sub
push
pop
sub
push
jle
fnstenv
ja
fmull
out
xchg
dec
sbb
cld
sbb
cmp
push
ljmp
cmp
cmp
es
clc
gs
xchg
shlb
jns
dec
push
out
popf
mov
outsb
dec
inc
adc
cmp
aaa
jbe
loope
sti
mov
rorb
mov
mov
cs
rcrb
inc
int
lock
dec
shll
jecxz
es
sbb
sub
loop
mov
and
test
js
xor
sbb
call
cltd
mov
loopne
fisubs
mov
push
stc
mov
push
mov
mov
negb
mov
aam
pop
adc
gs
sub
fs
lret
test
sub
leave
cmp
stos
dec
xchg
push
and
dec
jge
and
and
jp
or
bound
xor
filds
movsl
negb
mov
add
test
sub
sub
cmp
cmp
push
sub
popa
hlt
adc
pop
mov
cmp
push
lods
mov
mov
aad
out
gs
negb
cmp
mov
mov
fstpt
sub
push
orl
icebp
popf
mov
aaa
enter
cwtl
inc
out
xor
imul
int
xchg
inc
mov
call
repz
pop
and
aam
adc
jp
andb
add
mov
dec
fistps
leave
out
adc
fisubs
mov
stos
les
and
and
outsb
or
fdivrs
mov
xchg
cmp
dec
xchg
fisttpl
lahf
aad
jmp
fldcw
jae
cmpsb
movsb
cmp
xor
sbb
leave
cltd
sub
lods
repz
push
cli
inc
je
sub
pop
sbb
psraw
scas
push
push
or
pushf
mov
push
push
js
test
cmpsl
xor
fidivrs
pop
mov
mov
dec
xor
mov
leave
mov
enter
adc
inc
dec
enter
push
lds
adc
in
lock
shll
es
mov
popa
xlat
sbb
enter
jge
cmp
mov
mov
mov
lcall
push
cmc
add
frstor
loopne
sub
adc
ljmp
add
mov
dec
ds
les
add
aam
and
rcrl
in
xor
jno
pop
test
sbb
push
and
xor
cmp
sub
mov
sbb
aaa
xor
push
and
mov
and
test
and
sbb
and
iret
jl
pushf
hlt
dec
dec
cmp
or
std
adc
sbb
sahf
adc
sbb
pop
lds
stos
inc
pop
cmp
or
std
jns
lock
adc
sub
imul
sbb
add
fs
mov
pop
enter
cmpsl
add
inc
xchg
or
cmp
and
cwtl
in
call
pushf
je
sbb
hlt
push
xchg
mov
jo
push
lcall
dec
nop
aad
inc
jecxz
fsubrs
jbe
and
nop
movl
js
jg
cmc
push
adc
lcall
cmp
lods
inc
ror
xor
xor
scas
push
xor
pop
sub
int
repz
sahf
lock
xorb
xorl
and
adc
leave
ds
shrl
frstor
dec
mov
mov
popa
pop
inc
push
loope
les
aad
xor
adc
or
sub
inc
clc
mov
mov
sbbb
mov
fildll
mov
mov
rcll
pusha
inc
inc
loop
int
loopne
repnz
ss
clc
testl
mov
inc
hlt
and
dec
neg
into
adc
loop
fcompl
test
pop
lea
arpl
lods
mov
rcll
int
ljmp
and
shrb
or
mov
add
jne
push
lods
mov
adc
daa
ret
cmpsl
sahf
inc
xlat
stos
iret
adc
dec
jl
into
lds
iret
cmp
ret
ret
inc
fnsave
dec
mov
mov
jo
repz
dec
adc
pop
int3
out
sbb
int3
cmp
ds
mov
scas
push
xlat
ret
daa
iret
adc
out
sahf
sub
ss
ljmp
push
lock
pslld
cs
and
scas
xchg
mov
movb
fisttpll
mov
sbb
mov
jns
lods
and
mov
movsl
push
add
mov
sbb
xchg
push
push
out
inc
out
es
or
adc
repz
lods
inc
in
movsb
push
mov
push
repz
sahf
orb
or
popf
or
mov
psubusb
pcmpeqd
jo
adc
imul
add
ljmp
cmc
inc
rcl
mov
push
or
mov
pop
sub
xor
xor
mov
adc
loope
inc
shl
lret
fcoml
dec
lcall
scas
adc
mov
jae
xor
dec
adc
into
sbb
lods
aam
imul
out
cmp
add
aas
pop
out
add
rcr
push
cmp
add
pusha
xchg
fwait
adc
cmpl
repnz
jge
mov
mov
scas
clc
pop
mov
lcall
push
ret
leave
out
and
and
xchg
imul
fbstp
dec
jecxz
mov
mov
mov
arpl
add
out
call
push
ja
adc
insb
mov
xchg
jo
push
dec
push
aaa
insb
lea
sbb
mov
test
sub
pop
jns
mov
adc
mov
jne
and
movsb
mov
or
inc
xor
sbb
push
xor
adc
repz
out
jle
mov
repnz
leave
outsl
sahf
loopne
mov
ffree
loopne
cmc
adc
mov
dec
ret
push
sbb
pop
mov
xlat
ficoml
or
push
adc
mov
inc
sbb
enter
lods
div
fiadds
sbb
sbb
and
inc
adc
out
pop
mov
fmulp
and
movsb
fnstcw
pusha
jno
test
stos
das
sbb
mov
sbb
xchg
add
jae
dec
adc
into
js
push
imul
and
dec
clc
sbb
push
pushf
into
int3
js
fsubr
pop
sbb
add
jle
xchg
adcl
add
cmp
call
inc
ja
out
push
sbb
test
js
sbb
mov
mov
mov
add
mov
and
adc
add
fistps
pop
inc
pop
inc
xchg
push
cwtl
jns
mov
xchg
sbb
outsb
jecxz
mov
and
mull
shlb
loopne
inc
mov
cmp
jo
in
std
test
xor
add
ja
dec
fadd
insl
out
push
pop
push
xor
and
test
jns
pop
mov
scas
ljmp
mov
in
jge
out
dec
sub
xchg
out
inc
out
mov
jecxz
dec
test
pop
lods
dec
lahf
mov
sub
stc
sarl
popa
aad
xchg
add
inc
movsl
rcl
ljmp
ljmp
js
or
aas
mov
test
sbb
push
inc
xchg
push
mov
das
jle
adc
push
mov
inc
test
enter
movsb
fcomi
xor
data16
shrl
aam
in
mov
aad
pop
out
jmp
test
jl
inc
xor
aad
sub
inc
test
mov
loope
ss
jp
fisubrl
sub
insl
pop
fldt
imul
sbb
pop
mov
mov
pop
inc
adc
pop
cmp
dec
cli
fsts
mov
pop
jge
xchg
inc
outsl
pop
xchg
dec
clc
in
sub
pop
les
fistps
sar
std
mov
dec
xchg
jns
fildl
sbb
inc
mov
adc
xlat
cmpsb
xchg
in
and
imul
fildll
jmp
and
sahf
cmp
rcll
inc
mov
xchg
mov
or
pop
dec
rcrb
adcl
cli
inc
nop
fwait
add
daa
add
sbb
sbb
lock
sbb
cmpsb
pushf
lret
ret
add
repnz
mov
gs
sub
insb
rcrb
test
rcll
stc
push
dec
lods
stos
lcall
in
mov
imul
mov
push
pop
aad
cmp
and
outsb
in
jno
outsb
or
sbb
fcoml
add
aad
push
pop
adc
sub
test
xor
imul
add
adc
imul
loope
fildll
test
push
out
cmpsl
adc
out
xor
push
mov
jg
bound
xchg
stos
mov
js
out
cmp
leave
push
pop
xor
call
adc
inc
mov
fbstp
out
daa
flds
enter
mov
jg
adc
das
pop
push
outsb
ret
sbb
cs
scas
imul
bound
jbe
cmc
cmp
inc
scas
jge
xlat
sahf
fcmovnbe
stc
sbb
jecxz
call
add
imul
jg
mov
push
xor
mov
addl
cmpsb
cmpsb
pop
into
mov
xor
rorl
pop
dec
jns
inc
scas
sti
sub
aas
and
cs
pop
mov
cwtl
loopne
add
scas
test
jecxz
stos
xor
adc
pop
je
in
adc
jmp
jns
inc
aad
lret
scas
loop
cmc
cltd
jnp
pop
stos
lds
mov
fimull
sahf
scas
out
mov
ja
bound
mov
mov
sti
popf
mov
cli
addr16
mov
or
jnp
or
or
ljmp
int3
sahf
hlt
xchg
insb
push
mov
push
push
cld
dec
add
ficoms
loope
xchg
dec
popa
mov
jg
aad
cmpsb
repz
sahf
fwait
add
cmp
scas
mov
mov
andl
iret
loope
loop
jno
sahf
cmp
mov
and
outsb
rcrl
call
xchg
cmp
xor
mov
jmp
mov
ret
outsb
test
jmp
aas
jge
je
jno
into
aad
aaa
stc
cld
std
lret
outsb
or
adc
aas
call
out
and
xor
clc
sbb
push
int
mov
push
popf
mov
bound
mov
dec
add
mov
fcmove
out
mov
cmc
fldl
insl
cld
movsb
into
xor
comiss
loop
push
hlt
stos
pop
jns
xchg
and
out
mov
mov
mov
add
dec
mov
sbb
xchg
lods
stos
mov
in
lods
pop
scas
lods
sbb
std
mov
xchg
jbe
and
mov
jo
mov
jnp
mov
hlt
jecxz,pt
sbb
sbb
in
jmp
test
std
adc
dec
dec
jo
ds
or
enter
nop
sub
push
call
xor
push
std
in
out
mov
jbe
popl
jle
ret
jo
and
jmp
imul
mov
push
insl
inc
dec
pop
in
add
mov
sub
inc
daa
in
cli
xor
addr16
rorl
in
rcr
div
pop
leave
push
enter
or
data16
mov
and
daa
dec
pop
mov
or
js
dec
dec
mov
lds
mov
in
cmp
cmp
xchg
xchg
sahf
pop
lea
ss
into
xor
and
jp
mov
push
sbb
mov
popa
data16
fs
ficompl
insb
cs
loopne
xchg
dec
push
mov
sbb
lretw
ret
mov
dec
push
dec
stos
xor
and
cmp
enter
shrb
fs
sub
movsl
or
shrl
js
pop
scas
mov
test
mov
scas
cmpsl
cmpsb
subl
pusha
loop
shlb
jmp
xor
loop
mov
push
loope
loopne
cmpsl
fs
outsb
mov
icebp
in
jge
push
aam
or
addr16
mov
push
push
jl,pt
insb
push
adc
jno
outsb
incb
lcall
adc
test
stos
arpl
popa
mov
mov
mov
lcall
dec
imul
aam
xchg
fcmovnbe
jae
pop
dec
ljmp
lret
sbb
cld
add
xchg
or
or
out
das
mov
stos
pop
cs
fs
push
xor
leave
mov
dec
pop
mov
in
sarb
cmovp
mov
lret
insb
roll
dec
cs
scas
push
fsubl
ret
inc
mov
inc
dec
scas
shrb
test
out
push
mov
ret
push
adcb
in
push
aas
out
push
cld
jmp
sbb
mov
in
lea
xor
jp
xor
aas
jge
cmpxchg
movsl
jge
popf
push
aaa
ds
arpl
bswap
adc
rcrb
adc
pop
cwtl
in
push
mov
add
std
adc
loop
or
xor
jae
cmp
enter
xchg
div
ja
xor
je
shll
dec
jo
jp
inc
insl
mov
xchg
cmp
push
addl
add
aam
int3
stos
sub
mov
movsl
dec
fbld
pop
pop
pop
fdivrl
dec
mov
dec
add
je
fwait
imul
add
adc
lret
imull
aad
outsl
cmp
jo
and
jno
dec
mov
popf
xorb
xchg
xchg
sub
stos
push
mov
jmp
inc
xlat
mov
pusha
xor
push
fsubrs
jp
testb
pushf
lock
in
int3
stos
repz
stos
outsl
add
xchg
jmp
pop
das
das
xchg
fldenv
fcomip
mulb
stc
ss
ljmp
dec
mov
ficomps
mov
rorl
jno
lock
or
stos
popf
or
ret
outsl
mov
mov
stos
cld
addr16
lcall
ret
cmp
xor
sub
sbb
stos
std
sbb
add
push
addr16
out
mov
orb
mov
lcall
jmp
mov
call
fadd
pop
mov
push
lret
jle
out
out
mov
leave
in
dec
jb
xchg
pop
sti
stos
in
ret
mov
gs
mov
mov
ret
sbb
fnstcw
sbb
mov
mov
mov
fwait
out
clc
into
fwait
aas
lret
jecxz
pop
sbb
rclb
jg
xchg
xchg
lret
fldl
inc
jno
inc
rclb
xor
pop
add
add
call
xchg
pop
cld
test
inc
sbb
push
out
mov
daa
fstpl
imul
inc
sahf
xchg
into
push
mov
test
repz
dec
xchg
arpl
cmpsl
lret
or
cmp
ficoms
adc
loopne
mov
ds
sbb
mov
jge
xchg
ja
adc
sbb
and
imul
movsb
cli
dec
inc
loope
addr16
mov
adc
shlb
in
mov
sub
call
and
mov
add
and
in
scas
sar
fs
arpl
jmp
in
bnd
in
test
daa
push
or
dec
es
xlat
dec
or
data16
sub
xchg
xchg
fstl
jge
nop
jecxz
and
mov
pushl
sub
xorb
xchg
push
call
in
inc
pusha
ss
lret
stc
xor
scas
das
fdivrp
push
push
loop
sbb
insb
fnclex
add
pop
mov
jecxz
inc
xchg
mov
ret
rclb
push
cmp
aaa
addr16
bound
out
outsl
adc
ss
add
push
and
fs
xchg
fdiv
mov
es
popf
and
adc
sbb
pusha
push
jae
out
jle
xchg
mov
ficompl
add
mov
xchg
icebp
adc
mov
enter
push
dec
loope
push
sub
lret
mov
pop
adc
ss
imul
mov
repz
xlat
lret
int
iret
pop
push
ljmp
and
xor
pop
sub
and
mov
and
mov
imul
add
iret
jle
popf
fmull
or
imul
push
aaa
mov
push
sbb
mov
pop
sub
sub
and
outsb
in
jp
mov
xchg
popa
sub
out
aaa
xlat
mov
jecxz
jge
mov
fstpl
cltd
jmp
das
sbb
cmc
add
pop
addl
dec
mov
in
in
dec
push
imulb
aas
dec
test
mov
xchg
mov
xor
test
cmp
jl
mov
mov
sub
push
stc
test
rorb
inc
cmp
das
ds
xchg
jae
mov
popa
fwait
arpl
mov
sub
jo
les
jl
adc
jne
pop
rcl
ljmp
or
ret
cmp
cmp
mov
bnd
push
shll
cld
out
fstpt
xor
jnp
cld
push
pop
roll
mov
xor
scas
mov
pop
mov
aaa
push
stc
jle
icebp
pop
loop
lds
cltd
js
daa
pop
shrl
inc
adc
sbb
lea
popf
pop
rcrl
jg
dec
xor
cld
adc
fiaddl
orl
shll
mov
pop
or
sbb
xor
cltd
add
sub
push
lods
cmp
lods
pusha
fisubrs
fwait
cmp
nop
clc
mov
dec
lea
mov
nop
pop
movb
icebp
mov
lods
popf
out
jbe
jnp
sbb
pop
and
xchg
loope
addr16
not
les
pop
dec
outsl
add
popf
dec
fildll
std
lahf
scas
fildll
dec
std
std
xchg
mov
and
cmpsb
xor
pop
dec
or
inc
or
adc
mov
sbb
push
dec
ret
insl
jae
xor
cmp
scas
mov
mov
and
sub
pop
lods
jno
pop
in
pop
aad
pop
jae
push
mov
jns
popf
sti
and
lds
insb
and
arpl
out
ss
cmp
pushf
sub
mov
cmpsl
push
jae
hlt
jo
frstor
push
pop
jecxz
inc
jmp
sub
cmp
mov
andb
pop
icebp
or
xchg
cmc
lds
jb
jmp
xor
jp
ds
sub
lahf
subb
inc
pop
add
cwtl
adc
sbb
lret
aaa
aaa
sub
lret
dec
lods
add
mov
sti
cmpsl
mov
mov
cmp
sbb
add
adc
jae
or
cmpb
addr16
sahf
shrl
push
hlt
lods
sub
push
outsb
add
lcall
stc
and
push
xor
jp
or
mov
xchg
das
mov
sahf
jno
pop
in
cmp
arpl
jle
subb
pop
push
or
lods
adc
shlb
push
lcall
insb
icebp
ja
lods
in
adc
sub
push
inc
mov
fwait
nop
sub
test
pop
xor
add
fnsave
shlb
jp
fwait
dec
mov
out
or
xchg
sar
out
das
and
cmp
xchg
ljmp
sti
int3
pmaddwd
out
sbb
inc
jae
adc
imul
imul
outsb
xchg
mov
test
cmp
mov
mov
test
testb
lods
ss
adc
add
fld1
sbb
xchg
subb
sub
in
jg
in
lret
scas
push
repz
push
push
mov
xor
fdivrs
into
pop
gs
sub
inc
lods
out
jno
call
or
lea
fadds
hlt
and
sbbb
andl
jo
fsub
test
in
les
pop
push
mov
sbb
out
lock
fucomi
cmpsb
cmp
sub
sahf
push
pop
insb
or
cmp
mov
enter
std
mov
and
mov
test
out
aam
mov
sub
sbb
cwtl
fadd
ds
mov
adc
push
jno
aad
cmp
mov
aad
rcll
pop
in
mov
xchg
mov
pusha
mov
lahf
daa
jmp
or
stos
cmp
popf
jge
jb
dec
or
lods
lahf
enter
leave
icebp
and
sbb
je
test
mov
shlb
fstl
scas
movsl
xlat
push
fst
mov
iret
fildll
lcall
hlt
pop
stc
pop
xor
mov
push
pusha
mov
je
add
cmp
shl
cmpsl
jl
call
ret
push
loop
fimuls
insl
ljmp
fsubs
add
notl
dec
and
lcall
fbld
xor
adc
cmp
mov
pop
cmpsb
sbb
jae
loop
sub
leave
rcll
enter
aad
ret
sarl
dec
leave
clc
mov
jecxz
lods
adc
push
adc
repz
cmpsl
daa
xchg
ficoml
jne
push
add
sarl
ljmp
test
xlat
adc
push
mov
jne
icebp
adc
in
adc
jmp
pop
mov
ficomps
ret
pop
es
cmp
es
mov
outsl
cwtl
sahf
pop
add
xchg
lods
cs
mov
and
ficompl
add
sbb
cmpsl
mov
into
repz
jno
cmpsl
pop
push
lock
mov
aaa
fidivl
mov
dec
pop
iret
or
mov
jnp
lret
ret
adc
and
movsb
pop
cmpb
or
stos
xor
push
dec
int3
rolb
lret
jl
addl
jno
leave
aas
push
sahf
clc
xor
jmp
adc
js
clc
adc
fs
xor
mov
lods
and
test
sbb
insb
sub
fldenv
mov
inc
js
icebp
push
int3
add
repnz
inc
or
shrl
cs
les
out
sbbb
fwait
pop
add
jmp
das
adc
outsb
or
mov
push
lds
add
shl
lret
xor
mov
stc
leave
mov
insb
dec
or
pop
xchg
in
out
int3
adc
dec
test
cmp
stos
add
cld
adc
jle
lea
mov
mov
sbb
fadds
jb
pop
xchg
cmpb
repnz
xchg
mov
add
mov
sbb
jp
fmull
xchg
ss
cmpsl
xchg
leave
push
pop
mov
ds
fxtract
ret
mov
out
or
lret
xor
adc
pop
pop
mov
fiadds
push
cld
pop
add
sbb
xor
cmp
adc
repnz
pop
stc
testb
mov
cmc
mov
out
mov
sub
sub
mov
sti
pop
xor
rcrl
jne
mov
pop
std
lea
cmc
mov
xchg
jo
pop
addr16
ds
rorb
xlat
xchg
xchg
dec
movsl
xorb
sti
xor
ret
sub
xchg
into
nop
sbb
jl
push
add
scas
scas
push
add
pop
mov
inc
xchg
inc
jg
cmp
jge
xchg
fcmovne
ljmp
movsl
ret
rol
icebp
jg
sbb
cmp
aam
push
aam
xor
mov
mov
pushf
or
sbb
ljmp
cs
adc
sbb
mov
mov
mov
cmp
add
imul
mul
jge
addl
adc
insl
cmp
nop/reserved
mov
xchg
sbb
ljmp
push
enter
loop
icebp
sbb
ljmp
xor
sub
mov
lret
sbb
jb
inc
cmpsb
mov
pop
in
dec
pushf
jmp
mov
sub
dec
mov
pop
mov
jg
adc
mov
dec
mov
xchg
mov
jp
mov
push
sti
dec
push
out
cli
mov
push
sub
xor
mov
fildll
jnp
rcrl
leave
sub
in
mov
pmulhw
add
mov
int3
jbe
adc
popa
mov
popf
or
and
mov
ja
add
xor
enter
enter
subb
popa
sub
add
aad
xor
lock
lret
cmc
mov
mov
sbb
and
dec
sbb
or
sahf
cmpsl
sbb
fwait
aad
clc
rcl
popl
or
inc
sti
push
mov
cltd
test
dec
into
ficoms
cmp
in
fidivl
or
lods
enter
scas
jae
sub
jbe
add
cmp
jp
cwtl
ss
pop
aas
inc
xchg
imul
xor
push
rclb
push
subb
jp
mov
xchg
mov
addb
sub
lea
mov
or
push
jecxz
out
and
xlat
sub
and
cmp
inc
lret
ds
aam
enter
in
mov
scas
in
jl
int
adc
daa
scas
lret
mov
sub
pop
and
aaa
xor
push
xchg
data16
daa
dec
insb
sti
and
dec
adc
das
inc
insl
fwait
mov
imul
test
mov
cmpsb
xchg
mov
push
fisubrs
or
add
cltd
push
ljmp
fcoml
mov
pop
or
push
mov
arpl
in
pop
push
xor
and
int3
sbb
mov
imul
mov
mov
shll
add
dec
or
sbb
scas
push
and
fisttps
hlt
lret
mov
popf
pop
cmp
cmp
pop
cli
and
add
pushf
and
jle
mov
aaa
filds
fcompl
js
mov
sarl
cmpsb
imul
xor
ds
cs
cs
pop
dec
push
addr16
or
cmp
dec
push
push
dec
mov
loopne
mov
mov
pusha
cld
or
xorb
popa
pop
pop
and
rorl
or
leave
mov
lods
xchg
jg
test
out
cltd
and
and
push
inc
out
jmp
mov
pop
shlb
lcall
push
inc
lahf
push
rorb
mov
addr16
mov
loop
out
mov
mov
in
popa
in
mov
outsl
jge
aaa
lahf
nop
frstor
lods
and
ss
imull
push
sti
cld
cli
mov
pop
push
roll
adc
out
push
fisttps
xorl
into
or
or
sub
daa
ret
push
lahf
mov
mov
dec
mov
sub
std
mov
mov
mov
insb
iret
insl
dec
leave
pop
pop
mov
xchg
pop
aam
adc
imul
shrb
push
sub
dec
fisubs
xchg
fisubl
pop
pop
rolb
loopne
fsts
mov
fildll
xchg
out
pop
pop
leave
pop
ljmp
fdivrl
sbb
nop
jno
pop
roll
adc
mov
sbb
xlat
cmp
cmp
outsl
out
sahf
or
shrl
aad
std
sbb
push
cmp
rorl
mov
cmp
repz
rcrl
xor
scas
xchg
ljmp
sub
mov
xor
pop
pop
insb
ja
pop
push
or
dec
push
js
in
push
adc
sar
push
mov
cmp
in
repnz
lea
mov
sbb
and
out
repnz
sahf
pusha
mov
popa
cltd
mov
jle
push
nop
jmp
stos
test
jl
int3
mov
leave
mov
xchg
push
lcall
mov
fnstsw
and
test
fwait
or
add
xlat
into
mov
push
std
ror
hlt
es
loope
sbb
dec
ret
stc
lret
add
lret
leave
insb
jle
loope
imul
mov
dec
enter
lock
pop
pop
aam
mov
fstl
push
call
mov
cld
js
adc
xor
scas
shl
xorl
push
jbe
jle
sub
loop
daa
sbb
fsubrs
jge
xor
push
push
mov
push
mov
xchg
into
leave
add
mov
add
frstor
mov
test
mov
pop
call
ret
sbb
and
add
in
lcall
pushf
mov
shll
cmp
adc
lock
sbb
sti
xchg
sub
jns
cmpl
enter
outsl
cmpsl
ss
outsl
or
fmull
push
xchg
push
sbb
jmp
or
repnz
mov
cmp
mov
adc
es
pop
dec
push
enter
mov
stos
xor
aaa
jge
pop
shlb
in
xlat
jmp
lds
lret
jne
fcom
mov
pusha
add
xchg
into
xchg
subl
repz
dec
aaa
sub
gs
shlb
pop
jmp
adc
xchg
sbbl
cmpsl
ja
scas
add
pop
push
outsl
addr16
stc
decl
inc
xchg
push
lods
pop
imul
fldcw
enter
cwtl
sbb
ret
and
sub
jb
test
data16
xchg
das
aas
cmp
and
shl
jae
add
or
add
out
jb
into
jb
inc
fsts
notb
nop
inc
popf
xchg
jl
xchg
jle
std
dec
lret
ds
fstl
popf
cmp
cmp
mov
ret
rorb
mov
xchg
aas
out
add
sbb
adc
xor
or
add
loope
add
jb
mov
iret
test
inc
xchg
adc
insl
fiadds
arpl
rcl
sbb
out
xchg
pop
sbb
xchg
outsl
xchg
repnz
repz
dec
rolb
dec
cmpb
loope
push
out
shll
jae
xor
out
add
xor
add
jmp
adc
mov
mov
lods
movsl
adc
inc
repz
jo
add
push
jg
loope
pop
mov
xchg
stos
adc
xor
mov
ret
int
jge
cmpsb
mov
outsb
mov
fwait
sub
outsl
mov
mov
inc
outsb
sbb
movq
nop
cld
jg
pushf
jl
rcll
hlt
cmp
mov
fs
mov
mov
push
or
inc
fidivs
dec
jl
dec
ds
add
sbb
lods
sbb
lods
aad
stos
xor
mov
pop
xchg
push
in
xlat
setle
cltd
hlt
jne
or
or
ret
nop
in
sbb
cld
sub
cmc
cmp
imul
sub
cmpsb
mov
sbb
mov
test
aad
add
shl
xchg
and
cltd
bound
xor
cmp
popa
jl
iret
mov
fs
loop
pusha
mov
cmp
shrl
mov
mov
inc
test
aad
leave
icebp
inc
xor
ret
dec
push
push
dec
add
stc
pop
das
mov
dec
and
add
or
pusha
jmp
enter
cmp
mov
test
ds
aad
mov
clc
jno
dec
loop
xlat
mov
sbb
cmp
and
sub
sbb
pop
and
cwtl
cmpsb
sbb
or
into
cmp
in
push
mov
mov
mov
shlw
xchg
sub
test
dec
adc
hlt
cmp
into
mov
xchg
adc
lret
hlt
sub
mull
or
add
pop
stos
inc
jge
outsl
sbb
xor
push
push
in
jno
dec
pmulhuw
adc
dec
and
jo
inc
and
movups
add
xor
inc
out
mov
out
scas
outsb
pushf
jecxz
ljmp
and
out
push
xchg
cwtl
xlat
sbb
shlb
push
sub
cwtl
pop
mov
lds
cmp
outsl
push
out
xchg
movsb
leave
mov
sarl
jge
filds
fs
sub
pop
inc
arpl
and
xchg
in
mov
cs
dec
jnp
mov
pop
mov
add
in
nop
cmc
sbbb
rcll
int
shrl
std
mov
pop
push
dec
push
cmp
gs
xor
pusha
je
dec
mov
add
out
dec
push
sbb
imulb
sahf
lcall
dec
mov
lret
cld
cmp
sbb
loope
mov
push
insl
cmp
cmp
jp
in
cmp
inc
das
out
push
pop
fstpt
xchg
iret
stos
push
lea
jle
pop
sub
xchg
stos
add
dec
in
mov
fadd
insb
shlb
adc
les
xchg
rcrb
movsl
adc
jno
xchg
lea
sbb
inc
push
cmp
insb
and
call
xchg
sbb
andl
flds
sub
je
xorb
cltd
mov
lret
jo
insb
fmul
and
or
pop
rcrb
push
mov
sti
je
xchg
dec
out
lds
lods
ljmp
ss
iret
inc
test
leave
ja
mulb
aad
es
push
pusha
loope
pop
stc
lret
fstpl
dec
mov
scas
sbb
adc
pop
in
jbe
scas
popf
lea
and
sbb
jo
sub
xor
jecxz
pusha
pop
sub
rclb
mov
pop
fidivrs
test
and
sbb
add
mov
loope
nop
nop
lea
jge
xchg
iret
fisubrl
jp
out
jns
mov
ljmp
or
mov
stos
shl
inc
dec
xchg
xor
mov
std
loop
pushf
mov
push
shrl
popa
test
pop
movsl
jp
shlb
test
sbb
es
sub
jg
fadds
push
xlat
cli
inc
fimull
xor
in
cs
inc
outsb
xchg
adc
sub
push
mov
lock
daa
outsb
test
fs
out
sub
imul
push
ret
gs
mov
ds
cs
and
add
mov
push
andb
sub
push
call
lahf
aaa
xor
negb
dec
aad
lcall
xchg
mov
aas
push
xor
pop
aad
inc
data16
ja
out
mov
aad
push
mov
mov
repnz
movsl
insl
push
loop
into
xchg
push
das
mov
cmpsl
fsubs
mov
test
into
xchg
clc
lahf
cmp
push
inc
mov
popf
dec
jnp
xchg
jne
adc
mov
adc
or
jae
jno
xor
inc
xor
xchg
mov
test
pop
nop
lods
subl
iret
jp
xor
stc
mov
adc
cmc
sub
je
inc
xchg
out
rcll
xchg
jbe
cld
out
aad
cmp
shlb
dec
mov
mov
test
or
pop
lea
mov
sub
fcoml
xchg
aam
repnz
xchg
jbe
sub
leave
loopne
sar
jg
jb
fidivrs
js
pop
push
lock
dec
lret
mov
jae
aaa
mov
adc
sbb
nop
sub
pop
adc
or
pop
and
add
pop
jg
push
inc
cmp
xchg
shll
pushf
adc
push
mov
pop
das
mov
divb
adc
sbb
dec
iret
lods
imul
push
cmp
sub
pop
add
mov
ljmp
xlat
stos
pop
push
inc
lea
ficoms
push
xchg
inc
imul
repz
cmp
in
idivb
push
in
push
lods
sub
mov
xchg
out
mov
jle
push
call
sbb
mov
push
ja
lcall
and
dec
pop
cmpsb
push
push
or
adc
lcall
scas
sbb
fdivrl
aas
add
add
add
cmp
adc
ficoms
lret
mov
jmp
push
mov
jb
cmp
jbe
xchg
jg
add
inc
lods
jns
andb
mov
and
out
sarb
pop
jl
jecxz
lds
or
mov
int
into
bound
adc
mov
push
out
add
mov
in
gs
ret
sbb
or
mov
sbb
sub
mov
out
je
loop
je
xchg
lret
in
sub
or
fidivl
sub
filds
sub
fistl
shlb
push
and
sarb
enter
icebp
xor
sub
adc
mov
push
in
cmp
mov
jne
cld
jmp
mov
popf
aam
inc
and
mov
lods
fisubs
add
stc
movsb
test
ljmp
jo
pop
loop
cs
mov
shll
sbb
in
lcall
imul
pop
imul
cmp
sbb
test
sbb
rolb
or
inc
dec
push
nop
jmp
pop
sub
lods
cltd
imul
or
movsl
popf
push
or
mov
push
mov
lea
inc
out
test
mov
popf
dec
sbb
cmp
dec
mull
xchg
fcomp
lock
xor
jecxz
sti
jge
or
inc
lret
sarb
sub
lcall
mov
clc
js
insl
fldcw
popf
arpl
jae
adcb
fsub
xor
cld
sbb
std
xchg
adc
xchg
adc
in
push
xor
push
or
cmp
or
adc
dec
push
mov
mov
or
adcb
pop
or
aad
lcall
aas
or
repz
mov
cmp
xchg
jo
cmp
xor
mov
lods
add
call
pop
mov
xor
push
adc
fisubl
or
jnp
jmp
inc
xchg
inc
lcall
filds
cmovbe
xchg
movsl
aaa
cli
lods
cs
mov
out
dec
je
ljmp
std
adc
mov
lret
decb
stos
push
mov
aaa
push
aad
pushl
sti
mov
xchg
rorb
add
jnp
push
sub
leave
aas
push
enter
mov
mov
dec
lret
incb
ds
adc
push
pop
repz
mov
sub
jge
stc
sahf
mov
mov
fstp
add
inc
clc
xchg
adc
inc
dec
popf
jge
jne
mov
out
jecxz
lods
mov
xchg
adc
lods
outsl
jnp
movsl
roll
jle
das
mov
testb
pop
push
pusha
outsl
push
std
add
dec
ljmp
setno
push
fsubl
stos
dec
mov
mov
dec
pop
adc
sbb
loopne
fs
mov
and
sub
adc
stos
mov
idivb
and
ljmp
fcomps
or
dec
cmp
pop
xchg
pop
push
repnz
outsb
ja
mov
int3
and
fs
arpl
mov
mov
pop
inc
movsb
pop
cmpsl
push
cmpsl
gs
inc
jns
xchg
mov
xor
xchg
add
insl
sahf
xchg
and
jecxz
sbb
and
adc
cld
mov
xorb
into
adc
mov
mov
dec
sub
lods
or
fnstsw
fisubl
sti
cmp
cmp
jl
dec
xchg
mov
or
in
sbb
ss
rcrl
mov
xchg
addr16
lock
cli
cltd
fmuls
jg
xor
push
and
dec
loope
and
nop
adc
lret
cmpsl
in
dec
out
pop
es
lret
outsb
pop
loopne
add
fidivl
flds
and
stos
jmp
push
xchg
lods
and
inc
fcomps
hlt
xor
sbb
scas
imul
dec
movsl
xor
mov
push
ret
std
jecxz
movsl
in
rcr
cmpl
sbb
push
mov
adc
popf
shrl
cmpsb
scas
pop
mov
mov
dec
mov
leave
jg
jge
out
lcall
test
ljmp
inc
inc
cmp
sub
fcompl
jle
cmc
hlt
push
mov
enter
into
test
lret
shll
nop
mov
mov
test
outsb
dec
and
aaa
mov
out
sbb
push
fcoml
mov
into
sbb
lds
and
push
inc
pop
imul
leave
or
and
lds
xchg
or
fdiv
ljmp
adc
dec
add
jp
repnz
das
sub
adc
inc
leave
rcr
mov
fisubs
push
adc
test
add
pop
lahf
or
dec
xchg
addr16
jne
cmp
aad
enter
insl
divl
xor
sub
sbb
insl
lds
dec
cwtl
lretw
cmpb
pop
das
and
outsl
xchg
mov
ss
jae
sti
pop
mov
sbb
xchg
dec
jp
adc
xchg
outsl
loop
shl
addr16
push
ja
rorb
jg
cmpsl
push
ss
roll
fwait
mov
sbb
in
sub
pushf
add
test
mov
data16
pop
nop
mov
arpl
enter
xor
adc
adc
lods
sbb
cs
inc
fidivrl
aas
shlb
add
xor
rorl
aaa
mov
xor
data16
mov
scas
cmp
push
shlb
and
pop
aas
fwait
in
push
push
adc
push
push
mov
in
pushf
clc
cmp
data16
push
xchg
test
add
pop
jg
clc
cmp
jg
stos
pop
jb
and
lcall
add
negl
fs
insl
jno
add
mov
imul
lret
cltd
cmp
or
repz
mov
inc
xor
push
inc
dec
cltd
popa
repnz
enter
out
in
in
adc
xchg
pop
lret
and
push
jecxz
rorb
mov
jl
addl
fsubrs
pop
push
lods
add
hlt
fisubrl
mov
aam
lahf
xchg
imul
in
adcl
mov
and
enter
sbb
popf
je
in
cmc
outsl
cld
and
lock
enter
in
bound
dec
or
jbe
into
std
test
loope
push
lea
jp
in
divl
leave
cld
imul
jne
inc
enter
stc
fistpll
div
addr16
mov
lds
jmp
xor
dec
dec
cmp
adc
es
inc
push
mov
cmpsl
xchg
test
imul
shll
lahf
sahf
cmpsl
popf
mov
cmpl
testb
mov
pushf
das
inc
push
pushf
es
adc
push
or
xchg
into
and
adc
lods
sub
hlt
int
sbb
addb
sbb
fisubrl
sbb
lret
sub
xchg
stos
inc
sbb
sub
cltd
jne
scas
jns
cmp
pushf
out
sbb
push
xchg
popf
addr16
insb
inc
repnz
popf
int
and
mov
pop
cmpsl
xchg
ja
xchg
or
sbb
stc
lret
cmp
jge
push
xchg
aam
popf
xchg
and
fistpll
jecxz
cmp
outsl
cmpb
or
shlb
lock
add
and
cmp
ret
call
adc
mov
loop
pusha
adc
mov
xchg
out
test
xor
inc
add
dec
popf
rcl
adc
xchg
xor
sub
shl
cmp
out
ror
mov
mov
fsubrs
adc
pop
pop
mov
ffree
andl
test
pop
clc
nop
inc
jo
jno
adc
jge
mov
cwtl
lock
out
adc
mov
in
addb
push
loopne
in
nop
sub
xchg
cwtl
pop
fmull
ja
and
push
xlat
cmp
cmp
test
loop
pop
cmp
test
and
ds
fldcw
sub
iret
je
std
sub
ror
inc
xchg
sbb
mov
cmp
pop
pop
jp
sub
ret
pmaxsw
popa
movzwl
cmp
jnp
and
imulb
aam
push
lea
lcall
push
xor
or
push
push
stc
out
cmp
hlt
rcl
mov
cmpsb
test
pushf
push
jo
inc
insl
scas
lea
jecxz
stc
outsb
repnz
adc
icebp
insl
jge
push
jl
dec
ja
cmp
pushf
jmp
out
leave
fldpi
jb
sub
jbe
addb
and
loop
jo
jecxz
addr16
mov
nopl
adc
and
xor
int3
mov
jno
sub
int3
in
ja
imul
fs
sub
pop
fisttpll
in
dec
ds
das
push
std
and
xor
leave
mov
add
jb
inc
pop
js
bound
xchg
sbb
outsb
das
iret
cld
xchg
add
ds
jbe
sahf
or
jns
dec
movsl
loopne
dec
mov
ficomps
jb
inc
push
popf
fdivrp
arpl
out
push
jecxz
ds
jecxz
jmp
cld
les
lret
fcomi
mov
push
mov
in
nop
pop
adc
clc
out
sub
mov
imul
pusha
aaa
inc
cmovae
sbb
mov
cmp
movsb
jge
cmp
fists
mov
pusha
outsl
push
mov
movsb
dec
dec
into
lahf
xor
mov
xor
pop
sub
push
rorb
subl
push
jmp
lods
cld
sbb
push
lahf
ljmp
jno
stos
pop
outsb
cli
out
xorb
sub
mov
outsl
mov
stos
test
and
jno
lds
xorb
mov
pop
leave
std
lahf
pop
jo
cmc
mov
hlt
or
mov
dec
outsl
cmpsb
faddl
scas
mov
pop
lret
js
sbb
je
jb
cld
mov
int
xchg
adc
add
or
in
lcall
in
dec
cmp
cltd
xchg
test
jns
fs
int
and
push
outsl
jge
int3
test
xchg
xchg
mov
push
xor
xchg
cld
aas
push
aad
inc
icebp
pusha
cmp
cmp
loopne
aaa
jmp
sbb
shl
push
xor
clc
lods
mov
les
or
xorl
push
shrb
jmp
inc
stc
xor
push
dec
roll
push
test
jecxz
lcall
shlb
sub
xchg
lods
sti
sbb
enter
and
add
sub
inc
mov
push
adc
inc
xor
add
dec
mov
iret
icebp
loopne
push
xchg
ljmp
aam
mov
cmp
xor
into
ja
stos
or
xchg
rolb
lds
inc
push
xchg
push
sub
adc
sbb
pop
rcrl
cmp
jae
inc
jo
gs
cmp
mov
xor
rcll
out
and
and
pop
mov
out
jnp
mov
pusha
xchg
sbb
call
mov
jns
pop
pop
jmp
std
and
loop
inc
or
adc
out
enter
mov
dec
int3
shll
int3
ds
movsl
xchg
orb
adc
push
adc
mov
mov
xor
add
push
sbb
cmp
fwait
sarl
push
push
scas
mov
pop
mov
out
cmp
repnz
shr
mov
out
lods
jno
mov
jp
sbb
and
call
jl
xchg
pop
xchg
cmp
out
push
push
inc
bound
mov
push
lds
mov
xchg
hlt
mov
repz
push
jne
pop
and
fsubs
xchg
daa
js
scas
mov
subl
and
cmp
add
test
push
dec
mov
test
decl
jmp
cmp
jmp
das
xlat
das
or
pop
pop
xlat
pop
xchg
movsb
inc
fwait
sub
addr16
or
adc
jle
cld
leave
add
mov
pushl
flds
loop
iret
aas
xor
in
adc
jnp
cli
and
ret
int
xchg
lock
lods
push
fcoml
jge
sbb
repz
cmp
rorb
movsb
sbb
les
mov
movzbl
jae
cltd
cld
mov
mov
adc
and
and
inc
sbb
jp,pt
mov
xlat
jno
jmp
xchg
jge
dec
jge
ja
sbb
cli
cmp
xor
pop
pop
xchg
pop
push
icebp
test
and
das
lcall
fimull
or
jmp
xchg
cmpsb
mov
sahf
mov
xor
xchg
push
push
dec
insl
add
and
dec
mov
repz
jp
mov
jbe
inc
daa
mov
pop
loope
inc
mov
add
aam
add
es
repnz
jge
mov
push
push
mov
lea
ljmp
fdivrl
ret
push
call
jge
daa
mov
sub
or
in
cli
pop
sbb
in
xchg
lcall
inc
lods
sub
out
mov
xchg
sbb
push
pop
repnz
movsl
repz
add
mov
add
jne
xchg
rorl
inc
icebp
jns
dec
testl
pop
shrl
inc
imul
in
fisubrl
xor
ja
bnd
xor
jns
outsl
loope
inc
lahf
jp
sbb
cmc
pop
sub
jno
int
lock
inc
add
outsb
push
sub
out
rclb
mov
push
in
ds
notb
fimull
dec
aaa
data16
push
and
jp
loopne
stos
mov
shll
adc
adc
sbb
xchg
in
adc
test
hlt
push
insl
push
or
jge
je,pt
or
out
les
xchg
out
out
pop
std
imul
shr
outsl
and
fistpll
pop
lret
mov
push
ljmp
call
mov
inc
je
xchg
or
cmpsl
test
fdivs
test
push
xor
mov
rorb
std
movsb
mov
add
jne
mov
jge
test
loop,pn
push
jmp
mov
in
ret
inc
and
adc
and
and
repnz
push
ljmp
mov
push
fsubrl
xchg
inc
sarb
aaa
dec
xchg
outsb
inc
icebp
idivb
sub
inc
in
stos
sbb
lahf
jo
jbe
xchg
mov
or
dec
inc
adc
xchg
add
pushf
cmp
and
popf
mov
pop
cmpsl
mov
dec
jg
push
adc
mov
xor
clc
flds
fists
fstl
ret
popa
sub
out
fwait
pusha
mov
and
jb
sub
pop
subb
pop
fs
mov
iret
and
sbb
add
and
sub
cli
xchg
mov
imul
std
fidivrs
pusha
sub
xchg
xchg
jnp
mov
stos
xchg
dec
or
fcomi
adc
mov
pop
jmp
jl
ds
imul
sarl
jp
cmc
icebp
imul
cld
in
lock
adc
daa
inc
add
test
stc
scas
push
subb
iret
imul
pop
sub
nop
aas
jne
fs
mov
jmp
insl
test
adc
mov
and
and
mov
mov
lods
ret
xor
xor
ret
cli
sub
ljmp
pop
sarb
lods
dec
scas
ss
add
xchg
pop
sub
cmp
xor
xor
xchg
jae
jle
sbb
repz
pop
mov
mov
jmp
mov
add
mov
aad
in
add
push
dec
repz
fimuls
lods
les
popf
add
popa
je
ss
xlat
mov
mov
add
adc
xor
xor
cltd
ret
inc
mov
fdivrs
mov
sub
xchg
stos
sti
jmp
test
mov
mov
ret
pop
lret
add
cmp
add
ret
nopl
sub
rcl
test
push
popf
cmpsl
or
loope
xchg
jae
lds
sub
sahf
aam
pushf
mov
cmp
pushf
push
stos
dec
and
aaa
movsl
aam
mov
das
popa
xchg
or
insl
push
xchg
dec
add
dec
outsl
mov
jae
out
push
es
push
cwtl
sbb
dec
mov
lods
sbb
xchg
adc
femms
sbb
lock
mov
mov
sti
sahf
mov
mov
fistl
idivb
sbb
addb
add
out
fs
in
rcl
shrb
and
jp
mov
or
mov
mov
ds
and
mov
test
adc
mov
divl
cmp
sub
push
sbb
loope
mov
mov
aad
mov
mov
shll
adc
movsl
repz
mov
into
pushf
dec
stos
addr16
in
sbb
mov
addr16
inc
outsl
shll
xor
pop
stos
pop
stos
ja
push
inc
sbb
inc
mov
and
jnp
push
aas
dec
xchg
fistpl
add
adc
bound
insb
cmp
and
or
adc
mov
sbb
adc
ljmp
jmp
mov
jno
add
mov
cwtl
mov
sti
data16
mov
pop
mov
je
int3
xchg
sbb
mov
js
enter
mov
out
mov
pop
repnz
xchg
jne
sbb
xchg
stos
sbb
mov
cmp
addr16
sbb
dec
clc
repz
push
pop
xor
jns
add
or
stos
daa
data16
push
int
and
popa
or
pop
je
dec
xchg
bound
mov
and
jp
jo
adc
pop
loop
mov
cmp
out
fs
es
mov
fnstsw
std
adc
lock
fcoml
jmp
aad
cmp
fdivr
dec
in
mov
mov
mov
jnp
out
loopne
nop
add
repnz
cwtl
in
inc
test
inc
mov
clc
lret
enter
pop
xchg
mov
mov
fcomps
dec
mov
jg
cmpb
mov
mov
enter
mov
inc
rcrb
cld
xor
mov
jo
in
mov
out
in
cwtl
sbb
insl
xchg
popf
push
mov
outsl
xchg
movsb
adc
in
xchg
or
dec
lahf
xchg
sbbl
dec
add
mov
inc
jmp
xchg
clc
or
jp
mov
xor
or
je
into
test
adc
scas
cli
push
mov
std
push
enter
push
call
jns
mov
pop
cmp
xlat
and
sbb
clc
int
fdivrs
adc
and
push
int
fcomip
es
or
cmp
cmp
lea
xor
push
int
lods
xchg
jp
les
arpl
popa
mov
jmp
pop
stos
jmp
and
xchg
in
jo
aad
ljmp
add
js
adc
leave
insl
adc
and
es
mov
popf
mov
dec
inc
pop
fsts
aas
int3
inc
mov
imulb
pop
adc
out
inc
insl
dec
icebp
mov
addb
mov
xor
rorl
jne
imul
adc
dec
fidivl
xor
test
dec
cmpsb
mov
cmp
pop
decb
and
jp
cltd
rol
and
int
cmp
inc
pop
xor
andl
in
jl
jg
mov
aad
sub
push
aam
arpl
mov
adc
sub
fmuls
pop
dec
push
inc
pop
movsl
dec
cld
jbe
clc
in
xor
inc
cmc
push
out
pop
popf
ret
inc
clc
clc
arpl
stc
fiadds
sbb
clc
orl
dec
pop
xchg
cmp
sbb
pop
push
lock
push
inc
jb
into
sbb
adc
mov
add
lcall
imul
fcmovnu
imul
ret
jl
and
dec
les
xor
push
test
pop
xor
or
addb
inc
bound
or
adc
push
xor
or
dec
das
pop
dec
and
std
mov
mov
cwtl
or
jbe
or
and
xchg
jmp
xchg
fdivrl
mov
enter
sub
scas
and
push
ror
pop
ja
mov
mov
pop
aaa
popf
dec
lods
outsb
in
movsl
out
in
aas
aam
or
outsb
mov
ljmp
mov
add
test
pop
dec
dec
lret
mov
mov
mov
sbb
fdivrs
dec
ret
or
imul
push
addl
movsl
loop
mov
push
sbb
xor
scas
les
add
adc
repnz
imul
das
jmp
negl
pop
ja
test
gs
mov
aad
ss
xor
cwtl
cmp
mov
insb
xor
mov
mov
pushw
mov
mov
int3
mov
add
push
mov
popa
or
push
dec
arpl
shrl
add
mov
in
mov
inc
pop
jns
out
daa
mov
aaa
and
test
jmp
popa
lods
pop
loop
pop
jecxz
sbb
imul
sahf
popf
inc
push
adc
mov
sub
and
inc
call
ds
dec
pop
sub
ljmp
call
mov
mov
aaa
inc
mov
arpl
and
das
pushf
mov
fstl
push
jmp
mov
mov
xor
loop
je
aam
cmp
sbb
insb
loope
or
lea
xchg
xlat
pop
rorb
daa
cmp
mov
lods
adc
ss
or
xor
mov
adc
add
push
rol
loopne
or
mov
or
dec
sub
jl
mov
shl
jp
or
mov
in
sub
or
pop
and
andl
movsl
rorl
cli
icebp
js
jbe
stos
xchg
jno
mov
mov
std
adc
rcrl
inc
orb
sbb
ja
fidivrs
insl
aad
jns
adc
pop
sarl
stos
cmp
repnz
jmp
mulb
dec
pop
jmp
fdivrl
xor
mov
add
or
pusha
orl
mov
je
pusha
xor
jb
test
loop
insl
mov
add
and
cmp
loopne
std
leave
movsb
nop
pop
cmp
xchg
and
add
and
or
ja
fmul
loopne
sub
push
mov
std
jmp
xchg
cmpb
mov
xor
int3
or
pushf
lcall
pop
addr16
ss
and
dec
les
leave
test
pop
imul
cmp
push
cmp
xor
imul
push
mov
sub
int3
sbbb
push
or
cmp
loop
push
jne
int
cmp
in
jmp
pop
mov
mov
js
adc
mov
les
out
add
xorl
xchg
inc
aaa
pop
xor
mov
pop
js
push
cmp
shr
aas
push
mov
js
lret
cmpsb
leave
mov
xor
inc
je
xchg
out
jae
es
fistl
addr16
cmp
ja
cmc
push
stc
mov
lock
inc
shrl
or
push
or
scas
mov
pop
lret
pop
sub
lret
mov
rclb
pop
sahf
out
add
add
inc
lret
or
ret
fnstcw
cmp
and
lds
mov
and
daa
cli
mov
and
data16
icebp
lock
ret
xchg
repz
je
inc
sub
lahf
xchg
push
dec
outsl
test
nop
pop
push
sahf
je
in
loope
dec
fisttpl
jb
push
add
xchg
sbb
data16
pop
jecxz
jb
fs
fmul
xchg
cwtl
mov
dec
add
ja
fidivrs
repnz
call
call
cmpsl
mov
cmpsb
sti
xor
pop
testl
jecxz
lret
xchg
xor
data16
nop
or
sahf
xor
sub
jmp
loop
scas
pop
xor
mov
fwait
add
outsl
dec
inc
sbb
scas
mov
xor
cld
or
adc
add
jge
xor
mov
jmp
addr16
addr16
aad
mov
or
dec
loop
xchg
sbb
inc
loopne
in
pop
mov
xor
mov
dec
lods
mov
sbb
cmpsb
gs
icebp
and
sahf
mov
shlb
pop
pop
idivl
int3
fsubr
jnp
push
pop
imul
mov
and
dec
notl
inc
xchg
fprem
jo
jg
xchg
std
push
cmp
xchg
mov
les
imul
adc
test
push
leave
scas
fldcw
movsl
push
xchg
ret
mov
adc
popa
lea
sbb
xchg
adc
movsb
scas
and
xchg
xor
pop
push
pushf
xor
fnstsw
jb
or
sbb
jno
das
xor
pop
fistl
push
in
sub
nop
push
sub
mov
addb
and
loope
xchg
sub
and
outsl
and
sbb
jo
sub
pop
rcrl
shll
sub
clc
imul
dec
in
call
shr
or
mov
clc
cli
sbb
sti
fwait
inc
inc
aad
mov
lret
aad
in
push
dec
xchg
push
add
sub
lock
jbe
inc
outsl
jge
mov
mov
dec
ret
sahf
pop
fincstp
je
addr16
add
xchg
ljmp
xchg
imul
iret
mov
mov
pop
test
pop
ficoms
jecxz
mov
loop
xchg
icebp
insl
or
clc
mov
in
daa
int3
add
icebp
fs
fidivrl
xlat
les
jns
outsl
adc
mov
jne
data16
cmp
push
jg
xchg
in
cmp
or
jnp,pt
pop
mov
testl
ror
je
or
popa
jp
stc
push
cmp
cli
dec
mov
lods
stc
cmp
stc
pop
push
std
inc
std
gs
movsl
mov
cs
add
repz
and
mov
out
cmp
loopne
lock
mov
mov
inc
nop
mov
dec
shl
add
sarl
out
nop
mov
out
jl
xchg
mov
or
scas
lock
test
sbb
mov
pop
adc
test
stc
mov
lods
ret
mov
outsl
xor
ja
add
and
test
out
adc
insl
add
ret
addr16
dec
and
pop
cs
aam
xchg
mov
adc
push
daa
xor
lret
mov
mov
lods
and
cmpsl
fisubrs
movsb
aad
inc
enter
pop
mov
jno
sub
je
cmc
xchg
mov
popf
js
jmp
cmpl
iret
call
aaa
mov
ret
int
cmc
and
sahf
mov
and
jmp
adc
push
push
fists
xchg
sbb
call
pop
pop
and
mov
nop
arpl
adc
dec
cmc
popa
xor
iret
dec
jo
adc
push
xchg
mov
xchg
test
mov
push
imul
int
out
xchg
push
lds
lods
aam
jnp
pop
das
decb
dec
imul
in
dec
in
add
sub
orl
loop
jg
inc
cmp
repz
jmp
fldt
xor
push
insl
icebp
xlat
cmp
insb
dec
xchg
add
iret
or
xchg
adc
shrl
mov
stos
das
jo
push
push
inc
movsl
mov
lret
mov
dec
jnp
adcb
inc
xchg
push
lret
and
jno
popa
lcall
imul
lcall
cmc
xchg
push
cmp
push
arpl
call
pop
sub
mov
sbb
clc
or
mov
or
and
pinsrw
mov
sahf
sbb
cmp
add
inc
sub
cmp
pop
fdivr
add
pop
rolb
and
dec
ret
outsl
inc
sub
mov
adc
cmp
add
mov
dec
xor
orl
pop
pop
sti
push
je
nop
xor
adc
mov
push
mov
stc
pop
je
bound
leave
lcall
js
xorl
mov
lret
dec
inc
hlt
pusha
sbb
insb
aad
pop
mov
cld
jnp
xlat
inc
and
stc
rclb
popf
pop
shrl
cmp
dec
fwait
aam
lock
mov
nop
sub
cmp
cld
cmp
add
mov
sbb
popa
les
test
adc
notl
sub
sub
iret
cli
xor
test
adc
sbb
clc
mov
dec
int
mov
add
cmp
adc
mov
js
sbb
ds
mov
push
cmp
pop
sub
lret
mov
lds
jge
iret
sub
or
xor
and
dec
mov
repz
out
test
and
cmpsb
mov
add
sbb
cmp
data16
fcoms
mov
fstpt
pop
cmpsb
mov
add
sbb
or
sub
push
aad
ficompl
pop
mov
mov
scas
pushf
cmc
dec
call
incl
add
test
loopne
andl
cltd
ret
out
sub
sub
pop
and
lret
sbb
imul
in
add
push
xor
imul
mov
sbb
or
aad
fwait
jo
test
push
sti
mov
xor
jno
aaa
mov
xchg
in
nop
dec
jnp
xor
jo
bound
cmp
cmpsb
and
mov
xlat
cmp
clc
and
sbb
xor
fsts
arpl
scas
arpl
fmull
mov
xor
adc
add
cmp
xchg
push
loop
jne
les
aas
and
xchg
scas
stc
mov
xor
outsl
rorb
std
rcll
and
cltd
or
mov
stos
cmp
repz
js
xchg
jno
cli
dec
aam
inc
mov
out
and
and
gs
lcall
mov
sbb
hlt
pop
mov
fcompl
add
add
dec
cltd
lds
ja
scas
cld
popa
addr16
cmpsl
jp
pushf
jecxz
lret
nop
inc
dec
cwtl
push
and
xchg
mov
fwait
jb
jne
repz
push
aas
aad
fs
sahf
xchg
fisubs
sub
mov
out
ficoml
xor
movsl
jg
fcompl
add
mov
enter
test
jle
mov
push
jae
lcall
sti
and
sub
mov
addl
lahf
fldt
dec
shll
jae
mov
or
xor
std
add
je
xchg
mov
jmp
sub
rolb
inc
movsb
mulb
push
lret
movsb
xchg
mov
scas
inc
data16
dec
jns
sarl
mov
cmpsl
pop
int3
inc
xor
lea
dec
xor
shl
lahf
into
or
lods
out
sub
add
adc
int3
mov
loop
fs
xor
gs
stos
mov
test
pop
add
xchg
dec
in
mov
fucomi
enter
xchg
sub
out
inc
push
adc
xor
add
xchg
imul
cs
cltd
jp
mov
pushf
add
fs
mov
loope
das
jg
mov
sahf
and
xor
out
sub
dec
out
mov
rolb
call
cmp
mov
stos
lea
js
popa
or
xchg
xor
push
pop
sbb
xlat
and
pop
sbb
lahf
push
jge
and
lds
int3
ds
nop
call
mov
jmp
adc
in
sbb
mov
or
and
loope
outsw
das
mov
popa
popa
jge
mov
jecxz
inc
subb
aam
mov
ds
pop
jp
or
adcb
lods
or
fwait
outsb
lods
push
lea
jmp
mov
lods
inc
pop
cs
or
cmp
jmp
nop
mov
dec
aad
sbb
mov
mov
and
aam
xor
nop
or
aad
aad
push
push
ljmp
mov
push
sub
xor
add
test
fistpl
xor
jne
xchg
jnp
ret
jmp
ljmp
cmp
adc
cmp
add
neg
adc
pushf
xchg
mov
pop
call
sub
fldl2t
pop
fdivrl
sti
dec
lods
push
xchg
mov
add
mov
data16
inc
jmp
push
movsb
fstl
rolb
adc
out
rol
lds
sub
or
xchg
fwait
xor
and
jecxz
xchg
movsb
push
cwtl
dec
pop
js
iret
mov
mov
jne
imul
insl
sub
xchg
js
clc
das
cmpsl
sbb
inc
cld
dec
adc
fs
fsubs
mov
pop
cmp
lret
cwtl
repz
addl
rcr
decl
cmpsl
mov
pushf
cld
popa
cltd
outsb
or
add
pop
add
xchg
jle
imul
ja
mov
iret
je
cli
cmp
int
scas
mov
js
adc
ret
and
mov
pop
xlat
cmpsl
push
push
inc
cs
clc
iret
jnp
push
cmp
fsubrl
repnz
sub
ror
stos
cmpl
push
loope
fdivs
inc
sbb
xor
fstpt
pushf
add
cmp
ret
pop
or
jg
pop
mov
push
adc
es
mov
or
xor
pop
add
cmp
cmp
lret
jg
pushf
adc
xchg
cmp
or
add
in
inc
pop
outsb
mov
lock
sub
inc
sbb
ja
xchg
ja
jns
sub
fistps
js
shll
jp
push
and
scas
jo
and
das
xchg
rcrl
sti
shl
filds
sub
lret
imull
popa
dec
mov
push
sub
in
test
ja
fisubrs
xor
pushl
hlt
pop
imul
xchg
std
push
enter
nop
xor
data16
mov
mov
aad
je
fnsave
xchg
jnp
out
movsb
push
add
push
dec
cmp
push
dec
cli
into
pop
dec
lods
cmp
clc
mov
xchg
jae
xchg
jno
dec
cmp
or
add
xor
jne
in
xchg
push
dec
popa
xchg
inc
popa
adc
ret
xchg
aas
.byte
lock
and
lock
inc
add
orl
in
fdivr
or
enter
sarb
enter
enter
inc
push
cmp
add
nop
out
outsb
dec
rclb
mov
push
call
and
out
in
ljmp
je
movzwl
mov
sbb
sub
mov
sbb
test
mov
arpl
rolb
jne
push
add
sti
ljmp
enter
add
mov
mov
pushl
rorb
inc
roll
mov
mov
inc
cmp
jne
mov
mov
mov
std
std
jnp
sub
ret
push
mov
mov
dec
call
incb
push
or
mov
mov
pop
neg
divl
mov
sbb
or
in
fcmovnu
adc
ret
inc
push
push
push
mov
mov
mov
call
and
sub
ja
pop
loope
push
or
push
or
ret
adc
jo
inc
inc
fldcw
outsl
adc
add
adc
jne
sbb
jnp
das
push
mov
cmp
jne
mov
adc
test
add
pop
pop
pop
xchg
fcmovnu
fnsave
mov
dec
cmp
jb
into
add
call
add
int
bound
jne
mov
insb
loope
sub
jnp
cmp
jmp
fbstp
jp
add
cs
sub
jmp
mov
lcall
jbe
mov
jnp
stc
mov
sub
mov
pop
in
test
aam
ret
test
or
jmp
fldt
sbb
sti
jne
or
mov
mov
in
lock
pop
mov
decl
fdivr
fiaddl
add
add
and
push
cwtl
loope
dec
mov
cmp
sarl
test
jecxz
add
sar
std
fdivp
popa
arpl
fnstenv
pusha
push
mov
testb
jne
js
insl
cmp
dec
cmpl
jbe
and
fldt
mov
rcll
jecxz
loop
incl
gs
push
and
icebp
out
add
mov
mov
dec
jmp
bnd
out
ja
mov
add
insl
in
fnstsw
sbb
cmp
mov
ds
add
or
push
jb
loope
ja
or
add
adc
adc
fcmovnu
cmp
das
add
adc
cs
je
push
mov
push
into
adc
stos
adc
pop
insb
shlb
mov
rorb
lock
add
ret
pop
loop
or
mov
add
mov
jecxz
mov
jle
add
nop
jbe
mov
cmp
mov
mov
jp
jbe
mov
sub
push
push
pop
shlb
ss
mov
mov
mov
out
add
lea
pop
mov
enter
inc
test
jne
fisttpl
and
add
mov
sbbb
pop
mov
inc
inc
add
movsl
lea
cmp
fidivrs
in
add
cmp
lea
xor
sti
jg
and
pop
cmp
pop
push
add
jbe
push
mov
cmpsb
inc
sbb
xor
jmp
adc
mov
and
mov
mov
adc
push
adc
push
pop
fwait
rorb
cli
ds
add
mov
push
jne
add
mov
jle
test
pop
stos
cmp
xchg
lock
je
jle
xor
sbb
mov
bound
adc
lods
xor
push
fisttps
inc
cmp
inc
push
xor
test
mov
jne
dec
jmp
imul
mov
jo
test
cmp
mov
or
cmpl
sub
inc
enter
dec
or
dec
ret
or
dec
jg
test
les
sti
inc
xor
or
fidivs
mov
sub
jmp
add
lret
mov
imul
test
je
mov
mov
into
cmp
test
or
adc
pop
dec
div
cmp
jmp
pop
push
insl
jmp
sub
push
push
pushl
mov
push
mov
add
cmpb
adc
pusha
cmp
adc
push
or
cmpl
inc
das
mov
xor
mov
xor
cmp
hlt
ja
ja
ret
mov
lods
gs
in
in
sub
pop
pop
pop
mov
push
mov
fistps
xor
in
sub
bnd
pop
or
test
and
adc
out
pop
add
add
mov
add
add
aam
and
push
arpl
dec
xchg
pop
mov
je
xor
int3
test
jne
fldcw
jb
sbb
loopne
daa
ds
push
cmp
icebp
jmp
mov
or
std
push
pop
xor
pop
cmp
roll
stc
add
pop
mov
int3
mov
jmp
push
fldlg2
jbe
jnp
adc
add
lea
adc
in
mov
jb
cmp
repz
cli
pop
jne
test
lea
std
ja
mov
sub
lea
andl
add
sbb
jbe
or
xchg
lret
add
mov
rorb
adc
add
in
pop
mov
ljmp
or
adc
sahf
out
cmp
or
push
or
xchg
mov
sub
orl
dec
or
roll
and
pop
inc
sbb
xor
jl
or
mov
hlt
imul
arpl
push
enter
ret
mov
int3
loope
add
xchg
in
inc
cmpsb
jb
cmp
sbb
inc
jnp,pt
add
push
arpl
xor
or
pop
add
add
adc
add
or
shlb
cmp
or
add
and
aad
sbb
out
pop
negl
sub
jg
clc
sub
or
jge
fldl
add
or
xor
outsl
jmp
adc
decb
insb
adc
ja
mov
sub
bound
jb
or
xlat
xorl
or
xchg
clc
xchg
add
push
orb
push
mov
add
sub
je
mov
aaa
mov
fcompl
nop
hlt
rcll
sbb
mov
sahf
sbb
cmp
inc
fldl
insl
or
test
cmp
sbb
jl,pn
push
or
lcall
les
jge
addb
fnsave
pop
or
arpl
adc
inc
mov
cmp
dec
ret
xor
push
push
and
loope
orb
movsl
mov
and
or
xlat
test
inc
xchg
mov
or
or
pop
cmp
xor
inc
inc
mov
add
dec
call
jae
sbb
jge
pop
and
add
lods
subl
subl
pop
jle
cld
mov
lea
add
dec
dec
dec
mov
xchg
push
mov
xor
jbe
outsl
xchg
aad
int3
lea
mov
les
adc
mov
pop
cltd
mov
mov
add
mov
jno
jne
mov
sarb
ret
push
cmpl
mov
fidivrl
or
pop
jg
pop
xor
adc
lods
pop
jmp
adc
or
jne
or
loopne
mov
mov
and
jo
jge
mov
jp
inc
cmp
inc
add
lock
out
add
adc
dec
hlt
sub
scas
mov
adc
add
xchg
mov
sbb
ljmp
pop
lods
sbb
dec
dec
xchg
pop
jmp
int
or
cs
dec
pop
je
insl
mov
sti
clc
aad
or
shlb
jecxz
inc
loopne
xor
add
mov
inc
add
divl
inc
gs
add
sub
inc
aas
adc
xchg
in
mov
je
aam
ret
rolb
jne
sub
mov
es
dec
inc
and
mov
mov
pop
dec
or
mov
orb
or
stc
jmp
pop
sbb
iret
nop
bound
sbb
sbb
pop
pop
in
and
add
cltd
sbb
rcll
mov
mov
mov
fmuls
pop
scas
loope
rorb
xchg
ja
inc
push
pop
jne
testl
pop
cmp
inc
adc
or
mov
test
pop
cmp
cmovb
cmp
or
sbb
ret
mov
js
mov
lock
or
orl
or
add
fiaddl
xchg
lcall
lret
sub
jbe
dec
cmp
inc
jne
sub
les
add
mov
movsb
fisttpl
test
je
sbb
andl
std
sti
or
orl
jmp
inc
cmpl
outsb
ret
jl
or
or
adc
dec
xchg
dec
push
cmp
nop
sub
add
inc
js
movsl
lea
scas
and
pop
iret
mov
xor
out
mov
arpl
mov
jno
clc
mov
or
andl
out
dec
sbb
cmp
jno
mov
bound
add
flds
push
sub
testl
or
insl
fldl
dec
fimuls
js
mov
test
adc
popa
lock
mov
pop
xor
xor
test
andl
jbe
inc
cmp
jl
in
addr16
lcall
icebp
add
xor
jg
mov
daa
add
jne
clc
or
xchg
fbstp
data16
push
add
loope
or
lods
mov
fbstp
out
dec
sub
test
ret
rorb
mov
shl
in
add
jb
in
loop
push
jmp
andb
cmp
or
fiaddl
ret
or
adc
sbb
adc
test
or
movlps
dec
popf
add
adc
dec
and
pop
mov
adcl
add
ss
or
mov
pusha
dec
xchg
arpl
dec
insl
push
jge
sbb
push
and
inc
lret
xchg
and
cmp
cmpb
sub
sti
or
call
mov
fists
pop
cmp
fidivl
fistpl
mov
sub
inc
xchg
inc
je
mov
testb
stc
leave
je
xchg
sbb
enter
idivl
add
sub
mov
sbb
pop
test
out
xor
xchg
xor
insb
sarb
out
sbb
add
scas
pop
add
and
xchg
stc
or
sub
or
cs
and
neg
aaa
cld
jmp
cmp
ja
mov
mov
shl
mov
and
adc
xchg
in
adc
rclb
cmp
sbb
xlat
movsl
cmp
ja
je
mov
js
rep
mov
and
rep
sub
jl
push
mov
cmp
sbb
std
sbb
add
fistpll
loopne
dec
mov
fnstcw
shlb
fwait
andw
les
outsl
mov
data16
cmp
jb
add
xchg
pop
sti
sub
mov
or
not
push
sbb
ds
add
sbb
fcoml
and
cmp
imul
add
xlat
ja
repnz
mov
loopne
add
mov
or
stos
or
imul
or
inc
mov
mul
js
aaa
insb
mov
clc
push
loopne
xor
es
filds
or
push
inc
dec
and
aas
sti
sub
mov
add
je
and
je
pop
je
lock
mov
xor
daa
adc
test
or
add
ljmp
adc
ja
cmp
ja
lea
add
add
sub
out
int
imul
push
neg
jle
js
pop
sub
mov
inc
inc
and
pushf
mov
fbstp
popa
jb
dec
and
adc
insl
mov
adc
push
leave
ljmp
aad
add
testb
jp
and
negb
dec
pop
add
pop
jne
push
or
mov
fimull
vcvtsd2si
mov
nop
fcomi
movzwl
shlb
mov
xor
push
fcomp
inc
push
push
inc
fs
movsl
inc
push
scas
dec
pop
iret
mov
xor
and
inc
das
hlt
push
cwtl
pop
mov
add
xor
hlt
sbb
pop
mov
fdivrl
rcrb
mov
xchg
jle
outsl
sbb
and
or
mov
ljmp
lahf
dec
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
idiv
inc
push
push
dec
popa
jae
push
popa
insb
jne
push
add
jecxz
sub
xchg
aad
mov
or
push
cld
ret
or
adc
jbe
pushf
sahf
in
push
inc
mov
push
negl
push
pop
push
push
mov
push
sbb
rolb
push
or
pop
add
jge
push
pop
push
push
int
adc
cmp
cmpb
je
add
jne
popa
out
xchg
rolb
test
leave
or
test
loope
sbb
sub
pop
xchg
daa
adc
mov
dec
jb
dec
cmp
adc
aaa
jno
cld
push
testl
push
cmpl
jo
cli
sub
je
cld
ja
sub
xchg
test
daa
mov
cli
or
jo
sti
ja
les
cmp
cli
out
push
je
sub
outsl
jne
ret
and
and
inc
jmp
push
pusha
add
stos
or
inc
orl
or
mov
push
cmp
xor
out
je
orl
into
lock
stos
sub
sbb
outsb
fistl
mov
ficoml
sub
fcoml
pop
mov
pushl
and
sub
add
sub
sbb
jo
jecxz
and
adc
nop
pop
inc
or
and
movsl
ficoml
das
je
dec
dec
pop
push
sti
pop
mov
or
shrl
pusha
psadbw
xor
xor
gs
pop
insl
inc
or
fistpl
std
ja
or
add
lods
adc
sbb
in
or
ret
adc
cmp
mov
inc
xchg
pop
adc
negl
dec
jmp
ret
xor
test
shll
frstor
dec
pop
add
xchg
jns
sub
pop
cmp
push
sub
aaa
cvtps2pi
dec
jmp
add
sti
xchg
pop
add
je
jmp
cmp
sub
insb
fldt
and
add
sub
std
sub
es
enter
leave
pusha
mov
loopne
dec
jmp
mov
jmp
bndldx
into
test
push
add
mov
jmp
mov
out
lret
aaa
js
dec
push
std
mov
add
lahf
cmp
jecxz
mov
add
sbb
sbb
mov
pop
je
sub
mov
movsb
cmp
js
arpl
push
adc
sbb
jae
pop
mov
scas
mov
aam
or
mov
call
mov
xchg
mov
mov
pop
mov
sub
popa
xchg
pop
inc
shll
lods
je
xlat
cmc
into
push
inc
add
mov
loop
mov
cmp
jne
add
jns
cmp
pop
mov
lcall
add
jnp
sbb
and
or
dec
test
pop
jo
adc
sub
ja
sub
mov
inc
fiadds
cltd
shlb
jg
xor
add
icebp
cmp
insb
add
xor
mov
sahf
pop
mov
xor
mov
scas
pop
cmp
jle
add
inc
mov
mov
es
adc
pop
lods
std
push
adc
or
shrl
adc
mov
xchg
ficoms
stos
xor
sub
fdivr
pop
cld
dec
movb
pushf
mov
push
mov
add
ret
mov
lock
idiv
add
mov
adc
mov
leave
mov
fbld
adc
jg
fisttpl
and
ret
jle
jnp
xchg
push
std
sbb
inc
bound
outsl
adc
imul
add
mov
mov
fidivrl
imul
inc
mov
dec
orb
fcompl
xchg
or
or
loope
push
and
push
mov
loope
xchg
sbb
orl
add
xchg
imul
push
or
fistps
add
add
or
jge
scas
or
mov
mov
jnp
cmpb
push
cmpl
fsts
mov
jle
mov
call
adc
cmpl
sbb
movsb
push
sbb
pop
mov
in
jo
and
pop
ret
add
or
inc
adc
in
sbb
sbb
and
test
cmp
jmp
adc
mov
xor
iret
shl
push
je
lock
pop
js
addb
inc
mov
sbb
mov
add
and
pop
aas
push
icebp
out
test
test
popl
dec
push
cmpb
sbb
rcr
mov
clc
dec
jl
lock
mov
or
adc
out
adc
ret
mov
adc
sbb
add
cmc
add
filds
jne
xor
daa
and
inc
jg
sub
and
pop
jae
or
test
stos
adc
add
mov
xchg
dec
inc
popf
sbb
or
xlat
pushl
pop
es
add
loopne
add
mov
add
or
or
push
cld
es
decl
int3
mov
mov
lods
mov
movsb
int
lahf
xor
aam
mov
pushf
mov
cwtl
mov
lret
or
outsb
leave
jns
push
cmp
test
dec
add
mov
mov
add
addr16
mov
sub
iret
pop
sub
dec
pop
test
mov
scas
push
mov
push
pop
pop
sbb
cmpsl
aaa
xlat
add
pop
shll
inc
imul
dec
xchg
adc
or
or
lea
cld
dec
aaa
adc
pop
mov
es
jne
push
ljmp
ja
and
pop
sar
aaa
add
dec
jmp
ret
lahf
pushf
lock
arpl
arpl
into
enter
sbb
or
add
sbb
sti
in
pop
aad
lea
jmp
arpl
cmp
mov
mov
aaa
mov
push
cld
sub
ja
add
push
shr
mov
icebp
incl
pop
cmp
jne
dec
je
mov
rorb
insl
fldcw
lahf
loop
sub
add
pop
adc
fcomi
sub
push
inc
sub
cmp
jne
je
ljmp
loope
cmp
fstpt
and
sbb
push
adc
scas
adc
shr
or
js
rcll
inc
pop
pop
xor
andb
add
cmp
push
in
xor
mov
push
insl
pop
or
xchg
ss
dec
inc
int3
pop
leave
mov
insb
cmp
pop
jecxz
fisttpll
jo
jle
aas
and
sub
sbb
arpl
aaa
and
pop
push
mov
cld
icebp
and
sub
xor
mov
je
icebp
lock
jl
icebp
dec
mov
adc
push
pop
stos
test
sahf
push
subl
pop
repnz
mov
xchg
inc
andl
lods
mov
push
sbb
jne
sub
bound
sti
sub
int3
xor
mov
sbb
push
xchg
movsb
clc
push
jp
fcompl
pop
cmp
inc
test
mov
push
fists
jo
push
cld
push
add
lea
and
sbb
jg
inc
jle
cmp
push
and
lock
xor
stos
push
lea
push
push
popl
mov
mov
mov
sbb
mov
xor
cld
mov
lahf
pop
dec
fisttpll
push
shll
jno
ret
pop
subl
xor
push
ja
incl
mov
pusha
or
mov
mov
mov
push
test
mov
clc
pop
subl
sahf
sbb
shll
jae
fdivs
jb
addb
pop
pop
insb
and
xor
and
cmp
fs
enter
adc
js
loop
or
cmpsb
add
or
mov
sub
fists
or
test
jmp
sbb
mov
adc
movups
pop
call
dec
in
and
cmp
hlt
rcll
xchg
adc
inc
out
and
or
adc
loopne
jae
push
push
or
es
loopne
js
insb
mov
jmp
push
mov
jl
and
dec
jle
or
cs
test
jne
xchg
adc
mov
cmp
sub
call
fcmovnb
mov
push
cmp
mov
loope
mov
add
nop
jge
mulb
pop
mov
es
or
in
ds
push
pop
fwait
das
cmp
mov
xchg
or
lahf
sub
enter
aaa
pop
hlt
test
sub
inc
push
sbb
dec
dec
inc
push
sbb
cmp
sbb
xor
pusha
imul
pop
xchg
je
in
mov
or
scas
popf
aaa
and
xchg
pusha
movsb
aaa
nop
add
mov
out
aaa
fs
xchg
sub
fsubl
test
pop
push
insl
scas
js
xor
sete
lds
aam
sub
in
mov
mov
scas
loopne
roll
and
mov
mov
and
xor
bound
rorb
dec
mov
jg
adc
test
jne
pushf
xor
mov
sbb
stos
fisttpll
mov
mov
add
imul
shll
or
or
fildll
sbb
leave
inc
das
jl
fldt
testb
flds
lret
add
mov
xor
push
jo
enter
mov
or
mov
sbb
jne
mov
mov
nop
je
cld
push
imul
mov
dec
daa
orl
les
xlat
inc
or
inc
mov
dec
std
mov
mov
outsb
or
incb
data16
mov
sahf
add
xor
jae
loopne
mov
stc
mov
sbb
xorl
jnp
stos
mov
mov
add
mov
add
xor
repnz
mov
add
hlt
decl
jne
sbb
out
mov
addb
mov
nop
and
cmp
sbb
add
cmp
aaa
add
pop
stc
sub
out
or
stc
cld
inc
cld
xlat
cmp
insl
pusha
enter
mov
adc
daa
adc
mov
jle
mov
and
imul
sbb
rcrb
or
add
push
pop
or
add
or
pop
pop
add
jbe,pn
pop
adc
inc
xor
mov
lea
or
sbb
testl
fs
add
push
or
outsb
lods
push
mov
je
pop
cmp
inc
dec
jns
add
test
add
add
pop
or
push
test
lea
cmc
cmpsb
cwtl
mov
je
jmp
mov
xchg
mov
outsl
dec
ds
xchg
cmp
xchg
or
adc
int
mull
sbb
add
sub
mov
mov
in
sbb
hlt
je
mov
enter
or
mov
jns,pn
jl
call
dec
push
sbb
in
inc
xchg
jbe
and
insb
xor
mov
dec
fmuls
adc
nop
clc
jnp
mov
or
mov
jg
fisttpll
sbb
fxch
std
lret
enter
ljmp
insb
fidivrs
divb
xor
add
adc
jecxz
f2xm1
int3
daa
shr
lret
xchg
sub
rcrb
adc
shr
sti
push
fld
mov
mov
fstpl
adc
fdivr
lret
dec
lret
int
fisubl
ret
outsb
lods
std
das
sti
je
insb
insb
add
ror
shl
inc
pushl
fabs
rcll
adc
fld
rol
sti
into
or
xchg
std
jmp
rclb
testl
pop
or
lahf
insb
mov
lock
int
int3
addr16
xchg
das
stos
imul
push
mov
jmp
imul
cld
jmp
add
js
add
sub
pop
hlt
fildll
fdivs
ljmp
js
jb
inc
mov
movzwl
shr
and
lods
ficompl
leave
cmp
fbstp
add
mov
adc
or
jne
inc
outsl
add
ja
jno
les
xor
mov
fistps
add
add
xor
jg
clc
inc
inc
push
push
adc
sti
fcoms
rorl
jns
push
dec
data16
cmp
movsl
cmp
inc
cmp
insl
lock
js
add
shl
or
mov
int
dec
or
push
adc
adc
cmp
dec
jne
dec
pop
aas
xchg
push
inc
mov
inc
mov
stos
pop
and
mov
adc
arpl
adcl
xchg
mov
mov
add
es
jle
popa
sbb
sbb
pop
call
mov
nop
cmp
and
add
mov
dec
pop
aas
testb
add
cmpl
adc
inc
ss
inc
mov
jne
sbb
sbb
lret
xchg
sub
out
call
sub
int3
jmp
divb
adc
jle
nop
scas
jnp
movl
jo
mov
fs
call
mov
orb
shrb
pusha
out
imulb
out
inc
xor
sbb
mov
ljmp
insl
xor
negb
inc
push
push
sbb
jg
jmp
sbb
push
sbb
jl
xor
mov
int
fucomp
mov
fistpll
shlb
sub
arpl
aam
mov
mov
lcall
iret
push
push
in
sub
rcrl
in
imul
in
push
test
mov
test
or
stos
insb
pop
pop
and
add
popf
out
subb
and
jmp
adc
out
jae
ret
ljmp
add
subl
xchg
pop
push
in
loop
inc
iret
xchg
mov
dec
inc
push
dec
sbbl
and
enter
movsb
addr16
dec
test
dec
lods
cltd
inc
push
nop
and
mov
sahf
add
xor
inc
nop
or
mov
jns
les
inc
sahf
sub
test
cmpsb
nop
add
xchg
aam
nop
out
jns
fadd
in
inc
push
loopne
sarb
inc
sahf
add
fsubr
push
nop
addr16
lock
enter
add
clc
adc
cmp
cld
sbb
xchg
sahf
add
or
or
in
jns
adc
inc
sahf
sub
insb
sbb
sahf
add
jl
mov
mov
cmp
xor
jns
nop
enter
push
nop
out
lock
add
movsl
sbb
in
inc
push
inc
dec
and
in
sbb
push
nop
or
inc
sbb
adc
pop
in
sbb
add
push
pusha
pusha
iret
add
sbb
push
sbb
insb
test
sbb
iret
jo
je
sbb
iret
add
jl
iret
add
mov
mov
test
mov
add
sbb
mov
repnz
iret
nop
call
movb
push
push
sbb
cmp
mov
inc
movsb
cmp
cmp
test
lods
push
pop
pop
mov
mov
sbb
mov
pop
mov
cmp
sbb
pop
sbb
add
int3
pop
pop
mov
shlb
sbb
adc
cmpb
sahf
add
fcompl
loopne
or
inc
in
pusha
xor
nop
in
cmp
addr16
sbb
or
add
nop
adc
sbb
add
jmp
xchg
sbb
mov
cmp
fcomps
add
cmp
enter
or
pop
enter
push
cmp
sbb
pushf
and
and
cmp
enter
sub
add
jae
xor
or
inc
sahf
xor
cmp
nop
addr16
inc
add
ljmp
xor
gs
je
inc
imul
jb
insl
inc
dec
cltd
or
jae
jb
sbb
jbe
test
dec
outsb
imul
ret
or
inc
add
popa
xchg
pop
or
das
adc
js
ud2
fsts
orb
outsb
gs
in
push
add
inc
and
daa
mov
push
fwait
inc
gs
insb
lods
mov
and
or
sbb
xchg
int
nopl
je
seto
inc
push
add
inc
cmp
push
jne
je
outsb
add
push
popa
dec
jbe
mov
outsl
adc
dec
jae
push
std
pop
sti
sbb
fs
dec
gs
popa
addr16
ja
sub
adc
push
in
sti
mov
jne
aam
push
popa
bound
and
outsb
fstp
aas
inc
je
insb
dec
inc
jae
gs
xor
imul
je
sub
add
adcb
push
xchg
inc
or
push
xor
fmul
adcb
inc
bound
add
push
push
pusha
fldt
push
outsl
pop
inc
imul
inc
lcall
dec
fildl
insb
insb
push
or
iretw
pop
leave
sub
dec
adc
push
inc
inc
push
outsl
insb
jns
sub
data16
imul
fdivs
push
cmovge
jb
pop
mov
dec
imul
inc
jns
or
adc
imul
inc
pop
notb
ja
enter
dec
inc
imul
jge
insb
shlb
xor
push
dec
outsl
jbe
pusha
js
mov
jne
inc
or
xchg
mov
or
insb
pusha
mov
jmp
xorps
lods
or
adc
cmpsl
sarl
popa
xor
add
fadds
sub
inc
cmp
jp
int
push
outsl
pop
ret
jae
sbb
aas
push
sbb
ss
jo
xchg
ret
adc
inc
and
jb
cmp
ja
flds
dec
push
mov
data16
ficoml
sbb
es
arpl
bound
pop
mov
mov
ret
inc
test
jo
insl
push
mov
jle
jb
push
dec
xchg
inc
popa
arpl
add
sahf
add
pop
push
and
dec
inc
mov
dec
ljmp
cwtl
push
scas
lods
mov
inc
lret
arpl
pop
pop
xchg
adc
outsw
inc
jecxz
daa
sub
mov
adc
cmp
mov
jb
push
and
push
lods
adc
adc
lret
adc
adc
jo
rcll
adcb
mov
cmpsl
push
jnp
push
sub
fdivl
push
shll
push
mov
dec
or
gs
push
in
mov
sbb
mov
dec
push
aas
push
arpl
mov
dec
push
push
fs
nop
jl
test
adc
add
out
inc
push
cs
fsubr
cmp
sbb
notb
push
inc
call
es
adc
or
or
out
mov
xor
pop
add
cmp
std
mov
push
push
sbb
or
add
pop
pop
ja
jmp
push
push
add
pop
mov
popa
mov
inc
dec
jne
aas
inc
std
cwtl
add
je
aam
add
push
fadds
je
mov
loopne
push
insl
stos
or
xchg
in
je
push
sub
pusha
inc
enter
mov
sbb
lea
mov
adc
or
dec
je
insl
dec
popa
jl
jl
insl
sub
jbe
imul
and
pusha
jno
push
xor
inc
jnp
pop
ljmp
jo
dec
pusha
dec
or
push
loop
fisttps
add
inc
sbb
shlb
adc
mov
adc
push
loope
xor
sbb
or
outsb
orb
notl
insb
scas
jnp
inc
and
movsl
inc
in
out
loope
jmp
mov
xchg
jne
mov
jmp
xor
pop
or
je
loope
xor
push
push
xor
call
in
xchg
bound
outsl
popaw
or
gs
mov
add
jae
pop
dec
jae
inc
cmpl
mov
ds
fsubl
popa
mov
inc
jg
frstor
das
pop
pop
aaa
ss
aaa
sub
xor
aaa
popf
mov
divb
xor
sub
xor
xchg
add
cmp
cmp
test
sbb
shll
mov
pusha
gs
bound
jns
popf
enter
cs
loop
je
rorb
pop
or
add
mov
sbb
add
cli
lods
or
push
decl
hlt
pop
fildll
ret
add
ret
insb
pop
fisttps
sbb
outsb
mov
pop
test
mov
sub
clc
ljmp
sub
jl
repnz
and
xor
adc
imul
sub
inc
popa
push
push
pop
mov
cld
es
lcall
sar
mov
lock
nop
inc
push
sbb
in
inc
push
sbb
aam
sbb
int3
enter
nop
inc
sarb
mov
nop
inc
push
sbb
sbb
xchg
push
sbb
mov
inc
addb
mov
cs
fs
mov
pop
push
in
dec
cs
dec
dec
xchg
dec
cs
cs
cs
and
mov
sbb
xchg
dec
adc
leave
dec
cs
and
lock
push
lods
loop
nop
fwait
push
mov
es
sbb
sub
jp
adc
xor
inc
adc
push
das
push
xor
mov
xor
xor
cmp
mov
fucomi
xor
aaa
or
xor
xor
pop
cmp
jns
adc
xor
xor
mov
leave
add
pop
cmp
fwait
insb
pop
nop
xor
sbb
je
mov
loopne
pusha
ja
ja
dec
gs
orl
inc
add
shl
lfs
in
mov
hlt
or
push
push
dec
mov
push
popw
add
int3
cmpsb
ret
cltd
in
add
popa
fisubs
or
mov
pushf
push
dec
xchg
add
xlat
imul
sbb
clc
mov
mov
mov
xchg
sti
sbb
mov
pop
xor
lret
shl
or
out
pusha
sbb
rcrb
jae
xor
jae
xor
sbb
mov
test
testl
and
inc
or
inc
aas
pop
ja
add
mov
data16
add
repz
lcall
push
mov
push
popa
mov
call
push
xchg
insb
sub
push
loope
pusha
jp
pusha
cmpsl
inc
cmpsl
add
sbb
pusha
push
push
mov
into
lods
movsb
xchg
std
call
mov
xchg
das
pusha
adc
pop
es
sub
jg
adc
dec
jbe
popa
data16
lds
sbb
mov
je
xor
xor
adc
cmp
pop
dec
push
mov
mov
add
ljmp
mov
cmpb
cs
fstpt
push
mov
push
push
inc
xor
jo
and
pop
aam
or
or
add
add
pop
sub
shlb
gs
push
fstl
out
in
sbb
add
adc
dec
subl
mov
subl
jp
adc
xor
inc
adc
dec
add
xor
adc
fwait
dec
popa
or
adc
icebp
lcall
jg
int
flds
nop
mov
pusha
clc
or
insb
lcall
loopne
add
add
movsl
mov
inc
pop
and
jle
xor
add
lahf
in
or
mov
sbb
pop
fdivrl
xchg
imul
push
dec
mov
push
ret
aam
clc
mov
rol
add
mov
xor
es
add
inc
or
sbb
stos
xchg
sti
dec
jp
andb
jle
sub
or
xor
popf
imul
adc
push
arpl
push
mov
inc
in
push
or
jo
mov
insb
add
mov
lcall
out
mov
in
or
inc
or
leave
push
mov
dec
push
pop
shr
xchg
add
jg
dec
shlb
fwait
dec
aam
dec
enter
or
scas
clc
or
sub
ret
insb
dec
mov
inc
pusha
push
push
xor
push
rclb
mov
inc
notl
adc
xor
or
jmp
out
xchg
aad
leave
cmp
pop
pop
jg
push
xchg
aad
test
fs
add
sbb
cwtl
sub
enter
add
sbb
add
pop
xor
adc
add
jg
or
arpl
lret
int3
enter
enter
dec
into
fcmovnu
fcmovu
lret
loopne
jecxz
in
das
inc
jb
outsl
jb
inc
fbstp
clc
push
jne
je
and
and
popa
jg
in
and
pop
xor
xor
xor
ss
cmp
inc
inc
inc
inc
inc
add
jbe
inc
push
xchg
add
mov
push
fs
push
leave
push
xor
push
mov
inc
xchg
mov
mov
or
add
test
stos
stos
fs
aad
add
add
mov
pop
inc
xchg
jl
mov
or
gs
inc
jb
fsubrs
loopne
je
xchg
sub
xor
jbe
inc
outsb
jae
lods
add
adc
xor
jbe
jp
push
imul
cltd
mov
or
insb
insb
outsl
arpl
arpl
shll
or
inc
gs
addb
pop
sub
sbb
push
push
adc
cwtl
lds
or
shrl
bound
js
jo
adc
mov
pop
inc
outsl
insl
insl
popa
outsb
xor
loopne
test
push
pop
adc
shrb
xchg
or
mov
loopne
push
outsb
push
out
and
jo
pop
std
sbb
xchg
mov
ja
or
jae
and
test
rorl
sub
insb
jae
ja
or
pop
xchg
inc
stc
cmp
mov
aas
inc
inc
xor
push
sbb
push
das
sub
push
outsl
imul
pop
and
push
sti
and
fs
pop
int
or
or
mov
add
enter
or
pushf
add
push
mov
mov
push
ss
jo
xor
sbb
dec
gs
cmp
ss
push
pop
nop
sub
xchg
pop
clc
sbb
jbe
jno
bound
fs
jns
jne
testb
inc
outsl
es
rcr
and
test
in
test
adc
jae
mov
ret
jo
arpl
adcb
add
pop
jg
mov
add
add
pop
inc
sub
loopne
xlat
cmp
add
sbb
push
or
adc
jae
pop
jo
inc
or
repz
fsubs
or
add
fdivs
add
loop
push
fwait
test
aam
and
and
test
dec
pop
jae
xor
sarl
inc
dec
inc
inc
pop
lods
push
nop
clc
jbe
mov
les
and
pusha
inc
inc
push
ret
inc
sub
fstp
fstp
rolb
add
add
sbb
int
imul
or
inc
or
jae
adc
xor
add
mov
add
dec
push
daa
sbb
insb
mov
dec
rcrb
in
jae
lock
arpl
mov
add
push
and
sti
lods
sbb
or
rcl
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
push
incl
mov
