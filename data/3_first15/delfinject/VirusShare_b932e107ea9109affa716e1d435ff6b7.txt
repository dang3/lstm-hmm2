add
add
or
push
je
imul
add
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
push
call
testb
je
movzwl
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
cmpl
jne
push
push
call
mov
cmpl
jne
xor
mov
jmp
mov
mov
mov
mov
mov
xor
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
ret
mov
mov
ret
mov
push
push
add
mov
mov
call
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
call
mov
mov
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
mov
add
cmp
jb
cmp
jne
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
mov
mov
sub
jmp
mov
add
mov
mov
mov
mov
add
sub
mov
sub
mov
mov
lea
mov
call
test
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
add
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
movl
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmpl
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
movl
xor
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
cmp
ja
cmp
jae
mov
mov
mov
mov
add
cmp
jbe
mov
push
push
mov
mov
push
call
test
jne
movl
mov
call
mov
mov
mov
cmp
jne
xor
mov
cmpl
je
mov
mov
mov
sub
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
lea
lea
lea
mov
mov
and
mov
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
push
mov
sub
push
mov
push
call
test
jne
xor
mov
jmp
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
lea
lea
lea
mov
mov
add
and
mov
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
mov
sub
push
mov
push
call
test
jne
movl
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
call
cmpl
je
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
mov
cmp
jne
mov
mov
call
cmpl
je
lea
mov
mov
call
cmpl
jne
lea
mov
mov
call
xor
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
lea
mov
add
and
mov
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jle
mov
mov
sub
mov
mov
mov
add
lea
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
mov
cmp
jne
mov
cmp
jg
mov
mov
mov
call
mov
cmpl
je
mov
mov
mov
add
mov
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
add
mov
lea
and
mov
add
and
mov
mov
cmp
jbe
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmpl
je
lea
mov
call
jmp
xor
mov
add
pop
ret
mov
push
mov
push
xor
push
push
pushl
mov
push
call
cmpb
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmpl
je
mov
mov
xor
mov
inc
cmp
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
movb
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
ret
nop
push
mov
add
cmpb
je
xor
push
push
pushl
mov
cmpb
je
push
call
movb
mov
push
call
xor
mov
mov
mov
jmp
push
push
mov
mov
push
call
mov
mov
mov
mov
cmp
jne
mov
call
mov
call
mov
call
mov
mov
cmpl
je
mov
mov
mov
mov
push
call
mov
mov
cmpl
jne
xor
pop
pop
pop
mov
push
cmpb
je
push
call
push
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
add
cmp
jne
mov
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
push
push
mov
mov
mov
jmp
mov
mov
cmp
jb
mov
add
cmp
jb
mov
mov
mov
mov
cmp
jne
movl
xor
mov
mov
pop
pop
ret
mov
push
push
mov
sub
lea
mov
cmp
jl
mov
movl
mov
call
pop
pop
ret
cmp
jl
mov
or
mov
mov
mov
pop
pop
ret
incl
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
andl
ret
push
push
push
mov
sub
mov
mov
and
cmp
je
movl
mov
and
sub
mov
xor
test
je
movl
testb
je
mov
sub
mov
sub
mov
mov
cmp
je
movl
mov
call
add
mov
pop
pop
pop
ret
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
mov
add
add
andl
mov
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
xor
mov
call
mov
cmpl
je
mov
mov
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
mov
mov
sub
add
mov
mov
call
jmp
mov
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
mov
mov
add
mov
add
cmp
jbe
lea
sub
call
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
nop
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
xor
mov
test
jns
add
sar
cmp
jg
mov
mov
mov
cmpl
jne
inc
cmp
jne
mov
pop
ret
lea
push
push
push
push
add
mov
lea
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
mov
call
mov
cmpl
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
je
mov
add
mov
mov
andl
mov
mov
mov
mov
cmp
jne
mov
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
mov
add
push
mov
xor
mov
cmpb
jne
call
test
jne
movl
movl
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
sub
mov
mov
mov
test
jne
movl
jmp
decl
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
movl
jmp
mov
sub
mov
mov
cmp
je
movl
jmp
add
mov
mov
mov
call
and
mov
add
mov
mov
cmp
jne
sub
add
cmpl
jle
call
xor
mov
call
jmp
mov
mov
test
je
and
cmp
jge
movl
jmp
mov
orl
jmp
mov
mov
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jge
movl
jmp
mov
mov
add
mov
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
sub
mov
mov
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
sub
add
cmpl
jge
add
sub
mov
jmp
mov
mov
testb
jne
mov
mov
mov
add
mov
call
cmp
jl
mov
add
mov
or
mov
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
cmp
jg
sub
add
cmpl
jge
mov
add
add
xor
mov
mov
sub
add
mov
mov
and
or
mov
mov
mov
jmp
call
mov
add
mov
mov
testb
jne
mov
mov
mov
mov
cmp
jle
add
mov
sub
jmp
mov
call
sub
cmp
jl
mov
add
mov
call
jmp
add
mov
add
mov
mov
andl
jmp
mov
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
mov
jmp
xor
jmp
mov
sub
add
mov
mov
and
or
mov
mov
mov
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
cmpb
jne
call
test
jne
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
cmpl
je
mov
mov
xchg
call
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
push
mov
test
jle
mov
call
mov
cmpl
jne
mov
call
jmp
xor
mov
mov
pop
pop
ret
lea
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
mov
call
mov
pop
ret
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
push
push
push
push
add
mov
mov
mov
lea
jmp
mov
push
call
mov
mov
mov
test
je
cmp
jbe
mov
cmpb
jne
mov
cmpb
jne
addl
jmp
xor
mov
mov
jmp
mov
cmpb
jne
mov
push
call
mov
jmp
mov
push
call
mov
mov
sub
add
mov
mov
mov
mov
test
je
cmp
jne
mov
cmpb
je
mov
push
call
mov
jmp
mov
push
call
mov
mov
sub
add
mov
mov
mov
cmpb
ja
mov
mov
call
mov
mov
mov
mov
mov
xor
jmp
mov
cmpb
jne
mov
push
call
mov
jmp
mov
push
call
mov
mov
cmp
jae
mov
mov
mov
mov
incl
inc
mov
cmp
jb
mov
mov
test
je
cmp
jne
mov
cmpb
je
mov
push
call
mov
jmp
mov
push
call
mov
mov
cmp
jae
mov
mov
mov
mov
incl
inc
mov
cmp
jb
mov
cmpb
ja
mov
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
call
test
jne
push
lea
push
push
call
mov
lea
mov
call
jmp
call
mov
mov
mov
call
mov
test
je
cmpl
je
dec
jmp
add
pop
pop
ret
lea
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
mov
cmp
jbe
mov
mov
inc
inc
and
xchg
call
pop
ret
nop
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
push
push
push
push
sub
mov
mov
cltd
xor
sub
mov
xor
xor
div
add
mov
inc
test
jne
test
jge
movb
inc
mov
inc
mov
cmp
jle
mov
sub
jle
add
mov
rep
mov
mov
inc
dec
jne
add
pop
pop
pop
ret
nop
mov
xor
call
ret
mov
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
push
push
mov
mov
and
repz
pop
pop
ret
lea
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
test
je
mov
mov
call
ret
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
mov
mov
cmpl
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
xor
mov
mov
xor
push
push
pushl
mov
cmp
jle
mov
mov
mov
inc
mov
cmpl
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
movl
movl
mov
xor
mov
mov
mov
mov
call
movb
call
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
xor
mov
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
push
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
mov
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
mov
mov
mov
rep
jmp
pop
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
xor
mov
inc
jmp
ret
nop
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
test
je
test
je
cmp
je
cmp
je
push
push
call
pop
pop
jmp
push
push
push
mov
mov
push
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
add
call
pop
mov
test
je
decl
call
pop
pop
pop
ret
mov
jmp
mov
jmp
ret
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
push
test
je
mov
test
je
dec
jl
cmp
jge
sub
test
jl
cmp
jg
add
mov
call
jmp
xor
jmp
mov
jmp
mov
call
pop
ret
ret
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
test
je
movl
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
movl
push
call
add
dec
jne
pop
pop
ret
lea
xor
push
mov
push
push
mov
lea
mov
mov
mov
add
mov
mov
call
add
dec
jg
mov
pop
pop
pop
ret
lea
cmpl
je
call
ret
mov
call
ret
cmp
je
push
push
push
push
mov
mov
mov
xor
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
mov
add
call
dec
jg
jmp
push
mov
mov
mov
add
mov
mov
call
dec
jg
pop
jmp
push
mov
mov
add
mov
call
dec
jg
pop
jmp
mov
add
call
dec
jg
jmp
mov
mov
add
call
dec
jg
jmp
pop
pop
pop
pop
mov
jmp
pop
pop
pop
pop
ret
mov
mov
jmp
ret
push
push
mov
mull
mov
mov
mull
add
mov
mull
add
pop
pop
ret
ret
mov
test
je
movl
lock
jne
push
mov
xor
mov
mov
test
je
mov
test
je
mov
call
sub
call
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
add
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
mov
cmpl
je
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
cmpl
jne
ret
jmp
jmp
pop
pop
pop
ret
mov
test
je
movl
push
push
mov
call
pop
ret
lea
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmpl
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
movl
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
push
push
push
add
mov
mov
movl
movl
mov
mov
mov
shrd
shr
and
xor
mov
mov
mov
shl
mov
shr
xor
xor
add
add
sub
subl
sbbl
mov
mov
and
xor
mov
mov
mov
shl
mov
shr
xor
xor
add
add
sub
dec
jne
pop
pop
pop
pop
pop
pop
ret
push
push
push
add
mov
mov
mov
mov
call
mov
cmp
jle
mov
xor
mov
xor
mov
xor
mov
xor
mov
mov
call
lea
mov
call
mov
mov
call
mov
test
jle
mov
dec
test
jns
add
sar
inc
mov
shl
mov
call
jmp
mov
xor
call
cmp
jl
xor
mov
xor
mov
mov
sub
inc
cmp
jle
mov
lea
mov
lea
xchg
call
lea
lea
call
mov
call
lea
lea
mov
call
add
cmp
jge
add
pop
pop
pop
ret
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
lea
movzwl
add
mov
ret
shr
mov
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
push
call
mov
push
push
call
mov
push
push
call
mov
push
push
call
mov
push
push
call
mov
push
push
call
mov
push
push
call
mov
push
push
call
push
pop
mov
push
push
call
mov
push
push
call
mov
push
push
call
mov
push
push
call
push
call
mov
lea
xor
mov
call
lea
xor
mov
call
movl
xor
mov
mov
movb
lea
push
lea
push
push
push
push
push
push
push
mov
call
push
mov
call
push
call
xor
push
push
pushl
mov
movl
lea
push
mov
push
call
test
je
lea
push
push
lea
push
mov
add
push
mov
push
call
test
je
mov
mov
add
mov
push
push
mov
mov
push
mov
mov
push
mov
push
call
mov
lea
push
mov
mov
push
mov
push
mov
push
mov
push
call
test
je
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
xor
lea
push
lea
mov
push
mov
add
push
mov
add
push
mov
push
call
test
je
lea
push
mov
call
push
mov
push
mov
add
push
mov
push
call
inc
decl
jne
lea
push
push
lea
push
mov
add
push
mov
push
call
test
je
mov
mov
add
mov
lea
push
mov
push
call
cmp
sbb
inc
mov
xor
pop
pop
pop
mov
push
cmpb
jne
push
mov
push
call
jmp
mov
push
call
mov
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
add
add
push
gs
push
inc
outsl
outsb
je
js
add
add
inc
jb
popa
je
push
jb
arpl
jae
add
push
jb
je
push
jb
arpl
jae
gs
outsl
jb
add
push
gs
imul
outsl
arpl
jae
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
add
push
gs
fs
jb
arpl
jae
gs
outsl
jb
add
add
jae
insl
gs
push
add
add
pop
ja
outsb
insl
popa
jo
imul
arpl
outsb
add
add
outsb
je
insb
insb
cs
insb
add
add
in
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
add
movl
push
call
test
je
mov
mov
mov
mov
mov
mov
cmpl
jne
mov
and
mov
jmp
mov
mov
mov
lea
mov
call
add
ret
mov
push
push
mov
mov
call
cmpl
je
mov
pop
pop
ret
mov
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
push
call
mov
pop
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
mov
push
push
push
push
mov
add
push
mov
call
push
call
xor
jmp
mov
mov
sub
jb
inc
mov
mov
and
bts
incb
dec
jne
add
cmp
jge
mov
or
jne
pop
pop
pop
pop
pop
ret
mov
cmp
ja
bt
setb
ret
lea
push
mov
add
push
push
push
movl
movl
movl
call
test
je
mov
test
je
mov
and
movzwl
mov
movzwl
shr
mov
mov
mov
mov
rep
cmpl
jne
call
test
je
movb
movb
jmp
push
call
pop
mov
mov
mov
call
setne
mov
test
je
movb
jmp
mov
lea
mov
inc
inc
cmp
jne
lea
lea
push
push
push
push
mov
push
call
mov
lea
cmpw
sete
mov
test
jne
add
dec
jne
jmp
push
call
test
setne
mov
push
call
test
setne
mov
test
je
push
call
pop
pop
pop
pop
mov
pop
ret
add
push
mov
xor
push
push
pushl
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
lea
mov
xor
mov
mov
call
ret
mov
push
mov
add
push
mov
test
jne
xor
lea
push
lea
push
lea
push
lea
push
push
call
mov
mov
imull
xor
mov
mov
mov
xor
push
push
mov
mov
call
mov
mov
mov
mov
xor
push
push
mov
mov
call
mov
mov
mov
mov
pop
mov
pop
ret
nop
push
push
call
mov
test
je
push
push
call
mov
cmpl
jne
mov
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
inc
gs
imul
push
jo
arpl
js
add
in
xor
push
push
pushl
mov
incl
jne
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
push
mov
xor
push
push
pushl
mov
subl
jae
call
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
push
push
push
push
add
mov
mov
push
call
mov
push
push
call
mov
push
push
call
mov
push
push
call
mov
push
push
call
mov
push
push
call
mov
push
push
call
mov
push
mov
push
mov
push
call
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
push
call
mov
test
je
push
call
mov
add
pop
pop
pop
pop
ret
add
add
jb
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
arpl
gs
jne
arpl
add
add
jp
outsl
push
gs
jne
arpl
add
fs
gs
jne
arpl
add
add
outsb
fs
gs
jne
arpl
add
add
gs
gs
jne
arpl
add
add
in
fsubr
std
repnz
incl
fsubr
cmp
add
push
push
lea
push
call
test
je
cmpl
jne
mov
push
call
jmp
push
call
push
call
push
call
call
xor
push
push
mov
cltd
cmp
jne
cmp
pop
pop
ja
jmp
pop
pop
jg
add
pop
ret
nop
push
push
add
mov
mov
lea
mov
call
lea
mov
mov
call
mov
mov
call
add
pop
pop
ret
mov
push
mov
push
push
push
push
push
push
push
push
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
lea
call
cmp
jl
xor
mov
jmp
lea
push
mov
call
mov
mov
mov
call
mov
mov
call
jne
mov
call
dec
add
inc
cmp
jne
mov
mov
call
jmp
lea
call
jmp
lea
push
mov
mov
mov
call
mov
lea
call
inc
mov
call
cmp
jle
inc
cmp
jle
lea
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
mov
push
mov
xor
push
push
pushl
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
or
add
sub
add
enter
cwtl
add
mov
cmp
add
aas
add
sarb
add
enter
cwtl
aas
add
add
add
aas
add
mov
add
addb
call
inc
add
clc
inc
add
enter
lock
add
clc
dec
add
add
add
cld
dec
add
push
mov
mov
push
push
dec
jne
push
push
push
mov
call
mov
xor
push
push
pushl
mov
xor
lea
mov
call
mov
lea
mov
call
mov
call
mov
mov
call
mov
test
je
mov
call
mov
mov
call
mov
call
mov
mov
mov
call
lea
push
mov
mov
mov
call
mov
push
lea
push
mov
mov
mov
call
mov
lea
pop
call
mov
mov
call
mov
call
push
lea
xor
call
mov
push
mov
call
xor
pop
call
test
jmp
push
call
inc
cmp
jne
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
call
incl
add
add
xor
add
incl
add
add
addr16
addr16
.byte
add
add
add
add
add
add
xor
add
dec
add
orb
add
jo
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
nop
add
cmpb
add
test
add
add
add
add
add
rolb
addb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pusha
add
add
add
add
add
or
add
add
add
add
add
add
or
add
mov
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
adc
add
in
add
add
add
rcrb
in
add
add
add
xor
add
in
add
add
add
inc
popf
add
mov
add
in
add
add
add
add
xor
xor
xor
xor
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
add
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
adc
adc
adc
or
xor
or
xor
add
xor
xor
adc
add
mov
add
xor
xor
xor
add
inc
add
add
add
add
add
jbe
inc
add
add
add
mov
addr16
add
add
add
es
addr16
add
add
mov
ja
bound
add
add
add
mov
ja
and
inc
add
add
or
ja
and
inc
add
add
add
jb
and
inc
add
add
add
jb
and
inc
add
add
add
ja
ja
and
add
add
or
jb
and
inc
add
add
add
mov
ja
and
add
add
add
mov
and
add
add
add
add
mov
ja
das
mov
add
add
add
mov
ja
mov
add
add
mov
add
mov
add
add
add
mov
add
mov
add
add
add
or
add
add
add
mov
add
add
or
or
xor
xor
cmp
add
xor
xor
xor
add
mov
xor
mov
add
or
mov
mov
add
mov
mov
add
add
mov
mov
or
add
add
incl
add
inc
add
inc
add
push
add
push
or
jg
or
aas
clc
or
aas
clc
add
pop
clc
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
incb
add
incb
add
incb
add
incl
add
incl
add
incl
inc
inc
cld
add
sarb
loopne
sldt
aas
pop
add
aas
add
add
addl
add
roll
aas
jecxz
push
mov
out
daa
movsl
add
and
int3
test
sahf
idiv
mov
shrl
sub
inc
sbb
scas
inc
sbb
scas
inc
sbb
or
xchg
sbb
cmp
xor
cld
stc
std
pop
cli
test
movsl
cmp
push
dec
iret
cli
stos
mov
pusha
add
xchg
pusha
les
ret
or
xchg
mov
fwait
in
in
add
pop
lds
test
loopne
es
mov
nop
scas
out
push
jp
mov
adc
mov
push
xchg
push
mov
fistpll
push
cmpsl
jns
or
xchg
scas
inc
sbb
nop
movsw
or
scas
jb
dec
sub
pop
push
aas
jb
das
xchg
xor
pop
mov
loope
jo
pop
and
inc
lea
pop
test
sub
fildll
pushf
test
sub
fs
xlat
pop
lock
lods
pop
mov
or
ljmp
bound
ret
ret
sbb
dec
leave
stos
jae
xor
and
stos
jae
xor
and
movsb
sub
jo
inc
sbb
out
or
dec
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
xchg
add
nop
mov
sbb
scas
inc
sbb
scas
inc
sbb
imul
lahf
add
push
mov
dec
dec
cmp
pop
xor
cmpl
or
mov
in
lods
mov
adc
stc
mov
push
pop
jnp
cld
aaa
jbe
jmp
scas
inc
sbb
push
xchg
push
jl
lcall
lods
fstl
and
push
out
stos
pop
scas
inc
sbb
push
xchg
push
jl
inc
imul
pop
loopne
in
jbe
test
push
fisubrl
mov
rorb
push
xor
scas
pop
lods
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
and
xchg
enter
mov
add
inc
lods
sahf
add
push
dec
loope
sbb
fsubl
xchg
test
in
xchg
sub
ljmp
cld
push
cld
sbb
inc
cmp
or
sbb
adc
aaa
cmpsl
leave
sahf
and
inc
cmpsl
push
adc
ljmp
call
int3
inc
daa
pop
rclb
icebp
mov
sti
or
adc
cmp
stos
xor
sbb
dec
das
mov
push
mov
pop
adc
xchg
adc
inc
cs
outsb
push
xchg
rcr
lret
xchg
xchg
jnp
les
jo
pop
pop
add
dec
pop
lret
pop
loopne
add
lahf
fs
sbb
fidivrs
daa
xchg
sarb
les
jo
pop
pop
add
dec
pop
lret
pop
loopne
sub
xor
sbb
cltd
sbbb
mov
jnp
dec
jge
out
test
popf
lcall
sbb
dec
ficoms
lcall
int
cmp
lcall
mov
xlat
rcl
mov
cs
gs
rolb
adc
out
cmpsl
xchg
daa
mov
roll
lahf
in
in
call
les
incb
movsb
out
int
adc
lock
popf
std
cs
adc
sub
and
mov
lods
orb
mov
clc
int
and
mov
jmp
sub
jne
jl
mov
inc
int3
pop
xchg
sarb
les
addr16
mov
pop
pusha
stos
inc
cltd
lods
test
sub
test
pop
bound
mov
mov
jmp
lods
cltd
pushl
xchg
pop
popf
mov
xlat
xor
cmp
add
out
test
dec
or
out
cmp
cmc
xchg
cmp
pop
sti
sub
push
out
mov
jl
pop
gs
sbb
cmp
mov
in
pop
stos
pop
mov
int
fdivrs
mov
sub
sbb
sbb
iret
pop
je
inc
in
mov
xor
inc
repz
sub
xlat
bswap
sti
jae
addb
nopl
call
movsl
jne
mov
cmp
mov
out
jl
les
addr16
sbb
test
out
scas
or
inc
cmp
xchg
lret
repnz
pop
rorb
lock
sahf
imul
sub
popa
push
bound
rcrl
fcomip
in
lret
fs
repz
popa
pop
movsb
shrb
shlb
mov
loope
sbb
push
xor
xlat
xchg
xchg
loop
addl
xor
jne
push
cs
adc
lods
add
xchg
mov
outsb
popf
gs
add
dec
fcoms
mull
jnp
push
je
test
ja
add
mov
or
adc
addr16
ja
mov
nop
fmul
and
aam
imul
das
out
mov
mov
std
int3
cmp
push
dec
pop
xor
pop
testl
jno
xor
mov
xor
adc
adc
sub
test
loop
xor
ljmp
cs
bound
mov
add
aaa
fistpl
mov
icebp
and
sbb
pop
fld
stos
xor
xor
aaa
dec
pop
mov
test
stc
sbb
xor
outsb
cld
out
mov
sbb
pop
and
inc
bound
outsl
jo
lret
mov
sahf
cmpsl
shll
clc
or
inc
add
xchg
xor
inc
loopne
mov
cltd
jmp
xor
dec
js
push
mov
aam
add
sub
sbb
jo
sub
add
aaa
subl
add
cltd
or
pop
mov
movsb
lds
clc
sbb
js
jecxz
fisubrl
enter
fisubrs
mov
xchg
hlt
xchg
call
or
or
xchg
sahf
xchg
xor
sarl
jp
aam
decl
cmp
nop
pop
iret
shll
int
pop
idivl
enter
add
sbb
loope
es
sbb
je
mov
repnz
loope
sbb
xlat
cmp
dec
jge
shrb
test
mov
or
cmp
mov
jmp
push
lods
add
negl
jb
test
ds
ja
icebp
adc
push
jmp
push
pop
test
or
imul
aas
xlat
ss
test
les
mov
mov
or
mov
sbb
xor
clc
test
jns
lock
sbb
arpl
jae
add
cwtl
scas
andl
popaw
xor
lahf
in
movsb
xor
adc
ljmp
lds
scas
pusha
nop
cwtl
fbld
mov
inc
jmp
int3
leave
mov
mov
push
aam
gs
lods
sbbl
sbb
push
fisubs
inc
inc
push
add
sahf
inc
pop
stc
hlt
hlt
fldcw
dec
cli
push
add
sahf
inc
pop
aaa
out
or
jno
hlt
iret
sbb
sbbb
sbb
mov
testl
add
aam
lcall
das
cs
push
sti
adcb
lods
pusha
fcoms
push
aad
cltd
sub
sbb
scas
push
or
adc
into
sub
or
and
into
adc
jg
shr
and
lret
xchg
pop
pop
js
xor
mov
cmp
test
mov
js
into
outsb
cmp
movsl
xchg
aaa
out
inc
jnp
inc
inc
push
sub
ss
push
pop
jmp
mov
inc
loopne
rorl
inc
dec
loope
inc
inc
inc
mov
cmp
adc
aam
cmpsb
pop
mov
dec
popa
mov
andb
int
sbb
imul
addl
sub
popa
and
shr
addl
xor
ljmp
and
js
cmp
mov
lds
adc
dec
rol
leave
lahf
sbb
movsb
adc
test
in
arpl
pop
adc
mov
inc
and
pop
jle
sahf
ljmp
and
not
fisubl
jmp
mov
or
mov
and
mov
rcrl
jl
mov
cmp
roll
jge
decb
cs
and
and
and
pushf
orl
loope
nop
arpl
arpl
jo
rclb
and
cmp
rcrl
cwtl
jno
push
add
shrb
cmp
inc
xor
push
mov
mov
in
cli
jno
cmp
repz
cmc
mov
jp
int
and
and
cltd
xchg
sbb
and
pop
adc
mov
lods
pop
mov
cs
movsl
pop
pop
pushf
push
repnz
lds
sbb
movsb
or
adcl
cld
push
and
push
lcall
test
cmp
daa
out
adc
push
lock
or
repnz
lds
jno
xchg
jne
mov
rcl
add
imul
mov
mov
call
jb
xchg
xlat
incb
std
hlt
xchg
cwtl
mov
daa
adc
and
dec
mov
clc
rolb
movsl
imul
pop
push
bound
sbb
test
mov
jmp
imul
int3
bound
and
mov
pop
pushf
lcall
lret
dec
lock
fsts
out
sahf
push
mov
push
mov
pop
lret
rorb
mov
and
or
adcl
fdecstp
xchg
adcl
test
out
mov
add
notl
test
xchg
je
outsl
mov
sarl
leave
movsl
adc
shrl
pop
or
ljmp
mov
jns
lahf
xor
lods
inc
subl
push
push
stos
sub
insl
rcrl
lea
insb
pop
movups
sub
pusha
addb
dec
mov
jp
movsl
out
pop
lahf
mov
push
cmp
mov
int
inc
es
cmpsb
jecxz
cwtl
or
ret
arpl
out
xchg
lret
repz
inc
flds
and
xor
rclb
clc
scas
fcmovne
movsl
in
push
jno
inc
xchg
repnz
data16
repz
enter
mov
shrl
inc
addl
popa
mov
dec
out
push
push
iret
leave
rorl
mov
mov
pop
push
pop
fs
shufps
sar
outsl
mov
cmp
outsb
sbbb
inc
enter
sahf
stos
aam
sbb
add
jnp
pop
into
in
aam
cmp
push
imul
xor
lret
or
adc
mov
stc
test
test
pusha
lock
sbb
arpl
jae
outsl
xor
xchg
lds
dec
bound
sbbb
daa
dec
fcomps
sbb
mov
les
loop
jecxz
add
aam
lcall
aad
test
pop
bound
mov
lds
mov
iret
cmp
adc
test
jns
lock
sbb
fwait
ret
rolb
sbb
lahf
es
push
sti
adcb
lods
pusha
fcoms
push
aad
cltd
sub
ret
sub
add
adc
add
fsubs
paddq
cmc
cmp
rcll
repnz
mov
xchg
jne
les
push
dec
fmul
push
sahf
les
popf
adc
js
jle
loope
xchg
int3
push
jmp
stos
mov
sub
xor
cmpl
cld
hlt
arpl
mov
pusha
adc
cli
pop
ds
cmpsb
mov
flds
and
xor
sub
jmp
adc
cwtl
aaa
nop
ss
aam
gs
lods
adcl
pop
cmp
mov
sbb
mov
cmpl
push
or
insl
inc
pop
adcb
sub
int
and
push
lds
shr
jno
xchg
call
aam
gs
lods
adcl
pop
cmp
mov
sbb
arpl
jae
add
cwtl
scas
andl
jl
xor
mov
pop
sti
repz
lock
add
fs
std
cmpsl
inc
pushl
adc
icebp
xorb
inc
clc
or
sbb
push
out
sub
in
into
insb
fistpl
mov
xor
bound
cmp
imul
lea
aad
cmpsb
xchg
addr16
add
xor
fsubrs
pop
jl
js
pop
inc
pop
push
or
shrb
cmp
inc
jbe
inc
dec
and
or
xor
xchg
push
cmc
popf
repnz
mov
negb
mov
loopew
sar
out
sub
or
das
push
fcompl
push
shrb
sar
into
or
jmp
popf
mov
sbb
dec
sarb
outsb
dec
mov
cld
mov
divl
aas
pop
xor
ds
test
or
mov
cmp
xlat
inc
repnz
push
test
sub
imul
dec
mov
call
mov
test
movsb
in
push
stc
fnstenv
nop
insl
dec
add
sub
adc
dec
mov
xor
mov
inc
lods
mov
pop
mov
sub
or
das
and
jo
mov
or
push
xchg
pushf
dec
ds
pop
ja
mov
adc
int
push
daa
clc
dec
jnp
je
les
mov
jle
iret
sahf
daa
lcall
pop
insl
sub
adc
call
je
ret
cld
fs
xor
jnp
adc
mov
ret
jp
mov
sahf
shrb
sar
push
sbb
pop
scas
out
jecxz
inc
sbb
jno
mov
flds
sbb
clc
mov
inc
dec
cmc
cmp
fistpl
push
and
add
mov
dec
imulb
les
dec
jnp
loop
pop
ret
shll
xchg
aam
pop
fldcw
lret
movsb
xor
mov
int
cli
pop
push
jg
lods
push
shlb
cmp
nop
xor
inc
fsubl
les
int3
mov
movsl
adc
jae
lret
les
call
adc
lock
and
movsl
pop
jp
mov
arpl
jae
mov
xor
cmpsb
cs
jnp
aaa
or
out
ret
aam
push
movsl
pop
jp
mov
arpl
jae
cli
cmp
push
mov
jb
fidivrs
or
in
cmp
fmul
shrl
dec
inc
outsl
push
and
aaa
daa
mov
mov
or
push
pop
xchg
rorb
sbb
inc
push
mov
lods
dec
je
movsb
or
jge
jp
fsubs
outsl
dec
in
inc
addr16
fwait
stos
hlt
dec
and
lret
or
fnstcw
sarl
adc
adc
insl
pop
xchg
cmpsb
insl
lods
aas
daa
jp
ja
push
sarb
mov
iret
mov
stc
in
aad
adcl
shr
movsb
je
fstpl
out
fsubrl
xchg
sub
pop
icebp
sarb
push
xor
push
add
cmpsb
mov
push
mov
pop
pusha
int3
xor
mov
inc
cmp
data16
jp
loope
jae
dec
xchg
pop
jns
mov
push
clc
std
data16
add
push
jmp
ds
push
stc
test
push
push
incb
ror
xor
sbb
or
xchg
or
adc
movsl
js
in
dec
daa
movsb
pop
scas
cmp
jp
mull
sub
mov
inc
out
orb
inc
sbb
cmp
xor
mov
push
ds
repz
push
out
cltd
mov
mov
sub
stc
mov
outsb
sbbb
lret
bt
lods
inc
or
jecxz
fwait
or
out
mov
sbb
dec
ret
jo
cmp
imul
in
idivb
pop
xchg
out
xchg
ds
loopne
inc
in
mov
cmp
inc
mov
or
xchg
push
push
into
jno
das
jmp
shlb
iret
cmc
dec
mov
enter
shll
test
cwtl
iret
cmp
adc
call
insb
sti
les
jbe
jns
ret
push
and
dec
js
mov
mov
clc
lods
mov
sub
fmull
in
int3
push
es
jbe
repz
xchg
mov
inc
insl
cmc
in
les
jg
or
mov
stos
cmp
je
imul
dec
pushf
iret
mov
jecxz
add
fdivrs
nop
cmpsb
sub
cmc
rcrl
jl
loopne
sub
aam
xchg
lds
insl
xchg
insl
fwait
or
out
mov
pusha
fldt
pop
das
inc
test
or
ja
cmpb
jae
pop
lret
mov
std
icebp
les
loope
pop
or
ss
mov
adc
add
fbld
mov
mov
call
insb
sti
les
mov
push
nop
mov
mov
fs
sarb
jge
aas
cmp
cmp
inc
rcrb
or
add
cmp
mov
int
mov
repnz
jp
sbb
mov
adc
dec
push
cmpsl
xchg
out
xchg
ds
insb
sub
xor
sbb
fcmovne
cld
push
xchg
dec
fdivrs
cmp
dec
mov
cmpsl
fimull
cmpb
sbb
and
std
sbb
fimuls
inc
outsb
cld
outsb
leave
inc
xchg
fnstsw
les
cmp
loope
xchg
outsl
dec
mov
jl
add
xchg
pusha
aas
xchg
out
xchg
ds
lahf
and
mov
mov
xchg
mov
insb
and
mov
dec
sti
je
mov
repnz
or
cmc
js
in
loope
bound
jo
adc
cmp
mov
js
in
loope
bound
in
or
hlt
ret
data16
dec
pushf
jge
lahf
js
incb
les
popf
shl
jmp
push
into
shll
adc
jae
jp
fwait
aad
push
add
outsl
cmp
insl
mov
fcomps
ficompl
jne
in
jmp
and
flds
arpl
jae
and
sbb
aaa
or
out
call
cld
inc
pop
adc
xchg
adc
cld
mov
ret
mov
inc
push
int3
cmp
push
jg
loopne
vpunpcklwd
int
sbb
addr16
je
sbb
or
adc
xchg
adc
addr16
push
movzwl
push
in
xor
imul
in
and
out
dec
mov
ret
pop
movsb
int
into
test
and
lret
hlt
inc
jle
sbb
cmp
add
cmpsb
test
lret
cld
mov
push
fdiv
out
push
or
sbb
daa
aas
lods
lods
mov
and
fisubrl
aam
mov
dec
out
addr16
outsb
daa
mov
sbbb
inc
sbb
xor
mov
js
loop
pop
jae
stc
cltd
lds
mov
je
jp
ds
es
dec
jno
sub
loope
pop
sub
loop
add
leave
jae
icebp
add
jl
loopne
sub
int
and
xchg
dec
xor
xlat
lods
xchg
mov
push
movl
fmul
xor
mov
in
cmpsl
jo
inc
lret
inc
inc
push
in
cwtl
std
cwtl
mov
inc
jnp
fsubr
dec
mov
mov
sbb
dec
push
mov
mov
adc
test
pop
loopne
imul
out
jle
mov
shll
lret
call
test
sahf
jle
push
jbe
scas
mov
pushf
mov
das
fstps
inc
xor
cmc
stos
inc
fs
int
lock
test
loope
addr16
imul
lea
outsl
push
push
or
mov
jp
loopne
push
loop
xchg
je
mov
das
rorl
add
rolb
cwtl
adc
pop
js
cmpl
mov
jo
sti
mov
adc
push
jbe
sub
push
or
sub
mov
xchg
sub
subb
lods
mov
stc
ja
push
jp
mov
mov
adc
test
aas
xchg
lcall
cld
mov
shll
lret
call
test
sahf
mov
dec
xchg
int3
push
es
jmp
lock
mov
xchg
mov
push
or
sub
mov
xchg
sub
in
xchg
jp
aaa
sub
mov
push
in
rorl
mov
outsb
inc
push
push
mov
inc
out
stc
lea
ret
dec
jl
js
mov
test
stos
lds
in
mov
cmp
pop
sub
sub
sub
movsb
jne
arpl
das
add
ljmp
les
inc
xchg
push
les
je
inc
sub
loop
pop
test
scas
sbb
xchg
push
cmp
or
popf
jne
add
xchg
scas
out
sbb
gs
inc
dec
pop
loope
daa
add
shrb
inc
push
in
push
mov
sub
andb
imul
add
pop
jp
inc
dec
sub
xchg
cmp
pop
outsl
mov
pop
adc
insl
sub
jbe
notl
dec
test
cmp
mov
hlt
dec
sbb
mov
scas
pop
xor
push
xor
test
daa
mov
in
push
pop
push
insl
or
ret
lods
cld
push
ljmp
push
mov
pop
popa
mov
pop
lock
mov
les
testl
xor
mov
fnstenv
sbb
pop
sbb
rcrl
xlat
or
rcr
lods
lods
clc
test
sbb
inc
jge
jecxz
syscall
adc
lock
cli
sub
sub
push
mov
pop
xor
out
hlt
fildl
inc
mov
movsb
jae
push
movsb
sti
and
imul
mov
jmp
xor
add
jbe
mov
cmp
pusha
fmulp
mov
dec
mov
ljmp
out
cwtl
addb
and
xlat
sahf
fwait
enter
adcl
push
xchg
adc
jmp
xchg
call
mov
insb
and
jno
dec
imull
addr16
cmp
insl
out
jno
and
add
js
lods
test
dec
sarl
add
mov
cli
fldenv
adc
outsl
outsl
dec
cmp
xor
add
iret
sbb
xor
mov
xchg
sahf
pop
fcmovbe
push
xchg
imul
dec
aad
lcall
jp
loopne
fs
sahf
in
idivb
mov
mov
mov
push
es
movsl
int
ficomps
nop
pop
stos
sub
clc
adc
cltd
pop
xor
js
and
cmp
push
or
outsb
mov
xchg
ljmp
sub
dec
sti
lds
dec
pusha
push
inc
push
push
mov
xor
sbb
scas
cmp
les
stos
push
cmpsb
cmp
xchg
icebp
xor
sbb
and
mov
lahf
sbb
in
xchg
adc
and
test
roll
add
in
test
notb
fsubs
xor
inc
fwait
jecxz
clc
in
mulb
fsubs
je
inc
adc
fs
stc
push
or
mov
sub
add
pop
out
enter
cmp
lds
das
dec
xor
sbb
inc
mov
shlb
rorl
pop
inc
data16
jnp
mov
sbb
les
xchg
insl
je
dec
push
mov
icebp
or
imul
mov
loopne
pcmpgtw
mov
and
mov
lahf
sbb
outsl
cmpsl
jmp
jno,pt
push
ficoms
jl
lods
testl
pop
jecxz
pop
imul
clc
stc
notl
lods
iret
or
lret
xor
dec
mov
rcrl
and
inc
div
ret
adc
or
dec
fcmovnbe
cmp
add
xchg
push
hlt
fisttpll
or
jbe
ss
iret
dec
xor
jl
lcall
stos
outsb
inc
das
sbb
fsubrs
sbb
ds
jne
adc
jns
std
enter
sub
jo
dec
adc
mov
mov
adc
fwait
adc
sti
rclb
and
outsl
movsb
test
xor
push
int3
fisttpl
repnz
pop
mov
int3
jbe
pusha
mov
add
mov
shl
xor
fstl
stos
xor
ljmp
gs
xlat
push
movsl
cmc
ljmp
wrmsr
or
xor
call
jne
jnp
jecxz
push
push
add
insl
sbb
add
iret
in
repz
shll
jl
je
mov
adc
xchg
sahf
ffreep
sbb
enter
filds
cmp
mov
test
push
pushf
mov
pusha
xchg
mov
lret
negb
cld
data16
fucomip
in
dec
mov
leave
xor
xor
add
aas
int3
push
mov
mov
cmpsb
cmp
movsl
out
adc
pusha
js
xchg
out
fsubl
out
dec
sahf
inc
pop
nop
cmp
in
sarb
ret
cmpsl
rclb
xor
rorb
or
negl
cmp
add
les
lea
es
pop
inc
out
pusha
test
push
xchg
and
insb
pop
mov
xor
inc
enter
mov
mov
ret
iret
mov
xchg
inc
push
mov
pop
fnstsw
cmp
cld
mov
repnz
sbbb
mov
cmpsl
cmp
int3
mov
adc
mov
leave
aas
lahf
pop
popa
lcall
mov
nop
dec
add
lret
pop
pop
mov
ret
add
arpl
push
adcl
test
shl
xor
ret
adc
or
in
cmpsl
js
cltd
and
adc
add
push
fucompp
cmp
mov
js
fwait
mov
pop
and
inc
jp
lea
mov
and
mov
mov
cmp
xor
popf
int3
jmp
pop
mov
jmp
movsb
insl
ss
mov
mov
push
add
icebp
mov
std
jbe
sbbl
sub
mulb
xchg
pop
jmp
jae
or
adc
dec
push
cmp
dec
jns
or
cmpsl
test
enter
push
mov
pop
dec
mov
test
cmc
in
pop
fs
add
xor
ljmp
insl
fildl
xchg
and
jle
jb
ret
dec
push
enter
dec
cmp
pop
adc
mov
pop
js
or
push
push
ljmp
out
jae
imull
or
push
rol
jmp
mov
mov
jg
mov
mov
mov
cld
fstpl
xor
ret
aas
iret
cld
shl
outsl
inc
fst
lods
ljmp
std
div
loop
loopne
loop
pop
repz
testb
adc
insb
mov
and
jmp
xchg
jns
data16
leave
push
mov
data16
stos
ror
sub
rcrb
jmp
lahf
pusha
fxch
stos
cmp
push
test
pop
cmp
lea
cmp
xor
aaa
xor
aam
iret
jbe
hlt
pop
cld
fcomp
mov
iret
cmpsb
pop
xchg
scas
and
sbb
push
icebp
sub
sbb
xchg
xor
sub
mov
pop
ljmp
xchg
cs
and
dec
sahf
loopne
cmpsl
insb
popa
jbe
sbb
sub
addr16
loopne
lds
scas
push
data16
mov
inc
in
ret
mov
or
xchg
cs
in
xorl
clc
cmpsb
sub
sahf
xor
ja
mov
aad
in
jg
jg
jne
ret
dec
push
or
inc
or
pop
sbb
das
cmc
jo
and
inc
adc
scas
dec
fstl
scas
and
jecxz
test
mov
dec
adc
loop
icebp
dec
inc
shrb
mov
inc
mov
mov
das
movsb
push
mov
push
ss
test
mov
sub
xorl
outsb
mov
dec
xchg
push
clc
leave
sbb
mov
adc
mov
rolb
mov
or
xchg
push
stc
mov
lea
and
and
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
dec
xchg
or
out
leave
in
jbe
cmpsb
mov
or
mov
ljmp
in
cmp
xor
sbb
mov
dec
out
xor
sub
jecxz
push
lock
mov
cmpl
jg
idivb
inc
sbb
scas
inc
sbb
pop
push
outsl
pop
ret
lock
cs
mov
xchg
in
jecxz
cmp
add
test
aad
pop
jl
mov
call
sub
xor
test
inc
push
sub
lea
sar
xor
push
lahf
ja
xor
out
and
out
xchg
iret
loopne
xor
push
into
insl
jns
rcrb
xchg
sbb
or
pushw
sti
mov
lds
roll
arpl
testl
sub
outsl
lods
mov
sub
jp
inc
mov
es
sbb
cmpsl
lret
push
ljmp
sub
lcall
cmp
repnz
ret
outsb
iret
inc
outsl
stc
mov
push
dec
inc
mov
sbb
sbb
dec
push
cs
sbb
out
cmpsl
mov
pushf
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
call
adc
mov
push
mov
hlt
into
movsl
inc
leave
loope
inc
sbb
fcmovbe
pop
mov
dec
pop
adcl
sbb
sbb
sub
sbb
pop
push
mov
jno
jno
cmp
repz
xor
std
mov
loopne
imul
notb
ret
je
adc
mov
arpl
bound
das
push
mov
push
adc
fndisi(8087
xorb
ss
xchg
and
imul
mov
add
push
cld
jg
out
aam
dec
push
sub
shl
ret
je
rclb
sahf
int3
jbe
aam
push
inc
dec
pop
xchg
int3
out
sbb
jne
or
dec
cld
push
enter
jmp
imul
pop
xchg
inc
es
xchg
jecxz
mov
sbb
and
fdivp
jp
jae
add
adc
mov
loope
div
ja
fnstsw
mov
sti
adc
pop
jg
xchg
shll
ljmp
mov
outsb
jb
dec
mov
pop
jge
leave
dec
or
add
or
inc
mov
addr16
imul
ja
mov
les
clc
adc
cmp
imul
mov
sbb
fistl
imul
adc
mov
rcll
repnz
lret
je
stos
bound
fs
adc
mov
xor
es
leave
pop
lahf
push
push
add
jb
lret
add
adc
pop
jb
adc
adc
sbb
mov
cmp
push
fsts
jo
in
mov
clc
lret
mov
and
outsb
push
jecxz
add
pop
dec
xchg
cmpsl
mov
push
bound
pop
lcall
adc
ss
add
jo
mov
inc
cmpsl
icebp
sbb
fmuls
es
in
aas
push
push
fstps
fld
data16
jecxz
in
sti
test
aad
fxch
or
or
lds
mov
mov
adc
jg
gs
mov
pop
mov
shl
into
andb
cmp
into
sahf
xchg
cmpsb
fcompl
and
xchg
mov
push
xor
mov
cmpsb
pop
push
adc
dec
outsb
add
adc
mov
jno
lea
xchg
push
push
jne
adc
leave
push
scas
or
xchg
or
push
sbb
xchg
in
mov
aad
sahf
hlt
xchg
sti
mov
cmpl
cli
clc
leave
ror
pop
xchg
out
clc
leave
ror
pop
xchg
out
clc
leave
ror
pop
xchg
out
clc
leave
ror
pop
xchg
out
clc
leave
ror
pop
xchg
out
clc
leave
ror
pop
xchg
out
clc
leave
ror
pop
xchg
out
clc
leave
ror
pop
xchg
out
clc
leave
ror
pop
xchg
out
clc
leave
ror
pop
xchg
out
clc
leave
ror
pop
xchg
faddl
mov
ja
shll
cmpsl
push
gs
pop
rolb
int
in
rolb
int
in
rolb
int
in
rolb
int
in
rolb
int
in
rolb
int
in
rolb
int
in
rolb
int
in
rolb
int
in
rolb
int
in
rolb
int
push
daa
mov
aam
loop
mov
jbe
movsb
add
mov
dec
out
and
pop
lcall
xlat
les
cwtl
int3
test
test
lret
or
and
inc
add
enter
dec
pop
ret
mov
xchg
push
pop
repz
into
repnz
gs
shrb
push
xor
mov
rorl
pop
add
test
dec
in
dec
sbb
lcall
ja
scas
mov
repz
aam
fldenv
add
dec
and
mov
xchg
pop
inc
call
loop
mov
lods
movsl
out
leave
cwtl
cmpsb
lds
add
into
dec
sub
fisttps
int
mov
xchg
aad
insb
lock
mov
sbb
cmpl
cmp
scas
rol
stos
pop
aas
scas
mov
je
cwtl
ret
mov
pop
mov
aad
iret
jp
fisttps
int
loop
mov
jae
out
aaa
incl
icebp
mov
sbb
cmpl
pop
ljmp
mov
sub
add
outsb
test
lret
cmovp
mov
mov
xchg
mov
ljmp
mov
fldcw
dec
push
rolb
adc
inc
cmp
adc
pop
inc
lods
into
and
pop
jp
dec
mov
fstl
scas
pop
push
mov
cmpsb
insb
icebp
stos
xor
dec
lcall
mov
add
xrelease
jp
add
mov
loop
inc
mov
bound
je
mov
aas
mov
filds
inc
clc
mov
adc
and
lods
inc
xchg
mov
test
cli
roll
rolb
cltd
or
ds
push
movsl
mov
add
nop
pop
loopne
sbb
mov
imul
stos
das
jbe
mov
fwait
cmp
fldcw
mov
ret
pop
rcll
lret
inc
mov
pop
sahf
and
and
xchg
adc
es
mov
push
or
xor
xor
sbb
loopne
pusha
fwait
dec
adc
ja
rolb
loopne
pusha
fwait
dec
adc
xchg
nop
xor
outsb
push
adc
pop
sub
cmp
jne
pop
out
mov
es
fwait
dec
adc
xchg
imul
pop
or
cwtl
add
adc
inc
call
push
mov
mov
imul
fucomi
mov
in
pop
das
mov
arpl
cmp
mov
sbb
fucomip
lods
pop
enter
sbb
mov
fimull
xchg
or
push
push
repnz
dec
sub
mov
inc
pop
pop
test
test
call
rorl
imul
iret
lcall
push
sub
sar
mov
mov
cs
lds
inc
aaa
push
cld
mov
cmpsl
lahf
inc
xor
add
shrb
pop
pop
icebp
adc
lock
in
arpl
jo
push
push
dec
les
in
pop
xor
sbb
repz
jl
add
setnp
shll
or
cld
fmuls
iret
pushf
and
fstpt
out
or
push
mov
mov
fstpt
out
test
in
dec
in
call
clc
xor
imulb
mov
leave
xchg
xchg
fxtract
cmp
ja
jecxz
adc
mov
sub
mov
sbb
jno
mov
jb
out
shll
sub
popa
jle
stos
pushl
jo
and
dec
fiaddl
cmpsb
xchg
push
mov
fimuls
into
or
out
push
sub
mov
jg
lods
fdivr
add
mov
pusha
das
aad
fists
xor
push
mov
lahf
lea
and
or
adcl
adc
sub
add
mov
mov
adc
outsl
mov
mov
cmp
out
and
lods
fs
mov
push
xchg
aaa
xchg
add
xchg
in
ljmp
pop
loop
cmp
aad
stos
inc
mov
test
or
push
adc
or
dec
fsubl
sub
and
xchg
es
call
xchg
xlat
jge
jle
pop
add
stos
dec
jno
jle
sub
or
ffreep
call
cmp
mov
mov
outsl
inc
jg
or
sti
and
pop
cmp
add
lret
ret
dec
sbb
leave
scas
fwait
mov
lea
mov
xchg
push
push
xchg
mov
dec
push
int3
sub
inc
das
aas
movsb
jl
fcoms
sub
pop
mov
cmpsb
or
iret
mov
cmp
adc
add
mov
cld
xchg
xchg
int
push
sbb
xchg
cmc
orl
sub
inc
sbb
fisttpll
out
loopne
lret
clc
in
jp
inc
pop
shl
dec
xchg
push
xor
adc
push
push
mov
sub
loopne
push
push
jge
in
xor
xor
adc
aaa
repnz
lea
push
push
mov
mov
xlat
lea
push
push
mov
mov
cld
cmpsb
cmp
shlb
pop
mov
inc
insl
lahf
fisttpll
popf
mov
xlat
cmp
xchg
push
out
or
lret
rorb
shl
fcmove
lret
jp
faddl
pop
or
rclb
or
shlb
aad
push
jnp
mov
in
pop
add
std
pop
dec
jns
mov
inc
pop
in
push
xchg
scas
fcmovne
daa
ret
cmp
add
add
xor
out
xchg
jle
or
push
inc
push
ja
outsl
mov
cltd
push
out
pop
call
test
es
scas
mov
btr
sbb
fildll
dec
jmp
or
stos
in
fnsave
sbb
sbb
mov
pop
xchg
fs
push
leave
dec
dec
add
mov
je
mull
lods
pop
and
not
out
lods
add
add
movsb
pop
push
and
push
jg
dec
xor
lcall
fiaddl
mov
lods
icebp
push
out
jmp
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
scas
inc
sbb
jne
das
in
add
push
vminss
mov
and
xchg
sbb
lods
pop
fists
push
pop
lods
and
jecxz
test
or
lods
inc
add
push
and
ficomps
dec
pop
mov
mulb
in
jns
ret
cmpsb
sti
jns
mov
lret
sbb
pop
mov
fsubr
mov
add
sub
jns
xor
jns
xor
jns
xor
jns
xor
jns
xor
jns
xor
jns
xor
addl
ret
or
sub
fs
cmpsl
les
mov
rcrl
loope
mov
outsl
mov
lahf
mov
mov
das
dec
dec
sub
iret
in
lret
rcrl
lds
shll
pop
pop
gs
ss
jmp
enter
sub
fs
xor
cs
inc
xorb
jecxz
cmpsl
jp
insl
sbbl
ret
cmp
cli
lret
mov
fnstsw
in
add
sub
popa
sbb
inc
gs
fs
pop
popf
pop
and
or
imul
outsl
in
lahf
or
push
lea
add
outsb
push
mov
hlt
mov
add
push
pop
pushf
xchg
cli
int
and
insb
add
sbb
mov
es
iret
ss
outsb
push
shr
pop
dec
sub
pop
push
add
frstor
popa
add
dec
and
inc
sahf
and
in
sti
adc
adc
push
or
test
incl
mov
test
test
add
test
sti
ja
push
xchg
lock
ja
in
adc
mov
rcll
mov
outsb
imul
push
push
cld
sbb
aaa
lods
adc
add
test
jo
lret
mov
xchg
xchg
mov
adc
inc
mov
dec
and
mov
adc
shlb
rorb
xor
jbe
dec
inc
adc
add
xor
sbb
fdivl
cmp
sbb
mov
push
push
ja
andl
xor
popa
lods
push
aad
out
sub
jmp
ret
aad
sbb
xor
js
cmp
xor
cmp
movlps
jbe
int
pop
push
cmp
jbe
fcmovu
int3
iret
into
shlb
jg
es
pushf
inc
fsubs
ret
je
sub
sub
pop
nop
cwtl
sbb
test
ds
in
push
out
mov
out
pop
lahf
test
icebp
mov
sbb
dec
jp
adc
xlat
adc
arpl
or
inc
je
sahf
into
stc
and
jnp
loope
dec
popa
mov
sbb
cmp
in
int
lods
jns
fmuls
jnp
popf
into
push
jns
int
cmp
dec
adcl
test
dec
or
ss
sbb
jmp
aaa
test
push
pop
das
leave
xchg
dec
aaa
insb
dec
nop
add
inc
xchg
lds
out
fwait
movsl
mov
mov
scas
fs
sbb
sbb
test
ret
outsl
sub
sbb
lds
rorl
sub
insb
ret
push
xchg
inc
aas
jnp
push
cmp
int3
sub
xchg
add
inc
xchg
mov
sub
jns
out
dec
cli
pop
rcrl
add
scas
adc
jnp
lahf
jp
div
mov
test
pushf
cmpsl
addr16
popa
inc
mov
int3
add
stos
repnz
push
outsb
mov
int3
data16
scas
scas
cmpsl
das
lods
insl
cmp
mov
dec
xchg
mov
lea
in
jmp
sub
sub
negl
imul
cmp
test
movsl
lds
sbbb
and
xchg
cli
imul
out
jnp
fisttps
inc
dec
jnp
insl
or
fldl
sub
inc
pop
cmp
out
fdivrl
lret
nop
jns
pop
rcrb
jnp
int3
lret
cmp
pop
push
stc
in
test
cmp
stos
pushf
inc
cmp
out
jnp
call
stos
jmp
dec
xor
adc
add
pop
jne
popa
or
divb
repz
adc
lret
cmp
fs
mov
arpl
and
gs
int3
pop
into
or
cmp
xchg
pop
inc
fidivl
aas
cs
add
mov
int3
popf
xchg
imul
mov
xchg
out
add
rol
scas
iret
sub
stos
pop
mov
out
sub
add
add
inc
sbb
sub
mov
xchg
push
and
icebp
leave
cltd
popa
mov
dec
jne
add
mov
mov
push
dec
gs
xchg
and
add
add
cmp
xchg
xchg
dec
xchg
rorl
adc
mov
xor
mov
arpl
lods
lods
stos
dec
jbe
sahf
ljmp
pop
add
xchg
mov
into
dec
jo
sub
fs
mov
jg
jg
leave
push
mov
out
sbb
in
lds
sub
outsl
lods
cltd
mov
aam
push
test
cmp
jne
sarb
cwtl
mov
shll
jl
sub
into
cmp
jmp
push
mov
jbe
in
ljmp
cmp
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
ljmp
lret
mov
sahf
mov
jne
nop
jge
sub
movsl
dec
in
lds
in
lock
dec
and
jo
rorb
jo
inc
cmp
inc
bound
xor
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
testb
jmp
push
addr16
int3
add
mov
xlat
push
fistps
cli
xchg
add
inc
cmp
lcall
sarb
dec
dec
or
aad
sahf
cmp
lock
fsubr
mov
sbb
jae
mov
fstps
inc
ljmp
inc
cli
push
cwtl
mov
jge
js
pop
xchg
aam
ror
lcall
pop
jmp
rorl
stc
xchg
mov
fidivrs
push
loope
mov
jle
gs
test
push
dec
xor
ret
inc
pop
xchg
aam
ror
ss
xor
push
in
push
repz
mov
pop
mov
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
dec
push
fwait
push
fnstcw
nop
and
pushf
add
push
adc
mov
xchg
fs
dec
mov
or
xchg
aam
ror
mov
jl
jne
push
ficomps
int
loope
incl
mov
add
arpl
sub
fcompl
mov
stos
fwait
mov
fs
cmc
inc
push
mov
xlat
pop
mov
jg
aas
mov
fnstenv
pop
xchg
aam
ror
mov
jle
negb
test
xlat
cmp
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
adc
jge
bound
cltd
xchg
outsb
out
and
xlat
cmp
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
cli
cmp
fs
or
mov
jp
xor
dec
leave
xchg
aas
cmc
mov
lret
fildl
cmpsb
rcl
sbb
sbb
stos
pop
push
rclb
cmc
mov
jp
dec
mov
sub
xchg
negb
nop
push
mov
dec
lcall
cmp
mov
push
je
cmpsb
jge
loopne
jae
cs
lcall
es
mov
pop
jle
div
gs
or
sub
jecxz
aad
loop
testb
sarl
popa
dec
jecxz
xor
pop
mov
add
jp
ja
push
stos
add
clc
in
inc
or
jo
and
adc
sbb
cmp
loope
out
in
xchg
pop
nop
adc
jae
ss
push
mov
outsb
mov
push
mov
xchg
xchg
jg
cld
iret
mov
jae
pop
lods
int3
inc
enter
sbb
into
popa
jg
popa
pop
pop
cld
in
dec
nop
aad
xchg
mov
addr16
movsl
fsubrs
repz
xchg
xchg
out
add
pop
idivb
or
mov
fldenv
push
lret
add
dec
pop
cltd
ret
loop
cs
mov
fwait
adc
inc
aam
lock
and
mov
mov
push
out
push
in
adc
call
leave
pop
sahf
sbb
dec
dec
das
pop
push
outsl
inc
jl
in
mov
scas
push
jae
lds
pop
xor
push
ss
dec
lds
call
inc
mov
clc
cmp
mov
lret
sbb
jl
sbb
pop
lods
dec
push
addr16
jns
push
mov
xchg
jp
jmp
lock
shlb
fmuls
insb
cmp
and
jle
fdivl
sbb
enter
push
outsl
repz
hlt
cli
sbb
dec
sub
mov
jo
or
test
lahf
inc
lret
dec
pushw
outsl
mov
int
aad
and
in
cwtl
mov
icebp
mov
or
inc
inc
fwait
movswl
mov
out
add
jl
lods
adc
pop
leave
dec
mov
adc
add
sahf
out
cmp
or
pop
cwtl
pop
stc
inc
jp
in
lahf
push
pusha
fisttpll
cmpsb
outsl
pusha
ret
mov
loope
inc
outsl
cli
es
and
enter
fsubrs
outsl
ds
xor
vdivss
repz
gs
jb
sub
lea
inc
cli
daa
dec
inc
xchg
push
loope
jnp
sti
xchg
outsb
xchg
test
loop
gs
clc
mov
pop
jp
pop
stc
pop
xchg
xor
dec
sub
jnp
cmp
xchg
js
xchg
daa
jge
mov
or
push
mov
xchg
insl
jnp
das
lock
jmp
pop
in
xor
fcmovnu
cmc
jne
jbe
adc
jne
enter
xor
cwtl
mov
mov
pop
dec
cmp
cmp
sub
rclb
push
jecxz
push
fiaddl
xor
ss
cmp
pusha
cs
cmp
pop
push
jnp
dec
and
inc
mov
outsl
adc
dec
aam
and
ret
xchg
dec
lods
jnp
in
sti
inc
xlat
test
aas
mov
xchg
sbb
or
imul
in
inc
test
cmp
pop
mov
mov
and
js
jge
sti
fdivl
push
sbb
mov
adcl
adc
xor
push
fistl
xor
arpl
lock
popa
sbb
xchg
fs
inc
in
jno
in
adcb
cmp
sbb
inc
xchg
and
dec
fwait
pop
pop
rorl
in
mov
cld
fldl
cmp
nop
or
adc
cmp
push
es
imul
jns
sti
pop
push
clc
in
lea
inc
in
inc
data16
dec
shl
fmuls
roll
loopne
loope
push
jmp
adc
jmp
repz
mov
fidivs
fisubs
inc
fs
cmpsl
add
jmp
cmp
sbb
inc
push
mov
mov
adc
cmpsb
aaa
nop
icebp
inc
pop
mov
aad
dec
xor
cltd
int3
mov
adcl
adc
dec
cmp
cli
cmc
aam
push
loopne
ss
pop
insl
adc
or
xchg
and
jmp
and
or
fwait
out
adc
ja
stos
stos
mov
arpl
leave
nop
inc
xchg
adc
imul
scas
xchg
xor
cwtl
shlb
pop
lahf
lock
mov
das
scas
xor
pop
mov
in
mov
lds
inc
jecxz
mov
push
sbb
in
add
fsubs
push
not
sub
and
int
mull
lods
xor
mov
sbb
fstl
mov
ja
push
loop
xor
add
push
hlt
ljmp
insb
jge
adcl
cmpsb
ss
hlt
add
cli
push
adc
pusha
mov
mov
cmpsb
loope
jmp
push
ja
sahf
mov
xor
cwtl
push
gs
jge
pop
push
add
sahf
fwait
push
fidivrl
mov
dec
add
jge
inc
mov
adc
inc
shll
into
sbb
jo
inc
scas
jns
xchg
jo
dec
movsb
jge
push
enter
mov
mov
xchg
jbe
inc
adc
mov
jle
ret
xor
jb
and
aaa
shrb
je
xchg
aas
mov
xchg
data16
push
popa
inc
int
jo
mov
push
das
push
cwtl
xor
fcompl
or
decl
ss
call
xor
jbe
cmc
adc
in
enter
inc
push
adc
rcll
or
push
sub
popa
jns
cmpsb
xchg
sbb
push
lret
add
mov
rclb
out
adc
fbstp
inc
mov
mov
loopne
enter
scas
jns
pop
movsl
push
ljmp
enter
jle
jne
adc
cmc
in
inc
dec
xchg
push
mov
dec
jne
fs
sub
push
mov
push
xchg
jp
sti
arpl
mov
in
dec
mov
dec
jb
loopw
lcall
sbb
je
rorb
or
adc
int3
mov
insl
dec
hlt
loope
int3
movsl
outsb
test
jl
pop
adc
push
mov
mov
pop
mov
sbb
ss
daa
mov
push
lea
imul
dec
lock
lcall
xchg
mov
push
scas
sub
pop
outsb
ret
push
adc
f2xm1
dec
stc
clc
test
gs
push
push
int
addr16
ja
aas
mov
daa
pop
xor
dec
frstor
mov
ljmp
stc
jne
out
push
pop
mov
mov
mov
mov
and
and
sub
inc
adc
out
je
push
lret
nop
dec
adc
repz
jmp
xchg
xlat
xchg
inc
inc
popa
loop
divps
sbb
cwtl
inc
outsl
dec
sbb
inc
sti
ret
mov
shll
fidivrs
mov
cltd
dec
or
movsl
push
or
fnstcw
enter
mov
lret
cmp
and
sbb
xor
lods
push
xor
clc
jo
dec
fabs
pop
bound
add
pusha
mov
test
inc
adc
jge
pusha
daa
mov
leave
sbb
push
imul
aas
out
sarl
fwait
enter
inc
in
cs
jmp
out
outsl
inc
add
into
loopne
nop
lret
es
fcomp
stc
ret
inc
or
imul
dec
js
lea
add
gs
pop
pop
mov
push
fstps
test
xlat
aad
dec
jecxz
mov
bound
jne
les
sub
mov
sbb
arpl
mov
aam
xchg
out
mov
in
xchg
imul
gs
add
xor
pop
xchg
enter
jno
sub
fisttpll
imul
or
add
push
fldcw
jbe
stos
xor
aad
inc
aad
and
stc
xlat
mov
aaa
lea
add
popf
mov
mull
jl
and
push
out
fistpl
sti
mov
jno
jg
adc
or
aad
xchg
icebp
sub
mov
into
jb
movl
bound
mov
stc
daa
int3
pop
rolb
cmp
mov
in
js
inc
sahf
notl
insb
test
push
add
fwait
call
cmp
mov
test
aaa
orb
in
lock
mov
or
fwait
enter
sbb
cmp
inc
sbb
hlt
iret
ljmp
popf
inc
addr16
jg
daa
hlt
fnstsw
and
sti
ja
int
mov
lods
fcmovnbe
loop
pop
lret
call
les
push
into
add
adc
repnz
cmp
and
ret
mov
inc
xor
loope
dec
cmpsb
lret
xlat
shrb
je
sub
sub
ja
test
or
addr16
jge
push
and
pop
jo
xchg
inc
adc
std
jl
sahf
lock
xchg
push
jns
pop
push
cmp
push
popl
or
adc
outsb
and
xlat
cmc
sub
jl
pop
pextrw
and
outsl
xchg
sub
adc
mov
inc
pop
mov
repnz
es
xchg
fildl
lahf
pop
cli
movsb
mov
stc
add
push
into
addr16
adcb
andb
test
je
dec
mov
mov
xchg
xchg
std
sbb
cmpsb
test
ja
jg
xchg
mov
xchg
nop
movsl
add
enter
jmp
inc
inc
nop
jb
fidivrl
insb
icebp
out
popa
mov
pop
int
daa
add
jnp
call
mov
imul
and
cmp
stc
stos
pushf
mov
or
pop
cmp
repnz
in
stc
dec
ljmp
pop
mov
addr16
sub
xor
jl
jg
or
adc
xchg
lahf
add
or
sub
pop
jne
sbb
sbb
ja
cld
scas
repz
cmpsl
cmpsb
pop
outsb
xor
xor
lock
and
rcl
std
test
pop
mov
mov
jne
out
inc
push
movsl
mov
add
movsl
fistps
ds
pop
or
ss
add
mov
sub
negb
pop
xchg
mov
fldt
lock
adc
sti
pop
xlat
add
orb
xchg
sbb
sbb
sbb
lret
dec
cwtl
movsb
pop
jl
xchg
lock
test
stos
xchg
cmpb
push
out
pop
dec
mulb
adc
shrb
shlb
cmp
jns
fbld
sub
sbb
aas
arpl
fldenv
mov
xchg
add
and
pop
mov
mov
pushf
sarb
aam
and
mov
iret
negb
in
sub
xchg
inc
pop
sub
dec
xchg
sbb
movsb
mov
cmp
insb
add
movsb
aam
sub
mov
std
sbb
lods
mov
push
lret
sbb
fldt
cmp
lock
sub
fwait
mov
lods
ds
jl
bound
stos
xchg
or
int3
mov
mov
and
addl
push
popf
mov
push
sbb
pop
push
fwait
loopne
lea
out
pop
out
pop
inc
xorb
ljmp
mov
add
jp
popf
aas
fsubrl
bound
flds
push
dec
inc
jb
ret
push
or
iret
xor
int3
loopne
pop
movsb
mov
jbe
cmp
sbb
sub
push
ja
xor
call
jg
pop
mov
fmuls
xor
push
dec
imul
rcll
nop
sbb
cmp
fmull
imul
or
mov
pushf
or
adc
lods
les
adc
test
sti
sub
stos
sarb
push
repnz
insl
mov
xchg
sbbl
lret
pop
divl
cmpsb
mov
aam
inc
xor
xchg
test
es
andb
lahf
mov
adc
loope
gs
lea
jne
jae
ljmp
xchg
ret
dec
ljmp
xchg
adc
jl
mov
test
adc
aaa
or
cmp
addl
or
into
mov
icebp
sbb
cwtl
xor
mov
gs
aas
mov
adcl
xchg
sbb
or
in
lahf
pop
or
and
stos
xor
int
les
cmp
cltd
in
ss
dec
jae
ss
stc
fsubrp
orl
push
imul
jl,pt
pop
xor
adc
leave
xchg
mov
cmp
jl
adc
inc
sub
jne
or
scas
rcrb
sub
or
mov
lods
sbb
lret
int
nop
clc
inc
sbb
rorl
test
mov
push
cmpsl
rorb
dec
sbb
jge
hlt
mov
andb
jne
add
stos
sbb
les
in
mov
and
cmp
clc
xor
rcl
jle
jecxz
shr
inc
test
ds
shrb
dec
xchg
mov
out
std
and
int
movsb
push
jnp
vunpckhps
inc
lods
fcoml
hlt
je
cmp
inc
shrl
xor
and
push
outsb
xor
movsl
inc
lea
lea
mov
xchg
pushf
cmp
int
scas
jp
xchg
add
clc
cmpsb
ss
movsb
adc
pop
jp
imul
push
in
mov
or
push
adc
cld
dec
cmp
fsubrl
add
test
dec
mov
fdivl
cwtl
xchg
cmp
sub
sub
pop
stos
adc
mov
repz
push
cltd
push
std
shll
insb
dec
xor
lahf
outsb
cmp
popf
cmpsb
sbb
jl
push
loope
mov
js
call
icebp
dec
sti
ja
rcrl
adc
into
mov
int
push
cmp
scas
rorl
inc
jp
std
out
aam
cli
mov
pop
lds
mov
enter
mov
fimull
xchg
int3
push
shrb
adc
imul
or
aad
mov
inc
push
test
push
stos
pop
cld
pop
push
outsb
jmp
push
aad
enter
dec
cwtl
js
inc
les
and
jno
fnstcw
rcrb
adc
sub
int
fdivl
imul
push
popf
out
inc
negl
inc
movsb
cmp
movsl
jge
testl
test
imul
repz
xchg
dec
pushf
cld
movsb
adc
call
imul
mov
aas
sbb
loope
lahf
mov
dec
mov
aas
mov
and
cli
loopne
pop
or
int3
inc
xchg
jnp
sub
adc
clc
lret
xchg
cmp
gs
rorl
std
add
hlt
pusha
shl
pop
lahf
es
popf
sub
mov
and
pop
lahf
sbb
divl
xlat
into
dec
push
imulb
push
andl
fwait
mov
mov
orl
loope
cmpl
inc
add
mov
lret
pop
mov
loop
xor
or
decb
imul
iret
shll
ja
mov
jno
mov
dec
push
xor
jns
xorb
shrl
lock
dec
dec
stc
aam
idiv
bound
dec
pop
scas
ror
rolb
andl
and
and
mov
jmp
mov
add
shlb
inc
popa
jmp
insl
fstpl
mov
pop
sub
add
pop
jle
jmp
int
or
push
push
xlat
nop
adcb
sarl
or
test
fdivl
imul
int3
xor
jg
orb
fldl
cmp
shrb
push
ds
imul
testb
pop
adc
inc
xchg
pop
or
mov
cmpsb
loope
inc
repz
push
xor
jg
shlb
shlb
fildl
repnz
aas
mov
scas
mov
pop
scas
xor
daa
rcrb
mov
sahf
cmp
sbb
and
xor
push
cmp
xchg
dec
rcl
dec
jbe
loop
inc
xor
inc
fsubl
sub
mov
cli
adc
sub
dec
fcompl
jns
cmpsb
stos
add
lret
scas
sbb
push
sti
pop
data16
mov
sbb
xlat
inc
sahf
dec
aad
adc
jns
mov
xor
movb
dec
in
lods
jno
mov
pop
adc
inc
subl
mov
inc
sarb
and
push
adc
mov
and
arpl
aam
add
cltd
dec
outsb
sub
mov
pop
aad
sbb
xchg
stos
imul
dec
jp
sub
lcall
sbb
and
das
ds
call
bound
mov
sub
adc
imul
test
pop
adc
xchg
jecxz
jge
sbb
jne
cmp
jns
out
xchg
iret
adc
ljmp
sbb
out
mov
adc
sahf
fs
pusha
enter
cmpsb
lcall
xor
fldl
test
inc
sbb
pop
mov
icebp
jnp
mov
daa
test
cli
add
jge
in
cmpsb
mov
push
mov
and
push
jecxz
dec
mov
push
sub
xlat
aad
jno
sahf
cmpsb
or
push
mov
imul
adc
mov
xchg
loop
cmp
nop
push
mov
das
out
out
stc
jg
jne
pushf
jnp
or
nop
xchg
cmp
test
inc
mov
jno
sub
shll
add
add
decb
add
sub
adc
out
insb
addr16
pop
stos
inc
xor
mov
loop
or
stc
jge
jecxz
fldcw
ss
push
and
jb
and
xchg
lds
cmp
fbstp
lahf
mov
cwtl
or
dec
sub
out
jb
mov
test
jo
ja
push
movb
inc
gs
mov
js
jmp
test
jne
push
adc
inc
fptan
xor
mov
mov
or
lahf
in
outsb
push
out
stc
dec
xor
jl
jnp
mov
dec
push
inc
mov
shrl
mov
sti
cwtl
fldt
mov
js
rdmsr
jo
jo
out
push
sahf
frndint
push
or
subb
push
mov
and
dec
mov
addr16
decb
lret
into
mov
jne
fsubl
test
xor
fbstp
xchg
push
and
and
jg
insl
jmp
add
sahf
out
mov
daa
filds
jmp
pop
mov
lea
addr16
xor
inc
xor
std
xchg
jle
pop
pop
cmp
clc
jne
in
xchg
fcomps
push
sarb
enter
dec
xchg
mov
and
jno
mov
mov
movsb
adc
lods
sub
and
sub
pop
jge
out
mov
sub
sbbl
in
popf
or
mov
mov
jnp
pop
ja
and
cmp
clc
fcmovbe
lods
mov
mov
cmc
mov
inc
push
mov
dec
dec
ljmp
adc
and
call
repnz
dec
dec
roll
mov
mov
mov
push
scas
add
ljmp
pop
shrb
scas
inc
add
xchg
add
stos
int
movsl
dec
or
roll
outsb
pop
lds
adc
push
test
xchg
add
outsl
mul
push
or
mov
aam
ret
pop
mov
insl
adc
data16
leave
pushf
sub
pop
cmpsb
stos
stos
mov
daa
mov
xchg
xchg
lock
sbb
sbb
inc
dec
test
loope
adc
inc
addr16
and
sub
jmp
lret
hlt
jbe
adc
push
cwtl
hlt
data16
repnz
daa
cmpsl
andl
add
fildl
and
ja
movl
stos
xchg
pop
stc
jecxz
mov
lret
xor
pop
inc
fsubr
and
pop
push
aad
or
dec
mov
lret
add
sbb
sub
cltd
lret
mull
jae
xchg
xchg
mov
dec
stos
adc
ret
dec
ucomiss
cmpsb
ljmp
jnp
dec
xchg
dec
data16
scas
outsl
jb
jp
in
mov
xchg
movsl
xor
push
movsb
sbb
push
sub
mov
sub
movsb
pushf
cltd
and
pusha
movb
daa
mov
cltd
fnsave
cli
mov
pop
loope
and
in
mov
pop
loopne
scas
mov
push
rcr
mov
out
xor
int
addl
loopne
mov
jge
mov
cmp
and
dec
loopne
aas
or
jns
mov
cli
fwait
imul
arpl
mov
les
xchg
or
pop
lock
loopne
jbe
lock
dec
in
lret
sbb
out
inc
or
adc
inc
cmp
fwait
jnp
xchg
or
or
cmp
filds
mov
cmp
xor
or
jae
into
popf
outsb
int3
loop
xor
dec
imul
push
pop
dec
fdiv
test
xor
fcomps
test
sub
push
aam
pusha
sbb
into
std
inc
imul
add
mov
mov
jae
sbb
lock
or
xchg
xchg
lods
lret
or
subl
or
pop
adc
xor
pop
cmp
xlat
and
adc
je
xchg
push
adc
iret
ret
jb
lret
lret
and
mov
cli
dec
mov
cmp
mov
xor
in
adc
sub
pushf
movsl
add
sub
arpl
sbb
add
aaa
jnp
sub
fisttps
jg
jne
faddp
inc
js
shl
and
xchg
ds
shl
outsl
push
outsb
pop
addl
aam
ss
popf
testb
fnstsw
ss
sbb
sti
or
cwtl
mov
test
int
xchg
fdivp
xchg
jne
cmp
mov
mul
cmp
adc
in
vpcomw
pop
inc
insb
xor
jg
call
mov
test
add
dec
popf
dec
popf
das
dec
fwait
adc
enter
scas
or
mov
icebp
add
mov
scas
mov
xor
testl
sub
popf
sbb
mov
cmc
xchg
sbb
jle
outsl
stc
xchg
xchg
movsl
mov
xor
je
jno
dec
mov
push
pop
sbb
inc
pop
ja
mov
std
out
cld
iret
xchg
mov
outsb
push
mov
aam
pusha
and
test
subl
int3
dec
adc
addb
add
idivl
xchg
push
aas
shlb
sti
clc
jns
imull
ret
adc
cmpsl
ja
movsb
dec
push
out
lret
mov
xchg
push
lock
aaa
mov
lods
jno
cld
push
xchg
lods
call
xchg
in
fistps
mov
mov
loop
lds
inc
popa
mov
pushf
push
vrcp14sd
rcl
mov
cmp
jnp
sub
mov
pop
jnp
int3
cmp
fldl
pop
lret
mov
pop
and
inc
mov
cwtl
gs
test
sbb
lods
iret
int3
sub
mov
mov
cltd
jb
push
fistps
aad
mov
mov
mov
loope
inc
jb
add
xchg
adc
pop
push
xor
mov
int
les
popa
out
and
push
adc
scas
xchg
andb
sub
imul
push
cmp
das
popa
hlt
mov
out
cld
sbb
lods
add
xlat
lock
lods
ret
in
stos
mov
orb
cmpb
inc
loope
call
cmp
in
cmp
out
xchg
mov
jae
out
fstpl
push
jo
aas
xchg
aaa
mov
jb
js
sub
sub
mov
repnz
inc
fcomps
clc
dec
adc
fildll
addr16
jae
insl
das
xacquire
aaa
testl
cmp
out
cmpsb
lods
mov
sub
mov
std
enter
inc
loopne
popf
inc
jmp
sbb
mov
xor
xor
mov
lods
dec
xor
std
adc
cli
pop
push
stos
xorl
fisubrs
inc
insb
ret
into
add
jle
xlat
or
cmp
jmp
fcomi
mov
mov
mov
icebp
test
sub
out
mov
mov
sbb
sub
fistpl
rorl
mov
adc
jne
scas
cli
pop
pop
fwait
push
icebp
adc
or
sub
lock
or
mov
leave
outsb
add
sbb
in
test
xchg
sbb
shlb
loope
sub
dec
mov
popa
cmp
sbb
xor
xchg
mov
add
xchg
or
push
jno
pusha
and
nop
xor
jmp
stos
repnz
test
incl
fmull
mov
and
movsb
addr16
ret
insl
xor
pop
stos
push
sbb
mov
in
rolb
inc
xchg
orb
adc
popa
jne
lret
outsb
mov
scas
mov
xchg
mov
fidivl
arpl
pop
add
arpl
sub
jns
gs
cmp
pop
xor
testb
cmp
dec
and
push
fldt
cld
sub
sub
push
inc
sahf
inc
movsb
ljmp
inc
outsl
lret
jne
es
or
ljmp
negl
or
mov
mov
das
fidivl
icebp
xor
pop
lret
outsb
xchg
push
sbb
jne
rcr
cmp
push
aaa
jl
andl
int3
inc
into
pop
movb
cmpsb
sbb
imul
mov
pop
std
rolb
test
aas
adc
jmp
pop
pop
push
cmp
xchg
ds
sbb
jb
jge
pop
xor
and
arpl
inc
and
insb
sub
gs
rcrl
ja
jns
and
lock
ror
test
sahf
lret
out
sahf
jl
adc
int
call
inc
jecxz
push
xlat
lcall
insl
ret
in
daa
jp
add
int
cli
int3
dec
std
and
cs
or
cmp
clc
rcr
cld
fs
or
push
scas
dec
mov
mov
ret
popf
aas
xor
sub
push
mov
in
pop
and
mov
sbb
dec
xor
sbb
jo
sub
mov
cmp
insl
dec
std
mov
mov
dec
jns
jb
or
outsb
rcrb
rep
in
mov
int3
sub
dec
movsb
cmp
test
lods
mov
into
loope
sub
mov
xchg
stos
loope
push
int
jmp
fistpll
sub
cltd
push
xchg
ljmp
xchg
sbb
call
jecxz
cmp
insl
js
in
push
inc
loop
in
aas
or
cld
testb
jnp
cmp
ret
fistps
xor
xchg
and
sbbb
jl
mov
inc
je
sbb
push
sbb
arpl
jmp
jae
std
int3
loopne
fwait
hlt
fs
outsl
sub
mov
pop
jg
mov
or
cli
lcall
add
pop
int3
dec
shrb
ds
imul
mov
cmp
addr16
addr16
mov
jbe
push
int3
out
stos
in
out
inc
dec
lea
pop
testl
jmp
adc
rorb
or
and
mov
jp
out
out
mov
push
xor
pop
fstps
xor
add
arpl
cltd
adc
inc
jo
nop
dec
lcall
test
adc
mov
xor
loope
stos
cmpsl
xchg
pop
test
lods
mov
pop
out
push
xchg
xor
jecxz
int
fisttpl
xchg
push
jmp
in
cmp
xchg
mov
out
mov
jb
in
sbb
cmc
in
bound
dec
clc
or
pushf
xchg
lods
push
sub
dec
and
gs
in
fisubrs
sub
loop
fcom
adc
dec
fistl
mov
jbe
pop
and
add
add
dec
push
dec
aas
add
in
sub
pop
adc
scas
or
andnps
and
in
or
mov
mov
test
dec
cmp
push
rol
pop
mov
iret
mov
movups
xchg
dec
or
or
loop
popa
rcrb
mov
inc
cs
daa
out
hlt
test
inc
call
cmpsb
xchg
das
imul
out
cltd
jbe
out
inc
cmpsb
popa
mov
ret
mov
outsb
pop
stc
add
lahf
pop
ds
neg
jge
mov
test
cmp
in
xchg
and
push
into
pop
pop
xlat
dec
push
dec
jae
mov
xor
stos
fstl
push
enter
push
ljmp
out
out
int3
mov
lods
fninit
jb
int3
loop
stos
jg
ja
adc
outsb
popa
cmp
mov
cli
pop
xchg
movsl
out
inc
or
mov
xchg
push
fs
cmpsb
or
js
jb
xor
jp
das
cmp
outsl
sub
push
idiv
xor
aam
imul
adc
mov
add
mov
adc
mov
mov
mov
std
fsubrl
push
mov
popf
xchg
int3
fdiv
pop
loope
insb
push
nop
and
mov
ljmp
cltd
sbb
rorl
test
add
movsl
mov
mov
lods
inc
xor
mov
iret
sbb
adc
push
hlt
add
repz
xchg
cmp
dec
dec
inc
mov
aaa
cmc
call
or
popa
in
lea
imul
leave
test
jae
xchg
das
mov
stos
lds
mov
inc
outsb
lds
cli
xchg
xchg
leave
pop
sub
jae
mov
inc
mov
mov
xor
sub
and
mov
push
dec
scas
adc
or
sbb
cmc
inc
cwtl
pushf
das
daa
push
data16
mov
xchg
sbb
sbb
bnd
shlb
hlt
mov
aam
loopne
mov
popf
dec
and
test
xlat
jp
xchg
and
mov
or
stc
push
dec
dec
mov
repz
inc
xor
cmpsb
xlat
pop
jnp
smsw
shl
adc
sub
int3
data16
in
dec
mov
outsl
xor
fidivl
push
or
std
mov
mov
in
int
loopne
and
push
add
pushf
jb
xor
mov
pop
lret
jl
cs
mov
mov
pop
push
cmp
inc
xor
insb
sub
cmpsb
xor
stos
push
push
lods
out
sub
lock
cmpsb
xchg
shll
cltd
test
or
jb
out
inc
cmpsb
jnp
cmp
xlat
movsl
lret
stos
sbbb
loop
outsl
and
push
cwtl
hlt
adc
mov
push
arpl
les
std
adc
push
mov
push
pop
inc
mov
push
pop
lds
repz
lret
test
lret
xlat
inc
sbb
jae
mov
or
pop
rcrl
xlat
and
cmp
outsb
xor
xchg
mov
popa
rcrb
aad
lods
and
das
test
push
lods
iret
ja
inc
pusha
xlat
jne
pop
and
xchg
or
jae
and
adc
push
jmp
mov
cli
cmp
inc
scas
test
aad
pop
movsl
pop
mov
in
add
dec
add
orl
push
cmpsl
rcr
or
lods
adc
xor
popa
mov
out
push
test
inc
rol
sbb
inc
jb
xchg
mov
pop
push
lods
add
adc
sti
xor
or
nop
popl
mov
cmp
ret
lret
daa
test
or
add
xchg
or
in
into
loop
jbe
dec
mov
mov
mov
into
dec
jl
dec
sbb
es
and
in
xor
rol
pop
movsb
cmp
lahf
dec
mov
add
pop
and
or
es
jle
jmp
push
js
or
mov
enter
ss
fidivrs
es
adc
add
cs
mov
sarb
mov
loope
or
push
adcl
sub
adc
add
sbbb
not
jl
cmc
jnp
sbb
inc
xor
jb
loop
sub
int
or
xor
adc
cmc
push
cmp
inc
jns
lea
adc
jecxz
addr16
lods
mov
cmpsl
mov
xor
pop
mov
hlt
call
andl
jp
push
enter
mov
mov
fs
hlt
jmp
mov
ret
je
icebp
xor
jmp
cmp
das
clc
outsl
icebp
and
sbb
mov
sub
cmc
dec
jno
shr
aam
sub
cmp
adc
aaa
dec
in
pop
mov
std
xchg
push
fistps
in
mov
mov
cld
lock
in
inc
dec
add
mov
lahf
mov
inc
test
pop
clc
sbb
push
sar
loopne
sub
cmp
outsb
mov
addl
repz
xorb
jmp
sub
sbb
nop
mov
jmp
test
loop
imul
mov
es
xor
or
fdivr
adc
add
add
addb
jmp
pop
push
shrl
stos
ret
mov
jns
je
out
xchg
decb
xchg
pop
in
or
imul
pop
dec
pop
leave
mov
stc
sarb
stos
cmp
pop
pop
mov
cmp
lea
test
mov
mov
mov
xchg
cmp
inc
jb
inc
aad
iret
adc
scas
cmp
mov
loopne
lret
sub
cld
jmp
inc
or
xor
test
mov
pop
cmp
add
xorb
inc
div
imul
leave
mov
push
push
pop
dec
pop
add
mov
leave
subl
cmp
cmc
mov
push
cmp
enter
and
in
xor
mov
xor
and
pop
fwait
mov
cmpsl
pop
mov
jge
mov
add
fidivs
mov
insl
test
les
or
cmp
notb
iret
fdivr
mov
xchg
mov
push
or
jbe
push
add
xchg
xor
pusha
arpl
mov
scas
mov
jae
mov
ftst
mov
inc
out
pushf
jae
jle
popf
loopne
push
fs
shl
adcl
lcall
dec
les
pop
scas
call
scas
into
inc
out
das
xchg
adc
and
pop
daa
outsl
pop
xchg
inc
mov
add
add
incb
inc
and
fcomi
dec
pandn
xor
jo
xchg
ret
outsl
ljmp
add
xchg
cld
xor
lds
cmp
dec
push
rorl
xchg
test
les
adc
sub
push
jl
xor
or
mov
das
mov
cmpb
inc
adc
sbb
fcompl
test
cwtl
hlt
test
mov
push
push
push
push
dec
arpl
lret
stc
jns
jo
sti
xchg
jle
iret
das
pusha
cmpl
movsb
cmp
or
les
xor
imul
aad
cmp
aad
xlat
lret
cltd
ret
outsl
iret
pop
pop
fldenv
jns
mov
std
std
outsl
xor
fwait
roll
mov
test
push
data16
outsl
lret
xchg
dec
mov
cmp
inc
iret
jp
push
jp
and
scas
mov
jne
imull
lret
add
inc
imul
dec
cmp
shrl
dec
xor
inc
imul
mov
push
rorl
inc
inc
mov
or
add
xchg
sti
push
pop
ja
mov
mov
dec
adc
adc
fwait
mov
cmpsl
mov
and
lcall
jnp
out
fdivrs
mov
pop
and
xchg
sbb
push
loope
pusha
pop
xchg
mov
fwait
rorb
insb
cmp
mov
das
testl
add
sub
mov
jne
add
or
pop
jnp
push
pop
jge
jg
sahf
xchg
aad
push
lods
cmc
and
pop
mov
mov
testb
je
cmpsb
in
cmpsb
add
push
call
jb
inc
fwait
push
clc
inc
cwtl
lds
lods
pusha
adc
cmpsb
push
lock
lret
xor
out
xor
jno
andl
jmp
jecxz
jg
ljmp
mov
xchg
clc
jbe
pop
in
test
cmp
hlt
out
dec
stc
arpl
subl
jl
mov
cmp
fadd
jb
or
mov
js
jno
enter
sti
mov
fmuls
dec
inc
jb
push
and
jmp
es
out
loopne
sub
jmp
pushf
xorb
mov
and
xchg
sahf
mov
sahf
sti
call
shll
jbe
xchg
das
jns
xchg
call
xor
add
and
dec
jge
mov
lods
test
inc
adc
sbb
nop
dec
rcr
addl
dec
lods
mov
repz
aam
dec
stos
cwtl
mov
clc
xor
loopne
loope
imul
fimuls
iret
sub
mov
xchg
mov
jge
and
mov
xchg
imul
je
and
test
xchg
rolb
scas
movsb
imul
fisubrs
test
out
je
ja
popf
insl
or
push
jge
ds
push
cmp
icebp
xchg
xor
mov
push
adcl
cmp
lods
adcl
testb
shl
mov
sahf
js
xchg
bound
inc
cli
ds
jl
pop
icebp
scas
sahf
in
dec
xor
out
or
je
fcoml
and
insl
scas
outsb
sti
xor
fstpl
sub
addr16
sar
ljmp
in
imull
pop
out
mov
sub
push
push
push
sub
sarl
inc
xor
aaa
and
mov
pop
in
cmpsb
dec
test
pusha
add
sbb
sbb
jl
jo
sbb
repz
rep
sub
push
and
sbb
sti
test
cld
mov
outsl
sub
lods
jl
imul
test
push
setne
fidivs
hlt
stc
pop
dec
stc
mov
clc
jg
in
adc
mov
shr
jno
loop
sbb
pop
or
mov
cmp
push
cmc
aas
testb
insl
adc
mov
bound
ljmp
inc
cmp
lds
aam
cmpsl
addr16
mov
mov
pushf
adc
rcll
push
nop
adc
jne
orl
in
loope
push
dec
cmpsl
pop
mov
or
jmp
inc
std
cmp
dec
adc
unpcklps
or
ret
inc
clc
mov
loopne
gs
xor
out
sbb
sbb
testl
mulb
ss
xor
stc
push
stos
fmul
inc
je
mov
xchg
test
cmp
cli
sahf
cli
push
jo
loope
mov
imul
pop
cwtl
pop
mov
jmp
arpl
shlb
add
inc
movsb
aad
sbb
sbb
xchg
pusha
dec
outsl
xor
icebp
repnz
pop
hlt
adc
lcall
insb
enter
inc
xchg
je
dec
cmp
shrb
cltd
mov
rcl
popf
popa
pop
mov
shll
sbb
sbb
cmp
mov
cltd
lea
sub
out
aaa
sub
mov
fwait
sub
test
xor
jb
insb
das
xchg
popf
xchg
sarb
leave
jg
cmp
outsl
adc
test
add
fadd
push
jmp
mov
cmp
push
sub
push
cld
dec
pop
sub
push
xor
inc
in
lea
or
pop
inc
add
movsb
stc
inc
dec
cli
push
sbb
pop
push
rcrb
test
ret
lahf
scas
or
sti
lea
jb
cmp
andl
xor
jnp
repz
es
cmp
xchg
aam
inc
pushf
or
mov
sub
jne
ljmp
loop
xchg
outsl
jge
fdivl
sub
jg
mov
and
pop
movsl
rorb
mov
dec
fistpl
ficoms
inc
inc
mov
jno
fbstp
movsl
pusha
out
mull
and
scas
aaa
push
cmp
out
mov
xchg
cli
popf
sub
lods
lock
in
loope
pop
push
fsubp
les
inc
cmp
mov
pop
inc
cmpl
mov
test
mov
fwait
dec
ljmp
pop
test
int
dec
push
dec
push
pop
adc
mov
push
dec
mov
add
ljmp
into
and
xlat
cmp
fdivr
xor
mov
or
adc
test
push
xor
shl
inc
iret
ds
mov
pop
cmp
sbb
adc
cmpsb
iret
push
pop
mov
mov
movsb
ficoms
pop
int
or
push
adc
ja
mov
push
mov
and
fistpll
std
xlat
cld
repnz
test
fidivrl
inc
notl
jl
adc
cs
mov
xchg
jp
fiaddl
mov
movsb
mov
push
in
movsl
in
sti
xorb
cmp
fnsave
push
repnz
test
jecxz
cld
pop
xchg
sbb
arpl
hlt
dec
pop
and
cmpsb
mov
push
add
cmp
fcompl
movl
mov
test
lods
dec
push
cmp
outsb
repnz
push
das
lcall
dec
pop
notl
into
and
sub
xor
nop
and
in
test
mov
cltd
mov
sub
shl
dec
adc
in
jmp
push
into
jb
lea
xchg
sti
push
sbb
pop
ret
data16
lcall
mov
adc
cmp
mov
cmp
and
shll
mov
sti
adc
lret
and
std
out
mov
adc
test
lock
and
adc
push
sbb
icebp
std
dec
scas
pop
clc
pop
mov
push
cld
jmp
cs
add
push
push
or
mov
out
xor
std
clc
cs
push
adc
mov
shll
les
jbe
das
xor
sub
hlt
add
loop
and
cmp
shll
nop
lods
in
pop
hlt
mov
inc
cmc
add
js
fldcw
xor
rcl
gs
movsb
repz
sub
ljmp
stc
lods
rcr
imull
push
mov
pop
and
sub
pop
dec
jp
fildl
lret
dec
sbb
insl
cs
ret
or
addb
push
jmp
mov
dec
xchg
mov
divb
mov
dec
xlat
into
insl
clc
push
rorb
sub
rorb
jg
mov
pop
jbe
add
hlt
inc
sbb
cmpb
xchg
out
int
pop
pop
rorl
cmp
arpl
std
lds
mov
sbb
pusha
aaa
pop
xlat
adc
dec
scas
dec
mov
mov
or
fists
and
lods
ror
lret
movl
scas
repz
inc
mov
dec
outsb
imul
ror
flds
inc
int3
enter
shlb
arpl
test
adc
push
adc
cmp
pop
sbb
push
dec
lods
push
add
sti
into
lret
and
in
xor
push
std
cmpsb
inc
leave
jmp
xorb
push
mov
imul
je
mov
in
mov
adc
call
sti
jmp
xchg
dec
and
les
mov
xchg
push
jbe
in
xchg
aaa
ja
sub
mov
or
sbb
jl
fnstcw
jl
out
jns
adc
in
imul
imul
test
jp
lcall
jbe
mov
xor
or
mov
mov
add
fadds
pop
movsb
jecxz
push
repnz
lret
out
inc
xlat
inc
or
dec
ret
inc
sbbl
jbe
push
out
movsl
sbb
mov
jbe
cmp
es
gs
push
ja
add
push
std
mov
mov
push
jo
push
mov
ja
pop
lahf
jle
pop
mov
stc
sub
xor
rclb
vpmaxsw
xchg
jl
cltd
jl
mov
sub
inc
cmp
call
xor
pop
clc
cmp
loop
xchg
push
push
push
sbb
stc
push
ret
pop
imul
sbb
loopne
gs
shr
stos
addr16
sub
sub
jmp
int
jle
mov
aaa
xor
repz
mov
add
sub
ss
cmpsb
test
loop
xchg
imul
cwtl
cwtl
test
jb
jecxz
cmp
xchg
sbb
inc
testb
dec
daa
repnz
jo
test
cmp
push
or
test
test
cmp
inc
inc
jns
sahf
mov
sbb
cld
jg
insl
inc
repnz
xchg
aam
test
dec
pop
push
int3
push
stos
pop
mov
test
imul
inc
je
inc
arpl
fldenv
je
inc
jg
das
mov
adc
sbb
push
or
fs
ficompl
notb
inc
gs
xchg
mov
jne
repnz
rorb
hlt
xor
jo
cmpsb
jmp
ljmp
or
daa
repnz
lcall
je
or
mov
sbb
mov
xchg
popa
mov
sub
push
pop
negl
dec
xor
push
dec
or
cmp
pop
decw
cmp
mov
pusha
jnp
mov
stos
pop
pop
fdivr
jno
insb
push
xchg
jno
xchg
inc
jle
shll
cmc
cmpsb
push
sub
mov
loope
lods
sub
in
das
jmp
jge
jb
add
or
call
into
pop
and
aas
jnp
stos
sub
ret
mov
add
ret
sbb
out
cmp
push
pop
repnz
cmp
and
cmp
sbb
mov
adc
jae
testl
jb
lret
pop
or
inc
ret
test
pop
xchg
arpl
mov
mov
or
add
mov
pop
cmpsb
sbb
mov
cs
pop
test
cmp
pop
xchg
jge
mov
fldl
add
hlt
sub
aas
int
movsb
adc
test
js
out
je
sbb
pop
mov
nop
ret
or
push
xchg
cmp
jg
bound
pusha
mov
mov
jecxz
adc
leave
xor
stc
outsb
push
cmp
mov
lcall
rolb
push
mov
out
jo,pt
mov
push
or
arpl
outsl
push
push
das
and
adc
adc
xchg
mov
nop
imull
out
icebp
stc
pop
sahf
fadd
test
jecxz
nopl
push
scas
shll
and
push
das
adc
dec
sbbb
cltd
xchg
push
inc
sarb
cld
cmp
js
inc
in
insb
ret
mov
sub
mov
push
inc
fisttpl
sbb
mov
jge
cmp
mov
div
xchg
push
es
push
shll
ret
adc
lret
sbb
dec
shlb
pop
cmpsb
fadd
or
repnz
add
adcl
xchg
mov
dec
shlb
xor
mov
sarb
pop
mov
add
push
bound
mov
loopne
arpl
sub
pop
inc
mov
dec
insl
test
sbb
fbstp
in
movsb
xor
ret
mov
mov
data16
add
xor
lds
mov
dec
or
mov
mov
xor
fidivrs
stc
inc
shrb
and
and
jg
xchg
mov
popf
push
hlt
mov
mov
mov
shll
lods
and
fisubrs
imul
push
jbe
mov
add
jle
aad
xor
mov
sub
mov
mov
and
push
cmpsl
sbb
ret
pop
scas
arpl
sbb
fistpll
test
push
dec
xor
xor
scas
or
inc
cmp
sbb
mov
aaa
das
lock
es
push
subl
stos
jmp
pop
adc
hlt
insb
addl
jno
das
cmp
das
add
cmpl
xchg
push
mov
mov
mov
dec
sbb
inc
scas
jg
popa
ja
and
dec
shl
push
jp
add
mov
fldenv
mov
int3
cmp
dec
fdivr
or
js
and
xchg
rcll
dec
pop
mov
scas
xchg
pop
jl
mov
mov
popf
les
dec
pushf
push
inc
mov
mov
cli
jge
or
mov
decl
mov
std
nop
pop
ljmp
bnd
sub
aaa
mov
mov
sub
fistl
push
mov
pop
popl
inc
add
sbb
icebp
add
idivb
adc
add
mov
xchg
add
lea
movsl
ja
xchg
mov
sub
mov
push
cld
jecxz
pusha
stc
lea
mov
insb
rolb
jecxz
inc
pop
sub
test
clc
pushw
jns
mov
mov
mov
push
loop
mov
aaa
mov
subl
dec
jne
leave
jmp
bound
dec
dec
data16
xchg
nop
dec
lea
arpl
push
mov
sub
and
mov
cmp
js
and
pop
imul
mov
test
adc
xchg
insl
or
outsl
in
cmp
es
xchg
jmp
rorl
inc
jecxz
cld
mov
lods
insb
xchg
cmp
enter
movsl
pop
adc
pop
enter
repz
andb
stos
daa
sub
sbb
jp
xor
repz
add
xbegin
push
lcall
push
loope
push
xchg
pop
fs
jmp
adc
lret
out
rcr
inc
shrb
cmc
push
mov
clc
mov
leave
cmp
cmp
pop
cmp
jo
and
shlb
repz
out
mov
xchg
mov
mov
lock
lods
arpl
aas
sbb
mov
sub
mov
loopne
lods
enter
inc
addb
js,pn
mov
push
mov
pop
outsl
popa
das
and
fstpl
ret
and
pop
xor
pop
push
add
lcall
adc
lahf
pop
bound
aad
loop
fcoml
clc
xlat
ljmp
mov
scas
jl
shlb
lret
mov
test
push
cwtl
stos
stos
push
fs
inc
rcl
adcb
fsubr
cltd
or
cli
mov
jnp
fwait
xor
push
out
inc
jmp
add
cmp
cld
mov
or
cs
ret
inc
jbe
adc
mov
mov
ja
int3
mov
aam
push
cmc
repz
loope
inc
mov
push
pop
js
in
out
push
sarb
xchg
clc
inc
cmp
cmp
adc
pop
push
and
mov
xchg
mov
cmp
jge
cltd
push
inc
add
sti
andb
in
lods
mov
jp
cld
or
mov
or
loopne
jne
xchg
divb
ret
movsb
cmpsb
sbb
add
fnsave
jg
out
int3
pop
xor
mov
mov
cmpsl
xchg
lcall
loopne
pop
push
sbb
cmp
mov
sbb
idivl
or
xlat
mov
enter
jp
stos
adc
and
xor
pop
xchg
xchg
inc
inc
sub
mov
xchg
and
in
xor
cld
int
imul
push
addr16
mov
loope
icebp
fwait
lods
flds
push
mov
iret
sub
or
loopne
pushf
bound
insl
and
xor
xor
stc
add
and
mov
leave
push
lds
push
mov
mov
adc
pop
loope
add
ja
xor
push
into
pop
cmp
jp
sub
es
lds
imul
adcb
shl
push
cmp
mov
mov
xor
cmp
leave
int3
pushf
pop
repz
push
push
test
mov
xchg
mov
or
xchg
and
add
cltd
test
stc
mov
adc
pop
sbb
lret
xlat
aad
in
or
dec
jno
imul
xchg
arpl
rcr
inc
insb
xor
les
jne
loope
in
sbb
lods
aaa
ja
xcrypt-ecb
cmpsl
dec
sub
lods
repnz
push
daa
dec
dec
sti
inc
ret
cmp
jno
jnp
adc
mov
scas
scas
adc
imul
jg
pop
xchg
mov
int
cmp
xchg
inc
loopne
fbld
push
dec
dec
xor
push
jg
cmp
dec
mov
push
push
push
dec
pop
jle
stos
pop
inc
push
sub
pop
lods
jo
mov
and
lods
jge
lods
loope
stc
xchg
or
outsb
xor
push
iret
add
imul
js
ja
sub
mov
jmp
lods
push
aad
sbb
idivl
and
adcb
and
call
lods
negl
hlt
mov
pop
ret
adc
rclb
mov
push
clc
adc
out
dec
dec
add
xchg
mov
imul
fmuls
xor
push
pop
arpl
jge
mov
stc
mov
sbb
cs
dec
or
dec
jno
in
popf
xchg
jmp
or
jp
mov
and
icebp
inc
cmp
push
pop
xchg
insb
call
add
bound
cmp
push
ds
fisttps
ret
mov
repnz
push
popa
inc
ja
loop
ficompl
or
outsl
sti
push
sub
jb
mov
adc
cs
in
pop
test
insb
test
mov
psrlq
mov
lock
fbld
mov
test
hlt
gs
out
lea
xchg
and
add
call
test
aad
mov
outsb
and
mov
aas
int
pop
jb
or
fildl
shlb
aam
xchg
rcrl
lea
cltd
rcll
insb
mov
cli
shl
mov
in
mov
das
lea
stc
loopne
in
sbb
add
xor
pop
mov
push
push
pop
je
inc
mov
inc
and
stos
aam
test
lods
pop
or
mov
and
js
loopne
lock
xchg
jg
mov
movsb
push
addr16
jmp
int3
addr16
imul
mov
imull
pop
cmp
lret
push
sbb
inc
icebp
fdivrl
lret
loope
or
insl
xor
add
idiv
or
or
sti
in
sub
dec
mov
sub
xchg
stos
mov
cmp
and
inc
mov
adc
jnp
stos
out
or
mov
les
jb
test
rcll
jg
xor
dec
movsb
sti
aam
dec
cwtl
dec
and
pop
xchg
pop
cltd
mov
mov
leave
mov
add
add
int
pop
mov
adc
jns
stos
push
mov
test
ret
xor
jae
cmpsl
push
mov
jl
xchg
push
cmpsl
ja
mov
jo
fwait
out
xchg
stc
sbb
xchg
es
rorl
inc
mov
jne
or
cwtl
and
mov
mov
xchg
mov
repz
out
notl
loope
sbb
int3
push
mov
in
push
pop
movsb
add
in
push
lock
mov
stos
rcll
xlat
xchg
push
fadds
lods
pushf
xchg
arpl
idivl
cmp
sub
push
cmpsb
jle
add
jnp
faddl
mov
xchg
cmp
int
repnz
mov
sti
enter
insl
jp
mov
aad
lret
or
push
push
in
iret
push
sar
mov
push
out
popf
in
jo
jo
mov
mov
sarb
lds
pushf
cmp
lahf
sub
int3
cld
jmp
adc
pop
sub
jl
push
outsl
cli
data16
mov
xchg
popf
push
js
cmp
xchg
insl
loope
jecxz
movsb
cmp
cld
out
rclb
out
xlat
clc
mov
dec
or
dec
loopne
lret
jl
rclb
xchg
mov
jg
and
or
js
das
popf
xchg
push
pop
out
ficoml
sbb
mov
pushfw
cmp
jle
push
mov
adc
call
jge
sub
repz
fstpl
popf
xchg
jno
xlat
mov
xlat
inc
in
sub
push
faddl
and
mov
lcall
ljmp
mov
mov
jb
sub
mov
in
ret
ret
loope
stos
lahf
movsb
mov
lret
cltd
inc
mov
adc
mov
jne
insl
adc
jmp
fistl
push
incl
aas
pop
push
daa
cmpl
mov
cmp
lret
mov
jp
adc
scas
mov
popf
push
stc
insl
inc
pop
jo
std
imul
loop
dec
daa
into
xchg
adcb
arpl
and
int3
lahf
or
test
int
lret
push
or
sub
rorb
push
adc
cld
sarl
in
xchg
repz
std
fnstsw
test
add
ffree
clc
addb
xor
add
bound
fisubl
lds
sbb
dec
adc
cmpsb
cmp
clc
sbb
add
pop
cmp
add
out
fidivs
mov
scas
in
les
mov
fcoml
repnz
fiaddl
xor
out
or
in
and
out
cltd
or
popf
push
pop
scas
aad
popf
adc
xchg
in
int
push
lcall
mov
cmc
repz
or
icebp
pop
push
and
arpl
mov
push
push
out
mov
pop
idiv
das
loope
adc
cltd
xor
fisttpl
mov
sbb
cltd
adc
mov
mov
jmp
popf
jne
ret
ss
mov
dec
cmp
stos
xchg
dec
and
cs
movsb
push
sbb
fiaddl
mov
dec
add
stos
lret
pushf
es
aaa
lret
fs
fcoms
xor
xor
cwtl
rcrb
xchg
pop
les
and
jne
ds
ret
test
test
roll
je
sub
mov
sbb
in
stc
mov
pop
xorl
adc
test
dec
fwait
iret
mov
shlb
fdivrs
dec
xchg
mov
cmpsb
sbb
adc
sub
subb
das
gs
pop
cmp
xchg
jl
gs
cmp
xchg
imul
add
jg
push
pop
repnz
mov
cli
xchg
push
adc
addr16
inc
movsl
mov
dec
rol
cmp
pop
cltd
mov
push
test
dec
paddb
sub
push
out
inc
xor
fabs
clc
lods
ljmp
frstor
add
jae
dec
repz
dec
jp
push
dec
popa
fcompl
and
sbb
call
mov
call
scas
mov
sbb
xor
push
pop
mov
xchg
mov
icebp
pop
rep
sbb
xchg
push
hlt
mov
push
mov
int3
loopne
add
outsl
pop
and
xchg
add
lcall
jo
mov
stc
fdivl
xchg
rorl
push
repz
lcall
and
inc
lods
dec
in
filds
cmp
xchg
cmp
add
movsb
xchg
loope
or
rorb
inc
xor
movsl
icebp
adc
push
les
sbb
in
xchg
mov
mov
mov
cwtl
dec
xchg
stos
push
out
adc
bound
or
pop
sub
pop
out
daa
dec
les
xchg
test
pop
pop
adc
das
or
int
mov
cmp
mov
pushf
sbb
andb
sbb
xchg
inc
movsl
xchg
je
mulb
push
mov
enter
jmp
and
ljmp
adc
jns
inc
jno
xor
cmp
pop
mov
fisubl
or
mov
js
xor
push
mov
adc
fmuls
sub
test
out
scas
nop
rol
add
aam
add
add
ja
stos
ds
pop
jbe
movsb
call
iret
push
xlat
fsubs
adc
push
scas
subb
jp
bswap
ds
ror
jge
mov
movsl
stc
inc
push
fcoml
in
push
inc
leave
jle
icebp
pop
ss
or
shll
fsubrs
ja
dec
dec
cwtl
mov
out
sbb
cmp
sub
pushfw
bound
inc
test
popa
sti
add
lods
push
push
clc
xchg
xorl
jmp
inc
icebp
push
daa
cmp
pop
mov
ljmp
sbb
test
hlt
sti
sub
xor
jle
fisttps
cli
jo
test
icebp
mov
xor
shrb
inc
aas
push
cmpl
into
sub
into
adc
lods
push
aaa
xor
cmp
iret
into
dec
fstpl
filds
cli
push
repz
adc
push
mov
loop
sbb
mov
adc
sbb
stc
inc
and
int
fsubrs
jno
sub
or
loope
ret
jmp
arpl
into
out
mov
xchg
inc
sbb
lods
cmp
or
dec
sahf
popa
mov
repnz
mov
jbe
stos
and
mov
jmp
or
je,pt
pop
icebp
mov
xor
shlb
inc
inc
lcall
dec
pop
xor
xchg
add
xchg
dec
jecxz
call
sub
adcb
ljmp
jl
jl
xchg
add
mov
arpl
or
daa
icebp
ss
or
or
push
fistl
ljmp
mov
adc
pop
bound
mov
in
push
nop
mov
xchg
out
repz
jnp
int
fcomps
fldcw
mov
repnz
adc
icebp
add
mov
das
and
add
push
push
stos
ds
push
add
mov
xor
pop
or
stos
negl
nop
jb
fcompl
pop
pop
pop
scas
fmull
lret
mov
cmp
stc
hlt
int
inc
or
add
adc
jmp
push
mov
and
scas
cmp
sub
add
std
xlat
and
test
mov
test
and
dec
je
jne
adc
andb
gs
pop
pushf
mov
cmp
xor
out
sbbb
add
add
pop
pop
in
mov
int3
nop
pop
pop
test
repz
stos
je
aad
nop
sbb
pushf
daa
or
add
mov
sbb
mov
notb
out
pop
push
push
and
inc
sbb
gs
in
pop
scas
ja
inc
cmp
mov
test
xchg
add
dec
je
icebp
lock
cmp
xlat
push
clc
imulb
addr16
insb
insl
jmp
aaa
pop
lret
mov
repz
xchg
xor
das
push
add
ror
nop
lods
insb
mov
mov
lods
rcrl
popf
jmp
push
outsb
adc
xor
push
mov
shl
or
mov
movsb
sub
idiv
unpckhps
flds
insb
ds
sbb
bound
mov
test
and
mov
lods
inc
push
mov
lods
das
mov
cmp
push
aas
xchg
cltd
mov
sti
or
lcall
out
call
mov
mov
jae
outsl
sar
aaa
ds
push
add
daa
pusha
into
dec
lods
test
lea
pushf
gs
inc
data16
push
clc
or
scas
pop
mov
lods
xchg
mov
add
xor
mov
sahf
test
jne
jl
mov
out
scas
pop
adc
cmc
jl
shr
in
stos
lret
push
and
out
testl
sub
fisubrl
lsl
test
or
ss
pop
adc
cmp
adcb
outsb
fsubrl
scas
or
jo
mov
mov
sbb
pusha
push
pop
xchg
push
cmpsl
std
pop
cld
movsl
pop
mull
mov
sub
mov
adc
daa
mov
push
pop
jbe
cmpps
faddl
cli
jnp
lods
iret
or
push
daa
push
pop
aam
fcomi
ja
adc
pusha
mov
dec
xor
aaa
rep
add
jo
into
jnp
add
test
xlat
xlat
les
aad
add
push
shll
cmp
add
hlt
cmp
add
test
push
inc
dec
addr16
pop
data16
mov
sbb
pop
psllw
fwait
leave
and
mov
lret
cwtl
xor
ds
cmpsl
xor
inc
adc
lahf
pop
add
cld
cmp
jg
aam
in
andl
push
lret
bound
fstps
int
xlat
mov
jle
mov
mov
or
adc
or
imul
repz
andl
out
enter
inc
jp
into
and
add
and
jle
jb
xorb
xchg
fldt
bound
jp
data16
lds
jbe
add
mov
jg
imul
lds
push
in
arpl
addb
ret
in
add
ret
pop
cmp
mov
jo
jg
enter
dec
clc
mov
mov
int3
into
push
mov
repz
shr
insb
enter
push
push
lds
fnstcw
loop
or
lea
and
lds
popa
orb
movsbl
sub
jns
rol
cmc
push
ret
xchg
hlt
shll
jecxz
push
jns
xchg
dec
push
cmpsl
out
pusha
je
pop
add
xor
mov
and
jmp
mov
dec
inc
add
and
stos
jne
fistpll
into
popf
adc
push
sub
add
fwait
inc
out
xor
std
dec
adc
loopne
mov
mov
lret
imul
add
or
loop
and
outsb
mov
scas
xchg
add
pop
aad
lea
pop
pop
add
xor
or
dec
mov
adc
adc
mov
mov
jbe
xchg
cmpsl
mov
mov
cmp
inc
sahf
sub
mov
mov
rcl
dec
stos
lahf
jns
xor
mov
pmaxsw
sub
lds
jne
mov
daa
or
dec
js
fists
mov
pop
rorb
arpl
arpl
imul
sbbb
das
add
jno
inc
mov
pusha
mov
pop
call
rclb
cmpsb
lret
fstp
sahf
push
mov
push
mov
pusha
fucom
in
in
notb
cwtl
and
shrl
xchg
lret
lods
pushf
mov
pop
dec
cmp
nop
cmp
cld
fsubr
addr16
fdivl
ret
nop
xchg
add
push
icebp
leave
out
mov
inc
adc
dec
call
sub
ja
mov
loopne
and
loopne
outsl
lods
pop
xchg
repnz
arpl
lret
inc
in
sub
sbb
ja
or
daa
mov
decl
ja
sub
mov
bound
scas
inc
rcl
inc
adc
mov
das
loope
mov
xchg
jb
jno
loopne
loope
xor
rep
dec
mov
into
mov
add
test
pop
in
or
rolb
cmpsl
pop
mov
jo
sub
leave
pop
andl
mov
xchg
jb
xchg
lock
mov
hlt
inc
outsl
sub
mov
roll
jp
daa
ljmp
in
jmp
fimuls
rorb
mov
aam
iret
sbb
fildll
inc
add
jnp
pop
in
stc
sub
inc
loope
and
adcb
sbb
sbb
mov
sub
scas
mov
idivl
inc
popa
mov
shll
in
loopne
sahf
adc
dec
neg
fidivl
push
lcall
adc
xchg
jo
mov
test
cmp
cmc
push
or
inc
mov
lcall
xchg
gs
xchg
loope
fisubs
inc
mov
popa
out
sbb
lods
out
inc
fsts
jne
mov
js
push
xchg
outsl
aas
sub
push
cmpsb
pop
xor
xchg
dec
stos
les
and
pop
loope
sbb
mov
and
imul
cmc
rorl
les
mov
xor
cmp
shll
sub
outsl
pop
push
lds
outsl
push
jno
mov
push
cwtl
xchg
mov
out
fsubrs
and
hlt
and
add
sbb
mov
enter
push
insl
sbb
or
sti
xchg
mov
std
aam
mov
loop
xchg
mov
into
in
fld
out
shrl
dec
into
adc
or
pop
adcl
roll
int3
in
lcall
mov
and
adc
sub
aaa
mov
xchg
adc
repnz
das
cmpl
mov
aaa
cld
mov
je
fistpl
inc
bnd
shlb
sub
mov
nop
and
xlat
sbb
mov
pop
mov
mov
push
out
rcrl
stos
in
adc
xchg
movsb
aas
andb
inc
push
add
mov
or
add
movsb
add
dec
jo
mov
mov
in
sarl
sbb
push
mov
sbb
jl
cli
leave
mov
sbb
mov
fisubl
iret
jb
insl
outsb
push
js
mov
enter
mov
xor
sub
adc
cwtl
clc
and
push
sti
or
sbb
dec
loop
jp
push
es
addr16
bnd
push
ja
pop
popa
mov
je
mov
in
int3
call
js
pusha
mov
cmp
inc
cs
xor
jno
movsl
test
repz
int3
sahf
out
and
popl
pop
cmpsb
jg
mov
adc
adc
sbb
mov
out
shl
xchg
and
scas
push
aad
test
mov
out
or
stos
fbstp
add
cmp
push
cwtl
jmp
int3
mov
js
cmp
out
fnsave
push
std
mov
or
mov
xor
imull
cmp
mov
xlat
ljmp
scas
adc
push
jg
popa
imul
cmpsb
rorb
fdivrp
divl
pop
xor
je
sub
in
mov
push
sub
adcl
mov
adc
mov
push
push
test
cmc
lretw
xorb
out
mov
shll
mov
outsb
sbb
lret
and
shll
cmc
aas
or
pop
dec
adc
mov
out
test
ljmp
jns
cltd
xor
ret
rclb
test
add
in
sbb
mov
xor
push
sub
xor
outsb
insl
enter
mov
daa
xchg
sbb
sub
push
sbb
sub
stos
cwtl
xlat
dec
push
test
sbb
xchg
or
fcmovu
into
push
jne
jg
lret
sti
imul
jge
push
stos
xchg
push
shl
dec
xor
in
mov
xlat
std
lcall
xchg
sub
subb
add
add
sub
imul
lahf
push
fmuls
cld
jp
sub
cmp
cmp
test
inc
inc
sub
fsts
fdivl
dec
adc
pcmpeqd
std
cmpsl
bound
pop
ss
pop
sub
outsl
jp
inc
in
and
cmpsb
pop
jo
push
dec
fs
mov
xchg
mov
out
pop
sub
dec
test
or
cmc
and
inc
pop
or
mov
ss
imul
or
sbb
cld
ds
add
push
xlat
mov
in
pop
jnp
call
xchg
jmp
jg
bnd
cs
decl
fcoml
loope
add
movsb
or
adc
push
std
clc
test
jo
jo
or
xor
mov
orb
mov
out
adc
jo
mov
in
xchg
mov
mov
enter
int
jne
stc
mov
sarb
in
jae
ds
inc
sbb
pop
xor
inc
dec
sbb
ds
xor
addr16
loopne
fisttps
sub
aas
insb
jae
xor
add
arpl
cmp
stc
inc
or
jne
cmp
xchg
mov
aad
cld
ja
cmpsb
inc
add
rcr
cmp
add
cmp
xchg
push
and
push
xchg
hlt
pop
mov
and
jns
add
push
lret
jne
jno
rcrb
nop
shll
push
roll
pop
mov
adc
test
jecxz
adc
adc
leave
push
sub
scas
mov
or
ds
pop
ljmp
cmp
aam
mov
pop
mov
imul
icebp
jo
jg
mov
mov
add
sub
jmp
inc
mov
mov
xchg
shll
adc
addb
mov
orl
stos
outsb
mov
sub
fstpt
add
arpl
shlb
and
pop
out
mov
push
sbb
and
xor
sbb
pabsb
aaa
insl
aam
adc
mov
call
std
xor
cmc
sbb
jb
imul
sbb
cltd
mov
add
jg
in
cmp
sarb
sbbb
lcall
inc
sbb
shl
out
mov
or
mov
jle
or
sbb
lea
filds
and
pop
mov
or
rcll
fcmovnb
scas
cmp
mov
dec
cli
cltd
cmp
je
jb
sub
lods
rol
push
push
into
aam
push
pop
pop
or
or
mov
xlat
int
push
lret
mov
cs
jne
cs
jmp
push
inc
fisubs
stos
jl
push
xor
mov
imul
mov
jmp
bound
lret
pop
add
shl
std
inc
mov
insb
js
outsb
mov
call
cmp
jl
das
or
push
xor
cmp
out
loopne
loope
pushf
cmp
icebp
push
or
ret
stos
jo
xor
lock
jbe
in
jns
in
cld
dec
dec
dec
das
mov
or
sahf
dec
popf
lea
push
cmp
je
test
mov
sub
rcrl
fisttpl
adc
out
push
cmc
xor
rcll
jno
aad
mov
dec
cmovs
mov
imull
jne
xchg
movsl
cmp
add
push
repnz
xchg
dec
cmp
arpl
insl
mov
shlb
jne
fldenv
push
clc
std
dec
add
imul
mov
cmp
xor
pushf
adc
lods
dec
fdivrl
out
cld
fdivrl
mov
xchg
out
jne
push
lods
cmp
cmc
cmc
push
fmull
inc
xlat
dec
push
mov
add
jle
dec
outsb
inc
jp
push
jmp
mov
adc
fcompl
andl
aam
pop
out
or
fs
insl
mov
rcrb
cmp
enter
lods
jns
dec
popf
flds
mov
push
fildl
pusha
xor
js
in
icebp
cmp
jb
fstpl
push
orb
ret
icebp
in
addb
xchg
and
push
dec
xor
mov
in
cmpsb
std
out
inc
xor
scas
ret
dec
and
sbb
int3
cmp
adc
in
xor
push
mov
shl
add
mov
out
ljmp
xor
cmp
xor
pop
sbb
mov
dec
mov
outsb
and
cmc
out
cmp
sub
mov
loopne
inc
inc
adc
push
out
bound
cld
mov
movsb
sti
pop
cmp
cltd
jge
inc
aaa
push
shl
jmp
push
adc
rolb
icebp
mov
mov
sbb
xor
dec
pop
mov
xor
mull
mov
mov
jg
xor
xor
loope
cmp
jle
loope
mov
xlat
rcrb
push
mov
lret
jno
or
jecxz
fistpl
in
mov
fistl
fcoml
cld
cli
fs
adc
sbb
je
test
sub
pop
jb
shrb
xlat
jne
ret
loope
data16
adc
push
cmpsl
cmp
xor
push
nop
loop
mov
clc
xlat
cwtl
push
jp
mov
cld
mov
fstps
stos
mov
adc
mov
sbb
xor
lret
mov
pop
movsb
mov
in
xor
loopne
or
xchg
fxch
adc
xor
std
sbbl
mov
fcomps
cmp
jl
push
arpl
mov
jo
addr16
pop
ja
mov
mov
or
int3
pop
pop
bound
add
sbb
dec
sub
push
mov
xchg
imul
shrl
int3
cmc
adc
mov
mov
jecxz
out
jb
mov
add
fbstp
cmp
or
xor
movsl
call
fnstsw
mov
mov
out
lea
rorl
add
leave
aas
push
cmp
or
int
sub
repz
pusha
cmp
hlt
or
inc
and
outsb
jmp
sbb
xchg
dec
jns
mov
inc
mov
adc
jae
insl
push
mov
add
faddl
mov
xor
cmp
xchg
into
icebp
sub
push
outsb
xchg
push
pop
dec
xchg
lcall
lods
mov
aas
inc
jne
mov
and
ss
mull
lret
push
pop
xor
les
inc
repz
clc
pop
enter
push
xor
mov
int
in
cli
xchg
lcall
icebp
adc
mov
push
cli
inc
popf
jno
cmpsl
out
in
fcoml
inc
inc
fisubrs
sub
sbb
jl
add
or
mov
sti
addb
adc
lock
lods
inc
xchg
cmp
fdivrl
fwait
jmp
jnp
test
pop
sub
and
cmc
sub
orl
xchg
ret
pop
adc
push
xor
lret
push
scas
mov
int3
gs
xor
mov
sbb
xor
testb
icebp
sub
push
push
call
clc
sub
inc
mov
xchg
fadds
and
jnp
fisubs
pushf
int
fidivrl
ffree
inc
cld
mov
shrl
xor
lret
xchg
ss
xor
aas
stos
cli
or
popa
cmp
loope
sub
sbb
mov
sub
adc
lea
xchg
inc
and
push
cmp
xchg
lcall
into
fldt
dec
push
pop
and
cltd
ja
inc
cmp
pop
cmpsb
adc
out
xor
movsl
xor
movsb
xor
sbb
mov
inc
sbb
cltd
out
dec
add
jbe
mov
or
jge
leave
dec
mov
push
add
addl
dec
inc
add
inc
test
mov
lods
xor
std
test
sub
lret
or
repnz
sub
add
or
jne
repnz
push
shll
in
insb
dec
and
ret
and
mov
push
popf
push
xchg
push
orb
or
es
sbb
inc
xor
rorb
insl
sub
subl
ret
and
imul
lds
lret
inc
mov
rolb
inc
push
inc
mov
sbb
stc
xor
adc
sbb
inc
subb
jge
mov
jl
cld
jp
cmpsl
dec
mov
add
push
xchg
adc
push
idivl
fstpt
push
jae
idivl
push
push
cmp
lret
int
mov
das
shrl
int3
cmp
mov
inc
sbb
inc
mov
mov
out
mov
xor
jp
xor
or
or
aas
xchg
repz
cs
sbb
test
mov
rorl
and
sbb
jno
in
push
mov
mov
popa
popf
inc
mov
cmp
adc
loope
aam
xchg
lea
jbe
lds
xor
mov
mov
subl
push
mov
jg
xchg
inc
fstpl
sarl
adc
in
jg
cmc
fs
cmp
test
or
cmp
enter
or
shl
dec
pop
push
mov
pop
imul
popf
ret
jns
and
dec
lods
js
fs
fcomi
push
cltd
xchg
sahf
xor
shrb
inc
add
mov
adcl
add
push
mov
std
xchg
sbb
or
and
mov
int
inc
ss
xor
xchg
stos
or
out
jp
inc
cltd
fistl
mov
jno
pop
cmpsl
outsb
jecxz
cmp
nop
loop
insl
sahf
mov
sub
pop
xor
in
insb
les
pop
push
pusha
mov
clc
and
inc
pushf
notl
repz
leave
inc
xchg
dec
inc
mov
xchg
xor
lds
inc
push
mov
xchg
aad
popl
add
rcrl
aam
ja
cmp
dec
mov
enter
pop
das
scas
loop
add
ret
xor
sub
clc
push
ljmp
je
in
jnp
or
aas
cli
das
mov
lahf
inc
xchg
mov
insl
out
add
sub
aad
out
adc
lret
mov
jle
rcl
xchg
fisubrl
inc
mov
push
and
adc
iret
cli
push
jne
xor
out
pop
jle
jne
pop
sti
lahf
jae
push
scas
add
mov
mov
ja
mov
jno
fs
xchg
push
and
call
add
js
sarb
mov
hlt
ja
cld
mov
lds
pusha
sub
pusha
bound
dec
xchg
fidivrs
clc
cmp
mov
cmp
shr
or
stos
xor
pop
lods
push
or
lahf
adc
sbb
and
add
jns
ljmp
xlat
adc
movsb
out
mov
shrb
cmpsb
xchg
jns
pop
gs
in
adc
mul
fcomps
mov
repz
mov
iret
aas
ljmp
lods
mov
cmp
mov
call
popa
add
mov
push
es
leave
xor
xor
push
sbbl
or
aas
pop
xchg
cmp
popf
add
lcall
fidivrs
mul
lods
lahf
dec
cmp
jno
mov
add
mov
adc
pop
jns
sbb
jp
push
or
out
xor
pushf
xor
aaa
pop
inc
dec
inc
add
mov
js
scas
lea
pop
jmp
insl
test
lahf
pop
in
and
xchg
xor
xor
xchg
sub
xchg
add
sub
jle
mov
pop
daa
das
mov
xchg
jmp
xlat
test
jae
cmp
adc
jmp
shrl
int3
repz
push
or
or
outsb
insb
mov
outsl
add
pop
dec
packuswb
lret
fldt
cmove
mov
lock
pop
push
fs
cmpsb
and
mov
loopne
fbld
cmpsb
jbe
rcr
pop
rclb
pop
sbb
sbb
xchg
ret
fidivrs
xlat
dec
movsb
inc
pop
test
jnp
mov
ljmp
data16
xor
lret
sahf
in
xchg
adc
inc
or
xor
iret
mov
cmp
mov
jg
jnp
jmp
es
adc
in
sub
mov
xlat
pop
adc
mov
cmpsb
xchg
rorl
gs
pushf
stos
xchg
int
mov
cld
xchg
mov
popa
pop
xchg
mov
adc
shrl
xchg
shl
adc
leave
in
mov
int3
xchg
in
xchg
insb
rcr
outsl
ja
jns
mov
icebp
das
jp
or
jge
jl
outsb
fwait
cmp
ficomps
push
xchg
mov
mov
jecxz
jle
and
loop
lods
and
jge
lea
xor
adc
ret
cmp
out
repz
pop
iret
lock
in
sbb
loope
mov
scas
push
add
sub
mov
in
adc
cli
xchg
sub
cwtl
mov
dec
mov
xlat
enter
scas
popf
lock
sbb
cltd
and
jno
jno
push
and
std
call
insl
push
dec
popf
jb
sti
fstl
in
dec
mov
inc
cmp
icebp
lds
divb
shlb
jno
dec
xor
sub
sarb
pop
jo
adc
sub
push
adc
ds
call
pop
sub
mov
push
test
or
xchg
push
rorl
inc
inc
inc
adc
xor
cmp
mov
add
out
imul
adc
in
test
pop
gs
xchg
imull
push
std
std
inc
sbb
cmp
pop
push
std
or
mov
mov
test
push
sub
or
sub
pop
in
sbb
loope
mov
mov
xchg
mov
pushf
aas
lds
add
xor
cwtl
adc
mov
nop
sbb
test
cmc
push
push
dec
test
arpl
dec
push
pusha
ret
lds
xlat
outsl
hlt
mov
loopne
jp
clc
loop
jl
mov
sub
mov
mov
mov
xchg
sahf
cmp
popf
push
popf
jl
test
and
test
xorb
mov
sahf
jbe
or
sub
sub
pop
adc
and
push
lahf
jns
mov
lods
cmp
in
push
sbb
adc
pop
xchg
lcall
push
std
js
cmp
xor
inc
imul
push
push
cwtl
inc
cmp
pop
std
movb
fidivrs
lods
loope
div
scas
sbbl
pop
pop
int3
mov
fs
dec
inc
sbbl
jne
xchg
pop
outsb
loope
or
adc
sti
dec
jecxz
adc
xor
mov
int
xor
dec
imul
int
xchg
rol
test
into
sub
sub
xor
cmp
inc
lahf
iret
call
jmp
xchg
dec
or
dec
out
jno
std
inc
jo
push
pop
in
jb
out
jle
inc
xlat
xchg
ds
js
mov
fisttpll
popf
mov
hlt
sti
loopne
sub
xor
dec
mov
into
pop
iret
loope
mov
inc
in
pop
mov
xchg
lret
inc
arpl
sbb
mov
pop
or
add
adcl
mov
cmp
leave
mov
test
notb
sbb
movsl
mov
lret
rorl
int
mov
cs
mov
adc
lret
inc
inc
daa
cmp
js
aad
clc
in
loope
dec
jp
faddl
or
jb
jge
pop
in
xchg
add
push
cmpsl
dec
mov
bound
xor
jne
cld
pop
sub
sbb
sub
sub
jecxz
push
add
pop
xor
js
cmovge
or
daa
mov
jo
sub
or
inc
rcrl
out
mov
adc
dec
aam
pop
cmp
sbb
sub
inc
jns,pt
mov
add
aaa
xor
popf
and
dec
je
gs
cmp
mov
inc
ret
add
cs
cmp
xchg
pop
cmp
je
push
aaa
cli
lret
inc
jb
les
cmovp
lds
insl
out
mov
dec
pop
cmpsl
pusha
gs
jb
mov
jg
aad
les
js
int
sbb
mov
cmc
enter
shl
ret
xor
ja
cs
lock
add
lret
fisttpll
push
mov
pop
imulb
jnp
shr
mov
sbb
add
mov
enter
test
mov
sub
das
mov
fsubl
push
cmp
sbb
pop
push
jle
xchg
xor
int3
cmp
jecxz
jmp
pop
mov
xor
push
sbb
mov
pop
bound
sbb
adc
outsl
mov
jne
fmuls
sub
mov
adc
mov
rcll
outsl
ds
mov
adc
aam
mov
out
and
mov
scas
pop
push
int
fmuls
sbb
sub
dec
jno
stos
addr16
out
xchg
pop
enter
in
mov
inc
int3
jg
and
or
mov
into
movsl
fmuls
push
shr
inc
roll
cwtl
push
dec
mov
test
mov
fldenv
loope
test
stos
fistpll
cmp
jbe
aas
pop
iret
add
xchg
push
hlt
stos
and
or
imul
push
jae
daa
adc
jle
aas
pop
mov
popa
inc
insb
push
push
int3
xchg
mov
mov
ret
jmp
movsb
add
mov
cmpsb
lods
pop
test
cs
stos
pop
in
pusha
call
or
jb
mov
int3
lea
in
scas
rcl
fsub
mov
mov
push
nop
pop
mov
add
fnstenv
or
enter
push
lock
sbb
push
or
mov
lret
sbbl
aam
jmp
mov
bound
dec
aam
push
enter
xor
dec
shll
mov
mov
sbb
icebp
enter
inc
mov
add
fsts
pop
and
or
cmpsb
popa
mov
fldcw
test
leave
pop
aam
cmp
clc
mov
dec
subl
jp
lock
sub
sbb
dec
jge
pushf
jl
xchg
inc
aad
pop
out
out
cs
sti
adc
add
cmp
cli
pop
out
rclb
pusha
sbb
add
mov
fwait
push
and
dec
mov
inc
inc
add
loope
cmpsl
fisubl
bound
jbe
ljmp
xchg
mov
lock
or
sbb
scas
inc
push
add
shrb
add
lahf
notl
dec
pop
jno
mov
pop
les
ret
lock
jnp
or
mov
sub
scas
hlt
bound
insl
mov
addb
and
gs
repnz
mov
push
jns
es
jno
xor
movsl
outsb
dec
add
movsl
xor
add
and
mov
rorb
shl
sub
and
push
and
inc
cmp
mov
cwtl
adc
jmp
xchg
pusha
add
dec
jecxz
xchg
jp
xchg
or
bound
movsb
cmpsb
inc
push
jmp
es
cmp
adc
repnz
je
fs
orb
repz
aas
xchg
pop
add
sbb
xor
jb
fs
pop
shll
or
test
jg
mov
push
adc
icebp
mov
aam
pop
mov
es
lcall
or
mov
jns
sbb
push
jle
mov
rcr
jl
dec
and
cmp
jg
pop
pop
test
or
or
push
cwtl
insb
xchg
or
sbb
lods
lea
inc
sub
movsb
dec
fldt
jno
or
clc
add
aas
push
jl
push
lods
lds
mov
mov
out
pop
cmpsl
pop
and
jb
outsl
xchg
into
aad
stos
inc
sub
xor
jbe
add
into
jecxz
nop
push
xchg
out
adc
cmp
clc
mov
pop
sbb
jo
sbb
rcl
or
subb
mov
push
das
out
mov
cmpsl
pop
mov
jecxz
push
inc
negb
add
mov
pop
aad
cmp
mov
mov
xor
adc
pushf
fmuls
sahf
sub
add
mov
cmp
push
stos
inc
popa
and
insl
jns
mov
ljmp
out
lods
xor
cmp
xor
outsl
scas
dec
mov
enter
jl
std
stc
cmp
cwtl
fistps
sub
add
push
rcrl
xchg
mov
jmp
mov
mov
loopne
out
enter
inc
scas
movsb
jg
hlt
iret
daa
adc
divps
popa
inc
test
lea
cltd
lock
mov
and
jbe
xor
inc
repnz
or
xor
cld
iret
cmpsl
in
movsl
cmp
test
cwtl
push
jno
lcall
in
pop
mov
loope
dec
jb
mov
fadd
xor
sub
jecxz
scas
or
fidivrs
mov
mov
test
pop
adc
add
imul
and
dec
inc
dec
ljmp
shl
data16
inc
push
push
clc
push
movsl
test
fildll
lahf
lock
cmp
sub
aaa
sub
cmp
jno
push
outsb
pushf
xchg
loope
aas
and
scas
out
and
adc
xchg
dec
ss
dec
popf
cmpsl
mov
mov
scas
dec
lret
and
adcl
xchg
popa
int
in
pop
xlat
or
movsb
fwait
inc
sbb
sbb
push
pop
popa
mov
inc
sbb
jne
popa
adc
mov
or
jp
leave
add
adcb
cmpsl
lods
and
pop
mov
push
push
push
int
mov
repnz
outsl
add
pop
icebp
div
jns,pn
push
sub
cmpsb
pop
fsubs
adc
lret
ficoml
aad
push
sub
cmp
pushf
xor
xor
ljmp
in
and
add
add
cmc
push
dec
std
xchg
notl
xor
push
cmpsl
xchg
scas
movsb
enter
mov
inc
cmpsb
jns
inc
cmp
leave
pop
dec
jecxz
push
inc
mov
fisubl
jo
dec
lret
dec
pop
dec
sbb
int3
outsl
jg
add
fs
clc
mov
pop
fimull
jl
cmp
cld
hlt
or
pop
and
add
sbbb
sub
mov
xchg
mov
test
adc
jbe
cmc
leave
jle
scas
int3
les
cld
add
adc
push
inc
pusha
mov
jecxz
daa
cwtl
cld
push
add
adc
push
push
aad
add
xor
sub
popf
push
lret
stos
xchg
or
mov
xor
test
lahf
lds
or
js
mov
pop
lret
mov
ficompl
test
lahf
or
xor
insb
jb
adc
rcl
push
xor
lea
mov
push
cmp
mov
pushl
test
push
jp
arpl
mov
stos
aaa
jmp
xchg
jl
xor
call
cs
sbb
mov
popfw
shl
frstor
in
sar
stos
mov
out
pop
or
popa
loopne
loop
rol
push
pop
sbb
aam
dec
push
mov
xor
loopne
add
mov
fs
cmp
cmp
pop
test
lods
lret
fwait
pop
mov
push
std
adc
lret
loop
movsb
xor
push
sbb
test
arpl
and
dec
mov
aad
push
pusha
mov
jle
mov
icebp
jnp
push
aad
rol
and
jp
ret
add
mov
jbe
add
daa
into
cmp
pop
vpsllq
adc
mov
jo
inc
adc
fadds
cmp
out
mov
dec
lahf
xchg
xor
outsb
pop
clc
fdivrs
imul
ljmp
shl
repnz
sub
iret
jge
mov
push
xchg
cmp
inc
test
lods
ss
into
xor
pushl
add
sahf
fisubs
mov
sahf
arpl
int
rcl
movsb
inc
loope
jbe
in
scas
xlat
fadd
int3
mov
push
adc
mov
and
enter
or
in
imul
imul
movsb
add
imul
sbb
subl
push
arpl
stos
mov
lahf
sub
jg
pop
fs
lcall
lods
into
mov
push
jge
orb
push
pop
lods
xchg
pop
mulb
in
imul
sti
mov
xor
test
cmp
pushf
mov
ficoms
mov
mov
pop
into
push
andl
test
pop
jge
fisttps
and
pushf
jl
setnp
inc
jle
lcall
sub
push
sub
subl
xor
stos
mov
inc
sub
repnz
aaa
jecxz
jg
orb
mov
push
push
xchg
rcr
xor
xchg
cltd
incb
in
xchg
js
insl
dec
sbb
mov
cmp
dec
sub
bound
mov
xchg
adc
xchg
sbb
jae
shrb
lock
inc
ja
dec
aaa
in
movsl
mov
out
in
push
testl
mov
adc
hlt
cli
xchg
sub
in
aam
mov
es
js
xchg
loop
mov
call
xor
jge
inc
cs
add
xor
add
push
xor
orl
loope
popf
or
and
das
roll
lcall
scas
outsb
add
adc
push
jo
out
dec
mov
jg
in
das
popa
icebp
fucompp
mov
dec
nop
or
cs
hlt
push
dec
lods
rcr
mov
sub
pop
and
mul
cmpl
insl
jmp
push
jge
aam
imulb
insl
jecxz
mov
sbb
mov
outsl
adcb
scas
frstor
imul
daa
dec
inc
xor
ret
mov
xchg
push
imul
sbb
pop
push
add
pop
push
cmp
or
sbb
jo
loopne
sbb
cmc
mov
mov
clc
inc
iret
cmp
in
jge
adc
test
scas
movsb
add
test
sbb
js
ret
xor
mov
test
inc
test
lahf
mov
int
aam
and
scas
int
xchg
call
dec
xchg
cld
pop
sbb
out
or
mov
mov
jnp
xchg
fnstcw
add
sub
in
sbb
popf
xrelease
mov
mov
xor
test
adc
test
enter
sbb
mov
je
jae
lock
fidivl
daa
fwait
test
jp
push
fdivrs
icebp
push
lret
add
inc
and
mov
mov
jnp
negl
scas
mov
or
xchg
lret
pop
lcall
aad
movsb
mov
test
repz
filds
test
pushw
push
cmp
mov
inc
add
pop
movsb
sbbb
add
sub
and
int3
jnp
jge
lahf
int3
imul
mov
flds
ljmp
adc
ret
xor
xchg
lods
add
push
scas
adc
xchg
pop
adc
imul
jns
fsubs
lret
mov
mov
or
cmp
push
push
push
cld
xchg
push
sti
push
mov
in
mov
adc
cltd
pop
sbbb
aaa
pushf
xchg
ss
pusha
sbb
popf
stc
shll
ljmp
mov
les
mov
inc
and
lds
sbbl
cmc
cmp
adc
xchg
jmp
add
aad
orb
jg
fldpi
hlt
test
push
xor
mov
in
testb
mov
pop
jnp
jp
sub
mov
or
stos
xchg
inc
cmpsb
gs
imul
xor
pop
imul
mov
repnz
cmp
jecxz
ret
mov
jns
shl
xchg
sti
dec
cmpsl
adc
or
je
dec
ljmp
and
movsl
mov
push
push
mov
cmp
fldl
pop
pop
popa
subb
loop
in
push
cmp
arpl
jnp
push
stos
and
xor
rclb
inc
push
push
and
push
mov
adc
push
hlt
iret
pushf
cmpsl
pop
mov
clc
add
rcrl
lock
test
dec
bound
cmpsl
pop
add
ret
xchg
mov
dec
lcall
sub
push
sub
dec
inc
call
add
lock
push
outsb
cmp
scas
std
jo
jne
add
pop
dec
mov
mov
jp
pop
inc
ss
faddl
sbb
lret
mov
mov
cmpsl
insb
and
xchg
loop
add
movsl
mov
xor
push
enter
sub
jbe
lods
cli
adc
icebp
and
mov
mov
rclb
pop
icebp
fbld
lods
leave
sub
pop
out
cs
dec
incb
shrl
push
mov
ds
sub
and
pop
bound
add
pop
xchg
inc
pop
pop
and
push
inc
add
test
mov
fisttpl
xchg
insl
loope
out
dec
mov
shl
jecxz
scas
mov
shrl
add
jae
dec
cli
xor
dec
mov
aam
or
mov
nop
cmpb
lods
inc
fwait
aad
dec
jecxz
into
and
pop
pusha
int3
call
xchg
xor
fwait
ljmp
decl
jl
adc
icebp
mov
pop
pop
mov
adc
push
negl
inc
pop
push
popf
ret
je
and
xchg
sbb
adc
jno
test
lret
aad
cmp
scas
ret
cmpl
and
mov
inc
hlt
lea
inc
cwtl
call
test
movsb
lret
adc
cli
loope
lods
mov
xchg
or
sbb
movsb
lahf
stc
andl
out
xchg
insb
sbb
call
mov
add
push
or
xchg
in
jno
mov
ret
lahf
push
cmp
stc
call
in
cltd
out
xor
cmp
pop
ja
cmp
lock
jge
je
into
xchg
enter
stos
ds
xor
xchg
jae
js
les
xchg
enter
xchg
fcmovb
outsb
xchg
push
push
and
mov
ret
clc
cld
xlat
push
daa
shlb
jle
ljmp
and
mov
orl
test
xor
mov
sub
outsl
xchg
dec
add
out
jbe
xchg
sbb
cmp
bound
mulb
out
fistpl
ret
les
push
lahf
pushl
sub
or
mov
ficoms
or
adc
int
sub
mov
mov
fisttpll
sub
jecxz
or
sbbb
stc
aam
mov
aad
xchg
xlat
push
add
add
mov
push
or
cmpsb
test
std
mov
sbb
jmp
cld
mov
fwait
cld
ds
aas
jns
cs
stc
out
mov
gs
test
in
jp
mov
pusha
mov
movsl
lea
cmp
dec
mov
xchg
sti
hlt
imul
movsl
inc
in
out
pop
test
xor
stos
and
mov
mov
jge
lret
add
dec
push
dec
xor
imul
sub
cmp
mov
in
ror
mov
pop
cltd
push
push
add
inc
mov
sti
xchg
incb
enter
clc
xchg
sarb
adc
mov
hlt
sahf
mov
mov
mov
lea
mov
xor
jne
adc
movsl
and
adc
push
rorb
sub
in
pop
adc
jnp
cs
add
les
mov
xor
or
inc
mov
loope
jge
ret
lcall
jno
inc
jge
stos
movsb
mov
repz
in
int
xchg
push
push
js
xor
je
jne
mov
jle
sbb
dec
or
or
push
rcrl
mov
ss
cwtl
das
fidivs
sub
shll
lods
shll
sub
dec
cmp
and
bound
clc
jg
dec
pop
mov
mov
and
aas
test
jne
jmp
inc
push
int
cmp
fisttpl
jo
idivl
push
icebp
jg
ret
fsts
or
scas
adc
cmp
cwtl
addb
rcl
fldt
pop
xchg
testb
test
cmc
inc
and
mov
bound
and
and
sti
mov
mov
inc
std
and
jp
cltd
xorb
xor
mov
xchg
cmpsb
jge
cli
ja
popa
sub
add
pop
xchg
xchg
enter
mov
inc
mov
scas
xchg
inc
loop
mov
pop
xlat
int3
pop
aas
mov
in
outsb
fs
xor
ret
jne
jae
outsl
jl
push
sti
and
inc
fisubs
daa
repz
cmp
mov
cmp
jb
stos
mov
pusha
mov
lods
mov
inc
or
push
push
push
pushf
scas
pop
ds
cmp
fstl
jae
push
in
imul
inc
push
mov
out
not
lcall
repnz
test
xchg
inc
or
pop
inc
shl
inc
in
ror
ret
lods
sub
cmp
mov
out
aad
xlat
sti
sbb
into
or
push
les
dec
or
push
scas
xor
popf
jge
es
add
push
xor
ja
mov
das
clc
fs
outsl
loopne
das
cmp
and
fldcw
push
mov
sub
xchg
lds
cmp
mov
push
scas
xor
iret
dec
int
sbb
inc
mov
aam
mov
daa
sbb
push
dec
cmp
jge
inc
jecxz
lods
push
xlat
fistl
inc
push
loopne
sub
mov
mov
lods
shrl
fwait
stc
rcrl
movsb
xchg
xchg
add
or
add
std
inc
jo
jge
ret
rcrl
setp
adc
mov
das
sbb
push
jp
lods
jbe
lods
rcrl
xlat
push
or
mov
aas
test
sahf
sbb
stos
push
mov
aaa
xor
stos
push
dec
sbb
popa
push
in
repnz
jge
js
test
into
pushf
test
xor
jle
jne
push
cli
or
shl
add
cwtl
push
dec
or
out
adc
test
cmp
test
dec
jnp
sub
fs
inc
lahf
add
lret
pop
leave
push
loope
inc
mov
pushf
pusha
stos
int
test
push
mov
pop
xor
xor
mov
jge
icebp
out
sub
repnz
shr
pop
push
adc
or
enter
dec
jg,pn
mov
dec
roll
hlt
lret
loope
cmp
and
out
jae
cmpsl
imul
jg
mov
jge
insb
pop
inc
dec
xor
outsl
mov
mov
lret
push
mov
sbb
add
mov
sub
cmpsl
mov
ret
jge
and
cmpsl
jge
in
test
mov
minps
or
jo
xchg
sbb
dec
jecxz
or
in
orb
in
pop
bound
jmp
lods
jg
aad
adc
jle
ljmp
pop
ss
repz
std
insl
ret
add
je
stos
ficompl
push
das
sbb
cmpsb
mov
lret
leave
stos
ret
mov
cmpsb
inc
mov
cld
mov
push
inc
das
inc
add
mov
push
into
rcl
cmc
xor
jmp
pop
out
stos
in
jo
add
js
arpl
jle
inc
cmpsl
xchg
pop
or
movsb
fwait
push
xchg
outsb
sub
in
jns
insl
fnstenv
int3
cmpsl
inc
adc
mov
cmp
add
xchg
cmc
call
xchg
mov
xchg
into
dec
and
push
sbb
add
out
pop
nop
jno
fldcw
cmp
pusha
push
cwtl
movsl
insl
imul
push
xlat
sti
mov
popa
jo
std
mov
cmp
jbe
xchg
cmp
aas
mov
dec
iret
pushf
das
pop
movl
jae
add
dec
jp
xchg
pusha
xor
sarb
out
jg
es
into
cmc
xchg
shll
paddusb
daa
icebp
sbb
in
mov
imul
pusha
add
outsb
aad
jecxz
aam
ret
out
es
addl
sub
imul
mov
mov
ljmp
out
iret
es
add
sbb
int3
jmp
lcall
add
jecxz
dec
sub
lahf
inc
cmp
daa
out
push
mov
in
mov
mov
movsl
and
enter
or
and
loope
add
cli
shrl
pop
xor
jns
cmp
idivb
or
cmpsl
sar
pop
sti
pop
js
popa
bound
dec
imul
add
push
push
cmpsb
cwtl
hlt
inc
push
push
inc
inc
je
sub
pushf
or
stc
pop
jnp
loop
cmc
js
adc
lcall
dec
lahf
popf
dec
inc
xlat
sub
dec
pop
inc
out
or
into
int
out
js
push
loope
in
push
mov
inc
xor
sbb
movsl
scas
pop
xchg
mov
notl
pop
mov
dec
movb
push
out
mov
and
jecxz
shll
cld
push
push
jmp
and
jbe
movsl
inc
insl
jae
fs
cld
mov
ss
add
movsl
ret
cmp
mov
in
lahf
pushf
inc
add
scas
adc
cld
inc
ds
adc
dec
rcrb
ja
inc
es
or
and
int3
xor
out
mov
mov
adc
aam
xor
out
xchg
mov
out
hlt
fcomps
xor
or
enter
adc
xchg
ja
test
mov
jae
hlt
jmp
mov
inc
inc
xor
int3
cmp
vunpcklpd
loopne
pusha
or
mov
jnp
stos
loopne
add
icebp
dec
mov
leave
adc
pop
sbb
incb
sub
lods
cwtl
xchg
jo
sub
jge
out
bound
jle
data16
cs
push
fists
roll
daa
std
not
inc
sub
mov
ret
push
popl
mov
sbb
out
fwait
inc
cmc
mov
sub
mov
and
pop
popf
adc
add
fsubs
sbb
xchg
push
push
xchg
inc
dec
jmp
pop
mov
out
fstp
and
div
jne
xchg
xchg
sub
and
lahf
or
cmp
lahf
xor
xchg
xor
pop
ds
scas
adc
dec
sub
lock
loop
rcrl
clc
sbb
mov
push
push
add
int
mov
std
fucomi
jp
sub
rep
pop
mov
cmpsl
inc
fdivs
push
mulb
or
jp
sub
mov
pushf
pop
ljmp
dec
rorb
fcomp
orl
imul
sbb
mull
inc
jns
sahf
dec
rcll
adc
add
fidivrs
push
sbb
push
mov
sbb
data16
push
in
repz
call
xor
in
cmp
add
or
subb
stos
adc
cmp
sbb
dec
sahf
inc
aam
sbb
jl
add
push
leave
pop
push
pop
orb
inc
add
mov
push
cmc
jp
adc
out
add
mov
iret
cmpsb
jae
ljmpw
das
repnz
or
mov
dec
sbb
jbe
cmp
stc
cld
add
rsqrtps
shrb
adc
enter
push
mov
jns
adc
negb
test
jg
push
roll
inc
xchg
insb
cmp
mov
mov
jg
mov
repnz
xchg
rcrl
inc
sti
sbb
scas
xchg
inc
cmp
int3
ss
clc
lahf
xchg
data16
inc
mov
xchg
add
add
jge
pop
movsb
adc
cmpsb
out
mov
shl
push
pop
inc
into
test
sbb
mov
std
sub
rcrb
mov
mov
mov
sub
sub
xchg
add
jmp
cmpsl
cmp
mov
stos
cli
mov
dec
mov
jo
mov
repnz
push
xor
loopne
inc
fnstenv
jne
hlt
push
sbb
mov
fnstenv
pop
int3
mov
ljmp
mov
push
popa
cmpsl
adc
xor
cli
mov
cmc
int3
pop
in
sbb
dec
bound
out
dec
pop
ffreep
dec
jae
and
jae
adc
imulb
xor
inc
mov
jne
repnz
scas
sbb
cmp
sbb
insb
popf
shll
sub
fistps
lret
int3
int3
cmpsl
pop
lret
fisttpll
and
lahf
fyl2x
les
cmp
sub
mov
test
dec
arpl
mov
cltd
add
stc
xchg
mov
xlat
rcr
loope
adc
sbb
pushf
xchg
xor
fisubl
lods
cwtl
mov
test
decb
stc
mov
lret
es
inc
aad
cmp
or
popa
arpl
fnstcw
fcomp
negb
js
fistps
inc
js
sbb
rcl
xchg
mov
and
xlat
push
mov
pop
lock
jg
or
adc
add
aas
push
cmp
shrd
inc
inc
and
rorl
sbb
xchg
outsb
dec
popa
xor
push
adc
mov
out
sub
pop
jo
push
insb
outsb
fs
nop
insb
arpl
mov
int
cmp
in
and
sub
lcall
negl
pushf
push
xor
pop
xor
jo
sbb
out
sahf
ds
xor
ret
sbb
jo
testb
xor
push
inc
push
push
mov
mov
das
fiadds
adc
imulb
dec
cmp
mov
adc
mov
lcall
jo
pop
adc
cli
cmp
ds
inc
and
out
xor
sbb
xchg
mov
adc
sub
sub
popa
repnz
imul
xchg
paddw
sahf
stc
xchg
pop
dec
mov
sub
xchg
or
pusha
mov
add
int3
lret
push
and
cmp
gs
es
or
inc
mov
addl
int3
iret
cli
xchg
orb
imul
aas
idivl
leave
xchg
inc
out
jae
ret
pusha
mov
adc
std
xchg
inc
pop
push
and
pop
stos
sbb
fdivrl
cmp
sbb
js
cltd
lods
inc
shlb
xor
int3
out
cmp
jg
mov
stc
push
repz
mov
test
insl
fnstcw
mov
stc
cmp
jecxz
mov
into
sahf
mov
imul
into
stos
sbb
jle
shrb
cmp
sbb
inc
lods
mov
call
jp
lock
stc
push
clc
and
outsb
dec
add
pop
in
fildl
imul
add
mov
in
dec
test
mov
test
xchg
movsb
ja
pop
jecxz
jno
aas
or
jl
mov
and
mov
fisubs
aaa
mov
lahf
dec
pop
loopne
inc
ds
test
gs
xchg
mov
mov
shll
idivb
mov
adc
loop
dec
ficomps
ds
mulb
inc
add
movsb
addr16
mov
nop
outsl
jle
clc
sub
sbb
test
xor
inc
jp
or
cmp
bound
sub
into
dec
call
repnz
insb
adc
in
dec
push
lds
aaa
xchg
sbb
movsb
test
cmpsl
jb
rcrb
lods
mov
pop
jmp
shlb
pushf
into
out
stos
dec
inc
jmp
push
mov
cli
cmpsb
inc
icebp
rclb
mov
lret
aaa
loop
les
mov
shlb
push
daa
leave
incl
inc
enter
cmp
inc
mov
arpl
sub
iret
stos
xlat
loop
iret
leave
adc
mov
pop
push
outsl
mov
jno
bound
mov
xchg
hlt
xchg
fnop
pop
bound
in
sbb
adc
mov
add
and
hlt
pop
and
inc
xchg
inc
mov
adc
jo
pop
mov
or
jmp
add
stc
lret
jle
insl
mov
and
inc
sbb
add
fnstsw
jne
or
aam
sar
dec
test
lcall
push
rcr
pop
xchg
push
fisubrs
cs
into
push
test
jae
sahf
xchg
mov
mov
ficoms
cs
jmp
jns
pop
outsb
push
fldenv
xor
xchg
lods
pop
frstor
test
stos
in
leave
jmp
cwtl
jmp
ljmp
addl
notl
scas
scas
sti
movl
cmp
in
cmc
cmpsl
fxch
pop
leave
and
push
imul
out
mov
xchg
cmc
xchg
mov
jmp
mov
mov
add
push
fwait
lds
xchg
dec
ret
adc
dec
inc
mov
xchg
sbb
and
sbb
loopne
test
inc
cmpl
sbb
out
xor
mov
add
mov
pusha
dec
ds
icebp
xchg
jno
lock
stc
js
xor
xor
pop
jae
jg
in
xchg
sub
jae
xor
mov
jecxz
test
in
dec
push
dec
lods
bound
adc
or
ja
mov
pop
loopne
cmp
scas
shl
out
cmp
leave
push
lods
sub
mov
dec
push
mov
mov
dec
sbbl
xchg
or
mov
test
scas
jl
lret
sub
sub
int3
sbb
outsb
sub
inc
inc
insl
dec
mov
jp
and
in
loopne
fs
dec
loope
cmp
imul
cltd
daa
mov
sbb
in
jle
jb
rclb
or
push
gs
push
data16
imul
out
bound
adc
and
jae
xchg
inc
ss
mov
dec
fisttpll
psubsw
sub
int
xchg
xchg
mov
or
call
jle
outsl
dec
jbe
subl
adc
xchg
or
push
push
imul
movsbl
rcrl
lods
les
std
and
shl
aam
scas
insb
roll
xchg
fwait
ret
lods
add
mov
and
rolb
adc
mov
aas
mov
out
sub
inc
sahf
xor
sub
inc
cli
ret
add
push
pop
jo
lahf
add
or
pop
jae
out
pop
xlat
and
push
inc
mov
fiadds
out
pop
fistpl
cltd
out
sarb
leave
aad
imul
pop
enter
add
mov
mov
mov
jecxz
sbb
cld
daa
lret
out
enter
and
or
mov
or
ds
es
and
pop
fs
push
and
dec
cmp
push
mov
or
xchg
test
das
and
call
insb
outsl
jmp
fwait
jae
outsb
sti
cmp
cmp
data16
xchg
pop
sub
popa
jo
imulb
cmp
cmpsb
mov
les
mov
addr16
push
sti
test
in
dec
xorb
stc
xor
or
or
pop
cmc
xor
int
lcall
or
addl
cmpsl
call
int3
mov
repz
shll
or
xor
mov
sbb
inc
cmp
and
xor
xor
dec
pop
mov
lret
mov
pushf
jo
test
adc
lock
mov
jno
add
adc
cmp
add
decb
xchg
lock
shrl
aam
adc
rclb
push
ficompl
xchg
push
push
cmpsb
push
cmc
add
dec
mov
nop
orl
int3
add
mov
mov
mov
dec
in
mov
sbb
popf
cmp
xor
xchg
mov
rorb
ror
pop
mov
fstpt
pop
dec
jns
mov
dec
xchg
les
inc
cwtl
mov
out
popa
repnz
xchg
xor
inc
into
push
inc
and
xor
or
mov
push
lret
adc
int3
xor
xchg
fmulp
icebp
xchg
mov
fnclex
mov
or
test
push
pop
ret
mov
in
or
jecxz
sbb
push
adc
cltd
mov
sbb
les
test
jge
insl
pop
jbe
pop
hlt
pushf
int3
or
jne
jmp
scas
push
mov
dec
push
xchg
test
or
arpl
adc
mov
sub
mov
sbb
popa
enter
inc
pushf
xor
outsl
jl
cld
fsubrp
test
cld
mov
mov
fidivl
and
stos
pminsw
push
mov
sub
andl
cwtl
sahf
adcl
sub
aas
and
sbb
cltd
jo
jge
push
nop
mov
xchg
push
xor
cwtl
cmp
lods
std
mov
sub
xchg
ficoml
xchg
push
add
inc
insb
fwait
sbb
jbe
lret
push
or
jl
hlt
dec
mov
push
adc
inc
sub
insb
jne
call
sub
add
lods
rorb
dec
dec
dec
pop
es
rcrl
or
sub
gs
pop
popa
pushf
add
jae
gs
mov
adc
mov
gs
pop
jge
lock
adc
clc
cmp
das
in
ss
cmp
int3
sbb
or
daa
test
jp
je
ret
mov
aam
scas
jl
mov
mov
push
sbb
pop
mov
mov
dec
and
adc
ljmp
and
xor
xor
mov
loopne
test
into
out
in
das
adc
aaa
repz
cmp
xadd
pop
dec
pop
stc
jno
scas
bound
icebp
pop
xor
ss
imul
iret
mov
sahf
mov
scas
sub
in
push
pop
test
dec
insb
movsb
pop
ljmp
mov
jne
ret
xchg
mov
movsb
or
mov
test
sti
rcr
mov
adc
mov
rorl
sbb
das
mov
mulb
rcll
cmp
imul
cwtl
add
rol
dec
scas
mov
sbb
adc
ret
shll
cmp
adc
jecxz
mov
cmp
and
cmpsb
popf
test
xchg
dec
lret
int
push
mov
ljmp
mov
push
nop
lock
test
dec
mov
cmpsb
repnz
dec
pop
push
in
push
jnp
cmp
es
mov
js
adc
sub
sub
jge
mov
adc
outsb
sbb
pushf
xchg
loopne
ds
xchg
and
inc
inc
addr16
mov
aas
cmpsl
and
in
sar
pop
adc
xlat
xchg
sti
ja
loop
pop
sbb
push
cmp
jp
repnz
add
push
xchg
dec
mov
sub
push
and
xchg
aam
jb
icebp
xor
inc
pushf
scas
inc
in
push
push
mov
test
add
push
xor
dec
ret
clc
pop
mov
mov
sub
sub
cld
out
pop
sbb
xlat
xchg
xchg
mov
push
mov
test
ret
mov
out
push
cmp
sub
sbb
sbb
rorb
mov
insl
inc
data16
sti
dec
movsl
js
inc
adc
lcall
add
push
enter
push
dec
inc
sub
jmp
mov
pop
sub
pop
pop
es
out
js
adc
sub
hlt
orl
shll
mov
and
adc
dec
cld
dec
push
cld
inc
jl
les
bound
inc
inc
xchg
lret
es
insb
sti
aad
outsl
mov
sub
sahf
sub
dec
mov
femms
cmp
push
rcrb
jno
mov
xor
jp
fwait
xor
stos
ficoml
push
lcall
add
std
mov
push
in
xchg
nop
movsl
pop
stc
mov
add
fimuls
leave
je
xor
aad
repz
inc
mov
jno
fsubs
idivb
mov
xchg
or
fyl2x
jmp
sahf
and
test
fdiv
inc
imul
pop
neg
cmp
js
cli
psubusb
pop
lret
les
mov
mov
dec
jo
outsb
int
cmp
bound
xor
je
mov
popa
mov
test
in
add
int
dec
pop
rorb
sbb
ljmp
lods
add
cltd
xor
mov
xor
xor
pop
bound
js
jae
push
mov
pop
inc
push
and
fadd
in
sahf
xchg
cmp
xchg
xchg
dec
cmp
test
cld
mov
stos
int3
and
mov
mov
ss
daa
dec
xlat
aam
lcall
xchg
fst
pop
push
iret
jnp
cwtl
jnp
mov
mov
mov
pop
cmpsb
in
notb
orb
xor
adc
add
repnz
jmp
bound
sbb
stc
test
daa
xorb
xor
js
lret
test
mov
dec
lea
cwtl
add
pop
xor
pop
jns
cmpsl
shrl
ljmp
shr
jl
mov
dec
xchg
sbb
lods
aad
jle
iret
pop
stos
in
jns
stos
dec
repz
push
xor
das
xor
pop
mov
iret
fwait
loopne
jno
or
stc
push
lret
pop
sub
dec
mov
push
test
mov
cmp
fisubrl
nop
iret
and
in
daa
jmp
pop
sahf
loop
push
or
inc
and
int3
in
jne
in
inc
nop
xor
sub
aam
inc
cmpb
wbinvd
outsb
mov
push
sbb
xchg
push
ret
xchg
cld
xor
rorl
nop
push
mov
testl
push
mov
and
lods
dec
sbbl
xchg
fidivrs
mov
idivb
test
lods
xchg
pop
fldl
or
es
adc
cltd
fsubs
aaa
dec
bound
movb
mov
xor
fiaddl
stc
les
inc
repnz
pop
sub
sbb
loopne
sub
inc
add
push
add
shll
and
push
xor
add
and
xchg
ja
stos
addr16
iret
xor
insl
jp
ja
sub
mov
nop
or
lods
test
jge
cmp
fisttpll
push
std
andl
adc
mov
xchg
fwait
cmp
stos
xchg
mov
jge
loopne
sub
and
mov
jmp
inc
mov
jp
lds
icebp
ja
cmp
loop
sahf
aas
movb
lahf
les
sub
mov
mov
pop
push
and
cmp
sbb
add
dec
lcall
inc
shrb
loopne
mov
rcll
mov
pop
cmp
or
mov
xchg
push
jmp
int3
push
imul
aam
jae
mov
lods
in
xchg
jnp
inc
ret
jnp
mov
pushf
lret
repz
cmc
push
dec
popa
loope
lock
ds
adcl
outsb
xor
mov
imul
fcomps
paddusw
sbb
lods
pop
sub
sbb
scas
movsl
jmp
and
sbb
lods
mov
insb
or
lret
subb
xor
xchg
xchg
and
arpl
sub
jno
or
loop
enter
scas
imul
das
jge
cmp
jge
inc
inc
mov
jbe
pop
sub
ja
inc
stos
cld
jnp
cmovae
push
cwtl
cmc
or
scas
arpl
shrb
lret
scas
icebp
push
sti
js
jmp
jg
scas
mov
mov
pop
inc
js
and
test
adc
push
aas
imul
pop
sub
mov
sahf
out
ret
push
jnp
clc
jmp
aaa
bound
in
mov
pusha
add
neg
fmull
gs
inc
sbb
sbb
pop
dec
fsts
push
xchg
and
out
jge
push
jge
test
mov
jb
ds
push
jnp
xchg
pop
jb
sub
fmuls
push
cmp
xchg
xor
ss
bound
shrd
lret
mov
mull
loope
mov
or
jg
int3
xchg
xor
dec
arpl
call
xchg
loope
mov
inc
sub
cltd
lock
push
mov
cmp
test
sbb
ljmp
fdivp
cmp
arpl
movsl
hlt
xchg
iret
enter
bound
sarb
data16
sbb
loop
popf
push
sarb
mov
or
andl
mov
idivb
mov
jne
call
int3
pop
repz
in
sbb
stos
clc
inc
scas
lcall
in
push
mov
jno
fisubrs
orb
push
cli
cwtl
rorl
fists
cmpsb
sub
icebp
push
mov
jl
mov
jae
cmc
test
or
xchg
js
dec
hlt
push
ret
mov
fcmovne
jne
mov
movsl
cwtl
mov
arpl
inc
test
sub
in
inc
jno
push
mov
adc
cmpsb
inc
es
inc
xor
pusha
daa
or
push
inc
xchg
lahf
lea
out
pushl
mov
pop
cmp
cltd
stc
or
sub
push
sbb
mov
jne
insl
push
xchg
insl
or
push
std
mov
aas
rclb
dec
inc
jae
push
and
fcmovbe
mov
rcrl
outsb
scas
fstpl
jno
ljmp
adc
dec
sub
js
xchg
mov
mov
or
dec
pusha
add
cmp
dec
ror
dec
push
andl
es
dec
pop
mov
push
pop
mov
sti
mov
sbb
imul
aad
add
in
adc
pusha
jo
movsl
iret
cs
mov
orl
add
jecxz
fsubrl
aad
mov
dec
mov
and
jo
cltd
fidivs
sbb
mov
cmc
nop
outsb
arpl
imulb
adc
jae
xor
and
je
clc
mov
mov
mov
add
jmp
lret
rolb
pusha
outsb
sub
cmp
std
aam
dec
mov
or
iret
adc
stc
cmp
and
loop
sbb
jb
jns
add
inc
and
and
inc
ja
lds
dec
test
imul
lods
jmp
push
inc
mov
mov
or
popf
lahf
jbe
in
test
xor
int3
cli
xor
xor
lock
outsb
enter
incl
cwtl
inc
xlat
add
xlat
lret
jecxz
xor
xchg
insb
das
subb
inc
das
rcrl
rol
sbb
mov
inc
push
pop
cmc
push
xor
jle
aad
adc
add
sbbl
outsb
pushf
dec
push
aas
sbb
out
sti
dec
data16
sbb
inc
outsl
xor
dec
adc
jp
int3
push
lret
insb
and
xchg
insb
push
mov
pop
pop
cmpsb
sbb
cld
jnp
sbb
push
fadds
ds
shlb
out
sahf
cld
in
sub
mov
mov
xchg
sub
and
orl
add
fwait
loopne
xor
shll
inc
add
push
ss
roll
jle
mov
lret
int
dec
popf
in
out
jmp
xor
add
cli
ss
mov
stos
mov
mov
sbb
shll
push
lcall
outsb
mov
xor
pop
pop
in
cmp
inc
lea
sbb
push
mov
jge
inc
push
shl
ds
jg
lods
inc
loop
cld
addb
pop
mov
xor
push
xor
dec
jl
test
adc
jg
rcr
xchg
push
rcrl
inc
push
bound
minps
xchg
push
push
jl
push
jo
xor
lods
push
sub
std
loope
testb
out
cld
push
lret
orl
pop
push
daa
test
jae
xchg
into
cld
pop
in
mov
jecxz
inc
mov
fimull
or
cltd
xor
movq
push
lock
fmulp
scas
std
out
cli
stos
sbb
sbb
mov
std
movsb
pop
fdivl
es
xor
testl
push
icebp
mov
xchg
lahf
shlb
pop
or
cmp
aam
adc
jecxz
push
punpcklbw
shrl
push
push
push
setne
cmp
lret
cmpsl
pop
dec
pop
ss
out
jge
dec
in
adc
sti
add
or
mov
sbb
stos
dec
xor
and
add
push
push
nop
mov
adc
push
in
mov
andb
loop
push
xchg
xor
stos
jmp
movl
mov
inc
dec
mov
adc
pop
jge
push
sub
popa
cmp
xor
push
push
lock
inc
jae
mov
popa
pop
hlt
cmp
push
mov
push
add
lret
pop
shll
les
fisttpll
and
repnz
enter
inc
jecxz
jl
daa
mul
mov
dec
enter
cmp
and
call
negb
cmc
pop
fcmovb
xchg
mov
jbe
popf
pop
sub
cmpsb
ret
fadd
cltd
add
push
fiaddl
add
icebp
xchg
adc
into
aas
pop
imul
adc
jmp
cmp
arpl
aam
dec
mov
adc
das
push
dec
xchg
jp
xorb
clc
add
scas
lock
ret
pop
inc
jmp
gs
inc
xor
pop
std
lea
fs
push
xchg
mov
push
pop
and
adc
pop
inc
jb
leave
daa
bound
cwtl
loopne
mov
xor
and
imul
imulb
je
pop
xor
sbb
outsb
icebp
push
sahf
mov
fcmove
lea
or
arpl
jne
xor
dec
cld
push
pop
cmc
push
fimull
push
fsubs
notb
repz
jmp
outsb
xchg
push
and
mov
loope
dec
sbb
ret
clc
pop
inc
mov
movsl
adc
mov
enter
fcomps
movsb
fidivl
cltd
sbbb
hlt
ret
sar
int3
dec
mov
out
popf
inc
mov
insl
cmp
cmp
clc
xchg
imul
sbb
mov
iret
inc
ret
cmp
mov
adc
mov
mov
xlat
adc
sub
or
mov
jnp
out
xor
mov
inc
imul
insl
ficompl
jb
xor
repz
sbb
fmul
add
mov
inc
outsb
and
xchg
jns
fcmovnu
add
clc
jno
jp
sbb
mov
cmc
sahf
setae
icebp
test
pop
push
andb
mov
mov
inc
adc
shrb
lret
insb
dec
dec
out
inc
mov
int3
out
pop
aas
and
rcl
push
xchg
adc
cmp
cld
out
mov
jo
or
push
adc
jecxz
dec
inc
fwait
cmp
call
inc
mov
sbb
mov
sti
frstor
pop
sub
pop
movb
pop
inc
aad
fs
adc
ja
lods
ss
sub
das
inc
dec
lods
fcompl
nop
inc
sbb
repz
mov
push
stos
repz
aam
adc
aas
pushf
outsl
shrl
inc
ret
out
dec
inc
gs
mov
out
adc
cs
les
imul
xor
jl
stos
xchg
mov
mov
popf
shrb
leave
jge
add
call
dec
aad
or
ljmp
mov
sbb
cmp
adc
outsl
movsb
jnp
push
inc
mov
int
jbe
mov
roll
in
int
adc
xor
mov
fscale
pop
fsubs
mov
lods
xor
pusha
add
push
mov
clc
and
sbb
sub
rclb
inc
in
arpl
jl
es
fnstenv
inc
jnp
xor
mov
inc
shrl
add
aas
mov
outsl
mov
sub
lret
mov
cmp
fdivl
sub
sub
pop
or
cwtl
xchg
push
jecxz,pt
push
out
in
repnz
push
rorb
and
loope
lret
push
xchg
mov
mov
test
jbe
push
mov
sbb
jne
repz
inc
cmpsb
or
push
or
subl
imul
stos
out
mov
mov
sub
jecxz
lds
icebp
in
fs
js
inc
js
inc
mov
in
push
push
adc
icebp
in
dec
jns
leave
xchg
daa
data16
cli
add
mov
sub
dec
in
out
vmread
xchg
lahf
enter
imul
cld
movsl
pop
or
mov
inc
movsl
negl
xlat
jecxz
inc
xchg
aad
push
mov
icebp
jecxz
icebp
gs
cwtl
loop
or
jbe
cmpsb
lods
jmp
std
lock
inc
and
shll
push
inc
and
jno
adc
mov
push
or
jns
jns
xor
mov
mov
mov
xor
adcb
lahf
ljmp
jb
inc
je
clc
push
movsl
movsb
xor
lcall
xor
sbb
clc
sub
and
rdmsr
xchg
or
pusha
int
add
jg
or
loopne
cmc
sub
jle
pusha
out
fwait
sbb
stos
xchg
clc
je
test
es
es
hlt
pop
rcll
subl
pop
push
shl
push
push
jbe
lods
fs
sub
sub
mov
loope
pusha
cli
xchg
xchg
sbb
adc
sub
scas
xchg
adc
mov
mov
rcrl
pusha
dec
mov
push
xchg
mov
icebp
xor
leave
filds
popf
jl
ljmp
jge
sbb
aam
ret
sub
test
xchg
aaa
mov
xor
imul
mov
xchg
leave
mov
or
pop
or
cmp
push
mov
mov
jge
xor
mov
out
int3
ljmp
push
test
cli
in
data16
cmp
adc
pop
cmpsl
and
push
ss
pushf
loopne
mov
hlt
test
adc
fwait
and
mov
fwait
and
ss
mov
mov
mov
xor
aam
repz
ljmp
dec
jae
xor
push
insb
cmp
test
int3
add
outsb
ret
mov
sbb
mov
sbb
es
inc
and
iret
lret
mov
xchg
mov
test
pushf
pop
or
jge
pop
mov
dec
xchg
ss
pcmpeqw
stos
pop
inc
lods
cli
out
pop
and
push
mov
jne
ficompl
aas
iret
dec
outsl
sbb
test
cmp
dec
dec
mov
jne
aam
loopne
jo
js
test
push
in
repz
insl
ljmp
add
or
pop
repnz
stos
outsl
sbb
aas
sub
and
fwait
inc
pop
cmp
xor
inc
mov
xor
in
cmp
arpl
or
repz
lea
mov
add
mov
je
out
xchg
mov
popa
mov
daa
cmp
cmp
push
in
clc
push
fwait
or
cmp
ret
icebp
fstps
popa
and
pop
or
adc
dec
mov
mov
int
fnstsw
fists
jbe
lods
lret
xchg
in
xchg
ret
pushf
xlat
and
fwait
mov
sbbb
xor
mov
repnz
cmp
sarb
movsb
push
lock
sub
sub
mov
loope
ret
pop
and
mov
mov
and
lods
sub
inc
cmp
bound
pop
fisttpl
sub
orb
rorb
ds
subb
inc
jl
addb
mov
cld
pushw
inc
dec
mov
and
cmp
shrb
jno
adc
divl
mov
or
stos
dec
xchg
mov
mov
clc
sub
and
push
jbe
rclb
fsub
push
inc
aaa
mov
inc
out
mov
std
push
nop
and
setnp
fstps
ds
inc
xor
into
mov
xchg
sub
das
jnp
xor
pusha
and
insl
jb
inc
dec
dec
mov
divl
icebp
int3
pop
test
jmp
test
cltd
mov
pop
rcrb
push
lea
lret
lcall
mov
out
pusha
js
movsb
jne
lret
xor
int
inc
enter
pop
aam
insl
scas
mov
dec
push
aaa
fsubrs
mov
mov
add
xchg
rcrl
sbb
popa
lahf
jae
push
mov
adc
lds
jle
mov
mov
testb
cmp
xchg
add
xchg
mov
jge
mov
lods
bound
cmpsl
xor
cmpsl
pop
int
or
jns
in
loope
xchg
cmp
popf
repnz
or
mov
fistpll
iret
jg
adc
lret
in
cmpb
sbb
xchg
inc
sub
fs
jb
pop
js
mov
fwait
jns
ja
or
shr
data16
cmp
scas
adc
lcall
push
mov
sbb
fistps
cmp
push
aas
hlt
js
pop
dec
fildl
and
ss
fiadds
xchg
push
jge
mov
notb
movsb
ljmp
sub
inc
inc
jge
bnd
jnp
cs
inc
push
add
call
push
cmp
loop
xchg
dec
jge
adc
lods
xor
mov
xchg
mov
adc
movb
hlt
sbb
and
cmpsl
dec
out
inc
in
repnz
shll
mov
roll
mov
repnz
dec
aam
pop
cmpb
outsl
in
fmull
sbb
enter
or
xchg
mov
movsl
or
icebp
xchg
decb
inc
cmpsb
push
mov
sub
add
mov
int
dec
imul
mov
mov
mov
mov
cli
notb
leave
push
je
cmp
push
popf
jmp
inc
push
jbe
out
jae
lds
push
and
jnp
mov
jmp
jb
adc
es
negb
push
mul
sahf
fbstp
push
mov
aam
movsb
or
fdivs
cmp
orl
add
mov
addb
mov
push
pop
or
jge
shll
push
xorb
push
aas
adc
push
mov
sub
mov
testl
or
imul
push
adc
int
mov
or
hlt
inc
or
les
inc
cli
jne
xor
jo
add
fs
popa
or
pop
jns
push
or
xor
test
mov
lcall
popf
aad
jp
cmpsl
dec
sub
inc
adc
sub
addl
cmc
sub
out
idiv
loop
sub
or
rcrl
sbbb
xor
push
push
push
shrb
shr
cmpsb
and
imul
cs
xchg
xor
mov
cltd
outsb
test
jmp
and
sbb
inc
call
cmp
sub
push
call
test
xchg
jne
inc
cmp
loope
xor
mov
mov
into
sahf
ficoml
andl
adcb
je
das
sub
and
or
enter
jg
inc
loope
addb
fstpt
inc
fnstenv
sub
bound
punpckhdq
out
push
inc
inc
imul
jle
cmpsb
mov
lahf
jmp
cmp
in
mov
or
fwait
push
xor
ljmp
add
fsubl
xchg
and
adc
cmc
dec
nop
pop
lcall
mov
lahf
nop
xor
mov
pop
pop
inc
dec
fstpl
push
movsb
mov
imul
add
stc
andl
rcrb
mov
in
mov
fdivl
imul
lret
dec
leave
mov
nop
sti
test
in
mov
and
imul
ficoms
and
xor
add
shl
sti
int
mov
mov
jp
sbbb
mov
pop
mov
mov
add
in
repnz
pop
mov
dec
pushf
imull
cltd
xchg
jl
cld
sbb
aaa
jne
mov
cmp
shr
xchg
push
mov
test
cmp
adc
imul
mov
and
pop
lahf
or
outsb
xchg
fmul
fidivs
push
inc
mov
stc
mov
hlt
push
daa
mov
rcr
pop
mov
mov
test
xchg
imul
stc
adc
cltd
sti
xor
mov
cmp
test
mov
fcompl
jne
arpl
and
leave
mov
inc
popa
sbb
add
and
gs
mov
and
push
mov
out
jle
jmp
in
cmc
xchg
inc
push
stc
fstps
js
aas
stos
js
outsl
insb
sbb
xchg
out
ds
fisubs
mov
test
cs
jmp
push
pop
mov
xor
stc
cli
xor
xchg
xacquire
or
in
hlt
or
mov
add
cmp
sahf
xchg
adc
push
dec
aas
and
aam
pop
mov
fst
clc
in
xor
push
push
sub
cwtl
mov
in
or
add
dec
xor
cltd
shll
xchg
xor
push
in
imul
fildll
push
test
sub
scas
mov
mov
mov
lret
mov
jge
out
cmp
sub
fwait
lahf
jp
sub
in
mov
scas
push
orb
or
and
imul
dec
icebp
cmp
and
mov
inc
and
das
pop
jne
xor
pop
sub
jmp
es
bound
and
mov
and
repnz
in
hlt
pushl
mov
inc
mov
cmp
dec
and
sbb
ja
cmp
bound
xor
je
sub
ret
jmp
jp
cli
popl
daa
add
popw
xorl
mov
adcl
xor
dec
pop
add
std
pop
pop
loopne
mov
loop
notl
outsb
addb
xchg
jb
shl
mov
xchg
jg
dec
iret
xchg
out
mov
adc
or
sarl
and
jecxz
cmp
andb
fs
mov
or
cmp
int
or
push
aad
jle
xchg
sub
dec
fs
pop
push
lods
jb
lret
mov
repnz
and
insl
pop
mov
cmpsl
or
inc
fwait
jle
cmpsl
mov
lods
mov
pop
add
xor
sbbb
inc
push
jl
idivb
mov
int
ss
popa
roll
pop
fldl
in
test
cmp
mov
xor
sbb
push
mov
fidivs
ds
fstpl
outsb
xchg
xchg
fmulp
lock
ljmp
sbb
cmpsb
cmp
push
out
mov
lods
lea
das
fisttpl
sahf
push
mov
dec
repnz
std
repnz
pop
mov
jae
adc
pushf
mov
rcrb
sti
insl
les
fsubrp
ss
pop
xchg
jns
jb
dec
and
pop
inc
loop
nop
jecxz
xor
sbbl
pop
bound
and
ror
int
mov
jmp
aam
pop
mov
xchg
nop
enter
mov
mov
repz
xchg
in
cmp
push
inc
enter
mov
xsaveopt
or
and
lahf
cmc
dec
cmpl
add
mov
es
stc
sub
mov
add
mov
outsb
int
cmpsb
sub
fsubr
jmp
mov
jl
inc
mov
xchg
pop
cmp
fidivl
sub
xchg
mov
sub
mov
mov
cmpsl
xor
das
mov
out
out
pop
mov
iret
push
xchg
pop
mov
add
std
xor
and
jl
imul
shll
imul
clc
loop
test
shll
cmp
pop
pusha
clc
push
push
mov
push
test
sub
jmp
daa
lahf
jo
rol
fnstenv
lock
mov
lcall
sbb
jae
jno
push
adc
imul
xchg
cltd
and
imulb
sbb
frstor
mov
or
mov
xor
notl
in
pop
lds
adc
sub
jo
mov
loop
cwtl
add
test
mov
jge
push
dec
les
pop
movsb
out
clc
hlt
inc
dec
cmp
xchg
xor
adc
xchg
outsb
stos
scas
xchg
lahf
in
mov
in
inc
jno
divl
lods
add
shrb
test
mov
js
int
test
fisubl
mov
lahf
cmp
sahf
sbb
jecxz
movsl
movsl
int3
sbb
stc
jge
cmpsb
mov
and
inc
jnp
fdivrl
cmp
pop
ljmp
insb
sbb
sub
cld
xlat
xor
jmp
dec
fucom
inc
ret
dec
dec
jnp
ds
mov
cld
mov
in
repz
pusha
jb
int
inc
inc
push
push
cmp
or
call
xchg
jl
sub
or
out
jae
fidivs
lret
xor
mov
out
dec
or
inc
mov
push
bound
mov
test
mov
jne
add
jecxz
cmpsl
rclb
jp
sub
mov
lds
sub
pusha
loope
aas
out
test
or
or
dec
pop
and
ljmp
in
inc
mov
scas
push
mov
lret
out
fwait
and
cmp
jnp
or
out
sti
fisttpl
mov
sub
fs
push
sub
jae
jle
push
add
or
pop
inc
int3
pushf
jbe
loop
mov
pop
shrl
pop
aam
or
lds
call
add
popf
shlb
xchg
gs
ret
test
xchg
sub
in
push
out
jl
andl
lods
xlat
in
sbb
cwtl
outsb
cld
insb
pop
pmullw
es
or
mov
mov
cmpl
filds
mov
imul
in
push
or
loop
xor
jmp
inc
xor
mov
inc
xlat
std
sbb
bound
test
jo
mov
ret
pop
inc
mov
pop
push
sahf
pop
jno
xchg
mov
adc
in
sti
hlt
pop
sub
icebp
rcll
gs
aas
js
dec
xor
jmp
adc
jo
xor
out
in
daa
loopne
movsl
sbb
mov
in
repnz
cltd
dec
lcall
addr16
stos
jnp
xchg
mov
shrl
aas
and
fnclex
push
ret
push
cwtl
dec
jle
inc
fwait
enter
cltd
mulb
push
jl
data16
adc
addr16
xchg
xchg
jle
aaa
and
leave
jns
push
mov
and
punpcklwd
stos
cmp
es
sbb
sbb
testl
dec
xchg
mov
xchg
test
adc
sub
xchg
jne
xchg
mov
lahf
mov
lods
jecxz
lret
jp
push
mov
nop
fldpi
daa
test
test
jnp
inc
fsubp
mov
std
mov
mov
ret
cltd
or
mov
leave
int3
fisubs
adc
leave
xchg
fcmove
sahf
lret
fwait
and
xchg
push
dec
repnz
add
sub
dec
add
sbb
aaa
rcrb
sahf
scas
les
lea
adc
sarb
out
mov
repnz
mov
push
lret
outsl
stos
add
fbld
sbb
or
adc
and
or
mov
jno
mov
and
stos
xchg
aaa
mov
pop
xor
call
mov
cmp
iret
jae
inc
bound
sbb
shll
bound
mov
pushf
pop
xor
dec
dec
jmp
push
out
jp
mov
or
ljmp
jl
orb
and
fidivrl
idivl
add
mov
pusha
pop
pop
les
inc
aad
adc
mov
lcall
loope
adc
inc
dec
lret
mov
pop
add
mov
xor
mov
in
mov
mov
outsb
mov
arpl
mov
aaa
jmp
popa
xchg
ss
lea
mov
xchg
stos
add
mov
loopne
xor
xlat
and
out
mov
inc
loopne
nop
cmp
clc
mov
jo
imul
push
fldl
mov
fcomip
test
mov
leave
jbe
add
lret
cli
daa
dec
fistpl
mov
push
xchg
mov
jecxz
sahf
push
sub
push
push
inc
inc
cmp
jno
enter
adc
add
testb
clc
xchg
push
orl
mov
shlb
xor
push
mov
enter
mov
in
jo
jns
add
es
sbb
adc
xchg
fistpll
jle
aad
cmp
or
je
int3
out
cmp
jmp
je
xlat
fsub
std
rol
arpl
xchg
and
jle
mov
pop
mov
enter
clc
notb
xor
iret
orb
mov
xor
aas
and
loope
pop
loop
insb
jno
jl
int3
repnz
hlt
push
fistps
pusha
xor
mov
xchg
sub
inc
xchg
cs
push
mov
fists
pop
jns
rcl
test
gs
inc
pusha
cwtl
loope
jl
adc
fcomi
adc
cmc
mov
sbb
adc
test
repz
iret
xchg
aad
or
xor
mov
scas
mov
cmp
or
push
shll
cmp
push
or
cltd
mov
arpl
outsl
or
mov
xor
out
mov
aas
icebp
or
adc
fildll
cltd
dec
push
rol
xor
inc
dec
addr16
jno
shrb
std
mov
mov
and
add
jns
movb
mov
push
xor
aam
std
xchg
in
push
push
dec
int3
sub
fisubrl
push
push
mov
cmc
pop
inc
lret
mov
xor
xchg
mov
imul
fcoms
mov
movsl
iret
lret
jmp
xlat
fdivrs
mov
adc
into
neg
sbb
sub
movsb
pushf
gs
mov
dec
int3
sbb
int
inc
in
and
in
pop
sub
mov
dec
aad
jbe
mov
push
fisubrl
lcall
scas
jmp
pop
push
ret
jne
jno
dec
xchg
xchg
cmpsl
aaa
sbb
pop
sbb
jle
xchg
test
xchg
lcall
and
mov
fdivrs
or
xor
sbb
xchg
push
out
dec
outsl
lods
into
push
popf
add
ja
pop
mov
jo
push
push
sbb
sub
mov
out
cltd
xor
adc
xor
push
pop
call
outsl
cwtl
mov
cmp
cltd
sbb
xchg
icebp
xchg
jae
sub
mov
imull
jo
pop
mov
xchg
push
outsl
ret
mov
xchg
cmp
pushf
test
out
sub
call
sbb
sar
sbb
pop
and
pop
cs
cltd
cmp
sbb
test
cmp
dec
popl
orb
stos
dec
sahf
ljmp
sbb
imul
es
mov
fwait
xchg
aad
rcl
fldt
int3
lods
jp
dec
jo
push
lods
pop
lret
loopne
or
lcall
test
or
lret
mov
push
das
push
cli
sub
pop
sbb
ss
out
or
push
fisubrs
add
add
and
xchg
jp
leave
cmp
fidivl
into
cmc
fimuls
or
inc
lods
cmc
movsb
cltd
aaa
xor
in
je
xor
xchg
cs
mov
popa
and
arpl
xor
movb
pop
dec
movsb
outsl
addr16
add
cmp
mov
cs
scas
push
push
push
dec
cmp
mov
call
and
push
loopne
lock
jmp
pop
mov
push
sti
aad
push
dec
push
dec
xchg
pop
mov
lret
xchg
enter
jecxz
sbb
push
add
xchg
cmpsl
xchg
add
sbb
xchg
mov
fcmovnb
and
subb
das
sub
icebp
jbe
sub
in
push
dec
cmpsb
mov
inc
sub
fadd
clc
cmpsl
jl
jbe
xchg
and
pop
cmp
mov
xchg
pop
inc
sbb
push
push
mov
enter
add
scas
cmp
cmp
movb
push
jae
pop
push
lcall
lods
js
mov
into
cmp
fwait
fwait
sub
sbb
dec
test
imul
mov
aas
push
mov
fstp
xor
loope
roll
sbb
push
xchg
push
pop
pop
xchg
mov
dec
sbb
daa
jp
pop
roll
leavew
and
jno
jg
out
mov
add
pop
aaa
adc
cmpsl
hlt
test
movsl
test
jno
push
or
dec
xor
xor
sub
cmp
inc
cmpsb
inc
data16
aam
pop
adc
bound
push
pop
sbb
push
daa
mov
dec
jae
and
jnp
in
testb
insb
sub
test
outsl
fisubrl
push
xlat
mov
jge
jno
movb
jae
xor
fldcw
mov
xchg
mov
mov
pop
mov
jo
xchg
out
xlat
iret
cmovns
sbb
dec
daa
inc
psrlq
filds
inc
fisubs
scas
fistl
insb
iret
imul
aam
adc
loopne
or
popa
decb
adc
repz
nop
adc
mov
stos
addr16
mov
mov
in
mov
shrl
je
leave
mov
adc
lcall
decb
push
pop
adc
sub
or
cmpsb
rcr
cmpsl
repnz
stos
mov
in
decl
pushf
mov
xchg
test
sub
inc
gs
int3
loopne
push
or
enter
mov
mov
es
mov
push
sbb
int3
mov
inc
mov
pop
cmp
xor
add
inc
inc
inc
push
and
lds
add
sub
scas
and
or
cld
pop
out
and
iret
jae
xchg
imul
pop
fnsave
and
aam
ret
test
and
je
inc
arpl
pop
mov
mov
xchg
stc
sarb
cwtl
xor
out
dec
movsl
or
rorb
xchg
push
xchg
xchg
cli
loope
int
lahf
inc
daa
xchg
mov
mov
jmp
push
push
jo
cmpsl
mov
mov
inc
aas
shlb
rcll
mov
inc
push
jp
xchg
push
xchg
sub
icebp
push
dec
insb
pop
stc
push
dec
pop
ficompl
jns
mov
adc
xor
pop
adc
pop
cltd
xorl
icebp
pop
fdivs
in
sbb
adc
or
xor
sub
insb
jae
jbe
cmc
sub
mov
test
daa
pusha
pop
mov
cmpsb
dec
pusha
mov
inc
cmp
fidivl
clc
and
test
outsl
inc
cwtl
out
adc
dec
push
mov
mov
dec
mov
es
sahf
push
jmpw
xlat
jns
sbb
pop
pop
mov
out
mov
lcall
adc
lea
cld
inc
sbb
sub
in
adc
mov
lahf
cmp
loope
jl
stc
stos
jle
inc
data16
xchg
jns
mov
push
and
add
cmp
leave
jmp
stos
and
movb
inc
xchg
jg
into
xor
cmova
aad
int
jno
divl
push
cmp
cli
mov
xchg
pop
sarw
xchg
repnz
push
les
fmuls
adc
dec
cmc
mov
pop
add
adc
fdivl
mov
roll
sub
sub
cmp
mov
xchg
scas
sbb
or
lcall
push
xorb
jmp
lea
mov
and
adc
jbe
pop
lret
push
cmp
divb
sbb
and
popf
adc
cmpsb
dec
test
push
pop
stos
mov
mov
inc
rcll
mov
cs
aas
or
sbb
xchg
pop
bound
icebp
dec
pop
lods
fbld
into
in
jno
push
repz
dec
inc
jecxz
test
je
jo
bound
lods
sub
cs
pop
leave
adc
hlt
and
or
push
xchg
std
jns
test
popf
xchg
xor
add
push
scas
fldt
ss
push
and
leave
int
div
scas
addr16
push
pop
mov
jmp
sbb
cmp
scas
pop
fnstsw
scas
loope
lds
ja
xchg
adc
push
cmpsb
and
push
nop
and
in
mov
cmp
cld
adc
pop
ret
cmp
jl
loopne
or
cmpsb
lea
test
add
cmp
dec
inc
mov
lahf
adc
jmp
jg
lret
popa
sbb
in
dec
aas
or
mov
or
stos
or
and
mov
test
sbb
loopne
dec
call
cmp
aam
xlat
xor
dec
hlt
fsin
pop
sub
inc
ljmp
addl
sub
pop
mov
jbe
xchg
inc
or
cmpsl
push
in
mov
mov
or
jb
jo
push
mov
test
add
cmpsl
mov
sbb
call
pop
xor
pop
popa
leave
push
push
incb
mov
loop
or
fldl
popf
dec
ja
shr
xor
daa
push
dec
mov
jge
ret
push
ret
mov
divl
push
sarb
icebp
mov
mov
cmp
shl
or
mov
outsb
int3
mov
dec
jns
mov
sbb
inc
mov
ficomps
cmpsb
ljmp
inc
mov
shl
movsl
xor
shll
add
push
ljmp
cmp
shll
mov
es
and
dec
xlat
sbbb
jle
jp
inc
cmovp
test
sahf
cmpsl
jp
cwtl
pop
ja
cld
scas
and
inc
pop
aam
push
or
or
shrl
lahf
xchg
test
imull
inc
out
ss
dec
jnp
jo
inc
xchg
testl
cmp
push
insb
mov
mov
push
jae
test
push
dec
jmp
jp
shl
in
xchg
and
sub
xor
mov
lret
out
sub
mov
cmp
shlb
jo
test
jbe
xchg
jp
testb
or
or
std
andb
aad
cmpsb
push
mov
cmp
cmp
je
push
lahf
leave
loop
sbb
shr
and
shl
out
push
mov
mov
cld
or
push
xor
adc
cmp
out
fnsave
in
xor
jmp
lcall
inc
pop
out
cwtl
aaa
adc
fisubrs
push
mov
sbb
xchg
xchg
mov
ds
push
cltd
or
inc
rcl
mov
xchg
mov
nop
je
fmuls
add
mov
adcl
lds
xchg
daa
imul
lcall
and
inc
lret
fdecstp
enter
stos
inc
xchg
xor
sti
or
xor
imul
sbb
sub
pusha
inc
sbb
push
fsub
fwait
xlat
fcomip
xor
sahf
jp
iret
add
sub
imul
inc
sti
push
adc
loopne
aam
test
jle
adc
xorb
in
dec
jne
sbb
jecxz
push
mov
jp
or
pop
push
xchg
enter
inc
ret
xchg
into
xor
cwtl
loopne
inc
mov
ret
ds
cwtl
sbb
pop
mov
fidivrs
test
hlt
lret
shl
cmp
insb
jb
inc
add
and
clc
mov
jp
push
fdivrs
in
sahf
mov
out
aad
xchg
test
mov
adc
mov
cmp
mov
sub
icebp
xchg
push
inc
mov
jle
pop
xor
cmp
cmp
mov
lods
outsl
xor
call
xor
add
in
cwtl
inc
mov
push
sub
jge
mov
and
fidivrs
mov
cmpsb
stc
pop
outsl
cli
inc
aad
inc
pop
inc
out
ss
pusha
cltd
loope
sbb
and
mov
mov
push
roll
xor
xchg
fisubl
ficompl
lahf
inc
xchg
test
lahf
mul
xor
divl
mov
icebp
add
jno
pop
out
cmp
mov
add
jae
ret
fsub
ret
pop
push
cltd
ficomps
pop
lods
mov
or
jnp
mov
pop
hlt
push
fucomip
mov
data16
sub
std
out
dec
shrl
xlat
test
and
repz
push
jg
es
cmp
movl
inc
cwtl
jo
in
inc
insl
fsts
sub
testb
sbb
nop
aaa
aaa
cmpb
sub
pop
das
sbb
push
out
idiv
arpl
mov
shll
sub
clc
leave
ss
or
push
cmpb
movsl
xchg
call
into
int
or
pop
xchg
xlat
gs
fsubs
mov
mov
xor
fdivrl
fwait
ror
mov
lcall
mov
fcompl
int
and
xor
aas
jnp
pop
inc
icebp
es
jmp
or
out
rolb
aaa
push
ljmp
sub
sbb
mov
lret
mov
aaa
lret
pop
mov
xchg
jb
fistpll
test
or
cmp
lea
push
decb
adc
aas
lea
fildl
push
pop
es
lahf
mov
dec
fnstsw
fidivrl
or
jno
enter
or
sti
in
loope
mov
jns
rcl
lods
lret
mov
add
es
push
xchg
ret
imul
repnz
adc
adc
inc
push
out
mov
jns
subb
cmpsb
sahf
ret
lds
mov
fistps
ret
pop
addl
dec
std
jne
fwait
mov
cwtl
aaa
sbb
fildll
scas
in
push
sbb
hlt
sub
and
jb
and
imul
and
out
pop
cs
shlb
pop
loop
cltd
out
adc
jno
fistps
mov
adc
xchg
cmp
cld
and
cmp
ljmp
xchg
pop
sub
rclb
push
or
lret
movsl
cli
or
outsl
ss
ss
inc
cli
cmp
aad
gs
mov
in
jmp
jp
out
adc
sbb
jbe
shl
fiadds
out
mov
or
cltd
mov
aad
leave
mov
xor
and
mov
inc
dec
insb
nop
push
xor
pop
clc
mov
inc
mov
mov
movsb
arpl
inc
add
imul
mov
pusha
dec
xchg
or
inc
rcll
mov
mov
ljmp
inc
fwait
iret
out
mov
insb
test
and
sbb
cltd
int
je
push
std
leave
xchg
xchg
xchg
imul
insb
xchg
shl
push
insl
ret
insb
aad
fstps
stos
ror
lock
out
out
out
ds
test
adc
add
push
jo
cmp
lret
sti
scas
or
divb
pop
rcrb
or
divl
adc
xchg
bound
outsl
ljmp
cmp
mov
jns
lret
inc
pop
dec
test
or
push
mov
stos
mov
push
pop
ret
daa
mov
mov
mov
movsl
jmp
mov
int
call
pop
cmc
adc
dec
call
xor
iret
lahf
enter
js
ret
fsubrs
and
jl
mov
xor
push
adc
lahf
lret
imul
ds
jg
inc
cwtl
or
test
in
dec
mov
sbbb
in
in
scas
dec
push
data16
and
pop
mov
mov
es
inc
ret
fcom
mov
and
mov
push
jae,pn
nop
sub
and
mov
mov
std
pushf
add
inc
sub
fs
loopne
fstpt
fs
gs
cmp
xor
clc
shrb
pop
xchg
in
xchg
jnp
out
dec
aad
in
jns
and
lcall
lret
cltd
test
push
shll
aam
gs
insl
int
sbb
inc
xor
imul
pop
movsb
les
sbb
mov
lret
aam
dec
mov
andl
jecxz
jnp
sub
mov
jne
clc
jno
stc
and
adc
loop
push
call
adc
shrb
dec
rcll
scas
inc
push
lcall
cltd
jmp
mov
out
inc
or
out
lods
pop
xorb
sbb
dec
jmp
or
stos
pop
into
pushf
push
or
cmc
push
adc
imul
mov
rcrl
jg
test
hlt
sub
adc
adc
and
add
sub
out
test
mov
popf
mov
jle
sbb
loopne
int3
xchg
dec
push
jp
xorb
ret
sbb
sbb
mov
aas
sub
xchg
out
lods
mov
jmp
dec
xor
or
xchg
mov
clc
sub
mov
cld
mov
test
std
mov
and
cwtl
mov
push
fwait
push
fidivrs
and
test
pop
idivl
fwait
stos
xchg
ss
int
xchg
push
es
pop
pop
sahf
idivb
xor
jo
inc
add
push
add
loope
pop
fidivrs
ja
xlat
in
and
shrl
imul
jmp
rorb
pop
sbb
sti
mov
outsl
mov
jecxz
mov
push
cmp
cmc
iret
sar
pop
dec
btr
push
xor
xchg
add
xchg
add
cltd
pushf
adc
sub
es
add
dec
rclb
divb
jmp
and
push
add
sub
dec
outsl
sub
repz
push
into
loop
pop
adc
push
adc
lods
loop
stc
fadd
shl
repnz
test
fidivl
xor
outsb
mov
push
pop
dec
cmp
iret
icebp
xor
mov
sub
loop
mov
lods
mov
repz
popf
hlt
mov
fbstp
pop
jb
fcoms
mov
push
sbb
xor
int
pop
into
test
out
insb
nop
insl
lods
mov
fstpl
push
cmp
push
cmpsl
xchg
ret
mov
or
out
jns
mov
fs
je
or
clc
cmc
cmpl
out
push
xor
xchg
xchg
test
push
repz
xor
jb
roll
mov
sbb
or
mov
mov
pop
mov
call
cmc
cmp
rcl
hlt
fnstsw
call
loop
fisubl
cli
cmp
dec
mov
inc
dec
fst
adc
orb
mull
sbb
mov
lret
cmpsl
or
push
or
mov
mov
orb
mov
inc
bswap
lds
xor
lret
pop
add
mov
stc
arpl
fiaddl
push
lret
mov
jp
push
insb
ret
xchg
adc
mov
or
mov
lret
push
add
sbb
in
xlat
cmp
sarl
cmp
sub
pop
or
sbb
cld
insb
fstpl
in
mov
and
push
cmpsb
cwtl
xor
mov
test
test
dec
lock
mov
sbb
out
push
inc
nop
test
mov
or
sbb
ret
cmp
dec
fcmovu
add
aad
int
mov
dec
mov
and
xchg
in
aaa
clc
adc
mov
mov
shlb
xchg
int
mov
push
add
push
mov
cld
pop
out
dec
in
imul
inc
out
mov
test
xchg
push
icebp
and
pop
jne
dec
mov
int
das
aad
pop
fadd
sbb
push
fistpll
repnz
cmc
mov
jle
or
push
cmp
mov
fsubrl
xchg
sahf
lcall
stos
insl
inc
sub
scas
out
xchg
jbe
sbb
cmp
xchg
jnp
test
fdiv
pop
sarl
push
movzwl
jp
mov
daa
jb
pop
cs
inc
outsl
leave
pop
jg
adcl
dec
xor
sub
shll
test
lret
mov
add
push
rolb
or
es
fadds
sub
lods
or
in
cmp
or
shlb
mov
daa
jno
int
scas
ffreep
xor
sahf
sbbl
adc
push
add
mov
jo
sarb
rclb
mov
mov
andl
mov
movl
mov
pusha
mov
clc
dec
pop
push
pop
jbe
mov
in
movsb
jge
xor
xor
pop
cmpsb
push
rorl
add
popf
and
pop
mov
cli
dec
stc
lret
mov
jns
fisttpll
fldenv
xor
adc
jns
pop
lret
inc
popf
add
push
js
adc
add
and
push
mov
rclb
cltd
aam
shr
adc
imul
xchg
ret
pop
imul
inc
fbld
jae
popf
mov
push
mov
pop
push
xor
push
stos
jnp
imul
dec
enter
dec
std
fs
push
cmp
xor
iret
and
hlt
lds
testb
mov
testb
sti
mov
sub
xlat
mov
mov
add
into
fisttpll
nop
mov
jecxz
mov
loopne
insb
decl
imul
imul
mov
cmp
xchg
lock
mov
jg
xor
or
xlat
or
add
pop
mov
mov
in
push
inc
sub
jmp
sbb
xor
sbb
lea
pop
fxch
mov
rclb
mov
pop
xor
movsl
hlt
aam
mov
sbb
dec
test
jmp
leave
sbb
inc
sub
fwait
cmp
sbb
fistps
call
mov
test
jmp
pop
cmp
imul
shrb
cli
dec
or
sub
mov
cld
pop
loop
xchg
mov
add
sbb
and
fdivl
jmp
mov
or
enter
cwtl
jl
and
cmp
adc
pop
mov
cmpb
popf
cltd
mov
xchg
into
fwait
push
pop
sti
pop
cmpsb
push
fidivrl
in
pop
ljmp
mov
lret
stos
pop
mov
das
ss
pushf
cmp
pop
or
loop
imul
notb
and
scas
xchg
pop
adc
sar
movsb
int
push
or
mov
scas
clc
push
scas
dec
xchg
xchg
icebp
int3
cmc
insl
in
pushf
jns
shr
fstps
bound
imul
call
xchg
cltd
std
test
pop
outsl
lret
pop
pop
or
stos
in
inc
clc
ret
or
xlat
lds
jbe
xlat
push
inc
mov
and
push
out
ds
pop
out
sbb
mov
add
dec
lds
cmp
add
out
cmp
and
jbe
jno
cwtl
lea
mov
push
or
adc
fsubs
or
or
sbb
test
ss
in
fbld
and
dec
inc
lret
or
mov
jne
jns
iret
sbb
fcomps
enter
inc
mov
jl
add
stos
fucomi
jmp
outsb
inc
lret
repnz
sbb
fists
loopne
mov
imul
or
stos
mul
push
dec
jo
xor
mov
repnz
popa
dec
js
sub
xor
pop
mov
sbb
fisubrs
adc
rcrl
lods
jl
add
fisubrs
jecxz
dec
stos
dec
insb
divl
sarl
lock
iret
add
jne
add
cmp
imul
and
fiaddl
push
enter
jae
jno
lcall
jae
xchg
jle
xchg
iret
repz
xchg
pop
xchg
in
cwtl
inc
clc
xchg
test
cmc
jns
sub
fucomp
out
xor
sahf
mov
mov
push
adc
mov
lock
dec
aaa
dec
xchg
sub
sub
mov
std
es
xor
inc
arpl
and
xchg
loop
dec
scas
divl
cmp
jge
mov
push
cmp
pusha
repz
lret
clc
enter
mov
fldt
push
aad
mov
push
in
and
in
ror
add
add
mov
in
jno
cmp
jp
rorl
paddd
sub
idivb
mov
inc
mov
addb
xorl
lret
push
in
cmpsl
shl
stc
out
out
mov
mov
xor
cmp
pop
mov
rclb
mov
fwait
cltd
jns
mov
xchg
dec
add
cmpsl
add
popf
pop
or
sbb
cs
push
mov
push
lret
dec
out
stos
or
inc
inc
insl
inc
xchg
push
test
mov
bound
sub
or
icebp
outsl
mov
xchg
iret
sub
xchg
jne
lds
cmp
xchg
js
inc
xchg
jle
sarb
popf
jg
push
out
gs
dec
fs
enter
js
sub
aad
in
stos
push
xchg
push
jo
shl
movsb
dec
fmulp
adc
inc
fs
lahf
shl
in
stos
inc
int
push
lods
test
imul
and
test
fistpll
rol
movsl
and
js
dec
or
es
leave
inc
mov
lcall
icebp
cld
sbb
inc
or
inc
xor
adc
push
sub
dec
pop
scas
pop
in
mov
incb
xlat
xchg
sbb
test
jno
shlb
xchg
mov
mov
idivl
pusha
and
mov
fs
xchg
faddl
rolb
sbb
test
jae
dec
mov
inc
imul
out
inc
mov
dec
pop
out
or
lods
lea
fistps
push
xor
push
adc
insl
lcall
sti
imul
lds
adc
insb
xor
xchg
jp
rolb
xchg
inc
and
jbe
arpl
cltd
inc
in
mov
popf
jl
popf
orb
test
inc
cmpsl
stc
sbb
push
inc
jb
or
bound
fidivrl
in
mov
mov
cmp
sti
sub
in
imul
rcrl
push
adc
add
jo
aaa
push
push
pop
pop
dec
mov
stos
imul
or
jbe
mov
adc
flds
inc
push
dec
xchg
mov
pop
ljmp
ss
loop
adc
pop
adc
or
addb
lds
xchg
jne
popa
lcall
sbb
jle
hlt
call
push
test
add
insl
jnp
mov
inc
xchg
add
in
xchg
js
pop
shrl
push
fstl
iret
push
fucomi
mov
push
ljmp
inc
mov
call
mov
pop
add
out
lds
jg
jmp
pop
sbb
pop
ret
xorl
mov
xor
add
testb
sub
adc
sub
and
xor
sub
add
pop
orb
fstps
mov
jle
pushf
or
pop
aas
xor
adc
sahf
scas
daa
jmp
and
fwait
or
add
xor
stc
and
negl
sbb
cld
lea
sbb
adc
int
cmpsb
int
push
jb
pop
add
pop
es
gs
lea
pop
cmp
or
jae
cmpl
push
xchg
xor
aam
daa
je
ficomps
mov
daa
dec
lahf
cmp
push
adc
fwait
push
xchg
inc
push
pop
adc
call
dec
fs
cltd
les
insl
jcxz
je
mov
pop
dec
fadds
and
mov
inc
inc
hlt
xchg
xchg
cld
lock
repnz
mov
addr16
adc
clc
addr16
pop
sarl
and
sub
jne
or
sbb
in
or
cmp
sub
sbb
loop
int
pop
roll
insl
cmp
insb
cmp
nop
gs
repz
in
sbb
in
jbe
cltd
cmpsl
cmc
push
inc
fdivrs
aam
xchg
outsb
push
push
outsb
lahf
ss
mov
mov
aad
sbb
mov
pop
mov
pop
mov
or
bnd
mov
daa
add
mov
mov
outsb
xor
push
movsb
iret
pop
cmp
or
cli
aas
rclb
xchg
jle
out
popf
pop
lock
cli
mov
xchg
xor
ss
jp
dec
into
stos
jnp
mov
and
lahf
and
jnp
les
in
outsl
push
cmp
adc
or
push
stos
data16
cmp
in
inc
cmp
aas
in
jle
dec
adc
dec
in
inc
dec
bswap
ret
and
orb
test
in
sub
mov
xchg
sub
ja
lahf
test
int
jbe
jp
push
xchg
stos
and
sarl
xor
negb
imul
add
push
je
jbe
enter
dec
mov
lret
mov
lock
cmp
xchg
pop
std
lds
xorl
sub
pop
lcall
jo
popf
push
bound
addl
push
out
mov
push
lret
or
scas
pop
arpl
stc
bound
mov
adc
rcll
cmp
xor
fsts
mov
out
xor
jmp
stos
loop
add
xor
cmp
mov
pop
cmp
push
push
sahf
xchg
lret
mov
add
or
cli
aaa
push
sbb
sbb
test
lds
jo
pop
fidivs
sarl
xchg
mov
sub
pop
adc
icebp
mov
ret
ds
xor
jl
mov
push
jae
mov
xor
inc
cmp
jecxz
cmp
sub
and
mov
leave
jno
aad
xchg
int
int
imul
sbb
int
sub
cld
test
jno
pusha
pop
sub
adc
or
push
pop
inc
xor
cmp
dec
in
roll
push
push
stc
mov
push
push
xor
ficompl
dec
xor
jmp
lods
jecxz
pop
jmp
arpl
shll
mov
fisubl
fs
aam
orb
incl
xor
adc
and
sbb
mov
aas
stos
cmp
mov
or
xor
and
mov
sbb
mov
scas
bound
scas
mov
icebp
addb
enter
loope
int3
xor
jl
adc
faddl
icebp
mov
or
aam
cltd
ret
jecxz
mov
adc
hlt
loopne
test
xor
jae
mov
insb
lods
jbe
xor
cwtl
add
sbb
push
cmp
out
mov
mov
push
pushf
push
mov
xor
cmp
mov
cmp
into
push
in
or
fstpt
cli
imul
sarb
push
xchg
ja
push
and
cmp
cmp
cmpsb
xchg
jp
repnz
incb
sbb
test
mov
xchg
dec
outsb
jmp
xor
pop
and
pop
jb
cmpsl
insb
aaa
loop
cmp
mov
xchg
push
rcr
mov
in
jl
cmpsl
int3
and
fdivrs
jnp
mov
xor
lahf
push
sahf
hlt
mov
and
or
frstor
ljmp
jno
mov
in
test
jnp
jb
lock
lods
pop
pop
stc
push
insl
sbb
subl
jmp
xor
pop
xchg
jecxz
dec
stos
xlat
call
in
cltd
mov
sub
sbb
mov
jmp
aam
xchg
push
jg
shlb
icebp
nop
cli
enter
fcmovb
mov
lods
stos
dec
test
daa
bound
outsl
and
xchg
xchg
lret
jne
lods
jecxz
mov
lea
xchg
and
jb
aad
and
addr16
jmp
jmp
or
gs
cmp
imul
xchg
cmpsl
je
clc
out
test
mov
push
sub
xchg
jle
mov
lahf
nop
mov
push
lds
insl
mov
inc
je
xor
mov
add
mov
mov
cld
ljmp
sbb
movsl
loope
add
lock
clc
clc
pusha
mov
addr16
pop
dec
shlb
les
bound
dec
xchg
std
dec
jne
aam
push
scas
dec
stos
in
in
pop
cmpsb
dec
cmp
daa
icebp
mov
popa
inc
jl
xchg
adc
in
xchg
cmp
and
out
dec
into
push
cmc
call
adc
sub
icebp
sbb
sti
ja
mov
cmp
inc
sahf
adc
jne
rcll
hlt
xchg
ds
or
fildll
ret
dec
sbb
cmp
xchg
mov
jmp
cld
ftst
in
test
mov
outsl
lret
dec
imul
sub
test
adc
and
push
xor
addb
adc
dec
jg
sbb
dec
or
jp
adc
sub
pop
fwait
and
xor
dec
inc
or
cld
sbb
arpl
and
loop
jbe
stos
pop
hlt
iret
mov
sbb
mov
sub
cwtl
ss
shr
and
into
mov
dec
repz
ret
in
fwait
sub
stos
popa
std
mov
hlt
ret
pop
mov
test
add
cmp
cltd
push
inc
mov
aam
xor
jo
pop
xor
jbe
fdivs
jmp
pop
xchg
cs
aam
in
pop
inc
pusha
stc
shl
pop
es
mov
cs
test
sbbl
jo
fstp
xor
pop
subl
aaa
cmp
sbb
shll
inc
mov
ja
and
or
adc
ret
and
test
leave
and
pusha
cmp
out
and
inc
mov
mov
cmp
cmpsb
add
xor
pop
loope
jge
fisubrl
adc
xchg
mov
lret
push
jns
and
pop
xor
and
sbb
rcll
js
stos
call
data16
dec
in
mov
dec
test
ljmp
adc
sub
mov
xchg
or
adc
pop
inc
fs
jmp
jb
mov
lods
mov
cmc
sbb
dec
mov
or
insb
call
popa
mov
fiaddl
in
cmpsl
pushf
xchg
inc
mov
stos
sub
jno
xchg
jno
std
add
lods
ret
jge
sub
xchg
jp
pop
rorb
pop
cmpsl
fsubs
mov
and
aaa
mov
push
xchg
cmpsl
add
rcrb
inc
jns
rcrl
cmp
dec
pop
mov
enter
loop
insb
insl
cld
mov
sbb
xchg
pop
lods
sub
push
dec
in
adc
ljmp
scas
jns
imul
cmp
or
test
mov
mov
test
lock
lret
sbb
das
mov
dec
xor
enter
sub
add
cmp
xorl
mov
dec
rorl
inc
aas
into
add
xlat
pop
pushf
mov
mov
or
adc
push
in
call
andb
fimull
xchg
add
cmp
pop
loop
xchg
or
jp
sti
insb
lods
enter
push
xchg
fiaddl
xor
ret
cs
pop
lret
imul
fs
xor
shll
mov
out
or
pop
aad
cmpsb
sbb
test
popa
push
out
inc
pop
jp
sub
test
dec
xchg
inc
dec
cltd
dec
mov
popf
jle
mov
pop
out
xchg
add
xor
jae
leave
push
xor
and
pusha
lret
cmp
and
or
or
out
xor
pop
test
and
pop
adc
pop
sti
pop
mov
sbb
lahf
mov
mov
ret
xlat
fistpll
dec
fdivrl
jnp
shr
repnz
out
fchs
negl
mov
sub
rcrl
lcall
or
je
push
jp
nop
inc
add
fiaddl
add
jecxz
js
xor
pop
out
addb
mov
add
xchg
xor
lret
dec
rcr
sbb
mov
std
jmp
xor
push
inc
mov
and
add
xchg
xor
mov
movsl
lds
push
out
ror
mov
loope
mov
test
cmp
loope
outsl
adc
aam
jmp
jmp
cltd
and
mov
mov
fsub
into
sbbl
add
lahf
or
add
sbb
xchg
xor
cmp
jle
cli
mov
outsb
jecxz
cmp
add
cmp
movsb
mov
sbb
pop
mov
imul
xor
jnp
inc
sbb
out
repz
jge
dec
faddl
idivl
push
xchg
loopne
jnp
push
mov
lahf
xchg
jne
sub
cltd
je
lods
adc
jne
int
xchg
cmp
adc
xchg
adc
sub
sbb
je,pt
sti
nop
cmp
jo
into
push
sbb
pop
jb
aad
lock
pop
addr16
fadds
gs
scas
test
movsl
xor
or
je
cmpsb
mov
ja
lea
out
push
xor
xor
pop
sub
int
inc
push
fstpl
lods
lea
mull
cli
lahf
mov
and
cwtl
push
mov
jle
fisttpl
addl
mov
leave
cmc
sub
jecxz
dec
sahf
pushf
push
jae
ret
mov
out
mov
sbb
fwait
sti
jl
ss
scas
pop
les
bound
sti
iret
les
je
pop
gs
xlat
insb
inc
dec
pop
pop
popf
movsl
jae
repz
xor
or
add
fistps
jae
pop
jno
repz
dec
andl
data16
test
je
xchg
call
mov
ud0
js
loopne
negl
aas
jl
jb
inc
scas
loope
clc
call
lods
cmp
rcrl
pop
int
sbb
mov
push
call
xor
ret
pop
adc
fstps
cli
pop
add
mov
add
lods
mov
cwtl
call
popf
repnz
js
xlat
insb
repz
xor
jecxz
mov
dec
call
push
fstl
rolb
enter
or
in
pop
testl
js
push
sub
nop
sub
clc
bound
xchg
pushf
cmp
add
xchg
arpl
test
orl
call
cs
add
mov
loop
int3
icebp
sub
mov
mov
adc
into
lods
pop
lds
cmp
jno
cmp
inc
addr16
jle
inc
sbb
pop
rolb
sub
dec
mov
sub
fdivrl
pop
mov
dec
in
pop
mov
adc
sahf
jmp
push
sub
in
fdivl
jbe
jle
jmp
icebp
sar
out
or
xchg
xor
and
fstpl
jge
mov
sbb
test
clc
mov
insl
arpl
pop
fstps
in
add
ja
arpl
jae
push
sub
mov
pop
in
push
scas
cmp
xor
mov
sbb
stos
mov
adc
inc
filds
adc
jg
and
xchg
rclb
dec
inc
cmc
mov
popf
add
and
push
sbb
cld
mov
mov
fistl
inc
add
bound
dec
cwtl
repnz
adcl
scas
cmp
inc
aad
or
adc
data16
arpl
and
jbe
add
xor
xchg
out
movsb
jp
add
mov
mov
jge
scas
popf
inc
arpl
pop
jge
and
pop
xor
or
push
inc
rorb
lock
xlat
arpl
mov
pop
push
jl
or
popl
jge
sbb
cs
lahf
mov
mov
fprem1
sub
xor
sbb
pushf
stos
lret
nop
mov
iret
fs
xor
cmp
add
roll
cmc
movsb
pusha
cmp
mov
ja
lret
xchg
negb
notl
jmp
mov
pop
in
in
cmpsl
add
mov
cmpsb
in
fidivrs
jmp
mov
lock
jno
xchg
sbb
push
jnp
lcall
repnz
or
hlt
sub
imul
mov
ljmp
ljmp
sbb
pop
push
mov
cmp
mov
cli
pop
mov
cli
pop
cmp
inc
pop
xchg
or
mov
shll
lret
aaa
sbb
pushf
pop
jo
xchg
add
shrl
fbld
imul
sbb
push
pop
xlat
inc
inc
cwtl
pushf
and
sbb
add
push
imul
int
rcll
out
fmuls
pop
mov
mov
or
sbb
roll
mov
les
adc
insb
shl
aas
negb
jle
dec
in
push
fdivs
movsl
sub
push
mov
pop
cmp
xchg
add
cmp
mov
cmpsl
cltd
mov
fucom
in
dec
sarb
fwait
cmpsb
mov
callw
and
xor
mov
sbb
int3
add
or
aas
imul
pushf
mov
jg
lahf
jne
mov
push
pop
sti
jo
sbbb
icebp
adc
hlt
dec
aas
or
and
rcrl
cli
nop
jle
cmp
jl
xlat
addr16
pop
and
scas
loope
dec
or
inc
xor
mov
inc
out
jl
test
and
js
cmp
push
lock
das
sbb
inc
sub
dec
ret
pop
lock
dec
out
movsl
lcall
xchg
pop
popa
mov
jbe
inc
pop
ret
imul
pop
in
mov
lcall
adc
push
mov
dec
adc
outsb
sub
inc
aam
inc
daa
push
sti
orb
and
aam
cmp
negl
push
cld
mov
aaa
fldcw
xchg
pcmpeqw
stc
cmp
mov
adc
movsb
lcall
fidivrl
data16
test
mov
pop
cs
xor
inc
leave
mov
sub
xchg
fisttpll
in
cld
mov
lret
cmp
std
popa
dec
sbb
aad
icebp
test
fs
lret
inc
mov
jg
lock
cld
mov
pusha
inc
popf
cmp
je
mov
push
pushf
cmp
add
inc
push
jne
jle
pop
mov
inc
add
lea
push
pop
xchg
fincstp
mulb
cwtl
loop
pop
das
push
arpl
sub
test
mov
call
popa
xchg
mov
sbb
loopne
aam
pop
pop
outsl
fiadds
arpl
xchg
pusha
mov
mov
cs
es
jp
hlt
dec
mov
stos
adc
lock
fldt
adc
js
stos
stos
arpl
dec
inc
subb
rcll
mov
das
movsb
xchg
out
inc
push
test
ret
decl
add
sarl
movsb
cmp
and
in
pop
pop
jecxz
mov
mov
xor
ja
inc
outsl
jp
sbb
push
inc
jle
sbb
mov
and
xchg
mov
dec
je
mov
std
shlb
jb
int3
sbb
cmpl
xchg
lahf
sub
test
push
sub
sub
push
sbb
test
aaa
xchg
dec
and
jecxz
sahf
aaa
xchg
repz
nop
xchg
inc
mov
fbstp
add
cmp
mov
xchg
mov
mov
call
aad
jb
push
out
ret
and
pop
and
sub
je
leave
outsb
jbe
daa
dec
call
aaa
pop
fcmove
bound
je
idiv
jnp
imull
je
stos
cmp
push
push
dec
sub
outsl
neg
insl
push
pop
push
cmp
adc
inc
hlt
in
jne
xchg
mov
lds
or
pop
mov
adc
add
js
mov
clc
stos
push
int
mov
outsl
out
sub
in
iret
jns
jg
cmc
ljmp
adc
ss
movsl
push
jmp
mov
negl
sarl
push
jge
outsb
xchg
orb
int3
imul
or
and
pusha
mov
cmc
mov
rclb
decl
mov
push
or
andb
sbb
inc
mov
mov
mov
sbb
or
stos
loop
fwait
int3
pop
inc
sub
daa
jno
cmp
ljmp
movsb
lds
jle
bnd
push
pop
adc
out
jns
xor
sbb
out
adc
pop
shll
adc
inc
mov
into
mov
push
rcrb
out
sub
int
inc
dec
xor
mov
popf
dec
shrb
sub
pop
lock
ja
sub
idivb
aam
sub
movsl
mov
xchg
xor
mov
mov
or
fimull
inc
call
xlat
push
rorl
std
xorb
jno
mov
fmull
mov
das
insl
popf
mov
stc
jg
movsl
repnz
sahf
mov
ljmp
xor
mov
mov
roll
pop
mov
adc
repz
outsb
in
sbb
sti
adc
cmp
ss
jae
mov
push
mov
mov
outsb
repz
jmp
mov
jmp
and
loop
imul
lcall
inc
in
xchg
sbb
icebp
xor
insl
mov
movsl
ret
fldt
mov
je
jmp
fsubrl
xchg
shll
xchg
inc
and
cmp
jb
cmp
out
arpl
daa
je
shrb
xor
loop
jo
lahf
mov
sbb
sub
idivl
outsb
mov
inc
xchg
shlb
dec
bound
data16
mov
push
inc
cmc
lea
movsb
mov
mov
orb
jecxz
mov
xchg
imul
cli
cmp
mov
ret
jge
je
mov
imul
sbb
jbe
test
jg
sub
mov
leave
adc
hlt
cli
lret
pop
inc
jbe
sbb
test
and
out
and
scas
mov
out
cmp
dec
jae
inc
or
xchg
test
inc
je
add
sahf
jge
push
pop
cwtl
push
std
test
pop
mov
inc
fs
push
push
lds
int
cmp
jge
or
fdivl
pop
push
int
ret
cmp
stc
mov
pop
pop
jne
mov
rcrb
loop
std
loopne
in
jns
push
cld
pop
push
xor
mov
pop
addr16
inc
daa
cmp
xor
mov
arpl
cs
in
or
cmp
data16
jnp
in
scas
pop
jnp
adc
movsl
fldenv
scas
std
inc
mov
lcall
nop
test
push
add
cwtl
out
mov
xchg
out
out
inc
cmp
arpl
int
sub
jno
shl
adc
push
mov
mov
xor
cwtl
jl
lret
cmpsl
pop
mov
mov
pop
mov
arpl
ds
gs
pop
nop
pop
call
cmp
push
test
fisubrl
pop
cmp
stc
clc
sahf
leave
mov
mov
and
push
inc
ds
sahf
out
jg
imul
or
test
bound
arpl
pop
cmp
ficoms
cmp
xchg
fadd
rclb
or
xor
lods
scas
mov
or
scas
push
add
or
fs
scas
insl
mov
lret
shrb
sbb
sub
lods
je
out
cli
dec
add
jecxz
jne
outsb
and
mov
push
lods
xchg
rolb
lcall
push
or
dec
or
pop
mov
mov
icebp
push
xor
aam
jno
jbe
cltd
inc
fstps
pop
dec
test
movsb
sub
iret
cmp
mov
popf
insb
jo
sahf
int3
mov
pop
std
roll
and
leave
jns
in
pushf
rcr
and
mov
xchg
add
fcom
mov
clc
cmpsb
pop
rcll
xor
fistps
lret
push
iret
fidivs
lret
enter
pop
jb
repnz
popa
ja,pt
jecxz
cmp
lods
sbb
cmp
and
in
fdivrp
adc
in
or
mov
xchg
inc
push
xchg
mov
out
cs
lods
hlt
clc
ljmp
pushl
mov
dec
dec
xor
jae
pop
test
es
in
lret
pop
outsl
push
out
jne
xchg
lds
lret
js
jle
call
xor
pop
mov
rorb
aas
or
cmp
mov
adc
push
js
gs
mov
int3
aam
leave
mov
mov
cmp
fdivrs
repz
mov
insb
xchg
idivb
lods
xchg
lret
loope
add
pop
fistps
pop
pusha
dec
xor
xor
fwait
adc
mov
adc
in
repz
sub
jl
mov
mov
sbb
ds
sub
out
add
sub
lock
pop
xchg
push
dec
or
ret
out
jno
lret
imul
test
jmp
stos
shl
adc
push
push
adc
cmpsb
mov
add
push
mov
push
mov
popf
jp
mov
sub
nop
xlat
clc
ror
pop
pop
mov
jb
out
in
popa
cmp
jno
testb
leave
rorb
movsb
adc
mov
vpcomb
sub
es
jnp
js
xor
clc
into
or
dec
fildl
das
dec
cmp
inc
mov
sbb
xchg
ljmp
sub
or
xor
pushf
data16
gs
stos
jecxz
xor
iret
dec
inc
sub
test
jg
mov
lret
in
leave
sbb
xor
test
push
cld
sbb
dec
pop
cmp
arpl
jmp
out
cli
cmp
mov
int3
lret
aam
repnz
mov
stos
arpl
repnz
and
rcrl
lods
sbb
lds
pop
adc
mov
sti
fiaddl
test
mov
xor
aaa
add
jno
sub
hlt
xor
xor
xchg
dec
sub
stc
or
leave
pop
or
lea
lcall
pusha
push
cs
sub
or
dec
clc
adc
jge
push
xor
xchg
mov
mov
in
sbb
jge
pop
sahf
inc
mov
mov
fimuls
mov
mov
outsb
or
sahf
push
mov
shll
ss
scas
popf
cmpsl
adc
mov
mov
rolb
jnp
dec
ret
mov
add
push
mov
sub
xchg
xor
cmp
pop
aaa
cmc
xor
hlt
std
dec
and
es
stc
xor
inc
inc
mov
cmp
adc
push
ljmp
jnp
inc
and
jmp
add
sbb
call
mov
frstor
pop
orl
push
dec
mov
inc
and
in
rcl
insb
sahf
dec
and
mov
jl
mov
fldenv
ret
rcr
cmp
mov
jbe
je
fs
mov
clc
mov
loope
push
jo
ret
sti
sar
stos
inc
push
add
pop
xchg
and
es
scas
daa
sbb
add
jp
stos
adc
scas
mov
cli
ret
shll
es
loopne
fildl
push
push
adcl
lock
aam
lret
and
mov
scas
push
sbb
jbe
fisubrl
jg
push
pusha
sbb
call
inc
sti
ret
out
fwait
jmp
mov
xchg
lods
mov
cmp
adc
cmpsb
fs
cmp
or
inc
inc
aaa
pop
push
and
rolb
dec
cmp
int
shlb
cli
popw
lods
ljmp
add
pop
inc
cmc
sub
adc
scas
and
lock
bound
pop
jne
add
inc
ficoml
mov
repnz
jno
div
pop
jo
xchg
mov
lock
pushf
fmul
pop
mov
out
fisubrs
ret
out
das
inc
mov
and
mov
int
mov
pop
or
cmp
xor
xchg
popa
jo
rep
pop
test
adcl
mov
cmp
pop
jecxz
repnz
lret
call
pop
mov
cmp
pop
sub
mov
std
lcall
jp
push
xchg
call
xor
inc
lods
mov
fldt
pop
cmpsl
jg
repnz
cld
pop
mov
cmp
divl
iret
mov
std
xor
xchg
ret
in
test
daa
fildl
femms
leave
cmp
les
addr16
out
mov
dec
inc
dec
jmp
push
std
mov
mov
mov
icebp
sub
sbb
nop
jmp
andb
shl
lea
jo
sbb
xor
mov
dec
clts
mov
cmc
pop
jbe
js
lcall
stc
imul
mull
insl
jbe
sbb
jb
in
lret
xor
mov
inc
mov
jne
rcl
fucomi
filds
test
cltd
js
dec
add
test
pop
mov
and
adc
enter
jge
pop
mov
push
add
inc
pop
adc
cwtl
in
andnps
mov
mov
dec
das
pushf
cmp
imul
rclb
and
ja
inc
jmp
insb
bound
jge
xchg
enter
out
out
xchg
cmp
adc
xorl
mov
xor
jmp
rcr
rcrl
dec
mov
mulb
sbb
dec
dec
pop
xor
xchg
inc
mov
fsubl
pop
loope
sarb
mov
mov
inc
stos
daa
daa
dec
pop
sbb
insl
ja
aam
pop
ljmp
pop
scas
icebp
hlt
mov
jp
mov
bound
cmp
dec
or
adc
add
lea
sub
sbb
push
xchg
outsb
xchg
outsb
mov
imull
int
sbb
mov
cmpsb
or
mov
gs
lea
pop
call
push
movl
add
push
inc
xor
lcall
cltd
cmp
add
jne
mov
add
jp
cld
imul
and
mov
mov
push
jno
aad
fstpl
adc
sub
repz
ljmp
add
and
into
arpl
leave
imul
mov
and
in
les
mov
mov
xor
sbbl
cmp
cmp
push
cmpsl
and
jb
repnz
cli
mov
and
push
fcomip
in
sub
stos
rcrb
jne
sub
lods
and
pop
clc
mov
adc
sbb
adc
jne
or
mov
add
or
adc
aad
mov
sbb
sbb
jne
lods
negl
cli
push
mov
push
push
pushl
mov
cmp
iret
mov
add
les
cmc
mov
js
je
mov
iret
mov
andl
mov
gs
les
or
xchg
mov
pop
in
push
pop
dec
mov
cli
int
lods
ss
test
in
add
or
add
cs
clc
lret
in
loopne
xor
add
cld
lcall
sub
xchg
adc
movsl
jns
fidivl
inc
hlt
jmp
or
xchg
leave
movsb
cltd
xor
adc
shrb
inc
sub
test
dec
mov
leave
xchg
movsb
addl
cmp
inc
imul
divb
das
cwtl
mov
jno
add
stc
sbb
ret
xchg
nop
push
gs
pop
adc
aas
or
sbb
or
inc
inc
sub
pop
in
ror
jns
stc
cmp
push
mov
out
out
cmp
lcall
mov
data16
ss
inc
adc
sub
sub
push
ds
pop
adc
jb
push
lods
insb
data16
cltd
repz
push
push
outsl
pop
cmp
insb
addr16
int
add
adc
pusha
mov
lods
les
imul
jmp
cmpsb
pushf
je
xchg
fcoms
jmp
or
add
les
jae
mov
inc
call
or
jge
push
lods
mov
sbb
mov
inc
or
push
mov
enter
push
lock
enter
jecxz
pop
fldt
inc
cmpl
dec
push
mov
mov
mov
mov
ds
movsb
movsb
sbb
in
mov
push
shr
and
push
xlat
lret
fimuls
leave
ljmp
ljmp
push
mull
pop
popa
pop
addb
jnp
xchg
lret
pop
mov
lcall
stos
inc
lahf
jecxz
push
cwtl
repz
cwtl
xor
push
push
dec
lods
sbb
xchg
jmp
leave
bound
inc
insl
jb
fs
shrb
sarl
stos
add
push
xor
mov
and
cli
pop
test
mov
mov
dec
in
add
lea
lcall
inc
leave
cs
cmp
mov
and
out
movsl
push
bnd
cmp
inc
loop
stc
and
push
mov
pusha
std
push
movaps
out
pop
jle
mov
inc
inc
xlat
loop
jno
mov
fnsave
cltd
mov
leave
cld
in
mov
or
adc
xor
sub
ret
add
sbb
mov
push
movsl
sub
out
addr16
sbb
sahf
mov
xor
addr16
or
sti
sbb
mov
roll
push
gs
xor
sbb
sbb
ret
out
sar
pop
dec
jmp
pop
jge
push
jmp
push
mov
outsb
mov
dec
sub
xlat
pop
das
mov
cltd
daa
jle
push
xor
adc
insl
adc
je
pushf
dec
adc
test
imulb
int
and
sub
rolb
ret
cli
movsl
jns
call
xor
pop
jne
cwtl
xchg
inc
xchg
out
sahf
das
lock
and
in
inc
inc
mov
mov
test
repnz
push
xchg
xor
out
leave
push
mov
mov
pop
pop
jg
call
add
adc
mov
mov
sub
add
push
test
xor
push
leave
jge
imul
pop
popf
mov
add
icebp
aam
testb
aad
js
les
sahf
inc
cmp
mov
lret
inc
aad
sbb
sbbl
mov
dec
push
cmp
mov
in
sub
add
cs
add
sbb
pop
and
icebp
out
xchg
xchg
xchg
in
xor
add
dec
and
lahf
jecxz
imul
push
or
fistps
mov
pop
lahf
outsb
insl
jge
and
mulb
push
int
adc
mov
lods
cld
cmp
jmp
jmp
in
ss
or
jg
adc
sub
mov
jns
jmp
mov
sbb
mov
subl
jb
jnp
stos
jns
rorl
adc
les
fwait
push
dec
dec
cwtl
jnp
jg
lret
shrb
cmp
inc
inc
fisttps
push
xor
daa
arpl
lock
int
es
cmp
xchg
mov
xor
mov
cli
aaa
dec
int3
out
inc
pop
pushf
dec
adc
inc
imull
mov
shrl
pop
lock
leave
nop
mov
add
push
sbb
fnstsw
stc
sahf
cld
rcrb
push
sbb
xchg
mov
fisttpl
addb
dec
fs
inc
clc
in
imul
std
insb
mov
lods
jo
rorl
jo
cwtl
movsb
jg
sub
push
into
fwait
les
jo
jge
cmpsl
mov
iret
shrb
scas
daa
mov
in
cmp
fdivl
aam
orl
repnz
adc
pxor
imul
inc
and
xchg
sub
pushf
test
cwtl
lock
fwait
push
pushf
cmp
out
jno
call
loope
mov
push
mov
cld
incl
xchg
jg
adcb
aam
lea
mov
push
scas
push
fmuls
jbe
push
in
mov
dec
test
xor
xlat
and
sub
add
mov
pop
sbb
jne
movsb
xor
sub
imul
aam
push
jnp
xor
stos
push
jnp
adc
ja
push
cmp
inc
adc
pop
push
bound
mov
xor
and
ficoml
push
setnp
sbb
pop
sub
popa
in
or
bound
inc
bound
dec
inc
scas
and
mov
repz
push
push
outsl
inc
pop
xchg
out
adc
outsl
fcmovne
add
or
test
sarl
imul
imul
cmc
or
in
mov
push
jp
outsb
jb
xchg
inc
fmuls
or
cmp
pushf
es
xor
jnp
shr
cmpxchg
mov
ficoms
mov
xor
std
bound
xor
rcll
dec
mov
inc
movsl
shlb
jg
xchg
cli
jbe
stc
push
add
js
add
insb
in
insb
cwtl
in
pop
cmpsb
sub
pop
mov
lahf
std
xchg
bound
ljmp
or
jge
lahf
adc
push
pop
out
out
dec
aaa
fisubl
popf
shlb
mov
push
mov
sbb
xchg
push
mov
mov
inc
jecxz
insl
aas
ficomps
sub
pop
dec
mov
in
cwtl
and
gs
pop
dec
cld
fldt
jbe
fchs
jbe
inc
mov
and
push
cli
je
nop
adc
dec
hlt
pop
jmp
dec
addr16
sbbl
mov
xchg
sub
popa
inc
call
into
ljmp
js
pop
ss
push
xlat
inc
push
gs
and
inc
popa
fwait
test
lcall
gs
adc
mov
adc
add
sbb
dec
mov
enter
pop
nop
fisttpl
and
push
fmulp
add
cld
inc
push
adc
mov
dec
and
and
push
jo
sub
xor
inc
push
test
test
dec
fldenv
pop
pop
xchg
scas
lods
out
cmpb
insb
xor
inc
sub
dec
cmp
test
rcrl
jns
jns
test
in
bound
test
mov
xor
test
mov
das
fs
lahf
popf
mov
aam
pop
movsb
mov
shl
scas
sbb
frstor
jo
push
fsubrs
cmp
sbb
inc
pop
sub
int3
imul
jmp
adcl
dec
popa
es
cmp
adc
inc
xor
adc
adc
xlat
movsb
or
cmpsl
mov
mov
aas
xchg
imull
daa
iretw
mov
rol
mov
push
sti
push
fs
mov
rolb
sub
mov
stos
dec
addr16
andl
and
rcrl
inc
shr
cltd
jge
jle
inc
insb
repnz
shll
daa
out
xadd
xchg
xchg
aas
jecxz
ret
mov
pusha
adcl
rol
dec
push
call
pop
imul
push
scas
je
jne
jecxz
mov
in
adc
dec
inc
aad
sub
in
sbb
roll
pushl
scas
int
stc
das
jle
jno
cmc
dec
fwait
hlt
call
loop
pusha
insb
xchg
outsb
and
jb
fildll
xlat
mov
aas
mov
insl
sbb
jl
mov
lret
sub
fwait
test
inc
int3
push
push
int
mov
dec
push
movsl
pop
test
aaa
sub
bnd
xor
bound
and
sbb
out
or
sbb
in
xchg
push
cmp
sarb
cmp
mov
xor
xor
lcall
jp
ja
jno
push
cmc
sbb
outsb
cmp
sub
and
push
cmpsb
stos
adc
outsl
rcl
or
fdiv
inc
and
test
xchg
push
lret
push
push
pop
bound
imul
push
cmp
add
ss
int
sbb
std
xchg
add
mov
in
cmc
and
movsl
outsl
fs
inc
sahf
cmc
add
pop
cmp
pop
push
fstps
stos
jg
dec
in
stc
fsts
or
ret
jb
aas
jne
jns
jmp
lds
rcrl
es
fisubs
aas
dec
int3
movl
cltd
lea
sub
bound
pop
sti
insl
in
cmp
scas
jo
sub
out
int
mov
xchg
ja
test
xor
std
std
pop
stc
push
jno
mov
leave
in
jnp
addr16
andl
xor
add
pop
adc
cmp
add
std
xchg
fs
insl
test
lahf
jmp
mov
int
mov
fisttps
add
test
sub
aad
gs
dec
jmp
cli
pop
push
pop
lahf
jno
inc
loope
jmp
sbb
jmp
inc
ret
push
ret
int3
mov
rol
pop
insl
sbb
mov
pop
adc
lcall
jo
push
jl
and
dec
lds
inc
jmp
dec
jg
dec
mov
pop
and
xor
stos
clc
jle
pop
jecxz
cmp
test
repnz
fadd
xor
mov
sub
nop
jmp
and
lock
daa
mov
cs
dec
inc
mov
cmp
push
icebp
jle
in
dec
fidivrs
in
fisubrl
adc
ret
lret
scas
add
aam
ror
hlt
add
cmp
mov
sub
cmp
fstp
push
pusha
and
fwait
sti
or
xor
shl
lahf
adc
mov
sbb
outsl
not
cmp
sub
dec
and
add
test
xor
test
and
jle
insl
mov
sbb
mov
andl
dec
pop
and
lret
sbbb
push
xchg
push
pop
mov
sub
dec
sub
dec
add
stc
and
stos
fsub
in
mov
jno
adc
es
loope
mov
jns
addr16
xlat
xor
fildl
inc
inc
cmpb
mov
popa
imul
inc
subb
scas
subl
pop
jle
lret
jb
sar
lret
and
repnz
mov
ret
mov
or
or
repz
gs
cs
sub
jg
lcall
test
lods
pushf
dec
adc
mov
and
sub
lods
mov
jb
sbb
sub
ja
lock
pusha
xor
in
imul
xchg
sub
test
inc
mov
add
shrb
xor
mov
and
std
int3
add
jle
and
or
cmp
sub
mov
ljmp
fsts
out
sarl
mov
push
popa
adc
insl
div
mov
call
pop
adc
test
push
iret
ss
sbb
pushf
test
push
pop
mov
sbb
xchg
xchg
adc
sub
fs
das
pop
push
cs
xchg
lcall
mov
jo
jae
inc
pop
cmp
jmp
xor
dec
out
cli
je
xchg
lods
xchg
push
add
jns
push
mov
sbb
cltd
inc
nop
jne
je
dec
jecxz
pop
sbb
or
jbe
or
lea
leave
mov
push
push
inc
mov
aas
push
scas
test
stc
roll
push
cld
push
adc
mov
pop
fmulp
ljmp
mov
add
mov
jo
or
lahf
add
mov
dec
loope
xor
stos
out
add
lahf
sub
cmpsl
push
out
leave
insb
add
and
cld
dec
sbb
outsl
rorb
ficompl
or
adc
test
or
insb
ja
dec
xchg
sbb
insl
das
mov
jle
jnp
jns
pop
fistpl
lret
sbb
and
or
loopne
int3
dec
enter
and
ljmp
sbb
sti
cmp
shlb
mov
push
ffree
sub
add
push
popf
outsb
imul
sub
inc
pop
pop
push
inc
cmpl
jbe
push
mov
adc
arpl
inc
inc
pop
and
out
iret
xchg
fcoms
pop
mov
pusha
stc
mulb
ljmp
js
add
or
and
jb
fcmovne
nop
aam
jg
fbld
sahf
mov
lock
fisubrl
fsubs
leave
imul
cli
mov
jnp
mov
scas
ljmp
mov
shr
int3
push
lcall
jns
push
cmpb
pop
rclb
xor
cmpsl
emms
nop
push
pop
outsl
mov
xchg
inc
adc
mov
loopne
inc
lds
jmp
insl
add
or
push
mov
movsb
mov
int3
mov
pushf
inc
xchg
test
pushl
inc
cmc
dec
jge
push
mov
jb
repnz
into
push
imul
nop
fstpt
test
and
je
stos
repnz
add
xchg
xor
xor
cld
popf
es
add
sbb
test
jge
js
mov
or
jns
shl
into
lea
pop
and
adc
push
inc
sti
or
test
inc
outsb
je
cmpsl
inc
cmpsb
call
mov
test
mov
fs
adc
jge
je
dec
jmp
sub
ds
idivl
jmp
jns
pop
jo
dec
cli
lods
mov
jecxz
fistpl
pop
sub
inc
fistl
es
data16
shrl
dec
xchg
leave
mov
rorl
test
fdivrl
mov
maxps
or
out
mov
sbb
or
ficoml
jno
arpl
insl
xchg
and
cmpsb
call
mov
fisttps
or
outsl
pushl
arpl
add
std
xor
dec
insl
int3
into
add
dec
pusha
jmp
pop
movsl
mov
cmp
xor
lahf
mov
mov
sub
stos
add
movl
lahf
xor
cmpsl
adc
lds
cltd
or
scas
sbb
inc
lahf
sbb
xor
sbb
or
and
mov
mov
out
xor
pop
outsb
lods
mov
inc
xchg
and
add
push
pop
mov
or
sub
xchg
lods
xchg
test
rcrb
in
jg
sahf
sub
xor
cmp
lea
or
divl
cmp
mov
pop
cwtl
mov
gs
fsub
mov
jns
bound
pop
hlt
adc
fildl
mov
sahf
mov
jnp
mov
xchg
mov
mov
push
shl
jge
test
xchg
cmp
xchg
sbb
int3
push
aas
cmp
popf
lret
dec
push
ljmp
jl
pop
cmpb
jb
dec
sub
cmpsb
sub
or
mov
pop
mov
dec
xchg
pop
ds
pushf
mov
sub
rcl
mov
xchg
adc
inc
cwtl
popf
pop
ljmp
rcrb
nop
lods
pop
sub
in
xchg
pop
jnp
jg
nop
push
sub
cs
add
jbe
fadds
cli
or
mov
outsb
cmpsb
cmp
faddl
push
cs
incb
mov
or
out
xchg
jne
mov
cld
std
int3
aad
in
aam
mov
push
subl
or
mov
push
inc
adc
cld
xchg
inc
dec
or
or
sahf
clc
cmp
data16
cmc
adc
sbb
shlb
sbb
mov
rclb
sub
mov
stos
aam
inc
pop
and
ljmp
jns
mov
and
fstpt
jns
dec
sbb
cld
ja
mov
movsb
rcrl
rcrl
jb
and
ss
adc
mov
in
push
cmp
inc
adc
or
icebp
and
xchg
sbb
pop
arpl
es
push
pushf
hlt
sub
or
daa
out
adc
mov
arpl
loope
jbe
nop
mov
fdiv
adc
push
dec
jp
repnz
push
mov
xchg
out
gs
divl
or
mov
inc
test
cmpsl
or
pop
sbb
adc
push
sbb
pop
pop
inc
pop
push
insl
in
jg
aad
pusha
lds
movsb
xor
fwait
mov
jo
call
jmp
sub
test
mov
int
orb
pop
xor
into
xchg
outsb
aad
xchg
ret
out
dec
setl
ja
push
loope
scas
sbb
mov
repnz
mov
into
icebp
addr16
xor
xor
lret
fdivs
push
pop
cld
mov
icebp
fdivr
lods
cld
cmp
cltd
loopne
andl
sbb
push
push
sbb
mov
cs
mov
fistps
iret
jl
or
dec
or
push
aam
jae
xor
jb
ja
dec
inc
lock
roll
dec
iret
sub
in
sbb
mov
jns
in
xchg
lods
nop
sbb
mov
imul
jns
call
lock
sub
inc
mov
lds
dec
movsb
mov
nop
or
mov
xchg
data16
xor
fildl
mov
inc
imul
jl
pop
dec
cmp
xor
adc
push
add
pop
cmp
mov
int3
sub
das
mov
mov
jge
lcall
add
daa
in
dec
push
mov
loope
xor
or
pop
in
push
insb
andw
adc
xor
pop
stos
push
jnp
inc
add
insb
int3
xor
push
mov
imul
inc
push
and
add
push
or
aad
sbb
dec
aas
leave
jae
and
int
shrb
pop
xchg
xchg
stc
jg
sub
xchg
ret
mov
mov
push
and
mov
xchg
andl
pop
jne
mov
mov
push
push
xchg
insl
sbb
dec
les
outsb
mov
pop
scas
mov
lods
ret
clc
mov
jg
jge
out
outsb
lret
jo
orb
int
jl
xchg
fdivs
xchg
mov
or
dec
push
lds
stos
out
push
dec
int
jg
out
or
pop
jno
addr16
push
testl
mov
jge
sbb
adc
xchg
in
adc
sti
mov
pop
clc
sub
mov
jp
std
aad
movsl
mov
push
fwait
sbb
ret
xor
test
mov
aam
les
sub
fiadds
loopne
test
in
out
mov
and
push
aas
decb
test
adc
int
stos
idivb
hlt
test
xchg
jb
add
ret
inc
dec
faddl
in
sti
push
shrb
and
and
repz
jae
xorl
test
adc
icebp
cmp
test
cld
inc
arpl
push
xor
or
repz
daa
loop
sub
dec
sahf
outsl
idivl
aad
fdiv
jne
jno
outsl
mov
cmpsb
jl
mov
rcrb
jle
pop
push
jle
push
ret
mov
xchg
cwtl
add
insb
adc
es
mov
inc
push
leave
xchg
and
xor
mov
pop
mov
imull
add
stos
scas
fistps
jae
mov
mov
clc
mov
test
cmp
mov
dec
fwait
rcrl
xchg
push
test
and
mov
xor
movsl
jecxz
clc
out
lods
dec
or
negb
fdecstp
mov
ret
out
popa
in
addr16
in
ss
lahf
arpl
lsl
lea
push
sub
sub
test
ret
cs
xor
nop
xchg
or
cmp
ss
sub
call
jo
xchg
xor
jp
mov
mov
and
scas
out
cld
or
outsl
dec
pop
cmp
test
push
jo
push
push
loopne
add
jb
popa
pop
mov
shlb
mov
out
stos
aam
adc
cs
stc
pop
inc
movsl
push
and
ljmp
xor
cmpsb
add
mov
fsubrs
pop
inc
arpl
outsl
and
les
push
push
imul
std
xchg
mov
mov
cmp
push
movsb
shr
push
das
pop
pop
clc
push
inc
imull
cmc
test
jae
imul
gs
out
xchg
loope
pop
mov
movsb
adc
jmp
xchg
insb
push
int
adc
insl
mov
xor
pusha
dec
xor
add
adc
insl
cld
mov
mov
out
roll
addr16
mov
ror
arpl
jecxz
mov
add
int3
xchg
out
cli
adc
lahf
jbe
movsb
jmp
shrl
fs
lea
jo
mov
mov
jnp
test
mov
push
mov
fwait
adc
aas
jb
stos
add
mov
inc
pushf
sub
or
jge
stc
shrl
jp
popf
add
xor
test
cmp
inc
out
mov
mov
rclb
clc
addr16
dec
repnz
imul
cmc
or
push
xchg
jg
or
adc
aad
bound
mov
mul
in
xor
aam
in
int
clc
rcl
xor
inc
add
aam
mov
fs
cld
push
mov
les
pop
sahf
cmp
icebp
xchg
les
test
stos
push
add
pop
jb
pop
mov
push
sub
sbb
mov
fstl
xchg
fs
cmp
fildll
daa
insb
out
test
jae
jbe
sbb
test
and
adc
movsb
xor
in
popf
clc
les
jecxz
add
std
aas
cs
ret
sub
into
aas
jmp
cld
and
push
aad
ret
in
inc
dec
or
pop
lods
inc
subb
cmp
fidivs
lret
mov
push
test
xchg
mov
jecxz
ja
rolb
in
stc
inc
dec
mov
cmp
adc
ror
pop
lods
mov
adc
ljmp
mov
popa
mov
xchg
in
loop
push
push
sub
ss
jae
pop
jecxz
out
in
pushf
xor
ret
test
push
cmp
jnp
jp
jmp
movsb
lods
sarl
pop
je
mov
outsb
jg
jne
insl
xor
lock
cmp
stos
mov
sarl
mov
ret
pusha
mulb
es
outsb
mov
jp
iret
mov
push
mov
and
pop
jp
mov
in
jno
imul
out
cmc
adc
jp
jne
dec
push
rorl
inc
xor
popf
mov
jnp
insb
xor
cmp
mov
dec
shll
outsl
push
adc
stos
outsb
add
sub
mul
popf
dec
mov
sahf
xchg
out
xchg
xorl
add
push
rcl
lock
js
cld
push
xor
jae
cmp
push
or
push
pop
leave
pop
xchg
testb
ret
or
insb
lahf
aam
lahf
and
sbb
fistps
out
xchg
les
popa
pop
pop
decl
jp
scas
fucomi
mov
lret
push
and
out
push
dec
enter
and
adc
loop
hlt
rcl
add
jp
test
and
dec
push
aad
sarl
pop
adc
pushf
scas
mov
jo
mov
jne
mov
dec
roll
into
add
inc
out
sbb
cmpxchg
gs
aam
ljmp
outsb
mov
dec
jbe
and
push
xchg
pop
lret
es
call
hlt
in
popl
test
mov
outsl
insl
movsl
jecxz
bound
into
push
lods
push
sbb
bound
insl
popa
sbb
or
aaa
pop
dec
mov
pop
sub
xchg
push
inc
cmp
inc
xor
repz
mov
test
cmp
dec
jb
mov
mov
mov
push
fcmovnu
data16
push
loope
and
inc
cmpsb
fmulp
and
adc
lods
scas
adc
adc
inc
in
mov
mov
push
sub
sarl
ja
mov
jo
fs
aaa
mov
movsb
loope
pushf
loopne
loope
or
pushf
leave
mov
jae
adc
jo
sub
es
addr16
stos
and
ss
jmp
cltd
fwait
cmp
inc
xor
pop
xlat
movsb
mov
out
test
adc
fisubl
xchg
or
movlps
xchg
dec
adc
xchg
es
outsl
jge
fidivrl
fsubrl
mov
add
push
testl
int
inc
cmpsb
testl
fisttpll
loop
fidivs
cld
cltd
repnz
ficompl
out
fsubrs
and
out
sub
pushf
icebp
jle
clc
fcoml
adc
insl
out
outsb
and
leave
sub
daa
xchg
push
adc
mov
sbb
aaa
nop
cltd
push
sub
lahf
xchg
les
inc
pop
xlat
and
rcrl
add
and
gs
inc
dec
arpl
divb
insl
int
push
in
xor
mov
sub
pop
fisttpl
rorl
mov
sbb
sbb
out
sbb
lds
jnp
stos
cmp
das
subb
js
sub
fdiv
fstl
inc
dec
add
imul
xchg
popf
pop
ljmp
mov
stos
loopne
cmc
adcl
cmpsb
aaa
fiaddl
outsl
mov
dec
xchg
inc
mov
dec
cmpsb
mov
scas
adc
fsubl
pop
add
add
sbb
cmp
cmc
pop
and
adc
pushf
enter
leave
icebp
movsl
add
mov
shrb
xchg
call
sbb
movsl
push
or
lods
call
fdivrl
xlat
rcrl
dec
push
inc
jae
xor
fisttps
mov
mov
pop
sarb
cmp
idivb
xor
pusha
shll
or
scas
fs
jge
cmp
jmp
pop
xlat
std
push
imul
cmp
data16
xchg
loop,pt
enter
adcl
fildll
dec
jo
add
sahf
jne
sbbb
daa
pop
pop
subb
out
jb
push
nop
or
add
adc
add
xchg
test
divb
stos
cwtl
ret
xchg
pop
and
out
stc
xor
mov
jno
jb
mov
cs
rclb
gs
lods
dec
mov
sub
maskmovq
testl
xchg
xorb
popa
push
clc
xchg
out
pushf
aas
xor
xchg
push
mov
adc
sti
shl
push
shll
daa
sub
sub
dec
lods
cmp
movsb
bnd
sahf
aad
pop
dec
xlat
cmp
gs
int
lds
push
pop
repnz
iret
cmc
sub
xchg
and
je
insb
lret
aas
sbb
ds
int
lods
imul
lods
dec
inc
jns
dec
loopne
data16
in
loopne
es
jl
pop
add
in
xlat
in
xchg
test
shll
inc
daa
in
xchg
popa
repnz
xchg
faddl
xchg
sbb
outsb
dec
cs
adc
and
add
cltd
bound
dec
leave
mov
pushf
add
mov
rol
fstl
popa
mov
idivb
movsl
pop
push
mov
jno
int3
mov
fdivrl
or
dec
int3
pop
jne
div
cmpsb
daa
mov
xchg
or
dec
inc
lea
mov
in
lock
mov
and
pop
jp
popf
jge
aaa
shlb
or
cmp
dec
and
std
loopne
outsl
or
mov
mov
mov
jns
dec
imul
mov
sub
or
and
and
cmpsl
mov
jle
push
lret
stc
movsl
push
push
enter
sub
xchg
in
stos
mov
mov
inc
xor
jae
decb
adc
andl
shl
jecxz
mov
push
aad
inc
xchg
je
mov
push
stos
test
dec
pusha
sbb
and
sbb
pop
mov
mov
popf
push
je
push
das
cmp
xchg
stc
aad
dec
adc
mov
pop
inc
adc
movsb
int
push
push
lret
xchg
push
arpl
push
cmpsb
ja
jae
mov
lods
xor
hlt
jb
lcallw
in
jle
cwtl
cmp
adc
cmp
test
push
xchg
jg
pop
pop
inc
push
scas
sbb
scas
data16
pop
sarb
and
cli
nop
push
clc
add
je
aas
lock
fisttpl
sub
xor
mov
fs
cltd
push
dec
mov
aad
cmpsl
data16
rcrl
repnz
out
push
pop
popf
test
sbb
stos
bound
inc
sbb
arpl
insb
mov
repnz
test
mov
jmp
loopne
imul
adc
xchg
lret
cltd
adc
out
push
xor
lret
aaa
mov
xchg
ret
push
jae
or
dec
cmp
sub
cmc
inc
cmp
mov
mov
mov
les
push
popf
nop
out
xchg
imul
or
fcomp
cwtl
test
jge
jae
jmp
popf
loope
ret
mov
movl
insl
mov
cmp
add
push
outsl
mov
sbb
repnz
out
cmp
popf
fwait
in
sbb
mov
or
stos
frstor
mov
or
addr16
fnstenv
xlat
sbb
clc
shlb
push
pop
scas
mov
or
fs
xchg
repnz
sub
sub
pop
mov
mov
xor
cltd
shl
fists
mov
jecxz
sbb
pop
push
push
pop
sbbb
sti
notl
xor
shr
scas
decb
cltd
sub
sbb
push
or
mov
pop
xor
jbe
or
dec
cmp
ret
or
and
leave
pop
add
or
lods
add
arpl
dec
adc
dec
fdivr
insl
iret
bound
dec
fidivrl
hlt
imul
int3
add
and
daa
addr16
mov
popf
cld
mov
cmc
push
mov
sbb
loopne
sub
inc
icebp
mov
in
aad
incl
sbb
js
or
pop
xor
mov
push
shl
inc
aam
push
insb
cwtl
or
mov
lcall
fdivrl
pop
jnp
xchg
lret
lahf
add
sbb
inc
jle
out
adc
cmp
pop
jb
iret
or
ss
scas
mov
cli
jmp
popa
pop
pop
stc
jg,pt
roll
ljmp
adc
mov
jg
add
stc
frstor
push
stc
fwait
cmpsl
outsb
mov
ljmp
mov
les
sub
and
xchg
jno
rclb
cld
dec
add
hlt
add
iret
outsb
out
and
add
mov
sub
cmpsb
sbb
xor
push
cmp
lods
mov
loopne
sbb
or
sbb
mov
int
popf
mov
inc
mov
shll
das
sub
scas
mov
in
cwtl
dec
adc
and
lea
mov
add
in
mov
jle
and
mov
and
lds
inc
sub
out
and
test
and
lahf
xor
lods
sahf
mov
js
rcrl
movhps
mov
and
fcmovbe
mov
data16
aam
mov
int3
into
jns
lret
push
adc
adc
or
xchg
or
xor
jb
cmc
jmp
jne
add
sbb
mul
dec
xchg
pop
sbb
push
daa
lds
lock
add
mov
shlb
cmp
add
mov
dec
js
adc
aaa
scas
lock
dec
xor
jg
shll
sub
pop
cmpsb
pop
div
dec
mov
push
cwtl
push
out
xchg
ret
insb
sbb
xor
xlat
cmc
or
shlb
test
dec
imul
dec
mov
add
out
ds
in
int3
ret
roll
dec
js
call
cmp
aas
jmp
sub
xorb
mov
insb
scas
xchg
add
inc
data16
cld
out
outsb
in
xchg
push
fnstsw
sbb
testl
loopne
cmp
shrl
subl
sub
and
leave
jo
sub
xchg
push
adc
jo
arpl
xchg
dec
adc
push
cli
push
test
push
mov
outsl
enter
push
ret
addr16
ret
sbb
js
leave
push
xor
xchg
mov
in
cli
jmp
mov
pop
xchg
inc
inc
mov
test
inc
test
and
adcb
pusha
in
adc
int3
mov
scas
adc
jb
repz
dec
and
fnstcw
push
cmp
fstps
mov
notb
dec
into
pop
mov
dec
mov
pop
loopne
cmpsl
repnz
out
sbb
addr16
mov
out
call
stos
dec
ficoml
cmp
xor
and
sub
pop
push
pop
out
sbb
iret
out
cs
fsubrs
fs
testl
sbb
dec
adc
push
cmp
add
aas
mov
gs
ret
or
lds
jb
adc
lock
sbbb
sub
shll
out
pop
aam
and
movsb
gs
jns
popf
sub
jmp
cltd
sub
ljmp
imul
rcl
mov
fisttps
mov
cmpsl
pop
cmp
add
and
mov
lds
push
cmpsb
iret
mov
pop
push
imul
dec
mov
mov
push
pop
push
mov
ret
iret
daa
lods
mov
subl
fsubrl
repnz
pop
repz
or
leave
mov
pand
dec
mov
loopne
mov
and
nop
cmp
fildl
or
xchg
dec
ljmp
mov
push
insb
mov
das
popf
ret
and
scas
mov
push
int3
ja
sahf
add
test
out
or
cmp
fcmovbe
xchg
push
pop
cmp
idivb
pop
test
mov
aam
mov
fisubrl
sahf
jl
jg
lock
adc
imul
int3
mov
push
inc
inc
test
pushf
xchg
hlt
push
adc
inc
insb
shrb
sbb
jp
aad
add
dec
loope
stc
mov
jge
pop
and
mov
popf
mov
call
cmp
jne
das
cmp
lahf
repz
ljmp
daa
sub
loop
fidivs
cmp
or
jmp
shl
inc
inc
sub
mov
fcom
or
ror
aad
mov
jno
add
jecxz
add
mov
mov
test
jne
inc
inc
loopne
xchg
xchg
adc
jmp
cld
or
outsl
or
pop
lret
mov
jecxz
jecxz
cld
sub
das
imul
out
daa
adc
fxch
lds
jg
outsl
cli
inc
and
and
sbb
subl
out
outsb
scas
dec
sub
insl
push
adc
test
mov
dec
sbb
repz
push
sarl
cmp
mov
aaa
out
fwait
xor
insl
sahf
jmp
mov
mov
pop
daa
hlt
add
inc
dec
cmpsl
pusha
sarl
mov
jecxz
adc
xlat
xor
sahf
mov
inc
mov
push
int
xchg
loopne
sub
sbb
fldenv
pop
push
add
xchg
push
xchg
inc
cmp
test
cmp
adc
xchg
das
jmp
outsl
lret
fwait
repnz
sahf
je
sub
dec
lret
push
ljmp
adc
sub
repz
sub
xchg
stos
iret
inc
js
lret
in
mov
sti
or
sub
push
adc
adc
sub
pop
sub
repz
mov
sub
and
xchg
int3
sarl
pop
ffree
rorb
mov
xlat
aas
fisubrs
jae
push
dec
iret
aas
int3
out
dec
or
push
mov
dec
movsb
cmp
leave
aaa
ja
xchg
popf
sbb
push
andb
and
or
xor
int
cmp
xor
inc
mov
test
in
adc
jmp
add
jg
mov
push
pop
ljmp
inc
sub
or
add
aam
and
mov
in
fidivrl
hlt
fwait
enter
pusha
xor
ljmp
pusha
lret
daa
and
popf
pop
stos
lods
negb
popa
cltd
lret
fwait
pop
adc
sahf
lods
dec
adc
insl
fildl
ja
push
cmp
sbb
mov
dec
pop
adc
fisubs
addr16
xchg
push
cmp
inc
push
pop
sub
fcoms
xlat
push
xchg
pop
cwtl
xor
cmp
sbb
add
repnz
std
jns
in
ss
mov
jae
xor
in
pop
fistl
ja
enter
cmpsl
cmpsl
add
pop
imul
jb
movsl
adc
pop
popa
inc
test
mov
xchg
mov
aam
fildll
mov
loop
je
xor
sar
mov
enter
mov
pop
push
iret
adcl
out
jmp
add
pop
lcall
sbbw
mov
pushf
mov
lret
aas
lcall
adc
repnz
sub
out
inc
mov
insb
xchg
mov
and
data16
imul
xor
push
mov
in
xchg
pop
xor
sbb
cmpsl
jp
scas
sub
icebp
push
sarl
lods
stos
std
mov
mov
mov
aas
repnz
dec
mov
push
js
pop
js
stos
pop
mov
sbbb
dec
mov
les
xchg
jne
stos
add
xor
rorl
int
mov
int
int3
out
xor
sti
mov
jo
xlat
ret
or
lock
bound
shll
cwtl
je
cmp
test
dec
mov
cmp
mov
and
gs
es
addl
adc
fcomp
xor
shrb
inc
clc
mov
inc
xchg
inc
je
fucomi
sub
pop
pop
and
jo
push
insb
out
mov
movsl
pop
int
loopne
ljmp
add
in
fdivl
mov
loop
int
mov
mov
int
push
xchg
mov
jns
xor
jb
mov
jle
sarl
mov
data16
in
test
lretw
jnp
ja
test
cwtl
xor
jecxz
cmc
pop
cmp
push
push
movsl
mov
dec
and
jp
xchg
xchg
pop
inc
ret
and
iret
mov
loope
xor
and
push
adc
imul
jno
mov
and
inc
pop
ret
fistl
jb
out
xchg
aaa
pop
shlb
out
mov
ret
dec
loope
mov
cmpsb
mov
pushw
xor
cmpsl
lea
xor
sub
test
outsb
pusha
gs
jb
push
not
mov
in
sub
test
jecxz
jno
jns
add
dec
inc
adc
leave
out
add
inc
jno
xor
into
cwtl
shl
icebp
push
mov
sbb
test
xor
shrl
inc
pop
xor
enter
xchg
or
lcall
jl,pn
xchg
std
sbb
xor
mov
sarb
mov
ds
outsl
mov
pushf
dec
mov
adc
sub
and
sti
divb
cmpsb
iret
arpl
inc
lea
cmp
ss
data16
mov
je
lea
xchg
mov
loopne
sbb
loop
clc
imul
dec
out
scas
dec
xchg
lock
or
cmp
adc
aam
push
cmc
out
mov
add
dec
popf
adc
mov
xchg
in
cmpsb
lret
and
pop
adc
add
aas
jg
fcmovnbe
fmull
sub
decl
ljmp
adc
or
xchg
movb
ljmp
jbe
dec
addb
pop
mov
xchg
out
lds
sti
or
aad
xchg
loopne
std
xchg
in
inc
dec
mov
addr16
aad
in
fmull
inc
push
lahf
cwtl
inc
sbb
inc
mov
mov
cmp
nop
je
sarb
pop
inc
push
out
in
xchg
cmp
xchg
mov
and
cld
shlb
repz
shlb
xor
push
jmp
inc
xor
shlb
fwait
adc
jae
inc
jecxz
in
mov
fnsave
ret
imul
jle
xchg
pop
repnz
test
dec
in
jecxz
dec
sbb
out
addr16
xor
sbb
test
sbb
add
jmp
adc
dec
lret
push
adc
mov
fistpl
int3
js
popf
cli
adc
iret
scas
pop
fsub
ja
int
pop
jo
hlt
add
cmpsl
frstor
xchg
arpl
push
adc
adc
dec
test
lahf
fnstsw
or
ds
cmpb
sub
test
leave
mov
xor
xchg
les
imul
lods
test
push
inc
jno
fidivrl
in
jb
dec
sub
sahf
rol
dec
fnsave
cmp
push
jne
in
ficompl
add
or
cwtl
scas
pop
mov
and
es
push
outsb
jl
sbb
mov
icebp
jno
leave
sub
dec
ret
or
pop
sbb
frstor
in
add
and
xor
fs
and
pop
cltd
and
rol
repz
cli
pop
cmp
xchg
jae
sbb
mov
scas
lret
repnz
js
inc
cli
pop
xchg
mov
sbb
lret
aad
ret
fwait
into
jno
xchg
mov
mov
or
lock
or
xor
scas
out
xor
mov
imul
pushf
inc
repnz
inc
test
jle
arpl
add
testl
xlat
movsb
stc
sbb
adc
push
lret
dec
out
cmp
rcl
sbbl
sbb
aad
sahf
jo
and
mov
pop
mov
jl
int
insl
cmp
mov
movsb
loopne
push
mov
enter
add
call
test
mov
mov
xor
xor
and
mov
mov
xorb
popa
bound
xchg
mov
mov
mov
xchg
mov
jg
aas
dec
jno
push
push
out
sbb
scas
push
cmpsl
hlt
push
jb
andb
adc
push
adc
push
or
push
dec
sub
sahf
cmp
push
xorl
pop
inc
out
adc
into
loopne
dec
inc
sti
imul
xchg
mov
dec
aaa
fwait
hlt
push
data16
mov
std
clc
and
add
movb
mov
out
mov
push
push
add
out
push
mov
xor
dec
mov
loopne
push
mov
mov
and
hlt
loope
pop
xchg
popa
and
mov
cmp
jle
mov
dec
pop
xor
fstpl
cmp
mov
jmp
xchg
outsl
adc
cmp
in
aas
xchg
imul
add
or
ljmp
sbb
xchg
cmpsl
in
and
mov
outsb
popa
cmp
jl
int
jmp
add
je
inc
and
push
loop,pt
push
rcr
repz
nop
rcll
movsl
mov
lcall
enter
andl
or
or
jle
mov
shl
mov
orl
push
or
arpl
push
outsb
into
mov
repz
pop
dec
arpl
ret
stos
inc
addb
xchg
mov
fwait
and
xchg
jmp
daa
das
push
jle
shll
xchg
lods
enter
sub
aad
ficoms
insl
and
out
mov
sub
cmc
je
adc
pop
pushf
cmp
xchg
in
xchg
add
out
jl
pop
mov
nop
insl
jnp
subb
addr16
add
pop
mov
fisubrs
enter
xchg
and
insl
push
insb
xor
inc
ljmp
jp
pop
pop
int
gs
adc
push
jb
hlt
mov
xchg
jns
and
mov
into
hlt
jl
divb
fnsave
pop
outsb
mov
arpl
jnp
enter
adc
jmp
sub
adc
cmp
int3
int3
out
ds
aaa
or
add
cmpl
cmp
mov
add
shll
inc
icebp
xor
inc
lea
aas
gs
jecxz
adc
jo
dec
jle
repnz
dec
add
mov
movsl
push
les
pop
filds
repz
cmpsb
jmp
jl
mov
out
pop
pop
mov
bound
int
dec
arpl
mov
push
insl
popf
mov
jo
movsb
or
push
lret
inc
cmpsb
cmp
fs
dec
out
mov
clc
mov
and
mov
sbb
push
add
dec
sbb
and
add
mov
xchg
pop
sub
iret
xchg
outsl
dec
cs
sub
lods
lret
push
in
fstpt
or
mov
dec
or
cmpsl
sub
sahf
xchg
stos
jp
and
mov
rorl
sub
mov
adc
bound
rcrl
xor
inc
test
mov
outsb
xchg
inc
ret
cwtl
xchg
xor
xchg
icebp
in
xor
adc
add
dec
notl
jl
scas
mov
jnp
fs
and
daa
lock
lahf
push
repnz
inc
push
xchg
in
stos
mov
in
shr
xor
and
inc
push
adc
add
loopne
stos
cmp
fs
sub
cmc
popa
aas
cmp
aad
out
xor
inc
lret
push
jno
adc
mov
pop
scas
loop
mov
movb
mov
or
ss
sub
testl
iret
pop
xchg
push
or
cmp
out
push
sub
sub
xchg
jecxz
push
ss
mov
jmp
jno
lock
leave
pop
lds
repnz
lea
movsb
cmp
mov
xchg
test
sbb
inc
stos
iret
adc
mov
into
mov
mov
mov
repz
ljmp
inc
cltd
dec
mov
cmp
push
push
push
fmull
xor
bound
push
repnz
daa
push
prefetch
sub
push
xchg
int
in
push
sub
cmp
push
pop
loop
cmc
stc
mov
lds
fsubrs
clc
jmp
xchg
mov
mov
push
push
xor
jl
stos
out
int
dec
pop
inc
jbe
imul
jmp
jecxz
sub
mov
pop
jle
cmp
jo
mov
pop
mov
pop
std
lods
push
ret
dec
aas
mov
insb
movsb
ret
insl
xor
mov
push
cmpsb
jns
test
pop
sub
cmp
ja
pop
lods
mov
lods
jae,pt
ret
scas
cmp
xchg
xor
rorl
xchg
mov
out
sbb
and
jno
mov
xor
loope
aam
inc
add
sbb
loop
pusha
xchg
imul
rclb
rcrl
sub
mov
lcall
ss
jne
cli
in
mov
inc
and
mov
dec
add
negl
std
mov
js
lahf
stos
into
enter
loope
pop
cmpsb
jnp
add
jo
or
test
ss
data16
hlt
aas
fstpl
mov
sbb
jo
sub
nop
enter
daa
out
cli
and
jp
mov
sbb
in
mov
aam
outsl
inc
pop
pop
insb
mov
fs
sbb
sbb
repnz
push
mov
sahf
sbb
pop
pusha
cli
enter
jae
and
stc
fstpl
sbb
pop
xor
lret
rcl
inc
ja
xchg
testl
pop
adc
rcl
add
mov
test
or
shrl
lahf
in
push
sar
das
or
pop
mov
adc
dec
sarb
sahf
sbb
xchg
xor
sub
mov
jo
data16
cmp
push
and
adc
inc
je
or
inc
mov
mov
fcoms
lea
ret
or
das
sub
and
arpl
sub
mov
movsb
adc
in
mov
repnz
add
jo
mov
lahf
inc
mov
outsl
cmp
aaa
ljmp
lcall
fistpll
add
pop
and
pop
push
pop
sub
insl
mov
roll
xor
addl
mov
jge
iret
mov
push
cmp
push
daa
xchg
pop
jl
pop
push
fbstp
xchg
push
or
ljmp
xchg
pop
popf
mov
mov
add
xor
mov
cs
test
or
lret
fisttpl
sti
pop
or
divl
add
cmp
jg
mov
push
pop
adc
push
push
icebp
pcmpgtw
push
pushf
cmpsb
or
xchg
insl
push
hlt
pushf
fidivl
xor
inc
adc
xchg
cli
daa
jmp
adc
push
xchg
push
mov
ret
out
in
into
out
mov
mov
mov
lods
into
push
repnz
pop
sbb
out
lahf
cltd
mov
cmp
xor
or
or
loopne
add
jns
xchg
lea
xadd
xchg
lock
cltd
jo
mov
pop
pop
lret
sub
outsl
pop
rcrb
push
or
ss
test
cmc
adc
pop
aaa
mov
pop
pop
loopne
inc
repnz
adc
fisttpll
shrl
aaa
movsl
xor
ljmp
test
loop
mov
call
mov
roll
add
and
cmc
and
inc
bound
incl
loopne
imul
fs
rcll
insl
xor
rcl
in
insl
push
pop
pop
mov
ljmp
push
je
and
sbb
icebp
lods
out
jmp
addr16
add
add
jns
xchg
dec
movzwl
add
xchg
pop
ss
inc
stos
mov
mov
in
sbb
lock
push
pushf
sub
iret
ret
pop
leave
lret
into
add
nop
push
mov
sub
sti
mov
jns
mov
pop
sbb
int3
or
mov
imul
aas
or
ret
in
cwtl
mov
jp
push
sbb
movsb
adc
fldt
push
outsb
or
xchg
xor
inc
in
dec
mov
mov
imul
mov
into
lods
inc
lret
adc
jns
lods
aad
divl
lahf
les
lcall
outsl
cltd
lods
ss
sbb
out
and
sub
and
cmpsl
xorl
mov
adc
and
adc
xchg
lahf
dec
shlb
and
push
imul
test
outsb
cmpsb
mov
aaa
mov
xchg
mov
mov
popf
into
mov
daa
inc
mov
sbb
xor
in
mov
iret
jl
shl
scas
xchg
in
cltd
adc
cmp
cmp
out
lods
sbb
cltd
push
cmp
lds
xchg
sti
xchg
adc
jae
ss
scas
test
aad
insb
mov
sti
mov
sbb
incl
in
mov
push
shll
inc
cmp
in
out
pop
aas
out
imul
push
sub
repnz
dec
pop
or
imul
sub
xor
adc
scas
es
and
mov
mov
or
dec
sbb
pop
inc
int3
add
mov
insl
jmp
pop
xchg
imul
ret
cwtl
mov
cmpsl
mov
mov
mov
and
das
popf
nop
pusha
shrl
jo
into
movsb
sub
sarl
lahf
inc
dec
mov
and
imulb
push
push
cmp
out
add
add
mov
js
inc
inc
je
sbb
dec
jo
or
push
adc
jl
adc
lea
rolb
inc
stos
lahf
aaa
dec
jecxz
icebp
shll
push
mov
andb
or
adc
pusha
int3
inc
cmc
sub
mov
int
adc
mov
aas
loop
xor
ret
scas
pop
icebp
xor
cmp
iret
push
mov
xchg
movsl
push
iret
jp
cmp
mov
incb
push
dec
xchg
push
pop
xor
roll
dec
ret
cmp
sbb
sub
iret
stos
mov
shlb
into
or
rcrl
imul
ret
sub
popf
adc
mov
cs
add
lds
int
cmp
daa
test
sub
pop
or
clc
xchg
arpl
sub
data16
or
push
loop
imul
pop
jo,pt
flds
sub
xorb
add
pop
push
bswap
mov
out
idivl
movsl
inc
aaa
outsl
mov
adc
xchg
test
shl
inc
dec
imul
insb
fcoms
jne
in
jecxz
jle
test
mov
fs
push
out
nop
jecxz
or
jne
mov
sbb
std
xlat
fisttps
aas
outsl
orl
sbb
adc
lea
popa
dec
clc
sbb
lods
push
fistps
cmp
xchg
adc
mov
icebp
icebp
mov
jge
xchg
push
in
add
cmp
shll
and
and
ffreep
cmpsl
cmp
sahf
addl
add
mov
rclb
inc
mov
push
inc
int3
mov
addr16
mov
rorb
cmp
imul
add
jae
aam
decb
mov
jns
sbb
ftst
add
and
add
add
das
icebp
roll
push
cmp
das
aaa
xchg
fwait
stos
orl
je
inc
andl
test
icebp
cmp
jecxz
sbb
test
and
lods
push
out
sti
dec
fists
sbb
jnp
fidivs
popf
dec
repnz
cwtl
adc
cmp
mov
andl
xchg
ja
add
cmp
inc
jbe
cmc
sti
cli
idivl
mov
int
jns
jbe
std
lcall
fidivl
xchg
pushl
adc
jg
mov
pushf
add
adc
xchg
out
mov
push
mov
insl
sbb
movsb
sbb
mov
xchg
dec
cmp
jbe,pn
cmp
cltd
test
pop
fstpt
xchg
ds
lods
mov
cs
popf
add
mov
adc
and
dec
sbb
scas
inc
xchg
ljmp
mov
push
scas
jecxz
sub
push
iret
add
jmp
mov
out
ja
cmp
cmpsl
gs
pop
pop
aad
or
popf
jp
in
jl
pop
ret
scas
xor
nop
push
mov
xor
and
xor
call
out
xchg
add
sbb
cwtl
pop
cmc
push
sub
dec
sub
pop
mov
jge
dec
in
je
movsb
sbb
pushf
add
sti
mov
sbb
cmc
xlat
frstor
gs
scas
pop
scas
and
icebp
cld
pop
cmp
das
xor
in
ljmp
inc
pop
sub
xor
call
mov
mov
jbe
andb
xor
idivl
push
movsl
arpl
xorl
push
pop
xor
cltd
imul
add
out
and
pop
pop
jge
cwtl
push
imul
popa
ss
xchg
je
fstpl
popf
out
psllw
xor
out
or
fs
jae
inc
or
repnz
je
xchg
or
mov
dec
cwtl
jecxz
add
hlt
xor
or
ret
xchg
imul
into
ret
cltd
cltd
push
jecxz
rcl
inc
jo
int
sbb
mov
ljmp
inc
ja
fisubs
cs
push
cmp
orl
push
jmp
neg
mov
sbb
push
lock
pop
pop
cmp
push
inc
sub
jae
outsb
adcb
jge
ja
adc
cltd
inc
jp
pop
je
adc
out
xchg
dec
leave
xchg
and
cmc
lock
push
data16
stos
inc
jns
push
into
mov
sbb
xchg
mov
loope
es
add
rcr
xor
cmp
jae
dec
adc
clc
jmp
xor
fs
mov
dec
dec
add
insl
adc
sub
and
lret
add
sbb
rep
lahf
xlat
jl
loope
adc
push
data16
jl
lock
incb
aam
fnsave
sub
jmp
fwait
orl
xor
xor
les
jae
scas
add
jmp
test
jecxz
jns
sub
lret
adc
adc
movsl
or
mov
xchg
mov
xchg
fisttps
or
cmp
bound
lock
sub
and
pusha
arpl
test
imul
push
popa
and
pop
mov
stos
aaa
sahf
dec
daa
xor
ret
insb
pop
fdivl
xor
fildll
addr16
dec
push
lret
inc
mov
pop
imul
out
jno
stc
push
cmpsl
cltd
cmpsb
xchg
mov
lcall
xchg
out
in
xchg
mov
sbb
push
mov
mov
or
xchg
imul
clc
cld
adc
dec
xchg
leave
mov
lret
test
sti
sti
aam
aad
lea
or
push
xor
in
or
cli
push
ficoms
inc
cwtl
xor
mov
mov
cmpsl
fistpll
xor
pop
xor
or
and
ror
jle
xchg
mov
aaa
cmc
scas
icebp
pop
mov
jns
clc
lcall
push
out
jmp
jle
sti
sarl
cmp
pop
stos
lds
inc
fstl
pop
data16
pop
test
in
inc
aad
jmp
jl
mov
mov
lods
std
mov
mov
sbb
mov
adc
lds
sbb
orl
pop
mov
mov
jno
cs
lea
ds
pop
mov
pop
add
xor
clc
loop
xchg
cli
or
repz
pop
aad
ss
pusha
mov
nop
scas
daa
call
std
roll
repnz
xor
aaa
sti
push
popf
imull
sub
out
or
arpl
test
test
out
jl
ficoml
pcmpeqb
inc
push
push
push
adc
push
jae
test
pop
scas
stos
sbb
push
push
jecxz
jae
sub
lods
ds
adc
cmp
idiv
cwtl
xchg
mov
lcall
fisubs
inc
call
stc
test
xchg
and
pop
icebp
mov
cmp
sub
cld
sub
mov
sub
sub
xchg
fildl
dec
test
jno
sub
insl
adc
pop
aam
xor
pushf
mov
xor
mov
mov
loope
rcr
fiaddl
aad
shl
stc
inc
cmp
iret
filds
pushf
pop
add
outsl
jae
mov
xorb
inc
jmp
divps
ss
fsubrp
out
mov
scas
sub
loopne
lcall
adc
in
out
movsl
cmp
mov
cmp
ret
cmp
movsb
lods
pop
xorl
xor
lcall
adc
arpl
xchg
push
jbe
shll
rorb
add
das
jge
mov
aam
leave
testl
aam
cmc
cmc
xchg
aad
push
sarl
jae
adc
lods
xchg
out
cli
out
cli
push
fdiv
mov
xchg
jle
test
ficompl
int3
and
ja
push
std
sbb
xor
mov
inc
add
sbb
pop
and
and
pop
fs
sub
scas
jnp
inc
sbb
or
and
add
xor
adc
mov
push
jne
repz
or
push
jge
lds
fstpl
imul
jns
cmp
xchg
xchg
mov
xchg
mov
add
cmp
enter
inc
sti
rcrb
jmp
mov
dec
addr16
pusha
int
cmpsb
xor
std
ds
cmp
inc
cmpsb
cmp
inc
rorl
xchg
in
pop
imul
xchg
hlt
jmp
sbb
sbb
mov
cmpsl
xor
xchg
pop
sarl
pop
adc
cwtl
push
fdivrl
repnz
cmp
ret
inc
sub
xchg
cmp
icebp
cmp
push
inc
push
outsb
jecxz
dec
out
add
mov
fisubl
out
rorb
cmp
addl
js
loop
addb
push
into
cmp
dec
das
adc
pop
jo
push
int3
fdivr
bound
lret
pop
inc
inc
fmull
adc
jecxz
out
lahf
stc
bound
cld
mov
movsb
lds
cmpb
scas
mov
push
mov
std
scas
push
jecxz
fdivrs
mov
inc
imul
scas
adc
movsl
pop
aad
jp
fistpll
push
mov
xor
aam
loop
loopne
mov
cwtl
addr16
insl
fdivrl
insb
sub
xchg
stos
fcomps
out
push
fwait
xchg
pop
ror
es
xor
enter
sbb
add
addr16
sub
add
mov
mov
daa
push
inc
mov
ret
scas
push
jnp
mov
fs
dec
push
arpl
mov
adc
cmpsb
scas
adc
stos
and
mov
jb
arpl
cwtl
cld
int
inc
mov
add
test
pop
pop
cli
inc
outsl
repz
pop
ret
movsl
cld
mov
adc
xchg
test
mov
push
sub
push
ret
xchg
or
iret
inc
lds
dec
and
dec
lock
or
adc
out
das
gs
xor
lods
lret
pop
xor
into
ljmp
ret
pop
popf
loopne
movsl
and
xchg
and
adc
cmpl
rorb
aas
add
out
iret
xlat
xor
xlat
dec
or
xor
bound
mov
mov
bound
imul
or
fnsave
dec
ljmp
cmc
lds
in
cmpsb
arpl
jo
sbb
in
jnp
movl
movsl
push
int3
jae
mov
popa
std
aam
scas
sbb
xchg
fcoms
mov
xor
loop
xchg
add
mov
aas
adc
seta
mov
cmp
cs
in
mov
fsubr
mov
mov
stos
mov
pop
adc
andl
add
das
adc
sbbb
cld
xor
xchg
inc
aad
dec
in
cmpsb
ret
add
cmp
test
ljmp
je
mov
bound
jns
rcrb
dec
in
enter
insl
in
icebp
test
outsl
mov
roll
rcll
rorl
ja
add
js
xorl
jmp
push
and
xchg
push
fnsave
fcomps
es
sbb
jmp
sbb
test
movsl
stos
data16
or
adc
xor
cmp
fnstsw
iret
call
popa
adc
imul
xor
add
decb
inc
xchg
add
into
push
les
lahf
pusha
hlt
bound
leave
out
mov
cmp
mov
dec
fsts
inc
repnz
dec
add
lods
xchg
daa
mov
jge
lods
stos
test
push
je
leave
cmpsb
ficoml
and
push
sub
rcrb
sbb
test
mov
push
lcall
inc
popf
imul
or
cmp
pop
add
push
data16
roll
push
dec
push
std
div
push
xchg
mov
lcall
push
decb
pop
push
mov
push
dec
cli
xor
mov
mov
and
xor
sub
cmp
ss
jecxz
sub
and
cltd
jl
cmp
xor
outsb
testl
hlt
dec
add
insb
pop
jb
or
dec
icebp
ds
xor
std
lods
into
dec
add
fists
ss
cmp
pop
pop
iret
sbb
pushf
fs
mov
test
mov
sbb
add
mov
out
cld
hlt
xchg
inc
test
das
loop
aas
fs
pop
sbb
cmpsl
xlat
mov
enter
fidivrl
push
sub
adcb
push
sub
imul
mov
lods
out
inc
and
dec
push
aam
cwtl
xor
ret
or
push
lds
nop
cmp
mov
or
cmp
mov
imul
mov
jl
addr16
fistps
adc
in
hlt
xor
pop
pop
add
cmp
movsb
cmpl
pop
rcrb
xchg
inc
test
sub
aas
ja
dec
inc
dec
push
fdivl
out
sub
pop
pop
lret
into
cli
cltd
test
fwait
pusha
inc
sarl
dec
lret
clc
inc
lds
dec
push
popa
xchg
xchg
movsl
xor
pop
pusha
pop
fstl
xchg
nop
sub
and
jne
pop
mov
call
mov
scas
sbb
xchg
loop
aam
in
jge
jno
and
jge
mov
and
inc
sbb
xchg
nop
pop
fnstenv
arpl
ljmp
pop
mov
scas
add
cmpsl
pop
out
push
sbb
lods
mov
sub
xchg
shlb
shll
xchg
xchg
mov
ficoml
and
pop
fsts
push
push
push
push
out
xchg
inc
test
out
cmpl
cmp
ret
dec
jl
sub
std
lcall
add
fildl
jae
jp
ljmp
and
movsb
pop
pop
mov
xor
jl
outsl
popf
in
push
cmc
icebp
xchg
mov
mov
das
std
out
ret
and
adcb
sti
scas
aad
std
rcrb
popa
in
loope
in
mov
inc
fstpt
addr16
insl
lahf
popl
cwtl
fimuls
dec
loope
push
jb
stos
bndldx
push
sarl
xor
add
xor
dec
lea
xchg
inc
pop
pop
jno
pusha
out
mov
lret
shl
imul
add
pop
sub
cwtl
pop
lock
mov
outsl
xchg
mov
sbb
jae
jmp
test
movsb
shrb
or
xor
cmp
and
ds
daa
and
push
lret
cld
cmp
insb
and
in
sbb
or
dec
aas
stc
dec
sub
outsl
test
sub
xor
push
sub
int3
xor
adc
cmpl
jecxz
je
std
imul
out
stos
or
mov
bound
js
jp
sub
jne
das
bound
popa
mov
cld
addr16
jne
mov
sahf
adc
pusha
cmp
shrb
and
sub
push
xor
inc
and
stc
filds
addr16
aad
or
in
jae
mov
outsl
cmp
dec
loopne
shrl
mov
loop
movsb
int3
movsl
sub
cmpsl
xchg
fstps
cmp
movsb
add
icebp
inc
mov
out
test
int
fcomp
arpl
idivl
notl
or
push
ficoml
jnp
aad
mov
fwait
rolb
cmp
std
sub
xchg
xchg
sbb
movsl
test
aas
xor
mov
es
mov
inc
filds
xor
mov
aad
enter
fisubl
push
data16
loope
xor
mov
pop
cmpsb
pop
jp
mov
loopne
or
movsl
dec
jle
mov
xor
sub
hlt
decb
dec
addb
push
push
repz
adc
stos
stc
jno
js
int3
mov
and
fwait
add
adc
push
mov
ret
testl
pop
or
pop
call
push
cmpsl
mov
dec
dec
sbb
mov
fcoml
das
mov
or
dec
inc
push
test
or
adc
jb
mov
push
daa
imul
cld
sub
movsb
mov
scas
dec
sarl
repnz
mov
pushf
pop
sub
fistl
fisubrl
testb
addr16
mov
and
cltd
lret
loope
loope
dec
xchg
and
subb
jno
mov
outsb
ljmp
stc
jnp
fwait
xor
xchg
scas
inc
jb
sbb
jns
in
iret
jge
loope
in
scas
xor
mov
fs
dec
rolb
outsl
jl
or
sahf
xlat
mov
cmp
int
popa
dec
add
loopne
test
xor
mov
into
loop
xor
in
inc
enter
daa
sub
lahf
jae
cmpsl
imul
push
fsub
into
sbb
push
ljmp
imull
cmc
fwait
sahf
xchg
mov
out
in
sbb
lods
sub
mov
sbb
dec
fldcw
loopne
xchg
jne
imul
or
das
lcall
in
mov
repnz
inc
jne
loop
push
jp
mov
in
rorb
cmp
push
nop
aaa
sar
ss
jb
jne
jne
je
xor
inc
scas
lcall
in
mov
xchg
push
rclb
pop
mov
in
addr16
lods
fxtract
jae
test
cld
adc
lret
enter
jmp
mov
mov
inc
sbb
jne
push
inc
inc
out
pop
cmpsb
enter
repz
push
addl
xor
jns
xchg
fcmovbe
daa
jge
in
mov
cmp
sbb
dec
cmp
mov
mov
dec
data16
lods
or
fdivr
dec
mov
sbb
cmp
jnp
cmp
mov
repz
adc
cli
mov
outsb
repz
jne
sub
stos
mov
stos
xchg
inc
icebp
sub
dec
fldt
or
push
cwtl
mov
adc
and
data16
inc
popf
arpl
daa
sti
inc
dec
stos
sahf
dec
jp
popa
inc
leave
and
xor
adc
jno
pop
mov
sti
and
cmpsb
fbstp
shrl
sbb
pop
push
xor
xchg
xor
mov
ss
aam
sub
inc
outsb
ds
mov
or
xchg
ss
xchg
sub
ss
cwtl
das
lods
push
clc
ja
xlat
lahf
std
fidivrl
movsl
cmpsb
inc
push
add
lret
out
xchg
cmpsb
enter
out
xchg
or
jl
dec
mov
outsb
adc
push
push
inc
and
xchg
imul
mov
push
mov
adc
sbb
divl
or
inc
scas
lods
mov
push
mov
adc
jmp
lcall
sub
mov
or
or
cmp
lock
xor
or
add
in
xor
popa
pop
ret
pushf
nop
loopne
pushf
sub
cmp
fcmove
aas
outsb
xchg
xor
push
inc
cmp
fdivrs
xor
pop
out
mov
dec
sub
push
pop
mov
in
scas
pop
xor
dec
fdivrl
lret
aad
mov
outsl
push
cwtl
cmp
jo
lods
jo
cs
add
push
lock
cmpsb
test
mov
inc
cmp
repz
inc
xor
nop
lret
or
mov
push
pop
mov
jg
insb
popf
xchg
xor
push
ja
fidivl
cmpsb
sub
sub
mov
es
mov
push
jg
push
mov
push
cmp
addr16
pop
setns
sar
mull
sbb
mov
mov
add
jns
adc
data16
cmp
jo
fucomip
sbb
out
and
je
mov
xchg
out
xorb
xor
shrl
adc
out
mov
daa
mov
xchg
and
add
xlat
fstpl
into
lea
or
pop
repnz
mov
outsl
andl
push
or
or
inc
ret
mov
mov
dec
mov
add
int3
aad
inc
cltd
jno
cmp
stos
sub
fcoml
enter
cmp
rcll
xchg
addr16
push
jo
mull
pop
jecxz
dec
dec
mov
push
out
dec
push
cmpl
push
pop
into
inc
mov
mov
clc
loopne
arpl
adc
jl
sahf
mov
daa
mov
pop
and
push
repz
cmp
stc
mov
sbb
jb
cli
adc
jg
cld
sahf
into
push
out
insl
cmpsb
pop
pop
dec
dec
fcoml
pushf
sahf
sbbb
cmc
nop
insb
sbb
mov
andl
ret
arpl
jnp
or
inc
es
cli
sarb
stc
lods
repnz
or
aam
shl
and
mov
das
adc
aas
les
xchg
sar
adc
add
push
jnp
daa
loop
dec
jle
sbb
fsts
fbld
pop
scas
pop
cmpsl
je
ror
mov
pushf
lods
push
jb
xchg
jp
insl
lods
js
pop
mov
pusha
ret
cli
pusha
mov
pop
call
xor
or
sub
and
cmp
pop
jmp
cli
push
scas
mov
xor
push
loopne
ret
lods
std
push
adc
add
cmp
aam
clc
xorps
xor
sbbl
sub
in
xchg
dec
fcmovnb
hlt
jne
adc
pop
outsb
mov
imul
xor
icebp
fnstcw
sbb
test
mov
xor
pop
sahf
sbb
out
mov
xor
push
jecxz
lods
clc
pushf
cli
stos
psrld
sbbl
inc
pop
cmp
push
mov
sbb
dec
sbb
push
mov
pop
inc
pop
jb
dec
loopne
cmpsl
pushf
cmpsl
inc
add
fimull
xchg
in
stos
jne
xchg
mov
push
insb
stc
add
cs
rol
je
and
jecxz
movsb
add
fnstenv
jecxz
mov
adc
cld
icebp
pop
pop
insb
hlt
daa
pop
in
push
dec
inc
rorl
insl
je
sub
movsl
rorb
iret
out
push
mov
xor
aad
sbb
sbb
movsl
adc
push
jb
test
in
adc
punpckhwd
test
xor
xchg
xlat
push
cmp
clc
push
ret
mov
xor
inc
pop
test
jne
push
ret
pop
and
imulb
adc
out
dec
loopne
bnd
fcoms
arpl
popa
sbb
aam
repz
cltd
xor
push
stc
mov
dec
aam
adc
mov
stos
mov
lret
add
mov
stos
mov
xchg
test
push
sub
jmp
mov
add
sub
arpl
dec
pop
scas
sub
dec
mov
rclb
mov
and
xchg
sbb
push
aam
lret
hlt
pop
add
outsb
out
cmp
xchg
push
xor
mov
test
push
push
pop
rcrb
out
xchg
mov
dec
jp
les
sub
xor
and
into
dec
cmp
lods
scas
adc
pop
cmp
aas
fwait
push
int3
icebp
jnp
shlb
jle
enter
imul
pop
fisubl
loope
jmp
xchg
xchg
shll
filds
das
dec
popf
jb
xor
aad
test
mov
stc
nop
mov
push
icebp
jmp
mov
sbb
fsubs
movsl
inc
dec
push
jb
outsl
in
adc
pop
inc
or
lods
lods
fldcw
mov
enter
int
scas
icebp
bound
inc
pop
inc
js
test
icebp
mov
cmp
add
mov
addr16
enter
cmpsb
scas
mov
sbb
popf
out
cmc
pop
insb
cmpsb
add
adc
hlt
arpl
push
std
ret
jecxz
mov
xor
push
mov
mov
mov
clc
adc
insl
sti
mov
in
pop
adc
loop
mov
sbb
scas
dec
fsubrp
mov
lretw
jle
add
push
in
sbb
cmp
push
cmp
das
outsl
fcompl
outsb
sbb
imul
test
bound
xchg
stos
nop
xlat
cmpl
clc
insb
dec
sti
out
gs
jge
js
lods
mov
inc
enter
nopl
les
inc
dec
cmp
shrl
pop
sbb
subb
sub
or
push
mov
mov
xchg
sbb
into
popa
movsb
mov
das
mov
jp
cmp
les
inc
sub
mov
imul
fidivrl
pop
add
scas
cmp
cli
jnp
xchg
jae
and
xlat
call
push
jle
xchg
out
jnp
mov
test
adc
inc
push
int
ja
popf
xor
pop
mov
mov
add
add
outsb
stos
aas
xor
mov
xchg
jle
adc
ds
mov
cmp
ljmp
mov
popa
xor
fsub
into
mov
movaps
stc
push
sub
jmp
and
push
mov
repnz
xor
or
mov
repnz
fsts
dec
js
jne
lods
xchg
mov
sub
fwait
unpcklps
mov
mov
std
pop
rcl
xchg
dec
sarb
dec
xchg
and
inc
xchg
mov
xchg
mov
or
jp
mov
pop
push
lods
out
cld
jno
xor
aaa
out
mov
xchg
mov
xchg
pop
setg
shl
imul
jmp
orl
imul
mov
loop
push
and
jecxz
pusha
mov
xchg
mov
into
jmp
jmp
dec
nop
sbb
xchg
into
es
xor
lret
or
jl
or
lret
jp
cmpsl
push
inc
jnp
xchg
jl
or
mov
ficomps
jne
jae
mov
mov
ret
icebp
addr16
stos
jmp
inc
lret
shl
lea
dec
or
daa
push
fdivrl
inc
loope
mov
jp
fs
ret
mov
jp
jp
adc
push
mov
mov
ret
push
iret
mov
pop
mov
daa
jno
push
fsubr
out
push
or
lahf
test
pop
jb
inc
inc
or
stos
mov
jbe
mov
jge
mov
dec
and
jnp
aaa
enter
push
sub
mov
lea
mov
lods
repnz
xor
sub
mov
mov
stos
cmpsb
mov
and
insl
dec
arpl
xor
mov
mov
dec
mov
push
test
daa
cltd
inc
in
sti
pop
inc
mov
in
jno
out
int
sbb
push
sbb
mov
fidivl
es
js
jmp
sub
cmp
pop
mov
sahf
cmpsl
push
dec
fdivs
jge
mov
mov
notl
pop
pop
xchg
push
xchg
pop
dec
xor
dec
mov
pop
and
push
lcall
int
arpl
add
adc
mov
mov
pop
inc
test
jge
inc
jp
or
sub
es
insl
imul
inc
jmp
scas
loope
lret
out
dec
adc
push
xchg
cld
jne
fwait
add
ljmp
fisubrs
mov
fwait
aam
xchg
in
inc
shlb
test
call
xchg
es
in
lahf
fistl
add
ja
mov
in
inc
jge
push
data16
dec
sbb
ret
mov
adc
dec
pop
les
fadd
pop
add
bound
dec
adc
mul
nop
xchg
in
cmp
xor
clc
fldenv
fdivrs
jle
lcall
lcall
mov
push
popf
mov
or
in
add
fadds
push
subb
call
popa
jl
mov
xor
popa
call
aad
push
push
les
mov
rcrb
pop
adc
imull
xchg
cmp
mov
mov
push
pop
add
and
into
ficompl
lcall
pop
mov
jno
adc
mov
into
jne
clc
fnstenv
jecxz
jg
add
dec
cs
insb
jp
fstl
fmul
jl
xchg
dec
fidivl
xor
push
stos
ret
or
mov
jmp
fs
icebp
mov
add
loopne
cld
fimuls
inc
imulb
sbb
scas
xchg
inc
dec
cltd
das
enter
pusha
lods
int3
add
mov
jb
fdivrs
fstpt
stos
add
add
inc
or
mov
push
xchg
cmpsl
fst
lock
cmp
pushf
nop
lret
mov
imul
dec
sbb
aaa
cmpsl
sbb
add
fxch
dec
cmp
adc
inc
pop
mulps
jbe
fisubrl
cltd
jne
outsb
pop
leave
imul
pop
inc
std
or
cmpsb
add
out
loop
sarl
popf
push
divb
mov
out
push
ret
push
fwait
rcll
cmc
inc
sub
shrb
and
sbb
test
push
fwait
inc
push
fdivrl
lahf
jne
ret
sub
popa
add
push
into
push
imul
inc
xor
xor
pop
test
adc
aaa
movsl
pusha
mov
shrl
gs
and
inc
cmpsb
cwtl
lods
xor
ret
fbstp
sub
popa
movsl
and
push
xchg
lahf
je
test
pop
mov
clc
addr16
cmp
or
sub
stos
jmp
mov
xchg
xor
jg
divl
sub
mov
pusha
shrb
test
cwtl
mov
sub
fmuls
outsb
dec
call
outsl
gs
lods
pushf
pop
cltd
push
mov
xchg
mov
mov
mov
fs
cmc
lods
add
dec
sahf
pushf
cmpsl
lock
push
test
mov
cmc
ret
cld
int
mov
flds
sub
mov
jl
jns
stos
cs
dec
sbb
adc
jg
pop
dec
imul
dec
sub
inc
mov
cmp
lret
mov
sub
adc
push
mov
rorb
js
adc
out
pop
pop
and
lcall
xchg
cmp
and
adc
cmp
adc
add
mov
sarl
mov
jns
inc
mov
mov
jmp
jl
cmc
mov
and
mov
jbe
or
push
fcomps
add
dec
test
divb
dec
fldt
stc
dec
pop
xchg
inc
cmp
in
pop
mov
cmpsl
pop
add
pop
jbe
lds
subl
mov
movsb
push
push
std
and
mov
xor
and
divb
mov
jne
jno
and
jmp
xor
cld
lods
or
test
mov
add
lahf
out
fcomps
mov
dec
lea
xor
arpl
or
adc
data16
clc
insl
jno
outsl
lahf
ljmp
pop
dec
shr
jno
pop
pushl
aas
lds
mov
popf
dec
jle
push
addr16
dec
push
mov
mov
sub
pushf
cmc
lcall
clc
dec
pusha
and
js
sub
dec
push
mov
mov
and
fndisi(8087
insb
pop
mov
lea
test
inc
cld
pop
mov
jo
cmc
xorb
jl
loopne
movsl
dec
mov
add
xor
lahf
pop
js
mov
mov
in
popa
imul
fwait
jl
cmpsl
fldenv
mov
jno
xchg
aas
jo
orl
and
cmp
add
nop
fs
in
out
call
idivb
jg
lds
push
jmp
xchg
pop
and
les
jo
movsb
cmc
icebp
addb
xor
aaa
push
icebp
or
xchg
push
ds
aad
mov
test
add
leave
mov
ret
or
mov
inc
pop
sbb
pop
arpl
jns
outsb
hlt
dec
adc
jb
test
sbb
dec
stc
xchg
fdivrs
ret
es
xchg
test
dec
jns
gs
in
out
mov
loop
iret
cwtl
xchg
pop
loopne
xor
aaa
adc
jbe
and
jae
scas
xlat
lret
cwtl
imul
repz
mov
aam
les
cltd
xchg
aam
sbb
mov
push
and
rcll
fsubs
outsb
adc
outsb
in
xor
test
ret
or
imul
fucom
mov
sub
xchg
out
mov
fcmove
movups
gs
lea
cmp
pop
scas
xor
push
test
aam
push
pop
inc
push
add
dec
mov
xor
sub
jnp
dec
mov
das
imul
scas
leave
jns
sub
popa
int3
xor
test
xorb
sub
aaa
inc
add
ja
scas
mov
xchg
loopne
ffreep
lock
repnz
dec
js
push
xchg
and
sbb
and
nop
mov
jl
sbb
out
lock
xor
rcrb
push
add
jge
pop
push
inc
add
push
lock
cli
xchg
dec
sub
sbb
fincstp
stc
in
clc
loope
cmp
negb
xor
add
popf
push
and
and
xchg
push
push
arpl
adc
xchg
out
cmp
adc
loope
and
sub
scas
xchg
pop
dec
hlt
jns
xor
pop
cmpsl
pushf
jo
sbb
sti
adc
adc
icebp
mov
cmpl
test
mov
dec
cwtl
shlb
adc
ds
xchg
cwtl
push
data16
xchg
sbb
adc
fsubrl
mov
dec
int3
cmp
xchg
mov
je
stos
push
test
mov
pop
xor
cli
push
icebp
fdiv
rcl
or
arpl
push
scas
or
adc
xor
popa
popf
loop
shl
inc
fisttps
jbe
pop
cmp
add
je
test
aad
out
aad
rorl
cmc
neg
dec
incb
jb
scas
sub
xchg
xchg
xchg
mov
aaa
xchg
or
push
mov
inc
jmp
scas
mov
sbb
in
sbb
ds
test
sbb
stos
mov
adc
mov
stc
lret
xchg
sbb
cli
mov
pop
icebp
loopne
jmp
inc
arpl
out
loope
fldl
cwtl
test
movsb
cmp
sub
out
cltd
xor
pop
js
aad
lea
add
push
push
pop
sbb
std
ret
xor
in
ds
add
mov
cmp
dec
jne
adc
dec
mov
sbbl
mov
inc
or
push
loopne
dec
addr16
mov
out
or
and
hlt
repz
mov
add
pop
mov
and
add
mov
cmp
xlat
sar
xchg
out
xchg
inc
aam
sti
add
sbb
call
pop
mov
in
fldt
sbb
push
lea
inc
insb
call
mov
push
mov
pop
nop
cmpsb
push
add
dec
test
iret
sar
pop
lods
out
dec
sti
jecxz
addr16
or
jp
mov
into
loope
and
movsl
mov
mov
dec
or
in
or
mov
xchg
inc
adc
hlt
and
imul
in
int
cmp
and
pushf
mov
jg
cmp
in
push
inc
mov
xor
mov
sbb
cmp
push
outsb
xchg
aaa
lcall
scas
adc
dec
lcall
bnd
popf
and
xlat
call
adc
inc
inc
mov
lock
imul
clc
loopne
add
jo
rep
xchg
xchg
cs
sub
jle
ja
fistl
lea
ja
jmp
clc
roll
inc
mov
add
sub
lods
push
sbb
sti
xchg
cmc
fisttpl
aaa
pop
mov
mov
sub
in
mov
test
xor
popf
pop
mov
cmp
mov
sbb
movl
pop
push
inc
fcomi
add
mulb
ljmp
cmp
jmp
cmp
cmp
aad
test
xchg
sbb
scas
or
repnz
jg
pop
imul
sub
arpl
dec
jnp
add
lcall
adc
pusha
clc
mov
subb
mov
push
lock
cwtl
test
xchg
testl
xchg
fiaddl
inc
divl
jmp
insb
aaa
pusha
ds
and
fsubr
rcrl
lods
in
mov
icebp
in
pop
mov
shr
lods
mov
test
cld
jge
sbb
mov
stc
jmp
hlt
sbbl
stos
push
jmp
xchg
cmc
xchg
gs
imull
gs
cmpsl
sbb
pop
outsl
add
fstpt
stos
cpuid
mov
lock
xchg
mov
add
sahf
or
dec
arpl
cmp
into
xchg
pop
clc
xchg
jno
jo
testb
cs
test
stos
pusha
sahf
mov
data16
jbe
push
je
les
sbb
bound
xlat
push
mov
das
cmc
fiaddl
cmpsb
test
andl
js
lcall
push
cmp
leave
ja
or
mov
lock
push
sub
cli
sub
out
xchg
jle
pop
mov
std
testb
test
mov
fmul
mov
in
xor
out
addb
mov
add
or
xchg
insb
and
insb
or
mov
xchg
xorl
xchg
fimuls
adc
repnz
sbb
rorl
mov
pop
fs
mov
es
xchg
inc
fcoml
mov
mov
pop
or
mov
leave
aas
roll
jbe
subl
lods
cmpsl
nop
test
gs
rclb
aaa
add
adc
ret
add
pushl
and
jle
fs
adc
std
flds
popa
jg
mov
inc
inc
mov
addr16
repz
pushf
push
pusha
xlat
push
ja
inc
mov
nop
pop
aam
push
adc
test
pop
out
and
iret
inc
mov
clc
mov
cmc
jmp
mov
xchg
xor
or
sub
mov
and
pop
pop
cld
sub
dec
pop
add
jnp
ret
push
aam
fdivs
mov
sub
mov
xor
adc
ds
and
inc
xor
mov
push
ja
int3
and
mov
lods
lods
lods
jns
lahf
fcoml
jp
lahf
and
pop
sub
hlt
pushf
mov
fsubrp
int
cmpsl
dec
outsl
sbb
and
pop
sub
pop
pusha
inc
pop
fs
adc
stc
mov
sub
aam
cmp
iret
dec
cmp
push
push
shl
add
sub
mov
into
lock
fsubl
in
jmp
pop
movsb
scas
outsl
cmpsl
es
mov
mov
dec
push
xor
push
or
xor
add
rclb
lcall
arpl
pushf
arpl
and
or
in
leave
ret
mov
adc
je
lcall
sub
add
dec
nop
repnz
and
sti
jno
jle
aas
pop
dec
cmp
push
xchg
dec
out
adc
push
sub
dec
call
jno
xor
int
repnz
cmp
pop
dec
push
std
daa
pop
nop
mov
inc
test
adc
or
xor
mov
pop
dec
mov
mov
lods
nop
in
pop
xlat
lea
sar
inc
xlat
inc
mov
cmp
fisubrs
loope
add
jnp
adc
neg
and
jmp
aas
fsubrs
in
dec
into
lahf
jmp
popf
mov
bound
cli
and
outsl
cmp
ja
push
jns
jb
mov
mov
loope
icebp
ret
push
mov
mov
inc
xor
pop
ficompl
lret
xor
push
stc
movsb
pop
adc
call
mov
add
mov
rclb
test
lahf
in
jnp
leave
loopne
add
jbe
mov
xchg
js
jnp
cld
mov
pop
or
fnstenv
aam
loopne
mov
filds
inc
xor
out
mov
movsb
dec
mov
inc
xlat
mov
xor
mov
adc
addb
or
lcall
mov
jnp
leave
rcll
out
mov
adcl
les
movsl
dec
pop
jge
xchg
or
cmpsl
mov
cli
push
test
push
pop
sbb
mov
and
and
mov
hlt
pushf
push
mov
stos
cltd
push
loop
addr16
in
mov
stos
call
inc
dec
ss
sub
popa
iret
outsb
pop
popa
loope
mov
jb
cmp
push
jl
add
stos
loope
hlt
fldl
sbb
nop
push
or
mov
cmpb
cmp
mov
inc
sbb
or
mov
outsl
jno
and
pop
leave
mov
into
sub
stos
jae
dec
int
jmp
inc
stc
out
out
xor
aam
movsl
ret
nop
xor
jb
testb
stos
in
push
daa
mov
push
nop
sbb
cltd
test
dec
aam
jge
nop
xchg
lret
xor
push
daa
add
add
xchg
adcb
clc
sbb
or
push
mov
aaa
push
and
add
inc
inc
cltd
pop
insl
insl
pop
xor
adc
jnp
cli
xchg
mov
outsl
add
pop
test
jnp
xor
pop
sbb
sbb
adc
xlat
pop
cld
sbb
pop
adc
fcompl
or
lea
lods
pop
push
lcall
push
nop
jge
andnps
mov
popa
ja
jo
lcall
push
stos
mov
or
aad
jl
dec
dec
fstp
std
test
sub
cmp
ljmp
xchg
sub
pop
lcall
or
xchg
shlb
mov
push
movsl
add
and
stc
je
jnp
jg
add
xor
lods
and
xchg
leave
xchg
and
sub
mov
cwtl
push
out
dec
icebp
leave
cmp
xchg
inc
push
adc
ficoml
sub
fs
mov
cmp
jno
leave
rolb
jg
jmp
and
pop
push
ja
jp
xor
sahf
lea
sub
push
sar
insl
and
push
popa
mov
inc
mov
dec
outsb
aam
fs
sahf
into
xchg
sbb
popf
rolb
scas
jmp
sub
mov
lock
stos
xor
jae
adc
mov
ficoms
iret
sbb
lahf
pop
les
jecxz
mov
cwtl
mov
out
inc
sbb
cmp
fisubrs
mov
cmpsl
mov
cmpsb
cmp
in
movl
or
dec
push
arpl
cmp
adc
and
jns
es
jb
inc
xchg
or
fimuls
fdivrs
popf
stos
push
push
jmp
int
imul
loop
xchg
jp
leave
out
test
and
or
add
sub
push
fisttpll
divb
cmp
stos
pop
mov
icebp
jae
sbb
imul
sbb
addl
lret
cld
cmp
dec
inc
movsb
mov
lret
scas
and
jbe
mov
sbb
add
add
notb
dec
sbb
movsb
lcall
xchg
pusha
fiadds
out
xchg
jecxz
pop
xchg
mov
pop
daa
dec
adc
inc
nop
data16
adc
mov
sub
or
ds
mov
movsb
rorl
sbb
sahf
push
loopne
stc
cmp
adc
ljmp
cmp
pop
adc
orl
movsb
movsb
hlt
cwtl
mov
icebp
mov
cmp
cltd
mov
mov
inc
and
cld
leave
imul
iret
dec
push
mov
inc
xchg
fistpl
pushf
repnz
mov
xor
mov
in
pushw
and
sbb
inc
stc
add
shl
outsb
jae
mov
das
mov
xchg
add
mov
cmc
repz
cltd
jb
mov
ja
nop
xor
or
and
mov
jle
imul
push
out
jns
aam
js
scas
push
shl
int3
int
mov
inc
mov
jns
cmp
or
or
cmpsl
addr16
mov
add
inc
cmp
sbb
hlt
arpl
imul
dec
fucomip
mov
popf
jbe
jo
add
test
jbe
aas
pop
xchg
paddusb
dec
in
fsubrs
pop
test
fsubrl
dec
imul
adc
dec
and
xor
fcmovnbe
sahf
push
or
xor
inc
cli
push
das
and
jno
outsl
out
ja
dec
push
sub
cmp
mov
lods
into
inc
lock
mov
imul
add
mov
das
call
sti
andnps
mov
stos
out
mov
test
adcl
mov
shl
std
movsl
inc
sub
pop
or
jnp
mov
jge
out
test
lock
dec
or
jno
mov
dec
fdivl
xchg
adc
cmc
jo
mov
mov
stos
pop
addb
sbb
xor
jge
mov
ret
push
adc
push
sbbl
flds
imul
push
aad
ficoml
mov
or
inc
push
and
adc
mov
xor
or
movsl
in
pop
xor
pop
outsb
xlat
rcrb
int
jbe
test
mov
add
popf
cltd
lods
in
insb
mov
rolb
inc
shr
enter
xor
xchg
inc
inc
add
sbb
inc
scas
sbb
pop
sbb
pop
mov
mov
xor
orb
shl
ljmp
movsb
or
outsl
std
scas
insl
xor
fs
dec
push
cmc
mov
gs
repnz
imul
jno
call
mov
push
jno
mov
inc
test
xchg
xchg
push
movsb
fsts
test
shlb
xchg
mov
mov
mov
mov
in
into
add
ja
mov
jb
js
mov
fwait
and
popf
push
adc
pop
cmpsl
push
jae
icebp
inc
jl
cli
icebp
rorb
lret
and
icebp
aad
inc
jb
call
repnz
xchg
sti
push
int3
lea
jbe
xchg
push
mov
inc
mov
mov
mov
add
shl
lds
lcall
adc
das
enter
inc
loop
fs
push
mov
add
jo
stos
movsb
push
mov
push
inc
push
mov
jo
add
adc
xchg
pop
lcall
mov
cwtl
lret
mov
push
push
xorl
lcall
pxor
jae
cmpl
lret
push
jp
dec
sub
push
pop
mov
fimuls
dec
xor
popa
push
sbbb
and
and
bound
push
sbbb
pop
jg
ret
mov
loopne
das
adc
int3
dec
sub
clc
mov
pop
xor
pop
push
jb
fdivs
fstps
ja
aad
inc
add
sbb
test
lods
rolb
mov
dec
outsb
adc
lds
mov
fimull
scas
shll
ss
sbb
cmpsb
inc
les
pop
push
ret
rcrb
dec
lock
mov
sbb
enter
mov
scas
push
js
adc
xlat
lock
cmc
fists
jne
pop
jmp
pushf
xchg
loope
xchg
lock
jne
dec
pop
rcrb
movsl
inc
rcl
pop
int
mov
push
mov
sbb
shll
mov
insl
dec
fs
gs
dec
in
mov
mull
fisubrs
mov
clc
fldenv
dec
xchg
fmulp
add
outsl
fstpt
pop
ja
mov
sbb
js
lahf
es
fcmovnb
popf
push
lds
lea
lock
int3
push
nop
sbb
add
mov
add
imul
pop
movsl
xchg
push
sub
out
hlt
cs
inc
cmp
hlt
jecxz
sub
push
cmpsl
mov
jg
sub
adcb
inc
sbb
dec
icebp
xchg
xchg
loopne
push
or
inc
cmc
xchg
add
add
mov
inc
cmpsb
popa
out
push
movsb
in
and
outsb
addb
insb
sub
pusha
insl
jo
fs
subb
movsb
mov
xor
xchg
lods
out
mov
mov
push
jecxz
lret
repnz
lods
xchg
shrl
sbb
pop
sub
xorl
gs
iret
xchg
sub
cmp
add
mov
sarl
mov
xchg
loopne
shrb
sub
int
mov
test
adc
adc
mov
and
fdivl
gs
sahf
les
out
scas
icebp
xchg
dec
fcomps
xchg
jbe
test
loope
mov
mov
adc
push
and
test
ret
dec
rol
cmpsb
iret
stc
into
test
pop
jle
push
jns
pop
lods
sarb
fbld
xor
test
repz
xor
int
pop
stos
xchg
pop
adc
push
out
pop
mov
sbb
test
lret
lods
xchg
and
data16
std
pop
mov
push
mov
mov
lcall
ja
fcomps
sbb
movsb
adc
fstpt
sub
dec
frstor
jl
or
fwait
lods
add
jl
xchg
sbb
cmpsl
rorb
xchg
rorb
cmp
sub
in
and
jmp
sar
imul
stos
jae
stc
adcl
mov
fildl
aam
mov
enter
insl
mov
sub
add
clc
jnp
push
insb
inc
adc
sbb
loopne
sti
test
lock
lock
sbb
dec
cmp
arpl
repnz
fnstsw
mov
mov
mov
xor
clc
ja
cmpsb
bound
cltd
ret
cmp
sub
inc
mov
inc
mov
movsb
stos
jmp
push
jle
call
mov
add
push
fcmovnb
xchg
xchg
pop
lret
adc
das
out
mov
and
add
add
mov
pop
xchg
mov
inc
xchg
cld
out
sar
sbb
mov
pop
popf
mov
xor
addr16
mov
subl
push
jle
jnp
mov
add
inc
stc
push
ret
inc
in
or
mov
ret
mov
sbb
push
xor
lock
stos
xchg
or
dec
jmp
cmc
leave
jecxz,pt
mov
int
std
std
lea
ss
inc
iret
mov
add
jge
insl
icebp
adc
je
fiadds
and
xor
scas
inc
insb
jno
mov
sbb
test
loope
jge
icebp
fnstcw
mov
fs
pushf
addr16
dec
adc
push
aam
adc
push
mov
loop
test
data16
cs
sub
mov
clc
adc
fsubrl
jge
fadds
add
mov
ljmp
sbb
pop
imul
and
mov
or
shll
adc
lea
mov
repnz
or
pop
mov
inc
mov
ja
adc
aad
xchg
fmull
jg
cmp
rcl
mov
out
rol
in
aaa
xor
out
fldcw
out
inc
sbb
mov
dec
xchg
inc
xchg
pop
push
out
lahf
cmp
inc
pushf
sti
mov
inc
nop
inc
cwtl
insb
es
dec
add
or
mov
call
sub
fdivrp
pop
jmp
fistpl
cmp
psrlw
pushf
push
icebp
xchg
jo
scas
ds
in
add
xor
sub
stos
pop
inc
fst
sahf
scas
jge
jecxz
iret
js
push
sbb
or
lahf
mov
scas
int3
into
scas
imul
mov
xlat
mov
loope
push
scas
je
and
jp
out
jle
adc
dec
stc
jb
es
push
ret
arpl
lcall
jb
mov
and
add
add
int
pop
fs
dec
and
movb
movsl
push
scas
fwait
cmp
and
jns
dec
dec
pop
dec
aas
inc
scas
xlat
mov
push
or
ljmp
fistps
mov
pushf
push
xchg
mov
adc
jecxz
or
sti
jecxz
nop
jp
scas
xchg
inc
sub
lcall
test
std
xchg
icebp
mov
fisubrs
cltd
mov
cltd
xchg
les
mov
xor
xor
aam
pop
jne
push
push
dec
mov
xchg
insl
fsubl
insl
cmc
and
scas
mov
and
cmc
pop
inc
xchg
pop
mov
dec
or
or
sbbl
lock
sub
outsl
inc
cs
pop
imul
mov
aaa
cs
pop
sbb
sbb
hlt
push
mov
fs
insl
or
dec
arpl
arpl
popf
xor
pusha
lcallw
lea
add
push
sbb
mov
mov
dec
repnz
sbb
push
int
loop
xor
fdivl
loope
test
or
fucom
loope
jmp
popf
imul
in
ljmp
das
inc
insb
cmpsl
pop
outsl
cmp
insb
jmp
push
imul
lock
popa
sub
test
negb
jns
xchg
jae
jno
cmp
in
push
arpl
gs
xchg
iret
jo
push
dec
loope
jo
xchg
sub
pop
xlat
es
mov
test
sarl
rcr
sbb
inc
dec
jns
stos
fnsave
xor
xor
add
fnstenv
sahf
mov
mov
repnz
daa
lods
xchg
mov
mov
fidivl
inc
call
adc
or
mov
mov
mov
mov
cmc
xchg
pop
dec
mov
out
and
inc
jle
sub
jecxz
push
xchg
decl
sub
mov
lcall
mov
data16
mov
and
xor
adc
cwtl
fs
dec
shrl
mov
ss
call
xlat
cmp
int3
pop
ret
mov
xchg
das
push
dec
fcmovne
out
push
adc
push
add
jecxz
call
cmpsl
ljmp
jnp
lods
jne,pn
mov
pop
pop
fistps
dec
or
dec
addr16
loop
dec
pusha
fistpll
sbb
xchg
lds
leave
mov
xor
ja
mov
std
data16
in
or
dec
loope
cmc
adc
fcmovb
xchg
popa
cmc
fwait
imul
dec
nop
testb
sub
dec
jecxz
cltd
mov
out
jg
or
repnz
mov
lcall
xchg
hlt
xchg
lret
or
out
pop
xor
xchg
xchg
push
mov
add
push
dec
jle
fwait
int
add
xor
push
push
aaa
jb
stos
adc
ss
je
es
sub
mov
xchg
loopne
ficomps
xchg
push
jno
outsl
xor
push
xor
jecxz
cmc
adc
jp
sbb
push
ret
lods
adc
adc
mov
fdivr
push
sbb
mov
enter
jne
inc
jp
cmp
pop
rcll
lock
in
shrl
mov
xchg
mulb
inc
lcall
xor
xchg
push
call
xor
xchg
cli
cli
shrl
xor
mov
out
xchg
jge
mov
and
mov
rclb
out
inc
mov
js
lea
mov
stos
sub
xor
or
out
dec
arpl
out
dec
add
cli
cli
push
push
mov
lods
notl
mov
mov
movl
inc
jnp
aam
push
sbb
popf
into
mov
lcall
aam
push
ret
dec
inc
out
sbb
sbb
jae
mov
adc
inc
out
cld
fisubrs
add
enter
call
sahf
mov
cmc
leave
add
add
mov
mov
push
mov
push
pop
mov
pop
sbb
fsubr
sbb
dec
xchg
sub
or
scas
push
inc
mov
fs
sub
jnp
je
adc
enter
mov
popa
gs
jo
popf
in
mov
movsb
xchg
push
mov
lret
pop
xchg
ffree
adc
fwait
rorb
cli
xchg
mov
or
out
sbb
dec
mov
xor
shrb
mov
popa
imull
aam
rclb
ja
js
cmp
pop
pop
shll
cmp
bound
mov
and
jbe
les
sti
adc
daa
movsb
lcall
fcmovnb
xchg
cld
loope
cmpsb
jae
pushf
sbb
scas
jp
lahf
imul
stos
cmp
sub
imul
xlat
testb
lods
add
fst
sti
mov
jne
mov
or
pop
fnstcw
iret
fdivrs
or
xchg
add
ret
and
mov
sub
mov
mov
cmp
sub
outsb
test
xchg
orl
push
cmp
je
mov
aas
jle
add
mov
add
xor
int3
mov
ljmp
add
test
lahf
xor
pop
adc
and
jns
jbe
inc
jbe
icebp
and
jl
test
pop
xor
test
or
lods
hlt
cltd
jecxz
push
mov
test
xor
push
mov
mov
js
xor
inc
mov
jle
int
xlat
push
and
test
fmull
sub
loope
and
push
and
in
sbb
popf
xor
in
dec
jmp
imul
popf
ret
pop
sti
aaa
jo
jbe
adc
cmp
sahf
pop
jg
and
mov
les
enter
xchg
inc
lret
mov
xchg
xchg
call
mov
popa
xchg
pop
pop
jmp
xchg
jae
les
cld
jle
xor
push
mov
call
nop
sti
dec
sbb
and
add
cmp
inc
or
enter
je
add
pop
sub
fildl
add
hlt
stos
test
mov
xchg
lock
xchg
xchg
push
mov
jb
xor
inc
out
cltd
movsl
test
mov
dec
pop
dec
fdivl
mov
ljmp
push
push
in
ljmp
sbb
jo
push
mov
rcr
push
test
mov
jo
xchg
or
jns
popf
lods
push
or
lods
int
jno
rcr
or
xor
pop
outsl
int3
or
test
or
cwtl
test
fs
insl
xor
or
shlb
popa
mov
sbb
mov
pop
ja
pop
mov
xchg
mov
jnp
std
cwtl
cld
inc
pop
jns
enter
push
adc
cmc
adc
stos
loopne
xlat
movsl
in
enter
lret
or
xor
mov
lds
and
mov
add
cmpsb
jne
insl
xor
mov
mov
mov
cmpsl
jo
sbb
popf
cmpsl
dec
xchg
push
jmp
inc
push
inc
jmp
mov
push
cmc
sub
cmc
ds
arpl
not
dec
js
movsb
push
out
mov
or
out
outsl
hlt
xchg
or
adc
lret
icebp
les
mov
mov
or
fs
sub
popf
mov
adc
je
sti
testl
repnz
xor
or
push
mov
xor
mov
fistl
jno
fstl
add
cmp
in
lret
add
mov
loopne
jmp
lret
aaa
in
ds
xor
popa
xlat
xchg
in
dec
scas
movsb
mov
ret
stos
addr16
xchg
or
sbb
dec
add
xor
das
add
mov
xor
adc
je
push
mov
dec
pop
jbe
rolb
inc
call
gs
sbb
bound
xchg
cmpb
insl
adc
jno
iret
js
mov
xchg
push
sub
sarb
push
jne
pop
aaa
dec
scas
xchg
push
push
adc
test
popa
jnp
int
pop
ror
jecxz
rcrl
xor
xor
inc
mov
jle
and
in
jge
pop
pop
pop
jo
jae
stc
mov
scas
mov
outsb
rorb
leave
outsl
into
xchg
xchg
mov
sub
sti
pop
xlat
push
cmpl
and
xchg
sub
add
testb
fnstsw
adc
test
lods
in
push
sbb
adc
inc
jae
jecxz
add
dec
pop
xchg
leave
pop
xchg
push
push
and
and
and
pushf
subb
lods
test
dec
iret
xor
push
call
mov
mov
cmpsl
jae
scas
dec
inc
mov
xchg
leave
jb
shrb
imul
inc
enter
movsl
ret
mulb
cli
or
cmpb
push
out
adcb
cs
repnz
pushf
mov
jns
aas
xor
mov
mov
aas
aaa
enter
es
jmp
fisttpll
movsl
je
fldcw
dec
cmp
je
mov
sbb
dec
inc
or
xchg
ret
out
jmp
fistpl
out
sub
jnp
jnp
mov
xor
out
inc
jmp
xchg
pop
sahf
adc
mov
mov
jp
and
xchg
pop
popl
add
jno
dec
or
call
loopne
push
jg
orl
pop
jno
inc
sbb
mov
mov
sub
in
pop
and
test
or
jmp
xchg
jbe
jbe
and
push
scas
push
pop
loopne
hlt
sti
jne
cmp
mov
jg
insb
aad
cmp
mov
stos
adcb
sbb
lret
push
int3
add
jno
pushf
pusha
adc
pop
jg
and
mov
push
movsl
hlt
lret
out
cmc
pop
dec
pushf
call
cmp
lcall
fwait
inc
adc
sub
jbe
in
pop
or
ds
sahf
fdivs
mov
jbe,pt
cmp
mov
pop
xor
das
mov
mov
shl
mov
cs
imulb
sbb
arpl
ja
shlb
sbb
cltd
call
dec
jmp
xorl
fmul
inc
imul
pop
mov
lods
mov
inc
orb
imul
shrl
mov
addb
or
mov
mov
loopne
add
xchg
movsb
test
adc
je
fstp
loopne
std
scas
lock
into
dec
test
and
jae
mov
jge
shrl
lcall
adc
push
mov
inc
leave
sbbl
adc
xor
or
or
fs
ret
push
mov
mov
popa
dec
loopne
bound
int3
into
leave
sbb
mov
aam
mov
rclb
jp
aad
cmpsb
xor
lret
sbb
dec
dec
cmp
mov
push
pop
fwait
and
inc
adc
icebp
aam
lds
lahf
lahf
mov
or
mov
jb
js
cmc
xchg
add
mov
ret
and
arpl
negl
pop
xchg
out
jg
lds
jecxz
dec
mov
cmpl
pusha
lock
ja
mov
stc
mov
pop
sub
dec
pop
jb
dec
dec
cmp
repnz
and
dec
mov
sub
add
sbb
cmc
mov
mov
icebp
jns
out
das
mov
adc
jl
add
andb
mov
sbbb
outsb
adc
sbb
push
mov
icebp
bound
fbld
adc
pop
mov
imul
dec
imul
jo
ds
mov
bound
and
and
dec
in
push
les
mov
in
sub
aaa
lahf
pop
cmp
insl
sub
lds
cwtl
cmpsb
fs
fs
sahf
ror
and
mov
jbe
aam
out
mov
lods
loopne
aad
add
je
jmp
mov
mov
push
mov
hlt
xchg
cmpsl
dec
fimull
fs
arpl
test
or
fwait
and
in
add
shlb
fwait
mov
cs
inc
mov
push
xor
jecxz
jbe
shll
dec
loope
xor
mov
arpl
stos
mov
cmpsl
push
xchg
add
bound
jae
leave
fstl
sbb
pushf
lds
mov
mov
cwtl
mov
xor
xchg
arpl
sub
fwait
adc
test
aas
sahf
jne
adc
push
mov
out
insl
cmp
cltd
sbb
andb
bound
sub
dec
out
inc
jl
mov
or
dec
lock
lea
push
in
cmp
fisubs
dec
adc
adc
loop
stc
mov
push
cmp
mov
rcr
shlb
mov
inc
leave
out
cmp
adc
xchg
imul
movsl
mov
sub
stc
popa
and
push
rcr
imul
bound
adc
dec
mov
mov
rcr
sar
mov
inc
lar
sbb
inc
adc
mov
adc
scas
mov
jl
cwtl
mov
int3
sub
sbb
xor
stos
mov
int3
mov
fidivrl
shrb
pusha
in
push
add
cld
sub
dec
jecxz
ss
stc
inc
or
cld
jno
push
imul
sbb
loopne
inc
fucomip
jno
xchg
test
push
shl
push
mov
dec
xchg
mov
shl
cltd
and
mov
in
mov
or
sbb
fidivl
sti
add
dec
mov
clc
mov
in
pop
loop
les
xor
mov
pop
loope
je
inc
push
shrl
aam
xor
aad
rcl
mov
sbb
cmp
sbb
les
stc
mov
jne
test
xlat
xchg
adc
fs
repz
sbb
dec
add
call
jl
pop
mov
repz
mov
loop
pusha
testb
mull
in
adc
mov
stc
enter
fcom
in
sbb
xor
popa
insl
lods
cmp
dec
scas
or
outsl
into
mov
movsb
jge
cmp
and
test
rcrb
in
cmp
addr16
cmp
cmp
clc
mov
cli
sub
and
cmp
cwtl
dec
paddq
add
scas
jmp
xor
dec
cltd
clc
mov
jb
scas
insl
repz
stos
mov
fwait
subb
arpl
clc
xchg
ljmp
dec
pop
popa
pop
sarl
cwtl
dec
cs
dec
int
mov
loopne
pop
int
inc
test
flds
scas
outsl
dec
aad
jge
cmp
stc
pop
sbb
lretw
mov
sub
jle
subb
sahf
rolb
icebp
ret
inc
jo
in
nop
scas
sbb
pop
or
incl
sbb
testl
add
das
jge
cmp
lret
or
loop
lock
bound
push
lea
shrb
out
dec
ss
inc
bnd
sbb
and
xor
xor
mov
out
add
movsl
gs
in
in
xchg
mov
xchg
inc
test
arpl
fwait
rclb
stc
xchg
hlt
gs
sub
dec
inc
incl
adc
cmp
scas
mov
or
enter
jae
xchg
cs
push
jno
xor
sub
mov
mov
and
push
mov
adc
adc
sub
aad
push
aad
jnp
pop
mov
stc
xor
mov
int
jnp
cmp
pop
subb
and
and
or
fucom
adc
ret
cmpsl
inc
mov
rcrl
push
cmc
enter
gs
mov
pusha
sbb
mov
sti
lahf
icebp
push
mov
push
sub
dec
adc
sub
btc
pop
push
addr16
mov
push
outsb
repnz
push
lcall
push
jg
sbb
cmpsl
into
and
jecxz
daa
notl
cmp
ja
hlt
xor
mov
bound
les
in
in
xchg
pusha
lock
or
mov
lret
push
xor
dec
xor
xchg
xor
lods
inc
daa
imul
fisubl
ja
sbb
cs
fucomip
mov
rcrl
jnp
jl
adc
dec
mov
mov
ss
pop
push
ret
add
dec
daa
dec
int3
adc
xchg
mov
nop
mov
and
jnp
cmpsl
stos
jecxz
fisubrl
jl
fidivl
fucomp
in
jle
mov
add
add
inc
jp
ja
mov
adc
mov
icebp
sub
outsl
ljmp
pop
mov
insb
iret
in
inc
nop
cmpsb
fldt
outsb
lcall
inc
jecxz
push
cmp
or
mov
es
and
cmp
xor
ljmp
pop
gs
imul
nop
js
push
push
loope
add
jbe
into
adc
lock
adc
pop
push
cs
or
or
adc
sbb
cld
jne
loop
pop
out
jb
push
jg
and
orl
loop
mov
clc
xchg
mov
jo
mov
mov
xorb
call
sarb
jle
sub
jl
mov
adc
mov
mov
and
pop
push
pop
outsb
xchg
in
or
cmp
out
xchg
in
add
inc
es
repz
int3
adc
mov
dec
xchg
add
fs
and
insb
dec
dec
incb
fldl
pop
in
rclb
aas
cmp
pushw
adc
inc
sbb
pop
mov
int3
push
cmc
jns
inc
push
or
popa
mov
xchg
mov
adc
jb
ret
cld
inc
fstpt
pusha
mov
std
push
xlat
imul
adc
mov
cmp
or
hlt
cmpsl
add
sub
push
int
add
repnz
clc
xorl
adc
cmp
add
ret
jmp
jbe
clc
xchg
in
hlt
orb
stos
les
iret
sbb
cmp
cltd
adc
test
push
movsl
xlat
sub
mov
xor
cmp
daa
int
icebp
xor
mov
repz
ret
lahf
pop
cmc
mov
pop
mov
cmp
pminub
es
mov
test
mov
mov
inc
les
push
cwtl
adc
jns
xor
dec
rorb
addl
arpl
mov
movb
push
scas
stos
cmpsl
repnz
loope
fisubrl
enter
decb
mov
hlt
cmp
and
sbb
in
rol
repz
inc
cmc
arpl
clc
mov
bound
lret
xchg
cltd
ljmp
in
rcll
ds
lret
adc
outsb
mov
ret
mov
fstl
push
and
pop
ss
imul
loop
pusha
add
or
cmp
mov
xor
dec
or
xchg
inc
loop
cmp
in
loope
fnstcw
mov
rcrl
in
push
sbb
std
stos
pop
inc
sbb
gs
mov
adc
dec
insl
sahf
inc
sarb
mov
scas
fxtract
cmpsl
pop
ss
ret
dec
test
insb
or
cs
dec
mov
scas
mov
jg
lidtl
dec
clc
push
push
das
shl
jge
pushf
jbe
xchg
adc
aad
jo
movsl
scas
xchg
lcall
mov
push
cwtl
cli
jmp
mov
mov
out
xor
push
ljmp
pop
jo
pop
stos
dec
out
and
xchg
mov
and
mov
bound
fdivl
adc
cmp
jno
jge
sub
jle
iret
add
push
in
out
dec
mov
lods
and
int
xchg
lcall
adc
fwait
es
push
pop
loopne
roll
mov
jnp
ds
pop
decl
repnz
ss
cmp
inc
out
pop
mov
ljmp
push
loopne
cmc
mov
cmp
sub
sub
lret
clc
sub
jl
mov
pop
mov
add
rcrb
and
jbe
out
stos
imulb
test
scas
das
ljmp
push
test
divb
dec
jl
mov
mov
jecxz
iret
mov
ljmp
jl
pop
xor
fnstcw
sbb
cmp
pop
and
inc
xchg
inc
jno
inc
push
loope
aam
xchg
sub
sub
aaa
sub
icebp
leave
pop
push
popa
and
dec
sbb
lret
mov
xchg
jecxz
dec
fdivs
shlb
push
or
fstcw
jge
push
adc
sub
fstpt
stc
lahf
mov
popa
arpl
jb
icebp
aam
pop
inc
aaa
orl
mov
mov
js
push
adc
jecxz
pop
inc
lcall
pop
adc
push
shlb
sub
xchg
pandn
xchg
in
out
rcrb
jae
cltd
pop
in
mov
fstps
dec
or
imul
mov
test
lcall
out
add
pop
scas
inc
jae
pop
add
int
and
sbb
cmp
cli
leave
out
adc
jno
daa
lret
xchg
addr16
lret
mov
fstp
mov
fiadds
and
sub
xor
mov
jb
mov
mov
cmpb
jo
jg
sbb
ljmp
out
mov
adcl
pop
outsl
push
sbb
jns
mov
sbb
xchg
push
ja
mov
les
iret
push
js
pop
push
push
fmuls
sub
loop
in
mov
and
ja
push
inc
imul
mov
fdivs
xchg
adc
out
and
fcmovne
sbb
jae
adc
fucom
sub
push
add
lahf
push
add
dec
pop
jg
aam
aam
aas
dec
sbb
out
xchg
addr16
xor
sub
push
addr16
out
jecxz
inc
adcl
fmull
sbb
mov
popf
fstpl
ffreep
scas
int
icebp
roll
jns
and
lret
les
lret
in
cwtl
dec
mov
ja
fwait
mov
mov
dec
mov
or
dec
push
sar
mov
sbb
cli
std
rep
cmp
outsb
and
pop
mov
sub
into
and
nop
fwait
add
push
add
in
rcrb
cmp
sub
ja
mov
xor
jae
mov
inc
jae
push
and
dec
sbb
js
pushf
or
push
inc
cmpsb
xor
mov
adc
clc
or
add
jo
out
notb
add
imul
push
sub
jle
mull
cmp
adc
std
mov
mov
hlt
xor
sbb
sbb
js
jge
xchg
push
idiv
jmp
pop
mov
js
xor
inc
jp
sbb
adc
loopne
loopne
mov
or
push
mov
inc
add
pop
jmp
aad
jo
clc
test
xchg
sub
jne
inc
lret
mov
pop
or
and
add
imul
cmp
xor
pushf
mov
jbe
cmp
jmp
jl
mov
push
fxch
push
popa
ljmp
and
push
push
aam
repnz
and
push
dec
xlat
sbb
neg
es
sub
das
enter
jbe
enter
adc
in
mov
insl
mov
mov
addr16
ficomps
incl
sbb
std
lret
pop
mov
sub
add
cmpb
pop
fistpl
push
rorl
cwtl
inc
lods
mov
aas
popl
jb
bound
push
pop
xlat
jae
xchg
adc
xchg
push
sub
js
sbb
mov
push
movsb
mov
sahf
ds
xor
push
jmp
pop
idiv
adc
cmp
pop
cmp
daa
hlt
in
cli
fistpll
mov
scas
popf
popf
mov
jo
dec
clc
mov
loopne
test
pop
stc
jae
mov
add
imul
stc
sub
ret
in
push
repz
inc
push
cmpsl
push
aam
sbb
icebp
lcall
xor
scas
out
push
pop
shrb
and
icebp
fnstcw
jbe
dec
jns
cmpsl
mov
pop
adc
adc
stc
pushf
mov
inc
lret
lahf
daa
jg
testl
popf
inc
adc
dec
icebp
lock
mov
xchg
sbb
icebp
push
push
xor
mov
and
xor
cmpsb
pop
mov
xchg
leave
subb
jnp
jle
insb
cmp
lahf
lods
in
xlat
jns
or
mov
pop
rolb
rcrb
adc
mov
mov
lock
jecxz
xlat
cmp
dec
data16
and
sbb
cwtl
int
cmpsl
loopne
nop
xor
dec
stos
and
movsb
cmp
stos
pushf
sbb
cli
mov
cmp
jg
lods
and
pop
scas
or
dec
fs
dec
mov
ljmp
insb
std
pop
inc
inc
pusha
cmp
rolb
xchg
stos
add
push
sar
cmp
mov
jg
mov
dec
lahf
and
int3
neg
jno
push
sub
sub
popf
das
dec
dec
popa
rdtsc
inc
fs
inc
mov
into
sub
je
bound
dec
dec
rorb
xchg
dec
popa
push
and
daa
add
adc
pop
lods
jl
xor
in
jnp
out
fwait
out
pop
add
loope
mov
dec
inc
or
adc
jo
sahf
dec
sbb
lods
outsb
stc
or
xchg
xor
scas
cmpsb
sbb
pop
imul
push
or
pop
jle
pminub
push
loope
xor
aam
pop
xor
lret
mov
cmc
xchg
or
jns
arpl
push
aas
lcall
cwtl
sti
and
lret
lret
mov
fcompl
jno
dec
fisttpll
pushf
pop
and
dec
pop
mov
inc
enter
mov
test
sub
mov
fdivrl
adc
inc
test
push
sbb
rorl
pop
cmpb
call
push
ds
mov
std
inc
sub
subb
in
cmp
cmp
leave
and
stos
pusha
fs
jne
inc
sbb
sub
push
insl
jnp
mov
lea
sub
sbb
loopne
mov
jmp
cmp
jecxz
hlt
mov
lods
or
and
stc
sub
ljmp
push
enter
scas
dec
adc
ffreep
cltd
sub
dec
lds
jne
xor
cmpb
leave
stc
repnz
cmpsl
xchg
or
sub
fbld
push
aam
mov
pop
repz
stos
test
dec
rorl
inc
jo
gs
shlb
adc
pop
repnz
dec
sbbb
sbb
leave
xchg
pop
and
scas
or
xchg
ja
inc
push
sub
inc
and
and
fiadds
out
in
push
cwtl
and
ds
xor
mov
push
ss
mov
outsl
dec
jno
arpl
sar
xrelease
jle
aam
sub
lret
sbb
add
test
push
ds
in
inc
dec
pop
cmp
leave
xchg
pop
xlat
dec
inc
mov
into
pop
xchg
test
popa
stc
mov
aam
int3
ja
mov
insl
or
and
jmp
or
sbb
pop
inc
xchg
push
xchg
test
add
or
xchg
pop
arpl
dec
ja
out
je
push
dec
fcomps
mov
int
jmp
add
sbb
out
jl
mov
outsl
cmp
xchg
jg
push
sahf
sub
push
add
jmp
enter
and
push
adc
or
pop
fildl
mov
insl
fnstcw
mov
xchg
lahf
xchg
call
xchg
scas
out
mov
testb
shll
les
xchg
ds
cmpsl
mov
and
xchg
adc
sub
inc
test
cmp
adc
lds
or
mov
mull
divl
mov
hlt
aam
dec
jle,pt
lret
xor
insl
inc
fisubs
stos
sub
ljmp
repnz
data16
jb
call
test
popa
mov
pusha
out
xchg
aaa
fcomps
cmpl
cmp
fnsave
leave
aam
ret
inc
pop
mov
leave
jl
jb
adcb
xchg
xchg
sub
popf
mov
int
mov
outsl
stos
idivb
imull
pop
mov
mov
std
ret
jno
push
xor
or
mov
push
mov
dec
lods
loopne
sub
adc
shll
push
xchg
jne
cmpsb
aas
mov
or
or
pop
mov
fs
lahf
jno
cs
inc
xchg
jl
stos
lret
fwait
cmpsb
jnp
mov
sub
mov
test
lcall
or
pop
push
adc
and
int3
jne
xchg
leave
push
or
repnz
mov
lcall
xlat
test
aam
add
and
ret
mov
fwait
out
push
jnp
xor
data16
pop
jle
popl
inc
pop
xlat
adc
xchg
xor
and
movsl
in
jp
jl
xor
int3
lahf
jae
sub
pusha
mov
loopne
mov
aas
push
inc
ret
cli
fsubr
push
rcll
push
sub
mov
lds
call
hlt
jne
sub
in
stc
xor
loope
gs
movsb
daa
fwait
add
aam
add
hlt
xchg
cmp
mov
mov
xchg
add
and
push
mov
cpuid
dec
adc
jg
xor
in
lcall
mov
ret
and
push
mov
xor
out
sbb
ror
ret
idivl
addr16
push
adc
pop
daa
xor
mov
sbb
shll
or
or
ljmp
mul
shrl
aas
inc
out
xor
sub
adc
pop
shrb
inc
ficompl
lock
fyl2x
popf
xchg
and
ret
shlb
sub
cld
in
mov
adc
mov
rclb
jmp
mov
sbb
sbb
jnp
lahf
mov
fucomip
test
xor
cmp
sbb
dec
push
mov
ljmp
pop
es
fcoms
out
xchg
push
aad
sbb
imul
fisubs
xchg
test
xchg
insl
shrl
mov
shrl
or
sbb
cltd
xchg
roll
cmp
jmp
cmpsl
inc
stos
mov
insb
or
call
insb
out
hlt
inc
ds
mov
and
int3
mov
inc
dec
mov
push
stos
xor
cmp
out
out
pusha
add
jb
and
sbb
mov
clc
fldl
ds
xor
popa
std
js
rorl
lds
and
adc
xchg
nop
and
imul
cli
lods
fistps
mov
mov
inc
mov
xor
push
mov
pop
sbb
or
mov
mov
ret
push
scas
out
in
fwait
xchg
mov
mov
lds
jb
mov
or
ret
xor
cld
push
xchg
dec
mov
pusha
mov
pop
je
and
enter
sbbb
popa
insl
faddl
add
stc
in
xor
xlat
push
loopne
and
lds
ljmp
mov
inc
daa
lcall
inc
addr16
adc
out
adc
push
mov
mov
lret
mov
in
push
les
lock
lcall
fcmovb
inc
mov
xor
arpl
fs
mov
mov
addl
gs
mov
addr16
adc
add
xchg
inc
pop
cli
sbbb
fs
mov
add
push
jp
jbe
sarl
cmc
mov
daa
sub
pop
orb
mov
std
add
adc
mov
loope
add
std
sub
push
push
fimuls
or
loop
or
loop
mov
mov
mov
push
adc
jo
jl
xor
or
add
repnz
xor
imul
rcrl
pop
mov
cwtl
inc
and
je
cs
push
out
xor
adc
loopne
sub
mov
xchg
inc
xchg
and
pop
out
adc
xchg
xor
std
xchg
addr16
ret
xlat
leave
hlt
stos
xchg
pop
repz
sub
and
dec
lcall
leave
push
adc
add
das
push
jmp
fucomip
jb
mov
pop
adc
add
xor
sbb
loopne
movsl
out
push
ss
imul
out
pusha
xor
mov
xchg
inc
xchg
pop
lock
outsl
adc
cmp
sub
cmp
or
jae
push
lds
xor
jle
cmp
sub
jl
movsb
ficompl
leave
push
enter
cs
pop
push
ds
fcmovne
roll
dec
pushf
sub
call
mov
stos
xchg
or
xchg
xor
jne
movsl
cmp
daa
inc
insb
fs
cmpsl
out
sti
pop
and
mov
stos
scas
push
fistps
mov
xchg
int3
push
jnp
push
test
ljmp
or
xor
in
push
mov
fcmovnu
fisubrs
sbb
lods
int
cmc
lods
inc
push
mov
popa
fwait
xor
sbb
data16
stos
sub
inc
ja
jge
and
les
xor
pop
call
pop
lahf
bound
cmp
and
mov
mov
pop
ja
jae
rclb
mov
xor
sub
mov
xchg
sbb
lods
or
dec
out
or
lcall
cmpsl
icebp
and
sub
test
mov
pop
inc
push
outsb
test
fimuls
jno
and
jns
and
xchg
enter
cmp
xchg
cmp
or
enter
dec
ror
inc
stos
sub
xor
jns
jb
xchg
mov
xor
rcr
cmp
mov
sti
sbb
push
stos
stos
sub
dec
fnstenv
hlt
and
dec
dec
rcll
out
es
jne
popa
loope
cltd
mov
in
adc
in
in
popa
add
xchg
enter
ds
xor
repnz
xor
push
mov
cmp
addl
push
call
inc
pushf
dec
cmp
mov
pop
rcrb
pop
jne
xchg
mov
js
fldl
push
stc
push
ret
repnz
insl
mov
jle
lds
mov
sbb
mov
pop
pop
clc
xor
fs
mov
sbbb
insb
or
mov
movl
imul
imul
stos
das
jbe
dec
push
daa
jmp
stos
push
repnz
adc
jo
mul
push
cmp
and
scas
mov
dec
pop
cmpsl
inc
dec
sub
fcomp
jg
cld
movsl
fsubs
xor
mov
loopne
or
jne
push
div
andb
fnstcw
out
sub
add
stc
sahf
xor
mov
xor
inc
jmp
fisubs
mov
cmp
insl
adc
mov
pop
lret
push
inc
and
test
gs
icebp
fcmovu
pop
ret
fnstcw
mov
mov
push
xor
push
dec
jg
leave
outsb
cmp
aad
cmp
mov
pop
aam
test
les
cmc
inc
mov
dec
cwtl
jo
adc
loopne
aam
imul
int
test
xlat
cmc
mov
loop
xchg
ret
shlb
sbb
movsb
frstor
repz
jge
push
xor
and
push
loopne
shlb
mov
mov
push
clc
xor
outsb
xor
xlat
mov
and
loope
jle
adc
or
and
mov
sbb
movsb
repz
push
lahf
popa
cmp
pop
dec
in
jg
xchg
sub
push
cld
jg
hlt
pop
lret
mov
adc
and
add
fst
and
dec
int3
cs
pop
jecxz
jne
icebp
pop
adc
pop
loop
insl
push
mov
push
mov
es
cmp
ss
jmp
pop
inc
push
or
test
loopne
push
mov
push
lea
fmuls
mov
ljmp
fists
jp
cmpsl
sbb
fcoml
dec
pop
pop
mov
lock
mov
jbe
adc
mov
shrb
push
adcl
lret
outsb
mov
and
mov
jne
xchg
and
popf
adc
insb
jge
aam
pop
xchg
push
xchg
mov
jae
test
or
sub
in
pop
sti
inc
xchg
and
jb
iret
jns
or
dec
xchg
xchg
add
popf
dec
ss
fists
pop
andb
imul
jmp
ds
gs
mov
fwait
mov
cli
aam
stos
fnsave
test
mov
outsb
leave
in
xchg
insl
mov
stc
cmp
pop
into
and
mov
mov
mov
shlb
nop
adc
xor
xor
mov
sbb
jns
lods
rcrl
lret
fcmovnu
mov
std
sbb
jl
mov
ret
pop
pop
or
push
out
lahf
out
adc
pop
xchg
push
push
in
pushf
xchg
repnz
mov
sub
loopne
stos
insl
aas
cmpsb
mov
push
out
icebp
in
call
lock
mov
xor
mov
and
movsb
call
sub
test
xchg
outsl
or
rorb
test
push
jl
sbb
out
scas
xor
sbb
mov
sub
lret
fimull
mov
mov
shll
xchg
pusha
dec
pop
xor
and
pop
push
out
jp
pop
add
push
xchg
adc
lods
adc
in
inc
and
roll
mov
scas
outsl
push
icebp
sbb
repz
fs
insl
hlt
cmpsl
add
mov
xor
shl
fisubs
sarb
push
pand
test
mov
mov
jp
jle
push
movsl
mov
mov
insl
pop
sub
push
aad
and
adcb
mov
dec
out
sbb
xor
and
ds
add
andb
aad
ljmp
sub
es
fsts
mov
push
xchg
adc
fnstenv
mov
cmpsl
jo
clc
outsl
loopne
sub
pusha
ja
data16
sbb
out
cmp
mov
ficoml
pop
push
mov
add
pop
mov
cmp
lock
stos
js
test
or
fcmovne
test
testb
inc
enter
loopne
mov
cmpsb
ss
aad
mov
pop
push
cmp
adc
fdivl
imul
xor
and
xor
mov
repnz
dec
shll
es
push
stc
adc
movsb
and
inc
int3
fnsave
cmc
shr
mov
sbb
ja
nop
in
test
lea
lret
inc
aaa
dec
xor
mov
xor
and
mov
lahf
rcrb
adc
cmp
push
sub
je
scas
pop
fnstsw
ret
add
repz
and
cmpl
xchg
test
mov
jb
mov
test
dec
shlb
stos
inc
jo
ds
sbb
mov
or
lock
jle
cltd
add
stos
cmp
test
pop
mov
fwait
push
in
out
xchg
mov
push
sbb
xor
mov
jge
cwtl
mov
ss
inc
aam
repz
mov
xor
fs
iret
cmpsb
sub
dec
xor
adc
adc
push
jle
out
jo
push
in
mov
inc
and
or
adcl
cli
dec
ljmp
xchg
test
push
orb
push
rorl
roll
pop
in
adc
insb
pop
xchg
es
repz
repnz
sbb
out
in
xchg
pop
pop
push
xlat
rol
int
fsts
andl
push
movsb
sbb
in
or
xchg
mov
jo
in
add
arpl
cmc
ret
jl
mov
pop
sub
push
push
dec
adc
outsb
cmp
pop
test
lcall
shlb
mov
add
jno
push
inc
cltd
imul
xchg
ja
jp
mov
orl
push
sub
xor
mov
sub
sbb
dec
cmp
sub
mov
fldl
add
aas
push
loopne
push
push
cmp
pushf
pop
rcrl
outsl
js
xor
test
or
xchg
loop
addr16
sub
mov
lds
pop
shlb
mov
lret
push
xor
and
in
mov
cmp
xor
paddd
push
enter
xor
insl
rcrb
xchg
addr16
pop
dec
push
out
je
test
mov
aam
faddl
dec
jo
push
mov
aam
or
mov
pop
loop
jne
and
xchg
xor
aaa
ds
imul
popa
aad
or
adc
add
stos
rclb
pop
mov
mov
add
lock
les
jns
lret
das
leave
hlt
jnp
dec
or
adc
rclb
add
enter
pusha
lock
aad
fists
inc
addl
add
fsubrp
out
jl
jae
das
sbb
icebp
out
xchg
mov
decl
not
jl
sub
clc
and
scas
mov
fldenv
or
pushl
dec
mov
add
mov
es
jno
jbe
push
mov
mov
fadd
xor
fisubrl
xor
sbb
movsb
mov
movsb
clc
js
sbb
push
sub
cmp
xchg
jne
addr16
clc
mov
push
mov
ss
xchg
aad
fwait
sbb
stc
or
leave
xchg
aam
push
popa
adc
sti
xchg
sbb
sub
repz
cltd
dec
add
dec
call
aaa
mov
in
push
popa
dec
add
out
arpl
fidivrl
mov
or
cli
mov
mov
inc
repnz
and
xchg
cmp
insb
bound
repz
cmpsl
add
push
mov
loopne
cmp
dec
fadd
and
inc
fbstp
ret
fidivrl
inc
imul
popf
pop
mov
mov
and
sbb
or
push
adc
mov
mov
push
cmpsb
fldl
or
adc
xor
int
adc
aas
das
push
jp
test
in
lods
mov
mov
out
sbb
xchg
call
lret
sti
jl
xor
std
flds
and
adcl
adc
push
test
test
aas
mov
xchg
cltd
cmp
jmp
xchg
lea
adcl
inc
dec
aaa
sbb
inc
ds
imul
movsl
sar
std
cmp
pop
xorw
stos
push
mov
mov
sti
mov
bound
hlt
dec
xchg
mov
cmc
mov
mov
xor
jne
test
or
into
mov
mov
mov
lea
add
or
les
mov
inc
lahf
insl
jl
jl
adc
cli
add
xor
fwait
in
ss
das
lods
dec
lds
jmp
xchg
or
dec
xchg
int3
push
xchg
adc
mov
stc
xlat
cmp
sbb
xchg
pop
add
mov
cmp
mov
xor
std
jne
int
or
or
and
int3
aad
inc
lcall
leave
rolb
test
repnz
or
bound
ret
mov
mov
mov
inc
loope
xlat
roll
or
adc
mov
inc
lahf
pop
inc
jge
roll
lods
movsb
stos
test
jge
imul
sub
and
cmc
inc
mov
mov
lds
aas
pushf
lds
sarl
test
rol
jle
add
gs
nop
push
sbb
clc
pop
rcr
arpl
leave
cwtl
cli
xor
inc
dec
pusha
add
pop
push
dec
jge
mov
sti
mov
mov
por
fdivrp
sbb
pop
cwtl
add
test
nop
std
das
ds
lods
test
lahf
test
pop
jbe
xor
push
mov
out
mov
jo
arpl
arpl
ja
cmpsl
pop
xchg
or
je
fldenv
push
or
shl
lcall
dec
cmp
rorl
push
fabs
push
jg
push
aam
and
outsb
int3
in
out
pop
or
dec
scas
mov
cmp
scas
xor
inc
ret
loope
mov
add
push
sub
mov
jle
icebp
adc
or
push
cmpsb
mov
jmp
dec
stos
sub
sarb
push
inc
jae
movsl
xor
add
lcall
pop
pop
stc
sub
push
sub
xorl
jg
add
shrl
mov
dec
and
mov
sbb
inc
sbb
fucomi
xor
adc
nop
and
add
stos
mov
and
mov
xor
movsb
and
lods
mov
sbb
outsb
ss
cmp
rcll
mov
jo
aam
in
stos
je
fcompl
cmc
inc
in
mov
xor
jg
cmp
arpl
test
andb
arpl
and
lock
push
or
out
push
xor
inc
pop
mov
cmp
imull
mov
imul
int3
sbb
sub
and
inc
or
pop
sub
out
jmp
push
push
dec
sahf
cmp
test
iret
cmp
outsl
cld
mov
enter
dec
mulb
jmp
adc
popa
cmpsl
lock
jno
jae
jae
mov
das
add
mov
mov
test
push
leave
xlat
dec
cmp
and
sbb
into
jne
dec
jns
imul
dec
pop
adc
adc
stos
sub
xor
js
or
cli
mov
ss
mov
repz
fdivl
imul
shlb
cmpsb
sbb
lcall
dec
sbb
adc
incb
cs
gs
pop
lods
and
or
adc
push
in
jge
dec
ds
jmp
js
or
sbb
fcmovb
gs
mov
xchg
cmp
faddp
add
mov
inc
or
inc
movsb
nop
or
hlt
xor
jb
clc
lret
cmp
jmp
div
enter
fs
sbb
mov
mov
sub
fildl
incb
mov
xchg
pop
stc
mov
inc
shl
sub
pop
or
jns
sub
in
leave
pop
xor
adc
pushf
xchg
and
mov
fsubs
mov
xor
jg
cmp
pushf
jp
jg
jle
imul
bnd
mov
mov
push
gs
sbb
dec
fildll
clc
scas
adc
xor
daa
mov
xor
aad
sahf
jmp
jle
cli
dec
leave
xor
xchg
mov
scas
sbb
adc
repnz
lret
push
lahf
dec
andb
add
popf
xor
cmp
neg
ja
jns
jne
inc
lds
int3
fimuls
stos
ficomps
pushf
xor
sti
shl
stc
popf
rorl
mov
gs
jae
cs
arpl
and
cmp
test
mov
scas
and
lock
add
popf
inc
cmp
loopne
or
mov
adc
lods
cmp
lret
nop
fsubr
jecxz
xchg
fcomp
add
inc
mov
dec
xor
shrl
dec
loope
xchg
movsl
dec
add
outsl
dec
stos
pop
clc
xchg
icebp
and
ljmp
int3
out
clc
and
cmp
mov
mov
xor
out
xchg
cmp
add
mov
in
incl
mov
pop
insl
pushf
ret
sbb
push
mov
lcall
push
cmp
pop
ret
int
loopne
mov
or
shrl
or
push
icebp
mov
pop
out
mov
adc
mov
jmp
push
pushf
popa
jmp
pop
testl
sub
xchg
mov
sbb
shrb
int3
loopne
int
int3
scas
inc
pop
jo
mov
mov
sbb
push
shll
mov
cmp
push
lock
jmp
loopne
rcr
mov
cmp
cli
jno
aas
cmp
out
jne
jecxz
pushf
push
nop
jecxz
int3
xchg
ljmpw
dec
add
and
mov
push
and
inc
cmpsl
xchg
dec
test
imul
mov
push
mov
cmp
xchg
push
ja
int3
lods
jl
push
test
ljmp
push
popf
fisttpl
jae
and
push
jmp
shll
mov
mov
pop
inc
mov
inc
imul
adcl
aas
sti
test
inc
lods
pop
jle
clc
mov
mov
fxch
in
cmpb
inc
lea
lea
xchg
pop
gs
cmpsl
xchg
xor
scas
std
das
dec
mov
cld
nop
push
jmp
add
inc
cmpsl
mov
rcrb
adc
cmc
int3
jg
dec
test
lahf
es
inc
test
aad
and
mov
inc
lahf
dec
test
repz
mov
jecxz
mov
push
adc
fisubrs
sbb
or
jb
dec
mov
cltd
cmp
lret
and
aad
pushf
jl
push
sbb
inc
inc
das
rcll
imul
inc
mov
jo
jmp
jb
cmp
dec
cmpsb
inc
pop
xchg
add
call
decl
pop
ja
lahf
adc
mov
mov
mov
add
into
test
mov
into
dec
cltd
mov
in
xchg
aaa
popf
mov
int3
mov
test
sbb
xlat
push
outsl
test
gs
punpckhwd
dec
pushf
or
sbbb
or
jbe
mov
push
loopne
insb
mov
jno
and
and
insb
pop
scas
outsb
sub
imul
xlat
lret
clc
hlt
push
and
xor
cltd
add
addb
cmp
mov
pop
sub
aaa
push
cmp
mov
jmp
call
xor
fsubrl
lret
sub
ficoml
dec
mov
mov
cmp
pushf
sbb
lods
iret
sbb
sbb
loopne
inc
fdivrs
sub
jecxz
fiadds
pusha
adc
jl
inc
add
mov
lods
rep
gs
mov
add
xchg
pop
mov
jl
sub
jb
lea
rolb
push
dec
mov
pop
fsub
adc
js
addl
sarl
and
sbb
and
fwait
out
mov
pslld
shlb
mov
mov
push
xchg
jnp
cltd
es
mov
das
aam
xchg
pop
jno
lcall
or
cmp
inc
push
xchg
mov
fs
mov
pop
dec
test
or
inc
sub
xchg
ljmp
push
test
dec
pop
pop
inc
xchg
or
sub
push
add
push
fiadds
mov
das
push
test
roll
hlt
test
push
lods
jle
xchg
mov
in
cmpsl
or
leave
jo
sbb
int
jb
testb
cmc
clc
cs
jbe
pop
xchg
mov
inc
push
mov
movsb
and
inc
xchg
jle
mov
out
scas
into
sub
add
push
jp
test
push
push
popa
fnstcw
sub
jl
dec
ds
mov
pusha
add
pop
xchg
sub
pop
and
rcl
into
out
fnstenv
rol
mov
jg
jle
cltd
pop
lea
or
jle
leave
pop
shl
shl
add
xor
xchg
std
xor
pop
lds
lret
sbb
pop
push
enter
sbb
push
js
sub
insb
rcrb
fs
add
add
mov
pop
je
jge
push
adcb
fidivrl
mov
xchg
mov
pop
push
scas
fdivs
xlat
mov
pop
sti
sbb
stos
inc
xor
pusha
scas
stos
ret
fimull
inc
movsb
mov
xor
sarl
lahf
lods
les
inc
lock
popf
dec
rcrb
pusha
mov
add
jmp
cmp
sub
and
push
iret
clc
lret
jns
pop
jge
out
nop
cld
cli
ljmp
xor
xchg
sub
push
cmpb
fcoms
adc
into
xorl
pop
es
stos
add
xor
or
pop
das
sbbb
andb
push
push
in
cmp
sti
push
push
push
push
add
or
ljmp
test
and
orl
test
rcr
adc
and
cmp
xor
shrd
daa
inc
mov
jnp
fwait
popf
sbb
pop
xchg
xchg
xchg
add
dec
cwtl
jge
xchg
lret
adc
es
negl
les
pop
or
lret
lret
dec
jmp
sub
jns
cmp
jecxz
xchg
and
push
popf
cmovbe
loop
ret
popf
dec
mov
test
pop
sbb
lahf
popf
cmp
xchg
dec
jmp
pop
out
cld
movd
shrb
and
add
mov
mov
adc
in
insl
aas
imul
notl
jae
inc
jno
orl
push
lcall
and
pop
jp
or
adc
jo
xor
loope
inc
mov
jae
mov
shr
xchg
add
notl
gs
movsl
ret
sub
mov
adc
sti
lret
jno
xor
inc
stos
mov
test
out
sub
pop
imul
das
aaa
mov
mov
add
repz
cmpsl
les
cmpb
and
add
lods
inc
std
in
or
dec
aad
sbb
or
add
sub
push
push
push
sub
subl
cmp
roll
sub
xchg
popf
lock
scas
pop
sbb
push
fcomi
je
xchg
adc
cli
ret
mov
aad
ss
clc
pop
cmc
sbb
bound
xor
scas
inc
sbb
adc
jbe
or
mov
xchg
jb
xchg
mov
inc
sub
fwait
xchg
add
fsubrs
lahf
adc
mov
xorl
mov
or
jns
or
shll
sub
insl
pop
pop
movsl
lcall
xchg
rcl
sahf
jle
negb
inc
call
loopne
ret
in
rorl
xchg
mov
leave
int3
out
dec
mov
adc
dec
clc
pop
rcrl
out
in
negl
mov
icebp
xchg
or
pop
fdivrp
jmp
mov
jge
ja
jno
mov
shll
and
scas
xchg
pop
popa
push
pop
dec
stc
pop
jbe
jle
inc
ffreep
repnz
sti
lds
jmp
out
bound
mov
jge
movsb
mov
mov
cltd
xchg
dec
enter
jno
mov
add
shr
mov
mov
testb
push
add
and
lret
pusha
push
mov
adc
xchg
pop
push
dec
outsb
and
in
adc
mov
arpl
sbb
decl
xor
mov
adc
pop
scas
test
xchg
rol
mov
cmpsb
inc
xor
insb
push
mov
dec
into
inc
or
xor
xor
adc
test
dec
mov
mov
push
xchg
or
fcmovnbe
fistl
xor
push
lret
or
js
jo
fmull
add
das
test
xchg
roll
imul
pop
xchg
mov
in
and
cltd
aas
inc
and
mov
push
repz
push
lods
jge
xor
cmc
daa
and
push
mov
pop
outsb
mov
and
movsb
jo
mov
sti
xchg
xchg
push
mov
int3
pop
or
xor
insl
repz
bound
call
bound
sub
push
adc
push
sbb
bound
mov
loope
or
sbbl
ja
bound
ret
out
adc
mov
adc
lods
xor
fstpt
fsubl
cmp
fs
and
jbe
and
arpl
push
lods
lret
out
cmpsb
mov
xchg
mov
sbb
lea
divb
xchg
push
mov
mov
sti
xor
adc
cltd
fsts
mov
xchg
stos
in
jo
push
cmp
fwait
clc
push
xorl
mov
mov
dec
lret
fmul
xor
or
mov
add
inc
clc
inc
mov
test
push
mov
cli
sahf
dec
mov
lds
outsb
mov
lds
pop
cmp
cmp
xorl
scas
imul
xor
pusha
mov
rorl
push
xchg
xor
xchg
inc
push
mov
arpl
cmp
inc
cmpb
lcall
int3
cmp
dec
mov
ret
push
cmp
lds
aaa
inc
xchg
jns
add
xor
arpl
jl
push
pop
lahf
sbb
adc
sub
nop
movsb
xor
dec
std
xlat
insl
stos
leave
inc
inc
loop
std
sbb
cmp
xor
addl
sahf
lods
sti
outsl
ret
inc
jp
inc
push
int
mov
xorl
push
in
call
outsb
lds
dec
ret
xor
call
jae
shlb
or
pop
out
xor
lahf
mov
sbb
mov
mov
das
sbb
shlb
aad
mov
dec
call
lcall
mov
mov
mov
jns
push
xchg
push
popf
arpl
scas
inc
dec
aad
xor
mov
mov
pop
cmp
lea
loop
pop
and
ss
or
std
or
stc
xchg
aas
mov
sbb
pop
add
mov
push
pop
push
repnz
scas
cmp
push
xchg
xlat
push
mov
inc
pop
dec
das
roll
mov
jo
mulb
ljmp
dec
add
jg
testl
cmp
jle
cmpsb
adcb
js
jo
popf
dec
jns
cwtl
movsb
dec
dec
sbb
fwait
push
mov
lea
int
push
movsl
mov
or
std
dec
idivb
cwtl
loope
out
mov
jge
sahf
ret
movsl
cmpb
aaa
sti
in
aad
out
cs
sub
dec
push
push
inc
dec
bts
sub
inc
fildl
cmp
xchg
mov
or
cmp
push
and
pushf
mov
lret
xchg
sbbl
pop
cld
sbb
inc
jns
pop
das
sub
push
testb
mov
test
loope
push
add
inc
pop
add
repz
outsb
call
sbb
mov
jnp
out
mov
imul
sbb
inc
fists
sub
into
dec
in
notb
pop
mov
gs
bound
jg
iret
mov
pop
orb
test
cmc
aam
sbb
das
pop
filds
lcall
sbb
add
lock
iret
cwtl
mov
push
add
jbe
ja
xchg
adc
cmp
and
pop
push
adc
jmp
push
cld
aad
xchg
and
mov
dec
filds
icebp
xchg
out
and
push
aas
add
negl
adc
cmpsl
or
mov
mov
inc
inc
aad
add
jnp
cmp
push
mov
stos
pop
fstpl
xchg
insl
pop
cmp
sbbb
or
cmp
cs
xchg
xlat
adc
outsl
pop
sahf
push
push
and
mov
cwtl
add
push
cltd
shrl
out
mov
adc
dec
cmp
xchg
add
jg
rorb
pop
loopne
fmul
mov
jmp
xor
cmp
movsb
out
aas
jge
cltd
mov
int
push
mov
rcr
lret
das
out
push
imul
js
sub
cmp
mov
rcll
push
mov
insb
popf
jnp
inc
push
pushf
and
pop
xor
mov
xor
stos
jb
mov
push
sbb
inc
inc
imul
mov
clc
cmp
sbb
movsb
lock
mov
sbb
mov
clc
sbb
in
pop
in
mov
stos
jnp
push
imull
test
mov
lea
js
lahf
dec
jle
rol
dec
gs
loopne
mov
pop
sbb
ret
push
sti
rclb
cltd
cmp
mov
popa
xchg
cli
sbb
jb
sub
add
mov
xor
ror
stos
insb
xor
ljmp
repz
push
popf
pop
ds
in
repz
jmp
and
shll
into
xchg
bswap
or
test
sbbb
test
frstor
ret
dec
clc
push
idivl
inc
dec
aaa
fdivrl
add
jo
addr16
sbb
les
stos
and
fadds
sbb
shlb
push
mov
adc
cmp
dec
xor
mov
adc
adc
xchg
xchg
push
mov
jmp
sbbb
shlb
sar
je
xchg
push
out
xchg
in
gs
jno
scas
out
lds
mov
push
sbb
mov
imul
js
jno
and
cmpsb
sbb
sub
adc
xchg
adc
inc
mov
xchg
repz
mov
jmp
pop
loopne
sahf
inc
add
shr
mov
and
cmpsl
sub
push
bound
leave
pop
add
in
enter
cs
fdivr
sbb
iret
shlb
adc
mov
or
cwtl
xchg
scas
and
fs
fs
and
fnstenv
ficompl
test
lret
shlb
sti
popa
sti
push
inc
pop
push
adc
pop
mov
lahf
test
repnz
sbb
stos
test
sub
stos
pop
jecxz
imul
jno
mov
sub
mov
clc
repz
dec
jnp
and
mov
cmp
in
sub
ficoms
mov
scas
mov
jnp
lcall
jmp
mov
sbb
insl
mov
push
fstpl
bound
inc
rcrl
jg
lock
push
or
arpl
adc
inc
scas
xchg
ret
fwait
lret
scas
xchg
push
punpcklbw
js
cmp
repnz
sbb
lret
dec
sbb
addr16
and
sub
rol
arpl
fwait
push
push
mov
or
add
dec
jae
jl
push
dec
movsl
mov
xlat
call
and
push
xchg
cmpsb
pop
mov
pop
nop
sbb
xchg
cwtl
hlt
pop
loop
cmpsl
ja
fs
jl
enter
mov
mov
or
lcall
movsl
push
pop
divb
fsubl
aaa
fidivrs
push
setno
mov
inc
aas
inc
nop
sub
sti
cmpsb
cli
push
mov
lods
jnp
push
out
fstl
mov
stos
hlt
mov
aad
and
fldenv
sarl
daa
sbb
xorb
mov
lcall
sbb
mov
fdivrs
fstl
icebp
imul
pop
cmpsl
jg
jbe
jno
call
xor
movsb
notl
xchg
mov
jns
pop
mov
sub
bound
xchg
repz
pop
mov
fistpl
sbb
out
xor
sbb
push
push
mov
fnsave
movsw
stos
inc
ficomps
inc
cmpsb
arpl
or
xor
or
shl
push
add
enter
mov
andb
repz
into
xchg
sbb
movsb
lret
insb
or
sti
lcall
sahf
push
roll
adc
sub
and
insb
push
mov
lret
xchg
and
adc
int
adcl
mov
and
and
lods
push
dec
int3
lds
xor
xchg
and
sub
mov
pop
sub
dec
xchg
inc
aaa
jp
loop
inc
movsb
cld
fistpl
aas
xchg
inc
or
add
sbb
vpmacsdd
cmc
dec
xchg
mull
scas
mov
test
add
lahf
sbb
sbb
sub
or
fimull
lds
push
jb
repz
jp
daa
xchg
and
pop
sarb
testl
or
bound
adc
dec
ljmp
popa
and
hlt
out
add
pushl
stos
sbb
mov
test
xchg
mov
mov
inc
jne
sbb
ror
insl
mov
lret
mov
clc
xchg
jle
lock
jbe
stc
mov
iret
arpl
adc
rcll
jb
sahf
rcl
popa
and
rcr
push
add
aam
lods
negb
rcrl
dec
xor
push
mov
dec
int
mov
movsl
daa
out
dec
dec
loop
imul
jno
xchg
mov
in
pop
decb
and
push
push
adc
jb
bound
sbb
aas
push
jge
pop
pop
mov
out
xchg
mov
sti
jnp
inc
loope
lcall
rorl
mov
and
mov
rclb
mov
sub
push
adc
pop
or
adc
fwait
aam
scas
and
pop
imul
sbb
je
pop
xchg
mov
stc
adc
call
call
movsb
pop
rcr
imul
inc
xchg
int
movsb
aas
cmpsb
test
jo
in
fisttps
push
cltd
int3
loopne
jne
mov
add
mov
ljmp
sbbl
ret
lret
and
inc
shrb
scas
xchg
sbb
popa
jb
addr16
xor
ret
and
sub
sti
lahf
push
push
push
adc
nop
pop
push
rol
movsb
lds
push
xchg
adc
js
movntq
es
jge
jo
insb
daa
lret
xor
repz
xorl
aam
or
dec
shlb
arpl
aaa
inc
stos
sahf
or
in
dec
cmc
rcrb
cmp
pop
int
fdivs
test
int3
push
popa
and
or
xchg
fdivrs
or
mov
push
mov
icebp
ljmp
lds
sub
and
stc
xchg
test
sub
and
fsub
test
lods
mov
jp
push
pop
rorb
test
icebp
daa
popf
push
mov
insl
out
lahf
aas
icebp
jo
or
mov
imul
lea
mov
popl
cli
push
jp
ret
ficoml
repnz
or
mov
filds
mov
notb
dec
push
jg
pop
dec
mov
mov
mov
sbb
mov
popa
lret
sub
loopne
dec
in
lods
cmpsl
loope
stos
aad
sbb
inc
xchg
cmpsb
jecxz
xor
mov
idivb
mov
adc
xor
mov
cmp
push
sahf
adc
add
into
add
das
jge
xchg
push
xchg
and
jo
aam
mov
xor
jnp
inc
push
lahf
jb
mov
jecxz
or
mov
lods
insb
push
adc
es
gs
or
pop
or
clc
scas
jne
test
bound
dec
imull
cmc
fildll
cmp
pop
dec
jno
cli
into
xchg
mov
jecxz
aam
mov
outsb
cmp
popa
sahf
je
leave
cmp
mov
jl
mov
clc
sub
dec
add
mov
lret
jge
shl
rcrl
xchg
xchg
jmp
and
inc
lret
mov
sbb
les
jne
or
hlt
sti
lahf
aaa
ja
sahf
jne
add
aaa
mov
call
xlat
sbbl
sbb
cmc
inc
fisubrl
test
test
into
lahf
jnp
subb
jge
jmp
pusha
addr16
cmp
jne
and
stc
and
lcall
aaa
or
jecxz
mov
mov
pop
lods
shrb
push
mov
sub
xchg
pop
pop
hlt
daa
or
ret
cld
loop
mov
ja
in
sub
in
and
aaa
cltd
enter
out
sbb
sub
shrb
add
sbb
das
lods
adc
iret
shl
add
dec
pop
xchg
xchg
cltd
fld
and
outsl
and
pop
mov
lods
fwait
in
fwait
pop
dec
jmp
lds
clc
push
xchg
sti
lret
or
out
dec
inc
fwait
stc
cmpsb
dec
nopl
pop
orb
insl
jg
push
stos
jne
jbe
sbb
fstl
xchg
cmpsl
mov
cmp
stc
push
push
and
add
jge
gs
cmpsl
mov
adc
mov
fwait
mov
outsl
adc
add
inc
or
mov
sub
xchg
int3
inc
ja
out
std
mov
and
pop
fwait
jg
or
pop
dec
inc
fsubrs
push
sbb
iret
dec
fstpt
pop
cltd
push
in
mov
add
addr16
fildl
adc
aad
or
clc
cmp
addr16
inc
adc
shll
rcl
fstp
mov
add
shll
cmp
mov
lcall
cmc
scas
rcrb
xchg
and
xor
and
sti
test
mov
push
call
ljmp
dec
jae
pop
or
pop
std
add
movw
jb
outsl
and
movsb
mov
xchg
fs
dec
mov
ja
es
xchg
je
nop
add
pop
fidivs
popa
lds
jmp
repz
outsb
mov
outsl
sbb
mov
in
push
jno
pop
mov
and
xchg
out
jbe
add
adc
sbb
jmp
sub
xchg
mov
in
loopne
bswap
aaa
ret
test
jae
sub
mov
inc
cld
add
mov
ds
rcrb
pop
mov
mov
and
ja
pop
notl
pop
jo
pop
mov
stos
and
dec
lock
clc
inc
leave
pop
xchg
sbb
adc
fildl
xor
scas
arpl
add
cltd
pop
ret
jge
cmpb
jle
inc
dec
mov
xchg
jecxz
mov
stos
fstpl
or
pop
insb
xor
or
std
mov
xchg
pop
mov
mov
xor
outsl
inc
test
in
in
iret
jnp
insl
adc
and
mov
shll
sbb
bound
push
and
add
movsb
mov
lds
jmp
rcrb
jb
fldcw
pop
pop
xor
mov
mov
inc
into
cli
leave
fsubrs
push
test
mov
out
xchg
sub
ljmp
sbb
push
fsubp
out
fidivl
lcall
mov
xchg
fbld
jnp
add
adc
sub
cmp
insb
mov
lret
jno
bound
imul
cmp
lea
push
sti
and
inc
leave
jge
xchg
sub
xchg
and
inc
pop
or
and
jecxz
pop
mov
pushf
xor
sub
lds
iret
mov
jae
lret
push
or
inc
insl
mov
rclb
arpl
inc
mov
mov
in
cmp
xor
xor
mov
adc
out
loop
div
dec
aas
dec
xor
mov
popa
fwait
stc
lcall
xor
cld
mov
mov
or
xchg
push
pop
sbb
cwtl
dec
cmpsb
sub
push
outsl
fisttpll
sbb
push
dec
pop
jbe
pop
jae
mov
pop
clc
pushf
pop
addr16
ret
mov
add
dec
push
popa
xchg
sub
dec
mov
cld
add
sar
adc
enter
and
cmp
dec
mov
test
mov
push
call
pop
dec
pop
mov
xchg
js
lods
mov
pop
sbb
dec
cltd
mov
cli
mov
mov
daa
fcomi
popa
movl
negb
or
mov
aas
jecxz
fisubs
push
outsb
loop
js
and
cmp
pop
add
inc
pop
hlt
adc
movsb
adc
stos
fcoms
mov
dec
test
popa
mov
lcall
xchg
mov
pusha
popa
std
jmp
mov
sub
cld
xor
stc
push
sub
leave
mov
lds
inc
aaa
xor
sarb
pop
and
xor
cmpsb
insl
out
cmpsb
loop
outsb
inc
sbbl
jl
fbstp
xchg
sub
das
xor
and
inc
pop
mov
outsb
jns
into
mov
push
roll
jnp
aam
dec
repz
das
jl
and
loope
decb
sub
andb
inc
int3
inc
test
jnp
and
xor
cmp
lods
stos
fildll
push
icebp
fildl
mov
das
pop
cli
icebp
cmp
sub
inc
jae
dec
mov
dec
push
les
and
movsl
xchg
loope
push
cmp
les
mov
jno
add
out
or
loope
aam
stos
fnstenv
adc
fwait
imul
mov
dec
xchg
in
mov
les
or
sahf
sub
sahf
pushf
mov
das
push
inc
psllw
mov
jne
lret
mov
lret
push
sub
mov
cli
stc
jge
sti
call
fildl
mov
lahf
cmp
dec
pop
icebp
clc
xchg
gs
jo
scas
pop
je
jo
xor
cmpsl
loopne
inc
mov
ret
mov
subl
mov
lahf
mov
enter
lea
cmp
das
inc
mov
pop
pop
xor
or
and
outsb
push
neg
ficoml
push
addb
mov
test
inc
emms
addr16
ret
loope
stos
inc
xchg
add
push
cltd
test
cs
outsb
aaa
or
xor
ljmp
bound
test
loop
addb
imul
shl
jb
enter
jecxz
arpl
lret
ret
xlat
adc
imul
cmp
jp
jmp
sbb
xor
push
leave
mov
popa
fsubr
push
dec
outsb
fs
js
jmp
jmp
sti
mov
stos
clc
adc
cmpsb
repz
fmul
imul
sbb
pusha
fldt
fadds
inc
and
std
mov
and
add
push
sub
lock
cmp
xchg
flds
sbb
xor
jle
popf
xchg
or
daa
mov
int3
ret
aas
sub
hlt
rcrb
jg
xlat
lods
in
or
hlt
mov
sti
mov
cs
movsl
push
call
and
fcompl
push
aad
je
jne
or
sub
jb
pop
outsl
mov
test
adc
call
imul
cmp
bnd
inc
lahf
inc
loop
fsts
imul
sub
cwtl
adc
pop
xor
ja
jnp
daa
mov
lret
dec
cmpsl
icebp
add
mov
iret
xor
aam
arpl
lock
ret
dec
dec
lret
and
enter
push
mov
push
adc
jl
neg
mov
test
loopne
rolb
sub
add
cmpb
pop
or
push
fwait
and
sub
push
iret
xor
push
jl
xor
jno
or
or
pop
pop
sub
mov
insb
out
xchg
pop
pop
ss
mov
inc
cld
repz
xor
cmp
jbe
std
jns
mov
sbb
aaa
scas
out
insl
idivl
jle
jmp
mov
mov
imul
xorb
sub
hlt
in
sbb
enter
outsl
cld
xor
mov
ret
fs
xchg
std
xor
add
push
lock
pusha
ljmp
dec
orb
lods
in
or
cmpsb
pop
mov
jbe
mov
jo
pop
xchg
gs
out
xor
pop
dec
add
xor
shlb
add
nop
add
dec
add
fistl
test
in
ja
adc
mov
test
stc
lds
xor
int
adc
push
mov
sbb
or
or
mov
or
hlt
push
pop
mov
sahf
mov
push
arpl
int3
lcall
sahf
pop
push
mov
mov
and
push
add
data16
mov
pop
pop
ret
js
xor
popa
bound
add
xor
int
mov
sub
ss
mov
iret
mov
jp
loope
mov
lahf
in
iret
inc
cmpl
imul
int
push
and
addl
mov
sub
xchg
nop
adc
or
fisttpl
pop
ja
fcmovbe
dec
inc
sub
cmp
jmp
mov
jns
jnp
inc
shrb
lods
dec
xor
pop
cwtl
test
jmp
stos
les
lods
jmp
leave
lods
mov
inc
sarl
add
into
mov
sbb
and
xor
inc
rcrb
insb
cmp
std
or
adc
jle
sub
pop
sbb
inc
xchg
dec
js
lahf
xor
test
jne
cmpsl
and
data16
mov
inc
lds
push
xor
sub
fwait
xchg
cwtl
jns
ret
into
mov
in
mov
insb
aaa
mov
inc
push
sub
push
fmuls
testb
pop
jno
addb
scas
inc
fcmovnbe
inc
ret
pop
mov
lcall
imul
jmp
xchg
mov
jmp
or
sahf
adc
aad
and
lea
shrl
dec
cwtl
jecxz
jb
add
adc
repnz
pusha
call
mov
mov
adc
cmp
xor
daa
push
scas
xchg
pushf
push
clc
lods
movsl
cmc
sbbb
outsb
cmp
inc
adc
lea
and
and
pop
aad
cmp
push
lds
pop
push
add
clc
arpl
nop
pop
out
es
sub
mov
cmp
int
mov
call
xor
shl
push
shll
push
es
out
sbb
mov
add
xor
jb
or
dec
cmp
mov
mov
cmp
jnp
int
ret
add
and
mov
repnz
mov
ret
pop
adc
mov
sbb
js
adc
jns
loop
icebp
test
int3
repnz
aas
xchg
jl
in
imul
dec
out
out
pushf
pop
fdivs
adcl
push
sarb
mov
and
iret
mov
in
lahf
pop
call
mov
sub
pop
loop
add
pop
xchg
cwtl
inc
sub
pushf
int
test
mov
mov
push
into
cwtl
push
notl
dec
pop
or
daa
inc
ret
test
cmp
mov
adcl
mov
lret
fnstcw
xchg
incl
cltd
es
lods
les
int3
push
sub
aad
ret
push
sub
idiv
jge
mov
lss
sbb
sub
repnz
push
lds
into
lock
add
ret
cmc
pop
mov
pop
jmp
fwait
dec
push
cmpsb
jle
jle
in
push
inc
popa
fwait
sbb
daa
xor
mov
negl
iret
arpl
mov
je
cmp
leave
imul
mov
mov
sbb
or
into
xchg
and
and
mov
inc
add
pop
dec
loop
ret
or
jbe
or
fcomp
addr16
pop
fdiv
pop
inc
add
adc
cmp
cmpsl
inc
divl
fwait
int3
loope
add
cmp
inc
push
adc
mov
push
sarb
sbb
adc
sti
mov
das
xor
daa
mov
xchg
sub
sbb
mov
xor
dec
ds
jg
outsl
sub
xchg
cld
das
sub
xchg
dec
ds
mov
cmp
cmpsb
mov
js
cmpsb
orb
adc
dec
or
int
pop
daa
mov
imul
inc
outsl
adcb
jns
jb
jle
subl
push
arpl
mov
lods
sub
jno
inc
mov
dec
shll
cs
mov
fisttps
hlt
cwtl
lret
mov
iret
and
jmp
lds
packssdw
adc
ret
adc
xchg
jnp
inc
or
jae
pop
bound
jle
stos
jae
add
jno
inc
insl
push
enter
fwait
punpckldq
data16
adc
pop
or
daa
cmp
add
pop
lret
add
push
xor
xor
sub
fcoms
inc
cmp
mov
test
adc
adc
pop
dec
ljmp
mov
mov
lcall
gs
jae
xchg
inc
mov
mov
pop
and
inc
sub
popf
outsl
mov
lds
inc
fsubs
repz
sub
sbb
or
cmc
cmp
dec
add
mov
ja
xchg
pop
mov
xor
cmpsb
lret
out
stos
xchg
das
or
aaa
mull
pop
xor
leave
dec
or
hlt
cmc
test
in
scas
outsl
rcrl
add
cmp
addr16
cmp
insb
faddl
mov
mov
insb
mov
mov
repnz
daa
cmp
and
roll
add
xchg
sub
sbb
pop
in
pusha
xor
fcompl
mov
or
mov
pop
test
out
mov
in
jmp
fwait
outsb
jp
out
jnp
in
cmp
xchg
mov
stos
mov
stos
mov
insl
out
inc
and
xcrypt-ctr
cmpsl
lahf
dec
scas
jo
sbb
mov
in
and
pop
jmp
add
push
lcall
dec
lock
mov
in
pop
and
in
aad
rcll
add
je
inc
mov
and
jae
pop
lcall
int3
cmp
les
insl
in
lahf
adc
divb
xlat
mov
pop
cmc
decb
dec
push
rolb
pop
inc
adc
fcompl
xor
adc
inc
scas
cli
shll
and
dec
pop
hlt
cmp
adc
repnz
xorl
inc
arpl
das
stc
repnz
leave
fnstenv
xchg
or
mov
jmp
mov
pop
fldcw
int3
xchg
add
mov
pop
and
jmp
enter
mov
jle
fisttps
xchg
sbb
inc
or
arpl
push
dec
add
insb
sub
xor
mov
jne
enter
dec
fdiv
adc
int
pop
jecxz
and
hlt
clc
ds
push
xchg
dec
xchg
mov
scas
in
pop
jbe
iret
loop
daa
push
push
rcrb
cwtl
sti
add
inc
rclb
movb
outsb
mov
sub
cmc
lret
sbbl
sbb
shrb
bound
gs
popf
mov
sbb
out
xchg
test
mov
push
fisttpll
out
pop
int3
add
fadds
mov
sar
or
mov
mov
inc
xchg
repz
sarl
sbb
sarb
mov
call
dec
les
lcall
fiadds
int
lock
mov
icebp
hlt
scas
mov
push
popf
adc
vshufps
into
mov
adc
jns
insl
sub
lahf
jecxz
movsl
aad
sub
inc
add
cmp
add
inc
or
sbb
pop
sahf
mov
dec
test
pop
clc
mov
jo
sbb
sbb
or
sbb
int
xchg
jecxz
mov
int
xor
sbb
out
dec
movsl
adc
rcrb
je
leave
in
sub
push
mov
jg
mov
inc
sub
push
js
sbb
fdivrs
jge
jo
std
push
cltd
mov
nop
ljmp
aam
fwait
push
add
rcll
mov
xchg
sbb
fs
imul
jo
in
test
push
inc
or
push
fstl
inc
pinsrw
xor
xchg
sbb
mov
out
daa
out
mov
inc
ja
mov
outsl
adc
test
mov
into
ss
dec
cmp
push
es
lea
add
inc
mov
out
leave
mov
insl
pusha
push
inc
fsubr
cltd
frstor
test
pop
xchg
aaa
xor
adcl
loop
es
inc
outsl
add
rcrb
mov
cmpsl
push
xchg
cs
push
xor
mov
stos
roll
mov
cmp
lea
push
vpsrad
scas
xor
lret
adc
jne
xor
repz
cmpsb
iret
mov
aas
fnstsw
cmp
mov
sub
jne
repnz
mov
pushf
std
push
xor
jbe
fs
mov
loopne
stos
xor
ret
or
out
test
inc
clc
stc
movsl
out
shlb
bound
cmpb
test
fidivrl
popf
xchg
add
jg
pop
cmp
push
mov
push
xchg
stos
daa
push
xchg
sti
outsb
cmp
or
shll
pop
xor
ror
add
js
call
shll
or
xlat
jp
and
adc
jge
xor
cmp
and
clc
pusha
pusha
adc
shl
pusha
movsl
sub
push
out
cld
xor
xchg
fildll
mov
sarb
pop
mov
xor
lahf
subl
mov
inc
aam
jg
mov
xchg
sbb
inc
lcall
rolb
add
lret
popf
add
sub
cmp
popf
loope
out
xchg
out
dec
inc
aam
lret
sub
nop
dec
mov
jp
rcrb
shll
aaa
ror
ss
inc
icebp
and
xchg
add
fildl
sbb
dec
andl
and
adc
pop
xchg
pop
mov
or
mov
mov
lret
shlb
arpl
call
xor
sbb
movsb
repz
push
popf
xlat
inc
push
aad
push
cmp
dec
in
dec
mov
lock
cmp
clc
xor
mov
pop
sub
xor
mov
push
fistps
mov
push
test
xorb
inc
dec
mov
out
pop
xchg
ljmp
mov
int
testb
mov
jg
mov
push
aas
jns
outsl
imul
xchg
pop
sbb
inc
je
cs
xchg
sub
jmp
dec
cmpsb
ss
mov
cld
jae
and
and
adc
sub
adc
repnz
mov
sub
out
xchg
inc
insb
sti
cmp
mov
insl
sbb
test
push
push
int3
cmp
cltd
outsl
shlb
ret
jl
pop
mov
cltd
jnp
addb
test
sub
pop
jo
pop
test
mov
shlb
pop
loopne
jb
fwait
or
inc
inc
add
push
rorl
and
and
mov
mov
sub
adc
scas
sub
cmpsb
outsb
inc
cmp
dec
xor
cmp
fsub
cmc
aad
jnp
lods
jmp
inc
mov
shrl
jmp
ret
rclb
andl
out
adc
fsts
jl
inc
sub
mov
shl
pop
and
push
mov
sbb
out
arpl
arpl
out
push
dec
sti
mov
mov
cs
stos
or
and
cmp
mov
xor
xchg
rcrb
js
mov
push
jg
add
mov
sub
ds
out
mov
cwtl
cmp
mov
icebp
add
lcall
testl
adc
insb
mov
push
lock
jmp
and
mov
into
mov
fcmovnu
xchg
push
fcmovne
jmp
push
sbb
adc
sbbb
mov
dec
add
push
repnz
add
fs
repz
mov
fsubr
cmp
jb
mov
cmpsb
dec
and
int3
xor
jmp
xchg
xorl
imul
jle
dec
lds
xchg
dec
aaa
pop
std
loope
roll
movsb
in
mov
mov
and
inc
ljmp
and
pop
and
enter
sub
or
sahf
movsl
scas
xchg
lahf
adc
xchg
adc
fdivrs
flds
lcall
out
out
add
adc
jg
mov
enter
pop
fsubrl
pop
sbb
movsb
lods
fsubl
lcall
xchg
clc
mov
add
in
ret
dec
xchg
adc
rcrl
sbb
push
mov
cmp
push
add
subl
mov
or
sbbl
stc
xchg
cmpsl
rep
cwtl
lahf
mov
mov
or
in
xor
loop
lret
mov
pop
out
sbb
jo
int
cs
push
jne
lock
push
gs
inc
jns
jns
inc
dec
int3
cli
movd
xor
outsl
fsubl
std
into
pop
pop
xor
sti
dec
push
inc
test
mov
lcall
lahf
imul
sub
or
std
push
mov
lahf
pop
in
sahf
xor
movsl
xor
push
sahf
inc
and
xchg
lds
inc
cltd
enter
mull
pop
testb
shlb
mov
std
fisttps
cmp
icebp
loopne
sbb
data16
cld
sbb
mov
in
ja
push
dec
mov
inc
push
pop
jl
repnz
fbld
shlb
jg
jb
and
bound
ret
xor
inc
daa
lods
sbb
push
sbb
mov
in
scas
and
mov
imul
cmp
sub
pop
clc
inc
or
or
mov
fdivr
inc
jbe
das
xlat
push
hlt
inc
mov
mov
cld
mov
and
les
in
and
and
mov
add
mov
dec
xchg
lods
inc
ss
adc
adc
imul
in
mov
xor
jp
adc
jg
push
dec
mov
add
push
pop
xor
lahf
or
jg
xchg
hlt
fwait
mov
pop
mov
dec
stos
jb
cmpsl
repnz
jl
loope
mov
mov
mov
inc
arpl
xchg
sbb
shl
aas
xchg
pop
mov
sbb
ret
sub
out
addr16
insl
sub
cli
cmp
jg
pusha
xchg
mov
jmp
inc
mov
pop
xchg
pop
movsb
sub
flds
sbb
popf
inc
push
mull
out
mov
movsb
lock
rcrl
cmpb
sub
xchg
pop
arpl
adc
out
xor
gs
imulb
inc
push
divb
sub
pusha
jb
jge
negb
lcall
dec
fmull
sarb
cmp
pop
frstor
sub
jecxz
dec
or
cmp
inc
sbb
shlb
repz
push
xor
add
test
mov
xchg
sbb
cmp
imulb
movsb
xchg
jle
rcl
pop
and
adc
inc
pop
jae
push
mov
clc
cmpsb
push
sbb
or
sbb
inc
nop
shr
sbb
jle
les
inc
inc
popf
loopne
push
ret
stc
add
and
push
test
lods
xor
sahf
adc
pop
scas
es
mov
aam
or
test
rorl
fadd
pop
xorl
dec
sbb
adc
int
push
nop
shll
and
xor
jge
sub
out
int
mov
std
cmp
push
push
subb
nop
xor
xchg
imul
das
xchg
lcall
jecxz
mov
pop
out
xchg
pop
push
mov
sti
gs
lret
int
nop
pop
add
dec
adc
pop
sbb
push
dec
scas
mov
dec
dec
dec
aad
mov
or
cmpsl
data16
es
xchg
lock
aad
imul
test
pusha
addb
loop
mov
cmpsl
mov
xchg
ss
arpl
push
xchg
push
int
mov
ret
jl
in
pop
imul
ds
in
xchg
fcoml
mov
mov
pop
pop
test
dec
jns
sub
insl
idivl
nop
jae
jecxz
xchg
xor
cmpsl
mov
sarl
fstp
insb
aam
into
xchg
cli
imul
mov
pop
lret
xor
lds
xchg
mov
mov
in
fcoms
cltd
ljmp
dec
roll
mov
stos
sbb
sbb
mov
add
pop
add
fstps
ljmp
inc
ja
sub
in
cmpsb
or
mov
cltd
adc
scas
inc
adc
jge
out
sahf
mov
push
mov
loope
sub
insb
push
leave
push
cmpsl
subb
bound
hlt
fisubs
push
jge
pop
jo
pop
out
push
daa
sbb
sarb
scas
aam
js
mov
mov
movsl
imul
test
ljmp
pop
out
sub
sbb
insb
out
es
aam
imul
mov
mov
dec
adcl
sbb
cmp
add
pop
test
imul
adc
sbb
push
cmp
ja
inc
jge
fwait
xor
jns
lret
andb
sub
movsb
pop
cmp
inc
scas
lods
xchg
add
sub
aaa
ja
mov
xor
testl
pushf
dec
cmc
fbld
loopne
lret
xor
enter
repnz
dec
mov
loope
mov
fstpt
gs
push
dec
push
cmp
lock
out
sub
dec
push
out
push
push
push
sub
lods
add
pop
cltd
mov
repz
jbe
cwtl
dec
sbb
stc
sub
mov
nop
lds
add
push
xchg
push
inc
popa
pop
xorl
mov
xchg
push
inc
jo
push
in
out
mov
lahf
stos
test
sti
ja
addb
jmp
shl
and
push
outsb
in
mov
fs
adc
dec
add
xorb
roll
loope
cmp
lret
xor
mov
sub
jle
inc
insb
jbe
mov
or
icebp
stc
in
mov
or
sbb
je
dec
insl
or
pop
dec
dec
imul
test
push
data16
lahf
ss
nop
das
add
push
sbb
or
ds
add
andb
jp
call
js
movsl
jns
mov
cwtl
add
inc
inc
push
add
xor
cmc
loope
pop
push
or
stc
mov
push
gs
mov
cmc
outsl
mov
dec
mov
dec
stos
mov
pushf
lods
push
jnp
pusha
lahf
inc
mov
cmp
sbb
push
outsb
test
xchg
cmp
aaa
add
adc
mov
mov
jp
pop
jl
xchg
out
push
add
sbb
cmp
pusha
mov
aaa
or
cld
pop
fdivrl
sbb
imul
fs
mov
cmpsb
cmpsb
inc
adc
pop
mov
mov
jns
outsb
ffreep
cld
add
repz
jnp
dec
outsb
int3
gs
jle
push
pop
cmp
inc
les
ret
rcrl
pop
movsb
adc
xor
popl
bound
xchg
sbb
cmp
lock
adc
jmp
push
mov
xchg
cs
notb
sub
adc
shll
je
sub
out
dec
jnp
pop
lahf
and
adc
aaa
or
aas
pop
and
sbbb
or
aas
std
sub
xchg
and
push
or
fcomi
subl
imul
push
xchg
mov
ja
dec
test
adc
stos
push
or
popf
ret
or
fwait
scas
dec
lret
or
dec
aaa
sbb
push
xor
push
push
mov
and
push
jno
and
insl
inc
mov
mov
pop
shll
mov
out
dec
pcmpgtd
lcall
icebp
bnd
dec
ds
outsl
jbe
cmp
add
lahf
and
sbb
hlt
enter
push
aam
xor
add
add
lret
outsb
loope
xlat
das
pushf
shll
ret
mov
std
data16
mov
pop
stos
jle
test
addr16
xchg
pop
jae
ja
fs
dec
inc
lcall
cwtl
mov
inc
mov
mov
imul
adc
mov
sbb
lods
xchg
fildll
outsl
mov
sbb
enter
in
sbb
clc
add
stos
out
adc
xor
adc
sub
cmp
ss
mov
adc
push
or
dec
mov
xchg
gs
clc
mov
push
jns
or
lahf
loop
aas
dec
mov
inc
cmp
mov
repz
mov
or
pop
aam
cmp
nop
mov
push
push
mov
popf
dec
push
leave
sbb
jl
pop
mov
test
ljmp
out
sub
jmp
xchg
jbe
or
xchg
xchg
mov
mov
cltd
jge
cmp
pushl
dec
mov
iret
fscale
rcrl
jg
jae
adc
les
shll
inc
nop
inc
add
or
cmp
stc
sbb
add
aas
jg
aaa
xor
sbb
pop
subb
loopne
mov
or
and
or
push
fldcw
jmp
out
icebp
pushf
test
je
test
lret
push
hlt
jecxz
mov
fadds
popf
lahf
es
dec
pop
cmp
int
sub
pop
xor
pop
in
pushl
es
mov
daa
sahf
pop
add
iret
mov
ja
test
clc
add
xchg
pop
pop
lods
sti
popl
in
es
push
inc
mov
add
call
lret
push
or
mov
rcrb
fdivr
dec
dec
lahf
stos
fwait
jae
push
out
lret
sti
sub
xchg
ds
daa
pop
add
js
pop
stos
sbb
push
adc
imul
xchg
testl
sbb
fs
sti
stc
icebp
mov
add
sub
stc
dec
jae
push
push
mov
incl
lea
loopne
add
xor
imul
adc
or
aam
mov
mov
fsubrl
fmuls
adc
adc
add
call
mov
std
push
and
xor
jge
fimuls
add
push
das
dec
mov
sub
js
cwtl
sti
in
add
xorl
dec
jnp
inc
rolb
fldl
xchg
dec
ror
fnsave
jg
out
pop
das
mov
sar
push
lea
push
mov
mov
out
test
pop
sbb
push
dec
push
cmpsl
fdivl
aam
jnp
xchg
mov
daa
xor
sbb
notl
xchg
adc
test
cmc
push
xor
inc
in
stos
jecxz
adc
mov
fbld
nop
lret
inc
ss
or
push
int3
pop
push
lods
xchg
mov
mov
dec
xchg
inc
dec
push
sbb
cmp
mov
dec
inc
aas
movsl
subl
js
in
or
push
sub
sbb
loopne
and
mov
fs
icebp
pop
sbb
insb
and
loop
mov
int3
cmp
mov
sahf
inc
dec
call
test
mov
mov
dec
mov
and
dec
rcr
repnz
add
test
cmc
mov
scas
pop
mov
and
mov
lea
sub
xchg
add
add
mov
gs
inc
fsubrs
cmpsb
pop
dec
iret
fdivl
arpl
xor
or
pop
mov
pop
imul
xchg
repz
dec
xchg
in
ud0
test
push
stc
into
cmp
push
cmc
mov
pop
fidivs
fisttpll
mov
lods
cli
xor
or
rcll
or
dec
mov
in
mov
out
inc
inc
sub
cmpsb
fldl
push
adc
das
enter
aad
das
mov
sub
cmc
xchg
cmp
test
lods
xchg
movsb
dec
loopne
xlat
test
out
enter
adc
xor
aam
pop
int3
or
cld
lea
xor
dec
adc
sbb
mov
fisttpll
hlt
xchg
jge
lea
adcl
mov
fsub
loop
pushf
popa
icebp
sub
jno
ljmp
aad
mov
sbb
test
xor
sbb
sti
cmp
push
xor
aad
leave
sbb
popf
jp
pop
hlt
mov
jmp
jp
dec
xchg
push
jne
mov
jbe
push
in
mov
mov
inc
lea
out
xlat
popa
addb
sahf
adc
or
fnstenv
js
mov
cmc
out
push
push
stos
repnz
int
test
add
inc
in
clc
inc
xchg
icebp
gs
popa
popf
mov
divps
jmp
xchg
repnz
stc
push
inc
jb
inc
in
mov
add
daa
push
rclb
imul
mov
outsl
movsl
adc
xor
std
mov
adc
ret
push
sbb
sti
dec
pop
push
inc
sub
test
fwait
bound
clc
pop
push
sti
nop
pop
add
inc
dec
jno
inc
daa
jecxz
pop
mov
dec
mov
push
xchg
mov
les
ss
in
push
jl
and
dec
xor
in
xchg
sbb
adc
cmc
xor
test
mov
test
adc
mov
push
xor
mov
mov
pop
sub
sub
mov
imul
out
test
out
mov
dec
pushf
cmp
push
aam
mov
and
sbb
jo
nop
sbbb
or
subl
loope
in
sub
xchg
incb
ja
xchg
shlb
xorl
movsl
adc
je
pushl
adc
xchg
dec
jl
jne
or
bound
fwait
and
pop
push
popa
les
pop
iret
fmulp
out
popf
je
dec
pop
les
cld
pop
jl
adc
dec
jb
mov
fcomps
xor
or
cltd
movsb
ja
lcall
sbb
dec
fnstcw
fstl
jnp
mov
rorb
imul
jbe
mov
icebp
or
mov
nop
mov
pop
cmp
shrb
and
push
inc
shll
jne
insb
pushf
scas
call
bound
test
ret
inc
xchg
jno,pt
jne
addb
cltd
mov
cwtl
push
adc
lahf
sahf
lea
call
push
sbb
movsb
cwtl
adc
scas
inc
lock
push
cwtl
popf
mov
lahf
das
pmaddwd
mov
mov
mov
mov
xor
jne
mov
inc
lret
sub
jo
sub
push
xchg
fcmovnu
mov
fsub
mov
out
push
and
xchg
bound
imul
mov
cwtl
add
jg
fimuls
adc
addr16
dec
test
pushf
sbb
cli
xor
pop
mov
pop
dec
dec
jle
xor
icebp
pop
jbe
add
loopne
int3
pop
sub
jl
aaa
gs
iret
jb
inc
pop
aaa
dec
bound
insl
pop
ret
pop
pop
fisubrs
push
pusha
rorl
push
scas
les
sti
xor
inc
or
push
lock
orb
adc
lahf
push
popa
mov
cmpsb
daa
mov
ljmp
stos
pop
xchg
loopne
jecxz
jmp
dec
ret
sbb
mov
sub
pusha
repnz
aas
sbb
push
xor
imul
les
insl
mov
dec
xor
imul
push
cmp
or
mov
aas
cwtl
mov
cmp
ljmp
cmp
into
decl
je
outsl
clc
repz
mov
clc
push
sub
je
cltd
loop
jnp
push
inc
jbe
inc
push
call
stos
xor
cmp
and
mov
inc
daa
inc
mov
push
inc
call
mov
add
mov
or
mov
mov
push
mov
pop
out
xor
test
mov
sti
mov
imul
xor
dec
jae
pop
dec
and
and
pop
dec
mov
stos
sub
call
sub
pushf
es
ljmp
push
pop
js
lret
push
or
xchg
mov
lcall
xchg
sahf
cmc
addb
pop
adcl
aam
into
mov
bound
test
fs
adc
mov
cmc
cltd
jbe
push
xchg
lock
insb
push
push
dec
mov
adc
repz
cld
repnz
stos
mov
into
scas
cs
pop
incb
fcmovnbe
jle
pop
push
pop
dec
cltd
push
fwait
imul
icebp
adc
jg
lret
cmpsl
adc
arpl
shlb
mov
mov
clc
push
shlb
fdivr
in
sub
xchg
xor
neg
or
mov
cmp
cmp
movsb
xor
scas
shr
add
iret
jle
rcl
sub
dec
scas
pusha
mov
and
cmpsb
and
test
push
mov
bound
pusha
aaa
mov
stos
or
sub
and
jecxz
jmp
mov
or
jp
jmp
adc
std
loope
daa
dec
sub
add
hlt
cltd
inc
mov
les
loop
mov
cwtl
pop
jmp
insb
xchg
dec
int
mov
mov
test
cmpsb
add
and
sub
cs
dec
pop
xchg
pop
pop
and
xchg
daa
pop
div
lret
mov
mov
pop
push
sub
dec
aad
mov
adc
enter
cmp
arpl
jb
lcall
sbb
jo
sbb
pop
pop
mov
mov
inc
push
cmp
xchg
mov
sbb
icebp
inc
push
mov
and
xor
out
iret
in
std
outsl
popa
lods
aaa
call
bound
js
lret
and
jp
aam
and
jbe
out
mov
imul
add
repz
add
cmc
orb
imul
into
push
mov
ljmp
loop
push
lea
jne
cmp
jmp
addl
dec
push
out
push
xor
rcrb
jl
add
inc
fsubp
cmp
popf
sbb
jns
lcall
fldcw
push
cltd
daa
iret
pop
mov
enter
repnz
scas
addl
inc
add
pop
movsl
rcrb
mov
inc
push
jns
dec
add
adcl
mov
jb
bound
push
xor
xorb
pop
cmp
aas
inc
sbb
jp,pn
fs
mov
xor
mov
adc
inc
xchg
inc
dec
add
push
movsb
daa
pop
in
lods
mov
clc
push
or
in
pop
rclb
pusha
leave
cmp
push
bound
fidivl
scas
mov
outsl
mov
sub
adc
dec
jbe
loop
out
addb
adcb
cld
pusha
ret
push
shlb
xor
leave
add
push
aaa
adc
mov
pusha
mov
mov
stc
cwtl
push
xchg
gs
push
bound
out
mov
pop
dec
popa
mov
jnp
add
cmp
roll
push
push
and
ret
pop
jbe
sti
dec
xor
lret
xor
inc
inc
mov
subl
xor
enter
je
add
push
out
loopne
cs
fisubl
xchg
orl
jecxz
loope
js
icebp
sub
mov
insl
fimull
jbe
jl
movl
xchg
jecxz
xchg
repnz
aas
jp
mov
pop
xchg
jecxz
cmp
pusha
ds
pop
sbb
movsl
mov
mov
bound
and
pop
scas
cmpsb
jmp
mov
sbb
xchg
cmp
int3
pusha
cmp
sbb
or
pop
movsb
jecxz
jns
xor
sbb
add
and
xor
into
ljmp
mov
xor
mov
cmp
jecxz
ds
xor
sahf
sub
in
lcall
test
xlat
dec
mov
mov
mov
xchg
push
push
lea
push
lret
sar
pop
nop
push
pushf
inc
stos
mov
push
sub
xor
dec
imul
scas
in
pop
jecxz
stc
jle
leave
shll
push
lock
push
sbb
nop
push
scas
inc
cmp
push
jmp
ss
mov
leave
cmp
xlat
subb
mov
push
arpl
add
sbb
jmp
fimuls
or
shl
pop
push
mov
mov
xchg
push
add
ret
outsb
mov
or
sbb
add
sbb
xorl
fsub
repz
mov
lods
lock
jbe
adc
sti
addr16
pop
sbb
jmp
add
mov
push
dec
push
jmp
in
and
inc
lret
lods
jl
mov
xchg
lret
mov
outsl
sub
stos
xchg
lods
cwtl
xchg
dec
pop
mov
sub
test
scas
add
cmp
add
test
decb
sub
insb
inc
sahf
xchg
push
cmp
jg
mov
jns
dec
sti
cwtl
jge
gs
pop
jb
in
xchg
call
pop
jge
loope
sti
std
jl
lcall
mov
fsubs
stos
out
sub
fstpl
and
sbb
gs
mov
push
call
insl
fildll
mov
aad
pop
cmp
out
dec
fisttpl
xor
in
repnz
jne
cmp
fldenv
repnz
sahf
push
xchg
fxch
cmpl
jae
or
pop
pop
fisubl
into
add
mov
andnps
mov
fisubrl
jg
add
pop
cld
cmp
sub
sbb
mov
hlt
test
rcl
lahf
and
xchg
sbb
sub
jmp
mov
xchg
stos
add
call
push
popa
lahf
pop
fbstp
push
cmpsl
sbb
inc
jae
or
push
loopne
popa
das
js
ret
mov
push
push
or
test
dec
xorb
push
imul
dec
pop
pop
or
in
jecxz
mov
cmp
rorb
pop
sbb
push
rclb
jecxz
inc
pop
xor
cmc
pop
lahf
andl
sub
ret
push
lahf
shll
cmc
inc
jle
cmp
mov
scas
push
mov
jmp
inc
adc
stos
push
push
mov
xor
mov
in
in
adc
mov
aam
cmp
adc
push
xchg
jmp
inc
jg
inc
fisttpll
mov
or
cmp
in
push
push
movsb
jae
cli
cmpsb
xchg
inc
lods
scas
cmpsb
hlt
or
mov
in
hlt
cmpb
mov
sbb
rorb
in
dec
idiv
ja
push
push
sbb
scas
xchg
lret
push
call
push
das
xor
rcr
push
jo
shl
std
xor
rcpps
jno
adc
mov
and
cmp
rorl
stc
bound
scas
scas
fstp
aas
mov
xlat
fistpl
pop
loop
std
mov
mov
shlb
rcrb
in
stos
je
scas
filds
ret
jnp
mov
in
jbe
mov
add
clc
add
rorb
mov
push
fstl
popf
or
sbb
push
aaa
push
jmp
xchg
xchg
mov
iret
shr
daa
dec
adc
pushf
jno
std
les
mov
sti
or
js
int3
dec
xlat
lock
aam
popf
lods
jno
je
xor
and
push
inc
pop
scas
lock
jle
enter
sahf
cltd
fsubrs
pop
adc
jge
imul
dec
stos
mov
dec
push
iret
ds
add
repnz
fcoml
sbb
add
fdivl
add
daa
sbbl
movsb
pop
push
lock
mov
fsubl
add
add
cmp
dec
adc
xor
mov
mov
pop
xlat
ljmp
or
push
pusha
jnp
test
add
push
in
movsl
je
adc
mov
mov
cld
or
adc
mov
dec
mov
sahf
mov
fistl
mov
xor
dec
or
mov
mov
aaa
xchg
mov
arpl
aas
cmp
loop
xor
aad
push
push
xor
jbe
nop
mov
inc
lret
pop
divb
jmp
sti
lret
add
push
out
dec
mov
and
add
dec
xchg
or
inc
jb
push
sub
clc
inc
add
fmul
add
sbb
xor
aam
or
push
movsb
enter
ds
mov
mov
xchg
xor
imul
xlat
imul
imull
add
xchg
cmpb
mov
sbb
int3
cmp
mov
out
bswap
xchg
outsb
inc
loop
hlt
andb
movsb
pushf
pop
sbbl
xchg
inc
pop
loope
clc
xchg
add
outsb
xor
xchg
imul
mov
adc
imul
loop
mov
inc
xor
bswap
xchg
out
and
ret
mov
sbb
jo
jae
popa
leave
push
es
lods
mov
ret
sub
dec
pop
adc
pop
mov
rcrl
ja
fldenv
ds
stos
popf
loope
fdivrs
loop
pop
mov
adc
lret
xchg
push
es
lods
pop
mov
dec
jae
out
mov
pop
xchg
aam
push
inc
mov
pop
aam
out
ret
add
das
lcall
dec
xchg
incb
jl
push
or
movsb
fwait
inc
jo
imul
mov
pop
outsb
fimull
iret
add
movsl
sbb
stc
cmpsb
in
fbld
fcoml
rcrl
sub
sbb
fcomps
outsl
clc
bound
sub
inc
mov
leave
rcll
xlat
subb
sbb
cmp
inc
xlat
add
es
mov
and
lahf
sbb
adc
in
subl
xchg
mov
arpl
mov
dec
push
dec
sub
push
das
faddp
lret
scas
sub
arpl
cwtl
std
fucomp
int
out
jg
cwtl
jno
add
sub
loope
push
lahf
fs
jnp
mov
jns
mov
jb
fisttps
jnp
jecxz
in
ret
sub
bound
adc
outsl
mov
jle
mov
sbb
cltd
mov
leave
cmp
cmpl
xchg
push
fimuls
dec
in
xchg
xchg
int
out
add
jp
and
bound
test
pop
mov
mov
enter
inc
xchg
adc
fs
mov
dec
rolb
lock
jo
popa
xchg
lcall
cwtl
xchg
sub
popf
xchg
pop
sub
xor
fdiv
shl
sbb
inc
mov
es
bound
outsl
mov
inc
sbb
mov
sti
dec
test
xor
jl
rcrb
ja
pushf
jle
mov
xlat
push
je
filds
clc
cltd
rclb
scas
or
pop
pop
pop
mov
dec
daa
fildll
mov
mov
dec
ljmp
or
mov
popa
scas
cmc
xor
cwtl
fstl
orb
cmp
addr16
shrb
sub
enter
lahf
pop
movsbl
sub
xchg
mov
cmc
stos
jg
add
push
inc
fisttps
cli
data16
and
or
xor
push
arpl
das
lods
push
cld
cmp
cmp
fiaddl
mov
dec
and
or
add
lods
std
push
push
push
fcoml
in
jnp
lods
jecxz
dec
sahf
xchg
lock
push
lcall
sarb
sbb
rcr
xchg
cmp
jmp
test
fildl
lods
ss
sbb
pop
pusha
sbb
xlat
and
push
mov
aaa
push
and
cmpsb
popa
dec
mov
dec
call
ret
push
or
sub
pop
mov
rclb
dec
testb
into
stos
mov
testb
pop
fisttpl
les
hlt
loope
and
adc
inc
je
cmp
int
push
cs
sub
pop
in
int
mov
mov
and
pop
gs
xchg
lret
out
shrl
ror
sub
test
dec
inc
int3
adc
lds
out
mov
mov
push
pop
adc
shlb
nop
outsb
stc
xchg
pop
repz
xor
imul
lcall
adc
aad
push
sub
subl
sub
inc
push
cmp
test
lock
adc
andb
cmp
insb
push
cmpsb
push
aam
adc
pop
aad
pop
dec
push
es
testb
arpl
shr
movsl
sub
sbb
xchg
lea
repz
jle
arpl
in
sbb
fs
out
pop
test
sbbb
push
xchg
cmpsb
js
mov
out
insb
xchg
shr
cmp
cmp
pusha
jmp
aam
mull
cli
in
dec
scas
pop
ds
insl
sub
js
xor
cmp
shrb
jb
clc
in
mov
fcompl
adc
jmp
push
cli
sub
cmpsl
sbb
fidivrs
int3
test
or
cmp
jg
add
or
fnstenv
xor
nop
into
jne
push
add
dec
push
pop
daa
dec
loop
je
xchg
int3
in
cmp
sub
lcall
shl
popa
sti
decb
je
jbe
sub
imull
mov
cmpsb
mov
mov
xchg
pusha
lock
mov
hlt
pushf
push
jmp
mov
or
inc
sub
int
iret
xor
jb
loop
jno
xchg
or
sbb
inc
in
clc
gs
cmpl
pop
aam
aam
fnsave
int
ljmp
mov
fs
push
cli
and
pop
cmp
aaa
icebp
daa
call
sbb
stc
dec
adc
insb
push
ds
leave
cmp
js
sub
daa
cmc
jb
sbb
pop
sti
or
inc
and
or
pop
repnz
mov
mov
push
outsl
fucompp
iret
orl
lahf
ret
pop
mov
into
or
movsb
scas
arpl
lret
or
inc
mov
loopne
lcall
shrl
or
xchg
loopne
ljmp
mov
and
mov
repnz
das
cmp
adc
xor
fcompl
ror
mov
sbb
lcall
popa
fimuls
and
sbb
inc
inc
sbb
sbb
mov
aam
inc
sub
jae
adc
iret
xchg
cmp
xlat
jns
in
test
mov
daa
fwait
in
jmp
and
in
stos
stos
mov
ss
add
repz
filds
ret
in
xor
sbb
pop
push
dec
inc
mov
or
pushf
daa
stos
sub
inc
or
jno
lahf
xchg
imul
inc
sub
adc
loop
call
pop
push
inc
mov
jg
inc
sub
sub
and
mov
cwtl
xchg
das
lcall
sbb
test
sub
lret
jle
mov
or
jg
sbb
stos
xlat
fisttps
cmc
leave
shlb
mov
in
je
sbb
and
jae
cmp
arpl
or
gs
cmp
jecxz,pt
jge
mov
dec
stos
mov
loop
xchg
jns
push
pop
pop
push
das
dec
data16
add
daa
jbe
out
fsubrs
lds
xchg
cmpsb
lret
pop
cmp
xchg
push
gs
xchg
in
into
adc
and
push
cs
shlb
or
out
movsl
sub
cltd
mov
and
fs
cmp
and
xor
push
mov
jb
xchg
repnz
std
fs
dec
mov
jo
inc
xchg
push
arpl
inc
jg
pop
cmp
inc
and
xchg
push
std
out
pop
fisttpl
popf
int3
fucomi
jnp
or
out
jb
xchg
jne
call
dec
jp
outsl
adc
sbb
fcmovbe
mov
sbb
cmp
push
and
sbb
xlat
lcall
cld
stc
cmp
sbb
mov
shr
out
and
shlb
dec
scas
xchg
imul
and
mov
rorl
test
into
inc
out
jae
enter
xor
dec
mov
movsb
pop
je
xchg
push
add
xor
testb
in
mov
mov
mov
fstpt
stos
popa
adc
scas
jmp
sbb
sahf
jb
int3
cli
das
out
movsb
pop
int3
push
pop
les
jb
jmp
pop
mov
jbe
ss
into
cmp
mov
and
mov
out
cmp
out
popa
mov
or
jg
clc
add
xlat
pop
lahf
push
cltd
stc
pop
or
push
call
adc
movsb
add
arpl
mov
fildl
insl
or
inc
jns
ret
test
adc
addr16
ficompl
pusha
mov
lcall
sub
testb
pop
pop
stos
xchg
push
sbb
xorb
pop
cwtl
jle
lock
push
mov
xor
pusha
rolb
xchg
jl
lods
test
jle
cmp
loope
je
cmpsl
ret
sbb
mov
mov
adc
rcrl
jae
aaa
sti
shlb
and
mov
pop
outsb
sbbl
inc
rcrl
cli
cmpsb
popf
add
fwait
movsb
loop
mov
xchg
xchg
adc
mov
sub
inc
in
clc
lds
mov
out
insl
test
dec
xchg
adc
ja
aaa
cmp
enter
fdivl
jle
shr
mov
leave
scas
and
test
ret
cmp
sub
fxch
dec
fcoms
sarb
sub
gs
sbb
mov
and
fwait
xchg
inc
inc
mov
add
sbb
pop
in
icebp
xchg
fldenv
xchg
cwtl
mov
mov
add
lods
cmp
fisubrs
jg
in
push
lock
cld
daa
dec
inc
inc
fisttpl
cmp
fmul
fdivrp
cli
std
leave
push
xadd
push
sbbl
sub
out
nop
cmp
sbb
mov
loop
add
outsb
mov
cmp
js
js
fnsave
mov
ljmp
das
test
pop
test
and
pop
jle
pop
or
or
mov
sub
cmp
fsubrl
and
in
lea
pusha
sbb
xor
mov
dec
add
mov
pop
mov
push
punpckhwd
shrl
loopne
scas
clc
sub
xchg
cmp
addb
ss
jp
xchg
data16
sbb
into
sbb
mov
inc
stos
adc
pop
arpl
and
inc
cli
test
pop
popf
and
jno
jmp
or
mov
addr16
jp
mov
or
bound
aaa
adc
outsl
cmp
and
movsl
push
pop
pop
push
loopne
jae
mov
sbb
repnz
inc
cmp
lret
sahf
mov
fimuls
adc
in
fcmovb
push
jl
or
aaa
stos
cmc
scas
mov
icebp
xor
daa
dec
lock
xchg
mov
xchg
sarl
xchg
push
fildll
mov
sbb
fbld
xor
jmp
adc
xchg
fnsetpm(287
mov
les
stos
add
push
iret
xor
cmp
jmp
or
out
fildl
pushf
movsl
adc
push
subl
sarb
pop
mov
mov
cmp
daa
mov
fcoml
mov
into
movsb
adc
out
xchg
loop
enter
lret
mov
setne
cs
push
sub
inc
mov
outsb
xor
jns
xchg
push
xchg
add
insb
or
or
cli
hlt
inc
imul
fs
fmulp
push
cmp
insb
stos
mov
fldln2
dec
stc
in
adc
and
in
pop
jp,pn
add
mov
and
lds
scas
sub
xchg
pop
dec
into
cmc
imul
lods
xor
fadds
rorb
push
stos
dec
lods
xor
jns
push
mov
call
imull
add
mov
pop
dec
cmp
mov
jg
mov
mov
arpl
rorb
or
and
or
or
mov
jp
popa
xchg
sarb
aad
dec
and
rolb
jecxz
or
lahf
jp
stos
outsl
push
daa
add
add
push
sub
and
fsubl
int
incb
sarl
sbb
mov
xlat
pushf
aas
js
sub
dec
xchg
and
mov
jecxz
sti
adc
fs
sahf
mov
dec
lods
jne
sub
movsl
test
add
fcmovbe
stos
xor
jl
dec
sub
in
add
inc
inc
pop
jle
push
adc
int
or
js
mov
js
pop
adc
and
mov
lods
add
ss
fiadds
dec
push
mov
insb
out
and
aam
pop
aas
daa
leave
je
out
pusha
adc
dec
in
jns
fcomps
aam
mov
jle
mov
sarl
lea
jmp
mov
roll
mov
and
int
xchg
fistps
outsl
dec
aaa
adc
adc
fsubs
out
and
adc
jecxz
sbb
push
sbbl
pop
subb
lock
lods
pop
movsb
iret
rclb
aaa
lss
push
cs
push
cmp
xor
out
call
not
pop
mov
mov
lahf
sub
lret
jmp
ds
push
icebp
rolb
pusha
mov
pop
xor
nop
mov
fcomps
push
add
addr16
jge
int3
or
fldl
sub
insb
mov
mulb
and
jl
jae
pop
dec
lahf
out
mov
xchg
lahf
orl
add
bound
inc
out
lea
and
push
hlt
xor
or
lret
mov
sbb
ds
push
fidivrs
add
mov
rolb
pop
lret
xor
scas
mov
cmpsl
dec
xor
push
sbb
xchg
push
lock
fidivl
adc
push
pusha
xchg
dec
or
add
mov
inc
movsb
xchg
fmuls
insb
idiv
push
pop
out
and
mov
mov
cmpl
popf
shlb
pusha
xchg
ja
fistpll
mov
std
shr
popf
adc
mov
das
test
lret
pop
jl
sub
jle
int
test
dec
ljmp
xor
dec
mulb
rcpps
and
loop
pop
mov
push
daa
push
jmp
lea
mov
nop
enter
dec
sahf
jns
shlb
sbb
inc
cmp
fbstp
test
push
lcall
out
enter
dec
insl
jno
and
out
mov
jne
out
jne
mov
pop
jnp
mov
sbb
push
push
in
cmp
sbb
sbb
xor
out
addl
int
mov
xchg
ja
scas
sbb
inc
outsb
sub
enter
mov
or
xchg
adc
sar
mov
adc
push
outsl
cmp
mov
insb
mov
mov
ljmp
pop
fwait
adc
mov
cmc
pop
das
and
test
and
push
fcmovb
ret
push
mov
ret
lahf
mov
xor
pop
lea
gs
mov
pop
cmp
pop
not
scas
jno
mov
dec
or
sub
sub
push
pushf
dec
dec
push
sahf
in
mov
push
jo
pop
dec
pop
xor
mov
sub
dec
sahf
in
mov
pusha
inc
adc
mov
stc
cwtl
lock
leave
lds
inc
mov
mov
cmp
inc
mov
xor
push
stc
pop
push
ficoms
std
sbb
xchg
das
in
xor
test
inc
std
popa
push
dec
pop
ss
xchg
dec
fwait
repz
pop
sub
jb
mov
fmull
inc
sub
dec
popa
cmp
pop
add
lods
repnz
mov
clc
out
test
lods
cltd
sub
je
in
fdivrl
test
cmc
add
xor
push
inc
or
pop
and
push
inc
sub
stc
es
std
cli
add
xlat
xor
or
fbstp
fsubr
mov
out
xlat
aam
xchg
aam
je,pt
mov
mov
mov
shlb
mov
repnz
js
out
inc
lahf
jecxz
movsb
pop
jle
mov
outsl
pop
mov
nop
pop
in
hlt
sub
xor
xchg
mov
ret
push
ret
mov
cmovb
stos
and
mov
mov
fcomip
mov
pop
pushf
pop
jbe
add
sti
and
add
and
inc
fucomi
push
xlat
sti
imul
sar
scas
lds
stos
dec
push
lea
addr16
jno
lret
and
cmp
outsl
pop
pusha
mov
pushf
adc
popa
push
enter
sbb
mov
add
cld
xchg
xchg
add
outsb
push
in
pop
das
ficoml
inc
call
add
shll
xor
leave
cld
cli
add
and
fimull
mov
adc
sbb
mov
jns
jo
xchg
cmp
jmp
mov
mov
xor
xchg
iret
insb
aam
sub
inc
rol
inc
and
outsb
add
pop
jl
out
movsb
sub
hlt
dec
jno
adc
fldl
mov
negb
mov
es
test
mov
mov
movsb
ljmp
js
cli
push
cmovno
fdivrs
pop
in
scas
hlt
imul
xchg
add
nop
fidivrl
ret
enter
xchg
mov
inc
cs
xchg
xor
add
dec
outsb
xor
mov
xchg
int3
int
and
mov
mov
imull
xchg
inc
lret
mov
push
lret
or
ficompl
test
repz
orb
push
movsb
xchg
add
cmp
adc
add
dec
cmp
aam
pushf
sub
sub
mov
mov
in
adc
sbb
dec
outsb
mov
jge
add
lock
xlat
sub
jmp
jne
hlt
in
adc
imul
andl
xor
sub
or
clc
push
push
fcmove
or
aam
pop
mov
cmpsl
loop
jae
adc
fs
sub
pop
jo
inc
in
xor
mov
mov
ss
pop
and
into
stc
fsubl
pop
mov
adc
adc
sub
lods
push
adc
sbb
sbb
inc
cli
jecxz
loope
dec
icebp
mov
pop
mov
mov
inc
dec
test
repz
fmuls
jmp
mov
sub
sbb
or
bound
lods
pop
call
inc
test
push
sbb
std
js
lock
pop
into
scas
movsb
mov
ds
daa
jns
mov
inc
sub
mov
xchg
int
imul
std
outsl
mov
xchg
jb
mov
xlat
aad
xchg
test
mov
lock
mov
iret
shr
inc
sahf
rclb
stos
inc
add
outsb
jne
cmpsl
lret
xchg
inc
clc
and
cmp
inc
or
mov
cmp
lcall
dec
lahf
decl
rcll
lds
pushf
das
pop
clc
sub
js
lea
xchg
xor
test
cmp
pop
iret
enter
mov
lock
xchg
inc
jb
jl
aad
adc
dec
filds
mov
mov
jns
rorb
movsb
out
jae
cmpsb
mov
dec
xchg
lcall
sti
push
test
xchg
cmp
xchg
mov
lret
mov
std
je
mov
xchg
sbb
cld
add
mov
rcll
sbb
mov
mov
mov
mov
adc
sub
test
lret
idivb
jne
jne
andl
sbbb
lret
pop
js
adc
mov
loope
push
adc
pop
jmp
test
ds
mov
out
mov
push
mov
mov
dec
sbb
ja
push
stc
sbb
add
gs
movsl
or
xchg
stos
mov
or
out
sbb
das
mov
sub
shr
test
scas
lahf
int3
fwait
xchg
outsl
lret
je
push
icebp
in
std
or
push
int
addl
cmpsb
mov
rclb
jle
arpl
out
mov
fmull
test
movsb
inc
sub
pop
xchg
sub
cs
lret
cmp
into
mov
and
mov
aaa
push
out
cltd
or
jl
icebp
add
push
push
or
rclb
add
leave
mov
inc
sbb
push
jle
jns
xchg
push
gs
cmp
data16
mov
iret
lahf
and
fistpll
repnz
popf
mov
sub
out
mov
sub
adc
js
sub
add
sub
pop
pop
xchg
push
dec
aaa
sbb
rep
das
aaa
data16
jmp
fcmovnu
pop
inc
mov
loop
mov
dec
push
jecxz
inc
aad
push
mov
icebp
pop
mov
fwait
push
test
jns
test
jnp
leave
or
stc
or
add
and
test
out
or
xorl
cmp
and
pop
push
jle
or
push
jle
cmpl
ret
inc
and
neg
mov
xchg
mov
gs
sub
inc
out
lahf
and
cltd
pop
push
xchg
out
add
shl
xchg
xchg
pop
jl
icebp
jno
and
test
daa
add
je
ds
lret
lret
imul
dec
xor
adc
cltd
imul
jne
mov
in
dec
fwait
mov
repnz
clc
cmp
add
push
lcall
xchg
push
aad
jb
cltd
inc
sbb
sub
mov
inc
xor
lret
mov
inc
sahf
fwait
rcr
in
cmpsb
jne
aas
inc
adc
lods
mov
mov
rol
xchg
popa
and
xlat
mov
jo
and
pop
mov
adc
fidivrl
ss
dec
lret
test
jmp
das
call
outsb
add
ja
mov
jmp
aam
jmp
aas
mov
push
lret
in
mov
push
push
les
mov
sbb
jns
mov
mov
sbb
xchg
push
insl
sbb
xchg
push
inc
pop
pop
mov
fwait
push
add
sti
jp
sbbb
jo
xchg
inc
fcoml
push
add
jl
xor
sbb
mov
push
in
faddl
mov
xor
mov
push
push
fdivrl
sti
pushf
add
int3
sub
and
adc
lret
pop
cmc
cld
out
arpl
xor
pop
mov
sub
and
dec
test
cmp
leave
sbb
push
clc
bound
mov
cld
xchg
fcmovb
ret
mov
xchg
add
mov
sub
mov
repz
sahf
daa
sbb
bound
imul
lds
jo
inc
pop
rclb
imul
stc
mov
pop
fistpl
mov
icebp
iret
out
cmp
test
jmp
push
xchg
nop
xor
iret
lcall
cmp
sbb
insl
mov
repz
rcrb
ret
dec
rcll
fnstenv
addr16
inc
cltd
int
mov
cmc
pop
jmp
fisubrl
and
pop
push
cli
test
insl
or
sub
rorb
dec
adc
push
ret
nop
outsb
add
mov
mov
fcmovnb
xchg
jg
mov
adc
lea
push
icebp
jbe
jl
in
xchg
dec
loop
mov
push
test
inc
dec
xchg
xchg
adc
fcomps
repnz
push
sub
fwait
adc
cmp
ljmp
sbb
pop
inc
in
scas
cltd
push
int3
push
mov
cmp
shlb
pusha
loop
cwtl
movsl
push
cwtl
xlat
test
sbb
mov
shrb
sub
push
ja
jge
inc
mov
lret
sbb
jb
movsb
iret
jp
pop
xchg
mov
xor
jg
sub
pop
adc
jns
xchg
into
mov
inc
mov
fcomps
subl
pop
das
mov
shrb
out
stos
mov
cmpsb
les
rcrl
ljmp
popa
cmpsl
setnp
mov
pop
xlat
mov
jl
mov
leave
push
sbb
jo
push
mov
daa
inc
movsb
push
mov
lea
loope
and
sub
add
aas
cmp
xor
popf
data16
add
mov
push
cmp
sbb
jecxz
out
dec
iret
dec
out
jbe
shlb
add
dec
lock
in
pop
add
mov
cmp
pop
jl
dec
xchg
adc
in
jle
insl
mov
cmp
xchg
div
cmp
mov
mov
jl
lods
and
mov
ret
lcall
pop
shrb
sti
movsl
mov
adc
fsts
mov
cmp
cs
xor
or
xor
mov
fdivp
dec
adc
adc
xchg
jo
pop
and
inc
push
adcl
iret
xorl
ljmp
pop
sbb
fwait
or
out
idivb
dec
xor
dec
test
sub
nop
push
xor
jecxz
cltd
jb
cmp
inc
add
sbb
add
scas
fcoml
or
mov
jbe
xor
push
dec
lock
jg
insb
stc
or
hlt
or
mov
test
movsl
aas
das
pop
cmp
lret
or
cs
push
cmp
sub
ror
mov
sub
push
lret
test
mov
xchg
sbb
pusha
xchg
inc
stos
int3
or
xchg
fdivs
ret
mov
mull
jo
sub
inc
pop
add
insb
push
inc
inc
ficompl
lret
dec
xor
push
push
jbe
and
xchg
mov
dec
mov
into
test
loope
add
in
ds
lock
sbb
mov
adc
clc
sub
test
js
mov
loope
pop
adc
or
enter
push
ret
sar
xchg
push
dec
and
fcmovbe
dec
mov
ret
jg
pop
mov
rolb
call
sbb
es
movsb
stos
mov
pop
lcall
scas
sub
push
lods
add
in
sub
lock
inc
mov
repz
push
out
jmp
inc
xor
and
mov
mov
out
fisttpll
mov
outsl
cmpsb
ds
gs
adc
cltd
dec
pusha
push
add
pop
clc
repnz
or
sbb
or
rcrb
pop
xlat
push
xchg
mov
lret
mov
cli
roll
adc
cld
shl
insb
and
jae
cld
cmp
outsl
imulb
or
lea
out
mov
jnp
mov
ja
out
call
sbb
push
add
inc
cmp
jne
dec
and
mov
push
call
pop
and
clc
testl
add
inc
es
jns
jo
xchg
testb
out
aad
mov
mov
jno
test
imulb
in
mov
dec
inc
imul
mov
dec
adcb
push
lret
inc
ret
push
sub
jo
and
pop
aam
rcrb
sub
in
rcl
das
jg
mov
rorl
or
jnp
int
mov
push
in
ja
mov
pusha
jge
xchg
les
mov
xor
negl
add
and
mov
xchg
test
out
mov
hlt
xlat
and
sbb
jecxz
push
mov
shr
or
aam
daa
fidivs
sbb
faddp
hlt
ret
inc
pop
data16
push
xor
sub
mov
clc
fidivrs
out
icebp
xchg
xor
out
adc
ds
or
sub
mulps
mov
adc
addr16
sub
test
dec
push
cmpsb
cmp
sub
cs
dec
mov
sbb
ljmp
push
scas
adc
out
in
pop
mov
popl
test
sbb
ret
cmp
cld
mov
or
cmp
outsl
mov
fs
sub
out
fistpl
pop
mov
cmpsl
pop
ss
pop
xor
stc
andb
fistpll
cmp
negb
sti
out
jl
pop
fldcw
mov
mov
movl
inc
lods
lods
pop
pop
inc
mov
ret
fistpll
gs
loopne
addr16
cwtl
inc
outsl
popa
stos
repz
push
loopne
lret
imul
mov
cmpsl
lcall
call
pushf
data16
lds
fsubrl
inc
sahf
inc
mov
cwtl
repz
es
adc
or
out
jns
xchg
lock
jnp
bound
pop
rorl
xor
out
adc
jg
ss
insl
inc
je
adc
xchg
mov
dec
pop
push
mov
inc
inc
push
push
mov
imul
mov
xchg
andb
pop
subl
jle
and
adc
adcl
jmp
sarl
outsb
test
dec
add
push
xchg
pop
sar
mov
mov
divl
out
cli
xor
mov
pop
fbld
ret
es
int
aad
pop
dec
inc
cwtl
push
not
jl
rcrl
mov
or
xor
iret
pop
xchg
insl
ss
cmpsl
inc
sti
cmp
data16
mov
jmp
scas
int3
mov
mov
popa
adc
push
iret
sub
add
mov
sub
in
cmp
mov
xchg
pop
jmp
push
cmpsl
pop
jno
cmp
das
jp
rcrb
mov
insl
mov
xchg
aas
or
insl
sar
xor
movsl
sbb
test
push
pop
push
xchg
stc
mov
andl
add
sahf
cltd
out
ja
sbb
mov
sarb
sbb
sub
push
in
stc
shll
icebp
add
test
cmp
ss
ljmp
in
ss
stos
fst
pop
push
add
frstor
pop
mov
lock
push
std
test
int
shll
mov
rcr
push
js
and
jp
arpl
iret
ret
fmul
push
inc
mov
lret
jle
cmp
into
dec
push
aaa
cltd
mov
pusha
shrl
rolb
jno
cmc
mov
xchg
push
adc
xchg
fidivl
xchg
les
out
mov
stos
repz
jecxz
imul
pushf
js
dec
jnp
add
mov
add
fs
pop
sbb
ja
push
xchg
sub
rorl
pusha
sbb
mov
rolb
mov
dec
jb
xchg
jge
mov
imul
stos
ja
mov
jl
jge
push
xchg
inc
jnp
pusha
inc
jmp
inc
mov
sti
mov
cs
jp
int3
dec
lods
mov
mov
add
mov
push
mov
dec
jp
xchg
inc
ljmp
adc
movsl
das
fistpl
pusha
and
leave
addl
inc
xor
out
rcll
pop
sbb
arpl
sarb
mulb
mov
insl
outsb
popf
addl
in
sbb
and
mov
ret
cmpsb
popa
and
sub
mov
cmc
sub
mov
mov
cmp
imul
idivl
pop
outsl
cmp
jecxz
jp
add
mov
or
fwait
jno
adcb
das
mov
mov
xor
xchg
push
mov
das
jo
pop
stos
lock
cmp
inc
push
iret
pop
dec
scas
jno
cmp
xchg
xchg
inc
dec
jns
cmpsl
stc
lret
jnp
inc
xor
mov
xchg
mov
push
xchg
adc
rolb
jl
cli
cld
ja
fdivl
popa
add
sbb
in
jae
jge
mov
ds
les
ds
cs
dec
xchg
pop
adc
fmull
inc
call
xchg
sbbb
pop
das
ljmp
mov
sbb
dec
mov
xchg
cmp
dec
in
sbb
loopne
pop
jecxz
xor
cmp
mov
fsubr
cmp
adc
lods
xchg
dec
dec
icebp
sub
cmp
call
mov
lcall
adc
or
aaa
push
pusha
mov
jbe
mov
adc
fistpll
sbb
sbb
adc
push
lcall
into
lahf
push
mov
mov
fwait
sub
pop
mov
dec
ja
adc
xchg
lret
ja
js
ret
jmp
adc
and
fsubr
or
pop
jnp
add
inc
sub
sub
add
dec
xor
movsl
sub
in
fs
punpckldq
movsb
sarl
lahf
mov
lds
mov
mov
fs
dec
or
rol
or
faddl
cmp
add
dec
psrld
cmp
call
mov
and
icebp
pop
mov
and
ficoms
cmp
in
test
jns
and
inc
inc
into
stos
sbb
xor
js
aas
adc
ret
mov
test
je
and
pop
or
mov
arpl
cmp
lcall
repz
mov
push
inc
addl
hlt
or
adc
cmp
and
arpl
repz
pushf
icebp
gs
adc
leave
cmp
idiv
fcomip
sub
mov
push
inc
in
mov
push
push
imul
rolb
mov
arpl
jmp
lods
addr16
mov
push
popa
rcr
dec
out
dec
addb
flds
pop
outsl
jecxz
jae,pt
ret
loop
cmc
adc
mov
into
fidivl
arpl
lods
cmp
insb
xor
fisttpll
xor
ljmp
pop
out
xorl
lods
fldl
push
pop
pop
lret
popf
sub
push
inc
shrl
pop
mov
adc
negl
enter
jg
sub
xchg
rcll
pop
out
cmp
xor
inc
cmpl
ss
add
loopne
xchg
and
sbb
shll
pop
push
mov
mov
fistpll
mov
mov
cmp
ljmp
adc
mov
pop
xchg
hlt
ficoml
arpl
insl
xchg
ds
fdivrs
loopne
dec
nop
pop
or
jmp
add
mov
mov
push
rorb
inc
push
flds
fisttpl
dec
adc
adc
and
dec
adc
jb
clc
fcoms
jne
xchg
in
cmpsb
mov
jmp
mov
test
add
into
ljmp
cld
aaa
jb
in
xor
mov
jns
pop
mov
in
mov
mov
shlb
int
push
push
and
push
push
loope
fdivl
xchg
dec
xchg
icebp
cmp
pop
iret
fldcw
in
fildl
cld
fisubrl
xchg
inc
je
int
std
loope
jle
nop
stos
lret
in
inc
lods
fiaddl
pop
push
add
nop
lcall
imul
pop
out
adc
cmc
adc
movb
ficompl
jl
out
lret
or
sarb
lods
repnz
mov
fcoml
mov
jmp
fildl
movsl
cmc
data16
jmp
inc
in
movl
cmp
inc
std
imul
mov
test
faddp
outsl
pop
iret
lea
arpl
out
mov
mov
insl
imul
in
test
fnstcw
cwtl
shlb
int3
sbb
push
fisubrs
cwtl
push
movsb
clc
or
aam
leave
mov
iret
loopne
mov
dec
aaa
xchg
and
dec
mov
cmp
jnp
adc
scas
mov
pop
xchg
mov
in
sbb
call
pushf
push
stc
fwait
iret
mov
mov
pop
cmc
scas
inc
es
notb
div
imul
dec
clc
lcall
dec
jbe
mov
repnz
ficompl
add
xchg
xchg
lds
or
mov
add
cs
jg
popf
leave
push
jae
jno
ficoml
add
inc
cmpsl
mov
xchg
bound
jae
dec
sbb
fsubrs
sub
jmp
sbb
lcall
test
inc
push
push
movsl
and
or
gs
ficoms
popf
inc
push
xor
mov
push
xchg
test
jbe
xchg
add
popl
in
cltd
fistpll
xchg
das
repz
cld
add
test
or
mulb
cmp
fs
testl
sub
push
test
push
adcl
add
shlb
jnp
es
notl
cmc
ljmp
push
ss
jle
cmc
adc
test
or
sub
mov
lods
xchg
repnz
scas
push
sbb
mov
xor
lea
das
sub
xor
lods
call
scas
push
mov
enter
das
stos
adc
loope
cmp
mov
mov
and
std
lret
mov
mov
jle
shlb
pop
cld
shrl
iret
out
fldt
push
cmp
ljmp
ds
xchg
or
jge
mov
pop
addr16
ja
sbb
arpl
fstpl
idivl
xlat
cmp
cli
fsubl
adc
into
enter
loop
mov
test
fwait
out
xor
ljmp
addr16
int3
xchg
icebp
jo
mov
shr
dec
loop
in
cmc
mov
out
ud0
sub
jecxz
or
stos
jge
pushf
mov
out
mov
call
js
push
pop
cs
push
xor
or
test
or
add
xchg
mov
jmp
push
pop
and
insb
push
xchg
in
inc
add
popa
sub
xchg
add
jecxz
scas
jbe
fisttpl
lds
ljmp
pop
movsl
or
pop
inc
mov
lea
in
mov
jmp
iret
cmp
add
jb
inc
stos
push
aas
mov
lea
push
call
adc
pop
fcompl
cmp
sarl
mov
pop
xchg
mov
xlat
lret
lcall
sbb
jne
and
sahf
lret
mov
mov
lds
faddp
repz
scas
lock
mov
ret
or
dec
orb
andb
arpl
xchg
dec
ss
ds
in
push
negb
jecxz
stos
lea
stos
ret
push
ffreep
rclb
into
into
dec
cmp
les
adcl
xchg
jle
fs
xor
fwait
dec
fldt
mov
or
popf
mov
mov
or
sbb
mov
scas
sub
loope
std
insb
push
cmp
mov
or
inc
test
mov
lods
in
loope
xchg
xor
fpatan
hlt
push
cmovo
mov
iret
shll
sub
inc
xchg
xchg
lds
push
aaa
jl
inc
cli
sub
jne
mov
jnp
lahf
pop
into
cmp
lods
lret
push
xchg
and
pop
call
vpaddd
push
mov
loopne
mov
xchg
hlt
ficoms
fwait
inc
cld
cmp
enter
enter
sub
int3
aaa
stos
out
or
inc
lods
leave
pop
shll
stos
dec
scas
hlt
cmp
and
sub
gs
jge
scas
jg
cmp
sbb
jp
pop
scas
test
idiv
xorb
add
push
sub
jle
pop
sub
lods
sbb
mov
popa
leave
jb
addr16
sbb
adc
sbb
popa
rol
sub
testl
pop
test
mov
xor
out
or
mov
or
sbb
push
cmp
negb
mov
mov
pop
dec
mov
sbb
in
mov
popa
jmp
jge,pn
mov
mov
and
inc
fildl
cld
inc
add
shrl
lret
lahf
outsb
ror
les
leave
ret
and
cmp
test
lret
das
mov
sahf
push
cwtl
push
repz
test
jb
add
stc
mov
push
xor
iret
je
jne
sbb
inc
iret
hlt
je
cmpsb
pushf
ret
filds
jmp
sub
jns
push
shll
jmp
sub
sub
or
and
adc
push
popa
mov
jo
add
pop
add
jno
jg
and
das
cltd
fadds
xchg
daa
cmp
mov
inc
push
popfw
int
mov
and
mov
xchg
or
test
les
jg
inc
pop
xor
and
adc
divb
lret
xor
xlat
ds
sub
add
jmp
sub
enter
push
mov
mov
adc
sbb
mov
inc
adc
mov
dec
mov
lds
pop
cltd
mov
xor
lahf
sbb
push
cmpsb
pop
cli
xchg
cmpb
mov
stc
mov
push
shlb
sub
cli
leave
and
insl
cmpsl
mov
lret
out
inc
add
enter
adc
inc
lds
fisttpl
or
lods
mov
mov
sbb
sbb
mov
jecxz
add
mov
bound
and
gs
mov
fnsave
push
cs
xchg
shll
sub
push
rolb
cld
ss
in
stc
xchg
inc
jge
ja
add
dec
imul
push
outsb
call
jle
cmp
dec
cmp
xor
lahf
sub
xor
pusha
stos
dec
test
mulb
ret
mov
push
lcall
mov
out
sub
fidivrl
xorl
add
outsl
icebp
stos
add
bound
xorb
cli
fisttpll
iret
movsb
test
dec
int
vprotq
cmp
test
movsb
pop
rolb
imul
pop
or
pop
xor
jne
rorl
or
mov
loopne
sahf
ds
push
sub
cmpsb
xor
rolb
jae
stc
fs
mov
xlat
xchg
mov
xlat
jle
cmp
cmc
jns
xchg
sbb
fildll
fldenv
aam
dec
and
pop
mulb
ss
loopne
lahf
aas
pop
push
mov
rol
jae
and
adc
dec
add
xor
gs
and
out
jge
cmpsb
inc
test
sbb
inc
movsb
fildl
shlb
rcll
pop
stc
ja
aaa
inc
rorl
and
xor
fsubr
mov
stos
xchg
jle
mov
xchg
ds
cld
aas
push
sbb
lret
push
imul
cmp
jle
addr16
aas
loop
cltd
inc
adc
cmovle
lds
sbb
jl
xchg
in
arpl
std
adc
mov
sub
iret
ljmp
loope
cltd
clc
xchg
andb
fcmovb
subb
jnp
dec
faddp
jge
or
lock
lock
mov
xlat
xchg
sbb
dec
repnz
mov
fxtract
or
call
loope
jb
jg
jno
jnp
in
mov
enter
push
push
push
mov
mov
in
pop
dec
fsubs
call
test
adc
sbbb
inc
jg
out
repnz
fisubrs
inc
push
jno
ror
bound
mov
aas
leave
dec
mov
xchg
adcl
mov
mov
cmp
sbb
or
jge
jge
lcall
fwait
pcmpgtd
mov
sbb
daa
sub
int
and
fsubp
cmpsb
sbb
dec
imul
in
call
stos
jmp
into
add
xchg
inc
push
outsl
sti
jbe
add
xchg
es
call
inc
mov
test
jno,pt
mov
dec
roll
test
sub
adc
inc
aam
or
mov
loopne
int3
scas
pop
or
and
mov
ret
out
out
shll
cmpsb
jo
inc
jmp
adc
cmp
test
jno
mov
lret
jg
pop
ja
pop
xchg
bound
add
movsb
mov
adc
repz
push
stc
loopne
xorb
lods
pop
aas
into
fildll
push
and
add
mov
pusha
sub
inc
rorb
dec
pop
dec
dec
nop
pop
cmp
sbb
pop
fnstsw
out
cltd
lret
adc
icebp
add
mov
out
sbb
adc
shll
cmp
mov
sti
xor
lea
icebp
push
sbb
fwait
loop
mov
out
in
sub
mov
inc
sahf
flds
xchg
mov
insb
outsb
push
add
pusha
cmp
xchg
sti
jmp
jno
test
xchg
rorb
aas
pop
xor
push
cld
push
shrl
aam
jno
jmp
sub
mov
mov
sbb
insl
icebp
push
add
dec
sbbb
ficomps
hlt
or
lods
inc
leave
sub
mov
lcallw
adc
sbb
lods
adc
inc
sbb
or
xor
pop
lahf
jae
jge
and
sarb
push
test
jo
fbstp
xor
mov
mov
testl
ret
mov
pushf
jo
out
cmp
mov
bound
pop
out
or
cmp
xlat
decb
movsl
imul
mov
mov
sbb
rcr
sub
cmpsb
push
mov
inc
lea
std
js
roll
inc
or
scas
aam
sub
in
das
mov
jae
fmull
shrl
daa
inc
fisubrs
and
jecxz
jmp
push
cli
shll
mov
mov
cmp
cmp
pop
mov
dec
fisubs
roll
mov
sub
pop
mov
xchg
pushf
outsb
jle
cld
int3
or
in
or
xchg
push
jo
int3
push
jg
pop
inc
adc
mov
xor
mov
xor
cmpsb
jne
jl
dec
addr16
int
jp
push
cmpb
test
stos
xorb
shrl
add
aad
sub
jg
test
xchg
xchg
push
fsubs
psubw
clc
xchg
pop
lret
into
push
ss
mov
std
cmp
cmc
fwait
mov
mov
fst
fmull
or
inc
mov
push
xor
and
add
adc
inc
mov
dec
repz
int
dec
xor
enter
pop
xchg
cld
dec
dec
js
std
and
push
jo
xchg
lahf
jp
negl
into
std
push
pop
sub
stc
add
cmpl
outsb
jb
and
pop
or
push
jecxz
lods
inc
ss
lea
or
call
push
dec
sbb
cmpsb
fwait
cld
inc
into
test
mov
sbb
xorb
pop
push
sbb
out
dec
inc
les
cli
sbb
and
mov
push
pop
xor
sub
lahf
cmpb
dec
enter
shl
pop
add
mov
imul
fmulp
or
xor
rcrb
jns
shr
out
cmp
push
jb
cmpsb
jg
pop
mov
adc
jae
rclb
jo
xchg
and
adc
ret
das
das
bound
or
and
pop
lock
mov
pop
pop
pop
jge
lods
push
test
jno
mulb
jecxz
and
sbb
xchg
mov
jns
and
mov
mov
scas
mov
jbe
push
mov
jnp
test
mov
loop
out
pop
dec
xor
movsl
out
sub
push
cltd
lret
mov
icebp
xchg
outsl
mov
cmc
pusha
pusha
stos
xchg
rep
pop
or
adc
pop
loopne
sub
pushf
ja
jg
jmp
jmp
push
insb
xor
aaa
xchg
push
jmp
cmpsb
leave
mov
jmp
loope
sub
jg
mov
inc
insl
push
scas
sbb
and
xor
movsl
das
or
mov
sahf
pop
xchg
popa
incb
xor
mov
pop
xchg
mov
pandn
push
into
outsb
pop
aas
fwait
out
xchg
in
and
test
pusha
cmpsl
adc
cld
mov
ja
adc
pop
push
xchg
cmp
iret
or
int3
ss
loop
mov
and
jge
outsb
cmc
jo
fnstcw
movsb
add
jno
test
dec
and
pop
adc
in
dec
inc
fisttpll
rorl
adc
outsl
in
cli
inc
outsl
jae
iret
inc
push
push
mov
cmp
pop
sub
cli
push
jno
or
jecxz
cmp
sbb
icebp
imul
imul
pop
out
ret
das
in
sbb
and
xchg
lds
jp
jno
lahf
aad
jne
fwait
dec
mov
fistpll
testl
mov
movsl
sarl
in
xchg
xor
int
push
and
movsb
nop
mov
push
pop
das
cmp
pop
mov
sbb
lds
lret
mov
mov
fisttpll
nop
cmp
mov
fimull
shl
dec
je
sarl
test
mov
mov
fsts
ss
adc
imul
mov
fldl
add
pop
mov
test
inc
inc
scas
jne
loop
scas
mov
xor
adc
add
and
fidivl
lcall
push
sub
or
sub
push
jg
push
cmc
mov
push
add
mov
push
lcall
sbb
stos
sub
aas
es
dec
jnp
js
or
push
xor
jae
jl
das
nop
insb
mov
call
imul
cltd
test
leave
and
sub
cmpsl
and
fists
xor
jmp
int3
in
cltd
int
push
pop
arpl
cmc
data16
inc
jge
mov
mov
jmp
test
jp
jnp
jg
jge
std
insl
xor
inc
rcrl
mov
jns
or
fsts
pop
mov
fildll
daa
inc
dec
mov
mov
dec
cmp
call
cli
xchg
sub
ja
stos
sbb
ds
repz
insl
decb
adc
xchg
insl
outsl
shll
leave
imul
out
mov
sti
pop
push
daa
jb
iret
mov
sbb
inc
cs
lahf
pop
xor
mov
mov
bound
push
in
cmp
pop
and
xchg
insl
test
int3
sbb
xchg
pop
pop
pop
sar
xorb
xchg
mov
testb
push
adc
inc
xor
push
jmp
loop
int
icebp
mov
sbb
dec
data16
lret
mov
lcall
push
imul
cmp
lods
jle
out
mov
aaa
cmp
xor
test
dec
sti
or
sbb
negl
sahf
in
cwtl
xchg
push
inc
stc
dec
js
or
orl
fs
lods
in
dec
loope
mov
dec
xchg
sbb
movsb
les
nop
out
or
xor
sub
shll
xchg
and
lods
insb
mov
mov
out
lret
rolb
cwtl
pop
xor
popa
mov
mov
fisubrs
push
repz
in
lret
mov
movsl
imul
add
int
mov
xchg
jmp
sub
mov
push
and
dec
pop
dec
fadds
inc
cmp
xor
mov
xor
jl
sbb
sahf
adc
les
test
in
icebp
lret
in
mov
adc
decb
mov
pop
sub
sbbb
xor
adc
sub
xor
xchg
popa
xor
dec
out
add
pop
xor
incl
add
js
ret
cmc
inc
add
in
lods
sbb
push
hlt
cmp
adc
lret
inc
pop
adc
mov
adc
mov
jae
pop
pop
inc
lret
cld
lods
or
mov
scas
mov
and
aaa
and
lds
out
scas
xchg
push
ret
dec
push
fsubl
loop
mov
lea
sbb
fs
arpl
sub
dec
xchg
sbb
cmpl
xor
inc
test
les
or
add
arpl
cs
repz
into
in
xchg
push
repnz
jge
repz
mov
push
scas
loope
adc
inc
sbb
add
inc
jmp
sarl
jmp
bnd
in
test
mov
mov
xchg
out
cli
loopne
sub
out
adc
push
jnp
out
sub
mov
inc
or
pusha
fsubrp
add
pop
xchg
test
xchg
rorb
rolb
idivb
xchg
dec
xorb
sub
lea
push
cs
jmp
sub
xor
adc
jp
scas
test
jns
xchg
and
push
lcall
ret
sti
lret
out
push
and
pop
xchg
pop
int3
push
in
mov
mov
xor
add
xchg
out
pop
mov
ret
xor
pop
pop
mov
in
push
jle
es
mov
cmp
fs
addr16
shrl
shll
lea
or
adc
jle
js
and
push
dec
xchg
sar
push
dec
jne
scas
adc
jle
add
std
jge
pushf
fs
bound
icebp
cmc
mov
dec
push
mov
mov
mov
add
rorb
xorb
pop
and
dec
mov
test
adc
scas
mov
fcoms
jae
loopne
jge
sub
insl
test
cmp
call
out
pop
mov
xchg
jge
test
jns
insl
add
std
rcr
movsb
pop
stos
cmp
add
hlt
pop
or
aad
clc
and
outsb
cltd
push
pop
lret
scas
sbb
loope
decl
or
push
loope
mulb
roll
ficomps
jns
shr
movq
nop
movsb
cmp
test
and
lock
shlb
pop
and
imul
popa
push
subl
js
lret
loop
mov
adc
push
mov
daa
in
mov
fisubs
dec
adcl
lock
jae
sahf
imul
in
lea
push
xchg
adc
je
cwtl
dec
cmpsl
scas
aad
popa
mov
in
ljmp
mov
sahf
mov
add
repz
test
icebp
out
cltd
or
add
jnp
xchg
rcll
dec
pop
cmp
pop
jae
and
fs
or
ljmp
add
cmpsb
xorl
sub
fnstenv
mov
xor
rorl
dec
sub
je
in
les
rcrb
mov
fcmovnbe
jne
leave
jl
add
pushf
pusha
lret
popa
lret
inc
cmp
lods
xchg
fbstp
or
aam
mov
cmpsl
mov
fistpll
mov
xor
xor
xchg
imul
sub
push
push
mov
push
icebp
hlt
rol
aam
jnp
push
hlt
cmp
push
neg
or
sub
rolb
push
push
pop
xchg
dec
jnp
cltd
jbe
or
sub
pop
add
pop
in
ljmp
and
in
repz
out
or
cmc
ds
xor
cmc
daa
outsb
or
xchg
popf
pop
mov
mov
push
icebp
add
out
fsubrp
and
mov
inc
mov
inc
bound
popf
aad
shll
adc
jle
ret
push
sub
enter
jl
push
push
iret
or
and
sub
and
pusha
sarb
rorb
addr16
pop
pusha
pop
ja
mov
and
xchg
bound
lods
repz
xor
add
push
testl
cmp
mov
in
adc
sarl
lea
cmpsb
push
test
jecxz
pusha
in
jmp
xchg
in
push
xchg
or
xchg
xlat
sub
stos
pop
inc
and
outsb
jmp
mov
mov
sub
ret
mov
push
movb
xorl
ficompl
ret
imul
mov
cltd
inc
mov
pop
jnp
in
push
scas
sti
test
rorb
xchg
je
fsubs
push
xor
sub
pop
xchg
rcrl
mov
insb
or
sub
in
mov
xchg
decb
loop
mov
adc
insl
stc
cltd
imulb
pop
jge
clc
in
mov
xchg
inc
orl
in
int
or
inc
stc
cmp
pushl
mov
shll
sub
mov
aaa
pushw
stos
dec
mov
dec
or
lahf
push
jle
fsubp
mov
test
imul
pop
scas
mov
rclb
pcmpgtw
enter
bound
cmpsl
iret
aaa
dec
add
fbld
lahf
mov
lods
sbb
xchg
dec
and
mov
push
inc
pop
hlt
fsubl
scas
jecxz
add
test
out
clc
rcrl
mov
iret
sbb
outsl
pop
cmp
fldt
loope
xchg
dec
cld
aaa
jo
push
push
enter
nop
pushf
add
adc
jl
sbb
cmp
fsubl
push
or
insb
movsb
call
push
push
xchg
adc
mov
or
fs
mov
adc
and
and
mov
repz
mulb
or
lods
push
mov
jmp
stos
sbb
push
mov
int3
test
std
nop
aad
push
xor
cld
xor
aad
dec
xor
push
bound
pop
sbb
xor
add
fwait
pop
cmp
xor
cmp
mov
clc
xchg
sub
fwait
mov
push
sub
mov
shrb
and
je
bound
xchg
std
icebp
pop
xchg
lods
ret
aad
push
mov
sub
pop
rcll
daa
xchg
mov
dec
call
pop
mov
insl
push
out
daa
daa
pop
in
into
out
daa
push
in
xchg
mov
cmp
sub
inc
add
dec
mov
in
scas
mov
fildll
xchg
add
inc
and
fdivr
pop
xchg
xlat
jns
imul
fwait
les
and
jne
int
xorl
add
add
outsl
iret
or
jmp
rclb
subl
test
pmaxub
push
adc
mov
inc
rdpmc
cli
aaa
mov
xchg
stos
out
lret
sub
sub
xor
push
inc
rclb
jg
test
and
xchg
sub
iret
iret
inc
das
in
adc
test
push
push
push
int3
int3
mov
lock
subl
addr16
ja
or
pop
aad
xlat
cwtl
pop
out
das
push
cmp
push
sub
ds
mov
imul
adc
add
mov
das
sub
push
pop
mov
pop
push
adc
jp
jecxz
div
sbb
sbb
xchg
movsl
push
inc
add
out
loope
mov
pop
dec
jns
push
cwtl
shll
ds
fcmovnbe
leave
cwtl
xchg
repz
mov
xor
fwait
sbb
aad
subl
addr16
inc
mov
mov
rclb
xor
push
cmp
xor
inc
ja
icebp
es
sub
pop
jae
ror
inc
xor
mov
fldt
dec
mov
shrl
lods
cmp
daa
shl
mov
aas
fsts
aaa
cmp
ds
cld
test
xchg
iret
enter
insl
out
dec
jbe
push
or
sub
out
jmp
push
jl
pop
cltd
mov
adc
jae
mov
js
cmc
add
rcll
or
int3
inc
xchg
dec
cmp
jl
insl
or
shll
sbbb
call
fiadds
sub
popl
imul
jo
pop
aam
or
jne
dec
jo
dec
ds
sub
imul
dec
insb
shl
inc
mov
loopne
pop
jbe
xor
pusha
dec
sbb
into
jge
je
adc
dec
nop
mov
fwait
gs
pop
adc
cmpsb
pop
daa
dec
pop
and
cmp
cmp
sbb
jge
sbb
mov
bound
push
xlat
add
in
mov
sahf
repnz
fstps
sar
lret
repnz
mov
jge
mov
in
out
sbb
xor
sub
dec
add
mov
repz
gs
outsl
cmpsl
lahf
arpl
aas
inc
cmp
mov
push
stos
loopne
lea
addr16
std
adc
daa
into
add
xchg
xor
mov
and
fwait
pop
call
in
and
pop
or
fs
push
lret
bound
insb
sahf
mov
dec
sbb
lods
add
fistps
xor
dec
push
push
jp
out
stos
cmpsl
call
inc
jge
inc
mov
mov
mov
stos
and
jmp
xchg
bnd
jnp
insl
lds
mov
enter
pop
sar
jb
notb
sub
cmpb
xchg
inc
ficompl
push
imul
cmp
sbb
lahf
clc
sbb
rcrl
xor
mov
xchg
pop
ja
sub
shll
sub
sbb
or
mov
pop
in
and
js
jbe
int3
mov
repz
loope
cli
or
sbb
sbb
je
sub
in
xchg
gs
out
mov
leave
ja
rorb
enter
inc
sti
add
stos
push
lahf
pop
cli
ret
mov
inc
lahf
sti
sub
or
loope
imul
clc
fld
mov
mov
push
pop
cmpl
push
or
inc
iret
aam
imul
std
push
icebp
push
xchg
cs
sti
jl
pop
ss
and
outsb
fcmovnb
add
stos
ret
leave
push
sub
jmp
pushf
sub
jb
aaa
cmp
out
mov
outsl
xorl
mov
in
sti
add
mov
inc
push
int
pop
out
adcl
xor
pop
les
push
mov
mov
dec
stc
pusha
sbb
inc
outsl
je
xor
pushf
ljmp
in
jl
mov
scas
das
inc
xor
add
stc
pop
dec
cld
or
arpl
sbb
add
push
pop
xchg
mov
sub
jae
fisubrl
inc
js
inc
sub
scas
in
jge
outsl
mov
out
icebp
pop
sub
call
iret
xor
add
enter
nop
inc
add
push
xchg
adc
push
cs
cmp
xchg
adc
in
cmp
push
sarb
jae
or
xacquire
jmp
add
pop
test
mov
mov
xor
pushf
int
cmp
cmpsb
rcrb
bnd
mov
loopne
test
jbe
or
nop
cld
aaa
mov
push
push
cmp
xchg
push
cs
clc
sbb
jle
hlt
inc
pushl
mov
lahf
xchg
jge
jle
dec
lods
inc
cld
or
stc
je
pop
test
je
jp
jle
push
repnz
mov
push
or
mov
xor
imul
xchg
rorl
shll
dec
xchg
sbb
jecxz
fdivrs
lahf
cltd
push
push
dec
cmp
xchg
and
loop
jecxz
push
shrb
and
divb
repz
cmc
or
js
pop
cli
outsl
or
cmp
mov
mov
cwtl
ds
test
popf
and
aaa
out
push
neg
dec
cltd
insb
std
xchg
aam
jmp
ret
sub
int3
movsl
dec
jnp
lea
or
in
adc
lock
xorl
fdivrs
jmp
mov
popf
xchg
jo
in
dec
mov
xor
xor
xor
push
xchg
ficompl
sbb
cmp
dec
les
inc
dec
cli
mov
fmull
aam
movl
cmp
cmp
dec
adc
mov
sahf
lods
cmpsl
popa
movd
mov
dec
fildll
and
cli
push
xor
pop
mov
repz
and
jmp
xchg
adc
dec
or
mov
cmpsl
sub
loop,pn
or
mov
and
push
fmuls
data16
push
mov
mov
adc
rorb
out
gs
sub
dec
and
push
xlat
or
jbe
push
mov
cltd
fistps
xchg
sub
cmp
mov
cli
sub
mov
lcall
cmp
jg
jg
rcrl
add
and
push
push
sbbb
movsb
shlw
jmp
push
sbb
fcmovne
jp
xchg
test
or
imul
push
mov
jg
into
xchg
xlat
js
or
nop
xchg
jge
inc
fnstsw
inc
cltd
and
aaa
adc
pusha
out
or
movsl
sbb
push
movsl
insb
mov
outsl
loope
sub
mov
pop
fdivrl
jl,pn
outsl
fiaddl
fistps
mov
pop
or
pop
mov
pop
xchg
sub
data16
fists
push
cwtl
movsl
movsb
aam
mov
int
loope
pop
imul
lret
push
stos
out
rcl
dec
mov
push
lcall
adc
inc
inc
mov
in
jno
inc
mov
loope
sub
rol
sti
xor
xor
cmpsl
or
lret
and
cmp
cs
into
ss
pop
aas
cmpsl
outsl
pusha
test
push
ret
mov
adc
pop
xchg
mov
jo
sbb
mov
push
mov
mov
mov
dec
int3
test
popl
push
hlt
jl
insl
lock
xlat
jge
jno
aas
xor
dec
sti
inc
aaa
std
push
add
jne
xchg
daa
movsl
inc
pop
inc
cmpsb
jo
inc
rcr
lret
dec
xchg
mov
jge
popf
adc
movsl
scas
and
inc
push
inc
pop
adc
add
dec
and
jp
mov
shll
cmp
movsl
push
call
mov
jns
mov
aas
negb
icebp
leave
add
in
or
data16
cmp
cmp
and
loope
xor
inc
jno
and
push
daa
fildl
imulb
pop
push
data16
dec
mov
shl
cmp
jbe
cld
add
xchg
test
pop
xor
xor
mov
pop
jae
loop
js
mov
cmp
lcall
push
lods
fnstenv
lods
mulb
int
xchg
xor
add
or
push
loop
lahf
xchg
es
push
orb
inc
popf
mov
and
cmpsl
lea
dec
adc
mov
ret
pop
xchg
jne
cmp
inc
fcomps
in
or
rcrl
dec
pop
or
sbb
rcll
incb
mov
adc
or
dec
ljmp
shl
mov
test
sbb
sbb
pushf
cmpsb
divl
dec
adc
adc
stos
adc
inc
adc
xor
mov
push
jl
sbb
or
gs
sub
mov
fistpl
popa
loope
jg
dec
xchg
das
jmp
mov
inc
mov
xor
cmp
lcall
shrl
push
les
je
mov
jmp
add
and
sbb
fldz
xor
jb
pop
fwait
gs
out
jns
std
dec
sbb
hlt
roll
movsb
cs
add
out
push
insb
dec
in
adc
fadds
inc
fcoms
cltd
push
push
pushf
push
ja
int
pushfw
imul
out
dec
jmp
sub
push
or
es
lret
mov
mov
in
lcall
mov
push
sbb
inc
int3
sbb
push
inc
lcall
popf
sbb
pop
mov
pop
and
roll
movsb
shlb
push
cmp
outsb
sub
jl
add
loop
cmp
and
clc
cwtl
add
es
mov
mov
por
scas
lret
jle
arpl
lret
pop
mov
mov
cmp
add
loope
leave
sub
stos
loopne
cs
aam
and
pmulhuw
int
xchg
jp
mov
mov
lret
int3
inc
cmp
push
mov
shll
push
mov
dec
sahf
orb
outsl
and
add
sbb
icebp
inc
pop
es
aaa
push
in
or
pop
jecxz
jae
cmpb
popf
mov
call
push
addr16
and
test
xchg
inc
pop
sub
rorl
lds
push
push
scas
fisubrl
jle
cmpsb
cmp
sub
inc
shll
xchg
xchg
outsl
stc
mov
scas
sub
dec
mov
xchg
and
sbb
inc
arpl
mov
sbb
test
stc
xchg
lods
lods
inc
push
popf
xchg
mov
jl
and
xchg
stc
pop
cmp
sbb
sbb
ljmp
mov
adc
repz
in
mov
js
jp
aas
inc
mov
popf
hlt
sbb
xchg
jbe
adc
inc
mov
inc
push
ljmp
adc
mov
mov
aam
fcmovbe
xor
inc
mov
push
inc
jle
push
leave
aaa
mov
es
push
ret
ja
fs
mov
adc
popl
adc
outsb
in
cmp
lds
sbb
mov
cmpsb
repnz
jne
xor
stos
mov
xchg
popf
sub
xchg
imul
pop
fisubrl
cmp
sti
cmc
adc
xchg
push
popf
daa
mov
mov
mov
cmpsl
mull
pop
bound
cmp
ljmp
dec
sar
or
loopne
sub
jl
inc
popf
sub
int
mov
aad
push
outsb
add
movsb
push
pop
loopne
add
sub
ds
jae
out
dec
sub
outsb
addr16
xor
adcb
mov
mov
jecxz
pop
ds
cmpsb
subl
clc
ret
mov
xor
pushf
push
inc
jmp
jnp
push
insl
cs
cmpl
jge
cmpsb
ss
mov
out
sub
outsl
mov
out
ret
sbb
sub
mov
int
push
popa
inc
mov
fidivrl
push
out
dec
lods
pushf
ret
push
orb
mov
sbb
dec
jmp
inc
pop
imul
nop
mov
lock
aas
mov
repnz
in
into
out
int3
scas
pop
cli
adc
push
jecxz
aam
inc
cmp
sbb
mov
inc
cltd
mov
dec
int3
daa
dec
mov
icebp
cs
mov
cmc
sub
mov
stos
push
into
sub
push
loop
xchg
stos
xchg
xorl
lds
sub
aad
or
loope
jl
test
imul
adc
lret
xlat
pop
nop
stos
fwait
cmpl
jp
lods
adc
cld
out
adc
xor
loopne
and
push
and
xor
sbb
pop
xlat
imul
into
push
and
xor
repz
push
cmc
dec
test
arpl
cld
add
bound
jnp
dec
xor
push
sarb
in
addr16
ja
xor
lahf
jle
scas
xlat
mov
ret
mov
ljmp
and
xchg
and
fwait
mov
pop
cmp
push
dec
mov
push
mov
cmpl
repnz
push
or
add
xor
mov
xchg
mov
sahf
fadd
scas
ljmp
movb
dec
fldl
fs
or
pop
inc
add
repz
jae
push
xchg
mov
sub
mov
repnz
in
mov
test
out
xchg
out
js
js
in
insb
mov
pop
push
dec
loop
scas
xchg
pushf
add
popf
push
pop
clc
mov
mov
mov
stos
movsl
xchg
inc
mov
mov
mov
push
add
or
inc
cmp
cmp
pop
add
xor
das
and
cli
mov
push
mov
xchg
pop
pop
addr16
clc
cmpsb
pop
mov
loope
inc
and
xchg
pop
jp
push
je
push
lods
mov
arpl
mov
jle
inc
fiadds
jae
jnp
cli
push
out
and
adc
mov
push
fstp
jp
stos
clc
xor
mov
clc
pushw
jle
push
push
bound
andl
cld
cltd
mov
movsl
add
pop
xchg
inc
hlt
lcall
xor
push
cmp
or
lods
idiv
add
in
bound
mov
enter
ficompl
or
inc
adc
mov
je
ret
sub
fdivl
fmull
sarb
mov
stc
mov
push
pushf
out
insl
movsb
xor
push
sbb
mov
adc
add
mov
hlt
push
ret
data16
add
mov
jmp
xchg
jo
es
sbb
inc
add
push
push
mov
aam
fxch
mov
xlat
fisttpl
mov
fsub
jo
xchg
andb
mov
enter
mov
pushf
sahf
js
cmpsb
in
jmp
repz
scas
or
insb
xor
inc
and
xchg
iret
stos
in
outsb
sbb
inc
jg
mov
scas
adc
repz
mov
and
shrb
adc
flds
jns
int3
in
nop
sub
aaa
sarl
inc
aam
cmpsl
mov
shrb
stc
das
cmp
sbb
pop
mov
and
pop
mov
fisubs
mov
dec
pop
jae
rol
jg
and
das
mov
mov
xchg
stc
movb
cwtl
adc
adc
ljmp
pushf
int3
sar
sbb
sti
sbb
pop
xlat
pop
sub
negl
inc
enter
fs
push
imul
sbb
ret
pop
push
add
js
ja
addr16
push
xchg
adc
or
cwtl
jl
daa
into
xchg
and
mov
insl
sub
ljmp
mov
push
sub
out
xchg
or
cld
and
adcb
ss
aas
jmp
or
xchg
jg
adc
arpl
in
repz
mov
insb
in
ret
adcl
ss
and
iret
int
ljmp
sub
mov
sbb
jmp
xchg
sbb
mov
xchg
icebp
cmc
push
in
xor
pop
xchg
clc
dec
daa
es
dec
xor
gs
int3
dec
sbb
cld
jne
mov
sub
outsl
mov
mov
lret
jle
dec
int
inc
lods
mov
cmp
lods
pop
mov
lds
jo
jae
pop
dec
and
pop
lret
jne
jnp
orb
mov
pushf
inc
addb
push
xor
dec
fisttpll
xchg
mov
mov
xchg
imul
lods
lds
mov
inc
pop
inc
mov
sbb
cmpb
les
outsb
mov
cwtl
insb
in
push
and
or
jns
outsb
sbbl
dec
sbb
out
daa
xlat
cltd
adc
jl
mov
fwait
stos
xor
leave
pop
mov
dec
inc
xor
jbe
lea
inc
into
leave
and
cli
fimuls
adc
lods
mov
loope
xor
push
mov
ret
mov
imul
push
jecxz
mov
movsb
loop
push
inc
scas
lret
jno
les
ljmp
jb
lods
dec
popa
jmp
jle
sub
and
mov
shl
cmp
mov
pop
or
push
std
popa
push
dec
sbb
xchg
outsb
in
pop
popa
aad
std
js
scas
pusha
movsb
shll
icebp
insl
test
mull
jmp
sub
in
xchg
outsl
and
add
adc
cld
xchg
negb
pushf
pop
mov
ret
cmp
arpl
adc
or
adc
sbb
mov
cmpsl
lret
mov
aas
aad
or
dec
inc
mov
subb
or
popf
es
in
mov
mov
fbstp
bound
push
dec
xlat
dec
addr16
and
bound
shll
inc
ljmp
push
movsb
shll
cltd
xchg
lahf
das
sub
or
mov
popf
mov
test
enter
cwtl
jle
pusha
mov
andl
lret
jb
cmp
repnz
add
lods
ret
in
pop
adc
jns
mov
in
sti
js
and
and
push
mov
jecxz
and
insb
lret
cmp
mov
ficomps
andb
fdecstp
push
cli
xlat
add
dec
test
sbb
imul
ss
sbb
push
mov
fcoml
into
insb
test
mov
call
rcrb
gs
mov
xchg
vunpcklps
jbe
push
in
scas
es
cwtl
add
xchg
push
cmp
inc
jns
insl
adcl
fimuls
push
fisttpl
pop
cmp
std
mov
jp
stc
xor
hlt
movsl
mov
sbb
mov
adc
push
imul
jb
jl
adc
flds
es
inc
jge
mov
cwtl
neg
jbe
hlt
jle
shll
aad
mov
mov
nop
dec
jne
jb
jl
mov
mov
aas
add
int3
arpl
or
pop
push
cmp
push
aad
xor
adc
jge
daa
mul
push
mov
rclb
daa
dec
mov
mov
jmp
push
add
dec
mov
pop
nop
pop
and
fcompl
sub
mov
lods
popa
mov
sbb
scas
mov
test
adc
sub
xchg
pop
jp
sub
imul
sbb
lret
hlt
and
out
xchg
xor
mov
push
sbb
adc
mov
lea
rcll
movb
test
mov
aas
or
pop
push
pop
jge
mov
sahf
outsb
xchg
sbb
scas
inc
sbb
mov
cld
push
inc
mov
je
mov
adc
inc
loop
push
shr
push
push
xchg
stos
hlt
inc
cs
mov
test
xchg
add
cwtl
cs
xor
jl
pop
sar
scas
addr16
std
in
cmp
cmp
or
aam
push
sub
xlat
xor
out
jbe
mov
imul
and
aas
mov
pop
std
dec
inc
xchg
subb
or
shlb
loopne
ljmp
push
mov
dec
enter
jmp
rcrl
pushf
enter
out
xchg
mov
loope
or
fsubp
test
mov
xchg
gs
outsl
dec
adc
sub
sbb
adc
imul
je
rcrl
test
fdivl
stos
xor
popa
mov
or
cmpsl
cmp
and
jecxz
jmp
cmp
pop
lods
fwait
push
xor
repnz
sahf
dec
adc
jge
adc
inc
mov
js
sub
cmpsl
mov
lods
adc
imul
mov
data16
bound
and
lahf
dec
jb
inc
push
in
leave
pop
js
mov
psrlw
test
xchg
pop
in
out
mov
stos
jecxz
cs
insl
iret
lret
inc
sbb
out
sub
or
in
mov
ds
out
add
in
movsl
pusha
jnp
adc
out
fwait
in
cmp
aas
das
mov
lahf
insb
cs
fnstsw
mov
xchg
outsb
add
shlb
sti
orb
mov
adc
enter
pop
in
test
xor
sbb
sub
xor
jg
and
jne
jo
rorl
clc
fisubs
add
loop
cmp
xchg
iret
ret
scas
jle
add
ret
jns
fsts
add
adc
mov
inc
sbb
mov
push
push
fistpl
add
push
insl
fidivs
inc
jnp
mov
dec
mov
test
mov
push
sbb
fists
xchg
and
xorl
push
inc
sbb
shrb
jl
sbb
fisubrs
jge
out
cmp
insb
xchg
push
hlt
ljmp
inc
pop
mov
inc
and
mov
inc
test
or
jbe
ficomps
imul
cltd
cltd
repnz
pop
ja
adc
je
dec
scas
daa
stos
lea
adc
enter
lea
push
xor
dec
das
xchg
aam
cmpsb
mov
lea
nop
je
inc
gs
push
cmp
cmp
jns
call
adc
cli
aam
adc
cli
xor
aas
pusha
ja
jecxz
mov
rclb
mov
loopne
not
mov
je
cmp
test
enter
jo
fmuls
lods
xor
enter
leave
jb
inc
in
gs
sbb
cli
ljmp
adc
jo
mov
into
xor
lea
inc
in
sub
int
lea
fcmovne
loopne
int
shll
test
dec
lret
jl
xchg
test
neg
aad
call
das
call
test
jb
aad
in
inc
mov
mov
xchg
push
adc
and
mov
mov
fbld
jl
fildll
push
pusha
xchg
ss
pop
test
xchg
pop
je
pop
in
cli
xchg
dec
mov
stc
icebp
and
outsl
movsb
out
lret
jnp
in
mov
cmovnp
push
test
push
dec
das
or
lcall
sbb
rolb
and
push
mov
fwait
or
xorl
lods
lock
xor
xchg
add
sub
xor
mov
fdivrl
jae
mov
adc
stc
stos
dec
dec
mov
in
inc
inc
pop
out
cmp
ljmp
inc
mov
ret
xor
and
lea
js
ljmp
scas
xor
dec
sbb
cmpsb
push
loope
das
or
mov
rorb
and
mov
rcrb
ljmp
out
inc
fucom
lods
in
xorl
xchg
mov
jmp
ss
inc
clc
jl
lock
inc
mov
mov
xor
mov
add
dec
jge
bound
push
cs
pop
or
rorl
out
data16
ds
pop
xor
jp
ret
push
jns
stos
test
cmc
div
std
sub
ret
adc
scas
mov
lods
pop
jno
push
hlt
mov
daa
in
inc
test
pop
jp
shll
cmpl
mov
pop
dec
repz
outsb
insb
adc
jae
sar
sbb
sti
dec
adc
clc
sub
ret
pop
xchg
cmp
rol
mov
cmp
xor
inc
sarb
lock
adc
sub
and
ficompl
cmp
mov
push
cli
add
add
cltd
cmp
cmpb
inc
test
sbb
fidivs
mov
out
mov
mov
js
notb
cmp
push
loop
mov
or
and
ss
inc
ljmp
nop
sbbl
stos
and
adc
cld
sbb
and
push
lock
mov
inc
ret
adc
add
ret
push
in
leave
pop
clc
call
sub
lcall
test
sar
pop
leave
dec
sbb
js
fiadds
aad
xor
pop
and
cwtl
mov
out
push
jg
inc
shll
mov
fldt
inc
aam
jo
xor
sbb
add
inc
adc
iret
cmp
out
mov
mov
outsb
push
movsl
sbbb
push
dec
dec
pop
xchg
pop
jl
push
sub
xchg
call
iret
iret
pop
xor
out
aam
mov
insb
cltd
or
xchg
push
push
scas
add
aam
test
jl
push
mov
xor
test
lcall
fcompl
jecxz
pusha
pop
dec
out
jnp
mov
pop
insl
pop
icebp
or
hlt
push
call
or
or
xchg
jle
sbb
dec
insl
push
lea
pop
imul
int3
push
flds
out
out
mov
inc
sahf
adc
jno
into
pop
or
xlat
pop
int3
push
call
movsl
mov
or
fists
mov
add
lret
test
imul
xchg
test
stos
lods
in
jmp
cli
lock
xchg
rol
cmp
mov
xchg
or
jno
inc
cli
sub
fidivrs
test
push
mov
inc
jno
rcrl
cld
mov
xor
aas
pop
pop
out
daa
xor
inc
imul
test
jae
adc
ffreep
fld
mov
inc
mov
xchg
mov
dec
imul
mov
cs
in
adc
push
adcl
ljmp
movsl
adc
xchg
mov
idivl
add
arpl
hlt
les
cmc
xchg
ljmp
cmp
jb
subb
mov
lret
movsb
sti
imul
fadds
add
popa
aas
mov
repz
xchg
imul
out
xor
push
inc
iret
add
xchg
sub
dec
rcll
pop
inc
adc
pusha
gs
not
fsubp
sub
mov
clc
mov
jge
sub
xchg
cmc
loope
fsubrl
insb
pop
lods
ret
or
roll
jo
push
gs
xchg
ds
std
pop
popf
mov
int3
shr
and
dec
setg
cs
cmpsb
out
repnz
dec
sub
clc
mulb
ret
repz
popa
sbb
xchg
and
pop
xchg
dec
pop
pop
pop
mov
sub
mov
xor
outsl
cwtl
fimuls
loope
xor
jg
adc
insb
sar
lret
mov
loop
or
sub
adcl
int3
xor
cmpsl
ds
mov
negl
xchg
popl
out
or
repnz
pop
or
mov
xchg
sub
mov
xchg
sub
stos
push
in
das
fmull
nop
fldenv
test
dec
push
rolb
fcom
mov
insb
or
cmp
cmp
ja
rorb
popf
scas
insb
xorl
stos
add
adc
sbb
cs
cmp
stos
out
pop
enter
lcall
xor
pop
cmp
lcall
inc
sbb
out
adcl
adc
and
mov
orb
sti
mov
dec
lock
andb
outsl
movsl
cmp
jmp
push
ror
xor
cld
out
hlt
hlt
not
inc
jecxz
adc
dec
clc
cmp
stos
and
nop
sub
lods
push
mov
cmpsl
xor
sbb
push
jbe
jne
cmp
fstpt
mov
push
cmp
cmp
sub
xlat
inc
stc
dec
sub
jge
adc
stos
inc
test
mov
mov
ja
lds
pop
ja
and
es
fwait
mov
xor
clc
inc
cmp
test
ja
je
movsb
push
or
lods
loopne
movsb
cld
mov
jnp
imulb
and
mov
cmp
mov
movsl
jg
inc
lods
push
jb
pop
mov
cmpsb
cmp
mov
pop
lods
mov
sqrtps
stos
dec
xor
lret
insb
dec
rcll
dec
sbbb
jmp
push
dec
adc
aad
and
inc
lahf
dec
roll
adc
sbb
mov
lods
cmp
push
mov
adc
or
adc
in
jle
movsl
rol
mov
shlb
cmp
js
sbb
stos
pushf
pushf
xchg
jle
add
imul
push
xchg
pop
les
jne
xchg
sahf
andps
dec
lret
xchg
inc
std
sub
daa
xchg
sub
xor
or
movsl
inc
jo
cmp
fwait
mov
and
filds
xchg
in
sub
mov
sahf
ret
mov
aad
xorb
rcl
pop
dec
cwtl
add
xor
mov
sbb
push
lea
int3
insb
jno
insb
mov
jmp
xchg
test
push
ds
dec
inc
and
insl
cmp
jb
popa
pop
sub
dec
pop
stos
lods
mov
mov
inc
insb
push
dec
mov
mov
out
jbe
xchg
sbb
dec
or
mov
imul
cmp
pop
mov
dec
cmpb
xor
push
jmp
add
ja
sbb
ret
test
add
dec
xor
xchg
pop
pusha
lock
xchg
cld
in
icebp
test
or
pushf
xor
push
mov
andl
jne
loopne
cmp
sub
pop
cmc
or
cmpsb
addr16
lret
add
mov
cmp
nop
xchg
pop
outsl
shl
push
mov
outsb
inc
inc
jne
xor
jne
xor
xor
fdivrs
jns
sub
xor
arpl
sub
out
add
js
add
add
test
stos
pushf
xchg
xor
push
cmp
fadd
cmc
test
outsb
scas
mov
js
loopne
cli
sub
xor
mov
mov
push
lods
mov
repz
std
daa
repz
mov
lret
daa
dec
push
cli
scas
jmp
inc
loop
jb
ds
std
sbb
push
or
js
andl
sub
test
inc
jne
xor
wrmsr
mov
fidivl
sub
loope
daa
lods
in
pop
add
or
in
sub
lahf
jns
mov
adc
xchg
inc
adc
push
push
test
or
push
in
xchg
jb
mov
cmp
xor
arpl
push
cmp
bound
addr16
fdiv
fs
push
cmp
sub
pop
mov
mov
dec
xchg
jmp
mov
xchg
sub
cmpsl
popf
int
andl
mov
aas
pop
hlt
in
xor
mov
test
nop
sub
cmp
or
imul
stos
loop
jmp
je
fistpl
jl
jne
sub
add
fcmovu
int3
pop
xchg
pop
cmp
aam
fwait
out
mov
cmp
test
mov
xor
scas
cmp
pop
std
and
aaa
push
cmc
cltd
fsubs
push
jae
js
jl
or
js
sbb
push
bound
movsb
int3
dec
cltd
out
stos
jne
xchg
ljmp
stos
mov
hlt
xorl
cmc
shrl
sarb
outsb
out
arpl
dec
repnz
loope
xor
outsb
outsl
push
or
jmp
lcall
insb
jnp
push
xor
dec
les
pop
mov
dec
call
cltd
stos
int3
lods
pusha
movsb
dec
enter
ja
cld
mov
jmp
and
add
pop
fs
adc
jle
jbe
mov
cmp
mov
inc
cmpsb
or
sbb
dec
jae
cmp
mov
sub
adcl
sub
adc
xchg
inc
data16
loope
mov
cmpsl
mov
pop
vmwrite
cmpsb
loopne
into
rorl
ret
das
movsl
dec
dec
test
mov
cmp
mov
cmp
add
mov
adc
test
ffreep
lds
push
pop
movsb
adc
ds
das
xor
sbb
sub
stc
test
or
repnz
inc
jo
jnp
mov
mov
and
sub
xor
pop
push
xchg
mov
push
loop
inc
bound
mov
push
sbb
xlat
jp
adc
pop
inc
sub
dec
hlt
cmpsl
and
mov
adc
aam
or
mov
mov
adc
jns
fildl
fst
lcall
sub
mov
test
ja
cmp
pop
imul
pop
mov
sbb
dec
fld
xor
ja
js
loopne
subl
aad
mov
mov
cld
das
fnsave
adc
rclb
pop
lds
mov
loope
mov
fisubrs
inc
add
out
sbb
ret
dec
enter
aaa
popa
in
and
xchg
mov
adc
subl
jg
cmp
or
pop
inc
mov
lcall
std
shlb
jne
ret
mov
mov
aas
enter
int
divb
xchg
jle
inc
nop
les
jg
ss
push
pop
jmp
pop
or
pop
cwtl
jle
mov
int
hlt
in
ja
mov
pop
sbb
inc
outsb
cli
push
and
mov
iret
enter
mov
xor
pop
mov
fs
mov
pop
andb
mov
cmp
fsubrs
mov
mov
mov
bound
daa
sarl
repz
jns
dec
ficoml
mov
inc
in
lds
std
loope
test
jg
push
decb
pop
inc
jle
cmp
sub
aas
bound
mov
stos
nop
cmc
mov
jae
ljmp
cmp
xchg
jmp
ficoml
cmp
jb
jg
or
mov
sub
xor
xor
or
jno
fsubl
mov
or
cs
jl
mov
dec
push
and
bts
mov
xor
push
rol
cltd
xor
xor
mov
pop
popa
popl
std
out
stos
and
push
and
pop
sbb
fnclex
dec
and
daa
mov
cs
mov
scas
subps
dec
push
and
xor
out
shll
ss
repnz
pop
add
push
pop
cmpsl
test
and
sub
jp
and
test
push
lahf
roll
pop
call
cld
loope
aam
sbb
sub
push
push
xlat
lock
pop
mov
mov
push
int3
cmp
loope
jp
lcall
enter
jmp
movsl
xchg
fwait
jge
in
pop
adc
adc
mov
add
addr16
adc
stc
pop
jle
cltd
mov
xor
shr
sbb
loopne
inc
inc
pop
jl
pop
sbb
xchg
cltd
push
mov
jecxz
dec
in
mov
lods
cmpsl
mov
lock
or
cmp
mov
or
and
imul
jge
je
lock
orb
mov
xor
pop
test
rcrb
jmp
in
rorb
cmc
xchg
sbb
xchg
pop
out
leave
adc
or
or
in
push
add
arpl
lcall
sub
and
dec
adc
fwait
sti
push
sub
js
inc
xchg
mov
mov
ljmp
sub
cltd
jg
je
cmp
inc
arpl
xor
sarb
sbb
fdivr
add
fcoml
cli
js
pop
in
lods
repz
popa
push
mov
sub
call
dec
cmp
mov
lcall
shrb
imul
rorb
cmp
mov
dec
adc
incl
fisubl
fbld
or
outsl
shll
xchg
ss
inc
push
scas
out
mov
rclb
leave
aad
adc
cmpsb
mov
jnp
lds
lahf
inc
rcrl
sbb
adc
gs
in
adc
jno
mov
jns
jnp
xchg
jno
sub
aad
sub
sbb
iret
lea
jle
dec
out
stc
mov
jl
push
cmp
or
mov
xchg
pop
out
loope
dec
into
test
xchg
cmp
adc
and
push
mov
das
sub
push
cmp
pop
jne
jae
int3
mov
cs
cmp
mov
aam
cwtl
inc
push
out
stos
test
push
je
mov
cmp
test
cmp
sti
in
or
cs
es
pop
inc
or
push
in
jle
push
cmp
mov
xor
vmovupd
jecxz
fsubrl
ja
adc
pop
add
pop
mov
xchg
jnp
add
or
enter
movsb
fisubl
fistl
sub
push
mov
mov
nop
in
out
ds
loop
dec
testl
sarb
mov
bound
xchg
test
xor
rol
imul
out
add
subl
push
movsl
scas
xchg
lahf
cmp
or
push
sbb
push
and
xchg
cmp
and
lahf
arpl
int3
mov
add
dec
mov
push
dec
lahf
push
or
imulb
stc
fisttpll
cmp
subb
sahf
cli
cli
inc
mov
sub
mov
iret
xchg
mov
arpl
jmp
fsubs
jge
mov
cmp
adcb
fs
adc
pop
in
popf
sub
and
sub
outsb
or
pop
jne
repnz
inc
je
add
loopne
xchg
push
negl
add
lds
xor
aad
je
dec
adc
xchg
imul
sahf
popf
dec
pusha
test
scas
lret
mov
pop
adc
cmp
lds
push
jmp
lret
addr16
mov
jno
sbb
push
mov
ret
subl
xor
or
test
or
jl,pt
jecxz
or
pop
rcr
mov
out
roll
outsl
dec
mov
pop
std
xchg
mov
mov
and
xorl
aad
sbb
push
fwait
clc
sub
loope
sub
dec
pop
fs
cli
sbb
enter
xor
add
insb
mov
jnp
push
xor
lds
mov
xorl
mov
ja
clc
or
loopne
lret
mov
fiadds
in
xor
imul
dec
je
xor
mov
mov
js
int
push
mov
cmp
jno
imul
loopne
xchg
push
dec
repz
or
sbb
or
push
stos
and
jne
mov
mov
sub
jne
sub
mov
fdivrs
or
jns
ret
daa
dec
cmp
inc
jmp
mov
or
out
js
pushf
push
jg
das
out
jle
or
add
shlb
sub
push
xor
nop
and
ret
dec
iret
sbb
add
dec
es
adc
lcall
sbb
sbb
pop
addr16
dec
jbe
mov
pop
push
xchg
mov
lret
inc
adc
mov
pop
sub
xchg
lds
jnp
mov
mov
inc
xor
add
and
jp
pop
cmp
pop
cli
sbb
adc
or
adc
inc
ljmp
mov
and
xchg
xchg
dec
or
jle
inc
push
jl
xchg
imul
inc
inc
out
push
xchg
dec
mov
push
nop
or
dec
jnp
lds
xorb
mov
adc
jmp
out
ror
pop
cmp
xchg
int3
sbb
jnp
std
fcomi
push
sbb
loopne
pop
add
imul
xchg
or
and
fcomip
inc
mov
inc
sarb
call
jg
add
les
pop
or
je
push
fnstenv
aam
dec
cmpb
loope
pusha
jmp
je
add
sbb
mov
mov
mov
bound
pop
rcr
add
adc
jecxz
xchg
dec
stos
int3
and
lahf
mov
jae
js
rep
fs
movsl
fwait
je
mov
sub
mov
or
xchg
sti
jns
test
inc
sub
dec
mov
and
pop
test
shll
xor
outsl
push
cwtl
and
sub
dec
andb
das
mov
sub
pop
xor
ret
stos
out
push
push
and
mov
je
dec
adc
loopne
fdivrs
cmp
popf
or
mov
call
pop
lret
cwtl
inc
mov
sub
mov
dec
test
fidivrs
addl
xlat
int3
pop
dec
rcr
adc
ljmp
sbb
repnz
fcoml
dec
push
cmpsl
xor
dec
mov
adc
in
and
ret
pop
test
adc
outsb
pop
fs
or
sbb
ds
sti
push
jecxz
insb
pop
stc
sbb
xor
mov
std
dec
sbb
mov
jl
gs
mov
mov
mov
inc
sbb
ds
and
lea
imul
mov
mov
insb
fbstp
push
mov
sbb
jo
lea
pop
insb
test
adc
in
das
mov
and
mov
mov
es
loopne
mov
mov
imul
insl
mov
xor
test
and
mov
inc
push
in
xchg
movswl
scas
xchg
in
rcl
cmp
es
loop
loop
push
ljmp
leave
mov
mov
mov
clc
adc
jnp
ficoml
cmp
call
adc
and
mov
add
insb
and
subb
push
or
mov
mov
mov
dec
inc
mov
jg
lods
frstor
sbb
scas
lea
sti
adcb
push
adc
dec
repnz
addr16
aad
jbe
and
jns
test
fptan
xor
push
mov
mov
int3
cmp
out
xchg
pushf
push
xor
js
sub
and
ss
jmp
fs
mov
cmp
or
ffreep
pop
and
dec
ds
rol
xor
and
outsl
jne
lret
in
adc
btcl
in
ret
and
dec
fiadds
in
fsubl
jne
push
adc
pushf
sub
fcompl
ljmp
adc
jecxz
orl
enter
stos
jge
jge
xor
push
push
pushf
dec
iret
dec
outsb
cmp
cmp
rorb
ja
mov
icebp
aas
jbe
push
push
rcr
aas
push
or
jns
bound
mov
jne
xor
inc
push
inc
imull
jge
add
aaa
jle,pt
jge
or
repz
out
add
std
lods
stc
fdivrs
lret
ja
dec
mov
repnz
shll
aam
clc
mov
pop
icebp
dec
or
push
into
jg
inc
or
seta
push
sbb
mov
xchg
xchg
in
xchg
fbstp
jae
adc
mov
mov
aaa
jns
sbb
pop
adc
lock
test
and
into
outsb
ret
mov
pop
lods
subb
sbb
xchg
inc
jo
cmp
jbe
rcrb
mov
mov
xor
sahf
clc
fildl
mov
mov
jbe
mov
clc
imul
addr16
dec
subl
mov
jmp
mov
xor
scas
jnp
call
enter
mov
imul
rcr
sti
out
jmp
daa
cmpsl
add
aad
pushf
inc
std
xchg
iret
movsb
movsl
pop
sub
insl
test
xlat
lahf
ret
clc
push
mov
cltd
movsl
push
pop
mov
sub
or
add
sbb
pusha
and
mov
int
xchg
ljmp
xchg
es
es
add
fstpt
movsl
btr
cli
push
sub
lods
dec
int3
rcll
testl
cltd
in
push
adc
jge
mov
add
fmuls
cmp
les
rolb
popf
jo
lahf
daa
sbb
xor
xchg
mov
mov
fidivrl
std
movsl
push
stos
cwtl
jbe
jns
scas
in
adc
enter
or
insb
push
mov
daa
repz
mov
and
subl
adc
mov
shll
insb
mov
jecxz
inc
nop
mov
push
xor
mov
jo
sbb
or
leave
xor
je
sbb
or
cmpsl
fwait
cmpsl
jmp
xor
sti
shr
stc
dec
aam
lds
imul
mov
das
add
shrb
or
mov
fldenv
popa
mov
in
fldl
fsubrs
cli
ja
les
cmpsl
adcb
inc
jle
mov
cli
sub
cmpsb
sub
xor
cmp
mov
setb
and
movsb
repnz
out
xor
cmc
inc
xor
rorb
mov
add
mov
jg
xlat
adc
push
push
cmp
incb
out
mov
test
or
push
mov
shlb
xchg
pop
mov
inc
push
pop
sub
out
and
add
call
add
mov
sub
fldl
orl
dec
rolb
cmp
mov
xchg
push
mov
mov
or
lea
or
xor
aas
jl
repnz
stos
je
dec
pop
das
xor
mov
lret
call
add
pop
mov
mov
loop
push
or
and
or
mov
ss
mov
xchg
or
adc
movsb
push
fwait
scas
dec
pop
inc
sub
cmpsl
and
pop
cltd
sbb
daa
fs
inc
adc
sbb
mov
mov
mov
popa
ss
stos
pop
mov
int
test
dec
inc
or
push
sub
das
mov
aad
faddl
loope
aas
mov
push
mov
out
mov
call
sub
ret
pop
fwait
mov
mov
xchg
jbe
jmp
pushf
in
cmpsl
xchg
pop
xor
mov
je
xor
cmp
push
nop
mov
cmc
and
xchg
jnp
ljmp
mov
push
int3
push
stos
lds
mov
pusha
outsl
std
arpl
cmp
enter
push
and
add
sub
add
repnz
in
fstl
and
add
inc
andb
push
xchg
std
adc
cltd
or
pop
enter
adc
and
cld
add
sub
mov
push
jns
daa
jmp
xchg
mov
pop
xorb
cs
mov
mov
sarl
and
ret
xchg
movsb
mov
ror
outsl
iret
int3
das
inc
mov
in
fidivs
mov
pop
sahf
cwtl
jne
into
sti
popa
repz
add
adc
mov
fdivs
pop
add
in
sti
das
add
push
mov
pop
jecxz
aas
dec
mov
sub
jne
outsl
dec
sar
ror
subb
mov
add
aad
jge
test
sub
inc
shll
pop
mov
sti
dec
adc
xchg
adc
aad
xchg
or
mov
xor
inc
mov
mov
shll
xchg
cmp
xor
pop
mov
jnp
and
mov
movsl
or
jb
shl
sti
xchg
xor
lock
movsl
hlt
aam
push
out
pop
fs
subl
jbe
popf
sbb
ljmp
iret
lcall
jb
push
ljmp
fisubrs
nop
cmpsl
movsl
aad
aaa
imul
xchg
inc
inc
xchg
and
dec
test
mov
mov
sub
outsl
ret
pusha
push
push
andb
pop
jbe
movsl
push
ja
dec
dec
xchg
imul
scas
jge
iret
fistps
push
repz
jle
or
and
shrb
sbb
imul
lahf
jle
adcb
jae
mov
xor
cld
addr16
fwait
push
pushf
sub
bound
js
jl
ret
subl
addr16
loope
outsl
sbb
jnp
adc
cltd
xchg
es
adcb
sub
mov
push
jmp
arpl
cli
jns
int3
enter
shlb
xor
mov
fidivs
mov
std
insb
xchg
xor
mov
xchg
clc
jg
loopne
aaa
xor
lcall
cmp
insb
fldcw
or
push
add
in
push
cmp
xor
and
push
std
scas
in
sub
rclb
test
mov
xchg
and
mov
rorb
int
and
adc
jge
popa
jo
clc
mov
dec
mov
add
loope
jns
mov
in
mov
imul
sub
add
shll
add
rcr
sbb
dec
mov
mov
outsb
push
cli
mov
mov
jbe
inc
mov
mov
sub
sahf
inc
stos
cmpsb
sub
pcmpeqb
jl
mov
faddl
shlb
movsb
xchg
and
pop
jl
mov
or
push
inc
std
mov
movb
push
jg
jno
mov
sbb
mov
repz
mov
int3
imul
add
cmp
pop
push
in
loopne
stc
or
loop
test
cmc
sahf
mov
push
push
test
adc
mov
cmp
lock
sbb
imul
inc
stos
inc
xor
cmp
inc
push
inc
mov
inc
jns
fldenv
repz
js
es
mov
cmpsb
cmp
sub
mov
test
jg
repnz
pusha
cmp
mov
cmp
mov
daa
or
sbb
and
loope
sbb
adc
pusha
add
lods
bound
aas
imul
fdiv
push
sbbb
std
jbe
clc
xchg
jns
lahf
imul
xchg
roll
insb
sub
mov
sub
roll
ret
test
pop
out
daa
lret
dec
mov
xchg
lock
jecxz
leave
jp
pop
imul
ja
in
mov
fidivrl
add
fwait
in
popa
push
mov
inc
stc
and
std
push
jo
dec
and
mov
outsl
and
mov
aam
testb
or
pushf
add
adc
adc
mov
outsb
js
aaa
pop
sub
test
imul
pop
and
mov
jle
xor
push
push
jp
push
ss
ret
mov
cmp
mov
or
jecxz
push
das
adc
xor
and
jmp
adc
bound
xor
es
xchg
ja,pn
lret
inc
xchg
aaa
insl
add
xor
movb
sub
xchg
out
adc
orl
test
arpl
mov
shll
icebp
or
jno
bound
adc
or
push
test
jl
mov
arpl
in
mov
add
dec
adc
mov
mov
stos
pop
mov
fdivrs
aad
xor
stos
jae
clc
test
xchg
cld
inc
cmpsb
testl
cmpsb
xor
and
les
ljmp
lea
rcll
and
xor
mov
cltd
insb
outsb
push
roll
sbb
das
and
ljmp
mov
sahf
outsl
push
push
cmpsb
xchg
xlat
mov
dec
fldcw
lods
addr16
adc
daa
inc
mov
fisttpl
lahf
xor
sbb
push
popf
inc
push
sub
jmp
sbb
and
fldt
aas
lds
and
xchg
or
push
sbb
call
mov
inc
fisttps
xor
mov
adc
cmpsl
lret
adc
jnp
and
inc
outsb
in
loope
in
fisubl
jmp
push
cmpsb
lcall
dec
les
roll
pop
add
fbld
fstsw
and
pop
scas
fisubrs
loop
lds
cmp
clc
ss
rcrl
push
mov
test
jno
jl
ja
aaa
add
aas
jnp
dec
lods
fwait
imul
jl
mov
mov
xchg
arpl
or
ss
mov
push
push
movsl
je
stc
lret
jg
mov
adc
add
jmp
pop
rorb
sti
imul
sbb
test
cltd
out
sub
and
je
ds
movb
pop
jecxz
xor
in
cld
adc
jge
psllw
inc
inc
aam
jmp
inc
pop
fmuls
jnp
bound
lds
push
gs
ficoms
jl
adcb
dec
mov
repz
cmp
and
cli
iret
xlat
mov
in
jmp
cmp
dec
push
out
loope
pop
fwait
xorb
pushf
push
mov
cmp
mov
arpl
adc
aad
mov
pop
add
ret
or
jae
or
adc
in
pop
xchg
out
pushf
sub
dec
int
pop
cmp
jl
lods
out
jmp
jo,pt
stc
cwtl
iret
fnstsw
adc
out
mov
add
jl
cli
or
push
dec
pop
fcompl
add
stos
xor
lds
sbb
inc
imul
movsl
push
and
cmp
pop
or
mov
and
outsb
incl
mov
mov
daa
pop
push
push
dec
mov
es
add
mov
and
adc
lahf
pop
push
sbb
pop
test
and
ret
jle
arpl
and
xchg
fdivrs
das
xchg
das
lret
jne
mov
sti
arpl
loopne
mov
push
mov
or
out
bswap
cmpsl
shll
or
sub
popl
inc
and
test
jbe
pop
mov
icebp
add
cmpsb
shrb
push
pop
leave
fistpl
xchg
jne
int3
cmp
movsb
mov
rcrb
adc
cltd
pop
jne
ds
mov
sti
inc
movsl
cmpb
mov
sbb
push
sub
imul
insb
pop
add
and
pop
in
pop
jae
sbbb
dec
les
jnp
pop
cmp
jg
aad
jmp
int
je
testb
scas
rcrl
or
or
mov
mov
outsl
add
xchg
ljmp
sbb
add
xor
mov
adc
cltd
xchg
cmp
cmpsl
pop
int
cmp
ss
mov
cld
dec
mov
xchg
adc
sub
or
push
mov
pop
pop
leave
fimull
mov
mov
pop
je
in
inc
jge
rdmsr
mov
jae,pn
xor
sahf
ret
adc
loopne
sub
shlb
mov
rolb
jge
or
ja
jmp
std
or
mov
push
in
fistl
aas
out
sti
cmpb
sbb
mov
xchg
jge
fstl
int3
sub
aam
and
mov
aam
xchg
lock
xor
dec
outsb
sub
popa
lcall
mov
mov
and
jl
push
seta
les
int
call
dec
mov
nop
cmp
mov
mov
sahf
aam
mov
cmc
jp
sub
xor
mov
inc
stos
push
pushf
rol
or
pop
jg
mov
inc
lock
sbb
cmp
and
add
jb
pop
dec
xchg
cmp
imul
inc
xchg
ret
adc
fisttpl
add
movsl
jnp
fwait
mov
stos
xor
cmc
mov
out
in
xchg
cwtl
insl
or
mov
in
cmc
mov
mov
repnz
and
int
repnz
push
jne
mov
sti
dec
xor
jecxz
shrl
pop
sahf
pushw
test
pop
inc
push
data16
shl
pushf
xchg
das
pop
cmp
pop
push
outsl
outsl
xlat
jmp
push
jno
jmp
cli
mov
cmpsb
aaa
jno
mov
cmpl
fbstp
mov
jg
or
fwait
xchg
outsl
mov
adc
mov
mov
xchg
test
pop
push
pop
lock
sub
icebp
pop
out
inc
cs
insl
icebp
mov
and
cmp
push
roll
pop
mov
add
adc
fisubrl
xor
stos
arpl
mov
mov
cmpsl
jne
xchg
ljmp
sbb
int3
sarl
and
aas
les
sub
pop
mov
ja
negb
add
aam
dec
push
mov
mov
ret
or
sbb
ror
jnp
cmp
jns
das
ret
mov
xchg
mov
imul
inc
sub
push
movsb
test
and
test
sub
push
jmp
add
jp
ret
lahf
jne
mov
cwtl
jge
cmp
pop
pop
jnp
jno
and
and
dec
jge
clc
rep
aad
test
pusha
fs
fisttpl
fwait
pop
insl
dec
sbb
divb
dec
nop
pop
stos
cmp
popf
pop
test
ss
push
or
xor
out
mov
mov
out
and
xor
xor
and
jne
mov
push
dec
fdivrs
fwait
sub
xor
adc
jo
mov
sbb
out
leave
outsb
in
loop
subl
cmpsl
push
xlat
mov
clc
test
add
loopne
shll
cmp
xchg
cmpsl
cltd
push
imul
aaa
pushf
in
shll
xchg
or
cmp
inc
sub
mov
mov
mov
pushl
xor
cmc
sbb
jne
sbb
in
fcoml
out
push
dec
push
out
jge
in
je
fimull
fisttpl
into
mov
jns
imul
xor
insb
push
jo
outsb
lock
jo
insb
push
pop
cmp
nop
int3
sub
adc
pop
roll
adc
daa
fbld
in
nop
cmc
jne
xor
shrb
scas
mov
xchg
dec
psllw
jno
call
mov
push
sub
adc
xor
sahf
or
jg
lea
dec
sbb
ljmp
and
lock
pop
fwait
dec
push
and
push
adc
std
ret
push
jecxz
test
pusha
jae
test
or
pop
add
stos
mov
inc
pop
push
jg
or
aaa
push
jmp
cmc
rcrl
push
xlat
inc
popa
add
lock
nop
mov
jne
loopne
decl
sub
or
adc
rol
and
call
sahf
data16
lret
push
mov
adc
mov
jnp
in
sub
push
push
pop
and
add
adc
les
mov
adc
cs
xchg
adc
insb
and
push
icebp
adc
es
daa
das
xor
aam
or
cmpsb
mov
or
inc
mov
sub
push
out
mov
xor
push
dec
cmp
lods
fldl
mov
sub
aas
xchg
mov
push
insb
jo
xchg
mov
aad
leave
addr16
andl
popf
jae
vprotw
outsb
pop
and
mov
mov
loope
and
lret
mov
xor
in
lods
xchg
xor
stc
je
fnstcw
or
push
mov
sub
mov
stos
adc
mov
shlb
loopne
iret
outsl
pop
mov
fmuls
jl
js
inc
cmp
add
insb
pop
mov
or
aad
xor
subb
pop
jp
dec
sti
out
outsb
jmp
mov
xchg
ficoml
add
xor
inc
push
cmp
js
adc
lahf
xchg
popa
xchg
dec
insb
jge
pusha
xor
or
push
xchg
arpl
sbb
clc
inc
in
stc
or
les
mov
fisubs
das
cltd
push
cmc
mov
or
pop
cmp
or
xchg
push
add
xor
push
mov
aad
inc
dec
mov
aam
fs
cmp
sub
mov
mov
clc
add
cs
mov
cli
cmp
cmc
cli
sub
dec
fwait
subl
and
sbb
out
es
sbb
mov
popa
cmpsl
in
add
stc
lcall
xor
cmpsb
into
sub
add
pop
addr16
pop
stos
jne
movsb
add
cmpb
orl
lret
and
insl
popf
int3
jl
mov
cmp
loope
movsb
jae
aaa
pop
xchg
add
mov
ljmp
imul
add
mov
into
pop
mov
mov
lock
sub
push
enter
gs
cmpsb
sub
addr16
ljmp
mov
testl
xor
sub
and
sbb
popa
adc
add
or
jge
test
or
out
xchg
jne
mov
rcll
repnz
std
flds
cltd
imul
pop
jb
jle
mov
lods
cltd
add
imul
or
loopne
and
sub
shlb
dec
pavgb
jne
mov
sub
sbb
rcll
arpl
mov
aas
mov
popf
adc
loopne
rcrb
insl
outsl
push
nop
push
test
divl
pusha
push
das
ja
sub
jecxz
pop
cmp
or
xchg
push
or
inc
test
mov
out
out
popf
xchg
in
lcall
andl
cmp
sti
xor
call
cmpb
imul
fmuls
cld
fidivrl
fwait
push
lds
ljmp
andl
pushf
adc
jmp
jecxz
pop
mov
or
jb
shlb
movsl
xchg
sub
inc
paddd
dec
xor
lahf
push
or
shrb
xchg
aam
test
mov
xor
mov
aas
mov
mov
xchg
imul
scas
push
and
inc
in
pop
pop
dec
cwtl
test
mov
mov
mov
in
dec
test
fs
pop
and
cli
mov
push
daa
std
sub
outsb
cmp
cld
scas
add
mov
and
dec
cmp
jbe
movsb
gs
lret
lret
mov
mov
push
filds
lods
aaa
push
popf
adc
js
stos
cmp
mov
iret
pop
pop
push
sti
movsl
fimuls
ror
or
add
cmc
sub
fs
pop
das
inc
es
int3
xchg
enter
es
test
lea
add
adc
xor
ret
and
mov
cmpsl
sub
sub
or
xor
xchg
and
ja
scas
imul
adc
mov
adcl
mov
xchg
fldcw
idiv
lret
sub
mov
pop
push
lret
and
imul
adc
sub
mov
ficompl
lds
cmpsb
mov
fwait
jecxz,pn
push
dec
jl
cmp
testl
or
fwait
outsl
adc
jbe
dec
mov
out
sbb
push
test
push
sbb
inc
movsb
popf
fdivr
pop
aam
inc
shrl
ret
imul
jp
ljmp
test
aad
sub
pop
push
in
mov
or
cwtl
stos
push
imul
loopne
in
lods
mov
sahf
jbe
dec
push
in
mov
adc
xchg
je
into
adc
sub
in
in
cmp
ret
adc
imulb
jne
int
repnz
popf
and
ror
sub
je
outsl
mov
inc
push
lea
jge
test
mov
mov
inc
pop
mov
mov
mov
outsl
sub
cmpsl
mov
jb
out
sbb
int3
pop
out
test
clc
push
stos
push
jo
dec
dec
addr16
and
mov
mov
imul
push
ret
lods
orl
insl
insl
pop
push
das
ljmp
movsl
shll
jmp
nop
and
jne
jbe
jo
fsub
mov
sub
xchg
enter
dec
mov
jl
add
cmp
ret
adc
jno
test
js
test
std
pushf
mov
cmpsb
rcl
shlb
dec
es
iret
and
sti
jge
lcall
mov
xor
jne
add
xor
popa
or
push
push
mov
mov
adc
sub
pop
jle
push
jp
pop
jb
arpl
jbe
lea
loop
sbb
jl
outsl
loope
cwtl
xor
repz
clc
lock
in
cmp
fsts
add
pop
dec
loope
and
pop
andl
cld
out
sarb
out
cmp
cli
jge
lea
xor
test
jmp
dec
insl
mov
add
xor
sbb
movsl
sbb
mov
loop
insb
inc
xor
inc
and
xor
popf
insb
je
mov
into
out
push
gs
cwtl
mov
cmpsb
inc
jmp
inc
xlat
pop
push
xchg
push
repnz
mov
test
or
or
push
sub
jae
inc
test
cld
sarb
mov
pop
cmp
jo
push
insb
cmc
xlat
xchg
cld
mov
mov
lret
cmp
jnp
loopne
push
inc
cs
fwait
js
mov
es
lea
in
test
inc
sub
mov
jae
lds
imul
lods
or
jbe
rolb
xorb
in
lds
xchg
inc
loop
clc
inc
into
movsl
fistl
add
adc
cmp
jbe
mov
xor
ljmp
sbb
movsl
xchg
shll
cmp
mov
pop
std
sub
jge
inc
push
pop
int3
adc
stc
dec
mov
aaa
iret
pop
aad
mov
adc
dec
inc
and
rorl
int3
dec
test
xchg
push
and
xchg
rcr
mov
out
adc
cmc
push
cmp
lcall
sbb
push
xor
and
or
lea
test
jle
rcll
into
std
jmp
xchg
aaa
mov
sub
les
cli
xchg
mov
mov
pop
ret
adc
sub
add
xchg
mov
addr16
mov
push
insl
xlat
cmpl
mov
adc
pop
add
push
sub
popw
lods
mov
dec
and
jle
aaa
pop
out
sub
ficoml
ss
or
push
imul
ret
pop
push
and
out
inc
mov
cmp
cmpsb
out
shrl
xor
push
ret
outsb
lret
js
xchg
fdivrs
mov
shll
out
pop
push
dec
xchg
mov
push
xchg
popf
xchg
xchg
xor
or
into
and
ret
das
in
sbb
pop
subl
xor
jecxz
mov
aas
bound
pop
bound
jp
lea
lods
xor
daa
in
js
lea
or
lock
adc
jo
jecxz
scas
pusha
out
jns
int3
lret
push
adc
inc
pop
leave
ja
in
xchg
stos
mov
inc
in
ss
test
cwtl
xlat
push
pop
nop
xchg
mov
or
test
jg
mov
loopne
sbb
jmp
stos
notb
faddl
fwait
int
dec
pusha
lods
or
jmp
sahf
aaa
mov
testl
sbb
sbb
ret
hlt
xchg
adc
jne
test
jns
mov
jbe
xchg
mov
xor
imul
sbb
imul
dec
cmp
imul
stc
jg
sbb
mov
jg
jns
movsl
frstor
in
jbe
ja
nop
xchg
cld
bound
sti
flds
mov
mov
pop
jp
ret
dec
push
popa
inc
add
lret
icebp
outsb
pshufw
ret
adc
pusha
mov
aas
addl
mov
or
fstp
mov
mov
pop
int
popf
inc
das
enter
in
mov
inc
nop
mov
testb
sbb
jns
push
lcall
push
mov
dec
fsubr
hlt
into
jecxz
in
les
addr16
outsb
add
lahf
ljmp
push
in
hlt
mov
imul
jl
jp
ds
sbb
popa
sti
push
clc
pop
and
int
xchg
mov
sbb
cmp
xor
dec
mov
gs
je
sbb
repz
das
mov
mov
stc
push
and
pop
push
add
mov
and
enter
int
sub
mov
aam
lods
mov
mov
mov
cli
in
testb
stos
jmp
aad
emms
pop
inc
dec
out
xlat
dec
test
or
push
loope
sub
stos
fidivrs
aaa
xchg
inc
popa
std
ficompl
mov
pop
and
das
jl
fdivl
mov
fidivs
mov
sbb
cmpsl
mov
adc
inc
mov
fdivrl
or
inc
and
lret
and
jg
adc
fcmovnbe
sub
and
out
cmp
fwait
xor
fidivl
mov
dec
adc
movsb
inc
insb
inc
xchg
cmp
or
bound
cmc
repz
icebp
sbb
fstpl
sbbb
mov
add
ja
add
rcrl
aas
mov
sbb
and
cmc
push
outsl
mov
mov
add
or
jb
dec
int
inc
loope
rolb
and
push
rcrb
cltd
fdivrs
movsb
imul
inc
into
shrl
mov
or
mov
mov
rcll
mov
jb
xchg
inc
fs
sub
loope
sti
adc
out
lcall
xchg
leave
mov
dec
sbb
mov
pop
push
cmp
aad
movsb
out
adc
pusha
xor
push
jg
sti
pop
inc
dec
push
data16
inc
scas
shll
cld
roll
mov
js
fiadds
xchg
stos
or
and
fldl
inc
adcb
and
inc
stc
dec
push
cmpb
shll
int
sbb
daa
in
fucom
stc
push
or
push
jbe
cmp
cmpsb
and
imul
push
inc
push
pop
bound
test
rcrb
dec
shll
loope
mov
in
pop
movsl
movsb
in
ds
sar
icebp
adc
adc
inc
lahf
bound
mov
inc
cwtl
jbe
sbb
pop
or
inc
sub
push
lret
cmp
hlt
adc
mov
stc
dec
sub
gs
mov
fs
ljmp
sub
in
test
pop
or
xchg
pushf
test
cmpsl
adc
dec
mov
add
adc
cmc
jle
call
pop
cmp
mov
jbe
outsb
out
inc
push
mov
jne
sbb
int3
or
dec
jne
and
aad
jb
push
fdivrl
lret
inc
xlat
mov
fcomps
push
sbb
sti
mov
std
push
test
adc
sub
xchg
xor
gs
xchg
nop
aam
push
inc
test
nop
xchg
and
sbb
cltd
test
jecxz
popf
dec
fldcw
push
push
or
jecxz
andb
inc
out
movsl
stos
scas
sub
jg
xor
sbbl
jge
or
jl
xor
leave
ret
cmpsb
pop
je
movsb
test
inc
lock
xrelease
mov
int
clc
shll
stos
das
ss
shll
int
cmp
fsubrl
cmp
movl
frstor
mov
pop
pusha
pusha
mov
add
repz
sbb
xor
cltd
and
iret
dec
aas
iret
ja
xchg
and
push
cli
push
fidivl
inc
cmpsl
rcrl
sbbl
loopne
out
and
ds
jns
cmp
dec
movsb
pushf
mov
movsl
insl
out
push
jle
rolb
shlb
mov
sbb
add
cld
push
in
mov
fwait
aas
out
inc
in
icebp
xchg
mov
stc
push
movsb
ja
popa
add
mov
mov
mov
jae
push
inc
xor
mov
push
iret
scas
mov
insl
ret
push
xchg
xchg
mov
and
mov
insb
mov
insl
adc
and
inc
xchg
repz
add
pop
lds
int
jb
xor
stos
jecxz
mov
ljmp
xchg
orb
shl
xlat
jae
fldenv
add
fcmovne
jecxz,pn
shr
fwait
lods
mov
ds
sub
ljmp
les
mov
fs
mov
lret
adc
mov
cmc
out
pop
sub
jns
insl
imul
mov
cmc
pop
adc
loopne
in
lahf
sbb
lock
cmp
dec
and
and
jne
pop
enter
stos
push
fcomi
mov
mov
imul
rorl
jl
imul
push
fldl
adc
test
xchg
cmpsb
rcr
in
sbb
xor
int
mov
pop
test
icebp
cmp
sub
mov
rcll
pop
mov
cmpl
ja
push
cmp
stos
adc
add
or
push
popa
xor
addb
inc
aad
loope
das
mov
dec
xchg
xchg
fsubrs
jmp
sub
xchg
jmp
ljmp
or
ljmp
sahf
and
pop
or
and
shll
mulb
cmp
ss
push
clc
jl
fbstp
mov
sbb
xchg
es
fs
fwait
jbe
or
div
leave
test
sbb
ss
addr16
test
cmpsl
movsl
push
sub
jl
xor
jmp
cs
pusha
rcr
dec
jae
add
rcrl
jnp
test
xchg
daa
mov
fdivl
push
js
out
inc
jg
jge
movb
arpl
stos
xor
imul
adc
popa
jnp
test
pop
out
loopne
inc
sub
pop
dec
into
movsl
mov
hlt
jnp
and
cmp
add
mov
shl
stc
shlb
fdivs
aas
jbe
testl
push
pop
stc
mov
adc
stos
jl
std
addr16
jns
filds
outsb
pop
mov
js
add
sahf
jmp
jnp
add
outsb
aam
scas
fisubs
fdivs
dec
rcrl
scas
ja
inc
xchg
neg
add
lret
mov
lds
sub
sbb
repnz
loop
mov
cmc
es
dec
rcl
jns
sahf
xchg
mov
stos
xor
mov
xchg
roll
jp
xor
and
bound
xor
gs
andb
jmp
and
mov
out
dec
mov
add
sbb
fsubl
aam
pop
and
stc
inc
lret
jg
sub
scas
adc
cmpsb
sub
cmc
out
push
aas
add
incl
mov
dec
jge
test
inc
xchg
stos
aaa
fcomi
gs
sbb
sahf
cld
xchg
in
fwait
shr
xchg
fmulp
iret
pop
push
je
in
lods
sub
jle
inc
mov
jns
mov
fsubs
xor
sub
lcall
ss
ss
sbb
xlat
xor
pop
fisubl
lret
pop
mov
les
and
and
sbb
inc
jno
imul
mov
imul
mov
imul
icebp
std
scas
repz
aad
push
jg
and
push
sbb
lret
lods
arpl
stos
cs
adc
fcoms
retw
cltd
in
pop
cmp
xchg
movsb
lahf
sahf
in
pushf
cmp
jg
inc
inc
fsts
mov
stos
lods
divl
push
adc
inc
jo
mov
loope
nop
dec
cmp
pop
lret
push
sbb
pop
lret
cmpsl
mov
dec
ljmp
xchg
lret
mov
loope
fwait
test
adc
and
push
rclb
stc
jmp
ds
leave
dec
mov
fcmovnu
xchg
testl
dec
js
daa
pop
sub
mov
xchg
push
insb
push
mov
mov
dec
xchg
mov
inc
mov
dec
imul
add
sbb
daa
test
push
cmp
xor
and
or
in
jp
inc
push
inc
mov
xor
xorl
push
xor
lea
mov
mov
fwait
jns
lods
mov
mov
pop
in
cltd
xlat
jno,pn
aam
jnp
and
scas
arpl
dec
aad
add
sub
ss
imul
out
jmp
mov
and
pop
lods
xchg
sub
fwait
je
mov
cmpsl
repz
pop
ljmp
push
or
cmp
or
and
jo
mov
stos
add
cmp
mov
out
movsb
insb
cmc
js
xchg
inc
mov
std
push
ljmp
popf
push
jmp
aam
and
xchg
scas
mov
or
dec
sti
cmp
enter
sbb
pop
mov
dec
popa
loopne
mov
push
or
jb
nop
dec
imul
xor
cmpsb
or
jno
iret
shrl
mov
popf
icebp
pop
xchg
inc
jno
jae
mull
pop
mov
stos
sub
pop
jmp
sub
sbb
mov
sarb
xor
push
add
mov
cli
xor
testb
pusha
push
dec
dec
adc
scas
hlt
push
adc
sub
movups
push
mov
push
jg
inc
aam
adc
repnz
or
pop
repz
fwait
cld
cmp
pusha
loopne
dec
aas
les
leave
jno
ja
mov
jno
cltd
out
movsb
add
mov
sub
push
arpl
mov
jmp
cld
les
cltd
xor
stos
cmp
jno
add
push
push
out
and
adc
push
loop
testl
stc
bound
push
push
push
cmpsb
aaa
out
enter
test
fs
stc
fnsave
jbe
adcb
loope
into
outsb
pop
mov
data16
cs
add
popf
cmp
jb
in
mov
xchg
mov
test
sbb
pushf
stos
add
cld
sbb
xor
test
add
in
or
xor
cmp
jmp
sbb
mov
jns
jnp
clc
sbb
rcrl
push
cmovb
aam
scas
adc
xchg
pop
test
loop
sbb
pop
push
inc
jnp
or
push
mov
dec
std
push
push
enter
es
xchg
jo
pop
inc
outsb
fcomps
and
mov
sar
insb
pop
jb
mov
sahf
out
bnd
cmp
dec
cli
cmp
inc
outsb
sahf
fdivl
iret
cmp
daa
ret
dec
jae
inc
out
cmp
notl
dec
imul
jg
int3
int
cwtl
inc
das
dec
pop
popf
loope
push
mov
xlat
incl
lret
repnz
adc
fistps
push
sub
lret
mov
dec
dec
cmpb
pushf
mov
lret
outsl
adc
pop
roll
fbstp
int3
mov
pop
andb
ret
outsl
cmp
stos
inc
mov
adc
shl
xor
daa
xor
or
jge
out
jmp
xor
cmc
repz
mov
jae
aaa
sahf
fidivrl
jmp
nop
xchg
js
lods
adc
stc
mov
mov
data16
sti
scas
stos
sti
adc
cs
ficoms
leave
je
and
push
shll
mov
mov
pop
jg
xor
mov
adc
sti
movsl
in
std
sarb
ret
les
or
mov
and
aas
fldt
mov
mov
icebp
xlat
test
cwtl
push
call
inc
xchg
es
inc
aas
adc
test
ret
jnp
push
ud1
dec
pop
and
cmp
or
xor
mov
aaa
cltd
mov
dec
mov
ja
out
dec
mov
xchg
cmp
sbb
jle
mov
pop
gs
inc
repz
shlb
cmp
int3
lcall
insl
pop
ret
and
jb
mov
lds
adc
out
push
push
loope
sub
sarl
mov
sbb
sub
mov
cmc
pop
mov
test
mov
addr16
mov
mov
fwait
aam
cs
adc
mov
cmp
ret
mov
dec
xor
aas
mov
inc
pop
loopne
dec
sub
dec
or
xchg
aaa
in
out
pop
add
sbb
push
push
xor
enter
xchg
add
dec
aaa
cld
cli
int
lret
fbld
push
sbb
pop
sub
xchg
fs
lods
or
inc
jg
pop
xchg
push
pusha
adc
lahf
lahf
sub
lahf
lcall
sbb
pop
sub
sbb
in
jmp
insb
mov
scas
dec
jge
fisubrl
adc
lret
xchg
mov
adc
mov
jb
sbb
jmp
push
cmc
insl
mov
mov
fucom
insb
xor
and
jp
orl
ljmp
add
cmpsl
inc
fs
out
das
test
loopne
jle
pusha
mov
test
sub
add
test
test
mov
fbstp
loopne
subl
movsb
mov
xchg
loope,pt
or
loopne
mov
fsubrl
pop
ljmp
mov
xchg
xchg
jne
sub
adc
or
sub
bound
xor
jbe
test
jo
std
adcb
cs
je
loope
push
mov
lds
movsl
adc
repz
rol
rcrl
mov
mov
push
jae
mov
sub
subb
jnp
and
sbb
xchg
push
inc
jne
ret
mov
insl
jecxz
push
mov
xchg
ss
and
mov
or
pop
lea
adcb
fs
jmp
cs
push
ret
push
mov
add
mov
nop
les
or
loope
lea
xor
mov
push
sar
push
inc
mov
mov
adc
popa
jg
pop
sbb
lea
cltd
mov
mov
adc
mov
add
sbb
shrl
add
dec
sub
push
imul
pop
or
push
dec
in
and
xchg
dec
sub
xchg
push
cmp
cmp
push
pop
sub
icebp
mov
or
cmp
out
arpl
call
cmp
mov
scas
mov
push
xchg
cwtl
scas
insb
lret
sub
lea
pop
xor
adc
push
imul
je
lock
orb
je
call
dec
add
mov
out
je
xchg
sbb
pop
push
pusha
xor
adc
xorl
fiaddl
insl
sub
or
add
adcl
jns
sub
mov
aad
jg
lock
or
pop
pop
pop
pop
repz
inc
aaa
enter
in
ja
dec
pushf
imul
fisttps
cwtl
or
push
test
dec
add
xor
mov
fs
call
adc
aaa
pop
xor
test
xchg
cmp
jno
cs
insb
mov
subb
pop
iret
adc
inc
inc
insl
jp
test
cmp
ret
xlat
mov
add
mov
loop
loop
sub
mov
fsts
inc
cmp
movsb
test
sbb
mov
mov
call
adc
lds
mov
in
dec
dec
out
push
push
lods
mov
cli
test
in
outsl
data16
xor
and
inc
sahf
std
dec
loop
cmp
inc
cs
imulb
jecxz
and
movsb
ret
mov
fwait
xchg
and
xor
fstpl
hlt
jg
dec
lret
lock
lods
push
mov
xor
pusha
stos
sbb
and
gs
push
roll
call
cmp
mov
jnp
mov
dec
lock
mov
sub
mov
ficoml
into
in
fsqrt
cmp
cld
sbb
mov
cmpsb
pop
lret
test
std
jecxz
out
lret
adc
add
sbb
jp
mov
sub
add
xchg
aaa
and
fldt
jmp
cmp
push
test
adc
int
int3
addr16
sbb
and
loope
jnp
nop
in
dec
dec
mov
fstps
add
push
std
cltd
push
cwtl
sbb
not
movsl
xchg
and
shll
dec
outsl
popf
cli
lret
adc
andb
stc
mov
sub
shr
in
inc
jmp
jmp
add
pop
lock
dec
imul
mov
push
inc
lret
xchg
cld
and
fisubs
jl
mulb
add
in
jbe
jge
test
ss
push
fdivp
out
xchg
adc
repnz
sbb
in
mov
mov
into
dec
call
jecxz
mov
imul
popf
ljmp
xor
leave
or
push
arpl
push
imul
jecxz
add
inc
inc
mov
std
pop
pop
out
dec
dec
mov
jmp
cmc
lea
pop
popf
aam
xor
cmpl
notl
mov
mov
fs
orl
and
fidivrs
pop
fdivl
xor
loopne
pop
mov
loope
and
pusha
scas
xor
jecxz
ret
rorb
and
test
sbb
push
sub
cmp
aam
rcrb
inc
fs
les
mov
dec
aad
push
sbb
sti
sbb
mov
repnz
outsl
in
or
test
push
adc
lret
mov
lods
icebp
pop
add
mov
or
jbe
sar
mov
loopne
mov
inc
and
or
inc
psrad
popa
or
mov
fnsave
jae
mov
jb
jp
jecxz
es
pop
jbe
lods
ret
mov
inc
inc
or
jecxz
fistpll
mov
pop
jl
fnstenv
inc
xchg
fidivs
stos
in
stos
jbe
mov
push
adc
in
gs
imul
loopne
jecxz
push
ljmp
mov
cmp
clc
mov
inc
movsb
ret
and
neg
cmp
scas
adc
and
ljmp
cmp
movsb
jae
mov
mov
push
mov
imul
test
aam
xor
imul
xor
jbe
das
fwait
cmc
or
adc
mov
pop
fnsave
cli
jnp
cmpb
jno
mov
pushw
loopne,pt
add
fbld
xor
lods
and
push
in
aad
jge
shrb
cli
fdivs
loopne
loop
cmpsb
push
xchg
mov
les
popf
adc
pop
mov
scas
add
jbe,pt
jp
mov
pop
das
ja
es
pop
sbb
xor
std
xchg
push
cmp
test
aaa
fnstenv
push
inc
stos
shrb
lods
stc
xchg
sbb
cmp
add
lret
fsubrp
or
insb
sbb
scas
xlat
xchg
daa
adc
lock
mov
push
sbb
cmp
incb
mov
stos
mov
stc
lret
dec
cwtl
or
lcall
inc
test
mov
mov
inc
and
push
or
pop
imul
sbb
sbb
mov
push
and
or
loope
out
mov
sub
inc
sub
fld
jg
inc
popa
subl
dec
sub
and
mov
mov
jns
ja
ljmp
xorb
jne
adc
addr16
js
icebp
subl
jmp
fwait
pop
inc
or
lret
pop
leave
in
out
adc
insb
cmp
dec
ljmp
pop
test
mov
cmpsb
push
or
jge
push
mov
shl
mov
dec
arpl
gs
adc
add
outsb
cmp
pusha
xor
sbb
push
sub
test
jb
sub
dec
scas
jecxz
jo
sub
sbb
cmp
sbb
repnz
lds
fimuls
dec
cmp
stc
add
fldl
sbb
mov
sarl
arpl
lea
sbb
movsl
jns
jmp
xchg
mov
mov
sbb
xlat
mov
sub
and
mov
inc
xchg
scas
movsb
xchg
popf
scas
dec
mov
sarb
cwtl
inc
xor
ror
xchg
sub
nop
out
lret
sbb
jne
xlat
stc
cmp
test
call
cli
mov
xlat
sub
test
mov
xchg
cli
enter
insb
adc
icebp
or
sbb
add
pop
lcall
mov
jae
in
xchg
or
xchg
xlat
push
add
in
sbb
aas
xchg
cld
dec
imul
sbb
dec
in
sbb
popf
out
push
push
fldt
test
sub
std
adc
cmp
loop
out
mov
fldenv
xor
stc
pop
xchg
inc
push
fcompl
adc
cmp
out
imull
ja
lret
rclb
and
cmp
sbb
push
add
push
cmc
mov
push
fmull
mov
add
icebp
pop
pop
es
out
ljmp
arpl
movsl
ja
scas
loop
ja
pop
jns
xor
es
int3
mov
je
pop
dec
cmp
hlt
push
stc
repnz
sub
sbb
arpl
cltd
fsubs
jmp
add
shl
push
jno
or
neg
cmp
and
lret
or
movsl
jmp
ss
fcoml
out
or
pop
xor
idiv
popa
cmpsb
dec
xchg
shrb
mov
rolb
xlat
fs
sbb
or
mov
and
arpl
inc
push
or
punpckhbw
and
and
jne
and
pop
orl
inc
or
jp
out
es
ds
push
fwait
push
push
js
negl
stc
notb
incl
or
push
out
xor
pop
rcr
sti
push
test
or
fisttps
mov
jo
mov
ss
dec
cmp
pushf
xchg
ja
ss
loopne
mov
aam
sti
pop
push
mov
std
add
frstor
jns
add
sbb
lods
sub
cli
aad
aaa
scas
icebp
addr16
mov
sbb
push
sbb
jb
xchg
push
lcall
sub
or
popa
movsb
pop
add
rcrb
push
add
pushf
push
mov
movb
out
add
gs
xchg
shrb
test
andb
and
xorb
jecxz
icebp
mov
sbb
cs
dec
fildl
pop
add
es
and
mov
push
pop
mov
sub
fwait
sub
add
mov
call
mov
xchg
cld
call
testb
and
xchg
mov
push
hlt
jle
sbb
pop
fimuls
pop
jmp
mov
inc
add
mov
int3
xlat
fwait
add
push
mov
jne
rcl
mov
mov
jne
addl
dec
fs
cmpsb
daa
imul
ret
pop
les
iret
leave
or
scas
jo
sahf
add
cmpsl
cld
jmp
aas
mov
ficoms
movsl
nop
mov
shll
shll
cmp
cltd
adc
push
cmp
jae
aas
sub
mov
fistl
and
ljmp
push
xor
fimull
ds
sti
sbb
push
xchg
pop
ljmp
mov
mov
sbb
ss
in
call
aam
jecxz
pop
divl
in
sub
xchg
xchg
cmp
jae
cwtl
cs
xchg
pop
cli
jmp
or
push
stos
cmpsl
pop
or
ret
ret
fs
xor
lret
xorl
push
pop
test
adc
xchg
mov
xchg
scas
pop
sub
push
sub
call
or
fwait
hlt
push
add
jb
mul
jb
cmp
mov
mov
rorl
fdivs
out
push
jmp
pop
mov
and
in
scas
mov
popf
xchg
addr16
lock
repz
lcall
sub
adc
mov
cmpl
lret
sbb
fists
call
loopne
sarl
std
out
cmp
sub
sub
lret
or
or
mov
insl
test
loope
or
test
add
movsl
cmp
sbb
cld
pop
pop
aad
mov
shl
adc
and
adc
subb
ljmp
int
push
inc
rol
leave
movsb
into
movsb
dec
dec
testl
je
xor
adcl
arpl
xchg
mov
setno
or
dec
ret
jbe
jns
jbe
xor
xorl
pop
push
sbb
mov
frstor
mov
ss
mov
lods
mov
adc
das
xchg
rorb
or
push
fwait
int
cmp
stos
stos
jno
xchg
test
lods
xchg
loopne
mov
das
push
sub
or
mov
dec
enter
xor
adc
sbb
mov
mov
cmp
fstpl
push
cmp
xchg
or
ljmp
sbb
out
nop
ja
arpl
arpl
jbe
and
sahf
clc
outsb
ficoml
pushf
test
xchg
mov
mov
imul
enter
xchg
and
mov
ss
mov
pop
out
rcrl
int3
les
mov
push
in
imul
jnp
rcrb
xor
pop
aas
jnp
jg
ljmp
out
nop
int
inc
inc
and
xlat
jne,pt
dec
cmpsb
jmp
out
repnz
lret
mov
add
xor
stc
aam
jb
iret
jge
push
cs
sbbl
aam
push
sub
push
out
clc
sbb
mov
mov
mov
test
decb
sub
out
cmp
sti
mov
mov
adc
pop
lret
push
icebp
xchg
pop
outsl
xchg
push
jnp,pn
lahf
lcall
add
mov
icebp
mov
mov
add
sub
push
sti
jl
jno
pop
fsqrt
push
fnstcw
cltd
sti
jl
jno
pop
fsqrt
xchg
into
cmp
frstor
xor
shr
and
xor
cs
jne
sub
add
jae
in
aaa
xchg
mov
out
inc
xchg
sbb
inc
fwait
inc
add
cmp
push
xor
sub
jns
xchg
mov
adc
mov
or
and
daa
mov
fcomp
jle
mov
lds
mov
xchg
mov
dec
and
movsb
mov
or
lcall
scas
jge
sub
or
es
repnz
cmp
and
and
push
loop
aas
cmp
int
cmpsb
xor
or
stos
aam
inc
lock
sti
mov
sbb
pop
clc
lretw
aam
test
mov
daa
aam
loope
mov
dec
fsubrl
mov
xor
adc
ja
cmc
inc
bound
push
jmp
sbb
adc
pop
mov
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
ret
sbb
or
ss
mov
sub
sbb
iret
fisubrl
push
daa
imul
pusha
sub
push
pop
push
xor
sbb
or
ss
jae
pop
cmpsl
mov
pop
and
clc
sub
jne
hlt
out
add
xchg
cmp
pop
mov
frstor
pop
outsl
shl
or
insl
fldl
pop
xor
ret
or
sbb
or
ss
inc
mov
stos
push
not
mov
xchg
adc
sub
sub
mov
mov
pop
mov
ret
sbb
or
ss
inc
mov
stos
push
not
mov
test
mov
and
cmp
pop
xchg
aam
ror
ret
sbb
or
ss
inc
mov
stos
push
not
mov
movsl
cltd
pop
cmpsb
jnp
rorb
mov
mov
pop
mov
ret
sbb
or
ss
inc
mov
stos
push
not
mov
sti
xchg
fbstp
fistps
mov
mov
pop
mov
ret
sbb
or
ss
inc
mov
stos
push
not
mov
jbe
fld
aad
or
mov
mov
pop
mov
ret
sbb
or
ss
inc
mov
stos
push
not
mov
mov
push
rorl
mov
mov
pop
mov
ret
sbb
or
ss
inc
mov
stos
push
not
mov
lahf
jbe
sbb
sarb
mov
mov
pop
mov
ret
sbb
or
ss
ljmp
insl
loope
in
dec
inc
pop
aas
xchg
mov
mov
pop
and
rol
fidivs
ljmp
cmc
arpl
pop
mov
xchg
xchg
data16
sbb
cmpsb
fistl
ds
cmp
sbb
xor
mov
xchg
mov
cmp
add
data16
pop
or
dec
ljmp
or
ss
inc
mov
stos
push
not
mov
mov
jge
and
stc
and
xor
xchg
aam
ror
ret
sbb
or
ss
inc
mov
stos
push
not
mov
and
hlt
jns
cmp
sbb
or
mov
ret
sbb
or
ss
inc
mov
stos
push
not
mov
jmp
mov
jae
mov
jno
in
push
test
xchg
pop
xchg
aam
ror
ret
sbb
or
ss
inc
mov
stos
push
not
mov
add
icebp
mov
bound
mov
xchg
aam
ror
ret
sbb
or
ss
inc
mov
stos
push
not
mov
push
sbb
iret
movsl
sbb
pop
xchg
xchg
popw
xchg
aam
ror
ret
sbb
or
ss
inc
mov
stos
push
not
mov
ret
jg
dec
out
movsl
inc
sahf
mov
test
pop
pop
xchg
aam
ror
ret
sbb
or
ss
inc
mov
stos
push
not
mov
nop
rcrb
cmpsl
les
jnp
loop
xchg
aam
ror
ret
sbb
or
ss
inc
mov
stos
push
not
mov
sbb
clc
xor
mulb
and
pop
xchg
aam
ror
ret
sbb
or
ss
inc
mov
stos
push
not
mov
pushf
fisubrs
pop
in
inc
mov
fucom
fcompl
xchg
aam
ror
ret
sbb
or
ss
inc
mov
stos
push
not
mov
sahf
sbb
out
scas
stc
sub
xchg
aam
ror
ret
sbb
or
ss
inc
mov
stos
push
not
mov
inc
xchg
leave
mov
jmp
lods
ret
cmp
pop
xchg
aam
ror
ret
sbb
or
ss
inc
mov
stos
push
not
mov
mov
inc
or
push
push
pop
xchg
aam
ror
ret
sbb
or
ss
or
shlb
int3
mov
ja
add
ret
sbb
or
ss
inc
mov
stos
push
not
mov
pop
aad
push
in
xorb
pushf
jecxz
pushl
mov
ret
sbb
or
ss
inc
mov
stos
push
not
mov
icebp
lret
clc
out
pop
mov
jg
pop
xchg
aam
ror
ret
sbb
or
ss
xor
jmp
inc
or
loope
in
sub
xchg
testb
pop
sbb
sbb
imul
icebp
out
rol
in
push
mov
push
hlt
int
cmp
ljmp
aas
adc
sbb
or
ss
inc
mov
stos
push
not
mov
das
dec
and
dec
jmp
out
outsl
aaa
gs
xchg
aam
ror
ret
sbb
or
ss
inc
mov
stos
push
not
mov
mov
mov
dec
jmp
out
outsl
aaa
gs
xchg
aam
ror
ret
sbb
or
ss
inc
mov
stos
push
not
mov
loope
aas
adc
jbe
dec
jmp
out
outsl
aaa
gs
xchg
aam
ror
ret
sbb
or
ss
inc
mov
stos
push
not
mov
bound
es
jmp
out
outsl
aaa
gs
xchg
aam
ror
ret
sbb
or
ss
inc
mov
stos
push
not
mov
add
push
out
outsl
aaa
gs
xchg
aam
ror
ret
sbb
or
ss
inc
mov
stos
push
not
mov
xchg
mov
cmp
outsl
aaa
gs
xchg
aam
ror
ret
sbb
or
ss
inc
mov
stos
push
not
mov
jge
push
fmull
cmp
outsl
aaa
gs
pop
push
daa
popf
aam
test
sbb
dec
xchg
cli
sub
insl
add
popf
jbe
dec
and
dec
imul
add
jae
lret
dec
and
xchg
pop
xchg
aam
ror
incl
iret
es
push
fwait
pop
mov
xor
mov
mov
pop
xor
mov
aam
ror
shl
out
cld
hlt
lret
ss
push
fwait
pop
mov
xor
sbb
jl
or
sub
push
pop
xchg
aam
ror
sti
sbbl
sub
pop
mov
xor
jecxz
rcll
push
popa
sbb
xchg
aam
ror
push
fsubrs
or
lock
push
fwait
pop
mov
xor
lea
and
mov
add
popl
pop
mov
and
mov
xchg
push
fwait
pop
mov
xor
mov
sbb
jns
add
dec
mov
daa
mov
add
push
or
mov
adc
out
mov
jae
dec
xchg
push
xchg
icebp
push
imul
xor
inc
dec
je
xchg
xchg
ja
xchg
fsts
in
sarl
cld
push
cmc
sar
cmpsb
push
call
cltd
into
lods
frndint
jecxz
cwtl
push
mov
add
push
xchg
dec
mov
subl
jne
jecxz
push
lss
xchg
mov
push
outsb
inc
or
mov
sarb
js
sub
call
mov
jns
mov
das
cltd
pop
mov
cmp
lcall
pop
pushl
lods
push
repnz
jnp
fcompl
in
cwtl
scas
xor
mov
imul
adc
cmpsb
lods
aaa
int3
into
push
out
mov
pop
xchg
js
xchg
gs
xor
sbb
gs
sub
jne
pop
lret
repz
fisubrs
and
sarl
lods
int3
mov
cmp
xlat
mov
xchg
aam
ror
pop
cli
mov
gs
popa
mov
mov
sub
pop
xor
pop
xor
mov
push
sahf
popf
pop
es
add
jge
sarb
xchg
pop
sti
jne
sbb
cltd
into
adcl
clc
nop
adc
mov
out
insl
aad
cmp
pop
adc
cmp
roll
scas
out
mov
fistps
call
sbb
cmp
stos
mov
push
mov
jno
pop
data16
pop
jne
lea
or
int
push
imul
in
xchg
rcrb
hlt
xor
in
jbe,pt
fs
xor
xor
rorl
cmpsb
inc
jg
popa
or
push
scas
jns
jbe
mov
or
aad
ja
jge
jle
cmc
and
push
lret
pusha
mov
jae
rcl
imul
cmpsl
repz
mov
xchg
xor
push
es
push
and
xchg
fidivl
adcl
or
push
xlat
fdivr
mov
xor
in
push
sbb
sar
sti
inc
push
flds
out
push
leave
add
test
call
out
cld
or
into
jecxz
and
push
or
xchg
sbb
xor
out
out
jle
es
adc
xchg
stos
add
fwait
jge
and
das
and
inc
cli
fbld
addr16
xchg
sahf
sbb
pop
outsb
xor
and
xor
sbb
cmpsl
aam
loop
outsl
xchg
fs
or
rcrl
into
dec
repz
xchg
push
inc
and
or
adc
xor
xchg
out
frstor
and
fisttpl
out
and
shlb
push
dec
inc
xor
rcrl
push
xchg
jbe
sub
into
cld
pop
xchg
aam
ror
pop
dec
dec
lret
mov
and
shlb
jae
inc
adc
fwait
cmp
dec
adc
cmpsl
addr16
in
pop
sub
gs
les
movsb
fs
adc
jmp
cmp
push
mov
iret
push
push
push
mov
test
fs
scas
jno
psubq
pop
addr16
imul
xor
das
ret
in
mov
das
insb
cmc
fs
jo
ss
mov
lret
mov
xor
xchg
js
dec
test
xchg
fiadds
out
inc
mov
in
adc
push
pop
inc
aas
cli
lock
sbb
cmp
lahf
pushf
or
icebp
jae
xor
mov
movsb
push
and
jecxz
xchg
sbb
je
inc
xchg
insb
lods
push
adc
or
cmp
cmp
test
jl
xchg
stos
testl
add
sub
ja
mov
sahf
sbb
fimuls
or
ss
popa
sarb
or
jbe
call
xchg
sbb
sti
out
or
outsb
sub
pop
popf
int3
add
xchg
pop
push
cmp
pop
aam
adc
repz
cld
push
sub
mov
ret
cld
mov
imul
mov
fbstp
mov
shr
and
mov
imul
and
movb
addr16
jno
mov
sub
out
xchg
jge
cld
pusha
pop
insb
push
sub
lret
filds
and
jae
ja
cmp
xorb
rolb
push
xchg
imul
add
xlat
xor
jno
cmp
nop
fisttpl
roll
lea
std
dec
dec
int
sub
je
and
mov
cs
movsb
mov
ds
pop
push
idivb
cmp
stos
sti
cs
mov
and
or
mov
mov
ss
cmp
js
dec
jo
scas
aaa
in
sub
xor
jno
mov
mov
dec
in
push
mov
or
daa
shlb
repnz
aam
lahf
jno
mov
and
inc
cmp
ror
or
xchg
jle
cmp
inc
jne
ret
jg
in
xor
mov
outsb
push
mov
mov
test
nop
fisttpl
rcrl
push
pop
mov
jae
mov
sti
jae
lods
fsubrp
inc
shrl
hlt
repz
or
xchg
jle
cmp
loope
arpl
aam
in
or
fcompl
out
out
ja
je
dec
in
and
scas
ret
lea
or
cli
mov
out
or
je
and
adcb
in
cmpl
fbld
mov
cs
in
and
dec
jp
push
daa
xchg
sub
jnp
or
ret
mov
popa
clc
add
fidivrs
xor
sub
dec
lret
or
sbb
pop
cmp
lods
sub
mov
pop
or
in
std
in
inc
hlt
pushf
out
mov
int3
mov
xchg
fbstp
mov
ror
ds
inc
sbb
fcomps
pop
movb
ficoml
and
dec
mov
jmp
push
xor
fs
mov
enter
jnp
rcr
xchg
fdivrl
loope
data16
jns
ljmp
or
mov
loopne
mov
in
rcll
push
dec
loopne
push
jl
push
xor
out
ret
or
mov
pop
insl
ljmp
inc
jbe
dec
mov
imul
repz
xor
lret
and
ss
lock
ds
sbb
jno
fidivrl
mov
xchg
pop
outsb
cmp
xchg
mov
mov
jbe
scas
into
pop
jb
shlb
loopne
push
inc
inc
mulb
pop
mov
imul
hlt
popa
mov
mov
out
ret
or
mov
pop
insl
ljmp
sbb
adc
push
push
mov
push
icebp
ljmp
js
and
scas
into
pop
sbb
sarb
xchg
int3
mov
aad
int3
in
jg
and
mov
mov
clc
mov
ret
cld
mov
int
stos
xchg
jb
mov
es
sbb
dec
or
fstps
inc
cli
insl
mov
subb
mov
stos
decb
mov
pusha
jo
inc
pop
and
jne
loop
ljmp
pop
mov
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
pop
xchg
aam
ror
jo
dec
inc
fdivl
inc
push
je
addr16
dec
sub
pop
inc
dec
xor
inc
mov
cmp
jns
jno
or
sub
int3
add
add
or
add
add
jb
push
arpl
adc
outsl
outsb
jae
add
push
jns
je
insl
add
adcl
je
adc
jns
gs
add
xor
or
push
imul
add
dec
gs
jae
arpl
add
scas
js
gs
add
dec
gs
popa
addr16
add
add
add
add
add
and
add
add
call
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
ljmp
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
movb
add
add
add
xor
cmp
xor
xor
inc
add
add
sub
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
insl
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
outsl
add
insb
add
push
add
add
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
add
and
add
add
push
add
outsl
add
add
je
dec
add
insl
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
outsl
add
insl
add
outsb
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
