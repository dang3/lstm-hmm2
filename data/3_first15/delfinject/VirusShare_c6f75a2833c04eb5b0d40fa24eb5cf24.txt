xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
push
xor
pop
ret
add
ret
add
popl
push
mov
push
xchg
add
mov
mov
xor
xor
xchg
popl
push
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
push
xchg
add
ret
push
xchg
add
ret
xchg
popl
push
ret
xchg
xchg
xchg
push
pop
pop
push
xchg
mul
push
pop
xchg
xchg
xchg
push
pop
add
ret
push
xchg
add
ret
mov
ret
add
ret
mov
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
call
push
call
push
call
push
push
call
push
call
push
push
call
push
push
call
push
push
call
push
push
push
call
mov
call
call
push
call
push
call
push
push
call
push
cmp
jae
ret
pop
call
out
add
xor
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
test
je
mov
mov
add
andl
mov
cmp
jne
mov
test
jns
add
sar
mov
xor
mov
jmp
mov
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
add
mov
or
mov
add
mov
incl
sub
add
call
jmp
scas
pushf
loopne
cltd
push
dec
andl
lods
les
and
es
cld
mov
push
pusha
mov
in
sbb
mov
clc
mov
loop
push
push
inc
adc
push
sub
add
data16
xor
mov
add
rorb
push
adc
fwait
push
dec
lret
and
adc
rolb
aam
xchg
dec
leave
or
loopne
addr16
dec
daa
xlat
jl
adc
sbb
mov
jae
dec
outsb
insl
sbb
lods
mov
fs
push
pop
mov
mov
cmc
jp
jge
repz
or
xor
or
scas
jecxz
mov
clc
mov
movsl
sbb
cwtl
das
jmp
stc
xchg
push
rcl
popa
imul
push
jp
sbb
imul
gs
push
outsb
out
add
into
ret
sub
mov
mov
mov
xchg
push
mov
xchg
sbb
ja
sti
xor
cli
mov
test
in
cmpsb
lret
mov
into
aaa
lods
mov
adc
jo
aad
nop
cmovne
sti
pop
pop
fstps
popa
or
cmpsb
lea
jns
mov
rorb
dec
pop
addr16
pop
xchg
pop
loop
mov
sub
loop
movsl
fs
mov
push
dec
pop
scas
ret
int
mov
add
stc
mov
mov
daa
mov
pop
dec
push
cmp
in
movsl
jge
cmp
ds
inc
in
mov
inc
mov
adc
push
faddl
xor
cld
loope
das
mov
pusha
movsb
dec
xchg
and
pop
jb
pop
xor
insl
jmp
xor
ljmp
test
inc
popa
jno
aaa
arpl
pop
add
dec
pop
in
or
adc
popa
lcall
pop
xor
test
inc
cmp
xlat
les
cmp
pushf
cmc
inc
adc
add
test
inc
mov
aas
testb
scas
push
inc
add
insb
inc
cld
pushl
inc
jae
xchg
cmp
movl
cmpsl
push
je
cmp
std
loopne
shr
and
repnz
dec
mul
or
push
flds
sub
in
mov
movsb
mov
mov
aaa
and
ljmp
xor
rcll
test
cmp
or
push
ja
mov
dec
push
fadd
pop
cmp
mov
pushf
cwtl
mov
mov
outsl
adc
cli
lahf
js
mov
aas
adc
loopne
jae
add
push
ds
push
cmp
cmp
and
push
dec
lret
pop
adc
popf
inc
or
pop
mov
jge
andps
aad
mov
and
xchg
call
push
cmp
add
dec
inc
aam
pop
jmp
sahf
out
and
or
cmp
dec
jne
call
cld
xchg
in
js
inc
fwait
enter
bound
movsb
and
mov
and
xor
test
xor
cmp
xor
or
pushf
enter
shrb
push
lahf
aad
xchg
insl
jne
sahf
jle
sahf
scas
add
cs
add
adc
or
cltd
dec
add
fs
xchg
dec
jmp
push
and
lods
and
dec
jb
js
cmpsl
jle
cmp
inc
testl
xor
dec
mov
pusha
jp
rcr
faddl
sbb
dec
icebp
push
leave
std
mov
insl
mov
xchg
fs
das
sti
mov
cli
xchg
inc
js
mov
inc
sarb
xchg
sub
mov
ljmp
mov
and
push
rcr
pop
stos
sub
dec
inc
aad
lods
jns
cwtl
pop
xlat
lahf
mov
ret
std
int3
and
jl
int
fisubrl
cmc
jno
mov
leave
cs
inc
sub
sahf
inc
out
shlb
fidivs
test
pop
add
pushf
test
pushf
jbe
pop
dec
pusha
mov
xchg
lods
mov
ret
or
cld
sub
sbbb
adc
enter
lea
jge
add
movsb
push
pop
xchg
pop
mov
popf
iret
clc
int
pop
pop
addr16
cmc
inc
mov
sahf
push
push
lods
rorl
sub
loope
daa
lahf
mov
test
mov
cmp
lods
or
pop
leave
jo
pop
add
mov
cmp
dec
aad
xor
and
negl
jle
inc
and
add
sub
scas
enter
and
adcl
sbb
xchg
mulb
aas
repnz
mov
adc
adc
fdivl
call
mov
pop
xor
and
sbb
dec
sub
xchg
sub
lcall
ja
fstl
pop
jo
jne
jg
mov
jle
push
popf
fstpl
sbb
add
mov
xchg
inc
cmpsl
mov
movl
out
pop
add
fimull
lock
pop
sub
push
pusha
dec
xchg
inc
movb
dec
lock
insl
xchg
shlb
cs
testb
sbb
xchg
jle
out
dec
and
cmp
jl,pn
xchg
mov
jb
pop
xchg
movsl
cmp
xchg
lret
cmp
jge
mov
aas
jnp
mov
jae
les
popf
sub
out
mov
cmp
dec
ja
add
jo
lret
sub
in
adc
cmpsl
sbbb
int3
lahf
ds
push
mov
xor
in
mov
jno
jle
into
mov
mov
adc
cld
and
sub
in
sub
or
ret
xchg
test
add
cmpl
mov
icebp
int
and
sub
push
mov
and
cmc
daa
jno
pop
addr16
sbb
cli
mov
enter
add
enter
xchg
push
mov
test
inc
inc
add
outsl
fiaddl
dec
cltd
addb
lods
add
add
fnsave
jmp
mov
aas
cmpsl
xor
sbb
pop
pop
push
adc
lret
inc
cld
shrb
mov
dec
incl
cld
jno
cmc
jg
in
gs
adc
sbb
push
mov
fwait
sub
add
insb
imul
mov
out
mov
loop
jns
mov
fisttps
inc
stc
rclb
loope
leave
and
xchg
inc
popa
test
xor
jo
xor
jg
sbb
ficompl
shrl
ret
outsl
test
jp
in
pop
push
push
inc
cwtl
jge
sub
jp
or
and
hlt
cmp
pop
mov
stc
sub
mov
in
mov
jl
jle
es
jmp
jle
jge
jno
movsb
loop
mov
dec
shll
push
scas
adc
and
ficoms
loopne
xchg
push
pusha
inc
and
lret
xor
sahf
jae
sbb
sub
sbb
pop
lret
sub
jp
adc
mov
pop
cmpsl
cwtl
insb
or
jnp
stc
mov
cld
cmp
cmp
cmp
lods
pushf
jb
sub
es
test
push
andl
call
jle
mov
xor
insl
roll
in
shrl
scas
xor
and
fsts
dec
pop
out
cmp
sahf
mov
pmaxsw
rclb
clc
pusha
xor
jne
mov
add
push
sbb
dec
fwait
xchg
add
push
pop
icebp
fildll
add
or
push
cmp
adcl
imul
scas
mov
push
test
data16
push
hlt
mov
cmp
sub
addl
mov
jbe
ret
sbb
xor
popf
push
push
adc
aas
jecxz
adc
cmp
and
mov
int
and
stc
push
fisubrs
hlt
mov
test
inc
fs
repnz
popf
negl
imul
sub
mov
enter
in
or
lds
xor
cmp
pop
addb
out
ret
lods
fisubs
lahf
lds
mov
popa
lds
push
sbb
cli
sahf
ds
and
jbe
dec
dec
pop
or
or
into
sub
jbe
xor
sub
push
xor
cmp
jmp
mov
jmp
loop
repz
pushf
adc
inc
lods
punpckldq
divb
sub
insb
xlat
ja
xor
scas
sub
filds
pop
and
mov
pop
push
adc
xchg
xor
movl
lods
adc
or
out
cmp
popf
pop
or
jge
test
sbb
and
pop
jno
arpl
xor
mov
into
and
outsb
adc
loop
aas
mov
insb
or
call
or
rorb
je
sub
lret
scas
je
jecxz
ficompl
mov
add
and
dec
ret
inc
scas
test
fistpl
lods
dec
pop
xor
pop
sti
and
insl
pop
mov
stc
cmp
mov
push
mov
or
fstpt
or
ret
push
xor
cmc
mov
dec
and
dec
mov
xchg
xchg
fmul
ss
das
popf
ret
pushl
dec
jns
dec
loop
pop
jns
mov
inc
das
pop
es
push
pop
push
sub
addr16
xchg
enter
test
mov
js
imul
call
sbb
cmp
lds
sbbb
sahf
cwtl
inc
and
ret
in
bound
pop
call
sahf
addb
push
jno
add
dec
mov
or
test
sahf
sbb
in
dec
and
cmp
pop
lods
nop
les
push
sbb
popa
mov
fisttps
ret
adc
and
notl
js
and
xchg
lcall
inc
push
sub
dec
adc
fsubrs
iret
xor
ja
aad
je
test
mov
aad
loope
cltd
lods
pop
rclb
jl
and
push
and
gs
xchg
insl
out
dec
fistpl
sub
push
cmp
mov
jl
jnp
sub
dec
clc
shr
push
mov
fxch
push
pop
inc
mov
mov
cs
inc
mov
in
fistpl
jg
xchg
adc
aam
and
int3
dec
xchg
mov
xor
mov
mov
outsl
addb
ret
jle
into
call
cmp
inc
sbb
lods
lcall
cmp
out
rcl
xchg
inc
decl
aam
dec
jne
out
aam
dec
inc
xor
pop
mov
mov
scas
cmp
pop
ss
cmp
test
dec
push
fs
and
sbb
lret
xlat
lret
aad
cli
add
push
outsl
dec
daa
pop
sbb
adc
pop
call
mulb
mul
adc
popf
loop
jge
and
cmp
ljmp
fnsave
loop
mov
or
mov
popf
xchg
aam
jo
jecxz
mov
hlt
sahf
xor
int3
daa
sahf
bound
or
ret
in
je
add
icebp
add
adcl
fldcw
ss
cmp
sub
stc
leave
test
mov
mov
lahf
add
adc
push
pop
rol
add
out
es
and
rclb
jno
repz
jno
sub
mov
cmp
pop
nop
out
js
loope
mov
adc
pop
jl
loope
or
fsubrl
xchg
daa
in
mov
sub
mov
xchg
lods
jle
sub
fnsetpm(287
jae
shl
push
mov
xchg
sub
cmpsl
sub
mov
lods
call
push
and
push
in
jp
mov
inc
fwait
dec
lret
rorb
jae
in
movsb
inc
insb
cmp
sbb
fisubs
adc
cmp
shlb
add
shll
mov
jmp
pop
test
fimuls
push
cmp
or
sbb
addb
mov
jle
cmp
cmc
iret
test
fs
xchg
dec
pop
sub
dec
dec
ss
mov
dec
sbb
mov
outsb
push
mov
frstor
cld
push
inc
enter
mov
jnp
je
and
push
jne
movsb
lock
xchg
mov
lods
and
xchg
dec
jne
je
push
adc
sub
xchg
movsb
sub
pop
dec
jne
push
bound
aad
sub
bound
stc
fs
cmpsb
leave
push
xor
jge
popa
and
add
daa
dec
das
icebp
daa
push
jle
sahf
pop
lock
shrl
inc
inc
cmp
jae
mov
popf
mov
jp,pn
gs
push
xor
cmp
outsb
pushf
or
pop
jmp
std
xor
cmc
pushf
mov
pushf
cmp
push
je
mov
outsb
test
loope
and
sub
push
scas
rcrl
jne
adc
cmc
adc
pop
mov
xchg
cmp
fs
int3
cli
xchg
cld
mov
xchg
out
pop
inc
mov
out
addr16
movsl
loope
mov
dec
out
adc
ljmp
jecxz
adc
inc
pop
test
insl
sbb
push
or
in
fnstcw
add
mov
or
lcall
lahf
stos
add
and
dec
push
movsl
negb
cmc
sbb
add
push
adc
cmp
pop
inc
scas
cli
mov
imul
fcmovu
adc
loope
arpl
aas
out
dec
or
pop
test
xchg
and
test
xor
fbstp
lret
fwait
push
cltd
jbe
std
ret
inc
popf
inc
jecxz
cli
sub
sub
adc
mov
mov
loopne
in
or
jg
and
sbb
fisttps
divl
or
adc
shll
cmp
movsb
loope
pusha
and
into
adc
je
fs
jmp
movsb
xchg
jecxz
mov
fldt
or
sti
ja
dec
ficoms
movsb
push
mov
lds
pop
daa
insl
xor
mov
daa
inc
mov
cmpsl
dec
in
popf
and
lcall
mov
add
bound
add
pop
pop
push
mov
mov
pop
clc
or
push
data16
add
mov
jne
in
cmpsb
xchg
dec
push
das
int3
lea
ss
xor
es
inc
xor
inc
mov
xor
add
pushf
sarl
cld
mov
lds
scas
mov
mov
mov
jge
push
jl
dec
mov
movsb
jecxz
or
xor
mov
hlt
xor
jae
cmp
pop
sub
arpl
adc
aam
pop
movsb
subb
xchg
scas
push
es
push
xor
outsb
loope
sub
xchg
cmp
push
jmp
push
jecxz
mov
mov
sbb
inc
xor
pop
mov
je
std
add
out
sub
pop
int
stc
xchg
push
ss
les
gs
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
hlt
fcomps
in
cmpsl
xlat
test
pop
push
fsubrl
jne
aaa
imul
add
dec
adc
daa
cli
imul
lret
sbb
gs
in
xchg
pop
loopne
mov
lods
test
xchg
test
jp
or
js
cmp
jo
inc
push
lods
into
mov
maskmovq
testl
popa
enter
insb
rcll
cmp
hlt
insb
jb
mov
test
add
pop
mov
dec
inc
sahf
and
pusha
push
jmp
mov
cmpsb
fidivrl
sub
repnz
test
fsub
test
push
mov
outsl
jg
dec
sbb
push
mov
lods
sub
ret
xor
outsl
or
rcr
push
icebp
jo
dec
and
cmp
push
xchg
insb
mov
add
inc
mov
xor
insl
inc
divb
lcall
je
cmp
lret
mov
xlat
into
mov
pushf
arpl
pop
movsb
fisubs
add
cli
mov
cmp
lods
pushl
push
ret
in
shlb
test
ret
and
sar
dec
mov
xlat
jmp
add
lea
insl
ja
loop
xchg
mov
aam
out
movsb
fists
xchg
push
cmp
fisttpl
xor
popa
movsb
stc
loop
xchg
adc
mov
int
mov
int3
stos
adc
mov
dec
xchg
sub
xchg
push
xlat
into
dec
jbe
inc
rolb
lea
lock
daa
xchg
lcall
bound
jae,pn
sbb
push
push
xchg
adc
mov
icebp
inc
mov
daa
ljmp
mov
cld
and
mov
icebp
inc
test
mov
loopne
inc
mov
movsb
push
leave
loopne
cld
adc
mov
loopne
pop
mov
aam
mov
push
les
stc
and
pop
arpl
mov
icebp
mov
xor
xor
mov
push
rclb
lret
arpl
bound
xlat
sarb
stos
loopne
or
daa
repnz
js
sub
cmp
cmp
pop
jno
fldl
movsb
dec
xchg
xchg
lds
mov
ret
add
xchg
call
test
repz
inc
jbe
xchg
xor
pop
imul
or
cmp
and
out
pushf
rcrl
mov
stos
das
scas
loopne
or
out
test
xchg
fistpll
subl
sbb
out
lds
mov
add
andb
movl
cld
push
subb
push
mov
dec
dec
mov
push
adc
xchg
inc
cld
test
sti
adc
inc
into
or
jg
sub
push
xor
mov
push
jg
loop
and
push
daa
sbb
sub
or
jae
mov
dec
mov
xchg
shrb
or
xchg
push
push
xchg
aas
push
or
lret
xchg
jp
adc
xor
leave
mov
push
in
add
jmp
repz
aas
pusha
fstl
sbb
cmp
stos
testb
add
pop
fldl
push
xchg
stc
stos
sarl
mov
and
and
push
jns
mov
mov
cmp
ss
or
mov
cmpsb
cmpsb
mov
mov
flds
clc
stos
nop
mov
jp
dec
lret
push
add
mov
add
dec
fidivs
movups
mov
push
cmpsl
adc
iret
xchg
das
loopne
sahf
es
push
das
sahf
je
jno
and
mov
in
push
push
aam
mov
pop
sbb
xorl
jne
mov
aaa
out
pop
repz
inc
pop
enter
es
stos
xor
jns
jp
lcall
adcl
ret
je
addb
xchg
mov
jl
pop
call
mov
mov
mov
dec
cs
sub
in
fisttpl
mov
xlat
shll
in
sbb
sbbl
xchg
mov
rclb
adc
pop
mov
jne,pn
xor
popa
int
add
cli
sub
xor
stos
inc
int
pop
inc
mov
lcall
xchg
cs
gs
imul
jge
mov
jbe
inc
mov
push
scas
daa
shlb
sbb
dec
sbb
inc
ja
or
fisubrs
sub
fisubl
and
mov
std
dec
insl
movsb
mov
cltd
xor
push
ret
imul
sub
fisttpll
push
dec
gs
stc
inc
jnp
cwtl
bound
jg
shl
shrl
push
inc
fisttps
add
and
movl
enter
outsb
adc
lahf
movb
push
mov
or
mov
mov
insl
adc
lods
cwtl
sbb
inc
adc
sub
adc
push
mov
mov
outsl
hlt
das
nop
jl
out
enter
in
nop
or
fwait
in
popa
mov
mov
mov
sbb
pusha
xor
int
jne
ja
mov
ffree
sahf
xor
sbb
inc
push
jle
rclb
dec
movsl
jnp
lret
iret
pop
insb
repz
jge
adc
push
sbb
stc
mov
stc
cmp
xchg
or
test
mul
cmp
je
into
push
add
pop
pop
mov
push
push
les
sti
cmovae
in
aas
mov
push
xchg
jae
sub
cmp
cmpsl
inc
xchg
cmpsl
sub
ja
mov
cmc
jmp
xlat
arpl
sbb
mov
shrl
sbb
lock
dec
or
push
push
jno
push
outsb
test
sub
mov
addr16
testb
leave
mov
xchg
test
fadds
pop
dec
jnp
xchg
imul
out
call
repnz
leave
stos
xchg
lds
ds
or
nop
adc
les
arpl
les
push
pop
add
and
mov
loope
movsb
out
pop
nop
repz
pop
jmp
je
inc
mov
movl
and
cmpl
lock
inc
stc
pop
cmp
adc
cmp
add
jle
dec
lock
lock
cmpsl
lock
mov
or
or
fidivl
adc
cmp
cmp
mov
sub
cwtl
es
std
cmp
mov
dec
aad
dec
fsubl
in
in
pop
mov
mov
fwait
mov
cmp
test
mov
adc
mov
loope
jns
push
add
jg
inc
mov
scas
and
add
and
lods
mov
loop
out
pop
jb
push
call
push
call
sbb
add
add
fnstcw
dec
dec
int
loop
lods
loope
cwtl
pop
push
push
adc
and
and
lahf
jl
cld
arpl
jae
inc
jae
popa
cwtl
es
ret
insl
inc
rorb
sti
mov
and
je
cmp
xchg
sbb
in
mov
cwtl
push
shll
inc
cmp
dec
imul
pop
leave
lcall
pop
jecxz
sub
jmp
adc
fs
push
pusha
movsb
ljmp
imul
ds
out
mov
shll
jne
push
pop
aam
mov
ret
les
inc
das
jns
jnp
xor
inc
dec
jae
das
ss
jl
es
sub
lea
cmp
add
mov
jo
pop
cmpsb
push
loopne
addb
rcrl
arpl
insl
lret
push
dec
arpl
ja
push
mov
xchg
ftst
mov
rorl
adc
xor
or
mov
jge
ss
lcall
sbb
jo
adc
adc
sbbl
pop
enter
jg
jb
lods
pushf
jecxz
mov
inc
outsl
and
push
lock
ljmp
pop
ficoms
mov
jle
fisubrl
ret
notl
xchg
inc
jbe
cmp
out
fldenv
or
mov
mov
insl
mov
adc
mov
fisttpl
mov
js
ret
inc
jno
das
movsb
hlt
mov
jbe
xchg
nop
btr
popf
push
xchg
xchg
ljmp
outsb
loopne
mov
pop
notb
es
outsb
push
inc
add
mov
jecxz
add
fs
sub
sti
movsb
mov
sbb
and
iret
addb
das
sbb
orl
fidivrs
movsl
bound
loopne
cmp
push
cmpb
int3
fdivrl
fstp
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
jg
jbe
fmull
inc
ret
xor
xchg
iret
pop
mov
lcall
andb
push
dec
aam
ret
lock
loop
fildll
or
inc
mov
out
outsl
mov
inc
or
icebp
adc
jns
test
jge
out
mov
mov
aam
orl
mov
test
sub
pusha
add
push
cmpsl
push
lahf
in
fldenv
ss
xchg
pop
xchg
jl
hlt
sbb
testl
inc
insl
mov
sti
shlb
or
test
jmp
aam
dec
dec
mov
jb
push
xor
js
xorb
xor
mov
add
adc
stc
xchg
push
ss
ret
sub
andb
js
test
out
mov
cld
mov
mov
and
push
add
es
leave
mov
push
dec
dec
stos
or
or
push
repnz
jg
push
std
outsl
icebp
or
mov
add
cwtl
cld
fs
call
cs
outsl
fs
or
lock
std
xor
push
arpl
out
les
and
in
xchg
stos
popf
movsl
inc
xor
push
mov
sbb
and
sub
xchg
pop
dec
jnp
mov
in
in
imul
fistps
cwtl
mov
out
arpl
movhlps
cs
xchg
imul
in
xchg
sub
mov
fimuls
mov
and
in
dec
divl
or
fidivs
repz
int3
jecxz
adc
shrl
orl
mov
add
jne
mov
lea
and
jge
mov
mov
jl
test
std
fimull
jle
decb
push
stc
arpl
add
cmp
insl
jnp
and
mov
es
subl
cld
rcrl
pop
jmp
fcoml
mov
jle
scas
sbb
cmpsl
in
mov
push
les
fisubrs
xor
push
shrl
xchg
pushf
cmpl
es
dec
lock
push
dec
push
aas
ss
out
cld
jle
mov
loop
mov
cmc
push
adc
movb
cmc
lock
and
inc
call
dec
hlt
in
ret
inc
adc
fldcw
shrb
inc
mov
aam
dec
adcb
sbb
cltd
test
add
daa
push
jge
push
sbb
jg
pushf
inc
sbb
arpl
and
pop
jge
sub
mov
push
jb
sbb
cmp
mov
adc
nop
sub
test
dec
jae
or
push
cmpb
cli
pop
xchg
stos
aad
les
xchg
mov
idiv
sbb
addr16
mov
dec
mov
xchg
pop
mov
pop
jl
sub
daa
push
or
sbb
pop
inc
test
icebp
pop
push
mov
or
adc
lret
mov
test
mov
lds
out
aas
sahf
inc
jmp
enter
testl
test
out
inc
sbb
insb
test
jl
xor
xchg
sahf
cmpsb
jo
push
adc
scas
push
leave
loopne
stc
adc
imul
jo
cltd
sbb
shrl
xlat
fisubrl
xchg
cli
fidivrl
jae
aad
cmc
loope
pop
dec
imul
mov
add
popa
pop
repz
lret
jb
out
adc
inc
and
add
jnp
push
cs
ud1
jno
push
jl
xor
jecxz
in
imul
and
aam
mov
push
lret
jae
data16
mov
out
int3
sub
adc
aad
fisttps
outsl
mov
test
ret
push
and
fistpll
outsl
mov
adc
sarb
cwtl
dec
in
cwtl
sahf
dec
hlt
test
jle
xchg
bound
andl
arpl
add
incl
jno
sbb
cmp
xchg
les
add
sbb
cmp
fildll
outsl
aaa
jb
sub
mov
lahf
jb
or
outsb
movsl
cmp
mov
scas
push
mov
add
jns
push
or
lods
sub
push
or
jp
or
std
push
sbb
adc
fimuls
mov
lcall
nop
cwtl
pusha
sub
mov
call
jmp
mov
fs
test
and
insl
shll
xor
and
xor
insb
push
xchg
sub
xor
xor
xor
movsb
movl
sti
rolb
or
jmp
sbb
inc
pusha
cmp
daa
xchg
es
cmp
xchg
rclb
xor
cmpsl
test
pushf
pop
daa
fwait
inc
int
jg
fdivp
mov
dec
pop
insl
sbb
repnz
mov
testl
clc
pusha
pop
test
mov
push
lods
add
add
or
mov
xchg
lahf
popa
inc
push
popf
cmp
jno
je
sub
lock
ficomps
data16
cmp
cmp
fidivl
es
cmp
or
outsl
mov
jge
jle
repnz
out
ror
out
aad
andl
lcall
repz
ficoms
scas
into
pop
pop
or
rep
pop
int
push
popa
mov
adc
mov
push
nop
testb
shrl
in
pop
movsb
pop
dec
ret
inc
xchg
or
jge
xlat
mov
les
in
lods
scas
or
fimuls
addr16
dec
pop
sbb
lock
inc
xchg
push
jmp
movsb
push
popf
jmp
int3
js
sbb
or
cmp
imul
push
cmp
mov
pop
shl
xchg
jb,pt
sqrtps
mov
gs
fbld
pop
xor
inc
enter
lods
rcl
fisttps
lods
imul
add
cltd
imulb
cld
movsb
stos
out
loope
cli
dec
out
sbb
pushf
adc
and
ljmp
shll
push
out
fiaddl
imul
pop
test
mov
cmpsl
mov
rsqrtps
pop
and
dec
sub
out
mov
jmp
out
xor
jno
jbe
ret
adc
jo
add
in
add
rorw
mov
iret
daa
iret
mov
cmpsl
dec
jb
xchg
lahf
mov
imul
adc
cmp
inc
jg
imul
ret
cmp
mov
push
dec
pop
mov
xchg
adc
sbb
loopne
adc
fistpl
sub
js
ss
jnp
xchg
aaa
lcall
push
mov
sub
repz
fdivs
push
lret
pop
mov
xor
repz
in
daa
ror
scas
jno
aaa
cmp
jg
mov
cmc
popa
xor
imul
sub
aam
xchg
sub
sbb
jno
mov
cwtl
out
dec
and
jno
cwtl
enter
and
std
add
and
sub
les
adc
pop
adc
or
loope
push
ret
gs
mov
push
xor
dec
dec
pop
std
xchg
std
sbb
jnp
xchg
or
sbb
cltd
movsb
leave
sub
cmp
sub
and
sub
shlb
dec
jmp
and
es
xor
add
pop
pop
mov
imul
pop
sarl
or
xor
jecxz
test
sbb
xchg
lds
cs
in
mov
scas
xchg
inc
add
push
mov
sub
jmp
rolb
test
movsb
in
push
scas
scas
repz
add
inc
dec
mov
xor
sbb
arpl
sbb
mov
jno
xchg
and
lock
xchg
test
and
mov
push
fisttpll
movsl
xor
dec
sarl
mov
mov
sarl
push
xchg
jns
dec
dec
pop
std
xchg
std
sbb
xchg
jle
das
cmp
inc
mov
cld
pop
les
ret
mov
sti
push
add
ret
xchg
int3
mov
sub
or
ret
js
mov
sbb
or
cmp
data16
das
and
xchg
ffree
xor
flds
or
push
cmp
pop
adc
jne
aam
pop
call
xor
inc
ret
aad
or
add
and
int3
fnstsw
xor
int3
inc
pop
addr16
arpl
dec
cld
xor
jns
mov
arpl
in
aaa
je
jg
cwtl
lcall
and
mov
add
sub
test
jno
arpl
mov
mov
les
stos
sbb
sbb
or
aam
xor
insl
ss
repnz
ret
rclb
jo
push
lret
ffree
mov
in
orb
xchg
sbb
inc
lret
inc
xchg
and
movsb
movsl
scas
jp
lahf
pop
xchg
mov
int3
mov
loop
out
pusha
xor
dec
fsts
sbb
sub
es
dec
clc
jbe
inc
adc
fs
les
sbb
xor
gs
cli
lock
outsb
mov
and
and
test
lods
lcall
daa
out
and
sub
mov
push
nop
cmp
in
test
cmp
mov
push
sahf
xchg
ds
dec
outsb
repz
pop
arpl
push
jbe
loop
xchg
adc
stos
out
inc
push
jo
int3
mov
push
sarb
inc
push
or
sbb
add
fmuls
test
hlt
int3
xchg
add
xor
jle
out
pop
test
pop
in
rol
xchg
nop
shlb
std
lret
cmpl
xchg
sbb
jo
ret
scas
inc
in
pop
xor
pop
mov
mov
sbbb
mov
outsl
cltd
in
xor
xor
rolb
jg
push
in
clc
add
fwait
stos
lods
mov
xlat
stos
mov
adc
sbb
pop
out
push
cmpsl
shrb
mov
imul
xchg
aas
xchg
jl
fisttpll
dec
mov
jno
xchg
shr
scas
fcmovne
mov
mov
jle
subb
push
lods
adc
test
inc
xor
jo
test
sub
cwtl
cmpsl
xchg
mov
add
jns
add
mov
mov
dec
xorl
sbbl
shlb
call
into
adc
enter
in
movsb
cmp
pop
in
arpl
bswap
stc
push
push
stos
cltd
imul
add
mov
out
cltd
imul
pop
or
mov
sub
scas
and
out
fxtract
push
adcl
ds
pop
lods
mov
add
push
mov
fmul
inc
push
add
xor
inc
popf
cmp
lds
inc
pop
lods
sahf
push
scas
int3
xchg
adc
sahf
sbb
or
mov
out
hlt
mov
insl
push
push
jb
sbb
arpl
sub
mov
push
mov
std
mov
imul
das
movsl
sbb
xor
shlb
mov
nop
push
xchg
cmpsl
sbb
int
sub
shlb
into
mov
aad
push
adc
aad
push
je
jecxz
sub
outsb
mov
xlat
andb
dec
adc
add
jb
or
es
pop
fdivs
aam
imul
inc
adc
mov
movsl
or
sub
inc
and
nop
mov
dec
dec
out
lock
pop
or
ljmp
lcall
push
mov
mov
rcr
jg
adc
out
inc
dec
mov
xor
push
or
out
and
cmp
dec
xor
test
push
mov
test
test
rcrb
stc
les
inc
jnp
jl
hlt
xchg
mov
mov
test
push
or
das
pop
lahf
pop
xchg
insl
iret
push
arpl
xor
adcb
fsubl
negl
jge
and
pop
shlb
xor
std
xlat
inc
je
cwtl
and
movsb
lahf
or
mov
sbb
loop
hlt
adc
dec
dec
negl
or
xchg
xchg
jle
cltd
repz
cmpsb
sbb
fst
jno
stc
sbb
shll
loop
lock
mov
mov
mov
xor
fbstp
jecxz
jno
repz
sahf
jnp
fwait
cmpsl
push
lods
fldl
sbb
adc
and
jge
aaa
fisubs
sbb
add
repz
test
jl
cmc
mov
jg
mov
in
inc
mov
jle
or
jmp
rcll
jns
aad
cltd
ss
iret
in
cmc
lret
mov
push
loope
les
ds
push
adc
jns
rcrb
in
lock
xor
pop
dec
push
adc
jmp
icebp
cltd
rorb
jo
sbb
dec
adc
movsb
lret
xchg
and
cmp
std
mov
cmpsl
cmpsl
push
xchg
pop
jbe
cmp
lahf
incl
inc
inc
int
jns
iret
push
cmp
inc
inc
inc
push
mov
mov
jg
movsl
push
repz
xor
arpl
adc
mov
xlat
repz
dec
icebp
inc
mov
adc
nop
fsubrl
es
or
push
jg
out
sub
pop
jbe
jge
mov
inc
rorl
or
inc
jmp
iret
das
in
pushf
or
outsl
enter
dec
inc
xor
xchg
adc
arpl
roll
ret
sub
mov
pop
cmp
sahf
sbb
mov
adc
or
mov
xchg
cmp
int
inc
repz
inc
push
pop
push
jle
push
and
push
xor
mov
lahf
xchg
xor
cmpsl
sub
dec
push
push
pop
aaa
pop
jae
fs
sarl
mov
xor
andb
sti
xchg
mov
jmp
pusha
sbb
std
xchg
push
mov
fistpll
out
xchg
outsl
inc
sub
push
adc
inc
in
insl
icebp
aaa
mov
gs
in
or
xor
iret
notb
enter
sbb
je
aas
dec
in
pop
in
push
out
int
out
and
jmp
xlat
rolb
sub
or
arpl
addl
fisttpll
push
hlt
cld
std
test
or
shlb
mov
mov
sub
mov
aaa
xor
xor
fcoml
xor
jbe
and
data16
into
inc
lcall
sub
shll
loop
int3
rcl
imul
or
xchg
lods
insl
scas
add
mov
les
imul
mov
in
bound
push
in
push
fldl
stc
mov
loopne
cltd
xlat
lock
mov
inc
inc
subl
mov
adc
mov
mov
push
jae
rol
sub
dec
xorb
xlat
mov
outsl
ja
jmp
jno
je
adc
push
dec
roll
and
pop
pop
ds
pop
into
mov
ds
xchg
sub
daa
or
jmp
lahf
out
es
sub
push
pop
cmpl
push
dec
mov
ret
in
xchg
shlb
adc
cmp
xchg
sahf
pop
or
movsb
imul
inc
faddp
jae
sbb
orl
int3
and
fisttpll
ret
imul
xor
nop
sar
xlat
rclb
mov
push
mov
mov
test
test
or
arpl
push
pop
pusha
repz
and
mov
jae
add
imul
add
popf
out
repz
cltd
arpl
test
xchg
mov
sarb
mov
paddusb
push
pop
dec
or
ss
lcall
rorl
aad
push
ljmp
lods
daa
mov
es
out
cld
aas
loop
stc
pop
cmp
aam
jae
fsubl
xchg
enter
int
lret
or
loop
ljmp
push
mov
jecxz
orb
mov
sub
sbb
xchg
lcall
test
das
gs
mov
pop
pop
jg
and
sbb
arpl
mov
sbb
scas
arpl
std
nop
cmp
dec
or
pop
stc
xchg
mov
mov
addr16
mov
xchg
add
xchg
gs
sti
mov
mov
mov
js
aad
ljmp
das
popf
scas
xorb
mov
xchg
xor
movsl
and
xchg
pop
pop
rcrb
xor
mov
add
xor
push
daa
cmp
aad
stos
pop
inc
sbb
sahf
cmp
inc
and
pop
cmpl
adc
data16
insl
pop
jecxz
add
outsb
js
lret
das
and
mov
jmp
into
sbb
div
mov
inc
dec
jecxz
cmpsb
and
ja
inc
jle
mov
loop
cmp
add
adc
loop
cwtl
test
mov
data16
pop
int3
in
stos
mov
jle
sbb
lock
cmp
stc
into
cld
add
lret
mov
mov
fdiv
push
push
jle
xchg
xchg
enter
and
js,pn
jmp
push
cmc
adc
rolb
cmp
aam
jbe
cmpsb
leave
sbb
cs
pushf
xchg
cmp
adc
push
mov
ds
lods
cmp
xchg
gs
push
mov
mov
cs
sub
dec
or
add
push
movsl
imul
dec
pushf
int3
stos
sbb
push
or
xchg
adc
inc
addr16
mov
aam
pop
sub
mov
add
jmp
repz
shlb
lret
lods
pop
pop
pop
mov
repz
mov
out
rcl
jg
sub
out
sbb
enter
sbb
out
mov
jl
icebp
push
dec
lods
cld
out
pop
pusha
out
sbb
sbb
adc
popf
and
sti
add
outsb
cmp
jg
popa
shlb
test
gs
and
push
cmc
sbb
pop
dec
and
lods
arpl
and
lcall
lea
fs
xchg
js
pop
pop
addr16
sub
lods
push
xchg
jns
pop
call
pop
adc
sarb
adc
or
xchg
add
and
cld
and
out
faddp
fldpi
cli
mov
xchg
xchg
lcallw
insb
out
push
in
cmp
mov
push
push
sub
adc
in
loope
icebp
add
inc
insb
push
loope
cwtl
scas
push
mov
jle
lahf
sbb
mov
loop
pop
aas
movsl
dec
lds
mov
xchg
jge
into
sub
mov
aaa
xchg
out
rolb
sbb
jl
push
mov
push
add
and
testb
cmpl
into
mov
sbb
jnp
jbe
call
mov
stos
or
xor
push
cld
cmpsb
push
jnp
xchg
out
cltd
mov
lret
pusha
pop
adc
mov
push
sbb
stos
fldenv
out
mov
mov
jmp
loope
insb
loop
lods
or
lea
neg
mov
sbb
leave
imul
mov
jnp
jmp
cwtl
js
fnstsw
nop
fistpll
mov
cs
daa
cmp
mov
cmp
js
add
jg
mov
insl
in
aad
in
dec
jno
cmp
xor
rorl
sbb
adc
mov
xchg
inc
cmp
adcl
push
in
lahf
test
mov
and
mov
jle
daa
mov
mov
xor
mov
sub
pop
call
jmp
nop
ret
leave
mov
mov
adc
and
push
push
sub
add
shll
lock
ds
repnz
call
jge
cmp
cli
and
dec
push
nop
punpcklwd
lods
pop
mov
ret
sub
sbb
ds
mov
aam
out
inc
je
insb
pop
pop
jecxz
cmpsl
pop
dec
cmp
enter
xor
sti
jnp
rol
xor
cmp
sub
mov
xchg
dec
mov
inc
inc
out
vpaddq
ret
push
jl
scas
lret
xchg
xchg
dec
mov
xchg
inc
out
mov
jno
popa
sub
mov
push
mov
sti
sti
das
pop
push
cmp
in
jge
sbb
xchg
in
mov
xchg
mov
and
ret
mov
repz
xor
or
fistpll
mov
pop
xchg
cmpsb
fwait
xor
fsubrs
mull
cli
cs
pushf
data16
test
push
roll
xor
adc
pop
inc
lock
and
cli
aad
mov
or
mov
out
sbb
inc
pop
sarb
mov
call
jle
addr16
addr16
or
movsl
in
movsb
xchg
clc
xchg
mov
inc
scas
insb
and
ret
gs
inc
cmp
push
fs
xchg
add
sbb
cmp
je
add
add
add
cmp
mov
jnp
push
adc
rclb
repz
jge
or
fisttpl
iret
jne
loope
test
gs
inc
sbb
out
xchg
loopne
adc
pop
cld
int
pop
sub
btr
fucomi
and
fnstsw
cltd
inc
test
jg
push
sbb
mov
dec
sbb
sub
pop
mov
stc
jg
add
hlt
push
pop
xchg
mov
and
xchg
in
int
mov
mov
fcmovbe
cmp
dec
ret
mov
fmull
xchg
push
pop
fsubl
mov
jns
dec
xchg
or
add
ss
jmp
xchg
mov
xor
in
inc
out
inc
cmp
inc
jmp
jmp
xchg
jle
fbld
dec
data16
jnp
das
add
fadd
loopne
jl
fcmovu
movsb
lcall
push
scas
out
fimull
mov
pop
inc
inc
js
jnp
into
jg
faddp
popf
xor
outsb
lcall
punpcklwd
mov
push
cmp
call
mov
cmp
push
test
mov
mov
cmp
dec
fisttps
push
fisubrs
sbb
sub
pop
cs
add
les
xlat
cmpsb
push
in
stos
push
jl
pop
cwtl
xchg
mov
aas
imul
in
sbb
aaa
xchg
push
in
int3
insl
mov
popa
mov
sar
mov
push
sarb
pop
or
stos
inc
ss
jp
enter
pushf
inc
xor
hlt
subl
inc
mov
adc
sahf
cmpb
fsubl
ret
inc
adc
jbe
fstl
mov
lahf
int3
test
adc
jb
xchg
lcall
outsb
sbb
rorb
mov
push
das
mov
add
push
mov
lods
sub
dec
jae
and
add
leave
inc
in
mov
pop
adc
cwtl
xor
ds
loop
adc
es
push
dec
icebp
mov
and
xchg
lds
fucomip
add
movsb
invd
int
xchg
inc
nop
mov
testb
fidivl
in
insl
pop
mov
rcrl
pop
dec
das
jmp
andb
ss
xchg
sbb
imul
pop
clc
xor
xor
lcall
cmp
jo
cmp
rcr
lea
ja
and
aas
fcmovb
dec
mov
sbb
or
jmp
call
push
add
jae
mov
insl
test
cmp
push
fisttpl
push
pop
mov
inc
inc
xor
mov
mov
in
mov
cmp
into
sub
jge
push
adc
and
push
push
or
ret
pop
call
cmp
popf
xchg
testl
outsl
lods
not
sub
pop
lods
xchg
js
das
jmp
xchg
add
mov
cmp
call
push
pop
loop
cwtl
clc
sub
add
bound
push
xchg
cli
xor
cmpsb
push
lock
rcrb
test
xor
das
mov
loop
jge
mov
adc
cmp
mov
aad
mov
sbb
push
mov
mov
mov
in
ljmp
xchg
loopne
adc
dec
aas
adc
push
push
jle
fnstenv
mov
lods
xchg
shlb
jp
mov
and
aas
ds
ja
xchg
int3
mov
sub
adc
and
mov
leave
ljmp
xor
sub
pop
adc
fwait
test
or
aam
shll
sub
outsb
inc
lret
insl
std
pop
movq
test
adc
push
jp
inc
pop
dec
pop
dec
or
mov
loope
addl
or
bound
repz
sbb
fsubr
xor
lds
inc
pop
pop
pop
int
stc
xchg
push
ss
arpl
xchg
lahf
out
or
pop
xchg
stos
push
jns
nop
add
dec
dec
mov
add
stos
push
es
inc
test
adcl
pusha
lcall
inc
push
or
adc
ss
mov
sbb
push
inc
pop
cmp
imul
loope
lret
test
pop
fwait
repz
cmp
mov
aaa
pusha
add
movsb
jp
into
ret
mov
lret
jecxz
jge
push
fsubrs
arpl
shlb
sbb
in
adcb
dec
fmul
fld
mov
add
dec
add
loop
cmc
sub
icebp
add
loope
roll
xchg
cmp
add
outsl
ds
or
cld
mov
daa
pop
mov
rol
shlb
and
popl
mov
cmp
and
rcrb
push
sub
jge
cltd
jmp
cs
imul
push
adc
out
orl
arpl
mov
pusha
mov
push
loopne
ja
icebp
rcl
insl
rcl
add
add
xchg
roll
adc
stc
imul
inc
icebp
pop
mov
push
ret
lahf
loope
jl
xbegin
pop
add
sub
add
push
out
adc
dec
bound
lods
fidivs
xchg
in
rcrl
daa
push
ret
popa
ret
insl
cmp
insb
push
sbb
and
push
into
push
xorl
subb
mov
add
jmp
fiaddl
shll
imul
pop
jae
aas
les
cmpb
push
sub
sub
and
std
xchg
fnstenv
mov
cmpsb
mov
pushf
pushf
nopl
enter
lods
test
pop
rorb
push
or
or
mov
push
sub
add
loope
ss
fimuls
pop
scas
pop
dec
dec
into
je
shll
sub
push
mov
push
js
cmp
leave
mov
jp
xchg
push
sahf
mov
mov
cwtl
pop
sbb
jge
movsb
je
mov
fidivs
pop
lods
or
sbb
inc
jle
lock
call
fmuls
add
sbb
repnz
std
clc
out
jbe
lods
movl
addr16
fists
shll
aaa
add
es
add
out
push
sbb
sub
dec
adc
or
inc
push
and
jne
jne
pop
sahf
hlt
sbb
sbb
ja
or
aam
xor
test
mov
sbbl
cld
repz
or
lcall
sti
push
test
js
adc
xchg
daa
push
in
and
int3
push
rcr
xchg
jecxz
xor
mov
jbe
aad
fsub
sbb
jnp
push
shll
movsb
sbb
push
scas
mov
xchg
ja
incl
nop
fsubl
xor
mov
enter
orb
cmp
test
cmp
ret
fnsave
pop
push
scas
jne
jge
inc
jmp
dec
fldcw
rcll
sarl
pop
sub
xchg
nop
out
call
scas
add
dec
fiaddl
push
mov
notb
or
test
or
out
jecxz
lds
loopne
mov
enter
inc
mov
inc
imul
mov
pop
jge
or
pop
jbe
mov
add
in
ret
sti
popa
fidivs
cmc
inc
test
xchg
cmp
into
push
mov
cmovnp
inc
sbb
push
mov
cmpw
push
cmp
stos
lahf
cli
sbb
mov
outsb
xor
cli
in
push
je
push
and
aam
popa
std
add
mov
dec
les
xchg
sbb
pop
clc
and
fidivl
push
orb
dec
sbb
andb
aaa
mov
stos
push
mov
sbb
fildl
std
jae
out
push
enter
das
mov
das
notb
lds
shll
popf
pop
xchg
sub
xchg
dec
xchg
push
out
cmp
insb
push
scas
popa
mov
fstl
les
cli
and
dec
and
ljmp
lods
adc
lcall
out
mov
or
pop
mov
adc
mov
arpl
cmpb
cli
pop
xchg
stos
imul
mov
push
lods
xor
ds
leave
rorb
mov
push
xor
and
aam
xor
mov
or
pop
loopne
push
clc
icebp
push
inc
into
jns
jge
xor
clc
das
jmp
cmp
pop
mov
and
add
les
insl
jmp
in
lahf
add
in
dec
or
scas
loope
or
imulb
sbb
jnp
mov
std
sbb
aad
mov
mov
jbe
jl
punpckhdq
test
inc
pop
jp
mov
ss
outsl
inc
pop
div
push
iret
mov
lock
fsts
jg
sbb
pop
inc
cmp
mov
cltd
pop
int3
jbe
jl
pop
nop
jbe
lds
frstor
daa
aas
adc
pop
adc
and
add
dec
xchg
jne
mov
popa
xorl
xlat
je
mov
cmpl
add
pop
xchg
imul
ja
jns
push
jg
and
out
repz
sub
push
daa
sar
or
or
iret
dec
inc
lcall
inc
daa
xchg
cmp
loopne
dec
xchg
cltd
mov
or
adc
fisttps
pop
cmp
mov
cwtl
out
pushf
jle
jbe
jb
js
adc
lock
or
and
sbb
xchg
inc
lods
or
es
mov
pop
repz
inc
sub
mov
in
fimull
pop
je
and
push
adc
xchg
int
xlat
lock
pop
inc
pop
jno
call
lret
pop
rcrl
sti
aaa
dec
repz
push
lahf
dec
pushf
shlb
cmpl
xchg
imul
loope
movsl
xor
out
xchg
mov
and
jae
aas
das
mov
jge
sub
pop
adc
adc
aad
daa
cmp
push
iret
ljmp
push
loopne
mov
mov
aad
pusha
mov
daa
and
adc
das
mov
xchg
ficoml
lock
mov
lds
dec
out
daa
sbb
pop
orl
push
and
adc
jno
sbbb
push
xor
stos
dec
movsb
bound
xchg
lea
outsb
aaa
mov
dec
inc
das
addr16
add
lock
test
jno
sti
pushf
add
push
fs
cmpsl
mov
lahf
mov
mov
imul
lcall
push
pop
lfs
mov
cmp
lahf
dec
pop
mov
dec
pop
pop
mov
and
lret
loopne
outsl
jge
outsl
scas
stos
inc
mov
leave
jns
lods
dec
push
jp
notl
cmp
xchg
aas
movsl
mov
dec
mov
fdivrl
sar
repnz
add
inc
das
cmp
mov
xchg
scas
xchg
inc
jmp
icebp
pop
xlat
sub
adc
int
leave
adc
into
icebp
xor
push
insb
rorl
adc
pushf
and
mov
mov
xchg
dec
mov
adc
es
xor
xor
push
pusha
data16
mov
cli
sbb
xlat
pop
xlat
insb
xchg
add
mov
or
inc
in
sub
xor
leave
adc
or
cmp
adc
ja
xorl
ficomps
sti
fistl
sar
out
repz
stos
enter
mov
movsl
dec
pop
sub
xor
inc
daa
pop
mov
movsb
mov
xorb
dec
fidivs
pop
push
fldenv
daa
pop
dec
inc
and
popf
inc
inc
adc
mov
add
sbb
push
jns,pt
pusha
add
ljmp
jae
mov
lcall
subl
pop
inc
aam
sbb
pop
add
cmp
and
xchg
hlt
xor
xchg
and
adc
jns
shll
lods
push
mov
xor
stc
lods
aaa
cmpsb
lahf
add
xor
adc
jge
push
add
lahf
sub
cwtl
add
popa
jg
call
cmp
jns
mov
sub
jnp
les
sbb
jg
in
sub
jae
or
or
call
dec
push
jg
adc
mov
cmp
mov
fbstp
lret
stc
push
ljmp
sbb
cmp
pusha
icebp
or
insb
jns
int3
and
jl
pop
mov
jge
add
adc
dec
ficoms
mov
cli
jge
mov
mov
jns
jmp
lods
xor
and
sbb
pusha
jo
clc
add
push
xlat
ss
push
mov
pop
dec
cwtl
psrad
cmp
push
rcrb
or
test
orb
cmpsb
ficompl
orl
lahf
into
fnsave
jmp
lcall
arpl
std
xor
sub
jo
repnz
pusha
test
daa
jle
push
push
adc
js
xor
push
xor
leave
ja
mov
aad
repnz
jmp
aaa
rcrb
fstps
lods
push
int
cltd
andl
push
sub
popa
cltd
ror
mov
adc
popf
xor
lcall
ret
ljmp
pop
and
cmp
xlat
sbb
xchg
adc
dec
mov
loope
cmpsl
sbb
icebp
lcall
add
rep
jnp
adc
sub
sti
pop
sbb
imulb
pop
test
mov
lret
das
adc
dec
daa
bound
jb
inc
loopne
out
sub
je
in
push
lods
mov
inc
sbb
mov
push
push
cltd
movsb
repnz
dec
mov
and
aaa
outsb
fidivrl
jp
push
pusha
js
dec
push
cld
inc
cmp
mov
mov
xchg
mov
in
clc
xchg
cli
loop
movsl
das
mov
lret
repnz
add
sub
iret
jp
aam
ja
jns
push
mov
mulb
adc
hlt
in
push
cmpsl
lock
in
lret
adc
inc
xchg
mov
mov
adc
test
mov
xchg
push
xor
lahf
jno
cmc
lods
fcompl
xlat
dec
adc
add
sahf
add
cwtl
add
mov
xor
inc
sub
or
aas
jle
scas
mov
jmp
dec
shlb
xchg
bound
aas
inc
movsl
pop
fsubrs
xchg
mov
dec
xor
lret
ja
cmpsb
and
loop
aam
push
push
pushf
fsubrl
data16
xchg
bound
imul
mov
lods
fiaddl
pop
dec
xor
stc
mov
fistpl
cmpsb
push
jbe
mov
adc
xor
adc
lds
push
xor
lcall
xor
mov
mov
cmc
gs
orl
negl
les
xchg
jnp
ds
dec
bnd
vpmaxub
push
gs
movsb
rcll
mov
mov
clc
push
cs
movsb
jo
pop
stos
push
lods
pop
lods
mov
test
daa
or
out
pushw
adc
jge
push
es
loopne
sbb
bound
sub
jle
mov
mov
jg
imul
cmp
mov
push
and
pop
inc
sbb
test
loope
sahf
mov
sbb
cmp
es
outsl
sahf
jmp
push
pushf
nop
cs
sbb
jecxz
mov
push
outsb
loopne
subl
cwtl
insb
cs
les
stos
shl
fsts
cltd
cmovp
jg
leave
mov
add
jo
pop
fdivrp
popl
mov
ret
out
daa
adcb
sub
imul
pop
push
int3
push
add
sbb
out
add
daa
add
sub
cmp
cltd
mov
iret
push
and
mov
cltd
test
mov
in
int3
jo
push
sti
xchg
push
xorl
imul
push
jne
xor
pop
rol
dec
sbb
cmpsb
jb
xchg
push
mov
adc
dec
aad
pop
mov
rcll
repz
iret
cmp
ret
ljmp
push
push
pcmpgtw
pop
xchg
sub
cmp
and
je
mov
add
mov
das
push
pusha
dec
mov
sub
xor
adc
andb
push
mov
dec
add
data16
stos
sti
test
fmul
mov
lret
dec
mov
outsl
sub
mov
xor
imul
dec
jmp
sahf
adc
popa
mov
add
and
jle,pt
adc
mov
cmpsb
pop
cmp
imul
jbe
int
xor
insl
stc
mov
aam
sbb
or
push
sti
inc
ljmp
popf
mov
or
dec
cmp
dec
xlat
dec
mov
cmc
movl
and
fdivrl
mov
hlt
mov
and
repnz
out
enter
add
xchg
imul
mov
inc
iret
dec
stos
bnd
dec
fimuls
xchg
cmc
fisttpl
cmp
dec
into
std
jmp
xchg
sbb
cli
xchg
into
sub
in
lret
sbb
xchg
into
daa
dec
mov
jb
mov
ja
cwtl
fildll
sub
fldz
frstor
aas
mov
push
xchg
call
mov
mov
add
xchg
aaa
pop
cmpb
pushf
out
xor
pop
and
pop
jle
sub
jg
int3
mov
dec
mov
cmc
jno
ss
xchg
in
fidivrl
or
xor
fdiv
dec
ret
popf
adcb
pop
xor
jmp
mov
cmc
mov
pop
inc
aad
out
popa
jge
popa
jne
mov
add
cld
push
movsb
inc
adc
mov
outsb
arpl
mov
mov
mov
xor
shrb
add
pop
xchg
test
popa
add
sub
pop
cltd
ret
cli
jne
dec
dec
jmp
test
stc
adc
inc
xchg
aas
int
xor
cwtl
loop
loopne
bound
xlat
inc
inc
and
push
mov
xchg
mov
xchg
jmp
popa
xchg
pop
fcmovbe
mov
jle
push
arpl
addb
mov
jo
pop
scas
dec
int
pop
in
pop
push
or
dec
inc
dec
in
fsubs
mov
loopne
ss
in
mov
xor
std
fstps
xor
dec
outsl
or
dec
pop
dec
add
inc
into
cmpsl
lock
cwtl
pop
movsl
lss
ljmp
clc
mov
mov
or
stos
loopne
and
ret
lea
outsb
dec
clc
sub
mov
sbb
dec
fdivrl
pop
jb
push
cld
into
ljmp
popl
scas
dec
xlat
mov
jp
addb
test
mov
jmp
xor
cmc
push
xchg
clc
lahf
cmp
decb
repnz
out
pop
test
pop
outsl
jae
ja
aam
pop
pusha
nop
sbb
mov
cmp
sub
cmpsb
ficoms
fisttps
sar
test
movsb
mov
push
or
lcall
shll
aas
repz
sbb
jb
mov
inc
jo
push
cltd
pop
lock
dec
xor
xor
fadd
fwait
mov
sbb
push
push
xchg
aad
pop
enter
jge
pop
fisubrl
arpl
add
out
icebp
cmpsb
mov
sub
sub
rcrb
dec
mov
bound
cmp
mov
clc
adc
js
push
test
lret
ljmp
mov
inc
sub
xor
into
imul
inc
out
lods
dec
xchg
sub
cmp
out
xor
push
andl
adc
idivb
cmpsl
cmp
adc
in
test
xlat
inc
clc
dec
call
or
lahf
add
dec
jecxz
xchg
xchg
jle
subb
pushf
int
outsl
dec
ret
mov
jge
loope
push
pop
sbb
pop
vpcmov
mov
or
mov
lods
out
in
xchg
jp
inc
std
inc
sub
pop
xor
pusha
jmp
sub
and
shl
or
xchg
push
scas
xchg
aam
ret
insl
add
mov
in
sub
test
out
fiaddl
push
cs
sti
in
ljmp
rol
jmp
sub
shrl
or
push
lcall
hlt
lret
lea
xor
cs
jle
mov
inc
or
cmpsl
mov
test
ss
js
cmpsl
lahf
cmp
icebp
orl
stc
push
dec
inc
cmp
cmp
cmpsl
cmpsl
nop
and
inc
mov
idivb
dec
nop
fucom
jmp
stos
rorb
sbb
imul
dec
sbb
ret
sbb
in
mov
imul
pop
add
mov
mov
push
inc
xor
mov
xchg
loope
and
mov
loop
mov
push
into
inc
fcomi
lret
mov
add
aaa
aas
adc
inc
pop
jle
shr
clc
jge
les
pop
mov
push
pop
xor
lahf
mov
mov
mov
divl
std
lock
jg
in
outsl
lea
inc
insb
loope
xor
xlat
sub
imul
mov
loopne
mov
adc
scas
stos
popf
or
cld
lea
popa
xchg
cmp
lods
aad
sbb
mov
fsubs
test
inc
sub
pop
nop
arpl
mov
pop
repnz
fsubl
xor
mov
and
sbb
dec
daa
divl
lods
push
in
jecxz
roll
movsl
adc
dec
add
sbb
test
jg
enter
arpl
test
das
jge
lock
inc
xchg
in
mov
add
add
mov
or
test
sub
mov
int
leave
fiaddl
cmp
mov
dec
loopne
xchg
inc
insb
popa
mov
cbtw
jns
outsb
add
stos
pop
loopne
mov
adc
adc
mov
sbb
pop
adc
cmovg
jmp
xor
mov
mov
int3
rcll
and
fstp
int
sub
scas
and
dec
shll
xchg
sub
das
insl
nop
inc
or
jbe
or
dec
or
adc
into
xor
xchg
dec
mov
insb
enter
jp
xchg
outsb
je
xor
jle
imul
rcll
pop
leave
scas
sub
add
pusha
mov
sbb
jl
push
stc
push
xor
lea
ret
addl
call
mov
xchg
je
xchg
add
fisttps
outsl
dec
lods
sub
mov
xchg
ret
mov
gs
pusha
mov
sbb
in
addr16
dec
sub
pop
bound
int3
lahf
iret
or
aam
mov
mov
dec
ljmp
popa
mov
test
cs
dec
mov
pop
setle
outsb
in
mov
mov
out
mov
loop
and
mov
mov
fsts
daa
mov
inc
iret
and
jbe
push
inc
loop
mov
ss
mov
inc
sub
pop
mov
mov
stos
push
dec
imul
mov
mov
ret
movsl
and
jbe
sti
mov
decl
es
mov
jno
sbb
push
push
inc
shufps
ss
add
sub
ficompl
jle
and
mov
outsb
popf
pop
dec
add
pop
sub
fwait
adc
adc
xor
imul
mov
lcall
out
jmp
imul
andl
sub
cmp
push
hlt
cmp
mov
pop
inc
add
out
mov
or
mov
pop
pop
pop
pop
cmpsb
inc
test
cwtl
aaa
dec
push
sub
setne
clc
jp
shrl
mov
adc
cmpl
adc
or
rcrl
push
ficompl
std
cmp
cmp
jg
test
hlt
sti
xor
push
insl
mov
mov
and
loope
outsb
fistpll
fadds
dec
cmp
lock
pop
mov
nop
mov
gs
cmc
scas
mov
inc
les
xchg
dec
pusha
out
cmpb
and
add
daa
mov
push
out
adc
sbb
mov
inc
adc
imul
andb
xchg
std
mov
or
cwtl
jl
dec
jmp
insl
xchg
testb
enter
lea
sbb
das
outsl
ret
hlt
pop
pushf
cmp
mov
push
or
or
dec
mov
imull
cmp
mov
sbb
jp
lock
lret
mov
add
imul
imul
dec
ja
push
lahf
addl
rorb
push
jbe
ja
outsl
xchg
imull
or
loopne
push
stos
imul
iret
jae
cmp
inc
or
dec
mov
xchg
pop
dec
pusha
lahf
in
fnsave
push
sub
stos
dec
stos
in
cmc
sbb
imul
icebp
fistpl
movswl
lret
sbb
pop
cs
dec
mov
adc
or
in
aad
imul
xchg
jnp
lds
dec
stos
fcomps
jnp
and
push
cld
data16
jecxz
cmp
in
pop
dec
arpl
push
pop
mov
ret
mov
jge
inc
cmpsb
pop
es
xlat
int3
and
aad
inc
or
sub
inc
je
sbb
dec
push
push
mov
scas
push
jnp
sub
into
movsl
dec
sbb
cmp
sub
jmp
loopne
sbb
or
bts
cs
fwait
and
lock
cli
cwtl
scas
and
push
leave
movsl
mov
stc
rclb
xchg
lock
sbb
mov
pusha
or
addb
pusha
push
div
outsl
inc
bound
or
fsubr
mov
pop
mov
mov
jb
mov
rorl
xchg
cmc
int3
imul
je
push
int3
xor
loope
cwtl
inc
mov
gs
push
jo
and
mov
jle
cmp
lds
mov
pop
lods
xchg
insl
inc
pop
sub
std
xchg
aam
lock
inc
hlt
inc
stc
sub
adc
lods
out
adc
xor
cwtl
mov
adc
pop
add
cwtl
push
pop
dec
mov
jbe
ds
push
fistl
das
rclb
pop
aas
daa
repz
and
or
mov
cmp
lret
pop
or
test
cmpsl
inc
xchg
negl
sbb
mov
add
jg
pop
xor
imul
movsb
bnd
fsubrl
lds
push
cmpb
and
out
add
dec
pop
icebp
sbb
lds
andb
sahf
sbb
insb
out
push
pop
in
fisttpll
sub
jle
mov
es
cmp
fistpll
jbe
ficomps
add
pop
pop
cltd
mov
stc
lock
jo
dec
test
jmp
lds
mov
or
mov
ret
pop
mov
mov
push
push
in
addr16
int
das
jne
out
imul
jb
add
mov
push
cmpl
pushf
lock
loopne
jmp
pop
cmp
call
xor
adc
or
or
sbb
out
mov
mov
popf
test
mov
out
jge
xchg
outsl
sbb
pop
aad
jno
mov
xor
pusha
pop
sub
sbb
stos
repnz
or
fidivl
out
adc
xor
mov
std
push
ds
or
hlt
mov
lds
outsb
or
jmp
test
sbb
fsts
jns
sub
mov
mov
cmp
inc
out
xchg
xchg
sti
inc
test
out
out
loop
fs
out
mov
sub
fists
or
xchg
pop
lahf
fld
stos
mov
push
jbe
les
xchg
pop
jmp
mov
sbb
cmp
fstpl
inc
jnp
lea
aad
mov
clc
call
mov
cs
pop
xchg
sti
and
loopne
pop
and
rol
pop
inc
pop
imul
sub
aaa
gs
mov
dec
lods
mov
cmp
and
jge
mov
cmpsl
push
push
cltd
clc
push
shlb
xlat
in
xchg
cmpsb
sub
out
mov
mov
adc
or
flds
cmp
add
and
xor
ja
addr16
sahf
jbe
jb
int3
scas
add
loope
push
bts
in
mov
fsub
inc
inc
loope
loop
divb
outsb
out
js
push
gs
adc
test
xor
mov
push
xchg
sbb
mov
xor
adc
adc
bound
pop
in
je
add
addb
cmpsb
clc
cmp
outsb
ds
dec
pop
push
mov
mov
push
inc
shll
fsubl
dec
dec
mov
std
jmp
mov
shrl
negl
shll
push
push
pushf
inc
dec
mov
out
in
dec
sub
idivb
add
aam
xchg
pusha
adc
movsl
mov
sbb
lds
inc
stos
cmp
add
xchg
jle
into
jg
lods
pop
inc
xor
xchg
cmp
pop
dec
or
pop
insb
lret
rorb
rorl
lea
test
pop
outsl
cwtl
inc
pop
ficoml
push
mov
divl
pop
mov
xlat
push
mov
pusha
icebp
loope
cwtl
push
imul
mov
push
and
sub
xchg
aad
enter
int
mov
repz
maskmovq
testl
shl
mov
std
out
or
jae
push
fisubl
call
mov
and
lret
jnp
jbe
xorb
into
imul
cmp
std
add
cmp
mov
xor
out
out
dec
nop
mov
push
das
imul
mov
jg
popa
sub
add
lds
dec
out
mov
jge
cwtl
cmc
adc
int3
shlb
add
loopne
push
fsubr
jmp
sbb
xor
cli
inc
cwtl
mov
pop
enter
xor
cmp
lcall
lods
adcl
imul
shrl
loope
es
and
or
xchg
push
adc
jp
mulb
cmpsb
jbe
addl
pop
push
inc
and
leave
scas
dec
dec
lds
cmp
testb
xor
rcrl
stos
xor
sub
mov
js
jne
mov
xchg
xchg
pop
xor
adc
sub
nop
jecxz
adc
push
daa
and
std
and
sub
mov
fstpt
ljmp
adc
mov
sub
lods
add
xchg
test
pop
dec
mov
lret
stos
ret
scas
adc
cmc
mov
stos
or
les
xor
or
or
push
iret
xchg
or
pushl
push
mov
movsl
inc
sbb
pushf
or
outsb
mov
sbb
fdivr
jg
rol
jp
sbb
xchg
lret
mov
js
not
xchg
aas
inc
addl
push
jae
and
lods
repnz
ljmp
aas
fldl
dec
pop
sub
push
sbb
cld
push
pusha
pop
cmpl
fidivrl
pop
lcall
add
mov
xchg
and
stos
call
dec
pop
cmp
andb
and
data16
loop
mov
pusha
clc
cld
inc
mov
inc
sub
dec
push
enter
in
xchg
pushf
into
fistps
push
popf
enter
stc
lods
ds
inc
mov
pop
or
or
mov
jp
or
int
add
mov
jno
adc
pop
pop
into
or
pop
ds
ret
xor
xor
jp
push
enter
add
adc
icebp
lahf
xor
mov
outsb
mov
sub
mov
xchg
cmc
mov
nop
dec
fsubl
and
out
push
cmp
adc
cmp
mov
dec
iret
lods
xlat
jns
push
in
popf
inc
mov
cwtl
adc
mov
push
jae
dec
xor
cmp
out
mov
in
and
or
cmpsb
lea
call
test
xchg
dec
push
pop
or
lods
jae
imul
fnstcw
scas
in
lahf
call
and
pop
push
out
movsl
testb
xchg
int3
mov
bound
inc
xlat
mov
into
lods
in
clc
add
inc
bound
testl
dec
hlt
clc
ljmp
insl
push
mov
jns
push
mov
jecxz
idivb
or
mov
mov
cmovle
cmp
sub
inc
insl
mov
and
add
addl
ret
lods
mov
jcxz
and
jae
sub
ffreep
push
and
and
mov
mov
mov
dec
je
inc
sbb
push
repnz
sbb
add
cmp
iret
mov
popa
jmp
dec
dec
aam
js
sbbb
cmp
leave
xchg
lret
imul
ss
movsl
fidivs
jb
js
in
sub
call
scas
out
fisubrl
pop
ss
sbb
test
shl
mov
pop
sti
xchg
inc
mov
cmp
or
xor
shlb
push
call
shl
mov
mov
dec
dec
fnstenv
jnp
and
fdivs
fisttps
and
repnz
lahf
mov
mov
push
sub
lret
dec
jnp
jmp
and
cmpb
lcall
push
sbb
add
loope
repnz
jp
jne
fdivl
repz
cltd
out
pop
les
sbb
sub
cltd
pusha
enter
mov
inc
pop
pop
jmp
cwtl
cli
jecxz
push
or
addb
xlat
cmp
xchg
adc
sti
xor
clc
test
outsl
sbb
dec
jmp
lcall
jge
mov
imul
dec
scas
sbb
jle
sbb
into
sbb
pop
pop
clc
pop
dec
xlat
in
cmp
adc
sub
loop
mov
jnp
ja
icebp
cli
push
insb
int3
pusha
leave
in
ljmp
add
orb
pop
ja
inc
mov
daa
mov
push
push
sub
add
fwait
jae,pn
cli
xor
fstpt
mov
xchg
xor
out
push
imul
jmp
mov
sub
pop
test
sub
dec
cltd
fimuls
xor
pop
add
xor
subb
test
cmp
leave
or
sub
cli
jl
test
gs
fstpl
cmp
jl
sub
and
data16
dec
push
xor
andl
mov
stos
out
aad
jecxz
dec
out
mov
add
std
jg
push
lcall
xor
inc
xchg
lret
add
in
xlat
mov
sub
xor
mull
push
popf
in
into
cmp
mov
sbb
arpl
push
pop
into
dec
push
adc
cmpsl
and
mov
fwait
aam
mov
loop
mov
test
roll
and
lret
add
cmp
add
add
in
lcall
aam
sbb
cld
dec
int3
aad
sub
mov
adcb
loope
or
int3
mov
rol
cli
jmp
insb
mov
add
cmp
mov
jp
rcr
insl
or
cltd
inc
lahf
or
adc
push
adc
std
inc
xor
scas
mov
dec
lds
mov
das
mov
push
ds
xchg
out
push
jmp
add
dec
cmc
dec
aaa
push
mov
outsl
sbb
subb
stos
lea
push
xchg
and
out
fimuls
data16
mov
adc
daa
leave
daa
out
inc
divb
or
mov
pushf
xor
loope
popa
lock
cmpl
in
lahf
shlb
fdivs
cmp
mov
sahf
push
mov
inc
das
ljmp
xchg
sbb
xor
xor
cmpsb
in
xchg
inc
push
and
jbe
pop
int3
loope
ja
and
jnp
jg
sti
lahf
push
es
ja
cs
and
mov
inc
fxch
lods
cmp
inc
pusha
mov
adc
push
out
nop
push
pop
lret
sub
add
xchg
std
iret
mov
repz
inc
jl
xchg
arpl
popf
call
mov
push
xchg
and
pop
andb
pop
test
mov
rorl
fiadds
xchg
das
ret
sbb
cmpsb
mov
adc
sbbl
aaa
and
js
imul
cmc
mov
popf
push
out
negb
test
insb
stos
shlb
jp
xchg
adc
xcrypt-cbc
cmpsl
xchg
cmpsb
xor
pop
cwtl
ret
fidivl
xchg
sarb
push
or
leave
xor
lcall
xchg
jb
popf
in
push
arpl
imul
in
cmp
ss
mov
jg
mov
out
popf
in
push
arpl
push
adc
mov
rclb
and
pop
add
lret
mov
std
shl
push
pop
push
adc
into
adc
scas
loopne
push
call
dec
sarl
jne
sub
mov
and
pop
push
pavgb
jge
mov
push
addr16
pop
or
push
xchg
push
lods
movsb
adc
bound
jo
call
mov
and
imull
pop
xchg
sub
das
pop
pop
mov
jg
fsts
loopne
push
out
push
test
xor
popa
push
inc
jbe
in
dec
sarl
data16
add
test
push
in
scas
cmpsl
iret
dec
int
mov
push
xchg
push
xchg
mov
mov
popa
mov
sub
or
ret
cli
test
out
dec
fidivl
imulb
xlat
push
dec
popf
jg
sub
or
scas
dec
jp
inc
movl
fsts
pop
jnp
jno
cmpsb
out
test
shll
adc
outsl
add
les
dec
jp
insl
ret
xchg
push
arpl
stos
push
jns
mov
pop
les
xchg
fcomps
xchg
das
or
or
push
insb
inc
ljmp
sub
push
out
push
cmpsl
jecxz
mov
push
aas
fwait
subb
mov
and
jge
lret
loope
test
cld
call
inc
mov
cmpsb
inc
mov
dec
in
xor
mov
push
sbb
pop
es
inc
push
repnz
mov
lds
fxch
sbb
adc
lock
add
addl
popf
pop
out
cs
mov
xor
aaa
rcrb
pop
pop
jge
arpl
shrb
cmpsb
test
and
aaa
push
out
mov
jge
dec
cmpsl
int3
xor
inc
push
jbe
pop
jl
and
loop
inc
test
fstp
and
shll
cltd
imul
int
sub
xor
pop
pop
fwait
pop
or
push
aaa
add
jae
int
int3
popf
mov
xchg
mov
cmp
outsl
test
imul
out
fs
movsl
sbb
sbb
ss
mov
in
push
movsl
or
dec
xchg
cmp
jno
ret
das
inc
insl
cmp
adc
jmp
push
xchg
aas
dec
rcrb
bound
mov
inc
mov
add
rolb
cmp
mov
addr16
cwtl
test
clc
push
adc
aaa
leave
popa
xchg
hlt
xor
aas
insb
popf
std
or
imul
cmpsb
and
mov
pop
add
mov
jge
jno
add
adc
in
scas
orb
ret
dec
dec
imul
add
pop
push
xchg
pop
jno
insb
out
lock
cmp
mov
scas
in
mov
xchg
mov
push
inc
scas
mov
mov
xor
fs
arpl
daa
and
imul
ret
dec
dec
xchg
rcrl
arpl
lock
call
loopne
sub
and
lds
mov
inc
and
xchg
lret
mov
xor
add
mov
inc
shrl
mov
push
popa
xchg
inc
bound
ja
cmp
vmovhpd
sbb
adc
sub
pop
cs
jmp
cmp
add
xchg
lea
mov
xchg
mov
fists
cwtl
shrb
jp
push
adc
mov
and
sub
push
cltd
jne
iret
mov
inc
aaa
mov
dec
inc
mov
adc
mov
lock
mov
lahf
stos
in
data16
mov
or
jnp
loop
dec
rorl
xor
fildll
inc
enter
cmp
in
pop
cmp
and
and
lahf
or
mull
bound
mov
xchg
imul
out
inc
xor
repz
or
inc
and
nop
loop
inc
mov
leave
inc
mov
push
push
cmp
xchg
jecxz
adc
in
loopne
mov
mov
adc
cmp
jb
add
push
mov
mov
pop
xchg
xor
lock
pop
out
pop
mov
add
jle
lahf
push
fld1
nop
hlt
out
sarb
sbb
out
fadds
lods
adc
or
mov
inc
jmp
pusha
pop
ret
test
addb
cmp
or
add
mov
mov
int3
sahf
xchg
cltd
repz
fisttpl
xor
push
out
outsl
sub
pop
cltd
xor
and
push
mov
xchg
jle
stc
cmpsb
sbb
sub
loopne
aaa
ja
sbb
mov
das
fs
imul
xchg
out
jl
js
xorb
mov
cwtl
fisttpll
out
add
movsb
or
test
fidivrl
xor
inc
mov
adc
icebp
dec
add
iret
leave
jo
fucom
repnz
popa
and
jae
mov
ljmp
sbb
xlat
and
add
and
fsubs
adc
scas
test
xchg
repnz
ret
push
sbb
or
push
adcl
loope
aad
dec
rolb
outsb
xchg
sbb
test
jno
mov
dec
stc
aad
ja
lds
jg
add
jge
inc
add
cmp
push
add
sbb
mov
push
enter
adc
insl
pop
or
inc
adc
pop
dec
inc
sub
sti
push
adc
test
testb
lret
pop
ror
jnp,pn
adc
xchg
sbb
rcr
or
pusha
mov
jnp
adc
mov
rclb
inc
cmp
call
aam
outsl
pop
push
mov
pop
adc
xchg
and
ja
push
add
xchg
inc
mov
adc
push
fcmove
jb
xchg
cmpsb
ljmp
in
pop
sbb
mov
ja
lods
pop
jb
pmulhw
repnz
lds
jecxz
xchg
inc
push
cmpsl
sbbl
jne
stc
pop
pop
std
adc
out
xor
ret
ficoms
jge
xchg
fdivr
enter
pop
push
pop
pushw
add
or
aam
clc
sub
repnz
push
out
push
cli
push
pop
sbb
dec
outsl
push
push
outsb
inc
cmp
xlat
xchg
into
fldt
stos
and
add
sub
lret
jmp
pushf
push
push
mov
in
jae
pushf
sarb
jno
mov
arpl
xor
mov
inc
adc
xchg
pop
mov
cmp
push
xchg
icebp
cmpsb
sarb
fimuls
int
aaa
test
aam
nop
rcll
or
xor
mov
push
mov
adcl
push
jl
pop
enter
push
aaa
or
jmp
xor
hlt
fstps
inc
shll
and
pop
dec
aaa
mov
dec
pop
repz
out
cmp
in
jp
push
movsl
sub
clc
mov
mov
popa
mov
lods
and
mov
sub
push
mov
push
pop
out
xor
cmp
shlb
shll
xchg
mov
xacquire
stc
mov
push
pop
jl
movsl
or
or
sub
lahf
xor
jecxz
popf
pop
rolb
into
mov
cmp
push
sub
xchg
lods
int3
push
mov
mov
addr16
lock
pop
jbe
jb
stos
cli
ror
mov
mov
pop
jns
mov
and
std
addr16
push
lods
push
cmpsb
mov
dec
push
xchg
mov
push
or
lock
mov
jbe
and
xor
cld
xchg
pop
repnz
test
mov
adc
dec
jecxz
adc
inc
inc
addl
inc
jg
jl
xor
ret
mov
add
call
xchg
pop
stos
es
cmp
roll
lret
pop
mov
mov
adc
mov
dec
mov
mov
xor
cli
jno
pop
jo
insb
ret
mov
add
push
test
mov
xorl
movsb
cmp
pusha
pop
jne
xchg
orb
rclb
jo
mov
ret
adc
dec
test
mov
lcall
scas
sti
imul
and
das
lods
sbb
jg
sbb
adc
jnp
adc
clc
or
mov
in
sbb
add
xor
mov
add
rcrb
ror
lods
and
pop
lock
sub
das
mov
scas
lods
cwtl
shll
jge
xchg
pop
mov
lds
cmc
adc
inc
and
shrl
or
fnstsw
add
mov
mov
push
in
loopne
mov
sub
lds
shlb
and
jns
mov
std
lods
mov
leave
sbb
cltd
push
mov
jecxz
ljmp
imul
mov
das
sti
push
sbb
pop
push
push
out
cmp
pushf
pop
jo
mov
inc
ds
insb
xchg
jp
and
ss
fldcw
idivl
rorb
xchg
sbb
outsl
add
sbb
push
mov
lahf
cmp
push
cmp
hlt
movsl
xor
inc
jle
mov
jne
fsubrs
cli
cwtl
or
mov
cmp
ljmp
push
negb
mov
mov
sub
outsl
cltd
push
adc
sub
pop
loop
lret
jb
sysenter
xor
or
out
aaa
sub
dec
loope
pop
push
inc
push
push
xchg
pop
popf
jmp
sbb
shl
loop
addr16
movsl
mov
mov
aas
movsl
cmp
je
ret
mov
lret
xchg
or
in
ss
dec
into
aaa
les
cmp
xlat
into
dec
mov
test
and
dec
jl
shrb
into
sbb
jmp
sbb
and
sub
fisttps
fucomi
cmove
dec
clc
iret
mov
inc
test
sbb
jmp
xchg
fdivrl
lds
jb
sub
sub
xchg
mov
popf
out
roll
int3
adc
sbb
mov
leave
repnz
jl
add
ljmp
add
aad
inc
xchg
pop
test
nop
xchg
sahf
incb
jbe
sbb
push
nop
xchg
lds
lcall
inc
clc
mov
xchg
test
xor
cld
and
mov
andl
jno
xchg
push
out
movl
or
aaa
mov
std
mov
ds
sub
lahf
mov
pop
ficomps
pop
out
lods
mov
aam
add
popf
jo
jno
rorb
je
cmpsl
lret
jecxz
cmc
imul
add
movsl
in
fildl
loop
int3
jne
mov
dec
xlat
lret
jo
mov
stos
dec
push
xlat
test
and
sub
mov
xchg
mov
mov
xor
jb
shrb
xchg
shll
inc
mov
mov
mov
add
adc
daa
jne
ds
clc
add
cmc
xor
fidivs
sub
or
out
psraw
jp
add
xchg
repnz
sbb
dec
push
jecxz
and
ss
push
sbb
stos
sub
andl
jns
mov
sub
adc
fistps
shl
mov
push
sbb
jp
push
sub
stos
cs
xorb
xor
mov
sbb
adc
cltd
cmp
subb
jbe
push
push
add
or
xor
out
pop
pop
jmp
mov
cmpsl
mov
cmpsb
sbb
sarb
fisubl
mov
sbb
negl
mov
sbb
cmp
mov
rclb
mov
das
mov
loop
mov
inc
icebp
mov
cmpsl
push
das
mov
icebp
mov
mov
sbb
icebp
sarl
push
push
je
stos
mov
imul
sub
sub
into
jb
cmp
and
jmp
xor
jle
sbb
xchg
pop
es
lahf
and
mov
sti
jg
adc
mov
dec
cmpb
pop
mov
cmpsb
insl
mov
lods
fists
gs
sahf
les
dec
outsl
pop
jns
adc
fwait
adc
jno
mov
mov
clc
mov
imul
xchg
out
ret
sbb
pop
adc
fbstp
in
lret
inc
lahf
xchg
inc
dec
cmc
sbb
push
repz
das
cld
push
dec
cmp
sti
int
test
add
pusha
sbb
int
sarb
clc
xlat
stos
cmp
push
shrl
adc
inc
insb
mov
repz
jp
outsl
repnz
cmp
cmp
rcrb
imul
fdivl
in
or
mov
aas
mov
push
sbb
jge
xor
aas
adc
insb
cs
stos
ja
lods
imul
dec
and
out
pop
sub
fldcw
cmp
inc
xor
lcall
xor
hlt
xchg
shl
push
fidivrl
lods
cmp
mov
pop
xlat
outsl
xor
mov
and
xchg
dec
stos
jb
iret
cwtl
ljmp
fisttpll
xchg
aad
push
cmp
push
or
dec
push
clc
pop
mov
jecxz
push
lds
aas
out
daa
movsb
push
inc
jg
popf
mov
mov
mov
sbb
xor
lock
push
sbb
pop
aad
inc
cmpsb
or
imul
les
adc
dec
pusha
out
int3
enter
pop
fildl
fmuls
shll
cmpsb
pop
lea
jo
mov
push
out
loop
or
inc
push
pop
xor
mov
and
jg
dec
sub
cld
dec
mov
into
sbb
insl
pop
jecxz
push
adc
fsts
mov
mov
dec
gs
popf
xor
scas
ret
shl
jno
cmp
es
jnp
lcall
shrb
push
negb
xchg
pop
inc
cmp
xchg
cmc
or
es
mov
inc
outsl
dec
xor
cmp
cs
aaa
pop
nop
push
out
sub
xchg
lcall
mov
rcrl
popf
repz
xchg
jle
in
pop
cmp
jle
mov
inc
jmp
enter
and
lcall
xor
and
xchg
sbb
rcrb
xchg
mov
bound
inc
lds
or
mov
pop
dec
jle
rcll
push
insb
sub
xchg
sti
popf
add
daa
mov
mov
jle
int3
outsl
dec
nop
sahf
push
xlat
pop
mov
or
mov
xchg
mull
insl
in
call
mov
jae
pop
scas
mov
jmp
add
mov
jmp
pop
call
call
sbb
cs
fsubr
scas
shlb
sbb
not
inc
pop
sar
out
add
xchg
call
mov
fsubl
adc
sbb
push
repnz
cmp
int3
xlat
test
aam
mov
push
xor
pop
repnz
pusha
adc
mov
mov
cld
xchg
fsub
jle
push
and
mov
mov
mov
loopne
rcrl
pop
sbb
gs
push
inc
push
xor
popa
fwait
xchg
popf
xchg
movsl
mov
push
mov
ret
sbb
jne
aas
insl
dec
in
dec
repnz
ss
and
and
fildll
ret
lods
push
inc
outsb
out
jg
clc
aas
sti
leave
in
subl
ret
fimuls
adc
sbb
xor
jmp
push
in
pop
dec
fs
mov
add
xchg
lret
sbb
adc
sbb
lahf
pushf
jp
pop
int3
test
fs
sbb
sbb
xchg
cmp
jbe
std
pop
xchg
imul
hlt
ja
adc
sbb
arpl
jae
testl
pushf
sbb
sub
adc
data16
mov
and
cwtl
addr16
mov
repnz
or
sbb
sub
or
jmp
cmpsl
mov
and
mov
dec
push
jge
xchg
ds
imul
sahf
imul
pop
or
push
addb
fists
inc
jle
pop
mov
pop
jno
pop
and
rcl
loopne
inc
andl
mov
inc
jb
ja
lret
arpl
iret
pop
mov
dec
jecxz
mov
xchg
xchg
nop
cmp
mov
cs
divb
add
mov
and
stos
lea
jne
shrb
into
cwtl
ret
es
in
fs
aam
pop
cli
jp
or
mov
jl
bound
add
jno
adc
pop
jbe
sub
mov
push
jg
testb
sti
rcrb
fucomi
pop
xchg
daa
jecxz
push
push
adc
mov
test
xchg
cmc
test
mov
shrb
popf
divb
ds
incb
push
ljmp
mov
or
cmc
xchg
repnz
jbe
inc
mov
stos
rorl
dec
jns
in
push
mov
and
fimuls
xchg
pop
jnp
xor
icebp
lcall
dec
push
sar
in
shl
loope
daa
push
fisubrl
loope
lret
add
lahf
lcall
insl
or
push
stos
and
xor
test
inc
adc
lds
jne
dec
or
cwtl
xchg
pop
push
sbb
pop
das
cltd
aaa
jns
addr16
sbb
stc
sub
jnp
in
inc
xor
fstps
and
add
popa
jl
xchg
push
jge
mov
or
jl
test
sub
pop
and
cwtl
ret
add
dec
xor
mov
popf
dec
sbb
add
push
add
test
daa
call
xchg
dec
rcr
ljmp
cmp
push
pushf
test
xor
sbb
call
xchg
add
lock
mov
int3
mov
mov
add
int
xchg
shll
mov
iret
and
mov
cmp
pop
je
es
mov
jecxz
pop
xchg
cmp
inc
lods
fcmovbe
and
les
or
imul
scas
lret
rcrb
push
cmp
jmp
xchg
das
ret
in
jae
push
mov
push
lea
mov
and
mov
pop
sbb
dec
and
add
sbb
or
sub
dec
lds
xor
stc
pop
mov
fbstp
fcmovne
in
mov
leave
jnp
rclb
icebp
nop
lds
shll
stos
lock
or
or
addl
sbb
aaa
xlat
scas
dec
inc
pop
std
mov
lret
and
or
mov
scas
in
jb
add
aad
imul
add
add
mov
xor
mov
hlt
xchg
test
ret
sahf
dec
lods
jge
iret
push
adc
sub
xchg
movl
inc
mov
rorl
clc
jg
ja
dec
ja
sub
sahf
lods
scas
repz
fbld
fucomp
jecxz
divb
pop
add
lahf
shl
sbb
inc
xor
les
and
subb
inc
dec
ss
jecxz
push
adc
and
pop
aas
nop
add
push
dec
sub
add
in
sub
rcl
push
dec
cmpsl
mov
cmpsl
stos
push
fstl
in
xlat
cld
cmc
xor
pop
and
es
push
mov
out
push
outsl
adc
mov
insb
pop
repnz
cmpsb
adc
insl
and
fimull
sbb
pop
loopne
test
aad
jno
or
out
cltd
pop
jno
sbb
or
je
aaa
rorb
js
add
incb
xchg
adc
icebp
icebp
dec
and
popf
aad
and
cmp
push
sub
cltd
and
cld
push
inc
je
sbb
sbb
test
ds
rclb
ret
xor
xchg
je
push
xchg
test
or
pop
mov
and
xchg
js
mov
movsb
pushf
sahf
sbb
cmp
ljmp
mov
lret
and
xchg
xchg
in
sub
xor
cmp
ds
scas
push
lahf
pop
xchg
in
out
mov
scas
in
xor
mov
dec
dec
push
xor
outsl
mov
ret
bound
adc
insb
fidivrs
loope
movsl
rol
xor
xchg
lea
mov
dec
add
les
addr16
cltd
idivb
mov
push
adc
push
sub
ljmp
cltd
lods
rclb
loope
je
hlt
sub
sbb
mov
and
push
adc
push
push
pusha
push
sub
dec
lahf
push
repz
inc
movsl
jg
mov
mov
es
cld
lcall
ja
xor
inc
lahf
sub
jne
dec
jnp
sbbl
scas
ficoml
xchg
sbb
xor
push
orb
xor
push
xchg
inc
xlat
icebp
loop
add
xchg
fwait
in
pop
loope
and
sti
xchg
add
mov
xchg
into
sbb
push
test
lods
pop
sub
inc
sbb
mov
mov
sbb
stc
push
ret
dec
ret
xchg
jae
ret
push
out
into
dec
pop
jecxz
jo
or
sar
lds
xchg
and
adc
push
adc
pop
inc
mov
dec
aas
mov
xchg
and
les
clc
jno
pop
inc
rcll
fiaddl
or
ds
popa
jge
lret
fs
into
sahf
jbe
or
enter
iret
inc
xchg
adc
mov
and
into
sti
jp
push
scas
xchg
sbb
imul
mov
js
mov
adc
mov
push
fbld
xor
jbe
push
mov
pushf
call
and
outsl
adc
pop
movsl
pushf
std
xor
ljmp
stos
jecxz
lret
adc
sbbl
stos
cmp
xchg
mov
push
lds
dec
repnz
aaa
sbb
add
inc
nop
and
cmc
dec
pushf
in
dec
jno
dec
adc
shll
cmc
pop
inc
adc
cli
dec
xchg
data16
pop
lret
mov
lret
scas
insb
fnstsw
dec
int3
inc
dec
test
mov
test
xlat
pop
inc
mov
test
aam
les
sub
aad
xor
popa
mov
adc
pand
adc
test
mov
sbb
stc
movsb
je
mov
mov
lret
mov
incb
cmpl
jp
xlat
fucomip
add
xlat
adc
ds
rcl
push
stc
dec
and
inc
sub
add
das
dec
cmpsl
mov
sbb
mov
sbb
inc
icebp
das
or
mov
add
cmp
add
jae
lods
data16
mov
jnp
test
enter
insl
mov
mov
gs
ljmp
in
jge
adc
testb
pop
dec
call
jge
sub
sub
jmp
xchg
mov
mov
dec
mov
pop
inc
mov
jne
mov
pop
lahf
push
add
cmp
dec
int
xchg
mov
xor
jb
in
jae
out
push
aam
cltd
jo
icebp
xchg
mov
ljmp
iret
fistl
add
pop
cmp
std
or
shr
lcall
fisubs
push
mov
adc
cmp
xor
movsl
popf
out
lret
int
ret
xchg
inc
dec
test
cmp
adc
std
xor
mov
add
or
push
ja
xchg
xor
or
mov
in
adc
adc
sub
imul
in
sbb
or
mov
mov
scas
push
pop
lea
or
test
cmp
jnp
xchg
clc
jge
jb
test
icebp
pop
aas
mov
mov
cmpsb
jg
mov
mov
shr
mov
fld
test
mov
popf
imul
dec
decl
inc
ljmp
or
cmp
jae
mov
sarb
mov
and
xor
xlat
mov
rcr
daa
pop
add
push
add
popf
dec
int
insb
inc
cli
adcl
mov
push
push
sbb
dec
aaa
dec
sub
mov
mov
rorl
mov
push
inc
mov
ja
loope
aam
jg
and
mov
add
mov
fcoml
mov
and
mov
pop
jo
inc
movsb
mov
sub
sub
pop
xor
jbe
mov
aas
out
inc
jo
adc
into
dec
mov
aam
cmpsb
sub
inc
jbe
loop
leave
xchg
xchg
rcrl
test
cli
xor
mov
xlat
mov
cltd
dec
test
push
and
push
mov
mov
fimuls
out
std
jne
dec
flds
pop
std
imul
cmp
cmp
cwtl
clc
stos
adc
add
mov
and
aaa
sub
movsl
aaa
sub
fimuls
nop
stos
add
movsb
sub
ret
inc
aam
in
mov
scas
push
jnp
sub
mov
jo
xchg
mov
pop
xchg
push
lods
fadd
xchg
dec
js
aam
jmp
jge
js
xchg
mov
mov
ds
lea
dec
adc
xchg
pop
loope
jne
les
adc
pop
leave
loop
test
mov
aam
mov
push
daa
mov
lods
dec
jle
jb
dec
xchg
test
xchg
pushf
mov
bnd
push
adc
pop
mov
or
jbe
inc
ss
add
decb
jmp
cmc
xchg
int3
adc
xor
scas
aas
aad
rolb
mov
add
ja
and
dec
popf
ret
cmp
xorl
pushf
pushf
mov
sub
enter
add
bound
sub
das
or
jg
sbb
mov
sbb
loopne
xlat
sub
std
pop
movsb
or
xor
das
into
mov
mov
out
fwait
pop
dec
popa
pop
fs
repz
pop
cmc
lret
dec
lds
adcl
fbstp
xlat
cmp
sbb
test
scas
out
fcmovu
aad
cmp
xchg
shll
xlat
sbb
mov
xchg
jbe
or
je
arpl
jp
mov
push
in
orl
xor
aam
ds
cmpsb
push
cli
adc
mov
cmpsb
in
lods
mov
mov
pop
dec
or
sub
xorb
ret
adc
mov
jbe,pn
in
and
xchg
pop
lds
pop
jle
mov
ret
scas
std
pop
xchg
mov
mov
aas
arpl
cmp
leave
adc
mov
mov
jecxz
push
leave
stc
andl
je
push
std
bound
nop
or
cld
sbb
dec
out
dec
and
pop
xchg
mov
sub
and
xor
sar
lods
jecxz
dec
pop
push
scas
fs
mov
xor
jmp
dec
jbe
push
or
pop
es
push
mov
arpl
lods
add
in
mov
loopne
into
xor
add
adc
push
es
leave
fisubs
and
out
push
in
lods
stc
fidivs
mov
lahf
and
icebp
sbb
mov
mov
scas
out
inc
cmpsl
aam
fsubrl
push
pop
insb
sub
ss
popa
jle
jnp
jns
pop
enter
sub
mov
jle
xchg
sahf
push
icebp
xor
stos
mov
push
dec
add
mov
pop
int3
lret
test
xor
xchg
idiv
hlt
sub
mov
test
xchg
add
repz
fst
pop
xor
stos
push
repz
or
call
call
lods
xor
adc
inc
add
or
jb
ss
adc
ja
in
dec
push
lea
cmovbe
pop
call
pop
jle
lods
nop
mov
enter
push
mov
inc
add
sub
lods
mov
jmp
decl
subb
adc
mov
test
int
dec
jg
jmp
xchg
pop
clc
mov
sub
nop
addr16
cmpsl
jbe
in
push
inc
mov
push
pop
cmp
pop
shrl
data16
mov
ja
daa
adc
in
mov
push
dec
lea
sbb
cwtl
xchg
mov
mov
fisubs
iret
lods
push
push
aam
jnp
int
and
mov
das
mov
int3
inc
cmp
pop
pusha
insl
ds
inc
sub
cmp
es
loope
mov
xor
inc
mov
sub
pusha
aaa
stos
iret
inc
mov
push
stos
mov
out
inc
or
scas
pop
xor
mov
stos
imul
dec
cmpsl
dec
or
xchg
imul
int3
cwtl
fs
jge
cmp
pop
in
dec
shlb
leave
mov
into
test
push
sbb
cmp
leave
cmc
or
shrb
out
xchg
add
test
lock
dec
movsb
lock
push
mov
mov
cmpb
imul
xor
filds
pop
sbb
xor
jo
aaa
loop
cmp
repnz
aaa
inc
lods
sti
shrb
je
sub
jo
in
cmpb
pop
push
push
sahf
sbb
push
xor
jp
mov
pushf
jl
sahf
es
add
ret
push
mov
rcrl
clc
push
dec
cmp
js
aam
das
loopne
icebp
pop
dec
push
jo
aam
addr16
test
mov
mov
or
jae
jge
sarl
lcall
adc
jb
je
dec
insb
loop
cli
cmp
vpsadbw
in
and
xor
dec
cmp
rdtsc
pop
or
xchg
pop
iret
mov
into
dec
pop
rep
xor
xchg
out
pusha
loope
mov
pop
mov
addl
mov
xchg
test
out
ljmp
xchg
jl
js
shl
cmpsb
std
mov
dec
and
in
in
xchg
out
xor
and
stos
cmp
insl
addr16
popa
pop
xlat
jg
push
adc
aam
mov
push
inc
sub
add
dec
ljmp
daa
xor
in
repnz
and
sbb
pop
jmp
nop
adc
dec
int
mov
in
sub
jl
inc
cltd
ss
int3
pop
cmp
adc
mov
pop
decl
xor
xor
fstp
jl
sub
mov
or
in
cli
jecxz
push
sahf
test
and
leave
in
fsub
stos
rcr
testb
jmp
divl
adc
mov
enter
repz
xor
sti
xor
loope
lret
pop
add
pop
push
and
add
push
test
sti
leave
test
rclb
mov
fcmovnbe
aaa
sbb
scas
mov
pop
dec
stc
cltd
push
pop
in
jle
adc
inc
xor
mov
dec
aaa
push
nop
ror
lods
inc
fisttps
pop
push
daa
insl
cld
adc
imul
pop
dec
stos
xor
xor
ja
stos
adc
fmull
or
aam
xlat
fcoml
das
fs
sub
push
dec
das
and
sub
rcr
fwait
sbbb
cmp
push
in
xor
notb
cmp
loope
mov
ljmp
add
dec
inc
cmp
jg
cmpsl
jecxz
mov
gs
add
fsubrl
xchg
push
loopne
sbb
sbb
int
mov
popf
sbb
dec
in
inc
fidivl
icebp
or
hlt
and
iret
pop
jae
and
test
add
jno
adc
jno
push
fidivrs
add
adc
jle
jne
xor
add
clc
mov
shrl
sahf
xchg
fmulp
inc
mov
dec
adc
and
leave
testb
mov
add
inc
mov
lods
mov
mov
mov
popa
es
es
pop
loope
pop
push
in
sbb
decl
mov
mov
push
lar
adc
rorl
mov
pop
sbb
add
mov
cmpsl
ss
xchg
lret
pop
dec
enter
jbe
je
pop
add
or
dec
mov
ret
mov
loop
cs
pop
jg
ffreep
insl
xchg
mov
nop
inc
xor
dec
or
iret
das
pop
bnd
cmp
subb
in
dec
shll
pop
cmpsl
loope
add
push
pop
ret
mov
shll
push
and
mov
mov
push
pop
out
mov
cmpsb
leave
pop
jp
in
shlb
js
es
push
shl
inc
sub
cmp
adcb
xor
out
arpl
in
mov
out
mov
push
add
dec
mov
mov
and
mov
xor
enter
inc
das
inc
stos
fisubs
xchg
cmc
popa
push
arpl
scas
fsts
cwtl
ja
inc
push
test
jmp
test
jmp
dec
jl
cli
xor
mov
stos
jae
popl
aam
mov
call
xchg
jge
test
push
sub
addr16
int
and
pop
adc
out
inc
les
xchg
or
mov
pop
call
inc
clc
pusha
or
adc
xor
iret
mov
xor
pop
mov
add
push
dec
hlt
int3
inc
lahf
out
les
mov
repz
xor
nop
int3
mov
out
pop
shll
xor
jg
push
es
lock
push
shll
mov
fisubrs
or
push
ds
and
cmp
cmp
add
push
fs
or
inc
and
sbb
mov
mov
cmp
cmpb
lock
mov
mov
cwtl
ss
scas
jmp
mov
insl
sub
sub
xorl
lock
jbe
and
fsubrp
push
push
cwtl
adc
dec
xchg
outsl
pop
xchg
jo
push
fsub
sahf
add
mov
mov
mov
icebp
scas
movb
adc
imul
add
dec
jns
cltd
adc
insl
inc
pop
inc
lock
jecxz
mov
lahf
mov
jge
mov
sub
add
leave
add
xchg
in
and
cmp
dec
lock
pushf
pop
int3
inc
xor
mov
inc
push
call
xchg
jns
pop
out
xor
test
jnp
sahf
jmp
fistps
push
mov
aam
dec
mov
in
out
aad
rcrb
daa
push
sbb
fnstsw
xor
mov
adc
mov
not
js
daa
push
mov
inc
jmp
push
cmc
std
xchg
iret
mul
or
push
clc
ret
lret
jne
andb
pop
fnstenv
jns
and
jl
into
jecxz
fadd
inc
push
sub
or
cmpsb
scas
fs
ds
cmp
in
out
outsl
inc
inc
sbb
mov
and
and
adc
popa
in
outsl
pop
pop
xor
dec
dec
mov
or
add
les
mov
and
cmp
stc
mov
mov
testb
xchg
xor
aad
fimull
test
lods
cmpl
xchg
jnp
gs
mov
mov
shrl
push
xchg
bound
sbbb
arpl
stc
ds
insb
mov
xchg
and
sbbb
ds
dec
ljmp
fcoml
shrb
and
cmp
inc
aaa
or
fdivrl
xchg
mov
push
jmp
push
pop
dec
mov
loop
or
mov
dec
or
push
aam
jg
inc
push
or
mov
mov
dec
movsl
fdivl
mov
xchg
sar
sub
push
jle
xor
out
insb
js
jae
aas
in
loop
add
jns
repnz
dec
push
xor
cmpsb
lcall
jmp
lret
mov
test
dec
dec
repnz
dec
mov
mov
stos
rorl
psubusw
rcrb
cmp
ja
xor
inc
lds
mov
fidivs
jge
out
sub
and
cmp
imul
in
mov
sbb
in
xor
imul
inc
jmp
cmp
imul
fistl
mov
in
xchg
loopne
fcmovnb
sub
call
fisubs
jmp
in
or
cmp
mov
cmp
es
adcl
rcrb
push
sahf
xchg
lret
sub
mov
flds
cwtl
pop
fisttpl
outsb
nop
inc
mov
mov
dec
inc
ror
lods
imul
pushf
mov
pop
xlat
mov
and
add
dec
xor
popa
and
pop
jle
mov
dec
popf
fcomp
pop
pop
inc
cld
xchg
fwait
and
ret
xor
and
js
mov
roll
fwait
cmp
int3
lret
lock
hlt
mov
movsb
dec
ja
stc
sahf
clc
leave
dec
mov
pop
jbe
sbb
xor
dec
mov
mov
xchg
mov
sbb
push
xchg
cmp
scas
fistl
pop
mov
sbb
mov
movsb
fdivs
xlat
insl
loop
xlat
xchg
push
cmp
xchg
pop
or
push
sub
or
scas
cld
jne
or
js
icebp
pop
mov
in
xor
xchg
or
push
shlb
out
sub
mov
lahf
sub
xor
mov
mov
fbstp
in
inc
sbb
daa
popf
mov
push
or
js
popa
inc
jp
mov
das
sahf
add
mov
in
inc
adc
sti
cmpsb
mov
mov
and
icebp
push
pop
jge
aas
aas
daa
call
and
pop
sub
movsl
dec
popf
fisttpl
push
and
jg
into
lahf
add
call
sarl
sti
xor
enter
mov
lret
inc
jg
xor
stos
or
int3
pushf
mov
lods
lret
sbb
fistpll
lea
sarl
xchg
xchg
xor
push
fldenv
loop
xorb
push
and
aad
es
jl
ds
movsl
clc
ljmp
je
sub
hlt
aam
pop
xor
adc
mov
inc
and
js
shrb
xor
push
push
enter
stc
int
sbbl
jmp
scas
jbe
sbb
ret
mov
pop
jb
mov
test
adc
push
dec
lods
xlat
add
cmp
jnp
test
lahf
sbbl
cmp
jge
add
push
sub
adc
adc
int3
adc
push
lods
aad
dec
cs
int3
sti
cmp
daa
inc
lahf
xor
jl
loop
and
dec
pop
sbbb
inc
jne
lods
dec
rorl
pop
jne
xchg
test
js
out
lock
test
jecxz
and
fisubl
add
xor
dec
push
shlb
js
cmp
cli
popf
or
cld
mov
mov
dec
adc
inc
jecxz
sub
popl
scas
dec
lcall
mov
pop
push
hlt
loopne
add
push
inc
mov
ja
ret
popaw
stos
or
enter
push
sbb
mov
stos
sbb
adc
pop
xlat
mov
mov
jnp
jge
nop
cli
pop
insb
sbb
fstpl
push
rcl
xor
push
test
decl
jmp
call
pop
je
mov
push
sahf
loop
repnz
js
outsl
mov
sub
mov
mov
inc
mov
cmp
sub
inc
cmpsl
dec
divl
inc
lret
mov
and
fildll
xchg
pop
push
mov
jecxz
push
or
fisubrs
ror
pop
mov
mov
push
push
fs
shl
jns
cmpsl
imul
push
out
dec
cmpsl
push
push
rcrb
xchg
push
cmp
mov
adcl
sahf
lret
lret
pop
xor
inc
jno
popf
rcrl
mov
cmpsl
int
mulb
out
dec
push
and
jmp
mov
xchg
sahf
aad
psadbw
seta
pop
sbb
mov
fcoml
mov
sbb
dec
mov
in
daa
pusha
dec
cmpsl
adc
push
push
ljmp
lods
push
add
jns
fidivrs
pop
mov
cs
cmp
cmp
ss
dec
adc
mov
mov
jl
movsl
fisubl
dec
arpl
cltd
gs
push
jp
mov
and
dec
in
pop
inc
sub
shr
notl
jns
jns
cwtl
xchg
mov
lods
xchg
sub
imul
stos
loope
outsb
scas
mov
inc
jmp
mov
mov
or
cmp
inc
jb
or
pop
movsb
xor
das
addr16
jp
mov
insb
adc
mov
shrl
out
or
sti
jno
aaa
lea
lcall
mov
mov
shr
js
cwtl
int
adc
addr16
xchg
xchg
adc
daa
dec
pop
stos
ss
stc
sub
pop
ljmp
pop
and
mov
xchg
js
mov
fwait
push
jns
fs
add
push
push
test
xor
andb
or
jle
lret
testl
sbb
cmp
addr16
push
push
rcrb
out
xchg
cld
mov
movsl
incl
ds
lea
pop
add
push
shrl
clc
out
mov
and
or
cs
out
jb
mov
sbb
aam
add
test
sbb
jg
mov
aad
mov
jo
push
in
jbe
pop
cmc
push
adc
pop
jl
repnz
btc
orl
jmp
mov
dec
pop
pushf
xor
popf
jns
rorl
mov
nop
mov
fistpl
mov
inc
cld
ret
xor
mov
xchg
xor
icebp
es
enterw
fcmovnu
add
xchg
hlt
pop
mov
outsb
scas
mov
adc
in
pop
lods
cmp
or
xlat
pop
imul
stos
ret
pop
push
dec
into
mov
aam
test
cli
jg
xchg
sub
pop
and
insb
arpl
bound
imul
cs
push
stc
cmp
cli
push
mov
test
daa
repnz
add
inc
xchg
jo
and
cmp
fildll
inc
sbb
inc
and
and
adc
cmp
pop
dec
add
xchg
push
cltd
mov
mov
leave
cmp
push
outsb
hlt
std
aad
push
push
xchg
std
pop
test
lahf
adc
leave
loope
repnz
or
es
pop
jo
inc
pop
sub
jp
mov
mov
mov
mov
xor
in
cmp
mov
or
lds
fs
xor
adc
mov
test
dec
mov
ljmp
or
xchg
inc
ret
jnp
mov
jmp
sti
scas
and
mov
push
mov
arpl
and
in
mov
add
lods
lds
or
ljmp
xchg
xor
lahf
push
notl
adc
shr
ret
es
xchg
mov
xchg
fcmovne
adc
cwtl
add
add
popa
bound
notb
das
loope
pop
adc
movsb
jnp
mov
mov
and
push
scas
dec
dec
jno
adc
aaa
aaa
sbb
xchg
sub
dec
mov
gs
xor
push
insb
mov
sub
sarb
xor
repnz
xor
out
dec
push
xchg
in
std
jmp
scas
js
aam
insl
aam
xchg
jo
in
jl
int3
pop
nop
cltd
inc
das
lcall
call
pop
cmpsl
xchg
cwtl
loop
mov
addr16
cmc
or
ret
popf
fistpll
lods
sub
mov
xor
adc
sbb
pushfw
inc
and
or
jne
ja
fmuls
dec
loopew
pop
jl
inc
and
pop
in
jns
test
cmp
aaa
mov
sarl
mov
ret
cltd
and
iret
fwait
rcrb
push
aas
push
aaa
mov
xlat
or
jge
jg
imul
outsb
adc
cmpsb
ja
push
jae
mov
rorl
xor
loope
inc
xor
movsb
test
cmp
jp
dec
push
out
adc
mov
cmp
jge
add
inc
ss
xor
sub
addr16
jge
or
xchg
fisttps
fdiv
sahf
jae
ljmp
dec
stc
jl
cmc
into
daa
mov
lcall
addr16
mov
insl
out
lds
leave
cmp
fwait
pop
xor
faddl
jnp
mov
lret
or
sti
inc
imul
call
movsl
sub
push
pop
sti
mov
ret
loope
add
xchg
or
std
cmpl
inc
inc
test
dec
push
lahf
rcll
cs
scas
rcr
sub
loopne
rcll
cwtl
sbb
mov
mov
adc
fsubrp
nop
mov
adc
gs
sbb
mov
repnz
or
sbb
pushl
std
sbb
add
dec
outsl
adc
cmp
xchg
nop
jg
cmp
orb
fisttpll
xchg
es
push
int
mul
popf
jle
clc
fldenv
dec
mov
jle
xchg
xchg
push
push
push
clc
xchg
pop
lods
fldcw
in
push
jnp
sub
imul
inc
js
push
pop
sahf
enter
mov
or
dec
divl
inc
adc
mov
sbb
push
push
sub
popa
js
ja
mov
xor
xor
insl
lods
sub
cmc
es
outsl
mov
cli
xorl
fstpt
cmp
es
je
repnz
std
sbb
mov
xchg
stc
and
ret
jp
lds
add
in
jmp
mov
or
mov
mov
mov
jmp
jecxz
outsb
orl
inc
mov
adc
mov
sbb
sbb
jno
and
scas
inc
sub
jge
inc
jle
mov
and
xor
popa
mov
pop
fs
cmp
aaa
jns
test
mov
cs
or
mov
pop
push
test
cmp
adc
xor
xchg
in
scas
mov
mov
shlb
ljmp
mov
mov
sti
pand
mov
mov
loopne
sbbb
fwait
xor
xor
aam
ds
fstpl
fsubl
ja
add
push
mov
xor
lea
mov
cmp
leave
dec
jnp
mov
mov
cmp
and
cmovle
addr16
push
pop
mov
jo
push
jg
bound
inc
cmc
and
into
ds
adc
ja
cli
adc
jae
cmp
dec
pop
imul
rolb
and
adc
jp
mov
pop
push
dec
mov
stos
js
add
pushf
int
out
mov
jl
std
jbe
push
ja
sbb
xchg
out
icebp
mov
jp
mov
into
or
adc
mov
std
pop
in
sarl
xor
test
test
or
data16
xor
mov
rorb
adc
in
aaa
fcoms
xor
fwait
mov
sbb
aam
cmp
jp
dec
cmpsl
cmp
insb
ljmp
and
rcl
clc
mov
or
out
jbe
xchg
mov
cmc
jl
gs
mov
std
jl
fsubr
xor
daa
xchg
or
push
lea
jmp
cld
xor
iret
mov
in
sub
cli
xor
orl
nop
scas
fdivr
addr16
jg
cmp
nop
lea
stos
cmpl
cmp
and
aam
ljmp
adc
pusha
inc
push
dec
data16
aaa
adc
sbb
test
ficomps
dec
cltd
dec
mov
xchg
arpl
mov
cltd
aad
xor
inc
das
int
mov
mov
aaa
mov
mov
pop
or
mov
mov
lahf
jno
jl
repnz
ja
ss
xor
xchg
in
or
mov
into
or
pop
mov
or
sbb
sbb
mov
cli
pop
rolb
sbb
stos
cmpsl
fdivs
lcall
in
lods
mov
mov
data16
cltd
sbb
mov
cmpsb
lahf
sbb
mov
push
ret
xlat
mov
xor
or
in
notl
jns
or
push
adc
jb
adc
xor
mov
imul
inc
fistps
lods
xchg
imul
decb
outsb
sbb
cmp
int3
xorb
or
std
fdivrl
and
jg
in
sub
es
jae
std
out
push
inc
xchg
mov
xchg
mov
leave
imul
dec
out
jge
clc
jne
daa
movsb
repz
test
and
mov
outsb
xchg
inc
adc
adc
into
push
ret
aaa
sub
xchg
rcrl
dec
push
js
xor
sub
pop
mov
aam
js
mov
ret
mov
push
shlb
sub
cmpsb
shlb
addr16
insb
repz
in
pusha
aad
mov
xor
mov
xchg
push
int
xchg
jbe
mov
pop
fcomps
std
test
jae
xor
sbb
mov
loope
les
dec
jmp
inc
adc
aaa
outsl
or
cmpsb
adc
test
les
xorl
mov
popa
cmpsl
stc
lods
push
lea
sub
cmpb
mov
fwait
xchg
shrl
mov
rcll
mov
jle
pop
jle
rclb
dec
fisttpl
or
jmp
xor
cmp
pop
cmpl
ds
bswap
cmc
rorb
loope
lcall
mov
js
jae
subb
aam
dec
outsl
jb
sbb
mov
dec
mov
addb
push
test
and
fiaddl
dec
push
inc
pop
push
adc
xchg
mov
mov
cmp
mov
mov
cmp
mov
jmp
in
call
mov
mov
mov
out
or
stc
cmpsl
cwtl
test
mov
sub
jp
jnp
addr16
fnstsw
std
enter
or
into
in
jb
fistpll
fiadds
mov
test
iret
jp
cmp
int3
lahf
mov
mov
es
test
adc
shlb
push
stc
lods
push
cmpsl
sub
out
rolb
dec
lahf
add
rclb
push
pop
daa
xor
inc
sbb
xor
add
fsts
fmuls
test
sbb
shr
js
cmp
push
lret
insb
and
fs
jb
into
repz
xor
into
add
or
add
dec
fcomps
pop
pop
cld
mov
mov
mov
das
icebp
into
dec
shll
sub
ret
aad
mulb
popa
and
sbb
cmp
inc
subl
inc
int3
in
push
das
push
adcb
jl
lret
sub
sbb
scas
push
mov
or
cmpsb
cmc
cmp
popf
cs
sbb
push
jl
out
cmc
sti
jae
add
out
adc
popf
hlt
jge
mov
cli
ret
push
data16
or
sahf
and
sti
cmp
repnz
push
testl
cmp
push
pushw
cli
in
cmpsl
lock
xchg
or
pop
pop
mov
addr16
out
adc
or
dec
stos
add
ljmpw
push
ljmp
sti
jb
aaa
cmc
sub
dec
roll
mov
dec
jae
movsl
cli
jg
add
mov
in
adc
pop
inc
in
add
pop
jae
xchg
jp
jle
cmp
add
ret
repz
fnsave
mov
adc
push
mov
jp
div
jnp
lret
ss
frstor
dec
mov
repnz
iret
pop
andb
jl
mov
shrl
lds
pushf
fxrstor
rol
fwait
insb
stos
or
mov
inc
dec
iret
xor
nop
ds
lock
inc
pop
xor
pop
xchg
jo
mov
cwtl
mov
xchg
bound
in
inc
jnp
xchg
in
xchg
pop
arpl
cmp
mov
addr16
das
and
cmc
xchg
cmp
out
and
test
in
jb
jmp
fwait
aaa
xchg
aaa
nop
cwtl
pop
lahf
jne
popf
int3
in
loop
fwait
leave
inc
sub
mov
stos
push
pop
add
mov
cmc
loope
xchg
xor
pop
sub
sub
fs
jne
inc
sub
dec
xchg
push
or
push
cmp
ds
lods
push
dec
lret
shlb
hlt
push
jmp
sbb
repnz
clc
mov
mov
pop
jg
jecxz
ja
sti
rclb
rcll
add
sub
cmp
jecxz
mov
stos
mov
dec
push
loopne
scas
xchg
jo
add
mov
imul
popf
mov
adc
sub
mov
or
fstpt
inc
and
adc
xchg
addr16
cld
mov
jbe
sub
ja
roll
insl
fsubrl
push
popf
std
mov
fwait
shrb
sbb
cs
addr16
mov
test
icebp
aam
cmp
add
xor
push
inc
xorl
jno
push
fwait
xor
out
icebp
sbb
xor
cmpsb
jae
aas
pop
in
mov
stos
mov
mov
push
xchg
mov
push
das
stos
jae
lret
jmp
es
fwait
mov
xor
nop
imul
jg
lods
or
xchg
daa
dec
pop
or
rdtsc
xor
hlt
push
mov
sahf
insb
push
pop
jns
aad
inc
loope
fisttps
outsl
xor
or
out
xchg
dec
mov
and
nop
jecxz,pt
xchg
loope
dec
add
fs
mov
enter
sub
in
mov
jnp
jl
cmp
das
mov
push
inc
inc
jmp
idivb
jmp
std
aaa
and
push
faddp
adc
enter
inc
and
ja
cmp
movsb
jmp
xor
call
jl
iret
lahf
daa
insl
loope
imul
outsl
js
or
or
nop
jbe
stc
stos
sbbb
xor
pop
arpl
ss
mov
imul
mov
call
loop
aas
pop
push
cmp
xchg
in
aas
ficoms
cmp
andb
add
sub
and
push
fiadds
jge
enter
adc
jns
pop
in
mov
lods
movsb
out
dec
jge
mov
push
pop
cmpsl
outsl
jo
mov
xchg
xor
push
scas
xchg
xchg
shlb
shrb
fnsave
clc
lret
shrl
sbb
in
cmp
sbb
out
xor
jl
icebp
mov
sbb
adc
sub
enter
sahf
in
inc
inc
dec
dec
stos
jmp
ret
sub
sbb
xchg
xchg
xchg
mov
mov
sbb
imul
fistpll
mov
lea
push
xor
xor
cmp
rcr
shll
in
ret
lret
lods
mov
hlt
in
jl
xor
icebp
fidivs
pop
clc
or
addr16
ja
imulb
push
sbb
jg
fsts
push
jnp
ja
pop
xor
cmp
mov
mov
sub
and
fwait
or
inc
lock
mov
pop
xor
add
enter
sti
ret
fwait
mov
enter
fimuls
push
xchg
sbb
mov
push
add
and
xorl
fcom
xor
ss
in
xchg
insl
pop
and
or
mov
pop
out
sub
lahf
and
mov
cltd
or
mov
cltd
popf
mov
scas
js
lahf
clc
and
bound
sub
bound
mov
les
std
cltd
mov
sub
lock
mov
stos
addl
shlb
jl
mov
cmp
ljmp
push
arpl
icebp
cli
popa
sbb
lret
adc
xor
push
decl
loopne
jmp
push
stos
jg
fdivrs
mov
fistl
jge
xor
fcomp
negb
icebp
les
mov
sub
rorb
pop
push
sbb
lea
xor
fnstsw
outsl
jmp
movsb
xchg
mov
movsl
mov
inc
loop
sbb
adc
mull
xchg
push
add
loope
dec
iret
stos
aam
inc
mov
push
aaa
jae
sbb
movsb
adc
sbb
fsts
add
in
repnz
xor
call
out
and
xchg
aam
fbstp
and
lcall
sbb
jno
pop
jecxz
xor
iret
pop
fcmovnu
dec
mov
loop
lock
ljmp
xorl
xor
pop
xor
sub
or
repz
and
negb
test
pop
push
xchg
cmpsl
cmp
mov
lret
mov
popa
stos
fidivs
inc
mov
cwtl
jmp
pop
xor
mov
das
cld
sbb
fwait
cmp
jl
inc
mov
push
pop
pop
movsl
cwtl
outsb
adc
push
imul
lds
cmc
and
lret
mov
mov
mov
sbb
ss
push
mov
aaa
ret
mov
inc
arpl
lods
mov
mov
cltd
lcall
fs
push
frstor
lahf
xchg
xchg
jns
add
mov
push
loop
or
test
jbe
repz
shld
xor
call
jecxz,pn
add
pop
aaa
pop
rcll
jbe
jno
add
cmp
cmp
mov
cmpsl
jbe
mov
rolb
dec
lds
imul
xchg
std
or
pop
test
cs
xorl
sarb
push
mov
sbb
push
xchg
xchg
sbb
cmp
push
clc
gs
nop
or
mov
les
lods
shll
inc
add
dec
ret
mov
and
jmp
jbe
ss
and
in
push
xchg
in
pop
push
sub
pop
in
push
movsb
mov
and
push
shll
push
fcoml
cmpsl
cmc
cmp
xchg
push
jle
test
xor
cs
or
jg
dec
scas
add
xchg
or
loopne
repnz
out
test
stos
mov
xchg
pop
cltd
xorb
pusha
clc
aad
push
mov
inc
mov
push
ficoms
pushf
outsb
pusha
jnp
fwait
sub
add
or
bound
bound
mov
inc
add
pop
sub
shll
movl
or
ret
stos
xor
xchg
or
mov
cwtl
rclb
or
vandnps
insb
hlt
mov
adc
inc
sahf
sti
mov
dec
es
imul
inc
add
add
adc
adc
cmp
ja
push
jo
imul
out
scas
inc
mov
ret
dec
xchg
outsl
dec
sub
pop
mov
add
sbb
pop
lret
lcall
jb
shrl
inc
popa
cld
jne
lahf
lahf
das
xlat
fisubs
xor
mov
decl
jmp
loope
fbstp
cmp
add
adc
icebp
sub
mov
xchg
sbb
aad
stos
pop
pop
stos
sub
mov
outsl
in
in
loop
insb
addl
shll
popa
leave
pop
xor
in
cwtl
fstps
pop
jg
loopne
push
dec
xorps
mov
sbb
mov
test
aad
cmp
dec
adc
or
orl
outsb
int3
fucomip
push
sub
jg
andb
dec
iret
cs
adc
lahf
in
std
cmp
out
push
scas
pop
push
pop
jp
xorps
lods
pusha
mov
pop
mov
inc
sets
inc
test
addr16
pop
shlb
shll
dec
xchg
sbb
mov
lds
jp
jae
sub
lahf
pop
jbe
ja
xchg
shrl
int
cmp
shlb
xchg
and
sub
rcrb
sahf
inc
push
ss
lock
cmpsb
call
std
sub
popa
jl
lods
cmp
dec
movsb
lret
jns
xchg
jno
mov
and
call
mov
pop
scas
push
lods
out
cli
sub
jp
fists
das
clc
cmp
xor
push
lea
cmp
jg
dec
aad
jno
xchg
setae
xchg
pop
jge
fildl
push
fildl
xor
int
pop
add
inc
movb
fwait
sbb
mov
rcrl
mov
ret
mov
daa
inc
lret
and
fwait
ret
mov
xchg
cmc
xchg
and
outsb
fisubs
mov
movsb
test
jae
das
and
cld
push
cmp
enter
inc
pop
jmp
push
cwtl
psrlw
push
call
mov
add
push
jne
int3
mov
loope
lea
dec
stos
es
outsb
repnz
adc
jge
jge
xor
jnp,pn
pop
sub
aas
je
push
clc
loope
push
es
push
imul
cli
xchg
fisttpl
cpuid
push
stos
bndldx
out
insb
xorb
jmp
rol
add
les
iret
or
mov
stc
int3
lods
cmpsb
inc
jb
in
jp
imul
pop
push
popa
loopnew
pop
jge
lahf
jno
cmp
aam
add
lcall
mov
repz
call
dec
mov
mov
dec
jle
ljmp
mov
dec
sub
cmp
cmpsb
xor
arpl
sbb
xor
sbb
lea
cmp
aas
and
subl
out
pop
cmpsb
outsb
push
aaa
fwait
mov
jns
push
inc
cmpsb
add
xchg
mov
cmpsl
clc
inc
add
aas
adc
mov
scas
push
ret
in
push
cmp
pop
push
mov
ret
mov
lods
inc
addr16
test
lea
scas
xchg
mov
cmpsb
das
mov
dec
cltd
add
xchg
add
add
push
pushf
jp
jecxz
bound
and
insl
adc
jmp
lret
sub
mov
out
sbb
mov
leave
inc
in
sahf
out
add
leave
rorb
stc
aaa
xchg
mov
js
lea
jnp
shlb
xchg
rcrb
xchg
jne
ja
dec
jp
cmp
in
ss
xchg
out
fwait
adc
notl
scas
jne
inc
xor
xor
lahf
xor
mov
lret
xchg
sbb
cs
xor
adc
cmpsb
jbe
and
daa
adc
das
fnsave
pop
mov
pop
xor
and
negb
xor
inc
mov
mov
lods
lcall
loope
mov
mov
push
in
sbb
ret
ret
repz
jge
pop
mov
fistpl
sbb
subl
adc
jne
inc
sbbb
add
push
pop
jl
dec
xchg
or
outsl
jmp
mov
jo
fs
xor
ds
addr16
es
xor
das
cmpsb
push
xchg
imul
adc
xchg
or
sbb
mov
push
scas
pushf
shrb
scas
cmp
push
aaa
and
sahf
push
jns
xchg
pushf
dec
xchg
imul
fxch
mov
int3
enter
ret
cld
test
sarb
adc
mov
ret
and
mov
jno
adc
addr16
jl
into
aam
ja
outsb
add
sbb
push
pop
in
sub
test
jle
pop
daa
ja
xchg
lods
push
xor
sbb
adc
in
xor
xorl
cs
dec
pop
mov
sbb
ja
mov
pusha
dec
and
jb
cmp
and
loopne
cltd
je
push
data16
cwtl
pusha
mov
mov
mov
stos
ret
jl
cltd
xchg
bound
mov
pop
stos
push
jecxz
xor
leave
sub
mov
mov
fs
rol
push
mov
bound
roll
sbb
std
out
stos
jno
xor
in
stc
pop
faddl
outsb
aad
jl
out
out
dec
dec
pop
call
sti
ret
in
cld
cmpsb
lret
movsl
fmuls
nop
cltd
pop
mov
pop
ljmp
mov
and
outsl
loop
and
mov
mov
mov
cwtl
sbb
jmp
scas
test
in
jo
outsl
jb
pop
stos
mov
dec
sub
loopne
imul
je
imul
decl
xorl
bound
arpl
test
mov
mov
aaa
push
xor
dec
mov
mov
ljmp
pop
inc
clc
pop
idiv
jp,pn
sti
xchg
mov
pop
sub
xchg
cli
xchg
fdivrs
xor
into
adc
movsb
mov
mov
adc
mov
mov
ds
mov
sbb
insl
jns
scas
ret
hlt
xor
cli
push
lcall
adcb
fs
xchg
mov
add
test
fldl
xor
push
sbb
mov
sbb
add
add
imul
mov
jb
enter
repnz
lods
jmp
pop
cld
rolb
jns
cmp
out
icebp
iret
adcl
outsb
push
add
pop
pop
cmp
xchg
sqrtps
insb
clc
into
mov
cmp
test
jae
dec
test
xor
add
mov
xor
arpl
mov
add
hlt
fidivrs
cmp
std
mov
fsubr
jmp
mov
shlb
out
xchg
je
sarb
subl
cltd
cs
inc
sbb
jmp
fsubs
fmuls
enter
repz
mov
gs
lods
clc
jg,pt
push
mov
cld
mov
mov
push
sbb
xor
fisttps
mov
sub
popf
ljmp
push
dec
mov
fidivrs
xchg
mov
aam
mov
push
or
ja
push
mov
repz
sbb
movsl
loopne
mov
aaa
cmpsl
sub
dec
cld
xor
xor
xlat
mov
mov
jno
sub
jbe
push
ss
xchg
jbe
adc
pop
and
fcoml
lcall
js
xor
out
dec
repnz
jb
sbb
in
pop
outsb
mov
popa
cwtl
lock
fiaddl
xchg
dec
out
cmp
jmp
dec
add
and
mov
popl
dec
test
iret
mov
fildl
cld
xchg
fiadds
mov
mov
idivb
jp
fisubrs
xchg
out
in
roll
push
test
xor
mov
popf
adc
jecxz
idivb
inc
mov
push
pop
pop
fbld
mov
orl
sbb
sub
iret
aas
fidivl
hlt
ja
and
mov
jmp
std
aad
movsl
loope
mov
sbb
sbb
rclb
push
cli
dec
lret
and
fcompl
stos
jno
xor
mov
sbb
mov
sar
xchg
pusha
enter
adc
mov
mov
ror
mov
or
loope
sub
test
xchg
mov
xlat
jl
and
fcompl
in
inc
ds
adc
aam
push
or
fcos
shlb
lea
and
xor
scas
nop
mov
sub
mov
adc
cmp
and
cs
dec
push
movsl
adc
out
dec
sub
sti
scas
lea
scas
scas
mov
loopne
arpl
loopne,pt
mov
dec
ljmp
jbe
jl
xor
push
add
mov
sbb
adc
jmp
sahf
inc
pop
insb
adc
imul
ljmp
repz
push
insb
hlt
gs
fildll
in
leave
push
adc
sbb
mov
cmp
call
in
fadd
popf
sub
mov
out
cs
stos
sub
lds
lret
or
mov
ret
mov
mov
xor
and
jae
lods
in
dec
ret
add
push
sbb
xchg
nop
xchg
pop
cmp
pop
ljmp
sbb
negl
call
sub
scas
add
jno
or
xchg
sbb
adc
add
stos
loop
mov
and
bound
dec
mov
mov
scas
xchg
adc
dec
sahf
mov
dec
sbb
scas
sub
mov
cmpb
and
clc
cmpsl
movsl
jns
aad
ss
loope
outsl
scas
int3
pushf
test
in
dec
and
inc
push
push
jne
dec
iret
sbb
jo
enter
xchg
jmp
addr16
and
xlat
subl
test
ja
arpl
movsl
and
mov
in
push
fs
dec
pop
lods
adc
xlat
orb
lods
test
jmp
push
sbb
or
je
rcll
addr16
cld
jle
mov
lret
inc
inc
addr16
jge
outsl
mov
frstor
xlat
rcrb
adc
sbb
cmp
dec
cmpsb
adc
xlat
xor
cmc
fdivrs
jbe
mov
cwtl
sarb
jg
mov
hlt
std
into
in
hlt
pop
adc
mov
insl
cmpsl
mov
cmc
je
das
int3
imul
jne
imul
arpl
mov
or
lods
lods
mov
bswap
pop
mov
andl
pop
adc
insl
pop
pop
fcmovnu
pop
pop
icebp
popa
jge
clc
int3
rorl
cmp
cwtl
jae
pop
dec
pusha
inc
cmp
sub
dec
xchg
jle
xchg
popa
jmp
test
int3
lock
icebp
cmp
repnz
repz
fsubl
add
inc
xchg
mov
movsl
push
push
inc
jns
sub
into
dec
lret
sahf
sbb
and
mov
ret
mov
jg
cld
pop
adc
out
movsl
pop
push
dec
sub
aaa
mov
push
adc
mov
sbb
pop
filds
das
xchg
add
imul
cltd
xor
test
pop
mov
bound
pop
add
dec
adc
shr
fdivl
mov
cmc
jae
sbb
add
sub
pop
dec
sub
data16
pushl
pop
cmp
dec
fwait
and
dec
dec
mov
cltd
test
js
sbb
sahf
xchg
or
cmpb
rcll
sub
jae
movsb
or
add
loop
cmp
lods
inc
or
aaa
ljmp
ret
pop
rcr
xchg
iret
adc
scas
loopne,pt
in
fldenv
push
lret
inc
repnz
and
mov
pop
call
aam
pop
shlb
mov
lea
mov
pop
mov
push
mov
xlat
add
push
mov
popf
pop
imul
dec
cmp
dec
push
adc
fistl
dec
cs
xchg
jp
mov
ja
insl
adc
inc
lcall
imul
and
orl
fldl
cmp
repnz
push
enter
mov
xorb
cli
jp
sbb
inc
adc
cwtl
adcb
pop
sbb
mov
jecxz
mov
divl
inc
stos
loop
subl
push
sti
dec
inc
sbb
sub
ss
xchg
stc
test
or
ja
jo
lock
or
int
jmp
mov
pop
jb
mov
jne
fisttpll
xchg
popf
sbb
xor
cwtl
roll
testl
icebp
orb
hlt
in
and
mov
mov
mov
inc
pop
pushf
loopne
cs
xchg
loop
jmp
pop
xchg
xor
pop
pop
imul
dec
mov
outsl
mov
outsb
inc
jbe
aad
adc
jo
push
dec
je
add
stos
call
aad
cmp
test
xchg
js
pop
into
popf
xchg
inc
mov
xchg
stc
push
shlb
push
mov
shrb
pop
mov
aas
pushaw
xor
call
xor
stos
fcmovu
mov
rorb
adc
mov
jge
adc
cmp
bound
mov
mov
sti
jne
adc
scas
cmp
push
in
adc
adc
imul
lcall
dec
lock
not
cmc
cmpsb
ja
sub
mov
dec
lret
inc
inc
scas
push
jle
xchg
lods
nop
push
pop
or
cld
ret
adc
fbld
pop
in
or
scas
fldcw
inc
sub
shl
fisubrl
arpl
in
dec
int
outsl
push
je
pop
and
lock
mov
pop
push
mov
xchg
sbb
and
loopne
les
jmp
sub
or
sarb
sub
cwtl
mov
notb
mov
popa
adc
push
leave
insl
cmpsl
mov
jb
xor
fcoml
xchg
jo
and
push
xor
xchg
mov
xchg
sub
lock
data16
adc
jns
xchg
inc
shl
cli
pop
or
cli
out
aam
xor
push
rcrb
es
jg
dec
mov
cmc
fwait
and
fstp
ficompl
sbb
fildll
scas
addr16
mov
scas
adc
loopne
nop
rcrb
stos
data16
jo
pusha
push
xchg
stos
shl
xchg
jnp
mov
stc
test
cld
ja
dec
dec
and
insb
sahf
idivl
cld
icebp
pop
test
push
insb
adc
aam
push
dec
mov
adc
imul
inc
cwtl
sbb
cli
and
and
xchg
mov
popf
add
lea
jge
cmp
fsubs
lods
aaa
cmp
inc
icebp
or
repnz
les
xchg
aas
pop
lds
jbe
cmpsl
repz
adc
bound
outsb
outsl
daa
pop
lcall
hlt
shlb
jl
stos
cmp
xchg
mov
lret
fstpt
push
aaa
pop
push
ret
pop
xchg
sub
push
dec
jle
cmpsl
rcrl
jg
enter
stc
gs
push
jl,pt
and
xchg
loopne
jbe,pn
adc
pop
arpl
xor
xchg
es
lea
dec
arpl
loop
in
fbld
andb
cs
aas
roll
cmpsb
and
lock
js
fdivp
mov
ja
lock
ds
lods
or
mov
pop
jnp,pn
lret
js
inc
pop
add
lret
or
es
ret
jns
sub
jg
sub
rorl
imul
mov
and
sub
lods
aam
lds
and
and
loope
aam
rolb
ret
push
sub
aam
xor
and
vmovsldup
xor
cmp
insb
dec
pop
sarb
dec
repz
inc
fimull
cmpb
inc
pop
cwtl
int3
dec
add
sub
cltd
pop
lds
lahf
repz
jp
in
push
jno
imul
loopne
push
pop
adc
inc
aad
mov
and
xor
pop
push
inc
lock
loop
movsb
jge
mov
mov
add
inc
rorb
scas
inc
into
dec
ss
pop
out
jle
mov
shll
mov
push
cmc
in
sub
std
outsb
push
mov
fdivrp
cld
cmp
outsb
cmp
cmp
jne
sahf
in
fcmovu
jae
lock
rorl
inc
mov
dec
or
out
push
lods
or
and
clc
pop
sub
mov
jne
pop
push
pop
cs
imul
mov
or
outsb
inc
pop
adc
orl
outsb
mov
out
and
push
xor
inc
pop
adc
dec
clc
push
jecxz
xchg
pop
jp
fmuls
sbb
push
add
inc
daa
jns
mov
lods
mov
sub
std
mov
scas
push
call
jno
popl
adc
cld
xchg
enter
cmp
mov
push
mov
pop
inc
push
lret
insb
jno
pop
mov
stc
sbb
hlt
sbbb
xor
push
sub
sbb
test
jmp
inc
push
sti
aas
js
mov
cmp
jge
add
push
icebp
xor
mov
lahf
dec
int
ljmp
adc
sbb
cmp
sar
aaa
out
lock
out
pop
pushf
mov
out
xor
pop
loope
into
lret
lcall
js
pop
add
inc
cmpsb
and
or
vmovhps
pop
sbb
aaa
add
adc
jl
iret
lods
popa
dec
jae
or
lods
int3
pop
adc
dec
mov
xchg
daa
mov
fwait
xor
sub
out
and
aam
add
pop
testl
ss
daa
enter
fstpt
out
or
xor
xor
int3
push
jns
mov
mov
lcall
pop
cmp
orl
aad
xchg
cmp
out
xor
pop
cltd
aas
push
or
push
leave
xchg
push
lahf
leave
rep
or
cmc
pop
cmpsl
lods
lock
out
outsl
loop
aam
xchg
jne
mov
lods
dec
into
pop
push
sahf
ss
shll
imul
xchg
mov
xor
mov
inc
inc
xor
aam
add
jno
push
or
mov
jnp
xorb
das
outsl
rorb
ret
dec
shll
lea
enter
in
jecxz
mov
jo
inc
and
push
pop
test
stos
lods
cmp
mov
adc
stc
jae
cld
sti
jnp
pop
sbb
mov
fsubs
fdivl
pop
loopne
das
out
push
inc
test
cs
pop
movsl
rorl
push
xor
or
xor
dec
or
rcr
xor
scas
pop
pop
jge
repnz
cmpsl
xchg
mov
test
imul
decb
jb
xchg
xor
or
mov
mov
xlat
mov
mov
push
out
jp
fbld
addr16
cwtl
pop
jb
xchg
mov
mov
rol
sub
mov
test
clc
movups
sub
xchg
mov
xchg
sahf
in
jmp
or
cwtl
lcall
mov
jl
gs
ficoms
aam
repz
popa
lock
lea
stos
sub
icebp
mov
sub
jns
jnp
aas
lcall
and
cmp
fnstcw
inc
push
mov
sbb
sbb
cmp
js
sbb
inc
sub
mov
addr16
sarl
and
jge
stos
les
cmp
xor
mov
push
fldl
stos
leave
dec
fmuls
test
sbb
adc
ja
xchg
lcall
push
mov
cs
aam
int
adc
into
mov
les
leave
mov
pop
xchg
les
xchg
and
fadds
pop
shrb
cs
faddl
add
sub
out
xor
xchg
ss
push
xchg
fisttpl
sub
in
aam
iret
jge
pop
dec
xor
jge
add
fisubrl
or
cli
pop
bnd
outsb
xor
xchg
cmp
ljmp
xor
sub
push
popa
arpl
add
aad
and
sub
inc
sbb
loope
sub
sti
inc
or
popf
cs
cmpsl
fsubrs
jg
es
pop
js
insl
rclb
test
push
mov
mov
pop
push
cwtl
sub
jo
mov
xchg
aaa
sub
mov
ds
in
sbb
cmpsl
dec
pop
ret
mov
sub
mov
int
js
cmp
mov
sti
insb
mov
addb
xchg
adcb
arpl
dec
out
in
xchg
jne
and
xchg
ret
inc
ss
loopne
and
subb
mov
call
xchg
mov
push
sbb
cmp
xor
fcmove
test
mov
pop
mov
fisubrl
or
push
xchg
mov
stos
je
sbb
popa
adc
jge
mov
imul
push
jmp
jae
cmp
dec
jg
mov
xchg
into
repz
frstor
and
push
nop
xchg
cli
ljmp
hlt
fs
pop
dec
xchg
andl
inc
xchg
pop
out
inc
dec
ss
cli
or
pop
mov
xor
faddl
and
in
pop
inc
cmpsl
sbb
xor
push
adc
jnp
jmp
push
push
mov
sub
mov
pop
or
pusha
push
ret
sub
mov
mov
int3
xchg
es
mov
mov
decl
or
xlat
je
cmp
cmpsb
popf
mov
pop
push
jae
add
out
adc
push
mov
lcall
pop
push
jne
jecxz
jmp
jbe
and
push
hlt
ror
or
mov
fistps
mov
insb
jg
inc
adc
dec
mov
mov
ja
loop
icebp
lock
inc
pop
xor
cmp
mov
sub
push
lea
aas
pop
call
xor
das
imulb
and
pusha
rolb
cli
mov
stos
call
dec
pop
push
addl
sub
arpl
cmc
adc
pop
movaps
and
jl
mov
xchg
in
aad
and
outsl
jne
in
lods
adc
das
popf
inc
int3
icebp
ss
ds
and
sub
add
test
xchg
daa
xchg
cmpsl
add
and
out
sub
xor
aas
adc
and
out
enter
daa
test
fisttps
aaa
shll
les
mov
cmpsb
xor
fwait
xchg
int
add
adc
arpl
inc
scas
insb
adc
push
dec
cld
cld
pop
call
mov
jecxz
fldenv
push
mov
lahf
mov
lret
ret
shlb
test
add
mov
push
mov
jecxz
scas
xchg
shll
cmpb
lods
xor
push
push
fdivrp
pop
shrb
add
dec
push
daa
cmpsl
inc
dec
mov
ret
lods
xchg
push
add
push
lahf
imul
outsb
xchg
aaa
inc
lock
adc
xlat
push
add
negl
push
jns
cli
dec
cmp
sbb
mov
in
hlt
lods
pop
mov
aas
in
incl
sbb
ffree
insl
sbb
xchg
inc
pop
inc
fs
je
jne
and
ror
ret
es
and
bound
mov
xor
jb
xchg
xchg
cld
jo
sbb
repnz
sub
clc
insb
js
and
mov
jmp
aad
mov
shrl
mov
outsb
dec
out
jbe
xchg
dec
fildll
cmpsl
inc
cltd
inc
test
dec
int3
es
mov
mov
push
cs
mov
repnz
push
push
inc
dec
sub
mov
jns
cmpsl
xchg
inc
jne
outsl
std
aam
insb
lock
data16
sbb
fs
sbb
cmp
mov
adc
pushf
test
stc
imul
lcall
push
int3
xchg
and
inc
cmpsb
push
and
les
jl
xor
insl
enter
cmpsl
shll
pusha
insw
inc
and
cmc
adc
lds
sub
xor
int3
popa
ljmp
jmp
cld
int3
xchg
sub
insl
std
jg
cmc
setnp
dec
sub
cmp
push
add
pop
repz
jo
stos
lods
mov
jns
adcb
data16
cli
mov
test
or
add
aad
cmpsb
jno
jo
cs
cmp
sbb
sti
jmp
inc
push
mov
push
or
sub
adc
stos
in
adc
fucomi
mov
mov
and
testl
mov
pop
push
push
or
out
mov
sbb
adc
or
mov
out
pushf
dec
fstpl
sub
mov
ret
sbb
aad
loopne
leave
or
mov
mov
iret
lods
inc
jno
ss
repnz
mov
pop
xlat
xor
jns
push
adc
pusha
fs
shrb
scas
xor
jle
adc
or
or
jle
test
dec
inc
mov
ficoms
xchg
loop
ret
loop
jbe
stos
mov
dec
mov
or
and
and
stos
push
mov
sub
andl
cs
adc
test
add
and
mov
js
push
dec
pushf
scas
jp
ss
arpl
jl
repnz
pop
push
imul
cmp
cmc
jae
sar
mov
addl
jo
mov
push
xor
cwtl
xchg
xchg
xlat
pushf
pop
fiadds
inc
loopne
mov
xor
addb
insl
sbb
or
sti
clc
imul
sbb
sub
ror
pop
adc
add
fidivrs
cs
inc
push
fildll
cmp
lret
or
push
insl
mov
and
adc
ds
pop
sbbl
shr
and
xor
push
les
cld
stc
xchg
dec
fstps
loop
inc
inc
mov
jmp
add
cwtl
iret
dec
movb
nop
dec
mov
or
cli
outsb
out
xor
mov
add
ds
andl
rorl
dec
insb
jae
jl
sbb
loop
lret
ss
mov
mov
mov
and
dec
in
inc
mov
pop
stc
or
adc
push
ljmp
ja
mov
stc
decb
jne
int3
pop
jb
out
add
mov
fsubp
popa
les
out
fmulp
movsl
add
adc
jecxz
adc
sub
sbb
loope
jmp
xchg
inc
xor
ds
cltd
pop
inc
sbb
jge
fwait
mov
fidivl
cld
out
loope
mov
or
rol
test
addb
mov
mov
hlt
in
lret
enter
jmp
lods
pop
sbb
aad
inc
int3
lock
pop
mov
and
sahf
inc
inc
incb
popa
leave
clc
jo
js
cmp
shl
scas
les
mov
sbb
mov
pushf
or
and
lahf
icebp
cmp
mov
mov
push
jne
mov
push
or
rclb
cli
in
jp
daa
adc
ret
sbb
xchg
iret
xor
leave
stos
adc
in
ret
dec
mov
test
and
nop
ret
mov
in
push
mov
inc
push
test
xor
mov
xor
cld
dec
fbld
or
movsb
jg
jbe
fiaddl
arpl
lock
inc
leave
ljmp
sbb
nop
pusha
adc
mov
xchg
cs
testl
cltd
outsb
ret
ljmp
sub
stos
inc
jge
xchg
add
sbb
sbb
outsl
out
adc
jbe
mov
or
xchg
popf
adc
jg
das
popa
mov
fdiv
adcb
jge
aas
scas
inc
mov
cwtl
shlb
or
adc
inc
stos
out
popf
pop
mov
xchg
pushl
inc
aaa
pusha
and
pusha
push
and
jno
lret
jmp
cwtl
ja
or
mov
xchg
sahf
push
sub
fsts
scas
pop
sub
mov
xchg
aam
push
or
fcos
rclb
mov
jl
mov
xor
imul
clc
fstpl
cmp
clc
add
clc
xlat
lcall
pusha
fdivs
xchg
push
push
pop
test
pop
sahf
push
jnp
shr
sbb
repz
mov
add
lcall
int3
xchg
adc
out
add
push
add
push
push
and
sbb
shlb
fnstcw
scas
xchg
push
mov
dec
daa
in
js
push
scas
adc
mov
loop
cmp
adc
clc
fdivs
xchg
inc
ja
scas
fstps
into
add
pop
xchg
jnp
mov
test
inc
cmp
mov
xor
mov
pop
xchg
je
or
jne
pusha
lea
push
insb
aaa
and
sahf
scas
mov
inc
cmpxchg
mov
jle
pop
hlt
sti
cmp
cs
fmull
push
out
jg
sbb
repnz
sub
scas
sbb
lcall
sub
in
jne
mov
adc
push
out
add
fldl
jns
cmp
mov
fnstenv
jnp
loope
inc
lahf
jl
mov
pop
dec
sub
add
jg
lahf
dec
adc
or
std
sbb
jns
add
mov
fsubrs
push
ror
sub
fisttpll
jmp
xchg
jge
dec
mov
and
fdivl
cmc
mov
dec
xor
loopne
rolb
or
testl
movl
mov
aas
jae
jnp
je
data16
jne
pmulhw
and
inc
add
xchg
inc
stos
push
iret
or
dec
dec
icebp
jl
adc
pusha
or
test
je
xchg
sbb
push
push
addr16
xor
mov
dec
jecxz
sub
jnp
cld
jmp
ret
push
mov
and
mov
clc
jmp
xor
ja
dec
and
incl
ror
pop
ror
inc
testl
mov
inc
lcall
adc
ja
addr16
mov
jl
jb
std
shlb
add
nop
xchg
push
es
lea
sbbl
pop
jmp
data16
xor
das
mov
mov
neg
jle
xor
pushf
andl
pop
push
out
lcall
stc
xchg
loopne
push
movb
cli
pop
xor
xor
and
cmp
in
mov
mov
push
or
xor
std
arpl
xchg
daa
test
and
cld
or
cmp
inc
icebp
xor
mov
ror
hlt
xor
adc
adc
xchg
fadd
xchg
scas
add
push
fdivrs
mov
dec
dec
mov
cwtl
xchg
shlb
sbb
dec
xor
xlat
xor
addb
bswap
outsl
enter
adc
loopne
bound
mov
dec
outsb
out
test
aad
mov
leave
fnstsw
std
in
add
fisttpll
cmc
dec
repnz
jo
ss
adc
and
in
pop
int3
stos
ds
mov
sub
das
gs
dec
in
pop
jae
sub
add
scas
or
jmp
pop
daa
sub
cmp
js
xchg
pop
jmp
xor
jne
cmp
movsl
mov
or
jp
fldenv
inc
ds
mov
out
aas
and
movsl
jae
add
dec
sbbl
pusha
sar
mov
cwtl
jbe
aad
nop
aad
xor
cs
vunpckhps
arpl
into
pop
pop
orl
imul
or
fstps
outsb
push
pushf
push
out
sub
jb
push
push
add
add
incb
fistpll
in
jno
pop
mov
pop
js
dec
adc
add
cmc
xchg
mov
incl
out
mov
inc
sbb
inc
jns
sbb
add
mov
pushw
pop
aam
test
outsl
xchg
arpl
pop
shll
mov
inc
outsl
ljmp
shl
xchg
and
push
mov
xchg
lcall
pop
shll
jb
xlat
test
pop
jmp
pop
clc
inc
sub
inc
xchg
xorb
and
mov
cmpsl
mov
adc
push
or
xor
imull
pop
sub
pushf
fidivl
nop
int
idivb
mov
adc
movsb
add
mov
adc
ds
jmp
out
xchg
out
push
inc
cs
push
or
xor
adc
mov
insb
pop
pushf
mov
and
dec
in
jg
fsubr
jp
ljmp
sbb
lea
out
sbb
stos
add
shlb
push
xchg
sti
jno
das
jnp
adc
xchg
mov
icebp
stc
xchg
fmull
aaa
mov
pusha
test
dec
adc
aas
pop
add
icebp
or
dec
pop
push
js
scas
xor
stc
test
mov
fs
lock
add
cwtl
push
clc
sti
rorb
mov
aaa
mov
dec
xchg
ret
add
add
andb
mov
outsl
fxch
sub
mov
mov
jmp
or
adc
xor
mov
dec
neg
pop
jp
pop
jno
mov
xlat
inc
test
mov
sub
jo
add
icebp
repz
scas
add
cmp
jns
lcall
pusha
add
push
jle
fidivs
push
fisubrl
out
mov
insl
lods
repz
push
push
fwait
call
fldenv
xor
stc
mov
and
nop
frstor
stos
addb
les
rorl
inc
push
sub
addr16
add
add
imul
jp
movsb
sbb
xor
fld
xchg
cmc
loopne
lods
adc
cmp
movsb
jns
jmp
sbb
or
pop
push
xchg
jl
mov
mov
xorb
adc
nop
repnz
std
xchg
lea
ds
jno
mov
out
aad
dec
insl
mov
mov
push
or
mov
jg
xchg
pop
fistl
add
pop
add
ret
es
lcall
stc
bound
pop
ss
or
or
stos
int3
aad
aaa
and
gs
rorl
jl
mov
daa
int
mov
test
push
shl
jmp
mov
out
dec
dec
mov
inc
pop
dec
xchg
das
inc
or
nop
jns
mov
dec
pop
iret
pop
out
in
daa
daa
mov
jl
pop
push
dec
fnstenv
mov
stos
jne
xor
cwtl
jae
out
or
orl
fs
sub
out
inc
loop
push
mov
mov
add
cld
pusha
fs
adc
sbb
cmp
mull
jbe
cwtl
sub
mov
jns
das
push
pop
mov
xor
cmp
scas
push
cmp
push
rdtsc
push
mov
sbb
loopne
bound
cmp
inc
cmpsb
and
out
es
pop
movsb
mov
and
push
xlat
sahf
mov
std
dec
ljmp
in
dec
pop
xchg
fidivl
sub
or
pop
push
sbb
push
movsl
fisubrs
mul
adc
mov
adc
cmp
and
iret
sti
out
lds
cmp
leave
pop
cmpsb
lock
adc
or
cmp
movsl
xchg
mov
out
shlb
xor
lods
and
clc
loopne
push
cld
pusha
xlat
jns
jae
int
sbb
mov
daa
inc
lock
pushf
push
push
sub
or
adc
lahf
or
or
and
sbb
cmpsb
rorb
inc
dec
jp
and
in
loopne
jo
lea
and
ret
jp
bound
push
pop
repnz
std
add
sbb
enter
loop
rol
jns,pt
push
sbb
cmp
rcrb
xor
lret
inc
mov
testl
or
adc
sti
jmp
fs
jmp
rcrl
cmp
dec
adc
pushl
repz
xchg
mov
push
les
out
jl
jp
jle
sub
adc
sbb
ds
lcall
and
imul
notl
cmc
lds
imul
or
repz
imul
mov
push
fnstcw
test
add
mov
int
out
arpl
out
mov
sub
fs
repz
bound
jmp
repz
or
mov
xlat
das
sub
and
add
mov
dec
cmp
mov
popa
xor
push
popa
and
bound
in
jns
bound
pop
mov
cwtl
nop
pop
int
push
js
movsl
dec
ljmp
push
xchg
dec
inc
or
test
cmp
ja
push
fs
data16
les
mov
jmp
stos
pop
adc
jmp
loop
inc
shl
lods
pop
xor
cs
imul
insl
mov
inc
in
int
outsl
xchg
inc
cmpsl
ret
push
lods
mov
mov
scas
lcall
sbb
mov
xchg
cld
inc
aad
testl
js
mov
cli
mov
sub
out
cmp
cmp
cmp
leave
movsl
cmp
sbb
jno
iret
inc
or
mov
or
push
stos
movsl
inc
lret
mov
rcr
sub
std
in
cmp
push
xor
pop
addl
ret
jp
ss
sbb
scas
pop
inc
push
mov
mov
xor
test
fs
shll
mov
jb
jp
test
hlt
loop
fdivl
shll
push
cmc
pop
xchg
mulb
xor
push
repnz
push
push
leave
xor
aam
or
lods
arpl
or
mov
scas
mov
sub
fucomip
push
adc
adc
push
mov
iret
mov
repz
mov
push
adc
aas
repnz
mov
xor
lret
and
pusha
mov
mov
inc
mov
dec
js
call
stos
fldcw
pop
test
leave
mov
ljmp
push
dec
popa
cmp
sbb
or
add
and
das
into
out
scas
mov
aam
iret
sahf
push
in
lahf
inc
cmp
dec
pop
jl
repnz
es
lds
pop
push
sbb
ret
mov
xchg
adc
add
lods
push
and
jge
mov
aas
add
dec
dec
mov
sbb
add
push
cmp
outsl
test
add
lods
mov
test
or
dec
pop
pop
test
iret
insb
hlt
dec
stos
fisubl
nop
je
shrb
leave
fsubl
sub
add
cmp
xchg
out
xchg
fcmovnbe
mov
add
xchg
lret
in
or
xchg
fsubrp
inc
or
mov
aam
xor
andl
adc
aas
xchg
in
int3
push
adc
push
jns
cli
jb
mov
rorb
jecxz
cld
xor
jne
mov
repnz
sub
add
and
pop
cmp
lret
cmc
xchg
jl
inc
cmpl
fisubs
pop
inc
lahf
mov
and
pop
or
jne
clc
ret
sub
mov
mov
test
paddusb
sub
sub
loop
ds
ja
popf
addl
push
testl
fcoml
out
subb
adc
imul
jo
in
sbb
inc
paddsw
fldenv
imul
jg
mov
push
shll
mov
or
mov
jbe
jbe
mov
add
sbb
or
mov
subb
jmp
int3
xchg
repz
iret
outsb
mov
mov
push
bsf
in
insb
in
int3
adc
es
lret
ds
jnp
or
jg
xor
pop
pop
jnp
add
stos
loop
sar
int3
jae
cmp
mov
mov
fimull
in
int3
jno
stos
pop
repz
testl
push
inc
ret
in
pop
xor
and
ret
mov
mov
mov
arpl
lea
flds
push
inc
dec
dec
hlt
push
and
subl
sbb
stos
xlat
shll
cmp
mov
rcrb
ret
fisubrs
jbe
pop
jecxz
testl
and
pop
jns
pop
leave
dec
sub
push
jg
sbb
sbb
cld
add
mov
jae
xchg
mov
push
push
sbb
and
mov
jns
cmp
in
shlb
in
in
pop
pop
les
push
fcomps
hlt
dec
dec
dec
fdivs
mov
and
xchg
inc
cltd
ret
pusha
xorb
and
out
jmp
dec
xchg
call
bound
mov
mov
sbb
cwtl
lds
lea
clc
sbb
dec
repz
icebp
sbb
sbb
jnp
cmp
fs
adc
add
xorl
roll
jae
cld
lret
jp
orl
fiaddl
jns
xchg
lret
push
cmp
jmp
sbb
add
out
mov
ds
out
or
aas
fiaddl
or
out
sub
pop
sbbb
sbb
mov
lock
popl
xor
mov
daa
test
lods
pop
dec
cmpsb
adc
sub
push
jmp
lahf
insb
mov
cmc
shl
pop
adc
stos
out
aaa
inc
in
xchg
mov
push
fsubrl
xchg
icebp
lea
adc
std
int
rorl
sbb
xchg
cmp
jno
fnsave
sub
xchg
and
iret
test
leave
xor
ljmp
push
outsb
push
sbbl
push
in
lret
xlat
out
fs
mov
loop
repnz
addl
mov
popa
push
inc
adc
ret
out
jae
cmp
xor
nop
adc
aam
xchg
stos
pusha
jno
pop
push
imul
cmpsl
fmul
rcll
adc
inc
jmp
or
and
lock
ret
sbb
std
push
jne
sbb
mov
dec
das
shl
sbb
adc
mov
push
outsl
in
pop
bound
xor
sub
pop
mov
jne
jl
jge
jbe
adc
loope
push
les
fwait
cli
fld1
lock
out
es
push
or
adc
cmp
mov
mov
mov
xor
dec
icebp
fldl
or
aam
mov
mov
loope
jns
stos
dec
lahf
les
loopne
sbb
cmpsl
dec
jno
out
push
sub
loopne
lcall
and
lcall
inc
arpl
and
jp
ror
cmp
mov
sub
cmp
mov
test
adc
pop
pusha
les
stc
and
sbb
jb
mov
pop
add
loope
xor
cmp
aam
pop
dec
stos
cmc
adc
adc
pushf
loop
push
jbe
sahf
int
out
into
sbb
fs
adc
loop
mov
int3
push
popa
or
jo
movsb
mov
pop
add
push
sub
xor
sbb
clc
cld
or
mov
sbb
stos
test
insl
mov
sbb
int
dec
or
repnz
fdivp
push
or
xlat
dec
mov
mov
aad
xlat
pop
mov
xor
xor
sub
push
and
loopne
jecxz
sbb
insb
inc
dec
sub
test
push
mov
cs
repz
mov
mov
xor
andb
addr16
lods
sub
cmpb
cmpsl
xlat
popa
sbbl
jge
dec
mov
popf
mov
aas
jecxz
xor
cmpsl
jb
gs
inc
pop
nop
and
outsl
insl
test
insb
adc
pop
cmp
pop
push
dec
pop
dec
scas
mov
cmovg
xor
xchg
pop
popa
xchg
movsb
ljmp
into
sub
lcall
inc
mov
push
movsb
or
jge
push
cli
xchg
loop
lahf
xor
rcrl
sub
ficomps
inc
push
mov
pop
imul
cmp
lret
push
pop
popa
cmp
push
mov
adc
jbe
dec
imul
add
mov
out
xchg
int3
cmpsl
add
pop
pushf
fmull
cmp
and
sbb
mov
push
xchg
push
dec
sub
into
movsb
int
dec
xchg
adc
push
xor
into
dec
inc
sbb
cli
sub
xor
ret
call
xor
rcl
jnp
insl
stc
mov
into
nop
ret
and
andl
icebp
add
gs
test
aas
push
sahf
jg
dec
sub
leave
test
in
fisttpll
cld
cmp
xchg
mov
negb
cwtl
adc
sahf
in
shll
ja
pop
lods
push
mov
fmull
fs
mov
jbe
cmp
rolb
in
fldcw
out
jns
dec
loop
incl
mov
lods
inc
inc
and
ds
mov
mov
shll
subl
aaa
lea
xor
scas
sub
ret
mov
add
stos
aas
pop
or
sub
cmp
sub
xor
mov
out
mov
or
and
and
dec
cmc
push
dec
insb
or
aam
insb
xchg
cmpsb
fcmovnbe
mov
nop
push
jmp
adc
arpl
push
jmp
mov
jp
scas
pushw
push
movsl
and
inc
inc
sub
jae
dec
xchg
imul
pop
fsubrl
mov
fimull
add
pop
inc
test
or
jle
mov
fcompl
xor
push
sti
add
mov
enter
or
lahf
movsb
push
inc
lods
mov
test
push
in
push
mov
aaa
add
mov
clc
hlt
sbb
test
in
push
xorl
mull
in
push
in
xor
lcall
outsb
loop
pushf
mov
jb
or
fs
inc
mov
sub
sub
cld
mov
xor
cmp
fiadds
xchg
xchg
pop
mov
mov
es
push
lds
jnp
lcall
and
mov
mov
je
sbb
add
pusha
pushf
data16
push
daa
aas
sbbl
enter
scas
and
repnz
hlt
jecxz
std
insl
ffreep
leave
jecxz
ret
out
cmp
test
inc
rorb
or
xor
jg
mov
xchg
je
shl
or
cs
shll
pop
xchg
or
insl
je
test
andb
add
out
sbb
cmp
rolb
add
jae
movsb
or
push
sti
mov
aaa
arpl
sti
fs
in
push
sbb
mov
or
inc
out
adc
xchg
push
mov
push
stc
jle
dec
cwtl
imul
mov
add
push
dec
add
push
scas
add
dec
sub
fnstenv
xchg
clc
adc
jb
jno
fdivl
adc
xor
jo
adc
clc
in
mov
outsb
daa
jns
ss
xchg
jne
jne
jo
ljmp
xorb
xchg
sahf
popa
dec
cmp
imull
xchg
fs
xchg
jge
addr16
mov
mov
sub
xor
repz
mov
divb
ret
or
add
mov
ljmp
mov
xchg
outsl
mov
in
jge
cmc
adc
mov
adc
pop
idivl
sbb
jg
gs
fidivl
cs
not
adc
and
pop
mov
add
xchg
out
add
xchg
pop
rcll
into
mov
test
mov
dec
pop
aad
aam
xchg
jecxz
jbe
adc
fcmovnu
sub
inc
xlat
and
xchg
sub
scas
rorl
inc
adc
push
dec
and
sub
dec
cmp
pop
clc
jns
add
xchg
xor
add
je
rcrb
pop
mov
ja
rcr
daa
cmp
cmp
sbb
call
cwtl
loop
jo
scas
and
fwait
mov
mov
sbb
or
sarl
icebp
dec
push
sti
rclb
addr16
and
adc
push
xchg
cmp
scas
pop
sub
mov
adc
pmulhuw
ss
into
mov
xchg
test
jnp
mov
shll
inc
cli
mov
jbe
pop
mov
mov
mov
aaa
repz
cmc
jns
repz
mov
pop
xor
dec
add
pop
and
std
sar
adc
idivl
sbb
sti
pop
mov
ror
stos
sub
loop
jb
sbb
test
cmp
adc
test
or
push
leave
nop
mov
loope
sar
push
pop
pop
filds
cmpps
cmc
outsl
sbb
iret
out
adc
sub
mov
or
cmp
fstps
test
lds
lods
jl
stos
pop
fxch
sub
sub
jge
in
test
sub
jge
add
ljmp
xor
fs
sahf
shrl
or
lds
pop
mov
into
aad
mov
pop
mov
loope
push
mov
jmp
pop
ficomps
and
pop
jno
lcall
inc
or
push
mov
sbb
sbb
bndldx
push
mov
cmp
loop
sub
mov
dec
ret
xor
aas
pop
xor
sarl
xor
adcl
adc
stos
iret
dec
sub
adc
rcl
stc
pushf
stc
sub
mov
adcl
push
cli
xor
popf
into
xchg
test
or
xchg
push
or
mov
add
cmp
xchg
inc
sbb
mov
cmp
xlat
sahf
add
sbb
cmp
jge
cmp
dec
in
xor
push
aam
je
ljmp
shr
arpl
lds
fadd
fadd
ret
adc
jge
cld
push
pop
out
outsl
rorb
pop
shlb
xchg
mov
and
pop
mov
int
sbb
rclb
andb
dec
mov
incb
in
pop
xlat
xchg
pop
push
loope
lahf
bound
mov
push
mov
lcall
mov
in
mov
push
mov
outsl
iret
lds
aam
jne
setne
insb
or
pop
inc
std
mov
sub
sti
mov
mov
dec
push
ret
aaa
sub
insb
jo
scas
pop
fldl
fsubl
popa
push
push
dec
dec
mov
movsb
mov
outsl
arpl
out
lock
mov
inc
mov
sbb
test
test
inc
and
subl
or
rol
ds
loope
pop
scas
int3
imul
scas
lcall
add
cld
cmp
insl
push
pop
pop
shl
jb
or
aam
cmp
lock
xchg
je
xor
push
sbb
and
jnp
xorl
fs
stos
mov
adc
and
xor
pop
jno
dec
cmp
cmpsl
es
push
mov
pop
movsb
dec
inc
ja
into
jns
hlt
insb
mov
push
mov
sbb
or
and
test
jbe
flds
mov
fsubrs
cmpsl
das
loope
sbb
rorl
das
movl
xchg
mov
or
fildll
lock
mov
jae
out
out
sub
xor
cmp
adc
in
sbb
push
scas
mov
jne
jp
dec
ljmp
jp
adc
xchg
xor
pop
or
push
mov
sub
cltd
jg
lcall
cmp
out
cmpsb
mov
cmp
cmpb
repnz
mov
dec
inc
push
cwtl
push
mov
sbbb
std
fsub
lds
test
lcall
xor
mov
in
cmp
cli
push
fldl
jg
out
dec
ret
fsts
in
mov
sub
mov
cmpsb
mov
xor
mov
ja
mov
pushf
js
mov
scas
push
movl
push
adc
int3
outsl
xor
fisubs
dec
movb
out
xor
pop
jae
xor
es
andl
mov
std
cmp
stc
and
loopne
call
roll
xor
sub
inc
mov
push
xchg
pop
mov
xchg
push
and
push
adc
adc
sbb
mov
orb
sbb
adc
lock
inc
pusha
xchg
mov
inc
or
add
ror
stos
test
mov
ror
jecxz
fstpt
xor
xchg
fmull
movl
mov
xchg
fidivs
mov
in
test
jmp
fisubl
fnstenv
inc
scas
and
and
jl
fcompl
je
repz
rcrb
aam
jno
or
iret
jmp
inc
mov
sti
mov
in
jne
mov
push
in
fsubr
inc
and
inc
int3
lahf
ja
je
std
mov
ds
xchg
mov
imul
mov
in
mov
movsb
std
js
cld
cmpsl
cli
cmpsl
test
imul
data16
das
ljmp
xchg
cld
stos
int3
mov
sub
mov
lret
pop
cmp
mov
sqrtps
push
cmp
das
lcall
les
sub
cmc
mov
scas
mov
test
mov
icebp
je
mov
mov
adc
mov
cmpsb
nop
sbb
and
inc
lds
lret
sti
jb
push
xor
xchg
rorl
jp
sub
mov
xor
jno
pop
outsb
pop
dec
mov
pop
in
mov
or
movsb
cli
jne
or
out
pop
jle
pop
pop
jno
or
nop
cmpsl
xor
mov
jmp
add
mov
xchg
dec
inc
clc
adc
cli
xchg
xor
stos
jle
imul
outsb
aas
arpl
orl
out
scas
stc
sub
xor
gs
adc
mov
lods
mov
sub
lods
mov
js
dec
rcr
lock
popf
sarb
sbb
lret
fdivl
and
sub
inc
mov
mov
add
stos
or
addr16
sbb
adc
pop
cs
jns
rcl
into
test
cmp
jle
fldl
and
loopne
xor
daa
adc
aas
xor
fmuls
das
sbb
cltd
inc
je
pop
iret
popf
and
cli
mov
xchg
bound
cmpsl
xor
stc
dec
testb
cmpsl
push
push
dec
fildl
xchg
outsl
add
xor
xchg
dec
sub
add
cli
pop
cmpsb
in
inc
popf
incb
push
and
or
fwait
push
lock
or
or
mov
xchg
dec
lahf
shll
jb
push
aad
std
jns
jle
or
ret
or
mov
mov
add
scas
loope
aas
or
aaa
leave
push
in
xor
sbb
sbb
cmp
jge
loope
push
in
cmp
jge
loope
push
pop
loop
cmp
add
popa
fst
xchg
mov
lret
jle
loop
push
jg
imul
sub
pop
aad
push
xchg
and
xchg
pop
push
mov
fsts
mov
fsts
outsl
push
ss
mov
mov
xchg
sbb
xchg
and
repz
and
pop
sti
jnp
jo
push
xchg
jne
ljmp
pop
aam
dec
cli
inc
pushf
xchg
lret
ret
cli
pop
outsl
cmpsl
dec
xor
shll
jo
jns
adc
xor
les
fs
lahf
cli
or
push
fstl
pop
pop
scas
nop
dec
xchg
mov
aad
das
xchg
mov
pop
movb
push
sahf
into
shrb
mov
je
jae
cmp
jecxz
mov
pusha
jg
in
or
cli
imul
xchg
cmp
push
and
loope
sub
pop
sahf
xor
or
mov
xor
push
outsl
pop
inc
lcall
mov
call
in
pop
imul
or
jae
push
and
outsl
insl
addr16
fsubrs
fmulp
mov
lds
nop
sub
sbb
bound
cmp
aam
sarl
sbb
dec
mov
gs
adc
adc
fld
fwait
sbb
and
mov
fstp
push
xor
loopne
dec
dec
sbb
xchg
mov
mov
mov
bound
cmp
inc
push
arpl
mov
dec
jecxz
xorl
add
sub
mov
sub
ficompl
add
sbb
mov
mov
or
ds
mov
mov
or
outsb
lcall
mov
pop
clc
das
push
dec
xor
and
jno
push
repnz
rclb
or
pop
push
je
push
shl
outsl
xor
mov
nop
push
out
push
xchg
lock
cli
iret
fwait
pop
shl
jp
jp
and
stos
dec
cmpsb
inc
enter
xor
idivl
push
jg
dec
loop
jns
and
ret
mov
test
sub
mov
push
outsb
out
pop
insl
mov
cmp
ss
xchg
mov
pop
dec
lock
negb
cwtl
pop
int
int
call
jg
or
addb
jle
adc
cmpsl
mov
adcl
std
ljmp
loope
nop
push
jg
push
sub
aad
adc
shll
jae
mov
popf
js
into
pop
push
shl
xchg
mov
pop
ror
shll
sbb
xor
test
cmp
stc
dec
scas
xchg
cmpsb
mov
iret
daa
out
xor
shr
popa
mov
pop
push
push
cmpsl
rorl
mov
and
sti
addr16
lods
cs
cmp
push
outsb
dec
hlt
ljmp
push
ret
in
js
pop
int3
inc
cmp
jne
xchg
adc
dec
aad
out
mov
mov
shrb
pusha
out
push
cmp
out
mov
and
mov
lea
push
and
pop
xchg
jbe
int3
and
in
push
and
mov
jo
std
mov
dec
cltd
mov
jne
pop
cmp
add
xchg
sub
out
sahf
imull
cmc
fstps
push
test
push
cmp
inc
inc
arpl
pop
aad
xchg
fs
mov
inc
pop
xor
xor
insb
mov
mov
inc
fidivs
lock
stc
fwait
leave
ds
mov
jle
out
sbb
leave
loopne
imul
dec
and
into
test
jnp
jb
pop
jae
in
xor
aam
test
fcmovb
mov
mov
pop
stos
dec
vaddss
into
or
jne
cmp
xlat
dec
or
cwtl
sbb
daa
push
pop
adc
shlb
push
test
cld
imul
out
xchg
pop
das
push
bound
rcrb
loope
mov
mov
xchg
sbb
loopne
sub
psubsw
push
icebp
fisttpl
mov
scas
ljmp
in
and
test
outsb
jp
fnstenv
jne
mov
mov
jmp
cs
js
push
push
push
mov
pop
sbb
fstl
adc
in
and
movsb
bound
orl
cmpl
out
cli
imul
mov
fsubr
adc
nop
mov
jbe
push
push
and
aas
hlt
in
fisttpl
cmp
or
mov
outsb
in
lods
push
subl
inc
mov
jecxz
mov
std
jp
nop
push
xchg
or
pusha
or
mov
or
test
iret
push
repz
lods
adc
divb
lods
mov
lahf
cli
ret
mov
mov
int
bound
pop
sbb
xor
mov
add
in
pop
jo
rcll
fcompl
cmc
push
jmp
jle
movsb
jl
or
hlt
or
mov
insb
dec
call
xchg
push
stos
fwait
jmp
or
les
cs
fidivs
cltd
test
fldl
sub
push
lock
in
adc
pop
stos
lods
mov
or
shll
and
mov
cmpsb
mov
icebp
cmpsl
push
notb
mov
mov
jecxz
lods
ss
shlb
orl
je
imul
repnz
sbb
fsubl
roll
sbbw
dec
adc
mov
js
dec
lods
inc
mov
mov
aas
daa
lea
aam
push
mov
jnp
lret
or
pushf
cmc
inc
sar
fists
xchg
mov
jae
xor
aas
mov
in
lea
scas
xor
mov
dec
fcomip
imul
cmp
cmp
lock
mov
nop
jecxz
in
push
sti
insl
lret
stos
mov
push
xchg
pop
cmpsl
popa
and
jo
stos
jo
pop
cmpsl
jecxz
mov
les
mov
cmp
lds
vhaddps
inc
in
out
and
cmp
xchg
sub
ret
lods
dec
jmp
outsl
gs
std
mov
mov
sbb
and
add
or
daa
stc
push
cwtl
mov
es
mov
aad
or
out
scas
mov
in
jo
aad
out
mov
mov
add
out
or
sub
shll
and
ljmp
out
pop
or
das
push
pushf
test
jnp
cmpb
sbb
xchg
mov
mov
decb
sti
fisttps
frstor
sarl
xlat
dec
inc
jne
xchg
outsb
mov
and
sar
sbb
pop
incb
xchg
sbbb
mov
cmp
mov
mov
cmp
fstl
stos
decl
or
jno
popf
lcall
gs
adc
imul
shlb
jbe
jecxz
mov
adc
cld
addr16
mov
jg
lods
ret
and
add
mov
ficomps
cmp
mov
and
ret
and
push
dec
loope
out
xlat
mov
inc
push
sbb
pop
lds
hlt
jmp
sbb
mul
orl
pop
jge
pop
loope
cltd
sbb
shlb
add
mov
loope
inc
leave
movsb
cltd
fldenv
scas
in
sub
xor
shl
sbb
lret
inc
add
clc
rcrl
stos
pusha
cmp
test
data16
in
add
sub
scas
jne
push
push
sub
sbb
lcall
push
shlb
test
in
xchg
mov
push
sti
imul
xor
push
pop
loop
inc
mov
pop
xor
or
inc
das
stc
test
in
movsl
dec
sub
addb
push
sub
scas
push
cmp
ds
cs
fwait
aaa
fdivr
push
push
les
data16
mov
xor
add
int
loope
xlat
ror
std
int3
ljmp
mov
out
jecxz
or
imul
in
mov
mov
mov
test
movsl
icebp
sub
mov
xchg
loope
sub
popf
hlt
mov
std
inc
aam
add
xchg
mov
cld
out
cmpsb
fs
ret
mov
jnp
cltd
fdivrs
adc
rcr
inc
adc
outsb
test
pop
rcll
or
out
enter
nopl
xor
mov
adc
mov
inc
addr16
xor
jle
fisubrs
jne
dec
nop
mov
cld
outsl
inc
out
lret
mov
pop
fildll
pop
or
int3
lahf
dec
cmp
faddp
inc
movsb
pop
imul
mov
lahf
lret
xchg
fdivrl
and
push
xchg
jbe
test
rcll
rcrl
lds
icebp
push
pop
out
jmp
enter
adc
dec
and
out
push
ds
cmp
movsb
sbbb
das
xchg
enter
cmp
hlt
in
lods
add
jle
loope
pop
mov
shlb
pop
mov
aad
rorl
jp
out
push
pop
iret
pop
xchg
aas
jmp
pop
mov
sbb
cmc
cmp
stos
mov
out
xlat
jno
pop
cmp
fmuls
push
dec
and
push
ja
int
xlat
cmp
outsl
mov
rcrl
subl
xchg
push
stc
jmp
dec
stc
xor
pushf
das
addr16
ss
leave
cmpsl
sbb
jp
cwtl
xchg
mov
scas
test
and
inc
sahf
inc
adc
xchg
mov
jo
sub
inc
fmulp
jae
sbb
mov
push
jle
or
imul
clc
mov
jmp
or
mov
mov
std
pop
mov
stos
popa
add
mov
xor
add
in
sub
std
jb
push
mov
and
lds
add
adc
sbb
rol
dec
out
push
cmp
stos
add
pop
ja
mov
jno
inc
pop
or
sub
pop
aas
push
sub
mov
sub
cmp
stos
out
sub
in
dec
mov
sub
mov
pusha
adc
add
les
pusha
in
aad
inc
ljmp
mov
xor
push
ret
lods
les
cltd
ljmp
scas
dec
dec
xchg
icebp
ds
in
xchg
xor
stos
sbb
stos
adc
lods
push
jge
pop
xor
jl
mov
popf
dec
cmp
rcll
cmp
pop
pop
setl
pop
popf
sub
gs
out
out
fwait
mov
adc
ror
and
pop
inc
mov
push
mov
pop
into
subb
dec
lea
sbb
out
scas
iret
xor
sub
adc
int
xor
dec
lods
icebp
xchg
out
sub
insl
dec
stos
cmp
push
inc
adc
mov
jb
test
out
loop
stc
xchg
inc
xchg
cmp
shr
or
push
ror
scas
dec
lds
cld
fisubrl
jl
ffreep
mov
and
xlat
fcompl
in
sub
mov
and
jns
cmpsb
insl
mov
imul
mov
xor
cmp
pop
pop
bound
int3
fisubl
cmp
sbb
mov
loope
shrb
jno
inc
outsl
jg
or
sbb
pop
jecxz
lret
jg
or
pop
gs
popf
stc
push
mov
xchg
pop
out
jb
mov
fisubs
push
ret
insl
add
and
pop
mov
fidivl
add
dec
incl
out
aas
mov
sbb
xchg
adc
cld
push
or
test
out
arpl
es
pusha
icebp
outsl
rcrb
pop
out
mov
cmp
push
xchg
mov
lock
in
dec
mov
test
movsbl
cmp
mov
hlt
adc
dec
notl
push
sbb
add
cmp
scas
ds
or
sub
ret
mov
outsb
and
jns
fistl
add
shl
insl
loopne
gs
repnz
xchg
pop
sub
pop
jnp
push
les
pushl
cpuid
xchg
xor
and
mov
jmp
mov
dec
xchg
mov
out
push
lock
nop
vpsllq
xchg
jecxz
push
das
cmp
fcmove
dec
mov
out
mov
mov
arpl
xchg
push
aam
cmp
leave
stos
insb
pop
in
cltd
leave
sti
lret
or
pop
cld
and
pop
adc
mov
shrb
xchg
mov
outsl
ljmp
or
cli
and
pop
sbbl
int
adc
leave
clc
and
out
insb
cmp
sbb
and
push
inc
iret
pop
xchg
sarl
dec
jbe
arpl
jecxz
es
dec
in
sub
sti
inc
out
sarl
push
mulb
aas
stc
push
lods
int
sub
daa
pop
imul
jg
sbb
add
daa
xchg
test
jp
es
fcompl
psubw
fidivrl
gs
mov
nop
pop
mov
xor
hlt
scas
ds
and
insl
inc
mov
test
movsb
add
mov
imul
cltd
fnstsw
dec
mov
xchg
mov
fldcw
dec
adc
push
xchg
add
int
cwtl
sub
js
jns
xor
sbbb
xchg
mov
add
sarb
stc
sahf
xor
les
insb
mov
cmpsl
rcll
inc
fcomps
inc
mov
sbb
xor
dec
xchg
int
je
pop
pop
jp
outsl
out
cmp
dec
sub
sub
and
xchg
adc
add
xchg
dec
outsl
xlat
inc
fistpll
xor
add
pop
aad
sahf
popa
push
xor
aad
xchg
clc
mov
or
xor
out
aas
pushf
outsl
cmp
fdivr
sub
sbb
lret
in
cmp
jg
jmp
jl
subl
lods
test
inc
fwait
int3
pusha
xor
pop
mov
sti
lock
lock
movsb
sbb
mov
push
and
pop
pop
and
adc
jmp
sbb
cmpsb
lods
hlt
adc
shrl
test
and
mov
pop
pushf
add
insl
scas
dec
ret
stos
adc
lret
cli
insb
int
sbb
pop
dec
xchg
push
das
and
fldt
repnz
shr
inc
add
xchg
ret
adc
test
arpl
xor
cmp
imul
xor
lret
mov
sub
jge
aaa
std
mov
popf
jne
outsl
dec
xor
rcll
sbb
mov
imul
xor
pop
mov
lock
in
repnz
inc
inc
jp
push
in
mov
cli
icebp
and
dec
xchg
mov
lahf
js
and
repnz
add
movsl
ret
loopne
xor
stos
popf
out
jg
sbb
mov
sub
push
xchg
leave
popa
outsl
dec
adc
adc
xchg
mov
mov
rcr
arpl
mov
xchg
popf
loopne
js
jmp
pop
cwtl
cmove
mov
push
pop
dec
cmp
je
lods
mov
or
in
mov
jne
xor
roll
add
inc
pop
push
adc
jns
pop
sbb
and
sbb
adc
pushl
lret
je
call
xor
dec
jl
xor
mov
insl
es
jecxz
push
cli
mov
sub
stc
cmp
dec
sub
imul
xor
jbe
addr16
and
and
push
pop
and
out
sub
or
fisttpll
repnz
jb
shr
cwtl
mov
fcmove
imul
out
dec
insb
popa
jg
movsl
jp
pop
or
sub
fcoms
xchg
jno
adc
pusha
in
sub
mov
mov
jb
scas
ss
movsl
inc
xchg
cmpsl
lods
test
leave
mov
in
xchg
xchg
lret
pop
int
sub
cmc
mov
lods
jb
dec
jge
adc
push
rcrb
push
and
insl
pop
lcall
sub
cmp
loop
aaa
pushf
aam
repnz
sub
adc
mov
int3
mov
lock
hlt
pop
sub
xor
fstpl
ja
mov
test
push
pop
push
mov
jl
test
mov
sbb
mov
inc
and
mov
leave
sub
int
mull
mov
lret
or
ret
js
rcrl
lods
fisubs
je
pop
pushl
pop
xchg
dec
loopne
mov
loop
pop
repz
into
mov
inc
xchg
xlat
push
pop
ds
loope
popl
clc
pop
daa
mov
jne
add
ljmp
xor
dec
negl
pop
xor
pushf
rcrl
sbb
outsb
and
mov
mov
imul
inc
out
cmpps
add
outsb
xchg
test
and
imulb
and
mov
jl
lds
push
les
popa
pop
jg
jae
inc
addr16
or
aaa
mov
xor
and
push
push
add
push
fnstenv
or
mov
dec
das
sub
push
pop
addr16
ret
lds
fmulp
mov
dec
mov
sub
lods
lods
mov
or
adcl
jb
lret
das
or
clc
enter
pop
mov
xor
into
das
pop
push
pop
repz
mov
enter
dec
dec
bound
and
mov
sub
push
mov
jmp
int3
mov
lret
pop
out
mov
rcrb
scas
movsl
jne
dec
push
push
xchg
shrl
testb
je
in
xor
mov
adc
js
or
popa
mov
jae
xor
roll
jne
cwtl
mov
adc
inc
jg
push
rcrl
daa
push
in
orl
das
jmp
jmp
loope
mov
add
popa
das
scas
add
push
xchg
inc
mov
jae
inc
add
mov
adc
sub
aam
ja
movsb
repz
add
mov
sub
arpl
xchg
jle
or
push
xchg
or
addr16
pusha
js
xchg
je
push
dec
hlt
add
push
scas
je
inc
leave
or
lods
out
stc
ffreep
jbe
xchg
gs
xor
push
movsl
fisttpl
in
shr
in
cmp
dec
nop
movsl
enter
pop
pusha
add
mov
mov
xchg
mov
mov
inc
les
in
insl
xchg
mov
in
jno
or
in
inc
mov
stos
addr16
enter
mov
mov
sub
xchg
sbb
jae
cltd
dec
pop
sub
rcl
idivl
and
das
xor
mov
jne
or
mov
jmp
outsb
dec
inc
push
mov
in
test
push
stos
sahf
test
pushf
lret
test
inc
std
jmp
data16
adc
xchg
mov
xor
jle
cmp
mov
aam
push
stc
aaa
mov
adc
mov
sarl
pusha
xor
ja
out
pop
push
ret
bound
xor
and
add
fisttpl
jl
xor
push
loop
dec
cltd
push
js
jecxz
or
cmp
repz
call
fmull
shrb
jb
in
es
stos
push
lock
mov
xor
or
js
and
pop
xchg
ret
cmpsl
dec
sub
cmpl
aaa
or
rorl
pushf
negl
imul
inc
xor
push
iret
iret
movsb
rcrl
mov
loope
jle
mov
jb
test
dec
call
or
and
mov
addr16
xor
add
outsl
in
int
pop
inc
aam
rol
lds
sbb
loope
sbb
je
and
scas
icebp
or
ja
adc
sbb
mov
xor
push
sbbb
mov
popf
es
xor
push
xchg
push
dec
aam
ss
xchg
adc
jns
and
leave
inc
jb
cmp
jg
in
or
and
outsb
ljmp
sbb
jge
sahf
hlt
std
rcll
rcrb
pop
ficompl
lds
iret
pusha
and
or
pop
push
stc
sub
int
and
pop
push
leave
daa
ds
mov
dec
cli
sbb
mov
mov
ffreep
adc
cld
sub
shlb
ss
mov
mov
mov
push
cmp
sti
lds
mov
xor
pop
mov
es
repnz
cli
fisubl
test
push
sti
dec
mov
ret
jae
adc
mov
lahf
cmp
pop
fwait
sahf
jl
adc
hlt
fwait
addl
fldl
jae
js
jmp
push
push
adc
and
sahf
cmp
and
cmp
shl
or
lds
scas
push
sub
sarb
ljmp
lret
xchg
fildll
pushw
pop
mul
dec
cmp
jb
push
adc
jl
pop
cmc
mov
push
cmc
lods
push
and
addb
push
dec
ror
test
jp
jne
nop
pusha
fidivs
fcmovnu
cmpsl
shlb
sbb
push
or
dec
adc
scas
cmc
int3
adc
out
cmp
inc
push
cmp
jmp
out
scas
mov
mov
xchg
add
or
mov
ret
outsb
ret
fstps
fcom
stos
cld
mov
fwait
and
xchg
mov
adc
dec
test
or
sets
out
xor
push
ret
inc
cld
inc
cmp
in
hlt
lret
loopne
movsl
mov
mov
adc
out
mov
clc
sub
int3
sahf
sbbl
inc
ds
dec
cwtl
stos
negl
inc
call
icebp
or
test
inc
into
cli
xchg
mov
and
pop
rclb
sub
stos
mov
fcoml
dec
hlt
aam
in
mov
aam
mov
fucomp
fdivp
push
outsb
inc
fmuls
xor
sbb
xchg
xchg
vrsqrtps
testl
xor
mov
icebp
mov
xor
es
xor
inc
ss
jb
cli
pop
icebp
outsl
add
mov
outsb
inc
std
sbb
testl
push
mov
cmp
push
scas
cmp
xor
adc
enter
stc
push
inc
divb
push
jge
sub
or
adc
stos
dec
add
adc
push
out
push
data16
fisttpll
out
mov
jb
xor
inc
inc
mov
mov
ficoml
jo
loope
repnz
repz
outsl
mov
lods
ljmp
add
mov
shll
pop
std
cmc
scas
pop
scas
push
fucomi
cmp
sti
or
mov
movb
stos
adc
mov
stos
xchg
sub
enter
cwtl
les
out
mov
call
xchg
loop
pop
mov
sub
cmp
loopne
int3
aas
push
push
xor
push
popa
imul
pop
test
push
loop
hlt
movl
inc
dec
scas
in
push
pop
movsb
into
std
add
pop
out
jg
push
sub
xor
mov
and
dec
jp
ficoms
adc
insl
pop
stos
movsl
xchg
sub
lock
or
sbb
mov
and
pop
jge
je
sub
lahf
jp
mov
sub
jl
push
test
ss
ret
lret
enter
shlb
inc
in
push
outsl
inc
imul
inc
addr16
sub
jle
insb
dec
xor
pop
jge
push
pop
dec
add
test
int
stos
in
std
out
rcrb
pushf
movsb
ret
jo
test
adcl
call
pop
ret
insl
push
inc
or
add
jbe
xor
mov
outsb
push
add
xor
or
mov
jle
inc
iret
cmpsb
jne
and
mov
negb
jmp
pop
lds
fisttpl
fwait
jb
in
sahf
and
pop
jne
in
ficoml
add
cmp
and
sub
sbb
sub
fnstenv
mov
dec
into
roll
inc
mov
or
xchg
in
jl
daa
mov
jmp
scas
and
leave
inc
push
dec
ljmp
shrl
rcll
xchg
xor
inc
mov
icebp
lahf
jmp
lds
lods
aam
xor
push
push
es
xor
pusha
in
lock
mov
xor
mov
into
sbb
scas
jo,pn
xchg
ret
aad
cmp
cs
dec
ja
aas
loope
and
enter
push
and
xchg
mov
std
into
mull
ss
fdivl
sbb
pop
dec
stos
ss
pop
movsl
roll
mov
jle
lds
ja
test
and
sbb
mov
dec
xchg
iret
inc
faddl
push
add
lea
movsl
mov
out
jecxz
pop
lods
cmc
aad
lea
jge
out
or
or
or
dec
in
sbb
mov
mov
loop
mov
fisttps
test
push
mov
cmpsl
xchg
xor
outsl
hlt
dec
and
adc
push
call
sarb
mov
pop
sbb
int
pop
jge
outsl
out
push
es
sbb
imul
inc
cmp
fcos
popa
cmp
stos
sub
call
jb
ret
mov
sub
data16
cwtl
sub
loop
iret
jmp
pop
jl
leave
adc
and
jge
xchg
jbe
dec
push
adc
jg
or
mov
push
dec
movsb
xchg
bound
xchg
xor
sbbb
xor
dec
shll
and
push
dec
mov
sbbb
popf
or
lsl
jle
xor
lods
je
sbb
sub
dec
dec
or
fstl
mov
pushf
or
adc
outsl
mov
jle
test
inc
pop
and
loope
mov
adc
stos
cmp
shrb
mov
and
pushf
js
lahf
ret
xchg
sbb
jge
loopne
mov
scas
fiaddl
lock
sbb
rol
shufps
repnz
pop
sahf
call
js
imul
in
in
sub
cmc
ret
sub
inc
repz
mov
insb
dec
sub
ret
mov
dec
add
and
es
push
push
xchg
imul
lock
aad
imul
inc
arpl
xlat
xchg
mov
push
push
xor
or
test
xchg
popf
lcall
pop
orb
or
les
ud2
cmp
addl
scas
mov
int3
cs
repz
xchg
ss
or
stc
sbb
xchg
das
les
sbb
pop
loopne
jo
dec
inc
imul
pop
test
push
arpl
int3
testl
mov
or
pop
pusha
inc
clc
in
push
call
xlat
int3
loop
sahf
in
inc
mov
inc
sub
fidivs
xor
mov
mov
add
in
inc
mov
loopne
aad
jmp
shlb
jae
clc
in
mov
ficompl
sbb
ss
xor
ret
cmp
inc
xchg
lock
and
repz
rclb
dec
inc
pop
std
mov
fcmovb
sub
es
push
pusha
lcall
dec
pop
je
push
jecxz
sbb
loopne
xchg
pop
push
push
cmp
loopne
ret
jle
roll
lret
jno
pop
inc
lods
sbb
ja
jo
mov
fs
xchg
inc
xor
xchg
cld
and
sti
adc
pushf
adc
pop
aam
sbb
jl
cmp
dec
hlt
xchg
movsb
sti
pop
lcall
dec
gs
adc
jge
dec
dec
inc
stc
stos
push
test
sub
inc
adc
cmp
and
push
dec
cmpsb
fs
std
xor
fcomps
jle
repz
or
repz
out
in
out
and
mov
inc
sub
push
adc
jo
je
in
aas
inc
pop
ja
outsb
sub
int3
inc
aad
add
stos
sub
rorb
mov
add
xor
dec
test
imul
test
aam
aad
dec
pop
insl
addr16
inc
jbe
rclb
scas
addb
fistl
xchg
cmp
fnstsw
xchg
out
and
mov
out
cmp
rorl
mov
mov
das
and
and
sbb
dec
mov
add
xor
cld
dec
aad
out
je
cwtl
and
mov
mov
adc
test
shll
loope
loop
sarl
inc
pop
pop
sbbl
adc
add
push
addr16
psubusb
pop
dec
dec
mov
xor
add
xchg
mov
push
fdivl
dec
sbb
mov
cwtl
aaa
enter
dec
inc
add
sahf
outsl
inc
dec
mov
vmread
out
lock
mov
decb
cmp
dec
iret
xor
sahf
aad
gs
roll
mulb
add
xchg
xchg
push
pop
or
xchg
or
push
call
aaa
adc
sarb
ljmp
cmc
adc
insb
or
dec
cmp
inc
cwtl
icebp
rsm
push
dec
movsb
sbb
lret
gs
mov
ret
sahf
sub
xchg
aas
jb
loop
adc
jbe
in
je
push
add
cs
inc
fnsave
push
std
in
xchg
icebp
pop
jmp
sahf
sbb
fxam
fs
push
aas
xchg
jp
aas
jmp
std
movsl
stos
jb
fcompl
xchg
bound
or
pushf
add
inc
mov
push
cli
mov
mov
jp
xchg
pop
push
ficomps
jns
xor
add
and
push
mov
cltd
scas
iret
add
cmpsb
mov
int
icebp
popa
ret
scas
sarl
js
push
push
je
rcll
fwait
test
sbb
bound
adc
or
scas
push
jnp
inc
dec
push
xorl
loop
ficoms
or
daa
shlb
pop
cmp
adc
mov
leave
hlt
pop
push
adc
js
cwtl
xlat
adc
sub
adc
hlt
jmp
sbb
in
inc
data16
pop
popa
jle
fimuls
mov
push
fs
or
xchg
out
mov
mov
lret
imul
jecxz
or
xlat
and
cmp
ja
dec
xchg
incb
test
movsl
mov
xchg
adc
lds
pop
loope
pop
fisttpll
and
xor
and
cmpsb
test
pop
fxch
push
call
add
arpl
outsb
repz
das
aam
imul
loopne
fwait
sub
rorb
pop
or
jl
push
in
rcrb
adc
icebp
pop
push
inc
push
cmpsl
xchg
pop
fmul
cli
jmp
outsl
xor
ja
dec
decb
cli
adc
mov
inc
rorl
pop
mov
pusha
ffree
out
add
mov
faddl
pop
mov
xchg
adc
add
jno
xchg
mov
fs
jbe
aas
add
sub
inc
xchg
dec
mov
fsts
jo
cmc
pushf
fs
into
pop
inc
push
sub
pop
movsb
cli
test
clc
xor
rcl
pop
repnz
cmp
mov
sbb
jbe
xchg
bound
cmp
repz
into
sbb
inc
pushl
ss
inc
stos
mov
icebp
xchg
sbb
push
inc
ret
les
push
popa
mov
dec
pop
insb
mov
xchg
nop
sbb
mov
add
push
pop
decb
imul
outsl
dec
fisubrl
adc
jo
repnz
fimull
bts
aad
jbe
mov
add
add
inc
subb
inc
fbstp
mov
lret
mov
xchg
lods
aaa
mov
xor
jecxz
cmc
or
inc
xchg
cmpsb
mov
rcl
mov
cmp
xor
xchg
mov
add
mov
add
out
pop
push
inc
icebp
add
jmp
sar
loope
and
jno
in
mov
pop
mov
stos
xchg
or
sbb
iret
inc
jge
enter
lods
aas
dec
mov
in
sbbb
rep
fwait
loope
cld
dec
and
xchg
aam
or
insb
or
cmpsl
or
pop
call
or
jge
sbb
and
lret
xchg
ss
or
pop
push
test
push
repnz
dec
js
sbb
sub
imul
cmp
das
in
sbb
ja
adc
cwtl
adc
cmp
and
jae
clc
inc
sysenter
nop
aaa
jle
iret
lea
daa
or
das
add
rcll
add
mov
jns
loop
sub
ret
dec
sub
popa
jno
cs
gs
push
xchg
in
mov
jg
sub
cld
dec
sub
dec
mov
addb
jge
xchg
dec
fnstsw
in
jno
sub
aad
push
in
push
fdecstp
outsl
imul
xchg
push
mov
dec
pop
xor
mov
in
dec
cltd
adc
push
xchg
jne
inc
push
add
or
adc
cmpsb
std
mov
pop
cmpsb
and
pop
and
inc
cmp
dec
or
cmp
sbbb
pusha
sub
mov
dec
adc
lock
scas
pop
fmull
loope
testl
pop
rorl
je
jl
ja
lahf
test
mov
imul
lahf
mov
jecxz
insl
and
push
sub
jne
lcall
sarl
mov
dec
rcll
popf
sub
xlat
sub
xchg
jl
mov
gs
sti
cld
xor
mov
dec
mull
dec
divl
jge
add
jle
rcll
lret
sub
aaa
fs
out
add
jle
fucomp
fisubrs
cld
aaa
xor
sub
mov
or
aaa
pop
ja
add
xor
in
dec
or
dec
mulb
push
fcomp
or
out
fdivrs
pop
ja
jmp
ficoml
outsl
xchg
test
lcall
out
mov
xchg
jle
or
dec
bound
int3
test
insl
push
push
pop
dec
pop
mov
mov
jbe
adc
out
or
lock
or
or
cltd
xchg
iret
loop
and
xlat
mov
sub
xor
stos
push
mov
pop
insl
adc
test
bsr
or
mov
mov
pop
mov
xchg
jb
stos
mov
stos
xchg
in
es
adc
mov
dec
loop
mov
jle
icebp
dec
adc
ret
jno
mov
pop
shl
lret
push
add
xorl
xorb
scas
cmp
push
mov
icebp
pop
lret
dec
es
mov
ds
jmp
adc
cmp
das
mov
jmp
sbb
mov
insb
add
push
je
mov
test
xor
inc
mov
jno
mov
cmpsl
push
jp
fdivs
mov
daa
sti
loope
push
negl
ljmp
rcrb
jecxz
lods
ja
xor
and
movsb
mov
cltd
loopne
mov
test
cmp
sbb
adc
xchg
pushf
pop
sub
cld
jge
ret
int
or
aad
push
ret
xchg
fists
fstpl
ja
push
mov
aaa
enter
lds
fidivs
mov
imul
jo
leave
xor
stos
xor
push
lret
push
das
pop
call
adc
cmp
ss
icebp
sub
mov
mov
insl
cmp
outsl
push
mov
inc
push
fwait
add
cmp
fsubs
aam
int3
push
les
nop
daa
leave
add
xchg
pop
xchg
cmpsb
pop
das
cld
imul
pusha
jl
adc
fiadds
pop
adc
mov
mov
xor
jo
scas
aaa
mov
subb
push
xchg
int3
pop
xchg
mov
leave
xchg
fbstp
ret
mov
pop
sbb
addl
in
mov
jecxz
add
lock
aas
ss
xchg
xor
cltd
mov
cmpsb
inc
cltd
xor
cmc
pop
jb
mov
inc
lock
jbe
icebp
mov
rcrb
jmp
loopne
and
cmpsb
mov
mov
push
jl
inc
sub
mov
clc
adc
adc
or
fiaddl
insl
jbe
or
adc
into
push
jnp
add
push
or
cs
jbe
jae
aam
ljmp
sbb
outsl
fucom
inc
fcompl
or
pop
arpl
cmp
insl
adc
adc
fstp
outsl
in
push
lods
cld
push
addr16
fidivrl
out
std
push
popa
popa
fs
shrl
pop
xor
imul
mov
push
fcomp
repnz
cmpsl
xchg
gs
aas
pop
loope
push
incl
sub
sub
icebp
cmpsb
jne
repnz
xchg
jp
aaa
mov
mov
cmp
add
dec
pop
es
mov
call
popf
int
pushf
ds
jl
mov
mov
ret
shll
xchg
pop
cld
cmp
cltd
cli
dec
test
daa
aas
movb
int
mov
outsb
lds
cmpsb
imul
xor
cmpsb
mov
aaa
jg
jecxz
call
daa
icebp
leave
scas
mov
or
pop
sbb
sbb
xor
jae
insl
mov
xor
and
jbe
mov
add
cmpsl
add
fidivl
imul
fdivrl
sub
clc
mul
lret
jg
roll
movsl
imul
xchg
cld
inc
jo
stos
and
mov
mov
rol
mov
inc
sbb
sti
xor
fcomi
test
pop
aas
mov
jmp
inc
out
enter
daa
fsubrs
cs
test
out
icebp
cmp
xchg
fstpl
pop
inc
mov
dec
loope
or
xlat
sbb
rorl
xor
andl
cmp
sbb
lods
xor
cmc
je
fs
jnp
mov
xor
lcall
aas
fisubl
adc
xor
add
mov
repz
imul
push
std
aaa
jo
jmp
pop
mov
jns
jecxz
mov
loopne
sub
jne
adc
sarl
scas
dec
add
fwait
xchg
jle
mov
in
mov
xchg
adc
loopne
sub
pop
add
iret
inc
jmp
push
push
push
test
pop
pop
pop
mov
mov
pop
insb
call
add
mov
sbb
ja
test
insb
lcall
xor
push
mov
cli
or
js
adc
sbb
add
sbb
pop
fistl
mov
shlb
xor
xor
mov
xchg
pusha
test
cmp
les
xchg
loopne
and
or
sub
pop
popf
jno
out
push
mov
test
dec
subb
stos
sub
xchg
clc
mov
dec
push
jns
cmp
adcl
jl
jb
and
jae
orb
fstpl
js
cwtl
imul
inc
arpl
adc
pop
int
test
enter
xchg
mov
ds
sarb
or
xchg
test
or
out
adc
out
fnstcw
stc
add
test
mov
mov
pop
xchg
xchg
into
ret
aam
testl
xchg
or
in
xor
jnp
xor
or
mov
mov
fsub
in
in
mov
mov
push
mov
cmpsl
xchg
xor
test
aad
push
outsl
xchg
ja
sahf
add
aam
sbb
cmp
xor
int
dec
mov
jno
lret
repz
es
and
insl
sub
push
mov
jb
sub
and
out
popa
push
icebp
and
and
push
push
pop
imul
loope
inc
cmpsb
fsin
sub
adc
adc
lods
cld
sbb
pusha
je
addl
cmpsl
cwtl
lea
movsl
xor
stc
movsl
ret
fxch
and
sbb
cmp
push
aas
in
add
sub
ja
push
mov
outsl
test
push
inc
jmp
in
cmp
and
dec
and
addr16
rep
mov
add
sbb
jl
repnz
ds
ret
aaa
dec
cmc
ret
jle
sub
out
cmp
cmp
inc
xchg
push
insb
xor
mov
cmp
imul
jo
mov
xchg
ret
test
loope
rcrb
inc
jbe
push
mov
jp
xor
xor
jns
pop
cmp
lock
test
jne
pop
cmp
cwtl
mov
xchg
mov
xor
add
xor
or
mov
repnz
adc
out
sti
repnz
jp
add
inc
arpl
in
fimuls
cld
mov
or
xor
cmpsb
repnz
sub
pop
outsb
and
jmp
popa
mov
dec
movsb
jmp
fwait
cmp
mov
pop
dec
mov
fwait
add
xchg
dec
mov
das
cmp
data16
mov
mov
sbb
ljmp
xor
push
and
mov
ficomps
cltd
and
jp
jp
fistpll
xchg
int
or
mov
xor
shl
enter
cltd
inc
call
or
jge
sahf
stos
stos
and
cltd
mov
lods
popf
pop
or
jae
js
test
repnz
daa
test
xchg
insl
cmp
inc
add
mov
cmpsl
cmp
and
ret
sub
popa
mov
sti
fwait
inc
sub
sub
jnp
test
repz
push
jmp
adc
inc
add
adc
sahf
test
push
clc
fsub
lcall
xchg
cltd
out
movsb
aaa
incl
in
cli
dec
or
push
push
xor
xchg
arpl
stos
add
repz
xchg
push
pop
aas
jbe
test
push
adcl
push
lock
cwtl
in
and
add
aam
and
xor
ds
cmp
sbb
aaa
lods
push
rol
adc
push
add
gs
rcrb
orl
cltd
lahf
rcrl
and
mov
popa
push
xchg
sbb
sahf
xor
out
xlat
loop
jbe
pushf
sbb
int3
cld
inc
outsb
cmp
sub
rolb
enter
neg
cltd
xor
lds
out
xor
and
jmp
mov
repz
rorb
mov
imul
das
adc
fistpl
fcmovne
mov
jp
ret
mov
push
sbb
es
fldl
inc
lods
movsl
jb
pop
sub
and
es
adc
sbb
icebp
lods
inc
xorl
lret
addl
aaa
add
mov
adc
test
js
add
arpl
cmpsl
jae
jbe
xor
cmp
dec
lcall
test
push
push
mov
test
movsb
inc
pop
inc
fidivrs
ja
stc
cli
bound
movsl
iret
push
loopne
mov
stos
outsl
addl
xchg
cltd
enter
push
inc
jge
push
mov
mov
test
js
into
adc
cmp
fadds
mov
lret
mov
jle
into
fcom
lret
mov
mov
inc
stos
sub
inc
in
aam
data16
mov
inc
pop
dec
shlb
dec
push
and
je
dec
pop
daa
inc
cmpsb
cmpb
ljmp
xor
pop
adc
pop
not
jp
mov
pop
mov
xchg
rolb
in
test
and
lock
push
xchg
fstpt
in
fstp
jno
adc
push
sub
pop
cmc
orl
push
add
xor
or
and
sar
pop
sub
sub
iret
and
sub
movsl
hlt
dec
test
or
outsl
fisttpl
fdivr
std
in
sub
mov
or
cmp
filds
movl
pop
lahf
outsb
and
shll
jo
jle
mov
mov
adc
sub
cmpsb
call
or
push
mov
cli
cli
pop
movsl
int
or
dec
pop
in
sbb
add
out
or
mov
mov
or
push
mov
mov
cmp
pusha
jle
cltd
lds
push
adc
arpl
xchg
dec
and
xor
call
insb
imul
outsb
xor
xchg
aad
xor
push
jns
jo
mov
xchg
jno
dec
xchg
sbb
inc
cld
dec
pop
jns
sahf
push
sub
cs
aam
out
ret
pop
lds
ljmp
les
adc
adc
cmp
enter
push
mov
call
mov
pop
xchg
js
daa
pop
lea
xchg
and
xor
shrl
cli
mov
pop
cltd
aaa
test
divb
cmp
jnp
bound
adc
dec
cmp
test
aam
inc
add
fwait
popf
inc
fwait
sarw
dec
leave
rcll
hlt
cltd
outsb
loopne
cmpsl
hlt
enter
xchg
xchg
out
jns
insb
xor
dec
icebp
mov
or
bound
fdivs
aas
jge
in
fisubrs
mov
mov
fstl
xor
mov
arpl
dec
popf
xor
mov
push
out
int
sar
fdivs
movsb
jge
mov
sub
inc
push
insl
add
mov
dec
iret
sbb
adc
xchg
or
and
insb
add
xchg
adc
or
mov
loop
inc
mov
iret
rclb
popa
lcall
pop
iret
sbb
movsl
cmp
sub
jno
gs
mov
cmp
mov
adc
stos
xchg
add
jne
xor
leave
outsb
mov
lahf
xor
loopne
cmp
imul
sbb
inc
xchg
xor
shrb
pop
loope
mov
jecxz
jnp
call
pop
rorb
cwtl
jae
dec
inc
mov
data16
scas
cld
cli
inc
add
cmp
roll
mov
outsb
cmp
fs
iret
cli
xchg
xchg
push
test
mov
xlat
insb
mov
shr
test
push
mov
bound
xlat
mov
sbbb
push
or
or
inc
rol
pushf
aam
push
jmp
jbe
jbe
mov
cltd
rcl
sbb
mov
xchg
fisubs
mov
inc
sub
mov
push
lock
push
sbb
icebp
movsb
flds
pop
cmp
and
xor
out
fldt
add
arpl
fcompl
ror
lret
mov
rorb
cmp
mov
dec
loope
lods
mov
and
sbb
jmp
and
pop
jp
outsl
or
test
and
in
call
sbb
fimuls
sbb
leave
sbb
addr16
jbe
aas
in
repnz
int3
pop
or
or
ret
push
sete
jg
nop
jns
cmp
les
or
push
mov
jg
pushf
pop
das
push
jmp
adc
cmp
inc
sub
stc
mov
sahf
and
mov
mov
fnstenv
mov
inc
outsl
out
jno
jne
test
in
in
jecxz
jle
mov
out
sbb
adc
js
fwait
divb
jg
push
mov
pop
in
or
leave
sub
popa
xor
outsb
imulb
and
flds
cwtl
mov
sbb
lock
jecxz
mov
sahf
rclb
xor
adc
adc
or
fsts
mov
test
add
mov
dec
ret
rorb
push
adc
mov
or
movsb
or
clc
push
or
stos
jle
loope
std
mov
mov
jg
mov
pop
and
test
lods
adc
and
inc
add
push
ret
mov
mov
rcll
movsl
adc
xor
out
ss
push
dec
xchg
xlat
jg
fst
dec
mov
daa
mov
inc
push
mov
test
mov
xchg
inc
popf
inc
movsb
repnz
cmp
sti
pop
jge
jae
cli
dec
stos
push
pop
pop
adc
in
mov
in
imulb
xorl
in
cmp
adc
ds
lcall
aam
mov
mov
cmovnp
fldpi
dec
ljmp
cwtl
cs
in
mov
leave
repnz
nop
iret
mov
into
shll
std
dec
sub
jb
test
xor
cmc
cld
lret
xor
cmp
sbb
les
das
les
add
adc
lahf
mov
test
xchg
hlt
cmpsl
dec
in
mov
mov
cmp
orb
mov
and
xchg
sbb
add
cld
add
rcrb
dec
dec
or
mov
or
cmp
xchg
imul
mov
and
push
cmpsl
dec
outsb
scas
popf
jne
push
push
rcll
inc
mov
jne
add
pusha
call
adc
shrl
dec
push
rcrb
arpl
jnp
enter
shll
or
inc
lret
addr16
push
add
mov
repnz
sub
insb
pusha
inc
cli
out
xchg
addr16
lds
xor
jbe
into
mov
adc
xor
jg
pop
ss
push
cmp
cs
or
jp
add
inc
jmp
ds
inc
cli
repnz
push
fs
xor
je
jg
push
sbb
push
xor
and
lods
aam
add
sub
push
pop
loope
jge
cmpsl
cmp
std
adc
sbb
pop
xor
fsub
xchg
test
cmpsb
mov
push
sahf
add
cmpsl
sahf
sbb
push
gs
in
lret
cmpsl
cld
sti
lret
dec
aam
jb
sub
sbb
adc
negb
daa
xchg
pop
scas
jp
mov
push
cld
pop
xor
jne
adc
addl
mov
push
out
sub
mov
jmp
xor
popa
jo,pn
inc
mov
repnz
mov
sarl
mov
cmpsl
add
fs
ss
jo
dec
in
inc
call
jno
xor
mov
dec
out
and
xchg
cld
das
aas
orb
pop
jne
fs
jecxz
mov
mov
pop
test
into
std
jle
subb
hlt
jg
in
leave
in
sbb
mov
and
lods
xlat
cmp
add
mov
push
ja
xor
repnz
sub
mov
idivb
mov
or
sbb
dec
cmp
jb
ss
ds
dec
mov
dec
enter
sub
daa
mov
stos
std
cmp
aad
into
xor
jb
rclb
push
lret
sub
int
jp
pop
pcmpeqd
mov
mov
xor
or
hlt
shll
xor
lods
popa
xor
inc
outsb
pop
movsb
or
xchg
repnz
xchg
decl
inc
dec
sahf
xlat
in
aad
inc
inc
sbb
sub
pusha
add
jae
adc
fsubrl
cmp
dec
dec
fstpt
push
mov
jecxz
fimull
outsb
add
enter
add
shrb
insb
pop
mov
dec
push
rcll
stc
insb
enter
pop
outsb
mov
aam
jno
gs
mov
lcall
stos
js
jge
jmp
pop
jne
ds
lahf
loope
jns
sbb
jnp
orb
cvtps2pi
in
fdivs
outsb
or
cmp
mov
dec
nop
sub
push
mov
fistpll
add
and
cmp
test
ja
push
push
enter
sbb
pop
dec
sub
cmpsl
shr
dec
push
insb
adc
jne
fwait
cli
hlt
xor
and
push
std
mov
pop
xor
ret
pop
and
int
js
inc
fs
pushf
push
sub
fdivrl
mov
dec
jg
aad
dec
adc
das
daa
fisttpl
loope
lahf
icebp
mov
out
push
movsb
cmp
mov
aaa
std
pop
jecxz
mov
cmpsl
cmp
mov
daa
test
ret
out
jg
or
adc
xor
dec
outsl
inc
mov
fwait
xor
inc
inc
cwtl
xchg
outsb
mov
scas
xor
add
sbb
mov
int
rclb
jo
mov
cmp
ret
pop
rolb
and
stos
xchg
adcb
mov
addr16
insl
dec
jbe
mov
dec
ljmp
test
iret
xor
jle
mov
mov
and
and
lods
mov
jp
insl
test
pop
aas
clc
clc
inc
mov
push
xchg
nop
pusha
xchg
sub
stc
or
push
cmp
out
or
dec
aad
inc
xor
mov
mov
hlt
push
dec
mov
push
call
ja
xchg
ljmp
lahf
sub
fdivrs
test
fisttps
cmp
ror
inc
sbb
lock
das
in
dec
sbb
jg
lret
in
nop
sub
xchg
mov
push
push
cltd
clc
int3
frstor
xor
jo
lret
filds
sub
ret
sbbb
pusha
add
rcrb
out
sub
xor
or
sahf
movsb
loopne
js
inc
cmp
movsb
mov
inc
mov
rcrl
xor
sbb
or
das
lock
cmc
or
setb
cs
jns
stos
mov
pop
inc
mov
or
inc
sub
xor
mov
ret
out
jp
xchg
inc
es
dec
insb
inc
mov
mov
mov
cwtl
lsl
aam
lret
mov
ljmp
fnstcw
mov
cmp
mov
mov
pop
adc
fimull
and
xor
sub
data16
cmpb
test
imul
sahf
les
mov
and
sbb
cmp
jno
push
mov
scas
jg
push
mov
xchg
stos
call
out
add
cwtl
addr16
adc
dec
shlb
iret
idivl
cld
add
jae
cwtl
mov
mov
mov
cmpsb
add
jmp
decl
pop
mov
lret
push
popw
rolb
cmp
sub
fcomps
leave
mov
pop
fisttps
jg
add
and
and
test
inc
ret
jb
mov
pop
arpl
dec
add
jno
sub
jge
jecxz
fs
mov
movsl
push
pop
mov
push
scas
mov
mov
push
cld
xchg
sub
ja
ljmp
xchg
sub
out
dec
jns
jnp
test
out
fldl
shll
mov
enter
push
testb
xchg
sub
or
lods
sub
pop
rol
js
std
lcall
inc
cmp
xor
xchg
pop
jmp
orl
adc
outsl
nop
pushf
xchg
iret
sbb
das
lret
xchg
and
leave
fucomp
mov
cmp
sbb
lods
sbb
stos
lret
popa
mov
addb
stos
jns
insb
movsl
test
std
push
shrb
aas
and
imul
pushf
fisttps
or
test
adc
jg
mov
movsb
imul
sub
sub
out
cs
mov
cmc
sbb
jmp
repz
add
stos
jle
push
dec
stc
mov
mov
movd
fldt
jle
xchg
lods
ss
jae
jmp
jb
push
pop
cmp
aaa
insl
inc
xorb
lods
cwtl
outsl
mov
jge
mov
lcall
and
dec
mov
xor
cmp
jnp
fiadds
fisttpll
je
dec
mov
mov
or
sbb
repz
xchg
add
mov
jmp
dec
mov
aad
add
jp
imul
mov
pop
int3
sti
out
inc
jbe
ss
cmp
outsb
cmp
daa
adc
aam
push
xor
xor
fdivs
inc
mov
sbb
xorb
sub
cmp
dec
add
dec
inc
adc
jecxz
sub
sub
pusha
aaa
jne
adc
lret
es
mov
sbb
sti
sbb
add
xchg
pop
inc
insb
push
mov
xlat
xor
int
mov
mov
test
xor
ljmp
inc
jmp
mov
xchg
ljmp
rcr
ja
mov
insl
sbb
and
aad
ja
fstp
lods
ret
pop
cld
jne
imul
int3
jecxz
lcall
scas
pop
pop
sub
repz
lea
in
shrl
stc
into
xchg
cli
aad
sbb
push
imulb
roll
imul
fidivrl
xor
leave
aad
pop
in
pop
pusha
orl
fistpl
jmp
aad
aad
lods
cltd
jno
stos
insl
dec
lods
js
loop
scas
mov
inc
xlat
enter
push
pop
jecxz
xor
out
sbb
out
rcll
xchg
fmull
jnp
inc
cmp
cmp
repnz
and
cmpsl
jne
ret
lods
or
jb
inc
cmc
add
adc
lret
sti
dec
mov
sbb
cli
popa
mov
insb
jnp
dec
sbb
insl
dec
dec
sub
mov
arpl
loopne
in
mov
test
xlat
lea
mov
pop
rolb
fnstsw
pop
cs
mov
sbb
stos
hlt
dec
lods
gs
popf
mov
daa
sub
adc
mov
test
dec
jge
pusha
adc
sub
ss
add
mov
ret
aaa
pop
adc
in
xor
daa
enter
aad
mov
popa
cmpsl
rcrl
jecxz
in
xor
jne
pop
fisubl
jno
fcmovne
in
xchg
ror
and
add
xlat
inc
int3
pop
ss
jbe
add
addr16
or
rcr
pop
dec
push
mov
out
sub
pop
subb
daa
loope
daa
cli
jge
sahf
or
and
mov
fadds
jae
fbstp
shll
js
inc
xchg
subl
popa
das
xor
mov
mov
in
jo
cwtl
rcl
xchg
xchg
add
dec
jle
shlb
les
inc
pop
mov
mov
mov
imul
inc
in
je
pop
mov
popf
xchg
sahf
jl
dec
push
mov
jbe
pop
or
mov
pop
jns
loopne
or
mov
jl
scas
test
mov
mov
rorb
push
testb
hlt
mul
fisttpl
push
in
jecxz
fs
sub
cli
xor
push
or
mov
aas
cli
roll
test
dec
and
sub
add
adc
adc
gs
sub
es
xchg
fsubrl
mov
push
mov
cmp
jo
jae
movsl
inc
add
lock
mov
inc
and
insl
popa
ret
fwait
aaa
add
push
shlb
outsl
outsl
add
cltd
pop
mov
xor
shrb
loope
call
jnp
lcall
sub
and
cmpsb
xor
xchg
sarl
or
in
xchg
pop
adc
hlt
lcall
xchg
sbb
testl
sbb
xchg
xchg
pop
fnstenv
popl
std
test
arpl
mov
cmp
rorb
jns
ss
addr16
pop
jo
sarb
cld
popf
lret
mov
clc
fildl
inc
or
and
test
outsl
and
stc
mov
stos
add
adc
lds
push
stc
inc
sbb
jae
sub
inc
push
mov
hlt
lahf
and
movsb
mov
dec
mov
inc
add
or
and
loope
xchg
push
cmpsl
mov
sbb
push
push
xchg
add
orl
inc
loope
in
pusha
bnd
xor
mov
sbbl
filds
sbb
xchg
or
fcoml
add
movl
or
push
cmp
dec
loop
sbb
rclb
ljmp
in
sbb
in
xor
pusha
into
pop
aad
sahf
lock
ljmp
jge
leave
arpl
je
jno
sub
out
fwait
loope
xlat
mov
pop
rcrb
xchg
mov
add
cmp
std
daa
jns
dec
mov
pusha
xor
loop
jmp
xchg
adc
mov
inc
cld
xor
push
subb
xchg
addr16
cmp
add
stos
xor
in
das
out
xchg
mul
mov
and
pusha
jecxz
cld
xlat
xor
sarl
xor
push
mov
in
addb
push
inc
hlt
aad
push
int3
fistpl
mov
sub
aad
fsubrs
and
push
leave
jns
neg
add
js
fs
rcl
out
and
testb
pop
adc
aam
inc
ss
imul
cltd
jno
cmp
dec
push
xchg
pop
xchg
aaa
or
dec
add
das
rorb
aam
xchg
stos
xchg
mov
int3
and
out
mov
movsl
mov
stc
ja
jecxz
addr16
jle
dec
into
dec
xor
cwtl
dec
sub
pop
roll
fiaddl
mov
bound
aas
pop
add
lret
popa
xor
ds
push
adc
movd
das
or
cwtl
loope
dec
or
xrelease
and
cmp
rcrl
mov
mov
test
lock
int
fsts
pop
stos
sub
jo
fdivs
mull
cmpl
shrl
xor
adc
std
pop
lret
addr16
fprem1
and
cmp
push
adc
pop
cltd
dec
test
push
xchg
loopne
in
fimull
out
data16
fdivrl
add
and
xor
dec
mov
pop
cmp
jno
ret
mov
and
sub
stos
decb
daa
neg
pop
ret
push
lock
sub
aam
add
fldcw
das
adc
cwtl
sti
call
aaa
popf
leave
scas
inc
icebp
test
popf
jns
inc
divl
xor
stos
inc
mov
push
ja
lock
dec
lret
pop
push
sahf
gs
data16
mov
sbb
andb
xchg
cmp
out
outsb
mov
lds
fisttps
rclb
ficoms
jl
scas
pop
mov
adc
leave
add
mov
movsl
cmpsb
jmp
inc
xchg
push
push
clc
adc
push
inc
push
pop
out
das
hlt
inc
in
ror
dec
mov
outsl
ss
sub
or
and
inc
or
lock
mov
push
pop
arpl
lods
add
add
xchg
aas
inc
inc
pop
icebp
mov
cwtl
mov
jecxz
out
test
adc
outsb
ljmp
mov
aaa
sub
jo
lods
test
push
dec
es
mov
pop
mov
sbbb
mov
gs
sbb
dec
pushf
pop
dec
push
repz
or
adc
leave
push
cmp
inc
fs
sbb
out
jg
pop
mov
mov
shrl
and
jne
jecxz
jp
mov
decb
lds
xlat
in
dec
repnz
pop
sbb
ffree
or
sub
mov
sahf
xlat
int3
add
sub
stos
bound
cmp
inc
enter
jb
test
js
adcb
mov
movsb
push
xsaves
pushf
cltd
call
sub
xchg
shlb
cmpsl
dec
ret
sarl
inc
jmp
fstl
cmpsb
addr16
xor
testb
int3
sbb
mov
or
mov
adc
adc
loopne
popl
cmp
jecxz
xor
sub
aam
bound
cmp
leave
loope
hlt
sub
dec
pop
or
into
and
jmp
mov
or
data16
stos
mov
in
and
aam
rclb
aam
ja
or
cmp
scas
in
inc
mov
jbe
pop
mov
jbe
call
pop
cld
jne
lds
icebp
fwait
dec
adc
pop
sub
arpl
jmp
roll
and
sti
pop
and
sbb
jg
jno
pop
mov
sub
add
lret
test
and
dec
cli
das
aaa
roll
orl
cmp
cmpsl
inc
sbb
and
call
addb
jo
stc
xor
hlt
jno
add
xchg
mov
iret
cmp
test
inc
xor
pop
cmpsb
cvtdq2ps
adc
mov
or
and
mov
cltd
mov
xchg
xchg
scas
es
adc
push
pop
fnstsw
test
cmpsb
ljmp
jmp
mov
dec
mov
pusha
fsubrs
pop
sbb
aaa
mov
or
cmp
and
or
outsb
movsb
jecxz
dec
xlat
dec
or
sub
jno
adc
adc
add
jl
sbb
sbb
xor
jne
mov
hlt
pop
sub
xorb
and
ss
inc
pop
xor
fldt
push
sbb
aas
repz
xor
mov
adc
ficompl
int3
js
test
mov
xor
push
sarl
pop
mov
pop
adc
add
bound
daa
pop
xor
push
lea
mov
add
mov
push
test
outsb
pop
jne
repz
xchg
jle
pop
cs
xchg
sbb
out
je
movsb
lods
pop
icebp
sbb
mov
sub
add
inc
mov
pusha
in
fwait
or
hlt
mov
insl
jnp
push
mov
lcall
aad
lods
jae
cmp
mov
jns
jno
idivb
loopne
popf
sti
add
jns
das
mov
and
adc
pop
xchg
call
pop
inc
mov
lock
lods
jbe
sbbb
mov
rcll
ljmp
jne
aas
push
jo
daa
insb
js
inc
dec
dec
jp
arpl
in
fcom
movsl
imul
pop
pop
hlt
loopne
sbb
adc
mov
es
loopne
jae
or
xorb
repnz
lret
and
test
mov
xor
pop
pop
stos
mov
cli
in
sub
cmpsb
loopne
push
je
and
xchg
mov
movsl
ljmp
mov
in
mov
mov
aad
cmp
adc
push
iret
add
rolb
nop
mov
popf
stc
sbb
imul
ljmp
test
ret
shll
roll
ja
jns
je
out
mov
cld
icebp
jnp
and
mov
pop
nop
xchg
mov
in
xlat
stos
stos
adcl
lea
aad
jns
sbb
xlat
cli
out
adc
jmp
adc
pop
mov
mov
out
ret
jmp
loope
pushf
mov
cwtl
push
sbb
dec
aaa
stos
sti
cmp
lret
and
cmc
pushf
add
ljmp
fisttps
mov
sub
mov
jae
cmp
xor
mov
mov
cmpl
scas
mov
dec
and
or
insl
pop
lods
inc
popf
shll
mov
testl
push
pop
ljmp
gs
cmp
mov
jb
into
call
adc
clc
gs
pop
out
popa
inc
xchg
inc
push
mov
pop
pop
xor
or
sbb
jns
or
dec
sbb
repnz
mov
mov
add
fs
pop
imul
mov
cmp
nop
pop
jb
sub
push
out
std
push
cmpl
mov
sub
add
jno
fmull
push
nop
pop
push
push
pop
xchg
aaa
jg
sbb
inc
rolb
in
adc
rcrb
pop
push
xchg
fistpl
sbb
adc
lods
jbe
popa
xchg
ret
or
mov
jo
and
scas
sub
xlat
fstpt
rcrl
cmp
jae
fwait
xchg
sbb
xchg
sub
jmp
or
xor
push
xchg
push
mov
imul
cmp
xor
es
jb
sbb
popa
cmp
je
call
xlat
xchg
pop
jecxz
mov
inc
jae
fs
std
sub
add
les
push
mov
notl
loope
jle
je
mov
hlt
pop
sbb
adc
ljmp
mov
push
mov
mov
roll
cwtl
mov
aas
adc
xchg
daa
push
dec
cmp
rorb
shrb
movsb
sub
int
imul
mov
jmp
sahf
inc
mov
insb
mov
mov
cli
fsubr
add
mov
adc
dec
sbb
add
out
inc
xchg
dec
xor
adc
dec
testl
pop
xor
sub
lcall
mov
inc
jecxz
lahf
mov
sti
insl
dec
cs
jne
test
inc
xor
repz
sub
push
xchg
jne
mov
rcrl
push
es
mov
loopne
in
sti
aas
pushf
clc
pop
repz
fs
lock
mov
jbe
push
lods
adc
or
lahf
pushf
lret
pushf
or
xorl
scas
adc
xchg
jmp
sub
pop
lret
hlt
push
cli
pop
push
test
sbb
xor
jg
loop
push
jnp
cmp
inc
scas
outsl
stc
xor
push
pop
jo
inc
xchg
mov
lods
add
cmp
shrb
push
cltd
push
xchg
cmpsl
xor
cmpl
pop
add
push
rcll
push
mov
fildll
icebp
icebp
pop
cmc
push
movsl
and
lods
fwait
stos
outsl
mov
je
movsb
test
cli
pop
adc
xor
ja
xor
jge
mov
insb
jae
mov
cmp
push
iret
ret
adc
cmc
lods
pop
pop
add
sub
pop
mov
cmp
insl
dec
inc
pop
cmpsl
inc
or
arpl
mov
daa
push
insl
ffreep
cmp
cli
and
pop
cmp
mov
add
xchg
sbb
faddl
jae
jb
loop
inc
sub
cmc
js
out
mov
subb
out
scas
inc
xorb
xlat
cmpps
enter
rorl
outsb
jnp
jns
jo
sub
pop
sbb
inc
lret
mov
and
inc
ficomps
mov
mov
lcall
mov
mov
mov
popf
xor
inc
mov
cmp
xchg
sub
xchg
test
cltd
andb
cmpsb
insl
rcr
jle
fisttpl
jecxz
cmp
enter
call
scas
les
or
dec
jg
cs
mov
sahf
pop
dec
push
or
jmp
or
scas
xchg
xchg
sub
cmpsb
arpl
stos
xor
adc
dec
adc
sbb
out
add
xchg
fs
das
xchg
sbb
push
push
aad
jne
enter
push
pop
or
jb
aas
lock
push
xchg
sub
cwtl
xchg
sub
mov
push
adc
pushf
mov
push
cmc
xchg
pop
or
xchg
mov
sbb
decl
jl
call
fistl
adc
sbb
lret
sbb
inc
xchg
push
div
bound
loop
or
cli
mov
and
cmpsb
add
add
push
mov
insl
and
and
or
scas
push
or
fimull
add
jb
aaa
ret
or
cmpb
jo
inc
xor
insb
into
or
into
scas
insb
inc
xchg
je
nop
cmpsb
cmpsl
lahf
jle
jle
fldcw
leave
and
adc
shlb
sti
xor
imul
xchg
mov
cltd
dec
fdivp
xchg
cmp
pop
ds
repz
pop
sbb
mov
xchg
loope
jno
jmp
jmp
push
mov
lcall
fs
sahf
push
push
add
jp
in
jne
in
dec
cmp
loope
mov
cli
xchg
mov
popf
and
jle
adc
xorl
clc
add
and
and
jmp
sbb
push
lahf
push
or
mov
jae
lcall
rol
pop
aam
pusha
repnz
push
xchg
sub
das
and
xor
es
pop
fcompl
imul
or
leave
xor
push
dec
aad
data16
mov
or
adc
xlat
jp
push
rcrb
ds
jecxz
mov
insl
pop
sub
jmp
mov
mov
fldcw
int
sbb
shl
dec
inc
out
stos
imul
mov
call
mov
adc
loopne
aad
push
lret
fs
add
mov
rcrb
xchg
popa
gs
push
jns
mov
out
push
push
mov
xor
mov
lret
call
and
outsl
xchg
xor
imul
cmp
lahf
std
mov
int3
sub
fdivl
push
lcall
repz
mov
rorb
mov
push
adc
mov
mov
mov
pop
bound
fwait
decl
dec
cmp
and
push
xor
pop
push
sahf
fnstsw
outsb
xor
dec
sti
dec
andl
mov
out
enter
sahf
jnp
push
dec
cld
aaa
sub
shll
push
cmp
sub
adc
and
adcb
dec
ds
cmp
xor
xchg
pusha
jl
cld
fsubrl
testb
inc
std
lea
fcoml
fnstcw
test
dec
jo
xchg
out
jne
inc
add
inc
stc
inc
inc
out
std
icebp
add
sub
mov
fnstcw
push
imul
pop
adc
sub
cs
push
out
push
pusha
cwtl
testb
std
jmp
scas
andl
mov
fidivl
sub
data16
stos
add
fcmovnbe
test
adc
addr16
cmc
mov
cwtl
sbb
dec
shrb
fldl
xor
jnp
cmpsb
xor
and
pop
movl
repnz
push
loop
add
jne
push
stos
inc
pop
test
sbb
jg
aaa
jne
sub
mov
add
mov
cmp
dec
lcall
dec
dec
sahf
cmp
in
cmpsl
xchg
popa
xor
pop
ror
pop
push
fcmovne
int3
mov
dec
ljmp
adc
and
les
mov
stos
add
out
ret
repz
or
loope
push
mov
xlat
inc
adc
xchg
add
adcl
daa
int3
orl
lods
cmpsl
imul
es
pusha
dec
scas
decl
lahf
rorl
rorl
dec
lock
mov
lods
adc
mov
sub
push
mov
leave
pop
nop
ret
fcomi
subl
cmp
out
cwtl
sbbb
cld
adc
sbb
add
inc
and
in
jns
cltd
shrl
sbb
shrb
push
xchg
xor
and
aam
or
inc
arpl
sbb
jmp
mov
aaa
addr16
sbb
mov
mov
dec
dec
or
cmp
add
icebp
mov
int
xchg
sbb
pop
push
xor
xchg
inc
sti
mov
mov
scas
inc
movsl
sbb
jne
cltd
movsl
dec
jno
mov
adc
in
mov
mov
xchg
mov
mov
scas
loopnew
or
lods
rorl
fstps
xor
adc
decl
pusha
cmp
xchg
loopne
pop
xlat
ss
mov
adc
adc
hlt
leave
dec
sub
jbe
adc
pop
sahf
insl
push
clc
mov
popa
xor
test
xchg
fsts
xor
stos
out
pop
in
jne
ljmp
pushf
mov
aam
xchg
dec
pop
popa
lock
cld
movsl
stc
stos
mov
out
mov
jl
inc
sub
arpl
outsb
add
xchg
xchg
sbbb
and
and
and
ja
inc
popaw
orl
or
les
out
or
inc
fdivp
or
sub
test
mov
gs
ss
outsl
xor
push
std
dec
xor
clc
or
and
insl
movsb
leave
dec
mov
mov
jge
mov
sub
sub
stc
mov
pop
dec
pop
mov
add
jmp
xchg
mov
fadds
adc
cltd
loope
shlb
cli
pop
jg
mov
push
in
sbb
mov
sbb
xor
imul
push
adc
std
arpl
jge
mov
iret
cwtl
inc
daa
xchg
sub
js
ss
mov
add
shrb
xchg
mov
mov
xchg
fwait
sbbl
sbbb
sub
mov
inc
loop
cmpsb
mov
jno
push
outsb
xor
push
cmp
mov
jmp
fs
xorl
jo
jge
lret
mov
xchg
call
push
inc
sbb
cmp
pop
aaa
ror
fwait
pop
enter
data16
sub
filds
cld
push
outsl
setb
mov
enter
push
mov
out
push
loopne
push
xor
cmp
pop
scas
sbb
mov
add
call
cmp
push
out
pop
lods
jbe
jo
mov
pop
inc
mov
lea
repz
lock
fdivl
str
out
xor
mov
mov
jmp
imul
testl
xor
jns
loope
mov
divl
and
lock
iret
fucomip
and
out
lds
pop
sbb
jg
pusha
and
sti
cmc
pop
ret
out
testl
repnz
aas
bound
test
mov
insb
push
inc
mov
lret
js
cltd
sbb
jmp
movl
lahf
and
addl
xor
jae
and
popa
push
push
jle
cmp
jne
xchg
movsb
rorb
dec
leave
stc
cmp
bound
mov
rdtsc
add
std
pusha
mov
pop
aas
mov
scas
add
inc
and
mov
enter
movsb
jno
xor
sbb
scas
adc
sub
scas
jo
sbb
ret
leave
pop
les
stc
adc
pop
popf
xchg
das
mov
fcompl
rclb
xlat
add
into
ret
jecxz
push
mov
aas
mov
repnz
mov
hlt
or
lds
xchg
add
pop
cmp
out
les
sbb
aad
mov
scas
scas
or
inc
xchg
mov
xor
sub
fmul
incb
je
mov
mov
sub
jbe
in
mov
and
data16
outsb
pop
lahf
sub
pop
test
inc
cmp
outsb
das
inc
sbb
jns
push
aam
inc
rol
cmp
push
movsb
xor
adc
fsubp
es
inc
jmp
dec
dec
sub
rcrl
in
jmp
pushf
push
negl
mov
mov
inc
push
and
iret
movsl
cwtl
xchg
sub
jno
andb
outsl
xor
clc
lods
mov
mov
call
mov
in
rorl
jo
aam
push
xchg
fidivs
mov
ljmp
loopne
adc
pop
out
adc
pop
pop
push
cli
scas
or
xor
mov
adc
adc
dec
pop
mov
mov
cld
xchg
lcall
movsb
imul
ljmp
adc
dec
aad
xor
xchg
aad
loop
mov
shll
mov
jno
xor
adc
outsb
rolb
pop
shrb
gs
sbb
lock
dec
outsb
jo
ja
jp
sbb
inc
mov
ds
addr16
mov
pop
xchg
add
pop
adc
jle
fwait
lret
sub
mov
jecxz
xor
rep
lea
jae
rorw
inc
mov
push
adc
xor
sbb
push
imul
inc
aam
jle
jnp
mov
addl
sub
and
or
call
repz
mov
fadd
orl
cwtl
int
jnp
shr
or
inc
mov
cmc
cmp
mov
or
mov
mov
mov
subb
inc
mov
sub
sbb
mov
adc
mov
add
imul
js
jns
movsb
js
xlat
add
cmc
pushf
clc
xchg
popf
jbe
pop
cli
add
mov
js
cli
push
pop
cli
inc
cmc
pop
out
xor
into
inc
xor
in
and
inc
dec
test
adc
sub
push
jp,pn
xchg
add
xchg
pushl
jnp
xor
mov
imul
insb
out
in
jo
adc
lret
pop
push
mov
mov
lds
ror
pop
jae
movsl
inc
xor
test
mov
and
pop
js
mov
add
mov
imul
xchg
xchg
cmc
stos
cmc
sub
test
out
xor
mov
in
mov
sbb
roll
idiv
outsb
cmp
in
dec
nop
dec
or
pop
xor
jnp
and
push
rcrb
push
xlat
or
pop
pop
push
subl
call
ljmp
xorb
dec
sahf
in
sbb
jne
push
xchg
ljmp
out
fdivl
mov
mov
push
push
mov
andl
lret
dec
adcb
ss
mov
sbb
mov
or
clc
adc
jo
or
shlb
test
lret
sbb
fnstsw
lock
loope
cmc
inc
leave
sbb
test
scas
pop
int
cwtl
mov
mov
mov
insb
cmp
xor
in
in
lret
xchg
test
pop
mov
fldenv
inc
fisubs
cwtl
sbb
adc
daa
mov
addr16
adc
push
sbb
lock
aam
push
dec
jae
push
frstor
add
jns
sbb
sbb
into
ds
push
outsl
jno
jge
scas
sahf
mov
rcr
jge
int
mov
js
lret
dec
jl
ret
add
fidivrl
stos
cld
jg
ror
cmp
add
dec
sahf
fsubrl
mov
adc
aam
or
jmp
xchg
aaa
int3
pop
cmpsb
jae
cli
gs
pop
mov
cltd
cmpsb
lock
jecxz
mov
sbb
cmpl
sbb
cs
inc
cs
adc
add
sbb
ret
lods
mov
mov
mov
imul
push
idivb
mov
loope
xor
int3
add
mov
mov
add
pop
call
rolb
sahf
popa
addl
mov
rorl
sarb
mov
aad
sub
pop
jo
jge
lcall
xchg
push
pop
orb
lods
out
testl
repnz
repz
adc
jecxz
xchg
insb
dec
pop
push
ret
test
push
cld
pushl
or
push
pop
and
jge
mov
xchg
cmp
xchg
inc
mov
cmp
dec
inc
scas
notb
or
loopne
xchg
cld
sahf
mov
outsl
pop
pop
push
pop
mov
loope
sti
mov
add
test
sti
mov
add
test
xchg
jg
fstps
cld
or
mov
aad
stos
shrl
pop
mov
std
mov
push
push
das
std
xchg
mov
into
jb
je
dec
jge
pusha
repz
stos
bswap
scas
fldcw
data16
test
addr16
aas
fcomi
test
mov
add
pop
push
or
and
rcl
adc
movsb
test
test
sub
adcl
pop
sbb
xor
out
popf
jmp
sarl
adc
int
popa
push
js
gs
test
xchg
sti
ret
mov
jp
js
cmp
push
adc
ret
and
fcoms
das
add
mov
test
inc
pop
xchg
int3
mov
pop
pop
inc
fisttpl
and
dec
mov
fdivr
mov
mov
xchg
inc
sti
dec
ljmp
rclb
rorb
sbb
test
cld
clc
inc
mov
sbb
cwtl
add
ja
pop
mov
xchg
fstpt
cmp
mov
inc
push
mov
cmp
inc
loop
pop
pop
xor
inc
and
fiaddl
cmc
inc
sub
vpaddusb
jo
leave
mov
mov
das
inc
loopne
stos
sar
aam
mov
arpl
dec
or
push
add
test
xor
std
sahf
jl
fadd
stc
hlt
xchg
sbb
cmp
adc
lahf
scas
dec
inc
push
sbb
jle
push
rcr
push
fs
sub
pushf
xor
xchg
cmp
out
dec
add
push
in
loope
push
cltd
call
outsl
adc
and
subl
push
dec
push
notb
add
in
dec
push
xchg
es
loope
mov
xor
inc
cmp
negl
pop
adc
jg
push
add
pop
je
jno
cltd
pop
movsl
and
dec
sub
push
hlt
adc
std
fstpt
shll
hlt
cmpsb
jb
fcomps
test
or
test
fmull
mov
imul
fdivs
int
cld
add
inc
outsl
js
into
fneni(8087
mov
loop
callw
inc
push
jmp
mov
test
sub
mov
inc
cmp
test
dec
gs
arpl
jg
fisttpl
jge
and
in
xchg
int3
mov
pushl
sbb
add
popa
cli
lret
push
adc
inc
jb
mov
mov
push
jl
pop
cmp
aam
rclb
push
into
cwtl
fs
mov
in
sub
adcb
dec
add
dec
fisubl
das
jp
ja
cltd
js
in
mov
aaa
jecxz
jl
mov
imul
repnz
lds
pop
add
movsl
loopne
arpl
loope
cld
stos
nop
or
inc
sub
call
lds
mov
xchg
push
lret
add
cmp
pushf
cmpsl
scas
aas
frstor
ja
sub
gs
or
dec
les
sub
das
lret
jo
xchg
sbb
jnp
dec
add
jns
inc
fsubl
gs
into
inc
mov
push
pop
jo
clc
jmp
es
cs
add
fcompl
xorl
or
xor
in
icebp
aam
repz
push
pop
mov
jge
adc
inc
sti
int
add
enter
outsl
pop
repnz
or
sbbl
add
and
lds
jne
jge
imulb
stc
mov
fiadds
gs
cmp
clc
mov
nop
add
push
pop
imul
push
in
mov
aas
push
ss
ljmp
nop
pop
push
sub
fdivl
cmp
sti
xor
andl
cmpsb
movsb
mov
xchg
mov
clc
pop
aas
in
call
cmp
rorb
out
and
roll
stos
idivb
in
int
insl
lock
jmp
and
sub
push
cmpsl
or
in
fbld
sub
xor
xor
sub
mov
pop
xor
pop
stc
jge
ss
stos
inc
jecxz
iret
push
in
mov
mov
or
jae
ficoml
popa
clc
pusha
push
adc
repz
je
pop
out
inc
sub
ljmp
cmpsb
mov
lret
insl
xchg
pushw
xor
mov
inc
jle
mov
jmp
adc
movsb
imul
mov
xor
jb
jle
mov
mov
imul
push
lods
or
decb
xchg
test
out
inc
cmp
inc
mov
sbb
pop
pop
mov
rolb
xchg
push
jb
mov
mov
fdivrp
loope
adc
mov
stc
push
aas
in
lock
mov
sti
mov
cmp
sbb
mov
dec
sub
or
mov
mov
mov
sub
outsl
out
fs
jl
xor
aaa
outsb
gs
ret
inc
jo
sbb
mov
lods
faddl
pop
stos
addr16
xchg
ds
sub
or
sbb
adc
mov
cmpl
mov
test
dec
mov
js
inc
add
adc
or
mov
pop
or
das
pop
fists
inc
push
pop
mov
iret
dec
outsb
mov
out
clc
aaa
in
mov
ret
outsl
sbb
loop
dec
pop
scas
jle
rorl
jmp
rol
rclb
bound
scas
std
sbb
dec
jo
loop
sti
in
test
cmp
mov
out
push
inc
lock
enter
es
outsl
ret
adc
jge
and
rorl
pop
nop
int3
xchg
adc
mov
jne
mov
cmp
adc
cli
fnsave
jle
jge
mov
xor
cmp
stos
push
sub
sub
push
sar
mov
mov
or
xchg
sarl
out
push
test
movsl
sar
movsl
push
xlat
dec
arpl
mov
cwtl
mov
notb
mov
outsb
cmpsb
in
xor
clc
int3
mov
jmp
pop
ss
je
fs
adc
jno
add
sbb
cli
bound
std
pop
cmp
cmp
sbb
adc
adc
rcrb
cwtl
pusha
lret
jbe
jb
mov
sub
jno
jno
bound
xor
cld
imulb
mov
pop
repnz
loope
mull
lret
dec
lahf
mulb
xchg
fiaddl
fwait
cmpsl
xor
cmp
and
lea
dec
pop
inc
icebp
ljmp
add
sub
popf
push
bound
adc
dec
das
fisubrl
sbb
test
fcomps
mov
sbb
push
push
pushf
cs
inc
inc
fisubs
sub
or
pusha
movsb
cmp
mov
cs
inc
adc
stc
ljmp
sbb
loope
movsl
movsb
scas
ss
or
je
nop
sbb
outsl
sub
shll
sub
es
mov
add
or
inc
dec
inc
jo
inc
mov
mov
dec
shrl
and
std
bound
push
rcrl
cmp
fldt
mov
mov
imul
notb
xor
push
leave
das
loopne
ljmp
and
dec
jb
outsl
div
add
xchg
ja
loope
hlt
mov
in
insl
mov
jbe
xlat
movsb
pop
mov
inc
into
jo
or
mov
pop
shll
dec
and
cltd
sahf
lods
mov
js
lahf
sub
call
enter
lods
jmp
adc
mov
cmp
jb
pushf
push
inc
and
or
in
push
ljmp
sbb
cli
aad
loope
imul
pop
mov
push
sbbb
jns
jne
inc
mov
jmp
mov
ret
inc
dec
dec
inc
outsl
test
xchg
adc
xchg
jbe
dec
push
int3
adc
jecxz
ljmp
sbb
cmp
inc
js
push
loope
ljmp
push
les
push
push
cmpsb
addr16
test
mov
mov
jge
push
cmpsl
mov
lods
lods
scas
mov
scas
lea
inc
add
mov
mov
jnp
cmp
scas
mov
push
push
repnz
fdivl
cld
mov
or
xchg
dec
leave
hlt
and
mov
and
and
ret
mov
mov
push
cmc
dec
jecxz
jno
xor
or
pop
stos
push
fimull
insb
xchg
push
ja
fsubrl
push
movsl
sti
subl
xchg
pop
mov
adc
xchg
xor
xor
sub
ljmp
fisubrs
sbb
jnp
pop
or
lahf
inc
sub
adc
dec
fstl
or
cwtl
sub
mov
inc
outsl
jecxz
call
arpl
sti
sub
sbb
inc
sub
dec
jl
outsl
mov
cmp
ja
xchg
imul
mov
and
pusha
movsb
jnp
scas
xchg
xor
dec
test
movsl
ja
ljmp
int3
inc
sub
nop
push
into
xchg
mov
std
orl
out
stos
imul
inc
dec
push
call
scas
inc
push
lret
es
shrl
imul
push
or
stc
jns
ljmp
ret
dec
sbb
movsb
or
enter
ljmp
neg
ds
pop
ret
test
mov
xorb
jmp
jp
dec
cli
and
loopne
inc
daa
jecxz
ds
addr16
push
call
adc
mov
fdivl
jp
int
das
lock
cmp
ds
mov
mov
std
mov
dec
sub
add
cmp
sbb
les
mov
ds
push
test
sbb
sbb
and
sub
rep
das
sub
call
mov
hlt
test
mov
daa
push
mov
rcr
xor
pop
or
xor
cmpxchg
jmp
jae
mov
xchg
or
cli
mov
outsb
aas
xor
ret
aaa
sti
and
insl
sbb
rcl
dec
pop
movsb
jg
and
stos
mov
sbb
mov
push
cmp
ljmp
and
and
xor
int3
lea
rcrl
adc
shr
movsbl
out
ljmp
jmp
ret
push
sub
fdiv
sbb
xchg
aaa
repnz
aaa
mov
mov
jmp
sbb
gs
xchg
sbb
dec
stc
scas
add
movsb
popa
cmp
lret
pop
into
pop
lods
dec
dec
push
lock
cmp
dec
loope
jp
rclb
sbb
incb
ss
cmpsl
leave
xor
sahf
jg
sahf
sti
lcall
shll
or
inc
add
and
test
in
mov
push
je
jp
and
js
xchg
ficoms
fistl
rcrl
and
jno
fmull
mov
lret
adc
mov
adc
stos
jge
dec
adc
inc
fidivrs
pop
cs
pusha
sbbl
xchg
add
pop
push
cmpb
shrl
dec
inc
jb
sbb
or
and
fsubrs
sbb
ljmp
movsb
mov
outsb
fldt
adc
andb
leave
fsubp
lds
dec
cmpb
popa
fcoms
sarl
adc
lahf
jo
xchg
out
dec
or
cmp
sub
push
lahf
lods
orb
shl
mov
fwait
mov
inc
jno
and
push
orb
mov
gs
or
incb
add
lret
mov
popf
pop
dec
inc
push
outsb
xor
push
sub
gs
movsl
mov
xchg
mov
sbb
adc
dec
out
in
mov
sti
jmp
push
test
jb
dec
mov
mov
dec
push
xrelease
cs
aaa
sarl
xchg
xchg
fdivrl
loope
jecxz
push
cmp
sub
or
inc
mov
fs
sub
addr16
popl
jo
dec
das
lea
or
ret
or
mov
lret
imul
jp
sbb
xorb
cli
clc
cld
mov
and
push
mov
lock
dec
jae
das
test
orl
jg
mov
in
daa
mov
cmp
outsb
xchg
sbb
push
inc
fwait
inc
inc
sahf
ret
icebp
lds
inc
pop
das
jl
les
je
pop
dec
gs
cmpsb
fdiv
in
loope
sahf
xor
call
adc
cmpsl
sbb
mov
das
mov
out
insb
lea
xchg
xchg
xchg
pop
mov
push
cmpsb
dec
dec
mov
ret
adc
jle
or
insb
inc
ret
adc
in
push
mov
fs
cltd
lret
dec
call
data16
jns
aaa
fiaddl
into
enter
testb
push
sarl
scas
addl
xchg
imul
xchg
loopne
aas
push
stos
pushf
repnz
push
test
adc
popa
scas
lret
mov
push
jmp
pop
ss
pop
or
rorl
pop
inc
inc
sub
repnz
popa
and
fisttpll
dec
les
arpl
xor
pop
scas
ljmp
mov
imul
scas
ljmp
xor
inc
adc
aam
ret
cli
or
pop
negl
inc
jge
xchg
push
jb
push
xchg
jae
movsl
adc
cwtl
setp
in
cmp
xor
fistpll
iret
lock
pop
sub
dec
js
cmp
fwait
jle
mov
inc
mov
mov
push
inc
xor
pop
imul
popa
fnstsw
dec
les
fwait
test
sti
or
jnp
in
pop
jg
pop
popf
cmp
mov
inc
lock
add
xchg
inc
dec
dec
outsl
adc
cs
inc
cmpsl
and
loopne
notl
jno
dec
jae
ds
xchg
shrb
notb
xor
insl
pop
scas
lock
neg
add
mov
clc
mov
in
sub
push
sub
push
inc
sub
xor
add
inc
pop
inc
enter
int3
lahf
les
je
mov
cmpsl
lods
jge
pop
aaa
outsb
ds
mov
es
mov
sub
inc
dec
jb
push
out
cltd
inc
push
mov
les
stos
out
pop
and
shrl
cwtl
fs
outsb
daa
nop
or
jp
loope
int3
jmp
dec
and
pop
mov
cmp
jnp
arpl
dec
add
mov
cmp
xor
repz
jb
pop
and
sub
adc
push
aam
mov
ds
clc
xor
ret
scas
add
orl
sbb
or
and
inc
int3
or
pop
dec
addl
sub
push
jl
test
cmpsb
insb
scas
jo
mov
sbbb
pop
push
lfs
insb
pop
inc
xchg
xor
decl
lods
outsb
push
dec
sub
aad
int3
pop
adc
xchg
setge
add
pop
scas
and
test
adc
push
xchg
dec
inc
icebp
xchg
push
pop
cmpl
xchg
fisttpll
inc
mov
sbb
push
dec
xor
xor
nop
test
out
fcmovb
call
lds
test
mov
fcoms
repz
lahf
xorl
shl
out
xchg
xchg
mov
ret
mov
in
cmp
mov
pop
ds
mov
data16
adc
imul
add
movsb
jp
push
xchg
enter
fsubs
dec
out
add
popa
addb
mov
push
rorl
mov
mov
inc
push
in
lds
sub
push
rcll
push
dec
or
mov
test
gs
sahf
sar
loop
loop
cmp
jecxz
lods
int3
bound
out
call
popf
push
mov
mov
lret
inc
xor
test
nop
outsb
popf
push
jp
xchg
in
cmc
ljmp
fisubrl
jmp
or
ja
ret
aas
loope
or
xchg
mulb
dec
sbb
mulb
sub
int3
cld
aam
std
stos
in
dec
dec
or
jge
std
pop
cmp
or
enter
dec
sub
add
jle
xlat
jge
loope
leave
in
jp
fsubrl
adc
loop
aad
sub
jmp
stos
adc
daa
loop
push
fnstcw
shlb
and
sub
mov
adc
out
cmpsb
scas
fstpt
add
push
cs
dec
insl
xchg
sub
xor
and
mov
sub
xor
cmpsl
push
xchg
adc
lret
je
mov
inc
psllw
mov
mov
ffreep
das
cmp
rcrl
push
sbb
lcall
insl
aas
pop
push
jae
mov
popf
lock
lahf
and
and
jne
xchg
sub
call
sbb
fldenv
ljmp
lods
out
pop
out
sub
test
add
int
cltd
roll
pop
mov
jbe
fcmovnu
addr16
push
les
mov
jno
push
scas
fisubrs
mov
pusha
into
out
mov
mov
push
mov
in
orb
jnp
in
push
xchg
jne
bound
jle
fidivrl
sub
lahf
add
stos
or
rcrb
mov
dec
xchg
mov
mov
sbb
jnp
test
mov
cmp
mov
pusha
lods
mov
sbb
lock
movsl
popa
je
inc
xchg
pop
test
lods
cmp
stos
mov
rcrb
ds
ret
lock
notl
jb
fcmovb
insb
stos
xor
xchg
push
iret
adc
xor
sbb
cmc
lods
popa
decl
mov
js
sbb
test
aas
add
or
cli
xchg
or
mov
or
in
and
fnsave
dec
jg
cmp
lcall
xor
fldt
xchg
popf
and
push
inc
shlb
aaa
sarl
loop
pop
mov
push
aam
pop
adcl
stos
pushf
scas
jg
fistpl
ret
int
int
inc
mov
xchg
aas
sbb
mov
into
xor
push
mov
inc
mov
sarb
or
fbld
push
sahf
subl
mov
aad
pop
push
lcall
outsl
push
repnz
aam
mov
pusha
fstpl
pop
push
jl
jno
xchg
into
out
sub
fdivp
sub
push
int3
shlb
fnstenv
out
fimuls
pop
imul
jne
inc
aas
jp
int3
mov
out
dec
cs
jnp
je
lods
cmp
loop
mov
cmp
lcall
cli
lret
sbb
js
mov
fdivrs
enter
cld
popf
push
shll
jo
fists
and
test
push
lods
aas
loopne
jg
add
pushf
fwait
ret
repnz
cmp
sarb
pop
inc
jb
lcall
test
cs
fildl
ds
lahf
scas
add
dec
test
aaa
lret
mov
xchg
nop
paddsw
push
inc
push
add
push
sub
roll
xchg
push
push
lret
inc
push
push
mov
fucomi
shlb
push
addr16
add
lahf
sub
roll
push
outsl
sbb
inc
push
mov
push
mov
or
jo
sub
pop
rcll
loop
clc
loopne
pop
xor
jmp
inc
jp
sub
out
lahf
pop
xchg
pop
movsb
in
xor
movsl
sub
popf
dec
hlt
jp
rol
mov
pop
ds
push
jge
ljmp
lods
test
int3
dec
stc
out
fidivrl
repnz
sbb
cltd
mov
inc
add
mov
mov
clc
or
xchg
in
sub
jmp
xchg
xor
jp
test
lods
sbb
sbb
dec
cmova
in
mov
lock
cmp
push
mov
jb
pop
popa
outsb
decl
xchg
insl
add
lock
lds
fstp
lock
jg
fldt
int3
ffreep
pop
hlt
aaa
sub
pusha
pop
jb
mov
sub
xchg
outsl
jmp
push
sub
jnp
fdivl
or
xchg
pop
mov
sarb
add
ljmp
sub
xorl
dec
adc
leave
xor
nop
xor
in
xor
in
xchg
popa
fwait
sub
ja
and
dec
jo
clc
and
adc
or
mov
stc
or
mov
incb
pop
lods
sbb
das
push
fwait
imulb
jo
push
sti
mov
jnp
xchg
jno
xchg
cmp
inc
jg
cmpsb
fnstcw
add
lock
dec
or
jnp
dec
icebp
add
imul
dec
adc
push
sbb
adc
or
cmp
and
pop
test
ss
mov
lcall
jl
ja
sarb
icebp
push
sub
mov
inc
ret
xor
test
pop
rcrb
jne
imul
lret
jp
pop
loop
cld
sbb
push
shl
pop
dec
push
inc
push
cwtl
sbb
mov
mov
sahf
enter
and
outsl
jecxz
push
ja
cmp
ljmp
daa
fs
clc
es
pop
inc
cmc
ds
repnz
lret
fistpll
lret
repnz
xacquire
pop
outsl
mov
jb
xchg
shrb
jl
pop
adc
icebp
test
sbb
mov
and
pop
fiadds
sub
xchg
mov
mov
hlt
and
xor
gs
push
sub
sbb
xlat
cld
stos
sbb
adc
inc
push
jns
hlt
sbb
sbb
rclb
cmpl
add
addb
pop
and
pushf
sbb
jbe
jae
popa
xchg
jge
push
push
xchg
and
jns
stos
dec
pop
pusha
pop
add
xlat
ss
pop
mov
in
nop
das
dec
lock
clc
pusha
adc
add
xor
ret
jge
jno
inc
sbb
sbb
jns
mov
inc
incl
pop
ds
in
mov
or
enter
gs
addr16
pop
cwtl
jbe
call
lds
fdivrl
sti
in
in
popl
pop
dec
inc
add
dec
mov
xor
mov
bound
fisttps
daa
js
imul
add
mov
ss
mov
ss
xor
and
ret
fdivrs
xchg
subl
pop
xchg
or
jl
mov
dec
push
sub
inc
cwtl
jmp
or
xchg
and
jle
dec
sbb
mov
idiv
shrl
icebp
cmp
andl
icebp
cmc
nop
aas
addb
testl
iret
pop
jg
dec
scas
mov
fmull
in
pop
cmpsb
lea
mov
leave
add
sbb
mov
xchg
sbb
ljmp
lods
sub
adc
aas
xchg
and
in
sti
es
mov
nop
or
enter
inc
pusha
xchg
sbb
cmp
fisttpl
add
adc
fisubrs
daa
xlat
cmpsl
std
gs
pop
adc
lret
jbe
fcoml
push
out
push
inc
jae
dec
push
fstp
popf
inc
add
inc
pop
repz
pop
repz
pop
repz
pop
repz
pop
repz
pop
repz
pop
repz
pop
repz
pop
repz
popa
mov
push
lret
mov
cmp
and
pop
mulb
paddsw
jne
and
loope
sbb
mov
stos
int3
stc
sub
mov
xor
scas
or
mov
fsubs
and
xchg
lods
ss
les
xchg
mov
push
pusha
out
rcl
ljmp
cmc
push
je
xchg
pop
xchg
out
movb
mov
loopne
in
inc
pop
or
push
dec
ret
mov
xchg
std
adc
arpl
adc
xchg
pop
push
fidivs
xor
call
xor
adc
in
xlat
shrl
lea
or
mov
fcmovbe
sbb
test
push
mov
popa
and
pop
shlb
mov
aad
push
sub
push
loope
cmp
imul
jg
pop
or
pop
dec
lds
mov
xor
imul
xchg
jg
ss
cwtl
inc
lock
add
ret
cmc
pop
sub
cmp
add
and
bound
mov
mov
pop
or
cmp
inc
add
dec
push
adc
pusha
aas
ss
sbb
xor
pop
enter
fldl
xchg
jbe
lret
lock
cmpsb
cli
or
mov
adcl
xor
movsb
mov
insl
xor
push
sbb
dec
call
pop
andl
je
dec
inc
pop
adc
jns
push
jae
and
jno
pushf
shrl
iret
jns
cltd
jns
sbb
sbb
sbb
sbb
movsl
cmpsb
xchg
jecxz
mov
imul
push
in
xchg
or
hlt
add
int
push
or
dec
into
addr16
stc
inc
jne
pop
xchg
inc
out
rclb
add
in
lret
or
add
lds
pop
daa
lcall
outsl
jl
adc
xchg
jbe
subl
sbb
out
add
xchg
call
fisubrl
cmpsl
lret
cli
jnp
dec
cld
ror
bound
icebp
xchg
stos
out
adc
cs
stos
sub
push
sbbl
outsb
sub
mov
or
movb
adc
imul
adc
in
sub
jbe
aam
push
jge
iret
scas
sbb
jmp
ja
pop
fs
cli
pusha
add
cmp
pop
dec
mov
fs
aam
inc
sub
mov
mov
jge
jo
idivb
mov
pop
loop
fistpll
decl
mov
and
test
adc
loopne
adc
push
mov
xchg
div
sbb
arpl
int3
jmp
cwtl
push
pop
insl
enter
cmp
add
xlat
iret
int
adc
push
sub
sbb
push
push
setns
hlt
out
inc
dec
shll
lea
adc
mov
fwait
mov
cpuid
sub
in
pusha
sub
enter
stos
xor
adc
into
push
sbb
mov
sti
out
ret
rcl
mov
push
xchg
lods
mov
xchg
ds
mov
iret
bound
mov
sub
mov
mov
push
add
pop
mulb
cwtl
gs
movsl
or
repnz
addr16
mov
dec
into
xor
xlat
dec
fmul
nop
add
stos
shr
pop
push
icebp
jbe
test
or
mov
addr16
pop
mov
mov
jmp
stos
mov
mov
mov
mov
js
push
mov
pop
fcmovbe
push
push
mov
test
add
push
hlt
fisubrs
add
sarl
jne
and
dec
loope
inc
in
sbbb
mov
cld
int
pop
push
dec
inc
jno
pop
pop
shr
mov
push
mov
mov
cmp
int3
mov
jo
xor
jle
inc
mov
fistpl
mov
loop
inc
push
or
jno
cwtl
push
mov
or
sub
push
enter
fdivrs
and
adc
loope
xor
dec
adc
pop
jp
xchg
arpl
je
jb
shlb
cmp
in
mov
out
inc
in
scas
insl
inc
jp
jg
fidivrl
daa
cs
int
mov
cmp
clc
cmp
jl
xchg
mov
daa
xor
das
roll
ljmp
jno
mov
jbe
xchg
pusha
popa
and
sub
add
cmp
iret
outsb
pop
fistl
xor
mov
push
add
and
sbb
shll
fsts
popa
sahf
xchg
sbb
adc
add
loope
or
mov
xchg
fcoms
shll
into
xor
sbb
xchg
mov
jne
cwtl
call
cli
aam
repz
mov
dec
jg
dec
pop
cmp
and
mov
push
add
fidivrs
lret
jle
incb
ret
xchg
inc
dec
cld
mov
push
xchg
js
inc
sub
mov
test
sbb
pushf
rorl
std
inc
sahf
xchg
jg
mov
and
insb
jb
in
push
mov
push
xchg
mov
roll
dec
mov
sub
imul
ret
in
sbb
mov
sbb
sub
sbb
jo
sub
aas
sub
arpl
je
ja
mov
mov
punpcklwd
jmp
repnz
int
mov
and
mov
mov
or
jp
push
cmp
and
and
mov
movl
push
cwtl
ljmp
jecxz
ret
stos
or
popa
clc
icebp
psadbw
mov
paddw
rcrb
sub
xor
lods
push
int
sarb
add
mov
cld
pop
pop
cmp
js
push
xchg
xor
shll
out
inc
mov
enter
inc
popf
movl
pop
icebp
bnd
les
cmp
lret
insl
pusha
cmpl
xchg
xlat
pop
pop
sub
in
mov
add
push
mov
fmuls
inc
lea
mov
shrb
jae
hlt
insl
inc
stc
mov
adc
jp
dec
sbb
cmp
ret
jmp
xor
and
pop
inc
inc
sub
aam
fs
pop
repnz
xlat
mov
sub
out
leave
mov
push
or
xor
andb
orb
mov
fsubr
push
pusha
push
pop
or
ds
mov
les
test
cmpsl
loopne
adc
xor
sub
lret
and
pop
test
hlt
pushf
cmp
stos
popa
arpl
cmpsb
insb
sbb
or
enter
insb
lcall
scas
int3
push
or
es
rorl
xchg
lahf
push
ss
les
out
sbbl
scas
and
pop
nop
dec
sub
call
pop
mov
out
dec
rcll
fidivl
sar
out
sbb
enter
adc
es
ja
xor
ret
loope
shr
lds
push
push
inc
push
mov
push
into
cltd
mov
sub
clc
mov
ret
dec
jmp
cmp
jmp
std
pop
ret
dec
push
gs
out
js
imull
movsb
mov
sahf
xor
jo
xchg
pop
dec
inc
add
cmpb
sbb
cmc
mov
xchg
bnd
out
jp
aam
push
cli
or
rclb
out
fidivrl
iret
enter
dec
jb
icebp
enter
mov
add
inc
jle
lahf
in
pop
cmp
lret
sub
jl
in
xor
push
mov
int3
adc
loope
fisubrl
pop
es
testl
inc
rol
or
mov
mov
adc
and
imul
push
lret
rorb
inc
inc
xchg
movq
jae
xchg
addl
add
out
nop
rol
test
dec
mov
aas
push
stos
popa
and
dec
fisubrs
lahf
xchg
add
xchg
int
sub
mov
aam
mov
pop
pushf
mov
lcall
jecxz
or
inc
test
jno
jae
imul
cmp
xor
and
mov
mov
test
jo
mov
sub
dec
cmp
mov
rcrb
aaa
mov
pusha
out
add
cs
ss
and
add
mov
jae
pop
push
clc
out
cwtl
or
into
jg
enter
repz
shl
push
out
xor
inc
cltd
jge
sub
pop
lcall
xor
jmp
popf
out
lock
sub
das
out
gs
or
mov
dec
mov
adc
add
inc
fdivl
mov
jmp
and
dec
add
jg
jge
ret
cmp
mov
cmp
jp
or
xchg
bound
clc
or
xchg
mov
movsb
mov
cmc
movsb
call
xchg
mov
loopne
cmpsl
cltd
xor
leave
mov
aam
sahf
pop
int
push
test
push
pop
jo
push
adc
out
mov
mov
mov
lods
dec
cmp
xchg
cmpsl
dec
add
js
iret
mov
sub
es
orl
sub
test
cmp
adc
mov
leave
push
stc
loop
xchg
jns
sub
fs
push
push
int
push
cwtl
cli
push
scas
adc
lahf
xchg
xor
xor
mov
add
push
or
subl
fcoml
aad
out
popf
inc
sbb
insl
loop
in
das
aaa
pop
push
and
sub
mov
and
or
mov
pop
test
adc
ja
testl
pop
jl
jne
jp
mov
dec
mov
push
aad
cmpb
dec
mov
hlt
pop
fcompl
sbb
push
lahf
sti
sub
lret
lds
inc
xchg
call
dec
jl
in
jne
or
cwtl
jecxz
dec
ds
sub
and
push
inc
call
and
cmp
inc
push
xchg
rclb
pop
push
push
mov
inc
dec
ljmp
stos
push
or
mov
aad
pop
shrb
adc
mov
movsb
mov
jmp
mov
adc
enter
xor
dec
dec
or
fstpl
adc
aaa
mov
add
sbb
inc
enter
push
push
mov
and
jle
rol
xor
mov
out
stos
or
popa
mov
out
test
iret
aas
xlat
jg
dec
push
out
push
ja
scas
scas
ljmp
std
jns
xor
add
cmp
inc
adc
cmp
jns
mov
sbb
mov
lahf
stos
pop
add
inc
sahf
cmpsl
int
lcall
insb
scas
das
sbb
mov
mov
add
leave
xchg
out
xchg
xchg
and
pop
aad
cs
int3
xchg
xlat
aaa
xchg
sbb
pushf
sub
stc
out
jl
repnz
inc
push
xchg
or
jmp
fistpl
roll
int3
and
fiaddl
jecxz
scas
rorl
mov
mov
sub
fmull
lock
pop
ds
ret
mov
and
jnp
dec
dec
scas
fsubl
mov
mov
clc
sub
and
gs
fwait
adc
cmp
push
dec
xchg
loop
xor
dec
mov
int3
adc
mov
enter
leave
mov
int
ljmp
mov
cmpsb
sub
das
and
pushf
stos
bound
scas
lods
out
jl
jnp
hlt
mov
and
cmp
push
or
mov
sti
jo
aaa
pmuludq
inc
mov
jmp
fisubs
xchg
cmpsl
pop
loope
mov
insb
inc
sbb
mov
negl
mov
sbb
jns
xor
popf
sbb
fimull
rdtsc
fildll
mov
hlt
jle
call
pshufw
ss
into
lock
adc
ds
orb
xchg
icebp
sahf
sbb
cmp
dec
pop
lds
jle
push
imul
adc
inc
leave
fildl
mov
repz
js
shl
scas
xor
jg
adc
xchg
jo
jmp
sub
fsubl
adc
fs
enter
xor
leave
or
pop
fnstsw
arpl
leave
cmc
in
pop
cld
xchg
dec
inc
es
dec
les
cmp
movsb
sub
les
pop
loop
cmpl
out
xchg
pop
sahf
pop
loop
mov
adc
mov
dec
xor
mov
or
fcoml
dec
adc
into
popa
inc
or
lea
mov
dec
orl
fcomps
inc
and
out
mov
ret
adc
not
jns
imul
test
adc
mov
add
jnp
js,pt
call
sub
xchg
test
or
fcoms
cmc
push
fimull
out
scas
lock
xor
out
push
cmp
mov
add
enter
subb
add
loop
out
imul
popa
xchg
xor
sub
and
enter
jl
iret
inc
rcl
out
jp
sbb
pop
and
push
lock
jg
adc
dec
in
xlat
cli
repz
decb
add
mov
js
nop
std
fildl
frstor
push
xchg
je
out
mov
call
jno
jecxz
mov
mov
bound
js
lcall
std
je
stc
js
decb
dec
fists
cmp
pop
fidivl
loope
out
add
out
cltd
push
das
jb
mov
or
xor
mov
jge
jmp
das
cmp
ret
mov
mov
movsbl
push
push
lds
cltd
jg
rolb
into
cli
sbb
pop
sbb
repnz
and
push
rolb
inc
adc
mov
cmp
mov
inc
inc
imul
pop
test
pop
data16
xchg
inc
add
xchg
jbe,pn
xor
jle
jle
or
jb
in
mov
fsubrl
leave
sbb
ss
cmp
sbb
cmp
fmul
mov
lods
xor
xor
sbb
insl
test
sti
sarb
subl
scas
push
sub
repnz
and
fs
jae
pop
mov
fnsave
xchg
inc
fimuls
addr16
sub
hlt
ret
jle
enter
and
inc
int
out
shrl
or
inc
jns
sbb
inc
sbb
scas
shll
loop
movsb
jg
add
les
rol
in
div
adc
sub
mov
push
call
xchg
pop
mov
dec
adc
lcall
les
xor
sbb
pop
add
in
pop
cmpsl
jno
loope
mov
xchg
movsl
inc
mov
jmp
in
ja
mov
pop
out
fcmove
nop
inc
pop
pop
dec
les
add
adc
cld
mov
addr16
and
pop
mov
aam
adc
ljmp
cmp
or
cwtl
repnz
loope
test
inc
dec
pop
pop
dec
sub
mov
cmp
fisttps
pop
mov
gs
mov
push
and
ret
push
mov
stos
nop
outsl
aam
and
repz
lods
fwait
leave
jmp
adc
stos
xchg
xchg
addr16
mov
rclb
dec
call
sbb
dec
notl
jecxz
js
ret
stos
out
cmp
mov
retw
negl
int3
pop
xor
mov
sub
loop
cld
mov
jae
lret
sbb
add
add
call
sahf
jg
cmp
and
aam
sbb
sbb
rorl
or
es
cmc
in
movsl
aad
subl
jbe
out
pop
add
ret
xchg
dec
add
pop
mov
test
sub
pop
cwtl
mov
hlt
gs
or
lods
jae
dec
sbb
add
fistps
mov
test
in
lods
and
mov
out
movsl
mov
dec
clc
popf
icebp
add
daa
and
cs
add
push
push
test
jnp
stos
leave
and
out
movsl
fstp
pushf
and
ret
popa
shll
or
scas
fists
ret
stos
jae
test
dec
dec
das
or
testl
add
xor
sub
mov
xor
jecxz
dec
cmp
xchg
pop
pop
pop
pop
mov
mov
repnz
into
mov
sti
add
mov
mov
xchg
cmp
fists
cmp
inc
pusha
fwait
mov
push
pop
or
cmpsl
sbb
adc
inc
and
xchg
movsb
es
inc
mov
mov
ret
sub
and
xor
jbe
movb
pop
mov
add
cltd
mov
mov
cmp
or
dec
mov
popf
loop
fisttpll
xlat
pushf
mov
push
fadds
movsl
fistl
add
decb
cs
and
and
add
out
xchg
lds
sbb
inc
pop
pop
and
loop
daa
lcall
mov
ljmp
in
sbb
ljmp
repz
idivb
enter
fiadds
sbb
jg
stos
mov
repz
arpl
in
cmp
int
and
es
das
mov
movsl
fiadds
in
ss
jo
daa
dec
cmp
pop
fisubl
push
test
push
jmp
je
xchg
pop
ficompl
fwait
sbb
cmp
lods
jno
pop
fs
mov
xor
inc
loope
mov
insb
fstps
pop
mov
gs
sbb
xor
flds
aaa
mov
cli
cmpb
mov
push
adc
imul
cmp
push
pop
cmc
insb
pop
cld
mov
mov
push
or
inc
movsb
lods
ret
lods
mov
ljmp
add
lcall
sar
int3
jno
jae
orb
and
push
xchg
fucom
ljmp
ss
mov
inc
repz
pop
cmp
mov
adc
pop
sub
mov
mov
test
fmul
xor
js
stos
adc
mov
stos
in
mov
dec
test
inc
sbb
cmp
out
push
add
jg
jno
js
test
scas
loopne
jp
xorl
mov
lahf
fistps
mov
fisubl
cld
sti
movsb
into
xor
cmp
rclb
dec
cmp
cmpsb
mov
seto
mov
push
lret
xchg
inc
mov
push
push
divb
int3
in
mov
push
pop
add
out
xor
xlat
sahf
out
repnz
jnp
jl
mov
lcall
std
xchg
dec
cmp
dec
scas
jae
gs
inc
mov
jecxz
jp
out
mov
cltd
lret
mov
sub
jg
jle
jg
push
js
fidivrs
jmp
add
pop
fcmovne
or
lock
lahf
pop
test
es
pop
cmp
in
imul
stos
xchg
fldt
insl
outsb
jbe
sub
and
or
jecxz
jp
mov
inc
lcall
dec
int
cld
imul
jp
jbe
cmpsl
jmp
add
push
lret
stc
adc
je
mov
negl
mov
lods
mov
mov
lcall
mov
pusha
jmp
outsl
dec
cwtl
sub
repnz
enter
rolb
lock
adc
orl
push
or
stc
mov
sub
enter
pop
sub
dec
mov
flds
add
aas
call
leave
notb
jge
data16
push
jo
test
insl
mov
pop
jp
es
or
sahf
icebp
in
adc
push
stos
stos
out
fistpl
test
mov
out
xchg
adc
lcall
js
mov
dec
inc
repnz
jns
cld
das
inc
inc
jbe
dec
pop
sarl
cli
bound
std
inc
es
add
sub
and
cmp
cmp
add
popa
cmp
repz
xchg
pushf
loopne
xor
pop
sub
sbb
movl
sub
inc
rol
cmc
xchg
popf
js
xchg
xchg
cltd
and
fsubrs
dec
imul
inc
out
pop
xchg
push
movsl
flds
call
sbb
add
fdivl
fisubrl
mov
mov
mov
cmc
xchg
hlt
xchg
cmpsl
xchg
ljmp
add
adc
in
mov
push
mov
sbbb
push
leave
shll
clc
mulb
push
pop
test
xor
lcall
xchg
sbb
repz
outsb
cwtl
test
sub
push
and
negl
inc
adc
inc
push
ret
aad
js
inc
gs
push
xchg
shrl
shll
sarb
aaa
sbb
cmpsb
bound
in
cmpsl
mov
jmp
push
add
mov
xchg
ss
shrl
aad
jne
cmc
out
ret
xchg
add
add
cmp
dec
test
sub
or
mov
cmpsb
jae
test
nop
dec
call
mov
dec
inc
lcall
cmpsl
rclb
or
jnp
fidivs
add
loope
mov
sub
mov
mov
mov
or
mov
scas
mov
fiaddl
add
pop
movsb
xlat
pop
in
adc
movsb
stos
dec
xchg
push
or
fisubs
pushf
shlb
arpl
mov
data16
loopne
pop
mov
inc
cmp
pop
pop
call
dec
movsl
into
mov
and
inc
or
push
mov
mov
adc
pop
xchg
pop
imul
dec
and
inc
and
fs
jno
sub
in
pop
jae
es
cwtl
cmp
gs
dec
xchg
mov
adc
cmc
repnz
mov
pop
inc
adcl
les
mov
and
pop
or
subl
xorl
mov
popa
fisubrs
fnstenv
jno
adc
sub
mov
cmc
sbb
das
inc
mov
arpl
fs
cmpsb
int
cmpsl
mov
xchg
xrelease
scas
es
leave
pushw
insl
call
cmp
jmp
pop
mov
push
cmp
xor
in
mov
fidivrl
insb
cs
test
imul
lods
xorb
push
mov
mov
jmp
loope
int3
arpl
cmp
jnp
gs
push
jno
jb
and
mov
mov
call
incl
push
shll
pusha
inc
test
in
cs
aad
inc
in
std
inc
jb
cmp
orl
out
inc
js
fstpl
div
push
add
jmp
iret
adc
js
loope
and
sbb
movsb
sahf
out
sub
pop
fprem1
in
jb
sti
or
xchg
xor
mov
mov
sub
leave
push
push
add
xor
add
lea
rcrl
mov
into
pop
shl
repnz
out
push
and
mov
mov
jnp
xlat
sbb
je
mov
pop
mov
pop
scas
out
dec
xor
xor
lret
mov
xor
and
jg
das
and
faddl
cmovae
lcall
sahf
hlt
shrl
xchg
inc
mov
xchg
jno
mov
mov
into
adc
movsl
pop
sbb
xchg
mov
aam
in
pop
nop
inc
inc
fsts
loop
mov
push
imul
hlt
pop
cmp
icebp
mov
mov
and
aas
push
cmp
jmp
scas
mov
fs
lret
ficoml
sub
lcall
xchg
push
or
pusha
outsb
push
pop
sahf
mov
in
sub
and
neg
cmc
mov
jnp
das
jge
mov
gs
push
fildl
gs
jno
xchg
and
scas
es
ss
jns
mov
shlb
pop
stos
or
push
lods
inc
lret
fisttpll
das
hlt
out
lret
adc
js
sbbl
ss
out
mov
lret
dec
mov
mov
sub
mov
push
outsl
adcl
daa
ds
and
pop
or
ja
imul
aad
cmp
jns
repnz
mov
jns
sti
and
and
jecxz
sbb
int3
adc
sbb
mov
pop
addr16
and
xlat
xchg
movsb
fnstenv
xchg
mov
push
repnz
sbb
sbb
push
fdivs
pop
jp
lds
add
notl
dec
cmpb
push
sahf
add
xchg
and
loope
sub
inc
mov
cltd
bound
mov
lea
stos
and
jecxz
call
fwait
mov
imul
repnz
pop
inc
dec
jge
pushf
movsl
nop
push
dec
mov
adcl
iret
popf
mov
movsb
nop
adc
pop
xchg
sub
andl
ficomps
add
xor
ret
mov
les
add
add
mov
adc
dec
test
push
out
loope
dec
dec
jb
sbbb
fidivrl
xor
into
and
cwtl
mov
sbb
inc
xchg
sbb
mov
push
sub
insl
jne
repz
mov
xchg
cld
sub
pop
mov
es
out
inc
or
pop
cmpsb
test
rcrb
loope
sbb
mov
into
jge
lods
pop
ja
inc
stc
dec
ret
insl
jle
les
adcl
lods
imul
pop
or
leave
orl
orb
ret
shl
push
mov
mov
iret
mov
xchg
lcall
stos
sub
xchg
mov
bound
enter
push
pop
sbb
cltd
ds
pop
xlat
lock
into
adc
xchg
cmp
push
imul
mov
dec
cmp
insb
inc
and
lahf
enter
stos
into
pop
sub
addr16
add
mov
icebp
jmp
jbe
shll
sub
xor
fwait
insl
jae
aad
xor
sbb
dec
daa
pop
sbb
jb
xor
in
notl
mov
sahf
ja
jne
mov
cmp
mov
in
jns
or
movaps
mov
sbb
insb
cld
cs
testb
xor
fisttps
gs
cmp
pop
adc
push
int3
insb
lods
or
daa
jecxz
or
es
int3
idivl
cmp
inc
ret
lcall
inc
push
xchg
cli
add
sub
gs
cwtl
fmuls
fs
xchg
int3
in
jns
lock
lahf
push
imul
xor
adc
xorl
jo
sub
xchg
aas
mov
or
mov
or
inc
sahf
shl
incl
in
mov
and
les
xor
and
in
mov
daa
and
sbb
imul
test
ret
sub
pop
push
xchg
fidivl
decb
push
and
or
rcrl
movsl
sub
imul
cmp
fwait
rol
mov
testl
out
xchg
or
js
outsb
jmp
aas
cmpl
add
inc
sub
int3
xchg
mov
lods
popf
movsl
push
dec
sub
xor
xor
into
out
in
jae
loop
mov
push
repnz
dec
xchg
cmp
mov
xchg
push
mov
xchg
mov
test
out
mov
fcomi
mov
dec
pop
and
inc
xchg
xchg
pop
insl
push
push
addr16
fisubl
cmp
lahf
test
pop
mov
adc
push
ror
jge
cltd
jae
rcr
xchg
imul
jmp
jmp
imul
mov
call
xor
jae
hlt
outsl
push
jl
push
fildll
xor
andb
aaa
mov
mov
adc
jle
add
imul
mov
add
loop
push
ret
dec
jnp
cmp
or
outsl
in
stos
pop
imul
lock
mov
fwait
adc
pop
sahf
movsb
cmpb
mov
mov
js
or
push
fs
push
pop
test
mov
xchg
imul
sbb
stos
test
test
push
mov
imul
dec
repnz
cmp
or
ja
push
lock
push
pop
fiaddl
xchg
sbb
enter
in
pop
sub
cld
outsb
lahf
push
bound
inc
lods
pop
shrl
mov
fldt
mov
loop
ss
cmp
dec
ret
push
xchg
aam
movsb
xor
es
mov
jo
and
das
ja
data16
int
cmp
sti
add
test
lds
ret
mov
fistps
lock
bound
lret
fucompp
adcb
out
imul
mov
mov
shll
fidivrl
out
jno
mov
adc
mov
inc
pushw
in
test
bound
xor
daa
in
pop
push
push
jg
and
sahf
nop
sub
push
inc
aad
xor
xchg
lods
or
xor
dec
addr16
fistps
data16
jae
popf
scas
cld
jns
in
cmpsb
dec
inc
sahf
add
leavew
or
jecxz
jne
mov
cmp
popf
mov
dec
loopne
aad
jle
mov
xchg
in
ret
in
clc
pusha
mov
lods
dec
and
testb
outsb
popf
sub
imul
adc
pop
mov
dec
jne
inc
rcl
mov
mov
je
lock
mov
nop
sahf
jae
fimull
icebp
inc
fwait
mov
push
push
dec
pop
out
lret
aas
mov
sub
jns
cwtl
dec
cmpsb
dec
clc
mov
pop
or
sub
mov
mov
jbe
sbb
shll
cwtl
pop
push
push
or
inc
loopne
cmp
and
popa
sub
add
std
dec
xor
mov
lret
pop
std
dec
and
mov
scas
sbb
mov
out
sub
jnp
es
pop
imul
data16
stos
or
xchg
adc
add
cmpsl
jbe
xor
out
and
sahf
divb
mov
icebp
std
or
sarl
push
inc
pop
inc
mov
sets
and
dec
pushf
jl
push
jne
mov
mov
mov
sub
das
push
repnz
push
rorl
jecxz
cmp
push
cmpsb
adc
xor
cmp
adcl
sti
adc
cmpb
test
xor
pop
adc
mov
loopne
loopne
ljmp
push
fimull
and
push
add
std
inc
dec
pop
rcr
jae
enter
cmpsb
iret
jb
or
data16
pop
data16
orl
xor
pop
adc
sbb
fxch
in
dec
and
mov
loope
fiadds
test
ds
lods
popa
inc
mov
mov
mov
bound
mov
mov
daa
push
imul
aam
test
insb
mov
mov
add
jae
push
mov
and
jne
aaa
imul
inc
push
and
inc
jno
mov
fs
mov
addr16
js
push
cmpsb
mov
jmp
cmpsb
push
nop
cmp
mov
hlt
bound
or
repnz
int3
sub
xor
stos
add
xor
gs
stos
gs
mov
sub
nop
int
mov
xlat
jbe
loopne
fadd
xchg
push
xor
insl
dec
fsubl
add
dec
mov
mov
jmp
dec
std
pushf
lods
sub
cmpb
push
adc
xor
pop
dec
pop
and
pop
sbb
ds
inc
ds
scas
jle
lret
cs
into
cmp
push
fwait
js
cld
lcall
push
cmp
idivl
hlt
inc
push
mov
push
arpl
cld
ljmp
pop
xchg
xchg
movsbl
fistpll
aam
dec
and
pop
das
xor
lods
add
adc
in
push
pusha
pop
test
or
insb
jg
imul
push
test
scas
xchg
fcmovnb
inc
lods
fistpl
jo
aas
das
insl
sub
or
pop
les
imul
pop
jbe
ljmp
fwait
bound
adc
loop
mov
test
xlat
xor
repz
js
std
fistpll
addr16
fildll
stos
pop
filds
inc
push
and
lods
sbb
jg
adc
mov
insl
int3
fcomip
add
or
out
out
push
and
inc
and
lret
mov
call
adc
xor
or
mov
lret
and
gs
xchg
addb
or
out
loopne
out
lcall
add
fcomp
sub
ret
dec
dec
lods
sub
fistpl
sbbl
jo
dec
pop
arpl
xor
mov
mov
enter
lret
ret
daa
inc
add
jecxz
cmpsb
mov
adc
ljmp
ret
ss
cmp
pusha
and
xchg
or
mov
inc
test
mov
push
lret
xor
mov
fcmovne
test
adc
inc
xchg
push
loope
jns
into
mov
arpl
push
adc
fldcw
cmp
mov
cmp
in
mov
imul
sub
add
aaa
data16
cld
push
aaa
mov
fcoms
sub
lea
dec
add
mov
out
pusha
and
bound
jp
xor
mov
jl
push
out
fnstcw
inc
mov
xor
cmp
ja
stc
mov
push
mov
rol
repnz
mov
adc
or
into
mov
insb
add
xchg
mov
and
cmc
scas
repnz
mov
int3
ss
adc
in
faddl
xor
idivl
and
sbb
sti
movsb
test
mov
loop
loop
pushf
pop
hlt
or
ss
cli
std
push
adc
push
mov
pop
mov
xchg
inc
mov
out
xchg
popa
hlt
sti
sbb
enter
cwtl
mov
mov
lock
jle
call
sub
mov
xor
popf
outsb
inc
das
push
sub
int
popf
push
jmp
scas
std
jl
push
mov
and
jmp
mov
mov
jno
mov
sub
cmc
into
inc
std
xor
scas
and
out
loop
fsubrs
das
mov
divl
mov
nop
cltd
orb
add
adc
test
ja
mov
pushf
cmp
inc
pop
adc
jecxz
adc
leave
out
or
jp
push
mov
cwtl
arpl
daa
xlat
xchg
int3
cmp
js
inc
inc
mov
cmp
cmp
add
enter
push
or
mov
push
inc
mov
scas
lret
cmp
cmpsb
add
push
sbb
lcall
stos
cmpsb
xchg
dec
or
dec
loope
or
adc
and
out
je
int3
mov
pop
mov
movl
in
mov
jbe
aaa
inc
sub
push
lret
and
push
addr16
sbb
or
ds
mov
cmc
xchg
cmp
out
sahf
push
cmp
shlb
stc
dec
in
dec
push
pop
lcall
ret
push
pop
mov
push
push
es
scas
repnz
mov
out
mov
xchg
inc
test
imul
imul
pop
popf
xchg
mov
pop
jle
and
jg
inc
cmpsb
push
stos
out
jmp
gs
pushf
pop
icebp
ljmp
xor
lahf
sub
filds
xchg
inc
stos
lcall
cmpsb
icebp
pop
or
inc
push
ret
cltd
dec
cmp
popf
js
testb
mov
ljmp
jmp
sub
cld
stos
mov
sub
adc
repz
in
cmp
sub
jle
xor
lret
sti
test
call
xor
mov
int3
jge
jne
mov
shrb
and
sahf
xor
cld
mov
mov
ret
insl
ljmp
cs
pusha
mov
fisubs
cmp
leave
sti
not
ret
mov
popf
cmp
mull
nop
inc
sbb
invd
shll
jb
xor
jg
popa
ret
xor
ja
pop
fildll
je
cld
xchg
jecxz
out
js
sbb
push
or
sahf
outsb
icebp
pop
stos
dec
repz
and
imul
or
rcrl
add
or
rol
fnsave
sub
inc
ret
lock
or
jle
orps
or
lcall
hlt
sub
xor
xchg
rorb
movb
cmpsb
aad
repz
imul
mov
pop
sub
dec
or
fsubrp
mov
out
jo
add
push
and
js
xchg
stos
rorl
push
jle
adc
inc
cmpsb
popa
hlt
ja
push
mov
int3
cmp
dec
push
sbb
insl
add
dec
cmp
shlb
test
jecxz
jp
aas
ret
adc
and
dec
outsl
jmp
mov
pop
sub
xor
jle
pop
push
ljmp
adc
lret
pusha
cld
fcomps
pop
aam
sbb
movsb
cmpsl
jae
cmpl
push
push
insb
imul
xchg
xlat
loope
push
and
popf
xlat
sub
lea
int
mov
inc
repz
xchg
cltd
jl
movsb
sbb
lds
pop
jne
cmp
clc
xchg
mov
sbb
mov
in
xlat
and
mov
fcmovnbe
adc
mov
dec
out
xchg
das
inc
lcall
mov
jecxz
pop
mov
cmp
xlat
jge
lcall
sbb
movsb
insb
jg
dec
inc
loopne
out
push
imull
fwait
mov
xor
sarb
mov
xchg
mov
inc
cli
dec
mov
nop
or
test
jg
mov
add
out
je
ljmp
adc
cmp
mov
mov
cmp
scas
mov
dec
roll
dec
jecxz
mov
sub
mov
sbb
aas
lret
push
cwtl
ljmp
pop
divl
and
fs
push
call
cli
adc
push
dec
cld
pop
sbb
ljmp
sbb
mov
mov
mov
iret
xchg
fucomp
or
subl
in
int3
sub
pop
adc
sub
pushf
xchg
push
clc
fwait
jb
and
jg
push
call
push
lcall
or
mov
xor
fsts
adc
stos
jp
fistpll
add
push
subl
rcll
bnd
je
cld
pop
xchg
mov
out
jbe
lods
lods
inc
lret
pop
ret
cwtl
out
dec
push
cmp
dec
cmp
dec
mulb
rclb
jb
fnstsw
sti
dec
stc
scas
cmp
xchg
cli
mov
int3
stos
in
fs
inc
jb
xor
andl
movsl
test
jmp
sbb
shr
jns
mov
xlat
mov
bound
nop
pop
ret
mov
jl
xchg
stc
jne
imul
lods
mov
data16
lret
int
dec
jae
enter
cwtl
push
add
lret
add
mov
addb
fldt
popa
pop
scas
in
cmpsl
data16
ror
into
incl
push
loopne
sbb
fimuls
call
daa
mov
push
lahf
and
in
mov
jmp
dec
cli
dec
les
in
cmpsl
pop
inc
or
inc
inc
jmp
or
stos
lret
dec
mov
xchg
mov
in
nop
sahf
sub
jae
sbb
loope
adc
mov
sub
aas
aam
xchg
mov
mov
clc
movsl
aaa
sub
pop
mov
pop
dec
aam
push
dec
arpl
rolb
sbb
xor
rcr
std
mov
jle
test
mov
adc
cli
push
bound
ja
and
call
outsl
mov
cmpsb
adc
in
daa
sahf
cmp
pop
xchg
dec
cmp
sbb
pop
pop
pop
sub
xchg
add
fidivrl
mov
inc
pop
mov
out
adc
sbb
cmc
jge
add
inc
add
lock
sub
mov
loopne
push
jb
pop
xchg
int
sub
leave
ret
or
iret
aas
cmp
jle
mov
jo
xchg
gs
lock
xlat
jb
inc
push
xchg
fwait
packuswb
pop
movsb
and
cmp
call
xor
dec
stos
pop
stos
gs
add
scas
loop
sbb
mov
mov
or
jmp
mov
push
add
das
mov
je
pusha
fwait
mov
cmp
push
inc
in
or
jbe
and
stos
rcr
bound
xor
aas
xlat
mov
jno
add
pop
xor
imul
dec
aad
dec
cmp
int
xchg
cmp
mov
sub
cmc
mov
in
addr16
pop
test
outsb
sub
inc
daa
pop
jo
mov
mov
outsl
nopl
aas
jg
lret
xchg
mov
adcb
jbe
mov
and
adc
mov
addl
fsubl
push
out
dec
pop
popa
xor
mov
notb
icebp
adc
bound
sbb
jecxz
jno
xchg
pop
test
mov
lock
test
test
mov
add
sub
or
xor
iret
enter
aas
ss
lret
jo
cmpb
loopne
in
rolb
jns
jae
mov
fsubl
rorb
push
jbe
jno
xlat
add
out
aaa
stc
add
inc
or
ss
xchg
nop
sbb
xor
gs
add
out
shr
push
mov
das
sub
and
gs
xor
fsub
lret
inc
lock
rcll
insl
je
mov
xchg
mov
movsl
dec
mov
sub
or
adc
arpl
jp
mov
shl
loope
fwait
sub
fdivs
adc
dec
dec
pop
sbb
rol
mov
hlt
adc
mov
or
xchg
and
or
ficoml
jno
xchg
sub
movb
mov
sbb
mov
and
or
adc
popl
aad
imul
ljmp
xchg
or
es
loopne
ss
testl
jb
jbe
jle
out
mov
pop
inc
pop
aad
shl
sbb
negb
jb
push
cmp
das
xor
je
enter
push
stos
cmp
movsb
sub
mov
mov
push
pop
xchg
fistps
daa
call
inc
lahf
xlat
icebp
pusha
push
mov
pop
mov
rorb
fwait
js
test
adc
rcll
sbb
ret
cwtl
outsl
inc
xor
fnstenv
out
scas
das
sub
call
adc
adc
sbb
in
test
pop
clc
mov
pop
pop
xor
jno
in
push
jne
adc
es
push
jbe
push
jo
stc
sub
mov
add
pop
pushf
add
xlat
ficomps
aas
je
mov
fwait
cwtl
lods
cmp
adc
mov
add
lods
cmpsb
push
adc
inc
mov
sbb
mov
jecxz
jo
xor
add
roll
imul
dec
gs
fsub
out
fsubrl
cli
or
bnd
sti
sti
aad
and
add
jae
dec
insb
jno
mov
add
aad
jp
mov
jmp
and
inc
cmp
push
imul
lock
add
cmc
jb
out
in
shll
scas
jg
inc
and
insl
and
es
mov
mov
jo
int
stos
cmp
jno
xchg
xchg
add
daa
sbb
adc
hlt
lds
shll
push
lds
xchg
dec
faddl
pop
sub
push
push
pop
jle
loopne
pop
mov
or
cmpl
lret
cmp
pop
addb
inc
adc
daa
add
push
ja
enter
inc
mov
sarb
mov
cmp
int
jmp
inc
xchg
jo
xchg
adc
pop
movsb
mov
mov
inc
mov
cmpsl
call
mov
xchg
jbe
adc
and
add
dec
fwait
mov
lods
iret
add
es
add
roll
popf
and
mov
pop
es
fistps
sub
adc
xchg
les
push
test
loope
mov
and
cmp
loopne
fsts
mulb
std
aas
push
push
sarl
xchg
shrb
mov
outsl
xor
push
inc
pop
mov
cli
inc
sub
jl
xlat
movsl
adc
pop
ret
outsl
and
mov
mov
xchg
int
add
lods
subb
mov
xor
cwtl
or
sbb
jne
js
pop
mov
jg
lods
fimuls
repz
lock
mov
xchg
push
jnp
std
xchg
adc
sub
ds
xchg
jg
jae
mov
push
xlat
sbb
adc
or
and
xchg
stos
inc
adc
and
sub
add
sbb
mov
inc
ja
test
mov
stos
jbe
mov
dec
adc
mov
fs
adc
aam
mov
hlt
inc
adc
mov
nop
insb
fsubrp
adc
push
inc
cmp
lods
bound
mov
dec
sahf
sub
fldt
leave
loopne
cmc
adc
fdivl
or
xchg
adc
cmpl
lock
aas
imul
fsubs
test
shll
adc
jb
pop
stos
pop
mov
arpl
stos
inc
pop
loope
cwtl
jp
fwait
shlb
push
cmpsl
inc
aad
mov
nop
xchg
xchg
push
push
sub
xchg
mov
cmp
fbld
cmpsl
sbb
in
xor
cmp
add
cs
sbb
nop
fidivs
flds
push
stc
and
bound
pop
or
pusha
mov
in
mov
add
add
fstpt
nop
test
push
add
loop
pop
and
jo
int3
roll
shlb
loope
outsb
xchg
roll
and
cmc
ret
push
push
xor
xchg
test
push
cltd
call
cltd
jp
les
stc
adc
inc
push
dec
insb
push
insl
pop
test
stos
mov
mov
mov
aam
add
fcomps
data16
repz
cmc
or
fs
mov
mov
mov
stos
jge
nop
jg
mulb
mov
in
mov
mov
test
loopne
pop
and
gs
fbstp
cmpsb
xchg
cld
rcll
pushf
add
jo
orb
dec
es
sbb
xor
jb
push
mov
push
jns
or
or
and
in
mov
rclb
adc
clc
fsubrs
sti
add
fadd
jns
or
fistl
pushf
dec
in
push
xchg
fldcw
pop
ja
out
pop
mov
idivl
mov
pop
into
aaa
push
pop
lods
xor
mov
inc
stos
pushf
add
aam
inc
out
push
and
aas
int3
jmp
pushl
aas
sarl
inc
xor
jo
imull
call
pushf
hlt
sbb
ljmp
push
mov
pop
inc
jbe
sub
into
fcoml
sub
in
add
bound
adc
mov
sub
cmpsl
popa
jl
into
dec
shlb
and
pop
ret
xchg
or
jne
lret
inc
int
lods
repnz
pop
sub
add
mov
out
pop
fmull
xchg
dec
popa
sub
mov
xchg
pop
pop
cmp
divl
js
pop
lahf
aas
clc
stc
popf
or
cmpsl
mov
les
mov
cld
outsb
pop
mov
jl
sbb
jge
ja
das
imul
ds
or
fmul
int
sbb
test
or
aad
xchg
mov
repnz
mov
cmp
jo
ret
or
pop
iret
cwtl
cmp
push
mov
cmp
sbb
call
aaa
sub
call
push
je
mov
and
ds
xchg
or
dec
int3
cli
sub
in
test
fildl
add
or
mov
iret
scas
sar
ror
add
mov
fneni(8087
xor
lret
pop
xchg
jbe
int
pop
push
mov
mov
xchg
xor
dec
lods
mov
fsubs
xchg
mov
loope
sbb
cmp
dec
out
cltd
push
ret
dec
pop
pushf
mov
pop
in
add
frndint
jle
mov
jnp
fistl
test
repnz
push
mov
mov
in
jle
daa
outsl
dec
sarl
push
sbb
outsb
xchg
xchg
xchg
inc
or
jo
xor
bound
ret
lods
pushf
mov
xchg
sub
cmp
dec
test
or
lea
loop
or
outsl
mov
xchg
testl
shrb
inc
adc
jmp
push
in
mov
xchg
lret
cs
subl
call
mov
int
cmp
adc
pop
mov
sbb
sub
mov
xchg
jge
lods
cmc
call
push
jl
scas
test
es
fwait
cmp
lds
mov
iret
mov
xchg
gs
xchg
jnp
cmpsb
adc
push
out
add
fnstsw
push
cmpl
out
mov
repz
add
in
insb
pushf
xchg
cmpsb
jmp
pop
pusha
add
add
inc
mov
and
gs
js
push
test
push
pop
dec
call
insb
xchg
ja
dec
add
rcrb
daa
cmpsl
std
sub
out
scas
ret
jae
or
inc
adc
jbe
mov
inc
insb
lock
or
pop
sbbl
in
push
arpl
or
cwtl
stos
into
jne
stos
cmp
mov
aas
cmp
lret
inc
jne
jl
dec
xchg
mov
xor
and
sub
mov
cmpsb
cmpsb
in
es
mov
or
sarl
mov
sub
cmpsl
daa
sub
sub
pop
xchg
mov
movsb
repnz
in
ret
add
mov
fimull
stos
hlt
jnp
adc
aas
jae
shr
out
jno
cmp
das
or
or
lods
into
mov
scas
dec
out
fs
sarb
or
xchg
adc
xchg
leave
mov
push
stos
mov
mov
imul
push
shll
pop
mov
push
ret
mov
pusha
push
lret
or
pop
das
mov
jbe
mov
cmpsl
jl
push
adc
call
cmp
jno
xor
mov
lret
xchg
push
inc
and
xchg
pop
stc
ss
and
inc
sbb
rclb
stos
push
dec
sub
mov
shrl
cmc
jne
daa
or
mov
jns
test
mov
lahf
orb
jp
pop
mov
dec
inc
lcall
fwait
cltd
jno
and
jg
xchg
imul
test
and
sub
cmp
lods
subb
pop
mov
cmp
scas
push
dec
push
jno
push
jp
clc
js
out
in
mov
xchg
add
addr16
out
notb
mov
xor
pop
cmpsl
ja
dec
std
cmpsb
inc
sub
stc
pop
out
es
jo
or
in
cwtl
inc
insl
out
in
ss
icebp
lret
or
dec
les
mov
cmc
pop
xchg
cld
out
je
xor
jl
mov
jge
sahf
cs
loop
ss
dec
mov
and
lds
xchg
push
lock
out
hlt
scas
lahf
inc
je
nop
lret
test
add
sub
fcompl
imull
cs
push
test
idivb
aam
stos
xchg
pushf
lea
push
sbb
out
dec
mov
cmp
mov
sub
fwait
arpl
hlt
movsb
mov
jmp
lret
mov
dec
or
test
inc
jl
sbb
jo
xor
adc
sub
pop
xor
fidivrs
xor
shrl
sub
mov
fldl
fmuls
push
gs
push
popa
sbb
popf
adc
lcall
dec
hlt
inc
add
lret
push
fcoml
cmp
hlt
inc
in
and
push
out
imul
sti
jae
mov
and
arpl
out
subb
fcomi
pop
mov
sbbb
movl
jnp
sub
push
jno
scas
aad
sub
out
jp
movsb
and
lret
pop
mov
cwtl
or
mov
push
mov
xor
mov
ret
shrb
shrb
adc
xchg
orl
and
xchg
dec
jno
mov
dec
fs
inc
mov
aas
dec
sub
or
inc
xchg
xor
sahf
cld
adc
or
sbb
lcall
lods
add
push
and
mov
inc
jp
sbb
xor
pop
leave
mov
mov
es
popf
xchg
in
call
xchg
jp
cwtl
lea
pop
test
jae
jp
pop
movsl
sbb
mov
iret
into
push
and
sbb
int
cli
cmp
pusha
shl
jo
mov
lret
movsl
pop
fsts
mov
pop
and
loop
sahf
mov
push
enter
or
mov
or
mov
int3
or
into
ljmp
push
test
jp
fidivrl
out
add
ret
enter
inc
cmc
mov
in
and
pusha
in
and
cli
mov
lret
mov
sbb
and
inc
int
mov
out
sti
pop
mov
pop
push
testl
adc
inc
outsb
shll
icebp
movd
test
xor
and
jne
int
mov
cmp
cmp
mov
ret
push
out
into
xchg
inc
loop
mov
xchg
inc
fnstsw
andl
cmc
mov
ja
pop
rcll
pop
pop
and
shll
cld
out
cmp
lcall
orb
adc
rorl
jg
in
push
jns
cltd
mov
pop
out
fidivs
int
cltd
in
jns
cmpsb
mov
out
jne
repz
or
fcomi
jg
cwtl
mov
loop
cmpsl
mov
addr16
fwait
out
push
pop
ror
mov
mov
add
out
lret
sub
je
dec
xchg
jno
push
loop
sbb
sbbl
jo
cmp
cs
xchg
fs
jbe
or
jmp
cmp
scas
xor
xor
pop
sahf
push
add
push
cmp
stc
in
aas
mov
push
sbb
jae
pop
inc
and
mov
cltd
mov
dec
push
adc
sti
ret
xchg
xor
add
pop
jb
scas
push
mov
fmuls
int3
cli
dec
stos
stc
lret
mov
lret
aam
mov
cmp
pop
repz
adc
lds
popa
adc
insb
std
adc
add
ret
into
rcl
bound
jle
movsb
adc
aaa
lods
sti
push
call
popa
test
das
lret
dec
pop
dec
std
mov
loop
lret
jmp
dec
sub
setp
adc
mov
test
stos
mov
jno
out
jmp
in
adc
xchg
jo
cli
or
mov
pop
mov
add
outsl
sub
inc
inc
pop
nop
fwait
in
mov
fcomip
aam
adc
mov
push
dec
aaa
nop
mov
sahf
lock
xor
loop
adc
mov
xor
out
sbb
out
jns
sub
add
movsb
mov
lret
insb
jo
in
mov
lock
aaa
pop
cld
lds
dec
incl
enter
adc
push
inc
and
xchg
out
js
mov
inc
cltd
push
ss
sarb
sarb
xchg
jl
mov
cwtl
lds
pop
add
aam
jbe
mov
fwait
push
jnp
test
mov
in
movsb
fs
mov
inc
xlat
and
call
mov
dec
negl
jno
cmp
xor
sub
mov
icebp
ror
push
lret
out
shl
pop
outsl
arpl
cmovge
sub
xchg
lock
repz
push
or
or
out
ljmp
in
inc
mov
movsl
loope
loope
stos
inc
or
fdivl
test
clc
mov
in
leave
push
int
repnz
cmpsb
dec
lcall
ror
mov
adc
cmp
add
mov
sub
repz
inc
mov
push
vporq
or
push
and
push
push
ds
lret
dec
or
pushf
push
pop
movsb
arpl
loop
xchg
jbe
mov
iret
lahf
and
outsb
leave
sbb
dec
aam
sbbl
and
mov
pop
cmpsl
aas
enter
jp
adc
enter
xor
scas
nop
ret
bound
ret
mov
imull
adc
sti
arpl
and
add
mov
int
dec
lcall
imul
inc
inc
jecxz
mov
insb
xor
pop
xor
and
lahf
mov
ja
add
fwait
in
inc
xchg
add
pusha
xchg
or
xor
pop
and
and
cld
mov
cmp
push
imul
jbe
outsb
cmc
sahf
adc
xor
nopl
inc
jno
and
sub
in
daa
das
jmp
cld
mov
push
lret
inc
aam
lock
pop
adc
aad
movsb
adc
mov
xlat
jmp
push
sub
iret
mov
fnstcw
mov
ret
fsts
sub
pop
or
push
outsb
pop
mov
fwait
xchg
sbb
movsb
sahf
mov
xorb
mov
aam
push
xor
jle
test
dec
pop
jmp
aam
xor
leave
jne
jns
loopne
jns
cmp
mov
loopne
in
push
mov
and
inc
adc
outsb
in
roll
sarl
shrb
pop
sub
fs
jl
ret
aaa
jecxz
dec
shlb
mov
inc
inc
xor
rcr
hlt
call
jne
cmp
fwait
shll
jns
mov
mov
add
inc
out
cs
std
in
je
int
sbb
popl
loope
scas
popa
and
and
std
movsb
aam
bound
add
jle
movsb
inc
nop
shll
cli
mov
add
pop
mov
mov
fwait
scas
imul
imul
test
pop
adc
pop
call
roll
xor
mov
pop
out
mov
out
mov
jg
xor
pop
scas
movb
ljmp
adc
das
or
jae
mov
dec
cmpsb
scas
xor
push
mov
jnp
xchg
xchg
vdivps
jmp
jns
add
adc
movsl
mov
xchg
cmp
mov
scas
js
test
stc
cwtl
addr16
xchg
lcall
outsl
inc
mov
clc
jmp
cmp
int3
stos
mov
push
mov
sub
mov
mov
mov
test
cmpsl
mov
xchg
xor
repz
mov
lcall
movsb
sbb
xor
dec
xchg
mov
sub
nop
or
xor
pusha
xor
and
xchg
test
and
jae
out
mov
aad
lods
icebp
shll
or
sub
push
xchg
push
leave
lret
andb
lods
mov
pop
scas
and
mov
push
xor
sbb
mov
loop
outsb
adc
sbb
ljmp
fdivp
das
cmp
inc
add
out
shlb
out
adc
sbb
mov
cmp
fwait
and
xchg
cvtdq2ps
insl
push
and
pop
sub
and
sub
cld
adc
mov
outsl
iret
cmpb
test
jg
dec
js
and
xor
pop
push
dec
mov
cmp
popa
clc
movsb
jb
rolb
ret
mov
das
test
and
stos
mov
test
mov
sar
add
jecxz
inc
push
es
pop
arpl
aam
mov
push
testb
rcrw
push
sarb
jns
jae
ljmp
inc
dec
movsb
in
rcrb
jb
cs
scas
sbb
or
or
and
inc
movsl
test
cmp
inc
cmp
popf
jns
repnz
dec
cmp
scas
push
inc
jl
mov
mov
movsl
mov
mov
or
push
scas
jg
test
xchg
scas
decb
lret
mov
lar
add
fcmovb
and
pop
xor
rcrb
xchg
pop
pop
lret
inc
cmpsl
cmp
add
jnp
lock
adc
mov
ss
mov
iret
into
dec
enter
ds
aad
sbb
repz
enter
or
or
dec
loopne
dec
sub
pop
lcall
xor
mov
jnp
pop
xchg
xchg
aaa
arpl
pop
adc
pusha
mov
icebp
cmp
imul
jo
sub
push
pop
pop
cmpsl
and
jmp
push
cmp
xor
add
jg
mov
das
fwait
mov
icebp
xchg
mov
sbb
fucomp
push
sub
and
data16
outsb
mul
dec
lahf
es
push
loope
addr16
pop
in
fs
cmc
add
notl
pusha
mov
mov
dec
push
aaa
jbe
mov
fmull
push
lea
dec
mov
popf
mov
rolb
xchg
sarl
lds
pushf
das
mov
and
repz
stos
cwtl
push
test
sbb
cs
cli
cs
mov
ljmp
dec
xor
sub
std
movsl
push
scas
imul
dec
and
pop
call
out
sbb
mov
xchg
lret
or
mov
ret
aaa
fdivrl
add
pop
jo
jno
std
jo
insb
je
gs
and
dec
repz
jbe
loope
test
rol
pop
test
mov
fildl
lods
jae
icebp
test
mov
mov
mov
mov
push
sbb
and
icebp
add
pop
and
mov
push
mov
repnz
xchg
out
sbb
pop
adc
fldenv
and
outsb
loop
xlat
daa
lret
cmp
dec
adc
lcall
call
arpl
lods
mov
push
push
pop
inc
mov
push
ds
adc
sub
fstl
mov
cmp
dec
xchg
add
sbb
jmp
xchg
jnp
lds
rcrl
push
cld
adc
in
movsl
nop
mov
and
xor
int3
jl
sbb
fldcw
stos
jp
push
xchg
push
pop
xor
inc
aam
push
and
cmpsb
adc
out
pop
and
fs
pop
jl
lea
push
push
lock
mov
mov
pop
mov
into
pushf
call
mov
adc
push
imull
rcr
iret
xchg
add
inc
repz
leave
sbb
test
mov
xor
stc
jo
jbe
outsl
fbld
sbb
aam
and
scas
pop
mov
mov
jbe
js
test
testb
loope
sub
push
dec
and
jmp
xor
xor
in
cli
fists
out
mov
insb
fadd
in
dec
add
sub
movsb
and
xchg
mov
fdivr
dec
lods
sahf
fisttpll
dec
rorb
das
adc
xor
int3
icebp
mov
fldt
loop
test
mov
imul
sbbl
cmp
xchg
pop
outsb
out
in
push
cmpl
jg
or
std
cmp
fwait
aad
test
daa
out
mov
mov
out
cmovne
push
mov
test
adc
adc
sub
icebp
and
movsl
imul
imul
or
push
jne
insb
lods
out
xchg
sbb
or
scas
arpl
inc
and
mov
aas
sub
jp
lcall
lods
fwait
mov
clc
scas
pop
outsl
pop
inc
stos
addl
push
sub
fdivrs
lcall
stos
aas
ss
push
sub
inc
pushf
mov
rclb
jecxz
mov
and
cmp
in
or
dec
jmp
icebp
inc
inc
movsl
and
insb
int3
jg
outsl
int3
loop
jns
ds
and
sarb
and
ja
call
xchg
cmp
mov
aam
cwtl
inc
pushf
clc
pop
aad
cmp
fxch
out
xchg
pusha
cmpsb
mov
push
mov
shlb
mov
xchg
sub
xchg
mov
jno
in
in
out
loope
movsb
xchg
pop
mov
arpl
hlt
test
xchg
cwtl
scas
nop
std
jg
je
or
loope
in
cmp
mov
or
inc
out
out
xchg
pushf
cmpsb
das
mov
xchg
jmp
mov
mov
rol
jg
mov
sub
inc
jo
adc
shr
sub
pop
arpl
int3
xlat
xchg
dec
add
mov
sub
mov
pop
push
mov
popf
testl
rcrb
jecxz
push
aad
nop
push
push
jg
sbb
xchg
or
stos
jge
adc
mov
insl
sbb
jmp
jp
jg
add
movsl
mov
out
inc
jle
jne
xchg
sbb
cmp
lods
and
mov
sti
cmp
ss
add
aas
xchg
sub
mov
push
pop
ja
jnp
imul
xchg
jl
pop
cmp
call
mov
mov
in
ljmp
clc
adc
sbb
sarl
pop
and
push
loopne
incb
fstpt
jecxz
lret
lods
frstor
fnstenv
sub
mov
push
and
test
mov
je
dec
cmp
pop
mov
sbb
jne
sub
pusha
xor
mov
rolb
dec
nop
xchg
in
xor
movl
jmp
push
movsl
inc
outsl
dec
xor
pop
xchg
fs
in
pusha
mov
nop
and
mov
cs
neg
repz
mov
nop
inc
lret
ss
inc
xor
push
lcall
cltd
pop
rorl
insl
loop
sbb
fdivs
cmp
shl
adc
addr16
mov
lods
jp
mov
vphaddbq
inc
pusha
cmp
jge
jge
fs
ret
ljmp
jo
rclb
fsub
sahf
lock
sub
popf
add
dec
out
cmp
lret
les
in
push
lea
stos
aam
imul
xor
pop
aam
jg
or
jl
cmp
lret
lea
jle
xchg
pop
mov
push
push
movsl
das
lcall
push
or
xchg
pop
shrl
xor
test
loop
mov
cli
iret
fnsave
imul
add
sbb
jle
pop
in
xor
cmpsb
stos
fisttpll
data16
pop
cltd
mov
inc
int
dec
call
jmp
and
cmp
inc
mov
sub
adc
addb
and
inc
icebp
xor
and
push
add
dec
jo
leave
lods
and
adc
outsb
cmp
cmp
sub
xor
cmpb
xor
icebp
xor
lret
fisubs
pop
pop
outsl
stos
dec
push
jae
jecxz
insl
pop
cmp
stos
js
lcall
sub
sbb
inc
outsb
test
mov
shr
cmpl
mov
ds
inc
incl
sub
add
out
lahf
jle
push
movl
mov
jmp
lret
loop
fwait
test
lock
cmpl
shll
pop
xor
repz
jno
fs
pop
mov
mov
stos
in
or
jbe
int
lret
fistl
fisubrs
xchg
xchg
js
sbb
dec
loopne
hlt
cmp
fdivs
adc
add
inc
lahf
outsl
and
pop
mov
pop
hlt
xor
xchg
imul
test
mov
dec
mov
mov
outsb
push
pop
popf
in
sbbl
or
pop
and
mov
xlat
stc
movsl
push
int
sbb
lret
es
mov
mov
dec
adc
mov
or
or
enter
or
negb
cltd
dec
sti
push
into
jmp
cld
lock
mov
or
sbb
test
int3
push
jae
repnz
mov
stos
push
mov
mov
or
mov
sbb
fisttpll
lods
mov
mov
outsb
negb
jge
gs
pushf
mov
ret
add
sub
loopne
aad
pop
rorl
aam
jnp
or
arpl
loope
mov
repnz
add
mov
lret
shll
cmpsl
xor
jmp
fcomps
push
pop
lods
inc
repnz
sbb
ss
popa
and
stos
addr16
jne
pusha
pop
outsl
mov
adc
add
sub
or
pop
cmpsb
or
in
and
sub
inc
sbbl
add
cmp
cmpsl
outsb
dec
je
imul
add
push
mov
xchg
aaa
push
cmp
cmp
push
cmp
lock
xor
xor
movsl
arpl
jmp
out
xchg
dec
or
xchg
lock
jmp
xor
cltd
gs
out
mov
jbe
dec
push
bound
xor
pop
mov
mov
iret
pop
out
push
xor
outsl
jae
pop
std
inc
not
mov
out
lods
inc
out
push
mov
lahf
aam
jecxz
addr16
pop
mov
vpunpckldq
cli
inc
xchg
xchg
pop
or
or
mov
js
sub
nop
mov
std
or
mov
ret
add
out
aaa
dec
dec
inc
jge
and
jl
scas
data16
mov
scas
mov
int3
cmp
fmull
addb
fisubl
jne
out
iret
mov
mov
pop
loopne
jne
adc
inc
mov
gs
fucomi
and
and
outsb
cmp
enter
sti
out
stos
push
pop
idiv
push
pop
lcall
repnz
push
outsl
mov
dec
xor
pop
mov
push
dec
mov
subl
jns
arpl
leave
mov
jg
xchg
sub
mov
lahf
mov
mov
dec
rclb
lods
popa
xor
scas
imul
outsl
stc
test
fidivrs
nop
movsl
add
jge
mov
and
ds
mov
icebp
dec
and
inc
cmp
jns
aas
mov
ljmp
sub
mov
sub
daa
inc
subl
fcomi
cmpsl
adc
pop
adc
pop
popf
push
jne
fimull
xchg
or
cs
sbb
mov
fcompl
mov
iret
je
jns
inc
mov
pop
add
dec
or
jae
xchg
movsl
adc
cli
rol
inc
movsb
inc
mov
inc
aas
fnstenv
cmp
sbb
in
and
lahf
xchg
mov
push
adc
clc
mov
cmpsl
xchg
xor
in
cmpsb
add
gs
push
jmp
jle
sbbl
inc
and
adc
mov
inc
xchg
fadd
in
add
call
jl
push
and
ror
pop
das
mov
and
lahf
jns
sub
lcall
xor
xlat
and
cld
test
jns
ret
sub
lahf
adc
xchg
xor
int3
lret
add
fnstenv
dec
cmp
fiaddl
mov
jg
inc
jecxz
sub
adc
cltd
pop
lock
or
das
dec
pop
lret
test
faddl
rolb
sti
and
in
leave
jle
inc
dec
xor
pusha
aad
icebp
dec
push
mov
xchg
daa
imul
stos
push
jle
or
data16
jecxz
les
addl
xchg
push
sub
xchg
int
ret
ljmp
inc
mov
ret
push
cltd
sbb
dec
mov
je
or
adc
and
xor
dec
cmpsl
jg
sub
cli
inc
fisttpll
mov
into
testl
aas
sahf
inc
inc
jnp
cmpsl
pop
adc
fnstenv
mov
mov
or
jno
add
repz
xor
pop
imul
iret
daa
loop
sub
and
push
arpl
jne
sub
mov
rcr
outsl
jmp
cmp
pop
adc
mov
jecxz
sbb
stc
mov
fs
sbb
mov
mov
and
mov
nop
mov
hlt
inc
aas
and
mov
outsl
mull
movsl
mov
jb
sbb
pop
scas
shl
jl
jno
pop
popa
sbb
jecxz
stos
and
sbb
xchg
push
jnp
ds
cltd
or
mov
dec
sbb
dec
call
mov
enter
inc
inc
xor
ja
aaa
adc
pop
jb
out
je
fcomps
out
fistl
mov
mov
cmp
cltd
inc
and
adc
pushf
hlt
out
dec
sahf
sbb
dec
inc
repz
cmp
inc
pop
cli
repnz
mov
or
jle
xlat
ret
aas
adc
stc
negb
loopew
mov
adc
mov
outsb
inc
add
mov
pop
pushf
push
fdivrl
jp
negl
dec
pop
mov
rorb
mov
lods
lock
ds
mov
daa
rcrb
inc
dec
notb
das
jo
push
leave
xchg
jl
repz
lea
subb
int3
cmp
lods
xorb
push
aaa
push
lods
mov
ret
daa
pop
push
roll
inc
mov
int3
xor
adc
jns
cli
xchg
dec
out
xor
push
dec
aaa
mov
ss
dec
inc
jmp
xor
lea
fwait
jbe
addr16
add
or
roll
ds
sbb
and
lcall
jp
dec
dec
pop
shlb
nop
cmp
xor
daa
xor
jg
xchg
call
sbb
mov
and
mov
and
adc
testl
push
jl
enter
jb
sbb
adc
js
mov
push
popa
mov
int
add
cltd
out
jge
xor
jae
outsl
jecxz
xor
sbb
rcrl
icebp
loopne
dec
pusha
add
jae
mov
cmc
rcl
lret
mov
sbb
push
sbb
or
shlb
pop
or
mov
das
sti
and
aam
icebp
or
outsl
fcom
stos
out
stc
pop
stc
xor
cmpsl
and
jmp
insb
cmc
push
sbb
lret
push
repnz
inc
gs
dec
adc
mov
jne
call
adc
push
mov
gs
aam
kmovw
jmp
mov
stos
jno
push
or
test
imul
ljmp
outsb
jl
sbb
xchg
cmp
or
mov
scas
inc
adc
ret
iret
xchg
int
pop
push
pop
divl
sbb
in
rcll
scas
mov
push
push
loope
add
jle
mov
jecxz
add
push
call
cmpsb
cmp
nop
push
lea
push
pop
push
rcl
testl
mov
and
outsb
jne
aad
push
daa
inc
popf
lods
stos
push
jb
lret
inc
xor
jo
repz
mov
push
xlat
push
add
gs
adcl
loopne
mov
xor
or
add
xchg
std
and
push
inc
inc
jp
sub
lods
sbb
mov
mov
jne
xor
nop
fstl
sbb
aaa
test
push
xor
add
pop
loope
scas
scas
inc
aad
faddl
loope
or
adc
nop
inc
mov
jmp
xor
andl
mov
insl
setp
insl
mov
and
ret
push
cmpb
pop
cwtl
mov
inc
push
insl
pop
jne
test
shlb
dec
inc
ret
fidivrl
jns
dec
mov
mov
xchg
pusha
dec
push
dec
jge
or
in
or
mov
popa
xchg
into
jo
mov
xchg
jle
inc
inc
int3
mov
cmpsl
lahf
mov
scas
mov
cmp
xchg
inc
lods
cmp
ret
scas
outsl
mov
sti
fs
ds
adc
mov
nop
mov
jle
inc
and
inc
insl
xchg
mov
mov
mov
add
cli
mov
dec
repz
out
cs
out
and
mov
mov
adcl
pop
push
xor
add
mov
fidivs
jae
pop
mov
dec
enter
lds
test
xor
lcall
addb
test
aad
xchg
pop
sbb
idiv
push
ds
arpl
xchg
sbb
fisubs
js
ljmp
lods
lcall
testb
mov
sbb
ds
pop
dec
push
push
loope
jo
ja
mov
xchg
loop
into
adc
or
adc
mov
and
fisubrl
clc
cmp
mov
inc
pusha
ret
push
mov
push
rorb
daa
in
add
repnz
in
mov
pop
fs
pop
cmpsb
shrl
pop
inc
pop
push
cmp
movsb
push
in
lahf
repnz
nop
popa
push
out
out
inc
out
xchg
loopne
in
lcall
cmp
jle
add
insl
cwtl
xchg
lods
adcl
or
pop
jg
rclb
mov
and
add
ds
cwtl
jne
sub
xchg
jbe
push
arpl
mov
pop
dec
or
scas
inc
pusha
arpl
or
sarl
push
hlt
jbe
push
pop
aaa
divb
ljmp
rcll
push
les
push
aad
btsl
test
ficompl
xchg
add
pushf
sahf
mov
sub
sti
and
das
sub
mov
scas
fnstcw
insl
push
cmc
or
or
adc
cli
jmp
mov
andb
jecxz
out
mov
scas
movsb
daa
pop
jns
push
notb
movsl
pop
in
pop
das
pop
jp
mov
xlat
xchg
add
pop
push
sbb
lock
lret
add
cmp
shl
insb
int
in
xchg
fucom
fldcw
cs
mov
cmp
add
mov
push
mov
stos
or
xchg
dec
push
test
cmp
popf
hlt
and
push
in
sbb
pop
orl
jne
aas
imul
lds
cli
stos
inc
stos
lock
and
les
mov
loop
mov
push
push
adc
imul
fsubr
mov
fwait
cmp
jmp
int3
sub
int
stos
std
inc
xchg
mov
testb
and
xchg
jae
mov
ss
lret
inc
or
mov
pop
pop
test
iret
fwait
mov
gs
mov
jge
imul
and
mov
jp
jne
or
add
add
sarb
adc
call
aam
dec
sub
shl
add
dec
push
aas
fidivrl
mov
jb
int
mov
adc
push
jbe
or
push
and
imul
imul
repnz
sbb
and
inc
pop
inc
pop
lods
lds
pop
or
mov
aas
jmp
push
dec
cmpsl
fwait
jp
sbb
rorb
jns
inc
cmp
adc
stc
aaa
pop
or
push
stos
dec
int
push
shl
push
ret
cmp
out
push
pushf
movl
xor
adc
push
lock
and
inc
adc
roll
cmp
loope
push
jmp
pusha
sbb
ret
fidivrs
lcall
push
fstps
push
mov
jnp
int3
stos
or
cwtl
pop
sub
or
push
or
sub
loope
xchg
cmpsl
das
add
cmp
push
cmp
pop
in
mov
inc
movsl
xchg
std
cli
sub
xchg
push
jnp
adc
cli
pop
adc
xor
jne
push
xchg
lcall
fs
addr16
cli
aam
jnp
pop
fcmovu
cmc
dec
cmp
or
jnp
test
rcr
mov
js
mov
std
adc
add
mov
fwait
out
lods
ret
dec
sbb
mov
ja
leave
addl
in
jle
icebp
adc
divb
adc
mov
sbb
js
xchg
or
or
push
xor
cmpsl
xor
inc
in
push
inc
dec
gs
mov
cmp
imul
mov
sbb
pop
mov
pop
add
mov
sbb
aad
in
inc
ljmp
fldenv
xor
ret
add
add
rcr
in
addl
cmp
mov
add
das
ds
push
movups
sub
out
sub
jbe
sub
imul
fcmovu
pushf
and
pop
sub
and
lods
push
fcompl
adc
mov
add
push
mov
dec
fstl
add
jp
fcoml
mov
add
out
imul
jmp
mov
aaa
in
neg
out
iret
jp
hlt
jb
cmp
test
pushf
sbb
data16
jae
jecxz
out
inc
std
adc
popf
dec
in
adc
divb
adc
or
lahf
js
add
pop
loopne
clc
mov
dec
cli
and
cld
cmp
pop
push
fs
xrelease
je
mov
je
mov
movsl
jnp
repz
iret
push
adc
mov
and
ret
cmp
and
int
mov
or
inc
sbb
inc
adc
dec
mov
fnstenv
mov
sbb
popf
cmpsl
out
mull
add
cs
xlat
out
les
push
daa
cmp
jl
stos
clc
dec
fcoms
int
stc
sti
icebp
hlt
push
rorb
or
dec
jl
aas
and
cmpsl
stos
pop
data16
lret
sub
or
jns
xchg
add
mov
inc
leave
insb
and
sbb
imulb
lret
imul
push
mov
lret
sub
js
rorb
sahf
mov
cmp
mov
clc
xor
je
jl
into
cmp
mov
sub
enter
nop
pop
push
mov
movsb
and
xchg
sbb
xor
mov
cmpb
pop
scas
icebp
and
sar
cld
jecxz
mov
adc
inc
sbb
xchg
addb
js
iret
jnp
test
pop
add
cmpsb
xor
aam
dec
cmp
jg,pn
jae
es
jns
xchg
mov
idivb
scas
inc
leave
add
and
and
push
jmp
in
movsb
add
sbb
fcompl
mov
ja
jns
or
dec
ret
leave
pop
lods
outsl
popa
sarb
loop
mov
outsb
aad
mov
inc
push
loope
shll
and
add
in
aam
jecxz
jmp
pop
ds
scas
xor
jg
outsl
mov
pop
stos
jg
xor
inc
mov
aaa
mov
lahf
jne
mov
add
xor
out
or
push
mov
push
fsubs
cmp
or
mov
sbb
and
lock
pop
and
mov
fnstenv
arpl
sbb
cmp
les
mov
adc
jecxz
ret
adc
test
imul
ret
repz
pop
cmp
jns
test
stos
fistpll
mov
pop
popa
fs
imul
or
cmp
bound
xchg
ja
mov
jb
or
push
lret
adc
jne
mov
xor
push
add
cltd
neg
dec
ljmp
and
mov
xor
or
data16
mov
rcrl
jae
pop
sbb
test
lret
lods
adc
rorl
bnd
sub
add
test
push
pop
fadds
insb
scas
outsb
mov
push
popf
lahf
cmp
in
ret
insl
repz
les
xor
packsswb
mov
push
xor
lret
jo
jge
test
sbb
jae
jbe
add
mov
cmpsb
jmp
sub
mov
adc
jg
fstpl
aaa
lret
pushf
fnstsw
jo
push
or
es
jne
cltd
fsubl
ret
test
clc
mov
mov
inc
mov
push
add
adc
shrb
sbb
cld
rclb
and
stos
sub
or
neg
cwtl
out
mov
loope
xor
jmp
and
jne
and
mov
test
movsl
daa
sbbb
push
mov
dec
les
sbb
sbb
cmpsb
loop
stc
pop
stos
nop
outsl
aad
add
jmp
pop
dec
dec
out
lahf
popf
in
sub
lods
push
xchg
xor
int
jo
call
js
stos
xor
push
mov
addr16
out
mov
jl
pop
fdivrl
pop
shl
ljmp
inc
stos
arpl
sahf
fstps
pop
popl
into
xchg
inc
push
xor
insl
rcl
sbb
push
xchg
dec
ret
mov
jb
push
test
into
leave
lcall
rcrl
push
xchg
in
aad
mov
mov
repnz
pusha
stos
aad
lods
movsb
push
push
dec
enter
lods
insb
in
fsubs
icebp
mov
add
jle
lahf
xchg
sbb
jb
mov
nop
loope
xchg
pop
xor
mov
fnstenv
ja
mov
or
push
not
add
rcrb
outsb
xorl
out
icebp
push
mov
mov
adc
mov
cmp
xor
icebp
push
cwtl
inc
sub
dec
in
sub
mov
add
dec
gs
sahf
stc
adc
jnp
jmp
dec
fdivl
push
cmpsb
divl
mov
jp
sub
jb
sub
sub
or
insb
shl
mov
inc
sbb
or
cmpl
aaa
cmpl
daa
scas
ret
mov
and
lea
andb
mov
out
inc
push
fidivrl
mov
sbb
mov
sbb
mov
mov
in
sbb
int
loop
ret
mov
pop
pop
xchg
xchg
shrb
adc
dec
aaa
fmuls
ds
push
mov
out
popf
negb
add
stc
push
push
fs
mov
jp
notl
ret
shlb
sahf
pop
adc
pushf
mov
stos
scas
pushf
mov
and
mov
add
enter
xchg
lret
movsb
test
pushf
and
cltd
js
fwait
icebp
mov
pop
scas
cld
xlat
incl
xchg
inc
cmpb
pop
push
jno
imul
loope
rcrl
loopne
into
cmpsl
das
xor
push
aaa
inc
shl
subl
rcr
dec
movsb
data16
lea
jl
rclb
sub
fpatan
orl
mov
fcmovu
lret
in
into
add
das
outsl
test
jmp
adc
outsb
stos
jae
fidivrl
scas
cmp
aaa
lret
dec
adc
pop
adc
aad
call
cmpsb
pop
subl
mov
push
xchg
inc
jecxz
jp
dec
mov
and
mov
and
lahf
out
ret
fwait
sbb
cmp
pop
dec
or
sbbb
arpl
push
lret
push
idivl
xor
mov
sub
fldcw
loop
les
add
mov
add
stc
sub
pop
in
dec
aaa
and
subl
bound
mov
push
stc
push
sbb
lock
ret
adc
in
call
orb
clc
nop
or
dec
cltd
popf
mov
mov
jne
jno
mov
sbb
sti
sbb
pop
aam
pop
xchg
push
lea
pop
adc
inc
les
loope
in
inc
in
fwait
pop
and
xor
pop
mov
jecxz
mov
mov
hlt
pop
pop
sbb
out
cltd
sahf
test
bound
scas
roll
cmp
add
mov
jb
mov
fs
std
cmp
cld
aad
jns
add
lods
jo
iret
cmpsl
sbb
in
push
sbb
sahf
pop
xchg
test
outsl
dec
scas
rolb
sti
enter
loope
aad
or
repz
cmpsl
mov
xor
cltd
mov
push
ficoms
xchg
addr16
pushf
stos
lds
mov
sti
test
loopne
hlt
lahf
fisubs
ret
jns
cmp
movsb
xor
xchg
ja
sub
and
out
or
pop
repnz
inc
cwtl
push
push
mov
jb
call
pop
ds
jmp
lea
xchg
out
lds
ret
adc
lock
lret
mov
loop
jne
inc
fstl
mov
out
dec
rcrb
dec
dec
iret
outsl
push
pop
pop
gs
sbb
push
mov
dec
sbb
lods
jb
jae
pushf
xor
clc
fwait
mov
verw
and
jp
jp
push
adc
xor
jno
jmp
std
bound
mov
outsl
or
mov
test
sub
cmp
push
insl
pop
cltd
and
mov
mov
pop
js
xchg
and
cmp
push
rep
fstl
sahf
fnsave
sub
dec
in
or
scas
or
in
inc
les
cmpb
inc
fninit
aas
imul
cmpsl
in
dec
pop
fmuls
int3
lahf
push
sti
repz
pushf
lcall
js
xchg
or
data16
fbstp
mov
xlat
aas
xor
mov
out
lock
dec
and
push
push
sbb
aam
rcr
sbb
cmp
das
pop
cmp
xor
and
pop
rorb
imul
clc
repz
lahf
xor
movb
and
inc
push
pop
mov
push
dec
popf
rcr
inc
push
push
mov
ret
aad
ret
push
inc
jbe
adc
or
imul
mov
scas
in
and
xchg
mov
mull
cmpsb
sbb
in
fwait
mov
decl
test
mov
clc
xor
and
orb
sbb
scas
rorb
inc
rep
cs
fistpll
mov
test
adc
dec
sbb
in
mov
lret
lods
jecxz
cwtl
les
add
cmc
mov
hlt
fistl
inc
insl
gs
mov
add
sbb
mov
lods
mov
cmpsb
pop
fisubl
pusha
outsb
adc
xor
leave
insl
dec
fisubrs
mov
and
insb
add
pusha
sbb
and
pop
xor
cltd
fisubs
push
cli
in
pop
add
dec
mov
jbe
add
outsb
mov
mov
movhps
loop
jnp
jns
or
popf
insl
movsl
mov
or
push
push
nop
popf
int
pop
mov
mov
inc
in
pop
inc
lods
pop
adc
xchg
outsl
pop
pop
insw
xlat
adc
int
xor
mov
xchg
xchg
ret
mov
inc
inc
dec
cmp
sbb
inc
add
lret
ja
outsl
pop
repnz
shrb
dec
popa
xor
lret
inc
mov
in
in
movsb
mov
pop
jno
and
aaa
dec
sbb
jbe
add
negl
push
mov
test
rolb
fnstsw
sarb
test
xchg
adc
mov
xor
arpl
inc
push
movsl
or
lahf
jg
inc
mov
add
inc
and
mov
and
xchg
pop
in
cs
jle
cmp
shlb
sub
testl
cmp
xchg
dec
arpl
sbb
push
and
lcall
lods
and
lea
cmp
add
imul
mov
add
gs
mov
movsb
sahf
cmc
jmp
dec
bound
roll
mov
sbbb
popf
jb
loop
xorb
sub
pop
cmpsb
pushf
in
mov
addr16
add
test
rcll
addr16
xlat
add
jl
fldenv
adc
push
or
dec
xchg
int
push
and
ja
imul
sbb
jns
je
add
jmp
push
ret
aas
fadds
jbe
cld
cmp
dec
test
imulb
out
das
dec
ss
cltd
adc
jne
jmp
scas
arpl
mov
outsl
inc
adc
shlb
pop
sbb
mov
mov
iret
mov
ljmp
adcb
and
dec
lods
shrl
adcl
movl
shll
addb
stos
out
mov
push
lahf
popf
rcrl
mov
icebp
adc
ljmp
es
loopne
sarl
xor
mov
std
mov
dec
negb
jmp
int
hlt
fmuls
dec
ja
lea
gs
movsl
mov
test
arpl
mov
stos
xchg
mov
std
mov
mov
and
push
xchg
ret
out
pop
ficompl
dec
mov
pop
push
lea
or
and
pop
fld
ret
and
dec
dec
pusha
or
out
mov
pop
pop
ja
push
cli
jp
repnz
outsl
imul
cmp
ficomps
cmc
sbb
lret
add
add
add
add
add
add
adc
add
int
stc
xchg
push
ss
or
test
sub
int
stc
xchg
push
ss
int
stc
xchg
push
ss
mov
mov
pop
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
xlat
aad
loopne
rcll
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
adc
imul
adc
add
add
aam
add
enter
fnstcw
jge
add
add
or
push
cmp
pop
addl
add
test
add
add
add
pushf
rolb
adc
add
push
cpuid
cmp
add
add
cmpsl
iret
lret
outsb
or
add
rolb
add
popf
or
add
add
add
add
add
popa
insb
pop
inc
add
rolb
add
mov
add
add
add
add
add
add
add
inc
aad
add
add
add
add
or
add
add
add
gs
add
imul
mov
add
add
sbb
add
add
add
gs
add
sbb
add
insl
sub
xchg
add
add
sub
xchg
cmp
and
int3
inc
add
push
add
add
js
add
add
add
sub
add
adc
add
sub
add
add
testb
add
push
add
add
and
add
add
add
add
cmp
add
xor
add
or
lds
inc
jle
std
mov
adc
jno
dec
dec
jno
js
jo
inc
popa
xchg
xor
shrl
addr16
mov
jae
movsb
xchg
nop
cmpb
dec
loop
test
pop
jns
bound
push
dec
inc
leave
cmp
push
or
add
dec
push
ret
inc
cmc
mov
xor
aad
ss
cmp
outsb
push
mov
imul
call
or
add
push
clc
movsb
cmp
adc
push
add
xchg
mov
jle
pop
dec
in
add
xor
call
fildll
ds
push
xchg
call
xchg
mov
adc
les
lods
mov
insl
ror
testl
cwtl
dec
lret
add
mov
es
in
das
mov
cmp
cmpsb
xchg
mov
cltd
push
bound
in
mov
mov
and
push
sti
insl
jns
adc
mov
push
xor
ds
add
pop
imul
xchg
int
pushf
fsts
mov
les
push
mov
add
cltd
dec
pop
ret
leave
pusha
mov
add
subb
jl
mov
stos
xor
cmpsb
pop
fbld
xlat
fmull
fsubrp
call
and
push
add
or
cltd
jbe
ja
sbb
jg
outsb
fidivrs
pop
daa
aas
pusha
mov
or
pop
push
push
cmpsl
cmpsb
and
ret
insb
jno
aad
sarl
mov
jae
mov
maxps
inc
lret
jg
lcall
das
outsl
movsb
aad
pop
jmp
push
mov
sbb
sub
lret
scas
lock
fmul
sti
loop
cmp
cmp
dec
or
mov
call
push
inc
and
sbb
leave
mov
inc
shll
sbb
xchg
cmp
adc
xchg
outsl
pushf
cld
test
push
nop
push
lds
mov
insb
mov
sti
xorl
test
mov
imul
shrl
adc
sub
inc
mov
sti
cld
adc
jle
mov
sahf
jecxz
nop
ja
or
pusha
bound
push
pop
push
out
jnp
xchg
dec
xchg
in
in
into
or
fidivrl
dec
xor
sbb
lcall
adc
mov
call
ds
xor
sbb
mov
in
mov
jb
stos
cmp
mov
testb
shrl
jg
mov
mov
dec
fidivl
in
ret
mov
push
mov
test
test
sub
ret
cmc
cmp
cmpsl
aam
dec
adc
popa
sbb
faddl
int
add
ret
xlat
stos
mov
xchg
loope
mov
shlb
cmp
lret
jp
or
mov
jae
in
cs
jne
arpl
and
sub
mov
add
xchg
daa
sub
js
mov
cmp
pop
in
pusha
and
jle
std
movsb
dec
push
xor
cli
test
jne
lcall
push
les
insl
popa
push
dec
subl
sbb
sub
inc
dec
shlb
ljmp
mov
mov
pop
popf
inc
leave
repnz
inc
sub
sti
divb
jns
jg
rclb
fbld
int
push
dec
movsb
jl
pop
mov
mov
in
rolb
jbe
jae
cmp
addr16
fs
and
aad
and
ds
add
es
ret
lea
test
iret
add
or
inc
jge
in
lock
sbb
aas
mov
rcrl
loop
sub
shrb
push
push
or
push
jecxz
imul
dec
inc
out
je
inc
sub
lret
jecxz
adc
dec
xchg
ljmp
pushf
or
cmpb
jnp
repnz
pushf
push
jge
xchg
xchg
cmp
jp
insl
or
sahf
rclb
je
jg
push
pop
in
jb
lahf
jbe
sub
rep
pop
jg
cltd
sub
pop
mov
push
aas
push
jge
movsb
pop
loop
loope
dec
jne
pop
sub
insb
adc
add
out
insl
push
pop
sub
jl
mov
sarb
xchg
mov
or
jne
repnz
divl
dec
add
sub
sarl
orb
jnp
mov
jecxz
ss
and
out
mov
mov
sub
xchg
fld
lods
and
xchg
fstpl
shrl
shl
arpl
ja
pop
dec
mov
push
movsb
lret
jno
insb
add
test
iret
fbstp
insb
pop
sbbb
lcall
jmp
mov
lock
fdivrs
in
and
push
and
inc
dec
jbe
lcall
dec
sub
sub
dec
and
loop
sub
inc
mov
sub
push
dec
mov
pop
or
push
inc
in
loopne
stos
sub
stc
iret
aad
outsl
mov
mov
rcrl
in
and
adc
mov
xor
mov
jo
xor
call
xchg
cmp
sub
jae
sbb
mov
outsl
push
and
fisubrs
inc
dec
lcall
in
mov
daa
out
xor
xlat
adc
les
cmp
cld
dec
loopnew
or
push
loop
jp
out
mov
jmp
ja
pop
jne
rorl
dec
into
cmpsl
mov
add
jns
sbb
nop
inc
mov
sbb
jl
add
mov
stos
fdivr
aam
leave
jecxz
scas
adc
mov
repz
stos
mov
mov
loopne
in
fildl
in
cmp
int3
adc
loop
mov
insb
pop
jno
dec
int
jl
pop
sahf
xor
fldcw
dec
xor
lea
cli
jmp
loope
jp
push
lods
repz
daa
fbstp
mulb
pop
sbb
cwtl
mov
jne
push
adc
loop
and
xchg
notb
fisubrl
data16
cs
mov
insl
ja
xor
push
movsb
inc
cmp
and
push
xchg
out
mov
sbb
mov
clc
mov
adc
inc
shll
das
lret
mov
adc
in
fidivs
repnz
mov
dec
test
in
or
fucomi
jecxz
mov
or
pop
scas
mov
pop
jecxz
dec
pop
in
mov
inc
movsb
stos
adc
cmp
aas
mov
push
xchg
cmc
sub
clc
pushf
inc
cmp
dec
clc
mov
or
cmp
cltd
call
lret
sub
cmp
fsubrs
test
xchg
or
shlb
jb
call
pop
push
lea
mov
scas
cmp
cmc
add
add
mov
clc
loope
xchg
std
pushw
mov
mov
sub
inc
add
ret
push
mov
jnp
cmp
mov
inc
out
xchg
outsl
rcrl
inc
aad
xor
and
cmc
cmc
push
int3
mov
lret
movsb
or
push
jle
sbbl
sbb
mov
inc
inc
mov
lds
adc
cmp
scas
stos
arpl
cld
add
add
push
data16
test
adc
daa
test
adc
xchg
and
pusha
outsl
mov
addr16
jmp
lods
push
enter
and
inc
sahf
ja
and
loop
ret
cmc
data16
jmp
stc
or
push
dec
ds
sbb
stos
adc
mov
in
add
push
ljmp
js
scas
mov
inc
movl
ljmp
mov
fstp
std
mov
cmp
cmc
push
loope
pop
ficompl
xchg
adc
jl
jmp
jmp
xchg
shr
fmull
loope
adc
dec
mov
repnz
sbbb
daa
mov
push
sub
and
dec
cli
nop
or
pop
jns
out
push
stos
and
repnz
jmp
inc
ret
data16
cmp
jb
cmp
push
cmpsb
repz
cld
insb
icebp
xchg
subl
fiadds
sub
xchg
lret
dec
jge
pop
pop
mov
rorl
pop
pusha
or
cmpsb
mov
es
add
pop
and
fisttpl
js
stos
or
and
test
leave
pop
xchg
jae
lret
mov
xchg
xchg
adc
or
cmp
pop
pop
jecxz
push
xor
int
or
fsts
dec
stos
xor
and
or
sarl
mov
sbb
sub
sbb
inc
sbb
jb
iret
adc
mov
aad
adc
iret
pop
daa
scas
dec
and
mov
or
or
or
and
cmp
dec
call
push
cwtl
mov
not
cwtl
les
ss
fdivl
shll
mov
daa
pusha
int
push
pop
aam
jmp
rclb
repz
mov
cld
pop
mov
push
std
jp
loop
or
hlt
lahf
mov
sub
and
popf
ud2
xchg
xchg
shll
xorl
mov
pop
jae
xchg
sbb
adc
cltd
mul
sub
mov
dec
and
and
shll
mov
push
mov
pop
adc
ja
into
ret
inc
jle
ss
mov
cmc
ret
into
jg
cmp
push
dec
out
xchg
sbb
in
jbe
scas
mov
mov
test
pop
pop
cmp
push
fstl
rclb
lcall
adc
xor
lock
or
xorb
mov
and
pop
fldenv
call
push
loop
pop
or
pusha
mov
loope
test
cltd
das
jl
cvtps2pd
sbb
mov
push
fdivs
mov
lcall
and
mov
sub
popa
cld
add
repnz
lahf
jnp
add
jo
and
rol
popf
or
inc
mov
loopne
sbb
inc
add
ljmp
mov
mov
sub
outsl
inc
popl
and
bound
jae
in
test
inc
jg
movaps
scas
call
mov
cmp
bnd
mov
push
push
cmp
inc
adcb
mov
lret
jp
dec
jno
movsl
jge
sti
adc
das
mov
push
lret
ss
sarb
lock
sub
scas
jl
data16
push
xor
cltd
shr
divl
adc
dec
jbe
inc
cmp
loope
imul
jae
jle
jge
lea
xchg
outsl
xchg
fmull
sub
dec
mov
stos
movsl
mov
rcrb
nop
call
test
jp
cmc
dec
testb
mov
fisubrs
jb
xchg
fdivs
lcall
rcrl
xchg
adc
in
add
mulb
mov
lahf
cwtl
js
mov
push
lret
in
movsl
or
push
or
mov
cmp
in
jecxz
sbb
pop
xchg
mov
call
sar
sub
test
mov
inc
cli
dec
ds
pop
adc
mov
ror
dec
sub
call
adc
popa
cs
add
gs
aaa
xor
repnz
call
cmp
bound
push
icebp
pop
sub
add
dec
jle
mov
pop
inc
cmpsb
jno
imul
ret
arpl
insb
cmp
adc
dec
xor
mov
sbb
sti
outsb
xchg
stos
cli
mov
sub
ljmp
cmp
xor
dec
int
in
lods
mov
leave
cld
daa
cli
jp
insl
jp
negl
test
fsubrl
stos
icebp
sub
aas
mov
adc
cli
in
stos
repz
ds
and
pusha
xor
adcb
dec
inc
or
out
daa
ja
dec
sbb
push
int
jbe
inc
xlat
mov
sub
push
or
mov
repnz
lods
jl
imul
lds
loopew
jo
adc
jmp
bound
push
call
xchg
inc
das
xor
xor
sbb
jo
pop
insl
jg
rcl
mov
adc
jmp
mov
or
mov
test
pop
std
ljmp
sbb
outsb
inc
notl
fldenv
andl
enter
sub
nop
cmp
lahf
lret
addr16
xchg
insl
sahf
dec
int3
je
or
movsb
and
mov
loopne
jmp
push
lahf
push
ds
mov
xor
dec
loope
pop
ja
icebp
jnp
jl
mov
ljmp
mov
loopne
daa
sub
add
ret
and
xchg
addb
les
and
pop
test
and
jecxz
fnsave
add
mov
add
fdivrs
sahf
adc
add
sarb
cmp
pusha
unpcklps
shrb
push
jb
pop
cli
addr16
push
sbb
add
call
sahf
outsb
mov
mov
and
jae
loope
sbb
dec
orb
mov
aas
sub
dec
test
outsb
rcr
pop
bound
jp
sub
pop
rcll
push
sti
xchg
loopne
fwait
in
out
icebp
and
push
mov
mov
add
pop
cmp
mov
pop
pop
arpl
sbb
mov
ret
mov
mov
and
aam
xor
adc
cmp
add
xchg
dec
insl
or
aam
in
push
cmpsl
out
lret
sub
adc
je
mov
pop
mov
repz
cmp
les
dec
gs
adcl
lret
imul
ret
into
je
inc
or
cmp
mov
cmc
xchg
test
pop
cmp
xor
aaa
stos
push
movsb
inc
xchg
pusha
dec
js
dec
aam
in
sbb
sub
push
pop
fisttps
and
nop
bnd
fsubr
or
lock
es
outsb
into
cmpsb
inc
out
mov
pop
mov
ljmp
inc
mov
aas
jl
mov
or
bound
gs
sbb
negl
mov
mulb
subps
mov
in
inc
repnz
ret
xchg
bound
pop
sbb
mov
add
mov
xchg
mov
in
sub
icebp
mov
or
add
mov
data16
sarb
xchg
popf
ja
mov
sbb
test
jge
fwait
mov
pusha
cmp
cltd
js
repnz
mov
js
push
out
push
adc
test
or
pushf
cmp
dec
adc
mov
rclb
sbb
cmp
and
cmp
in
repnz
xchg
rorl
or
mov
sub
dec
iret
adc
add
sub
mov
data16
sbb
ror
xchg
and
or
js
xor
getsec
add
dec
aas
dec
sbb
and
mov
fwait
xchg
adc
mov
mov
ss
inc
jne
xor
icebp
push
sbb
scas
pop
pop
mov
stos
push
dec
es
iret
jl
sbb
shll
insl
cmp
cmp
jp
jns
xchg
mov
xor
data16
push
rol
add
xor
dec
xchg
in
int3
out
add
dec
jge
int3
mov
jae
mov
pop
mov
aas
nop
repnz
jbe
outsl
pusha
xor
enter
in
push
fcoms
aaa
ret
cltd
push
sbb
sahf
mov
subl
jge
push
xchg
sahf
cli
pop
and
loop
xchg
es
filds
mov
push
shrl
push
xor
aam
mov
imul
dec
pop
stos
xchg
jp
jo
push
lcall
xor
and
cltd
jp
xor
or
sbb
pushf
std
or
and
imul
lret
fistl
adc
sbb
repnz
pop
mov
mov
lock
xorb
jo
add
cmp
loope
xchg
clc
into
pslld
and
addr16
jne
sbb
daa
xlat
dec
jg
mov
and
mov
jecxz
hlt
in
in
stos
sbb
inc
inc
pop
pop
sub
push
pop
or
xor
je
out
fnstenv
xchg
add
add
adc
lods
lds
cmpsb
jbe
test
mov
push
xchg
aas
xchg
das
fucomp
sbb
leave
sbbb
inc
scas
je
loopne
xor
sub
fdivs
das
es
and
push
adc
cmp
in
mov
xor
jns
mov
mov
nop
stos
sbb
jb
xchg
push
cli
loopne
mov
rorb
cmp
mov
or
pop
popa
mov
cmpsl
adc
into
incb
test
xor
mov
mov
insl
test
dec
mov
pop
outsb
daa
push
mov
add
pop
mov
outsl
sbbb
test
jle
cmpsb
test
std
sbb
lret
sub
mov
out
pop
adc
or
pop
repnz
shrl
out
adc
jo
push
loope
call
mov
push
cltd
xchg
pop
daa
pop
iret
call
and
mov
mov
test
and
jmp
pop
xchg
repz
or
cmc
sub
mov
jmp
sbb
rcrb
mov
or
nop
in
sahf
jecxz
jns
mov
inc
lcall
add
andb
in
push
pop
and
mov
jg
push
fs
gs
fucomip
mov
cwtl
icebp
adc
psubd
xor
ja
and
lret
add
repz
add
insb
pop
fidivs
or
jo
test
add
mov
sbb
mov
push
and
pop
dec
sub
imul
sub
bnd
inc
xchg
stos
frstor
sbb
icebp
push
xor
pop
add
leave
scas
xchg
cmpsb
mov
or
mov
lret
rorb
insl
mov
lret
xchg
push
jle
jbe
stos
sbb
mov
push
cmpsl
insl
push
cmpsl
jle
sub
faddl
xchg
sahf
pop
pop
ret
inc
sahf
imul
lcall
sbb
add
fs
dec
fstl
jge
xor
cwtl
add
push
repz
or
push
sarb
lods
in
sahf
and
dec
xor
jo
dec
dec
sub
or
testl
sbb
out
std
mov
mov
ja
jbe
jge
leave
test
repz
enter
and
jnp
sub
rorl
ds
and
out
add
cmp
cld
fbld
popa
test
scas
add
dec
xorl
lods
mov
test
fstpt
jo
clc
xchg
mov
aas
loope
leave
pop
push
xor
xchg
shll
enter
sbb
jae
pop
sbb
sbb
stos
jb
pop
movsb
sub
cld
dec
fs
fldt
add
mov
cmpsl
push
out
icebp
aas
dec
sub
gs
lds
jae
jns
lahf
cmp
jp
pushf
jg
sbb
movsl
insb
sbb
jo
cmp
test
mov
mov
xor
mov
insb
lret
sub
mov
aam
push
aad
popa
and
fisubrs
cmpsb
dec
test
mov
mov
xchg
mov
pop
sbb
fsubrp
js
sbb
out
mov
stos
lcall
pop
sub
dec
inc
add
ret
and
mov
imul
pop
adc
mov
dec
push
aad
pop
lea
pop
cmpl
loopne
aas
dec
pop
jge
ljmp
aad
incb
arpl
lcall
bound
int
push
jle
xchg
pop
sahf
outsl
andl
add
add
jnp
jo
in
xor
push
cmpsb
xor
add
fstl
cmp
cli
das
jb
mov
imul
cmp
xchg
shl
adc
lea
pop
jae
mov
sbb
mov
daa
xchg
mov
xor
mov
add
pop
fimuls
cmp
mov
or
push
mov
int3
adc
dec
or
mov
in
xchg
std
or
push
fcomi
sbb
insb
mov
fstl
mov
xor
cmp
mov
mov
or
pop
inc
ljmp
mov
lcall
das
sub
shl
in
adc
jp
or
enter
insb
mov
shll
loop
sub
jp
in
sub
je
daa
mov
into
xchg
mov
cs
mov
pop
and
or
insl
mov
xor
jge
hlt
sbb
roll
pop
lret
cmp
imul
or
pusha
and
loop
mov
fidivs
loopne
repz
push
lds
orl
and
dec
aaa
hlt
xor
enter
jecxz
add
cmp
arpl
xor
or
xchg
popa
push
mov
pop
repz
and
mov
push
inc
mov
out
movsl
mov
push
jge
pop
rcl
push
imull
adc
jnp
jle
sub
lret
inc
add
xorl
jmp
mov
jno
mov
xor
inc
push
xchg
and
add
clc
inc
flds
shrb
sub
pop
test
pusha
repz
fcoms
and
shl
out
scas
sbb
pop
xchg
lret
xor
pushf
mov
dec
ds
pop
dec
or
stc
xor
lcall
dec
sbb
dec
out
sahf
push
mov
sbb
fdivrl
int3
in
dec
jp
stos
insl
adc
sti
xor
push
hlt
repnz
mov
rsqrtps
mov
test
mov
ljmp
or
inc
icebp
das
sbb
adc
stc
or
adc
push
inc
pop
jecxz
sbb
mov
push
mov
xchg
jb
sub
dec
add
hlt
push
adc
xlat
sbb
xor
into
popa
push
pop
fmuls
mov
inc
int3
and
imul
shll
adc
pusha
test
mov
sub
sbb
mov
adc
jno
lods
mov
push
ret
adc
add
pushf
inc
jge
push
pop
clc
pop
out
mov
pop
repz
and
dec
mov
mov
bnd
imul
or
fisttpl
xchg
jle
push
mull
cmp
sbb
pop
push
sbb
push
push
hlt
neg
mov
pusha
mov
and
or
inc
sbb
roll
mov
pushf
mov
push
xlat
add
jg
daa
repz
out
or
cmpsl
jge
movsb
push
sar
pop
xor
clc
stc
cmp
in
xor
jge
mov
lods
aam
rcrl
jns
stos
push
lret
sahf
popf
pop
jg
jmp
pop
dec
xchg
lods
or
mov
data16
pop
cmp
push
das
int3
iret
insb
jno
iret
fistpl
mov
sarb
das
push
pop
xchg
xor
lods
icebp
jo
push
ss
cltd
cmp
dec
fists
mov
pop
test
test
mov
sti
into
pop
daa
outsb
cwtl
mov
ficomps
add
arpl
clc
add
cs
fsubr
shrl
mov
mov
rolb
fcomip
fisubrl
jne
sarl
sbb
mov
push
push
and
mov
mov
in
mov
daa
and
popf
sbb
int3
mov
pusha
icebp
movsb
sbb
sub
pop
jns
ja
add
rolb
mov
pusha
sub
test
stc
push
and
jle
adcb
rclb
incl
movsb
or
mov
push
mov
xor
or
dec
pop
sbb
xchg
fnstsw
shr
iret
lea
imull
fisttps
lods
sbb
fstpt
and
repnz
jns
sbb
jg
inc
push
and
gs
jbe
adc
je
xchg
and
ret
xor
fs
jae
pop
jae
lea
test
pop
add
roll
rcl
rcrl
movsl
call
pop
lret
pop
push
jnp
mov
pushf
jo
dec
test
pop
xchg
push
movsl
sub
dec
sbbl
mov
sbb
loope
mov
cmp
dec
movb
shll
outsb
mov
add
fs
stos
xchg
sahf
pop
ja
adc
mov
adc
fwait
fwait
aam
jno
les
hlt
mov
jle
fsubrl
cli
xchg
pop
pop
out
ret
push
push
test
idiv
repnz
and
mov
aas
lea
mov
push
pop
out
loopne
test
sbb
adc
out
adc
fldenv
xchg
push
xchg
adc
mov
push
icebp
aaa
xchg
xor
and
cltd
cld
int
loop
push
repz
js
lds
pop
mov
mov
int
js
mov
xchg
je
es
adc
cmp
scas
test
mov
pushf
addb
ficomps
inc
fwait
mov
movsb
pop
cmpl
mov
inc
shlb
shlb
push
je
subb
jmp
sub
lds
jnp
pusha
mov
mulb
push
xor
fdivr
movsb
xor
dec
cmp
notb
or
and
pop
js
fdiv
inc
fiadds
and
sbb
stos
and
outsl
mov
dec
mov
iret
js
lods
mov
sub
shl
mov
jo
sti
pop
push
add
scas
out
xor
iret
xchg
mov
xchg
inc
pop
aas
xchg
xchg
push
sub
push
xor
in
add
jl
call
xchg
and
orl
jge
shlb
mov
adc
fldcw
sbb
stos
aaa
add
cltd
mov
les
cmp
addr16
push
leave
jle
sbb
fwait
cmp
xchg
popa
mov
fisttps
xor
mov
lret
dec
dec
sbb
mov
xchg
scas
cmp
ds
jae
xor
jae
xor
imul
inc
lods
ljmp
cwtl
andb
lock
adc
push
out
outsl
xor
push
in
imul
popa
scas
or
scas
ror
test
mov
jmp
xorl
sbb
imul
adc
jecxz
inc
jl
or
jle
sub
sbb
mov
cmp
sbb
inc
fildl
imul
and
es
or
inc
or
mov
ss
lods
or
mov
gs
mov
daa
lret
jmp
mov
push
cli
mov
dec
pop
pop
mov
jge
in
je
sbb
cwtl
mov
das
out
mov
out
and
or
mov
fisubrl
nop
sarb
jmp
inc
xlat
lds
and
aad
lret
loop
adc
ret
mov
popa
push
cmp
sahf
xchg
scas
jae
in
mov
add
mov
fs
xor
pushf
jle
sbb
mov
xchg
sbbl
mov
sti
test
push
inc
push
arpl
ljmp
out
dec
mov
adc
xchg
pusha
outsl
jbe
mov
nop
ss
mov
mov
xchg
data16
into
push
mov
idiv
pop
cs
adcb
and
xchg
and
je
xchg
mov
pusha
inc
pop
leave
sbb
pushf
negl
shrb
aad
xchg
fucomip
cltd
xor
and
mov
inc
mov
sahf
dec
clc
pop
stos
pop
call
cs
jmp
add
fmull
cmp
mov
jl
aaa
loope
push
dec
adc
cmp
mov
push
jge
pushf
xchg
clc
lock
xchg
and
loopne
jmp
je
mov
call
push
push
mov
add
inc
sub
aad
pop
cwtl
cld
fistpl
int3
adc
repnz
leave
aam
daa
jae
mulb
push
push
sbb
insb
cld
test
pop
mov
rolb
add
mov
loopne
mov
test
mov
movsl
xor
insl
cmp
add
xchg
push
fs
adc
shld
dec
mov
mov
jb
daa
push
cmp
mov
mov
mov
nop
testb
or
and
call
in
cmpsl
loope
dec
ss
fimuls
adc
jl
add
hlt
lock
add
mov
mov
sbb
push
adc
dec
mov
add
ljmp
add
or
cmp
adc
dec
jle
ficoms
jae
mov
xchg
pop
push
xchg
inc
inc
xchg
adc
push
jae
cmpsb
mov
jecxz
pushf
inc
jl
shlb
push
lahf
jbe
xchg
jle
push
xchg
add
cs
mov
loope
scas
stos
pop
ljmp
inc
inc
xchg
ds
sarl
lds
sub
jb
lock
xlat
xor
test
out
pop
test
int3
and
js
push
pop
inc
sbb
cmp
or
mov
shlb
repz
cmp
jmp
pop
frstor
jmp
jmp
test
sarl
movsb
adcb
out
pop
addb
orb
jns
mov
push
lret
or
sub
mov
jns
out
rolb
in
loope
aaa
cmp
mov
sbb
clc
sub
mov
loopne
jnp
sub
push
jg
jbe
pop
pop
iret
xor
repnz
xchg
cmc
inc
das
cmp
pusha
mov
imul
adc
dec
cmpsb
ds
mov
mov
popf
mov
mov
xchg
leave
mov
adc
or
mov
push
mov
sub
inc
enter
cwtl
lret
cld
xchg
popf
aas
cmc
push
mov
mov
inc
adc
jge
loopne
call
mov
popf
mov
mov
daa
std
das
push
popf
dec
pop
sbb
test
lcall
rcll
pop
xor
sbb
je
rcl
cmpl
clc
test
xor
in
pop
scas
fstl
lock
xchg
loope
pop
ljmp
pop
mov
inc
dec
stos
imul
sub
ljmp
cmp
dec
ret
imulb
mov
out
cmovg
mov
jp
mov
and
cwtl
aas
adc
stc
add
mov
dec
ss
push
pop
imul
cmp
out
pop
sarl
ja
push
ss
test
jbe
lds
add
mov
out
jmp
dec
shlb
into
mov
int3
push
adc
leave
mov
mov
movsb
ljmp
int
fistpl
xchg
and
cld
mov
adc
out
sti
inc
mov
mov
loope
sub
out
pop
ss
adc
out
int
xchg
pop
mov
lret
sub
add
jbe
ds
sub
addl
adc
jmp
pop
enter
inc
mov
add
xchg
jle
ds
sub
or
cmp
mov
xchg
or
les
std
push
clc
inc
in
fisttpl
jle,pn
mov
in
out
ds
ds
inc
outsb
lret
das
sbb
aaa
andb
and
jb
in
sahf
pusha
xchg
xor
mov
sbb
leave
sbb
sbb
lea
std
mov
iret
fisubrs
adc
or
pop
push
xchg
add
lock
stc
lahf
xchg
inc
imul
insl
lahf
cmpsb
pushf
push
push
add
es
neg
or
mov
sbb
cs
push
inc
dec
mov
jns
cmc
inc
pop
mov
push
cmpsl
dec
mov
stos
mov
repz
icebp
mov
loop
lods
ljmp
sbb
adc
pop
imulb
dec
dec
rolb
sbb
xchg
shlb
xchg
dec
fdivs
rol
mov
mov
test
mov
cmpsl
ja
xor
out
pop
add
add
call
mov
push
out
mov
scas
les
mov
leave
into
aad
scas
jge
movsb
sub
xchg
xor
push
subb
out
loope
icebp
mov
push
lahf
sbb
mov
mov
arpl
cmpsl
stos
mov
popl
cmpl
daa
les
sub
pop
loop
mov
push
cmpsb
shrl
orb
jb
push
cmp
ds
lea
data16
pusha
xor
adc
arpl
cmp
lret
mov
xchg
lret
jns
pop
lds
xchg
adc
ljmp
cmpsb
out
mov
repnz
inc
mov
xchg
dec
int3
out
and
das
and
out
xchg
int
jno
add
hlt
jge
push
rorb
pop
add
sub
mov
fwait
stos
sahf
xchg
inc
xchg
iret
movb
mov
push
sbb
aaa
dec
adc
and
cs
pusha
and
add
dec
fwait
outsl
aas
pop
push
enter
cmp
push
cwtl
stos
imul
enter
xchg
imul
shl
pop
iret
lds
loopnew
pop
scas
loop
int
cmp
cwtl
daa
cmp
dec
xchg
dec
sahf
mov
jl
and
mov
aam
dec
out
jmp
mov
movsb
pop
lods
cmp
sbb
dec
add
js
xchg
sti
test
ljmp
push
popf
jecxz
shl
into
int
roll
cs
jbe,pn
lea
les
enter
arpl
movsb
sub
pop
fstps
inc
mov
imul
pop
ror
pop
push
hlt
push
mov
aam
lret
adc
fmull
jbe
push
jcxz
sti
stos
add
mov
or
dec
xor
lea
jb
add
push
cmpsb
lods
aaa
jae
inc
jl
pop
push
ret
push
outsl
gs
ss
dec
mov
call
adc
ret
cld
jecxz
mov
aad
inc
xor
xchg
out
pop
test
imul
xorl
pusha
fildl
pop
shlb
mov
in
fwait
and
push
and
xchg
lock
psrlw
call
jge
adc
or
out
mov
add
leave
pop
in
ds
inc
sbb
mov
jae
xchg
mov
outsl
fidivrs
adc
pop
addr16
xor
dec
call
outsl
jge
data16
out
sbb
ja
dec
inc
clc
je
test
mov
lcall
lcall
hlt
adc
cmpsb
ljmp
cltd
sbb
jns
iret
push
adc
xor
cli
andb
xchg
mov
xor
mov
jp
in
adc
testl
xchg
add
xchg
lcall
jge
and
and
stc
mov
out
daa
lea
fmull
in
push
mov
syscall
jge
pop
test
xchg
ljmp
sbb
fwait
add
lock
fwait
and
dec
mov
ljmp
outsb
popa
pushf
and
inc
into
inc
icebp
cwtl
push
jnp
into
xor
push
insl
jp
icebp
jmp
scas
int
imul
cmp
pop
les
or
loope
test
push
rcl
ja
cmpb
shl
xchg
dec
loopne
push
xchg
rorl
dec
insb
fdivl
stos
ljmp
jecxz
mov
adc
pop
enter
sub
push
hlt
enter
xchg
xor
xor
out
popf
inc
sub
push
jns
inc
cltd
push
mov
push
push
jnp
xor
lret
idiv
les
in
imul
test
iret
jns
out
push
fwait
addr16
jb
test
lcall
mov
insl
movsb
inc
insb
adc
pop
mov
andl
lret
pop
mov
add
pop
mov
push
testl
jnp
cmp
mov
mov
sub
insb
cmpb
pop
xor
cmp
mov
mov
mov
inc
call
cmp
add
jmp
mov
stos
fmull
or
pop
loope
mov
lods
cmpl
in
add
stc
lret
ds
xchg
xor
mov
and
pop
add
sbb
xchg
jp
mov
out
popf
addr16
push
sbb
int3
sbb
push
xchg
mov
xlat
xorb
inc
or
add
xor
cmc
xor
mov
jge
bound
ljmp
lods
jg
mov
cmp
fidivl
in
and
js
mov
outsb
pop
lcall
sbb
in
mov
push
idiv
adc
sar
xchg
xchg
test
inc
ss
js
les
jno
inc
and
sysenter
cmc
idivb
mov
int
and
gs
ds
push
dec
mov
mov
jmp
add
lock
rorb
jg
ljmp
stos
iret
scas
mov
pop
mov
xchg
cmp
loop
outsb
jo
es
orl
pop
push
adc
add
outsl
inc
mov
mov
ds
fcoml
cmp
push
jae
cld
push
iret
adc
mov
movsl
bound
cmpsl
mov
dec
jo
mov
pop
and
inc
mov
mov
inc
repnz
lcall
mov
gs
imul
add
cltd
add
jl
dec
sbb
and
test
test
or
mov
lock
mov
xor
inc
inc
mov
mov
cmp
repz
and
xor
in
rol
leave
add
sbb
mov
into
xchg
pop
ds
push
dec
push
add
lds
pop
pop
dec
insb
inc
std
mov
or
push
mov
jne
adc
mov
lods
popf
mov
pop
lock
push
push
pushf
adc
test
pop
push
jg
fiaddl
jo
into
aas
dec
xchg
add
ret
lods
cmp
add
data16
or
sbb
repnz
out
and
inc
pop
sbb
leave
adc
bnd
mov
xchg
addb
test
jmp
mov
mov
jo
adc
adc
fld
mov
cs
jbe
sbb
int
aam
mov
fwait
je
in
outsl
pop
loope
and
mov
outsb
mov
mov
outsl
test
das
add
lret
scas
sbb
loop
xor
mov
into
fmul
cld
sub
lcall
and
jb
and
orb
repnz
mov
or
aad
mov
jbe
mov
and
sub
inc
sub
pop
mov
fildll
add
and
insb
xchg
int
test
xchg
mov
dec
pop
fidivrs
mov
sub
jl
fldlg2
pop
jg
pop
test
inc
orl
clc
notl
js
leave
push
and
xchg
fwait
nop
xorb
aam
lahf
insl
into
ficomps
fstpl
dec
jnp
or
push
mov
test
inc
lods
test
adc
adc
mov
inc
les
push
ret
jbe
xor
dec
int
mov
test
das
dec
jmp
ja
inc
incl
cmp
dec
ja
push
inc
mov
test
cmp
mov
jno
mov
sub
subb
and
lods
add
inc
sub
addb
jns
in
mov
mov
mov
aam
pop
flds
and
inc
sub
shlb
sbb
std
mov
dec
pop
adc
add
inc
in
stos
jg
stc
insb
addr16
adc
sbb
clc
jl
addb
scas
sub
add
or
dec
idivb
sahf
or
and
test
cltd
pop
sti
mov
imul
stos
loopne
mov
iret
movsl
daa
mov
cmp
mov
shr
pop
test
fsubrl
mov
aas
fistpl
add
enter
addr16
or
xchg
mov
xchg
jl
fdivl
jb
push
mov
add
mov
jecxz
test
int3
adc
aam
mov
scas
push
test
dec
or
ret
jecxz
push
mov
std
push
mov
flds
fbstp
fnstenv
addr16
ret
testb
xchg
out
jmp
pop
out
sub
in
data16
dec
arpl
adc
jp
fwait
sarb
es
push
sbb
cmp
insb
shll
jo
fucomi
sarl
mov
pop
jae
push
daa
mov
inc
outsb
stc
or
mov
inc
lea
push
sub
mov
ljmp
subb
and
jmp
stc
das
mov
add
rolb
xor
es
js
push
cmp
add
push
xchg
dec
jno
in
dec
into
les
fldenv
inc
sbb
fcompl
jge
add
fcmovnb
loopne
sbb
push
push
test
jmp
dec
cmp
and
xor
imul
mov
and
ret
cmc
cmpsl
pop
int
fwait
jp
loop
jmp
jg
fsubrs
xchg
daa
iret
mov
xchg
jg
mov
cs
out
ds
mov
stc
or
sub
ret
cmp
cltd
stos
or
in
pushf
outsl
icebp
es
les
sub
addr16
std
jp
lahf
stos
push
es
lret
sti
test
in
test
push
fwait
xchg
pop
imul
dec
outsb
add
flds
daa
shrl
cwtl
ja
jns
sbb
sub
jle
sub
mov
cmpsb
pop
sbb
mov
sub
xchg
push
xchg
mov
and
loope
ljmp
pop
sbb
mov
data16
pushl
xchg
addb
and
mov
ds
cmp
or
pushl
xor
cli
imul
in
mov
in
cltd
lods
mov
je,pn
sub
call
aad
jne
popf
pusha
out
loope
push
sub
mov
push
mov
pop
aaa
dec
jb
and
movsl
pop
push
imulb
fidivrs
into
fwait
xlat
mov
aas
xor
pop
and
push
adc
clc
jmp
into
xor
repz
hlt
xorl
jl
and
push
sub
sahf
shlb
sub
arpl
arpl
mov
arpl
cld
cmp
mov
mov
das
int
jns
mov
idiv
fisubl
mov
cmp
pop
and
cmp
gs
jo
xchg
arpl
imul
or
or
ja
cmp
std
pushf
xchg
pop
cmp
xchg
mov
push
push
fs
lcall
ds
notl
imul
xor
xchg
adc
or
mov
pop
push
mov
xchg
inc
mov
outsb
shll
push
hlt
outsb
mov
sbb
aad
jmp
push
leave
leave
push
dec
xor
std
inc
xchg
int3
std
push
leave
call
pop
scas
xchg
int3
jg
lds
iret
mov
rolb
out
inc
hlt
or
in
xor
push
popf
xlat
aad
push
out
insb
jo
cmp
inc
call
sub
jp
push
std
lods
aas
lods
pop
mov
mov
ja
sbb
leave
mov
cmpsl
fnstsw
push
aam
lds
insb
bound
rcr
loop
fwait
stos
not
jnp
insl
out
push
sbb
and
lea
stc
mov
ret
push
cltd
add
movsb
int3
js
mov
nop
mov
movsb
jmp
repz
jmp
fidivrs
test
gs
movsb
xchg
jge
mov
clc
pop
iret
insb
adc
outsb
mov
arpl
icebp
jge
mov
add
dec
test
addb
mov
iret
shrb
cmp
les
add
pusha
jne
inc
xchg
test
test
pop
jne
pop
enter
lahf
xlat
or
stos
push
sbb
into
push
adc
cmp
jnp
ret
in
pop
mov
jno
sub
inc
mov
adc
fwait
xor
orl
out
stos
sahf
and
jmp
rclb
push
push
mov
clc
push
aam
cli
roll
mov
idivl
sbb
dec
jns
inc
dec
xchg
inc
loopne
xchg
and
push
inc
mov
ret
adc
mov
cmp
sahf
outsl
mov
jecxz
dec
ja
imul
adc
ret
repnz
push
mov
js
pop
xchg
push
jnp
xor
dec
xchg
stos
mov
mov
add
mov
jmp
cwtl
int
lret
jle
jecxz
xor
into
loope
lds
sbb
mov
jg
repnz
push
pop
add
mov
outsl
xchg
xchg
in
ja
dec
mov
xchg
negb
std
adc
sti
sbb
or
or
mov
fdivl
les
jns
mov
mov
cltd
stc
xor
mov
pusha
mov
cmc
sub
and
std
and
test
pop
xchg
mov
cmpl
arpl
out
lea
shll
rclb
jmp
and
push
fwait
xchg
mov
adc
dec
mov
shrb
adc
int3
sub
jne
imul
repnz
into
outsl
sub
inc
mov
and
movsl
loope
pop
mov
mov
or
cmpsb
sbb
xchg
lret
aas
xchg
loopne
cltd
xchg
push
bound
in
push
cmp
inc
jno
mov
aam
scas
or
imul
xor
leave
cmp
in
punpckhdq
pop
shll
fsubrs
jecxz
jmp
aad
ljmp
xor
flds
aas
add
jae
xchg
aas
mov
lret
jne
ljmp
pop
jne
rcl
cmc
xchg
shll
imul
je
fnstenv
sbb
push
adc
inc
or
push
mov
fstpl
scas
in
dec
xor
mov
add
mov
inc
pushf
in
popa
sbb
cmp
ficoml
dec
push
ss
in
mov
xchg
bound
add
lods
fnstsw
fwait
and
jno
jecxz
mov
push
cwtl
sub
or
mov
xchg
pop
cmp
pop
insl
mov
pop
popf
inc
cltd
outsb
test
xor
lahf
loopne
insl
rclb
ja
out
lods
cmp
imul
xor
loope
sub
ja
addl
xchg
sahf
test
xchg
insl
adc
xchg
xlat
cmp
jl
ljmp
inc
std
shl
adc
or
pop
mov
arpl
xchg
notb
call
inc
movsb
test
lret
or
cwtl
leave
sahf
popa
inc
push
adcl
inc
testl
xor
cmpsb
cwtl
sbb
negb
mov
mov
xor
out
mov
adc
jns
mov
mov
and
jb
outsb
cmc
push
rep
loop
dec
sub
in
and
aam
xor
jge
push
dec
push
lods
jg
ffreep
jb
pop
pop
fstl
xchg
int3
cmpsl
and
stos
pop
nop
mov
add
xor
ss
es
movsb
push
test
fxch
adc
mov
in
mov
decb
push
mov
mov
sub
pop
ds
fcmovne
popf
data16
mov
adc
adcl
mov
lahf
addb
pop
mov
pushf
pop
add
xchg
mov
sub
mov
cld
jp
pop
out
clc
add
int3
mov
push
adc
sbb
cltd
or
stos
push
scas
pop
mov
adc
dec
stc
pop
fbld
cld
out
stos
repnz
es
test
mov
adc
leave
adc
movsl
imull
xor
insl
xor
jge
repnz
jo
aas
jle
xchg
sbb
jge
enter
mov
dec
jne
lret
mov
bound
and
je
sbb
jbe
fidivrs
arpl
int
or
dec
and
jae
sahf
int3
push
pop
push
push
push
cmc
or
xchg
iret
pop
and
jns
jp
aad
leave
out
adc
or
pusha
push
inc
and
push
adc
jg
ja
int
loopne
and
dec
ret
cs
sbb
stos
test
and
jae
aam
stc
stc
jmp
imull
data16
in
fchs
icebp
push
dec
frstor
mov
adc
xchg
and
pop
imul
fwait
adc
xor
aad
mov
into
addr16
pop
add
int3
fisubs
sub
sti
sbb
stc
repnz
gs
dec
repnz
mov
scas
push
fildll
and
lods
mov
call
movsb
jmp
rclb
in
setnp
cmp
inc
cmp
aad
push
xor
loop
or
inc
loope
in
filds
and
rcl
xor
pop
fimull
sub
xor
pop
cmp
mov
js
pusha
dec
addr16
cmp
xor
fwait
enter
loopne
test
sub
movsb
rclb
movsb
pop
mov
pop
mov
sbb
fsubs
nop
fidivrs
shlb
je
sub
mov
mov
mov
fldenv
or
jo
push
sub
sub
mov
lds
repz
orl
sarl
sub
mov
mov
cwtl
repz
jae
jns
or
push
jne
sbb
xchg
aam
pand
or
popf
sbb
add
outsl
nop
lcall
je
scas
or
mov
test
inc
movsb
mov
fcoms
lock
push
xchg
and
mov
xor
ficompl
sbb
rorb
fists
popf
add
daa
ret
xor
xchg
jmp
mov
cmp
stos
push
in
jo
adc
dec
jno
mov
push
add
pop
lods
lret
out
pop
mov
mov
pcmpeqd
jno
pop
sub
jg
push
pop
fwait
adc
insb
jae
jno
ret
stos
rclb
cmp
pop
aaa
lcall
into
mov
mov
adc
add
dec
or
push
fildll
cmp
push
pushf
in
fs
cmc
cli
movsl
pop
and
and
inc
add
imull
jmp
cmp
negb
and
test
mov
iret
and
add
pop
mov
mov
mov
mov
aam
pop
and
and
test
fdivrs
xor
inc
and
stos
lret
loope
rclb
cmp
sbb
popf
test
pusha
inc
add
lock
lods
mov
stos
push
xor
lock
xchg
pop
push
and
loop
lahf
leave
test
cmp
jbe
and
dec
sbb
das
push
lcall
push
hlt
push
mov
mov
xor
jle
out
or
mov
popl
adc
pop
inc
push
add
inc
idiv
popa
mov
jae
mov
hlt
push
add
sbb
pop
in
pop
ja
inc
sub
cmp
or
leave
cmp
ret
add
outsl
mov
adc
xor
adc
sub
and
mov
sub
pop
adc
andl
mov
jge
pop
mov
add
cltd
mov
xor
out
push
movsb
sub
cld
fistpll
cltd
and
mov
mov
mov
stos
and
pop
out
jl
movsb
adc
xchg
and
dec
repz
or
jb
int3
dec
xor
dec
xchg
cli
add
adc
cmp
aad
movsb
fbstp
call
dec
cwtl
mov
mov
push
push
xchg
adc
pop
add
lds
loope
add
inc
mov
pusha
jae
imul
arpl
ret
jae
sti
je
pop
dec
sbbb
lret
add
scas
psubd
sbb
cwtl
in
sbb
inc
or
rcl
inc
inc
mov
rcrl
mov
adc
scas
adc
rclb
sbb
jp
aaa
shll
popf
and
mov
mov
push
xchg
fsubrs
xchg
js
int
fisubrs
cli
ud2
jno
mov
jnp
mov
push
out
pusha
cmpsb
cld
movsb
fidivrl
sarb
imul
les
cmp
xlat
mov
xlat
fmulp
test
mulb
icebp
setb
dec
jns
mov
mov
sbb
adc
cltd
sbb
mov
scas
out
bound
xchg
cmp
inc
mov
sub
imul
imul
fwait
test
cmp
add
and
dec
imul
cwtl
cld
stos
xor
push
mov
mov
mov
lods
push
dec
clc
dec
cld
incb
inc
andb
std
loopne
fwait
outsb
lods
jmp
popf
call
mov
push
test
pop
dec
dec
outsl
ret
xchg
pop
add
stc
mov
clc
movsb
adc
test
xchg
stos
testl
in
xchg
testl
mov
mov
aas
arpl
in
mov
mov
bound
sar
add
dec
fwait
int3
cld
sub
lret
push
cmp
hlt
add
lods
repz
jne
mov
scas
scas
cltd
test
out
cmp
push
add
push
cmpsl
dec
mov
adc
sahf
jnp
and
mov
mov
int3
cmp
rorb
xchg
clc
or
adc
and
mov
movsl
xchg
loop
pop
das
mov
bound
lock
mov
xchg
mov
fdivl
jmp
hlt
add
push
jle
xchg
xchg
inc
push
std
enter
lea
in
aam
insl
mov
insl
jb
pop
std
dec
lods
xchg
pusha
adc
insl
mov
adc
sbb
push
cs
cld
mov
shlb
pop
mov
popa
jmp
out
sbb
or
in
into
mov
jb
dec
jl
push
mov
hlt
jmp
xchg
pop
jmp
int3
ja
xor
pop
push
test
shll
mov
jne
and
jns
lret
adc
arpl
pop
ror
pop
scas
adc
xchg
clc
aaa
ret
call
lret
hlt
and
xchg
dec
setnp
pop
pushf
mov
jns
add
mov
nop
arpl
fists
ficoml
call
pop
push
pop
jbe
mov
fmuls
mov
dec
adc
and
cmpsl
jmp
dec
scas
sub
ss
mov
dec
jge
fnstcw
into
inc
stc
out
call
lock
pushf
jno
mov
ds
mov
loop
sbb
pushf
xor
mov
imulb
insl
mov
daa
icebp
xchg
mov
cmp
out
add
aaa
inc
inc
push
cltd
pop
mov
sub
fs
push
jg
leave
ud0
xlat
dec
fwait
mov
leave
adc
mov
mov
in
mov
ljmp
mov
aad
insb
mov
pop
movsl
out
and
xchg
push
cmpsl
cmpl
jb
sbb
iret
stos
mov
fdivrs
pop
mov
sbb
in
inc
or
dec
mov
int
pop
jge
sub
outsb
cmpsl
imul
repnz
or
adc
inc
push
cmpsb
test
je
lods
loopne
lock
nop
add
xchg
sub
adcb
enter
frstor
and
rcrl
mov
or
popa
into
mov
push
pop
int3
mov
mov
pop
xchg
adc
imul
sarl
add
xchg
sub
mov
jo
adc
mov
nop
loopne
sub
sbb
pop
mov
mov
xchg
push
imul
jg
cwtl
dec
js
repnz
cs
lock
lea
mov
nop
nop
push
xor
xchg
jecxz
sbb
lret
mov
pop
push
add
or
cmp
sbb
icebp
addr16
add
dec
and
mov
out
mov
call
insl
es
mov
cmp
jbe
frstor
out
mov
and
repnz
and
or
dec
es
push
xchg
gs
lods
mov
arpl
and
mov
xor
jl
ret
out
adc
mov
test
shl
mov
leave
jg
and
in
test
dec
mov
and
mov
repz
sub
mov
adc
cmp
push
les
jmp
je
mov
lahf
jnp
add
mov
lahf
and
jge
stos
hlt
inc
fdivp
sbb
sub
xchg
int3
mov
flds
jge
rcr
sqrtps
pop
push
or
mov
sbb
int
sub
inc
adc
or
cltd
pop
sbb
dec
int
inc
aas
xor
sbb
aam
popf
pop
pushf
sbb
xchg
xchg
in
mov
rcl
push
addl
inc
adc
mov
sub
mov
jno
fcmovnb
sti
sub
mov
add
mov
add
and
sub
cmp
imul
cli
hlt
sahf
inc
xchg
stos
adc
ret
loope
cmpsl
sbb
ficompl
ret
inc
daa
xchg
sub
idiv
adc
into
dec
sbb
mov
xchg
bound
adc
clc
add
sti
popa
jg
loopne
clc
push
fucomip
mov
rcll
int3
push
fmuls
fdivs
sbb
cmc
fdivl
mov
jae
mov
orl
cmc
lods
fdivs
sub
mov
aad
dec
mov
push
adc
dec
sbb
push
adc
int3
xor
ljmp
jns
iret
sbb
sbb
cmc
movsl
aas
fnstcw
lock
xor
lds
dec
stos
push
outsl
popf
in
inc
sarb
fsub
and
mov
hlt
das
mov
aas
adc
pop
sub
lcall
jne
outsl
arpl
jns
inc
push
mov
push
inc
pop
dec
loope
in
pop
mov
cld
ds
leave
mov
and
test
sub
iret
daa
cmp
roll
dec
jbe
xor
mov
aad
mov
cmpl
in
fwait
push
and
fdivr
xchg
leave
mov
add
push
xchg
or
repz
cmp
cli
mov
loop
repnz
mov
mov
call
or
pushf
cmc
fstpl
inc
add
stos
sub
ds
movsb
outsb
imul
cld
add
inc
in
cltd
pop
mulb
das
ffreep
addr16
mov
add
cmp
imul
xor
loopne
sbb
xchg
mov
inc
lcall
iret
imul
repz
mov
mov
cld
xchg
push
pusha
xchg
mov
push
js
add
cmp
xchg
lods
iret
lods
pop
cmpsb
lss
mov
dec
rclb
icebp
push
push
aas
out
dec
mov
nop
pop
push
imul
loope
aad
sbb
and
add
pusha
loope
test
push
call
les
loopne
rclb
out
jle
mov
lret
ret
xlat
pop
xor
pop
rcl
pop
mov
lcall
jo
rol
out
mov
andl
dec
int3
dec
cmp
add
outsl
dec
add
or
js
jle
loop
or
stc
loop
bound
and
faddp
pusha
sub
dec
daa
jns
pop
fwait
mov
or
xor
lods
js
adc
push
sbb
out
push
pusha
insb
cmp
sub
cmp
mov
mov
in
mov
aad
lret
popf
out
mov
inc
es
stc
mov
lret
sub
arpl
sub
in
pusha
adc
cmp
adc
loop
add
cmpsl
mov
sbb
orl
mov
rolb
mov
or
das
ret
mov
adc
xchg
js
pop
std
adc
into
sarl
add
sub
sbb
mov
adc
mov
mov
add
xchg
adc
xchg
mov
add
sbb
aam
dec
inc
rclb
lcall
jnp
jb
push
aaa
sbb
pop
mov
push
scas
rcrb
add
cmc
or
and
nop
inc
cmc
fists
and
lcall
inc
addr16
xchg
cmpsl
into
pop
int3
call
jge
xor
insl
popa
push
shlb
aaa
pusha
sub
bound
ljmp
mov
sbb
ja
mov
add
fwait
mov
push
push
aam
frstor
jo
aas
sub
sbb
sbb
int
dec
outsl
fnstcw
pop
andl
xchg
into
and
fstl
mov
push
ja
ljmp
dec
jle
or
pop
out
sahf
or
and
sarb
adc
xor
mov
fldt
dec
xchg
loop
dec
or
repz
fldcw
cmp
or
sbb
lcall
inc
sub
cmpsb
xchg
push
sub
xchg
fucomp
insb
cmc
in
dec
ja
jne
pop
bound
mov
sahf
adc
sbb
in
pusha
push
aaa
pushl
xor
and
ljmp
pop
cld
int
repnz
adc
loopne
shl
adc
cmp
pop
push
mov
or
inc
movb
jmp
jae
stos
inc
aam
jns
jp
mov
jle
jmp
jns
out
dec
or
aad
dec
lds
add
sbb
jg
cmp
mov
sbb
icebp
mov
lock
popa
movsb
out
shrl
ds
cmp
lea
and
pop
or
jcxz
mov
pop
das
arpl
fldlg2
xor
cwtl
cmovl
movsb
jbe
or
out
sub
roll
cs
fnstcw
fucomp
ljmp
mov
jns
and
fs
sbb
jae
mov
mov
mov
fs
pop
aas
out
lcall
scas
std
inc
stos
daa
ret
add
fdivl
sub
out
pop
cmpsl
push
cmc
nop
pop
push
pushf
and
loope,pn
sub
stos
or
orb
pushf
repz
mov
addl
imul
dec
jnp
sbb
inc
xor
xor
xchg
jp
push
add
inc
fists
arpl
sub
mov
mov
aam
inc
inc
out
cmp
xor
pop
push
fimull
mov
add
fwait
cli
mov
push
mull
loop
sbb
aam
gs
mov
inc
jne
divb
divb
les
int3
mov
aad
xchg
or
out
std
stos
outsl
cmp
daa
cmpsb
fcomip
xchg
lea
and
xchg
imul
mov
aaa
iret
shl
push
loop
cwtl
mov
dec
imul
je
shr
sbb
xor
into
inc
inc
pop
cli
stc
sub
cwtl
jg
mov
movsb
or
push
lods
and
adc
mov
mov
xchg
xor
sbb
addl
sub
repz
xlat
pop
xchg
iret
push
sti
inc
imul
push
cmpsb
jg,pt
pop
inc
mov
adc
dec
fwait
rcrl
mov
add
push
jg
out
cmp
test
and
jns
leave
jge
outsb
ret
push
fcoml
mov
sbb
mov
or
cmp
stc
or
push
and
inc
push
subb
dec
dec
scas
jge
arpl
inc
push
shlb
cwtl
stos
frstor
lea
inc
and
dec
lahf
cs
sti
push
sti
cmp
cmp
les
cmpsl
xchg
or
lock
xlat
add
loopne
shr
jle
cmp
sti
cld
scas
jp
bound
sub
in
cltd
and
push
and
mov
cmpsl
xchg
pop
jmp
mov
mov
negl
and
mov
xorb
xchg
jns
hlt
pop
cwtl
inc
mov
inc
pop
push
nop
jnp
sub
pop
mov
in
mov
shlb
out
std
dec
int3
loope
jp
cmp
stc
sarb
push
shl
call
fstps
inc
xor
inc
notb
addr16
pop
mov
cmp
xchg
mull
das
cmp
or
jp
bound
or
shll
and
idiv
cmp
fcmovu
and
dec
in
fdivr
mov
repnz
push
push
add
imulb
fs
sub
adc
sbb
pop
cmp
sub
imul
mov
lret
xchg
daa
xchg
cmp
push
bound
and
aaa
stos
icebp
loop
add
cmc
mov
adc
fcompl
cmp
or
xchg
mov
scas
inc
repnz
movsb
cs
dec
push
aad
xor
gs
sub
pop
insl
xchg
xor
jge
jl
shr
add
cmp
test
mov
add
dec
dec
mulb
mov
in
push
sti
cmc
push
imul
lcall
je
and
push
lock
or
leave
fnsave
mov
addr16
cmp
pop
push
mov
dec
enter
fldt
dec
push
fiadds
inc
mov
pusha
xchg
xchg
mov
sub
int3
outsb
push
mov
mov
dec
add
stos
lcall
bound
sbb
stos
jnp
push
add
lcall
push
adc
aaa
mov
sbb
mov
fs
lahf
pop
pop
and
pusha
int3
int3
mov
hlt
pop
movsb
fimuls
cwtl
mov
test
dec
imul
icebp
cmp
fwait
in
test
out
stos
imulb
jne,pn
int3
test
aad
sbb
sbb
cmpsb
pop
add
in
ret
jns
popa
sti
addr16
pop
cmp
jb
into
pop
es
jns
xchg
outsl
mov
mov
add
out
bound
pop
fcos
sub
ja
addb
add
mov
aad
xchg
push
call
imul
and
mov
roll
push
sbb
mov
lock
loopne
dec
pop
daa
xlat
cmpl
jb
sbb
pop
dec
idivb
iret
es
push
mul
fiadds
cmp
inc
mov
call
das
adc
jo
cmp
inc
ja
fucom
push
mov
movsb
add
adc
popf
jbe
sbbb
push
mov
mov
lea
daa
call
hlt
mov
daa
sub
mov
outsb
sub
in
sbb
jno
or
aad
stos
dec
test
add
jge
aas
in
inc
pop
xor
ds
adc
push
rcrb
add
push
mov
push
and
inc
add
add
mov
xchg
inc
outsl
xchg
mov
push
fstpt
mov
cmp
jne
movsl
mov
lea
sbb
movl
xor
mov
mov
or
and
sub
jae
addl
clc
sbb
jge
movsl
add
out
ret
in
jl
clc
push
insl
imul
push
inc
mov
aam
xchg
icebp
imul
dec
test
popf
add
mov
xchg
call
sbb
inc
cmpl
jecxz
ljmp
mov
pop
in
adc
jle
add
aam
outsl
cltd
sbb
sbb
and
mov
xchg
lds
xchg
setbe
mov
bound
rorl
push
loopne
sbb
pop
mov
inc
movsb
mov
sbb
dec
ret
mov
mov
dec
decl
sbb
roll
pop
add
cmp
mov
xchg
rorl
stos
jo
out
in
mov
adc
xor
mov
adc
add
cld
dec
popa
pop
inc
mov
push
xorl
sbb
in
jp
jnp
lcall
pop
xchg
std
inc
lahf
imul
adc
mov
std
cmpsl
cmpsb
inc
mov
sub
xor
daa
bt
nop
pop
cld
mov
fs
lods
inc
cmp
adc
pop
ljmp
enter
push
hlt
divb
subl
sarl
cmp
pop
stos
lds
pop
mov
jae
arpl
scas
enter
fwait
inc
lds
add
jp
ret
cmpsl
jecxz
pop
jnp
add
push
inc
pop
inc
mov
movsl
add
stc
into
mov
mov
sbb
pop
pinsrw
mov
lahf
xor
jg
dec
cmp
push
in
inc
jbe
lods
pop
push
adc
aad
and
nop
xorb
mov
into
cli
and
pusha
jno
xchg
fmull
cmp
dec
mov
sbb
or
cmp
int
sbb
movl
xchg
lahf
dec
int3
push
out
pop
push
dec
repz
mov
mov
sbb
hlt
into
mov
fistpl
dec
jo
mov
mov
ror
and
jae
dec
pusha
xor
int3
test
inc
adc
sbb
sub
pop
mov
mov
dec
mov
jae
enter
xchg
sbb
pop
test
bound
push
popf
rol
in
rep
pop
ret
insb
jb
xchg
je
jle
mov
jg
cmp
push
in
imul
mov
sub
out
dec
sbb
lret
sbb
jg
xor
mov
mov
js
popf
pop
scas
mov
fsubrs
and
mov
sub
dec
out
sub
xor
cmpsl
pop
nop
dec
ljmp
sbb
scas
xchg
or
enter
xor
insb
and
and
sub
ds
xor
mov
push
cmp
pop
lea
scas
notl
adc
pop
in
jno
xchg
sbb
adc
shll
dec
sbb
hlt
popf
pop
pop
push
push
fnsave
jne
pandn
popa
pop
shld
dec
mov
out
ja
test
andb
or
dec
fsts
cmc
lcall
pop
lcall
dec
in
pop
out
stc
pop
lcall
mov
mov
sbbb
sbb
hlt
in
lret
cmp
ret
addr16
jb
and
lods
imul
push
ja
cmpsb
cwtl
or
jb
inc
mov
imul
data16
sbb
push
inc
sbb
mov
lcall
push
add
andl
and
xchg
dec
inc
mov
in
inc
mov
jecxz
insb
sbb
or
mov
es
jmp
jmp
rolb
mov
jmp
sub
inc
xchg
mov
popa
mov
sub
pop
xchg
roll
or
push
orl
mov
dec
das
or
sti
addr16
inc
adc
xor
sahf
xchg
pop
jg
adc
aad
jle
add
pop
mov
repnz
lods
mov
arpl
test
cs
mov
pop
int3
addr16
cs
dec
das
jne
fs
mov
icebp
pop
push
iret
movb
cltd
lods
jno
add
mov
dec
xor
sarb
inc
add
imull
lods
inc
inc
xor
xchg
in
mov
aas
mov
fstl
js
cld
mov
mov
bound
stos
sbb
ja
fiadds
mov
cmp
adc
adc
push
mov
lods
lock
jg
mov
inc
leave
add
es
imul
xor
inc
mov
mov
jo
xor
xchg
xchg
and
std
imul
std
adc
cmpsb
jno
and
xchg
mov
lods
pop
cmpsb
jns
iret
pop
loop
mov
xlat
into
fs
cmc
push
sbb
sub
dec
roll
inc
adc
jge
shlb
mov
sbb
push
call
jl
aam
cmp
arpl
flds
movsl
aam
xor
es
call
jne
stc
mov
addr16
inc
push
insl
mov
pop
call
push
cmpsb
imulb
sub
in
sarl
shll
inc
sub
call
jae,pt
dec
imul
adc
call
xor
test
nop
pop
movsb
stos
jne
fnstenv
sahf
out
xchg
movq
fcoml
test
inc
xlat
push
nop
lods
rcll
cli
xor
cld
call
popa
loope
orb
jne
shlb
sbb
cmp
cs
fistps
data16
ja
sub
mov
je
xchg
out
jg
xchg
sbb
and
lahf
in
sub
aas
cmp
sub
mov
sbb
or
int
repnz
or
mov
pusha
xchg
inc
mov
adc
aas
pop
cmp
fcmovb
into
xlat
adc
mov
inc
repz
pushf
push
dec
test
pop
xor
cli
sbb
xor
push
xchg
leave
add
xorb
outsb
push
out
or
loop
leave
cli
or
mov
xchg
lcall
sub
push
inc
out
lret
push
jge
or
mov
pusha
push
js
adc
pop
mov
inc
lods
mov
decb
mov
dec
in
or
ds
inc
testl
xlat
pop
ds
or
loope
cmp
dec
or
or
add
cli
add
cmp
inc
jbe
mov
outsl
mov
sbb
xchg
mov
insb
jle
jl
sub
sbbb
shlb
enter
aad
push
pusha
rcl
in
imul
icebp
sti
add
cmpsl
int3
popl
shll
mov
pop
sbb
fcomp
jge
ja
adc
test
nop
mov
lret
jmp
aas
sbb
sub
cmp
sahf
add
jle
mov
into
hlt
xor
push
jae
mov
jecxz
ljmp
add
inc
pop
sbb
daa
sub
pop
mov
cmp
sbb
repz
mov
outsb
ret
decl
mov
mov
loop
cli
loop
into
push
stos
xchg
jnp
jle
jnp
push
lods
aad
leave
sub
js
test
std
sbb
fisttpll
xor
jns
adc
add
fisubrs
mov
test
insl
enter
rolb
mov
mov
fmull
sub
xor
out
shlb
mov
jecxz
push
std
lods
xchg
cmc
movsl
movsl
xchg
xchg
pop
cmc
das
xchg
lcall
xor
popf
mov
ds
sti
mov
fists
ret
arpl
mov
loopne
lds
and
pusha
jg
sub
imul
sbb
mov
lods
out
gs
inc
sub
mov
mov
imul
dec
xor
jle
mov
fistpll
fsubrs
dec
pop
gs
mov
sub
mov
mov
mov
sub
or
in
dec
data16
pop
jno
sbb
add
clc
scas
and
jne
xlat
les
jbe
pop
ret
push
pop
sti
mov
add
enter
loope
push
jno
mov
loope
xchg
scas
es
cmp
lods
gs
fiadds
pusha
pop
mov
int3
pop
sub
mov
mov
xor
ret
sub
jb
jo
dec
fistl
xor
cmp
lea
cwtl
lods
jo
jns
fsubrl
enter
ss
xchg
adcb
pop
push
stos
loope
xor
iret
jl
jge
les
das
inc
add
push
adc
sbb
gs
iret
je
add
data16
xor
dec
pop
xchg
cmp
das
mov
adc
pop
addr16
in
stos
cltd
das
jb
orb
xlat
push
xor
jg
and
outsb
xor
push
pop
cs
xor
mov
pusha
inc
out
mov
test
sub
and
pop
inc
cmp
ljmp
lods
dec
jg
lret
add
sub
mov
js
xchg
mulb
xor
mov
je
sub
mov
cmp
test
sub
xchg
jmp
mov
mov
pop
out
sarl
mov
ret
outsl
inc
or
push
jno
inc
add
mov
lret
ljmp
test
push
loop
pop
jmp
jecxz
push
mov
push
sbb
into
jno
imul
out
ss
dec
arpl
mov
mov
mov
int
fucomip
pop
shll
jl
leave
pusha
cli
pop
and
gs
cmp
ficoml
or
sbb
fwait
dec
push
push
addr16
xchg
imul
xchg
sub
ljmp
shrl
cmpsb
data16
repz
sub
leave
add
pushf
or
sbb
push
cwtl
dec
adc
cwtl
adc
adc
mov
mov
adc
ss
rcll
scas
mov
lock
adc
rcll
js
mov
mov
test
push
dec
leave
loope
add
mov
jb
jmp
add
testl
fiaddl
xor
or
pop
int3
nop
fs
int3
clc
fldenv
insl
mov
jecxz
sub
inc
lahf
xchg
or
std
xchg
or
fs
jg
dec
mov
hlt
jbe
mov
aam
jp
pop
ficomps
in
dec
fdivs
mov
fcompl
mov
cwtl
call
sub
sets
inc
dec
lods
callw
push
call
repnz
xchg
mov
ret
scas
std
call
bound
test
cmpsb
movsl
pop
sahf
and
mov
mulps
cmp
xlat
rcrl
sbb
fmulp
mov
mov
inc
scas
cltd
fistl
addr16
jbe
dec
out
push
rcr
sbb
addr16
or
pop
dec
pop
xchg
in
pushf
lahf
lcall
sbb
repz
and
xor
lds
dec
cltd
push
stos
ljmp
icebp
cmp
pop
insb
inc
jle
insb
push
mov
dec
add
mov
shlb
aad
sahf
adcb
xchg
pop
loope
es
pop
jae
insl
push
adc
xor
daa
sbb
stos
dec
adc
dec
pop
add
lds
push
sbb
sub
pop
cmp
je
in
popa
adc
ds
ret
cmp
shll
inc
sbb
scas
cwtl
inc
test
jmp
and
ljmp
lahf
mov
or
pop
fmull
mov
cltd
adc
jge
lahf
insb
xchg
cld
cmp
cli
sub
sub
sbb
push
mov
or
in
repz
aaa
xchg
dec
testl
imul
or
inc
cmpsl
lret
fdivs
jns
vpsubsw
mov
push
outsl
push
xor
inc
adc
addr16
dec
es
inc
sbb
icebp
iret
mov
cmp
mov
xchg
gs
push
stos
cltd
jmp
push
or
hlt
mov
pop
push
mov
add
mov
aas
xor
loop
rolb
and
adcb
mov
mov
add
flds
push
rorb
or
addr16
int3
cltd
mov
nop
cmp
mov
pop
mov
cld
ret
sarb
mov
nop
inc
setb
enter
mov
push
push
es
arpl
xor
mov
lcall
lock
mov
sub
out
jns
lock
push
push
test
ljmp
push
xor
imul
mov
lcall
mov
fs
in
mov
mov
xor
shl
cwtl
adc
xchg
cs
xchg
cmc
add
adc
pop
mov
aas
xchg
sbb
sbb
cmc
das
xchg
insb
in
mov
into
fs
and
jno
les
shll
aad
andb
xchg
nop
push
fs
repz
ret
adc
mov
loopne
mov
into
inc
je
cld
out
shr
jmp
jae
rcrb
push
push
cmc
add
lcall
dec
cmp
testb
in
xchg
pop
lcall
pusha
sub
movsl
or
dec
imul
call
xor
mov
mov
in
mov
repnz
mov
ljmp
adc
push
jmp
pop
push
xor
out
stos
arpl
adc
pusha
in
or
sbb
mov
sbb
mov
pusha
loopne
mov
aam
loop
inc
jbe
ljmp
dec
lcall
ret
sbb
xchg
data16
pop
aad
pop
push
std
and
add
lcall
push
push
dec
pop
jno
adc
mov
pop
out
and
push
push
es
hlt
cmpsl
pop
pop
call
out
mov
sbb
movsb
mov
inc
push
fnstcw
bound
repz
add
add
inc
mov
jl
in
mov
xor
mov
into
adc
push
xchg
mov
retw
bound
fiadds
enter
jo
or
repnz
mov
rcll
and
sahf
adc
xor
jmp
inc
fs
and
jp
mov
inc
mov
js
imul
std
adc
xchg
add
mov
and
mov
jmp
dec
jno
fs
outsb
sbb
xor
sbb
push
lcall
repnz
push
push
jns
push
xchg
aam
jbe
jl
repnz
ficoml
add
xor
xchg
cs
mov
aaa
sub
js
xor
insl
pop
pushf
adc
daa
push
pop
xchg
mov
add
dec
cmpsb
jecxz
mov
mov
in
add
imul
sbb
pop
xchg
push
adc
mov
mov
jecxz
aad
leave
mov
inc
add
add
xchg
test
inc
mov
sub
cmp
es
xor
mov
mov
pop
cmc
mov
js
mov
out
push
shl
push
clc
je
and
mov
or
adc
inc
aam
fwait
and
js
push
xor
mov
fnstcw
negl
enter
into
and
push
dec
arpl
loope
pop
sahf
push
ffree
and
xchg
aam
pop
fstpt
xchg
adc
dec
xchg
nop
add
ja
clc
fidivs
inc
out
and
pop
js
stc
mov
out
mov
dec
pop
aam
mov
push
lods
push
aad
lods
lds
faddl
daa
dec
movsb
sub
cmpb
pop
xchg
and
aam
shll
or
and
insb
ret
lcall
sbb
mov
mov
aas
leave
and
xor
dec
add
inc
cmp
mov
sbb
ja
ljmp
mov
scas
repnz
jmp
sarb
inc
cmpsl
and
xor
mov
into
mov
jmp
jge
xchg
sbb
adc
mov
mov
mov
pop
push
or
das
sub
xor
and
ss
and
pop
cmp
mov
pusha
jp
in
cs
sarb
xchg
xor
dec
xor
divb
fucomi
xchg
cmpsb
es
lea
mov
bound
fdivr
aad
bound
ret
and
ret
es
adc
mov
arpl
pop
out
cmp
and
inc
mov
jns
arpl
out
clc
fs
xchg
adc
adc
test
sub
xor
rol
sub
and
stos
mov
mov
aas
mov
out
jno
out
jne
lea
in
xor
fwait
inc
mov
nop
and
sbb
cmc
add
jmp
or
add
shlb
jnp
aad
xor
add
sbb
mov
test
mov
pop
mov
fcoml
je
dec
mov
mov
es
pop
mov
into
sbb
mov
das
mov
xlat
pop
lea
xor
addr16
push
data16
test
sbb
mov
cltd
mov
shlb
outsb
scas
mov
fildl
pop
pop
int3
divb
aad
lds
rorb
cmp
mov
adc
shlb
push
add
and
aas
xchg
jae
pop
adc
stos
mov
jmp
dec
dec
out
int
out
incl
mov
sbb
inc
inc
ja
inc
mov
push
inc
mov
add
mov
adc
cld
ja
jge
push
add
dec
scas
lahf
push
test
jle
scas
jns
cmp
jbe
shl
ja
mov
adc
popa
imul
hlt
mov
and
pop
mov
or
je
add
mov
xchg
popf
cmp
in
enter
or
sbb
sbb
rorl
cmp
mov
or
insb
sarl
repnz
fmuls
fnsave
cmpsl
sub
stc
sub
pusha
mov
js
mov
jne
scas
int3
sti
pop
xchg
dec
hlt
adc
pop
pop
pop
into
and
push
pop
xchg
test
inc
aaa
mov
fwait
bnd
ljmp
jae
shll
mov
xchg
cmp
fs
push
sub
les
insb
bound
nop
lcall
xor
cli
xchg
dec
inc
cmpsl
and
add
sbb
push
fisttpll
iret
pop
popa
ficoms
inc
xchg
sub
inc
jo
scas
jle
and
aaa
add
inc
inc
cmp
pop
mov
sub
inc
pusha
add
dec
push
mov
fnsave
movsl
pop
js
fbld
mov
enter
sti
pop
out
xchg
jae
adc
lret
jne
adc
nop
xor
sub
pusha
cld
mov
jmp
push
pusha
mov
call
xor
cmp
mov
shll
out
or
mov
jo
add
int
and
xorb
mov
mov
jae
stos
bound
aaa
ss
loop
inc
sub
dec
out
dec
jo
push
sbb
mov
in
rcll
mov
pop
lret
xchg
cmp
cmc
out
jno
xor
xor
pop
repz
pop
or
or
test
add
push
mov
and
xchg
mov
cli
cld
movsl
gs
mov
sub
ds
inc
sbb
dec
ret
inc
sub
fisttpl
adc
clc
lret
ja
inc
call
ror
push
push
daa
lret
push
in
mov
adc
pop
aam
mov
dec
mov
jns
fcompl
pop
int
imul
cmp
loop
mov
fwait
outsl
mov
imull
shll
xchg
push
lods
andl
adc
jmp
xchg
dec
test
sub
shll
sarl
int
je
or
ja
jns
xor
ljmp
hlt
pop
mov
inc
fucom
add
std
test
sti
jl
add
mov
mov
cltd
xor
add
fnstenv
jmp
nop
pop
cmp
mov
dec
mov
jb
inc
jl
movsb
add
xchg
jb
mov
repnz
dec
popf
scas
cmp
xor
xchg
jle
pop
fs
mov
sub
dec
and
xchg
imul
mov
pop
mov
lods
out
pop
xchg
dec
inc
mov
movsb
inc
test
inc
lcall
xchg
fs
adc
mov
sahf
dec
or
inc
mov
adc
mov
iret
adc
mov
pop
jge
xor
mov
in
dec
in
dec
imul
jmp
push
mov
sub
inc
dec
push
inc
rcrb
loop
es
ja
jae
imul
or
aaa
cmp
xor
add
pop
fadds
pusha
das
pushf
add
jg
add
jb
mov
mov
out
daa
inc
push
dec
out
pop
insb
cmc
mov
jnp
xor
xchg
cmp
repz
scas
cs
pop
push
and
out
xor
sbb
mov
out
in
outsb
push
pusha
fs
leave
mov
add
hlt
and
cltd
outsb
aam
and
xchg
sbb
push
jl
scas
icebp
inc
xchg
sbb
ds
or
int
mov
pop
cmpsb
mov
sbb
mov
fs
sub
mov
bndldx
xchg
add
inc
xor
xorb
adc
int
jp
or
fisubrl
fstl
adc
xchg
pop
clc
inc
cltd
cmp
popa
test
mov
jnp
or
testb
lock
xchg
sub
mov
inc
dec
cmp
aad
push
jae
inc
and
pusha
shrl
pop
pop
mov
loopne
add
ljmp
mov
repnz
cld
sbb
test
dec
fmuls
jae
jnp
int
mov
addb
dec
sti
adc
cmpb
js
dec
nop
into
mov
xchg
lret
sbb
jae
add
mov
mov
adc
and
or
pushf
sbb
dec
ja
fldcw
insl
push
mov
and
jae
dec
xchg
mov
int3
pushf
nop
mov
pusha
mov
mov
xor
jmp
mov
aam
pushl
icebp
mov
cltd
test
rclb
push
mov
out
sbb
push
add
pusha
leave
ret
inc
sbb
xchg
add
mov
aas
enter
movsb
mov
test
lcall
test
and
xchg
mov
mov
pop
fdivl
movsb
cmovbe
jle
les
outsb
and
daa
jne
pop
dec
pushf
adc
insl
jge
arpl
jns
lret
cmpsb
popa
mov
jge
and
nop
notb
xor
adc
mov
sbb
dec
orb
sbb
or
cmp
push
lret
mov
dec
push
lahf
test
add
bound
sub
lds
sub
push
or
pop
xor
sbb
add
dec
filds
sub
xchg
pop
scas
dec
xchg
mov
outsl
pop
lods
aam
bound
ret
movsb
std
lcall
push
bound
and
rol
imul
push
stos
out
or
sub
int
cmp
in
xchg
push
addb
negb
cld
lret
and
adc
push
sarb
or
pop
xor
pop
movsb
in
test
out
mov
mov
mov
ja
loopne
mov
jge
das
pusha
pusha
leave
mov
movsb
inc
xlat
loop
shl
movsl
push
push
sarb
movsb
xchg
ja
shrl
imul
and
push
mov
cmc
pushf
scas
jp
xor
push
rorb
or
in
pop
cli
mov
cltd
out
arpl
out
add
or
push
xchg
bound
call
shl
pop
xchg
pop
std
jecxz
sub
mov
adc
dec
push
mov
popf
mov
dec
fstl
inc
xor
mov
in
mov
push
sub
mov
pushf
std
mov
pushf
ret
imul
outsl
stos
mov
pop
sub
enter
andb
orb
idiv
test
outsl
pop
or
out
and
inc
inc
and
fcmovnbe
ret
pop
icebp
sbbb
jecxz
call
mov
mov
int
filds
je
sub
dec
lods
sbb
mov
lahf
mov
or
add
fwait
mov
cltd
in
and
fcoms
jle
mov
push
cmpsl
ja
sahf
in
push
cmpsb
jns
and
mov
sbb
cld
pop
adc
mov
bound
jbe
test
xchg
jns
jne
push
xchg
arpl
outsb
nop
mov
lret
test
test
jo
mov
andb
pusha
inc
dec
movsl
test
dec
jp
lea
mov
push
aad
jecxz
pop
xchg
mov
sbb
or
popa
jnp
aaa
std
jp
or
add
mov
pushf
loopne
sbb
or
out
cmpsl
and
dec
mov
sbb
aaa
pushf
lahf
dec
pusha
in
push
scas
call
mov
imul
xchg
out
out
je
cmp
inc
xchg
dec
js
sub
or
outsb
add
ja
mov
cmp
scas
les
je
sahf
fstps
jmp
es
lcall
stos
out
pop
cld
dec
sbb
test
in
outsb
adc
xchg
cmp
js
lods
scas
in
fiadds
movsl
cmpsb
fsts
outsl
lret
pop
lods
and
jle
xchg
jbe
adc
or
xchg
lret
sub
mov
pop
bound
loopne
mov
xchg
pop
ja
or
mov
popf
outsb
test
or
xor
pushf
push
out
into
inc
xor
adc
pop
jl
xchg
loop
ljmp
inc
jo
popa
aam
js
lea
push
repnz
sbb
mov
in
rorl
xorb
scas
xchg
call
add
rcrl
jbe
and
fimuls
cmp
rcr
and
sub
or
pop
pop
aad
push
lret
xchg
mov
das
jae
push
in
or
arpl
mov
popa
dec
xchg
sub
or
mov
xchg
fs
pop
nop
dec
inc
mov
xor
and
xor
imul
jle
sahf
test
insl
sub
andl
pushf
test
movsb
mov
and
insl
xor
mov
inc
enter
or
cmp
xchg
lret
in
js
stc
jnp
xchg
add
mov
xor
xchg
nop
inc
loop
out
es
ficomps
or
fs
mov
push
xor
cltd
fcoms
xor
push
repnz
xchg
into
pop
xchg
addps
test
test
cmp
sarb
nop
mov
mov
and
enter
stos
sahf
add
movb
dec
aam
jecxz
stc
jo
aad
rcrb
popf
mov
push
hlt
cmpsl
mov
dec
cmpsb
shr
and
call
push
in
iret
sahf
push
adc
mov
leave
mov
mov
dec
ss
imul
mov
push
push
aaa
pop
jb
adc
shlb
hlt
lea
adc
adc
xor
pop
push
pop
xor
orl
mov
adc
xlat
lds
sarb
dec
push
mov
jo,pt
sahf
or
es
mov
das
jb
xor
rcll
or
aad
cltd
int
das
xchg
xor
mov
and
and
jge
int3
in
decl
cmp
jae
dec
mov
sbb
hlt
int3
stc
jmp
aam
push
jmp
push
xchg
inc
js
in
aas
loop
xor
add
mov
and
inc
into
jbe
rcrl
xor
in
mov
xor
test
fists
aam
xchg
jo
dec
lret
out
xchg
jge
test
icebp
mov
push
cmpb
and
lock
ror
mov
cmc
out
add
or
jae
sub
psubd
stos
in
in
cmpsb
and
xchg
cmpsl
data16
mov
pop
loope
and
push
aad
dec
les
and
mov
mov
dec
cli
loope
aas
mov
movsl
xchg
add
and
adc
inc
xchg
out
idivl
pop
fiaddl
or
in
xchg
adc
adc
xor
lcall
int
jle
shll
mov
sar
out
sub
add
mov
dec
ret
ds
jle
mov
shl
mov
sbb
or
add
ljmp
sti
je
jg
mov
adc
dec
dec
stos
push
dec
cwtl
jne
in
aam
stc
dec
enter
xchg
mov
xchg
adc
gs
leave
pop
sub
mov
sbb
jo
out
repnz
and
xchg
aad
cmp
sub
inc
leave
cmp
add
sbb
test
icebp
addr16
pushaw
dec
mov
cmpsl
fcoms
lret
mov
push
insl
and
rcll
pop
jmp
fisttpl
mov
in
mov
inc
xor
xchg
rcrb
jl
add
test
stc
in
sub
inc
shrl
scas
cmpsb
cmpsb
inc
movsl
leave
fmuls
mov
mul
dec
loopne
push
mov
adc
push
push
lcall
xchg
push
popa
jge
xchg
and
aas
ljmp
stc
idivl
ja
mov
push
hlt
sti
out
xchg
xlat
cmp
xorl
sbb
in
mov
neg
cli
push
pushf
dec
jle
xchg
call
adc
aam
xchg
std
ret
jmp
maskmovq
jge
mov
shlb
jecxz
test
add
xchg
hlt
cld
pop
arpl
dec
or
call
inc
testl
xor
mov
sub
jo
xor
jbe
imul
or
std
pop
fnsave
or
jns
fisubrl
dec
sbb
dec
out
or
push
inc
adc
movb
jo
sbb
push
dec
jnp
mov
sbb
or
ret
inc
fdivrs
push
push
repz
push
fs
fldt
andb
ds
sub
in
pop
and
scas
pop
fmull
pop
dec
ret
and
cmpsl
mov
cmp
or
popa
inc
jl
pushf
cmc
fisttps
fistps
test
das
outsb
add
jno
sarl
mov
jbe
dec
aam
cmp
fistps
push
out
stos
pusha
test
adc
sbbb
adc
lds
ja
outsb
test
sahf
jno
ds
mov
push
scas
push
xor
ds
dec
lods
mov
sahf
ficomps
inc
ret
fcmovb
sbb
inc
jle
push
data16
and
pop
and
into
inc
or
add
pop
xor
adc
fcmovnu
cltd
add
aas
and
pusha
int
push
jmp
fs
mov
aas
mov
addl
push
pop
dec
data16
push
cltd
dec
pushf
pop
clc
stos
lret
xchg
popfw
sbb
jo
call
repnz
dec
sbb
add
std
lods
aad
lods
loope
fdivrl
fstpl
ljmp
outsb
cmp
fistps
dec
xor
dec
sub
cmp
in
mov
int
js
jmp
jp
cld
cmp
mov
cs
pop
jg
in
cmc
mov
sub
add
sbb
aam
dec
mov
dec
jmp
xor
pop
mov
fcomp
aaa
pop
mov
repz
mov
sub
mov
loopne
hlt
push
jge
dec
dec
sub
inc
mov
adc
loop
in
mov
inc
idiv
scas
in
add
in
mov
lods
or
inc
mov
call
scas
or
mov
adc
and
hlt
loop
cmp
aaa
mov
adc
mov
adc
test
fmuls
push
imul
pop
pop
leave
lea
movsl
lahf
movsb
out
jp
pop
lret
rolb
or
push
das
xchg
dec
lods
dec
dec
mov
fnstcw
pop
xlat
pop
in
aam
addr16
es
mov
stos
xchg
mov
cmpsb
pushf
mov
inc
xlat
push
inc
stc
fdiv
fwait
popa
dec
sbb
sub
scas
sar
xor
xor
call
jle
test
in
icebp
lret
dec
mov
test
mov
out
pop
icebp
mov
out
insl
mov
or
outsb
mov
loope
fsubrp
xor
mov
fwait
adc
int3
scas
test
jl
add
pop
outsl
sbb
pop
pushl
insl
mov
enter
addps
mov
mov
stos
pop
fidivrs
adc
sbb
fistl
mov
dec
sub
jne
xor
or
flds
fst
data16
fistpl
aas
sbb
jg
add
fdivl
sub
sbb
es
jle
jae
mov
and
mov
fwait
jge
adc
add
ficoms
fsubrl
lea
mov
dec
xchg
ss
dec
or
xor
push
in
mov
and
add
sub
push
and
daa
scas
fs
xchg
loopne
in
into
icebp
mov
inc
popf
mov
xor
dec
andl
xchg
cli
push
fmuls
inc
sbb
pusha
mov
xchg
mov
jecxz
aaa
mov
push
pop
and
adc
sub
xor
inc
arpl
sbb
leave
fdivl
loope
xchg
enter
ret
mov
cmp
or
mov
adc
repnz
cmpsl
insb
xchg
imul
push
in
lret
jmp
insb
sub
orb
fwait
add
arpl
rolb
into
push
mov
and
inc
push
popa
xchg
sbb
das
xor
mov
popa
or
pushf
sbb
cmpsl
sub
push
ret
dec
fstpl
shll
int
xor
push
imul
jo
pop
into
push
adc
push
pop
sahf
fidivrs
and
lock
mov
int
xchg
in
mov
mov
add
inc
pushf
cmp
inc
cmp
push
out
int
pop
mov
out
cmp
cmp
movsb
xor
xor
aas
adc
xor
test
push
test
cmc
xchg
cmp
addr16
shll
cmp
xchg
and
mov
fsubl
out
mov
inc
xor
add
int3
arpl
sub
jnp
jmp
fldt
test
stos
pushl
push
into
aas
adc
xchg
xchg
in
cmp
mov
xor
pop
dec
faddl
xchg
pop
sbb
in
loop,pn
dec
jo
scas
add
xchg
lcall
shl
repz
add
pop
cmp
aaa
ljmp
mov
cmp
adc
cmc
pop
dec
or
lret
outsl
xor
jo
pop
sbb
mov
jmp
fwait
test
into
in
mov
adc
xor
dec
jecxz
mov
jg
sahf
repnz
aas
fxch
mov
scas
fstps
cmp
pop
outsb
push
mov
pop
jge
inc
and
dec
jl
lahf
ja
sbb
sbb
jns
add
mov
mov
mull
cmp
dec
inc
mov
push
inc
jbe
mov
mov
iret
loope
jmp
jb
or
bnd
sub
aad
fcmovb
jg
dec
xor
xor
mov
adc
leave
icebp
jnp
add
insb
xor
jne
mov
add
jnp
jnp
sbb
push
rorl
jo
mov
sub
enter
in
outsl
inc
repz
popf
sbb
fcmovu
mov
out
jae
stos
pextrw
add
push
jo,pn
idiv
jp
ja
decb
fcmovnbe
pop
xchg
mov
loopne
pop
cli
fistl
pop
int
testl
insb
adc
jo
sarl
int3
jbe
jmp
flds
dec
and
add
xchg
adc
dec
mov
add
int3
loopne
movsb
test
pop
cltd
stos
and
test
rcl
repz
xchg
sti
enter
mov
sub
stos
adc
cmp
sahf
outsb
sub
xor
add
das
lea
mov
jp
xor
gs
mov
in
and
test
aam
and
fdivrs
add
adc
fimull
in
in
or
sub
inc
adc
cmp
pop
scas
pop
nop
push
aam
cmp
xchg
pop
or
push
push
iret
mov
lods
cmc
xor
and
sbb
mov
jb
pop
add
push
mov
sub
sti
das
cmp
clc
mov
pop
insb
inc
mov
fwait
dec
popf
fwait
pop
mov
sub
and
mov
mov
cmp
adcl
jl
and
add
frstor
clc
in
pushf
fwait
add
test
enter
enter
es
sub
jnp
add
cmpsb
dec
xor
cli
mov
add
mov
outsl
inc
es
addr16
aad
add
fcmovne
nop
call
pop
aaa
mov
mov
jmp
insl
lea
int3
subl
lock
push
lods
arpl
mov
mov
add
sub
sbb
ljmp
mov
movsl
pop
cmp
push
daa
cmpsb
cmp
jmp
movsb
adc
xchg
sbbl
and
flds
hlt
into
lock
sub
clc
pop
sbb
test
adc
xchg
fnsave
push
and
bnd
rcrb
popf
mov
pop
in
out
mov
xor
push
xor
and
in
sbb
push
iret
fwait
jp
or
les
jns
in
iret
mov
mov
xchg
pop
mov
xchg
loopne
clc
fisubrs
js
sbb
sahf
sahf
jbe
test
push
cmp
push
shll
sbb
sub
sbbl
or
jbe
in
addr16
mov
or
mov
pushf
popf
cmpsb
cmp
ss
cwtl
jge
sbb
inc
mov
fwait
outsb
jb
dec
outsb
adc
pop
mov
and
sbb
scas
jo
ret
std
sbb
aad
jbe
cmp
out
shlb
cmp
loopne
outsb
jne
pop
mov
sbb
cli
jnp
out
ss
push
and
and
xchg
fldl
push
push
push
or
ja
movsb
aad
cmpsb
pop
push
cmp
jle
lret
aaa
mov
sbb
mov
shll
movsb
out
sub
ss
shlb
dec
jo
and
mov
rcr
mov
lea
and
dec
mov
and
mov
pop
lea
sub
fwait
mov
jns
mov
mov
cmp
shl
push
out
sahf
movsl
xor
repz
jbe
movsl
pop
mov
idivl
bound
sbb
loope
fildl
adc
lcall
out
pushf
push
push
sub
mov
clc
scas
jmp
xor
sarb
int3
mov
aad
cmp
sbb
push
mov
mov
insw
add
call
or
cs
and
je
jns
mov
mov
sbbb
pop
loope
cs
sti
xor
push
cmp
pop
aas
ret
cmp
dec
fldcw
mov
addr16
into
jbe
loopne
push
dec
xor
push
es
aas
mov
inc
fsubrs
sbb
shlb
jo
sbb
outsb
fwait
mov
mov
or
pop
dec
nop
lahf
and
ds
decl
test
es
jnp
push
scas
and
testl
or
jo
mov
lods
add
ljmp
xchg
cmp
pop
ror
movsl
pop
fwait
mov
adc
clc
test
or
fstl
mov
loope
pop
and
inc
fbld
stos
cmp
mov
mov
inc
ds
aam
cmp
scas
sbb
inc
test
xchg
mov
cltd
lds
mov
sbb
mov
jae
js
cs
mov
push
mov
adc
lret
jg
push
roll
xor
cmp
dec
and
imul
jge
ret
cmpl
dec
pop
xchg
inc
testb
int3
aad
lds
dec
sbb
in
pop
jno
mov
js
rcr
pop
in
sub
rcl
ret
dec
push
bt
rclb
pop
mov
ror
pop
or
pop
push
cmpsb
aad
andb
test
push
es
mov
jmp
sbb
mov
das
mov
and
cwtl
mov
out
stos
push
add
mov
mov
lcall
mov
shrl
popf
out
inc
int3
enter
mov
mov
flds
sub
call
pop
jecxz
and
icebp
and
push
sub
cwtl
jmp
fimuls
mov
mov
inc
cmp
cs
and
fcompl
jecxz
test
test
sahf
fwait
dec
es
sub
mov
xor
ret
fists
pop
pop
sub
mov
push
out
jnp
notl
stc
sub
jmp
fsts
push
mov
xchg
dec
or
mov
pop
xchg
inc
fs
fs
push
stos
lret
pop
jle
adc
push
and
dec
cmp
movsl
xchg
shr
xchg
add
xchg
icebp
xor
call
popf
mov
loope
and
shlb
fs
xchg
add
inc
imul
or
and
js
test
add
out
sub
movsb
mov
rcrb
cltd
xchg
mov
cmp
dec
adc
pop
enter
add
sub
push
je
daa
ljmp
dec
or
cmp
mov
cwtl
mov
inc
outsl
cmp
mov
push
inc
push
lret
jge
hlt
pop
mov
pop
fmuls
mov
movsl
cmp
pop
int3
or
pop
out
pushf
jg
ljmp
add
nop
out
cmp
push
push
adc
test
jne
and
std
add
mov
xor
cmc
repnz
or
sub
add
andb
imul
add
test
dec
imul
sti
xor
lods
cmpsl
mov
adc
stc
mov
icebp
mov
cltd
mov
cmc
xchg
out
cmp
decl
dec
scas
push
mov
int
mov
adc
dec
mov
in
loope
dec
test
lods
sub
xchg
adc
inc
xor
mov
mov
dec
loope
jae
popa
leave
shlb
pop
mov
cmp
sbb
xchg
xchg
mov
clc
sub
cli
sahf
lahf
cmp
dec
dec
add
push
xor
or
dec
dec
adc
or
xchg
cmp
mov
lock
sub
mov
xchg
cmp
sbb
adcl
sub
xchg
jmp
mov
lahf
mov
xchg
into
xor
scas
xor
js
test
mov
je
mov
mov
dec
ret
movsl
rcrl
add
test
loop
outsb
add
enter
add
xchg
push
mov
xor
icebp
enter
inc
mov
sub
cmp
pop
js
cmpsl
mov
mov
jge
push
push
sbb
add
mov
ljmp
xchg
ficoms
push
mov
out
mov
leave
in
stos
jle
fnsave
cmc
mov
out
fsts
mov
imul
sbb
ret
movsb
lahf
clc
add
in
inc
scas
cld
cmp
inc
xor
dec
dec
jmp
cmpsb
scas
xchg
enter
xchg
aas
xchg
xor
sub
test
fs
or
adc
and
push
sub
sbb
aam
adc
sub
and
mov
repz
or
pop
mov
fsubl
mov
imul
incb
rorl
out
cs
jnp
jl
imul
sbb
push
jmp
enter
rcl
xlat
cwtl
xchg
test
mov
or
or
xchg
cmpsl
dec
inc
cltd
cmp
ja
ss
iret
rcr
xchg
sub
orl
mov
cli
test
push
test
imul
mov
aad
cmp
les
adc
pop
sarb
icebp
pop
out
arpl
rep
push
mov
adc
mov
ja
das
pop
push
int3
outsb
cli
int
xchg
add
into
sub
mov
movsl
jae
fmuls
xor
xor
cvtdq2ps
sub
cs
xor
mov
and
stos
push
mov
mov
arpl
ret
mov
pop
push
mov
mov
aas
mov
in
pop
inc
dec
or
dec
bound
inc
mov
mov
or
loope
mov
jne
push
sbb
mov
repz
xchg
xlat
jno
jmp
inc
sbb
ret
stos
rcrb
jbe
pop
fwait
in
jbe
cmp
pop
or
jmp
pop
adc
lods
jne
cltd
sahf
pop
jbe
mov
push
stos
cmp
xchg
sub
jnp
sub
sbb
loopne
sub
bound
or
imul
ja
jbe
popa
xchg
je
rcr
sbb
inc
stos
cmp
xchg
xchg
or
dec
sahf
mov
xor
loopne
push
or
pop
sub
mov
xchg
es
dec
cld
lods
repnz
mov
scas
pop
rcl
cmp
flds
ret
mov
xrelease
push
cs
mov
rcr
mov
icebp
bound
sbb
stos
mov
sbb
xlat
mov
or
adc
sub
adc
xor
add
gs
mov
in
push
or
or
mov
aaa
cmp
hlt
les
jo
insb
jae
lods
fsts
mov
mov
sub
test
mov
mov
iret
ja
js
int3
pop
or
test
inc
pop
aad
nop
movsl
sub
lods
dec
xor
aas
cmp
int
dec
add
push
mov
jmp
jae
loopne
dec
cmpsb
int3
or
mov
rcll
fwait
mov
std
xchg
filds
jns
sbb
dec
mov
jp
clc
xor
xchg
jne
jbe
nop
add
xor
cmpsl
sahf
cs
in
lods
mov
inc
cmp
xor
lds
lea
inc
lods
and
xlat
push
out
loopne
inc
push
scas
sbb
xchg
inc
rorb
cmp
cmp
push
sahf
cmovo
xor
out
sti
xchg
cmp
add
fs
and
xor
xchg
xchg
frstor
adc
rcrl
or
cmc
sahf
ljmp
stc
popa
xchg
dec
dec
mov
je
mov
add
cmp
dec
dec
add
cmp
mov
popa
xchg
pop
xchg
dec
shlb
roll
imul
loop
adc
femms
xor
xor
jo,pn
mov
cmp
push
xor
add
push
and
cmc
push
out
add
enter
sub
inc
dec
ja
test
mov
aam
xchg
xchg
mov
add
mov
add
jp
push
lods
mov
data16
les
adcl
xor
push
and
dec
movsb
jg
xor
fdivr
jp
cld
int3
clc
mov
inc
int3
inc
out
cmovae
daa
sbb
shll
imul
stos
xor
cli
scas
ret
les
insb
daa
and
inc
mov
mov
push
and
popl
lret
mov
xchg
ret
rolb
add
aas
in
into
cmp
cmc
arpl
jecxz
cmp
or
sbb
add
mov
dec
int3
fstl
pushf
test
mov
adc
or
xor
push
mov
imul
lret
lds
push
jge
push
mov
adc
jmp
enter
sbb
lcall
adc
push
sub
jo
add
xor
jl
inc
idivb
out
int
mov
lahf
loop
adc
leave
sbb
into
aam
jnp
rcl
inc
jecxz
mov
icebp
lcall
inc
cmp
cmp
cmp
loope
loop
aad
xchg
lcall
adc
inc
popf
mov
sahf
lock
sbbb
ds
sub
lods
push
cmc
jnp
and
in
ret
and
mov
inc
enter
shrb
dec
pop
jo
xor
pop
notb
jo
ret
or
jecxz
fwait
test
push
jmp
add
addr16
ja
movsb
shrb
mov
xor
cs
test
imul
inc
push
dec
and
arpl
push
sub
mov
ja
out
int3
push
sbb
jne
jg
loop
rcr
out
icebp
aaa
and
cpuid
call
sub
push
mov
movsl
cwtl
push
cmp
mov
lret
outsb
adc
pop
inc
mov
jecxz
loope
and
push
sbb
push
pop
aad
inc
sbbb
fadds
outsl
mov
lahf
and
daa
and
or
cld
icebp
mov
sbb
add
pop
leave
pop
cmp
and
idivl
add
xchg
jns
icebp
jp
lahf
stos
sub
pop
stc
jno
in
push
icebp
jbe
adc
adc
in
mov
mov
sub
test
daa
lcall
fcomps
and
mov
sbb
cltd
ret
push
enter
jecxz
cmp
add
jne
mov
mov
push
dec
fwait
loopne
ret
pop
mov
jnp
mov
jns
lock
pop
mov
adc
in
push
push
mov
and
lods
scas
cmp
mov
mov
cld
xchg
jb
mov
out
xchg
out
push
fsub
and
mov
adc
out
adc
mov
in
adc
lahf
pop
jp
cmpsl
push
pop
insl
and
xchg
shrb
push
cmpsl
das
sub
aaa
add
and
xor
sbb
insl
loop
or
dec
lahf
jg
dec
ljmp
pop
ret
xorl
dec
jle,pt
in
cltd
in
lds
pop
ret
inc
push
mov
sbb
stos
faddp
cmp
pop
push
pushw
test
lds
mov
lds
xchg
nop
in
pop
pop
cmpsl
xor
retw
ljmp
sbb
xchg
in
mov
xor
std
or
lret
ljmp
mov
sbb
data16
ret
mov
pop
dec
cmp
fbld
cmpl
push
mov
insb
jecxz
aad
xor
lds
sub
sahf
lret
out
xor
or
popf
pop
xor
sub
push
orb
dec
pop
leave
test
jnp
jp
rcrb
ret
bound
jle
sbb
incb
or
mov
cwtl
inc
loop
jb
xchg
adc
mov
je
xchg
push
mov
xor
push
pop
insb
push
dec
enter
shll
std
add
shrl
dec
rolb
idivb
add
xor
aad
mov
pop
push
or
out
int3
sub
ljmp
les
mov
dec
mov
xor
cmpsl
jo
inc
insb
dec
ret
adc
mov
minps
inc
lock
mov
jns
jno
pop
dec
clc
fsin
ficompl
les
jge
cltd
jecxz
xor
dec
sub
push
push
lods
jns
xor
xchg
pop
fadd
jl
popf
add
cmpsl
mov
jle
das
pop
cmp
lahf
mov
cmp
add
cmp
xchg
jge
cmc
data16
or
out
out
push
mov
push
inc
jo
mov
lret
movsb
test
pop
cmp
or
cmp
push
cmp
aad
shl
out
cmp
pop
mov
insl
and
jnp
lods
shrb
cltd
xchg
repz
push
movsb
cltd
and
push
add
inc
pop
mov
iret
dec
insl
sbb
mov
insb
pop
xor
test
int
mov
push
mov
dec
bound
cmp
out
and
dec
cmpsl
decl
add
ja
adc
test
aam
xchg
nop
in
popf
dec
add
push
scas
inc
jmp
jnp
adc
jo
shlb
mov
aas
and
jne
stc
lods
in
int
xchg
and
inc
xor
rcl
imul
fisubs
es
in
lods
or
stos
loop
subb
mov
push
test
mov
inc
out
mov
adc
out
push
sub
aam
inc
nop
repz
mov
cmc
and
pop
mov
hlt
adc
fimull
movsl
rcl
inc
outsl
xchg
jl
cld
and
das
mov
xchg
test
int
xchg
sub
test
and
xor
mov
imul
mov
sti
fidivrl
idiv
daa
xchg
mov
pushl
push
lahf
stos
push
xchg
icebp
hlt
jae
push
cmp
ss
in
jbe
sbb
decb
mov
lret
jle
cmp
cmp
push
jae
mov
pop
push
in
dec
or
cmp
outsl
arpl
jae
das
daa
in
push
ss
sbb
mov
ds
mov
sbb
in
loopne
mov
cmpsl
in
out
cmp
sub
rorb
or
cmp
push
xchg
sbb
add
in
scas
aad
sub
dec
insl
pop
sub
xlat
add
dec
jae
xchg
pusha
sbb
mov
sbbl
lcall
pop
addr16
cmp
xor
and
fisubl
sbb
mov
cmp
ret
cmc
push
out
xchg
leave
mov
rcr
inc
out
add
je
dec
leave
shlb
nopl
jns
addr16
shll
mov
push
stos
fs
inc
mov
adc
stos
je
sub
cs
insb
mov
mov
pop
xor
adcl
cmp
xchg
pmuludq
lret
roll
lcall
push
adc
stos
cwtl
in
mov
fdivl
insl
mov
mov
sbb
mov
jp
out
ret
dec
cmpb
lret
or
test
xchg
fiaddl
adc
pushf
add
push
sbb
dec
mov
mov
sub
ja
push
and
test
cli
xchg
jmp
pop
or
mov
adc
std
xor
mov
loop
lret
loope
mov
adc
loope
popf
inc
sbb
or
popl
call
mov
jecxz,pt
pushf
pop
jo
jbe
sub
sub
mov
pavgb
out
sti
popf
sub
cltd
push
dec
dec
aam
dec
out
push
inc
add
sbb
xchg
inc
popa
loope
cwtl
add
adc
pushf
lahf
inc
cltd
and
iret
dec
push
test
fdivrl
cli
arpl
jecxz
xchg
inc
xchg
aad
jo
ret
aaa
outsl
and
add
cmp
outsl
add
add
int3
pop
imul
rorl
enter
jl
add
loop
and
in
aam
jmp
into
pop
out
jbe
xchg
push
xchg
xorb
mov
repnz
push
repz
and
mulb
loope
popa
pushf
fistpl
imul
sub
pop
lret
ss
xchg
sub
inc
mov
jle
jne
push
adc
mov
xor
cmc
test
fcmovb
loop
ret
mov
or
pop
xchg
outsb
cmp
repz
mov
imul
daa
insl
loopne
cltd
push
mov
lea
inc
int
sbb
fsts
gs
aas
inc
aaa
gs
sbb
mull
testb
mov
aaa
xchg
fisttpl
adc
lret
lret
cmpl
sub
or
out
mov
lret
insl
push
stos
xchg
repz
movsl
jecxz
lods
mov
xchg
rcl
lock
jg
cli
push
and
mov
mov
lods
lret
aam
ret
add
mov
jecxz
mull
adc
sbb
iret
in
jg
xchg
xchg
push
jne
inc
inc
movsb
fcoms
cmp
pop
push
lock
test
add
jns
push
mov
movsl
adc
inc
addr16
repnz
pop
xor
push
fldl
sub
into
dec
jbe
nop
int3
mov
push
sbb
and
add
jb
ret
pushf
out
outsl
add
mov
gs
push
lret
test
das
scas
clc
cmpsl
mov
jmp
pop
out
fsubp
push
mov
cmp
mov
in
lcall
es
sbb
add
adc
repz
imul
add
add
inc
jl
aas
nop
loopne
fucomip
ja
je
loop
rclb
fs
jo
pop
pushl
push
loopne
sbb
int3
lahf
inc
subl
mov
inc
aam
pushl
pop
in
cs
ret
pop
jne
xlat
gs
pop
stos
dec
add
jge
lds
lret
jg
lds
jp
addl
adc
iret
cli
mov
int3
mov
sbb
and
push
stos
mov
repnz
xchg
jbe
mov
mov
and
mov
inc
sbb
pop
aas
les
jb
xor
push
sbb
push
add
test
inc
add
idivb
sub
ds
and
mulb
inc
jns
mov
aas
js
mov
sub
imulb
shlb
mov
clc
pop
adc
xor
js
outsl
ss
pop
add
jbe
and
sahf
add
add
jns
ds
push
dec
ds
subb
ficoms
rorl
pop
push
int
jge
cmc
push
mov
lret
cwtl
inc
and
mov
mov
or
mov
daa
sarb
cwtl
in
rorb
jo
fwait
in
xchg
iret
scas
jmp
test
dec
test
adc
subb
out
std
cmp
add
fmull
in
mov
cmpsb
ss
jg
mov
lods
jge
shr
xchg
notl
pop
mov
pushf
and
addb
mov
loop
jp
pop
xor
push
mov
das
adc
in
xor
das
scas
sub
in
in
inc
es
jp
std
in
xlat
int3
cmp
arpl
jmp
mov
fs
hlt
push
out
xor
xchg
sbb
sbb
mov
inc
xchg
cmp
cmpsl
jae
add
jbe
inc
xor
data16
fwait
push
pusha
jno
nop
cmp
dec
clc
dec
shl
sub
imul
outsb
lea
in
push
xchg
cmp
push
xchg
push
jae
rorb
mul
sub
xchg
pop
outsb
or
icebp
pop
cmp
lahf
les
insl
sti
mov
cli
adc
std
adc
test
add
mov
sub
sti
xchg
popf
mov
lods
pop
xchg
roll
lcall
mov
ss
dec
dec
mov
imul
sbb
adc
imul
rcrb
roll
inc
call
pusha
lcall
mov
imul
mov
cs
flds
and
push
cltd
mov
cmp
mov
js
lret
xchg
push
bnd
jb
enter
or
sub
out
loopne
fildl
mov
rolb
cmc
inc
sub
imul
or
ret
adc
pop
mov
mov
push
es
ret
sub
pop
sub
stos
xchg
sbb
inc
inc
mov
test
mov
ficompl
xor
jo
loop
or
mov
in
repz
sbb
adc
cmp
cmpsl
mov
jmp
loope
mov
xchg
icebp
or
push
mov
sbb
inc
pop
sbb
pop
call
pushf
int
jmp
cli
movb
mov
shll
test
mov
push
repnz
jb
nop
sub
mov
push
jl
push
push
mov
push
in
into
subb
adc
xchg
cltd
xchg
push
js
stos
mov
hlt
jl
or
and
imul
push
dec
fcmovne
mov
out
cld
xchg
iret
movsl
xchg
jmp
push
xor
mov
cmp
mov
sbb
pop
stos
inc
xor
rcll
mov
inc
pmaddwd
inc
ror
loope
pop
adc
and
sbb
sub
sbb
inc
push
pop
lock
insb
mov
imul
push
dec
scas
push
xchg
rcrl
mov
mov
mov
sti
call
or
jl
fwait
lock
mov
or
out
dec
pusha
mov
adc
and
sub
mov
in
imul
add
add
mov
div
loopne
loop
mov
push
movb
fisubrs
and
jb
leave
xchg
jmp
xchg
sahf
divb
in
fisubs
mov
fistps
in
orl
addr16
cmp
nop
jmp
mov
repz
loope
cmp
jnp
xor
sbb
daa
test
xchg
ss
push
ds
test
mov
inc
mov
add
inc
stos
adc
jl
or
pop
xchg
scas
fistl
outsl
jecxz
dec
add
push
push
xchg
and
jge
mov
inc
dec
andl
and
xor
int3
sti
ret
sub
inc
outsb
shl
rcrl
imul
out
fs
dec
fistl
outsb
hlt
add
loope
clc
inc
loop
inc
xchg
cmp
add
jno
leave
loope
xor
ficomps
xchg
sbb
mov
pop
sub
rclb
adc
or
cmpsb
std
jl
mov
mov
xchg
jne
mov
insl
aaa
sahf
add
addr16
push
shlb
int3
lods
mov
and
xchg
scas
jns
std
addr16
popf
test
cmp
int3
sbb
rcll
pop
mov
xor
adc
jb
adc
and
outsb
adc
pop
sti
or
dec
cmpb
cmp
notl
add
ret
leave
push
jmp
xchg
pop
fs
mov
or
add
and
push
push
mov
adc
xchg
pop
sbb
xchg
shrl
pop
data16
aas
xchg
aad
and
sbb
test
xor
mov
cmp
mov
loop
sub
outsl
pop
dec
subl
push
xor
mov
sbb
jmp
cltd
and
inc
mov
aad
sar
add
arpl
xchg
xor
fimull
sbb
flds
pop
sub
iret
call
pushf
sub
in
push
jge
iret
scas
std
push
stos
in
mov
dec
pop
bound
mov
jg
dec
leave
lds
test
jge
sbb
imull
mov
adc
or
scas
sti
sub
addb
fbstp
cmpsl
insb
test
cmp
pushf
sbb
mov
mov
pop
hlt
daa
and
xchg
movsl
insl
popf
jno
aad
cmp
call
push
retw
xchg
xchg
xchg
jg
ficomps
rcrb
dec
aaa
rcr
out
adc
stos
arpl
aad
xor
mov
inc
mov
push
lds
xchg
hlt
or
and
xor
insb
inc
and
test
and
pop
sbb
mov
adc
cltd
nop
or
or
dec
cmpsb
or
mov
pusha
addr16
cmp
ret
test
push
scas
loope
out
cmp
xchg
jb
stos
lods
out
jmp
push
inc
mov
jae
xor
imul
jcxz
sbb
aas
loop
es
aaa
call
add
jo
xchg
aam
aam
cmpsl
dec
out
repnz
jbe
sbb
jge
xchg
in
sar
popa
lret
dec
dec
mov
les
push
cmp
jl
xchg
shl
loope
outsl
mov
push
out
popa
sub
jecxz
imul
mov
pop
mov
mov
ret
cmpsb
jo
mov
clc
push
lahf
sub
addr16
mov
and
cmp
repnz
sub
xlat
filds
test
ret
sbb
decl
stos
dec
xchg
test
mov
xchg
and
push
push
jmp
xor
or
cmpsl
jle
mov
bound
push
mov
loop
or
add
aas
adc
jle
mov
testb
popa
stc
into
sbb
shl
loope
js
je
popa
xor
lahf
stc
subb
insb
rol
xchg
cmp
mov
gs
adcb
rcr
or
in
and
jmp
lods
mov
addr16
push
sahf
fwait
jmp
rorl
scas
jns
pop
xor
and
shll
std
adc
or
xchg
cld
les
jnp
dec
xchg
mov
mov
loope
repnz
frstor
xchg
out
nop
pushf
andl
cwtl
sbb
mov
insl
imul
mov
mov
mov
orb
adc
mov
inc
aad
cmp
int3
sbb
loop
adcl
hlt
nop
fwait
pop
mov
jns
mov
push
cmp
ror
xor
or
dec
jne
iret
arpl
lock
loope
fwait
xor
jl
fwait
sub
mov
cmp
xchg
dec
daa
mov
and
pop
fists
call
stos
xchg
fcmovnb
bound
lds
jne
insl
mov
and
mov
mov
push
inc
lock
pop
je
adc
pop
push
lcall
xchg
inc
lret
adc
or
je
cli
loopne
mov
dec
mov
and
cmp
clc
sahf
cmp
pop
ret
mov
sub
dec
adc
addb
jl
jmp
stos
loope
arpl
pop
iret
icebp
pop
and
pop
movsb
fwait
mov
xor
fwait
adc
adc
in
nop
push
adc
and
push
sub
ljmp
jne
mov
cmpsb
incl
cwtl
sub
dec
loope
es
divb
into
jnp
mov
andb
mov
sahf
sbb
imul
rclb
int3
ja
movb
pop
insb
cmpsl
xchg
fucomip
cs
scas
cmc
xlat
dec
nop
xor
and
sub
and
or
add
into
sbb
pop
mov
outsb
push
repnz
dec
jecxz
ds
pop
outsb
cwtl
push
sub
test
lds
adc
cmp
iret
jno
adc
arpl
shl
loope
repz
je
add
das
jb
and
xchg
xor
pop
sbb
cmp
pop
pop
push
ja
sbb
popl
add
jmp
jno
sbb
add
push
mov
push
inc
mov
ss
inc
xor
sub
les
loopne
pop
out
cmp
mov
jp
std
cmp
aam
das
test
adc
adc
adc
test
sbb
idivl
cwtl
lods
in
je
sbbb
mov
mov
je
sbb
add
and
outsb
iret
sbb
mov
jns
push
mov
imul
inc
push
bound
sarb
lock
mov
insl
cmp
lods
loop
xor
pop
xchg
mov
out
adc
pop
mov
test
pushf
push
inc
mov
pop
gs
cmpsl
xchg
hlt
fisubs
and
inc
sti
xlat
notl
lahf
addl
cmp
inc
out
scas
jmp
push
mov
pushf
push
mov
sbb
jno
scas
push
mov
or
leave
fs
push
data16
lret
dec
scas
sbb
sahf
out
shl
cmpl
addb
sbb
stos
adc
loope
es
subb
lret
dec
arpl
sbb
xor
loope
outsl
leave
je
adc
out
pop
or
lret
mov
inc
es
lock
ret
or
scas
pop
mov
ret
shl
mov
mov
or
pop
inc
dec
subl
cmc
pop
mov
imul
inc
sarl
orl
and
nop
scas
sub
cmc
icebp
jg
stc
pop
jae
adc
psubb
mov
cld
enter
jge
inc
sbb
cmp
lock
push
cwtl
aas
lret
xchg
pop
xlat
inc
mov
push
xchg
cmp
aam
xchg
cmpl
rolb
jne
mov
xchg
or
sbb
cs
loopne
int3
hlt
push
int3
mov
popf
ret
jae
lahf
and
out
dec
rcrb
cmp
jle
cli
pop
fs
dec
adc
mov
divb
cmp
inc
jae
dec
push
mov
ret
lods
cmp
stos
fwait
dec
mov
adc
push
mov
xchg
jg
mov
das
or
and
mov
jg
add
lret
inc
mov
mov
loopne
fwait
xchg
cmpsl
jp
xchg
stc
in
add
sub
aad
inc
stos
shlb
xor
push
scas
daa
sbb
pop
xchg
mov
cmc
int
dec
shrb
and
push
xor
cwtl
pushf
fs
mov
cli
hlt
out
sahf
cmp
pop
loop
scas
dec
bound
fcoms
push
lea
jbe
divb
movsl
dec
cld
mov
mov
adc
mov
inc
jo
mov
imul
add
pop
push
push
addr16
gs
xlat
fildl
jb
sub
fildl
xor
inc
mov
lods
fsubs
sbb
push
pop
jge
hlt
into
ffreep
mov
push
loopne
bound
sbb
push
mov
repz
cli
xchg
push
les
popa
gs
repnz
pop
sbb
mov
fnstsw
es
and
orl
std
adc
mov
popa
or
loop
out
add
inc
loope
out
icebp
lods
push
mov
mov
jbe
ror
pop
pop
sbb
in
jnp
mov
jmp
cli
xor
clc
mov
xlat
xlat
mov
push
pop
jnp
xor
movsl
cltd
jmp
fldt
fwait
adc
and
cli
fisttps
popf
imul
lods
scas
pushl
pop
cmpsb
jecxz
cmp
ds
and
insb
leave
stos
and
idivl
mov
push
mov
xor
mov
std
xor
popa
stc
jp
aas
or
jge
jb
inc
lret
std
and
xchg
dec
inc
inc
inc
mov
lret
mov
shrb
push
xor
inc
mov
js
ror
xchg
mov
xchg
add
pop
jbe
push
fisttpll
push
adc
out
mov
and
popa
shl
xor
ds
mov
fs
push
cmc
xchg
inc
sbb
cmp
scas
nop
xor
pop
insb
outsb
nop
pop
je
pop
or
arpl
inc
in
rcrl
decl
cmp
or
dec
xor
or
jno
mov
add
stc
jbe
mov
imul
push
les
mov
jae
out
mov
xchg
pop
and
or
cmp
imul
stos
inc
adc
sub
sbb
sti
cmpsl
gs
nop
clc
test
repnz
mov
in
in
mov
add
adcb
cmp
hlt
cmpb
pop
mov
sub
sarb
enter
jg
add
out
cmp
sahf
and
cltd
loope
dec
cli
inc
jl
pop
push
lcall
fwait
xlat
lcall
push
bnd
in
xor
jno
loope
rclb
mov
aaa
mov
lahf
pop
or
cmp
cmp
mulb
and
jno
cmp
sub
sbb
lcall
dec
push
into
jno
hlt
outsl
adc
rcll
lea
pop
push
fcoms
pop
adc
or
rdmsr
in
hlt
sub
orl
fsubrl
lods
fstl
test
cmp
test
xchg
sub
jnp
xchg
and
xor
sbb
ja
xchg
and
fsubl
mov
subl
and
jae
movsl
popf
adc
imul
jo
outsb
jp
mov
mov
test
dec
xor
push
add
adc
jae
les
mul
cs
int3
inc
in
push
cmp
push
outsb
aas
insl
mov
mov
add
clc
pop
int
dec
repz
enter
push
mov
ret
cmp
sub
cmp
cmpsb
aad
flds
lcall
mov
test
scas
xchg
ss
jbe
sarb
sub
paddq
xchg
fidivs
adc
push
push
xchg
nop
adc
push
inc
mov
cli
repz
movsb
pop
dec
xchg
popf
jbe
push
rcrw
icebp
sub
jge
loope
xchg
lods
outsb
and
jmp
mov
je
sbb
mov
pushf
cmpsb
mov
addl
dec
add
testb
cld
xchg
xchg
lahf
xchg
cmc
add
pop
push
jp
stc
and
hlt
push
dec
aas
lds
sahf
adc
sbb
mov
aaa
sub
push
xchg
lds
dec
and
repz
icebp
mov
mov
sbb
icebp
pusha
and
adc
data16
or
jnp
xor
pop
inc
cmpsb
cwtl
pop
xchg
mov
mov
pop
gs
push
sub
rcll
sub
inc
sub
arpl
dec
ret
dec
xor
dec
dec
stos
cmpsl
ja
hlt
insb
aaa
test
nop
loop
adc
dec
subb
out
loop
aam
xor
ja
idiv
inc
add
lahf
xchg
pop
xchg
or
or
jp
mov
pop
in
sub
insb
cmp
stos
mov
sbb
push
sub
fimuls
aad
pop
fists
rorl
dec
dec
in
lock
inc
scas
loope
or
ja
ljmp
mov
fiadds
mov
sbb
mov
inc
and
lock
xchg
out
push
in
pop
andl
cli
mov
lret
stos
mov
in
ret
aaa
das
adc
in
or
insb
test
testl
xchg
lock
mov
inc
pop
xlat
outsb
test
sbb
js
jecxz
or
push
ja
rclb
hlt
jge
daa
sbbb
push
movsb
cmp
std
test
mov
test
xchg
inc
gs
daa
dec
push
shll
into
mov
movsl
fnstcw
adc
jns
push
js
mov
mov
fstl
xor
cmp
sub
jbe
fcoml
push
int3
xor
inc
pusha
outsb
jb
dec
and
sbb
cmp
xchg
or
aaa
fcomps
jmp
adc
sub
cmp
or
pop
add
test
sbb
mov
sub
push
xchg
push
cmp
pop
jne
mov
add
inc
sbbb
lcall
cld
pop
add
cmp
leave
in
scas
xor
jbe
cwtl
pop
mov
cmc
std
ret
pushf
scas
sarl
sbb
mov
xchg
fyl2x
mov
subb
mov
test
jmp
xor
add
sbb
mov
dec
mov
popa
divb
fs
in
push
jecxz
aad
incl
push
repz
ljmp
xchg
das
mov
push
mov
pop
call
mov
mov
aaa
add
cmc
cmp
sarb
pop
mov
add
push
cmpsb
testb
repnz
nop
inc
stos
inc
cltd
push
lds
xchg
jbe
add
inc
lcall
cld
sbb
test
pop
sahf
add
shl
sub
mov
cmc
lret
push
fadds
stc
sub
imul
push
sbb
inc
sub
xor
mov
into
jg
mov
outsb
mov
mov
sbb
ret
mov
cmp
test
xchg
mov
cmp
xor
mov
xchg
pop
sub
iret
mov
cmp
pop
inc
sbb
js
jbe
les
lds
add
fstpl
popa
push
dec
les
push
mov
ss
ffree
adc
cmpsl
mov
movsb
inc
lds
push
xor
cmp
mov
lock
mov
insl
and
imul
jl
or
negb
sbb
hlt
push
into
lret
es
ss
cmp
mov
call
scas
mov
mov
dec
es
insl
rcrl
int3
imul
in
fidivl
inc
cmp
stc
scas
adc
in
sti
push
and
pop
sti
pop
lock
hlt
sub
mov
mov
insb
fcmovnbe
mov
and
pop
cmp
add
stos
insl
mov
push
push
push
jge
mov
rcl
lret
jl
sbb
jge
push
inc
xchg
xchg
call
jae
fnstenv
pop
sub
fwait
cmc
dec
push
insb
jo
loope
push
dec
ja
shll
push
dec
fmull
mov
push
push
or
jmp
or
out
rolb
in
out
loopne
cmp
ja
and
add
push
mov
adc
xchg
push
mov
fcmovb
lds
adc
xchg
fdivr
cmp
clc
inc
inc
pop
movhps
jle
pop
leave
fistpll
rcl
mov
pusha
jo
mov
adc
popa
xchg
outsb
aaa
aad
je
push
in
pop
leave
cs
push
mov
cmc
push
push
cmp
xchg
sahf
mov
and
xchg
cmp
and
or
jl
pop
mov
lods
sub
cwtl
hlt
test
xchg
test
into
adc
xchg
pop
xor
pop
inc
out
and
data16
xchg
xor
sub
fiadds
stos
cmp
dec
fiaddl
jl
out
pop
lods
sub
dec
jae
in
inc
push
loop
mov
mov
mov
inc
dec
mov
daa
mov
xor
or
daa
push
enter
xor
xchg
stos
push
mov
inc
lea
mov
sbb
jne
arpl
sbb
dec
loopne
out
in
xlat
pushf
jg
lret
loope
cmove
aas
mov
add
jg
fadds
inc
insb
mov
stos
mov
int
and
mov
sbb
lds
xchg
lods
mov
or
ja
and
mov
sub
and
pop
insl
and
pop
lea
inc
add
icebp
lahf
rcr
js
pop
divl
mov
fwait
cmp
cmp
ja
pop
lret
mov
push
rol
nop
push
roll
call
bound
adc
cmp
xchg
push
mov
fnstsw
sbb
dec
adc
push
push
pop
movsb
mov
pop
and
cmp
and
mov
jmp
cwtl
xchg
xchg
sbb
daa
sbb
lcall
leave
les
inc
aad
mov
lret
or
or
idivb
mov
repz
movsl
sbb
fistps
fsubl
adc
push
je,pn
adc
mov
std
scas
fnstcw
movsb
or
mov
shll
movsl
imul
out
jns
cli
cwtl
sti
add
shlb
dec
cwtl
add
jg
outsb
dec
and
mov
xor
add
and
and
clc
stos
leave
jae
or
sbb
sub
mov
add
or
sbb
fwait
rclb
in
fmuls
aas
jge
andb
jge
fcmovu
ss
lock
xchg
ja
cmp
push
decb
mov
adc
push
or
sbb
fwait
nop
jae
push
xchg
push
cld
aas
adc
cwtl
and
mov
in
cmpb
loopne
sub
insl
into
in
popa
mov
aaa
lods
push
mull
adc
out
jg
or
pop
cwtl
mov
int3
add
int
push
dec
pop
dec
fmull
add
sti
cmpsl
mov
out
cmp
jecxz
rol
dec
mov
mov
cld
outsl
xlat
shll
and
ret
sub
jp
or
or
ret
mov
push
inc
insb
xor
or
cli
or
adc
popf
loopne
imul
in
lret
xlat
dec
xlat
sbb
jno
lcall
mov
outsl
out
cmp
js
out
sub
frstor
call
pusha
add
insl
pop
fisubrl
enter
stc
jecxz
popa
mov
mov
push
out
outsl
andl
hlt
gs
cld
xchg
push
loope
popa
clc
dec
and
inc
aam
mov
mov
dec
in
cld
xchg
push
fst
push
pop
imul
ficoms
mov
stos
jnp
mov
mov
scas
lock
push
jg
test
mov
adc
xor
xorl
xchg
mov
hlt
fwait
shll
xchg
fisttps
les
dec
into
cwtl
mov
ret
inc
or
aaa
adc
xor
sbb
rcll
fdivrs
push
and
cmp
cwtl
inc
fnstcw
inc
andl
pop
push
lahf
sbb
xorb
shrl
xchg
cli
lods
imulb
mov
add
ds
pushf
mov
mov
and
pop
cmp
js
push
cmc
outsl
scas
xchg
or
sub
cmovb
jg
rcl
bound
test
dec
scas
cld
xchg
inc
lret
sbb
pop
mov
jne
cmc
aad
sub
cmpsl
cwtl
sub
enter
mov
dec
dec
cmp
sahf
clc
add
inc
sbb
sbb
pop
jg
test
js
pusha
lods
inc
push
aas
pop
and
adc
add
clc
jb
fbld
jno
xorl
mov
xor
xchg
sbb
in
pushf
jle
pop
fdiv
popf
or
outsl
test
and
loopne
xchg
xchg
inc
sbb
lods
aad
adc
dec
jg
shrl
lcall
xchg
or
jl
mov
add
pop
loopne
push
imul
stos
and
adc
imul
xor
or
data16
sbb
pop
mov
insl
cli
sub
out
outsl
call
insl
jno
cmp
jg
jle
xor
dec
mov
lock
test
pop
mov
mov
jno
stos
int
mov
adc
pop
or
cs
popl
push
shlb
mov
cmp
in
orb
aaa
mov
and
data16
or
mov
stos
insl
fwait
icebp
sub
and
decl
cmp
les
cmpsl
icebp
sti
pushf
das
filds
mov
cltd
jbe
mov
adc
xor
mov
lahf
cmpsb
fimuls
mov
dec
sbb
cmp
sbb
adc
fs
jo
sub
call
lahf
sbb
fwait
inc
adc
or
mov
pop
test
xlat
sbb
push
and
aam
mov
sub
fnstenv
push
stc
add
lock
imul
cmpl
imul
daa
jne
pop
sub
ret
and
jmp
jle
lea
fldenv
aaa
jp
push
sbb
dec
jb
test
jno
mov
dec
lds
sbb
subl
pop
out
lret
cmc
add
fimull
imulb
or
jb
push
scas
push
push
loop
dec
ret
or
adc
enter
aaa
xor
xchg
or
push
test
sub
ljmp
das
inc
cmp
push
pop
cltd
push
mov
arpl
mov
push
add
mov
adc
push
push
adc
bound
rclb
call
arpl
mov
mov
mov
jp
mov
cmpsl
cltd
xor
mov
mov
addb
outsb
dec
xchg
jge
mov
xchg
test
or
loope
ficoms
cmpsb
mov
sub
test
scas
cli
mov
scas
push
dec
mov
mov
fsubrl
imul
push
cmp
push
push
ds
imul
sub
jbe
or
sysenter
xor
sar
shr
clc
sahf
cmp
and
jno
xor
sbb
cwtl
cld
pusha
xor
jp
adc
sar
aad
int3
lods
les
or
push
scas
call
push
cmp
jnp
cmp
push
shll
ret
mov
fsubs
popa
or
cmpl
mov
adc
mov
add
loope
push
push
bound
aam
std
scas
or
sub
mov
or
add
scas
leave
in
add
je
adc
push
jo
scas
mov
add
in
mov
cmpsl
lods
mov
lret
aaa
and
jmp
mov
std
call
inc
fdivs
lahf
test
lret
cmp
jle
sahf
mov
daa
cltd
mov
stos
fwait
jae
out
lahf
add
lea
into
sub
adc
jecxz
fstps
jle
in
add
cmp
js
sti
jns
mov
inc
movsb
mov
mov
mov
pop
adc
xchg
movsb
loope
adc
stc
addl
mov
jae
cltd
cmp
cwtl
push
int
sbb
mov
ret
sbb
mov
addr16
fisttpl
ss
xor
call
adc
fwait
xor
shrb
add
mov
pop
ficompl
into
sahf
add
inc
ljmp
xchg
add
gs
pop
pop
mov
enter
lea
mov
ds
mov
dec
inc
test
mov
aaa
cmp
xchg
jle
stos
or
repz
cmpsb
push
mov
fcmovne
sub
mov
mov
iret
add
mov
roll
and
lock
je
stos
and
aas
aam
test
les
cli
out
outsl
sub
mov
ss
xchg
xchg
loope
mov
ljmp
insl
fnstsw
aam
mov
pop
xchg
scas
aas
out
js
lods
sub
push
dec
cwtl
pop
mov
inc
or
or
dec
fmull
mov
adc
mov
aas
sti
push
mov
vpshab
pop
scas
inc
inc
lock
lahf
inc
ficompl
sub
dec
rol
mov
pushf
pop
adc
jbe
xchg
inc
jmp
jp
fwait
mov
jo
cmc
sbb
jmp
mov
mov
push
sti
addl
and
xor
out
mov
arpl
dec
pop
adc
lods
xor
jbe
stos
dec
subl
dec
adc
int3
test
and
ss
sub
dec
shll
int
push
iret
pushf
lahf
mov
hlt
daa
cmp
add
aaa
jbe
mov
or
mov
nop
cld
and
or
in
in
adc
mov
sbb
ret
mov
add
mov
nop
mov
sbb
in
scas
xor
fs
pop
into
ja
sbb
sbb
adc
sbb
flds
jp
loopne
insb
push
scas
cmc
xchg
sar
sbb
lahf
loopew
inc
stos
stos
fisubrs
dec
lods
fdivrl
mov
icebp
clc
jbe
stc
mov
add
ficompl
inc
call
scas
imul
and
mov
cwtl
pusha
add
int3
cltd
arpl
and
dec
jmp
insb
sbb
ret
and
push
inc
fdivrp
cmp
loop
cltd
mov
js
in
mov
sbb
adc
xchg
adc
adc
lock
test
sub
filds
lods
xchg
cmc
outsb
or
sbb
sub
pop
cmp
xor
mov
inc
jbe
mov
mov
int3
jbe
mov
xor
pop
xlat
xchg
lock
daa
movb
jecxz
sub
jecxz
jno
jg
push
sbb
inc
add
dec
lret
ja
cmpsb
mov
cmp
mov
cmp
lds
pop
cmp
dec
mov
addr16
dec
in
xchg
sub
gs
filds
jb
sbb
dec
sarl
dec
push
inc
adc
insl
dec
fisubl
mov
cmp
subps
add
mov
inc
in
jle
movsb
orb
addr16
mov
mov
bound
and
inc
test
jns
adc
push
es
or
pop
jg
add
jo
sbb
mov
push
int3
cli
cmpsl
adc
mov
jo
in
movb
jnp
mov
stos
cmp
out
sbb
jg
jp
pop
pop
out
invd
aaa
sbb
jle
mov
pop
pop
mov
mov
push
fcom
sbb
push
sbb
mov
loopne
decb
int
sarl
test
loop
pop
pop
inc
jno
mov
arpl
les
xor
lods
xor
push
inc
xor
pop
icebp
out
sub
movsb
loopne
jo
lea
cmp
and
popa
xchg
mov
mov
or
cli
ljmp
or
push
shl
fdivs
jecxz
cmc
negb
sub
and
and
scas
aad
fisubrs
pop
pop
mov
pusha
pop
mov
lea
jmp
jno
cmp
add
cwtl
lahf
test
and
lahf
jne
das
das
aad
jmp
fwait
arpl
ss
push
sti
aas
out
inc
loopne
scas
sub
add
cmp
wbinvd
aas
sbb
sahf
mov
dec
mov
or
and
aas
lret
sub
add
mov
rcll
mov
inc
adc
aad
inc
pop
mov
push
pop
jb
xlat
imul
out
inc
xchg
mov
pusha
insl
xchg
out
rcll
or
sahf
aam
push
movsl
inc
testl
dec
lret
sbb
mov
fistpll
push
and
add
fnstenv
test
sbb
into
in
fdivs
mov
loope
lods
adc
xchg
add
cmpsb
fsubr
fwait
push
xchg
cltd
jbe
outsb
jmp
sbb
fstps
mov
ret
lods
mov
mov
in
mov
int
mov
nop
xchg
and
sbb
sub
xor
xchg
mov
je
adc
mov
sub
es
daa
mov
adc
push
lret
push
cld
xchg
adc
jne
jne
mov
jne
repnz
ss
xor
bound
inc
and
mov
ja
push
jne
adc
aaa
mov
and
dec
cmp
outsb
inc
lea
cs
das
add
mov
mov
pop
xlat
jne
mov
dec
push
push
stos
loop
mov
sti
in
and
adc
xor
fucomip
int
test
in
leave
lea
sbb
xchg
and
push
stos
out
pop
add
push
jbe
push
cltd
sub
push
mov
adc
pop
mov
aad
jnp
push
popa
fbld
and
and
add
mov
ja
xchg
xchg
pop
mov
ja
mov
sbb
test
fldcw
mov
cmp
in
mov
jb
roll
pop
sbb
lods
mov
mov
push
rclb
push
ljmp
lock
lods
adc
jbe
hlt
bound
imul
or
xchg
cli
adc
cmpsb
enter
iret
repz
xchg
sbb
cld
sub
imul
mov
test
sub
aad
push
mov
pushf
sbb
ffreep
test
dec
loop
lea
fucom
jmp
popa
pop
mov
xchg
les
shlb
push
adc
lret
jle
lods
pusha
mov
fldcw
dec
dec
fiadds
inc
fsubrl
pop
or
les
push
push
mov
mov
aaa
xor
es
and
xor
mov
outsl
push
les
lcall
or
cmp
scas
sbb
int3
mov
mov
jecxz
dec
xchg
rcll
fimull
push
jne
lds
subb
scas
pushl
test
clc
or
cmp
adc
lret
in
push
sub
fs
sahf
scas
fsubl
and
push
lret
sub
dec
out
sti
mov
xor
jnp
sbb
inc
add
popf
fisubs
inc
inc
push
repz
test
sbb
iret
sub
push
inc
mov
sbbb
pop
or
cld
xor
mov
jno
sti
test
inc
ss
lea
in
outsl
sbb
repnz
jns
leave
fwait
dec
push
mov
or
inc
movb
cpuid
int3
mov
sti
pop
incl
loope
mov
or
std
pushf
sub
pushf
in
jg
das
pop
pop
std
movsb
or
out
jg
xor
scas
lds
into
and
adc
bound
sbb
in
mov
dec
mov
js
jne
clc
testl
xchg
loopne
push
lds
and
mov
push
mov
je
lds
in
dec
std
fnstsw
add
xchg
push
call
scas
lret
loopne
rolb
xlat
loop
enter
mov
add
pop
add
fldcw
pop
in
cmc
mov
mov
cmpsb
jmp
out
adc
ljmp
ret
out
movsl
loop
inc
xor
ficoml
xor
popf
xor
dec
push
in
inc
and
sbb
aaa
xchg
mov
daa
aam
daa
xchg
push
fidivs
mov
xor
pop
out
cld
stos
and
pop
scas
repnz
int3
jno
adc
mov
orl
sub
mov
push
in
sub
ljmp
popa
push
not
adc
fs
in
lds
imul
outsl
pop
add
sbb
lock
jmp
inc
or
and
enter
outsb
dec
lea
jno
or
lcall
xor
test
hlt
cmc
jg
je
fs
fisttps
in
jmp
mov
mov
push
mov
pop
gs
pop
cs
ja
sub
aad
xchg
test
inc
clc
jbe
mov
loopne
cwtl
fs
out
int
lret
xchg
aad
rclb
pop
cmp
xor
or
in
cmp
pop
ja
call
mov
xor
mov
stos
xchg
adc
jnp
jnp
pop
das
daa
inc
xor
xor
cmp
shl
and
insb
popf
out
ficoml
push
jnp
jb
loope
fistpl
mov
add
adc
sti
sahf
and
je
ja
sarl
xor
jo
xchg
lods
ljmp
bndldx
pop
and
insb
shrb
cwtl
add
pushf
mov
repnz
aam
ljmp
cmp
test
or
mov
idivb
jne
aam
or
mov
mov
ror
sti
call
es
jae
mov
xchg
add
clc
cld
daa
imul
stos
push
push
daa
sub
fistps
dec
scas
repnz
leave
ja
jbe
js
popa
push
mov
nop
mov
xor
mov
aam
js
pop
pop
addl
int
jb
ljmp
xor
mov
xor
or
or
pusha
fisttps
jae
mov
pop
popa
xor
xchg
push
arpl
lret
push
push
pop
out
lea
daa
lea
push
test
pop
jbe
vxorps
add
enter
fsubrs
mov
ds
stc
iret
in
mov
push
pushf
or
ret
pop
push
fwait
or
jno
loop
push
jb
mov
sbb
js
xlat
int
dec
push
je
inc
mov
pop
loop
scas
int
lea
ror
or
imul
mov
cmpsl
inc
cmc
idiv
add
out
scas
and
sahf
adc
lret
jge
adc
pop
ror
loope
fs
ds
out
pop
das
and
outsb
into
mov
shlb
pop
enter
in
add
sub
push
jnp
jmp
cli
and
les
js
bound
sub
das
cmp
sub
push
subb
push
push
movsb
inc
mov
sahf
std
pop
iret
sbb
loope
pusha
in
mov
sbb
mov
adc
xchg
cmp
jns
movsb
mov
jl
jne
push
jne
aaa
cli
call
xchg
mov
cmp
iret
ss
clc
mov
test
xor
stos
cmp
dec
sbb
iret
movb
mov
dec
dec
xchg
or
sarl
jge
ret
xchg
mov
mov
aad
jne
xor
xchg
push
xor
jb
cmp
cmpsb
fdivrl
testl
and
and
notl
add
call
das
ja
mov
push
pop
jecxz
sub
xorb
ss
mov
test
aad
bound
aam
sbb
xchg
call
jnp
push
lret
cmpsl
imul
dec
dec
or
xchg
dec
subl
mov
xor
lret
jle
jo
popa
sarl
dec
jmp
or
push
and
sub
movsl
insl
bound
sbb
xchg
push
int
adc
scas
int3
clc
push
outsl
ret
rcrb
pop
inc
ljmp
sbb
rorb
jbe
mov
xchg
xlat
dec
mov
add
aaa
sbb
mov
cmpsl
jae
mov
in
adc
aad
in
es
inc
fnstsw
negb
lods
add
daa
aam
lods
xlat
out
cmp
xchg
test
mov
mov
std
mov
fisttpll
mov
stc
jge
lds
loope
jae
repz
ja
adc
cli
ss
xchg
adc
fldcw
dec
pop
ss
push
out
mov
mov
jmp
and
in
movsl
rclb
sbb
push
inc
je
ret
ss
lods
cmp
add
jle
js
ret
mov
jbe
add
dec
sub
mov
dec
in
aam
popf
arpl
push
inc
fbstp
scas
xor
jbe
dec
imul
mov
mov
arpl
add
jecxz
gs
add
jbe
iret
stos
push
xchg
imul
jbe
xchg
movsb
pushf
push
mov
sahf
clc
xor
pop
pop
adc
lahf
push
fwait
arpl
das
jnp
scas
loop
fistps
stc
aas
add
rorl
bound
mov
fmuls
mov
lcall
fdivs
sub
ss
adc
add
out
cld
adc
xchg
mov
cmp
push
bound
out
sub
mov
fimuls
fisubrl
push
sbb
adc
jp
insb
cld
fwait
inc
jns
aam
lock
add
rcr
and
push
icebp
dec
orl
xor
add
cmpl
rorl
std
test
js
in
mov
pop
cmp
dec
sti
sbb
mov
push
pop
dec
and
stos
add
sbb
mov
adcb
ret
jo
cld
pop
mov
mov
pop
dec
loop
inc
push
test
pop
jb
rclb
xor
aas
cmp
sbbb
adc
loop
test
mov
aad
pop
int
adc
arpl
aad
inc
clc
popa
leave
into
sub
sbb
sbb
sub
aaa
xor
std
mov
jle
stc
fistpl
pop
or
jo
pop
cmp
pop
cltd
xor
pop
mulb
cmpb
test
mov
jns
je
dec
outsb
adc
inc
xchg
mov
test
xchg
push
cs
mov
fmulp
pusha
mov
or
in
jmp
mov
adc
cmc
fdiv
inc
xor
loop
jne
jl
dec
fldl
shlb
jmp
fstl
mov
das
sbb
and
movsl
cmp
subb
out
nop
test
cmp
mov
or
cld
xchg
mov
psrlq
or
mov
jae
inc
push
imul
jmp
filds
mov
adcb
cli
mov
popf
push
movsl
fs
ljmp
rorb
push
les
or
xchg
pop
adc
sahf
dec
rolb
lds
pop
or
out
mov
fsubrl
pop
push
es
inc
leave
test
aas
add
bound
or
jne
sub
icebp
or
gs
jle
pushf
inc
mov
mov
popf
add
ret
pop
lods
in
fimull
inc
iret
rcl
adc
xchg
push
mov
ja
fiaddl
mov
sub
push
notb
pop
jo
sbb
pop
fidivs
clc
jae
sub
xorb
pop
lret
mov
out
out
cvttps2pi
in
mov
cmpsb
cmpsb
cmp
and
outsl
or
pop
sub
scas
dec
push
push
outsb
pop
iret
fnstcw
adc
sub
xor
add
js,pt
sub
jl
nop
rclb
shll
cmpsl
or
out
jne
mov
ret
nop
out
adc
push
mov
sbb
sbb
xor
lahf
ss
rorb
cmpsl
loopne
jecxz
div
mov
push
xchg
xchg
cmp
inc
dec
dec
in
push
dec
jle
orl
sub
loope
add
jnp
popf
mov
aas
mov
cmp
in
or
dec
jo
lahf
clc
imul
jns
lds
pushf
sar
cwtl
daa
or
js
dec
outsb
push
js
and
dec
sbb
call
pop
xchg
cwtl
cmpsl
sahf
add
sbb
ret
ret
frstor
adc
add
cmp
popa
lea
popf
dec
pop
xchg
push
adc
inc
sbb
out
aam
pop
lret
imul
inc
fcmovbe
int3
add
rcrl
xor
jo
lock
stos
iret
cwtl
pop
push
in
push
arpl
xor
clc
outsl
jmp
dec
pop
lahf
mov
mov
loopne
xlat
inc
mov
and
xor
ficoms
pop
jne
loop
cmp
xchg
push
xor
xchg
cltd
pop
js
hlt
aas
inc
out
test
mov
jle
adc
daa
cltd
xlat
das
and
js
iret
fdivrl
addr16
xor
repnz
fs
mov
cmp
fcompl
jae
pop
leave
imul
ljmp
dec
test
shl
jge
jmp
dec
clc
dec
aad
adc
ja
faddl
loop
sbb
mov
into
or
arpl
add
pop
push
imul
cmp
hlt
dec
jge
test
mov
jle
outsl
dec
add
cmp
ljmp
loope
dec
inc
andl
lret
adc
xchg
fmuls
data16
adc
sbb
dec
mov
lret
das
jno
lret
outsl
cmp
out
mov
or
movsb
mov
xchg
ret
sbb
jle
sub
js
dec
je
push
mov
fcoml
movsl
push
or
or
xor
adc
mov
imul
push
jp
addr16
pusha
test
mov
addl
push
lea
das
add
fildl
adc
loopne
jns
jbe
dec
js
or
jnp
stos
mov
pop
popf
rcr
dec
adc
cwtl
pop
stc
jg
addr16
cs
sbb
jns
mov
add
outsb
mov
xor
add
sbb
jp
dec
repnz
in
xchg
cmpsb
in
or
jnp
es
cmc
xchg
es
add
pop
xor
divps
pop
mov
test
pop
leave
push
test
sub
fiaddl
xchg
mov
xchg
or
jno
flds
ror
push
iret
rol
test
dec
adcb
mov
xchg
sarl
cmp
sub
adc
insl
js
data16
push
adc
and
push
pop
push
aas
test
gs
insl
int3
pushf
mov
repnz
mov
pop
fnstsw
ljmp
jbe
insb
xor
fnstcw
inc
inc
fdivrl
movsl
hlt
cmp
addl
pop
mov
loopne
incb
cmpsb
xchg
ds
jecxz
mov
cmp
or
cmpsl
dec
pop
aas
add
lahf
mov
and
jg
add
mov
mov
fiaddl
xchg
jne
int
imul
xor
pop
fmull
mov
pop
or
test
idivl
dec
in
xbegin
scas
xor
mov
adc
out
push
aad
in
das
mov
or
or
out
ds
jl
lahf
mov
fmulp
pop
seta
inc
testb
enter
cld
mov
dec
and
stos
xor
or
or
push
lret
sbb
mov
loopne
xchg
rclb
int
and
jns
in
xchg
add
loope
mov
ljmp
sub
pop
push
loopne
daa
pop
out
arpl
inc
out
xchg
add
mov
movsb
push
cmpsb
push
sub
xlat
xor
sub
sub
push
icebp
push
testb
or
mov
adc
lock
iret
cmp
cmpsb
mov
mov
aaa
xchg
mov
add
repnz
loopne
push
or
sub
add
fistpll
iret
fcoms
lea
hlt
aam
and
xor
dec
fstpt
enter
daa
popf
fnstenv
subb
xchg
or
scas
add
dec
cmp
int3
jle
or
insl
or
call
jle
fbstp
dec
pop
popf
ret
add
mov
in
jmp
ret
dec
jae
fcomps
push
pop
inc
out
aas
mov
movsb
mov
aam
stos
fs
ret
and
cmp
enter
lcall
push
call
sbb
pop
sub
fcmovb
daa
das
mov
mov
pop
scas
jp
pop
mov
inc
out
and
fisubs
cmpsb
inc
iret
movsl
jmp
stos
mov
pushf
out
dec
stos
les
mov
cmp
jl
pop
fsub
adc
outsl
jb
mov
in
iret
faddp
sbb
sub
cmp
in
cwtl
push
insl
adc
aas
push
ja
popf
icebp
push
adc
fs
mov
int3
std
mov
mov
or
js
add
lret
and
mov
ljmp
adc
outsl
stos
push
pop
mov
mov
dec
in
ss
xor
push
shrl
inc
ret
adc
bound
enter
mov
test
mov
lods
movsb
pop
cmp
decb
adc
pop
fwait
repz
and
call
sti
out
ffreep
clc
mov
lret
xor
test
lcall
in
hlt
cmp
repnz
inc
add
inc
xor
clc
or
mov
mov
mov
pop
shl
xchg
or
in
or
sub
dec
xchg
divl
jl
mov
aad
test
outsb
sbbl
add
subb
sbb
in
cli
or
push
into
repnz
aas
idivb
popa
aas
xchg
fidivrl
dec
stc
xchg
xor
push
add
movsl
pop
and
mov
iret
ret
mov
add
cli
mov
les
cmp
jns
xlat
jle
sbb
push
cmpps
sub
lcall
fimuls
icebp
andb
shlb
repz
shlb
fimuls
sub
sub
stc
icebp
and
mov
aad
imul
mov
mov
pop
pop
or
stos
or
cmp
fstpt
or
lret
out
imul
movsl
je
fcomip
push
out
jp
pop
or
xchg
cmpsl
stc
dec
imul
movsl
test
mov
ret
popf
mov
adc
inc
aas
jmp
jp
andb
sti
lock
cmp
ja
mov
sub
sub
push
cmp
addr16
pop
enter
dec
out
iret
out
sbb
jne
push
ja
je
dec
ljmp
sahf
sahf
cmc
jmp
repnz
mov
add
int
ja
adc
loope
push
and
in
jo
mov
inc
add
inc
mov
push
jmp
sahf
les
push
mov
in
pop
dec
aad
xor
lcall
push
shlb
sbb
mov
xchg
pop
cmp
jp
in
ja
je
lcall
jne
in
push
ret
ret
mov
push
jb
or
enter
pop
cmp
pop
mov
ss
adc
pop
mov
cltd
pop
adc
clc
push
ljmp
push
into
mov
ret
cmpsl
pop
add
jne
loop
rorb
jecxz
dec
dec
sbb
loope
in
or
push
xor
sub
cmp
into
pop
insl
cmpsb
xlat
inc
movsb
daa
arpl
sbb
jns
repnz
and
stc
call
or
mov
add
fcmovb
repz
ljmp
jbe
adc
add
or
pslld
pop
lods
nop
inc
xchg
imull
mov
pop
int
or
aaa
xchg
or
mov
flds
and
rclb
jno
xor
addr16
add
dec
push
subb
and
mov
mov
lret
or
cmp
hlt
fxch
loop
ja
mov
inc
mov
mov
loope
cmp
inc
ficoml
inc
cmp
outsl
xchg
cmpsl
jne
sbb
dec
xchg
fadd
mov
pop
out
xor
enter
inc
pop
enter
xchg
xchg
cmpsl
xor
pop
jb
inc
mov
insl
xchg
or
aam
jb
aam
sub
ds
sub
test
sub
push
mov
jne
xchg
das
mov
pop
ret
int
cmpsb
mov
jp
jne
or
movsl
pop
mov
cmpl
xchg
xor
mov
pop
adc
addb
inc
xchg
popa
shr
loop
jb
dec
push
aad
cmpsb
sbb
not
add
rol
jne
cmc
sbb
addr16
pop
adc
shll
sahf
mov
shl
or
add
dec
inc
xor
pop
stos
ja
xor
int3
shll
out
test
mov
push
mov
mov
fcomps
jae
pushf
xchg
cmpsb
je
jno
orl
sbb
xchg
adc
xor
arpl
push
mov
or
fdivs
cmp
mov
fadds
xchg
cmpsl
dec
xor
inc
int3
nop
dec
push
cmc
pop
jno
xor
sbb
test
das
jae
pop
mov
xor
or
inc
test
orb
push
xchg
aad
push
sub
nop
mov
mov
imul
dec
sbb
mov
inc
repz
sbb
add
lock
xchg
xchg
sbb
sub
aaa
or
adc
inc
loope
add
vphaddbw
xor
xlat
mov
movaps
and
rcl
adc
mov
rol
sbb
push
xchg
inc
pop
dec
push
sub
imull
incl
xor
andl
jecxz
jg
xor
cmpsl
adc
jge
das
fxch
fistps
jmp
dec
push
mov
stos
pop
cmc
test
mov
in
dec
fs
and
mov
inc
or
out
es
ret
push
shrl
xchg
int3
jecxz,pt
xor
or
popf
push
xchg
outsl
mov
sub
dec
mov
or
cmp
jg
adc
adc
mov
lock
jmp
xchg
cmp
int
or
imulb
lcall
cmp
mov
cmp
inc
pushf
and
imul
mov
aas
cwtl
push
aaa
push
shr
shlb
push
mov
mov
pop
jno
xor
mov
xor
shll
test
xor
or
mov
push
mov
add
cmc
pop
inc
and
mov
sub
jg
mov
mov
cmp
and
aaa
inc
in
or
mov
hlt
adc
std
xor
jp
int
jmp
or
xor
fiadds
and
xchg
fcomps
or
shlb
xor
jbe
in
dec
test
imul
ja
aas
int3
movsb
lret
adc
ret
jnp
jb
mov
xlat
sbb
mov
push
imul
adc
sub
popf
rorb
mov
push
jge
inc
push
jg
xchg
fnstsw
sbb
ss
out
mov
inc
aam
dec
fsts
sbb
pushf
out
jnp
stos
sbb
xchg
push
hlt
cld
int
cmp
cmpsb
mov
push
out
jbe
pusha
data16
cld
jl
in
xchg
ret
xchg
pop
and
cltd
ljmp
inc
std
push
cmc
hlt
push
inc
mov
mov
aas
lea
popa
jecxz
dec
cmp
pusha
addr16
mov
mov
repnz
test
sub
and
js
push
imul
jns
rep
cmpsl
cli
jg
push
dec
mov
stc
in
dec
dec
xchg
mov
out
subl
mov
pop
mov
jo
pop
sub
jb
outsl
sti
out
cmc
das
subb
xor
lds
lock
cmp
lods
dec
data16
dec
int
out
dec
scas
decl
shrl
sbb
inc
mov
addr16
mov
inc
std
pop
or
mov
out
pop
shr
insl
mov
inc
das
dec
pop
int3
mov
xchg
in
aam
bound
lcall
dec
iret
sbb
mov
dec
je
sub
mov
loopne
mov
add
scas
pop
loop
push
sub
imul
test
jne
jecxz
push
pop
xor
inc
arpl
mov
dec
cmpb
ds
push
inc
rol
mov
or
cld
lret
aas
packsswb
jp
stc
adc
xlat
int3
shlb
lods
ret
sub
push
mov
push
loop
cmpsl
outsb
insl
xchg
movsl
ret
loopne
stos
dec
dec
and
fwait
sub
push
pop
movsb
insl
inc
and
jg
add
mov
pop
cmp
dec
add
add
arpl
adc
add
cmp
xchg
sbb
ss
xchg
sub
dec
adcl
jecxz
cmpsb
and
and
aas
aad
lods
es
pop
jne
mov
mov
int
push
shlb
add
je
cmc
leave
pop
push
ss
sub
mov
aas
pshufw
mov
inc
lock
jne
mov
inc
mov
into
lods
dec
cmp
loopew
mov
dec
push
mov
out
fdivrs
add
pusha
lret
pop
leave
and
xor
loope
push
cmc
push
dec
xchg
jb
les
push
jae
adc
shll
push
js
sub
jb
insl
mov
mov
ljmp
cmpsb
add
adc
enter
mov
mov
cltd
jle
das
pop
or
inc
and
cmp
lock
es
mov
or
subb
and
rcr
outsl
xor
mov
gs
push
adc
pop
or
iret
imul
stc
xor
add
inc
mov
fs
sub
rorb
ror
push
les
push
shll
inc
movb
xchg
sbb
cmpsl
fwait
jle
and
cltd
and
lret
adc
cmc
jp
xor
mov
or
loope
pop
pop
xchg
out
mov
mov
outsl
pop
xor
lret
mov
shrl
dec
arpl
ret
fists
mov
mov
or
dec
adc
pop
ss
lock
xchg
push
mov
or
mov
jne
xchg
pusha
mov
divl
mov
mov
dec
mov
test
in
adc
or
sub
in
in
lock
dec
insl
icebp
push
pop
lea
sbb
imul
cmp
xchg
outsl
inc
fbld
orl
cmpsb
mov
rcr
movsl
js
popf
in
and
cwtl
in
mov
cltd
mov
cmp
add
mov
mov
dec
xor
cmp
inc
dec
cmp
lret
dec
sub
xlat
xor
cmp
mov
push
addr16
inc
repz
adc
jbe
mov
jl
fs
ljmp
mov
push
insb
dec
icebp
arpl
mov
push
cmp
jp
and
mov
push
mov
sub
andb
and
fwait
cmp
es
jmp
dec
push
pop
adc
pushl
sub
fisubs
mov
bswap
inc
jnp
icebp
push
cmc
scas
loope
mov
adc
xor
cmpsl
ret
push
stos
xor
mov
loope
cmp
mov
into
rcrl
push
subl
adc
ss
movsb
cmp
xor
sub
sub
mov
sub
lods
in
insl
push
sub
mov
adc
xchg
lds
stc
icebp
loope
lods
int3
xchg
aad
bound
jnp
inc
clc
cmp
xchg
inc
test
xlat
lods
into
imul
int3
sbbb
or
inc
mov
sub
sub
and
xor
je
lret
mov
sbb
mov
aad
popf
insb
jb
jle
adc
ss
test
js
ss
aaa
inc
xor
leave
gs
mov
push
xchg
es
mov
sub
jb
jno
adc
mov
test
testl
stc
cmp
inc
jp
and
lcall
inc
enter
ljmp
mov
dec
inc
ret
sub
adc
push
hlt
pop
xor
inc
sub
adc
pop
jb
je
and
int
out
pusha
jnp
dec
adcl
repz
je
js
mov
cmp
or
js
sub
lods
nop
inc
add
dec
movntq
test
cmc
xchg
jae
js
sbb
shl
dec
sbb
orb
xchg
test
scas
inc
hlt
sti
adc
mov
add
and
repz
xor
cltd
jb
mov
mov
ja
pop
std
out
scas
fmull
or
add
rcl
or
fidivrs
sub
xor
pop
int3
stos
jbe
jmp
sub
mov
imul
inc
fs
aas
mov
sbb
inc
inc
rcrl
jo
inc
adc
ret
xchg
cltd
inc
test
and
cmp
and
lret
cmp
inc
push
in
mov
pop
aas
jns
aad
ds
pop
fstl
lods
loope
lahf
cld
icebp
clc
mov
cld
je
push
inc
es
mov
cmp
int
mov
jae
push
mov
roll
xchg
mov
mov
sbb
mov
lods
and
or
sub
push
orb
fcoms
mov
push
sti
pop
pop
decl
ja
mov
les
js
push
iret
pop
lcall
inc
add
push
add
or
add
sarl
mov
arpl
ds
xchg
daa
pusha
jo
mov
mov
enter
jns
imul
hlt
mov
xor
dec
mov
inc
push
mov
into
outsl
push
mov
cli
data16
icebp
adc
jo
mov
mov
push
fstpt
add
repnz
or
or
nop
cmp
add
daa
arpl
inc
xor
out
outsl
setnp
push
lods
mov
xor
xor
xlat
pusha
xor
fwait
mov
pushf
loopne
pop
ret
sub
dec
test
aam
mov
pop
div
and
fs
cld
add
pop
jb
xor
adc
lds
sbb
ljmpw
push
sbbl
pop
out
push
arpl
lods
inc
andb
cmc
add
frstor
mov
xor
sub
sub
aad
scas
push
add
call
call
mov
cmpsl
jbe
test
and
test
mov
negl
and
std
dec
fmuls
inc
iret
outsl
adc
sbb
adc
mov
in
les
inc
mov
pop
arpl
mov
fstp
mov
mov
mov
outsl
bound
stos
imul
dec
int
mov
ds
les
js
mov
cwtl
mov
or
movsl
pop
xor
mov
mov
pusha
dec
xchg
dec
push
cmpsl
int
out
stos
lret
xor
add
or
enter
fildl
jb
dec
jmp
mov
adc
pop
mov
push
repnz
sbb
push
mov
gs
out
mov
aad
hlt
fidivl
mov
xchg
popa
in
outsl
popa
jle
push
cli
lahf
push
jbe
mov
pop
xchg
push
xchg
pop
dec
fisttpl
sub
adc
xor
xor
mov
loopne
in
push
dec
sbb
push
pop
sarb
jb
pop
out
outsl
into
xor
stos
jnp
dec
enter
sub
aam
push
popa
mov
xchg
test
test
fs
sbb
pop
xlat
js
pop
mov
sub
inc
popf
daa
and
fucomip
std
repnz
xchg
cmc
dec
inc
cmp
mov
mov
popa
daa
push
aam
orl
sub
sub
adc
jne
lea
dec
or
mov
stos
pop
xor
rcrb
cli
pop
mov
pop
sbbl
int
pop
sbb
test
inc
adc
lahf
xchg
push
sbb
repnz
jo
movb
or
jbe
mov
jmp
cmp
fnstcw
add
test
outsl
icebp
cltd
adc
or
sub
cmp
rcrl
pop
dec
xchg
add
pushf
lcall
inc
mov
sbb
ja
xor
or
xchg
or
and
jae
xor
cmp
sti
sbb
jmp
sub
add
loop
mov
shrb
nop
ret
push
leave
enter
lret
mull
xchg
push
cmp
femms
cmp
mov
and
lahf
jg
scas
cmp
popf
adc
das
jb
gs
divl
das
inc
mov
jns
cmpsb
sub
cmp
mul
movsl
pop
mov
mov
in
out
adc
add
pop
cmp
cmc
fcompl
stos
sar
lods
sbb
in
adc
cltd
push
in
mov
and
push
or
ss
xrelease
mov
pop
outsl
shrb
push
out
cli
dec
jg
jnp
cmpsb
movsb
mov
inc
outsb
test
loopne
sahf
in
outsb
xor
or
lahf
push
ss
pop
cmp
rorb
cli
inc
sub
xchg
pusha
cltd
shrl
mov
cltd
cmpsl
sbb
in
mov
in
push
cmpsb
lret
sahf
inc
cmc
mov
or
mov
push
insl
add
jae
outsb
or
jge
movsb
mov
out
and
ja
or
pusha
mov
mov
mov
push
cmc
or
xor
cmpsb
adcl
dec
shrl
into
xchg
sub
shlb
xor
ja
adc
mov
and
sbb
mov
mov
jl
repz
aaa
pop
pop
imul
inc
push
cmp
jb
cmp
pop
or
add
stos
xor
cmp
sbb
hlt
roll
ret
das
xor
icebp
scas
dec
mov
jnp
xor
mov
push
notb
mov
mov
cmpsb
add
pop
xor
adc
fidivl
push
push
push
pop
ret
sub
pop
inc
nop
dec
add
int3
cmp
je
push
add
jbe
add
cmpb
pop
lahf
pop
cltd
out
sahf
or
shrl
mov
push
fsubrs
and
mov
lods
lret
mov
dec
adc
das
cmpl
sti
xchg
loopne
xor
mov
push
int3
bound
sbb
bound
sub
sub
out
mov
jno
mov
sbb
push
mov
ss
cmpsl
jl
das
popf
sbb
mov
out
lret
or
imul
cmp
pop
jb
scas
dec
movsl
adc
jmp
mov
test
adc
lahf
add
sti
pop
cmp
ljmp
xor
mov
fcmovnb
ret
popa
imul
push
ss
xor
xchg
pop
shlb
cmp
sub
ss
cmp
push
mov
push
test
mov
mov
je
jnp
add
pop
xchg
cmp
cmpsl
hlt
out
adcl
fisubs
daa
pop
adc
jle
imul
mov
pusha
mov
icebp
cmp
inc
mov
xor
clc
cld
les
push
in
xor
movsb
jnp
frstor
or
mov
pushf
sbb
pop
iret
ja
ficompl
insl
loop
dec
pop
andl
sub
add
movsb
cmpsl
dec
mov
cld
aaa
or
popf
or
push
push
cmp
push
mov
mov
mov
cmp
mov
mov
adc
dec
sub
inc
inc
nop
inc
in
outsb
adc
add
push
mov
shr
pmulhw
mov
mov
mov
mov
mov
lret
mov
scas
xchg
cmp
test
xor
mov
mov
scas
loopne
adc
add
xchg
les
and
cmpsl
push
add
xor
stos
mov
or
and
xchg
pop
in
test
pop
adc
jmp
test
push
out
sub
addr16
subl
sub
repz
insl
jp
pop
icebp
mov
out
xor
rolb
popa
lcall
cmc
adc
fwait
out
sbb
or
add
xor
xchg
repnz
insl
and
addr16
ror
push
mov
fwait
push
pop
stos
mov
push
aam
jmp
pop
pop
movsl
sysret
sti
mov
rorl
jmp
lock
call
test
cwtl
aad
loope
outsb
das
into
push
cs
mov
aas
inc
pop
and
in
mov
orl
je
sbb
and
xchg
icebp
add
mov
xchg
jb
and
mov
pop
mov
mov
xchg
pop
cmp
iret
nop
es
outsb
xchg
into
lds
xor
out
leave
jle
mov
test
sub
inc
sub
js
add
fisubl
outsb
call
jb
test
lret
dec
add
sub
inc
add
test
adc
mov
movsb
mov
ljmp
sbb
push
push
adcb
adc
leave
xchg
ljmp
aam
stos
xchg
into
sahf
cs
inc
add
push
dec
mov
and
lret
testl
push
add
push
fldenv
scas
jl
mov
mov
jge
inc
dec
xchg
cmpsl
leave
jae
insb
push
repnz
cmp
jns
dec
js
ds
inc
es
data16
mov
cltd
push
mov
ret
lods
sub
xchg
out
loope
sbb
and
xor
test
mov
fcom
mov
out
loop
mov
cmp
loopne
mov
sbb
dec
sbb
pop
or
fistpll
jp
push
xchg
cs
jo
jno
adc
fcompl
sbb
inc
mov
or
or
push
movsl
jmp
mov
fwait
sub
sbb
clc
int
mov
push
outsl
sahf
cmc
cmpsb
aad
mov
inc
iret
jle
mov
sub
jecxz
sub
bound
dec
mov
cmp
xchg
xlat
stos
daa
adc
sub
cs
adc
adc
mov
pop
pop
jne
mov
jo
outsl
loope
andb
jecxz
jmp
mov
lods
lods
test
add
out
dec
adc
cwtl
pop
les
arpl
xchg
sar
or
inc
fisubrs
add
ja
loop
adc
ret
inc
arpl
xor
sub
aad
lahf
and
inc
nop
inc
xor
sub
jecxz
mov
mov
ss
daa
mov
xchg
and
mov
jnp
jae
scas
jmp
in
xlat
icebp
and
xchg
inc
test
rcrb
lds
outsl
jecxz
xchg
inc
xchg
aam
mov
jl
lcall
jo
mov
sbb
jnp
stos
inc
cli
push
dec
sbb
mov
cmpl
adc
cmp
mov
mov
gs
sti
leave
std
bound
fdivrp
push
stos
sti
dec
jp
faddl
mov
hlt
cltd
sub
outsl
push
push
mov
mov
lods
daa
out
hlt
pop
popa
jmp
fdivrs
cs
inc
sbb
outsb
movsl
push
ljmp
inc
dec
add
sbb
pop
fnstenv
aad
jb
pushw
adc
std
stos
cmp
pop
mov
stc
fs
cld
jo
mov
push
mov
ja
sahf
sbb
icebp
jno
orl
xor
loope
pop
sub
jmp
enter
movsb
add
sbb
in
out
add
cmp
mov
psubw
mov
xchg
mov
push
pop
and
les
jecxz
push
lret
sub
mov
and
aaa
xchg
cs
or
mov
lret
iret
inc
pop
mov
cs
add
clc
popa
add
mov
dec
mov
rolb
bound
in
sub
mov
xor
mov
push
sub
jge
addr16
js
mov
mov
pop
sub
pop
lods
bound
ja
scas
and
fsub
ret
dec
sahf
sub
mov
xlat
filds
hlt
add
das
fcmovbe
hlt
mov
cwtl
daa
xchg
add
bound
xor
faddl
mov
bound
test
push
lods
and
pop
das
mov
sbb
mov
test
call
int
stos
repz
add
nop
lock
push
dec
xchg
testl
cmc
xchg
sbbl
sbb
xor
shr
push
cmpb
inc
dec
mov
js
sahf
sbb
fucomi
aas
fldcw
aad
pop
lcall
xchg
gs
stos
push
dec
push
icebp
shl
push
xchg
or
pop
dec
lds
mov
shrb
cmp
mov
push
js
mov
in
idivb
sahf
movsb
mov
jns
je
cmpb
push
xor
ficomps
jae
and
adc
imul
jmp
divb
pushf
es
mov
dec
mov
and
fisttpl
dec
xchg
mov
iret
jae
xlat
rclb
loopne
pop
lods
ljmp
imul
rcll
data16
subb
adc
sub
pop
mov
lahf
enter
xor
out
or
sub
or
cmp
cltd
es
out
aaa
xchg
mov
loopne
push
scas
gs
mov
inc
in
pop
gs
xor
mov
sub
push
std
pusha
mov
cmp
xor
mov
sbb
and
cmp
hlt
fimuls
cmp
stos
xchg
mov
mov
clc
sub
aas
cs
aaa
push
push
stc
xchg
or
jae
add
icebp
pop
fwait
pop
inc
icebp
hlt
mov
lock
mov
inc
test
jg
lret
mov
mov
mov
sahf
add
aaa
rcl
cld
or
jmp
mov
push
inc
loop
rcr
lahf
fistpll
nop
shrb
mov
dec
les
jmp
je
std
cld
sub
sbb
push
push
sbb
pop
mov
inc
cmp
shll
mov
stos
mov
daa
pop
jno
test
in
mov
mov
notl
xor
leave
pop
insl
fwait
sub
imull
push
mov
cmp
cs
adc
arpl
sbb
loop
pushl
fiaddl
data16
cmc
mov
in
loope
cltd
jp
lods
sahf
lcall
mov
ret
jp
fs
mov
mov
sarl
adc
sahf
xchg
add
outsl
repz
mov
lret
inc
jle
insb
fsubrl
fdiv
push
sub
rcrl
ret
movsb
jns
popa
sub
inc
mov
and
adcl
into
int3
inc
adc
fs
xor
push
sub
lds
ret
push
mov
lcall
jle
ret
mov
aaa
pop
mov
out
lods
lret
pop
stos
out
aam
adc
or
pop
xchg
inc
fsubr
notb
dec
out
ja
pop
mov
dec
imul
test
xorb
lahf
and
cltd
mov
int3
dec
jae
mov
loopne
pushf
pop
xchg
fsubr
xor
and
pushl
loop
fadds
mov
lret
out
lcall
faddp
adc
pop
shl
mov
pushl
sub
rorl
pop
mov
imul
ret
adc
cli
ja
xor
test
popa
aam
xor
sbb
scas
or
push
dec
cltd
mov
pop
jns
pop
mov
daa
repz
test
outsl
add
jne
clc
mov
push
daa
call
pop
xchg
xchg
jmp
into
cmp
pop
ret
cmc
xor
mov
mull
push
adc
mov
mov
push
bound
roll
inc
pop
xor
inc
sbb
test
inc
das
pop
roll
mov
sub
cld
lods
pop
jp
in
ret
pusha
push
pop
into
insl
add
repnz
mov
hlt
dec
adc
repnz
in
inc
pop
incb
xor
and
mov
das
pop
outsb
or
push
mov
mov
daa
push
pop
xchg
push
fbld
sub
xor
xchg
pusha
push
loopne
aad
add
push
scas
sbb
xchg
mov
inc
inc
in
pushf
cmp
add
sbb
rcrb
dec
jnp
jmp
cmp
ss
add
or
xlat
cmp
jg
mov
add
adc
sahf
subb
insb
dec
aad
fprem
test
pop
mov
and
jp
sub
fsubrs
imul
push
push
xchg
inc
aaa
xor
mov
mov
sub
jb
lcall
test
sbb
cmp
dec
xor
push
pusha
std
pop
cmc
xchg
lret
xchg
sub
iret
mov
aam
sbb
add
add
ljmp
mov
mov
scas
and
ret
jecxz
testb
push
sbb
ret
rcl
push
mov
sbb
xor
std
out
outsl
jo
push
cmpsb
out
jp,pt
jmp
sahf
pop
pop
pop
lods
dec
call
loopne
and
cmpsw
pop
adc
inc
cmp
fidivs
jae
jge
cmpsl
sub
jbe
int3
fwait
xchg
adc
jge
bound
push
and
insb
bound
fsts
jl
push
lahf
test
cmc
ret
aaa
subb
pop
xchg
pop
je
mov
mov
outsb
mov
adc
dec
lock
mov
rcll
in
add
cmpsl
pop
sub
xor
push
mov
in
int3
cmp
push
adcl
xchg
cmc
and
sbb
inc
jmp
mov
loope
cwtl
xchg
leave
lret
insb
stos
add
or
and
adc
imul
dec
leave
cltd
mov
rcll
pop
add
in
leave
mov
mov
lcall
fcoms
lds
lods
push
aam
stos
cmp
aad
int
icebp
xor
data16
inc
add
stc
clc
cmp
ljmp
jmp
xchg
pop
push
stos
call
mov
and
mov
sahf
mov
lcall
jmp
mov
bound
dec
dec
jmp
loopne
and
xchg
push
or
push
jae
popf
data16
ror
push
jno
push
mov
mov
push
inc
dec
xchg
adc
out
sub
jle
add
cmp
shrb
hlt
cli
shrb
adc
mov
mov
aad
sbb
test
loopne
cmp
push
iret
pop
jmp
mov
sub
outsl
or
jp
aaa
xchg
jge
mov
mov
jge
sub
pusha
in
popf
rorl
xor
cmp
sahf
sub
adc
and
jg
insl
sarl
mov
shrb
loopne
sub
pop
pop
xchg
ret
neg
adc
arpl
mov
adc
aad
stos
push
sahf
cmpsl
fcomps
pop
dec
jnp
jno
divl
adc
cs
test
arpl
pop
shll
sbb
push
mov
je
xchg
pop
cmp
lock
jmp
push
pop
sub
cmpsl
xor
mov
insb
cli
stc
out
orb
xchg
inc
pushf
push
aad
dec
mov
test
mov
out
aaa
ret
fdiv
cmp
push
xchg
pop
in
sti
ljmp
sbb
aam
cmp
mov
pop
mov
cmc
stos
mov
push
es
cmp
dec
mov
mov
mov
sbb
mov
xor
mov
fs
xchg
fsubrs
hlt
mov
mov
addr16
ljmp
xchg
popf
or
subb
les
lock
push
jnp
dec
gs
pop
test
or
scas
push
jge
jae
sarb
dec
aaa
xchg
push
mov
rcrb
outsl
cwtl
or
jns
push
jp
mov
loop
sub
sahf
pushf
pop
leave
fs
xchg
ret
cmc
fistpll
rorl
lcall
scas
xchg
lahf
cmp
mov
adc
mov
in
xchg
dec
int3
or
out
cmp
mov
shlb
cs
xchg
inc
int
add
adc
das
mov
data16
icebp
inc
cmp
dec
xchg
hlt
int
imul
lock
out
movsb
lods
popa
xchg
mov
decl
test
and
stc
cmpl
push
fisubrs
inc
repz
repnz
lahf
and
add
mov
or
data16
push
cmc
mov
xchg
js
test
dec
inc
push
xchg
mov
push
ret
je
jae
sbb
fsubrs
jle
sbb
mov
out
ror
fs
add
adc
pop
add
dec
push
lods
inc
rcr
insl
fdivrl
divb
setp
pop
and
adc
push
insl
sti
fnstsw
mov
add
sbb
mov
out
fbstp
sahf
jge
cltd
mov
mov
or
push
jle
cmpsl
pop
sbb
jb
push
fistpl
mov
xlat
ret
push
inc
subb
cmc
and
ret
or
lret
addb
lea
fxam
push
inc
stos
aaa
hlt
addr16
imul
xchg
or
mov
add
inc
icebp
loop
cmp
mov
out
gs
test
ret
dec
mov
inc
dec
mov
dec
rcrb
mov
or
push
cmp
or
shr
pushl
and
mov
xchg
fs
xor
push
push
dec
cmp
mov
and
jno
mov
ds
add
mov
cmp
jmp
inc
and
pushf
add
pop
ja
mov
psubw
ds
outsl
js
inc
loopne
xchg
mov
push
js
call
sbb
dec
inc
mov
mov
jo
sbb
dec
mov
xchg
push
mov
xchg
clc
adc
popa
mov
bnd
test
xchg
mov
xor
push
or
dec
adc
pop
in
push
push
and
cmp
mov
mov
ljmp
loope
loopne
adc
lock
xor
es
jge
xlat
jno
inc
pop
lock
ds
cmp
sub
xchg
les
mov
cwtl
jge
jnp
sub
inc
lds
nop
insl
dec
push
and
fcmovnb
je
sub
enter
movsb
in
pop
adc
negb
repnz
in
xchg
repnz
mov
inc
fs
icebp
or
in
xchg
out
push
sahf
xor
pop
rcll
adc
cmp
dec
or
and
in
adc
sub
mov
mov
dec
cmp
test
insl
lds
and
addr16
fs
faddl
aaa
or
or
pop
inc
sahf
inc
mov
nop
scas
lahf
inc
and
jae
jl
fprem1
xor
add
mov
xchg
std
push
test
mov
dec
inc
mov
xchg
test
rorl
fbstp
fbstp
mov
leave
in
sub
sub
and
pop
out
mov
scas
pop
and
adc
sub
xchg
pop
aas
repz
hlt
pop
push
xor
lcall
scas
insb
cmp
shl
add
dec
xor
mov
aaa
dec
jb
iret
fwait
or
jb
int
cmpsl
test
mov
or
popf
outsl
mov
adc
lock
iret
fs
mov
xor
fdivl
add
mov
scas
pop
xchg
lret
fs
lcall
mov
push
add
mov
not
jb
movsb
shrl
jle
cmp
adc
inc
mov
cwtl
repz
push
push
lret
sub
push
sti
call
stc
lods
or
cli
enter
fsubrl
data16
lret
into
xchg
mov
sbb
rorl
cld
inc
insb
addb
mov
inc
sub
in
jbe
mov
dec
fisttpll
fidivrl
jns
sahf
repz
data16
dec
add
ja
ror
fisttps
cmp
addr16
rorl
pop
cli
lock
lea
stc
and
push
dec
fwait
inc
pushf
xor
push
rcr
pop
sbb
jecxz
and
mov
pop
push
subb
out
sub
adc
cmp
out
sahf
aaa
int
mov
stos
xchg
sub
xchg
je
addb
jbe
jno
test
jecxz
sbb
addr16
push
mov
xchg
fistps
dec
xchg
pop
in
outsb
xor
dec
jge
cmp
addr16
imul
pcmpgtw
gs
mov
ljmp
push
jmp
adc
push
or
fs
stc
pavgb
lcall
add
pop
xchg
lret
cmpsb
stos
jb
test
or
fsub
mov
jb
filds
fimull
lret
jns
stos
inc
pop
je
mov
enter
test
pop
repnz
pop
jg
inc
pusha
inc
mov
cwtl
mov
jae
push
repz
je
call
scas
jmp
inc
lret
adc
cltd
adc
push
mov
mov
ss
es
and
or
cmc
xlat
mov
cmp
push
cmp
mov
mov
pop
push
or
js
cmp
daa
rorb
sub
fldenv
cmp
cmp
mov
ret
movsl
sahf
aad
lahf
dec
push
xor
frstor
lcall
jecxz
lcall
das
cmp
jb
out
pop
lock
adcl
es
push
xchg
pop
fchs
lods
rcrb
fisttpll
fadd
pusha
jecxz
cmp
stc
push
pop
sbb
xchg
cmpsl
mov
cmp
movsl
inc
aas
ja
pop
out
dec
xor
or
pop
xor
jb
pop
xor
inc
cmp
sbb
in
push
pop
mov
out
pop
xchg
lahf
jle
pop
stos
jg
sub
push
in
filds
add
sarb
in
pop
nop
add
inc
mov
jbe
fucom
mov
jge
addr16
arpl
testb
out
mov
bound
repnz
mov
mov
jbe
fimull
fsubs
stc
mov
xchg
push
ja
push
inc
je
lea
dec
jmp
dec
cmp
mov
push
mov
jge
cltd
add
add
push
cwtl
fistl
in
and
insl
addb
add
rorb
lcall
xor
int3
add
cmp
js
mov
add
filds
mov
cmp
fisubrl
enter
stc
and
rclb
and
adc
add
cmp
insb
rclb
ljmp
jle
mov
imul
mov
sub
jecxz
push
jmp
fidivrs
jns
lcall
ja
nop
inc
pop
test
loope
xchg
fsts
gs
jns
cmp
mov
inc
stos
or
shrl
out
popf
push
leave
insl
mov
inc
jp
ret
test
cmc
mov
hlt
cmpsl
das
push
lock
pushf
ja
shl
sub
repnz
pop
push
push
xchg
jmp
push
xchg
sub
cmp
ret
and
cmpsl
idivl
sti
adc
cs
sbb
leave
sahf
sbb
xchg
lea
lahf
sti
mov
aam
stos
push
sbb
jecxz
sbb
jae
pop
inc
or
into
xor
push
xchg
cmp
add
loop
mov
aad
into
dec
mov
xlat
loop
js
xchg
xorb
fldt
test
insb
dec
add
fld
jecxz
mov
loop
and
ret
imul
inc
or
add
loopne
xchg
push
dec
lds
mov
xchg
pop
sub
sub
jo
lods
mov
cmp
fidivrl
mov
cwtl
dec
pop
rcl
cwtl
pop
lods
xor
adc
sub
fs
pop
xor
sbb
popa
pop
rorl
fsubp
mov
jg
sbb
push
fldt
push
inc
lea
fsubrs
xor
mov
xor
lods
push
cmp
sub
jle
shlb
stos
lret
mov
fs
lea
scas
clc
cltd
repnz
jae
outsl
cmpsl
call
mov
pop
jmp
jp
xor
pop
pop
jmp
inc
rcll
ja
imul
or
jo
push
mov
mov
neg
add
mov
repnz
mov
es
mov
pop
cmc
mov
sbbb
jo
inc
loope
aaa
insl
cld
cwtl
in
or
mov
mov
movb
mov
jne
aaa
xlat
adc
push
jl
add
test
jge
scas
je
dec
in
add
int3
test
dec
jnp
xchg
call
pop
lods
adc
test
lahf
xor
in
inc
sbb
nop
jmp
movsl
setbe
mov
pop
sub
mov
cmp
mov
insb
push
or
fucomip
push
adc
mov
jnp
pop
es
mov
inc
sti
das
push
jecxz
jg
inc
outsb
xchg
imul
xchg
ja
sbb
das
or
into
mov
shlb
cmp
cltd
out
and
lcall
ficoms
mov
cmp
push
cmp
or
popa
mov
js
jbe
in
sbb
mov
push
sarl
test
lea
into
mov
test
scas
daa
xor
xchg
mov
pushf
cli
movsb
push
dec
int3
or
mov
popa
stos
rcl
aam
fsubs
les
data16
xchg
jl
dec
cmpsl
pop
bound
push
mov
scas
stos
scas
out
pushf
mov
push
sti
cli
lods
popf
xchg
and
pop
sbb
inc
pop
push
ljmp
jge
repnz
pop
push
mov
xchg
mov
inc
imul
mov
call
mov
out
in
jge
or
aaa
and
cmp
int3
pop
xchg
jle
andb
idivb
xchg
add
mov
jle
int3
push
inc
cmp
scas
fcmove
jo
jne
divb
and
jae
inc
lds
xor
js
add
sub
xchg
enter
pop
iret
ficompl
xchg
push
adc
dec
lods
mov
stos
scas
inc
out
jb
or
push
add
add
jmp
push
inc
mov
pop
and
inc
pop
mov
mov
mov
mov
dec
sbb
pop
xor
mov
fwait
mov
je
insl
je
inc
sbb
imul
incl
push
or
add
mov
test
rcrb
and
fsts
outsb
sbb
pushf
lock
jns
adc
pop
lods
mov
in
sub
add
push
pop
cmp
std
xor
jg
push
negb
pop
ficompl
sub
sbb
push
loope
lock
jmp
xor
cmp
xchg
sbb
adc
lods
sub
mov
jmp
mov
sarl
adc
push
dec
jecxz
imul
sbbb
mov
repnz
xchg
mov
push
cld
lahf
js
inc
lock
loop
mov
mov
ljmp
pop
fildll
movsb
pusha
adc
les
repnz
pop
sub
lods
pop
mov
or
and
xchg
test
xor
sar
inc
push
xlat
ss
pusha
dec
xchg
movsb
mov
mov
loope
das
out
call
inc
add
inc
inc
mull
pop
das
jge
add
xor
jmp
push
lods
add
lcall
pop
mov
inc
adc
adc
mov
outsl
repz
out
pop
rorb
sbb
aad
add
das
jecxz
push
jl
and
mov
dec
fidivrs
and
xchg
in
xchg
and
in
jno
fdivrl
in
jmp
hlt
cmc
push
sti
jne
scas
lcall
push
out
cltd
lea
or
daa
aam
stos
in
sbb
push
push
or
add
or
rcll
lahf
fsubp
or
mov
test
adc
pop
mov
hlt
dec
in
lret
xor
jge
mov
pop
test
sub
pushf
fstpt
add
pusha
pop
lret
out
push
cmp
lret
dec
rorb
mov
push
ficoms
jecxz
sub
arpl
fs
pop
inc
insb
nop
push
cmp
rorb
push
sub
push
adcl
jne
or
movsl
cli
bound
or
mov
insb
por
test
mov
sub
lcall
and
mov
dec
mov
pop
cli
fiaddl
repz
aaa
push
fmull
mov
shl
cld
dec
cld
out
sbbl
scas
mov
enter
ja
sbb
les
les
setns
xor
pop
in
into
sub
mov
enter
sarl
test
sub
push
adc
jne
cli
cmp
aad
pop
clc
xor
lcall
sbb
sbb
pop
lock
popa
adc
jle
and
and
and
icebp
sbb
sbbl
sbb
xor
mov
nop
mov
sbb
push
insb
cwtl
mov
xchg
insb
sti
adc
pop
mov
push
inc
sbb
movsl
add
dec
cmp
pop
cmp
out
movsb
stc
adc
mov
jno,pt
xchg
fistpll
insl
je
pop
inc
and
push
scas
xlat
nop
iret
es
add
sti
cld
mov
scas
jmp
mov
out
mov
inc
lods
loop
insb
insl
xor
mov
add
dec
or
xchg
les
insb
add
jg
inc
fildll
shrl
nop
scas
enter
sbb
add
adc
es
test
push
sbb
enter
mov
dec
sarb
xchg
jg
cmc
xchg
cld
mov
into
xor
or
call
or
int3
es
jb
adc
aam
push
mov
hlt
sbb
sahf
or
mov
push
jb
lret
popa
push
push
cmp
sub
jp
xlat
inc
rcrl
jo
lret
adc
mov
subb
or
inc
imul
push
mov
dec
movsl
das
fdiv
dec
push
mov
cmp
cmc
adc
js
pop
ja
sbb
xor
sub
out
mov
dec
in
jp
jle
jbe
push
mov
xchg
jle
and
mov
pop
sbb
jmp
aam
cmp
jg
data16
mov
cmp
jo
mov
dec
lcall
iret
cmp
push
mov
aam
cmp
xor
cltd
mov
gs
jno
sub
sahf
hlt
or
ljmp
mov
xchg
xor
inc
lcall
fimuls
shll
je
ss
xchg
jecxz
clc
adc
mov
popf
clc
push
push
xchg
mov
nop
or
cmc
jns
jl
or
sub
daa
stos
sbb
pop
cmp
jne
push
mov
xorb
add
shrb
adc
jnp
inc
push
add
mov
mov
popa
push
xor
lcall
gs
fdivrs
pusha
lock
jl
dec
in
push
xor
adc
pop
sbb
jecxz
sbb
aad
cmp
fwait
mov
je
push
xchg
lahf
push
add
pushf
sub
pop
testl
pop
pmovmskb
divb
and
fnsave
mov
cmpsb
adcl
movsb
imulb
rcrl
xchg
das
xor
mov
cmpb
orb
lock
mov
cs
and
call
pop
das
mov
andb
outsb
jns
and
pop
popa
decb
in
cmpb
jnp
in
jb
jne
pop
out
sahf
loope
fadds
adc
dec
push
std
int3
aaa
xchg
xlat
jae
idivb
mov
inc
xchg
std
movl
sbb
lods
add
add
jne
ljmp
loopne
sti
fcmovu
jp
aas
fxch
sbb
mov
insb
jp
sbb
imul
lret
cmp
push
int
cmp
and
mov
sub
sar
loope
add
and
jg
push
or
aad
jl
stc
xchg
popf
pop
inc
ret
stc
ds
push
scas
lods
pop
or
lret
fsubs
pop
movsl
mov
xor
jecxz
clc
add
add
inc
rsm
imul
jae
ret
pop
push
mov
arpl
cmpsl
mov
gs
enter
lds
cwtl
scas
out
pop
fs
inc
je
add
or
shr
cs
ror
sti
mov
dec
flds
imull
les
lret
sbb
mov
or
rorl
cmp
scas
xchg
mov
dec
clc
pop
ss
jl
arpl
inc
fdivs
adc
je
dec
imul
jbe
push
in
pop
pop
pushf
jmp
test
adc
xchg
add
xchg
mov
popf
xchg
aad
jae
inc
in
add
mov
ds
fldl
jecxz
push
add
imul
mov
cmpsb
pop
scas
icebp
xor
in
add
out
mov
sbb
or
rclb
adc
add
inc
and
mov
mov
mov
cmpsl
shl
cld
daa
sbbl
adc
ljmp
sbb
add
push
and
js
inc
mov
xor
icebp
sbb
pushf
rorl
shll
inc
aad
shrb
lds
fsubr
push
sbb
and
inc
mov
test
lds
and
sti
test
iret
or
ja
push
push
mov
inc
sub
mov
and
in
test
movsb
bound
outsb
daa
jp
xchg
mov
jnp
pop
jmp
push
add
sbb
jno
js
cmp
repnz
inc
and
dec
cmpsb
sahf
jmp
sbb
inc
pop
fyl2x
fwait
notb
sbb
lcall
lock
loop
popa
mov
mov
xor
fwait
sbb
fdivl
dec
test
jp
test
fmuls
xchg
adc
fcmovnu
or
data16
les
xor
sub
push
xor
add
mov
jno
stos
daa
subl
rorw
xchg
loopne
mov
dec
cmpl
xor
pop
lods
out
mov
test
je
cmpl
jle
fnstenv
in
pop
das
ss
mov
pop
shlb
jb
push
dec
jnp
nop
mov
jno
push
rcll
pop
nop
fdiv
mov
sbb
scas
cmp
imul
and
mov
leave
or
leave
imul
push
sbb
and
mov
in
adc
add
sahf
xchg
xorl
stos
push
lods
push
sti
cmp
adc
out
lock
out
fs
xchg
push
cmp
jae
cs
ds
cld
jl
dec
mov
push
push
fdivs
mov
pusha
cld
xor
sarl
jnp
dec
and
cmp
mov
lret
bound
aad
sti
and
push
jp
dec
lods
xchg
jae
dec
dec
bound
xchg
nop
jns
shlb
jns
adc
jbe
push
jnp
loope
ret
jbe
cmp
clc
jecxz
push
gs
dec
loop
xchg
outsl
jo
mov
and
enter
pop
jbe
push
sub
popa
xchg
inc
lahf
adc
inc
jnp
xor
addr16
ljmp
pop
cmpsb
rclb
mov
je
mov
outsl
dec
jne
mov
jae
ret
movb
or
hlt
mov
jmp
shl
cmpsl
push
push
sbb
lahf
shrb
add
adc
push
sub
movsb
push
mov
or
nop
or
enter
ret
sarb
outsl
and
subl
jo
inc
jns
inc
add
aas
jmp
sti
sub
mov
mov
xor
adc
adcl
pop
stos
cmpsl
adc
jecxz
inc
cmp
data16
std
push
ror
mov
sbb
arpl
outsb
dec
mov
jns
and
mov
xchg
cmp
cmp
outsb
fcmovnb
cmp
subb
lock
mov
push
and
nop
jmp
push
mov
shrb
dec
mov
jmp
mov
cwtl
inc
adc
ror
fsubrs
or
cmc
scas
addr16
pop
push
arpl
mov
mov
pop
ds
out
shll
or
mov
mov
int3
and
mov
enter
bound
test
and
sbb
or
mov
pop
fucomi
lret
mov
rcl
or
pop
ja
inc
pop
and
pop
stc
int
xor
xchg
stos
jo
lock
and
xor
dec
mov
jmp
enter
push
dec
adc
or
mov
jne
mov
push
out
mov
cltd
xor
loopne
jmp
mov
push
cmc
orl
dec
push
adc
shll
and
mov
xchg
xchg
cmp
ja
cwtl
mov
dec
xor
clc
test
mov
shl
push
push
or
jns
outsb
mov
ret
push
fldl
sbb
popf
push
mov
or
sti
gs
pop
lock
adc
test
push
lods
add
inc
mov
aad
pop
das
pushl
enter
popa
mov
test
sbb
stos
andl
lcall
inc
leave
pop
jbe
adc
pusha
out
hlt
jae
loopne
mov
jns
mov
gs
ja
adc
call
bound
or
push
pushf
cmc
cmp
js
jbe
xor
xchg
cwtl
lods
or
mov
data16
lret
or
add
push
mov
ss
inc
stos
popa
movb
stc
add
xor
sbb
xor
loopne
mov
in
jbe
int3
shrl
fcomi
lret
dec
mov
shl
rcrl
xor
pushf
insl
push
lock
mov
out
xor
sbb
jp
mov
popf
mov
insl
pop
out
inc
inc
hlt
gs
je
imul
push
cli
inc
and
fldl
icebp
xchg
jbe
pop
stc
stc
pop
insb
adc
jp
hlt
jnp
lcall
repz
jp
fistpll
adc
imulb
int
fstl
dec
xchg
jecxz
ffreep
and
inc
dec
xchg
pop
adc
jne
xchg
xchg
ljmp
or
pusha
scas
mov
push
xorl
shlb
in
dec
cmp
fcmovbe
loop
pop
cmp
mov
loope
mov
aaa
mov
lds
push
clc
int3
insb
sub
test
xor
pushf
test
cmp
push
push
jl
mov
sub
add
pop
sbb
pop
stc
jbe
mov
pop
pusha
dec
xor
sub
jnp
fdivr
pop
sbb
xchg
mov
shrb
popa
or
roll
dec
hlt
mov
call
sub
ss
jae
lods
sub
ficompl
clc
roll
aaa
cltd
add
in
push
or
int
pop
in
mov
mov
stos
fstpl
popa
adc
mov
mov
or
loopne
cmc
in
outsb
inc
mov
es
xor
inc
mov
hlt
or
scas
jo
and
mov
daa
jmp
outsb
jbe
and
sete
xchg
mov
inc
ds
ljmp
aas
loope
mov
fcomp
pop
rcrb
movsl
test
leave
or
sbb
cmpsb
loopne
mov
inc
outsl
xor
dec
icebp
pop
xor
cmp
aaa
cmc
lods
inc
xor
enter
push
xchg
jle
in
dec
mov
popa
mov
jl
mov
add
fisubrl
mov
pop
lret
mov
mov
in
scas
add
scas
punpcklbw
sbb
xor
adc
inc
mov
add
cwtl
xlat
xchg
adc
mov
nop
xchg
xor
push
addr16
daa
add
dec
mov
and
sti
out
rcl
pop
icebp
cld
popf
mov
adc
jnp
rolb
cld
dec
inc
mov
xor
and
xchg
movsb
push
dec
cld
push
or
xchg
dec
fs
into
sbb
cmp
cmp
or
sti
or
sbb
dec
popa
ret
ret
insb
cmovns
cmp
sub
mov
insl
adc
dec
cmpsb
sbb
and
and
sub
lods
mov
leave
or
pop
and
fs
dec
in
adc
adc
daa
push
fcmove
cmp
jmp
and
mov
dec
cmp
mov
xchg
arpl
push
inc
popw
scas
loop
mov
ret
test
inc
fisttps
jl
stos
out
jno
push
icebp
xor
fisttpll
mov
fwait
in
inc
cltd
ljmp
lock
or
bound
xchg
in
out
sub
mov
mov
stos
push
pop
int
mov
lret
lahf
mov
in
cmp
rorb
push
sbb
cmp
sub
outsb
jne
push
mov
fsubr
adc
inc
cmp
test
xor
xorb
es
adc
jge
jno
pushf
push
scas
dec
sbb
push
or
cmc
push
sbb
pop
stc
arpl
jns
int3
loope
or
xchg
stos
add
mov
fstps
pop
cmp
mov
jo
inc
fbld
dec
xor
mov
mov
adc
frstor
push
dec
stos
ror
cltd
xchg
push
pop
cmc
ds
and
inc
push
push
pop
sbb
int
jp
adc
add
repz
xor
in
mov
xchg
sbb
xor
enter
mov
insb
lods
and
ja
test
loope
mov
outsl
fnstenv
adc
ja
insl
arpl
jns
xlat
lret
mov
pop
adc
mov
pop
icebp
push
lods
mov
mov
cmp
loopne
and
testb
and
sub
mov
imulb
fisubrl
call
addl
insb
addr16
cmp
push
mov
push
add
mov
loop
add
xchg
push
or
aad
mov
incb
ss
push
hlt
cltd
inc
push
icebp
xchg
stos
mov
jne
cmp
rcrb
inc
pop
testb
pop
xor
cmpsb
shlb
shlb
outsb
inc
sub
push
adc
mov
xchg
sub
push
fbstp
out
push
mov
dec
push
push
mov
push
sti
adc
inc
adc
jmp
xor
out
and
inc
stos
push
aam
cmove
fs
aad
mov
cwtl
jns
lds
subb
push
add
pop
loope
es
push
movsb
or
cltd
mov
outsl
xor
fldl
aam
mov
xor
dec
pop
loop
test
jns
xor
or
xchg
dec
push
imul
lcall
out
in
adc
cmp
imull
sbb
inc
xor
xchg
mov
stos
sahf
or
push
stos
jge
fs
mov
dec
pop
sub
in
ds
mov
bnd
push
jb
popf
insl
xlat
sbb
or
add
dec
into
jl
add
fsubl
xor
jb
sub
shlb
xor
fdivs
lods
add
xor
fwait
mov
and
push
push
dec
iret
arpl
inc
cmp
pop
in
shl
dec
mov
es
imul
pop
ret
neg
js
inc
adc
stos
je
sub
iret
inc
idiv
push
dec
scas
lds
jmp
fstps
shld
and
scas
daa
mov
dec
inc
mov
jno
xchg
inc
cmp
lahf
cmp
adc
testb
mov
mov
stc
scas
fidivl
aad
adc
clc
popa
inc
jae
cwtl
pop
push
push
sar
stc
and
mov
scas
xor
jnp
or
adc
pop
mov
jo
push
insb
rcll
dec
sbb
sti
sbb
push
scas
imul
mov
push
xchg
in
out
testb
jmp
jmp
ds
in
enter
in
push
mov
jns
push
mov
fiaddl
push
repz
insl
subl
xor
push
lret
inc
push
ds
jle
aaa
fwait
fwait
mov
stos
or
jmp
or
flds
bndldx
pop
inc
xor
cmc
imul
or
dec
jae
shll
ja
adc
xor
les
daa
es
movsb
sub
add
inc
adc
loopne
mov
jp
xchg
pop
std
jae
cmpsb
cmp
xchg
out
push
popa
xlat
mov
push
or
aam
pop
or
dec
cmp
sti
jle
cmp
lret
nop
adc
xchg
aam
fistl
adcl
mov
in
int3
xor
xchg
fwait
out
nop
loopne
movsl
xor
pop
cmpsl
cmc
out
jmp
cwtl
shll
lds
pop
les
and
addr16
jmp
pusha
or
adc
js
stos
mov
test
addl
dec
icebp
sub
sub
hlt
mov
sub
adc
popf
ljmp
jae
cli
iret
sbb
or
roll
lret
jge
jae
mov
inc
or
test
call
neg
mov
push
pop
sbb
and
dec
negl
scas
dec
cmovne
scas
fidivl
dec
mov
test
and
mov
iret
rcll
loope
ds
dec
mov
aas
push
insl
inc
fs
out
mov
sbb
rolb
int3
inc
cmp
repz
pop
stos
mulb
xor
push
lock
push
cmp
mull
cmp
add
into
enter
mov
mov
jmp
sub
loopne
and
and
inc
addr16
jge
xlat
mov
fwait
shlb
stos
sub
arpl
das
test
outsl
cmp
mov
mov
ds
pop
in
notb
mov
jecxz
arpl
loopne
hlt
push
pop
aas
or
incb
pop
out
jno
imul
std
fdivrp
sub
inc
mov
hlt
push
jno
mov
mov
push
push
sub
mov
repnz
daa
testb
rolb
mov
rolb
push
mov
cltd
sbb
inc
fbstp
mov
insb
movsb
lcall
loopne
dec
pusha
xchg
xchg
popa
xor
lret
test
bound
mov
cmp
xchg
pop
imulb
and
adc
sbb
xor
inc
push
lret
cmpsb
sbb
xor
fistpl
sar
sub
stos
xor
movsb
add
std
mov
into
xchg
push
aam
out
ret
mov
pusha
incl
int
jp
push
cltd
mov
push
dec
insb
test
push
lcall
sti
daa
push
xchg
sbb
subl
movsb
fidivl
cmp
sub
inc
adc
pushf
cwtl
ret
xchg
cmp
cmp
adc
and
cmp
jle
enter
je
cwtl
mov
mov
gs
mov
xchg
adc
fsubs
adc
lcall
bound
inc
xor
and
pop
pop
jns
pop
mov
pushf
test
out
jns
mov
addr16
jge
scas
jecxz
mov
push
sub
ret
mov
loopne
push
js
das
pusha
aam
insb
loop
sub
fldl
testb
repnz
cli
js
shll
mov
adc
stc
cmp
pop
int
loop
daa
cmp
push
push
jmp
lret
add
int3
mov
addr16
dec
fwait
lods
test
push
pop
and
insb
pop
xchg
lds
dec
mov
bound
push
and
pop
sbb
cmp
jns
pop
fsubrl
mov
addr16
ret
fstl
dec
cmovnp
icebp
rclb
sbb
scas
mov
pop
imul
ret
into
dec
jne
push
jbe
xor
mov
sahf
out
sub
add
das
es
and
push
or
dec
jp
scas
shll
outsl
fiadds
in
lea
jecxz
pop
jle
sub
fcomip
mov
push
pop
mov
sbb
jnp
cs
mov
xor
cmp
mov
int
adc
jb
inc
cld
clc
in
test
or
mov
mov
jns
xchg
sbb
loop
fs
push
jo
sbb
addb
cmp
mov
adc
jl
orl
inc
lcall
hlt
adcb
xor
jb
jecxz
mov
ret
andb
sahf
imul
clc
adc
fdivrl
icebp
sti
jl
inc
fldenv
icebp
mov
xor
scas
mov
mov
mov
ret
push
stc
mov
push
xchg
push
jnp
loopne
call
push
es
pop
and
lds
mov
jae
call
inc
mov
dec
xchg
nop
sti
mov
push
jns
aaa
shl
iret
sub
pop
inc
andl
and
push
out
pushf
popa
push
outsb
arpl
fwait
mov
jl
jb
lahf
jne
mov
push
or
jnp
pcmpeqd
fsubl
and
dec
sub
arpl
dec
cmp
aaa
shrb
xchg
inc
cmc
or
clc
push
inc
shrl
push
jno
test
cwtl
test
cld
lods
sub
dec
cmc
dec
mov
lcall
and
cmp
dec
nop
imul
into
ja
scas
out
pusha
int3
dec
fs
iret
data16
into
cmpsb
in
loop
jbe
aam
outsb
insl
cmp
push
inc
push
mov
popa
cmp
out
das
or
es
loop
insb
mov
cli
popf
dec
xchg
and
mov
xchg
mov
insb
ds
into
imul
data16
int3
pop
out
mov
cli
cltd
fucomp
icebp
inc
pusha
into
xlat
add
ljmp
popa
loopne
dec
jnp
cmp
test
clc
lcall
jp
cld
jg
mov
push
or
and
aaa
lea
mov
push
mov
aad
stos
loope
sti
repnz
popa
ja
xor
js
jne
sbb
or
mov
movsl
dec
sbb
inc
test
sub
sbb
add
or
sub
push
sbbb
fisubl
adc
outsl
fwait
es
xorb
xor
inc
mov
mov
imul
dec
add
or
or
push
mov
mov
inc
cmp
pop
jo
fcmovb
push
jmp
jmp
push
mov
sbb
scas
pop
jecxz
push
jae
iret
jle,pn
fsub
inc
in
mov
movsl
cmpsb
or
in
push
push
pop
lea
cs
push
ficoms
push
lret
cld
xchg
pop
ret
cmc
jnp
cltd
xlat
jo
nop
jnp
subb
arpl
pop
testb
push
orb
xchg
mov
test
cmc
jge
sbb
dec
stos
lahf
lret
jmp
adc
js
ljmp
jg
dec
lret
fisubrl
aas
lock
adc
push
cmp
or
push
fildll
fnstenv
xor
jge
inc
nop
clc
cmc
fsubl
out
int
test
arpl
loop
arpl
je
add
and
mov
jnp
andb
lea
clc
shlb
test
in
aad
inc
mov
xchg
cld
xor
loope
dec
cli
xchg
mov
stos
sbb
pop
ret
xchg
hlt
sbb
das
mov
jmp
xchg
inc
lret
mov
inc
sbb
aas
dec
pop
mov
inc
jne
insl
or
mov
mov
pop
cmp
or
pop
out
push
lods
out
mov
rep
or
jo
dec
movb
push
mov
add
xchg
mov
jl
dec
inc
pop
push
pusha
push
out
xchg
jno
int3
std
xor
dec
mov
sar
adc
out
sub
pop
adc
push
fsubrs
rcr
adcl
loop
jo
jg
adc
push
sub
add
stos
cmp
push
cmp
inc
mov
add
lods
adc
ds
in
call
cmp
push
sub
fistps
inc
xchg
imul
addl
xchg
adc
aas
push
adc
jo
cmp
aaa
mov
lods
mov
mov
cmpl
xchg
fldenv
shll
bound
rcl
mov
pop
jecxz
and
cmp
in
fdivrl
les
jae
xor
sti
xor
in
outsb
fbstp
mov
sub
or
fisubl
stos
icebp
xchg
jge
fwait
arpl
sahf
cltd
pop
into
das
xor
sub
inc
xor
push
adc
in
cmp
incb
cmp
pop
loope
cwtl
inc
int3
sti
gs
movsl
pop
mov
sbb
cmp
outsl
or
pop
adc
cwtl
lods
mov
mulb
mov
push
cli
rcr
movsb
stc
orl
aas
inc
mov
adc
imul
enter
jo
mov
jle
push
ds
movsb
iret
sbb
mov
jl
sbb
dec
iret
pop
or
fwait
dec
cmpsb
sbb
mov
push
or
in
xor
mov
scas
mov
xchg
mov
in
xchg
fiaddl
add
hlt
test
sarl
xchg
jo
icebp
jp
aam
xor
add
int3
loop
and
enter
mov
push
push
add
inc
xchg
or
lahf
xor
out
jnp
pop
loop
enter
daa
rorl
or
push
mov
jmp
xlat
inc
rcl
sbbb
pop
sub
dec
adc
repz
sub
sarb
push
iret
mov
ds
and
shlb
and
xor
push
mov
pop
sahf
bound
aas
fiaddl
mov
pop
push
xor
mov
mov
pop
icebp
and
xor
mov
inc
inc
mov
pop
stos
repnz
movsl
add
add
sub
sub
jp
sub
push
add
mov
pop
add
aam
outsb
mov
add
hlt
sbb
pushf
push
ja
les
lods
movsl
lea
sahf
sbb
mov
xchg
adc
outsb
into
or
cld
loop
mov
lahf
in
out
addr16
mov
enter
pop
jmp
mov
and
jbe
sub
mov
mov
mov
call
xchg
int
out
xchg
divl
scas
xor
mov
ss
xchg
xchg
inc
pop
inc
push
mov
clc
sbb
aaa
mov
mov
xchg
addr16
mov
xchg
and
jno
xchg
inc
ret
mov
add
cmpsl
pop
test
lods
push
mov
pop
cmc
lcall
stos
mov
outsl
arpl
jnp
push
xor
lret
push
xor
repnz
and
xor
or
scas
push
mov
mov
xor
lds
ss
push
push
iret
stos
out
out
mov
notl
mov
pushf
aas
je
sbb
outsb
movsb
jl
sub
pop
jg
pop
aas
imul
imul
cltd
test
cld
inc
mov
orl
pop
xchg
xchg
lods
dec
or
push
xorb
mov
mov
jmp
mov
dec
xchg
xchg
push
testl
pop
aam
lret
xor
lds
out
cmpb
inc
int3
insb
in
sub
sahf
lea
pop
std
in
stos
mov
cmp
xchg
xchg
mov
sbb
sbb
dec
movsl
cltd
lock
int
clc
xchg
and
mov
sbbl
jnp
lret
dec
outsb
inc
mov
mov
inc
data16
call
cmc
cld
sub
adc
sbb
idivl
movsl
jge
mov
in
xchg
rolb
xchg
push
pop
test
jmp
xchg
popf
dec
pop
sahf
xchg
push
push
loope
or
pop
pop
xchg
jg
or
mov
mov
jae
lahf
adc
and
jno
pop
stc
pop
ret
push
lock
ljmp
insl
cmp
add
cmp
mov
lahf
jae
push
push
out
lret
xor
lock
jb
shrl
ja
lret
mov
cmpsl
pop
push
rorl
pop
add
jge
sub
push
aas
add
ja
comiss
dec
jle
sub
je
push
mov
cmp
mov
pop
inc
mov
scas
add
cs
cmp
push
lea
repz
es
imul
fucomi
in
cmpsl
adc
adc
dec
call
lret
xor
out
mov
in
sti
lret
dec
pushf
rorl
rorb
jle
or
mov
mov
dec
mov
shl
mov
data16
fwait
daa
mov
xor
push
adc
cmp
popf
filds
das
and
xchg
jnp
dec
pop
mov
pop
dec
rol
repnz
es
mov
mov
lret
mov
sbb
shl
pop
jl
pop
js
sarl
cld
daa
fcoml
mov
shrl
or
xchg
lock
push
negb
sbb
mov
pop
out
inc
dec
lods
es
rol
lret
push
pop
mov
xchg
rclb
cmp
or
xchg
loope
jg
aad
ja
icebp
pop
fnstsw
ja
lcall
notb
jp
jecxz
and
and
sub
imul
jge
pop
pop
out
insl
enter
pop
sbb
cs
lret
gs
dec
rcrl
fidivl
stc
sub
jle
jge
out
sbb
test
adc
stos
adc
push
mov
inc
or
cld
ret
inc
or
in
loopne
xchg
push
xor
sar
ret
pop
dec
pop
mov
fadds
lds
pop
sub
and
adc
pop
outsl
leave
pop
shrl
inc
mov
fidivs
fs
popl
je
push
mov
loope
mov
cld
shll
outsb
inc
out
or
stc
repz
or
adc
aad
lahf
mov
jmp
scas
push
test
push
mov
shl
jp
adc
adc
xchg
mov
sbb
inc
dec
push
xor
jmp
shlb
cmc
add
mov
cli
mov
xchg
lods
mov
incb
xor
in
fstps
or
mov
sub
pushf
jmp
or
push
fistl
and
mov
dec
xor
les
stos
jecxz
fxch
in
sbb
frstor
sub
lock
xlat
mov
sub
xor
mov
mov
mov
jno
sbb
je
push
sbb
adc
sbb
xor
pop
xor
mov
flds
pushf
out
cmpsb
mov
dec
push
negl
in
and
adc
pop
leave
bound
scas
inc
sub
test
dec
xchg
push
ffree
xchg
mov
cmp
cmpb
jmp
cld
push
out
pop
shl
jb
dec
cmp
cmc
jl
xchg
or
xchg
lods
or
rcrb
inc
div
xchg
je
dec
xchg
scas
sbb
push
stos
inc
repnz
add
ret
and
jae
and
js
jb
sub
and
cmpsb
subl
cli
js
fistps
and
cmpsb
mov
popa
jne
roll
xor
lods
jge
fstp
aaa
faddp
test
repz
inc
in
jmp
lods
inc
mov
sti
shlb
adc
stc
jae
sarb
mov
into
jle
cmpsb
rolb
xchg
ret
add
xlat
cmp
jbe
es
push
push
add
test
inc
lds
mov
inc
mov
inc
add
shr
inc
add
lea
divb
lahf
fisttpl
int
pop
dec
movsl
xchg
data16
push
rorl
sbb
stos
mov
xor
push
xor
dec
add
scas
das
inc
gs
add
fldenv
pop
sub
pop
test
daa
adc
gs
adc
loopne
imul
ret
into
lret
aaa
ss
add
test
fsubl
icebp
push
jge
sbb
jge
sub
stc
sahf
int3
sub
pop
push
and
xlat
jecxz
dec
ret
jnp
push
lcall
fsubs
pop
sbb
inc
std
cmp
pop
in
push
mov
sub
mov
mov
cmp
movsl
rcrl
fidivl
inc
nop
jnp
testb
xchg
cmpsl
lret
inc
push
imul
and
stos
pushf
insl
out
jl
add
pop
or
test
dec
xchg
loop
cmp
mov
rolb
cmp
and
lods
daa
and
aaa
xor
xchg
fildl
stos
xchg
cmp
addr16
fidivs
or
mov
pop
ret
inc
mov
repz
outsb
imul
xor
test
pop
aam
jb
lahf
outsb
pop
addps
pop
mov
rorl
into
mov
out
cs
cwtl
mov
push
mov
jmp
dec
cld
inc
xchg
sbb
neg
pop
ja
fsubs
dec
or
popa
lret
pop
xchg
inc
stos
push
shrb
mov
mov
and
repz
inc
inc
mov
xor
inc
loopne
and
jmp
psubusw
jmp
enter
jge
ljmp
popa
sbbl
scas
add
inc
pop
lahf
cltd
mov
push
orb
pop
loope
xor
and
rcr
pop
push
out
xor
mov
pop
mov
jns
cmpsl
cmp
pop
faddl
jns
lods
adc
popf
fcomp
mov
xor
inc
or
sbb
or
out
iret
ret
mov
xor
test
mov
or
xchg
es
and
and
or
and
imul
das
lea
js
ss
cmp
ret
mov
xchg
pop
jl
xor
lret
cld
hlt
push
repz
aaa
adc
add
or
jnp
fnstsw
and
out
cltd
push
imul
nop
das
pop
lea
ljmp
pop
hlt
aad
or
repz
mov
adc
mov
sbb
stos
xchg
jae
cmc
lret
shrl
add
cmp
gs
sbb
aas
std
test
mov
pop
pop
lahf
dec
bound
adc
int3
cs
mov
jl
icebp
adcl
sbb
dec
jge
cmpsb
mov
or
fsubrs
xor
jbe,pt
clc
sbb
add
scas
inc
data16
test
sub
inc
and
int3
or
pop
das
cmp
pop
push
cmp
push
add
pusha
cmpsb
xchg
es
in
mov
mov
adc
xor
inc
mov
mov
push
mov
data16
inc
fldt
jnp
push
xor
adc
add
push
push
jmp
xchg
lods
sbb
inc
mov
in
cmp
test
scas
push
jo
loope
mov
cli
lret
insl
add
nop
push
inc
adc
jne
or
sub
cmp
imul
adc
movsl
xchg
stos
fs
inc
dec
xchg
jle
xor
pop
icebp
dec
jb
sub
popf
enter
cli
xchg
out
out
sbb
mov
sub
loop
test
dec
clc
mov
cli
inc
fmull
jns
mov
and
xor
cmp
xor
inc
inc
aam
bound
inc
fcos
xor
arpl
inc
xchg
inc
sub
mov
lcall
ret
push
pop
xor
mov
mov
cmp
aam
out
jno
mov
mov
into
in
repnz
aas
int
jae
inc
sti
test
fimull
cltd
push
daa
push
cmpsl
insl
push
lods
divb
sbb
mul
rorb
or
ffreep
push
mov
and
imulb
ss
inc
jg
cli
mov
dec
pop
fnstcw
sub
mov
jnp
aam
xor
shlb
dec
cmp
inc
hlt
test
lods
pop
cld
rcll
pop
mov
notl
push
xchg
sbb
je
mov
cld
dec
insl
push
sub
clc
stos
xor
xor
add
pop
or
je
jl
into
mov
or
addl
jo
rcrl
loop
clc
jns
scas
mov
andl
mov
xor
jne
cmc
mov
jmp
cli
jnp
outsb
fmuls
mov
fstpl
lock
xor
xor
popf
mov
stos
adc
je
mov
push
xchg
jnp
sti
add
and
sub
jmp
jnp
sub
popa
add
jmp
rorl
xchg
xor
and
rorb
iret
jb
out
mov
xlat
adc
sti
xchg
jmp
ja
sar
scas
out
es
popf
cmpsl
mov
lock
and
xchg
push
push
dec
xchg
xor
mov
and
imul
fdivr
loope
jle
xor
mov
pop
or
lds
repnz
xor
mov
xchg
shll
mov
add
mov
push
xor
xchg
loope
rorb
pop
sub
insl
ret
and
jb
xor
pop
jbe
dec
add
fwait
test
sbb
sbb
stc
nop
sbb
jbe
sub
aas
inc
pusha
cli
inc
je
in
lea
add
test
cmp
cmpsb
fadds
sbbl
sub
popa
das
fcmovne
jl
jno
cmp
cld
jmp
repz
xlat
or
mov
fdivs
ret
stc
mov
bswap
orb
jae
es
movsb
cmpsl
adc
sub
xchg
icebp
and
aas
mov
insl
jl
leave
mov
inc
xor
incb
lret
pushf
mov
adc
rcrb
stc
icebp
mov
insb
dec
loope
lcall
xor
inc
adc
and
mov
jnp
cmp
std
negb
mov
gs
js
les
mov
mov
repz
rol
mov
push
xchg
mov
mov
mov
test
clc
scas
sub
add
cld
mov
scas
xchg
repz
in
lret
test
ret
sub
jle
inc
imul
mov
adc
jne
add
outsb
mov
mov
mov
xchg
je
mov
mov
push
or
dec
mov
pushf
or
pop
cmpb
test
pop
test
xchg
mov
sar
xchg
inc
icebp
aam
mov
outsb
sbb
aas
testb
mov
cmp
out
insb
in
insb
jno
cvttps2pi
rcrb
lds
arpl
mov
mov
cmp
out
and
push
pop
xchg
mov
mov
xor
dec
xchg
loop
pop
nop
sbb
add
xchg
data16
sub
cld
ja
lcall
sti
gs
pop
inc
sub
ljmp
push
mov
inc
inc
jne
cmp
add
xor
jo
stos
mov
lret
lcall
lret
subb
dec
and
pop
inc
dec
push
dec
mov
iret
adc
pop
imul
nop
cwtl
test
cld
outsl
jns
fistps
mov
nop
lods
cmpsb
outsb
inc
cltd
mov
pop
xorl
rorl
iret
sbb
and
mov
xorl
sub
cmp
adc
adc
sub
add
rorl
jg
sub
mov
and
imul
in
mov
and
jecxz
je
cmpsb
roll
cs
lods
xor
mov
or
jecxz
ret
loope
das
jne
pop
add
ret
arpl
shlb
js
xor
mov
mov
mov
pcmpeqd
inc
aad
or
in
outsb
bound
xor
test
or
mov
in
pop
inc
mov
addr16
jecxz
push
xchg
jnp
push
insb
loopne
mov
adc
mov
sti
insb
pop
outsb
pusha
call
and
push
push
jle
jbe
js
inc
sbb
cmp
scas
outsl
push
in
xchg
push
mov
shr
popf
pop
sbb
pop
xchg
or
in
sub
dec
push
xchg
nop
es
cmp
add
aad
cmp
gs
stos
dec
jnp
loope
xor
call
mov
pop
pop
cmp
mov
pop
scas
push
icebp
lret
rorl
lcall
sbb
mov
icebp
xor
rcrl
jns
scas
fisttps
cli
jp
mov
sbb
jmp
cld
or
pushf
push
xchg
cmp
add
repz
mov
ljmp
mov
lcall
mov
push
lea
jecxz
add
and
cld
rclb
cmp
mov
pop
aad
jmp
jle
fwait
not
dec
mov
outsl
sbb
push
push
lock
jno
push
cmp
inc
sub
and
fcompl
aaa
push
movsb
outsb
inc
ja
pusha
out
insl
push
loop
pop
ss
xchg
jne
adc
add
aad
scas
jne
stos
lret
jno
or
fistpl
lahf
xchg
xchg
lods
mov
clc
jae
movsl
push
loopne
push
cmpsb
rolb
sub
jg
loop
xor
add
mov
ljmp
imul
aas
adc
in
ja
inc
jmp
sub
dec
inc
outsl
mov
jns
nop
jno
mov
cld
cld
orb
jge
adcl
push
test
cmc
sbb
mov
test
add
lret
testl
xchg
fistps
orl
push
fmull
fwait
mov
mov
loop
fbstp
fdivl
xor
jecxz
sti
pop
orb
xor
fnsave
push
sub
inc
in
mov
lock
push
fdivrl
cmp
cmp
jns
stos
dec
mov
enter
nop
xchg
jmp
push
pusha
mov
loope
xlat
mov
xchg
xchg
mov
test
popa
push
xchg
stos
test
pusha
sub
or
cmp
stos
sbb
sbb
scas
add
hlt
andl
sub
add
jl
fsubrl
loopne
adc
out
mov
adc
sub
cli
pop
push
inc
fcmovne
divl
mov
mov
jnp
xchg
test
cmpsl
aaa
test
push
jno
push
and
adc
jle
and
int3
mov
jnp
sub
das
jno
rcrl
scas
mov
fwait
pop
iret
add
sbb
in
fnsave
js
and
jmp
sub
adc
in
imul
scas
das
daa
pop
jae
mov
imul
fcoml
jnp
sti
pop
xor
dec
mov
xor
int
mov
mov
in
scas
sti
out
scas
cltd
jp
scas
lahf
fisubs
stc
cli
and
xorl
pop
ret
aad
mov
mov
pop
int3
push
sub
das
pusha
mov
mov
iret
adc
sub
xchg
push
mov
pop
sbb
in
inc
jnp
sbb
or
test
mov
mov
or
mov
mov
imul
insb
mov
pop
pushf
adc
cmp
lea
and
shr
cs
jle
jl
fstp
mov
cld
jo
pusha
repz
xchg
or
adc
and
pop
nop
or
and
push
cs
mov
shlb
mov
push
sbb
sub
pop
cld
or
sub
lods
loop
lods
std
out
test
fmuls
mov
je
push
mov
jmp
and
rcrl
popf
inc
fdivrs
mov
jnp
subl
sbb
imul
dec
inc
fstl
icebp
push
xchg
jge
jmp
xchg
testb
addr16
ljmp
sbb
gs
lds
adc
mov
lcall
sub
dec
scas
mov
mov
aam
adc
stc
outsl
jl
sbb
movsl
add
xor
cmpsb
pop
dec
adc
mov
shrl
aas
push
mov
fnstcw
add
out
insb
pop
push
mov
pop
push
and
jmp
cmc
arpl
imul
test
out
insl
adc
dec
mov
adc
out
lret
es
inc
xchg
dec
filds
jnp
aaa
cmp
mov
jmp
addr16
push
dec
std
cmp
in
shll
cmp
push
mov
aas
pop
lcall
nop
xchg
or
or
cmp
bound
ljmp
sub
repz
cmp
mov
push
les
mov
dec
adc
iret
xlat
int
and
or
nop
sbb
or
insl
add
pop
add
aas
lea
testb
iret
shll
xchg
test
push
in
sar
jmp
ljmp
in
lods
lods
xchg
stos
into
outsb
enter
std
pop
stos
out
inc
xchg
ret
adc
xchg
add
jecxz
test
inc
push
jne
adc
mov
lret
ss
cmpsl
add
loop
or
cltd
loope
adc
jl
xor
add
push
sbb
adc
aaa
scas
leave
lret
nop
pushf
sub
xchg
add
xor
and
and
fstps
mov
sarb
test
push
mov
ja
cmp
pop
xchg
insl
scas
add
lock
sbb
sqrtps
and
add
outsl
std
fadds
jp
sub
adc
test
mov
orb
sbb
sarb
push
jmp
rcrb
mov
xchg
sbb
dec
xor
mov
out
add
mov
out
fdiv
arpl
push
cmpsl
jp
outsb
jae
mov
scas
push
shr
jns
cmp
je
inc
jns
jns
cmp
jg
mov
cmp
out
loope
and
subl
outsl
popf
call
sbb
mov
rorl
pop
xor
push
adc
xor
aas
or
mov
dec
pop
lcall
movsw
push
rep
jmp
cmpsl
into
out
mov
or
cwtl
hlt
ficomps
imul
sbb
sahf
xchg
jmp
lods
mov
ffree
dec
xchg
and
push
sahf
out
adc
and
mov
movsb
cltd
filds
jge
mov
push
nop
mov
mov
push
test
imul
clc
push
or
test
stc
jmp
lea
jg
jl
out
mov
lret
pop
std
clc
repnz
ja
mov
pop
aad
addps
add
cmp
adc
mov
lock
shrl
jp
iret
jb
jnp
aam
stos
xor
js
lock
xlat
aam
pop
jmp
loop
cmpsb
sti
loopne
sub
loop
push
cmpsb
jmp
sub
mov
insl
sbb
pop
inc
jmp
add
into
pop
loop
stos
or
lds
stos
icebp
sbb
jmp
lret
push
popa
and
es
lret
mov
pop
outsb
xchg
sub
push
jg
fs
add
dec
jnp
loop
pop
or
sbb
repnz
pop
stos
pop
movsl
ret
xor
xor
repnz
cmp
das
call
inc
push
push
cmp
mov
lds
pop
dec
test
and
pop
aam
push
fsubrs
mov
es
or
mov
pop
sbb
ljmp
aaa
xchg
cmp
stos
jmp
or
cmp
push
mov
mov
fists
mov
jmp
sahf
andb
cmp
dec
pop
xlat
xlat
in
mov
mov
dec
lods
pusha
lret
fisttps
mov
push
add
mov
and
xchg
jecxz
jl
xchg
mov
jb
scas
fadd
or
pop
cld
xchg
lds
into
ja
mov
cmpsb
out
dec
xchg
bound
out
xchg
jo
mulb
js
dec
aad
or
push
inc
mov
jg
xor
cld
andb
sbb
mov
lods
fs
jne
lret
test
push
ss
movsl
push
push
test
xchg
mov
mov
ja
add
ret
pop
imul
cmp
inc
scas
push
scas
inc
subl
add
paddd
sub
sbb
xor
and
testb
and
inc
xor
outsl
push
sub
cmpsl
add
mov
pop
sub
xor
sahf
add
dec
jb
enter
shlb
mov
jmp
or
ror
add
push
sbb
jb
loopne
nop
lret
push
or
fbstp
sahf
dec
sub
jecxz
mov
dec
inc
add
ds
scas
outsl
pop
ljmp
hlt
adc
adc
lret
popa
mov
icebp
fwait
jb
insb
add
lock
pusha
les
les
mov
push
xchg
cli
jno
cmc
or
fldcw
loope
scas
and
jmp
call
into
adc
and
xchg
mov
mov
lret
mov
mov
sbb
xor
popa
ret
jmp
roll
cmp
xchg
insl
mov
repz
or
outsl
or
ss
and
pop
lahf
xchg
xchg
lds
subl
xchg
sub
dec
lret
mov
mov
mov
xchg
mov
nop
pop
cli
push
negb
stos
push
lcall
icebp
lea
push
sbb
aad
and
shll
adc
adcb
lret
xor
cmpsl
xor
pusha
jae
fisttpl
fsubrp
xor
jmp
test
getsec
pop
inc
mov
ja
push
orb
or
and
mov
outsb
jbe
push
and
pop
test
shlb
add
pop
push
adc
mov
mov
mov
movsl
push
icebp
leave
sbb
loopne
inc
push
add
cld
out
shlb
data16
imul
add
lret
dec
lret
imul
adc
hlt
and
stos
flds
sbb
mov
outsb
dec
add
push
ss
stos
inc
andb
ret
push
repz
fdiv
dec
addr16
mov
test
inc
pop
inc
cltd
sub
leave
fsubr
imul
filds
inc
rol
lret
push
sub
ja
pushf
loop
stc
mov
or
and
push
and
shrb
in
pusha
jb
icebp
mov
ja
ljmp
shll
push
out
dec
data16
cmp
push
dec
mov
xor
add
push
inc
iret
jns
add
inc
daa
jl
sbb
jecxz
mov
mov
sub
inc
xchg
fldt
pop
pop
sub
sub
push
cmc
mov
xchg
pop
lods
sbb
mov
dec
js
rcl
jmp
inc
jecxz
add
loopne
dec
jecxz
or
jnp
enter
adc
xchg
sbb
xchg
out
jp
adc
pop
mov
add
ret
fimuls
aaa
mov
insb
js
neg
xchg
push
fwait
add
or
inc
lods
aam
or
push
jmp
imul
cmp
shrb
and
xchg
adc
adc
test
scas
inc
ss
dec
push
mov
jecxz
cmp
push
out
mov
jle
cmc
dec
push
sub
dec
fsubs
mov
jbe
das
mov
pop
mov
nop
adc
das
stos
divl
xor
push
sbb
mov
or
movsb
inc
add
inc
xor
lock
xchg
insb
xor
cmp
sbb
and
or
push
fildl
dec
mov
sub
into
loope
push
xchg
sub
loop
or
add
push
stc
cs
arpl
jecxz
ret
cmp
sbb
je
loopne
adc
jecxz
lds
cwtl
pop
fsubrs
mov
ss
jno
mov
fdivs
lahf
lock
jb
inc
and
dec
mov
mov
gs
bound
pop
fisubrs
mov
mov
xchg
sbb
push
cltd
mov
jecxz
xor
frstor
jge
lret
jmp
movsb
rcrl
push
inc
lahf
jae
mov
pop
or
mov
ja
adc
ficoms
lods
ret
iret
stos
mov
mov
or
push
xchg
cmpsl
loopne
xor
push
pop
loope
sbb
mov
xchg
repnz
xchg
fdivrl
pop
cld
sbb
pop
loope
adc
icebp
dec
pop
int
arpl
xchg
subb
int3
pop
adc
negb
and
push
adc
inc
loopne
pop
push
xor
cmpsb
pushf
mov
bsf
pop
dec
mov
xchg
cmpb
test
jno
hlt
leave
ja
push
jae
push
or
shr
and
mov
cmp
repnz
fistpl
inc
sbb
xchg
sbb
pop
mov
or
or
iret
test
pop
dec
dec
pop
add
dec
es
and
cmp
jbe
scas
mov
fwait
enter
pop
stos
pop
leave
or
loop
movsl
movsb
stos
sbb
orb
dec
aas
loopne
or
shr
mov
add
push
cmc
test
cmpsb
mov
popf
pop
inc
dec
rcl
push
mov
sbb
push
loopne
cltd
and
imul
leave
add
js
cmc
push
mov
mov
xor
sahf
mov
inc
ds
ret
movsl
cmp
aam
insl
fwait
mov
dec
ds
xor
push
out
sbb
rorl
subl
insl
movsl
jle
iret
xchg
add
icebp
mov
sbb
nop
ret
xor
jns
lcall
ds
jo
dec
bound
cmc
cmp
inc
pusha
push
cld
jns
mov
int3
enter
orb
cmp
xor
push
push
out
jp
mov
fprem
aaa
xchg
mov
pop
dec
es
scas
mov
add
push
inc
inc
movsb
in
jg
out
pop
repz
jp
adc
cmp
mov
push
cmp
test
and
jnp
xor
shrb
cmp
push
lahf
je
pop
xor
push
inc
out
ficomps
push
and
daa
clc
cmp
arpl
xor
and
or
mov
stos
cmp
add
and
lds
repnz
mov
xchg
decb
cld
int
or
call
jl
sti
aam
popa
and
popf
push
push
mov
enter
jnp
popa
loopne
mov
jl
adc
fidivrs
inc
and
cmp
mov
fsubs
cmp
stc
mov
mov
arpl
xchg
stos
xchg
xor
sub
mov
and
jno
cmp
adc
cmp
mov
cmp
ja
pop
sbb
pop
jnp
or
push
sbb
sarb
mov
push
hlt
je
dec
icebp
fs
jp
das
push
sbb
mov
push
andb
cld
mov
enter
dec
add
mov
push
ss
adc
rcll
inc
pop
in
pop
xor
pop
mov
out
xor
push
jle
mov
ljmp
ss
popa
sbb
sahf
xchg
outsb
scas
sub
mov
fwait
cmp
cmp
push
fwait
mov
ret
sbbb
ja
pop
inc
loopne
test
ss
adc
ret
mov
out
cmp
or
stos
sub
mov
sbb
movsb
mov
xorb
fcomip
or
roll
lds
out
cli
mov
hlt
in
adc
mov
jbe
cmpxchg
cmpsl
fwait
jecxz
inc
lea
lea
unpcklps
push
ja
adc
mov
mov
orl
adc
cmp
sahf
aaa
out
pop
leave
push
ret
hlt
sbb
and
pop
or
inc
clc
mov
add
loop
sub
adc
je
addr16
scas
repz
hlt
fwait
push
test
test
adc
add
mov
jl
std
adc
push
or
dec
cmc
cwtl
pop
cli
xor
mov
lret
push
shlb
pop
pop
imul
lahf
xor
adc
daa
xlat
sub
ficoml
loop
fdivl
mov
mov
imul
dec
mov
cs
jo
or
shrl
mov
push
pop
cmp
addr16
sbb
popa
sub
push
xchg
iret
adc
xchg
fs
imul
push
inc
push
repnz
movsl
clc
clc
inc
shrb
cmp
dec
xchg
mov
xchg
fistpl
fdiv
jp
push
or
fmuls
adc
outsb
and
or
insl
mov
call
push
fsub
shl
sbbl
jns
fcmovnu
mov
adc
cmp
ds
dec
clc
pop
ljmp
int
ds
push
mov
lea
pop
or
cmp
shrb
sub
push
and
data16
xchg
push
or
mov
loop
dec
xchg
pop
jne
sub
lods
lret
push
xor
bound
jge
push
or
sbb
mov
cmpsb
add
sarb
cmpsl
mov
mov
sub
inc
inc
push
int3
pop
sbb
rorb
and
jb
enter
mov
cmp
push
sbb
out
adc
mov
or
test
mov
cmp
lcall
fadds
or
mov
dec
outsl
fldl
imul
fnstcw
dec
icebp
sub
scas
sub
ss
cmc
es
mov
add
sub
arpl
out
clc
arpl
daa
cmpsb
cmpsl
fwait
xchg
scas
lods
data16
add
je
fbld
mov
cmp
cli
push
sbb
lods
xor
insl
dec
leave
push
imul
or
jbe
xor
fcomi
or
fiadds
bound
iret
fwait
add
push
sahf
shll
sub
and
cmp
mov
push
cmpl
loope
mov
xlat
inc
shlb
lcall
adcb
adc
stos
jecxz
lods
cmp
xchg
pop
fsubr
test
jno
movsb
sub
mov
cmp
inc
mov
pop
mov
dec
push
ss
popf
jb
out
popa
and
jne
lds
jg
mov
fmul
jns
dec
or
out
xor
call
insb
stos
jge
mov
jg
xor
xor
lcall
or
fdivs
jns
popa
cli
mov
jae
test
jae
lds
jl
push
jmp
pop
mov
leave
jne
rcll
jne
push
nop
scas
or
mov
jge
push
add
and
arpl
mov
push
push
pop
mov
adc
mov
stos
adc
cmp
aas
mov
xor
jecxz
sbb
push
sbb
sbb
push
scas
daa
sub
pop
sbb
adc
cmp
shr
inc
add
or
add
or
sbb
fdivrs
pop
push
push
scas
aad
cwtl
lods
or
push
push
shlb
negb
mov
sti
xorl
mov
sub
jno
xor
jb
push
push
sub
push
and
sbb
sub
mov
jg
sbb
mov
test
jl
xor
and
mov
fs
lods
adc
adcl
jl
mov
jns
mov
stos
jg
sbb
dec
data16
subb
cmp
dec
lods
ljmp
das
lcall
jp
popf
ds
push
xchg
xor
and
or
inc
test
loope
push
pushf
push
mov
xchg
pushl
fmull
jae
daa
clc
cmpb
lcall
mov
bound
mov
nop
sti
cmp
icebp
xchg
les
mov
jbe
mov
out
or
mov
repz
sbb
jno
sti
fadds
xchg
or
fiaddl
jge
add
pop
pop
lret
and
xchg
mov
adc
push
jns
xchg
mov
sub
pop
popa
xchg
adc
dec
adc
cmpsb
leave
pop
and
mov
mov
fistl
cmpsl
or
add
out
aam
push
cmp
or
jne
inc
adc
aaa
mov
cltd
or
cs
lods
cld
imul
icebp
or
sbb
es
fsub
xorl
push
or
repz
mov
or
jnp
or
mov
add
loop
xor
or
mov
sbb
cmp
pop
notb
sub
sub
inc
into
add
aas
movsl
mov
lods
les
stos
xor
jle
jp
and
xor
fildl
or
push
and
cmp
adc
push
mov
call
push
xchg
sub
xor
aaa
in
jae
and
push
xchg
loop
cmp
fimuls
enter
sbb
cs
and
add
sbb
dec
mov
push
icebp
mov
pushf
ret
ja
dec
lahf
push
movsb
mov
notb
addr16
and
scas
pusha
ret
push
pop
ja
in
leave
mov
add
push
xchg
rcr
dec
pop
and
int3
push
std
and
leave
lcall
shrb
pop
jle
sbb
rorb
and
lret
or
xor
sbb
push
stc
xor
hlt
fninit
lods
pop
sub
aas
lahf
mov
stos
lea
fistl
repz
cwtl
lods
mov
scas
jle
iret
sub
test
bound
lock
and
ror
bound
pusha
in
lahf
jo
sub
inc
mov
test
xchg
sbb
sbb
sub
mov
pop
popa
lret
xchg
jmp
push
push
lahf
or
imul
inc
lret
mov
adc
dec
dec
cmp
je
rcrb
aam
push
fdivrl
into
push
adc
push
ja
jno
mov
rorb
je
pop
pop
xor
push
lea
idiv
lea
insb
push
aas
pusha
ret
lock
lods
jp
xorl
or
lods
mov
mov
rorl
test
xor
xlat
enter
outsb
xchg
mov
mov
je,pt
loop
je
jnp
mov
mov
movsb
fistpll
xchg
xchg
loopne
inc
xor
outsb
test
shl
jno
and
mov
push
pusha
cli
ficoms
push
repz
insl
adc
insb
push
nop
xchg
int
popa
aam
lock
push
loop
mov
fisttps
ds
cs
loopne
iret
jnp
cmp
xchg
xchg
jnp
shrb
stos
pop
adc
adcb
cmp
cmpsl
aaa
nop
outsb
mov
adc
outsb
sbb
add
into
divl
ss
out
jne
call
adc
mov
adc
mov
dec
stos
push
jnp
mov
out
movsl
repz
sbb
insl
lret
xchg
inc
jl
rcrl
daa
mov
mov
dec
iret
lret
cmp
out
adc
ss
cli
in
dec
inc
xchg
bound
sub
xor
data16
xchg
pop
enter
les
push
rolb
lret
jbe
push
xchg
dec
xchg
les
js
dec
in
xchg
lods
pop
pop
add
or
aaa
subb
ret
les
fstl
push
lods
nop
int
jbe
dec
rcll
xchg
jge
xor
in
inc
push
arpl
or
or
and
add
add
mov
ret
jnp
sub
repz
ds
shll
dec
and
pop
jae
xor
xor
jl
and
jle
cmpsl
scas
push
push
push
sub
lahf
test
inc
push
popa
cli
shll
inc
cld
popf
fcomip
testl
out
push
ds
subb
mov
add
pop
in
pop
inc
pop
gs
cmp
add
add
or
adc
loope
xchg
pop
mov
xchg
repnz
pop
lods
rorl
pop
cli
jo
cmp
stc
add
lea
repnz
ficoms
xchg
ja
mov
mov
mov
cmp
xchg
mov
movsb
subb
gs
clc
sub
push
inc
push
test
popf
sbb
adc
xor
imul
add
jp
andl
jecxz
in
scas
arpl
or
popa
test
les
sar
xor
mov
pop
sub
and
push
aaa
test
test
pop
stc
mov
out
mov
stc
dec
roll
mov
lock
addb
es
lcall
push
jno
enter
lret
ljmp
jnp
cmpl
insl
loop
xorl
inc
movsb
jae
adc
mov
pop
ja
or
fwait
daa
js
sarb
scas
jb
stos
sub
dec
push
shlb
sbb
shrl
jmp
pop
mov
add
enter
or
ja
dec
sbb
cmp
jp
lock
shrb
popf
iret
jne
adcl
stos
roll
imul
dec
mov
int
sti
js
sub
xchg
cltd
jge
movsl
andb
xchg
dec
dec
mov
xchg
and
push
testl
xchg
mov
mov
mov
sbb
lods
nopl
pop
das
ret
xchg
dec
xchg
and
mov
xchg
es
pop
and
loop
add
dec
sbb
inc
ret
mov
nop
mov
and
jle
mov
sub
stos
lods
lods
dec
lock
cmp
es
testb
and
push
add
addr16
or
cmp
mov
aas
scas
push
sub
push
arpl
sbb
sub
imul
lods
loope
mov
xchg
add
sahf
test
ret
std
or
mov
or
jne
cli
adc
or
xchg
nop
or
rolb
cmp
mov
or
popf
inc
and
push
ss
jmp
lret
xor
jo
stos
testb
mov
bound
xor
pop
fcom
xlat
mov
mov
sarb
xchg
lahf
dec
push
notl
out
xchg
out
rcrl
inc
cltd
bound
es
push
xchg
lea
and
fisubl
icebp
je
es
addr16
xlat
push
mov
ss
push
test
add
inc
mov
cwtl
sub
call
dec
daa
add
dec
mov
test
fwait
test
cli
dec
or
add
std
or
outsb
mov
aas
mov
leave
shlb
leave
shr
pop
je
fmul
jnp
push
xchg
lret
stos
test
out
inc
lcall
stos
push
mov
das
and
push
inc
outsl
lea
add
js
lahf
fld
push
das
pop
clc
add
inc
dec
arpl
sub
pop
jp
test
mov
or
add
adc
movsb
sbb
repz
inc
cmc
cli
or
arpl
shrb
sbb
push
xor
adc
std
fisttpll
and
ljmp
mov
push
dec
test
push
nop
inc
mov
movsb
clc
cmp
stc
inc
popf
add
xchg
xchg
dec
dec
mov
adc
adc
aad
xor
fimull
push
sbb
pop
mov
gs
mov
nop
movsb
in
fbstp
fbstp
or
inc
fs
jecxz
push
pushf
int3
in
or
ds
dec
inc
into
pop
jecxz
xorl
in
stos
xchg
sti
je
in
lods
lock
lock
jno
mov
pop
std
adc
pusha
sbb
add
lahf
clc
fistps
testl
and
adc
lods
aaa
pop
or
cmp
stos
adc
dec
enter
sub
xchg
arpl
scas
mov
outsb
or
cmp
mov
fsub
loop
ror
daa
push
cmp
lods
or
lret
or
bound
ss
movsl
lods
pop
addr16
fistpll
push
cwtl
mov
sub
pop
int3
in
rcl
dec
or
adc
xchg
sti
sbb
push
sbb
push
jle
sti
in
cmp
pushf
cmpsb
mov
insb
ds
aam
mov
test
lods
rorl
xchg
push
and
push
sub
adc
sbb
orb
push
inc
push
push
push
push
adc
sbb
inc
enter
xlat
inc
shll
lret
cmp
xchg
je
imul
pop
pusha
or
inc
push
mov
imul
pushl
and
and
popf
or
sbb
xchg
cmp
aad
dec
sbb
add
push
mov
push
cli
notl
jno
push
and
jl
sub
cltd
mov
fnstenv
mov
mov
mov
dec
arpl
mov
pop
in
sbb
roll
ss
push
or
repz
pop
in
dec
xchg
xchg
cmp
mov
mov
cmp
ljmp
push
clc
fcmovu
or
xor
xor
rorb
inc
push
std
push
jnp
pop
loope
cmpb
lahf
data16
push
jo
fldt
mov
inc
pusha
pop
mov
push
sub
add
aad
shrl
push
js
jo
add
xchg
jns
adc
fwait
fidivl
cmpsb
stc
pop
mov
cmp
dec
xor
in
pop
jns
aam
jb
pop
xor
ljmp
insl
idiv
repnz
mov
inc
lock
ret
stos
ud2
pop
popa
leave
es
xor
xchg
fnstenv
repnz
push
mov
jae
jo
sub
push
testb
inc
pop
fldt
xor
push
les
daa
test
cmpsb
ja
lret
mov
jge
sub
pop
xor
inc
push
inc
push
jge
mov
aam
dec
repnz
jae
and
int3
push
push
xchg
daa
add
cmp
cld
aam
xor
movsb
adc
xchg
std
jno
jno
repnz
outsl
xchg
xchg
mov
or
mov
xlat
jno
mov
pop
std
ljmp
sbb
mov
jno
add
sbb
pop
cmp
aad
or
sub
mov
test
sti
scas
sarb
je
ret
loope
loope
inc
inc
fdiv
call
push
dec
scas
inc
das
mov
mov
and
adc
mov
push
aad
ds
wrmsr
ret
aaa
or
push
mov
imul
cs
lock
cwtl
and
ljmp
dec
cmp
jp
dec
lcall
sbb
bound
push
jbe
xor
add
mov
mov
jno
fisttps
pop
out
ficoms
bound
sub
xor
push
sub
fmulp
cltd
aad
inc
faddl
or
comiss
mov
xchg
dec
mov
in
fdivr
shrb
cld
inc
add
inc
int3
jnp
popa
notb
jo
or
addr16
ret
fwait
jno
lods
jnp
mov
add
adc
iret
jp
add
call
pop
xchg
mov
popa
lods
nop
icebp
xor
adc
mov
ror
jl
or
mov
adc
dec
shrl
out
or
and
test
insl
xchg
rolb
shrb
scas
ficoml
shll
leave
dec
rclb
into
scas
jecxz
xchg
jo
rorb
jge
mov
ja
pop
out
mov
aas
inc
shll
mov
fildll
incb
call
mov
mov
loope
push
dec
mov
mov
shlb
ds
jge
es
push
inc
and
push
pop
dec
clc
out
shrl
mov
cmpsb
sahf
loopne
cltd
jnp
mov
cmc
sub
notb
mov
or
sbb
dec
pop
sub
mov
insb
inc
mov
jle
addr16
jb
xor
rol
add
mov
aad
and
mov
jbe
or
sbb
jns
or
xor
pusha
mov
data16
int
fwait
mov
loop
fildl
adc
dec
aaa
cmp
pop
js
and
and
fs
or
fistpl
xchg
lret
repnz
jbe
xchg
hlt
negb
ds
xlat
push
xchg
pusha
push
rorl
mov
pop
in
lds
mov
cmc
out
and
insb
xchg
dec
outsb
ja
loopne
mov
push
mov
lahf
out
jmp
cmp
adc
ds
xor
jle
cmp
es
dec
mov
lcall
fimull
in
out
js
jg
lahf
xlat
mov
adc
dec
clc
inc
dec
shlb
imul
add
cwtl
fnstenv
aaa
jnp
pop
mov
mov
inc
mov
mov
loope
xchg
push
in
xchg
sahf
arpl
ret
xor
movsb
inc
test
cwtl
fdivr
iret
dec
adc
js
cmp
jno
arpl
popf
pop
lret
inc
push
mov
clc
cmc
out
mov
fistl
mov
inc
dec
je
add
dec
fildl
call
mov
mov
fwait
jb
mov
pop
call
inc
cld
in
xor
nop
test
in
ljmp
les
add
sbb
cli
dec
xchg
lods
push
test
push
push
push
leave
jle
xchg
mov
repz
cmp
mov
les
xor
std
mov
inc
fs
js
jmp
lret
daa
inc
cmpsb
or
sub
insb
popa
sahf
mov
pop
call
in
mov
pop
mov
xchg
and
sahf
cmp
mov
test
hlt
or
into
lret
das
pusha
mov
data16
loope
out
sub
sub
mov
xlat
xor
and
or
jle
fsubs
inc
add
dec
popa
ficomps
stc
mov
lods
mov
xorl
mov
push
add
sbb
notb
repnz
and
ja
mov
icebp
pop
lret
sbb
ja
push
pusha
lea
sub
popa
jno
das
sub
mov
lea
repz
inc
xor
in
sbb
dec
jmp
dec
std
sub
rcr
xor
lahf
dec
movsb
loope
mov
lods
dec
adc
dec
mov
outsl
adc
cmp
cmp
push
clc
mov
bound
or
add
add
sbb
ret
cltd
jb
ret
xchg
sbb
and
cmpsb
lcall
aaa
pusha
jo
popf
ret
aam
dec
lcall
jle
popa
aad
mov
cs
push
pop
sub
mov
aaa
push
add
loope
fistl
cli
ja
add
sub
fbstp
jne
and
rolb
xor
pop
fimuls
pop
jl
jnp
leave
mov
cmp
pop
jmp
pop
add
adc
dec
mov
xchg
test
xor
inc
adc
ret
jl
pop
fildl
adc
bound
cmp
mov
sub
lahf
push
insb
imull
movsb
xchg
outsl
adc
pop
or
clc
pop
mov
movsb
int
and
xor
cmp
xchg
sbb
data16
pusha
sbb
loopne
mov
dec
popa
mov
cmp
rorb
jecxz,pn
push
ljmp
adc
xor
or
lret
les
jg
mov
xlat
cmp
pop
inc
adc
xor
rcr
mov
ret
stos
in
lods
jae
cs
enter
cmp
mov
jg
sbb
cli
inc
insb
mov
rcrb
testb
in
xchg
mov
out
inc
inc
rcrb
andl
sub
jns
pushf
lret
and
movsl
mov
xchg
xor
add
mov
int3
lds
adc
iret
inc
jno
pop
cmp
inc
mov
push
or
aam
mov
filds
mov
fisttpll
jae
and
loope
sub
stos
out
xor
xchg
or
into
int3
movsl
xchg
adc
ja
stc
push
inc
test
sbb
leave
push
aad
sbb
jmp
cmp
mov
outsb
xor
decl
int
mov
imul
lods
je
pop
push
push
jne
mov
out
adc
iret
adcb
push
pop
jne
cltd
xor
jge
sbb
push
sbb
xlat
adc
int
mov
sbb
outsl
je
dec
and
inc
adc
jno
add
loop
push
test
ja
mov
inc
push
sub
push
xchg
fidivrl
and
pop
rolb
xlat
adc
mov
lahf
pop
and
xchg
addr16
jle
les
lret
pushf
imul
jge
fldt
sti
adc
and
aad
inc
inc
test
lea
pop
mov
pop
jb
in
sub
add
jmp
mov
sar
push
out
lods
mov
push
or
adc
test
lods
mov
insl
scas
mov
or
negl
cmc
pusha
and
loopne
lahf
or
mov
faddp
lods
enter
sbb
pop
loopne
add
mov
popf
jno
xor
jg
ljmp
pop
jp
test
adc
aas
scas
movsb
ret
pop
in
idiv
loope
loopne
cmp
call
push
cwtl
cmp
lods
push
pop
mov
add
jb
out
adc
and
cmp
loop
dec
stc
cmpsl
dec
adc
inc
or
jnp
mov
or
test
je
pop
xor
mov
lock
pop
in
push
and
cwtl
cwtl
cli
sbb
test
xchg
and
push
imul
or
adc
std
scas
cs
lods
repz
test
mov
fdivrs
cs
test
pushl
push
cmpsl
out
mov
mov
and
sub
aas
imul
mov
pop
lret
sbb
rorl
mov
cld
fwait
cmp
xor
adcl
xchg
xchg
inc
std
pop
js
cmp
mov
pop
test
push
leave
dec
movsb
sub
je
add
dec
mov
pop
insl
or
pop
inc
sub
mov
mov
scas
sbb
fbstp
in
sbb
aad
inc
sbb
pop
je
idivb
inc
mov
int
sbb
push
add
add
movsb
jbe
mov
popa
dec
hlt
mov
sub
icebp
pop
sub
adc
adc
cmpsl
addr16
xchg
rcll
push
inc
jbe
mov
pusha
jmp
bound
cmp
in
pop
cmp
jmp
xchg
mov
mov
pop
xchg
pop
ret
out
insb
bnd
stc
sub
rolb
rcrb
pop
cli
cmc
mov
imul
cltd
es
lods
icebp
add
inc
xlat
out
dec
cs
aas
mov
lcall
inc
adc
andb
stc
cltd
mov
in
in
imul
sti
sbb
cmp
fdivl
cld
adc
xchg
and
lea
push
in
idivl
mov
test
repnz
outsb
mov
push
and
aas
sub
cmc
in
outsl
fiaddl
mov
in
inc
and
loop
mov
stos
adc
shlb
rorb
sarb
rcrb
dec
or
push
jne
mov
xor
mov
in
adc
or
add
pushf
jl
mov
xchg
lret
cli
push
mov
loop
jo
dec
int
dec
and
pop
shlb
or
call
mov
movsb
adc
sahf
cwtl
pop
inc
movsl
xor
adc
sbb
cmpsl
mov
aad
cmp
cli
je
aas
mov
sbb
fcomp
out
rorl
adc
mov
xchg
dec
mov
mov
mov
fstl
out
push
fcmovbe
ds
call
mov
divl
popf
sbbl
dec
and
mov
push
push
scas
pop
fxch
push
sahf
ds
sub
xor
fistl
lds
pop
mov
push
test
xor
adc
fstl
push
add
movsl
dec
insb
sbb
clc
arpl
push
into
lea
jecxz
bound
add
js
and
add
stos
nop
dec
loopne
aam
cmc
sahf
dec
mov
mov
push
insl
call
push
rclb
mov
mulb
or
fincstp
fwait
inc
jnp
push
sub
sub
add
je
mov
addr16
fwait
out
sbb
addl
rdpmc
sti
pusha
jl
mov
test
cltd
jns
xor
push
dec
movsl
lds
loop
cld
daa
in
in
jecxz
pop
imul
push
pushf
pop
push
dec
mov
dec
add
filds
add
jae
pop
ret
pop
jmp
push
push
test
dec
xor
test
shlb
mov
inc
jecxz
imul
and
or
cld
hlt
cmc
inc
add
adc
xor
loopne
jno
icebp
inc
and
add
jecxz
out
in
dec
arpl
das
jbe
aaa
les
jg
pop
adc
lds
xchg
mov
xchg
sbbl
faddp
fmuls
inc
lock
test
rolb
aam
xchg
scas
pop
cmpsl
mov
hlt
scas
add
fs
arpl
xchg
arpl
inc
lea
jb
rclb
hlt
fsubs
stos
cmpsl
arpl
lret
push
arpl
stc
es
imul
jmp
test
jge
or
sbb
lret
mov
imul
cmpsb
pushf
rcrl
add
or
push
shl
dec
test
lock
jmp
cmp
shl
js
xor
adc
cmp
pop
fimull
adc
cmpsl
jg
inc
xchg
shrl
fs
pop
sub
cmp
cmpb
jno
push
and
mov
stc
push
aas
mov
in
sarl
or
dec
popf
bound
cmp
fmul
loop
sbbb
cld
out
lea
scas
movsb
testl
and
in
je
lock
add
push
cmp
xor
aad
arpl
lea
jb
mul
jg
iret
jp
clc
or
in
inc
xor
xchg
inc
fwait
mov
inc
movsl
int3
icebp
sar
and
mov
mov
inc
into
xor
dec
mov
xor
inc
jns
cmp
push
ljmp
fmul
add
xchg
test
aas
imul
fnstsw
mov
rcrl
jg
cmc
std
and
adc
jmp
fcmovnbe
stc
mov
jg
jmp
cld
sbb
mov
call
jle
xchg
inc
out
repz
imul
je
dec
adc
loopne
js
ret
or
out
xor
stc
insl
andl
cmp
mov
movsb
and
lods
hlt
mov
dec
fdivrp
jmp
push
int3
cmc
call
not
cmp
add
inc
arpl
imul
stc
add
stos
or
push
mov
in
mov
es
and
push
xor
jmp
nop
nop
push
rolb
js
cltd
je
cmp
jg
add
pop
cmpsb
ror
adc
mov
or
call
pop
inc
add
popl
or
xchg
loopne
lret
jl
add
dec
pop
xchg
loope
jae
jo
mov
scas
xor
es
adc
xchg
or
repz
daa
inc
pop
or
loop
lock
push
shlb
pop
jb
fsts
mov
mov
rclb
sar
lahf
imul
dec
dec
rol
jmp
push
pop
andb
cmc
repnz
ljmp
fs
mov
xchg
imulb
fistpl
aas
ja
push
push
inc
dec
push
push
ljmp
or
std
hlt
incb
or
imulb
add
sbb
jp
lods
fwait
dec
mov
sbb
test
sub
sub
push
pop
or
fadds
fsubs
jb
fimull
sahf
mov
adcl
push
sbb
je
adc
ss
or
inc
push
or
orl
outsb
dec
repz
insl
sub
std
xchg
xor
scas
rcrb
dec
push
dec
inc
dec
dec
cmc
add
xor
int3
jl
xchg
push
cmp
pop
int
stc
xchg
push
ss
int
stc
xchg
push
ss
cmp
jmp
cld
push
push
sarl
fisttpl
pop
cmp
sbb
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
std
loope
mov
dec
add
loop
fs
test
sbb
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
int
stc
xchg
push
ss
loop
pop
cmp
clc
.byte
