xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
push
xor
pop
ret
push
addl
pop
ret
add
popl
push
push
pop
mov
pop
push
xchg
push
pop
xchg
xor
xchg
xchg
xor
xchg
xchg
popl
push
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
pop
push
xchg
ret
push
xchg
add
ret
push
popl
ret
xchg
xchg
xchg
push
pop
mul
push
pop
push
pop
add
ret
push
pop
ret
mov
ret
xchg
addl
xchg
ret
push
xchg
add
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
call
push
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
call
push
push
push
call
push
push
call
push
call
pushl
xchg
add
push
push
push
push
call
push
call
push
call
push
push
push
push
call
push
push
push
call
push
cmp
jae
ret
pop
call
incl
mov
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
mov
cwtl
mov
pop
add
outsb
sbb
subl
jno
js
jnp
pop
mov
sbb
pop
lahf
or
sahf
aaa
mov
mov
in
pushf
cli
ja
test
cmp
jmp
mov
dec
mov
loop
xchg
mov
call
adc
push
cmpsl
push
nop
ret
xor
out
scas
push
pop
iret
out
inc
mov
jmp
adc
cmc
subb
jp
or
in
add
pop
jo
jp
lea
lods
push
sub
xchg
aad
sub
sub
add
stc
cmp
and
jge
rclb
xchg
call
imul
adc
adc
rorb
dec
and
test
std
push
push
hlt
sub
cmp
jecxz
fwait
daa
fmul
lds
cmpsl
inc
shrl
mov
and
adc
sar
push
jae
movsb
and
add
ret
push
in
je
fisttps
stos
inc
push
push
outsb
fistpl
outsl
push
jbe
icebp
scas
stos
stos
mov
stc
sti
cmp
clc
lcall
pushf
faddl
or
push
mov
imul
xchg
je
fadd
jbe
xchg
mov
push
jb
xchg
jg
cmp
mov
push
scas
mov
mov
jae
rorl
xor
mov
test
push
loop
icebp
inc
loopne
cmpsl
in
pushl
dec
movsl
jno
fstpt
mov
fisubs
rcrb
popa
icebp
and
jnp
stc
cmp
xor
daa
fbstp
popf
dec
dec
fmulp
and
lret
cs
xchg
inc
mov
add
mov
push
lahf
gs
or
stos
xor
aas
addb
jle
dec
insl
ss
and
sbb
adc
mov
mov
repnz
fidivrl
adcb
imul
lret
adc
pop
or
and
xchg
mov
inc
mov
mov
outsl
lods
mov
add
jbe
or
es
out
imul
mov
jo
pop
xchg
shl
das
aas
mov
pop
xlat
mov
lods
jecxz
andl
sub
jg
bound
push
pop
jne
cmp
mov
inc
inc
sbb
sti
dec
das
xchg
aas
mov
mov
ljmp
jb
in
sub
out
stos
leave
sub
jnp
push
adc
xlat
int3
in
pusha
mov
mov
jl
mov
jo
pop
push
mov
and
outsl
lea
mov
sub
inc
enter
mov
mov
add
xchg
lret
jno
xorl
fstpt
int
xchg
rsm
loope
daa
lods
shll
cmpsb
sarl
sbb
ljmp
stos
or
xchg
lods
push
mov
sbb
shrl
lahf
int3
mov
call
gs
xor
push
add
lcall
imul
or
or
subb
loope
loop
clc
mov
mov
inc
repz
fisttpll
sti
push
and
sub
pop
add
cmp
ljmp
push
jne
jl
mov
adc
push
cmp
jo
mov
aas
les
xlat
loopne
or
push
xor
nop
stos
popf
aam
addl
mov
xchg
sbb
das
mov
lods
lock
call
test
xor
insl
ds
clc
xchg
pop
cmp
cmc
push
mov
cmp
repz
adc
fwait
orl
inc
sub
and
cmpsb
adc
jnp
fs
pop
call
push
rcll
add
and
pushf
mov
rcll
pop
fs
mov
mov
adc
fsub
push
xor
or
mov
das
jl
cmpsb
push
insb
call
inc
push
and
fisubrl
inc
cwtl
stos
ds
jno
testb
cmp
shrb
insl
inc
popa
ret
orb
lds
outsl
clc
sbb
or
out
xor
add
sub
lcall
mov
lahf
and
lcall
movl
jo
fwait
dec
jns
lcall
repnz
sbb
out
js
pop
cmp
enter
cmpsl
sahf
mov
lea
outsl
imul
pop
in
rcll
lea
sbb
jmp
sahf
mov
popf
popa
pop
subb
out
xchg
mov
movsl
pop
pop
stos
mov
push
mov
dec
je
dec
sbb
call
aam
test
and
pop
call
jnp
push
and
gs
mov
cli
imul
mov
push
inc
outsl
pop
lret
jl
push
and
adc
es
repnz
pop
push
dec
xchg
ret
dec
and
push
mov
in
sub
inc
jnp
jne
push
mov
inc
out
hlt
cmpsb
incb
scas
in
cli
mov
inc
ja
les
cli
add
mov
mov
pop
add
jns
mov
jl
adc
adc
mov
iret
jnp
faddl
stos
stos
in
push
les
dec
xor
jg
out
andl
dec
mov
mov
aaa
xchg
push
cmpsl
lcall
xchg
add
enter
sub
adc
xor
jmp
pushl
aam
aaa
mov
imul
jl
jnp
pop
adc
sub
mov
push
aas
fisubrs
sub
inc
sub
leave
jmp
jns
mov
xor
bound
sbb
jbe
push
adcl
dec
into
in
ss
jl
rorl
and
and
in
and
dec
sub
pusha
mov
dec
movsl
and
pop
mov
add
push
enter
jl
shlb
push
mov
int3
push
mov
repz
mov
sarb
insb
mov
push
fldcw
mov
or
mov
ja
sbbb
hlt
dec
add
dec
decb
jl
add
mov
mov
push
cmp
jno
shl
testl
cmp
mov
idiv
aas
lret
lds
clc
dec
xchg
dec
add
dec
dec
mov
cltd
sbb
dec
pop
pop
sub
sub
in
pop
leave
and
and
or
jp
and
popa
je
stos
sbb
daa
loope
ret
clc
in
aad
inc
push
mov
rcl
test
sub
lds
push
mov
lahf
lahf
pop
sub
lcall
lret
push
sarb
pop
iret
lret
mull
inc
xchg
add
sbb
in
je
cmpsb
pop
xchg
imul
cwtl
dec
push
and
call
xor
in
jp
push
out
movsl
xor
push
mov
shr
inc
adc
pop
and
add
mov
xlat
lods
sbb
cmc
lcall
pop
enter
inc
mov
inc
pop
and
rol
out
xchg
cmpsb
hlt
mov
pop
pop
mov
aad
xchg
jae
clc
push
cmpb
jmp
dec
enter
push
imul
ja
div
roll
pop
sahf
and
popa
notl
push
mov
or
xor
fmulp
sbbb
shll
mov
ljmp
mov
xor
jle
fstpt
sub
into
lds
xchg
sub
fs
mov
push
dec
push
hlt
repz
xor
loopne
out
test
adc
mov
test
dec
loope
or
dec
pop
lods
adc
and
arpl
leave
pop
pusha
test
insl
ret
pop
mov
jecxz
jecxz
movsb
insb
daa
imul
test
mov
pop
loop
cmc
sbb
sub
fildll
inc
lea
out
mov
adc
sub
lods
sub
aaa
adc
xchg
leave
mov
lds
jbe
scas
int
mov
in
js
lds
les
dec
fmuls
ss
xchg
push
lret
cmpsb
fistpll
sub
idivb
jne
sbb
lret
xor
lret
fucomip
dec
into
mov
push
mov
mov
sbb
cmpsb
ficoml
adc
insb
sub
insl
aam
rorl
imul
idiv
xor
and
fcmovbe
xlat
or
repz
jle
xchg
inc
js
arpl
inc
cmp
loope
outsb
dec
add
lea
mov
lock
adc
or
lods
lret
shrl
scas
mov
push
fdiv
out
out
mov
mov
ss
jb
sbb
mov
sahf
xor
or
adc
pusha
or
sahf
ja
repnz
rorl
jl
scas
ss
and
jecxz
pop
sti
xchg
stc
xchg
add
sar
xor
ret
sbb
cmp
les
xor
cs
clc
inc
and
or
pop
shll
cmp
movsl
cmp
popa
loope
movsl
popf
fs
adc
cmp
ficomps
push
and
push
lds
inc
iret
jecxz
push
sub
and
or
in
fcompl
pop
mov
cmp
test
aaa
inc
loop
sarl
cli
xor
mov
mov
mov
mov
xor
sti
and
pop
aad
test
mov
ficoms
mov
shl
push
insb
fstps
mov
sar
int
bound
imul
xor
sub
lahf
ficoms
out
pop
push
xchg
push
mov
outsb
cli
dec
push
mov
fsubp
test
mov
jp
mov
xchg
leave
ror
pop
mov
push
mov
imul
mov
test
mov
dec
xchg
pop
mov
pmulhw
xchg
pop
fwait
xchg
popf
repz
out
hlt
xlat
out
inc
fcomi
movsl
dec
adc
push
ret
stos
icebp
inc
repnz
insb
stc
cmc
int3
repnz
sbb
xchg
inc
cmp
push
pushw
push
int
lds
repnz
push
xchg
fstpt
mov
or
out
loopne
fs
push
ret
das
sbb
add
push
adc
mov
rolb
cmpsb
jo
jmp
fisttps
sbb
mov
xor
aam
jbe
dec
mov
mov
cwtl
jg
icebp
mov
test
jecxz
mov
loope
push
cmpsl
mov
outsl
mov
mov
std
and
int3
jo
bound
mov
sahf
movl
mov
test
test
mov
xor
test
xchg
lret
cmp
pop
ret
mov
sbb
pusha
call
popf
adcl
fs
cld
pop
lea
jle
clc
jge
fucomip
sbb
fstpl
popa
cld
pushf
adc
lock
scas
cmp
push
gs
rclb
jle
add
jno
and
add
jecxz
cld
jb
mov
out
push
roll
stos
loopne
xchg
or
and
dec
xchg
add
mov
or
mov
pop
push
push
inc
inc
stc
mov
ljmp
popf
jle
imul
aas
rolb
shl
pop
or
adc
movsl
sbb
daa
mov
mov
inc
cmpsb
mov
lds
mov
adc
xor
imul
dec
popa
mov
xchg
mov
adc
or
mov
or
inc
clc
xchg
inc
fsin
sub
xchg
mov
mov
shll
push
ljmp
mov
inc
scas
fcomi
sub
clc
inc
cmp
call
cltd
mov
inc
mov
jle
daa
jge
in
dec
add
xchg
mov
leave
mov
push
js
adc
in
or
or
out
ss
sbb
sahf
mov
push
mov
adc
cmp
popa
loop
hlt
rorl
repnz
mov
test
addb
jb
loope
stos
sahf
adc
bound
pop
and
mov
leave
dec
push
sarl
push
fistl
cmp
sub
int3
mov
xchg
sub
aas
mov
test
ret
scas
orb
ret
xchg
mov
mov
std
fimull
sub
xlat
cmpsb
ret
mov
enter
repz
mov
insl
mov
mov
repz
mov
or
and
in
jno
and
imull
sub
mov
cmp
lods
cmc
add
jge
sbbl
aad
push
ja
jmp
movsl
cmpsb
and
inc
mov
mov
xor
cmp
xchg
and
pop
test
leave
add
mov
mov
fisubrs
dec
pop
xor
gs
lret
mov
dec
push
inc
mov
mov
jae,pt
mov
bound
fsubrs
fs
cmp
incb
sbb
subl
inc
mov
add
and
push
inc
imul
aam
pop
scas
sbb
mov
mov
mov
insb
out
dec
adc
insl
notb
sub
aaa
subl
xor
loopne
test
jae
xor
mov
inc
daa
mov
les
mov
imul
sbb
jecxz
sub
fistpll
pop
push
test
leave
lock
sahf
int
mov
es
ror
shr
fldcw
mov
mov
fimull
inc
fwait
test
insb
orb
lcall
sbb
scas
xchg
cmpl
add
push
jae
hlt
jmp
adc
push
aas
add
jno
jg
and
lret
xor
add
add
mov
or
sbb
mov
nop
xchg
sbb
aaa
add
test
int3
cltd
push
mov
mov
rcll
jg
aas
dec
sahf
adc
xor
push
jb
xchg
repnz
mov
cmpsb
xchg
repz
inc
cld
cs
int3
aaa
and
mov
push
faddl
cmp
dec
mov
mov
xor
inc
adc
adc
xor
push
add
xchg
fdivrp
and
mov
pop
xchg
lcall
nop
mov
aas
in
mov
add
xchg
inc
mov
es
jb
lret
test
sahf
shlb
mov
lods
cmp
pop
fdivrl
gs
sti
jecxz
sti
inc
call
nop
push
dec
inc
icebp
call
push
mov
cmc
aaa
in
movsl
push
aam
stos
sbbl
pop
xchg
inc
pop
vmovdqu
cmp
jbe
mov
dec
jne
in
push
outsl
leave
adc
sarl
mov
movsb
insb
adc
cmp
xchg
aas
push
mov
pushf
push
fwait
cltd
sbb
inc
xchg
repnz
push
xor
and
aad
scas
lods
mov
clc
adc
push
xchg
cmpl
mov
mov
jg
cmp
ss
icebp
jp
in
sbb
mov
aaa
add
movsb
xor
push
or
mov
cmp
inc
pop
push
scas
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
mov
xchg
push
jae
repnz
mov
mov
pop
flds
adc
fildll
cwtl
xchg
insb
and
clc
adc
mov
orl
sub
xchg
or
data16
cmc
mov
pop
arpl
fs
adc
insl
sbb
xlat
pop
repnz
cs
lock
xchg
shrb
in
std
push
mov
cmp
movsl
fsubr
jl
cmp
ljmp
mov
jbe
cmp
pop
sub
lea
fs
gs
push
and
repz
xchg
ljmp
xchg
inc
sbb
call
popf
xchg
mov
sbb
jne
mov
lock
jbe
dec
lcall
ret
pop
xchg
sbbb
imul
andb
test
in
jns
test
ja
push
fs
push
std
xor
inc
push
int3
push
push
xor
mov
add
pop
dec
cmc
fcmovnu
je
sub
pop
pop
mov
pop
rcr
mov
push
mov
pop
jl
stc
jnp
inc
jl
cmp
mov
pop
xchg
imul
lret
out
sub
inc
pop
xor
out
cmp
adc
sbb
rolb
scas
mov
flds
mov
rcrl
xlat
xor
lea
scas
xchg
push
adc
inc
imul
push
pop
shll
inc
aaa
es
cmp
mov
adc
mov
repz
cmc
addr16
outsl
test
fwait
push
into
mov
lds
pop
adc
mov
jl
mov
mov
insl
sub
int
sti
outsb
in
lds
cmp
push
test
test
mov
iret
fidivrl
popf
adc
out
fisubrs
push
cmp
test
gs
mov
jno
aam
inc
lahf
pop
daa
lcall
sub
stos
les
mov
movsl
fidivl
xchg
inc
imul
punpckldq
mov
inc
dec
jge
or
pushf
xchg
inc
lock
mov
mov
mov
scas
pop
test
add
mov
scas
test
pushf
mov
sbb
dec
sahf
jge
dec
out
inc
adcl
or
cld
xchg
ja
out
ds
sahf
in
insl
inc
jbe
sahf
mov
rclb
in
hlt
sub
and
andnps
in
outsl
mov
cwtl
or
cmp
mov
mov
ja
mov
add
insl
push
adc
sbb
nop
pop
cli
lods
mov
jp
arpl
xchg
inc
ret
lcall
jo
lret
xlat
insb
mov
js
jns
push
sub
and
jnp
pop
call
mov
add
xor
or
push
aam
lret
cwtl
mov
out
or
cmp
push
xor
leave
outsb
mov
cmp
xchg
xchg
out
pop
int
pop
mov
jge
outsb
cmp
test
fstpt
sti
stos
nop
xor
fdivs
mov
mov
push
xor
xor
push
xchg
push
sub
xlat
pushf
shrl
inc
je
xor
clc
sbb
add
sub
cltd
shl
mov
mov
int
dec
mov
xor
jns
or
jmp
std
outsl
push
stc
xchg
or
xor
nop
jmp
icebp
imul
cmp
fistps
xlat
in
cwtl
mov
sub
push
pop
xchg
xor
scas
xchg
ljmp
adc
adc
xchg
pop
into
mov
test
in
inc
repnz
push
jo
dec
add
rorb
cmp
dec
fxam
mov
outsb
jne
into
mov
sbb
pop
xchg
sti
das
sbb
arpl
push
gs
sbb
fwait
mov
je
imul
enter
cli
jmp
outsb
adc
lods
cli
mov
mov
xor
repz
dec
cs
inc
push
les
sub
negl
or
mov
add
inc
mov
pop
inc
mov
inc
jae
sub
stc
xchg
adc
fimull
cmpsb
nop
jp
jb
jae
scas
adc
mov
outsb
fimuls
inc
mov
frndint
addr16
mov
stc
mov
inc
xor
fwait
xchg
xchg
xchg
ss
push
loopne
test
mov
or
int3
push
stos
and
test
push
cmp
cli
cwtl
mov
stos
mov
es
adc
mov
jo
fldcw
push
adc
cmpsb
cmpsb
jae
jmp
ret
jno
test
sahf
out
roll
mov
adc
pop
jne
push
jl
hlt
xor
ds
sahf
in
pop
mov
jp
pusha
mov
gs
insb
cmp
push
loop
jle
clc
mov
scas
push
lea
push
and
lock
or
mov
movb
mov
pop
ljmp
subb
in
pop
or
icebp
sahf
aam
ja
bound
mov
outsl
mov
xor
xchg
push
fdivl
xor
mov
push
hlt
cmpl
arpl
andb
adc
sbb
std
repnz
lahf
cmp
lods
mov
push
dec
movsl
dec
sub
or
ds
popa
push
imul
add
mov
xchg
pusha
jmp
sbb
into
call
ret
loopne
test
mov
mov
sbb
mov
xchg
sub
fbstp
mov
xor
and
cs
mov
xchg
shll
adc
jns
jb
jp
mov
sbb
fucomp
mulb
push
mov
jns
lea
sbb
and
add
loope
mov
cmp
dec
adc
in
sub
cltd
cmp
mov
pop
adc
xchg
fmuls
out
ret
nop
out
xchg
nop
jle
popl
loopne
xchg
mov
inc
push
jl
mov
cmp
mov
rol
push
scas
push
push
and
inc
daa
lea
xchg
push
popf
inc
shlb
ljmp
and
cmp
nop
or
adc
movsb
jg
inc
xor
or
mov
mov
jl
adc
mov
push
jge
rcrl
inc
xchg
push
fldcw
xorl
jbe
in
mov
push
loope
movsb
cmp
dec
je
mov
dec
out
stos
sub
test
popa
and
mov
popl
cmpsl
mov
cmpsb
push
out
xor
mov
jo
jecxz
pop
xchg
mov
pusha
cwtl
inc
sahf
cld
push
es
and
adc
mov
pop
aam
dec
fisttpl
pop
sub
mov
or
xchg
xlat
int
sub
ret
sub
mov
inc
cmc
cs
push
xorl
es
in
xchg
movsl
cs
arpl
xchg
or
popa
pop
mov
mov
and
cmp
test
arpl
push
push
dec
push
inc
movsb
sbb
fxch
lea
es
daa
clc
xor
daa
mov
jl
push
push
leave
rclb
aad
lds
dec
into
test
into
aad
scas
add
pushf
rorl
lcall
in
out
mov
pop
rcrb
push
out
add
cmpsb
mov
add
aad
xlat
adc
or
lods
les
movsb
jge
lds
jnp
pop
fildll
cmp
push
sub
imul
rcll
xchg
int
jne
xchg
xor
jbe
pop
jecxz
jg
aaa
mov
es
insl
xor
jp
inc
cmpsb
fcoml
add
pop
test
add
scas
push
or
mov
nop
cmp
pop
cmp
push
insb
rcrb
in
sti
pop
scas
sub
data16
enter
outsb
inc
cltd
push
dec
mov
push
dec
lea
and
push
mov
hlt
es
xlat
sub
or
lahf
dec
sbb
mov
fidivrs
xchg
outsl
jo
and
or
dec
sbb
jns
mov
aam
lret
repz
jecxz
mov
xor
mov
scas
inc
fbld
in
add
lret
push
clc
or
inc
xchg
cmp
popa
sbb
jae
fwait
mov
pop
xchg
icebp
mov
imul
xchg
jge
and
movsl
dec
adc
divb
inc
mov
fistps
add
xchg
xor
nop
repnz
leave
or
ljmp
inc
ja,pn
data16
pop
sub
inc
mov
outsb
jmp
std
bnd
jo
loope
mov
jae
xor
lock
rcrb
sbb
mov
mov
fadd
push
cmpsl
mov
and
rcrb
fs
pop
mov
inc
ljmp
pop
ret
xchg
or
es
dec
filds
std
add
add
sbb
movsl
leave
and
cs
jp
add
enter
loopne
push
lret
cmp
cmpsb
fcomps
mov
xchg
mov
push
sti
test
rcrl
aas
cmp
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
int
rclb
out
sub
stos
pop
xchg
ret
push
es
in
test
int
or
out
ret
lds
cwtl
leave
in
cmp
jmp
or
sbb
subl
nop
call
xchg
xor
test
cmp
lret
ret
or
and
mov
lods
aas
add
inc
cli
daa
lods
mov
sub
mov
lods
dec
sbb
cmp
loopne
dec
sahf
xchg
ret
pusha
cs
xchg
and
sub
jae
sub
lea
sub
pop
loop,pt
jne
and
les
sub
cmp
and
mov
pop
aas
mov
pop
xchg
popf
cwtl
mov
and
dec
xchg
imul
lds
xlat
cwtl
sbb
mov
clc
cmpb
iret
cmp
shl
stos
cmpsb
jle
cmp
jbe
mov
and
xchg
and
loope
pop
ficoml
inc
icebp
std
adc
pop
mov
xchg
push
jp
leave
cs
inc
out
xchg
add
lds
inc
xchg
dec
xor
add
es
inc
cmp
fcmovne
dec
mov
dec
addr16
stos
mov
cmp
and
inc
mov
pop
rorl
daa
mov
mov
mov
rcll
cmp
pop
ret
or
pop
sahf
ret
int3
addr16
jp
add
imul
in
add
push
adc
in
scas
pop
mov
aas
mov
xchg
into
pop
inc
pop
push
or
mov
sbb
sub
mov
hlt
in
sbbb
mov
sbb
jl
outsl
mov
sti
nop
lds
xchg
pop
incl
movsb
inc
sub
fidivrs
xchg
rorl
fldl
fmuls
js
sbb
rep
add
jl
sub
jbe
shll
enter
mov
ljmp
mov
int
mov
loop
lret
out
mov
pop
test
adc
mov
aad
ficoms
add
outsl
xchg
in
fildl
cmp
push
cs
cmp
rcrb
lock
mov
mov
push
lret
int3
or
xchg
add
inc
mov
xor
cli
mull
or
stc
push
add
fnstsw
dec
cmp
jb
jl
outsb
cmp
jnp
inc
outsl
hlt
push
mov
dec
sub
cli
mov
outsl
xlat
outsb
adc
mulb
aaa
jecxz
sbb
enter
sbb
mov
or
out
sbb
inc
cmp
add
jecxz
xchg
mov
dec
fwait
cld
adc
out
jmp
pop
cmp
in
lret
lods
clc
bound
mov
subl
add
insw
sub
rcll
mov
inc
jnp
mov
cli
pop
movsb
xchg
mov
pop
aad
and
inc
pop
subl
inc
imul
xor
lea
adcb
out
pop
and
mov
into
imul
and
jae
pop
mov
jge
leave
mov
or
xchg
aam
int3
std
pop
push
adc
mov
popa
mov
pop
fildl
aad
aad
jne
in
fsubrs
lret
or
incl
lock
enter
and
cmp
shlw
and
jp
mov
dec
in
dec
ficomps
add
push
sti
adc
fisubrl
not
cltd
imul
dec
cbtw
jge
aas
mov
out
push
inc
pop
mov
mov
ss
and
jmp
cmp
mov
push
lret
sarl
pushf
sti
mov
or
jno
xchg
push
add
stos
cwtl
jb
jnp
rcrb
xchg
movsb
mov
or
rcrb
jmp
mov
pop
lea
push
fwait
pop
test
push
dec
xlat
add
mov
mov
stos
inc
sub
dec
pusha
jo
sub
dec
dec
jbe
sub
data16
mov
dec
enter
je
scas
mov
jmp
lods
or
xchg
jo
bound
call
cmpsl
movsl
xorb
ret
xor
jl
add
add
mov
jmp
and
and
mov
sti
ljmp
js
mov
adc
fs
dec
add
insb
ret
jns
fistps
push
xchg
or
dec
jp
je
sub
cmpsb
popa
xor
shlb
iret
xor
mov
pop
out
int3
push
xchg
cmp
nop
loop
push
sbb
rorb
repnz
shll
dec
or
push
sbb
cmp
loopne
dec
lea
push
fisttps
xchg
mov
scas
imul
and
out
push
push
cmc
inc
or
nop
addr16
push
xor
dec
jg
sub
mov
call
lahf
push
dec
mov
out
lcall
add
xchg
xchg
shll
inc
js
lahf
arpl
pop
mov
js
add
mov
aam
sbb
dec
jns
lahf
fsubrs
scas
push
scas
jo
int
lock
loopne
mov
sbbb
in
out
or
and
sbb
loop
lods
fs
in
jno
stos
ss
stos
ret
push
orb
jle
fmull
out
add
rorb
push
mov
ja
xor
int
adc
add
stc
shll
popf
jp
fucom
gs
mov
out
lock
cld
push
mov
call
lret
jae
push
dec
in
xor
pop
pusha
hlt
js
lcall
insl
mov
ficoms
dec
jle
arpl
push
mov
ret
inc
std
jo
arpl
stc
pop
out
pop
mov
shlb
outsb
mov
sbb
pop
test
push
rclb
inc
int3
stos
cmpsb
add
aaa
lret
add
sub
test
cmp
in
xor
stos
cmp
lds
icebp
sbb
xor
into
addr16
add
mov
popf
push
or
fcmovnb
insl
pop
pop
pusha
and
cs
andb
lcall
and
cld
shl
jno
pop
cmp
pop
or
call
xor
mov
jmp
addl
dec
mov
shlb
push
inc
sub
popa
cmp
clc
adc
and
dec
and
cwtl
xchg
cmp
xchg
hlt
cmovp
stc
cmpsb
iret
std
sbb
mov
sub
cmp
push
lret
jne
push
stos
sbb
hlt
inc
inc
add
cmp
ljmp
xor
push
ljmp
jno
sbb
test
insl
adc
cmp
push
adc
dec
clc
fcoms
pop
add
and
pusha
xor
ret
sbb
clc
cmp
movsl
adc
add
jecxz
fnop
mov
fdivl
ret
ret
push
fwait
pop
sarl
fmul
shrl
aad
mov
push
push
add
lret
fstl
xchg
aam
test
xor
add
adc
repz
jne
out
xchg
inc
inc
cs
mov
xchg
mov
cmp
sub
lret
rolb
jbe
mov
adc
shlb
test
pop
add
jo
ja
sbb
sub
enter
out
iret
pop
movsb
call
and
leave
cmp
lock
outsb
inc
and
fs
add
push
adc
je
sbb
sub
jge
mov
addr16
in
add
cmp
movsl
adc
jg
cli
add
push
test
inc
comiss
dec
testl
jl
das
rclb
rclb
sbb
test
neg
test
fstl
data16
cmp
cmp
shlb
out
jbe
inc
das
jns
stos
jg
push
or
adc
mov
hlt
movsb
rorl
or
xor
mov
jbe
mov
inc
mov
shrb
loope
jle
scas
pusha
scas
popa
fisttpll
imul
sbb
out
cmp
push
dec
in
loopne
xor
fs
mov
aaa
into
jns
adc
pop
mov
xchg
cmp
sub
imul
jmp
xchg
je
loope
dec
jbe
inc
fwait
nop
mov
out
inc
outsl
dec
mov
jge
dec
sbb
insl
add
xchg
pushf
call
mov
sub
inc
int
mov
sbb
sub
pop
xor
dec
in
ret
pop
data16
int
enter
daa
outsl
push
addr16
jns
dec
push
or
xchg
inc
push
xchg
push
inc
xchg
call
es
mov
stc
cmp
mov
inc
in
or
mov
rclb
cmpsl
in
shrl
add
lahf
fisubrs
std
insl
pop
jmp
push
add
mov
inc
dec
push
jp
repnz
in
aas
in
jnp
mov
lods
xchg
dec
jb
minps
cmp
movsl
cmp
ret
lcall
and
add
sbb
mov
push
xchg
mov
xchg
pop
call
das
pushf
clc
lret
les
adc
in
in
dec
pop
movsl
insb
push
rorb
sub
notb
inc
mov
sub
icebp
dec
xchg
adc
les
addr16
shl
mov
mov
push
scas
xor
test
xorb
sbb
jno
lret
loopne
imul
gs
fadds
cli
fidivs
fs
fidivl
and
push
loopew
subb
shl
cmpsb
enter
and
add
bound
cmp
inc
les
fs
lcall
and
lods
test
mov
in
out
xor
cmp
cmp
xchg
mov
add
push
pop
inc
pop
insl
mov
sbb
das
cs
mov
pop
xchg
fdivrl
ficoms
ja
adc
aam
push
cmp
mov
mov
hlt
imul
lret
cmpsb
mov
jge
add
dec
rcll
and
xchg
xchg
dec
ds
and
jb
enter
lahf
enter
rol
jns
adc
aam
inc
lret
inc
dec
jge
cltd
outsl
sti
cmp
mov
adc
gs
fcomps
adc
imul
imul
jecxz
sbb
rcrl
add
push
xor
xor
add
fimull
psubsb
xchg
stos
orl
cmp
adc
mov
xor
mov
jne
nop
aam
xchg
in
mov
mov
fidivrl
std
dec
clc
scas
negl
xor
sub
pop
das
push
sub
in
cli
xchg
add
test
enter
push
push
cmc
jns
mov
dec
aam
jge
cmp
imul
fstps
ljmp
push
jmp
dec
add
ja
mov
jnp
mov
jg
clc
dec
sub
aas
cwtl
pop
test
add
xchg
pop
ja
mov
add
les
dec
pop
cli
rorl
or
call
lds
int
mov
inc
push
sbb
das
xchg
mov
lcall
inc
ljmp
pop
pushf
cmp
sbbl
push
rcll
dec
cltd
leave
stos
push
mov
sbb
add
clc
movsl
stos
xchg
cld
dec
es
stos
dec
adc
shrb
dec
push
pop
sub
jl
jl
cwtl
jmp
sub
loop
jge
gs
xchg
or
sub
add
pop
fidivrl
adc
dec
xchg
jnp
and
mov
and
dec
adc
loope
jg
push
xlat
add
loope
repz
add
fdivl
push
lret
daa
std
cmp
inc
sbb
xlat
unpcklps
addl
add
sbb
lods
in
jp
int3
xchg
cs
test
outsb
add
out
je
fs
and
test
jae
pop
xor
outsl
push
aam
leave
push
ja
stc
add
dec
sub
jb
sbb
enter
addr16
nop
sub
in
cltd
sub
in
sub
aam
cmpsb
aas
push
dec
enter
sub
gs
add
in
inc
push
mov
sub
pop
pusha
test
das
pop
outsl
mov
sbb
mov
sub
stos
push
push
fdiv
enter
push
data16
enter
addr16
xlat
add
pop
stos
enter
sbb
enter
or
mov
das
lods
or
ja
pop
xor
sub
xchg
cmc
test
in
sub
pop
dec
nop
sbb
xor
dec
in
add
sub
pop
fwait
shl
adc
adc
rorb
fadd
cwtl
mov
inc
cwtl
and
push
pop
xor
push
stc
insl
roll
jo
xlat
scas
pop
add
jbe
test
cmp
test
sbb
js
pop
popa
adc
dec
loope
cmp
mov
sarl
push
sub
jl
rcrl
or
pop
add
insb
out
or
adc
icebp
in
pop
cwtl
mov
xchg
scas
ret
pop
lret
imul
mov
mov
cwtl
in
cmpsl
les
js
or
das
cwtl
call
out
scas
sub
frstor
je
mov
das
sub
inc
push
add
lret
imul
pop
ret
out
xchg
xor
xor
jnp
mov
xchg
sahf
pop
les
and
add
clc
cmc
fidivrl
test
ret
imul
pop
xchg
cmpl
lcall
cmpsb
adc
jmp
test
inc
push
out
mov
push
hlt
xchg
push
stc
addb
lea
pop
sub
fdivrs
push
push
fdecstp
cmp
sbb
int
popf
xchg
xchg
pop
addb
fcmovnbe
fwait
data16
or
sbb
xorb
fdiv
xor
cltd
pop
xor
js
cmpsb
icebp
sbb
movsb
pop
sbbb
es
pushf
and
cmpsb
lods
sarl
inc
and
test
scas
push
mov
add
lea
das
stc
xor
dec
or
sbb
fdivl
xor
mov
push
fwait
cmpsb
pop
sbb
sbb
mov
test
aaa
ja
cmp
outsb
dec
mov
mov
scas
cld
sub
lret
lcall
lcall
nop
mov
pushf
pop
pusha
out
lds
sbb
arpl
icebp
mov
dec
mov
fsubl
adc
test
lret
mov
jns
fadd
clc
xor
jbe
and
sub
test
and
insb
xchg
adc
das
push
mov
jno
outsl
and
mov
mov
inc
dec
aaa
mov
inc
movsb
add
or
mov
and
jge
subb
sbb
lods
out
clc
enter
mov
xchg
lret
sub
cmp
cltd
lds
xchg
xor
adc
js
fnsave
stos
add
cli
repnz
cwtl
test
nop
jno
mov
xchg
mov
pop
out
repz
xor
add
mov
adc
push
imul
lea
adc
xor
push
ret
mov
lret
inc
adc
out
mov
xor
and
test
imul
sbb
push
repz
fdivrs
ret
test
mov
push
cmpsl
ret
stos
jecxz
mov
incl
into
jnp
sti
xchg
dec
cltd
push
mov
sbb
aas
dec
sub
inc
and
aam
addr16
push
iret
js
add
flds
jo
or
mov
cld
out
xchg
bound
aaa
mov
jb
incl
mov
test
sbb
push
cmp
stc
and
into
jno
dec
xlat
jecxz
into
mov
out
jecxz
xchg
push
lret
loope
pop
add
enter
popa
popf
fs
imul
xchg
xchg
leave
enter
jo
add
xlat
push
cmp
inc
and
pop
mov
xor
adc
pop
sub
cmp
xchg
ret
add
imul
jl
pop
mov
into
movsb
inc
jo,pt
jge
out
mov
repz
cmpsb
mov
add
cmpsb
add
test
in
das
cwtl
mov
push
jbe
xor
fistl
ljmp
sti
fstpt
add
test
lods
sbb
sbb
sub
into
cmc
push
enter
ffree
lock
cmpsl
cltd
jp
xchg
scas
xchg
pop
sbb
mov
in
hlt
xchg
dec
in
jb
jge
push
jb
arpl
push
mov
outsb
aaa
and
push
imul
fldt
daa
mov
addr16
addr16
das
in
cli
daa
dec
jle
cld
cmc
decl
sbb
stos
outsb
jge
sbb
gs
jnp
cmpsl
arpl
push
shll
pop
lock
shlb
rcrl
sbb
scas
pusha
je
adc
inc
shll
inc
imul
pop
cmpsb
outsl
adc
mov
std
add
xchg
fcmove
in
enter
mov
rorl
xor
clc
push
inc
pushf
xor
lock
inc
out
inc
and
and
xchg
pushf
cmp
sahf
lods
pushf
sub
decl
sub
movb
loope
push
pop
subb
out
cmp
leave
in
int
je
scas
loop
in
add
xorb
xor
aam
mov
xor
aaa
sub
xchg
arpl
cmpsb
push
sbb
js
adc
xchg
aas
pop
pop
sbb
movsl
pop
outsl
ss
adc
jbe
mov
mov
pop
xorl
xchg
in
jecxz
fldl
adc
or
inc
jecxz
jo
cmp
aas
scas
sbb
addr16
sbb
dec
aas
or
or
fistpl
pop
xchg
adc
cli
mov
pushf
enter
sbb
add
loopne,pt
sbb
stc
dec
xchg
pop
mov
lcall
outsl
mov
and
sub
adc
pop
push
shl
sub
push
mov
cmp
dec
not
in
xlat
lret
loopne
ljmp
out
data16
ficompl
subl
push
jno
lock
ja
lret
mov
pop
outsb
push
push
dec
andl
jb
and
adc
hlt
xchg
push
outsl
push
aas
push
jbe
inc
cmc
loope
cmpsl
cmpsb
ljmp
pop
call
test
jae
ljmp
test
xchg
cmc
cld
shrb
rorb
je
add
js
adc
cmp
add
adc
xchg
and
icebp
mov
loope
movsl
cmp
data16
pop
xor
addr16
mov
gs
add
jg
lods
mov
in
and
jmp
push
dec
pop
sbb
jne
mov
test
push
loope
or
insl
lods
aas
jp
outsl
or
or
sbb
int3
cmp
xor
pop
add
pop
lahf
push
cltd
shr
inc
mov
dec
inc
lods
inc
xchg
xchg
adc
jp
sub
test
mov
fs
jge
and
mov
xor
mov
ja
mov
daa
rcr
add
rorl
lcall
cmp
jb
cmp
xchg
out
mov
cmp
inc
jno
andl
scas
mov
scas
ret
or
xor
inc
push
out
cld
sbb
xorb
push
fwait
jmp
outsb
add
pop
pop
push
dec
stos
dec
aas
fwait
pop
mov
fiadds
xchg
pop
shlb
cmp
add
and
adc
arpl
inc
sub
dec
xchg
daa
addr16
mov
setbe
xchg
loop
mov
lcall
nop
pop
cwtl
dec
lea
or
call
mov
rcrl
jecxz
addb
out
mov
mov
xor
sub
test
and
jo
ds
popf
out
pop
rcrl
mull
push
cs
dec
ret
fidivrl
mov
je
sub
loopne,pt
jo
sub
mov
jg
xchg
mov
loop
stc
in
cmp
arpl
add
adc
packsswb
and
cltd
loop
mov
fdivrs
cltd
sti
dec
mov
movsb
stos
xchg
pop
mov
stc
or
cmpsl
xchg
push
shlb
jnp
mov
pop
ret
lock
cltd
push
pop
jns
ljmp
add
std
movsb
sbb
incl
nop
mov
add
aas
push
mov
rcrl
pop
mov
xchg
stc
inc
cmpsl
push
stc
cmp
pop
lret
movsl
pusha
xlat
sbbb
or
inc
int3
shr
jecxz
dec
dec
inc
cmp
adc
popa
mov
adc
test
mov
pop
data16
clc
dec
xchg
je
lea
push
clc
xor
mov
xor
inc
hlt
mov
dec
pop
mov
or
out
insl
ja
iret
sbb
sarb
pop
cmp
mov
out
and
loope
mov
jge
sub
pop
lds
sub
sahf
js
les
mov
lods
cmpsb
mov
xchg
xchg
adcl
lods
jb
mov
stos
pusha
outsl
push
adc
cmpsb
jns,pt
pop
js
jo
subb
arpl
inc
xchg
adcb
cmp
mov
pop
push
in
ljmp
xchg
stos
imul
jo
xchg
repnz
out
push
or
icebp
out
add
les
and
out
sub
je
xor
sbb
sub
adc
dec
es
dec
mov
sbb
sbb
add
in
adc
push
jne
lea
xlat
inc
in
popf
insl
pop
jl
cmc
mov
xchg
pop
sarb
sub
pop
mov
mov
xchg
pop
clc
push
dec
repnz
stos
mov
negb
aad
por
jl
add
inc
or
test
cmp
mov
movsl
int
jae
test
das
or
xchg
mov
sbb
popa
push
jns
sub
in
js
push
mov
insl
test
cmp
lret
call
add
pop
outsl
out
lds
out
in
pop
cmp
movsb
sbb
and
hlt
in
pop
sub
jle
rcrl
inc
addps
fs
popa
movsl
dec
mov
add
paddq
in
or
xchg
xor
nop
decl
call
mov
sarl
adc
ret
xchg
pop
jmp
dec
jne
cli
lcall
inc
lahf
push
mov
adc
or
cmp
lock
push
outsb
add
lds
psrld
add
popf
mov
sub
repnz
push
jns
mov
jge
repz
adc
das
arpl
or
into
xchg
repnz
adc
push
js
sbb
in
fsubp
mov
lea
jmp
jo
push
sbb
xchg
mov
fadds
rcr
and
pop
pusha
test
cmpl
iret
repnz
sub
add
clc
outsl
pop
clc
or
or
sub
mov
stos
shlb
pop
jbe
or
dec
test
adc
xor
xchg
dec
insb
xchg
jb
or
pop
sbb
fidivl
mov
adc
xor
int3
stos
push
dec
add
or
daa
fs
out
pop
xchg
jmp
pop
and
jnp
popf
into
mov
jmp
movsl
nop
out
pop
in
sbb
add
xchg
subl
xor
cmp
das
xchg
in
and
mov
sbb
daa
test
sub
sarl
je
sub
push
lcall
or
cmp
fsubrl
xchg
ror
mov
push
stc
loope
je
fstp
sub
shrl
cmpsb
stos
std
push
ret
push
jnp
lods
jge
and
sbb
xor
sahf
lret
hlt
sbb
xchg
adc
dec
cltd
leave
ja
mov
data16
insb
scas
xor
xor
popa
xchg
mov
cmp
cmpb
cwtl
sbb
lods
rolb
in
push
out
fs
cli
cltd
and
cmp
cmc
pushf
push
add
cmp
lods
inc
jbe
mov
sub
jmp
ljmp
dec
inc
cli
jmp
popa
sub
xor
mov
test
push
movsb
xchg
ja
jb
loop
inc
jp
subb
loope
aas
and
pop
and
pop
inc
shrl
dec
inc
data16
cmp
int3
or
sahf
inc
mov
jns
mov
inc
cmp
adc
leave
test
mov
gs
shlb
push
jbe
pop
cmp
rcl
mov
lods
push
push
add
fs
js
stos
xor
rol
outsl
popf
rorb
idivl
xor
sarl
mov
dec
xor
jnp
cli
xor
insb
lods
iret
and
push
sahf
mov
and
idivb
movsb
popf
pop
sbb
sbb
or
lds
push
pop
add
call
jae
aad
std
cmpb
iret
cmp
imul
pop
movsb
xchg
mov
pop
out
out
mov
mov
mov
add
cs
or
cmp
sbb
movsb
inc
clc
sti
rolb
not
sbb
subb
mov
nop
test
jo
pop
adc
mov
in
add
sbb
push
lret
out
xor
sub
js
mov
fs
cmpl
mov
icebp
cmp
and
addl
jge
mov
fsubrp
jb
notb
and
movsb
cli
add
sub
dec
mov
rcrb
add
or
daa
sub
dec
sbb
jg
push
pop
cmp
add
jecxz
pop
insl
dec
lods
mov
mov
fnstenv
divb
lahf
scas
call
test
mov
mov
iret
imul
or
and
lcall
shll
dec
adc
or
dec
mov
aam
mov
call
xchg
mov
inc
test
fadds
popa
mov
in
add
xchg
insl
push
mov
mov
adc
xor
hlt
testb
aam
mov
fisubl
mov
test
fwait
imul
daa
sbb
sub
xchg
mov
sub
aam
xchg
xor
cmpsl
jo
sub
mov
lea
dec
test
add
es
push
loope
adc
out
jae
repnz
cmp
arpl
mov
ficomps
xor
mov
sti
roll
xor
adc
adc
add
shrb
fwait
and
scas
test
cmc
bnd
test
add
mov
cmp
cwtl
xchg
std
in
lret
push
rcr
fmul
mov
xlat
pop
mov
sbb
test
lds
mul
ret
mov
lret
popa
sbb
cmp
lret
ret
cltd
dec
mov
mov
outsl
sbb
movsl
inc
movsb
pop
cmp
mov
outsl
out
cmp
xchg
xchg
push
sarl
mov
xor
lret
push
xchg
dec
dec
je
in
loopne
loope
or
pop
fwait
in
leave
enter
insl
fcompl
jno
xchg
inc
lods
imul
push
ret
in
push
mov
call
mov
ds
inc
push
inc
out
jmp
mov
popa
insl
mov
sbb
pusha
inc
cmpsl
mov
sbb
or
dec
cwtl
push
insb
pusha
pushf
xor
jns
xor
dec
cld
push
das
test
jmp
or
je
sbb
adc
inc
clc
insl
and
mov
xor
movsl
xchg
jg
rol
test
or
ljmp
xor
dec
out
repz
cwtl
cmp
sub
dec
popf
mov
mov
gs
sub
imul
repz
ja
jno
arpl
adc
inc
adc
adc
sbb
fiaddl
pop
mov
cmpsb
or
andb
sbb
out
cmp
ljmp
and
jecxz
flds
sub
popf
repz
jg
xor
sub
mov
sahf
out
inc
iret
pop
out
push
pop
in
mov
mov
sbb
pop
mov
pop
test
or
sub
aas
cltd
mov
and
mov
inc
xchg
shl
out
stc
cmp
jle
cld
add
lock
in
mov
pop
stc
lahf
call
or
dec
or
icebp
add
lock
movsl
and
dec
jns
js
jnp
sti
fcoms
mov
jae
mov
arpl
out
sub
inc
pop
and
pop
in
cmpsl
push
jmp
cmp
push
leave
mov
jge
jbe
out
repnz
and
xor
fiaddl
fdivrp
sbb
ret
retw
rolb
subb
fldt
cmp
mov
fcmovb
pushf
dec
test
out
push
cmp
loop
jecxz
loopne
das
idivl
ret
cmp
xchg
test
daa
sub
enter
cmc
andl
clc
push
sub
movsb
cltd
loopne
insb
xchg
mov
cld
mov
insb
xchg
imull
push
xor
je
call
sub
in
sub
bound
xchg
lahf
repnz
std
out
add
jmp
xchg
popf
xchg
mov
xchg
fsts
sub
in
ret
push
xchg
rcrb
cmp
out
test
add
orb
dec
inc
popf
inc
pop
pop
mov
ret
pop
cli
pop
movsb
xchg
mov
pop
xchg
pop
cmpsb
cmc
inc
sbb
gs
fsubrs
mov
shrd
mov
int
jne
jno
cs
sub
inc
cs
add
in
and
jecxz
mov
pop
test
jns
mov
out
sub
ss
in
xor
repnz
ret
and
lods
mov
into
sti
pushf
inc
push
mov
jne
jmp
adc
cmc
and
jns
loope
mov
inc
cmp
out
out
sub
clc
jo
xchg
dec
iret
or
adc
data16
call
pop
sarl
sub
pop
mov
fsubl
loopne
insl
arpl
popf
fimuls
pop
pop
roll
stc
call
rcrl
repz
dec
fwait
addr16
in
adc
nop
cmp
inc
faddl
into
dec
pushf
dec
hlt
sbb
test
or
fadds
add
add
inc
in
fs
push
lock
add
icebp
aad
push
fwait
add
push
mulb
or
in
int3
dec
bound
push
fwait
jecxz
dec
xchg
pop
leave
shrb
addr16
cmpsl
pop
add
push
lods
sarl
lcall
mov
sti
push
xchg
popa
cli
ret
ja
and
adc
enter
jg
inc
inc
es
cli
mov
fs
cli
xchg
xchg
push
jno
notb
iret
jl
xor
jno
jbe
outsb
loopne
push
and
jp
cmp
gs
ss
sbb
cmp
cmpl
jb
in
fidivrs
mov
xor
in
and
cmpsb
mov
inc
xchg
cmpsb
mov
stos
cli
dec
aam
push
adc
or
std
mov
stos
xchg
xchg
fisubs
push
imul
mov
ret
xchg
stos
or
lods
filds
in
int3
cmp
inc
push
mov
imull
mov
adc
push
jle
dec
hlt
sbb
jns
xchg
and
cmpsl
jecxz
cli
jmp
arpl
mov
insl
pop
sahf
pop
xorb
mov
mov
dec
cwtl
in
sbb
test
dec
sar
leave
push
or
and
sub
aad
stos
testb
ret
xchg
iret
push
xor
rorb
sahf
mov
in
inc
dec
leave
xchg
cmp
sbb
and
fucomip
movsl
mov
add
clc
pop
add
inc
adc
jg
inc
sbb
ret
jo
jmp
xchg
int3
sbb
lret
push
sbb
sti
sbb
and
xchg
jb
in
push
mov
arpl
xchg
xor
push
rolb
in
jle
mov
or
outsl
push
mov
hlt
aad
xchg
out
pusha
mov
cwtl
sbb
lods
pop
mov
cmp
adc
add
inc
pushf
cs
xor
jae
int
int3
loop
jl
sahf
aad
lods
imul
pop
push
jmp
mov
jae
rclb
mov
cmpl
xor
add
jle
mov
loopne
imul
fisubl
js
dec
pop
mov
pop
test
pop
sbb
leave
movsb
sbb
icebp
aas
mov
jae
repnz
fstpt
or
or
mov
add
add
sub
subb
pushf
adc
jmp
cmpsl
cmpsb
enter
xor
aad
or
jb
imul
fistpl
lret
mov
ljmp
pop
iret
repnz
inc
fcoml
mov
adc
pop
mov
cmp
push
setnp
orb
fadds
adc
jnp
jecxz
mov
loop
jns
int3
or
addr16
or
add
std
scas
mov
xchg
adc
cmpsb
cmc
ss
push
cwtl
mov
xorl
into
outsl
pop
fidivrs
or
xchg
inc
aad
mov
jl
inc
push
dec
push
xor
adc
and
mov
test
or
pop
ljmp
pop
insb
add
push
xchg
xor
lock
mov
test
mov
cltd
xchg
leave
repz
xor
ljmp
andl
push
fwait
lcall
adc
jb
loop
sub
lret
mov
mov
add
aas
outsb
jmp
fldcw
or
and
push
subb
dec
sub
or
rorl
jo
push
or
dec
pop
dec
xchg
iret
into
clc
outsb
mov
std
pop
imul
cmpsl
sub
insb
rclb
mov
dec
test
mov
fnstenv
dec
pop
in
mov
push
dec
jle
push
jg
mov
adcl
add
mov
add
pop
into
daa
lds
mov
daa
stc
pop
lcall
jbe
pop
dec
ds
cli
daa
mov
sbb
fidivrl
rorb
push
mov
mov
outsl
or
test
fwait
ret
sti
std
or
dec
leave
lock
xor
pop
fwait
xor
xor
cmpsl
mov
ret
ficoms
mov
daa
dec
leave
pop
cmpb
mov
mov
sbb
add
dec
dec
nop
mov
sub
push
push
cld
popf
push
jmp
je
jae
inc
lea
push
adc
movsl
jo
loopne
outsl
dec
mov
or
xchg
test
mov
in
ljmp
ss
add
in
pop
mov
mov
jge
movb
addr16
pop
mov
pusha
cli
loop
sahf
fsubrs
inc
call
jge
aaa
push
sub
xchg
xor
call
add
jo
pop
cltd
push
pusha
daa
mov
mov
popa
repnz
inc
mov
mov
loope
in
lahf
lock
jbe
iret
pop
loop
in
adc
in
testb
push
sbb
loopne
mov
cli
sbb
jp
fsubr
mov
pop
loope
lcall
xor
andb
das
test
xchg
das
or
inc
frstor
mov
mov
mov
jecxz
sub
icebp
das
xor
push
cmc
mov
mov
loop
loop
addl
lods
mov
inc
das
mov
or
sub
mov
or
dec
sub
xor
mov
aaa
mov
imul
xchg
bound
xor
xchg
push
mov
cwtl
lahf
cmp
out
iret
in
test
inc
cmp
pop
icebp
pop
or
inc
or
push
call
pop
adc
mov
push
fdivp
repnz
cmpsl
test
arpl
add
sahf
leave
hlt
or
mov
xor
xor
insb
or
jo
outsl
xor
jge
inc
push
dec
push
xchg
or
or
push
jno
add
sbb
jecxz
push
adc
outsb
pusha
out
outsw
jb
or
cmpsb
sbb
mov
scas
inc
ret
mov
scas
inc
cmp
nop
fs
jns
lods
hlt
shll
cmp
adc
pop
imulb
or
je
dec
add
adc
cld
add
loop
adc
insl
stc
stc
add
lea
es
sub
xchg
enter
push
pusha
jge
mov
or
into
pusha
xlat
xchg
and
outsl
cmp
jle
aad
out
rcrb
xchg
popa
pop
xchg
inc
ds
mov
mov
inc
ficompl
sbb
adc
add
jns
xor
push
mov
mov
mov
inc
in
mov
imul
cmp
push
mov
xor
nop
lea
lret
lods
inc
inc
movsl
into
sahf
mov
loope
add
pop
sub
in
nop
out
cld
mov
ret
lcall
push
popf
jmp
and
stos
jg
mov
sar
dec
sub
mov
xchg
push
cmp
adc
and
cmc
loop
cmc
rcrb
mov
fldcw
push
lock
pop
sub
loope
sahf
add
orl
xchg
cmp
or
sbb
mov
hlt
jl
lret
int
rclb
push
dec
lret
in
jl
push
lret
ja
andl
sub
adc
lea
push
std
fs
pop
test
add
out
out
sbb
stc
xor
mov
sahf
push
pop
cs
cmpsl
clc
out
cltd
cmp
fistpll
sbb
aam
insl
lcall
or
out
loopne
sub
xor
push
in
push
rcll
mov
push
cmp
push
loop
lret
orl
or
ljmp
sbb
icebp
jecxz
sbb
mov
sub
mov
mov
jnp
inc
imul
mov
mov
jne
movsl
cmp
mov
lret
or
gs
jmp
loop
outsb
lret
xchg
iret
test
xchg
add
out
fs
pusha
mov
clc
bound
lods
fldenv
add
sbb
cwtl
sub
arpl
das
cmp
mov
sub
out
mov
shll
jae
xchg
fwait
cmp
adc
dec
sbb
and
out
dec
sbb
stos
shl
xchg
lock
outsb
add
and
jae
add
mov
out
or
fnstsw
sub
push
popa
jne
rclb
cli
pop
adc
sub
jnp
mov
xor
jae
push
lea
fwait
dec
test
cli
mov
shl
loope
les
jp
shll
stos
inc
sti
int3
mov
mov
pop
push
sub
sub
leave
addr16
sub
sarl
or
pop
sbb
pop
jmp
lods
outsl
cltd
xor
pop
pop
sbb
imull
jae
imul
mov
mov
push
stc
imul
pop
movsb
mov
dec
or
cmp
enter
sub
ds
jle
lret
imul
dec
aad
lods
cs
jl
test
mov
jmp
adc
cmpsb
dec
aam
inc
or
cmp
push
lea
mov
xchg
scas
in
rolb
call
jbe
hlt
mov
add
std
xchg
add
xchg
je
sbb
iret
ds
push
cld
arpl
cwtl
xlat
add
repz
sbb
mov
jg
xchg
popa
mov
incl
test
test
sti
inc
imul
pop
sarl
sahf
jge
xchg
adc
dec
sbb
ficoml
cmp
cs
scas
ret
cmp
dec
mov
pop
dec
add
jns
lds
testl
sbb
inc
lret
test
je
jecxz
cld
mov
aam
jno
inc
cmpsl
inc
aas
or
dec
movsb
or
inc
sub
mov
js
add
sarb
pop
xchg
lock
shr
pop
xor
popf
xorl
aas
ljmp
mov
sbb
inc
push
int
lret
fstl
jnp
inc
xor
jle,pt
and
outsb
mov
xor
mov
ds
dec
mov
stos
add
in
mov
xchg
jo
mov
mov
rcrl
mov
jb
loopne
mov
fwait
scas
insb
aaa
mov
adc
cmpsb
cmp
test
ret
xchg
push
cltd
in
sub
sbb
jp
outsl
movsb
lock
scas
insl
icebp
cltd
push
push
mov
out
xchg
test
mov
and
jg
inc
xor
mov
or
sub
xchg
sahf
mov
sti
sti
loop
data16
add
push
sub
clc
arpl
add
lds
out
push
xchg
jae
cld
adc
imul
add
xlat
mov
xor
xor
stc
xor
pop
inc
pop
scas
xchg
out
sbb
int3
jmp
fld
ficoml
scas
ljmp
and
addr16
fildl
push
jg
mov
aam
xchg
xor
dec
cmpsl
jne
sbb
mov
pusha
ljmp
sti
subb
sub
push
sbbb
mov
rcr
mov
push
jb
push
add
xchg
xlat
rolb
jmp
jns
nop
push
mov
or
and
pop
es
cltd
fsubrs
jno
pop
add
cmp
les
or
lds
mov
and
pop
pop
das
out
push
pusha
nop
cmpsb
inc
xchg
cmc
cmp
iret
add
js
int
lds
cmp
ss
xchg
jo
fcmovnb
push
test
push
lds
cmp
jbe
mov
rol
mov
jge
ror
sub
lahf
shlb
clc
add
pop
decb
adcb
dec
or
adc
mov
cld
sbb
cmp
fcoml
push
jne
inc
cmp
stos
add
and
psadbw
outsb
popa
add
lods
rcrb
sahf
bound
shll
add
adc
mov
das
loopne
lret
mov
mov
mov
adc
push
pop
inc
outsb
data16
inc
imul
pop
jg,pn
jmp
pop
hlt
gs
aaa
inc
imul
lret
fsubl
pop
lea
pop
push
fsubs
ss
out
and
lahf
xor
mov
xchg
jmp
jmp
xor
scas
or
stc
ljmp
or
or
pushf
and
xchg
lahf
jne
xor
pushf
xchg
mov
bound
pop
mov
lcall
mov
and
int3
cli
jp
mov
rcr
pop
xchg
cmp
cmp
lret
fcompl
mov
pop
xor
push
cmp
xchg
sti
jmp
nop
popf
mov
sbb
pop
clc
dec
fs
mov
or
out
mov
pop
mov
jmp
adc
pop
xchg
mov
cmp
scas
mov
bnd
cmpsl
bound
fs
aaa
or
cli
cmp
lahf
aad
dec
enter
movsl
fdivl
mov
cmpsb
nop
inc
iret
push
jle
dec
iret
dec
add
es
xor
and
xchg
icebp
pop
out
push
shll
pop
insl
sub
shl
jg
lds
test
loope
pushf
and
push
xlat
adc
das
sub
jo
cmp
inc
sti
sub
das
nop
mov
out
lods
loopne
adc
clc
mov
adc
lea
loop
xor
mov
dec
dec
inc
mov
and
cwtl
sub
xchg
pop
in
shlb
inc
fbld
mov
jnp
nop
cmp
lahf
popf
shr
jl
mov
jae
mov
adc
flds
dec
xor
push
aas
fs
push
subps
sub
pop
push
lcall
jo
push
and
in
arpl
jp
sub
in
inc
pushf
fbld
imul
push
lahf
mov
shrl
mov
shll
sar
inc
mov
or
loopne
loopne
jne
shlb
gs
jno
cmpb
mov
lret
pop
push
fiaddl
adcb
lea
push
inc
sbb
sbbl
clc
popl
es
and
addb
adc
cmp
scas
jecxz
pop
lret
mov
cmp
mov
into
fldcw
mov
lods
ret
aad
sahf
cmp
sub
add
outsb
inc
xchg
mov
xor
fadd
cli
push
gs
push
pop
mov
or
ss
mov
es
testl
sbbb
mov
dec
pop
je
sbb
push
sub
test
fsts
dec
arpl
xchg
pop
xchg
aad
or
xchg
mov
fcomps
dec
mov
scas
test
cltd
ja
stc
enter
and
push
xchg
loop
dec
mov
jne
sahf
inc
icebp
iret
lods
dec
jb
cmp
sbb
sub
out
xchg
push
orl
jg
adc
mov
adc
lret
and
jo
add
dec
xchg
sbb
cmp
push
jo
gs
je
addl
outsl
pop
and
push
and
push
and
lods
cmp
pop
repnz
inc
sub
dec
lret
fildl
jp,pt
mov
pop
enter
adc
ret
jo
jo
pop
out
fsub
lret
pop
jl
outsl
iret
sub
xchg
pop
dec
mov
jecxz
mov
cmp
out
divps
jecxz
test
mov
aaa
pop
shlb
clc
mov
sbb
stc
rcll
fistl
lcall
mov
sti
stos
or
pop
popa
movsl
ljmp
jecxz
lret
sub
movb
insl
mov
mov
push
test
push
imul
dec
ds
aas
or
xchg
xchg
adc
arpl
xchg
pop
pop
fcompl
push
or
sbb
inc
inc
das
rcrb
xchg
je
mov
and
into
xchg
mov
hlt
repz
cmp
sub
mov
pop
fcoml
movsl
mov
lds
push
test
jle
movsl
mov
dec
adc
cmp
int3
inc
loop
addr16
fwait
sbb
fisubs
cmp
cmpsb
shrl
fldenv
dec
scas
cmp
shlb
or
sbb
inc
jb
rcll
fisttps
jns
xor
sbb
arpl
call
mov
jbe
or
pop
xchg
push
inc
and
push
and
pop
mov
jmp
test
cwtl
out
ret
cmpsl
sub
adc
jp
add
cwtl
fildl
lds
or
dec
leave
inc
test
sub
jo
test
or
jb
pop
iret
out
inc
or
call
and
mov
adc
cli
jmp
daa
xor
imul
pop
cmp
stc
mov
fs
lret
test
push
jae
and
test
loope
or
pop
mov
mov
popf
jg
or
mov
cmp
sbb
sti
xorb
pop
cmpb
mov
xor
pop
das
into
xchg
out
fistpl
jo
in
add
sub
negb
fistps
fcoms
not
daa
andb
in
cmp
mov
mov
sub
push
xchg
ja
mulb
push
xor
in
aam
int
pop
mov
js
cmp
in
out
addr16
test
enter
inc
adc
jno
scas
scas
mov
aaa
je
testl
sti
xor
and
outsb
inc
shll
sub
aad
fstp
sub
test
sbb
bound
push
pop
cmp
adc
add
add
sahf
pop
mov
js
sbb
mov
sub
popf
icebp
jo
dec
movsl
sub
jecxz
xchg
rorl
in
pop
in
cwtl
dec
test
lret
pop
cmp
add
xor
daa
into
mov
inc
mov
and
xchg
xor
adc
pop
push
or
jecxz
jae
push
xchg
dec
out
sub
repz
jno
cld
xchg
cltd
cmp
xchg
sbb
insl
xor
pop
insb
rclb
jg
test
repnz
jnp
fucom
imul
push
cmpsl
mov
mov
aam
loopne
fidivs
lahf
mul
push
jl
adc
xchg
outsb
mov
outsl
inc
mov
inc
inc
xor
pop
shl
pushf
push
push
idivl
fldenv
imull
or
pusha
add
xchg
sbb
lods
aam
stc
jo
out
filds
pop
jg
push
xchg
adc
inc
cvtps2pd
push
ja
inc
xor
mov
push
mov
mov
lds
iret
lcall
std
icebp
jne
add
mov
add
push
sbb
ljmp
cli
push
xor
xchg
or
test
jno
in
aam
mov
xchg
dec
mov
das
loopne
pusha
fnstcw
pop
adcb
jns
bound
inc
xor
faddl
mov
repz
faddl
fs
aas
or
es
xor
inc
popf
push
cmp
enter
and
test
ret
xchg
aam
xchg
mov
mov
cs
dec
out
cltd
jo
imul
aas
movsl
sub
hlt
cmp
int
mov
and
scas
push
mov
xchg
test
lock
jne
pavgb
or
push
inc
or
arpl
mov
leave
cmp
sbb
xor
loop
adc
stos
mov
sbb
add
jecxz
mov
ss
cmc
dec
push
or
in
mov
mov
fdivrs
mov
jo
loop
xor
mov
xchg
jo
jo
fmulp
jp
outsl
xchg
sti
adc
cli
xor
xor
imul
xor
rcrl
bound
and
add
cli
cli
stc
xlat
sbb
nop
pop
pop
incb
rolb
div
inc
pop
and
icebp
fwait
or
mov
mov
nop
mov
adc
adc
lock
push
imul
shll
jb
loop
cli
stc
adc
adc
pop
clc
ja
jo
pop
sbb
dec
inc
or
cmp
imul
push
jle
jo
sarl
xchg
pop
mov
movsl
lods
inc
pop
mov
and
ficomps
or
hlt
or
push
add
movsb
push
mov
ljmp
add
xchg
jnp
lahf
sub
pop
jnp
or
push
jb
mov
sub
test
xor
or
inc
inc
sahf
cmp
mov
iret
sbb
ja
lds
mov
add
clc
les
loopne
arpl
add
rorb
push
sub
inc
fcoml
in
xchg
jno
call
add
cs
dec
push
or
mov
dec
xchg
adc
fwait
inc
aad
adc
insl
xor
es
cltd
or
or
stc
and
je
cltd
cmp
fwait
test
movsl
ss
mov
cmp
stos
jmp
andl
pop
and
pop
js
pop
inc
rolb
jge
jb
and
mov
ljmp
ret
lods
xchg
inc
sbb
or
repnz
xlat
or
mov
ljmp
adc
lcall
int
loopne
test
mov
bound
shrl
adc
sub
std
out
out
mov
and
add
sub
loop
dec
movsl
loop
cmc
fiadds
push
inc
mov
add
xchg
ja
and
aad
sti
dec
ficompl
pop
xchg
adc
push
jge
cmp
stc
push
dec
fdivrs
xchg
cmp
fs
cmp
andb
out
pop
pushf
aam
hlt
jb
xchg
cmp
push
shrl
mov
imul
mov
xchg
cmp
xor
cmp
mov
mov
add
lods
mov
lods
xlat
jne
cmc
jmp
push
out
sub
xchg
dec
sub
nop
popa
jecxz
jecxz
out
jbe
in
cmp
fwait
and
icebp
mov
pop
dec
push
insb
or
cmc
leave
mov
cmp
push
jge
loopne
lcall
pop
inc
mov
or
xchg
imul
scas
lcall
fs
and
sahf
mov
iret
std
ss
nop
dec
dec
jg
ljmp
cmp
or
ds
call
fbstp
sub
mov
movsl
xor
aaa
repz
jp
or
adc
mov
push
xor
mov
mov
sbbb
pushf
cltd
or
mov
jmp
xchg
mov
inc
pop
or
inc
out
out
pop
je
or
lds
xor
pop
js
ja
mov
mov
adcl
add
jnp
out
xchg
loop
cwtl
aas
sub
pop
loopne
out
clc
mov
inc
add
call
jmp
icebp
cmp
xchg
imul
push
fiaddl
push
pop
xor
xor
mov
mov
je
xlat
shrb
cmp
imul
adc
gs
dec
xchg
and
mov
loop
dec
popa
pop
inc
sub
out
push
pop
mov
xchg
cmc
out
jp
xchg
shrl
shll
test
lret
loope,pt
jne
xor
loope
pop
sarb
sub
push
push
and
loope
or
ds
sbb
je
mov
outsl
cli
cld
jns
mov
in
shrb
cli
ss
dec
adc
ret
mov
xchg
jle
or
xchg
mov
jb
jmp
jge
mov
sbb
sub
push
aad
xchg
mov
sub
xchg
push
add
jne
add
dec
out
int3
push
iret
jp
ficoml
imul
inc
sub
ja
jno
and
movsb
jecxz
or
std
jb
mov
shr
add
xorb
popf
out
add
fldcw
mov
fimuls
movsl
sub
mov
xchg
in
test
add
js
xor
and
dec
pop
sbb
jb
add
pop
dec
mov
mov
mov
sub
ljmp
scas
dec
and
cmp
xor
fldenv
pop
adc
les
out
inc
cmp
sbb
push
inc
daa
dec
int
cld
cld
shl
push
jb
fbstp
pop
jmp
xchg
scas
mov
mov
les
xchg
ret
aas
jg
pop
dec
push
mov
jo
pop
pop
lcall
sub
inc
je
filds
sub
xlat
xchg
add
cmc
nop
scas
pop
add
cmpsb
jmp
repz
test
jecxz
fisttps
int3
xor
jecxz
arpl
cmpsb
imul
test
mov
xlat
mov
and
outsb
into
cmp
repnz
adc
fmull
mov
sbb
sub
jnp
cmp
bound
sub
mull
dec
push
inc
xchg
divl
add
in
push
scas
mov
jle
cmc
stos
add
push
idivl
loope
arpl
repz
jb
ljmp
mov
jnp
adcl
push
mov
sub
insb
in
cmp
adc
mov
xchg
mov
push
aam
pusha
xor
inc
arpl
fs
adc
adc
mov
push
shll
xchg
int
xorb
andb
ror
shll
lret
or
pusha
out
sbb
int3
test
mov
sbb
and
cwtl
addr16
cmc
xlat
jne
jno
sbb
jns
and
xchg
out
pop
jp
jno
sub
popa
lcall
and
add
daa
outsb
mov
nop
cmpsb
repz
push
add
shll
mov
jo
imul
inc
mov
stos
jbe
mov
inc
std
pop
xor
push
pop
cmp
es
in
jmp
or
and
in
stos
in
data16
and
mov
mov
hlt
xchg
jns
lret
stos
mov
and
call
hlt
pusha
arpl
mov
push
xchg
movsl
jbe
jle
or
sbb
in
mov
pop
sub
inc
fsubs
and
test
imul
sbb
sbb
or
jge
fld
xchg
test
mov
imul
mov
pop
dec
xor
sub
and
xchg
aaa
aas
mov
pop
xchg
lret
movsb
stc
mov
push
fdivr
nop
inc
xlat
push
jle
push
add
sub
ret
pop
pop
outsl
xchg
test
rolb
dec
jle
push
ret
insb
jae
jno
adc
sbb
roll
in
cwtl
adc
movsb
mov
sub
aam
rolb
and
loope
sub
mov
jge
pop
xchg
push
cmp
mov
cmp
cmp
dec
loope
mov
fsubrs
sbb
int
test
pop
pop
repnz
xchg
mov
gs
lret
ret
inc
es
mov
and
mov
out
inc
xchg
xor
mov
out
mov
xchg
jl
cs
mov
gs
mov
pop
int
movsb
xchg
mov
cmp
test
hlt
pop
neg
daa
and
sub
sub
outsb
movl
jns
mov
mov
cmp
stc
cmpl
ret
aad
xor
pop
or
icebp
dec
shl
jmp
std
cli
mov
cmp
roll
dec
adc
cmp
mull
aas
mov
mov
pop
dec
in
xor
out
in
gs
push
cmpb
mov
xcrypt-cfb
cmpsl
mov
aam
inc
dec
popa
hlt
lods
adc
aad
jo
sbb
or
cltd
int3
xor
test
orb
cltd
notl
sub
jge
ljmp
fadds
dec
push
test
mov
add
adc
gs
jbe
adc
daa
jge
pop
shrb
add
sub
cmp
mov
scas
jge
daa
out
pushf
les
lret
inc
test
pop
lock
mov
add
popa
mov
mov
adc
sub
in
cmpsl
add
xchg
jge
das
jns
cld
dec
lret
adc
mov
jbe
xchg
mov
imul
jge
inc
pop
into
inc
mov
inc
test
add
mov
leave
popa
and
push
or
jne
and
in
ljmp
cli
clc
hlt
bound
rorb
stos
mov
shll
inc
fldcw
adc
and
adc
add
mov
nop
pop
icebp
inc
roll
cmp
add
mov
or
stos
xchg
pushf
rorl
ljmp
fcmovnb
pushf
orl
pusha
pusha
sub
xchg
pop
mov
mov
pop
idivb
add
add
cs
movsb
cmp
pop
xchg
cmp
fwait
add
rcrl
sbb
mov
mov
fisubrl
or
and
sbb
sub
popa
pop
daa
shll
into
mov
xlat
dec
xchg
cmpsb
adc
mov
ds
lods
sbb
fsubrs
pop
sbb
push
fwait
pop
dec
outsl
pop
mov
jbe,pt
jnp
xor
ret
das
sbb
stos
sub
cmp
shr
sub
and
nop
out
jl
jno
test
add
lret
testb
ret
hlt
fmuls
and
mov
adc
mov
cs
cli
or
inc
daa
es
pop
popa
dec
shr
in
mov
lods
dec
hlt
out
fldl
scas
xchg
cmp
push
add
pusha
xchg
jne
lea
xor
fidivrl
mov
pop
lahf
rcrl
mov
je
mov
out
mov
sub
test
xor
in
mov
popa
inc
pop
dec
arpl
jb,pn
call
adc
in
loope
and
push
lods
stc
push
push
pop
cmp
test
jne
jnp
xlat
cmp
dec
data16
xor
sti
rcl
ja
cltd
incl
lods
outsl
push
mov
pop
cmp
insl
and
jae
fsubrl
clc
xchg
cli
movsb
mov
adc
shlb
or
out
scas
mov
add
adc
stos
lock
mov
ja
popa
movlhps
push
std
pop
shlb
adc
out
cmpsl
sub
inc
push
add
fimuls
adcl
jp
or
sbb
jo
jl
shll
pop
mov
xchg
ja
dec
ret
jecxz
push
adc
and
lahf
xchg
ret
jno
hlt
inc
push
push
push
out
iret
mov
pop
sti
scas
test
das
xchg
fwait
push
mov
cmp
jno
ss
sbb
xor
bound
cmp
ret
jmp
loope
bound
out
jg
cmp
and
sti
gs
test
mov
pop
dec
xchg
pop
js
fldcw
jl
sub
dec
cli
jbe
out
dec
lock
xchg
lret
sub
imul
mov
sub
divl
jne
hlt
aad
aam
or
xor
mov
daa
in
xor
icebp
test
push
mov
negl
es
pop
push
inc
cmpsb
out
mov
les
mov
and
out
mov
mov
or
scas
fmull
addb
push
inc
cmp
cmp
lret
jge
mov
xchg
sti
jae
mov
repnz
subl
dec
pop
pop
xchg
xchg
clc
ljmp
cmpsb
mov
push
xchg
rcll
wbinvd
cmp
ja
fcmovbe
cs
adc
pusha
dec
jmp
std
push
das
aaa
cmpsl
movsb
data16
inc
sti
addl
or
lods
mov
push
out
movsb
xor
xor
sbb
pop
loopne
movsl
xor
pop
dec
mov
lret
push
mov
jae
jns
add
pop
aam
cmp
mov
lahf
sub
adc
shrb
inc
imul
out
inc
jbe
subb
ret
sbb
mov
test
mov
mov
push
data16
in
add
sbb
cmpsl
add
dec
inc
clc
orb
push
negl
mov
fldt
sbb
sbb
xchg
jns
jae
insb
xor
xchg
push
jl
push
loop
xchg
xchg
and
repz
push
test
cli
fcoml
pop
and
enter
xor
jecxz
and
cmpsl
mov
xchg
flds
xchg
pop
out
or
sbb
jae
cmp
cli
xor
leave
pop
jp
mov
sbb
xor
mov
out
sub
inc
repz
push
stc
clc
ret
pusha
insl
cltd
cmp
xorb
inc
test
mov
subl
je
test
mov
push
fs
xchg
int3
push
jg
shll
popf
in
xor
push
xor
xor
cmp
mov
lea
jne
add
test
scas
mov
add
mov
mov
popf
popl
push
ret
adc
mov
xchg
andl
cmp
inc
mov
sti
or
pop
lahf
daa
sbb
fnstsw
pusha
sub
dec
cli
fdivrs
jge
push
adc
jno
stos
and
andb
mov
xchg
jecxz
pop
push
lahf
adc
mov
xor
cmp
sbb
push
pop
mov
dec
add
cmpsl
cld
xchg
xlat
pop
mov
imul
sbb
push
jg
push
fidivl
sbbb
lds
or
add
mov
jmp
pop
mov
shlb
scas
pushf
cld
popf
in
mov
sbb
and
fwait
popf
mov
and
idiv
jle
hlt
in
testl
fs
pop
mov
adc
je
and
xchg
xchg
pop
push
sahf
adc
mov
fdivl
mov
sarl
xor
ds
fisttpll
cltd
mov
and
insb
mov
inc
lcall
sbb
mov
jbe
dec
mov
aam
pop
cmpsb
inc
cmpsl
ret
jae
xor
shlb
stos
pop
lret
push
dec
xchg
xor
cltd
leave
pop
int
std
loope
pop
cld
push
pop
xchg
fidivrl
mov
jge
mov
daa
push
mov
inc
in
fisttps
pop
aad
popf
dec
pop
pop
sbb
aas
sub
fchs
add
push
jns
notl
xchg
fsubrs
sahf
mov
adc
jge
retw
jnp
int
pop
xor
adc
inc
inc
xchg
xor
inc
fildll
lret
xchg
fidivl
dec
shrl
sub
inc
cmc
mov
dec
jle
mov
sbb
mov
ja
sub
leave
jne
cltd
xchg
cmpsl
hlt
scas
adc
jge
int
js
jmp
pop
mov
mov
sahf
mov
xchg
insl
pop
lret
mov
jne
jo
mov
sbb
mov
jb
pop
outsb
xchg
jl
popa
adc
hlt
and
outsb
fnstsw
addr16
pop
sub
fisttps
data16
adc
push
sub
add
aad
jns
and
shr
mov
cwtl
cs
mov
jb
jl
insb
lret
jecxz
sub
insl
cmp
dec
ret
mov
and
dec
xor
addr16
and
jl
sbb
push
inc
push
push
imul
dec
insl
and
or
inc
ret
divb
dec
sbb
or
addl
xor
mov
jge
mov
adc
imul
push
or
stc
mov
jl
xor
int
xchg
xor
ja
mov
loopne
out
mov
icebp
sbb
lcall
xor
out
sti
mov
jg
inc
lock
and
into
sbbl
xchg
insb
cmp
sub
int3
push
dec
xor
das
lock
fldenv
insb
xorl
cmpsl
cltd
sti
js
and
inc
add
rclb
test
sti
lret
push
repz
out
push
or
sub
arpl
cwtl
add
adc
mov
aad
roll
dec
rcl
mov
fcmovnu
pop
mov
lret
cmp
push
add
pop
shll
pop
jns
iret
scas
and
inc
hlt
sti
push
cli
nop
mov
xor
insl
xor
outsb
rcrb
adc
movsl
clc
inc
insl
push
xor
cltd
pusha
mov
rcll
cmp
mov
cmp
mov
repnz
mov
jnp
xchg
inc
xchg
pop
cld
and
cli
dec
jg
xor
paddsb
jecxz
mov
push
pop
and
mov
std
add
jmp
std
mov
sub
in
and
das
push
cmp
pop
push
ja
sahf
jp
push
push
lret
popf
xchg
aam
mov
xchg
testb
je
cmp
mov
movsb
jnp
in
sti
xchg
mov
xchg
mov
sar
test
in
pop
in
jge
adc
stc
or
or
hlt
push
inc
mov
fistpll
rcrb
clc
dec
cmp
or
mov
ja
ss
xchg
pushf
cmc
movsb
lea
inc
clc
loop
push
mov
bound
ja
mov
xor
test
pop
loope
xchg
mov
cli
cs
mov
lock
jb
ret
jge
adc
dec
mov
cmp
nop
les
dec
pop
sarb
outsl
cmpsl
icebp
dec
pop
cld
pop
lret
fldcw
rorb
aad
xor
or
int3
adc
add
nop
add
mov
loop
jmp
pop
shrl
leave
enter
fsubrs
mov
cld
pop
data16
cmpsb
shlb
mov
sub
push
xor
or
and
jl
fsubs
sub
ss
push
nop
inc
jmp
lret
inc
clc
mov
xor
adc
addr16
jbe
mov
in
arpl
ljmp
mov
dec
xlat
testl
hlt
lcall
push
cmp
mov
cmp
xchg
xchg
sbb
adc
notb
mov
push
push
adc
sub
and
int
push
aad
pop
cmp
dec
pop
cld
daa
lds
adc
les
xchg
sub
or
out
xor
pop
sbb
int
mov
fiaddl
and
mov
mov
cmp
insb
sub
mov
fidivrs
mov
scas
xor
adc
pop
rolb
daa
iret
push
push
sbb
movsl
mov
setge
and
adc
mov
outsb
push
mov
js
mov
add
xor
push
out
loope
scas
into
sbb
push
inc
add
outsb
lea
cs
jbe
jb
popf
test
popf
das
and
das
mov
ffreep
call
movsb
lods
cltd
push
daa
cmp
lret
scas
je
cmp
or
inc
jae
cmp
xchg
je
and
stc
loope
pop
sarl
cmpsl
or
jbe
mov
jae
ss
jp
mov
scas
fbld
insb
das
push
sti
sbbl
sbb
xchg
pop
imul
and
fcomps
pop
out
add
sbb
sbb
adc
dec
movsl
mov
mov
je
inc
pop
idiv
dec
cltd
xor
pusha
mov
add
push
popa
xorb
mov
mov
imul
and
aas
leave
adc
mov
pop
jae
xor
jae
xor
sbb
jecxz
inc
ret
xchg
pop
push
stos
pop
in
pop
out
mov
enter
addr16
sahf
test
aam
mov
or
dec
adc
inc
sahf
lahf
std
lods
push
xchg
into
popf
mov
test
mov
rclb
aam
icebp
jecxz
call
cs
jl
push
daa
jge
mov
int3
dec
dec
ja
mov
dec
dec
movsb
out
adc
repz
stos
sbb
aaa
or
xchg
std
add
rorl
das
add
adc
cld
out
xchg
mov
xchg
or
mov
bound
test
dec
in
stos
enter
pop
dec
jg
int3
xchg
dec
push
pop
in
xchg
lods
xor
int3
lods
xchg
jmp
push
adc
sbb
popa
loop
scas
lret
jo
push
adc
xchg
rorb
mov
movsb
mov
mov
lods
lahf
popa
fs
cwtl
roll
adc
arpl
or
sar
mov
add
mov
sub
int3
push
jmp
fnstsw
push
les
or
cmp
inc
mov
jmp
test
sub
and
jns
adc
ss
rclb
pop
insl
push
xchg
xorb
repz
pop
mov
inc
sbb
push
mov
popf
push
lock
es
inc
sub
sub
mov
cmpsl
sbb
sbb
dec
sti
lret
push
mov
fwait
xchg
fildll
mov
inc
dec
and
xchg
inc
mov
shrl
cmp
push
mov
lds
sub
movsl
popa
sub
lcall
jge
mov
sti
pop
sbb
jle
frstor
mov
inc
icebp
pop
mull
mov
fwait
mov
jp
xchg
hlt
adc
jge
enter
and
pop
sub
mov
jns
ror
imulb
push
mov
popf
shl
or
dec
jl
pop
xchg
mov
inc
xor
or
dec
cltd
neg
pop
in
pop
fs
ret
add
jns
insb
imulb
je
jmp
jmp
iret
cli
shr
mov
mov
add
fwait
data16
sbb
out
jle
or
push
mov
push
ffreep
es
clc
das
pop
faddp
sub
mov
xchg
dec
ret
gs
fmul
cld
dec
pusha
lea
outsb
mov
fcoml
daa
and
flds
push
mov
dec
scas
mov
push
arpl
or
in
inc
pop
xchg
popf
push
dec
daa
add
jmp
push
cltd
jecxz
and
call
add
enter
lahf
add
movl
sub
stc
hlt
js
cmp
sbb
cmpsb
sahf
int3
cmp
insl
outsl
gs
aas
enter
jmp
push
mov
push
mov
xor
xlat
cmp
mov
mov
xchg
loopne
dec
test
ds
repnz
stc
add
dec
test
out
inc
xchg
sub
movsb
mov
cmpsb
and
and
clc
jecxz
dec
sub
push
dec
inc
mov
adc
pop
rol
jecxz
lods
sub
pop
or
mov
cltd
sub
push
gs
shll
inc
sbb
lods
dec
outsl
fwait
push
add
aas
daa
aad
scas
mov
rorb
lods
int3
sub
and
lahf
lret
inc
fstps
sub
xor
sti
scas
jp
daa
push
dec
xchg
fs
mov
push
insl
js
pop
mov
ja
jge
pop
lahf
push
rorl
jle
out
mov
dec
sbb
xchg
mov
sub
or
fildll
or
inc
shll
sub
roll
ljmp
pop
mov
add
cmp
mov
movsl
push
in
imul
xor
jecxz
cmpl
fldenv
sbb
pop
repz
sbb
fdivl
rcr
push
fsubl
out
mov
xor
xor
xor
aas
jmp
imul
ja
popa
inc
pop
mov
outsb
shrl
addr16
pushf
dec
test
xor
imul
in
or
pop
sahf
pop
in
pop
dec
std
jns
and
jge
sbb
movsl
cmc
iretw
test
int
sbb
insb
cmc
push
test
mov
xchg
rorl
adc
out
xor
jbe
push
cli
enter
test
sub
iret
call
xchg
push
test
inc
inc
js
push
push
not
push
fnstenv
mov
xchg
stos
ret
and
imul
js
push
xor
insl
sbb
int
loope
sub
jns
icebp
xchg
cmpsb
fs
push
or
xorb
xchg
mov
fsub
sbb
divl
push
enter
pop
insb
jg
sarb
or
dec
movsl
cmpl
xchg
pop
scas
push
mov
inc
or
aam
pop
inc
repnz
test
in
push
pop
cmc
xchg
mov
push
mov
imul
stos
mov
mov
cmp
or
into
xor
loopne
in
mov
insb
sub
xchg
sbb
mov
out
scas
mov
cmp
test
cmp
mov
jmp
mov
fld1
lds
and
arpl
pop
jo
jno
mov
adc
int
sub
push
mov
lret
fisttpll
adcl
jmp
xor
sbb
stc
jg
fisubl
push
xchg
das
jmp
das
dec
out
js
sahf
jle
or
xchg
mov
inc
shll
xchg
sar
outsw
and
sbb
bound
call
xchg
pop
cmp
movl
mov
adc
push
in
mov
inc
mov
jge
xchg
addb
sub
xchg
imul
cwtl
dec
lds
insl
sbb
cmp
xor
xchg
stos
adc
jnp
dec
xchg
jnp
lods
mov
jp
push
xlat
xchg
lcall
inc
push
inc
dec
jns
test
in
fmuls
fwait
inc
mov
aad
sub
push
cmpsl
test
hlt
mov
cmp
test
dec
pop
test
ja
xlat
jae
mov
pusha
xchg
testl
clc
mov
jne
lock
repz
gs
sti
insb
adcl
test
mov
cmpl
xchg
add
xchg
xor
je
shlb
mov
sahf
fcmove
sub
negb
ret
cmp
movsl
out
movsb
inc
or
lods
adc
inc
xor
push
repnz
ss
xchg
adc
xor
pop
and
cmp
scas
mov
in
cwtl
ja
add
sbb
jo
scas
xchg
pop
pop
push
push
mov
cli
clc
dec
xorb
loope
xchg
pop
pop
aad
leave
sbb
adc
dec
mov
dec
into
xor
inc
call
xchg
shrb
aad
cmpsb
pop
ror
xchg
inc
js
pusha
test
adc
inc
cmp
inc
inc
insl
mov
lds
movsl
mov
pop
xchg
std
cmp
in
xor
fmuls
cmp
popa
flds
imul
mov
movsb
stos
insl
xorl
into
inc
rcr
add
mov
and
jne
cmp
sbb
es
mov
jnp
jl
negl
scas
add
aaa
cmp
cmp
ret
lods
loope
repz
inc
int
cmc
pop
jbe
repz
add
call
xlat
or
fstpt
mov
cld
mov
rorb
or
into
iret
ljmp
cltd
mov
xorl
andb
lahf
sbb
je
jno
bnd
jge
mov
aaa
test
push
add
leave
dec
arpl
divb
fstpt
test
cmp
loopne
ds
pop
pop
sbb
pop
aaa
cmc
sahf
jnp
out
ja
sub
pop
mov
mov
mov
push
sahf
or
push
dec
jmp
faddp
sub
inc
pushf
std
and
insb
lret
jnp
in
outsl
lds
sahf
popf
mov
lret
fs
arpl
shl
pop
mov
mov
popf
sbb
mov
jno
mov
inc
out
repnz
dec
mov
lcall
push
test
andb
js
test
sub
loope
adc
int
shl
rol
daa
scas
xor
ret
adc
add
cmpsb
pop
fidivrl
xor
insb
cltd
sbb
adc
out
and
push
dec
add
xor
mov
dec
icebp
leave
jbe
push
mov
adc
mov
fnstsw
sub
aad
xlat
mov
dec
mov
mov
pop
inc
call
shlb
mov
mov
xchg
popa
inc
dec
jp
pop
mov
xor
xor
mov
cmp
jae
pop
mov
adc
sbb
sub
xor
in
xchg
ds
adc
sbb
js
sub
mov
pop
lahf
dec
cli
stos
jecxz
cmp
inc
mov
lret
jmp
push
fwait
sar
orw
mov
xor
movsb
and
aas
sbbl
mov
pop
sbb
mov
mov
lods
dec
dec
jp
jp
sbb
xchg
fldenv
std
cmp
jno
out
lds
add
push
movsb
imul
fisttpll
push
ret
add
adc
mov
outsb
inc
adc
push
scas
cli
push
fisubrl
push
mov
sbb
roll
sub
sbb
mov
push
imulb
cmp
out
clc
fstpt
mov
jg
test
jle
mov
out
or
in
sbb
aam
xor
xor
out
push
test
subb
stc
pushf
pop
aaa
dec
xchg
inc
cmc
ja
xor
xchg
test
xchg
add
gs
pop
popf
lock
sahf
xor
add
cwtl
sub
jbe
andb
or
or
mov
imul
sbb
xchg
adc
jno
jg
sub
xchg
push
jmp
pop
or
lea
inc
xchg
push
and
or
popl
inc
pushf
xor
sbb
pop
and
movl
mov
dec
or
ret
test
leave
sbb
xor
pushl
movsb
jns
sti
xchg
jo
cmp
lock
mov
mov
or
push
movsb
pop
pusha
jge
mov
mov
adc
jns
outsl
rcrb
jnp
push
int3
push
xor
xor
cmp
ljmp
mov
add
fdivl
lods
sbb
in
in
movb
xlat
sub
xchg
mov
fisubs
pop
mov
cwtl
imul
jno
repnz
or
sbb
ljmp
out
addb
fiaddl
push
loope
out
pop
rolb
jg
aas
mov
xchg
sarb
pusha
pop
ret
je
mov
aad
pop
push
sub
fimull
add
and
ret
mov
add
cld
sub
pop
aaa
arpl
mov
or
lret
jb
lea
js
and
lret
cmp
adc
pop
in
insl
lods
scas
sub
sahf
dec
setns
xchg
push
pop
dec
or
lea
test
cmp
test
ja
lods
stc
adc
inc
adc
and
ret
sub
in
in
or
mov
repz
test
xorb
ljmp
cmc
and
lcall
cld
scas
icebp
call
sbb
xor
js
jg
mov
popa
mov
cmp
mov
dec
mov
adc
es
cli
int3
push
fnsave
mov
xor
stc
push
mov
sbb
inc
xchg
mov
sub
icebp
hlt
decb
xor
aad
mov
adc
ret
pop
inc
das
inc
imul
push
mov
mov
aas
mov
test
dec
repz
test
mov
mov
cltd
stos
lret
je
adc
sub
adc
aam
dec
cmp
add
dec
mov
xor
mov
add
sahf
or
sahf
cmp
mov
xchg
mov
or
jle
xchg
mov
jcxz
std
jb
jbe
adc
or
pushf
imull
sbb
jbe
or
mov
pop
jns
shl
add
pushf
or
inc
push
pop
in
mov
pop
fldenv
cmp
insl
cmpsb
testb
out
pop
push
in
xor
jo
fs
jnp
mov
jmp
fabs
test
std
lahf
loopne
sub
jns
js
mov
into
imulb
push
insl
jnp
cmp
fcomps
and
shll
into
in
push
out
push
mov
jecxz
stc
call
test
lea
cmp
cmp
aaa
jl
repnz
sub
fimuls
xchg
jae
testl
xlat
mov
cmp
shrl
icebp
dec
bound
push
pop
add
jecxz
lret
out
add
pop
jae
in
roll
jae
push
aam
leave
outsb
mov
cmp
push
xor
js
dec
mov
cld
shl
adc
rolb
mov
push
ret
push
rcrb
ret
push
xor
sbb
dec
jg
cmp
adc
clc
adc
ja
and
adc
out
subl
rclb
adc
mov
pop
jo
loope
je
test
divb
daa
test
lods
mov
mov
and
pop
scas
pop
shl
psrlw
lods
js
pop
stos
nop
xchg
pop
fwait
mov
pop
mov
push
adc
js
fstpl
or
out
loopne
pop
cmc
sahf
mov
add
ja
mov
mov
lods
das
out
shl
dec
into
movsl
xor
add
mov
into
sbb
fwait
pop
xorb
inc
outsb
add
jb
lods
and
mov
pop
cmp
dec
cwtl
xchg
fists
fisubrl
in
lcall
repnz
sub
sahf
aaa
leave
ficoml
xchg
mov
or
shl
mov
dec
xchg
cwtl
push
xor
lahf
mov
cmc
pop
jo
pop
int
push
sub
xor
addl
xchg
sub
sub
into
es
mov
clc
push
mov
jne
out
mov
loopne
inc
xchg
push
xchg
test
int
fucom
ljmp
fs
push
cmp
push
inc
xor
and
push
outsb
inc
adc
adc
xchg
lods
sbb
cmp
jno
mov
mov
lahf
jns
stos
push
data16
xor
mov
or
pop
mov
inc
sub
jb
inc
fwait
aas
sahf
jmp
xchg
cmp
cwtl
scas
push
out
test
pop
mov
and
out
sbb
pushw
or
in
sti
lods
jmp
cmp
cmp
mov
fmuls
lds
cmp
push
mov
test
xchg
push
arpl
cmpsb
mov
shl
push
cli
test
je
mulb
xlat
mov
ljmp
fsqrt
incb
sub
clc
pushf
pop
enter
dec
out
push
pop
out
test
and
bound
sub
test
xor
push
clc
andl
or
dec
xchg
xor
mov
rcr
shrb
repz
xor
mov
data16
test
push
push
das
push
stos
ljmp
imul
dec
scas
xorl
scas
cltd
les
mov
test
or
shrb
push
jl
and
movsl
arpl
or
addl
aam
cmp
pop
sti
ret
cld
mov
outsb
das
movsb
jmp
mov
data16
cwtl
xchg
mov
mov
dec
mov
lcall
jo
dec
insl
xor
inc
icebp
jne
pop
iret
sbb
pop
push
jb,pn
and
xchg
jae
fnsave
ljmp
jns
add
mov
mov
sub
sbb
add
pop
pop
adc
sub
adc
sbb
mov
xor
push
cld
lahf
mov
ficoms
es
lds
jne
dec
test
fisttpl
dec
mov
dec
sarb
jno
loope
and
loop
push
popf
fcomip
popl
inc
movsl
icebp
iret
push
fsubrl
and
out
dec
cmp
jmp
push
int3
adc
pop
fmull
mov
sbb
inc
pop
mov
call
mov
arpl
and
mov
mov
repnz
cmp
call
out
sub
mov
xor
and
xor
pop
out
call
jmp
sbb
cli
ret
das
scas
add
int3
mov
icebp
xor
push
dec
mov
imull
jb
push
rorl
sub
jb
ds
lds
inc
xchg
push
or
inc
cli
movsbl
lods
aaa
dec
push
sub
and
push
push
pop
scas
ret
mov
mov
aas
es
jle
lahf
loope
sarl
shlb
push
cmp
fcoms
cmp
dec
sti
jno
xchg
xchg
fimuls
cwtl
dec
das
sbb
cwtl
lret
jo
and
int3
sbb
inc
data16
les
pop
ljmp
je
movsl
leave
add
push
mov
outsb
test
inc
push
imul
add
daa
jae
aam
pop
ret
cmc
rclb
mov
jge
lock
leave
lock
sub
cmp
jnp
mov
mov
dec
sbb
dec
loop
pushl
jae
ds
testb
adc
out
mov
test
fnstcw
or
cmpl
jbe
into
jo
pop
imul
fs
sub
into
jns
mov
rclb
lods
pop
pop
adc
xor
movsb
dec
dec
jb
dec
jno
pushf
xchg
lods
aaa
movsb
pop
xor
pop
sbb
cmp
jl,pn
pop
stos
mov
nop
cmp
jle
lea
add
xlat
lcall
bound
xorb
imul
aaa
xchg
movsl
fcompl
je
mov
icebp
xchg
jbe
arpl
push
and
mov
out
sbb
sub
adc
jns
sahf
add
std
fldl
dec
jecxz
jno
lods
into
loop
xor
aam
shrb
adc
out
fnstcw
inc
mov
xchg
cmp
mov
adc
cmpl
orb
fs
push
and
incl
push
push
cwtl
mov
push
iret
std
fs
push
adc
icebp
xorb
pop
frstor
scas
movsl
jmp
xchg
ja
lock
push
xchg
iret
push
mov
mov
hlt
push
lods
pop
sbb
fucomip
mov
addr16
pushf
int
xchg
scas
mov
inc
out
add
dec
out
gs
leave
in
adc
xor
jb
lahf
push
std
xchg
loopne
inc
jns
mov
movsb
repz
sub
idivb
inc
jns
inc
adcl
mov
lret
push
pop
mov
push
rolb
fldt
mov
add
sbb
testb
orb
imul
icebp
or
test
aas
int3
mov
mov
sub
and
int
dec
lar
rorl
popf
imulb
inc
push
xchg
out
into
popl
pop
out
xor
add
push
pop
fistps
inc
in
movsl
add
add
mov
push
mov
and
nop
clc
shll
subl
enterw
add
imul
sub
mov
adc
jne
jle
sbb
stc
mov
test
push
sbb
repnz
jg
mov
mov
dec
repz
mov
push
cli
mov
inc
adc
push
leave
cmc
pushf
aad
cpuid
lock
jmp
test
fucom
push
movsb
sti
mov
ljmp
out
arpl
and
movsb
gs
sbb
jl
or
cmp
dec
ja
dec
or
pusha
mov
mov
in
out
test
subl
mov
mov
insb
aad
lret
add
mov
lods
push
imul
xchg
jmp
lret
jecxz
xchg
mov
mov
dec
fadds
test
mov
ret
mov
pop
ljmp
xchg
jo
cmpsb
mov
lea
add
imul
pop
jg
adc
jnp
add
sub
pop
test
or
push
std
and
jp
mov
or
insb
mov
in
push
sub
subb
iret
loop
mov
mov
loope
xor
sub
lods
xor
outsl
scas
cmp
mov
ret
es
mov
mov
or
icebp
jecxz
mov
mov
enter
lret
cmp
sub
ss
movsl
add
jle
pop
mov
push
lods
out
cli
cmp
testl
adc
pusha
lds
loopne
inc
subl
jno
jne
push
lods
cwtl
mov
xchg
pop
fimuls
mov
inc
rorb
int3
sahf
lret
or
pop
sub
add
mov
push
cmc
mov
mov
movsb
jbe
inc
outsl
sbb
pop
in
pop
xchg
pop
lods
jg
add
xor
xor
dec
sti
cld
lods
cmpl
popa
gs
sbb
insl
cmpsl
and
xchg
std
iret
adc
sbb
sub
add
js
push
xor
mov
pop
nop
add
sub
cs
pushf
push
insb
das
cmp
rcrb
mov
fsubl
mov
ljmp
cmp
arpl
aaa
xchg
shll
dec
or
fisttpl
cld
into
pop
sbb
loop
sub
push
cmp
and
sbb
pop
or
mov
push
enter
xchg
dec
cmp
lea
stos
push
fbstp
pop
pop
ret
daa
sbb
outsl
ret
jo
fsts
push
dec
loopne
imull
addr16
jb
mov
in
mov
inc
dec
sarl
mov
mov
mov
hlt
push
ret
mov
mov
dec
push
xchg
fmull
jb
xchg
addr16
insb
jg
push
push
xor
int3
pop
sbb
cli
std
sbb
cmpsl
sub
xor
imulb
push
mov
push
dec
cmp
sahf
in
push
push
push
sbb
jp
xchg
out
jp
sbb
cmp
ret
pop
and
leave
mov
fldt
adc
cmc
and
cli
mov
mov
jns
subl
jnp
stos
mov
sbb
push
and
mov
insl
push
adc
stc
les
sub
lea
bnd
sbb
or
dec
sahf
dec
lahf
dec
inc
imul
jb
push
into
in
cmp
dec
and
in
ficoms
xchg
push
mov
cltd
or
mov
sbb
inc
add
adc
loope
pushf
cmc
insb
dec
lock
sub
dec
lret
fisttpl
mov
nop
fnsave
aas
jno
test
cmp
pop
cld
sbb
dec
clc
xchg
shlb
int
in
mov
rorb
sbb
mov
sbb
repnz
cwtl
clc
and
mov
jns
cwtl
ja
pop
pop
es
out
adc
lret
fidivl
xor
mov
mov
iret
pop
mov
icebp
mov
lds
lea
imul
add
jge
cltd
xorl
aaa
cmp
sub
jle
xchg
icebp
sbb
ds
adc
inc
push
shlb
loope
adc
jmp
pop
lahf
and
aam
push
sbb
int3
lret
push
mov
add
rcll
cwtl
pop
lds
outsb
ret
cmpsl
shlb
call
les
add
nop
movsl
rcll
out
je
push
cmp
mov
stc
dec
push
mov
adc
lods
jno
shll
and
and
shlb
sub
or
cmp
inc
leave
in
cmp
inc
cltd
mov
xchg
adc
movsb
xchg
dec
adc
sbbb
push
jb
cmp
aas
mov
cmpsl
lods
test
je
rcrl
repz
pop
test
cmp
mov
mov
pop
stos
pop
cmpsb
mov
in
sbb
push
test
mov
sbb
int3
out
jnp
push
repnz
push
inc
repz
popf
fistl
xor
jb
xlat
jns
adc
and
jge
sbb
mov
stos
push
pop
sub
and
sarl
fdivs
icebp
sub
es
inc
push
inc
mov
or
ja
jp
adc
inc
inc
jp
out
repnz
mov
cli
lret
inc
inc
js
xorl
cmp
pop
nop
stc
stos
and
sbb
dec
lret
mov
js,pt
mov
leave
in
cli
imul
lods
and
out
sub
or
sub
ret
fdivrl
pushf
xchg
ror
xorl
repnz
fs
stc
int
sub
sbb
jnp
int3
cltd
ret
test
andb
push
jl
jae
dec
cmc
out
subb
shll
sbb
mov
sub
les
das
js
pop
fwait
and
fimuls
ror
test
dec
aam
inc
jmp
pop
mov
int3
mov
imul
ds
dec
jecxz
popf
addr16
in
mov
lcall
movzwl
dec
in
and
pop
or
cmp
repz
dec
dec
adc
mov
add
add
loope
sbb
mov
aaa
mov
inc
and
adc
sbb
stos
pop
fwait
into
cwtl
pop
int
popf
test
sub
or
jl
pushf
clc
inc
pop
pop
stc
sbb
decb
in
mov
mov
xor
jle
pop
ljmp
push
enter
xor
dec
and
pop
js
stos
mov
mov
xchg
push
loopne
mov
mov
push
jbe
notb
bound
xor
popa
xchg
test
roll
cmp
out
xor
aaa
mov
into
in
pop
inc
repz
imulb
mov
inc
jl
mov
jb
ljmp
imul
mov
add
aam
iret
pop
call
mov
sub
mov
inc
cmp
pop
cli
sarb
je
inc
adc
movsl
nop
pop
pop
mov
rclb
mov
insl
fisttpll
ss
std
negb
push
inc
and
jle
inc
xchg
mov
loop
repz
mov
sub
and
lret
and
dec
mov
inc
xchg
and
push
mov
test
xchg
mov
cwtl
inc
and
div
imul
mov
sarb
bound
mov
cmp
pushf
sti
adc
xor
out
aad
sbb
xorl
lods
mov
aas
lea
in
scas
and
mov
mov
and
pop
or
bound
into
lods
push
sub
push
inc
scas
out
aaa
push
fs
in
shrb
and
push
loopne
pop
jp
lret
loope
push
nop
cli
mov
loop
jnp
jbe
mov
pop
cmp
jne
jno
jns
mov
jo
inc
enter
jg
hlt
or
xor
jl
xchg
mov
mov
insl
xor
rcrl
sub
lret
sbb
insl
dec
dec
and
test
pop
pop
int
xor
test
mov
ret
adc
dec
sbb
and
sbbb
jge
jp
daa
popf
icebp
sub
fsubrp
sub
repz
mov
xchg
adc
push
sbb
and
push
jecxz
loopne
sbb
xchg
sbb
cmpb
xchg
push
fiadds
and
ljmp
dec
out
outsb
sbb
test
dec
int3
push
push
in
ds
aaa
sbb
addb
faddl
mov
repz
loop
mov
xorb
push
pop
push
inc
push
int
imul
jl
aaa
and
je
adc
xor
push
loop
and
cmpsb
aas
int3
daa
add
bound
mov
es
les
adc
insb
jp
jb
jg
mov
in
pushf
in
dec
push
sub
repz
jno
mov
repz
loope
repz
cmp
out
loope
fistps
adc
or
pop
in
outsl
in
push
mov
or
inc
ja
or
xchg
inc
mov
sbb
jmp
xor
jp
std
stos
xchg
shlb
sbb
clc
sbb
sub
adc
cmp
fwait
mul
mov
stos
xorb
or
xchg
bound
lods
pop
sbb
add
cmp
add
out
jle
outsl
popf
shll
cmpsb
mov
pop
jp
rcr
jno
pop
dec
sub
lea
sbb
cwtl
or
inc
sub
popa
jl
inc
iret
mov
pop
mov
mov
xchg
fisubs
add
pushf
and
lea
arpl
mov
jmp
jecxz
cld
ss
das
and
pop
cmpsb
mov
or
ljmp
out
sbb
imul
testl
sbb
les
mov
aas
popa
jbe
in
leave
sbb
xchg
gs
pop
les
pusha
or
mov
or
aad
xor
cmp
push
xor
and
xor
jo
or
test
sbbb
call
imull
sbb
imul
imul
and
mov
test
out
sbb
and
dec
pop
idiv
stos
or
mov
in
cmc
scas
sub
inc
push
xchg
pop
push
pop
fmuls
jg
cs
jae
int3
push
xchg
sbb
imul
sub
push
sbb
test
mov
aas
and
mov
ljmp
dec
dec
and
adc
icebp
xchg
lret
inc
add
jbe
mov
dec
dec
in
mov
div
test
stc
divl
dec
mull
xchg
icebp
pop
clc
mov
insl
test
fwait
lods
sbb
stos
lock
add
or
add
push
and
xlat
inc
add
mov
lret
jmp
inc
repz
sar
cmpb
mull
ficomps
pop
mov
dec
cs
inc
in
pop
push
cmpsl
nop
cmp
jmp
movsb
push
pop
push
jecxz
xor
pushf
pop
xorb
outsb
nop
xchg
adc
aam
mov
inc
inc
rorl
dec
fdivrs
dec
xchg
add
add
rcll
mov
scas
popf
dec
loopne
mov
ja
inc
cmpsl
bound
inc
outsl
repz
add
std
lock
repnz
and
and
xchg
subb
mov
enter
movsb
and
mov
xor
fs
int
push
cltd
sbb
dec
cmp
jns
loopne
and
mov
fisttps
cli
and
mov
cmpsl
mov
push
push
lods
push
or
or
add
pop
sbb
pop
addb
push
or
mov
inc
and
xor
lock
mov
lret
and
sbb
fwait
inc
xchg
pause
jmp
stos
imul
push
fdivs
cmp
mov
es
mov
jbe
popa
lret
push
dec
pushf
out
imul
mov
repnz
popa
add
pop
in
mov
push
fistpl
hlt
push
jge
lahf
fisubrl
add
cmpsb
fists
shlb
into
cmc
and
and
hlt
orl
lret
je
fsubrl
jns
enter
repz
mov
cmp
out
adc
cwtl
out
lods
lock
adc
sub
push
sbb
lcall
sub
repnz
fs
rcr
movsb
call
push
andl
push
adc
cld
lahf
xchg
push
push
stc
repnz
lret
cmp
mov
mov
in
add
icebp
xor
mov
in
jle
and
ficomps
into
push
jbe
leave
fistl
or
xorb
dec
jno
pop
xor
lahf
adc
out
testl
jmp
clc
dec
xchg
xchg
cli
jnp
mov
dec
mov
sbb
cmpb
sub
xor
pop
ja
addr16
jbe
and
lret
sbb
les
sarl
dec
mov
push
scas
mov
fistps
jl
xchg
add
sbb
cmp
das
xlat
enter
sub
sti
imul
jmp
pop
xchg
or
loop
dec
cmp
fisubrs
or
aad
mov
hlt
sarb
mov
scas
clc
sbb
or
fdivp
fwait
mov
popf
jne
or
notw
aas
sub
jno
aad
incb
or
cmp
test
movsb
push
dec
paddw
and
jns
inc
dec
out
inc
jo
add
xor
jecxz
scas
xchg
pop
subb
push
loopne
jae
xor
mov
mov
push
xor
cwtl
xor
jg
andl
fucomi
pop
nop
loop
aam
cmp
push
jno
mov
jns
outsl
sahf
pop
ficoms
mov
rcrb
inc
leave
pop
aaa
fwait
aad
add
inc
leave
nop
test
outsb
int
or
loope
and
bsr
cwtl
cmp
lret
or
push
or
loop
negb
test
adc
pop
js
mov
pusha
addl
les
fldpi
test
xor
fsubs
jnp
rorb
cld
out
jb
mov
jb
or
adc
orl
dec
jns
cltd
push
adc
adc
xor
mov
lods
or
pop
vpmacssdd
add
mov
mov
and
lods
xlat
xor
dec
xor
aas
and
xor
jle
pop
jbe
sahf
dec
cmp
cmc
ja
and
xor
ja
aam
or
jne
out
add
dec
pop
push
pop
int3
cmc
sub
jne
mov
and
add
push
cs
ja
pop
jecxz
sub
mov
fsubl
neg
dec
enter
and
repnz
ljmp
pop
daa
ret
nop
mov
clc
ret
push
scas
jle
mov
lret
or
mov
test
mov
push
mov
popa
push
sbb
mov
push
pop
fsts
test
in
divl
adc
adc
hlt
outsl
test
mov
clc
fwait
call
stos
aaa
cli
lea
hlt
pop
movsb
adc
cmc
dec
sub
push
add
stc
leave
divb
xor
shll
addb
add
dec
pop
in
aam
fcmovbe
pop
test
clc
imul
cmpsl
hlt
ss
mov
jae
mov
xchg
jno
outsl
shrb
roll
in
dec
mov
inc
cmp
xor
adc
or
push
push
je
fwait
cmp
mov
int3
sti
sub
mov
sbb
mov
sbb
int3
clc
or
fisubl
jmp
jecxz
mov
lahf
pop
pop
int3
sub
jne
push
fs
std
mov
mov
xor
pop
fmull
loope
test
data16
hlt
jo
arpl
push
int3
sti
leave
sbb
sub
sbbl
jge
cld
push
ret
bnd
xor
push
jnp
ljmp
pop
mov
scas
fsts
in
cmpsl
xor
daa
shrl
jmp
es
jnp
rclb
aad
loop
add
mov
stos
mov
rcrl
and
ds
mov
mov
fdivl
jno
sub
or
adc
insb
shr
outsl
shlb
out
push
int
outsl
dec
in
clc
out
fwait
aaa
sub
mov
mov
or
mov
dec
rolb
mov
xchg
adc
mov
cmp
adc
or
add
ret
pushf
jmp
or
pop
jge
jl
cltd
fucomip
xchg
sti
jne
ss
cmp
mul
mov
jmp
xchg
fdivs
mov
mov
jp
mov
and
adc
mov
repz
cmp
jae
mov
adc
ret
outsb
jmp
add
mov
cwtl
cmp
mov
into
shlb
jle
cmp
add
lcall
push
ss
lret
out
les
xlat
jns
jg
pop
cwtl
xchg
jb
push
cmp
xor
sbb
push
cmp
sbb
inc
loope
scas
and
xchg
pop
push
and
ss
pop
shlb
lret
xchg
insb
pop
xor
out
sub
mov
mov
test
jns
cmp
sbb
xchg
loope
in
in
sub
lods
sub
stos
pusha
lods
jns
in
mov
jae
imul
test
xor
imul
lret
mov
ljmp
sub
mov
pushf
inc
sub
push
cmc
sub
lcall
fnstenv
jns
mov
rcl
jns
sbb
dec
mov
or
gs
test
lock
and
or
mov
cmpsl
adc
mov
and
outsb
inc
xor
in
jnp
mov
push
jmp
xchg
out
adc
xor
filds
cmc
xchg
jnp
or
add
in
sbbb
sub
stos
inc
push
stc
dec
push
xor
shr
test
orb
push
mov
out
enter
push
mov
xchg
and
mov
and
out
addl
repz
movl
lret
jp
cmp
adc
clc
jno
data16
dec
ss
or
adc
ror
push
int
push
cmp
setne
push
push
push
and
cmpsl
xor
mov
xor
fadd
jge
lds
mov
testl
mov
and
lods
dec
fwait
popa
insb
jp
sub
out
fdivs
int3
push
and
dec
lahf
inc
cmp
mov
movsl
mov
fnstenv
test
mov
sbb
pop
or
mov
and
sub
out
sbb
mov
inc
dec
repz
fs
aam
cs
xlat
sub
insb
jg
sti
repz
cmpsl
sub
fldt
dec
mov
jle
mov
pop
lock
icebp
dec
cwtl
std
push
mov
fstpt
adc
cmp
aam
dec
aad
enter
faddl
push
mov
aaa
jge
pop
sbb
dec
sub
das
mov
jb
call
mov
rorb
mov
in
out
loopne
imul
fwait
popf
add
sub
loope
sahf
mov
sbb
push
in
push
add
lock
push
fbstp
jne
ret
and
ret
mov
jp
ja
add
bound
adc
or
mov
repnz
sbb
jp
or
stc
dec
test
shlb
test
pusha
imul
lret
pop
sbb
cltd
pop
cltd
divb
aas
xchg
movsl
jecxz
testl
das
dec
stos
cmp
mov
testb
adcb
inc
add
cld
sub
sbb
movsb
loop
xor
mov
cli
xchg
pop
xlat
hlt
add
negl
mov
jno
inc
out
sub
adcb
adc
insl
bound
stc
or
ret
inc
jae
repz
loopne
fstps
xchg
movsl
push
and
jl
mov
fisttpl
add
int3
test
add
lret
or
aad
pop
lea
xchg
dec
mov
add
inc
and
jl
jecxz
ss
aas
movsb
daa
ret
jo
mov
iret
mov
leave
xor
dec
cs
out
jl,pt
xor
inc
add
lret
or
sbb
test
mov
sbb
imul
cmp
lods
test
shrl
hlt
mov
sub
sbb
push
cmpsl
fcmovnb
sahf
or
jle
test
and
mov
cmc
xor
jno
mov
xor
lahf
rclb
or
dec
push
adc
xor
sub
sbb
lock
jbe
das
cmp
adcl
push
das
mov
push
mov
inc
ds
ja
mov
out
or
push
in
adc
movsl
or
leave
xchg
ret
and
insl
jp
repz
cmp
fsubrl
jae
rcll
mov
fisubrl
addl
sub
mull
loopne
out
adc
dec
push
cmpsl
mov
hlt
hlt
inc
bound
arpl
or
clc
fsts
fmul
xchg
jb
mov
nop
divl
iret
xchg
arpl
sbb
testl
inc
out
rolb
loop
jmp
das
pop
pop
pop
xor
mov
loop
addb
push
sub
xor
in
push
cmp
or
mov
int
in
pop
fidivrs
sub
lods
add
or
add
fs
cld
jl
test
push
into
or
pop
sub
add
outsb
inc
lock
cmp
scas
cmp
pop
call
lods
sbb
movsb
adc
les
add
sbb
cmp
push
pushf
int
jne
stos
sbb
aam
cmp
dec
lock
dec
icebp
test
arpl
jns
xchg
in
daa
test
xchg
sti
jo
sub
dec
cmp
insb
orl
gs
xor
repnz
inc
scas
xor
leave
cmp
lds
jnp
test
pop
and
mov
aas
sub
repnz
mov
mov
je
and
cmp
xchg
add
mov
andl
movl
imull
ret
out
dec
and
fdivrl
mov
adc
cmc
out
inc
lods
ds
fs
repnz
stc
mov
popf
dec
sub
pavgb
cmpsb
ja
sub
cld
push
inc
inc
sub
repz
mov
or
ljmp
lcall
out
scas
fisubl
into
daa
out
fs
cmpb
aaa
pusha
outsl
lods
repz
pop
test
out
int
adc
repz
jne
jno
mov
iret
lods
mov
adc
lds
pop
jbe
movsl
sub
test
mov
iret
dec
adc
test
into
xor
fwait
psubusb
xorl
jg
pop
fldz
sbb
in
cmp
cs
pop
xor
mov
pushf
aad
mov
test
lahf
mov
data16
sub
jbe
jecxz
sti
lret
sbb
mov
lods
xchg
mov
mov
push
cld
dec
sub
xor
xor
mov
jne
fwait
out
inc
ja
add
outsl
cmp
aad
aad
cmp
frstor
cli
je
lods
push
xor
repz
and
ret
push
dec
mov
push
lcall
jecxz
aam
mov
mov
fwait
xchg
push
and
push
lcall
add
movsb
mov
fmul
dec
jg
ja
inc
nop
mov
lahf
jne
mov
mov
adc
aad
scas
xor
icebp
into
or
mov
stos
cmp
insl
cs
cmp
andb
rcrb
ret
push
mov
repnz
in
adc
pop
add
mov
in
insb
add
jne
dec
fsubrl
mov
push
xor
movl
mov
pop
cmpsl
repz
pusha
repnz
imul
mulb
xlat
in
test
dec
icebp
and
testl
adc
jns
xchg
and
ret
push
dec
in
jo
cmc
dec
dec
sbb
adcl
xor
xchg
mov
dec
push
pushl
dec
xorb
outsb
in
icebp
xchg
bound
inc
and
push
idiv
sarl
add
push
insl
push
cmp
mov
movsl
call
orl
outsb
jl
push
add
sub
or
pusha
movsb
mov
pusha
mov
xchg
lcall
pop
cltd
sub
jo
adc
int
or
jge
inc
in
ffreep
je
fmul
rolb
and
iret
loop
pop
decb
jp
jg
imulb
jo
test
xchg
mov
mov
add
lcall
push
das
sbb
fsubrs
pop
or
add
mov
inc
das
pop
inc
idivl
cltd
shlb
xchg
jmp
jns
outsb
aad
jne
insb
or
mov
pushf
out
xchg
leave
fildll
outsl
jne
sti
pop
push
test
fistpl
pop
mov
ret
sbb
fwait
xlat
mov
cmpsb
ds
popf
jecxz
mov
xchg
idivl
test
sbb
cwtl
xor
mov
sub
subl
imul
mov
js
sub
and
adcb
adc
inc
inc
or
xor
xlat
inc
pop
xor
or
push
mov
xchg
jnp
push
pushf
jp
pop
fucomip
xor
not
add
sub
dec
outsb
ret
orl
push
test
test
or
push
mov
jb
scas
fdecstp
popa
and
scas
jne
mov
and
in
mov
es
push
rcll
xchg
out
in
adc
into
mov
jns
pop
js
xor
mov
or
pop
sbb
sub
adc
adc
xchg
add
xchg
sbbl
inc
es
iret
add
sub
ss
imul
out
iret
mov
push
adc
lcall
hlt
push
jg
lock
stos
push
cs
fistpl
outsl
lret
lea
aaa
jge
mov
test
pop
nop
xchg
in
ret
movsb
dec
or
jp
test
lds
xor
shlb
xchg
iret
stos
push
mov
lret
push
leave
mov
mov
sbb
rcl
out
test
sub
shlb
mov
fwait
lock
popf
sub
cmp
mov
dec
xor
and
push
adc
push
scas
fs
fmuls
xchg
mov
jne
fidivs
jno
cld
push
jl
frstor
iret
push
repnz
in
pop
jo
mov
aam
pusha
mov
dec
iret
dec
in
andl
mov
inc
aaa
fcomps
xorb
mov
add
xor
ds
cmpsb
jae
aaa
inc
fdivs
inc
enter
fucomp
outsb
popa
push
aas
adc
and
sahf
fildl
cli
or
cli
sbb
cmp
fnstcw
sub
inc
ds
xchg
flds
xchg
lods
push
rcl
data16
mov
or
jo
sub
ret
jnp
mov
mov
std
cmp
add
arpl
mov
stc
decl
mov
loop
int3
out
das
aam
fxch
loope
xchg
push
push
adc
aad
jecxz
dec
popa
cmp
push
jg
and
inc
sti
imul
xor
inc
add
mov
inc
jo
pusha
cmpsl
fs
adc
inc
repnz
mov
jae
das
hlt
ds
cli
jbe
addb
mov
lret
std
mov
sti
push
cmp
sbb
pop
mov
mov
cmpsb
or
fdivrp
roll
jecxz
out
inc
xor
sti
or
out
jmp
dec
fdivl
jmp
data16
pop
jl
cltd
pop
cs
cld
inc
inc
jnp
lea
roll
dec
push
sahf
and
imul
out
mov
stos
pop
dec
out
xor
add
ret
and
loop
jge
xor
mov
mov
jo
adc
xchg
jp
ss
insb
shlb
dec
stc
call
mov
bound
xchg
mov
dec
push
jg
xchg
insb
mov
dec
cmp
shrb
mov
xchg
out
fistpll
pop
sbb
and
cld
jecxz
repz
pop
iret
lods
hlt
sti
out
mov
leave
nop
sbb
inc
inc
pop
aam
imul
insb
push
dec
aam
negl
add
popa
sub
inc
hlt
test
pop
mov
sub
cld
fsubr
mov
push
xor
sub
dec
or
fdivr
lods
fcmovb
and
repnz
mov
and
jo
cld
or
pop
push
inc
imul
mov
xchg
mov
push
shrl
iret
test
dec
aas
push
scas
push
add
add
popf
stc
test
test
jg
enter
inc
lds
pop
imul
insb
pop
fldt
out
mov
xchg
sbb
scas
adc
fcomp
mov
add
jmp
mov
loope
subl
inc
sub
jae
movsl
cmovle
scas
add
add
push
jns
add
imul
addr16
sbb
gs
shll
xchg
shrb
or
or
imul
lret
add
dec
sub
loope
cmp
cmpsl
lahf
outsb
lret
push
mov
lods
mov
mov
cmpsb
dec
and
aas
iret
in
lret
fstpt
fimull
lcall
mov
push
mov
cmp
call
cmp
shlb
lods
js
cmp
cmpsl
xchg
jle
lret
imul
sti
aad
je
cwtl
ljmp
ret
cmp
pop
enter
shll
into
jo
mov
lods
or
xor
insl
mov
shl
mov
outsb
cmp
arpl
and
cld
gs
stos
popf
loopne
lods
cmpsl
lock
jecxz
xchg
cwtl
cwtl
xor
loope
imul
inc
sbb
add
xor
mull
cli
out
push
dec
stos
fidivrl
cmpsb
mulb
mov
sub
mov
cmpsb
test
out
pop
mov
adc
add
sub
mov
xlat
sbb
push
ret
lods
xlat
sarb
adc
add
pop
popa
aas
cmpsb
movsb
sbb
sub
mov
cmpsb
and
push
in
lret
test
adc
fisubrl
mov
imul
mov
fildl
mov
pushf
fmulp
jp
js
fmull
aaa
les
ret
xor
addr16
sti
aam
mov
mov
mov
or
mov
ss
clc
mov
std
jp
fwait
push
sbb
dec
ljmp
and
daa
or
inc
mov
push
mov
ljmp
sbb
push
outsb
mov
in
sub
enter
add
mov
inc
push
movsl
push
dec
stc
jns
je
xor
jg
inc
fisubl
jl
shlb
pop
movsl
fs
shlb
xlat
dec
cmp
pop
jmp
fidivs
lret
mov
cli
sti
test
stos
push
push
adc
inc
pop
add
lods
sub
mov
rorb
fistps
je
addr16
dec
stos
leave
into
xchg
jae
pop
in
mov
sub
out
and
popa
jmp
push
data16
scas
pushf
jp
push
inc
scas
mov
addl
testl
movsb
fs
mov
filds
shl
push
pushw
mov
aaa
arpl
pop
jle
cmp
push
push
test
imul
cli
cmp
cltd
aas
js
les
push
lahf
mov
fnstenv
aas
dec
cli
fucomi
scas
ficompl
insl
sub
mov
ret
popf
cmp
or
push
in
jle
fidivrs
das
mov
xchg
fsubl
add
outsl
pop
push
outsl
xor
fs
into
int3
mov
out
cmpsl
cmp
js
fwait
into
adc
sub
mov
and
cld
lods
sti
pop
and
jle
clc
lock
xor
lods
xchg
jp
out
loope
xor
add
mov
dec
mov
outsb
dec
dec
cmpsb
sub
pop
xor
xlat
dec
outsb
lods
rorl
fsubl
push
mov
sti
dec
int3
xchg
add
add
lea
lock
movsl
in
sbb
je
int
cmp
ljmp
ret
fwait
add
es
je
pop
fdivl
add
cmp
mov
jp
or
sub
dec
test
mov
call
sub
ret
rolb
sub
hlt
je
dec
pop
dec
lock
cmpsb
in
xchg
ljmp
je
les
jl
mov
call
ja
mov
xchg
adc
roll
mov
das
jg
fwait
inc
cmp
adc
rolb
incb
aas
mov
sti
scas
das
lret
sub
xchg
loope
cwtl
icebp
sub
cli
jb
mov
int3
and
popf
mov
test
imul
cli
bt
les
cwtl
mov
ljmp
addr16
fisttpll
cld
lret
mov
sti
adc
shl
andl
inc
xor
data16
arpl
in
mov
fwait
xchg
test
jge
dec
push
dec
int
push
mov
add
inc
imul
mov
stc
test
mov
cld
subl
call
lods
mov
imulb
ficoml
je
pop
shl
jle
xorl
test
lock
xchg
movsl
cwtl
dec
lods
mov
dec
jo
adc
ja
sahf
nop
mov
push
sbb
or
and
and
repnz
es
and
sbb
jp
jno
sbb
adc
sbb
ss
sub
sar
fldt
lea
jno
loopne
ljmp
js
movsb
pusha
xchg
jg
sbb
scas
and
repz
dec
jl
stos
jns
pop
push
or
mov
repz
daa
dec
lret
lods
pop
subl
push
std
inc
or
nop
push
fwait
enter
dec
pushf
les
inc
dec
cmp
dec
nop
inc
js
pop
mov
cmp
into
fnstcw
js
mov
test
sti
add
add
aaa
aas
mov
mov
aad
ja
iret
nop
add
dec
and
lock
lods
loope
jno
push
jl
mov
jmp
adc
cltd
movsl
push
mov
jo
shlb
mov
rolb
ret
push
in
cmp
dec
and
mov
mov
xor
mov
arpl
push
jne
ficomps
lret
jl
in
add
mull
xor
pop
inc
jge
loopne
and
leave
sub
test
cmp
test
loop
fildl
call
mov
dec
shlb
pop
subb
sbb
subl
jmp
pushf
jbe
stos
adc
add
mov
adc
in
inc
push
xchg
lret
push
ja
adc
mov
jmp
and
pop
mov
imul
insb
cmp
flds
and
scas
mov
or
push
mov
lahf
pop
mov
outsl
data16
imul
mov
or
push
fsubrs
nop
xchg
mov
xor
ljmp
fwait
pop
dec
adc
sbb
addr16
sti
fisttpl
jnp
add
ret
popa
jge
jb
and
inc
xor
cmp
add
lds
and
addr16
push
push
lcall
popf
inc
cli
out
dec
add
pop
stc
mov
mov
inc
push
pop
mov
cmpsl
les
popa
lahf
or
inc
das
mov
stos
lods
cmpsb
pushf
in
and
jnp
add
lock
inc
push
cmpsl
mov
loop
xor
pop
lahf
in
imul
adc
xchg
xchg
mov
jb
out
pop
mov
ret
ja
and
adc
into
and
test
jge
sahf
loope
adc
stos
jnp
out
rclb
xchg
inc
out
add
push
loop
fbld
xchg
jb
push
inc
adc
test
push
loopne
dec
adc
cwtl
sti
outsb
loope
and
mov
jecxz
rcr
adc
push
push
jno
std
mov
push
int3
push
cwtl
xor
adc
push
sbb
jg
or
ja
jnp
sub
iret
or
in
enter
sahf
lret
lret
xchg
insb
lods
mov
and
inc
sub
testl
mov
pop
rcrb
pop
arpl
push
or
xor
mov
cltd
jne
mov
or
xor
inc
stos
inc
push
fnstenv
insb
xchg
ja
add
push
ret
into
mov
lds
cmp
add
mov
test
loope
inc
rorl
pushf
sbb
push
mov
mov
mov
adc
mov
test
out
lods
push
notl
mov
ficompl
adc
outsb
push
pushf
jle
jo
sahf
inc
xor
xor
mov
clc
mov
lret
outsl
cmp
sbbl
lret
ret
in
js
dec
fbstp
stos
aaa
xchg
ja
test
xchg
xor
lahf
sbb
outsl
shlb
out
scas
mov
or
test
or
popa
dec
pop
je
pushf
jns
in
out
cmpl
jl
mov
stos
inc
aad
mov
cmp
mov
sbb
cmpsb
push
aaa
loope
jae
clc
sbb
pop
fcmovnb
inc
jae
hlt
repz
pop
jno
cltd
xchg
ret
ss
hlt
pusha
mov
adc
pop
jmp
cmpb
cmp
insb
pop
lds
push
scas
mov
mov
push
test
stos
push
stos
mov
or
xlat
int3
inc
fdivs
and
jg
sbb
fistl
cmc
test
gs
mov
push
les
divl
jns
in
adc
sbb
cmpb
inc
xor
lcall
lret
mov
roll
dec
sub
negb
jnp
and
and
jmp
aas
gs
lea
xchg
sarb
or
cmp
lret
in
fnstenv
cmp
daa
xor
pop
adc
mov
pop
lea
dec
insl
in
jle,pt
imul
mov
or
pop
data16
repz
sbb
or
mov
sbb
in
pop
cmc
cltd
fsubs
sbb
pop
andl
fidivl
imul
jle
push
loop
pusha
ret
or
xchg
fnstcw
lcall
std
mov
lods
rcll
push
sbb
popf
mov
cmpsl
mov
add
out
push
mov
pop
fidivrs
repnz
shlb
out
loop
or
pop
jg
mov
inc
lds
cmp
pop
adc
or
jecxz
incb
sahf
jp
lret
movsl
test
ret
iret
jbe
insb
push
xorl
lret
add
sbb
or
inc
push
add
push
dec
dec
fldcw
psubsw
sti
cs
xchg
mov
out
jb
sbb
cli
lretw
aam
addr16
fcoml
jae
dec
sbb
leave
lret
mov
xchg
mov
sahf
aam
out
out
xor
in
inc
je
xchg
fdivl
dec
adc
lea
dec
pop
inc
mov
lods
xchg
nop
cmp
add
push
xchg
sbb
sbb
aas
loope
sahf
or
aaa
push
movsb
jne
sbb
sti
inc
push
mov
inc
jecxz
stos
fnsave
arpl
nop
xchg
sbb
pop
outsl
shrb
inc
shr
js
cmp
icebp
xor
add
and
inc
add
loope
leave
mov
cli
inc
aad
test
add
aam
fistpll
add
push
lret
fsts
std
mov
push
xlat
insl
mov
fidivl
ja
mov
fimuls
mov
jo
fiadds
fst
and
and
xor
lcall
xor
popf
and
adc
dec
and
jle
pop
call
or
roll
and
and
push
cmp
jge
enter
lcall
push
xchg
dec
subl
scas
pop
cmp
and
and
iret
sub
mov
dec
sbb
xlat
sub
and
dec
dec
push
jo
sbb
jp
pop
test
xchg
lods
jg
test
xchg
int
cmpsl
outsb
pop
and
cwtl
aas
lods
xchg
jbe
adc
stos
lret
and
scas
sbb
xor
inc
in
ja
sub
lods
cltd
dec
dec
ret
dec
sbb
xchg
mov
jg
and
cmc
mov
sub
aad
lods
cmpl
and
lret
pop
xor
in
gs
mov
adc
jmp
out
bound
cmp
mov
and
ret
adc
add
rcll
inc
adc
pop
cmpsb
cmp
and
xchg
pop
push
mov
mov
lds
fcmovne
fmul
jns
test
in
mov
and
gs
pop
sbb
loop
lods
lds
movswl
sbb
push
out
xchg
cmp
sbb
lret
jmp
xor
xor
mov
arpl
and
arpl
sub
data16
or
lods
mov
inc
pop
jbe
cli
jmp
cmc
mov
cmpsl
enter
or
fs
add
xchg
jge,pt
jne
ret
xchg
movl
aam
sub
sarb
ret
push
cmp
jns
push
cmp
lods
leave
sbbl
inc
sbb
mov
imul
pop
sub
xor
and
rcrb
jno
in
xchg
rolb
int
popa
aad
ret
repnz
or
cld
lea
imul
dec
pop
ret
mov
fucomp
xchg
insb
hlt
adc
bound
dec
mov
cmp
lods
push
xorb
xchg
in
and
inc
cmpsl
test
jg
or
jge
daa
dec
iret
ss
cmp
cmpsl
sub
mov
lods
and
je
xchg
js
inc
pushf
mov
test
mov
andl
mov
cmp
shlb
int3
cltd
enter
dec
lock
mov
and
sub
mov
ror
jne
adc
nop
fadds
push
movsl
or
out
in
inc
loopne
movzbl
jle
popa
gs
ret
in
aam
mov
mov
sti
mov
lret
aaa
imul
adc
jmp
push
imul
cmp
push
inc
push
cmpsl
loopne
jb
xorb
mov
repz
shl
es
dec
aaa
enter
ss
cli
xchg
xor
jae
test
and
mov
ja
dec
sub
addr16
and
adc
pushf
or
popf
jecxz
or
dec
fdiv
shll
mov
ljmp
adc
lock
xchg
addr16
mov
sub
lahf
lcall
iret
inc
jl
jo
andb
xchg
cmc
lret
daa
std
mov
je
aam
imulb
sub
cmp
mov
fidivs
incb
sbb
sbb
jno
addr16
aaa
testl
fistps
xchg
into
test
sub
loope
movsl
or
jge
sbb
std
cmc
push
adc
jecxz
cmp
sub
or
repz
pop
mov
cmpsl
jl
sub
adc
or
sbb
call
lea
add
or
jnp
xchg
jbe
ljmp
nop
stos
out
xor
imul
insl
xchg
inc
mov
push
hlt
stos
inc
adc
xchg
shrl
adc
mov
mov
sbb
dec
and
iret
out
push
jp
rorb
sbb
cmc
lods
gs
das
das
lods
xchg
mov
je
jnp
addr16
xchg
mov
shll
sub
loopne
leave
mov
aam
adc
pop
sub
inc
xchg
adc
jle
out
pop
in
cwtl
cli
and
or
stos
in
subb
imull
and
lods
sub
sub
adc
pop
mov
dec
fiadds
in
dec
stos
inc
orl
sub
adc
nop
push
xchg
rclb
sbb
mov
sub
pop
or
xor
pop
pushf
mov
and
sbb
lea
pop
enter
aad
movsb
sbb
out
adc
or
sub
sbb
out
fdivl
loope
jmp
and
jno
cmp
add
shr
jnp
aad
popa
xchg
jns
mov
jle
imul
sub
xor
push
inc
addr16
mov
sub
stos
adcl
mov
mov
pushf
jge
jl
cmp
dec
gs
cmpsl
sub
insl
clc
ljmp
loop
push
loopne
and
aad
in
iret
call
sahf
loope
sbb
pop
loop
test
and
js
cld
mov
pop
test
out
int3
ss
repz
inc
push
dec
mov
xchg
dec
push
test
lahf
sbb
ljmp
in
cltd
jbe
cmc
inc
inc
insl
mov
shrl
push
cmp
inc
aas
loope
jb
cmp
push
neg
shl
dec
aas
xchg
push
mov
mov
insl
rcr
cwtl
cmp
pop
fisubrs
repz
outsl
jo
sub
outsl
sarb
std
outsl
mov
dec
sbb
in
leave
outsb
pop
mov
mov
xlat
xorl
push
nop
clc
fadds
out
add
test
jae
nop
ret
je
pop
jmp
repnz
ds
mov
test
cli
ljmp
mov
cmp
sub
xorl
add
call
xor
out
push
adc
cmc
pushf
sub
rcr
bound
inc
in
inc
test
andb
dec
xchg
mov
cs
pushf
jp
mov
shl
outsb
sbb
leave
inc
pushf
leave
xor
jnp
repnz
lret
mov
mov
mov
rorb
dec
stos
jle
rcrb
xchg
adc
imul
push
or
incl
data16
fimuls
sub
sahf
push
jg
stos
add
lea
xlat
sub
inc
inc
dec
mov
cmp
xor
cwtl
sub
pushf
push
xor
repnz
arpl
jno
sti
addr16
lahf
subb
xchg
xor
test
cld
mov
mov
push
add
ret
cmp
or
push
inc
jne
in
mov
pop
test
mov
bound
add
push
pop
add
pop
call
add
bound
fldl
mov
rcrb
cmp
daa
shr
das
js
lret
push
lret
lods
faddl
aad
andl
fldl
mov
sar
inc
fdivrl
mov
mov
xor
add
adc
and
mov
ds
sar
inc
dec
mov
fimull
adcl
ret
inc
pop
mov
add
shrl
xchg
dec
mov
cmpsb
cmp
mov
xor
std
mov
mov
pop
shrl
pop
or
loopne
aad
fidivrl
xchg
add
fwait
test
jb
jnp
std
cltd
xchg
test
enter
xchg
mov
mov
xchg
icebp
pop
inc
shll
roll
rorb
jle,pt
icebp
addb
mov
or
cmp
jae
mov
test
sahf
dec
xchg
jecxz
cs
or
push
aas
sbb
add
sub
jecxz
jbe
cmp
and
lods
mov
jmp
mov
mov
dec
mov
pop
loop
in
pushf
test
inc
lods
cs
dec
daa
jmp
cmp
out
xchg
sbb
cmp
xor
fstpt
inc
daa
or
das
out
xlat
or
push
loope
push
pop
xor
aad
mov
inc
cmp
in
cmpsl
jne
sarb
and
sub
out
lcall
jb
xchg
adc
inc
aam
jp
sub
stc
shufps
xor
out
cmpsl
aas
cmp
add
pop
xlat
xchg
lods
lahf
xchg
push
cli
push
sub
fsubrs
cmp
cmp
mov
cld
sbb
push
sahf
lds
and
jno
adc
sbb
push
xor
or
test
jns
and
jmp
pop
jb
mov
aas
aad
and
or
xchg
inc
fbstp
fsubrl
sti
adc
test
out
dec
xchg
ds
push
pop
or
js
mov
mov
pop
xchg
lcall
jle
xchg
jg
scas
imul
inc
stos
inc
fcomps
data16
and
sub
mov
ss
movsl
fwait
cs
or
fwait
stos
cld
ja
test
mov
imul
cmp
or
sbb
sub
ljmp
sub
bnd
mov
std
lods
insb
adc
je
dec
imul
es
bound
ficomps
pop
cwtl
jge
dec
xchg
mov
lret
cvtpi2ps
cmp
shr
dec
mov
push
shll
adc
int3
jns
aam
js
inc
into
movl
lcall
add
lods
loope
inc
cmp
fists
mov
xchg
imul
sub
sbb
mov
xor
pop
aaa
sbb
negl
fincstp
int3
and
call
inc
jnp
fiaddl
into
or
pop
sub
add
scas
mov
test
inc
inc
push
xchg
mov
stos
movsl
repz
xor
je
lods
bound
es
inc
cmc
pop
pushf
xchg
scas
aam
test
pop
out
gs
dec
push
scas
popf
in
jo
mov
fstps
or
fdivrs
xchg
shlb
pop
pop
cmpsl
in
pop
sub
call
out
int3
mov
pop
addr16
inc
ror
gs
xlat
adcl
fstpt
adc
imulb
into
pushl
or
mulb
stos
fldl
mov
lods
pop
ljmp
cld
cmp
movlps
sub
xorb
mov
loop
xchg
pop
dec
pop
cmp
xor
jle,pn
or
mov
mov
test
int
pushf
dec
mov
arpl
lret
cmp
in
aaa
popa
loop
dec
xorb
pop
ds
out
test
push
shll
xchg
lahf
sbb
pop
cli
mov
sbb
inc
cmp
sub
sub
dec
pop
jo
jnp
cmpb
xor
cmp
testl
push
jmp
aaa
adcl
dec
int3
xor
int
adc
dec
mov
cmpsb
mov
mov
sti
jmp
pop
push
xchg
cmpl
lret
inc
insl
push
and
stos
dec
mov
insb
jns
mov
cmp
lods
jge
loop
jmp
movsl
or
subb
arpl
jb
and
iret
or
xchg
xor
lods
outsb
inc
lods
and
nop
es
mov
or
rcrl
and
sub
insl
clc
add
shl
or
push
push
sti
xchg
sub
sbb
outsl
push
adc
pop
nop
mov
push
xchg
mov
cmp
xchg
loop
lds
fwait
push
mov
pop
adcl
mov
mov
push
or
add
inc
mov
adc
push
mov
leave
cmpsb
lcall
fsts
fisubrl
cwtl
cmpsb
xorb
jnp
xlat
js
mov
icebp
ret
xchg
es
pop
jge
ret
inc
cmp
in
push
gs
sub
jnp
or
mov
call
fdivrp
adc
jle
push
or
or
je
into
xor
push
xchg
mov
xchg
push
jo
nop
ja
int
insl
add
cmpsb
into
out
xchg
mov
add
or
lock
add
adc
aad
inc
and
pushf
or
popl
pop
jnp
repnz
sub
scas
cld
xchg
fwait
mov
add
fnstsw
out
xor
sbb
or
div
fmuls
sbb
cmp
lock
cltd
or
sbb
repz
insb
cli
push
inc
negb
pop
cli
mov
mov
mov
cmp
mov
mov
mov
cwtl
and
jns
gs
xchg
test
ja
aam
adc
jnp
cmpl
mov
aam
mov
xchg
xchg
adc
mov
lods
bound
mov
jae
cmp
icebp
jo
xchg
ljmp
pop
inc
js
xchg
push
out
movsl
clc
mov
jp
in
roll
daa
ljmp
out
ds
inc
mov
jge
dec
rorb
cmpsb
sub
push
ds
in
in
out
lret
lret
pusha
out
imul
cli
scas
fcmovbe
in
xor
mov
add
cwtl
sbb
in
jl
jbe
add
test
int3
aas
xchg
sbb
dec
xor
jno
add
and
js
mov
hlt
iret
push
mov
leave
int3
gs
sub
lods
mov
pop
std
xchg
mov
mov
mov
or
lret
inc
adc
insb
dec
loop
mov
sub
loop
test
out
push
lds
pop
sub
das
mov
xor
lds
out
ljmp
jbe
dec
adc
ret
sbb
subb
dec
mov
or
inc
inc
fs
rcrb
xor
cli
xchg
lret
mov
int3
pusha
and
pop
pop
and
stos
mov
adc
pop
cwtl
incb
mov
imul
popf
add
data16
mov
cmp
mov
push
mov
dec
popl
pop
xchg
jp
jl
jmp
shll
fwait
push
cs
dec
pop
push
cld
jl
cmp
mov
pusha
mov
neg
push
xchg
cmpsl
jb
stos
inc
lock
loopne
sbb
lods
xchg
imul
cmp
sub
pop
scas
mov
lcall
add
push
lea
xchg
cs
push
mov
dec
inc
and
test
sbb
mov
in
ficoml
jl
call
pusha
lods
dec
cmpb
sbbb
loope
push
ds
pop
mov
popf
inc
clc
outsb
loopne
xchg
je
push
lods
sub
sub
push
cwtl
outsl
movsb
insl
into
pop
ljmp
jp
add
arpl
push
mov
cmpsl
out
aas
sub
jno
push
adc
and
sub
mov
lock
cmpsb
sti
dec
idivl
sbb
lcall
popf
jg
push
mov
lods
call
nop
mov
inc
add
test
mov
mov
les
mov
lcall
jne
iret
int3
shll
mov
sub
iret
xorl
xchg
and
out
out
or
xchg
icebp
mov
fsubs
mov
add
cmpsb
roll
inc
popa
add
nop
cmp
push
movsl
outsl
and
fldcw
mov
mov
inc
and
mov
push
int3
in
xor
cmp
mov
pop
or
popf
lock
add
inc
std
jne
pop
das
ljmp
jae
test
inc
imul
push
push
in
jp
mov
push
insl
outsb
inc
and
adcl
out
sub
sub
insb
push
push
enter
mov
iret
inc
ror
dec
flds
push
cltd
jne
xchg
adc
add
rol
cli
call
dec
and
jb
jmp
mov
sbb
addr16
shlb
stc
lods
movsl
push
or
inc
mov
es
xlat
stc
jb
jae
sti
pop
cmc
jl
cmpsb
xchg
push
dec
add
sbb
xchg
outsb
in
in
cwtl
sbb
dec
negb
mov
cwtl
insl
xor
sbb
imul
mov
cmovle
repnz
mov
adc
clc
das
mov
popa
mull
test
rep
and
or
jae
mov
mov
jge
xchg
jl
cmp
sbb
pop
pop
mov
or
and
adc
aad
arpl
repz
dec
add
mov
int
jnp
xor
jne
or
sub
jns
outsb
add
adc
mov
inc
loopne
lret
mov
and
movsb
loop
js
fsubrs
xchg
fdivrs
pop
cld
adc
imul
cmp
ds
and
ds
stc
lea
inc
sub
inc
fsubrl
jecxz
dec
out
push
mov
mov
adc
ret
adc
test
inc
addr16
sbb
mov
cld
and
push
inc
out
rolb
jg
psadbw
pop
iret
bound
xchg
dec
adc
lret
inc
pop
fcmove
or
or
inc
icebp
pusha
mov
add
add
xchg
push
out
cmp
mov
mov
inc
push
lea
mov
je
dec
cmp
lods
dec
inc
jle
sub
into
lret
xchg
loop
pop
xor
and
test
push
movsb
jns
inc
push
mov
dec
nop
jo
pop
vpandn
push
push
adc
adc
fstps
xchg
ljmp
scas
adc
in
fs
xor
test
and
ret
xchg
jl
sub
add
jp
rolb
das
xchg
mov
out
mov
sbb
jl
adc
shlb
pop
popa
fdivs
mov
sbb
fdivl
scas
or
sbb
lea
and
inc
push
jns
or
mov
lea
inc
sbb
sub
leave
jb
scas
lea
cmp
push
and
and
aaa
out
test
xor
xchg
mov
imull
lahf
cmpsb
inc
and
dec
xorb
pop
mov
mov
in
push
icebp
push
mov
ret
shlb
and
in
mov
inc
adc
fwait
and
push
mov
lret
or
mov
cmp
sbb
cmp
icebp
sbb
sub
xchg
loopne
in
push
rcll
mov
mov
sbb
aas
xchg
loope
xchg
mov
jmp
inc
sbb
jns
aas
or
cmp
adc
fxch
scas
cli
mov
inc
shlb
es
incl
jns
iret
out
or
les
xor
mov
mov
sbb
cmp
sbb
pop
add
scas
push
sub
movsb
scas
or
jb
adc
lds
cmpsl
insb
ficompl
stos
xchg
mov
call
sbb
inc
call
push
out
push
jg
shrb
sahf
std
mov
or
stos
ja
sbbb
push
rolb
mov
sub
and
adc
xchg
adc
mulb
fbld
adc
mov
mov
mov
sbbl
rol
pop
test
in
arpl
sbb
stos
jg
xchg
cmp
push
mov
or
outsb
outsl
pop
loope
test
lods
lds
push
cmc
or
add
dec
in
stc
adc
in
lret
aam
imul
xor
out
fsts
jmp
in
arpl
shll
inc
push
push
and
fsubrs
or
mov
in
xchg
adcl
xchg
out
adc
push
jmp
and
pop
int
fcoml
out
add
jb
sbb
cltd
cmp
bound
xor
mov
lods
inc
jb
push
incb
mov
cmp
outsl
inc
jg
jg
loope
dec
pop
push
xor
xor
mov
mov
push
notl
jae
dec
mov
xchg
mov
cmc
sub
fistps
hlt
mov
pop
and
es
adc
and
out
jg
xor
push
dec
repnz
jl
jne
insb
adc
mov
imul
test
adcl
js
in
xor
push
mov
mov
das
shrl
stos
orb
jnp
dec
cmc
jns
push
and
add
pop
lret
push
data16
push
pop
es
das
xchg
cmp
push
shll
mov
mov
jns
xor
mov
add
mov
pusha
inc
jo
shl
outsl
nop
mov
mov
repnz
hlt
imull
jns
jge
inc
xchg
and
test
xchg
arpl
shrl
cld
dec
mov
lods
mov
aad
dec
mov
dec
mov
jmp
stc
ret
lods
repnz
pop
inc
inc
mov
icebp
leave
aad
insl
in
cs
cs
adc
movsb
mov
jecxz
movsl
ficoml
or
andb
jne
fidivrl
jle
fstpl
jns
dec
dec
and
add
xchg
lds
cld
das
shl
adc
dec
dec
les
add
jecxz
fsub
call
mov
lea
fistps
pop
in
adc
dec
pop
add
cmp
cld
dec
push
fdivr
dec
in
push
in
rorl
mov
mov
jae
push
sub
test
in
sub
les
push
mov
xor
xor
cmpsb
mov
orl
and
ret
ret
xor
mov
cwtl
lods
fcom
cmp
xor
ds
jmp
sub
xchg
fildl
mov
mov
inc
test
cli
data16
insb
mov
cmpl
pop
sti
aam
jnp
mov
iret
and
cmc
and
dec
aaa
ja
jl
flds
mov
inc
lds
or
lods
int
jg
test
push
mov
pop
iret
out
aam
push
mov
dec
xchg
mov
sbb
call
mov
adc
nop
sbb
mov
cwtl
lock
es
int
mov
adc
cmovg
mov
data16
fwait
lds
fimull
popf
cmpsl
mov
subb
add
add
cmpb
cmp
shrb
sbb
scas
pop
outsl
mov
push
jmp
pushl
xchg
cld
loop
fcomps
in
dec
ja
fisttps
dec
jnp
xlat
lds
das
cmp
insb
adc
mov
clc
mov
dec
and
push
pop
sub
daa
enter
sbb
inc
daa
in
push
out
cld
jbe
in
sbb
icebp
jb
or
es
or
inc
jge
outsl
jo
fmul
enter
out
adcb
insl
bound
hlt
test
and
loop
dec
push
mov
inc
xchg
dec
or
cld
pop
stc
add
or
insb
xor
mov
mov
lret
ss
out
mov
jnp
das
pop
sbb
repnz
mov
or
and
stos
std
inc
add
xlat
mov
pop
jns
mov
mov
ret
xor
les
add
imul
movb
rcrb
mov
cmp
pushf
in
and
ds
pop
cmp
cmpsl
sub
jno
push
repz
xchg
icebp
mov
adc
push
ljmp
ss
movsb
js
arpl
push
jle
mov
push
fldcw
fistps
jmp
daa
mov
sbb
mov
xchg
add
gs
shl
xchg
cmc
mov
lods
scas
cmp
xchg
mov
aad
jns
adc
enter
movsb
outsl
jns
aas
sub
and
lea
loop
stos
adc
sub
cli
mov
fwait
xchg
emms
push
sbb
cmp
dec
movsl
mov
dec
in
push
ret
jp
jge
fsubrs
test
cmp
lcall
adc
ja
dec
jle
push
icebp
cmp
xchg
popf
mov
aaa
stos
mov
fs
push
shll
mov
dec
sbb
add
aam
stos
js
push
pusha
sbb
cmc
int3
shll
mov
xchg
fsubrs
mov
enter
xchg
jge
mov
mov
pop
lods
cmp
nop
xor
mov
mov
inc
aas
xlat
xor
mov
adc
std
movsl
sahf
xchg
push
stc
ret
iret
gs
pop
ret
addr16
js
xor
lock
lret
push
and
dec
fwait
repnz
es
repnz
sbb
rorl
roll
aam
movsl
fs
add
xchg
dec
shlb
je
jb
out
pop
and
push
lret
jne
clc
pop
lods
push
movsl
mov
rol
insb
cld
aam
jle
outsl
call
js
mov
cmp
xchg
rclb
or
insb
cli
sub
test
shlb
repnz
ror
lcall
mov
and
loope
pushf
and
sbb
stos
icebp
sarb
imul
ret
je
cli
add
push
mov
inc
adc
mov
gs
mov
shll
and
xchg
cmpsl
xchg
das
mov
cmp
push
sub
cmp
dec
mul
addr16
pusha
adcb
pop
popa
mov
ficoml
js
mov
jmp
push
dec
psubsw
nop
pop
cli
fiadds
jbe
cwtl
push
mov
xor
dec
test
enter
sbb
push
xor
dec
cmp
xchg
ret
ss
jno
pop
adc
pop
adc
movsl
jnp
sbb
cs
testl
jmp
loopne
std
rcrb
aad
push
push
in
jecxz
inc
mov
push
movsb
pop
sbb
or
out
xor
pop
pop
mov
sbb
push
xchg
out
fbld
test
and
fldcw
sub
push
fucomi
xor
and
aas
adc
in
mov
shrl
out
stos
push
ret
push
inc
in
adcl
popa
adc
aaa
ljmp
add
mov
jl
sahf
outsb
inc
sbbb
xor
lcall
mov
lds
pop
fimuls
lret
jbe
lcall
cmp
imul
sub
jbe
movsb
and
ja
mov
mov
and
cmp
ljmp
je
push
mov
aas
shlb
loop
xchg
mov
and
cmpsb
xchg
les
pusha
rclb
push
xor
pop
cmp
lahf
inc
stc
pop
stos
cwtl
imul
jp
movsb
push
and
pop
ds
rclb
and
xor
and
mov
dec
lods
fildl
sub
faddp
rcr
rcrl
cmpsb
xor
lret
push
push
mov
sbb
cwtl
inc
aad
js
xor
inc
mov
mov
fs
outsl
repnz
add
movb
popa
imul
shll
sub
jb
lret
imul
xlat
xor
xchg
movsl
sub
dec
xchg
aad
idiv
or
jmp
in
sub
jnp
or
enter
pop
cmp
xchg
ja
cmp
jge
nop/reserved
lret
je
jle
stos
cwtl
mov
xchg
std
adc
and
lcall
in
sbb
push
icebp
stos
cmp
inc
cli
mov
sbb
xchg
aad
mov
push
aam
cld
add
adc
iret
push
cld
faddl
sbb
clc
jnp
mov
dec
cmp
cmpsb
shll
add
pop
sub
pop
sub
insl
arpl
pop
pop
fs
mov
das
adc
mov
test
push
cld
out
xchg
mov
lods
pop
and
outsb
enter
mov
popf
xlat
insb
push
sub
stos
lds
enter
addl
jg
fldenv
cmp
inc
insl
clc
xor
xchg
adc
aam
test
adc
adc
imul
jb
fwait
lret
ljmp
jp
js
sbb
push
xchg
dec
out
push
test
int3
pusha
movsb
divps
jbe
dec
subl
hlt
sbb
sub
adc
fwait
call
fisubrs
aas
push
push
push
mov
push
mov
xchg
jmp
mov
jecxz
inc
stos
inc
or
mov
mov
jecxz
into
inc
pop
push
loopne
cmp
bnd
xchg
outsb
outsb
and
push
jns
dec
test
jl
mov
pop
rcrl
mov
dec
pop
aaa
push
and
loop
repz
push
mov
sarb
sbb
inc
lock
rcrb
nop
je
jne
mov
and
jne
mov
aaa
repnz
les
pushf
divb
shl
jmp
xor
mov
push
dec
add
jmp
mov
popa
jb
shl
pushf
push
and
mov
insl
pop
scas
stc
dec
stc
scas
rcll
sti
or
fisttps
jb
xchg
pop
outsl
mov
out
mov
popl
add
leave
scas
xchg
mov
sbb
ret
sub
inc
or
stos
cmp
pop
mov
nop
sbb
sbb
aas
mov
dec
sbb
mov
sub
inc
and
cmpsl
insb
inc
stos
ret
mov
jnp
cmp
add
pop
stos
fdivr
mov
sarl
iret
sti
aad
sub
dec
fmulp
cmpsb
fstpl
push
pushf
out
outsb
adc
mov
adc
mov
xor
cmc
inc
out
mov
jg
data16
cmc
das
xlat
pop
push
pop
mov
mov
scas
das
repz
push
pop
dec
iret
mov
data16
cmp
push
jg
gs
pop
adc
xor
xchg
pop
push
call
dec
cmp
andb
idiv
pusha
cltd
or
imul
sbb
sbb
sub
outsb
out
shll
xchg
loopne
mov
jg
mov
xchg
or
lea
cmpl
mov
xchg
add
out
test
leave
mov
js
loopne
adc
pop
stos
pop
nop
mov
and
stos
pop
xchg
incl
add
push
aam
and
repnz
pop
xchg
addr16
stc
shrl
push
cmp
push
stc
daa
nop
cmp
and
incl
roll
int3
push
or
dec
inc
pop
rorb
andb
out
ja
std
sub
cmp
repnz
icebp
sub
sub
mov
dec
out
jl
xchg
mov
inc
jp
in
jl
xlat
pop
clc
pop
xorb
out
hlt
mov
xor
add
xchg
idivl
pushf
dec
xchg
lcall
pop
loopne
sbb
dec
push
lods
push
les
jne
mov
adc
dec
sarl
lahf
ror
stos
sbb
xchg
icebp
mov
inc
ljmp
jbe
cmpsb
addl
dec
out
stos
push
xchg
ljmp
dec
out
mov
adc
mov
inc
pop
daa
xorl
pop
mov
aad
into
xor
jle
or
dec
movsb
shlb
mov
dec
pop
leave
jns
mov
daa
cmove
xor
aad
hlt
insl
stos
icebp
adc
mov
mov
lock
lcall
and
in
xor
jmp
push
repnz
outsl
std
ja
mov
loope,pn
addb
scas
pop
cmpsl
mov
lahf
lods
xchg
and
jge
jle
test
popa
pop
or
loop
cmc
test
stc
fidivrs
push
jge
stos
sub
add
push
cmc
cltd
add
add
fs
lock
jne
mov
into
jge
enter
pop
js
adc
js
das
push
sbb
rcrb
aaa
add
jnp
inc
and
cs
sub
mov
fists
inc
mov
sti
adc
mov
jmp
dec
jne
lods
scas
jae
or
adc
cwtl
pop
in
lret
hlt
dec
popf
fsubrl
mov
jo
pop
aad
cmp
aad
push
inc
pop
jl
in
fwait
imul
mov
cmpsb
push
in
repz
js
aas
lods
or
stos
jo
loope
push
mov
popw
sbb
iret
imul
leave
out
je
mov
or
cmp
lahf
test
cmp
mov
out
into
inc
pop
lods
xchg
sbb
dec
mov
icebp
les
loop
adc
fwait
ds
shrl
sbb
lahf
call
movq
scas
mov
stos
adc
xor
outsb
adc
cltd
sub
mov
or
sahf
mov
or
inc
dec
lea
sbb
and
outsb
mov
outsl
xor
push
pop
ret
cwtl
and
dec
les
mov
dec
pop
sbb
stc
cmp
pop
add
adc
xchg
pop
les
divb
mov
aad
push
pop
stc
dec
pusha
aas
loop
xchg
cwtl
cltd
sbb
mov
mov
stos
cmp
xchg
gs
stc
push
rcrl
xlat
jge
lahf
mull
sub
xor
les
mov
in
pop
xchg
mov
movsl
adc
jmp
out
jle
cli
imul
into
data16
cmpsb
test
inc
dec
es
cmpsb
out
les
nop
jmp
mov
cmpsl
out
fwait
rorb
xchg
ret
xchg
ret
mov
push
xchg
jecxz
addr16
jo
repz
sub
mov
int
xchg
mov
cmpl
push
mov
movsb
scas
test
mov
inc
cmp
pop
xchg
and
dec
mov
fwait
xor
push
and
lcall
cmp
adc
scas
sbb
sarb
dec
aas
and
xor
addl
ss
imul
adc
dec
sub
jns
adc
jl
fmuls
fs
xchg
xor
pop
and
add
adc
aaa
cmp
fndisi(8087
stos
or
imul
repnz
and
pop
jns
mov
add
or
xchg
pop
mov
js
pop
adc
popa
testl
sahf
test
testl
or
inc
inc
pop
nop
ror
jbe
jbe
stos
leave
add
adcb
and
shl
clc
jle
mov
shl
pop
andb
pusha
jecxz
cmp
inc
lea
add
xor
cwtl
mov
pop
dec
lcall
mov
fisubrs
inc
pop
mov
cmp
inc
loope
cmp
outsl
out
mov
enter
fcmove
les
sbb
pop
and
movsb
and
mov
pop
dec
and
cld
mov
stos
mov
xlat
sub
jmp
cmpsb
inc
ljmp
rcll
push
shrb
std
sbbb
fcompl
dec
add
cmp
mov
test
gs
inc
repnz
mov
imul
mov
xor
sub
pushf
sub
dec
fdivp
sub
andl
xor
sbb
jb
sbb
aaa
cmp
out
leave
lods
pop
nop
xchg
leave
add
pushf
xor
xor
xor
call
jl
pop
andb
fwait
lods
lret
push
mov
je
rcl
push
xchg
dec
stos
xor
push
jp
in
sub
es
mov
mov
lea
shld
dec
cld
mov
and
and
loop
rep
jmp
and
int
ja
dec
icebp
orb
cld
or
test
dec
sub
pop
or
ret
mov
xor
mov
mov
add
sub
pop
mov
insb
mov
ljmp
int3
inc
jge
popf
out
cmp
xor
outsb
fdivrl
xor
fstpl
dec
repnz
in
out
dec
mov
adc
push
inc
push
inc
sub
es
xchg
and
arpl
add
dec
fs
jle
inc
movsb
cltd
scas
or
roll
jp
aam
fwait
xor
in
fiaddl
gs
or
add
es
adc
testb
gs
jge
mov
cmp
push
xor
mov
test
jp
ljmp
jl
cld
inc
pop
xorl
adc
adc
cmc
mov
push
pop
popa
pop
mov
sub
mov
push
pushf
xchg
adc
lods
test
pusha
hlt
sti
icebp
daa
push
pushf
mov
mov
sarl
rolb
lock
add
imul
inc
and
xchg
adc
gs
mov
or
shlb
jo
jnp
addr16
push
aas
mov
push
dec
pop
xchg
test
mov
mov
jne
idiv
call
sbb
mov
dec
testb
jnp
hlt
add
cmpl
inc
in
jbe
dec
pop
mov
dec
sbb
or
xchg
js
hlt
inc
sti
lods
and
cmp
jne
cmpsb
xchg
rcr
push
xlat
add
adc
test
xor
fsub
sahf
cmp
fstpt
sbb
faddl
enter
cltd
in
sti
ficomps
and
in
insl
repnz
cltd
enter
scas
lds
call
push
pusha
test
or
inc
clc
outsl
repz
mov
sbb
jl
mov
push
inc
adc
fadd
das
mov
les
push
lcall
repnz
addr16
fists
lret
fisubrl
fimull
xor
mov
in
adc
pop
pop
imull
xor
scas
adc
mov
push
mulb
xchg
fs
ror
aaa
inc
pop
push
bound
loopne
sbb
cmp
cmc
popa
push
aas
orb
adc
push
push
rclb
testb
or
data16
or
popf
jp
outsl
sbb
in
cmp
jecxz
jae
out
mov
sti
das
cli
pop
inc
sti
jne
cmpsl
test
mov
mov
push
pop
cmp
push
pop
add
insb
loopne
inc
jb
out
in
rorl
xchg
mov
xor
scas
and
fistpll
xor
and
push
xor
in
xor
and
xor
lods
pop
sbb
jne
mov
repnz
and
mov
cmp
out
sub
fistpll
enter
add
stos
sbb
add
mov
in
mov
lahf
mov
js
or
and
testl
sbb
in
shll
add
ficomps
sub
jle
mov
xor
mov
xchg
push
and
sub
cwtl
popf
dec
not
movb
xor
pop
sub
xchg
mov
loop
adc
lahf
insb
inc
mov
cmpsb
faddp
jp
les
fmuls
xor
xchg
and
sbb
xlat
xchg
mov
fnstsw
loope
cli
int3
or
push
xchg
out
xchg
test
ja
sbb
push
ja
das
stos
mov
mov
dec
mov
sti
sbb
and
adc
mov
fisubs
js
fmuls
adc
push
shlb
adc
mov
dec
decb
fistpll
scas
hlt
or
xchg
int
lahf
fcompl
pop
dec
sti
daa
int
pop
sar
push
xor
jl
lcall
int
or
mov
pop
xor
outsb
mov
add
add
dec
cmp
push
sbb
roll
jl
mov
and
rol
or
sbbb
aam
inc
mov
subb
or
pop
out
add
sub
popf
mov
mov
or
sbbb
cmp
or
lret
popa
shlb
shlb
mov
pop
cmpsl
mov
lods
mov
mov
lahf
call
jae
lahf
xchg
cmc
mov
ret
cmc
insb
inc
out
push
xchg
dec
arpl
pop
xchg
add
and
aad
mov
js
sub
stos
andb
mov
mov
test
jge
shll
cmp
cmp
fldenv
cwtl
sti
loope
mov
js
mov
incb
out
push
repz
ja
ja
xorl
sbb
or
sbb
xchg
cld
mov
pop
mov
sub
jo
sub
fs
mov
outsb
jecxz
push
xor
arpl
and
fstpl
dec
insb
inc
gs
cmp
das
inc
sub
mov
popf
jge
mov
clc
fidivs
sub
and
push
out
insl
in
sarl
and
and
cmp
loop
shrl
mov
ds
cmpsl
gs
inc
dec
sahf
or
mov
cmpsl
mov
xor
int
rcll
idivl
pop
mov
add
je
cmp
shlb
fstps
cmp
mov
stc
rcrl
xchg
xchg
adc
push
pop
out
and
push
add
add
lea
lock
add
lods
jae
outsl
xor
push
sbb
sub
mov
clc
out
jmp
jg
jp
push
jmp
fnstenv
mov
popa
leave
lods
in
aaa
inc
xchg
push
xchg
pop
pop
mov
shrl
out
pop
pusha
mov
or
out
loopne
mov
xor
xor
in
add
push
fildl
push
push
aas
pop
mov
jns
scas
sti
push
scas
outsb
xchg
nop
pop
pop
jmp
xor
cmc
bnd
shrl
jg
inc
sub
and
pop
push
imul
and
in
smsw
pop
repnz
lods
push
jle
fdivrl
jecxz
std
dec
scas
rcr
mov
sti
jecxz
in
repz
push
pop
scas
mov
jo
mov
mov
cmp
fsts
mov
jne
push
mov
nop
gs
les
or
lahf
repnz
sbb
add
sbb
andl
loope
insl
arpl
out
mov
out
mov
sbb
fdivs
repnz
mov
inc
ss
cmp
movsb
movsl
inc
jmp
xchg
jl
xchg
fnstcw
pop
push
fcoms
outsl
in
pop
pop
dec
or
imul
jb
inc
xchg
xor
cmp
cli
mov
jno
adc
xchg
dec
sub
mov
adc
add
mov
sub
mov
dec
xlat
sub
sub
pop
fisttpl
lds
jno
jb
fnstenv
daa
xor
test
jbe
xchg
jne
jg
mov
jb
inc
testl
ja
cmpsl
inc
lcall
out
clc
aam
xor
cmp
xchg
lea
adc
dec
sub
cmp
xchg
iret
jle,pt
lds
push
jl
jne
and
and
jmp
xor
insb
mov
call
adc
adc
addr16
fldt
push
and
push
pusha
arpl
imul
lcall
repz
aas
mov
subb
ret
scas
jne
cmp
in
outsb
inc
mov
or
cli
cs
fwait
dec
xor
jp
cs
fwait
dec
xor
pop
jp
lahf
bound
in
mov
sbb
popf
bound
xchg
adc
pop
repnz
imul
lret
incb
pop
push
jae
and
pusha
fldcw
mov
lcall
push
jns
and
iret
test
pop
in
shll
pusha
mov
mov
jbe
lret
hlt
push
mov
dec
loopne
sbb
xchg
push
mov
push
inc
jmp
dec
push
jle
aam
imul
imul
aaa
stos
ja
test
sbb
rorb
stos
dec
push
scas
xor
mov
jge
jge
mov
lods
pop
mov
mov
mov
jo
mov
mov
push
add
adc
mov
pushf
pop
cli
cmp
shl
mov
scas
add
mov
sbb
push
or
imul
addr16
push
mov
rcrl
jg
mov
out
and
and
adc
xchg
dec
sahf
sbb
sbbb
fxam
mov
movsb
test
inc
aad
mov
cs
ja
popa
leave
dec
lret
push
xchg
pop
clc
adc
jns
vsqrtps
shll
push
pop
ljmp
push
push
or
push
sub
jne
mov
xchg
imul
fdivp
data16
adc
out
xlat
push
test
popf
adcb
and
ret
xor
inc
fisubl
aaa
sub
repz
mov
or
outsb
fisttps
jle
mov
out
push
stos
mov
out
cmp
and
xor
push
imul
push
sub
and
fadds
dec
jecxz
and
cmp
add
imul
xor
ja
inc
ret
test
xchg
inc
adc
pushf
rorb
jmp
mov
xchg
test
adc
fcomps
add
and
fcmove
mov
jb
xor
ljmp
sbb
mov
push
in
das
lret
mov
pop
jl
clc
mov
leave
xchg
pop
mov
lahf
push
xor
es
push
movsb
mov
lcall
in
cmp
add
pop
xchg
add
icebp
stos
push
xchg
xor
jl
xor
adc
fldenv
cmpsl
fwait
or
xlat
dec
imul
js
pop
pop
les
cmp
pop
pop
pop
mov
rclb
xor
jmp
jg
jge
dec
mov
and
jae
dec
aas
adc
lret
add
cmp
push
mov
popf
in
sub
sub
xor
sub
and
jnp
pop
mov
cs
loop
and
adc
xchg
mov
psrlw
inc
ret
mov
pop
popf
fadds
mov
je
shll
mov
push
add
das
or
dec
test
in
jnp
rclb
jno
cmpb
push
stc
jge
push
pop
mov
cld
adc
inc
ljmp
lods
idivl
in
jbe
daa
movsl
into
in
sub
pop
lds
leave
push
ss
idivb
cltd
popa
pushl
test
sbb
fcmovb
sahf
and
xlat
iret
xor
loope
out
or
xchg
fisttpl
xchg
cmpl
rcll
jl
cmp
mov
xor
subl
add
sahf
mov
adc
stos
aad
aam
in
mov
jns
xchg
mov
pushf
jo
fcmovnu
pop
int
mov
mov
cld
or
sbb
lds
mov
out
into
call
ja
inc
outsl
push
pushf
popfw
lods
jg
and
sarb
cmp
pop
cmp
pop
push
mul
and
in
scas
cmc
pop
mov
lock
adc
pop
and
movsl
mov
pop
sbb
sub
callw
popf
xor
popa
push
pop
xor
in
cli
divl
sbb
popf
imul
fists
jbe
mov
clc
mov
push
or
stos
in
popa
mov
ss
arpl
cli
and
dec
push
nop
jae
mov
and
in
out
cmpb
shufps
in
mov
fsts
cmpsb
mov
fisubl
shrb
lds
jno
popa
jo
mov
pop
rcrb
outsl
mov
pop
add
or
into
sub
pop
push
outsl
inc
or
push
call
jl
es
fstpl
iret
imul
push
aad
lcall
cli
mov
add
ficomps
mov
ja
add
inc
movsb
rorl
icebp
shrb
mov
mov
insb
lock
xor
cmp
push
dec
rolb
mov
imulb
jmp
add
out
and
addl
inc
mull
test
dec
dec
and
inc
cwtl
cmc
ficoms
movsl
xor
mov
mov
decl
cmp
nop
mov
sbbb
xor
mov
loopne
mov
lret
push
int
push
sbb
lock
cmp
sub
sbb
imull
mov
sub
cmp
xor
add
pop
cmp
sub
outsb
dec
stos
cmp
sbbb
pop
push
lock
ds
outsl
sti
arpl
mov
push
push
pushf
dec
out
loope
in
aad
fidivl
outsl
stc
bound
jb
repz
lea
roll
xchg
loopne
mov
jnp
sbb
outsl
mov
add
imulb
int
add
insb
add
orl
pop
rolb
cmpsl
adc
inc
pusha
repz
rorb
add
ret
stc
hlt
pop
sahf
pop
sub
test
push
fs
xchg
test
daa
or
bound
jb
inc
jns
mov
jmp
pop
and
xor
je
lahf
push
movsl
mov
in
or
aas
add
jle
adc
dec
je
addl
lcall
cmp
or
xchg
lret
push
stos
jb
cs
jns
gs
bound
xor
and
sub
subl
movsl
xchg
and
sti
lret
mov
xchg
pop
mov
jnp
mov
cmp
arpl
lods
ret
push
subl
stos
adc
in
ds
in
jae
add
fwait
lahf
dec
cmp
popa
mov
add
mov
fsubrp
mov
mov
mov
xchg
dec
daa
out
mov
outsl
inc
xchg
xchg
xchg
out
insl
fcomps
fwait
sub
jo
or
fiaddl
xor
add
mov
pop
mov
xchg
cltd
insb
adc
lods
lcall
pop
and
cwtl
test
in
pop
cld
ret
mov
pop
pop
pop
loope
push
jmp
test
js
cmp
mov
cmp
add
and
inc
jbe
test
idiv
push
outsl
xchg
jae
xchg
fdivs
aad
dec
js
aaa
jmp
aad
push
inc
rclb
iret
push
lods
cmp
jno
dec
pop
xor
iret
mov
inc
jle
pop
or
pop
pop
xchg
jbe
or
add
pop
outsb
outsb
push
lods
out
das
nop
jp
insl
insb
lds
orl
push
xor
sbb
mov
test
jns
inc
ret
jp
dec
jae
dec
pop
repz
cmp
mov
dec
sub
loopne
sub
or
pushf
pop
xchg
add
movsb
mov
cmc
cli
or
lods
lds
arpl
dec
push
jne
rolb
fs
lcall
in
jp
lods
lcall
pop
shll
divl
dec
fs
das
pushl
jl
ror
les
xor
lea
je
ret
pop
sbb
out
mov
jge
jl
xlat
out
sbb
fstl
ja
cli
and
arpl
mov
xchg
mov
repnz
cmp
sub
pop
fnsave
cmpsb
addl
jg
ja
mov
adc
push
out
call
fcmovnu
fdivp
outsb
push
sbb
std
inc
xlat
sub
lcall
inc
lock
push
inc
mov
js
mov
sbb
outsb
lock
shll
or
dec
cmpsb
scas
mov
sub
mov
bound
aas
add
scas
sbb
fdivrs
adc
add
ds
fucomip
and
addr16
push
xchg
xor
mov
mov
add
xor
sbb
stos
xchg
xchg
call
shll
pop
lret
clc
flds
jecxz
mov
aad
stc
jae
jl
and
or
mov
sbb
lock
sub
jo
cld
insl
lock
int3
or
fbld
mov
lcall
not
dec
fldt
or
imulb
fucomp
fisttps
leave
aam
rcrl
cltd
push
clc
call
ds
cmp
xorl
sbb
xor
mov
sub
and
stos
loopne
dec
or
rol
mov
in
mov
lock
divl
adc
push
adc
out
popf
dec
test
mov
or
jae
aas
loope
add
add
push
scas
ret
and
push
loopne
jae
push
lock
jae
xchg
icebp
mov
negl
jbe
call
fsubr
pop
inc
outsb
or
int3
sub
popf
bound
lods
jge
dec
and
shll
lret
push
jne
mov
push
sbb
clc
lea
xchg
push
xchg
rcll
add
jmp
dec
into
adc
fsub
daa
inc
out
jp
jge
xchg
scas
ja
add
notb
push
jmp
movsb
imul
push
xchg
lds
clc
push
inc
popf
mov
out
fisubrl
jmp
outsl
jle
xchg
xchg
int
clc
jmp
xchg
mov
das
mov
popf
inc
addl
repz
xor
aaa
adc
notb
mov
insl
or
add
leave
es
push
orl
xor
mov
sub
rcll
mov
dec
std
inc
cmc
adc
mov
aad
dec
fldl2t
push
push
mov
jae
jecxz
es
add
push
jmp
lret
mov
aam
mov
test
mov
adc
adc
adc
dec
insl
test
mov
lret
dec
mov
test
shl
push
sub
inc
lcall
sbb
xchg
push
test
mov
cwtl
pop
push
pop
add
cmpl
sbb
push
rep
into
inc
jmp
inc
stos
loopne
hlt
nop
rclb
jge
mov
inc
mov
push
mov
add
lds
hlt
push
jmp
push
mov
dec
and
push
arpl
sahf
shl
sub
stos
into
test
jmp
mov
popa
xchg
xor
in
mov
into
sarl
push
lock
jge
jecxz
ss
inc
mov
xor
out
mov
push
mov
push
adc
mov
or
movsl
imulb
fstpl
lahf
xlat
cltd
lods
movsb
mov
imul
movsb
lahf
pop
ret
inc
inc
jb
and
or
mov
inc
mov
stc
cmc
subl
push
inc
std
adc
subl
jnp
test
icebp
cwtl
mov
mov
out
cmp
xchg
shl
add
xchg
cmc
xor
sub
inc
cmc
fbstp
cli
aas
push
mov
clc
call
cmpb
das
and
push
xchg
pop
cmp
push
push
cmp
sahf
mov
leave
pop
mov
sub
sub
jmp
leave
fbld
cs
test
add
inc
pop
jge
addr16
loop
xchg
fcoml
mov
mov
repnz
and
push
fyl2xp1
mov
lods
push
inc
pop
cmpsb
jnp
add
sub
into
leave
inc
bound
and
adc
dec
shll
and
add
mov
jmp
fistpll
stos
pop
repz
rcrb
mov
xchg
pop
pop
pop
lcall
sub
xchg
jnp
fwait
mov
and
adc
mov
pop
call
out
jb
mov
aas
jp
xchg
push
cmp
lret
mov
dec
lret
lds
subl
movsb
xor
jns
mov
mov
push
fsts
pushf
fnstsw
pop
pop
lods
sti
es
cmp
daa
insl
push
xor
cmp
fstpt
cmp
xchg
sub
jno
xor
jne
sbb
fwait
out
push
add
cmp
outsl
jmp
jno
pop
pop
popa
loope
adc
rorl
mov
jb
add
add
rorl
outsl
jle
icebp
loop
in
sahf
ss
popa
test
loopne
mov
movsl
test
mov
ljmp
adc
enter
sbb
rcrl
daa
rcll
add
xor
mov
inc
shll
ljmp
adcl
inc
pop
lock
mov
cmc
arpl
dec
fdivrs
cmc
adc
pop
shrl
enter
pop
jb
in
jmp
push
imul
bnd
or
xor
addr16
mov
xor
push
sar
out
std
or
addr16
test
mov
pop
mov
rorl
jno
xor
or
xchg
jae
int3
mov
neg
imul
enter
jp
push
test
stos
aad
mov
adc
and
clc
mov
hlt
mov
dec
pop
jns
fldl2t
cmpsb
iret
jge
out
add
xchg
mov
jne
test
stc
and
sub
aam
movsl
xor
sar
rcl
adc
divb
xchg
aam
cmp
push
mov
and
push
pop
mov
adc
cmp
or
and
mov
mov
in
cmpsl
mov
sbb
and
repz
inc
push
jnp
dec
arpl
xchg
and
js
lret
mov
ret
popf
xchg
dec
and
sbb
hlt
mov
nop
push
push
mov
test
lock
lret
pushf
pop
js
or
jbe
mov
aam
enter
adc
jp
mov
mov
mov
fcomp
jbe
inc
sbb
shll
push
enter
popl
sub
test
movsb
or
bound
les
dec
clc
dec
push
xor
mov
imul
lret
pop
mov
adc
cmp
sub
mov
dec
add
jno
out
test
popa
inc
in
repnz
fucom
jo
adc
mov
cmpsb
sub
mov
sahf
test
push
mov
lods
mov
test
pop
ret
adc
lods
negb
jnp
movsl
cmpsl
sbb
inc
dec
test
or
pop
mov
cmc
inc
mov
out
ljmp
lcall
imul
cmp
insl
shr
xchg
out
mov
ljmp
stos
outsb
mov
add
pop
xor
xchg
jb
jmp
frstor
lret
mov
lret
add
in
inc
cmp
cld
flds
shll
test
scas
mov
dec
mov
pop
mov
mov
jle
ss
orb
mov
mov
and
pop
in
push
addr16
int
cmp
test
xor
jecxz
mov
fwait
mov
ficomps
cmp
dec
arpl
and
shlb
xchg
insl
test
mov
cmc
and
rorb
or
std
adc
and
jae
aaa
xchg
loopne
cmp
sub
outsl
loope
shl
sarb
add
pop
out
xchg
lods
lods
inc
loopne
lods
add
loope
mov
inc
mov
pop
jns
lea
mov
imul
cld
fstps
test
and
inc
aam
pop
mov
inc
imul
cmp
push
and
mov
insl
cmp
subb
loope
adc
and
and
mov
sbb
in
lds
sti
sub
pop
imul
or
mov
xor
and
sbb
sub
cmp
dec
lods
push
cmp
sbb
pop
xchg
loop
call
push
jmp
inc
mov
push
addl
std
scas
mov
iret
pop
add
inc
mov
mov
fisttps
into
mov
xor
adc
clc
sbb
repnz
and
mov
js
loope
dec
adc
xor
pop
fstl
pop
pop
mov
pop
out
mov
dec
push
test
aas
jnp
xorl
adc
jmp
or
inc
push
sub
push
mov
icebp
icebp
jns
jbe
out
mov
push
test
out
fimull
push
fsts
es
dec
mov
sub
aaa
ljmp
lcall
pop
adc
cmpsl
sahf
or
ljmp
sub
test
in
jne
mov
jb
or
sub
lret
adc
mov
in
or
imul
lcall
and
xchg
cmp
cmp
xchg
push
loop
sub
add
lods
cltd
add
cmpsl
mov
cwtl
mov
cmp
lret
jmp
xor
mov
out
stos
jecxz
addr16
out
push
sub
pop
jecxz
mov
ret
sbb
mov
test
cltd
rorb
dec
test
cwtl
bound
add
mov
into
lock
iret
xor
inc
xlat
shll
icebp
mov
dec
pop
mov
or
psrld
test
cmc
dec
add
stc
cwtl
in
in
mov
push
sbb
jp
push
loope
mov
push
jmp
popa
in
sub
pop
adc
xor
sbb
mov
out
popf
daa
jmp
adc
clc
sub
sbb
xlat
mov
shll
sarb
std
pusha
sbb
outsb
mov
pop
push
push
jl
insl
xchg
ret
dec
dec
cmp
or
out
mov
jmp
and
xor
push
mov
xor
icebp
and
jno
xchg
dec
pop
mov
mov
inc
push
mov
ljmp
inc
les
add
cltd
in
dec
inc
pop
test
xor
jp
daa
pop
and
ficompl
jge
repz
pop
lods
int
shlb
inc
in
out
out
mov
cs
add
movsl
js
push
test
bound
xchg
pop
fsubrp
pop
mov
xchg
jle
sbb
js
mov
cmpsb
cmp
jecxz
lahf
fisubl
or
xchg
ret
into
xchg
divl
mov
mov
sbb
dec
pop
dec
mov
inc
push
je
xchg
push
or
dec
outsb
lahf
mov
lret
rorl
pop
test
jb
inc
mov
insb
ret
sbbl
xchg
subb
shrd
clc
mov
enter
aad
out
mov
mov
stc
xchg
mov
sbb
scas
or
jns
nop
jmp
xlat
cwtl
iret
ror
imul
xchg
in
insb
adc
push
jl
and
fisubl
cmc
aaa
cmc
aas
mov
sbb
fidivl
test
and
and
pop
or
jle
xchg
stos
aaa
lds
mulb
lods
daa
push
mov
inc
inc
cmc
cmp
data16
lcall
mov
enter
inc
ret
mov
out
aam
cmc
ficomps
stc
sbb
movsl
sbb
fsubrs
sub
xchg
push
repnz
out
jne
mov
addb
and
pusha
mov
or
addr16
test
inc
xchg
cmp
push
xchg
lea
dec
outsl
popa
enter
mov
and
outsb
lock
jp
mov
sub
jns
push
ss
adc
insb
insl
stc
sub
push
adc
cltd
or
jmp
test
in
pop
add
adc
cwtl
leave
scas
aad
pop
add
ljmp
jb
fs
push
test
cmp
rcrl
pop
push
loope
andb
mov
pop
sbb
into
xchg
inc
lret
add
xchg
add
fdivr
insb
nopl
and
cmp
dec
test
ret
fs
sbb
push
scas
xorb
leave
mov
jl
loop
imul
mov
fldl
jb
and
shrl
in
or
mov
das
jle
pop
ret
jns
repz
sub
jae
mov
xchg
nop
inc
orl
movsl
jo
sub
pop
dec
shr
pop
fs
and
and
decl
outsl
inc
loope
ret
aad
mov
dec
add
mov
mov
nop
std
lds
push
jl
adc
out
hlt
outsl
aad
fadds
int3
inc
dec
out
mov
lret
jnp
mov
iret
and
std
scas
mov
nop
test
xchg
cmpsl
mov
xor
mov
mov
popa
push
loope
js
xchg
dec
pusha
les
mov
xlat
sti
inc
outsl
or
push
fs
inc
push
or
xlat
out
pop
mov
push
jl
fs
or
jo
and
imul
popf
cmp
sub
pop
js
xchg
mulb
sbb
fnstsw
popa
sub
cmp
pop
xchg
add
movsb
fisttpl
sub
cmpsb
sahf
jb
repz
and
loop
add
add
test
and
and
jb
add
insl
fwait
mov
xor
or
lds
cmp
das
cmpsb
inc
ret
cmp
or
inc
aaa
lret
mov
cmp
pop
cmp
into
mov
push
push
and
push
lahf
add
call
inc
ds
mov
xchg
xchg
int3
lahf
dec
push
ret
add
in
aam
lret
shl
enter
fwait
lahf
fnsave
inc
iret
negl
lret
inc
ds
outsb
mov
in
dec
adc
cli
sahf
pop
mov
push
repz
lods
mov
add
push
add
mov
arpl
push
out
aas
aaa
add
insl
mov
mov
sub
enter
jns
mov
and
outsl
test
in
cmp
xchg
or
adc
aam
rcrb
pop
lods
out
add
adcb
jo
das
dec
and
rorl
in
pop
xchg
popa
mov
push
fcomps
call
push
ss
cli
cmp
test
mov
lret
pop
jo
jo
loop
and
pushf
movsb
mov
ret
popf
add
std
xchg
xchg
notl
adc
dec
adc
leave
xchg
in
add
inc
sarb
xor
push
cwtl
cltd
lahf
mov
lret
sbb
lret
aaa
pop
fidivs
push
pop
mov
push
mov
and
push
cmp
mov
xchg
push
testl
ja
sub
dec
repz
in
popa
and
mov
jno
outsl
or
loop
fstpl
push
int
sub
pop
aad
jl
xchg
xchg
fistpll
jmp
inc
repnz
sbb
xchg
cmpb
mov
in
sub
repz
push
dec
xchg
adc
and
sbb
lods
jnp
jg
xchg
enter
inc
div
sbb
sbbb
in
xchg
mov
out
pop
add
jns
add
dec
xchg
std
jecxz
xorl
and
rcrb
call
pop
or
lods
sar
loop
sbbb
jne
arpl
jns
rol
jp
xchg
xor
pop
mov
pusha
and
imul
mov
imul
cmp
hlt
ret
andb
das
push
lock
pop
fisubs
test
mov
push
adc
es
cld
lea
icebp
fdivl
add
sbb
iret
fsubl
or
mov
sub
out
jge
mov
push
and
push
cmp
sbb
xchg
xchg
in
jecxz
push
dec
jnp
dec
addr16
mov
xchg
pusha
jecxz
mov
mov
pop
push
sti
adc
adcb
cmc
jbe
scas
popf
xlat
mov
js
bound
les
sub
call
and
icebp
push
fldcw
xor
shrl
mov
sub
ljmp
mov
ja
pop
nop
insb
push
orb
xor
jl
fmull
vphadduwd
jb
or
testl
xlat
loop
xchg
xor
mov
fildl
fistpll
imul
mov
pop
sarb
outsb
xchg
or
and
add
scas
push
jnp
mov
mov
imul
fs
push
mov
rcrl
mov
cmc
cmp
filds
xchg
jecxz
pop
inc
sbb
xchg
movsl
xor
xchg
or
pop
mov
int
xor
jno
dec
dec
push
mov
cltd
xchg
cmpb
add
out
sub
jg
jmp
sbb
arpl
jmp
lahf
sahf
xchg
pushf
inc
insl
push
mov
scas
mov
xor
sbb
imul
jns
jo
gs
push
addb
sub
shr
push
out
mov
or
repnz
dec
xor
sbb
mov
call
enter
xchg
in
pop
lret
mov
jle
mov
inc
cmp
jno
xchg
addr16
andb
inc
push
lcall
dec
repz
ret
add
scas
repnz
and
fbstp
gs
in
push
sbbb
addl
divl
imul
clc
shr
lret
xchg
stos
jb
int
fcompl
add
push
jge
jmp
inc
inc
xchg
leave
jge
push
or
movsl
loope
and
inc
inc
pop
dec
or
mov
imul
ljmp
xchg
and
adc
lret
and
dec
movsb
xchg
adc
mov
fsub
in
fcomps
cs
xor
xchg
mov
or
push
push
inc
das
inc
jp
adc
shrl
mov
lret
in
jnp
add
test
outsb
jae
jo
jecxz
leave
ds
sub
mov
mov
je
sub
stos
or
scas
aas
lahf
push
mov
pop
pop
fcmovu
icebp
push
js
pop
xchg
mov
sub
cmc
fwait
mov
cmpsl
fs
aaa
and
pop
icebp
sahf
out
outsl
scas
stos
push
fildll
insl
ret
push
xor
inc
nop
mov
sbb
mov
xchg
adc
cs
aad
bound
or
and
imul
push
insb
cmp
ja
sbb
fs
cmova
xor
sub
mov
adc
dec
neg
adc
xor
sub
js
fisubrs
push
push
mov
lcall
sub
add
push
xchg
stc
lock
push
sub
loopne
aad
sub
cmp
dec
add
sti
mov
lock
clc
sti
daa
popf
icebp
add
fsubs
lret
insl
outsb
imul
pop
lea
into
add
scas
fsubs
into
mov
in
adc
out
pop
push
sti
fdivl
lds
fwait
ljmp
into
insb
adc
push
sub
fildll
in
lds
rcll
add
lahf
pop
xchg
jge
add
movsl
sbb
push
mov
in
push
add
insb
dec
sti
cmp
cld
repz
mul
sahf
fidivrs
sahf
or
pop
lret
mov
adc
pop
sub
xchg
mov
mov
push
clc
sub
add
sub
pop
inc
push
pop
xchg
imul
fdiv
cmp
imul
xor
cmc
cwtl
cmp
mov
out
cwtl
pop
ljmp
xchg
inc
dec
aam
mov
sbb
lahf
jb
cltd
aad
sbb
stos
and
push
add
adc
pushf
jo
inc
mov
mov
and
jge
adc
daa
xor
cmc
dec
dec
cmp
idivb
pop
movsb
cltd
push
subl
bound
test
sbb
fwait
sub
fisubrs
out
imul
stos
push
pop
mov
mov
les
or
mov
adc
jmp
mov
scas
inc
push
sbb
loope
fstp
mov
jmp
cmp
mov
xchg
fcomp
push
sbb
cmp
cmp
dec
cltd
fs
out
or
std
iret
ja
sbb
mov
push
xor
add
aam
es
cltd
test
leave
inc
sbb
xlat
pusha
push
int3
loopne
les
jae
cltd
ds
xchg
fldenv
scas
leave
mov
sbb
insl
outsl
push
and
xchg
sbb
stc
mov
in
pop
inc
cmp
or
mov
jns
scas
cli
lods
ja
lcall
incl
das
jge
inc
push
test
in
sub
cmp
les
mov
inc
push
lahf
inc
push
fcomps
adc
mov
mov
pop
int
lcall
jae
push
sub
dec
inc
cmpb
pop
shlb
cs
cmp
nop
xchg
mov
push
mov
mov
popa
xchg
cwtl
dec
xchg
popa
inc
push
dec
mov
jae
lcall
addl
mov
loope
data16
dec
xor
data16
mov
call
sbb
and
push
shll
and
je
lret
mov
xchg
andl
xchg
lret
or
mov
xchg
rol
dec
xchg
xchg
xchg
dec
add
xchg
icebp
sahf
das
cmpsl
jnp
test
adc
mov
aam
xlat
imul
inc
jp
sub
mov
sbb
sbb
pop
clc
inc
sahf
sahf
sbb
les
dec
push
dec
gs
lcall
dec
std
shrb
les
sbb
lret
test
push
jp
push
int3
mov
or
outsl
mov
packuswb
pop
sub
mov
jb
lahf
or
rorl
out
or
sub
incb
mov
pop
cmpsl
adc
dec
add
xor
in
ljmp
andl
pop
repz
bound
in
orl
push
or
les
fucomi
lret
sahf
test
dec
test
sub
in
bswap
mov
dec
sub
jbe
jo
bnd
sti
mov
movl
mov
mov
jecxz
xchg
pop
fwait
out
adc
mov
or
push
push
test
or
iret
add
aam
inc
adc
push
inc
stos
mov
pop
les
stos
xchg
movsb
cld
rorl
popf
aad
stos
add
mov
adc
sub
pop
pop
clc
add
mov
aam
hlt
inc
les
mov
negb
or
mov
jmp
inc
push
sub
in
mov
ds
fcoml
popf
das
int3
xchg
mov
inc
mov
lds
lahf
icebp
sbb
fdivs
dec
daa
popf
cmp
popf
dec
int
lds
xchg
inc
daa
outsl
xchg
movsb
cltd
add
xchg
cs
enter
leave
sbb
and
scas
test
push
and
gs
sbb
addr16
jl
decb
in
scas
cmp
aam
jo
sbb
xchg
loop
mov
insl
adc
sbb
ficompl
stos
sub
push
pop
add
adc
repz
or
mov
stos
into
aad
add
out
imul
lods
xorb
cmc
sub
cld
adc
xor
sub
out
jo
cmpsb
xchg
add
clc
and
dec
leave
lods
das
inc
push
inc
xor
addb
test
xchg
mov
xor
fiadds
fdivl
out
mov
fs
push
mov
cwtl
dec
inc
test
mov
mov
shl
hlt
pusha
test
ds
or
push
scas
jle
jmp
in
or
jb
xchg
enter
scas
mov
lretw
bnd
xlat
sbb
cli
idivb
sbb
pop
push
popf
loopne
xlat
insl
inc
push
shrb
out
ljmp
dec
repz
lock
push
jge
sbb
add
sbb
push
fldcw
imul
fbld
xor
std
xchg
sbb
xchg
cmpsb
xor
cltd
add
jnp
xchg
xchg
call
out
xchg
pop
stos
cmpsl
mov
pushf
xor
pop
lsl
inc
xchg
push
cmp
jb
mov
loope
cmp
pop
in
stc
sub
lret
jbe
fstl
call
aaa
and
mov
sub
pop
push
push
rcpps
hlt
or
add
orl
pusha
daa
inc
dec
mov
cld
cwtl
mov
icebp
leave
ja
popa
pop
rcrb
xchg
sub
mov
jnp
sti
fnsave
nop
mov
sub
jae
add
mov
mov
mov
cmp
or
rcrl
stc
imul
mov
js
xchg
sub
jo
jbe
out
inc
inc
dec
das
mov
sub
mov
inc
inc
fucomi
scas
imul
dec
sub
mov
pop
and
cmpsl
xor
xor
mov
xor
cmovnp
rorl
fs
add
rol
mov
fsubs
imul
out
push
cmp
fs
fldcw
or
cs
push
push
xor
push
aam
scas
dec
sbb
aam
jnp
mov
or
sub
cmp
xchg
mov
add
xchg
xor
loop
leave
push
cmp
sub
imul
cli
mov
xchg
cs
inc
jp
enter
hlt
stc
add
femms
sahf
cwtl
add
aaa
arpl
in
pushf
and
int
cmp
mov
dec
jmp
xor
jp
inc
mov
push
test
into
int
ljmp
in
test
pop
insl
js
subb
fisubs
pop
arpl
mov
out
addr16
mov
or
inc
lahf
xchg
insb
push
lcall
inc
test
or
sbb
mov
inc
pop
dec
or
std
test
push
sti
pushf
movsb
and
stos
lret
fcmovne
jmp
xor
pushf
sub
mov
lahf
pop
dec
mov
xchg
cwtl
popa
ja
mov
push
inc
in
movsl
sub
int
sbb
add
dec
in
lret
aas
repz
fstpt
sub
rcll
loop
jns
insb
dec
inc
jnp
sub
movsl
adc
shl
jge
jge
roll
ds
pushf
sti
sub
mov
push
dec
cmp
lea
and
adc
xor
test
out
setae
ret
pop
mov
es
cmp
sbb
lcall
push
insb
cmp
cmc
adc
xor
or
popf
adc
into
fbld
mov
std
ja
fsts
xchg
in
les
add
iret
add
pop
pushf
mov
insb
mov
push
push
pop
popa
push
inc
dec
faddl
sub
mov
ret
xor
jg
fsubrs
cmpb
mov
repnz
imul
icebp
inc
aad
push
subl
inc
inc
imul
fildll
jbe
adc
jno
out
or
and
xchg
and
insl
dec
pop
mov
adc
lods
dec
sbb
pop
mov
out
mov
shlb
sub
out
leave
dec
xorl
jae
lock
das
pop
and
push
je
sbb
inc
or
sbb
rcrl
cmp
das
dec
mov
xor
xchg
mov
xor
ficomps
lock
xor
test
loope
mov
popf
inc
mov
into
dec
sub
daa
jmp
mov
aas
mov
sub
pop
pop
je
fcompl
mov
dec
cmp
adc
sbb
or
lret
out
cmp
into
pushf
xchg
hlt
mov
add
mov
iret
pop
adcl
add
push
ret
push
dec
aaa
xchg
rolb
mov
mov
fbstp
call
sbb
mov
cwtl
adc
sbb
push
sbb
mov
add
xlat
aas
loopne
xchg
cmp
lods
shll
xchg
push
push
lea
mov
inc
std
inc
sub
mov
jae
mov
nop
cld
in
aam
jnp
xchg
xchg
inc
adc
movsb
testb
aad
scas
xor
mov
shlb
ficomps
pop
dec
movsl
scas
rclb
inc
pushf
lahf
dec
popf
pushf
lds
hlt
jnp
cs
or
daa
scas
test
push
pop
insb
mov
xchg
jbe
lret
push
sbb
pop
stos
ret
mov
xor
hlt
pop
jno
push
xchg
mov
cmc
cmc
stos
fisubrs
incl
nop
xor
pop
adc
or
mov
andb
test
rol
xor
ror
psubusb
idivb
pop
and
dec
or
out
sbb
in
mov
sub
cmp
aad
cmp
mov
int
into
int3
mov
sub
mov
mov
je
xlat
inc
inc
popf
outsl
imul
and
xorb
dec
jo
push
std
rcrl
xchg
mov
mov
pushf
push
push
inc
fimuls
mov
rol
lahf
cld
sub
hlt
adc
fiaddl
cmp
sbb
jno
or
jo
xor
addr16
push
mov
loopne
sub
mov
fnsave
lret
orb
outsl
fnstcw
ds
nop
loope
lock
jg
push
pop
cmp
xor
stc
jl
adc
xor
pop
stc
jo
sbb
xchg
in
cli
popf
xchg
arpl
dec
imul
mov
rcr
inc
xor
fwait
out
mov
jmp
inc
mov
xor
or
fidivrs
mov
adc
arpl
cmp
and
popf
loop
xor
push
test
in
sub
arpl
xlat
push
pmaxsw
aas
fcmovu
fdivrl
inc
adc
in
jp
daa
in
into
fld
push
jmp
out
std
xor
sbb
sti
cmp
shrl
aas
adc
es
lret
mov
lods
cmp
ret
xor
inc
sbb
xorl
jp
mov
xchg
dec
cld
jmp
test
lahf
cwtl
mov
sbb
pop
testl
test
pushf
push
xchg
sbb
dec
xchg
pop
stos
adc
adcl
cmc
mov
cmp
and
fmull
xchg
aaa
sahf
ljmp
loope
inc
lock
xor
fmul
aad
sarl
jg
cmpsl
roll
mov
jbe
xchg
addb
pop
jp
adc
mov
mov
mov
inc
sbb
sarl
lds
bound
mov
push
push
xchg
in
cmp
popa
pop
dec
call
fld
lods
es
in
scas
mov
jge
cmp
loopne
hlt
pop
cmp
and
jns
jnp
jo
outsb
mov
bnd
lds
sti
mov
cmp
or
fstpl
mov
jle
neg
int3
stos
in
pop
cwtl
mov
jnp
pop
cmpsb
add
sbb
lea
movsl
adc
mov
outsl
xchg
pop
stos
jge
mov
or
mov
jle
int
hlt
out
aad
sub
add
mov
ficompl
cmp
std
lods
orl
sub
sti
addr16
es
bound
es
mov
push
dec
add
adc
xor
push
push
nop
dec
rcr
outsb
adc
cmp
scas
fwait
pop
push
xchg
cmp
push
stos
xchg
cmp
in
or
xor
movsb
das
ds
stos
dec
movsl
mov
in
mov
mov
insl
and
data16
insb
ret
cmp
mov
xor
sub
repz
aad
decl
stc
push
ljmp
test
ja
cmp
adc
cmp
dec
cmp
arpl
mov
cs
add
repz
in
inc
in
aas
jl
xlat
cmpl
push
lcall
decb
out
in
mov
rcrl
cli
lock
daa
incb
decl
outsb
mov
sbb
xor
sar
push
popf
mov
inc
jmp
mov
mov
jbe
ficompl
mov
enter
add
mov
in
or
xor
cmp
push
cmpsb
add
lods
xorb
push
fldl
add
clc
push
test
pop
mov
mov
inc
pusha
mov
outsl
xor
xchg
shl
push
leave
xchg
jecxz
and
inc
popa
pop
mov
xchg
sub
add
jle
sbb
int
sub
outsb
xchg
xchg
fisubs
fdivs
jge
xchg
sbb
cmp
push
mov
mov
xor
test
mov
call
push
jne
push
dec
stos
in
bound
mov
lea
mov
or
lret
es
pop
lea
inc
xchg
push
hlt
cwtl
jnp
push
out
push
and
inc
sbb
aam
push
leave
loope
in
insb
push
add
mov
loope
push
dec
push
sbbl
imul
xlat
pushf
add
pop
cmc
aas
jae
ja
cmc
je
gs
lret
mov
and
lcall
sti
test
push
repz
mov
fldt
decl
popl
mov
cmp
xchg
jns
inc
clc
adc
lock
fimull
dec
mov
xchg
pop
jmp
or
fildll
push
mov
lret
test
sahf
sbb
mov
jne
xlat
sbb
les
and
push
stos
adc
add
and
push
mov
jl
jle
jge
adc
sbb
call
pushf
stos
call
push
arpl
sub
cmc
in
out
sbb
lea
arpl
popf
xorl
mov
pop
cmpsb
ret
dec
repnz
mov
in
jb
pop
pop
stos
cmp
pop
daa
repnz
lea
xor
cltd
negb
sbb
enter
ficoms
jae
ret
test
ja
sub
adc
test
xchg
or
inc
aad
xor
adc
add
rcl
cmp
mov
pop
shrl
and
xor
push
xchg
mov
dec
cs
inc
jmp
aad
cltd
incb
out
lock
lods
mov
jbe
sbb
xchg
fnstsw
les
aas
xchg
jno
lea
leave
or
push
mov
dec
inc
or
dec
mov
dec
sahf
xchg
imul
rol
inc
repnz
aaa
dec
lods
out
aam
cld
jb
testl
or
sbb
and
pushf
cmpsl
sti
or
mov
sub
xchg
shrb
lret
lods
sarl
in
pushf
fsts
add
mov
mov
mov
loopne
subl
cmc
mov
inc
fcmove
fs
call
push
inc
mov
fnstcw
add
jns
add
mov
mov
sbb
cltd
mov
xchg
cmc
lret
jb
sub
dec
xor
lcall
push
inc
lcall
mov
xchg
mov
mov
repnz
jb
xchg
andl
bound
aas
mov
out
mov
or
inc
xor
mov
shrl
gs
adc
ljmp
xor
gs
or
stos
imul
add
xchg
in
lcall
mov
not
jne
test
sub
das
cmpsb
lret
sti
mov
lods
push
inc
jb
loopne
outsb
sub
and
addr16
stos
shll
insb
fwait
and
neg
mov
cmp
jge
lcall
xor
mov
or
mov
and
sti
dec
jns
fiadds
or
inc
outsl
jbe
mov
int3
imul
jg
stc
das
mov
mov
repz
adc
fistpl
xor
mov
aam
sub
sbb
popa
test
sbb
pop
mov
movsl
jmp
sti
fistps
or
sub
cmp
and
lods
icebp
out
mov
push
xchg
call
gs
in
jo
int
cmp
lea
mov
push
dec
addr16
mov
lahf
mov
and
mov
push
jmp
scas
repz
jle
les
pop
ljmp
mov
adc
add
mov
jne
xchg
sub
inc
mov
in
js
pop
cld
repz
xor
and
movsl
jp
inc
es
es
out
imul
and
movzbl
rolb
push
popf
or
lret
es
push
push
cmp
push
xchg
pop
jno
outsl
mov
andl
xchg
and
add
lods
stos
mov
data16
test
inc
lock
sbb
movsl
inc
mov
inc
mov
cmp
cmp
adc
pop
sbb
imul
call
inc
sub
inc
out
icebp
int
ja
dec
insb
xchg
mov
or
aaa
rorb
ret
inc
in
mov
ljmp
add
outsl
ret
jo
mov
inc
jae
ret
add
scas
pop
dec
mov
or
sar
loop
jmp
and
fsubrp
ret
sub
pusha
popa
inc
pop
mov
jns
out
or
pushf
and
test
dec
add
test
fiaddl
cltd
ror
pop
add
popa
fnsave
cli
push
push
lret
add
dec
loop
mov
outsl
pop
hlt
sub
lret
xchg
and
inc
shll
dec
arpl
jmp
dec
pop
imul
mov
xchg
leave
aad
jno
outsb
dec
in
lock
mov
adc
mov
cmp
adc
stos
test
popf
sarb
cmp
fdivs
sbbl
sbb
out
push
mov
lods
mov
daa
inc
jp
dec
std
cmc
loop
adc
mov
gs
xchg
mov
notl
mov
int
pop
fiaddl
xor
aam
mov
xchg
mov
add
lds
mov
push
das
fisubs
mov
rcrb
cld
pop
inc
jo
test
pop
inc
pop
clc
movsb
mov
push
sar
inc
mov
push
push
loope
cmpsb
repnz
outsb
popa
sti
sbb
outsl
mov
xchg
stc
xchg
dec
push
pop
icebp
inc
nop
dec
testl
cli
fdivrl
lcall
pop
dec
jecxz
add
imul
or
into
jae
inc
add
lods
into
sbb
push
pop
xchg
mov
movsl
frstpm(287
mov
mov
arpl
ret
dec
icebp
in
add
sarb
lock
rclb
cwtl
fstpt
push
int3
popf
xchg
sbb
out
mov
sbb
subl
pop
rorb
jae
sub
sahf
push
fsubs
cmovle
je
and
cld
jo
sbb
dec
xlat
dec
popa
sbb
aad
cmp
ret
jae
jno
xchg
test
imul
xchg
xor
outsl
icebp
inc
mov
loop
sbbb
aas
shll
bound
sar
cltd
rol
mov
repz
lret
cmpxchg
add
sbb
clc
mov
dec
insl
popf
incl
loope
cmp
out
aas
fcoml
hlt
lahf
aas
dec
mov
lcall
out
scas
sub
adc
sub
pusha
jecxz
test
push
les
jle
daa
jne
sub
enter
mov
jg
jae
testb
aaa
lods
xor
shrb
dec
fsubl
and
mov
cmp
lods
inc
and
pushf
mov
jle
jl
and
movsl
mov
add
aam
fistpll
add
mov
inc
mov
mov
mov
inc
aas
pop
mov
popl
lds
push
sub
cltd
adc
jmp
dec
iret
push
mov
and
xchg
add
mov
rcr
repnz
sub
call
mov
or
mov
in
dec
dec
ss
out
jne
dec
ret
xchg
cmp
mov
outsb
fstpl
jae
rclb
cs
mov
out
clc
xor
xchg
rclb
inc
flds
xlat
gs
and
test
inc
jo
cmp
aam
mov
mov
push
and
pop
cld
inc
and
popa
nop
aam
dec
pop
arpl
push
aam
sbb
outsl
sbb
adcl
hlt
addr16
mov
call
push
movsl
testb
popf
imul
push
and
flds
sbb
dec
lret
fsubrs
mov
cmpsl
lds
inc
mov
ljmp
dec
out
mov
sbb
mov
fsubl
cmc
pop
stos
aam
imul
incl
fcompl
jmp
mov
out
mov
push
pop
adc
push
daa
lock
or
add
sub
aaa
or
cmp
sti
jl
fcompl
xchg
adc
cmp
pop
adc
pushf
test
sub
jo
and
push
inc
mov
mov
mov
shlb
jno
outsb
dec
xor
or
lcall
popa
pop
xchg
incb
lret
xor
cmpsl
mov
inc
sbb
pop
mov
pop
int3
dec
xlat
push
sbb
pop
push
and
or
stos
fwait
push
jnp
js
pop
ss
or
xchg
in
jge
xor
inc
adc
sar
xor
fsts
outsl
test
fdivrs
lock
popa
jecxz
lret
pop
push
push
ja
inc
sub
mov
fcompl
ret
mov
int
ss
nopl
mull
mov
jbe
cmp
mov
stc
xchg
and
stos
xchg
out
into
inc
stc
pop
or
xchg
pop
and
sub
loope
sbbl
xor
in
mov
stos
or
stc
mov
adc
sbb
add
arpl
jg
xchg
mov
repnz
shrb
scas
mov
xchg
sub
inc
stc
ja
push
push
ret
lcall
test
in
cmp
cmp
pop
sbb
xchg
xchg
orl
out
jo
dec
xor
cs
pop
imul
cmp
mov
lods
std
mov
push
and
in
jp
pop
mov
add
loopne
jb
addl
jmp
bound
pop
inc
dec
bound
adc
fistpll
cmp
xor
stos
roll
bound
loopne
pop
push
nop
fnsave
scas
outsl
movsl
aam
adc
pushf
dec
xchg
aam
fsubrl
adc
repz
jns
dec
into
int3
xor
fisttpl
lds
or
adcb
dec
ja
in
pop
mov
sub
add
mov
mov
insb
add
jl
sbb
jmp
std
adc
test
cwtl
jo
xor
cmp
jae
imul
ja
xchg
fimuls
xchg
test
inc
hlt
fsub
or
test
aam
dec
jle
or
lock
mov
cmp
push
jl
dec
enter
sbb
sti
jne
add
repnz
or
inc
cmp
sbb
and
mov
dec
push
jne
out
or
push
fucom
cmp
xor
xchg
movsl
push
sub
and
push
xchg
xchg
ret
daa
push
xchg
xor
mov
dec
or
cmpb
add
xor
push
inc
mov
xchg
imul
sub
jp
cmpsl
aas
mov
clc
dec
lahf
movsb
mov
mov
fstpt
add
addr16
js
or
push
mov
add
mov
mov
les
push
sbb
lods
pop
add
in
inc
sub
xchg
lods
fcomps
pushf
push
and
lods
iret
jo
jle
call
lcall
push
repz
xor
adc
gs
pushf
adc
or
movsb
out
sti
mov
ret
sbb
div
jns
mov
rcrl
loope
cwtl
jnp
lret
clc
xchg
leave
xor
fs
popf
or
push
xchg
out
cmp
in
and
sub
cs
sbb
stos
or
mov
aad
fsubrp
cld
ret
imul
aas
jle
roll
repz
movsb
pop
push
loop
inc
mov
pop
push
rol
or
test
push
sbb
pop
call
andl
hlt
and
jp
loop
and
pop
dec
push
mov
sbb
xlat
adc
cs
call
inc
cmc
push
inc
inc
push
cwtl
sahf
sub
cmpsb
push
cmp
aaa
pop
adc
xchg
mov
pop
adc
cmp
add
add
add
popa
cld
pop
add
fs
sub
add
mov
or
mov
mov
xchg
xchg
mov
pusha
cld
jnp
hlt
push
cltd
mov
cmpsl
add
in
mov
jb
test
sbb
mov
mov
sbb
in
roll
cmp
cmp
or
mov
dec
xorl
xchg
repnz
jle
inc
mov
sbb
loop
addr16
mov
dec
push
popa
mov
sti
cld
mov
add
rclb
cwtl
lret
sub
inc
inc
inc
lea
test
lahf
xchg
and
and
data16
jge
mov
mov
cmc
pop
addr16
inc
mov
in
cmpsb
cmpl
dec
sub
shll
mov
loopne
mov
sbb
lds
negl
ficoms
push
mov
roll
mov
jns
stos
sbb
add
push
rclb
inc
mov
mov
cmpl
mov
cmp
daa
stos
ss
pop
xor
enter
push
repnz
gs
add
or
mov
jno
les
mov
stos
xor
and
jg
out
fdivrl
sbb
mov
stos
mov
xor
sbb
aam
adc
dec
inc
bound
pusha
dec
cmpsb
ljmp
outsb
lock
xor
xchg
ret
mov
enter
ljmp
insl
cmp
lret
xchg
ret
fs
mov
xor
daa
orl
inc
jecxz
or
push
sti
sub
xchg
dec
or
push
mov
in
jns
cmp
cs
xchg
jb
clc
xchg
adc
add
out
inc
and
add
push
mov
imul
xchg
and
jmp
fildl
push
in
or
fdivl
pop
mov
pusha
shrb
push
les
cmp
fisttps
push
inc
dec
ss
shrb
outsb
cld
pop
jl
or
cltd
mov
sub
push
push
hlt
fld
ljmp
xor
mov
xchg
jle
xor
jb
mov
daa
adc
pop
xor
rep
orb
sbbb
ss
dec
shlb
adc
gs
fisubl
or
sbb
inc
add
push
hlt
pop
dec
andb
stc
dec
rclb
adc
push
mov
imul
orb
scas
push
jle
repnz
or
mov
dec
scas
xchg
and
cmc
dec
inc
xor
or
jl
fnstcw
push
pop
push
adc
sbb
imul
movsl
loop
pop
pushf
sbb
loop
in
jbe
mov
push
dec
mulb
jp
lds
xchg
pushf
fstpt
leave
movl
push
push
xor
mov
imul
xchg
add
inc
xchg
sbb
push
dec
add
xchg
pop
mov
and
xchg
push
sahf
pop
mov
add
push
pop
ret
insl
shll
test
cmp
std
pop
sub
and
sbb
sbb
ds
push
mov
fisubrs
and
bound
je
test
insb
call
test
push
dec
imul
aad
push
mov
dec
mov
lods
dec
or
in
iret
dec
daa
inc
call
cltd
arpl
pop
or
cltd
aaa
ret
loope
mov
shrb
sbb
fimuls
xchg
adc
pusha
xchg
inc
wbinvd
popa
dec
pop
int
cmc
push
out
sub
ss
or
cmpsb
jns
dec
test
mov
lock
repz
clc
aam
sub
sbb
mov
movsl
sbb
xchg
mov
loope
into
cltd
pop
clc
aas
xchg
lret
mov
inc
inc
add
mov
pop
lds
movsb
movsl
subl
sub
xchg
mov
gs
repnz
mov
shlb
mov
scas
std
cld
testl
sub
cmp
cmp
add
sub
mov
xlat
mov
int3
ljmp
and
cltd
inc
lds
pop
cmp
fildll
arpl
adc
xor
mov
jecxz
fwait
call
push
mov
inc
cltd
dec
push
pop
push
xchg
loop
loope
aaa
and
pop
adc
adc
sub
jmp
cld
mov
xchg
mov
dec
iret
lds
push
insb
out
stc
pop
mov
jne
movsl
loop
dec
out
mov
xchg
loop
int
add
jns
or
xor
mov
adc
sub
and
lods
pushf
sub
cmpsl
fdivl
lret
mov
fcoml
or
jae
mov
mov
neg
mov
inc
cmp
push
pop
out
bound
sub
je
ss
clc
inc
mov
insb
shl
loopne
imul
or
fiaddl
sti
xor
jbe
cmp
in
push
aam
lea
xchg
push
dec
sbb
sbb
dec
sub
fcoms
nop
in
movsb
inc
lods
fisubs
lods
es
inc
ljmp
sub
cmp
xchg
jbe
xlat
dec
fidivrl
xchg
dec
xchg
mov
outsb
cmpsl
pushf
fcmovbe
mov
stc
sbb
addb
das
xchg
loop
xor
pusha
aad
adc
cmp
std
loope
fisubs
mov
cmp
daa
sarb
dec
movsl
ss
int
ljmp
bound
xchg
scas
int
cmpsb
les
in
lods
in
mov
lea
mov
cmp
dec
sahf
mov
cwtl
or
outsl
push
and
cmpsb
iret
sbb
cmp
cli
outsb
cmp
cmp
fdivrs
push
icebp
xor
mov
sbb
sub
andb
lahf
fstp
loopne
push
mov
jns
fiaddl
sbb
adc
mov
sub
xchg
push
mov
adc
ret
dec
and
int
xchg
dec
and
insl
jp
inc
out
dec
popf
mov
inc
xchg
ret
jnp
clc
jns
popa
iret
jl
and
sahf
pop
jmp
mov
int
loop
fwait
mov
mov
xor
imulb
aam
in
aam
or
xor
mov
mov
inc
cld
and
cmp
pop
dec
adc
jge
jb
mov
movsl
das
rcr
add
mov
in
cmp
xchg
push
loope
stos
jge
std
xor
sub
pop
popa
push
pusha
dec
mov
pop
adc
cmpsb
jae
stos
js
dec
cltd
daa
mov
cmp
push
stos
movsb
mov
ds
in
cmp
jbe
loopne
rep
push
lock
clc
shrb
pusha
sahf
cmp
das
mov
jne
cs
mov
cmpl
rclb
sbb
scas
xor
mov
lret
mov
xor
dec
cwtl
lods
jle
popf
shufps
push
call
jle
pushf
pop
sbb
lea
push
cmp
mov
mov
jbe
fstps
rcrb
mov
je
push
dec
adc
shlb
nop
cltd
scas
cmp
cld
fists
inc
mov
inc
push
cli
cmp
add
cld
jecxz
imul
fmulp
mov
cmpb
sbb
jl
out
lret
dec
gs
or
add
xchg
or
xchg
mov
dec
push
test
jle
divl
imul
insb
jg
aam
mov
and
js
mov
cli
mov
leave
les
int3
adc
sbb
pop
ficompl
sbb
add
dec
insl
stos
stos
mov
jle
xchg
mov
sahf
add
push
add
xor
pushf
sub
ds
shrb
mov
xchg
subb
jae
jmp
adc
cmp
and
je
pop
xlat
gs
push
sub
test
ljmp
xchg
mov
out
orl
test
mov
xchg
or
dec
ja
mov
mov
gs
sbb
and
add
in
rorb
push
shrb
ficoms
repnz
or
leave
xchg
xchg
mov
loopne
lret
pop
das
pop
enter
push
insl
movsl
pop
roll
mov
in
loop
pop
imul
xchg
data16
or
cmp
inc
lods
jl
sub
mov
scas
push
outsb
cmp
sub
test
jo
out
inc
ror
aad
push
sbb
movsb
mov
lock
push
cmp
addr16
and
out
cmc
mov
popa
dec
pop
inc
add
mov
adc
ljmp
into
dec
xchg
repz
ljmp
ja
mov
push
pop
ja
cmp
call
imul
xor
jge
cmpsb
mov
popf
cld
test
lock
inc
cmpsl
and
dec
jmp
test
arpl
dec
hlt
jae
or
aas
ficoml
outsl
outsb
lock
push
lods
mov
mov
fsubrl
pop
aam
lret
xor
and
in
cmp
fwait
jp
dec
retw
jmp
add
out
es
daa
leave
cmove
pushw
xchg
cmpsl
lods
int3
jnp
out
cmp
adc
outsl
bound
mov
mov
pop
aam
test
cmp
or
outsb
push
add
in
pop
rorl
fldcw
scas
xor
ret
scas
ret
adc
push
or
adc
mov
push
xchg
lfs
push
ss
les
mov
mov
inc
pop
xchg
hlt
subl
addr16
mov
inc
fwait
adc
ljmp
add
mov
inc
sub
xchg
cmp
lea
pop
xchg
mov
lods
scas
es
mov
loop
test
outsl
mov
sbbl
mov
mov
ret
pop
cmc
mov
push
inc
inc
je
roll
inc
lret
aas
and
adcb
shrl
sbb
jno
sarb
mov
inc
cmp
mov
push
mov
sub
call
pop
mov
xlat
pop
pusha
pushf
mov
xlat
cmp
arpl
insb
sub
jle
divl
jmp
push
jno
adc
es
cmp
inc
test
negb
es
push
stc
jmp
rcrl
mov
cltd
xor
sbb
sarb
test
fsubrl
clc
adc
sbb
aas
add
push
or
or
sub
rcrb
pop
jecxz
mov
rorb
cmp
sub
pop
aad
mov
mov
sub
add
cmp
or
jo
lret
test
pop
je
push
lcall
test
shll
je
mov
jb
xor
popf
adc
cmp
cwtl
btc
dec
dec
pop
mov
lea
iret
dec
lods
sub
ljmp
inc
cmp
test
and
push
push
dec
xchg
imul
mov
dec
mov
mov
cmpb
add
in
out
cmpsl
pop
popa
xchg
movsl
test
cltd
jp
sbb
xor
mov
js
jnp
aaa
sbb
pushf
mov
rcrb
adc
pop
mov
mov
fwait
movsb
sahf
or
pop
pop
mov
or
xchg
ss
or
pop
mov
into
fstpl
mov
dec
shrb
out
gs
cmpsl
js
sbb
incb
std
xchg
mov
mov
xchg
insb
jb
push
pop
mov
push
sti
adcb
neg
pop
pop
xor
sahf
push
in
pop
xor
fcoms
jns
push
aaa
mov
xchg
adc
pop
push
outsb
mov
mov
pop
fdivrs
inc
ljmp
xchg
xchg
js
push
jno
std
jne
dec
lods
push
aas
std
test
filds
dec
and
push
jecxz
mov
inc
int
jns
add
mov
xchg
jmp
jl
pop
sub
notl
aam
in
shrb
mov
loope
mov
iret
sub
jae
adc
or
pop
sbb
outsl
adc
pop
push
mov
mov
aam
dec
fistps
nop
xchg
xchg
icebp
and
lds
xchg
out
fadds
hlt
push
mov
or
mov
inc
push
cmp
jmp
sbb
jo
in
call
pop
xchg
xchg
ss
nop
into
stos
xchg
mov
lods
dec
ljmp
push
pop
sub
jecxz
push
mov
jb
jnp
push
sbb
push
arpl
pushf
pop
jecxz
or
push
subl
sbb
icebp
das
sbb
mov
cmp
and
lock
inc
pop
in
lcall
or
mov
cmp
add
mov
xlat
ss
or
sub
pop
fiadds
out
pop
push
cmp
div
xchg
mov
mov
test
jb
mov
mov
adc
inc
je
cmpsl
xlat
pushl
fildl
loope
push
xchg
push
inc
test
add
mov
xchg
push
je
es
scas
sti
aam
fcomps
mov
sbb
fwait
arpl
aas
cmpsl
pushf
dec
sbb
push
add
sbb
sahf
rolb
in
dec
sub
dec
rolb
inc
mov
fs
and
and
hlt
das
pop
roll
and
sub
sahf
adc
das
pop
adc
out
into
loop
jb
mov
mov
hlt
push
fwait
cmp
mov
cmpsl
rcll
jg
std
mov
mov
mov
pop
dec
sbbl
mov
lea
loope
lock
jmp
clc
dec
dec
add
lock
icebp
adc
movsb
mov
pop
fs
lcall
icebp
cli
ret
jg
out
fistl
sub
xchg
xchg
pushf
xchg
jno
enter
mov
test
daa
movsb
lcall
push
mov
add
jae
inc
pop
xorl
inc
mov
inc
imul
mov
lahf
add
rol
test
jo
in
jb
call
and
mov
aaa
xchg
adc
push
inc
push
xor
rolb
pop
cmp
int3
scas
dec
sbb
repz
es
mov
hlt
ret
adc
cld
adc
inc
mov
outsl
aad
dec
sub
mov
pushf
cmp
sti
dec
ss
pop
cmpl
in
push
inc
scas
adc
pop
pop
jo
js
dec
xor
inc
lcall
iret
add
ds
ds
sbb
jnp
ficoml
mov
mov
movsl
sti
dec
sahf
aaa
call
inc
sbb
jg
cld
es
and
dec
mov
ljmp
stos
mov
aaa
lds
mov
dec
out
jp
dec
push
or
pop
pop
out
je
ret
subb
and
lahf
and
mov
xor
inc
sub
cmp
scas
sub
or
mov
repz
fisttps
mov
pop
in
filds
into
sub
cs
ds
or
out
add
lods
add
rcl
push
stos
mov
push
dec
imul
test
andl
js
dec
cmp
fsqrt
sbb
add
jle
inc
sbb
testl
aam
mov
pop
xor
std
adc
js
pop
test
stos
sbb
mov
add
adc
adc
call
push
cmc
xchg
ret
les
lods
xchg
test
dec
stos
lret
mov
or
pop
mov
pop
push
add
xchg
sbb
mov
out
sub
push
test
xor
jbe
and
jb
cmp
mov
shl
popf
pop
inc
dec
mov
mov
mov
stos
jge
pop
sbb
jne
cmpsl
lcall
pop
es
rclb
fmul
fsts
mov
test
mov
mov
dec
push
stos
pop
out
pop
pop
mov
enter
sti
mov
jle
ret
sbb
test
sub
or
arpl
add
mov
adc
pop
mov
call
sub
mov
addr16
imul
add
dec
xchg
xchg
pop
inc
ds
ret
mov
mov
filds
insb
push
insb
fwait
mov
lret
aas
insb
dec
xor
inc
xlat
mov
shrb
sub
mov
sub
hlt
xchg
in
pop
mov
push
test
push
adc
xchg
arpl
cmc
imul
lahf
test
push
outsb
cmp
mov
mov
hlt
rclb
pop
sti
jl
xor
fdivl
les
adc
movsb
push
fldz
cwtl
insb
xchg
in
jmp
mov
in
daa
pop
insl
or
testl
fiaddl
and
sti
pop
aad
sbb
dec
mov
add
jae
cmpsl
in
ljmp
xor
xor
cltd
imul
sbb
inc
or
fwait
xor
mov
xchg
in
jge
in
xchg
popl
jmp
adc
dec
push
inc
and
int
push
std
pop
sub
xchg
sbb
scas
mov
jb
pop
sbb
test
jnp
and
into
hlt
inc
shll
jl
lahf
sbb
popf
out
sahf
and
pop
aas
inc
push
jmp
cmpsl
cld
test
inc
es
fisttpl
cltd
push
dec
inc
fistl
and
in
ss
push
loope
xor
pop
incl
stos
pusha
daa
cmp
out
jne
clc
inc
iret
loop
pop
dec
cmp
dec
gs
push
jl
xchg
ds
adc
sub
ja
inc
xor
fisttpll
ds
inc
in
addr16
and
push
push
cmp
fwait
mov
out
fld
cmc
dec
mov
dec
nop
mov
addr16
fprem1
and
mov
mov
loopne
sbb
fcomp
aad
xor
sbbl
gs
mov
sbb
jno
lods
jl
push
int
mov
call
mov
loop
xchg
outsb
and
ljmp
sarb
adc
jp
cmpsb
lock
cli
icebp
sarl
lds
mov
and
push
mov
pop
ror
inc
addr16
mov
test
js
shrb
sbb
and
in
jne
gs
pop
into
sbb
and
xchg
push
cmpsl
pop
push
push
aad
ret
lcall
xor
shrl
in
cmp
int3
idivl
in
xchg
mov
fwait
arpl
add
popa
jae
or
xchg
inc
lahf
nop
out
push
jge
call
adc
jo
pop
es
push
mov
mov
daa
clc
movsl
add
leave
int
stc
jmp
mov
mov
f2xm1
mov
sub
scas
fs
or
pushl
xchg
nop
pop
mov
mov
fisubs
xor
cmpsl
imul
mov
loopne
add
dec
cmp
inc
dec
sub
sub
push
xchg
stos
stos
mov
daa
out
out
push
adc
cwtl
sbb
int3
mov
pushf
fimuls
add
mov
lock
sub
mov
push
cwtl
xchg
std
adc
inc
jae
int3
arpl
jge
push
and
fwait
jp
mov
cli
xorb
stc
mov
xchg
and
or
cmp
or
and
sbb
cmpsl
pop
in
gs
mov
push
adc
cmc
in
nop
mov
subl
or
cmp
iret
movsl
dec
xchg
and
dec
test
sbb
and
test
ret
test
fisttpll
jg
sbb
mov
nop
push
jp
ss
iret
mov
mov
cwtl
sbb
in
mov
sti
rorb
cmp
sbb
or
jecxz
pop
subl
mov
push
lcall
pop
imul
or
push
inc
sbb
in
dec
insb
pop
fwait
sub
lock
das
mov
cmpsb
fcmovne
adc
shlb
and
lret
inc
push
sahf
lret
mov
popa
adc
jp
adc
jbe
pop
adc
imull
jo
scas
ret
fcoms
lret
xorl
sti
mov
sbb
cmc
xchg
sahf
pop
cs
icebp
movsb
mov
cs
cmpsb
int3
stos
movsb
rcll
out
jno
add
aaa
xchg
add
push
popa
inc
jg
xor
shrb
testb
pushf
out
add
popa
pop
pushf
push
lahf
int
ja
mov
loope
cltd
imul
lods
fisubs
ss
dec
and
jmp
test
jg
arpl
cwtl
mov
add
adc
xchg
outsb
sti
mov
lahf
cmp
pusha
cmp
lods
pop
xchg
add
insl
std
daa
cmc
cmc
dec
push
inc
sbbb
enter
out
out
int
mov
cmp
mov
popa
mov
jecxz
jle
fwait
sub
adc
mov
mov
cmp
sub
dec
adc
dec
notl
fs
shlb
jbe
sbb
repnz
negb
sti
out
pusha
inc
lods
pop
cs
mov
in
push
fndisi(8087
dec
jp
jmp
dec
lods
mov
mov
xchg
insl
unpckhps
push
mov
jo
dec
loop
loop
pop
dec
jns
je
aad
js
adcb
dec
sbb
add
scas
fidivs
imul
sbb
out
and
cmp
std
into
sub
std
pop
lcall
pop
stos
add
std
and
data16
out
nop
cli
add
mov
insl
test
add
jb
jecxz
lahf
xlat
pop
jbe
mov
mov
xchg
imul
jno
xor
mov
jecxz
push
mov
dec
adc
jo
gs
dec
and
push
sbb
mov
jns
adc
imul
in
dec
push
bts
jle
mov
pop
mov
lock
xor
test
es
test
adc
aas
cmpb
imulb
sub
pop
pop
xchg
pop
pushf
inc
sub
push
jmp
and
repnz
mov
scas
push
negl
mov
xchg
dec
inc
xor
pop
mov
push
push
add
cmc
push
icebp
sub
lods
or
add
jnp
popa
lret
jne
test
int
mov
ljmp
inc
jbe
add
sub
mov
lcall
stc
les
std
jnp
cs
bound
test
into
push
and
arpl
call
inc
mov
lahf
sbb
dec
das
fnstcw
les
sbb
mov
test
mov
jno
inc
pop
mov
mov
jle
sbb
andl
xchg
into
addr16
xor
imul
cwtl
std
push
jns
push
icebp
mul
popf
fildl
notb
jecxz
daa
dec
push
in
cltd
push
sub
push
xchg
jle
ret
cld
mov
add
divb
movsl
scas
mov
jae
dec
fidivrl
sub
ret
jne
adc
rol
pop
ret
xchg
fadds
scas
nop
lock
pop
jne
sbb
cld
mov
mov
push
loopne
pop
inc
idiv
repz
or
mov
xchg
int
sti
jnp
lret
iret
inc
ljmp
inc
or
push
std
jo
mov
sahf
adc
mov
fistpll
xorl
inc
movsb
xor
std
jnp
adc
mov
push
jno
xorl
fcmovnbe
popf
push
fbstp
ret
cmp
jl
jb
lcall
pushf
dec
jno
sbb
dec
ss
les
gs
add
mov
aad
dec
out
or
jp
rcl
pop
xor
jns
aam
cmp
or
dec
das
inc
mov
sbb
inc
lods
push
nop
stos
xchg
shll
jne
adcb
popa
push
filds
jne
add
sub
inc
xchg
mov
testb
sub
push
sbb
xor
fistpl
fwait
adc
cli
mov
lret
xchg
movsb
ljmp
clc
popa
mov
rcrl
ljmp
fisubrs
ret
mov
mov
adc
subl
jbe
repnz
idivb
jecxz
jns
lods
mov
inc
sbb
dec
enter
shl
sbb
mov
jne
outsl
jno
je
mov
fnstenv
sub
adc
pop
repz
dec
jb
pop
or
mov
add
cwtl
mov
mov
rorl
pop
ja
mov
xor
sarl
mov
inc
xchg
pop
mov
push
cmpsl
push
test
inc
aam
outsb
fstpl
rcrb
je
jecxz
lret
pushf
adc
push
lret
popa
arpl
inc
sub
aam
sub
arpl
lods
xor
jl
dec
aad
xor
je
mov
inc
repz
and
sarl
sbb
loopne
cmp
shl
shrb
jbe
xchg
pop
mov
inc
pop
xor
sub
hlt
mov
ret
popl
sub
repz
outsb
adc
inc
popa
push
mov
les
iret
mov
daa
pop
insb
jle
add
shrl
aas
cmp
addr16
mov
xchg
cli
aaa
fnstsw
adc
or
mov
cmp
out
lahf
cli
cmpl
sbb
fimuls
fsubs
sbbb
xchg
mov
mov
inc
shrb
pop
pop
mov
test
add
xchg
mov
add
dec
mov
jnp
push
leave
mov
hlt
push
aad
shrb
lea
mull
das
mov
cwtl
addr16
in
sub
test
in
rorl
daa
mov
dec
daa
int3
push
sub
push
xor
mov
into
adc
ja
cmp
pop
inc
or
jb
sub
out
jp
rcl
repz
and
fsubs
ss
dec
push
dec
jne
inc
jp
std
inc
xchg
into
je
pop
fistl
push
clc
push
jnp
xchg
and
movsl
push
and
xor
in
shll
and
int3
out
push
mov
cmpsb
sub
sbb
cmovb
bound
ficoml
je
dec
imul
insl
inc
outsl
popf
loop
fdiv
sub
cmp
das
iret
jmp
jno
sbb
inc
ds
mov
insb
jnp
mov
pop
or
pop
mov
pop
jmp
cwtl
mov
call
aas
sarl
in
sbb
sub
ss
pop
paddusw
sub
pop
jbe
or
jb
lods
pushl
cli
into
xor
jns
pop
push
push
and
xor
clc
dec
pop
inc
fwait
popa
das
sti
nop
rclb
pop
cwtl
ret
sub
add
iret
mov
jle
cld
popa
or
mov
and
sbb
add
out
aam
fcoml
jbe
xor
sahf
divl
pop
dec
jnp
jle
adc
inc
push
lahf
nop
dec
inc
push
sub
inc
mov
mov
and
jmp
xchg
shll
xchg
inc
imul
shl
and
outsl
mov
pop
shl
les
fmul
aaa
std
or
mov
jg
adc
dec
lcall
in
sub
js
rclb
pop
sbb
in
test
clc
stc
push
iret
lret
jae
jle
cmp
es
inc
mov
cmpsb
mov
mov
mov
callw
inc
movsb
rorl
push
lret
push
and
push
push
jl
inc
pop
or
and
stos
pop
repnz
hlt
out
ja
mov
and
or
cmp
jae
fnstenv
lea
sbb
or
jmp
mov
adcb
cmp
inc
ja
push
je
ljmp
leave
adc
mov
repnz
cmp
pop
loopne
jp
mov
adc
and
push
ja
cmc
push
ss
inc
and
popf
xchg
push
and
dec
or
fs
xor
xor
xchg
sub
jne
dec
fstps
enter
cmp
inc
mov
sub
cmp
add
xchg
cmp
jl
test
repnz
and
jbe
push
mov
cmp
inc
and
xor
mov
fcompp
leave
mov
push
into
fisubs
adc
lea
loope
xor
xchg
push
sti
jecxz
cmpsl
iret
add
and
out
in
loope
push
icebp
lcall
aaa
lea
arpl
les
aas
lds
cmp
loopne
xor
cmpsl
mov
repnz
lock
lock
imul
adc
imul
mov
int3
cmp
adc
ljmp
dec
fidivs
fdivrs
outsl
lahf
fwait
aas
jbe
dec
mov
mov
bound
gs
or
lahf
inc
iret
daa
sbb
push
jnp
in
push
pop
das
ljmp
enter
mov
xor
or
out
and
gs
or
imul
es
subb
ljmp
cwtl
lret
and
xorl
mov
or
lahf
out
cltd
dec
add
adc
lock
pop
dec
fisubrs
mov
lds
sbb
sbb
push
das
pop
jns
mov
push
or
mov
lret
xor
lahf
xlat
and
xor
sti
sarl
out
sbbb
cltd
mov
rorb
add
rcrb
enter
mov
cs
sbb
clc
push
mov
mov
das
jge
or
jb
imul
loop
fcomp
inc
fistpll
pop
cmp
loopne
mov
xchg
mov
gs
mov
sti
cltd
pop
xchg
gs
lahf
pop
mov
inc
insb
push
into
add
test
nop
shl
in
fdivr
sahf
enter
jmp
pop
jmp
fsts
hlt
mov
sti
jl
inc
jno
loopne
xchg
jo
jecxz
das
test
mov
in
rorb
in
in
xchg
pop
pop
rcr
in
shll
jne
fistpll
jecxz
or
dec
and
shlb
mov
sub
shll
fdivr
jbe
mov
sti
pop
push
cmpsl
stos
cs
and
cs
shr
sub
xchg
push
mov
int3
jp
inc
sub
sbb
cmp
jge
cmpsb
jae
mov
mov
cmp
inc
sti
popf
lret
mov
test
scas
test
jbe
xchg
xor
xchg
loope
out
aaa
pop
mov
mov
inc
fidivl
test
insb
mov
add
mov
pop
mov
push
mov
test
stc
call
in
into
inc
movsl
out
mov
sarb
and
mov
andb
cld
mov
movsl
push
push
ss
insl
mov
mov
jno
xchg
aad
aaa
fdivp
aas
ret
xor
pop
hlt
dec
lcall
jecxz
lret
pushf
jns
fdivr
add
ss
data16
adc
sahf
xor
xchg
jmp
ljmp
pop
icebp
test
lods
ret
cmc
call
dec
stos
sbb
add
lcall
jb
in
out
pop
pop
lahf
and
cltd
dec
dec
or
jl
mov
jne
rcrl
add
gs
scas
call
mov
int
mov
add
cld
sbb
mov
inc
mov
pushl
adc
outsl
pop
jnp
push
push
and
sbb
mov
fs
or
xchg
add
sbb
sub
sbb
xchg
mov
jle
stos
inc
lods
pop
xchg
bound
imul
cmp
scas
mov
cmpsb
add
and
mov
fstps
rcr
and
jbe
test
inc
push
adc
aad
push
xchg
adc
or
jl
xchg
lods
dec
mov
jle
xchg
mov
fsubrp
std
mov
mov
mov
pop
sbb
pop
jle
loop
push
sbb
arpl
xchg
sbbl
out
nop
test
pop
movsb
mov
daa
ds
mov
scas
cs
add
or
stos
jmp
xor
inc
push
ljmp
sub
mov
add
movq
fmul
pop
sub
test
out
mov
lahf
call
lods
stc
cli
push
mov
jge
imul
jg
inc
ljmp
pop
shr
mov
mov
popa
sahf
cmp
out
and
lods
stos
jmp
mov
repz
aad
lcall
mov
stos
sti
push
add
lahf
into
lds
sbb
fadds
imul
loop
mov
jp
push
ret
adc
iret
bound
test
dec
inc
fsts
jp
jle
aam
aas
mov
ljmp
add
xchg
jle
mov
and
fldenv
mov
daa
and
xchg
aaa
xor
out
pop
aaa
lret
dec
xchg
cmpsb
or
cmpsl
in
pop
in
inc
add
dec
fstpl
jno
sub
lahf
imul
cmc
jno
call
fmull
cmp
or
dec
xchg
add
sbb
add
sbb
lods
lret
lahf
add
xchg
into
cmp
stos
sub
push
lods
mov
inc
hlt
jl
cwtl
cwtl
movsl
mov
xchg
cmp
sub
pop
ret
lret
pushf
into
pop
add
mov
or
outsb
cs
cmc
xor
add
pop
sub
xor
in
movsb
push
scas
push
mov
clc
add
ljmp
push
mov
sarl
icebp
mov
clc
pop
lcall
out
fdivp
testb
ret
cli
hlt
gs
pop
cli
shr
pop
stc
lods
aas
mov
stos
jno
pop
sahf
fldl
mov
xchg
jecxz
out
pop
sbb
pusha
cmpsl
iret
aas
or
and
mov
iret
mov
jno
pushf
and
or
jmp
mov
cmp
ds
push
repz
icebp
inc
add
jg
adc
xor
leave
pusha
insb
mov
add
gs
movsl
pop
sub
imul
inc
mov
andb
jno
cmp
cmpsl
bnd
in
fsubl
into
sbbb
xchg
jae
pushf
fidivrl
cmpsl
iret
idivb
fisttpll
out
jle
fcmovnb
test
sub
insb
insl
mov
cmp
pop
add
andb
mov
imul
mov
rolb
iret
pop
sub
fldenv
push
test
pop
arpl
cmpsl
mov
sbb
mov
nop
jbe
mov
mov
xchg
sarb
cmpl
adc
push
lock
adc
push
sub
call
inc
cltd
fiadds
cld
inc
mov
inc
mov
xchg
jl
rclb
test
mov
dec
pop
jmp
add
add
jae
xor
add
xchg
and
in
test
pop
sub
dec
aam
mov
cltd
loopne
movsl
stos
push
mov
in
ret
call
fwait
sub
push
pop
int
push
mov
add
mov
vcvttsd2si
call
cmpsl
jp
repnz
lahf
adc
call
enter
adc
ret
cmp
loope
pushf
push
push
pop
je
jns
dec
lret
push
in
cmp
dec
fisubrl
or
or
loopne
and
pop
sbb
aaa
lds
les
lret
lcall
or
imul
ficoml
jne
inc
push
and
xchg
js
test
ss
int3
xchg
mov
mov
subb
sti
repz
dec
inc
jp
mov
lahf
jne
lods
dec
movntps
adc
cmpsl
push
sub
or
outsb
mov
push
inc
xchg
and
dec
jns
cmp
aaa
sub
inc
adc
ss
mov
mov
mov
sbb
or
insb
sarl
fnstsw
out
cmp
je
xor
cmp
sub
cld
jae
lret
lret
cmp
pop
iret
daa
enter
mov
pop
add
inc
aam
aas
dec
fnstcw
shlb
mov
xchg
dec
mov
mov
cli
pop
fidivrs
fnstcw
maskmovq
testl
insb
loope
lcall
jmp
mov
movsb
xor
cmp
push
push
jp
inc
loope
dec
loope
inc
jg
push
repz
imul
fcmovu
pop
mov
pop
stc
cmc
call
aaa
mov
stos
push
es
add
insl
xchg
or
das
stos
lock
jno
add
and
jp
daa
dec
cmp
das
aas
roll
cmp
dec
xlat
lds
addr16
pop
mov
sbb
mov
sbbl
mov
jecxz
sti
cld
cs
xor
push
out
das
iret
jne
xorb
insl
mov
inc
lcall
inc
push
add
pop
fmull
ja
sbb
xor
mov
pushf
inc
enter
and
dec
pusha
shll
ror
xor
decb
adc
xchg
jmp
push
aaa
shlb
stc
popf
or
add
mov
sub
lea
xchg
mov
hlt
cmpsb
call
insl
ja
push
and
add
or
movlps
cltd
sbb
stos
sbb
mov
in
add
movsb
popf
mov
and
ss
les
pop
rcrl
pop
leave
lret
scas
push
or
cwtl
nop
imul
testl
cwtl
stos
cmpsl
fwait
mov
nop
cmc
xacquire
ficomps
loop
mov
js
out
popa
pop
ja
arpl
adcl
add
mov
push
mov
bound
scas
xchg
inc
jl
mov
pop
rcr
cmp
lcall
jg
loop
cmp
xor
lahf
mov
and
lcall
or
cmp
shrb
stos
addb
cmp
pop
cmc
jg
pop
mov
lahf
daa
push
out
or
icebp
cmp
leave
rorl
imul
dec
add
inc
jl
out
aam
jb
or
iret
mov
cltd
add
add
pop
and
lahf
adc
and
inc
lods
fildll
jmp
and
push
clc
fistpl
out
adc
dec
ja
scas
mov
sbb
ret
sbb
push
xor
imul
or
mov
aas
mov
lods
shll
not
aas
sti
js
adc
mov
stos
and
out
mov
jecxz
or
or
and
cmp
and
xlat
or
cmp
add
out
sbb
mov
xor
out
push
sbb
nop
lods
test
mov
mov
xor
cmp
xchg
push
inc
xchg
add
dec
cmp
jecxz
mov
push
cmc
pop
int
std
fsubp
jmp
test
dec
insl
pop
xchg
pop
fcmovb
adc
cmp
std
mov
xchg
pop
mov
lret
jnp
data16
mov
pusha
cmp
outsb
and
orb
pop
cli
push
xor
cmp
xor
fstpl
jle
mov
out
cmc
jle
add
aad
mov
mov
push
mov
pop
je
adc
nop
nop
push
sbb
lock
xchg
pushf
sub
cmpsl
mov
lods
push
js
push
and
in
push
mov
mov
adc
dec
scas
fsubr
hlt
stc
fbstp
and
loope
push
dec
pop
jg
js
mov
cmp
jo
jbe
lcall
cmp
sbb
sbb
popf
xchg
lds
add
or
ljmp
outsl
adcl
arpl
push
jge
pop
xchg
ja
lret
dec
test
push
mov
or
icebp
xor
test
adcl
or
dec
jae
addl
pop
mov
jl
adc
arpl
in
stos
push
out
lret
cmp
cmpsb
lret
test
adc
aaa
jge
movl
mov
jns
imul
xor
fidivrl
cwtl
pop
inc
ss
add
mov
sub
inc
lidtl
sbb
push
scas
pop
inc
jl
subb
lock
lret
jmp
push
push
nop
cmp
add
movsb
fisubrs
cs
test
das
arpl
xchg
loop
fsub
hlt
aas
pop
pusha
cmpsl
out
push
mov
sahf
inc
in
sub
mov
mov
enter
mov
inc
or
pushf
sub
cmp
mov
xor
adc
and
mov
or
xor
mov
lods
repz
xor
dec
orl
sbb
sbb
adc
les
aam
jg
sbb
pop
inc
cs
nop
lods
xchg
out
stos
sub
je
xchg
popa
add
into
push
dec
bound
pop
xchg
popa
imul
pop
mov
aaa
push
add
xchg
jb
mov
cmp
sbb
sub
mov
dec
mov
pop
imul
mov
jo
loop
cli
xor
jg
cltd
jl
lock
mov
jg
xor
stos
pop
jo
rclb
popa
mov
dec
push
out
inc
imul
std
cwtl
sarb
xchg
xor
sarb
xor
adc
inc
ficompl
mov
mov
pushf
push
stc
sub
pop
push
dec
outsb
dec
push
scas
pop
sbb
jne
pop
into
popa
mov
xchg
fidivs
lea
pusha
insb
jle
std
push
jp
or
push
scas
xchg
dec
pop
sbb
push
push
pop
bound
xchg
arpl
movsl
mov
sbb
xchg
fisubrl
jo
xchg
push
int3
mov
out
push
inc
mov
movsb
daa
jne
xor
xor
fsubrp
lock
adc
jns
dec
pop
add
xor
insb
sbb
mov
cs
add
pop
sub
dec
xchg
xor
xorl
mov
hlt
mov
sub
dec
and
les
lods
jecxz
pusha
popf
sub
xchg
and
cmpsb
in
rcrl
je
lods
loopne
mov
push
add
stc
mov
adc
pop
cmp
sub
lods
add
mov
xor
in
inc
jo
pop
aad
mov
push
ret
sbb
mov
outsb
and
lds
nop
mov
stos
idiv
mov
in
bound
pop
dec
or
jne
ds
mov
pop
adc
jl
or
jno
rorl
insb
stos
ss
cwtl
ja
or
fisttpll
test
stc
jg
sub
fstps
imul
ss
insl
je
mov
jo
call
fsincos
adc
into
jp
cltd
test
sahf
outsl
loope
jle
push
lock
out
mov
pop
jle
sub
xchg
jns
sub
leave
cmpsl
adc
movsl
movlps
sbb
in
jns
out
or
dec
mov
mov
pop
pop
imul
mov
pop
xor
scas
das
mov
inc
push
shll
adc
nop
insl
xorb
mov
cmp
cmp
aam
ljmp
inc
test
fbld
rcrl
iret
aas
mov
mov
cwtl
std
mov
sub
sbb
inc
xchg
xchg
leave
sub
fmuls
mov
nop
out
sub
lds
adc
pop
in
test
jmp
and
pop
xchg
pop
aaa
pusha
pop
scas
in
cmp
sub
addr16
inc
jno
push
push
in
push
and
inc
ret
mov
or
xchg
jmp
shl
fimull
lcall
xor
xchg
loop
cmp
sbb
lods
pop
shlb
or
mov
iret
or
sub
jg
sbb
mov
sarl
adc
imul
jecxz
push
fldenv
insb
xchg
int3
jcxz
mov
mov
lret
fisubl
push
pop
inc
or
pushf
mov
sub
mov
insb
jb
lret
jns
adc
sbb
mov
sbb
xchg
xchg
xchg
mov
in
or
pop
lods
mov
inc
push
pop
push
cs
xor
cmp
cmp
das
lods
loopne
add
sahf
imul
sbb
pop
pop
rep
mov
dec
cwtl
mov
cs
sarb
lds
inc
mov
jp
jno
xor
add
add
loop
call
push
jg
xchg
ds
jno
sub
inc
repz
push
sub
les
pop
cli
jno
sbb
jnp
bound
mov
sub
js
push
lahf
cli
test
add
xchg
lcall
lea
nop
sbb
outsb
pushf
mov
out
push
rcll
lahf
lea
pop
repz
xor
ffreep
push
mov
shll
sub
sbb
push
rolb
mov
adc
leave
cli
movntps
pop
cmc
add
inc
movsb
ficompl
pop
decl
fstpt
sti
mov
pop
push
mov
pop
inc
mov
jno
imul
mov
stos
sahf
ja
cmp
pop
add
insl
pop
mull
sbb
jne
nop
das
leave
stc
sub
add
cmp
shrl
jecxz
push
fcom
pop
ret
mov
dec
pop
xor
lods
das
xlat
rolb
jg
adc
jne
sub
xchg
mov
mov
dec
push
xor
iret
stos
pop
ljmp
mov
sbb
mov
imul
test
sbb
lds
mov
std
pop
pop
sub
push
popa
movsl
push
push
pop
and
lock
lret
pop
inc
data16
sub
and
rorb
daa
rcr
inc
popa
inc
adc
inc
xchg
lret
scas
push
or
inc
inc
inc
test
mov
push
mov
xor
cmp
cmp
and
testl
leave
cs
mov
dec
push
mov
sbbl
test
or
shrl
fwait
aam
mov
imul
push
mov
fnsave
stc
lods
mov
adc
sti
cltd
jbe
jp
rclb
sbb
out
sub
mov
repz
lods
mov
dec
cmp
inc
lods
jb
rorb
push
pop
mov
xor
aas
cltd
sbb
arpl
lods
loop
xor
aaa
cmc
lret
aaa
dec
clc
test
sbb
aam
fdivp
call
add
stos
in
fisttps
cmp
jmp
push
sbb
int3
sbb
jbe
push
and
ret
mov
mov
stos
mov
sub
jecxz
mov
clc
cmpsb
cmp
mov
cmpsl
jle
push
mov
ret
lds
in
or
mov
jb
sbb
mov
je
jnp
push
cld
sub
mov
cmp
jnp
cltd
lahf
sub
es
jle
cmp
loop
mov
adc
xor
cltd
mov
jl
push
inc
out
inc
mov
pop
lahf
pusha
jl
inc
loop
fidivrs
dec
stc
ret
mov
sub
stos
xchg
movsl
adc
sahf
stc
xor
sub
hlt
call
arpl
mov
add
jmp
cmp
sbbb
addr16
jle
push
push
aas
push
xor
jmp
add
stc
out
unpcklps
ret
mov
add
or
cld
das
int
cmpsl
push
and
out
mov
lea
push
mov
mov
lock
leave
jmp
push
or
std
jle
add
xor
inc
jne
xchg
aas
shll
add
scas
or
hlt
xchg
mov
inc
push
pop
cmpsl
int
test
cmp
add
rol
enter
scas
in
je
cmpsb
jl
testl
pop
pushf
push
mov
lret
pop
pop
lds
mov
lret
fnsave
ficoml
repnz
mov
cwtl
sub
pop
jne
aas
add
sub
fs
int
and
push
fnstcw
inc
sbb
push
shrl
mov
lret
daa
iret
test
imul
sub
push
cmp
mov
sahf
jge
out
pushf
and
jns
hlt
add
hlt
jbe
test
cld
push
xchg
adc
dec
cmp
faddl
outsb
dec
iretw
mov
fstpl
jo
daa
lds
push
inc
sub
test
lret
and
popa
mov
push
out
adc
sbb
movsl
ret
cmp
xor
push
in
loope
insl
add
push
jae
jl
cmpb
cmp
insb
call
ffree
sbb
and
adc
inc
add
dec
test
mov
int
jne
fsub
pop
movsb
lahf
loopne
mov
push
or
gs
pusha
loope
aad
lods
push
insl
cmp
fwait
sbb
in
mov
bnd
es
xchg
pop
xlat
out
push
mov
adc
test
add
sub
mov
and
testb
mul
out
pop
add
mov
sti
sub
rorl
lahf
cmp
cmc
adc
mov
xchg
sar
push
addl
cmpsl
mov
repz
jmp
add
iret
lock
fs
movsb
out
xor
adc
rcr
sbb
dec
out
sub
test
inc
cwtl
sbb
lea
inc
das
jns
das
xlat
push
cmp
popf
inc
sbb
cli
xor
lods
ss
int3
ret
sub
aas
fsubrl
out
rcll
lock
mov
sub
scas
rorl
dec
rol
pop
cmp
out
lcall
fwait
nop
imul
fisubrl
dec
call
pop
mov
dec
pop
repz
jno
mov
sbb
jg
mov
loope
stos
aaa
xor
jmp
mov
pop
xchg
dec
out
jecxz
mov
jge
js
fimuls
pop
jmp
inc
gs
mov
mov
cmpsl
dec
outsl
les
mov
dec
mov
enter
leave
in
mov
mov
pop
mov
out
cmp
aam
push
fdivs
lock
fmull
rorl
fmull
jp
xorb
inc
jle
imul
std
pop
or
nop
jle
jae
sub
insl
jne
jne
cltd
sub
or
xlat
fmull
cmp
ret
ficomps
inc
dec
mov
ret
jmp
or
pop
imul
push
cltd
or
mov
stos
insl
shl
frstor
fwait
and
and
out
icebp
or
jp
aas
xchg
fstps
jns
cwtl
rolb
cli
inc
call
scas
out
stos
pop
add
xor
btc
das
jp
std
lret
lcall
das
xchg
out
cmp
out
push
cmc
push
clc
gs
cmp
push
loopne
out
mov
out
out
je
mov
ljmp
add
adc
ds
out
mov
or
leave
jo
test
sub
popa
rcrl
fisubs
int
sub
xchg
mov
dec
xchg
mov
jns
jecxz
aas
les
clc
or
movsb
outsb
or
mov
stos
insl
orl
loope
adc
nop
jg
fwait
jp
pop
inc
push
aad
xor
dec
sub
pop
bound
inc
inc
rcl
nop
out
imul
add
sarb
inc
sub
test
pop
jecxz
cmp
jae
out
and
mov
fdivrl
fldenv
push
scas
push
cmp
ret
sets
adc
mov
in
mov
sub
stos
mov
add
rcrb
jbe
pop
mov
pop
mov
sub
ljmp
sarb
clc
xor
insb
adc
mov
lahf
jne
movsb
cltd
vpaddb
sarl
aam
or
xchg
xor
lea
jae
mov
xchg
xor
es
mov
mov
outsb
cmp
push
in
hlt
loope
stos
fs
clc
cmp
pop
icebp
xchg
test
mov
enter
outsb
or
popa
scas
mov
or
jns
sub
int
ret
stos
es
ss
ljmp
or
mov
push
lods
in
sub
fcomip
iret
cwtl
out
cmp
push
adc
daa
pop
mov
xor
cli
imul
rolb
pop
dec
push
mov
jmpw
out
pop
sub
xchg
push
out
leave
pusha
pop
les
pop
jg
mov
addr16
jecxz
inc
xorb
loop
or
push
push
xor
and
mov
cmp
push
sahf
add
adcb
cmpsb
addr16
sbb
ret
in
or
push
stc
cmp
sub
inc
sbb
xlat
mov
mov
push
lahf
inc
xchg
call
jmp
in
sub
dec
imul
xchg
stos
subl
and
add
dec
push
jno
dec
bound
push
inc
test
inc
aad
cwtl
adc
lret
leave
ret
jecxz
mov
outsl
test
rcrb
adc
or
xor
mov
push
lcall
call
nop
inc
cwtl
pop
sub
xor
xchg
lahf
mov
adcl
loopne
in
dec
mov
and
jg
pop
mov
xchg
outsb
cmp
cmp
mov
in
xor
cmp
push
lods
xchg
mov
ret
out
dec
movsl
fwait
nop
nop
ljmp
add
testb
pop
add
inc
push
hlt
and
cmp
in
ss
mov
cmp
adc
and
adc
stos
dec
dec
pop
test
sbb
xchg
and
fwait
inc
jecxz
or
push
push
pop
fisttpll
xor
stc
stos
jnp
or
jge
and
xchg
jnp
xor
jb
int
inc
out
add
imulb
out
jp
adc
mov
push
and
sub
int
cwtl
sub
lcall
and
cwtl
sub
lcall
and
cwtl
sub
lcall
and
cwtl
sub
lcall
and
cwtl
sub
lcall
cmp
leave
or
add
jg
repz
push
andb
adc
rolb
and
shll
and
cld
pop
int3
add
lcall
mov
add
cmp
xchg
xchg
inc
inc
data16
int3
out
cwtl
cmc
mov
pop
imul
push
pop
mov
stos
or
cmc
enter
ja
js
addr16
dec
inc
add
es
push
mov
cmp
or
mov
sub
mov
jbe
imul
inc
inc
iret
sbb
bnd
stos
int3
adc
xor
movsl
dec
shrb
cli
test
stc
add
cmp
push
jg
jns
jno
cwtl
adc
adc
rcrl
dec
leave
pop
jne
cmpsl
cmpsb
dec
xchg
and
mov
sti
xchg
aad
mov
ss
les
jns
pop
iret
test
gs
pop
push
or
and
inc
into
test
xchg
rcll
add
mov
or
inc
mov
dec
ret
mov
divl
stos
adc
es
xchg
adc
and
fmuls
inc
js,pn
jae
lahf
pop
push
inc
adc
lods
out
add
add
push
aad
push
decb
cmpsl
jp,pn
push
ror
out
ficomps
leave
test
shrb
out
ja
sahf
mov
cmp
loope
ret
jo
es
fdiv
xlat
mov
or
in
cmp
push
add
imul
mov
f2xm1
repz
dec
iret
mov
pop
scas
or
xor
xchg
cld
push
es
jle
popa
push
flds
je
arpl
ljmp
pop
mov
sbb
sub
cld
sarb
add
ja
jb
pop
lods
mov
inc
inc
xor
mov
out
ficoms
cmc
clc
nop
jge
fstl
dec
add
cmp
lret
mov
xchg
xchg
and
push
push
jb
sub
pop
xor
mov
loope
add
sbb
jno
or
push
adc
sbb
addb
shll
push
std
incb
pop
inc
jne
out
sbb
divb
ljmp
inc
in
fwait
cli
adc
pop
adc
cs
test
mov
data16
adc
adc
pop
leave
call
hlt
mov
sub
sub
pop
push
cmp
dec
aas
lret
ds
inc
popf
adc
rorl
lret
bound
pop
cmc
es
ret
js
lret
push
push
lock
iret
add
dec
xchg
sbb
cs
mov
push
pop
stc
lahf
push
cs
mov
jne
fcompl
jmp
inc
in
mov
mov
aas
loope
fiadds
sbb
inc
call
ljmp
dec
nop
idivl
test
inc
jmp
xlat
lret
pusha
movsb
mov
or
ljmp
cmp
push
pop
xor
jb
mov
mov
push
sub
pusha
mov
shlb
movsb
or
in
in
insl
dec
sub
std
and
in
and
jns
xor
pop
mov
pop
sahf
pop
jl
daa
xchg
aas
pop
pop
dec
incl
iret
sub
sbb
pop
arpl
in
mov
pop
xchg
scas
scas
sub
pop
mov
or
pushf
pop
stos
inc
movb
ljmp
xchg
jbe
add
gs
call
cmp
xor
cmp
adcl
test
cmpsb
mov
fs
or
xchg
mov
and
cmp
je
shl
jno
loope
subl
aaa
sbb
xchg
scas
insl
shll
repnz
lods
dec
repnz
or
ret
add
jge
sbb
jno
cld
loope
dec
sbb
movsb
pop
inc
scas
jo
dec
sub
dec
ljmp
dec
lods
movsl
clc
bswap
mov
jp
xlat
cmp
rol
pop
cld
mov
movsb
pop
pop
hlt
imul
movsl
push
adc
jg
push
leave
pop
dec
mov
hlt
xor
push
mov
je
insb
insb
mov
mov
lods
sbb
test
loopne
xchg
jecxz
ror
call
std
fs
xor
testl
adc
mov
and
inc
xchg
mov
sbb
xor
pushf
xchg
fxtract
out
jge
pop
leave
arpl
ljmp
sub
mov
sbb
push
or
testl
xorb
mov
push
cmp
or
and
mov
push
jb
cld
sbb
add
push
aas
mov
add
inc
in
in
xor
dec
xchg
lock
fwait
call
or
das
jbe
lret
nop
sub
test
je
addl
imul
mov
enter
outsb
and
aaa
add
pop
sub
repnz
add
xchg
scas
dec
arpl
call
psrlq
stos
cltd
lcall
cs
jmp
je
test
adc
ds
jns
movsl
add
mov
mov
adc
out
mov
mov
fmull
xor
cmc
jne
push
mov
nop
xchg
lock
lods
mov
mov
xlat
int3
das
push
add
bound
scas
frndint
push
xlat
movsl
test
out
ret
mov
mov
fwait
leave
inc
lret
mov
jecxz
in
push
std
jle
push
inc
adc
lods
rcl
les
cmp
in
inc
shlb
cli
leave
fmul
decb
lret
icebp
scas
in
adc
cmpsb
mov
pop
ja
xchg
pop
push
dec
mov
push
pop
mov
push
sub
dec
adc
lods
stc
outsl
inc
pusha
mov
bnd
inc
es
ficompl
xor
out
jecxz
push
out
cmp
jne
add
mov
insb
lock
test
dec
daa
jb
mov
es
fneni(8087
or
imul
jl
cmp
sub
sti
add
fildl
jae
repnz
arpl
sbb
in
cmp
mov
fildll
lcall
jne
mov
insl
popf
add
inc
push
mov
outsb
mov
cmc
jo
dec
xchg
fdivr
mov
hlt
bound
stc
inc
jp
bound
dec
xchg
aaa
int
test
xlat
add
int3
pop
mov
xchg
jp
movsb
in
pop
or
js
dec
out
mov
dec
sti
xchg
daa
xchg
pop
cmp
cmp
pop
dec
pop
jge
jmp
pop
dec
and
dec
add
in
es
fwait
and
pusha
mov
adc
fbld
mov
es
mov
filds
push
cmp
push
jns
cmpsb
je
outsl
xchg
pop
je
fwait
orb
iret
arpl
movsl
push
repz
imul
call
xchg
ret
or
or
sbb
fsubl
push
xchg
adc
mov
andb
loope
mov
iret
or
inc
pop
jb
sti
rolb
jns
popf
xchg
test
xchg
inc
popl
jb
mov
ret
mov
add
ss
adc
lods
lret
mov
add
scas
mov
adc
sbb
sbb
icebp
pop
jno
loop
and
adc
sbb
iret
lret
sbb
test
jg
adc
cmpsl
idivb
mov
push
mul
mov
or
movsl
stos
lds
popf
enter
push
xor
sbb
or
sbb
xor
leave
mov
into
mov
sub
push
mov
cmpsl
mov
in
bound
dec
cwtl
jno
mov
push
imul
popf
dec
shrl
dec
dec
fidivrs
xor
or
mov
or
popa
hlt
pop
cli
xor
pop
add
cmp
or
jne
ja
movsl
jne
adc
movsb
push
in
shlb
shlb
data16
daa
loopne
fwait
adc
jg
adc
ljmp
jns
cli
mov
test
mov
and
sub
arpl
xor
pop
push
sbb
pop
xchg
pop
leave
out
cltd
xchg
enter
scas
int
lcall
push
push
in
xlat
inc
mov
pusha
out
movsb
lea
xorb
fs
push
imul
ds
cmp
pop
xor
xor
int3
jecxz
and
les
and
sbb
push
sub
out
sbb
add
rolb
jno
data16
js
enter
cmpsb
pop
cmp
jl
jp
das
pop
or
hlt
jo
mov
push
mov
ficoml
and
adc
cmp
test
xchg
jb
mov
pop
push
scas
jmp
scas
test
jns
loopne
lods
addr16
stos
mov
dec
dec
lcall
mov
fidivrl
fisttpll
add
outsb
cmp
orb
lcall
lods
lods
imul
dec
cmpsb
and
lds
out
fstpl
repnz
repz
xor
aam
ficoms
cltd
cld
jns
mov
mov
lahf
push
jecxz
sbb
je
add
push
cmp
test
mov
jg
bswap
shrb
fbld
mov
pop
sbb
mov
add
jp
push
xchg
es
lcall
cmp
aad
stc
inc
js
lahf
leave
arpl
add
jno
sub
adc
sub
bound
pushf
mov
cmp
negl
rorb
rorl
out
popa
cmc
mov
data16
mov
lret
inc
adc
outsb
mov
xor
sbb
add
fldl
sub
mov
sbb
dec
mov
rcll
push
sahf
pop
sbb
or
jns
ret
add
mov
xchg
fwait
pop
aam
push
ds
popa
adc
dec
inc
out
aas
push
cmc
sub
negl
fstpl
cmp
sbb
sbb
mov
sbb
inc
shl
popa
cmp
mov
lods
pop
hlt
rclb
scas
pop
jno
std
in
sbb
and
fsubl
or
sbb
outsl
mov
xor
ret
in
stos
or
into
scas
sahf
mov
xchg
xchg
ror
mov
test
or
sahf
mov
les
mov
int
xchg
or
out
xchg
js
and
idiv
enter
xor
lahf
and
pop
dec
stc
adc
flds
cmp
std
test
ss
dec
mov
inc
cwtl
and
mov
xor
inc
cmp
cvtps2pi
sub
movsb
cmp
sub
cmp
aaa
lea
xor
insb
pop
pushf
push
dec
hlt
mov
mov
xor
jmp
mov
lods
inc
ret
and
out
sbb
leave
out
and
cs
push
add
and
fsubrl
jae
xchg
int3
jno
shrl
dec
mov
jne
sti
mov
enter
es
arpl
fldl
stc
xchg
in
jge
psubb
push
xchg
jno
jecxz
lds
lods
mov
sub
mov
fidivs
dec
xchg
push
adc
and
lea
seto
adc
int
mov
jp
int
in
cmc
inc
dec
sti
clc
jne
mov
outsb
cmpsb
mov
adc
mov
jnp
xor
addr16
mov
movsb
dec
cmp
ljmp
pop
xor
in
test
and
jae
push
out
jge
pop
mov
xchg
rol
adc
gs
div
inc
movsb
xchg
mov
out
jp
push
mov
and
cmp
jae
push
jns
lods
and
xchg
xchg
dec
leave
add
xor
dec
lret
mov
mov
dec
sbb
into
ret
cmpb
leave
out
es
sbb
inc
repz
loope
inc
or
cld
fdivs
repz
pusha
rcrb
xchg
lods
xchg
js
inc
jecxz
popa
xchg
adc
inc
test
push
fidivrs
mov
pop
roll
xchg
rcrl
push
push
xor
mov
pop
jmp
dec
pop
rolb
sub
pop
mov
leave
rclb
insl
pushw
insb
cli
xlat
jle
jmp
insl
scas
rorb
push
jl
xchg
jg
push
sbb
xor
sub
add
add
push
fstpl
push
cwtl
push
std
pop
or
jno
ret
lock
out
mov
es
xor
cs
pushf
pop
bound
cmp
and
sbb
leave
pop
fidivrl
xchg
sti
and
imul
pop
fcomps
xor
push
pop
push
sarb
scas
fldcw
ja
je
pop
xchg
out
push
mov
ror
movsl
pusha
daa
adc
mov
dec
adc
daa
fiadds
data16
xor
test
in
mov
mov
adc
cld
mov
stos
push
addr16
xor
out
lea
pusha
fwait
jecxz
cmpsl
addl
push
mov
jp
adc
popf
add
inc
sub
imul
xorl
jbe
sbb
je
stc
imul
adc
xor
jnp
mov
int
pop
jb
mov
xor
arpl
movsb
or
or
adc
dec
push
pop
es
cmp
dec
je
fnstenv
push
push
frstor
ds
cmp
cmp
dec
xchg
cmc
stos
stos
adc
bound
lds
jge
or
scas
sahf
jbe
push
inc
sbb
dec
mov
rolb
test
xchg
rolb
pop
mov
and
xor
gs
enter
into
test
push
pop
mov
xor
cmp
andl
stos
lods
fs
mov
sbb
test
inc
xor
jne
movsb
sbb
xlat
stos
sub
ret
dec
dec
loop
fnsave
and
div
mov
aas
mov
cmp
ror
xchg
jp
sarb
stos
jo
aad
jl
or
inc
cmpb
inc
jnp
jb
lret
fmull
mov
mov
pop
imul
cmp
sbb
xchg
fsubp
xor
pop
xchg
jp
repnz
xor
mov
movsb
sub
pop
pop
in
jg
sahf
mov
mov
test
mov
dec
xor
and
notb
mov
stc
mov
pop
icebp
movsb
and
inc
push
cmp
jnp
dec
jns
dec
push
fidivrl
rorb
das
ror
insb
push
sti
mov
adc
adc
cmp
rorb
pop
inc
pusha
add
fmuls
stos
jnp
jbe
add
ljmp
mov
inc
add
push
fsubl
xor
jmp
pop
sbb
adc
loope
inc
push
enter
and
push
add
shll
mov
mov
ds
outsb
jg
sub
loopne
jecxz
scas
jno
cmova
jg
in
mov
shl
mov
rcrb
popa
leave
xchg
adc
inc
loop
inc
push
adc
enter
daa
mov
repz
add
pop
iret
xor
sbb
and
dec
push
fs
mov
dec
dec
stos
icebp
out
dec
push
mov
mov
xor
lea
push
stos
je
ret
dec
mov
fisttpll
imul
mov
aam
ljmp
scas
jno
xchg
dec
mov
cld
pop
or
mov
mov
xlat
fcmovnu
jno
in
repnz
mov
or
out
das
pop
cli
bound
sbb
in
ret
imul
adc
ljmp
inc
jmp
mov
mov
xor
xchg
sbb
inc
add
shlb
aad
std
popa
loope
fldenv
sub
movsb
dec
inc
push
movsb
insb
lods
adc
push
lret
fstps
lds
mov
jns
pop
sahf
lods
lcall
jmp
or
sbb
stos
push
mov
jb
popa
xor
xor
mov
popa
inc
inc
and
adc
adc
jne
test
adc
push
int
popa
mov
ficomps
adc
pop
adc
scas
orl
mov
jl
jl
out
shrl
push
sti
shrl
jno
inc
add
stos
fdivrl
push
sub
loop
push
and
out
sub
loopne
mov
or
stc
ljmp
pop
or
fiaddl
insl
mov
mov
push
ss
nop
insl
out
mov
je
rorl
lods
or
dec
popf
jp
test
rorl
jmp
out
sti
cmp
test
xlat
cmp
ret
mov
ljmp
ror
xchg
jle
stc
adc
mov
pop
in
imul
aas
xchg
jbe
rol
inc
icebp
xchg
subl
jge
loop
xor
repz
enter
adc
pushl
lods
inc
xchg
mov
sbb
lds
cmp
pusha
jl
fwait
cld
mov
shrb
lret
mov
addb
aad
sub
mov
call
add
push
mov
jns
cmp
popf
cmp
adc
sub
and
movsb
cltd
subl
inc
cmp
fadds
cmp
pop
cld
call
jle
divb
shrb
dec
push
dec
iret
js
inc
ja
out
iret
ds
cli
push
mov
add
mov
xchg
std
add
fwait
push
sahf
xchg
stos
adc
imul
test
jecxz
xorb
push
adc
ljmp
mov
jno
je
nop
adc
mov
sbb
call
dec
or
cmp
bnd
or
sub
jo
les
into
cmpb
inc
dec
dec
jnp
daa
fwait
jecxz
test
int
insl
cmp
std
in
sub
into
adc
push
test
cmp
jne
add
dec
mov
inc
and
mov
push
jnp
mov
pop
jns
push
xchg
or
xchg
icebp
filds
pop
jno
and
sub
mov
cmpsw
xchg
and
popa
adc
pop
push
sub
xchg
cmp
pushl
mov
cmpsb
test
mov
pop
push
mov
sahf
lods
xchg
mov
gs
mov
loopne
mov
nop
and
daa
and
cmc
jg
lret
fdivrl
lret
fisttpl
push
scas
cmp
and
mov
jmp
cmp
aam
push
cmp
int3
jbe
stos
andl
decl
and
repnz
add
adc
push
cs
roll
into
js
cmc
dec
and
or
sbb
mov
mov
dec
bound
shll
jns
roll
or
je
les
ja
cli
pop
xchg
jl
std
inc
das
inc
bound
xor
sahf
in
outsb
jmp
lcall
push
cld
jmp
fs
clc
loope
push
cmpsl
js
mov
rclb
mov
jne
mov
out
cmc
das
sub
sub
sti
dec
mov
arpl
popf
pop
loope
movsl
mov
push
xchg
outsb
test
push
or
and
js
shr
push
jnp
jno
mov
jge
outsl
stos
cmpsl
and
mov
shlb
addr16
test
aaa
aaa
mov
sbb
pop
mov
mov
orl
adc
mov
adc
push
cmpsb
mov
and
insb
and
mov
jno
xor
mov
ja
fiaddl
add
inc
cmpsb
push
sbb
icebp
mov
imul
sbb
ret
testl
sbb
leave
sub
jbe
loope
adc
fimull
repz
push
pop
gs
out
repz
push
jmp
int
shrb
into
sahf
lds
xor
aas
or
mov
popl
outsl
pop
mov
aaa
sub
add
lock
in
sbb
or
or
shrb
out
out
testl
cltd
rcll
mulps
sti
push
adc
gs
sub
cld
in
inc
jecxz
add
outsl
scas
pop
les
cli
inc
bnd
fimull
mov
repz
flds
test
sub
pop
xchg
push
jne
mov
popa
pop
inc
and
out
orl
push
fs
cmp
lret
cli
pop
in
in
mov
jle
cmp
push
sub
mov
out
lahf
push
mov
sbb
sahf
pusha
mov
pushf
orl
js
xchg
xor
mov
popa
mov
push
add
jb
fcoml
jnp
adc
and
sbb
dec
aas
aam
xchg
or
call
sub
mov
cmp
sbb
xchg
loopne
jnp
push
sub
fnstenv
inc
mov
inc
cmp
fmuls
xchg
movsb
mov
cltd
jmp
and
movsl
jmp
testb
mov
imul
or
push
xor
repz
movsb
mov
fbstp
fisubrl
inc
movsb
mov
pop
pop
loopne
nop
das
std
movsl
pop
inc
pop
and
mov
icebp
mov
movsl
adc
lods
in
xor
subb
std
std
in
pop
out
dec
xchg
xchg
shl
daa
fwait
pop
out
aad
aad
mov
clc
aaa
out
fidivrl
push
test
add
add
pop
xor
imul
icebp
pop
sub
jns
and
adc
dec
mov
adc
push
leave
xor
out
mov
pushf
mov
sub
mov
jb
xchg
shrl
jle
out
test
mov
cltd
bound
lea
out
sahf
sbb
cmp
pop
dec
push
cli
sub
fldl
das
inc
push
xchg
cmpsl
stos
mov
in
aaa
fisttps
cmp
mov
xor
dec
mov
aad
dec
int3
and
add
mov
jecxz
lahf
data16
lock
popa
jmp
stos
mov
cmp
push
push
out
test
sahf
sti
push
out
dec
les
pusha
mov
inc
sbb
pusha
jp
xchg
pop
test
xor
sti
mov
sarb
inc
decb
xchg
std
sub
push
dec
xor
push
mov
xor
clc
fs
loop
and
incb
pop
xchg
or
adc
dec
and
jmp
jbe
insl
push
sub
mov
inc
outsl
sbb
sbb
divl
aam
test
negb
push
mov
dec
jno
lds
pop
pop
inc
cmc
stos
add
mov
fisubrs
fnstcw
mov
lcall
mov
jle
test
scas
xor
mov
add
push
and
pop
add
and
jnp
xchg
fisubrs
les
mov
cmp
imul
nop
dec
ja
and
pop
fidivl
add
cmp
xchg
xchg
xor
add
pop
inc
cmp
cmp
out
jae
jmp
fdivs
sbb
xchg
enter
and
aam
pop
out
pop
add
cmpsb
bound
in
or
enter
movsl
dec
or
sti
sbb
and
mov
push
xor
jae
mov
xor
jno
xchg
js
and
les
mov
ds
xor
stos
mov
dec
sub
dec
and
fs
in
mov
es
mov
and
inc
xor
add
dec
outsb
mov
sub
adc
sbb
rcll
add
push
mov
movsl
push
mov
mov
roll
stos
std
daa
inc
xorb
mov
pop
test
pop
xchg
mov
dec
pop
mov
fisttpll
mov
mov
push
popf
inc
mov
adc
out
xchg
and
popa
pop
adcb
dec
mov
cmpsb
inc
sub
jae
repz
shrb
das
testl
cmp
inc
mov
lods
mov
mov
test
loope
dec
jb
mov
jl
and
ret
cmp
xchg
jb
orb
cwtl
ret
inc
dec
je
mov
imul
jnp
mov
mov
xor
cltd
sbb
xchg
xor
push
xorps
jnp
fdivrl
dec
and
shrl
cmp
xchg
stos
sbb
mov
scas
adcb
hlt
and
jne
and
push
and
fidivrs
rorl
call
cmp
sahf
outsl
sbb
incl
fdivrl
imul
push
daa
sbb
popf
push
adc
or
mov
imul
push
add
xchg
iret
pushf
sub
fnsave
xchg
jp
js
mov
cli
mov
and
dec
stos
jnp
xchg
sbb
cli
into
rclb
mov
jo
jg
je
stos
lcall
std
xchg
push
aad
mov
shrb
out
outsl
sub
push
or
sbb
pop
shr
loopne
stc
add
test
sbb
cmp
sbb
push
fsubrp
sti
sub
std
adc
xor
rol
pop
pop
lods
into
in
jg
fucomi
mov
mov
bound
cmpsl
aaa
jnp
sub
push
jge
mov
test
cs
in
cmpsl
mov
cmc
push
sbb
rcll
mov
cmc
subb
inc
jl
lea
adc
sbb
xchg
les
cmpsb
dec
cmp
xchg
fildl
mov
jns
sbb
adc
pop
jle
or
shrl
adc
out
ljmp
cmp
int
or
cli
and
inc
mov
cmp
sub
dec
stc
dec
aad
cwtl
icebp
jnp
jo
dec
or
push
aam
sti
jb
and
jo
iret
ja
push
jg
or
add
and
dec
adc
dec
movsl
push
ret
lea
jnp
sub
xchg
ret
mov
and
add
call
dec
ja
ret
mov
mov
jnp
pop
arpl
shrb
dec
lds
test
daa
mov
pop
xchg
add
cmp
sub
in
aas
clc
fs
aad
ret
mov
fwait
push
jo
int
cmpb
and
repz
mov
mov
inc
test
rcrl
je
je
cmp
inc
pop
inc
jl
addr16
movntps
jl
lea
jo
pop
pop
jle
inc
inc
test
mov
xor
fs
js
xchg
cli
iret
cli
mov
lcall
hlt
popf
loope
int3
and
and
lret
push
cmpsl
dec
and
adc
adc
cmp
cmp
pop
add
adc
pop
cltd
pop
sbb
pop
testb
cltd
or
ltr
pop
dec
xchg
pop
sbb
xchg
inc
movsb
xchg
je
mov
jp
and
loop
dec
jno
jg
pushf
sbb
cmpb
and
and
lea
aas
mov
lea
pop
or
mov
push
fcompl
jns
out
test
add
mov
dec
xor
scas
and
jo
icebp
inc
js
outsb
scas
pop
lahf
stc
jae
int3
cmpsl
sbb
sarb
ljmp
lret
sbb
mov
add
mov
pop
stc
fscale
jl
in
sbbl
xchg
mov
cwtl
inc
push
daa
jp
pop
xor
inc
mov
scas
mov
xchg
add
fwait
and
test
xor
push
jno
pop
cmp
stc
jns
jnp
test
xchg
xor
sub
and
stc
bound
xchg
cmp
in
dec
test
dec
and
mov
mov
and
dec
popf
mov
inc
mov
cmpsl
pop
orb
jmp
jns
inc
xorl
lahf
hlt
aaa
mov
adc
jg
sbb
cli
xchg
mov
aas
repnz
adc
and
inc
or
push
cmc
jle
sbb
frstor
movsl
mov
sub
dec
inc
dec
int3
test
sub
lret
push
insb
ud0
cmpl
adc
xor
sarl
sarb
into
xchg
and
lock
sbb
lods
and
cmpsl
pop
jl
xor
add
gs
sub
and
lret
lahf
pop
push
adc
neg
cli
dec
std
addr16
stc
inc
pop
add
xchg
and
add
inc
fisttps
adc
and
scas
or
in
push
scas
inc
add
test
push
pop
jae
fwait
cmc
lods
jo,pt
mov
pop
pop
std
pop
jle
movsb
addl
ret
jb
es
push
mov
cmp
xchg
push
aam
jmp
add
arpl
push
and
popa
xchg
xor
popa
cwtl
popf
aaa
shl
loop
addl
bound
bound
pushf
push
add
je
jae
sbb
lods
inc
ficoml
dec
pop
xchg
fucomi
pop
fmul
pop
mov
pop
jle
lods
mov
and
inc
dec
add
xor
sbb
mov
xchg
bound
aam
mov
add
jge
xchg
ja
popa
push
and
ljmp
add
ljmp
xchg
fimull
ret
daa
pop
call
rolb
stos
sbb
cwtl
sbb
push
push
insb
lcall
mov
fwait
add
cli
xor
outsl
dec
jnp
cltd
fs
xlat
or
jb
add
stos
ds
dec
orl
shl
push
cmc
inc
mov
adc
mov
xor
add
or
out
popf
scas
pop
mov
inc
and
dec
js
stos
in
cmp
pop
sti
xchg
pop
xor
shrb
or
sbb
out
sbb
inc
and
nop
add
idivb
and
mov
pavgw
enter
lret
mov
les
push
add
stc
adc
mov
out
icebp
sub
fimull
les
add
xchg
lahf
inc
imul
test
jne
fsubp
fwait
repz
sub
push
cmp
jmp
cmp
fldl
jp
pop
pop
lock
add
mov
sub
jmp
push
outsl
imul
lret
mov
lahf
push
pop
dec
push
mov
jmp
sbb
sub
loope
inc
shll
push
mov
sbb
jo
and
and
push
mov
xchg
push
imul
push
mov
mov
sub
xchg
push
xchg
cmp
inc
xchg
push
push
mov
sahf
dec
mov
add
jns
or
sub
xchg
mov
pop
cmp
lahf
and
or
addr16
mov
lcall
jecxz
pop
adc
xchg
ret
and
js
hlt
jecxz
xor
mov
cltd
int
iret
scas
hlt
xchg
aad
call
in
cmp
xchg
dec
jp
jne
pop
lahf
jne
cmpsb
aad
js
xor
mov
in
mov
push
cmp
sbb
movsl
xchg
testl
clc
inc
pop
push
shll
movsl
into
sbbb
in
notl
pop
cmp
xor
add
in
push
mov
lret
gs
out
cmp
imull
push
fsubrl
xchg
inc
xor
scas
enter
lret
xchg
scas
pop
cmp
dec
mov
movsl
pop
movsb
pushf
adc
pop
in
mov
ljmp
cmc
add
xor
js
xor
jne
mov
and
test
or
cltd
sbb
movsl
xchg
arpl
sbb
das
adc
mov
push
cmp
push
ds
cmpsl
jmp
ss
sbb
mov
jecxz
sbb
inc
inc
icebp
cmp
adc
xchg
scas
insl
cmpsl
jmp
sbb
mov
movsb
lds
imul
data16
in
das
sti
fs
and
jno
lds
pusha
insb
int3
popf
adc
repz
mov
sbb
fisttpl
icebp
pop
adc
mov
je
inc
pop
ficoml
ljmp
shr
and
aaa
pop
push
add
push
dec
inc
faddp
out
pminub
iret
rolb
mov
xchg
mov
mov
loope
or
stos
dec
mov
dec
mov
mov
mov
aam
aam
xchg
or
sti
or
aas
mov
out
inc
sub
rclb
mov
or
lcall
xchg
fwait
rol
imul
mov
jmp
sub
sub
in
or
in
data16
repnz
add
in
add
or
sahf
add
mov
mov
orb
popf
fiadds
cli
cmp
iret
xor
mov
xlat
je
xor
cmp
cmpsl
out
and
xchg
out
add
out
hlt
fildl
or
je
mov
ja
outsl
test
mov
pop
pop
popa
wrmsr
out
inc
and
lods
popf
gs
movsl
pop
add
inc
push
push
out
divl
mov
hlt
adc
inc
jmp
inc
mov
inc
inc
movsl
cmp
std
out
out
sub
pop
rcr
xchg
jnp
push
jno
je
mov
mov
mov
inc
enter
pop
push
shrb
cmp
xchg
xor
sbb
aas
cmp
dec
adc
add
out
stos
mov
addb
leave
or
js
xchg
daa
and
pop
mov
mov
stos
add
out
push
mov
mov
jge
cmpsb
dec
cltd
aas
mov
cmp
insl
dec
mov
jmp
loop
pop
cmp
shrb
pop
icebp
test
push
mov
popa
loopne
lcallw
dec
out
out
es
aaa
push
movsb
loope
or
sbb
pop
es
xchg
testl
add
lea
mov
lahf
mov
cltd
stc
xlat
stos
or
adc
push
and
cs
int3
and
push
imul
mov
mov
mov
adc
mov
mov
xor
iret
dec
imul
adc
ss
test
fists
sbb
shr
push
add
lods
test
mov
push
fsubrs
xlat
sbb
int
jno
leave
inc
jae
inc
sti
add
jl
int3
fsubl
push
outsb
cmp
lods
aam
push
sbb
sub
jns
jae
pushf
lahf
pop
xchg
icebp
pop
inc
cmc
xchg
loopne
dec
or
fidivrl
popa
jle
dec
mov
sub
inc
jne
xlat
in
arpl
sub
push
mov
xchg
adc
fldl2e
jl
jl
scas
dec
jl
jmp
sub
jne
add
push
in
call
inc
js
pop
bound
inc
leave
push
dec
xor
je
js
adc
xchg
cmp
test
or
in
dec
inc
lods
dec
fnsave
scas
pop
xor
adc
push
mov
scas
mov
addr16
jnp
mov
xchg
imulb
and
aad
jl
sbb
or
xchg
pop
roll
cmp
pop
int3
mov
test
loope
adc
push
add
push
sbb
imul
ret
ret
xlat
out
mov
orl
jae
add
adc
inc
int
shll
dec
adc
push
rcr
xlat
pushf
aaa
cmpsl
fsts
pop
repnz
lcall
imul
es
fcmovu
roll
loopne
inc
xor
push
add
adc
push
push
lea
fisttpll
add
inc
cmpsl
bound
cltd
aam
std
fs
mov
push
add
xchg
outsb
in
ficompl
add
mov
imul
ljmp
adc
fcom
sub
push
rorb
mov
icebp
and
mov
inc
or
sahf
fstps
add
sbb
loope
out
pop
leave
fnsave
mov
sub
pusha
pop
clc
pop
js
mov
fcmovu
fnstcw
sub
xchg
jnp
nop
xchg
scas
push
jo
sbb
jae
aam
out
mov
xchg
ret
repnz
repz
outsl
rorl
pop
mov
mov
cld
sbb
ljmp
or
or
push
or
inc
in
xchg
cmpl
mov
xchg
or
mov
adc
lea
out
vpcmpeqb
mov
and
ficoml
movl
mov
jno
jg
sbb
xlat
lret
scas
xor
mov
mov
in
push
movsl
sbb
push
dec
jmp
add
sub
sbb
loop
push
fimull
xchg
mov
xor
xor
mov
xor
mov
loopne
pop
imul
loop
sub
outsl
insb
jmp
lea
add
mov
push
jae
inc
aam
sub
sbb
cmpb
add
shll
shrl
sub
int
inc
aas
lods
mov
lret
xor
lods
xor
lock
push
inc
into
loop
or
and
iret
movsb
mov
or
addb
xor
cmp
pop
imul
sbb
xchg
les
mov
mov
jne
push
add
and
cmp
fbld
sub
aad
inc
sub
sub
repz
xchg
mov
lcall
jle
push
insl
dec
shll
pop
add
inc
in
mov
adc
imul
mov
cmp
inc
adc
push
adc
dec
pop
and
jmp
xchg
xchg
mov
adc
or
dec
xchg
ja
cs
iret
jne
cmp
mov
dec
bound
mov
scas
hlt
or
lods
mov
xchg
mov
and
push
mov
inc
jle
cltd
addr16
rcll
push
push
jne
sub
mov
mov
or
mov
push
and
shr
xchg
mov
mov
jns
ds
jo
jle
mov
mov
or
insl
lret
xchg
pop
add
adc
or
add
nop
in
mov
mov
jmp
jp
adc
adc
shlb
cmp
pop
ja
aaa
and
movsb
xor
or
cmp
adc
cmp
outsl
xchg
xor
xchg
cmp
push
ds
loopne
sbb
rolb
mov
std
aas
mov
add
cmc
aaa
js
testb
mov
fdivs
fsubl
loop
xchg
mov
or
loopne
pop
ss
sbb
push
call
rorb
sub
inc
popa
loop
push
fcoml
shll
bound
add
cmc
jecxz
scas
outsb
ljmp
push
add
ljmp
int
cltd
sbbl
insl
add
pop
jo
mov
and
xchg
add
xor
cmp
outsl
out
flds
adc
or
add
inc
out
arpl
cmp
iret
call
inc
jge
pop
inc
fisubrl
and
mov
ret
inc
iret
inc
adc
push
popf
jp
repz
sub
int3
adc
clc
ret
insl
adc
dec
out
cmp
outsl
rcrl
xor
lret
xor
lock
xor
mov
out
sarb
popa
push
inc
test
or
in
jae
lds
bound
or
pushl
push
pop
mov
ret
pop
fucomi
pop
lock
pop
in
mov
xor
cmp
jecxz
inc
stc
jp
or
xor
test
flds
gs
jl
cmp
adc
imul
stos
mov
aaa
dec
fs
jne
dec
pop
dec
cmp
xor
cwtl
inc
adc
push
aas
test
testl
loop
enter
sbb
push
inc
in
cmp
ret
add
fcomi
xor
inc
add
rcr
rcrl
inc
iret
stos
lods
xchg
fcoml
xlat
jmp
stos
hlt
xor
stos
sub
xchg
lods
xchg
inc
pusha
jmp
mov
leave
sbb
mov
pop
popf
ljmp
inc
iret
out
push
xor
dec
pop
adc
push
or
jns
or
insl
and
dec
orl
add
mov
mov
xor
adc
mov
negb
insb
mov
cwtl
repnz
and
mov
push
push
push
stos
xchg
mov
and
mov
test
adc
jge
data16
sub
jge
adc
mov
in
iret
pop
pop
xlat
popa
repz
push
mov
mov
lret
sbb
lret
dec
jns
mov
dec
pop
sub
aaa
lret
lret
jp
ss
push
hlt
aam
xor
lahf
pop
sbb
push
jmp
xor
mov
insb
loopne
test
xor
mov
push
fstl
inc
fisubrl
and
xchg
stos
and
cli
in
jns
sub
cmc
das
xlat
inc
mov
loopne
je
xchg
popa
pop
cmp
jae
icebp
out
adc
cmp
push
out
push
xchg
xchg
lea
push
lret
test
iret
adc
add
xlat
jnp
aam
sub
rorl
bound
icebp
push
jp
fidivs
iret
mov
cmc
push
xor
or
jns
ljmp
es
sub
sbb
sbb
lock
dec
aaa
jg
fisubrl
push
loop
push
fists
jecxz
cmpsl
cld
sub
and
js
inc
jo
test
mov
dec
mov
push
das
and
or
lcall
lahf
sub
subl
div
pop
bound
pop
test
je
idivl
imul
scas
xchg
pop
mov
or
sub
sbb
fisubl
imul
or
xchg
rcr
lcall
outsl
xchg
dec
les
std
es
adc
mov
or
xor
cltd
push
inc
and
cmp
inc
push
in
mov
int
iret
sub
dec
adc
call
jae
cmp
xchg
jnp
mov
inc
sti
aam
cltd
pop
sbbb
movsl
cmp
jg
push
shlb
adc
add
fwait
and
or
popa
jbe
xchg
add
out
and
push
jns
les
adc
test
hlt
ss
mov
sarl
sbb
sbb
adc
loope
loop
repz
sbb
xor
fisttpl
test
hlt
adc
inc
mov
aas
imul
insb
enter
xchg
scas
test
repnz
scas
fcmove
and
mov
and
adc
add
shufps
imul
aaa
test
pop
adc
xor
nop
jg
cmc
out
or
lret
lods
jmp
jmp
cmp
sub
jmp
sbb
mov
mov
mov
xchg
inc
or
in
andb
faddl
outsl
cmp
push
int3
lcall
mov
lock
repnz
sub
xor
mov
cs
icebp
int
sbb
out
in
lahf
icebp
div
mov
mov
xchg
inc
mov
nop
or
mov
xchg
ficoml
xchg
push
test
cmp
adc
imul
jbe
or
divl
xchg
sbb
inc
repnz
or
std
jle
add
mov
es
gs
mov
or
jb
scas
scas
fidivrs
lahf
and
mov
xor
dec
pop
shll
insb
lcall
in
les
test
cmp
stos
adc
test
and
lahf
dec
fsubrl
mov
sar
lds
into
fdivrl
adc
sbb
or
inc
shlb
ds
loopne
mov
std
and
adc
add
mov
lds
sub
push
test
sub
cmpsb
mov
ljmp
or
push
stos
mov
fdivrs
stc
out
pop
jle
xchg
mov
test
push
cmp
js
mul
lock
sbb
mov
push
shl
inc
insb
cmp
xor
mov
outsl
shll
xchg
fimull
push
cmpsb
lret
pop
pop
lret
es
mov
mul
jecxz
dec
ss
and
adc
sbb
subl
pop
test
adc
lahf
adc
loop
mov
push
lods
add
clc
and
rorb
sbb
lock
push
cmp
lock
pop
popf
pusha
test
mov
loop
fnstenv
cltd
xor
lret
cli
mov
xchg
mov
jb
sub
mov
push
leave
mov
aas
jno
cltd
or
sbb
fstl
imul
pop
popa
jne
jge
xchg
mov
gs
cmp
jae
push
les
dec
or
dec
or
xchg
data16
test
jl
mov
mov
repnz
call
cmp
push
jno
and
movsl
outsl
dec
divl
int
repnz
insl
add
xorb
std
in
sbb
shl
cmpsl
mov
fdivrs
mov
orl
sub
shll
mov
imulb
aam
mov
sub
xor
and
out
stos
gs
sbb
out
in
pop
sbb
xchg
xor
mov
ret
lods
orl
xchg
jp
xchg
imul
dec
out
test
rorl
xor
pop
loop
sub
ja
fsubs
inc
jmp
aaa
push
mov
es
pop
adc
jae
int
push
mov
jbe
das
adc
sbb
pop
adc
push
movsb
loopne
add
pop
ja
adc
push
add
lahf
xlat
lea
in
jp
mov
push
pop
clc
imulb
shlb
stos
add
das
out
iret
push
dec
dec
pop
cmp
popa
fstps
movsb
in
repz
leave
popa
dec
das
cld
pop
inc
add
mov
dec
adc
cmc
jmp
out
into
repnz
aam
div
jnp
push
mov
cmp
movsb
into
loop
push
jl
cwtl
mov
sub
add
dec
inc
sbb
cs
inc
ljmp
adc
jns
mov
sub
xchg
xchg
adc
xor
out
add
pop
mov
adc
mov
lods
push
and
std
repnz
out
ja
movsb
ret
inc
mov
jle
clc
add
sbb
idivl
and
add
dec
lea
sti
fwait
or
push
jne
addr16
xor
and
arpl
jo
adc
mov
lods
sub
sub
ljmp
dec
mov
jnp
sbb
aaa
fidivl
or
dec
jge
lock
filds
pop
dec
push
inc
sbb
out
cmp
or
sti
rclb
imul
aad
xor
mov
lea
data16
push
outsb
mov
push
pop
and
ret
imul
add
mov
sbb
dec
pusha
push
pusha
mov
int3
adc
hlt
sub
call
test
jne
inc
repnz
shr
jg
sbb
arpl
out
xchg
add
cmp
jmp
dec
dec
jnp
js
cmc
and
test
call
jne
stc
xor
addr16
xlat
mov
jmp
les
scas
mov
jns
mov
mov
add
and
lret
cmp
pop
pop
test
inc
scas
mov
dec
test
int
push
dec
fiadds
inc
xchg
push
jp
pop
or
xchg
movsl
ret
in
inc
ljmp
dec
push
iret
xchg
frstor
rcrb
pop
push
mov
aaa
pop
adc
insl
inc
jb
scas
sbb
inc
push
dec
mov
cmc
adc
mov
push
dec
mov
jmp
insl
mov
bound
lock
mov
in
mov
test
movsb
sub
fdivs
and
sbb
pop
mov
fisttps
test
adc
inc
ret
cmpsl
cmc
push
add
mov
orb
ds
aad
int3
popf
ds
mov
sbb
sbb
jecxz
nop
stc
cmc
movb
xchg
dec
sbb
xchg
xchg
neg
popf
jnp
mulb
push
dec
jb
mov
enter
cwtl
pop
cmp
das
push
add
scas
ret
lret
int3
fnstsw
sbb
push
mov
std
sub
xchg
ja
xchg
insl
add
jg
mov
je
sbb
lods
cld
loopne
in
jbe
push
jmp
lods
sub
cmp
aad
mov
into
sbb
loopne
subb
mov
int3
into
sbb
scas
mov
or
jmp
adc
out
leave
andl
lret
rclb
push
lock
sti
fneni(8087
shll
imul
adc
inc
mov
or
lods
jge
es
les
das
rcrl
test
mov
bnd
mov
pop
xchg
mov
sahf
lea
adc
hlt
mov
mov
and
push
shll
push
lcall
and
inc
cld
mov
lods
clc
inc
push
push
mov
lahf
lods
enter
stos
std
fcoml
and
xchg
lcall
flds
add
cmpsl
ja
inc
xchg
sub
xor
popf
and
cmp
ficoms
or
popa
lock
and
repz
mov
cmpsb
repnz
daa
add
inc
pop
cli
test
imul
cwtl
in
inc
cmp
push
imul
pop
sbb
lods
xor
cs
fbld
js
ja
test
out
ss
adc
and
mov
sub
das
add
xor
xor
hlt
cs
xchg
xchg
xchg
cmp
js
lds
xor
and
das
adcl
sub
cwtl
jo
sti
cli
loop
jne
xlat
movb
ljmp
shlb
jae
or
fwait
or
rorl
jl
push
cmc
das
pop
mov
jnp
enter
cltd
mov
jp
in
insb
add
sbb
dec
mov
loop
cmp
fmuls
insb
hlt
xor
subb
gs
adc
out
test
insb
outsl
popf
in
cmp
dec
ss
repz
test
in
cmp
popa
sarl
sbb
jae
shr
adc
adc
inc
adc
fisttpll
jae
ds
das
aad
add
js
lcall
movsl
add
adc
push
inc
movsl
aam
mov
jns
outsl
in
pusha
pmulhuw
repz
mov
aaa
out
fdivrs
adc
nop
aaa
pop
push
jnp
out
jg
leave
xlat
fldt
sub
cmpsb
jnp
jb
outsb
xchg
in
fsubs
add
in
icebp
xchg
cs
test
xor
jns
sub
inc
sub
popa
jmp
cmp
ret
iret
mov
inc
xchg
sbb
add
sarl
push
shll
fnsave
ja
lcall
push
or
addl
fidivrl
xchg
mov
imul
inc
cwtl
pusha
push
lock
or
push
loopne,pn
pop
jbe
lea
mov
dec
out
mov
push
lods
negl
pop
sbb
sub
xchg
stos
daa
mov
lret
shlb
dec
jle
xor
cmp
mov
pusha
fnstsw
loopne
add
add
rolb
lret
xchg
xchg
inc
pop
jns
xor
push
movsl
add
xchg
xor
lcall
sub
aam
fildll
inc
mov
mov
adc
xchg
jnp
subl
dec
mov
push
test
jb
mov
sbb
add
and
and
into
adcl
pop
cmp
shlb
scas
mov
sub
outsb
rolb
mov
fs
call
hlt
pop
and
jns
scas
leave
adc
pop
and
out
cmp
aas
dec
push
or
mov
mov
xor
mov
mov
ja
jge
xchg
or
and
fsub
daa
cmp
sbb
lret
sub
xchg
sub
adc
sbb
mov
push
inc
shrb
xlat
sbb
sahf
mov
mov
mov
leave
adc
jmp
ja
dec
jae
jnp
or
popa
lahf
pop
movb
lea
aaa
pusha
cmp
jmp
xchg
orb
lret
fdivr
rorb
fcomps
inc
sbb
fcompl
lret
cmpsl
scas
pop
adcb
das
test
xchg
mov
scas
sub
fwait
mov
inc
adc
mov
data16
inc
mov
cmp
rclb
insb
cmp
movsl
addr16
andb
lock
adc
and
jp
mov
lret
mov
dec
sub
adc
mov
add
xlat
xor
loop
inc
push
je
pop
cld
cmp
scas
sub
sub
cmp
add
repnz
dec
ja
adc
push
push
popf
xchg
inc
add
sar
stos
adc
push
dec
es
pop
adc
cld
dec
aas
xchg
jbe
mov
addr16
cmp
mov
cmp
js
call
aad
loop
push
push
pusha
mov
loop
jo
mov
nop
mov
and
mov
enter
cmp
imul
and
mov
lods
in
adc
hlt
xchg
test
int
push
enter
fs
outsl
lods
sbb
xor
xlat
push
cmp
mov
and
ret
cmc
and
mov
sbb
loop
mov
ror
lds
test
icebp
push
fdivl
ja
mov
lds
outsb
iret
jo
cmpsb
mov
xstore-rng
cmpsl
add
mov
sub
sti
dec
mov
imul
pop
cmp
xchg
push
add
sub
cmp
mov
cli
inc
movsb
addl
xchg
cwtl
push
xor
outsl
xchg
and
lock
fcmovbe
lods
dec
fwait
dec
cmp
dec
repz
pop
out
daa
icebp
jl
cmp
mov
inc
ret
jns
mov
fnstsw
fidivl
ljmp
push
dec
movsl
sbb
inc
mov
push
dec
int
movsl
mov
les
xchg
andb
sub
or
popf
in
and
lds
pushf
push
fwait
xor
scas
cmpsb
push
mov
sub
mov
mov
scas
lcall
sti
pop
inc
daa
jmp
cld
fistpl
cltd
pushf
lret
add
dec
imul
push
ljmp
mov
pusha
addr16
mov
jp
push
scas
mov
fstpt
sub
dec
push
adc
fidivrl
push
addl
sbb
mov
imull
in
in
mov
mov
lea
movsb
add
ret
inc
mov
xchg
mov
mov
pop
sbbb
adcb
or
xor
fdivrp
cmp
push
jae
jo
mov
stc
add
inc
addr16
pop
aas
mov
lea
mov
int3
adc
dec
push
ss
dec
ja
add
repnz
clc
xchg
mov
dec
aaa
stos
xor
jns
xor
jge
cmp
aas
mov
jb
mov
dec
mov
pop
dec
cltd
and
test
out
jb
pushf
out
mov
aaa
jle
add
pop
mov
sub
in
sti
sub
out
loopne
shrl
push
es
and
dec
adc
jle
jmp
sub
cld
pusha
popf
push
cmpsb
mov
dec
mov
scas
sub
fs
add
stos
xor
lret
fwait
cmc
enter
stos
test
stc
dec
mov
sbb
sub
push
and
mov
fisubs
xchg
stos
es
shlb
jle
add
jmp
cmp
mov
mov
jb
imull
mov
push
dec
ret
and
dec
adcl
pop
lock
dec
lds
cli
cmp
xor
icebp
sbb
imul
sbb
and
lret
sub
xchg
mov
mov
iret
inc
mov
sbb
out
pop
iret
sbbb
cmp
adc
cmpsl
push
cmpsb
data16
jb
repnz
pop
aam
cli
test
inc
cmp
cltd
lods
mov
lcall
xchg
in
mov
lods
scas
cltd
adc
and
arpl
daa
arpl
adc
in
xchg
jmp
sbbb
jp
mov
mov
sub
ss
cld
test
std
movsb
jno
jb
ja
iret
aad
push
ret
rcl
loope
jb
pushf
adc
cmp
imul
inc
pop
in
and
ljmp
les
mov
sbb
fwait
adc
xchg
out
daa
ficompl
add
jo
xchg
fsubl
imul
subb
ret
mov
mov
and
dec
lea
enter
ljmp
xchg
nop
js
jmp
push
sahf
or
test
or
cmp
jnp
popa
pop
loopne
ljmp
insb
psubusb
outsb
stos
push
pop
subb
jo
in
add
xor
ror
pop
es
mov
xor
mov
subl
mov
lret
add
pop
int
pop
or
or
push
inc
fs
int3
ljmp
dec
test
and
jmp
popa
mov
imul
clc
arpl
sbb
addr16
mov
loopne
icebp
orb
cmpsb
adc
adc
scas
ret
outsl
test
cli
inc
mov
in
ficoml
or
aad
cltd
xor
dec
mov
in
out
cmpsl
jbe
push
jg
xor
dec
arpl
mov
xor
fadds
adc
inc
in
aam
cli
aad
mov
dec
cmc
or
imul
dec
jne
lods
insb
jecxz
jo
popa
sbbl
cld
jl
xchg
sub
pop
fcoms
inc
xor
test
xor
and
jl
mov
pop
jne
add
enter
fstl
mov
or
outsb
inc
push
rclb
add
aad
ret
push
insb
cmc
add
mov
lret
cltd
test
lock
and
mov
jne
dec
cwtl
mov
push
push
jo
xor
sub
adc
push
pushf
push
cs
jb
xchg
cli
push
movhps
fnstenv
xor
fcompl
xchg
scas
mov
or
shr
fadds
adc
pop
aas
in
dec
sbb
push
into
push
or
addl
pop
inc
push
addb
cltd
fisubs
fcmovnbe
dec
mov
sbb
dec
out
cmc
ljmp
ret
jmp
out
adc
sub
repz
enter
das
movsl
sbb
stos
ss
shl
js
inc
add
add
into
push
or
xchg
inc
sub
fdivs
fs
mov
cmp
test
sub
cmp
add
out
cmp
or
loopne
mov
adc
inc
popa
scas
out
mov
ljmp
rclb
mov
dec
testb
ret
jns
pop
or
pusha
inc
shlb
sub
loope
push
pop
add
xchg
jp
or
pop
in
dec
dec
adc
inc
test
or
inc
push
inc
sub
or
je
mov
xchg
insb
inc
insb
push
jmp
xor
arpl
pop
push
outsl
push
add
adc
pusha
aad
adc
aas
jb
sub
inc
inc
idivb
jae
and
inc
test
jecxz
push
adc
lds
or
push
outsb
loop
and
movsb
pop
jns
xchg
fwait
pop
jnp
xchg
cmpsl
xor
cmp
insb
add
mov
enter
mov
rorl
add
int
loop
dec
sbb
push
sbbl
xchg
jle
xlat
jmp
iret
mov
or
dec
ss
cmp
mov
pop
pop
shlb
rclb
lret
and
sbb
nop
aaa
dec
ret
js
imulb
and
and
test
pop
cmp
mov
movsb
cmp
pop
loope
sbb
notb
dec
inc
lods
dec
jmp
notl
mov
cli
lds
adc
lds
cmpsb
xor
loopne
int3
insb
push
adc
sbbl
ret
cmp
notl
shlb
lods
xchg
imul
add
int
insl
out
jg
cs
xor
push
sbb
pop
and
cmp
repz
xchg
pushf
or
push
adc
or
outsb
adc
shll
mov
pop
jae
xchg
lds
jmp
mov
popa
lods
sub
cmc
ljmp
xor
int
pop
les
lret
shlb
adc
mov
mov
daa
dec
mov
or
xlat
mov
push
xlat
icebp
lahf
or
int
aaa
arpl
cld
sub
iret
js
dec
cmp
add
dec
sub
mov
test
mov
rorl
push
sbb
ss
sub
or
pusha
mov
and
mov
hlt
add
ret
push
fwait
cmc
notb
sbb
cltd
mov
xchg
xchg
mov
jge
or
jno
pop
sub
xor
cwtl
mov
mov
cmc
sbb
insb
sbb
jnp
cmp
xor
out
or
pop
mov
xchg
xor
fwait
jecxz
adc
cmp
xchg
add
or
in
mov
stos
pop
and
cltd
pop
lock
or
cs
sub
jg
xchg
cmp
pop
mov
mov
fwait
inc
enter
fstps
pop
mov
stos
testb
dec
std
out
lahf
popf
rcll
sub
or
iret
lret
mov
mov
push
xor
push
or
jge
mov
ficomps
or
adc
add
cmp
in
and
and
movsl
jmp
cmp
pop
leave
jb
iret
aaa
cmpsl
sub
or
push
or
in
add
inc
cmpl
mov
mov
out
call
dec
xchg
mov
mov
sub
icebp
fstl
std
or
xor
js
push
jnp
aad
arpl
pusha
das
jmp
mov
pushf
nop
lods
jmp
insl
lcall
mov
and
in
imul
or
xor
jbe
sub
pop
add
lds
pop
adcl
int
cmp
inc
daa
arpl
lock
rcrl
xlat
insb
data16
std
gs
shlb
jmp
jno
stc
push
adc
add
jne
adc
mov
cmp
arpl
stos
mov
daa
cmpsl
daa
pop
or
insb
add
imul
lds
push
or
or
or
inc
inc
sbb
orb
cmp
fdivl
adc
imul
push
xor
xchg
popa
add
lods
into
pop
and
pop
mov
pop
sub
ret
push
sbb
test
clc
icebp
xlat
cmp
loopne
lds
jl
dec
adc
add
cwtl
loop
xor
sub
xor
sub
push
out
fisubl
out
fistl
jp
jne
jl
jo
dec
aas
xorl
xchg
adc
cmp
push
stos
wrmsr
push
pop
outsl
xchg
lahf
cmp
xchg
jo
pusha
sbb
mov
test
movsb
push
sub
cld
sahf
das
mov
and
cltd
pushl
add
inc
cmp
fisubl
dec
outsl
mov
loope
arpl
lods
dec
adc
sub
shll
loop
call
xor
inc
orb
add
lret
nop
xchg
sbb
test
mov
and
cltd
shlb
out
shlb
adcl
push
mov
sbb
mov
insl
mov
and
and
xchg
lods
mov
push
fwait
mov
je
lcall
loope
inc
int
mov
dec
lods
mov
popf
mov
sahf
push
stc
xor
in
pop
aas
movsl
cmp
jb
push
jae
or
pop
outsb
or
rcrb
and
xchg
push
jae
leave
dec
rolb
mov
and
out
jecxz
jmp
ja
jecxz
decb
dec
push
mov
ss
in
and
jo
adc
int
rolb
in
cmp
cmpsb
inc
jbe
lret
jo
dec
cmp
xchg
push
dec
xchg
aam
stos
dec
push
fs
hlt
icebp
lahf
inc
sbb
mov
or
jo
std
inc
and
pop
lds
movsb
xchg
sbb
sahf
pop
mov
mov
stc
nop
xchg
lds
nop
into
jnp
adc
insl
add
aas
idivl
mov
pop
jnp
divb
aas
cmp
push
cltd
xchg
jno
xchg
mov
jnp
mov
and
xchg
and
fimuls
sbb
fisubs
test
andl
push
or
jp
fcoms
clc
jge
mov
mov
xchg
leave
pop
sbb
repz
push
je
mov
inc
xchg
mov
popa
sbb
test
jne
out
fistps
sti
push
call
xchg
pop
inc
fmuls
fildl
jnp
lea
push
mov
movsl
xlat
cmp
adc
repz
push
xor
stos
xor
mov
xchg
inc
inc
add
insl
test
jg
cltd
jle
sbb
mov
andl
xor
pop
mov
popa
sbb
jp
sbbl
or
and
pop
or
les
mov
ja
in
inc
pop
lds
dec
cmpsl
adc
clc
add
cmpb
pop
out
mov
pop
mov
movsl
mov
xchg
mov
xlat
push
ljmp
pop
push
gs
push
in
and
das
pop
mov
imul
inc
jecxz
push
push
inc
hlt
add
aas
hlt
mov
and
testl
ficompl
and
imul
jne
push
cmpxchg
lret
adcl
ja
cltd
lret
sub
mov
out
xchg
add
inc
lods
xchg
mov
negl
jae
inc
mov
adc
cld
rcl
in
and
inc
add
dec
sbb
mov
or
inc
jnp
fst
mov
push
sub
mov
dec
pop
xchg
lods
pop
add
sbb
dec
add
add
sbb
pusha
scas
adc
daa
adcb
cwtl
ss
cmp
out
pop
out
subl
leave
or
xor
xor
cwtl
int
ja
add
dec
lds
leave
js
cmpsl
and
scas
hlt
repz
cmpb
mov
stc
add
jge
sbb
jb
imulb
add
repnz
mov
pop
es
dec
mov
sbb
in
push
fisttpl
gs
fidivrl
cmp
cmp
sbb
dec
mov
add
push
adc
mov
arpl
sub
cmp
or
mov
xor
hlt
shlb
in
scas
xchg
insl
pop
aas
sbb
aad
mov
repnz
sbb
in
mov
lods
js
and
mov
adc
push
rcrl
mov
push
sbb
inc
mov
add
cmp
sbbl
insb
cli
xchg
lods
add
xchg
in
ret
cmp
mov
mov
adc
sbb
mov
addr16
dec
repnz
mov
push
or
pusha
popf
ja
cs
adc
jne
call
nop
jmp
cltd
loope
loopne
repnz
subl
inc
cmp
dec
push
insl
or
or
or
push
sbb
fnsave
cmp
pushf
add
scas
sbb
push
xchg
fmuls
jno
int3
inc
xor
or
imul
sbb
ss
jbe
sbb
sbb
mov
sub
mov
movsl
add
sahf
fisttpl
jle
lea
adc
pop
and
fisttpll
xchg
fwait
adc
jo
out
mov
mov
mov
sbb
mov
cmpsl
add
sahf
pushf
mov
mov
fsubrp
lahf
ss
dec
js
or
lods
test
rolb
fdivs
js
adc
arpl
sbb
clc
enter
or
pop
or
cld
cltd
sbb
xlat
pop
sub
push
pop
lcall
inc
and
add
cmc
sub
xchg
mov
das
int
sahf
shl
mov
sub
inc
pop
imul
adc
int
aas
arpl
pop
mov
test
pusha
int3
stc
ficomps
pop
stc
int3
and
and
mov
bound
jmp
or
inc
pop
sti
subl
and
sbb
pop
jo
fists
adc
leave
sbb
adc
out
pushf
out
mov
notb
mov
fildll
fisttpl
mov
jb
rep
call
xchg
btr
insl
push
aas
gs
inc
mov
jne
ja
mov
sbb
sbb
orl
jp
fdiv
fdivr
test
push
xchg
sar
mov
aaa
inc
iret
not
sbb
in
xchg
fwait
pop
iret
pop
inc
movsl
stos
xor
pop
icebp
pushl
data16
movsl
mov
rcl
leave
ret
mov
or
int
ja
outsl
cmc
pop
or
idivb
in
add
sbb
adc
mov
cli
cmp
sub
sub
testl
pusha
rcrl
aam
or
lea
loop
pusha
xor
jg
notb
inc
das
adc
jns
pop
mov
mov
xchg
data16
pushf
or
xorl
outsl
dec
lods
sbb
xchg
andl
pop
sub
jne
and
imul
outsl
mov
pop
or
mov
mov
loop
insl
sub
add
ror
mov
ret
pop
test
inc
or
adc
push
fdivrl
xor
iret
lcall
dec
in
mov
push
push
dec
pop
fists
pop
ja
nop
sub
or
pop
adc
sbb
lods
rcll
stos
mov
or
mov
jo
mov
test
lock
mov
int3
movsl
pop
jb
inc
jo
sbb
mov
dec
push
mov
push
repnz
imul
ljmp
stos
inc
imul
lods
ficoms
inc
dec
js
fisttps
mov
js
fcoms
shrb
das
dec
int3
fstps
mov
and
mov
jmp
je
jge
or
sub
fld
mov
or
add
add
xor
test
jnp
push
ret
scas
lahf
loop
add
and
jo
mov
lds
inc
pop
in
rorl
cwtl
shlb
mov
mov
in
popf
pop
mov
shll
xchg
mov
push
adc
push
inc
xchg
push
cld
push
stos
mov
push
js
xor
stos
incl
pop
ja
or
ret
mov
pop
sbb
jmp
shrb
lea
cli
cmpsb
fidivrs
shll
mov
pop
pop
or
mov
int
dec
cmpsb
jmp
fs
inc
in
pop
orb
mov
mov
imul
mov
cmp
fwait
bound
popf
mov
xlat
int3
out
lret
or
xchg
shl
mov
in
out
shll
sbb
in
xchg
es
cld
pusha
cmp
jnp
not
sbb
loopne
fwait
jb
cmpb
or
ret
shl
and
nop
dec
inc
xlat
fdivrl
push
inc
popf
in
cs
call
pop
in
push
cmp
adc
dec
imul
ljmp
sbb
mov
mov
daa
push
fidivrs
orl
jmp
f2xm1
or
and
out
mov
cmp
pop
ret
dec
sub
or
fdivrl
jle
xchg
jmp
xchg
xor
std
pop
jmp
inc
aas
xor
repz
push
cmp
inc
out
into
push
out
xor
movsb
lahf
fnstcw
imul
adc
je
push
xor
pop
sbb
mov
iret
loop
sbb
psubsb
mov
mov
xchg
or
fs
fisttpll
orl
rorl
and
mov
lods
inc
jmp
hlt
add
lahf
rcr
adc
sbb
push
cmpsl
pop
into
jno
adc
test
cmpsl
jmp
and
mov
out
add
mov
lret
add
sub
sub
pop
inc
mov
outsb
arpl
jp
xchg
out
cli
cmp
data16
jns
cmpsb
mov
inc
aad
scas
mov
mov
test
aaa
ljmp
xor
sbb
sbb
mov
jge
pop
pop
add
addr16
cmp
mov
loope
lret
mov
das
mov
out
sub
in
mov
into
repnz
mov
and
xchg
icebp
pop
xor
fisttps
jnp
cltd
or
mov
ss
push
dec
and
dec
rolb
or
jae
mov
loop
in
pushf
fsts
stc
xlat
jl
jae
cmc
xor
rorl
xchg
flds
xor
ret
into
xor
mov
lods
les
mov
cld
inc
and
or
int3
push
xchg
sbb
stc
mov
inc
sub
sbb
jbe
leave
or
fildl
dec
xor
fists
in
add
aaa
pop
mov
mov
xor
aam
sti
test
scas
add
jg
fdivr
push
mov
repz
xchg
jae
fmull
cmpl
sub
ja
or
stos
popf
pop
push
inc
shl
push
mov
rcll
adc
and
xor
dec
fsub
adc
stc
or
sub
fcomp
into
lds
rorb
pop
popa
aad
mov
arpl
adc
out
int
push
lock
sbb
and
jnp
inc
lcall
lock
cs
or
imul
push
jp
push
sti
fs
push
dec
jp
pop
ljmp
cli
xor
inc
xor
jne
and
aam
push
mov
cmc
shrl
cwtl
jg
dec
jp
movsb
lahf
push
call
cmpsb
ljmp
mov
mov
cwtl
inc
sar
ja
mov
adc
jb
push
or
lds
out
or
and
xchg
roll
jl
fs
stos
add
arpl
inc
add
jg
imul
cmpsb
jb
add
rcll
dec
sub
mov
xchg
adc
dec
fmul
cli
shll
pop
jg
es
adcl
cmp
pushf
mov
jbe
mov
and
imul
mov
sub
dec
ja
mov
add
jle
push
mov
into
sbb
cmp
mov
loop
and
inc
das
fwait
dec
fisubs
movsb
inc
jecxz
loope
and
test
inc
call
jge
loopne
fists
filds
inc
mov
adc
mov
push
ret
in
push
push
inc
xchg
je
push
dec
pop
lods
push
mov
mov
int
sti
sub
cmp
out
jae
add
mov
mov
in
movsl
push
sub
push
outsl
mov
loopne
dec
xorl
aad
dec
jmp
or
mov
scas
push
leave
cmp
mov
lcall
shrl
dec
fimull
add
fs
add
repz
jns
pinsrw
inc
push
test
mov
ljmp
aad
fwait
scas
rcr
imul
cmp
adc
and
in
subb
dec
xor
add
xor
cld
sbb
pop
xor
inc
les
icebp
pusha
inc
lock
xchg
lea
lcall
xor
je
ds
add
cmp
sub
leave
subb
and
sbb
sub
or
adcb
lods
and
jns
into
inc
mov
div
aam
popf
cmpsl
pop
mov
out
lods
mov
mov
ja
adc
hlt
adc
xor
call
jp
adc
cs
mov
jmp
js
addr16
int
inc
aad
inc
sub
and
daa
hlt
adc
sbb
xlat
cltd
push
sbb
inc
imul
xchg
adc
sbb
ljmp
xchg
ljmp
adc
aas
pop
mov
sbbb
stc
arpl
xchg
jbe
iret
loop
fisttpl
in
popf
stc
into
pusha
js
js
insb
sbbb
add
call
mov
notl
inc
push
lea
lcall
dec
loop
rolb
push
push
sub
pop
in
lods
fsubrl
pop
mov
mov
mov
fistl
add
or
dec
jg
jbe
and
jl
sub
push
jg
stos
or
mov
ss
pop
jge
pushf
push
dec
or
stos
int
pushf
rclb
adc
iret
dec
fstl
pop
add
sahf
leave
outsb
xlat
pop
add
ja
jmp
mov
inc
iret
xchg
out
xchg
push
ret
mov
sub
insl
ss
in
jnp
rcrl
jb
das
jnp
popa
pop
test
inc
icebp
mov
movsl
pop
jp
push
jp
in
sub
adc
imulb
push
mov
xchg
popa
test
stos
pop
movsb
or
jecxz
cld
insb
aaa
dec
fwait
mov
adc
mov
out
xchg
inc
sub
mov
aaa
xlat
dec
stos
push
adc
xor
mov
movsl
push
dec
and
jmp
add
sahf
jae
popa
ss
out
jns
rorb
sti
mov
ljmp
pusha
bound
jb
dec
pcmpeqw
sub
dec
je
mov
mov
mov
sub
cmp
ja
inc
add
rcrl
sbb
ja
inc
inc
sti
and
aam
inc
test
dec
and
fimuls
ds
repz
imul
and
sahf
push
xor
mov
cwtl
xchg
inc
jae
negl
in
aam
fistps
fwait
mov
xor
roll
xor
stos
xor
test
sub
fimull
mov
push
repz
out
inc
negl
xor
test
aas
push
arpl
sar
xor
in
cmp
xor
sbb
inc
leave
mov
fdivrl
mov
dec
inc
mov
cmp
pop
push
outsl
add
xchg
xchg
cmp
pop
xor
dec
or
ljmp
psubusb
loop
add
sub
loopne
jbe
adc
mov
mov
add
fisubrs
mov
dec
loopne
fadds
jns
test
pop
jp
movsl
cmpsl
jmp
mov
xchg
lret
push
inc
stos
cltd
shrb
sbbb
xor
lret
push
xor
imulb
insl
mov
sub
inc
xchg
lods
fistpll
test
mov
dec
jo
repz
cmp
pop
lahf
rolb
outsl
pusha
xchg
ret
mov
adc
pusha
andl
jp
sub
cmpsl
push
ljmp
test
pushf
cmp
das
jo
out
mov
lret
int
scas
dec
out
xor
cmp
nop
imul
sbb
or
int3
in
jp
inc
lfs
movsb
mov
cmp
addl
lods
or
aad
scas
jle
dec
icebp
pop
inc
in
sbb
sub
in
into
and
dec
or
or
push
jno
pusha
adc
ljmp
pop
dec
push
xchg
in
xchg
jnp
mov
xor
pop
in
jno
mov
or
ja
mov
cs
cmpb
std
in
add
in
sub
xor
inc
sbb
pusha
cmpsl
dec
lret
mov
or
pop
fisttps
cld
mov
lret
or
test
rcrb
push
popf
xorl
andps
popa
mov
cmp
cmp
xor
xchg
xchg
lods
popa
stos
inc
test
out
xchg
sbb
push
mov
jecxz
add
xchg
pop
cmc
outsb
xorl
lods
xor
push
add
pop
mov
data16
sub
les
insb
inc
mul
pop
fbld
stc
and
aaa
xchg
iret
adc
out
int3
enter
fbstp
fstps
push
shl
ja
mov
popf
loop
scas
jnp
xchg
mov
ret
scas
dec
movsb
aad
cmc
std
lret
icebp
and
sub
fwait
adc
icebp
push
jb
stos
mov
inc
lea
lea
mov
cltd
xchg
je
lods
jecxz
sbbl
insb
xchg
call
bound
dec
lock
push
nop
dec
fsubrs
in
pushf
dec
push
negb
push
enter
adc
bound
push
cltd
mov
pop
shll
jle
push
dec
orl
mov
inc
shrl
or
dec
sbb
test
xor
lea
fistpll
fistl
adc
push
movsl
out
mov
cmpl
push
enter
out
push
push
xchg
push
mov
cmpsb
sbb
cli
xchg
aam
cmp
cmp
mov
leave
jo
out
ds
imull
mov
jno
jne
push
add
sub
fidivs
unpcklps
fbstp
shr
pusha
daa
in
movsb
aas
jns
dec
clc
or
into
jmp
inc
sub
push
push
test
ja
or
cmp
sub
mov
jp
lret
and
mov
js
jmp
xchg
push
sub
scas
mov
out
cmp
fildll
scas
push
insl
xchg
push
int
dec
pop
xchg
xor
daa
stos
in
inc
cld
imulb
push
sub
pusha
adc
ss
lret
lea
cmp
inc
ljmp
push
add
popf
inc
jb
jp
lea
jae
popa
fwait
push
xlat
aam
push
out
pusha
ficomps
xor
mov
cmpsb
aas
out
mov
into
jg
sbb
sar
mov
shrb
unpckhps
call
or
imul
or
add
mov
sub
adc
mov
jno
std
flds
and
add
dec
jmp
mov
mov
hlt
fldcw
and
adcb
lahf
push
inc
push
popa
xchg
sbbl
leave
push
jg
lea
sbb
rolb
repz
mul
fldt
test
pop
pushw
pop
mov
xor
test
movsb
mov
hlt
das
cmp
mov
iret
pusha
mov
push
stc
ret
inc
in
mov
lea
ljmp
xor
xor
mov
aaa
xchg
pop
inc
sbb
and
inc
or
add
insb
pop
jne
mov
jbe
pop
push
mov
sbb
xor
mov
movsb
xor
add
jnp
sbb
lahf
sub
xor
stos
mov
sti
push
add
decl
push
jg
repnz
test
mov
or
bound
aam
call
push
mov
add
or
adc
push
stos
add
sbb
loop
dec
les
test
sub
mov
cmp
ljmp
cmp
call
add
push
xchg
mov
cs
cmpsb
and
cmp
mov
sbb
cmovle
jno
gs
sub
ja
sub
test
jmp
mov
xorl
jbe
out
mov
repnz
ja
adc
or
testb
adc
leave
or
mov
sbb
jp
lret
dec
jno
fwait
jmp
inc
or
cli
mov
popf
sbb
xlat
cwtl
jp
mov
lock
push
stc
rolb
xchg
mov
mov
add
or
push
sub
pusha
fmull
loope
cltd
adc
call
fildll
ds
mov
pop
les
adc
je
push
ror
cmc
das
pop
sub
sahf
dec
cmp
dec
jecxz
out
push
mov
inc
dec
in
flds
mov
mov
rolb
lahf
cmp
pop
lcall
lods
and
dec
xchg
fisubrl
jae
imul
xchg
nop
jno
les
sbb
shrl
in
jnp
lods
sub
adc
test
cmp
insb
jae
cmp
mov
inc
in
cld
fmull
sarb
add
and
add
fsubp
cli
incl
mov
lahf
insb
mov
xchg
xchg
cmp
out
dec
pop
fdivl
lds
fimull
lods
cmp
shlb
dec
and
and
sbb
lods
popa
jge
stc
adc
xchg
cmp
cmp
mov
or
and
inc
cmp
icebp
mov
std
or
imul
pop
ss
cli
or
or
test
lcall
cli
hlt
cmpsl
lock
cmp
sub
add
sub
sub
cmpb
inc
test
xchg
mov
sub
dec
xlat
call
loope
loopne
in
push
mov
fistps
mov
es
adc
mov
adc
xchg
aad
lahf
enter
popa
pop
mov
testl
fnstsw
clc
xchg
daa
dec
cmp
cmp
mov
push
lret
sti
xchg
call
xor
sbb
xchg
ficomps
push
mov
stc
xor
hlt
sbb
outsb
jecxz
cltd
add
insb
cli
ja
push
sub
enter
add
jnp
xlat
iret
mov
mov
jmp
test
rcrl
movsb
dec
sub
mov
addl
leave
sti
xchg
dec
sbb
ret
dec
setno
adc
scas
shlb
shlb
adc
mov
lock
cmp
shlb
mov
pop
pop
std
add
mov
jp
mov
dec
fs
movsb
movsb
push
cmpsb
enter
cltd
lret
add
xor
mov
dec
add
mov
sbb
xchg
daa
jl
sbb
dec
mov
fdivp
sub
push
push
jb
jb
jmp
popa
mov
and
scas
dec
pop
div
dec
sbb
insb
call
dec
js
adc
push
sub
in
push
inc
shrb
std
push
movsl
js
xor
cmp
insl
xchg
push
inc
jecxz
loope
inc
pushf
mov
dec
adc
inc
popa
stc
sbb
inc
or
inc
push
lret
pusha
push
jle
ja
mov
test
mov
stos
repnz
mov
sub
shlb
loopne
mov
negl
sbb
or
popa
shrl
xchg
push
mov
inc
xchg
je
hlt
sub
movsb
in
imul
mov
dec
lcall
mov
jp
stc
stos
adc
orl
lahf
pop
out
adcl
adc
icebp
pop
mov
outsb
in
pop
and
rcll
sbb
mov
dec
xor
jecxz
mov
hlt
nop
es
xchg
fcom
aas
pushf
out
jnp
arpl
cmp
xor
push
in
push
in
fs
xchg
bnd
fidivrl
cmpsl
cwtl
sub
popl
jl
cmp
xor
cmovne
xchg
cmpsl
incl
dec
out
dec
mull
ja
push
shrl
xchg
into
shll
inc
or
adc
dec
jno
jle
andl
fsubr
mov
mov
add
mov
push
fnop
inc
test
cli
outsb
push
mov
sub
inc
scas
add
mov
mov
pop
sub
lcall
lock
fisubrs
mov
jae
into
mov
jecxz
cmp
add
push
jle
dec
xlat
pop
inc
mov
loop
xor
lds
in
mov
push
sbb
and
les
das
pushf
ror
dec
ret
ja
xor
adc
xor
ljmp
mov
in
lock
lock
ss
rorb
sbbl
and
and
mov
inc
imul
in
or
jno
aam
pushl
fdivp
xchg
test
sbb
mov
or
and
pop
xor
pop
imul
and
dec
out
leave
lea
shrb
adc
xor
cmp
dec
mov
sbb
lret
push
xchg
outsl
adc
mov
mov
andb
xor
je
jns
or
mov
pusha
jbe
inc
lock
xor
adcb
and
loop
cmpsl
dec
inc
in
cmpsl
into
ja
adc
add
adcl
lea
aaa
add
adc
add
inc
dec
ret
lahf
jp
shlb
jae
inc
xor
xchg
por
adc
inc
or
or
in
mov
adc
shrb
in
xor
add
jle
dec
loop
cwtl
push
pop
mov
jo
mov
aad
test
xchg
repnz
and
mov
cmp
and
fcmovnu
sbb
xchg
xchg
mov
pop
pop
fstpt
xchg
cld
lock
inc
shrb
rolb
fwait
popf
mov
shl
push
cmp
push
xchg
or
jno
lahf
lret
push
mov
mov
stos
test
mov
xor
inc
inc
mov
stos
dec
out
je
dec
mov
jmp
aam
xchg
mov
push
jl
scas
jp
jle
testl
pusha
outsb
jmp
mov
sbb
push
bound
add
mov
and
pop
push
xchg
and
roll
sub
or
iret
ss
dec
pop
icebp
scas
dec
pop
test
inc
cli
mov
out
lea
or
popa
inc
dec
pop
sbb
adc
enter
je
pop
fs
sub
stos
test
sbb
push
cmp
leave
sbb
jae
pop
fsts
cmpb
xor
pushf
outsl
out
dec
mov
sarb
and
push
shlb
adc
pop
dec
aas
out
inc
stc
pop
jo
push
sbb
movb
dec
push
adc
push
mov
jae
sub
mov
add
hlt
leave
rcrb
cmp
mov
or
pop
sbb
pop
adc
decl
dec
test
push
push
fcomps
mov
push
dec
into
sbb
fistpll
dec
push
xor
test
popf
cmc
adc
push
jg
pop
bound
pop
out
pop
addb
sub
push
sar
subl
xor
or
add
xor
negb
test
mov
and
jae
lahf
xchg
jmp
out
dec
sbb
test
repnz
and
and
dec
nop
xchg
inc
pusha
xor
add
xchg
scas
xor
jnp
sti
imul
push
insl
sbb
dec
add
sti
or
push
in
dec
out
push
and
dec
xchg
dec
xchg
pop
sub
testl
and
push
repz
movsl
int3
mov
xchg
mov
popa
mov
lret
push
mov
xor
xor
xor
and
push
bound
jbe
adc
in
ss
push
test
mov
cmp
jno
in
shlb
insb
jmp
jno
mov
sbb
ljmp
sub
cwtl
xchg
mov
adc
pop
js
xor
sbb
test
out
rcll
aaa
cmpsb
lods
clc
xor
aad
out
mov
adc
cli
inc
cmp
fnstcw
rcr
fcoml
sbb
dec
popf
mov
xchg
pop
jp
mov
mov
rcrb
or
insl
sbb
push
lock
insl
lea
stos
fcmovbe
call
and
mov
dec
push
daa
fldenv
push
add
pop
mov
out
push
cli
popf
xchg
push
cmp
addr16
or
scas
repz
rcr
mov
mov
ficompl
int3
jo
lahf
loop
mov
pop
lcall
fnstenv
jb
add
push
push
add
push
outsl
aam
rolb
icebp
into
mov
inc
pop
lea
call
popf
cmpsb
cmp
negl
sbb
fldt
add
push
jmp
clc
int3
sub
loopne
popf
popf
mov
ja
cmp
sbb
mov
inc
std
add
mov
dec
loope
xor
pop
jo
push
fs
or
ljmp
or
outsl
stc
ljmp
loopne
test
lock
xchg
setno
mov
xchg
adc
xlat
imul
cmp
ret
sub
sub
jb
into
pusha
shl
fadds
fadds
gs
jns
sub
nop
insb
pushf
or
lret
cmp
mov
insb
mov
adc
push
outsl
sub
and
popa
cmpsl
sbb
insl
jb
ja
ret
into
jae
cli
out
jmp
push
or
mov
loop
lea
inc
jns
popf
or
push
imul
add
lret
cmpsl
jmp
xchg
jae
in
xorl
add
jg
pop
sbb
call
lods
jns
mov
dec
dec
mov
sbb
mov
dec
mov
xor
inc
dec
sbb
cmpsb
push
mov
or
mov
jmp
pusha
arpl
shll
imul
sbb
mov
cmp
gs
lret
jns
out
dec
stc
push
inc
jl
icebp
mov
es
fsts
xchg
jne
add
add
add
add
add
add
adc
add
cmp
std
icebp
aad
jmp
mov
jo
jg
mov
cmp
mov
cmp
frstor
std
call
mov
cmp
mov
cmp
mov
cmp
sbb
add
jg
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
sbb
add
pusha
add
add
mov
jb
add
add
add
add
mov
jg
add
add
sar
outsl
ret
inc
inc
add
rolb
add
push
add
add
add
add
add
fadds
add
mov
add
add
test
cmpb
add
add
add
add
add
and
add
add
loop
push
stos
cwtl
sbb
add
add
addb
add
add
add
lcall
pop
dec
outsl
adc
add
add
add
add
or
add
add
add
mov
add
add
insb
jle
popa
pop
mov
add
push
add
add
sbb
add
add
add
mov
add
add
into
add
add
in
mov
push
cmpsb
sub
push
add
add
push
or
add
inc
add
stos
add
stos
mov
add
add
xchg
push
inc
add
push
add
add
dec
test
add
xchg
add
jle
add
add
add
jb
sti
dec
out
fists
rcrb
or
or
stc
cmc
shlb
lret
xor
popa
leave
xchg
fildl
lret
xor
daa
pop
in
mov
mov
xor
mov
add
add
outsb
enter
outsl
cli
fcoml
lret
std
lds
clc
and
cmp
xor
sub
es
mulb
push
push
push
dec
loopne
popa
mov
and
sub
jg
rorb
aam
mov
push
mov
pop
xor
fcomps
popa
mov
sub
icebp
or
movsb
fmull
or
pop
insl
leave
cmpsl
dec
pop
fcompl
nop
ret
adc
dec
mov
add
test
jl
xor
dec
or
xchg
jp
xchg
add
outsb
es
cmpsl
out
lock
adc
out
dec
enter
loop
sbb
dec
cwtl
push
fstl
imull
pop
cmp
sub
and
cmp
cmc
add
adc
push
lods
aad
sbb
shll
insl
xor
in
jmp
and
repz
adc
daa
in
mov
pop
nop
mov
xchg
imul
pop
jle
sbb
popa
mov
mov
stos
pop
mov
push
add
icebp
and
mov
fsubl
cmovae
pop
ret
xor
fsubrl
int
fiaddl
pop
push
lret
mov
fwait
push
cmc
icebp
aaa
rcrb
xchg
pop
rorl
shll
pop
xor
cmp
mov
ffree
push
and
iret
or
jmp
adc
lret
jle
mov
loope
aad
mov
or
or
mov
aas
fsubl
test
cmp
mov
or
test
push
pop
hlt
xchg
bnd
xchg
lret
dec
fdivrl
adc
mov
mov
push
inc
mov
cmpl
dec
sbb
pop
sbb
jg
xchg
int
pop
je
fucom
xchg
andl
rclb
add
sbbl
hlt
cmpsb
fcmovu
stos
mov
push
adc
pop
test
jns
inc
mov
cs
xor
xor
jmp
bswap
xlat
test
ret
into
sub
jne
ja
das
cli
sbb
lea
add
push
or
out
jl
or
add
sub
sub
outsb
push
sub
shll
loope
cltd
jle
je
xchg
pop
lds
push
cwtl
xchg
lcall
ss
push
push
subl
and
repz
mov
lea
cmp
imul
adc
test
loop
clc
stos
cmp
and
mov
in
cmpsb
push
movsl
xchg
or
je
push
stos
mov
iret
mov
push
cmp
add
les
ficomps
adc
or
icebp
xchg
pop
jno
test
lods
sbb
jmp
aas
pop
fwait
pop
icebp
imul
arpl
inc
fcmovne
inc
push
iret
adc
ret
inc
pop
pop
daa
sub
imul
add
scas
push
out
sbb
insl
pop
ficompl
xor
mov
enter
repz
lahf
lods
sahf
lahf
pop
dec
cmp
cmc
and
das
mov
inc
insb
fcompl
int
mov
adc
call
stc
insb
popf
enter
add
addr16
icebp
add
or
adc
in
cltd
repz
jno
adc
mov
kmovb
adc
add
bnd
mov
es
adc
jo
xor
push
mov
dec
dec
adc
dec
jge
aas
rol
dec
cmp
clc
imulb
hlt
jns
dec
add
adc
test
ret
sar
xor
jbe
sub
icebp
cltd
xchg
push
rorb
lcall
test
and
push
stos
notb
lock
mov
sub
mov
cmp
mov
sbb
mov
and
aad
cld
mov
dec
sbb
mov
push
jmp
adc
push
mov
in
and
dec
outsl
push
or
xchg
std
dec
aam
pop
mov
jl
mov
lods
xchg
ja
cmp
jecxz
je
pop
shll
lea
jle
in
ret
xor
std
xor
xchg
mov
dec
in
xor
xor
inc
mov
call
xchg
int
repnz
mov
in
insb
dec
or
stc
cld
dec
repnz
pushf
out
cwtl
call
cld
mov
dec
mov
jle
mov
jo
xchg
jnp
or
push
and
andl
aas
loope
push
in
outsb
or
loope
lret
sub
mov
jg
jecxz
out
adc
and
shll
pusha
dec
inc
bound
dec
pop
pop
jbe
daa
les
dec
cld
and
flds
test
fdivl
jno
jl
adc
shll
fbld
jb
lcall
fs
loope
jne
lret
dec
scas
lods
mov
aam
mov
loop
push
cmpsw
movsl
imul
dec
into
and
outsl
and
in
aad
shrb
and
and
dec
hlt
stos
popa
stos
lods
jno
jbe
push
imul
imul
add
cmp
insb
push
popa
push
xchg
mov
mov
pushl
ret
mov
lock
popa
push
jnp
jbe
mov
sbb
hlt
mov
jno
mov
imul
cmp
ljmp
adc
xor
push
adc
popf
xor
or
loop
adc
push
mov
jecxz
xchg
jle
and
mov
adc
xchg
fidivl
mov
shlb
sub
shl
test
mov
sbb
js
xor
dec
inc
mov
dec
outsl
and
and
jns
jecxz
cmp
in
sbb
sub
sahf
adc
add
add
and
call
dec
cmp
xchg
sbb
adc
fnstcw
push
push
xor
mov
mov
aam
fs
mov
adc
mov
mov
mov
dec
popf
cmc
pop
push
mov
out
mov
xchg
mov
mov
mov
stc
lods
nop
add
das
out
mov
fst
push
cmpb
mov
or
mov
js
jecxz
push
lods
or
test
jmp
sbb
imul
cmp
cmp
pop
xor
lahf
lods
insb
int3
inc
mov
and
loop
imul
in
popa
sarb
cmpsl
imul
adc
adc
adc
pop
mov
sbb
test
ss
leave
scas
adc
icebp
shrb
test
fwait
and
rep
cmp
sbb
jp
outsb
adc
sub
dec
pushf
inc
pusha
lahf
inc
rorb
add
fbstp
jg
xchg
cmpl
jp
lods
mov
pusha
std
xchg
popa
outsl
xor
pop
adc
lods
push
xchg
outsl
xor
and
sub
cmp
cmpb
sub
push
dec
mov
movsb
cmp
loopne
lcall
dec
lea
test
test
xor
lea
jae
inc
adc
cmpsb
sbb
jno
mov
insb
or
pop
push
adc
add
fs
push
neg
xor
cli
popa
pushf
mov
or
jnp
aaa
addr16
fnstenv
push
scas
xor
inc
addr16
pop
push
xchg
adc
lds
or
imul
imul
cmp
jecxz
xorl
ss
pusha
lcall
push
decb
cmpsb
clc
mov
sbb
jo
mov
cmc
ret
test
scas
mov
add
lahf
pop
xor
test
int
repnz
sbb
cmp
or
mov
add
fsubrl
cmp
jo
sbb
insl
stos
sub
adc
sub
leave
loopne
or
mov
test
mov
mov
cmc
cmpsb
mov
and
jle
add
sti
andl
and
mov
pop
sub
cmp
or
mov
or
xchg
push
das
sbb
cli
loope
xor
sub
jle
push
fstpl
cmp
mov
jmp
fisttpl
andl
sub
or
sub
push
cmp
les
dec
add
cli
mov
mov
mov
add
out
movsl
cmc
movsl
lcall
je
sarl
cld
inc
cli
dec
popf
jae
mov
sub
xchg
sub
sbb
xor
out
cltd
inc
andl
loope
or
outsl
test
repnz
push
andb
mov
ror
cmp
inc
aaa
cmp
or
sub
cmp
in
xor
sub
mov
cld
popa
bound
dec
cwtl
inc
mov
sub
xlat
stos
xchg
into
ret
iret
insl
jbe
aam
fiaddl
test
fidivrs
inc
xchg
mov
cmp
aad
jge
icebp
add
in
popa
mov
enter
cmp
jmp
cmpsl
mov
xchg
sub
popf
or
lock
loope
add
xchg
pop
daa
arpl
pop
mov
hlt
jmp
inc
and
stos
xor
icebp
adcl
cmp
dec
pop
mov
dec
movsb
mov
inc
or
sbb
ret
into
lods
push
imul
or
push
lds
xor
add
scas
sub
flds
es
repz
inc
and
add
sub
lods
gs
negb
mov
mov
push
pop
hlt
je
shl
ffreep
xchg
fwait
rorl
mov
mov
jmp
out
aas
xor
shrl
mov
mov
mov
iret
leave
jno
pop
add
dec
jns
add
cwtl
adc
cwtl
out
test
jle
test
fstps
arpl
xchg
sbb
dec
stos
pop
stc
or
cvtps2pd
jb
imul
test
mov
sbbl
xor
fmuls
fsubp
cmc
out
sbb
mov
andb
pop
mov
rolb
lea
hlt
sarl
xor
clc
xchg
fsubl
hlt
mov
inc
dec
xchg
pop
jg
shrb
mov
or
daa
fistl
cmpsl
decb
adc
cmp
ds
jo
mov
or
mov
lret
test
das
notb
or
lahf
in
lret
pop
or
rclb
daa
call
add
insl
lock
xchg
int3
mov
cmp
mov
push
insb
es
les
cltd
pop
jmp
push
lods
jecxz
les
mov
fldcw
dec
jg
xor
sarb
sub
xchg
mov
and
lret
pop
cmp
aas
inc
cld
jecxz
pop
cmp
aad
push
leave
sbb
or
jns
jno
cmp
adc
and
lahf
sub
cmpsl
add
and
adc
fnstcw
push
dec
leave
leave
ds
cmp
insl
xor
inc
fildll
lea
dec
xchg
fisttps
add
sbb
orl
adc
in
popa
lahf
imul
and
xchg
ja
mov
adc
aas
movb
xchg
add
adc
jns
out
out
or
push
sub
jae
inc
imul
dec
jmp
sbb
cmp
cli
invd
jns
xchg
dec
pop
mov
out
inc
cli
imul
loope
aam
xchg
addb
aad
fsubrs
cmp
iret
ficomps
in
adcb
into
pop
add
das
cli
xchg
leave
pop
xchg
sub
mov
aaa
mov
push
out
mov
cmpsl
movsl
lret
pop
mov
sbb
sbb
fldt
sub
out
sub
xchg
xchg
mov
sbb
in
mov
aas
inc
stos
jae
dec
lahf
fwait
push
imul
inc
add
shrb
lcall
push
xchg
sarb
shlb
jmp
push
push
mov
aas
and
xor
idivb
dec
fcmovnu
cmp
mov
cmpb
addr16
int
sbb
push
jp
lcall
add
in
jge
pop
fnstcw
dec
sub
aam
mov
nop
sub
es
test
outsb
jns
add
clc
pop
jnp
lds
stos
and
cmpsl
push
es
rorl
jne
shll
shlb
pushf
xchg
mov
pop
ficomps
inc
pop
bound
bound
and
rcrb
in
pop
fucomp
sbb
and
xchg
cmovno
mov
fcomps
iret
and
aam
push
jmp
xor
mov
in
in
ffree
inc
xor
js
pop
dec
inc
out
cld
jns
inc
ret
cmp
mov
mov
or
fldt
xchg
cmpsl
or
clc
out
dec
dec
std
faddp
jecxz
mov
pop
call
shl
je
add
rcrb
out
jbe
push
hlt
cmpsb
out
lcall
lret
cltd
xor
mov
push
and
xchg
cmpsl
inc
mov
jle
hlt
push
rcll
add
and
lahf
popf
and
jno
fidivrs
inc
push
lods
mov
ljmp
mov
shrl
sbb
sub
mov
or
inc
inc
icebp
push
dec
sbbl
xchg
fucom
imul
into
xor
lcall
mov
mov
pop
dec
shrb
mov
or
push
repz
push
lods
fucomp
jge
cmp
pop
inc
das
mov
jp
fs
xchg
sbb
insb
adc
int3
je
mov
loopne
push
xchg
cmpsb
pop
insb
jmp
and
pop
inc
insb
mov
in
mov
cmp
in
test
enter
shlb
dec
popa
pop
dec
bound
cltd
add
mov
or
cld
daa
lcall
mov
mov
pop
push
ret
push
mov
or
mov
dec
pop
call
jecxz
movsl
addr16
mov
pop
repz
push
fcmovne
sbb
lods
add
lahf
rcl
cli
fnsave
aaa
fsub
xchg
mov
mov
rcll
rcl
lock
shlb
imul
mov
cmp
popa
std
and
cmp
testb
insb
cmpsb
pushl
sbb
mov
pop
xchg
pop
sub
test
pop
mov
pusha
fidivrl
stc
leave
rol
sub
ret
mov
or
jns
movsl
cmp
and
insl
idiv
push
sahf
mov
and
lret
jae
adc
xchg
inc
mov
adc
sub
jmp
out
inc
test
fsubs
dec
sub
cmp
mov
movsb
stos
mov
or
fldcw
dec
mov
xor
push
in
lods
movsl
or
xchg
and
add
dec
sbb
out
ret
insl
outsl
ljmp
xchg
jmp
cmp
lahf
xor
mov
inc
test
jle
sarl
pop
das
icebp
test
lods
cmpsb
fnclex
test
jnp
jo
lea
mov
xchg
sbb
clc
mov
gs
pop
cmpsb
sbb
lock
mov
insb
xchg
outsb
orb
lret
xor
std
push
dec
mov
jb
cmp
iret
xchg
jge
stos
popa
xchg
fiaddl
sahf
loope
fstl
daa
pop
sti
sbb
mov
ficomps
dec
popf
gs
mov
call
gs
jecxz
sub
inc
not
lods
aaa
and
rcrb
mov
mov
int3
int3
addr16
jmp
sbb
scas
jno
mov
ja
pop
idiv
mov
push
daa
sub
movsl
subb
cmp
pop
sub
mov
cltd
inc
fidivs
jne
into
imul
bound
lock
fadd
adc
add
sub
mov
mov
inc
jecxz
sbb
jl
loopne
int3
repz
mov
mov
cmpsl
jmp
scas
aam
into
test
inc
mov
sub
test
jo
push
xchg
lods
mov
jg
dec
jecxz
xor
in
aas
hlt
push
dec
mov
adc
mov
adc
dec
mov
mov
lods
fstl
push
lcall
inc
push
mov
or
fldt
jge
imul
inc
mov
imul
das
sbb
cmp
jp
push
es
inc
rolb
clc
jno
xor
adc
cmp
mov
dec
sbb
xchg
and
outsb
mov
sbb
inc
push
push
dec
cmp
jmp
xchg
in
aad
jp
dec
pop
or
mov
into
rol
fimuls
call
das
xor
cmc
pop
sbbl
dec
jnp
lds
push
jge
add
mov
arpl
dec
pop
repz
adc
xor
ret
icebp
ret
je
in
test
cmpsb
mov
xchg
shrl
pop
xor
addr16
mov
xchg
rcr
daa
idivb
lods
jecxz
cmp
xlat
je
pushfw
and
fistl
loope
jns
popa
enter
sahf
jl
ficomps
stos
aad
test
call
xchg
ja
pop
jg
jo
ja
and
ds
mov
loopne
shll
mov
xchg
mov
pop
xchg
xchg
mov
aad
lods
aaa
repz
xchg
test
mov
dec
rcrl
cmpsl
sarb
adc
xchg
jnp
popf
dec
std
shrb
pop
leave
shll
jb
int
shlb
jg
mov
aas
in
cmp
rorb
adc
add
leave
push
in
jg
lahf
fcompl
push
mov
aad
repnz
shlb
outsl
lret
dec
ret
addr16
sbb
fwait
into
loop
xlat
loop
in
lock
push
push
or
dec
fidivrl
inc
loop
pushf
jmp
jecxz
jbe
and
cwtl
pop
rolb
scas
popf
inc
or
enter
mov
cltd
cmp
in
fstps
mov
sub
into
inc
loop
cmc
cwtl
ja
lock
stos
sti
pushw
or
shl
inc
out
lahf
stc
je
pop
sbb
or
pop
pop
int
cmp
test
hlt
push
and
es
and
repnz
mov
rep
dec
jl
cs
inc
cmpsb
pop
push
cs
dec
cmp
sbb
mov
aas
xor
mov
arpl
mov
mov
xor
or
lds
jno
sbb
xor
push
jae
xlat
std
les
movb
sar
insb
imul
sub
fists
js
imulb
cmp
iret
mov
jbe
inc
cmp
scas
jbe
mov
test
cmpsl
test
mov
mov
fs
pop
inc
xchg
ss
or
adc
adc
fwait
lods
inc
rcll
fisubrs
jecxz
dec
jl
mov
mov
nop
inc
add
pusha
push
cli
inc
jp
cltd
mov
and
testb
call
aam
adc
test
sbb
jnp
and
ss
and
in
rorb
xchg
enter
mov
jp
out
inc
rcll
push
inc
jbe
pop
sar
dec
in
lods
sub
jo
int3
mov
cmp
jo
add
scas
mov
push
inc
mov
pop
mov
ja
adc
lahf
repz
scas
ljmp
inc
pop
adc
out
pusha
movsb
repnz
sbb
or
jmp
and
lret
ss
lds
pop
das
test
xchg
mov
push
jno
cmp
inc
cmp
add
das
xlat
out
cltd
and
outsb
jne
mov
movswl
sub
jecxz
or
fisttpll
sbb
fnstsw
in
cmp
and
clc
mov
sub
pop
or
fdivrs
mov
or
mov
out
cmpsb
jo
mov
repz
roll
dec
lock
iret
in
sbb
mov
loope
pop
sub
call
loop
push
push
fidivrl
sbb
rolb
jnp
aaa
mov
dec
out
mov
mov
xchg
jl
cmc
ret
mov
negb
sub
jae
in
push
pop
sbb
inc
scas
in
sbb
jmp
fdivrl
sbb
and
int
stos
lret
cmp
bound
push
and
pop
jnp
mov
adcl
sbb
xlat
push
jl
cwtl
add
scas
bound
mov
repnz
adc
lcall
fwait
xor
out
lea
lods
imul
fwait
rcr
subl
lods
push
loop
lock
cld
xor
ror
xchg
sub
mov
ja
mov
cmc
stos
nop
mov
dec
repz
mov
filds
jae
xor
push
lds
dec
mov
mov
icebp
mov
inc
js
ror
adc
cmc
ds
jnp
adc
jg
rclb
jmp
mov
js
das
xor
ffree
sahf
ds
pop
das
pop
cmpsb
inc
adc
jp
jl
sbbb
rorb
and
inc
and
cmp
test
mov
fcom
pushf
push
lds
jne
sub
test
shl
sbb
xor
mov
loop
xor
es
call
je
sub
lahf
jg
cmc
dec
lds
cmp
lcall
add
dec
inc
icebp
jno
leave
repz
inc
in
lret
insb
mov
push
pop
fdiv
in
aaa
cmc
dec
ret
int
ds
aaa
xlat
lret
push
std
cmpl
scas
test
xchg
fcmovnbe
repz
xchg
stos
xchg
ss
jg
movsb
ret
les
rep
int
push
add
dec
and
mov
pushf
jne
sbbl
push
addr16
mov
push
cmp
cmpsl
adc
loop
and
sbb
fdivrs
cs
out
xor
push
cli
loopne
fsubl
jno
cmpsb
sbb
xor
inc
cli
clc
aam
in
push
dec
in
inc
xchg
xchg
ja
popa
adc
push
dec
test
push
sahf
jmp
scas
jle
je
push
outsb
mov
cli
pop
pusha
mov
pop
ffreep
add
jmp
callw
jl
cld
jnp
enter
inc
dec
cmp
orb
gs
mov
iret
sbb
fildl
adc
pop
push
and
cld
lods
pop
dec
js
stos
jl
jne
jb
cmpsb
pushf
insb
sub
cmp
mov
pop
push
push
dec
scas
lahf
mov
push
pop
jae
dec
ret
test
pop
cli
pop
dec
xchg
jle
flds
cmp
cmp
or
and
in
jmp
fwait
hlt
jbe
mov
pusha
and
int3
mov
ds
rclb
lahf
dec
mov
dec
mov
pop
addr16
adc
cmpsl
lret
outsl
add
mov
mov
hlt
xor
mov
jp
hlt
repz
testb
cmpsb
add
stc
test
cld
pop
pop
dec
stos
mov
sti
or
cmp
enter
pop
scas
dec
add
insb
bound
mov
adc
lock
sbbb
xchg
loopne
dec
jl
jl
lahf
fbstp
adc
js
into
pushf
call
dec
push
xor
sbb
scas
mov
add
jb
adc
cmc
outsb
pop
pop
je
int
test
jp
pop
cwtl
mov
xchg
outsl
add
push
int
add
inc
out
or
push
cmp
cli
dec
jecxz
aam
push
dec
push
ja
outsl
push
push
cli
dec
lret
push
mov
xchg
addb
mov
jbe
sub
mov
repz
cmpsl
inc
mov
mov
das
mov
scas
imul
or
jbe
cwtl
dec
test
std
inc
add
cwtl
jecxz,pt
ja
and
cwtl
xor
orb
repnz
mov
mov
pop
jne
sub
lea
sub
or
inc
mov
jge
movsl
push
mov
adc
add
push
scas
jle
ret
out
mov
out
xor
cmp
sbb
cmpsl
cmp
cmp
fldcw
lcall
bound
int3
int
pushf
nop
lahf
iret
mov
xor
shll
data16
fistl
xchg
daa
imul
add
and
or
aam
aas
fdivrl
jmp
shlb
jl
push
out
in
mov
inc
xchg
push
arpl
imul
jecxz
xchg
and
push
lret
mov
test
or
mov
lods
mov
xlat
mul
push
jl
inc
cmp
stc
iret
stos
fimuls
fcompl
fistpl
popl
insb
arpl
push
imul
mov
mov
cmp
pop
je
pop
dec
filds
testl
mov
out
loop
push
pushw
xchg
push
into
pop
cmpsl
cmpsb
mov
lds
sub
pop
cmp
fstp
hlt
stc
sub
out
lret
and
mov
adc
xor
mov
push
das
cmp
jbe
add
popa
add
popa
cmc
imul
shlb
hlt
jg
jmp
inc
mov
pop
sub
push
jno
xchg
sbb
inc
ret
out
push
ret
push
hlt
mov
cmp
xchg
out
in
outsl
pop
ret
push
cwtl
shl
ret
pop
lds
or
inc
roll
stc
push
inc
scas
push
sub
repnz
push
xor
decb
mov
in
mov
add
pop
js
cmp
ja
dec
pop
jns
mov
stos
mov
jge
popf
hlt
jbe
inc
dec
mov
cli
fistpll
in
les
adc
test
cmp
sub
mulb
out
sbb
dec
sbb
rcll
mov
je
lds
enter
scas
push
rorb
dec
inc
sub
or
push
filds
loop
jnp
loope
sub
adc
scas
sbb
push
jg
dec
pusha
pop
or
jae
push
popf
sub
xor
es
jmp
or
repz
popa
cs
push
pop
ljmp
pop
pop
mov
loope
jo
pusha
push
out
push
dec
and
xor
in
ja
push
sub
adc
mov
ljmp
sti
mov
pusha
xor
lret
adc
mov
test
and
out
shlb
xchg
rol
not
lods
inc
xchg
fimuls
shll
xchg
xor
and
in
pop
mov
daa
pop
adc
scas
movsb
pop
xchg
xor
mov
or
stos
std
nop
arpl
sbb
jp
nop
mov
inc
mov
shr
mov
inc
pushf
les
add
outsl
stos
cwtl
cmc
dec
insb
jne
mov
pushf
lret
leave
mov
mov
aaa
push
sbb
jecxz
lea
push
mov
addr16
push
pop
add
loop
scas
jle
push
add
push
jo
pop
pop
popf
mov
es
mov
addl
loopne
leave
push
add
out
sbb
lods
or
and
clc
xor
mov
pop
dec
pop
mov
dec
in
leave
adc
push
inc
mov
cmp
xchg
loop
sub
lcall
mov
addr16
fcomps
insb
jnp
xchg
int
pop
pop
adc
fwait
mov
mov
mov
fnstsw
adc
mov
insl
or
pop
add
or
push
mov
jo
push
mov
into
sub
nop
ret
sub
js
inc
mov
pop
arpl
stos
push
add
mov
push
push
in
aam
repz
pusha
push
cmpl
or
aaa
lds
or
mov
std
dec
mov
add
jb
jbe
xchg
inc
mov
aaa
cmp
add
loop
addr16
xchg
and
in
sub
xlat
out
in
shlb
sbb
pop
rcr
movsl
subl
fsubr
adc
in
and
out
cmpb
imul
lahf
xor
repz
mov
jg
lea
or
fcmovne
lea
sbb
adc
data16
test
mov
jg
adc
mov
inc
aas
cmp
mov
jo
test
roll
ds
arpl
mov
pushf
pop
jg
sub
sbb
or
jno
in
sub
xlat
rolb
and
inc
pusha
mov
test
insb
lahf
xlat
jb
dec
dec
je
xchg
or
mov
pop
jmp
hlt
mov
mov
in
int
or
call
mov
aam
stos
leave
clc
fmuls
cs
or
pusha
dec
les
xlat
mov
jnp
mov
stos
jnp
stos
or
sbb
jo
rol
inc
jno
daa
rclb
icebp
adc
pop
out
add
push
xor
lret
adc
popf
jb
subl
push
mov
daa
popf
repnz
aam
shlb
lock
mov
cltd
test
stos
std
pop
fsubrs
adc
pushf
mov
jp
out
push
push
dec
jo
aam
add
sbb
mov
pop
das
lods
add
dec
mov
out
cmc
popa
insl
sti
mov
cmp
lock
aas
or
jno
sub
hlt
mov
mov
imul
dec
pcmpeqw
adcb
push
inc
sahf
xor
push
xchg
aaa
or
xchg
gs
xor
xchg
popf
pop
inc
mov
mov
ret
and
mov
pushl
in
sbb
movsb
cmp
adc
adc
mov
jg
out
arpl
mov
pop
std
adc
scas
add
repz
shl
inc
cli
mov
shll
adc
mov
loope
arpl
sbb
sbb
cmp
xchg
loopew
mov
jp
push
das
fnstenv
addr16
xor
pop
mov
sarl
es
nop
je
cwtl
subl
pop
pmulhw
in
rcll
fildll
and
fwait
in
xchg
jns
ljmp
addr16
mov
inc
repnz
push
fnsave
in
loop
jne
cltd
loopne
inc
dec
push
lods
sbb
sbb
inc
push
icebp
mov
mov
icebp
push
jno
jo
pop
or
test
out
add
cs
fdivrl
xchg
das
daa
jge
insl
add
lahf
iret
lret
xor
sub
call
or
push
pop
in
jne
jno
cmpsl
jg
in
repz
mov
scas
jnp
rolb
jns
push
sub
add
dec
pop
mov
rcr
jnp
mov
imul
add
jl
popf
lods
daa
push
in
xchg
cmp
test
imulb
mov
push
sub
lods
or
xchg
fcomps
mov
jo
jb
add
inc
xor
pop
bnd
dec
cmp
mov
loope
fists
and
inc
fmuls
xchg
dec
xor
imul
xor
gs
xchg
jmp
pop
enter
outsb
in
sqrtps
xchg
push
sarb
stos
pop
out
repz
dec
push
mov
call
pop
or
ss
cmp
shrl
adcb
repz
inc
mov
or
xchg
pushf
imul
pop
cs
aam
sbb
ja
xchg
adcb
xor
lods
push
xchg
jbe
sub
and
imul
or
mov
xchg
and
sarb
pop
fistps
mov
mov
xor
cld
jno
call
sbb
shl
repnz
push
repnz
aas
mov
mov
mov
xor
mov
cmp
cmp
adc
cs
adc
lea
faddp
clc
fwait
shr
inc
testl
mov
add
lods
nop
mov
test
enter
lret
and
xchg
out
in
stos
inc
xor
bound
sarb
push
add
add
fldenv
das
int
push
je
pusha
sub
push
mov
into
dec
pop
stos
fisttps
sahf
fwait
stc
out
pop
cli
and
jp
xor
mov
call
mov
dec
loopne
dec
ja
pusha
mov
sbb
dec
aaa
filds
jne
iret
add
insl
xchg
adc
adc
in
and
lods
icebp
mov
mov
jl
sbb
mov
shll
add
mov
repnz
xchg
rcrl
jp
rcrb
or
jg
out
xchg
fcomi
push
jae
mov
and
test
mov
cmp
cmpsl
sbb
in
pop
pop
jmp
rcr
pushf
into
jg
inc
lret
into
add
push
and
mov
jl
jb
and
dec
out
mov
shlb
inc
ja
popl
xlat
shr
sub
stos
lock
je
adc
jno
movsl
pop
sbb
pusha
cmp
xor
outsl
repz
dec
repnz
adc
sub
insl
xchg
push
mov
mov
insb
movsb
fs
lahf
add
andl
cmpsl
sub
in
cmp
rcl
js
divb
in
jne
jg
popf
pushf
jge
call
jge
inc
dec
push
mov
jmp
inc
mov
fistps
cmpl
cmpsb
sub
call
je
pushf
push
fcmovne
sub
addps
jp
lods
mov
fnstenv
xor
insl
mov
cmp
test
dec
inc
insb
int3
pop
ljmp
cmp
dec
add
lfs
or
adcb
fwait
js
movsl
mov
pop
pop
loope
dec
inc
xchg
pop
inc
sub
int
mov
adc
push
aas
inc
idiv
adcl
cwtl
add
rcrl
or
stos
hlt
ja
out
and
subl
lcall
xchg
fcompl
mov
pusha
adc
fwait
sti
cmpsb
negb
imul
ss
aad
push
outsl
ret
sbb
repnz
ret
jl
mov
mov
fstl
insl
addr16
cmpsl
repz
cwtl
or
xlat
push
fisttpl
or
arpl
sti
cld
or
negb
sub
push
outsb
aaa
mov
jl
and
movsl
test
iret
pusha
mov
aad
popf
out
test
leave
mov
mov
addr16
sub
jae
aam
loope
fwait
aaa
adc
xchg
addr16
sub
das
sbb
and
fstps
mov
mov
hlt
adc
movsl
stos
adc
cmp
imul
cmp
in
mov
sti
insb
addr16
fldcw
sub
push
jae
insl
insl
pop
sbb
fldl
jle
xchg
sbb
es
xchg
cltd
dec
dec
mov
pop
adc
insl
minps
ficoml
and
cmp
or
insb
test
cmpsb
pop
repz
cmp
pop
das
cli
lret
test
pop
sbb
mov
outsl
aad
mov
push
cmp
test
mov
out
sbb
jle
add
sub
pop
mov
or
cld
jno
ja
xchg
mov
xor
scas
repz
cltd
divl
jl
daa
aam
out
push
jp
mov
or
hlt
or
hlt
data16
sub
out
sub
in
and
sbb
pcmpeqd
xchg
push
adc
divl
jbe
mov
adc
jl
les
shlb
int3
push
adc
in
test
add
imul
scas
mov
xchg
mov
jle
mov
push
xchg
mov
fcomps
out
ljmp
dec
push
push
imul
das
adc
imul
addr16
imul
add
jle
repz
or
or
pop
mov
aam
jae
dec
sub
cld
sbb
inc
mov
jg
mov
cmp
sbb
jns
mov
pop
loop
mov
jg
xchg
das
sbb
sbb
js
and
popf
in
mov
mov
jo
std
dec
or
push
xor
jmp
mov
movsb
les
jl
pop
lods
test
and
js
push
xchg
std
gs
mov
sti
nop
push
adc
sbb
jb
jp
es
mov
push
jmp
aad
inc
sbb
mov
popa
fdivs
mov
int3
pushf
scas
loop
iret
stc
shl
mov
out
imul
or
inc
sbb
mov
inc
sahf
gs
fstps
mov
and
iret
fistl
cli
mov
inc
subl
addb
ss
dec
add
arpl
xchg
mov
jle
or
insl
in
outsb
loop
push
or
in
pop
insb
jecxz
aaa
pop
inc
popa
lock
test
xor
add
pop
jns
inc
mov
les
addr16
scas
cmp
push
addb
cmc
pop
cmp
nop
push
sub
fisttpll
mov
das
repz
inc
or
pusha
mov
pop
test
adc
mov
mov
fstpl
sti
aam
mov
imul
cs
mov
and
out
sub
sub
lds
jge
push
lea
add
jle
js
maxps
add
xor
repz
repz
div
mov
sbb
or
cmpsl
fs
xchg
push
pushf
and
jno
add
arpl
adc
lret
mov
out
addr16
in
sarl
adc
add
xchg
jb
cmp
shl
and
mov
pushf
jo
adc
scas
mov
xor
fdivs
sbb
iret
xlat
mov
out
cmp
push
xchg
push
test
mov
or
cmp
sbb
xor
add
sub
mov
ret
rorl
jo
jo
shr
pop
push
inc
test
sbb
sub
jo
out
add
cmp
cmp
sub
adc
adc
mov
xor
fwait
gs
clc
lret
inc
int
insb
xchg
call
jge
xchg
fnstenv
pop
dec
cmpb
xchg
cld
push
ja
adc
dec
cmp
lahf
sbb
sub
rolb
mov
jecxz
jmp
test
nop
dec
xchg
mov
rcll
jle
call
sarl
aas
xchg
or
cmpsb
adcb
sbb
xlat
nop
mov
nop
je
and
fcom
lea
mov
cmp
cmpxchg
jb
jno
or
ss
mov
fiaddl
xor
in
push
push
cmpsb
clc
clc
xchg
jne
out
fsubs
xchg
fcmove
mov
aad
push
addr16
jecxz
aas
loop
out
inc
sub
dec
pop
fnsave
sub
lret
jle
lcall
sbb
fdivr
ja
and
mov
sahf
jmp
insl
in
sahf
insl
jne
rol
mov
je
fidivs
mov
adc
xlat
or
cmc
cmpsl
fsubs
aad
stc
insb
lods
mov
ja
sbb
push
jne
cli
popa
inc
push
cmp
test
je
mov
roll
xchg
xchg
andl
mov
fists
movsb
inc
loop
xchg
jae
inc
inc
lcall
mov
cmpsb
sbb
lds
insb
mov
push
ret
pusha
enter
shll
out
fwait
sahf
jmp
pop
lahf
push
out
xor
stos
dec
mov
cmpsb
into
or
cmpsb
xchg
inc
xchg
aaa
mov
dec
cmp
leave
pusha
fmuls
pop
mov
mov
bound
cmp
mov
inc
into
into
sub
sarb
test
xor
sub
sub
fcomps
mov
xlat
lods
cmp
out
push
in
les
popf
dec
jo
mov
sbb
ds
or
pmaddwd
test
or
xchg
sub
mov
cmp
jmp
mov
loop
add
jns
fistl
jecxz
push
jle
xchg
sbb
fistpl
lods
nop
xlat
mov
adc
mov
mov
ret
arpl
inc
sti
push
daa
cmp
fldcw
lea
hlt
repnz
add
adc
mov
add
adc
xchg
push
push
pusha
and
shlb
push
lock
repnz
aaa
xchg
lret
or
xchg
ficoml
adc
pop
out
adc
xchg
lcall
dec
std
jmp
mov
dec
adc
fstpt
and
iret
inc
sbb
loopne
add
aas
dec
xchg
into
mov
test
stos
adc
in
ss
jb
test
add
out
sbbb
xchg
int
jl
cmp
cmpsb
test
adc
xlat
add
enter
mov
inc
jbe
lahf
orb
lea
leave
sub
add
cld
insb
pop
sub
stc
hlt
dec
jmp
bound
shl
mulb
mov
jbe
cli
lods
jbe
es
fs
xchg
jnp
sub
rcll
imul
jle
aad
dec
enter
imul
idivl
xlat
cli
sub
int
inc
add
inc
lock
jmp
adc
cs
cmp
mov
movl
jbe
outsb
xchg
jmp
pop
dec
out
shrb
adc
mov
ds
or
sbb
in
hlt
ds
mov
aad
fisttps
sbb
jbe
popf
adc
push
and
pushf
gs
inc
or
xor
mov
cmpsl
xchg
push
popf
hlt
push
and
push
call
push
idivl
ss
mov
loope
xchg
aas
test
mov
popf
lret
arpl
dec
sbb
xor
sub
push
adc
gs
push
jl
fsubrl
lret
int3
lret
mov
inc
arpl
les
jge
std
fists
xchg
xchg
std
and
jmp
fmull
xchg
es
stos
movsb
push
je
inc
fists
test
mov
cmovbe
inc
cltd
shrl
push
jb
cmp
cmp
lahf
out
fadd
out
hlt
and
mov
ja
mov
fwait
xchg
xchg
mull
push
mov
loopne
pop
mov
outsl
enter
roll
jne
fldl
hlt
loopne
inc
xchg
sub
sub
dec
mov
and
aas
loopne
out
int
and
ret
inc
and
gs
fneni(8087
xchg
rcrb
iret
or
sub
mov
fwait
out
lret
rcrb
push
fistl
pusha
mov
or
cwtl
push
sub
cmp
pop
in
mov
repz
mov
sarl
dec
scas
cmp
mov
sub
cld
and
mov
shlb
scas
enter
inc
xchg
mov
jo
pop
insb
movsb
mov
movsl
mov
lea
ljmp
dec
lret
add
push
in
jmp
lcall
mov
into
in
sbb
push
push
xor
or
aas
arpl
push
sbb
cltd
dec
cmpsl
push
pop
test
inc
mov
out
xlat
popa
or
je
jle
inc
and
adc
cmpsb
jne
shlb
dec
push
mov
inc
xor
mov
push
fstpt
or
in
aas
and
fcomps
lock
xchg
movsb
mov
pop
inc
xchg
cmp
shl
jecxz
bswap
into
sbb
icebp
mov
mov
cwtl
cmp
arpl
mov
mov
or
add
or
or
jnp
fisttpll
cmp
jmp
xchg
push
add
pop
mov
ss
jb
cmp
lahf
push
cmp
and
stos
faddl
mov
xchg
gs
call
jae
inc
or
mov
sbb
mov
mov
ficoml
xor
dec
jmp
cld
loop
cmp
xchg
icebp
xchg
loopne
les
lret
ficoml
and
cld
sub
cmpsl
sub
mov
aam
xor
inc
sbb
shll
fmuls
add
pop
sub
dec
mov
lret
sbb
loopne
mov
dec
int3
in
cmc
repnz
je
lret
inc
les
jge
push
mov
push
mov
xchg
adc
fildll
fdivs
pop
xchg
arpl
in
das
xor
or
aam
mov
repz
stos
push
mov
fimuls
lcall
xlat
cwtl
inc
lret
jne
mov
push
out
cmp
adc
add
jmp
scas
icebp
sbb
pop
mov
ret
arpl
iret
sar
sahf
cltd
int3
in
xchg
and
fnsave
bt
js
test
mov
out
aaa
mov
push
pop
and
cmpsl
js
jae
sti
test
mov
add
hlt
add
and
fmuls
outsb
inc
jb,pt
icebp
mov
sub
sti
int
jmp
dec
inc
inc
cmp
test
stos
jle
stos
mov
clc
add
mov
sub
int
cli
xor
ss
in
jnp
ret
xchg
pusha
xchg
lahf
and
jne
arpl
imul
push
push
out
aam
sbb
je
and
xchg
sarb
xchg
shl
icebp
mov
xchg
jbe
dec
or
add
mov
xchg
cmc
leave
lea
push
push
xor
mov
test
leave
ja
out
and
fidivl
sub
push
xor
mov
xchg
in
jge
mov
ret
xchg
or
imul
mov
mov
add
push
out
lea
dec
xor
cld
sbb
mov
mov
mov
scas
decb
xor
adc
imul
aam
pop
test
adc
hlt
xor
lods
jb
xor
mov
daa
js
test
push
dec
shrl
cltd
leave
div
daa
adc
vmovaps
in
icebp
les
rorl
or
ds
push
jl
or
sbb
shrb
mov
sub
pusha
xor
mov
punpckhbw
or
iret
sub
or
stos
xor
clc
jae
adc
jae
xchg
add
mov
xlat
lret
or
arpl
cmc
pushw
push
nop
jb
pop
test
in
out
xchg
into
ss
pop
fldl
stc
fs
insb
mov
jl
pop
push
cmp
add
test
push
ffreep
fs
cmpsb
push
jns
sub
sbb
adc
out
sti
xchg
inc
shl
pop
push
roll
xorl
lock
lods
xchg
fisubs
and
idivb
out
jecxz
pop
jg
xor
sub
cmpsl
repnz
inc
dec
in
or
push
adc
aas
dec
lds
xlat
cs
xchg
fdiv
add
xchg
add
push
jle
pop
aas
sub
fists
jbe
fst
mov
inc
mov
movsb
out
jecxz
data16
cmpsb
ljmp
bound
fld
in
pop
jne
xor
jae
aad
sbb
dec
ret
add
cltd
inc
aam
fstps
pop
xor
ja
fistpll
lcall
mov
jno
stc
cmp
ss
sub
sub
ljmp
popa
mov
push
out
xchg
sub
push
sub
push
push
daa
das
test
adc
loop
lcall
dec
mov
or
dec
and
test
push
jle
fwait
adc
ret
inc
inc
in
xchg
add
jb
dec
xchg
bound
and
cmpsb
dec
lcall
jle
jecxz
ljmp
push
xor
pop
mov
es
push
std
test
xchg
sub
inc
cmp
into
adc
jae
dec
cltd
in
add
adc
mov
jmp
test
int
sahf
or
lret
insb
mov
add
dec
add
fs
push
push
addr16
xlat
ret
pushf
das
or
pop
mov
fimuls
mov
jmp
jp
aas
pop
incl
adc
or
call
je
mov
stos
pop
jg
and
repz
test
mov
stos
insb
or
outsb
repnz
pop
outsl
enter
loop
rorl
adc
loope
jne
mov
xor
lock
cld
rolb
xchg
std
cmpsb
lock
and
adc
arpl
and
inc
das
lcall
cwtl
inc
xor
add
jb
push
call
pop
push
dec
ret
adc
jo
adc
idivb
pop
inc
nop
pop
ljmp
xchg
cs
shlb
jo
adc
bound
test
loopne
data16
es
mov
jle
mov
ja
ret
out
pushf
cmp
mov
sub
and
loope
bound
pop
repnz
repz
gs
or
pop
dec
jle
mov
fistpll
in
inc
lahf
mov
xor
test
cltd
rcrb
or
lods
test
mov
push
mov
mov
insl
jns
xchg
lock
imul
pop
jnp
sti
icebp
cmp
pop
push
or
and
mov
push
xchg
cmp
cmp
int3
insb
xor
push
mov
ss
fdivs
push
cs
subb
subb
orb
mov
rorb
ljmp
jne
sbb
jae
ret
loope
sub
jno
pop
mov
movsl
jge
jo
out
or
daa
inc
movsl
pop
sti
lcall
call
in
jns
sbb
pushf
js
and
jecxz
adc
into
dec
imul
pop
jg
adc
daa
fisttpll
jle
pop
push
push
pop
xor
nop
jg
mov
mov
outsb
add
adcl
aad
mov
iret
mov
add
enter
adc
pusha
stos
ret
push
test
dec
mov
mov
ss
lods
jp
sarl
xchg
not
sub
aaa
cmc
test
fistl
std
cli
arpl
sahf
dec
mov
or
adc
adc
push
sub
sbb
mov
movsb
jbe
in
mov
add
sub
in
shrb
mov
rcl
jae
mov
repz
addr16
mov
test
shll
pushf
rorl
shlb
jns
nop
mov
jmp
sbb
js
in
dec
inc
test
mov
push
mov
loope
sbb
dec
arpl
mov
xlat
ljmp
icebp
testb
mov
cmp
xor
testb
andl
xor
dec
icebp
daa
aas
fsts
rcrl
mov
cmpb
in
dec
fcoml
sub
inc
lock
std
sbb
push
int3
mov
sub
jg
add
push
mov
jl
push
fmull
in
jno
int3
add
dec
jg
iret
int3
add
repnz
push
pop
js
std
pop
stos
xor
aad
jnp
sub
and
adc
subb
in
shl
inc
mov
cmp
js
ffreep
mov
sti
mov
call
lret
cmp
mov
in
pop
iret
rclb
dec
sub
mov
push
dec
popf
mov
mov
fcompl
adc
lods
scas
call
or
and
push
push
ja
fdivr
adc
in
jnp
repnz
xor
sbbb
or
jbe
jns
inc
rcll
divl
pusha
loop
jns
movsl
addr16
lret
mov
mov
and
lahf
mov
add
or
or
loop
lea
out
cmp
or
add
push
in
add
ret
push
call
sub
dec
and
and
fistpl
andl
call
cmp
movsl
outsl
fisubrl
orb
lods
pop
test
jg
or
mov
sarb
push
jmp
mov
mov
insb
out
hlt
cmp
and
push
stos
xchg
mov
outsb
rol
into
jb
dec
out
daa
lret
lods
lahf
jg
inc
inc
inc
xchg
scas
in
jl
fdivs
sbb
stc
mov
xchg
jg
mov
mov
cs
cmp
dec
shrl
push
cs
push
into
mov
dec
popa
cmp
fisubs
jns
push
std
aam
inc
pop
xchg
std
sarl
jg
cmp
xlat
loop
push
sbbb
sbb
mov
ljmp
fwait
push
ret
jge
push
or
mov
aam
dec
dec
sarl
mov
push
jp
aaa
bound
mov
add
jp
std
push
gs
or
xor
test
in
inc
std
movsl
mov
push
add
test
imul
jb
pop
xchg
jmp
adc
aam
or
dec
rcr
int
push
xchg
xchg
add
arpl
pop
enter
mov
mov
out
sarb
mov
sbb
or
dec
cmpsb
cli
jge
and
push
or
pop
dec
xchg
xlat
xor
subl
push
jle
iret
sbb
jnp
popf
jp
mov
xchg
in
jg
jae
jno
cmp
or
stc
fistps
pop
jmp
ret
data16
cmpsl
mov
pop
mov
add
fbstp
mov
sbb
cmpsl
add
cmp
xchg
push
je
test
jns
test
cmpsl
mov
or
fdivrl
cltd
dec
cltd
push
pop
add
push
lods
ret
sub
mov
xor
jbe
sbb
rolb
push
sub
int3
nop
sbb
fstps
fimull
lock
adcl
xchg
outsl
push
xchg
sub
inc
jmp
lea
adc
enter
stos
mov
fnstcw
in
cmp
stc
mov
sbb
xchg
inc
fs
div
jo
ret
bound
mov
ja
pop
test
mov
adc
mov
jnp
cmp
mov
adc
sti
xchg
sbb
pop
int3
xor
jmp
mov
lods
sub
xchg
icebp
mov
mov
popa
movsl
ja
mov
mov
sbb
push
dec
ja
dec
enter
xor
and
cmp
movsb
pop
add
int
ret
test
scas
les
jmp
shrl
arpl
pop
mov
pushf
repz
imul
dec
sbb
adc
dec
mov
data16
aas
mov
cmp
js
xor
sti
stc
stos
jle
xor
arpl
mov
in
mov
cmp
inc
push
scas
insb
test
and
pop
cmpsl
mov
push
mov
lahf
add
pop
leave
sahf
es
subb
mov
mov
ret
bswap
push
repz
jo
iret
lret
and
stc
sbb
enter
gs
xor
xchg
push
push
adc
inc
or
mov
push
sbb
sub
repnz
pop
mov
adc
mov
enter
mov
xor
fbstp
sbb
ja
clc
inc
dec
loop
sub
lcall
in
imul
stos
mov
jbe
and
out
loop
icebp
cltd
cmp
add
insb
pop
xor
test
dec
or
les
adc
and
push
push
pushf
movsb
in
ret
enter
adc
jo
push
sbb
insl
fwait
xor
out
mov
ljmp
xchg
test
cs
cmp
lods
mov
or
movsb
xlat
inc
in
inc
test
in
lds
cmp
push
nop
clc
xchg
fcoml
cmp
pop
mov
mov
addl
mov
push
sub
inc
arpl
insl
icebp
mov
xchg
xor
test
xor
sub
popf
lahf
lods
ja
gs
loop
filds
xchg
push
roll
mov
stos
mov
lods
ret
jmp
sahf
or
mov
pop
enter
ljmp
sbb
incb
pop
dec
jno
dec
cmp
mov
xchg
je
or
push
cld
ds
test
lahf
or
es
insl
loope
fistps
push
or
jecxz
test
pop
int
out
push
daa
cld
add
sbb
push
inc
jle
stos
cmp
andl
mov
inc
movsb
mov
iret
xor
xchg
add
cs
ds
lret
outsb
and
mov
sbb
or
xchg
aas
cmpsb
adc
mov
mov
push
lds
jmp
sbb
cli
sub
lds
jl
fildl
dec
adc
lea
and
loope
clc
test
pop
arpl
sub
mov
push
sbb
and
mov
sahf
lock
movsb
loope
cmc
xor
dec
lods
jnp
sub
lods
or
add
out
daa
jecxz
pop
dec
inc
shl
lock
inc
shrb
jnp
mov
dec
mov
push
and
add
fcoml
rcrb
loop
pop
mov
mov
xor
cs
lods
test
into
fs
subb
mov
lods
inc
lret
jl
outsl
cmpl
cmpsb
mov
les
lock
adc
lods
sti
mov
ret
mov
popf
aam
loope
mov
gs
cli
rorb
mov
dec
es
movsb
lods
jge
pop
jl
mov
sub
push
jge
jae
mov
adc
rcrb
into
cmp
mov
popa
int
pop
daa
ffree
repz
rorl
jno
and
sub
pop
ss
pop
lcall
lahf
stos
xor
mov
xor
mov
pop
fildl
mov
jg
cmp
cld
stos
inc
scas
decl
pop
mov
movb
jecxz
pop
in
cmpsb
pop
popa
and
inc
add
iret
or
jne
inc
lods
enter
add
dec
fistpll
mov
scas
hlt
mov
push
mov
pop
femms
and
xlat
pop
sub
divl
shl
pushf
sub
cld
add
xor
mov
inc
sub
cli
sbb
cmp
xchg
in
movsl
mov
adc
push
scas
shl
xchg
mov
rol
xchg
rcr
in
adc
xchg
pop
test
outsl
add
cli
dec
dec
rorl
js
or
sbb
mov
decl
imulb
popf
loope
inc
test
sbb
pop
nop
adc
push
adc
adc
dec
loopne
cltd
and
mov
divb
xor
and
out
jecxz
inc
mov
mov
mov
jae
cmc
cli
xchg
jnp
sarb
push
pop
push
inc
fildll
lods
sar
or
frstpm(287
and
dec
adc
test
push
sti
xchg
cmp
fistpll
or
xor
jle
dec
scas
xor
lods
dec
in
jle
cld
mov
pop
sub
stos
jne
mov
xor
cmpsb
push
add
inc
or
int3
xor
fldl
adc
int
dec
ja
cld
mov
test
and
adc
fwait
enter
or
and
xchg
mov
push
push
adc
xchg
fidivs
jl
fcompl
shr
add
sub
dec
adc
cmp
dec
or
inc
insl
xchg
int
xor
sbb
xor
insb
or
cs
push
das
test
or
repz
sbb
mov
movsl
cwtl
mov
bound
push
push
adc
jbe
mov
nop
cmp
mov
adc
cwtl
xchg
call
fnsave
pop
or
or
inc
cmc
fiadds
mov
push
cmp
pop
ljmp
cli
fs
subb
add
jecxz
or
cmpsb
scas
repnz
xor
insb
pop
fcoml
jecxz
jmp
out
in
mov
dec
add
arpl
add
enter
ret
xchg
pop
or
and
lds
iret
int
inc
cmp
loope
mov
cmp
push
pop
add
and
sbb
jl
stos
cld
pop
pop
ss
test
jg
dec
arpl
add
aam
movsl
jmp
or
outsb
out
push
arpl
push
std
ficoms
pop
pop
push
stc
sub
sbb
inc
cmpsl
ja
push
push
jp
jae
aaa
xor
xchg
pusha
jle
popf
stos
xchg
mov
cmp
sbb
adc
rcrl
adc
data16
jns
sbb
pop
mov
push
mov
dec
push
push
mov
adc
call
fwait
test
push
loop
push
push
shr
sbb
out
push
adcb
std
and
mov
in
mov
out
ss
sub
test
sbb
inc
add
aam
daa
lret
xor
mov
popf
mov
sahf
scas
stos
inc
mov
sbb
fisttpl
push
iret
and
outsl
shrl
lock
sti
jb
mov
mov
test
add
rol
mov
fnstsw
pushf
scas
inc
mov
call
mov
fmul
and
jmp
mov
or
inc
fldt
mov
push
jne
jmp
jl
cltd
testb
xchg
mov
dec
dec
sbb
and
lret
or
xor
inc
adc
cmc
insb
dec
mov
std
ret
lret
cmp
jl
fnstsw
aaa
rcrl
pushl
cmpsb
pushl
push
cld
dec
pop
rolb
call
inc
cmpsb
adc
ja
push
shll
shll
hlt
cmp
and
mov
xchg
dec
xchg
aaa
mov
push
iret
imul
mov
and
pop
push
inc
fisubl
cmp
daa
arpl
ss
in
adc
testl
xchg
ss
sbb
nop
pop
sti
in
fsubrl
add
adc
cld
inc
fimuls
mov
mov
lcall
or
in
loop
movl
and
xchg
lods
mov
pushl
cmp
xor
xor
jno
sahf
sbbl
xchg
js
xchg
xchg
mov
pop
mov
in
leave
jmp
pop
mov
jmp
int
xchg
pop
or
pop
jbe
mov
jle
sarl
pop
push
adc
or
xchg
ret
jae
sbb
aam
xchg
in
adc
cmp
cmc
push
stos
fdivl
xchg
xor
jbe
mov
rol
inc
in
int3
mov
mov
push
xchg
jp
testl
imul
aam
pushf
mov
jo
rcrb
and
dec
add
dec
ds
stos
mov
imul
jle
in
dec
pushf
add
filds
repz
sbb
addr16
arpl
mov
mov
out
push
stos
mov
xor
pushf
fldl
out
mov
and
push
jp
xchg
int
das
cmp
arpl
and
mov
mov
rcl
sub
lret
xlat
push
je
mov
les
jecxz
scas
daa
fst
and
bound
and
sub
enter
push
lock
add
mov
pop
sahf
inc
add
mov
or
jnp
xlat
int3
in
xor
push
mov
pusha
sbb
or
into
nop
push
insl
xchg
out
imul
xchg
ljmp
add
shll
subl
jne
push
sbb
jb
cld
push
in
pop
dec
lods
mov
jo
arpl
dec
imul
cmpsl
or
dec
cmp
mov
idivb
push
xchg
ja
test
sbb
mov
jge
dec
dec
sub
or
inc
test
repnz
cmpsb
dec
inc
push
pop
test
pop
xor
mov
rcr
cli
xlat
sbb
aas
jo
sbbl
jae
cmpsb
movsl
gs
mov
push
mov
leave
outsl
jge
push
aam
inc
inc
mov
mov
adc
jecxz
pop
pusha
mov
sub
push
stos
dec
or
adc
mov
gs
leave
js
cmp
ds
inc
adc
stc
fstpt
sbb
nop
add
outsb
stos
ljmp
lahf
pushf
jg
or
mov
jecxz
test
or
sti
repz
cmp
cwtl
jns
rclb
mov
sub
js
push
cmpsl
fcoms
fdivl
push
div
sbb
adc
inc
fmull
fs
mov
mov
punpcklbw
xchg
mov
test
pop
add
jg
lock
pop
xor
sbb
sbb
add
cli
das
push
cld
push
repz
mov
sbb
push
shrb
and
mov
dec
mov
or
mov
aad
scas
mov
repnz
cmp
adc
ja
enter
or
cltd
divl
sarl
xchg
lahf
jp
pusha
cmpsb
cmp
or
stos
pop
adc
mov
fwait
jmp
ss
testl
xchg
cli
sbb
aam
movsl
pop
shll
in
xor
pop
push
or
call
xchg
xchg
and
stos
jmp
call
fsubrs
mov
xchg
mov
jge
les
subb
or
and
dec
hlt
adc
mov
call
xchg
mov
ret
mov
rolb
mov
movnti
push
subb
rcll
jle
mov
mov
lds
jle
icebp
fstpt
clc
loop
pop
aaa
les
or
loope
iret
and
jg
xchg
xchg
jecxz
out
add
xor
mov
pop
or
out
repnz
fisttps
les
lock
jmp
push
xchg
cltd
insl
dec
xlat
mov
mov
jns
popf
das
rcl
inc
out
pop
adc
sahf
aad
push
mov
insb
aam
sub
adc
xchg
lea
and
xorl
mov
stos
jb
pop
sub
lahf
or
adc
mov
push
cmp
scas
int3
jns
cmp
fcmovnbe
loopne
loope
push
xlat
mov
in
stos
or
das
cmp
and
daa
cmp
mov
out
sub
adc
cmp
pop
and
sub
mov
pop
inc
cmp
push
inc
xlat
xchg
sbb
jne
lret
mov
mov
nop
lock
les
sarb
push
push
jo
out
repnz
enter
iret
out
inc
adc
add
enter
cmpsl
pop
andb
or
pop
sbb
lret
sti
out
pop
dec
fldl
dec
adc
cli
and
pop
outsb
jle
aam
and
mov
ds
out
and
mov
inc
fimuls
in
mov
cmpsb
push
adc
icebp
push
sbb
and
xchg
and
xor
rcrb
dec
pop
pop
out
xchg
push
mov
jo
test
mov
push
in
jp
pop
or
loop
sti
bnd
and
in
stos
cli
mov
pop
lods
int
jbe
inc
je
add
icebp
roll
dec
je
cmp
push
push
jecxz
sbb
pop
sarl
mov
sbb
xor
icebp
imul
mov
ret
cmovp
pop
adc
clc
sbb
pop
sub
xchg
iret
dec
dec
push
in
mov
cli
rorb
fwait
push
je
jbe
pop
pop
sub
in
mov
addr16
shl
cmpsb
shll
add
jno
xchg
or
sub
sub
xchg
sub
sub
sar
sarl
clc
lret
inc
lods
fdivl
fs
mov
loope
push
fsubrl
push
sub
in
sbb
push
cmp
and
sub
andnps
aam
jp
sbb
cmp
addr16
pushf
stos
push
insl
test
aas
or
jo
add
jae
sub
pop
test
mov
xchg
fs
out
pop
dec
or
inc
ljmp
jge
mov
clc
shlb
shl
xchg
scas
mov
repz
adc
sbb
add
mov
dec
aad
scas
push
xor
or
scas
adc
popf
or
mov
mov
in
stc
rolb
faddl
pop
mov
jb
xchg
mov
mov
cmpsb
xchg
mov
mov
je
adc
in
repz
mov
jge
call
insb
or
push
stos
pop
je
out
out
adc
sarl
push
or
fcomi
lea
and
xchg
andb
sub
repnz
fdivrl
inc
imul
mov
adc
push
hlt
inc
je
push
cmp
jmp
fsubrs
jmp
aad
ret
mov
push
rcrl
mov
sbb
xor
into
jo
sbb
push
push
outsb
jb
lret
add
or
jle
int3
xchg
lods
add
cli
repz
sub
insl
or
pop
mov
aas
daa
or
push
xchg
xor
mov
ficoms
cmp
xor
push
mov
sub
push
push
push
pop
repnz
sbb
loopne
mov
xlat
push
aam
rcr
rclb
clc
negb
addb
pop
cld
push
or
inc
lods
push
aaa
and
ds
std
and
push
iret
inc
add
mov
jno
int3
adc
movb
push
mov
shlb
and
pop
xchg
popl
xchg
add
rorb
jp
popa
dec
xchg
jle
and
pop
add
jmp
push
mov
jmp
mov
movsbl
int3
repnz
jl
iret
aam
mov
cmpsb
daa
mov
jmp
test
aad
popf
add
imul
out
cmp
mov
fdivrp
sub
lahf
in
bound
push
fsts
xchg
hlt
jo
lods
or
sub
inc
push
into
lret
jne
sahf
cmpsl
push
pop
in
out
mov
imul
pop
iret
imull
iret
cmpsl
inc
loope
mov
sbbl
sub
mov
stos
pop
arpl
shrl
xlat
ss
ss
loopne
mov
push
xchg
inc
mov
in
inc
push
or
into
test
lcall
nop
in
inc
or
jecxz
aaa
push
and
or
fbld
or
sbb
iret
xchg
xor
in
push
cmpsb
out
sub
scas
sub
push
xchg
mov
das
push
jmp
adc
ficoms
or
ss
pop
mov
mov
inc
stos
mov
dec
jecxz
jecxz
stos
jg
inc
sbbb
fstps
cmp
das
inc
popf
xchg
xchg
data16
mov
mov
pop
cmpsl
int
xlat
and
psubusw
cld
mov
xor
gs
xchg
push
mov
nop
dec
adc
sbb
fimuls
sbbl
mov
pop
pcmpeqw
jb
add
xchg
or
inc
gs
push
mov
jno
iret
pop
lods
addl
mov
daa
or
xchg
pusha
in
shlb
call
add
adc
xchg
repz
inc
mov
imul
cmpsb
rcrb
bound
sub
or
pop
out
out
mov
jp
xor
lock
cli
nop
mov
sahf
xor
je
test
outsl
adc
inc
fcomps
xchg
dec
adc
mov
pop
xchg
dec
mov
rcll
mov
or
pusha
xor
pusha
pop
jbe
popf
mov
roll
es
add
repz
mov
cmp
shld
or
mov
mov
sbb
inc
mov
add
push
int3
data16
pop
insb
mov
fisttpll
sub
and
push
jmp
inc
test
hlt
jb
adc
rorb
and
pusha
test
fisttpl
in
outsl
movsl
sub
sub
cmpsb
and
add
sbb
dec
rcll
test
mov
cmp
out
popf
mov
mov
push
fcmovbe
insl
sbb
sahf
jge
or
jns
les
bound
jl
lahf
xchg
gs
stos
lock
cmp
push
insl
loope
sbb
mov
jbe
pop
test
pop
hlt
and
mov
test
adc
mov
mov
neg
insb
sahf
stos
call
cmp
or
jmp
add
xchg
cmc
jmp
out
xlat
sarb
jbe
push
mov
push
out
and
negb
dec
jle
daa
test
xor
inc
popf
and
leave
rclb
mov
faddp
xor
and
jns
movsl
xchg
ret
dec
aam
jp
movsl
outsl
cmpsl
push
jne
call
call
gs
out
daa
js
cmp
lods
fimull
shlb
push
push
cmpsl
std
sahf
push
jbe
in
daa
fwait
rcl
dec
xor
cmp
jl
jecxz
nop
ret
lcall
or
dec
das
cs
mov
and
pushw
mov
hlt
pusha
adc
push
or
outsl
mov
and
fbstp
iret
cld
sbb
add
push
aaa
sarl
and
addr16
rclb
pcmpeqb
fwait
outsl
out
or
sbb
out
jne
testl
lock
xchg
notl
mov
dec
cwtl
fs
popa
pop
sub
inc
xchg
pop
int
push
shl
mov
aaa
es
mov
mov
or
and
xchg
push
aam
cmp
push
cmc
pcmpgtb
push
dec
lds
dec
cli
mov
fst
xor
mov
xchg
cld
jl
shlb
in
adc
pushf
scas
mov
jb
lret
outsl
jp
ss
push
mov
mov
cmp
frstor
test
aad
xor
orl
rcr
xchg
xchg
ljmp
xor
sub
push
popf
xchg
daa
out
out
scas
sahf
fstpt
or
jbe
adc
xorl
push
xchg
xchg
bound
decl
pop
cmp
mov
xlat
pop
repz
xorb
push
mov
repz
out
inc
imul
lret
scas
adc
cmp
jnp
push
mov
test
adc
out
insl
fs
push
in
mov
jge
xor
fsts
push
xchg
dec
pop
mov
int
adc
xor
setbe
xchg
dec
or
out
pop
inc
ficompl
rcll
mov
cmovae
lods
sub
in
mov
jb
mov
or
js
push
fcomp
popf
cli
mov
jno
nop
aaa
dec
lret
aam
mov
sbb
lahf
ja
dec
mov
adc
ljmp
cmp
sbb
int
mov
fnstsw
cmp
mov
rorl
cmpsl
and
lahf
push
push
sbb
imull
inc
push
lret
stc
sbb
cmpsl
xlat
ffreep
mov
and
or
sub
jb
shll
lock
icebp
adcl
and
pop
aad
mov
test
mov
pop
js
push
gs
xlat
or
mov
cmp
bound
or
cmc
jne
mov
orb
scas
pop
fmuls
aas
jo
inc
call
mov
mov
pop
lret
cltd
fcmove
mov
sub
loopne
jns
mov
sbbb
xor
push
sub
ret
jae
or
add
js
add
imul
pop
fildl
jmp
mov
int
mov
inc
push
sbb
push
fiadds
sbb
mov
jg
jbe
shr
sbb
jbe
adc
adc
xor
rcl
pop
cmpsl
mov
or
pop
sbb
fwait
jge
inc
xchg
fistps
jg
sbb
popf
mov
out
clc
cmp
and
adc
sub
mov
into
addb
out
daa
rorb
ret
outsb
add
inc
mov
inc
mov
xorb
push
ljmp
pop
testb
shlb
adc
pop
dec
or
mov
push
fcoms
stc
jo
clc
mov
push
or
cmp
sub
add
dec
ljmp
xchg
mov
mov
mov
rolb
sbb
mov
mov
or
sub
rclb
lahf
pop
das
xchg
ds
jle
cmpsb
sub
xchg
jbe
jo
stos
pop
jno
ljmp
into
dec
jb
outsb
data16
dec
dec
mov
popa
sub
in
pop
scas
xchg
insl
cmp
ljmp
fstl
mov
test
imul
jb
and
mov
sub
mov
dec
les
push
pop
nop
and
gs
adc
imul
cmp
ret
xchg
push
repz
push
or
xchg
mov
iret
sbb
cmpsl
xor
imul
in
mov
adc
push
push
mulb
pop
es
ss
mov
inc
sbb
xor
cld
sub
stc
outsb
pop
jb
lds
loop
cmc
and
pop
jne
sub
dec
sar
ret
data16
and
fisubl
push
jne
call
sub
fs
outsb
pop
mov
daa
andb
fisubrl
adc
jbe
fildl
xlat
rcr
out
pusha
or
add
and
fcmovu
ret
jle
add
imul
jl
dec
xor
fisttps
dec
mov
pop
test
cwtl
mov
aad
jbe
adc
cmp
sub
rorb
push
inc
sub
dec
fwait
clc
addl
sub
outsl
rclb
lods
and
mov
xchg
pop
rcr
adc
lahf
pop
xlat
or
add
add
inc
xchg
imul
push
push
insl
out
xchg
sub
icebp
push
adcl
popa
and
adc
lea
stc
daa
bound
fwait
mov
dec
mov
lods
dec
bound
enter
adc
lock
jo
inc
xchg
inc
sbb
je
call
das
shl
dec
mov
mov
jo
xchg
inc
std
outsl
add
cltd
and
enter
popf
sbb
jp
adc
orb
pop
inc
rcrl
idivl
lcall
pop
inc
pop
mov
loopne
cmc
inc
adc
leave
es
pop
inc
test
sbb
mov
xchg
insb
in
mov
repnz
lock
fsubs
iret
inc
mov
scas
or
mov
mov
push
enter
xchg
rcl
sbb
mov
xor
or
jbe
ret
cwtl
scas
repnz
mov
sub
or
arpl
jb
adc
flds
jmp
scas
fists
cld
test
pop
inc
enter
jns
push
insl
push
lds
cmpsb
mov
repz
and
insb
enter
sub
push
xor
lods
xor
mov
out
push
push
adc
in
push
sub
pop
adc
aam
jnp
movsb
fisttpl
stos
inc
imul
dec
js
jl
and
add
test
rcrb
int
dec
dec
leave
xor
sti
rcll
add
bound
hlt
enter
jnp
cmp
inc
ljmp
mov
call
testl
push
jp
mov
andb
or
sub
sub
cmp
js
stos
fists
push
jnp
cmp
dec
xor
std
rclb
mov
rorb
sub
mov
jne
out
mov
dec
les
add
ret
jecxz
or
cld
shll
and
xor
xor
dec
lock
xchg
sub
jae
lea
push
sbbw
mov
aam
pop
aad
lahf
sbb
xor
sub
cmp
fistpll
xchg
lods
es
lea
clc
jae
insl
gs
add
in
jl
xchg
icebp
xchg
inc
mov
test
shll
pushf
outsl
std
and
sbb
push
xchg
add
or
mov
test
adc
sbb
xchg
jns
cmp
in
fchs
outsl
sbb
loopne
cmp
aam
add
gs
cmpsb
xor
mov
ja
adc
push
xchg
scas
cwtl
stc
jmp
sti
mov
mov
lods
xchg
jl
or
lds
imul
mov
ret
and
iret
dec
inc
in
jmp
pop
xchg
dec
test
icebp
fldt
mov
xor
push
cmp
out
jg
mov
imul
mov
stos
cmp
mov
aam
stos
push
sub
mov
pop
xchg
sub
xor
mov
insb
and
cmp
loope
in
addr16
jge
and
cmp
push
test
bound
xchg
cmp
adc
fnstcw
dec
mov
jns
mov
ret
xchg
clc
mov
outsl
sbb
xor
mov
dec
sbb
lods
loopne
hlt
cmp
push
test
stc
es
sarl
cmp
pop
stc
xchg
mov
add
add
nop
scas
push
aam
outsl
out
shrl
push
mov
notl
movsl
mov
xchg
mov
bound
pop
mov
add
xor
cs
dec
in
je
shl
pop
inc
mov
pop
shrl
inc
inc
push
sbb
push
imul
xchg
enter
jmp
ret
cwtl
inc
xor
push
hlt
sub
out
cmp
fildll
mov
lahf
xchg
sti
mov
xor
in
imul
sbb
dec
mov
adc
int
rorb
pop
loop
popa
pushf
in
jns
xlat
mov
dec
inc
xchg
jne,pt
inc
and
sbb
std
jo
adc
xlat
mov
dec
cs
incb
inc
push
or
fdivrl
in
mov
enter
nop
mov
cmp
cwtl
popa
push
adc
inc
test
cmp
inc
push
mov
orb
out
or
andl
stos
popf
lea
fdivrs
test
sub
sbb
and
inc
mov
mov
scas
adc
jmp
adc
aam
push
outsl
fnstcw
xchg
push
rorb
mov
lret
insb
lock
jl
out
insl
js
mov
sbb
je
scas
add
insl
rclb
je
mov
and
cltd
inc
add
aam
sbb
test
mov
ja
xchg
or
gs
repz
add
pushf
adc
int3
repz
mov
ret
cltd
scas
adc
lods
cmpsb
jae
cs
xchg
dec
out
and
dec
cmp
dec
lods
xchg
jo
out
sub
mov
test
fdivl
xor
xor
jge
inc
js
dec
popf
shll
test
dec
movsl
cmc
call
shll
dec
push
pusha
xor
mov
and
add
inc
xchg
ja
andb
mov
xchg
mov
jmp
rorl
aad
xlat
ret
jae
hlt
mov
mov
scas
sub
mov
test
dec
imul
lds
mov
movsb
icebp
dec
xor
fucomi
nop
jo
and
xchg
in
in
xor
or
mov
popa
shll
es
add
imul
or
push
dec
les
sarl
fucom
mov
xlat
push
movsl
pushf
cmp
mov
push
sub
aad
subb
dec
lahf
jmp
scas
xor
fld1
mov
ja
mov
adc
sbb
and
add
sbb
jmp
mov
scas
imul
out
imul
mov
pop
xor
or
xor
cltd
jae
loop
scas
and
sbb
and
insb
ljmp
pop
cld
sub
dec
pop
add
shll
imul
aaa
subb
cmpsb
mul
mov
ja
pop
sub
pop
mov
pop
sub
lahf
enter
jne
ja
xchg
mov
fsubrl
push
inc
cmpb
xchg
nop
sub
sub
clc
lods
insl
jle
cwtl
cli
shlb
sbb
call
fisubs
push
lahf
clc
push
loopne
mov
fisubrl
rcr
xchg
cmp
rcrb
sub
dec
jle
aam
dec
data16
cmpl
dec
pop
push
test
insl
lock
mov
mov
loop
xchg
dec
daa
sahf
jle
and
mov
into
call
jbe
popa
add
mov
daa
sub
sbb
adc
mov
add
mov
mov
test
or
rcrb
sub
lods
pusha
mov
or
adc
jle
mov
adc
and
pop
mov
jnp
addr16
out
pop
pop
sbb
orb
enter
movsb
cwtl
stos
dec
pop
sahf
decb
mov
add
inc
mov
mov
inc
in
adc
stc
pop
sbb
fnstcw
ror
pop
cmpsb
sub
mov
mov
imul
push
and
movsb
das
and
sub
stos
mov
and
cltd
sub
inc
movsl
lret
inc
xor
sbb
pop
out
push
sub
call
inc
push
cld
adc
jecxz
icebp
ds
cmp
es
adc
pop
xchg
lret
xor
in
lods
jb
push
and
sar
in
outsl
inc
mov
adc
mov
mov
push
add
cmp
xor
sub
mov
jmp
fadds
dec
shrb
inc
imul
or
lock
jno
int
cmp
aaa
sub
cmp
jbe
test
movsb
scas
jp
adc
mov
pop
pop
adc
je
fcmovnbe
in
push
mov
int3
rcrl
es
mov
or
dec
outsb
mov
popa
ljmp
add
loopne
les
push
arpl
ret
data16
push
shll
iret
mov
psubq
mov
jnp
and
jb
inc
pop
cltd
icebp
nop
push
lods
fwait
repnz
inc
sahf
adc
and
sbb
test
or
je
mov
push
sbb
dec
repz
xchg
add
inc
sub
incl
push
stos
mov
adc
les
jbe
movsb
dec
sarl
inc
mov
lea
xlat
iret
sub
loop
mov
xor
call
inc
movsb
xchg
data16
xchg
sahf
icebp
push
pop
push
dec
or
or
pop
jl
xchg
rcrl
pop
rol
test
lds
mov
push
decb
cltd
mov
test
mov
jecxz
mov
sub
dec
test
pop
push
jp
mov
xchg
and
shlb
divb
mov
dec
sbb
add
push
rclb
repz
push
hlt
stos
pop
mov
daa
int
mov
mov
pushf
rcll
mov
mov
and
add
mov
ret
sbb
xchg
and
lret
or
stc
xor
cli
sub
test
xchg
push
scas
ficoml
sub
add
xor
sub
dec
mov
cmpsb
cmp
sbb
fs
pop
dec
lods
hlt
inc
xlat
mov
test
and
push
pop
sbb
jmp
sub
out
aaa
jecxz
call
xchg
dec
addr16
mov
and
repnz
xor
add
adc
pop
and
mov
mov
inc
bswap
mov
push
iret
cmpsb
fmull
inc
out
xor
cmpsb
shl
pop
mov
sub
xchg
and
jl
inc
enter
pop
shll
mov
pop
push
and
mov
sar
sbb
mov
mov
addl
xchg
pop
out
cltd
pop
push
cmp
mov
push
fldt
das
jecxz
mov
jnp
daa
add
push
push
test
add
cltd
movsl
movsb
pushf
pop
dec
ss
in
js
je
pop
cld
repz
popf
in
inc
cwtl
mov
sub
pop
loopne
int
mov
jbe
fnstenv
decb
push
cmp
cmp
or
cvtdq2ps
push
adc
mov
out
mov
mov
pushf
gs
xchg
or
cwtl
lods
clc
adc
in
shll
dec
jae
push
and
fwait
stos
loope
rol
mov
dec
repnz
cmpsb
xor
push
jbe
ret
push
icebp
sub
loop
andb
loope
mov
rcrb
aad
mov
cld
imul
and
mov
jo
sbb
inc
add
xor
xchg
push
jnp
ret
scas
lret
enter
in
test
xchg
test
xchg
loopne
sbbb
sbb
dec
mov
sbb
inc
dec
xor
roll
cli
inc
xor
ds
roll
inc
xchg
mov
sbb
cli
mov
sbb
nop
inc
xor
movhps
jl
std
mov
es
lret
ja
loopne
jle
sub
jg
iret
movsb
test
mov
mov
into
mov
mov
mov
sbb
sub
jb
xor
sub
scas
hlt
ss
int3
clc
shlb
call
out
fcoml
inc
jp
add
gs
push
es
sub
push
mov
push
loopne
scas
int3
adc
cmpsl
repz
jns
bound
push
or
pop
add
push
jo
les
pop
xchg
mov
lods
loop
jecxz
sub
imul
mov
mov
mov
jns
push
mov
mov
mov
mov
cmpsl
jbe
cmc
add
mov
pop
fwait
arpl
jecxz
call
insb
inc
cmpsb
sub
outsl
pop
pop
and
mov
dec
sahf
pop
push
cmpsl
adc
jae
pusha
pusha
ljmp
aad
les
fdivr
clc
mov
jno
int
inc
arpl
pop
xchg
bswap
out
stos
cld
aaa
sbb
outsl
repnz
js
push
ret
push
mov
sahf
push
sbb
or
aad
jg
xchg
cli
mov
sub
lods
mov
mov
push
and
mov
aas
int3
inc
mov
pushf
nop
loop
add
imul
jmp
cltd
cmpl
scas
dec
jns
stos
aaa
cmp
jo
and
leave
lcall
fwait
xchg
and
movsl
fidivl
ds
xlat
lret
enter
dec
pop
xor
mov
addb
mov
adc
shrl
pop
and
fcoms
pop
lock
jmp
sub
sbb
jle
out
fadd
mov
cmp
jns
call
lods
es
lds
andb
outsl
rclb
lods
mov
xchg
sbb
dec
push
inc
shll
inc
pop
sub
xor
mov
cmp
orl
arpl
ds
xor
rcrb
jo
out
mov
dec
xor
cwtl
rorb
orl
lret
movsb
or
divb
jae
movsl
inc
movsl
pop
outsl
sbb
fldcw
pop
jbe
dec
and
mov
insl
repz
jne
push
mov
xchg
out
pop
jae
std
mov
jmp
inc
dec
jne
inc
push
ljmp
dec
and
faddp
mov
lea
xchg
add
cld
ror
dec
out
test
adc
dec
or
inc
mov
addr16
popa
lods
pushf
jne
outsb
pop
mov
jge
add
dec
out
pop
stos
push
fs
popf
xchg
adc
icebp
dec
push
sti
stc
sarb
dec
add
push
call
pop
popa
pop
ret
mov
notb
mov
xchg
jmp
lcall
gs
pop
fildll
flds
sarb
inc
std
test
loope
js
out
cld
pop
jle
into
inc
iret
fisttpl
dec
pop
sbb
inc
xor
or
testl
inc
pop
pop
sar
cmc
test
roll
xor
mov
scas
fildl
rorb
cli
imul
sahf
int
iret
push
mov
lahf
shrb
addr16
mov
test
push
out
inc
icebp
xchg
rcrl
jae
push
jle
jo
cmp
and
fisttpl
and
mov
ljmp
pop
add
jle
adc
mov
push
mov
sbb
mov
aaa
fsubrs
test
mov
pop
adc
fisubrs
xchg
repnz
pushf
stos
dec
dec
add
push
sbb
add
hlt
outsl
addw
adc
sub
xor
movsb
jl
stos
sub
lock
mov
jmp
mov
xchg
aad
xchg
pop
cmp
ja
ljmp
sub
dec
fdivrs
sbb
in
push
or
jg
jecxz
pushf
and
xchg
nop
sub
ret
mov
xchg
jg
imul
inc
lret
frstor
rorl
pop
psrld
sbb
mov
lahf
shrl
cmpsl
je
scas
sarb
das
pop
std
mov
imul
sbb
outsl
sbb
loop
pop
lods
idivb
push
ret
pop
mov
sbb
dec
inc
inc
test
xlat
push
mov
xchg
mov
mov
xor
sub
in
xor
jg
push
jno
pop
mov
sub
fstpt
push
adc
fdivp
or
cld
adc
push
xchg
jmp
int
dec
ds
stc
pop
fwait
jecxz
push
gs
inc
xchg
lret
in
mov
out
xchg
mov
mov
cmp
popa
pop
or
lds
sub
loopne
mov
popf
lcall
jecxz
repnz
inc
rolb
mov
and
cwtl
popa
rol
push
inc
iret
aad
pusha
cmpsl
hlt
das
arpl
popa
jl
jge
aaa
sahf
add
sub
mov
xor
adc
push
shll
pushf
in
insb
loop
pop
push
mov
mov
add
pop
pop
imul
jne
xchg
xchg
int
pop
sbb
or
inc
pop
mov
dec
inc
scas
outsl
int3
sbb
jg
dec
push
adc
and
daa
popa
xchg
arpl
roll
dec
pop
pop
jl
cli
movsl
mov
sub
mov
mov
adc
int
jge
call
lods
adcl
dec
out
iret
inc
loopne
xchg
sbb
and
test
adc
fwait
mov
jge
in
stc
test
cmpsb
push
sbbl
pop
push
mov
fdivrs
loopne
cltd
mov
imul
cmp
das
dec
and
adcl
xor
mov
xor
leave
imul
test
adc
mov
adc
mov
rcll
inc
pop
adc
jb
mov
lds
lcall
loop
out
cmp
inc
pop
sbb
fildll
add
in
stos
gs
adc
sub
mov
mov
jae
and
lods
ja
pop
sub
test
cmc
js
and
fsubrs
xchg
sub
lcall
xchg
inc
mov
clc
rcl
out
sub
daa
hlt
in
jne
xchg
add
cmpsb
cmp
jo
push
pop
mov
imul
mov
adc
imul
cwtl
std
outsb
pop
dec
sarl
mov
dec
adc
fcompl
cmp
jmp
pop
in
and
cmp
pop
xchg
cmpsl
mov
movb
xor
fwait
in
ds
int
imul
dec
test
rcrb
sbb
push
mov
inc
fdivl
mov
xchg
imulb
ftst
push
rolb
jl
rcrl
ror
inc
loope
dec
gs
in
test
je
pop
mov
dec
jnp
jle
sbb
imul
imul
pop
add
mov
icebp
jge
std
mov
iret
sti
lods
mov
cli
in
ret
arpl
push
lea
push
dec
mov
and
sub
jecxz
mov
lods
add
pop
sub
sub
movsb
int3
sub
mov
mov
cmp
inc
push
rcrb
dec
fistpll
mov
mov
jns
fnsave
ss
loope
lds
scas
test
aam
test
data16
ret
in
cmpsl
std
icebp
and
mov
xchg
inc
stos
jmp
adc
cmpsb
notb
inc
xorl
and
pop
pop
mov
out
xchg
lods
xchg
cmp
dec
shll
or
xchg
stos
into
mov
xchg
inc
cltd
fidivrl
bound
pop
mov
or
in
repnz
iret
add
push
cmp
push
insl
mov
cld
mov
cmp
sub
clc
pop
test
enter
stc
jmp
cmpsl
push
std
jo
mov
and
push
dec
xchg
jle
pop
mov
adc
mov
lods
cmp
std
fucomi
cmp
jnp
cmpb
das
pusha
in
sub
or
dec
sbb
shr
outsl
jp
stos
mov
inc
cmp
nop
aaa
fwait
mov
stos
xor
loope
cli
lock
ret
mov
mov
lock
arpl
outsl
fidivl
lret
lcall
daa
test
lods
adc
movsb
xlat
adc
out
or
sub
std
orb
push
test
jo
cmpl
int
pop
cmpsb
stos
jnp
enter
cmp
lods
inc
jecxz
xchg
inc
adc
mov
leave
xchg
js
call
xor
imul
sbb
mov
aaa
pop
or
outsb
sbb
jle
dec
out
lea
stos
aad
mov
lock
mov
dec
mov
jbe
xlat
mov
loopne
push
and
outsl
gs
std
je
imul
push
test
mov
jmp
or
fs
les
xchg
aam
std
mov
icebp
leave
jnp
inc
jo
push
jne
fbld
js
mov
loope
sbb
dec
jo
push
push
shl
cmovb
sbb
pop
movb
jbe
jg
sbb
inc
cld
call
cmc
arpl
mov
inc
and
sub
push
clc
or
jg
dec
aas
orl
add
push
sbb
mov
mov
cltd
sub
in
mov
mov
adc
in
pop
rorl
cmp
push
cltd
adc
mov
pop
jg
jge
ds
insb
andl
and
or
shlb
addr16
inc
adc
and
lock
inc
icebp
in
or
pushf
mov
mov
orb
test
xor
adc
rorb
sarl
push
lcall
mov
adc
sbb
aad
mov
and
lods
subl
sub
shl
inc
ss
movzbl
xchg
push
cmpsb
push
aas
mov
push
stc
lock
loopne
cmp
xchg
cwtl
pop
rcrb
repz
dec
mov
fadd
mov
mov
int
mov
xor
xor
add
mov
cld
cli
subl
jo
and
into
push
push
notl
pop
adc
fstps
pop
mov
sub
loope
daa
pusha
or
insl
or
inc
cld
push
adc
ja
pop
in
dec
leave
stc
aad
lods
mov
mov
test
jle
add
push
repnz
mov
push
dec
and
push
out
add
repnz
sub
std
sbb
cmp
push
push
mov
mov
gs
mov
mov
pop
sbb
xor
add
gs
xchg
test
mov
test
add
xchg
mov
mov
inc
inc
rclb
add
das
lods
test
sbb
hlt
sub
cmp
push
xchg
cmp
sub
insb
sub
and
xchg
jbe
lods
imul
mov
jl
inc
test
iret
in
sub
sub
ret
bnd
in
or
mov
aam
shrl
fwait
sarb
sbb
inc
jae
fcompl
push
mov
xchg
movsb
scas
jae
jmp
movsb
andb
sub
repnz
mov
adc
daa
or
mov
ret
jne
and
and
leavew
lret
add
dec
add
pop
add
dec
ficoml
sahf
aaa
dec
sbb
sahf
repz
xchg
cmp
imul
icebp
into
mov
mov
inc
inc
sbb
in
mov
jg
pop
outsl
adc
dec
es
lods
mov
pop
fadd
sub
sti
in
cmpl
cld
out
lds
clc
cld
clc
mov
popa
inc
mov
int3
pushaw
mov
mov
ds
push
rolb
xlat
xchg
sbb
xchg
ljmp
or
mov
subb
js
mov
jge
dec
rcll
inc
cltd
data16
clc
mov
add
push
inc
xchg
push
mov
and
xchg
xchg
sub
nop
push
dec
xchg
jmp
and
jl
mov
push
dec
mov
fdivrs
cmp
popf
pop
sbb
or
xchg
ds
xchg
push
fscale
inc
jo
popa
inc
or
mov
sbb
cmp
fwait
scas
pop
aam
jg
push
in
jns
out
paddd
jp
jnp
lcall
mov
enter
dec
cmp
pop
arpl
and
stc
push
sub
je
push
aad
push
cmpsl
and
sub
xor
imul
pop
aas
mov
push
call
or
ret
xchg
xchg
movsl
cli
cmpsl
jnp
add
psubusw
movsl
sub
sub
or
inc
mov
fisttpll
dec
mov
mov
cmp
fisttpl
jecxz
xchg
xor
xchg
popf
ret
jb
mov
pushf
popa
add
test
or
cmpsl
ljmp
scas
call
jle
icebp
sub
sbb
cmp
pop
insl
dec
ret
int3
jo
sub
negl
mov
test
les
cmpsb
lret
roll
loope
xchg
pusha
shl
popa
jmp
add
leave
andb
dec
aam
scas
pop
aad
cmp
insl
lahf
sti
lcall
jg
cmpb
jg,pt
rolb
rcll
ret
outsb
or
jp
je
add
push
push
cltd
ds
in
stc
push
adc
popf
addb
ljmp
pop
adc
or
aam
leave
jl
add
mov
sub
fidivrs
mov
inc
movsb
pop
lcall
addr16
call
mov
in
insb
or
andb
and
sbb
loopne
testb
rcrb
pop
mov
adc
and
xor
leave
push
pop
icebp
push
inc
pop
ret
jmp
push
pop
sub
imul
cltd
fistps
or
and
sahf
shll
scas
push
pushl
outsl
mov
mov
dec
mov
jnp
pop
dec
lahf
stos
push
xchg
push
mov
and
das
into
push
test
mov
outsb
jmp
arpl
jnp
aaa
inc
xchg
xor
sbb
jns
pop
mov
jcxz
insl
dec
lock
mov
ljmp
jnp
ret
jb
nop
std
jge
fidivrs
gs
pop
add
adc
daa
push
je
rcrl
push
jne
js
pop
das
divb
mov
cmpsb
and
push
ret
sub
push
cs
inc
fnsave
jne
icebp
aam
add
adc
dec
pop
lahf
outsl
or
std
testb
and
out
pop
xchg
in
fiaddl
loop
mov
scas
or
outsb
cltd
out
mov
movsl
push
mov
lock
mov
popf
mov
dec
mov
das
mov
js
mov
roll
mov
cmpsb
fidivl
fsubrl
inc
mov
clc
add
add
add
pop
lcall
in
cmpsb
shll
repz
push
cmpsl
scas
repnz
xchg
rclb
int3
stc
daa
mov
xchg
fnstcw
xor
icebp
sub
xchg
cmp
ret
orb
xor
push
loope
test
lret
adc
mov
mov
inc
xor
mov
stc
sbb
clc
outsb
push
mov
sub
in
add
roll
add
sub
jle
dec
inc
or
lahf
sarl
out
iret
std
jmp
mov
ds
popa
mov
mov
ficoms
and
xor
addr16
pop
leave
bound
aam
inc
sbbl
je
sbb
cmp
xchg
xor
and
incl
shll
ja
jno
in
gs
mov
insb
fidivs
inc
insb
cmp
loop
xchg
xor
mov
ljmp
xorl
sahf
bound
adc
hlt
sbb
push
insb
data16
fsubs
popa
pop
ficomps
push
inc
cmpsl
scas
mov
jo
sti
cwtl
xor
dec
cmpsb
ljmp
jl
and
push
fsubrs
outsb
inc
add
jne
stos
jmp
in
popa
sub
loop
pop
lea
mov
push
into
stc
and
outsl
mov
jno
pop
jecxz
adc
xchg
add
cs
mov
lods
adc
sub
mov
mov
imul
pop
fs
pop
jge
xlat
inc
repz
sbb
jmp
pushf
adc
and
adc
mov
popa
lods
or
pop
bound
movsl
mov
sbb
cwtl
pxor
leave
es
out
mov
mov
lock
out
pop
andb
roll
mov
jno,pt
aam
inc
ret
repz
sbb
data16
cmc
mov
mov
or
or
mov
push
in
scas
std
cwtl
in
dec
mov
fnstenv
mov
add
dec
jecxz
or
cmc
repnz
sub
inc
insb
push
xlat
mov
pop
sub
xchg
mov
and
test
clc
push
dec
mov
inc
mov
enter
and
loope
ret
idiv
jb
and
dec
mov
cltd
int3
pop
fistpll
popf
cltd
xor
or
sbb
scas
cmp
dec
dec
xor
testb
xor
hlt
lods
adc
jne
push
movsl
xor
lea
test
xchg
or
mov
jp
cmp
add
add
aaa
mov
das
jno
ret
mov
xor
adc
dec
and
adc
jl
jl
rorb
pusha
clc
cwtl
out
repz
movsl
sbb
das
pop
leave
xlat
cltd
xor
stos
mov
scas
stos
jge
add
orl
inc
stc
cmp
popf
adc
jle
cmpsb
xchg
ljmp
lcall
xchg
push
sub
lahf
lock
nop
mov
inc
and
push
je
fsubs
enter
push
fs
jmp
push
scas
xchg
dec
adc
inc
pop
loopne
std
lret
addr16
sbb
stos
sti
cld
sbb
jge
fwait
jmp
daa
hlt
fwait
out
addr16
lods
mov
jg
xchg
mov
int
clc
add
aaa
xlat
dec
lcall
dec
out
pop
subb
or
les
in
xchg
jp
inc
mov
mov
fcmovnu
mov
xchg
lods
popf
or
dec
or
pop
mov
xchg
jmp
sti
add
loopne
jns
sbb
lahf
iret
dec
or
cmp
mov
add
jb
push
lahf
daa
or
iret
stos
add
cmp
mov
nop
cmp
lods
mov
mov
mov
lret
arpl
in
xchg
mov
inc
adc
hlt
jbe
xchg
cmp
xchg
out
int
out
inc
push
out
push
pop
into
push
pop
jecxz
fwait
in
subb
sub
jg
inc
xchg
repz
mov
and
sbb
push
add
cmp
scas
xlat
jae
adc
cmp
lcall
fwait
jge
adc
enter
jecxz
lods
lods
cmp
imul
cmc
dec
cmpsl
pushf
jg
xchg
icebp
lds
xlat
out
stos
push
inc
xchg
jo
fstps
ljmp
filds
fists
jp
in
mov
mov
inc
test
xchg
mov
test
pop
jmp
mov
mov
push
mov
jl
pusha
in
mov
push
aas
vphaddubq
mov
js
loopne
std
or
mov
cmp
les
jecxz
jmp
jp
fwait
xor
out
lret
in
inc
loop,pn
sbb
mov
inc
push
movsl
jle
aam
rolb
sbb
dec
adc
cmp
hlt
mov
mov
sub
xchg
xor
rcll
aas
adc
mov
scas
inc
insl
mov
lret
shrb
fdivr
test
into
dec
push
mov
sub
test
add
push
dec
imulb
call
mov
in
cli
fucomip
js
ja
es
cld
mov
lock
push
data16
out
jns
xchg
in
pop
add
cs
dec
xchg
lea
ret
dec
out
mov
pusha
clc
shrb
inc
and
lahf
mov
sbbb
mov
inc
dec
lret
pop
fwait
in
mov
ljmp
and
lcall
lock
dec
mov
mov
stos
mov
mov
cmp
push
mov
inc
dec
or
sbb
les
mov
or
sub
sbb
ljmp
inc
pop
sbb
imul
imul
repnz
add
lret
inc
adc
or
clc
enter
mov
mov
adc
and
rclb
les
xor
dec
iret
fildll
sub
nop
cltd
in
xor
inc
aaa
cli
mov
jg
mov
cmovae
push
stos
lahf
and
inc
lods
stc
iret
aas
sub
lcall
movsb
out
pop
push
enter
cld
out
adcb
add
fsubl
inc
dec
imul
das
pushf
cmp
mov
pop
shr
dec
cwtl
dec
aas
mov
adc
jp
fdivrs
jl
sub
push
mov
adc
xor
mov
jl
roll
test
sarl
iret
test
mov
sub
jge
shrl
aad
leave
xor
loope
iret
out
sbb
push
sbb
js
mov
jns
imul
test
int3
cmp
mov
mov
push
sbb
mov
xchg
fwait
pop
movsl
sub
push
aad
cmp
test
sub
fisttpll
aas
dec
jp
mov
adc
movsb
pushf
mov
in
cmp
popf
adcl
mov
mov
or
shl
inc
push
insl
xor
notl
cmpl
mov
fld
mov
push
cs
and
not
xchg
das
cmp
push
in
pop
imul
jnp
std
loop
inc
or
dec
inc
pop
mov
jb
adc
push
push
outsl
repz
js
sub
lds
and
jge
adc
iret
sub
xchg
aas
mov
cmpsb
ljmp
in
add
test
mov
pop
nop
in
in
outsb
add
aad
push
ret
xchg
mov
cld
aaa
sbb
pusha
pop
mov
xchg
fistpl
xchg
mov
out
pop
inc
stos
out
fwait
insl
in
aad
stc
mov
pushf
cwtl
and
frstor
jnp
jno
adc
sub
in
dec
sub
or
not
push
dec
out
xchg
addr16
jne
push
or
pop
jbe
sbb
sbb
stos
fdivrp
push
sub
add
outsb
dec
ficompl
cli
stos
popa
pop
push
loop
and
repz
ljmp
jns
or
pop
sbb
outsb
test
dec
push
mov
out
rorl
xlat
cmp
mov
ljmp
orb
inc
or
cli
dec
adc
daa
mov
jl
enter
lret
cmc
daa
pop
and
gs
maskmovq
notl
mov
les
xchg
sub
cmp
xchg
push
push
enter
fsubp
inc
xchg
aad
rclb
add
cli
lock
mov
cmp
jp
sbb
xlat
push
dec
inc
into
add
div
repnz
popf
push
shlb
sbb
enter
fstpt
loopne
adc
enter
and
add
mov
scas
and
clc
aas
xchg
mov
lds
lahf
inc
imul
sub
xor
pop
and
add
sub
or
mov
leave
insb
ret
push
sub
daa
mov
xchg
ja
insb
xor
orl
cmp
std
jb
testb
mov
mov
cmc
rclb
gs
cmp
pop
and
into
std
push
pop
pusha
imul
and
imul
mov
aad
cmp
iret
int3
sub
sbb
ss
lds
xchg
inc
out
aas
add
outsl
push
inc
je
rorl
push
adc
scas
flds
test
dec
insl
push
cmp
and
xchg
inc
and
shll
fcoml
sahf
imul
mov
mov
cmp
xlat
arpl
xor
mov
or
pop
out
mov
jns
mov
shrb
popa
xchg
pop
push
pop
fisubs
sub
popa
mov
cmp
pop
or
lcall
rorl
push
adc
divl
adc
fwait
lods
imul
loope
pop
xchg
aas
lret
adc
pop
bound
dec
push
mov
insb
outsl
jo
sub
aam
mov
mov
roll
fcmovbe
fidivs
aam
mov
mov
loop
pop
sub
in
dec
movsl
dec
addr16
test
inc
xlat
lds
lds
jno
scas
enter
lret
ss
pop
push
adc
aaa
mov
pop
jae
mov
ja
lahf
lods
push
pop
int
or
pushl
dec
jg
mov
mov
mov
cmp
push
pop
and
xchg
out
rclb
cmp
daa
les
into
inc
iret
aad
jnp
lcall
std
and
loope
fcmovnu
jg
insb
rcr
shll
or
je
and
jno
cld
dec
xlat
les
pop
pop
add
sub
pop
out
sahf
fisttps
popf
pop
imul
jne
mov
sub
std
push
popa
add
fmull
mov
mov
pop
push
std
jae
dec
jle
sub
mov
jae
sub
pop
add
sub
push
push
out
xchg
dec
dec
sub
mov
inc
es
faddl
repz
pop
popf
mov
push
pop
lcall
fcompl
sub
ret
into
mov
fwait
je
pushf
mov
je
add
stos
or
inc
mulb
js
push
jo
mov
sub
fwait
jae
adc
out
pop
add
imul
ss
out
sub
mov
pop
push
pop
cmp
sbb
pop
xorl
cmc
jnp
fcompl
mov
jg
sub
in
pusha
push
xchg
and
ret
cmpsb
sti
xor
add
xor
sub
cltd
adc
ja
inc
in
lods
clc
fs
ss
push
sbb
mov
mov
fsubs
xor
pop
mov
dec
dec
inc
sbb
adc
jmp
xor
adc
jbe
jno
repnz
pop
loope
xor
sar
mov
push
jo
dec
jmp
sub
mov
es
mov
pop
scas
jmp
adc
fiadds
out
mov
mov
stc
das
sub
popf
pop
call
fs
mov
cmp
rcl
stos
inc
das
sbb
addr16
and
and
sbbb
pop
xchg
test
xor
jns
adc
dec
inc
mov
fwait
mov
xor
popa
lahf
cmp
pop
mov
scas
add
movsl
shl
pop
cmp
insb
push
ljmp
scas
lds
inc
cmp
fs
hlt
push
iret
fldt
lds
in
leave
fcomps
jge
xor
clc
leave
and
aad
lods
stos
xchg
push
mov
mov
pop
mov
push
in
push
lea
mov
addr16
roll
loope
or
xchg
jnp
push
cmp
lods
add
jp
push
xchg
xor
pusha
cmp
lcall
test
fwait
mov
sub
dec
jbe
xor
repnz
mov
adc
push
jp
adc
fists
pop
test
fwait
jnp
xor
cli
and
lahf
and
adc
adc
inc
jmp
inc
repz
rclb
ljmp
das
xchg
jecxz
shll
adc
xor
mov
les
sahf
lods
xchg
nop
jecxz
das
jge
cmpsl
jnp
mov
test
stc
outsl
and
scas
shl
lcall
push
insb
mov
rol
cmovo
aam
xchg
cmp
addb
cltd
mov
xor
cmp
int3
lock
hlt
lret
insb
pop
pop
orb
out
xor
mov
aas
sahf
lret
jne
insb
ss
dec
inc
dec
das
mov
mov
adc
rcrl
add
lods
pop
fmul
mov
outsl
adc
add
fiadds
test
jmp
xor
rol
aas
nop
loop
fdivl
xchg
std
adc
imulb
sti
cmc
rorl
jge
jl
push
jne
jb
sub
jnp
aam
sub
mov
lods
cmp
mov
and
xchg
adc
icebp
push
sbb
scas
push
add
out
mov
mov
out
sahf
xlat
shlb
add
fnstsw
jbe
mov
jp
sbb
dec
or
lds
cmpsl
mov
xorl
fs
pop
icebp
or
inc
or
push
mov
dec
movsl
call
cmpsl
popf
push
cs
add
sub
scas
mov
dec
add
add
cmpsl
xchg
mov
mov
in
ret
jb
insb
outsb
cmpsb
andl
enter
in
test
rcrb
xchg
testb
mov
das
leave
cmp
cmpsb
adc
leave
inc
inc
jae
or
or
push
add
mov
sub
mov
or
loope
lea
adc
in
and
cmp
shlb
pushf
fdiv
or
into
jecxz
in
cmp
mov
mov
push
gs
fs
mov
jno
imull
ror
pop
in
and
push
out
xchg
in
icebp
pop
xchg
cmp
stc
adc
mov
lock
inc
mov
std
push
mov
fsubr
dec
fcmovu
icebp
lret
jl
adc
cmp
movsl
adc
sahf
dec
mov
jbe
cmp
leave
repnz
cmp
xchg
movsl
lea
dec
xchg
jecxz
mov
mov
cld
pop
and
mov
imul
push
clc
shr
push
add
sub
adc
cmc
mov
popf
ja
xchg
adc
sbb
inc
xchg
pusha
int3
xchg
cmp
sub
add
xlat
xor
cld
movsb
daa
scas
sub
int
lock
shrb
enter
popf
cltd
adc
or
ljmp
adc
push
and
jo
call
popf
iret
sub
mov
in
and
mov
fsubs
mov
addr16
imul
dec
inc
pop
sub
rcl
add
mov
dec
xlat
pop
mov
xchg
enter
push
and
sarb
movsb
pusha
mov
jae
ret
pop
xor
or
aas
ror
sub
call
rcrb
bound
aaa
addr16
call
test
sbb
push
sub
pop
jle
dec
mov
lcall
jecxz
in
sahf
insl
out
push
mov
ljmp
mov
arpl
inc
sub
outsb
jle
inc
test
pop
mov
sub
std
rcrb
das
imull
push
jno
mov
xchg
xchg
mov
and
sub
jne
cmp
lahf
lret
test
loopne
adc
inc
push
add
push
movsb
scas
push
nop
ss
aas
xor
stc
ljmp
lret
mull
ljmp
js
stos
mov
scas
xchg
idiv
in
or
and
pop
or
and
sarb
adc
ficompl
sub
or
mov
sbb
mov
sti
jge
cmp
jmp
icebp
inc
xor
fbld
sub
popf
int
push
insl
cmpsl
ja
aas
add
rorl
adc
jg
inc
je
inc
push
cmovno
pandn
pop
iret
inc
cmp
mov
or
sbb
push
mov
add
cmp
iret
or
insl
jp
sbb
imull
inc
jbe
jns
stos
xchg
outsl
jbe
jp
xor
icebp
jo
mov
pushf
sub
outsl
or
rcl
cmp
stos
dec
sti
dec
inc
pushf
and
lahf
mov
out
lcall
inc
out
pop
inc
xor
rcr
push
or
int3
jae
shll
adc
sti
or
push
out
dec
xlat
inc
xlat
lea
cmpsl
ds
lahf
cli
stc
das
pop
jbe
cli
loopne
mov
push
xchg
std
xchg
jg
mov
xchg
insb
icebp
sbb
stos
mov
stos
push
and
mov
xor
out
pop
jle
push
ja
jb
mov
mov
and
jnp
pop
shlb
sti
lea
inc
outsb
ds
jo
ret
aam
xchg
enter
popa
out
jnp
mov
repz
hlt
xchg
scas
pop
sub
sbb
xor
in
mov
daa
gs
sub
push
jmp
fmul
jbe
mov
movb
sti
jno
clc
lods
imul
test
leave
mov
sti
fdivrp
mov
popf
xchg
add
and
clc
in
inc
dec
ja
out
es
push
push
insl
mov
ljmp
xor
je
mov
mov
mov
xchg
mov
dec
dec
dec
call
adc
push
dec
loope
add
sbb
or
fstps
or
jp
jb
cmp
xchg
cmp
add
pop
push
scas
and
add
jl
enter
push
jmp
and
mov
dec
les
jecxz
gs
adc
repz
jle
add
push
mov
ret
xchg
pop
xchg
rorb
xchg
lods
mov
inc
pop
xor
popa
in
sub
pop
push
pop
out
aas
hlt
or
pop
cwtl
sub
pop
mov
inc
pop
sub
xor
mov
lahf
push
call
add
push
push
jns
rol
add
add
mov
stos
cmp
xorl
int
imul
push
pushf
insl
xchg
or
addl
jne
lds
ficompl
jo
and
out
lret
xor
stc
mov
lea
nop
rorl
shl
sbb
stos
rcll
adc
cmp
mov
daa
xor
mov
fsts
mov
andl
sti
fcomps
mov
and
dec
push
push
rcll
ror
leave
mov
scas
loopw
test
gs
pop
xchg
xchg
xchg
loopne
adc
fwait
mov
sbb
pop
lods
jae
pop
bsf
jno
and
mov
cwtl
das
dec
lret
adc
sbb
sti
adc
or
sbb
dec
inc
mov
mov
outsb
push
into
push
mov
daa
pop
mov
sahf
movsb
xor
or
inc
in
push
pop
sub
pop
cltd
mov
das
or
sbb
cmp
or
mov
add
sbb
xchg
push
sbb
std
adc
push
ret
repnz
lcall
sub
in
fstl
in
or
inc
cmp
mov
je
icebp
arpl
push
cmc
add
enter
gs
out
in
pusha
ja
inc
imul
xor
in
jp
test
ret
push
sub
in
sub
mov
cmc
xor
insl
jge
dec
testb
ret
push
cmpsl
and
cmpsl
sub
icebp
push
adc
or
xor
out
arpl
inc
orl
insl
movsl
in
sbb
jo
sarl
push
les
les
xor
pop
rcl
sbb
fisubrs
adc
fdivrl
insl
jle
and
inc
push
jae
xor
popf
pop
in
mov
sahf
push
lahf
ret
testl
sbbb
sub
mov
xchg
add
popf
jne
mov
in
mov
dec
sbb
and
incl
xchg
jle
mov
ja
jp
iret
lret
mov
insl
outsb
filds
dec
negb
lods
cs
leave
dec
into
jnp
lahf
fildl
out
in
cmc
popf
pushf
mov
lea
bound
lds
sub
mov
aas
sbb
in
jne
out
and
sbb
cmc
test
dec
cwtl
fldl
mov
push
push
cld
adc
adc
movsb
iret
mov
jnp
adc
cwtl
sub
mov
cli
ds
cmp
inc
cmp
sub
fisttps
jno
ljmp
mov
int
stc
das
imul
dec
mov
inc
imul
adc
icebp
repnz
inc
int3
pop
in
jge
pop
mov
es
mov
xchg
xchg
scas
push
pop
imul
push
pop
lods
shlb
rcr
loope
arpl
sub
sbb
fbld
sub
push
adc
xor
or
in
xor
out
add
mov
lods
pop
add
movsl
repz
int
xor
into
mov
mov
pop
mov
or
xchg
in
cmc
jge
and
mov
icebp
aad
push
and
cmpsl
lahf
xchg
jp
lret
std
shlb
testl
add
xchg
push
cmp
jo
gs
mov
dec
sbb
xchg
dec
and
fildl
jb
sub
jecxz
mov
bound
inc
dec
xchg
jmpw
lret
ret
fnstcw
repz
jp
test
inc
hlt
cmpsl
push
mov
mov
insb
cmp
and
shlb
or
cmp
in
and
pop
insl
jmp
lret
js
mov
in
mov
addr16
scas
mov
push
scas
fmul
lahf
xchg
dec
add
sub
adc
inc
xchg
and
and
jg
cld
jl
push
sbb
adc
push
jmp
add
sub
cwtl
cli
pop
ret
cmp
push
cltd
nop
aas
shrl
shll
cmp
inc
jle
data16
enter
sub
pop
inc
add
leave
jp
inc
mov
aam
sbb
dec
mov
lods
pop
push
rcll
std
lock
push
cmp
xchg
bound
jb
movsl
out
xchg
mov
pop
adc
add
push
mov
cmp
dec
les
lahf
mov
imul
xlat
clc
dec
das
cmc
add
je
ljmp
daa
std
xor
bound
dec
lret
pop
mov
cli
cmp
cmp
and
stos
jge,pn
std
pusha
mov
lods
xor
jne
xchg
dec
and
out
aam
pop
test
lods
jle
cltd
mov
cmp
lret
shll
dec
mov
pop
jl
xor
lahf
add
cmp
ja
jmp
jne
and
test
push
add
out
stos
nop
xchg
lret
dec
fwait
xchg
in
xchg
dec
cmc
xor
loopne
or
push
inc
mov
iret
cmp
xorb
aas
aam
add
mov
or
enter
sub
mov
test
lcall
loope
stc
sarb
xchg
cmpsl
stos
add
in
out
add
sti
push
inc
push
stos
nop
leave
mov
notl
loopne
lock
flds
push
out
ret
cmpsb
aas
std
add
loopne
lcall
xor
cmp
pop
mov
daa
popa
insb
or
lcall
daa
sahf
mov
std
sbbl
inc
js
jnp
jb
cltd
sbb
mov
pop
xor
add
bound
mov
stc
lds
dec
push
es
sbbb
push
movsl
call
call
adc
dec
cmp
or
cmp
fwait
adc
pop
and
add
mov
sub
negl
push
or
notl
test
jg
ss
jno
out
in
sbb
pop
sub
mov
xor
or
cmpsb
shlb
fucomi
cmp
and
cmp
xchg
cli
call
popa
jo
jns
rclb
pop
ja
add
xchg
lahf
pop
out
cmp
jge
ficompl
jge
xchg
vmread
mov
lahf
sub
mov
out
inc
sub
repz
dec
mov
in
xchg
pop
imul
cmc
call
mov
mov
jbe
dec
jecxz
adc
mov
idivb
fcoml
pop
jp
out
xchg
push
popf
insl
or
mov
lods
int
sub
int
xor
aad
push
or
mov
inc
dec
mov
cmp
sub
and
xchg
outsl
jmp
mov
imul
stos
shll
pop
lret
lea
jnp
add
and
movsl
push
adc
jbe
sti
cwtl
mov
mov
or
ss
pop
adc
sete
stos
lds
fiaddl
testb
icebp
xor
scas
jo
dec
pop
mov
mov
xor
movsl
rcrl
push
pop
push
jp
scas
aam
les
xchg
andb
adcl
scas
jnp
call
sub
inc
cmpsl
pop
addr16
mov
and
nop
jbe
lret
cmp
xor
xlat
lret
adc
mov
cs
lret
fwait
xor
mov
pop
stos
ljmp
dec
jle
test
inc
enter
fadds
popa
scas
mov
test
xchg
push
call
addr16
dec
cmp
divb
cmp
jl
adcl
mov
jo
xor
mov
popf
push
cmp
pop
stos
jecxz
pop
add
add
push
pop
jmp
push
aas
mov
mov
nop
pmaddwd
pop
cs
adc
inc
lock
jbe
out
push
xchg
xchg
dec
jns
aam
mov
outsl
xchg
pop
ret
fiadds
push
notl
popa
inc
push
out
movsl
cmp
sahf
xchg
jbe
xchg
mov
mov
imul
scas
sub
xor
and
mov
loope
xchg
enter
add
int
jle
sbb
pop
push
aam
aam
mov
shll
push
mov
mov
mov
pop
mov
rcll
cmc
and
lcall
aaa
and
divb
mov
loop
nopl
cmp
lcall
lahf
cltd
movsb
aad
insb
daa
ret
jnp
popa
and
mov
stos
sbb
push
sbbl
xchg
sbb
sub
movsl
inc
movsl
mov
int3
hlt
je
cli
push
idivb
jl
mov
add
and
jns
push
movsl
xchg
and
mov
pop
add
lret
cmp
int3
rcl
mov
aas
jle
mov
test
fldenv
mov
scas
xor
mov
es
pop
in
xchg
popa
loopne
adc
dec
cmp
xchg
pop
test
xchg
pop
pop
fsubr
xchg
sbb
inc
xchg
repz
inc
loop
scas
cld
iret
cmpsl
adc
sub
into
daa
hlt
jbe
dec
adc
pop
or
dec
addr16
test
in
mov
sbb
nop
xor
loope
in
sub
pop
or
insb
les
in
dec
rcr
push
sbb
adc
cmp
fcmovnu
das
lds
adc
mov
ret
filds
push
mov
add
mov
divl
jl
xor
push
xchg
lock
in
dec
push
push
sbb
dec
and
je
add
jge
cmpsb
test
cld
push
pusha
jne
fidivrl
mov
int
inc
dec
aad
adc
cltd
stos
stos
and
or
ss
data16
in
mov
popf
xchg
fisubs
fwait
push
xchg
jecxz
mov
repz
test
scas
adcl
aas
jl
jg
or
cmc
inc
jmp
mov
pop
sbb
fnstcw
pop
shlb
hlt
pop
push
in
lcall
pop
aaa
mov
jp
cli
lret
and
sbb
enter
inc
mov
shrb
imul
mov
hlt
iret
popa
inc
pop
jo
pop
insb
addb
ljmp
xlat
mov
push
jbe
int
and
cld
test
inc
inc
mov
xchg
int3
sti
ja
fwait
bound
sbb
scas
shrl
add
aad
xchg
or
negb
or
xchg
jns
xchg
and
lock
jecxz
fadds
int
xor
loopne
fimuls
cmc
sub
or
jg
clc
fs
out
cltd
aad
jns
scas
sbb
or
xor
mov
adc
out
xor
dec
push
push
sbb
xlat
data16
push
dec
pusha
fs
or
mov
inc
das
sub
mov
mov
bound
leave
push
test
cmpsl
sub
enter
orl
mov
inc
lret
in
test
sub
addr16
xchg
xchg
inc
int3
mull
lcall
loope
xchg
negb
fwait
dec
cs
ljmp
repz
insb
nop
fdivrp
mov
inc
imul
push
jo
sub
test
sub
addl
mov
sti
fdivr
jle
pop
addr16
ja
sbb
sbb
js
ja
in
mov
jnp
and
and
pusha
call
in
push
int3
sbb
idivb
mov
rolb
xchg
mov
mov
std
ss
dec
sbb
sub
lock
ss
jnp
pop
bound
pop
mov
fiaddl
aad
mov
sub
inc
add
dec
lea
inc
mov
mov
dec
mov
jle
lods
adc
aam
movsb
ret
cmp
lds
aas
and
adc
out
aas
cltd
add
lods
pop
xor
inc
lcall
shr
and
push
sti
inc
icebp
test
jb
push
mov
sub
into
leave
ss
inc
pushf
gs
shlb
cmpsb
int3
les
repz
pop
js
fcomps
ficoms
out
lods
fs
push
jo
mov
mov
mov
mov
and
dec
or
pop
fcmove
jns
inc
pop
mov
or
jbe
cmp
sbb
inc
pop
xchg
jnp
lea
pop
mov
fs
pushf
dec
inc
or
cli
xchg
cli
test
mov
xor
or
mov
scas
mov
mov
mov
lds
aas
popa
mov
or
gs
jmp
les
and
rclb
pushf
sub
dec
scas
push
cltd
ljmp
xchg
push
xchg
lahf
cli
int3
inc
aam
dec
sub
mov
inc
in
rolb
movsb
pop
insl
or
push
loope
lds
or
ret
pop
test
addr16
cs
adc
xchg
mov
popw
fistl
jbe
mov
mov
mov
xchg
dec
dec
stos
aam
rorl
lahf
mov
mov
push
pop
xor
sbb
dec
pop
cs
mov
xor
loopne
pop
mov
jmp
sahf
xchg
andl
stc
lahf
fildll
testl
push
lock
add
xchg
pop
sub
and
sbb
lods
mov
rcr
popa
fdivrs
mov
aas
aad
jle
mov
int
add
sub
mov
fisttps
inc
es
fildl
push
inc
mov
test
jge
pop
out
insb
ficomps
mov
outsb
rcll
pop
popf
fcom
imul
test
or
addr16
mov
popf
cmp
mov
xor
fidivrl
dec
adc
stos
xchg
das
lret
nop
xchg
cld
jb
cmp
inc
cld
or
scas
out
out
xor
push
je
das
xchg
push
mov
lret
repz
nop
fidivl
cli
cmp
out
ljmp
xchg
mov
cli
pop
aaa
fcomi
push
add
mov
sbb
pop
push
cltd
lea
insb
mov
roll
fidivs
ds
cld
sti
out
or
sbb
jo
mov
mov
cmp
cltd
stos
xchg
xchg
test
mov
mov
push
or
out
adc
adc
pop
test
push
push
ljmp
js
pop
dec
lods
cmp
xchg
ror
sub
stc
cmp
push
add
cmp
mov
jae
inc
out
xor
cmp
pop
ljmp
jae
shrl
fistps
pop
xor
jne
mov
and
mov
cltd
xchg
imul
inc
jbe
cs
inc
push
ret
mov
push
stc
fwait
jl
cmp
adc
dec
mov
popa
shll
push
xor
adc
pop
insb
mov
popf
xor
push
mov
aas
sbb
popa
divb
movsb
push
insb
ds
inc
push
stos
cmp
cmp
pop
pushf
inc
adc
imul
xadd
lcall
jb
fnstsw
roll
jmp
sub
ret
mov
dec
xchg
stos
aaa
cwtl
mov
xchg
or
xchg
sub
xorb
leave
and
pop
push
movsb
shlb
leave
sub
and
fisubs
enter
inc
xor
xchg
and
add
inc
lahf
xor
dec
jns
jmp
mov
mov
mov
aad
mov
cwtl
sub
shrl
mov
cmp
adc
adc
repnz
stos
pusha
pop
test
cltd
xlat
jno
je
aas
and
pop
outsb
insl
cmpsl
inc
fwait
loop
pop
dec
arpl
lods
jp
cmp
mov
das
dec
imul
and
dec
test
pop
add
rclb
or
cmp
pop
sbb
add
in
xchg
jo
push
adc
mov
jl
cwtl
int3
jb
inc
mov
push
fsubp
iret
scas
js
popf
addr16
cmp
mov
aad
lret
inc
sub
mov
in
int
mov
sarl
lcall
jbe
bound
and
loopne
or
cmp
adc
xchg
popf
or
jne
cs
jnp
jmp
fstps
or
scas
mov
or
nop
adc
cs
mov
repnz
sub
mov
ja
xor
xor
jmp
rsqrtps
xchg
stos
cmp
or
mov
test
ds
fucomp
ret
popa
sbb
cmp
push
mov
jecxz
push
dec
push
shrl
lds
adc
adc
or
push
das
push
push
jg
icebp
pop
mov
aaa
pop
fs
int
cmp
clc
push
add
xorl
insb
pop
iret
lods
mov
or
adc
inc
pop
add
dec
or
stos
stos
push
sbb
adc
cmc
btl
push
pop
adc
pusha
test
mov
push
int
xchg
or
adc
in
lahf
xlat
int
sub
shrb
pop
jg
call
test
andl
mov
popf
or
fimull
loopne
loop
test
inc
or
sub
sbb
mov
cmc
and
sub
aad
sbb
popf
das
cmpsl
out
lret
xchg
mov
xor
add
pusha
idivl
dec
jne
mov
mov
into
or
int
aas
mov
mov
out
inc
inc
jb,pn
or
add
rcr
mov
ret
sbb
mov
xchg
test
dec
mov
inc
aad
fstps
cmp
add
pop
loope
mov
arpl
shll
lahf
or
cmp
mov
push
mov
mov
lahf
mov
xor
sbb
pop
movb
dec
jne
cmp
sbb
sub
dec
in
xchg
pop
mov
jg
loop
clc
inc
in
in
int3
pushf
js
rorl
or
xchg
out
xor
insb
stos
popa
bnd
into
xlat
addb
jnp
push
addr16
inc
int
outsb
jp
push
out
push
pop
iret
dec
sub
xor
pop
arpl
sahf
popa
mov
or
inc
sbb
pop
mov
test
push
jne
lods
stc
pop
push
mov
or
js
in
push
xchg
lock
stc
cld
pop
mov
stc
lret
jns
dec
out
pop
sub
mov
add
mov
mov
jae
fcmovnb
mov
cmpsb
test
movsb
mov
pop
sbb
sub
ss
outsl
mov
mov
aad
pop
iret
std
mov
xchg
dec
in
xchg
push
stos
xor
lods
pop
mov
mov
sbb
mov
jmp
fstpt
pop
in
repz
push
mov
stos
out
dec
mov
sbb
clc
dec
std
sub
sti
shl
lcall
mov
sahf
dec
pop
cmpsb
addl
mov
mov
rolb
cld
push
xchg
int
inc
adc
sets
jne
mov
mov
fistl
stos
sub
inc
pop
push
cmp
js
mov
testl
cs
stc
push
xchg
mov
xor
sbb
loope
rcrb
mov
mov
jnp
insb
and
sub
mov
jge
in
shrl
fwait
mov
xchg
in
jecxz
out
aad
imul
inc
push
mov
mov
cmp
pop
out
mov
or
pop
fbstp
dec
xchg
outsl
jl
or
pushf
and
pop
adc
in
dec
push
hlt
pop
sbb
loopne
in
ja
xlat
jle
into
fcomps
or
ds
or
sbb
loop
gs
sbb
inc
and
and
pop
stc
outsl
dec
fucomp
mov
bound
xchg
loop
setp
bound
mov
out
pop
dec
jge
mov
push
daa
std
out
mov
dec
push
jns
or
stos
and
clc
jno
cld
adc
jae
outsb
test
leave
pop
test
cmp
xchg
jecxz
sbb
jecxz
fwait
sub
out
jmp
fs
sarb
mov
cli
daa
aaa
insl
subb
movsb
xor
mov
push
pushf
pop
roll
loopne
mov
stos
mov
call
sub
mov
faddl
cmp
or
in
stos
lods
aam
insl
aaa
filds
mov
mov
je
adc
and
pextrw
bound
xchg
xchg
adc
pop
pop
popf
stos
add
push
test
leave
lods
push
insb
jno
jns
mov
ss
lret
cmp
fidivrs
push
xchg
add
and
jb
mov
out
xor
jb
sbb
leave
fnstsw
add
xor
xor
xlat
pop
test
daa
add
pop
bts
mov
faddl
popf
in
jne
ret
inc
outsb
push
lahf
xor
in
ret
xchg
mov
in
insl
test
int
jne
mov
test
xchg
dec
ds
gs
pop
inc
pop
dec
push
into
repnz
lock
pop
lret
ss
xor
lret
jmp
ret
dec
inc
mov
mov
xlat
outsb
mov
xchg
push
leave
push
xchg
jp
hlt
or
cmpsl
sbb
jp
decl
adc
inc
fsubrl
push
sub
leave
test
cmpsl
iret
cmp
mov
enter
scas
pop
cmpsb
imul
cmp
jb
or
ficompl
mov
or
sbb
push
push
jecxz
incb
mov
lahf
adc
gs
mov
and
xchg
frstor
sbb
in
mov
or
loope
scas
push
mov
les
cli
dec
cld
mov
mov
ficoms
aas
push
and
cmpsl
or
jl
push
popa
mov
mov
jno
push
scas
int3
lea
jnp
mov
clc
add
repz
xlat
mov
enter
xor
mov
fsubp
fdivrs
je
add
xchg
inc
mov
push
mov
add
lods
cli
popf
inc
dec
daa
lods
pushf
adc
mov
pop
mov
out
xchg
or
jle
out
icebp
adc
aam
test
lock
mov
mov
push
xor
orl
dec
icebp
cmp
aas
xchg
jp
insb
lods
cwtl
push
loope
int
and
or
sub
cltd
fcmove
cwtl
inc
sub
stc
repnz
mov
jmp
mov
xchg
mov
insb
lods
adc
fbstp
jnp
or
out
xchg
into
xor
rcrb
xchg
push
das
loop
lea
dec
enter
fildll
pop
jp
xchg
push
mov
or
shlb
push
xor
xor
idivl
cmp
pop
push
mov
push
pop
inc
nop
lods
pop
push
repnz
pop
iret
dec
xchg
jmp
xchg
and
mov
into
test
xchg
ss
scas
pop
ret
mov
xchg
lahf
mov
cmp
sbb
dec
add
push
jmp
sub
push
xchg
ret
mov
jmp
pop
addl
jno
aam
clc
in
pop
jmp
loop
mov
push
and
push
pushf
cmpsb
mov
sahf
push
cmp
daa
xchg
pusha
add
jne
adc
repnz
stc
test
xchg
in
mov
and
sub
sti
enter
xchg
add
ret
notl
loopne
sbb
fldl
mov
or
sbb
adc
and
xor
pop
push
or
pop
shl
push
popf
out
xchg
pusha
sahf
aam
or
or
sbb
inc
lds
mov
into
pop
mov
out
in
mov
mov
pop
cwtl
les
fs
add
xor
jb
cld
test
loop
xchg
pop
adc
adcb
test
inc
and
pop
out
pop
add
insl
loopne
pop
stc
insl
enter
hlt
movsb
adc
loop
insb
aad
mov
pop
sbb
mov
xchg
test
adc
incb
jmp
shlb
pop
inc
sbb
jb
mov
les
mov
adc
or
stos
testl
adc
aaa
jmp
pop
jge
mov
in
in
and
cli
popf
aaa
cmc
decl
jmp
push
fucomip
cltd
lret
cmp
adc
mov
dec
aas
stos
jecxz
or
mov
mov
jbe
jno
jne
inc
inc
hlt
xor
out
sbb
mov
push
push
inc
rcl
xor
sub
out
in
daa
cmp
jmp
xchg
aam
push
mov
std
and
xlat
lds
push
dec
adc
movsl
orb
sub
mov
mov
es
add
add
in
jns
pushf
ss
add
sub
fsubp
in
movhps
sbb
test
jge
ret
lcall
lock
and
sub
out
pop
in
dec
cmp
adc
push
stos
iret
mov
aam
in
cmpsl
dec
adc
xor
in
adc
rcrl
sbb
fbstp
adc
lock
sbb
data16
xor
push
rorb
add
lods
daa
mov
adc
jne
mov
aas
cwtl
fstpt
fdivrl
cmp
insl
les
pop
sahf
adc
pop
dec
mov
es
ret
push
or
mov
add
sbb
sahf
cmp
in
pop
and
xchg
cmp
mov
in
std
adcl
adc
jae
add
fstl
mov
js
add
mov
pushf
cmp
stos
sbb
pop
mov
jmp
pop
ds
fwait
lcall
mov
push
push
push
pop
jb
les
stc
push
fisubrs
sbb
inc
mov
sub
popa
pop
dec
pop
adc
insl
pop
lret
js
adc
jg
xor
pop
sub
jo
jge
adc
jo
jp
cli
out
in
popa
inc
push
call
jno
movsb
fstpt
xor
xchg
out
jo
push
lock
mov
jbe
cld
sub
push
mov
add
les
xchg
sub
jno
pop
test
test
mov
sbb
movsb
in
cmp
jb
test
xchg
daa
iret
lret
ljmp
jp
add
pushf
mov
dec
cmpsb
mov
cmp
push
fcomi
inc
sub
insb
jne
sub
outsb
ss
pusha
mov
cmp
insb
push
cltd
pop
mov
ret
adc
cmp
push
mov
pop
adc
cli
xchg
pusha
imul
pop
popf
xchg
lods
sub
pop
je
insl
insl
jl
aam
push
rorb
mov
sub
pop
subl
mov
mov
pop
iret
sub
mov
dec
or
push
jp
ja
jp
inc
cmp
mov
mov
jb
loop
cltd
cli
notl
inc
sbb
lock
inc
testb
leave
mov
xor
push
mov
pop
push
icebp
mov
arpl
notl
clc
xor
cmp
repz
adc
sti
cmp
mov
mov
arpl
inc
out
mov
pop
add
icebp
enter
out
sub
sbb
int3
clc
cmp
add
mov
push
xchg
xor
xor
add
imul
mov
ljmp
outsl
sbb
jg
int
push
mov
xor
push
pop
hlt
fsubp
sbb
lret
lea
inc
sbb
nop
scas
xchg
xchg
out
shrb
scas
sbb
cwtl
lahf
in
aaa
adc
adc
mov
cld
inc
jmp
fwait
repnz
test
mov
dec
stc
incl
inc
addr16
mov
repz
movb
outsl
sub
aad
mov
sub
xor
int3
push
dec
dec
xchg
test
fwait
test
addr16
aas
sub
sub
dec
icebp
lahf
je
sub
and
mov
push
jbe
in
mov
xchg
cmc
lea
add
sub
stc
and
aas
fs
shlb
inc
or
rorl
add
pushf
xchg
cld
jae
aad
mov
or
xlat
mov
movsl
sbb
mov
ljmp
add
rorb
mov
cltd
xor
push
dec
js
and
xor
and
int3
xchg
adc
adc
xor
pop
out
or
adc
inc
fistpl
int
dec
fsubs
insl
pop
shll
js
push
or
cs
pusha
mov
mov
mov
aad
pop
mov
push
inc
adc
call
adc
xor
insb
xor
fnstenv
xchg
adcl
addr16
cld
stos
in
fdiv
push
jnp
sub
pop
and
push
sub
scas
cmc
pushf
repnz
xor
xor
push
popf
cmp
cs
bound
out
in
test
and
xchg
cs
and
push
add
xorl
push
xor
mov
lods
xor
inc
jnp
xchg
xor
mov
jbe
cwtl
pop
aas
mov
xlat
aad
test
cmp
inc
stc
jb
xchg
sbb
mov
jo
dec
sar
stos
cmc
fbld
adc
jl
cmp
push
sub
fldl
inc
jmp
adc
repnz
push
test
jp
ret
or
sbb
inc
out
rep
mov
inc
mov
ss
xchg
dec
push
xchg
cmp
mov
inc
cmp
mov
ljmp
scas
inc
stos
mov
mov
push
repz
sbb
jb
push
push
add
mov
test
icebp
push
mov
jecxz
fisttps
into
enter
lret
xor
sbb
dec
ror
lock
test
testl
aas
lahf
xchg
fs
add
in
icebp
cmpsl
cmp
fldenv
add
cmp
pop
cli
dec
fdivs
ret
aas
push
pop
inc
pop
pop
mov
shlb
xchg
sbb
mov
dec
fldcw
xchg
sti
and
jo
xchg
out
and
jge
popa
and
sbb
je
addl
push
jge
xor
movsb
dec
sub
in
jbe
jle
and
mov
lret
dec
mov
pop
aad
mov
mov
adc
sbb
xchg
pop
loope
pop
pop
adc
pop
sub
adc
icebp
in
mov
sub
pop
pop
dec
cmpsb
jg
xchg
push
stc
sbb
insb
fwait
pushf
dec
daa
lret
cwtl
sub
mov
in
adc
xchg
fld1
xchg
fcomip
ss
jmp
pop
xor
xlat
adc
sti
cltd
aaa
popf
cmp
sahf
dec
lret
clc
ljmp
gs
pop
cs
mov
dec
adc
lea
mov
mov
mov
movsl
ss
mov
and
cmp
xchg
ds
stos
jb
nop
mov
mov
fildll
arpl
icebp
outsl
sbb
frstor
fwait
cmp
mov
fstpt
cli
jle
and
mov
ja
push
insl
dec
mov
das
outsb
mov
xor
aad
xlat
lds
inc
lahf
fnstenv
pushl
xchg
test
rorl
jle
adc
mov
sti
cltd
jle
push
sbb
jl
cmpsb
into
xchg
std
out
repnz
cmpsb
push
sahf
cmp
mov
cmp
dec
xchg
popa
jno
iret
in
cld
inc
notb
adc
test
popa
nop
movsb
dec
shll
mov
cmp
incl
push
inc
push
lds
cld
mov
ficompl
push
cmovle
daa
adc
in
inc
jl
je
icebp
out
dec
dec
dec
inc
dec
and
inc
cmpsl
mov
shrl
and
fidivl
sahf
mov
test
cmc
pushf
or
enter
mov
addr16
push
push
inc
in
mov
inc
jb
stc
js
addr16
xor
ss
jl
sbb
xor
ss
cmp
les
sbb
movsl
mov
inc
pop
pop
out
lahf
dec
lahf
xlat
add
xchg
sti
fs
adc
repnz
xor
sub
mov
dec
add
int3
pop
mov
or
mov
jle
inc
outsb
push
subb
shl
inc
repnz
jge
inc
addr16
sbb
jg
sti
nop
xchg
xor
dec
mov
enter
shlb
loope
adc
ja
rcrl
sub
push
mov
leave
pop
xchg
inc
lds
inc
cwtl
jecxz
cwtl
sti
sti
sbb
stos
inc
jnp
fdivrs
fsub
mov
add
stos
js
repnz
rorb
mov
js
or
mov
cmp
adcb
out
and
lock
push
mov
xchg
pushaw
pop
rdpmc
cmpsl
push
jns
and
xchg
shll
jo
icebp
data16
dec
insb
pop
dec
sub
fdivs
lret
out
add
inc
mov
ret
mov
fadds
dec
fsubrp
push
and
dec
and
lahf
jle
leave
arpl
mov
dec
ss
cmp
push
loopne
int3
push
cmp
nop
andl
jmp
sbb
andb
sahf
xor
in
mov
out
jl
into
sbb
bound
cmp
cli
pusha
int
adc
int
loope
out
cs
cmc
push
xchg
lcall
add
adc
inc
lret
scas
out
pop
sub
xchg
add
inc
sahf
xchg
push
mov
pop
xor
es
push
dec
push
xor
jb
pop
lods
adc
adc
push
lea
xchg
popa
and
lcall
aam
xor
adcb
daa
xor
mov
popf
mov
sub
ja
lret
jl
mov
jns
ret
adcb
mov
sub
jl
scas
fsubl
mov
mov
push
int3
fimull
sbb
cmp
pop
push
dec
or
and
fdivrl
dec
ljmp
into
sub
cld
mov
in
popf
or
push
cmp
mov
pop
sub
imul
add
lcall
inc
sub
sub
std
sub
inc
shrb
push
adc
adc
cmp
mov
pop
add
pop
jge
push
lock
shlb
dec
jno
add
pop
inc
bound
mov
mov
cmp
es
mov
add
mov
pushf
adc
mov
xchg
mov
add
add
jb
add
cmp
cmp
orb
pop
insb
sub
call
or
xor
popf
fbld
dec
lods
fwait
outsb
arpl
test
fists
add
dec
fidivrl
sbb
jecxz
das
and
mov
dec
mov
faddl
rolb
fistpl
icebp
ds
pop
out
lret
pop
fildl
cmp
aaa
mov
orl
push
and
js
lock
aaa
comiss
popf
cli
ret
insl
in
aas
loopne
inc
add
pop
and
out
mov
pop
or
filds
mov
aam
add
rclb
shrb
stc
mov
dec
ja
dec
xor
pop
scas
adc
mov
mov
lret
in
ret
xor
jmp
ror
lods
stc
inc
insl
andb
int3
hlt
movsl
mov
inc
and
adc
repnz
fwait
fisubrs
jmp
movsb
daa
sub
mov
leave
dec
push
and
sub
push
loop
setnp
test
roll
xor
sbb
dec
xchg
push
push
push
adc
mov
jecxz
ret
mov
dec
xchg
sub
es
cmp
jg
ss
cmpl
push
mov
rcll
inc
xor
ret
jmp
lds
mov
rcr
clc
xchg
cmp
mov
sub
mov
cli
cwtl
push
fiaddl
adc
push
and
ret
cwtl
adc
lea
ja
test
pop
out
pop
pcmpeqb
jne
leave
sbb
cwtl
mov
pop
stos
xor
or
adc
xchg
mov
loopne
ret
mov
push
enter
mov
outsl
rcl
mov
stos
xchg
adc
mov
icebp
xchg
jns
call
mov
dec
cld
jg
rcrl
jb
pop
inc
mov
xchg
notl
xor
mov
jg
cmpl
add
fdiv
fldcw
call
lods
jno
out
xor
out
cmpsb
lds
inc
ja
sti
cmpsb
add
mov
outsl
adc
cmpsb
jl
incl
cld
cwtl
inc
cmp
xor
insl
jg
mov
testb
cmpsl
jne,pn
pop
int3
pop
sbb
insl
push
mov
jmp
jns
add
es
out
sbb
dec
rol
icebp
int
and
xchg
imul
sub
fiaddl
inc
repnz
and
loop
push
mov
sub
mov
je
xchg
movl
push
mov
xchg
iret
sahf
adc
mov
out
pop
outsb
out
add
pop
fsubrs
loop
mov
leave
ja
adc
cs
push
loopne
push
mov
inc
or
das
ds
cmp
jecxz
or
xor
ret
mov
loopne
movsl
jae
xor
jo
inc
jno
mov
sbb
jno
adcb
pop
mov
scas
and
xchg
insb
aas
mov
cmp
xchg
outsl
sub
addb
popf
ret
push
in
arpl
mov
lcall
not
sub
pop
mov
cmp
in
mov
cmp
imull
je
push
push
iret
lods
pusha
dec
sub
adc
inc
dec
mov
inc
or
mov
jae
push
cltd
lret
and
insl
mov
bound
pop
mov
pop
addr16
outsl
jo
xor
iret
mov
pop
or
add
xor
push
popa
cwtl
xchg
das
out
push
subb
je
pop
or
push
add
lahf
out
addb
dec
outsb
and
testl
and
stc
push
rolb
leave
stos
testb
popa
pop
inc
cli
mov
push
and
aam
psraw
fistps
ss
insl
or
push
loope
cltd
xchg
lahf
nop
ficompl
push
fwait
mov
test
and
test
sar
xor
mov
rcrb
stos
loope
push
jmp
out
cwtl
dec
mov
add
shll
in
pop
add
cld
insl
sti
inc
scas
xchg
jl
inc
push
movsb
fistpll
je
jl
movsl
cmp
rcr
mov
scas
dec
shll
rol
adcb
data16
jno
or
punpckhwd
or
mov
js
push
ss
pop
jecxz
dec
pop
xor
nop
gs
cld
push
xchg
xor
lcall
and
fistps
push
jmp
mov
lods
and
aaa
pusha
mov
fsubrs
nop
cmp
fnop
inc
inc
repz
push
popf
dec
loopne
add
scas
dec
xchg
test
call
fidivrs
dec
test
push
mov
ds
mov
stos
xchg
sbb
je
push
pop
push
and
jle
dec
cmp
inc
rolb
jge
mov
aam
pop
cmp
jle
mov
or
popf
jo
subb
lret
and
sbb
adc
pop
dec
hlt
pop
mov
cmp
fistl
mov
xor
movsl
xchg
shrl
hlt
mov
test
sbb
dec
popf
inc
cli
cmp
add
pop
lea
adc
mov
pop
mov
lret
push
inc
daa
arpl
cli
adcl
add
imul
nop
loope
push
pop
bound
mov
mov
daa
sub
push
mov
mov
into
push
or
cmp
cs
hlt
cmp
fisubrs
jle
sbb
in
jbe
ficoms
je
test
cmp
data16
adc
lcall
adcl
mov
jbe
lods
pop
add
ret
aam
and
insb
lea
out
arpl
xchg
scas
adc
dec
xchg
stos
pop
xchg
icebp
fldl
mov
inc
push
jle
and
in
aaa
jae
dec
and
into
arpl
add
adc
sub
and
mov
sub
push
shlb
cmpsl
adc
sbb
mov
lcall
subl
stos
mov
pop
lods
sbb
adc
adc
cltd
cmp
adc
in
mov
xchg
jge
lods
fdivr
mov
lahf
pushf
sub
xlat
cmpsb
inc
cmp
mov
loopne
wrmsr
out
xlat
inc
subl
lret
push
addr16
mov
push
aas
popf
add
les
push
out
call
jns
pop
aaa
jecxz
mov
sub
inc
jp
sub
xor
xchg
mov
int
pop
xlat
pusha
cltd
gs
aad
stos
test
cmp
iret
push
or
mov
add
jp
and
ljmp
repnz
aas
sti
aaa
ja
adc
movsl
mov
push
leave
pop
add
iret
cld
fsubl
aad
psubsw
dec
mov
pop
xlat
mov
push
adc
mov
jne
ljmp
cwtl
sahf
fdiv
test
adcl
fstpt
inc
jbe
push
xchg
pop
pop
das
mov
xchg
dec
movsb
push
negl
scas
ficoms
inc
out
rcl
jnp
ss
xchg
mov
push
mov
add
pop
es
push
imul
pop
pop
push
fwait
test
push
and
ret
and
aad
sbb
shr
dec
jp
mov
sub
ds
in
pop
inc
fs
jl
nop
cmpb
mov
jae
sub
icebp
lcall
rclb
and
inc
jg
push
pusha
dec
aam
xor
push
popa
xor
add
dec
fwait
adc
dec
mov
cmpsl
cwtl
xchg
scas
push
xchg
jl
call
fst
cmpsb
jne
incl
or
stos
and
popa
cmp
lods
mov
mov
sub
cmp
aas
mov
sbb
outsl
fldenv
scas
in
add
xlat
mov
pop
mov
xchg
inc
lahf
or
outsl
mov
add
inc
dec
mov
clc
cmp
push
fbstp
mov
mov
scas
inc
dec
es
addr16
or
or
or
push
or
shrb
mov
push
mov
clc
pop
icebp
xchg
shlb
adc
mov
push
jb
add
scas
test
rclb
pop
pop
add
repnz
imul
pop
ja
or
mov
xorl
or
add
arpl
in
aaa
xor
scas
lret
pop
in
lock
jg
add
hlt
mov
add
sub
mov
out
pop
lret
inc
cmpsl
xor
ret
pop
ret
psubusw
jne
sbb
aas
push
sbbb
lods
and
sub
mov
xchg
movsl
mov
mov
push
push
mov
xchg
pop
out
data16
std
add
xchg
xchg
decl
sub
pusha
or
int3
ja
test
cmp
das
mov
inc
iret
test
call
repz
dec
adc
in
aas
mov
xor
notl
in
insl
mov
xchg
shl
sbb
shr
rcll
in
arpl
dec
push
lock
push
push
dec
cmp
sub
pop
into
fnstcw
adc
jno
sbb
xor
add
xor
imul
or
in
out
xchg
xor
push
or
sbb
and
push
jae
and
and
cmp
push
push
dec
fildll
xchg
xor
push
stc
aaa
outsl
dec
inc
sbb
leave
sbb
mov
sub
fldenv
pop
xchg
scas
sar
sub
push
sarb
adc
lret
pop
or
int3
out
or
icebp
leave
call
jg
ljmp
add
or
xchg
std
mov
pop
sbb
lea
bound
mov
or
dec
aad
pop
test
pop
sbbl
xchg
xchg
and
rcrb
in
add
adc
and
dec
pop
jno
mov
sbbb
push
lock
cmpsb
in
flds
mov
xchg
ss
push
and
push
fwait
xor
aas
std
andl
cmpsl
aam
sub
mov
mov
sub
inc
loop
iret
and
mov
mov
xchg
dec
xor
push
test
xor
sbb
sbb
xor
inc
movsl
inc
sub
sbb
fwait
cs
jmp
add
stos
mov
into
jg
inc
rcr
rclb
cld
scas
pop
fcoms
jne
and
mov
aad
aaa
andb
mov
shrl
jae
fildll
inc
dec
test
out
mov
negl
outsl
fcoml
push
and
jb
inc
pop
into
pop
sub
mov
and
push
lods
aad
or
pop
jne
insb
adc
rorb
mov
dec
lods
fstps
mov
jne
cmp
sub
sbb
or
xor
adc
xchg
cmpsl
inc
cli
movsb
cli
fmulp
cmp
stc
sbb
pop
fdiv
pop
mov
clc
fdivs
xor
les
lahf
bound
shlb
pop
cmpsb
call
or
test
xor
dec
ror
movsb
mov
insl
mov
xchg
pusha
jge,pt
xor
inc
ret
popa
sbb
fcoms
mov
arpl
adc
mov
mov
and
mov
repnz
and
rolb
pop
jecxz
and
or
jns
sbb
jmp
pop
xchg
inc
inc
jmp
mov
pushfw
jne
sub
fldt
fadds
nop
bound
int3
repz
jmp
scas
in
lock
mov
add
adc
xor
push
inc
xor
add
ret
nop
pop
out
add
pop
inc
sbb
adc
stos
xor
lret
mov
int
mov
repz
fs
mov
decb
test
or
mov
mov
mov
je
sub
sbb
mov
sbb
iret
adc
mov
sub
xor
gs
and
jne
test
push
sbb
push
mov
cld
dec
cltd
imul
jp
pushf
xchg
cld
orl
cmpl
movsl
ljmp
scas
loope
inc
push
out
cmp
iret
jae
fidivrs
rcr
push
push
inc
sahf
push
sbb
pop
lea
stos
aas
nop
loope
stc
cmp
cmp
and
sarb
ljmp
or
add
fcom
fisubs
movsl
dec
test
xchg
cmpsb
insb
stc
faddl
mov
aam
sbb
mov
mov
mov
fsubrl
in
js
add
shl
stos
push
mov
in
inc
adc
push
popf
or
inc
fwait
lods
mov
sub
lcall
push
je
ja
pop
stos
dec
jmp
out
sahf
push
push
les
dec
pop
inc
sub
inc
dec
jbe
popf
mov
cmp
imul
sub
aam
leave
shrl
cmp
lods
stos
dec
ds
mov
add
aaa
or
shll
imul
test
and
sbb
cltd
cmpl
xor
sub
or
jb
icebp
iret
cltd
arpl
sbb
daa
xchg
cmp
cmp
mov
fsubl
cmc
imul
seto
dec
and
sbb
pop
stos
xchg
push
out
aad
jg
dec
xchg
push
xchg
mov
js
test
jmp
mov
cmpsb
int3
jno
pop
movsl
out
fsts
cs
cmp
divl
and
lds
or
adc
arpl
movsl
outsl
inc
mov
dec
sbb
stc
add
xor
mov
fnstsw
xchg
repnz
jo
aam
mov
dec
fwait
xor
loopne
shl
lcall
xor
dec
adc
cltd
push
pop
imull
cltd
or
mov
nop
and
mov
repz
cltd
push
sbb
sbb
loopne
push
bound
mov
inc
adc
mov
mov
adc
jbe
fnstenv
sbb
imul
sbbb
push
cltd
inc
mov
mov
mov
cmp
push
pop
mov
mov
dec
xchg
aas
fwait
ds
hlt
xor
pop
out
cmp
xchg
jmp
cld
jg
inc
dec
mov
int3
daa
xchg
lret
inc
std
xor
jmp
dec
in
hlt
sbb
popa
les
xor
pop
scas
jb
xor
mov
cmp
popa
sub
pusha
adc
push
insl
js
sbb
repz
lahf
ljmp
xor
cs
inc
cli
sahf
and
insb
iret
cmp
lea
push
xchg
xlat
or
sbb
hlt
pushf
xor
shr
pop
jmp
das
jb
or
dec
in
pop
aaa
arpl
xor
mov
out
jmp
mov
xor
outsb
jo
repnz
mov
in
xchg
mov
xor
adc
jp
add
sub
sahf
in
pop
insb
mov
inc
into
repnz
rcll
aas
in
xor
movsl
mov
mov
movsl
js
add
jbe
cmp
pusha
xor
pop
addr16
dec
loope
jecxz
jl
sbb
iret
xchg
jp
jg
mull
in
dec
jb
std
push
sbb
xchg
cmp
xor
xchg
pop
cmpsl
lds
mov
ret
rclb
mov
mov
jl
fisubrl
mov
inc
pop
cmpsl
int3
mul
fmul
and
imul
test
mov
aad
push
in
test
enter
dec
shlb
sbb
loope
int3
pop
test
or
jecxz
fistl
sbbl
repnz
fists
fcomps
fs
rolb
inc
push
bound
cli
sub
jmp
shrl
fdiv
jecxz
ret
mov
sbb
js
mov
lock
lahf
aam
std
clc
add
repnz
int
and
sti
pop
push
loopne
add
adc
cli
repnz
rolb
sahf
test
and
andl
loop
cmp
call
fwait
push
cmp
bound
fsubl
mov
sbbb
pop
lds
mov
out
das
int
out
mull
in
shlb
xchg
das
js
pusha
cs
pop
repz
stos
dec
fstps
sbb
sub
loop
sbb
or
cli
hlt
roll
pop
insl
fwait
loope
daa
mov
jecxz
sub
int
jno
xor
jle
bound
iret
xchg
mov
cmp
jne,pn
lods
and
clc
je
aas
es
aas
xchg
jmp
xchg
and
cmpsb
cmp
push
nop
sub
and
pushf
jle
out
daa
or
inc
pop
pop
test
jo
push
pop
cwtl
sub
or
into
or
gs
sub
iret
mov
add
in
es
sti
ljmp
cmp
cld
add
add
loopne
out
push
push
je
pop
or
sub
nop
aaa
pop
fisttpll
adc
test
addr16
daa
xchg
movsb
cld
leave
roll
jns
sarb
inc
retw
xchg
insl
fcomps
repnz
mov
pusha
insb
out
sidtl
jns
loopne
daa
lock
and
es
xchg
loop
cs
xor
jno
jl
out
imul
enter
inc
xor
int
cld
imul
sub
test
popf
cmpsl
jno
shlb
push
push
jbe
pop
xor
out
pop
nop/reserved
cwtl
fbld
xlat
mov
jmp
xchg
pop
add
lret
mov
sbb
stc
jns
insb
pop
fistps
mov
shlb
jg
iret
test
mov
push
dec
sub
mov
ds
fwait
adc
sti
notl
xor
push
lret
loop
add
xchg
xor
cli
iret
sub
sbb
imulb
jb
iret
xor
inc
pop
xchg
test
lret
andl
mov
inc
pop
xlat
jb
cmp
or
mov
push
xchg
out
ret
fnsave
jb
cmpl
popf
mov
mov
dec
stos
int
test
xchg
int
outsb
imul
inc
mov
adc
mov
imul
sbb
push
jmp
movsb
and
arpl
or
rorl
ss
jns
pusha
dec
xchg
mov
sub
rcrl
pop
or
les
xchg
or
lods
mov
or
add
pop
repz
push
push
cmc
xchg
mov
xlat
adcb
bound
or
das
pushl
jp
fchs
add
ret
pop
idivb
mov
sahf
jecxz
iret
pop
lods
jmp
dec
scas
sub
imul
and
push
or
push
popa
repnz
out
call
mov
cmp
dec
sub
sbb
in
mov
dec
mov
aaa
inc
popf
pop
imul
arpl
or
mov
adc
xor
xor
add
push
push
fwait
repz
daa
lcall
mov
xchg
out
adc
xchg
cmp
and
enter
or
int3
dec
sub
mov
adc
add
clc
sbb
dec
ret
and
insl
enter
lds
push
push
xorb
fadd
jb
pop
adc
jge
pop
lret
jo
or
addb
mov
inc
pop
pop
lret
mov
test
negb
ja
ficompl
das
movsb
dec
test
pop
inc
stos
rorl
push
negb
mov
push
ljmp
or
jae
lcall
lcall
add
mov
push
and
popf
pop
fwait
test
dec
dec
and
frstor
xor
mov
mov
jb
in
mov
pushf
enter
sub
into
cs
xchg
shr
rclb
mov
test
jg
lods
shll
ja
shlb
clc
or
mov
and
sub
adc
and
std
mov
testl
pop
mov
push
inc
js
jge
lahf
inc
sahf
pop
mov
adcl
cmp
and
sbb
pop
mov
lahf
roll
xchg
cmc
inc
cmpsl
jno
add
dec
icebp
popa
movsb
je
sub
or
sbbb
movb
mov
adc
push
mov
adc
sbb
adc
dec
and
movsl
jne
hlt
notl
sti
xorb
jg
dec
aas
loope
sbb
mov
xor
push
sub
pop
imul
out
pop
andl
loope
xacquire
dec
das
scas
adc
aaa
out
xor
fmuls
mov
push
je
xchg
or
aam
push
and
dec
fcompl
shlb
sbb
les
pop
jp
pop
xor
movsb
xor
inc
ss
xchg
push
fnsave
pusha
adc
push
gs
jge
mov
fisttpll
xorl
xor
loopnew
mov
sbb
xor
inc
test
cmp
fucomp
pop
xor
jge
push
sbb
mov
push
insb
push
and
pop
dec
dec
push
dec
inc
dec
dec
cmc
lcall
jae
in
ja
push
push
cmpb
iret
cmp
mov
cmp
jb
int3
bound
fs
sti
mov
push
and
mov
iret
cmp
mov
cmp
mov
cmp
mov
cmp
addb
idiv
stos
and
popf
sbb
jg
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
in
sbb
.byte
dec
