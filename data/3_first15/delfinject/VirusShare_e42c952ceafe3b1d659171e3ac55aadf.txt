aaa
jne
sti
add
push
push
je
imul
push
mov
loop
or
js
jb
outsb
xchg
dec
or
stos
sbb
mov
sbb
mov
and
out
in
adc
divb
movsl
popa
arpl
push
add
lds
and
inc
cltd
loop,pn
cld
sarb
push
clc
push
mov
dec
lret
divb
xor
cmp
jb
mov
repnz
mov
shll
or
cmp
push
push
pop
movsl
or
clc
sub
push
stc
push
into
and
les
fs
mov
pop
inc
jnp
push
pop
daa
inc
cmc
fsubrl
xchg
negl
cmpl
mov
loopne
xchg
mov
jmp
push
cmp
mov
adc
mov
fs
imul
and
push
mov
cmp
sbb
or
pop
sbb
xchg
or
dec
out
push
cmpl
jecxz
mov
add
mov
mov
pop
aam
xchg
sbb
or
cmc
mov
in
add
je
orps
fnstenv
adc
adc
xor
lock
daa
and
dec
out
sub
mov
mov
xor
ds
xchg
dec
call
loopne
xchg
fdivs
xchg
mov
sbb
adc
pop
or
sub
icebp
and
les
test
adcl
inc
or
pop
movsb
jne
sbb
lahf
mov
pop
stos
push
push
negb
push
jg
mov
std
out
mov
cmp
repnz
jmp
flds
sub
rorl
or
and
adc
out
jp
scas
imul
pop
pop
pop
test
mov
dec
push
mov
in
cwtl
sarl
int3
xchg
cmc
js
mov
mov
pop
mov
fnstsw
mov
cmc
cld
mov
sub
insb
rorb
xchg
movsb
adc
hlt
in
aad
lcall
or
into
sbb
call
mov
sub
mov
xor
xchg
mov
lea
addb
cmp
in
inc
jecxz
push
adc
gs
mov
lods
test
mov
ja
sbb
add
adc
inc
clc
es
xor
test
and
xor
mov
and
mov
jno
pop
loop
call
inc
fnstenv
push
andl
shr
lock
push
lods
into
xchg
dec
das
int3
mov
loop
imul
jle
sub
sub
and
aas
dec
ljmp
mov
cltd
mov
pusha
sahf
enter
jnp
aad
int3
testl
fiaddl
cmp
or
push
aaa
clc
mov
ds
sbb
movsb
mov
mov
push
push
incl
clc
mov
jle
pusha
cmp
sbb
pop
mov
cli
dec
repz
test
icebp
es
call
xchg
lods
pusha
inc
or
dec
aad
insb
push
push
add
cmp
push
lret
sub
outsl
lods
fmuls
xchg
ja
test
sahf
cld
xor
xchg
mov
dec
shll
xchg
les
mov
ret
push
loopne
mov
pop
mov
jmp
mov
shlb
sub
push
aad
and
sahf
outsl
push
test
inc
push
adc
jg
decl
imul
lcall
or
mov
adc
lds
movsl
add
sub
inc
or
cmpb
lret
add
loopne
addl
jle
ret
cmpsl
out
in
add
pop
daa
int3
mov
mov
roll
loop
test
sbb
push
cmpl
inc
loop
jl
inc
adc
imul
pop
cwtl
pop
out
je
xchg
mov
mov
js
leave
cmp
rorl
jae
adc
adc
push
sub
and
loope
cmp
and
ret
shrl
out
and
iret
ljmp
lret
lret
add
fiaddl
sub
enter
add
jns,pn
hlt
popa
lcall
loope
ja
inc
lods
insb
add
jl
hlt
repz
js
int3
dec
enter
adc
leave
inc
mov
bound
lret
aaa
inc
rcrb
xor
adc
ss
push
sbb
mov
ljmp
push
lret
jns
mov
incl
push
and
out
sarl
imul
push
cld
pushf
lret
push
sbb
push
xchg
jns
and
mov
and
dec
outsl
adc
jb
sub
or
fwait
lret
sub
sub
hlt
xlat
icebp
dec
sbb
lsl
cmc
sub
ss
popa
arpl
dec
dec
xchg
rolb
es
jo
jl
pop
shl
rorb
mov
lods
mov
aaa
fmull
rcll
jbe
int3
sbb
popa
push
jle
fucomp
jne
mov
jg
scas
icebp
sarl
cmpl
int3
or
adc
mov
mov
gs
jae
jo
or
popa
add
and
add
cmp
arpl
jmp
push
cmp
cwtl
adc
xchg
and
cwtl
movsl
lock
icebp
gs
cltd
or
dec
cmpsl
xchg
dec
add
mov
ljmp
pop
jecxz
xor
mov
aas
lcall
jg
mov
inc
jmp
push
orb
mov
mov
adc
jne
or
incl
add
sub
aas
test
adc
jo
repnz
ret
sub
adc
pop
dec
add
pop
adc
jmp
xor
add
mov
add
cmp
clc
mov
ret
push
mov
arpl
outsl
adc
mov
iret
push
mov
cld
mov
sbb
pusha
aam
lods
mov
insb
pop
push
lock
lds
cltd
gs
mov
dec
cli
lea
mov
or
dec
int3
test
ficoms
cmpsl
cli
imul
mov
es
push
addr16
cmp
cmpl
rcr
pop
xor
pushf
pop
jge
mov
cmp
ja
je
and
and
insb
ret
incb
pop
pop
shrd
push
mov
cmc
mov
inc
mov
push
and
mov
test
loope
or
cli
add
loopne
fs
sahf
xlat
fisttpl
popa
shlb
cmp
pop
xchg
pop
pop
int3
rclb
aaa
fwait
adc
jg
mov
add
add
lcall
mov
cli
push
ds
loop
mov
jne
xchg
shll
lret
push
jo
faddl
mov
dec
movsb
stos
loopne
rol
sbb
in
call
scas
divl
adc
and
int
add
mov
xchg
test
enter
mov
mov
adc
outsl
sub
jl
cmc
xor
add
mov
jnp
sbb
jo
sbb
into
and
xchg
push
push
dec
dec
nop
aam
sahf
orb
add
mov
cmc
or
adc
arpl
popf
mov
add
aam
inc
pop
mov
mov
sbb
les
jmp
inc
stc
pop
int
fsts
int3
ja
inc
adc
add
subb
popl
or
xchg
inc
int
push
jmp
lcall
cmp
pop
orb
testl
inc
sbb
inc
icebp
data16
mov
cmp
das
popf
imul
fidivrs
xchg
sbb
cmc
lods
cli
cli
clc
cli
pushf
scas
adc
inc
mov
and
pop
push
test
add
adc
fstpt
lahf
orb
icebp
fs
push
inc
sub
lds
addl
or
pusha
out
mov
aam
stos
ud0
jae
ljmp
ds
xor
sbb
pop
mov
test
fldenv
and
pop
test
outsb
hlt
and
clc
aad
pop
push
outsl
cmp
jno
push
mov
test
mov
push
rcrl
jmp
inc
pushf
sbb
pushf
mov
pop
jns
aaa
sti
xor
and
call
cmpsb
aad
cwtl
cli
movsl
jb
insl
or
lods
push
mov
movsb
or
and
pusha
les
dec
mov
sub
mov
inc
push
mov
and
lock
and
bound
test
out
sub
pop
inc
xchg
sub
les
cld
ret
add
fdivs
jl
sub
add
or
push
ja
adc
rol
hlt
xor
shll
pushf
dec
scas
stc
pop
sbb
stos
pop
rcll
std
and
mov
orl
out
fistpl
scas
aaa
inc
xor
mul
loopne
mov
pop
dec
xlat
clc
test
stos
add
test
pop
cltd
enter
pop
cmp
mov
mov
out
pop
ds
out
cmp
in
imul
xor
call
loope
std
or
hlt
or
out
mov
push
movsl
pushf
or
repz
dec
jo
xchg
ss
lods
adc
movsl
mov
scas
aaa
lret
cmpsl
or
out
jg
push
mov
push
sub
outsb
mov
adc
xor
loop
lahf
xor
mov
xor
shlb
in
cli
push
or
imul
sbb
lods
cltd
cmp
pop
pop
jecxz
mov
pop
dec
add
push
push
call
lret
test
sbb
cmc
sbb
xchg
inc
jmp
test
sbb
es
shrb
inc
xchg
mov
push
stos
in
nop
push
mov
xorl
add
or
fnsave
xor
in
les
jmp
xchg
push
and
inc
insb
rol
mov
pop
or
sub
in
cs
xchg
mov
mov
pop
fprem1
cld
push
std
and
xor
sbb
adc
outsl
inc
stc
loope
ds
xchg
sbb
mov
daa
scas
cmp
out
mov
lcall
pop
mov
lret
outsl
jg
pop
mov
out
add
fs
rcr
xchg
int
cwtl
nop
lods
loope
sbb
inc
test
insb
xor
inc
imulb
outsb
in
test
data16
xchg
pop
data16
dec
xor
inc
inc
inc
std
cmpsl
mov
or
adc
xor
mul
cmp
popf
pop
push
sbb
outsl
subb
pop
sub
cmc
dec
sub
push
or
aad
inc
mov
daa
xor
or
adc
sub
ss
sbb
mov
or
ret
dec
dec
or
and
stc
rorb
imul
adc
aas
cwtl
jmp
push
add
imul
cld
or
testb
test
fists
sahf
cmp
call
rcrb
ss
imul
jne
test
mov
xlat
and
jno
lahf
xchg
adc
dec
loope
popf
push
pop
mov
adc
mov
popa
mov
add
insl
lret
pop
xor
xchg
jl
add
xor
jo
and
adc
lock
rcrl
hlt
lcall
jmp
scas
jne
pop
pop
mov
int
or
je
ljmp
sub
test
push
aas
adc
imul
jo
add
js
out
sbb
call
dec
sub
xchg
imul
repnz
sub
cmpsb
jecxz
arpl
or
xchg
pminsw
mov
popa
sbbl
inc
push
lods
jo
cmpl
mov
inc
jp,pn
pop
pop
int3
xchg
inc
or
enter
dec
jns
gs
ret
sub
jo
jl
icebp
jmp
ret
dec
shrb
xchg
fidivrs
add
sbb
test
jmp
sahf
mov
push
xchg
inc
int3
jge
mov
inc
jno
push
xor
into
mov
mov
aad
push
pop
cld
dec
cld
bound
gs
shlb
adc
sub
in
jae
dec
cmp
xor
adc
ljmp
rcrb
xlat
aad
in
jecxz
dec
test
hlt
mov
mov
mov
mov
decb
mov
mov
lahf
aad
pop
and
pop
dec
lods
sbb
repz
jge
cmp
outsb
jecxz
inc
xor
rorb
icebp
inc
sbb
inc
rcll
hlt
mov
add
fstpt
sti
imul
pushf
jbe
call
sbb
xor
pushf
mov
lds
out
in
out
cmp
pop
or
dec
hlt
or
push
rorb
repnz
sarb
xchg
inc
xor
add
mov
test
das
xor
pop
jae
sub
or
lds
push
cmp
mov
mov
adc
xor
cmp
jb
and
fsubrl
pushf
out
jg
test
repnz
dec
lods
in
push
sbb
cmp
inc
outsb
xor
push
cwtl
dec
test
or
or
loopne
out
jns
imul
add
ss
mov
jecxz
xabort
shr
ficompl
ficompl
push
pop
ljmp
push
sub
filds
adc
mov
jle
cmp
cmp
incl
clc
sub
jne
or
xor
hlt
sbb
cmc
dec
inc
jo
jb
sub
shl
mov
lcall
sbb
and
pop
das
mov
imul
jnp
xor
adc
stc
out
jnp
xchg
add
xor
pushf
icebp
adc
adc
inc
ds
sbb
cmc
aam
jl
cmp
inc
outsb
insb
pop
mov
sub
popf
adc
stc
fiaddl
xchg
mov
lcall
lock
out
push
lret
int3
dec
vmread
icebp
incb
movsb
int3
mov
shl
nop
test
mov
cmp
movl
pop
push
ds
shl
jl,pt
fidivrs
pop
mov
filds
jbe
push
shlb
out
adc
xor
jmp
pop
adcl
add
mov
or
push
pop
out
dec
in
sub
addr16
in
das
push
xor
fucom
sub
sbb
push
jl
or
push
out
cmp
std
push
cs
loope
cltd
sbb
cmc
into
adc
push
mov
sahf
adc
cwtl
les
mov
and
in
xor
addr16
mov
jbe
mov
aas
add
scas
adc
mov
and
outsl
jp
mov
mov
mov
or
fcompl
cld
pop
pop
pop
shrb
outsl
pop
xor
cmp
sub
loop
cmp
fidivrs
shll
mov
adc
jle
or
adc
sbb
out
icebp
mov
mov
mov
sub
mull
xor
xor
xchg
xor
cmp
nop
out
pop
lods
or
sub
mov
ret
xor
nop
loope
ficomps
mov
mov
dec
xchg
sbb
mov
cmpsl
inc
sbb
out
loopne
das
stos
or
sbbb
inc
push
cs
pushf
adc
stos
jmp
xor
add
ja
mov
add
arpl
sub
les
and
lret
icebp
inc
xchg
mov
xlat
xor
js
sbbb
jg
jo
jge
mov
push
subl
inc
cwtl
test
sub
clc
sbb
jl
or
mov
cmp
ljmp
mov
stos
xchg
push
enter
xor
xchg
mov
sahf
fstl
stos
xchg
lock
not
mov
push
cli
shlb
mov
add
add
sbb
xchg
add
pusha
add
xor
xor
mov
jmp
pop
scas
or
cmpb
imul
adc
add
mov
les
push
add
insb
sbb
jne
dec
pushf
xchg
mov
xor
cmp
lods
mov
fstl
aad
add
imul
mov
cmpsb
iret
and
int3
inc
cmp
mov
rclb
cwtl
rol
xor
pop
pop
mov
mov
or
jmp
push
push
cmp
dec
je
stos
and
push
sbb
lds
xor
inc
push
shll
test
cmp
mov
das
aaa
cmpxchg
jno
dec
jecxz
ret
mov
sbb
aad
or
arpl
icebp
std
push
jnp
and
and
das
push
sub
jo
aaa
test
stos
jge
and
mov
mov
or
xchg
mov
int3
mov
ficoms
popf
or
out
cld
icebp
shl
cli
cltd
mov
sti
scas
push
popl
test
imul
aas
jne
stos
mov
sbb
adc
jnp
or
or
stos
les
push
sub
mov
jno
mov
dec
add
adc
cmpsb
or
sbb
repz
aam
inc
push
and
jo
mov
repz
mov
std
jb
dec
or
pop
ja
jmp
sub
mov
bound
dec
or
push
pusha
and
pop
xchg
xor
inc
dec
mov
inc
lahf
bound
adc
rcr
sbb
sahf
jmp
mov
sbbl
fldcw
adc
shll
sub
xchg
ja
cmp
sub
lret
dec
pop
jns
stos
pushf
or
pop
out
shll
add
repnz
sub
sbb
out
inc
mov
jge
sub
hlt
jle
mov
arpl
cmp
popf
or
adc
test
xchg
pop
add
mov
inc
xor
sub
mov
mov
or
add
in
mov
out
dec
push
imul
add
push
adc
xchg
inc
sub
xchg
test
addr16
imul
fmuls
clc
into
gs
pushf
fs
push
loope
dec
popl
cltd
mov
je
push
lret
in
dec
js
sub
popa
test
fwait
les
repnz
loop
leave
push
movsl
mov
call
jge
imul
cmp
jbe
mov
and
rorl
sub
or
and
mov
rclb
sub
dec
add
fistpll
xor
out
or
push
sbb
clc
fcomi
test
jne
or
int
repnz
imul
add
aas
nop
mov
pop
push
xchg
cmpb
sbb
mov
adc
popa
jb
out
call
sub
adc
add
mov
push
rcll
adc
fdivs
dec
xor
int3
je
xchg
rcr
mov
xchg
popf
pop
xor
mov
lret
enter
mov
add
jae
scas
inc
sbb
xchg
inc
mov
iret
xor
imull
pop
je
add
sub
cld
dec
mov
xor
test
lea
into
xor
insb
fildll
sbb
xor
test
mov
mov
and
xor
into
mov
arpl
in
mov
movsb
loop
inc
adc
pop
mov
imul
push
pop
cmpl
fs
sarb
mov
adc
subb
insl
in
sub
pop
and
lret
add
lret
out
pop
lret
aam
inc
jle
pop
test
pop
cs
aad
xor
ds
lods
lds
jmp
push
inc
adc
push
adc
flds
in
scas
fstpt
repz
inc
add
or
int3
pop
in
mov
nop
xor
imul
scas
or
shll
mov
mov
int3
and
std
cmp
enter
test
xchg
clc
js
ret
sub
addb
mov
aad
xorb
fdivs
imul
dec
adc
inc
dec
jl
cld
gs
sahf
add
mov
add
cmp
mov
inc
push
or
aaa
jmp
mov
add
inc
mov
adc
dec
add
sub
data16
fistl
out
mov
sti
jge
and
or
lcall
jecxz
xchg
rolb
inc
push
cmp
fdivrs
mov
add
xchg
ljmp
mov
sbb
shll
jp
cld
out
popa
sbb
ds
jp
add
pop
dec
jecxz
lock
xchg
mov
xchg
cmp
or
or
xchg
in
cmp
mov
jne
jns
jo
inc
add
clc
fbld
pop
or
addr16
push
sbb
fldl
subb
fisttpl
dec
fisubl
push
stc
ret
fsubrl
add
lcall
test
inc
pop
jne
add
in
xchg
loope
lods
loopne
cli
pop
cli
add
push
loope
es
jg
add
xchg
imul
out
cmp
dec
mov
jb
cmp
popa
in
mov
arpl
popa
arpl
inc
dec
xchg
clc
in
mov
dec
xor
cmp
mov
push
in
je
fwait
or
push
daa
das
and
push
inc
jmp
cs
ret
or
sbb
add
pop
inc
xlat
pop
jg
lods
pushf
stos
outsl
mov
xor
bound
push
push
clc
push
dec
add
mov
bound
pop
push
scas
xchg
and
xchg
jae
les
out
add
cwtl
push
and
mov
mov
inc
popf
sub
popf
pop
jb
jo
push
call
insb
dec
repnz
and
ficomps
das
fsubl
mov
loopne
cmp
nop
cmpsb
fisttps
cmp
insl
out
cs
lods
push
arpl
xor
and
arpl
mov
out
add
rclb
imul
mov
xor
jne
mov
pop
testb
sub
mov
dec
test
pop
idiv
push
sbb
mov
mov
loope
in
and
shll
pop
xor
hlt
pop
and
jne
rclb
int
fbld
cmp
fstps
pushf
das
adc
fbld
dec
inc
cmp
inc
stc
mov
jae
lock
add
sub
cmpl
xchg
lahf
jno
xchg
outsb
cmc
jmp
mov
pop
shr
mov
lock
push
lahf
movsb
sti
and
stos
test
push
stc
bound
call
fcoms
daa
inc
je
fisubrs
adc
fsubp
push
jns,pn
jb
clc
les
insb
sbb
adc
adcl
roll
inc
add
movsl
ss
mov
or
sub
fwait
jmp
push
fisubrl
push
mov
inc
call
in
mov
xor
jb
fnsave
cmp
xor
daa
loope
push
pop
or
lret
stos
mov
fcompl
cs
mov
or
call
int
mov
addr16
pop
push
pop
and
push
test
sbb
aam
inc
fldl
sub
shll
jg
and
std
mov
scas
inc
imul
jp
xchg
mov
inc
mov
cmp
adc
sarb
out
out
push
fwait
inc
sbb
sbb
les
pop
shlb
mov
push
lahf
js
pushf
add
fxch
xor
sahf
xor
sti
add
dec
mov
mov
pop
pop
mov
and
add
xchg
lea
cmc
pop
sub
push
push
dec
jmp
push
pop
insl
pop
or
xchg
pop
sub
test
add
lcall
sahf
hlt
add
stos
jno
sub
pop
ret
int
lahf
nop
test
push
or
jbe
or
test
and
in
daa
push
rcr
jle
pop
mov
xchg
cltd
pop
loopne
sbb
ljmp
ficoml
jo
adc
ljmp
popf
cs
cli
mov
lea
add
mov
imul
mov
xorl
add
and
out
push
xchg
jge
fwait
lock
rcrb
dec
mov
sahf
stos
in
call
adc
popa
sub
push
aas
test
loope
ja
dec
inc
sarb
cmp
add
test
and
xchg
dec
out
sbb
lea
ret
jmp
ds
pop
cmp
or
inc
jbe
scas
mov
adc
insl
push
stos
sub
or
jp
mov
test
push
in
pop
out
sti
pop
add
repnz
add
push
or
sbb
adc
xlat
push
xorl
push
je
fsubs
sbb
mov
scas
fwait
add
push
adc
cmp
xchg
les
or
mov
push
pop
sbb
xchg
je
lahf
pop
cltd
stc
clc
cmp
jmp
imul
push
rcr
push
mov
or
push
push
mov
inc
cmc
pop
xor
insl
push
mov
mov
ss
inc
pop
jae
pop
pop
jl
dec
mov
mov
iret
andl
aam
cmp
call
lods
dec
mov
dec
jmp
mov
sub
cmpsl
stc
mov
rcl
pcmpeqb
imul
push
mov
int
dec
xchg
jo
fstps
pusha
scas
or
mov
push
xor
add
jg
je
rorl
push
pop
mov
inc
aam
mov
daa
ret
pop
fisttpl
stc
lock
push
cmp
sub
mov
adc
fistpl
mov
jb
int
in
sub
sti
push
sub
int
and
xor
dec
xchg
in
mov
pop
out
gs
xchg
sub
and
adc
nop
enter
aas
call
stos
or
pop
jbe
or
adc
dec
enter
insl
in
fiaddl
lcall
stos
aas
sbb
mov
dec
push
popf
pop
adc
negl
or
lods
sbb
lods
cli
lods
push
fiaddl
mov
bound
ret
sub
imulb
lods
lods
mov
fsubr
es
mov
roll
xor
adc
dec
mov
dec
pop
fisubrs
imulb
mov
ss
mov
into
jne
mov
decl
sub
out
scas
cmp
inc
jecxz
cmp
loope
inc
movsb
stc
push
adc
arpl
mov
or
testb
xchg
cmpl
idiv
sbb
or
dec
fcomps
push
loop
push
gs
push
jecxz
je
jmp
mov
popf
mov
mov
arpl
paddb
test
mov
js
xchg
dec
add
mov
jp
pop
mov
es
test
adc
in
loope
add
lock
and
insb
imul
insb
ja
std
xchg
test
cmp
imul
fprem1
dec
aaa
fcoml
fcoms
pop
ret
push
stc
sti
pop
lahf
dec
aaa
mov
sbb
cli
jmp
ficoml
xchg
push
out
add
cmpsb
pop
in
aam
sub
and
popa
or
fdivrl
jo
test
xor
cs
les
sbb
mov
sarl
push
mov
lods
loopew
push
outsl
xor
fisubl
outsl
pop
psadbw
xchg
push
movsl
xchg
int
inc
jo
out
sub
bound
fcomps
lahf
mov
pop
jb
scas
xchg
jl
cmc
add
lret
xor
gs
pop
leave
xor
xor
stc
cltd
sub
push
jno
adc
out
add
and
mov
sbb
in
push
fs
notb
pusha
xchg
ret
jnp
jne
test
inc
jl
mov
cltd
sbb
or
dec
push
mov
mov
mov
adc
or
adc
jnp
mov
pop
addb
sub
cwtl
mov
fsts
repnz
adc
add
stos
adc
jne
cld
jmp
sbb
inc
inc
inc
ds
mov
push
pop
or
call
daa
jne
jo
push
add
jge
popa
out
cli
fcoml
xlat
test
cmp
or
sub
sub
mov
inc
out
mov
adc
cld
mov
jge
pop
pop
faddl
cmp
jb
fisubl
sub
add
sbb
imul
dec
mov
pushf
and
sub
jno
dec
sbb
into
sub
pop
jl
cwtl
dec
orb
popf
jmp
in
and
scas
outsb
rol
outsl
sbb
mov
data16
xchg
fistpl
lea
and
sub
repnz
out
adc
xchg
aas
mov
subb
stos
cld
dec
aam
fnstenv
push
fildl
out
stos
xchg
push
jmp
fnstcw
xchg
out
mov
int
inc
jle
jp
push
iret
bound
shll
dec
ss
movl
sbb
cmpsb
push
jne
lret
clc
xor
ret
repz
leave
xor
xor
cmp
scas
and
mov
int
fisubs
mov
gs
lahf
jl
inc
iret
xchg
mov
mov
inc
push
jmp
into
std
mov
icebp
xor
lcall
cmp
mov
clc
gs
pop
pop
or
inc
leave
jmp
cmp
insl
mov
insb
add
leave
lods
testb
inc
sub
lods
pop
ffree
lock
pushf
ja
test
fwait
or
dec
cmp
lds
sar
movsl
mov
cld
mov
mov
jb
jmp
cmp
shll
mov
mov
lock
and
cmp
mov
jg
ret
mov
xor
mov
mov
imul
xchg
xor
int3
test
andl
in
dec
xor
lahf
inc
mov
push
out
pop
loopne
incl
cmp
or
push
sub
dec
inc
pop
cmp
repnz
cwtl
call
cmp
mov
cld
les
ficomps
arpl
iret
int3
cmp
jp
jne
stos
leave
cwtl
dec
push
call
jnp
mov
outsl
adc
cmp
sti
inc
mov
inc
inc
pusha
fisubrl
xor
mov
sbb
or
or
orl
mov
pop
xor
shrb
test
movsl
xlat
in
xor
ds
mov
test
fldenv
sbb
lret
scas
cmp
mov
add
lcall
es
dec
mov
iret
xchg
adc
leave
cmp
cmp
cwtl
jp
inc
push
sbb
arpl
sbbb
ror
sbb
mov
shll
ja
push
out
movsb
add
jb
push
dec
or
jmp
in
mov
add
adc
fwait
or
add
sbb
dec
jne
cmc
jp
fimuls
out
and
call
out
pop
add
les
or
stos
sbb
imul
xor
xor
shlb
push
add
test
and
icebp
push
pop
mov
sbb
test
xchg
or
mov
addr16
hlt
ja
mov
inc
add
mov
or
inc
sahf
inc
and
ds
call
push
mov
jmp
and
sbb
cmpsl
mov
gs
mov
sbb
fstps
jno
sti
push
cmp
cs
pop
aas
inc
ret
mov
stos
lahf
dec
mov
mov
pop
in
and
sub
xchg
or
mov
shrb
cwtl
out
enter
loope
sub
into
aad
stos
sti
jg
dec
add
in
cld
fbstp
add
lock
cmp
cmpsl
sub
shrb
inc
sbb
jg
loopne
mov
jb
mov
xchg
popa
sbb
lcall
push
movsl
jae
lea
js
lcall
add
lahf
test
outsl
clc
dec
and
pop
mov
sbb
xor
in
pop
cwtl
ret
xadd
pop
aam
test
mov
cmp
adc
fcompl
mov
jmp
repnz
or
shrl
je
or
les
sub
sub
fcomp
adc
test
dec
rorl
mov
mov
call
xchg
cli
into
dec
loopne
sbb
add
push
push
inc
movsl
sbb
add
clc
lcall
loopne
dec
inc
push
imul
in
lods
lea
mov
dec
jo
out
xorb
jne
cmpsb
movsb
test
in
out
ficoml
xchg
push
jo
mov
movsl
xor
imul
cmpsl
xchg
jae
adc
imul
push
push
inc
pop
cli
cmpsb
pop
or
push
or
jmp
and
mov
jecxz
jbe
add
and
je
cmp
xor
xor
push
push
mov
and
fwait
add
in
std
lods
dec
mov
mov
fldt
pushf
fsubl
je
call
lcall
jecxz
cmpsb
pop
cmp
pop
movsb
ficoml
xchg
lock
pop
dec
neg
xlat
xor
les
dec
loopne
scas
push
fs
dec
xchg
cmp
add
aas
out
aas
das
mov
add
gs
pop
ljmp
and
and
orb
popa
dec
or
jecxz
inc
and
mov
xor
sub
mov
xor
lods
aad
aaa
sbb
in
insl
sbb
mov
cmp
call
ficoml
loop
test
lds
mov
pusha
jmp
cmp
mov
sub
insl
mov
adc
mov
popa
out
iret
out
mov
cmp
push
add
leave
sub
cs
dec
stc
jp
lods
mov
cmp
movsl
test
xchg
icebp
and
hlt
repz
pop
mov
pop
pop
jp
adc
pop
mov
and
xor
sub
das
test
cld
cmp
mov
sbb
jmp
in
insb
sbb
or
sub
out
hlt
inc
push
sbbb
loopne
pop
lock
sub
push
lods
pop
loop
jmp
inc
inc
cmp
push
sbb
adc
lock
icebp
insb
add
icebp
rclb
push
idiv
clc
sbb
xchg
mov
das
pop
pusha
jle
cwtl
orl
lods
icebp
jnp
faddl
loop
lea
clc
push
inc
imul
mov
lret
pop
sbb
clc
xchg
rorb
sub
lahf
lock
xchg
fmuls
jo
sti
mov
adc
or
xchg
dec
or
loop
push
jnp
lret
sbb
adc
test
pop
inc
rol
sbb
cmp
pop
pop
stos
pop
sub
adc
lret
outsl
cltd
insl
jle
lods
out
jb
sti
outsw
lea
fstl
mov
pop
or
push
cmp
jmp
lods
and
add
adcl
add
lods
jb
lods
div
mov
sbb
cmp
ljmp
or
adc
gs
ljmp
je
lods
repz
dec
mov
aam
pmuludq
dec
popa
inc
cmpsl
add
pop
clc
pushf
inc
cmpsb
es
cmpb
cltd
mov
dec
inc
push
mov
push
and
pop
adc
xchg
dec
inc
js
add
imul
jmp
and
cmp
enter
fildl
stc
xor
and
cmp
cmp
insb
or
mov
mov
cld
aam
fcoml
and
out
das
scas
dec
lcall
mov
out
push
jmp
stos
out
repz
xor
mov
mov
fstpt
xchg
sahf
dec
jne
in
std
mov
add
iret
mov
jb
sbb
incl
sub
pop
loopne
sbb
sub
sub
pop
sub
arpl
inc
mov
sub
sbb
cmp
clc
out
hlt
mov
jne
ljmp
stc
test
outsl
adc
push
sti
push
xor
or
orl
and
push
push
or
mov
inc
mov
dec
fidivs
xchg
repz
push
ret
lret
test
or
outsl
jo
rorb
mov
or
mov
lock
pop
ds
add
pop
dec
cmp
shrb
dec
xchg
adc
aad
inc
mov
arpl
pop
test
lods
cltd
into
fidivl
sub
xchg
pop
daa
mov
js
in
dec
pusha
sbb
pop
lcall
or
dec
push
call
mov
push
mov
inc
lahf
adc
adcb
jno
jo
lcall
cmp
dec
into
out
imul
cmp
sub
and
or
sub
imul
les
fs
nopl
jne
std
rolb
adc
jo
js
xor
jmp
pusha
xchg
cwtl
cmpsl
shll
xor
test
adc
js
jge
push
xchg
mov
in
inc
popa
pop
push
out
ja
jge
negb
mov
jecxz
cmp
mov
add
pop
pop
cmp
sahf
xor
push
test
shll
push
je
or
popf
xchg
xchg
jno
int
xor
mov
jp
jnp
jp
out
xchg
or
mov
dec
test
in
or
hlt
and
push
and
subl
or
sahf
or
or
sarb
rcrl
xchg
jnp
testb
scas
fdiv
jae
push
loope
push
movsb
cld
mov
push
not
iret
xchg
push
or
movsb
xchg
nop
mov
pop
push
lret
stos
hlt
cmp
movsl
mov
data16
addr16
imul
loopne
and
cmp
pop
push
fucom
cmp
push
sbb
cli
or
push
out
dec
jl
sub
pop
sub
xor
into
in
movsl
test
rorb
cmc
lcall
xor
sub
lock
mov
jae
scas
push
ss
adcb
rorl
jmp
nop
sbb
dec
add
icebp
push
dec
mov
mov
jl
sbb
aaa
mov
bound
fsubr
add
lock
and
dec
sbb
fcoml
push
add
mov
push
test
mov
mov
pop
dec
int
xor
inc
mov
pop
loop
push
mov
xchg
sbbl
imul
fidivl
xchg
adc
in
push
test
je
jg
insl
fcoml
mov
adc
inc
add
neg
int3
add
movsb
stc
xlat
stos
lahf
jl
or
daa
xchg
mov
cmp
jg
pop
push
jmp
push
inc
or
test
mov
mov
dec
aad
sbbl
inc
fst
hlt
jnp
aas
sbb
test
test
cmc
shlb
bnd
fldt
idivb
aaa
sbb
push
and
adc
lds
adc
and
pop
push
sbb
push
das
pop
fdivs
fisttpl
cmp
aaa
stos
mov
icebp
xor
hlt
xchg
daa
scas
cwtl
sar
jl
xchg
loopne
mov
loop
cmpsb
or
aas
cli
pusha
fwait
jmp
jno
cmpl
hlt
je
mov
lret
mov
cmp
jae
mov
icebp
jecxz
jns
sbb
stos
test
adc
repnz
mov
jb
inc
mov
lock
aad
dec
inc
imul
xchg
add
enter
iret
loop
mov
imul
pusha
std
mov
jb
lds
dec
into
cmpsb
mulb
mov
les
xchg
int3
mov
lret
mov
jle
fistpll
daa
push
mov
push
mov
xchg
xlat
sub
lock
popf
or
sbb
push
jmp
mov
das
mov
sbb
mov
inc
jl
in
or
lahf
dec
adc
add
aas
test
in
cmpb
xor
add
xor
addr16
scas
mov
sub
sbb
mov
push
fdivrs
fimuls
nop
aam
mov
loope
add
push
xchg
icebp
in
xchg
das
cmp
cmp
hlt
ljmp
mul
xor
mov
sti
lods
stos
stos
das
rcl
cli
mov
outsb
pop
push
and
adc
imul
clc
jne
and
jmp
mov
dec
cmpb
dec
or
push
mov
mulb
negl
stos
inc
xchg
std
pusha
or
xor
and
sub
push
push
stc
cltd
jne
or
and
sub
ss
pop
pop
add
fsts
add
pop
xlat
jecxz
cmp
movsl
inc
xchg
push
cmp
pop
rcrl
aad
repnz
ds
sub
xchg
add
add
popa
mov
divb
pop
inc
mov
stc
or
jnp
lahf
scas
cmp
test
push
lods
mov
insb
adc
shl
cmpsb
dec
xchg
add
jbe
cltd
popa
lods
js
testb
sbb
mov
addl
xor
pop
or
andl
stc
mov
rcrb
and
sti
sub
jmp
pop
clc
lods
mov
mul
outsb
fsubp
mov
adc
sub
jmp
or
aam
je
sbb
sbb
and
or
adc
sub
lea
inc
lcall
mov
push
inc
jbe
stos
mov
inc
or
sti
jb
lea
add
lcall
out
cmp
and
inc
cmp
filds
cmpsb
icebp
inc
sub
and
adcb
divl
push
testb
and
inc
loope
cmp
cwtl
jg
mov
and
scas
push
arpl
adc
cmp
inc
in
jp
test
mov
loop
and
jle
adc
call
cmpl
push
sub
cmp
inc
or
bound
and
int
mov
adc
mov
dec
lahf
mov
mov
jno,pn
nop
ljmp
ret
xor
in
mov
push
cmp
dec
in
leave
andl
loopne
pop
mov
fdivrs
loope
jbe
jbe
aas
mov
nopl
xchg
xchg
icebp
shll
mov
and
xor
rclb
pop
cmp
jmp
mov
out
pop
jb
repz
push
jne
mov
sub
pop
mov
das
addb
push
jecxz
xchg
or
sub
push
push
jno
sub
ret
loopne
out
jnp
mov
js
fxch
cltd
lods
adc
scas
pop
sub
push
jno
push
fsts
or
sub
adc
sub
stos
lcall
adc
out
enter
inc
pop
adc
gs
jecxz
push
subb
push
fcoms
mov
lods
addl
out
adc
movsl
jae
cmp
jnp
or
imul
in
sbb
outsl
add
sbb
iret
cmp
mov
push
jl
and
sub
mov
cmp
xchg
pop
mov
dec
push
jge
ss
push
jp
std
nop
xor
and
add
mov
and
adc
pop
jmp
lock
fs
ds
pop
shrl
mov
jns
jne
call
xor
or
test
or
mov
jge
jns
mov
push
or
push
mov
or
icebp
inc
xorb
mov
push
in
lahf
jbe
and
xchg
sbb
inc
xor
leave
inc
outsl
dec
ret
fdiv
sbb
xor
or
fdivr
iret
xchg
ret
ror
sbb
cld
movb
mov
nop
jno
clc
data16
adc
fsubrp
xchg
dec
outsl
add
sarb
pushf
cmpsb
cmp
sti
add
jmp
xor
jns
adc
or
sahf
inc
xor
test
push
or
sub
es
inc
push
je
cmp
in
pop
div
inc
jg
out
js
xor
imull
dec
push
in
loop
and
adc
mov
loop
aam
sbb
cwtl
inc
aad
xor
add
dec
xor
pop
in
adcl
mov
fs
es
xchg
mov
das
and
in
cmpsl
loope
or
xor
ja
push
jmp
pusha
or
mov
repz
outsl
roll
pusha
pop
sub
cmpxchg8b
int
adc
sar
mov
rcl
xor
inc
mov
xchg
mov
inc
cmc
mov
xchg
xor
xor
or
xchg
dec
or
sahf
add
mov
into
and
jp
xorl
enter
push
cmp
addr16
mov
stc
fstps
cli
gs
jb
and
xlat
push
jno
cmp
sbb
mov
ret
push
shll
pop
mov
icebp
mov
addr16
pop
push
ret
sahf
sbb
aam
jecxz
ja
push
jo
lea
out
in
cmp
jb
sub
lods
cwtl
mov
inc
and
pop
int
cmp
xchg
adc
sub
je
repz
ja
jmp
insl
xchg
mov
sbb
add
ss
mov
inc
inc
and
xchg
cli
enter
mov
sub
pop
dec
loope
pop
sbb
enter
and
outsl
sub
push
je
and
sub
in
in
jb
ret
movsl
mov
xchg
push
cwtl
sub
addr16
loopne
xchg
push
sti
nop
out
jb
cmp
sbb
mov
jmp
dec
sbb
push
pushf
mov
daa
into
jb
or
pop
or
xchg
mov
dec
out
push
cwtl
aas
xor
jmp
iret
jns
and
leave
neg
mov
mov
in
jb
fcoms
mov
cli
ss
sti
cmp
ss
push
xlat
pop
or
xor
leave
xchg
adc
ret
and
jbe
cmpsb
sbb
jmp
idivl
sbb
xchg
sub
push
mov
je
sbb
ds
sub
mov
pop
mov
fsubrl
jne
pop
pop
subl
fbld
scas
mov
and
dec
mov
jns
push
gs
sbb
montmul
cmpsb
cmpb
push
sarl
pop
out
daa
push
xor
decl
repnz
xlat
and
xor
push
sbb
hlt
insb
repnz
xchg
mov
xor
popf
fbstp
stc
mov
imul
inc
xchg
and
or
cmp
test
mov
xor
inc
inc
popl
mov
jbe
add
mov
jno
jb
push
repz
push
mov
in
cmp
mov
or
sbb
scas
mov
test
ja
and
movsb
test
sub
call
cmp
sbb
xlat
pop
outsl
pop
fs
cmp
jecxz
push
jp
mov
pop
out
mov
fistpll
aas
outsb
cmp
or
outsl
lahf
lea
or
mov
pop
outsb
xlat
mov
repnz
push
cli
fidivl
xor
in
lods
inc
andl
jns
js
lret
mov
inc
je
or
mov
dec
int
xor
xchg
push
daa
nop
jl
imul
into
inc
push
je
arpl
idivl
fimuls
std
pushf
movl
inc
adc
stc
inc
mov
ja
outsb
ds
dec
popf
jae
inc
je
adc
ja
inc
cmpsb
mov
jg
cmpl
nop
dec
push
mov
mov
and
fs
nop
mov
xchg
push
dec
lret
cmc
call
cwtl
adcb
popf
in
pop
into
push
in
add
lcall
clc
cmp
test
jne
mov
hlt
clc
and
icebp
jmp
out
cmp
add
adc
mov
push
mov
popa
mov
jecxz
push
add
int3
andl
ljmp
mov
int
xor
fsub
adc
pushf
add
pop
adc
and
sbb
or
dec
lds
test
fcoml
clc
scas
movsb
pop
jmp
dec
int
jmp
ljmp
sub
jb
and
lock
sub
cmpsl
add
add
imul
jne
fs
iret
push
outsb
hlt
testb
js
mov
cltd
add
jecxz
xchg
adc
repz
xchg
mov
push
cwtl
adc
test
rclb
lret
mov
add
sbbl
push
daa
sbb
dec
cmpsb
and
aam
je
jl
out
or
daa
xor
shll
and
mov
imul
adc
out
cld
dec
sti
fildll
xchg
dec
xchg
xchg
adcl
jae
mov
pmaddwd
iret
push
les
add
pop
sub
pushf
mov
jne
xor
dec
shll
push
scas
fwait
icebp
loope
or
inc
dec
imul
popf
leave
or
sub
faddp
jmp
xchg
cmp
repz
mov
sub
or
mov
mov
and
rcll
jb,pt
mov
mov
cmp
aas
jmp
or
sub
ficompl
mov
push
or
cmp
push
call
xchg
cli
les
or
ret
sarl
ret
fcom
and
and
adc
jns
scas
in
ljmp
test
add
ret
iret
xchg
cmp
imul
inc
add
xchg
jbe
sub
ljmp
aad
test
inc
xor
idivb
xchg
pop
aas
in
cmp
hlt
push
cmpsl
cmp
mul
or
xor
dec
lret
int3
and
mov
and
inc
pop
jl
and
push
int3
les
add
cmp
xor
mov
adc
int
and
mov
xchg
icebp
push
lret
lmsw
dec
xor
add
leave
and
pusha
out
cwtl
xor
add
jo
jae,pn
popf
dec
pop
lret
rolb
js
test
jge
cltd
dec
fisttpll
ss
aad
xor
push
lock
and
inc
ljmp
or
jb
mov
pop
out
punpckhwd
adc
sub
std
mov
sbb
daa
sub
add
xor
push
ljmp
ljmp
push
imul
sbb
cld
inc
fadd
insb
or
std
sub
push
pop
into
jae
mov
in
fnstsw
mov
pop
xor
inc
push
adc
jmp
mov
and
xchg
jno
pop
push
jno
mov
push
sub
data16
jl
cwtl
jnp
push
icebp
mov
xchg
lret
iret
push
cmp
test
stos
int
ret
mov
add
pop
adc
dec
int
stc
les
loope
sbb
popa
lret
call
shr
test
jno
cli
sbb
ficomps
inc
mov
inc
into
std
mov
push
mov
jb
mov
loopne
int
mov
adc
add
pop
and
jae
and
xor
xchg
jo
fists
loope
adc
sbb
push
aas
or
mov
mov
popa
out
in
xor
lock
jb
xchg
mov
nop
inc
sub
fildl
ret
xchg
push
inc
ja
mov
setne
clc
call
shrb
cmp
int3
xchg
sub
nop
ror
lahf
mov
or
mov
dec
xchg
jmp
pop
ja
xchg
mov
aaa
jbe
in
fsubrs
in
xor
gs
pop
stos
hlt
call
xor
and
jns
aas
inc
xchg
lds
mov
icebp
popf
divl
sbb
add
jbe
cmp
shlw
mov
add
call
test
or
jmp
push
push
cmc
or
icebp
dec
inc
dec
sub
push
push
das
or
inc
or
cltd
cmc
dec
loop
push
stos
xlat
pop
inc
leave
xor
fidivl
add
jb
fldenv
cs
pop
ljmp
jne
dec
movsb
clc
cmpsl
jbe
mov
pop
dec
mov
cmp
mov
inc
mov
lcall
scas
push
sbb
mov
push
ds
or
push
xchg
in
cld
fists
xchg
les
dec
pop
xlat
sbb
arpl
mov
push
dec
sbb
test
ss
dec
in
stos
add
addl
adc
gs
push
push
mov
sub
or
and
dec
push
ja
xchg
adc
mov
fdivl
or
imull
rcr
cwtl
test
popf
add
mov
add
cs
inc
test
or
jecxz
scas
clc
adc
mov
sbb
in
fdiv
fwait
push
push
inc
or
stc
dec
clc
adc
mov
cmpsb
cmp
rcrl
add
aad
mov
jl
mov
jl
adc
pop
out
pop
sti
pop
push
adc
pop
scas
and
sbb
xor
mov
iret
jne
inc
sub
icebp
imulb
es
sub
jle
test
jo
mov
jl
fisttps
test
sbb
scas
lds
and
push
push
mov
add
adc
mov
shlb
lock
fistl
adc
jmp
test
xchg
add
je
cwtl
fiaddl
mov
sub
jle
inc
mov
mov
dec
add
dec
je
mov
jae
mov
jmp
dec
push
adc
jne
jle
dec
pop
out
sbb
scas
xchg
mov
das
jae
add
test
clc
sub
dec
scas
dec
pop
insl
sbb
ja
aas
insl
xor
lock
jle
enter
cmp
jnp
imul
int
loopne
test
mov
xchg
xchg
xchg
rolb
inc
les
lret
rcl
call
adc
cmp
mov
fcomps
jb
icebp
daa
xchg
xchg
leave
pop
xchg
pop
mov
dec
negb
shrl
fbld
or
jge
or
js
sbb
or
imul
jg
mov
negb
xchg
call
pop
xchg
xchg
repnz
xchg
pop
jge
icebp
hlt
cmpb
and
xor
push
lods
out
dec
sub
dec
mov
mov
clc
sub
ljmp
pop
mov
adc
cli
add
popa
inc
pop
xor
and
lods
cld
sbb
int3
xor
and
stc
push
call
sbb
push
push
mov
jge
mov
jge
dec
sub
mov
dec
rorb
cs
in
or
dec
push
dec
cmc
shrb
in
andps
cli
fs
push
xor
cmpsl
rep
ja
push
push
imul
mov
inc
pushf
jne
cmp
and
neg
mov
roll
fstpt
fdivrl
ret
mov
xchg
in
mov
add
insb
xor
mov
inc
xchg
and
loope
pop
and
lret
imul
fimull
sbb
or
fs
or
arpl
in
ds
sub
pop
lods
enter
or
pop
push
jg
pop
and
cmp
movlps
mov
stc
icebp
pop
inc
xchg
les
xor
or
mov
ja
jecxz
jne
daa
es
scas
out
cmpb
nop
out
cmp
ja
rclb
xchg
add
pushf
fdivr
outsl
cmpsl
jb
jo
adc
mov
std
inc
test
cmpsl
adc
xor
push
ljmp
shrl
push
xchg
push
in
call
test
inc
adcb
and
jecxz
add
cwtl
push
pushf
cmp
loopne
test
ja
outsl
mov
or
dec
cli
and
outsl
imul
sbb
ja
cmp
pop
pavgw
sub
xchg
push
mov
adc
dec
movsl
push
jmp
jbe
jmp
dec
movsb
jbe
test
pop
cmp
fildl
stc
cmpsb
cmp
mov
inc
addr16
lods
add
push
push
adc
ljmp
xchg
mov
jmp
ret
mov
popa
outsl
lods
lret
cmpsb
cli
add
xor
ljmp
out
xchg
push
xchg
arpl
sub
xor
xchg
movsl
adc
sub
aad
dec
sub
roll
adc
mov
push
ret
or
in
adc
xchg
testl
int
or
sar
mov
mov
testb
sub
fs
mov
ja
sarl
xrelease
fwait
mov
push
and
pop
jno
fdivrl
cmp
inc
mov
jmp
dec
sbb
sahf
fcomi
xor
fadd
stos
add
stos
cmpsb
sbb
cmp
cmpsb
ss
mov
sbb
ret
pop
sub
and
sbb
jb
dec
inc
dec
sbb
pop
xchg
mov
mov
stos
sbb
iret
call
push
pop
push
mov
call
or
pop
push
inc
jnp
add
test
loopne
xchg
push
mov
jg
jecxz
mov
add
sbb
pop
mov
cmp
lret
mov
jecxz
sbb
popa
mov
sub
orb
lods
in
hlt
insl
inc
add
mov
hlt
inc
mov
cltd
push
mov
xorb
hlt
loop
add
loop
cmp
add
add
faddl
inc
aam
pop
mov
hlt
mov
pusha
add
test
add
dec
jl
add
imul
xchg
rorl
jbe
fiaddl
add
in
ret
pusha
inc
mov
jb,pn
sti
daa
or
xor
shll
xor
sub
pop
mov
push
or
jns
cld
orb
mov
cmp
adc
cmp
data16
and
stc
pusha
cli
dec
cmp
sub
push
dec
daa
pop
mov
pop
jg
roll
mov
mov
insb
cli
jo
std
dec
cmp
push
lret
pop
sbb
lret
jmp
clc
or
adc
add
orl
or
jmp
pop
cltd
scas
mov
movsl
mov
lea
imul
mov
in
ljmp
xchg
inc
mov
sahf
in
add
cltd
dec
push
and
dec
push
mov
sub
rcll
aad
adc
add
xchg
jbe
or
and
mov
xchg
repz
dec
add
and
mov
ja
aas
pop
push
jge
stos
mov
fisubrs
add
push
std
stos
jecxz
dec
pop
xchg
mov
mov
ss
hlt
js
mov
movsb
xchg
imull
xor
btc
push
fidivrs
dec
push
mov
xor
sub
aad
jle
dec
in
mov
adc
mov
cmpsl
jo
loope
cs
mov
in
mov
mov
insb
lods
aad
mov
jae
mul
in
or
stos
out
inc
sbb
dec
jge
mov
dec
sub
clc
imul
jl
push
jno
cmpsl
stc
enter
jns
arpl
pavgw
icebp
pop
xor
pop
stos
cld
inc
mov
cmpb
inc
inc
push
fists
adcb
dec
xchg
shl
push
dec
add
and
fs
or
adcb
jp
xorl
jb
cmp
sarb
testb
mov
mov
enter
xlat
fildll
nop
call
push
mov
sarb
pop
hlt
mov
ret
clc
je
fidivrl
jno
mov
inc
jge
mov
lds
xchg
ret
call
gs
and
mov
imull
pop
sbb
fcomps
mov
insl
lahf
cli
aad
adc
mov
cld
dec
xor
inc
push
loopne
jnp
mov
ja
mov
pop
xor
adc
dec
jae
xor
iret
icebp
cmp
cmp
cmpsb
xchg
adc
push
pop
lea
push
ja
inc
xlat
aam
popf
sub
aaa
in
add
cmpsb
das
dec
leave
jae
jl
divl
inc
adc
pop
adc
push
mov
and
ret
jl
add
or
jno
aam
outsl
je
dec
add
in
pop
xor
loopne
pop
push
pop
add
xchg
lods
aas
inc
inc
cltd
or
push
lods
jns
push
test
xchg
jne
mov
push
out
negb
cmp
leave
lahf
or
adc
cmove
loopne
insb
mov
pop
ja
into
dec
clc
shr
add
nop
pop
xchg
push
fildll
mov
mov
icebp
fninit
and
xor
popf
popa
push
xorb
pop
pop
xchg
xor
mov
push
mov
mov
cld
nop
xlat
lock
or
mov
push
negb
mov
dec
shll
in
jbe
or
pop
add
or
dec
bound
cld
int3
fnop
push
cmpb
or
fisubrl
pop
mov
mov
call
aas
mov
add
popf
stos
xchg
cwtl
pop
add
dec
rol
repnz
lods
scas
xchg
push
ljmp
lock
cmp
jae
cmp
movl
adc
imul
adc
adc
daa
mov
daa
xchg
mov
add
mov
adc
shlb
lea
out
fs
cmp
sbb
mov
sbb
sub
jo
jp
xchg
mov
dec
pop
cmp
call
cmp
mov
mov
pop
push
and
aam
push
stos
sub
iret
pop
or
push
loope
jmp
ret
adc
sti
cmp
push
or
dec
lods
iret
mov
lock
pusha
loop
mov
xchg
lret
jl
out
ljmp
cs
push
xor
push
pusha
sub
dec
dec
cmp
pusha
or
movl
mov
push
insb
mov
cmp
jmp
cli
ucomiss
in
and
aam
aaa
xor
cmp
fwait
mov
cmp
xor
xchg
xchg
repz
fcmovnu
jmp
push
loope
and
or
fstpl
jp
add
jge
pop
clc
cmp
inc
xchg
subb
pop
popa
mov
push
daa
mov
mov
pop
xor
cmp
movsl
or
out
mov
in
sbb
jmp
aas
jbe
cld
fsubl
mov
rorb
sub
add
cmp
mov
addr16
push
stc
popl
mov
inc
fnstsw
repnz
je
push
ficompl
jo
push
roll
out
lds
ds
cmp
lahf
mov
sbb
daa
lret
or
mov
adc
repz
sarb
add
cli
ja
or
test
fs
jnp
and
adc
inc
shrb
pop
stos
add
repnz
xchg
pop
hlt
jno
pop
imul
jl
aas
lods
sub
mov
inc
stc
jl
fwait
rcrb
addr16
in
int3
fs
push
in
mov
and
std
rorb
pop
leave
jg
filds
mov
sbb
ja
ss
rol
jmp
push
push
mov
add
cmp
inc
stc
mov
jo
pushf
xchg
std
daa
inc
cmpl
jle
sbb
pop
fmul
xchg
call
stc
les
dec
xlat
roll
inc
shll
adc
xchg
push
sbb
and
push
mov
call
das
inc
sub
arpl
adc
inc
push
adc
ret
clc
xchg
push
popf
add
inc
dec
push
outsl
clc
cwtl
sahf
jno
lods
cmp
mov
in
sub
mov
hlt
imul
subb
push
lahf
adc
pop
inc
push
or
std
inc
ret
hlt
stos
scas
and
daa
and
call
cmp
cmpsl
or
lock
test
les
mov
popf
aaa
inc
dec
mov
dec
and
icebp
jo
adc
jp
outsl
sbb
dec
jp
shll
inc
lea
data16
rclb
pushf
pop
adc
enter
mov
mov
push
pusha
mov
xchg
in
loopne
fsub
sub
outsl
cmp
jg
add
sub
mov
pop
xor
and
mov
mov
das
pop
adc
mov
testl
push
mov
jmp
xchg
xchg
sbb
inc
jnp
sub
mov
pop
mov
fs
and
adc
mov
fidivrs
mov
fwait
sbb
flds
push
pusha
dec
pmulhw
into
mov
add
push
int3
add
or
jecxz
push
add
mov
or
cwtl
fcoml
hlt
sub
xor
cmpsb
xchg
ljmp
sahf
ret
add
lods
mov
sub
or
lea
jge
paddd
mov
ja
push
scas
jmp
mov
loope
movsl
lea
lods
push
dec
pop
inc
inc
dec
fwait
pop
jp
mov
popa
jge
add
loope
or
inc
xor
jg
jp
inc
inc
xor
insb
add
cmpl
insl
cs
mov
fstl
fst
and
mov
cltd
inc
and
xchg
std
sub
fstps
mov
inc
or
jge
lcall
and
and
in
inc
or
jg
loop
push
dec
inc
ret
xchg
mov
or
fldcw
xor
cmp
data16
inc
pop
outsl
mov
pop
test
int
pop
or
jg
mov
pop
int3
mov
aam
adc
pop
pushl
adc
xchg
dec
test
jmp
jns
inc
in
adc
push
pop
xor
loope
dec
push
popf
fisubrs
pusha
mov
mov
movsb
aam
ret
inc
in
push
fwait
add
xor
mov
fcompl
dec
cmp
das
call
jle
ljmp
call
cmp
nop
cltd
and
movsl
lock
arpl
int3
xchg
cmc
mov
lret
xor
push
loop
pop
or
test
loopne
xchg
sub
xchg
cli
dec
push
or
and
mov
insb
jae
mov
pop
imul
notb
lods
mov
dec
push
jbe
dec
mov
and
imul
push
mov
popa
movsb
dec
nop
inc
xlat
imul
jmp
push
popa
hlt
jle
call
dec
fistpll
mov
xchg
mov
pop
cmpsl
bts
nop
adc
lret
xor
dec
pop
sti
js
add
xor
lds
or
xor
es
mov
cmc
push
push
push
mov
fisubrl
data16
mov
sub
icebp
imul
push
jle
ficoms
dec
dec
cmp
push
rclb
test
movsl
shr
jae
mov
and
jl
push
cli
sbbb
sub
das
inc
mov
dec
and
add
xchg
movsb
pop
lret
stc
pop
aad
sbb
push
shrl
repnz
and
jne
outsb
xchg
je
repnz
mov
fs
jmp
test
xchg
addr16
cmp
pop
mov
sbb
jae
push
fs
cmp
jnp
xchg
or
or
sbb
das
rorb
cmp
es
aaa
and
add
movsl
or
scas
adc
inc
addr16
xor
push
xlat
loop
fildll
repz
lock
ljmp
jo
adc
adc
or
jno
xchg
je
adc
pop
out
fsubrp
fcoml
shlb
mov
pop
fwait
mov
stos
loopne
push
and
push
addr16
jl
adc
or
or
test
xor
or
sbb
inc
jbe
push
xchg
ljmp
pop
sub
mov
or
push
or
int3
mov
xor
jne
inc
pushf
cli
call
mov
scas
lret
rcl
xchg
mov
and
lea
pop
dec
inc
popf
incl
pushf
mov
imul
sub
movsb
cs
mov
cltd
xchg
jp
nop
jno
cmp
dec
xchg
xor
and
rcll
inc
out
jg
mov
dec
leave
es
push
jnp
and
into
jmp
fcmovne
daa
inc
xchg
sti
adc
add
sahf
cmp
lret
in
test
jnp
mov
mov
test
fdivrl
push
xchg
rolb
mov
or
sahf
aad
loopne
push
dec
pop
and
hlt
aas
inc
jmp
adc
xchg
and
jmp
lret
dec
ljmp
arpl
pop
stc
mov
cmp
push
cwtl
pop
popa
testb
push
lods
xchg
adc
dec
push
and
or
adc
ss
jecxz
mov
in
and
mov
jecxz
sbb
xchg
lret
adc
cmpsb
fmulp
or
inc
rorl
jp
arpl
adc
and
call
enter
jnp
loopne
sar
lods
mov
dec
jo
inc
and
mov
add
divl
test
inc
prefetch
or
push
push
mov
xchg
sub
or
fs
push
dec
jo
sbb
bound
fmull
cmc
shlb
push
leave
inc
std
jge
sbb
inc
daa
mov
sub
sti
aaa
popf
lock
cmp
sbb
cltd
push
xor
mov
enter
aam
xchg
or
loopne
xchg
cmp
xchg
in
std
jns
cmp
aad
sub
fs
mov
loope
or
pop
cmc
imul
call
xchg
lock
sub
popa
movsb
sbb
jmp
jnp
inc
dec
lea
sbb
push
sahf
dec
adc
clc
mov
addl
jg
push
mov
fistpll
mov
adc
or
dec
lock
cmpsb
pop
cmova
mov
inc
cmp
mov
lock
sbb
dec
iret
pop
adc
sub
push
pop
sub
mov
add
mov
xor
fimull
and
mov
and
mov
movsl
loope
xchg
pop
pop
jmp
xor
lds
loopne
sahf
test
call
mov
inc
mov
lods
testb
lahf
lods
inc
ja
sub
mov
and
cld
jne
jecxz
fstpl
adc
mov
adc
xor
add
pushf
xchg
enter
jle
xor
clc
pop
mov
push
stos
cmp
push
leave
jge
push
mov
pop
in
in
lcall
scas
push
and
pop
xchg
and
test
enter
xchg
pop
inc
or
xor
enter
arpl
sub
ret
jle
stos
loope
xor
scas
push
pop
add
pop
shll
in
sbb
in
lods
pop
shll
sbb
add
stc
add
or
and
mov
dec
push
cmp
sub
scas
addb
add
inc
xchg
in
mov
pop
fadds
cmp
nop
dec
jne
mov
out
xor
xor
jl
jge
pop
in
add
loope
arpl
push
adc
add
inc
adc
and
jmp
add
mov
push
adc
mov
mov
sarb
dec
pop
adc
js
in
jo
fwait
or
mov
fcompl
outsl
sbb
mov
dec
push
out
fildl
fcoms
jo
out
pop
pop
and
adc
xor
cli
adc
ds
nop
and
pop
sbb
mov
test
lea
cmp
dec
add
loopne
xchg
lock
push
cmp
sub
mov
lea
lret
push
lahf
popf
inc
mov
xchg
mov
add
sub
or
dec
cmp
jl
mov
loopne
xchg
fcom
cmp
jne
shr
adc
sbb
cld
or
movsl
inc
and
jb
push
shl
add
and
jbe
mov
loope
cmpsb
movsb
xchg
shl
or
jmp
std
xor
subb
popa
mov
inc
adc
mov
mov
andl
lock
push
imul
outsl
adc
repnz
jnp
outsl
add
cltd
insb
cltd
xchg
push
mov
mov
loopne
push
jno
or
xor
or
jmp
ret
sbb
cmpsb
add
inc
jns
pop
mov
push
inc
mov
and
std
dec
push
enter
push
jae
inc
adc
sbb
outsb
ret
das
adc
sbb
fildll
xorb
or
lods
adc
xorb
lahf
rcl
js
sbb
xor
jmp
or
push
stos
pop
repz
sbb
sub
sbb
add
sbb
outsb
mov
push
lods
lds
or
sub
cmpsb
and
idivl
bound
adc
xchg
out
adc
xor
pop
pop
pushf
adc
scas
negl
adc
in
jae
xor
cld
fldlg2
outsl
push
xchg
ja
xchg
jbe
sbb
pop
test
lods
lock
or
stos
mov
je
inc
push
or
mov
push
sbb
dec
rcr
stc
xchg
lods
xor
nop
push
and
push
xacquire
ret
scas
jnp
repz
enter
movsb
dec
xor
mov
les
aad
sub
insl
aaa
push
sub
loop
outsb
subb
or
cmpsl
add
mov
loope
and
test
mov
popa
sub
cmpsb
out
xchg
mov
ja
or
ds
jne
flds
insb
not
pop
shlb
lods
adc
or
push
jmp
scas
jp
inc
jmp
xchg
arpl
and
movsl
inc
divb
add
cwtl
cli
push
lret
lret
movsl
aaa
sbb
and
lret
sbb
stos
mov
movsb
push
sub
sbb
dec
popa
lahf
js
stos
push
out
cmp
jle
cwtl
popf
xchg
inc
cmpsb
push
cmp
sub
and
jns
and
or
and
add
hlt
daa
mov
repz
and
bndstx
sahf
lea
jmp
or
mov
repnz
jg
or
insb
out
add
xchg
jge
push
mov
mov
xor
mov
add
push
in
push
pop
hlt
dec
cmc
pop
je
bnd
jns
imul
and
rclb
cltd
jmp
aad
push
adc
cmp
jg
and
mov
push
adc
and
stos
add
cwtl
lret
rcr
aam
or
add
jno
xlat
ja
sbbb
pop
mov
sub
sub
sbb
insl
lret
push
mov
xor
xchg
add
push
out
ljmp
adc
popa
or
pop
xchg
popa
fcmovbe
rclb
aaa
das
xchg
and
addr16
out
jmp
mov
inc
sti
cmp
jb
seta
bound
push
cwtl
and
inc
rorb
repz
inc
inc
mov
push
in
inc
dec
fimuls
enter
mov
repnz
pop
push
and
loopne
addr16
mov
popa
divl
outsl
jno
push
pop
mov
mov
adc
iret
in
aas
mov
mov
in
pop
dec
mov
rorb
imul
movsl
cmpsb
push
adc
fmull
add
or
dec
xlat
xchg
sbb
mov
mov
adc
xrelease
inc
xchg
inc
cmp
or
inc
lock
das
pop
pop
mov
jmp
pop
or
jbe
ds
jno
subl
adc
jo
cmp
inc
sbb
mov
into
add
dec
jle
push
enter
stc
push
push
lods
pop
sub
inc
cmp
aaa
sbb
sub
mov
mov
push
mov
xor
dec
push
jg
in
mov
sahf
xor
jecxz
aam
xchg
adc
xor
icebp
call
arpl
push
inc
stos
movsl
sub
mov
js
add
pop
les
or
xchg
movsl
fdiv
jmp
or
mov
dec
add
sbb
sub
cmp
movl
cmpsl
sbb
pop
adc
xchg
in
bound
iret
xchg
mov
loopne
out
push
loopne
mov
out
xor
pop
push
mov
hlt
loope
js
xor
lea
out
fstps
popa
test
into
or
repnz
jle
add
push
lea
cmpb
pop
pop
iret
ljmp
cld
lahf
pop
mov
or
pop
adc
inc
lods
inc
add
jmp
add
sbb
inc
inc
pusha
pop
cmp
add
adc
mov
xor
ds
adc
inc
sbb
or
mov
xlat
add
xlat
push
mov
addr16
mov
inc
push
nop
out
loop
push
popf
mov
cmp
lds
jge
mov
mov
adc
aaa
push
mov
int3
adc
push
pusha
aas
pop
jnp
test
mulb
sahf
adc
xor
mov
xchg
stc
das
test
ss
hlt
lea
or
lock
cpuid
dec
inc
xor
mov
pop
lret
mov
cmc
jp
jmp
adc
out
shll
fadds
jnp
add
add
push
xlat
add
mov
out
or
sub
in
in
testl
shrb
add
sub
sub
mov
jbe
std
xor
cld
outsl
inc
sub
stos
gs
rolb
push
inc
or
jo
xchg
cmp
jmp
out
xchg
les
ret
mov
bound
dec
or
and
and
fdivr
sub
dec
cli
jae
sbb
jno
mov
mov
dec
sbb
adc
scas
pop
pop
push
or
icebp
cmp
xchg
ja
sahf
cmp
and
xchg
and
das
or
ljmp
jb
jo
fnstcw
or
cmc
push
jns
scas
inc
xlat
jg
cwtl
jmp
sti
inc
dec
cmp
notl
and
mov
cwtl
mov
das
outsb
inc
jecxz
arpl
fnstenv
lods
xchg
sub
or
sar
lods
adc
lret
add
push
jp
bndstx
ljmp
xchg
test
cli
xchg
inc
scas
flds
test
outsl
ljmp
ds
loopne
xor
inc
xchg
sbb
cmp
idivl
xchg
sub
and
insl
cmp
add
push
int
in
enter
adc
stos
xchg
ja
loopne
sbb
adc
sti
aad
lret
loop
cs
fstl
pushf
imul
imul
rcrl
movzbl
or
test
mov
fcoms
outsb
fldcw
insb
cmc
or
cmovno
lcall
inc
xor
pop
mov
or
in
mov
les
sti
xor
dec
cmp
jp
lea
push
testl
aas
mov
and
and
add
mov
dec
mov
orb
push
orb
mov
rcl
pop
adcl
jb
jmp
test
imul
imul
out
push
push
cwtl
aam
cmpl
sub
fmuls
xor
ret
mov
dec
sub
je
arpl
adc
dec
xchg
stos
cmp
cmp
pusha
adcb
stos
mov
mov
push
ret
in
pushf
fwait
dec
dec
push
pop
loope
mov
xchg
hlt
fwait
mov
push
loopne
sbb
sub
adc
outsb
enter
subl
cmp
arpl
mov
fs
cwtl
cs
clc
insl
sbb
imul
inc
pusha
xor
dec
cltd
leave
adcl
les
dec
push
inc
hlt
cltd
js
add
add
pop
push
push
stc
scas
push
dec
out
jnp
cs
addr16
sub
adc
aas
sbb
js
les
inc
add
or
jge
or
ret
pop
jmp
pushf
lcall
gs
loopne
leave
push
mov
inc
or
divl
or
jp
andb
inc
stc
sub
adc
mov
mov
mov
sbb
or
pop
loop
push
pop
leave
push
pop
jne
jne
sub
loop
and
nop
push
jge
outsb
fbstp
mov
jge
mov
imul
pop
dec
shl
dec
cmp
imul
cltd
aaa
dec
clc
add
fiadds
sarl
mov
pop
adc
adc
add
sbb
xchg
leave
movq
and
mov
scas
adc
roll
sub
adc
dec
cmp
xchg
cmp
pusha
mov
pop
and
daa
dec
sub
lods
repnz
pop
popl
mov
sahf
and
dec
mov
jnp
mov
enter
jo
adc
sbb
xorl
mov
mov
shrl
xchg
pop
rcll
inc
jmp
push
lock
into
fadds
inc
add
sub
xor
cmp
mov
dec
stc
add
imul
push
cld
rcrl
sbb
sbb
and
and
addr16
lds
out
and
inc
popl
les
xor
popa
loope
loopne
adc
inc
scas
and
lods
mov
and
sub
and
cmpsl
or
mov
leave
lds
popa
ret
sbb
add
hlt
and
inc
sbb
or
movb
stos
call
clc
xchg
in
les
add
loopne
adc
repnz
sbbb
insb
pop
call
pop
test
add
sub
pop
aam
inc
stc
or
stos
pushf
and
enter
mov
inc
ret
test
call
in
cli
jbe
push
and
mov
fcompl
xor
rcrb
push
ljmp
pushf
xchg
addr16
xchg
or
in
mov
pusha
or
xchg
repnz
cli
sbb
sub
pop
mov
dec
mov
adc
or
and
push
insb
imul
push
xchg
lds
adc
ret
add
fcomp
pop
mov
addr16
nop
add
and
cmpsb
shlb
negl
mov
cmpl
pop
sub
xor
pusha
imul
dec
push
out
sbb
jb
div
testb
jnp
jnp
xlat
rclb
pop
leave
dec
in
int
loopne
mov
jg
in
push
mov
stos
lea
push
push
imul
xchg
cmpsl
call
js
sahf
sbb
popa
sti
ja
fimuls
sti
ret
cmpsl
aad
mov
xchg
dec
push
jmp
or
jge
dec
pop
xor
lods
jne
or
push
xor
in
testl
jle
pop
pusha
pop
out
lock
dec
rol
adc
xchg
push
xor
jle
repz
cs
jb
pop
push
es
add
js
int3
hlt
int3
sbb
pop
sub
push
jle
adc
dec
je
mov
dec
dec
fs
inc
rep
sbb
or
mov
jbe
cld
fisttpl
pop
mov
sbb
sbb
mov
lret
pop
inc
jno
rol
cmp
xchg
fdivs
mov
push
push
int3
push
loope
push
jmp
inc
adcl
clc
add
cmp
nop
mov
test
add
loop
cmp
fsubrs
adc
cmp
xor
dec
xlat
gs
and
inc
add
pop
cmp
pop
or
ud1
push
je
mov
lret
cmc
cli
jge
jo
in
mov
jle
imul
out
push
mov
inc
or
jmp
fst
in
and
dec
movsl
sbb
and
mov
and
mov
xchg
clc
call
dec
push
insl
pop
mov
mov
inc
sub
sub
repnz
rorl
cmp
jmp
dec
or
sub
cmp
inc
es
xchg
xor
cmp
inc
push
fwait
pop
les
jo
push
daa
rclb
push
mov
mov
popa
loope
stos
ret
in
add
inc
fisubrl
insb
pushf
ret
cmp
xchg
scas
ljmp
in
fstpt
call
cmp
cld
mov
cmp
lds
lock
mov
mov
mov
out
lcall
sub
push
int
insb
fstl
je
mov
adc
push
je
sti
add
lods
pop
sbb
ja
jl
mov
mov
mov
leave
xor
ss
xor
cs
movsb
add
enter
cmp
xlat
sbb
mov
mov
mov
cmc
out
xchg
mov
or
cmp
mov
sbb
or
adc
cmpsb
lods
movsl
ret
aad
and
std
fisttpl
add
sub
add
adc
sub
mov
or
scas
lret
mov
xor
jae
es
mov
iret
insb
lods
cmp
enter
fistpll
pop
fisttps
mov
jmp
push
xchg
test
xchg
inc
mov
rolb
jo
push
mov
stos
add
jno
adc
or
jb
adc
rorl
mov
xor
cmp
push
and
gs
cmc
xor
fwait
xor
xchg
sub
or
jmp
cmp
ret
sub
fmuls
notb
push
std
cmp
mov
sub
and
bound
or
adc
inc
push
call
xchg
or
dec
cmpsb
cmp
jne
pusha
lahf
jp
jnp
inc
call
aam
rcrl
or
fnstcw
push
mov
mov
add
repz
insb
mov
xchg
xor
stos
mov
stos
push
mov
mov
mov
in
scas
inc
xchg
inc
or
mov
add
shr
push
mov
div
inc
mov
movsl
pop
inc
daa
adc
data16
pop
xchg
mov
test
daa
pop
mov
aaa
aaa
repz
add
cmp
sbb
add
sub
jo
add
nop
xor
mov
movsl
fmuls
dec
push
test
fcomp
xchg
inc
push
or
dec
inc
int3
add
ret
shlb
cmp
inc
inc
mov
xlat
ljmp
jle
je
clc
sahf
jp
and
cltd
enter
pop
aas
mov
daa
out
lret
repnz
pop
scas
shrl
dec
lret
fcoms
sti
mov
fdivl
fbld
lret
inc
and
add
bound
pop
pop
adc
xlat
loop
inc
sbb
outsb
mov
push
push
xor
jno
pop
cmpsb
enter
sub
mov
imul
mov
cld
ljmp
int3
int
arpl
sbbb
pop
outsl
cs
mov
push
inc
insl
das
test
int3
mov
jo
scas
mov
dec
in
ret
rcl
cs
addb
shlb
test
and
cltd
std
pop
icebp
mov
xchg
jecxz
sahf
test
das
out
fwait
add
and
sub
inc
jbe
jg
or
popa
cmpsb
lahf
repz
push
rolb
hlt
cmpsb
mov
lods
mov
add
mov
mov
pop
outsl
adc
or
shlb
add
or
repz
inc
roll
dec
pop
das
adc
sarl
shl
sbb
jle
cmp
dec
or
and
je
ret
pop
lods
ja
dec
push
cmpsl
mov
xor
in
or
in
add
mov
mov
inc
jno
pushf
pop
lret
lret
xor
popf
or
bound
xor
adc
inc
mov
hlt
and
fnstcw
xchg
dec
jnp
dec
repnz
add
nop
aas
rorb
xchg
fistps
shrb
adc
in
roll
add
mov
loopne
inc
adc
adc
cmc
xor
pop
cmp
add
push
mov
or
das
or
inc
imul
xorl
movsl
cltd
pop
shll
lea
fldcw
std
js
push
call
shl
rorl
sbb
bound
pop
std
mov
enter
mov
fstps
sub
pop
mov
lahf
je
and
repz
inc
stc
dec
add
out
cmpsb
sahf
arpl
sbb
and
mov
adc
mov
mov
shll
push
subb
xchg
lahf
scas
and
push
cwtl
hlt
iret
sbb
adc
rclb
lock
insl
add
xor
hlt
shrl
dec
fxtract
daa
or
pushf
test
cmpl
cwtl
cld
mov
mov
inc
mov
sti
or
aam
sbb
mov
cmp
test
out
fnstsw
outsb
lahf
mov
int3
mov
scas
sub
sub
sub
and
jmp
ljmp
push
call
mov
push
hlt
and
xchg
mov
pushf
adc
push
sub
cmp
pop
sbb
inc
pop
lret
and
mov
das
xor
xor
sarl
push
mov
add
cmpsb
test
xchg
push
push
push
rcll
jae
xchg
lret
into
or
pop
mov
jnp
sbb
cmp
pusha
cmp
mov
aas
int3
sub
and
roll
ds
lock
jecxz
lcall
adc
adc
aaa
in
mov
and
sbb
jne
loope
mov
enter
test
fstpt
jbe
popf
stos
repz
insb
decl
pop
xchg
aam
fucomip
pop
subl
inc
orl
outsl
xchg
nop
xchg
shl
addr16
icebp
push
push
dec
cmp
faddp
popa
fcoml
mov
mov
sbb
jno
sbb
and
and
push
leave
repz
add
pushf
mov
push
adc
lock
xchg
xchg
pushf
dec
sahf
push
daa
dec
inc
or
mov
add
adc
popf
add
sbb
dec
aam
int
sbb
ret
lcall
sbb
call
fs
push
dec
in
or
adc
dec
inc
sbbb
cli
fwait
fwait
mov
jns
and
add
push
push
push
inc
fs
aaa
sahf
sbb
imul
inc
mov
inc
rorl
rcrl
mov
pop
lahf
nop
mov
int
add
imul
lcall
xchg
stos
int3
loop
stc
adc
mov
xchg
shlb
mov
pop
cli
loopne
gs
dec
addr16
dec
pushf
lret
mov
jnp
xor
lds
xor
out
or
pop
sbb
adc
mov
cmp
scas
xchg
or
or
test
mov
js
sub
jae
in
shl
inc
aaa
push
mov
cld
sahf
fists
lret
enter
enter
test
subl
dec
in
lret
loope
mov
push
nop
iret
repz
xchg
ret
jg
imull
sarb
cmpsb
sarl
out
addr16
mov
and
repz
cli
sub
fsubrl
add
aam
push
stos
sub
sbb
adc
jo
and
fwait
xor
and
inc
shr
in
sti
fsubs
cmp
inc
lods
iret
repz
push
stos
inc
mov
clc
pop
and
adc
fs
or
and
in
lock
push
xor
jmp
lret
push
in
js
push
add
lea
adc
mov
jbe
bound
jnp
stos
lock
add
mov
call
es
xor
jp
xchg
fdivrs
mov
popa
repnz
mov
push
adc
xchg
dec
mov
leave
les
and
adc
adc
decl
push
cmp
stos
or
jle
hlt
mov
in
jge
inc
pop
and
adc
ss
mov
jno
fs
dec
sub
xor
jmp
test
inc
cmpsb
loope
clc
jns
inc
adc
adc
rcl
xor
mov
mov
rcrb
xor
sbb
and
cmp
fadds
lea
bound
mov
jecxz
pop
mov
std
or
jmp
jecxz
xor
mov
movsb
pop
xor
lods
repz
lcall
adc
jo
add
js
ret
leave
inc
lea
sbb
cmp
adc
into
mov
lret
push
xor
divb
vsubsd
cld
loope
mov
inc
lcall
stos
fcomip
clc
jg
push
adc
cmp
push
int3
adc
sarl
adc
jge
mov
sbb
inc
xlat
pop
or
cmp
jmp
out
popf
jbe
xor
and
cli
cmp
fiaddl
orl
lods
mov
in
xor
and
repz
sub
dec
test
xor
gs
dec
pop
lods
shll
pop
addb
jb
sub
imul
xor
sub
rcrl
and
ss
insl
jg
lret
aaa
jmp
inc
lret
in
loop
cs
test
rcrl
outsl
inc
add
lahf
call
mov
je
or
ret
adc
test
pusha
cmp
sti
mov
push
mov
and
shll
or
pop
jg
or
push
pop
movsb
repnz
cmp
mov
sbb
xlat
scas
lret
pop
aam
and
inc
pop
xchg
fstps
lret
mov
pop
inc
mov
jmp
clc
or
pop
nop
add
lea
dec
lock
mov
xchg
push
or
fidivl
adc
add
rcll
shlb
jl
pop
add
frstor
or
xchg
addb
push
jb
cwtl
mov
shrb
cmpxchg
push
and
and
lcall
mov
xchg
dec
mov
aam
dec
jno
mov
loop
sbb
push
aam
mov
adc
dec
mov
shlb
pushf
adc
mov
sti
subb
mov
inc
fwait
push
gs
sub
and
pop
les
rcrl
sbb
jl
or
daa
xchg
rolb
std
aaa
cwtl
inc
cld
shlb
rcr
or
mov
leave
gs
jne
jns
nop
push
movsb
cmp
cmc
aaa
xlat
sub
pop
icebp
dec
ja
adc
mov
or
and
sub
dec
fildl
sub
mov
scas
loope
lock
fildll
mov
push
dec
jl
jl
cmp
je
jg
inc
fs
icebp
mov
in
mov
orb
enter
ds
adc
pop
lret
add
loop
jge
imul
int3
in
jecxz
cltd
ja
rolb
movsb
cmpsl
pop
mov
call
not
xchg
adc
mov
cmpsl
out
adc
sbb
fidivl
hlt
or
mov
mov
xor
mov
xchg
sbb
mov
aam
pushf
das
mov
push
jecxz
mov
mov
in
dec
inc
adc
push
out
mov
or
xchg
pusha
sbb
and
sub
push
push
add
lret
fidivrl
and
dec
repz
cmp
movsl
cmpsb
push
xchg
push
js
xchg
xor
inc
leave
mov
sub
iret
lods
jl
stos
mov
js
mov
or
xchg
or
mov
roll
mov
or
movsb
inc
xchg
hlt
mov
pop
stc
push
sti
bound
cmpb
das
lcall
inc
add
mov
push
fs
ds
and
in
push
cmp
jge
ss
int3
out
insb
pop
jge
in
cmp
pop
dec
cli
popa
cmpb
shlb
mov
lock
in
mov
out
fwait
sub
xchg
roll
sbb
dec
push
mov
mov
sub
push
int3
fsubrs
push
push
frstor
stos
in
pop
mov
out
lds
test
cmp
mov
bound
outsb
test
pop
adc
pop
shrb
js
mov
dec
or
dec
test
pop
mov
daa
jl
add
imul
push
xor
xor
imul
cld
dec
xchg
aam
es
jmp
outsl
clc
mov
call
cmc
push
insb
jge
mov
inc
mov
dec
les
sbb
shl
lods
mov
inc
out
pop
cli
fldl
or
push
mov
cwtl
push
arpl
sub
jecxz
movsb
in
lods
inc
lods
push
adc
pop
mov
out
sbb
adc
jp,pt
cmc
jno
mov
cld
inc
test
jbe
repz
imul
and
mov
mov
and
pop
cltd
xor
mov
mov
fmul
es
jmp
cmp
cmp
cmp
jmp
xchg
sub
and
in
mov
scas
mov
pop
shlb
sti
jnp
push
dec
scas
or
insb
fldl2e
stos
movups
dec
stc
jnp
mov
jmp
jp
cli
jnp
pop
mov
cmp
orl
ds
mov
shrb
rolb
mov
stos
stos
xor
clc
inc
sahf
bound
xor
add
xchg
and
test
mov
outsl
sti
scas
dec
repz
mov
cmp
pop
out
sbb
jb
stos
es
movsl
repz
shrb
js
or
sti
insb
scas
ja
je
push
dec
and
packssdw
jge
or
mov
lds
incl
rolb
add
inc
mov
xlat
mov
pushf
adc
lods
jp
jbe
rcl
jae
iret
int3
or
pop
rorb
aam
push
aas
scas
cltd
or
insl
jb
inc
pop
mov
pop
jmp
nop
jg
adc
ja
test
push
xlat
or
test
sbb
fsubr
inc
and
loop
dec
loopne
pop
jnp
xor
cmpsb
scas
sti
adc
iret
mov
push
nop
mov
jne
sahf
sub
push
jmp
fsubrs
stos
aas
roll
outsl
arpl
jg
lods
mov
stos
ret
aam
fldcw
inc
and
jle
pop
cmpsl
cmpsl
mov
sti
in
clc
mov
push
lret
fisttps
sbbl
jno
add
testl
dec
outsb
and
clc
pop
das
jo
lret
data16
orb
insb
int3
mov
and
adc
fbld
les
sub
dec
test
scas
repnz
vcmpfalse_osss
lret
xchg
fwait
xor
mov
rclb
dec
sbb
hlt
sub
sub
pop
aad
rol
imul
int
out
insb
inc
std
fsubl
mov
ret
ljmp
xchg
push
mov
fdivp
adc
and
jb
imul
jnp
push
inc
arpl
lods
call
nop
jmp
adc
hlt
addr16
pop
pop
bound
insb
pop
fistps
int3
or
mov
mov
call
pop
mov
je
movsb
cmp
call
pushf
push
roll
add
movsb
and
outsl
push
test
jb
jge
add
and
xchg
cld
addl
or
sahf
xchg
stos
sbb
mov
pushf
xor
imull
les
hlt
xchg
push
push
push
lret
in
je
shrl
mov
mov
xor
cmp
stos
xchg
inc
push
mov
mov
aam
xchg
mov
and
mov
addr16
push
movsb
mov
dec
or
adc
cmp
cmp
inc
or
ljmp
add
jge
repnz
cmovl
cmpsl
add
mov
sbb
pop
push
push
fidivrl
mov
push
xchg
mov
cmp
pop
sbb
cmp
add
jb
test
dec
fadds
std
mov
pop
lret
lea
fimull
cmc
push
adc
add
shl
mov
shrb
or
inc
insb
add
xor
push
mov
rclb
or
cmpsb
leave
xlat
dec
add
fildl
xor
push
cmp
xlat
jns
dec
push
mov
sbb
in
fwait
pop
sub
or
jo
aad
into
sti
pop
adc
mov
mov
shll
xchg
gs
out
push
sbb
jb
daa
inc
loope
cmc
fcoml
in
ljmp
push
adc
in
jle
cmp
roll
cmp
dec
sahf
stos
add
push
sbb
ja
adc
cwtl
cli
mov
add
mov
xchg
iret
or
push
rclb
push
or
les
cmp
cmp
add
jmp
leave
jnp
and
sbb
in
inc
ss
test
ficoml
sub
dec
imul
jae
subl
add
add
pop
inc
jne
mov
jl
push
cmp
adc
aad
into
fs
inc
js
cmp
loopne
addw
data16
shll
in
cmp
jns
or
jbe
data16
add
jo
sub
int
push
rcrb
mov
adc
xchg
dec
mov
push
push
mov
jo
cmp
test
fildll
into
imull
mov
lods
mov
cltd
hlt
inc
sarl
dec
inc
test
add
cmp
cmpsl
mov
and
xorl
pop
cbtw
or
pop
xor
xchg
xchg
push
gs
orb
inc
loop
es
sub
and
das
loope
fists
lock
aas
or
in
out
push
sti
int
add
stc
imul
call
cmp
test
add
or
mov
and
fabs
add
pop
nop
pop
sti
and
or
aaa
xor
and
les
imul
pop
mov
cltd
imul
loopne
stos
pop
call
mov
pop
outsl
pop
in
test
stos
aam
xor
mov
mov
adc
cmp
test
scas
sbb
test
mov
jecxz
xchg
lds
lds
xchg
adc
nop
loop
dec
call
sti
test
xchg
mov
ficoml
add
rorb
mov
sahf
cmc
mov
cwtl
xchg
test
xor
repnz
inc
mov
inc
and
push
subl
mov
push
adc
cmp
mov
xor
iret
pop
sarb
push
inc
aam
hlt
das
lods
movsb
loop
fstpl
xor
enter
retw
jp
fwait
add
or
out
in
scas
stos
mov
push
push
xchg
cltd
sbb
and
push
inc
cmp
jge
mov
enter
xchg
dec
es
enter
sbb
add
lods
sbb
adc
dec
fsts
movswl
fldl
pop
jb
and
pop
mov
add
imull
xlat
sbb
fcoms
movsb
cmp
dec
movsb
push
bound
jge
and
mov
rcrl
inc
mov
test
push
or
pop
rolb
mov
mov
adc
clc
repnz
out
cmp
pushf
stos
jecxz
add
cmpsl
xlat
cld
mov
jae
inc
aas
dec
shrl
dec
inc
push
xor
bound
fdiv
enter
mov
inc
push
adc
rolb
es
sbb
and
xor
sub
or
mov
xchg
and
push
sub
push
shrb
jb
or
mov
mov
lcall
ds
sahf
sti
aas
shrb
mov
sbb
stos
jae
pop
cmp
out
xchg
inc
jnp
pushf
in
std
push
in
cmpsl
fcoml
lret
fsubs
jno
mov
pop
aas
inc
mov
js
icebp
rcrl
xlat
and
lcall
test
cmp
movsb
out
pushf
mov
enter
addb
jb
fiadds
mov
std
mov
xchg
sub
pusha
xchg
add
jl
mov
mov
test
sbb
sub
sub
lcall
mov
leave
push
adc
mov
fcomip
and
adc
das
mov
and
cmp
mov
notb
push
stos
xchg
xchg
fnstsw
jl
out
sub
dec
das
mov
ds
aas
inc
inc
js
cld
pusha
mov
sbb
push
jmp
enter
mov
push
jle
lods
clc
adc
adc
xor
arpl
sbb
fbld
das
xor
mov
xchg
mov
pop
adcl
jbe
pop
and
lahf
or
inc
and
cmp
cmp
vmovsd
sarb
idivb
scas
mov
sbb
inc
mov
enter
mov
sbb
adc
mov
push
std
xchg
jmp
add
dec
adc
push
fnstenv
in
mov
loop
sbb
push
aam
sbb
pop
jge
adc
pop
mov
sbb
jle
sbb
xchg
mov
icebp
mov
data16
loope
xchg
sbb
fs
sbb
sbb
arpl
and
cwtl
pop
rclb
jg
inc
loop
xlat
sbb
popf
ss
stc
repz
popf
inc
mov
enterw
xchg
mov
notb
addl
add
cwtl
cmp
imull
bound
or
push
pop
jp
push
push
cmp
sub
hlt
filds
inc
dec
enter
pop
out
ja
mov
mov
sub
ljmp
prefetch
test
dec
movsl
loopne
inc
insl
mov
dec
push
push
jl
fnstenv
arpl
xchg
call
sub
and
jmp
fisttpl
insl
fsts
sarl
imul
cmp
xchg
out
std
inc
adc
sub
test
cmp
mov
jp
movsl
or
nop
jl
inc
orb
ja
pop
movl
sbb
cmpl
pop
or
push
lods
cld
xor
mov
insb
mov
stos
loopne
fisttpl
in
adc
cmp
add
out
inc
fwait
lods
fldenv
xchg
mov
pop
call
in
dec
lahf
rolb
call
and
dec
cmp
nop
dec
mov
adc
ljmp
pop
jecxz
call
add
int
or
and
cwtl
imul
jbe
adc
jp
mov
fldcw
call
repnz
pushf
pusha
daa
xor
jne
jge
out
xchg
cmp
mov
jle
push
data16
mov
lds
pop
adc
mov
dec
adc
arpl
call
jp
lods
loopne
sbb
icebp
sub
mov
cmp
mov
test
jno
repz
or
in
pop
movsb
nop
cmp
jne
out
add
stos
and
mov
xor
pop
jge
fimull
mov
gs
ja
or
mov
cli
lods
cltd
cmpsb
xor
pop
push
adc
jno
inc
sbbb
ljmp
lret
xlat
push
repnz
jbe
ljmp
push
lret
popl
shlb
std
push
gs
mov
jmp
push
scas
mov
sub
fucom
xor
in
inc
mov
pop
push
sub
sub
push
fwait
and
insb
push
dec
fdiv
fs
mov
mov
cmp
pop
dec
dec
mov
gs
mov
and
cmp
test
jge
xchg
popa
lods
adcb
mov
push
dec
pop
sub
dec
bound
addl
mov
sub
movsb
shll
cmp
loopne
and
sbb
sbb
inc
adcb
popf
imul
into
or
add
mov
imul
dec
scas
adc
adc
add
inc
icebp
mov
add
mov
jecxz
sub
or
popa
dec
out
subb
jmp
outsb
inc
adcb
frstor
movsb
adc
add
jb
xchg
or
mov
jno
lea
xchg
pop
ja
int
add
jl
lock
jge
adc
jno
dec
in
mov
mov
enter
inc
sub
and
jno
or
mov
mov
in
insb
stc
pop
les
inc
xchg
sub
and
adc
xchg
call
xchg
mov
in
icebp
fs
push
es
sub
les
cmp
add
test
mov
ljmp
es
shlb
outsb
xor
sub
jecxz
js
ret
call
stos
test
sbb
iret
bound
jl
shl
pop
push
test
addr16
mov
sbb
dec
push
and
jo
adc
jb
ror
mov
gs
xchg
fdiv
mov
mov
mov
or
dec
hlt
adc
cmc
xchg
inc
push
leave
and
lods
stos
pop
insb
xor
push
push
les
movsl
sbb
data16
jo
xchg
dec
jecxz
std
sahf
xchg
push
pop
pop
xor
lock
cmp
adc
dec
adc
add
icebp
lods
mov
xor
gs
jg
sbb
sub
pop
xor
dec
mov
sub
jge
clc
pushf
jmp
repz
es
les
push
sub
jne
insl
imul
lcall
push
mov
cmp
cmc
cmp
shll
pop
mov
pusha
popa
loope
std
adc
roll
lock
negb
in
pop
std
cmp
sbb
adc
xchg
mov
lods
inc
xchg
nop
and
scas
add
call
and
daa
addb
mov
test
ljmp
loopw
dec
fs
mov
imul
and
imul
jo
sbb
sub
sub
enter
or
sti
cmp
mov
movsb
dec
mov
scas
dec
stc
jle
push
mov
add
mov
in
mov
lds
lds
xor
mov
and
jmp
mov
cwtl
test
in
and
cmc
and
pop
jae
and
fwait
in
cmc
mov
lcall
cs
imul
mov
popf
lcall
sbb
je
cmp
lea
and
adc
aam
jno
xchg
jmp
clc
mov
gs
adc
xchg
lea
clc
push
or
in
repz
movsb
dec
xchg
loope
lea
or
andb
in
sbb
into
xor
cli
insb
push
pop
sbb
pop
rdpmc
mov
xchg
adc
mov
jg
or
rol
mov
adc
push
adc
xchg
lods
adc
sbb
call
mov
fimuls
add
sub
push
repz
cli
or
cmp
sbb
mov
and
add
push
andl
stos
push
push
xchg
mov
pop
cmc
add
xchg
fs
adc
xchg
dec
cmp
or
add
push
aaa
lcall
mov
cwtl
bound
inc
adc
subl
cmpsb
and
xchg
sbb
ret
cmpsb
popa
insl
dec
push
imul
sub
adc
sbb
pop
xor
faddl
insl
scas
lahf
jns
aaa
leave
jb
adc
test
or
dec
jo
push
outsb
mov
lret
je
call
mov
adc
jge
or
shl
push
in
nop
push
pop
pop
enter
dec
adc
inc
je
adc
pop
adc
add
sbb
cmp
lcall
scas
push
pushf
adc
sahf
cmpsl
outsl
adc
mov
out
mov
xor
cmp
jmp
leave
pop
dec
jg
sti
mov
fs
add
shll
pusha
fmuls
clc
clc
cmpsb
test
fimull
sub
or
xor
push
sbb
dec
loop
mov
movb
sub
sti
scas
xchg
lock
xchg
insb
fs
test
pop
jne
enter
rcrb
dec
xor
xor
or
das
and
mov
cmpsb
sbb
loop
xchg
rcl
lahf
rclb
fwait
pop
pop
mov
lock
lods
insb
in
aam
cld
xchg
add
test
cli
leave
or
sarl
pusha
mov
and
bound
sbb
lcall
jl
pop
dec
jns
in
mov
dec
sub
rol
into
or
and
out
inc
gs
addb
jecxz
pushf
shl
or
out
sti
cmpsb
pop
cmp
lahf
stos
nop
fcoms
rsqrtps
jmp
test
fmuls
mov
fstpt
or
leave
stc
pop
fyl2x
je
fs
xchg
adc
inc
adc
cld
xchg
inc
xor
lret
std
aaa
mov
les
hlt
les
dec
lods
xor
pop
ja
dec
ljmp
push
push
pop
fs
ror
addb
daa
inc
int3
push
jb
xchg
cmp
xchg
inc
cli
lock
cmp
daa
or
cli
sbb
or
fdivrs
call
cmp
shlb
lcall
dec
cmp
sti
mov
jmp
or
rolb
sbb
add
adc
push
gs
loope
jl
xor
fcoms
bound
lcall
jae
add
or
lahf
sahf
cs
or
jbe
sub
loopne
enter
push
int3
inc
bndstx
push
adc
out
pop
mov
mov
data16
pop
imul
sarb
sub
bound
clc
fwait
mov
fs
pop
add
and
popa
mov
cmpsb
add
movsl
rclb
popf
add
mov
jo
dec
mov
cmc
xchg
sub
sub
or
rcrb
das
je
mov
cmp
out
std
sub
lret
add
inc
add
dec
or
icebp
pushf
setbe
pop
xchg
mov
cmp
les
mov
iret
sub
mov
sbb
or
rcrl
inc
sbb
fprem1
sar
loopne
add
gs
mov
push
or
xor
push
sub
xor
add
je
icebp
dec
out
mov
rclb
iret
xchg
pop
je
shrl
jmp
mov
out
push
add
lahf
push
mov
clc
fildl
test
and
adc
add
inc
adc
ds
lods
adc
cmpb
inc
call
gs
lods
movsl
sub
dec
test
dec
pop
adc
mov
xchg
jmp
bound
fsubl
mov
mov
mov
sbbl
sahf
xlat
push
mov
dec
pop
sbb
scas
rcr
sbb
sub
ss
shrl
mov
pop
dec
ljmp
and
jno
mov
icebp
push
fidivrl
pop
adc
ss
dec
inc
aad
imul
lea
sub
inc
in
push
mov
cwtl
cmpsb
out
sub
mov
push
inc
in
pusha
jbe
ja
loopne
mov
mov
mov
add
test
cs
ja
cs
pop
sub
cmp
fs
std
add
hlt
dec
add
fisttpll
xor
lcall
and
sbb
dec
push
sub
add
adc
out
mov
dec
imul
cs
imul
or
stos
xchg
cmp
repnz
mov
int3
mov
ja
jge
push
jge
mov
rolb
lea
into
sbb
sbbb
loopne
jnp
push
aas
xchg
les
aas
xor
mov
inc
pushf
shrb
sbb
cmpsb
nop
push
cmc
stos
aas
lods
pop
sbb
sub
push
mov
shlb
jo
inc
fwait
pop
nop
jb
sbb
enter
xor
mov
add
pop
pusha
ret
push
pop
or
lcall
cmpsb
or
jo
or
sti
pop
loope
xor
sub
bnd
xchg
and
add
movsl
out
lahf
mov
shll
sub
sub
inc
pusha
add
mov
loopne
jb
inc
sub
cmp
xchg
fcmovb
pop
inc
pop
mov
int
cmc
add
jnp
cld
pop
mov
aas
or
or
cmp
test
push
popa
dec
test
adc
leave
pop
xchg
jb
xor
insb
popa
xor
dec
test
inc
mov
dec
and
xchg
add
loope
pop
lods
or
mov
sub
lret
pop
enter
inc
push
pop
mull
ss
xchg
pop
ror
subl
fnstenv
das
sbb
gs
mov
and
sbb
mov
popa
pop
push
cmp
fimuls
push
adc
int3
les
cli
lea
pop
cmpsb
fdivrs
push
call
dec
xchg
sub
fsubrl
dec
cmp
xchg
imul
and
inc
hlt
sbb
cmc
jle
inc
pop
shll
jle
adc
lahf
adc
mov
mov
push
fistl
repz
das
out
bound
fimuls
iret
outsb
imul
repnz
lods
xor
and
pop
imul
movsb
jmp
lsl
test
push
shlb
mov
cmpsb
loop
jge
push
pop
aaa
mov
push
test
aam
das
lcall
aaa
jp
jo
out
sahf
jnp
pop
or
je
mov
mov
mov
xchg
lods
or
fmul
stos
sbb
dec
adc
adc
test
mov
popa
dec
adc
repnz
dec
and
data16
out
sub
test
mov
hlt
pop
dec
xor
add
adc
push
sub
rclb
lea
push
fdivs
pop
bound
mov
subb
adc
fstpt
cmp
outsl
or
stos
push
out
mov
mov
decl
rcrb
mov
mov
cmp
jae
shll
out
fs
fsubrl
hlt
call
and
shll
insb
call
mul
aad
jae
enter
dec
test
push
or
ljmp
lock
imul
adc
push
xchg
stc
outsl
pop
enter
mov
subl
gs
lods
adc
adc
fistps
or
pop
pusha
sub
dec
mov
jp
stos
outsl
iret
or
inc
shufps
and
or
mov
rcl
cmc
into
cmc
xchg
sub
adc
outsb
push
xor
pop
shll
movsb
pop
dec
mov
cmp
stos
adc
lret
inc
add
adc
mov
aad
sub
mov
daa
dec
or
pop
into
jb
inc
xchg
jo
jae
add
or
sub
mov
shll
into
into
subb
inc
xor
stc
push
stos
mov
xor
pop
sub
hlt
pop
jecxz
add
jb
test
xor
sub
push
mov
xchg
ss
cli
mov
outsl
sub
addr16
test
xchg
bound
inc
ljmp
cmpsl
lahf
iret
repnz
or
popa
enter
mov
cmp
push
inc
and
inc
jo
mov
mov
jb
add
sbb
jmp
aas
pop
clc
and
jno
or
stos
daa
ja
push
cmpsb
or
outsl
daa
rol
sub
mov
xchg
jp
fcomps
adc
sub
ss
nop
jge
and
rolb
push
add
xor
aam
mov
cld
shl
inc
dec
pushf
fadd
sub
sti
insl
cmc
xor
cmp
xor
ja
push
nop
cmp
cltd
mov
mov
xchg
jecxz
inc
mov
jmp
cmp
js
in
push
mov
cmpsl
mov
dec
leave
pop
push
pushf
std
dec
inc
sub
mov
data16
add
inc
sbb
cltd
iret
adc
dec
push
adc
enter
fdivp
fwait
and
push
and
xchg
pop
add
je
inc
bound
mov
xchg
arpl
mov
lret
lods
sbb
shlb
test
or
je
loopne
bound
out
pop
in
inc
sbb
lret
and
sub
or
xchg
cld
jb
hlt
pop
test
mov
mov
jge
je
aaa
outsb
outsl
lods
xor
and
or
addr16
mov
bt
and
movsb
sub
dec
test
sub
pop
sti
in
xor
movsl
mov
shlb
xchg
xchg
xchg
mov
or
or
add
popa
mov
xchg
ja
dec
pop
xchg
push
movsb
push
adc
shlb
repz
movsl
adc
inc
xchg
sub
test
pop
lcall
cwtl
cmovg
xlat
mov
jnp
test
and
mov
loop
in
pop
sbb
les
fwait
or
xlat
in
pop
xchg
shlb
or
xchg
mov
sbbl
jmp
mov
mov
bnd
xor
rcll
sub
addl
cld
ficompl
cwtl
pushf
adc
jl
test
pushf
dec
and
xchg
push
dec
mov
dec
jle
popw
xchg
mov
mov
jecxz
sub
inc
and
sub
inc
jl
stc
adc
mov
call
scas
mulb
adc
add
dec
leave
jl
push
stos
sarb
xchg
or
jb
or
clc
xlat
cmp
push
mov
sbb
pop
gs
jmp
sub
sub
hlt
mov
rcrl
insl
scas
pop
xchg
out
and
cmp
or
shr
mov
in
mov
lea
in
test
imul
mov
mov
inc
sub
mov
ljmp
cli
or
jl
mov
out
bnd
push
or
mov
push
jle
and
arpl
push
inc
pusha
test
jecxz
cmp
movsl
cwtl
xor
mulb
mov
mov
jp
repz
push
pop
mov
or
push
xor
iret
cld
or
ret
jp
or
enter
mov
test
pop
div
push
fbstp
lret
sbbl
sbb
cmpsl
notl
xchg
dec
xor
je
push
ja
into
flds
xor
cs
cmp
aas
adc
es
fcmovne
mov
xor
fsubl
inc
pop
and
push
fimull
insl
mov
hlt
movsb
shll
orl
or
lcall
push
pxor
add
in
das
adc
bound
inc
mov
cld
test
hlt
mov
xor
xlat
out
mov
sub
scas
aad
in
in
mov
push
cltd
pop
mov
and
movsl
sbb
inc
shl
pop
dec
std
xor
pop
adc
pop
mov
adc
int3
push
pop
xor
push
js
movsl
xchg
addr16
mov
mov
aaa
sub
fwait
ret
cmp
sub
fs
dec
jl
test
testb
int
and
push
xchg
inc
sbb
jl
push
nop
mov
std
xorps
cmpsl
pop
xlat
cmc
inc
movsb
dec
stos
arpl
pop
pop
inc
inc
push
dec
outsl
rclb
adc
mov
xchg
cmc
mov
jne
movb
push
dec
scas
push
andl
in
push
xchg
aam
shrb
pop
cmc
sbb
cmp
jmp
pop
into
mov
sbb
js
das
xchg
pop
out
xchg
sbb
xchg
jg
xchg
push
pushf
pop
push
cmp
pop
imul
fcmovnu
xchg
and
push
xchg
xchg
mov
add
xor
xor
stos
xchg
or
jl
pop
push
dec
jns
add
adc
sbb
mov
jg
adc
leave
dec
mov
cld
pusha
bound
ljmp
push
lret
call
imul
call
jge
xor
or
xor
popa
mov
inc
sbb
push
adc
mov
adcb
fisttpl
dec
bound
inc
jle
mov
subl
cmp
hlt
subl
jecxz
sub
bound
test
or
and
imul
cmp
and
outsb
shlb
mov
dec
pop
inc
jmp
xchg
inc
icebp
push
mov
or
jmp
ficompl
inc
rol
jne
aas
push
cwtl
and
mov
ja
inc
iret
xor
adc
xchg
mov
sub
add
lcall
or
daa
jmp
cmp
and
and
cltd
adc
xchg
mov
ds
inc
add
movsb
cltd
insb
sbbb
mov
lea
and
mov
cmc
frstor
cld
push
push
fwait
pop
jmp
add
fadds
push
mov
and
push
stos
inc
pop
test
vunpckhps
stos
push
ret
ret
jmp
jb
ror
mov
nop
mov
push
ror
add
leave
icebp
fcomi
pop
xchg
cmpsb
fmull
mov
and
push
bnd
data16
jnp
pop
inc
fsubr
cmp
jb
mov
sub
xchg
int3
rol
insl
mov
sub
jmp
in
ja
mov
xchg
mov
nop
add
mov
jl
out
loopne
xchg
push
jle
mov
lds
xchg
push
xlat
popa
mov
and
fdivrs
mov
loope
leave
das
jg
fstpt
fwait
in
and
sbb
add
cmpsb
repz
jno
cwtl
fldl
mov
dec
ret
dec
or
shrb
cld
in
test
dec
mov
bound
dec
dec
data16
dec
shll
stc
pop
sub
pop
mov
push
dec
xchg
ret
cmpsl
pushf
cmpsb
jb
and
repz
sub
cmp
stos
in
pusha
arpl
sub
cmp
mov
in
fucomp
or
orl
popl
and
push
sbb
rclb
or
mov
outsl
ja
imul
lret
incl
xlat
sub
fnstenv
outsb
insb
iret
imul
sbb
sub
jl
add
outsl
mov
adc
inc
mov
jnp
clc
mov
sahf
int
test
xchg
jnp
in
push
add
lahf
add
ret
push
and
jae
push
stos
or
xchg
adc
sub
ficoms
out
sub
stc
and
inc
xor
ja
fimuls
mov
nop
add
pop
sbb
jp
jb
test
loop
xor
sbb
fcompl
adc
mov
insl
add
jne
aad
dec
sbb
cltd
pushf
add
and
out
add
int3
jmp
mov
dec
mov
dec
fwait
mov
pop
lea
pop
ja
test
push
sbb
sahf
popf
mov
push
jge
adc
adc
lds
stc
and
and
repz
jecxz
push
ficompl
add
pop
add
cmpsb
inc
inc
jnp
mov
loop
inc
clc
adc
jmp
scas
jmp
cmp
fisttpll
add
mov
lahf
shlb
xchg
dec
dec
repnz
sub
fistl
add
pop
gs
rolb
insb
sahf
bound
xchg
inc
sub
ret
or
scas
xchg
mov
ror
test
and
lods
icebp
adc
sub
in
stos
xchg
fsqrt
mov
cmp
add
pop
add
daa
out
dec
pop
fcmovb
pusha
pop
inc
jnp
insl
sahf
fwait
pop
gs
clc
and
or
or
in
push
mov
adc
subl
hlt
mov
mov
and
mov
stos
imul
sub
cmp
test
jo
dec
lea
cmp
ja
jl
xor
in
arpl
vmovsd
adc
push
and
pop
xchg
sub
inc
and
pop
aaa
jbe
out
arpl
push
jmp
push
mov
ja
insb
outsb
push
xchg
mov
out
push
sbb
cmp
dec
push
mov
aas
stos
add
rol
inc
mov
enter
aad
mov
inc
test
inc
or
cld
loop
sub
adc
test
inc
ret
addr16
push
adc
jl
lods
rorb
mov
lret
loop
fs
incb
push
cmpb
cmp
out
in
mov
add
add
push
or
sbb
or
call
das
dec
icebp
push
mov
pop
test
push
sub
aam
stc
mov
mov
shll
inc
ds
pushf
in
fs
and
clc
shrl
idiv
cmp
mov
outsl
mov
lret
push
rclb
fs
xlat
xchg
jmp
lahf
lea
sbb
mov
mov
daa
mov
mov
add
jnp
cmc
adc
ljmp
mov
and
insl
shrb
add
inc
lret
xor
and
movsb
pop
or
and
das
repnz
test
dec
mov
les
into
and
inc
stc
in
in
divb
mov
mov
sbb
aad
add
jnp
mov
fidivl
aad
mov
jo
push
divl
fildl
push
dec
sub
inc
pop
shl
sbb
mov
notl
in
icebp
adc
adc
xor
into
push
push
jle
call
stos
jb
or
es
pusha
sahf
and
in
out
je
js
inc
sbb
movsl
dec
or
test
inc
adc
mov
in
hlt
les
out
rcrl
push
pop
mov
test
repnz
leave
pop
push
mov
xchg
sub
mov
dec
scas
push
adc
mov
inc
ja
mov
sbbb
push
inc
adc
popf
sub
pushf
test
stos
fmull
and
lods
orb
fistps
out
aam
incb
push
ret
aaa
adc
fiadds
movsb
mov
cs
clc
mov
adc
mov
or
mov
mov
inc
call
mov
add
fisubl
outsl
mov
fildl
cmp
mov
xlat
cmp
jbe
add
call
mov
sbb
adc
sbb
sbb
xchg
ss
and
movsb
ss
cmp
push
push
sub
ret
shlb
sub
movsl
sbb
inc
out
in
icebp
pop
std
stos
fmull
pop
xchg
jbe
mov
sub
xchg
mov
add
loope
xor
repz
xchg
mov
adc
adc
xor
and
sbb
or
inc
fstp
rolb
fwait
inc
and
adc
popa
pop
sti
test
ret
insb
mov
ret
rcrb
sbb
repnz
mov
sub
mov
pusha
lods
or
jno
xor
ds
jl
lret
es
rcrl
xor
shl
in
dec
inc
fisubrs
or
adc
dec
in
mov
push
call
xchg
xor
mov
lock
pminub
inc
lock
pop
popa
cmp
add
cmpsl
mov
add
dec
repz
call
rorb
mov
ss
cs
add
leave
ret
mov
sub
jno
sarl
in
outsl
aad
sub
lret
or
adc
out
cmp
pop
insl
test
sbb
imul
push
fistpl
mov
shlb
rcl
dec
sbbl
int3
sub
clc
int
shll
imul
mov
lahf
cmp
xor
fnstenv
dec
mov
adc
adc
shll
in
and
inc
mov
mov
push
daa
xchg
push
aam
aam
js
fsubr
insb
out
xchg
adc
jmp
xor
xchg
dec
dec
sbb
sub
aam
mov
ljmp
jo
mov
pop
add
movsl
enter
aad
jns
mov
and
pop
jo
adc
push
jno
aaa
adc
data16
push
add
stc
insl
xlat
pop
mov
xor
lahf
dec
xor
mov
fcoml
cmp
or
pop
push
mov
sub
aad
sbb
cmpl
xchg
dec
nop
imul
test
add
jmp
pop
mov
or
aad
leave
pop
dec
add
popa
push
out
and
mull
subb
or
scas
iret
mov
cmp
or
dec
ja
sub
mov
cmp
xchg
enter
fs
push
inc
lock
dec
loop
ljmp
in
scas
dec
add
mov
cltd
jp
mov
nop
xchg
jne
dec
fistps
adc
test
lret
addr16
push
in
add
jle,pt
cwtl
xchg
test
add
push
movsl
jb
data16
sub
mov
out
lea
push
jns
rcll
sub
nop
iret
inc
hlt
or
scas
xchg
adc
inc
inc
out
fsts
nop
push
jge
or
or
das
nop
sbb
insb
push
fisubrl
scas
stc
mov
and
cltd
pop
push
add
movsl
cs
pop
push
xchg
std
shlb
call
test
fdivrl
cmp
push
add
push
cli
ret
jne
and
push
mov
inc
xorl
mov
mov
or
hlt
and
enter
lret
mov
mov
jg
rorl
sub
movsb
mov
loope
sbb
shrb
xchg
and
std
inc
insb
mov
lret
imul
fcomps
or
lds
cltd
inc
stc
rcll
test
xchg
dec
pop
loopne
ret
fistl
dec
ja
mov
fistpl
ret
cmp
outsl
std
faddl
xor
pop
sub
xchg
fsubrs
imul
fs
xor
mov
cmp
jnp
mov
adc
scas
sub
pop
stos
ljmp
mov
out
insl
and
jbe
push
inc
mov
push
lock
sbb
jo
add
nop
cmp
jno
and
cmp
or
xchg
pop
sbb
stc
and
lret
ret
cmp
das
or
lret
popf
jbe,pn
test
and
daa
sub
lock
jns
sbbl
cli
js
lods
repnz
inc
cmp
movsl
pop
push
xor
movsl
cmp
jl
repz
mov
xchg
cmc
and
nop
inc
int
xlat
add
repz
cli
int3
out
stc
pop
in
push
pop
and
and
aam
movsl
mov
adc
lock
push
mov
cmpsl
outsl
daa
sbbb
and
lret
mov
mov
jno
inc
jecxz
nop
or
stos
mov
je
cmp
rcrb
js
aam
int3
in
sub
mov
ja
lods
fcompl
xchg
in
int3
and
loop
push
inc
add
inc
mov
mov
pop
adc
cld
and
shl
shlb
push
mov
aas
mov
jae
cmpsl
adc
cmpsl
xchg
xchg
fsubs
dec
inc
mov
sbb
imul
mov
out
repnz
mov
or
push
cmpl
dec
std
or
cmp
testb
jp
and
or
movsl
les
pop
push
sbb
out
xchg
jo
in
lods
inc
inc
cmc
cld
sbb
add
jmp
mov
push
jbe
push
mov
jnp
int
fisubrl
test
mov
add
insb
imul
cmp
dec
add
mov
in
dec
mov
pop
and
jne
rclb
or
mov
jne
loopne
idivl
lcall
lcall
fcompl
sbb
jne
lcall
vmovhpd
xor
call
ja
mov
cltd
push
push
jae
xchg
pop
jae
shlb
je
mov
arpl
into
adcb
and
shl
mov
inc
jo
or
xchg
int
in
mov
pop
add
pusha
or
test
jl,pt
lods
addl
pop
sub
adc
mov
fcmovu
push
jle
fnsave
jp
push
fsubrs
xor
fldl
clc
movzwl
shr
outsb
repz
mov
in
roll
ja
rcl
outsl
dec
ficoms
aaa
lds
into
and
xchg
pop
jbe
das
clc
fs
pop
xchg
lcall
es
or
cmp
movsl
daa
arpl
mov
push
mov
inc
std
out
mov
loope
cmp
aad
push
mov
test
or
jbe
add
loop
adc
jg
cmp
in
add
repz
cmp
and
xchg
mov
cwtl
mov
into
mov
cmp
out
lds
or
enter
mov
sbb
int3
jg
andb
add
divl
pop
pop
ret
cmp
jmp
mov
or
pandn
mov
mov
test
inc
add
aaa
push
jl
mov
or
sub
cmp
adc
gs
lods
pop
stc
ret
mov
mov
or
pop
push
and
or
xchg
and
xchg
mov
fsts
enter
fcmove
add
mov
and
adc
adc
cmc
cmp
sbb
push
roll
lock
stc
mov
out
les
push
test
cmp
shll
std
cmp
cmpl
loop
push
add
clc
clc
rorl
xchg
ret
test
xchg
mov
push
push
sbb
das
mov
les
dec
pop
add
es
sbb
popa
xlat
cmp
push
sbb
push
xchg
es
incb
cmp
call
pushf
frstor
xchg
roll
loope
xorb
mov
xor
rcll
sbb
cmp
je
lret
sub
divl
add
fstpl
iret
ds
push
push
mov
fcoml
test
fisubl
js
shlb
mov
and
and
sub
xchg
push
in
inc
jmp
jae
insb
inc
aas
adc
aad
pop
mov
jno
jp
mov
fnstcw
loop
ja
enter
data16
stos
stos
mov
in
ss
cmc
inc
dec
sub
iret
xlat
add
orl
push
adc
cs
stc
mov
jp
mov
cmp
das
mov
into
aaa
clc
nop
mov
mov
adc
cli
dec
addr16
lahf
fs
fiadds
dec
pop
mov
or
xor
cld
insl
inc
ja
arpl
mov
mov
jmp
shrl
insb
xor
stos
add
mov
loop
sub
add
bound
xor
into
int
jle
inc
out
decb
xchg
jae
enter
shr
int3
repnz
or
stos
fidivl
cli
les
cmp
jge
imul
repnz
jno
mov
call
pushl
in
cmc
sub
pop
ret
jbe
lcall
movsl
mov
fdivr
pop
in
lods
clc
mov
cmp
in
popf
ds
insl
pop
aad
pop
fstps
fdivrs
in
ss
insl
adc
xor
sub
inc
insl
aas
push
xor
pop
fistpll
fsubl
xor
sbb
es
mov
add
xchg
mov
and
fadd
mov
loope
add
shl
or
jo
orb
lret
ds
cltd
pop
outsl
or
movsb
or
das
cmp
push
cmpsl
enter
movsb
jo
mov
xchg
and
fstpt
mov
into
out
push
sbb
mov
push
or
mov
movsb
or
movsb
or
into
push
imul
or
mov
movsl
cmp
cmp
mov
fstpl
fcompl
jnp
test
fwait
mov
adc
dec
shll
enter
jp
icebp
scas
xchg
test
js
rolb
add
or
out
adc
push
push
arpl
inc
cmpsb
add
push
fiaddl
pop
movsl
jo
jae
popa
out
sub
jo
jns
pop
push
scas
mov
sbb
shr
mov
push
ret
add
.byte
xor
ret
mov
stc
sub
mov
mov
add
stos
push
sti
pop
adc
cmp
mov
dec
cld
xchg
call
insl
rcll
xchg
in
scas
and
or
fs
mov
pop
push
jbe
aaa
bnd
lcall
dec
adc
cmp
ficompl
xor
loopne
add
test
cld
add
sub
xchg
rolb
mov
pop
push
xor
pop
mov
jmp
mov
dec
cmp
xchg
out
or
mov
call
daa
push
sbb
push
sbb
pop
push
push
adcl
mov
or
push
cmp
jo
mov
xchg
adc
and
pusha
sub
mov
scas
or
and
test
and
jg
nop
sbb
push
xor
dec
jne
xor
xchg
pop
and
hlt
adc
scas
rcll
and
and
jle
or
push
pop
jne
mov
jnp
xchg
sti
sub
test
jmp
push
mov
cli
into
in
fcomip
loopne
inc
or
dec
cli
jnp
frstor
mov
dec
or
sbb
push
mov
mov
out
fdivrs
clc
js
adc
popa
je
pop
inc
das
fldenv
inc
rcrb
xchg
jl
fs
pop
jae
aaa
adc
dec
clc
cmp
das
outsl
adc
cs
cltd
scas
icebp
dec
andb
add
fs
sarb
movsb
lret
cmp
xor
out
shrl
lret
sti
pushf
mov
lcall
call
inc
xchg
ja
ret
rorb
lock
popl
call
and
mov
and
pushf
jae
pushf
add
imul
andb
fcompl
and
aas
in
xor
adc
pop
pop
inc
out
mov
outsb
push
pusha
imul
push
pop
cltd
int3
push
push
out
cmp
cmp
pop
clc
mov
out
push
xor
es
popa
inc
push
and
aad
hlt
aaa
popa
popa
sub
xchg
push
das
xor
xor
xchg
and
xchg
cmp
movsb
mov
insl
dec
cli
loop
scas
add
mov
push
mov
inc
push
inc
icebp
test
mov
push
adc
rcrl
mov
xchg
jmp
ret
inc
lret
inc
scas
and
sub
pop
xchg
jb
lret
imul
inc
sbb
jbe
lret
int3
and
mov
push
fucomip
and
adc
fadd
pushf
sbb
fldcw
pop
outsb
push
loope
mov
cld
cmpl
inc
and
test
jl
ffree
ljmp
outsb
in
mov
in
popa
stos
dec
inc
je
lock
cli
add
cltd
sbb
inc
push
jo
push
and
sub
dec
add
filds
bound
popf
mov
jnp
imul
test
jb
pop
jne
mov
add
or
xor
add
jo
gs
lea
push
add
adcb
mov
out
and
insl
enter
test
ljmp
cmp
mov
and
data16
xor
scas
scas
insl
sub
fwait
mov
loop
pushf
sbb
xlat
xor
fstpt
adcb
and
jl
and
repnz
push
add
mov
xchg
pusha
cmp
pop
lods
in
lret
push
or
cmp
mov
addr16
sbb
loop
xor
xor
dec
mov
shlb
loopne
push
scas
leave
lcall
mov
pop
mov
or
and
fwait
movsb
push
outsl
add
fisubs
jne
ret
repnz
sbb
cmpsb
shrl
cmp
lret
mov
daa
loopne
mov
push
and
ljmp
add
xchg
sub
mov
stos
push
gs
popa
push
jno
mov
sarl
push
push
pop
in
mov
xor
fs
jp
fldcw
add
jae
lods
gs
inc
icebp
dec
pop
and
pushf
rcl
fbstp
dec
push
stos
or
sub
std
or
jp
xchg
push
inc
push
pop
dec
out
leave
cmpsb
inc
adc
or
dec
test
cmp
and
xchg
mov
stc
push
jmp
daa
popl
adc
jb
jae
or
sub
inc
xchg
loopne
xchg
mov
fs
popa
xchg
mov
sbb
mov
sbb
aam
and
push
cwtl
inc
pop
ljmp
cmp
movsl
ds
mov
scas
xlat
push
pop
push
ja
scas
xchg
out
dec
pop
push
cwtl
cmp
mov
mov
jg
mov
ficomps
loope
mov
add
test
inc
sbb
lds
jmp
cld
ret
aam
lret
add
out
popa
pop
push
mov
mov
cmp
sub
je
or
pop
out
cwtl
lea
jb
mulb
scas
nop
lods
pop
sbb
jae
mov
push
movsl
pop
or
or
sahf
lds
lcall
shrl
mov
push
mov
push
popa
pop
cltd
xchg
bound
cmpsb
adc
xor
test
pop
jmp
sti
insl
cs
pop
je
xor
cmpsb
out
xchg
test
das
xchg
xor
mov
xchg
adc
out
icebp
or
shr
loopne
stos
test
cld
sti
or
adc
or
fs
sub
jns
dec
shlb
mov
inc
jns
cmpl
pop
cmp
mov
pop
xchg
jo
out
sub
aam
cmp
pusha
xlat
xor
sbb
sbb
das
cmp
bound
cwtl
jo
dec
inc
and
nop
js
push
roll
aam
jle
xor
ss
iret
in
clc
adc
xchg
push
fld
ljmp
test
push
mov
sub
clc
call
test
xchg
push
sub
mov
into
pop
or
out
sahf
inc
adc
fmuls
pushf
mov
icebp
add
sbbb
imul
sti
add
das
push
mov
push
add
shr
mov
push
ret
add
fidivl
dec
add
add
add
sti
add
das
push
mov
push
add
shr
mov
push
ret
add
fidivl
dec
add
add
add
sti
add
das
push
mov
push
add
shr
mov
push
ret
add
fidivl
dec
add
add
add
sti
add
das
push
mov
push
add
shr
mov
push
ret
add
fidivl
dec
add
add
add
sti
add
das
push
mov
push
add
shr
mov
push
ret
add
fidivl
dec
add
add
add
sti
add
das
push
mov
push
add
shr
mov
push
ret
add
fidivl
dec
add
add
add
sti
add
das
push
mov
push
add
shr
mov
push
ret
add
fidivl
dec
add
push
call
pop
sub
mov
push
pusha
mov
sub
mov
cmpb
jne
movb
jmp
popa
pop
mov
pop
jmp
jmp
jmp
mov
mov
test
je
add
jmp
add
call
push
push
push
push
call
mov
push
mov
add
call
mov
add
pop
call
push
push
push
push
call
mov
push
mov
add
push
call
add
mov
mov
add
mov
rep
mov
aad
ret
push
add
rorb
mov
int
mov
jbe
add
xor
shrb
or
add
mov
mov
inc
div
add
nop
call
int3
mov
cmpsb
mov
or
sub
sbb
mul
inc
pop
enter
push
outsb
push
sub
rorl
mov
sub
lret
or
cmc
cmp
sarb
pop
add
testb
mov
inc
add
out
adc
pop
add
add
call
enter
pusha
sbb
inc
sub
andl
mov
cmp
add
out
out
sti
loopne
push
lock
jmp
js
add
or
push
pop
pop
mov
ljmp
or
jmp
lock
in
adc
sbb
add
add
out
shlb
xor
ret
rorb
xorl
jne
fsubs
stos
dec
mov
sbb
pop
nop
push
fdivl
push
mov
cld
inc
cld
mov
mov
inc
aaa
push
push
push
jns
popa
add
pop
pop
pop
and
sub
test
sarl
or
and
call
sub
rorl
popf
das
mov
add
sbb
sub
xor
pop
mov
adc
movsb
dec
dec
test
mov
cltd
dec
in
add
loop
add
xchg
mov
xchg
mov
inc
and
clc
pop
push
sub
movsb
pop
mov
data16
lea
inc
and
mov
cmc
cmpl
aam
mov
inc
fbstp
in
push
or
mov
int
roll
pop
sbb
cwtl
movsb
jmp
sbb
pop
pop
mov
dec
mov
add
je
and
je
jecxz
inc
sub
inc
lds
je
or
lea
lret
sbb
push
inc
adc
push
rclb
adc
adc
pop
bound
push
mov
or
add
adc
adc
sub
mov
ljmp
sbb
mov
adc
test
test
incl
dec
mov
out
push
sub
movsb
stos
push
pop
dec
jmp
das
or
or
push
jp
mov
push
fstl
pop
jmp
jne
mov
add
and
add
jmp
or
addb
std
inc
clc
out
rcll
adc
sub
adc
mov
push
pop
dec
inc
dec
xor
fwait
and
int
scas
dec
and
inc
call
adc
cmpb
pop
add
sbb
adc
std
or
dec
dec
pusha
add
or
push
add
pop
lds
iret
push
xchg
xchg
cld
bound
test
sub
sub
bound
test
or
leave
add
adc
sbb
cltd
xchg
mov
enter
and
or
roll
cmp
adc
push
dec
cltd
jo
adc
cmp
mov
sub
sbb
push
and
cmpb
je
inc
es
sub
sub
subb
mov
mov
test
mov
dec
xchg
mov
push
adc
adc
dec
jge
ret
mov
shll
je
in
shlb
cmp
xchg
les
adc
adcl
ds
in
mov
cli
std
xchg
icebp
ja
mov
mov
mov
mov
inc
pop
or
adc
es
mov
cmpsb
daa
ds
repnz
or
ret
push
push
mov
stos
dec
jne
cld
pop
pop
in
pop
shrb
or
je
inc
add
ret
mov
shlb
jp
decl
xor
arpl
and
adc
sbb
div
or
jne
jmp
movsb
cmp
lds
add
jae
lds
or
cmp
and
jecxz
push
sub
ret
mov
insl
mov
shll
mov
push
xchg
cmp
adc
shl
dec
adc
jne
daa
mov
pop
jmp
scas
shl
ljmp
adc
mov
in
loop
lret
scas
sbb
outsb
mov
cmc
data16
cli
xor
adc
sbb
aas
xchg
and
or
daa
sub
sahf
cmp
cmc
jmp
and
test
adc
mov
inc
sbb
sti
inc
adc
or
cmp
cmp
out
xchg
push
dec
jae
push
shr
mov
mov
in
call
dec
lock
add
xor
pop
inc
lret
hlt
pop
inc
add
in
pop
mov
dec
fnstsw
in
dec
adcb
cmp
cmpsl
or
ficomps
rcrl
mov
mov
daa
mov
out
adc
add
pop
sub
push
push
lods
xchg
out
js
mov
mov
jmp
sub
mov
mov
add
add
fs
pushf
jl
lret
jnp
jmp
sub
push
push
pop
pop
imul
or
rcrl
enter
or
inc
shl
push
ret
push
mov
dec
int
in
push
fnsave
add
pushl
and
add
push
scas
push
jp
js
push
jmp
pop
mov
xor
orb
stos
sub
dec
pop
cmp
aaa
xorl
add
lret
or
push
xor
pop
adc
lea
repnz
in
add
imul
add
ret
mov
add
mov
cmp
je
cmp
je
ret
mov
imul
jmp
mov
imul
add
ret
mov
mov
shr
xor
mov
div
or
jne
jmp
mov
add
sidtl
mov
add
mov
add
mov
and
and
sub
ret
mov
ret
xor
mov
add
mov
add
mov
cmp
je
shl
dec
cmp
jne
add
mov
cmp
je
shl
shr
sub
cmp
jne
ret
mov
mov
mul
mov
xchg
scas
sbb
outsb
xchg
mov
cmp
jb
cmp
jb
cmp
jb
cmp
jb
add
mov
jmp
add
mov
jmp
add
mov
jmp
add
mov
jmp
add
mov
push
push
mov
mul
pop
shr
mov
add
xor
xor
xor
push
xor
mov
mov
shr
inc
cmp
jne
inc
add
add
cmp
jne
pop
pop
mov
ret
mov
mov
mov
shr
xor
mov
div
or
jne
jmp
mov
push
push
add
sidtl
mov
add
mov
add
mov
and
and
sub
mov
mov
pop
add
xor
mov
add
mov
add
mov
mov
shl
add
mov
pop
ret
mov
mov
mov
add
xor
mov
add
mov
add
mov
mov
shl
add
mov
ret
mov
push
mov
mov
shr
xor
mov
div
or
jne
add
call
mov
jmp
add
sidtl
mov
add
mov
push
push
add
mov
and
and
sub
cmp
mov
je
add
mov
add
mov
inc
cmpb
je
sub
mov
pop
pop
nop
add
mov
and
and
sub
mov
mov
mov
add
xor
mov
add
mov
add
mov
mov
shl
add
mov
mov
test
je
pop
ret
pop
sub
ret
add
add
add
scas
sbb
outsb
xchg
xchg
inc
shl
ret
push
mov
mov
mov
push
mov
add
push
pushl
mov
mov
jmp
mov
mov
add
mov
sub
add
mov
mov
mov
rep
sub
movl
movb
jmp
add
movb
sub
add
mov
mov
mov
rep
sub
movl
movb
mov
mov
popl
mov
pop
ret
xor
mov
xchg
mov
mul
mov
shr
mov
mov
shr
push
xor
xor
mov
div
or
pop
je
inc
mov
ret
xor
mov
xchg
mov
mul
mov
shr
mov
mov
shr
push
xor
xor
mov
div
or
pop
jne
inc
mov
ret
push
mov
pusha
push
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
pop
sub
mov
mov
mov
popa
pop
ret
mov
mov
mov
mov
nop
nop
mov
inc
dec
cmp
jne
ret
mov
mov
add
push
push
push
mov
add
push
push
push
call
ret
xor
mov
mov
xor
mov
mov
nop
nop
nop
mov
inc
inc
dec
cmp
jne
ret
xor
xor
xor
mov
mov
mov
mov
add
inc
dec
cmp
jne
cmp
jne
inc
cmp
je
jmp
mov
mov
rdtsc
add
mov
dec
inc
cmp
jne
ret
xor
mov
mov
add
mov
add
mov
sub
xor
lods
add
dec
inc
cmp
jne
cmp
jne
inc
cmp
je
jmp
push
call
ret
mov
add
push
push
push
push
call
pusha
cmpb
je
cmpb
je
nop
nop
nop
nop
push
mov
add
push
push
call
mov
add
mov
xor
cmpb
je
inc
inc
jmp
sub
mov
test
je
mov
cmp
je
add
mov
dec
jmp
nop
mov
cmp
je
mov
dec
jmp
inc
mov
add
xor
xor
mov
cmp
je
cmp
je
cmp
jne
inc
inc
inc
jmp
xor
div
mov
add
push
call
cmp
jne
mov
add
push
call
cmp
je
popa
mov
add
jmp
lea
mov
mov
cmpl
je
mov
mov
jmp
cmp
je
addl
jmp
ret
xor
mov
ret
mov
jmp
pusha
cmpb
je
cmpb
je
nop
nop
nop
nop
push
mov
add
push
push
call
mov
add
mov
xor
cmpb
je
inc
inc
jmp
sub
mov
test
je
mov
cmp
je
add
mov
dec
jmp
nop
mov
cmp
je
mov
dec
jmp
inc
mov
add
xor
xor
mov
cmp
je
cmp
je
cmp
jne
inc
inc
inc
jmp
xor
div
mov
add
push
call
cmp
jne
mov
add
push
call
cmp
je
popa
mov
add
jmp
mov
mov
add
mov
sub
je
mov
or
je
mov
sub
shr
mov
add
add
movzwl
ror
dec
js
sub
je
jmp
shr
add
jmp
shr
add
jmp
push
shr
mov
shl
mov
and
mov
pop
lea
mov
add
dec
jmp
shr
add
add
loop
jmp
jmp
push
push
pushl
call
mov
mov
add
mov
or
je
add
mov
push
call
or
jne
push
call
or
je
mov
push
popl
mov
or
mov
jne
mov
add
add
mov
mov
add
add
or
je
test
jne
lea
jmp
and
movl
movb
mov
push
pushl
call
or
je
nop
nop
nop
nop
mov
cmpb
je
mov
pusha
mov
mov
mov
cmpb
je
inc
jmp
movb
dec
cmp
ja
popa
movb
addl
jmp
mov
mov
mov
rep
add
mov
jmp
mov
add
jmp
ret
add
nop
mov
add
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
loope
add
add
push
loope
add
add
add
and
add
sahf
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loop
add
add
add
add
xor
add
inc
loope
add
add
fs
add
add
and
add
sahf
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loop
add
add
add
add
add
inc
gs
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
imul
jae
add
inc
jb
popa
je
push
push
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
add
add
je
jns
je
insl
inc
imul
jns
add
add
gs
je
inc
imul
jb
je
inc
imul
outsl
jae
dec
popa
outsb
fs
add
add
gs
imul
add
inc
gs
imul
add
inc
outsl
insl
jo
jb
inc
imul
add
inc
gs
outsl
fs
gs
imul
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
add
add
add
jbe
jo
xor
cs
insb
outsl
insb
gs
jne
xor
cs
insb
add
add
add
mov
les
add
cmp
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
nop
add
add
add
mov
add
adc
add
add
add
add
add
pop
inc
sub
dec
add
add
add
sti
add
das
push
mov
push
add
shr
mov
push
ret
add
fiaddl
add
add
je
jb
jae
gs
insb
jne
je
outsl
outsb
outsl
arpl
bound
popa
jb
jae
gs
insb
jne
je
outsl
outsb
cs
insb
add
je
jb
jae
add
or
add
add
add
add
add
add
add
add
add
add
add
add
inc
dec
inc
inc
inc
inc
push
inc
inc
push
push
add
imul
jb
popa
jb,pn
insb
jb,pn
jb
add
add
add
add
add
add
mov
add
push
add
add
add
add
add
nop
sub
add
add
add
sahf
or
add
add
sbb
add
call
adc
add
adc
add
inc
add
add
add
pusha
add
add
add
addb
add
add
add
add
push
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
xor
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
movsb
add
add
add
add
add
add
add
add
add
add
or
dec
gs
gs
xor
add
jb
jne
insb
inc
insb
insb
outsl
arpl
inc
insb
insb
push
imul
jb
gs
inc
jb
outsl
jb
outsb
arpl
outsb
je
jb
and
jae
insb
jbe
outsb
and
jo
jb
jae
or
and
fs
ja
insb
insb
and
and
insl
imul
add
je
insb
and
arpl
je
outsl
outsb
add
and
jp
add
add
or
add
add
popa
pop
mov
pop
jmp
mov
add
xor
lods
cmp
je
shl
inc
cmp
jne
mov
shr
dec
cmp
jl
shl
jmp
mov
popa
pop
mov
pop
jmp
mov
mov
popa
pop
mov
pop
jmp
xor
mov
inc
mov
inc
mov
inc
mov
shl
mov
shl
mov
shl
mov
mov
popa
pop
mov
pop
push
ret
nop
jmp
int3
int3
int3
int3
int3
mov
xor
mov
add
add
mov
mov
add
push
mov
dec
mov
inc
dec
cmp
jne
mov
mov
popa
pop
mov
pop
push
ret
nop
nop
inc
add
add
xor
mov
add
mov
push
mov
add
mov
xor
dec
inc
inc
cmp
je
cmp
jne
xor
mov
jmp
pop
jmp
nop
js
adc
pusha
add
add
push
xor
mov
push
test
je
mov
int
mov
jbe
add
xor
shrb
or
add
mov
mov
inc
div
add
nop
call
int3
mov
cmpsb
mov
or
sub
sbb
mul
inc
pop
enter
push
outsb
push
sub
rorl
mov
sub
lret
or
cmc
cmp
sarb
pop
add
testb
mov
inc
add
out
adc
pop
add
add
call
enter
pusha
sbb
inc
sub
andl
mov
cmp
add
out
out
sti
loopne
push
lock
jmp
js
add
or
push
pop
pop
mov
ljmp
or
jmp
lock
in
adc
sbb
add
add
out
shlb
xor
ret
rorb
xorl
jne
fsubs
stos
dec
mov
sbb
pop
nop
push
fdivl
push
mov
cld
inc
cld
mov
mov
inc
aaa
push
push
push
jns
popa
add
pop
pop
pop
and
sub
test
sarl
or
and
call
sub
rorl
popf
das
mov
add
sbb
sub
xor
pop
mov
adc
movsb
dec
dec
test
mov
cltd
dec
in
add
loop
add
xchg
mov
xchg
mov
inc
and
clc
pop
push
sub
movsb
pop
mov
data16
lea
inc
and
mov
cmc
cmpl
aam
mov
inc
fbstp
in
push
or
mov
int
roll
pop
sbb
cwtl
movsb
jmp
sbb
pop
pop
mov
dec
mov
add
je
and
je
jecxz
inc
sub
inc
lds
je
or
lea
lret
sbb
push
inc
adc
push
rclb
adc
adc
pop
bound
push
mov
or
add
adc
adc
sub
mov
ljmp
sbb
mov
adc
test
test
incl
dec
mov
out
push
sub
movsb
stos
push
pop
dec
jmp
das
or
or
push
jp
mov
push
fstl
pop
jmp
jne
mov
add
and
add
jmp
or
addb
std
inc
clc
out
rcll
adc
sub
adc
mov
push
pop
dec
inc
dec
xor
fwait
and
int
scas
dec
and
inc
call
adc
cmpb
pop
add
sbb
adc
std
or
dec
dec
pusha
add
or
push
add
pop
lds
iret
push
xchg
xchg
cld
bound
test
sub
sub
bound
test
or
leave
add
adc
sbb
cltd
xchg
mov
enter
and
or
roll
cmp
adc
push
dec
cltd
jo
adc
cmp
mov
sub
sbb
push
and
cmpb
je
inc
es
sub
sub
subb
mov
mov
test
mov
dec
xchg
mov
push
adc
adc
dec
jge
ret
mov
shll
je
in
shlb
cmp
xchg
les
adc
adcl
ds
in
mov
cli
std
xchg
icebp
ja
mov
mov
mov
mov
inc
pop
or
adc
es
mov
cmpsb
daa
ds
repnz
or
ret
push
push
mov
stos
dec
jne
cld
pop
pop
in
pop
shrb
or
je
inc
add
ret
mov
shlb
jp
decl
xor
arpl
and
adc
sbb
div
or
jne
jmp
movsb
cmp
lds
add
jae
lds
or
cmp
and
jecxz
push
sub
ret
mov
insl
mov
shll
mov
push
xchg
cmp
adc
shl
dec
adc
jne
daa
mov
pop
jmp
scas
shl
ljmp
adc
mov
in
loop
lret
scas
sbb
outsb
mov
cmc
data16
cli
xor
adc
sbb
aas
xchg
and
or
daa
sub
sahf
cmp
cmc
jmp
and
test
adc
mov
inc
sbb
sti
inc
adc
or
cmp
cmp
out
xchg
push
dec
jae
push
shr
mov
mov
in
call
dec
lock
add
xor
pop
inc
lret
hlt
pop
inc
add
in
pop
mov
dec
fnstsw
in
dec
adcb
cmp
cmpsl
or
ficomps
rcrl
mov
mov
daa
mov
out
adc
add
pop
sub
push
push
lods
xchg
out
js
mov
mov
jmp
sub
mov
mov
add
add
fs
pushf
jl
lret
jnp
jmp
sub
push
push
pop
pop
imul
or
rcrl
enter
or
inc
shl
push
ret
push
mov
dec
int
in
push
fnsave
add
pushl
and
add
push
scas
push
jp
js
push
jmp
pop
mov
xor
orb
stos
sub
dec
pop
cmp
aaa
xorl
add
lret
or
push
xor
pop
adc
lea
repnz
in
adc
jge
jle
data16
jge
jge
jle
jle
inc
and
add
pop
sub
dec
es
es
ss
pop
push
cld
inc
mov
add
add
cmp
addr16
jge
jle
jle
jnp
inc
or
jnp
data16
dec
es
mov
adc
lcall
add
cmp
addr16
jge
jle
jle
jae
ds
ds
push
jg
jnp
sub
imul
dec
cltd
addr16
inc
mov
add
add
xchg
jge
jge
jle
jp
imul
pop
fldt
imul
mov
imul
dec
js
cld
inc
mov
add
cmp
push
ljmp
jge
jbe
imul
stc
sub
inc
add
push
jnp
inc
scas
ss
frstor
push
js
cld
inc
jmp
pop
add
adc
frstor
jae
addr16
jb
jns
jge
pop
pop
cs
pop
mov
inc
addb
add
cmp
mov
add
add
cmp
addr16
jge
jge
inc
jnp
mov
bound
push
orl
push
jmp
pop
add
mov
jmp
push
xorb
inc
jge
jge
cmp
inc
bound
pop
orl
lods
inc
jle
mov
add
add
inc
push
pusha
sarb
jge
jbe
fdivrl
mov
bound
push
sbb
inc
sbb
xor
add
push
inc
out
pusha
sarb
jge
pop
incb
inc
mov
push
jnp
jg
jae
addb
or
js
fwait
cmp
add
add
inc
push
xorb
inc
jge
jge
pop
sbb
and
add
jg
jae
inc
push
and
fbld
inc
pop
cs
cmp
add
inc
pop
sarb
jge
jge
push
jle
incb
inc
loopne
pusha
push
jnp
jg
ja
inc
push
and
fbld
inc
pop
cmp
add
inc
push
pusha
sarb
jge
jbe
push
jle
incb
inc
loopne
pusha
push
jnp
jg
jg
push
xchg
sub
aaa
inc
pop
addr16
cmp
add
inc
push
inc
push
xorb
inc
jge
jge
jbe
arpl
arpl
inc
out
loopne
pusha
push
jnp
jg
jg
push
cmp
xchg
and
sbb
dec
inc
push
inc
push
inc
pop
sarb
jge
jge
jbe
push
jle
jnp
out
add
jb
jg
jg
jnp
push
lcall
and
fistpl
add
inc
pop
loope
inc
jge
jge
jge
jge
add
add
add
pop
mov
jg
jg
add
add
and
fistpl
add
inc
pop
xchg
jb
jnp
jle
jle
add
add
add
pop
mov
jg
jg
add
add
sub
pop
fistpl
add
add
pop
imul
int3
jp
jg
add
add
add
pop
outsb
and
jg
add
add
cmp
pop
cmp
pop
dec
pop
fistpl
add
add
pop
imul
ss
add
add
add
add
bound
fdivrl
jg
outsb
add
add
push
and
cld
push
pop
cmp
fistpl
add
fistpl
jae
ja
pop
add
rorl
push
jae
jnp
jp
add
add
add
sub
fistpl
pop
fistpl
add
add
lcall
pop
add
push
dec
rep
jns
fdivrl
jp
add
add
add
sub
pop
dec
pop
imul
add
mov
xchg
xor
clc
cmp
mov
add
jg
jp
add
add
add
add
inc
cmc
inc
cmc
inc
cmc
inc
push
xor
outsb
add
mov
jbe
jbe
clc
cmp
mov
add
jg
jp
add
add
add
add
dec
addl
popa
cmp
push
add
add
fistpl
jae
ja
push
add
jg
add
loop
loop
ret
dec
ret
push
add
add
fistpl
bound
cmpsl
pop
inc
pop
arpl
push
add
push
and
jle
jle
add
add
dec
sbb
add
add
movsb
imul
popa
inc
pop
inc
pop
add
jle
add
aaa
inc
add
sub
jbe
jbe
imul
imul
add
jle
jle
jbe
jbe
jbe
jbe
jbe
jg
jg
add
add
jle
jle
jle
jle
jle
jle
jle
jg
add
jg
jg
jg
jg
jg
jg
jg
add
add
add
out
dec
add
add
adc
cwtl
ret
sbb
inc
cmp
into
ret
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
xorl
pushf
xchg
mov
push
sbb
outsb
outsb
sbb
sbb
push
scas
cmpsb
mov
push
push
fs
pop
popf
xchg
xchg
bound
or
cmpl
push
mov
cmp
cmp
mov
jle
add
add
add
jle
insb
mov
cwtl
test
cmpb
inc
aas
cmp
int3
lods
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
xorl
mov
xor
sbb
sbb
sbb
sbb
popaw
pop
mov
stos
mov
stos
mov
cmpsb
jo
addr16
jb
jl
push
push
push
mov
ret
les
push
dec
dec
dec
cmpsl
mov
jle
jle
add
add
add
insb
mov
cwtl
test
cmpb
inc
cmp
fcmove
into
shlb
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
xorl
mov
movsl
sahf
xchg
xchg
mov
cltd
mov
stos
mov
stos
mov
cmpsb
mov
jle
cwtl
xchg
xchg
push
push
push
mov
mov
cmpsb
cmpsb
movsl
movsl
movsl
mov
mov
add
add
add
insb
mov
cwtl
test
subb
pop
dec
dec
jne
push
xchg
mov
mov
shll
mov
mov
mov
mov
mov
mov
xchg
xorl
fs
pop
fs
pop
fs
pop
fs
pop
fs
pop
fs
pop
fs
pop
fs
pop
fs
pop
arpl
pop
pop
pop
pop
pop
push
pop
push
push
pop
push
push
inc
inc
inc
sub
push
gs
gs
inc
inc
add
add
add
jle
insb
mov
test
pop
sbb
adc
adc
inc
inc
cmp
mov
mov
cwtl
mov
xchg
mov
mov
mov
mov
mov
cwtl
test
sub
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
push
adc
adc
adc
adc
adc
adc
or
jle
insb
mov
pushf
scas
xchg
mov
xorl
pop
push
xor
das
cs
pop
push
dec
enter
lret
mov
mov
mov
mov
mov
scas
cwtl
mov
jo
jge
jge
jge
jge
jge
jge
jge
jge
jge
lea
xorb
outsb
arpl
fs
fs
inc
cmp
inc
inc
cmp
pop
imul
cwtl
mov
jg
jns
push
inc
cmp
dec
inc
ja
imul
shlb
scas
mov
lahf
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
jle
lea
push
dec
add
insl
fs
stos
cltd
lea
andb
cmpsl
jg
outsb
bound
sbb
adc
or
lods
mov
mov
mov
xchg
mov
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
jle
lea
push
dec
add
sbb
sbb
dec
mov
xchg
lods
cwtl
mov
jg
jg
xchg
jo
jg
popa
outsb
pop
push
cmp
xor
cs
dec
dec
shll
shll
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
jle
lea
push
dec
add
xor
mov
popf
mov
lea
jg
jg
jg
jg
jg
jl
push
inc
cmp
dec
inc
jns
push
jns
mov
mov
ret
mov
mov
mov
mov
mov
mov
mov
mov
lea
jle
lea
push
dec
add
xor
mov
popf
mov
mov
jg
jg
jg
jg
nop
subb
cmpsl
nop
addb
push
or
xor
sub
test
ret
mov
mov
xchg
mov
nop
mov
mov
mov
mov
mov
lea
jle
lea
push
dec
add
xor
mov
popf
mov
xchg
test
andb
cmpsl
jg
popf
mov
lcall
subl
pusha
push
inc
cmp
xor
mov
mov
cmpsl
xchg
mov
mov
mov
mov
mov
lea
jle
lea
push
dec
add
pop
sbb
push
lods
cwtl
mov
mov
outsb
jno
popa
jno
popa
xchg
test
fwait
lea
xchg
ds
cmp
dec
inc
jns,pt
push
cmpb
cmpl
mov
mov
lea
jle
lea
push
dec
add
xor
cmpsl
cltd
nop
mov
cltd
mov
xchg
test
aaa
add
add
add
arpl
mov
cltd
mov
cltd
lods
cltd
lea
andl
or
or
and
rol
mov
scas
fwait
mov
nop
mov
jle
lea
push
dec
add
push
or
xor
sub
pushf
nop
dec
inc
inc
add
add
add
sbb
sub
outsl
addr16
cltd
scas
lcall
popa
js
pop
jo
push
dec
inc
cmp
dec
inc
mov
pushf
aad
mov
cltd
mov
andb
add
add
pop
xor
cmp
insb
gs
test
fwait
lea
xchg
aas
aas
xor
cmp
imul
test
cltd
mov
cwtl
cmpsb
xchg
xchg
dec
pop
push
push
mov
popf
mov
popf
mov
test
andb
sub
pop
pop
push
add
cltd
xchg
int
mov
sahf
xchg
popa
push
dec
sbb
sbb
xor
cmp
jbe
arpl
cwtl
mov
mov
popa
jne
pop
outsl
pusha
push
dec
inc
inc
inc
cmp
test
xchg
jns
push
cmp
xor
push
cmpl
mov
xchg
push
add
add
or
push
pop
push
push
dec
add
push
push
dec
mov
mov
xorb
push
add
sbb
sbb
xor
push
sub
and
add
cmp
xor
popa
sbb
dec
pop
out
pushf
add
js
adc
cwtl
ret
sbb
dec
lcall
dec
lcall
dec
lcall
dec
lcall
push
test
call
incl
incl
incl
incl
incl
call
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
jmp
add
jmp
add
jmp
add
jmp
add
mov
lcall
dec
lcall
dec
lcall
xor
pushl
out
pushl
out
pushl
out
pushl
out
pushl
out
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
inc
mov
jmp
pop
add
add
add
adc
pusha
add
add
incl
incl
incl
decl
decl
decl
decl
decl
incl
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
dec
iret
into
dec
iret
into
dec
iret
into
dec
iret
into
dec
iret
into
dec
iret
into
dec
iret
into
dec
iret
into
dec
iret
into
decl
decl
decl
decl
decl
pushl
out
pushl
out
pushl
out
pushl
out
pushl
out
pushl
out
pushl
out
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
inc
mov
incl
incl
incl
incl
incl
incl
incl
incl
decl
decl
decl
decl
decl
incl
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
dec
iret
into
dec
iret
into
dec
iret
into
dec
iret
into
dec
iret
into
dec
iret
into
dec
iret
into
dec
iret
into
dec
iret
into
lcall
lcall
lcall
lcall
lcall
pushl
push
pushl
push
pushl
push
cmp
xor
xor
idiv
xor
idiv
xor
idiv
xor
idiv
xor
idiv
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
lcall
lcall
lcall
lcall
cmp
incl
add
add
dec
lcall
dec
lcall
fdivrp
fdivrp
fdivrp
fdivrp
arpl
jmp
jmp
jmp
jmp
incl
add
add
push
pushl
push
pushl
push
pushl
push
pushl
push
pushl
push
pushl
push
pushl
push
pushl
push
pushl
push
ljmp
ljmp
ljmp
ljmp
ljmp
pushl
push
incl
add
add
pushl
cmp
xor
cmp
xor
cmp
xor
cmp
xor
out
out
out
out
out
out
out
out
out
out
out
out
jmp
jmp
jmp
jmp
jmp
incl
add
add
push
pushl
push
pushl
push
pushl
push
pushl
push
pushl
push
pushl
push
pushl
push
pushl
push
pushl
push
ljmp
ljmp
ljmp
ljmp
ljmp
pushl
push
incl
add
add
pushl
cmp
xor
cmp
xor
cmp
xor
cmp
xor
out
out
out
out
out
out
out
out
out
out
out
out
ljmp
ljmp
ljmp
ljmp
ljmp
incl
add
add
lcall
bswap
jmp
add
add
adc
cwtl
ret
sbb
sbb
iret
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
push
int3
negl
push
int3
pop
sbb
int3
das
sbb
int3
stos
sbb
int3
out
sbb
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
bswap
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
push
int3
lcall
bswap
out
sbb
int
sbb
int3
xor
add
add
add
js
adc
cwtl
ret
sbb
add
add
inc
add
inc
add
test
add
add
insl
pushf
sub
add
add
add
add
add
add
sub
add
inc
add
orb
add
mov
add
add
add
add
add
mov
add
add
sub
add
add
add
pop
add
sldt
mov
sldt
rolb
add
call
sldt
add
add
sbb
add
xor
add
dec
add
addb
add
add
add
or
add
add
add
add
add
js
add
add
add
insl
pushf
sub
add
add
add
add
add
add
mov
add
add
add
insl
pushf
sub
add
add
add
add
add
add
cwtl
add
add
add
add
sub
add
add
add
add
add
add
test
add
add
add
insl
pushf
sub
add
add
add
add
add
add
mov
add
add
sub
add
add
add
add
add
add
enter
add
add
insl
pushf
sub
add
add
add
add
add
add
fadds
add
add
add
insl
pushf
sub
add
add
add
add
add
add
call
add
add
add
add
add
add
add
call
add
add
add
add
mov
add
add
add
or
add
pusha
mov
add
dec
mov
add
in
add
mov
add
cwtl
mov
add
adc
add
mov
add
add
add
add
push
add
adc
add
add
dec
add
dec
add
add
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
mov
add
pop
mov
add
jg
pushl
add
add
ja
jo
add
jg
js
add
add
sti
sti
sti
sti
add
add
js
add
add
ja
ja
jo
add
js
jo
add
js
jo
add
js
jo
add
dec
mov
mov
ja
add
dec
int3
int3
inc
mov
pop
ja
jo
ja
add
dec
int3
int3
inc
dec
jo
cmpb
pop
xchg
add
inc
inc
jo
add
add
add
int3
int3
add
inc
ja
mov
jo
jg
incl
inc
inc
mov
push
ja
pop
jg
decl
add
ja
ja
ja
js
jo
xchg
mov
inc
add
add
add
ja
jo
js
ja
incl
ja
mov
jo
xchg
mov
incl
clc
js
incl
jg
jo
add
jg
pop
incl
jg
jo
add
pop
lock
jl
int3
int3
int3
jg
jo
add
add
jg
int3
int3
int3
int3
int3
jg
jo
add
add
add
int3
int3
int3
int3
int3
jg
jo
add
add
add
into
int3
int3
int3
int3
jg
jo
add
add
add
into
int3
int3
int3
int3
jg
jo
add
add
add
int3
int3
int3
int3
int3
jg
jo
add
add
add
add
add
add
jo
add
add
add
ja
ja
ja
xchg
add
add
add
mov
xchg
add
add
add
push
jo
add
add
add
js
mov
jo
add
add
add
pop
ja
ja
ja
ja
add
sarb
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
add
add
add
and
add
add
add
call
add
cmp
pop
add
add
jne
insl
add
outsb
add
add
add
outsb
add
add
add
add
outsb
add
jae
pop
add
push
add
add
push
aaa
push
sub
push
inc
push
inc
push
inc
push
sub
sub
pop
add
push
inc
push
xor
xor
daa
push
inc
push
add
add
sbb
pop
nop
cmp
data16
jno
cmpl
or
pop
mov
int
mov
push
push
jo
outsl
addr16
insl
xchg
outsb
pop
dec
je
bound
iret
jne
cwtl
imul
add
fs
inc
test
push
push
pop
add
ds
sub
or
loope
ds
shrl
out
sbb
lea
push
or
jl
push
in
and
cmpsb
or
icebp
gs
jle
or
sbb
pop
mov
push
inc
inc
dec
push
add
in
adc
mov
movb
or
pop
or
inc
rcll
sbb
jo
adc
cmc
ja
or
cmp
add
add
adc
movsl
test
cmp
or
inc
movsb
push
adc
adc
xor
mov
adc
mov
pusha
nop
cmp
js
mov
push
enter
mov
push
push
int3
es
push
je,pn
js
or
inc
pop
xchg
lret
add
and
sar
fs
je
adc
sub
cltd
dec
sub
dec
lds
inc
add
cmp
and
les
je
sub
add
outsl
arpl
lods
sbb
inc
insl
dec
xchg
nop
and
mov
or
aas
sub
outsb
sbb
fs
pop
or
dec
adc
jnp
push
inc
adc
add
mov
jl
adc
xchg
adc
sbb
xchg
sbb
and
dec
or
mov
and
decb
or
inc
dec
cmp
sub
xor
mov
add
imul
or
inc
inc
std
loope
adc
fisttpll
lahf
les
inc
adc
cmp
dec
push
icebp
arpl
jo
xor
add
cwtl
sub
pop
les
sub
xchg
pop
or
sbb
sub
adc
repz
push
mov
cmp
jnp
out
loope
lret
sbb
aad
adc
sub
fisubs
das
or
or
ror
fdivs
sbb
add
adc
data16
lds
out
or
adc
add
jae
cmp
or
es
sbb
sbbl
mov
adc
mov
sbb
das
or
xchg
mov
inc
push
fs
dec
or
xlat
call
rcrb
cmp
or
add
bound
mov
movsb
add
mov
inc
pop
bound
lock
imul
xchg
xor
stos
fucomip
fcomps
or
lret
int3
mov
or
pop
adc
je
push
les
out
nop
int3
mov
dec
es
or
mov
add
adc
inc
xor
enter
or
add
add
and
ror
adc
dec
xor
jge
push
movsb
cmp
mov
std
fdivl
ljmp
lret
pushf
mov
jge
cltd
and
shll
pop
adc
es
icebp
and
sbb
scas
mov
sbb
xor
or
add
ljmp
or
sub
arpl
push
or
mov
or
loopne
cwtl
jo
icebp
arpl
sub
nop
xor
subb
iret
shlb
mov
xor
test
sub
adcb
aam
mov
and
sbb
adc
push
xchg
fs
push
pop
outsl
je
dec
xor
mov
fadds
call
fstl
or
adc
shll
int
mov
dec
sub
and
and
pushw
sub
mov
les
flds
mov
adc
dec
lock
in
sbb
sbb
inc
mov
bound
pop
add
aam
push
jae
xor
sub
adc
sub
mov
in
hlt
mov
push
mov
add
add
and
sahf
dec
mov
jns
inc
lods
clc
inc
and
loop
or
mov
cmp
loopne
orb
cmp
mov
xchg
sub
ja
or
adc
inc
and
lods
xchg
or
jns
mov
xor
sbb
cmp
loop
nop
imul
pop
mov
mov
sbb
les
cwtl
and
and
sub
push
push
inc
adc
push
arpl
cmp
add
and
mov
sbb
sub
addr16
sbb
xchg
or
das
bound
and
xchg
bswap
cmp
xor
lea
mov
mov
out
dec
fdivs
sub
and
pushf
hlt
cld
adc
cmp
sub
test
icebp
bound
xchg
jmp
xor
and
and
mov
adc
fildll
pop
xchg
mov
sti
insb
lcall
mov
xor
sub
add
cmpb
cld
shlb
xchg
loopne
fidivl
aaa
sbb
pushf
and
dec
stos
orb
int3
mov
daa
clc
cltd
imul
inc
mov
xchg
lock
call
cmpsb
leave
or
mov
mov
jnp
sub
cmp
xchg
or
cli
rcll
fadds
js
cltd
adc
adc
jmp
or
and
xchg
or
sbb
sbb
lcall
add
inc
cld
and
aam
shl
or
inc
out
add
mov
cmp
orb
ja
cmp
xlat
psrlq
push
lahf
cmp
pop
leavew
fimull
mov
mov
in
or
lock
jp
cmp
xor
xchg
sub
mov
push
inc
test
arpl
xchg
cmp
fadds
andb
bound
int
mov
push
scas
jle
mov
inc
xor
lds
mov
push
add
add
sub
xchg
loopne
arpl
leave
dec
xor
sbb
and
cmpsb
mov
jo
xor
outsl
lret
add
mov
mov
or
or
leave
adc
sbb
jp
mov
js
rcrb
xor
jae
jg
or
sbb
inc
jo
mov
cwtl
or
and
jo
arpl
xor
xor
mov
jl
or
shlb
and
xor
test
add
test
popa
inc
sbb
in
xchg
test
and
in
jnp
imul
jmp
and
pop
or
and
lods
sbb
sbbl
pusha
mov
push
lods
xor
pushf
and
pusha
xor
adc
pop
pop
inc
or
sub
mov
mov
push
enter
ret
or
dec
sbb
or
cmp
xchg
adc
sbb
outsl
rcll
rcr
clc
mov
mov
sbb
iret
sbb
rclb
pop
or
and
or
jne
and
fsubrs
jno
jo
or
or
sbb
mov
js
add
popa
orl
pop
jge
dec
jle
sub
pop
adc
mov
dec
mov
add
push
mov
jnp
flds
jbe
or
test
loope
dec
xor
imul
dec
dec
pop
loopne
jne
jbe
adc
stos
jo
xchg
jg
xor
test
fimull
sbb
mov
mov
or
inc
movsl
sbb
xor
cltd
cltd
push
cltd
mov
fsts
pop
les
add
sbb
adc
inc
push
push
and
and
sub
cmp
sbb
sbb
pop
les
and
jns
addl
mov
xchg
sbb
inc
sub
sub
dec
cmp
or
mov
sub
sbb
cmp
adc
sub
sub
push
jg
xor
or
cmp
jg
add
xchg
mov
shl
fs
sti
cltd
or
cmp
cwtl
dec
out
addr16
or
bound
xchg
xchg
sub
imul
int3
mov
or
inc
jne
dec
mov
sarb
cmp
or
inc
je
insb
inc
push
bextr
or
lods
pusha
dec
dec
fcmovne
es
xchg
in
inc
shll
imul
mov
movsb
mov
sarb
xor
adc
movsl
rclb
outsl
mov
outsb
sbb
mov
sbb
notl
sbb
lods
mov
arpl
cmp
fidivrs
mov
pop
sub
int3
cmp
test
rol
jl
les
pop
aam
cmpsl
rorl
clc
and
enter
jmp
or
push
adc
push
xor
leave
push
sbb
or
adc
xorl
insb
enter
sbb
es
and
cltd
inc
jne
fs
flds
aam
and
cwtl
pusha
mov
imul
shl
stos
and
cmp
mov
mov
rol
arpl
sbbb
adc
lods
mov
imul
fdivrl
mov
or
jp
mov
mov
dec
push
ficoml
or
scas
clc
std
mov
cld
call
cltd
xor
xor
jns
gs
or
std
les
sub
adc
inc
xchg
or
add
rcrl
sub
lret
sbb
les
mov
add
scas
add
sbb
mov
mov
mov
or
aas
mov
jl
xchg
pop
pop
sub
test
test
imul
cltd
mov
mov
pop
push
xchg
or
dec
shrb
adc
and
sbb
mov
or
push
or
loope
stc
push
lods
push
imul
mov
and
leave
cmp
add
xchg
add
stos
sbb
icebp
add
mov
pop
push
inc
mov
mov
test
push
shl
les
inc
popf
add
xchg
sbb
sbbl
cld
sbb
ja
int3
jbe
or
inc
rorl
or
flds
pop
and
iret
xchg
movsb
dec
imul
sbb
rolb
or
and
or
push
frstor
and
adc
and
xor
mov
leave
sbb
xor
and
sbb
les
mov
cmp
add
and
add
cwtl
mov
insb
jo
mov
sub
test
cmc
xchg
xchg
stc
pop
call
push
leave
and
scas
push
mov
adc
push
popa
imul
mov
insb
movsl
scas
xor
or
clc
bound
xchg
bound
mov
lock
dec
adc
jae
mov
and
icebp
and
or
and
out
or
movsb
and
mov
mov
sbb
dec
iret
jo
add
or
xor
push
cwtl
and
mov
mov
adc
pop
mov
push
or
in
scas
and
and
jo
bound
cmp
sbb
sbb
outsl
or
fadds
mov
push
fsubl
pop
xor
add
pop
add
pop
add
sbb
enter
dec
out
jmp
int3
xlat
sbb
ret
jno
int3
or
jno
arpl
mov
push
push
pusha
inc
mov
enter
test
lock
push
nop
xchg
pop
insb
push
sub
mov
dec
and
cwtl
xchg
repz
lock
in
adc
mov
and
mov
dec
push
les
push
adc
das
inc
xor
cs
adc
xchg
cltd
and
std
je
imul
mov
stc
aaa
or
inc
xor
dec
xchg
or
and
mov
mov
sbb
or
xor
test
jg
cmpb
or
add
loope
setae
xadd
cmpsb
aam
cmp
dec
mov
mov
test
arpl
or
scas
add
scas
xor
ljmp
repz
inc
int
inc
std
xlat
loope
push
lret
or
into
add
dec
fcoms
test
mov
lods
outsl
sbb
clc
xor
and
movsl
sub
pop
or
cli
mov
jo
adc
mov
out
sbb
and
les
fldl
shr
sbb
or
add
mov
cltd
adc
and
aas
clc
xor
sub
and
insl
sbb
sbb
rorb
or
dec
xor
pop
jne
and
in
or
add
leave
add
push
xchg
and
pop
mov
and
push
sbb
lret
or
and
jge
cmp
or
pusha
xchg
addb
or
xor
and
mov
jno
and
xor
inc
arpl
adc
mov
lds
outsb
xor
or
mov
andb
test
ret
inc
hlt
adc
xor
mov
mov
dec
call
xor
sub
aas
push
mov
je
xchg
xchg
mov
lret
repnz
xor
and
cmp
dec
pop
xchg
outsl
and
adc
xor
dec
pop
xchg
jae
mov
mov
adc
add
xor
xchg
pop
and
sahf
mov
dec
in
sti
sbb
aaa
imul
imul
fisubl
stc
and
cmp
mov
inc
sbb
or
xchg
inc
and
jl
mov
cmp
push
dec
jl
test
cltd
inc
mov
mov
cmp
dec
dec
bound
xchg
lods
mov
dec
out
cmc
and
and
cmp
and
outsb
and
dec
pushf
xchg
scas
and
clc
adc
dec
inc
xchg
dec
and
test
and
dec
ljmp
daa
inc
aaa
inc
mov
fs
dec
xchg
mov
and
sub
insb
jge
adc
xchg
shlb
in
testb
inc
jno
sub
and
cltd
mov
dec
rcll
adc
inc
xor
mov
addr16
dec
mov
lret
in
cmc
adc
inc
add
and
dec
inc
xchg
push
and
jns
mov
dec
ficoml
inc
adcl
and
xchg
cmpsl
mov
dec
in
xchg
notb
or
and
inc
xor
mov
fs
dec
popf
xchg
movsl
and
inc
jecxz
mov
adc
inc
add
and
dec
bound
scas
lret
adc
and
inc
add
dec
inc
xchg
pop
and
mov
and
inc
pop
inc
or
xchg
cmp
push
inc
imul
lds
xchg
clc
adc
dec
and
dec
arpl
mov
aam
out
and
and
dec
inc
and
mov
gs
dec
xchg
xchg
cmpsl
and
cli
adc
dec
add
and
dec
inc
xchg
push
and
jae
mov
dec
rclb
adc
dec
jno
cltd
push
or
andb
fadds
mov
dec
xorl
dec
imul
mov
mov
dec
in
xchg
stc
adc
dec
and
inc
and
mov
pop
and
dec
xchg
xchg
test
mov
or
daa
adc
and
dec
xchg
outsl
and
rclb
and
dec
sti
mov
dec
adc
and
imul
cmc
adc
and
pop
adc
ja
xchg
xchg
lods
and
inc
shr
mov
adc
and
cmp
xchg
lods
mov
adc
and
inc
pop
push
or
xchg
and
je
mov
dec
std
mov
push
adc
and
inc
push
jbe
mov
xchg
and
dec
movsl
xchg
scas
and
icebp
push
cli
stos
in
and
and
mov
jne
mov
xchg
mov
add
push
mov
adc
pop
dec
jb
andb
inc
lahf
scas
mov
dec
out
repnz
and
inc
sub
push
adc
dec
test
shl
mov
adc
push
mov
or
and
test
rorb
xchg
in
and
and
inc
and
mov
adc
pop
dec
push
js
mov
mov
dec
out
hlt
adc
pop
and
inc
and
cmp
push
and
dec
outsl
xchg
jge
mov
mov
adc
and
dec
std
mov
xor
adc
orb
popf
and
xlat
adc
and
inc
add
setno
push
mov
andb
mov
and
pop
inc
push
xor
pop
dec
push
test
xchg
inc
scas
leave
mov
adc
and
pop
add
dec
inc
xchg
pop
and
xchg
mov
rclb
lock
pop
add
dec
xor
imul
ret
xchg
stc
adc
pop
and
inc
aas
push
mov
mov
dec
rclb
pusha
inc
das
aas
mov
gs
dec
lea
rcl
jmp
stc
and
aas
xchg
dec
and
bound
fwait
adc
xchg
jecxz
cmc
and
bound
mov
dec
jae
test
xchg
inc
test
fbld
inc
add
enter
cmp
dec
inc
pop
outsl
mov
dec
mov
leave
and
inc
in
decl
adc
xchg
and
sbbl
mov
adc
push
mov
je
mov
xchg
mov
clc
mov
andw
and
dec
imul
adc
and
addr16
dec
xor
jae
mov
hlt
mov
adc
push
jl
mov
dec
add
call
add
or
or
bound
add
into
push
adc
adc
inc
mov
or
or
cs
and
and
outsb
enter
subb
and
mov
sub
mov
xor
shll
shll
aaa
sarl
andb
sarl
cmp
rolb
add
mov
filds
ret
sub
dec
jecxz
orb
orb
out
loopne
add
push
xchg
add
imul
lds
test
test
icebp
iret
les
les
test
test
test
adc
shrl
imul
cwtl
dec
cwtl
scas
nop
loopne
jo
jno
stos
nop
sbb
jp
jne
adc
ja
cs
push
loopne
loopne
nop
add
jg
out
les
cmp
xchg
mov
mov
loopne
mov
loopne
cwtl
and
xchg
loopne
mov
cwtl
pusha
mov
lcall
cwtl
lahf
nop
lret
loopne
loopne
mov
nop
movsb
mov
mov
and
mov
sarb
mov
mov
xchg
loopne
loopne
cwtl
pusha
loopne
cwtl
sub
cli
cwtl
mov
mov
nop
aam
inc
mov
mov
mov
xor
loopne
loopne
cwtl
and
loopne
mov
into
loopne
cwtl
push
mov
mov
loopne
nop
into
loopne
loopne
xchg
pop
xchg
fadds
mov
add
loopne
loopne
lods
add
push
lods
les
addb
pop
jmp
add
dec
pop
out
add
repnz
stos
add
les
inc
pop
cli
add
lds
loopne
incl
je
jbe
js
jp
jl
jle
jg
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
lcall
sub
sub
sub
sub
cld
xor
xor
xor
xor
xor
xor
cld
cmp
cmp
cmp
cmp
cmp
cmp
cld
inc
cld
inc
cld
inc
cld
inc
cld
inc
cld
inc
cld
inc
cld
inc
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
push
cld
push
cld
push
cld
push
cld
push
cld
push
cld
push
cld
push
cld
pop
cld
pop
cld
pop
cld
pop
cld
pop
cld
pop
cld
pop
cld
pop
cld
pusha
cld
popa
cld
cld
arpl
fs
gs
data16
addr16
push
cld
insb
cld
imul
cld
outsb
cld
outsl
cld
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
jnp
jl
jge
jle
jg
cmp
cld
cmp
cld
test
test
xchg
xchg
mov
mov
mov
mov
mov
cld
mov
cld
nop
cld
xchg
cld
xchg
cld
xchg
cld
xchg
cld
xchg
cld
xchg
cld
xchg
cld
cwtl
cld
cltd
cld
lcall
cld
sahf
cld
lahf
cld
mov
cld
mov
cld
cmpsb
cld
cmpsl
cld
test
test
cld
lods
cld
lods
cld
scas
cld
scas
cld
mov
mov
mov
mov
mov
mov
mov
mov
mov
cld
mov
cld
mov
cld
sar
cld
ret
cld
cld
vshufps
cld
enter
lret
cld
int3
cld
int
into
cld
iret
cld
sar
sar
sar
sar
aam
aad
cld
xlat
cld
fdivr
frndint
fdivr
fdivrp
loopne
loope
loop
jecxz
in
in
out
out
call
cld
jmp
in
cld
in
cld
out
cld
out
cld
lock
icebp
cld
repnz
repz
hlt
cld
cmc
cld
idiv
idiv
clc
cld
stc
cld
cli
cld
sti
cld
cld
cld
std
cld
cld
pushl
add
cmp
cmp
pop
aas
or
or
or
or
aas
adc
adc
adc
adc
adc
adc
aas
sbb
sbb
sbb
sbb
sbb
sbb
aas
and
and
and
and
and
and
aas
sub
sub
sub
sub
sub
sub
aas
xor
xor
xor
xor
xor
xor
aas
cmp
cmp
cmp
cmp
cmp
cmp
aas
inc
aas
inc
aas
inc
aas
inc
aas
inc
aas
inc
aas
inc
aas
inc
aas
dec
aas
dec
aas
dec
aas
dec
aas
dec
aas
dec
aas
dec
aas
dec
aas
push
aas
push
aas
push
aas
push
aas
push
aas
push
aas
push
aas
push
aas
pop
aas
pop
aas
pop
aas
pop
aas
pop
aas
pop
aas
pop
aas
pop
aas
pusha
aas
popa
aas
bound
arpl
fs
gs
data16
addr16
push
aas
imul
aas
insl
aas
outsb
aas
outsl
aas
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
jnp
jl
jge
jle
jg
cmpb
aas
cmpb
aas
test
test
xchg
xchg
mov
mov
mov
mov
mov
lea
mov
aas
nop
aas
xchg
aas
xchg
aas
xchg
aas
xchg
aas
xchg
aas
xchg
aas
xchg
aas
cwtl
aas
cltd
aas
lcall
aas
sahf
aas
lahf
aas
mov
les
inc
push
xchg
push
dec
in
jo
inc
pop
push
dec
loopne
imul
clc
je
or
push
jo
popa
arpl
out
cld
jns
into
push
insl
push
ja
inc
dec
adc
jg
jae
inc
push
iret
outsb
fs
cmp
jb,pt
rcrl
cmc
cmp
inc
cmp
jo,pt
adc
mov
push
xor
jne
je
dec
imul
sub
in
mov
push
inc
push
lods
mov
fsubl
fs
outsl
sbb
push
ret
dec
bound
mov
leave
or
lcall
pop
sub
jae
mov
inc
repz
inc
jb
push
outsl
inc
outsb
fiadds
mov
sbb
jne
cwtl
sub
ljmp
pushf
adc
jb
jbe
addr16
stos
sub
dec
cmc
xchg
daa
mov
jg
mov
scas
sbb
push
jns
push
cmp
jmp
cmp
jb
aaa
xchg
push
movsb
mov
push
xchg
jns
cmp
mov
inc
jbe
in
mov
insb
adc
in
or
call
push
adc
popa
push
pushf
sbb
hlt
jo
cli
outsl
outsb
stos
cmpsb
mov
stos
sub
les
cmp
dec
sub
aam
sbb
dec
xor
xchg
jb
mov
lcall
adc
sbb
dec
xor
pop
mov
pop
dec
icebp
std
and
and
jbe
pop
dec
ds
movsl
xor
sub
dec
insb
dec
adc
scas
cmpsl
jo
push
jbe
imul
cwtl
fbld
cmp
inc
push
mov
pop
mov
sarl
insl
bound
sub
ret
arpl
pmulhuw
cltd
jae
and
jne
mov
dec
notl
cs
sub
push
test
jg
pop
lret
verw
pop
sub
clc
inc
arpl
dec
jae
mov
push
sbb
or
scas
push
sub
lds
pop
inc
push
jns
or
je
push
cltd
jae
mov
push
inc
aas
test
mov
scas
jle
rcrb
pop
hlt
movsl
sub
pop
ja
push
and
sub
pop
mov
stos
lds
xchg
push
repz
es
cmpsl
pop
dec
cs
dec
dec
fnstsw
and
push
scas
sbb
dec
pop
pop
scas
ds
rorb
ljmp
imul
cs
mov
jne
dec
push
dec
pop
dec
gs
arpl
jo
addr16
xchg
sti
adc
cmp
aam
inc
js
jb
dec
dec
adc
fstps
push
fwait
pop
iret
xchg
xor
outsl
ficompl
sub
das
in
jns
imul
sbb
cltd
and
arpl
push
scas
push
in
imul
push
cmpsl
jae
movsb
icebp
and
mov
sbb
cmp
cmp
inc
and
push
sbb
icebp
jne
fldenv
push
push
xor
xchg
inc
bound
imul
loope
mov
cld
inc
enter
inc
cmp
mov
inc
rorb
mov
sub
sub
stos
xor
pop
cli
xchg
cs
push
data16
cs
xchg
push
inc
or
xchg
mov
push
mov
or
pop
movsl
or
sbb
push
std
push
movsb
out
cmpsl
cmpsb
into
rcrl
xchg
xchg
or
movsl
inc
test
inc
sub
pop
dec
xchg
and
xor
lret
sub
movsl
cmp
arpl
sti
out
pusha
mov
adc
cs
adc
adc
orb
add
pop
or
fcmovnu
fs
outsl
in
cmp
jne
cwtl
stos
push
dec
adc
and
imul
xor
push
mov
into
js
mov
jmp
push
test
test
popaw
aad
bound
sbb
push
mov
loopne
cmpsl
inc
cmpsb
mov
lods
adc
push
dec
xchg
inc
inc
dec
std
test
mov
ret
xchg
push
pop
push
dec
inc
shrl
adc
push
mov
push
ljmp
adc
push
or
adc
inc
inc
imul
aas
js
mov
arpl
push
ficompl
jae
ret
xchg
inc
or
push
jnp
cmpsb
or
addr16
adc
insb
and
push
outsl
nop
shrl
mov
mov
rclb
and
movsb
mov
jge
jmp
in
hlt
stos
stos
sub
jns
or
dec
outsl
je
jmp
scas
cmp
xchg
iret
ret
in
jl
xor
movsb
imul
ret
repnz
js
pop
push
cmp
adc
iret
les
adc
sub
dec
pop
enter
sub
and
adc
inc
cmp
push
xor
push
sub
insl
inc
xor
pop
insb
mov
aaa
out
mov
sub
movsl
adc
clc
sbb
inc
and
push
rclb
dec
pop
mov
push
imul
test
jp
adc
or
je
inc
les
es
sub
inc
aam
mov
jno
icebp
insb
sub
int
and
xor
jno
std
js
cmovne
push
in
cmp
push
loop
das
jb
sbb
nop
sbb
dec
mov
push
push
inc
xchg
dec
ficoml
in
push
sti
dec
fsts
inc
cmpsl
nop
imul
test
pop
test
mov
push
mov
fwait
sti
jecxz
cmpsl
mov
rcll
ljmp
dec
popa
mov
jae
cmp
mov
mov
xchg
testl
adc
jmp
push
mov
push
sbb
dec
cmp
mov
cmp
push
sbb
push
dec
and
inc
adc
and
test
push
fnstsw
mov
sub
xor
outsb
lods
cmpsl
je
xor
fisubrl
lods
dec
lock
xchg
test
je
addr16
inc
jo
gs
jno
sub
push
jae
sbb
pop
es
insb
xchg
addr16
aam
xchg
fstps
cmp
or
xchg
pop
shrl
lods
sbb
adc
and
pop
aam
mov
xchg
inc
jmp
xchg
sub
push
fsubrs
dec
les
jno
fisttpl
mov
idivb
scas
lcall
je
or
sbb
dec
ja
cmp
dec
sbb
and
fwait
lcall
hlt
cmpsb
jl
adc
pop
aam
cltd
jecxz
push
pop
cmc
cmp
dec
std
pop
sub
es
popa
ljmp
cmp
push
dec
outsl
data16
xchg
add
lcall
sub
pushf
adc
sbb
xchg
movsl
dec
adc
inc
lods
addr16
jae
shl
jne
adc
sub
out
pop
int
aaa
xor
inc
mov
inc
push
aam
mov
adc
pop
leave
insb
pop
adc
push
sub
or
add
ja
push
xchg
fstpl
arpl
mov
push
outsl
imul
jae
movsb
mov
jle
xchg
mov
bound
push
fldenv
les
scas
dec
push
sub
sub
notb
push
or
mov
lods
cmp
inc
scas
push
jg
mov
sbb
pop
cmp
push
sbb
xchg
and
lcall
or
imul
jae
mov
mov
dec
or
sbb
inc
push
cmc
sbb
and
xchg
push
jae
es
jl
pop
les
mov
xor
je
pop
mov
addr16
and
lds
mov
nop
imul
fcmovnbe
lcall
movsb
mov
imul
sub
add
je
daa
inc
shrl
or
jl
jo
mov
mov
lret
adc
cmp
sbb
scas
cmp
movsb
pop
mov
lods
sub
dec
jb
out
es
pop
shll
jnp
int
dec
adc
push
inc
sbb
mov
and
xchg
pop
and
or
cld
fwait
in
sub
cltd
lds
rclb
sbb
lock
or
shl
or
shrb
stc
int
sbb
xlat
jecxz
xchg
pop
call
xlat
mov
sbb
loope
pop
mov
jns
push
inc
ret
push
jne
sahf
sub
ss
push
dec
js
aas
ljmp
ljmp
inc
add
adc
push
adc
and
in
dec
push
sbb
adc
adc
aam
mov
xchg
adc
test
movsl
sbb
xchg
inc
dec
je
mov
aas
inc
jb
jle
push
dec
aam
popl
push
ret
mov
leave
pushf
xchg
mov
adc
dec
mov
adc
outsl
stos
and
mov
or
lods
jp
pop
mov
cli
mov
mov
bswap
sbb
ror
stos
pop
test
cmpsl
sbb
shll
pop
pop
jbe
mov
xchg
int
and
ds
mov
popf
js
cltd
das
push
add
push
fidivrl
dec
xor
cmp
push
pop
aaa
xor
mov
sbb
xor
push
imul
xor
xchg
pop
and
xor
int
movsl
adc
dec
xor
mov
xor
or
push
arpl
push
jb
jbe
gs
sbb
push
ja
loopne
sbb
xor
hlt
imul
cld
mov
push
inc
lgs
cmc
insb
aas
adc
and
jo
or
or
arpl
jo
popf
cltd
stos
inc
fisttpl
mov
pop
aam
xchg
mov
xchg
fs
mov
aam
mov
leave
mov
xor
push
cli
mov
lods
sub
cmpsl
push
push
movsl
sbb
loop
in
add
pusha
inc
movsl
push
in
gs
adc
adc
lret
dec
mov
js
test
push
push
dec
xchg
mov
dec
xchg
hlt
xchg
out
scas
orps
es
imul
dec
or
push
scas
and
adc
mov
sbb
sahf
jae
adc
lods
cwtl
sub
rol
xorb
cmp
pop
into
sarb
and
xchg
sub
sub
cmp
sub
dec
jae
lret
into
push
movsl
adc
lret
push
bound
dec
or
lcall
movsl
dec
add
xor
adc
dec
mov
pop
mov
sub
aad
fwait
gs
fwait
bound
mov
je
sub
mov
xor
xchg
jns
adc
xor
std
jp
xchg
inc
sahf
push
mov
sub
mov
sub
push
test
lods
adc
and
aam
test
adc
adc
sbb
cs
xchg
or
cld
mov
inc
push
aad
aam
movsl
jne
push
sbb
dec
push
xlat
mov
and
lret
ss
repnz
mov
mov
and
loope
adc
mov
rcll
push
or
inc
and
push
sub
pop
lods
and
pop
aad
ror
push
push
gs
adc
ljmp
movsl
xor
jb
cpuid
mov
stos
pand
mov
test
sbbb
xchg
push
lods
push
push
push
popa
push
jbe
imul
cmp
dec
adc
shrb
mov
push
outsb
xchg
icebp
dec
sbb
repz
repnz
mov
fwait
jmp
aad
xlat
sub
outsl
ljmp
push
adc
dec
sbb
lret
push
sub
pop
push
adc
inc
pop
rcrb
adc
adc
xchg
pop
push
sarb
jp
jbe
imul
in
nop
sahf
jmp
fstps
daa
push
sub
jb
cmp
push
mov
jp
sbb
imull
test
movsl
cmp
sbb
imul
and
mov
imul
fpatan
fidivs
movsl
push
jae
sbb
cli
lcall
aas
push
push
jns
imul
cld
stos
arpl
jae
loopne
push
and
mov
into
push
pushf
addr16
sub
mov
dec
mov
shrb
push
gs
push
pop
fnstenv
lods
sub
jecxz
adc
popf
sbb
sub
and
aad
sub
pop
and
in
popf
mov
inc
push
loop
fidivs
rep
cmp
aas
and
cmc
mov
fwait
xchg
pop
ss
pop
enter
push
loop
faddl
inc
push
loop
xor
jno
or
mov
pop
xchg
fwait
inc
imul
mov
push
jmp
mov
jg
int
sub
aad
mov
jp
cmp
push
and
loop
cmpsb
push
mov
push
pop
mov
or
pop
in
push
pop
push
jns
xchg
mov
mov
inc
sbb
add
push
jbe
inc
jne
push
xor
in
sub
xor
or
xor
aaa
adc
test
sub
or
xor
xor
lods
test
and
pop
xchg
mov
xor
and
pop
xor
enter
xor
lods
xor
xor
or
xor
xor
lods
xor
jle
xor
int
sub
mov
cmpsl
bound
push
jnp
in
cli
push
sbb
test
mov
cmpsl
aad
add
or
pop
mov
mov
fldt
std
mov
jb
mov
dec
sub
cs
jl
cmpsl
or
insl
mov
dec
fiaddl
inc
mov
das
aam
test
cld
outsl
sti
push
sbb
jcxz
jge
scas
ljmp
and
int
push
xchg
repz
loop
adc
push
push
mov
dec
and
ficoms
cmc
push
ss
mov
dec
sbb
stos
inc
jne
adc
sarb
or
push
pop
das
dec
bound
insb
daa
xlat
and
outsb
and
inc
dec
outsl
dec
mov
dec
gs
aas
sbb
sub
popf
shrl
cmp
mov
push
cmp
lret
xchg
cmp
mov
fisubrs
jnp
cmpsb
xor
adc
test
push
test
push
inc
lods
xchg
fstpt
sbb
ret
stc
or
cmp
push
jp
cmp
and
stos
sbb
int3
clc
testb
test
cmp
pop
push
push
aam
stos
adc
dec
outsl
adc
xor
or
mov
lock
lret
adc
orl
dec
or
push
add
xor
cmp
mov
push
je
test
loopne
ret
add
in
dec
xor
add
jne
xor
sarl
sbb
stos
push
lock
ja
punpckhbw
testl
add
insb
and
lea
sub
push
mov
clc
mov
xor
cld
int
incl
sti
and
pop
dec
dec
inc
xchg
push
and
pop
or
push
push
bound
mov
push
mov
loopne
add
or
data16
inc
rolb
sbbb
add
test
cltd
and
nop
adc
cmp
shlb
push
pop
lret
in
andl
mov
test
inc
insb
mov
push
push
incb
xchg
data16
pushw
adc
add
int3
add
jg
cmp
addr16
push
test
sbb
std
je
and
fs
mov
mov
and
inc
mov
jne
push
sbb
mov
clc
push
sti
rcrl
mov
sbb
test
mov
add
ds
push
xor
add
sub
fdivs
mov
or
test
in
or
adc
push
adc
ja
or
data16
and
mov
or
or
xor
cmp
push
scas
cld
loopne
mov
and
inc
nop
pusha
enter
pop
add
inc
or
push
jge
or
add
push
mov
xorb
pop
inc
add
and
or
xchg
and
nop
add
push
sbb
adc
and
cld
add
std
add
mov
test
mov
sub
sub
sub
mov
clc
add
ret
test
push
xor
push
inc
xor
push
push
sbb
adc
jge
andl
mov
xchg
pop
mov
sub
dec
adc
enter
cmpsb
mov
fbld
add
aam
inc
pusha
and
xchg
rcrl
adc
mov
sbb
pushl
xchg
aas
mov
loop
das
scas
adc
imul
xor
sbb
mov
inc
mov
inc
or
sbb
pop
xchg
or
out
adc
in
mov
or
add
call
adc
or
mov
cmc
push
orl
sbb
aad
addb
inc
data16
push
push
jg
push
sbb
rcrb
popa
cwtl
andl
out
loop
adcb
cmc
les
arpl
add
lea
shl
sbbb
mov
or
test
mov
sbb
call
sbb
ss
xchg
lea
jmp
fdivr
add
sti
out
incl
cmp
addr16
adc
jmp
sti
push
js
test
outsl
lock
inc
je
dec
pop
and
sub
call
js
xchg
mov
cmp
add
cmp
xchg
push
sbb
jmp
popa
testb
inc
adcl
addb
cwtl
adc
xor
stos
dec
add
mov
pop
stos
fcoml
or
mov
movsl
fwait
push
xorb
imul
filds
and
lcall
lea
and
inc
mov
test
inc
int
aad
popf
xor
cmp
cltd
cmp
dec
pop
push
adc
mov
ret
into
adc
cmp
and
and
mov
and
iret
sub
mov
inc
push
pop
mov
jae
or
data16
and
adc
jbe
or
decb
xor
hlt
lea
insb
test
jbe
test
fsubl
clc
pop
ret
and
or
sbb
push
push
aam
mov
dec
add
adc
and
mov
push
mov
ljmp
push
lea
sub
jae
gs
add
dec
pop
jno
sbb
sbb
and
inc
or
negb
cmpb
fldt
fdivl
stc
or
and
fs
xchg
inc
inc
mov
push
cmp
and
mov
dec
or
dec
aad
test
clc
or
adc
jno
dec
cld
je
call
push
sbb
call
mov
ja
jo
add
adc
push
cltd
je
es
mov
pop
push
fistl
clc
in
cwtl
adc
or
filds
dec
sub
sbb
insl
and
pop
stos
mov
repnz
sbb
or
inc
sbb
cmp
fcompl
sub
push
jne
lret
out
push
test
sbb
enter
rorl
shll
mov
clc
adc
or
sbb
movsb
mov
ret
pop
jmp
and
or
out
adc
sahf
and
scas
or
mov
lods
mov
or
repz
push
mov
add
inc
fs
aas
xor
mov
adc
out
cmp
cmp
or
push
adc
adc
popa
pushf
and
bound
add
addb
pop
fadds
imul
adc
or
fcomps
and
xor
xor
stos
push
sub
sub
inc
inc
sub
mov
inc
pop
orl
js
mov
add
call
pushf
cmp
and
xor
inc
mov
xchg
js
push
adc
addb
mov
arpl
dec
sbb
xor
adc
popa
jbe
pop
add
test
arpl
push
inc
sbb
call
xor
sub
aas
adcb
adc
and
xchg
jne
movb
jle
and
lcall
push
mov
or
ljmp
fisubrs
cmp
or
pop
xchg
lret
add
pop
enter
and
inc
pop
and
cltd
push
sbb
mov
add
sbb
push
adc
rcrl
cmp
sbb
fstpt
insb
push
pop
fisttpll
pop
repnz
cmp
or
enter
or
pop
and
add
lret
nop
into
jnp
xchg
shll
adc
mov
rcl
cmp
enter
mov
inc
mov
rcll
add
adc
lods
mov
cmp
pop
adc
xor
clc
add
gs
xchg
pop
fcomp
sbb
loope
lods
adc
subb
dec
lcall
ret
add
pop
mov
lds
push
mov
inc
fnsave
les
jmp
rorl
mov
lds
stc
push
jle
inc
sub
je
and
sahf
mov
sub
push
or
dec
jp
and
mov
dec
inc
xor
das
sbb
pop
mov
adcb
bound
mov
test
inc
sub
lods
scas
orl
jp
dec
sahf
or
inc
sub
jl
or
cmp
add
clc
pop
lds
dec
add
sub
pop
addb
inc
lea
clc
les
mov
sub
daa
rol
or
das
sbb
xchg
rcll
adc
xrelease
fldcw
xor
push
mov
mov
mov
aam
fildl
jno
xchg
or
push
adc
adc
push
inc
xchg
xor
or
fisubrs
fists
cli
xor
inc
in
cmpl
xchg
imul
cmp
adc
inc
pop
jp
hlt
hlt
int3
or
push
clc
enter
stos
mov
xor
or
test
lea
test
jge
cli
notb
mov
pop
pop
fs
push
fistpl
cmpsl
out
push
mov
mov
addr16
nop
test
aaa
mov
add
pop
sub
pop
adc
sahf
test
push
cmp
test
jne
sub
fistl
call
pop
in
jno
adc
or
in
les
cld
inc
in
cmc
in
jns
fwait
in
dec
xor
hlt
xor
pop
js
lods
jne
popa
loopne
stos
cs
cmp
and
je
sbb
push
ret
cmp
mov
inc
shll
scas
pop
cli
fsts
and
fs
lods
orb
xor
lock
mov
stos
lcall
movsb
adc
push
jp
xchg
pop
fsts
arpl
nop
sub
arpl
movsb
adc
sarb
dec
xchg
xor
add
lret
jbe
or
sub
xor
sbb
inc
mov
xor
cld
jo
fwait
into
pushf
test
clc
inc
cwtl
adc
add
jle
sub
js
push
jno
jmp
push
push
or
mov
sub
imul
add
sbb
pop
pop
mov
lock
push
pop
loopne
popa
hlt
lds
push
aam
adc
mov
pusha
or
xchg
and
mov
movsl
cmpsb
js
mov
xor
push
pop
cmp
or
out
aam
lea
imul
fwait
hlt
add
inc
cmp
sbbb
cmp
les
adc
add
add
ljmp
ss
ficomps
pop
xchg
mov
repnz
fists
hlt
sbbb
xchg
daa
scas
pop
mov
int3
je
jmp
xchg
push
inc
adc
xor
pop
cmp
push
push
xchg
dec
push
mov
fdivs
cmp
push
pop
cmpsb
mov
loopne
sub
out
mov
jg
or
and
stc
or
xchg
jb
outsl
xor
dec
out
xchg
movsl
test
lock
cmp
in
data16
push
cs
test
xchg
and
mov
in
xchg
pusha
cmp
pop
xchg
xchg
cmp
add
in
insb
sbb
shlb
sub
call
es
mov
jno
xchg
in
out
aam
and
sub
sub
push
and
mov
xor
jle
in
adc
xchg
jbe
mov
int3
loop
jbe
stos
sub
hlt
push
cmc
push
mov
adc
pushf
inc
push
pusha
xchg
adc
add
icebp
jmp
push
push
jmp
pop
shll
pop
mov
pop
adc
mov
inc
push
inc
in
add
sub
out
cmp
adc
dec
sub
xor
xchg
notb
cli
xchg
cli
inc
lds
movl
ret
push
js
jo
jno
xchg
cmp
je
dec
and
mov
pop
xchg
fsubrs
mov
xchg
push
adc
mov
in
sbb
insb
or
adc
adc
inc
jae
push
sbb
pop
sahf
add
push
clc
push
mov
inc
cmp
pop
and
jp
leave
test
decb
dec
cli
nop
xchg
and
lock
jmp
orl
cmp
jmp
jae
daa
and
out
and
pushf
shll
pop
pushf
pop
xchg
xchg
lds
fnstsw
cmc
or
mov
and
sub
pop
xchg
xor
bound
cltd
push
call
xor
add
dec
inc
in
jb
rol
aam
in
imul
sub
mov
inc
jmp
adc
dec
clc
pop
push
ds
inc
adc
je
cmp
fdivs
xchg
xor
in
lock
popa
sub
clc
xlat
test
adc
push
sbb
icebp
in
lock
push
pop
jns
xchg
in
cwtl
clc
adc
rcrb
add
and
roll
xchg
add
cmp
fisttps
xor
ss
xchg
pop
push
inc
aad
xor
cli
je
shlb
sub
vsqrtsd
inc
jb
sub
imul
inc
xor
push
ds
or
lcall
xor
pop
push
push
fcoml
pop
add
mov
popa
jnp
jge
repnz
lcall
movsl
sbb
xchg
test
or
incl
sbb
sarl
je
inc
or
xchg
add
ret
popf
adc
or
adc
testb
add
jp
mov
nop
cmp
cmp
lods
lods
sbb
inc
sbb
pusha
xchg
or
test
repz
rorb
jp
loopne
and
or
push
mov
dec
xor
lahf
rcl
loop
fs
sbb
cmpsb
push
inc
fldz
xor
adc
mov
popf
sbb
lea
jl
xchg
adc
push
and
add
movsl
scas
push
popa
cmpsb
mov
in
and
sahf
stos
test
sahf
xchg
in
sbb
cmp
mov
mov
xchg
sbb
mov
push
jns
nop
sbb
jmp
daa
cmp
and
and
fldenv
insl
hlt
jns
rcrb
and
push
sub
mov
add
cmp
or
sbb
push
and
fildll
ret
fldenv
push
xchg
or
lds
pop
test
mov
adc
pop
out
daa
and
std
mov
fucomip
and
andl
mov
mov
push
pop
mov
cmp
mov
bound
pop
or
xor
mov
mov
test
xchg
mov
push
shlb
and
xchg
pop
cwtl
jbe
pushf
inc
pop
call
xor
push
mov
xor
sbb
mov
lea
cmp
bound
or
popa
and
and
jae
push
push
int3
inc
push
fsts
orb
js
push
add
add
inc
adc
jno
scas
movsl
jge
dec
mov
das
inc
int3
test
push
adc
adc
or
cmpsb
mov
les
rclb
aam
pop
jge
or
pop
aaa
je
xor
sub
fbld
adc
mov
pop
mov
int3
gs
jp
mov
lret
add
mov
push
shll
push
pop
lds
test
or
movb
cmpsl
mov
push
gs
pop
push
jo
leave
pop
call
adc
mov
or
in
and
jae
fcoms
and
imul
std
hlt
cmp
push
push
and
jecxz
push
repnz
mov
fs
xor
xchg
adc
dec
or
jl
sub
pop
test
rolb
in
inc
lods
inc
and
mov
sub
fiadds
gs
adc
dec
dec
pop
mov
jmp
dec
inc
or
and
jno
mov
adc
sub
sbb
pop
call
push
dec
jle
ja
out
call
push
dec
xchg
and
rorb
and
add
lret
xlat
and
xor
pop
test
int3
adc
daa
cmp
iret
bound
inc
int3
out
mov
pop
popf
xchg
sti
sbb
mov
pop
sub
mov
xchg
add
ret
push
lock
call
xor
nop
pop
pop
dec
dec
mov
test
xchg
call
and
movsl
daa
repz
pop
fwait
dec
lea
mov
cmp
inc
or
push
mov
daa
ret
xor
dec
daa
push
push
adc
out
pushf
lea
lret
inc
je
in
mov
push
mov
xlat
stc
and
and
in
cmpsb
mov
pop
pop
mov
icebp
and
push
xchg
cmp
add
sbb
xchg
push
push
loop
je
dec
lret
mov
push
sbb
adc
test
lret
sbb
ds
pop
lea
popa
add
inc
int
inc
mov
push
cmp
lods
iret
enter
sub
pusha
pop
testb
dec
xor
aas
jecxz
push
xchg
sbb
add
pop
xchg
cmpsb
jmp
pop
and
cld
mov
add
stc
inc
xchg
sbb
jne
cld
cmp
frstor
pop
mov
xor
jmp
cmp
sbb
imul
shlb
and
mov
ficoms
ds
jns
clc
xchg
push
inc
hlt
jp
xor
or
sbbl
xchg
dec
call
push
sti
lock
leave
fld1
mov
push
inc
push
or
mov
call
inc
inc
push
and
lock
cmpsb
jle
aaa
seto
sarb
ja
les
daa
out
repz
add
dec
out
lret
shll
mov
cmc
sbbb
and
imull
sbb
loop
or
repnz
fwait
mov
inc
dec
xchg
nop
sbb
dec
xchg
sub
scas
pop
and
cmp
push
and
popf
bound
sub
call
fsubr
mov
jmp
and
test
jae
xchg
sbbb
adc
xor
cmp
push
jb
mov
pusha
pop
divl
pop
mov
stos
jmp
call
mov
les
mov
adc
jne
lcall
call
add
test
jmp
mov
les
and
pop
pcmpgtd
aam
ret
mov
mov
movsl
jno
mov
xchg
in
lret
das
dec
sbb
push
dec
and
gs
stc
and
add
fldt
jnp
pop
push
leave
and
push
and
xchg
xchg
mov
lahf
push
push
inc
jmp
inc
and
je
stos
xchg
clc
mov
push
adc
mov
pop
xlat
jmp
xchg
jg
repz
in
shr
adc
loopne
push
push
scas
dec
xchg
cld
or
cmpsb
adc
lahf
mov
sbb
js
inc
mov
arpl
add
mov
iret
repz
mov
test
push
xor
and
inc
shl
dec
daa
mov
inc
sbb
and
sub
mov
dec
test
dec
enter
sbb
and
in
push
aam
or
pop
lea
dec
cmp
push
lret
and
push
adc
lahf
dec
and
mov
push
or
fdivrl
push
xor
jl
dec
mov
sub
adc
xor
adc
call
gs
cmp
pop
dec
pop
mov
push
clc
push
sub
mov
inc
fld
jmp
jge
rep
push
mov
mov
lret
cmpl
cld
pop
stos
xchg
roll
push
add
pop
push
ret
push
sbb
mov
mov
jnp
or
es
fs
sbb
pusha
mov
pushf
test
inc
fucomp
in
mov
sahf
jne
mov
push
lods
sub
jl
hlt
sub
fisttps
xor
and
popf
popl
fucomp
sub
sarl
cli
ret
cmp
icebp
shll
ret
and
and
mov
and
or
or
and
and
adc
add
and
dec
adc
nop
sbb
and
sub
enter
xor
lods
cmp
sub
inc
dec
ljmp
rolb
movsb
jp
test
pop
aam
cli
jl
std
sbb
cmp
ret
jg
mov
int3
or
and
ss
fisubrs
fcmovbe
test
sbb
insb
mov
push
jmp
adc
insb
inc
and
and
or
mov
fcompl
push
sbb
or
les
sub
jno
adc
adc
and
sub
mov
int
movsb
cld
inc
and
push
xchg
or
bound
add
clc
movsb
pop
dec
or
sbb
add
bt
popa
or
add
cs
pop
aam
push
lret
dec
or
inc
stos
pop
pop
dec
push
fnstcw
or
add
in
mov
and
out
sbb
push
mov
xor
mov
push
push
pop
or
push
cmp
movsb
xchg
outsl
jne
sub
stos
pop
push
xchg
push
cltd
sub
pop
and
fdecstp
dec
es
push
sbb
push
sbb
icebp
pop
or
and
repz
lods
dec
mov
jbe
xchg
lea
popf
dec
adc
jne
mov
enter
push
lea
rep
shl
push
or
out
movsb
dec
sbb
mov
add
ret
rcrl
dec
sti
je
jne
imul
dec
jno
lret
dec
jno
dec
adc
pop
fists
dec
icebp
sbb
sub
jg
xchg
ds
test
ret
shll
cli
sbb
mov
ja
xchg
mov
push
cmp
jp
cltd
jecxz
lock
stos
lds
gs
into
push
mov
jmp
cs
js
add
add
or
dec
and
or
xor
bound
mov
mov
sub
aaa
mov
push
mov
pop
pusha
mov
pop
push
jae
cld
stos
out
pushf
or
dec
jne
shlb
or
cmp
in
add
fistpl
xchg
loopne
mov
xor
add
xor
lahf
and
push
push
jp
adc
inc
push
pop
adc
xchg
rcrb
cmpl
xor
out
je
add
jne
pop
xchg
fsubrs
pop
push
enter
call
mov
jb
sbb
call
jecxz
loope
jmpw
push
outsb
in
loopne
mov
sarl
push
in
cmp
subb
and
mov
or
and
add
pop
inc
in
adc
inc
jg
and
xchg
xor
xor
test
test
and
xchg
das
push
or
add
cmp
into
shlb
rolb
movl
jg
xor
cmp
stc
inc
stos
test
fdivrl
mov
pop
jge
incl
mov
cmpsb
je
movb
add
xchg
in
aam
sahf
roll
pop
out
dec
pop
inc
cli
mov
lea
sub
rclb
js
and
xchg
ljmp
mov
and
adc
movsl
adc
xchg
mov
xor
fldl
jns
xor
xchg
adc
mov
dec
int3
test
xor
mov
mov
test
or
bound
xor
rcrl
jmp
jne
mov
or
push
arpl
cmpsb
inc
aaa
neg
mov
jmp
in
pushf
and
jno
sub
sbb
mov
mov
mov
add
sub
and
add
cld
adc
mov
adc
cmc
jb
adc
xchg
orl
cmp
inc
add
mov
push
and
sbb
dec
jne
mov
add
call
sub
pop
mov
or
jns
movsb
or
ret
arpl
jae
dec
xor
imul
sbb
je
or
fs
call
inc
inc
or
dec
push
adc
addr16
mov
ret
mov
dec
mov
push
jg
out
or
mov
push
or
into
lods
sub
push
call
or
sbb
pop
adc
pop
jmp
push
scas
daa
loopne
xor
mov
fldenv
je
inc
mov
mov
aas
aad
inc
dec
mov
dec
push
xchg
loopne
or
inc
push
sbb
pop
lret
xchg
nop
fisttpll
lea
call
test
fcoml
or
sbb
push
dec
leave
jb
in
es
cli
xor
mov
jmp
mov
call
cmpsl
adc
lods
aam
movsl
repnz
jne
and
inc
inc
adc
sub
adc
movl
adc
shrb
sbb
cmp
fsubl
dec
sub
rclb
mov
mov
fcoms
inc
inc
xor
push
call
cmp
inc
gs
sbb
test
pop
xchg
push
xor
lret
mov
xor
or
movsl
loope
imulb
jns
sub
mov
mov
jne
test
mov
xchg
cwtl
test
das
fdivl
and
xchg
cmp
test
mov
popa
lcall
ret
mov
packsswb
mov
adc
xchg
adc
add
ret
push
adc
pop
loope
mov
rol
leavew
ret
jmp
orl
inc
add
lock
dec
add
mov
dec
enter
loope
push
roll
rorl
sbb
and
loopne
loopne
mov
and
dec
cmp
inc
aad
push
clc
popf
adc
aas
aaa
les
rcr
inc
mov
push
lock
aaa
pusha
dec
inc
fstl
fsubl
or
dec
cmc
stc
xchg
cmpsl
or
or
sub
xchg
push
push
push
push
mov
push
pop
mov
clc
int
je
push
inc
imul
push
mov
movl
jle
xchg
pop
or
mov
cmp
jg
sbb
addl
hlt
int
pop
inc
pop
int
inc
incb
xorl
andl
sbb
push
jae
stc
mov
roll
inc
inc
add
mov
outsl
add
or
push
scas
cltd
jmp
push
inc
orb
sub
call
push
jns
rcrb
out
nop
add
test
ja
movsl
sbb
call
xor
outsl
andl
test
or
jb
sahf
dec
dec
test
sub
jae
mov
push
and
fs
and
shlb
outsb
dec
push
fists
mov
imul
test
test
mov
cli
nop
jo
push
mov
or
xchg
adcb
cmp
xor
adc
pop
dec
xor
mov
mov
inc
cmp
bound
push
outsb
popa
add
mov
jns
sbb
mov
cltd
int3
xor
sub
bound
ret
add
incb
jb
push
push
sar
adc
call
gs
stos
es
mov
xchg
cmpsb
pop
es
cmp
in
push
add
adc
mov
mov
pushl
xor
dec
pop
testb
mov
cmc
cmp
int3
xchg
add
mov
leave
adc
mov
mov
adc
shlb
leave
les
mov
pop
mov
nop
int
add
push
inc
enter
outsb
fildl
dec
and
or
fisttpl
rcrb
test
pop
and
push
add
shl
test
push
jne
stc
push
xor
shl
mov
push
mov
or
insb
test
je
call
ja
or
jnp
lret
pop
adc
cmp
ficomps
pop
pop
adc
ret
pop
or
pop
pop
push
push
adc
cmpsl
test
gs
adcb
xchg
add
popf
aad
test
inc
xor
lds
mov
dec
jg
adc
pop
mov
bound
adc
adc
inc
and
or
scas
in
and
gs
push
or
push
lods
pop
push
mov
adc
inc
adc
pusha
cmp
adc
adc
lret
sub
dec
stos
lods
lcall
arpl
adc
sub
or
lods
xor
push
push
push
jo
dec
mov
into
insl
push
or
loop
sub
sub
insb
sub
loope
xor
cmp
pop
in
cmp
das
fnsetpm(287
insb
xchg
push
push
mov
mov
int3
jae
adc
adc
jmp
sbb
aad
add
stc
xchg
sbb
arpl
xor
mov
xor
test
pop
sub
push
push
or
and
or
pmaddwd
xchg
xchg
inc
bound
shlb
cmp
loop
sub
add
outsb
fs
mov
dec
jnp
dec
cwtl
push
lahf
adc
sbb
push
pusha
jne
call
sub
int3
and
cmp
xchg
push
lret
enter
repnz
or
ret
or
call
push
cmp
clc
mov
lea
out
xor
movsl
add
outsb
les
outsb
or
nop
cmp
xchg
sbb
adc
pop
or
repz
lds
mov
or
sbb
outsb
rcrl
pop
push
pusha
out
lea
xor
adc
movsb
out
add
jle
mov
inc
add
push
adcb
in
or
dec
int
add
lret
push
jo
jae
fcoms
jno
cmp
lahf
inc
std
xor
push
fmuls
cmpsb
call
inc
enter
rorb
outsb
mov
leave
sub
mov
shrl
dec
cmpsb
xchg
daa
jle
sbb
and
shlw
add
and
push
iret
pop
lcall
ret
pop
ret
add
jne
inc
rcll
pop
cwtl
add
nop
inc
pushf
jge
inc
test
sub
adc
sub
mov
jg
loopne
test
push
jno
mov
push
cli
sub
xchg
test
mov
xchg
je
bound
mov
out
add
or
orl
inc
addb
fwait
mov
test
mov
int
pop
lods
out
xor
pop
or
or
negb
pushf
dec
fcomp
and
or
call
les
insb
jl
cwtl
subl
lods
into
adc
adc
sbb
and
xchg
pop
jae
or
jl
add
lea
mulb
jo
adc
mov
idivb
movsl
pop
push
adc
or
sahf
and
jge
push
jno
cs
adc
push
outsl
dec
xchg
pop
aam
pop
fwait
lea
jb
aad
sub
mov
push
jb
mov
out
imul
sbb
lock
loope
mov
fmul
mull
ret
pusha
bound
loop
add
mov
jo
mov
push
push
mov
test
fs
in
mov
xorb
dec
test
xchg
nop
inc
dec
test
sbb
lea
push
add
fs
call
push
push
adcb
sub
push
or
xlat
fistl
in
fs
push
aam
fwait
iret
or
fldz
xchg
lods
data16
movsl
out
lods
mov
mov
mov
push
xchg
xchg
sbb
imul
pop
hlt
xchg
das
and
xor
in
adc
dec
sub
loopne
push
add
scas
push
cmp
pop
stos
movb
or
cs
cmp
movsl
hlt
std
pop
lcall
pop
test
enter
and
mov
adc
ja
ds
push
arpl
sub
add
nop
xor
and
push
imul
xchg
orl
xchg
mov
fmuls
add
popa
adc
lret
or
adc
dec
inc
mov
jp
int
mov
scas
in
adc
stc
or
pop
in
add
sbb
adc
inc
popa
int
repnz
pusha
gs
bound
or
test
stc
and
xchg
cmp
int3
cld
mov
test
int3
repnz
mov
and
bound
pop
sub
dec
gs
clc
gs
enter
and
loope
push
mov
adc
in
pop
mov
dec
push
repnz
xor
cmp
and
xchg
cmc
inc
fistl
test
jno
xor
out
mov
mov
push
xchg
les
push
mov
test
adc
mov
push
push
cmc
in
adc
and
imul
xchg
pop
ja
test
enter
mov
lock
int3
mov
mov
fs
fsubs
cwtl
adc
fistps
enter
adc
mul
adc
mov
in
mov
adc
scas
sbb
push
adc
or
push
sbb
pop
cmpsb
cmp
and
aaa
push
hlt
jno
fwait
ret
or
push
les
test
lock
cmc
dec
in
jl
or
cmpb
xor
add
adc
xchg
mov
cmp
add
or
jp
inc
sbbl
jbe
jb
mov
pusha
repnz
idivl
int
cmp
sbb
add
mov
insb
inc
mov
or
xchg
adcb
pop
mov
lahf
cmpsl
mov
push
pop
cmpsb
mov
or
or
test
lock
orb
pop
lea
xchg
inc
dec
ret
mov
mov
push
and
xor
sbb
xor
push
mov
push
mov
addr16
mov
and
inc
xchg
jne
push
daa
and
les
sbb
mov
daa
jmp
pusha
dec
and
or
and
jo
clc
les
sbb
adc
adc
outsb
in
pop
jecxz
xor
jmp
xchg
xor
inc
jbe
mov
sub
imul
iret
testl
mov
fisttps
clc
pushf
cld
mov
lods
aas
inc
fcomip
insb
mov
dec
or
dec
rclb
push
or
sbb
push
xchg
ljmp
out
jl
or
jmp
sub
or
push
jmp
adc
and
test
inc
add
xchg
push
and
mov
mulb
cmp
xchg
adc
pop
mov
in
or
add
sub
inc
pusha
add
and
lods
sub
aas
push
xor
shrd
push
mov
jnp
adc
sub
movsl
fs
loop
mov
inc
mov
mov
test
dec
int
rol
fs
pop
inc
mov
xor
jo
addb
fisttpll
mov
test
adc
es
inc
xchg
pushf
xchg
cltd
test
adc
sub
mov
inc
mov
sbb
ss
lea
mov
cmp
lds
dec
prefetchnta
shll
mov
lds
jg
xlat
or
adc
pop
adc
mov
xorb
pop
pop
mov
jmp
add
lahf
mov
and
les
in
loopne
hlt
xchg
fsts
xor
popf
or
int
jmp
jle
scas
xchg
aam
shrl
hlt
dec
adcl
ds
orl
es
das
adc
push
outsb
xchg
icebp
shr
cmp
jge
mov
push
xor
inc
stc
pop
je
adc
inc
in
into
cmp
addb
cmp
jl
jecxz
insb
cltd
sbb
mov
push
das
and
loop
cs
int3
dec
inc
jne
lods
jo
push
lea
push
aam
sbb
xor
clc
push
inc
or
sahf
out
push
adc
jae
movsl
rcrb
out
xor
test
adc
jg
imul
sub
aas
adc
sti
add
cmp
pop
fiadds
iret
sbbl
jp
inc
sbb
fimuls
mov
xchg
inc
shll
pop
pusha
sbb
sar
fwait
add
mov
add
inc
mov
mov
ret
ja
out
lods
pop
insb
in
insb
adc
pop
or
out
loop
testl
jle
adc
or
cmpb
cmpsb
cltd
pop
pop
inc
push
lock
xor
mov
stos
xor
es
xchg
cld
jl
add
cmp
lods
dec
fwait
adc
pop
push
call
pop
jg
pop
daa
add
push
test
dec
jg
aad
ret
mov
jo
inc
xlat
sub
jae
mov
and
xor
stc
or
mov
push
mov
push
gs
ljmp
fildl
fstpt
sbb
es
dec
adc
mov
push
fstpt
cli
mov
push
fistpl
sbb
sahf
stc
push
loopne
repz
and
decb
js
das
inc
dec
inc
xchg
int3
pop
mov
or
cs
mov
jno
pop
rol
pushf
xor
xchg
clc
cmp
pop
icebp
adc
hlt
adc
mov
xlat
mov
mov
jg
cwtl
das
sbb
mov
push
cltd
in
popf
cmp
lea
outsb
and
inc
in
mov
adc
mov
nop
xchg
sbb
push
push
in
dec
mov
fs
push
cmc
or
adc
sub
test
push
enter
int3
and
inc
call
mov
add
lcall
inc
rcll
and
mov
test
cmp
sbb
sub
jmp
mov
andb
jg
or
sbb
and
movsb
mov
xor
cs
sub
xor
incl
sub
clc
aad
push
inc
int3
fnstcw
lea
test
in
les
fwait
jl
loope
or
mov
jle
fs
mov
adc
and
inc
mov
mov
lods
sub
int
sub
mov
loopne
add
cmp
pop
adc
lret
adc
inc
or
pop
adc
add
mov
add
in
movsb
or
test
push
add
fmuls
or
mov
xor
adc
cmp
and
push
ds
xor
loopne
mov
fcoms
adc
test
inc
xor
je
mov
mov
movsb
push
sbb
adc
and
cli
pusha
dec
pusha
add
std
adc
enter
adc
push
in
stc
mov
andl
mov
movsb
inc
or
mov
cmp
inc
sahf
fdivr
pop
mov
or
xchg
and
adc
test
psraw
rorb
nop
jp
subb
jb
push
in
push
stc
insb
mov
std
xor
or
mov
jecxz
pop
xor
add
sub
lods
lock
ret
xor
test
inc
call
push
adc
push
call
aam
in
and
sti
jmp
cmp
mov
pushf
xchg
jp
movb
dec
daa
jo
pop
push
lock
out
add
pop
and
push
xchg
push
mov
test
cmp
sbb
mov
dec
inc
push
add
or
or
out
ror
xor
pop
sbb
mov
cltd
loope
mov
inc
dec
bound
or
xchg
inc
mov
push
leave
inc
mov
insb
or
xchg
decl
sbb
sarl
ret
call
fimull
sub
adc
and
dec
pop
fldt
pop
aam
fsubrs
adcl
lock
mov
jno
push
push
ss
or
mov
lcall
into
mov
fmul
call
shlb
and
shlb
pop
xchg
in
popa
aaa
xor
inc
cmpsl
leave
cmp
push
outsb
hlt
int3
inc
dec
dec
jb
rclb
push
mov
adc
add
lds
lock
into
adc
lahf
and
add
mov
push
cmp
push
in
inc
fdiv
mov
popf
jle
cmp
dec
scas
or
or
loopne
jl
sbb
add
adc
sbb
mov
jl
add
mov
push
data16
adc
sbb
fadds
push
mull
nop
cltd
lock
adc
jmp
aam
sbb
loop
shl
les
pop
data16
dec
ret
xor
dec
hlt
sar
aaa
jae
xor
jmp
shll
clc
sbb
sbb
cmp
inc
in
pop
or
push
mov
loop
cld
in
sahf
mov
cmp
pop
test
mov
hlt
pop
pop
fmuls
xchg
pop
or
jbe
pop
mov
test
lock
cmpb
xchg
in
dec
or
and
mov
cmp
xchg
mov
jp
xor
aam
jbe
mov
adc
xchg
sarb
sbb
push
scas
and
jl
mov
pushf
push
xchg
sbb
pop
cmpb
stos
leave
imul
or
adc
out
jp
mov
mov
stos
sub
and
clc
ret
lods
sub
inc
lock
adc
jle
les
mov
out
dec
mov
xchg
outsl
cs
cmp
or
pop
jmp
sbb
dec
outsb
mov
jnp
dec
shl
cmp
or
mov
push
xor
pop
sbb
inc
cmp
and
mov
and
scas
add
aad
push
push
pop
push
mov
or
xchg
xor
pop
pop
pop
imul
adc
or
or
jp
movsb
popa
leave
xor
push
push
and
and
xor
xor
and
inc
insl
lea
sbb
push
pcmpgtb
rep
adc
ret
and
pop
adc
or
push
mov
or
or
lret
shl
jmp
dec
jno
pop
insl
dec
push
popa
adc
jl
inc
push
mov
insb
dec
xchg
jbe
dec
popf
subb
call
dec
adc
shll
xor
mov
test
aad
pop
add
and
out
or
mov
bound
mov
inc
inc
adc
mov
cmp
mov
sub
shr
cld
out
in
loope
test
rorb
xchg
iret
leave
dec
ret
enter
es
push
adc
xor
cmc
test
lahf
clc
aam
mov
andl
pop
or
jl
push
mov
add
dec
sbb
cmc
dec
mov
push
mov
or
mov
jg
mov
cwtl
sub
add
outsl
in
jo
loopne
lds
jmp
divb
push
or
jp
add
xor
test
xor
sti
out
enter
dec
sbb
inc
inc
push
dec
movsl
push
shlb
inc
nop
dec
fldenv
cmp
mov
inc
xchg
pusha
in
js
pop
adc
movsb
or
sub
push
xor
dec
clc
push
nop
and
cmp
mov
test
xchg
push
dec
push
and
cmp
mov
test
and
lret
stc
insl
addl
lea
pop
or
and
scas
adc
or
push
cmpsb
add
sbb
adc
add
cmp
sub
jae
sbb
lea
mov
call
leave
movsb
das
or
push
ret
cmp
xorl
subl
jle
xor
inc
push
cmp
adc
push
in
xchg
push
pop
stos
cmp
cmp
pop
xlat
scas
imul
jbe
imul
pop
adc
gs
push
dec
sub
adc
lahf
inc
cmp
push
orl
fnsave
leave
stos
pusha
adc
push
pop
rclb
das
push
xchg
push
push
inc
sbb
and
adc
popa
add
sbb
test
rcrb
das
ret
sbb
mov
test
add
sub
sub
push
loop
adc
xor
xor
or
cmp
mov
xchg
xchg
inc
xor
adc
test
xorb
mov
sbb
call
xor
into
lock
adc
sub
mov
adc
in
bound
sbb
dec
sbb
pop
lods
das
inc
and
and
ja
call
mov
dec
ja
mov
xor
ja
mov
pop
or
jmp
push
add
mov
test
cmpsl
add
clc
rcll
leave
insb
mov
jno
mov
push
mov
xchg
test
pop
mov
inc
push
pusha
mov
inc
popa
mov
es
add
or
lret
or
mov
lods
lds
add
push
inc
push
fbld
sar
pop
cmp
popa
xchg
cs
jbe
jo,pt
cmp
shll
cltd
les
aam
sub
lock
push
bound
inc
xchg
push
jge
pop
dec
int3
push
sbb
and
dec
add
or
cltd
inc
sub
mov
mov
popa
push
insl
cmpsb
pop
xchg
dec
xchg
jae
xchg
push
xchg
cmp
jmp
mov
fcompl
sub
je
dec
mov
push
in
push
sub
xchg
mov
mov
xlat
out
fistl
bnd
sbb
cmp
sbb
call
ss
cld
xchg
dec
or
sahf
test
cmp
rcrl
lods
and
add
jno
jge
aam
inc
and
or
jmp
mov
cmp
push
jmp
lcall
inc
adc
loope
ds
lea
cmc
cmp
lock
or
add
sbb
inc
clc
enter
sbb
fs
pushf
test
xlat
loop
sbb
mov
adc
dec
lock
mov
jge
cmp
loope
add
or
xor
jnp
je
ror
std
cltd
mov
push
mov
inc
inc
jnp
push
jl
nop
imul
mov
lea
add
sub
or
movsl
mov
jne
pop
fs
adc
sub
cmp
sub
lods
sbb
mov
inc
int3
mov
sbb
mov
test
clc
dec
in
cs
mov
jns
xchg
sub
dec
dec
bound
push
lods
inc
adc
insb
push
das
ret
jge
push
fs
xor
inc
cmp
and
andl
mov
lock
push
inc
pop
insl
xor
in
iret
hlt
in
jno
dec
std
or
jne
fistl
test
inc
adc
pop
std
pop
lods
mov
icebp
mov
add
je
or
sahf
sbb
xchg
and
mov
inc
and
addb
lds
inc
add
orl
fstps
push
adc
mov
xor
and
movsl
cltd
cmp
jo
cmp
push
vmovd
movsl
je
test
or
adc
cmp
cmp
aaa
imulb
mov
scas
icebp
imul
add
sbb
push
jne
les
mov
push
in
push
pop
xchg
in
repnz
or
jmp
ss
inc
ret
test
push
ret
jl
dec
jne
jl
int3
mov
scas
inc
mov
inc
andl
dec
cmp
xchg
fdivr
mov
xchg
add
push
mov
fisubrl
aam
je
scas
test
mov
lea
add
leave
test
lret
shrb
or
test
test
push
gs
dec
adc
lods
enter
dec
mov
mov
imul
lds
push
push
aam
xchg
add
cld
lret
mov
jne
pop
les
adc
push
lds
cli
and
and
aas
cmp
and
add
rclb
push
and
nop
push
jl
or
pusha
push
pusha
dec
cmp
push
add
xor
loopne
daa
in
and
lods
data16
or
xchg
dec
loopne
loopne
rcll
cwtl
mov
jmp
mov
add
int
dec
lock
inc
clc
add
add
inc
into
push
inc
sub
mov
push
mov
in
repz
outsl
nop
mov
gs
push
inc
sub
or
adc
add
inc
testl
or
and
push
and
cmpsb
in
sahf
aas
sub
icebp
sarl
pop
cmp
push
mulb
int3
sub
pop
or
and
gs
sub
and
jp
jle
pop
or
sub
jmp
push
add
test
pop
dec
fldenv
or
nop
loopne
push
mov
fidivs
ds
sub
ret
adc
test
or
jo
or
mov
lahf
xchg
ret
imull
mov
and
lahf
or
scas
jge
das
jecxz
sarb
fldcw
or
mov
adc
gs
xchg
or
dec
lds
jle
fidivl
cmp
das
push
jns
or
ss
aad
cmp
mov
mov
imulb
das
pop
shll
adc
add
in
and
mov
xchg
xor
jecxz
test
rorb
mov
lret
movsb
adc
fadds
or
popa
inc
lock
and
mov
push
arpl
push
mov
and
jne
nop
adc
lret
push
pop
clc
and
mov
xor
negl
mov
call
mov
shrb
or
jb
mov
cmp
imulb
call
or
mov
pop
adc
and
adc
or
jmp
and
repz
inc
and
out
or
je
inc
jbe
outsb
mov
sub
adc
mov
cmp
ret
mov
cmp
jae
in
mov
push
and
jmp
or
or
subl
pushl
mov
int
and
flds
je
repz
daa
mov
popa
dec
mov
sbb
test
and
push
mov
mov
pop
test
insb
push
loope
aas
lret
push
in
push
jb
jae
in
adc
mov
dec
adc
and
leave
jge
adcb
clc
lcall
cmp
test
int
test
inc
test
mov
xchg
push
mov
push
mov
push
ja
adc
int
pop
inc
jl
adc
ljmp
fistl
mov
pop
adc
xorb
mov
adc
subb
stos
loopne
clc
ret
pop
or
imul
push
dec
dec
stc
xchg
imul
or
mov
sub
ret
push
push
mov
mov
mov
push
push
movl
pop
or
or
scas
je
andl
adc
loop
push
xchg
and
imul
xchg
ja
inc
push
mov
inc
push
inc
add
jle
pop
jo
subb
dec
cmc
ss
mov
addl
inc
push
xchg
adc
pop
or
subb
xor
sub
in
popf
insb
popf
fs
mov
daa
addl
xor
jle
mov
jo
cmp
dec
nop
or
in
mov
cmp
and
xchg
push
push
call
inc
and
ret
cwtl
sbb
pushf
sahf
les
sbb
mov
movsb
std
pushf
push
pop
push
push
js
stos
dec
mov
dec
mov
cmp
mov
je
xor
shrl
cmp
lock
adcl
sbbb
sub
clc
mov
pop
pop
je
and
cmp
imul
dec
adc
push
mov
out
shll
loopne
or
es
fstps
bound
movzwl
dec
add
mov
add
pop
adc
leave
in
xor
inc
push
and
enter
adc
xchg
mov
jg
mov
test
adc
xchg
pop
push
daa
pop
xchg
xchg
lods
lea
sub
push
fxtract
push
mov
dec
es
andl
andl
xor
insb
xor
test
sub
pop
pop
pop
ret
sbb
push
jle
mov
sbb
pop
sbb
inc
lock
add
add
psubd
bound
andl
xlat
aad
imul
packsswb
test
xchg
or
pop
mov
xlat
call
jns,pn
in
mov
inc
ffree
shlb
push
sub
fimuls
mov
mov
icebp
outsl
cltd
loopne
fwait
es
lds
pop
loope
fisttpll
and
mov
pop
push
mov
xor
inc
add
jmp
adc
cmp
popa
jmp
repnz
int3
loop
jl
cmp
xchg
mov
hlt
out
inc
fs
or
je
inc
pop
cli
add
dec
or
jmp
adc
add
stc
lds
ss
sub
push
pop
xchg
les
inc
jmp
addr16
outsb
sbb
clc
fwait
add
and
arpl
std
adc
idivb
xor
jne
jns
sete
xlat
and
or
outsl
and
ret
cli
das
mov
movsb
rcrl
push
in
mov
in
xchg
xchg
repz
push
mov
cmp
rolb
sbb
call
push
fs
adc
jmp
mov
dec
aas
gs
xchg
out
xor
mov
cwtl
pop
bound
sbb
push
xor
jmp
addb
in
test
and
and
movsl
push
push
xor
dec
sub
or
jmp
inc
or
sbb
orb
mov
sahf
aaa
mov
test
iret
inc
loopne
push
call
decb
out
test
and
out
scas
dec
adc
dec
push
mov
jecxz
xchg
cmp
inc
or
mov
sub
idivb
xchg
fwait
jbe
mov
inc
stos
jo
aaa
mov
testb
lcall
lods
adc
hlt
shrl
test
xchg
std
les
add
faddl
dec
xchg
roll
sbb
mov
ret
mov
mov
and
pop
mov
es
cmpsb
data16
adc
sbb
sub
test
shrl
sbb
adc
loopne
fs
adc
and
push
test
adc
push
sub
and
mov
inc
push
rcll
mov
xchg
fisttps
stos
sub
repz
in
test
movsl
inc
dec
xor
mov
das
fs
pop
push
scas
lahf
push
es
hlt
orb
dec
adc
mov
mov
test
sbb
inc
aad
cld
pusha
xor
jns
and
sbb
adc
sbb
outsb
mov
xor
mov
dec
and
sbb
mov
pop
xchg
das
jmp
jb
xor
sti
addb
cltd
pop
fcoms
rcl
popa
in
aam
add
xor
cltd
mov
negb
call
sbb
roll
fs
dec
cwtl
jne
hlt
scas
aaa
add
sbb
dec
imulb
clc
push
jg
jnp
in
nop
in
fisttps
or
sub
lock
push
cmp
dec
clc
cld
xchg
movsb
pop
adc
popf
test
push
or
loopne
dec
mov
adc
sbb
mov
mov
repz
inc
cmpsl
clc
cmp
outsb
inc
xchg
out
mov
cmp
sbb
mov
jbe
std
xchg
cmp
imul
and
pusha
enter
sbb
aas
inc
mov
pop
xor
enter
push
lock
jns
les
xchg
pusha
pop
xor
or
sub
xchg
pop
in
std
aad
sub
xlat
shr
lahf
mov
shrb
ret
inc
xchg
pop
or
in
sub
test
lods
sub
rclb
or
push
adc
nop
or
stos
xchg
pop
cltd
fs
mov
flds
xchg
xchg
ss
cmp
je,pn
decb
jbe
cli
sub
clc
sti
add
or
sbb
mov
adc
popl
pusha
pop
enter
jbe
pop
xor
pusha
lea
and
fsubr
cmpsl
das
hlt
cld
push
push
mulb
iret
mov
pop
xchg
and
xchg
call
mov
ret
jno
ja
int3
or
bound
pop
sub
leave
imull
jb
pushf
xlat
les
sub
mov
and
out
das
dec
cmpsb
cmpsb
inc
repnz
dec
adc
cli
add
inc
xchg
leave
lds
in
test
xor
aaa
xor
adc
lock
jo
popf
repz
lret
iret
xchg
cltd
cmpsl
sub
enter
popl
orb
mov
mull
popa
out
popf
stc
popa
test
push
or
adc
push
nop
pop
imul
adc
aas
aas
fs
mov
dec
xor
shrb
push
shrl
mov
xchg
int3
or
xor
adc
adc
mov
aad
xchg
xchg
shlb
jmp
sub
mov
popf
sub
dec
pop
decb
fucom
push
jg
pop
pop
adc
mov
cld
xchg
or
adc
mov
mov
jle
mov
call
xchg
lahf
jno
push
aam
popa
and
fdivrs
xor
add
loope
in
jp
push
add
pop
testl
arpl
or
push
sbb
mov
adc
or
push
ja
leave
in
pop
mov
xor
es
and
or
test
push
mov
mov
fcoml
shll
pop
sarb
push
dec
or
push
clc
enter
xor
sub
adc
inc
fwait
pop
adc
xor
dec
mov
movsl
push
mov
xchg
mov
faddp
test
fwait
add
sbb
push
ret
ljmpw
inc
jbe
jecxz
mov
test
mov
inc
jo
push
push
push
pop
mov
xor
add
mov
dec
sarl
popf
in
adc
pop
inc
mov
add
jmp
push
push
push
and
mov
insb
mov
aad
data16
stos
pop
mov
lods
add
cmp
pusha
inc
in
mov
mov
xchg
and
xchg
add
push
push
jmp
adc
ljmp
clc
test
mov
stos
inc
or
and
xchg
push
xchg
sub
mov
xchg
cmp
push
push
push
jge
push
and
sub
int
inc
mov
xadd
push
jl
xchg
dec
xor
mov
iret
xchg
hlt
orb
dec
jle
sub
out
xor
stos
mov
test
nop
das
movl
cmpl
push
mov
inc
int3
fldl
add
push
das
inc
sarl
add
stc
pop
cltd
push
jge
push
lret
aad
pop
cld
mov
inc
in
push
push
add
dec
pop
insb
test
lret
popa
dec
xor
cld
je
add
jp
sub
pop
mov
fadds
cs
mov
dec
enter
jne
push
add
and
or
xlat
xor
push
jb
shlb
mov
pop
lea
jnp
and
push
andb
push
sbb
and
jb
cli
sub
or
dec
push
imul
xor
xor
dec
loopne
mov
std
dec
push
mov
pop
mov
mov
fisttps
sar
ds
enter
dec
pop
or
pop
scas
int3
sub
inc
mov
test
mov
loope
xor
dec
push
ja
mov
das
adc
and
push
movsb
xorl
pop
mov
add
xchg
and
out
lock
xor
cld
int
adc
adc
imul
mov
add
mov
push
test
in
push
inc
in
dec
adc
sbb
fnsave
pop
inc
or
repnz
sbb
dec
cltd
cmc
mov
jnp
call
test
repnz
pop
fsubs
mov
lock
mulb
call
jge
pop
push
lret
negl
xchg
in
fstpl
add
fstpt
push
push
add
sub
loope
lea
aaa
mov
push
mov
data16
push
mov
daa
pop
fstl
mov
sbb
stos
lock
mov
jne
call
mov
test
sub
mov
xor
int
ficompl
pushf
xchg
fs
add
sahf
in
out
jb
xor
dec
aam
mov
aas
sub
pop
sbb
test
shrl
fsubs
mov
dec
mov
xor
push
sub
pop
and
rcrl
shl
in
mov
adc
cmp
loop
xchg
insl
push
inc
xchg
sub
xor
and
lcall
jno
and
addr16
push
cmp
stos
add
adc
and
xchg
cmc
cwtl
sub
jmp
neg
jge
sub
inc
jmp
clc
jne
sub
cmpsb
jl
iret
jno
mov
icebp
iret
insl
and
cltd
pop
enter
ds
lods
lea
push
fs
push
add
cmpsl
push
adc
pusha
aam
adc
xor
mov
cli
sbb
jecxz
and
dec
test
xorb
aaa
mov
push
push
lcall
std
sbb
add
push
call
mov
sub
call
ret
push
mov
jns
adcl
dec
xchg
adc
mov
mov
add
sahf
adc
jg
xor
add
or
dec
adc
xor
sti
cwtl
insb
mov
lods
add
inc
pop
mov
push
inc
xchg
inc
jb
lahf
inc
dec
or
loope
decb
leave
neg
sbb
filds
inc
xor
jb
xchg
pop
add
lock
enter
orl
in
pop
fildll
roll
out
es
dec
jo
ud2
add
mov
not
sub
mov
push
imul
cmp
adc
rcl
sbb
insb
and
cwtl
loope
and
inc
cld
push
sub
out
lods
pop
mov
inc
scas
dec
dec
adc
call
pop
sbb
xchg
xchg
cmp
fwait
mov
imul
pop
nop
pop
xchg
mov
dec
inc
or
mov
cs
daa
test
jmp
and
dec
sub
jmp
mov
xchg
std
stos
pop
test
cmp
fwait
mov
cmpl
sub
sub
mov
sahf
push
mov
lods
lret
inc
cmp
push
cltd
leave
add
dec
dec
sbbb
jmp
add
xchg
frstor
jo
daa
and
pop
pop
imul
sub
cmp
push
testb
test
fistl
mov
xor
fistps
push
jle
jl
and
popf
pop
mov
int3
sbb
add
cmc
jecxz
push
pop
add
lds
and
aaa
dec
dec
cmp
leave
jbe
jl
mov
outsl
mov
movsl
or
jp
mov
fildll
cmpsl
xchg
dec
xchg
pop
test
fidivs
outsb
pop
scas
addr16
stc
leave
add
nop
std
lret
jmp
call
pusha
leave
jl
add
dec
xor
xor
jecxz
data16
xchg
add
call
lods
or
xchg
cmp
jmp
mov
pop
imul
adc
dec
iret
cmp
and
adc
nop
pusha
das
mov
call
and
mov
xor
and
pop
jmp
adcb
cltd
lcall
add
adc
jo
cltd
jp
das
mov
das
xchg
loope
mov
xor
pop
dec
mov
popf
and
or
sub
jns
dec
js
and
adc
add
mov
mov
aad
push
jge
insb
test
mov
add
pop
jmp
inc
add
and
jmp
ljmp
out
gs
add
dec
adc
sbb
inc
adc
les
vsqrtsd
mov
loop
sbb
call
subb
or
jmp
cmp
fildll
stos
mov
xchg
jecxz
nop
rcll
repz
and
sbb
jle
sarl
fisubs
cmp
sbb
adc
movl
sbb
test
push
or
xchg
inc
mov
push
mov
daa
sub
fs
int3
mov
lods
leave
pop
pop
data16
and
cmp
inc
jle
push
andl
and
lahf
aam
mov
mov
repz
cmpsb
sub
mov
arpl
dec
out
cmpsb
and
stos
push
or
adc
and
mov
jae
les
mov
imul
pushf
xor
call
and
js
mov
jge
leave
sbb
imul
repnz
mov
push
push
xchg
iret
pop
in
call
fcoms
cmp
cmpsb
sahf
jo
test
lret
je
int3
aas
cmp
outsb
aaa
dec
subb
pop
shr
xor
and
xor
cmpsb
adc
dec
je
pushf
sub
pop
call
ret
cld
jl
dec
sbbw
push
or
mov
dec
jecxz
addb
lret
ficoml
adc
push
and
mov
gs
test
adc
mov
loop
jle
mov
inc
testl
inc
ja
and
jae
jge
and
jnp
mov
jb
jne
fiaddl
pop
test
inc
fimuls
push
jae
inc
ljmp
jecxz
daa
and
hlt
or
scas
mov
xchg
mov
outsl
sbb
cmpsl
inc
clc
pop
jno
add
js
push
sub
sub
push
test
call
adc
test
push
fbld
repz
inc
in
or
idivb
xchg
adc
push
div
jo
lods
xlat
inc
int3
into
stc
mov
xor
pop
fsubrs
cli
sub
pushf
mov
out
shl
cmp
test
dec
inc
sub
cmp
cmp
lds
mov
pop
jle
jmp
push
sbb
ret
inc
and
out
dec
xor
xor
mov
push
fcoml
sub
nop
xchg
and
ljmp
adc
push
push
or
lret
aam
leave
push
and
call
jno
and
cld
insb
daa
jns
jo
cs
sub
scas
jnp
aam
jbe
push
xor
jns
mov
divl
mov
jb
inc
stos
jne
gs
imul
pop
mov
out
xchg
pushf
sti
fiadds
xchg
pop
mov
test
stos
push
mov
pushf
in
mov
xchg
adc
or
addr16
or
shrb
push
inc
stc
mov
mov
jae
lcall
adc
das
mov
push
xor
mov
js
adcb
lds
jae
je
xlat
mov
divl
test
scas
sti
cli
into
sbb
addr16
aam
mov
push
movsl
sub
push
in
mov
add
cli
mov
sub
xchg
rorb
addb
in
shlb
subl
push
xchg
or
loop
xor
test
inc
shlb
xchg
jl
mov
sbb
mov
xchg
add
push
jb
loope
mov
sbb
test
adc
and
jmp
mov
or
push
pop
add
jo
mov
inc
lahf
cmp
add
jge
mov
dec
xchg
icebp
mov
cmp
call
out
fildl
push
mov
or
jbe
push
xchg
pushl
xchg
xlat
xchg
xchg
xchg
dec
loope
cltd
cmp
sbb
mov
xchg
push
lcall
fstps
in
and
or
sbb
ret
add
mov
mov
rcrb
pop
jle
int
loopne
jb
jns
in
dec
mov
push
xor
sbb
sarb
pop
mov
int3
mov
pop
mov
and
and
sub
cld
xor
and
pop
scas
cmp
jecxz
mov
adc
call
out
inc
pop
add
call
orb
lds
mov
out
es
xchg
lcall
pusha
popa
icebp
xchg
popf
sub
ror
lcall
pop
repz
mov
mov
pop
cmp
push
push
add
clc
inc
mov
add
daa
subb
ret
sbb
js
jns
cli
and
sbb
pop
mov
lahf
push
call
dec
je
sub
push
xor
dec
or
adcl
add
fnstenv
mov
pop
xor
add
fdivs
pop
push
mov
loope
roll
icebp
or
and
adc
inc
test
stc
inc
pop
or
aam
cmp
rcrl
dec
rcll
xor
mov
push
xor
xchg
sub
add
stc
iret
push
or
jecxz
xor
sub
push
lret
mov
add
and
dec
mov
xchg
mov
pop
or
push
icebp
out
addr16
add
sub
and
enter
bound
inc
and
sbb
xor
pop
sub
pop
test
push
mov
aad
or
push
pusha
inc
shl
inc
loopne
pushf
dec
lods
movsb
adc
adc
hlt
imul
push
xor
test
pop
mov
aaa
pusha
test
xlat
or
add
adc
cltd
cmp
js
add
cld
shlb
push
data16
dec
xchg
je
inc
push
and
js
add
mov
sbbb
les
and
dec
dec
bound
add
imul
in
push
xor
ljmp
lods
mov
fdivr
arpl
jo
mov
xchg
jbe
or
jl
lods
inc
mov
fsubl
push
jnp
push
add
bound
decl
bound
dec
or
mov
lret
ss
or
pop
dec
decb
adc
or
sbb
or
cwtl
adc
push
pusha
add
out
mov
xor
or
sub
imul
dec
jp
add
data16
dec
repnz
add
pop
daa
sub
or
pop
clc
or
or
lods
icebp
or
pop
xor
push
or
movsb
and
addl
dec
or
jl
inc
pop
xor
mov
and
inc
sbb
sbb
mov
aas
ss
fisttpll
ljmp
lea
test
mov
xor
rcrb
add
lods
dec
adc
xchg
sub
pop
dec
pop
pusha
dec
pop
and
and
push
adc
adc
decb
push
mov
or
ja
mov
rcrl
mov
icebp
decl
adc
jns
or
les
int3
movsb
adc
and
mov
test
mov
sahf
inc
cs
xor
aaa
jo
add
cmp
jne
xchg
dec
out
movsl
push
cmpsb
insb
scas
inc
ror
mov
mov
cld
gs
cmp
test
mov
mov
and
into
into
dec
es
xchg
sub
push
ds
cmp
push
inc
sti
arpl
or
outsb
jp
es
test
ds
fcoms
xchg
jl
sub
dec
xchg
and
les
cmp
loop
pop
sbb
inc
lret
fisubl
sub
adc
inc
sti
out
sti
sub
test
inc
adc
xor
sub
test
push
push
cli
test
sbb
pop
and
xchg
enter
adc
pop
dec
and
rcrb
mov
or
mov
dec
xchg
clc
movsl
add
movsb
jl
lret
and
and
push
cld
sbb
pop
repnz
in
bound
mov
pop
xchg
bound
pop
xchg
inc
adc
mov
and
push
shrb
bound
mov
cmp
mov
out
cmp
fdivl
pusha
dec
xchg
dec
mov
ret
iret
int3
sbb
and
adc
inc
cmp
push
or
cmp
or
mov
mov
nop
mov
xchg
addr16
add
fdivr
lret
shlb
aas
dec
jno
xchg
ja
push
scas
push
dec
popf
bound
xor
sbb
je
fisubs
mov
pop
push
or
mov
mov
notl
or
xchg
adc
mov
cmp
loopne
mov
dec
decl
pushf
and
xor
sub
cltd
test
and
jns
test
pop
and
sub
push
ret
lret
testb
mov
lods
inc
in
cmp
inc
adc
dec
mov
jb
adc
sbb
jp
lods
xchg
cltd
dec
repnz
popf
or
and
jno
mov
data16
or
or
call
mull
lret
jp
mov
mov
data16
movsb
adc
mov
adc
pop
js
imulb
bound
or
xor
mov
hlt
mov
cmc
push
inc
add
js
mov
lahf
inc
cs
rorl
adc
sbb
xchg
push
inc
sub
ret
hlt
push
nop
fiadds
or
xor
adc
or
xchg
and
jle
jle
push
insb
push
test
inc
cli
adc
hlt
mov
mov
and
cmp
mov
ss
cmp
dec
inc
mov
cmp
shl
xchg
je
cltd
add
xor
mov
in
adc
addb
and
shlb
xchg
mov
cmpsb
leave
xor
add
hlt
or
and
dec
les
leave
cmp
mov
repz
xchg
dec
mov
imul
fdivl
mov
sbb
pop
hlt
jo
idivl
test
xor
sbb
lods
pop
inc
loop
repnz
and
ljmp
inc
adc
fxch
or
into
pushf
lret
mov
push
dec
push
inc
sbb
and
in
mov
fisubrl
movsb
adc
int
bound
and
aad
sub
sub
mov
loope
dec
push
or
lret
das
push
jl
xchg
dec
stos
jbe
cmp
pop
in
sarb
dec
decl
jb
mov
adc
adc
add
pop
push
ja
jbe
and
adc
shrb
push
dec
cwtl
adc
cmpsb
or
or
push
push
into
sbb
movsl
adc
inc
gs
pop
add
adc
lock
outsb
mov
lret
les
iret
inc
mov
lods
jno
hlt
add
lds
mov
mov
mov
mov
add
rclb
or
and
cmp
adc
in
sahf
lods
adc
xchg
lods
and
xor
test
push
ds
out
test
pop
hlt
inc
mov
movsb
xor
dec
and
add
push
add
or
pop
imul
add
popf
mov
sub
in
inc
push
shr
sbb
sahf
mov
leave
rcll
and
mov
xchg
mov
sbb
scas
add
pop
nop
push
incl
leave
mov
ficompl
ds
xor
push
ds
hlt
loope
ret
add
xchg
xchg
fdivl
mov
bound
sbb
and
sub
or
xchg
inc
mov
dec
decb
int3
mov
mov
cmp
or
push
decl
fwait
push
and
fidivrl
sbb
and
shrl
sub
xor
dec
mov
adc
push
mov
adc
fs
mov
icebp
les
ss
leave
out
arpl
pop
inc
in
imul
xor
add
inc
subb
imull
push
add
pop
sbb
or
mov
and
jge
shr
adc
adc
hlt
cli
outsb
add
out
es
fs
or
js
inc
xchg
out
inc
mov
push
xchg
push
mov
xorb
sbb
push
sti
outsl
cmp
arpl
int3
call
stc
push
and
xchg
jle
js
add
or
outsb
movsb
loop
enter
lock
mov
push
pusha
test
push
mov
ja
pop
xor
and
push
push
push
xor
mov
ljmp
xor
and
adc
scas
and
dec
pop
or
mov
call
xor
and
loopne
or
js
pop
inc
add
adc
xchg
sbb
add
inc
mov
mov
dec
sub
push
sub
pop
inc
add
sub
sub
adc
insb
imul
mov
jae
sbb
inc
add
add
xor
and
mov
or
add
inc
pop
dec
out
ss
cmpsb
cmp
or
adc
push
xor
or
or
xchg
and
lret
jb
push
sbb
sub
add
xchg
cld
inc
popf
mov
dec
pop
xor
test
in
in
test
lock
sahf
sub
ljmp
and
or
sbb
or
mov
dec
add
or
sub
imul
adc
pop
cld
push
pusha
add
pop
mov
js
add
mov
and
xchg
hlt
mov
adc
js
add
and
jns,pn
je
pop
pop
add
xor
mov
add
in
mov
jbe
sbb
in
sub
nopl
nop
inc
mov
sub
push
add
js
push
mov
aam
loop
cmpsl
lcall
nop
sbb
mov
insb
lcall
push
adc
rcrb
ret
cmp
adc
inc
add
push
sarb
hlt
sub
lea
push
pop
daa
scas
aam
loop
gs
adc
pop
mov
cltd
mov
adc
inc
add
mov
addl
js
or
cs
or
sub
pop
pusha
outsb
push
lock
push
dec
and
pusha
loop
push
inc
sub
ds
xor
sbb
xchg
icebp
inc
pop
or
es
daa
or
push
pop
jecxz
in
sbb
or
adc
sbb
fisubs
push
or
and
or
in
or
lcall
aam
and
addr16
add
jb
loop
shll
add
mov
sbb
jbe
inc
sbb
sbb
sbb
push
in
or
js
xor
push
lret
loop
and
mov
mov
pop
push
sub
test
xor
or
inc
push
push
push
lret
and
fsubrp
shll
add
repnz
pop
sarb
insb
test
jp
or
push
push
fisubs
pushf
outsb
fsubl
mov
inc
and
and
into
xchg
rorb
and
pop
lcall
rorb
and
xchg
in
inc
mov
rclb
inc
adc
add
inc
shrb
movsl
jo
cltd
cmpsb
out
js
pop
daa
test
cld
sub
js
jecxz
sub
js
mov
push
or
iret
pushf
and
lret
sub
push
js
or
sub
sbb
mov
adc
enter
insb
dec
lea
or
push
or
sub
sub
and
fsubrl
adc
fiaddl
mov
and
js
ss
sahf
mov
and
xor
mov
leave
xor
movsb
sbb
xor
dec
cmp
repnz
test
test
or
sbb
pop
sub
in
bound
cmp
sarb
adc
pop
or
lock
or
lods
add
ds
repnz
sahf
or
repnz
jnp
jns
or
or
mov
mov
add
push
enter
mov
push
mov
mov
push
jno
repnz
xor
or
movsb
and
jo
inc
sub
pop
push
pop
or
test
je
or
mov
repnz
push
push
xchg
cmp
and
and
sbb
or
jge
or
cmpsl
inc
and
push
lock
adc
inc
push
insl
aam
ss
ss
call
insb
xchg
ljmp
inc
xor
aam
sub
js
testb
push
adc
adc
cmp
lds
mov
inc
adc
ss
pushf
repnz
lds
js
mov
js
inc
sub
mov
scas
cmp
lods
cli
add
jne
js
inc
push
xchg
cmp
mov
mov
cmp
inc
rclb
cmp
add
les
data16
cmpsb
mov
mov
int3
fxch
sbb
xchg
data16
dec
push
cmp
mov
sub
sub
pop
push
fsts
adc
fisubrl
cmp
xchg
inc
xchg
int3
jb
les
ror
int3
and
add
and
jecxz
scas
adc
adc
enter
sahf
adc
lret
outsb
push
pop
mov
xchg
loop
shl
xor
dec
sub
loopne
xchg
icebp
sbb
push
adc
xchg
loop
adc
add
pusha
in
fwait
cmp
inc
xchg
into
loop
adc
dec
and
iret
xor
xchg
addr16
push
dec
cwtl
and
adc
xor
out
or
adc
adc
xor
adc
xchg
dec
shlb
or
into
sub
dec
pop
jbe
and
push
mov
popf
mov
xchg
jns
cmp
push
enter
stc
int3
daa
lret
bound
arpl
add
push
call
sub
mov
pusha
insb
mov
and
jns
and
test
pusha
mov
mov
shlb
jmp
loop
dec
sti
mov
lds
sbb
and
cwtl
pushf
out
and
or
loopne
aas
cmp
ret
call
adc
jo
cmp
aam
or
push
and
lea
pop
fsubs
push
push
test
call
je
lods
inc
xchg
push
adc
sbb
stc
sbb
in
adc
mov
test
sub
add
movsb
addb
je
inc
and
or
loope
or
adc
cmpsl
repnz
inc
in
test
push
hlt
xchg
xchg
sbb
mov
icebp
xor
lock
add
add
cli
jnp
leave
jmp
or
push
js
add
ds
ficoml
fs
jmp
inc
mov
sub
nop
and
adc
sub
cmp
pop
stos
and
sub
outsb
cmp
dec
addr16
lret
fadds
push
and
or
aad
addr16
sub
sub
push
mov
lcall
loop
xchg
test
dec
push
cmpsb
sbb
or
movsb
or
and
addb
xchg
push
xchg
sbb
and
jb
or
in
or
or
ljmp
and
mov
aas
nop
and
rolb
test
sbb
push
sub
cmp
cld
mov
je
xor
mov
lret
or
jb
sbb
mov
stc
clc
cwtl
ljmp
or
test
sbb
xchg
rcrl
jg,pn
jbe
sub
test
std
leave
fcomps
pop
push
pop
and
ja
dec
sbb
movsl
or
sbb
inc
adc
or
or
or
popa
subl
or
scas
or
add
or
pushf
test
cld
adc
and
call
mov
test
add
mov
andb
xor
add
mov
fmul
adc
movsb
push
test
bound
jge
inc
aam
sub
jb
adc
or
incl
aas
xchg
sahf
mov
ljmp
gs
cltd
int3
mov
adc
add
loop
and
or
mov
loope
fidivl
dec
xor
sub
sbb
cs
push
inc
dec
dec
adc
movsl
cmpb
lds
pusha
adc
test
repnz
fisttpll
shlb
lock
ds
dec
incl
jg
xor
add
shlb
sub
es
and
jae
push
add
loopne
mov
rcll
xor
and
mov
lcall
hlt
cmp
jo
addr16
out
scas
jge
fmull
mov
adc
outsb
jl
fdiv
sub
les
dec
and
test
push
add
sub
add
xor
aad
stos
dec
data16
ljmp
int3
sbb
cli
xlat
and
repnz
cmp
sbb
xor
and
mov
pop
aam
xchg
daa
push
adc
lods
pop
lods
pop
lods
push
lods
push
scas
push
les
sbb
sub
sbb
sbb
repnz
sbb
push
pop
xor
cmp
mov
in
inc
loope
cltd
or
xchg
jbe
in
fisubl
mov
cmp
mov
out
jnp
cmpsb
hlt
push
out
js
jbe
je
jb
jo
outsb
cmp
mov
sbb
or
adc
loop
or
leave
test
xchg
dec
push
adc
cmp
xchg
arpl
sub
mov
clc
test
lds
xor
ficompl
loopne
push
mov
dec
dec
test
ja
mov
jbe
adc
xchg
or
data16
insb
ljmp
sub
mov
or
xor
adc
and
mov
mov
mov
dec
pushf
xchg
les
data16
and
inc
fsubrl
adc
mov
in
lds
daa
es
or
and
push
or
mov
inc
int3
in
fldl
and
or
scas
mov
or
mov
mov
test
loopne
sbb
aam
ror
mov
inc
inc
adc
inc
cmp
enter
add
and
ds
dec
sub
push
stc
and
or
scas
fdivrl
fidivrs
mov
jns
outsb
adc
adcb
adc
mov
fmuls
sbb
fucomi
inc
or
cmpsb
pop
aad
out
or
inc
hlt
xor
imul
test
inc
sub
cs
or
xlat
mov
cmc
data16
or
jl
sbb
outsl
hlt
push
and
mov
jb
cmpl
jg
sub
mov
dec
xchg
sbbb
out
imul
pop
adc
xchg
cmp
xor
sarl
pop
enter
cli
les
movsb
mov
add
je
cmp
adc
inc
leave
fucom
aad
inc
xchg
push
add
cmp
or
in
dec
adc
out
push
decb
sar
and
and
jbe
cld
lock
les
sar
int
xchg
fdivl
cmp
addr16
or
aam
insb
pop
enter
adc
or
mov
adc
movsb
sbb
inc
adc
inc
inc
pop
push
enter
popa
jecxz
and
mov
xchg
push
mov
sbb
inc
imul
mov
mov
push
sti
inc
push
data16
cmp
in
inc
adc
pop
stos
movsb
aam
stc
inc
pop
cmp
lcall
call
jae
push
cmp
fsubs
push
call
ret
ret
adc
fsts
lock
add
jge
into
mov
adc
out
inc
mov
xor
fmull
push
cmp
test
aaa
aad
jecxz
or
imulb
jge
call
inc
fs
dec
push
dec
or
push
mov
dec
cltd
or
sbb
push
inc
sbb
negb
or
push
mov
push
and
inc
and
inc
mov
sbb
push
fwait
je
cmp
or
scas
or
xor
sub
push
or
push
dec
push
dec
cmpsb
sub
xor
dec
inc
push
push
or
inc
jo
jnp
leave
add
fldt
pusha
adc
je
add
ret
mov
inc
std
and
mov
int3
jne
or
stos
jbe
data16
jl
mov
cwtl
stc
pop
je
inc
scas
push
fwait
ret
lcall
jb
add
jae
shl
add
sub
cld
daa
or
xlat
inc
inc
add
shrb
xor
cmp
test
lods
and
or
fistpl
or
jb
out
dec
aam
cmp
or
xor
orl
jo
das
cmpsb
or
mov
inc
add
decl
movzbl
add
ret
or
xor
adc
inc
into
orb
sub
test
fnstenv
mov
daa
mov
inc
cltd
cli
fs
repz
sar
adc
and
rolb
lahf
test
hlt
or
push
aam
rolb
call
mov
sbb
xlat
inc
leave
mov
push
or
aas
push
jl
popa
cmp
data16
add
enter
dec
and
sub
in
inc
mov
xor
mov
nop
loopne
test
das
fmuls
sbb
mov
push
mov
add
fwait
pop
int3
subb
cs
mov
lretw
adc
add
sub
sbb
dec
xchg
mov
data16
arpl
cmp
xlat
das
enter
add
in
sub
sub
pop
cmp
push
adc
add
mov
push
dec
popa
loopne
call
push
popf
shrl
add
cmp
push
jo
or
shr
sub
subl
hlt
popa
adc
je
dec
repnz
lock
movl
cmpsl
jb
mov
addb
sbb
mov
ret
pop
call
lea
mov
sub
aaa
call
xchg
sub
sub
and
jno
add
mov
jns
lock
dec
push
jne
push
shlb
sub
js
cwtl
cmpsb
movsb
jae
inc
adc
lds
cmp
cmp
inc
iret
push
xor
mov
divb
mov
out
push
push
push
cs
sbb
mov
push
test
mov
push
xor
sbb
fcmovnbe
test
mov
pusha
xchg
jmp
mov
add
sub
push
out
mov
cmp
xor
je
push
push
mov
dec
sbb
dec
mov
or
loopne
arpl
in
or
and
in
or
push
sub
jg
adc
xor
push
jl
pop
jns
pop
push
or
ja
adcl
test
in
or
sbbb
adc
mov
add
sbb
rsqrtps
pop
and
hlt
or
adc
or
add
inc
enter
xor
out
clc
mov
cmp
and
inc
xor
adc
sub
or
push
or
scas
ja
mov
loopne
cmp
adc
sbb
inc
out
outsl
in
popa
fstl
push
sbb
xchg
jbe
inc
notl
mov
push
sub
xor
push
inc
test
jp
mov
test
js
add
lea
out
bound
popf
int
or
xchg
mov
loop
adc
add
test
adc
pop
adc
jnp
es
pop
pop
movb
mov
sar
aam
ret
sbbl
mov
sub
mov
cs
fs
push
jno
xchg
push
jae
paddd
sbb
outsb
jmp
xchg
imul
adc
fidivrs
push
adc
mov
fadd
cmp
cmp
cmp
js
cmc
movsl
repz
invd
fmuls
jmp
push
xchg
xchg
add
iret
pop
adc
hlt
adc
pop
push
jmp
sti
inc
rolb
mov
jae
pop
dec
push
jp
les
mov
negl
pop
push
pop
push
adc
pop
add
and
or
push
push
inc
cmpsb
mov
and
pusha
stc
lock
arpl
dec
outsl
test
xor
adc
repz
mov
jno
dec
cld
enter
pop
rcll
or
xor
xor
lock
nop
sub
in
add
or
sbb
xor
inc
sub
test
mov
imul
mov
clc
mov
and
add
jge
bound
mov
pop
jg
aad
cmpl
jns
sub
mov
mov
mov
ds
mov
xchg
xor
subl
add
add
push
dec
pop
inc
xor
cmp
sub
out
mov
inc
into
in
dec
test
mov
pop
das
mov
inc
xlat
les
or
xchg
dec
fadds
mov
or
cmp
adc
add
xchg
sub
daa
lea
add
inc
orb
inc
cmpsb
sub
push
xchg
aad
mov
jns
xchg
je
add
dec
cmp
dec
jne
lret
or
jecxz
inc
adc
test
call
cmp
js
pushf
lar
call
arpl
mov
push
mov
fcmovbe
xchg
out
gs
pushf
aas
sub
mov
in
dec
int3
ss
fcomps
fmull
add
stos
sarb
jp
int3
cmp
sbbb
mov
inc
adc
movsl
and
out
mov
sbb
jmp
pop
push
dec
push
and
jl
and
test
adc
add
inc
or
cmp
push
inc
pop
mov
lock
mov
mov
sub
out
rcll
aam
movsb
fwait
lea
inc
ss
addb
push
sub
push
adc
cli
std
add
xor
add
inc
inc
jecxz
mov
jg
add
idivl
cmp
adc
xchg
jl
mov
les
pop
push
inc
mov
push
add
mov
xor
mov
stos
sbb
push
ja
mov
nop
movsb
dec
test
jo
dec
add
and
add
das
pop
mov
stos
sbb
sbb
add
movl
push
mov
jmp
cltd
jbe
lea
sub
inc
hlt
sbbb
mov
mov
jne
add
and
mov
and
lahf
hlt
mov
aad
mov
or
add
dec
xchg
or
data16
xchg
xor
push
xlat
jp
repz
test
add
adc
mov
and
insb
sbbb
outsb
jbe
xor
or
mov
sysenter
inc
jmp
adc
inc
iret
mov
mov
sub
cmp
adc
icebp
inc
lods
mov
cltd
stos
push
jmp
in
or
and
dec
out
call
fcoml
frstor
or
inc
fnstsw
mov
add
and
lock
add
hlt
adc
ret
in
or
mov
pop
push
xor
fdivs
call
dec
je
lcall
cmp
adc
or
les
add
sub
ror
cmp
add
fidivl
in
push
imul
fs
jno
test
pop
fildll
dec
cli
add
shr
fucomp
add
pop
xor
or
les
sbb
je
xchg
cmc
push
subl
and
push
pop
inc
movl
mov
adc
sahf
into
mov
add
add
rol
lea
add
xor
and
or
ror
xor
add
je
mov
mov
add
xchg
push
ss
sbb
and
or
enter
or
in
repnz
and
xchg
ror
xor
jne
and
in
fisubrs
push
mov
lock
ret
or
lret
xor
and
nop
adc
and
test
fadds
and
add
jne
stos
and
jnp
and
mov
mov
and
mov
mov
and
mov
mov
and
mov
mov
and
mov
mov
dec
cmp
insb
idivb
cmc
or
rol
ds
inc
or
rol
nop
adc
xor
and
push
or
ds
dec
gs
or
xor
push
push
cmp
ds
and
or
jmp
out
aam
or
xchg
ds
and
or
call
in
mov
outsl
or
adc
sub
inc
inc
sub
aaa
test
sbb
jmp
and
inc
sbb
xor
sub
daa
mov
daa
fsubl
mov
std
enter
sbb
or
adc
test
and
mov
push
inc
push
cmp
dec
cmpsb
xor
dec
xor
or
cmp
push
push
xor
xor
or
and
xchg
inc
push
sub
pusha
sub
push
xor
cmp
movb
inc
push
sub
xchg
fs
and
cmp
push
push
pop
cltd
xor
sub
cmp
xor
xor
push
fs
mov
cmp
push
or
pop
push
jle
xor
cmp
cmp
dec
push
jo
fs
or
pusha
push
je
xor
dec
add
inc
xchg
cmp
dec
push
js
test
bswap
dec
push
ds
push
inc
mov
mov
sbb
cmp
and
jo
nop
test
nop
adc
in
mov
test
xchg
and
dec
pop
push
mov
movsb
cmp
pop
and
jl
nop
nop
loop
dec
daa
in
popf
pop
and
cltd
adc
jo
fsub
sbb
jb
repz
adc
sub
fs
gs
cwtl
sbb
movsb
xor
sub
lock
or
cmp
push
inc
inc
pushf
mov
inc
and
xor
or
mov
mov
jae
mov
sub
in
sbb
out
or
push
jo
or
inc
les
sub
pop
dec
movsb
or
ljmp
push
lret
xchg
xchg
inc
mov
mov
dec
xchg
adc
inc
inc
mov
dec
xchg
adc
inc
push
mov
fisttpll
dec
push
out
push
mov
mov
adc
dec
mov
mov
scas
pop
add
push
cmpsl
jns
xchg
adc
jp
adc
adc
movsl
dec
adc
sub
je
xchg
mov
imul
xchg
jb
inc
xchg
and
imul
inc
aam
jb
cwtl
xor
int3
dec
dec
and
jb
xchg
pushf
mov
dec
push
fsubl
jb
mov
out
push
aam
mov
pop
jb
movsb
sub
imul
in
jb
test
dec
mov
out
push
fmull
call
addr16
cmp
lret
dec
push
in
and
mov
dec
mov
in
mov
addr16
sbb
repnz
jo
lods
xchg
arpl
adc
movsl
inc
adc
into
xlat
push
inc
sub
and
adc
dec
inc
and
inc
pop
loopne
mov
push
xor
lock
inc
dec
cld
cmp
push
inc
mov
xchg
je
xchg
fwait
sahf
push
gs
sub
sub
mov
inc
pop
pop
rclb
jns
xchg
adc
inc
mov
in
rorb
xor
cld
xchg
inc
inc
or
mov
dec
out
mov
or
push
repnz
fsubs
dec
cltd
adc
inc
and
and
fiadds
and
dec
repz
or
lahf
push
enter
sahf
dec
adc
inc
sbb
in
dec
int3
adc
movsl
inc
adc
push
and
adc
jns
xchg
adc
mov
in
in
dec
dec
xor
sbb
cwtl
lock
dec
adc
inc
sub
hlt
xchg
dec
int3
adc
movsl
inc
adc
push
and
adc
jns
mov
xor
push
xchg
hlt
mov
push
adc
and
movsb
dec
hlt
inc
clc
jo
inc
int3
adc
cmp
sbb
cmp
cmp
pop
mov
and
frstor
push
or
std
adc
and
in
dec
cmp
push
push
or
jle
pop
out
out
test
push
mov
mov
lea
inc
or
inc
sub
add
pop
inc
addl
cwtl
push
sub
add
rol
pop
mov
xlat
dec
sub
or
add
xor
add
icebp
and
cmp
cld
shll
cmpb
lock
xchg
mov
pop
or
ret
add
repnz
cmpsl
addb
loopne
outsl
in
push
cmp
sub
add
and
mov
loop
add
flds
or
jbe
dec
clc
mov
pop
inc
loop
push
xchg
inc
stos
fldl
xchg
dec
sub
rol
fcompl
shr
or
mov
test
arpl
inc
push
loopne
shl
pop
push
ljmp
lea
push
push
mov
push
mov
dec
sbb
pop
stos
scas
inc
push
lea
push
xchg
mov
stos
lds
jns
lret
pop
scas
mov
mov
pop
push
adc
mov
fiadds
rolb
jne
pop
jecxz
lea
icebp
incb
mov
mov
jl
add
faddl
push
rep
mov
adc
cld
sbb
lea
push
into
xchg
sbb
xchg
shlb
adc
ffree
out
pop
jo
push
jmp
sub
xchg
stos
mov
add
push
cwtl
fldcw
addl
loope
or
les
ss
sti
aam
pop
add
push
fsubr
mov
sub
mov
jg
js
repz
and
mov
repnz
scas
popa
xchg
push
inc
shl
adc
arpl
inc
pop
fwait
lods
sub
popa
or
loopne
xchg
outsl
and
fwait
dec
push
mov
add
fmulp
jb
mov
jns
pop
inc
adc
out
bound
inc
add
in
enter
adc
das
js
cmpsb
ss
jnp
stc
add
lcall
pop
movsb
cwtl
and
sbb
sbb
xor
gs
lock
add
sub
mov
mov
add
or
jns
lds
cs
push
scas
out
lock
adc
shlb
push
pop
xor
and
pop
xchg
call
and
jns
sbb
jp
mov
and
or
mov
std
xor
lods
imulb
stc
xor
or
ss
and
inc
gs
stos
ds
inc
cmpsl
push
std
push
sbb
pop
std
xor
sub
xor
xor
mov
cltd
sub
in
push
pop
movsb
sarb
sbb
insb
mov
fbld
scas
fldenv
dec
sbb
and
xchg
enter
jo
push
sbb
xor
sbb
les
xchg
in
or
imull
dec
pop
test
inc
or
xchg
aas
subb
fstps
or
push
sbb
adc
mov
frstor
fsubl
dec
push
sub
sub
cmp
pop
rclb
jp
lods
int3
adc
jb
add
lds
adc
and
nop
cmp
ds
mov
insb
or
sti
or
jb
inc
and
jge
ljmp
push
jb
adc
mov
inc
sub
sbb
sbb
test
push
or
jb
lods
add
inc
sbb
jb
je
test
xchg
lods
add
adc
sti
cmp
xor
inc
sbb
add
repnz
lods
mov
sbb
add
push
ss
pop
pop
jb
dec
add
and
mov
ss
mov
pop
fildll
scas
and
cli
push
adc
in
sti
inc
out
add
iret
sub
inc
or
sub
shrb
pusha
push
addr16
mov
in
pop
test
fldenv
push
add
pushf
or
sub
push
repnz
pop
pushf
sub
sub
pusha
adc
imul
add
andb
xchg
xchg
enter
pop
pusha
repnz
push
and
cmpsl
pop
das
and
pusha
and
cmp
dec
add
add
nop
inc
push
push
or
or
jae
lea
dec
sub
imul
insl
fmull
xchg
repnz
inc
loop
push
and
cmp
mov
imul
push
sbb
lods
insl
adc
scas
pushf
fadds
pop
jmp
push
sub
push
popf
jne
mov
aaa
sbbb
pop
or
mov
sarl
adc
push
jne
or
fmull
inc
cmp
inc
repnz
lods
jl
ret
push
mov
or
add
mov
xor
je
cli
test
fwait
adc
xor
daa
pop
push
inc
and
loopne
mov
aad
insb
lahf
push
mov
cmp
push
push
inc
adc
loopne
enter
adc
and
popf
dec
and
add
test
or
push
jl
mov
xchg
sti
dec
pop
popf
dec
push
leave
sub
cmc
xchg
mov
sbb
inc
idiv
sbb
cmp
je
xchg
and
pop
jp
dec
cmp
push
and
sbb
popf
push
pop
incl
jne
out
mov
mov
test
inc
ret
mov
adc
mov
push
cltd
ret
aam
pop
pop
or
jns
jnp
cmpsb
jbe
jae
and
pop
push
jns
adc
push
fildll
push
pop
jae
mov
shlb
push
pop
jg
mov
inc
jg
ret
out
call
xchg
and
pop
inc
sub
adc
xor
adc
sub
push
pop
test
std
xchg
pushf
dec
mov
and
add
cwtl
scas
jae
lds
mov
mov
mov
and
dec
and
push
outsb
roll
pop
xor
add
ja
xor
add
test
in
jbe
lcall
ds
push
lds
add
xor
addl
cli
mov
stc
xlat
cmp
or
mov
aam
add
mov
or
xchg
mov
dec
leave
addr16
xchg
adc
push
and
xor
fucomip
iret
out
and
push
enter
xor
lahf
jno
out
add
and
inc
push
push
push
dec
mov
popf
cmp
fsubrs
pushf
pop
jp
subb
mov
mov
sbb
fs
xor
cmp
cmp
test
lea
fs
pushf
mov
and
adc
xchg
xor
pop
lret
push
insl
sub
pushf
dec
xchg
clc
push
leave
aas
clc
adc
sti
pop
mov
pop
and
test
test
les
add
mov
aad
dec
xchg
sub
cmc
push
loop
add
ret
add
mov
jmp
dec
mov
push
adc
inc
movsb
sub
jmp
mov
cmpsl
pusha
xchg
push
fists
pop
mov
cmp
push
daa
pop
out
subb
mov
enter
sbb
sub
mov
shrl
clc
push
adc
dec
aam
icebp
mov
add
cmp
je
inc
in
pop
jb
inc
and
sub
jne
rol
mov
sub
ja
inc
cmp
std
cltd
adc
push
push
xor
adc
cld
ljmp
mov
mov
push
jae
sbb
fwait
pop
push
or
jb
mov
push
pop
xor
repz
je
subl
push
inc
ret
out
call
loopne
mov
mov
or
out
and
fwait
imul
add
enter
sahf
fdivs
rorb
aas
decl
sahf
aam
fsubrl
enter
jp
lahf
call
jge
into
inc
push
fcoms
xor
or
inc
sub
lahf
shll
dec
xchg
mov
test
fcmovu
lods
lock
ds
fbld
and
clc
ja
dec
insb
bound
adc
cmc
add
adc
mov
cld
aam
mov
mov
mov
mov
test
cmpsl
and
cld
call
sar
sbb
add
js
sahf
aam
mov
dec
dec
int
push
test
sub
pop
xor
and
xor
sbb
jp
cmc
add
mov
and
and
inc
int3
mov
sub
adc
dec
jecxz
cmpsb
dec
jne
and
inc
pop
scas
jb
adc
mov
and
push
sbb
imul
push
adc
push
adc
fisttps
jecxz
mov
or
addb
mov
js
adc
push
pop
dec
sbb
mov
pop
mov
and
pusha
cs
push
call
fdivrp
sub
hlt
dec
icebp
clc
enter
xorb
xchg
adc
jb
sbb
jae
inc
enter
mov
mov
mov
cmp
cmp
push
and
je
inc
inc
jmp
clc
lea
cmp
xchg
mov
inc
adc
or
mov
or
cld
xchg
mov
rorb
pop
sbb
add
shl
push
stos
out
dec
outsb
and
sub
inc
fmuls
and
mov
jl
adc
pop
dec
in
lea
ret
cli
push
or
xor
add
loop
scas
xchg
arpl
jmp
mov
cld
pop
out
int
add
dec
cmp
jne
push
add
mov
push
jle
inc
mov
xchg
scas
adcb
cmp
mov
lret
fimull
sbb
inc
jb
movsb
sbb
and
hlt
shll
andb
call
or
scas
pop
loope
push
xchg
add
push
enter
cld
jl
lds
lret
push
test
push
push
stos
in
mov
push
sub
jg
scas
sti
adc
xor
insb
sub
inc
addb
inc
data16
stc
or
sbb
ffree
mov
mov
jmp
pushf
adc
je
jns
cmp
cmp
pusha
and
cld
push
fwait
shll
adc
ljmp
cld
push
pop
test
ret
fildl
push
outsl
int
lods
cmp
jl
call
dec
xlat
rclb
add
push
and
pop
jge
filds
xlat
push
call
xchg
sub
push
mov
test
inc
cmp
or
dec
dec
and
ret
adc
add
adc
xchg
push
int
push
mov
pop
pop
push
mov
xor
cmpb
mov
cmp
cmp
int3
clc
cmp
mov
cwtl
sub
sbbl
mov
adc
movb
enter
jge
adc
jns
add
fwait
dec
imul
mov
and
js
add
dec
jae
jnp
inc
stc
dec
mov
xchg
dec
xchg
pop
loopne
lea
push
add
jne
sub
ret
js
dec
out
or
dec
adc
adc
dec
push
sbb
sub
or
jle
pop
cmp
fstl
jns
test
pop
jne
mov
push
jmp
out
in
jo
addl
addr16
les
das
pop
ljmp
cmc
and
push
test
subb
jmp
cmc
mov
daa
call
sbbb
sti
and
jo
add
scas
les
mov
mov
and
je
or
add
mov
and
push
mov
mov
pop
in
lcall
out
xor
or
cmpsb
jno
shlb
addr16
or
jmp
dec
adc
mov
and
jo
mov
mov
jmp
icebp
lods
pushf
sbb
mov
shlw
das
stc
ss
mov
xchg
fdivl
mov
xor
ja
or
dec
int
push
add
push
push
ljmp
push
fs
push
lock
mov
push
in
shlb
pop
hlt
and
mov
mov
inc
jp
pop
test
call
jmp
mov
or
and
test
idivb
cmpsl
test
pop
xor
adc
jmp
push
pop
shrl
sub
dec
mov
xchg
ss
cltd
xlat
push
test
out
sub
ss
js
jo
xchg
push
mov
imul
vpinsrw
jo
cmp
dec
and
xchg
or
mov
inc
cmc
rcrl
in
push
test
cmp
shrb
adc
push
jb
sub
pop
inc
mov
dec
add
push
and
mov
inc
sub
outsl
mov
jecxz
dec
jp
fmul
fadd
cmc
xchg
rcrb
repz
std
push
repnz
push
mov
jg
iret
pusha
jo
test
stos
pop
mov
call
cmp
mov
aam
jg
add
enter
cmp
popa
hlt
sahf
mov
fdivp
dec
sbb
mov
xchg
enter
nop
test
inc
jp
xchg
repz
inc
inc
jbe
inc
repz
aas
inc
push
repz
and
je
xchg
fs
imul
mov
je
subl
inc
lds
add
cli
mov
adc
ret
add
mov
jo
and
jmp
fisttpl
sub
adc
lods
repz
bound
sti
je
add
push
mov
inc
pop
add
arpl
sbb
negb
pop
notb
push
icebp
mov
jecxz
outsb
jle
dec
stos
adc
rcll
ljmp
mov
xor
out
inc
daa
jno
add
jb
cmp
adc
sbb
pop
sbb
jbe
pop
sbb
jp
pop
adc
mov
flds
scas
lods
mov
sbb
or
stc
aaa
mov
xchg
ret
mov
adc
cli
or
pop
add
sti
push
mov
aam
test
pop
popf
fs
popf
gs
daa
jnp
lret
cmc
inc
inc
push
jge
arpl
push
and
ret
cs
add
ret
lock
push
mov
nop
xchg
cmp
shl
ret
xor
and
fwait
xor
inc
fdiv
add
and
orb
int
xor
push
or
not
add
shr
mov
int3
xor
mov
repz
xor
lock
fldl
cmc
aam
fs
sub
xchg
nop
sbb
adc
test
and
add
and
fcomps
sbb
nop
sub
mov
fs
es
xor
and
nop
inc
imul
popa
xchg
jno
ds
cmp
inc
jns
jl
xchg
and
mov
adc
jae
insb
xchg
enter
push
idivb
or
xchg
enter
rolb
lret
insb
ret
push
pop
pop
pop
es
int
sub
scas
into
stos
movsl
mov
out
repnz
jo
int3
je
ret
xchg
in
jb
sub
or
inc
add
pusha
sub
out
fcoms
aam
fs
shl
push
inc
and
out
loope
or
cmp
pop
aaa
out
xchg
or
addl
shr
pop
inc
and
push
ret
movsb
shlb
fs
pop
or
add
mov
adc
cmp
call
stc
inc
xor
lea
dec
cmc
cltd
mov
cmp
call
ljmp
jno
inc
sub
nop
push
add
insl
push
xor
lock
aad
enter
xchg
shl
std
mov
rclb
in
push
mov
ljmp
movsb
cmp
xor
and
pusha
dec
mov
stos
pop
std
add
mov
fs
adc
sub
sub
ljmp
out
aam
and
inc
add
mov
and
sbb
ss
xor
out
daa
sbb
cmp
shlb
xchg
or
aad
cmpb
inc
pop
xorl
inc
sub
repnz
fistpll
pusha
inc
push
inc
sbb
dec
or
testb
xchg
sub
inc
arpl
cld
push
sbb
cmpb
sti
and
add
pop
gs
adc
mulb
sarb
mov
test
mov
imul
icebp
or
xchg
jp
inc
jge
out
decl
rcrl
test
dec
jle
outsl
push
and
loopne
sub
cmp
sbb
inc
add
mov
adc
adc
mul
sub
xor
les
jo
rcl
inc
sub
xchg
mov
inc
and
iret
std
jno
cmp
rorl
pop
scas
xor
in
jmp
push
mov
shr
rolb
push
call
push
rolb
out
bound
addr16
bound
mov
push
sub
inc
ret
mov
jne
scas
xor
sarl
icebp
mov
lods
repz
notb
or
or
test
hlt
cld
xchg
movsl
test
loop
nop
push
dec
mov
imul
jmp
adc
dec
push
addb
jmp
push
in
fsts
cli
jge
cwtl
xor
leave
outsb
pushf
and
lods
inc
mov
or
or
fcoms
fldenv
fiaddl
faddl
fisttps
cmp
movl
add
aam
cmpl
xor
test
in
adc
or
frstor
lea
mov
loopne
rorl
xorb
adc
xchg
rcl
daa
mov
mov
xor
rolb
fisubrs
jl
pop
or
test
sub
test
dec
cwtl
mov
mov
inc
inc
cld
shlb
negb
aam
push
out
testl
call
jle
jge
dec
jns
add
clc
mov
sbb
jne
jb
jno
movsl
leave
jno
out
cli
pop
and
and
dec
and
cmp
cltd
mov
adc
mov
mov
adcb
call
repnz
and
call
cs
das
dec
cmp
mov
es
cmpsb
test
int
daa
push
movsb
arpl
lahf
xchg
stc
xchg
sbb
aad
fistl
mov
test
dec
adc
mov
mov
sub
jno
fdivl
sbb
shrb
pop
xor
jge
pushf
mov
mov
lods
push
and
shlb
andl
adc
adc
test
cmp
popa
lock
push
les
inc
rolb
dec
jmp
nop
dec
insl
popa
addr16
je
pop
cmp
add
mov
jmp
aam
shlb
mulb
int
pusha
mov
int
adc
jle
rorb
les
mov
insb
push
aad
sub
pusha
decl
movl
adc
adc
ja
mov
sti
dec
adc
fsts
mov
jecxz
or
cs
push
sub
je
inc
sub
lea
adc
leave
adc
add
inc
cmp
sbb
adc
inc
jo
push
lods
mov
js
push
jl
cli
stc
jns
jle
sbb
jl
pop
mov
je
mov
xlat
adc
test
or
mov
int3
inc
testb
lods
inc
addl
inc
adc
adc
rorl
adc
fs
pop
loopne
sub
jg
pop
in
bound
or
pop
or
xlat
push
and
jbe
xor
ljmp
shrl
push
adc
stos
repnz
pop
cmpsb
and
lock
in
stc
jl
xor
ljmp
mov
push
sbb
mov
adc
inc
jle
xor
lret
ds
sbb
jmp
ds
inc
outsb
cmp
mov
js
movsb
jmp
cmp
xor
jmp
popa
dec
pusha
cmp
jbe
jns
xchg
daa
pop
dec
sbb
xor
xchg
test
mov
and
sbb
add
fdiv
lcall
dec
pop
xchg
pusha
inc
in
int3
fsubs
cmpl
inc
jl
jge
es
push
cmp
rclb
lea
pop
js
adc
rorl
std
jnp
push
clc
xchg
stc
sbb
insb
xor
push
mov
es
sbb
xor
jmp
sti
cmp
mov
sti
xchg
stc
jmp
jno
repnz
push
push
inc
sbb
mov
push
pop
sarl
stos
rolb
rorb
jb
pop
div
addr16
xchg
mov
orl
sbb
or
mov
xchg
mov
and
das
in
cs
popf
fsubrl
aam
movsb
mov
or
inc
loopne
sub
shrb
fcomi
stc
ss
loop
decl
adc
cmp
testb
pop
aas
sbb
jb
js
add
pop
mov
cwtl
or
repz
pop
push
or
loope
sub
cmpw
pop
add
push
cld
cmp
xor
dec
sbb
repnz
ret
ja
push
jns
mov
mov
das
dec
lahf
adc
cmc
mov
test
icebp
cmp
aam
sbb
and
xchg
jmp
inc
inc
add
push
push
fdivrs
ficoms
adc
xor
jbe
lea
repz
je
mov
mov
notl
inc
and
push
cmp
mov
jo
mov
push
adc
shr
sub
dec
or
mov
adc
stos
push
dec
mov
sbb
aad
xchg
mov
cmp
je
test
adc
ret
in
popf
loope
adc
leave
and
push
stos
mov
dec
lret
test
dec
sahf
mov
ljmp
dec
add
inc
mov
push
outsb
lods
xor
adc
fbstp
das
jne
pop
adc
dec
arpl
test
mov
rorb
xor
stc
fs
je
push
sub
aaa
out
sub
sbb
mov
outsl
push
sbb
sbb
loopne
pop
imul
in
push
idiv
test
rorl
es
pop
adc
test
int
fwait
and
sarb
sbb
outsb
and
out
repnz
jbe
pop
and
stos
stos
leave
cltd
adc
sbb
sbb
or
ret
cmp
sbb
sti
cltd
dec
lea
and
pop
leave
out
orl
call
adc
sbb
divl
push
cmpl
dec
mov
pop
pop
and
xchg
dec
adc
les
cmp
cmp
dec
jo
ljmp
sub
mov
test
add
insb
hlt
and
pusha
fstps
jo
ret
inc
or
jle
clc
call
nop
xlat
pop
xchg
add
cmp
hlt
pop
push
add
xchg
test
lock
lea
ret
push
mov
xchg
in
xchg
pop
xor
sub
sub
push
push
cmp
inc
or
je
mov
int
jmp
lods
xor
push
lret
sub
add
pop
add
lds
dec
mov
jmp
or
movl
xor
mov
jmp
push
sbb
rorl
dec
mov
adc
frstor
push
push
pop
or
mov
int3
and
adc
je
adc
adc
dec
inc
fldl
jl
ret
and
push
add
push
mov
fstpl
daa
or
xor
dec
sbb
jmp
or
pop
mov
enter
xchg
jo
cs
push
cmp
in
rcrb
mov
xchg
bound
xchg
notb
pop
push
cli
sub
xchg
pop
addr16
xchg
jp
push
loopne
and
je
or
jmp
rcr
dec
and
mov
mov
or
and
lret
test
orl
xchg
roll
enter
xor
xchg
negb
divb
mov
dec
clc
hlt
cli
mov
push
stos
enter
scas
mov
and
mov
clc
lret
pop
lcall
ja
test
pop
cwtl
push
push
testb
push
and
rorb
inc
and
push
fadd
lock
jno
addb
fadd
cwtl
mov
mov
cmp
and
loope
out
movsb
sbb
dec
imul
jne
xor
adc
movsb
test
xchg
mov
push
in
inc
xchg
push
xchg
adc
or
sub
roll
idiv
shrb
je
pop
loopne
inc
mov
testl
test
daa
into
mov
sbb
lock
loope
inc
pushf
pop
pusha
test
sbb
test
adc
mov
lea
mov
ja
dec
add
loop
jb
pop
push
or
ss
pop
adc
sub
add
lea
cmp
or
mov
gs
sbb
or
lea
mov
push
decl
xchg
and
add
js
add
xor
inc
and
dec
push
mov
and
sub
cmp
lahf
stos
sbb
cli
or
mov
or
fld1
lods
and
lods
stc
test
imul
test
outsb
orb
or
adc
xchg
into
daa
push
push
decl
test
dec
jno
sbb
add
and
dec
adc
les
push
push
call
out
hlt
outsb
sbb
fs
iret
shl
adc
cmp
mov
ror
xchg
push
ret
pop
mov
aad
test
xor
push
or
xchg
addl
sbb
icebp
push
mulb
imulb
inc
lock
cli
xor
leave
test
sbb
adc
add
js
add
sub
lea
or
in
hlt
cmp
mov
fcompl
sbb
pop
add
mul
enter
adc
sub
or
inc
ja
stos
sbb
fcomip
sbb
sbb
in
or
les
add
xchg
pop
lock
adc
test
ja
push
pop
xor
and
jno
or
addl
xlat
clc
xor
testl
push
int3
push
popf
pop
fwait
or
or
adcl
dec
in
mov
inc
imul
sub
sbb
dec
aas
cmp
leave
clc
add
sbb
pop
and
sbb
mov
sub
dec
mov
pop
shll
adc
xlat
mov
sub
divb
test
fsubrp
adc
hlt
jl
add
ret
adc
clc
add
cmp
cmpb
loope
mov
or
outsl
outsb
pusha
inc
je
cmp
into
jge
dec
cmp
mov
and
jmp
mov
int3
adc
enter
xchg
cmp
mov
and
hlt
adc
or
mov
ss
push
movb
scas
clc
lock
xchg
mov
push
add
sar
and
nop
pushf
dec
dec
jmp
push
xchg
std
aad
scas
jo
and
xchg
cli
in
int3
mov
and
push
adc
fnsave
cmp
movsl
imul
jns
data16
lods
sar
int3
sbb
mov
dec
push
mull
lcall
adc
xchg
fimuls
adc
pop
jmp
adc
cmp
loop
jne
xor
and
ret
xchg
push
adc
and
add
and
lret
inc
jbe
xor
add
popa
xchg
loope
sub
shlb
push
push
enter
test
ret
mov
jp
jne
pop
decl
add
jmp
bound
repz
cmp
xchg
jge
in
pop
xor
aaa
lret
push
sbb
es
arpl
insb
je
sbb
xchg
mov
leave
push
fisttpl
dec
scas
lret
dec
add
out
je
inc
cmp
fists
or
ljmp
inc
sbb
or
shrl
adc
push
jne
jmp
mov
dec
push
push
or
int3
jmp
cmpl
inc
or
in
adc
mov
and
and
pusha
dec
mov
cmp
clc
push
cwtl
sahf
xchg
add
outsb
lds
mov
fisttps
loope
adc
insl
inc
jmp
add
push
add
cmc
mov
mov
adc
fs
or
rcrb
lret
in
ds
xor
or
cld
idivb
das
test
rcll
insl
pop
pushf
orl
push
aam
dec
mov
outsl
leave
ret
decb
push
fldenv
push
faddl
add
popf
cmp
adc
sub
test
sarl
repz
fs
mov
into
hlt
adc
inc
movsb
mov
sub
pusha
sbb
pop
movsb
pusha
repz
cmc
inc
enter
add
mov
aaa
or
pop
iret
xor
push
sub
fdivrs
push
lods
pop
mov
imul
shlb
fsubr
int3
lods
clc
ds
jmp
cld
mov
inc
xor
sti
adc
out
add
or
call
out
or
inc
test
sub
test
inc
scas
roll
daa
dec
inc
adc
test
repnz
imul
rcrl
add
shl
xorl
xchg
cmpsb
frstor
into
adc
cltd
data16
movsb
dec
fcoms
dec
pop
or
or
adc
es
xor
push
mov
dec
cwtl
pop
or
jo
dec
jge
pop
add
sub
mov
cmp
sbb
clc
mov
sbb
adc
dec
out
xor
cwtl
jge
adc
lock
pushf
lds
call
out
and
jmp
subl
test
dec
mov
mov
push
push
inc
mov
or
lods
in
push
pop
sub
sbb
jmp
jmp
loopne
sub
mov
pop
mov
fadd
adc
mov
xchg
jmp
cltd
cltd
cmp
stc
shld
push
icebp
adc
lods
pop
sbb
and
rcrl
lea
cmpl
sbb
jno
in
and
or
jbe
push
mov
cmp
cmpsb
call
inc
insl
cmp
xor
push
test
lahf
cmp
jo
adc
mov
push
out
cmp
imul
dec
cmp
call
xchg
mov
call
decb
movl
cld
shll
xor
pop
daa
inc
lcall
mov
inc
sub
add
jne
or
add
mov
pop
push
lock
aam
mov
pusha
pop
xchg
mov
xor
cmp
jae
inc
adc
loopne
inc
xor
sbb
js
mov
fs
pop
adc
push
push
pop
xor
mov
out
arpl
inc
jl
nop
lock
hlt
sub
jmp
or
cmp
gs
dec
enter
jge
jns
mov
inc
push
lea
mov
mov
std
in
sub
jle
dec
test
sub
out
xchg
dec
mov
xor
adc
aaa
je
inc
cmp
test
test
repnz
mov
adc
pop
sbb
pop
and
in
shll
rcrl
or
pop
clc
cmp
push
fistl
sti
add
outsb
in
shll
adc
sub
mov
sub
jmp
repnz
popa
je
and
dec
in
ret
rcrb
jnp
lods
in
bound
inc
push
add
shl
mov
dec
jns
jmp
addr16
rorb
stc
add
jne
adc
or
sub
push
push
and
dec
cmc
mov
fdivrs
mul
add
rorl
dec
add
or
cmp
jne
bswap
pop
jae
mov
stc
mov
sbb
pop
lods
push
shr
cmpsl
repnz
xor
lea
test
mov
mov
sbb
push
dec
test
mov
pop
pop
std
and
cmpb
test
mov
dec
inc
xchg
in
decb
mov
cmp
inc
rcrb
push
imul
xor
jmp
pop
mov
adc
cmpsl
stos
xlat
push
test
pushf
and
mov
xor
mov
mov
les
scas
cld
es
cmc
or
fldt
in
pop
and
int
jl
push
xchg
imull
loope
jge
push
xor
lods
pop
pop
jbe
push
or
outsb
negl
stos
and
movsb
sbb
mov
mov
lods
or
mov
sbb
imul
clc
mov
sub
and
dec
add
out
sbbl
cld
mov
daa
dec
loopne
jnp
cli
es
add
push
sub
add
mov
or
push
lret
push
add
rol
pop
sti
xchg
cltd
and
stos
test
sub
pop
bound
adc
out
sbb
mov
push
push
and
push
addl
sbb
sub
lahf
fidivrs
xchg
sarb
xchg
aad
fmuls
mov
jne
pop
test
test
mov
sub
int3
push
jl
pusha
in
jmp
movsl
imul
rolb
mov
mov
fcmovu
mov
xchg
aad
xchg
xchg
sub
adc
movsl
pop
jae
adc
xchg
lods
xchg
xor
pop
inc
push
call
lcall
sarl
ret
jne
shlb
push
popa
push
add
inc
incl
stos
lahf
test
fcomps
xchg
mov
dec
push
in
fcmovnbe
push
mov
mul
in
inc
sub
jne
mov
mov
call
or
push
jo
fcmovnu
sub
dec
ljmp
push
je
mov
push
cmpl
outsl
inc
rcll
mov
dec
out
into
fsubs
inc
and
or
xchg
imul
mov
call
pop
sub
les
dec
mov
inc
pop
jne
adc
mov
pop
icebp
cmpl
sbb
ret
and
imul
fwait
xor
pop
leave
cwtl
mov
fcomps
or
repz
ret
shll
jp
sub
fdivrs
insl
rcrl
cmp
test
and
xchg
pop
pop
aaa
pop
pop
sbb
or
js
mov
xor
mov
jns
xlat
cmpsl
jecxz
jae
push
js
add
pop
div
add
mov
adc
jne
movb
in
js
out
add
cmp
jb
xorb
mov
int3
and
roll
and
adc
mov
fisttpll
sub
call
lret
mov
movl
ljmp
dec
rorl
sub
into
daa
push
adc
jl
lods
xor
pop
call
mov
xchg
mov
mov
sub
mov
adc
movsl
push
xchg
mov
push
lods
and
inc
cmp
xchg
mov
pop
test
aad
test
add
push
or
mov
fcomps
mov
test
scas
sub
pop
inc
mov
shll
or
jnp
data16
mov
gs
push
insb
jg
inc
xlat
ficomps
insl
and
xlat
xchg
pop
test
and
lret
icebp
shr
fbstp
mov
mov
cmp
lahf
xchg
xor
nop
push
loopne
mov
xlat
push
jecxz
add
fldcw
jo
loopne
mov
push
addl
mov
dec
je
pop
es
sub
jbe
sub
xchg
loop
dec
inc
xchg
pop
cmp
repnz
push
jg
movsb
push
inc
fsubr
outsb
pop
das
sbb
or
cld
jns
xchg
and
lea
jno
roll
repz
mov
pop
add
or
jns
push
push
sub
add
mov
xor
decb
push
push
push
inc
add
jmp
xor
add
mov
loopne
mov
mov
scas
gs
inc
jns
add
inc
aas
inc
loopne
inc
scas
daa
sbb
cmp
xchg
pop
sub
adc
mov
sbb
inc
test
bound
adc
shlb
dec
or
adc
mov
mov
inc
into
xchg
ficompl
fcoms
mov
jecxz
pop
xchg
jle
fcmovnu
mov
mov
sub
push
sub
lea
xor
inc
jne
mov
inc
movsb
cli
or
mov
inc
push
mov
jecxz
jge
and
inc
adc
pop
xor
or
mov
and
notb
subl
xchg
fcoml
inc
es
loopne
inc
lds
inc
sub
fwait
and
test
add
push
cli
sub
pop
push
lods
adcl
adc
or
push
and
or
adc
and
int
cmp
nop
xor
adc
pop
sbb
push
add
add
push
outsb
clc
and
add
add
movsb
and
les
fsubs
inc
xchg
dec
cmp
loopne
mov
inc
cmp
in
enter
lods
sbb
mov
sbb
mov
je
in
xlat
lea
push
aas
fdivs
insb
jg
js
and
les
or
or
movsl
mov
js
and
add
or
lahf
dec
arpl
cli
add
and
loopne
or
or
loopne
add
jnp
push
pusha
enter
or
pop
jno
and
adc
leave
arpl
xor
jbe
xchg
adc
ret
data16
push
inc
aam
inc
pop
pop
outsb
pop
aas
jl
sarb
movsl
dec
sbb
pop
ret
lcall
adc
cmp
fiaddl
or
adc
popa
nop
adc
sbb
and
dec
and
enter
pusha
fisttps
adc
push
lock
dec
jge
sub
xchg
cmpsl
and
enter
push
fcoml
int3
and
inc
enter
add
repnz
sbb
les
inc
nop
cmp
addb
mov
daa
aam
test
test
clc
sub
cmpsb
gs
sti
arpl
pop
dec
mov
popa
test
jo
sub
push
movsb
adcl
mov
pop
mov
int
jo
sub
xchg
leave
mov
out
icebp
mov
popl
lds
inc
fmull
stos
enter
rcl
lret
int3
xchg
dec
mov
xchg
lea
iret
rcrl
push
push
xchg
xchg
lods
lret
or
out
test
pop
rcrl
inc
aam
fsubl
enter
int3
ljmp
call
cltd
es
inc
aam
addl
sub
jecxz
pop
test
add
daa
lods
fnstcw
jae
and
int3
sub
int
xchg
cld
mov
mov
ror
sti
rclb
pop
push
enter
je
mov
test
cwtl
hlt
aam
fwait
out
loopne
repz
rolb
push
mov
test
movsl
fcomps
notb
sub
jmp
add
dec
push
outsl
dec
std
aas
and
inc
lods
in
scas
xor
mov
dec
mov
cmpsl
les
pop
inc
subl
stos
jnp
inc
xor
clc
faddl
mov
jne
fcoml
or
insb
push
adc
cmc
sub
sub
lds
sbb
loop
and
inc
xlat
xchg
in
in
int3
lahf
jno
ret
mov
mov
in
and
std
cmpsl
adc
insl
stos
sarb
cli
test
je
mov
add
jg
dec
out
dec
push
sub
jae
adc
out
rcrl
xor
out
cmpsl
cmp
mov
or
or
test
push
jb
pop
cmp
xor
into
mov
je
and
nop
in
pop
test
dec
sbb
data16
pop
push
dec
and
push
ja
arpl
enter
and
pop
fstl
sbb
xchg
cld
sahf
push
or
in
sbb
scas
hlt
ret
inc
fsubr
dec
adc
fildl
jge
pop
push
mov
neg
inc
add
mov
mov
lods
mov
xchg
out
mov
mov
sub
pop
sub
push
in
loop
or
into
inc
orb
adc
inc
mov
loopne
mov
xchg
rorb
sbb
jmp
fdiv
mov
pop
iret
out
push
int3
in
std
sub
push
xor
movsb
mov
into
cli
mov
add
adc
arpl
mov
dec
sbb
pop
mov
inc
jecxz
in
scas
lods
push
lods
jne
jge
push
lea
test
je
mov
js
add
xchg
shl
lahf
or
cmp
adc
clc
jne
data16
cmp
outsl
in
ret
das
pop
pop
push
cmp
xor
imul
sbb
xor
cmc
jns
add
jae
jg
out
lahf
push
push
push
mov
adc
dec
rcll
sbb
or
inc
scas
je
bound
popa
xor
push
popa
roll
push
call
dec
or
sub
js
xor
inc
mov
sub
dec
stos
es
adc
jmp
stos
mov
xchg
sti
inc
mov
lods
test
aaa
xchg
insb
mov
stc
out
inc
das
repnz
add
imul
ja
daa
pop
or
xorb
and
jne
dec
push
xchg
cmp
ja
xchg
adc
test
clc
jmp
mov
insl
sbb
cmc
push
insb
sbb
test
xor
sbb
inc
and
popf
fadd
test
dec
sub
out
adc
inc
mov
shrb
pusha
inc
cmp
and
pusha
enter
pop
mov
mov
sahf
inc
pop
das
xchg
jmp
cmpsb
testb
or
jne
jb
pushf
xchg
xor
xchg
pop
adc
fs
sbb
test
add
cmp
lret
imul
fisttps
inc
xchg
jmp
mov
daa
fs
cmp
add
dec
imul
cmc
mov
push
dec
cmp
clc
cmp
add
or
mov
pop
movb
rcll
call
hlt
mov
sbb
call
mov
push
cmp
xchg
xlat
cltd
cltd
or
or
mov
push
test
out
dec
sbb
dec
and
jae
xchg
dec
xor
push
cmpsl
mov
inc
in
sbb
adc
jl
mov
ja
cmp
xchg
fsubl
scas
mov
cli
jns
cli
ja
jp
push
jb
pop
and
clc
xlat
pop
lret
movsl
mov
pop
les
in
and
jl
pop
call
mov
mov
jmp
cmc
mov
and
add
adc
pop
add
jle
add
cld
aam
inc
adc
test
es
inc
mov
daa
data16
cli
aam
jbe
dec
or
hlt
je
or
lock
push
adc
ror
or
mov
dec
mov
mov
pop
shlb
inc
clc
jl
inc
call
es
cmpsb
adc
lahf
test
and
lcall
aam
inc
cs
lcall
mov
mov
pusha
popf
cmpl
les
mov
add
inc
adc
jne
adc
call
out
pop
nop
jno
xchg
nop
mov
ret
aas
lea
adc
push
push
jo
fildll
xchg
imul
mov
fcompl
push
mov
test
and
stos
adcb
jne
jnp
mov
or
cmp
mov
jne
mov
dec
loopne
dec
push
add
mov
xchg
mov
or
je
dec
mov
into
push
mov
arpl
int
push
faddl
and
push
int
test
jae
cld
shlb
test
dec
jns
push
lea
push
scas
xor
hlt
ret
test
pop
push
mov
pop
pop
xor
outsl
mov
mov
mov
loop
xor
or
and
movsb
ret
jbe
dec
sub
leave
jbe
jg
jbe
js
rclb
cli
aaa
leave
sbb
jg
mov
push
fists
or
push
dec
xor
andl
push
pop
jno
loopne
jmp
leave
fsubrl
aam
xchg
ss
sub
std
inc
cmc
mov
xor
and
push
fists
push
sub
int
adc
add
jmp
mov
push
mov
xor
dec
cwtl
mov
shrb
ljmp
aad
xchg
scas
mov
cmp
dec
push
jae
scas
je
adc
jae
cltd
mov
in
mov
out
int3
pop
ja
jae
mov
xchg
int3
insb
sbb
push
jmp
xlat
mov
das
call
or
mov
mov
and
mov
and
daa
lds
test
add
dec
or
sbb
push
push
push
ljmp
aad
stos
rolb
das
add
jmp
pop
xchg
add
rorl
push
mov
pushl
mov
sbb
xor
or
and
jae
je
jnp
test
cld
adc
xor
adc
gs
enter
std
arpl
js
and
adc
mov
scas
bound
jge
andb
add
rcll
sub
je
mov
fcoml
cmp
insb
push
cld
jmp
sbb
loop
and
ljmp
mov
xchg
scas
out
sbb
xor
mov
push
mov
dec
dec
pop
sub
pushf
jl
add
in
movsl
ficoms
sarb
cwtl
gs
mov
cld
push
pop
out
fbld
cli
ljmp
sub
xor
mul
sub
out
cmp
push
shl
das
mov
loopne
ds
adc
or
lea
cmpsl
scas
xor
push
jns
lcall
add
jae
rorb
jmp
lcall
inc
jmp
aas
sub
dec
push
or
hlt
mov
push
outsl
mov
xchg
clc
ljmp
ja
and
adc
push
lods
fstpl
insb
adc
in
xchg
inc
jp
loope
xor
xor
in
aad
push
cmp
mov
repz
push
insl
js
sub
aad
sub
push
mov
or
push
cmp
pop
dec
add
lret
sarb
add
inc
inc
cmp
je
sar
jb
repnz
jmp
mov
xorl
or
and
pusha
in
jne
fsubs
fld
insb
fdivrs
outsb
lods
adc
pop
aas
inc
and
cmp
inc
call
jl
test
add
dec
and
push
outsl
mov
stos
add
and
test
loop
imul
and
xor
sbb
lcall
xchg
mov
push
xchg
push
or
stos
add
andl
adc
mov
cli
fidivrl
pop
pop
adc
and
xlat
jno
xchg
add
leave
notb
pop
test
adc
les
mov
sub
push
xlat
lock
and
sbb
mov
or
sbb
xchg
pop
mov
or
or
jle
stc
mov
outsl
test
mov
and
xchg
mov
mov
cmp
loopne
cmp
cmp
or
xchg
inc
das
loope
cli
xor
cmpsb
fsubl
push
inc
popf
sti
mov
xchg
adc
leave
inc
inc
mov
mov
pop
fwait
mov
mov
fmuls
lods
pushf
mov
scas
add
push
pop
jl
xchg
mov
push
aaa
mov
mov
jmp
movsb
repz
repnz
mulb
add
jb
dec
or
adc
push
int
insl
sbb
inc
sbb
jo
jg
aaa
push
cs
xchg
das
xchg
je
cmp
lods
or
adc
dec
or
call
in
xor
ja
mov
xor
push
les
das
out
xor
andl
std
or
push
jb
jmp
xchg
cs
sbb
inc
mov
ja
push
mov
inc
push
js
insb
sbb
inc
je
jmp
mov
cmp
call
adc
push
jp
cli
jmp
sbb
push
sbb
mov
or
cmp
xchg
inc
negb
push
scas
arpl
or
adc
and
stos
mov
push
pop
call
sahf
push
ficompl
aaa
or
or
xor
rorl
repnz
aam
iret
enter
test
sbb
cmpsl
lds
adc
sub
into
sub
xlat
pop
sub
and
js
les
js
or
sbb
or
mov
ficompl
xchg
push
or
and
aas
icebp
xlat
sub
mov
mov
add
repz
or
pop
push
mov
test
add
push
push
sub
mov
xor
dec
mov
repz
mov
and
dec
xor
push
ficoml
mov
and
add
stc
pop
mov
or
out
pop
and
mov
xor
adc
adc
dec
sbb
jnp
nop
adc
mov
jo
pushf
xorl
add
out
adc
xchg
pop
movaps
dec
mov
cwtl
scas
xchg
jp
cmpsl
push
jbe
lret
outsl
in
aad
lret
stos
push
cld
aaa
leave
notl
pop
jmp
fmull
int
jle
xchg
cli
test
daa
jl
insb
or
imul
mov
dec
and
loop
mov
lods
pop
daa
pop
shrl
in
ret
in
jge
xchg
out
scas
or
mov
test
addb
jns
sub
cmp
int
sub
dec
lods
mov
bound
jne
push
inc
aam
mov
bound
pop
and
add
push
mov
jnp
xchg
cmp
cwtl
sbb
xor
ds
cli
test
xor
ljmp
jb
mov
out
sub
add
cmp
stos
mov
push
fldenv
sbb
push
push
inc
xor
inc
cmpsl
xchg
loope
push
inc
dec
aaa
inc
mov
sti
push
dec
notl
mov
inc
mov
fs
mov
or
fdivr
lahf
push
adc
pop
jo
int
imull
sub
movsl
loopne
fistpl
cmp
add
inc
scas
roll
jp
hlt
lret
or
sub
xchg
test
or
inc
cmp
imul
jecxz
pushf
sub
add
add
cmp
pop
fistpl
or
mov
out
mov
imulb
orl
push
rol
xchg
jae
mov
in
fmuls
les
les
sahf
cmp
fmull
leave
dec
add
adc
add
inc
cmp
call
lea
sbb
sarb
xchg
xchg
cmp
mov
or
push
lea
pop
dec
repz
enter
mov
repz
movsl
and
mov
xchg
or
push
fwait
jp
jg
lock
adc
dec
cmpsl
xor
test
mov
dec
mov
xchg
mov
movsb
dec
adc
divl
ds
and
paddsw
pop
imul
jmp
push
sub
decb
stos
leave
adc
cmp
cmp
out
enter
push
pop
popa
sub
in
jp
push
push
add
hlt
sub
or
stc
cmp
loopne,pn
push
cmp
clc
ja
testl
movb
daa
lods
adc
stos
mov
xchg
push
xor
movsl
clc
fs
rcll
cld
adc
call
cmpsb
std
pusha
cmp
pop
popf
int
adc
shr
mov
dec
jmp
jg
lea
sub
clc
and
loope
push
ret
or
mov
test
add
clc
push
fsub
mov
sahf
jno
push
les
adc
inc
dec
add
inc
addl
out
mov
int3
sub
or
ljmp
jmp
inc
sbb
jns
pop
sub
jg
xor
add
jge
push
or
and
xor
or
or
sbb
sbb
icebp
dec
cmp
sbb
sbb
call
sub
xor
dec
dec
adc
clc
test
and
pusha
add
cmp
cmp
lea
clc
xor
xchg
loopne
mov
jl
stos
fidivl
testb
pop
enter
popa
lock
mov
je
sbb
sub
leave
push
cmp
ja
out
cld
inc
addr16
inc
pusha
push
leave
je
adc
jle
xchg
orl
movsb
cs
mov
xor
add
lret
icebp
add
loop
add
push
mov
sub
icebp
cmp
adc
cmc
jmp
or
and
jl
xchg
in
xor
hlt
ret
cmp
scas
rclb
sub
pop
adc
jl
xchg
sti
ret
mov
stos
clc
add
pushl
call
mov
pop
cmp
xchg
leave
inc
lret
enter
and
mov
and
subl
mov
sbb
call
push
insl
les
cwtl
adc
push
gs
inc
push
ja
or
mov
outsb
xor
jmp
or
mov
mov
dec
lods
lret
or
rolb
fnsave
mov
push
iret
lods
rorl
pop
lea
push
imul
in
mov
mov
lret
test
mov
or
fidivrl
adc
sub
out
rclb
lods
push
adc
dec
add
push
js
int3
cmp
pop
inc
or
sbb
adc
push
dec
push
sbb
ljmp
push
mov
movsb
pop
push
dec
pop
mov
and
ror
pushf
call
std
and
xor
decb
das
push
jne
mov
xchg
les
dec
outsl
jb
dec
outsb
in
push
push
and
dec
and
pcmpeqd
imul
xlat
shlb
in
ret
or
xchg
pushf
dec
shr
ds
clc
stos
inc
jge
push
mov
fs
sub
es
test
sub
movsb
pop
rcr
mov
cmp
jae
fucomp
sub
dec
adcb
fldt
add
xor
jno
inc
movsb
cmp
dec
insb
jg
mov
jnp,pt
in
lds
pop
bound
out
jo
loope
sub
lea
add
inc
je
mov
inc
mov
mov
imul
sahf
outsl
sbb
cmp
lret
adc
fisubrs
adc
dec
in
in
jns
loopne
call
dec
jg
scas
sbbb
popa
cmpsb
mov
or
hlt
inc
push
or
pop
mov
or
xor
add
mov
dec
add
movsb
push
inc
lcall
mov
cmp
in
xchg
or
sub
xchg
movsb
or
sbb
popa
push
jbe
adc
sbb
les
cmp
test
add
push
call
xchg
dec
push
jb
dec
out
into
or
jns
or
ljmp
add
mov
dec
in
call
mov
or
aad
lret
xchg
mov
test
push
xchg
adc
sub
bound
mov
das
adc
loopne
sarb
in
lahf
jno
pop
notl
cmp
negb
lods
mov
loopne
adc
sbb
cmp
and
push
inc
or
addl
arpl
js
les
rcr
push
fwait
pop
outsl
mov
lret
ds
push
fstl
cmp
inc
jns
and
adc
test
ss
daa
push
mov
jl
mov
adc
mov
cmpsl
push
in
dec
mov
or
cmpsl
and
push
sbb
pop
or
sub
dec
add
lret
adc
fidivrl
daa
xlat
and
cmp
inc
int3
push
and
xchg
mov
push
lods
dec
pop
add
fbstp
adc
adc
je
inc
cmp
lods
clc
in
hlt
ljmp
cmp
rdtsc
sbb
aam
sbb
pop
xchg
xchg
and
cli
leave
and
ja
xor
mov
addb
sbb
dec
mov
adc
mov
and
fidivl
popa
scas
add
adc
cmpsb
out
adc
aas
xor
int3
sbb
xchg
and
jbe
push
data16
dec
pop
pop
shl
dec
fwait
pop
ret
pop
pop
mov
dec
insb
movsb
pop
cli
and
mov
icebp
push
push
mov
dec
call
cmp
xor
inc
shr
cmpl
clc
les
shll
push
clc
or
popf
mov
sub
repnz
xchg
push
leave
xor
movsl
roll
lods
test
dec
add
cltd
push
je
das
lret
dec
or
mov
pop
dec
sahf
mov
jbe
ret
call
clc
bnd
mov
mov
push
loopne
adc
shll
sub
loopne
aas
mov
add
push
enter
outsb
test
sub
scas
jl
push
movsb
loopne
call
rorb
repz
adc
aad
sub
pop
shrl
add
mov
or
movsl
push
out
fmulp
std
jl
add
movsb
call
inc
aaa
adc
in
pop
push
and
movsb
dec
orb
and
sub
subl
xchg
cld
hlt
sub
add
mov
cmp
enter
jmp
stc
jb
push
jbe
dec
cli
stc
out
addl
popf
lock
pop
xchg
pop
or
int
dec
fwait
jns
movups
fucom
sti
jg
je
jecxz,pt
mov
shrl
xchg
xor
std
lcall
push
dec
loop
sub
lea
cmp
inc
pop
dec
bound
push
push
or
adc
rolb
push
hlt
jae
sub
movsl
cmpl
add
add
jae
inc
cmp
adc
pop
add
jg
sub
outsl
jnp
pop
mov
xchg
and
lds
or
lahf
ja
sbb
sbb
hlt
mov
sub
shlb
jge
ljmp
icebp
loope
jb
in
adc
sub
push
daa
cmp
enter
pop
ret
dec
push
pop
pop
movsl
loopne
daa
and
adc
push
mov
xlat
stos
adc
fxch
adc
jo
call
jno
lcall
jmp
mov
stos
xchg
jns
jg
bnd
xchg
add
mul
fs
mov
daa
es
insb
cs
cwtl
mov
ljmp
sbb
adc
gs
sub
clc
je
or
xchg
frstor
push
sub
mov
cld
dec
scas
pop
scas
out
sub
inc
and
xchg
test
mov
or
xchg
jne
data16
sar
pop
test
xchg
xor
adc
push
scas
xor
pop
insb
sbb
sbb
or
push
mov
sahf
lock
adc
cltd
mov
inc
and
aaa
je
jmp
aad
ja
orl
jmp
es
imul
stos
pop
cmp
out
mov
les
mov
inc
mov
out
dec
fucomip
mov
jns
lcall
jo
xor
or
rorb
pop
fldcw
sbb
and
cmp
push
js
and
xchg
inc
in
rorl
inc
mov
pop
stos
mov
dec
repz
test
and
mov
fcompl
repz
adc
mov
jne
lods
test
jo
add
jae
lret
sub
std
jae
xchg
inc
mov
mov
mov
aaa
or
gs
clc
push
push
jno
pop
sub
pop
add
cwtl
clc
dec
sub
mov
jne
jmp
or
outsl
add
pusha
mov
inc
add
lods
mov
inc
test
push
lea
inc
nop
cmp
or
pop
jne
pop
mov
cmp
push
sbb
and
adc
inc
or
leave
push
in
jl
imul
das
mov
add
mov
shr
cmp
imul
push
and
aam
jg
fdivs
lcall
mov
sbb
movsl
das
shrb
cmc
mov
push
add
sbb
pop
insl
mov
jge
cli
shrb
cld
shl
sbb
negl
jmp
adc
or
rorl
inc
pop
mov
cmpsl
adc
dec
add
push
cwtl
mov
mov
mov
into
cmp
or
pushf
push
loopne
pop
add
pushf
daa
call
nopl
inc
add
loopne
pop
add
jo
cmpl
aam
jge
fwait
mov
and
or
and
loope
push
push
mov
mov
shrb
stc
movsb
dec
out
rcl
lahf
mov
cmp
mov
xor
mov
push
stc
data16
adc
fwait
cwtl
aam
ja
loopne
and
add
fadds
and
stos
add
cmp
jb
and
pop
cmpsb
push
loopne
loop
faddl
add
add
enter
mov
push
pop
and
fcmovne
dec
push
and
dec
or
pop
ds
dec
push
add
xchg
shr
xor
and
into
jo
sbb
movsl
xor
adc
mov
mov
fstpl
jg
iret
push
sbb
add
push
add
mov
or
sbb
ss
fldcw
into
dec
es
cli
mov
out
lock
or
aad
cmp
xor
add
adc
outsb
loop
push
adc
mov
rclb
mov
loop
push
test
mov
pop
icebp
adc
rorl
out
pushf
or
out
or
sub
add
jmp
popf
pop
mov
cmc
fimuls
push
lods
or
or
adc
add
push
test
into
lret
add
push
ds
fsubl
mov
shl
sbb
xlat
xor
inc
incb
fimull
adc
cmpsb
sub
pop
insl
mov
and
orb
or
adcb
outsb
pop
call
or
dec
push
mov
sub
aas
adc
inc
pop
dec
data16
stc
mov
shrl
adc
sahf
mov
mov
or
xor
cmp
sbbl
dec
leave
stos
mov
xor
nop
and
lret
arpl
jmp
pop
xchg
adc
xchg
sub
faddl
sub
ss
testl
or
adc
lcall
xlat
and
xor
mov
jmp
push
cltd
and
dec
lea
or
adc
xor
dec
loop
and
pop
and
in
push
rorb
les
mov
xor
xor
test
sbb
inc
mov
or
xchg
dec
xor
out
mov
icebp
das
shlb
xor
lds
and
pop
push
negl
sahf
rorl
cmpsb
bound
cmpsb
pusha
push
jle
imul
cmpsl
push
or
inc
out
loop
shrl
mov
or
push
roll
ds
xor
push
or
adc
xor
out
pop
fstps
mov
xchg
or
mov
neg
push
stc
or
sbb
and
fstps
push
xchg
xchg
fildll
addr16
mov
rcrb
incb
out
and
popf
sub
xor
sub
cli
dec
sub
repnz
sub
mov
and
and
and
dec
adc
iret
cli
xchg
pop
rclb
and
sbb
mov
add
adc
push
jno
cmp
sbb
in
or
das
adc
pop
and
push
or
arpl
sub
stc
mov
and
cs
js
and
jmp
repnz
xchg
jl
push
or
shlb
loope
and
cs
js
out
jecxz
pop
mov
das
icebp
push
mov
mov
pop
and
push
inc
inc
or
das
adc
pop
loop
push
or
vmovss
and
or
adc
call
inc
stc
pop
enter
xchg
and
adc
adc
push
push
filds
icebp
pop
enter
das
xchg
jl
dec
jg
adc
xchg
jg
or
js
fisttpl
and
pop
sti
push
push
sti
mov
adc
stc
mov
adc
icebp
pop
enter
das
xchg
jl
xchg
jo
test
dec
adc
stc
mov
or
mov
cmp
jmp
pop
mov
lea
mov
pop
and
pop
enter
das
xchg
jge
in
add
dec
loope
push
adc
icebp
pop
int3
ja
fucom
and
push
adc
cmp
movsb
pop
and
xchg
loope
je
les
jl
mov
pop
and
pop
enter
das
xchg
jge
in
repz
or
sahf
cld
or
fstl
aaa
xor
mov
mov
xchg
cmp
insl
and
movsb
and
pop
dec
xor
sub
pop
mov
inc
cmpsl
mov
dec
or
mov
insl
and
shll
adc
jmp
and
sub
jns
pusha
jge
pusha
in
or
addl
in
and
push
sub
shrl
icebp
mov
repnz
sub
insl
cmp
jl
fstl
aaa
jno
mov
and
dec
add
cmp
enter
das
sarl
mov
pop
andb
repnz
outsl
or
pop
loop
pop
call
xchg
jle
cld
pop
loop
pop
enter
or
push
mov
mov
mov
jmp
cwtl
jl
inc
and
pop
enter
add
out
mov
adc
je
mov
adc
push
cmp
mov
jl
push
mov
fimuls
sub
outsb
fwait
and
pop
and
call
enter
das
icebp
insl
adc
idivl
ja
stc
jecxz
or
stc
or
pop
mov
icebp
jl
cld
pop
mov
mov
or
outsl
inc
xchg
jl
in
and
adc
xor
or
fwait
cmp
outsl
push
xchg
mov
pop
enter
das
xchg
jo
popa
insl
stc
loop
outsl
fisubrs
and
insl
adc
loop
xchg
jl
in
and
push
push
fdivrp
aaa
or
fdivrp
aaa
or
inc
xchg
js
in
and
pop
enter
add
add
stc
sahf
adc
xchg
adc
sbb
fwait
idivb
mov
xchg
push
pop
dec
and
popa
outsb
and
xchg
js
in
int
mov
mov
mov
pop
and
jno
add
jno
mov
int
add
lea
adc
inc
push
jmp
adc
fists
and
shll
pop
enter
je
mov
pop
and
and
push
mov
push
pop
dec
add
mov
repz
adc
lahf
fldcw
fmull
xchg
dec
mov
test
pusha
adc
sti
cmp
mov
scas
sbb
dec
xor
lock
out
jno
adcl
or
mov
test
xchg
or
push
je
sbb
cmp
lret
in
test
daa
push
loopne
addl
pop
lock
jle
add
shl
push
push
and
mov
lahf
xchg
fdivrs
loop
jmp
mov
sub
adc
ss
xor
push
inc
or
stos
push
add
testl
pop
test
push
js
cld
push
jl
push
and
loop
mov
lret
stos
cwtl
jmp
ja
fidivl
std
hlt
test
adc
into
shr
adc
in
dec
or
xor
adc
mov
fwait
cwtl
icebp
sahf
xor
push
cltd
adc
out
xchg
inc
lock
jo
sub
xlat
jnp
cmc
cmp
imul
repz
adc
and
idivb
out
enter
jnp
push
adc
dec
test
mov
out
enter
jnp
xor
xor
in
sub
adc
enter
jnp
adc
adc
in
or
inc
add
add
ror
jns
cmpsl
adc
jns
adc
rorl
or
xchg
leave
adc
and
jg
xor
xor
adc
inc
or
divl
adc
ror
mov
in
jmp
repnz
cld
pop
or
add
or
mov
fwait
and
cmpsb
int3
pop
gs
sbb
pop
mov
sub
mov
outsb
adc
and
fucom
push
xor
adc
nop
pop
mov
xchg
pushf
loope
dec
push
in
pushf
out
sub
ret
push
jns
jnp
or
adcb
mov
or
adc
sbb
imul
dec
sub
dec
aam
sbb
sbb
sub
push
sbb
sbb
jne
xor
sub
movsl
nop
xor
lods
sub
movsb
scas
adc
xor
push
inc
push
rcrb
cmp
xchg
and
add
cmp
call
dec
test
dec
outsl
icebp
insl
xor
cmp
sbb
pop
lcall
push
adc
sub
mov
push
cmp
mov
or
jo
lea
mov
stos
adc
push
gs
rcrb
sub
and
or
out
adc
dec
das
and
and
repz
imul
sub
in
js
mov
xacquire
xor
pop
dec
mov
rsqrtps
loope
test
push
inc
fnsave
ljmp
lods
mov
inc
aad
js
aam
fs
xlat
imul
cld
xchg
jl
adc
sbb
adc
xor
cmp
xchg
push
sbb
push
cmp
xor
jns
xor
pop
xchg
push
push
and
dec
push
push
push
jo
or
sbb
leave
mov
adc
or
dec
inc
aam
imul
cmc
dec
inc
loop
or
pop
fisttps
sub
icebp
push
or
xor
mov
sbb
adc
cmpsb
and
cmp
dec
jmp
iret
nop
out
cmp
push
adc
pop
push
test
dec
in
sbb
pusha
dec
jno
loopne
insl
sbb
push
pushf
push
movsl
nop
xchg
adc
mov
mov
into
movsl
cltd
roll
or
jecxz
xor
insl
dec
sbb
stos
cmp
inc
xor
mov
test
sbb
aam
cmp
sub
fwait
pop
movsl
ja
or
xchg
jl
inc
nop
jns
data16
cmpsb
push
sub
inc
stos
mov
jl
cmpsb
je
adc
xchg
or
popa
imul
xor
inc
stc
ret
xchg
or
adc
sub
push
sbb
add
cltd
cmp
dec
xor
adc
adc
cmpsl
mov
inc
xchg
orb
cmp
aad
cmpsb
push
jmp
sahf
mov
or
or
add
adc
xchg
jmp
incl
jp
test
in
inc
pop
push
jmp
mov
pop
jp
cmc
mov
pop
jp
cmc
out
push
idivb
mulb
mov
imul
sub
jnp
movsb
mov
xchg
not
push
idivb
imul
cmp
jnp
movsb
stc
mov
imul
xchg
imulb
cltd
mov
gs
jnp
movsl
mov
sti
xchg
lret
add
test
or
hlt
and
lcall
adc
inc
or
mov
mov
js
test
push
pop
pop
clc
rorb
popa
sbb
xor
gs
xor
ficompl
lods
pop
jb
jle
add
sub
add
scas
test
movsb
mov
ja
xchg
xchg
shr
push
pushf
in
loopne
clc
add
lret
inc
or
xchg
add
lods
inc
fadds
dec
inc
or
popf
dec
push
push
lea
xlat
jbe
dec
push
cmp
ja
jo
mov
add
sub
lea
bound
xorb
sbb
or
jnp
jbe
aad
inc
jno
test
imul
mov
and
mov
jp
push
or
push
movsl
test
fwait
mov
fwait
sub
aad
leave
push
pop
cmc
scas
scas
sbb
and
test
or
jnp
or
mov
cmp
mov
imul
faddl
mov
cmpsl
pop
dec
mov
add
adc
leave
imul
sub
mov
mov
mov
pop
inc
inc
dec
mov
jne
sahf
cld
xlat
sbb
jae
je
xchg
jo
dec
aad
and
std
xchg
lret
pop
mov
add
movsb
mov
push
fnstsw
pop
adc
push
mov
call
cmp
les
jbe
mov
movsb
push
adc
test
in
sbb
push
call
pop
cmp
hlt
imul
imul
push
jno
sbb
bound
or
mov
or
pop
dec
cmp
nop
xchg
enter
push
mov
adc
xlat
xchg
mov
fiaddl
pushf
fstpt
mov
mov
pop
pop
fcomps
pop
ds
mov
sbb
sbb
loop
push
jecxz
adc
cmp
jb
cmp
je
add
pop
hlt
dec
mov
clc
push
push
or
jmp
push
sub
cltd
pop
push
jne
ss
mov
jne
jl
popa
je
push
xchg
jno
push
pop
pop
sbb
ds
sar
mov
insb
scas
pslld
jmp
jne
or
jmp
mov
sbb
or
stc
or
je
push
push
movsb
stc
xchg
jle
mov
cmovo
dec
dec
add
add
mov
aaa
cwtl
popf
test
into
pop
inc
lret
xchg
jg
pushf
in
mov
dec
shl
sti
sbb
sti
adcl
xchg
orl
sub
xchg
jo
into
and
sub
jae
pop
xor
inc
addr16
jle
dec
push
pop
push
shl
stos
rorl
or
in
xchg
sub
inc
add
and
sbb
mov
dec
cmp
sub
mov
lea
js
out
dec
imul
jg
add
pop
in
lahf
cmpsl
cmp
xchg
in
sub
ret
push
xchg
mov
mov
shrl
xor
adc
and
jo
dec
incb
jecxz
ljmp
mov
cli
push
dec
negl
mov
icebp
xchg
push
mov
cmp
adc
or
xchg
jnp
lret
add
cmp
dec
mov
pop
mov
cmp
jg
sti
int3
mov
pushw
jb
jo
adc
scas
jge
jle
outsb
mov
lret
mov
leave
outsb
xchg
xchg
pop
ret
lahf
jp
mov
xchg
mov
or
mov
push
call
int
xor
loop
jae
call
scas
repnz
fs
push
decl
test
push
imul
adc
sub
sbb
and
ljmp
push
or
or
xchg
dec
mov
imul
in
pop
lds
adcb
ds
mov
cmp
pop
add
inc
hlt
mov
add
ss
inc
cmp
fdivrp
lods
insl
inc
das
sbbb
mov
cmp
fdiv
jmp
mov
inc
shll
pop
dec
xchg
in
sub
mov
mov
xchg
rcrl
xor
cld
xchg
push
aad
push
push
adc
sub
loopne
push
adcb
mov
xor
mov
lods
mov
sbb
movsl
mov
das
add
int3
jl
daa
call
jmp
mov
xchg
es
nop
mov
cmp
sbb
sbb
stc
adc
call
mov
mov
pop
adc
mov
rcll
jbe
jmp
hlt
test
fdecstp
stos
xchg
pop
xlat
xchg
mov
or
imull
ret
or
ljmp
and
div
notl
test
push
xchg
dec
push
nop
shr
dec
mov
jecxz
pop
jecxz
push
lea
data16
jmp
sbb
xchg
dec
add
cmpsb
mulb
adc
ret
xor
adc
push
push
mov
leave
dec
fdivrl
adc
test
and
clc
mov
inc
mov
test
fs
mov
insl
js
imul
loopne
or
nop
loope
adc
out
enter
enter
dec
lods
imul
pop
testl
mov
mov
push
push
fadds
cltd
sub
and
adc
int3
call
jns
cli
cs
pop
dec
or
pop
jnp
mov
jmp
bound
ja
push
out
pop
push
mov
mov
add
cmc
mov
out
ljmp
jmp
int3
ja
sub
xchg
and
scas
mov
dec
cmpb
xchg
xor
xor
push
push
xor
stc
dec
jno
scas
jmp
call
cmp
dec
xor
add
lock
xor
push
popa
aas
add
adc
cld
and
daa
mov
jp
fistpl
pop
stos
adc
xor
sub
scas
or
or
nop
outsl
jne
das
dec
sbb
adc
rorb
lds
cs
das
pop
stc
add
sub
repnz
adc
pop
lods
xchg
in
push
bound
call
cmp
sti
lds
es
in
lcall
shrl
stc
mov
or
frstor
nop
in
rcll
jg
mov
lods
cli
inc
cvtps2pi
pop
cs
mov
sub
dec
jmp
repnz
cmp
sub
jl
dec
adc
lahf
xchg
shll
or
push
pop
hlt
aas
sarb
subl
loop
mov
cmp
loop
insl
adcb
rclb
stos
bound
in
pop
mov
sbb
mov
xchg
mov
setns
sar
pop
popf
pop
sub
ljmp
mov
pop
cmp
shlb
adc
inc
or
add
mov
push
push
ja
sub
push
pop
xchg
jl
lret
dec
jne
bound
and
fists
and
add
loopne
test
push
xchg
andb
add
xor
rolb
push
jmp
inc
in
and
or
pop
rcrb
sti
sbb
and
cmpsb
jns
jmp
sub
add
inc
fcoml
dec
mov
push
push
in
sbb
add
pop
fisubrl
sub
and
stos
sbb
mov
pop
repnz
xor
fs
movsb
aam
addl
add
dec
mov
mov
cli
incb
xor
scas
adc
and
jne
mov
push
aaa
push
lret
push
stos
xor
jp
mov
sti
ror
dec
std
nop
or
mov
adc
das
sub
jle
cld
dec
cs
sub
pop
das
push
pop
xor
or
mov
add
add
push
inc
jne
fld
stc
sbb
outsl
inc
inc
in
inc
pop
das
stos
and
test
ret
sbb
mov
in
push
arpl
jmp
int3
call
jmp
mov
push
sbb
rclb
mov
es
push
cs
ret
jg
imull
mov
adc
pop
das
sbb
fsubr
push
idivl
fisttpl
add
jecxz
dec
sti
mov
xchg
insb
mov
popf
jle
mov
and
divl
clc
and
test
adc
inc
gs
mov
ret
stos
call
fstps
xchg
or
cmpb
push
cmpsl
add
push
push
inc
mov
cltd
mov
cmp
je
out
call
fmull
add
imul
insb
inc
push
jo
lahf
jns
dec
fists
xchg
cld
mov
ljmp
jns
jo
je
lea
or
or
mov
dec
les
or
cmpsb
in
pop
je
dec
xchg
adc
sub
cld
mov
fs
jmp
mov
jmp
into
or
js
mov
daa
push
out
xchg
enter
shlb
int3
cli
shrb
xor
in
jge
mov
pop
enter
sbbl
shl
insl
inc
inc
cmpsl
cmp
out
mov
and
nop
fdivrs
out
push
jmp
fnstenv
mov
fsubl
cmp
and
lods
pop
pop
jb
xlat
jno
add
add
cmp
inc
maskmovq
testl
insb
dec
movsb
mov
dec
pop
cmp
lcall
sbb
push
inc
mov
call
out
adc
mov
mov
add
rcrl
adc
sub
mov
mov
out
nop
test
lahf
pop
push
or
fsubrs
sub
jne
push
adc
sbb
mov
sub
inc
ljmp
xchg
jns
or
nop
enter
dec
or
inc
jne
cmp
xchg
add
push
dec
push
jmp
ja
mov
sbb
out
mov
les
push
xchg
bound
push
pop
xor
je
and
pusha
dec
sub
xchg
fiadds
inc
jl
xchg
adc
out
push
sbb
dec
xchg
pop
sbb
xor
dec
lcall
lret
je
push
xchg
in
xchg
adc
mov
outsb
hlt
jae
push
fisubrs
fisubs
rorb
rcrb
movl
dec
adc
add
enter
loop
xor
mov
dec
and
pop
cltd
fistl
iret
adc
pop
sbb
rcrb
xchg
enter
in
std
mov
mov
inc
push
sbb
mov
mov
lock
in
adc
xlat
sbb
ja
jns
shlb
or
push
xor
jne
xchg
adc
push
lock
jns
xlat
dec
inc
and
mov
dec
rcll
mov
push
and
adc
mov
cmp
repnz
inc
mov
pop
and
push
pushf
add
nop
dec
inc
andl
out
loopne
jmp
mov
adc
pop
adc
dec
xor
pop
negb
rclb
sti
cmp
test
lock
mov
ficoml
push
or
pop
adc
adc
add
add
mov
jno
cli
sub
mov
lcall
inc
add
arpl
inc
cmpsb
fsub
mov
xlat
es
outsb
mov
mov
push
pop
and
arpl
call
xchg
orb
push
mov
or
push
mov
push
adc
mov
lcall
cmp
dec
cmp
int
das
mov
push
xor
jl
fnsave
and
call
jne
or
or
sbb
xor
test
test
xchg
mov
cmp
xchg
mov
int3
call
je
jmp
int
adc
xlat
pop
lock
push
call
jbe
bound
es
stos
mov
les
xor
sti
add
and
xlat
lds
test
movsb
dec
clc
push
push
and
loop
push
mov
pop
adc
je
mov
pop
push
les
call
stos
mov
jmp
xchg
adc
and
adc
mov
inc
cmpsl
js
mov
and
inc
les
cmp
das
ss
push
daa
and
stos
mov
cmp
xor
inc
adc
sub
jmp
xor
pushf
xchg
ja
xor
notb
lock
decb
lahf
push
xor
fwait
daa
loope
dec
das
out
sbb
and
push
or
mov
fs
adc
and
sub
xchg
push
xchg
test
repnz
push
and
test
cmp
repnz
sub
loopne
adc
pop
inc
or
in
add
stc
push
into
sbb
sub
arpl
cmp
and
out
xchg
les
or
fadds
adc
fnstenv
shr
outsl
pop
and
push
sub
xchg
or
sub
leave
insl
or
adc
cmp
inc
pop
cld
lahf
fmuls
or
loope
add
pop
aam
sbb
push
jecxz
call
push
in
and
xchg
xlat
xchg
hlt
stos
and
or
pop
mov
inc
enter
mov
les
mov
jns
lds
int
push
fbld
cmpsl
shrb
sub
dec
sbb
stc
push
aas
imull
mov
jg
enter
add
and
inc
mov
pop
leave
dec
je
je
inc
popa
arpl
aas
call
mov
sti
jno
ret
push
mov
xor
mov
cmc
cld
pop
inc
xor
push
mul
and
popa
cmpb
cmpsl
mov
lds
adc
fcom
mov
ret
sub
sbb
in
add
cmp
out
int
gs
sti
cmp
dec
mov
outsb
or
or
sbb
pop
loopne
mov
enter
outsb
sbb
xor
push
int3
stos
pop
jno
mov
neg
pop
sbb
inc
inc
dec
je
leave
fnstsw
dec
adc
xor
into
pop
xchg
and
jmp
movsl
xchg
ror
pop
jbe
pop
addb
sarb
outsb
cmp
jo
dec
popf
ret
fsts
mov
push
cwtl
jo
mov
jo
addb
arpl
cmp
and
add
add
xchg
inc
ret
add
rorl
daa
scas
gs
jge
mov
ljmp
and
rcrl
and
or
adc
and
sbb
dec
cmp
push
mov
adc
pop
inc
add
push
dec
mov
inc
je
jmp
lret
mov
imul
sbbl
dec
jle
hlt
lret
aam
mov
pop
jge
hlt
fldcw
or
inc
ss
in
adc
sbb
mov
shll
cmp
dec
mov
xor
mov
xchg
cli
js
add
sub
ja
js
jecxz
sbb
or
dec
adc
test
sti
cwtl
mov
jmp
and
and
adc
inc
or
js
stos
mov
cmp
push
inc
xlat
ret
fidivrl
push
and
xchg
lea
jge
mov
and
mov
inc
mov
sub
add
inc
jo
mov
addr16
pop
loopne
or
cmp
out
aad
sahf
cwtl
dec
adc
pop
flds
pop
or
sbb
or
ljmp
mov
scas
mov
sub
ret
enter
mov
and
cmp
xchg
xchg
decb
hlt
adcl
lock
mov
out
or
xor
lea
pop
mov
clc
jp
or
aaa
mov
ds
sub
xchg
cltd
jne
or
mov
fstl
push
in
adc
aaa
add
xlat
fsubrs
stc
and
sbb
out
sbb
sbb
mov
aaa
ds
clc
hlt
adc
movsb
mov
pop
pop
ret
or
clc
stos
into
sbbb
mov
and
adc
js
call
imul
sub
and
popf
shr
fwait
inc
mov
xor
xor
jb
and
jne
mov
cmp
jnp
or
int3
push
adc
mov
add
add
imul
adc
inc
adc
jbe
pop
xchg
jb
lahf
sub
jp
ret
adc
loop
adc
je
cmp
xchg
mov
push
fsubrs
xchg
jmp
jl
daa
inc
ja
sahf
imul
out
scas
test
aam
cmpsb
add
pop
insl
cmp
fwait
xor
push
lcall
inc
out
push
adcb
adc
fistl
lock
mov
out
pop
xorb
je
rcll
or
pop
push
lahf
pop
cmp
adc
enter
lea
mov
and
xchg
lea
jno
nop
in
dec
aas
pop
aas
add
pushl
adc
push
or
stos
inc
daa
push
fnstenv
and
daa
fwait
test
orb
call
arpl
or
xlat
lcall
push
push
es
jge
jl
mov
and
dec
loop
sbb
fdivl
dec
and
test
enter
test
jo
or
add
adcb
or
ds
push
fadds
cmp
push
jbe
sbb
add
andb
push
sub
aas
adc
enter
dec
cmp
out
out
and
sub
jns
xor
jp
xchg
dec
and
jmp
xor
xor
push
rcll
scas
jne
out
int
cmpsb
and
sbb
push
mov
sub
es
inc
jo
movsl
sbb
cmp
or
and
ja
xor
adc
cltd
jl
dec
cwtl
fldcw
cmp
jmp
push
mov
lcall
pop
inc
test
cld
es
adc
push
and
adc
or
xor
insl
fwait
das
push
pop
rcll
mov
mov
cld
mov
cmp
push
inc
aaa
or
mov
add
inc
je
mov
lahf
clc
fadd
dec
mov
mov
std
push
in
aaa
mov
adc
jmp
in
sbb
add
scas
or
pop
cmp
stos
jns
xor
jp
jns
clc
imul
dec
mov
push
call
cmp
out
es
jl
test
adc
jmp
xchg
cmp
push
je
jmp
xchg
lock
popf
mov
cmp
or
sub
ja
inc
ja
adc
mov
lods
mov
adc
cmp
pop
enter
and
dec
lods
inc
adc
test
dec
mov
adc
lcall
sub
scas
fidivs
les
imul
stos
add
das
pop
jl
dec
std
fisttps
adc
orb
leave
ss
sub
jno
aad
add
sub
lea
xchg
call
fsub
js
cmp
xor
mov
jb
adc
cld
add
cmp
push
fcom
popa
movsb
bound
xor
popf
enter
mov
push
pop
stc
cmp
cmc
cmpsb
pop
hlt
ss
loopne
ds
lea
pop
and
pop
clc
jl
lahf
mov
or
xor
add
lret
addl
jae
inc
shr
fimull
xchg
cwtl
insl
dec
sub
stos
decl
xor
mov
outsb
mov
dec
aam
pop
pushl
sub
loopne
cmp
int
faddl
adc
jb
sbb
jmp
pusha
arpl
mov
jbe
push
imul
xchg
push
aam
xlat
test
out
lea
jecxz
icebp
adc
add
call
adc
scas
popf
vmaxpd
leave
cmp
loopne
mov
repz
mov
mov
ds
xchg
cmpl
and
jge
xchg
mov
pop
xchg
imul
and
sbb
pop
or
in
test
mov
call
adc
addr16
pusha
jmp
push
jno
mov
sbb
inc
mov
mov
adc
push
gs
testl
mov
ja
cmpsb
fs
xor
and
add
je
dec
pop
push
add
pop
mov
sbb
outsb
mov
sub
scas
ficomps
sub
loopne
fmuls
push
xor
push
add
popf
cmp
xchg
sbb
movl
enter
inc
repnz
mov
dec
js
data16
mov
inc
sub
xchg
add
dec
aam
xor
addb
xor
enter
lret
mov
in
jno
enter
lahf
scas
adc
mov
dec
enter
mov
or
dec
in
mov
inc
adc
adcl
dec
out
adc
xor
adcb
mov
mov
xchg
sbb
clc
dec
enter
xchg
push
sbb
dec
stos
adc
and
and
and
addl
dec
ret
rclb
push
adc
das
inc
movb
push
std
and
mov
jg
push
add
or
nop
jb
add
bound
push
nop
jne
adc
loope
add
mov
mov
inc
mov
push
paddb
add
inc
pop
rorl
mov
push
push
xor
xchg
or
and
sbb
push
push
push
sub
test
push
sub
adc
mov
jo
dec
and
dec
jmp
lcall
lahf
push
mov
dec
push
sbb
xchg
xor
inc
and
stc
loop
push
xchg
out
cli
push
xor
xor
push
idivl
xchg
xor
je
pushw
cmc
cmp
shlb
shlb
testl
shrb
cmp
inc
ds
test
stos
sbb
das
test
add
mov
dec
aam
ds
insl
adcl
pop
out
push
cmp
xchg
call
jo
loope
testl
ds
test
push
mov
mov
rcrl
pop
add
gs
adc
fisubl
cmp
fimull
push
test
aam
xchg
nop
mov
xchg
xor
test
jmp
js
dec
cs
movsl
add
mov
jae
lods
dec
mov
ds
inc
dec
mov
cli
xchg
push
push
mov
mov
je
or
mov
nop
adc
add
xchg
lret
add
and
jl
push
lahf
dec
pusha
inc
inc
call
out
adc
sub
inc
adc
mov
mov
cmp
inc
push
sub
iret
hlt
xor
hlt
aam
fwait
mov
stos
mov
test
pop
scas
daa
xorl
pop
mov
adc
xorl
repz
shr
fisttps
scas
mov
stos
popf
mov
dec
loopne
mov
in
loop
lods
dec
mov
jae
xor
pop
addr16
dec
ja
jae
nop
inc
push
loop
daa
jae
scas
lret
ds
addr16
mov
sbb
sub
and
sub
push
jecxz
xorl
push
sub
cs
aad
in
test
sub
faddl
test
or
lret
or
movsb
mov
mov
inc
movsl
or
adc
or
sub
mov
lret
dec
mov
cltd
loopne
dec
or
in
push
and
dec
mov
inc
xchg
inc
inc
or
push
cmp
xchg
adc
inc
xchg
dec
pusha
xor
inc
xchg
outsl
xchg
or
dec
jo
push
std
dec
test
test
ret
adc
lahf
pop
xchg
ljmp
movsb
cli
mov
jno
lcall
mov
cmp
jmp
push
js
mov
xchg
dec
push
mov
imul
pop
xor
adc
push
or
jo
xchg
adc
mov
xchg
enter
dec
push
aam
stos
adc
stos
xchg
loop
sbb
add
lea
or
jbe
lock
cmp
jecxz
lea
jle
ja
and
jne
mov
fisttps
sahf
xchg
mov
sbb
jle
jmp
jge
dec
insb
or
and
mov
aas
cld
and
adc
fcomip
das
mov
lcall
xor
xchg
push
and
push
mov
xacquire
stos
cmpsl
pop
or
cmp
jmp
add
xor
or
ss
inc
sub
or
ja
jnp
sub
ficompl
cmp
fwait
push
dec
cmp
pusha
cld
sbb
or
push
dec
loopne
es
movsb
fs
pop
pop
dec
aam
xor
dec
mov
test
inc
jp
outsb
andl
les
mov
push
push
ds
lea
jge
incl
jbe
inc
jne
sbb
xor
orb
or
xchg
fcoml
push
sbb
fwait
enter
push
rclb
cltd
cmc
fmul
push
aam
lods
dec
cmc
sbb
in
shll
add
add
pop
out
mov
xorl
pop
dec
push
mov
jo
shl
stos
loope
test
or
adc
or
add
xor
test
das
pop
cmp
xchg
xor
and
dec
out
xor
add
bound
mov
and
pop
and
lds
in
lds
jns
xor
push
push
repz
daa
aad
aad
push
jae
test
clc
int3
jo
test
call
pop
inc
adc
aaa
stos
or
dec
push
inc
dec
or
fucomp
mov
jg
adc
adc
mov
add
int
cmp
sbb
hlt
lea
and
cld
test
loope
fildl
add
gs
dec
data16
mov
sub
dec
mov
loopne
sbb
je
sbb
xchg
loopne
lock
push
pop
jmp
and
adc
pop
adcl
xor
xchg
movsb
dec
and
mov
out
inc
dec
add
je
jae
add
push
sub
and
rcrl
push
mov
cmp
cmp
imul
mov
sub
push
sbb
mov
mov
or
inc
daa
jo
std
dec
sbb
outsb
in
pop
adc
and
mov
repnz
or
pop
in
and
adc
push
mov
sbb
testb
jae
clc
insb
mov
repnz
and
sbb
inc
jmp
jae,pt
mov
lods
test
add
or
loopne
aam
call
clc
subb
cmpsl
push
je
push
jmp
lods
loopne
mov
aam
push
or
fistps
ret
jne
aaa
call
dec
int3
and
push
pop
notb
es
mov
daa
mov
jge
mov
mov
bound
inc
xchg
push
push
call
and
ja
mov
push
mov
sbbb
inc
add
dec
adc
mov
add
aas
push
pop
es
lea
test
dec
jmp
sahf
cmpsl
xlat
or
into
arpl
mov
iret
ss
mov
mov
push
add
repz
mov
ja
rclb
movsl
and
mov
cmc
insb
iret
ret
xor
rcrb
test
adc
sub
xor
xor
adc
push
cmp
enter
add
sbb
fistl
rcll
or
or
loope
fiadds
outsl
sub
xor
aad
dec
mov
in
mov
es
fimuls
adc
mov
add
int3
xchg
mov
mov
lock
loopne
lcall
mov
daa
pop
in
lds
add
setne
push
or
cld
sbb
ret
xchg
xor
iret
jbe
push
je
xor
fcompl
cmp
arpl
sub
gs
cmpsb
mov
fcomp
jmp
out
mov
or
cli
push
adc
pop
sbb
sbb
mov
add
push
push
add
les
xor
and
repz
inc
sar
jge
jns
stc
and
mov
adc
pop
daa
movsl
andl
mov
orb
inc
mov
dec
mov
in
bound
pushf
test
jbe
add
subl
cmp
add
not
out
std
std
pop
es
fcoml
jnp
add
in
lea
fsubs
psubusb
add
mulb
jne
rolb
inc
or
call
loop
scas
push
mov
add
pop
cmpb
add
and
call
cmp
jo
mov
pop
jle
adc
push
pop
hlt
sub
sbb
sbb
sub
lcall
xor
in
and
push
jbe
mov
add
jbe
in
mov
xchg
enter
inc
cmpsb
and
adc
cmpl
loopne
in
shl
ljmp
jb
xchg
jo
movsl
scas
push
inc
cltd
jmp
cmp
je
xchg
jle
mov
push
pushf
inc
xor
das
sbb
jge
repz
sbb
push
mov
stos
mov
jne
xor
cs
movsb
pop
test
and
and
sub
or
js
or
push
sub
daa
push
or
sub
pop
imul
icebp
testb
faddl
cmp
insb
pushf
xchg
push
pushf
cmpsl
ja
dec
xchg
inc
dec
push
out
leave
mov
leave
daa
jmp
pop
adc
mov
ja
sub
gs
mov
or
hlt
cmc
sahf
adc
push
dec
adc
adc
fldcw
cmp
scas
push
lock
sub
jl
adc
aaa
popa
arpl
adc
mov
mov
mov
iret
push
ds
adc
orb
dec
lds
xor
jecxz
rolb
push
xor
rcrb
xchg
push
cmp
je
inc
test
xchg
adc
lahf
in
cmp
sub
jo
xchg
mov
sub
dec
imul
cmp
orl
iret
lea
or
in
push
clc
loope
int
outsl
mov
and
pop
add
lcall
cmc
push
jle
mov
jl
das
rcl
pop
cmp
jg
inc
or
adc
push
or
jne
das
push
je
mov
das
jbe
popf
pop
cmp
sbb
mov
dec
stos
mov
xor
scas
sbb
push
call
jmp
dec
xlat
jmp
and
jmp
mov
dec
pop
iret
stos
push
ja
push
jbe
jmp
mov
pop
push
mov
adc
movsb
sub
sbb
pop
adc
adc
lods
lods
mov
loope
and
es
mov
mov
sbb
pop
fs
cltd
daa
mov
xor
jmp
xchg
dec
mov
loope
add
xlat
or
adc
es
test
arpl
jno
aaa
push
push
mov
mov
call
in
sbb
dec
inc
mov
jmp
and
nop
add
movsb
adc
gs
jmp
xchg
adcb
ja
nop
push
lods
push
repnz
addr16
lea
push
sbb
popa
sti
aaa
mov
je
mov
sarl
lds
adc
and
mov
int3
xor
sbb
idiv
inc
jl
xor
in
test
and
inc
adc
push
add
rorl
and
dec
lods
jg
inc
aad
xchg
popf
inc
push
repz
and
inc
push
sub
roll
shlb
je
adc
inc
movb
test
and
out
loop
push
xor
hlt
movsl
or
mov
jnp
mov
int3
loope
jae
sub
adc
and
mov
dec
inc
or
insb
notb
sbb
inc
push
inc
leave
and
addr16
test
das
shrb
jle
negb
faddl
xor
ljmp
rcrl
adc
or
movsb
adc
mov
inc
pop
adc
push
adc
lods
stos
dec
push
adcl
dec
dec
jb
mov
lea
mov
clc
add
push
flds
push
mov
stc
xor
and
cmp
xchg
sbbb
sub
mov
imul
lea
pop
fstpt
out
jge
dec
xchg
xlat
sbb
pop
mov
cmp
mov
sbb
sbb
inc
jecxz
or
pushf
mov
jecxz
push
int3
in
push
sbb
xchg
push
cmpsb
and
imull
dec
push
les
sahf
enter
xchg
xlat
ljmp
xor
scas
sbb
pusha
xchg
pop
push
mov
adc
rclb
xchg
xchg
movsl
pop
dec
xor
hlt
aam
test
dec
int
lret
sbb
push
scas
call
and
mov
fists
or
add
push
add
sbbb
mov
fdivrl
jge
push
jl
sub
mov
mov
sahf
out
imul
add
mov
imul
es
cwtl
sub
pop
es
add
jbe
adc
push
push
cmc
pop
fxch
cmp
mov
lods
push
inc
fistps
test
std
fcompl
adc
es
lea
in
imul
push
dec
sub
popf
aam
lods
push
jg
dec
pop
repz
cmp
out
fisubl
push
popa
ss
mov
pop
adc
add
add
cmp
jp
ja
add
cmp
decb
jb
int
adc
movsb
inc
lods
and
sbb
xchg
les
ret
faddl
pop
sbb
and
push
xor
sub
inc
push
out
sti
test
adc
aam
adc
decb
push
pop
and
and
inc
mulb
inc
jae
dec
sub
jmp
scas
loop
xor
push
and
push
cwtl
test
xor
incb
loop
and
mov
fidivrs
push
xor
call
mov
jnp
mov
cmp
and
andnps
and
enter
in
mov
sbb
add
popf
rclb
nop
or
enter
push
ret
xchg
pop
ret
les
mov
xchg
andb
imul
testl
push
push
mov
imul
rcrb
enter
cmpb
fs
jno
mov
xor
lock
jl
adc
mov
adc
cmp
cmp
adc
jg
mov
sub
pop
fisttps
xchg
dec
mov
push
add
mov
inc
arpl
sbb
data16
dec
sub
test
dec
inc
imul
push
pop
lret
subl
inc
sbb
test
clc
xchg
jg
inc
dec
adc
mov
xchg
call
mov
xchg
movsl
outsl
xchg
inc
mov
or
xchg
ret
andl
out
push
movsb
lahf
jnp
xor
adc
push
in
repz
cmpl
and
cwtl
xchg
and
dec
lea
loopne
mov
stc
popf
push
dec
and
xchg
repnz
adc
cli
pop
inc
pop
sub
inc
xchg
je
or
push
addr16
or
loope
or
push
and
cmpsb
cmp
dec
push
les
and
adc
xor
pop
and
rorb
push
nop
inc
test
pop
dec
fdivl
aas
sbb
mov
and
push
in
inc
ds
clc
ja
aam
or
stc
fwait
adc
pushf
dec
push
dec
add
scas
sbb
or
push
mov
mov
rcrb
adc
push
dec
sbb
jmp
leave
xorb
and
lea
push
sub
clc
stos
out
fbld
push
adc
xor
fadds
xor
sub
ds
les
leave
pushf
out
xchg
push
jmp
jb
push
pop
fwait
loopne
sbb
or
mov
add
ret
stos
lea
pop
push
mov
xchg
test
push
test
xor
sbb
dec
inc
mov
lods
call
inc
jb
test
mov
pop
dec
push
mov
rorl
mov
inc
cmpl
and
mov
xchg
pop
push
or
fdivl
dec
jp
dec
and
lods
popa
jmp
call
inc
cmp
scas
xor
mov
scas
mov
insb
sar
gs
sarl
cmp
cmpl
xchg
or
xor
dec
jmp
sub
or
sbb
xchg
mov
or
add
add
stos
repz
or
xor
jmp
push
outsl
mov
je
lock
adc
inc
cmovle
fists
mov
test
icebp
push
xor
lock
mov
sbb
mov
xchg
repz
dec
mull
call
inc
or
adc
movsl
mov
mov
notb
pop
icebp
mov
mov
and
adc
cmc
adc
jae
jecxz
ja
call
mov
push
insb
xor
push
mov
push
xor
push
push
int3
cmp
xchg
mov
xor
sbb
adc
in
pop
out
dec
push
pushl
mov
sub
or
sbb
pop
adcb
add
pop
mov
das
mov
mov
add
jb
dec
mov
mov
ljmp
outsl
jg
sub
mov
mov
pop
push
or
sub
scas
mov
icebp
dec
fsubrs
xor
xchg
add
sbb
inc
jmp
mov
inc
xor
jo
mov
mov
jmp
lods
cs
aaa
mov
xor
cs
or
shrl
mov
pop
jns
subl
pop
dec
push
adc
rclb
pop
inc
add
pop
adc
out
fs
lds
add
je
mov
mov
shl
push
enter
int
inc
mov
stos
sahf
cwtl
loope
dec
and
push
push
pop
sbb
mov
add
cmpb
adc
jmp
and
loope
aam
aam
inc
and
or
cmp
or
jmp
push
jle
jbe
stc
sbb
insb
loop
cmp
je
lcall
popa
or
sub
stos
stos
and
popa
mov
lcall
je,pn
scas
xor
ljmp
cmp
fxch
jg
bound
pop
adc
xor
and
scas
push
mov
movsl
push
dec
mov
inc
out
shrl
aas
lcall
popf
mov
je
pop
push
jnp
cltd
ja
adc
mov
and
sbbl
and
sub
ja
jbe
mov
stos
or
push
xor
inc
adc
xchg
jne
or
jmp
add
bound
stc
inc
xlat
mov
stos
and
sbb
mov
dec
or
mov
cld
sbb
jae
push
xchg
lds
and
scas
repnz
hlt
cli
mov
push
popf
pop
mov
aad
adc
jmp
jne
add
and
mov
xor
xchg
pop
iret
sub
test
js
push
add
outsl
ficoms
ljmp
dec
dec
imull
and
sub
rcrl
sbb
and
cmc
cmpsb
push
repnz
push
fs
int3
dec
test
leave
push
pop
mov
adc
mov
call
cld
pop
jnp
into
push
sti
push
sbb
inc
aam
or
mov
cmp
jge
imul
push
or
push
xor
loop
insl
es
sub
xchg
sbb
sbb
jo
xor
jne
push
cmovl
push
push
call
sbb
or
sbb
push
sbb
xchg
je
jns
dec
adc
jno
lea
push
add
push
aad
mov
fisttpl
insl
sub
mov
cmpsl
mov
cmpsl
stos
pop
data16
pop
mov
cmp
mov
inc
xor
xor
nop
push
mov
sbb
pop
sbb
and
fists
stos
pop
sbb
adc
push
sarb
jmp
xor
mov
push
adc
hlt
and
sbb
sbb
je
sbb
inc
cmp
jb
aad
hlt
fmuls
subb
xchg
hlt
mov
testl
pop
sbb
lds
sbb
outsl
mov
enter
stos
addr16
mov
sbbl
pop
xchg
sbb
orb
dec
pop
loopne
jne
sbb
mov
adc
mov
cmp
in
les
xlat
dec
ljmp
adc
testl
xchg
add
ret
mov
and
daa
cltd
es
imul
scas
inc
dec
push
push
sbb
fwait
mov
sub
in
push
cmp
sub
inc
sbb
mov
stos
setns
xchg
cmpsb
cmp
jmp
pushw
push
mov
mov
or
add
and
mov
sub
bound
movsl
test
jmp
mov
test
dec
and
xchg
shr
jo
movsb
and
sbb
xchg
adc
pop
xor
add
jecxz
pop
and
or
or
ds
jmp
rorb
jmp
sbbl
call
nop
test
leave
aad
pop
add
pop
testb
pop
movsl
xlat
xor
addr16
jl
push
inc
cld
mov
sbb
sub
mov
or
mov
pop
pop
stc
lahf
or
mov
test
or
outsl
je
popa
iret
mov
inc
sbb
dec
push
addl
dec
inc
js
fisubs
jae
dec
notl
das
dec
inc
inc
inc
adcl
xor
and
movsl
shll
test
leave
adc
jmp
fisttpll
mov
notl
stos
adc
adc
ret
mov
mov
pop
jbe
leave
xlat
xchg
and
loop
xchg
mov
xchg
negl
cmp
fisttpl
leave
cltd
inc
sbb
sbb
or
xorb
add
hlt
mov
inc
stc
push
movsb
inc
push
jmp
push
jmp
push
push
cmp
call
push
cmpsb
and
daa
sbb
and
push
test
test
pop
ffree
or
xor
pusha
sqrtps
call
push
jmp
sti
cmp
test
imul
xchg
sbb
int
sbb
pop
test
cmp
dec
adc
cmp
push
pop
lods
and
jne
jmp
and
push
push
push
push
fs
or
mov
mov
or
subl
stos
jl
sub
scas
test
cwtl
cmpl
popl
in
ret
mov
add
and
mov
push
xor
test
mov
dec
inc
out
xchg
ret
test
mov
dec
mov
inc
inc
jae
ret
aaa
add
stos
push
dec
lds
or
inc
fisttpl
push
push
shrb
pop
and
idiv
repz
xorl
push
dec
mov
push
sbb
cs
test
mov
fimuls
das
add
lock
dec
test
daa
in
xor
jmp
pusha
outsb
push
mov
jp
arpl
inc
add
imul
pop
xchg
pop
lret
mov
xchg
fcoms
sub
gs
stos
flds
adc
cmpl
jge
xlat
pop
pop
fwait
pop
mov
xchg
mov
sub
lea
jnp
scas
pop
addr16
adc
push
mov
jb
cld
add
mov
popa
cld
cmp
jb
rorl
jmp
pushf
xor
ret
bound
pop
pop
lcall
jl
pop
sub
es
mov
xchg
jle
mov
add
cmp
jbe
out
mov
inc
clc
fstl
lods
cmpl
sub
test
popl
xchg
hlt
popa
fnstcw
iret
pop
test
mov
in
mov
loope
cmpl
jnp
inc
hlt
fs
decb
inc
mov
mov
or
outsl
adc
sarl
jne
push
pop
cmp
jg
mov
loopne
fildl
jl
lea
inc
daa
cmp
fsubl
add
adc
inc
repnz
cmp
cs
int3
ret
adc
fs
or
or
jge
pop
std
call
andl
mov
xchg
test
add
mov
pop
xchg
addr16
outsb
jg
and
aas
pop
sub
rclb
inc
stc
je
and
bound
popf
es
out
lahf
in
or
inc
add
inc
test
and
imul
repz
dec
jmp
pop
adc
fnstcw
inc
jno
adc
orl
or
mov
sbb
cmpsl
mov
loopne
inc
popf
cld
push
push
push
rcrb
nopl
dec
xchg
rclb
cld
dec
mov
mov
das
push
cld
mov
clc
sbb
out
je
les
in
repz
out
sbbl
xor
pushf
pop
cmpsl
shlb
and
and
outsb
insl
sbb
outsl
sub
clc
xchg
loope
push
adc
test
inc
or
mov
sti
ds
dec
mov
mov
out
and
arpl
sahf
fimuls
mov
xor
push
xlat
and
add
or
lcall
movsl
dec
mov
inc
push
xor
ret
lret
aam
bound
shl
and
cmc
cld
inc
mov
jecxz
inc
sbb
or
adcl
push
xor
xor
push
pop
stos
pusha
adc
dec
push
fbstp
fwait
push
mov
nop
push
pop
mov
fnstenv
or
repz
pop
out
jb
or
dec
dec
xchg
xor
xor
imul
push
ds
adc
pop
cmpsl
aad
mov
int
jae
xchg
pop
jns
scas
popa
mov
push
adc
loopne
and
pushw
cli
jb
or
cltd
dec
hlt
scas
dec
mov
je
cmpsb
sbb
add
sbbb
push
xchg
cmpsb
popf
cmp
push
call
stos
push
dec
lock
xor
pop
cltd
and
or
js
subb
xor
adc
test
pop
cmp
lods
jg
pop
mov
mov
ds
loope
adcb
add
mov
push
mov
or
push
in
and
dec
xchg
es
test
add
xchg
mov
push
lea
push
push
jb
nop
imul
mov
and
push
push
call
clc
dec
xchg
dec
inc
inc
popa
outsl
cmp
sub
es
jbe
pop
repz
mov
lret
cld
xlat
sub
pop
testl
orb
les
or
negb
cmc
inc
xchg
cltd
shr
jne
inc
sub
inc
arpl
and
jg
out
mov
push
ds
jbe
jmp
dec
sub
data16
pop
push
dec
das
cmc
mov
adc
mov
push
movzwl
movsl
je
mov
rcll
jb
or
ficomps
adc
pop
int
jb
aaa
sbb
jmp
inc
jo
inc
push
sbb
mov
shr
sub
mov
fs
and
das
loope
inc
lods
pop
mov
leave
xchg
cld
ljmp
dec
in
or
test
or
into
adc
jae
lock
cli
jae
daa
out
push
rorb
imul
in
pop
decl
repz
addr16
lea
mov
call
adc
xchg
and
xchg
outsb
cmp
mov
call
repnz
adc
pop
push
imul
mov
or
xor
movsl
mov
cwtl
popf
push
stos
adc
dec
mov
nop
sub
addr16
movsl
sbb
or
push
pop
call
cltd
jne
inc
mov
out
bound
pop
ja
ss
push
movsb
shlb
nop
nop
sub
mov
call
in
inc
add
or
or
jmp
jecxz
push
es
test
decl
fnsave
lahf
pop
pop
adc
xchg
push
mov
jg
lds
sub
cli
push
testl
dec
jo
lret
or
adc
ljmp
inc
insb
mov
xor
and
and
add
inc
cmp
addl
adc
dec
adc
pop
sbb
or
xor
sbb
xchg
mov
adc
ja
push
add
lea
sbb
rcr
stc
fcoms
je
mov
sub
inc
imul
loopne
ss
dec
push
or
mov
mov
mov
popa
xor
aas
add
push
rcrl
push
pusha
ret
inc
insb
test
and
xor
inc
hlt
mov
ljmp
gs
out
mov
jl
and
xor
mov
in
lods
mov
sub
sbb
mov
jns
andw
or
inc
jp
or
inc
dec
inc
fdivrl
in
fwait
movsb
and
out
rcl
cmp
xor
jo
sbb
insl
movsl
add
pop
fidivrs
push
xchg
mov
mov
cmpl
shll
cmp
adc
popa
sarl
cmp
cmp
je
push
mov
loopne
lods
jno
push
or
hlt
push
pop
sar
and
push
pop
hlt
dec
jg
mov
push
and
inc
dec
add
and
push
add
ljmp
das
mov
adc
add
sbb
cmp
inc
push
mov
and
je
push
or
dec
mov
dec
fnsave
sbb
in
aas
sub
ljmp
xchg
sub
nop
jnp
out
mov
xlat
popf
enter
mov
mov
fcompl
subl
testb
jno
xor
insl
pop
movsl
jl
mov
fsubs
outsb
add
push
aaa
loope
sub
cmpsb
mov
mov
push
sbbb
pop
xchg
icebp
nop
shlb
adc
inc
flds
aad
sbb
and
add
movsb
nop
push
mov
nop
fs
sub
xchg
dec
rclb
mov
push
add
dec
mov
movsl
cld
cmpb
adc
sbb
js
push
sbb
jg
fcmove
enter
jl
inc
dec
xor
icebp
jl
data16
inc
sbb
pop
sar
addb
int
adcb
jne
imul
stos
dec
sbb
push
adc
mov
stc
add
pop
xchg
in
xchg
mov
fidivs
dec
adc
inc
imul
imul
ret
out
cmp
add
dec
outsb
sbb
lods
in
fdivs
xchg
dec
jge
mov
int3
sbb
xchg
lods
push
inc
sbb
push
clc
push
mov
inc
push
mov
sbb
hlt
push
sub
fmulp
repz
loop
ja
inc
call
or
in
cmpsl
push
ja
sbb
adc
add
in
xchg
lcall
ffreep
mov
mov
je
pop
mov
jbe
test
add
roll
xlat
jge
xlat
jmp
fildll
mov
outsl
jnp
lds
rcll
out
imul
aam
lock
fsts
xchg
sub
mov
adc
push
sbb
sti
and
inc
ds
pop
pop
mov
cli
ficomps
jno
pushf
imul
fildll
jne
cmpsl
xor
call
mov
pop
jns
mov
mov
adc
pop
fisubrs
sbb
dec
nop
stos
mov
dec
int3
inc
je
mov
pop
xor
outsb
push
dec
pushf
movsl
loope
cmc
cmpb
jg
dec
pop
push
in
mov
inc
test
mov
cmp
mov
stc
add
push
or
cli
lods
lods
jp
ja
sbb
sub
outsl
or
test
fs
adc
imul
mov
cli
pop
insb
je
stc
ss
loope
ds
arpl
inc
int3
addr16
pop
rclb
movsb
decb
pop
lods
inc
sub
and
sub
mulb
dec
imul
add
mov
sbb
sub
cmp
scas
out
dec
scas
mov
add
adc
mov
xchg
stos
mov
cmpsl
fcomp
sub
sub
insb
mov
lcall
mov
rcr
or
jecxz
je
jnp
daa
clc
or
popa
sbb
stos
xor
fadd
inc
jo
decb
mov
sub
enter
icebp
adc
push
fs
adc
loope
dec
movsb
pusha
adc
scas
cwtl
ljmp
inc
add
sbb
orb
inc
fucomp
xor
mov
jg
cs
or
cmp
fnstsw
sbb
rol
mov
cmp
inc
std
and
insb
xor
stos
jp
pop
pop
jnp
ds
jmp
test
pop
adc
rorl
or
mov
scas
or
push
adc
aam
adc
dec
nop
xchg
or
sub
scas
in
push
clc
jnp
add
xor
sbb
push
or
inc
add
sbb
xor
mov
mov
jmp
fnstcw
ds
push
je
out
or
cmp
push
push
dec
dec
add
dec
jg
in
add
and
add
ret
add
inc
push
iret
ret
pop
sbb
cmp
jge
add
int3
jb
nop
aaa
nop
stc
mov
adc
lea
dec
or
shl
sbb
sbb
and
lret
and
int3
das
js
movsb
loopne
jmp
dec
ss
push
dec
fmull
xor
push
xor
leave
fs
add
xor
shrb
nop
pusha
mov
or
push
mov
pop
xchg
add
ret
es
inc
push
in
adc
jge
int3
clc
pop
in
sub
push
push
add
push
add
and
out
xor
and
push
call
mov
aam
and
mov
ret
jbe
fucom
pop
cltd
pop
add
inc
dec
fdivrl
in
lahf
jns
lahf
sub
xor
pop
inc
adcl
mov
add
add
int
push
call
mul
aaa
inc
mov
sahf
fisubrl
dec
scas
push
jb
scas
cmc
push
outsb
mov
xchg
aam
lret
pop
and
dec
fimull
scas
sub
enter
or
cmc
sub
xchg
into
pop
out
add
sub
sub
das
pushl
mov
lock
xchg
loopne
add
adc
paddusb
cmp
dec
cli
stos
cmp
pop
xchg
cmp
cwtl
rep
psubd
jg
cmp
jmp
mov
pop
jl
adc
inc
in
and
mov
flds
out
pop
dec
mov
aas
ror
outsl
mov
push
pushf
adc
and
adc
pushf
adc
hlt
les
xor
sub
jns
pop
mov
add
subb
ljmp
xor
mov
mov
add
sub
mov
repnz
dec
inc
or
cltd
adc
dec
cmp
je
clc
and
jb
pop
push
cmp
xor
ljmp
loopne
add
aad
sbb
xor
inc
or
push
sbb
ljmp
sbb
sti
sahf
adcl
jne
popf
dec
push
push
add
jl
dec
rcll
push
jle
xchg
aaa
and
call
inc
sahf
push
popa
outsl
aaa
das
decl
lock
ja
call
test
inc
add
xor
in
xchg
rorl
sahf
popa
or
out
adc
jb
jb
mov
cld
popf
mov
cmpsb
cmp
cmpsl
xor
gs
lock
scas
dec
negl
aam
fdivs
push
jl
ret
ds
adc
pushl
sub
sub
iret
or
adc
xor
fcmovu
or
pop
loop
push
jo
inc
pop
jb
scas
adc
data16
sar
fnstsw
aam
xor
and
clc
adc
dec
loop
out
adc
leave
jmp
jbe
mov
mov
into
fadd
ljmp
pop
popf
rcl
xchg
add
jg
pop
mov
gs
mov
jne
mov
shll
cld
cs
in
hlt
fadd
cmpl
or
xor
or
add
pop
imul
pop
jnp
lds
xor
nop
sub
or
adc
aad
cmp
xchg
push
cmpsl
data16
cmpsb
mov
lds
sbb
and
movsb
aas
sub
push
xor
rolb
cmp
xchg
push
movl
or
push
sub
pop
std
scas
lea
ja
test
or
mov
andb
lock
cmp
movsb
xchg
sub
ja
and
xchg
xchg
int3
rclb
lea
nop
and
push
call
sbb
inc
push
scas
jecxz
dec
jmp
mov
xchg
dec
xor
push
imul
or
cmp
push
inc
int3
sahf
loope
test
out
nop
mov
shl
xchg
lea
nop
rorl
jp
inc
out
fisubs
jne
adc
scas
xchg
call
cs
repnz
mov
ss
andb
jg
mov
andb
imul
mov
push
mov
inc
mov
in
iret
imul
push
inc
xchg
mov
cmc
xor
inc
popf
jl
pusha
push
call
sub
cmp
inc
xor
sub
sbb
or
cwtl
pushf
dec
jmp
mov
outsb
lods
insl
xchg
jmp
mov
pop
pop
jmp
shrl
add
mov
dec
xchg
mov
xchg
orb
jb
mov
add
je
add
lret
jae
add
mov
cmp
pop
in
or
push
mov
jl
dec
sbb
push
push
mov
les
or
inc
xor
cmp
mov
ds
mov
add
mov
push
inc
insb
and
hlt
jbe
sub
inc
test
enter
and
adc
or
push
inc
pop
cmp
inc
push
inc
pusha
and
adc
sbb
or
inc
sbb
xchg
jo
nop
cmp
addl
adc
cmp
cmp
push
add
push
adc
nop
mov
adc
push
inc
cs
push
jb
addb
movsl
jo
xchg
loopne
mov
dec
sti
leave
mov
pop
pop
andl
inc
gs
je
js
xchg
sub
outsb
mov
or
popl
iret
jbe
fdivs
push
cmc
mov
xor
outsl
jb
dec
jne
mov
adc
inc
das
mov
dec
inc
adc
xchg
mov
out
jo
mov
test
jg
dec
cli
mov
sbb
outsl
mov
jo
adc
popa
ds
imul
int3
pop
push
bnd
mov
aam
insl
stos
lret
and
outsl
insl
xor
dec
popa
outsb
fs
repz
jmp
sbb
inc
jns
add
sbb
fiaddl
and
lret
push
mov
cmp
aad
insl
inc
inc
xchg
mov
dec
mov
outsl
mov
inc
inc
into
sbb
scas
js
jge
popa
dec
rcrl
dec
ljmp
jo
xchg
repz
lret
jns
and
stos
or
and
add
mov
mov
xchg
sub
movsl
pushf
outsl
adc
pop
push
rolb
stos
les
mov
daa
inc
fwait
popl
lds
out
mov
xchg
sbb
pinsrw
loop
and
pop
inc
scas
and
sti
lea
dec
outsl
int3
xor
outsl
push
sbb
sub
iret
add
test
mov
jno
jno
lret
subb
cltd
incb
xchg
fsts
jmp
fcoms
inc
je
out
push
mov
cmp
adcl
xchg
or
cmp
add
inc
cmpsb
ss
inc
jp
xor
dec
mov
inc
xchg
repnz
nop
mov
bound
jle
push
mov
sbb
and
xor
mov
push
pushf
lods
xchg
sub
xor
fsubrl
ret
mov
insb
pop
jl
mov
ss
jmp
lock
inc
leave
or
or
xchg
xor
inc
jns
jecxz
jge
repz
cmp
aaa
sbb
pop
jne
cmp
add
pop
out
gs
jae
cmp
popf
pop
leave
cmc
js
adcb
repz
imul
dec
in
jns
dec
mov
aas
test
add
std
data16
jne
lret
imul
mov
pop
mov
and
mov
lods
xlat
mov
stos
jbe
jb
mov
dec
int3
push
loop
ds
cli
cmpsl
and
add
mov
inc
xor
dec
push
mov
pop
inc
imul
mov
jae
lock
sbb
add
xor
enter
or
decl
pop
mov
aaa
test
incl
add
movsb
or
test
or
loope
pop
mov
mov
shl
lret
pop
aam
enter
daa
or
dec
shll
sub
sbb
push
test
daa
cld
and
and
add
sub
adc
lret
enter
adc
xor
dec
les
mov
out
fnstsw
cmpsl
xor
shll
xor
pop
roll
sub
sub
mov
mov
ss
inc
dec
enter
mov
daa
fistpll
test
pop
out
testb
dec
fsubr
lret
sbb
call
mov
daa
ret
or
pop
push
cs
repz
fs
cmc
dec
notb
xchg
mov
jne
or
loopne
out
cltd
jns
cmp
push
sbb
rclb
adc
add
adcl
jp
push
daa
mov
sub
push
mov
xchg
mov
rcrl
call
push
dec
pop
mov
imul
mov
bound
je
mov
in
testb
jns
scas
adc
std
adc
movsb
push
mov
add
xor
adc
mov
sti
mov
dec
orb
je
dec
lock
scas
xor
pop
dec
pop
and
push
mov
xlat
in
push
xchg
sbb
and
adcl
or
cld
pop
clc
stos
and
dec
mov
lods
mov
sub
push
inc
pusha
xchg
mov
jo
push
mov
fcmovnb
mov
pop
std
rorl
sti
push
inc
or
xlat
and
pushf
idivb
mov
jg
mov
outsl
jae
gs
imul
sub
sub
sbb
jb
repnz
mov
lods
add
mov
pop
cld
jmp
out
aad
ljmp
cmpl
push
xlat
mov
stc
or
movsb
pop
cmp
sub
push
mov
cmp
cmp
xor
xor
test
mov
fldenv
xchg
pushf
sbb
gs
adc
jmp
rclb
and
pop
stc
xor
in
aad
mov
dec
jecxz
lds
lcall
adc
enter
hlt
sub
les
sbb
inc
clc
mov
nop
mov
data16
adc
cmp
insb
std
or
sbb
insb
je
cmp
data16
nop
adc
mov
aas
inc
and
mov
adc
adc
inc
movsl
or
sbb
jg
add
imul
mov
dec
lds
arpl
adc
adc
daa
gs
cmp
push
jne
jb
dec
sbb
jmp
cmpsb
sbb
jp
push
xchg
xor
sub
stos
sbb
imul
push
sub
hlt
insl
jge
sbb
push
mov
jbe
fs
mov
je
xcrypt-cfb
cmpsl
and
cmp
cmp
movsl
fwait
adc
sbb
cmp
rol
sub
jbe
inc
jle
push
add
inc
xlat
or
mov
xchg
enter
test
jl
lods
sbb
inc
jle
mov
add
mov
rorb
mov
ds
lods
xchg
or
sub
lods
mov
adc
mov
adc
or
lods
xchg
push
test
push
sbb
repnz
rolb
jo
imul
dec
mov
jae
inc
push
jb
add
insb
xchg
xorl
out
jle
jl
imul
sub
lret
dec
bound
subl
adc
sahf
insl
ss
sbb
aaa
xchg
mov
dec
or
pop
sbb
es
sbb
push
mov
mov
sahf
jp
repnz
lahf
cwtl
jle
add
inc
xchg
jl
pop
push
movsl
fsubp
jbe
mov
mov
mov
jbe
dec
and
cmp
loope
in
fcmovu
orl
fnstcw
mov
adc
mov
leave
jg
xchg
stc
add
mov
dec
lods
or
add
push
push
xlat
adc
jg
out
loope
inc
das
push
cmc
and
xor
dec
inc
sbb
inc
mov
sbb
ss
xchg
inc
pop
imul
pop
sub
mov
add
test
sbb
mov
inc
pop
gs
adc
imul
negb
or
mov
in
pop
mov
xchg
mov
stos
or
mov
push
in
fmuls
inc
mov
jge
popf
jo
and
fnstsw
cltd
es
push
mov
les
add
sub
lea
jo
movsl
add
pop
push
ss
imul
dec
loope
sub
mov
fadds
mov
mov
cmp
or
cmp
inc
adc
repnz
push
lock
cmp
mov
mov
xchg
mov
mov
sbb
mov
or
lods
in
sahf
leave
mov
mov
jo
jl
lcall
aas
mov
and
orb
fisubl
mov
or
sub
movsl
push
and
pop
dec
ret
jo
out
repnz
test
xchg
or
dec
in
aad
pop
das
mul
pusha
mov
mov
int
add
loop
sbb
jmp
jae
or
inc
andl
lods
icebp
or
outsb
lods
or
ret
cltd
jmp
adc
enter
xlat
outsl
jnp
adc
push
add
dec
dec
stos
fmuls
fmull
xchg
pop
cli
mov
in
clc
movb
and
std
jmp
imul
adc
inc
sbb
push
add
sub
add
stos
mov
sub
outsb
or
mov
mov
push
jnp
pop
ret
sbb
subb
inc
icebp
imul
jge
push
lea
mov
push
cmpb
cs
mov
jecxz
mov
mov
push
bound
dec
inc
sub
pop
ret
xchg
mov
out
repnz
lods
std
movb
xchg
fdivrs
ret
in
adc
and
movsl
jne
xchg
cwtl
test
sub
lcall
outsl
xchg
dec
lock
push
adc
push
jg
xor
int3
sub
add
rcrb
mov
test
movsl
push
push
inc
xor
xor
js
pop
cmp
sub
js
adc
flds
sbb
shr
adcb
adc
repz
mov
push
add
jmp
daa
loopne
in
pusha
inc
in
add
inc
add
lret
jb
jmp
aam
adcl
add
insl
sub
add
xlat
mov
jbe
pop
cmc
sub
pop
inc
sti
push
mov
std
cli
and
aam
sbbl
int
sbb
adc
sti
mov
lret
dec
aas
push
inc
jo
ret
inc
mov
dec
lea
mov
scas
sbb
xor
call
scas
insb
bound
add
push
iret
jbe
inc
push
push
out
adc
dec
aam
jae
or
mov
add
aam
add
mov
gs
xorb
in
rolb
mov
push
push
mov
xchg
cld
push
int3
mov
push
popf
jnp
scas
jge
xchg
inc
lock
jg,pn
sbb
push
pushf
or
and
ljmp
mov
sbb
shr
leave
hlt
push
sbb
cmp
repnz
or
lret
xchg
push
loope
add
push
push
inc
jecxz
pusha
adc
gs
cli
cs
jg
inc
in
cs
loop
cmp
xor
pslld
std
inc
shll
rcl
mov
call
mov
mov
jl
inc
xchg
lea
test
ljmp
cmpsl
xchg
sbb
dec
cmp
push
out
arpl
or
jle
add
xchg
jbe
push
mov
push
jbe
inc
mov
mov
ret
test
out
mov
shrb
hlt
adc
out
cmp
lahf
jo
jns
mov
jns
rclb
pop
iret
push
add
dec
icebp
mov
das
add
rcll
jbe
call
out
pusha
stc
adc
jne
add
lods
mov
mov
pop
loop
xchg
iret
stc
cmp
pop
xchg
or
fsubrp
add
movsb
scas
sub
lea
mov
dec
into
iret
dec
stc
or
add
or
sbb
pop
cltd
imul
inc
fisttps
mov
cmp
cmpsl
ret
cmp
lds
xchg
inc
lods
xchg
cwtl
xor
call
mov
cltd
xchg
adc
or
jmp
data16
or
mov
das
cld
fildll
push
inc
enter
stos
jge
cmp
cwtl
jns
popa
fwait
iret
or
fxch
sub
and
movsb
scas
sbb
daa
shlb
xchg
xor
in
iret
sbb
aam
push
dec
dec
pop
sti
cmpl
push
add
inc
cmpsb
enter
dec
mov
aaa
dec
sub
xor
push
push
fidivl
pop
sbb
and
add
jne
xlat
bound
pop
sbb
adc
or
push
cmp
inc
adc
pushf
addr16
add
pushl
push
inc
push
call
inc
push
int3
pushf
daa
mov
into
and
test
test
cmp
mov
add
movsb
mov
push
jmp
mov
out
lret
in
pop
dec
or
fcomi
sahf
xor
dec
cmp
jbe
loopne
add
je
adc
mov
adc
or
inc
sbb
adc
sub
or
sbb
push
test
cmp
jae
inc
mov
fidivs
mov
ret
mov
rep
pop
icebp
jp
call
cli
gs
cmpsb
jl
mov
and
or
pop
cmp
dec
in
pop
add
jmp
mov
jmp
or
das
xchg
popa
aam
call
dec
inc
sbb
ret
enter
xchg
lahf
nop
test
jmp
hlt
sbb
jecxz
repnz
lcall
scas
pop
mov
sub
push
xchg
inc
movsl
pop
rcr
jne
jecxz
jle
push
lret
ret
sub
movsb
sub
clc
shr
mov
das
dec
movsl
cld
insb
in
lcall
jmp
clc
loopne
xor
call
lret
push
ret
jg
es
adc
or
test
cmp
sub
mov
cmp
or
rorb
loope
adc
pop
cld
sub
jnp
arpl
fs
inc
push
mov
xchg
sbb
pop
call
jp
ffree
stos
sub
adc
xchg
shl
adcb
xchg
les
outsb
out
lea
movsl
adc
and
aam
xor
push
mov
adc
and
cmpsl
sbb
sub
pop
mov
jle
in
arpl
aaa
sub
fs
int3
or
or
xchg
xor
std
cmp
adc
or
loopne
mov
iret
ret
enter
imul
mov
xchg
inc
or
hlt
mov
dec
decl
out
rep
xchg
ret
sbb
push
call
xor
jmp
sbb
inc
in
sbb
pop
fdiv
inc
jnp
and
mov
push
bound
mov
dec
pusha
adcb
mov
loopne
out
sub
sub
or
and
add
add
out
pushl
test
or
loope
pop
ds
push
jl
lret
jne
fdivrs
or
ds
add
pop
cs
ljmp
jg
mov
insb
mov
nop
icebp
sub
adc
sbb
cwtl
test
ret
std
fildll
cwtl
and
push
dec
lock
adc
and
std
imul
or
test
fdivr
jno
popa
outsb
pop
sar
lea
xor
sbb
inc
pop
push
inc
test
das
pushf
push
inc
dec
jmp
push
int
jg
mov
add
or
call
lcall
mov
test
jle
xchg
mov
mov
aam
fcomps
pop
fnstcw
mov
adc
jg
movsb
lods
hlt
mov
in
inc
or
jne
movsb
inc
fsubrl
mov
hlt
call
shrb
inc
test
xor
lods
test
pop
dec
mov
je
jp
jo
jbe
out
cmc
adc
dec
pop
ret
ja
pop
jp
int3
ds
sbb
mov
call
mov
out
nop
dec
mov
push
orl
mov
push
stos
xchg
scas
lock
shl
mov
cmp
mov
nop
add
cmp
test
jg
cwtl
enter
mov
push
lcall
dec
roll
out
icebp
push
and
rorb
or
push
jmp
cmp
fists
dec
scas
cwtl
outsb
movsb
rclb
xchg
jl
jae
ss
xchg
mov
and
mov
test
cwtl
or
sub
mov
xchg
fdivrl
lods
add
or
push
test
mov
sbb
sbb
hlt
fimuls
loopne
add
pop
testb
test
adc
fsubrl
loopne
mov
test
test
shrl
inc
cmp
xor
cwtl
aad
add
push
push
adc
jmp
out
out
or
sbb
xchg
fisttpll
jge
jl
or
jbe
sahf
loop
rcrl
mov
add
pusha
add
int3
ds
adc
and
sub
dec
mov
stos
jmp
ljmp
jecxz
pop
or
and
out
xchg
aaa
movsb
or
or
cmpsl
jbe
and
sub
pop
sbb
testb
iret
and
call
and
insb
movsl
and
and
and
cmp
adc
test
shl
and
or
jmp
mov
ret
sbb
jmp
sub
shl
sub
xorb
out
test
test
repnz
cmc
dec
test
mov
jmp
inc
call
clc
mov
pop
jecxz
pop
repz
add
rcrl
add
pop
jmp
cmp
xor
sbb
lea
and
mov
cmp
add
add
sub
jo
push
not
stc
out
aad
hlt
leave
inc
push
imul
jg
dec
add
int
adc
in
or
mov
ret
popa
les
jmp
or
hlt
sahf
imul
adc
into
js
pop
scas
adc
xor
and
les
int3
shl
jmp
data16
fdivs
dec
jecxz
push
pop
inc
mov
call
lock
pop
notb
out
adc
sti
shrb
sub
sar
out
mov
jae
xchg
dec
lods
aas
fnsave
mov
repz
adc
cmp
mov
ss
sub
call
adc
inc
shll
pop
jmp
adc
and
nop
sub
or
pop
add
aad
scas
and
sub
push
sbb
mov
stc
shl
add
out
push
mov
test
adc
jmp
daa
js
roll
rol
jne
push
push
pop
dec
es
call
popa
pusha
pop
push
push
scas
int
jp
xchg
ret
jle
popa
or
xchg
sbb
stos
xlat
or
mov
rcl
adc
xchg
dec
pop
pushf
pop
and
xchg
sbb
scas
adc
adc
icebp
xchg
or
hlt
pop
or
add
in
push
je
daa
mov
dec
xor
vpcmpeqd
les
ret
xor
movzbl
sbb
sub
ficoml
orl
mov
ret
insl
inc
jmp
adc
or
std
mov
scas
xor
xchg
adc
std
lcall
jne
add
daa
push
mov
jmp
enter
imul
mov
dec
mov
push
mov
loopne
and
mov
std
rcrb
cmp
sub
or
inc
push
xchg
ret
ret
mov
inc
cmp
insl
jne
lret
mov
pusha
dec
in
dec
fldcw
int
outsb
dec
add
adcl
sbb
or
int3
and
cmp
mov
jno
cmp
pop
inc
mov
cmp
push
lods
pop
sbb
or
mov
pop
adcl
aam
push
mov
cmp
cmp
mov
lds
loop
mov
push
or
call
les
add
push
aam
out
test
scas
dec
adc
lcall
cld
xor
nop
fsubl
push
je
sahf
call
push
lock
mov
push
mov
fmull
sbbl
rcr
clc
jecxz
mov
adc
shr
hlt
aaa
mov
je
mov
sbb
in
das
nop
push
and
les
lahf
xchg
xor
scas
xor
mov
pop
lock
repnz
les
pop
push
lock
nop
test
inc
sub
pushl
mov
xor
push
cmp
rcr
daa
das
dec
mov
add
cmp
les
ret
out
mov
xor
rclb
adc
dec
ljmp
xor
xor
cmp
movb
pop
call
or
inc
fldcw
pop
popa
jp
in
jnp
add
inc
ret
test
lds
inc
cmp
test
rcr
push
pop
cmp
ja
lock
into
pop
add
cmp
adc
inc
add
call
in
adc
dec
xor
jmp
xor
jmp
mov
call
jle
nop
push
adc
or
adc
push
sub
cmp
test
pop
clc
cli
in
repz
test
bound
dec
mov
fcompl
or
nop
sub
popa
sbb
daa
dec
dec
or
mov
xor
adc
mov
mov
mov
xor
pop
mov
push
mov
xor
xor
adc
pop
test
and
daa
push
xchg
pop
mov
loope
dec
int
nop
or
mov
adc
or
xchg
fisubrl
push
pop
loopne
push
adc
or
or
sti
push
mov
popf
xchg
push
bound
mov
icebp
mov
push
and
movsb
push
add
xchg
push
mov
pop
out
dec
incl
fistps
movl
adc
or
sbbb
insl
jg
ljmp
bnd
decb
bound
clc
divb
push
sub
xor
xchg
adc
cmc
int3
push
cmp
xlat
sub
bnd
inc
lea
popf
inc
popf
clc
push
push
push
push
mov
mov
pop
std
fisttpll
stos
lea
scas
cmp
sbb
into
adc
sbb
aas
mov
and
movb
push
add
pop
out
and
inc
or
mov
add
and
js
cmp
mov
mov
stc
lods
pop
lods
hlt
pop
std
mov
scas
push
lods
leave
jae
xor
aad
and
sahf
ds
push
stos
adc
sbb
and
push
xor
mov
into
sub
inc
pop
pop
cs
mov
push
dec
lods
xchg
int
stc
and
mov
fwait
roll
mov
call
sarb
scas
shrl
cmp
mov
sub
sbbb
daa
mov
mov
and
inc
popf
fistpl
pop
movsb
loope
divb
jbe
and
popa
jne
push
cltd
add
adc
int3
xor
pop
mov
mov
fcoml
addr16
cld
xchg
add
icebp
aam
popa
or
pop
inc
mov
mov
mov
paddusb
xchg
int
push
adcb
cmpsb
dec
icebp
out
sub
and
push
add
nop
aaa
sub
jl
inc
adc
mov
call
push
xor
adc
ljmp
mov
adc
nop
xchg
movsb
dec
dec
fisttpl
sti
sub
fnstcw
mov
pop
and
sbbl
inc
daa
cmp
pop
cmp
add
and
pop
jae
dec
add
movsl
scas
sub
push
inc
pusha
arpl
sub
jecxz
fcompl
sub
dec
inc
add
adc
mov
xchg
cmp
call
test
mov
sbb
push
cmpsl
push
push
sub
adcl
fs
out
cltd
cwtl
cwtl
pop
adcl
mov
sub
push
mov
aam
pop
xorb
mov
cld
add
imul
adc
pusha
pop
sbbl
and
xor
xor
inc
jmp
mov
jne
pop
inc
adc
cmpsb
les
xchg
jns
sbb
testl
shl
leave
sbb
dec
pop
pushf
ret
pushf
in
sahf
mov
mov
das
pop
xor
dec
sbb
dec
scas
into
add
lods
call
jno
and
pop
test
jne
loopne
adc
mov
in
and
jne
outsb
rorl
cmp
imull
add
sbb
push
xor
xchg
rclb
imull
dec
xchg
inc
in
add
movsb
call
or
test
pushf
add
mov
lret
loopne
mov
clc
jno
mov
xchg
dec
sahf
xor
xor
ficompl
fbstp
pop
jge
test
call
ror
jae
dec
cmp
je
test
sbbb
dec
popl
repnz
add
mov
js
xchg
xchg
jns
je
dec
push
sar
mov
inc
jmp
mov
pop
cwtl
and
jb
mov
sbb
enter
sti
dec
or
jne
pushf
xchg
push
pcmpgtw
add
pop
dec
or
cmp
cmp
addr16
xchg
mov
adc
xchg
push
paddw
adc
adc
test
dec
and
imul
mov
push
pop
movsb
xorb
add
mov
es
or
add
jg
repnz
sbb
jl
sub
arpl
push
mov
leave
sbb
rorb
inc
sbb
push
push
push
dec
data16
xchg
or
push
movsb
add
inc
pop
add
je
and
and
sahf
nop
daa
push
cmpsb
mov
les
xor
icebp
adc
adc
sbb
int3
mov
popf
adc
mov
lahf
or
sub
and
adc
push
cld
or
popf
or
inc
push
sub
and
addl
cwtl
add
jbe
add
aam
lret
lret
mov
negb
fsubs
mov
leave
sbb
jl
nop
sti
loop
mov
ja
dec
pop
cmp
out
pop
stos
je
test
int
xchg
sub
scas
or
dec
loope
jge
pop
dec
and
push
xorl
jg
in
inc
sub
test
cmp
lods
cmp
bound
push
adc
std
enter
mov
enter
xchg
mov
pusha
pop
add
push
jne
adc
jecxz
jmp
push
sbb
test
pushf
xor
sbb
and
orb
or
push
rcrl
xor
shl
or
sbb
dec
dec
or
inc
push
jle
sbb
or
inc
test
lret
gs
adc
mov
cmp
call
inc
lock
mov
mov
add
sbb
std
fnstcw
xchg
xor
clc
mov
jmp
cmp
scas
std
jo
dec
jmp
cmc
mov
mov
arpl
scas
mov
lcall
pop
mov
mov
add
into
shl
inc
lds
or
mov
fisubs
sarb
or
popf
fs
call
dec
popl
push
and
add
notl
push
adc
movsl
leave
imul
sub
dec
ret
iret
mov
divl
imul
push
repz
dec
lret
sub
mov
clc
pop
xor
adc
ret
xor
mov
push
pop
xor
fildl
push
and
fs
inc
sub
clc
cmpsl
pop
lds
sbb
push
inc
popa
clc
enter
pop
cmpsb
mov
lock
iret
and
mov
cmp
setne
xchg
mov
fstpt
pop
mov
sbb
call
or
pop
pop
xor
pop
addl
sbb
pop
inc
adc
push
push
mov
out
xchg
orb
js
lods
sub
adc
stos
pusha
out
mov
adc
imul
xorl
sub
push
sbb
cs
mov
push
and
aam
scas
jge
mov
notb
fwait
test
mov
sbb
rolb
repnz
sub
inc
test
and
push
mov
jo
fsts
cld
stos
xchg
leave
das
ds
jmp
cwtl
sbb
adc
sub
and
daa
lods
pop
mov
or
dec
sarl
imul
mov
and
jecxz
xor
orl
das
mov
aaa
test
xchg
insb
out
repnz
cwtl
mov
inc
xor
nop
add
test
lahf
adc
nop
dec
or
fidivl
enter
add
and
mov
push
pop
push
mov
sub
inc
stos
dec
dec
mov
dec
out
sub
in
xor
adc
sub
test
add
or
adc
shlb
and
shrb
loope
add
cmp
inc
push
mov
daa
push
push
add
popf
add
push
cmp
or
and
ljmp
and
sub
arpl
dec
dec
int3
push
repnz
sbb
push
mov
ficoms
adc
pop
push
mov
mov
call
shl
cmpb
je
cmp
adc
push
inc
push
movb
inc
jne
aas
call
jmp
push
pop
sbb
mov
sbb
mov
dec
jle
fwait
inc
sbb
hlt
push
lock
in
xchg
dec
mov
cmpsl
xchg
push
mov
in
cmpsb
inc
out
mov
cmp
cltd
mov
inc
or
sub
ljmp
add
adc
pop
std
setae
push
pop
sub
enter
adc
mov
jnp
iret
iret
push
sub
push
das
aam
iret
xchg
inc
push
sbb
add
adc
xchg
sti
push
xchg
push
or
mov
inc
sbb
inc
iret
and
out
cmp
mov
dec
cmp
sub
loop
cs
mov
mov
sub
push
mov
dec
cli
xchg
mov
sub
fsubl
das
ljmp
cltd
jae
movb
and
or
or
mov
mov
les
xor
and
sarl
sub
add
inc
pop
leave
cli
test
push
loop
orb
jb
adcl
mov
movsb
sbb
cmp
jle
inc
xor
push
call
clc
movsb
in
popfw
or
in
imul
or
fisubrl
cwtl
cwtl
inc
mov
adcl
sbb
push
mov
arpl
push
sub
adc
dec
sti
sub
dec
fs
jae
shll
sbb
sub
popf
dec
dec
test
xchg
cld
dec
mov
and
or
loope
dec
lock
in
sub
and
aam
pop
cmc
cwtl
ret
adc
push
pop
mov
and
cmpsb
xor
sbb
cwtl
loop,pn
xor
or
push
mov
xor
subb
adc
sar
xor
cvtpi2ps
adc
sti
jno
loopne
dec
dec
inc
inc
fcoml
push
jmp
or
movsb
sub
or
push
jg
nop
lea
movsl
cwtl
int
xchg
mov
mov
mov
adc
or
sbb
mov
ljmp
or
mov
pop
nop
into
mov
sahf
mov
dec
in
cs
adc
in
les
sub
ficoms
ljmp
ret
adc
sbb
aam
xchg
je
sub
mov
sub
xchg
inc
cmpb
rcl
xor
test
adc
dec
fisubs
and
pop
push
movsl
or
scas
jl
gs
arpl
pusha
pop
movl
jo
mov
into
sub
stc
movsl
addr16
dec
add
jge
test
mov
test
mov
mov
jl
iret
pop
movl
dec
lcall
push
add
mov
push
jmp
cwtl
xlat
xlat
pop
xchg
lea
xlat
cmp
lcall
repz
pop
in
push
in
sub
movb
add
cmc
testb
stc
push
xor
gs
in
sbb
pop
movsl
decb
push
mov
inc
paddsb
daa
lahf
mov
leave
paddusb
adc
ljmp
out
mov
mov
jl
mov
ret
pop
and
xor
adc
fwait
push
lcall
cmpsl
mov
sbb
and
and
dec
adc
xchg
arpl
je
jae
xlat
and
sbb
inc
or
mov
std
insl
sub
sbb
insb
gs
fs
xchg
jg
mov
xchg
add
out
xchg
shlb
sbbl
mov
lds
xor
mov
xor
and
int
jne
lret
pop
lcall
stc
jmp
xor
pop
lahf
dec
enter
scas
fwait
xchg
sarb
mov
rcr
push
jne
push
bound
adc
cmp
je
aad
fadd
xor
xor
rcll
scas
pop
scas
pop
sbb
push
push
insb
scas
loop
lds
inc
xchg
lahf
frstor
add
bound
xlat
into
gs
test
mov
pusha
adc
xor
pop
nop
jg
push
cmpsb
pop
dec
xlat
stc
jge
test
sub
mov
fidivrs
fdivrs
imul
dec
cli
or
fs
lahf
clc
dec
mov
adc
loopne
dec
mov
mov
sub
jne
fldenv
fstp
movsl
sbb
and
aad
mov
mov
hlt
test
or
mov
inc
jb
add
jge
and
arpl
jecxz
movsl
adc
gs
pop
fwait
ds
mov
les
inc
adc
fmull
cmp
jo
mov
adc
xchg
shr
iret
sub
imul
lret
cltd
popa
and
aam
pop
fwait
divl
jne
xchg
fsubr
or
lds
and
aam
mov
in
shll
push
lahf
inc
mov
shll
or
dec
clc
ds
test
and
dec
lcall
sub
pop
scas
icebp
sbb
or
enter
mov
or
roll
fsubrs
leave
and
mov
cmp
xor
je
add
mov
xlat
inc
and
call
jle
dec
call
inc
int3
adc
inc
fstpt
cmp
jo
push
aaa
mov
sub
mov
pop
and
gs
lahf
repz
leave
fistps
in
jmp
push
mov
sbb
mov
sahf
push
ret
cmp
add
lret
call
call
dec
cwtl
adc
or
out
dec
xor
cld
iret
mov
mov
arpl
xor
mov
pushl
loop
std
push
lds
or
std
fstl
or
dec
sti
xor
test
bound
mov
push
jge
jae
jl
cmc
adc
rcrl
adc
aam
pop
jmp
adc
add
scas
jecxz
daa
inc
clc
imul
mov
cmp
iret
imul
push
outsb
mov
jo
push
inc
leave
add
xor
jp
jmp
push
in
mov
ret
aad
add
outsb
pop
jae
sub
bound
nop
pop
jecxz
dec
mov
xlat
out
mov
or
xchg
and
nop
js
mov
sbb
xchg
negb
ss
je
out
nop
mov
adc
jg
xor
sbb
lds
outsl
sbb
pop
mov
or
test
pop
xchg
out
sbb
sbb
mov
xor
out
add
jno
mov
je
add
je
jmp
dec
in
jne
xchg
push
stos
cmp
fiadds
pushf
mov
mov
and
push
and
jne
lock
nop
and
and
mov
dec
mov
mov
mov
outsb
push
mov
mov
and
jne
xchg
es
ret
mov
jle
or
inc
jae
ficompl
pop
movsb
or
scas
aam
push
aad
add
pop
ficoms
mov
movsb
mov
inc
mov
jo
and
imul
adc
je
push
push
js
dec
mov
jns
out
outsb
imul
orl
xlat
add
nop
mov
mov
xlat
movsl
or
sbb
and
sub
mov
mov
adc
inc
sub
jge
or
adc
xor
pop
ds
xchg
and
call
mov
push
dec
cwtl
add
in
push
push
adc
mov
das
push
mov
jb
cmp
and
ja
xor
sbb
mov
sub
sbb
je
ficompl
jmp
jns
rolb
les
add
fstpt
push
dec
sbb
lods
cmp
pop
dec
leave
rorb
dec
int
sbb
faddl
ficompl
push
push
out
jo
loope
insb
mov
in
jne
mov
or
cmp
xor
or
mov
test
lea
mov
push
inc
lods
jge
sub
add
das
add
lock
dec
pop
and
adc
mov
lea
and
and
fs
sti
loopne
lea
and
test
cmp
xor
lea
sbb
leave
xchg
xchg
scas
adc
mov
push
and
inc
popf
jl
fmull
xchg
xor
cmpl
movsb
or
js
adc
or
push
jl
inc
clc
imul
or
lds
pusha
sbb
pop
pop
lahf
inc
adc
add
sub
dec
mov
je
sbb
jo
sbb
push
push
add
test
adc
push
mov
or
call
movsl
xor
pop
out
loope
mov
sub
mov
test
sbb
test
sub
mov
push
jecxz
xor
cli
or
adc
and
les
pop
mov
mov
pop
jnp
pop
cmp
lock
sub
sub
clc
test
daa
sub
mov
xlat
dec
adc
cld
ss
pop
and
shl
ret
pop
jge
test
iret
ja
mov
adc
inc
add
dec
outsb
data16
mov
ss
lahf
divb
pop
pop
das
nop
rcl
add
cmpw
sti
loop
jnp
rcrb
mov
and
jae
popf
jg
lock
push
in
int
cmp
mov
sub
pop
jns
das
mov
xor
or
pop
call
add
bound
cmc
ds
or
jl
mov
adc
mov
and
stos
xor
jmp
mov
iret
lahf
test
movsl
cmp
sti
sbb
insb
cmpsl
cmpsl
les
fs
movsb
out
js
and
mov
out
aaa
js
jmp
movsb
loop,pt
mov
sub
imul
inc
lock
popa
hlt
insb
fldl
and
inc
scas
xlat
sbb
push
cmpsb
xchg
enter
and
lods
fiaddl
lock
adc
adc
adc
or
mov
add
daa
push
aam
cmpsb
cli
add
popf
push
das
adc
push
mov
lahf
in
iret
push
push
jmp
hlt
shrl
rcrl
xchg
sbb
leave
iret
sub
or
hlt
jne
clc
out
push
xchg
test
and
and
je
leave
ss
mov
mull
insb
push
adcl
test
and
and
or
test
or
test
sub
or
and
leave
add
inc
clc
add
stos
mov
xor
adc
aas
cs
push
push
sbb
inc
test
push
test
add
dec
cmp
dec
inc
repnz
inc
push
push
scas
repnz
push
sbb
adc
adc
mov
add
cld
and
push
sti
pusha
cmpsl
pusha
push
loope
orl
pop
mov
adc
pop
mov
dec
push
stos
xor
nop
adc
stos
pop
std
xchg
test
push
or
adc
add
pop
pop
popa
leave
pop
call
inc
orl
jno
sub
dec
hlt
int
xor
or
std
adc
and
and
popf
inc
inc
mov
jge
fsubrs
cmpb
enter
mov
pop
mov
lods
xor
push
jmp
mov
inc
cld
pushf
jns
xchg
push
and
xlat
xor
shrl
adcl
out
lret
lret
das
sti
sub
cmp
jl
cmp
and
pushf
adc
movsl
popa
mov
pop
test
jmp
stos
ffreep
pop
push
and
loop
cmp
adc
gs
shll
push
push
rcll
hlt
in
in
xor
xor
fwait
mov
push
sub
sarl
lcall
pop
push
and
cmpsl
push
les
push
xor
rcll
loope
pop
push
and
mov
mov
int
mov
push
adc
outsb
adc
mov
adc
jae
jbe
adc
mov
mov
cmp
or
lahf
aam
cmpsl
pop
mov
xchg
hlt
or
sub
xchg
icebp
dec
idivb
mov
bound
sub
scas
xchg
pushf
out
nop
sbb
js
jno
cmp
nop
sbb
jmp
cmp
inc
xchg
ljmp
adc
shll
pop
inc
movsl
and
inc
adc
push
add
mov
repnz
mov
xchg
arpl
jg
outsl
add
mov
je
movsb
xchg
insb
add
lahf
push
incb
gs
mov
xchg
aad
cmp
loop
mov
dec
adc
dec
adc
push
adc
push
dec
jnp
add
dec
push
fcompl
pop
adc
dec
push
xor
push
jmp
add
mov
pushf
xor
mov
pop
and
and
cmp
push
pop
mov
sub
pop
adc
xchg
xchg
sar
jae
je
cltd
or
and
mov
xchg
sub
test
les
and
mov
mov
mov
ss
pop
loope
out
or
mov
mov
bound
pop
push
adc
mov
mov
int3
jo
loope
repz
sub
push
inc
jle
xchg
in
inc
or
mov
shrl
mov
cmp
xor
mov
dec
pop
shll
outsb
push
mov
sub
cli
xchg
xchg
adc
imul
adc
in
jo
mov
clc
inc
adc
adc
divb
push
jecxz
hlt
jl
out
push
push
sub
xor
je
jg
dec
mov
mov
pop
inc
mov
pushf
adc
cltd
or
adcl
mov
adc
xor
out
xor
mov
sub
lret
push
enter
imull
xchg
int3
add
test
and
mov
adc
popf
mov
xor
and
popa
adc
std
pop
push
call
xor
in
inc
std
cmp
lods
mov
lods
push
inc
clc
lea
scas
mov
ljmp
test
xorb
in
jnp
daa
lret
mov
daa
mov
lock
or
outsb
jmp
xchg
in
test
push
call
or
int
sub
push
and
push
xchg
cmpl
je
adc
push
sub
les
out
dec
push
bound
shl
scas
test
mov
das
std
xor
inc
fbstp
jo
mov
push
adc
je
fnstcw
sbb
sbb
cmpsb
lock
in
pop
enter
pop
fildl
call
hlt
in
xchg
insl
or
les
xor
cltd
scas
les
add
popf
repnz
xchg
imul
leave
jl
pop
xchg
mov
xor
pop
enter
cmp
or
push
call
in
call
int3
and
jbe
in
aam
faddl
loopne
pushw
adc
or
int3
jae
mov
ds
xchg
mov
fistpl
pop
pop
push
call
sti
into
adc
int
fmul
adc
dec
stos
mov
outsl
lret
ss
test
pop
adc
cmc
out
dec
pusha
stos
loopne
stc
and
mov
movsb
pop
adc
mov
shrl
push
xor
iret
mov
or
leave
push
shrb
pop
mov
nop
xchg
fidivs
add
adc
sbb
leave
mov
adc
rorb
dec
or
stos
adc
pop
sub
movsb
cmc
out
seto
je
and
jmp
and
test
jne
jmp
cmp
cmpsl
lcall
clc
dec
cmpl
xchg
stos
mov
cmpsl
jle
inc
push
push
call
inc
lock
pop
leave
mov
and
cmp
sbb
pusha
xchg
lret
pushf
cmpsl
mov
sub
dec
js
adc
jns
xor
loope
hlt
xchg
cmp
sbb
popa
das
adc
test
nop
pop
loop
jg
add
les
or
pop
xor
adc
push
inc
out
cmp
shrl
jne
adc
enter
pavgb
loope
js
dec
loopne
pop
enter
push
scas
mov
dec
inc
push
sbb
dec
add
xchg
pop
sub
in
or
sub
inc
mov
cwtl
lret
movsl
pop
in
xor
out
and
jmp
xchg
push
lock
fwait
adc
lods
pop
lock
sbbb
and
sub
js
inc
or
sub
dec
xor
je
inc
mov
mov
and
leave
std
xor
mov
mov
scas
repnz
andb
fisubrs
adc
jp
and
jecxz
adc
insl
fildll
out
sub
pop
push
xchg
scas
jp
rol
inc
and
sbb
push
and
testb
sub
insb
sarb
jb
push
push
and
mov
sub
mov
push
add
popf
std
inc
jmp
repz
and
pop
or
inc
xchg
lcall
adc
add
xor
or
adc
pop
and
jae
enter
cmp
rcrl
xchg
pop
pop
pop
lds
aas
dec
push
inc
mov
pop
out
xor
enter
xor
xchg
mov
rol
mov
loopne
mov
in
push
sbb
cmp
jns
ljmp
cwtl
mov
jmp
loope
jg
js
sub
call
or
mov
push
mov
pop
sbbb
movsb
lcall
loopne
inc
ror
popa
mov
jl
jecxz
cld
push
hlt
call
test
pop
and
push
and
xchg
jmp
imul
call
pop
addr16
jnp
dec
push
outsb
aaa
gs
and
pop
call
adc
insl
adc
jae
mov
adc
fwait
loop
mov
mov
push
outsb
pop
lret
jle
push
pop
cmc
insl
outsl
movsb
mov
adc
fcmovnu
dec
in
pop
xchg
xchg
pop
or
push
xchg
push
cmp
xchg
lea
pop
test
xor
add
add
xchg
lret
push
push
mov
lret
mov
clc
mov
dec
leave
and
lahf
and
in
mov
clc
negl
cmp
imul
adc
push
imull
pop
test
jbe
popf
les
loopne
jne
les
jge
lret
xchg
and
ret
outsl
popf
xor
dec
sub
int3
and
pop
fst
cmc
push
xchg
add
adc
orb
decl
sbb
jmp
es
loope
jge
out
pop
aaa
pop
cli
and
mov
in
xchg
sub
jp
push
and
mov
sbb
fmull
adc
xor
jmp
adc
jmp
and
adc
add
mov
repz
aam
cmp
sbb
xlat
outsl
cmp
cmpsl
ja
frstor
hlt
mov
mov
adc
incb
or
dec
sahf
test
pop
aam
and
push
xchg
xchg
jl
imul
jbe
dec
orb
aaa
mov
push
adc
jno,pn
sbb
sbb
xchg
fstl
shrb
lods
xor
in
jae
dec
cmpb
mov
mov
xlat
and
push
mov
xchg
dec
ljmp
mov
pop
adc
pop
mov
mov
mov
adc
test
mov
push
inc
mov
add
scas
inc
push
push
mov
pop
sbb
push
rclb
xor
inc
add
lcall
jnp
lret
mov
push
add
dec
rcll
sbb
push
mov
jae
fadds
ret
negb
ret
sub
xor
pushl
dec
jne
push
jmp
insb
and
repnz
push
add
in
imul
dec
stc
cld
mov
sub
cwtl
xor
int
dec
jne
lods
and
mov
mov
mov
lret
clc
int
sahf
push
xor
jns
ret
ret
jno
xchg
adc
mov
xor
or
jg
call
cmp
pop
xor
int
rolb
int
xchg
fcmove
mov
pop
ljmp
scas
pop
hlt
inc
xor
rorl
ljmp
jns
pop
add
mov
movsb
shl
rol
and
adc
ss
es
xchg
adc
add
inc
jmp
out
test
into
ljmp
xchg
or
fdiv
div
mov
roll
fmuls
lea
add
out
and
int3
inc
inc
cmp
ret
test
mov
std
repnz
inc
mov
push
std
cwtl
xchg
adcl
cmp
hlt
jmp
inc
adc
sub
sahf
push
or
push
fscale
repz
inc
push
testl
mov
pop
mov
call
inc
ficoms
and
mov
pop
fcmovu
test
lea
sub
mov
inc
mov
aas
subb
inc
mov
cmp
xor
cmp
mov
cmp
inc
mov
adc
aam
push
lea
mov
mov
lret
sub
dec
inc
and
push
cmp
push
xchg
cmp
out
jl
cmp
xchg
mov
stos
lcall
lcall
mov
pop
dec
cmp
movsb
jl
push
sub
pusha
xchg
stos
push
popf
xchg
xchg
fs
push
and
xchg
jnp
js
jl
lds
mov
pushf
mov
lahf
mov
mov
xchg
movsl
call
or
scas
or
cltd
inc
and
aas
mov
mov
mov
or
rorb
mov
sub
push
movsb
test
lods
js
or
push
mov
into
mov
dec
jp
shl
shrl
mov
es
or
fisubrs
push
lods
test
lods
js
or
push
aad
mov
rcrl
push
mov
mov
icebp
add
add
mov
mov
rclb
pop
orb
enter
mov
inc
clc
enter
or
rclb
in
das
enter
fdivrl
in
rclb
in
aas
sub
ret
pop
sti
sbb
adc
lret
mov
clc
gs
and
ret
and
sub
mov
fildl
popf
push
and
add
or
loop
add
nop
adc
and
push
inc
sbb
and
sub
sub
and
push
inc
xor
cmp
mov
inc
push
sbbl
rcl
add
pop
jne
or
sbb
notl
icebp
std
mov
lret
adc
lock
xchg
push
gs
adc
cmp
mov
lds
mov
rep
mov
cmc
jg
mov
xor
cld
mov
sbb
inc
mov
adc
neg
sbb
mov
dec
pop
nop
cmp
sbb
jne
mov
inc
fnsave
nop
adc
sbb
dec
adc
cmp
jmp
fnstcw
ljmp
cmp
aaa
test
xor
shll
arpl
push
ja
ret
pop
pop
sbb
dec
lcall
sub
ja
mov
fwait
xchg
orl
xchg
sbb
adc
inc
adc
or
jmp
fldcw
or
adc
enter
jne
or
add
loope
push
aam
int3
or
cmp
sbb
pop
aaa
pop
and
jmp
and
fists
lcall
addr16
jno
movsl
cs
mov
inc
das
mov
push
sub
jnp
outsl
push
or
push
push
orl
ret
lea
repz
testb
cmpl
and
pop
push
mov
call
push
ret
mulb
jne
push
test
xor
clc
sbb
xor
mov
or
adc
lock
jmp
jno
add
das
subl
mov
or
adc
jl
xchg
push
out
nop
pop
mov
in
jge
or
loopne
adc
rcrl
jl,pt
mov
sbb
sbb
and
imul
mov
or
test
ss
inc
aas
lds
xor
mov
jmp
pop
pop
movsb
inc
insl
icebp
pop
sahf
lret
jne
pop
inc
sbb
inc
jnp
mov
jl
add
add
sub
cmp
mov
inc
jmp
pop
lahf
sub
js
inc
jne
pop
push
cmp
or
jmp
add
inc
or
xor
add
push
sub
jl
orl
gs
or
dec
pop
mov
ds
fdivs
and
and
lea
sub
push
enter
lea
inc
sbb
mov
setg
ds
in
imul
or
adc
and
cmp
das
sbb
fisubrl
jecxz
sub
dec
pop
mov
or
mov
mov
ficoml
cmp
jg
dec
mov
xchg
ret
test
xchg
movsb
or
or
ret
test
cmpl
in
add
jmp
push
inc
test
or
ret
test
push
aam
dec
ja
push
adc
pop
push
sbb
push
fmull
cmp
xchg
jno
sbb
ret
adc
sbb
jl
mov
sbb
inc
mov
stos
adc
adc
lds
test
dec
add
adc
mov
lret
xchg
dec
xor
js
xor
and
hlt
mov
mov
push
jp
pushf
xchg
jmp
push
push
jmp
add
sub
mov
xor
xor
add
inc
xor
jns
dec
jl
lret
inc
dec
arpl
ret
and
enter
inc
in
popa
or
push
jmp
add
jae
mov
mov
test
pop
cmp
push
sbb
dec
stos
mov
loop
lcall
mov
inc
lods
cmp
test
inc
inc
xchg
cmp
mov
in
test
cwtl
add
xor
lods
mov
clc
adcl
hlt
dec
sub
xor
push
popa
andb
sarb
cmp
fsts
add
push
lret
divl
mov
push
sbb
add
pop
mov
cmp
or
adc
pop
pop
add
jae
out
jge
es
out
adc
jl
push
or
pusha
jp
nop
add
xchg
shr
cli
clc
xchg
jnp
and
fldcw
arpl
xor
stc
mov
aad
xchg
push
bswap
xchg
cmp
jmp
push
arpl
je
or
push
stc
cld
adc
mov
or
inc
mov
sbb
pop
mov
pop
xlat
and
aam
daa
mov
push
jp
loop
sbb
jg
std
aaa
outsb
int
das
enter
dec
dec
dec
push
jecxz
sbb
rol
loope
dec
mov
fdiv
sbb
adc
jbe
xchg
imul
push
call
and
jb
imul
add
ljmp
cmp
jmp
or
mov
jg
or
sbb
arpl
jmp
dec
or
pop
cmpsl
add
jge
adc
mov
dec
or
and
test
sbb
inc
or
inc
adcb
jb
push
and
inc
add
dec
loop
xor
xor
xor
mov
ret
insl
mov
jmp
mov
decl
ss
or
les
enter
stc
jbe
mov
mov
inc
outsb
aaa
mov
jbe
adc
sub
and
xor
and
and
test
xchg
repnz
dec
stos
push
ret
stc
ss
and
addb
lcall
push
jmp
jno
mov
jmp
das
nop
nop
daa
cmpsb
cmp
mov
sub
and
adc
mov
cwtl
mov
adc
hlt
std
push
mov
xchg
fistpl
and
fcomps
or
test
sub
jno
enter
push
push
sbb
fucomip
xchg
sbb
mov
mov
or
adc
out
sbb
add
push
cmp
and
cmp
adc
mov
cmp
push
mov
in
sti
adc
fcoms
cmp
adc
jge
push
nop
mov
or
mov
inc
in
and
and
js
jne
xchg
pop
push
xchg
aaa
lock
push
push
add
sbb
add
push
xchg
adc
push
push
js
mov
dec
test
repnz
jns
xchg
gs
enter
sbb
xor
gs
dec
dec
call
jmp
inc
mov
mov
cmpl
orb
nop
sbbl
bound
pop
ljmp
adc
push
dec
inc
es
gs
cmp
sbb
mov
into
div
fildll
mov
je
inc
rclb
and
dec
aad
lea
mov
sbb
je
push
outsb
add
pop
sub
adc
gs
ds
push
out
sbb
xchg
jmp
xor
loope
ljmp
nop
add
in
stos
sub
inc
pop
cmp
pop
popf
add
loope
dec
sbb
inc
and
imul
or
jbe
or
ss
mov
test
ret
pop
inc
cs
mov
loopne
mov
mov
mov
inc
sbb
sbb
pushf
sti
jbe
pop
pop
cld
sub
jae
and
add
pop
jne
mov
call
push
es
add
je
push
xor
rclb
ficomps
clc
das
push
inc
daa
push
and
or
negb
pop
repnz
dec
mov
sub
sub
cmc
test
inc
cmpsl
sub
add
inc
mov
jb
mov
dec
stos
sub
cld
dec
or
mov
cmp
pop
sub
sbb
dec
inc
cmp
in
jo
test
jmp
mov
mov
aam
or
mov
fcoms
mov
addb
push
jno
cwtl
sub
sub
cmp
std
xchg
std
mov
hlt
adc
sub
pushl
mov
push
mov
xchg
jmp
sub
pop
scas
xor
and
sub
ds
sub
adc
stos
cmp
enter
icebp
sbb
jne
mov
leave
comiss
lea
adc
mov
cld
jo
loope
add
or
cmp
mov
xchg
divl
stos
stos
das
fsubrs
dec
or
ror
adc
xchg
xor
push
jnp
push
push
lahf
cs
sbb
sub
lea
mov
sub
or
sub
adc
es
orl
pop
xor
dec
sub
pop
movw
or
movaps
xchg
popf
pop
fldcw
sbb
xor
and
pop
out
push
mov
enter
mov
call
xlat
sbb
stos
dec
ja
push
add
sbb
jmp
push
push
jg
sub
je
dec
fwait
setns
and
mov
inc
test
pop
or
mov
pop
sbb
and
adc
pop
lahf
adc
aaa
data16
sbb
loope
notb
pop
jl
ret
rcrl
xchg
mov
popa
sbb
cmp
jge
cmp
xor
cmp
cmpsb
lods
mov
mov
xchg
daa
add
inc
cmpsl
gs
aas
xchg
push
adcb
xor
adc
aaa
pop
les
xor
mov
aaa
stos
arpl
fisttpl
mov
out
push
pop
out
or
jmp
jbe
xor
call
xchg
jge
xor
mov
lret
shlb
movsl
sub
or
icebp
loop
add
push
leave
and
jmp
loop
popf
jnp
cmp
xlat
imul
xor
mov
jle
xor
js
xchg
mov
adc
lret
adc
mov
or
test
adc
jl
iret
in
mov
push
fs
sub
testl
push
scas
call
pop
jns
sbb
mov
bound
inc
clc
push
pop
xor
fisttps
lret
push
push
xchg
xchg
sbb
ret
hlt
sbb
aad
int
sbbl
jno
push
push
scas
jns
inc
adc
call
cmc
hlt
and
and
shrb
xor
push
dec
aad
das
iret
cli
ret
push
xor
sti
loope
pop
push
jmp
sarl
or
xor
hlt
in
cmpsb
scas
jne
push
addr16
jbe
mov
test
jmp
subb
push
js
jg
inc
push
or
and
adc
dec
pop
and
ficompl
xchg
outsl
cmp
sub
outsb
mov
inc
xor
or
ja
mov
xchg
push
pop
push
sub
lods
js
cwtl
jns
test
jne
jmp
je
push
mov
shlb
gs
stos
and
stc
roll
xchg
push
xchg
and
icebp
mov
les
movsb
sahf
mov
mov
cmpl
xor
dec
aam
mov
or
cld
orl
adc
push
and
call
push
xchg
cld
or
cmp
cmpsl
pop
add
adc
and
xchg
fldcw
movsl
sub
imul
push
adc
hlt
xor
js
lds
dec
sub
inc
mov
adc
add
sub
sub
add
mov
xor
cmc
jne
or
mov
pushf
mov
int
scas
cmpsl
test
scas
add
mov
pop
aad
xor
popf
into
mov
test
rclb
dec
rclb
jl
push
mov
push
dec
rol
jbe
sub
jmp
test
fs
and
mov
lret
adc
clc
jg
adc
xchg
dec
call
mov
push
movsl
int3
sbb
or
inc
sbb
shll
inc
sarb
mov
int3
add
and
add
je
and
push
rcrb
sti
hlt
or
insl
arpl
and
ss
push
pop
push
inc
test
or
rorb
inc
iret
and
mov
push
jmp
sub
xor
rclb
ret
dec
adc
xchg
mov
outsb
popa
je
jb
pusha
lods
jge
enter
notl
push
aaa
or
jmp
jmp
and
add
add
jno
lds
sbb
lahf
insb
cmp
je
cmp
jne
pop
push
lcall
sub
int
es
mov
inc
imul
push
cmp
mov
dec
push
rcll
or
or
mov
sbb
fsubrp
adc
out
mov
sub
adc
icebp
or
lds
push
imull
xor
arpl
ljmp
jmp
adc
or
xchg
adc
enter
pop
movsl
das
ret
push
sbb
cmp
jl
pop
lret
cli
adc
jb
sub
push
imul
fwait
adc
sbb
cmp
sahf
jl
in
call
sbb
adc
iret
mov
clc
fs
sahf
xchg
int
cmp
ljmp
fcompl
nop
arpl
pop
popf
or
sub
andl
jl
in
cmpb
lret
dec
orl
faddp
adc
sub
push
inc
in
sbb
pushf
aas
ret
lods
push
leave
add
cltd
into
jl
mov
push
push
mov
and
lcall
jmp
sub
mov
dec
shr
mov
enter
ljmp
sbb
int
jmp
mov
adc
outsl
adc
mov
bound
loop
adc
mov
stc
nop
in
pushf
cmp
sbb
andl
push
dec
out
imull
rcr
das
mov
mov
lret
mov
mull
xor
and
jl
cwtl
lea
fcoml
sub
jo
inc
inc
enter
adc
jbe
lea
mov
mov
pop
mov
mov
mov
jmp
inc
add
dec
mov
sti
inc
or
push
sub
sarb
lock
lods
test
mov
xorl
jecxz
jbe
xor
xor
ret
jmp
push
ss
lea
or
inc
lahf
fcoms
mov
push
or
jp
xchg
add
sbb
stos
xor
and
adc
sub
out
gs
push
sbb
sub
incb
add
incl
jmp
sarb
rcrl
in
sbb
test
add
cmpl
mov
push
in
push
sbb
lea
in
or
stos
lcall
ret
cmp
decb
jb
imul
pop
mov
adc
cmpb
out
xor
sbb
je
xor
xchg
mov
aaa
call
test
add
repnz
mov
or
and
mov
in
push
nop
mov
cwtl
jmp
add
jne
mov
adc
jne
mov
movsb
sub
inc
jmp
cmp
enter
flds
xchg
pop
pop
xchg
and
out
push
inc
sbb
mov
jb
addr16
enter
xchg
inc
mov
popf
movzbl
jge
mov
mov
xor
add
lock
pusha
loope
mov
sub
cmp
int3
sbb
repnz
shrl
mov
or
test
lea
out
mov
mov
adc
subl
xchg
mov
sub
aas
lods
inc
test
sub
mov
test
test
push
mov
cmpsl
clc
sarb
pop
dec
fidivs
and
shlb
cmp
add
es
lret
sbb
pusha
cmp
in
je
lea
mov
add
mov
lock
add
xchg
sarb
inc
into
in
mov
adc
fnsave
hlt
fisttpl
rcrl
ret
fsts
inc
fnstsw
hlt
hlt
repz
fwait
pop
jne
jle
sub
mov
mov
stos
pop
sti
data16
and
push
repz
lods
jmp
orl
add
push
jmp
jp
pop
in
ds
fwait
adc
mov
cmp
sub
xor
inc
sbb
inc
mov
xor
mov
sub
and
popf
imull
push
adc
iret
and
xor
arpl
add
jmp
imul
mov
add
add
xchg
xchg
mov
add
nop
pop
outsb
add
cmp
je
ds
and
add
xchg
std
stos
or
cltd
sub
mov
add
and
cli
lods
pop
sahf
fisttpl
rcll
mov
add
scas
roll
pop
xchg
lock
pop
bnd
cmp
sub
xchg
je
jmp
adc
mov
jbe
sub
cmp
mov
push
dec
imul
cmp
fsts
call
ss
and
inc
pop
loop
push
dec
xchg
push
and
inc
std
movntq
push
jl
js
mov
add
call
pop
mov
cmp
mov
or
xchg
and
add
sub
xchg
sbb
icebp
mov
lods
std
hlt
int3
mov
bound
test
or
les
call
mull
jl
pop
xor
and
and
mov
jne
inc
gs
pop
nop
movb
ja
ret
adc
mov
movsb
test
push
push
mov
hlt
outsb
pusha
call
jns
mov
nop
int
lock
pop
out
ss
jp
jmp
stc
push
orb
cmp
push
xor
pusha
sub
add
xor
sbb
sub
xor
int3
movsl
add
push
call
fnsave
lcall
push
sbb
inc
push
xor
rcll
dec
push
nop
push
and
mull
je
sbb
aas
sar
and
pop
ret
jmp
push
mov
dec
dec
sbb
outsl
aas
inc
and
or
mov
xor
das
jmp
test
pushf
mov
daa
not
stos
mov
call
mulb
adc
cmp
fisttps
fcompl
adc
mov
orl
adc
push
or
loopne
out
sbb
push
call
mov
push
aaa
push
cmp
pop
inc
sub
scas
in
and
add
das
idivb
xchg
adc
cld
in
das
mov
jecxz
xor
inc
js
add
mov
imul
call
sbb
mov
adc
out
xchg
decb
add
sub
popa
ljmp
lret
ds
push
mov
push
xor
clc
gs
push
pop
stos
and
out
andl
jne
outsl
cmp
cmp
add
cld
hlt
lcall
adc
add
push
jnp
les
and
xchg
or
jb
es
cmp
adc
leave
lods
incb
imul
leave
je
cmpl
test
mov
inc
or
hlt
or
jge
jnp
cmpsb
mulb
aad
popl
jne
jle
sub
and
or
pop
sub
filds
or
xor
jmp
arpl
rcll
lods
gs
or
adc
inc
sbb
ficompl
push
jl
mov
jp
or
mov
dec
lock
in
enter
sbbl
push
clc
ja
test
cmpsl
in
mov
incb
cwtl
popa
or
test
xchg
and
add
outsl
push
loopne
inc
mov
enter
and
in
inc
inc
mov
add
test
mov
jb
jae
jbe
test
or
popa
insb
jne
ret
dec
jo
cmp
aas
outsl
push
cmp
sbb
push
dec
cli
jns
jns
push
push
dec
nop
mov
adc
inc
iret
cli
je
pop
aam
cmc
and
and
test
scas
sbb
sub
sub
mov
shll
jo
arpl
cmp
add
call
jmp
pop
push
pop
cmpsb
dec
and
sbb
push
sub
push
pusha
dec
daa
mov
cld
xor
daa
je
lock
dec
dec
or
adc
clc
jne
sub
data16
and
pusha
mov
adc
push
nop
inc
mov
repz
not
jae
inc
loopne
aam
ret
sbb
mov
daa
pushf
stos
and
inc
add
stos
or
xchg
sbb
add
or
loopne
xor
jmp
pop
out
icebp
testl
push
jge
push
inc
jmp
cmp
jge
pop
insl
jbe
jne
xlat
xchg
inc
or
sbb
and
sahf
gs
scas
loop
cmp
sbbb
sbb
inc
mov
aaa
jns
xor
and
cli
mov
mov
or
jmp
xlat
push
pop
loopne
in
lock
stc
scas
test
push
movsl
loopne
pop
cmp
sbb
movl
imul
fisttpll
loope
cmc
xor
mov
sbbl
cmp
insl
ret
ds
jne
mov
div
cwtl
enter
jp
mov
lock
dec
clc
out
lock
mov
add
push
or
or
outsl
mov
nop
mov
jg
incb
out
dec
xchg
mov
lods
cld
or
inc
pop
clc
mov
xchg
mov
out
je
xlat
sub
or
add
lea
test
dec
push
cs
mov
dec
jle
adc
cmp
inc
sbb
mov
nop
push
repnz
mov
sub
xor
lcall
xlat
adc
mov
pop
sub
in
test
adc
cmpsl
test
sbb
and
inc
push
and
and
sbb
aaa
inc
sbb
push
stos
or
and
movl
adc
stos
mov
xlat
out
and
fisubs
jge
test
mov
add
lea
pop
push
and
add
ss
test
add
push
pop
lret
ss
push
xlat
insb
mov
stos
fnstsw
inc
lods
shrb
js
push
sub
and
pop
push
mov
cmpb
mov
notl
pushf
movsl
popf
push
daa
pop
lret
ret
into
mov
outsb
push
test
sub
mov
test
adc
jmp
pop
out
xchg
push
inc
andl
mov
dec
mov
push
adc
and
aad
js
outsl
mov
pop
lods
inc
mov
in
xor
stos
int3
xchg
or
popf
push
xchg
pop
notb
adcb
mov
jle
push
inc
outsb
cmp
mov
cmp
push
and
inc
push
les
adc
lds
out
or
push
or
add
cmpsb
pop
pop
std
aam
xchg
cltd
std
fistpll
in
xor
cmp
and
jne
xchg
mov
mov
sarb
outsb
imul
sbb
adc
inc
inc
xor
push
aam
inc
push
fmuls
mov
mov
adc
push
adc
push
mov
sub
push
adc
dec
shlb
ret
mov
sahf
mov
je
jl
jne
out
adc
mov
ret
shr
loop
in
pop
inc
gs
xchg
cmp
push
lahf
push
lea
mov
std
xchg
push
mov
or
call
imul
test
xor
cmpsl
jns
in
pusha
in
inc
jns
std
insb
cmpb
sbb
adc
and
popf
fsubrs
divps
push
dec
test
ret
pop
push
imul
jne
jae
outsb
push
jge
xor
pinsrw
mov
push
or
adc
stc
nop
push
sub
dec
adc
inc
stc
sbb
or
add
divl
stos
popa
sub
adc
aaa
call
push
inc
xor
mov
xchg
sub
jcxz
push
push
nop
adc
es
es
call
iret
jecxz
jmp
and
xor
jno
push
imul
ljmp
shr
xchg
xor
call
cmpsb
cmp
add
add
push
mov
and
loop
push
inc
jns
fstl
sbb
xchg
scas
ror
ds
push
dec
jl
in
push
mov
mov
jmp
lods
jae
stc
pushf
xchg
inc
mov
in
dec
test
clc
pop
lahf
mov
gs
dec
hlt
push
mov
mov
cwtl
pusha
popf
add
call
ficomps
dec
je
iret
and
pop
lea
fwait
or
ja
loopne
push
scas
inc
stos
push
aaa
inc
jge
pop
ja
call
test
aas
inc
addl
jle
xchg
jno
sub
push
push
lcall
dec
xor
mov
xorb
rcrl
add
pop
cmp
fmuls
divl
adc
mov
mov
add
ja
call
aam
cli
enter
adc
movsl
cli
aas
and
jo
xchg
sbb
fwait
jmp
dec
sbb
repnz
xorl
pop
in
jp
xchg
xor
cmc
mov
adc
pop
xor
aam
pop
in
sub
push
inc
das
mov
cmc
in
dec
fadds
dec
lock
jnp
or
lret
and
inc
push
inc
jle
inc
inc
pavgw
push
xchg
enter
jmp
jns
pop
pop
and
inc
andl
faddl
push
jp
call
sbb
test
iret
repnz
mov
xchg
xchg
daa
and
lods
movsb
inc
lahf
pop
adc
sub
repnz
fdivrs
push
out
cli
std
mov
test
mov
inc
dec
dec
xchg
xor
pop
fbstp
mov
pop
sbb
jmp
or
cmp
pop
adc
xor
insl
dec
sbb
or
adc
add
and
push
dec
test
loopne
pop
push
pop
addl
mov
xor
push
mov
cli
movsl
adc
cmp
in
adc
movsl
dec
or
xor
and
int
sbb
jns
repz
mov
pop
shl
adc
adc
adc
mov
call
mov
lcall
push
aad
mov
jne
jmp
mov
and
and
mov
pusha
sub
test
dec
jne
daa
jge
cmp
lods
sbb
mov
jmp
aas
test
ss
jl
sti
xor
mov
mov
mov
jg
push
and
cwtl
inc
movsb
test
mov
mov
jmp
test
lahf
inc
dec
mov
pop
sbb
jmp
je
mov
push
shrd
add
sbb
push
xor
mov
jne
sub
or
adc
add
and
inc
aad
pusha
jp
mov
mov
push
inc
icebp
mov
test
pop
pushf
pop
aaa
nop
xchg
lock
mov
and
or
add
loopne
or
js
add
adc
sub
adc
lods
inc
jl
xor
dec
mov
xchg
inc
rorb
cli
push
popf
jle
dec
adc
sbbl
sbb
adc
nop
mov
dec
xchg
nop
inc
mov
push
loopne
push
xchg
sbb
addl
loop
push
sbb
push
push
mov
je
and
xor
mov
roll
push
cmp
lahf
sub
pop
mov
ja
jno
dec
push
add
or
das
push
mov
add
dec
nop
orl
jp
cmp
dec
lock
inc
pushl
lods
daa
push
fisubrl
sub
mov
shrb
push
or
mov
test
and
movl
fs
sbb
adc
adc
and
clc
fs
fnstsw
lcall
xor
add
inc
ret
je
fsubr
dec
stos
test
gs
sbb
clc
jecxz
xor
jo
mov
pushf
jge
cmc
push
inc
jmp
aaa
or
jg
pushf
inc
mov
sbb
or
fldenv
cmp
or
lret
and
or
xorb
rcrl
push
or
push
add
xor
lds
jmp
xor
lea
pushf
adc
test
roll
adc
sub
xchg
or
stos
enter
jo
aam
pop
scas
add
cmp
jae
es
mov
ficoms
xchg
stc
or
jge
in
mov
lds
push
lcall
loop
mov
add
in
ljmp
jl
push
or
and
lds
test
inc
dec
std
dec
xchg
or
jmp
adc
adc
hlt
out
mov
das
adc
in
jne
ret
dec
add
adc
and
fwait
lods
scas
push
mov
test
cmp
call
adc
sbb
push
or
xor
stos
daa
push
cmpsb
fsts
inc
int
pop
daa
sub
cmp
add
shrb
xchg
xor
and
push
mov
jne
push
sti
sub
imul
mov
pop
pop
out
imul
cmp
adc
nop
adc
cmpsl
popa
xor
andb
test
xchg
mov
push
pop
jne
dec
sti
out
imull
test
das
lret
jmp
mov
or
xor
xchg
xor
xchg
mov
je
push
call
add
sbb
push
enter
mov
cltd
daa
cld
mov
push
testl
sti
movsl
call
push
push
mov
xlat
popa
call
je
mov
out
lods
pop
or
call
push
in
sub
and
sub
enter
movsb
adc
les
cmp
outsb
adc
orl
sbb
mov
hlt
and
inc
inc
adc
mov
xchg
mov
je
mov
sub
test
add
mov
cs
in
mov
jne
mov
jle
push
movsw
jne
nop
mov
dec
cltd
push
lret
testl
and
xchg
cwtl
inc
js
inc
xlat
paddusw
mov
cltd
dec
sub
pop
jmp
movsl
leave
push
shll
pop
and
negb
jg
fldenv
jp
and
mov
add
push
jecxz
cmp
mov
dec
aam
mov
stos
and
dec
das
es
data16
dec
push
and
imul
mov
mov
and
sbb
insb
adc
sbb
imul
dec
fstpl
sbb
jmp
or
jp
fsts
xor
mov
inc
add
dec
jnp
mov
adc
adc
xchg
adcb
fldt
insb
sbb
xchg
mov
testl
ljmp
adc
jge
push
fldenv
add
stc
iret
push
or
and
xor
cmc
xchg
mov
sub
lret
cwtl
mov
add
xor
xor
mov
js
stos
inc
popa
outsl
or
mov
punpckhdq
sarb
xchg
mov
mov
adc
sbb
cmp
inc
mov
add
pop
adcb
sub
fsubr
inc
or
push
pop
mov
mov
imul
fwait
imul
andl
sub
mov
sbb
cmp
dec
loop
test
pop
mov
sti
xor
popa
in
imul
jo
js
add
je
cmc
in
lds
xchg
xchg
adc
imul
or
sbb
jbe
int3
push
inc
popf
call
popa
movsl
inc
inc
jge
jmp
daa
in
test
xor
push
sbb
push
push
stos
sbbl
test
push
inc
mov
mov
xor
call
dec
xor
fnstsw
add
shrb
mov
jbe
push
pop
adcl
xchg
dec
sub
push
cmpb
push
pop
adc
mov
push
mov
std
mov
sub
movsl
adc
mov
adc
sub
pop
enter
shll
nop
insl
out
push
jl
adc
data16
push
cmp
lahf
push
mov
fucom
or
dec
sub
test
add
dec
and
dec
sub
mov
push
dec
push
push
nop
push
imul
fsubrl
aad
and
leave
lock
cmp
push
xchg
enter
icebp
pop
ds
inc
and
je
or
sub
nop
xchg
mov
push
ljmp
inc
and
jl
push
sub
push
xor
loopne
arpl
cmp
push
enter
adc
mov
enter
sbb
mov
sub
jl
lea
mov
sub
insl
mov
aas
testl
sub
mov
cwtl
jl
push
loopne
lods
repz
xchg
inc
push
and
xchg
cmp
push
test
jmp
sbb
and
lods
jno
adc
pop
dec
leave
xchg
push
jmp
in
rorb
push
test
jmp
push
sarb
sbb
push
cmpl
aas
movsb
mov
enter
push
push
bound
mov
xchg
leave
pop
rcrb
xor
pop
jmp
xor
scas
jb
sbb
enter
int3
or
add
mov
add
add
mov
sti
pop
jmp
je
inc
incl
addb
psrad
jne
ljmp
cmp
inc
jb
jmp
mov
pop
mov
in
mov
xor
aaa
inc
dec
fcomps
sbb
adc
mov
roll
jmp
mov
jnp
push
mov
in
lcall
mov
or
add
xlat
lret
jbe
fsubrs
aas
pop
mov
andl
gs
or
or
mov
xchg
xor
es
stos
int
sbb
cmp
int
adc
repnz
sbb
adc
pushw
xchg
add
leave
jnp
cs
xor
pop
jp
mov
inc
popf
in
sbb
xor
rclb
mov
push
mov
dec
pop
xchg
mov
push
or
inc
dec
in
or
fs
or
inc
enter
and
xor
bound
jae
dec
aad
cld
shl
test
jne
push
in
adc
jl
cmp
push
push
rcrl
pop
sti
inc
dec
jmp
insb
lret
ret
add
and
jae
xor
sub
fnstenv
pusha
push
call
es
adc
ja
or
outsl
sub
aas
aam
mov
cmp
mov
addb
rorb
jne
cmp
adc
mov
jp
sub
mov
pop
jmp
inc
push
popa
pop
dec
or
icebp
adc
jmp
adc
jecxz
movsl
jge
xor
clc
js
and
sbb
and
mul
cs
movsl
xchg
lret
es
fmull
inc
imul
jl
in
std
rorl
clc
inc
or
adc
jg
nop
xchg
jne
enter
push
and
sub
jp
call
call
jns
inc
push
and
sbb
inc
inc
mov
adc
dec
adc
or
lcall
dec
clc
and
sub
sbb
push
adc
and
sbb
cmp
js
mov
adc
adc
aaa
push
sbb
rcrb
in
and
hlt
jmp
and
xor
inc
dec
loopne
adc
mov
xlat
push
mov
sbb
jne
arpl
xchg
or
inc
les
xchg
jb
xchg
out
movb
or
orl
xor
sbb
cli
add
es
sub
pop
addr16
dec
pushf
inc
pop
and
push
sbb
cli
or
and
movsl
pop
mov
xchg
and
dec
mov
or
rorl
push
push
adc
mov
pop
pop
mov
movsb
pop
mov
pop
adc
mov
inc
into
adc
adc
ss
addr16
clc
out
jmp
mov
int
xchg
push
or
flds
cmp
clc
fildl
rcr
dec
lods
push
and
inc
xchg
mov
sub
add
inc
sbb
mov
or
stc
pop
sub
jmp
clc
fs
jmp
mov
sbb
pop
or
orl
out
push
mov
jmp
pop
popa
cld
inc
mov
adc
adc
sahf
adc
leave
jl
les
xor
das
jb
pop
es
es
xor
xchg
std
imul
sbb
xchg
pop
dec
pop
je
mov
inc
je,pt
stos
loop
jb
pop
and
and
jno
xor
call
out
add
mov
pop
cmp
pop
push
cmp
mov
test
push
nop
push
test
add
xor
push
mov
mov
xor
cmp
jecxz
mov
ret
push
lcall
stos
push
test
stos
add
enter
push
push
sub
and
inc
jno
xchg
xor
cmp
cmp
jge
cmpb
sub
jmp
bound
sub
pop
mov
pop
cmp
jp
cmpsb
sbb
pop
cmp
popa
in
sbb
pop
pop
push
sbb
cmpsl
sub
push
mov
movsb
xor
adc
adc
pop
iret
pushf
ds
sub
dec
and
and
jo
jl
jmp
not
pop
mov
test
les
imul
fwait
lods
add
in
ret
push
and
lret
xor
dec
sbb
test
mov
and
cmp
mov
pop
xor
leave
and
fs
sub
cld
push
cmp
or
push
and
adc
cltd
adc
sub
inc
sub
imul
cmp
mov
push
and
adc
pushf
sub
jmp
sbb
mov
imul
and
pop
pop
mov
rclb
pop
inc
imul
je
dec
lds
and
fstps
mov
jnp
clc
movsl
sub
xchg
adc
enter
jbe
push
dec
push
push
xchg
push
jmp
sahf
gs
mov
call
dec
xor
sbb
push
cmp
add
dec
enter
cmp
xchg
jae
mov
imul
jne
pop
hlt
cmp
push
sub
out
in
iret
or
inc
and
push
incb
dec
outsb
sub
mov
test
movsb
mov
lea
sub
jge
or
mov
xor
sahf
or
call
call
jmp
repnz
insb
shrb
sbb
jne
scas
iret
ret
dec
add
push
and
jg
cld
adc
add
or
imul
dec
movsb
insl
jne
int3
cmp
fsubl
push
fldl
pop
test
hlt
push
js
xchg
cmp
mov
data16
push
addr16
pop
mov
xlat
adc
inc
xor
pop
inc
dec
loop
test
dec
inc
xchg
pop
cld
jge
in
push
pop
cmc
jl
ficomps
cs
xor
push
xchg
fwait
movsl
mov
xor
ss
mov
jae
pop
loop
cld
push
pop
push
lcall
push
push
push
pop
inc
jnp
add
pop
dec
or
out
sub
add
movsl
jns
mov
adc
jmp
cmpb
mov
add
jmp
mov
push
sbb
aas
subl
jo
notl
arpl
nop
and
test
inc
adc
mov
nop
push
and
clc
jmp
mov
aad
mov
and
cld
sbb
clc
popf
pop
iret
dec
in
xchg
dec
mov
test
add
in
dec
inc
jmp
test
cld
in
xlat
mov
xchg
dec
mov
out
cmp
xlat
pop
stc
mov
mov
sub
call
cltd
adc
jnp
rcll
push
inc
test
hlt
xchg
or
inc
lds
mov
loop
push
or
mov
je
jmp
pushf
push
xchg
inc
les
loope
rolb
das
jnp
dec
mov
sbb
adc
sahf
inc
lea
fcoms
mov
lahf
lret
rcll
sti
lods
fnsave
mov
sub
or
test
and
or
or
mov
push
and
push
sarb
lods
lods
imulb
adc
and
les
enter
xor
lods
pop
adc
lds
jb
inc
xlat
shl
scas
push
imul
and
jno
inc
das
stos
adc
add
or
add
jnp
jmp
xchg
or
xor
push
adc
sub
and
inc
int
cmp
sub
imul
mov
or
jl
mov
xchg
sbb
cltd
and
jmp
mov
and
fdivs
and
pop
adc
push
std
fdivrs
mov
inc
arpl
bound
dec
call
cli
movsl
imul
jno
xchg
sbb
xchg
flds
call
push
adc
loopne
sbb
and
sub
popa
ljmp
push
jge
inc
orl
pop
or
addr16
push
add
in
push
jl
mov
repz
push
movsb
xor
clc
int3
xlat
scas
jecxz
shl
pusha
pop
push
call
add
inc
aam
inc
lea
adc
jge
xchg
imulb
cmp
lret
nop
aad
dec
push
mov
dec
int3
and
adc
jne
sub
jo
pop
mov
jmp
push
sbb
fwait
sbb
outsb
and
mov
adc
dec
push
inc
or
scas
pop
into
lea
jo
mov
adcb
movsl
or
lods
and
sub
push
out
jo
sbb
or
lods
ficomps
cmpb
rorl
sub
in
and
fidivrl
adc
push
adc
in
sbb
scas
sub
jae
mov
mov
cmp
cbtw
mov
adc
mov
jb
test
test
aam
sub
jnp
or
cmp
mov
sub
jne
sbb
pop
inc
jl
and
cmp
lea
arpl
outsb
ret
or
out
loope
jge
ds
outsl
std
sub
mov
pop
insb
mov
and
out
xor
mov
or
mov
cmpw
pop
jne
rclb
mov
out
loop
int
jg
fsubrl
inc
fstpt
cld
xchg
cld
and
jmp
popa
aas
je
dec
push
out
push
cwtl
loop
cmp
adcb
je
mov
arpl
cmpsl
shlb
inc
jb
jno
or
mov
cli
jl
jmp
in
in
iret
adc
inc
jnp
jle
popa
dec
or
mov
or
imul
outsl
and
into
inc
andb
dec
cwtl
mov
push
mov
jnp
call
cmp
lcall
push
jmp
sti
sub
roll
mov
aas
rorb
add
xchg
repz
cmp
push
xor
or
iret
pop
push
mov
dec
stos
out
sub
or
mov
mov
xchg
cmp
lods
push
mov
test
fnstenv
and
inc
push
orb
mov
jmp
dec
sbb
or
lret
pop
inc
push
push
cmpsb
xor
push
mov
dec
and
xor
jno
stos
aas
inc
test
sbb
xor
mov
repnz
xchg
jmp
inc
push
test
nop
enter
shlb
push
jo
mov
inc
adc
lds
lods
inc
adc
sbb
cmp
adc
adc
add
cmp
mov
pop
push
cmp
nop
sbb
add
add
test
push
adcb
inc
adc
sub
test
cmp
and
cmpsb
adc
inc
adc
jne
push
push
pop
sbb
sbb
jmp
aas
adc
dec
dec
fs
imul
mov
mov
sbb
lea
sbb
jmp
inc
add
enter
or
cmpb
jecxz
or
iret
shll
imul
xor
dec
fs
in
mov
cmp
outsl
call
call
mov
ror
sbb
outsl
std
loop
pop
push
aam
push
das
fdiv
jp
lea
mov
loopne
push
call
add
adc
mov
outsl
mov
cmp
jb
xchg
jmp
push
pop
push
iret
mov
jne
jp
movaps
aad
or
test
pop
mov
and
enter
or
jmp
push
jl
add
fdivl
or
xchg
push
xor
push
mov
les
adc
jb
imul
mov
xchg
dec
mov
and
or
popa
push
pop
stos
adc
sub
jne
aaa
push
xchg
pop
mov
mov
push
mov
js
push
jmp
or
jmp
sub
and
push
push
shr
jnp
les
jmp
mov
test
and
and
and
mov
popa
add
jmp
add
add
jle
mov
xor
data16
xsavec
fiadds
jmp
movlps
xchg
cwtl
out
adc
addl
mov
or
adcl
je
stc
gs
sarl
pop
aam
xchg
mov
ret
sub
daa
sbb
inc
stos
arpl
jle
xor
add
xchg
pop
adc
repnz
aas
test
jbe
add
inc
mov
fimuls
out
les
jg
mov
cwtl
mov
cwtl
cld
shr
mov
aas
adc
ja
inc
pop
mov
repz
adc
dec
pop
outsb
xchg
nopl
je
or
dec
ja
dec
adc
or
inc
sub
ret
mov
and
insl
lock
leave
and
xor
cmp
push
inc
dec
je
inc
dec
add
add
loope
imul
cmp
sahf
dec
xchg
inc
inc
jmp
push
sbb
or
iret
jne
test
push
mov
pusha
fiaddl
popa
mov
out
inc
fld
adc
and
ret
or
orb
aam
leave
cmp
cwtl
xor
sub
or
ret
xchg
cmp
push
or
or
sub
les
mov
mov
jl
test
shr
pop
pop
enter
mov
adcl
jmp
test
adc
xchg
and
mov
adcb
pop
fmul
pop
lret
adc
call
enter
mov
jmp
and
sti
adc
mov
sub
xchg
mov
aad
in
or
fs
and
or
inc
inc
jb
push
pop
stos
xlat
push
cmp
cmp
dec
pop
mov
or
bound
or
clc
roll
cmpsb
daa
xchg
test
into
sub
xor
cmp
jne
mov
cmpl
cmp
adc
adc
adc
push
adc
sbb
adc
pushf
dec
out
or
push
lds
or
leave
push
or
xchg
and
or
xor
push
mov
cmp
mov
testb
int3
adc
inc
mov
jno
pop
or
jmp
outsl
das
or
adc
push
mov
and
jno
xchg
mov
jle
mov
dec
lahf
push
pop
ret
mov
inc
push
jge
add
cmp
in
imul
mov
and
sbb
push
stc
sbb
das
pushl
shll
ds
adc
xchg
cmova
sarl
push
inc
pop
pop
jmp
push
push
inc
xchg
inc
adc
and
adc
nop
sbb
repz
sbb
push
call
or
movl
aam
sub
pop
rorb
mov
and
sbb
in
lea
mov
test
lods
test
pop
adc
jne
xchg
popa
dec
cmpsl
daa
jns
push
sbb
cmp
dec
sbb
test
pop
xor
xchg
jmp
nop
push
mov
movsl
and
gs
ja
out
repz
add
jmp
adc
shrl
sbb
pop
fsubr
fwait
sbb
jge
fisttpll
push
rcrb
stc
mov
lea
inc
les
lock
xchg
vmread
mov
ss
inc
dec
je
push
sbb
lcall
fstl
and
cmpb
xchg
mov
popf
imul
ljmp
jp
test
inc
dec
fmuls
inc
or
push
push
lods
mov
mov
fcoml
cmp
push
push
sbb
jmp
mov
dec
jg
mov
fsub
or
aas
cmpb
pop
jo
pop
movl
mov
jbe
add
sub
pop
adc
addb
pop
add
ret
jecxz
test
xor
inc
std
cmp
xor
daa
sub
arpl
sub
jecxz
ljmp
xor
jnp
dec
shll
and
mov
cmp
cltd
jle
shlb
shlb
hlt
sbb
mov
out
sub
mov
push
js
push
leave
loopne
push
mov
call
mov
adc
add
jmp
xor
lock
loopne
jmp
loope
ljmp
nop
js
popf
out
pop
xchg
mov
incb
loopne
das
popf
aas
daa
pop
insb
jp
stc
sbb
sbb
out
ret
test
pop
int3
jmp
call
push
xor
inc
lods
sub
fwait
inc
adc
pop
inc
fiadds
in
or
push
inc
shl
data16
pop
mov
push
test
push
adc
mov
rclb
clc
adc
and
sbbb
push
jg
movsl
roll
push
pop
orb
lods
inc
cmp
adc
orl
mov
or
addr16
and
or
pop
jge
orb
or
adc
shr
dec
mov
jb
mov
xchg
inc
js
js
mov
aam
adc
mov
jmp
adc
lea
xchg
or
or
cmp
push
push
call
xor
lea
xchg
test
jbe
mov
add
insl
inc
or
inc
lock
add
push
xchg
pop
adc
pop
jle
dec
xor
cs
mov
inc
das
or
loopne
jo
lea
mov
cli
dec
sbb
fidivrs
push
add
push
mov
or
inc
sarb
add
cmpsb
inc
push
stc
and
dec
pop
icebp
mull
or
cmp
sbb
sbbb
and
pop
dec
xchg
pusha
or
pop
xlat
in
popf
inc
xor
and
mov
or
fisubs
fdivrs
cmp
mov
add
arpl
jbe
pop
dec
xor
popf
adc
jne
add
cwtl
jmp
shlb
dec
cwtl
repz
push
jl
mov
xchg
stos
xor
jne
dec
loope
test
jns
mov
fmull
call
addl
cmpb
push
adc
movsb
jp
xor
test
cltd
subl
fdivr
xor
sbb
dec
in
testb
lock
mov
cmp
mov
cltd
data16
inc
ss
push
xor
cwtl
jmp
adc
push
je
out
les
add
decb
call
or
mov
ss
leave
sbb
fcoms
inc
shlb
insb
pop
push
jmp
xchg
pushf
and
push
cmp
pop
jb
or
mov
push
in
or
addr16
mov
cli
dec
rcll
mov
adc
xor
push
mov
rorb
dec
sahf
inc
xchg
push
dec
mov
adc
add
push
and
hlt
cld
sbbl
adcb
push
jne
dec
lret
pop
dec
inc
js
pop
mov
das
xchg
daa
and
outsl
lods
cmp
gs
sub
push
and
inc
dec
sub
push
pop
mov
into
add
push
mov
pop
jmp
loop
gs
and
mov
push
push
xor
ret
pop
lret
shl
jne
testb
sub
push
pusha
in
jmp
or
cmpsl
adc
or
clc
fs
sub
adc
jmp
jg,pn
loopne
or
das
ljmp
mov
pop
dec
jbe
xor
mov
lock
adc
jmp
cli
or
adc
jge
jae
inc
jno
or
or
movsb
add
cmpsl
jo
ljmp
imulb
add
pop
jmp
mov
lahf
mov
imul
je
ret
mov
idivl
adc
jg
mov
xchg
cld
adc
cwtl
les
mov
adc
jb
rcrb
mov
xchg
push
scas
or
dec
inc
pop
cmc
pop
mov
push
push
xchg
add
xchg
imul
in
je
xlat
cltd
jae
cmpsb
pop
inc
ds
mov
jmp
pop
incb
cmp
mov
sbb
sub
stos
mov
inc
jmp
filds
xor
imul
das
enter
inc
or
adc
xor
push
rorb
ret
or
jmp
pop
nop
dec
int3
lret
in
lock
xor
push
dec
test
inc
or
aam
add
or
sbb
add
hlt
dec
cmpl
jmp
rcll
popf
sarb
inc
je
sbb
xor
fstpt
add
sub
xchg
pusha
cmp
jmp
clc
mov
cmpsb
unpcklps
and
call
cmp
in
dec
xchg
jmp
call
sbb
std
and
jmp
adc
add
out
daa
adc
fiaddl
mov
test
xor
cmp
mov
lcall
cmp
add
and
pop
fsubl
xchg
pop
push
insb
popa
jmp
xchg
push
push
add
decl
and
xor
xchg
nop
xchg
xchg
xchg
sbb
loopne
pop
adc
sub
xorb
push
ss
jb
hlt
lds
xor
incb
xor
jmp
out
fs
lahf
fwait
pop
adc
cmp
jae
cltd
out
cld
out
or
hlt
bound
test
sti
dec
nop
jmp
dec
and
mov
jmp
pop
mov
dec
inc
push
inc
or
add
shlb
mov
call
ss
push
lock
in
cmpl
lea
mov
rcll
lock
xlat
pxor
rolb
inc
and
jo
arpl
pop
or
pop
pop
cli
and
pop
push
xor
xor
or
dec
sbb
push
or
or
jmp
or
fs
movsb
fsubrl
icebp
push
push
inc
mov
icebp
cmp
cwtl
loopne,pn
inc
clc
lock
cwtl
sub
ficompl
push
pop
enter
fldl
mov
dec
sbb
jmp
lret
and
pop
subl
jb
inc
dec
int3
mov
inc
je
jg
jmp
rorb
sub
dec
mov
jns
adc
movsb
add
mov
mov
mov
inc
add
push
adc
pop
rcl
and
push
xchg
mov
into
sbb
or
sbb
loopne
mov
mov
insb
push
fcomps
inc
push
popa
enter
out
cltd
lds
dec
es
xor
lea
sub
orb
icebp
jnp
sbb
call
fistpll
jg
xchg
jbe
inc
aam
in
push
pusha
loopne
shr
sbb
leave
or
lahf
popf
test
mov
mov
mov
mov
jno
repnz
mov
iret
add
and
sahf
lods
mov
inc
xor
cmp
imul
out
or
mov
xchg
mov
mov
push
lcall
mov
jge
imul
test
int3
push
in
jmp
call
nop
sub
fs
xor
out
sahf
shlb
jge
aaa
outsl
shrl
mov
jns
pushf
aaa
scas
xchg
mov
fs
adc
pushl
loop
or
rolb
fs
nop
sbb
adc
mov
cmp
mov
les
mov
hlt
xor
sbb
jecxz
or
int
adc
loop
call
inc
jg
or
mov
cmp
movsl
or
aas
dec
dec
mov
adc
xor
andl
cwtl
pop
loopne
push
or
push
call
dec
pop
inc
int3
push
scas
mov
mov
jno
test
and
clc
in
sub
cmp
in
xor
push
pop
adc
adc
adc
jge
inc
mov
popa
adc
xor
adc
adc
dec
aas
dec
test
adc
and
in
adc
adc
mov
repnz
out
jmp
jb
push
xor
sub
mov
or
jp
shlb
cmp
popa
iret
xchg
add
lock
mull
dec
or
stos
mov
stc
sbb
enter
mov
int3
fs
enter
push
adcb
jl
mov
dec
fbstp
cltd
dec
jnp
jno
pop
aas
mov
and
sbb
xor
out
enter
dec
inc
cmp
rolb
push
or
jmp
lods
mov
addl
stos
test
les
mov
insl
lret
jle
call
daa
and
out
adc
movsb
arpl
mov
pop
fistps
in
and
mulb
add
add
leave
jne
sub
aas
in
mov
stos
and
orl
inc
je
dec
sti
pop
add
sbb
ljmp
or
call
or
mov
dec
dec
cmc
imul
xor
cmp
in
pop
insb
inc
aaa
jmp
in
fnsave
xchg
jecxz
adc
mov
enter
mov
aaa
addr16
icebp
dec
das
stos
dec
mov
les
inc
sub
ljmp
rorb
ficoml
xchg
fistps
das
mov
adc
cmp
ds
adc
stos
aam
cmp
adc
push
sbb
roll
xor
jae
test
pop
imull
outsb
adc
and
add
mov
sbbl
sub
cmp
daa
cmp
and
sbb
inc
dec
call
hlt
cwtl
jmp
cwtl
xchg
pop
adc
aas
out
cmp
inc
test
sahf
mov
adc
push
inc
dec
sti
push
arpl
les
stc
hlt
adc
outsl
pop
xchg
add
and
stos
jl
movsb
adc
gs
imul
push
add
xor
add
and
push
pop
sbb
pusha
adc
in
and
repnz
and
mov
lcall
mov
push
adc
pop
inc
pop
push
push
ret
xor
pop
push
nop
push
cmp
push
sbb
or
inc
pop
and
nop
or
add
sbb
pop
andb
and
std
sub
imul
adc
testl
push
scas
std
ret
jle
inc
cwtl
mov
mov
bound
mov
popf
je
call
mov
pminsw
cmpsb
adc
rorb
xchg
lock
incl
jle
jbe
jl
jb
and
pop
in
xor
cltd
fisttps
adc
lock
push
out
inc
or
or
loop
fistl
sub
jnp
fwait
xor
fbstp
pxor
xorps
adc
lea
xor
cmp
pop
and
sti
or
icebp
bound
mov
sub
or
inc
mov
dec
shl
in
sub
inc
lods
sbb
adc
popa
ds
mov
pop
cmp
or
mov
cltd
aaa
xchg
sub
adc
jmp
mov
xor
add
aad
inc
or
mov
push
jmp
adc
popf
shlb
ja
or
sub
cs
cmpsl
lret
movsb
in
sub
pusha
lods
mov
shll
and
stos
adc
xor
les
inc
jb
rcll
jmp
jmp
mov
and
loope
loopne
hlt
aam
jmp
mov
mov
inc
dec
shlb
mov
stos
outsb
pop
setbe
dec
test
aam
sbb
jl
sbb
daa
push
mov
andl
inc
enter
sti
fs
cmp
or
lds
sti
cmpsb
add
popf
add
push
jbe
imul
pop
lods
push
and
addr16
adc
mov
or
sub
es
dec
scas
lods
int3
popf
adc
lods
xor
cld
std
sub
mov
clc
push
or
mov
inc
loop
orb
add
inc
flds
inc
push
jne
lock
sbb
dec
test
nop
push
jge
fidivrs
xor
shlb
arpl
nop
data16
dec
rcrl
push
repnz
push
push
sbb
jno
adc
mov
test
cmpsl
test
xchg
xchg
cmp
test
or
lret
iret
pop
pop
fdivr
mov
dec
cmp
cs
stos
loop
in
push
notl
sbb
jne
pop
dec
and
ljmp
mov
and
gs
push
test
adc
push
test
adc
sbb
and
mov
pop
adc
inc
enter
or
stos
test
and
cmp
and
xchg
cmpsl
ror
adc
adc
bound
cmc
add
sbb
div
xchg
ss
pop
push
jne
jmp
test
mov
sbb
xchg
jmp
lahf
jecxz
shlb
add
jl
inc
inc
adc
test
jo
into
lar
stos
les
dec
adc
sti
xchg
or
in
pop
pop
lret
pop
out
call
imul
rcll
mov
ficomps
jge
in
sub
into
pop
xor
mov
push
sbb
inc
sbb
cmc
xchg
inc
lahf
mov
scas
call
adc
cmp
loope
xchg
push
cmpsl
lock
movsb
mov
lea
jle
pop
push
mov
sub
lds
arpl
jns
xor
add
out
mov
int
or
jno
ret
cmp
jmp
sbb
hlt
sub
inc
jne
stc
pop
sbb
or
rcll
and
cmp
push
rol
insl
subl
and
cmp
shr
push
les
dec
push
jle
lods
shrb
jne
push
pop
sub
nop
das
pop
roll
das
div
imul
mov
insb
addr16
lahf
push
movsb
mul
in
mov
xchg
mov
test
add
xchg
stc
xchg
dec
mulb
inc
inc
scas
lods
add
nop
call
je
loop
aad
mov
or
call
inc
lahf
test
sub
inc
mov
cmp
leave
push
jno
adc
cwtl
and
decb
jae
xor
mov
push
adc
arpl
fstps
les
fdiv
daa
in
mov
push
push
and
cld
adc
orw
adc
xchg
incb
mov
hlt
cmp
sub
addl
mov
shr
roll
pop
cmpsl
cld
and
and
mov
xchg
adc
push
pop
fcoml
fsubs
in
add
mov
std
bound
test
fstpt
sub
and
and
mov
dec
test
and
push
xor
push
inc
daa
mov
or
mov
or
das
add
stc
pop
cmpsl
psadbw
les
orl
fcoml
inc
xchg
xchg
dec
scas
imul
fdivs
xor
call
sti
lods
dec
or
fdiv
in
es
adc
lea
sbb
push
les
cmp
das
lock
test
fcmovnb
sbb
mov
cmpsb
push
sbb
test
xchg
sub
add
mov
mov
gs
pop
or
mov
mov
pop
xchg
stos
xchg
pop
mov
shr
xchg
adc
mov
jle
addr16
inc
mov
sub
cli
test
xor
test
push
add
xchg
push
gs
test
push
gs
adc
sbb
nop
push
test
push
jnp
or
pop
mov
push
pop
mov
mov
pop
cmp
inc
cmp
xor
sub
imul
clc
sbb
loopne
cmc
jp
or
aas
and
in
iret
stc
jle
cmpsl
orb
fs
mov
pop
mov
mov
lods
cmpsb
push
inc
jle
test
sub
push
pop
inc
mov
sbb
sbb
fistpll
adc
pop
mov
mov
insb
cmpsb
shlb
fsubl
mov
stos
bound
call
mov
sbb
and
addr16
outsb
fdivr
sub
test
jmp
lods
dec
negb
ficoms
dec
scas
seto
sbb
call
jo
scas
clc
mov
sbb
and
inc
add
mov
cmpl
jbe
std
mov
push
pop
push
jmp
stc
push
adc
mov
mov
aam
or
rcll
cmp
cmp
mov
mov
repz
jmp
jle
xorl
mov
push
dec
adc
mov
dec
rcrb
fsubr
dec
and
jle
jns
cli
ja
mov
xchg
js
loopne
in
repz
in
push
mov
std
push
mov
and
loop
push
push
sub
imul
jmp
mov
xchg
jl,pn
mov
les
and
cmpsb
incb
adcl
mov
dec
inc
clc
popa
mov
fcoml
popf
xchg
add
movsb
cmp
fsubr
inc
je
stos
stc
push
jo
or
faddl
add
push
dec
test
xchg
cmp
testl
xchg
lods
rcrb
movsb
fcomps
mov
cmp
inc
repnz
lret
inc
mov
movsl
subb
inc
movsl
cmp
jbe
call
das
ljmp
pmaxub
push
adc
testl
lock
lods
les
push
sbb
xchg
xchg
das
aaa
cmp
mov
addb
add
add
ret
pop
les
or
inc
pop
mov
cmp
lock
ja
cmpsb
adc
adc
ja
daa
xor
pop
mov
push
shufps
cld
jmp
int
bound
enter
pop
lret
dec
repnz
sub
xchg
sahf
loop
or
xor
adc
enter
daa
lret
rcrl
fcom
add
andb
cmp
jle
je
mov
add
cmp
cmp
jb,pn
stos
hlt
mov
int3
cmp
aas
lods
imul
stos
mov
ds
incb
aam
jae
push
jbe
mov
mov
push
nop
addr16
pop
mov
mov
adc
or
dec
mov
push
lock
dec
adc
cs
enter
pop
dec
jmp
les
pop
jbe
lea
pop
or
adc
pop
xor
add
add
mov
fistpll
mov
jge
sarb
es
dec
push
ret
lea
insb
mov
push
lds
lcall
and
cli
das
dec
sbb
sub
xorl
int3
shr
es
das
inc
fnsave
cmp
add
sbb
addr16
xchg
int
mov
std
repz
push
adc
pop
cmp
movsl
sti
cmp
pop
lods
mov
out
loope
pop
adc
or
push
and
jl
jns
and
jb
jnp
and
fdivrs
inc
stc
fsts
cmp
cmp
cmp
cli
push
dec
rcl
inc
mov
std
clc
cmp
cmp
int3
mov
nop
aam
sub
cs
pop
jmp
or
inc
dec
adc
clc
xchg
push
fdivr
dec
nop
cltd
push
mov
icebp
push
sub
je
cmp
shrb
mov
mov
add
je
add
jl
loopne,pn
dec
push
push
jo
jmp
xchg
mov
nop
adc
sbb
mov
call
add
mov
xchg
mov
add
call
sbb
mov
dec
mov
jmp
cmp
dec
cmp
cmp
dec
sbb
cmp
xchg
int3
enter
pop
pop
xchg
jns
sarl
insl
arpl
inc
sbb
dec
shlb
jno
pop
cmp
cmc
sbb
xchg
jns
insb
and
or
push
pop
and
xor
aam
add
adc
inc
adc
cmp
adc
out
ret
loope
and
sub
dec
mov
das
in
and
push
rep
call
xchg
push
or
into
mov
shrb
enter
dec
mov
cmp
cmp
pop
dec
out
xor
incb
lret
js
push
dec
push
popa
push
sbb
loopne
pop
cli
stos
pop
in
inc
sub
rcrb
inc
out
out
cmpsb
adc
shll
iret
pop
or
lods
adc
jne
rorl
or
lock
push
pop
jmp
sub
pop
dec
push
lret
mov
and
aaa
mov
pop
pop
pop
pop
inc
push
pusha
or
in
lods
pop
jp
sub
adc
repz
push
push
cmp
cmpsl
adcl
cltd
push
test
jl
cld
je
jmp
push
mov
pop
xor
dec
adc
pop
sub
xchg
xor
mov
aas
cmpsb
mov
adc
mov
add
xor
mov
or
cltd
lea
setg
iret
cli
and
xor
mov
lret
xchg
int3
mov
pop
push
add
add
mov
pop
inc
aad
push
out
das
ds
mov
dec
inc
test
sub
test
adc
jg
call
adc
leave
adc
add
testb
pop
push
jne
mov
xorl
inc
jmp
lahf
lret
xchg
pop
pop
add
cltd
sub
sar
dec
mov
mov
dec
or
push
int3
push
push
push
movsb
inc
push
test
mov
negl
jp
adcb
sbb
jmp
xchg
clc
jmp
xchg
pop
adc
ljmp
adc
sbb
xchg
pop
cmp
jb
ja
pusha
lret
jae
push
int3
jl
xor
movsb
lret
loope
xor
inc
sub
sbb
or
shr
test
divl
loope
cld
fs
or
call
jp
fnstcw
jmp
xchg
adc
js
pop
ds
add
jmp
dec
dec
lea
cltd
xchg
xchg
and
or
fidivl
jbe
xchg
jbe
dec
xchg
dec
sub
inc
add
mov
adcb
jmp
adc
add
shl
or
stc
neg
loop
jmp
cmpsb
sbb
mov
inc
push
xchg
dec
xchg
push
jge
and
pop
sbb
sbb
clc
and
sub
jmp
inc
jo
icebp
enter
jg
lods
push
out
xorps
stos
or
pop
into
pop
nop
sbb
divl
out
jecxz
jne
sub
pop
mov
test
fcoml
aaa
in
xor
cwtl
mov
mov
fisttps
push
cltd
xor
fdiv
cld
mov
aam
jmp
xorb
std
movsl
jno
popa
dec
sub
mov
cmp
std
pop
and
iret
icebp
in
lds
pop
mov
mov
jg
jb
mov
and
jl
push
push
or
xchg
jecxz
and
pop
in
das
sub
clc
ret
bswap
ss
imul
cmp
add
test
lods
push
adc
in
and
out
push
sbb
cmp
pop
inc
add
xor
xor
jle
or
jne
inc
pop
leave
cmp
pop
fsubrl
push
pop
pop
adc
flds
push
clc
or
arpl
stos
xchg
pop
mov
sbb
or
cmp
bound
cmp
int3
add
pop
mov
mov
add
mov
mov
sahf
call
test
mov
call
repz
jne,pn
lods
inc
mov
lahf
iret
inc
or
and
lock
sub
test
sti
add
pop
fs
and
imul
sub
and
daa
push
mov
adc
out
or
jno
jmp
mov
lods
push
and
pushf
mov
lea
mov
inc
pop
or
test
sub
cmp
add
xorb
or
jp
xor
push
sti
or
pop
and
rclb
dec
or
cmpsl
icebp
insb
cld
mov
es
xor
adc
mov
repz
add
cmp
jbe
movhps
sub
xchg
mov
add
scas
fs
adc
and
xchg
das
push
push
loopne
lods
or
pop
faddl
adc
sub
pop
adc
and
pop
out
clc
mov
jmp
icebp
push
fistl
xor
push
xor
mov
fildl
inc
fildl
arpl
xchg
mov
xchg
jge
dec
mov
or
sbb
jmp
frstor
adc
mov
dec
add
cmp
out
add
dec
xor
and
pop
sbb
aaa
jmp
lret
mov
rclb
call
xchg
mov
sbb
jmp
addr16
xor
mov
mov
xchg
test
inc
push
push
sub
adc
add
dec
jns
add
pop
aam
push
inc
jmp
je
mov
push
adc
inc
or
rorb
mov
jmp
in
mov
add
inc
cmp
sar
and
sub
add
and
add
sub
bound
adc
dec
add
addl
push
push
jge
push
pop
ret
inc
daa
jl
sub
or
dec
or
cmpb
xor
xor
dec
jb
lock
lock
push
aaa
sti
and
decb
jge
push
hlt
dec
dec
movsl
in
out
dec
lods
jp
and
mov
push
test
mov
sub
test
pop
mov
int3
test
push
xor
push
call
xor
aas
lods
pop
test
in
xor
imulb
sbb
xor
xor
sub
aad
sbb
xchg
sbb
int3
push
shlb
orl
add
pop
arpl
in
jge
in
lahf
hlt
test
in
insb
push
adc
lods
cld
dec
dec
adc
push
mov
imul
loop
in
pop
pop
loop
xchg
inc
test
repnz
sbb
xor
pop
sbb
mov
jmp
sub
jmp
sbb
push
mov
xor
add
dec
rclb
stos
stc
push
cs
test
mov
loope
jecxz
pop
push
imul
in
pop
aaa
mov
loopne
popf
jg
xchg
inc
fstl
lea
rcll
test
add
inc
jb
dec
lock
pop
repz
es
testb
xor
mov
or
pop
mov
roll
loop
push
popf
iret
sbb
mov
xor
add
scas
movsb
and
or
inc
je
mov
bound
enter
sbb
jmp
mov
mov
je
or
mov
push
out
test
sub
imul
jne
xchg
cmp
js
or
adc
add
jns
iret
pop
push
popa
call
leave
and
in
push
push
adc
iret
lods
ds
push
pop
ret
mov
sub
mov
repz
sbb
les
test
or
sti
push
es
cmc
push
or
subl
adc
arpl
xor
jl
xor
bound
inc
lea
cmp
cmp
dec
orb
sbb
inc
adc
dec
sbb
daa
inc
cmp
inc
das
dec
mov
mov
mov
fcompl
in
jno
pop
sub
sar
daa
pusha
pop
test
xlat
adc
test
int3
cmp
es
ds
xchg
cmpsl
push
cs
push
xchg
loop
jnp
xor
mov
scas
pushf
xchg
data16
mov
fcomp
aad
jb
std
push
push
dec
jo
add
aam
stc
mov
shr
bound
and
ljmp
pop
leave
xchg
sub
jnp
mov
dec
and
leave
je
mov
inc
adc
cs
add
fs
inc
jecxz
roll
mov
mov
das
test
inc
mov
sub
add
dec
adc
sbb
mov
cmp
scas
sub
fwait
adc
add
gs
cmpsb
adcb
aad
mov
xor
push
adc
push
and
or
pusha
and
inc
lahf
sub
jp
or
xor
or
push
movsb
dec
sub
mov
cmp
adc
adc
push
mov
lret
movsb
fstpl
pop
movups
cmp
add
jp
cld
sub
xchg
push
sbb
jp
mov
or
stos
pop
lock
push
push
fwait
mov
repz
jbe
lahf
dec
dec
filds
and
mov
add
loopne
cwtl
enter
adc
out
adc
cwtl
jp
in
sub
mov
inc
test
sub
movhps
push
mov
pop
in
cmp
pop
mov
push
lret
xor
lds
es
test
mov
fistps
lods
cmpb
fmull
lock
mov
stos
mov
and
xchg
mov
data16
dec
xlat
dec
push
adc
in
cmpsb
in
xor
xor
test
mov
movl
dec
pop
cmp
push
xchg
je
push
movsl
cmpsl
sbb
xchg
call
jg
push
or
js
xchg
je
inc
adc
shr
ret
shrb
adc
aas
lahf
push
movsl
cld
mov
push
std
adc
add
add
dec
bound
fimull
adc
sbb
xchg
xchg
jmp
or
sbb
pop
sar
jne
mov
cli
jno
mov
add
ds
daa
mov
mov
and
mov
cmp
cmp
scas
pop
stc
pop
sbb
mov
xchg
inc
scas
push
or
dec
daa
lods
adc
xlat
and
adc
sbb
push
dec
add
lret
call
push
lods
jg
inc
sub
xor
bound
cs
sub
jle
cltd
push
xor
outsb
in
xor
and
jae
ss
in
mov
dec
ret
lret
mov
dec
sub
pop
cmp
jae
push
outsl
xchg
rdpmc
leave
stos
inc
jnp
xchg
mov
pop
sub
xchg
mov
sub
movsl
pop
outsb
adc
or
adc
pop
lock
je
ja
xor
push
mov
lret
test
sbb
jne
sahf
and
mov
imul
xchg
movsb
or
or
adc
data16
adc
lea
jmp
arpl
js
adc
adc
outsl
mov
sbb
jp
hlt
mov
xchg
or
pop
jl
push
mov
xchg
xor
add
cli
jmp
push
aaa
xchg
ds
insb
movsl
or
or
push
jb
dec
aaa
mov
bound
or
jmp
jle
cmp
inc
mov
push
dec
aam
aas
in
pop
sbb
adc
clc
pop
scas
addr16
je
popa
cld
jl
push
mov
xor
adc
cli
ret
in
adc
mov
mov
sub
pop
mov
sbb
fwait
sbb
ss
add
jp
adc
add
mov
subb
movl
xor
pusha
sbb
dec
rcrl
test
or
sub
test
jecxz
dec
sbb
push
dec
lret
cs
inc
cmp
adc
jbe
shlb
or
adc
insl
push
adc
push
sub
adc
sti
dec
inc
lea
cmp
inc
arpl
inc
or
dec
imul
movsb
iret
jbe
sbb
adc
adc
sub
enter
xor
jb
pop
sbb
mov
sbb
orl
cmp
sbb
rolb
jmp
lea
push
jne
mov
or
jb
repnz
mov
nop
sub
fs
pop
fldt
loopne
mov
inc
cmp
and
cwtl
and
aad
dec
subl
dec
loope
leave
add
add
jle
xchg
and
xchg
shrl
mov
out
pop
or
test
cs
sbb
cmp
inc
or
sahf
sbb
sub
out
sbb
test
mov
fstpt
dec
xchg
aaa
jmp
xor
imul
shufps
dec
iret
pop
adc
push
push
fwait
or
ret
push
pop
loop
push
jns
stc
fildll
and
xchg
fcmovnbe
pop
and
adc
mov
sbb
sarb
or
adc
push
outsb
into
dec
push
int
lds
jmp
notb
or
mov
pop
clc
xchg
cli
inc
adc
adc
pop
xchg
ljmp
or
in
push
je
push
and
push
ds
cmp
pop
pop
xchg
dec
imul
xchg
push
adc
mov
xor
out
adc
mov
xor
push
int3
xchg
push
dec
mov
cli
cwtl
movsb
insl
test
add
push
rorl
stos
adc
xchg
jmp
repz
jge
lcall
jle
cmpsb
xchg
std
scas
mov
stos
cmp
mov
stc
push
out
daa
push
jmp
or
push
jne
mov
daa
sbb
fwait
movsb
cmp
xchg
sub
mov
pusha
movsl
push
in
adc
popf
test
cmp
cmp
enter
js
insb
or
xchg
add
push
push
call
cmpsb
popf
push
mov
pusha
xchg
jle
mov
jae
cmp
and
movsl
adc
out
xchg
cmp
lea
jg
add
les
push
movsb
cmp
mov
xor
shrb
pop
push
jmp
mov
adc
pop
mov
ret
inc
mov
ja
mov
std
mov
push
push
lcall
dec
rorb
mov
pop
aad
dec
mov
xchg
adc
sub
sbb
mov
xchg
je
push
jmp
xchg
or
dec
dec
dec
lock
adc
push
hlt
test
dec
in
int
inc
or
data16
xor
add
push
mov
and
xchg
and
pop
or
data16
lea
subb
sbb
and
popa
cmc
or
icebp
xor
adc
jp
push
mov
pop
push
cmpl
pop
xchg
cmpsl
mov
loop
and
into
outsl
inc
mov
add
cld
clc
mov
je
pop
mov
cmpl
mov
pop
dec
std
das
push
sub
fwait
xchg
pop
or
bound
sbb
jnp
push
push
sub
aas
cmp
repz
ljmp
bswap
mov
icebp
push
fwait
push
rcl
jg
and
jmp
in
add
adc
cs
push
add
mov
add
out
pop
or
pop
xor
imul
pop
or
adc
imul
xchg
cli
push
aas
inc
shll
jb
xchg
jns
hlt
stos
pop
ja
inc
mov
testb
push
sbb
dec
xor
sbb
jmp
push
inc
pop
xlat
inc
pop
cmp
fcomps
sbb
stos
xchg
fsts
push
cmc
dec
jae
sub
sub
inc
jno
mov
test
xchg
mov
call
xchg
scas
mov
loopne
add
and
fcomps
cmp
add
mov
jns
xor
mov
call
jb
fmull
adc
pop
xor
sbb
push
ficoml
mov
xchg
test
inc
jmp
aas
adc
mov
inc
fidivl
pusha
pop
movsb
jle
and
or
imul
and
mov
pop
aam
and
xchg
and
xchg
mov
dec
sub
out
lods
adc
pusha
jns
push
sbb
inc
andb
lcall
ret
mov
movsb
push
js
jl
orb
fnstsw
leave
ja
mov
stc
shll
je
push
shlb
mov
sbb
push
mov
fimull
inc
cmp
xor
xchg
out
jecxz
fldl
push
dec
std
pushf
popf
cmp
pop
mov
test
jecxz
mov
popf
cmc
adc
cltd
out
out
fs
and
dec
ret
dec
popa
sbb
or
adc
or
dec
add
cmp
inc
mov
adc
push
jl
push
and
push
je
push
inc
mov
pusha
pushf
inc
ror
inc
xchg
jmp
mov
push
mov
add
sbb
and
dec
sbb
jo
sbb
enter
xor
mov
and
pop
test
inc
jne
adc
imulb
xchg
mov
mov
adc
adc
mov
mov
add
jg
ret
xor
add
push
and
add
adc
pop
inc
mov
and
xchg
or
xchg
sbb
adc
or
or
inc
sub
sbb
test
mov
jnp
push
mov
jge
mov
sub
mov
dec
cli
into
mov
add
shll
sbb
nop
jle
cmp
lds
clc
and
push
mov
lret
push
je
mov
inc
js
jmp
mov
mov
pop
mov
sub
test
and
lds
repnz
or
mov
push
fldt
and
aaa
or
test
ret
xchg
loope
enter
fdivs
xor
xor
mov
cli
mov
xchg
pusha
dec
adc
and
add
stc
stos
add
call
mov
cmpsl
ret
push
out
dec
in
inc
stos
adc
mov
mov
mov
dec
sbb
insb
sub
inc
daa
call
notl
adc
mov
outsb
jns
mov
ss
les
ret
mov
xchg
adcl
movsb
jmp
jmp
fcoms
and
jb
outsb
imul
jne
loope
fadd
push
sbb
dec
movsb
sub
mov
stc
mov
lods
addl
cmp
scas
add
pop
xorl
aad
rcr
cmpsl
sbb
out
add
add
or
sub
imul
outsb
and
in
jp
cmp
mov
xor
adc
xor
ja
and
jmp
inc
jb
adc
jmp
sbb
bts
cmc
push
leave
cmp
decl
lock
mov
fs
ror
push
xchg
dec
add
xchg
in
or
sbb
push
xchg
push
cmp
fistpl
enter
cmp
jne
adc
repz
jbe
repz
pop
jae
sbb
jmp
fstpl
fisubs
outsl
mov
xor
xchg
push
and
pusha
fdiv
subb
test
ja
popf
fnstsw
mov
inc
push
inc
ds
les
xlat
or
push
cmp
stos
dec
xchg
mov
aas
jb
popf
ret
mov
fstps
fbstp
xor
addr16
nop
popf
and
mov
jecxz
xchg
jp
sbbb
or
push
xchg
cmpsb
sbb
and
mov
xor
fcomps
adc
adc
out
xchg
adc
push
cs
pop
inc
add
or
or
jge
repnz
pop
xchg
push
scas
daa
ja
mov
or
fcomps
push
call
sub
xchg
popf
mov
inc
add
adc
inc
xchg
enter
adc
jmp
or
cmp
pop
xchg
adc
xchg
or
or
mov
sub
ljmp
call
stos
prefetch
jp
and
xor
repz
insl
imul
push
popf
add
pop
push
push
xor
in
push
outsb
aaa
jo
dec
in
or
xchg
and
loopne
push
push
js
push
dec
and
loop
mov
jmp
lcall
fbstp
dec
sbb
mov
push
mov
xchg
and
out
xor
jmp
cwtl
sub
lds
adc
mov
movsl
mov
or
and
xor
and
jmp
push
adc
enter
add
adc
test
mov
out
and
clc
dec
leave
repz
jle
push
ret
pushf
clc
in
movsb
push
or
push
aad
or
stos
add
sub
fldl
data16
dec
push
mov
ljmp
arpl
imul
nop
bnd
cmpl
movb
daa
mov
jmp
test
mov
jge
cmp
or
dec
ret
add
mov
cmpsl
ss
pop
pop
shlb
adc
add
push
jns
mov
pop
add
cmpsb
mov
fsubr
sub
mov
jae
adc
or
int3
lea
sbb
add
aam
adc
ljmp
lret
mov
aad
sub
je
xor
jecxz
ljmp
popf
jo
cmpsb
cs
scas
mov
add
je
outsl
jb
nop
mov
and
arpl
fildll
jle
imul
sbb
add
gs
and
imul
ret
daa
inc
insb
outsl
push
xor
push
jp
jle
jo,pt
lret
scas
inc
or
outsb
xchg
insb
or
jge
xchg
fistl
jb
and
bound
jne
push
dec
outsb
imul
outsb
and
adc
bnd
jae
push
nop
xor
popa
dec
enter
sti
xchg
jb
insl
divb
loopne
cmovb
insb
insl
ja
xor
into
addr16
inc
outsl
push
pop
push
insb
mov
inc
imul
mov
add
xchg
rolb
mov
jo
inc
or
aaa
sbb
sub
adc
jo
push
pop
adc
pusha
adc
stos
and
test
sbb
arpl
lcall
pushf
xchg
adc
and
xor
pushf
or
push
dec
popa
inc
adc
push
and
and
mov
pushf
xor
sbb
bound
inc
push
scas
movsb
dec
cmp
es
inc
mov
mov
and
das
mov
adc
sbbl
and
bswap
inc
mov
xchg
sbb
xchg
mov
mov
imull
xchg
push
cmp
lcall
cmp
adc
xchg
mov
xchg
dec
push
es
lret
sub
jo
inc
outsb
inc
js
ja
or
jbe
jl
loopne
stos
xor
pop
sub
outsl
push
test
jmp
jne
dec
and
inc
stos
sbb
cmp
stc
ljmp
push
add
xor
xor
inc
add
scas
addr16
mov
mov
sbb
xor
add
push
and
push
adc
adc
and
cltd
enter
test
lret
sub
and
inc
add
rorl
sbb
test
mov
adc
sbb
cmp
sub
inc
add
repnz
or
add
sbb
call
scas
inc
add
insb
in
out
push
insl
in
pusha
or
gs
leave
mov
pop
adc
jae
push
sub
inc
into
push
add
xor
in
inc
fwait
cs
and
bound
add
pop
cmc
or
movsl
imul
sub
xchg
jp
sbb
aad
aam
int
jo
mov
sub
jne
push
jge
mov
loop
dec
or
or
jns
push
fwait
xor
dec
arpl
cmp
dec
aam
arpl
inc
js
mov
clc
jnp
add
jno
xchg
inc
mov
xchg
call
pop
fstl
pop
jmp
mov
rcrl
je
push
andl
push
cltd
mov
repnz
jb
scas
stos
xchg
xchg
in
cli
mov
sbb
fistpll
mov
fistps
jmp
push
jecxz
js
cmpsb
dec
cmpsl
pop
and
dec
dec
push
and
out
fnstcw
inc
cmp
push
push
lahf
push
mov
push
push
inc
pop
outsb
mov
adc
cmpsl
adc
push
xchg
jnp
push
pop
xchg
xchg
loope
adc
push
data16
jne
pushf
insb
dec
sbb
pop
outsb
sti
popf
enter
cmp
shrb
inc
cwtl
mov
mov
and
test
inc
pusha
add
inc
dec
test
push
sub
xchg
xchg
mov
dec
cli
xchg
xchg
jno
outsl
cmp
int3
je
inc
and
dec
mov
cmp
addr16
cmp
decl
push
cmc
push
cmp
imul
popa
mov
and
cmp
push
test
sarl
fs
push
ss
and
dec
imul
ljmp
cmp
push
je
or
lods
ss
sbb
outsb
int3
add
or
shrl
lods
xlat
hlt
xor
leave
push
add
lcall
pop
orl
add
push
aaa
xor
mov
leave
or
inc
mov
ret
mov
mov
inc
or
and
push
jne
add
jb
dec
xchg
scas
rcrb
sbb
xorb
push
or
pop
add
xor
frstor
xchg
loope
push
repz
testb
inc
mov
test
stc
cltd
jne
sbb
or
sbb
and
or
cmp
repnz
dec
outsb
xchg
or
into
and
lcall
int
insb
and
movsb
aam
loop
xchg
in
cmp
into
dec
fisubrl
insb
rorl
adc
adc
push
in
lea
loopne
loopne
dec
push
movsb
jmp
dec
xchg
push
sub
lret
adc
loop
mov
aam
push
inc
adc
adc
sbb
sbb
and
cltd
mov
adc
aam
pop
rorl
mov
shlb
cmp
jo
arpl
adcb
imul
adc
scas
dec
lods
es
mov
loopne
sbb
ss
outsl
insb
dec
dec
mov
push
dec
push
enter
add
aam
mov
cmp
dec
enter
scas
xchg
es
sbb
jp
mov
sbb
inc
sbb
add
add
push
jbe
leave
sbb
rcrl
ss
and
mov
add
data16
sub
sub
push
cmp
jne
pop
incb
test
and
mov
xor
push
xchg
test
cld
test
dec
push
xor
stc
sub
and
pop
cmp
mov
cli
jae
stos
jo
sub
add
or
xchg
xchg
testl
sbb
sub
sbb
mov
sbb
idiv
add
pop
data16
and
repnz
adc
xor
pushf
add
pop
add
add
or
or
push
adcl
orb
push
cltd
mov
gs
adc
jl
mov
dec
adcl
or
sub
lahf
fidivs
mov
cwtl
mov
les
cmp
xchg
adc
add
loop
inc
mov
push
xor
call
push
add
adc
push
push
xlat
or
or
jge
aas
inc
push
mov
lahf
imull
lock
data16
inc
jne
push
and
jg
sub
push
ds
push
jne
pop
xor
test
mov
xor
es
or
fisttps
mov
fs
cmc
mov
pop
sbb
mov
add
mov
fbstp
sub
dec
lret
cmp
or
add
or
sub
outsl
cmpsb
ret
inc
fisttpll
push
add
add
pop
push
and
pop
in
fadds
int3
xor
rcrb
push
sbb
or
mov
insb
mov
loope
outsl
scas
add
lds
mov
rorl
imul
dec
dec
jle
mov
fsubr
add
sbb
add
sub
cmc
pop
andps
sub
jle
mov
push
dec
and
adc
sub
lea
and
movl
add
out
jne
pop
mov
xor
data16
mov
xor
addr16
loope
inc
or
adc
pop
and
fwait
cmpsl
dec
gs
int
mov
mov
out
push
xor
sub
adc
and
xchg
jns
inc
addr16
and
jno
jns
xchg
ja
cmp
jo
dec
xor
sbb
adc
xchg
mull
xor
xchg
pop
dec
mov
sbb
sarb
repnz
sbb
lahf
xchg
js
add
ljmp
pop
xchg
dec
mov
and
jl
ljmp
imul
fs
add
jmp
add
data16
add
bound
sbb
add
sub
push
sub
or
jns
add
inc
out
cmp
cmp
jecxz
add
mov
lods
addb
mov
jmp
cmp
add
lahf
test
cmp
pop
add
add
mull
add
sarl
sub
aas
in
push
orb
cmpsl
jp
je
scas
add
sub
popa
push
nop
pusha
add
mov
push
add
pop
sti
movsb
data16
cmpsb
cmp
out
mov
pop
push
loopne
add
mov
mov
int
cmpsl
sbb
cmp
lret
or
test
and
xchg
fildll
mov
adc
mov
add
push
add
xor
dec
adc
mov
sub
gs
and
xchg
push
dec
js
and
pop
pusha
add
pop
cli
andb
cmpsl
add
shlb
test
mov
mov
ret
pusha
cli
xchg
push
jno
sbb
ret
enter
push
pop
cli
add
ss
fildll
loopne
sub
jecxz
and
cmp
sbb
nop
mov
pop
sbb
jns
mov
push
or
lahf
inc
lret
cld
push
xlat
shrb
or
pop
dec
out
mov
outsl
adc
xchg
cltd
fistl
sbb
ja
cmc
dec
or
push
jns
adc
add
insl
scas
nop
stc
fadds
mov
fwait
das
insb
out
fsub
adc
pusha
lods
jns
adc
cmpsb
in
jle
ret
popa
in
sarb
mov
pop
sbb
iret
insl
repz
lahf
xor
add
push
jge
cwtl
fisttpl
xchg
xchg
fwait
mov
incl
xchg
addr16
lods
in
adc
xchg
xor
mov
lret
aad
mov
inc
shlb
pop
pop
add
in
mov
add
inc
pop
xor
xor
sahf
cmp
je
xchg
and
xchg
sbb
aad
in
cld
add
ss
mov
rcrb
popa
mov
xchg
or
mov
cld
inc
add
push
sub
pop
mov
add
aas
ja
add
add
cld
dec
nopl
movsb
sbb
lods
mov
push
leave
sub
and
pop
bound
push
mov
loop
std
add
out
add
nop
filds
inc
push
movsl
and
xor
push
inc
sbb
cs
add
adc
adc
jbe
add
std
dec
jae
xor
cld
shll
add
pop
bound
in
ljmp
lret
add
xor
test
inc
shll
les
fiadds
pushf
loope
roll
push
jp
cmp
mov
aam
inc
in
pop
imul
add
nop
inc
jne
xor
and
sbb
jb
mov
sbb
int
sub
shrb
pop
add
rorl
pop
adcb
and
cmp
lds
sub
mov
movl
adc
push
xchg
movaps
fcoms
xchg
lock
pop
dec
test
xchg
stos
filds
xchg
add
pop
jp
scas
mov
jmp
inc
or
outsb
sbb
rcll
sbb
mov
clc
mov
enter
outsl
sarb
dec
shlb
mov
push
add
sbbb
js
add
shll
les
es
cmp
rolb
sub
and
jge
ljmp
cmp
sti
inc
fldl
push
add
outsb
scas
and
and
mov
dec
pop
loope
imul
sub
or
add
or
inc
add
add
enter
adc
outsl
dec
adc
mov
mov
mov
push
test
rolb
xchg
pop
out
adc
data16
mov
lcall
jle
int3
or
arpl
mov
sub
xchg
push
push
sbb
arpl
push
ss
or
dec
test
cld
jmp
je
ret
add
jge
push
mov
lods
aad
jb
add
pop
sbbb
scas
inc
outsl
or
and
push
nop
adc
cmp
push
sbb
data16
sub
int3
or
push
hlt
das
push
push
cmc
xor
push
shrb
push
cmp
lods
push
xchg
push
and
pop
xchg
aad
xor
add
je
push
scas
mov
jl
movsb
pusha
scas
je
stos
cmp
dec
popa
xchg
ret
dec
fdivs
jp
push
jmp
mov
fists
or
sub
cwtl
push
bnd
call
mov
and
movsl
movsl
push
push
enter
and
ret
xor
inc
push
push
mov
clc
cmp
add
push
loop
xor
inc
mov
mov
or
add
movsb
xor
or
dec
pop
or
sbb
mov
data16
jp
and
imul
xchg
or
dec
std
cwtl
fwait
adcb
inc
and
xor
sbb
xor
in
dec
lea
push
jge
xchg
jg
push
xor
sahf
mov
jmp
lods
xchg
pop
dec
mov
mov
test
cmp
scas
jecxz
daa
or
dec
in
loop
rol
or
sbb
pop
scas
dec
xchg
sub
dec
push
fmulp
out
xchg
mov
nop
mov
and
push
daa
push
mov
push
inc
imul
push
lret
icebp
mov
cmp
fmul
cmpsl
shrb
mov
xor
push
aaa
out
int
stc
cmp
ds
jne
sub
xlat
iret
in
or
xor
outsl
rcrl
sub
call
sbb
jle
pop
push
sub
jp
rorl
dec
icebp
and
lods
xchg
out
fnstenv
aas
dec
mov
and
rolb
cmp
push
std
dec
aas
fdivs
xchg
push
push
push
dec
xlat
dec
arpl
add
xor
mov
push
inc
add
add
addr16
push
xbegin
mov
or
test
mov
sarl
imull
dec
mov
lea
std
and
outsl
adc
mov
pop
jo
hlt
sbb
cmp
mov
pushf
jmp
bound
push
jb
and
xor
and
mov
add
add
sub
sbb
dec
jmp
lahf
lds
push
mov
sbb
imul
inc
into
les
ret
lods
mov
pop
das
lcall
cwtl
add
jge
pop
out
jne
jecxz
in
orl
dec
movsl
xchg
mov
enter
mov
sbb
std
mov
cmp
jb
xchg
add
and
mov
push
jno
or
hlt
movsb
cmp
adc
push
xchg
pop
sbb
movsb
inc
cld
xlat
out
sahf
inc
repnz
cmp
xor
xor
push
and
push
les
xor
and
cmp
add
sti
sub
sbb
jmp
mov
std
icebp
addr16
rcll
in
stos
inc
xchg
scas
push
dec
lods
repnz
cmp
stos
mov
mov
fiadds
pop
xor
test
test
sbb
cmp
mov
mov
adc
push
test
mov
dec
test
mov
xor
inc
pushf
cmp
push
sub
decl
pop
ficoms
lods
jne
enter
push
stos
xchg
and
sbb
call
jge
push
out
repnz
test
dec
sub
push
dec
push
clc
add
lock
into
push
stos
add
les
ret
pop
mov
cwtl
inc
hlt
call
xor
lock
and
mov
dec
inc
add
cld
jnp
inc
jg
mov
xor
sbb
dec
add
clc
lret
adc
movsl
aas
adc
cmpsb
fwait
rcrl
ljmp
xchg
xor
pop
adc
mov
sub
pop
lea
or
mov
cmp
lock
push
xor
imul
push
dec
and
adc
sub
jno
sbb
jg
sarb
adc
adc
mov
mov
xor
push
ljmp
inc
adc
mov
ss
lret
test
nop
mov
xchg
jl
dec
fs
and
dec
aaa
sub
push
mov
and
pop
mov
shrb
push
push
in
xchg
inc
add
inc
or
inc
cmp
aam
test
arpl
clc
outsb
cltd
adc
jle
mov
xor
shrb
dec
mov
ljmp
sub
push
mov
and
ficoms
jbe
lcall
pop
mov
and
lcall
aaa
cmpsl
imul
gs
mov
mov
bound
adc
push
and
adc
je
push
jmp
cmp
pop
fstpl
push
jbe
call
ljmp
xor
jecxz
fstps
jmp
stc
arpl
push
leave
pop
sbb
pop
push
gs
push
inc
hlt
faddl
jg
xchg
stos
movsl
and
mov
sbb
push
outsl
roll
insb
mov
loopne
ljmp
sbb
push
fnstsw
in
push
repz
loopne
shr
sub
sbb
bound
js
clc
mov
adc
push
in
cmp
push
inc
sub
clc
dec
fistps
movsl
shlb
inc
mov
int
std
push
das
add
arpl
mov
jb
dec
shlb
cs
push
sbb
or
mov
adc
add
int
mov
in
xor
cmpsl
pushf
repz
push
push
stc
int3
sbb
push
mov
mov
cld
mov
js
and
xchg
nop
pusha
xor
push
sbb
push
push
jecxz
jg
mov
cld
data16
push
lea
or
push
jo
cld
je
xor
add
and
inc
sbb
pushf
out
je
pop
pop
mov
sbb
das
cmp
and
jne
mov
dec
dec
enter
cmp
sbb
adc
push
or
and
test
inc
xchg
sbb
and
add
ss
and
pop
out
fstpl
sahf
pop
iret
pop
int3
add
popf
pop
sbb
push
or
cmp
adc
xchg
imul
clc
mov
sbb
repnz
mov
sbb
adc
mov
inc
jle
sub
mov
sbb
cld
mov
in
lock
or
aam
fcoml
fsubrs
jge
adc
mov
inc
std
sub
repz
aaa
dec
ret
adc
and
mov
inc
mov
scas
lods
pusha
cmpb
inc
add
or
cmp
jbe
adc
adc
jno
add
xchg
add
js
xchg
frstor
add
in
push
scas
inc
xchg
pop
push
scas
xlat
adc
das
adc
push
adc
cwtl
dec
xchg
mov
add
std
mov
inc
add
fmuls
fdivrl
in
in
les
add
je
popf
xchg
dec
rorb
pop
les
xchg
mov
pop
fstps
in
sbb
scas
lret
adc
or
les
jl
and
and
movsb
sbb
clc
js
push
test
lret
pop
shl
or
inc
push
sbb
push
imul
dec
pop
jp
mov
in
repz
xor
pusha
add
or
and
inc
out
add
imul
lea
or
push
sarb
movb
push
inc
lea
bound
test
loope
je
sbbl
loope
pop
outsb
push
jnp
outsl
pop
test
inc
and
andl
hlt
xor
and
pushf
jne
jo
pop
clc
aam
mov
adc
cs
in
adc
mov
mov
hlt
adc
xchg
sub
das
mov
adc
mov
sti
sub
cmp
xor
add
in
dec
and
push
push
aam
ljmp
or
in
outsl
in
and
mov
add
aad
out
mov
push
loop
push
pop
jne
stos
dec
test
cmp
jbe
inc
or
and
cmp
adc
jmp
pop
push
scas
leave
test
pop
adc
add
insb
adc
stos
gs
ljmp
iret
dec
test
and
adc
add
cltd
jge
call
adc
mov
push
cwtl
je
or
cmpsl
push
lea
jb
xor
out
adcl
jge
inc
xchg
fists
orl
das
stos
sub
xchg
je
push
xchg
mov
repnz
xor
or
pop
test
and
xor
push
jmp
add
push
je
push
jmp
pop
enter
imull
jge
and
mov
psubsb
sub
stos
dec
and
xchg
pop
repnz
xor
and
addb
jne
gs
or
cltd
and
adc
xorl
inc
xchg
ret
mov
ficoml
mov
test
je
ja
ret
mov
std
bound
sbb
push
push
js
jbe
call
xor
adc
cltd
xor
fmuls
test
aad
push
inc
and
andb
lea
jmp
mov
push
adc
push
out
adc
aas
jns
je
mov
mov
pop
sub
mov
or
mov
out
xlat
out
clc
inc
sbb
mov
cld
xor
push
push
mov
adc
test
out
or
imul
call
ds
and
popf
nop
xchg
das
out
data16
or
and
push
mov
push
in
cmpsb
mov
or
jmp
nop
mov
push
jbe
mov
mov
add
loope
cmp
push
mov
pop
lods
ret
test
sbb
dec
nop
and
xchg
push
jno
xchg
arpl
pop
cmpsl
mov
in
pop
jmp
push
mov
dec
stos
int
mov
cli
push
pop
jae
xor
pop
lods
jecxz
pop
pop
add
data16
dec
jb
adc
dec
xchg
inc
popl
add
jle
rcrl
or
bound
adc
iret
test
or
and
ss
mov
lcall
fcomps
and
cmp
xchg
out
cmp
push
sub
adc
pop
shlb
jle
je
dec
push
lahf
pop
mov
lret
push
cmp
xchg
hlt
test
push
test
leave
lock
jae
pop
pop
std
das
pop
xchg
mov
dec
scas
mov
or
rcrl
aaa
std
or
dec
fs
in
xor
adc
and
shll
push
dec
movsb
mov
push
push
jmp
push
out
jle
sbb
sub
lea
cmp
sbb
push
call
fs
pop
inc
pop
daa
cmp
mov
fstl
sbb
add
mov
xor
cmpsb
repz
lea
decl
xor
or
and
movsb
je
ds
push
shl
push
mov
pop
cs
or
testb
ljmp
xchg
imull
mov
in
xorl
popa
xor
fidivs
mov
jmp
add
ja
push
enter
add
loop
xor
loopne
leave
lahf
jo
add
cmpl
xor
push
stc
jnp
loop
add
sbb
push
hlt
jno
add
rcl
fidivrl
pop
lahf
lock
jp
and
int3
mov
adc
leave
xlat
mov
iret
test
pop
pushf
in
shl
inc
sbb
jbe
inc
pop
loope
push
jge
dec
cmp
pop
sub
roll
mov
loopne
cmp
jb
icebp
push
sub
mov
pop
mov
push
cmp
dec
mov
push
add
dec
daa
mov
and
jg
sbbb
sbb
mov
xchg
das
pop
test
xor
dec
xor
mov
lcall
out
cmp
xchg
ss
nop
inc
mov
stc
enter
mov
cmpsl
push
in
xchg
adc
push
xor
adc
fs
adc
push
cli
lea
push
pop
xchg
sbb
popf
fs
mov
pop
mov
and
xlat
xchg
sub
stos
and
or
cmp
inc
push
popa
add
clc
fcmovb
dec
xor
scas
repnz
popa
call
andb
pusha
mov
adc
dec
pop
jae
inc
jmp
pop
mov
ja
movsl
xchg
or
adc
adc
pop
cmpsl
inc
push
dec
jle
pop
adc
test
icebp
jmp
jo
sarb
rcrl
out
imul
lods
and
sbb
or
test
das
push
inc
xor
jge
out
ret
mov
and
js
mov
nop
stc
cltd
or
mov
test
add
subb
or
xchg
push
xor
push
sub
por
push
adc
or
xor
dec
or
loope
shll
jne
dec
sub
scas
mov
idiv
xor
pop
sbb
sti
xchg
dec
push
nop
mov
sbb
daa
mov
cmpsl
test
bound
adc
xchg
push
les
cli
mov
and
xchg
pop
cmp
shlb
in
jno
cld
or
add
in
adc
call
lods
dec
out
inc
dec
sub
pop
cmp
call
hlt
aam
and
adc
sbb
pop
and
add
push
mov
psubsb
cmpsl
xor
adc
mov
dec
xchg
jns
sbb
mov
and
repz
sti
inc
and
arpl
inc
push
or
psrad
fstpl
call
push
adc
js
mov
sub
lret
and
mov
dec
call
mov
es
imul
mov
leave
pop
inc
or
sub
mov
xchg
in
fdivrl
inc
and
pop
addr16
das
and
fcmovnu
imul
pop
adc
xchg
repnz
ljmp
cmpsl
sub
or
movsl
jmp
add
jp
fsubr
clc
std
pop
push
cmp
movsb
ret
sub
push
shll
inc
sbb
jle
das
mulb
cmpsb
and
or
call
cmp
cmp
lods
inc
mov
push
push
xor
imul
clc
je
fucomip
aaa
inc
sbb
rclb
pop
popf
mov
pop
call
jp
mov
dec
or
jecxz
ficomps
xchg
and
rolb
adc
sub
xchg
out
and
mov
and
das
aad
mov
cmp
clc
mov
mov
pushf
and
adc
stos
js
push
loopne
mov
fiaddl
orb
jg
push
and
dec
mov
int
jle
cs
and
mov
cld
push
adc
jle
adc
mov
mov
andb
repnz
sbb
repnz
jo
cld
mov
in
cld
xchg
sub
or
aas
xchg
mov
push
or
pop
inc
or
pop
mov
rorb
add
call
push
inc
push
jne
push
inc
clc
mov
and
sub
adc
xlat
or
insl
xchg
dec
ret
call
push
je
pop
sbb
mov
sub
add
sbb
or
std
push
lcall
or
add
mov
sub
icebp
and
jmp
cmc
out
cmp
addb
push
jne
lret
sub
cmp
sar
repz
push
clc
out
lock
lea
pop
mov
mov
mov
and
sub
inc
cmp
lcall
mov
sub
in
fmull
hlt
pushw
mov
adc
or
adc
xchg
add
dec
decl
enter
test
push
push
inc
sub
dec
stos
les
and
cmp
push
xor
aad
inc
lods
and
fs
mov
or
dec
push
std
inc
in
popf
inc
adc
test
push
in
mov
push
js
push
pop
ljmp
das
and
mov
int3
push
add
dec
aas
push
mov
mov
mov
sarb
add
mov
inc
jmp
sub
jge
push
cli
iret
sub
sub
leave
pop
cmp
ljmp
in
dec
jg
inc
sarl
cmp
bound
jb
push
inc
lret
dec
mov
in
dec
movsl
mov
fiadds
mov
sbb
mov
insb
pop
jne
mov
jg
or
je
into
fcoml
fs
int3
mov
mov
pop
call
mov
lock
cmpsb
sbb
jg
addr16
fsqrt
xchg
cmp
icebp
lea
inc
mov
fs
sub
adc
xchg
int3
cmp
push
cmp
push
sub
xchg
lods
cmpsl
int3
nop
mov
pop
xlat
and
in
lock
mov
push
fidivrl
sub
imul
stos
hlt
xor
fcomps
or
xor
sti
jb
aam
xchg
pushl
repz
call
mov
dec
jp
add
mov
sub
xchg
dec
pop
inc
neg
cltd
testl
jb
loope
cltd
cmp
pop
add
pop
jb
xchg
daa
pop
clc
popf
pop
pop
pop
jb
call
sar
imul
mov
aad
sbb
add
in
imul
pop
test
mov
mov
and
notb
jbe
inc
add
sbb
jne
mov
imul
sub
inc
mov
jbe
leave
bound
push
add
lea
lret
xchg
cmpsl
add
mov
in
cltd
cmpsl
add
adc
in
pop
or
push
push
xchg
ret
or
and
sbb
dec
sub
enter
orb
add
jmp
aad
ret
push
aad
xor
repz
sarb
out
cld
xchg
pop
jmp
mov
adc
mov
pop
or
add
cmp
je
xchg
mov
inc
push
je
adc
andb
push
xchg
test
sti
bound
lods
mov
ja
js
mov
lods
sahf
rolb
push
pop
lcall
sub
sbb
mov
mov
test
mov
and
push
call
dec
insb
sub
shl
adc
ret
xchg
inc
or
adc
push
add
add
jne
cmp
stos
push
sub
or
movsb
or
jo
loop
mov
mov
xorl
sub
mov
faddl
and
dec
loopne
xor
mov
push
cmp
cmp
mov
cmp
pushf
rcrb
loopne
push
cltd
pop
idiv
add
sbb
data16
rcll
push
pop
loope
inc
cmp
dec
out
adc
stos
inc
jns
xor
push
popf
cld
packsswb
test
adc
cmc
stos
test
cld
sub
adc
cld
stc
mov
cli
xchg
inc
adc
adc
inc
and
fs
jb
jo
shl
stc
inc
sub
ret
sbb
lret
clc
push
inc
add
adc
dec
xor
loop
xor
or
add
or
or
movsl
inc
xor
and
cli
adc
mov
inc
mov
adc
pmulhuw
sbb
and
pop
add
cmp
xor
ss
or
xchg
scas
in
cld
cmp
and
xchg
sbb
xchg
nop
int
movb
add
adc
inc
cmc
test
jae
add
aad
adc
mov
sub
cwtl
inc
sub
rorb
popa
mov
popa
or
cmp
in
enter
jne
cmc
lcall
xor
cwtl
sub
pop
and
je
daa
jmp
mov
repz
ljmp
lods
jl,pn
sahf
mov
in
sbb
and
jmp
push
sub
cmp
loopne
sbb
fsubrl
push
sahf
mov
jne
cltd
push
sub
push
push
out
sub
ret
and
and
sbb
dec
sub
mov
call
out
adc
inc
sti
xorl
dec
sub
jns
cltd
les
add
sbb
xor
mov
iret
cmp
push
jg
mov
aad
adc
mov
test
adc
or
sbb
and
dec
adc
mov
sbb
or
mov
cmp
add
and
loopne
inc
cs
jbe
inc
and
and
stos
divb
in
adc
add
test
pop
fdivl
sbb
or
mull
jmp
pop
loope
das
jmp
jb
imul
pop
push
js
cld
mov
sahf
pop
xchg
cmp
test
cmp
and
sbb
lret
adc
cli
pop
sbb
enter
add
gs
mov
mov
dec
pop
mov
pop
std
xor
push
inc
cmp
pop
add
xor
ja
inc
jo
scas
inc
sti
imul
ss
addr16
call
or
inc
adc
scas
aam
add
sarb
push
clc
pusha
jle
mov
sbb
lea
cmc
push
hlt
sub
xchg
lds
lretw
mov
lahf
and
sbb
pop
test
lahf
xor
adc
stc
fnstcw
sbb
xorb
or
fisubs
cmpsb
pop
scas
mov
xor
xor
jmp
add
or
mov
push
cvtps2pd
aas
inc
mov
or
sbb
roll
stos
or
pop
adc
insb
dec
or
dec
notb
dec
in
andl
ret
int
popf
sub
in
fstps
mov
lea
sub
dec
or
rcll
jb
mov
xor
nop
testb
xchg
lea
popf
mov
loopne
loope
mov
dec
add
popa
clts
shl
and
inc
inc
or
es
jle
in
adc
cld
cmp
icebp
push
adc
adc
and
xchg
out
int
aad
popa
andl
dec
lock
test
cld
add
push
adc
pop
sub
mov
adc
push
push
pop
idiv
sub
outsl
call
push
mov
or
sub
inc
sub
or
inc
jmp
sbb
cmp
sarl
out
mov
xchg
adc
pop
pop
add
push
sub
jg
outsl
cmp
push
xor
data16
sub
popf
add
mov
adc
add
push
inc
out
or
aam
imul
push
cs
cmp
or
daa
mov
cmp
xlat
push
rcll
mov
pop
pop
fcomp
inc
pop
gs
jns
dec
insl
dec
adc
jb
arpl
add
add
fs
or
lahf
insb
xor
push
xor
push
mov
sub
fisubs
push
adc
add
or
add
fwait
cmp
cld
fwait
imul
sbb
xor
xor
adc
cmpsb
test
inc
xor
push
loopne
and
sti
sub
push
call
sub
jns
adc
jle
dec
xchg
push
mov
sbb
mov
mov
push
push
push
push
loopne
ljmp
dec
test
sti
imul
dec
sbb
mov
movsl
movsb
mov
rcl
popf
jge
adcl
jne
cmpl
jge
push
in
push
test
popf
ds
sub
mov
aam
push
pusha
jne
push
mov
lock
push
lds
inc
enter
or
push
add
push
pop
repnz
shrb
pop
sarl
push
push
cmp
cli
jge
sbb
sbb
sbb
mov
xchg
xor
push
in
shlb
mov
mov
jp
jecxz
lret
frstor
xchg
jbe
mov
dec
sub
movsb
push
push
xor
pop
decb
xchg
dec
test
fidivs
fdivl
pop
outsl
sahf
outsb
cmp
daa
imul
cmc
mov
push
pop
add
mov
lahf
enter
std
mov
pop
repnz
pop
out
xor
push
out
mov
xchg
mov
testl
out
repz
push
js
scas
pushf
bound
push
lahf
hlt
pop
movsl
fucomip
and
and
daa
pusha
pop
sti
jl
outsl
roll
push
xchg
insb
pop
movsl
add
insl
add
mov
or
push
dec
clc
xchg
fwait
cltd
xor
xchg
pop
pop
mov
out
cmp
aaa
popf
insb
add
rcrl
jne
push
mov
bound
pop
dec
stc
push
push
jge
push
clc
das
outsb
lods
ljmp
test
inc
add
push
add
lock
clc
mov
mov
inc
jo
xchg
leave
js
xor
add
ret
cmp
push
or
inc
mov
adc
cli
mov
shlb
rcll
bswap
hlt
push
imul
jl
outsl
mov
fwait
mov
sar
jecxz
dec
adcb
ja
fsubs
nop
fsubs
int3
xchg
mov
inc
les
shlb
xor
adc
je
stos
hlt
xchg
jmp
jp
and
scas
icebp
xchg
arpl
daa
fs
sbb
cmp
sub
adc
test
push
ds
nop
das
enter
or
int
sub
xchg
dec
push
inc
sahf
in
hlt
cmp
call
ljmp
loopne
inc
push
mov
ja
mov
outsb
mov
and
pop
mov
cmp
jg
movl
bound
sar
pop
std
pop
cmpl
sub
xchg
inc
call
std
shlb
call
pop
mov
push
cwtl
lods
repz
push
cmp
pop
xchg
out
adc
fcoml
adc
imul
out
ja
sub
inc
jne
and
sub
mull
mov
scas
mov
add
mov
mov
shrb
and
jg
jl
nop
pop
icebp
dec
inc
jl
add
lds
iret
lret
ja
adc
inc
sub
dec
inc
jb
jne
cmp
loope
push
pop
pop
xchg
dec
jmp
pop
fwait
jp
call
fimull
or
fisubl
adc
jmp
sbb
jns
movsl
pop
leave
shrl
outsl
in
pop
lods
ss
das
aad
sti
jge
inc
lea
add
cmp
mov
sub
and
testb
push
add
sub
pop
scas
js
mov
sbb
jb
enter
inc
adc
inc
sbb
sub
rorb
enter
and
xchg
cmp
xor
xor
stc
fs
mov
or
movsw
sbb
xchg
and
je
movsl
loope
lea
lods
mov
insb
mov
adc
jno
scas
and
push
test
adc
pop
fs
lds
adc
or
aam
adcb
xor
ja
cwtl
test
cmp
stos
clc
sbb
jle
jb
mov
mov
adc
mov
popa
mov
outsl
call
icebp
js
push
leave
std
add
pop
jmp
push
fdivs
ljmp
movsb
or
mov
jmp
jbe
mov
nop
and
enter
faddl
leave
and
enter
xor
mov
aaa
lea
inc
pop
push
dec
es
and
dec
mov
clc
ret
adc
xlat
movsw
out
sub
xchg
popf
adc
mov
les
je
inc
icebp
les
sahf
mov
adc
jmp
or
fs
and
xchg
push
or
xchg
pop
imul
xchg
inc
or
sub
test
and
ja
lods
loope
push
xor
push
and
push
or
xor
sti
je
lahf
mov
push
or
xor
fldl
push
jnp
dec
cli
cmp
lea
cmp
xchg
sbb
adc
sbb
fadds
test
add
sarb
jae
cmp
or
mov
add
push
gs
adc
jmp
xor
or
outsb
xchg
or
and
xor
or
fnstcw
orl
xor
mov
fdivrs
adc
addr16
xchg
adc
xor
and
pushf
adc
ljmp
test
jne
gs
loop
cs
movsl
loop
bound
xor
jmp
in
push
xchg
cld
xor
fnstsw
leave
fnstsw
leave
cmc
int
daa
fdivrp
in
push
and
dec
mov
adc
in
dec
adcb
jb
jle
jp
in
insl
test
ja
push
inc
popa
lahf
jnp
out
or
stos
or
das
scas
mov
and
mov
mov
inc
test
cld
mov
shll
add
mov
bound
jns
cs
xchg
hlt
mov
mov
pop
gs
push
rcll
jle
inc
in
mov
leave
ljmp
dec
cmpsb
lock
call
fs
inc
xor
gs
adc
push
xchg
popa
adc
pop
mov
sub
test
or
cmp
ja
pop
test
lock
xor
sub
add
or
adc
and
push
add
rclb
fs
adc
les
call
inc
cmp
xorl
jle
shr
ljmp
and
movsb
fldt
push
pop
jb
fwait
pop
scas
xchg
clc
adc
out
adc
or
xchg
rcl
pop
pop
mov
lock
sub
xchg
sti
aaa
ret
gs
test
dec
rcr
mov
add
lds
mov
mov
pop
in
clc
sbbb
test
cmpsb
lcall
clc
cmovno
dec
mov
sub
xor
mov
shlb
push
std
scas
mov
dec
mov
add
idiv
cmpsb
or
lock
push
cmc
push
mov
das
xor
mov
test
inc
jne
movsb
testl
sub
data16
push
cltd
or
lods
pushf
insb
pop
int3
mov
jns
cmp
and
pop
sub
sbb
sub
and
inc
int3
cli
mov
dec
or
xchg
fdiv
fs
pushf
hlt
in
pop
inc
xor
test
popa
jg
cli
cmp
imul
repz
ja
pop
push
cmp
and
or
xor
repnz
sub
mov
sbb
cmp
jg
fistps
dec
aam
out
or
test
in
or
sub
pop
loop
or
je
dec
xor
pop
scas
enter
ja
call
xor
movsb
sbb
lcall
popa
cld
mov
xor
loop
add
add
call
push
adc
lahf
imul
add
out
gs
add
jge
mov
sbb
lahf
xor
fnsave
in
shlb
ds
mov
adc
adc
add
pop
push
cmpsl
jge
insb
int3
mov
or
aad
sub
lahf
loopne
js
cmp
add
sti
int
and
pop
test
mov
push
pop
aam
sbb
mov
mov
test
push
pop
or
loop
jbe
gs
and
scas
icebp
dec
orb
pushf
mov
in
sub
or
jne
lock
lret
sub
loopne
das
aad
xor
sub
mov
push
neg
sub
sbb
mov
loopne
sbb
enter
std
sahf
or
cmpl
js
enter
out
dec
or
sub
jo
push
dec
dec
ds
or
mov
xor
add
movsb
sub
mov
pop
jecxz
pushf
rclb
mov
xchg
mov
xor
mov
les
or
jns
fidivs
fbld
loopne
jp
ret
rolb
insl
dec
or
cli
ret
push
dec
adc
mov
or
cld
aaa
adc
ret
or
aam
hlt
enter
xor
xchg
test
inc
enter
jge
xor
call
cmp
xor
and
fwait
pop
jl
add
cmp
lea
lods
jae
inc
inc
rcr
or
je
sub
push
mov
sarl
mov
imul
lea
mov
jns
fs
inc
add
arpl
sub
pushf
pushf
cmp
dec
sbb
dec
mov
mov
push
pop
add
data16
data16
and
shll
call
call
or
out
pop
jmp
imul
cmpsb
mov
mov
call
jae
mov
cmp
push
mov
dec
test
push
icebp
shr
xor
xchg
insb
mov
pop
les
stos
mov
fdivs
ja
pushf
addr16
int3
or
or
cmp
and
jne
mov
add
pop
gs
pusha
mov
cmpsl
out
dec
xchg
pusha
nop
sbb
adc
imul
fwait
das
pop
je
cmp
and
icebp
adc
and
adc
xor
pop
andb
push
imul
mov
adc
mov
mov
popa
mov
cmp
xor
pop
cmp
adc
cmp
lret
imul
cltd
xor
jg
push
ja
ljmp
outsl
fs
xor
imul
int3
add
inc
jns
mov
push
mov
scas
sub
aas
je
jmp
xor
lret
xchg
mov
loope
xor
sbb
xchg
add
adc
in
cmp
add
mov
out
sarb
enter
int
jnp
lret
les
mov
aam
or
lcall
xchg
xor
inc
adc
dec
movsb
sub
push
push
imul
int3
ret
fs
mov
xchg
sbb
movsl
add
and
dec
jecxz
int3
mov
aam
push
xchg
fmulp
cwtl
stc
inc
add
je
insl
add
je
test
or
xor
fs
int3
add
mov
adc
lret
aas
adc
push
push
ja
jmp
inc
test
push
add
and
cltd
jmp
in
das
call
or
mov
add
inc
mov
mov
push
adc
xchg
jle
jmp
lahf
int3
jae
ret
movsb
dec
call
inc
dec
out
and
cmc
bound
dec
daa
test
movsb
out
in
ret
test
or
enter
js
pushf
test
jecxz
cmp
fisubl
adc
ret
test
xchg
std
cwtl
xchg
lahf
mov
push
test
jecxz
cmp
dec
sub
pop
dec
inc
sti
push
adc
loopne
popf
dec
push
shll
lods
cmp
xor
insb
pop
jns
xchg
push
and
call
mov
pop
jecxz
ja
push
or
cmp
jb
xlat
fwait
rcll
add
jle
fwait
mov
xor
dec
loop
bound
add
mov
adc
cmp
mov
ret
pop
sub
xor
rorl
sub
test
lock
push
push
test
push
jge
stos
cwtl
in
push
fcoml
cld
in
mov
lods
out
pop
lea
rclb
mov
scas
jge
jle
cmc
add
inc
jmp
sub
xchg
add
xor
pop
pop
fcoms
or
sub
cli
xchg
mov
adc
add
sbb
and
dec
push
addps
lea
out
push
jle
mov
jg
jle
cmp
lock
mov
test
mov
jp
gs
pop
stc
mov
call
mov
xor
test
inc
push
push
mov
fsubl
idiv
out
in
xchg
ret
scas
sub
dec
push
lea
mov
lock
pop
dec
inc
adc
cmp
pop
cmp
sub
cs
push
gs
sbb
mulb
shl
push
lahf
gs
mov
dec
sarb
push
les
inc
cmp
imul
dec
adc
aam
dec
fdivs
pop
adc
int
or
push
or
rorb
enter
push
and
sbb
lods
imul
cltd
leave
int3
adc
mov
mov
loope
jns
mov
sub
cmp
je
movsb
imul
or
out
ljmp
pop
xor
dec
out
imul
pop
push
in
mov
int3
outsl
int3
lds
cli
imulb
scas
xor
mov
nop
stc
cmp
rcrb
sub
js
and
inc
add
adc
sbb
loopne
mov
notl
push
ret
int
enter
mov
mov
inc
and
les
and
cmp
gs
fcomp
mov
or
enter
enter
or
and
push
js
fimuls
out
jmp
inc
cld
mov
outsb
xchg
push
lds
dec
clc
and
adc
scas
cwtl
stos
aam
pop
xchg
inc
inc
inc
or
or
lds
hlt
ret
or
dec
stos
aam
rol
jo
dec
mov
mov
je
xchg
sub
sub
mov
xchg
sarb
cs
xchg
addr16
and
add
and
adc
jmp
enter
and
mov
inc
or
roll
roll
xor
insb
out
mov
loopne
sub
inc
sbb
sub
and
sbb
loopne
inc
xchg
je
dec
lds
out
and
or
cmc
push
adc
mov
xlat
fsts
stos
das
inc
xchg
int
mov
cmp
push
shlb
inc
in
xchg
mov
xor
and
dec
in
rolb
divb
fadds
pop
mov
fmul
jge
and
fcompl
clc
sbb
xchg
xchg
bound
fstps
ret
dec
mov
adc
lret
or
sub
xorb
and
xorb
sub
xor
movsl
dec
cmp
xchg
rorb
cmp
pop
mov
pusha
in
or
fiadds
or
push
inc
sbb
or
adc
push
dec
xchg
xor
adc
in
sahf
jge
xchg
movsl
outsl
jo
inc
mov
mov
jg
imul
aam
js
add
add
push
stc
repnz
jb
and
mov
inc
inc
ljmp
das
call
fnsave
dec
pop
mov
inc
pop
clc
popf
loope
repnz
mov
mov
mov
xchg
mov
push
mov
loop
imul
pop
mov
test
sub
or
mov
inc
outsl
sbb
call
or
sub
pop
inc
jne
lret
cwtl
ljmp
in
pop
xor
rclb
push
mov
dec
call
jle
adc
lods
dec
or
cwtl
xor
cmpl
push
dec
ds
movsb
and
into
rcrb
add
bound
cmp
adc
inc
adc
out
and
outsl
or
sahf
icebp
and
ficomps
xor
and
mov
dec
hlt
adc
shlb
pop
mov
mov
adc
test
and
lea
xor
inc
inc
adc
push
int
lds
xchg
push
adc
out
add
jbe
and
mov
movsb
cmp
push
push
sub
add
inc
mov
mov
bound
pop
dec
push
imul
dec
icebp
sbb
mov
pop
mov
xchg
jb
jne
and
repz
xor
dec
cs
loopne
mov
mov
es
inc
test
cmpsb
jge
dec
imul
call
out
hlt
sbb
lods
jmp
or
fimuls
sbb
ljmp
ret
int3
shr
fimull
fistps
bound
mov
imul
pop
outsl
push
sub
sub
gs
fstpt
mov
out
mov
arpl
xor
popa
loop
je
and
sbb
test
ljmp
pop
mov
andl
stos
mov
lret
sub
rcr
cmp
popf
popa
inc
int3
sbb
mov
les
es
jl
loope
and
jmp
push
inc
mul
mov
mov
push
dec
int3
fsub
or
and
xchg
div
int3
cli
adc
cld
mov
fldl
add
movsl
xchg
mov
or
decb
repz
mov
scas
or
xlat
mov
cli
sarb
call
test
push
pushf
dec
push
xor
loope
sbb
push
push
dec
and
cwtl
push
mov
mov
cltd
xchg
out
imulb
sub
jmp
adc
sub
add
adc
scas
mov
mov
test
mov
and
in
lret
jns
jp
mov
mov
clc
mov
mov
mov
xor
push
inc
in
push
aaa
sub
push
inc
pop
or
pop
cmp
jbe
bound
lods
test
mov
cli
push
or
sub
into
mov
dec
lret
ss
sub
push
inc
aam
mov
inc
dec
data16
adc
loop
and
sub
pop
daa
sub
mov
int
push
call
lcall
pop
push
mov
leave
in
sarb
dec
or
push
mov
loop
out
je
sahf
lock
pop
mov
enter
in
rcrb
jnp
aam
sub
stos
je
cmp
rolb
push
push
pushf
cli
ficoml
jle
lret
rorl
fucomi
dec
push
mov
data16
into
stos
inc
and
mov
or
out
lods
and
js
daa
sbbl
loop
movsb
inc
mov
dec
mov
and
fsubrl
and
xor
repz
xchg
mov
dec
test
sub
les
mov
adc
add
xlat
movsl
cwtl
les
dec
mov
or
sbb
dec
dec
cmc
repnz
inc
dec
rcll
inc
es
jne
add
cmp
icebp
adc
sub
pop
inc
cld
pop
pop
test
mov
xchg
rolb
dec
test
mov
or
je
cmpsl
nop
adc
test
aas
push
xor
mov
lea
aas
lahf
mov
adc
sbb
and
pop
cltd
cmp
stc
xor
xor
cmp
sbb
cltd
push
inc
jb
xchg
sbb
dec
or
xor
hlt
enter
fs
icebp
dec
sub
xchg
popa
push
shrb
add
movsl
mov
add
sbb
aad
push
hlt
mov
mov
fmuls
aad
mov
lods
int
cs
dec
cmp
jbe
xor
daa
adc
arpl
cmp
ret
cmc
jmp
xchg
ja
jmp
xchg
push
mov
or
es
push
add
aas
test
enter
cld
jne
cmpb
ljmp
mov
pop
mov
inc
out
lock
inc
icebp
jmp
iret
or
add
push
in
push
push
jecxz
push
aas
mov
add
push
les
mov
xchg
dec
lods
pop
loop
and
adc
pop
sahf
xchg
pop
outsl
mov
mov
push
rolb
xor
cmpsb
cmp
mov
push
js
cmp
dec
or
sub
lea
dec
or
adc
data16
repz
cmpsl
ret
push
je
sarb
mov
dec
mov
cmp
popf
cli
sbb
sti
fdivl
out
ret
out
imul
fimuls
jmp
movb
fs
adc
scas
cmp
inc
or
stc
sub
inc
mov
test
mov
aas
or
pop
push
push
inc
inc
pushl
mov
and
inc
inc
inc
dec
std
ljmp
and
xchg
stos
mov
rorl
fcoml
push
loop
xor
sub
or
dec
test
inc
pushf
xchg
xor
flds
loop
aad
adc
push
enter
addr16
mov
or
mov
loopne
andl
lar
sub
sbbb
mov
mov
mov
aas
pushf
in
les
xor
fcoml
out
lds
jge
es
cmp
cmp
cmp
xchg
or
divb
pop
add
sbb
push
jmp
inc
mov
movsb
or
mov
cmp
mov
sbb
mov
movsl
jne
jecxz
ja
stc
or
mov
cld
mov
nop
incl
inc
jmp
push
jg
push
orl
and
ja
gs
rclb
pop
jbe
jge
xchg
mov
cmp
je
in
push
and
mov
jle
push
les
stos
sbb
push
outsb
call
adc
mov
pop
xchg
ret
pushf
inc
lahf
push
add
pop
cmp
sub
out
dec
jecxz
rcll
lock
je
mul
jnp
lea
outsb
mov
jne
adc
mov
mov
or
cld
inc
and
sbb
ret
popa
xor
inc
jmp
and
aas
jg
cmp
ljmp
add
xor
sbb
xor
and
push
stos
fimuls
add
jns
sbb
loope
inc
sbb
jmp
leave
or
test
and
jmp
sub
adc
sti
inc
std
and
fwait
int3
fs
ds
xchg
push
mov
sbb
cmpsl
jecxz
xchg
sbb
mov
adc
xor
sub
pop
cli
cmp
mov
xor
call
out
js
inc
and
mov
adc
or
adc
movsb
cltd
addr16
pop
mov
adc
and
or
cmpsl
into
dec
sub
icebp
adc
and
or
lahf
jne
and
cltd
movsl
call
stc
or
push
mul
lock
sub
xor
adc
add
dec
cld
add
dec
xchg
jge
cmp
stc
or
loop
cmp
pop
call
or
xchg
ja
in
pusha
push
clc
mov
sarb
cld
leave
scas
xchg
daa
xchg
jle
in
jb
pop
cmp
or
test
push
ljmp
xchg
or
lcall
popf
xor
fwait
inc
adc
repnz
xor
push
xchg
cmp
sub
ljmp
out
popa
xor
cmp
push
mov
jg
jo
nop
ret
loopne
mov
and
jae
jne
xor
push
or
je
lea
addl
scas
pop
jne
add
add
mov
adc
jb
lea
data16
and
and
clc
mov
add
adc
sti
bound
je
out
addl
aad
js
data16
jb
enter
jg,pt
cmp
or
push
ficoml
jb
adc
roll
cld
push
mov
inc
add
fnstcw
pop
mov
repnz
jmp
sub
shl
popa
cmp
or
xor
inc
out
dec
bound
sub
push
test
js
or
sub
or
mov
or
mov
mov
cli
popa
addr16
cmp
fisubrs
mov
and
stc
xchg
or
hlt
pop
inc
push
and
inc
cmp
cld
inc
sub
lock
sbb
in
inc
add
loopne
lock
adc
je
inc
fsubr
cmp
cmp
lock
aas
in
mov
sub
xchg
jg
xor
and
lock
fxtract
mov
lret
pop
push
push
or
and
xchg
mov
daa
std
inc
or
xchg
adc
loopne
jmp
stos
xor
cld
inc
je
jnp
lds
cmp
lret
nop
fs
lret
pop
cmovl
sbb
cmc
mov
clc
push
daa
cltd
push
cmp
outsb
leave
xchg
push
xlat
je
mov
cmp
mov
push
jo
inc
push
dec
lock
ljmp
xlat
in
addl
enter
mov
and
cmp
cmp
xor
cmp
hlt
jmp
pusha
cli
mov
fcomps
push
mov
add
jecxz
cmp
je
fidivrs
sbb
or
shlb
mov
add
movsl
xor
shll
jne
mov
cwtl
std
jmp
shrl
into
jb
mov
mov
xor
daa
jo
or
xchg
adc
xchg
adc
pop
sub
pop
adc
mov
add
adc
dec
pop
push
insb
and
dec
fdivr
sbb
inc
cmp
dec
inc
cmp
outsl
mov
adc
dec
fs
jo
push
inc
mov
pushf
push
in
shr
cmp
xor
insb
sub
cs
jb
pop
inc
outsl
xchg
inc
adc
jae
mov
adc
fists
sub
imul
test
xor
sub
xor
inc
jne
bound
in
pusha
xor
xchg
je
mov
sti
mov
sbb
xor
push
dec
xor
out
push
xor
pusha
push
ja
inc
mov
js
mov
stc
push
xchg
in
test
or
cmp
movsl
push
lea
pop
sbb
push
ja
pop
imul
xlat
dec
outsl
jmp
add
push
push
ljmp
stc
es
push
xor
jge
mov
cmp
fdivrs
aad
insb
or
mov
xchg
adc
push
imul
gs
movsb
fwait
sub
pop
push
lock
imul
mov
sbb
mov
push
mov
sub
add
in
test
scas
and
xchg
or
add
pop
mov
jne
pop
lods
sub
xchg
or
lock
mov
repz
xchg
jne
and
cs
xor
inc
outsb
mov
adc
sub
rcrl
and
filds
push
call
mov
or
jne
cmpb
xchg
cmp
movsl
fucomp
xor
mov
cmp
fiadds
fiadds
adc
push
mov
add
dec
int
sbb
ja
hlt
pop
pop
push
aam
sbb
adc
cmp
mov
inc
sub
out
mov
out
mov
fisubrl
sbb
loope
mov
sbb
scas
push
mov
xlat
xor
jns
movsb
inc
xchg
notb
popa
jmp
ja
and
shll
cs
aaa
push
push
mov
cmpsl
adc
in
lahf
push
and
out
jne
mov
dec
add
adc
inc
out
mov
jb
es
js
lret
dec
and
leave
cmc
data16
pop
jns
dec
sbb
mov
xchg
and
mov
mov
adc
inc
call
or
jle
scas
or
insl
adc
cmp
bnd
je
mov
pop
and
scas
jg
outsl
mov
xor
je
jmp
dec
ret
jmp
je
mov
sub
flds
pop
mov
pop
dec
mov
and
je
mov
das
adc
push
sbb
dec
movsl
adc
outsb
sbb
mov
call
jl
out
mov
add
inc
mov
mov
add
imull
negl
or
add
add
mov
test
push
fisttps
fadds
sub
pop
pop
es
jbe
int3
cmpsb
lods
add
mov
add
mov
les
adc
les
movsb
add
mulb
pop
cmp
xor
sti
or
inc
or
lock
je
repnz
dec
adc
sub
push
pop
in
fs
jmp
shl
xlat
scas
enter
mov
paddusb
jmp
sbb
sub
mov
sarb
cli
out
dec
in
cld
push
sbb
int
mov
sbb
xchg
cmp
mov
enter
add
xabort
shrb
mov
in
lahf
xchg
push
xorb
xchg
call
mov
xor
rcl
mov
pop
pop
cld
or
or
test
jmp
in
std
mov
or
inc
cmp
mov
jb
cld
inc
loop
mov
sbb
add
mov
popa
jle
mov
int
inc
cltd
stc
es
hlt
nop
pop
and
xor
add
dec
into
shl
fisubl
cld
sbb
or
xchg
dec
loopne
or
iret
pop
sub
jmp
xor
repnz
adc
popl
loope
xchg
or
mov
add
push
aam
cmpb
xchg
out
nop
shlb
cmp
xlat
sub
jmp
and
and
loopne
nop
je
pop
xlat
sub
adc
sub
cmp
rolb
xchg
xchg
sbb
push
inc
sbb
out
pop
mov
mov
add
or
repz
call
push
cmp
es
int3
lcall
push
scas
sbb
xor
outsl
loopne
add
lcall
in
clc
jmp
xlat
ja
inc
jl
pop
sub
adc
pop
sbb
mov
push
add
lock
and
adc
jle
incb
jmp
jge
mov
das
pop
sub
xchg
and
lret
or
js
xor
add
cmp
insl
xchg
ret
clc
clc
test
xor
dec
cmpsl
push
jecxz
popf
add
cmp
repnz
xchg
push
push
mov
icebp
test
xchg
lds
adc
pop
movw
mov
pop
push
inc
mov
in
mov
mov
jnp
lods
idiv
xor
inc
stc
icebp
pop
xor
cmp
xor
fdivl
andl
xchg
mov
adc
cli
data16
cmc
int
dec
aas
xor
leave
inc
sahf
mov
sbb
out
lods
ret
jbe,pn
cwtl
sub
cwtl
jle
ja
mov
and
dec
or
ds
subl
mov
in
jmp
ret
insb
negb
fcomps
sbb
daa
and
jb
push
push
xor
in
loopne
in
add
push
es
stc
fs
push
js
stos
aad
test
adc
mov
imul
arpl
push
mov
jb
ss
leave
ljmp
fucomi
cld
jmp
cwtl
xchg
dec
enter
jmp
movsl
pop
add
dec
push
pop
mov
add
ss
rolb
adc
or
in
mov
mov
push
addr16
mov
inc
push
inc
inc
movsl
mov
popf
or
cmp
das
sti
push
inc
mov
xor
add
in
mov
xor
lret
inc
pop
mov
faddl
shrb
mov
fcompl
inc
cmp
jb
mov
or
or
clc
test
test
pop
pop
lret
mov
push
pushf
mov
clc
pop
add
jns
sbb
sbb
adc
insl
cmpsb
add
push
je
pop
inc
inc
es
orb
pop
pop
dec
xchg
jmp
mov
mov
mov
xlat
repz
lods
add
xchg
stos
xchg
rcll
inc
xor
subl
dec
sbb
jmp
loop
adc
sbb
jns
adc
sbb
sarb
ss
bound
stc
andl
mov
into
adc
sub
adc
jp
or
pop
xchg
into
test
negl
ja
dec
push
inc
jae
scas
sub
push
in
push
add
stos
xorb
dec
cmp
out
adc
test
jmp
or
sub
movsb
ret
fcoml
enter
fcomps
push
cwtl
push
push
ljmp
clc
movsl
pop
adc
bound
shrl
adc
lret
repnz
xchg
adc
es
jmp
push
clc
cmp
cld
daa
jecxz
dec
test
pop
out
fs
mov
push
or
mov
xchg
leave
mov
aas
sbb
idivb
ficomps
cmp
out
loop
xchg
mov
mov
push
test
add
xchg
sbb
imulb
mov
and
and
push
sahf
jmp
dec
xchg
aam
mov
pop
push
inc
call
cmp
loopne
lods
fisubs
or
mov
lods
dec
movsb
je
mov
lret
sbb
pop
dec
dec
cmpsb
insl
les
jns
fdivrl
lea
loop
icebp
add
adc
out
bnd
and
and
xchg
orb
movsb
push
mov
push
push
xor
pop
in
loope
cltd
add
les
mov
push
stos
jne
loope
js
and
lods
or
icebp
mov
inc
push
les
scas
jnp
negb
and
dec
adc
adc
mov
sub
jmp
jno
in
outsb
ds
repnz
inc
adc
sub
test
aad
sub
jb
sbb
mov
mov
xchg
lods
loopne
mov
mov
ds
ss
hlt
cmp
cmpsl
cmp
imul
xchg
aad
loopne
adc
lods
cli
xor
mov
addb
mov
inc
call
inc
ret
imul
test
push
ds
jbe
aam
in
push
inc
mov
jo
push
cmp
push
pushl
xchg
xor
mov
cltd
adc
mov
lock
fstpl
rcrl
add
jle
shll
sbb
inc
movl
dec
lods
push
aam
pop
mov
repnz
mov
sub
dec
push
or
movsb
push
fprem1
outsb
xor
movsb
lds
dec
inc
cmp
and
test
cmp
fnstcw
sbb
out
push
adc
or
shlb
int3
inc
xor
xchg
jne
imul
test
mov
push
pop
call
aad
roll
fdivrl
add
cmpl
jne
and
icebp
mov
mov
dec
repnz
rclb
push
mov
sub
mov
fsubs
cli
inc
jg
and
mov
dec
mov
sub
std
adc
aam
mov
rcrl
in
scas
hlt
fsubl
pop
add
call
scas
shr
jl
and
push
lret
cmp
ja
jl
bound
insb
mov
xlat
inc
ret
dec
lods
cmc
dec
outsl
movsl
pop
inc
out
hlt
dec
pop
stc
rcrl
rorb
shlb
mov
fmull
mov
jns
dec
pop
imul
inc
sub
xor
je
adc
scas
rorb
imul
or
mov
mov
inc
or
jo
adcl
std
enter
aas
lods
outsb
shl
mov
adc
outsb
imul
and
xchg
js
inc
adc
xchg
or
and
in
add
out
pushf
add
mov
and
add
inc
ret
movsb
or
or
fs
lret
and
ret
int3
jl
mov
lods
pop
and
popf
icebp
mov
sbb
and
inc
test
clc
cmpsb
clc
pop
xchg
dec
rcrb
inc
aad
push
inc
rorl
mov
call
and
mov
test
and
push
xor
xacquire
or
and
in
daa
or
fmull
and
lock
jns
mov
adc
mov
enter
repz
test
shl
mov
nop
lea
mov
inc
les
loopne
xchg
pop
adc
mov
adc
ljmp
pop
add
xorl
ficompl
bound
aaa
sbb
jnp
and
dec
sbb
mov
sub
push
fs
mov
and
mov
aad
sbb
xor
pop
es
add
loopne
cmp
mov
pop
and
hlt
push
or
sbb
fiaddl
sahf
lret
and
dec
sbb
test
or
in
cmp
popf
test
div
xor
test
das
stc
or
push
es
orb
push
in
xchg
and
xor
jbe
push
xchg
xchg
or
jbe
mov
cltd
sbb
js
in
test
mov
jmp
add
cld
pop
in
lahf
mov
lods
stos
in
aaa
or
add
xor
mov
adc
je
and
imul
mov
push
mov
les
outsl
pop
or
test
push
push
jle
pop
adc
inc
sbb
test
enter
mov
push
cmc
or
dec
pop
or
cmp
arpl
cmpsb
xor
add
mov
dec
push
xchg
hlt
movsl
jne
mov
pop
repnz
xlat
mov
in
leave
jno
imul
and
pop
xor
add
mov
push
and
xor
pushf
push
push
push
push
jo
mov
andl
repnz
push
pop
jmp
dec
hlt
aad
in
sbb
push
cmp
sub
mov
xchg
mov
jle
sub
inc
cs
sub
int3
jne
adc
pop
pushf
push
dec
dec
mov
and
imul
mov
data16
add
add
aad
pop
mov
pop
adc
into
xchg
mov
mov
fcomi
sub
and
cld
or
jmp
scas
arpl
dec
cmp
jnp,pt
sub
jl
add
pop
jne
sub
out
loope
or
sub
hlt
push
pop
sub
lods
pop
push
test
mov
xorl
mov
pusha
mov
mov
rorl
inc
test
mov
aaa
cli
cmp
push
ljmp
push
push
mov
mov
mov
pop
mov
or
je,pt
and
call
add
push
sahf
or
or
add
sbb
inc
adc
add
sbb
inc
sbb
add
sbb
inc
and
add
sbb
inc
sub
add
sbb
pushw
xor
je
mov
pop
dec
push
xor
or
inc
cmp
add
sbb
pop
lock
jmp
or
dec
cmp
dec
test
lods
stos
jl
and
imul
scas
or
repz
inc
add
push
stos
call
xor
pop
push
adc
out
pop
inc
std
adc
adc
incl
in
je
sbbl
dec
ret
xorb
loope
fs
push
test
fiadds
test
xlat
jmp
mov
sbb
call
xchg
inc
push
mov
push
popa
rcl
jae
xor
out
test
sub
pop
sub
ja
pop
push
push
add
push
out
and
mov
popf
sbb
mov
push
cmc
or
xchg
and
adc
test
add
mov
jmp
push
or
in
outsb
test
fisttpl
in
cld
xor
sbb
ljmp
mov
sbb
addr16
sub
aas
inc
fcomps
push
or
cs
push
stos
xchg
push
add
mov
das
test
push
mov
imul
shll
call
sti
and
xchg
sub
movsb
mov
jae
das
arpl
jg
sarl
pop
jnp
mov
lods
mov
in
dec
sbbb
cmpsl
pop
pop
data16
and
lea
mov
jp
nop
shlb
cmp
and
bound
vcvtsd2ss
pusha
out
pop
or
les
push
pop
pop
and
inc
stos
mov
inc
sbb
stos
fldenv
jg
aad
shlb
es
sub
movd
ja
sbb
imul
cmp
and
mov
jne
divb
and
add
and
test
add
mov
mov
ss
and
fdivl
js
cmpsb
test
pop
hlt
ret
cmp
pusha
or
or
ds
push
insb
iret
sbb
push
jo
sbb
push
je
and
push
js
and
push
jl
add
inc
sub
test
ds
xchg
pushl
das
push
xor
shlb
sub
data16
nop
inc
or
pop
mov
cmp
adc
mov
or
or
xchg
sbb
xchg
arpl
mov
jne
pop
push
jge
ret
mov
or
adc
xchg
movsb
adc
lods
orl
mov
andl
aam
jmp
sti
int3
nop
loopne
insl
int3
mov
cmpxchg
pop
add
or
push
push
adc
mov
inc
leave
or
into
loopne
pop
lock
outsl
dec
test
adc
sbb
mov
mov
pop
xchg
xor
mov
pop
je
shrl
cmp
inc
imul
test
push
lahf
and
inc
insb
and
inc
push
and
mov
and
inc
inc
and
pop
and
inc
pusha
popa
cmc
cs
enter
mov
pop
mov
test
inc
jl
les
push
mov
sbb
test
test
or
nop
push
dec
sar
es
sbb
stc
jmp
jmp
and
std
sbb
sub
adc
xor
jle
xchg
mov
dec
repnz
mov
fmull
pusha
call
mov
xlat
test
stos
inc
jne
mov
and
dec
or
roll
mov
or
je
sub
xor
lock
fs
push
or
inc
push
push
adc
push
sbb
rolb
cmpl
loopne
ret
dec
or
add
mov
jne
push
test
inc
je
push
andl
push
ljmp
cmpsl
or
cmp
imul
xor
sbb
clc
push
inc
jo
pop
jl
fnstenv
cltd
xor
lea
and
jne
and
enter
aad
lret
add
cmc
icebp
and
inc
sbb
ss
push
rcll
stc
out
cmp
enter
push
or
inc
adc
cwtl
sbb
lahf
cmpb
adc
aas
in
push
pop
push
call
xchg
lahf
mov
push
inc
test
push
pop
jmp
cmpl
dec
or
pop
pop
stos
xor
sbb
sbb
rolb
sub
loopne
jne
subb
dec
jo
cmp
jne
or
dec
push
std
mov
add
popa
mov
xor
sub
mov
aas
push
lret
jb
push
lcall
sbb
dec
inc
jge
or
adc
sbb
inc
mov
sti
xor
lods
movsb
push
movsb
xor
scas
and
pop
mov
insb
push
mov
enter
pushl
push
xchg
adcl
pop
and
iret
loop
inc
push
push
xor
repz
pop
shlb
movsl
push
inc
add
xchg
or
pop
mov
or
rol
lea
jmp
push
inc
shlb
jp
loope
cmp
pop
cmp
nop
pop
sub
push
xchg
loop
repnz
mov
scas
sub
dec
sbb
sub
adc
mov
leave
cmc
push
dec
sub
dec
mov
lds
das
ficoms
clc
sbb
in
lret
mov
and
int3
dec
daa
pop
rcl
fcomps
daa
sbbb
or
and
cmc
stc
adc
push
adc
dec
jne
out
ficompl
lods
push
test
xchg
lea
push
add
inc
push
jmp
dec
sbb
test
js
adc
insl
and
and
cmpl
push
popf
daa
jg
xor
lods
push
adc
sbb
dec
xchg
sbb
adc
fs
pop
push
je
inc
lea
test
outsl
movsb
pop
mov
movsb
push
nop
push
mov
or
scas
jbe
rorb
popa
scas
jmp
mov
adc
lret
sub
nop
outsl
cmp
mov
jns
test
movsl
xor
sti
mov
mov
dec
movl
nop
add
clc
push
dec
es
jmp
data16
in
xchg
xor
ss
mov
cltd
pop
push
and
adc
jne
and
les
push
stos
xor
mov
cmp
cwtl
adc
sbb
mov
shl
mov
add
mov
inc
in
loope
mov
mov
inc
adc
cli
pop
out
push
mov
mov
inc
sub
lock
dec
hlt
cmp
or
inc
adc
adc
out
repz
push
inc
cmp
sub
inc
cmp
mov
sbb
test
and
cmp
push
dec
sub
shl
push
loope
add
dec
mov
and
shlb
push
inc
sub
rclb
mov
sbb
movsb
mov
sahf
arpl
movsb
enter
sub
xor
push
sub
aas
fs
lods
cmp
sbb
test
test
popa
sbb
cmc
out
popf
dec
add
outsl
or
jmp
repnz
sub
adc
aas
lock
and
into
mov
jmp
loop
orl
popa
int3
mov
jb
pop
clc
mov
cli
and
fistpll
out
pop
xchg
scas
mov
dec
sbb
mov
mov
add
cmc
and
dec
pop
nop
sub
enter
and
cwtl
push
and
sub
or
clc
mov
lcall
sbb
xchg
and
mov
sub
in
or
push
data16
test
cld
push
inc
js
mov
mov
push
jo
mov
sbb
fwait
and
xor
mov
add
ficoms
punpckhdq
mov
add
mov
pop
rorl
sub
movw
xchg
sbb
xor
js
or
movsb
jns
mov
nop
outsb
xchg
cltd
push
mov
push
mov
xor
rcl
inc
scas
lea
loopne
add
ror
mov
push
imul
or
sub
jge
jns
cmp
adc
add
jo
cmp
pusha
xor
sbb
xchg
rorl
sub
and
jmp
lea
xor
adc
xchg
sbb
pop
mov
ss
mov
push
adc
push
push
call
pop
and
sar
xor
push
stos
dec
pop
dec
cmp
sbb
xor
xchg
ss
fisubs
jno
or
jl
sahf
fldcw
test
loop
lret
pushf
sbb
xchg
cmp
xor
fisubs
inc
fwait
sub
sub
nop
dec
into
cs
add
les
popa
jae
jo
push
xchg
xlat
shlw
loop
cmc
lret
lret
das
into
inc
dec
imul
adc
loopne
mov
and
gs
push
jl
stos
repnz
dec
out
lret
pushf
sub
fstpt
out
shlb
mov
imul
jo
jbe
sub
out
mov
arpl
je
jo
ljmp
popa
fs
adc
cmp
sbb
add
cwtl
add
inc
add
pop
adc
push
xchg
rorb
sub
out
mov
enter
rorl
pop
in
popf
inc
rclb
mov
lods
mov
pushf
popl
sub
or
inc
add
mov
or
in
mov
mov
mov
lods
push
shl
xchg
jmp
lods
or
fdivr
adc
addr16
outsl
adc
jecxz
jle
and
or
out
xor
add
mov
and
cmpsb
sbb
push
push
add
cld
sti
jmp
rcr
das
push
je
or
xlat
xchg
xchg
jmp
and
repnz
xchg
jae
int3
xchg
cltd
mov
sbb
push
test
mov
lcall
insl
xor
dec
scas
xchg
test
in
sarb
test
and
movsl
stos
push
rclb
dec
ret
cmp
ljmp
xor
decb
and
push
mov
adc
cld
push
les
dec
dec
daa
enter
or
add
andl
push
push
push
xchg
notb
dec
or
stc
adc
ja
adc
pop
push
dec
push
lahf
pop
push
loopne
cwtl
add
lods
xor
jmp
popf
fidivs
out
lods
adc
push
mov
mov
jg
cld
sar
xchg
outsl
mov
in
cwtl
lea
add
call
cmp
outsl
sub
mov
aam
loope
test
hlt
test
jle
jmp
pop
fldt
xchg
mov
or
cltd
movsb
jg
adc
nop
fildll
sub
pop
xchg
and
test
repnz
add
nop
jle
dec
in
pop
mov
jge
daa
in
jne
jecxz
in
inc
inc
jp
jbe
repz
push
jno
sub
stc
sti
jmp
mov
dec
std
mov
inc
add
jp
std
je
cld
cmp
jo
pop
xor
sahf
incb
add
xchg
psrlq
and
mov
dec
out
sti
cmp
dec
push
pop
xchg
lock
popf
les
xor
and
shll
jg
in
adc
fdivl
or
lea
add
xlat
fcmovnb
das
stc
cld
inc
mov
pop
dec
xor
push
sub
je
push
sbb
lea
jge
dec
push
fsts
pop
mov
out
in
push
push
jecxz
leave
pop
mov
mov
sbb
cmp
je
sbb
gs
mov
push
push
sub
mov
decb
into
xor
push
arpl
negb
jge
ljmp
imul
mov
dec
imul
mov
jecxz
jb
dec
cmp
and
stos
mov
int3
jge
ds
mov
pop
adc
pop
test
out
ret
dec
and
inc
popf
push
adc
das
jno
outsb
lods
push
mov
lret
out
adc
or
mov
jmp
das
movzwl
mov
push
jp
std
movsl
cmp
inc
adc
test
or
jnp
shr
jns
push
push
cli
mov
sbb
mov
stos
stc
cmp
cmp
lahf
adc
push
das
or
fs
jbe
sub
pusha
jg
sti
mov
das
ljmp
or
jmp
push
pop
data16
cli
hlt
push
popf
out
fidivs
das
or
push
lods
in
and
call
loopne
and
adc
and
dec
hlt
call
lret
and
dec
push
pop
shl
jmp
fmull
popl
sti
jle
decl
sbb
mov
stc
stos
jmp
jecxz
and
insl
xor
bound
test
mov
pushf
and
fistpl
mov
sub
xor
movsb
test
sub
enter
loope
stc
incl
xchg
scas
mov
adc
dec
and
adc
inc
pop
mov
push
sbb
or
push
add
cli
sarb
cmp
mov
push
adc
adc
subl
and
out
adc
jo
sbb
add
push
jo
and
cmpl
hlt
push
clc
xchg
jb
mov
cltd
dec
inc
jae
push
cmp
fidivs
push
pushf
inc
lea
mov
sub
or
push
mov
in
lds
dec
scas
and
decl
fistl
dec
pop
js
in
inc
jnp
jmp
adc
push
mov
call
repnz
adc
xor
ror
and
dec
dec
pusha
fsts
cmp
scas
add
xchg
and
push
xchg
or
imul
sbb
and
jmp
dec
loope
sbb
popf
xlat
adc
jo
xchg
out
sub
jo
add
stos
jmp
into
test
and
dec
leave
rorl
and
das
cs
inc
xor
andl
stc
bound
rclb
sbb
adcb
in
mov
dec
jae
add
movsb
icebp
dec
adc
sbb
decb
jae
xor
decl
xor
inc
je
jnp
movsb
adc
pop
push
movsb
jl
dec
pop
fisubl
je
mov
adc
and
sbb
cwtl
xchg
sub
jae
movl
call
xor
loop
in
lret
movsb
ret
iret
aas
and
jbe
call
imul
outsl
mov
inc
fwait
sub
adc
fildll
test
mov
sub
xchg
ss
repz
fwait
pusha
ret
in
mov
mov
dec
ds
push
push
adc
sti
lahf
jns
inc
dec
dec
xchg
push
or
adc
cld
mov
sub
inc
roll
sub
and
fwait
inc
inc
xchg
cli
addb
push
test
pop
push
add
or
outsl
mov
adc
hlt
sub
orl
popf
lea
dec
test
dec
push
dec
jle
or
loopne
adc
int3
stos
in
adc
je
mov
lods
or
xchg
andb
fsubl
negb
inc
and
or
daa
clc
sub
xor
and
loope
fnsave
adc
xchg
mov
add
stos
in
int
in
pusha
and
cmp
jg
dec
fisubrs
nop
inc
cmp
cwtl
mov
out
push
ljmp
sbb
or
cmc
or
fs
mov
sbb
mov
mov
xor
mov
mov
cs
movsb
hlt
pop
dec
lret
jge
push
or
jg
hlt
or
push
popa
inc
mov
lock
fildll
or
sbb
push
fwait
dec
xor
dec
mov
pop
xchg
daa
cmp
adc
stos
cmc
jle
jae
mov
push
mov
nop
adc
stc
aaa
add
scas
xchg
sub
or
fdivrs
insb
rolb
sub
lea
push
xor
and
mov
mov
xlat
aam
adc
sub
adc
or
sub
or
mov
rcrl
aaa
dec
pop
fsubrl
jo
shlb
adc
daa
fdivl
dec
and
pusha
jns
imul
pop
out
or
sub
cld
nop
xchg
jl
test
jp
push
lahf
loope
jmp
mov
scas
mov
push
lret
shll
mov
nop
in
icebp
jle
xchg
fucom
test
out
xchg
adc
cmpsl
test
dec
push
push
jo
clc
mov
sub
lds
lahf
ret
xchg
sti
add
outsb
hlt
repz
pop
mov
call
cltd
das
shlb
lock
pop
dec
and
fdivr
jb
jl
insl
jge
repnz
adc
adcl
push
sti
push
std
ret
pop
push
mov
lret
mov
add
call
test
and
pop
or
in
jns
push
nop
push
mov
adc
adc
push
lcall
in
or
sub
call
fadds
mov
inc
jecxz
daa
mov
lods
fsubl
jno
push
loopne
add
call
out
pushf
lcall
sbb
pop
lods
lock
in
icebp
mov
xchg
add
cmp
push
fadds
das
dec
jnp
or
mov
lahf
mov
push
test
aam
clc
fdivs
movsb
ret
mov
cmp
test
and
jnp
adc
or
in
stos
adc
popa
mov
xchg
rclb
inc
sub
jne
cmp
and
es
push
and
rolb
aam
mov
cltd
or
jmp
test
call
sub
mov
dec
repnz
es
aam
test
sub
ljmp
dec
lock
dec
jno
mov
test
lods
stc
lods
lock
iret
lods
push
jge
xchg
ljmp
addr16
aam
repnz
dec
movsb
rorb
jmp
jg
mov
jb
in
pop
xor
dec
outsb
leave
and
xchg
mov
pop
std
stos
cltd
mov
lock
fs
mov
shlb
orb
or
adc
cmc
shrb
rcrb
or
clc
rcl
fs
xchg
sub
push
rorb
cmpl
xchg
aaa
pushf
cwtl
js
cmc
cld
clc
inc
dec
adc
jg
adc
imull
mov
cmpsl
inc
out
nop
lret
popf
push
sub
ret
and
dec
add
adc
jae
or
cld
sub
aad
pop
or
not
and
out
fdivs
mov
lock
sub
inc
xchg
cmp
orl
or
outsb
lock
cld
xchg
xor
dec
scas
fbld
outsb
test
pop
lahf
pop
adc
daa
lcall
pop
lods
or
dec
out
ds
lods
push
in
movsb
sbbb
lahf
test
test
loop
xorl
xchg
shl
and
cmpsl
fsubs
xchg
addb
test
in
dec
push
les
insb
scas
fs
jo
ds
sub
ret
in
or
jmp
add
into
shl
and
cmpsl
out
fdivs
xchg
in
push
push
jne
mov
dec
fcoms
test
adc
mov
fcomps
sub
rorb
lea
fdiv
not
bound
push
jge
xchg
jecxz
push
dec
enter
fcoms
js
adc
xorb
inc
aad
cmp
ret
cmpsb
enter
jae
sbb
inc
and
clc
adc
xor
lock
sti
push
in
mov
popf
and
pushf
or
push
loop
hlt
adcb
inc
loop
cmpb
rclb
int3
outsl
out
pop
rclb
lods
movsb
repz
fimuls
pop
adc
inc
enter
inc
push
mov
sbb
xchg
or
jg
lcall
iret
sbb
xchg
loop,pt
mov
cltd
mov
addr16
lahf
dec
flds
out
int
aas
add
stc
aas
out
lea
mov
mov
add
inc
xadd
adc
inc
adc
inc
adc
dec
adc
dec
adc
dec
jle
dec
movl
inc
dec
lret
lret
inc
push
int3
inc
push
int
push
into
inc
push
iret
inc
push
rolb
roll
rolb
roll
aam
pop
aad
pop
inc
popa
xlat
inc
fadds
flds
fiaddl
fildl
faddl
fldl
fiadds
filds
loopne
imul
insb
loop
insl
jecxz
outsb
in
outsl
in
jo
inc
jno
inc
jb
mov
or
je
ljmp
ja
in
js
out
jns
out
jp
lock
icebp
xor
repnz
repz
hlt
xor
cmc
xor
divl
or
cmp
stc
cmp
cli
and
sti
sub
push
movw
jmp
jo
mov
or
loope
jp
or
fucomip
or
xchg
xor
sbb
rcrb
div
hlt
imul
cli
add
dec
in
or
jae
jmp
push
jge
popa
sub
add
loop
pop
test
test
pusha
mov
ficomps
pop
fidivl
cli
adc
or
push
scas
inc
cmp
stos
jle
mov
lock
int
cmp
and
data16
idivl
sub
and
outsb
or
xlat
das
aam
rorl
cmove
pop
cmp
jbe
test
bound
sbb
jbe
or
out
in
sbb
cld
std
and
jmp
sti
jne
adc
filds
sarl
jae
data16
adc
repnz
dec
in
jg
or
cmp
or
and
adc
je
or
loope
jnp
adc
or
sbb
fs
sbb
inc
inc
jl
or
pop
jle
cmp
pop
sub
adcl
mov
fstpl
lahf
inc
push
add
cld
rclb
sub
xchg
mov
add
add
cmpb
repnz
daa
inc
cld
jbe
adc
or
call
sub
loopne
add
or
in
jb
xor
push
fwait
dec
and
scas
and
dec
scas
sub
test
je
daa
inc
or
and
add
adc
les
adc
xchg
fimull
add
rolb
out
outsb
ret
push
and
adc
fs
sub
jl
dec
pop
mov
xor
in
das
mov
jg
repz
jo
in
test
xchg
in
loopne
in
stc
fstl
dec
inc
and
lea
loopne
addl
sbb
jo
dec
shrl
cmc
adc
les
repz
jp
dec
into
xor
lea
scas
daa
out
push
movl
call
and
sbb
mov
sub
aaa
jmp
test
shrl
add
push
inc
pop
push
mov
aad
mov
ds
inc
cltd
push
pop
push
jg
fbstp
cs
mov
stos
sarb
fbstp
inc
mov
sbbb
in
cwtl
mov
sub
adc
in
xor
xchg
enter
call
jnp
sbb
jp
js
push
adc
in
push
lahf
push
push
mov
xchg
fbstp
jge
std
inc
cmp
cmp
sahf
mov
loop
cmpl
dec
mov
das
add
bound
cli
mov
popa
push
push
incb
aas
push
push
pop
in
js
push
aam
bound
mov
cmp
jnp
and
lods
push
pop
dec
cli
pop
mov
or
pop
add
stc
iret
ja
shrl
dec
or
adc
sbb
mov
les
and
in
scas
cmpsl
sti
pusha
push
call
rcll
or
icebp
inc
xchg
add
ficomps
dec
inc
dec
add
add
lock
inc
test
stos
repnz
xor
repz
pop
sub
adcb
sbb
pop
push
add
cmp
sbb
sti
mov
push
in
sub
gs
xor
sti
mov
dec
aam
xor
hlt
push
or
cmp
in
call
data16
add
push
pop
je
shr
add
and
push
leave
sbb
jg
notl
iret
pushf
add
out
sub
xor
into
inc
ss
negl
pusha
dec
mov
lea
cmp
mov
dec
pusha
and
adc
dec
add
mov
lret
and
xor
xchg
push
or
lret
je
jae
push
or
or
pushf
or
push
std
ds
mov
nop
sbbb
mov
nop
sbb
xchg
fsubrl
dec
or
sbb
and
lock
jge
or
xchg
imul
clc
aam
les
mov
fldt
or
nop
in
movsb
and
dec
out
call
jmp
test
jne
lea
and
arpl
push
movsb
xchg
xor
addr16
xor
inc
push
or
lret
or
jl
cli
push
hlt
pop
xchg
je
adc
pop
aad
sub
cld
xor
jl
xchg
fdivs
and
sub
cmp
sbb
xchg
es
inc
sub
push
xchg
add
je
lea
or
sub
push
adc
lcall
clc
xor
movsb
or
mov
lea
push
mov
pop
fnstcw
jb
cmp
dec
test
testb
and
outsl
out
adcb
jb
mov
into
fdivr
jl
cmp
pop
in
mov
sub
sub
xchg
adc
mov
or
add
sub
jo
stc
cltd
gs
add
in
jb
add
hlt
mov
pop
pop
out
movsl
adc
loope
xor
cmp
push
clc
mov
mov
popf
into
and
adc
cmp
push
mov
push
adc
and
sub
sub
adc
dec
add
mov
jmp
lret
lea
sub
dec
jbe
pop
shrl
jns
sbb
std
xor
test
scas
out
adc
pop
xchg
test
std
loopne
sub
sti
cld
pop
loop
add
xchg
mov
dec
xchg
adc
sub
test
es
pop
shr
ds
mov
jmp
adc
jmp
cwtl
xchg
aam
repnz
push
hlt
pop
push
mov
adc
in
sub
pushl
dec
fcomps
or
inc
shlb
xor
ret
cmp
outsl
lods
inc
ret
xchg
xchg
push
jno
xchg
and
ret
dec
and
adc
cwtl
js
mov
dec
test
addr16
test
sub
fadd
stos
sub
xchg
pop
call
nop
inc
xchg
push
ret
pop
or
andb
inc
shlb
mov
cmp
jne
pop
and
scas
or
jl
mov
mov
jle
mov
mov
icebp
cld
mov
fdivl
lock
fsubl
movsb
pop
dec
rclb
popf
fcoml
and
jne
call
scas
jle
outsb
cmpsl
inc
inc
sbb
cmpsb
pop
xlat
cmpsb
dec
rcrl
or
adc
adc
stos
push
or
test
xchg
add
movsl
out
xor
dec
pushf
in
inc
adc
xchg
adc
shrl
ds
orb
cmp
les
jge
mov
push
xchg
xchg
int3
sub
imul
xor
rcl
mov
inc
mov
stc
xchg
scas
adc
and
bound
pop
mov
add
push
in
and
insl
xchg
flds
and
pop
pop
or
dec
add
inc
or
add
xor
fcoml
mov
cmpsl
mov
sub
mov
sub
jmp
fs
js
mov
loop
xor
mov
cmp
and
and
shlb
inc
rcl
mov
icebp
clc
xchg
negb
adc
mov
iret
sub
pop
rorb
cmp
xchg
push
xchg
inc
xchg
clc
dec
rorl
xor
push
xchg
sub
leave
icebp
in
and
movsb
push
cmp
cltd
sub
dec
lods
cli
add
aad
stos
sub
into
jmp
lret
sbb
cmp
pop
adc
aam
mov
cmp
xor
push
push
add
adc
sbb
lret
xchg
cld
lahf
pop
cwtl
mov
sub
out
hlt
adc
xchg
add
ja
inc
inc
sub
enter
pop
add
lea
clc
or
andl
cmc
out
clc
cld
repnz
jmp
cmp
imul
cld
jo
xchg
push
xlat
xor
sbb
clc
in
or
call
xor
jb
jmp
xchg
or
lcall
orl
cmp
les
or
mov
cli
sar
pop
xchg
fsubl
ja
ss
or
push
stos
push
xchg
ljmp
test
ljmp
loop
pop
test
dec
mov
push
shl
je
xchg
xchg
jno
xchg
clc
mov
sbb
jne
iret
xor
pop
out
and
das
lea
inc
or
imul
enter
adc
pop
inc
add
scas
dec
aas
hlt
or
mov
mov
cmp
jb
in
je
cmp
outsl
adc
and
pop
push
sarb
pop
adc
mov
shl
shrb
iret
pop
adc
paddq
xchg
push
mov
xchg
popf
aam
add
lods
cld
les
push
mov
test
cltd
cmp
icebp
push
or
add
sub
xchg
movsl
cli
aad
fwait
mov
ret
jl
test
sbb
jne
sub
les
in
jo
mov
fstpt
add
inc
or
inc
jle
out
xchg
jb
sbb
outsl
push
mov
lea
jae
add
je
aam
fidivrs
lods
push
mov
ljmp
test
jb
movsb
push
xchg
lret
mov
mov
sbb
je
xchg
insl
pop
adc
pop
stos
push
xchg
add
xor
inc
lods
mov
icebp
or
orb
jbe
cmpsl
and
or
dec
mov
and
xor
lock
mov
push
rol
mov
lcall
aad
push
xor
in
or
sbb
and
and
adc
and
push
stos
or
mov
push
loop
jae
in
leave
push
and
bound
sti
sub
xlat
lods
push
daa
movsl
or
mov
or
adc
sbb
popa
cltd
inc
adc
scas
lret
push
call
and
and
fcomps
loopne
popf
mov
ja
cs
test
jns
sub
adc
inc
mov
mov
mov
push
ds
lret
int
jg
mov
sub
pop
mov
pop
or
lods
aam
call
or
dec
dec
sarb
xchg
lea
je
cmp
inc
fcoml
cmovns
cmp
dec
enter
sti
or
mov
repz
jg
mov
mov
pusha
in
mov
int3
movsb
cmp
sbb
cmc
mov
push
xor
dec
dec
mov
and
cmp
cltd
mov
push
adc
inc
mov
fs
pop
dec
mov
push
mov
push
lret
xor
gs
faddp
xchg
adc
mov
stc
add
popf
or
adc
push
sbb
jb
test
call
movsl
sub
adc
push
psrlw
add
jge
and
inc
dec
and
jg
scas
test
and
aam
or
pop
sbb
or
push
push
pop
mov
push
adc
ss
push
cmp
negb
xor
mov
test
xor
and
pop
btc
cwtl
call
or
sub
fsubr
das
cmp
test
inc
mov
jmp
mov
jmp
adc
lahf
mov
popf
pop
xchg
rorl
xchg
cltd
gs
sub
sbb
fdivrs
sub
cltd
pop
adc
fdivr
push
jmp
cmp
lods
cmp
sbb
fsubp
inc
mov
mov
cmp
xchg
and
mov
xchg
lret
mov
dec
sti
movsl
xchg
or
jg
add
pop
scas
mov
inc
push
loopne
xchg
mov
mov
pop
bound
push
dec
lcall
xchg
lahf
jo
mov
lds
pop
lret
mov
js
scas
inc
lahf
jmp
mov
adc
loopne
inc
cwtl
enter
xor
pushf
nop
das
and
in
mov
or
add
cltd
mov
and
mov
loop
enter
stos
xchg
fld
jl
adc
mov
or
add
pop
adc
xor
xchg
push
shrb
push
jle
pop
mov
sub
xchg
sbb
loope
dec
xorb
pushf
rolb
mov
jle
cmpsl
mov
mov
and
xchg
pushf
and
sub
adc
push
pop
push
sub
mov
jle
dec
mov
mov
mov
xchg
jne
jb
xor
mov
and
mov
cmpsl
xor
addr16
xchg
sub
cwtl
pop
mov
lods
out
push
setne
outsl
aas
in
stc
out
lock
inc
clc
xor
xchg
hlt
scas
int
pusha
xchg
dec
add
insl
push
into
xchg
adc
push
dec
daa
cmovnp
sbb
sub
add
lods
cltd
hlt
nop
in
xchg
popf
fstpl
pop
pop
pop
sbb
cmp
addr16
or
push
insb
cmp
dec
mov
fsubl
sbb
push
aam
aad
pop
cmp
add
gs
sbb
jg
push
fdivrp
jecxz
sbb
push
in
mov
add
xor
testl
push
mov
enter
pop
fwait
lock
movsl
test
mov
and
movsb
lock
sti
cwtd
push
or
push
cld
mov
notb
jp
push
or
or
jnp
cld
adc
jb
mov
add
je
bound
mov
fdivs
push
mov
or
dec
mov
dec
ja
mov
mov
adc
loopne
adc
adc
xchg
push
ss
xchg
xchg
adcl
push
ja
js
or
cwtl
adc
jb
or
mov
sub
mov
cmpsl
scas
cmp
and
xor
and
shrl
icebp
push
hlt
jne
lahf
push
xlat
mov
or
rcrl
adc
mov
sahf
push
adc
cmc
test
jg
in
mov
cmp
testl
lret
jno
and
cmp
pushl
mov
xor
add
inc
or
mov
mov
mov
push
jmp
or
mov
push
jmp
jbe,pt
xor
fcoms
xor
xchg
fs
ret
jl
pop
jp
sub
insl
jmp
pusha
dec
mov
pusha
mov
adc
bound
lds
clc
fldenv
or
xor
adc
int3
in
jmp
dec
sbb
push
imul
push
xor
mov
mov
sub
xchg
inc
into
outsb
mov
ficoml
adc
pop
lock
jl
lret
movsl
into
sub
adc
sbb
jno
push
push
xor
cs
mov
adc
and
or
mov
or
adc
xchg
fs
push
cmp
stos
mov
mov
sbb
pop
lods
push
in
xchg
jne
mov
push
cwtl
xchg
jl
mov
aad
dec
mov
jmp
fcmove
mov
imull
jl
scas
je
adc
push
pop
adc
imul
dec
or
dec
les
push
adc
add
scas
test
or
push
inc
push
lds
adc
aam
mov
leave
mov
and
or
nopl
add
add
xor
int
mov
out
outsb
cmp
fimull
jp
mov
xchg
push
shlb
sbb
and
fcomps
adc
or
push
lret
pop
test
scas
cmp
add
scas
call
icebp
roll
inc
add
mov
test
inc
bound
stos
es
dec
xchg
push
xchg
fdivrs
andl
push
test
ds
lods
sahf
stos
adc
cld
and
ljmp
rorb
int3
inc
mov
aad
test
pop
push
adc
lods
clc
fildl
repnz
enter
mov
sbb
xor
repnz
std
loope
xchg
mov
sub
or
stos
xorb
mov
adc
cmp
jne
fnstsw
scas
add
jmp
xchg
and
pcmpeqw
add
ret
jmp
push
jp
pop
clc
mov
je
mov
jne
cmp
xor
leave
pop
mov
iret
fs
bound
in
add
ljmp
sbb
inc
scas
add
stos
jmp
adc
leave
xchg
mov
jbe
inc
dec
gs
pop
jb
je
mov
mov
jb
mov
dec
push
loope
pop
inc
jne
cmc
out
les
push
jle
pop
or
jbe
sub
sbb
xor
push
popa
fwait
subb
xor
ljmp
dec
in
dec
lods
test
ja
scas
and
mov
pop
out
push
adc
and
inc
xchg
push
ja
js
clc
mov
mov
sub
in
ds
sarb
dec
push
push
pop
shlb
hlt
sahf
adc
repnz
mov
push
sbb
jb
lahf
jo
mov
in
push
dec
lds
aad
call
adc
clc
arpl
cli
jge
push
and
addr16
mov
mov
lods
das
pop
lods
push
or
or
jge
or
mov
jl
inc
sbb
xor
mov
inc
sub
cmp
and
das
add
test
gs
sbb
divb
lahf
stos
pop
xchg
fsubp
xchg
adc
mov
shl
and
mov
and
mov
lock
xor
std
push
pop
add
mov
dec
lret
or
clc
push
or
cmc
sbb
test
test
xchg
mov
icebp
jl
fiadds
mov
and
cwtl
int3
mov
int3
movsl
mov
and
cmp
decl
mov
pop
xor
scas
lods
mov
mov
cmpsl
xchg
in
inc
cmpsl
adc
mov
cwtl
outsl
rolb
or
lcall
jbe
sbb
xchg
andb
sub
inc
cmp
adc
fcoml
sub
and
aam
ljmp
jmp
mov
mov
sub
adc
cli
adc
cmp
jl
popf
adc
lds
loop
cmpsb
pop
or
mov
xchg
stc
adc
mov
xchg
push
ret
dec
fimuls
in
ds
sbb
jbe
leave
pop
push
jp
mov
push
inc
dec
bound
fisubl
inc
mov
jl
jmp
popf
test
mov
les
movsl
cs
cwtl
fdivs
arpl
or
stc
mov
or
mov
jno
push
enter
add
mov
mov
jo,pn
fs
mov
dec
movsl
jno
mov
xor
and
or
xchg
cmp
cs
mov
adc
jns
mov
sbb
xchg
push
xchg
mov
push
mov
and
sub
rclb
rep
les
sub
adc
cmp
cs
js
rolb
inc
and
adc
jl
enter
mov
mov
jns
adc
or
jbe,pt
or
iret
adc
and
mov
mov
pop
int
xchg
sbb
addl
sbb
pop
subb
jl
addb
mov
xor
or
sub
lcall
mov
dec
jmp
stos
out
test
fst
xor
faddl
fwait
mov
mov
adcl
mov
and
mov
mov
mov
mov
mov
xor
push
pop
test
mov
sbb
xchg
mov
inc
mov
pop
and
adc
mov
or
lahf
adc
push
jmp
mov
push
test
or
adc
pop
icebp
stos
push
push
mov
mov
test
in
test
add
enter
or
rcrb
inc
push
and
jl
add
and
push
add
sbb
cmc
lret
orb
add
cmc
dec
and
jmp
inc
pusha
stos
xchg
pop
int3
jo
lahf
xchg
lds
sub
push
mov
mov
mov
bndldx
jne
and
jo
into
rcrl
jo
test
les
dec
ljmp
sahf
clc
loop
sahf
adc
jb
rorl
push
sbb
push
mov
jbe
dec
adc
push
inc
fcompp
push
hlt
jo
mov
scas
adc
dec
inc
movsl
aas
jae
repnz
clc
add
movsb
mov
sub
clc
and
insl
pop
sbb
test
xchg
popf
nop
push
loopne
mov
outsb
sub
xor
test
cli
scas
stc
cs
roll
loopne
xchg
scas
adc
dec
imul
inc
jge
xchg
or
loope
pushf
sbb
mov
push
and
inc
sbb
outsl
xor
test
add
cmp
add
nop
lret
jle
scas
fwait
lock
pop
faddp
push
stos
jo
cmp
mov
push
pop
fsubrl
sub
movsb
fidivrs
scas
sbb
dec
lea
push
pop
xchg
sbb
xchg
sub
sub
mov
push
lods
jp
les
popa
inc
sbb
jl
jo
adc
fdivl
mov
xchg
mov
fdiv
mov
or
sbb
sarb
cmpsl
lcall
mov
outsb
xor
jmp
cmp
mov
inc
lods
cmp
add
mov
loop
test
mov
ja
mov
aam
in
fdivrl
repnz
adc
rorb
repz
int3
leave
clc
rcrb
xchg
jmp
adc
dec
mov
mov
bound
inc
enter
enter
dec
jl
andl
daa
fwait
adc
push
inc
dec
dec
mov
pop
lock
mov
cmp
add
ss
sti
and
movsb
ss
xor
ss
push
mov
push
mov
dec
mov
push
cld
cmp
cmpsb
sub
andl
cmp
sub
sub
push
dec
insl
cmc
dec
rcl
push
push
bnd
mov
inc
mov
enter
hlt
and
rorb
jbe
inc
dec
and
cmp
and
es
lahf
adc
adc
popa
das
xchg
xchg
add
push
into
sbb
cltd
cmp
cli
jbe
pop
jmp
push
fstps
xchg
pusha
cld
subl
cli
imul
push
in
sti
aas
ficoml
dec
jmp
loop
int
inc
movsb
mov
or
pop
inc
bound
sbb
rcll
test
in
adc
je
sub
xchg
inc
or
jge
sar
and
or
stos
stos
push
enter
cwtl
and
xor
push
push
xor
icebp
push
cmp
and
cmp
xor
test
inc
pop
lods
out
fsubs
jmp
xor
xchg
push
xchg
adc
sbb
mov
imul
sub
orb
push
mov
xchg
push
xorb
negw
or
fwait
xchg
xchg
pop
pop
inc
call
xchg
popf
cld
mov
xchg
sbb
daa
cmp
adc
and
add
inc
jne
mov
lds
jne
xchg
test
xor
stc
mov
mov
adc
jbe
dec
nop
mov
adc
fiadds
cmp
and
mov
test
and
and
sub
int3
xchg
movsb
loop
in
inc
fsubl
mov
aaa
nop
loopne
dec
jmp
test
clc
xor
stos
movsl
jg
aas
outsl
call
push
xchg
movsb
les
mov
test
test
xchg
sbb
cmpsb
sbb
test
adc
push
xchg
jge
sbb
pop
pushf
dec
sbbl
filds
movsb
push
inc
pushf
push
xor
pop
adc
test
mov
pusha
movsb
out
push
xlat
xchg
out
fsubr
cltd
xchg
out
dec
adc
and
movsl
cmp
in
ljmp
push
fstps
jp
xchg
cmp
mov
sbb
and
imul
cmp
sub
inc
mov
xlat
enter
das
iret
std
ljmp
add
lea
cld
pop
inc
mov
test
add
push
adc
or
icebp
aam
fadds
jbe
into
cld
lea
std
jae
repnz
iret
test
pop
jle
add
rorb
or
adc
sbb
jno
sub
mov
in
pop
dec
jmp
mov
popf
pop
mov
mov
push
push
cmp
daa
adc
lcall
pop
xchg
sarl
xchg
and
pop
sbb
push
fs
push
mov
jecxz
fildll
test
test
xchg
lret
fsubr
inc
sbb
mov
gs
jp
fwait
or
jle
dec
mov
out
loopne
clc
mov
inc
push
inc
dec
push
pop
mov
push
or
jb
arpl
dec
dec
out
pop
rol
and
popaw
sahf
insb
cmp
aam
mov
fs
or
dec
mov
or
adc
cmc
or
sti
pop
lods
daa
inc
fisubs
jp
pop
sub
pop
nop
mov
lock
les
or
leave
test
jne
xchg
pop
daa
mov
sub
test
ljmp
jne
xor
push
sub
inc
push
mov
mov
in
and
xor
sbb
jp
push
push
loop
mov
repnz
sbb
and
js
push
test
mov
and
dec
jo
mov
mov
mov
call
xor
inc
dec
enter
or
test
mov
ljmp
adc
mov
adc
jne
sub
adc
outsl
mov
or
adc
fimull
sub
dec
jo
adc
xchg
xchg
pop
daa
enter
or
sbbb
jae
in
sub
popl
adc
pop
mov
pop
inc
pusha
enter
pushf
enter
fadd
jmp
sbb
sub
push
mov
repnz
mov
jne
mov
lret
push
test
adc
adc
jb
mov
scas
ret
ficoms
daa
and
rcr
or
mov
pushf
je
stos
push
inc
mov
and
mov
sub
mov
in
jp
sub
adc
mov
scas
ret
ficoms
daa
and
shlb
sbb
test
xchg
push
call
sub
das
adc
cmpsl
fimull
push
jo
pop
daa
nop
mov
adc
nop
cli
mov
adc
and
inc
sbb
jnp
adc
cwtl
test
outsl
lods
aaa
sbb
inc
ds
dec
push
in
push
cmp
or
cmp
aam
push
mov
xchg
mov
push
push
jnp
lods
ja
and
lock
inc
cmp
test
push
pop
je
in
adc
stc
orb
call
xor
push
fyl2x
and
xchg
add
dec
mov
dec
and
mov
pop
xor
scas
leave
inc
fstps
xchg
adc
pop
or
mov
test
rclb
and
xlat
jne
nop
in
push
inc
ljmp
adcb
sarb
sbb
les
dec
push
add
insb
push
xchg
sbb
sbb
mov
adc
loopne
mov
mov
mov
mov
xor
in
fwait
sahf
scas
mov
lcall
dec
nop
cmp
mov
wrmsr
xchg
sbb
push
into
movsb
lock
push
pushf
adc
push
cld
sub
pop
in
push
mov
and
std
movb
push
lcall
or
call
jne
pop
dec
or
cmp
add
test
subl
aaa
call
adc
add
and
sub
fwait
sarb
inc
inc
xchg
inc
pushf
pop
pop
jle
push
movl
test
leave
push
dec
stos
out
mov
inc
mov
aam
hlt
ss
nop
jmp
xchg
or
mov
add
xlat
clc
ss
or
aam
push
dec
cmp
jb
sbb
dec
inc
push
push
or
jns
jmp
jb
push
test
cmp
jo
mov
imul
lcall
xor
or
lea
adc
leave
push
push
cvtdq2ps
cmp
je
jb
inc
sub
or
test
add
mov
movsb
and
pop
mov
and
adc
and
cwtl
sbb
je
nop
sbb
mov
fidivs
jo
test
push
push
mov
rolb
notb
pop
fdivr
sub
adc
test
sbb
push
push
adc
inc
pop
test
push
sbb
mov
cld
test
mov
dec
push
and
and
mov
xor
push
mov
adc
push
xchg
add
call
and
lods
xchg
fstl
test
call
jmp
xor
mov
or
icebp
or
mov
stc
pop
push
fildl
jnp
cltd
pushf
pop
mov
test
cmp
jne
adc
cmp
adc
inc
dec
adcl
add
jl
push
push
gs
xchg
push
jne
and
mov
insb
push
adc
fistl
push
dec
and
add
adc
outsb
and
cmp
cmp
call
xor
mov
cmp
fnsave
in
scas
shl
aad
andl
shr
or
dec
cmovae
pop
fs
jb
stos
movsl
adc
call
mov
data16
movsl
and
dec
or
cld
dec
ret
or
sahf
dec
mov
pop
pop
jae
loop
or
jne
push
or
and
push
mov
stos
mov
and
or
sahf
lret
hlt
inc
stc
les
pop
cmc
call
xchg
mov
jne
dec
xchg
pop
shl
pusha
add
imul
ret
in
leave
adc
cltd
adc
shl
std
lcall
add
sbb
loopne
mov
sub
ljmp
push
lret
ret
and
and
or
andb
ret
je
test
popa
add
jmp
cs
xchg
jg
adc
cmp
dec
push
dec
out
xor
inc
lods
adc
mov
rorb
pusha
decl
xchg
scas
cmp
push
es
lret
nop
or
adc
loop
call
mov
add
jno
inc
ljmp
std
jne
xchg
xor
mov
fmull
jns
cltd
popf
pop
xor
cmp
dec
xor
push
outsb
daa
push
test
jne
cld
shl
pushf
dec
dec
loop
cmp
cmp
sub
xchg
adcb
push
push
mov
fdivs
and
and
xchg
jmp
push
push
mov
mov
pop
inc
jecxz
aas
and
cli
dec
xchg
xchg
ss
pop
leave
dec
push
aad
xchg
fdivrs
call
incl
insb
arpl
push
sar
adc
jo
add
pop
cmpsl
mov
xchg
addb
test
push
les
push
inc
inc
ds
std
fimuls
daa
fcom
sbb
or
clc
je
add
aam
xchg
or
negl
push
xchg
jmp
aam
daa
test
xor
inc
sbb
jmp
lods
push
xchg
mov
mov
orl
test
loope
dec
dec
pop
cld
cld
mov
mov
daa
das
push
and
and
test
cs
inc
sbb
lods
sub
push
push
out
xor
movsb
and
mov
or
jge
cli
cmpsb
cli
add
mov
jae
and
cwtl
adc
loopne
adc
mov
jbe
or
push
adc
xchg
mov
xchg
mov
or
inc
sbb
std
sbb
stc
pop
adc
or
or
cmp
fcomps
push
pushl
cmpsb
clc
mov
cld
adc
cmp
or
int3
pcmpeqw
mov
mov
jbe
test
movb
pop
or
out
insb
test
push
push
xlat
fs
loop
movl
out
mov
lcall
sbb
mov
add
add
cmp
subb
and
fwait
das
push
push
fstpl
add
mov
and
sbb
and
mov
push
mov
pop
add
ljmp
andb
rorl
je
daa
sbb
je
rcl
insb
pop
and
or
adc
out
int3
add
xor
inc
shll
mov
fs
inc
cmp
ret
xor
add
rolb
movsb
loope
push
cli
or
loop
add
ror
add
push
or
jne
stos
addb
push
mov
push
scas
fwait
ror
xchg
push
mov
mov
fs
and
sbb
cmp
je
cmp
mov
in
and
jp
add
xchg
jg
call
sbb
insb
scas
mov
mov
stos
and
push
or
sub
push
push
outsl
cmp
push
cmp
jmp
ret
mov
imul
add
rclb
stos
jg
jne
dec
jmp
pop
xlat
fdivs
fmul
insb
icebp
pop
sub
dec
add
xor
es
push
decb
imul
nop
xchg
aad
sahf
dec
leave
push
js
js
jg
leave
push
push
jge
fs
insb
scas
xchg
mov
test
notb
mov
cmpsb
add
mov
and
jns
or
addr16
jo
sub
mov
or
enter
pop
dec
mov
ret
in
jb
lret
adc
or
clc
pop
movsb
or
or
hlt
je
je
xchg
sbb
adc
loope
push
imul
pop
test
pop
push
mov
das
data16
adc
or
jmp
push
pop
mov
cmp
push
fmull
and
or
mov
jmp
sub
dec
pop
clc
xchg
cmpl
mov
adc
fiaddl
xor
push
add
fbstp
mov
pop
insl
jmp
xor
icebp
outsl
je
cli
rorb
cmp
push
push
lret
inc
jnp
mov
pop
outsb
sbb
jle
addr16
divb
popa
mov
insl
mov
adc
push
ljmp
add
inc
or
or
adc
jg
push
pop
pop
test
mov
sub
stc
cmp
inc
cltd
inc
push
jo
mov
push
push
sbb
or
cltd
sbb
add
bound
dec
test
push
push
sbbb
jg
sub
fimull
sbb
pop
pop
mov
mov
incb
imul
pop
push
test
shl
cmp
out
pop
out
mov
cmpsl
insb
je
repnz
add
iret
xchg
inc
push
mov
or
add
add
mov
inc
jecxz
push
inc
cmp
or
xlat
pop
push
shrl
sub
add
ja
rorl
push
and
or
inc
dec
daa
cmp
jb
pop
pop
cltd
test
cmp
adc
inc
ret
push
push
inc
aaa
scas
fs
sub
fistps
mov
xor
jmp
jno
add
push
mul
mov
mov
adc
lods
ljmp
jg
xchg
clc
call
mov
shl
xchg
loopne
push
xor
outsb
push
pop
adc
es
or
push
push
ljmp
dec
fimuls
leave
aaa
xor
cwtl
ljmp
mov
lret
inc
ret
lcall
adc
ja
sub
push
sub
dec
add
pop
les
add
fildll
mov
mov
leave
imul
jmp
or
jmp
and
sbb
lahf
das
imul
andb
sbb
mov
push
cmp
shrb
adc
mov
mov
inc
nop
mov
jb
orl
inc
into
push
je
loope
loope
inc
outsl
call
sar
loop
lcall
push
ljmp
aam
cli
adc
adc
roll
pop
ljmp
aas
xor
stc
xchg
fidivl
pop
and
in
inc
cmpsb
fs
xchg
and
push
bound
inc
dec
and
push
andb
push
shl
push
call
fucomi
jl
shl
or
pop
movsl
fldcw
push
call
jmp
mov
cmp
sbb
jmp
sub
sbb
push
adc
sub
push
imul
fistpl
sub
je
fsts
xor
pop
mov
push
sub
inc
pop
inc
add
mov
xor
add
int3
inc
and
mov
fs
sbb
push
gs
jo
fstl
push
dec
pop
or
test
and
push
xchg
jl
je
jbe
shrl
nop
cmp
or
lcall
je
popf
outsb
add
popf
pop
adc
push
cli
test
loope
jo
xchg
ret
pop
imul
jecxz
and
push
cmpsb
cs
cmpsl
mov
sub
xchg
sbb
sti
aad
inc
test
sti
push
push
and
mov
cld
shll
or
and
cmp
jp
add
jnp
mov
add
adc
imul
pop
push
and
xor
add
les
mov
testl
or
es
add
rolb
fdivrs
push
xor
cld
mov
fadds
test
call
or
add
shr
not
addl
add
sub
or
sbb
add
stos
cwtl
testl
cmc
push
or
jne
sbb
add
jmp
sub
dec
je
push
push
xor
lock
xor
mov
dec
std
or
sbb
or
dec
and
mov
sub
outsl
in
pusha
jbe
xchg
mov
bound
jns
dec
add
jb
xor
cmp
lock
adc
pusha
mov
and
std
push
in
pop
test
or
in
inc
or
mov
sbb
mov
adc
adc
push
sub
stos
repnz
or
push
jns
dec
in
js
inc
sbb
mov
push
sub
inc
sbb
gs
jmp
arpl
enter
and
mov
loopne
xchg
mov
jns
xlat
push
sub
mov
xor
or
insl
lea
xor
xchg
push
sub
dec
pop
and
xor
stc
cltd
jae
adc
cli
jbe
sti
fistl
lods
add
push
fs
sub
and
push
sub
and
xor
sub
or
xor
push
add
mov
pop
inc
jmp
sbb
inc
into
add
inc
or
mov
arpl
add
mov
jl
dec
cmp
mov
add
mov
fsincos
pop
inc
fs
pop
inc
mov
aam
mov
and
fidivrl
adc
enter
add
mov
out
fdivp
adc
cmp
jne
mov
sub
test
call
stos
adc
push
mov
imul
je
push
and
pusha
cmpsl
or
pop
xor
adc
adc
les
call
push
mov
test
enter
out
fiadds
adc
pop
adc
or
or
push
rcrb
and
jne
std
cmp
and
or
mov
push
dec
inc
inc
mov
pop
hlt
push
pop
lcall
call
xchg
stos
push
mov
push
and
repz
dec
sbb
fistpll
out
std
cmp
jle
ret
aaa
enter
movsl
shrl
mov
add
xlat
mov
pop
push
or
inc
mov
inc
je
je
xor
sbb
ljmp
dec
pop
adc
xchg
xor
or
cmp
std
sbb
pop
cs
dec
lods
cmp
fbstp
test
mov
std
out
adc
jmp
mov
xchg
cmp
test
or
push
adc
pop
sbb
and
push
in
inc
ret
scas
roll
les
mov
daa
add
mov
push
jo
test
add
sub
mov
adc
inc
test
jmp
mov
push
lcall
and
xchg
out
cld
xchg
mov
scas
imul
xchg
je
push
push
les
xchg
bound
jge
sub
adc
mov
test
rclb
sbb
sub
or
pop
ret
or
adc
cmp
iret
pop
aam
dec
fdivrl
call
inc
sub
or
jnp
lock
xor
call
aam
test
cmc
sbb
and
flds
cmpsl
push
mov
pop
call
xchg
lock
les
shl
cmc
mov
stc
push
or
outsl
rcrb
shr
push
dec
inc
jo
or
lea
call
push
push
clc
push
nop
cs
sbb
xor
in
scas
jb
sbb
shl
aas
cmpsl
je
test
lods
enter
pop
in
and
or
add
lret
in
xor
jle
les
push
inc
jno
adc
push
jmp
aam
sbb
sub
pop
pop
shlb
aaa
sti
rorl
jns
std
stc
add
jge
int
lret
adc
add
push
cld
xor
dec
pop
and
jmp
mov
adc
jne
or
cmp
inc
cltd
add
mov
xchg
cmp
mov
cli
ror
sarl
sub
nop
inc
mov
leave
jp
es
fs
adc
lret
adc
ja
das
int3
dec
mov
pop
jl
jne
enter
ret
jnp
sarl
je
adc
push
add
je
lods
adc
mov
movsl
in
push
rcrb
hlt
mov
inc
adc
fs
or
sbb
nop
mov
dec
call
sbb
dec
lods
test
push
je
lods
insb
test
jl
out
cmpsb
shlb
adc
jle
push
mov
adc
dec
push
clc
ret
mov
decb
inc
fiaddl
cmp
adc
mov
lret
push
or
xor
jbe
lea
out
out
cld
inc
rorl
xchg
loopne
dec
or
pop
popf
jmp
cmp
lahf
repz
adc
pusha
ficoml
inc
add
je
ret
push
or
repz
pusha
js
push
test
sbb
push
out
mov
pop
or
add
fiaddl
inc
and
sbbl
xchg
adc
mov
jne
cmp
cmp
sub
xchg
lods
add
mov
lock
nop
loopne
arpl
jge
pop
mov
aas
test
dec
popa
call
andl
dec
loopne
sub
mov
xor
jle
insb
and
adc
or
and
insb
and
in
into
and
mov
sub
inc
xchg
dec
std
push
int
sbb
iret
out
or
mov
and
xchg
mov
sbb
sub
cli
dec
jbe
and
adc
sub
lcall
or
mov
jbe
mov
dec
fsubrp
pop
lahf
aam
imul
cli
sahf
inc
sub
sub
and
nop
fdivrs
lea
pop
mov
sbb
pushf
or
push
xchg
cmp
arpl
scas
das
xlat
xchg
outsl
pop
std
dec
mov
pop
jo
dec
dec
leave
repnz
lods
daa
jge
push
dec
push
inc
cmp
adcl
jns
arpl
and
push
jmp
adc
sbb
in
inc
adc
or
loop
pop
pop
out
jbe
call
cmp
ret
ljmp
je
cmp
aam
test
mov
shll
bndldx
cmp
jb
jp
add
test
clc
inc
push
sbb
xchg
inc
data16
ljmp
pushf
and
mov
loope
mov
jmp
mov
in
movsl
dec
mov
ja
xor
outsl
mov
jl
or
fstpt
das
imul
cmp
add
jmp
push
sub
xlat
mov
test
icebp
test
adc
or
je
sub
call
mov
xchg
aaa
or
and
mov
inc
jne
clc
jle
in
jbe
mov
nop
jp
jbe
cli
pop
inc
daa
pop
dec
loopne
push
insl
shll
xor
xlat
in
fs
cmp
xchg
cmp
les
fucomi
dec
ret
pushl
movsl
bnd
mov
add
mov
inc
mov
mov
and
enter
lahf
popl
call
stc
xor
enter
dec
add
push
push
push
mov
or
enter
cmp
push
push
arpl
cmp
test
inc
jmp
cli
aad
in
adc
call
repz
mov
jp
std
push
das
jmp
repnz
je
jmp
std
mov
push
mov
mov
test
stos
cmp
jge,pn
icebp
aas
cwtl
jl
and
pop
sub
adc
lcall
test
push
push
pop
aad
fdivrp
out
ret
call
or
or
pop
pop
or
pop
fscale
dec
imul
jecxz
dec
mov
jne
cmp
fsubl
mov
dec
mov
mov
mov
pop
cwtl
scas
test
mov
and
mov
ds
enter
loope
aas
push
out
push
dec
jecxz
pop
adc
or
dec
or
rcll
mov
pop
mov
sbb
pop
push
xchg
dec
repnz
xor
or
arpl
pop
mov
ja
scas
cwtl
sub
dec
push
or
push
inc
popa
and
adc
test
and
push
bound
or
or
xchg
or
in
push
movsl
jge
ja
scas
popf
jge
pop
repnz
add
adc
mov
pop
xor
roll
in
sub
push
inc
xor
sub
cs
sbb
push
mov
xchg
or
dec
or
push
testb
mov
pushf
adc
jne
sysret
add
xor
push
nop
in
enter
push
aad
adc
jne
pop
jns
popf
hlt
out
imul
mov
dec
add
lret
sbb
push
cmp
xor
or
xchg
inc
insl
aas
loope
insl
add
sbb
or
inc
push
mov
or
aad
sti
push
dec
enter
cmpsb
leave
pop
mov
in
jnp
dec
add
and
and
add
pop
jmp
cmc
adc
in
rcl
and
sbb
shll
inc
or
add
xorl
lock
push
movsb
pop
decb
sub
push
push
in
dec
in
pushf
insb
or
push
pushf
clc
bound
loope
mov
adc
or
push
pop
cmp
stos
jno
repz
fwait
pop
out
mov
and
xchg
mov
and
mov
dec
pmulhw
je
loopne
adc
pop
clc
stc
addr16
cmp
enter
ret
aaa
mov
and
pusha
scas
sub
sub
orb
pop
int3
clc
stos
push
jg
fsubrl
pop
mov
pop
push
shlb
jg
mov
popa
inc
xchg
jmp
jp
pop
fwait
push
sti
xchg
sti
repz
rdmsr
sub
or
push
adc
sub
push
and
add
push
fldcw
dec
mov
add
stos
es
andnps
mov
ja
mov
mov
sbb
pop
cmp
test
sbb
ror
push
xchg
inc
mov
adc
lock
ss
imul
jmp
adc
mov
fs
vmptrld
stc
dec
pop
les
stc
pop
lea
push
dec
sbb
mov
or
pop
inc
rcr
mov
cltd
outsb
inc
dec
pop
sub
addr16
inc
xrelease
pop
jp
outsb
mov
std
shlb
mov
and
pushf
sbb
test
add
adc
xor
mov
in
xchg
movsl
or
int3
mov
and
fistps
or
xchg
in
notb
andl
xor
sti
lret
push
pop
adc
pop
fisubrs
loopne
jo
pop
inc
sub
movsl
sub
xchg
fdivrs
push
mov
xor
int3
test
js
jo
insl
push
push
xlat
xchg
xchg
and
mov
bound
ljmp
and
and
inc
add
test
sahf
inc
sub
mov
ljmp
jnp
sub
mov
mov
mov
jne
lds
mov
adc
xchg
adc
orb
or
pushf
pop
mov
sub
xchg
inc
or
adc
and
push
lds
push
ret
mov
sahf
sub
sub
inc
and
nop
cmp
push
or
lock
or
cmp
in
arpl
pop
xor
pop
dec
loopne
xor
xor
pop
mov
cmp
or
les
popa
mov
mov
xor
pop
xchg
xor
clc
inc
lock
jp
cmp
mov
xlat
es
je
adc
mov
mov
mov
and
dec
mov
mov
pop
dec
push
xchg
xor
popa
jo
push
and
add
out
imul
push
inc
mov
push
popf
mov
push
and
cli
addr16
rolb
jne
push
ljmp
jmp
mov
orl
cmpsb
sbb
or
test
pop
jl
jl
fimuls
adc
arpl
push
mov
sbbb
lea
test
stos
cli
dec
xor
mov
cmc
ficompl
xchg
adc
xchg
add
push
fdivl
into
or
nop
cs
nop
cmpsl
sub
xchg
test
mov
jne
cmpb
movsl
enter
int
andl
push
mov
adc
push
push
lea
daa
push
mov
nop
adc
mov
call
sbb
xlat
cmp
dec
pop
call
dec
mov
jnp
lahf
inc
nop
or
je
inc
cmp
stc
dec
sub
jle
fimuls
cs
negl
jge
test
push
repz
sub
sbb
xchg
inc
outsl
push
lea
sbb
aad
jbe
loopne
cmp
lea
ss
daa
push
jo
mov
mov
xchg
mov
push
or
and
jo
jg
mov
mov
mov
xor
adc
ret
add
inc
and
add
xor
adc
sbb
xchg
test
adc
pop
out
call
add
and
jge
int3
xchg
fnstenv
daa
cmpb
orl
sub
fcomps
and
nop
fcoms
xorl
xchg
push
adc
sahf
add
push
or
outsb
inc
dec
mov
lock
xchg
xchg
js
add
push
call
ficoml
mov
jl
pop
or
sbb
push
adc
and
jb
cmp
push
popa
xchg
cmpsl
cld
gs
or
sbb
or
jmp
bound
cmp
mov
jo
rorl
movsl
inc
ds
mov
pop
sar
cld
xchg
ret
mov
jp
add
mov
mul
bound
push
sub
push
loopne
fs
push
cmpl
or
adc
or
mov
jge
xor
push
jl
es
xor
sbb
sbb
add
inc
and
cs
shr
add
in
ja
jb
dec
addr16
popa
jmp
lock
pop
imul
cmpsb
lcall
clc
gs
subl
ljmp
xchg
in
pop
push
mov
pop
inc
cmp
push
ds
je
xchg
pop
iret
and
lcall
and
inc
das
std
test
sarb
jno
stos
xchg
inc
or
or
fcmove
pop
or
pop
or
call
stc
mov
scas
into
test
lock
pop
push
aad
add
adc
cltd
ja
test
mov
adc
jno
sub
adc
lret
push
lahf
mov
mov
mull
pop
push
sbb
ret
dec
sbb
inc
lea
mov
or
and
testb
aas
mov
jg
call
cmovns
push
andl
xor
mov
pop
mov
and
dec
xor
and
add
or
and
sub
mov
data16
jp
sub
add
jmp
sbb
and
call
push
cli
xchg
pop
sub
pop
aas
push
les
sub
pop
push
dec
dec
gs
cmp
popa
push
push
fsts
test
stos
add
push
jne
inc
jbe
pop
lcall
inc
test
lcall
mov
cmpsl
cmc
adc
popf
mov
pop
inc
and
push
push
adc
sub
cmp
jp
loope
clc
cmp
adc
inc
adc
dec
rorl
adc
out
rcll
int3
lods
lods
lret
push
movsb
mov
adc
adc
orl
mov
adc
mov
das
pop
insl
call
gs
sbb
clc
arpl
adc
mov
jb
dec
call
cmp
das
inc
sbb
lock
cs
jl
pop
test
mov
adc
add
add
cmp
mov
jecxz
pushf
sub
test
mov
sub
push
addr16
jo
loopne
sbb
sbbl
sub
jmp
jmp
add
stc
pop
cmpsl
sub
in
shll
nop
or
das
or
cmp
add
mov
jmp
xchg
dec
xor
imul
ljmp
sub
incb
inc
or
aad
outsl
jl
add
xor
adc
cmp
push
es
lahf
push
call
cmpsl
lds
push
mov
jmp
cmpb
mov
cltd
mov
popf
scas
std
adc
mov
cmpb
sub
testb
cmp
dec
sub
push
jne
pop
mov
and
gs
mov
pop
inc
jo
and
lret
dec
cmp
sub
loope
jae
fcoms
jmp
out
ljmp
add
adc
add
adc
mov
daa
lods
xor
inc
cmp
pop
mov
inc
out
loop
xorl
mov
ret
adc
dec
pushf
ss
or
sbb
jmp
jns
or
and
push
adc
test
icebp
pop
and
stos
gs
jb
cmp
jp
xchg
add
sub
xor
push
add
adc
add
or
test
adc
in
add
adc
xor
jnp
test
sub
lcall
test
out
loop
or
xchg
loop
lock
test
jg
inc
jne
lock
push
arpl
dec
sub
cmc
dec
lock
cs
add
jmp
or
ret
and
pop
lock
iret
or
push
sbb
and
xchg
mov
sub
pop
add
roll
jmp
sbb
sub
fs
add
xchg
mov
dec
jne
dec
scas
and
mov
mov
stos
mov
clc
and
nop
push
sbb
jae
movsl
mov
push
jmp
dec
xor
pop
sub
call
add
and
cmp
or
inc
or
xor
or
data16
popa
or
mov
mov
cli
test
add
push
push
inc
cmp
cmp
jnp
add
lea
lds
cmp
sbb
and
add
mov
aas
cmp
sub
mov
enter
push
dec
sub
jecxz
adc
ret
xor
in
dec
pop
add
xchg
sbb
jecxz
cmp
mov
or
sbb
loopne
mov
sub
add
fildl
out
or
mov
xlat
ds
sar
push
mov
pop
js
sbb
xor
and
dec
lea
int
nop
sub
and
movzbl
cltd
xor
sbb
rclb
pop
lea
sub
sbbl
mov
add
lock
je
push
dec
lods
xchg
or
js
push
sub
sub
inc
mov
lods
adc
mov
add
pop
adc
decb
jg
int3
out
jne
in
push
add
cmc
clc
or
add
xchg
sbb
and
movsb
les
idivb
inc
adc
iret
adc
and
les
sub
ljmp
jmp
shll
fs
xor
cmpsb
enter
je
call
fdivl
les
xchg
and
adc
imul
sbb
cmpb
xchg
repz
aas
sar
xlat
xor
fcoml
cmp
stos
xor
cmp
jb
cld
xor
dec
cs
js
pop
add
push
xor
and
sub
clc
pop
xchg
mov
or
mov
in
dec
pop
jne
push
or
in
or
sbb
enter
test
and
sub
call
enter
mov
mov
and
push
imul
dec
push
lods
outsl
mov
and
lock
push
in
call
xchg
daa
pop
inc
xor
push
push
xor
mov
jbe
sub
jecxz
sbb
dec
sbb
mov
lods
shlb
dec
and
pop
xchg
lds
push
jp
push
pop
inc
aam
cmp
scas
push
pop
sbb
mov
and
xor
insl
jge
add
jb
sub
aaa
leave
add
mov
jbe
out
cmp
test
popa
rcrb
and
movsb
pop
xor
rol
fcompl
mov
push
or
push
mov
scas
popf
xchg
mov
sbb
jne
enter
adc
mov
add
stc
and
cwtl
jns
mov
loop
pop
lds
adc
jb
jne
lahf
ficomps
lea
js
dec
loope
sub
sti
cwtl
jge
dec
pop
out
sarl
jg
test
vmovlpd
repz
or
xor
mov
jo
scas
pop
sti
repz
jge
aam
ret
mov
mov
sarl
push
repz
xchg
nop
cmpsb
jp
jns
push
bound
jl
fsub
nop
das
and
add
mov
mov
xor
call
icebp
test
mov
stos
jecxz
xchg
addr16
adc
add
out
shll
fs
push
outsb
and
pop
pop
rcrl
mov
or
icebp
mov
fwait
xor
test
sbb
xlat
adc
mov
inc
sbb
das
jg
cmp
sub
mov
les
mov
inc
mov
mov
mov
pushf
lock
push
and
stos
cmp
bound
icebp
lea
nop
je
mov
lret
fsubs
mov
push
and
cmc
sub
in
in
cmovle
xor
and
inc
pushf
sbb
pop
nop
in
mov
sub
fucomp
inc
dec
nop
pop
bnd
repz
popf
mov
mov
mov
clc
jge
push
addr16
dec
jns
and
shrb
push
jmp
cmpsl
ret
jno
adc
adc
sarb
clc
or
xor
add
adc
or
jne
out
in
inc
mov
adc
dec
or
shlb
popa
nop
sbb
jp
ja
push
push
cwtl
shrl
pop
xor
insl
or
icebp
cwtl
lods
pop
mov
addr16
lahf
les
dec
jmp
and
and
cld
mov
and
leave
aam
inc
push
out
clc
fwait
orb
push
jne
shlb
jo
pop
jmp
sub
adc
xchg
and
cmc
pusha
pop
mov
xchg
push
cld
lods
mov
inc
or
insl
pop
test
test
jbe
adc
and
cmp
jg
shl
inc
inc
dec
clc
pop
jbe
adc
xchg
mov
pop
and
add
aaa
cwtl
rorl
or
incl
jmp
and
and
movb
xchg
cmc
lock
fisubs
and
aas
add
and
insl
movsl
addr16
jge
mov
sub
fsts
std
inc
push
shlb
push
daa
jne
jbe
sub
jb
push
inc
pushf
push
aam
addb
adc
inc
nop
push
dec
ds
adc
push
es
xchg
jle
xchg
and
mov
out
addb
cmp
inc
decb
fwait
mov
fildl
scas
fcomip
dec
or
pop
mov
daa
inc
inc
push
fstl
sbb
sub
dec
mov
sbb
inc
dec
ret
sub
mov
sbb
not
and
mov
ss
cwtl
push
or
mov
mov
push
pop
int3
push
sub
jg
rclb
lret
jne
xchg
stos
dec
loop
mov
dec
pop
pop
cld
and
jmp
xlat
push
mov
or
and
sbb
adc
jnp
push
in
mov
sbb
jb
adcb
lock
adc
fs
in
ficoml
es
testb
pop
inc
pop
addr16
cmp
imul
jns
loopne
inc
pop
pop
dec
cld
and
je
push
shlb
idivb
inc
xor
cmpsl
rorb
adc
mov
clc
add
sbb
or
hlt
inc
adc
test
stos
repnz
lea
es
and
add
jne
cli
inc
stos
sub
pop
push
cwtl
pusha
popf
cmc
xor
les
es
xor
inc
jbe
and
inc
hlt
pop
arpl
or
adc
lock
xchg
es
sbb
or
mov
or
je
xor
adcb
fdivl
push
les
clc
aaa
adc
int3
jb
hlt
xchg
sbb
lock
pop
and
daa
in
ret
cld
adc
push
push
cmp
bound
daa
lock
rorl
scas
cmp
movsl
sub
into
into
pop
fsubrl
mov
push
pop
std
stos
aas
call
int3
mov
xlat
and
or
hlt
inc
loopne
lock
or
adcb
pushf
and
push
push
cmpsl
bound
pop
hlt
movsl
test
shlb
cmp
pop
cmpsb
mov
clc
insl
orb
cmpsb
push
jecxz
and
ret
jo
push
mov
push
pop
repz
aad
sub
lea
inc
mov
retw
and
mov
enter
jle
push
call
jle
xor
pop
mov
and
mov
xchg
mov
pusha
ljmp
and
ljmp
and
sub
xor
hlt
inc
add
adc
test
or
xchg
xor
stos
lahf
hlt
pop
cld
pop
movsl
cwtl
and
xor
and
mov
jle
inc
dec
das
je
je
ljmp
adc
fisttpl
adc
add
and
xor
and
lcall
xchg
aam
fidivl
and
adc
cmp
add
je
loope
push
jns
inc
aad
jnp
or
xchg
push
or
mov
jo
mov
decb
adc
push
pop
dec
jne
inc
leave
pop
stc
add
or
inc
clc
and
or
sti
cwtl
test
sub
add
adc
jmp
mov
sub
fcoml
sub
adc
cmp
hlt
mov
aad
stos
inc
hlt
and
incb
dec
cwtl
dec
scas
mov
sbb
jg
inc
mov
mov
cs
orl
notb
in
fwait
lcall
add
fld
int
push
das
add
push
inc
and
aam
push
mov
pop
pop
mov
fadds
data16
or
hlt
inc
aam
jbe
mov
sbb
xchg
inc
xchg
dec
and
pop
and
mov
or
inc
xor
neg
rorb
stc
push
jl
or
fmull
xchg
notb
push
mov
call
hlt
jbe
inc
lock
pop
jg
gs
sbb
inc
lods
inc
lea
ret
xchg
arpl
sar
jmp
pop
or
insl
cmpsb
cmp
iret
mov
cmp
adc
sbb
sbb
shll
out
xchg
test
outsb
push
or
bound
nop
pop
test
cld
adc
imull
sbb
or
push
adc
stos
or
imul
push
fistpll
cmpsb
and
or
pop
pop
stc
push
out
fimull
and
inc
or
mov
sub
jnp
or
lods
bound
cmp
test
leave
rcr
add
push
aad
pop
movl
adc
push
nop
inc
add
cmp
push
inc
shr
fsts
cmp
dec
or
push
xor
cltd
data16
lock
inc
in
cmc
cmp
sbb
pop
add
inc
or
dec
mov
add
add
jne
sar
movsl
add
push
adc
or
adc
inc
mov
je
mov
dec
sub
je
jb
push
add
adc
out
xor
inc
cmp
cmpsb
xor
inc
xor
mov
in
iret
in
inc
mov
adc
ficoml
mov
sahf
lret
es
xchg
inc
outsb
cmp
pop
popf
pop
mov
sbb
lock
xor
inc
sub
sub
bound
xlat
sub
sbb
out
cmp
sbb
sub
in
or
and
jae
inc
mov
pop
xchg
jle
mov
cmp
sbb
xor
js
xor
loopne
mov
and
dec
pop
xlat
cltd
sbb
sbb
test
and
adc
inc
and
aas
pop
stos
sub
aam
sub
sahf
jae
sub
xchg
test
jle
int
icebp
sub
les
daa
mov
xor
inc
push
cs
mov
xor
cli
cmp
js
stos
subl
jmp
clc
scas
dec
fdivrs
mov
xchg
cmp
pop
sub
pop
dec
dec
mov
movsb
adc
loop
leave
cmp
push
sbb
pushl
jno
push
je
pop
sbb
xchg
sahf
xchg
sbb
mov
nop
adc
sub
xlat
pushf
enter
inc
and
lahf
pop
inc
in
and
pop
stc
flds
nop
sub
int
outsb
cld
dec
xchg
jmp
mov
loopne
mov
imul
push
call
sbb
popf
cmp
mov
call
test
pop
sub
sbb
cld
or
mov
and
or
shlb
mov
jb
enter
lock
dec
cmp
dec
and
scas
lds
mov
or
dec
cmpsl
sbb
sbb
in
xor
mov
repz
lcall
jns
leave
cmp
nop
push
and
addb
xchg
dec
out
mov
and
sbb
xchg
mov
sbb
xor
adc
adc
and
adc
in
inc
sub
adc
or
push
cld
add
and
pop
and
mov
sub
jle
or
fisubrs
loop
push
add
push
jmp
lds
aad
push
out
and
fiadds
jno
repnz
ret
adc
insl
daa
addl
and
dec
and
dec
js
jb
cmovp
pushf
pop
test
mov
jne,pt
pop
pop
ret
pop
repz
cmp
insb
enter
fsubrs
pop
pop
mov
cmp
lock
arpl
clc
mov
rcll
lock
sbb
xor
fwait
jbe
in
add
call
xchg
fwait
lods
jbe
sub
fwait
jae
ds
fsubr
pop
sbb
inc
adc
sbb
or
sub
lods
pop
and
bound
test
test
inc
leave
cmp
jne
dec
cmp
push
cmp
push
adc
sti
int
cmp
add
scas
jae
lret
adc
lret
jno
outsl
xchg
jl
adc
fwait
mov
sbb
jmp
adc
repnz
call
inc
lds
mov
lock
test
dec
cmp
dec
popa
mov
or
repz
dec
shll
pop
adc
ljmp
xor
hlt
push
icebp
call
into
cmp
adc
adc
sub
pop
mov
imul
aad
test
es
sarb
ret
cmp
cmp
sbb
mov
pop
adc
cmp
cmp
sbb
pop
add
cs
inc
xchg
inc
repnz
int3
and
fnstcw
jp
sub
jae
icebp
cld
out
cmpsl
gs
adc
cmp
imul
repnz
sbb
fidivrs
add
and
push
pop
je
and
mov
sub
push
das
dec
hlt
xor
adc
xor
bound
in
call
out
or
add
andl
mov
push
call
ds
aaa
push
pushf
sti
in
xchg
mov
cmp
ss
clc
adc
or
adc
mov
ljmp
mov
sub
movsl
pop
or
roll
push
enter
add
sbb
lahf
loope
into
mov
cmp
negb
and
vcvtps2dq
enter
sbb
icebp
and
popf
mov
and
adc
in
push
mov
jne
xor
jge
adc
mov
or
xor
push
or
mov
mov
and
xor
pop
sub
and
adc
xor
push
push
je
xchg
push
nop
call
and
push
lock
cli
cmp
xor
dec
push
jnp
out
or
les
icebp
repnz
cli
mov
in
xchg
and
sbb
sub
data16
and
pop
aam
mov
dec
mov
sbb
push
icebp
sar
xchg
or
pop
in
call
nop
pop
and
cmp
adc
loop
dec
jmp
ss
pop
and
push
loop
loopne
cmpsb
aaa
dec
or
jmp
cld
push
sarl
popa
scas
int3
popa
hlt
cs
pop
adc
pop
sub
dec
add
jbe
push
jg
loope
add
mov
inc
int3
xchg
push
jp
call
cmc
cs
pusha
push
scas
es
daa
mov
adc
maxps
adc
mov
cli
or
adc
mov
mov
xor
js
mov
adc
sub
and
lret
and
cmpsl
outsl
negl
addr16
iret
in
ret
sub
dec
jmp
adc
xchg
mov
xor
leave
cmp
les
jb
aam
and
neg
enter
adc
mov
out
fdivrl
out
inc
ret
cmp
sub
sub
inc
test
cmp
push
push
je
or
aam
fmull
js
lcall
fisubrs
popa
or
loop
test
xor
adc
aad
mov
inc
je
mov
add
or
faddl
call
ret
jae
sti
adc
loopne
popa
movsl
sub
and
cwtl
jns
push
movaps
shlb
sbb
xorl
xchg
ds
enter
add
inc
mov
add
andl
jge
xor
inc
cmp
stos
mov
pusha
push
mov
lcall
mov
inc
pop
mov
enter
push
negl
push
fcompl
dec
rorb
negl
dec
push
jmp
mov
adc
dec
movsb
adc
addr16
or
and
adc
xchg
mov
ret
adc
pop
xor
nop
and
test
inc
xlat
jg
mov
aam
movsl
aad
mov
jne
push
add
mov
loop
outsl
push
loop
jmp
jne
dec
push
dec
call
aaa
in
cmp
add
mov
mov
imul
pop
push
inc
aad
fmuls
cli
rorl
es
mov
adc
dec
cli
add
mov
dec
or
scas
mov
mov
stos
repz
call
call
sub
cmc
rol
or
and
orb
adc
jl
inc
ds
enter
push
mov
push
sub
sub
outsl
sbb
test
mov
and
xchg
xorl
xor
outsb
movsb
js
cmpsl
shll
mov
dec
pop
mov
sub
test
stc
inc
orl
jmp
out
dec
push
push
push
bound
sbb
cmp
sub
in
inc
push
icebp
les
sahf
andl
loopne
pop
xor
jmp
icebp
fs
and
or
call
mov
call
jp
mov
test
leave
adc
jno
dec
std
xchg
adc
rorl
int
inc
clc
test
insb
push
pop
mov
xor
pop
mov
mov
and
push
adc
push
push
out
hlt
inc
pop
push
jp
aaa
push
jbe
imul
call
inc
push
xor
adc
in
adc
cmp
jb
call
dec
and
mov
imull
out
or
push
pop
std
push
aaa
xor
sbb
xchg
out
push
sbb
mov
cmp
jno
adc
pop
pop
sub
mov
cltd
or
dec
and
mov
inc
sbb
dec
sbb
xchg
addr16
je
testb
jnp
and
pop
sbb
inc
sub
pop
mov
or
mov
push
mov
xchg
cmp
testb
adc
add
xchg
lahf
adc
or
or
sbb
call
loope
popa
stos
stc
repz
hlt
fsts
push
stos
add
sbb
cltd
leave
seta
and
and
shrb
push
and
mov
and
push
fisubrs
addr16
and
pop
cli
loope
xor
jg
clc
mov
dec
stos
in
loopne
idiv
stc
push
sub
mov
jno
add
push
mov
fstp
jmp
fbstp
cmp
fdivr
dec
popf
and
or
or
dec
mov
call
fdivrl
xchg
ss
and
jg
pop
push
cmp
add
xor
inc
jno
dec
fsubs
xor
jnp
inc
pop
jle
std
inc
sub
ljmp
movsb
xchg
xchg
enter
aam
xchg
out
pop
jns
inc
add
push
xorb
push
icebp
add
xchg
push
pop
sbb
and
add
and
xor
les
cmp
mov
enter
popa
ss
and
in
and
enter
mov
xchg
inc
insb
dec
push
fdivrl
ds
fsubl
or
out
aas
and
test
pop
mov
or
sbb
stc
addb
std
adc
xor
das
push
sub
jne
and
mov
and
call
sub
and
outsb
mov
flds
mov
jmp
mov
mov
jmp
shlb
push
push
push
das
sbb
push
les
xchg
sub
sahf
popf
mov
mov
mov
adc
inc
mov
shll
sahf
loopne
shlb
pop
cmp
inc
xor
movsb
adc
dec
mov
in
dec
ret
in
cs
adc
idivb
add
or
mov
pop
mov
test
adc
mov
xchg
and
mov
pop
xor
pop
push
mov
rclb
or
xor
push
adc
testl
int
jb
movsl
fstpt
ss
dec
shr
dec
hlt
and
cmc
loop
jmp
mov
cmp
aas
test
addb
cltd
or
push
enter
lock
roll
dec
or
enter
call
xor
movsb
subl
mov
add
clc
mov
aaa
and
pushf
adc
enter
and
xchg
mov
daa
ja
mov
mov
stos
mov
and
pop
popa
xor
pop
sub
xor
xor
lods
fs
mov
je
nop
test
xchg
daa
push
xor
inc
sub
and
ja
pop
mov
mov
outsb
out
mov
sti
cmp
sbb
inc
inc
lock
xchg
decl
loope
mov
sbb
faddl
add
test
sti
adc
mov
repz
sub
pop
test
imull
mov
scas
cwtl
call
mov
mov
mov
push
les
cmp
fidivs
out
push
inc
xchg
orl
jge
pop
xor
pop
push
rcll
mov
clc
out
pop
data16
stos
lods
and
mov
popa
sti
movsb
cmp
aam
sub
and
lock
bound
mov
daa
xchg
inc
mov
into
inc
push
push
mov
sub
shlb
loop
push
push
jo
cld
mov
jmp
pushf
or
ret
in
mov
adc
dec
mov
pop
or
imul
or
lods
movsb
negl
mov
test
push
sub
adc
aas
push
xor
pop
loop
jge
xchg
cmpl
pop
pop
jne
and
jb
adc
mov
mov
jmp
cld
cwtl
mov
sbb
and
dec
dec
cmp
mov
jnp
in
dec
jle
pushf
aas
jb
or
and
xlat
and
dec
add
andb
or
or
bound
jl
daa
pop
dec
cld
sub
pop
icebp
lcall
pop
jmp
mov
cmp
jne
ss
jmp
sbb
inc
loopne
or
popa
xchg
movl
in
insl
push
jle
adc
jbe
loopne
jbe
xchg
pop
mov
mov
adc
add
inc
ss
xchg
cs
xlat
clc
in
adc
mov
jo
pop
dec
dec
mov
movsl
ljmp
add
add
mov
push
push
jg
mov
jb
icebp
lods
add
shl
inc
push
jbe
lods
sbb
lahf
cltd
hlt
pop
inc
add
add
and
repnz
jg
push
inc
add
test
mov
lea
jne
add
sub
inc
in
gs
xchg
push
push
pusha
cmp
xchg
icebp
jle
inc
hlt
cld
mov
sbb
mov
test
sub
push
pop
popa
das
pop
insb
mov
rorb
pop
pop
pop
rcll
leave
sbb
xchg
test
and
aam
xlat
decb
nop
adc
jmp
xchg
mov
sub
push
imul
test
rclb
test
adc
jne
stos
idivb
and
out
jae
or
xor
sub
arpl
jne
or
repz
add
lea
inc
and
xchg
stc
or
sub
inc
sub
cld
xchg
sbb
pop
aam
inc
clc
test
cmpsb
adcb
mov
pop
or
pop
pop
sub
aad
mov
xchg
aad
inc
es
lahf
mov
add
loope
ss
sub
adc
sub
mov
pop
out
xor
adc
std
inc
or
mov
ficoml
push
bswap
mov
clc
push
fimull
jo
cmpb
rcrl
xchg
mov
push
push
and
sbb
cmp
test
xchg
pop
mov
cmp
in
pop
xchg
mov
daa
xor
inc
lock
lret
adc
inc
daa
mov
cmp
testl
pop
push
pop
lds
or
add
mov
mov
pop
push
jge
push
xor
in
mov
ret
mov
dec
and
test
mov
jne
jmp
shrb
test
scas
xchg
cwtl
sti
popf
decb
jb
dec
mov
and
xor
sub
out
aam
xor
sbbb
mov
pop
inc
cmpl
cld
insb
add
pop
add
ficoms
dec
in
sbb
or
cmp
pop
sub
inc
mov
push
xchg
popa
cmp
sub
stc
cli
arpl
sub
push
add
loop
neg
dec
sub
and
ja
dec
mov
das
clc
or
adc
xor
jae
loopne
cmp
jg
jmp
cmp
jne
pop
and
ds
push
leavew
sub
adc
aam
dec
ret
push
jo
out
jle
movsb
bound
sbb
push
add
mov
and
mov
fdivl
sbb
je
inc
jmp
dec
jecxz
insb
call
xchg
call
add
pop
sbb
fbld
and
sub
inc
ss
adc
cld
mov
push
push
pop
scas
in
imul
out
and
and
cld
inc
jmp
or
out
into
inc
in
out
and
cmp
xchg
mov
cmp
cmp
fwait
std
iret
mov
sbb
cli
xchg
mov
scas
jne
dec
fisttps
inc
cmc
pop
pop
or
leave
nop
mov
or
jl
adc
call
xor
loope
add
mov
test
cli
movsl
fildll
sarl
mov
rcrl
cli
xor
std
mov
xchg
stos
ss
inc
xor
push
inc
mov
pop
dec
xor
ljmp
push
sbb
or
fnsave
add
cmp
xor
das
sbb
push
push
sub
xorl
push
scas
mov
clc
push
adc
or
push
inc
sahf
cmp
call
stos
pop
jecxz
daa
movsl
icebp
stos
cmpl
repnz
push
call
adc
jecxz
lock
pop
dec
stos
sub
outsb
or
jge
jg
inc
les
xlat
test
pop
orl
js
and
push
and
or
dec
push
sub
adc
inc
or
push
push
add
cmp
out
test
sarl
fsts
mov
and
les
pushf
dec
clc
loop
scas
adc
and
add
enter
pushf
pop
add
inc
cmp
dec
or
and
dec
je
pop
push
dec
push
push
je
push
je
push
je
push
stos
lret
xor
negl
inc
arpl
jb
jbe
popa
pop
outsb
fs
gs
es
out
jae
cmp
int3
xchg
std
push
notl
icebp
dec
jae
daa
fnstenv
imul
push
jmp
push
sub
push
imul
sbb
mov
aaa
cmpsb
and
inc
sub
out
mov
pop
push
lods
and
dec
ljmp
jae
insb
sbb
inc
gs
insb
jne
cmp
xor
aam
movsb
mov
xchg
lods
divb
movsb
pop
jl
fsubl
push
stos
sbb
nop
push
cmp
das
ss
sbb
dec
xor
and
jle
inc
jb
add
jp
fistps
hlt
movsl
cmp
jle
test
movsl
pop
mov
imul
dec
shll
lahf
ret
shrl
xchg
aaa
and
or
lret
xor
andb
or
jne
jne
movsb
add
add
test
add
or
cs
xor
xchg
in
sahf
dec
cwtl
sbb
dec
or
mov
cmp
pop
ljmp
shlb
inc
out
insl
mov
das
pop
mov
ret
cwtl
dec
je
or
sbb
cmp
lods
jge
add
mov
pop
jmp
jne
shrb
popa
fsubr
pop
call
jns
mov
inc
dec
dec
sti
mov
sub
mov
push
add
sub
repz
xor
fsubp
sbb
mov
cmp
jecxz
in
cmp
jns
icebp
jae
sub
dec
int
push
or
pop
xchg
mov
dec
dec
sub
lds
into
push
pop
les
adc
fs
arpl
inc
push
call
dec
push
pusha
aas
inc
dec
inc
cli
cld
sub
fadds
orl
add
unpcklps
jmp
and
sbb
insb
inc
fdiv
and
xchg
fwait
cmpsl
ja
xor
popa
cmc
inc
mov
jno
scas
sbb
outsl
lods
aam
adc
jae
mov
repnz
pandn
imul
push
jle
fstps
shlb
daa
cmc
inc
cltd
lahf
pop
pop
jmp
jno
add
jmp
inc
push
lock
sub
cmpsl
dec
and
cmpsb
ljmp
add
cmp
sub
in
push
jmp
push
pop
xor
and
aad
clc
jnp
mov
mov
jmp
sbb
in
clc
add
jae
fs
ss
inc
popa
popa
call
clc
mov
dec
push
in
dec
mov
cmp
push
mov
nop
cmp
jne
jp
and
clc
jmp
inc
xor
ja
imul
adc
mov
or
call
movsb
mov
orl
cmp
or
testb
aaa
pop
or
pop
sbb
mov
jns
adc
pop
adc
ljmp
fldcw
push
mov
inc
pop
repnz
pop
mov
mov
sub
xchg
in
mov
les
test
inc
scas
sub
add
push
cli
jne
movsl
bound
push
int3
cmp
or
push
cmp
mulb
jb
pop
cs
or
mov
mov
sbb
push
inc
call
sub
cmp
lcall
or
loopne
jae
adc
mov
xlat
jnp
cmp
das
addb
movsl
adcb
pop
insb
aam
inc
mov
addl
mov
jne
lcall
mov
lahf
cmp
sub
test
jne
push
sarl
aaa
or
dec
cmp
or
jmp
clc
decb
mov
negb
mov
and
sub
xor
add
xor
jno
popa
leave
mov
adc
outsb
xchg
andl
adc
push
scas
cmpsb
xor
and
dec
or
ret
pop
jp
jl
repz
or
xor
pop
mov
int
dec
xor
fidivrl
dec
adc
mov
insb
sbb
jne
in
ret
dec
adc
faddl
jbe
fimull
sub
sbb
popa
fsts
pop
xor
jo
xor
push
cmp
jmp
call
add
fildll
or
js
and
jl
xchg
cmpsb
or
fistl
sub
ss
push
ss
test
in
scas
mov
fabs
pop
clc
adc
cli
fistpll
xchg
adc
mov
mov
cltd
push
pop
negl
push
ret
lea
lret
jne
mov
loope
cs
xor
xchg
fs
mov
sbb
and
pop
jmp
ficoms
add
and
imul
in
shlb
dec
daa
cmp
sahf
ret
mov
cmp
jnp
js
dec
xchg
pop
fiaddl
dec
into
add
testb
jo
or
popf
add
add
mov
push
ret
xchg
sbb
stc
imul
xchg
iret
or
dec
and
or
sbb
or
jbe
push
adc
dec
pop
xor
cmp
sub
push
inc
adc
adc
sub
dec
mov
mov
add
adc
mov
scas
xor
insb
das
add
xor
or
aam
mov
inc
push
cli
jmp
hlt
push
sahf
xor
pop
jne
push
pusha
adc
jo
add
inc
adc
push
xlat
sarl
jmp
lock
mov
mov
lods
popa
out
icebp
stos
daa
push
and
imul
mov
jne
push
pop
cmp
mov
adc
cmpsl
or
stos
pop
push
mov
pop
shlb
dec
mov
lods
or
inc
push
fs
sti
lret
mov
ficompl
cmp
cmp
push
hlt
xor
aam
xchg
pushl
sbb
inc
lret
xor
jo
dec
pop
popf
sarl
inc
ret
call
inc
dec
or
jno
jmp
jecxz
int
pop
sub
or
dec
pop
and
jmp
ficoms
cmp
or
or
sbb
adc
shll
icebp
jmp
xchg
xchg
jp
mov
inc
add
inc
push
mov
decb
mov
sbb
mov
idivb
mov
icebp
das
inc
or
into
add
leave
mov
adc
mov
or
xor
dec
adc
mov
xchg
mov
jmp
add
sbb
push
sbb
movlps
jno
testb
cmpl
lret
push
sub
push
fcoms
and
and
pop
ret
jo
loope
push
je
sub
jg
pop
add
nop
pop
cli
xchg
and
stos
push
add
mov
push
xchg
mov
or
jecxz
addb
jecxz
addb
adc
shl
addb
adc
mov
or
pushf
inc
cmpb
xor
dec
and
movsb
adc
arpl
xorb
mov
and
sbb
int3
and
fsubl
or
loopne
pop
lock
sbb
hlt
and
ret
and
cmp
inc
add
adc
mov
jno
or
and
adc
xor
or
inc
or
xchg
inc
mov
fdiv
push
inc
and
sbb
pop
and
les
adc
insb
and
les
sbb
subb
mov
pop
pop
cmc
add
or
adc
mov
or
sbb
adc
push
scas
arpl
rclb
cmp
mov
or
sub
pop
and
leave
xchg
add
lds
mov
dec
add
jo
lcall
andb
mov
nop
ds
and
clc
add
fs
test
cmp
adc
mov
sarl
cmc
pop
add
shll
test
sbb
fwait
not
ds
add
in
or
dec
mov
int3
mov
test
dec
xchg
mov
jns
fstl
dec
mov
add
inc
inc
mov
into
imul
lods
cmpsl
mov
sbb
add
mov
pop
stos
adc
mov
std
je
inc
popf
add
outsb
pop
xchg
ror
push
cmp
dec
scas
cld
faddl
xor
rcrb
sub
add
xor
adc
out
pop
popf
mov
mov
cwtl
ss
lock
ljmp
mov
jg
and
jbe
dec
pusha
aas
cmp
test
jb
pop
xchg
or
dec
imul
jbe
or
and
gs
dec
mov
mov
pop
cld
cmp
rol
inc
in
daa
outsl
daa
lea
adc
rorl
loop
xchg
xchg
jae
add
fdivrs
sbb
pop
imull
mov
jg
pop
sbb
mov
jmp
daa
fdivs
jmp
icebp
stc
add
dec
add
loope
mov
sahf
sub
cmp
fistps
cmpsb
push
pop
pop
insl
sub
mov
sbb
push
mov
cmp
mov
ret
stc
push
jb
ret
fadds
sbb
iret
inc
mov
mov
mov
push
leave
mov
sub
loope
cmp
xchg
shl
ja
push
adc
bound
pop
lea
ja
loopne
sbb
adc
subl
sub
call
push
adc
or
popf
jl
sbb
cmp
add
std
stc
rolb
xor
adc
incl
jge
movsl
sbb
mov
or
push
mov
movsl
ss
cmp
lcall
aas
out
std
or
push
adc
jae
jne
notb
movsb
mov
shlb
fcoms
push
aam
push
fwait
adc
shlb
cmpsb
pop
jo
jl
std
add
sbb
push
pop
pop
call
add
dec
inc
sbb
lea
jb
mov
fstl
pop
push
xor
jmp
je
push
adc
std
inc
scas
xchg
sti
or
pop
std
pusha
or
mov
jne
xor
insl
push
movsb
mov
loope
adc
jge
push
ljmp
pop
pusha
xchg
fists
mov
sbb
nop
daa
jae
ljmp
sbb
int3
rcrb
fdivs
sar
sbb
jb
and
push
jne
xor
mov
mov
nop
into
jo
dec
cmp
adc
cmp
jbe
jae
add
shrb
sub
je
mov
scas
rorb
call
push
test
push
adc
stos
jmp
outsb
and
cmpsb
mov
inc
cmp
or
lea
test
in
mov
call
or
jle
mov
inc
bound
cmp
sbb
xchg
add
ret
sub
sbb
xorb
shlb
adc
push
pop
pop
dec
movsb
sbb
insl
filds
inc
fchs
faddp
add
lock
push
dec
inc
sub
sbb
aad
ss
add
cmp
inc
out
sbb
enter
hlt
adc
ret
xchg
or
in
dec
push
fnstenv
mov
scas
push
inc
pusha
and
imul
cltd
jle
and
or
faddl
xchg
enter
loopne
adc
and
divb
jmp
mov
push
cmp
test
and
or
je
sar
rorb
fisttpll
scas
cltd
xchg
and
xor
dec
adc
fs
and
lock
mov
notl
adc
xchg
loope
sbb
push
or
or
sub
jp
int3
or
add
jo
sub
xchg
in
popa
and
push
pop
mov
loop
pop
mov
pop
mov
adc
push
adc
hlt
adc
lock
jne
std
inc
arpl
add
jbe
lea
lock
cs
loop
or
mov
arpl
push
cli
call
insb
dec
xor
lods
or
je
push
lahf
les
push
test
cli
pop
mov
enter
sub
push
jp
jb
push
jae
mov
xchg
fmuls
sbb
aad
pop
ljmp
add
dec
xor
lock
jnp
sub
inc
ljmp
sub
add
adc
pushl
push
pushf
and
push
call
bound
jge
sbb
aam
or
lcall
cmp
ret
inc
xchg
xor
cmp
hlt
jne
jns
and
jmp
and
sbb
push
push
jbe
popf
push
sub
push
xchg
and
loopne
or
or
mov
subb
adc
cmp
jg
or
or
and
inc
sbb
jl
ds
mov
add
pop
scas
test
ja
dec
mov
add
lods
test
test
dec
cmpsb
lds
mov
scas
sub
test
mov
scas
ret
out
leave
data16
insl
sbb
add
aas
test
lea
cwtl
jae
call
push
jae
or
push
or
and
dec
jmp
daa
sarl
cmpsl
pop
pop
adc
jmp
mov
jbe
adc
idivb
enter
cmp
push
movw
jmp
inc
cmp
jns
into
inc
xchg
xchg
pop
loopne
or
cmp
jne
and
adcl
aaa
mov
shr
divl
imul
push
daa
inc
xchg
adc
dec
adc
test
bound
sbb
inc
xorb
xchg
jmp
and
ljmp
inc
std
push
clc
dec
xor
or
pop
ljmp
inc
inc
push
lods
mov
dec
mov
movsb
push
nop
adc
jmp
cmp
fsubrp
mov
es
xor
push
xor
stos
insl
push
outsl
cltd
hlt
pop
xor
jnp
mov
and
push
syscall
mov
sub
push
lock
cmp
jae
add
add
jecxz
xchg
sub
jns
test
sub
inc
or
jbe
popf
inc
add
sahf
or
inc
add
js
adc
push
popf
push
mov
aaa
je
dec
pusha
mov
and
fidivrl
dec
test
jmp
push
adc
push
push
movups
packssdw
arpl
stc
push
les
into
jae
rclb
pop
decb
dec
not
and
stos
dec
xchg
pop
std
out
xchg
sbb
push
mov
ja
and
cli
loopne
push
add
pushf
push
or
movl
repz
pop
mov
xchg
es
popf
push
mov
push
sub
dec
cli
imul
push
pop
xchg
pop
and
mov
lea
cmp
xor
adc
pop
inc
pop
test
imul
stos
pop
inc
push
pop
mov
push
and
dec
imul
das
push
insb
cmp
jns
jmp
fisubl
scas
lods
pop
insl
jo
sbb
push
call
clc
add
xchg
push
sbb
jno
fsts
or
mov
jp
ljmp
out
mov
mov
mov
push
std
dec
xchg
ret
mov
test
pop
mov
jge
ljmp
clc
pop
test
cmp
and
aas
pop
add
es
and
jge
adc
stos
cmpsb
cmp
jmp
mov
add
cmp
or
push
xor
jnp
lahf
jmp
shr
test
imul
cmpsl
adc
or
shll
jb
fldenv
adc
jae
outsb
mov
outsl
xchg
icebp
jg
cmp
xor
pop
les
push
ret
sbb
adc
mov
mov
adc
push
das
out
jge
pop
aas
jae
popf
lods
test
dec
movups
push
xor
or
popf
in
imul
fsts
and
mov
sub
sub
push
pop
je
dec
insb
and
adc
jne
inc
mov
das
adc
sub
into
jecxz
js
add
aas
xchg
push
sarl
lea
sub
pushl
adc
jb
push
adc
sub
cmpl
cmp
mov
sahf
cs
out
pop
jb
ja
loope
or
pop
bound
mov
inc
das
repnz
push
daa
push
nop
push
jns
jge
pop
cmc
cmc
sub
call
jmp
and
loope
adc
frstor
xor
pusha
and
gs
imul
jns
jge
adcl
sub
dec
mov
push
pop
push
push
nop
ror
adc
les
subl
xor
loope
sub
add
sub
and
pop
and
push
je
xor
push
or
push
rsqrtps
test
shll
pop
dec
pop
rclb
insb
sbb
mov
ds
cli
jge
shrl
sti
cld
bound
int
jmp
loopne
xor
mov
mov
dec
fistps
notl
imul
sbb
inc
sbb
xor
jnp
jmp
in
lods
sti
mov
adcb
or
jne
sbb
call
push
push
push
mov
in
sbb
jns,pn
mov
sti
repz
outsb
insb
repz
push
xchg
adc
rorl
test
test
xchg
mov
iret
insl
sub
sbbb
jae
and
mov
sbb
cld
cmp
daa
je
inc
or
mov
push
mov
dec
mov
out
dec
add
cmp
inc
inc
jns
loop
pop
or
adc
clc
push
add
or
andl
lret
jge
cmp
rcr
xor
push
das
push
dec
adcl
add
add
shl
mov
sbb
call
add
loopne
sti
mov
add
adc
cs
and
mov
mov
xor
or
rcll
ds
test
stos
repnz
push
xor
es
mov
push
mov
or
cmp
cs
aad
aaa
scas
inc
imul
call
xor
out
rcll
insl
cmp
xor
jo
data16
mov
ds
scas
aaa
popf
out
adc
xchg
movsl
ljmp
push
call
call
scas
and
and
jbe
inc
addl
mov
inc
adc
mov
push
bound
shl
call
cmc
dec
push
addb
les
andl
xor
pop
movsb
mov
inc
jp
bound
mov
call
jecxz
jns
mov
mov
mov
dec
fnstsw
cwtl
ljmp
addl
bound
adc
jo
cmp
push
adc
jmp
xchg
jb
lahf
push
test
adc
je
scas
dec
sub
adc
enter
and
inc
in
cmc
mov
adc
xor
lock
xchg
pop
adc
in
ds
push
cld
outsl
popa
or
cmp
xchg
std
subl
mov
scas
mov
pop
pop
lret
dec
cmp
mov
mov
or
stc
mov
movsb
cmpb
hlt
mov
jne
sti
shlb
push
push
scas
pop
sub
popa
xor
hlt
cmp
iret
fistpl
adc
xchg
push
sbb
pop
movsl
inc
pusha
sbb
mov
xor
out
push
xor
call
inc
insl
mov
nop
adc
push
jg
jo
push
push
hlt
xchg
in
adc
jmp
loop
push
jbe
clc
je
mov
sub
sbb
adc
ds
cmp
in
pop
ljmp
daa
out
sub
fcoms
je
push
je
pop
fsubl
xor
inc
jae
inc
idivl
int3
push
jne
cvttps2pi
mov
int3
xchg
mov
cmp
aas
sbb
mov
orl
std
and
aam
xchg
popf
lea
clc
push
dec
fdivr
leave
jle
iret
xor
jo
pop
push
shll
icebp
insl
xor
sub
push
mov
mov
dec
inc
xchg
sbb
in
adc
adc
or
adc
movsb
inc
jne
adc
pop
push
push
clc
dec
mov
mov
mov
cmp
shl
nop
push
xchg
lret
mov
push
mov
mov
lcall
fiaddl
cltd
movb
or
push
dec
xor
adc
dec
orl
rcrl
xchg
daa
mov
sahf
and
incl
dec
push
call
out
push
rcll
push
or
cmc
mov
subb
sub
ret
pusha
popa
mov
pop
inc
xor
iret
inc
enter
push
push
inc
xchg
push
lea
mov
inc
es
dec
adc
mov
popf
rclb
pop
inc
daa
mov
push
in
mov
adc
xchg
xchg
call
ret
mov
std
jb
adc
out
mov
xchg
das
pop
mov
lea
pop
add
sub
mov
push
xchg
scas
xchg
push
lret
inc
push
inc
popa
push
les
call
pop
in
sub
neg
add
pop
jmp
iret
cwtl
or
jb
mov
mov
mov
je
adc
mov
daa
cld
call
in
cs
rol
dec
adc
sbb
adc
cwtl
pop
adc
sub
andb
mov
add
push
sbbl
test
jne
mov
lock
inc
xchg
push
mov
dec
pop
scas
mov
test
pop
xor
mov
cld
stos
fisubrl
das
push
pop
mov
out
and
loop
adc
mov
xchg
mov
jns
adc
xchg
sub
and
hlt
imul
out
hlt
or
xor
cmp
stos
and
pop
add
sbb
lret
push
adc
push
push
push
leave
push
loopne
js
orb
xor
pop
jg
cmp
jae
cmpb
jne
mov
or
clc
dec
add
hlt
in
sub
nop
or
pop
add
push
adc
push
movsl
cltd
arpl
arpl
mov
mov
add
jl
pcmpgtb
and
xchg
dec
lea
dec
movl
dec
mov
imul
lock
jno
test
call
pop
or
scas
inc
cmp
add
jmp
jl
inc
mov
lret
dec
pop
cmp
xchg
pop
or
cmp
push
sbb
js
cmp
jb
jmp
loop
ja
cmp
inc
daa
add
xor
adc
jne
push
inc
pop
inc
lahf
je
cmp
jno
jl
dec
jg
cmp
inc
add
push
xorb
pop
pushl
insb
pop
icebp
push
xchg
or
mov
push
orl
lods
xchg
sbb
in
rcrb
out
adc
cmp
xchg
icebp
push
cmpsb
cmp
pushf
push
pop
test
aad
or
push
ss
push
inc
cwtl
xchg
and
pop
adc
lcall
outsb
and
sub
test
clc
and
je
scas
movsb
dec
push
repz
sbb
repz
jbe
loopne
dec
pop
mov
or
jmp
adc
shl
test
push
cltd
xchg
cmc
and
mov
ja
add
push
stc
popf
pop
mov
cli
and
inc
mov
mov
jle
mov
ljmp
xorl
xchg
or
mov
lcall
adc
jne
or
mov
xchg
or
or
scas
fistpll
mov
inc
jg
push
je
mov
loopne
or
ja
sbb
jbe
mov
push
cmp
into
add
push
fcmovne
imul
outsb
clc
test
iret
sub
scas
insb
imul
mov
sub
mov
loopne
xchg
lahf
fnstenv
clc
mov
xor
push
decl
pop
hlt
sti
inc
sbb
call
rorb
pop
clc
adc
xor
xchg
inc
mov
push
mov
icebp
mov
pop
cmpsl
andl
arpl
data16
ljmp
push
mov
push
xchg
pop
xchg
jmp
ds
rolb
hlt
outsb
cwtl
inc
rorl
nop
push
jl
mov
bswap
rclb
or
add
dec
ss
push
adc
jae
jl
sub
ret
add
jmp
pop
xchg
inc
cwtl
or
pop
cmpsl
sbb
repz
push
stos
nop
mov
add
imul
cli
int
inc
loop
push
mov
das
test
xchg
sbb
adc
and
dec
mov
inc
jge
xor
cs
mov
xchg
push
and
aam
leave
jge
in
les
dec
sub
mov
mov
jl
ss
sub
dec
xchg
xchg
lods
pop
rorl
lds
icebp
cmc
cli
xchg
pop
sbbb
jns
out
mov
jo
into
hlt
stos
sub
mov
mov
imulb
out
push
ljmp
sub
jne
push
push
xchg
lock
add
jae
incb
pop
jmp
xchg
repz
push
pop
lock
push
jo
ds
nop
andb
pusha
inc
pop
or
movsb
jge
push
push
and
popa
jne
or
rol
or
lea
loop
mov
xchg
dec
xor
pop
pop
lods
clc
mov
jmp
dec
fistps
ja
xor
cli
popa
int3
test
movsl
mov
dec
addb
push
pop
dec
adc
xor
push
mov
cmp
push
mov
lea
movsb
ret
push
popf
je
dec
inc
adc
cmpsl
and
outsb
lret
test
or
lods
and
mov
cmp
mov
adc
and
xor
adc
test
cmp
inc
stos
stc
idivb
mov
push
or
xchg
and
pushf
clc
and
call
and
xchg
adc
pop
mov
imul
das
repnz
mov
xchg
add
or
pop
test
xchg
mov
pop
enter
sti
cs
cli
sub
and
mov
mov
clc
mov
adc
popf
loope
in
adc
testb
sbb
mov
cwtl
repnz
inc
xchg
mov
jmp
sbb
mov
int3
xor
xchg
pushf
popa
loop
sbbl
add
xor
cli
aas
loop
shrb
adc
sub
rclb
or
stc
cmp
sub
jmp
xor
adc
push
call
notl
jnp
or
push
push
call
loope
push
jo
fdivs
push
call
push
pop
push
mov
scas
and
adc
push
or
mov
and
es
xor
jne,pt
dec
and
in
pop
xchg
pop
fmuls
pop
mov
mov
sub
push
jmp
je
subb
sub
push
ret
repz
dec
shrl
mov
movsb
imul
sti
pusha
add
test
in
xchg
pop
fiaddl
mov
add
cmp
cmovp
adc
sahf
or
scas
adc
call
fisubs
pop
add
mov
stos
fbstp
jne
xchg
imul
in
mov
and
mov
and
cmp
test
push
imul
sti
aas
adcb
cld
mov
cmp
lods
sub
or
sub
jmp
mov
mov
and
pop
adc
out
int3
xchg
sahf
push
adc
mov
sbb
cmp
clc
dec
into
jne
mov
jle
mov
xchg
or
sti
add
xor
push
add
test
sub
push
imul
jmp
call
jo
js
pop
andl
dec
inc
subl
cmp
add
adcl
repz
hlt
and
ret
out
es
je
jg
ljmp
in
lock
and
pop
or
push
js
jmp
int3
xchg
sbb
out
xchg
in
mov
pop
aaa
mov
test
xor
inc
rclb
call
pmulhw
pusha
test
push
cltd
fildl
rorb
push
and
rorl
fldenv
mov
xlat
inc
roll
mov
sub
in
dec
aam
pop
dec
adc
sbb
push
push
sti
and
test
in
cmc
sub
and
cmp
test
lcall
dec
fdivr
mov
fcoml
sub
fcompl
or
sub
and
xor
dec
pop
and
mov
mov
jl
mull
xor
outsb
pusha
pop
ljmp
jne
adc
and
cmp
jnp
call
mov
outsl
push
or
and
cltd
cwtl
or
sbb
mov
orl
xchg
pop
fs
and
int
and
or
popl
and
mov
dec
adc
and
pop
push
and
pop
aad
pop
es
mov
sbb
pop
insb
fadds
sbb
push
and
ror
add
mov
xorl
mov
mov
sahf
call
pop
daa
xlat
inc
test
push
movsl
mov
pop
add
sbb
les
stos
mov
es
mov
mov
dec
aas
xchg
pop
adc
lea
push
fildll
jo
stc
mov
rep
mov
pop
inc
pop
sbb
sar
push
lahf
pop
in
aam
adc
push
xchg
stc
and
xchg
call
shlb
decl
scas
loopne
add
ljmp
dec
pusha
mov
xor
enter
popf
and
xchg
adc
in
in
dec
out
or
mov
jb
mov
or
dec
lock
fidivs
cmpl
icebp
call
das
pop
push
pop
ds
rcrl
fmul
xor
lock
or
pop
or
adc
js
jbe
ss
sbb
notl
cmp
bound
ret
jb
movsl
mov
je
cmp
mov
ja
mov
push
out
xlat
jbe
jnp
imul
jae
or
jmp
out
xchg
adcl
test
mov
jl
or
push
lock
xor
cmp
jae
jae
mov
mov
jb
mov
cmp
dec
or
jbe
adc
leave
cmp
rcll
jg
add
notb
lock
add
jl
cmp
gs
clc
repnz
and
mov
push
pop
imul
inc
sti
mov
cmp
shll
sbb
add
cmp
mov
out
or
lds
jae
dec
adc
mov
movsb
xor
scas
andl
fwait
push
xchg
les
or
stos
mov
rol
mov
adc
cltd
adc
leave
lds
rorl
adc
mov
inc
loopne
repnz
aad
rorl
outsb
xchg
add
jne
mov
mov
fisttpll
inc
mov
jns
pop
jp
xchg
mov
dec
movsb
or
cmp
lock
movsb
jecxz
push
add
popa
repnz
sbb
sbb
jb
daa
scas
cmp
je
loop
and
sbb
fdivrl
mov
add
clc
lea
xor
push
pop
or
pop
pop
add
mov
scas
add
daa
add
mov
dec
clc
adc
push
push
sub
jbe
out
call
out
cmpl
xchg
in
mov
jae
andb
je
jmp
or
inc
pusha
add
xor
push
push
push
rolb
dec
les
xor
in
jle
jno
rorl
or
shlb
mov
add
in
adc
sub
inc
and
lods
or
nop
ficompl
scas
cwtl
mov
mov
mov
dec
cmp
sub
mov
nop
addr16
rorb
push
mov
scas
pusha
outsl
sub
sbb
sbb
adc
cmp
dec
insl
enter
xchg
mov
aam
push
push
iret
xchg
dec
stc
sub
enter
mov
or
jle
test
push
cmp
cltd
sbb
lea
jge
xchg
hlt
and
cs
loope
jmp
dec
outsb
inc
mov
pop
push
inc
frstor
jge
xchg
inc
popa
lock
cmp
adc
je
push
dec
ret
sbb
sbb
movsb
mov
sbb
fcomps
dec
xchg
add
add
rorl
repnz
inc
nop
adc
dec
idivb
std
xchg
popf
divl
arpl
lock
or
inc
or
jmp
push
cmpsb
mov
xorb
stos
xor
inc
scas
bound
xchg
xchg
mov
mov
push
cld
fimuls
pop
pop
cmp
loop
nop
jno
mov
jo
push
lock
cmp
jp
cmc
jge
repz
clc
cmpb
fsubl
cmp
movsl
leave
xor
sbb
and
out
fildll
jae
push
adc
sub
push
enter
in
cli
and
test
test
stc
cmp
push
fdivrp
scas
subl
jp
push
stos
jmp
int3
add
dec
sbb
cmpsb
push
inc
xchg
in
mov
adc
pop
das
fisttpl
jmp
je
jae
lods
out
lods
add
xchg
push
test
add
shrl
inc
mov
xchg
mov
push
jmp
incl
ret
xchg
int3
and
rolb
fadds
cmp
js
xchg
pop
aam
inc
jbe
inc
adc
or
adc
jns
sarl
pop
cmp
dec
sbb
roll
mov
out
movsl
cmc
loopne
jae
fisubrs
roll
lea
daa
adc
js
jne
popf
ljmp
clc
dec
push
jne
into
push
adc
jg
movl
cmp
or
gs
les
idiv
rcll
sbb
dec
sbb
xchg
enter
dec
pop
mull
aam
arpl
and
lods
mov
or
push
je
xor
ret
in
aad
jmp
lods
jne
add
mov
dec
xchg
push
addb
dec
in
sbb
shll
cmp
xchg
aad
mov
in
test
testb
das
hlt
xchg
xor
add
xchg
jne
out
mov
call
divl
sub
push
mov
cmp
cwtl
xor
adc
cld
mov
mov
testb
mov
dec
adc
fistps
mov
movsl
fidivrs
add
mov
fsubl
inc
std
loop
call
or
add
mov
jb
push
adc
imul
pop
mov
adc
xchg
rorb
mov
xor
mov
or
jb
push
push
call
pushf
push
das
xchg
and
test
adc
stos
aam
mov
push
jl
int3
pop
jbe
in
push
enter
out
dec
xchg
or
popf
ja
cmp
rcrb
adc
and
mov
push
push
lea
mov
cli
stc
jnp
sbb
loop
enter
cs
in
and
inc
std
mov
lcall
es
push
out
dec
jecxz
jnp
sub
xchg
or
pop
mov
or
adc
lock
insb
sub
mov
out
sbb
inc
ficoml
xchg
pop
loop
mov
dec
dec
sbb
adc
iret
xchg
and
or
je
aaa
lock
cmp
icebp
jbe
cmpw
adc
mov
cmp
es
mov
add
sarl
bnd
cmp
out
add
jl
jnp
loop
add
pop
xor
ja
in
sub
pop
mov
jecxz
push
xchg
adc
hlt
insl
xchg
lods
dec
or
xor
in
in
adc
call
sbb
add
xlat
shrd
mov
addl
lock
dec
jmp
adc
inc
add
inc
mov
inc
dec
or
or
or
rorl
decl
xchg
nop
shufps
jne
sbb
mov
and
out
mov
outsb
xchg
mov
xor
aas
and
lock
lahf
inc
inc
fcmovnbe
int
push
lea
jns
mov
sbb
out
stc
pop
xor
das
mov
dec
jns
in
jmp
shlb
in
outsb
mov
cmp
imul
jns
je
mov
mov
and
das
mov
je
popf
dec
test
jo
pop
jne
std
inc
mov
sti
xor
dec
mov
adc
mov
adc
in
shlb
jno
inc
insb
push
or
popa
inc
or
repnz
loopne
aas
fists
jecxz
ret
jmp
sub
push
push
xlat
cld
out
cmp
add
mov
pop
es
cmpsb
xchg
adc
mov
inc
jmp
in
add
pop
dec
in
add
dec
loopne
leave
jbe
nop
inc
dec
js
xor
xchg
filds
mov
test
fadds
daa
rcl
jne
mov
add
mov
inc
push
out
fadds
adc
lock
sbb
sub
pop
push
test
ss
rcl
imul
or
movsb
lods
adc
in
sbb
jmp
pop
xor
and
sbb
and
adc
inc
aam
push
and
iret
je
test
shlb
mov
call
mov
rolb
test
jne
inc
in
rol
jle
aad
in
inc
roll
pop
push
aam
cmp
loopne
ret
cmp
mov
pop
push
jns
xor
das
ja
test
aad
loope
jno
aaa
repnz
mov
adc
xchg
mov
int3
add
adc
movb
fcoml
aam
mov
cmp
mov
and
mov
jle
loopne
leave
imul
add
mov
test
stos
leave
mov
xor
mov
lret
mov
jne
inc
xor
dec
pop
mov
pop
jo
fs
loopne
xchg
pop
mov
cmpl
jnp
pusha
add
sbb
push
xchg
test
jg
andl
in
mov
cmpsl
and
enter
jl
sbb
pop
stc
or
mov
mov
mov
jg
jmp
pop
testb
ljmp
push
add
inc
jp
mov
bound
jl
push
popa
inc
xorl
inc
js
adc
add
dec
cmpl
or
jl
pop
push
stos
sbb
cmp
xchg
nop
inc
sbb
add
inc
adc
fs
mov
xchg
jne
in
rcrl
sbb
lret
push
gs
cld
push
xor
add
ljmp
push
pop
xlat
lds
adc
cmp
sahf
enter
int3
js
mov
nop
cltd
inc
xor
enter
ds
int
rorl
jecxz
jl
cwtl
lcall
lods
mov
pusha
mov
sub
mov
or
or
movsb
insb
cwtl
jo
or
xchg
cmpb
ljmp
imul
dec
aas
dec
and
cmp
jae
adcb
xlat
int
cmpsb
ss
jl
lods
sbb
adc
jne
sar
out
adc
fildl
and
call
scas
push
rcr
cs
xchg
sbb
je
sbbb
data16
sbb
imul
push
pusha
out
jne
repz
stc
loopne
cmc
jp
imul
pop
addb
shll
mov
inc
clc
imul
add
leave
lret
push
jle
leave
pop
push
push
or
add
jo
jb
rorb
adc
daa
mov
mov
inc
insb
in
xchg
mov
pop
xor
add
stos
xchg
xorb
shl
fmuls
push
jb
test
jmp
enter
xchg
js
sub
mov
je
mov
cmp
cwtl
mov
shr
mov
sub
jle
cmpsb
push
data16
icebp
hlt
jmp
mov
movsl
jnp
sbb
lahf
and
mov
leave
inc
cwtl
nop
dec
mov
add
sbb
push
out
sbb
bound
jno
mov
jbe
dec
stos
aad
pop
les
adc
orb
enter
mov
or
enter
lahf
popa
popf
leave
ss
clc
aam
pushf
nop
pop
xchg
sbb
hlt
mov
mov
enter
or
cmpsl
dec
mov
jbe
sub
fisttpl
mov
pop
xor
insl
ljmp
or
shlb
inc
cmc
inc
adc
js
mov
lods
daa
daa
shrb
inc
xchg
mov
dec
pop
jge
daa
add
xor
cmp
gs
mov
imul
push
orl
inc
xchg
xor
and
push
nop
outsb
mov
or
inc
mov
xchg
adc
cmc
mov
notl
add
inc
inc
and
je
testl
loopne
imul
or
or
lea
dec
push
test
mov
cld
xor
push
adc
inc
cwtl
adc
cmp
dec
bound
jmp
test
sub
push
int
cmp
jb
inc
inc
add
xchg
or
and
mov
int3
or
cwtl
add
mov
shl
test
sub
or
ja
xchg
or
mov
inc
sbb
jle
pop
lret
xchg
test
clc
jnp
jl
xchg
fsubs
pop
stc
enter
mov
int3
and
add
pushf
adc
js
and
mov
sub
fdivs
es
mov
aam
int3
mov
adc
lods
pop
sub
add
mov
mov
push
sbb
lahf
lods
jg
xlat
cmp
jbe
mov
lret
lret
xor
adc
stos
add
movsb
test
je
out
mov
int3
push
inc
adc
cmp
fistpl
dec
xchg
xor
mov
aas
xchg
push
adc
mov
jne
sub
sub
sbb
sub
jl
dec
stos
aad
add
adc
mov
adc
inc
in
mov
scas
mov
adc
repnz
jno
add
sub
into
les
push
push
jo
aas
rclb
ror
pop
push
and
sub
lods
sub
pop
movsb
je
daa
jmp
dec
xorb
lods
sub
sbb
and
pop
jge
imul
mov
insl
shlb
cmp
dec
insb
and
lods
and
add
lods
and
andb
mov
arpl
jnp
das
lcall
pop
sbb
fmul
jbe
adc
mov
test
mov
pushf
add
sub
push
shr
movsl
mov
dec
mov
insb
push
cmc
inc
iret
jl
fs
in
or
xor
out
sarb
out
das
jo
shrb
push
bound
and
cmp
xor
orl
rorl
sahf
adc
sub
xor
cmp
sbb
jmp
inc
ja
mov
xor
adc
mov
test
lahf
jg
xlat
inc
shr
lret
push
mov
insb
pop
jbe
test
cmp
inc
mov
stc
out
jns
push
mov
mov
cmp
fsubrl
pop
mov
out
xlat
cmp
jmp
jg
inc
aas
pop
mov
cmp
sub
push
ljmp
or
lea
cmp
jae
and
les
dec
js
push
in
sti
subb
sub
and
push
rcll
push
or
add
cli
aaa
movsb
xchg
enter
mov
cmpsl
mov
mov
pushf
push
lcall
pop
sub
repnz
push
inc
jle
mov
push
lods
mov
ss
sbb
aas
or
jmp
stos
and
shl
jge
movsb
mov
push
and
jb
loopne
movq
loopne
add
lret
or
inc
rcll
mov
xor
mov
cli
xlat
lds
bswap
mov
nop
int3
xchg
adc
push
push
movb
and
mov
movsb
lret
cld
out
dec
sub
xchg
add
push
gs
xchg
xor
dec
movsl
movsb
aam
ret
mov
jge
pop
cld
pop
pushf
mov
fidivrs
dec
jns
mov
add
adc
sub
or
jnp
rcll
mov
mov
gs
cmpb
mov
test
sbbb
push
mov
data16
enter
push
sbb
arpl
daa
test
mov
mov
jle
bound
out
imul
xor
dec
cmp
cli
and
inc
sbb
lea
mov
cli
dec
sub
addb
and
dec
lds
popf
push
cwtl
lea
xchg
clc
cld
das
inc
dec
fsubrp
xchg
add
and
stos
sub
lret
dec
xchg
lock
jmp
push
adc
int
imul
pop
mov
gs
or
lret
inc
fisubl
call
xor
mov
sbb
dec
sub
or
jge
jp
jg
out
pop
test
movsb
add
inc
ds
hlt
int3
push
lcall
jnp
push
adc
and
pop
cs
loope
lods
sub
push
mov
jne
mov
pusha
jne
fwait
rcrb
adc
aam
jp
xchg
or
mov
xchg
pop
inc
xor
push
adc
je
test
jo
call
xchg
cmp
scas
lea
sti
push
sti
dec
pop
push
or
xor
jp
daa
adc
je
fnstsw
inc
push
pop
xlat
xchg
and
mov
loope
sub
jbe
cli
sub
fsubrl
or
inc
jmp
pop
test
ds
sti
adc
xchg
mov
add
sbb
hlt
mov
adc
jmp
lret
stos
mov
add
shl
cs
push
adc
sbb
sbb
enter
dec
mov
dec
mov
mov
pop
sub
jmp
sahf
xor
or
add
test
mov
inc
loopne
lods
adc
or
ret
inc
fcoms
dec
lods
shl
cmpsl
and
stc
scas
cld
popf
push
adc
push
shrb
jle
loopne
addr16
lcall
pop
add
or
add
pop
stc
cmp
mov
jle
inc
je
cltd
clc
push
or
mov
ljmp
mov
in
out
pop
imul
and
inc
mov
push
sbb
dec
repnz
sub
inc
mov
dec
and
gs
xor
xor
cmp
or
idiv
ja
sub
jle
repz
outsb
and
je
iret
andb
inc
faddl
sub
and
jge
dec
out
les
rcll
out
and
adc
lods
add
stc
sbb
bound
and
daa
mov
mov
call
mov
in
fldenv
outsb
cmp
push
xchg
jne
dec
popf
insb
add
cli
dec
mov
mov
mov
addr16
mov
aad
jmp
inc
xchg
ret
rolb
mov
nop
mov
das
out
mov
jb
pop
mov
inc
js
call
sbb
or
push
ret
jo
or
cld
rcll
add
cmp
mov
push
mov
xchg
lea
sbb
ja
in
rol
mov
jg
cmpl
inc
inc
decb
jmp
pop
push
jp
pop
roll
xrelease
inc
shl
push
divb
dec
inc
lcall
adc
fwait
sub
or
push
leave
lods
sub
xor
jb
sbb
jns
adc
ffree
push
add
dec
jbe
sub
movsl
divl
into
add
sar
dec
push
das
xorb
pop
cmp
rclb
sarb
out
push
lods
sti
std
rclb
sub
xchg
jbe
jo
xchg
fisttpll
sub
jno
ret
imul
inc
dec
loop
in
cmc
loopne
testl
lock
or
cmp
cmp
jo
fisubrl
inc
mov
test
outsl
push
mov
mov
mov
xchg
pusha
and
and
push
test
mov
test
cmp
inc
pop
adc
iret
inc
or
lret
stc
jb
lods
push
je
in
lods
fbld
arpl
pop
jo
das
cs
lock
inc
push
push
rorl
and
and
push
sbb
and
dec
push
xchg
add
inc
roll
jne
mov
stos
nop
dec
je
mov
loopne
mov
mov
scas
movsl
sbb
inc
push
jae
push
ljmp
pop
dec
mov
mov
mov
add
inc
jb
iret
or
push
mov
leave
stos
shr
push
es
mov
mov
mov
mov
imul
and
pushf
or
or
or
jne
dec
pop
push
test
mov
scas
mov
xchg
xor
push
inc
dec
inc
adc
lods
adc
dec
push
aam
outsl
cld
lret
popf
in
bound
jo
sub
es
cmp
mov
push
inc
shrb
sub
aad
lock
es
repz
lcall
loope
lods
add
movsb
jne
loopne
scas
test
fdivrl
or
movsl
jnp
pop
js
push
adc
xor
adc
aas
push
lahf
xor
push
adc
stos
adc
add
adc
lods
mov
call
and
sub
jmp
in
int3
sahf
adc
dec
push
jge
add
dec
add
cmp
and
das
jb
mov
pop
arpl
cmp
repz
movsl
sahf
inc
fldenv
and
rcrb
fsubr
xchg
mov
dec
mov
test
mov
pushl
shlb
pop
lret
jp
xor
aad
cmp
mov
scas
add
mov
cmovbe
or
in
aad
in
sub
popa
xor
fcoms
out
mov
inc
add
and
lods
inc
push
add
and
jb
and
dec
inc
jge
dec
push
pusha
mov
push
xor
in
dec
int3
push
mov
nop
enter
lods
mov
add
jb
fildll
mov
adc
add
fcomps
pop
sbb
xchg
mov
or
cmp
and
orl
pushf
leave
test
cmp
dec
jle
leave
xchg
xchg
xor
mov
sbb
punpckhdq
cmp
jmp
push
jbe
stc
int3
aas
icebp
bound
nop
ret
movl
xchg
imul
mov
jae
enter
test
je
stos
mov
push
int
sbb
mov
and
cmp
xor
sub
mov
jo
jne
pop
and
je
mov
xchg
repnz
inc
sbb
push
cli
movsl
popa
movsb
add
dec
rcrb
mov
rcrl
adc
lods
outsb
shrl
rolb
ficompl
push
mov
shlb
es
pop
fidivl
adc
test
and
jmp
inc
sbb
outsb
call
das
cltd
sub
jb
sahf
insl
xchg
imul
js
movsl
add
mov
lods
movsl
cwtl
pusha
insl
iret
adc
mov
dec
mov
mov
dec
in
mov
and
push
clc
call
test
mov
les
sbb
jmp
inc
repnz
cmpsl
test
lds
sbb
dec
pop
xchg
and
std
push
test
nop
loope
and
dec
sub
das
nop
pop
fcoms
jmp
xchg
into
fcoml
push
xor
test
call
xchg
jns
push
pop
ret
sub
cld
cmp
mov
scas
movsb
mov
inc
mov
js
push
cmp
push
fists
idivl
sbb
add
adc
mov
pop
pushl
sub
mov
push
call
add
xchg
dec
mov
sahf
push
push
sbb
dec
adc
call
mov
push
lahf
pop
scas
dec
adc
stos
mov
mov
sub
mov
mov
pushf
rcl
ret
or
mov
repz
sbb
sbbl
or
nop
push
push
cmpsl
test
cwtl
fiaddl
push
out
push
ds
or
hlt
sbb
adc
push
inc
into
or
sbb
add
scas
mov
mov
inc
jmp
out
fs
mov
cli
shl
push
dec
pop
push
inc
or
call
push
push
and
sbb
push
pusha
cmp
wrmsr
test
aaa
and
mov
xor
lods
dec
cmp
jecxz
fcmovnu
adc
mov
inc
push
ljmp
cs
xor
xchg
push
push
mov
and
lcall
ss
aas
jmp
adc
in
sbb
and
adc
xor
mov
ljmp
and
pop
rclb
scas
xchg
popf
or
jo
shl
push
ss
dec
dec
and
cmp
jge
and
pop
or
dec
xchg
add
or
add
loopne
jb
adc
lods
lods
scas
daa
pop
jl
add
das
cltd
jns
sub
adc
or
pcmpgtw
stos
push
aaa
pop
in
mov
inc
jg
xchg
lret
or
lcall
int3
notl
sarb
push
std
mov
daa
add
cmp
loope
ret
mov
adc
or
cmp
sbb
testb
add
xor
sbb
push
dec
xor
adc
mov
testb
fwait
dec
sub
enter
das
jle
dec
sbb
imul
jmp
dec
add
pusha
push
cmp
jb
pop
mov
jg
push
and
dec
push
push
das
push
dec
stos
mov
dec
push
das
jno
adc
sub
in
dec
cltd
ja
fcomps
adc
mov
loopne
pop
mov
imul
fisubl
push
mov
and
inc
jno
cmpb
xchg
loopne
pop
fdivs
xchg
fnstcw
xor
dec
cwtl
sub
xchg
dec
out
out
dec
sub
adc
std
xor
lds
lret
mov
adc
push
push
mov
pop
or
test
aad
loopne
nop
cmp
jae
mov
add
mov
jg
xor
lret
std
mov
or
inc
test
mov
sub
mov
pushl
js
data16
sub
or
push
inc
xchg
jmp
mov
xchg
ret
pop
cmp
sbb
lds
xchg
cwtl
mov
jnp
sarb
push
or
lds
mov
stos
popa
test
inc
xor
inc
arpl
enter
and
pop
mov
pop
inc
pushf
lods
adc
pop
cmp
mov
mov
popf
andl
mov
outsb
adc
repnz
in
movsb
movsb
test
loop
and
add
push
push
jl
fs
lret
or
cmp
out
dec
int3
pop
push
popf
pushf
pusha
mov
jbe
lret
loop
sub
decb
jmp
dec
out
jbe
mov
jmp
data16
pop
add
jp
insl
imul
in
cmp
add
cmp
jbe
sbb
sbb
je
xchg
fs
es
cmc
lock
cltd
loop
aad
aad
out
jbe
add
xlat
insl
aad
mov
mov
daa
bound
cltd
mov
lret
cmp
or
lods
dec
jb
mov
push
jno
sahf
cmp
jo
cmp
mov
push
dec
gs
pushf
std
and
sub
push
icebp
cmp
cmp
arpl
cs
mov
xor
dec
cmp
jne
dec
icebp
dec
movsb
pushf
jbe
jnp
mov
sbb
push
xchg
jmp
in
push
add
jge
dec
cld
lock
pop
gs
inc
loopne
mov
pop
fdivs
cmpl
adc
xchg
nop
nop
sahf
and
ljmp
inc
xor
jnp,pt
sbb
or
jmp
aam
mov
in
in
push
inc
and
inc
and
and
les
daa
mov
or
inc
sbb
add
cld
outsl
mov
xor
movsb
cwtl
mov
jmp
xor
inc
test
insb
jge
loope
xchg
add
or
and
test
jmp
sub
loopne
jg
sahf
outsl
leave
sbb
loopne
cmp
add
sahf
jecxz
inc
sarl
lea
aaa
rcrb
mov
mov
sbb
add
xchg
ret
and
out
dec
jae
mov
scas
push
pop
bound
pop
push
ret
mov
inc
mov
jmp
mov
pop
lret
or
sbb
dec
pop
lret
es
inc
jo
adc
sbb
add
sti
cltd
xor
sbb
lea
rorb
sbb
cld
push
jns
push
push
mov
pop
aam
cmp
or
or
cmp
jae
dec
dec
cmp
dec
inc
cmp
inc
cmp
mov
adc
test
dec
xor
mov
xchg
or
and
ljmp
fcomps
sbb
data16
add
xor
jb
nop
ret
sti
nop
sub
pop
pop
jge
shll
insl
pop
outsl
mov
cmp
mov
sbb
cmp
loopne
xor
inc
dec
test
xor
dec
push
ljmp
outsb
or
roll
lock
inc
fucom
mov
mov
mov
mov
fstps
xlat
test
mov
adc
mov
lcall
gs
cmpsl
jecxz
leave
adc
pop
jg
push
push
mov
push
imul
inc
and
jmp
pop
mov
pop
add
lods
cmp
or
inc
pop
push
cli
xor
push
push
push
push
and
and
cmp
lcall
repz
imul
imul
inc
add
inc
cmp
jne
popf
pop
cmp
lods
inc
pop
sbb
rcrl
mov
rclb
cmp
es
pop
cld
xor
push
dec
cmpsb
push
dec
sub
adc
jmp
jmp
test
cmp
cmp
push
movb
cmpsb
adc
mov
sarb
xor
push
inc
push
mov
push
or
pop
bound
pusha
fnstsw
and
mov
js
loope
ret
add
movsb
stos
lret
rclb
lds
xchg
movsl
lcall
xchg
push
mov
aas
cmp
lds
movsb
out
mov
xor
push
mov
mov
faddl
ja
outsb
lods
xor
xor
pusha
and
mov
std
mov
pop
mov
in
loopne
or
scas
jb
add
pop
mov
mov
sub
pop
sbb
push
outsl
cwtl
cmp
xor
or
clc
popf
xlat
mov
xchg
daa
enter
dec
loop
fidivl
xchg
in
test
add
mov
je
ljmp
icebp
fsubrl
aas
sub
dec
mov
add
and
pop
movsb
fsub
movsl
jne
mov
faddp
je
mov
sbb
pop
dec
or
mov
or
jns
xchg
cld
push
shrl
daa
add
cmpsb
ficoml
scas
shll
clc
incb
push
mov
mov
adc
sub
daa
jb
inc
dec
add
dec
roll
in
mov
jb
mov
icebp
mov
mov
push
inc
cmp
movb
sub
jo
stc
enter
xchg
clc
imul
adc
adc
mov
test
adc
xchg
scas
aaa
and
adc
and
std
mov
sub
loop
xor
push
mov
push
xlat
icebp
sbb
adc
push
sbb
fcompl
pop
rolb
sbbb
pop
jge
sti
mov
or
jb
or
mov
and
and
movsl
out
push
cmp
shll
fimuls
cmp
or
inc
jl
pop
adc
fwait
movsl
test
mov
int3
pop
sub
mov
dec
pop
call
lahf
nop
cmp
pop
fisttpl
loope
outsb
or
repz
dec
jl
mov
dec
push
push
fs
lods
mov
mov
test
call
rclb
sub
call
cmpsl
jnp
push
xchg
xor
cld
pop
pop
mov
lret
pop
test
mov
or
mov
sub
pop
je
adc
or
incl
mov
or
out
mull
in
mov
push
fs
dec
scas
fiadds
push
and
fistps
addr16
adc
xchg
xchg
jo
mov
dec
pop
inc
push
push
dec
outsl
dec
add
jb
push
shlb
cld
aam
jne
add
cmp
lods
jae
pop
fisttpll
lret
push
xchg
icebp
jne
insl
cmc
pop
mov
outsb
test
sti
sub
and
imull
rcl
lahf
adc
adcb
push
pop
mov
addl
lea
int
adc
jecxz
bound
sub
call
mov
add
jo
je
add
push
jne,pt
pop
bound
or
cltd
and
popa
sbb
and
fadds
xchg
mov
pushf
sub
lods
jae
cmp
stos
int3
xchg
inc
aaa
enter
fdivs
cmpsb
sbb
mov
insl
jp
leave
pop
adc
sub
daa
loopne
subl
push
mov
push
jae
push
js
outsl
shrb
into
cmp
lret
inc
xor
icebp
pop
call
cmp
call
daa
or
mov
cmp
add
shrb
push
insl
push
daa
ret
xor
int
popa
popf
sub
mov
aam
ljmp
push
out
mov
adc
inc
add
shl
mov
inc
pop
sbb
call
push
das
lret
pop
sbb
xchg
pop
dec
out
ds
add
andl
mov
push
mov
test
mov
imul
or
fiadds
lret
jge
sub
inc
or
mov
orb
jne
dec
add
fs
sub
sub
sbb
xchg
adc
ljmp
rorb
nop
cmp
jb
adc
das
cli
inc
test
mov
push
mov
mov
adc
mov
call
iret
cmp
call
jbe
xor
loope
sub
shrl
mov
into
mov
sbb
dec
xor
inc
adc
inc
cli
jg
add
xchg
adc
mov
push
gs
cs
mov
or
pop
ret
out
adc
into
adc
pop
dec
jge
push
jo
add
push
pop
inc
lds
xchg
pop
movsl
mov
cmpsb
push
cmc
mov
add
push
pop
and
pop
call
leave
lds
add
movsl
clc
xorb
push
push
fldl
or
or
loopne
in
aas
ret
mov
jns
sbb
pop
lcall
xchg
repnz
les
inc
insb
lcall
lds
pushf
mov
xchg
push
dec
push
lods
push
lcall
sbb
pop
inc
push
in
xor
inc
mov
test
sbb
xchg
sbb
or
dec
pop
popa
insb
jge
push
dec
int
test
jl
ss
lahf
sbb
out
inc
cmpsl
int3
sti
dec
flds
xor
cmc
fstpt
xlat
inc
mov
dec
mov
insb
add
push
jmp
aam
cmp
shlb
jmp
rcr
jnp
mov
stos
in
pop
hlt
cltd
xchg
rolb
les
push
sarb
push
std
into
or
ljmp
or
repnz
inc
or
sbb
adc
inc
mov
lcall
pop
add
jmp
mov
jge
cmp
push
push
bound
clc
xchg
pop
pusha
mov
stos
sub
push
inc
push
fbstp
push
shrl
xchg
dec
jmp
push
inc
mov
inc
fs
xchg
xor
popf
rcrl
and
dec
jne
lret
in
jp
sahf
cltd
les
sub
mov
scas
cli
cld
out
push
mul
and
mov
and
scas
xor
pop
jmp
dec
lods
adc
mov
and
add
dec
not
fisubs
aad
and
int3
xchg
mov
adc
or
pushf
or
push
dec
mov
arpl
sub
sbb
shlb
jmp
mov
jecxz
rclb
sub
push
mov
xchg
lods
xor
jae
popf
test
dec
jge
mov
incl
jae
mov
jp
shll
sar
dec
clc
scas
lea
cs
xor
ljmp
adc
xchg
push
add
jne
rdtsc
scas
adc
out
dec
adc
push
jge
shl
add
loope
push
mov
add
aam
test
mov
cmp
sub
xlat
xchg
les
fmull
push
aad
mov
add
sub
add
pop
jns
add
icebp
je
pop
sbb
and
add
jmp
mov
repnz
nop
sub
mov
xor
movb
fistpl
push
push
mov
pop
sbb
in
mov
scas
push
sub
cmp
js
or
ret
and
inc
jmp
stos
push
sbb
pushl
sbb
sub
dec
jne
outsb
dec
mov
xor
into
add
sbb
inc
push
pop
adcl
repz
or
cmp
adc
pusha
inc
inc
into
add
sbb
inc
pusha
push
push
and
fs
pop
insb
std
inc
push
sub
push
push
stos
lea
xor
push
lahf
pusha
movsl
adcl
leave
stos
jl
add
ficomps
testb
loope
push
lea
dec
shr
add
and
lret
lret
xor
jbe
fs
clc
movsb
push
testb
inc
fadd
je
cmp
sub
or
das
push
add
mov
push
mov
or
add
sbb
sbb
dec
jns
jmp
jbe
dec
push
sbb
adc
inc
and
fisttpll
sti
push
push
and
mov
cli
hlt
lret
lods
mov
mov
cmpsl
xchg
pop
add
inc
sbb
jp
cmp
mov
in
push
push
push
xor
or
dec
stos
cmpsl
jmp
cmpsb
negb
sti
add
es
mov
xor
inc
hlt
sub
lock
movb
cmc
fdivrs
mov
sub
hlt
add
jg
dec
pop
mov
xchg
dec
push
aad
es
clc
outsl
adc
or
push
mov
sbb
adc
add
sbb
xor
mov
jo
xor
test
daa
xchg
push
js
fsts
add
lea
jbe
push
jp
popf
rorl
loop
add
nop
inc
cmp
jb
out
mov
movsl
cli
ss
cld
pop
jb
in
or
push
inc
movsl
xchg
push
aam
jp
lods
les
xchg
mov
dec
mov
mov
jno
or
xor
je
cmc
shl
jbe
and
ret
pop
add
lcall
inc
inc
cld
fisubl
sbb
dec
pop
or
cwtl
pop
xchg
adc
ds
push
mov
or
call
and
mov
dec
push
mov
xchg
imul
mov
and
mov
das
jge
xchg
pop
push
add
cmp
cmp
sub
push
sub
and
int
je
pop
fbld
outsb
sub
je
add
scas
cli
cmpsb
sahf
and
popf
rcrl
lods
jne
sahf
jl
jp
push
clc
neg
sbb
ret
add
xchg
not
inc
jp
mov
inc
or
mov
shll
jne
jg
xchg
inc
mov
push
sub
push
mov
lds
sbb
bound
sbb
data16
pop
cld
sarb
roll
in
inc
test
mov
xchg
pop
fmull
push
mov
mov
mov
test
sub
push
mov
adc
push
sahf
jb
push
nop
add
and
shlb
movsl
push
in
inc
pop
mov
inc
fistps
dec
xchg
pop
jl
pushf
or
cmp
xor
push
jno
pop
sbb
jo
xchg
add
int3
andb
inc
les
push
orl
xchg
mov
fs
jbe
mov
movsl
mov
push
mov
out
arpl
cmp
inc
outsb
enter
frstor
mov
add
xchg
sub
pop
insl
leave
push
xchg
jo
movb
mov
and
ret
or
mov
inc
stos
lods
cmpsb
push
sbb
in
adc
or
adc
add
scas
and
ficoml
mov
push
fs
xchg
adc
aaa
movsb
mov
xor
sub
mov
jge
push
sbb
shlb
pop
mov
jl
lods
repnz
push
sub
lock
mov
fiaddl
jne
cwtl
sti
jle,pn
out
clc
enter
out
mov
sub
push
jns
cmp
adcl
jne
mov
or
xor
clc
or
add
inc
or
jbe
and
mov
cmp
push
gs
notl
add
add
aam
mov
jg
xchg
cs
mov
inc
add
mov
fs
adc
je
ret
pusha
xor
out
loopne
xchg
jno
sub
xchg
stos
sub
mov
aad
jge
pop
or
xor
push
movsb
shlb
pusha
fnsave
push
fistpl
imul
jmp
iret
leave
push
or
or
inc
data16
leave
bound
cmp
cs
inc
push
inc
mov
mov
inc
sub
sbbb
xchg
inc
fs
jg
ds
imul
mov
xchg
into
lea
lret
icebp
inc
aam
ret
pop
dec
rcll
push
call
cld
gs
lea
push
cmp
xchg
jno
mov
outsb
mov
jg
outsb
mov
sahf
sub
fildll
cs
inc
push
lea
adc
inc
sti
cmp
mov
mov
xor
add
cmp
dec
std
inc
rclb
mov
dec
or
inc
sti
xlat
adc
adc
cmp
inc
or
push
and
pop
pop
push
cltd
pop
xchg
les
and
pop
idivb
xchg
inc
movsb
imull
dec
dec
std
icebp
push
add
and
sub
push
ljmp
loopne
jae
or
mov
push
mov
or
xor
xchg
loope
push
jl
xchg
sub
rclb
pop
sbb
push
jne
xor
xchg
jmp
dec
jg
stc
mov
or
fbld
and
fs
mov
push
test
hlt
fsubr
popf
push
adc
iret
pop
and
addb
jbe
jp
mov
outsb
sub
push
add
push
push
adc
push
insb
call
mov
sub
mov
sub
lock
push
fmull
aas
inc
call
xchg
and
and
push
and
pop
cli
gs
or
aaa
push
jmp
idivb
push
test
loopne
cmp
dec
mov
dec
mov
das
cmpsl
adc
push
aad
xlat
mov
icebp
xchg
cmpsl
jne
in
inc
mov
out
les
cmp
popa
lea
int
adc
loop
scas
iret
stos
lods
cmpsb
sahf
push
call
aad
jle
and
jl
ss
mov
popf
rcr
jmp
jb
fdivs
lret
jecxz
inc
mov
inc
stos
std
sbb
jge
bts
andl
test
xor
xor
adc
shlb
sub
cmpl
rorb
sub
dec
pop
loop
dec
push
sbb
pop
int3
dec
inc
in
cmp
sbb
fs
xchg
aad
jecxz
push
sbb
mov
test
cmp
cltd
pop
inc
jmp
lahf
add
mov
sub
pop
movl
hlt
test
cmp
fnstcw
test
mov
sub
cmc
sub
sbb
loopne
sub
and
dec
lods
jp
jne
les
cwtl
adc
push
xchg
mov
mov
and
lahf
add
jmp
mov
call
rolb
inc
push
inc
jg
inc
or
dec
inc
xchg
inc
or
sub
icebp
push
adc
ficoml
fs
mov
xchg
mov
ss
rclb
test
mov
pop
imul
or
add
inc
jnp
mov
lcall
xchg
sub
nop
mov
mov
cwtl
adc
stos
sub
sub
push
sub
enter
stc
push
aaa
dec
xor
add
push
jnp
shlb
ret
mov
sbb
leave
mov
hlt
cltd
inc
or
nop
mov
lea
dec
inc
cmc
xchg
jns
jne
std
in
cmp
or
mov
sbb
mov
dec
push
sub
aaa
dec
pop
andb
fcomi
leave
adc
cwtl
in
or
arpl
addr16
orl
cltd
push
fisttpl
dec
jb
xchg
les
scas
enter
jo
xor
and
jnp
daa
and
mov
sbb
jb
aad
outsb
mov
insb
push
or
fwait
xor
stos
xchg
mov
sar
jl
or
ret
movsb
insl
mov
aam
or
sub
int
jne
xor
add
adc
inc
push
xor
adc
outsl
lret
pop
lock
or
inc
jmp
push
xchg
mov
or
movsl
sahf
jnp
imul
xor
cld
scas
mov
cli
mov
add
daa
cmpl
fisubrs
add
adc
add
push
and
daa
fcoml
mov
pop
adc
sub
adc
pop
or
les
jmp
dec
cmpsb
pop
adcb
and
test
orb
add
inc
scas
add
mov
mov
ss
add
push
in
mov
or
pushf
loope
mov
rorl
insl
pop
mov
arpl
or
cmp
pop
clc
mov
call
insb
fsubrp
mov
lret
adcl
lock
push
clc
xor
mov
and
dec
add
or
cld
inc
mov
test
or
test
shlb
into
cmpb
into
jbe
jo
rcrl
pop
nop
out
popa
rorb
addr16
test
xchg
sti
addr16
sbb
adc
jnp
sub
inc
inc
dec
cmp
das
push
sub
gs
xlat
cmc
sbb
cmp
inc
sti
pop
pop
pop
push
cwtl
cmp
mov
mov
jns
test
inc
fwait
push
cmp
pop
in
lods
push
or
cmp
push
jmp
jp
adc
xchg
xchg
dec
test
push
aam
bound
adc
shlb
dec
pop
js
lcall
lahf
sbbb
or
cmp
pop
rolb
insb
pop
mov
imul
xchg
aam
xor
call
or
inc
insb
mov
xchg
test
adc
cld
aam
xchg
or
int3
adc
std
movsl
sub
or
popa
adc
cmp
scas
push
sub
dec
sbb
jae
adc
lret
or
rorb
jb
lret
adc
or
sub
into
imul
mov
lahf
or
push
incb
ss
fstps
inc
pop
je
aas
add
lea
jl
inc
or
pop
pop
mov
jmp
leave
push
mov
jmp
ds
mov
ret
jmp
lea
test
out
push
inc
mov
or
push
sbb
jbe
push
dec
sub
sub
insb
das
loope
push
adc
adc
sub
or
mov
dec
clc
mov
mov
xor
jge
stos
add
inc
adc
adc
adc
push
mov
dec
mov
push
push
aam
aam
sti
xor
faddl
cmpb
ljmp
shr
and
and
lock
fs
xchg
or
adc
mov
mov
mov
pushf
aad
xor
mov
sub
pop
add
inc
mov
cs
les
popf
mov
mov
test
je
cmp
inc
xchg
lea
ret
add
call
je
imul
lods
jbe
cmc
cmp
xor
mov
bound
cmp
xchg
jmp
inc
pop
aam
cltd
bound
jb
rcll
das
loope
dec
cmpsl
dec
addr16
jno
je
sub
mov
into
mov
or
rcrb
jbe
movsb
xlat
inc
fldt
test
in
daa
leave
inc
icebp
fldl
fdivrp
inc
push
mov
inc
mov
shl
cmp
bound
lock
cmp
loop
nop
adc
push
imul
sub
dec
or
lret
inc
mov
jl
adc
daa
sub
ss
sarb
add
jecxz
sub
jecxz
loopne
shrl
jnp
int
ret
mov
test
sbb
push
adc
jb
jmp
inc
mov
and
lcall
mov
sub
and
and
out
or
shlb
test
mov
sbb
and
mov
and
mov
out
jg
and
adc
les
mov
xor
or
and
add
dec
cmc
arpl
test
int3
or
test
adc
rolb
cmp
or
outsb
dec
mov
loopne
nop
sbb
sub
adc
mov
jmp
call
and
xchg
pop
push
and
js
adc
mov
pop
xchg
lahf
xchg
sahf
dec
lret
jp
push
js
popa
jl
mov
nop
adc
push
add
or
mov
test
cld
or
das
sub
xchg
arpl
repz
and
adc
test
push
or
jge
pusha
mov
jbe
bound
or
pushf
adc
dec
and
inc
inc
lea
lret
push
outsb
stos
mov
jns
jg
mov
lcall
inc
out
jb
aam
stos
push
add
in
scas
jmp
xchg
stos
dec
jmp
and
jnp
mov
movsl
or
movsl
sub
lods
loop
add
jnp
rorb
call
xchg
gs
xchg
mov
push
dec
jno
lods
adc
ret
in
lcall
inc
cmp
jbe
cmp
push
push
sti
push
mov
pop
jge
jne
in
xchg
lahf
jb
fxch
andb
hlt
xorb
jno
push
jno
nop
nop
cld
mov
jmp
cwtl
push
mov
sub
inc
jb
push
pop
or
sbb
pop
shl
dec
jge
mov
cltd
jns
jge
aaa
sbb
push
jnp
addr16
or
mov
inc
je
jbe
mov
adc
mul
mov
arpl
movsl
arpl
xchg
fstpl
dec
loop
cmp
leave
mov
ds
iret
cmp
mov
pop
cmp
push
popf
mov
in
and
pop
and
scas
jnp
mov
add
sbb
decl
stos
jnp
sbb
outsl
test
shrl
stos
dec
cmp
cmp
fs
pop
push
mov
ljmp
je
push
add
scas
inc
loope
adc
out
aas
ret
ret
aas
mov
adc
movsl
std
aas
jo
lcall
adc
test
fs
dec
bound
in
fnstcw
push
daa
cltd
adc
jl
mov
adc
cmc
cli
je
mov
sbbl
xrelease
or
jl
or
inc
insb
inc
add
out
push
mov
mov
add
mov
dec
add
rolb
mov
dec
lods
fistpl
and
inc
cmp
lahf
sbb
cmp
mov
call
inc
inc
movsb
negl
dec
or
popa
or
aam
xor
mov
cmp
push
loop
out
or
call
shll
jmp
dec
lods
stc
sub
add
push
dec
je
and
dec
or
inc
xor
loop
popf
xchg
rolb
andb
jns
mov
mov
sub
repz
scas
fdivl
push
int3
stos
xor
rclb
sub
xlat
ljmp
cmp
shl
ds
pop
or
and
incl
mov
xchg
cli
fisttpll
mov
pop
test
lea
push
mov
in
pop
arpl
or
xor
mov
pop
enter
call
add
sub
leave
and
popf
xor
mov
das
xchg
mov
push
add
cmp
inc
cmp
adc
inc
xchg
adc
dec
or
xchg
mov
adc
stc
imul
push
xchg
repz
dec
adc
fisttps
push
push
fwait
jb
outsb
je
ds
test
sbb
inc
push
pop
test
dec
pop
xlat
cmp
jmp
pop
bound
imul
xor
add
inc
cmp
mov
das
mov
fisubrs
inc
dec
add
and
xor
popa
jno
es
push
test
jo
test
xchg
lahf
xchg
push
outsl
jg
push
call
lahf
adc
sub
and
sbb
xorl
adc
jl
xor
push
add
add
jge
lods
nop
imul
mov
inc
aaa
push
popa
push
jmp
das
jb
push
jbe
int3
adc
cmpl
inc
cmp
push
adc
push
jg
or
fmul
fidivs
mov
mov
mov
mov
mov
or
out
inc
rcll
mov
cld
push
leave
add
outsl
push
push
cmpsl
add
adc
pop
loopne
add
int
and
sub
xor
out
sub
jmp
shrl
test
xchg
rcrl
imulb
dec
jo
fcmovnb
fldpi
lock
pop
out
aad
xor
cmc
ret
jnp
sub
hlt
add
inc
mov
sbbl
jne
jl
fmuls
push
xchg
setns
add
push
jmp
cld
mov
sbb
pop
out
push
int
cld
lds
add
leave
outsl
nop
ljmp
cmp
pop
adc
xor
mov
jmp
jecxz
mov
scas
xor
fwait
jb
stos
mul
leave
movsb
daa
or
jbe
jl
popf
je
push
push
mov
push
dec
mov
das
xchg
out
test
cmp
addl
jno
and
mov
push
leave
inc
xor
and
jle
add
mov
jae
ds
daa
push
push
pusha
sub
cs
insl
popf
out
icebp
daa
je
jae
mov
jbe
cmc
mov
jne
sti
inc
insl
lds
scas
mov
js
out
fldt
xchg
or
sysexit
xchg
inc
xchg
daa
sub
aam
cs
sbb
mov
adc
push
clc
or
into
jecxz
sub
lahf
fs
cmpsl
mov
sub
xchg
dec
xor
fiadds
in
out
movb
jg
mov
or
adc
jae
xor
scas
cmp
inc
adc
clc
pusha
loopne
cmp
jns
or
or
mov
pop
push
jecxz
inc
jp
or
adc
shl
out
test
ret
and
cld
and
sub
lock
jae
mov
pop
ds
xchg
jmp
nop
add
leave
pop
fwait
mov
or
mov
and
hlt
sti
mov
bound
clc
push
mov
inc
xor
pushf
sar
negb
inc
daa
inc
or
and
lock
icebp
sub
pop
test
xchg
xchg
push
leave
imul
push
in
mov
hlt
std
cltd
stos
mov
subl
inc
mov
hlt
loope
outsl
inc
cwtl
dec
dec
inc
cmp
je
jle
adc
mov
stos
xchg
jmp
in
nop
cmp
mov
jge
and
std
lods
js
movsl
add
gs
in
leave
cltd
sub
popa
cmp
jle
xor
stos
nop
std
push
adcl
cmp
jle
dec
addr16
hlt
push
sub
mov
xor
xchg
mov
push
nop
int3
fmull
and
jb
iret
pop
sbb
mov
sbb
arpl
vmread
pop
jb
xchg
or
or
add
stc
add
add
repz
add
cmpl
mov
sub
or
fisubrl
loop
aad
mov
pusha
or
jmp
divl
bound
testl
push
out
leave
lods
xchg
pop
or
push
mov
add
jnp
add
shrl
xchg
add
jnp
roll
pop
mov
push
das
lea
test
push
push
cli
lret
adc
and
ss
inc
lea
and
sti
imul
and
popa
mov
jnp
inc
add
cmp
push
sarb
daa
hlt
test
es
jno
es
and
jbe
jg
or
cmp
lret
les
sbb
jne
test
cmp
notb
mov
pop
sub
loop
mov
dec
push
insb
push
mov
jae
jo
mov
jecxz
mov
xor
jo
jmp
mov
add
sbb
in
xchg
sbb
push
out
push
js
cmpsl
lock
adc
sbb
addr16
dec
sbb
sbb
xchg
test
inc
cmp
xor
pop
and
mov
adc
or
cmpsl
outsb
xchg
mov
jbe,pt
test
cmp
inc
cmp
xchg
sbb
pop
xor
cwtl
sbb
jo
pushf
bound
data16
outsl
mov
or
jbe
pop
aas
adc
mov
mov
pop
xor
push
ficompl
dec
arpl
xor
shll
js,pn
decb
push
ja
outsb
lahf
sbb
push
fidivrs
add
push
mov
dec
pop
addl
cmp
into
out
mov
sub
adc
mov
pop
push
xorb
mov
mov
pop
daa
int3
and
or
pop
hlt
inc
repnz
movsb
dec
or
rclb
cli
cmp
cmpsl
rolb
dec
inc
scas
push
les
xor
out
sbb
adc
push
mov
mov
cmp
lods
enter
enter
es
inc
push
and
mov
inc
popf
push
mov
test
jo
and
xlat
dec
or
dec
fwait
add
pop
xchg
imul
dec
inc
ret
dec
fists
push
add
push
out
push
pop
repz
ds
nop
outsl
or
jmp
pop
fsts
push
xchg
out
cs
xlat
xchg
push
adc
xor
lret
test
mov
pop
mov
mov
clc
mov
add
call
into
sub
push
into
ficomps
js
jae
out
add
out
cmc
arpl
stc
ss
inc
cmp
addl
cmp
adc
push
call
xchg
jns
fwait
in
or
cld
and
jbe
add
push
data16
gs
adc
movsb
imul
jecxz
leave
daa
negb
adc
imul
pop
sub
adc
mov
outsl
jns
data16
aam
mov
and
dec
xchg
aad
imul
push
adc
dec
aas
mov
test
sti
or
xchg
or
pop
lret
sbb
jp
jge,pn
out
push
pop
orl
add
mov
pop
add
inc
cmp
movsb
mov
std
jp
sub
divb
in
xchg
cmp
out
inc
cwtl
lods
je
mov
fwait
sahf
xor
loope
call
cmpsb
dec
insb
adc
mov
adc
nop
add
data16
cli
cltd
sbb
pusha
sub
mov
push
adc
sub
test
imul
cmp
popf
push
sub
push
inc
lods
ljmp
cld
ss
and
dec
mov
testl
sub
notl
and
loop
insl
inc
mov
jmp
fsubrl
or
adc
decb
xor
push
in
inc
ret
aad
imul
mov
lods
shrb
add
inc
inc
outsl
in
lods
mov
test
ja
mov
adc
sbb
mov
js
das
cmp
cld
pop
dec
push
call
hlt
push
add
bound
rcrb
outsb
push
adc
push
mov
jmp
daa
xchg
sub
jle
sub
sub
cmpsl
dec
dec
push
and
push
pop
jge
sub
mov
mov
out
sbb
xchg
les
mov
imul
adc
mov
sahf
mov
push
mov
test
xchg
add
mov
xor
orl
cmp
nop
xor
pop
inc
mov
lret
mov
pop
inc
rcll
mov
adc
dec
popa
or
and
sub
ds
jmp
fsub
pop
mov
xlat
jb
add
mov
add
lea
cs
call
push
data16
xchg
jne
add
adc
adc
xor
sub
test
imul
hlt
jl
mov
movsb
inc
lea
cmp
aad
push
add
mov
das
inc
inc
dec
jg
pop
adc
inc
xor
out
leave
das
mov
sbb
mov
push
jl
shlb
loope
and
lock
popa
jecxz
pop
jbe
xchg
insb
add
inc
lret
add
cwtl
add
dec
mov
push
scas
int3
pushf
in
pop
sti
negb
loope
sbb
cmp
add
ja
rcrl
in
xchg
cmp
xchg
lds
mov
movsb
and
sub
fildl
into
call
cmp
dec
dec
mov
je
or
pop
sub
jb
out
cmp
pushl
test
jmp
cmpsb
or
xchg
dec
rcll
mov
xchg
stc
shr
xor
stc
adc
pop
sub
cld
dec
xor
add
xor
cmpsb
ret
mov
push
push
scas
adc
jecxz
sub
jne
push
and
adcb
xchg
adc
inc
pop
les
in
mov
sbb
dec
fs
cmpsb
or
leave
pshufw
dec
mov
insb
push
jbe
ja
mov
loop
adc
shlb
sub
jo
fcmovnb
dec
je
gs
orb
adc
movsb
mov
movb
cld
push
add
push
pushl
sbb
loop
je
popa
popf
mov
jo
aaa
push
push
add
jmp
sbb
pop
and
push
popa
scas
pop
outsb
fsubrs
pop
stos
aam
loope
shlb
cmp
dec
addl
call
mov
into
or
fmul
sub
sbb
add
jge
mov
icebp
testb
shl
je
mull
cmp
inc
push
jne
cmpl
pop
xchg
mov
into
ficomps
add
add
sbb
pop
jne
inc
and
cld
and
enter
in
cmpsb
sub
lea
out
sbb
jne
or
push
jb
mov
push
mov
dec
and
xchg
pop
sbb
add
mov
shrl
sub
mov
mov
cmp
pop
aam
or
pop
cli
mov
jle
push
lret
jae
je
jo
inc
stos
bound
xorb
jle
mov
add
cmp
jl
push
mov
lret
aam
std
xchg
les
adc
lds
add
sbb
or
fdivr
sbb
and
ret
pop
and
jno
cmp
in
jmp
jo
scas
jmp
lcall
xor
xor
mov
xor
stc
add
btr
push
sbb
test
dec
addl
movsl
in
dec
nop
fs
push
loopne
sbb
pusha
clc
jmp
ja
jge
mov
lds
jo
jbe
cmp
sub
pop
dec
or
popa
xor
inc
shrl
loope
adc
jns
mov
cmp
push
sahf
inc
add
jno
das
dec
xchg
mov
mov
mov
xchg
sahf
dec
dec
mov
dec
lcall
dec
daa
pop
mov
or
ret
icebp
push
fcomps
dec
pop
hlt
leave
push
leave
in
hlt
mov
xchg
pop
pop
xor
pushf
test
cmpb
das
push
mov
dec
inc
sti
xchg
dec
in
jge
aam
in
subl
push
xor
push
fdivs
and
push
rcl
lods
dec
les
pop
or
les
call
lcall
movsl
sbb
mov
xchg
hlt
out
int3
pop
and
arpl
sub
adc
leave
dec
pop
into
jne
pop
into
cmpsb
ret
scas
and
fucomp
pop
push
adc
ds
testb
cmp
jp
cmp
cltd
clc
or
sbb
add
in
add
jge
add
mov
jnp
outsb
cmp
cwtl
xchg
xor
xchg
in
or
add
cmp
loope
inc
out
pop
push
sub
cld
push
sub
mov
aas
test
sub
pop
lock
enter
repz
ljmp
pop
xor
xchg
dec
setns
push
xor
mov
jg
loope
push
fsubs
loopne
insb
bound
or
subps
inc
lods
add
jp
inc
mov
daa
jle
cmp
cmp
cltd
insl
jle
popa
xor
mov
loop
dec
iret
call
dec
jg
sub
pop
mov
mov
cltd
movb
lret
cmp
inc
pop
jno
jne
scas
lcall
mov
loop
sub
push
in
pop
mov
xchg
es
pop
inc
xor
jae
mov
jnp
add
hlt
out
lea
cmp
idivl
loope
lock
sbb
xor
ret
jmp
int
in
cs
and
inc
cli
popa
cmpsb
sbb
push
pusha
call
xor
hlt
cli
or
dec
test
pop
pop
pop
pop
xor
out
xchg
push
mov
jl
xchg
jle
js
and
or
mov
shrb
in
and
jns
dec
add
xchg
push
pop
cwtl
xchg
nop
sub
and
jne
mov
jbe
inc
frstor
adc
js
fstpl
push
and
sub
pop
inc
cmp
mov
aam
xchg
stc
rclb
push
or
jle
adc
aam
sbb
test
xchg
stc
push
push
idivb
dec
call
inc
mov
test
and
pop
pop
dec
lcall
cmp
lret
xchg
sbbl
jns
adc
imul
xchg
adc
inc
inc
dec
lds
test
jbe
dec
jl
mov
add
in
decb
and
dec
xor
int3
lret
add
movsb
mov
dec
xor
and
jne
sbb
mov
les
movzbl
xchg
add
lea
orl
inc
lahf
dec
push
jmp
dec
jmp
jnp
test
xchg
cmpsl
pop
aas
and
adc
push
out
mov
pop
mov
and
cltd
lea
mov
test
add
popl
xchg
frstor
jb
dec
iret
dec
dec
cmc
incb
xor
lods
mulb
cwtl
jmp
push
cltd
xor
movsb
inc
pop
or
and
lahf
das
icebp
push
xchg
outsb
add
movsb
push
je
xor
xchg
or
mov
add
ror
xchg
dec
ss
mov
cmp
mov
insb
es
out
js
xor
fnstenv
addb
push
dec
cmp
push
and
iret
call
rcrb
addb
mov
sbb
cltd
mov
cmp
aaa
stc
dec
lret
arpl
movsb
stc
or
mov
and
mov
jge
out
pop
addb
lock
je
orl
lcall
and
cmp
movzwl
mov
xchg
adc
scas
push
test
or
jb
popa
mov
adc
add
push
pop
jmp
inc
and
in
pop
or
faddl
jmp
clc
mov
test
lea
fdivs
mov
ret
inc
pushf
subl
das
or
and
sub
decb
jbe
inc
ss
inc
sbb
shr
out
bound
push
in
add
or
rcr
add
pushl
inc
pop
add
sub
jl
ja
pop
in
mov
movsb
and
adc
jbe
sub
sub
ds
loopne
cmp
call
test
stos
hlt
cmp
lret
shrb
adc
je
lret
pop
sti
inc
jmp
cld
test
mov
jle
pop
jecxz
pop
adc
jo
pop
mov
icebp
je
xor
push
sti
cmpsl
jle
jb
xor
pop
arpl
push
push
jne
jmp
push
mov
sbb
inc
fidivs
mov
jnp
jmp
xchg
jbe
das
inc
add
or
mov
push
sub
mov
sub
roll
clc
call
aaa
sahf
insl
xor
adc
scas
call
sub
dec
std
pop
leave
and
pusha
pop
inc
and
dec
cmpb
aad
testb
bound
dec
adc
adc
xor
loopne
mov
mov
pop
adc
dec
sti
xchg
adc
js
jne
movsb
sbb
popf
pop
dec
push
decb
out
add
loopne
scas
add
or
dec
stos
add
sbb
ja
and
add
faddp
jmp
fninit
ffree
jle
nop
add
sub
cmp
jbe
stos
ret
push
sahf
scas
xchg
push
int
rorl
sub
iret
dec
or
aad
decb
mov
clc
jnp
nop
data16
push
mull
aas
or
push
sbb
mov
inc
pop
in
add
xor
out
movsl
fidivrs
and
mov
adc
movsb
lock
mov
inc
test
add
popf
cltd
pushf
lods
sub
jmp
call
pop
lods
in
test
js
icebp
sub
adc
sbb
daa
je
xlat
in
es
mov
mov
sub
or
aaa
faddl
sbb
add
dec
sub
xchg
popf
insl
gs
int
push
fcoms
call
cmpsl
bound
int3
xor
push
push
or
js
fnstsw
mov
pop
xchg
mov
pop
cmpsl
or
pop
cmpsb
pop
adc
lahf
push
sub
add
add
leave
gs
inc
test
das
add
sbb
or
les
jns
stos
inc
lock
movsb
jnp
pop
xor
or
iret
shrb
mov
movsl
xchg
imul
mov
adc
push
in
ja
mov
loopne
sub
orl
movsb
mov
test
js
xchg
add
push
push
mov
cmp
xor
cli
or
out
test
jmp
lds
in
les
inc
rorb
rorb
jne
pusha
clc
mov
push
nop
jnp
lock
cmp
cmp
jae
lea
mov
inc
nop
and
jb
sub
lods
and
push
ret
or
xchg
cmpb
fisttpll
sbb
lods
push
or
add
or
jb
xchg
inc
mov
decb
je
dec
fs
cmp
leave
jno
sbb
inc
test
jae
sbb
cmp
lea
adc
mov
lahf
in
lcall
inc
cmpb
sar
sub
dec
loope
pop
das
orl
push
xor
xchg
into
add
andl
xchg
dec
or
and
test
lea
addr16
adc
and
fwait
dec
or
dec
xchg
jge
mov
clc
ss
push
mov
sti
xchg
out
mov
adc
sti
push
and
cmpl
aas
and
xor
cmp
jns
icebp
imul
mov
mov
int
dec
sub
fmull
cmpsb
fmuls
cmp
sbb
sbb
enter
jb
mov
xlat
adc
add
adc
lock
cmp
push
fwait
inc
cmp
movsb
fcomps
cmpb
add
loopne
push
mov
ret
push
aad
push
xor
sub
ds
rclb
sbb
pusha
mov
jle
jmp
xchg
nop
movsb
or
jl
mov
xor
cmp
je
loop
ja
adc
xchg
cltd
dec
imul
dec
out
mov
push
cmp
ja,pn
jle
pusha
in
movsl
push
popf
stc
push
mov
je
mov
rclb
mov
and
fsubrs
notb
repnz
pop
in
stc
adc
movsb
lods
inc
rclb
dec
subl
fdiv
cmp
je
dec
ss
or
jne
push
pop
out
pop
mov
lock
sub
movsl
adc
icebp
mov
adc
push
and
repnz
pinsrw
mov
loope
adc
push
dec
sahf
pop
mov
scas
sub
aas
idiv
and
or
jmp
cs
int3
hlt
inc
push
jl
pop
sti
es
push
movsb
mov
lock
mov
and
dec
insb
and
loopne
pop
dec
scas
or
xor
sbb
xorl
inc
clc
jecxz
dec
xchg
daa
data16
scas
push
pop
adc
sbb
jbe
mov
add
mov
mov
cmp
jne
sti
ljmp
or
jmp
jne
das
sbb
mov
fsts
push
or
or
or
mov
push
inc
add
pushl
push
dec
les
add
lds
jnp
in
cmp
js
sub
enter
sub
push
mov
jb
add
mov
and
inc
inc
adc
jl
adc
cli
filds
cmp
mov
pop
push
nop/reserved
dec
pop
cmc
das
dec
ja
add
incb
pop
adc
jmp
jecxz
mov
dec
ljmp
sbb
dec
popf
pop
push
jno
cld
cmp
lea
push
in
inc
add
push
sub
add
repnz
int
sbb
jo
out
push
ja
xchg
addl
idivb
mov
leave
popf
sub
ds
cmp
dec
call
xchg
insl
mov
dec
push
sbb
push
aaa
mov
push
rclb
or
lahf
push
in
or
cwtl
inc
mov
lret
or
out
or
push
and
test
sbb
push
or
je
or
xchg
scas
mov
neg
adc
lock
andl
pusha
sbb
xor
xchg
jo
add
jge
cmpsl
push
adc
test
push
aad
dec
bnd
fs
xor
dec
cmpb
lea
imul
pop
sbb
dec
sbb
cmp
pop
jne
or
ret
mov
xchg
jg
add
jbe
xchg
sbb
adc
xor
clc
sbb
push
imul
dec
and
cs
rorl
push
movsb
mov
loopne
sub
aam
or
mov
push
push
test
xor
add
jne
lea
xchg
pop
xor
sbb
aam
jmp
sbb
sbb
lods
jle
and
jle
xor
rcll
mov
and
lods
sub
mov
mov
lret
push
adc
dec
pop
or
sqrtps
pushf
shlb
inc
xor
fstl
xchg
lret
jne
sub
fs
out
mov
shll
dec
xor
cli
push
jge
ror
xor
push
adc
sbb
andl
inc
mov
in
and
test
and
call
sub
imul
xchg
push
test
push
cmp
sub
das
push
sti
lret
pop
je
xor
sbb
xchg
push
dec
xchg
test
imul
mov
and
inc
ja
add
stos
push
aad
les
push
adc
push
mov
mov
pushf
loope
mov
xor
lret
loope
xchg
mov
xor
clc
mov
dec
dec
fists
adc
mov
popa
and
das
ret
out
and
mov
xor
in
test
cmp
roll
adc
or
repnz
add
adc
dec
adc
add
inc
xor
cmp
notb
xchg
sub
adc
sub
or
scas
pop
stos
outsb
mov
xchg
xor
dec
lock
loope
ss
sar
pushfw
test
loopne
or
jne
push
js
repz
scas
xchg
ljmp
dec
pop
aam
in
mov
pop
push
in
enter
push
adc
cmp
push
movsb
xor
add
add
movsb
sub
enter
bound
mov
inc
cli
sbb
inc
cmp
dec
pop
adc
mov
cmp
push
adcl
add
negb
movsl
mov
jle
mov
add
mov
cs
loopne
mov
cmp
push
and
sbb
or
in
test
aaa
mov
enter
push
adc
roll
call
shrb
mov
xchg
je
mov
test
push
and
gs
dec
push
fsubrs
adc
stos
adc
clc
jb
adc
das
rolb
inc
daa
pop
loop
mov
inc
jl
or
les
pushf
pop
je
push
xchg
rclb
add
and
add
scas
sbb
imul
scas
lahf
jmp
push
inc
mov
mov
cmp
je
cmp
push
or
and
aad
shrl
test
mov
xor
ret
or
hlt
test
pop
aaa
je
ljmp
adc
xchg
les
pop
pop
push
push
sbb
or
lds
or
daa
pop
jne
iret
cmp
gs
inc
xorl
push
loopne
imul
push
jmp
and
xchg
push
or
dec
arpl
gs
int3
sub
push
repnz
jne
cmc
loop
or
repnz
cmc
lods
test
mov
push
fcoms
push
inc
mov
cld
insb
push
push
add
pop
pusha
and
jecxz
push
pop
xchg
loope
imul
fadd
mov
mov
dec
cmp
mov
clc
jbe
push
daa
lock
std
ss
xchg
jbe
in
mov
sbb
stc
dec
in
mov
or
pop
movsl
push
sbb
sub
stos
sub
and
fisubs
mov
push
call
arpl
jae
adc
fyl2xp1
outsl
push
loope
imul
adc
add
mov
dec
mov
pop
sub
push
xchg
outsb
inc
jae
mov
mov
pop
dec
ret
je
xor
fiadds
inc
or
inc
inc
pop
repnz
andb
imul
pop
clc
stos
int3
mov
sub
sbb
jns
dec
stos
mov
cmpsl
sbb
lods
daa
xor
jb
int3
pop
sbb
enter
and
cld
mov
mov
clc
push
adc
inc
movw
inc
inc
push
in
or
or
pop
sub
inc
dec
es
push
xchg
adc
push
cld
mov
cld
movsb
aaa
adc
popf
movsb
push
bound
sbb
cmpsl
dec
sbb
sbb
pop
jns
stc
inc
cli
stc
jp
lea
jbe
cwtl
lods
cmp
dec
mov
mov
sbb
adc
ret
pop
call
lods
ljmp
cmp
sbbb
adc
and
mov
push
mov
push
outsb
in
nop
inc
xchg
std
xor
popf
imul
lcall
xchg
stos
push
sub
rorl
mov
mov
clc
scas
jle
pop
mov
or
pop
jne
test
or
loopne
ja
dec
or
ja
jb
loopne
repnz
hlt
mov
cmp
or
inc
test
mov
lods
mov
pop
cli
push
je
jp
repnz
dec
or
lcall
push
add
mov
lea
int3
rclb
pop
loop
push
adc
imul
jae
fdivl
inc
movsl
xor
ret
arpl
mov
pop
ret
loope
pop
ljmp
bound
movb
or
cmovo
das
cli
cmp
and
cmpsl
hlt
sbb
sar
test
or
cs
add
fwait
push
or
or
adc
aad
or
in
add
daa
dec
sbb
xor
xorl
stos
xor
mov
push
test
aas
rorb
mov
cmp
dec
sarl
mov
or
adc
xchg
jmp
pop
add
pop
das
jmp
and
int3
addl
or
and
inc
sbb
addr16
or
mov
push
sti
lds
gs
adc
div
jp
test
xchg
push
mov
test
inc
not
mov
dec
icebp
pop
repz
dec
nop
lret
inc
cmp
xchg
pop
in
dec
movsb
cld
adcl
lea
xchg
mov
sub
sub
xchg
fildl
and
mov
adc
xor
outsb
aam
sbb
cmc
cmpl
gs
and
mov
mov
jp
mov
lea
sbb
or
push
cltd
bound
mov
dec
sub
cmp
inc
test
mov
call
pop
sub
pop
mov
adc
adc
scas
dec
clc
gs
subb
xor
mov
cmp
std
xchg
cltd
pop
push
push
lock
lock
ljmp
cmp
in
adc
adc
or
or
mov
call
in
push
fmull
sarb
cwtl
fcmovnu
test
mov
and
sub
mov
or
jns
or
adc
adc
add
push
mov
pop
jmp
dec
or
jo
mov
popf
mov
pushf
jne
ret
xchg
incl
mulb
test
leave
jmp
mov
cmp
and
shrb
cmp
cs
or
pop
aam
bound
cmp
lea
push
ja
jb
cmp
jb
insl
jae
movsb
lret
inc
xlat
add
mov
sub
fmuls
in
push
lods
xchg
pop
mov
adc
push
pop
or
adc
loopne
push
push
enter
mov
cmp
xchg
lahf
lcall
xor
mov
jo
mov
sub
shrb
loop
pushf
loope
fsub
movsb
jmp
dec
adc
mull
or
jmp
clc
adc
push
call
sbb
adc
xchg
adc
ret
and
sub
in
mov
adc
fcomps
add
and
aad
sbb
int3
sub
mov
movsl
stos
inc
daa
and
mov
loopne
mov
inc
je
gs
adc
mov
push
xchg
loopne
in
xchg
or
cmpsb
xchg
xchg
jecxz
insl
push
and
ficoml
and
test
xchg
dec
subl
mov
stos
hlt
test
hlt
xchg
ficoms
data16
lea
mov
rclb
dec
adc
push
pop
dec
in
add
pop
adc
dec
push
jo
push
push
arpl
test
roll
sub
sbb
add
enter
lret
sub
imul
sbb
push
dec
add
adc
or
or
cmp
sbb
inc
hlt
inc
push
push
lahf
arpl
adc
adc
sbb
cmp
or
inc
pop
cmp
icebp
jae
jns
dec
xchg
xchg
cmp
inc
inc
inc
cwtl
sub
jp
scas
sub
sti
and
fdivrl
and
mov
inc
dec
sub
inc
xchg
data16
dec
dec
test
and
adc
cmp
out
jl
enter
ljmp
popf
pop
add
jne
sahf
ss
xchg
adcl
jbe
push
lods
xchg
push
lods
scas
cmp
push
xchg
lds
sub
sahf
cmp
imul
mov
cmp
mov
inc
jl
pop
dec
cmp
jae
cmp
sub
sbb
and
inc
cs
mov
dec
dec
fstl
icebp
aaa
xor
arpl
and
mov
dec
push
push
mov
xor
mov
les
push
push
jge
imul
data16
aaa
dec
add
ret
fisubrs
dec
cltd
ja
sub
pop
sub
jae
mov
or
call
mov
orl
xchg
or
mulb
xor
daa
xorb
sub
xchg
push
cmp
in
lret
mov
push
push
push
xchg
or
lea
stos
jp
push
test
xor
mov
mov
lret
sbb
inc
mov
daa
cmc
idivl
inc
inc
add
inc
adc
addl
test
add
or
or
cwtl
or
cmpsb
repnz
les
les
fs
insb
xor
fwait
test
pusha
cltd
hlt
dec
adc
fcomps
push
push
xlat
inc
mov
rclb
xchg
rcrb
pushf
xchg
cmp
sbb
jae
push
shrb
mov
mov
es
inc
mov
sub
adc
sub
or
adc
aam
mov
mov
fs
xor
test
and
mov
mov
scas
xor
adc
repnz
jp
pop
jmp
leave
push
and
pop
push
mov
xchg
inc
dec
rclb
and
mov
inc
pop
push
or
or
pop
dec
cmp
and
and
nop
in
dec
call
lds
out
rcr
mov
sub
xchg
dec
mov
dec
mov
cmp
test
cmp
call
enter
shr
push
test
cmp
rclb
fsubrl
and
push
push
pusha
loop
icebp
icebp
imul
cmp
out
sar
cmpsb
fstpl
push
push
cmp
add
icebp
rorl
xchg
stos
dec
sbb
aam
dec
pop
mov
push
das
mov
les
in
pusha
push
mov
mov
jae
and
xor
or
shrd
int
dec
jno
jmp
test
lea
cmp
je
testb
and
lock
xchg
nop
inc
sbb
movsl
je
or
aad
pop
push
mov
mov
stc
imul
xor
outsb
mov
rclb
loopne
decl
cmp
pop
cli
or
adc
test
and
cwtl
sbb
add
add
push
sbb
sbb
push
add
and
push
and
dec
inc
fs
mov
movsb
jmp
push
cmp
daa
movb
les
push
clc
push
mov
cltd
push
jbe
test
push
mov
dec
mov
das
js
je
pop
mov
mov
inc
lcall
cvtps2pi
shll
mov
mov
sub
push
inc
xor
push
adc
sbb
pop
clc
pop
movsb
and
or
jne
push
inc
mov
mov
sub
adc
and
push
js
cltd
test
je
popf
outsl
fwait
es
push
mov
imul
test
ljmp
sbb
jle
lret
push
lods
jno
je
imul
pop
lret
hlt
aad
decb
mov
dec
add
mov
lahf
inc
popa
xor
rcrb
mov
inc
arpl
jo
mov
sub
and
push
out
mov
push
sbb
inc
xlat
pop
fsubrl
inc
xchg
sub
adc
test
push
test
dec
es
into
push
fcmove
imul
dec
push
je
mov
sahf
and
push
push
hlt
test
push
outsb
and
dec
gs
test
in
pop
or
push
push
movsb
xor
dec
iret
rclb
adc
cmp
xchg
test
sti
push
popf
mov
insb
push
or
cmp
cmp
sub
inc
adc
lods
and
xor
insb
xor
xor
or
push
and
aas
adc
mov
sbb
pop
call
mov
daa
push
dec
mov
mov
test
je
out
fldt
jnp
cs
jl
and
je
sbb
ret
jmp
lahf
push
test
pop
and
nop
dec
adc
aas
adc
or
mov
xor
push
pop
and
inc
jge
push
and
push
add
jecxz
cmc
xchg
mov
and
clc
inc
push
testb
push
xor
sub
adc
sub
mov
sahf
sub
subb
enter
mov
cmp
nop
test
shr
cld
add
push
mov
pop
mov
xchg
test
je
ds
adc
fnstcw
in
cmp
mov
out
popa
inc
push
pusha
and
or
mov
dec
ljmp
push
sti
enter
repnz
mov
les
aam
clc
push
xchg
jp
jmp
fnstsw
daa
shll
and
loope
dec
mov
jmp
jmp
inc
daa
js
push
adc
cld
dec
mov
mov
and
or
sahf
sub
repnz
sub
cmp
push
push
xor
repnz
xor
jae
dec
mov
mov
popl
cmpsb
jno
outsl
iret
mov
push
add
mov
xor
or
inc
call
lea
std
test
mov
dec
cld
sub
pop
mov
jns
insb
leave
push
xchg
mov
push
cmpsl
gs
mov
mov
fisubrl
sbb
lea
hlt
imul
pop
call
or
outsb
jne
inc
add
jo
popa
jns
std
cmp
arpl
push
and
xorb
stc
and
push
mov
lods
dec
bound
dec
popf
xchg
out
push
jnp
cwtl
fistpl
add
dec
sbb
xor
ss
int
push
je
js
repnz
xchg
popf
jg
int3
test
mov
xchg
cmp
push
gs
jb
ds
adc
loopne
adc
jmp
ljmp
mov
sbb
notb
cmpsb
push
dec
xchg
xor
lret
push
xchg
les
fisubrl
cmpsl
xchg
pop
movsl
inc
icebp
inc
cmpsl
dec
mov
sub
inc
pop
adc
push
imul
nop
gs
jo
push
push
mov
outsl
xchg
xor
push
sub
push
pop
insl
mov
sahf
jp
push
imul
pop
xchg
adc
mov
inc
test
fisttpll
add
cwtl
jae
dec
inc
hlt
xchg
xlat
and
mov
adc
push
movsb
jg
popl
enter
xchg
sub
jnp
jecxz
stc
sti
lods
lret
je
xor
cmp
daa
jne
gs
mov
cmp
test
lods
ffree
clc
je
push
sbb
push
mov
inc
lcall
adc
bound
mov
call
test
mov
mov
nop
pop
hlt
mov
sbb
mov
cmp
jge
mov
push
rorb
adc
int3
mov
sub
inc
movsb
pop
cld
shlb
xor
pop
adc
jno
mov
cmp
call
or
xchg
fcomps
popf
dec
or
jl
inc
mov
mov
pushl
stc
cmpl
mov
xor
or
mov
sbb
add
jne
test
jmp
lea
xor
adc
sub
sub
mov
mov
int
int3
nop
and
sbb
cltd
ss
dec
dec
sbb
mov
fadds
push
sub
loop
xor
fiadds
mov
loop
adc
mov
sub
lahf
pusha
imul
je
mov
cmpl
in
cmp
push
clc
or
hlt
cltd
jge
xor
stos
jle
mov
outsl
jl
adc
sub
insl
xchg
sbb
int
fisttpl
lcall
pop
cmp
in
sbb
js
pop
popf
in
mov
insl
and
nop
call
jb
fs
jo
push
mov
adc
adc
jae
imul
mov
sub
dec
sbb
lods
jle
jle
rcll
cmp
push
mov
aas
xor
test
xor
pop
xlat
sbb
xchg
ret
mov
nop
cmp
call
call
dec
xor
push
adc
cmpsb
nop
inc
push
sbb
lods
mov
cltd
repz
lds
dec
lds
jg
inc
and
shll
cmp
push
add
ret
gs
test
lds
add
add
subb
add
imul
jno
test
push
and
cmp
lds
cli
stos
repnz
jo
inc
popa
jae
mov
add
arpl
stos
jbe
xchg
push
cwtl
add
clc
cmp
mov
and
push
push
pop
adc
sar
inc
jecxz
lds
inc
fadds
sti
ja
xor
xlat
xchg
pop
js
loope
cmp
cmc
push
dec
bound
push
or
aad
inc
cmp
jmp
in
cmpl
sbb
adc
les
pop
daa
jecxz
insb
test
mul
sub
mov
imull
pop
dec
jl
cld
jp
enter
hlt
sub
push
xchg
lds
rorl
adc
pop
mov
dec
pop
ljmp
int3
stc
test
stos
push
in
ficompl
jg
in
add
and
test
mov
mov
mov
mov
or
add
add
stos
adc
push
stos
add
lods
call
popa
outsb
inc
pop
pop
mov
mov
int
std
xor
mov
bnd
addl
xor
enter
out
push
add
clc
xor
cmp
sbb
add
int3
and
lds
lea
cmp
push
out
stos
mov
and
das
pop
aam
leave
mov
push
inc
push
scas
push
imull
xor
jg
mov
jne
divb
scas
mov
adc
push
pop
mov
add
dec
in
scas
or
or
sub
test
push
ror
push
xchg
dec
xorb
and
jne
imul
jno
lcall
or
and
inc
test
jp
mov
and
stos
out
and
setne
xchg
sbb
dec
ds
adc
mov
imul
mov
imul
outsl
les
push
lahf
dec
clc
mov
push
xlat
cmp
pop
xchg
sbb
mov
fistps
test
leave
push
hlt
ds
cmp
in
cmc
inc
push
push
sbb
push
push
pop
and
sub
add
adc
andb
mov
add
call
leave
dec
or
bound
lock
daa
jl
fstps
call
or
mov
jge
push
mov
stos
fwait
daa
jb
xchg
ljmp
and
push
cmpsl
fwait
jno
or
enter
sbb
adc
popf
rorb
sub
popf
dec
arpl
xchg
test
por
xor
hlt
jmp
out
mov
mov
cmp
fst
add
aas
and
pop
das
rolb
sub
push
inc
and
pusha
and
repnz
adc
add
test
outsl
movsl
jg
jmp
test
jg
fbld
add
clc
aad
and
popa
pop
mov
inc
xor
xor
rcrl
mov
leave
insl
add
jmp
xchg
adc
jne
or
nop
loop,pt
adc
push
and
adc
loope
adc
push
sbb
xchg
xor
and
pop
cmp
adc
cmc
adc
cmc
push
add
push
mov
mov
or
pusha
xor
sbb
cmp
loop
xchg
push
jmp
adc
xchg
add
add
clc
movsb
sbb
mov
push
leave
mov
push
cwtl
xor
push
roll
jne
aaa
jmp
adc
in
sbbl
ljmp
stos
jl
or
aas
xor
xchg
pop
pop
push
in
imul
inc
xor
in
es
add
and
insl
cmp
loopne
mov
imul
cmpsb
or
adc
push
adc
or
cli
pop
fwait
lock
pop
jmp
out
or
out
pop
push
cmpw
push
adc
add
adc
pop
fists
sbb
in
pop
xchg
sbb
call
push
sbb
shrl
push
divl
xor
inc
nop
shl
mov
inc
test
dec
inc
dec
xor
mov
add
dec
push
dec
lcall
inc
pop
lds
repz
or
sbb
jmp
test
lds
sub
xor
jne
lret
jle
test
dec
pop
sub
add
cwtl
hlt
and
punpckhdq
pop
xor
jge
inc
rolb
pop
mov
nop
imul
xchg
mov
jge
je
subl
stc
or
mov
push
sbb
inc
loopne
outsl
push
adc
fwait
cld
cmc
inc
push
js
sbb
add
cmc
mov
xorb
adc
mov
or
aas
icebp
mov
adc
cmpsb
pop
cwtl
subb
mov
adcb
insl
pop
sub
jno
push
jp
aam
push
mov
ds
rclb
rcr
push
ret
and
rclb
mov
push
pop
das
mov
pop
dec
test
push
sbb
ficomps
pop
fmull
pop
js
jmp
cmpsb
mov
int
sub
rolb
dec
xor
and
push
rolb
and
and
and
or
inc
push
ljmp
pop
cld
pop
fsubs
test
and
ret
xlat
ds
cwtl
pop
dec
sbb
ret
dec
mov
loop
pop
add
adc
cmp
mov
and
inc
adc
in
notb
jl
negl
insb
mov
xor
inc
jmp
outsb
aad
jnp
in
or
adc
aaa
nop
xchg
int3
mul
cltd
cwtl
mov
pop
decl
xchg
adc
mov
push
and
stc
mov
out
std
mov
adc
mov
or
sub
pop
adc
push
or
shl
pop
out
sub
sub
mov
jle
push
xchg
outsl
add
cltd
loop
push
addr16
adc
add
mov
inc
scas
fiadds
inc
lret
mov
cli
cmpl
xor
in
pop
fisttps
xor
stos
adc
into
and
sbb
jle
dec
add
pop
add
stc
jl
mov
fs
or
stos
enter
sub
imul
mov
dec
cld
cwtl
lock
cmp
daa
dec
shr
sub
popf
inc
stos
add
dec
das
sbb
mov
mov
cld
and
fstps
add
inc
rorl
mov
add
daa
dec
hlt
mov
jnp
sub
stos
pop
ljmp
xchg
rolb
fistps
nop
fldcw
add
call
xchg
sbb
mov
adc
jne
pushf
lock
or
mov
push
adc
sub
rorl
push
icebp
imul
sbb
sub
popa
pop
push
sbb
fistpll
aaa
shlb
jne
mov
push
cld
dec
in
mov
push
adc
mov
pop
mov
and
test
fists
sub
lods
push
sub
or
repz
sbb
pop
and
or
dec
and
jmp
ja
add
stos
addr16
ljmp
lret
dec
es
dec
mov
fcomps
inc
hlt
call
cli
inc
jne
or
fs
loope
lea
loopne
jg
xor
dec
mov
jnp
xchg
test
in
jno
lds
xchg
and
loopne
or
pop
inc
adc
ret
dec
cmp
cmpsl
leave
leave
or
frstor
jbe
inc
add
cmp
pop
add
and
or
out
bound
inc
push
push
sbb
loopne
dec
or
pop
into
clc
loopne
mov
cmp
out
adc
out
leave
and
or
inc
enter
add
cmp
mov
lods
fs
sahf
mov
sub
fdivp
jns
xchg
hlt
imul
hlt
adc
adc
inc
movsb
in
test
mov
into
xor
xchg
lcall
fisubrl
xor
js
or
ss
pop
sub
out
orb
test
in
sub
inc
dec
add
xchg
mov
cmp
sbb
int
cmpsb
je
jns
adc
sub
jbe
adc
scas
or
popf
ret
lods
mov
xchg
mov
sub
pusha
je
push
and
clc
adc
stos
and
hlt
inc
pop
pop
in
decb
xchg
ss
in
pop
add
mov
adc
add
xchg
inc
js
jmp
mov
mov
inc
xchg
push
cmp
jbe
ss
sahf
pop
pop
jae
or
cmp
mov
mov
fs
idivb
cmp
or
mov
mov
mov
jo
xor
jbe
xchg
jl
mov
int
xor
mov
mov
push
jecxz
movsl
xor
fidivl
adc
outsl
repz
test
jbe
jmp
pushf
or
pop
addr16
fdivs
idiv
repnz
sbb
pop
lods
sub
pop
es
jl
mov
push
pop
outsl
inc
xor
pop
test
movaps
cld
jno
or
or
inc
imul
mov
pop
in
aas
xchg
sub
cmp
jne
leave
test
cmp
mov
dec
adc
fldl
mov
inc
push
jae
shrb
push
mov
add
mov
mov
fsubl
ss
push
nop
aam
test
pop
aas
pop
icebp
adc
push
int3
ss
movsl
repnz
arpl
jmp
js
push
rorl
mov
retw
dec
jne
and
adc
and
fisttps
xor
pusha
test
lods
into
imul
adc
pop
pop
int
and
mov
inc
lcall
mov
cmp
cwtl
adc
ret
repz
inc
ret
or
adc
stos
and
inc
jnp
pop
aaa
or
mov
xor
daa
xchg
inc
out
adc
or
into
adc
sbb
pushf
and
adc
xchg
inc
pop
add
mov
aad
xchg
adc
scas
inc
xor
pop
je
inc
test
mov
push
mov
std
xchg
mov
loopne
add
mov
mov
jecxz
push
ja
or
lret
mov
mov
mov
leave
inc
mov
jg
lods
ljmp
testb
sbb
pop
je
sub
pop
and
push
test
mov
mov
cltd
sar
or
jb
add
adc
mov
dec
adc
and
jbe
inc
and
or
cmpsb
std
sbb
outsl
push
mov
mov
scas
or
sbb
or
mov
je
pop
daa
popa
test
ret
push
inc
cmp
adc
rorl
and
jnp
sub
test
icebp
xor
or
sahf
inc
adc
and
lock
cmp
cmpsb
fbld
rcr
or
sub
adc
pop
nop
push
mov
pop
ss
test
dec
mov
pop
lea
and
lock
data16
mov
into
scas
daa
inc
sbb
test
icebp
in
ficoms
daa
and
dec
jo
mov
hlt
push
push
push
andl
rorb
jae
je
inc
mov
adc
push
adc
in
adc
stc
sbb
mov
xor
testb
mov
jl
addr16
or
andb
outsl
cs
jne
push
mov
roll
pop
add
add
je
lea
add
out
cmpb
sbb
or
push
push
in
icebp
mov
lock
push
cmp
sbb
cmpb
mov
push
ja
mov
sub
push
mov
in
test
add
mov
call
stos
inc
enter
pop
jge
and
into
push
push
xor
mov
popa
jmp
push
fstpt
or
add
mov
lock
adc
ret
sub
xchg
mov
es
inc
mov
adc
push
jno
stos
lock
lahf
jo
xchg
jns
shrl
xchg
cmp
and
mov
push
hlt
das
fs
xor
and
pop
andb
jmp
sbb
add
xchg
xor
jl
cmc
push
test
ja
add
repnz
ret
pop
outsl
push
cmp
test
jbe
mov
cld
roll
dec
xor
sub
dec
jne
cmpsl
jp
mov
shll
xchg
cld
push
jmp
mov
daa
divb
sbb
pusha
or
or
das
push
js
je
jl
es
pop
in
repnz
mov
pop
xchg
rol
aas
out
repz
mov
leave
sti
add
test
out
adc
xchg
insb
pop
mov
mov
cmp
jg
rcrb
jne
xchg
loope
push
pop
loope,pt
cmp
cmp
sub
dec
dec
push
mov
sub
dec
es
out
sti
jmp
movsl
mov
pop
in
push
lods
inc
pop
sub
in
adc
adc
sbb
aad
fiaddl
movsl
sbb
push
lods
movsl
out
test
jbe
je
xchg
outsb
dec
jle
and
rclb
jns
push
mov
repnz
aad
cmpsb
bound
jne
pop
jle
in
mov
testb
push
loopne
inc
in
into
loopne
cmp
pusha
adc
pop
inc
inc
sti
mov
lds
loopne
push
sarb
insl
dec
loop
into
dec
xchg
xor
inc
test
push
andb
jne
fs
mov
mov
adc
and
nop
mov
in
or
mov
mov
aam
cmpsl
fadds
jo
test
push
dec
dec
testl
fsubrs
scas
aaa
dec
adc
insb
ljmp
dec
je
push
imul
stc
push
inc
push
pop
aaa
push
pop
loope
stos
cld
test
jns
je
adc
adc
mov
push
add
cmp
stc
adc
mov
add
mov
test
cld
xor
xchg
xor
dec
sbb
and
inc
jg
cwtl
in
lods
mov
add
inc
dec
cmp
addr16
jmp
fucomp
xor
sti
decl
or
push
movsl
jge
call
adc
push
push
jmp
push
lods
arpl
push
adc
jge
fcoms
pop
and
ljmp
push
fcompl
push
or
adc
push
call
outsb
inc
inc
cld
arpl
fsubl
push
rorb
out
xchg
lret
sub
dec
lcall
dec
pop
cli
adc
dec
ja
mov
cmp
jne
and
aam
adc
inc
and
jmp
loop
enter
lsl
inc
test
clc
rorl
sub
les
ss
jecxz
adc
mov
incl
jbe
add
int3
cmp
je
inc
mov
popf
jl
cmpsb
inc
sub
adc
xor
cmc
outsb
pop
daa
mov
ja
adc
je
xchg
jmp
mov
faddl
sub
gs
adc
test
jmp
cmp
inc
enter
into
enter
adc
rclb
out
fdivl
xchg
sbb
dec
mov
add
outsb
fs
lock
mov
in
jo
in
and
and
outsl
lods
inc
cli
movsl
into
aad
push
xchg
jl
sub
pop
dec
mov
outsl
sub
mov
cmp
push
lahf
dec
enter
and
pop
call
and
fdivl
cmp
aas
insl
cmp
int
shlb
adc
cmp
aam
in
cmp
adc
mov
adc
je
scas
out
adc
imull
xchg
adc
cli
push
push
mov
pushf
add
inc
stc
outsb
mov
scas
loop
push
adc
adc
clc
adc
add
rclb
cmp
xchg
mov
icebp
pusha
jo
and
xchg
data16
xor
loop
clc
push
addr16
sub
push
xor
clc
jno
pushf
mov
push
int3
sub
jnp
inc
repnz
or
faddl
cmpb
mov
inc
or
nop
cmp
fisubl
adc
jns
lods
movsl
les
sub
out
std
or
fstps
scas
lods
les
les
mov
scas
dec
mov
adc
testl
dec
mov
and
jae
add
xor
cmp
in
and
cmp
aam
inc
lcall
cmp
ja
mov
les
xor
out
outsb
sbb
pop
lds
sub
stc
rolb
cwtl
in
cmp
adc
hlt
mov
pop
notb
stos
jb
rorl
and
daa
cld
cmc
cmp
int
inc
adc
daa
popa
hlt
xor
push
jbe
push
xor
mov
test
les
jns
sub
dec
es
jecxz
jbe
adc
inc
sbb
adc
in
sti
xchg
mov
int
mov
cmp
call
fsubl
aam
jo
loop
fs
enter
jbe
in
dec
test
xchg
mov
adc
cmp
aaa
rolb
cmp
jb
cmpsl
fidivrs
sub
lds
fsubrs
and
loopne
popf
fmull
fdiv
dec
adc
mov
cmpsl
nop
pop
dec
mov
je
mov
data16
push
add
adc
jge
jmp
mov
sub
jno
or
mov
imul
outsb
icebp
sub
pushf
push
cli
mov
repnz
inc
jo
or
xchg
adc
inc
mov
cmpsl
nop
cltd
dec
mov
xor
push
iret
jno
pop
movsl
mov
mov
icebp
xor
push
and
cmp
dec
mov
inc
xchg
ret
gs
push
mov
lret
faddl
fistpll
icebp
push
out
jg
insb
mov
js,pn
jo
mov
push
xor
inc
and
xchg
dec
icebp
adc
dec
je
adc
add
jl
add
cli
adc
sbb
sbb
sbb
or
pop
ljmp
inc
fs
mov
das
mov
fs
popf
cld
add
xchg
test
jp
cmp
mull
xor
addb
xchg
inc
mov
dec
sti
mov
adc
sbb
xchg
lcall
je
and
enter
cs
pushf
jnp
fnsave
sbb
je
cwtl
pop
js
mov
or
mov
mov
and
fldenv
mov
fldl
add
data16
xor
ret
and
xor
and
in
pop
pop
push
and
inc
fld
adc
adc
in
sahf
or
adc
xchg
cmpsb
add
sub
pop
subb
pop
dec
dec
sub
aam
fdivl
cmp
push
or
sbb
xor
xlat
bound
sarb
test
cli
rclb
push
inc
add
clc
imul
nop
adc
inc
or
sbb
jno
dec
sarb
dec
imul
and
test
aaa
xchg
je
subb
cmp
inc
ljmp
sub
ljmp
imul
sahf
mov
shlb
bnd
fcoms
mov
add
nop
movsl
jne
xchg
idivl
insl
sbb
sub
xlat
test
aam
mov
push
dec
adc
mov
jmp
call
stos
insb
xor
xchg
add
or
add
les
mov
cltd
fs
inc
mov
pop
pop
je
out
aad
sbb
fs
or
xchg
leave
push
inc
xor
cmpsl
or
inc
je
cli
in
dec
jbe
mov
dec
adc
inc
por
jae
data16
mov
inc
ljmp
jmp
aas
loope
aas
sti
cs
aaa
not
jnp
cltd
inc
dec
jmp
jmp
push
in
mov
xor
or
cltd
lds
xor
or
repz
call
sbb
add
js
imul
sbb
sbb
or
fidivl
jnp
mov
call
add
adc
stc
mov
daa
enter
or
insb
pop
xor
and
scas
or
or
adc
mov
lret
in
sub
xchg
or
inc
jns
or
insl
inc
sbb
adc
mov
icebp
sub
or
pop
dec
ljmp
sti
mov
call
stos
push
adc
enter
sub
test
inc
mov
xor
sahf
pop
sub
scas
ret
inc
adc
sub
cli
daa
pop
dec
or
inc
mov
and
sbb
mov
pushf
das
and
dec
jp
js
and
adc
in
sub
les
pop
sub
test
sub
jnp
jnp
mov
dec
or
or
popf
cmc
shrb
cmp
jne
sbb
or
add
mov
sbb
sbb
xor
stos
sub
xor
scas
fisubs
jecxz
aas
cmp
lock
sub
push
dec
mov
mov
dec
adc
dec
clc
mov
push
cmp
mov
push
sbb
pop
or
push
sub
int3
push
sbb
fstps
mov
jecxz
shr
enter
pop
mov
fstpt
data16
mov
jecxz
add
or
cltd
int
int3
dec
mov
adc
in
xchg
test
scas
mov
mov
push
sti
sub
ret
mov
mov
sub
sbbl
mov
xor
leave
lea
aad
cmpsl
sarl
push
test
stos
scas
imul
stc
scas
test
fwait
sbb
ds
pusha
xor
inc
adc
cmpxchg
call
stos
inc
xchg
enter
pop
mov
adc
dec
fistl
or
pop
cmp
or
lods
dec
and
call
into
outsb
lock
pop
pop
in
inc
xchg
stc
push
stos
dec
add
push
call
and
test
sbb
sahf
sbb
call
add
fcomps
rolb
mov
test
and
mov
mov
leave
sti
push
fisttps
cmpsw
or
bound
xor
add
loopne
inc
mov
pop
mov
inc
and
out
ret
push
adc
sbb
mov
in
or
ja
stc
jge
sahf
and
jmp
lds
inc
loopne
test
inc
aam
jmp
mov
je
pop
hlt
fst
ret
pop
cmp
loop
dec
icebp
jecxz
out
sbb
jge
ss
push
xchg
lods
xchg
push
test
js
mov
data16
stc
popf
hlt
cwtl
roll
mov
cmp
jecxz
js
out
inc
xchg
add
dec
and
push
xchg
sbb
shll
in
cmp
scas
addr16
jecxz
in
cmp
mov
fcom
fstps
sub
mov
repz
gs
jge
adc
adc
mov
jp
inc
or
lret
xor
inc
xchg
cmp
sub
roll
mov
adc
je
or
outsl
push
and
pop
scas
add
ja
xchg
movsb
pop
scas
pshufw
mov
pop
jne
loopne
sbb
mov
and
loop
aam
in
inc
movsb
push
xchg
test
test
aam
dec
fists
mov
test
adc
mov
cmp
dec
loop
add
sbb
leave
or
or
cltd
dec
fsubl
mov
aad
xchg
mov
mov
xor
test
addb
add
mov
mov
cs
and
popa
adc
icebp
cmc
push
xor
bound
pop
cmp
adc
or
mov
adc
incb
sbb
les
mov
hlt
daa
enter
mov
inc
jo
dec
pushf
test
add
insl
pop
loopne
sub
cmpsb
pop
cs
and
jno
call
mov
orb
pop
inc
push
lock
ficoms
out
lret
test
mov
jmp
push
sbb
popf
imul
insb
hlt
adc
test
mov
mov
fmulp
adc
in
jb
or
or
mov
imul
push
push
adc
and
or
cmp
xor
push
pop
cmc
stos
jg
pop
sub
je
dec
mov
dec
cld
mov
cmp
push
and
les
jmp
jne
jnp
adc
sbb
and
cwtl
push
mov
push
adcl
cli
mov
lock
mov
rclb
mov
movsl
insl
fdivr
int
cmp
adc
xchg
nop
cltd
jne
mov
cs
jmp
adc
push
mov
inc
and
or
mov
xchg
lds
movl
jne
cwtl
sub
enter
fwait
movsl
add
arpl
jle
lahf
mov
in
das
push
jle
jne
mov
popf
sahf
cwtl
and
adc
or
das
and
popa
adc
dec
nop
iret
in
or
pushl
insb
xchg
inc
and
mov
or
inc
lcall
add
sub
shl
cld
repz
mov
mov
cs
push
cld
lea
add
aad
push
out
sbb
ja
or
or
call
inc
jg
pop
clc
mov
jmp
adc
testl
cmp
aaa
add
xor
shr
jg
out
adc
sub
inc
test
mov
jmp
cld
pop
repnz
cmp
add
inc
adc
add
mov
push
test
fisubrs
xor
mov
adc
pop
mov
cwtl
push
fdivrs
test
mov
jbe
jle
je
jne
ds
pop
pop
xchg
aam
in
cli
mov
stc
jge
stos
jo
incl
notb
insl
jbe
or
mov
jne
icebp
mov
push
popa
mov
test
push
pusha
cmp
scas
cmp
out
xchg
adc
out
lock
push
inc
shr
cld
fisttps
cmp
lock
fidivs
xchg
icebp
sahf
push
cltd
xchg
hlt
jmp
dec
mov
adc
sub
push
popf
and
jno
inc
xchg
mov
push
sub
jb
cmp
push
jb
outsl
sub
add
jae
ret
add
push
push
cltd
sub
iret
in
pushf
je
and
jl
or
sbb
cmp
jb
adc
lret
fidivs
jmp
xchg
test
test
test
stos
jp,pn
in
pop
inc
dec
mov
push
push
mov
or
fcom
pop
xchg
and
out
std
xor
pop
adc
dec
mov
stc
sbb
or
and
mov
push
cmp
or
out
lcall
lcall
lock
inc
movsb
inc
rorb
fwait
jge
mov
sub
and
adc
in
aaa
iret
cmp
imul
cmp
and
cmp
ja
ret
xchg
xor
out
push
lahf
jae
jb
xchg
icebp
inc
imul
xchg
aaa
jae
xor
push
and
or
ret
fisubrl
les
adc
js
je
cmp
add
inc
jmp
push
push
movsb
mov
or
or
lods
push
mov
jg
mov
and
popf
push
std
mov
or
pop
vpshld
stc
fstl
inc
xchg
xchg
outsl
sahf
fdivr
or
xor
scas
inc
insb
cld
call
or
xor
dec
push
in
cmp
jne
sbb
xchg
xor
repz
cwtl
divl
adc
daa
or
clc
inc
in
clc
pusha
or
jmp
jecxz
pop
mov
dec
dec
xchg
or
or
lret
lods
or
mov
xor
and
or
in
pop
adc
or
sbb
cmp
sub
xor
xlat
inc
and
fbstp
stc
jge
mov
movsl
leave
cmp
and
je
dec
out
cmp
fwait
jmp
sbb
test
inc
mov
cwtl
cmovno
nop
mov
leave
in
adc
xor
in
sbb
std
adc
sarl
push
lods
inc
inc
ljmp
in
inc
cmp
lret
testb
jne
pushl
and
mov
mov
xchg
ljmp
adc
out
out
lret
dec
push
dec
cwtl
sbb
jge
xchg
xchg
jecxz
icebp
mov
mov
notl
aas
dec
movups
pop
cmp
add
clc
jbe
or
inc
pop
adc
sti
stos
dec
jae
push
inc
ja
dec
mov
imul
adc
jbe
fiadds
mov
and
gs
popa
push
stc
pop
mov
push
add
pop
pop
sub
mov
scas
adc
push
cltd
dec
sbb
or
mov
pop
pop
ret
mov
lea
pop
or
out
xor
roll
push
movl
cld
push
add
pop
scas
arpl
mov
sub
adc
jb
and
fmull
xor
push
add
cwtl
call
cld
stos
and
jo
adc
mov
adc
cld
daa
xor
inc
cwtl
decl
xor
bnd
cmc
mov
push
popa
scas
sti
and
outsb
lds
mov
push
cli
cmp
repnz
je
dec
mov
sarb
xor
sbb
movsl
sub
fadds
fsubl
cmp
pusha
push
push
fmull
cmp
and
and
inc
in
sbb
sbb
jl
fiadds
inc
mov
jo
enter
cmpsb
dec
lock
lods
clc
mov
icebp
adc
jnp
sub
dec
fsts
mov
stos
int3
cmpsl
adc
lea
jb
stos
mov
mov
pop
push
or
mov
mov
call
or
fwait
call
sbb
jnp
mov
aaa
mov
sub
adc
shr
clc
jne
pop
dec
jbe
fnstsw
xchg
xchg
sub
mov
scas
jo
test
sti
clc
sbb
push
in
test
pop
mov
jmp
and
and
push
jmp
mov
jo
rorl
test
and
cmp
mov
cmp
call
sbb
jg
or
or
dec
jb
stos
sarb
push
adc
push
pop
movsl
xor
jge
inc
add
jle
sarl
cmp
out
add
inc
cmp
mov
into
pop
pop
or
or
nop
fcomi
xor
inc
mov
leave
fisubl
dec
mov
push
je
popf
pusha
inc
and
pop
jae
lcall
pop
jbe
mov
dec
and
inc
mov
fsubrp
push
sbb
lea
decl
sub
add
jbe
xchg
maxps
cmpsb
fwait
cmpsb
and
cmp
add
pop
pop
in
add
imul
lock
push
jne
into
dec
aam
ror
or
add
xchg
test
js
or
xchg
xor
aas
sbb
test
mov
es
out
sbb
push
jns
into
rcl
cld
mov
imul
mov
and
es
sbb
aas
flds
lret
cmp
in
inc
add
hlt
xchg
rcrl
jmp
lahf
sbb
xor
push
subl
in
ljmp
xor
and
xor
andl
push
je
cmp
pop
inc
or
insb
shlb
jne,pn
test
mov
or
add
sub
sub
cmp
mov
adc
pop
in
mov
das
sbb
adc
xchg
mov
es
add
pop
xor
mov
into
nop
xchg
call
and
pop
lock
and
rorl
jo
movsb
je
inc
push
fmuls
cmp
inc
jecxz
mov
mov
mov
into
rol
add
jne
inc
sbbl
pop
add
pop
rcll
and
xor
adc
je
mov
push
jbe
or
mov
fs
inc
xor
mov
sub
shll
push
loopne
ret
push
testl
add
sub
in
lahf
es
add
adc
cmpb
mov
xorb
pop
jnp
pop
sub
fs
mov
icebp
mov
enter
sbb
sti
das
imul
adc
pop
jae
mov
lret
in
idivl
ret
out
or
xlat
pop
pop
cmp
mov
aam
lret
push
shr
xchg
imul
mov
or
call
jle
mov
out
leave
mov
and
aas
cmc
sbb
sbb
and
push
insb
pop
mov
test
cmp
sbb
jae
test
add
cld
nop
mov
add
sub
push
sahf
sbb
cmpsb
or
or
lds
cmpsb
or
cwtl
inc
or
sbb
in
dec
movsb
dec
push
inc
add
dec
icebp
or
add
cwtl
inc
lcall
lea
pusha
pop
call
inc
lods
push
xchg
fcoml
add
mov
rcl
fs
andl
les
fwait
xchg
and
and
nop
test
and
cmpsb
insl
les
jno
cli
dec
pop
cmp
and
adc
lock
addb
xchg
and
add
dec
dec
lock
mov
and
dec
mov
fs
pop
and
nop
das
movsb
sub
fs
push
into
cwtl
jl
movaps
lds
sub
adc
scas
nop
mov
cli
xlat
ret
dec
cmc
mov
fildl
dec
popf
call
push
daa
call
jg
data16
xor
rcll
jbe
dec
xchg
cmp
clc
jae
xlat
cli
cmp
in
and
insb
sub
js
sbb
in
sub
adc
mov
jne
lea
push
call
nop
arpl
dec
sbb
cmp
adc
pop
ja
add
fwait
mov
and
js
fwait
dec
jnp
dec
cmp
dec
sub
pop
je
push
adc
sahf
out
loop
clc
iret
fsubr
xchg
jl
in
fwait
adc
inc
adc
mov
dec
add
adc
jae
inc
rorb
cmpsl
andb
push
mov
imul
xor
pop
or
push
jne
fisttpll
push
das
mov
mov
pop
sub
cs
daa
sbb
mov
fs
js
and
mov
hlt
push
add
lods
add
push
in
sub
daa
xor
pop
int3
xor
xchg
and
jl
or
mov
popa
les
or
je
nop
jne
and
and
and
xchg
js
pop
scas
roll
adc
inc
movb
xchg
push
hlt
mov
xchg
dec
lret
repnz
je
cmp
jmp
adc
mov
adc
icebp
cmpsb
jmp
or
pop
adc
xor
rorl
scas
jne
mov
mov
or
aad
stos
pop
fsubl
nop
adc
push
pop
ret
jno
sub
and
xchg
call
addb
cmc
daa
cld
test
pop
mov
push
mov
cmp
or
and
inc
mov
jle
mov
gs
sbbl
inc
insb
mov
or
dec
add
shr
inc
or
nop
cli
and
out
pop
fsubrp
call
sti
nop
lahf
lods
xor
movsl
loop
jne
mov
lcall
mov
adc
or
jae
fs
adc
rolb
aam
and
inc
or
mov
lret
xchg
sahf
mov
cwtl
add
mov
jp
mov
shlb
fimull
je
and
hlt
fxch
pop
mov
and
push
add
fucomp
and
cmp
mov
and
ss
xor
loopne
pop
push
mov
clc
mov
xor
jmp
mov
fnstcw
fisubs
sbb
or
aam
test
dec
test
or
ds
int3
push
xchg
hlt
pop
push
shrl
decb
mov
stos
cwtl
mov
mov
push
cld
add
add
call
cld
sub
xchg
push
fmuls
je
sbb
jne
mov
call
clc
jmp
cld
lock
es
or
mov
or
es
call
sbb
push
leave
stc
dec
cld
aad
jl
fcomi
stos
testl
push
dec
mov
inc
jb
leave
jp
or
sub
in
mov
jb
in
push
sub
data16
push
popa
in
pop
and
xor
inc
push
inc
push
ss
cmp
aaa
and
std
and
xor
adc
inc
aaa
in
xor
or
sbb
pop
sbb
hlt
cmpsb
mov
and
sub
shr
cmp
enter
fldcw
adc
jb
test
loop
ja
or
lock
jb
dec
mov
nop
and
xor
push
push
push
cmpl
call
faddp
leave
lea
inc
jmp
pop
jle
shl
aam
les
or
sti
pop
jb
pop
aas
je
lds
pop
inc
js
imul
add
adc
dec
out
clc
mov
dec
jns
push
adc
daa
jg
pushf
mov
push
push
fadds
or
call
xchg
ret
and
mov
adc
popa
mov
icebp
sub
pop
jo
mov
and
cmp
mov
push
or
jnp
mov
gs
cmpsl
inc
mov
mov
push
mov
sub
jmp
mov
idiv
sbb
fstpl
ror
daa
fs
mov
xlat
cli
mov
aas
aam
das
push
and
and
mov
das
cld
stos
mov
cmpsb
ja
inc
mov
cmp
jnp
lcall
fsubr
sub
imull
mov
add
ret
lret
jp
and
or
push
and
xchg
insb
adc
push
and
sub
call
push
xchg
jno
test
add
cmp
xor
push
add
sbb
add
inc
xor
jne
pop
lahf
jns
push
dec
hlt
jae
and
insb
and
pop
daa
push
mov
jle
inc
or
add
clc
mov
add
sbb
dec
or
dec
jmp
fistps
cli
sti
mov
push
sbb
cld
sub
adcb
icebp
xchg
push
movsl
push
into
pop
adc
ret
pop
inc
aas
mov
js
and
push
fwait
shrl
cmp
cmp
fs
insb
mov
jmp
adc
push
mov
call
sub
in
jle
inc
add
pop
jge
fcoms
add
in
test
sub
xor
jb
std
inc
mov
mov
or
movl
inc
rorb
sub
ss
leave
je
cmpsb
sbb
lods
cmpsb
adc
fisttpll
rcr
mov
inc
sbb
lret
push
xchg
movsb
das
shl
gs
fistpll
xchg
mov
mov
notb
pop
shrl
daa
inc
xor
pop
shr
call
cmc
adc
or
fldcw
adc
xor
and
jo
dec
add
das
adc
movhps
push
scas
or
cmp
inc
xlat
fstl
clc
emms
mov
stos
jns
jp
out
jo
add
leave
push
pop
clc
jo
push
cmpsb
mov
shlb
jne
jbe
loopne
mov
push
xlat
mov
jbe
aas
mov
inc
mov
movzbl
sub
push
mov
jne
add
add
push
in
jp
xchg
mov
outsl
xlat
sbb
ret
or
cltd
jb
mov
adc
je
mov
cmp
cmp
mov
push
mov
jnp
enter
mov
pop
adc
adc
add
loope,pt
rolb
fucomip
mov
mov
xchg
hlt
or
xchg
cmpsl
sbbb
cltd
pop
sbb
outsb
loope
pop
pop
sub
clc
stos
xor
idivb
pop
jmp
in
sbb
dec
or
ss
ret
xchg
ja
cmp
std
push
movsl
cld
sub
sub
or
sub
push
pop
dec
outsb
jae,pn
int
adc
and
inc
add
push
mov
lods
leave
push
loopne
jmp
lock
daa
inc
fscale
and
sub
jo
mov
or
mov
jnp
pop
push
std
cltd
mov
push
mov
cmp
xorb
push
jle
pop
movsb
stos
daa
push
out
push
jecxz
popf
pop
pop
loopne
and
adcb
sbb
cmpsl
je
bound
adc
pop
lock
xor
push
nop
sbb
lcall
enter
mov
jmp
clc
cld
xchg
lods
jecxz
cwtl
mov
push
or
mov
jecxz
mov
or
or
push
cmc
and
inc
idiv
or
inc
stc
add
in
enter
out
and
lock
add
or
mov
xchg
xor
faddl
fldl
fisubs
inc
loopne
sub
xchg
pop
test
push
xor
test
mov
call
roll
push
cld
jo
lock
lods
pop
push
adc
in
subl
sub
xor
inc
sub
push
and
push
lret
inc
pop
mov
mov
inc
mov
or
sub
and
dec
jmp
stc
call
test
pop
scas
lock
add
jne
ret
cmp
jp
lds
ss
enter
and
sbb
xchg
rorl
xor
enter
in
jmp
pop
imul
ss
mov
xor
or
call
std
xor
sub
je
add
rol
leave
mov
lea
fs
adc
mov
ja
rclb
pop
adc
mov
scas
add
push
sti
incl
ds
enter
adc
xchg
in
popf
les
pop
fdivl
cmpsl
aam
xor
pop
pop
sahf
pusha
xchg
cmpsl
into
push
call
xchg
fstps
test
ffree
call
imul
cmp
call
jge
faddp
add
pop
pop
jmp
inc
mov
stc
mov
mov
push
rcll
cld
iret
sbb
cwtl
adc
push
push
pop
pop
and
and
or
setge
or
lods
add
adc
ret
mov
pushf
mov
leave
ss
nop
mov
push
or
adc
fsub
scas
pop
mov
rcrl
and
frstor
out
adc
test
dec
pusha
adc
arpl
mov
cmp
jmp
shrb
xor
faddp
and
mov
imul
add
push
inc
cmp
cmp
adc
mov
add
push
push
dec
out
sbb
cmp
sub
adc
mov
icebp
and
mov
push
dec
dec
push
inc
inc
cmp
and
popa
insl
gs
fs
in
xor
lret
push
adc
jae
sub
adcl
popa
bound
je
popf
jb
repz
outsl
jbe
jae
cmc
dec
push
out
pop
cld
jmp
sub
push
mov
fimuls
jns
fcmovnu
je
xchg
dec
lods
movsl
subl
lahf
js
xchg
outsl
and
or
iret
incb
or
sbb
xchg
repz
cmp
push
or
cmc
in
fnsave
sub
or
stos
hlt
push
jl
adc
dec
dec
or
imull
mov
and
or
pop
dec
adc
jg
jl
mov
jo
cmp
movsb
ret
call
ss
adc
out
lods
cld
pop
pop
pop
fwait
shr
mov
ret
jg
test
icebp
cmp
jne
sbb
adc
out
enter
dec
add
mov
mov
xor
jae
jae
cltd
mov
xor
arpl
fld
xor
mov
movsb
sub
sub
rorb
in
fcmovne
push
push
jg
or
jne
popf
in
inc
shlb
mov
inc
mov
imul
inc
popf
mov
jg
sbb
out
lahf
inc
jne
sbb
jbe
rcll
adc
in
add
decb
add
shll
adc
jne
sub
xor
sahf
roll
call
push
push
mov
rcr
cld
call
cwtl
xchg
shrl
or
or
xchg
jge
jb
repnz
xchg
cmp
orl
jnp
cmpsb
js
fwait
je
push
jmp
pop
aas
push
clc
sbb
jl
pusha
popf
xchg
std
mov
jmp
jo
or
cld
mov
adc
xchg
arpl
dec
dec
cmp
xor
data16
cmpsb
and
movsl
gs
jl
push
mov
adc
ljmp
dec
lret
daa
pop
fwait
pop
pop
push
clc
push
call
fisubrs
jl
xchg
add
add
lock
outsb
mov
or
pop
out
iret
inc
shrb
push
leave
rolb
sbb
subb
fstl
sub
andl
cwtl
mov
sub
xchg
idiv
push
or
pop
pop
sbb
or
mov
pop
sub
push
fucomip
pop
sarb
mov
enter
popl
and
mov
or
mov
push
cltd
xor
mov
into
divb
lds
xchg
out
adc
inc
jl
mov
in
add
add
or
sub
push
mov
fs
jbe
imul
lods
andb
or
adc
mov
inc
shlb
rclb
mov
enter
adc
jns
jb
shlb
pop
add
and
in
test
dec
add
push
inc
and
mov
out
lret
xor
stos
or
inc
jbe
cmp
add
pusha
dec
movzwl
sub
and
xchg
aam
cmp
adc
xchg
rclb
dec
cli
push
lds
mov
repnz
js
adc
mov
ret
jno
les
cmc
or
adc
inc
add
inc
mov
cld
ret
adc
inc
mov
sbb
mov
out
push
sub
bound
pop
lock
xchg
sbb
sbb
jns
sub
scas
jnp
mov
xchg
inc
mov
xor
jno
push
mov
inc
addr16
inc
sbb
jge
and
xchg
add
push
out
and
pop
xlat
inc
dec
imul
pop
ret
mov
les
pop
fildl
cmp
push
jb
pop
xorl
sti
lret
cli
adc
jbe
sub
inc
pop
je
push
push
add
and
push
daa
cmp
jp
or
lock
push
add
adc
mov
sbb
mov
and
addl
popf
nop
fldcw
fs
pop
popa
inc
pop
pusha
gs
or
pop
and
pusha
push
call
push
mov
cmp
movsb
add
and
sub
sbb
xor
add
push
or
call
mov
inc
dec
mov
jg
mov
push
push
and
adc
add
movsl
xor
clc
push
imul
xchg
ljmp
adc
push
rcl
dec
and
push
xor
push
sub
pop
xchg
adc
cmp
call
and
call
adc
cmp
and
je
lods
pusha
jle
mov
xchg
dec
cld
sub
stos
mov
divb
test
cmc
pop
ljmp
dec
push
and
fs
push
xchg
sti
fistps
call
jns
js
sbb
sbb
call
out
and
cltd
push
popf
xor
xchg
adc
pop
jne
aas
lea
cmp
divl
inc
popf
mov
jo
fs
push
sti
dec
out
mov
lcall
shll
clc
mov
push
push
and
xchg
bound
fisttpll
and
sbb
jl
adc
fs
dec
inc
test
push
sub
adc
push
mov
sub
mov
cmpsb
out
inc
sbb
xchg
cmc
mov
inc
pop
fiadds
fsubrs
stos
sub
sbb
and
outsl
fbld
jl
adc
dec
sbb
dec
cs
mov
xchg
mov
xor
pusha
adc
leave
add
bound
icebp
aas
pop
xchg
push
andl
movsl
ljmp
call
push
bound
add
es
inc
enter
insb
push
push
pop
mov
xchg
add
pop
adc
dec
mov
pop
cmp
jae
adc
and
add
sbbb
fildll
bound
cmp
push
adc
adc
test
hlt
push
pop
lods
cmpsl
enter
adc
into
stos
movsl
and
or
cmp
outsb
inc
loop
mov
jo
pop
mov
aad
pusha
hlt
mov
movsl
cmp
enter
jg
fimuls
outsb
cmpsl
mov
push
jecxz
and
std
push
adc
lods
bound
or
cmpsw
cwtl
or
sub
daa
mov
inc
popf
insb
mov
inc
inc
lock
and
pushf
dec
test
aad
dec
lahf
push
daa
outsl
dec
fsub
aam
fnstenv
and
jmp
hlt
movsb
adc
je
lock
sub
mov
jg
add
xchg
push
pushf
fdivrl
fsubrs
push
lcall
lret
pop
cltd
cmc
push
imul
xlat
dec
sbbb
xchg
mov
xchg
cmpsl
inc
dec
push
add
dec
aam
sub
in
aam
mov
add
in
repz
sub
fldl
lock
stos
lcall
or
mov
rcl
leave
mov
push
dec
pop
push
mov
push
lea
cmp
adc
into
or
std
xlat
loopne
repz
jbe
call
inc
daa
pop
std
adc
cld
push
add
hlt
pop
je
cmp
jne
fcmovnu
cwtl
inc
int3
or
push
and
or
ficoml
enter
ja
fs
pop
out
xor
int
icebp
push
adc
push
sbb
lods
call
cmp
xor
sub
lahf
dec
sub
test
shrb
inc
jge
in
call
jge
push
dec
xor
stos
lods
out
inc
daa
clc
daa
adc
clc
xor
mov
jmp
or
rorb
int3
aas
mov
jmp
sbb
cmp
mov
inc
or
adc
cli
sub
pop
mov
sub
repz
pop
xchg
dec
call
sub
adc
shl
in
mov
in
sub
test
cmp
mov
sbb
call
insb
xchg
jle
mov
shrl
call
inc
cmp
xchg
pop
push
incb
nop
mul
xchg
rcll
and
push
popf
stos
adc
or
loopne
hlt
add
jmp
pop
inc
mov
dec
lock
sub
scas
jl
push
adc
add
stos
dec
shlb
das
jns
mov
mov
and
lods
into
jbe
mov
enter
ret
sbb
aas
push
sar
push
adc
and
inc
push
jne
fcompl
loopne
pop
and
into
adc
ret
imull
jae
mov
xorl
and
push
sti
cmc
mov
pusha
mov
fildll
dec
mov
rolb
inc
pop
data16
lock
ja
pop
ret
les
mov
addl
inc
inc
roll
bnd
testb
ljmp
push
inc
xorl
jmp
add
aam
or
nop
inc
jne
movsb
int
or
loop
jge
fisttps
mov
add
mov
cmp
xchg
cmp
add
inc
push
add
mov
xchg
mov
sbb
insl
mov
push
dec
or
cwtl
fmuls
mov
sbb
and
push
insl
push
jl
outsl
rclb
cmpsl
sbb
cltd
ret
xchg
push
pop
and
mov
lock
bound
repz
jg
test
dec
aas
les
pop
push
cltd
in
xchg
inc
scas
pop
mov
pop
call
scas
inc
sarb
stos
fs
push
decl
out
lret
push
push
sbb
gs
pop
adc
or
popf
inc
or
sub
dec
push
je
loop
pop
lods
fisubrl
mov
sbb
inc
add
pop
daa
cmp
and
push
mov
popa
inc
or
mov
adc
jno
daa
inc
mov
mov
jae
dec
shlb
and
or
jb
jo
xchg
loope
shlb
and
jae
fdivs
loope
je
scas
in
xchg
jno
aad
les
leave
xor
inc
add
loop
dec
int3
mov
inc
xchg
enter
adc
jno
fiaddl
cli
add
ret
add
scas
je
xchg
dec
movsb
or
aas
push
pop
cwtl
or
cmp
dec
sub
and
or
xor
iret
jnp
pushf
mov
fmull
inc
push
repz
xchg
adc
les
sub
lea
inc
mov
roll
mov
inc
xchg
loop
xor
test
mov
adc
loope
mov
in
adc
inc
in
fdivrs
cmp
and
add
cld
jmp
dec
or
push
jo
mov
add
cmp
dec
mov
cmp
and
mov
outsl
push
inc
sub
movsb
xorb
mov
inc
test
shrb
les
adc
push
mov
dec
xchg
shll
mov
pop
movsl
scas
in
push
add
inc
gs
outsl
cmp
popl
jae
sub
inc
shrl
imul
inc
jg
cmp
cmpsb
sub
push
jb
hlt
inc
jno
in
mov
xor
insb
roll
lock
jne
jo
dec
repnz
push
jg
cmp
ds
popf
insl
repz
xchg
adc
scas
mov
adc
jmp
or
adc
mov
mov
mov
fstpl
jne
mov
sbb
jmp
sub
push
mov
insb
test
mov
daa
aaa
push
pop
and
sbb
sbb
pop
mov
stos
sub
pop
mov
call
or
and
inc
xlat
xor
mov
dec
je
enter
or
add
inc
jmp
and
adc
sbb
push
push
jo
or
dec
pushf
xor
push
and
adc
jp
and
pop
aam
aam
pushf
les
outsl
insb
push
popa
je
loope
dec
jmp
inc
mov
cmp
dec
ret
stc
dec
push
pop
pusha
movsb
mov
andl
hlt
mov
pop
xchg
mov
push
mov
and
pop
ret
xchg
ljmp
push
push
inc
pop
inc
mov
adc
cmp
add
mov
notl
pushf
mov
push
inc
sub
or
adc
push
push
sbb
jo
sbb
mov
adc
xor
xchg
movsl
shr
cld
adcl
test
mov
mov
add
testb
adc
test
lods
test
call
xchg
dec
outsl
std
sbb
adc
pop
sbb
lods
jle
bnd
cwtl
inc
enter
push
outsb
bound
sbb
dec
fildll
pop
push
push
inc
push
faddl
dec
dec
in
cmp
adc
adc
rol
adc
lret
out
xchg
pop
dec
xor
enter
fmull
test
mov
push
adc
nop
add
mov
and
stos
jp
adc
xor
mov
sub
adc
mov
push
aam
sbb
inc
cmpb
push
add
xor
inc
sbb
sahf
lds
popf
arpl
dec
lock
sahf
test
loop
push
or
sti
sbb
pop
dec
xor
xor
sub
ljmp
fucomp
add
push
add
test
and
jg
ljmp
in
lea
in
and
xorb
stos
insb
outsl
push
popf
pop
icebp
imul
pusha
pop
cmpl
sub
mov
xor
sub
mov
mov
inc
jbe
adc
cltd
or
push
sarl
dec
das
sarl
dec
pop
adc
enter
js
xchg
lea
inc
clc
inc
mov
add
lret
xor
push
dec
jns
pop
loopne
mov
pop
int
inc
fmul
or
xchg
or
cmp
cs
cmc
push
fistpl
adc
adc
pusha
stos
xor
push
xchg
xor
or
adc
push
data16
dec
cmp
hlt
fwait
jne
pop
mov
cmp
inc
dec
nop
imul
mov
imul
cmp
sub
push
les
mov
cmp
fs
stos
sbb
nop
clc
pop
addb
or
lods
test
pop
add
mov
call
ror
pop
cmp
outsb
ja
sub
hlt
jbe
orl
fmull
xor
repnz
lods
or
dec
loopne
int3
cmp
insl
add
jae
movsb
in
xlat
cli
inc
movsl
jge
mov
je
bound
dec
or
daa
and
cmp
cmp
in
inc
and
leavew
push
fwait
sub
or
adc
inc
sub
aas
rcrb
cwtl
adc
add
xchg
fidivl
jne
insl
fs
push
xchg
cmp
sbb
lea
ljmp
dec
test
push
aam
push
jmp
jmp
ja
push
and
or
pop
mov
adc
cmp
dec
add
shrb
bound
stc
or
inc
js
mov
xchg
dec
jg
pop
adc
add
aaa
mov
add
lods
jl
add
adc
test
mov
stos
lods
sub
cmp
ret
outsb
scas
mov
pop
iret
loopne
add
adc
in
xlat
jecxz
and
mov
inc
dec
sub
test
cld
add
mov
pop
daa
jmp
jge
test
repz
sub
xlat
inc
in
pop
jbe
jle
aad
mov
add
mov
in
fldl
fidivrs
pop
jle
call
hlt
cld
inc
adc
out
cmpsb
ret
and
or
mov
lock
fstpt
xor
or
add
lock
push
or
lcall
sti
xor
add
mov
jb
jle
pop
in
je
ror
pop
or
dec
fsubs
jbe
cmpsl
imul
into
mov
adc
pop
push
mov
mov
cmp
jb
xchg
pop
sbb
and
mov
in
sbb
xor
jne
push
clc
call
fistpll
dec
jns
or
ljmp
in
call
stos
iret
pop
cld
add
stos
xchg
es
mov
inc
mov
push
add
clc
mov
orl
test
sbb
dec
out
xor
mov
or
fcoml
enter
stos
push
mov
jmp
test
aaa
fbld
push
clc
aad
sti
ja
gs
cltd
stc
jns
push
mov
aam
mov
push
push
lret
mov
inc
push
and
test
in
jnp
rolb
xchg
push
lcall
push
inc
call
mov
dec
xchg
add
sbb
push
sbb
xlat
sub
mov
and
insb
mov
imul
inc
push
xchg
jmp
jne
adc
xchg
popf
jle
jecxz
and
cmpsl
repz
loopne
stos
ja
aas
and
in
and
sub
repz
fsubrl
aam
mov
adc
std
inc
jp
or
popf
inc
je
les
inc
add
or
lock
dec
or
imul
or
push
mov
je
cmpsl
pop
das
jbe
or
cmp
jb
pop
cltd
push
mov
subl
frstor
jmp
jno
lock
or
xchg
xor
xor
inc
out
hlt
mov
sub
cmpsb
push
subb
push
dec
push
jl
dec
rolb
pop
push
bound
fbstp
adc
sbb
or
push
sub
jo
inc
add
insb
adc
mov
test
inc
cld
movsl
cmc
out
pop
mov
adc
in
mov
pop
mov
daa
push
mov
mov
repz
call
andl
mov
mov
loop
push
or
jmp
mov
nop
inc
enter
sub
mov
lahf
mov
adc
xlat
aaa
mov
sub
mov
push
jne
test
sti
xchg
mov
stos
pop
fwait
les
lods
mov
cs
pushf
sub
addr16
push
decl
and
jbe
out
movsl
and
inc
mov
push
fsts
xor
mov
bound
and
aaa
pusha
stos
push
mov
je
adc
sub
jo
and
jo
in
sbb
fs
fsubs
ja
jl
mov
xchg
xor
gs
mov
daa
push
xlat
loopne
pop
inc
xchg
push
rolb
xchg
inc
lods
dec
mov
add
movsl
in
pop
out
adc
repz
ds
xor
cltd
mov
clc
cmp
cmp
push
rorl
das
mov
sbb
shl
cld
fisubrs
push
cwtl
or
sbb
ret
xor
enter
fs
xor
sub
sbb
hlt
xor
cld
aaa
lea
mov
aam
mov
imul
pop
lods
dec
test
push
and
add
push
xchg
orl
sbb
in
or
je
or
stc
push
data16
cmp
jge
pop
int
jmp
lock
jns
adc
mov
enter
or
syscall
pop
std
push
roll
push
add
cmp
xor
push
add
scas
push
call
les
mov
pop
jle
lcall
push
push
dec
pop
adc
inc
add
or
sub
jmp
frstor
mov
hlt
icebp
test
movsl
push
or
mov
popa
add
or
and
pop
xchg
sbb
adc
sbb
xchg
test
xchg
call
sbb
rorb
insl
inc
sahf
call
xor
xchg
mov
dec
clc
scas
cmp
jmp
dec
xchg
xor
mov
hlt
xchg
mov
or
mov
mov
testl
pushf
cmp
mov
xor
mov
push
daa
nop
or
enter
sbb
pusha
mov
sbb
pop
jnp
mov
mov
jg
mov
push
jns
test
adc
inc
stc
inc
push
mov
jge
insb
int3
jb
stos
pop
lea
jb
sbb
enter
dec
push
pop
inc
jns
xchg
and
ret
dec
or
jecxz
test
adc
cld
xlat
clc
and
adc
jno
inc
or
add
movsl
push
hlt
sub
jae
xor
pop
mov
in
push
mov
and
push
mov
mov
imul
sbb
push
adc
push
call
loopne
pop
pop
je
adc
lock
sbb
icebp
or
cmp
pop
frstor
mov
std
jb
dec
mov
jmp
mov
movsl
inc
push
ljmp
lcall
imul
sbb
and
fimuls
add
xor
mov
stc
xor
mov
cli
push
sbb
sbb
and
notl
pop
loope
sbb
xor
jb
loop
mov
jae
push
rcrb
add
lcall
sub
outsl
push
movsl
in
mov
je
push
or
add
mov
dec
fistps
popl
inc
fdivr
or
or
push
leave
sbb
and
adc
fcoml
roll
add
cli
push
lahf
arpl
sbb
and
xor
push
lock
pop
cmpb
mov
sub
add
mov
call
xor
dec
jno
and
icebp
dec
das
mov
jo
ret
pop
cmp
call
jb
in
mov
add
push
jne
adc
mov
testb
dec
and
rclb
mov
sub
mov
subl
subl
xor
mov
pop
in
add
shl
mov
pop
or
call
sbb
das
outsb
push
jmp
xchg
push
mov
add
fmuls
xorb
cmp
repnz
mov
lds
push
int3
fs
adc
movsl
clc
jb
and
adc
test
out
ds
lds
jne
les
pop
dec
ret
xor
push
push
outsl
mov
sahf
xor
ret
call
and
cmp
mov
and
stos
pop
push
sbb
xor
cmp
push
sub
xorl
cmc
add
mov
inc
sqrtps
or
adc
xchg
and
fstpt
lahf
lret
jns
dec
ret
add
jmp
mov
mov
roll
pop
clc
fbstp
inc
sub
jge
pusha
mov
push
xor
ja
ret
insb
dec
dec
fs
jl
push
cltd
jbe
jae
mov
pop
mov
push
insb
xchg
and
outsl
mov
adc
push
mov
jo
es
sbb
cs
add
repnz
ss
ds
and
out
cld
sub
lods
out
cli
sbb
test
xchg
adc
test
push
clc
add
and
cmp
xor
pop
lea
scas
jnp
add
inc
add
mov
dec
sbb
mov
icebp
xchg
je
jb
push
jmp
nop
jg
popf
pop
jns
push
jmp
mov
lods
outsl
stc
xor
mov
fnstcw
push
in
mov
adc
mov
mov
cwtl
push
loope
xchg
cmpsb
call
loopne
dec
enter
sbb
test
mov
int3
add
inc
cmpsb
or
push
dec
fdiv
les
call
ljmp
inc
or
mov
and
push
xor
push
push
subb
jmp
dec
xor
and
inc
dec
cli
bound
adc
pop
testl
jno
movsb
cmp
or
jge
hlt
das
jae
jns
and
jle
cli
pop
xchg
jne
orl
dec
adc
and
sahf
adc
out
enter
jae
data16
dec
hlt
test
jmp
jp
jp
popa
repnz
cs
add
mov
mov
in
cwtl
inc
cwtl
sub
cmp
jne
or
pop
paddusw
lods
adc
mulb
xor
stos
add
out
xchg
add
mov
lret
mov
sbb
jne
enter
jmp
call
jmp
sbb
mov
cs
loope
inc
rolb
rolb
jne
jmp
scas
dec
in
cmp
push
lret
addl
adc
cli
push
and
pop
sbb
or
cld
and
sbb
repnz
test
and
testl
xor
push
xchg
or
jmp
and
jnp
mov
scas
xchg
cmp
push
pop
shll
adc
inc
sub
cmp
sub
inc
mov
pop
mov
mov
jo
mov
sbb
sbb
jno
xor
sbb
js
mov
mov
pop
jmp
jecxz
pop
adc
test
mov
cmp
lcall
insb
repz
mov
ja
mov
repnz
adcl
ret
test
aam
inc
hlt
push
mov
dec
xchg
sub
daa
adc
out
lds
lods
xrelease
enter
cmp
mov
mov
push
xchg
scas
test
andl
addps
push
mov
out
inc
mov
mov
outsl
sarl
add
fwait
dec
shlb
testl
testl
adc
icebp
mov
in
xchg
xchg
es
dec
or
bswap
into
dec
ss
pop
push
js
mov
mov
ljmp
push
dec
sbb
adc
mov
mov
adc
xchg
mov
adc
cmpsb
scas
sbb
je
movsb
repnz
cltd
pop
lock
xchg
es
cmpb
in
loop
jge
mov
fdivl
push
and
pop
or
sbb
or
jge
popa
xchg
sbb
rcrb
das
dec
test
lea
aad
scas
movsl
jno
and
inc
pop
jbe
negl
movsb
add
sti
or
sbbl
inc
push
xchg
fwait
ljmp
inc
call
lahf
jbe
data16
sub
push
push
mov
jo
jmp
scas
bound
push
push
or
adc
imul
or
popf
shrb
sar
test
mov
call
cmp
sub
or
push
jg
negb
cmp
add
ja
cli
mov
inc
jge
psubsb
lea
negb
add
jne
and
sbb
jge
test
mov
cmp
jno
mov
call
sub
xchg
or
movsb
dec
nop
ss
movsl
jo
call
adc
add
xchg
aad
fisttps
push
mov
pop
cmp
mov
repnz
stc
imul
icebp
gs
idivl
inc
sub
pop
icebp
mov
mov
jb
and
lahf
push
or
in
or
add
adc
xor
sbb
or
ret
repnz
movsl
out
cmpsl
inc
xchg
outsl
pushf
or
sub
clc
push
push
jb
std
mov
add
xchg
adc
int
repnz
dec
es
mov
mov
inc
mov
pop
daa
clc
add
fldenv
movsl
out
scas
inc
in
std
sub
daa
xor
repnz
test
movsb
arpl
lds
imul
fsts
push
xchg
mov
in
arpl
mov
out
mov
lcall
inc
es
sub
push
cmc
sub
add
leave
jle
cmpsb
loopne
fsubrs
jbe
out
inc
mov
xor
adc
je
sbb
or
bswap
andb
or
push
call
dec
or
xchg
jg
dec
sahf
cmp
push
cmpsl
xchg
jb
movsb
push
and
scas
push
adc
mov
inc
mov
aam
outsl
aaa
fs
sbb
cmp
mov
clc
xor
cmp
cs
sbb
jne
xchg
inc
jmp
adc
mov
mov
jl
cmp
and
sub
xor
adc
sar
scas
and
jmp
push
adc
inc
sub
fcoml
mov
inc
int3
pop
and
je
push
sub
das
pop
inc
and
or
or
mov
adc
inc
push
add
cmp
aad
test
push
mov
scas
and
ljmp
add
ljmp
adc
add
and
sub
mov
stos
sarb
cmp
jl
lods
pusha
cs
add
movsl
lods
sbb
clc
sbb
ret
aaa
or
lahf
push
adc
mov
jnp
xchg
jle
outsb
mov
adc
pop
mov
push
jae
lods
je
and
xchg
ja
xor
push
shl
add
les
xor
lahf
adc
fbld
cmp
mov
push
je
popf
push
mov
movsb
mov
testl
mov
in
dec
xchg
je
jp
xor
int3
div
and
push
mov
cmp
mov
jg
loopne
add
cmc
dec
xor
lret
iret
push
mov
decl
cld
scas
insl
test
dec
nop
jne
data16
sbb
jne
arpl
pop
mov
jmp
xchg
lds
pop
imul
dec
daa
or
out
lds
push
clc
subl
movsl
jbe
lock
or
add
pop
jge
cld
mov
xor
mov
fucom
insb
pop
jle
lods
inc
sub
in
dec
gs
lea
jmp
mov
popa
add
dec
adc
rcl
sbb
aam
pop
insl
imul
inc
aad
mov
jmp
call
pusha
cmp
scas
ss
xchg
xor
sbb
or
dec
jnp
cld
and
adc
fs
add
xchg
lods
or
push
push
xchg
popa
andl
repnz
out
or
cmp
push
or
push
pop
and
call
jns
mov
and
outsl
mov
xor
mov
aas
mov
hlt
push
movsl
xchg
jecxz
or
call
scas
cmp
jbe
enter
ficompl
fistl
inc
push
add
jno
subl
mov
and
test
stos
inc
adc
push
shlb
dec
cmc
jg
lods
lret
jns
pop
add
add
add
test
and
sub
pop
ss
mov
jl
insl
pop
cli
cmpsb
lock
inc
mov
enter
xchg
pop
mov
dec
decb
cmp
test
shlb
jmp
addb
cld
dec
mov
inc
fcoms
nop
add
pop
enter
ds
ds
xor
pop
les
mov
push
cwtl
or
movsb
scas
test
push
add
rclb
cmp
pop
mov
inc
cmp
pop
push
repz
cmp
sub
mov
addr16
fs
cmp
insb
loop
push
lea
mov
pop
repnz
pop
adc
shlb
sahf
fs
jg
mov
jmp
xlat
or
and
mov
pop
arpl
sbb
into
sbb
or
lds
lahf
mov
outsl
cmp
in
aas
test
jmp
sbb
inc
add
push
mov
lret
xor
mov
and
fisttps
test
test
jecxz
cmp
pusha
test
push
push
push
mov
adc
push
inc
or
xchg
and
xor
cmp
dec
mov
inc
popf
inc
movsb
push
dec
xor
fidivs
movsl
shlb
prefetchnta
mov
pop
mov
int3
cwtl
push
testb
jmp
cmp
popf
push
sub
test
js
push
imul
ret
sub
pop
mov
cmp
xchg
loope
sub
or
add
mov
or
rclb
mov
inc
adc
mov
fstpl
enter
pop
pop
ret
jne
or
popf
xor
orb
std
ljmp
mov
dec
jns
dec
xor
scas
mov
push
or
mov
sub
push
and
clc
ja
xorb
jge
xor
ret
adcb
mov
sbb
and
xchg
mov
call
fmull
je
clc
fdivrs
jl
jg
add
jge
lods
jnp
inc
stc
adc
xor
xor
dec
add
adc
jecxz
jmp
mov
rol
mov
out
push
fisttps
cs
xor
push
xchg
push
mov
dec
mov
xor
push
push
mov
add
push
cmp
fs
mov
mov
cmp
les
out
mov
mov
inc
mov
add
or
int3
lcall
dec
aas
es
xor
mov
ss
xor
sbb
pop
pop
push
adc
pop
orb
jmp
adc
pusha
jb
xor
lods
or
mov
mov
xor
insl
loop
test
sub
xor
or
inc
addb
sub
popa
jnp
orb
nop
add
push
mov
lea
sub
dec
pop
jb
mov
je
mov
je
pop
test
and
lds
mov
lret
and
adc
mov
jmp
aaa
inc
add
push
add
xchg
jno
loop
and
in
and
dec
imul
jo
mov
in
pop
xor
outsl
shrb
cmp
push
dec
push
popa
sub
inc
mov
cli
push
jecxz
call
test
lret
pop
adc
adc
inc
push
inc
jg
sbbl
pop
popa
sbb
xor
hlt
mov
and
mov
je
addb
dec
or
call
test
lahf
fdivrp
test
add
test
adc
inc
xchg
and
dec
ss
sbb
fs
fildll
push
add
mov
jle
test
mov
jbe
insb
pop
loope
push
jae
and
cmp
push
sub
ds
inc
sti
or
fwait
push
mov
sbb
loopne
push
add
leave
add
jmp
out
push
dec
sub
push
or
test
push
and
ficoms
sub
adc
sub
inc
test
loop
mov
jge
cltd
pop
fildl
enter
movsl
xchg
push
or
or
adc
fsubrl
sub
adc
pusha
push
xchg
mov
fst
data16
and
push
adc
mov
js
pop
in
bound
mov
xor
call
lret
jle
mov
push
push
rolb
push
sub
fnstenv
arpl
je
call
lret
inc
push
mov
push
xchg
dec
cmp
or
xor
cwtl
and
daa
addb
out
mov
je
arpl
lret
pop
mov
or
jg
mov
mov
out
push
sub
ljmp
push
xchg
ret
cmpsb
mov
sub
mov
fmuls
lock
sahf
or
cmp
ffree
push
sar
test
adc
and
jae
adc
add
mov
repnz
jmp
cmp
xor
xchg
data16
mov
jl
push
adc
inc
sub
in
mov
outsb
lret
mov
in
push
push
sbb
adc
push
in
adc
mov
rorb
dec
and
mov
jo
and
out
sub
sub
fsts
push
cltd
pop
mov
inc
or
xor
lock
test
fsin
loope
push
push
js
out
icebp
shll
sub
inc
jb
or
mov
lea
mov
cmp
lea
or
xchg
ds
fcmovb
dec
cmp
and
xor
push
insb
or
mov
hlt
movl
insb
xchg
scas
arpl
sub
imul
fs
xchg
lods
mov
or
sbb
bswap
or
lahf
call
mov
out
in
dec
out
inc
adc
xchg
mov
push
mov
js
lock
pushf
sub
xchg
cmpsb
jge
adc
xchg
out
lcall
sub
stc
inc
imul
adc
cmp
loope
jne
call
and
and
sbb
cmp
pop
popf
in
sti
mov
movsb
and
sbb
andb
daa
stc
mov
add
adc
push
mov
cs
xlat
cmp
push
or
dec
mov
or
mov
mov
mov
jecxz
dec
cmp
add
out
pop
mov
pop
xchg
or
inc
pop
cmpsb
mov
jmp
imul
fadd
add
jae
inc
mov
push
cmp
add
push
in
jo
clc
lods
jb
jmp
inc
or
mov
aas
xor
sbb
adc
jb
std
xor
jns
or
xadd
cmp
test
push
jne
jb
and
ret
sub
sub
scas
callw
pop
or
jbe
xchg
addr16
cmp
loopne
loopne
mov
stos
push
dec
and
push
mov
sbb
test
insb
cmp
push
and
and
mov
mov
or
imul
sbb
insb
push
es
mov
sub
push
fldenv
lods
jp
sbb
and
adc
aam
add
push
aad
xchg
mov
pop
repnz
sahf
stos
mov
adc
outsl
and
js
xchg
or
adc
and
inc
lahf
dec
aam
call
cld
adc
loop
leave
xor
orl
push
and
push
test
push
mov
adc
add
sbb
inc
jmp
pop
push
imul
pop
push
push
push
xor
adc
and
inc
cmp
js
mov
out
inc
aam
cmp
inc
js
loopne
pop
mov
ja
lcall
xor
fdivr
jmp
mov
pusha
sub
sub
push
add
rorb
in
scas
and
adc
movzwl
pop
push
sub
inc
push
enter
test
mov
adc
push
push
inc
dec
dec
xchg
pop
lret
xchg
mov
js,pn
movb
mov
roll
sbb
cmpsl
sub
dec
push
test
jg
movsb
enter
cltd
pushw
jb
mov
iret
push
xor
push
push
inc
push
add
clc
fldcw
mov
pop
jne
repnz
movsb
xchg
or
xchg
adc
mov
mov
dec
addb
sub
jl
lcall
mov
loope
fiaddl
inc
cmp
aam
adc
std
fimull
sub
dec
mov
jb
jmp
adc
mov
adc
inc
mov
sub
sbb
push
inc
and
fcoml
dec
adc
fstl
popf
push
mov
outsb
idivl
inc
dec
mov
xchg
aam
hlt
adc
pop
test
shlb
mov
cmc
adc
idivl
adc
cs
dec
sub
pop
mov
mov
and
call
or
cmp
je
clc
xorb
mov
mov
jmp
xor
dec
sbb
xchg
sbb
stc
icebp
or
daa
push
and
mov
xchg
and
adc
dec
add
lea
xchg
jb
shl
inc
inc
cmp
pop
inc
sbb
test
or
jae
cmp
scas
insb
pop
inc
jge
jl
popa
add
xchg
dec
adc
xor
and
sti
not
pop
xlat
xchg
popf
adc
push
pop
sti
stos
adc
and
andb
outsb
repz
push
adc
fimuls
loope
sbbb
shll
std
fidivl
ret
jge
jmp
jl
das
leave
adc
mov
mov
or
and
sbb
mov
arpl
jge
push
fs
add
xor
mov
or
adc
fsubr
push
push
or
xchg
mov
sub
sbb
fbld
adc
aad
insb
adc
fsubp
nop
mov
inc
inc
add
sbb
and
je
int3
sub
pop
mov
pop
sub
adc
jp
jns
aas
push
xor
dec
pop
cmpsb
cmp
mov
rcrl
scas
cmp
sub
out
pop
stos
sub
cmpsb
nop
lret
fsubl
adc
ss
push
pop
jnp
out
add
dec
outsl
and
mov
outsb
lar
cld
ja
add
and
int3
or
leave
jae
loopne
xor
jmp
or
fnsave
xor
xor
jmp
and
loopne
cmp
dec
add
mov
dec
dec
xor
bound
mov
xor
inc
add
mov
data16
enter
or
jp
or
dec
ja
jo
lcall
push
lahf
push
imul
add
push
xorl
rep
push
mov
sbb
loopne
sbbb
and
std
enter
das
dec
aas
popf
je
mov
sti
and
sbb
test
push
jg
dec
jns
mov
lcall
push
add
jp
push
push
adc
pop
sub
lahf
push
imul
cli
pop
fsubl
lock
jg
adc
add
movsl
repnz
xchg
xlat
and
sbb
sbb
push
ret
fmulp
sarb
cwtl
negl
je
dec
jbe
daa
je
pop
lods
rcl
sbb
mov
scas
es
or
cmc
xor
sub
popf
xchg
stos
ficomps
sti
inc
imulb
push
rolb
test
pop
cs
rclb
adc
pop
das
stc
push
jae
pop
push
out
pusha
divb
add
mov
adc
jo
push
fmuls
or
enter
cmc
xchg
dec
xlat
movsl
xchg
aam
or
mov
clc
stc
adc
lahf
adc
loope
mov
mov
mov
les
push
shrb
aaa
sub
test
lret
xor
dec
inc
clc
mov
adc
or
repnz
popf
fisttpll
je
aam
lock
sbb
sub
jne
pop
js
movaps
xor
adc
call
mov
push
lea
push
and
pushf
dec
fs
add
mov
cltd
add
popf
adc
mov
aas
push
stos
adc
mov
popf
inc
inc
mov
sarl
or
inc
mov
test
orl
jg
mov
jle
call
jne
frstor
pop
stos
insb
inc
jmp
pop
sub
pop
int
std
push
pop
and
mov
je
int
in
addr16
out
sub
or
in
pop
push
add
mov
cmp
sbb
cmp
cmp
mov
dec
mov
daa
loopne
push
pop
jmp
and
adc
int3
lea
jne
and
pop
arpl
gs
adc
push
jne
test
lea
mov
add
mov
mov
fldcw
and
add
cmpsb
cmp
pop
cmpsl
mov
inc
dec
ljmp
scas
pop
add
adc
cmp
dec
call
add
cmp
inc
stos
lcall
out
dec
push
push
mov
test
rorl
shrb
dec
or
ja
movb
shl
add
cltd
andl
cwtl
push
pushf
mov
int
cmp
bound
fs
orb
push
mov
vmwrite
adc
pop
jne
outsl
inc
jo
and
add
pushf
imul
push
call
push
sub
cmpb
push
movsb
and
movsl
pop
adc
xchg
pop
cmc
ljmp
into
add
or
sbb
or
xor
addl
aam
mov
jge
xor
mov
dec
sub
adc
add
in
sbb
mov
xchg
adc
mov
cmpsb
test
push
lods
movsb
and
xchg
aaa
data16
push
or
imul
push
jg
inc
mov
sub
mov
sub
in
push
leave
jb
popf
inc
lret
lods
lds
or
push
push
push
sub
gs
sbb
outsb
ret
pushf
sbb
jle
sub
fs
cltd
test
sbb
rcll
call
jmp
lock
jne
and
movsb
and
out
or
cmp
je
pop
mov
push
pop
daa
add
push
xchg
enter
adcb
mov
adc
stos
or
test
lods
cltd
mov
rorl
adc
incl
pop
push
repnz
and
pop
adc
call
addb
cmp
or
adc
stc
inc
call
dec
mull
mov
and
pop
je
test
addr16
fdivr
xchg
mov
in
dec
int3
inc
mov
fs
cltd
dec
xlat
mov
dec
in
sub
mov
cltd
mov
nop
add
cmp
test
push
nop
inc
bound
cwtl
mov
insl
cmp
or
mov
icebp
xchg
xor
pushf
adc
or
js
ret
mov
ret
mov
dec
adc
jmp
cmp
cmpsl
adc
and
cltd
mov
adc
pop
sbb
icebp
add
cmpsb
xchg
xchg
adc
jg
dec
dec
sub
js
inc
cmp
clc
pop
mov
loope
cmp
lock
add
test
jmp
adc
out
call
pushf
mov
in
psadbw
imul
mov
sub
and
scas
sub
xchg
sti
je
lea
scas
push
xchg
pop
test
sahf
popa
sbb
dec
test
and
mov
inc
emms
cltd
div
or
aam
pop
pop
in
xchg
and
inc
cmp
jle
sbb
fwait
nop
sub
mov
int
cld
or
and
add
mov
dec
adc
jne
adc
inc
addr16
dec
aam
in
jae
clc
add
sub
inc
bound
jo
mov
rorb
rolb
and
nop
pop
enter
cltd
mov
xchg
push
ret
push
and
add
rolb
cmp
fldl
rclb
mov
adc
jb
xchg
mulb
sub
imul
pop
jl
mov
pop
xchg
ljmp
jmp
in
pop
xchg
push
shr
pop
imul
pusha
mov
xor
ljmp
dec
xor
push
jns
jecxz
out
fsub
cmp
cmpb
inc
inc
dec
jno
inc
and
mov
or
jb
and
xchg
push
loopne
movsb
mov
push
xchg
jle
insl
ficoms
pushf
mov
xchg
pushf
and
push
cwtl
pushf
mov
pop
out
dec
es
nop
add
fildl
jae
out
dec
adc
mov
cmp
push
jne
or
add
arpl
push
repnz
and
inc
lock
rcr
push
test
mov
inc
jmp
daa
and
popf
cltd
or
and
jp
out
cmp
adc
or
lea
sub
call
xchg
aam
or
push
test
jbe
imul
xchg
fcom
sub
push
adc
aaa
and
xchg
pop
add
daa
cwtl
aaa
stc
test
mov
fadd
mov
in
stos
shlb
xor
dec
cmp
je
cmp
sub
int3
loopne
adc
mov
cmp
cmp
jmp
sbb
jmp
in
ss
movntq
out
aas
adc
pop
jne
outsl
lock
sti
xor
mov
into
cmp
or
inc
lret
movsl
repz
pop
cmpb
js
inc
mov
xor
pop
aas
test
add
mov
adc
cmp
les
add
sbbb
das
dec
or
and
sbb
clc
adc
imul
in
xor
stos
pop
adc
test
mov
mov
out
lds
out
fadds
in
aas
cmp
popl
or
repz
pop
lea
ret
je
jno
rcr
fs
mov
sahf
jo
pop
and
ss
mov
xor
pop
inc
or
cmpsl
movsb
lcall
pop
xchg
cwtl
ret
sub
adc
test
movsb
loop
and
dec
mov
dec
and
add
dec
sbb
es
scas
popf
xchg
das
mov
xchg
push
outsl
mov
xchg
mov
inc
xor
push
adc
outsb
pop
pop
xchg
notl
mov
add
repnz
mov
pop
mov
pop
cmpb
sub
push
and
mov
push
adc
mov
mov
pop
jp
enter
stos
adc
or
inc
adc
inc
and
aaa
sbb
or
test
mov
push
push
mov
test
nop
enter
or
test
cwtl
enter
or
ss
add
jmp
loop
adc
sbb
xor
notl
cmp
push
and
fdivrs
add
jbe
inc
cmp
jb
les
jne
jmp
ret
mov
sbb
pop
xlat
insb
or
add
or
mov
call
flds
adc
or
add
shll
dec
mov
dec
add
sub
or
or
push
std
add
fidivrl
sbb
inc
call
sub
cmp
jg
jl
fldenv
mov
out
jne
push
inc
mov
sub
jmp
ja
inc
push
xor
add
jle
stos
or
inc
cli
and
lret
sub
mov
ja
sub
adc
and
push
mov
idivb
adc
std
es
push
inc
sbb
mov
inc
mov
adc
orl
add
sbb
cmp
iret
outsl
and
xor
push
scas
clc
mov
scas
ret
je
inc
popf
mov
adc
xor
xchg
or
aaa
pop
pop
push
mov
dec
test
adc
inc
mov
lret
push
js
movsb
mov
add
mov
rolb
and
inc
int3
in
mov
fsubrs
pusha
push
sbb
push
mov
ucomiss
sub
data16
adc
lahf
aam
cvttps2pi
jnp
mov
mov
adc
call
xor
mov
movsl
rcrb
push
jno
mov
inc
cmp
sbb
pusha
adc
dec
jbe
std
cwtl
jnp
imul
pusha
stc
test
aam
jp
mov
cmpsl
mov
xchg
and
push
and
nop
sbb
enter
or
push
xor
xchg
in
pop
popa
test
add
scas
xor
sub
xor
xor
and
jae
stc
jae
mov
dec
repnz
shrl
adc
push
xchg
mov
scas
adc
repz
adc
stc
jo
inc
lea
push
and
jb
ss
sub
mov
or
xor
andb
or
fisubrs
pop
outsl
push
cli
movsl
mov
xchg
or
dec
mov
sub
xor
and
stos
adc
test
mov
adc
lea
add
in
bound
add
xchg
sbb
sbb
test
push
sbb
repnz
inc
xchg
inc
mov
int3
inc
sti
add
call
sti
sbb
push
or
jno
ret
movaps
jmp
sub
mov
mov
jnp
mov
mov
sar
inc
out
iret
aam
test
dec
pushf
or
add
outsb
test
push
fs
dec
dec
pop
adc
push
movsb
adc
movl
pop
mov
cmp
dec
adc
pop
mov
jne
mov
daa
pop
nop
adc
les
sbb
nop
push
dec
test
push
adc
bound
je
inc
divb
adc
or
mov
bound
jb
or
cmp
and
cli
sbb
sub
pusha
mov
adc
insl
insb
xchg
jl
stc
movsl
adc
fldt
xchg
ja
mov
push
inc
pop
mov
js
icebp
mov
mov
out
imul
or
call
cmp
jo
sub
jl
jno
or
adc
dec
movsb
loop
dec
pop
dec
mov
lret
inc
dec
pop
movsb
fldt
and
pushf
and
mov
sbb
pop
push
rolb
andb
cs
inc
je
push
cmp
mov
jbe
dec
in
leave
adc
or
fcoml
push
jmp
call
mov
jae
jne
popf
cld
mov
jns
cli
and
mov
popf
xlat
and
mov
mov
jmp
add
jle
fwait
add
push
adc
push
repnz
jbe
in
pusha
push
adc
sbb
inc
daa
push
dec
test
jnp
ljmp
push
popf
scas
loope
imul
scas
je
adc
bound
mov
addr16
movsl
cmp
sbb
js
sub
insl
js
cmp
jnp
aas
inc
sti
movsb
cmp
sub
cwtl
dec
xlat
sbb
push
and
and
or
push
add
cld
test
psrlw
fstpl
and
mov
sbb
js
inc
inc
stc
int3
push
in
aam
andb
fcomip
xor
pop
test
fcoml
out
adc
push
cltd
js
imul
dec
push
imul
jbe
nop
jb
sbb
call
pop
shl
and
or
xchg
sbb
insb
adc
pusha
adc
jae
adc
sbb
and
xchg
sbb
cmc
in
stc
addb
mulps
pusha
add
add
gs
or
add
std
pusha
movsb
push
push
cmp
pop
mov
add
jne
xor
push
je
adc
and
dec
cld
mov
sub
imul
data16
movsl
jne
addl
and
nop
popa
inc
pop
mov
outsl
and
imull
xchg
rep
sbb
lahf
push
mov
aad
push
or
sti
nop
outsl
inc
js
loope
mov
inc
inc
imul
aam
lahf
sbb
jne
addr16
pop
imul
inc
cwtl
je
gs
sbb
popa
or
lock
inc
fsubl
push
xchg
popf
shll
movsl
mov
xchg
les
add
mov
clc
adc
in
les
lcall
dec
inc
push
dec
imul
stc
push
xor
or
outsl
das
sbbb
mov
mov
xchg
loopne
inc
xor
mov
push
and
dec
adcb
clc
mov
xor
pop
dec
jle
cwtl
and
xor
cmp
xchg
push
and
xchg
mov
ficoms
and
inc
cmp
adc
xchg
shlb
fiadds
inc
xor
mov
inc
and
dec
insb
xchg
xchg
mov
loop
ljmp
xor
jle
mov
dec
ficoml
sbb
dec
dec
push
inc
rcl
in
adc
and
fs
or
pop
loop
push
outsb
mov
andb
cwtl
xchg
mov
ret
adc
and
inc
push
cmp
xor
pusha
jbe
mov
cmpsb
and
dec
aam
out
sbb
cmp
and
sub
adc
pop
dec
push
inc
mov
and
dec
into
xchg
repnz
cmp
ss
inc
push
mov
js
cwtl
dec
mov
int3
and
inc
cld
push
inc
cmp
mov
and
dec
jb
nop
and
cld
adc
add
pop
dec
test
fdivr
mov
xchg
jl
pushf
inc
mov
sbb
add
and
dec
push
mov
test
ret
hlt
adc
add
and
dec
dec
xchg
pop
and
sbbb
dec
ljmp
and
ds
mov
mov
dec
mov
enter
ljmp
adc
insb
dec
xchg
push
inc
inc
sub
mov
jo
mov
xchg
mov
int3
inc
in
add
adc
push
and
pushf
mov
in
xchg
sbb
inc
imul
pop
mov
mov
dec
ret
and
inc
in
or
and
xor
inc
and
dec
bound
cmp
adc
les
fiaddl
mov
inc
adcl
dec
cmp
push
mov
rclb
or
inc
sbb
mov
push
and
dec
jo
xchg
mov
call
dec
add
dec
xor
les
je
mov
dec
mov
and
inc
repnz
sbb
pop
dec
push
inc
sahf
mov
and
inc
push
dec
or
and
cs
inc
pop
mov
jp
mov
xchg
mov
les
mov
adc
add
and
pop
loop
push
push
and
dec
mov
inc
out
or
dec
sub
jo
mov
fimull
push
dec
add
dec
and
cmp
push
inc
jo
mov
dec
mov
inc
in
decb
adc
pop
dec
jbe
mov
pushf
inc
stos
mov
and
dec
cli
mov
dec
adc
cs
cmp
mov
jb
test
xchg
mov
in
mov
push
adcl
push
test
pushaw
adc
inc
adcb
dec
testb
inc
and
jo
mov
ljmp
cmp
mov
je
inc
js
popa
outsb
fs
int3
jbe
cmp
outsl
daa
insl
pop
push
push
das
incl
jae
push
lds
jo
in
xor
push
outsl
ficoms
cmp
lcall
jo
jmp
push
call
add
insl
loope
cmp
mov
mov
dec
sti
sahf
push
xor
aaa
inc
add
inc
push
dec
inc
inc
adc
mov
inc
inc
or
filds
push
js
out
dec
and
jg
jge
ss
push
fsubrl
cmpsb
sbb
sti
pop
xor
outsl
jns
sbb
xchg
xchg
jg
gs
jb
into
lcall
lds
push
outsl
js
xchg
mov
xchg
out
fs
inc
xchg
cld
push
cmp
inc
cmpsb
idivb
inc
jne
daa
outsb
xchg
xlat
pop
cmpsl
mov
repnz
push
iret
sbb
mov
sbb
in
cmp
and
cld
cmp
and
and
imul
push
mov
push
jb
inc
mov
sub
push
jo
xlat
jae
ds
push
add
lret
into
inc
xchg
and
and
cmp
idiv
cld
or
dec
fnstcw
dec
mov
imul
hlt
jecxz
pop
cmp
test
sbb
adc
gs
mov
insl
xchg
outsl
jae
sub
movsb
test
lret
dec
aad
mov
arpl
repz
cli
xor
add
sub
push
cld
out
insl
add
sbb
pop
xchg
push
insb
adc
outsb
inc
jbe
inc
xchg
sub
pusha
lea
push
popa
outsb
popa
test
sti
incl
insl
pop
sbb
popa
imul
lods
ror
mov
mov
push
pop
mov
iret
sbb
insb
dec
or
adc
xor
inc
iret
mulb
jo
ret
xchg
jecxz
aam
xchg
ljmp
xchg
jae
mov
xchg
push
inc
aad
xor
xor
dec
mov
cmp
loopne
adcb
xor
pushf
test
cltd
push
cmp
stos
push
push
pop
adc
call
jne
lret
or
push
stos
test
cs
sub
adc
fs
add
or
inc
jae
dec
in
dec
push
repnz
fsubrl
adc
sbb
jle
jb
push
sbb
adc
daa
in
cmp
mov
insl
in
xchg
inc
mov
dec
mov
lods
push
adc
inc
jns
dec
aaa
xor
xchg
jbe
push
jg
mov
xlat
pop
xor
xchg
shlb
adc
cmpsb
adc
xorl
or
lret
xchg
cltd
imul
insl
mov
mov
xor
aaa
xor
push
pop
stos
ja
and
and
ficomps
or
adc
das
testl
and
pop
jg
arpl
fldcw
and
aas
cltd
cwtl
mov
cmpsb
push
pop
test
imul
cmpsb
sbb
lea
cltd
fisttpl
gs
add
fwait
jo
push
je
mov
push
sub
mov
adc
popa
test
ljmp
imul
mov
push
jmp
dec
jne
pop
inc
xchg
loope
jb
shlb
cmp
repnz
push
sbbb
mov
stos
gs
shrl
jl
adc
icebp
pop
das
pop
mov
and
xor
push
and
jb
inc
adcb
xor
jbe
nop
xor
outsb
leave
ja
xor
sub
jae
mov
jns
jne
push
push
movsb
fs
or
mov
adc
adc
daa
aaa
push
dec
pushf
bnd
dec
bound
xor
push
movsl
dec
mov
push
push
ljmp
mov
stos
sbb
into
mov
add
adc
add
mov
sbb
jo
into
call
cwtl
and
mov
and
sbbb
or
imul
lret
ret
outsb
jbe
test
fs
pop
movsl
rcrb
sbb
les
bound
ds
pushf
loopne
sahf
xchg
xchg
arpl
add
cmpsb
mov
fwait
or
ss
cs
add
xchg
mov
test
sbb
fs
mov
xchg
jbe
popf
hlt
outsb
aaa
mov
pop
mov
add
cmp
leave
push
lds
adc
jp
pushf
mov
adc
lret
imul
mulb
sbb
movsl
xor
js
mov
mov
sbb
scas
xor
lret
or
dec
mov
mov
push
cmp
int
je
nop
repnz
pop
rclb
sbb
push
mov
dec
insb
push
xchg
fs
cmpsb
hlt
push
pop
ja
jle
test
push
mov
jle
cmc
int3
sub
mov
push
dec
popf
or
ficoml
loop
xchg
dec
out
sub
mov
xor
into
or
adcb
pop
push
dec
bound
adc
adc
xor
in
pop
and
dec
pop
addr16
jns
jb
call
into
fbstp
mov
lods
jbe
popf
adc
dec
ljmp
lret
loop
xchg
aam
cltd
sub
dec
jae
and
aam
sbb
inc
mov
jns
les
inc
xchg
inc
fldenv
dec
xchg
stos
dec
push
or
sbb
insl
xor
xchg
loop
icebp
into
push
fldpi
cmp
movsl
insl
sbb
aaa
adc
sbb
sbb
icebp
or
dec
push
mov
out
cmpsb
xor
leave
jp,pn
pusha
mov
inc
sarl
enter
adcb
jae
lahf
es
scas
pop
mov
scas
shlb
dec
ja
adcb
sbb
pop
sub
push
loopne
xchg
inc
dec
and
push
inc
and
sbb
jmp
xchg
dec
aad
test
mov
test
inc
mov
pop
push
dec
cmp
inc
iret
lret
jae
sub
inc
or
xchg
dec
push
jle
mov
jo
jge
push
sbb
pop
adc
push
hlt
hlt
fnstenv
pop
cmp
sbbl
data16
jl
push
movsb
xor
sbb
push
data16
sbb
xor
xchg
test
in
sbb
ss
sbb
xchg
into
scas
lahf
jnp
or
push
mov
cmp
scas
test
pop
mov
pusha
xor
imul
push
jo
out
push
jns
imul
sbb
loopne
lods
sbb
mov
jno
push
imul
mov
and
and
sbb
mov
dec
fwait
jp
jb
in
jb
sbb
push
cmpsl
fs
push
mov
xchg
aad
and
adc
mov
sahf
jnp
jno
imul
inc
and
dec
lret
sbb
arpl
jae
sbb
jnp
imull
dec
inc
test
test
loop
xchg
jne
sub
shrl
aad
repnz
fldcw
dec
push
mov
xchg
ret
inc
push
jns
outsb
loopne
subb
jge
sub
out
pushf
adc
ss
pop
push
cmp
enter
push
push
xlat
ficoms
push
leave
sub
sub
daa
cmp
in
mov
sbb
ss
dec
int3
fcomi
push
adc
stc
rcll
pushf
adc
pop
mov
or
inc
in
rolb
jbe
add
xchg
push
jne
loop
mov
pushf
int
xchg
hlt
fisubl
jns
fildl
sbb
xor
nop
xor
mov
popf
push
mov
inc
push
dec
mov
shrb
sub
push
pop
pop
push
adc
adc
pushf
mov
or
pop
mov
inc
cs
xchg
jo
jnp
in
inc
fcoml
push
xchg
ljmp
and
sub
pop
sub
lahf
out
mov
adc
mov
dec
cmpsb
xor
imul
insb
cltd
push
adc
je
or
push
dec
rcr
dec
jbe
cmp
sbbb
mov
jae
movsb
dec
popa
and
push
popa
jbe
or
scas
jb
test
movsb
mov
push
inc
push
jae
sub
adc
sahf
insb
mov
adc
dec
leave
bound
ror
adc
xor
push
dec
adc
pushf
add
push
imul
sub
sub
mov
push
les
pop
push
adc
add
adc
adc
xchg
pop
scas
or
sbb
dec
or
mov
inc
pop
fmuls
dec
loopne
je
repnz
nop
jnp
xchg
stc
push
mov
inc
imul
mov
data16
js
in
mov
dec
add
push
sbb
ds
dec
sbb
jo
shll
nop
pop
dec
imul
xor
and
movsl
outsb
sub
adc
pushf
out
adc
call
jae
ret
dec
lret
push
inc
rcr
loope
add
gs
or
sub
lock
add
pop
pop
cmp
xor
xchg
gs
out
stos
mov
dec
out
lret
and
lods
or
and
mov
iret
mov
push
out
mov
add
popaw
and
lcall
loope
add
dec
loop
test
mov
xchg
mov
push
das
in
es
jbe
popa
aad
mov
es
test
cmpsb
adc
je
jmp
dec
push
leave
and
es
sub
je
dec
repz
vmwrite
sbb
ja
leave
mov
movsb
push
sbb
mov
cmpsb
sbb
add
out
mov
inc
inc
push
icebp
or
sbb
and
loopne
imul
jo
icebp
and
fisubrs
testb
scas
xchg
fdivrs
icebp
hlt
not
fldl
insb
cmp
xchg
mov
cmc
xchg
push
imul
rcr
into
jl
adc
push
dec
out
fbld
xchg
test
imul
movsl
pop
dec
dec
insb
dec
fsubr
sbb
xor
gs
or
pop
mov
mov
aas
push
popa
cmp
and
fcompl
jb
xchg
fsubl
dec
inc
sub
or
jae
les
pushf
dec
sub
mov
add
mov
jmp
adc
out
mov
mov
mov
subb
lods
cmp
ss
inc
jo
lahf
xor
xor
lret
jp
loop
bnd
adc
and
cmpsb
push
pop
pop
jb
mov
push
mov
dec
push
test
in
dec
leave
dec
scas
out
lret
adc
dec
xchg
push
pop
jg
push
jl
cmpsb
clc
shrl
mov
adc
pusha
add
dec
push
pop
clc
mov
sub
or
out
mov
cmp
sbb
sbb
int
arpl
add
fldt
dec
in
sbb
insl
adc
cwtl
push
xor
imulb
cmpsb
mov
lret
shl
pop
dec
sbb
cmp
add
gs
enter
add
add
sbb
scas
loopne
xchg
sbb
inc
jge
jp
cwtl
dec
lock
hlt
stc
jle
inc
add
or
in
cmp
pushf
adc
ljmp
and
ds
movsl
mov
pop
rorl
lcall
sub
pop
pushf
cmp
dec
rcl
push
es
cli
add
mov
pop
jmp
leave
add
dec
int
mov
sti
sub
bound
xchg
jae
inc
push
test
and
pop
fbstp
std
sub
xchg
adc
imul
sbb
pop
push
insl
xor
sbb
sbb
jne
ljmp
cmp
scas
cmp
fs
mov
movsl
jae
jecxz
ret
cmpsb
adc
xchg
aaa
leave
inc
cmp
add
xlat
mov
cld
jp
mov
imul
xchg
test
cmp
adc
in
rcrl
mov
call
inc
push
jae
flds
jb
in
notb
lret
inc
pop
fs
xchg
lret
sbb
push
testb
lods
push
insl
adc
jo
push
imul
cmp
add
jmp
mov
xchg
xor
inc
cmp
xor
pop
cs
push
out
sahf
aam
and
pop
xchg
lret
push
xor
jne
inc
and
sub
test
jne
cld
add
rcl
inc
mov
cmc
dec
dec
or
fdivs
gs
add
jne
popf
ficoml
loop
fldenv
inc
xor
scas
mov
adc
test
adc
sbb
mov
inc
dec
adc
push
adc
cmpsl
xchg
sub
sub
pushf
cmp
dec
adc
xlat
test
dec
jmp
mov
dec
cmp
sbb
cmp
inc
cmp
pop
xchg
pop
nop
add
cwtl
dec
clc
adc
inc
push
inc
xchg
hlt
mov
dec
pop
cmp
xchg
adc
inc
imul
ja
pop
into
rclb
push
and
sub
and
xchg
sbb
ficoml
dec
ret
insb
mov
loopne
xchg
or
scas
stos
hlt
sbb
inc
fmull
insb
cltd
sub
ss
dec
push
cmp
js
aad
lock
jle
adc
and
or
and
or
add
mov
sub
add
cmp
add
pop
inc
dec
sbb
mov
jb
inc
or
add
imul
bound
jmp
test
divl
mov
push
mov
inc
or
inc
aam
enter
enter
push
mov
fs
or
xchg
push
adc
mov
mov
shlb
scas
negb
movsb
xor
push
inc
mov
jno
add
test
add
in
jb
cmp
and
lret
mov
push
lock
or
mov
pop
pushf
add
add
jo
mov
add
push
loop
mov
sbb
add
pop
movsb
std
pop
add
les
and
gs
push
shr
mov
pop
test
add
or
and
dec
sbb
and
add
addb
and
sub
sbb
loopne
add
lcall
test
add
js
in
and
pop
dec
nop
hlt
mov
pop
divb
lret
imul
fiadds
enter
inc
enter
inc
repnz
enter
mov
pop
cmp
inc
push
push
add
dec
cmp
and
push
cs
daa
lods
push
test
enter
and
nop
sub
and
sub
jo
addl
jle
inc
pop
dec
mov
add
cmp
inc
pop
and
jo
inc
pop
lret
jne
dec
sub
add
push
dec
cmp
and
inc
push
mov
sbb
lret
pop
xchg
push
sub
cmp
jo
inc
dec
enter
dec
sub
adc
add
add
inc
inc
enter
inc
js
and
je
mov
lods
push
xchg
and
mov
cmp
and
test
dec
js
inc
ds
or
push
pop
sub
mov
in
adc
adc
or
inc
inc
lret
jne
dec
sub
sub
jbe
je
divb
adc
dec
les
jb
cmp
sbb
mov
sbb
mov
and
enter
jb
cmp
xor
loopne
mov
pushf
cmp
and
add
sbb
inc
or
adc
add
or
mov
cmp
fs
and
sbb
and
in
test
add
dec
push
in
mov
adc
fdivrl
push
add
and
pushf
aas
adc
enter
jb
mov
mov
and
shll
test
xor
adc
mov
cwtl
aad
mov
mov
pop
sbb
mov
sub
sub
js
jb
adc
int3
lret
andb
test
movsl
mov
lret
adc
adc
dec
movsb
loop
xchg
hlt
mov
mov
or
shl
adc
or
sub
push
jb
cmp
sbb
mov
and
xchg
adc
enter
jb
into
and
rcrb
push
adc
cwtl
xchg
sbb
and
sbb
xor
and
and
and
mov
and
shlb
fs
daa
test
sub
and
sub
inc
add
add
sub
cwtl
nop
das
mov
dec
sub
or
push
dec
inc
push
push
add
inc
pop
dec
imul
data16
inc
adc
pop
aas
addr16
loope
out
scas
arpl
and
out
mov
test
push
lock
inc
in
mov
adc
xchg
nop
jg
js
push
xchg
cmp
sub
sbb
cld
addl
dec
mov
adc
test
fistl
scas
pop
in
jne
subb
fwait
add
dec
or
xchg
jns,pt
add
insl
daa
xor
dec
test
pop
mov
repnz
xchg
push
sbb
hlt
dec
mov
sbbb
xchg
push
jno
dec
out
shlb
cmpsl
xor
xchg
shl
repnz
add
xchg
shl
cmp
inc
push
add
xrelease
bound
jge
push
mov
mov
adc
xchg
pop
add
inc
dec
jns
pop
add
lcall
pop
ss
ficoms
or
pop
inc
mov
mov
pop
push
xchg
rcr
int3
sbb
add
sub
add
mov
sub
outsl
movsl
add
cmp
int
dec
add
dec
int3
jle
xchg
stc
pop
add
in
push
flds
push
fs
inc
outsl
ss
adc
add
xor
mov
cmpsl
add
push
clc
mov
inc
add
lahf
lret
outsl
add
add
add
cwtl
ror
lea
mov
push
pusha
insb
xchg
sbb
add
loop
push
lds
dec
roll
cmp
xchg
add
nop
xor
adc
es
bound
and
and
mov
ds
inc
lcall
sbb
jg
xchg
adc
adc
mov
sbb
lcall
dec
inc
adc
jp
fldenv
push
ss
daa
xor
mov
inc
fucomip
pop
mov
mov
adc
imul
push
mov
pop
mulb
lods
insb
adc
dec
lods
insb
xor
dec
lods
insb
and
inc
lods
test
lods
testb
fisubs
sbb
push
adcb
and
jmp
mov
pop
inc
lret
push
mov
xorb
jno
xor
add
cmc
insb
inc
movsb
add
ds
divl
dec
popf
cmp
mov
jae
mov
pop
pop
and
jae
adc
test
addb
cld
push
addr16
xor
or
mov
pushl
mov
subb
mov
mov
mov
lods
adc
mov
cmp
push
lahf
jmp
pop
mov
adc
adc
xchg
lods
mov
adc
xor
mov
lods
fcompl
in
pop
inc
mov
mov
and
and
pushf
insl
push
and
cld
jg
pop
clc
aas
or
lock
int
push
sbb
movsl
and
mov
sub
fmull
aaa
inc
or
loope
or
jg
bound
or
pop
cmp
loopne
insb
into
sub
aas
test
cltd
pusha
xorb
inc
nop
cmp
cmpsb
lcall
dec
or
mov
and
mov
jl
adc
inc
push
enter
jb
cmp
adc
sbb
jge
stos
push
cmp
jl
shl
cwtl
adc
cmpsl
test
or
pusha
dec
or
mov
or
xor
and
pop
fidivrs
adc
mov
fsubr
push
insb
mull
cmpsl
cmc
jns
movsl
inc
test
mov
mov
and
xor
xor
adc
cmp
test
mov
popa
scas
movsb
repnz
and
lcall
inc
pop
adc
cmc
lock
je
test
pop
cmc
popa
sbb
stos
add
pop
xchg
dec
and
jp
dec
fsubrs
lods
or
cwtl
push
push
push
mov
aaa
xchg
pop
and
stc
push
nop
cmp
std
and
sbb
cmp
jno
mov
test
jo
in
aas
pop
in
push
mov
lods
out
ficoms
push
mov
aas
xchg
or
dec
add
imul
mov
jbe
push
dec
xlat
leave
add
sub
mov
or
rclb
xchg
add
jp
lods
and
mov
add
out
pop
or
jo
lods
xor
or
adc
or
pop
rolb
or
hlt
pop
sbb
sub
int3
or
lret
adc
arpl
ret
movsl
ss
inc
imul
xor
add
rcll
out
popf
pop
or
push
jmp
sbb
adc
push
shl
or
inc
test
int
dec
test
push
enter
mov
fstl
add
xor
or
insb
insb
clc
or
jge
adc
cwtl
sub
shll
add
mov
enter
or
sbb
adc
or
adc
or
sbb
bswap
dec
jle
pop
repnz
lcall
popa
sub
aad
adc
mov
push
pop
adc
or
add
push
adc
pushf
dec
dec
mov
push
sub
movups
push
adc
cmp
cmp
sub
adc
das
mov
dec
sbb
jge
push
sub
mov
in
add
adc
xchg
cwtl
inc
and
jg
loop
cmp
and
push
cmp
cmc
daa
nop
pop
jbe
cmp
mov
call
add
add
xchg
gs
mov
and
rcll
pusha
cmp
js
sub
push
and
test
or
lea
push
insl
mov
loope
cmp
lahf
dec
add
into
dec
and
and
cmpsl
iret
loopne
test
xorb
into
inc
xchg
test
xorb
fdivrs
lcall
sbb
add
and
push
adc
cmovne
jb
lret
fs
and
push
mov
push
or
in
cs
push
and
mov
inc
psubq
dec
dec
aad
add
mov
add
pop
add
repnz
test
mov
add
dec
cmp
inc
xchg
push
pop
hlt
sbb
inc
dec
out
les
pop
repnz
dec
adc
add
nop
test
dec
fcomi
loopne
xor
in
xor
adc
add
loopne
sbb
add
inc
sbb
add
pushf
or
pop
jbe
push
sbb
fimuls
xchg
arpl
ficompl
add
fsubs
sub
shrb
jecxz
sarb
add
cmpsl
add
push
jo
push
dec
loopne
add
fidivs
mov
push
call
cmp
jecxz
ud0
mov
outsl
xor
shll
add
iret
adc
xchg
loope
inc
mov
and
xor
addr16
or
inc
pop
push
inc
dec
clc
dec
adc
fildl
cmp
fs
call
add
pusha
mov
inc
dec
add
inc
sub
sbb
data16
iret
sbbb
sbb
stc
xor
xchg
cmp
mov
add
hlt
enter
push
add
and
pop
sbb
jp
add
addb
out
ud0
xor
sub
xorb
mov
inc
cld
scas
xor
mov
jl
inc
jno
jbe
inc
sbb
icebp
add
cmc
mov
sbb
sbb
sub
adc
add
loopne
cmpsl
cld
je
add
add
and
sub
testl
adc
sarl
add
fstpt
pushf
push
adc
or
xor
fiadds
out
adc
idivl
cmp
mov
ret
push
test
sub
cmp
hlt
jg
add
adc
cs
out
in
mov
nopl
hlt
mov
push
cmp
fld
add
pop
aam
add
es
push
fwait
and
cmpsl
add
jl
jne
jecxz
and
jno
fucompp
js
jg
add
xor
add
jle
lock
out
add
sub
mov
add
movsl
loopne
jge
das
lahf
imul
test
adc
mov
jge
pusha
cmp
pop
loope
ss
inc
jp
add
loopne
icebp
fldenv
cmp
cwtl
jecxz
push
xor
shl
mov
push
test
add
fsubl
pop
fcoms
mov
pop
cmp
or
jg
ds
inc
addb
dec
dec
push
inc
testb
in
cli
xchg
bnd
xchg
push
cli
pusha
fsubrs
into
or
or
push
adc
lock
cmp
orb
or
xchg
or
ret
add
inc
mov
pop
and
or
jne
loopne
decl
orb
daa
sbb
dec
dec
jl
cmp
add
push
mov
shll
hlt
mov
and
mov
xor
add
push
je
pop
andl
lahf
bound
pusha
mov
and
add
in
loope
add
ds
inc
jecxz
mov
shll
sbb
inc
dec
call
jecxz
loope
mov
rolb
test
fdivrl
movl
jno
adc
out
adcb
js
leave
mov
lret
out
jae
cmp
into
and
sbb
adc
push
daa
mov
add
js
icebp
add
rdtsc
sub
daa
sbb
jge
add
pop
test
clc
mov
cld
and
add
mov
out
cmp
clc
lock
add
adc
or
inc
jns
or
ja
add
ret
loope
add
pusha
hlt
fsubl
inc
roll
add
sbb
add
loop
pop
mov
invd
ds
ret
sbbb
xor
lahf
shl
pop
test
add
lds
jl
add
sbb
push
cmp
mull
add
popa
mov
sbb
sbb
xor
jl
repz
or
adc
mov
rolb
dec
je
jns
call
pop
loopne
adc
mov
add
xor
ja
cmp
and
push
add
clc
cmp
bound
and
xchg
sbb
sbb
jp
mov
mov
fcoml
lock
out
cmp
mov
add
add
icebp
cmp
add
and
aas
int3
xor
lret
cmp
add
pop
sbbb
inc
out
out
dec
nop
push
loop
xchg
enter
add
jnp
fwait
lods
and
add
sbb
mov
xchg
jae
and
stos
adc
cmp
out
fldcw
push
test
mov
jecxz
mov
xchg
mov
push
xchg
sysret
and
cmp
sub
inc
ror
and
dec
lahf
xchg
inc
pop
jl
out
adc
lock
add
push
das
mov
popa
cmp
inc
out
add
mov
frstor
ud2
jge
xchg
xor
stc
sbb
jp
add
adc
jns
add
add
test
cmp
mov
xchg
pop
add
sub
inc
cmp
xchg
jg
fld
or
add
mov
and
and
mov
loopne
pop
and
loope
cmp
adc
lock
push
pop
xlat
mov
sub
mov
adc
mov
outsl
pop
ds
add
js
das
sub
jnp
pop
repnz
ficoms
cmp
xchg
dec
push
lcall
or
sbb
add
jo
les
add
mov
push
stc
sub
pop
cmp
test
inc
ret
dec
pop
fcomps
into
movsb
adc
jo
loope
add
loopne
push
mov
fistl
shrl
mov
ljmp
add
lock
ja
idiv
shlb
adc
mov
jl
icebp
sbb
xchg
add
pop
dec
idivb
icebp
and
cmp
mov
jnp
rolb
aam
rol
sbb
out
jo
xor
ret
add
test
pushf
movsl
jge,pt
cld
add
loopne
test
add
add
das
sarb
scas
cmp
jne
pop
js
xchg
fistps
cltd
paddusb
arpl
addr16
push
inc
push
xchg
loope
lea
ja
add
daa
sbb
cmc
ret
aas
loope
ret
pusha
jb
cmp
push
andl
and
add
jbe
xorl
push
dec
mov
add
or
push
add
mov
fmul
sbb
loopne
fsubl
pop
hlt
add
loop
test
fdivs
shll
sahf
push
add
stc
dec
aas
push
mov
sub
mov
add
loope
sti
leave
imul
fldl
stos
loopne
ret
jecxz
xlat
imul
dec
add
push
test
xchg
in
xchg
fdivl
repz
jbe
add
cmp
xlat
jne
inc
aam
xor
enter
sbbb
or
adc
iret
sbb
in
cwtl
rolb
mov
dec
add
jae
rorb
into
insl
ds
add
push
out
lea
in
cmp
inc
cli
outsb
mov
in
or
push
jo
mov
pop
mov
addb
imul
cmp
mov
or
pusha
mov
sbb
add
jp
repnz
mov
gs
or
mov
push
sbb
lock
adc
loope
mov
orl
popa
les
inc
add
xchg
xlat
xchg
cmp
pop
sbb
shlb
push
dec
adc
addl
gs
inc
jl
not
inc
xor
xor
int3
mov
inc
shr
stos
jne
add
xor
sub
icebp
add
pop
fs
roll
orl
mov
out
fsub
loopne
adcl
jg,pn
mov
negb
jnp
pusha
jge
jno
add
cs
daa
push
or
push
popf
sarl
dec
loop
sarb
call
cmpb
mov
xor
sbbb
ret
loop
pop
ds
mov
divb
add
sub
pop
mov
fwait
call
cmp
lock
in
push
clc
mov
sbb
sbbl
jae
jge
push
add
add
pop
loope
mov
dec
adc
pop
decl
enter
xorl
sbbb
nop
push
pandn
and
loopne
nop
mov
shlb
pushf
xor
ss
add
push
clc
es
fcomps
xchg
shlb
addb
and
inc
or
jl
call
and
clc
adc
pushf
mov
and
mov
out
jo
adc
aas
in
add
and
push
push
dec
data16
mov
mov
sub
or
add
jmp
add
xchg
sbb
pushf
iret
rcrb
add
aas
lahf
add
sbb
cmp
or
cld
ja
cmp
pusha
pop
into
mov
mov
out
xor
repz
pop
call
pusha
add
or
add
iret
addr16
gs
and
js
add
jb
dec
lock
adc
xchg
sysret
sbb
das
or
inc
push
arpl
lahf
sbb
out
add
or
add
add
or
add
inc
or
add
int
rcrb
sbb
xchg
mov
inc
sub
add
iret
add
inc
iret
add
inc
pushf
sar
dec
call
sub
mov
add
bound
add
mov
jmp
add
or
cmp
sbb
es
mov
popa
mov
jle
dec
dec
and
add
mov
enter
add
loope
ret
xchg
add
in
mov
das
popa
add
add
clc
pop
popf
sub
inc
or
inc
pop
cmp
cwtl
lea
pop
pusha
jne
add
mov
cld
iret
dec
or
dec
clc
sbb
insl
jns
add
rolb
sub
sahf
push
add
adc
sbb
push
mov
pop
jns
cmp
add
repnz
mov
xor
xchg
ret
loop
hlt
call
or
add
fnstenv
dec
es
adc
movl
xchg
loopne
stc
jb
les
add
pop
lds
call
sub
push
stc
inc
mov
daa
sbb
jb
leave
fildll
sbb
rcrl
nop
jp
ds
subb
xchg
lea
mov
and
add
ret
pop
cmp
roll
adc
sbb
popa
pop
or
lock
out
sbb
mov
push
roll
push
adc
add
cwtl
bound
aam
shl
mov
sub
sub
incb
sti
shlb
ds
add
repz
hlt
sbb
and
outsl
inc
jp,pt
in
mov
inc
mov
xchg
out
cmp
cmc
add
cmp
shlb
js
add
dec
movb
and
out
adcb
or
jmp
add
sub
insl
sbbl
imul
add
pop
xchg
stc
add
or
js
mov
jecxz
cmp
icebp
stos
cmc
dec
andl
cli
nop
jns
in
add
mov
cmp
push
mov
jle
rcrb
fnstcw
into
insb
adc
aas
lds
adc
add
push
mov
mov
mov
aad
movsl
xor
das
movb
add
jno
loop
xchg
cmp
fiadds
pop
pushf
out
jecxz
mov
cs
jbe
jno
mov
xlat
jb
pop
adcl
les
shrb
add
add
jns
aam
jmp
pushf
mull
ds
orb
sub
or
add
add
stc
test
dec
sub
test
add
jae
mov
cld
lock
das
or
dec
mov
movups
sbb
mov
push
xor
push
cmp
loopne
shlb
xor
repnz
cmp
add
add
outsb
mov
pop
lock
push
cmp
rorb
cmp
ret
stc
adcb
leave
inc
cmp
cmc
xor
pop
jl
jp
add
lret
popa
or
add
ret
nop
pop
std
in
jnp
or
push
push
xor
sub
mov
pop
and
ja
rcl
dec
mov
or
daa
xor
jecxz
sahf
es
sub
insb
jo
cltd
cmp
push
inc
xchg
mov
lahf
inc
add
add
add
pusha
mov
cmp
lods
adc
shr
inc
loopne
add
inc
jne
repnz
pop
cmpb
adc
pusha
inc
xchg
mov
adc
ljmp
cmp
popf
xchg
outsb
mov
cmpsl
sbb
xor
ljmp
add
cmp
cmp
clc
pop
mov
mov
call
cld
loopne
cmp
cmp
xchg
and
popf
mov
cmp
stos
ret
cmp
testb
xor
dec
ret
jo
cmp
mov
repnz
inc
jl
jecxz
sbb
icebp
or
add
sub
add
jb
add
add
inc
das
dec
test
loop
int
lea
ja
pusha
addr16
lock
loopne
adc
dec
push
cli
xchg
dec
jmp
loopne
or
cmp
sbb
les
iret
repz
sbb
sub
inc
adc
adc
pop
add
cwtl
mov
or
lock
push
popa
add
mov
ret
call
repz
out
dec
push
cmp
aas
clc
jecxz
test
pop
inc
icebp
dec
add
rcll
repnz
push
cld
sarl
dec
fcompl
pop
bound
xor
push
jne
cmc
jmp
jbe
xchg
loope
add
shlb
add
aaa
xchg
push
or
sti
es
jno
xor
addb
repz
xchg
icebp
scas
or
movsl
xor
mull
mov
call
push
inc
jns
xor
push
cmp
and
mov
xchg
adc
rcrb
or
movsb
add
or
testb
add
je
jo
movsb
shll
out
clc
cwtl
out
fstpt
jmp
add
je
and
lods
out
icebp
cli
shlb
add
cmp
repnz
rcrb
out
sub
jmp
and
ds
ljmp
pop
mov
mov
add
jmp
cmpb
mov
add
add
ret
mov
add
fsubrl
jae
cmp
arpl
push
shlb
xorb
mov
cmp
iret
out
cwtl
lock
mov
cld
sbb
cmp
roll
mov
and
ret
aas
add
push
jno
in
lods
loope
add
rolb
jae
enclu
test
ljmp
mov
add
or
rolb
repnz
pop
dec
loopne
cmp
add
jecxz
cli
sub
mov
push
xor
out
loopne
psrld
or
mov
js
iret
adc
push
mov
rorl
or
sar
jp
jmp
sbb
shl
jnp
sahf
add
inc
movsl
popa
test
rol
ret
hlt
or
loopne
mov
rorb
repnz
ja
loop
inc
dec
xor
add
shrb
add
push
testb
jge
data16
jle
lock
add
xor
fstpl
sub
sub
test
push
insl
int3
fldcw
cwtl
mov
mov
adc
out
add
inc
loope
dec
loopne
in
jl
cmp
movsb
and
pop
addr16
movups
sbb
icebp
cmp
leave
or
cmp
popf
jnp
sahf
pop
xor
mov
sbb
sbb
add
gs
inc
xor
sub
mov
pusha
mov
push
jle
rorl
icebp
add
int3
xchg
rorl
out
dec
das
push
mov
cld
add
cmp
cmp
xlat
mov
cmpsl
push
jle
hlt
cltd
cmpb
in
push
shlb
mov
push
stos
movl
repz
cmpsl
push
loope
xor
lret
xlat
leave
add
mov
rol
jns
or
int
or
dec
lock
fiadds
outsb
xchg
lock
aaa
and
lods
add
sti
int3
fwait
andl
ds
inc
js
mov
hlt
in
push
cmp
mov
mov
mov
sub
rorb
cvttps2pi
and
add
adc
add
fwait
test
jns
clc
lret
sbb
nop
stos
enter
adc
sub
sahf
add
add
cmp
xorl
sbb
cmp
clc
inc
popa
add
mov
and
inc
sbb
mov
cmp
faddl
or
adc
cmc
sbb
in
or
push
testl
add
sbb
xlat
add
sahf
or
cmp
xchg
aas
push
lahf
pop
sarb
adcb
jl
hlt
clts
repnz
int3
ja
push
sbb
out
pop
lea
and
enter
or
cs
in
cmp
xchg
sti
jle
add
aaa
xor
loop
clc
lcall
shll
pop
pop
or
pop
sub
out
xor
add
loope
dec
push
sbb
pop
icebp
cmpsb
adc
xor
ds
cmp
ljmp
nop
inc
add
aaa
cmp
jo
lds
cmp
out
rol
jmp
call
cmp
pop
out
mov
jl
lock
sbb
or
or
shl
and
jg
xchg
jae
pop
outsb
inc
add
pop
enter
add
mov
shlb
cmp
sbb
add
dec
push
pushf
lds
push
add
pop
sub
xchg
add
loop
add
loop
dec
and
dec
fiaddl
jecxz
inc
jp
mov
dec
add
lret
js
sub
cmp
or
stc
xorb
dec
add
mov
icebp
int3
sub
cmp
gs
jae
pop
push
xorl
and
orb
sbb
xchg
loope
in
adc
push
xchg
mov
sbb
dec
lock
jnp
pusha
jbe
das
jp
add
mov
sbb
cmp
int3
add
addl
wrmsr
push
adc
dec
stc
ljmp
je
xor
scas
pop
inc
push
jg
clc
jo
inc
or
mov
cmp
mov
fdivrs
cmpb
adc
mov
pusha
xchg
adc
fmull
and
sub
jno
mov
nop
loopne
lds
mov
icebp
shrb
add
xchg
add
add
xor
aam
jle
or
or
xchg
xor
xorl
ss
xor
sub
mov
bound
xorl
and
jae
repnz
mov
daa
es
lock
icebp
out
mov
sbb
andb
dec
aaa
add
fisubs
pop
imul
xlat
outsb
fdivl
stc
test
add
cmpl
add
add
mov
add
outsb
lahf
add
arpl
sti
or
dec
jns
in
fmuls
insl
mov
pop
or
add
and
nop
sarb
add
mov
push
jecxz
arpl
rolb
sarl
cmpsl
pop
lahf
mov
add
dec
mov
add
pop
test
xor
loopne
push
mov
sub
sbb
pop
adc
jae
sbb
mov
add
enterw
inc
cwtl
inc
add
push
shrb
cmp
call
data16
cmp
adc
imul
enter
shll
cmp
sbb
call
lock
sbb
mov
in
mov
adc
addl
icebp
int
fsubr
cmpsb
jns
add
push
sbbl
add
and
jecxz
add
les
rolb
adc
mov
test
cmovne
or
jo
ljmp
pop
xchg
mov
fists
test
push
mov
cld
mov
outsl
mov
push
push
mov
sbbb
out
and
add
sub
xor
add
push
ret
test
push
xchg
in
xchg
lahf
out
inc
cld
aaa
inc
add
xchg
shl
add
pushf
jne
adc
addl
add
inc
xor
add
clc
inc
or
push
mov
or
jno
pusha
mov
add
lds
xor
push
fimuls
cmp
jp
pop
insb
pop
addb
or
add
inc
lahf
jg
sbb
xchg
mov
pop
daa
enter
add
addb
adc
movl
add
mov
pop
push
cmc
les
pop
and
sbb
repnz
pop
jg
add
rcll
leave
cmpsl
sub
sbb
pop
pop
in
enter
mov
mov
add
inc
dec
hlt
and
les
scas
xorb
push
cmpsl
js
iret
hlt
cmp
cmp
or
aam
add
jge
stc
pusha
dec
add
ret
mov
xchg
dec
cmp
js
lret
sbb
sub
cmpl
scas
addl
mov
lret
push
dec
add
inc
loop
jecxz
mov
and
nop
xchg
sbb
addr16
push
idivb
jle
iretw
js
out
jge
mov
mov
xor
mov
push
pop
clc
push
adc
nop
pusha
add
adc
cwtl
packssdw
add
roll
push
jo
xor
mov
and
ss
add
dec
sbb
adc
sbb
add
and
xor
dec
addl
mov
xor
sahf
jle
enter
mov
ret
mov
sbb
stc
lds
cmp
out
push
add
and
jns
add
lock
shl
cmp
add
jno
shl
sbb
lahf
enter
xor
cmp
loope
inc
subl
subl
clc
jecxz
pushf
xchg
ror
pop
dec
xor
addr16
stc
add
xchg
lahf
cmp
testl
pop
push
arpl
addl
or
lds
dec
pusha
jb
test
add
mov
sbb
jl
push
or
xacquire
jo
and
or
jbe
push
pop
dec
roll
pop
mov
add
add
dec
mov
adc
add
sbb
test
jl
push
push
mov
outsl
orl
xchg
mov
int3
mov
sub
addb
orl
add
sbb
lock
enter
es
inc
sub
mov
stos
mov
negl
adc
push
or
cmp
inc
xchg
dec
dec
mov
rclb
sub
int
fldln2
sbb
jo
mov
adc
cmp
inc
mull
sti
fwait
pop
jecxz
clc
sub
inc
or
inc
addb
xchg
cwtl
pshuflw
sbb
jp
xor
push
add
jl
lds
mov
mov
jmp
nop
add
cmpl
test
mov
adc
xor
pushf
ds
loope
aaa
cmp
jmp
int
jb
ret
and
add
push
repnz
inc
sbb
mov
psrlq
or
add
mov
cmp
add
add
inc
adc
je
rolb
and
sbb
cmp
cmp
xorb
movsl
pop
add
ret
cmp
xchg
cmp
and
sbb
jne
roll
jns
add
jg
inc
lds
pop
push
repz
jecxz
sahf
call
gs
leave
lahf
int3
psubusb
pusha
cmp
push
push
adc
addb
rorb
adc
repnz
mov
adc
jg
xchg
xchg
sbb
xor
jp
cs
cmp
push
mov
inc
loopne
leave
add
inc
cld
adc
mov
jge
sbb
sbb
les
ffree
jae
hlt
enter
jno
in
call
push
mov
sub
shl
lods
push
pop
pusha
je
inc
sarl
jbe
dec
icebp
test
ret
out
add
sbb
outsl
fcoms
call
mov
xchg
iret
pop
or
add
xor
xor
divl
ljmp
push
testl
sbb
xor
cli
inc
jl
daa
lahf
push
inc
mov
clc
outsl
rcrl
and
xchg
dec
ror
mov
ficoms
popl
adc
mov
mov
add
xor
adc
add
push
cmp
xchg
xchg
jecxz
and
inc
and
in
push
inc
sbb
xchg
or
add
xor
dec
sbbb
and
ds
mov
xor
or
stc
ret
fmull
jbe
rcrl
mov
cmp
inc
iret
je
add
lahf
cmovg
sub
sub
jle
clc
mov
pop
push
add
fildl
inc
jo
icebp
adc
adc
adc
jbe
xchg
add
imul
aas
sub
jnp
add
sub
or
repz
and
ror
mov
add
fisubs
add
mov
sub
repnz
xchg
add
insb
notb
rolb
push
sub
sub
mov
jl
inc
mov
adc
push
jae
mov
xchg
lock
mov
leave
cmp
rolb
add
or
pusha
lock
pop
decb
jb
or
pop
dec
push
andb
jl
add
jo
cmp
popa
add
nop
test
add
imul
xorb
adc
cmp
sbbb
bound
jg
adc
loopne
add
sbb
sahf
jo
lds
mov
sbb
cmp
jns
jp
xchg
js
popa
inc
jno
or
movsb
add
pushf
and
and
fdivrs
jl
repnz
add
xor
add
cmp
add
add
lcall
add
ljmp
dec
sbbb
cmp
jo
ds
jp
mov
out
push
addr16
shr
je
sub
pusha
mov
sub
dec
mov
in
add
loopne
lret
dec
jns
cs
in
add
int3
andb
or
xchg
scas
and
ret
add
xchg
push
inc
pop
cli
jge
or
add
repnz
nop
and
jl
loopne
add
and
aas
sub
push
in
aam
enter
addl
cmp
sbb
xchg
sub
outsb
adcb
sbb
outsl
sub
icebp
cmpsl
push
xor
pop
jnp
test
inc
lahf
pop
in
xor
sub
sbb
leave
test
aam
xchg
ret
mov
mov
mov
add
or
push
dec
lahf
or
jbe,pn
push
mov
out
cmp
stc
setge
push
dec
clc
xchg
ret
pop
lret
sti
add
insb
daa
adc
neg
loopne
and
cs
out
jo
call
cmp
std
stc
mov
inc
je
adc
pop
xchg
int3
push
sub
jne
and
add
aad
sbb
sarb
push
add
jbe
test
jg
add
out
xchg
rolb
and
shlb
add
push
ficoms
mov
jae
icebp
adc
push
sbbl
add
mov
stc
push
lock
rcrb
mov
cs
je
adc
and
pop
add
pusha
hlt
push
inc
addb
sub
sbb
enter
xchg
mov
jb
add
das
and
pop
push
cmp
jno
pop
sbb
inc
lds
jns
add
push
add
xorb
add
psubd
nop
loopne
rcrl
js
arpl
sbb
dec
inc
or
jb
cmp
adcb
add
cmpsl
ret
orl
mov
es
rolb
mov
iret
push
mov
scas
jbe
sub
pushf
or
adc
and
and
xchg
jns
add
add
lret
mov
mov
add
dec
mov
lock
pop
add
lds
call
cs
jecxz
sbb
loopne
nop
pop
out
jne
mov
mov
adc
xor
adc
arpl
jns
xor
push
addl
push
or
rcrl
in
cmp
rorb
push
jns
test
loope
or
into
mov
popa
pop
into
xchg
jo
movl
inc
pop
ret
or
inc
andb
es
add
clc
adc
inc
cmp
daa
test
orl
mov
ja
loopne
add
add
adc
call
add
cmp
shl
or
push
dec
out
add
icebp
faddl
lcall
ret
sub
adc
aad
inc
mov
cld
arpl
wrmsr
pushf
xor
in
jbe
rorl
pop
jnp
pop
ja
jbe
add
or
mov
clc
sar
fadds
mul
outsl
or
jp
xor
out
inc
fstps
add
ja
sbb
jno
push
shlb
xchg
pop
rolb
in
enter
rclb
fists
cmp
sbb
js
inc
lahf
add
add
inc
cmp
add
jnp
mov
ljmp
push
mov
cmp
xchg
lock
pop
mov
mov
or
cmp
pop
add
sahf
xor
lods
lea
sar
fidivrl
out
add
cmp
loopne
scas
mov
int3
inc
or
mov
sbb
adc
xchg
pusha
inc
pop
hlt
jo
and
mov
and
je
sub
add
scas
addr16
push
cwtl
sub
arpl
cmp
xorb
into
jo
inc
add
push
xchg
cwtl
rcrl
sub
fildl
sub
add
jns
pop
jo
lock
andb
jb
cwtl
add
adc
pop
mov
int3
loopne
push
loope
test
orl
in
pop
repnz
pop
mov
xchg
pop
add
inc
dec
cmp
jmp
add
dec
das
rcrl
cmpsl
pop
sbb
mov
add
pushf
adc
xchg
cmp
inc
pushl
bound
add
xchg
jne
inc
or
and
shrb
pop
das
shlb
push
and
icebp
ds
pop
or
fs
ret
pop
repz
cs
and
ret
inc
daa
inc
lret
mov
add
fld
in
cmpl
mov
pop
add
mov
jo
add
pop
in
jno
add
nop
lock
adc
fldl
dec
xor
roll
and
sub
pop
outsl
mov
push
es
inc
ror
xchg
loopne
inc
ds
subb
mov
loope
add
out
push
add
in
or
add
lock
rclb
sahf
add
add
mov
clc
sbb
sub
shll
pushf
lods
inc
ucomiss
and
mov
mov
sbb
or
movsb
cmp
call
inc
les
add
dec
jo
call
adc
into
cmp
gs
movsb
or
repz
mov
sbb
aas
xchg
cmp
subb
dec
pop
mov
cmp
sub
hlt
daa
push
punpcklbw
jp
call
fldl
out
and
das
shlb
cmp
ret
xor
test
add
enter
push
arpl
lods
imul
and
enter
aaa
sbb
xchg
mov
jne
dec
out
in
into
int3
add
xor
sti
test
rolb
fstpl
and
adcb
out
neg
add
adcb
cs
js
pushf
loopne
push
addb
fmul
aas
and
loope
sub
push
aas
sub
dec
mov
int
into
pop
xchg
fadd
shl
enter
adc
test
ljmp
sbbb
in
call
add
rclb
sbbb
add
xchg
cmpsb
adc
jecxz
inc
push
jge
add
or
pop
sbb
add
adcb
rcrb
sti
push
sbb
pop
sub
in
andl
and
adc
test
out
push
out
lahf
dec
fadds
dec
jmp
ds
adc
add
pop
add
aad
lock
loope
andl
es
xor
inc
popa
pop
sbb
test
sarl
lret
pop
push
push
inc
cmc
mov
mov
cmp
out
push
icebp
and
or
cmp
jo
or
test
into
ret
adc
mov
sbb
xor
add
rcr
insl
inc
aaa
xchg
adc
xchg
and
frndint
jbe
jne
and
sbb
add
popf
fistps
inc
sbb
pushf
dec
out
add
sbbb
loop
mov
iret
dec
push
loopne
aaa
mov
pusha
subb
stc
movb
xchg
sub
sub
jl
mov
prefetcht0
int3
add
and
popa
aad
mov
flds
lock
push
ficoml
sub
cwtl
je
hlt
xor
or
or
sbb
shl
add
out
cmp
or
mov
lds
jl
cld
add
les
xchg
daa
cmp
enter
leave
int
or
mov
lds
adc
xchg
js
nop
jge
push
add
loopne
inc
add
sbb
mov
adc
int3
ret
or
lods
fsubs
pop
add
inc
xor
add
cmp
mov
jge
add
sub
aad
inc
mov
orb
and
sbb
sbb
and
call
pusha
sbb
sbb
sti
cmp
and
rol
je
mov
push
cs
subl
in
inc
pop
js
push
in
mov
add
and
add
push
or
or
or
push
test
jle
jb
add
sbb
jg
inc
rcrl
xchg
adc
dec
push
inc
adc
xchg
test
mov
xor
push
or
je
add
or
daa
aaa
cwtl
cmp
mov
mov
ret
add
call
cmp
daa
or
test
movsb
add
mov
bnd
jo
sahf
mov
inc
add
loopne
ds
push
lock
jmp
and
jno
jo
sub
insb
add
adc
add
inc
xlat
or
rcr
hlt
jo
adc
ficomps
filds
mov
shrb
add
out
or
adc
loopne
movb
jnp
add
and
push
pushf
ljmp
inc
sbb
dec
enter
sbb
sub
inc
mov
lcall
sub
inc
jnp
xor
cld
cld
add
cmp
and
icebp
adc
cmp
push
pop
cmc
jmp
add
fisttps
bound
in
mov
ret
aaa
les
cmp
out
or
cwtl
mov
cmp
xor
lock
popf
dec
or
sub
es
pop
add
and
add
cmpsl
add
jge
das
icebp
enter
sbbl
push
xor
inc
mov
xchg
cmp
test
jg
loope
or
add
xor
and
pop
clc
cmp
add
cmp
jle
inc
fnstcw
add
sbbl
jb
mov
or
and
adc
adc
and
roll
jb
testb
xor
pusha
pop
rolb
cld
sar
loopne
cmp
clc
sbb
jmp
adc
arpl
aas
jo
push
push
fimull
pop
jnp
dec
sbb
icebp
mov
inc
ud1
repz
mov
sbb
jne
push
cmp
adc
inc
ss
cmp
cwtl
pop
add
dec
push
add
mov
inc
pop
mov
addr16
jbe
popl
add
and
jae
jecxz
add
jo
xor
sbb
and
clc
add
mov
sbb
sahf
pusha
loopne
push
addl
or
insl
cmp
iret
push
inc
cmpsl
xor
js
xchg
ds
add
mov
fsubrl
pop
sahf
test
sar
add
xor
into
inc
les
loope
adc
shl
cmp
and
push
mov
mov
mov
mov
rol
mov
xchg
lock
adcb
fisttps
mov
dec
inc
pop
or
jp
jge
jmp
push
int
xor
pop
and
jl
mov
xor
enter
xor
inc
cmp
jge
jl
scas
dec
xchg
cmp
adc
xchg
lds
lret
inc
xchg
push
sbb
rolb
push
andb
mov
or
in
mov
inc
dec
test
ljmp
inc
add
cmp
cmp
cwtl
js
iret
outsl
inc
loop
shlb
add
icebp
xor
rolb
sbbl
mov
and
imul
mov
ja
pop
or
repz
pop
ret
pop
lods
shll
iret
loop
add
sbb
jl
icebp
adc
add
sbbl
flds
dec
push
cwtl
sbb
insl
mov
pushw
inc
mov
in
gs
addb
xor
fadd
push
or
imul
int
jecxz
addr16
sbb
jg
sahf
outsl
add
aam
cs
test
adc
test
push
xchg
mov
mov
or
cmpsl
int3
push
clc
sbb
lods
call
jo
pop
jl
ret
push
int
pop
cwtl
cld
loop
add
mov
cld
pop
icebp
xor
add
cltd
or
clc
add
ljmp
push
test
mov
loopne
ja
verw
loopne
popf
add
add
shll
jne
inc
sbb
cmp
add
clc
in
add
outsl
cs
sahf
pop
push
jl
push
std
in
push
mov
outsl
pop
jbe
add
add
nop
xchg
push
pusha
jo
loopne
rorb
stos
jno
loopne
test
sub
cld
dec
aas
fwait
add
lret
ret
mov
or
dec
xor
xchg
in
loopne
cmp
adc
add
cs
movsb
push
mov
xorb
or
mov
xor
test
fimuls
lret
xchg
sarb
sub
dec
cmp
add
xlat
fildl
std
pusha
add
icebp
test
ds
outsl
arpl
test
sbb
pop
and
jo
psubq
or
dec
cmpsb
mov
sbb
imul
xchg
aam
mov
add
xor
adc
bound
jmp
jge
cmp
faddl
mov
popf
pop
sahf
cmp
mov
dec
and
sub
or
push
or
sbb
sub
and
inc
add
mov
push
cltd
daa
mov
or
xor
jmp
add
add
loopne
test
jno
jle
inc
xchg
ret
mov
xchg
lahf
adc
add
xor
clc
les
xor
loopne
add
xchg
roll
lock
or
cwtl
loop
orl
imul
or
mov
aas
ds
popl
clc
pusha
adc
adc
xor
and
jns
stos
cmc
add
mov
lock
jno
xorb
adc
out
js
cmpl
lods
adc
sbb
faddl
cmpb
clc
cmp
scas
and
lock
ficomps
jl
mov
cmp
ss
mov
mov
sbb
cmpb
pop
cmpsl
sbb
loop
push
daa
out
adc
enter
icebp
sub
aam
cmp
lds
addb
dec
xor
call
fadds
dec
clc
lahf
jmp
ret
sahf
xor
icebp
jg
xchg
fsub
or
hlt
jne
das
pusha
adc
dec
add
adcl
sti
mov
xchg
push
add
cmp
out
inc
nop
add
ds
sbb
pop
test
push
jle
mov
jno
pop
shl
push
xor
sahf
fs
rcr
add
or
jmp
lock
inc
cmp
addr16
dec
sbb
shlb
les
jl
add
sbb
cmp
mov
add
out
roll
andb
mov
push
out
icebp
mov
flds
push
add
push
pop
sarb
cwtl
xor
cmpl
xor
pushf
xor
addb
pushf
lock
dec
jbe
jo
cs
inc
add
push
and
aam
jmp
pop
xchg
jno
jo
cmpsl
leave
outsb
sti
call
enter
mov
push
sahf
pop
loopne
inc
lret
or
mov
sub
push
popa
rolb
dec
insl
and
push
cmpsb
xor
repnz
cmpl
and
jns
inc
add
mov
jle
hlt
push
mov
xchg
xor
lods
fistps
movsb
push
jb
cmp
loopne,pn
sahf
lock
pop
sub
call
into
mov
mov
xor
xchg
jno
xchg
pusha
mov
lock
add
clc
xchg
mov
cmp
mov
add
cmp
stos
ret
cmpsb
scas
fmull
mulb
pusha
mov
clc
mov
pop
add
or
lock
sub
popa
jl
loope
xchg
mov
mov
je
ret
adc
xchg
cmp
jno
cmp
mov
add
icebp
cli
sbb
pusha
adc
repnz
outsb
loope
or
scas
mov
mov
cmpsb
pop
inc
lret
pop
pop
bound
js
push
push
loop
flds
sbb
bound
xadd
sub
or
pop
addb
fnstenv
or
jb
dec
rclb
daa
mov
add
dec
bound
pop
shlb
sarb
dec
and
jl
js
dec
sbb
adc
cli
xorb
mov
movsl
and
and
xor
jg
add
and
sbb
out
das
pop
movsb
lock
loop
inc
cwtl
and
dec
repz
jae
or
and
add
dec
xor
rclb
test
sbb
js
movsb
mov
add
pop
shll
add
mov
clc
dec
add
scas
out
pusha
xchg
sub
shl
pop
stc
cmp
adc
mov
leave
ljmp
ss
dec
and
incb
jnp
add
sbb
std
add
inc
mov
sbb
sub
xchg
xor
inc
dec
rcrb
call
cmpl
adcb
in
jl
add
int3
shlb
icebp
add
xor
das
sbb
pop
bound
jo
je
jns
pop
add
xchg
iret
pop
xor
cwtl
dec
adc
es
std
test
rclb
add
repz
jbe
add
daa
out
add
inc
sub
call
femms
push
add
in
filds
andb
add
vphsubwd
pop
sbb
add
add
rolb
ljmp
ret
add
pop
cmp
jbe
add
inc
and
roll
pop
inc
xchg
int3
mov
adc
fidivrs
orb
popf
jecxz
or
xor
or
lahf
sub
sahf
notl
cmp
mov
inc
dec
add
icebp
pop
add
and
pop
sub
aas
pop
lock
into
xor
jmp
mov
ret
scas
repz
les
xor
xlat
lret
push
mov
hlt
add
stos
ds
add
lcall
jae
aas
pusha
fdivrl
ret
or
data16
add
adcl
inc
xchg
cmpsl
lods
or
or
jmp
push
out
push
comiss
rep
or
mov
cmp
pusha
pop
in
rcll
jbe
mov
cs
stc
roll
or
lahf
sub
pushf
arpl
or
mov
mov
sub
jae
and
jne
sbb
pop
adc
add
push
js
add
push
ret
adc
cmp
jno
push
pop
lahf
or
jne
clc
dec
pop
xor
addb
mov
add
and
mov
call
out
sbb
or
pop
out
jmp
pushf
bound
add
addl
push
hlt
sub
and
call
enter
cs
xchg
les
out
add
mov
dec
cmp
push
scas
push
push
sub
sub
adc
daa
sbb
inc
xchg
pop
add
mov
dec
shrb
orb
jns
add
loope
fsubs
pop
push
add
aaa
pushf
arpl
lock
jl
add
fsubrs
fyl2x
and
ret
lret
inc
and
ror
and
nop
cs
in
pop
loop
add
addb
testl
add
push
fiadds
orb
cmp
sbbb
xor
push
or
inc
push
adc
pop
jo
add
rol
movl
jg
mov
add
loopne
stc
in
ljmp
or
cmp
add
adc
ret
cs
loop
and
sbb
mov
ror
and
cwtl
lret
les
add
xor
push
bswap
inc
or
lods
loopne
js
push
sbb
je
shl
or
ljmp
loop
das
loopne
enter
pop
pop
pushf
test
shll
repnz
or
xchg
jb
add
fsubrs
out
add
cmpl
add
mov
inc
cmp
push
mov
cld
ud1
popa
dec
mov
xchg
jae
mov
cwtl
cmp
and
pop
adc
mov
and
ds
xchg
test
and
mov
pop
xor
mov
mov
scas
or
in
pop
mov
test
scas
mov
adc
xor
and
cmp
bound
xor
ds
repnz
add
ds
push
lods
mov
and
andb
ror
loope
push
inc
cmovle
pop
and
mov
or
xchg
orb
mov
add
sbb
sbb
mov
push
dec
cmp
loopne
imul
jp
add
in
or
add
lock
mov
addb
add
loopne
jns
adc
icebp
or
mov
aas
mov
mov
jo
mov
roll
mov
je
inc
mov
mov
add
fucompp
add
jmp
fsubs
test
mov
imul
ljmp
push
add
cmp
push
cld
shl
or
shrl
xchg
add
mov
pop
add
push
arpl
sar
mov
add
add
push
ret
cwtl
cmp
int3
fmul
inc
mov
fld1
mov
or
test
and
adc
inc
pusha
pop
shlb
test
daa
clc
rcrl
ds
andb
add
or
push
clc
adc
stos
mov
outsl
addl
xchg
nop
fwait
jle
cmp
or
icebp
rclb
cld
addl
pop
popl
iret
sbb
shl
addl
testl
jl
loope
mov
push
aas
jae
js
add
dec
pusha
movsb
xchg
sub
add
sahf
test
xor
mov
mov
adcb
push
mov
aam
add
imul
sbbl
cmp
cmp
out
fisubs
mul
inc
aas
or
add
mulb
iret
pop
pusha
clc
add
pop
xchg
xor
add
push
jae
loope
pop
xchg
aam
sahf
mov
test
cmp
and
or
sbb
std
mov
adc
subl
imul
sbb
pop
and
add
push
push
sbb
cmp
mov
dec
enter
test
xor
sbb
loop
jo
add
mov
sub
jle
aas
push
or
cwtl
mov
push
add
popl
mov
sbb
aaa
test
cmp
aam
push
mov
or
outsl
push
adc
shl
dec
popa
stc
sub
lock
add
jae
outsb
and
clc
ret
aas
icebp
dec
addb
test
arpl
inc
add
out
std
jo
inc
call
movb
adcl
inc
iret
frstor
clc
push
out
loopne
mov
mov
xor
out
movl
and
add
shlb
pop
repnz
js
cmp
dec
addb
cmp
popf
insb
push
notl
pop
cmp
out
rclb
idivb
test
cmpsl
and
rorl
in
or
add
dec
je
inc
gs
xor
xor
andb
stc
adc
mov
jmp
sbbl
xor
add
popf
sarb
add
jno
adc
cld
ss
add
daa
aas
out
and
add
nop
mov
cmp
jmp
jmp
out
shl
inc
pusha
bound
sub
les
faddl
jo
adcb
imul
lcall
add
xor
addb
popf
shlb
sahf
add
pop
pop
insb
add
xor
out
bound
pushf
add
sbb
xor
or
in
sbbb
and
popf
test
pushf
xchg
daa
add
mov
sbb
add
movhps
nop
mov
ret
enter
cmp
sti
out
cwtl
and
cmpsb
dec
sub
hlt
jge
mov
test
dec
fidivs
or
pop
hlt
xor
fldenv
repnz
shll
std
and
lret
pop
daa
clc
clc
in
pop
mov
inc
add
loop
push
enter
es
inc
jg
call
addr16
sbb
inc
test
jno
inc
push
cld
and
jb
insb
add
pop
pop
or
push
loope
cmpb
jae
add
js
or
and
jg
rorb
adcb
mov
and
daa
mov
cmpb
int3
push
add
xchg
or
cmp
push
pop
les
add
xchg
clc
dec
addl
add
xchg
nop
mov
add
pop
fsub
push
into
mov
add
and
leave
sti
push
xchg
lds
mov
call
inc
xchg
ds
push
add
inc
int3
adc
icebp
sbb
addl
iret
push
or
loopne
imul
add
adc
jp
shr
mov
inc
add
out
cwtl
or
push
mov
jae
sub
push
pop
subb
in
xor
das
shll
cmp
rcrb
xchg
in
jo
outsl
sub
add
pushf
cmp
pop
add
pop
ds
inc
rcrb
xor
aam
add
popa
cwtl
push
or
or
add
loopne
stos
cmp
push
roll
mov
call
xor
cmp
test
sub
in
repnz
and
repnz
or
and
cmp
stos
lret
xor
lcall
sub
rcrl
mov
inc
cmpsl
test
mov
sbb
fistpll
push
and
and
cmp
repz
arpl
sbb
and
and
pop
mov
rol
in
fdiv
sarb
sbb
lea
inc
jno
add
test
out
lock
xchg
jae
js
cmp
push
jmp
push
adc
pop
add
lods
ret
je
lock
test
add
scas
nop
out
push
or
push
pusha
push
ds
iret
add
movsb
push
fistpl
into
or
mov
add
cmp
leave
subb
sbb
test
sbb
ret
sahf
mov
dec
loope
add
fdivs
push
adc
jecxz
or
xchg
inc
cmp
or
sbb
add
or
pop
arpl
mov
xor
movsb
jg
icebp
aas
sbb
clc
or
pmovmskb
xorl
testl
xchg
call
push
clc
insb
add
dec
cwtl
inc
inc
and
add
lds
add
fdivl
or
add
clc
sahf
lock
out
mov
mov
add
jne
fldz
add
scas
add
inc
cmp
jno
add
mov
push
nop
jle
sbb
nop
pop
push
jl
js
leave
push
rolb
outsb
jno
mov
add
inc
push
cmp
shlb
leave
test
lret
rolb
test
roll
repz
adc
pop
lock
dec
test
mov
add
and
or
add
push
sub
xchg
and
sbb
adc
imul
lcall
sub
loopne
dec
lock
pop
sub
insb
mov
jo
rolb
rorl
mov
add
xor
xchg
mov
sbb
add
sbb
aam
push
scas
cli
add
dec
aad
jbe
jns
rcrl
lahf
add
lret
and
rol
addr16
jo
popa
add
push
adc
je
arpl
sysret
nop
push
or
add
mov
xor
xchg
popl
jne
lock
push
cmp
pop
fildll
fidivs
shl
or
add
jg
add
add
das
add
sbb
xchg
test
push
push
call
pusha
cmp
push
inc
jns
add
push
popa
mov
addr16
fcompl
lock
or
sbb
cmp
push
popa
sbb
mov
add
cmp
pop
cmpsb
stc
test
testl
add
cmpsb
pop
cmp
jbe
pusha
lock
bnd
adc
adc
clc
sub
jmp
test
jl
push
mov
xor
fimull
push
scas
add
xchg
or
inc
dec
mov
push
pop
mov
add
adc
jmp
dec
enter
mov
pop
mov
xor
loop
lock
add
shll
out
int
frstor
ficomps
sub
and
push
insb
mov
aam
add
cmp
jbe
and
pop
icebp
jle
imul
push
cwtl
iret
pop
add
push
or
adc
sub
dec
roll
push
adcb
sbb
aas
ret
pop
pusha
dec
adc
sbb
or
mov
jg
jbe
pop
sub
nop
test
xor
loopne
repnz
adc
sbb
lret
lds
jecxz
ret
rorb
or
xor
int3
push
lock
pop
aam
test
enter
add
push
inc
jp
sahf
cmp
pop
xchg
stos
add
andb
or
xlat
sbb
pusha
inc
fisttps
repnz
pop
pop
addb
cmp
clc
test
icebp
push
jecxz
inc
dec
xor
and
pop
popa
arpl
dec
outsl
add
xchg
in
or
je
cmp
cmp
add
sbb
out
lar
popa
das
sub
int3
sahf
sarl
movsl
add
insb
dec
es
js
push
xor
or
mov
arpl
add
bound
push
pop
xor
and
cmp
sbb
add
xor
out
pop
pop
cmp
push
loop
inc
hlt
push
or
xor
ljmp
arpl
sbb
aaa
daa
sub
or
adc
sub
ljmp
pop
aas
add
mov
punpckhbw
xchg
cmp
fsubrp
jecxz
cmpsl
std
inc
or
shr
add
jne
xchg
pusha
daa
lahf
and
inc
or
wbinvd
ja
cmp
faddp
and
add
xchg
scas
push
sub
add
cwtl
shlb
ljmp
sub
arpl
inc
jge
hlt
mov
fadds
jb
sbb
add
sti
dec
out
mov
mov
cmp
int3
mov
pop
icebp
cmp
iret
leave
xor
add
pop
movsl
lds
cmp
cmc
sarb
push
icebp
in
in
fstl
addb
adc
call
jb
and
or
fadd
jl
bound
inc
lea
aas
mov
push
jle
pop
icebp
jmp
adc
xorl
and
jmp
cmp
stc
add
add
dec
adc
sub
out
push
into
adcb
add
xorb
jl
xchg
ljmp
inc
sarb
add
mov
mov
pop
jecxz
sbb
xor
clc
xchg
or
ljmp
enter
inc
add
jns
and
loopne
dec
xchg
add
adc
out
add
sub
add
xor
adc
jl
mov
xchg
push
int
icebp
add
pusha
sbb
cmp
adc
cmp
aaa
pop
or
jp
dec
add
add
mov
dec
pop
cmp
pop
add
add
popa
dec
push
sub
imul
inc
cmc
dec
in
cmp
lock
inc
mov
pop
mov
dec
mov
popa
setge
pop
adc
pushf
jp
filds
fdivrl
add
mov
fwait
icebp
sbb
add
lahf
add
xchg
add
cld
dec
int3
xlat
test
or
fwait
aas
daa
xor
loope
dec
sbb
sbb
xor
fsubl
addb
in
icebp
mov
test
jnp
add
bound
mov
jae
testb
dec
dec
mov
clc
lock
cmp
out
sub
les
sbb
js
call
dec
pop
jno
and
sbb
stc
cmp
and
or
cmp
add
push
sub
cmp
xor
add
adc
add
pusha
je
xchg
ds
lcall
daa
loope
mov
pop
inc
or
iret
adc
andb
imul
lods
mov
push
add
shrl
xchg
sub
add
or
push
jge
les
dec
xchg
xchg
pop
pmaxub
pop
cld
enter
rclb
aas
sub
stos
in
mov
cli
mov
andb
shrb
in
add
push
sti
nop
or
loope
andl
add
push
mov
adc
xor
add
or
mov
ret
xchg
pop
sbb
xchg
rorb
js
xor
dec
jl
sarb
inc
cmpb
sbb
ja
loopne
push
lock
es
sub
das
add
or
sub
add
cmp
xor
add
cmp
lock
loope
add
pop
mov
xchg
push
jmp
repz
mov
sbb
xchg
ret
dec
pusha
push
jle
mov
ucomiss
test
sbb
and
loopne
add
pop
ds
rolb
sub
push
int3
pop
push
shll
shr
mov
jne
rorb
pop
fcoml
add
jle
sub
cmc
xchg
pop
fxch
movb
pop
sahf
cmp
inc
les
xor
adc
inc
or
xorb
lock
add
xor
mov
add
into
mov
adc
test
dec
pop
xor
int3
add
sbb
mov
dec
in
roll
nop
xor
or
int
mov
push
mov
inc
xchg
call
xor
xchg
int3
jge
std
std
hlt
xor
jo
sbb
cmpsl
pop
in
xchg
add
loopne
xor
cmp
mov
inc
sbb
push
ret
rcrl
pop
adc
xchg
out
fcoml
cmpsl
sbb
xchg
xor
aaa
lock
push
jge
or
pop
mov
and
das
inc
cmp
xchg
orl
xchg
jp
or
jmp
repz
les
pop
mov
dec
sbb
gs
loopne
or
clc
mov
addr16
add
or
push
decb
add
dec
add
inc
clc
cmp
jp
cmpsl
dec
addl
and
sub
into
mov
add
ja
pop
pop
cmpb
iret
sub
cmpb
cwtl
pop
cmc
or
sbb
or
bswap
sbb
loope
sub
inc
mov
sub
and
sarl
js
cmp
cmpsb
xor
pop
inc
push
in
call
int
or
lock
fsincos
xor
loopne
mov
rolb
push
push
adc
add
lahf
addr16
call
cmp
sbb
or
push
pusha
sahf
addr16
js
gs
fadds
in
cmp
movsb
cli
pusha
decl
add
nop
add
call
mov
add
sbb
enter
or
js
push
push
in
xor
jns
lahf
pop
add
jl
add
loopne
les
sarb
push
cld
jns
sbb
iret
sub
mov
and
sbb
vmread
inc
lret
jmp
jecxz
inc
gs
mov
or
in
out
loopne
add
jo
add
lods
shrb
jne
pusha
mov
sarl
pop
mov
sarb
andb
add
xor
cs
sub
cltd
or
jo
inc
dec
ds
xor
pop
push
cmp
push
or
out
in
inc
fchs
leave
push
mov
xor
mov
jbe
sbb
push
inc
rolb
inc
call
dec
adc
jno
lock
add
xlat
xchg
add
xchg
jo
add
push
pop
push
mov
sbb
outsb
push
das
in
or
sbb
xchg
push
addl
cmp
mov
add
jle
and
inc
ret
add
xchg
imul
rolb
sbb
sbb
js
add
xorl
cld
insl
lods
cmp
sti
adc
js
sbb
fld
inc
test
cmp
rcll
lds
fcoml
pop
mov
call
cmp
pop
ljmp
add
or
wbinvd
sbb
inc
jle
add
mov
dec
sub
out
inc
sarl
mov
and
lahf
pop
addl
icebp
cltd
pusha
aam
add
mov
lock
rol
inc
loopne
ret
clc
add
xor
cwtl
add
xchg
add
les
jle
add
loope
push
add
push
sbb
clc
sbb
movntps
in
mov
das
lods
sub
add
cmp
cmp
add
push
pop
jo
xor
push
inc
sbb
jp
dec
pop
pop
loopne
sub
adc
add
js
sub
cmp
cmp
inc
pop
mov
arpl
push
loop
pop
scas
add
pop
mov
push
cmp
jae
add
sbbl
vmread
js
jge
repz
xchg
pop
iret
fadds
sti
push
lods
and
add
xchg
fldl
sub
xchg
add
mov
loopne
ss
hlt
or
rcll
std
jo
testl
test
shl
in
pop
popf
jmp
loopne
outsl
xchg
xor
addb
cmpsl
pop
jae
test
pop
lock
stos
jl
js
jge
enter
movsb
nop
push
mov
add
pop
mov
aaa
ds
add
mov
nop
mov
cli
pop
out
and
push
add
mov
loope
ret
mov
add
xchg
jo
pushf
or
add
rolb
pop
inc
jecxz
xchg
cmc
clc
sbb
mov
inc
ret
jle
arpl
xor
jae
dec
add
ds
or
addl
gs
adc
aad
inc
mov
or
pusha
cld
pop
sub
jo
mov
incl
inc
inc
push
lahf
popf
sub
or
xorl
mov
jbe
insl
and
daa
push
lock
loopne
pop
shll
pop
adcl
dec
cmp
insb
adc
or
fcomp
cwtl
and
iret
push
stos
push
rolb
inc
ficomps
roll
loopne
aad
push
in
mov
jmp
pop
in
inc
mov
shlb
adc
mov
add
mov
jp,pt
repz
sbb
mov
xchg
ds
mov
or
int3
add
in
mov
dec
loopne
shlb
mov
xor
in
mov
orb
in
and
pop
pop
xchg
pop
mov
icebp
add
add
add
sbb
or
add
cmp
clc
xchg
adc
test
pcmpeqb
jns
add
les
inc
sarl
je
add
arpl
testb
xorl
aaa
mov
or
in
js
add
cmp
popf
pop
ficoms
pop
xchg
test
sub
addl
dec
test
dec
sbb
dec
mov
out
xchg
add
in
fwait
andb
mov
add
jb
or
or
sbb
xor
adc
out
clc
xor
repz
add
leave
test
add
jae
pop
daa
add
mov
pushf
sbb
outsb
pop
fsub
leave
and
add
mov
addl
mov
inc
aas
stos
stos
add
ret
cmp
repnz
cld
in
adc
jb
sbbl
and
or
add
xor
sbb
enter
pop
ret
adc
fmull
and
cmpb
cli
push
call
lock
inc
and
push
nopl
inc
cmp
xor
paddsw
aam
sbb
or
inc
inc
rolb
leave
rolb
addr16
out
sbb
loopne
lds
add
mov
pushf
icebp
call
prefetch
or
pop
test
add
sub
out
dec
adc
add
addr16
cld
and
icebp
jo,pn
adc
addl
mov
add
clc
pop
jge
loop
dec
add
lret
div
pop
jo
movsl
add
outsl
es
pusha
lods
lock
inc
int3
repz
das
and
or
adc
ret
loope
js
inc
add
orl
inc
clc
push
jp
jg
scas
mov
call
aam
jecxz
hlt
ret
inc
outsl
mov
insl
adc
cmp
loope
push
inc
vmwrite
lahf
add
add
xor
icebp
add
xchg
lock
push
flds
loop
mov
add
jl
xor
pop
mov
xchg
std
add
sub
test
add
push
cmc
inc
cmp
test
xor
push
jmp
fdivp
cmp
pop
rclb
sarb
jne
add
sbb
jle
clc
and
test
andb
out
push
or
sub
repnz
in
inc
xchg
or
inc
inc
cwtl
lods
add
subb
adc
jg
add
and
cmp
aad
loopne
je
sub
sub
in
pop
adc
pop
je
push
icebp
cmc
mov
add
iret
js
push
cmp
roll
push
and
out
cwtl
mov
or
in
inc
test
adcb
adc
add
scas
das
ds
jno
or
sti
xor
add
sub
mov
jl
movb
jecxz
and
in
dec
je
gs
mov
push
sbb
add
push
add
add
sbb
inc
cmp
inc
orb
add
enter
add
mov
inc
pop
adcb
and
sbb
adc
mov
inc
add
lods
adc
push
mov
mov
push
test
dec
xchg
sub
push
ret
xchg
push
add
push
add
sub
and
ret
or
popa
add
outsb
aas
pop
mov
and
mov
cmp
popa
pop
shrl
inc
lock
add
and
jns
outsl
and
fsub
or
ljmp
push
jne
dec
add
dec
cmp
mov
in
add
dec
jp
imul
mov
sbbb
cmp
sar
hlt
adc
ret
jge
xor
fildl
push
or
loope
adcb
jne
inc
sbb
pusha
xlat
mov
add
cmp
clc
xchg
or
iret
ja
inc
mov
add
in
inc
pop
les
cmc
loop
push
dec
inc
cwtl
add
or
xchg
mov
adc
addb
cli
cmp
insb
adc
jecxz
clc
andl
xchg
out
add
or
aas
insl
js
fsub
mov
add
stos
mov
pop
or
inc
mov
push
mov
xor
dec
push
adc
ss
adc
or
sub
dec
push
in
cmp
xor
pusha
add
xor
sahf
icebp
mov
js
inc
add
in
add
cmpb
stos
add
std
push
jne
pop
xor
pop
fildl
daa
and
out
dec
push
addl
cld
ret
or
pop
aas
int3
dec
push
adc
pop
xchg
sbb
fstpl
loop
out
in
lds
inc
push
in
push
sub
pop
data16
ja
mov
inc
add
sbb
pop
xor
pop
es
repz
add
sahf
dec
cmp
pusha
cmc
jno
outsb
jecxz
jo
cmp
jle
ds
pusha
inc
add
orl
pushf
arpl
ljmp
in
stc
pop
add
fcmovb
jne
jns
or
mov
jmp
sti
fadds
push
call
jo
add
dec
stc
mov
pop
dec
loopne
add
in
pop
orl
loopne
cmp
push
add
lret
subl
push
push
xchg
pusha
jb
lock
sbb
inc
dec
repz
push
push
cmp
xorb
popa
pop
add
push
mov
loope
sub
inc
inc
pop
arpl
movsl
add
and
push
jo
dec
dec
mov
sbbb
and
cmp
push
mov
pop
test
and
jp
mov
push
add
test
pop
push
mov
fsubrs
add
rorb
dec
and
addl
jae
cmp
shlb
mov
pop
push
adc
adc
or
xor
dec
mov
cmpsl
mov
lock
pop
fmull
shll
sbb
jo
add
or
or
pop
bound
push
add
movsb
cmpsl
or
test
sbb
bound
mov
shl
add
add
fwait
or
cmp
rcll
add
xor
sub
jnp
dec
repz
mov
push
add
roll
inc
jl
dec
popa
sbb
push
mov
mov
add
xor
nop
rcr
orb
jecxz
add
imul
lahf
inc
arpl
addl
ljmp
xchg
cwtl
add
sub
adc
jo
cs
int
pop
xchg
jecxz
pop
fstpl
add
into
aas
add
mov
std
and
addb
cmp
mov
cmp
cmp
sbb
stc
lea
add
add
add
pandn
fsubs
stc
loopne
mov
pop
loopne
psubq
stc
shr
mov
sbb
add
jl
add
mov
mov
add
add
testl
daa
popa
add
out
xchg
xor
inc
roll
add
pop
dec
mov
or
sub
mov
out
ficoms
adc
hlt
sub
dec
and
and
in
add
sbb
rclb
mov
sub
push
enter
adc
mov
frstor
and
add
mov
add
add
add
loope
or
push
and
das
pop
or
xchg
in
inc
movsb
sbb
addb
pushf
add
jbe
add
test
add
or
in
jnp
int3
inc
fdivrl
jo
pop
push
xorb
add
jecxz
js
push
clc
adc
testb
dec
sbb
into
xorb
sub
test
andl
data16
or
aaa
fs
ja
icebp
mov
sbb
add
mov
pusha
and
jg
mov
mov
orb
pop
fs
inc
add
or
test
or
sbb
mov
rorb
dec
mull
add
cwtl
into
cld
mov
loopne
sbb
cbtw
inc
add
pop
bound
aam
add
je
pusha
rcr
pop
nop
fdivrs
sub
add
repnz
lret
or
movl
in
mov
addb
inc
jbe
dec
add
push
adc
fwait
cmp
aaa
jnp
and
aad
js
adc
adc
jns
xlat
andb
add
lret
jecxz
shlb
push
out
shll
adc
jne
xor
xchg
inc
shrb
shll
push
pop
and
sbb
jo
push
add
es
add
jp
hlt
sub
add
push
cmpb
mov
or
test
push
mov
xchg
fistps
sbb
jo
add
cmpsl
jb,pn
or
popf
add
shlb
cmp
add
ds
or
jle
xchg
or
add
repnz
cmpb
test
mov
mov
or
jno
sbb
sar
rcrb
imul
test
sub
cmp
enter
addb
aas
cmpsl
mov
pop
or
jle
add
fmuls
cmp
test
mull
enter
cltd
cli
sahf
leave
mov
out
stos
pslld
or
fs
cmp
sarb
add
xchg
jl
push
clc
aas
pop
hlt
lcall
or
test
add
jmp
cmpb
lock
mov
sbb
pop
push
jno
es
lcall
jl
sarb
int3
sbb
cmp
sahf
or
mov
out
jno
xchg
out
cmp
bound
rclb
cli
loope
pop
push
jge
and
push
mov
mov
addl
stc
test
add
cmp
in
lods
filds
add
stc
fcmovnb
jae
jo
add
or
sbb
or
push
ds
cs
clc
aaa
push
adc
mov
sub
jecxz
arpl
roll
popf
pusha
or
jbe
js
popa
call
xchg
pop
pop
inc
andl
push
xchg
cmp
sbb
lock
dec
rorb
or
pop
mov
cs
add
out
adc
das
loopne
jp
pusha
fcoms
out
nop
dec
inc
scas
and
sahf
push
pushf
sbbb
cmp
cmp
lods
xchg
add
out
jecxz
popf
mov
adc
jl
inc
jp
add
rcrl
sbb
cmp
lahf
ja
sub
test
notl
nop
popa
add
decb
jb
add
push
psrad
push
leave
in
and
jo
or
inc
orb
mov
inc
add
mov
in
mov
ss
mov
jle
cmp
push
outsl
cmp
orb
add
pop
fists
cmpl
add
arpl
cmp
cmp
pop
inc
pusha
push
cmpsl
icebp
pop
rolb
and
inc
lea
dec
dec
xor
lret
xor
push
or
jecxz
ljmp
adc
adc
ds
loop
cmp
add
pop
sbb
movsl
fldcw
scas
loopne
pop
add
scas
mov
push
repnz
mov
add
aas
rclb
cmp
push
jge
fs
ss
jl
bound
xor
xor
popa
add
mov
gs
mov
cmpsl
push
add
les
xchg
dec
push
adc
pop
xchg
daa
int3
cmp
das
shlb
into
push
or
mov
mov
rcl
or
add
sbb
pop
xor
test
addl
ss
fs
or
testl
or
add
sub
ret
movb
shl
mov
mov
and
or
clc
pushf
icebp
in
add
hlt
fcomps
xor
shlb
xor
mov
movl
cmp
push
ret
sub
enter
push
incl
lock
punpckldq
repnz
jne
ret
out
cmp
je
aaa
add
stc
aad
add
add
pop
sub
xor
fmull
sub
test
cmp
mov
jns
xor
dec
cwtl
pusha
mov
ret
add
in
bsf
loopne
js
in
push
pop
lock
jecxz
loopne
outsl
add
mov
adc
inc
jmp
cmp
add
icebp
add
sbb
arpl
sarl
xor
mov
mov
test
jae
pavgb
popa
lahf
inc
clc
mov
lahf
repnz
mov
jno
lock
pusha
cwtl
mov
jl
add
cmp
sub
sbb
add
mov
push
pop
cmp
mov
jo
aam
pusha
test
jno
push
add
inc
punpcklbw
mov
mov
pushf
dec
and
adc
jp
ss
push
aas
mov
call
out
add
adc
add
mov
pusha
std
jg
adc
xorl
sarb
fisttpl
or
xor
int3
insb
addb
or
sar
and
jl
add
leave
mov
mov
popa
out
divl
ret
clc
nop
xchg
jecxz
fdivrs
call
orl
popa
and
lret
or
cmp
inc
add
call
mov
icebp
add
movsb
mov
cmp
jge
adc
inc
mov
jo
jecxz
pop
add
add
das
or
add
call
shlb
add
mov
jl
das
add
pop
xor
les
mov
add
add
incb
roll
jbe
shlb
sti
dec
push
pop
add
pusha
stc
jp
test
add
sahf
outsl
cld
lahf
ficompl
pop
add
inc
jnp
scas
enter
insb
ds
xor
pop
fwait
add
fucomip
cmp
lock
lea
xor
cli
out
sbb
andb
add
insb
stos
add
xchg
add
arpl
push
mov
fdiv
and
dec
std
shl
jp
shlb
cmp
mov
pop
push
adc
add
shl
push
adc
pop
loopne
clc
add
pop
push
repnz
pop
mov
mov
sbb
leave
shll
outsb
jg
lock
add
dec
or
out
nop
mov
pop
mov
es
les
jb
push
mov
add
shll
add
sub
or
out
add
aaa
jnp
sub
repz
add
stos
adc
add
inc
inc
test
jl
ret
lds
data16
cmp
push
out
add
or
popl
mov
and
push
and
aas
sar
jl
nop
xchg
pop
ds
sbb
rolb
incb
add
push
iret
cld
cwtl
mov
loop
je
nop
push
les
mov
fsts
in
add
fwait
pop
add
mov
jbe
cwtl
or
jae
and
push
and
cmp
mov
pop
aas
enter
jl
add
lock
js
mov
xchg
or
mov
pusha
leave
les
adc
mov
xchg
and
xchg
dec
pop
rolb
pop
sbbb
aas
jg
sarl
ret
int3
sub
imul
mov
or
int3
sarl
add
xor
cwtl
mov
test
inc
adc
cmp
js
add
loope
push
xchg
mov
lret
and
clc
cmp
or
or
test
dec
rorb
out
push
adc
sub
out
mov
xor
lods
add
or
pop
mov
and
daa
adc
loop
js
or
sub
push
pop
add
rol
testb
dec
add
and
out
add
mov
dec
push
add
lahf
pop
mull
push
pusha
add
sbb
dec
daa
popl
sub
mov
jo
inc
jecxz
mov
cltd
mov
repz
bnd
xor
adc
sbb
sub
or
xchg
adc
add
pop
or
cmovbe
or
jne
mov
out
lahf
sarb
and
add
push
das
push
pop
and
jg
sbb
xchg
ret
add
fistpl
sbbb
add
jl
pusha
xlat
pop
out
inc
lahf
push
insb
cmp
sub
adc
icebp
test
jo
sbb
dec
fldenv
test
xor
repz
or
test
fimuls
add
les
adc
mov
sarb
iret
es
hlt
mov
mov
aaa
adc
outsb
in
inc
jns
add
pushf
je
insb
loopne
loopne
cmp
push
mov
cmp
xor
inc
inc
pusha
scas
nop
add
xor
fwait
cwtl
fs
in
sbb
cld
out
imul
jo
out
repz
pop
sahf
xor
mov
neg
shlb
mov
js
add
xor
es
add
shll
add
cmpsl
add
pushf
ret
test
test
je
lcall
and
jge
popa
jecxz
mov
pop
js
loope
or
add
add
in
push
or
insb
in
jo
sbb
jae
add
pop
jge
rorb
insb
push
sbb
push
sbb
cmp
cld
xor
call
mov
add
push
pop
adc
jne
add
xchg
jo
add
inc
adc
sbb
push
jle
popa
xchg
mov
cmp
inc
jl
loopne
sahf
pop
or
pop
and
adc
xor
repz
jle
cmp
adc
or
and
mov
outsl
scas
cmp
sub
orl
adc
and
test
pushf
mov
icebp
mov
sbb
pusha
mov
add
das
mov
std
clc
enter
dec
lods
or
or
stos
add
adc
push
sbb
xchg
in
lret
adc
add
nop
repz
loopne
add
es
pop
mov
cmp
cs
cwtl
adc
loopne,pt
aam
jnp
add
push
jne
repz
xor
aas
negl
call
pusha
mov
adc
rol
das
jae
push
ficomps
sub
lock
push
jg
sti
jl
xlat
cs
in
pushf
test
xchg
and
mov
ds
testb
movlps
pop
mov
add
adc
pop
shlb
jge
mov
loope,pt
add
ja
loopne
lret
icebp
or
bound
add
xlat
fucomp
test
loope
pop
inc
addr16
add
mov
add
xchg
add
mov
subb
loope
cmp
jno
pusha
push
inc
pop
ror
es
push
setg
out
add
das
pop
iret
cmp
inc
add
xor
and
testb
shlb
nop
pop
call
mov
jno
pop
pusha
hlt
inc
inc
add
cmc
shrb
adc
mov
mov
push
pop
inc
push
outsb
cld
inc
add
add
mov
out
inc
push
popf
js
jno
pop
add
jns
adc
loopne
dec
and
addb
adc
xchg
dec
add
cmc
mull
fistpll
icebp
mov
daa
cmp
add
sbb
add
cs
sti
jnp
mov
loopne
adc
adcb
pop
sub
dec
ficompl
shll
js
stc
call
lret
and
addr16
cs
and
mov
out
pushf
add
jl
cmpl
dec
je
lock
mov
adc
adc
and
mov
push
mov
ds
mov
add
test
loopne
push
std
pop
cld
and
add
jp
mov
and
aas
mov
leave
cwtl
adc
add
repnz
into
pop
xchg
xor
add
or
jl
cli
nop
daa
mov
fmuls
xlat
in
addb
loope,pn
and
jecxz
daa
lock
add
and
and
stc
add
mov
or
mov
or
inc
sbb
pop
cld
fdivr
add
ret
ds
xlat
das
add
xor
jb
mov
add
sbb
sub
pop
jbe
hlt
imul
mov
jo
add
bswap
daa
mov
jge
icebp
xchg
lock
repz
imul
repnz
iret
enter
jnp
mov
ret
mov
sbb
leave
mov
rcr
pop
fdivl
mov
inc
iret
or
add
mov
push
push
test
cmp
repz
sub
incb
js
pusha
testb
jae
jo
rolb
sahf
pop
test
mov
in
add
dec
sbb
fadds
sbb
clc
shl
nop
dec
add
orb
inc
mov
jo
in
add
inc
imull
pop
popf
xchg
push
jle
push
cli
roll
add
or
push
or
xor
mov
push
xlat
mov
scas
add
out
cmp
in
jecxz
add
mov
add
fmul
add
add
jge
add
lahf
mov
dec
and
test
sahf
sub
mov
pop
daa
push
jl
inc
pusha
aam
xorb
repnz
faddl
inc
cld
cwtl
mov
sub
subb
sahf
xor
pop
test
hlt
clc
add
or
ret
fsubs
pop
jne
in
clc
push
jmp
test
jecxz
push
mov
repz
jno
int3
add
pushf
outsb
cmpsb
ds
mov
test
addr16
cmpsl
out
roll
test
ret
xchg
mov
jge
popa
addr16
test
lods
das
add
jae
mov
repnz
outsl
add
jb
cmp
jp
daa
loope
or
roll
out
mov
add
sti
xorb
pop
and
mov
mov
cmp
cld
pop
mov
inc
andb
add
shll
popl
mov
mov
jmp
dec
add
nop
cmp
cltd
orb
xor
push
adc
cmp
add
mov
fildl
mov
xchg
repz
clc
mov
add
xchg
sub
dec
add
add
dec
xor
pop
mov
mov
add
mov
xor
add
nop
mov
push
adc
cmp
fidivrs
pop
add
jl
js
lock
sbb
push
lahf
test
rclb
adc
aad
adc
daa
sub
stos
jno
xchg
mov
psubb
mov
popf
orb
and
mov
and
cs
dec
stc
add
cmpsl
popa
sbb
repz
mov
outsb
movsb
dec
jae
or
mov
das
add
jnp
hlt
fs
adcb
mov
pop
lock
cmp
jmp
cmpsl
mov
pop
xor
inc
fdivrs
adcb
xlat
sbb
iret
sub
mov
out
pusha
and
inc
mov
fists
shlb
xchg
adc
mov
inc
add
mov
sar
loopne
cmp
push
enter
cwtl
rcrl
mov
mov
sbb
add
inc
outsb
add
push
jns
lock
sahf
push
clc
aas
push
add
cmp
out
jp
cmpxchg
or
push
adc
jge
xorl
add
aam
cmp
js
cmp
ficoms
lret
imul
adc
inc
dec
mov
dec
pop
or
dec
lsl
ficoml
xor
shrl
cmp
xor
add
push
jle
push
mov
popf
sbb
pop
divl
jo
cs
mov
lcall
cmc
out
out
sbb
lea
enter
push
imul
das
pop
xor
xchg
add
add
aam
pushf
cmp
pop
or
call
sbb
sub
mov
cld
rolb
mulb
xor
xor
jle
sar
insl
inc
xorl
pmuludq
add
shlb
shlb
aad
pop
cmpsl
cmpsb
push
sbb
andb
pop
or
mov
cmp
xchg
or
add
add
cld
or
jg
mov
in
and
pop
xchg
mov
push
scas
loope
mov
mov
add
not
sarb
add
leave
push
ret
adc
sbb
rcrb
or
dec
ret
ja
movsb
loope
mov
ds
loopne
movl
push
faddl
mov
scas
add
pop
js
pusha
aas
adc
xchg
clc
add
sarl
xor
jl
div
testb
or
out
gs
jl
cmp
ss
mov
push
out
pop
clc
dec
lods
loop
cmp
add
repnz
shlb
aas
mov
es
xchg
sbb
sub
shlb
pushf
icebp
fdivrs
sarb
pop
inc
add
arpl
cld
sbb
repnz
inc
pop
in
cmp
dec
aam
add
pop
shlb
cmp
das
pop
mov
insb
push
stos
inc
add
and
sbb
loopne
in
mov
push
jmp
or
jne
mov
xchg
mov
lock
psubq
add
adc
jp
push
fildl
sbb
fnstsw
test
or
mov
inc
imull
xor
jecxz
jge
lock
jle
icebp
push
cmp
adc
inc
clc
add
sbb
push
ret
out
popa
mov
adc
dec
das
ds
lret
or
adc
add
xchg
sbbl
add
cmp
idivl
xchg
out
rcrl
add
pop
xchg
xchg
ss
add
inc
rdpmc
cmpl
mov
sub
mov
xchg
mov
ret
pusha
sbb
add
or
cmpsb
xorb
je
push
icebp
cld
data16
inc
clc
incl
aad
aaa
dec
sub
xor
adc
imull
pop
icebp
inc
test
dec
add
pop
adc
dec
push
aaa
pop
clc
arpl
cmp
enter
inc
data16
imul
lock
cli
scas
add
push
add
lock
loopne
sbb
cmp
dec
js
cwtl
inc
jnp
add
aam
or
icebp
adc
pop
mov
loop
hlt
iret
xlat
jecxz
loope
mov
das
add
dec
rolb
mov
sahf
push
movsb
and
add
mov
adc
test
or
je
ds
ljmp
ret
rolb
lock
cmp
adc
sahf
add
das
lock
pop
lods
clc
pusha
ret
or
arpl
loopne
add
add
or
sbb
add
jge
bound
loop
xchg
dec
cld
fsubrs
jg
out
add
cmp
xor
mov
cmp
mov
pop
xor
add
mov
repz
daa
cmpsl
add
xchg
stos
mov
insb
xchg
dec
jecxz
stos
dec
jmp
add
aaa
jg
xchg
or
repz
scas
hlt
push
mov
outsl
movsb
add
mov
sbb
repnz
mov
cmp
jnp
out
loope
dec
and
adc
adcl
xorb
mov
enter
push
shlb
mov
shll
sahf
pop
and
xor
or
adc
push
pop
mov
cmp
and
aam
shlb
add
jecxz
ret
cmp
shl
pop
call
adc
shll
push
add
adc
xchg
loopne
mov
lock
je
sbb
sbb
and
subb
inc
adc
push
addr16
lahf
push
or
out
mov
sub
jns
outsl
sub
add
jge
add
rorl
add
out
and
jae
stos
in
loopne
roll
xor
outsb
sbb
dec
rolb
inc
mov
or
add
jae
add
stos
or
cmpb
add
int
roll
pop
mov
mov
or
jecxz
mov
add
inc
jnp
mull
add
iret
les
loopne
ss
insb
cmp
mov
mov
cmpsl
jne
cmp
pop
hlt
adc
add
pop
jmp
xchg
add
loopne
mov
add
call
sahf
popf
testl
or
sub
adc
nop
mov
pop
clc
inc
shll
ds
fdivrs
push
sbb
lret
xor
enter
add
pop
jo
push
rorb
cmpl
cs
push
dec
cmp
jo
lds
loop
imulb
mov
fmull
mov
add
adc
sub
leave
inc
xchg
daa
pop
pop
xor
push
jbe
not
add
xchg
ds
dec
enter
adc
flds
addr16
cmpl
in
add
pop
loope
pop
test
push
xor
in
popf
adc
add
sahf
xchg
addb
xor
mov
popl
repnz
roll
jg
xor
cmp
repnz
dec
inc
xchg
inc
js
sub
add
cmp
lods
stc
add
scas
adc
mov
add
push
sbb
cmp
ret
aas
aas
add
movsl
and
add
sub
lahf
jo
sbb
cmp
adc
jle
and
add
cmpb
mov
sbb
push
push
mov
pmuludq
push
mov
rorb
outsb
add
add
movsl
lock
xadd
ret
push
push
bound
mov
mov
pop
aad
out
mov
adc
in
pop
add
xor
adc
mov
stc
add
add
in
insb
jmp
adc
xchg
push
iret
mov
push
xor
adc
jecxz
movsl
sbb
push
inc
jbe
icebp
pop
bound
les
stc
cmp
sahf
mov
cmp
js
mov
mov
iret
add
aam
and
xor
mov
add
mov
lds
lock
dec
sbb
push
or
jo
sbb
dec
or
inc
cmp
pop
cmp
push
pop
sbb
rorb
pop
lds
push
ds
sbb
add
mov
aaa
jl
inc
inc
cmp
mov
jle
lds
xchg
loopne
add
popa
xor
xor
call
daa
mov
lret
mov
popl
push
pop
pop
inc
pop
adc
sbbb
jo
js
loopne
fs
dec
sbb
sbb
sbb
hlt
jne
pop
shlb
lock
inc
ds
xchg
inc
arpl
adc
enter
rcrb
js
inc
add
test
loopne
xlat
popl
add
push
push
add
cmp
divl
jecxz
ljmp
popa
int3
add
push
lock
push
cmp
push
lret
adc
pop
xorb
bound
test
repnz
jb
add
pop
push
adc
mov
add
push
cmp
clts
sbb
leave
loope
sbb
addl
and
push
stos
pop
sbb
fwait
out
pop
rolb
into
add
dec
cmp
push
mov
test
mov
cmp
mov
inc
inc
mov
loopne
cld
movsb
jbe
add
pop
sub
test
pusha
push
or
xlat
add
jl
and
loope
decb
enter
loopne
and
mov
insb
sub
das
add
inc
sub
add
and
jno
rolb
fiadds
adc
ret
clc
popa
dec
add
mov
mov
cmp
stos
loop
lock
and
add
pop
pop
loop
push
out
icebp
add
roll
jne
sbb
int
or
test
hlt
jb
faddl
xchg
adc
mov
in
sahf
fsub
pop
add
filds
popf
cmp
add
jne
in
add
or
es
mov
jl
cmp
inc
cmp
add
stos
fstpl
mov
rorl
push
loopne
sbb
push
add
sti
jg
jge
pusha
loopne
mov
daa
bound
nopl
push
andl
add
ret
les
imul
pop
cli
adc
cmp
rcr
cmp
add
outsl
pusha
push
lock
mov
inc
jo
add
xchg
arpl
add
loopne
pop
cld
ror
adc
xchg
and
in
mov
add
jne
movsl
xlat
mov
sbb
loope
mov
dec
rolb
clc
lret
add
mov
push
rolb
jae
or
cld
and
addl
mov
int3
loopne
mov
iret
ss
jbe
or
adc
subl
mov
add
xlat
negl
cmc
push
xor
jno
cmp
and
lret
add
pop
inc
testl
mov
mov
add
movsb
mov
dec
sub
repnz
pop
js
inc
inc
mov
dec
or
out
xchg
lcall
add
dec
or
dec
adc
cmp
or
jbe
cmp
add
cmp
enter
add
fwait
sbb
jnp
or
test
pop
pop
dec
iret
xor
mov
gs
adc
pop
or
mov
cmp
mov
add
arpl
push
aas
scas
insl
jg
loopne
dec
sbb
sahf
out
or
adc
mov
mov
and
loop
clc
add
or
pop
ja
rcrb
and
shlb
mov
jns
mov
add
test
pop
pop
ds
rcr
cmp
icebp
arpl
pop
test
outsl
jp
sbb
and
aas
add
jae
jbe
ret
fistpll
popl
into
jmp
adc
sarb
mov
popf
inc
dec
in
dec
dec
xor
mov
mov
mov
cmpb
hlt
fsubs
jecxz,pt
idivb
add
dec
int3
sub
negl
mov
sbb
xchg
push
gs
sub
xor
add
jo
cld
lock
inc
out
int3
adc
cmp
jnp
push
add
and
in
jecxz
sbb
mov
inc
pop
lahf
push
add
pop
cmp
pushf
repnz
shll
orl
int
pushf
enter
add
cmp
jb
lock
inc
or
xchg
pop
fcoms
rol
push
out
add
xor
cmc
push
sbb
aaa
lock
pop
into
ds
pop
sub
lret
xor
adc
ret
hlt
inc
jge
add
add
test
add
mov
inc
mov
pmulhuw
cmp
rolb
mov
orl
shl
testb
pop
es
roll
mov
pop
or
jge,pt
or
lret
aad
bnd
cmp
cltd
pop
inc
add
pop
nop
cmp
add
outsb
stc
movsb
loope
pop
xor
mov
add
fcoms
mov
add
movsb
push
sbb
mov
and
insl
or
xor
mov
add
aas
jg
adc
add
mov
icebp
fistpl
mov
test
js
cmp
jo
inc
cmp
shr
je
loopne
sub
add
add
sbb
sub
scas
nop
mov
and
sbb
arpl
adc
fwait
adc
dec
cs
xorb
clc
sarl
rcrb
add
and
jo
jle
inc
hlt
pop
por
inc
sbb
loopne
cmp
cmp
lods
jge
pop
xor
xor
xchg
add
inc
lahf
notl
adc
or
xor
icebp
sub
add
adc
jnp
or
and
jmp
add
add
dec
in
setle
mov
lahf
pop
add
bound
sbb
cmpl
xchg
mov
sarb
and
or
xchg
add
or
sbb
shlb
lgdtl
mov
fdiv
repz
add
fisubs
orb
dec
add
shll
pop
pushf
stc
jo
clc
cltd
add
jl
sbb
pop
sti
adc
or
push
cwtl
inc
lock
jp
movl
cmc
leave
or
lock
or
pop
in
add
test
shr
mov
sbb
cmc
mov
mov
jo
inc
cli
or
xchg
ret
iret
lret
shl
stc
cmp
push
out
out
out
add
movl
xor
arpl
add
icebp
fincstp
cmp
std
and
mov
cltd
add
sbb
mov
sub
and
daa
testl
add
cmp
xchg
test
sbb
fdivs
mov
xor
imul
add
mov
fldenv
push
addb
add
add
sbbl
insl
add
jecxz
cmp
jge
add
mov
add
add
inc
arpl
mov
out
pop
leave
jb
movsb
or
inc
xor
faddl
into
xchg
xor
aas
add
xor
inc
mov
and
add
lock
add
les
dec
scas
lock
mov
add
or
jo
stc
add
inc
push
sbb
nop
loopne
add
bswap
push
inc
fwait
mov
pop
cli
shl
sbb
mov
mov
lahf
fadds
cmp
or
add
jo
clc
xchg
add
xchg
or
add
xor
jno
inc
add
pop
mulb
icebp
scas
jmp
and
cmp
les
ja
testl
mov
enter
mov
mov
xor
loopne
sub
cwtl
sti
mov
add
xchg
pop
push
je
scas
add
repnz
data16
push
xchg
sub
pop
jnp
lea
mov
or
xor
and
inc
fistpl
add
push
repz
add
adc
cmpsl
mov
pusha
mov
push
test
mov
out
add
xor
shlb
sbb
mov
add
mov
and
imul
cmp
mov
adc
inc
pop
mov
pavgw
loope
rolb
cmp
sbb
call
shlb
mov
push
rorl
add
mov
or
fidivs
inc
push
int3
add
push
add
or
dec
ss
cld
inc
mov
dec
cmc
dec
les
lds
iret
inc
loopne
repnz
psraw
mov
pusha
add
pop
call
loop
mov
bound
add
jns
popf
scas
clc
or
sbb
sbbb
jl
add
in
and
loop
mov
push
pusha
icebp
cs
or
negl
in
jl
loopne
in
sub
xchg
cmpb
faddl
cmp
inc
add
adc
insl
imul
stc
jbe
xor
cld
cmp
or
cmc
add
hlt
xor
add
fcmovnbe
cmp
push
push
iret
fistpll
add
pop
or
aam
pop
sti
mov
lods
pop
xor
into
mov
push
pop
rorl
loopne
jo
adc
clc
fsubp
cmpl
sbb
add
inc
in
add
or
sub
add
das
daa
and
xabort
or
pop
out
roll
pusha
testl
daa
mov
and
add
and
icebp
push
xor
add
cmp
add
fcmovnbe
add
or
and
mov
mov
sahf
sbb
mov
ja
negb
sbb
push
add
mov
test
cmp
addb
pusha
or
ret
pop
pop
cld
push
inc
das
inc
ds
jnp
add
adc
out
or
sbb
sbb
aam
cmp
sarl
mov
pop
pop
inc
jle
adc
push
loopne
add
pmuludq
sbb
xor
sbb
nop
or
out
sbb
int
push
aam
fmul
sbb
roll
add
mov
into
call
je
repz
sub
dec
push
mov
icebp
jp
faddp
pop
fdivs
add
sub
out
roll
fildl
add
mov
outsb
shlb
mov
call
shlb
jle
mov
rol
bound
mov
push
add
add
loop
rolb
xor
je
xchg
push
xor
in
push
cmp
push
and
outsb
dec
in
add
sbb
pop
jg
jge
mov
ds
pop
and
fmuls
clc
repnz
popf
jmp
adc
lea
orb
cld
mov
add
mov
xchg
push
add
clc
adc
inc
hlt
sbb
cld
subl
mov
lock
dec
aam
add
jle
jnp
pop
pop
enter
jo
test
add
into
shl
in
loope
and
pop
call
add
aam
lahf
pop
xor
sbb
mov
add
xchg
out
jmp
aam
or
clc
add
jmp
repnz
mov
inc
cmp
add
add
sbb
es
xorb
jl
sbb
dec
sar
and
and
add
mov
add
lcall
jb
adc
shlb
push
loope
add
fcmovnb
and
jp
push
adc
daa
fs
lock
fsubl
ds
lahf
cmp
add
lds
mov
jg
or
repnz
loopne
pop
loop
mov
pushf
mov
ret
leave
mov
or
dec
jecxz
sbb
addl
rorb
add
andl
push
outsl
test
jmp
mov
push
add
mov
dec
loopne
loope
xchg
pusha
cli
push
ljmp
inc
loop
sysret
adc
inc
cmc
call
mov
sub
push
mov
lock
mov
add
jle,pt
sbb
call
movsb
jae
cmp
arpl
jle
mov
adc
aas
js
or
aam
sbb
push
mov
cmp
pop
xchg
mov
popa
inc
mov
enter
fstpt
jecxz
pminub
cmp
cmp
jo
mov
inc
mov
dec
adc
add
pusha
push
sub
or
ds
jne
and
jle
icebp
push
lods
add
and
jp
loopne
pusha
ret
int3
frstor
rorb
mov
pop
sbb
jmp
add
lret
cvtpi2ps
addb
mov
out
pop
and
add
fadds
add
add
mov
sarb
adc
sahf
mov
add
enter
push
mov
push
mov
loope,pn
or
push
add
jp
xor
subl
cmp
aas
and
pop
push
lds
pop
or
cmc
adc
subl
or
shl
lahf
iret
pop
lea
dec
add
pusha
and
repz
cmp
movsl
pusha
pop
or
incb
push
sbb
orl
jmp
pop
push
jo
popa
negb
cmpsb
fsubs
shlb
fdivr
sbb
decb
fidivrs
mov
xor
pop
pop
jbe
push
es
in
or
inc
std
xor
pop
sarb
mov
jle
out
pop
add
js
stos
faddl
repnz
outsl
jno
pusha
hlt
jae
and
loopne
mov
cmp
lock
sbb
jl
or
add
loopne
or
sbb
push
lea
icebp
ja
push
jp
mov
popl
shr
jmp
mov
xchg
bound
subps
jno
or
das
sub
iret
cmp
fsubl
pop
cwtl
add
nop
ds
add
arpl
popf
and
mov
pop
sbb
clc
cmp
std
add
cltd
popa
sub
jp
les
add
addr16
movsb
enter
add
stc
lret
jl
out
scas
and
ja
cmp
xor
ss
test
mov
jg
xchg
fildl
push
pop
int3
and
xchg
mov
repz
push
out
add
add
cmpsl
dec
rorb
sahf
stc
pusha
popf
add
or
push
shll
xor
xchg
jo
lcall
cltd
and
sub
sub
ret
sub
inc
ficoms
fisttps
adc
aad
dec
and
adc
add
add
lock
pop
add
pop
xor
pop
loopne
loop
frndint
push
sahf
adc
arpl
mov
pop
add
cli
stos
and
and
or
out
hlt
mov
ds
rclb
pop
loop
xchg
lock
jno
test
jge
add
orl
add
call
pop
ljmp
push
pop
mov
ret
mov
pushf
repz
inc
test
sub
arpl
test
add
rol
pop
add
call
dec
sub
aas
aas
mov
clc
cmp
mov
shlb
jge
js
cmp
pusha
push
jae
lock
popl
and
push
insl
cli
cmp
jl
add
or
sub
cmpsl
aas
add
into
in
movntq
dec
iret
loopne
jle
lock
or
gs
push
xor
inc
ds
js
mov
sti
inc
loopne
mov
dec
addb
subb
mov
pop
jg
pop
mov
pusha
pushf
pop
cmc
push
add
in
sti
adc
cmp
loope
push
ja
ret
bswap
out
add
jno
jp
jl
loope
addl
cmpsl
add
repz
cmc
add
and
cmp
adc
mov
shl
les
jnp
es
jns
add
popa
int
addl
leave
in
roll
xchg
cmpb
mov
jge
sbb
scas
jo
hlt
add
mov
pop
dec
push
pop
pop
jl
add
jns
cmpsl
push
add
adc
inc
push
dec
or
sti
ret
and
rcr
inc
test
mov
vfrczps
add
dec
or
inc
testb
add
fldl
push
or
cld
add
sbbb
mov
dec
packuswb
add
mov
mov
or
xor
or
xchg
out
ljmp
leave
sub
shlb
lock
jg
mov
cmpb
jns
and
inc
insl
mov
mov
push
dec
addr16
lahf
and
push
add
mull
cmp
pop
outsl
jne
push
loopne
adc
mov
push
clc
dec
mov
add
cli
rol
adcb
mov
xor
lahf
xor
jp
bound
push
cli
push
out
xor
ljmp
sub
in
iret
inc
add
dec
pusha
aad
jno
add
and
or
xchg
dec
outsl
mov
cmp
mov
inc
dec
fidivrs
fsubl
or
js
add
mov
or
sbb
cmp
cmpsl
invlpg
scas
or
js
insb
xchg
aam
test
jl
xor
jae
stc
mul
iret
test
sub
xchg
inc
pushf
ret
or
inc
sbb
cmp
shll
pop
arpl
add
add
sub
push
fcom
cltd
sbbb
add
adc
xor
ret
lds
repnz
adc
xor
and
and
ret
inc
mov
cmp
fidivrs
mov
aas
push
and
add
push
lods
add
rcrb
ja
add
cmp
cmc
add
ja
add
sbb
cmp
or
iret
ds
xor
cwtl
testl
js
add
loopne
lock
add
addb
sbb
fdivl
in
inc
nopl
lock
mov
add
mov
in
mov
fildl
fdivl
or
ss
jecxz
pop
jnp
jb
xor
pop
pop
int3
fadds
out
xchg
and
push
sub
popa
or
adc
icebp
add
add
ljmp
shlb
out
inc
dec
jmp
inc
add
mov
pop
daa
clc
lods
ja
add
inc
mov
out
add
aaa
mov
xchg
add
shll
pushf
add
mov
dec
lds
jge
pop
js
xchg
and
icebp
div
sub
ret
jb
in
movsb
bound
inc
pusha
sbb
loope
lock
add
jecxz
addb
jge
call
cwtl
rolb
jno
add
pushf
and
mov
call
or
sub
jecxz
or
iret
inc
gs
push
xchg
fimuls
jl
jp
repnz
lea
inc
xchg
nop
pop
mov
ds
mov
jno
mov
insb
fadds
and
into
lock
repz
in
add
jo
popa
dec
or
hlt
add
push
add
mov
dec
test
sbb
jge
add
push
mov
pusha
arpl
nop
add
sbb
outsl
sahf
sbb
add
mov
push
mov
or
push
cmp
cld
add
call
jle
ljmp
lahf
push
outsb
inc
add
push
shlb
add
ds
jne
inc
add
iret
int
mov
pop
jl
lea
cmp
bound
es
push
add
mov
test
push
add
ds
test
jmp
loopne
inc
popf
inc
lods
jecxz
in
pop
add
orb
lock
out
sub
loopne
jb
jo
push
jl
sub
or
ljmp
insb
out
fiaddl
cmp
or
xchg
add
shll
shr
mov
or
mov
test
push
mov
stc
xor
in
loope
sbb
sbb
psubd
push
pop
add
jae
xor
repnz
int
dec
call
scas
xor
in
add
sarl
xor
mov
push
fnstsw
jge
push
add
lods
adc
repz
inc
xor
lock
lret
arpl
into
xlat
add
ss
js
jl
divb
es
or
shlb
cmpsl
or
and
xlat
arpl
hlt
add
sbb
ret
jge
shl
popf
cmp
popf
and
xor
jne
mov
add
movsb
mov
mov
lahf
mov
add
nop
dec
cmp
xchg
jns
jae
add
xor
cmp
test
icebp
xchg
hlt
sbb
dec
jg
add
pop
jns
repz
shll
icebp
js
cmp
xchg
bound
cwtl
inc
jae
jle
adc
cmp
jp
gs
leave
int3
and
cmpl
scas
hlt
shlb
mov
push
sbb
and
xor
push
cwtl
sbb
sbbb
lock
push
or
call
lret
add
test
add
iret
hlt
mov
cmc
sbb
popa
movb
mov
inc
push
jl
push
out
mov
mov
out
mov
sahf
jo
or
push
push
or
or
movsb
dec
clc
mov
inc
jno
push
int
ficoms
dec
cmp
add
cmpb
js
cwtl
int3
jbe
add
notl
add
test
jle
mov
js
mov
xchg
arpl
addb
ljmp
pop
addl
in
push
sub
lock
push
cs
cmp
cmp
ds
add
ja
loopne
sbb
adc
loop
add
sub
push
sub
jbe
pop
or
add
pusha
rcrb
out
jb
ror
add
cs
pop
pop
pop
jo
add
cmp
push
add
xlat
inc
pop
push
fsubs
ret
xor
push
push
push
inc
mov
adc
in
cmp
push
mov
jo
lods
add
mov
lidtl
adc
jae
cmc
sbb
mov
adc
das
push
in
and
decb
pxor
dec
push
repz
xor
les
add
and
aas
xchg
cwtl
stos
aas
mov
adc
add
daa
add
mov
or
adc
mov
ds
loopne
pop
ljmp
adc
in
or
iret
xchg
cwtl
mov
test
pop
xor
sub
adc
lock
adc
cmpl
pop
jne
adc
sbbb
aas
push
fadd
repnz
daa
and
subps
inc
in
sub
dec
mov
maskmovq
lds
rolb
jo
sub
mov
or
loop
clc
daa
hlt
xorb
repnz
inc
cmp
clc
filds
idivb
pop
inc
mov
aam
mov
jae
and
inc
or
popf
sarb
jns
xorl
addl
scas
leave
or
outsb
sub
in
adc
or
pushf
or
pop
cmpl
lds
inc
into
and
mov
sti
pop
cli
fadds
shr
jecxz
push
push
popa
dec
ja
rcrl
cmpsb
arpl
add
outsl
in
cld
pop
shl
das
cmp
mov
adc
jp
scas
dec
mov
addr16
sub
jo
cmp
mov
xchg
les
lea
repnz
inc
adcb
add
or
jmp
orb
add
xor
push
int3
cmpsl
add
iret
jp
push
lahf
jns
insl
call
out
sarl
arpl
sbb
pop
pop
cmp
aam
or
test
and
xor
add
push
pshufw
pop
cmpb
addr16
loopne
add
inc
xor
in
jge
xor
pop
add
shll
loopne
or
add
dec
lahf
jge
rorl
lock
rcrb
add
sarl
iret
mov
inc
xlat
inc
push
pusha
cltd
pop
loopne
sbb
and
popf
and
and
sbbb
pusha
or
cs
push
movhlps
pop
and
mov
int
pop
mov
cwtl
xchg
add
in
into
push
push
and
hlt
inc
cmp
sbb
add
pop
add
subb
imul
test
adc
push
add
imul
ss
lahf
sbb
or
subb
daa
icebp
sub
add
lea
xchg
pusha
jbe
arpl
push
or
mov
xchg
or
int3
sarb
lahf
ret
sbb
cmp
sti
cmp
in
or
je
push
mov
jns
push
jno
lock
rorl
adc
push
dec
out
icebp
cwtl
sahf
sti
cmpb
xor
add
jl
repz
addl
or
popa
dec
inc
xchg
shlb
xlat
push
pop
lahf
and
jle
add
mov
add
xchg
loope
loopne
pop
pop
xor
std
subb
push
rolb
and
push
popf
sbb
add
adc
and
jl
add
cmp
lock
xor
sbb
add
fistpl
cmp
addb
adcb
iret
mov
xor
out
fldl2t
xor
mov
shll
nop
add
or
sub
push
xchg
scas
and
insl
sbb
mov
jo
stc
inc
and
inc
add
xor
mov
jb
sbb
mov
orb
sbb
mov
out
add
dec
mov
daa
mov
sub
inc
fidivl
add
xor
push
ja
nop
cmp
sbb
out
dec
aad
cmp
pop
jmp
add
sub
in
xchg
mov
les
sub
inc
popf
clc
loope
mov
or
add
popl
dec
bound
mov
jnp
mov
hlt
pusha
mov
inc
xor
add
loope
add
mov
addb
mov
inc
popa
mov
sbb
repz
add
movsb
rcll
xchg
ud2
add
pop
jg
iret
inc
inc
out
pushf
add
mov
icebp
xor
or
cwtl
call
btc
add
call
or
sbb
and
orb
push
add
push
and
jge
roll
push
loope
or
push
mov
push
add
cmp
pushf
iret
insl
jo
add
js
repz
cmpb
sbb
xchg
add
sub
pop
cmp
lret
pop
stc
jo
sarb
cmpl
cld
cwtl
pop
cwtl
sub
jno
fnstsw
xchg
add
inc
sbb
and
unpckhps
clc
push
adc
out
jno
loopne
jge
in
add
icebp
or
out
add
adc
dec
adc
sbb
ret
rolb
sbb
push
push
mov
add
outsl
pop
lock
aas
pop
sarb
rol
cmp
mov
pop
pop
stc
add
cmp
cmpl
mov
mov
push
into
inc
cwtl
inc
and
mov
add
cmp
inc
loopne
pop
mov
push
xor
add
insb
incb
ret
cmp
sar
in
xchg
cmp
xor
outsl
loopne
dec
inc
aaa
mov
cmp
mov
push
xorb
iret
shlb
sub
in
mov
mov
shrb
fsubs
pop
jl
arpl
dec
nop
ds
sbb
add
mov
sbb
aam
call
or
rcrl
mov
pop
jle
mov
ficoms
mov
and
into
mov
lahf
add
adc
and
aas
call
fsub
mov
mov
pop
adc
decb
pop
xor
and
dec
add
jae
add
jns
inc
jae
add
roll
sbb
shll
jns
sbb
sbb
sbb
mov
or
into
add
jo
rolb
cmovb
add
sahf
add
pop
adc
pop
and
cmc
movsl
add
orl
add
push
out
lock
xorb
adc
xorb
adc
jne
mov
clc
cmpsl
pusha
pop
or
ss
cs
add
push
clc
sub
pop
add
and
push
cmp
clc
add
sbb
pop
sub
inc
pop
test
or
add
inc
or
add
popa
into
ret
mov
cmp
pushf
repnz
lret
ljmp
xor
sub
notb
paddd
call
scas
add
sbb
sbb
insb
jge
cmp
in
popa
add
xorb
jp
push
fstpl
rclb
fsub
push
sbb
add
jnp
sahf
fstps
add
adc
out
pusha
add
in
orl
inc
sarl
repnz
cld
das
pop
add
lea
aam
or
pop
inc
dec
jmp
in
xchg
lods
pop
mov
xchg
rolb
dec
cmpsl
add
adc
or
or
fidivrl
jne
loop
inc
or
scas
push
push
pop
mov
lock
clc
call
cmpsl
sbb
repnz
ret
cmp
dec
pop
bound
jecxz
fisubrl
jae
nop
inc
pop
addr16
xor
jp
rclb
popa
lea
add
int
hlt
lods
movsb
sub
sbb
stc
cmpb
jae
pop
subl
xor
in
aam
xchg
pop
mov
aad
push
add
push
mov
dec
inc
js
pop
clc
sbb
adc
dec
or
out
mov
sarl
int3
fs
or
xor
and
sbb
xor
jg
mov
jbe
mov
add
fldpi
dec
in
add
sub
pop
adc
idiv
nop
or
sahf
ret
add
lea
mov
cmp
pushf
cld
jnp
verw
and
sub
sub
les
daa
jl
cmpl
xor
pop
fadds
mov
or
icebp
adc
add
loop
mov
mov
cwtl
pusha
movsb
sarl
call
or
inc
out
cmpb
cmp
loopne
lods
jmp
pop
dec
sbb
mov
push
and
sbb
add
push
fldt
adc
push
popf
fnstsw
dec
cs
shl
push
cmp
inc
out
cltd
or
sbb
je
pop
mov
aas
fiadds
xchg
repz
clc
or
jge
lahf
out
and
stc
push
pop
sahf
repz
push
pop
mov
movsl
lret
adc
rcrl
flds
add
mov
sub
push
loopne
jo
cmpxchg
add
test
fiaddl
cmpsl
mov
rcrl
jo
or
jns
or
cmp
ljmp
js
mov
pop
push
sub
rorl
add
lcall
sbb
je
pushf
cmc
pop
sahf
dec
iret
inc
imul
mov
pop
into
rsm
cmp
inc
dec
insb
loopne
cmp
push
inc
xchg
push
mov
stos
sbbb
or
int
ljmp
mov
imul
mov
or
pop
fidivrs
dec
clc
push
cs
add
ss
and
and
sahf
pushf
scas
comiss
add
pop
cmpsb
call
inc
or
cltd
or
xchg
jnp
and
mov
inc
loope
cmp
add
add
sbb
add
jns
ds
fsubrl
dec
mov
inc
dec
and
in
pop
mov
jo
jne
in
sbb
arpl
fs
clc
loopne
or
xor
pop
xchg
pop
hlt
add
or
add
mov
jns
inc
add
xor
add
xchg
loop
add
rcl
popa
pop
cwtl
imul
xlat
jo
imul
inc
add
xchg
ds
jns
in
mov
or
mov
adc
fsubrs
add
add
sub
xchg
push
fmull
or
sub
pop
adc
jne
ret
mov
sbb
out
popa
or
sbb
pandn
pop
mov
mov
popf
adc
imul
repz
js
jp
jbe
sbb
sahf
lods
xchg
or
adc
pushf
jns
adc
fdivs
jle
in
das
adc
lock
test
lods
or
sbb
mov
jp
add
add
ja
add
clc
jge
repnz
pop
lock
cmp
in
push
in
in
clc
outsl
das
ret
xlat
pop
incb
stos
negl
lock
icebp
cmp
sub
add
add
push
dec
in
sub
pop
clc
test
mov
add
inc
or
dec
sarl
lock
adc
mov
add
xchg
cwtl
int3
pop
cmp
daa
pop
inc
add
js
cmc
movsl
out
popf
and
mov
imul
sahf
sub
or
add
cmp
jecxz
pop
xor
pop
ret
mov
xor
inc
push
jg
add
shl
loop
ret
xchg
xor
bound
lea
loopne
inc
add
inc
mov
pop
push
movb
adc
cmp
sarl
orb
add
or
mov
cs
sbb
sbbb
cmp
cmp
dec
js
add
mov
sub
lahf
add
addl
scas
cwtl
xchg
shll
mov
inc
pop
aas
xor
mov
push
cmp
loopne
jo
les
pop
mov
pop
mov
jb
fs
add
xor
shll
movb
xor
aam
pop
add
pop
hlt
jmp
iret
out
and
lret
pop
cmp
pop
xor
int3
jl
push
add
inc
fsub
lock
hlt
aam
cld
cmp
sbb
es
test
pop
ret
inc
popf
add
jae
cmp
pop
clc
add
jle
jecxz
push
or
jae
sbb
iret
sub
xor
out
sub
addr16
pop
cli
sarb
jno
int3
xchg
pop
cmpsl
sbb
mov
into
enter
xchg
push
ss
shlb
push
add
lea
jge
lock
xchg
jecxz
js
and
mov
lock
gs
lret
cmp
int
es
bnd
add
jns
test
xchg
mov
or
mov
xchg
sbb
aas
sbb
push
cmp
in
cmp
loope
sbb
jle
repz
xor
cmp
jmp
ds
xor
pop
add
jb
loopne
xchg
mov
cmp
pushf
mov
mov
sbb
add
imul
cld
sbb
fs
jp
stc
mov
cmp
jb
jo
dec
aaa
adc
aad
sbb
add
enter
mov
mov
xor
add
aaa
sbb
push
mov
loopne
in
mov
pop
sbb
push
js
mov
dec
pop
fidivrs
sub
loop
pusha
cmp
icebp
xchg
pop
or
or
pop
ret
lds
pop
repnz
shl
test
pop
orb
push
pop
sub
sbb
add
jmp
add
pop
sub
popf
pop
jl
add
push
cmp
incb
in
push
add
cmp
roll
orl
cld
aam
ret
rcrb
mov
and
or
mov
add
and
mov
test
sbbb
cli
rolb
add
and
xchg
or
lock
daa
out
xchg
inc
jl
mov
add
icebp
or
fs
sbb
cmp
in
divb
cwtl
jecxz
outsb
add
outsb
pop
aaa
add
sbb
xchg
cmp
add
addb
dec
outsl
out
mov
jecxz
shl
jge
cmp
add
roll
or
mov
mov
test
sub
cmp
andps
xchg
push
or
sahf
das
and
and
add
cmp
sbb
push
aad
rorb
jns
pusha
add
clc
mov
iret
add
enter
or
add
add
shl
add
push
and
inc
lds
sbb
clc
push
mov
mov
and
out
lds
sti
add
rclb
inc
andl
pop
xlat
cmp
icebp
jno
jmp
insb
shrl
outsb
daa
dec
push
incb
les
enter
add
pop
popl
add
call
das
sti
add
shl
cmpsb
pop
test
adc
cmp
add
push
clc
inc
sti
fiaddl
gs
add
xchg
jge
push
push
jo
add
pop
or
cmc
sbb
sub
sarl
add
adcl
and
inc
enter
imull
add
fyl2x
dec
xchg
cvtps2pd
es
add
jl
pusha
ret
repnz
fcomp
xchg
clc
jmp
orb
icebp
mov
mov
hlt
js
xor
cmpb
push
xchg
into
lret
push
adc
les
mov
sbb
push
mov
lds
push
addb
data16
push
add
sbb
in
sbb
rcll
icebp
in
sub
add
test
popa
xchg
lock
or
shlb
fmuls
xchg
jo
inc
push
movsb
mov
clc
lret
roll
pushf
xchg
add
xor
sub
out
or
loop
push
pop
sahf
add
push
jp
mov
std
push
cmp
and
loopne
xchg
lret
or
test
lock
movsb
and
dec
inc
mov
sbb
lahf
int
daa
sub
lcall
js
or
mov
rorb
ja
jl
add
push
repz
and
ljmp
jo
int3
sar
scas
dec
mov
and
shr
add
mull
add
into
call
das
push
mov
adc
pop
neg
jmp
jo
xor
or
jae
add
jp
cmp
inc
sbbb
xchg
pop
popa
inc
add
rol
loop
filds
pop
mov
jg
mov
add
sbb
jl
xor
cmp
pop
in
js
ljmp
fiadds
adc
cmp
sbb
test
call
mov
js
movsb
shl
mov
out
or
std
push
stc
mov
push
div
sbb
add
sbb
addr16
push
jle
cmp
jo
insb
loopne
add
sbb
mov
shlb
mov
jbe
sbb
add
movsb
mov
lock
xchg
nop
insb
add
nop
and
movb
pop
add
inc
mov
push
imul
test
scas
jns
cmc
rolb
pop
or
iret
xchg
mov
icebp
enter
les
and
leave
push
cmp
out
addl
jl
sub
xchg
sbb
fucom
mov
sub
outsb
repnz
jno
or
fstps
add
loopne
loopne
jl
dec
add
in
adcb
mov
pop
add
addr16
jl
addl
rcll
cmp
mov
inc
add
pop
inc
mov
cmpsl
and
or
in
fmull
jno,pt
out
sbb
dec
pop
xchg
lcall
push
or
push
xor
pop
cmp
add
jp
adc
ficomps
jge
or
xor
xor
xor
mov
jmp
xchg
pusha
call
add
clc
loopne
mov
xor
cmp
lahf
xchg
mov
fdivl
jecxz
xlat
mov
out
and
xchg
shlb
sbb
cmp
and
cltd
sub
cwtl
add
sti
rorb
and
jo
mov
inc
hlt
push
add
inc
dec
js
imul
iret
std
mov
mov
fcomps
cmp
mov
insb
adcb
mov
inc
add
xchg
and
xchg
test
inc
inc
sarl
pop
and
and
repnz
xor
xchg
das
stos
or
jl
mov
jge
icebp
cltd
add
push
js
call
stc
dec
adc
mov
ss
xchg
jbe
icebp
and
sbb
test
xchg
dec
push
shlb
addr16
cmpsb
icebp
outsb
add
pop
jg
sbb
loopne
inc
jo
xchg
cmp
dec
loope
mov
mov
test
jo
pop
int
jl
adc
andnps
loop
rolb
test
pusha
jne
mov
rorl
sarb
loopne
mov
dec
add
leave
xorb
sbb
add
sti
scas
iret
add
std
aad
jp
pop
jmp
sbb
insb
push
data16
cmp
jecxz
cmp
xchg
or
mov
mov
add
loop
add
lock
mov
sub
pusha
add
outsl
leave
sahf
jmp
out
imul
in
das
add
sti
jbe
add
cld
loop
pushf
mov
mov
stos
sbb
add
mov
int3
test
jecxz
clc
pusha
lahf
jbe
nop
pop
and
lock
pusha
fmull
int3
add
inc
jp
dec
leave
sar
repnz
or
and
add
out
lahf
and
cltd
hlt
movb
les
mov
pop
cli
fs
adc
outsb
mov
xchg
adc
mov
loop
add
fwait
sbb
lods
or
jae
add
cmp
scas
or
loopw
add
xor
xchg
mov
push
pshufw
repnz
shlb
xchg
and
add
and
pop
dec
sbb
stos
or
lock
jo
sar
in
jne
jno
pop
cltd
adc
jl
mov
gs
lea
insb
cld
sub
inc
xchg
jecxz
cmp
shlb
pop
cmp
in
add
sarl
bnd
add
ret
xor
cmpb
ret
mov
add
jle
or
mov
dec
sbb
mov
mov
adc
fcompl
dec
push
arpl
push
mov
add
sbb
vpavgw
jecxz
sarb
mov
in
jle
push
out
dec
fldenv
daa
pop
cli
xor
push
jmp
cmp
rol
sub
add
aas
adc
and
js
ret
aas
inc
mov
test
mov
mov
cmpsb
dec
add
add
jg
lock
in
inc
outsb
nop
add
mov
mov
movsb
cld
mov
mov
into
hlt
and
fsubrs
cmpsl
in
mov
push
sahf
mov
jge
sub
and
je
setl
addl
test
dec
fcoms
xor
ret
cmp
mov
xor
mov
push
cld
mov
loope
cmp
repnz
adc
pop
adcl
sub
sbb
dec
nop
pop
adc
je
add
ds
dec
cmp
sbb
jp
popl
inc
flds
add
out
xlat
addb
jno
sbb
xor
shl
lds
sbb
sub
inc
sbbb
js
loopne
mov
scas
jp
notl
jo
and
mov
mov
jg
repz
cwtl
xchg
outsl
dec
cmpl
pushf
adc
or
loopne
pop
push
add
sahf
add
push
add
pop
pop
cmp
sub
clc
xchg
add
leave
xchg
adc
mov
push
push
add
cmp
stos
xchg
push
jns
add
or
add
popf
ljmp
pop
jp
add
es
sbb
mov
mov
loop
pop
adc
inc
xchg
push
cmpxchg
xchg
aaa
mov
repz
pop
ret
mov
test
out
ret
mov
add
fsub
into
mov
mov
add
pusha
jge
sub
adc
mov
addl
mov
fmuls
ds
or
sar
add
cmp
fdivp
addb
and
xchg
add
mov
out
aaa
data16
into
ret
stc
xlat
inc
pushl
test
xorb
add
xchg
add
push
lock
ret
pushf
add
call
mov
adc
loopne
jns
pusha
jns
push
mov
iret
inc
adcl
fadds
out
dec
psubb
in
loopne
mov
into
add
ljmp
fcmovnb
daa
add
cmp
add
push
into
inc
scas
inc
xor
inc
dec
inc
ds
cmp
stc
or
out
push
mov
push
test
add
push
jge
repnz
cwtl
pop
inc
xchg
lock
add
push
xor
push
sub
nop
push
xor
sar
push
mov
or
loopne
mov
add
cmp
stc
pop
add
jne
add
cwtl
jl
popf
jb
sahf
lods
add
jbe
xor
dec
clc
fs
add
xchg
add
je
jo
sub
adc
daa
add
loope
add
sub
dec
push
push
cld
mov
jns
xor
addr16
jmp
loope
add
mov
addr16
and
in
das
add
add
enter
lahf
xchg
or
lcall
pop
out
jo
fiadds
xchg
mov
push
adc
push
sub
popl
enter
mov
cmp
add
pusha
mov
add
dec
popf
or
int3
sbb
hlt
dec
and
sbb
roll
cmp
andb
jbe
add
jp,pt
push
repnz
add
daa
xorl
psubusb
sbb
mov
and
add
mov
adc
add
addr16
icebp
add
in
jno
cli
mov
andb
sbb
pusha
add
sahf
xchg
or
aas
sarl
add
jle
sbb
addl
mov
sbb
enter
aas
add
add
clc
aas
cmp
movlps
and
sbb
inc
hlt
mov
cmp
addl
add
jnp
repnz
xor
add
fwait
push
inc
enter
add
icebp
jmp
scas
adc
and
in
rol
jns
cmp
decb
xchg
loopne,pt
sub
fmul
js
ret
sbb
rcr
pushf
aam
popf
pop
sub
add
loop
daa
mov
iret
mov
push
add
sub
cmp
aad
xor
enterw
ret
repnz
or
aad
subb
pop
add
fimull
nop
adc
jge
add
push
test
fldl
sbb
hlt
loop
mov
clc
push
repnz
repz
in
add
mov
inc
mov
jmp
xor
add
dec
addl
and
shlb
inc
push
add
nop
pop
push
aas
add
and
xchg
push
hlt
add
add
and
add
pop
add
sbb
pmulhw
aas
aaa
jmp
cmp
loopne
add
inc
xor
cs
sbb
add
mov
ror
xchg
push
insl
sub
jnp
xor
pop
pop
push
jo
sub
pop
nop
pop
cwtl
sbb
mov
dec
xchg
jo
ret
and
mov
adc
add
or
jl,pn
xor
rorb
lods
repz
push
arpl
add
and
pusha
fidivs
pop
loope
mov
mov
jl
outsl
pop
gs
pusha
into
add
jns
clc
pop
loope
das
xchg
shll
cmp
adc
add
inc
lock
enter
mov
xchg
out
cld
add
mov
pop
or
xor
add
sbbb
xchg
jp
dec
jbe
hlt
imul
add
inc
pop
aaa
xor
add
mov
add
xchg
cs
data16
in
js
daa
sbb
add
add
pop
pop
push
mov
add
mov
movsb
sti
add
jge,pn
push
data16
push
bswap
addr16
add
shl
cmp
loope
popa
subl
into
in
fucomp
mov
arpl
jge
cmp
fildll
stc
xor
add
and
add
stc
sbb
add
push
and
jae
cwtl
or
daa
rclb
roll
add
mov
lock
add
mov
pop
fdivr
sahf
sbb
adc
aaa
in
lahf
shrb
and
add
pop
ds
adc
sub
iret
or
loope
add
test
xor
fdivl
add
fcomps
sub
lret
sub
fnsave
add
into
pop
loopne
cwtl
iret
js
adc
adc
xchg
popa
dec
add
ud0
clc
jge
lret
mov
test
daa
lock
sbb
ds
cmp
sub
or
mov
jns
push
lods
jae
sti
pop
mov
pop
sbb
push
add
addb
mov
and
movzbl
loopne
xor
fildl
pop
movsb
xor
xor
sbbl
jle
arpl
les
mov
pop
or
add
nop
and
mov
aam
add
mov
sti
adc
dec
int
bound
push
jecxz
push
add
push
push
rorl
jmp
add
ja
mov
inc
fs
mov
hlt
adc
jecxz
sbb
cmpsb
and
pushf
sub
mov
roll
mov
jae
jnp
es
add
cmp
pushf
mov
out
push
sub
faddl
stos
jno
adc
pop
insb
scas
add
cmpb
xchg
shl
loopne
add
sahf
mov
add
and
cmp
faddl
mov
mov
adc
jmp
jno
sub
dec
pop
scas
or
int
ds
mov
ret
mov
mov
add
idivb
add
mov
mov
daa
out
jmp
out
das
ds
clc
loop
shll
scas
pop
jnp
out
punpcklwd
pop
add
add
rolb
cmp
pushf
sahf
xorl
xor
dec
mov
pop
or
or
lock
jb
pop
inc
fmuls
jnp
in
mov
jb
addb
lods
aaa
add
sarl
mov
bound
out
shlb
stos
das
idiv
and
inc
loopne
jl
cwtl
cmp
and
or
mov
jecxz
cmpsl
jecxz
daa
popa
inc
dec
sbb
inc
mov
sbb
inc
add
int3
rcll
push
jp
xor
arpl
jbe
loop
clc
push
add
xchg
xor
sarb
pop
push
xor
xchg
adc
xor
and
popf
cmpsl
jo
inc
dec
or
sbb
mov
les
adc
or
jae
add
ljmp
jnp
push
test
dec
add
je
add
cmp
adc
pop
fstps
jo
je
mov
scas
add
notb
jbe
outsl
in
insb
rcrb
or
popa
push
xchg
jle
add
sub
loopne
mov
xorl
testb
mul
and
push
mov
sub
je
push
shlb
add
mov
inc
add
push
jl
add
push
add
mov
jns
iret
jl
in
mov
dec
pop
das
and
add
push
mov
orl
mov
test
rolb
jo
push
loop
ret
adc
icebp
jb
add
lahf
clc
roll
sub
add
push
ret
mov
test
pushf
icebp
test
jmp
add
jnp
push
jl
mov
in
inc
or
out
add
enter
xor
dec
add
pop
add
out
or
lret
cmp
es
pop
or
add
jo
mov
push
or
pop
cmp
and
pop
push
shll
adc
enter
adc
push
add
hlt
aad
push
sysret
pop
add
add
mov
setle
cmp
inc
add
rolb
pop
ss
inc
lods
movsl
xlat
js
add
push
aaa
nop
out
cmp
rol
div
pop
cwtl
mov
mov
push
sahf
push
push
popf
pop
jl
arpl
mov
add
aam
sbb
gs
pop
jno
inc
xlat
push
jbe
repz
leave
mov
add
sti
loopne,pn
popa
js
outsl
es
or
rorl
test
dec
adc
add
mov
push
lahf
test
dec
sbb
jle
mov
cltd
jb
mov
setg
and
mov
or
cmpb
wbinvd
jmp
pop
sbb
ss
insl
cld
dec
or
push
int3
inc
sbb
cld
cmpb
popa
pop
lahf
sbb
adcl
dec
lds
add
js
rorl
sahf
loopne
add
xchg
and
out
add
cmpsb
jmp
xor
mov
inc
idiv
add
and
fmull
push
add
fsub
loop
sarl
xor
and
mov
jmp
jb
test
xor
loope
bnd
fadd
sbbb
mov
xchg
pop
jne
adc
dec
in
mov
rol
add
dec
int3
mov
add
sub
out
enter
add
lds
in
loopne
jmp
inc
jl
daa
add
clc
jo
push
pop
or
sub
ljmp
js
nop
ss
add
mov
inc
pop
cmpsb
jp
jns
repz
inc
add
pop
cmp
loopne
outsb
add
push
pop
cmp
sbbb
sub
stos
push
jp
loopne
add
and
int
ljmp
ljmp
or
out
cmpxchg
sub
dec
hlt
cld
mov
cs
loop
add
insb
fisubrs
add
call
jecxz
add
enter
inc
add
xor
xchg
scas
add
lret
sub
out
add
loopne
rolb
cli
into
lret
add
add
out
or
cmp
fs
out
daa
add
mov
mov
sub
jl
icebp
test
ss
sarl
push
add
dec
or
rcll
jne
mov
add
out
fsubrp
fldcw
and
out
inc
and
xchg
mov
and
loopne
maskmovq
loop
add
jle
ds
jo
nopl
and
or
pusha
push
push
xor
inc
push
pop
mov
ss
pop
xor
test
add
pop
sti
fstps
shl
add
add
sbbl
add
test
jno
push
lcall
out
add
je
in
fildl
jno
push
adc
arpl
fiadds
mov
rcr
loope
pop
xchg
dec
xor
xchg
sbb
dec
lds
rorb
stc
xchg
add
jl
cmpsl
pop
adc
ret
inc
add
sldt
out
adc
psubd
add
mov
push
or
hlt
add
or
mov
jge
ret
test
jns
cmp
fdivrl
cmp
orb
popa
mov
pushf
arpl
or
push
add
inc
loopne
dec
repz
mov
or
cmp
xorb
push
adc
clc
add
cmc
in
xor
popl
into
daa
adc
call
fiadds
jl
jns
js
repnz
fadd
adcb
test
and
push
push
add
adc
push
repnz
loopne
xor
pop
sahf
jmp
test
and
add
pop
mov
push
lock
jbe
mov
in
stc
or
add
sbb
mov
and
outsb
push
iret
filds
into
lahf
popa
mov
add
incl
jmp
addr16
push
icebp
push
jno
sub
loopne
iret
add
push
test
in
aas
out
addb
ljmp
cwtl
clc
dec
sbb
add
and
pop
pusha
mov
jb
notb
pop
mov
daa
pop
add
or
loope
push
mov
add
xor
sbb
out
add
insl
and
jae
rcl
test
mov
loopne
and
pop
jns
push
inc
sarb
cmp
cmp
in
pshufw
add
adc
jno
add
cmpb
xor
jns
add
out
adc
in
adc
adc
mov
xchg
stc
je
jmp
icebp
lahf
dec
shlb
pop
ja
out
dec
nop
daa
adcb
mov
iret
imul
rcr
clc
jmp
mov
add
cmp
push
pop
xchg
cmp
cmp
pop
arpl
xchg
popa
push
lock
add
mov
lods
pop
pushf
adcl
insl
fsts
pop
cs
std
cmc
fldl
arpl
xor
add
gs
xchg
mov
rcll
cmp
adc
mov
jne
xlat
jmp
mov
clc
add
add
test
loop
hlt
xchg
idivl
adc
out
bound
hlt
or
or
lock
sbbb
fs
rclb
jl
add
les
shll
push
std
js
push
add
popf
pushf
movsl
add
push
xor
sbb
fcoml
dec
in
js
push
mov
sbb
rcll
cmp
mov
xchg
add
lahf
adc
rolb
idivl
or
xchg
xor
or
loopne
pop
jo
push
shlb
out
add
mov
add
div
xor
xchg
addr16
sahf
xchg
outsl
adc
sbb
inc
mov
xchg
pop
and
in
enter
aad
dec
push
inc
arpl
add
lock
dec
outsb
xchg
sarl
sub
jns
sar
pop
pop
es
lcall
inc
add
int3
flds
add
rorb
or
addl
bound
loopne
xchg
jge
add
inc
and
les
mov
icebp
orl
inc
rolb
or
or
adc
aad
ret
fistps
sbb
inc
imul
or
sbb
cmp
mov
flds
mov
clc
stc
add
xor
jl
jp
add
pusha
loopne
xlat
add
test
loope
out
rolb
lds
mov
lret
add
lock
shlb
add
xor
mov
jbe
adc
call
test
pushf
roll
add
adc
xor
dec
sub
mov
pop
pushf
repz
ds
jo
push
je
icebp
push
test
sahf
xor
mov
scas
pop
add
mov
out
lock
mov
jmp
jle
pushf
frstor
dec
fsubs
xor
aas
jnp
outsb
mov
dec
and
pop
pop
shl
add
inc
add
out
leave
add
add
mov
cmpsl
cmp
mov
mov
lock
xor
rorb
lock
mov
out
orl
adc
push
aas
scas
and
push
mov
or
repz
fs
pop
jnp
xchg
dec
pop
adc
xor
mov
add
jl
iret
pusha
inc
mov
loop
mov
push
das
add
adc
cmpsl
xchg
push
iret
aas
or
icebp
add
cmpl
sbb
cmp
shl
sbbb
cmp
out
filds
aas
mov
and
lock
lret
inc
adc
sti
pop
nop
and
sbb
loop
inc
add
mov
sbb
mov
ret
aaa
mov
add
nop
add
jae
add
clc
jns
mov
adc
and
sbb
cmpl
iret
pop
scas
add
xchg
jb
xor
in
lahf
cmpsl
and
adcb
inc
loop
out
rcr
add
xor
jae
sub
repz
fadds
sbb
cwtl
xchg
sbb
js
or
roll
pusha
fcomps
outsb
sbb
mov
pop
addr16
xor
pusha
xchg
xlat
mov
subl
adc
loop
mov
push
push
jae
add
stos
and
pop
out
rorb
insb
sbb
jle
pusha
jo
jne
out
mov
dec
add
ret
call
lock
jl
jecxz
add
add
lahf
jmp
push
push
pushf
popa
add
or
mov
add
shll
cmp
add
cld
mov
ds
jle
bnd
adc
sub
pushf
adc
cmp
add
fnstenv
xrelease
jns
add
hlt
loopne
and
adc
cmp
int3
test
shrb
add
sub
dec
daa
jecxz
and
inc
or
repnz
adc
mov
xor
pop
push
mov
inc
sub
popf
aad
les
rol
mov
lret
push
pop
in
dec
rorb
add
push
loop
add
inc
and
aad
daa
add
roll
js
mov
jae
mov
sbb
jg
adc
fnstenv
inc
sbb
out
shlb
mov
and
pop
cli
xchg
enterw
add
in
or
adc
add
loopne
and
in
add
out
into
jmp
adc
pop
xor
movlps
loop
add
stc
mov
push
hlt
xor
cmpsb
ret
add
jl
in
xorl
push
inc
movsl
dec
fildll
push
jge
xor
jno
int3
jns
pushf
inc
or
jl
xchg
add
cmp
or
add
out
movsb
and
and
adc
js
add
jp
imulb
shll
lds
jmp
or
fprem
push
mov
xor
negl
jb
jp
push
or
cmpsl
adc
adc
clc
add
and
pop
cmp
xorb
scas
push
in
pop
or
insb
add
out
add
loope
cmpb
pop
add
fcoml
pop
dec
push
sarb
sub
dec
add
loopne
outsl
add
mov
pop
ds
test
dec
push
pop
push
add
cmp
ljmp
loop
mov
xchg
sahf
lret
or
sti
shl
in
ret
rcrl
loop
call
popf
fcom
sbb
cmc
stc
push
int3
sbb
sti
lock
push
scas
in
or
mov
add
bt
add
in
xchg
or
xchg
mov
jg
out
add
cmp
sbb
inc
ret
sarb
pop
sub
verw
mov
and
and
mov
insl
ret
jecxz
adc
test
movsb
popa
add
sub
mov
into
add
push
outsb
dec
cld
int3
cmpsl
int
out
bound
xchg
and
pop
cmc
in
fs
jns
add
jo
ljmp
pop
mov
mov
ds
push
jns
pusha
jecxz
data16
inc
les
shl
xorb
jb
and
and
lock
jae
or
mov
sysret
and
mov
ret
jno
add
imul
ja
and
mov
add
sbb
lock
mov
addb
cmp
mov
dec
lock
cld
adc
repz
ret
movb
add
pop
pushf
inc
xchg
sbbb
inc
jns
fs
faddl
fisttps
xchg
in
iret
loop
add
cmp
shr
subb
cmp
or
hlt
lock
cmp
icebp
gs
mov
dec
popa
add
cmpsl
in
sbb
rcrl
jmp
aam
adc
jbe
sbb
out
pop
imul
jl
lock
mov
add
aas
pop
xchg
pop
sub
jne
add
jo
dec
int3
imul
cwtl
nop
mov
push
in
insb
loop
add
lock
inc
cmp
js
cld
add
xchg
mov
ret
inc
add
add
add
mov
faddl
jo
sub
push
bound
or
inc
sbb
test
scas
mov
aaa
mov
mov
int3
rcrl
or
fildl
dec
ret
inc
incb
mov
out
pop
loop
xor
cli
addb
hlt
daa
add
out
add
cltd
xchg
push
cld
lock
add
cwtl
pop
insl
dec
out
in
add
jge
arpl
add
cmp
pop
push
cmp
adc
sbb
push
lock
xchg
jecxz
testb
gs
mov
adc
inc
mov
dec
adc
sahf
jge
jne
or
jae
iret
xor
add
add
cmpb
pop
add
jecxz
rcrl
inc
icebp
es
jno
add
or
xor
sbbb
sti
mov
test
test
ret
and
sub
push
add
rcrl
cmpsl
or
mov
lahf
cmp
add
daa
jnp
adc
ja
icebp
movsl
in
and
add
push
ds
cmp
subb
test
mov
or
pop
sarl
lock
jo
inc
pusha
addl
shlb
mov
add
mov
cmc
je
lahf
inc
ljmp
jmp
mov
ds
add
hlt
mov
inc
cmp
push
jnp
mov
add
enter
incb
fxch
jae
sbb
jne
add
push
and
mov
lods
sub
aas
pop
jl
mov
sbb
adc
ljmp
imul
dec
repnz
cmp
scas
add
sbb
pop
rclb
ret
mov
add
pop
mov
xchg
inc
popa
call
add
data16
addr16
stos
cmp
push
sub
rclb
pop
mov
cmp
xchg
xchg
mov
loop
add
in
xchg
shll
push
pop
adc
push
adc
mov
stos
inc
pop
pusha
add
nop
mov
sub
add
repz
and
inc
add
cmp
les
addb
adc
adcb
outsl
rorl
mov
or
add
sub
mov
test
push
call
jb
add
cld
and
cltd
sbb
jecxz
addr16
pop
gs
aad
or
hlt
shlb
lahf
inc
add
fstpl
jge
cmp
xor
sub
mov
inc
push
sub
cmpsl
pop
pop
xlat
pop
or
lock
test
incb
add
xor
push
out
xor
je
call
outsb
outsb
lock
test
sysret
cmpl
jmp
stc
addb
ret
add
inc
add
or
add
pop
stos
lds
adc
jbe
hlt
insl
cmp
pusha
jns
sub
js
or
cs
iret
push
ret
add
aad
push
orb
pop
imul
and
arpl
repz
sbbb
dec
leave
pshufw
and
shlb
mov
ret
xchg
leave
stos
add
cmp
stc
je
jmp
add
or
xor
push
mov
add
xor
sti
xchg
or
adc
shl
jno
push
adc
pusha
xchg
loop
stos
cmp
cs
hlt
lea
add
sbb
fsubrs
add
clc
sbb
nop
mov
faddl
add
sub
es
fwait
scas
xor
cmp
add
nop
cmp
insb
add
ret
cmp
pop
sbb
mov
addr16
arpl
popf
mov
push
jnp
jge
cltd
cmc
dec
inc
mov
mov
jecxz
mov
or
lods
out
cltd
pcmpgtd
pop
mov
mov
call
adc
xor
jbe
shrb
lahf
xor
sbb
jl
or
xor
xchg
ja
add
add
fisttpl
incb
movsl
add
jl
hlt
dec
add
cltd
test
adc
cmp
or
icebp
test
movhps
inc
pusha
popa
sbb
lods
ret
loope
nop
xchg
add
cmp
aas
shl
and
movsb
bound
or
mov
pop
xchg
jp
lock
or
int3
mov
fiadds
jl
dec
inc
and
out
cmp
xor
mov
cmc
xor
xor
or
add
jl
mov
pop
loopne
adc
cmp
dec
add
stc
lock
inc
inc
or
divb
add
inc
jl
pusha
xchg
shll
add
shlb
mov
fs
and
mov
mov
and
push
add
jae
fcmovnb
mov
or
add
xchg
inc
and
cmp
mov
xchg
in
and
jns,pt
mov
add
mov
and
jne
lcall
add
add
xchg
sbb
shl
repnz
popf
mov
in
loop
dec
idivb
sub
sbb
pop
pop
fdivrl
rorb
orl
leave
sub
aaa
inc
xorl
loop
into
addr16
add
mov
and
data16
addb
add
hlt
or
dec
jns
ja
xchg
popf
add
push
loop
add
jns
mov
adc
popf
clc
add
icebp
or
and
shlb
add
pop
add
aad
cwtl
in
xor
mov
mov
pop
mov
sub
in
xchg
push
orb
je
jl
mov
add
ja
xchg
jbe
dec
movsb
add
add
fsubp
aam
adc
sahf
pop
pop
push
test
ret
pop
add
jmp
iret
jae
loopne
cmp
testl
mov
sbb
mov
cwtl
roll
popa
xor
or
jns
jnp
data16
popl
cmp
js
add
add
xor
inc
sbb
cmc
push
rol
cmp
push
je
mov
iret
repnz
cmp
jbe
hlt
xor
xor
pop
sub
mov
ds
add
dec
testl
nop
cmpsl
ljmp
xchg
in
in
rorl
add
cmp
xchg
or
add
mov
iret
fwait
sub
sbb
loope
mov
jle
jnp
add
lahf
nop
inc
sbb
cmp
xor
add
xlat
cs
andl
aam
ja
xchg
cmp
cmpsl
push
int3
movsl
test
out
scas
add
ret
mov
sbb
add
idivb
add
dec
call
add
pop
lds
and
rolb
lea
cmpsl
add
xchg
mov
sti
cld
shlb
or
mov
loop
out
inc
js
push
xchg
add
mov
frstor
add
sbb
in
or
cld
popa
leave
sti
jl
push
pop
add
add
add
add
push
push
jl
in
loop
dec
out
sarl
add
lds
or
jae
inc
or
adc
cmp
and
pop
shll
inc
pop
mov
sbb
sub
andb
mov
push
jae
movl
in
nop
add
inc
pop
cmp
add
imul
pop
movsl
add
xchg
iret
cmp
xchg
fs
daa
add
jno
inc
sbb
inc
shl
sub
mov
popa
loopne
movsb
mov
add
jecxz
pop
cs
lock
inc
cmp
push
loop
inc
cmp
rol
in
fwait
daa
jne
and
lahf
cmpl
jo
fs
adc
test
and
outsb
fsubs
mov
scas
nop
jns
xchg
popa
sahf
pop
mov
fidivrs
mov
inc
sti
test
or
add
inc
mov
mov
pusha
cmp
js
cmp
pop
jl
xor
mov
cmp
add
loopne
cmp
push
hlt
cltd
or
lea
push
pusha
int3
add
into
pop
cmpsb
inc
fucomp
xor
dec
loopne
add
gs
test
and
sar
lock
in
inc
sti
sub
add
add
jb
inc
and
add
adc
cmp
rclb
ss
lret
cmp
jns
aad
testl
mov
cmp
call
shl
ljmp
jmp
mov
inc
jle
add
loopne
sarb
fstpl
mov
xor
jl
je
loope
aad
js
cmc
adc
lret
ljmp
test
cmpsl
jle
push
and
mov
js
fimuls
xchg
jmp
lret
imul
or
xor
add
fdivr
sbb
lds
adc
dec
iret
ficoml
adc
cmp
int
pusha
xor
add
add
mov
add
sub
inc
cmp
dec
sub
cli
xor
mov
arpl
stos
mov
add
mov
iret
popa
and
inc
jge
dec
dec
push
jo
cmp
xchg
add
das
pop
lahf
sbb
add
xchg
imul
adcb
cmp
daa
call
cmp
jmp
pop
adc
add
xor
pushf
inc
mov
ror
push
hlt
jno
jns
dec
in
add
push
mov
bnd
mov
mov
add
inc
icebp
or
sbb
loop
sbbb
mov
insb
add
inc
or
pusha
stc
sarl
push
jo
lahf
ret
adc
pop
out
in
fildl
cmp
mov
sbb
cmpb
outsb
in
dec
push
jmp
pop
loopne
add
sahf
cmpsl
add
leave
stc
into
jle
iret
jmp
push
sub
cmp
pop
int3
dec
add
je
pusha
jg
add
add
xlat
gs
pop
fistl
lock
or
or
sbb
push
inc
and
rol
mov
es
cmp
mov
sub
add
inc
inc
and
cmp
push
in
ficomps
cmp
adcb
icebp
or
add
lret
add
mov
clc
jge
add
adc
in
rcl
pop
jb
lahf
lock
int3
pop
xchg
test
add
or
inc
adc
loopne
push
pop
sub
popf
xchg
lock
in
add
and
mov
scas
dec
inc
push
fcompl
pop
pusha
clc
push
pop
xlat
add
mov
and
cmp
jne
icebp
sub
rcl
cmp
pop
cmpb
scas
or
add
xchg
enter
sub
das
ret
or
add
ss
xchg
cmp
sbbl
mov
xor
jmp
xchg
popl
cltd
pusha
dec
dec
xor
lcall
mov
pop
out
test
push
xor
dec
loopne
sbb
xchg
mull
shlb
subb
pop
stc
sbb
iret
add
ss
sarl
jae
add
les
inc
jne
ds
add
daa
jb
jo
push
in
or
jmp
inc
mov
xchg
jns
add
push
sub
jno
shll
mov
xchg
in
push
jle
cld
add
out
mov
add
or
cmp
pop
sub
ljmp
loope
add
loopne
pusha
mov
inc
outsl
pop
mov
add
dec
adc
dec
rclb
jns
add
andb
mov
add
xor
dec
or
lock
ret
jl
insb
add
add
sub
sub
in
cvtpi2ps
cmpsb
shlb
add
stc
and
arpl
adc
add
push
out
add
iret
aaa
cld
ror
mov
cli
add
push
addr16
js
sbb
jbe
inc
jmp
mov
ja
xor
mov
pop
data16
shlb
clc
gs
scas
add
aas
and
pusha
add
dec
in
inc
loop
ret
add
jmp
fcomip
cwtl
cmpsb
addl
pop
scas
mov
add
add
pop
ja
ss
in
loope
inc
pop
add
dec
lret
stos
loopne
pop
loop
sbb
inc
fmul
dec
adc
sbb
cmc
movsl
lret
aaa
ss
pusha
push
ret
add
std
into
or
mov
mov
call
mov
and
cmp
add
mov
xor
push
pop
cmp
shl
popa
ret
add
inc
pop
cmp
add
fadd
into
mov
int3
or
lret
xlat
xorb
jns
aas
sbb
stc
lea
aaa
or
popf
and
pop
fs
pop
pusha
mov
loopne
push
xchg
shl
mov
add
shr
leave
xor
lock
jp
sbb
icebp
push
shlb
ret
mov
cmc
sbb
std
xor
in
lock
add
mov
sub
pop
jb
add
jge
inc
call
test
les
jmp
loopne
jbe
jns
add
jecxz
clc
jns
or
aam
sbb
mov
mov
sbb
add
sub
popa
sbb
add
rcrl
ja
add
cld
xor
sub
or
cmp
lock
add
sub
andl
pushf
cmc
dec
iret
jge
sti
outsl
and
mov
loopne
jno
mov
aas
dec
enter
loopne
or
test
roll
xchg
div
loope
add
mov
ljmp
xchg
rolb
scas
shr
add
inc
fsubrs
repz
icebp
mov
addb
ret
cwtl
popa
nop
cmpsl
add
inc
add
fdivrl
and
fiaddl
cli
push
cwtl
icebp
pushf
cmpsb
iret
cmp
sub
aad
adc
mov
int
add
xlat
push
cld
mov
orl
fiadds
dec
out
add
pusha
cmp
incb
fsub
repz
add
or
aam
shl
add
cmp
lahf
iret
push
idivb
sahf
jmp
cmp
fcoml
andb
jbe
hlt
mov
add
or
in
xchg
outsb
add
inc
cmp
or
addb
loop
ljmp
push
cltd
daa
or
cmp
mov
inc
add
cvtps2pi
data16
jg
cld
mov
sbb
cmp
add
gs
jl
xor
sti
xchg
fcomp
outsl
stc
mov
pop
mov
xor
in
adc
add
mov
ljmp
ret
jns
xorb
xchg
nop
xor
loopne
cmp
lea
cmp
jns
shlb
test
mov
mov
and
sub
pushf
inc
ja
ret
test
nop
mov
jl
hlt
mov
pushw
jge
mov
mov
or
pop
sbb
pop
in
hlt
sahf
or
ljmp
mulb
or
jae
push
ja
lds
push
or
cmp
pop
mov
insb
sbb
sbb
clc
add
sub
loopne
sbb
sbb
sub
add
popa
jecxz
lea
push
xchg
js
pop
adc
outsl
add
insb
and
mov
mov
or
in
subl
xlat
add
sub
inc
nop
daa
add
call
dec
xchg
popa
outsl
dec
pusha
shll
mov
add
mov
loop
fildl
add
popf
sbb
xor
xor
imul
add
jge
hlt
add
and
mov
dec
jle
pop
idivb
sub
xor
sub
aad
stc
xchg
packuswb
aad
int
pop
js
lahf
in
adc
popf
push
orb
cmp
inc
mov
bound
jge
add
and
lds
sub
pop
add
or
fldenv
push
xchg
scas
push
mov
fisttpl
clc
add
cmp
mov
push
sbb
add
pop
stc
inc
inc
push
adc
add
inc
data16
ret
push
pop
in
mov
jb
cld
sti
or
add
mov
pop
xor
loope
mov
dec
loopne
or
pop
clc
add
cmp
fs
pop
iret
xchg
inc
xor
iret
add
add
pop
insb
push
add
mov
jmp
add
xchg
push
fs
fwait
add
or
sub
adc
adc
pop
push
ss
icebp
rclb
pop
cmp
mov
hlt
stc
xlat
add
xor
out
inc
pop
clc
insb
pusha
stos
pop
add
loope
or
mov
cmpb
jbe
push
cmpb
rol
add
add
and
cli
add
xor
dec
fadd
shl
arpl
cli
mov
popa
repnz
pop
inc
jg
lock
mov
ret
cmp
test
add
xchg
testl
stos
mov
pusha
ljmp
xchg
cmp
add
nop
push
mov
mov
or
cwtl
xor
js
pop
test
add
das
adc
add
ds
out
adc
add
loope
cmp
insl
mov
push
cmp
faddl
mov
js
outsl
or
subb
insb
lods
xor
je
pop
add
mov
mov
popf
loop
cmp
in
inc
push
lcall
icebp
xchg
add
mov
insb
call
je
xor
push
fcoml
cmp
int3
inc
rorl
cmp
mov
outsb
adc
and
sub
ret
add
add
push
in
jp
jmp
test
cmp
pcmpeqw
inc
sarb
call
pop
dec
sbb
or
pop
test
dec
jmp
divb
ret
shrb
push
inc
and
clc
stos
lret
pop
subb
dec
cld
adc
mov
mov
or
cmp
sahf
das
adc
shlb
add
mov
sub
or
out
add
mov
test
lcall
in
sub
xchg
xchg
outsl
mov
add
cmp
xchg
js,pn
or
add
jo
lock
or
add
imul
popf
and
or
push
mov
xchg
addr16
daa
les
sbb
sbb
cmpsb
lret
and
btc
pop
add
adc
shl
loop,pt
add
repnz
add
add
inc
sbb
aas
lock
add
cmp
in
add
and
into
aam
sbb
add
aas
sbb
cmp
movb
add
lea
into
inc
rorl
fdivrs
xchg
sub
adc
pop
hlt
mov
sbb
jo
in
in
call
fildll
test
and
movb
mov
hlt
push
sub
fstpt
pop
sbb
loopne
fbld
add
xchg
cmp
enter
jae
mov
insb
xor
mov
xor
insl
sbb
jge
repz
ret
add
repnz
shr
in
jo
roll
repz
test
sub
mov
shl
mov
pop
mov
stc
adc
out
push
test
popf
sbb
cmp
add
and
cmp
fmull
and
out
frstor
aaa
jno
loopne
cmp
add
imul
mov
stos
mov
repnz
or
out
and
call
rcl
shrb
add
cwtl
js
add
testl
insl
adc
loop
add
js
addr16
xchg
xchg
add
xorl
sub
sti
fadd
adcl
test
or
push
mov
add
cmpsb
mov
add
and
loopne
mov
mov
pop
orl
call
push
orb
pop
loop
and
sbb
add
xchg
xchg
xchg
aaa
cmp
pop
adc
add
inc
jle
loope
movsl
add
pusha
and
test
pop
cld
roll
ret
bound
jp
xor
loopne
mov
aaa
repnz
sbbl
daa
jo
mov
insb
add
jae
aas
movsl
mov
sbb
fs
fiadds
out
jecxz
adc
add
sbb
fdiv
add
cld
add
dec
gs
icebp
daa
jbe
pop
loope
cmp
jno
and
sbb
mov
inc
xor
and
jecxz
jbe
add
ficomps
or
xor
imul
or
fsubr
test
xchg
hlt
jo
arpl
mov
xor
or
or
cmp
dec
loopne
js
add
enter
dec
push
push
imul
cmp
mov
std
cmc
and
ljmp
jmp
add
add
and
loopne
or
add
shll
test
cmp
push
add
sbb
clc
adc
mov
jg
pop
jnp
aas
cmpb
mov
sbb
roll
push
cmp
lods
lahf
loope
jns
add
jg
push
shl
pop
add
jecxz
or
and
jno
add
dec
cmpl
sbb
fistl
sub
sbb
gs
jl
icebp
cmp
fsts
pop
mov
out
mov
popf
dec
inc
ja
rorb
repz
cs
mov
mov
mov
add
loope
cmpl
push
sbb
jle
mov
nop
repz
mov
inc
push
mov
or
xchg
dec
cmp
and
xor
xchg
addl
jo
add
lds
mov
clc
out
add
cmp
fucomp
and
lds
and
jg
jnp
push
call
cmp
xchg
repz
js
cmp
xor
mov
xchg
add
popa
pop
add
hlt
rolb
fsubs
add
inc
inc
pop
pop
or
rorb
insb
aam
lock
pop
add
nop
lds
add
aad
stc
pop
add
andb
xchg
daa
adc
inc
add
into
lods
flds
cmp
push
sub
incb
out
xor
mov
sub
pop
enter
and
push
sahf
pop
cmp
or
sbbl
inc
mov
pusha
testl
inc
andl
loop
add
popa
push
and
jno
add
fldl
inc
jecxz
cmpxchg
push
jp
std
clc
in
add
insl
lock
mov
sar
xchg
lock
jnp
shlb
cltd
add
pop
pop
and
rorb
inc
js
ss
clc
pop
dec
push
aaa
or
dec
rolb
add
add
dec
rolb
pusha
addr16
adc
pop
in
add
negb
mov
mov
pop
mov
add
loopne
jnp
push
cmc
push
add
test
add
cmp
rclb
clc
test
jnp
add
icebp
push
add
push
xchg
dec
aad
xchg
fsubl
push
cmp
cmp
inc
add
jno
adc
pop
add
mov
incb
test
cld
ret
out
adc
shlb
adc
and
movzwl
xorb
loop
mov
into
pop
jo
push
in
xor
js
push
xor
mov
sbb
je
test
hlt
sbbb
mov
jl
pop
mov
sarb
lods
add
inc
or
sahf
loopne
xor
push
mov
jo
sbb
add
sub
push
xchg
xchg
add
loop
push
pusha
mov
add
test
lock
mov
in
call
mov
js
xchg
sbb
xchg
mov
or
dec
icebp
adc
ret
cmp
add
jae
jecxz
add
add
adc
add
mov
scas
addr16
add
push
inc
xor
inc
mov
call
jo
sbb
xor
sbb
outsl
aam
out
sub
add
push
ret
stos
pushf
popa
add
dec
nop
xlat
lock
jno
lahf
sub
mov
and
add
lock
stc
jo
addl
cmp
pmulhuw
call
mov
jns
and
pop
iret
push
adc
add
mov
inc
sbb
rcrb
imul
aam
sarl
and
rolb
les
add
roll
test
or
rcrl
sar
out
sub
addl
roll
nop
pushf
cwtl
jmp
add
mov
out
jl
lock
loope
add
addl
cmp
jo
add
addr16
lods
addl
add
lret
xor
fisubrs
or
mov
popf
fs
mov
std
mov
pusha
mov
jo
stc
dec
sahf
addb
stos
mov
adc
lea
sti
fistps
add
movsl
add
cmpsl
pop
fdivs
mov
shrb
add
loopne
pop
add
scas
jb
in
dec
add
sbb
xor
mov
sbb
add
mull
je
jp
add
lock
nop
sbbb
add
loope
adc
std
aad
mov
mov
xorb
rolb
add
ss
cmc
mov
iret
in
xchg
adc
aaa
dec
out
add
push
cld
lods
sbb
out
or
dec
outsb
add
hlt
lcall
mov
add
iret
daa
mov
mov
mov
sbb
jecxz
add
jns
jmp
outsl
fsubl
mov
cmp
into
pop
or
xchg
or
add
dec
jl
pop
or
or
mov
idivl
sbb
jge
lock
add
jne
daa
push
test
psraw
pusha
mov
repnz
add
clc
sbb
dec
add
loopne
ret
push
or
xor
rcrb
push
addb
cmp
lock
cltd
add
adc
dec
arpl
xor
cmpsl
adc
pop
adc
test
xor
fstl
ja
ja
cld
imul
sub
nop
std
cli
inc
add
adc
inc
sbb
jo
cmp
lock
andb
pop
in
and
orl
nop
or
dec
push
fnstenv
insl
add
cmp
and
repnz
dec
sarb
xchg
jne
inc
mov
or
push
ror
imul
push
push
jb
mov
add
test
lods
jecxz
nop
adc
enter
lea
push
pop
jns
ss
mov
xor
lahf
lds
push
mov
push
int3
in
pushf
add
mov
mov
orl
inc
push
fmull
jo
add
out
shlb
dec
push
mov
icebp
mov
jbe
jnp
and
es
lock
dec
in
icebp
orl
sub
add
sbbl
fs
mov
lea
xor
pusha
ds
pop
mov
pop
mov
daa
dec
inc
imul
or
jno
add
and
out
and
roll
jge
js
idivb
iret
sbb
pushf
mov
faddp
xchg
push
push
push
shlb
push
popa
jle
add
out
or
aaa
fmull
cmp
loopne
inc
hlt
nop
pop
cmp
mov
ds
add
and
add
jecxz
loope
jno
out
icebp
add
je
pop
sbb
les
cmpsb
mov
mov
sarl
add
ljmp
lahf
clc
nop
pop
iret
jg
pushf
xor
adc
mov
fidivl
push
vcvttps2dq
jo
mov
xchg
pop
add
sub
add
adcb
jns
add
jno
imulb
call
inc
movsl
xchg
xchg
pop
add
jnp
mov
call
cwtl
icebp
clc
jmp
lock
mov
or
mov
pop
outsb
sbb
mov
inc
mov
jge
jg
es
xchg
add
shrl
add
scas
nop
jl
jecxz
out
int3
pop
or
repz
cmp
scas
add
push
call
gs
xchg
push
cmp
mov
aas
js
outsb
and
jge
inc
add
dec
pop
inc
movups
stc
mov
add
lods
mov
shr
add
or
imul
fidivl
je
addb
sbb
jmp
repnz
jg
mov
adc
add
in
shll
pop
cmp
leave
push
loopne
mov
mov
mov
rclb
cmp
clc
mov
mov
add
cmp
fs
add
jl
repz
xchg
pop
hlt
jge
loop
add
jo
mov
xchg
sahf
add
add
pop
xchg
test
adc
xor
cli
mov
sbb
or
inc
push
test
push
or
xor
sbb
sub
adc
inc
repz
xor
loope
sub
adc
cmc
fiadds
jno
push
mov
cmp
loopne
push
dec
fsubrs
or
pusha
mov
mov
xchg
xor
add
add
xadd
cmp
inc
leave
daa
data16
add
testb
loop
out
int
addl
cwtl
add
flds
hlt
push
pop
cmpsl
sub
sbb
repz
add
ja
mov
dec
jo
adc
add
mov
das
add
inc
loopne
sahf
leave
jbe
add
cwtl
outsl
das
iret
sbb
mov
adc
repnz
cmp
jne
add
out
addb
cmpl
je
sub
fisubrs
and
jo
sub
les
cmp
test
or
push
pop
loopne
and
inc
mov
pop
pop
jl
add
test
icebp
add
add
add
xor
add
dec
sarb
jge
cmp
add
or
pop
mov
cmp
jg
rorb
pop
xor
hlt
pop
add
adc
movsl
ret
pop
testl
cli
push
gs
and
push
movb
stc
loopne
fcmove
and
sub
or
add
or
xchg
aaa
lahf
pop
push
sbb
pop
iret
aad
mov
sbb
pop
clc
cmp
out
int3
or
pop
push
or
cli
addb
push
xor
push
call
lock
mov
punpckhwd
cmp
cmp
add
push
insl
adcb
mov
lcall
in
les
gs
mov
in
pop
push
in
add
mov
adc
fidivrs
loop
in
jb
je
push
inc
fisttps
out
dec
push
jp
add
cmp
jnp
dec
js
jl
cld
shll
mov
pop
push
or
sub
push
pop
add
pop
mov
cmp
xor
pop
xor
xor
add
mov
shlb
andl
filds
add
sbb
cmp
rol
jle
add
push
dec
nop
add
das
and
cwtl
add
add
aam
addl
notl
add
pushf
pop
push
iret
and
xchg
rolb
lods
push
fisubs
pop
fdivs
les
js
add
mov
adc
adc
lss
cmpl
add
cmp
mov
mov
in
shrl
xchg
lock
fs
jbe
xor
push
rorb
test
nop
xchg
nop
mov
add
ret
cmp
pop
sahf
or
mov
mov
shl
push
add
pop
inc
jns
ret
sahf
add
sub
fiadds
xchg
nopl
icebp
addl
jl
pop
mov
xchg
add
out
mov
cmp
and
xor
loopne
pop
and
add
pop
mov
loop
cmpb
fwait
iret
or
wbinvd
scas
dec
sbb
mov
cmp
add
inc
push
add
pop
cmp
add
mov
mov
leave
mov
pop
pusha
cmp
jns
loopne
jnp
inc
cmp
add
jae
mov
repz
xchg
mov
divb
into
int
jo
dec
movsb
jmp
mov
jmp
movl
sti
popa
int3
ds
addb
pushf
jbe
fnstsw
js
arpl
dec
flds
push
pusha
and
rolb
lds
loopne
into
add
xchg
popa
inc
lret
and
push
std
push
mulb
add
and
pusha
jge
cmp
xor
mov
orl
mov
pop
cmp
frstor
lea
or
inc
mov
cmp
add
pop
cld
fdivs
add
lock
add
arpl
data16
jecxz
inc
cmp
out
cmpsl
push
jo
sahf
adc
or
fldl
pusha
cmp
sub
jnp
xor
xor
imul
adc
jl
daa
dec
jbe
sbb
ds
lock
repz
mov
push
adc
pop
adc
cmp
loop
fwait
add
popf
loopne
sbb
mov
leave
sbb
add
js
stos
add
and
sti
cmp
inc
add
pop
cwtl
mov
addl
fst
nop
daa
push
jne
es
push
call
ret
repnz
sub
dec
incl
popf
daa
push
rol
aad
pop
sbb
data16
adc
push
pop
jl
or
loopne
adc
js
lea
inc
rcrl
add
cld
or
push
test
clc
sub
cmp
sbb
add
mov
jno
xchg
jne
cmpl
fisubrl
add
adc
imul
add
cli
mov
pop
xor
add
lds
and
nop
mov
push
sarb
or
arpl
sbb
cmp
or
das
add
cmp
negl
inc
add
pop
pop
or
pop
push
jl
imul
icebp
hlt
jbe
pusha
add
sub
lock
gs
mov
shlb
ja
imul
sbb
adc
fidivrl
shlb
roll
mov
out
pop
sti
jp
mov
cmp
inc
jbe
add
je
outsl
loop
cmp
add
push
insb
push
xchg
into
mov
mov
shr
jmp
mov
icebp
pop
nop
dec
addl
ds
mov
sbb
lret
imul
adc
add
cmpsl
adc
sub
popf
or
inc
inc
cmp
repz
push
adc
mov
mov
add
xchg
das
pop
sbb
cmp
out
scas
rorl
or
pusha
pop
sbb
lods
sbb
jecxz
ljmp
pop
mov
pop
iret
loope
pusha
pop
cmp
fildll
jl
lock
jb
sub
jle
and
or
add
or
or
maskmovq
negl
xchg
shl
cli
xor
xor
mov
push
sbbl
pusha
subb
leave
and
sar
jns
inc
add
pop
out
mov
add
inc
ret
outsl
inc
cwtl
jb
jmp
loope
mov
or
sbb
sub
dec
jg
or
push
jne
add
add
lret
cmc
stos
add
jo
and
ffree
movaps
add
das
xchg
or
cmp
popa
push
movsb
addl
cmp
fsubrp
jl
adc
add
ret
into
cli
pop
leave
xchg
and
clc
shrb
roll
cwtl
add
insl
aaa
pop
pop
xor
xor
jb
js
test
xchg
add
daa
fsubrl
add
lret
jns
push
adc
in
nop
add
add
test
rolb
sbb
call
mov
dec
jbe
mov
shlb
popf
nop
add
je
stc
and
stos
pop
shll
dec
jge
lods
jecxz
pop
xchg
mov
sbb
jle
xchg
iret
test
add
clc
into
in
fs
jle
les
addr16
and
adc
call
ja
xorb
pop
xchg
add
cmp
addl
jne
jnp
sbb
dec
jl
ret
cmp
add
jge
adc
xor
out
cmp
or
in
jecxz
sbb
add
sub
psubb
daa
mov
adc
sbb
sbb
jno
add
pop
sub
sub
es
dec
xorb
shl
sbb
adc
and
notb
lods
or
into
xor
xchg
add
xor
add
xor
je
add
mov
rclb
aaa
sbb
loop
mov
lea
add
mull
pushf
cmp
js
loopne
sbb
aam
cmp
add
sub
add
xchg
add
addl
shlb
aaa
mov
loope
sahf
sbb
es
rol
or
je
sbb
cmpb
jmp
add
popa
cmpsl
pmuludq
mov
mov
pop
roll
call
pop
popa
xchg
xor
add
in
shll
adc
add
or
loope
xchg
pop
add
int3
icebp
add
loop
orb
or
iret
add
arpl
or
push
out
jbe
xchg
or
xor
addb
aaa
in
xchg
adc
add
ret
das
or
mov
jl
add
aas
dec
sbb
sub
sbb
pop
pop
call
vmread
and
add
ljmp
add
xor
mov
cmp
pop
int3
or
stc
inc
in
or
loopne
add
cmpsl
or
fimuls
imul
fidivl
out
cmp
fnstcw
out
fdivs
add
mov
idivl
jl
push
sahf
mov
dec
rolb
push
mov
into
inc
lahf
push
flds
sbb
loop
or
or
daa
stc
nop
fildl
lahf
ss
loopne
xchg
fisubrs
loop
jmp
aas
popa
xorb
add
mov
rcl
sbb
pop
les
add
lahf
add
xchg
iret
or
jo
loopne
add
jmp
adc
add
sub
fs
jle
add
and
push
pushf
lahf
add
add
dec
push
jo
daa
sbbb
fcmovnu
mov
push
shlb
stc
test
pop
pushf
xchg
push
sbb
pusha
dec
xor
jno
pop
mov
repz
add
cs
rclb
rolb
or
ja
jp
add
adc
xchg
sti
imul
lret
ja
daa
jp
add
inc
cmp
mov
sahf
mov
or
add
loope
fisubs
adc
fadds
push
les
inc
rolb
pop
or
inc
jge
pusha
mov
inc
add
xor
scas
clc
jne
ss
pop
repz
mov
iret
cmp
cmp
sti
push
in
leave
arpl
pop
add
ret
cmp
xor
fnstenv
dec
add
clc
filds
jl
test
pop
adc
cmp
sar
shl
ds
jmp
adc
dec
add
and
ret
inc
lods
clc
pushf
stos
add
mov
cmp
add
shll
cmp
jns
mov
add
and
fidivs
sarb
mov
ds
xchg
out
arpl
push
repnz
or
in
fdiv
adc
pop
jae
jns
jno
mov
adcl
jmp
mov
dec
cmpsl
xchg
shl
jne
add
cmp
enter
popa
iret
adc
repnz
clc
add
push
es
dec
into
sub
add
in
jecxz
addr16
sbb
and
mov
mov
push
hlt
jg
jbe
add
and
into
stc
xchg
aaa
add
inc
sti
fsubr
mov
or
adc
ret
inc
loopne
and
test
jns
jle
xor
mov
xor
pusha
jle
add
sbb
add
aaa
add
push
adc
fdiv
mov
push
add
out
mov
add
call
inc
push
add
dec
andl
arpl
mov
lock
cmp
jl
xor
or
loope
das
mov
add
mov
sahf
mov
inc
push
sbb
xor
hlt
orb
jb
push
dec
iret
nop
in
lock
pop
sbb
cmp
inc
jecxz
es
cmpl
stc
or
mov
add
movl
bound
js
sbb
add
xlat
ss
jno
rorb
push
and
stos
mov
std
lock
pop
out
roll
or
cmp
and
sub
int
dec
leave
jb
xor
push
fldt
mov
stos
cmp
add
push
or
add
add
addr16
fsubrl
out
xor
xchg
sbb
pop
test
push
out
pushf
jge
bound
push
lahf
jo
add
sarb
pop
jo
cwtl
add
mov
sahf
mov
mov
sbb
ds
add
sub
scas
jno
stos
loope
inc
aas
mov
jbe
and
xchg
push
or
repnz
pop
in
jl
shrb
mov
add
jge
mov
xchg
cmc
in
mov
add
add
mov
sarb
or
in
sbb
jl
out
and
js
sbb
cmp
cs
add
cmp
clc
fdivp
add
push
jecxz
add
cli
push
cli
sbb
in
iret
jle
cmp
push
and
js
jl
outsb
jbe
icebp
push
mov
mov
add
xchg
sti
mov
addb
xchg
sbb
cmovnp
pop
cld
add
cmc
push
jmp
ret
push
dec
movb
push
pop
lods
mov
dec
and
or
add
das
fdivrs
shll
jbe
scas
loopne
push
xor
pop
push
xchg
repz
add
and
call
fsubp
fcomps
inc
or
in
rcll
mov
push
sub
mov
dec
shll
call
sbb
arpl
fldenv
pusha
int3
add
aad
loopne
rcl
pop
or
test
mov
sbb
cmp
or
incl
test
lcall
mov
dec
add
jno
aam
mov
add
mov
adc
fcomps
add
lock
mov
nop
lea
cmp
add
cmp
loop
loopne
dec
and
jb
mov
cmp
mov
mov
or
out
icebp
repnz
js
loope
xlat
inc
sub
pop
jae
push
cmp
cmp
mov
add
adc
add
clc
mov
test
mov
repz
arpl
adc
dec
inc
daa
dec
fwait
pop
cmp
add
push
push
lds
push
pop
ret
test
mov
jo
push
pop
or
mov
push
or
cld
add
add
loope
cmp
mov
dec
out
stc
add
pop
int3
adc
jnp
js
or
add
or
hlt
outsl
add
int3
inc
push
pop
inc
lahf
pop
jg
lock
sub
dec
cmp
jb
or
cmp
inc
jno
lldt
lods
mov
pop
adc
xchg
mov
addb
movsb
adc
adc
dec
fidivl
dec
push
add
repz
daa
xchg
xlat
fiadds
pop
cltd
xor
loope
dec
ja
notl
add
orb
rcrb
loopne
fisubrl
pusha
or
ret
mov
pop
inc
mov
xor
jo
adc
dec
sbb
imul
clc
sar
add
mov
jbe
push
add
push
mov
push
fidivs
ljmp
cmp
push
sub
inc
inc
mov
xchg
jae
ja
cmp
das
outsl
cmp
or
sub
sub
imul
loopne
jo
or
jmp
jge
jg
add
pop
fsub
add
sbb
push
rcr
push
aaa
adc
xor
adc
fmul
adcb
ljmp
dec
shrd
jle
lods
or
add
mov
push
sub
test
mov
es
cmp
scas
and
in
mov
sahf
andb
or
mov
fiadds
test
add
jmp
repz
mov
daa
add
sub
jp
xchg
add
pop
pushf
jl
loop
add
in
js
cmc
in
daa
pop
daa
mov
es
cs
mov
fs
xchg
jge
ret
lret
sarl
jmp
loopne
das
daa
adc
clc
push
aas
addl
xchg
mov
or
rcr
bswap
cmp
inc
nop
rcr
add
cmpsl
add
adcb
inc
addr16
vmresume
rcr
add
cmp
mov
xor
add
pop
test
rorb
xor
xorb
add
mov
mov
and
hlt
shlb
add
or
loope
cmc
ret
push
sbbb
jl
repnz
push
inc
add
xlat
add
rorb
mov
inc
cmp
ds
adc
add
lea
rolb
pop
in
jle
push
addb
stc
add
pop
scas
or
mov
xor
ret
sbb
imul
xchg
add
push
loope
jnp
adc
scas
cmpsl
lret
cmc
rol
andb
sbb
sahf
add
ljmp
rcll
cmp
mov
xchg
loopne
xchg
pop
lcall
pop
das
out
add
mov
jbe
jl
add
pop
or
dec
add
loop
or
inc
dec
loopne
mov
add
push
cld
inc
nop
dec
cmpsl
add
adc
mov
cmp
repz
divl
push
addb
rcrb
movsl
or
das
js
add
xor
fcoml
cmpsl
pop
adc
lock
jl
mov
call
mov
psubsw
add
mov
movb
repz
add
lahf
ds
push
outsl
mov
hlt
cmp
cmp
add
pop
jbe
inc
pop
sbb
cwtl
adc
js
fsub
loopne
out
pusha
loopne
add
idiv
in
xlat
xor
add
shlb
lock
fadd
rclb
and
leave
cmp
xchg
lock
mul
rorb
pause
loope
push
pusha
inc
loop
add
xor
sub
jnp
cmpb
mov
pop
sldt
xor
repz
or
fwait
loopne
into
xchg
in
add
jecxz
clc
rcll
fs
xor
mov
adc
or
aam
rclb
jge
push
xchg
adc
inc
mov
cmp
cmp
mov
add
dec
fidivrs
int3
cmpsb
sbb
jmp
cmp
mov
in
ret
add
les
lock
sti
cld
loop
xchg
xchg
data16
jge
jnp
jg
push
arpl
or
jb
and
pusha
add
sub
shr
call
push
add
cli
daa
shlb
pop
add
addb
inc
or
dec
add
sub
shlb
add
testl
inc
outsl
mov
and
hlt
daa
out
add
aas
mov
inc
loop
add
dec
lret
pusha
fisubs
jl
or
push
iret
frstor
or
xor
inc
addl
data16
fsubrl
pop
enter
mov
iret
push
in
sbb
ss
adc
xchg
pop
filds
add
imul
mov
popf
mov
pop
and
push
xorl
push
push
inc
in
cmpb
invd
nop
nop
pop
out
repnz
cmp
dec
adc
push
or
mov
addl
sbb
test
into
inc
lea
mov
js
in
sbb
sbb
add
or
push
loopne
rcl
cli
mov
cwtl
daa
stos
testl
xchg
cmp
jnp
sbb
cmpb
sbb
and
loopne
add
add
or
pop
cltd
cmp
sub
inc
xchg
add
sarl
add
adc
je
push
filds
pop
mov
or
xor
mov
aam
nop
aas
test
cmp
ret
inc
sbb
sbb
xchg
sbb
fbstp
push
and
cli
fimuls
and
lods
push
inc
add
ds
jmp
or
mov
out
cwtl
mov
cmp
mov
cmpsl
lea
add
fld
push
rcrl
ffree
jne
ja
jp
sbb
insb
cmp
jo
sbb
mov
pop
cmp
pop
shlb
shlb
inc
pop
roll
aad
add
cmp
add
out
nop
lea
and
lods
popa
cmp
jle
sub
xorl
fwait
sbb
pusha
rorl
and
pop
push
sbb
mov
jns
or
cmpsl
test
push
les
cmovae
jnp
lret
mov
decl
add
push
push
mov
lock
out
orb
push
and
or
jle
mov
rcl
movsl
inc
xchg
inc
mov
add
out
cmpsl
jns
add
pop
xchg
fsts
inc
mov
ja
jle
add
push
and
dec
cmp
xor
pusha
cmp
xchg
or
sbb
add
sbb
aam
pop
dec
nop
xchg
outsl
push
inc
fidivrs
jp
jle
cmpl
lahf
test
inc
or
jbe
mov
sbb
push
add
pop
push
push
hlt
add
pusha
pop
pop
cmp
jmp
nop
mov
cld
es
jne
mov
cmp
js
bswap
ja
arpl
hlt
pusha
adc
dec
sbb
les
cmp
jbe
pusha
or
sbb
clc
dec
sbb
push
or
je
loopne
sub
xchg
test
inc
pop
test
xor
pusha
cmp
rorb
das
popa
mov
clc
add
pushf
rolb
sbb
ds
sbb
sub
aam
add
fnstcw
js
adc
mov
ss
cmp
add
jbe
push
das
fmull
aas
jno
mov
pop
lock
sbb
cmp
push
shlb
addb
push
pushf
pop
add
scas
cmp
rol
mov
adc
push
jl
hlt
jne
popf
sbb
aam
pop
rclb
add
cmp
adc
inc
add
idivb
stc
cmp
mov
pop
lahf
sub
add
jmp
fneni(8087
sbb
testb
roll
xchg
sar
xor
sbb
jp
push
xlat
or
pop
inc
xor
and
dec
movsb
bound
stos
shlb
paddusw
shrb
filds
ds
test
xchg
inc
fcoml
cld
fdivp
lods
mov
cmp
lock
cltd
addl
lock
push
call
inc
lock
adc
leave
fldl
fldcw
call
in
enter
sbb
push
xchg
sbbl
xor
repz
pop
inc
and
or
lahf
cmp
cwtl
adc
jno
pop
shrb
repz
leave
pop
xchg
push
jbe
lds
mov
pop
nop
jo
shrb
cs
and
daa
and
adc
cmp
push
js
enter
pop
and
mov
rolb
popf
cmp
mov
lret
pop
out
mov
rol
inc
pop
lahf
xor
add
out
inc
inc
loopne
test
xor
mov
or
clc
or
fisubrs
pusha
jmp
daa
jno
mov
add
cwtl
out
add
add
cmp
xorb
add
sub
mov
nop
clc
add
int3
dec
pop
shlb
int3
roll
clc
or
sahf
addr16
roll
jb
in
rorl
push
jae
add
inc
pop
loope
sbb
and
pop
shll
repnz
fiadds
pop
loopne
xchg
ljmp
jg
or
pop
fwait
or
mov
and
and
add
cmp
loopne
lahf
inc
xor
popa
sbb
push
ds
mov
push
pop
add
jge
mov
mov
int
std
pop
loop
mov
add
ljmp
jl
add
in
lods
pop
outsb
push
ret
nop
dec
loope
aad
cwtl
pop
sahf
xchg
sarl
pop
add
dec
sbb
jg
add
test
cmp
in
xor
jo
or
mov
adc
mov
loopne
fldt
xor
and
xchg
cmp
ds
icebp
orb
xor
testl
lahf
hlt
shll
pusha
and
cmp
sbb
bound
adc
outsb
and
fdivl
add
in
loop
cmp
add
xchg
enter
add
cld
es
push
aas
xchg
and
inc
filds
inc
jl
add
cs
js
xlat
mov
enter
sub
lods
jo
xchg
pusha
pop
aas
jp
pop
enter
add
cmc
int
sbb
fdivs
cmpsb
jbe
sbb
push
sar
add
pusha
pop
inc
clc
add
aas
add
and
cmp
jnp
cmc
icebp
iret
sarl
or
aad
cmpsb
dec
lahf
cld
clc
lret
cmp
test
sbb
rcrb
xor
pusha
out
add
sub
cmpb
sub
ror
add
add
mov
mov
cmp
subb
inc
push
adc
and
cmp
popa
ret
in
repnz
js
icebp
sbb
loope
sbb
sbb
pop
add
jo
adc
ljmp
dec
in
mov
push
jp
add
dec
xor
or
js
mov
cmpsl
pcmpeqd
js
jp
in
xor
mov
into
pop
out
sbb
aas
adcl
mov
montmul
cmpsb
add
loopne
dec
loop
or
jecxz
and
bound
movsb
test
movsl
popf
ds
and
nop
mov
hlt
add
sahf
out
into
lret
add
pop
les
xchg
push
pop
sbb
sbbl
mov
sbb
add
jbe
mov
mov
sbb
inc
loope
mov
jge
adc
mov
add
add
push
xlat
cmc
std
mov
sbb
punpckhwd
xor
mov
iret
xchg
pop
loopne
xchg
cmp
add
jmp
sbbl
scas
push
scas
or
inc
mov
ret
add
addr16
outsl
flds
xchg
cmpsb
add
in
xchg
cmp
or
pop
mov
sbb
pushf
xchg
push
add
jge
pusha
inc
add
popa
add
inc
sub
pop
mov
push
fstl
loope
les
add
pop
jecxz
icebp
push
faddl
mov
shl
mov
loopne
inc
in
push
dec
push
push
push
arpl
dec
jne
das
sbb
aaa
test
ljmp
aas
push
addb
mov
xor
enter
pop
je
mov
cltd
testb
bswap
jl
add
push
mov
orl
hlt
lock
testb
aam
sbbl
pop
insb
jno
push
pop
jg,pn
xor
loopne
repz
addb
shl
negl
andb
mov
repnz
loope
mov
iret
mov
in
cld
ret
adc
pop
leave
inc
or
and
mov
xor
mov
push
inc
xorl
fs
add
push
popa
pop
add
jp
addb
mov
jo
adc
subl
cmp
lahf
xor
lock
dec
push
out
pusha
mov
aam
or
test
and
in
jp
push
pushf
cmp
xchg
jae
js
xor
lret
inc
mov
ljmp
shlb
jae
sti
and
out
push
jle
movb
mov
shrb
sbb
ret
sub
jmp
lcall
out
movl
adc
xchg
add
cmpsl
dec
mov
and
push
pop
pusha
rorb
pop
cmp
sarl
push
shll
mov
mov
mov
repnz
pusha
sahf
gs
dec
and
sbb
adc
jno
add
adc
cmp
insl
cmp
or
jae
mov
or
les
fadd
xchg
xchg
aam
or
lock
cli
add
enter
push
repz
and
mov
aam
sbbl
mov
cmpsl
lret
push
lret
push
push
call
repz
lret
rcrb
ds
add
add
add
fadd
mov
pushf
and
mov
popa
add
js
out
inc
arpl
add
testb
mov
aaa
cli
add
cmpb
mov
lret
lods
xor
pop
mull
out
and
add
in
add
mov
stos
jo
jo
test
orl
out
and
jge
popf
push
push
pop
shl
inc
inc
shlb
sub
andb
sub
sub
inc
pop
or
adc
add
lock
pop
jl
add
sbb
mov
pusha
xchg
and
jns
out
cli
and
mov
scas
cmp
stc
mov
jnp
add
aad
pop
sub
adc
ficoml
or
aam
jl
xor
out
and
jbe
and
sub
add
push
sub
mov
pop
iret
imul
mov
add
loop
lret
addr16
add
sbb
in
ss
mov
iret
aam
loopne
mov
fs
xchg
add
pushf
or
fisttpll
push
or
push
mov
add
fiadds
jb
out
xchg
add
fsts
jmp
ja
xor
cld
push
add
pop
int
daa
or
add
sbbb
adc
loop
sbb
add
inc
je
mov
mov
addr16
jae
iret
add
lcall
les
mov
ret
mov
rdmsr
add
pop
pop
cwtl
pop
jg
lock
add
xor
add
jle
add
xor
out
xchg
or
pop
nop
imul
sub
or
out
fadds
test
jecxz
sahf
lock
je
lds
dec
xor
mov
popl
rdseed
shl
lock
inc
pop
add
xor
mov
mov
arpl
call
adc
movsl
cmpl
jl
jns
ss
mov
sti
push
repnz
dec
movsb
out
adc
push
add
pop
xorl
rorl
ja
add
mov
add
pop
mov
xchg
out
add
sub
mov
mov
mov
das
cmp
sti
push
add
mov
add
popl
cmpsb
mov
into
and
inc
out
sub
dec
jb
mov
and
repz
ds
outsl
test
cmp
sbb
icebp
sub
testb
add
aas
faddl
movsl
xchg
or
inc
add
in
ret
add
push
mov
cmp
pop
xorl
add
call
cli
clc
add
js
repnz
inc
jo
cmp
add
mov
stc
jae
pop
loopne
cwtl
xor
sub
xchg
cltd
or
jl
je
jle
adc
sahf
and
ja,pt
push
stc
sarl
add
push
xchg
mov
and
loopne
mov
jp
je
add
mov
shll
mov
loopne,pn
mov
idivl
repz
sub
pop
in
pop
stos
fidivrl
adc
jmp
add
into
std
in
insb
out
sbb
lahf
ret
xor
sahf
sbb
movl
add
mov
jnp
scas
rolb
adc
add
icebp
push
bnd
inc
into
mov
ret
je
xchg
mul
jae
push
in
loopne
call
adc
pop
add
jbe
add
fcoms
je
push
mov
cmp
mov
lret
out
sti
lods
bsf
rorl
add
mov
idivl
dec
sbb
jle
lock
pop
hlt
mov
mov
xchg
pushf
add
testl
test
in
mov
lret
sbb
sub
ds
lock
cmp
mov
bnd
mov
lods
popl
adc
pop
bound
cmpb
or
xchg
test
cmc
xor
xor
pop
and
mov
sarb
xchg
cmp
inc
addb
neg
andb
arpl
fld1
add
test
shl
dec
add
jmp
adc
pop
dec
add
add
and
inc
adc
scas
adc
ds
into
int3
rorb
inc
ficompl
dec
push
ds
out
or
pop
in
loope
push
cmp
push
xor
daa
sub
mov
out
add
leave
int
in
rcrb
pop
orb
lods
mov
cld
js
call
lahf
cmp
popa
adc
add
push
lcall
shlb
add
jg
bound
xor
add
sahf
fwait
sbb
or
add
add
enter
add
nop
test
jo
add
adc
pop
ss
mov
mov
clc
add
popf
inc
sub
es
sbb
jns
cmp
int3
jo
ds
jno
lock
hlt
mov
test
ds
int3
mov
outsl
iret
cwtl
push
or
shlb
hlt
mov
cmp
popf
lods
mov
pop
clc
xchg
pusha
jle
mov
pop
or
cmp
cli
popl
and
sbb
add
popa
push
xor
push
pop
and
loope
roll
test
testl
pusha
and
add
and
or
jp
lock
push
adc
mov
sar
or
pusha
adc
pop
sbb
lock
cmp
daa
clc
cmpl
popf
xor
aaa
add
cmp
lods
inc
add
sbb
dec
add
mov
adc
inc
add
push
je
and
dec
cld
add
pop
inc
popf
push
hlt
clc
add
push
out
ret
test
dec
cmp
sbbb
mov
add
inc
add
xchg
sbb
mov
popa
shll
add
es
push
jo
das
or
movsb
int3
sbb
loopne
jg
add
in
loop
push
sahf
dec
jmp
mov
sbb
pusha
pop
jbe
fwait
addb
jno
inc
sbb
cmpsl
push
pop
cmpl
mov
xchg
clc
stc
add
scas
stc
adc
sahf
mov
repnz
cmc
and
lret
repz
add
popa
call
in
add
ror
jno
push
les
jns
aas
std
add
rolb
xchg
sbb
in
test
jns
pushf
add
arpl
test
sbb
mov
notb
jmp
fsubs
push
je
pop
movsl
out
sub
mov
sub
addr16
xchg
and
dec
ret
loop
pop
mov
push
jbe
push
add
pop
fisttpll
test
add
ret
lahf
mov
push
cld
mov
add
xor
iret
and
int3
xchg
push
shrb
dec
andb
push
or
cmp
xchg
inc
sbb
and
or
sbb
and
or
lock
sbb
int3
jl
loopne
pop
mov
xor
clc
or
jns
ja
xchg
add
out
and
adc
add
pop
rolb
decl
enter
add
lahf
dec
lock
xchg
pop
repz
add
or
into
xchg
add
mov
add
aaa
xor
jge
idiv
ret
sub
jne
add
pop
cld
or
cli
ds
nop
stc
jge
add
out
jno
daa
in
pop
pop
ret
push
ret
add
lds
add
sbb
rol
into
leave
jecxz
rcrb
lret
add
push
out
pop
pop
loopne
cli
jl
mov
sub
fcmovne
loopne
jl
dec
out
pop
add
pop
xchg
mov
popf
call
xor
add
fistl
mov
add
adc
push
mov
cmpl
push
enter
rcrb
inc
or
sbb
jmp
jno
stc
int3
lods
mov
ds
jns
ljmp
imul
aas
in
jbe
add
clts
test
je
add
pop
inc
dec
cmp
addl
jno
call
xchg
out
jp
add
add
or
mov
mov
or
adc
aas
pop
push
adc
aam
pop
adc
jbe
icebp
cmc
sbb
rolb
js
jp
das
lock
int
mov
xchg
cwtl
push
or
jnp
call
inc
ret
lahf
leave
jae
nop
in
push
add
aad
icebp
lock
push
sbbb
cld
mov
mov
js
add
loopne
push
jns
ret
mov
loope
add
pushf
jmp
add
sbb
xor
daa
adc
add
sahf
or
ja
add
rorl
mov
add
inc
cmpl
jmp
movl
sahf
xchg
iret
xchg
pusha
movsl
pop
pop
daa
jo
outsl
mov
loope
add
in
push
mov
xor
roll
cmp
mov
xchg
or
rclb
into
pop
adc
xchg
pop
sub
dec
test
sbb
add
test
fadds
or
xor
dec
sbb
sbb
int3
cld
mov
outsl
insb
sbb
jae
mov
sub
add
and
scas
shr
ret
push
add
mov
add
scas
or
adc
faddl
out
arpl
sbb
pop
add
inc
fmull
cli
add
or
jo
aas
mov
enter
std
loop
push
lds
rolb
fimull
inc
xor
inc
mov
enter
cmpsl
sbb
cltd
lds
xchg
jbe
in
clc
add
mov
mov
jecxz
pop
imul
lock
sbb
in
adc
push
cli
out
sub
mov
add
adc
addr16
adc
lods
flds
jne
out
out
add
clc
or
aad
daa
push
movl
shlb
add
loopne
sbb
cmp
adc
sub
sbb
mov
ds
dec
fmuls
push
enter
out
dec
inc
fldl
xor
xor
sub
adc
jl
xor
out
loopne
insl
mov
ret
mov
cmp
add
popa
sub
mov
hlt
leave
mov
shl
sub
adc
pop
into
or
cwtl
lock
int
inc
add
mov
arpl
popa
ret
xchg
mov
adc
dec
pushf
jecxz
ljmp
rol
and
das
add
inc
cmp
loop
push
and
sub
cwtl
imulb
cli
push
ret
outsb
xchg
ds
add
in
mov
sbb
jmp
cld
add
loopne
jb
loopne
xchg
out
add
repnz
mov
add
lds
notl
mov
add
add
push
movaps
xchg
fisubs
xor
lods
into
jo
xor
jp
daa
repnz
xor
mov
clc
xchg
lock
andl
sbb
jmp
sub
loopne
orl
pop
ds
jo
jb
and
push
inc
test
push
dec
xchg
in
vucomiss
or
jmp
and
nop
stc
inc
add
dec
data16
loopne
cmp
cli
sbb
mov
rolb
or
ds
xchg
add
into
push
pop
out
roll
jle
xor
int3
cmp
add
inc
push
idivb
shlb
sbb
leave
cmp
addb
sbb
add
adc
add
push
je
lods
mov
icebp
sbb
mov
mov
int
xor
mov
add
jb
shlb
mov
clc
insb
add
sahf
jmp
xor
lahf
add
jl
xorl
loopne
sahf
inc
fmuls
sbb
inc
mov
mov
scas
push
push
pusha
das
xchg
ret
xor
adc
inc
clc
jle
hlt
jge
pop
cmpsl
sbb
decb
ja
jbe
rclb
dec
daa
or
cmp
inc
inc
iret
sub
add
lods
and
add
out
sbb
lret
fildl
cmp
add
cmp
mov
aas
jmp
cmovb
sub
and
add
inc
cmp
jmp
sbb
pushf
out
adc
stc
mov
loop
fistpl
add
mov
cmc
pop
and
or
push
inc
add
int3
addr16
cmp
push
loopne
stc
add
popf
mov
and
add
cmp
jecxz
add
xchg
sub
push
lock
jae
add
cmp
movsl
popf
dec
je
jnp
popa
add
push
int3
sbb
add
adc
aad
in
fiaddl
jbe
clc
and
and
in
dec
xor
push
ja
lock
xor
add
aaa
xor
jnp
add
or
mov
sbb
sub
cmp
cli
add
mov
dec
cwtl
sbb
jp
movsb
sbb
in
sbb
jnp
dec
sarb
rolb
mov
in
push
icebp
pop
push
fwait
add
sbb
cmp
lahf
or
add
xor
roll
xchg
sub
add
scas
add
insb
mov
or
xor
cmc
add
and
inc
pop
out
sbb
shlb
add
lock
cli
jnp
add
or
dec
push
cmp
pop
fsubl
int3
movsb
icebp
stos
rcr
mov
addb
rorl
cld
dec
adc
pop
repz
push
mov
sub
add
pop
xor
jnp
lret
pop
add
push
sarl
pusha
scas
cltd
add
adc
jle
pop
sub
sbb
push
movswl
add
pop
mov
popf
aaa
fldl2t
hlt
inc
add
mov
clc
or
je
push
mov
xor
add
mov
sbb
loope
add
mov
icebp
xchg
cmpsb
addr16
loop
xor
mov
ja
cmp
cli
sub
or
lock
or
add
push
in
add
ds
push
bound
scas
cmp
sub
shrb
mov
out
pushf
add
call
cmpsl
add
mov
test
les
or
mov
iret
dec
xor
nopl
addl
rolb
mov
imul
add
mov
pushf
mov
pop
pop
xchg
sbb
mov
sbb
arpl
add
cmc
cwtl
lock
xorb
dec
inc
mov
push
nop
cli
orb
mov
add
mov
jns
rorl
or
sbb
xor
cmovl
jo
lahf
lret
loope
cmpsb
add
sub
pushf
iret
pop
adc
add
jnp
pop
mov
fwait
xlat
adcl
inc
clc
pop
pop
loopne
jmp
add
dec
sarl
pop
jnp
dec
pusha
dec
jecxz
pop
and
push
xor
push
and
sbb
ja
adc
sbb
js,pt
xlat
push
jl
add
push
mov
sahf
shlb
add
sbb
or
into
ret
add
mov
movb
jns
popf
loope
loopne
in
dec
add
lea
lock
pop
sti
call
shrb
add
jp
inc
mov
pop
out
inc
ja
cld
int3
add
xor
cmp
push
mov
in
mov
out
andb
cmp
andb
pushf
ljmp
inc
lods
movsb
push
pop
cmp
push
lret
add
sti
rolb
add
in
sub
add
addr16
in
cmp
enter
test
int3
orl
and
arpl
lret
cmp
inc
outsl
add
loopne
adc
nop
and
aad
sbbl
test
adc
pop
int3
pop
popa
lock
mov
clc
fsubr
testl
push
add
inc
cmp
nop
dec
fdivs
or
fcompl
or
cmp
enter
movsb
les
pop
int
lds
lods
add
mov
adc
inc
cld
xor
or
mov
mov
mov
int3
in
add
hlt
shl
pop
xchg
or
cmp
xor
pop
push
mov
loopne
or
cmp
add
stc
test
js
pop
jae
test
faddl
jo
cwtl
ss
mov
jle
adc
add
mov
add
inc
push
cld
add
icebp
jb
adc
es
ret
mov
int3
inc
add
or
inc
and
pop
or
sbb
repz
clc
push
push
pusha
pop
xor
aas
into
adc
loopne
and
jnp
pop
cwtl
xor
sub
add
pop
inc
es
adc
mov
in
clc
sbb
add
loope
divl
int3
mov
pusha
adc
cmp
stc
clc
xor
cmp
mov
mov
aaa
cmp
or
movsb
xchg
and
popf
add
and
cmp
sbb
aas
cmp
subb
jmp
add
out
sbb
cmpl
lods
mov
sub
popa
leave
add
sahf
insl
dec
loopne
ret
mov
lcall
add
je
js
cmpsb
push
sub
mov
push
cmpsl
mov
pop
orb
hlt
out
rclb
loope
jns
add
pop
mov
icebp
inc
add
mov
loopne
cld
adcb
mov
cltd
mov
roll
mov
ret
add
mov
sbb
inc
add
cmp
inc
add
push
pop
pop
adcb
clc
inc
call
mov
lds
and
pop
add
pushf
dec
push
sub
inc
cmc
test
imul
aam
loope
sarb
addr16
jle
sbb
pop
int3
adc
inc
jns
cmp
or
mov
inc
pusha
xorb
loop
xchg
das
mov
jo
add
mov
js
jge
in
xchg
in
jbe
ja
add
pop
sbb
xchg
and
sti
add
xlat
jne
shl
sbbl
popa
push
cmp
rol
loope
out
and
push
pop
unpcklps
out
push
pushf
js
fcoms
arpl
std
inc
inc
jge
gs
mov
js
mov
mov
jns
les
in
lock
sub
adc
jo
incb
xchg
xlat
add
add
clc
or
pop
imul
shr
rclb
pop
pusha
add
clc
stos
or
movsl
popa
sahf
add
lret
push
and
jb
ljmp
addl
mov
insb
sub
dec
adc
add
sub
movb
addl
aas
rcl
movsl
pop
add
popa
pop
test
ja
loopne
add
aas
movsb
subb
clc
mov
mov
jle
call
and
mov
add
mov
mov
iret
cmp
add
dec
icebp
shlb
sbb
and
fadds
sub
cmp
add
push
popf
outsb
cld
in
roll
push
iret
jl
lock
sbb
in
dec
arpl
and
shl
mov
divl
ss
int3
sub
pop
add
push
movsb
lea
add
mov
mov
std
push
adc
or
or
adc
loop
aas
stos
mov
xor
add
xchg
js
clc
xor
jnp
shl
dec
xchg
adc
mov
cmpb
scas
xor
sbb
jecxz
ja
ret
sar
add
hlt
sub
in
lahf
add
add
or
push
mov
jg
shl
add
mov
add
and
repz
insb
add
call
lea
xor
add
sub
ret
pushf
jmp
mov
sbb
inc
push
rorl
je
add
int
aaa
pavgb
aam
repnz
cs
je
or
mov
aas
orb
mov
mov
outsb
sti
addb
sbb
jae
icebp
pop
shlb
push
and
sbb
adc
loopne
add
sbb
cwtl
mov
add
pop
lea
mov
aad
add
xchg
and
icebp
mov
lock
and
cmp
shll
push
push
add
add
and
ja
lock
lds
aas
pusha
orl
pop
jp
add
out
sub
je
loopne
arpl
push
xchg
or
add
add
sbb
arpl
adc
xchg
ljmp
xor
outsl
or
ror
xlat
movsb
pop
add
jbe
fnsave
inc
add
and
repz
jnp
add
leave
sbb
mov
pop
shrb
repnz
mov
pop
loop
inc
iret
sbb
mov
lahf
test
jo
add
fldenv
sbb
lods
popa
mov
insb
loopne
imul
arpl
or
jno
add
xchg
clc
sbb
push
or
aam
mov
pop
leave
cmp
cmp
pusha
stc
push
arpl
setge
push
push
out
iret
test
ds
or
lahf
or
add
inc
sahf
hlt
sarb
aad
insb
fadds
int3
mov
cmp
dec
jbe
inc
rorl
and
lock
icebp
cmp
je
xchg
bnd
sahf
fiaddl
jl
addr16
sbb
cli
mov
add
xor
push
orl
insb
dec
clc
jae
pusha
push
out
faddl
cwtl
add
pushf
push
ficomps
add
inc
push
add
addb
cmc
pop
dec
or
inc
add
in
add
or
rolb
ficoml
scas
pop
inc
jl
dec
cmp
ljmp
out
repnz
pop
loop
daa
mov
add
sub
adc
push
sar
mov
addl
fisttpll
test
mov
pop
jle
leave
sarl
push
jno,pt
jns
cmp
scas
add
mov
dec
and
add
jle
add
sub
bound
add
mov
or
out
pop
cmpsb
push
sbb
adc
push
pop
aas
clc
icebp
add
dec
add
mov
sbb
fwait
pop
mov
fidivrs
xor
dec
jbe
jno
add
or
add
add
add
pop
pop
push
mov
pop
add
xorl
cmp
rcrb
nop
add
xchg
lds
pop
lock
addl
stc
loopne
clc
mov
and
ss
xor
andb
xor
imul
push
jo
sahf
jg
add
sarl
dec
call
pop
dec
or
inc
fsubrs
xchg
ja
cmpb
jl
imul
test
scas
mov
cld
jno
add
add
orb
or
js
sahf
add
iret
das
dec
clc
aaa
dec
sbb
adc
sub
pop
mov
sbbb
cmp
inc
push
add
xor
fwait
add
mov
gs
add
adc
sbb
pminsw
loopne
cmp
lret
mov
ret
push
out
test
or
and
sub
add
lea
out
popa
leave
push
fs
rorb
inc
add
sbb
adc
push
jae
testl
inc
push
lea
and
rcrb
bswap
mov
add
sahf
sub
fadd
jp
fadds
fsubs
add
mov
lea
pop
cld
test
outsl
imul
sbb
cwtl
add
sbb
lods
sbbb
inc
or
xor
xor
xor
lea
shll
mov
xchg
subb
pop
mov
dec
jnp
add
aaa
sub
cltd
jecxz
mov
int
or
inc
add
inc
lds
mov
cmp
test
cmp
xor
xor
fwait
mov
pop
mov
cmp
roll
pop
dec
mov
dec
arpl
mov
out
sti
sub
dec
push
call
pop
xor
xchg
inc
cmp
and
pushf
es
loopne
ficoms
repz
call
add
inc
pop
pusha
jge
roll
arpl
iret
mov
lahf
lret
popa
rorl
fcoms
sbb
xchg
arpl
cmpsb
add
fistps
mov
shlb
in
xor
mov
mov
pop
mov
xchg
inc
cmpsb
add
add
leave
dec
adc
loop
jbe
add
xchg
lods
movntps
rcrb
divb
pushf
pusha
rolb
and
jecxz
inc
xor
add
fcoms
pop
iret
xchg
add
rsqrtps
incl
fs
in
jle
pop
fsubl
cli
add
jmp
mov
jo
mov
popa
add
and
adc
inc
pop
xor
add
add
mov
sbb
lock
inc
pop
jp
rcrb
popf
jo
add
test
add
mov
push
notl
not
xchg
sbbb
add
rcrl
xor
push
xor
inc
push
push
cs
mov
add
dec
loope
add
cwtl
sbb
sbb
jo
or
xchg
repz
lret
rclb
add
cmp
cmp
adc
mov
xor
or
and
cmpsl
sbb
fadds
and
rol
mov
xor
fbstp
or
add
pop
shlb
sbb
dec
test
addb
xor
adc
xor
es
jmp
add
pop
cmp
add
xlat
les
adc
lahf
mov
and
cmp
loope
xor
add
fyl2x
push
add
rorl
inc
add
stc
cmpsb
xrelease
lods
add
inc
inc
dec
add
push
shlb
add
jb
outsl
scas
mov
sbb
ds
cmp
add
mov
and
lea
cmp
shll
testb
and
mov
or
mov
add
xor
lcall
mov
mov
push
xor
push
pop
cmp
loopne
sub
inc
pop
pushf
out
test
push
pop
jp
movsb
cld
jb
int3
idivb
in
roll
outsb
aam
scas
sbb
sub
js
pop
icebp
mov
xor
out
inc
lret
sbb
andb
fmull
push
jl
cwtl
xor
sbb
push
push
mov
or
push
fsubs
call
add
out
aaa
icebp
lahf
xor
lret
add
or
mov
push
outsl
mov
push
sub
sbb
add
sbb
lock
lret
xchg
dec
jle
sbb
jg
data16
bound
andl
addl
out
arpl
push
pusha
xor
ret
and
jp
add
cmp
jae
stos
in
aam
dec
out
subb
mov
es
and
push
inc
inc
into
call
mov
cli
add
out
mov
xchg
push
filds
in
nop
icebp
ja
pop
push
mov
sbb
xor
dec
xlat
arpl
rolb
pushf
pop
scas
dec
inc
pop
add
dec
sbb
xor
add
sbbl
sbb
cmp
lahf
incb
jae
bound
gs
imul
ds
sbb
es
lret
inc
mov
in
cmpsb
push
out
add
les
push
cli
or
or
xchg
outsl
or
add
and
and
out
mov
pop
iret
fstps
dec
xor
subb
ret
imul
add
cld
pushf
loopne
rorb
jns
clc
add
cmp
rcrl
pusha
orb
xor
out
mov
add
ljmp
jnp
icebp
test
sub
xchg
outsb
adc
xor
xlat
popa
sbb
mov
mov
loope
rorb
mov
jp
mov
sbb
add
pop
pop
add
insl
xor
inc
jbe
cwtl
sbb
mov
mov
imul
enter
add
and
jo
je
mov
cmp
and
int
mov
pop
imul
icebp
adc
pop
rorb
addl
push
sahf
rolb
add
xchg
add
rcrl
push
fisubrs
in
out
jno
sbb
dec
mov
or
push
shlb
pop
js
daa
out
add
ret
sahf
and
sbb
dec
pusha
faddl
je
cmp
lahf
mov
add
mov
lock
xor
mov
orl
and
outsl
sti
sbb
mov
jle
cmpb
mov
pop
mov
sbb
loopne
outsb
fstps
push
cmpsl
add
rol
lahf
and
add
add
jle
lods
cmp
mov
jecxz
aas
lret
mov
loopne
ret
loopne
iret
or
jmp
in
das
sar
cltd
pop
sbb
popa
sbb
icebp
les
rorb
lahf
adc
repnz
dec
jo
cltd
jl
add
and
xchg
mov
sub
xor
inc
add
push
addl
add
gs
add
shrb
mov
hlt
add
std
stos
pop
adc
pop
std
pushf
das
bt
pop
enter
out
mov
repz
pop
sbb
ljmp
mov
popl
xlat
lds
add
jecxz
jo
out
pop
imul
pop
add
test
add
inc
jmp
lldt
daa
enter
add
pushf
xor
out
mov
cli
jae
in
js,pt
test
cmc
jnp
mov
insb
mov
lahf
jp
sbb
ret
jns
cwtl
cltd
arpl
inc
outsb
sbb
sbb
je
or
cmp
mov
add
pusha
inc
ret
mov
jb
scas
pop
inc
sub
lods
mov
mov
lock
enter
shl
inc
pop
mov
pop
sbb
lds
ds
add
rcr
dec
adc
add
or
sub
adcb
mov
aas
popl
cmp
inc
and
sbb
test
pop
xor
lock
sti
sbb
add
jmp
int3
and
sbb
rolb
jns
pop
sbb
add
lea
jp
shl
push
movl
add
push
inc
lods
inc
mov
add
cmp
sahf
xor
adc
loopne
dec
loop
movsb
daa
inc
imul
add
aas
xchg
push
add
push
clc
cmp
mov
push
pop
sub
fucomip
int3
xor
add
cmpb
pop
mov
aam
mov
into
dec
faddl
add
out
add
or
js
nop
cli
xor
xchg
movl
stc
add
cmp
loope
jns
jl
push
xchg
xchg
invd
jo
mov
movl
push
cmpb
cld
mov
add
cmp
incl
mov
sbb
or
and
sub
fadds
adc
cwtl
adc
mov
jb
mov
cmp
sarb
cld
movsb
or
adc
add
rcl
imul
pop
adcb
jo
mov
inc
in
movsb
cmp
mov
add
or
push
or
movb
pop
sub
dec
js
pop
cs
jno
jp
shrl
add
pusha
xchg
ja
cmpsb
jecxz
pop
and
add
shll
xchg
lret
in
fs
cmp
icebp
aas
pop
stos
add
loopne
popa
inc
cld
fsubr
push
jno
jecxz
punpckhdq
and
imul
add
loopne
mov
or
es
mov
cli
jns
pop
cld
mov
mov
push
pop
add
jg
imul
and
mov
adc
clc
in
roll
test
data16
push
cmp
xlat
push
dec
out
in
loop
mov
aam
cmp
jnp
xor
add
push
mov
in
pusha
testb
pop
cmp
dec
pusha
fsubrs
std
add
mov
jnp
add
jno
daa
add
rolb
out
xor
repnz
lldt
or
add
lock
fwait
mov
pop
aam
incl
cs
push
add
sbb
lret
add
sbb
mov
sahf
ret
sbb
das
iret
cmp
add
fimull
dec
pop
fisttps
outsl
jl
sbbb
jns
add
das
pop
push
add
inc
add
sbb
mov
pop
push
and
jno
mov
jo
add
rcrb
or
call
pop
sbb
push
lods
fistpl
add
mov
stc
clc
cmc
xchg
outsb
xchg
push
jae
xchg
dec
pusha
loop
add
ret
test
repnz
sub
sbb
out
iret
outsb
add
subb
inc
dec
add
sbb
movsb
add
mov
cs
or
addl
nop
push
cmp
inc
mov
add
fildl
js
sbb
rclb
add
or
daa
shlb
cmp
jbe
sbb
or
cwtl
add
pop
sbb
add
or
je
add
mov
les
xorb
repnz
ds
faddl
jmp
ret
mov
and
dec
out
jle
xlat
pop
pop
jl
test
add
cwtl
popa
and
mov
push
push
clc
xor
inc
shll
sub
out
mov
lahf
sub
pusha
push
inc
pop
mov
andb
add
sbb
cmp
jl
addr16
loop
push
cmp
jg
ret
pop
adc
dec
or
adc
data16
shlb
lret
push
push
ljmp
adc
pop
add
rolb
sahf
lock
loopne
jge
mov
fbstp
stos
andb
pusha
mov
test
test
andb
icebp
xchg
lock
hlt
movsb
loopne
pop
mov
inc
xor
mov
rol
sbb
add
pusha
sbb
enter
icebp
sbbl
fwait
pop
add
repz
into
sbb
mov
xchg
jge
add
icebp
dec
or
out
cmpb
clc
les
lock
testl
inc
add
outsl
sbb
pop
xor
rclb
iret
loopne
dec
lcall
adc
sbb
or
add
add
adc
stc
jo
pop
lods
mov
mov
aas
cmp
lahf
jp
scas
add
rcll
inc
shrb
push
loope
lahf
data16
push
pop
aaa
add
mov
or
sbb
loopne
pusha
popf
add
sub
subl
stc
and
dec
push
pop
movsb
inc
cmpsl
mul
or
clc
or
arpl
int
lock
adc
in
ret
stos
xchg
push
dec
xor
adc
xorl
mov
icebp
sbb
and
rolb
and
ret
jp
jge
test
inc
push
mov
jmp
fwait
adc
xor
push
loopne
cmp
mov
arpl
xlat
orb
mov
fisubrs
testb
mov
jns
stos
cmc
rorb
sbb
cmp
mov
call
xlat
add
int3
cmp
add
scas
and
lret
add
xchg
add
dec
or
out
add
adc
lock
clc
pop
push
sbb
rorb
enter
jp
dec
xor
xchg
out
shrb
dec
add
scas
aas
push
sbb
fisubl
sbb
xor
or
mov
and
push
or
pop
loop
xchg
cmp
ja
imul
or
icebp
aas
or
add
mov
mov
mov
push
jae
hlt
or
add
cmp
inc
xor
fidivs
add
out
loopne
cmc
pop
add
mov
pop
pop
inc
in
rolb
mov
fldcw
leave
push
adc
sub
test
sbb
paddusw
minps
test
aaa
and
add
enter
inc
or
cmp
xchg
shrb
cmp
mov
adcb
mov
add
cmpsb
add
dec
fdivl
insb
in
or
xor
adc
mov
jge
sete
ljmp
pop
mov
addb
xor
loope
call
cmp
xorb
adcl
sbb
fst
mov
jmp
repnz
jecxz
nop
xor
daa
dec
jbe
rcrl
add
cmpsl
jle
repz
mov
rolb
in
mov
jno
inc
sbb
jnp
mov
faddp
jne
xor
repnz
call
mov
xlat
addr16
ds
int3
pop
and
popa
std
enter
adc
mov
inc
lock
xor
push
arpl
imull
cmpsl
insl
je
test
clc
movsb
jne
pusha
xor
jno
iret
int
xchg
or
test
sbb
andb
arpl
add
cwtl
cmp
push
sbb
or
dec
xor
inc
les
add
xchg
dec
jne
push
push
jecxz
ret
or
das
add
in
imul
int3
shlb
mov
add
mov
mov
add
in
mov
sbb
jnp
xlat
sub
cmp
adc
fcoms
push
addr16
jbe
div
stc
orl
sbb
or
push
mov
ret
js
or
leave
push
arpl
test
sbb
add
in
inc
and
cmp
cltd
sub
js
or
mov
inc
idivb
inc
jae
rolb
xor
jl
loop
xchg
jmp
adc
cld
lret
cmpsb
outsl
add
lock
addl
inc
sbb
dec
pop
pop
push
pop
cmp
xorb
rolb
cmp
ljmp
enter
stos
mov
pop
add
aaa
add
jecxz
adc
test
jge
xor
and
addr16
sbbl
xchg
dec
fwait
cmp
and
adc
jecxz
jle
jbe
ret
xor
cmp
mov
sub
nop
cmp
jecxz
lock
pop
icebp
clc
mov
es
ud2
hlt
data16
dec
sarl
ret
dec
in
sub
stc
pop
and
or
jne
icebp
js
add
mov
dec
popf
enter
sbb
movsb
mov
sbb
or
lcall
pusha
fidivs
add
divb
rcrb
rcll
add
xor
add
fldl
dec
lods
mov
sarb
mov
inc
ficoml
sub
addr16
loopne
or
ret
hlt
add
cltd
jecxz
out
or
lcall
dec
add
mov
sbbb
sarb
lret
sub
mov
inc
enter
lock
cli
loopne
cli
sbb
cmpsl
adc
inc
inc
test
orb
or
add
add
mov
xor
fdivr
add
repz
popf
add
call
shl
dec
push
jnp
pusha
xchg
mov
loopne
cmp
cmpb
sbb
js
add
xchg
sbbb
push
pop
cmp
jno
jge
jno
and
and
rclb
cmp
xor
xchg
js
or
shlb
and
testl
xchg
clc
mov
iret
sbb
and
fnsave
xor
sbb
xorb
and
add
push
pop
xchg
add
hlt
insb
lret
push
mov
lock
pop
jnp
add
cmp
lods
cmp
or
orb
lret
add
inc
and
xchg
xchg
or
push
pushw
sbbl
lock
pop
shr
fsubr
dec
add
jmp
inc
cmp
mov
xor
or
mov
xor
sbbl
pop
ficoms
enter
cli
test
lret
rcll
les
add
iret
inc
cmpsb
jg
repnz
sbbl
inc
push
rcl
outsb
pop
mov
es
aaa
mov
add
out
sbb
mov
sahf
adc
or
pop
sub
or
ror
adc
jp
add
jns
push
add
xchg
push
add
sahf
add
movl
fistl
icebp
add
sub
cmp
daa
jns
cmpb
pushf
xchg
bound
arpl
push
loop
andb
movsb
mov
stc
clc
addl
add
mov
bound
in
fistpll
xor
nop
nop
mov
outsb
pop
cs
loopne
push
adc
pop
cwtl
clc
add
and
enter
add
aas
xchg
pop
shrl
pop
inc
lock
jns
addr16
pusha
fwait
add
cmp
dec
jbe
pop
or
mov
cmp
sbb
add
jne
lock
pusha
sbb
dec
lret
cmpsl
or
enter
cmp
faddl
enter
cmp
inc
xchg
and
lock
ja
sahf
sub
inc
call
add
jp
pop
imull
clc
js
adc
xor
pop
cmp
cmpb
cli
add
enter
jl
icebp
mov
pop
push
ret
pushf
pop
lcall
insb
lock
test
repnz
in
sub
jecxz
pushf
add
push
mov
sub
je
push
sbb
loop
or
add
pusha
mov
jno
repz
jmp
sub
mov
out
add
jp
add
addr16
push
cmp
dec
and
rclb
dec
pop
cmp
pop
iret
mov
inc
jp
pop
or
jno
aad
cmp
sahf
adc
std
cltd
ljmp
dec
jge
lea
rcl
adc
or
lret
jge
hlt
pop
add
inc
mov
sti
fmuls
add
into
sbb
sbb
add
cmpsl
movl
mov
dec
add
xor
out
cmp
pop
arpl
and
rorb
push
cmp
pop
add
mov
xchg
cmp
push
pop
add
cmp
mov
mov
sub
rolb
and
andl
shlb
mov
add
xor
hlt
adc
mov
mov
in
fbld
ljmp
movsb
into
jnp
add
clc
enter
pusha
cmp
outsb
push
xchg
cmp
fninit
rolb
xchg
jl
hlt
stc
add
push
push
push
loope
int3
mov
addl
mov
cmp
pcmpgtw
and
aaa
sbb
push
cmp
or
xor
jne
push
inc
inc
mov
pop
push
mov
mov
or
les
hlt
std
clc
add
xchg
mov
xor
mov
cmp
das
sub
les
dec
dec
loop
or
inc
cmp
add
xor
pop
jne,pt
add
inc
loop
and
fiaddl
jg
pusha
sbb
js
cwtl
lcall
repnz
jl
rcrl
add
shlb
pop
push
lock
testl
jns
loopne
jp
add
pop
inc
sub
sub
push
add
mov
or
xchg
out
xor
repnz
inc
sbb
push
or
dec
nop
shlb
jo
sbb
rcrb
ficoml
add
pop
and
rorl
hlt
ljmp
ja
outsl
aas
ds
sub
add
ret
pusha
jo
call
lds
sbb
pop
mov
push
add
inc
aas
outsb
xor
cmp
dec
mov
stos
das
clc
cwtl
push
jle
add
orl
xor
inc
lock
out
sbb
into
orl
test
str
insb
pop
cmp
add
cmp
mov
orb
jae
or
into
pop
push
in
mov
pop
fstps
pop
roll
repz
lock
cmp
pop
loopne
push
das
insb
popl
sarl
mov
andb
mov
iret
and
imul
pop
loope
movsb
pop
adc
outsb
cltd
sbb
out
je
jns
fs
inc
in
add
andb
pushf
dec
mov
add
cmp
outsb
shlb
adcb
faddl
or
mov
inc
lods
ret
dec
mov
jno
inc
pop
add
add
jecxz
adc
dec
cmp
mov
add
inc
cwtl
pop
jb
out
dec
add
jo
ja
and
pushf
add
out
cmp
dec
stos
mov
loopne
int3
adc
add
add
xor
js
push
rclb
lcall
and
out
fadds
cmp
stc
or
xchg
push
sbb
xchg
lock
shlb
js
cmpb
sub
add
inc
cmpl
add
stc
mov
xor
inc
push
test
hlt
ret
adc
pop
add
pop
fdivrl
outsl
ds
or
call
add
pusha
xchg
lret
sbb
js
add
out
mov
inc
push
insb
push
push
shl
add
and
stc
mov
cmpl
jecxz
out
jle
lock
jns
mov
adc
je
sbb
subb
xchg
aas
adc
pop
adc
orb
dec
inc
push
cmp
pop
addl
mov
and
or
inc
loopne
lock
arpl
pop
outsl
int3
test
or
xchg
xchg
incb
aam
mov
mov
xor
call
add
push
inc
loopne
pop
scas
sahf
mov
push
fnstcw
enter
add
shll
mov
lds
add
jbe
add
negb
lock
lcall
ljmp
add
lret
fwait
emms
out
pop
repnz
sarl
inc
xor
subl
jae
xor
cmp
mov
xor
out
or
mov
paddw
shlb
push
add
or
arpl
and
lock
ret
and
mov
sub
add
jo
icebp
stos
faddl
or
push
or
cmpsl
push
ret
stos
add
sbb
add
rcrl
cwtl
sbbl
and
jecxz
stos
dec
aaa
hlt
loopne
scas
sbbl
push
lret
inc
mov
cld
dec
and
mov
add
movsl
rolb
sbb
add
adc
pop
adcl
subb
in
mov
mov
mov
ss
jle
icebp
push
mov
insl
shlb
rclb
jo
arpl
dec
push
mov
sub
lcall
pop
rclb
lds
add
pop
pop
push
in
mov
add
imul
or
fcoms
and
rcrl
jbe
adc
jo
push
jne
and
or
pop
mov
cmpb
clc
xchg
jo
adc
dec
cmpsb
addr16
lcall
into
add
pop
push
cmp
jbe
add
es
lea
andb
add
lock
sub
xchg
push
pop
sbb
arpl
iret
lsl
out
cmpsl
pop
inc
push
adc
pusha
and
mov
lods
pop
inc
add
ret
adc
filds
sub
es
decb
inc
aaa
add
push
mov
je
or
adc
sbb
inc
add
push
jb
js
hlt
insl
lahf
pop
mov
flds
sbb
add
jo
adc
add
sbb
adc
scas
xchg
sahf
or
push
push
lds
lods
mov
jecxz
dec
push
cwtl
gs
add
testl
jmp
sbb
out
xchg
js
add
add
ret
cmc
inc
shll
loop
mov
push
rcl
inc
pushf
push
xor
adc
lods
int3
mov
pop
or
dec
add
mov
add
pop
mov
fsubrl
lret
lods
inc
test
and
scas
enter
mov
xchg
aas
lret
add
aad
xor
jmp
add
testl
dec
xor
or
mov
ss
aam
cmp
fnsave
add
inc
pop
lret
pop
or
cmp
es
sbb
push
mov
add
ss
mov
add
out
and
or
and
idivl
xchg
rcrl
clc
sbb
int3
imul
pusha
add
sbb
mov
mov
dec
add
or
std
and
add
jns
mov
push
adc
add
cmpsl
or
aam
mov
jae
ljmp
iret
imul
negb
loopne
add
sbb
mov
cmp
push
aam
jp
icebp
push
push
rclb
loopne
add
rcrb
add
mov
push
pop
add
xor
mov
test
pop
pusha
xor
popf
loop
mov
out
adc
mov
sahf
pop
or
jp
jl
add
cmp
pusha
xor
mov
outsl
add
push
push
mov
add
or
dec
ss
ds
call
or
clc
cmp
add
aam
pop
addl
add
jl
pusha
pop
sbb
sbb
adc
aam
loop
inc
sbb
ja
shll
jl
xor
add
shlb
fildl
mov
jle
xor
fwait
mov
mov
int3
inc
add
adc
add
and
sbb
sbb
pop
test
push
pushf
add
dec
js
xor
xchg
add
adc
push
arpl
mov
cs
push
je
jns
mov
outsl
in
add
outsb
jbe
xchg
stos
pop
cmpsl
sarl
add
and
push
xor
pop
punpcklbw
inc
jp
jmp
aad
daa
rolb
add
lcall
dec
cmp
add
jle
add
daa
ss
test
jne
repz
add
add
push
sub
dec
add
push
inc
push
insl
jne
add
or
and
xchg
rcrl
mov
out
sbb
jbe
push
repnz
test
cmc
dec
add
out
add
mov
jl
add
imul
mov
sub
js
mov
mov
xchg
repnz
das
xchg
cld
adc
jno
push
jmp
lock
xor
stos
clc
lods
dec
in
jl
sahf
and
cwtl
in
sub
adc
add
ficompl
sti
inc
mov
ret
push
inc
in
adc
mov
mov
sbb
cmp
loope
into
setge
and
leave
add
les
jge
and
mov
pusha
pusha
repz
and
add
jno
movswl
in
orb
repz
call
pop
add
sub
cmp
int3
nop
mov
push
jmp
inc
orb
xor
adc
cmp
test
sbb
sub
lds
cmp
add
pop
jecxz
cmp
add
jbe
sbb
lret
add
icebp
stos
xchg
pop
cmp
cmp
mov
in
nop
add
dec
jg
mov
and
aas
sub
ss
xor
add
cmpl
aam
jae
cli
popa
jecxz
sti
add
ret
sub
mov
xchg
aas
fs
dec
fcomps
sbb
cmp
aas
scas
pop
add
cli
adc
inc
rorl
mov
adc
andb
arpl
jg
xor
add
xor
outsl
xchg
andb
pop
adc
add
shl
insb
mov
lret
mov
push
daa
ds
inc
pop
ret
lods
add
scas
mov
add
push
sbb
xchg
jo
lcall
jge
jne
rcrb
clc
mov
add
cmp
or
test
sub
cmp
inc
push
ds
cmp
xor
ja
es
sub
pop
push
add
mov
xlat
add
ss
int
lock
jo
pop
std
fnstenv
mov
add
xchg
jl
add
sbb
in
mov
adc
popf
pushf
add
pop
add
add
jne
push
es
sub
jp
pusha
add
sub
jmp
add
into
or
push
adcl
push
nop
fisttps
jno
xchg
add
sti
add
xor
add
pushf
in
sbb
add
and
outsb
pop
jno
cld
icebp
xchg
nop
scas
and
xlat
add
out
add
imul
aas
in
mov
orl
das
pop
sbb
mov
pusha
inc
ljmp
add
sbb
add
std
gs
add
push
lahf
add
psubb
xchg
call
xor
ret
push
sahf
fcmovb
loope
es
mov
cmpsb
das
shrb
lock
lret
aam
clc
loop
jne
cmp
rcrl
push
add
mov
mov
scas
push
insb
sub
and
scas
addb
xlat
popa
pusha
sub
mul
cld
add
jno
cmp
adc
add
insb
xchg
hlt
in
in
add
xchg
ss
inc
out
sarb
lock
jo
xchg
jbe
addb
ficomps
pop
js
mov
pop
mov
adc
mov
in
or
and
push
aas
nop
jo
push
ja
add
push
fldenv
repz
rorb
cmp
fidivrl
mov
push
les
popl
daa
mov
cmp
jnp
add
dec
call
loope
xor
push
or
clc
loopne
addr16
jecxz
jmp
or
paddw
addl
sahf
or
sbb
pusha
pushf
add
cmp
pop
jecxz
loopne
add
add
sub
mov
sub
and
xor
inc
aad
mov
add
add
mov
mov
jge
add
pushf
leave
add
daa
push
xor
adc
shl
js
and
cmp
mov
fs
fdivs
icebp
shl
test
adc
xchg
jp
and
ret
xor
and
into
dec
rol
xchg
dec
jmp
inc
cmp
outsb
pusha
daa
sbb
add
mov
imul
or
adc
mov
or
ljmp
or
mov
fwait
mov
loopne
adc
xor
or
scas
out
add
sbbb
rol
fnstcw
inc
add
ret
add
lock
dec
add
mov
inc
adc
jbe
lock
lahf
jno
and
inc
sbb
out
jp
cmp
cmpl
adc
rcl
push
nop
dec
jge
pop
movsl
shl
push
mov
inc
es
xchg
adc
xchg
xchg
pop
add
sbb
loope
popa
xlat
add
lahf
pop
sarb
add
add
mov
jge
inc
pushf
add
adc
ja
repz
cmp
and
cmc
jns
nop
add
sahf
ret
fcoms
xchg
rorb
das
add
cmp
enter
pop
inc
cmpsb
enter
add
add
cmp
int3
and
pop
adcl
jl
cmp
testl
leave
out
or
lgs
aaa
fs
cmc
sbbl
addb
std
add
fadds
inc
add
sahf
imul
into
add
inc
or
xchg
rol
pop
jl
bound
dec
pushf
cmpb
js
sub
lock
inc
fsub
xor
cmp
ds
shl
loopne
push
sub
loopne
add
add
jp
add
int
or
and
arpl
popf
adc
mov
call
xorl
dec
loopne
jge
jo
add
pop
loopne
or
push
subb
jbe
add
ret
fs
inc
push
dec
pop
push
jl
rorb
lea
add
xor
movsl
or
repz
mov
adc
sahf
lret
mov
or
cmp
loop
xchg
add
sbb
xchg
jno
and
inc
loope
add
fiadds
add
mov
dec
ret
rolb
add
pop
int
mov
loop
add
scas
popl
add
and
add
sub
pusha
jae
jo
test
add
add
push
data16
jne
mov
fldl
mov
or
pop
mov
and
mov
shl
in
inc
mov
lahf
or
mov
mov
out
push
add
push
xor
pop
mov
inc
pusha
sub
lds
add
and
and
mov
sub
inc
mov
ret
inc
pushf
cmpb
and
cwtl
push
add
or
rcrb
add
xor
in
add
pop
sub
lea
add
or
aaa
adc
mov
add
dec
sbb
test
sbbl
les
lahf
mov
rcrb
sub
dec
mov
andb
jns
add
cmp
inc
test
mov
pop
mov
js
sub
pop
pusha
testl
mov
movsl
cmp
roll
leave
pusha
je
pusha
pop
nop
adc
mov
or
push
cmpl
sbb
or
inc
xchg
movsb
rclb
push
or
mov
add
jo
roll
out
out
add
push
inc
js
lock
add
cmp
ror
orb
xchg
mov
addl
shr
in
mov
clc
add
pusha
push
cmp
add
sbb
orl
cmp
add
sahf
push
hlt
add
inc
scas
push
mov
into
or
mov
inc
hlt
or
xor
adc
int3
xchg
add
aas
sarb
inc
sub
mov
inc
dec
fsubrs
add
mov
fisubs
roll
pop
dec
pop
call
push
cs
xchg
cmp
add
add
inc
sub
pop
scas
into
les
add
ss
call
add
test
sbb
sbb
pop
add
push
fsubr
addb
ljmp
negl
test
or
cwtl
sub
mov
lahf
dec
rolb
mul
loopne
cmp
inc
add
rcll
jo
in
inc
rclb
jo
test
sbb
cwtl
loopne
rclb
lret
add
jge
fcomps
out
pop
pop
les
or
shl
popf
subb
pusha
bound
jbe
js
or
add
les
test
sahf
xchg
add
fisubl
sbb
jecxz
jo
jns
rolb
dec
pop
lahf
inc
insl
out
jae
lahf
ror
mov
add
hlt
add
push
xor
cld
bound
push
addr16
and
cs
incb
mov
cmpsb
into
sbbb
sub
adc
cli
pushf
and
inc
mov
push
adc
lock
pusha
clc
rorb
mov
js
imull
enter
jo
mov
insb
pop
push
popa
add
fisubs
iret
jnp
adc
or
cs
rorl
push
in
loope
and
mov
jbe
push
or
jmp
mov
and
sub
cmp
bound
pop
and
cltd
out
mov
or
add
jmp
rorb
rolb
inc
xorb
nop
xchg
add
loopne
pushf
sti
cmpl
fwait
scas
fldlg2
sbb
shl
ljmp
mov
add
adc
les
sbb
icebp
jo
ret
movl
clc
je
add
decl
add
call
fwait
aaa
add
repz
adc
add
sbb
cs
add
pop
jne
mov
clc
ja
add
cli
lock
push
cmpb
push
ret
xchg
jmp
dec
filds
loope
in
pop
les
movb
xor
pop
arpl
jecxz
lahf
inc
cmp
enter
sarb
fisubs
pop
xor
add
or
ret
push
lock
or
int
aas
dec
js
push
mov
add
add
ret
add
movsl
add
ja
mov
out
icebp
pop
xchg
mov
insb
cmp
dec
push
lock
mov
mov
inc
add
jo
pop
push
lock
adc
push
add
and
add
shlb
addr16
sbb
mov
adc
mov
add
add
add
sbb
mov
pandn
sbb
js
adcl
cmp
pop
xchg
or
mov
and
xor
addl
jbe
sbb
add
jmp
add
shr
cld
lcall
cltd
sarb
jne
mov
sbb
push
in
mov
inc
adc
push
jno
inc
pop
imul
clc
bound
filds
in
add
mov
sar
shlb
add
jbe
mov
sbb
cmp
stos
lds
scas
mov
test
lock
add
in
pusha
and
or
sub
push
xor
pop
and
orb
call
pop
cmp
icebp
in
and
pmulhw
ljmp
and
pop
jns
ds
andb
loope
addr16
add
mov
mov
add
lds
aam
lret
inc
int
inc
ret
cmp
int3
movsl
mov
cmpb
jp
mov
cmc
xchg
pop
adc
pusha
icebp
mov
daa
inc
push
es
push
add
sbb
sbb
and
xor
xor
loopne
int
dec
lock
or
inc
in
nop
call
jle
jns
and
data16
sub
push
shlb
add
divl
add
imul
cmp
push
inc
add
ret
sub
loope
fidivs
insl
sti
mov
add
push
out
fisubrl
outsb
rolb
fs
xor
mov
clc
sub
les
sbb
dec
dec
ja
lds
lahf
test
pop
dec
sbb
insb
adc
adc
sbb
movsb
and
add
push
int3
pop
pop
icebp
sbb
aad
mov
add
push
add
jne
aaa
cmp
inc
jmp
in
push
jb
add
cwtl
add
sub
cmpsb
clc
push
cmpb
sub
fsubl
add
addr16
roll
cmp
add
outsb
lock
loopne
lahf
rolb
std
cmp
cmpsl
jmp
cltd
jg
shl
push
lahf
add
add
mov
add
clc
cli
paddq
mov
daa
mov
fldl
repnz
add
loope
push
les
fldl
and
push
or
aad
test
jnp
and
dec
and
add
in
cli
faddl
movb
dec
add
jo
sbb
nop
jmp
stos
aas
add
aam
ret
repnz
push
mov
add
pop
addr16
push
jl
call
faddl
push
lods
shr
add
icebp
lret
add
jg
jns
rcrb
mov
mov
cld
xchg
addb
js
or
and
das
add
andl
lret
pop
add
into
loop
rcll
mov
pop
push
mov
sahf
cmpsl
jmp
fsub
sti
inc
push
xor
lock
mov
bound
cs
movsb
test
xchg
js
add
mov
movsl
add
or
push
xor
out
dec
loopne
rcrl
sub
out
inc
mov
add
sbb
add
pushf
sub
sub
push
insb
out
mov
jns
add
cmp
cld
add
iret
int3
xor
cmp
jne
xor
jae
popa
add
cmp
mov
divl
push
mov
adc
jno
ds
js
mov
xor
cmp
cli
rolb
fsts
add
pop
inc
sahf
ret
mov
outsl
cs
jne
out
fstp
out
mov
mov
sbb
xrelease
add
repnz
adc
add
fists
jno
loopne
jecxz
pcmpgtw
xchg
adc
jbe
insb
jl
add
dec
or
add
and
sbb
rolb
push
repnz
ljmp
or
adc
mov
jae
sbb
cmp
sub
adc
dec
andb
out
add
loopne
les
add
sbb
out
push
loope
mov
nop
ds
addb
cmpsb
lds
xchg
add
xchg
mov
andb
and
lcall
xor
push
sbb
mov
xor
xchg
and
jnp
loopne,pt
jae
jle
sti
add
nop
sbb
jns
les
aas
add
or
mov
pusha
orb
add
xchg
xchg
pop
sub
mov
add
add
adc
sbb
or
aas
add
sbb
rorl
clc
pop
cmc
and
mov
jmp
add
lret
sbb
add
jl
mov
icebp
cmp
orl
and
data16
add
int
sbb
add
loope
sbb
xor
dec
sbbl
cmp
jo
mov
pop
call
mov
pop
imul
lock
add
xchg
xchg
adc
repz
jl
loopne
jle
icebp
jl
add
pop
add
in
sbb
pop
add
sahf
mov
mov
sbb
in
fnstcw
lock
mov
clc
mov
loop
test
and
sbbl
add
out
insl
les
pusha
ja
in
xchg
add
adc
sti
dec
outsl
mov
testb
push
xchg
jp
push
iret
mov
mov
jb,pn
sbb
lret
imul
pushf
mov
inc
xor
out
mov
clc
or
mov
les
xlat
xor
dec
mov
pop
lods
or
nop
shrl
mov
mov
xchg
pop
out
pop
jne
add
xor
push
ds
call
clc
pop
push
push
push
cld
sbb
leave
aas
jg
js
push
xorl
shlb
jbe
addb
imul
mov
add
pop
mov
out
insl
in
test
aam
aas
sbb
mov
xchg
add
ret
xor
add
mov
mov
mov
push
push
lsl
dec
out
xlat
add
jae
or
push
jne
enter
jl
cmp
sbb
fsub
adc
push
cmp
inc
dec
or
iret
addb
lds
xor
sahf
pop
push
sub
or
outsb
or
mov
incb
out
pop
sbb
mov
dec
loope
ja
addr16
imul
dec
xchg
pop
sbb
aas
icebp
cmp
add
jno
sbb
cmp
and
pushf
cmp
fwait
push
and
pop
sbb
mov
jp
cli
adc
call
push
call
adc
pop
dec
sbb
mov
add
lds
xor
loopne
cmp
arpl
andb
loope
xchg
inc
mov
pusha
jle
jne
add
cwtl
and
or
stc
mov
add
outsb
xchg
pusha
or
adcb
inc
js
sarl
nop
loope
add
sbb
add
xchg
jl
push
mov
add
incl
sub
push
mov
ret
test
aas
dec
fsubrl
push
or
sbbl
call
add
cltd
clc
imul
mov
lret
pop
out
dec
dec
dec
sub
push
and
add
pop
push
cmp
dec
andl
jp
jg
add
jb
jmp
loopne
ds
add
jecxz
add
jmp
call
jo
sbbb
push
outsb
inc
pop
ss
dec
shlb
aas
sbb
orl
pop
clc
adc
ret
lock
test
jae
add
rcrb
aaa
xor
push
daa
dec
loopne
cmp
add
nop
mov
or
sbb
add
pop
xor
add
add
jge
mov
out
jae
mov
jecxz
int3
mov
jb
pusha
adc
shll
mov
xlat
es
mov
shll
int
aas
ljmp
adc
lea
xchg
or
insb
hlt
cmp
jmp
add
sbb
in
faddp
mov
mov
mov
cmc
sahf
fldl
add
arpl
cmpb
outsl
negl
cltd
dec
or
add
xchg
pop
sbb
jge
std
out
in
filds
mov
clc
out
mov
add
add
adc
sbb
sub
add
pop
sbb
enter
cmp
orb
loope
leave
and
mov
rol
cmp
sbb
lahf
ret
mov
add
add
add
rol
or
dec
dec
rol
dec
pusha
mov
push
add
dec
jl
js
jne
mov
xlat
add
add
nop
sub
cmpb
and
in
lods
out
push
sbb
sti
add
mov
mov
cmpsb
jl
adc
repz
lahf
pop
jo
clc
cmp
add
loop
mov
movsb
or
je
loopne
sbb
in
add
stc
lds
dec
mov
data16
cmc
add
sbb
int
and
push
out
faddl
mov
lcall
adcl
popf
add
jl
hlt
pop
ret
xchg
add
sub
test
jns
ret
or
add
in
push
addb
ljmp
lds
jno
cmp
or
xchg
int3
stc
clc
xchg
loope
add
jnp
fwait
nop
xor
inc
push
mov
clc
int3
jo
add
xor
add
insb
push
into
jb
cmovne
jmp
xchg
outsl
daa
pushf
rolb
dec
sbb
cwtl
or
pusha
aas
jmp
mov
xor
daa
addl
lds
loope
loope
xor
rolb
push
in
cmp
in
add
cmp
gs
jp
add
out
inc
mov
mov
bnd
add
in
jl
cmp
xor
xchg
pop
stos
and
inc
add
aam
sbbl
repnz
mov
adc
xchg
clc
insl
je
dec
subl
sbb
add
lahf
call
push
jns
cld
addl
insb
cld
adc
stos
add
mov
mov
and
sbb
loop
add
test
add
push
repz
sbbl
cmp
call
or
mov
jo
pop
sub
adc
mov
lret
rcr
sub
xor
pop
arpl
test
daa
pusha
icebp
bound
out
add
lds
add
imul
adc
stos
adc
add
jecxz
pop
daa
rcrb
lahf
cmp
ds
sbb
aad
jecxz
js
pop
test
jo
inc
dec
sar
add
cmp
shlb
jge
fcompl
popf
push
ss
push
pop
cmp
push
push
fwait
out
shrl
xor
mov
jnp
mov
add
jo
js
xor
insb
add
mov
cmc
shrb
hlt
cltd
ja
ja
adc
add
add
or
stc
sahf
lahf
add
xor
hlt
adc
inc
in
lea
mov
sti
mov
leave
and
cwtl
daa
add
mov
mov
fdivl
pop
and
mov
iret
sbb
ljmp
mov
loopne
cmp
andb
pop
rclb
jg
mov
jnp
addr16
add
mov
mov
sbb
scas
dec
cmp
es
jle
mov
jbe
sbb
cmp
push
cmp
add
movsb
mov
jo
push
daa
pop
cmc
or
sbb
fildl
lret
ret
add
js
add
loopne
arpl
add
bound
or
sbb
fmull
sar
fcomps
or
jmp
jae
pop
cmpsl
dec
xchg
cld
push
cmp
iret
mov
hlt
stc
sbb
xor
incb
pop
xor
add
jmp
insb
add
and
sahf
jo
addr16
mov
mov
inc
push
mov
in
add
dec
nop
inc
add
mov
jl
add
in
ficoml
test
pusha
loop
outsb
js
call
loopne
nop
pop
int
mov
loopne
add
test
movl
add
add
xchg
xchg
imul
cmp
sbb
add
or
es
add
or
add
filds
inc
jle
add
push
std
push
sbb
in
pusha
negb
ret
jo
loopne
or
pop
pusha
loopne
repz
xchg
pop
jo
shlb
jl
fcoms
faddl
orb
cmp
cmp
jg
cmc
gs
daa
xor
push
mov
inc
out
add
sub
mov
movsl
mov
jno
sbb
add
hlt
push
or
xchg
ljmp
cmpl
add
mov
mov
inc
jecxz
adc
xor
test
daa
and
pop
je
clc
in
xor
jns
popa
xchg
sbbl
add
enter
xor
negl
fsubrl
add
adc
test
popl
out
hlt
dec
fcoms
stc
xor
incl
pushf
aas
or
pop
lcall
ret
lock
and
add
inc
and
xor
fildl
xchg
das
pop
adc
mov
movl
and
test
imul
jle
push
frstor
jg
xchg
data16
addb
add
lea
pop
sarb
sbb
mov
fcomps
add
adc
fimull
mov
loopne
sbb
rcrb
sub
loop
xchg
add
dec
xor
flds
lock
fnstsw
notb
insb
loope
cld
push
es
scas
aaa
adc
shll
loopne
leave
add
clc
inc
cmp
push
and
or
arpl
orl
pcmpeqb
add
out
or
add
pop
xor
and
sti
les
xor
xlat
add
pop
jnp
xor
fnstcw
aam
sub
jnp
pop
sahf
sti
jo
push
lock
jnp
popf
sbb
clc
add
dec
add
sub
incl
ljmp
cmp
cmpsl
pop
rcrb
addb
add
fsubl
sbb
punpcklbw
mov
pop
mov
mov
add
loopne
dec
push
addb
movsb
inc
lcall
cmpsl
mov
mov
sbb
int
jno
xor
xchg
iret
out
or
lahf
cmc
bound
mov
adc
cmp
fisubl
pusha
enter
out
mov
jmp
add
pushf
jo
xor
cli
repnz
sub
repnz
lds
fstpt
and
push
add
mov
push
lods
or
daa
jnp
jns
inc
sbb
add
ficoms
int
pusha
stc
jle
push
pop
jo
push
inc
add
pop
xchg
bndstx
ljmp
add
mov
and
repz
xchg
rolb
pusha
jnp
xor
test
in
jno
data16
mov
sub
jecxz
pop
sub
or
adcl
cmp
jnp
lods
cmp
mov
jecxz
sar
push
addr16
sbb
push
add
or
aam
mov
mov
and
cmpl
nop
mov
xchg
icebp
addl
fbld
sub
pop
add
mov
push
and
dec
cmpsb
add
into
add
inc
jnp
add
lock
outsl
pop
je
cmp
mov
and
into
data16
adc
pusha
mov
dec
lret
add
ds
push
mov
mov
jno
daa
icebp
sbb
push
call
repnz
lret
mov
clc
sbb
mov
cmp
mov
shrb
repnz
xchg
add
imul
cmp
mov
icebp
loope
data16
add
ds
lea
cmp
or
movb
sti
lds
aad
mov
lock
fdivl
es
and
pusha
inc
call
jg
pop
ret
and
out
add
int3
sub
loopne
mov
pushf
push
shll
daa
jns
lahf
lock
cmp
xor
jl
mov
and
sbb
cmpsb
cs
in
test
push
fisttpll
sub
rolb
mov
rolb
jae
bound
xchg
pop
in
add
sbb
pop
pop
xor
dec
cmp
adc
dec
pop
inc
dec
pop
mov
sbb
sub
dec
add
int3
test
pusha
pop
push
popf
xor
dec
sbb
or
add
adc
add
sub
lret
push
add
dec
dec
mov
add
push
xor
je
mov
fiadds
inc
lahf
or
imul
add
cmp
arpl
adc
testb
sbb
mov
sbb
and
or
sbb
add
adc
loope
fldcw
rolb
clc
and
inc
cmp
hlt
jo
loopne
jo
add
add
or
lock
nop
inc
mov
pusha
jmp
jnp
mov
bound
or
jo
add
cs
and
addl
or
loope
es
adc
add
push
xchg
stc
pop
iret
in
dec
scas
fmulp
add
repnz
push
pop
ret
dec
or
xchg
push
or
pop
inc
les
lret
aad
into
adc
sbb
cmp
sbb
add
subb
test
dec
nop
popl
jno
cmp
and
push
repz
cmpsb
pop
or
test
out
hlt
xor
cmp
mov
cmp
aas
sbb
clc
pop
add
lret
scas
fs
push
push
pop
stos
stc
fstps
or
inc
add
jno
dec
mov
stc
pop
scas
and
iret
sti
nop
cmpb
pusha
sbb
icebp
push
push
sbb
add
adc
mov
inc
std
adcb
mov
sarl
cld
xor
xor
pop
outsl
dec
rolb
and
ljmp
mov
rolb
mov
rclb
mov
sbb
loopne
add
xor
mov
cmpb
mov
pop
add
jl
or
dec
add
dec
lret
test
dec
add
test
js
or
lahf
or
add
inc
rolb
pop
mov
incl
insb
add
imul
add
dec
adc
jo
pop
pop
inc
cmpl
push
inc
add
lock
mov
aas
add
adc
lret
out
cmp
add
push
aas
ds
add
lea
out
mov
movsb
add
jle
cmpl
iret
fadd
jb
add
pop
sub
jl
add
push
fildll
jge
data16
xor
and
dec
xchg
nopl
jle
hlt
push
mov
jo
add
mov
jne
sbb
sbb
mov
ds
lods
or
fldl
and
cmc
xchg
add
int3
ja
testb
test
orb
pop
pop
rcrb
out
or
fbld
add
inc
ljmp
je
pusha
mov
and
test
xchg
jo
add
hlt
jb
notl
inc
dec
mov
add
xor
out
roll
cmp
mov
inc
add
sub
loope
mov
repnz
jno
or
mov
subb
jae
inc
shlb
addl
lret
and
iret
clc
out
add
sbb
mov
add
lret
mov
cwtl
and
add
push
xchg
pop
dec
mov
jmp
icebp
ds
mov
rol
cmp
jp
cld
lods
testl
jo
mov
push
shl
and
push
pop
mov
inc
or
mov
lods
dec
dec
push
cld
mov
popf
mov
daa
xchg
loop
mov
jnp
xorl
roll
add
pop
cmp
jno
pop
leave
adc
inc
mov
stos
cli
sub
mov
pop
cmp
das
adc
icebp
subb
or
pop
ret
dec
cmp
pusha
and
add
sbb
xor
int3
xlat
test
add
fmull
inc
sbb
add
mov
or
add
mov
ds
sbb
les
scas
xor
loope
add
out
or
scas
cmp
dec
cs
add
cltd
mov
and
adc
pop
es
cli
push
pop
bt
cmc
cld
icebp
cli
shl
add
in
xchg
or
rcrb
fildl
jbe
idivb
push
push
dec
sbb
push
dec
jl
scas
inc
or
ljmp
mov
add
ret
jp
iret
add
pushf
in
mov
jg
jnp
rcrl
lret
add
jp
and
sbb
add
wrmsr
adc
clc
pop
addl
adc
iret
or
jnp
or
dec
dec
mov
pushw
inc
jge
add
push
pop
jle
mov
pop
add
xor
mov
cmp
cli
cmp
pop
out
inc
out
stc
inc
lock
and
and
xor
push
dec
fucomip
jl
adc
or
mov
cmp
jae
loopne
cmp
cmp
xchg
push
pop
hlt
cmp
ret
jge
icebp
popf
arpl
loopne
sbb
add
fstl
jo
add
mov
add
xchg
mov
mov
cwtl
pop
push
add
stos
jecxz
xor
dec
jno
inc
mov
inc
nop
cmp
dec
add
push
hlt
pop
lock
or
xchg
push
es
pop
add
jb
out
cmp
mov
and
add
xchg
add
inc
movsl
mov
popa
int3
out
and
sbb
add
xchg
addb
loope
ret
jmp
pop
je
inc
or
imulb
pusha
inc
popf
rol
js
bound
mov
or
and
pushf
decb
test
adc
adc
icebp
pop
loop
test
nop
mov
mov
push
or
pop
or
add
jmp
out
mov
movsl
jno
jne
xchg
push
lret
jp
call
sub
jecxz
and
sbb
xchg
cld
adc
movsb
add
xchg
mov
jae
jne
sar
add
repz
adc
xlat
daa
maxps
add
inc
rcrb
dec
or
push
mov
or
jns
dec
xchg
andb
mov
sub
cmp
sbb
or
add
leave
jl
pop
rcrb
add
mov
add
cmp
test
or
add
rorb
jge
add
psraw
adc
es
sub
fdiv
filds
pop
cmp
roll
cmpb
es
cvtpi2ps
xchg
mov
add
xlat
inc
push
jae
je
add
aas
push
lahf
push
or
add
addl
rcl
pop
inc
sbb
jno
and
daa
daa
push
inc
gs
clc
jge
xchg
test
pop
mov
clc
out
or
push
or
lcall
and
movb
es
test
sub
mov
loopne
lock
pusha
and
sub
xchg
adc
mov
mov
add
out
pop
xchg
sub
cmp
sbb
jge
icebp
jp
add
in
pusha
lahf
push
jl
add
sbb
rorb
daa
cmp
jle
repz
pop
xorl
mov
adc
mov
cmp
das
xchg
in
add
icebp
cmp
faddl
addl
cmpsl
ja
sldt
sti
stos
xchg
arpl
add
adc
mov
push
pop
or
out
addb
sbb
sub
icebp
and
ret
mov
add
ja
adc
push
xor
cmpsb
inc
mov
js
jge
aas
mov
cmc
aam
test
pop
xor
push
cmp
sbb
hlt
sbb
lock
orl
and
add
fstpl
add
cmp
push
shrl
mov
movlps
bound
test
fisttpll
jmp
ja
add
pop
testl
ret
arpl
cmp
mov
rclb
in
xchg
repz
loope
mov
int
add
add
daa
add
pushf
sbb
mov
out
sub
jns
sahf
dec
add
push
add
icebp
lock
lods
mov
test
rclb
add
sahf
out
adc
xchg
pop
inc
aad
test
sub
hlt
fcoml
xchg
mov
sbb
push
sbb
mov
int
out
add
push
jo
nop
lock
or
jae
das
xorb
arpl
pusha
pop
adc
or
ret
aaa
popf
int3
inc
inc
repz
and
inc
cli
or
mov
jge
loopne
push
daa
cmp
inc
iret
pop
mov
out
add
roll
pop
and
out
push
pop
stos
mov
and
cmp
mov
shl
sbb
mov
add
cmp
in
vcvtsi2sdl
cli
sub
sti
and
pop
add
pop
mov
mov
add
notb
adc
dec
loopne
inc
lret
inc
sbb
or
pushf
sbb
repnz
stc
xchg
test
loopne
mov
ds
loopne
aad
pop
sub
mov
clc
loopne
add
daa
adc
jge
pop
je
add
hlt
rcll
push
lret
add
arpl
nop
rcrb
pop
sbb
lock
fs
addr16
dec
pusha
dec
adc
hlt
aam
sbb
popa
mov
sub
add
pop
and
add
sar
cmp
cmp
adc
xchg
jecxz
push
iret
pop
cmp
roll
jbe
addb
in
fiadds
adc
or
test
faddl
xor
fsubrs
or
movb
mov
cmp
add
xchg
andl
es
or
mov
mov
inc
xchg
cmp
adcb
jecxz
cmp
out
roll
cmpl
jp
push
add
clc
in
mov
add
mov
mov
jmp
adc
pusha
call
in
xor
jg
inc
mov
aam
or
sub
add
mov
pop
adc
adc
mov
pop
xchg
pop
clc
incl
add
jmp
xor
jne
adc
test
push
mov
loope
repz
dec
shl
push
adc
push
pushf
pop
add
lahf
nop
jmp
dec
add
add
mov
push
call
lahf
ja
or
cmp
in
lret
push
mov
push
loopne
enter
add
lahf
or
mov
loopne
jl
cmpsb
stc
popa
add
rorb
mov
cld
mov
out
jmp
pop
cmp
xchg
pusha
and
popf
add
push
daa
mov
fildll
mov
aas
lahf
stos
scas
nop
xor
or
jo
dec
cmp
cli
lcall
xor
js
cmpsl
push
sbb
cwtl
pop
cmpsb
std
insb
add
shlb
cwtl
push
in
add
cmp
push
cli
or
inc
subl
mov
cmp
sbb
or
inc
add
sahf
shlb
call
mov
movl
mov
pop
bound
fiaddl
cwtl
imul
clc
js
add
adc
stc
jle
add
sbb
cvtpi2ps
cmp
repnz
mov
xlat
push
add
test
xchg
jbe
out
stc
icebp
xor
loope
stc
inc
daa
sub
jmp
push
mov
popa
mov
add
imul
test
rep
pop
inc
outsb
std
les
cmp
xor
and
cmp
shrb
push
jns
shl
pop
add
shrb
into
dec
push
mov
mov
addb
loop
mov
push
pop
bndldx
jecxz
sarb
repz
lds
or
orl
sub
jecxz
enter
addr16
xor
xor
icebp
add
xchg
jge
cmp
push
push
popa
adc
pop
fisubs
jecxz
movsb
addr16
lock
test
dec
dec
popa
sahf
sub
popa
mov
inc
mov
or
js
out
mov
adc
enter
int3
or
or
push
jns
add
sarb
out
jae
inc
icebp
push
add
xor
icebp
loopne
cwtl
dec
pop
mov
addb
stos
shrb
sbb
cmp
mov
push
aas
fchs
outsb
cmp
push
dec
fcomp
xchg
sbb
clc
adc
cli
test
arpl
loop
and
cmp
mov
or
leave
sahf
jns
orb
xor
in
push
loop
les
fwait
xchg
add
sbbb
or
lds
cmpl
xchg
ljmp
sbb
xchg
add
cmp
nop
ret
lea
pop
cmp
jecxz
or
cmp
push
shr
xchg
add
mov
pop
jecxz
sub
add
cmpsl
ret
or
out
addb
jnp
imul
xor
lods
pop
jecxz
add
mov
xchg
ljmp
out
add
popa
bound
jb
shlb
add
or
add
sbb
and
jg
add
addl
jbe
push
dec
adc
xor
arpl
repz
add
out
and
cmp
lret
add
aaa
fldenv
fistps
xor
mov
push
add
xchg
leave
xchg
xor
iret
add
das
shrb
add
jmp
addr16
adc
cmp
js
nop
or
cmp
loopne
pop
add
ljmp
add
push
inc
pop
jle
xor
sbb
sbb
jns
add
dec
pop
cmpsl
es
or
dec
into
mov
jle
and
jmp
add
push
pusha
clc
aas
add
ret
push
pop
cmp
cwtl
pop
mov
jp
add
push
jl
lds
pop
js
add
shll
js
add
loop
add
cld
xchg
out
pushf
xchg
pusha
inc
in
push
inc
mov
push
addr16
cmp
pop
adc
icebp
hlt
mov
add
inc
jae
test
mov
pop
pop
xchg
jb
cmp
leave
add
sbb
mov
add
and
fistps
loop
sahf
sub
xor
inc
xchg
xor
add
sbb
xorb
mov
mov
adc
cltd
add
add
pop
ret
repz
arpl
fstps
push
sbb
ror
imul
inc
shll
pop
sbb
jge
cmp
jl
dec
movups
and
add
test
cmpb
cmc
adcl
mov
mov
outsl
push
loop
push
syscall
loopne
inc
xor
sub
dec
popa
daa
adc
les
dec
mov
clc
shr
add
cmp
daa
sbb
test
add
add
fucom
xor
ss
pop
and
xor
ret
stc
add
cli
shlb
fisttps
jb
mov
dec
rolb
add
adc
add
mov
sbb
mov
pop
jg
sbb
leave
pop
mov
xor
or
xor
push
insb
push
jae
mov
loopne,pt
nopl
push
cmp
add
shll
cld
call
push
popf
dec
and
add
ds
jge
add
pop
xor
adc
out
sbb
xor
xchg
pop
mov
push
mov
pop
sarb
add
jno
inc
jg
and
loopne
cld
js
loope
jecxz
add
xchg
add
cmpb
sbb
dec
add
adc
test
add
nop
sbb
lahf
stos
cld
js
add
inc
shlb
orb
and
cmpsl
add
jge
aaa
or
push
inc
adc
mov
fldt
sbbb
cmp
mov
or
mov
loope
push
sarb
add
fstps
cld
push
sbb
push
add
xchg
pop
out
outsb
jo
cmpl
cmp
inc
mov
dec
jae
add
add
cmp
sbb
mov
andl
add
popf
sub
daa
push
cwtl
inc
or
or
xor
xchg
testl
ret
add
pop
add
shrb
jl
xchg
cmp
pop
add
pushf
xlat
jge
or
int3
mov
cmp
ja
ds
sbb
sub
idivb
add
adc
mov
push
xor
adc
lock
pop
and
sbbl
jp
xchg
call
jo
xorl
and
inc
sub
add
ret
shl
outsb
test
mov
add
repz
cmp
icebp
push
dec
add
or
in
add
je
jno
ret
dec
adc
or
clc
insl
loopne
pop
and
dec
fsub
inc
mov
xor
dec
adc
jnp
mov
add
sbb
les
rolb
in
rorb
icebp
lods
lods
dec
jge
outsb
nop
mov
ds
sbb
mov
addb
xor
jg
adc
roll
adc
cmp
adc
add
loope
inc
test
jns
add
push
push
jbe
adc
add
ret
or
addr16
rolb
out
adc
jl
icebp
shl
add
into
nop
adc
push
pop
and
inc
jecxz
pop
popf
cmp
outsb
mov
add
pop
or
pop
nop
cmp
pop
add
or
ret
push
xchg
call
in
cwtl
add
push
xchg
clc
push
add
add
or
hlt
ljmp
add
leave
and
sub
add
adc
sbb
mov
jb
add
sbb
notb
cmp
fsubr
les
pushf
add
test
pusha
add
cwtl
and
add
loopne
shl
lock
sub
xor
add
mov
in
add
add
mov
leave
push
mov
cmp
cmp
aas
dec
mov
xor
roll
cmp
push
push
out
das
mov
push
pop
sbb
add
stc
fiadds
adc
negl
mov
push
repnz
rolb
sbb
mov
jo
sbb
cmp
add
inc
or
jae
xchg
pop
arpl
mov
add
jmp
dec
add
add
lret
fadds
cwtl
adcb
add
sbb
mov
addr16
in
push
ret
orl
in
andb
nop
pop
js
add
sbb
sbb
jbe
add
clc
int
mov
lahf
sbb
xchg
cmp
ret
push
jo
mov
or
orb
in
les
jae
inc
call
push
mov
add
sub
xchg
or
and
ja
mov
orb
repnz
testl
add
rcrb
lret
js
xchg
movsb
push
insl
lds
add
ret
pusha
adc
pop
or
xlat
mov
inc
movsb
mov
or
jbe
faddl
cwtl
add
pop
add
pop
test
das
jns
add
lods
mov
adc
xchg
jnp
add
sbb
xchg
jne
ja
add
vmovaps
loopne
in
into
mov
jns
shlb
cmpsl
pshufw
adc
mov
aam
mov
andb
jbe
add
adc
push
cmp
cmpsb
add
sub
or
insb
jmp
repnz
lcall
mov
loopne
cld
jae
add
scas
loopne
jns
add
repz
or
pop
lock
lret
xorl
enter
push
jns
lock
xor
js
mov
cmpsl
add
test
lds
push
lcall
repnz
outsb
enter
lret
sbb
adc
ja
add
mov
add
push
add
xorb
pop
shll
out
lahf
int
jl
ret
pop
mov
test
lret
add
sub
mov
pushf
dec
test
notl
jbe
loope
add
lock
fmuls
jno
hlt
sub
add
out
cmpsl
adc
sbb
fistpll
jl
hlt
pop
loopne
jo
gs
mov
sarb
add
push
sbb
testb
js
sbb
sahf
jp
xadd
pop
mov
add
or
sahf
and
dec
and
adc
lock
loope
and
add
loope
sbbl
adc
xor
outsb
add
jns
xor
incb
xor
dec
xchg
mov
add
dec
lcall
add
sbb
ret
dec
xchg
mov
aaa
pop
jle
add
sbb
hlt
mov
sbb
push
ljmp
cmp
or
pop
pop
mov
jp
movb
data16
push
cmp
pop
jge
push
aam
push
xchg
add
xchg
lock
xor
in
adc
imul
arpl
enter
add
xor
add
repnz
lock
inc
movsl
inc
jno
insb
dec
addl
sbb
jl
add
outsb
clc
and
dec
jns
pop
into
jo
dec
mov
loopne
cmp
cmp
andl
xchg
xor
mov
push
loopne
mov
addb
sbbb
js
in
clc
lret
loope
pop
push
mov
hlt
mov
fs
jno
adc
shlb
pop
ljmp
fiadds
loopne
mov
mov
or
test
jecxz
aas
inc
mov
pop
add
int3
rolb
pop
cmp
add
iret
in
flds
jecxz
nop
add
add
push
loopne
push
fnstcw
sahf
lsl
pop
rorb
adcb
push
jl
data16
rolb
jp
clc
mov
add
pop
mov
insb
pushf
inc
fdivs
jne
adc
fsubrl
out
sbb
and
aas
dec
leave
lock
or
or
in
cli
add
clc
insb
add
fdivs
es
fnstsw
add
and
cmp
mov
pop
lret
cmp
jb
mov
cmp
pop
mov
cmp
sahf
add
add
inc
mov
inc
enter
add
cwtl
mov
jo
lea
pusha
sbb
xor
xor
cmpl
xor
psubb
mov
repz
mov
enter
and
je
fmull
cmp
jl
testl
inc
bnd
lahf
push
add
xor
lock
sbb
jg
xor
xchg
das
popa
pop
ret
push
mov
lock
iret
adc
cmp
sbb
or
push
add
mov
push
and
sub
inc
jmp
add
sbbl
cmp
and
jecxz
add
dec
jl
loop
inc
jmp
stc
xor
xor
xchg
js
call
loopne
add
cmp
jmp
adc
inc
bound
mov
int3
add
adc
add
sbb
or
adc
jg
inc
add
jecxz
pushf
inc
xchg
push
or
sbb
jl
loopne
dec
pop
adc
rolb
cmp
imul
sbb
jmp
inc
filds
out
ret
sbb
and
xor
jb
push
push
jne
and
add
aaa
or
lds
cmc
push
pop
add
sub
cmpsb
add
sub
mov
loopne
mov
xchg
lds
icebp
mov
mulb
inc
jne
cmc
sti
sarb
cmpb
stc
loopne
pop
leave
sub
jg
jo
push
cwtl
outsb
pop
iret
add
jle
cltd
inc
add
add
xchg
sub
dec
or
add
inc
mov
add
addr16
addb
jns
setl
out
sub
or
aaa
es
sbb
add
add
lcall
sbb
add
sahf
adc
imul
cmp
xchg
popf
sbb
mov
ds
iret
add
jg
movsl
cmpsl
push
pop
rclb
inc
jae
push
xor
push
pop
loope
add
test
xor
shl
push
sub
or
xchg
jmp
and
ljmp
or
ss
icebp
adc
shrl
cmp
pushf
shl
test
out
les
push
stos
dec
add
add
cmp
add
pop
idivb
jb
mov
rcrb
adc
pop
add
mov
xchg
cli
or
add
ret
xchg
dec
add
loopne
jb
cmpb
add
in
mov
repz
or
scas
and
push
pop
mov
iret
filds
addb
xchg
pusha
add
pop
fmuls
cmp
sub
repnz
ret
xor
add
rorl
icebp
das
fcompl
xchg
lahf
push
inc
adcb
mov
and
sahf
add
mov
rcrb
or
out
xchg
mov
test
add
je
mov
pop
add
jecxz
adc
mov
inc
loopne
xchg
das
xchg
pusha
mov
cwtl
jae
paddw
add
dec
sbb
add
sbb
mov
or
imul
pop
mov
call
xor
subb
push
clc
std
add
mov
add
adc
emms
sahf
loopne
repz
add
cs
cmpsl
pop
iret
sbb
clc
addb
mov
icebp
adc
pushl
stos
cwtl
push
pop
das
pusha
inc
adcb
push
lret
push
popa
add
adc
xor
and
addb
stc
push
xchg
push
pop
out
mov
pop
add
lahf
imul
add
sub
xchg
cmp
shrb
cld
sub
cmpsb
push
dec
aaa
add
xchg
sbb
ds
clc
out
add
sbb
fdivrp
or
and
add
loopne
mov
pop
lahf
fnstsw
sbb
or
pop
in
and
idivb
aas
xor
push
adcl
add
push
stc
pusha
push
jecxz
shl
pop
cld
add
pop
add
sbb
jp
inc
pushf
mov
mov
cmp
add
sub
jl
xor
rclb
js
cwtl
add
je
pushf
jg
adc
shl
repz
aas
mov
clc
ret
add
jb
inc
jecxz
jge
and
stc
or
push
xor
or
dec
inc
xor
or
fdivrl
into
subb
sbb
mov
inc
jns
aaa
lret
cmp
push
aad
add
pusha
pop
in
add
out
jp
add
jno
loop
or
pusha
lods
into
inc
add
mov
rolb
sbb
jmp
add
lahf
inc
jl
loopne
add
jno
jae
jnp
jle
repz
dec
or
rcll
add
fsubrp
cmp
add
adc
push
cld
movl
sbb
inc
add
mov
pop
pop
jl
loope
addr16
jo
lret
sti
aas
test
stos
jge
loop
add
test
not
loop
push
ljmp
orl
jne
fs
and
jmp
je
daa
loop
push
sbb
mov
cmpsl
pusha
js
dec
sbb
clc
roll
sbb
and
pop
sub
inc
adc
mov
aam
daa
or
xor
call
popf
and
jle
lds
test
add
jbe
xor
adc
fcoms
inc
enter
add
arpl
fistpll
pusha
fadd
pop
iret
clc
nopl
cli
nop
pushf
push
push
push
lahf
loopne
mov
sbb
mov
orb
pop
testl
mov
jns
add
jbe
push
stc
jno
es
lret
cltd
xchg
cmp
mov
xchg
cmp
pop
divb
add
sub
add
int
mov
clc
sbb
adc
idivl
inc
arpl
leave
mov
sbb
cmp
rol
jnp
add
roll
adc
jne
xor
inc
xchg
xchg
aas
mov
xor
adc
iret
addb
push
or
mov
cli
jecxz
leave
adc
xchg
mov
popa
out
sbb
or
ret
pushf
add
hlt
jl
xor
cmpb
in
daa
add
pop
cmpsb
jno
scas
stos
ljmp
clc
add
cmp
iret
shlb
pandn
fmul
andb
add
mov
pop
push
js
or
ja
scas
mov
xchg
add
into
add
out
jecxz
jno
arpl
and
sbb
loope
sarb
xchg
mov
mov
adc
cmp
push
jae
mov
and
sarb
les
adc
aaa
push
cwtl
add
loopne
jle
es
add
leave
addb
jl
cli
iret
cmp
xchg
add
loopne
mov
jle
xor
test
pop
add
sub
dec
or
sbb
add
cmp
cmp
ja
loopne
ljmp
rolb
push
or
jae
add
ja
or
add
and
aas
add
xor
aad
xor
clc
lcall
fcoml
jge
xchg
jno
rcrb
loopne
add
movsl
push
push
add
adc
push
sti
shrl
lret
or
pop
add
popf
not
jne
add
adc
add
ret
push
sarl
pop
out
cld
jge
xchg
mov
fmull
or
xchg
mov
jbe
add
or
sahf
popf
movl
dec
add
and
add
nop
enter
xchg
cmp
popa
jns
loopne
push
clc
add
repz
jl
jb
hlt
ret
cmp
into
orb
mull
pop
add
add
or
and
cmp
adc
mov
mov
arpl
mov
mov
inc
add
mov
jno
iret
or
andl
xor
aaa
inc
cltd
sbb
add
ret
sahf
outsl
add
cwtl
inc
or
data16
psubusw
xor
jge
mov
fistl
aaa
fdivl
aad
pusha
pop
xor
pop
mov
xorl
sub
mov
pop
lret
pop
cmp
repz
int
push
jb
popa
clc
test
shr
add
dec
xor
cmp
add
ret
or
and
xchg
and
mov
inc
mov
nop
and
cmp
lock
js
sbb
fcmovne
add
sbb
gs
shll
roll
arpl
rolb
inc
jp
lock
or
repz
adc
jmp
into
jbe
add
aam
stos
ret
dec
stos
es
xor
inc
pop
add
testb
ret
paddb
add
adc
popa
loop
popf
fsubs
add
add
idivb
add
sbb
cmpsb
xchg
mov
xor
sbb
mov
add
popa
dec
jbe
nop
add
ja
in
into
add
add
mov
jle
jg
add
jns
sub
push
in
in
and
sti
add
out
les
sbb
xchg
loopne
and
sub
mov
js
xorb
daa
cli
cmp
sub
add
xchg
pop
sub
adc
add
cmpsl
add
adc
inc
in
cwtl
fadds
lret
ret
repz
clc
and
add
pop
sbb
loope
shl
cmp
push
cmp
ljmpw
push
jle
push
xor
cmp
xor
in
jbe
add
jno
jmp
enter
add
into
push
and
int3
or
jae
push
add
clc
sub
sub
data16
xchg
cmp
cld
jno
mov
ljmp
mov
std
mov
xchg
or
add
lea
pop
loope
sbb
jmp
out
or
mov
jns
mov
add
sarb
cmp
mov
adc
dec
jecxz
cmp
fadds
jno
hlt
mov
icebp
lea
or
and
pusha
shlb
rdtsc
add
cmp
sbb
add
popf
cltd
enter
add
and
add
pop
dec
cwtl
imul
loopne
add
mov
xchg
stc
inc
leave
mov
mov
sub
xchg
out
add
enter
and
ds
mov
clc
bound
add
daa
and
jl
push
shlb
ret
mov
push
mov
lock
push
and
mov
mov
and
sti
iret
dec
cmp
ret
inc
cmp
inc
pop
add
mov
xchg
aam
mov
mov
or
jecxz
inc
mov
arpl
aam
popl
or
dec
and
pushf
lahf
fmuls
rorb
mov
sbb
adc
les
cwtl
rclb
mov
adcl
fdivs
or
enter
add
fcoms
or
sub
dec
cmp
out
pushf
mov
xchg
add
imul
mov
es
add
sbb
add
iret
cmp
aam
jns
ret
jle
aas
out
mov
lock
or
fs
cmpb
out
pushf
arpl
push
or
fildll
jl
push
mov
jge
js
pop
icebp
xor
call
xchg
and
cwtl
test
shrl
loop
inc
femms
aas
shr
mov
or
popf
and
call
shlb
pop
int3
mov
jnp
xchg
arpl
add
in
icebp
sub
jmp
pop
pop
adc
push
jp
add
sbb
jbe
add
or
xchg
push
add
mul
adc
arpl
out
ljmp
jnp
add
cmp
jle
add
hlt
xor
jbe
push
jecxz
cwtl
rcrl
icebp
fwait
std
imul
jmp
loopne
jo
mov
add
mov
cmc
bound
out
lock
add
sbb
out
pop
test
repz
adc
add
mov
sbb
mov
jmp
xchg
inc
fs
repz
sbb
jle
hlt
loope
xchg
pusha
xor
mov
icebp
and
cmp
add
mov
push
jne
add
js
loope
lcall
enter
lods
add
xchg
wrmsr
cmp
cmp
in
test
mov
mov
sub
mov
add
sub
subl
pop
cld
loop
add
sub
or
loopne
jo
ds
pop
cmp
cmp
inc
jecxz
push
fisubs
add
jl
lock
add
cmp
dec
or
mov
inc
push
push
add
push
mov
mov
sbb
push
jo
push
sbb
sbb
out
sahf
movb
mov
xorl
add
sbb
inc
inc
cmovp
roll
cmpsl
cmc
cwtl
testb
add
in
or
arpl
aas
test
add
xor
inc
sbb
mov
adc
and
movsl
andl
aas
push
or
mov
cmp
or
add
push
pop
pusha
jecxz
cmpl
add
les
loopne
jge
test
add
cmp
shr
jecxz
inc
and
sbb
pop
sbb
imul
mov
add
mov
or
cmp
loopne
add
adc
mov
flds
fidivs
mov
jle
add
bnd
nop
xor
fcomps
or
sbb
add
aas
shlb
jmp
inc
js
lea
sbb
sub
es
dec
les
pushf
add
daa
ds
js
push
movl
or
je
pop
inc
mov
cmpsb
cmp
nop
test
adc
jae
mov
sarl
mov
aaa
sub
call
push
jae
outsl
repz
cmpsb
fwait
orb
stc
cwtl
in
xchg
sbb
lock
fstl
js
and
pop
cli
in
cmp
add
push
mov
pop
jmp
sbb
clc
inc
pop
out
add
cwtl
add
inc
fdivl
push
test
aaa
xor
fdivr
movnti
sbb
shlb
ss
add
pop
jg
fsubrs
inc
jo
cmp
sbb
add
fcmovnb
aaa
loopne
pop
or
pusha
jb
icebp
test
inc
xchg
sbb
mov
jnp
loopne
add
or
loopne
dec
inc
aad
sbb
push
add
push
jecxz
add
loopne
jae
dec
push
in
js
sbb
out
mov
lds
push
push
push
xor
or
xchg
or
add
loopne
mov
mov
repnz
add
cmp
and
push
jne
push
lret
mov
mulb
adc
push
mov
out
inc
push
sbb
jg
push
dec
rcr
hlt
out
xor
mov
inc
mov
add
or
sbb
clc
addr16
mov
jns
cmp
cs
adc
add
js
pusha
pop
xchg
int
inc
sahf
in
and
adc
mov
xorb
inc
sbb
jne
icebp
adc
dec
xor
sbb
pusha
in
ss
or
add
clc
sbb
push
hlt
je
subb
js
mov
inc
push
int3
stc
add
mov
xor
adcb
jno
test
or
das
setno
or
pop
add
call
ja
sbb
or
jmp
push
andb
incl
mov
scas
insb
adc
pop
nop
jne
xor
dec
sub
cmp
cmp
cmp
lahf
mov
add
add
inc
shrl
ds
push
jl
cmp
or
jp
sbb
lock
push
leave
mov
jbe
pop
adc
and
jno
add
jae
imul
or
xchg
into
lea
adcb
jmp
in
cmp
popa
out
orb
push
enter
and
or
inc
das
lock
dec
mov
dec
xchg
or
ret
sbb
shlb
sbb
lock
dec
rolb
add
push
or
rclb
xchg
jp
fdivrl
xor
repz
iret
sub
pop
lods
inc
or
add
mov
ret
pxor
pusha
push
add
push
stc
mov
stc
lret
xorb
add
and
rcrl
pop
bound
jns
cmpsb
jnp
mov
lock
inc
adc
lods
and
fsubrs
inc
inc
mov
and
push
data16
mov
fcomps
fcomip
ret
add
sub
or
sbb
pop
int
les
cmpsb
dec
fistl
pusha
mov
cld
enter
jge
add
jb
push
push
add
jnp
add
lock
jl
shlb
xchg
scas
push
ds
and
js
fcmovu
icebp
add
lahf
pop
pop
pop
popa
pushf
sbb
mov
cltd
mov
push
cs
mov
shlb
fwait
das
mov
jmp
jno
jo
mov
xor
mov
lret
xchg
ds
loopne
xorl
sub
xorb
inc
pushf
add
cs
cmp
pusha
add
loopne
out
int3
sbb
sbbl
aam
cs
sbb
sub
dec
mov
push
lock
add
add
popa
int
push
pop
inc
push
add
sbb
xchg
clc
ss
popf
cmp
mov
sbb
pop
call
add
sub
add
pop
pop
inc
dec
daa
add
lcall
fiaddl
sbb
rolb
loope
out
loopne
leave
jno
cmp
xlat
dec
and
and
mov
jns
shr
push
jo
jo
add
xor
loope
cmp
add
fdivl
pop
or
sbb
mov
xor
call
incb
add
test
divl
into
fdivrl
or
sub
add
in
mov
and
adc
mov
and
popa
pusha
fdivl
add
xor
stos
mov
outsl
or
inc
ret
add
repnz
inc
dec
or
add
or
xor
lret
push
sbb
fwait
sbb
inc
pop
fdivrs
stos
iret
sbb
add
rcr
pop
cmp
jbe
lds
push
subl
and
shl
hlt
add
cmp
mov
add
jp
jl
cwtl
push
pop
add
iret
add
cmp
add
and
jp
xchg
cwtl
xor
pusha
cmp
out
ror
mov
into
aas
cmp
cvtpi2ps
stc
pop
push
shrb
out
inc
xorb
add
into
xor
loopne
pop
jg
push
bound
xlat
inc
sbbl
aad
aam
scas
add
mov
jmp
and
adc
push
shlb
xor
ficoms
inc
jbe
adcl
push
add
lret
in
addr16
mov
mov
add
leave
mov
add
rcrb
cltd
jg
cmc
movsl
fdivrl
js
divl
add
jne
daa
cmpsl
add
adc
not
pop
or
imul
or
test
adc
rcrb
addb
or
xchg
mov
and
out
push
loopne
call
add
ja
lcall
mov
arpl
mov
mov
pop
inc
mov
js
add
cld
pop
push
mov
add
fnstcw
add
fadds
nop
mov
nopl
jecxz
xor
idivl
xor
or
pop
sbb
movl
pushf
out
dec
ja
pusha
add
or
push
cmp
cmp
movl
mov
adc
icebp
lock
fwait
adc
cmpsb
add
push
test
enter
cmp
cmp
sbb
or
int3
xlat
aaa
in
mov
aad
push
add
push
roll
dec
in
add
adc
jp
mov
bound
scas
and
xor
push
add
outsb
clc
les
mov
add
cwtl
xchg
add
iret
ljmp
pop
popf
dec
rcr
jb
dec
inc
out
dec
push
add
push
and
andb
pop
jo
shlb
out
pop
cmp
xchg
cld
roll
testb
rolb
in
adc
or
add
clc
add
jp
add
outsl
loopne
and
sahf
sub
jle
addb
pop
or
add
push
or
out
cmp
fsub
pusha
popf
mov
inc
add
jno
add
dec
cmp
rcr
push
add
cmpb
add
loope
inc
mov
or
pushf
jno
adc
sbb
es
xchg
mov
call
xor
jnp
mov
shll
cmp
arpl
in
mov
jno
mov
add
lret
popa
pop
pop
in
mov
or
ds
daa
test
jo
push
cld
lock
sbb
mull
push
loopne
sub
add
xor
add
int3
into
cs
iret
add
cmp
add
push
add
orb
cmp
xorb
lcall
adc
addl
and
mov
jns
ss
sti
subb
in
add
in
push
push
rolb
pusha
loopne
jg
pushf
scas
outsl
lock
out
or
push
mov
lea
mov
add
xchg
daa
loopne
js
ret
mov
push
testb
cmp
jp
pop
xlat
mov
jo
sbb
les
lahf
push
loopne
loopne
dec
mov
pusha
lret
ss
dec
mulb
nop
pusha
mov
xor
cmp
mul
iret
pop
adc
mov
rclb
xchg
loope
shlb
rorb
loop
xchg
add
popa
inc
jbe
push
or
je
pop
jg
pop
loopne
aas
test
push
ljmp
ret
scas
mov
push
sbb
push
jne
rcrb
xor
inc
rcrb
fadds
lret
mov
add
lods
jo
sbb
add
inc
jle
bound
xor
sti
jp
shl
andl
lock
add
lea
mov
pop
ret
sbb
loopne
shrb
xor
ds
add
add
popa
les
push
mov
lea
xabort
or
mov
mov
push
ret
xor
repnz
add
ret
lcall
lret
cmp
dec
addr16
sbb
subb
add
sub
pop
mov
or
or
mov
add
rcrb
and
rdtsc
or
or
enter
mov
add
mov
push
repz
add
xchg
add
xor
rolb
add
pop
or
pop
xchg
mov
or
movb
sarl
xorb
icebp
dec
loope
cld
sahf
dec
fistl
cmp
dec
test
cmp
add
into
inc
or
push
sub
mov
clc
pop
punpcklbw
mov
ljmp
imul
imul
mov
add
xorb
add
repnz
jae
mov
add
jnp
jo
push
andb
inc
sub
andl
aas
sbbb
pushf
arpl
xor
adcb
and
pop
sbb
pusha
cmpb
add
in
int3
mov
add
test
mov
cmpb
xor
mov
jmp
cld
enter
and
xor
data16
add
pusha
fisubrs
dec
add
aaa
and
cmpl
cmp
cltd
inc
repz
jne
xchg
add
fldl
xchg
adc
dec
loopne
sbb
cld
sarl
add
in
arpl
inc
pop
pop
into
push
aad
or
pop
inc
or
inc
add
pushl
js
push
add
jno
inc
add
outsl
jb
mov
xor
jno
add
adc
into
dec
push
mov
scas
or
inc
int
mov
lock
ss
or
loopne
sbb
jne
pop
setb
adc
int3
add
pop
outsl
inc
push
xor
mov
repnz
sbb
out
jns
xchg
push
mov
push
roll
mov
clc
loopne
loop
jg
add
inc
inc
mov
and
push
scas
cmp
subb
pusha
mov
and
jecxz
ret
xchg
aas
outsl
lahf
cwtl
mov
pop
jno
call
add
mov
mov
sub
and
stos
shr
cmp
mov
jne
add
add
xchg
adc
decb
pop
daa
add
scas
sti
xor
push
jo
es
fwait
in
imul
outsb
into
ds
roll
sbb
addr16
loopne
mov
cs
jae
mov
daa
lock
into
test
pop
add
mov
pop
leave
pop
mov
cmp
xchg
or
jg
loopne
and
clc
frstor
jbe
mov
imul
lea
add
add
add
cmp
pop
push
add
sub
adc
cld
and
pushf
add
add
xor
add
rcrl
imul
out
cli
rolb
jns
in
add
xchg
into
and
xor
data16
stos
add
push
pop
outsb
enter
out
insb
or
adc
mov
push
jo
adc
test
mov
jg
add
jo
mov
add
adc
mov
sbb
aas
cmp
lds
sbb
inc
pusha
es
ljmp
jle
call
outsl
jecxz
sbb
mov
add
sub
sbb
dec
orb
in
and
fidivrl
enter
stc
and
push
les
fisttps
cmp
add
and
push
ret
add
jl
hlt
ja
sbb
scas
mov
icebp
mov
add
jmp
xchg
into
xor
push
roll
adc
sbbl
nop
jge
scas
jecxz
lock
adc
jbe
js
push
xor
jg
jge
ror
mov
add
lods
sbb
or
loope
mov
pusha
cmp
cwtl
xchg
mov
jecxz
out
jb
xchg
rcll
adc
scas
inc
cld
mov
xor
jle
pop
lahf
mov
fbld
sub
add
iret
pop
pusha
cmp
stc
int
sub
loope
out
sub
add
pushf
negl
bnd
push
adc
mov
cmc
adcb
cwtl
mov
andl
int3
je
sbb
loopne
xorb
clc
into
xor
mov
lock
push
pop
orl
mov
xchg
xor
adc
push
mov
push
inc
add
lock
pop
cmp
xchg
ret
cli
aaa
push
cld
fchs
pop
into
pushf
pop
sub
stos
add
sysret
sbb
xchg
add
dec
cli
pop
ret
jl
add
inc
and
jo
pop
sbb
mov
adc
mov
and
xchg
js
sbb
pop
and
test
jge
ds
add
push
cmp
or
subps
fists
jg
clc
push
jno
add
and
arpl
ror
xchg
fdivrl
mov
add
sbb
dec
loope
clc
add
lahf
push
push
cmp
add
inc
popf
fldl
sub
and
outsb
flds
adc
jo
add
fildl
mov
cmp
sti
jp
mov
pusha
fadds
xchg
rolb
aaa
mov
sbb
fildl
into
imul
xchg
add
sbb
lea
jno
ds
lock
push
sbbb
xor
sbb
test
clc
enter
jle
sbb
ret
jnp
cmp
lret
iret
sbb
mov
add
lret
add
loop
jnp
xor
push
popf
mov
daa
cmpsl
fildl
fiaddl
outsb
pop
sbb
mov
dec
xchg
add
leave
jl
enter
inc
add
in
adc
push
cld
xchg
insl
add
push
in
call
inc
pop
divb
or
mov
add
fs
inc
inc
dec
adc
pop
add
cmp
dec
or
adcl
mov
mov
ret
out
jae
inc
in
imul
stc
andb
mov
cld
sbb
roll
jmp
add
xchg
mov
nop
add
imul
push
jmp
push
pop
aas
add
and
add
cmpsl
sarb
arpl
jns
add
sub
add
push
ret
jnp
clc
shl
add
jg
jnp
push
clc
cmpsl
add
mov
dec
push
sbb
in
fwait
dec
add
add
icebp
adc
das
enter
cli
mov
in
add
sahf
in
jge
add
or
dec
mov
add
push
xor
add
mov
ja
pop
xor
rol
pop
testb
dec
add
cmp
add
or
pop
fadds
push
jge
pusha
inc
mov
addl
fwait
or
rorb
adc
das
push
fbld
loopne
and
jnp
add
add
add
push
sub
push
pop
das
lock
daa
lahf
xor
fadds
lcall
xor
push
push
or
inc
pop
popf
in
rcr
inc
pop
call
hlt
or
iret
out
adc
jecxz
mov
sbb
add
pop
jae
push
sbb
xchg
loopne
sbb
out
jmp
sbb
mov
lret
pop
popa
and
dec
add
lods
fcomps
shl
out
sbb
or
push
mov
js
mov
xor
loope
stos
push
and
or
out
or
ja
pop
shr
xchg
daa
sub
mov
sbb
push
mov
jnp
add
and
es
jmp
add
cmpsl
cmp
add
into
mov
dec
pusha
popa
es
push
xchg
lahf
pop
xor
gs
pusha
enter
push
pushf
adc
mov
into
dec
int
add
add
pslld
call
hlt
jo
inc
add
sbb
xchg
mov
test
mov
pop
jne
xor
xchg
aas
enter
and
add
shll
cmp
adc
dec
add
out
pusha
or
outsb
jb
fistpll
sub
add
jg
call
cmp
mov
popa
scas
movsb
cld
sub
xor
fwait
xor
xchg
mov
jl
test
add
into
push
or
mull
clc
push
mov
cmp
and
mov
inc
adc
rol
popf
adc
add
lret
rorb
push
pusha
mov
cs
nop
cmp
add
add
mov
repnz
fs
jo
into
dec
xor
jns
negl
addr16
popf
enter
or
shll
cli
inc
jle
imul
in
ret
or
cs
xchg
and
js
add
xor
sub
inc
push
add
jle
loop
loope
pop
cmp
mov
dec
out
lret
mov
je
inc
stos
loopne
sahf
xor
jle
add
loop
fmull
mov
and
sti
sar
shll
and
cmp
jbe
dec
xlat
sub
ds
aaa
pop
jecxz
cwtl
push
lds
stc
out
push
popf
jns
enter
adc
mov
test
xchg
jbe
jnp
pusha
push
pop
add
lds
pop
lahf
cmp
xor
adc
mov
add
add
inc
orb
loopne
and
sbb
fisubs
jl
pop
ss
cmp
cld
add
xchg
pop
in
inc
inc
jae
add
cmp
lret
fiadds
sbb
mov
push
pop
mov
jno
pop
mov
add
stos
out
add
push
and
aas
pop
push
add
or
aam
loopne
mul
add
dec
in
sbb
int3
lea
jae
add
rcr
pop
pusha
dec
sbb
imul
inc
pop
lds
in
mov
addb
in
pusha
aaa
add
lods
icebp
push
clc
sbb
jo
jae
add
push
filds
and
aad
add
nopl
or
sub
mov
xchg
imul
pop
mov
sbb
dec
in
jns
cli
data16
cld
test
mov
push
shr
or
cmp
add
xor
icebp
vmread
fs
jo
dec
sbb
xlat
enter
mov
adc
add
hlt
in
loopne
jmp
xchg
fdivs
pop
sub
add
add
jbe
shl
add
jmp
lret
mov
shll
and
mov
movsb
fs
add
add
iret
xor
rolb
push
loopne
or
cmp
loopne
sub
sbb
sbbb
popl
pusha
mov
add
cmpsl
shlb
lahf
cmp
mov
ret
push
push
sbb
jae
add
insb
out
cmp
sub
add
call
add
lock
or
andb
pop
sub
mov
outsl
enter
xor
rcrb
sbb
push
lahf
lock
pop
jno
push
add
cmpsl
xorb
in
or
sbb
mov
pop
js
fnstsw
loopne
adc
daa
dec
or
cld
or
jl
inc
cmp
adc
loopne
xchg
clc
andb
adc
adc
cmp
insb
movb
sub
xor
mov
inc
lahf
jmp
xor
add
jne
out
adc
les
add
jae
dec
pop
loopne
aaa
add
mov
loopne
cwtl
sysret
jns
push
and
inc
add
mov
xlat
mov
add
cmp
and
dec
loopne
jl
fs
push
icebp
dec
mov
xorb
jecxz
ret
mov
nop
adc
inc
mov
pop
add
jno
or
and
jo
dec
decb
int3
xorl
add
pop
add
jne
inc
out
hlt
gs
lcall
dec
cmp
adc
mov
shr
cmpl
jo
ret
lock
rolb
xchg
stos
add
cwtl
xchg
rol
cmp
xorb
insb
fdivr
sub
test
and
add
into
jb
mov
push
imul
sub
cmp
jne
ds
faddl
dec
inc
lock
and
push
incl
xchg
add
mov
sbb
int3
clc
shr
cli
lea
xor
les
test
xor
and
xchg
xor
stos
iret
jge
inc
jns
xchg
sahf
push
mov
jp
xor
add
xchg
sub
out
nop
xor
mov
or
inc
adc
rolb
adcl
pushf
clc
jo
pop
adc
fcomps
push
nopl
mov
ljmp
loope
mov
stc
inc
adc
sti
cmp
fidivrs
pop
addl
xor
cltd
add
sbb
inc
adc
jno
test
pop
in
sbb
add
test
fdivs
add
sbb
insb
add
cmp
movups
sbb
lods
mov
adc
sbb
mov
adc
mov
adc
and
lahf
add
in
or
or
adcl
nop
call
jo
inc
push
sub
xchg
jle
aam
xorb
add
cmpl
sub
and
sub
or
addb
stc
in
lret
paddd
add
jl
dec
add
cltd
xchg
sbb
xor
sarb
aas
ds
loope
xor
in
inc
dec
pop
sbb
xlat
mov
xchg
adc
dec
es
xchg
pop
sub
repz
aam
xchg
add
aas
lds
xchg
cmp
add
sbb
in
and
clc
mov
cltd
jle
ja
push
push
out
aas
pop
js
inc
loopne
bound
js
add
xchg
data16
sysret
xor
ds
mov
test
fwait
pop
orb
add
sahf
in
pop
iret
add
mov
add
mov
add
mov
add
hlt
jmp
or
or
insb
pop
out
mov
jecxz
andb
inc
ja
and
add
pushf
sbb
jp
movsl
shll
xor
add
addl
jb
idivb
rorb
js
aas
daa
sbb
call
dec
xchg
out
pop
cmp
iret
pop
clc
xchg
xor
jbe
xor
daa
push
pxor
rorb
test
insb
clc
popa
cmp
test
lds
sub
xor
cld
scas
out
jb
out
pop
add
cmp
and
add
sub
dec
xchg
ss
add
mov
repnz
roll
xorb
aam
clc
pop
sub
lock
or
mov
or
outsb
fldl
leave
dec
rolb
lods
jp
mov
jg
flds
sbb
movb
ror
add
in
dec
add
push
fnstsw
inc
out
sub
jle
pusha
in
call
rcr
pusha
cmp
add
sub
xor
int3
add
add
add
imul
loopne
in
cmp
add
xor
push
iret
sub
ljmp
lahf
mov
mov
addl
aaa
pop
iret
or
jb
dec
loope
pop
lcall
enter
pop
push
dec
fiadds
sbb
inc
jecxz
aad
push
jp
lds
nopl
sbb
jns
aam
and
mov
pop
add
mov
add
aaa
and
sbb
mov
inc
cmp
sbb
mov
xchg
arpl
imul
sub
pop
lock
or
ja
in
cmp
js
pop
add
mov
shlb
fnsave
testb
jae
in
std
push
add
mov
sub
ds
xor
cli
xchg
dec
into
dec
cmp
pop
lods
and
sbb
aad
add
jno
cmpsl
negb
and
jp
mov
or
mov
add
notl
pmulhuw
mov
mov
enter
mov
xor
cwtl
xor
cmp
mov
stos
add
sbb
repz
add
les
mov
sbb
aas
and
xchg
cmp
mov
popf
test
cmp
daa
out
mov
adc
mov
aas
jbe
push
push
mov
inc
push
cmp
mov
sti
xor
jecxz
inc
or
dec
repnz
repnz
xchg
sbb
jns
mov
imul
cmp
lahf
adc
imul
pop
add
adc
add
ljmp
pop
ss
pavgb
pop
addb
add
cli
data16
mov
xor
mov
or
test
dec
jno
movsb
add
or
repz
es
sbb
jns
sarb
push
add
sbb
cmp
arpl
mov
outsl
pop
add
sbb
cli
loopne
adc
jb
dec
and
aaa
fs
jae
pop
loopne
sbb
addr16
adc
dec
ror
or
rolb
js
sbb
add
push
loop
jecxz
add
hlt
movsb
sahf
es
xchg
or
jo
add
stos
jns
daa
testl
inc
mov
push
add
add
rolb
out
inc
xor
xor
outsl
sbb
out
lea
js
scas
mov
ret
ljmp
sti
pushf
out
add
sbb
divb
inc
pop
int
scas
inc
mov
pop
dec
push
loopne
divb
data16
loopne
ds
mov
cmova
rcrb
setb
jbe
clc
ja
imul
clc
dec
aam
out
cmp
mov
or
cmc
mov
call
psubusb
and
mov
leave
add
es
icebp
add
mov
shlb
xor
out
sub
cmpsb
xor
pop
jnp
in
dec
int3
outsb
adc
ds
push
add
mov
mov
ds
adc
pop
inc
and
es
xchg
add
and
gs
add
mov
mov
cmpl
push
iret
or
in
cli
and
add
ret
js
add
pop
jg
and
add
hlt
leave
or
pop
jb
add
jge
jle
and
lret
sbb
xchg
add
dec
xchg
jo
add
add
and
add
xchg
dec
mov
add
jo
daa
sub
xor
adc
or
add
iret
mov
adc
loopne
in
pusha
rorb
iret
xor
xchg
and
dec
pusha
add
push
pop
sbb
jo
popf
push
cltd
and
lock
sbb
inc
pop
cmpl
mov
cmp
je
xor
sub
xor
ljmp
or
xorl
xchg
adc
push
add
sbb
pop
loopne
shlb
ds
testb
push
cmp
repnz
pop
pushf
into
adcb
addr16
dec
popa
clc
jg
inc
xchg
and
fs
nop
sbb
fcompp
pop
xor
add
inc
pop
sbb
sub
lahf
xchg
pop
and
add
jmp
popa
push
out
pop
or
mull
xchg
sbbl
imul
cmc
andb
xchg
sbb
push
mov
pop
and
mov
decl
add
shlb
xchg
dec
hlt
xchg
pop
xor
inc
pop
or
cmp
lock
ss
enter
dec
cmp
pop
jo
shll
ret
rcr
lock
adc
jecxz
je
icebp
adc
pop
push
cmp
sbb
repz
pop
sar
fdivrp
mov
pop
lock
int
add
mov
add
dec
jl
jb
add
ja
dec
add
sbb
inc
push
insl
add
add
xor
xor
xchg
incb
and
jnp
push
shlb
icebp
adc
mov
jecxz
mov
repnz
test
cmp
nop
xchg
into
and
add
icebp
aaa
adc
les
testl
push
add
orl
or
add
jmp
dec
add
fbstp
jl
jp
sub
cs
arpl
clc
inc
pop
test
adcl
test
pop
and
lcall
jo
add
icebp
leave
sub
pop
repnz
adc
adc
push
push
scas
or
adc
data16
add
mov
ds
or
or
push
inc
inc
arpl
test
mov
addr16
aaa
int
sar
rolb
dec
jo
sub
in
sbb
mov
and
mov
push
jne
insb
call
adc
inc
out
repnz
adc
add
push
sbb
jg
pusha
add
inc
icebp
and
pop
xchg
mov
adcl
push
mov
jbe
pusha
mov
sub
and
sbb
pop
or
add
cmpsl
mov
push
lds
ja
jbe
add
arpl
mov
loopne
xchg
jl
add
xor
arpl
inc
cmp
out
and
clc
add
mov
or
adc
mov
jbe
popf
es
lock
inc
and
in
ficomps
sbb
mov
or
ja
add
ret
popa
dec
pop
mov
mov
movsl
jmp
rorb
fmul
pop
cmp
lds
mov
push
xor
ret
loopne
add
les
icebp
or
fdivrs
dec
mov
add
cs
lods
test
xor
adc
clc
mov
in
lret
into
cmp
add
sbb
ja
loopne
sub
add
pusha
popl
mov
sub
xchg
add
sub
mov
pop
out
dec
addr16
pop
cmp
dec
das
outsb
bound
dec
in
xor
fwait
adc
sbb
pop
rcrb
pushf
lock
and
add
les
ljmp
hlt
push
add
xchg
pusha
inc
pop
or
mov
imul
sub
adc
shlb
arpl
ss
fdivl
and
mov
adc
cmp
sub
jl
and
push
clc
roll
popf
lds
mull
movsb
or
bound
pop
pop
pop
nop
loopne
push
push
sub
rclb
add
or
inc
rcrl
jno
clc
pushf
pop
add
cmp
sarb
loopne
mov
clc
jae
push
add
xchg
or
sbb
xchg
jge
std
mov
pop
int3
mov
jbe
fldl
fs
aad
xor
daa
jge
xor
addb
xor
push
sbb
push
xchg
in
jmp
shlb
repnz
sarb
add
sahf
nop
xor
pop
repz
adc
jbe
gs
xchg
pusha
addr16
add
adc
orl
in
in
add
mov
les
sbb
push
lock
add
lahf
jmp
add
jp
add
cmp
loopne
cmpsl
psubusb
test
and
add
mov
adc
orb
fbstp
adc
or
aam
add
push
shl
shrb
add
inc
push
shlb
adc
add
pop
pop
adc
add
lock
pop
sbb
mov
xchg
jae
mov
add
repnz
jnp
mov
ss
adc
test
imul
push
and
in
fdivrl
adc
adc
add
imul
dec
repz
loopne
mov
mov
lock
sub
mov
mov
bswap
mov
xchg
shlb
inc
push
pop
add
push
add
sbb
add
repz
jo
jl
je
sub
xor
or
in
jb
mov
sbb
icebp
xor
mov
add
cmpsl
or
mov
clc
stc
add
mov
jnp
or
inc
add
pop
pop
dec
shlb
adc
push
out
add
icebp
ret
out
test
add
enter
add
daa
pop
xor
sbb
das
inc
pusha
inc
out
add
js
outsb
ror
jno
and
test
mov
stos
add
hlt
jl
loope
out
add
fistps
cmpsl
add
add
aaa
dec
clc
leave
loopne
insl
in
mov
or
and
stos
mov
sbb
sahf
add
add
mov
clc
add
sbb
andb
push
jecxz
pop
rclb
cmpl
inc
setg
mov
addl
dec
cmp
xor
push
cmp
pmulhuw
jg
lock
sub
add
and
in
jg
pop
popa
das
aaa
call
enter
add
int
and
ds
clc
add
adc
sarb
repz
xor
nop
into
mov
or
dec
lret
sbb
clc
popa
addb
mov
rolb
mov
pop
sbbb
add
mov
jle
add
clc
jne
ja
mov
aad
ljmp
es
scas
sbb
push
loopne
mov
inc
add
out
jmp
popa
mov
adc
shl
pop
add
in
xchg
and
cmp
js
lds
test
in
cli
inc
or
in
add
dec
xor
cmp
int3
rolb
push
fwait
or
jne
les
daa
add
push
add
jle
inc
pop
adc
or
sub
ficoml
push
or
push
cwtl
pop
lods
cmp
add
dec
popa
rol
or
xor
jecxz
sbb
jp
mov
mov
lds
enter
sbb
sbb
add
jl
in
aas
nop
loopne
xchg
xchg
cs
mov
daa
push
sahf
shll
data16
fdiv
xchg
push
add
inc
out
add
in
mull
stc
sbbb
cmp
pop
pop
into
xchg
add
adc
popa
dec
add
stc
xlat
roll
cltd
xchg
pop
daa
cmp
jbe
out
cmp
push
clc
les
push
mov
sti
inc
sbbl
sbb
add
cmp
icebp
add
insb
pop
xchg
add
sbb
in
inc
and
lcall
ljmp
sbb
and
in
push
out
inc
inc
and
mov
mov
repnz
and
push
cld
xor
cmp
lea
add
mov
inc
mov
mov
adc
mov
and
jle
mov
jp
hlt
repnz
mov
das
push
pop
mov
mov
mov
in
into
xchg
filds
jnp
jg
loopne
cmp
pusha
loope
hlt
adc
mov
add
je
mov
iret
adc
cld
stos
in
pusha
scas
add
xor
add
pop
je
bound
cld
add
add
and
arpl
ds
es
mov
adc
and
repnz
push
or
mov
mov
mov
sahf
sub
sbb
stos
sbb
in
pop
pop
inc
icebp
add
repz
push
stos
push
orb
inc
mov
addl
add
jno
repnz
add
icebp
ret
cmp
add
iret
sbbb
psubb
sbb
push
mov
cmpl
sub
add
push
jno
jge
loopne
lret
mov
pop
aaa
add
orb
add
xor
sbb
pop
push
mov
das
mov
std
in
loope
jae
iret
ss
push
repnz
xchg
repz
setno
out
sub
adc
incb
repnz
add
jns
cwtl
sub
out
inc
stos
addr16
add
add
add
mov
sbb
add
test
push
push
ret
pop
inc
dec
jg
icebp
popf
repz
movb
add
jae
jle
lock
rorl
add
sub
sub
sub
xchg
adc
push
and
lcall
lea
icebp
insl
fistpll
push
dec
sti
pop
cmp
push
push
sarb
mov
nop
cmp
mov
jp
xchg
xor
add
lds
fdivs
shlb
loopne
mov
cltd
push
sahf
pop
pop
cmpb
lahf
pop
sbb
rorl
cmp
add
push
rcrb
jo
das
cmp
cmp
sub
xchg
cmp
dec
add
inc
cmpsl
sub
addb
or
dec
lock
rol
dec
inc
mov
jl
mov
add
cmp
ljmp
inc
push
add
xchg
mov
cmp
push
shlb
addb
lea
adc
or
add
adc
inc
adc
clc
cwtl
rcrb
pop
call
add
sbb
inc
add
xchg
andb
js
sbb
lret
mov
cmp
cli
movsb
enter
mov
cmpsl
in
wbinvd
loopne
mov
sub
jb
jmp
jg
inc
cmp
mov
pop
add
xor
and
jmp
mov
iret
daa
andb
xchg
lock
pop
mov
dec
pop
scas
nopl
negl
or
cmpsl
ret
sub
orl
sub
pusha
xorb
imulb
cwtl
mov
xchg
jns
mov
std
add
xor
xor
lods
adc
sbb
jecxz
shlb
lahf
fimuls
rolb
jo
add
arpl
pop
scas
psllq
mov
rolb
jbe
mov
jno
daa
add
mov
scas
adcb
pusha
cwtl
add
shrb
sti
xor
ss
mov
mov
jp
hlt
cwtl
int
cmc
add
xor
in
dec
inc
add
mov
ljmp
lret
jp
and
roll
sub
xor
push
add
sub
call
add
adc
outsl
sti
in
cli
hlt
cmpb
cmp
shlb
add
arpl
and
cmp
xchg
rclb
pop
mov
adc
jne
mov
sbb
mov
pushf
std
add
push
iret
mov
or
sbb
fcomps
cmp
push
stc
add
bound
out
popa
sbb
mov
cmp
out
pop
sahf
fwait
cmpsl
mov
mov
cmpsb
add
cltd
enter
add
rcrb
call
repnz
or
sahf
jmp
cmp
push
jno
lods
xor
sbb
xor
enter
adc
add
ret
popf
sub
sbb
je
or
xor
add
add
push
loop
add
aas
dec
pusha
cmp
fisubrl
add
ljmp
loope
int3
add
js
add
cmp
ja
addr16
in
xor
call
lea
test
mov
add
lea
out
fadd
add
add
cmp
aam
add
xchg
insl
add
stos
ror
aas
ret
jo
pop
mov
sub
and
add
pop
adc
add
fldl
pop
fnstsw
jae
mov
add
shrl
ds
jmp
clc
aas
gs
inc
mov
addl
xor
iret
or
push
aas
mov
pushf
ficompl
xchg
cmp
add
push
sub
push
pop
or
out
fiadds
mov
sbb
rcrb
jmp
cmp
sub
nop
lcall
iret
and
xchg
sbb
push
fildll
sti
push
addr16
testl
es
in
cmp
subl
addb
sbb
in
mov
je
mov
sahf
movsl
jnp
add
sarl
add
sbb
sbb
js
jbe
jge
add
scas
inc
or
movb
jo
cmp
fisubrl
les
test
stos
mov
adc
pop
icebp
mov
les
pusha
jp
push
add
test
cli
arpl
lcall
add
out
rcrb
hlt
pusha
and
cmp
lock
fsubp
aas
lock
pop
lock
add
mov
fidivrs
call
add
push
pusha
pop
push
ret
inc
and
enter
or
jp
xor
cmp
pop
subb
shll
pusha
and
sub
jl
icebp
jns
jo
add
sub
or
add
nop
push
out
pop
loope
clts
ja
add
outsb
insb
add
or
inc
fisttps
lods
aaa
and
pusha
ljmp
or
cmpsl
cmc
out
add
das
clc
add
xchg
fld
jge
jo
daa
shll
into
bswap
inc
insb
jb
pop
jle
xor
pop
fwait
adc
shr
stos
fcompl
test
aas
mov
mov
add
roll
jp
sarl
mov
sbb
pop
cwtl
iret
dec
xchg
call
fld
cmp
into
in
jns
jnp
js
add
cwtl
sbb
pop
ret
add
mov
pusha
pop
sbb
out
add
movb
pop
dec
add
addr16
mov
faddp
pusha
xchg
add
or
icebp
pop
orb
in
pusha
ror
sbb
sbb
mov
add
push
test
or
ja
sarb
mov
dec
aad
add
xor
add
sbb
mov
rcll
mov
dec
and
cmp
stos
addl
loopne
push
sbb
cmp
mov
sbb
ja
add
xor
pop
jns
call
cmp
push
add
repz
or
xchg
imull
mov
jae
loopne
gs
sbb
in
stos
inc
outsl
adc
mov
inc
adc
addl
add
push
cmp
add
lock
int3
into
or
xchg
cli
faddl
loope
clc
push
ret
insb
sub
aaa
pop
lock
jnp
xorb
push
xor
add
xchg
mov
ss
negl
pop
mov
jne
adc
add
mov
jo
pop
aad
sbb
int
lea
cmc
add
inc
nop
sarl
push
adc
lahf
andb
fildl
cmp
std
in
or
in
mov
adc
xor
dec
xor
push
in
jp
or
andl
inc
loopne
out
add
mov
mov
jl
jecxz
add
fiadds
gs
jo
inc
jns
aas
jb
popf
sbb
movsb
loopne
ret
subl
lret
xchg
int3
outsl
cmc
add
outsb
mov
jg
xchg
je
fs
pop
shll
icebp
jg
or
xor
repz
icebp
ja
cmp
inc
add
cld
test
cmp
mov
mov
loopne
inc
lret
pop
adc
inc
add
cmp
leave
or
cmp
loope
xchg
stc
adc
in
mov
int3
inc
sbb
pop
fsubr
push
fidivs
pop
xchg
daa
add
pop
add
rep
scas
movsb
cwtl
stos
xor
out
mov
jno
imul
push
fwait
ss
push
sbb
loopne
into
ljmp
mov
pusha
sbb
and
inc
inc
leave
rcl
in
push
add
insb
rorb
mov
out
or
mov
jb
bndstx
xchg
xor
lret
sub
or
fld
adc
add
orl
sub
gs
cmp
sbb
popf
cmp
sub
rol
repnz
cmp
icebp
xchg
dec
cmp
clc
sbb
and
fisttpl
outsb
inc
mov
jmp
addb
pop
daa
lock
push
push
test
ret
mov
inc
cmp
mov
out
push
pop
nop
and
add
xchg
jl
push
add
sbb
xor
cwtl
dec
push
jp
or
in
and
lahf
pusha
dec
flds
ret
aas
push
sbb
mov
jns
cli
push
xchg
bound
cmp
scas
push
or
pop
add
pop
in
stc
xorl
sahf
add
mov
aas
outsb
adcb
xor
addb
cld
fldl2t
fisubl
in
sub
loopne
xchg
icebp
mov
mov
addr16
cs
add
les
push
in
into
roll
adc
daa
and
mov
sahf
add
xchg
sbb
out
in
aas
add
sbb
test
push
mov
rorl
lock
loope
mov
ret
add
add
pop
push
mov
data16
imul
repz
addr16
aaa
ss
dec
xchg
mov
add
ret
fdivp
pop
inc
jecxz
pop
add
test
repz
inc
cmp
rolb
ljmp
mov
in
mov
ss
inc
pop
subb
mov
add
push
outsb
dec
ffree
nopl
xchg
ffreep
xchg
fwait
mov
roll
push
enter
out
add
fadds
rorb
popl
ja
icebp
jge
mov
add
int3
test
cmpsl
or
aad
mov
inc
and
add
push
jecxz
iret
xchg
popf
and
out
inc
or
lret
and
xchg
inc
pop
jg
mov
fs
and
test
mov
xchg
pop
unpckhps
loopne
add
inc
adc
test
pop
cmp
xchg
insb
mov
imul
aas
mov
add
cmp
or
jo
mov
hlt
in
ret
arpl
mov
daa
adc
add
or
and
enter
dec
bound
shl
insl
loop
fiadds
dec
stc
push
push
cmpsl
sub
cmp
sbbb
push
negb
add
push
jo
sub
sbb
js
lret
movsb
cld
add
ret
cmp
or
add
xor
insb
adc
inc
add
cmp
xchg
lea
test
arpl
push
dec
lahf
mov
imul
insb
lock
xchg
add
pop
xchg
jae
add
adc
and
or
clc
inc
leave
add
add
fisubs
inc
je
xorl
or
and
push
mov
xchg
je
and
aaa
add
jbe
icebp
add
mov
mov
mov
xor
adc
mov
pop
jbe
les
pmuludq
mov
cltd
add
std
lret
sbb
xor
into
rclb
jnp
inc
add
push
fcompl
or
inc
mov
call
test
jge
arpl
sbb
ret
pusha
nop
iret
add
sub
mov
dec
dec
pusha
fidivrl
mov
mov
add
and
jb
fists
xor
pop
mov
addb
loopne
mov
push
mov
fidivs
push
sahf
popf
daa
add
sti
xchg
jno
mov
add
pop
repz
push
xor
sub
shr
in
lret
push
cmp
testl
push
add
xchg
jne
add
dec
xor
add
add
test
sbb
mov
out
data16
repnz
mov
sbb
add
ret
repz
cld
js
add
fsubs
inc
sbb
xchg
add
and
loopne
or
pop
nop
mov
adc
sbb
hlt
sbb
dec
inc
cmpb
cli
add
lahf
push
movsb
lods
inc
add
cmp
into
lret
xchg
jl
add
cmp
mov
int
lahf
push
mov
aam
add
sbb
test
and
enter
sbb
addl
cvtpi2ps
add
je
add
pop
jbe
jns
into
cltd
sbb
cmp
add
sub
adc
rcrb
mov
iret
sar
pop
inc
fists
add
add
add
mov
clc
aas
ror
add
fsubr
cmp
jge
icebp
xorb
xor
js
nop
jns
inc
lret
mov
ljmp
movsl
cs
cmp
paddsb
mov
repnz
cmp
mov
adc
inc
sbb
call
push
fdivs
add
jle
cmp
mov
mov
lods
jae
mov
add
inc
les
mov
bnd
loopne
test
cmp
inc
jl
pusha
ja
add
rorl
sbbb
dec
loopne
sahf
fldl
repnz
pop
in
ret
popa
inc
cmp
add
mov
or
jecxz
inc
add
insl
mov
repz
cmp
inc
mov
mov
pop
leave
push
jl
shlb
sbb
lret
loopne
or
xchg
add
jns
sbb
jo
rcrb
add
xchg
lds
jb
lret
adc
jp
and
adc
jmp
cmp
mov
adc
mov
lock
fmuls
loopne
leave
xchg
repz
stc
dec
add
mov
cmpl
xor
adc
cmpsb
loopne
dec
or
mov
shr
rcrb
pop
jle
add
sarb
int3
add
outsl
cwtl
in
cld
ret
xchg
popf
add
jo
lds
addr16
fcompl
add
loopne
xchg
fdivs
idivb
mov
cmpb
jae
nop
or
gs
mov
dec
cmpsl
nop
pop
add
cmpb
lods
xor
mov
jmp
jno
or
shl
icebp
xor
out
adc
subb
jl
subb
ret
loop
add
insb
cmpb
pusha
add
nop
sbb
loopne
repnz
sbb
out
popf
in
mov
cmpb
mov
xor
aas
push
and
out
outsb
xchg
ds
test
scas
xchg
push
sub
movsb
in
enter
add
mov
imul
sub
insb
mov
test
fdivs
loop
push
in
divb
into
xchg
add
loopne
inc
jg
add
mov
or
cmp
iret
or
xor
ret
mov
sahf
ljmp
add
pop
adc
pop
and
lret
jae
cmc
hlt
add
jmp
add
mov
arpl
xlat
xchg
loopne
mov
rcrb
add
xor
clc
or
into
cmp
imul
out
addl
jns
sahf
jo
pop
add
into
and
sbb
mov
stc
decl
icebp
push
add
mov
jp
repz
mov
mov
push
loopne
scas
imul
mov
in
add
faddl
ja
add
rcll
xchg
mov
push
iret
cmp
jg
mov
out
add
arpl
pop
mov
xchg
xchg
stos
rorb
sbb
ret
ret
arpl
add
xchg
or
outsl
jo
push
ljmp
inc
push
lds
xlat
mov
xor
sbb
les
shl
add
push
cs
mov
inc
lock
pushw
mov
mull
stos
sbb
add
fldcw
shlb
xchg
adcl
lcall
xor
sbb
add
in
jo
xor
pop
cli
push
add
out
add
mov
es
fsubrs
pop
push
add
add
and
jecxz
cmp
add
inc
add
dec
or
aam
mov
jl
add
andb
add
jmp
add
or
out
ret
xchg
push
sbb
cmp
mov
rcrb
cs
sar
add
mov
in
jmp
mov
mov
add
push
idivb
pop
out
pop
add
and
add
jle
xchg
test
out
pop
cld
lret
mov
jnp
fcompl
push
mov
data16
add
stc
jnp
pusha
sbb
sbb
into
add
sub
fwait
das
adc
imul
shlb
ds
js
fdiv
jg
xchg
arpl
mov
pop
or
mov
sbb
loope
or
sarl
aad
inc
pop
cld
or
inc
jne
add
jecxz
addb
cmp
shr
popf
outsl
add
int
ljmp
add
mov
jl
xor
jg,pt
dec
repnz
jnp
add
pushf
sub
mov
sahf
pop
mov
lock
add
ss
push
mov
jo
add
and
mov
add
and
push
bound
les
ljmp
cwtl
xor
rorb
or
inc
cmove
lret
icebp
xor
int3
les
mov
jg
pop
lock
into
lret
out
add
push
add
adcl
nop
mov
daa
clc
enter
adc
sbb
sbbl
fnstcw
addl
stc
test
loop
icebp
push
leave
xor
mov
or
sub
loopne
cmp
mov
mov
mov
popf
mov
sbb
pusha
cltd
push
imulb
out
pop
pusha
mov
push
cmp
ret
setbe
add
xlat
add
fdivl
movl
cmp
subl
dec
rclb
push
aaa
cmp
roll
mov
rorl
test
jo
dec
test
sbb
mov
and
adc
loope
shll
ja
divb
add
pop
inc
lock
mov
xorl
jae
push
loopne
or
add
jl
mov
repnz
std
stc
xor
pop
and
add
pop
xor
xor
add
ds
test
sbb
and
jecxz
pop
ret
cmp
xchg
into
xchg
dec
or
add
jno
shlb
add
add
ds
inc
ret
scas
add
xor
loopne
filds
or
mov
scas
add
aas
lock
inc
add
xor
repnz
or
or
jb
mov
aaa
dec
iret
rol
jb
add
pop
lods
ja
and
scas
jl
xor
mov
jnp
cmp
adc
inc
test
loop
cwtl
das
add
sub
arpl
sbb
in
pop
stos
es
pop
add
xor
and
add
xor
sub
out
push
ds
stc
loopne
sar
add
rolb
add
jns
popf
mov
sub
flds
mov
pusha
or
roll
insb
shll
sbb
into
adc
cmp
lods
int
or
addl
aaa
sbb
fidivs
in
push
mov
lock
add
add
jbe
mov
jl
pop
add
rcll
cltd
mov
jb
daa
adc
sub
add
es
repnz
cmp
fdivrl
add
xchg
inc
out
and
xchg
in
cltd
sub
push
movb
aaa
rcrb
jge
cs
fadds
pcmpeqw
lcall
mov
xchg
scas
cmp
mov
out
in
jecxz
jnp
add
sti
cmp
daa
shrb
aas
adc
loopne
inc
mov
mov
das
xchg
rolb
in
jno
inc
xchg
sbb
pushf
rolb
sbb
dec
and
loop
xor
push
loopne
pop
mov
into
inc
push
fwait
add
jbe
repz
lea
push
aaa
add
sbb
iret
cmc
bswap
addps
lds
jge
jmp
adc
rclb
in
xor
mov
sbb
mov
cmp
addb
add
sbb
inc
rolb
add
mov
cwtl
mov
fdiv
loope
shll
inc
sbb
dec
ss
loopne
sahf
cmp
or
or
xorl
stos
orb
sahf
lahf
dec
clc
dec
cmp
enter
xor
faddl
add
and
sar
call
cmp
mov
cmp
pop
mov
add
push
das
or
cmpsl
cli
imul
and
mov
xor
rclb
xor
mov
daa
sub
or
cmp
jle
fwait
xchg
xor
or
sbb
xchg
ret
mov
cmp
and
add
jg
mov
cmp
or
or
roll
loop
filds
cltd
mov
pop
mov
add
inc
mov
js
pop
and
and
or
xor
addr16
clc
sbbb
jecxz
push
mov
in
bound
hlt
or
stc
mov
sbb
addl
les
mov
push
in
pushf
pusha
jmp
or
adc
std
rolb
mov
pop
mov
add
push
popf
jo
add
cmp
add
xor
mov
das
lahf
sub
fwait
fwait
adc
inc
adc
or
mov
jmp
mov
into
dec
mov
cmp
pop
push
jge
lock
add
repz
adcl
add
lock
ret
test
add
pop
in
unpcklps
pusha
add
push
gs
push
dec
pushf
and
sub
inc
cs
jb
cld
insl
rolb
or
loope
add
inc
cmp
sub
xlat
xor
insl
push
dec
dec
in
pop
cmp
call
out
ds
testl
pop
and
mov
rolb
ret
sbb
daa
or
mov
insl
sarb
cmpb
xchg
arpl
add
add
cld
shl
pop
add
push
icebp
add
fiadds
mov
clc
lock
sub
add
pusha
xchg
jge
clc
popa
add
sahf
test
jmp
aaa
push
int3
add
pop
jae
xorl
outsb
fsubr
mov
fildl
icebp
jnp
in
inc
jnp
add
adcb
pop
jbe
cwtl
test
jl
sahf
add
xorb
mov
into
movb
lahf
pusha
or
sbb
repnz
mov
and
push
inc
adc
jno
sub
sbb
sbb
clc
lret
cmp
shr
out
test
test
loopne
add
mov
pop
popa
mov
push
jp
xchg
loopne
jb
mov
or
add
mov
cmpsl
adc
add
sbb
cmp
fcoms
cwtl
nop
mov
jmp
and
mov
jns
icebp
rcrb
nop
and
add
hlt
loop
adc
sbb
xchg
imul
les
faddl
jno
add
xchg
inc
sub
and
jmp
push
xor
add
into
push
adc
xchg
mov
pusha
fcomps
xchg
sbb
repz
loopne
add
es
add
mov
ja
into
in
and
add
and
add
mov
push
ret
add
pop
sub
xor
add
cmp
fbld
cmp
jl
xor
arpl
sub
decb
jg
aaa
and
and
dec
jo
xchg
push
add
stc
mov
xor
int3
insl
add
mov
pop
roll
lock
sub
add
xchg
sub
pop
loopne
hlt
mov
rolb
cmp
mov
push
jl
sub
lock
je
xchg
ss
xchg
test
sbb
fs
mov
icebp
adc
push
jo
xor
add
sbb
dec
shll
dec
rolb
addr16
pop
pop
inc
lock
out
sbb
and
cmp
idiv
inc
add
dec
test
dec
jle
and
or
jae
cmp
in
loopne
xlat
xchg
fimull
out
jecxz
icebp
leave
fsubs
int
add
push
pusha
dec
pop
mov
imul
jecxz
notb
outsl
push
mov
loope
dec
in
pop
sti
adc
or
xchg
ret
out
or
add
loopne
mov
subb
add
frstor
push
in
sbb
add
fcomps
mov
sub
pop
sbb
call
or
rclb
push
cmp
sbb
jno
inc
aas
xchg
add
xor
add
adc
sbb
sbb
dec
pop
fisttps
pop
adc
sub
fildl
or
add
dec
dec
jmp
add
int3
ja
sub
push
sbb
movsb
cmp
stos
dec
leave
adc
cmc
mov
cld
fimuls
aad
data16
call
movsl
adc
loopne
pop
or
jle
and
mov
push
movsl
cmc
rorl
repnz
push
add
jnp
or
add
sbb
sbb
push
iret
xchg
mov
verw
jo
popa
inc
les
jge
ja
cmp
add
subb
add
imul
add
add
xchg
adc
add
pop
add
xor
add
pop
out
add
adc
or
push
mov
repnz
mov
pop
mov
pop
testl
xorb
mov
cmp
loopne
push
pop
add
jae
cmc
insl
sbb
fnstsw
dec
lock
mov
daa
push
sbb
sbb
xchg
enter
sbb
loopne
les
add
sbb
xor
pusha
or
outsl
inc
add
dec
frstor
add
adc
or
aaa
dec
mov
cmp
sbbl
cmp
adc
flds
push
xor
jne
add
int
and
sbb
gs
addl
jmp
enter
ja
pop
xor
push
clc
jge
repz
loop
push
cmp
add
cli
cmpsb
out
push
xchg
adc
aad
pop
imul
sbb
jae
cmc
xor
cmp
ja
in
and
movl
aaa
jle
jmp
cmp
cmp
lds
add
movsl
push
testl
loope
test
nop
jecxz
idivb
add
push
inc
fsubrs
push
mov
call
or
push
cmc
adcb
xor
test
adc
pop
ljmp
loopne
ds
sbbb
push
pushaw
sub
inc
popl
insl
int3
popf
or
es
add
pop
dec
push
clc
mov
cmp
pop
test
lret
lds
aaa
popa
sahf
cmp
pusha
mov
or
xchg
or
add
pushf
dec
inc
sub
sbb
jnp
push
cli
add
xchg
iret
or
clc
sarl
dec
pop
mov
dec
cld
inc
add
lea
mov
or
sahf
popa
aas
mov
and
pop
test
sbb
add
and
call
ret
mov
pusha
fisubs
mov
xchg
adc
add
out
cwtl
sub
and
fadds
jnp
orl
jl
and
mov
cmp
mov
sbb
sub
or
fdivrs
shlb
push
sahf
mov
orl
cmc
loop
xlat
xchg
jno
add
dec
jbe
in
jnp
add
mov
leave
call
xchg
adc
iret
popa
test
push
jbe
pushf
sbb
cmpb
sub
mov
sar
push
repnz
repz
mov
mov
or
jl
sbb
pop
xchg
pop
lahf
or
xor
les
cmp
out
pop
pop
loopne
add
loop
push
inc
push
in
xor
aas
sub
inc
dec
cmpb
cmpsl
push
fistpll
add
in
ret
xchg
mov
inc
and
push
ret
ss
inc
push
inc
hlt
inc
mov
cmp
sti
nop
and
sahf
insl
pop
jmp
pop
add
out
notb
mov
jns
loopne
jne
add
scas
in
ds
mov
xchg
pop
add
adc
ds
test
inc
lahf
jp
cli
pushf
inc
into
adc
scas
add
add
inc
sar
add
shrb
int
push
imul
adc
push
das
push
adc
add
fmuls
mov
cmp
inc
shr
mov
mov
orl
loopne
adc
imul
pop
push
mov
into
add
enter
pop
loop
incl
jo
test
jnp
test
or
or
or
movsb
sub
lds
push
cmp
lcall
div
mov
insb
loope
sbb
add
ret
inc
add
roll
scas
pusha
xchg
pop
or
sarl
inc
cmp
cmp
jecxz
addr16
out
je
inc
push
ja
xorl
jge
mov
or
add
cmp
push
mov
jb
or
in
sbb
mov
and
and
push
je
or
aad
sti
out
inc
ljmp
cmpsl
push
or
or
jge
push
mov
ja
add
loopne
incb
push
pop
push
lock
aam
mov
inc
mov
out
sub
cmp
add
daa
push
movb
icebp
xchg
movswl
add
aam
stos
ds
ja
mov
xchg
out
cmp
js
add
xchg
rcrl
pop
and
sbbb
cmp
or
mov
xchg
dec
add
ds
adcb
push
or
dec
jmp
ljmp
out
xchg
ds
rcrb
leave
fs
add
add
lock
add
jae
out
sbbb
aas
testb
jns
std
jecxz
lods
mov
push
adc
inc
or
dec
es
push
imul
add
es
loopne
add
xchg
push
adc
in
cmp
push
roll
popf
sub
orb
addl
mov
lock
adcb
xchg
inc
popl
xchg
ret
jp
shlb
adc
or
add
pop
popf
scas
rorb
add
inc
xorl
rorb
cmp
jmp
mov
cmc
pusha
loopne
adcb
add
sbb
js
sub
mov
or
or
subb
mov
adc
push
mov
lock
xlat
jnp
movsl
pop
cltd
fnstsw
ret
jbe
in
subb
adc
mov
xchg
inc
inc
cmp
cmp
add
int
cmp
or
jae
lock
ja
push
jne
mov
cwtl
push
xor
cmp
jge
push
add
jns
or
lock
add
fcoml
inc
dec
inc
hlt
xor
jns
push
add
push
orb
scas
mov
ret
arpl
imul
jb
testb
xchg
xchg
fistps
mov
adc
inc
clc
mov
jbe
xchg
xchg
and
daa
push
push
rcrb
hlt
adc
bound
daa
sbb
push
fadds
cmp
clc
lock
cwtl
aad
out
popf
xchg
or
in
inc
adc
mov
movl
sbb
aam
pop
pop
int3
je
in
hlt
in
out
aad
lea
in
add
aam
lret
push
add
or
loopne
jnp
jno
add
out
pop
and
add
addr16
les
or
frstor
cmp
pop
and
lcall
lret
mov
loop
mov
loopne
push
adc
test
jnp
add
divb
ljmp
add
vsqrtsd
ja
outsl
mov
and
xchg
clc
loopne
in
mov
bound
add
js
repnz
lret
outsl
shlb
mov
adc
inc
aaa
pop
fmull
les
cltd
mov
mov
movsb
pop
aam
xor
mov
outsb
mov
pop
add
js
sbb
je
xor
cmpsl
mov
cmpsl
shlb
sar
push
cmpb
mov
mov
fwait
js
loopne
push
pushf
test
in
aaa
add
jno
dec
aad
adc
pop
fadd
or
rolb
cli
jo
push
addb
daa
cld
es
ret
or
mov
jmp
leave
outsb
inc
inc
inc
cli
push
dec
into
out
mov
or
rolb
sbb
lods
adcb
cld
fwait
stc
aas
pusha
orb
cmp
pop
dec
mov
dec
sbb
xchg
lahf
add
jo
push
jbe
rcrl
lods
mov
adc
push
iret
sbb
mov
push
or
mov
cwtl
hlt
fs
push
pusha
lcall
xchg
jge
cmc
mov
fwait
push
lahf
iret
bound
in
jmp
xlat
dec
add
insl
clc
test
add
mov
loopne
icebp
xchg
mov
push
les
add
push
pusha
loopne
push
sbb
pop
add
cli
shr
mov
dec
fsubs
test
xchg
inc
cmp
xor
cmpl
inc
sub
fsubrs
shr
lret
orb
add
fldl
add
mov
jl
add
jno
daa
sub
inc
add
hlt
add
adc
jo
add
js
in
in
pop
fadds
pop
sub
cmp
in
mov
pop
add
loop
jns
push
out
sbb
add
cmc
imul
lahf
mov
pushl
or
jmp
sbb
add
cld
sub
inc
cs
popf
ds
jb
xor
mov
mov
loop
aam
daa
add
loopne
std
pushf
mov
add
shll
testb
clc
add
popf
cmp
add
push
add
push
add
cmpsl
repz
adc
push
push
sbb
and
mov
ret
add
push
in
add
fsubrp
sub
xchg
pop
loope
xchg
add
in
or
push
ret
mov
incl
add
xchg
mov
add
das
cld
mov
or
cmp
rcll
adcb
out
sbb
sub
and
popa
hlt
cli
adc
add
xchg
loopnew
push
mov
add
test
cld
xchg
fmull
mov
mov
cmovg
jae
add
js
rcrb
sbb
sub
loope
cmp
adc
iret
stos
rolb
lret
mov
int
icebp
adc
ja
add
rcrl
sbb
push
jl
add
ret
pop
push
repz
cmp
insb
mov
xorb
aad
sbb
clc
adc
sbb
and
xor
pusha
cmp
pop
cmp
dec
push
add
sub
add
pop
cmp
dec
push
push
clc
add
push
ljmp
xor
daa
adc
cmp
dec
rol
repz
psrad
inc
mov
pop
jo
pop
mov
mov
inc
mov
arpl
lds
and
cld
and
jecxz
cmpb
or
cmp
sub
and
add
add
dec
jmp
mov
pushf
faddl
sbb
or
test
cmp
call
sub
aas
clc
arpl
pushf
ret
andps
push
ret
jns
xor
add
inc
enter
push
adc
out
setge
scas
dec
cmpsl
jecxz
add
inc
adc
add
jmp
je
cmpl
movsl
add
sub
mov
jnp
pop
add
jns
nop
sub
or
repnz
add
data16
adc
mov
out
sbbb
rcr
iret
sub
mov
jno
inc
xor
js,pt
cwtl
imul
into
xchg
cmp
clc
enter
int
cmp
sbb
cmp
sub
mov
leave
cwtl
push
jnp
sbb
push
jl
xor
mov
pushf
add
xchg
cmp
xor
sahf
orb
add
add
or
xor
hlt
cmp
sub
adc
sub
stos
push
adc
or
aaa
mov
mov
inc
loope
push
clc
pop
aam
add
xchg
push
sbb
aas
or
cmp
adc
shlb
mov
rcll
mov
cs
loope
lock
mov
popa
loopne
test
add
cmp
dec
mov
and
mov
inc
jo
sub
add
push
inc
test
movl
fwait
lock
or
jl
push
fildl
xor
dec
cltd
cwtl
adc
aaa
add
adc
adc
jmp
cmp
and
cmp
stc
adc
jecxz
loope
arpl
orb
inc
test
add
add
cmpsl
insb
sbb
sub
or
pushf
orb
sub
jnp
pop
dec
push
adc
xor
add
cmp
in
and
add
pop
adc
add
xor
pop
jle
xchg
xor
and
inc
test
mov
js
popf
es
jecxz
jl
jg
dec
mov
vminsd
in
jns
ret
jae
testl
mov
in
mov
add
sbb
sbb
fsubrs
push
inc
ret
call
cmp
sbb
add
loope
add
and
pop
add
sbb
xchg
fcomps
mov
dec
add
inc
sarl
dec
add
pusha
push
mov
adc
jle
add
pop
mov
mov
incb
test
andb
shrb
in
aaa
cmp
rol
jo
sbb
push
pop
mov
icebp
push
adc
push
push
push
dec
lock
add
push
dec
ja
pop
call
clc
icebp
lahf
mov
int3
insl
jl
xlat
sbb
orb
jns
cmpb
out
mov
sbb
mov
loop
mov
and
xchg
lahf
sahf
mov
jb
dec
fwait
mov
xchg
jbe
ret
test
push
push
addr16
add
jo
sbb
cmp
add
sub
xor
inc
add
scas
icebp
dec
rcrb
add
add
or
ret
icebp
int3
pusha
mov
inc
movntq
dec
subb
inc
test
pushf
mov
pop
repz
mov
xchg
sbb
ffree
popf
sub
adc
lock
shlb
pop
cs
mov
sbb
sub
add
loope
mov
jle
je
mov
push
jge
and
rclb
or
test
sbb
in
xchg
mov
mov
pusha
adc
push
insb
sub
ja
loopne
aas
insl
roll
cmp
sbb
mov
hlt
ffreep
adc
add
mov
add
cmp
sarl
aam
imul
mov
sbb
sub
add
loope
and
lahf
pop
out
cmpl
xchg
daa
pusha
cwtl
inc
xchg
or
pop
mov
add
rorl
jno
push
es
call
push
or
rol
cltd
sub
or
pop
sub
add
mov
sbb
int
les
adc
sbb
iret
fnstcw
pop
xor
xchg
sahf
add
sbb
and
xchg
ficoml
inc
add
out
push
or
add
and
lods
lock
sbb
push
lahf
adc
arpl
and
out
int3
add
and
cmc
mov
mov
iret
loope
lret
notl
and
cmc
xchg
fiadds
and
stc
or
add
jno
pusha
addl
jb
jno
fcmovnbe
dec
mov
pop
mov
add
fildl
cmpb
idiv
add
fadds
cmp
test
add
movb
xchg
mov
add
sbb
sbb
jl
test
repnz
loope
cld
inc
add
mov
imul
arpl
or
xor
sbb
sub
jns
xchg
mov
cmp
xor
add
add
jbe
pop
xorl
add
out
jne
lods
jo
mov
out
and
sub
and
stc
iret
ja
or
jb
loopne
rcrb
mov
adc
cmp
or
push
xchg
or
rcrb
shlb
xor
push
fcompl
sbb
pushf
sbb
out
add
mov
out
pop
and
mov
stc
push
loopne
jl
add
mov
aas
and
fs
mov
sbb
out
add
fisubl
xchg
inc
sbbl
xor
shlb
lock
ret
or
pop
or
repz
insb
push
cmpsl
mov
jno
enter
dec
mov
mov
sbbb
test
xchg
mov
rclb
addb
or
orl
dec
jbe
call
cld
pop
cmp
cmp
add
or
int3
aam
fisubl
in
xorb
test
lret
sahf
xor
pop
sbb
jl
cmp
adc
xor
xor
shll
pop
jecxz
test
cmp
push
pop
fnstcw
fwait
mov
add
iret
add
cltd
xor
pop
xor
pusha
mov
insb
sahf
xlat
or
out
sbb
jnp
inc
sbb
or
inc
addr16
out
aam
popa
ljmp
cmp
mov
daa
insl
jbe
lock
jge
repnz
in
fdivrs
sti
lret
or
or
sbb
add
xor
add
testl
add
cmp
push
fdivr
sarb
repnz
aaa
adc
xchg
decb
or
add
sub
push
sbb
sub
pop
fmuls
mov
mov
pusha
mov
mov
dec
lock
lds
jecxz
popf
pop
sarb
pop
xor
jecxz
arpl
shlb
add
out
jecxz
lods
nop
and
push
lret
cmp
add
xchg
fwait
les
inc
jp
cmp
mov
add
iret
and
out
xchg
add
out
faddl
mov
call
fidivrl
push
arpl
push
pop
jle
add
mov
cmp
movsl
inc
mov
das
in
or
lock
xchg
push
stos
dec
ret
pop
fistpll
inc
pop
cltd
jo
ret
lret
or
jge
test
and
js
xor
imul
sbbl
fdiv
jae
rorl
and
sbb
rorb
add
jp
shrb
cmp
mov
hlt
add
mov
dec
jmp
repnz
cmpl
or
mov
pop
cld
clc
or
inc
pop
mov
rcrl
pop
dec
xor
aas
sub
and
mov
gs
and
test
faddl
mov
int3
dec
jno
add
lods
xchg
popf
and
push
fistpll
adc
add
imul
inc
xchg
lahf
icebp
nop
inc
pop
ret
popf
mov
out
mov
cmp
mov
adc
push
mov
lock
mov
pop
shrb
imul
push
out
adc
les
pop
in
mov
dec
jo
cmp
add
cld
call
mov
or
pusha
cs
loop
icebp
add
cmpsb
xlat
call
jmp
out
push
mov
jmp
push
cmp
push
fdivs
shrb
cmpsl
inc
cwtl
xor
aas
lahf
push
or
ds
pop
sbbl
rcrb
fcomps
out
adc
and
roll
daa
xor
jmp
push
sbb
push
mov
jns
andl
add
aam
sbb
rcrb
arpl
mov
cmp
jge
ret
sbb
ror
fsub
cmp
in
pushf
test
adc
imul
mov
inc
pop
cmpb
pop
movsl
add
lret
enter
add
shlb
addr16
add
cmp
xor
ds
pushf
push
loopne
xorl
into
jmp
add
sbb
mov
andb
and
aad
inc
sahf
pop
pop
jl
popa
push
adcb
add
xchg
mov
je
add
add
sarl
push
push
push
lock
cli
adc
push
jge
or
movb
add
test
ret
cmp
out
lock
pop
inc
sbb
rclb
and
and
pop
jl
sti
das
andb
rcl
and
push
mov
call
mov
or
add
je
xor
cld
leave
invd
insl
pop
sub
jns
repz
cmp
out
shlb
add
jl
in
pusha
rclb
mov
add
lea
das
ds
enter
out
and
mov
insb
push
cmc
add
test
fbstp
inc
xor
add
pop
pusha
xchg
add
inc
ss
xlat
sub
divl
shrb
pop
arpl
or
mov
push
jl
icebp
add
jp
mov
shll
aas
jnp
xchg
movsb
loopne
mov
push
rolb
pop
pop
cmp
adc
sbb
inc
sti
in
loopne
or
jnp
push
xor
sub
xlat
nop
xchg
arpl
bound
neg
or
xor
add
jg
add
sbb
jecxz
orl
loopne
add
sbb
xchg
rolb
push
in
loop
sbb
das
or
add
xor
pusha
add
lods
inc
mov
pusha
push
adc
pop
jo
pop
or
fcomip
nop
movhps
add
mov
cld
and
jle
daa
test
and
out
push
dec
sbb
nop
jmp
inc
xor
test
lahf
xor
cs
fsubs
add
adc
xor
jns
push
or
call
scas
pop
popf
add
jo
mov
inc
or
lcall
orl
and
mov
out
push
je
adc
xor
lock
xchg
fnstsw
rorl
sub
sub
adc
testl
fnstsw
xchg
rolb
xorb
fildl
ljmp
sbb
in
movsb
insl
inc
mov
pop
out
add
sbb
lcall
test
sbb
pop
mov
add
cmp
movsb
push
xchg
pop
cli
sbb
or
add
popa
iret
lock
cmp
dec
cwtl
jne
pop
aas
test
inc
gs
lahf
add
je,pt
dec
dec
sub
add
jmp
les
lods
add
sub
test
add
popf
das
not
int
loope
sahf
out
fnstcw
addr16
add
add
mov
sbb
sbb
sbb
mov
push
mov
inc
in
ljmp
xchg
jb
test
add
orl
adc
mov
sub
push
xor
js
and
xor
or
pushf
cltd
inc
ja
mov
lahf
call
js
lds
pop
das
add
fiadds
add
cmp
addb
in
or
pop
mov
and
aam
sbb
pop
notb
mov
push
add
rcrb
add
iret
jle
mov
jo
loopne
mov
mov
xchg
cmp
pop
adc
xchg
push
shlb
add
loope
inc
enter
adc
or
xor
fdivr
les
bound
cwtl
jae
mov
inc
and
add
mov
add
push
add
lret
add
imul
and
out
add
xor
add
add
adc
addr16
adc
jge
pop
call
cwtl
js
ja
mov
lods
insb
push
icebp
push
sub
sahf
movb
sbb
adc
pop
clc
pop
test
jnp
repz
rorb
packuswb
cmp
mov
into
xor
cwtl
cmpl
cmp
add
orl
inc
addb
arpl
cmp
daa
or
xchg
mov
insb
imul
pop
or
add
adc
arpl
test
cld
sbb
enter
sbb
sbbl
mov
out
mov
test
sbb
out
push
cwtl
push
add
pop
ss
mov
jno
lret
and
out
add
jl
cmc
mov
lret
sbb
cmpb
cmp
push
incb
aam
iret
repnz
cmpl
into
cmp
xor
aas
inc
jo
mov
loope
rcrl
adc
hlt
mov
dec
or
or
ljmp
dec
xor
clc
add
sbb
adcl
imul
test
movl
mov
jecxz
subb
sbb
or
push
insl
add
add
fst
sbb
xor
sbb
adc
inc
add
xor
imul
pusha
inc
aas
cmp
fcomps
inc
jl
xorb
pop
int3
xchg
pusha
pop
loopne
mov
mov
xor
fs
jp
add
adc
sub
cmp
fcoml
pop
incb
roll
add
or
dec
or
ret
or
shlb
adc
add
popl
or
out
iret
test
out
in
adc
jle
rcr
cmp
push
mov
sahf
cmc
mov
add
xorl
pop
push
push
outsb
pushf
mov
clc
cltd
sbb
testl
pop
cld
push
or
mov
mov
mull
xor
or
out
and
js
icebp
leave
lcall
add
mov
jnp
and
sbb
out
fistl
sub
and
dec
iret
das
add
add
add
popf
ret
xchg
pusha
cmpsl
or
jecxz
cmp
push
je
inc
scas
jbe
adc
dec
mov
and
nop
sbb
mov
pusha
les
sbb
incl
xchg
sbbb
xchg
adc
mov
lea
add
cltd
add
inc
cmp
repz
mov
sbb
cmp
adc
jl
mov
in
popf
mov
ret
notl
mov
adcl
add
mov
dec
popl
into
insb
sub
adc
mov
cli
mov
add
insl
or
js
fadds
mov
lahf
movnti
fs
push
cld
xchg
and
loopne
jno
add
and
js
pusha
das
adc
int
bound
fisttpll
hlt
cmpb
and
xor
call
jo
sub
sbb
adc
out
sub
inc
mov
sbb
add
add
iret
and
adc
jnp
or
fdivs
popa
dec
mov
shlb
sub
cltd
subl
clc
add
jecxz
add
push
movsb
lock
or
sbbb
repnz
lock
cwtl
push
add
and
mov
aas
dec
add
sbb
push
shrb
add
jbe
clc
fadds
std
inc
mov
popa
pop
add
cmp
test
icebp
mov
adc
loopne
mov
add
push
add
cmp
cs
inc
jne
add
out
lods
add
sub
test
cwtl
shl
xchg
loopne
nop
loopne
mov
pop
push
ds
in
dec
cmp
fsubrs
js
cltd
add
hlt
stc
cmp
loopne
jmp
inc
iret
icebp
ds
add
inc
loop
or
jo
mov
in
pop
cmpb
fimull
fcomps
jns
scas
and
fimuls
inc
mov
jg
add
dec
test
cmp
int3
push
sbb
in
sbb
xrelease
in
add
pushf
out
jge
add
or
inc
sahf
jmp
imul
jb
popa
inc
or
or
add
add
rcr
sbb
clc
or
jo
loopne
pushf
add
xlat
xor
jnp
loope
sbbb
cmp
imul
test
nop
add
mov
loopne
testb
repz
loopne
rcrl
add
icebp
shl
int
xadd
aam
and
out
sbb
cmp
jmp
shlb
jp
dec
add
or
xor
stc
out
in
add
adc
cmpsl
pop
in
dec
push
jp
sbb
daa
jne
xchg
add
mov
int3
jmp
fsubs
cmp
add
xor
and
add
adc
mov
xor
movsl
or
mov
sbbb
and
addr16
add
rol
loope
pop
xor
sub
mov
pop
xor
add
imul
jo
mov
and
adc
push
pusha
dec
sub
pop
lods
lods
leave
pop
adc
adc
add
iret
sbb
loope
cmp
jae
ja
xor
sbb
add
jb
js
inc
insb
add
imull
imul
shlb
push
lods
sti
negb
lret
xor
inc
add
or
xchg
ss
roll
xchg
jb
pusha
xchg
bound
dec
loopne
ret
xor
and
test
or
push
adc
fidivrl
jo
outsb
popf
stc
sarl
int3
mov
jbe
loopne
inc
insl
shlb
cmp
testl
lock
sub
out
in
aam
mov
aas
jb
add
add
enter
in
sbb
lret
ss
mov
push
lods
das
or
idivb
jo
sub
mov
ds
pop
or
and
mov
je
outsl
xchg
add
fmuls
popf
loopne
add
pop
or
sbb
out
adc
push
outsl
cld
mov
pop
add
dec
call
mov
outsl
mov
inc
lock
cmp
pop
pusha
rorl
inc
add
mov
jecxz
addb
fadds
pop
pop
data16
mov
scas
add
popf
cmp
mov
add
mov
add
loope
xor
add
lods
insb
dec
jno
lock
sbb
loope
cmp
sahf
xchg
popl
jns
lock
add
cmp
movb
fiaddl
test
dec
or
aam
add
or
cmpsb
push
in
sub
loopne
push
xorb
lcall
inc
xchg
frstor
mov
lds
sbb
arpl
add
push
fldl
add
mov
je
xor
cmp
test
mov
call
sbb
sub
push
rcrb
xchg
mov
push
insl
repz
jge
xor
pop
ds
or
add
ret
pop
cmp
cmp
sbbl
sahf
pmaxsw
cmp
js
cmp
or
or
push
loopne
aas
in
jae
add
in
inc
pusha
xchg
cs
or
jne
add
ret
jns
js
bound
imul
aaa
inc
call
xchg
inc
inc
add
popf
push
sbb
xchg
pop
push
xor
jecxz
js
cmp
loop
sub
add
push
cmpl
shlb
lds
push
sbb
sub
mov
dec
fs
pop
mov
mov
xorb
rcl
cmp
fsubrs
pusha
loopne
vmread
insb
cmpsb
add
or
or
add
jne
das
and
outsl
and
or
test
ret
mov
mov
scas
xchg
pusha
mov
cmc
xor
repz
sbb
lock
or
nop
sti
loopne
cmp
mov
add
xchg
orl
stos
pop
ret
add
jp
icebp
sbb
stc
or
cmpb
fadd
jae
nop
loop
es
jbe
add
int3
mov
cmpsl
cmp
lock
out
add
push
mov
sbb
mov
add
and
les
cmp
xor
add
or
das
add
add
addr16
jmp
leave
cmpsl
dec
pop
sbb
shlb
iret
flds
and
sbb
outsl
add
outsl
cld
pop
and
cmp
or
sub
sti
pop
inc
int
movb
inc
fbstp
sbb
js
pushf
add
nop
xchg
add
cmp
xlat
data16
mov
outsb
push
jg
add
xchg
pushf
sbb
sbb
sub
add
lahf
jmp
jo
movsb
clc
inc
add
cmp
sahf
inc
add
loopne
mov
jno
pop
push
cmp
pop
dec
sbb
addb
arpl
subl
jle
sub
jge
in
push
adc
stc
xchg
sahf
cmp
or
jns
add
mov
ja
addb
out
add
cmp
imul
jae
mov
clc
sbb
xchg
jo
loopne
pop
or
mov
div
add
loopne
jmp
lar
adc
cmp
push
inc
adc
push
iret
mov
mov
add
inc
loopne
xchg
dec
cwtl
jae
inc
lods
inc
add
pusha
mov
mov
sbb
sbb
add
push
out
in
and
rorb
lret
jb
stos
mul
push
jo
or
pop
stc
add
imul
out
sub
js
add
push
push
and
sbb
cmpsl
adc
cld
jnp
daa
xor
lods
inc
rcrl
inc
pop
ror
in
loopne
add
cmp
aaa
mov
sub
push
mov
bound
repnz
pop
add
les
mov
mov
adc
sbbb
outsl
adc
in
cmp
dec
push
pop
shl
loopne
daa
add
dec
push
and
add
cmpsb
inc
xchg
add
or
add
lret
mov
rclb
stc
mov
add
cmp
sbb
jae
add
mov
and
jno
add
jo
inc
xor
cld
stc
push
adc
sbb
add
ret
clc
jb
add
loope
mov
pop
sahf
mov
test
inc
adc
adc
sbbl
push
jp
add
fneni(8087
arpl
ret
movsb
lock
pop
popa
or
adc
or
mov
js
dec
sub
or
push
jge
cmp
loope
sbb
cld
add
dec
add
test
repz
jp
add
xor
adc
mov
addl
ja
in
daa
iret
movb
bound
inc
inc
test
push
rcl
mov
sbb
loopne
cmp
repz
push
and
push
lldt
sbb
add
xor
adcl
mov
add
cvtpi2ps
add
cld
into
loopne
in
jo
or
adc
inc
or
cmp
nop
popa
pop
jo
jecxz
xor
pop
inc
mov
ljmp
sbb
push
fiadds
add
pop
pushf
dec
faddl
filds
xchg
push
inc
or
iret
add
daa
jnp
cwtl
ret
add
gs
insl
test
and
add
mov
push
rolb
or
cmp
ret
adc
add
add
vpunpckldq
in
mov
andb
adc
add
push
jne
repnz
inc
imul
roll
adc
int3
or
loope
push
mov
sub
mov
lahf
cmp
add
flds
repnz
clc
cmc
enter
push
cmp
sahf
add
mov
loopne
xchg
cmp
add
pusha
xor
xchg
mov
mov
sub
fadds
cmp
or
popf
sbb
sbb
mov
mov
and
pop
lea
lret
ret
add
mov
fnstenv
andb
or
decl
xor
stos
mov
ret
hlt
lds
add
out
pop
cmp
loope
adc
out
cwtl
or
sub
push
inc
add
mov
pop
daa
adc
and
dec
sbb
cwtl
sbb
xchg
inc
mov
sbb
roll
out
shrb
or
cmp
adcb
xchg
sub
and
jl
add
pop
mov
sarb
mulb
add
popa
mov
lock
jo
inc
test
mov
aaa
je
roll
cmp
add
add
add
in
jge
add
gs
rcr
mov
mov
daa
cmp
add
rorb
inc
xchg
clc
push
xor
add
mov
mov
mov
adc
add
add
push
or
loopne
or
mov
mov
out
add
in
push
into
mov
fsubs
add
xchg
ret
jg
add
ljmp
cmp
add
ret
bound
sbb
mov
sub
addr16
in
fldt
ljmp
add
adc
das
push
jge
add
mov
mov
push
das
add
into
addb
js
dec
cmp
test
sbb
rorb
pusha
int3
addr16
in
or
mov
jo
and
lods
roll
ja
mov
hlt
push
shrb
or
jo
add
imul
sbb
mov
adc
cmpl
loopne
push
nop
add
push
push
loop
add
aam
sarl
push
loopne
in
inc
inc
lahf
add
inc
aaa
sub
cld
call
xlat
testb
cmp
rolb
or
jns
in
lods
lahf
add
mov
xlat
xor
shrl
pop
mov
sbb
cwtl
jecxz
pop
int3
repnz
ja
rorl
adc
xchg
shlb
dec
push
and
pusha
add
inc
test
and
inc
add
xchg
ds
and
sbb
adc
loopne
dec
int3
add
adc
adc
pusha
push
jae
lcall
aaa
fldln2
fstl
xor
ret
adc
or
sti
push
lea
cmp
mov
js
cmp
xor
pop
sbb
fmull
imul
movsl
fmuls
in
insl
mov
adc
push
jbe
addb
ljmp
mov
xlat
inc
mov
scas
add
insl
sbb
mov
movsl
mov
cmp
addb
loopne
or
rcl
add
sub
aaa
jp
dec
add
les
cmp
test
dec
add
add
sbb
test
adc
loope
add
add
sbb
inc
in
jecxz
int
repz
mov
repz
test
push
ja
or
adc
lock
and
sbb
push
or
xor
and
xchg
out
jle
adc
push
adc
adc
sub
or
jmp
loopne
add
fidivrs
repnz
divl
add
out
pushf
add
mov
je
jo
add
clc
fildl
negb
mov
scas
push
jl
test
ud1
adc
jo
pop
cmp
lahf
rcrb
ljmp
add
push
das
and
addl
xlat
add
popf
pop
pop
repnz
fisubrs
mov
fadds
add
add
xor
dec
xchg
mov
shlb
add
cmpsl
pop
in
sbb
mov
sub
xchg
rorb
fs
loopne
sbb
mov
outsb
into
jl
call
add
hlt
mov
xchg
out
jo
cmpsb
psubw
daa
imul
in
les
push
jno
out
add
inc
es
movsl
mov
xor
adc
mov
jns
js
cmp
mov
sbb
orb
or
ret
adc
pop
orl
js
cmp
add
rcrb
dec
sbb
enter
shll
int3
push
rcrb
adc
pop
ljmp
mulps
add
sbb
addr16
xchg
and
repnz
sbb
push
xor
fcompl
lods
pop
add
add
popf
test
sub
icebp
and
push
push
xchg
loope
jle
mov
xor
inc
loope
ja
loopne
add
iret
push
ret
jge
jp
inc
rol
pop
or
stos
cwtl
repnz
aas
sbb
adc
or
xor
cmp
inc
cmpl
lret
sarb
xor
jns
dec
mov
popa
out
pop
enter
inc
xchg
mov
test
add
popf
clc
inc
add
addr16
jg
xchg
jmp
insb
out
adc
or
cmp
sub
adc
inc
or
or
repz
inc
js
push
repnz
popf
or
jnp
hlt
mov
clc
repz
mov
add
cmp
or
loopne
lahf
pop
sbb
mov
pop
xor
jbe,pt
add
lods
sbbl
or
or
add
push
push
add
xchg
inc
pushf
leave
cwtl
sbb
cmp
or
or
xchg
call
xchg
inc
xlat
mov
jno
gs
cwtl
aas
testl
push
cmp
push
rolb
dec
js
and
lods
jae
fs
ret
loopne
leave
out
pop
ja
sbb
or
add
pop
mov
or
loopne
fs
add
loope
out
push
aam
jb
mov
add
dec
fsubr
add
out
loopne
fs
movsb
mov
add
popf
jnp
aaa
mov
mov
sub
int3
mov
sbb
mov
nop
aam
pusha
or
sub
loopne
mov
jb
xchg
add
fnstsw
adc
cmp
pop
insl
cmp
xchg
add
pop
xchg
cmpsl
aaa
ret
cld
cmp
bswap
cs
add
mov
dec
stos
in
jp
mov
push
or
clc
push
sbb
mov
add
pop
fsts
add
test
je
add
or
jo
add
adc
std
pop
stc
mov
inc
in
aas
clc
mov
cmp
xchg
add
mov
add
xor
roll
aad
push
xlat
arpl
xor
pop
cld
xor
jecxz
sbb
push
add
loop
or
or
out
or
lock
push
addr16
jae
dec
les
cmp
xchg
xchg
pusha
fiaddl
sbb
dec
mov
mov
and
xchg
popa
es
test
inc
je
add
clc
sbb
add
xchg
lock
add
test
pop
sbb
dec
mov
dec
pavgb
stc
jb
xchg
mov
mov
adc
sub
out
nop
add
call
cmp
loope
or
push
add
out
ret
inc
stc
rcl
jno
add
jp
loope
faddp
inc
mov
mov
xor
and
roll
adc
xor
xor
or
or
lea
and
mov
dec
pop
mov
lcall
adc
rcrb
lret
push
out
cmpb
cmp
xor
stos
outsl
add
ds
loopne
and
add
mov
mov
cli
cmp
scas
mov
lods
add
adc
daa
rcrb
inc
add
sahf
sub
xchg
in
add
xchg
psubsb
sbb
aas
test
jae
mov
out
ret
or
sarb
mov
mov
sbb
sbb
mov
xor
inc
sbb
loopne
shlb
lcall
inc
jno
or
cmp
data16
ffree
xlat
push
popl
cwtl
sbb
fcomps
jno
mov
dec
aas
insb
je
add
xchg
call
push
pop
js
pop
andl
rcrb
mov
jp
or
aam
popa
inc
aas
adc
add
push
dec
add
cwtl
stc
jo
or
out
adc
out
sarb
xor
add
loopne
xchg
sbb
add
or
cmp
pop
push
adc
add
pop
scas
cmp
push
xchg
les
iret
add
call
in
xor
push
xlat
aaa
mov
hlt
jmp
sub
sbb
loop
outsl
pop
scas
jo
mov
push
sti
sub
imul
fbstp
ja
jbe
ret
pop
fnstenv
add
jmp
mov
push
sbb
mov
xor
movsl
add
out
cmp
lret
rorl
cmp
shlb
cld
cmp
mov
push
or
lock
push
cmp
add
xor
add
jb
add
out
add
shrb
push
ljmp
andb
sbb
jne
mov
and
ret
add
xor
mov
cmp
or
jae
pop
rcrl
rcr
stc
test
add
jecxz
push
pusha
cmp
pop
dec
addr16
sbb
sub
loopne
dec
test
jo
mov
push
cwtl
stos
add
jne
sbb
add
cmpsl
ret
fbstp
jne
add
ret
ret
lea
sbb
repnz
ds
jg
repz
add
add
push
dec
cmp
jb
lods
add
rcrl
into
or
sub
add
sub
mov
add
or
add
cltd
cmp
dec
jo
adc
and
clc
jmp
bound
add
int3
push
dec
dec
mov
es
inc
arpl
fcomip
xor
daa
xorb
or
add
into
arpl
or
outsb
jae
pop
test
mov
or
fdivrl
jb
or
aaa
psubb
cwtl
outsl
pushl
enter
shl
jmp
add
xchg
pop
jae
add
leave
daa
andb
mov
sbb
fsts
adc
mov
fbld
int3
xor
test
cmpsb
aad
popa
push
add
lret
pop
add
pop
or
icebp
lds
dec
in
add
idivb
dec
loopne
add
mov
mov
xor
jmp
adcl
pop
and
push
iret
and
repnz
jecxz
push
shll
add
xlat
sbb
mov
shll
or
add
cs
into
add
xor
jns
jg
pusha
movl
fcoml
cmp
adcb
idivl
icebp
sub
xchg
add
in
sub
sbb
push
loopne
leave
cmp
or
jge
add
je
xor
das
adc
inc
cmpl
jo
out
push
or
add
adc
push
add
loop
mov
sub
mov
push
push
int3
cwtl
add
es
int
xor
or
inc
fsubs
and
clc
add
cmpsb
shrl
ss
adc
jge
xor
sbb
cmpl
inc
js
callw
or
adc
icebp
cmp
adc
loop
add
test
xor
add
sub
call
sbbl
and
enter
push
sbb
loope
or
adc
mov
pop
loopne
or
scas
sbb
xor
cmp
add
arpl
and
cmp
prefetchnta
add
cmp
sbb
adc
aad
sbb
cmpb
sub
mov
jp
or
shrl
mov
or
fdivrs
add
mov
cwtl
mov
fdiv
ljmp
and
inc
hlt
and
fisubl
loopne
bound
pop
decl
inc
xor
pusha
fadds
divl
adc
movsb
pop
repnz
or
insl
shlb
jle
scas
adc
in
or
or
mov
and
mov
pop
sub
lods
add
idiv
into
lret
add
mov
and
or
cwtl
inc
lock
cmp
cmpsl
mov
xchg
hlt
mov
pop
adc
loopne
mov
sbb
aam
xor
mov
add
cmp
call
cmp
in
add
arpl
iret
int3
int3
loopne
xor
mov
cs
mov
je
push
or
mov
cmp
sbb
addr16
add
test
dec
lcall
ja
cmp
in
xor
test
shrb
inc
push
add
sahf
dec
test
test
add
cltd
test
jno
addb
stos
clc
cmpsb
loope
js
nop
andl
ud2
int3
jns
sbb
out
test
lock
adc
movl
andb
testl
jp
pop
jns
add
xchg
flds
pop
sbb
cmp
xchg
mov
xchg
adc
jmp
sub
xchg
jo
dec
add
add
mov
jl
push
cmp
mov
sub
add
xor
cli
xchg
add
dec
ds
orb
jno
pop
fdivl
das
fsubp
cs
repnz
add
call
ds
jbe
fwait
and
js
loop
daa
les
insb
lock
sar
cmp
sbbl
xchg
loopne
pop
mov
push
and
adc
in
add
cmpsb
adc
adc
jg
aaa
bound
call
daa
or
cmp
add
dec
addb
lods
xchg
or
fucomip
jge
xorl
add
mov
ret
sbb
mov
cmpsb
dec
inc
add
cwtl
mov
dec
sbb
cmp
mov
jmp
add
mov
lock
inc
sbb
dec
adc
sbb
add
pushf
and
xchg
loopne
hlt
xor
jno
lods
pop
sub
inc
jp
repz
mov
push
mov
mov
shlb
sub
dec
aas
inc
dec
add
rcll
pop
pop
sahf
pusha
mov
test
imul
jg
xlat
lock
xor
or
icebp
add
jl
rcrb
int3
jg
loopne
add
test
xchg
dec
fildl
cmp
mov
lods
negl
jbe
arpl
push
adcl
xchg
jo
sbb
jg
add
cmp
jge
ds
or
jo
pop
sub
jecxz
add
jne
pop
cwtl
jbe
out
mov
sbb
sarb
pop
xadd
arpl
xchg
lea
pop
or
stc
mov
lds
jnp
adc
imul
and
adc
add
xchg
pusha
jo
ror
sbb
xor
mov
ret
and
and
pop
pop
data16
je
mov
pop
lock
mov
call
rorl
and
cld
inc
jecxz
jp
add
icebp
es
adc
mov
xor
testb
cwtl
add
sahf
or
movb
fadd
or
addl
and
inc
icebp
sbb
add
les
mov
fdivl
movsbl
ljmp
xor
xchg
xor
loopne
jbe
popa
mov
sub
inc
sub
cmp
add
dec
in
push
loop
inc
jo
sub
ret
and
lahf
push
add
pop
jbe
xor
cli
jmp
shll
fdiv
lret
jae
rcrb
andl
mov
push
add
outsb
dec
mov
add
jb
dec
in
jmp
sbb
push
mov
int3
add
les
bnd
lods
push
lea
nop
fldenv
iret
add
je
inc
or
add
mov
cmpsb
jo
add
fcompl
arpl
sbb
xor
fnstcw
mov
mov
add
scas
fs
add
les
dec
add
cmp
push
hlt
add
fstps
sbb
out
add
pop
and
xor
or
sbb
stc
add
testb
or
cwtl
out
lock
adc
loope
push
cli
add
andb
sub
fdivrl
xor
add
repz
bound
cmp
add
hlt
cld
mov
push
push
fdivr
add
cli
mov
outsl
xchg
lock
icebp
add
in
daa
add
cmp
adc
cltd
mov
add
pop
xchg
popa
mov
add
add
clc
and
es
cwtl
add
sbb
repnz
mov
mov
test
inc
sarb
or
or
pop
lahf
mov
dec
sub
cmp
sti
shlb
jle
inc
mov
sbb
imul
mov
dec
xor
fcom
test
add
jno
mov
out
lahf
push
in
xchg
add
add
add
add
add
adc
icebp
add
cmpsl
cmp
inc
subb
mov
jae
cwtl
std
add
fcoms
sbb
js
and
mov
xchg
xor
dec
es
loop
jne
xchg
sub
loope
mov
push
sarb
or
mov
cmp
dec
add
adc
aad
nop
or
mov
inc
jns
js
jo
pop
lea
add
ds
clc
div
sbb
jne
sbb
shlb
sarl
push
ss
lret
xchg
jno
lcall
lock
cli
arpl
sarb
xchg
fsubs
mov
add
push
lock
popa
lret
pop
adc
out
ret
add
and
enter
sbb
int
mov
pop
push
jg
add
movsl
sbbl
in
adc
and
add
in
jnp
into
addb
orb
push
andb
jle
inc
push
cld
stc
sbb
jecxz
sar
mov
arpl
push
jo
and
push
repnz
jecxz
xchg
pop
mov
mov
dec
inc
adc
xchg
pop
pushf
cmp
mov
rorb
inc
cmpsl
movsl
sbb
jmp
mov
dec
addb
mov
sahf
int
divb
add
jae
loope
sarb
sub
cmp
adc
cli
push
call
inc
rcrb
fisttpll
clc
and
add
std
add
test
sbb
jge
addl
popa
pop
ja
or
dec
add
dec
jl
sub
adc
clc
pusha
sahf
pop
popa
sbb
jl
inc
shlb
rcll
loop
sbb
loop
dec
cpuid
fs
mov
repnz
xor
and
xchg
pusha
nop
and
cmp
dec
jb
sbb
adc
fmuls
cmc
pusha
ljmp
pop
add
in
and
inc
cmp
cmp
in
xchg
popa
add
mov
test
repnz
call
xor
push
jle
add
sub
push
or
pop
cmp
fs
jo
sbb
icebp
sub
ror
pusha
cwtl
jecxz
loopne
cmpsl
dec
add
and
out
xor
cmpl
repz
or
adc
clc
adc
sbb
pop
dec
mov
mov
cmc
mov
dec
rol
nop
fxch
xor
test
xchg
loopne
adc
mov
call
sub
out
adc
dec
icebp
pusha
mov
mov
loop
loopne
xor
adc
mov
in
or
in
mov
clc
push
cmp
cmp
add
jg
add
outsl
xor
inc
mov
pop
loope
cmp
sbbl
inc
enter
out
ja
push
jbe
in
adc
test
arpl
shll
repnz
lock
es
jne
nop
xchg
or
lods
stc
sbb
add
cmp
icebp
sahf
loopne
jno
mov
inc
test
rclb
sub
dec
jnp
xchg
rorl
enter
adcb
jno
mov
ret
and
mov
add
ja
add
add
adc
xchg
pop
xor
sbb
jnp
rcr
mov
out
notb
cwtl
roll
leave
ds
andb
mov
ret
mov
xchg
add
adc
lahf
out
arpl
push
dec
loop
or
test
sbb
jnp
pop
mov
xchg
mov
ja
add
and
push
cmp
cwtl
pusha
adc
cs
prefetcht0
iret
pop
popa
fisubrs
add
lahf
aas
lock
in
pop
sbb
xor
sahf
ljmp
cwtl
xor
adc
pop
pextrw
add
and
cli
aad
xor
shlb
ret
dec
sbbl
pusha
xlat
pop
cwtl
xlat
add
jge
mov
push
cmc
add
test
push
xchg
inc
inc
in
mov
out
mov
adc
ret
repz
sbb
mov
pusha
andl
xchg
push
add
push
mov
dec
out
xor
jae
push
adc
stc
rolb
push
sub
inc
add
jnp
out
add
test
add
xchg
inc
jno
jecxz
sbb
add
push
add
pop
in
cmp
fwait
test
mov
and
clc
inc
inc
hlt
ljmp
mov
test
ds
repnz
inc
cmp
stos
subb
fisubrs
popf
scas
fbld
push
mov
push
pushf
and
imull
add
addr16
push
xor
faddl
imul
rcrb
cmp
add
icebp
push
add
push
sub
sbb
jle
enter
jp
addb
cmp
add
pop
out
cmp
enter
add
popf
ret
sbb
cmp
fdivrs
movl
jns
add
sub
test
and
out
jns
xchg
cmp
cmp
or
mov
scas
add
and
or
add
mov
addb
js
add
loopne
add
push
and
rcrb
add
mov
jno
xor
sti
shl
cmp
add
push
outsl
in
pandn
xor
sbb
jg
push
sbb
pop
fsubl
subl
add
ret
fxam
cmp
pop
inc
adc
movsl
lds
mov
push
add
ds
pusha
jno
adc
sub
aas
sar
xchg
loop
dec
mov
adc
add
nop
jmp
shr
inc
jge
jnp
and
pop
addr16
hlt
pop
mov
out
fsubl
xlat
xor
add
jno
pop
addb
rcrl
add
push
ljmp
mov
testb
dec
fadd
js
xor
push
cmpb
iret
ds
clc
add
arpl
ss
pushf
jg
loopne
cmp
loop
mov
mov
add
pop
ds
or
push
aaa
fbld
jl
mov
nop
popl
inc
inc
sahf
adc
mov
in
pop
sub
or
cmp
or
sbb
sbb
sbb
or
xor
pop
or
mov
js
jecxz
mov
std
add
cmp
inc
stc
add
ret
cmp
push
add
mov
sbb
enter
imul
pusha
pop
fldl
lds
add
sbb
xor
xchg
pusha
loopne,pn
push
aas
cli
flds
leave
arpl
cmpsl
push
aam
sbb
test
fwait
xchg
push
sahf
sbb
jge
add
inc
push
fsubrl
pop
mov
mov
jecxz
imulb
xchg
cltd
add
or
sti
inc
cmp
xchg
push
pop
add
fwait
imull
shlb
add
pop
fadds
cmp
pop
add
out
popa
pop
repz
out
aaa
jecxz
or
in
addl
cmp
add
xorb
fnsave
dec
push
mov
mov
push
pop
or
or
and
jl
xor
inc
movsb
incb
cmp
mov
lret
add
pusha
add
pop
ds
call
add
orl
add
stc
push
jo
inc
je
add
out
and
mov
push
add
or
sbb
faddl
pop
push
adc
and
loope
sarb
sbb
ja
das
int3
xchg
mov
stos
sbb
add
cwtl
aaa
add
or
popa
jge
mov
sub
cmp
mov
pop
test
jmp
repnz
add
cmp
aam
repz
xchg
sbb
xchg
push
mov
movsb
add
jnp
in
push
daa
adc
sbb
add
aad
fmull
adc
add
lea
inc
shll
pop
xor
sbb
out
loopne
addl
or
fcomps
pop
movsb
cmpb
lea
push
out
aas
pop
mov
pop
bound
xchg
jbe
lret
mov
add
xor
add
out
sbb
push
rorb
xor
add
addr16
jo
sbb
xchg
push
movsl
add
pop
mov
cmc
imul
fistl
inc
pop
das
jae
insl
sbb
mov
orl
or
mov
add
jns
fdivs
sbb
dec
dec
sbb
les
data16
pop
repnz
xchg
shll
rcrb
jmp
pop
movsb
mov
mov
cmp
inc
ret
mov
mov
loope
sbb
pusha
lods
rol
aas
xchg
xor
mov
jno
outsl
popf
outsb
flds
cmp
loopne
add
out
lret
int
cltd
add
adc
lret
loopne
out
inc
gs
add
inc
add
aam
inc
call
pusha
adc
mov
adc
arpl
jmp
cmp
and
xchg
sbb
lods
mov
loope
add
mov
test
xchg
aaa
lods
xchg
or
lock
out
add
mov
or
call
xchg
lds
inc
jbe
xor
cltd
orb
push
inc
xchg
sbb
jge
add
adc
lds
mov
mov
mov
sahf
in
orl
xchg
jne
pop
in
xchg
adc
adc
sahf
cmp
push
ret
or
ja
sarl
pop
nop
movsb
or
nop
repz
adc
lock
arpl
xchg
add
call
mov
add
inc
jge
cmc
dec
dec
mov
sarl
dec
add
xchg
stos
rcrb
dec
loope
add
lods
in
mov
cmpl
sub
mov
adc
movsb
ret
rolb
cmp
add
pop
xchg
push
add
cmp
int3
fdiv
arpl
xchg
and
add
movsl
loope
iret
add
cs
sbb
cld
add
add
or
push
pop
sbb
cmp
or
movsb
sbb
jo
inc
ja
xchg
add
mov
push
jge
push
push
push
repz
outsb
nop
dec
and
orb
add
mov
add
icebp
sub
add
xchg
loopne
shll
cld
pcmpeqd
in
add
divb
lds
cmp
and
popa
adc
xchg
pop
sub
inc
cmp
out
cltd
js
sbb
test
dec
jo
add
jecxz
or
clc
movups
jb
addl
and
add
aaa
rcrb
cmp
sbb
add
inc
iret
es
cwtl
dec
adc
lret
add
out
cmpsb
movl
xchg
xlat
inc
nop
or
push
push
cmpl
add
fdiv
lds
jecxz
test
mov
add
pusha
and
sub
sahf
cs
fs
pop
cmpb
push
xchg
ds
outsl
or
xor
in
cmp
inc
pop
mov
cmpl
add
xor
dec
sbb
dec
add
lea
sahf
jge
pop
adc
adc
inc
push
sbb
mov
mov
std
aam
pop
add
push
pop
mov
mov
movb
mov
icebp
js
pusha
loop
nopl
mov
mov
loopne
add
cmp
inc
sub
xchg
fstpl
add
jae
inc
or
outsb
out
stos
inc
movsb
or
adc
pop
add
clc
dec
or
inc
ds
adc
inc
mov
adc
out
popa
clc
or
add
nop
loopne
test
sbbl
jmp
js
repnz
out
pop
add
ja
loope
in
clc
call
pop
shll
sbb
cmp
out
add
incl
pop
or
and
popf
push
orb
dec
ljmp
fdivp
add
rcll
cmp
add
or
add
pop
ds
cmpb
jnp
je
adc
loopne
add
push
jns
insl
cmp
dec
or
push
idivl
mov
imul
shll
lds
dec
mov
loop
jno
mov
sbb
aas
push
incb
dec
out
addl
add
xor
repz
xor
push
pop
add
ret
jno
std
mov
inc
push
pusha
xor
in
rcl
mov
pop
push
jnp
sbb
lds
pop
mov
ret
addl
lock
mov
repz
jo
mov
in
aas
faddl
pop
out
orb
xchg
insb
dec
sahf
jo
mov
cmpsl
push
add
add
cmc
iret
rolb
in
adc
jl
push
mov
sub
icebp
bound
pop
paddb
call
dec
sti
gs
fucomp
aad
insl
cld
or
mov
or
xchg
negb
xorb
pop
jno
inc
mov
loope
loopne
add
push
jns
cmc
lods
xchg
pop
push
inc
lahf
adc
xor
inc
sbb
mov
sbb
pop
movl
cli
in
push
adc
test
mov
add
cld
loopne
sbb
pop
fstpt
pusha
mov
pop
push
add
xor
fnstcw
mov
mov
and
cwtl
push
cwtl
imul
mov
rcr
enter
or
in
jae
mov
rorb
xor
and
loope
repz
call
lock
cmp
cltd
orb
lahf
sub
xor
xor
push
ret
es
pusha
pop
cmp
add
jecxz
adcb
pop
aas
jnp
adcb
and
pop
loop
loopne
cmp
add
xchg
mov
subl
jns
add
aad
and
fdiv
in
fsubs
popf
push
mov
sbbb
dec
icebp
and
ret
sbb
pushf
and
adc
push
add
out
jl
cmp
push
xchg
inc
cmp
sbb
xchg
xor
or
or
mov
out
ret
movsb
cmp
cmp
loope
adc
mov
sbbb
lea
pop
fcoms
add
ret
movl
sbb
mov
cmp
sbb
lock
aaa
jle
outsl
xorl
dec
pushf
mov
out
testl
xor
sub
std
in
inc
and
pop
stc
in
sahf
jae
pop
mov
ret
std
ror
loopne
add
cmp
cmp
cli
clc
or
jecxz
pushf
sahf
xchg
addl
cmp
mov
adc
pusha
out
cmp
cmp
popa
test
push
xchg
jno
sub
mov
nop
sti
add
repnz
stc
ret
fstl
pop
push
repz
ds
adc
pusha
inc
loopew
mov
stc
pop
in
mov
scas
add
add
lahf
add
dec
mov
jae
mov
or
push
add
mov
pop
loope
add
je
push
iret
jo
subps
inc
sbbb
into
aas
adcb
inc
dec
mov
dec
shlb
aad
or
xlat
xor
xchg
outsb
xor
rcrb
scas
fsubl
cmp
add
lea
popf
mov
or
inc
insl
addb
aaa
push
mov
sub
jns
rol
inc
add
cmpb
add
xchg
mov
pop
fmull
sbb
or
lock
iret
orb
or
jo
add
sahf
clc
cmp
or
dec
outsb
cmp
add
cld
ljmp
jns
bound
fwait
and
or
mov
inc
outsl
andb
clc
jmp
cs
icebp
or
jecxz
sbb
leave
mov
les
jge
addl
out
in
mov
cmovae
test
jp
mov
repz
push
add
sbb
out
add
syscall
dec
cmp
movsl
iret
movl
xchg
mov
js
nop
mov
test
add
loope
mov
rcr
pusha
repz
ret
add
out
sub
mov
cwtl
or
jp
add
xchg
mov
inc
add
js
jmp
loopne
loope
test
push
loopne
popa
incl
ret
stc
sbb
lock
cs
add
test
add
and
add
mov
cmp
xorb
pop
mov
loope
cli
adc
push
scas
mov
fisubs
lock
jns
icebp
stc
pop
jg
pusha
in
add
mov
xor
add
fstpl
lds
pop
lret
faddl
cmp
andb
int3
add
test
arpl
push
adc
jecxz
fsub
push
cs
add
ljmp
out
inc
mov
mov
loopne
fcmovbe
into
add
movl
push
push
adc
mov
dec
or
adc
jp
pop
mov
or
sbb
push
fldl
mov
in
cmp
add
mov
lock
stc
add
add
cmp
loopne
cltd
jo
sbbl
dec
xor
scas
orb
push
mov
cmp
nop
das
jmp
pusha
orl
jecxz
push
pop
mov
sbb
jo
cmp
lahf
add
xchg
jl
hlt
pop
add
xlat
jb
cmp
mov
lahf
jns
add
loope
pop
popa
sbb
arpl
sub
sbb
ja
add
sbb
lock
add
in
fsubr
mov
jo
fistpl
push
sbb
pusha
push
lock
addr16
push
inc
insb
pusha
or
add
fadds
mov
lcall
sbb
push
es
sbb
pop
pushf
dec
push
nop
add
add
lock
loop
jbe
push
popa
cmc
xchg
or
incb
rorl
lahf
add
inc
fsub
pop
add
icebp
insb
mov
cmp
rclb
clc
nop
or
add
pop
popl
or
add
inc
pop
and
ret
notb
or
lock
sbb
add
push
mulb
pop
jae
add
icebp
bound
mov
aam
jmp
movsl
lahf
bound
add
insl
mov
add
cmpsb
mov
mov
testb
cmp
mov
ds
subb
add
or
shll
mov
mov
ljmp
call
sub
rcr
add
jbe
or
not
jo
js
add
inc
add
push
aam
cli
dec
sbbb
mov
add
cmpl
movsb
push
lsl
xchg
loope
sbb
pop
mov
jl
mov
push
orb
mov
mov
lret
inc
sub
lods
scas
add
sbb
mov
js
fcoms
repz
subb
and
or
hlt
stc
jnp
ds
jp
pop
out
jmp
inc
cmp
in
pop
sbb
xchg
adc
xor
loop
xor
pop
or
gs
repz
aaa
inc
add
pusha
fdivrl
pushf
ret
in
add
fadd
cmp
cli
xor
out
pop
and
cs
rol
mov
xchg
adc
aaa
and
add
fadds
inc
xor
testb
clc
icebp
lock
gs
mov
and
sbb
sbb
or
outsl
add
mov
mov
add
cmp
in
test
ja
loopne
jecxz
iret
cmpb
mov
inc
add
fisttpll
fsubr
push
cmpb
in
jge
sbb
mov
pushf
lock
loop
popf
out
jae
es
out
add
xchg
je
pop
or
fiadds
cmpsl
in
out
add
pop
sbb
repnz
pop
mov
loope
inc
xor
incl
add
mov
lea
and
test
push
loopne
jl
idivb
pop
rorl
loopne
dec
adc
subb
or
popf
js
push
jp
fcmovb
jle
add
or
iret
clc
dec
add
aaa
adc
and
add
xor
repnz
shll
sub
mov
sbb
mov
cmpsb
js
add
test
cwtl
in
aas
fsubrl
add
xchg
test
call
lods
push
sbb
jns
xor
add
das
movl
icebp
orb
in
xchg
out
pop
add
push
ficompl
inc
imul
add
bound
stc
sti
nop
repz
les
sbb
jns
jge
xchg
leave
sbb
sarl
in
push
lahf
or
es
imul
mov
ds
js
pop
pop
pop
inc
mov
sbb
cmp
add
inc
mov
pop
in
cmp
pop
add
xchg
sahf
or
cmpb
add
pusha
xchg
out
jp
add
push
repz
ss
xlat
loopne
pop
fistpll
std
shl
pop
xor
outsl
xor
add
adc
rolb
sbb
or
dec
pusha
push
sub
and
addb
xchg
popa
adc
and
push
add
mov
fmuls
or
pop
add
popf
cmpl
or
addb
orb
shrb
add
pop
add
icebp
push
shr
shr
mov
and
lock
sbb
or
jecxz
js
add
xorb
pop
cmp
ret
adc
insb
lock
add
shlb
add
inc
inc
test
and
push
in
lret
fisttpll
es
and
popa
jl
orb
add
repz
push
cmp
loopne
push
js
push
adc
rcll
iret
rcrb
add
je
cwtl
push
cmpsl
xchg
imul
pusha
hlt
inc
inc
adc
out
ljmp
xchg
mov
push
cmpsl
lock
addl
sbb
jge
sub
or
ljmp
lcall
cmp
out
incl
or
sub
mov
or
loopne
cmp
xor
mov
and
insb
in
andb
push
scas
xchg
sub
jns
xchg
add
ret
lods
cwtl
loopne
jae
pushaw
rcl
lock
dec
sbb
cmp
xchg
jecxz
push
xchg
inc
add
pop
sahf
fisttpll
rolb
xrelease
inc
adc
dec
sbb
push
push
loope
bound
lock
mov
push
inc
cmp
int3
mov
pop
or
xchg
push
sbbl
inc
add
sbb
rcr
cmpsb
out
popa
in
rolb
clc
sbb
xchg
les
js
push
jecxz
sar
add
jb
iret
fadds
sbbb
scas
and
sbb
stc
or
dec
outsb
cmp
cmp
popf
push
cmp
int3
test
flds
sub
xchg
retw
or
jle
repnz
push
add
push
cmp
lahf
daa
mov
nop
shlb
cmp
dec
sbb
sbb
out
add
dec
push
pop
add
xchg
pop
dec
xor
hlt
cltd
add
int3
or
jo
push
mov
add
mov
add
or
icebp
mov
cmp
add
jno
int
das
xorb
aam
loopne
cltd
add
push
sbb
adc
loopne
imul
aam
pusha
push
sub
inc
xchg
adc
or
call
fldcw
loopne
xchg
ds
mov
sbb
ss
ja
sbb
add
in
cmp
sbb
xchg
mov
add
and
add
and
aas
pusha
icebp
je
xlat
or
sbb
das
adc
jo
or
cwtl
and
add
jbe
cmc
xchg
pop
adc
jmp
clc
and
xor
and
inc
lahf
das
push
add
repnz
cmp
mov
ljmp
or
ss
subb
daa
add
add
fdivs
into
jno
cs
or
and
or
pop
add
mov
test
add
jne
cwtl
roll
push
subl
jmp
add
pushf
scas
std
scas
or
popa
jl
sbb
jo
mov
inc
or
rolb
addr16
xor
xor
and
pop
adc
scas
shrl
add
and
loopne
adc
add
sbbl
push
adc
push
add
inc
loope
cmp
inc
maskmovq
mov
rolb
lds
test
in
ljmp
subb
xor
das
inc
fadds
add
pop
in
adc
or
inc
js
pop
and
sarb
xor
push
jnp
icebp
cmp
in
or
xchg
mov
ret
clc
andb
cmp
mov
sbb
in
dec
ret
jo
daa
adc
add
pusha
mov
dec
loope
or
shlb
push
or
xchg
add
push
pusha
mov
pusha
push
addr16
and
pop
jnp
iret
cmpsb
jne
add
adc
lahf
dec
jge
icebp
or
nop
push
add
int3
aaa
es
cmp
or
aas
xchg
cld
add
cwtl
push
out
lock
add
sarb
mov
cmp
icebp
subl
or
pop
flds
inc
add
cmp
or
add
inc
in
add
add
jle
add
andb
jg
add
fidivrl
out
nop
inc
test
sahf
xchg
jl
jns
mov
pop
cmp
cmp
adc
push
pop
add
xchg
inc
adc
rcrb
jge
or
sti
ljmp
inc
xchg
out
and
push
or
jl
cmovno
xor
inc
jns
mov
xchg
sbb
cmpb
jb
or
add
fdivl
cmp
cltd
mov
mov
pop
cld
dec
add
icebp
xchg
jo
pusha
stos
movb
das
adc
mov
neg
and
adc
pop
mov
imul
int3
in
or
mov
sti
mov
push
roll
shlb
inc
shll
add
movzbl
rcr
add
pop
inc
sbb
imul
testl
loope
mov
aas
cmp
sbb
jno
pop
enter
mov
ret
aaa
add
lock
nop
jl
ss
cmc
rcrb
jl
add
stc
and
pop
and
lods
and
cld
addr16
call
jle
add
negl
xlat
pop
push
ds
cmpsb
add
mov
test
inc
mov
inc
in
out
xchg
shrb
hlt
ja
iret
jo
sti
xor
push
jecxz
xor
jns
mov
jp
js
lock
in
push
movsb
add
adc
add
sbb
pop
inc
test
adc
adc
ljmp
push
xchg
xchg
add
add
sub
stos
ret
inc
cmp
out
filds
jmp
pop
int3
add
add
mov
ret
or
push
inc
pop
adc
dec
call
jecxz
mov
add
ljmp
mov
sbb
add
add
inc
ljmp
add
xor
push
or
mov
mov
lahf
xlat
jl
add
add
rolb
push
mov
and
and
xor
push
idivb
lds
repnz
sbb
popl
mov
dec
add
imul
add
hlt
pop
rcll
or
add
pop
dec
flds
in
fmuls
popa
jnp
pop
add
sub
ror
pusha
and
push
or
das
add
data16
subl
mov
sub
lock
inc
xor
cli
scas
sarb
or
or
leave
jp
add
adc
arpl
fstpt
jne
push
insl
sbb
sbb
cld
cmpb
pushf
add
test
push
add
int3
orb
pusha
add
scas
or
sub
bswap
fsubrl
push
arpl
pop
mov
jae
xor
mov
add
xor
sbb
add
sub
int3
xor
add
mov
jecxz
add
cmp
ds
xchg
pushf
pop
push
ja
mov
incb
jno
out
loop
arpl
add
adc
lock
cs
outsb
test
addb
pop
push
lcall
add
cmpsl
outsb
xlat
inc
add
xor
pop
mov
and
ds
movups
pusha
jle
rcrb
loopne
add
test
lock
xchg
cmp
or
mov
ret
lea
stc
popa
cmp
fcoml
movsl
xor
push
push
nopl
js
jg
or
pop
sub
add
clc
or
nop
test
repz
add
push
loopne
sarb
add
repnz
and
adc
jl
fsubr
test
mov
dec
and
mov
stos
add
xlat
xor
xchg
add
inc
mov
adc
jo
pop
addl
test
sti
sbb
in
ret
push
sbb
pop
mov
shld
scas
pop
add
cmp
or
sbb
mov
cmc
add
shll
cs
add
push
iret
or
mov
mov
or
pop
roll
or
subb
cwtl
mov
rolb
dec
enter
sbb
int3
push
add
add
jbe
daa
je
dec
fldenv
add
shlb
add
ret
stc
add
lret
test
or
sbb
add
push
lods
xor
outsb
jnp
test
mov
pop
daa
movsb
sbb
xchg
add
xor
add
xchg
decl
pushf
push
rclb
pop
cmp
adc
add
fs
scas
add
test
push
add
sti
retw
inc
or
popf
mov
or
xor
hlt
jo
lock
ret
in
mov
pop
je
xchg
leave
inc
wbinvd
add
fwait
sub
cmp
ja
xchg
jo
xchg
ret
test
fdivl
aad
sbb
or
rolb
arpl
lahf
sub
jo
mov
out
add
adc
push
and
aam
adc
arpl
add
or
shll
hlt
add
sub
inc
jl
sbb
mov
shlb
dec
add
shr
ljmp
add
cmp
stc
jns
mov
hlt
test
inc
sub
jp
ret
int3
dec
or
cmp
mov
cmp
in
add
jmp
jbe
pop
mov
dec
aas
roll
aaa
xor
sub
jae
call
add
nop
adc
sub
incl
faddl
arpl
sbb
cmp
pop
xor
push
add
mov
add
js
jmp
sub
out
add
xor
cmp
push
repnz
adc
sti
inc
add
dec
mov
adc
ret
or
dec
jae
mov
add
or
in
cmp
js
cmp
dec
pop
xchg
enter
data16
outsb
popf
insb
js
lret
pusha
ds
inc
pminsw
movb
sbb
and
imul
lret
inc
or
jb
popf
xor
xchg
inc
ljmp
aam
popa
add
xlat
lock
jmp
cs
mov
xchg
test
cmp
mov
sar
add
iret
sbb
insb
pusha
mov
lret
cmp
push
add
pop
push
push
mov
ss
mov
ljmp
js
push
int
clc
add
loope
lcall
inc
cmp
dec
pop
sti
add
cmpsl
aaa
push
jns
cmp
cmpsb
pop
add
repnz
pop
pushf
clc
inc
mov
adc
lock
add
cs
shrl
push
int3
inc
mov
push
lods
into
add
lock
loop
ret
cmpb
icebp
sbb
xchg
movd
pop
xlat
rcrb
jne
leave
dec
cmp
mov
push
in
ss
daa
repnz
add
outsl
xchg
cld
push
cmpl
mov
cmp
rcr
sbb
hlt
add
fisttps
bound
lock
or
mov
dec
mov
or
es
cmp
mov
out
fdivr
add
lcall
fisubrs
and
add
jo
repz
mov
mulb
mov
add
loope
data16
sbbl
pop
xor
scas
mov
les
cmp
aaa
pcmpeqd
add
movsb
xchg
out
add
mov
fdivrl
sub
add
cltd
mov
ja
add
or
fdivs
nop
sbb
movb
jbe
and
cmpsl
pop
dec
cmp
xor
out
add
addr16
insb
dec
sbb
mov
push
cmp
mov
hlt
adc
in
bound
dec
loopne
and
add
fsubrs
xor
mov
pop
mov
or
xor
mov
pop
inc
test
xchg
movb
fldcw
dec
inc
outsl
pop
pop
sbb
and
cmpb
hlt
lods
jo
cs
jne
sbbb
in
mov
jecxz
push
cmp
jbe
or
cmp
clc
icebp
aas
testb
mov
cltd
jecxz
repnz
sub
adcl
lahf
ds
or
rclb
cli
add
adc
aam
push
xor
hlt
loop
add
inc
movsl
add
add
cmp
cmpb
fdivl
popl
movlps
push
and
inc
adc
add
or
repz
test
out
in
sbb
mov
push
negb
pop
mov
and
sbb
loopne
and
adc
or
xor
lods
aaa
sbbb
daa
cmp
fadds
orl
mov
push
xchg
insb
sbb
xchg
test
push
shlb
add
lock
mov
lock
cwtl
orb
das
pop
pusha
sbb
pop
add
shl
or
sarb
andb
mov
push
mov
pop
out
loope
push
cmpl
xorb
mov
or
inc
fmuls
add
shl
jl
add
adc
add
jno
dec
pop
mov
shl
out
shlb
es
out
or
xor
fadds
sub
adc
jnp
add
add
daa
aas
cmpsl
js,pn
fwait
mov
iret
out
mov
or
add
jg
add
mov
or
cli
add
cmp
js
pop
rorb
mov
rcll
add
testl
fwait
lds
mov
fs
arpl
repnz
mulb
dec
add
push
fsubs
adc
sbb
xchg
mov
and
and
xadd
pusha
pusha
cmp
cmp
pop
loopne
jne
hlt
rorb
inc
pop
insl
mov
arpl
movsb
in
clc
and
cmp
cmp
push
sub
inc
push
aas
mov
or
clc
xchg
add
jns
jmp
push
pop
dec
jbe
loopne
sub
adc
mov
add
mov
cmpsl
std
xor
mov
add
mov
or
xor
fsubl
adcb
lock
clc
dec
inc
cmp
adc
adc
loop
jge
add
or
inc
mov
sbb
pop
inc
push
add
pop
mov
cmp
dec
rcrb
fbstp
fcoms
pop
or
les
xchg
add
or
sbb
pusha
shl
add
stc
enter
in
cs
add
mov
add
sahf
rorb
mov
leave
or
insb
int3
fs
add
xchg
daa
bound
mov
in
xchg
pop
sbb
sbb
ror
or
inc
sahf
lods
dec
rcrl
lock
mov
imul
ljmp
add
sahf
pop
xor
sbb
add
lods
cmovp
jb
sub
adc
les
mov
mov
sbb
cmp
add
lahf
pop
pusha
mov
add
sti
sbb
outsb
cmpsl
test
adc
test
xchg
mov
scas
or
mov
inc
cmp
xchg
add
out
sbb
popa
sarb
dec
rcrb
mov
mov
sbb
cli
and
daa
out
add
or
test
sbb
cmp
sbb
cmp
xchg
ret
lea
stos
in
add
mov
jo
mov
pop
adc
jecxz
rolb
testl
out
add
jo
cmc
pop
aaa
add
arpl
inc
shlb
repz
cmp
cmp
xchg
add
loop
sub
sahf
pop
lahf
outsl
icebp
xchg
pop
out
push
dec
pop
sub
cmp
fcoml
cmp
xor
mov
mov
lahf
mov
pop
outsb
add
js
jno
sub
out
or
dec
sub
adc
outsb
add
shlb
scas
ret
fmull
xor
add
aam
xor
adc
cmp
adc
adc
pop
test
test
pop
add
cmpb
xorl
hlt
inc
cwtl
int3
add
andl
fisttps
inc
loopne
xchg
jecxz
add
mov
outsb
shlb
push
imul
mov
inc
add
mov
shll
pop
sub
int3
add
test
jecxz
daa
cmp
push
sbb
inc
repnz
cmp
cmp
xchg
loope
mov
stc
add
add
call
icebp
add
jae
and
jl
lea
mov
xchg
popf
lahf
pusha
sub
repnz
add
testl
cmc
push
mov
mov
test
adc
arpl
pusha
pop
add
pop
add
or
pop
dec
pop
push
popa
mov
cs
cld
push
add
rorb
or
mov
mov
sub
sbb
add
inc
jmp
enter
cmpsl
pop
jle
outsl
sbbb
out
sbb
ja
add
test
mov
cld
loopne
push
jge
jp
add
popf
xor
add
and
lods
pushf
inc
lock
js
push
add
or
ljmp
inc
and
or
shlb
and
mov
fsubs
orb
popa
pop
add
mov
std
inc
pop
pop
cmp
pusha
arpl
mov
push
mov
je
jae
add
inc
mov
add
push
mov
xchg
pop
or
add
sbb
out
add
mov
or
pushf
dec
lds
sub
or
aaa
push
push
in
sbb
cmpsb
loop
sbb
aas
mov
fiaddl
lock
add
cmpl
mov
ds
test
sbb
and
fwait
or
lock
jo
add
aad
js
cmp
rolb
pop
mov
or
dec
repz
loope
add
into
lods
or
sbb
dec
mov
sbbl
in
loopne
cmpb
in
or
add
sbb
add
shll
cmp
rolb
rolb
and
enter
add
popa
pop
push
pop
and
shrb
sti
aam
cmp
shrb
cltd
or
iret
adc
mov
je
mov
cs
jne
test
shlb
or
in
add
shlb
add
movhlps
insl
push
jl
mov
add
dec
add
add
mov
scas
movl
int
pop
out
xchg
orb
mov
rolb
adc
movsl
adc
lods
jne
add
stos
es
in
jl
loopw
xorl
lret
or
and
pop
sub
jge
mov
and
fmuls
iret
add
add
jmp
sbb
out
bound
sub
and
and
in
add
cmp
fnstcw
incb
jo
out
lock
stos
pop
iret
cli
cmp
clc
fsubrs
mov
push
dec
add
add
loop
inc
gs
sbb
lods
xor
rolb
mov
mov
mov
mov
pop
push
ficompl
nop
mov
sub
aam
xchg
filds
dec
shl
adc
jle
add
add
aad
adc
dec
mov
inc
jbe
xor
lret
out
add
arpl
ffreep
lea
jo
add
jecxz
or
into
das
dec
dec
clc
sahf
add
out
lsl
adc
sbb
sub
rolb
pop
add
push
xor
jnp
pop
jbe
int3
add
and
jne
inc
add
shl
orb
sar
das
popa
shlb
aam
cwtl
add
push
jns
add
inc
adc
push
ret
dec
push
xchg
jb
shlb
orb
sbb
iret
inc
test
push
js
loopne
add
add
or
fdivrs
cmp
andb
dec
jae
pusha
xorl
jo
ret
add
push
jbe
lock
pop
adc
mov
or
pop
or
fcomip
cmp
sbbb
sarb
add
popf
xchg
jecxz
sahf
pop
jle
add
orl
add
aad
mov
pop
add
mov
js
add
jo
inc
add
xor
cli
in
or
popf
add
jno
aas
jae
add
lock
fldl
int3
sbb
cmpb
sbb
loop
add
inc
fcoms
pop
and
test
jle
fistps
add
pop
pusha
and
cmpl
xor
xchg
ud2
or
inc
loop
cltd
je
jae
add
and
push
lahf
or
add
ret
push
mov
adc
sub
add
aas
xor
cmpb
push
pop
jae
add
lock
js
int3
add
repz
mov
add
fildll
pop
shll
jg
adc
jns
add
ja
cmc
int3
xor
add
sbb
out
pop
inc
ds
xor
nopl
lahf
add
iret
scas
or
aam
add
fisttpll
jl
add
repz
mov
call
outsl
and
sbb
jg
fsubs
ss
fnop
push
dec
bound
in
sub
jecxz
out
sbb
add
loope
add
push
fmuls
push
or
cwtl
xor
sbbb
mov
inc
jle
hlt
add
lods
adc
les
push
pusha
loopne
leave
lock
loopne
lret
mov
shlb
add
fists
loopne
mov
mov
adcb
add
pushf
pop
jno
add
faddl
mov
outsl
dec
ds
scas
jo
and
aas
movsb
sub
add
mov
add
xchg
mov
cmpsl
push
cmpsl
xchg
cmp
daa
rorl
std
loopne
jl
xorb
repnz
xchg
cmp
add
pop
in
leave
mov
sbb
or
loope
adc
mov
sbb
data16
clc
push
cmp
vmread
pusha
jecxz
jnp
add
dec
stc
shl
shrb
adc
inc
std
mov
mov
xlat
add
lahf
aaa
lock
add
xchg
repnz
aas
xchg
orb
enter
push
fsubs
hlt
sub
jge
pusha
inc
jbe
cmp
xor
jo
sbb
add
pusha
dec
adc
add
pop
ror
sbb
int3
add
add
ss
add
out
mov
add
mov
out
loop
addb
mov
arpl
fildll
cmp
add
clc
ret
add
outsb
call
test
loopne
sub
push
sbb
dec
stc
sbb
jl
rcrl
jo
lock
add
loopne
sbb
sbb
cs
insl
adc
cld
sti
add
push
outsl
cmp
jle
xor
adc
cmp
cmp
es
inc
pop
sub
cmpsl
repnz
repz
orb
sub
adc
cmp
sti
ds
mov
in
inc
pusha
mov
cmp
xor
iret
add
outsb
ds
sbb
shlb
stos
out
pop
arpl
hlt
add
add
sbbl
jl
repnz
loopne
nop
out
jge
out
xor
jnp
ja
popl
mov
cmp
add
push
bound
xchg
fiadds
or
std
inc
jnp
int
imul
bound
sbb
fisubrl
and
addr16
jb
adc
add
cltd
sti
js
add
clc
add
mov
push
cwtl
je
shlb
add
call
cmc
push
cmp
cli
inc
add
add
pop
fsubl
daa
sbb
pop
pop
pop
pop
mov
int3
xchg
jl
xchg
lock
pop
cwtl
mov
push
dec
lret
xlat
jge
imul
psllw
or
int
inc
mov
pop
pop
jo
cld
xorb
pop
into
mov
add
or
add
and
inc
push
cld
femms
adc
shlb
dec
add
outsl
xor
or
iret
pop
sbb
add
jo
outsl
mov
and
add
pop
pop
sbb
fcoms
loopne
xchg
pop
push
iret
dec
mov
daa
and
lds
xorb
add
xchg
xchg
xchg
pushf
adc
adc
lock
sub
lds
sub
int
cmpsl
add
mov
fs
pop
add
rcrb
sub
jge
mov
pusha
sbb
cmp
or
popa
mov
jo
inc
pop
popf
inc
xchg
loop
jecxz
adc
xor
loopne
ds
jg
testb
xchg
add
and
icebp
add
add
int3
sbb
ja
subb
add
inc
xor
daa
lock
sbb
jl
shlb
dec
and
jecxz
pop
dec
orb
scas
and
bound
mov
out
cmp
jp
mov
ds
cmp
rolb
cmp
pop
pop
js
shl
push
cwtl
pusha
daa
add
rorb
adc
repnz
hlt
in
xor
sahf
stos
mov
dec
mov
dec
sbb
cmp
and
fs
aas
add
mov
xor
add
clc
or
call
pop
jl
xlat
adc
adc
daa
jno
ss
dec
shlb
or
out
push
add
xor
pusha
pop
dec
cwtl
mov
mov
out
or
clc
sarb
or
add
jmp
or
test
push
ds
je
mov
push
xchg
add
cmp
xor
scas
shrd
push
cltd
call
fmuls
inc
or
jns
cltd
movntq
out
inc
lret
popa
mov
fiadds
in
mov
xor
inc
shlb
and
shufps
add
popf
insb
clc
cltd
shlb
sbb
andb
push
into
call
add
daa
not
cmpl
push
mov
int
add
fmuls
add
add
ja
pop
add
jl
repnz
jge
jo
scas
add
lock
rorb
inc
clc
inc
fstpl
mov
cmp
addb
sub
inc
loope
inc
cld
std
mov
cmp
add
jne
push
adc
das
xor
or
fisttpl
adc
setg
dec
cmp
or
jge
loope
and
insb
ds
orb
and
stos
jo
ds
out
hlt
imul
adc
ret
test
add
push
cmpsb
arpl
cmp
sbb
inc
xor
verr
les
add
subb
mov
sbb
out
sti
xchg
into
pop
aam
lahf
cmp
xchg
icebp
pushf
cmc
sbbb
pop
cmp
enter
inc
in
sbb
mov
cld
scas
out
popa
push
rorb
pusha
push
xor
in
js
and
cld
icebp
sub
out
add
rcrb
enter
lret
cmpb
add
push
imul
lret
jo
add
push
stc
les
jecxz
add
in
sbb
repnz
out
push
mov
xlat
push
fadds
push
xor
clc
popa
sbb
jmp
out
ror
jo
shrb
loopne
add
aaa
stc
in
addr16
mov
loop
pop
xor
pushf
add
jnp
lds
jno
sbb
in
fwait
add
dec
aad
sbb
es
dec
add
into
dec
shlb
and
mov
xor
adcl
sbb
cmp
shrb
stos
pop
aas
add
in
stc
push
pusha
roll
ja
lock
xor
cmp
iret
test
xchg
sarb
mov
or
jle
mov
fsts
sub
test
fcmovbe
mov
jbe
rol
pop
fbstp
pop
push
fcompl
popa
es
inc
xor
cwtl
popa
dec
push
pop
and
add
add
sarl
shrl
push
shl
add
mov
movsl
inc
or
jge
inc
subl
add
pusha
or
or
mov
add
sti
orb
fcom
push
dec
xchg
sahf
pop
cmp
jle
data16
sub
pop
inc
and
inc
cmp
pop
adc
jge
and
cmpsb
add
jbe
repnz
pop
xchg
les
push
sub
cmp
clc
jne
stos
pop
in
sti
shl
fldt
lcall
clc
stos
test
pop
add
cmp
test
pusha
fdivs
sti
cmp
mov
negb
aas
or
and
adc
xlat
js
xchg
cmp
add
repz
dec
or
xor
add
xor
adc
mov
cmp
je
push
push
cld
inc
lock
popl
mov
int3
and
cmpb
cmp
ffreep
jmp
and
adc
aaa
mov
add
adc
add
mov
sbb
adc
nop
inc
out
icebp
loope
pusha
adc
mov
clc
addr16
push
stc
std
ror
add
popf
cmpb
leave
arpl
lock
jl
add
sub
ds
jecxz
cmp
cmpl
xor
repnz
out
push
pusha
js
sub
cmpsb
xor
dec
inc
in
cmp
dec
add
inc
ret
movl
and
loope
xorps
mov
lods
add
adc
bsr
bnd
sbb
push
rcrb
add
xchg
cmp
into
rorb
ret
add
addl
jae
adc
xchg
mov
pop
add
dec
shlb
test
cmpsl
dec
out
add
jne
mov
sbb
pushf
lds
in
add
enter
mov
add
jle
xchg
cmc
and
clc
mov
cmpsl
sub
clc
cmp
in
push
mov
ret
test
data16
or
sub
jo
divl
xor
pop
mov
mov
or
imul
fiadds
ss
jecxz
in
loope
lods
add
push
test
in
xor
adc
lret
sahf
orb
cmp
cmp
addb
fsubs
icebp
jl
movb
inc
push
pusha
mov
cmp
push
push
lock
rorb
cmp
addl
fmull
cmp
or
adc
les
cld
add
out
sub
pusha
jl
jl
sbb
push
mov
add
out
loopne
iret
push
add
push
mov
and
or
lock
sbb
mov
mov
ds
loope
add
fiadds
stc
or
push
fdivl
subl
add
add
andl
inc
or
and
jno
add
add
push
xor
pop
add
in
add
or
sahf
fneni(8087
add
mov
daa
test
add
or
das
ret
loopne
inc
push
cwtl
sbb
mov
cmp
rcrl
adc
mov
inc
add
sbb
sub
loope
mov
xlat
and
shlb
add
add
pusha
add
add
imul
lret
or
enter
sbb
push
daa
dec
into
mov
scas
or
jnp
inc
push
add
dec
in
push
pop
adcl
xor
xor
pop
add
out
insl
roll
push
dec
sbb
mov
loopne
pop
fsubrl
cmp
add
imul
icebp
mov
or
js
repnz
rolb
xorb
and
jl
xor
out
pop
add
test
mov
nop
aaa
add
je
xor
jno
push
cmp
jl
dec
cltd
mov
jmp
dec
sub
loop
add
hlt
mov
mov
inc
adc
into
imul
inc
fidivrs
add
mov
loope
sti
mov
out
and
test
mov
bound
out
gs
add
push
lea
add
incl
xorb
fdivs
mov
mov
and
call
xor
adcl
call
add
sbb
add
scas
pop
daa
jno
ds
xchg
ja
add
or
xor
lock
xchg
dec
sbb
fbstp
add
mov
cmp
xor
leave
cmp
sbb
add
mov
jno
shlb
mov
dec
jb
add
dec
loopne
mov
add
out
sbb
mov
add
mov
mov
pop
lods
cmp
add
pop
mov
adc
add
addr16
add
cwtl
or
xor
stos
fucom
sahf
or
adc
addb
lock
add
jne
add
fadds
rol
bound
jle
mov
pop
jecxz
jns
clc
addb
scas
adc
push
or
add
adc
and
add
fs
ds
rcrl
ret
pop
clc
movsb
push
cli
rolb
out
lahf
sbb
cmp
call
adc
fcomps
pop
xor
add
sbb
add
jno
mov
mov
push
daa
notb
arpl
shlb
sbb
emms
mov
jg
cmpl
lods
es
xchg
setbe
incb
subb
dec
loope
add
les
adc
add
das
notb
aas
sub
inc
mov
dec
rclb
rol
add
pop
mov
pop
cmpb
mov
mov
fsubs
movb
jo
jno
sub
sbb
int3
cmp
mov
sbb
add
mov
addr16
lds
loop
adc
xchg
pop
movsb
add
add
mov
aaa
adc
arpl
sti
and
cld
mov
roll
add
add
add
sbbb
pusha
push
lock
ret
jl
cmp
es
pop
dec
pop
push
rolb
rolb
adc
out
xchg
lea
push
sbb
shlb
cmpsl
add
mov
popf
sldt
mov
out
loopne
in
lahf
and
pop
or
inc
push
icebp
mov
and
or
mov
and
pusha
dec
add
dec
add
lret
jo
adc
cmp
mov
push
pop
mov
sub
xor
inc
xor
jo
push
add
shrb
popl
call
gs
add
aas
jl
cmc
xchg
add
inc
insb
jbe
addb
ret
iret
sub
gs
inc
add
fcoml
pusha
pop
adc
shlb
clc
addr16
sarb
mov
mov
add
cmpsb
xor
push
mov
fadds
mov
adc
add
pop
sub
xchg
lock
and
mov
lds
pusha
xchg
jle
cmp
pop
add
loopne
pop
dec
add
mov
pop
dec
dec
sarl
ja
add
inc
or
add
clc
nop
inc
jae
cmp
add
sbb
mov
adc
cmp
jae
out
xchg
sbb
filds
cs
jbe
push
pop
pavgw
add
jge
loop
add
shlb
cmp
addb
js
push
in
insl
out
add
fwait
add
add
mov
js
push
fnstcw
dec
out
add
and
or
sar
pop
adc
or
mov
loopne
cmp
sarb
jecxz
xchg
mov
loope
mov
in
adcb
add
pop
std
jge
popa
add
jp
xor
or
mov
sub
inc
or
sbb
jnp
add
pop
ss
loopne
scas
or
inc
pop
mov
clc
dec
or
iret
ljmp
outsl
add
adc
shrl
daa
xor
popa
in
mov
add
xor
inc
repz
ret
cmp
push
vmread
loope
inc
inc
pusha
or
pop
mov
jge
push
xlat
or
loopne
or
xchg
add
orl
and
ret
es
jl
sahf
push
add
cmp
sbb
xchg
loop
movb
or
jp
xorl
add
pop
mov
fdivs
or
lahf
lods
rcrb
push
inc
addr16
adc
mov
pop
loopne
hlt
jns
and
sbb
js
push
cmp
and
scas
inc
lahf
shlb
cmp
lock
cmp
sbb
mov
and
adc
xchg
call
add
inc
loope
or
in
gs
add
mov
icebp
add
test
push
cltd
es
jl
sub
mov
loope
and
lds
add
insb
inc
ds
mov
or
add
and
xor
jge
add
loop
out
cs
fcoms
jl
adc
shlb
jnp
xchg
xchg
xor
push
lods
movaps
jg
xor
test
test
or
addr16
clc
push
pop
mov
push
push
je
adc
push
lcall
roll
jns
rcrb
stc
loop
cld
or
add
or
xor
icebp
jae
add
outsl
arpl
fsubs
sbb
sub
cwtl
iret
mov
add
xorb
cmp
add
cmp
in
add
sbb
mov
mov
jb
adc
out
in
push
push
rolb
js
bound
pop
fisttpll
rolb
lds
js
repz
ret
jbe
add
lods
sbbl
pusha
cltd
in
add
adc
cmp
test
mov
mov
add
fwait
das
rcrb
rorb
out
add
add
clc
leave
mov
pop
inc
xor
jno
pop
int3
repz
lahf
mov
sub
test
adc
out
lret
or
push
adc
mov
adc
jo
pop
movsb
stc
out
and
andb
add
mov
sbb
lcall
sbb
add
js
adc
mov
cmp
xor
pusha
adcb
xor
loope
incb
int3
xchg
icebp
test
pop
aas
push
adc
add
or
mov
addl
jne
repnz
pop
cmpl
loopne
inc
insb
jge
add
js
loope
scas
repnz
sub
add
divl
adc
xchg
test
addr16
xor
pop
cmp
push
rcr
out
nop
pop
push
adcb
testb
addb
add
pop
and
test
ret
cmc
in
add
jl
mov
mov
pusha
mov
out
js
cmp
nopl
jmp
and
sbb
mov
mov
nop
mov
test
push
sub
icebp
adc
outsb
sti
ds
xor
cmp
stos
xchg
mov
repz
js
xor
mov
fsubrs
loopne
jae
scas
adc
cld
sbb
mov
xor
or
cmp
sahf
clc
xchg
pushf
mov
lods
ret
lock
test
jge
add
mov
xchg
filds
or
out
in
pusha
ret
add
insb
rolb
add
sbb
and
loope
xlat
sbb
xchg
icebp
loopne
pop
pushf
stos
or
adc
mov
inc
xchg
pop
ffreep
push
orl
cmc
enter
jg
add
add
pop
mov
call
rcr
jge
and
cmp
incb
mov
lds
rcll
adc
xchg
push
pop
pop
mov
cmp
pop
xchg
das
fsts
add
cmp
shrb
je
inc
popf
add
jo
sub
mov
call
pusha
inc
xchg
cld
dec
add
add
and
inc
movq
add
out
pop
pop
jl
adc
pop
adc
mov
mov
iret
and
daa
add
or
push
or
sbb
add
add
iret
mov
popf
mov
icebp
xchg
pop
sub
shrl
fldl
xor
scas
adc
xchg
orl
jo
mov
shl
mov
pop
pop
ja
pop
test
das
inc
negb
clc
bound
mov
add
add
cli
cwtl
mov
mov
popa
sbb
ds
call
or
cld
test
cmp
push
add
jne
or
jmp
adc
or
imul
ds
lret
cmp
sub
jecxz
sub
rorb
stc
mov
pushf
add
arpl
fnsave
mov
pushf
xlat
outsl
add
sub
loope
out
xchg
fstpl
push
mov
cli
es
cli
stos
ljmp
push
loope
je
call
jmp
hlt
mov
cs
das
andb
jnp
out
mov
add
push
inc
jp
loop
in
dec
lret
push
sbb
xor
sahf
sub
pop
sbb
inc
lahf
push
jge
mov
roll
mov
loopne
add
lds
shl
orl
jo
jo
add
lcall
jns
add
sbb
cmp
je
test
sahf
inc
mov
mov
cmc
add
icebp
out
int
add
rol
and
and
daa
add
fs
and
in
add
sbb
add
pop
and
sbb
lock
insl
add
setle
ds
cmp
daa
add
stos
mov
add
jl
mov
sbb
sub
lock
add
jb
inc
cwtl
lods
aas
popl
js
pop
movl
dec
inc
repnz
loopne
jnp
mov
dec
add
xorl
xor
aas
xchg
add
sbb
mov
leave
sahf
les
cmp
add
jns
ret
mov
andb
pop
stc
and
mov
mov
pop
es
push
outsb
sbb
push
cld
sbb
push
test
push
js
add
xchg
les
lock
pusha
lds
ljmp
cmp
fildl
adc
or
outsl
lahf
jg
pop
cs
jecxz
mov
add
xchg
add
in
push
and
inc
mov
mov
jecxz
rorb
in
add
iret
push
out
sub
out
icebp
lret
cwtl
addr16
les
cs
pop
push
jle
xorl
xchg
sub
inc
movsb
addb
xor
jle
add
add
pusha
add
push
jnp
add
push
aaa
inc
call
movsb
add
jmp
or
iret
pmulhuw
mov
cmp
pop
push
fldcw
jo
mov
sbb
loop
fsubr
cld
lahf
inc
cmp
arpl
les
int3
xor
stos
shrb
ds
subl
jle
pop
pusha
push
inc
rorb
dec
nop
repnz
add
cmpsl
in
sbb
cltd
loop
or
repnz
xchg
cmp
rcrb
mov
iret
xchg
int
addb
dec
add
inc
popf
add
add
mov
in
dec
rolb
test
push
ds
js
in
jo
dec
dec
mov
loopne
add
push
or
pop
add
in
push
add
jecxz
dec
bswap
add
xchg
icebp
ja
mov
pop
jo
mov
cmpl
pop
imul
mov
repnz
add
xchg
filds
inc
ret
add
cwtl
aaa
adc
jmp
je
lock
icebp
lds
popa
ja
fmuls
jp
push
fs
sbb
jo
ret
loop
add
in
push
and
sub
adc
nop
xchg
loop
add
push
pop
pop
jl
fs
add
sbb
into
mov
add
inc
add
fwait
adc
in
mov
in
lock
add
sahf
daa
inc
cmp
sub
adc
hlt
pop
fsubs
jle
cmp
leave
adc
add
pushf
or
push
add
arpl
and
lea
dec
lcall
jnp
mov
ret
mov
test
flds
and
ds
add
js
mov
add
lahf
ss
addb
pop
rcrb
mov
push
into
les
xchg
jne
cltd
ret
shll
and
push
shlb
bound
dec
or
jnp
mov
add
adc
xchg
rcl
or
pop
loope
cltd
daa
call
add
cmp
xchg
add
cmp
jb
add
aas
push
stc
mov
rolb
xor
dec
rol
pop
jge
out
lods
clc
test
push
les
add
mov
roll
addb
daa
sarl
rcrb
hlt
movsb
add
add
fmul
add
cmp
and
add
xchg
sbb
das
cmp
xchg
sbb
aam
adc
adc
add
nopl
push
in
or
leave
or
jnp
rcrb
jle
dec
jae
dec
inc
sub
pop
add
push
mov
adc
test
btc
add
jb
outsb
dec
cld
and
pop
mov
rcrb
add
aas
mov
jl
or
sub
xor
into
or
sub
inc
ret
sbb
mov
add
enter
add
dec
add
aas
pop
xchg
call
arpl
push
xchg
pusha
sub
inc
pop
repz
sbb
repnz
cld
addl
inc
mov
cmpb
add
or
push
sbb
inc
xor
fbld
cmp
xchg
add
cmp
add
or
mov
mov
out
cwtl
mov
inc
into
sbb
out
pusha
or
imul
subb
sub
inc
xchg
lock
jnp
cmpb
jmp
scas
add
cwtl
push
addl
clc
mov
cmp
mov
jecxz
or
les
outsl
cs
adc
out
mov
addr16
xchg
roll
lret
and
cmp
cmp
add
mov
ljmp
sub
loopne
add
mov
adc
das
adc
push
xor
or
cmp
push
add
or
cwtl
adc
jo,pt
cld
add
sarl
sbbb
sarb
repnz
pop
add
hlt
mov
popf
movb
cmp
add
xorb
add
fsubl
add
lahf
push
and
call
add
dec
adc
sub
lcall
inc
cmp
sti
add
negl
xor
add
xor
fwait
pop
push
ficoml
add
cwtl
cmp
mov
sarb
cmc
sbb
insb
jb
lock
mov
in
xor
insb
not
es
push
cmp
mov
arpl
loopne
faddl
xchg
jae
int3
dec
ret
scas
or
xorb
sbb
pop
add
push
loope
mov
lea
int3
icebp
sub
jb
jnp
aaa
pop
inc
add
fwait
leave
imul
lret
cltd
pusha
cs
setge
cmp
inc
sbb
adc
push
jp
push
add
sbb
shl
cmp
add
cwtl
pop
adc
inc
inc
xchg
sbb
push
mov
out
addl
dec
popf
and
add
jl
call
pop
lds
ficomps
jne
mov
sbb
jbe
out
sarl
or
xor
sbb
jl
pop
aad
pop
push
jmp
das
and
mov
add
dec
pop
mov
push
cmp
mov
fmuls
mov
cmp
sbb
mov
add
and
jo
addb
xor
add
nop
inc
popa
mov
mov
sbbl
add
jb
cmpsl
jne
and
fwait
and
icebp
call
or
adc
loopne
or
add
loopne
hlt
into
add
add
fistps
out
enter
cmp
lcall
sbb
adc
and
push
ret
repz
sub
xor
sbb
aam
xorb
fildl
jbe
mov
add
xor
popa
inc
aas
or
jno
insl
sbbb
rcrb
cmc
mov
pop
ds
out
add
int3
shlb
je
jae
add
icebp
sub
inc
mov
addl
add
dec
cmp
ds
jns
adc
nop
xlat
push
xchg
xor
push
jecxz
and
and
add
js
in
mov
scas
adc
mov
ds
inc
mov
xor
fsubrs
add
and
out
jge
jno
add
shlb
in
cmc
add
mov
jno
sahf
movsb
jl
icebp
int
inc
push
lock
loopne
and
outsb
jmp
mov
inc
out
lods
adc
jns
add
lock
out
sbb
or
add
iret
add
arpl
dec
lahf
sarl
call
roll
xlat
clc
jo
add
outsb
mov
or
andl
push
out
sbb
cmp
scas
push
incl
cltd
mov
adc
pusha
sbb
sub
test
cmp
adc
jns
or
xchg
jo
adc
add
add
jnp
mov
mov
lret
jmp
repz
leave
mov
cmp
jns
inc
js
push
mov
cmc
push
and
mov
push
ret
jp
add
testl
mov
stc
cmpsb
loope
fwait
inc
or
int
out
push
sbb
push
es
addr16
add
xor
sti
dec
pop
enter
int3
cld
lds
lock
inc
pop
aas
inc
test
pop
add
xor
xor
add
js
pop
or
std
lock
add
pmuludq
pop
mov
inc
xor
fsubs
add
rorb
adc
std
jnp
loopne
add
pusha
push
fcmovb
orl
sbb
cltd
scas
fisttpll
push
or
xchg
daa
xor
xchg
xchg
mov
clc
pop
add
iret
and
dec
lock
loop
movl
les
inc
fs
xchg
rorb
adc
scas
add
js
jo
outsb
dec
add
fwait
pop
cmp
sbb
loopne
mov
mov
pop
sbb
jge
dec
mov
add
insb
push
inc
adc
jp
ret
add
outsb
insl
or
testl
xor
jmp
sub
jg
push
aam
or
or
push
add
icebp
pusha
out
cmp
mov
lds
les
xor
pop
jg
lock
aam
sbb
xchg
rolb
sbb
and
mov
orb
insb
fsubr
inc
ret
ret
fiadds
xor
cwtl
hlt
jnp
cld
pop
es
jle
add
jae
fincstp
push
jnp
lcall
add
jns
pop
and
icebp
and
cmp
shld
inc
ja
lea
dec
push
aam
rol
pop
push
jl
icebp
sub
jp,pt
pop
xor
rorl
test
clc
jecxz
add
in
sbbb
jne
jp
push
addr16
jns
mov
pop
dec
shll
mov
dec
mov
or
lods
loopne
inc
cmp
stos
or
es
and
jo
incb
pushl
cwtl
add
cmp
data16
ret
sti
sub
xor
cmp
jns
mov
lock
xor
xchg
and
std
fiadds
out
sbb
xor
cld
sbbl
ret
cmpsl
hlt
in
and
push
repz
inc
iret
cld
cmp
adc
sbb
testb
jge
arpl
sbb
cld
ja
cmp
push
cli
fcmovnb
inc
and
daa
repz
or
mov
lock
mov
or
filds
push
jecxz
sbb
loope
test
mov
hlt
cmp
jg
arpl
or
lahf
add
in
sub
movsb
movlhps
div
pop
loop
xchg
and
test
add
iret
call
ds
mov
cmp
ja
testb
clc
pusha
pop
cmp
cmp
adc
sbb
or
inc
pop
ss
jbe
push
fldt
int3
inc
jno
add
mov
cmp
push
mov
bound
mov
mov
les
iret
adc
xchg
loopne
inc
out
and
add
lock
fmuls
or
in
cltd
push
fisubs
dec
in
loopne
add
repnz
add
out
mov
shrl
ror
add
cmp
out
imul
or
mov
mov
or
xor
add
nop
xor
sbb
mov
jge
int
push
ljmp
jae
out
add
push
fsubs
jge
add
and
xchg
cmp
pop
les
or
adc
bnd
repz
das
rol
sbb
aam
jo
clc
add
test
sub
xchg
or
pop
xchg
mov
sbb
fmuls
pop
or
icebp
add
cmc
clc
addb
cli
cmp
leave
sub
cltd
lret
xor
outsl
ss
hlt
hlt
mov
int
xchg
roll
pop
mov
mov
add
sbb
jge
in
add
cmp
jne
ja
sub
add
dec
add
mov
inc
cmp
inc
mov
add
xorb
jno
jb
int
incb
cld
sbb
mov
push
inc
add
negl
add
fsubrl
sbb
pop
jl
fs
emms
aaa
jo
lock
add
jecxz
pop
sub
mov
sbb
xor
ja
jb
add
push
out
add
or
addb
insb
and
pop
push
sar
mov
jle
lock
xor
push
jnp
mov
xlat
xor
jl
jp,pt
adc
cmp
cmp
sbb
icebp
lods
outsb
in
push
ret
cli
mov
stos
add
shrb
loop
sti
xor
xor
sbbb
push
sbb
rorb
xchg
iret
out
lcall
loop
pop
roll
repz
js
push
das
rcrb
lahf
or
pusha
inc
mov
add
xor
loope
add
adc
rolb
scas
inc
out
jno
shlb
pop
xchg
adc
add
push
mov
sahf
clc
sbb
cs
pop
inc
addr16
adc
dec
jne
ret
int3
add
pop
add
and
imul
mov
sub
add
xor
clc
mov
adc
mov
sub
das
add
mov
mov
into
pop
pop
cld
push
shl
out
xor
mov
sti
stos
test
mov
test
ja
pop
jne
mov
shrb
add
add
xchg
loope
shlb
roll
adc
ret
inc
add
xor
ja
ror
into
cmp
pop
adc
mov
cmp
mov
neg
or
aam
fildl
xchg
orb
lahf
add
jmp
cmc
std
jg
dec
adc
mov
sbb
and
iret
daa
mov
pusha
out
std
cltd
add
ret
xor
add
mov
mov
adc
cmpsb
cltd
shll
or
pop
jb
xchg
and
icebp
sub
sar
lcall
jmp
and
mov
iret
xor
push
or
sarl
adc
add
add
fisubs
xor
jecxz
cmpsl
sub
addr16
js
and
call
xchg
cwtl
mov
adcl
lea
mov
je
add
js
xor
add
jo
sub
inc
adc
icebp
add
jge
xchg
loope
loopne
mov
push
push
shll
sbb
cs
mov
in
mov
rorb
add
cmp
loopnew
popa
subl
mov
add
lds
in
add
or
mov
pushf
inc
mov
add
cmp
sti
fdivrs
push
xchg
loopne
jmp
in
andl
shlb
inc
push
and
add
out
test
popa
push
cmc
jbe
pop
cmp
lds
jl
loopne
add
cmp
jecxz
cmp
push
iret
mov
sbb
icebp
nop
add
add
repnz
pop
or
mov
mov
sbbl
add
stos
xchg
adc
sub
fsubrs
pop
in
mov
repz
add
and
jb
xorl
pop
mov
idivl
loopne
cmp
jbe
in
scas
iret
orb
push
data16
push
stc
or
lahf
add
jmp
addb
and
loopne
cmp
es
mov
out
scas
lds
add
sarb
cmp
mov
pop
sbb
adc
push
add
xchg
or
sbb
add
lahf
jecxz
add
ds
and
jnp
cmp
out
xlat
lock
rclb
cs
dec
jne
nop
jo
stos
xor
lock
or
lods
lea
inc
add
xchg
dec
xor
sidtl
ja
ret
bound
in
jp
push
hlt
fs
pop
into
cltd
jmp
jo
cmp
jo
out
mov
loop
sub
data16
pop
xchg
adcb
jecxz
adc
aaa
jnp
or
popl
and
lods
ret
ret
inc
add
insb
in
stc
js
dec
or
out
cmp
push
cmp
jecxz
lahf
cmc
cmp
ja
mov
testb
into
shl
push
fildll
pop
lahf
sarb
xlat
xchg
add
xor
xchg
scas
mov
dec
addb
add
fdivl
add
cltd
mov
sbbb
mov
ds
testl
pop
movsb
inc
xor
pop
das
movsb
mov
inc
mov
mov
push
mov
test
adc
outsb
loopne
scas
adc
mov
mov
ror
js
push
or
jp
push
sbb
or
fcoml
add
sbb
mov
xor
es
fsub
js
adc
or
add
inc
jge
imul
sbb
adcb
aaa
inc
fistpll
xor
jge
loopne
jl
add
fisttpll
add
mov
loope
add
xor
dec
aad
add
psrlw
and
pop
mov
cmpb
jno
pop
es
ret
nop
sbb
jg
add
add
fsubrp
enter
pop
notl
lret
ss
addr16
pop
push
xor
pusha
mov
scas
outsl
mov
cwtl
repnz
push
movsl
daa
and
add
pop
jb
call
cmpl
addr16
sub
add
mov
fsubrp
add
pushf
pop
jg
mov
mov
add
sti
ss
rcl
add
add
js
xor
aad
sarb
pop
out
lahf
pop
dec
and
rcrl
movsl
sbb
decl
xor
ja
add
add
loopne
add
jmp
int
mov
sub
iret
and
mov
adc
inc
add
sbb
sbb
nop
cli
ror
xor
push
dec
ret
cmp
mov
shl
fs
xor
adc
shrl
add
adc
ja
bound
test
iret
dec
add
icebp
sbb
mov
pusha
cmp
jge
add
mov
or
lock
fisubrl
add
scas
test
add
jae
adc
in
in
imul
pushf
add
mov
aam
and
ljmp
insb
dec
or
cmp
pop
add
xor
adc
push
outsb
lea
nop
add
js
xorl
shrl
fs
sahf
adc
rcrl
rorl
or
or
cltd
les
adc
pusha
add
sbb
mov
jge
loopne
add
and
sbb
in
sub
add
cmpsl
inc
filds
test
xchg
jl
lock
mov
inc
pusha
sbb
cmp
popa
aaa
cld
int3
cmpl
sub
sar
add
testl
popf
pop
inc
cmp
xor
push
pop
out
add
or
ret
sbb
dec
sysret
jnp
rol
aad
adc
jne
dec
fs
pop
jo
add
or
sbb
mov
inc
pop
das
jl
push
jns
xchg
cmp
sbb
fbld
cmpsl
pop
fsub
or
sub
repz
sbb
inc
pop
and
testl
in
and
sbb
lahf
cmp
mov
sbbb
push
jb
jns
add
popf
out
mov
pop
bound
cmp
adc
stos
jbe
mov
out
test
dec
cmc
add
repnz
add
fs
cmc
push
adc
mov
repnz
cmpsl
adc
lea
out
test
shrb
inc
mov
add
movsl
shlb
xor
mov
jl
xor
clc
mov
fdivrl
arpl
dec
insl
clc
and
xchg
leave
mov
jne
add
and
sbb
aam
mov
sub
jmp
or
jae
mov
pusha
cmp
pop
add
sbb
cmovbe
xchg
mov
aaa
pushf
outsb
cwtl
mov
incl
mov
add
sub
xor
popa
push
lahf
jl
xor
inc
je
sahf
adc
push
icebp
pop
enter
inc
daa
pop
pop
adc
inc
jecxz
inc
xchg
mov
xchg
or
pusha
fisubs
cmp
flds
clc
inc
addb
js
fiaddl
shl
aas
outsl
pop
add
and
aaa
mov
or
cmp
test
mov
lock
loopne
add
xor
or
add
or
inc
hlt
popa
loopne
xchg
sarl
addr16
and
push
pop
mov
sub
sbb
in
cld
into
rol
jecxz
sbb
mov
cmp
sbbb
aaa
inc
push
xchg
add
add
push
cmp
lahf
fdivs
pop
rorl
jle
add
loope
xor
jge
les
sbb
ret
pop
and
ja
add
iret
loopne
lret
xor
jp
fidivrs
inc
sub
inc
add
sbb
clc
add
stc
mov
ss
scas
add
out
pop
in
xchg
jo
dec
inc
push
scas
lcall
cmc
or
loopne
pop
push
fbstp
hlt
addb
repz
inc
jle
fadds
in
outsb
in
push
dec
icebp
xor
add
cmp
orb
add
pop
data16
pop
adc
cmpsb
mov
push
mov
out
adc
lahf
xchg
loopne
xchg
jno
inc
mov
or
out
add
cmp
rcrb
mov
ret
orl
out
add
mov
fiadds
pop
jae
add
lock
repnz
fidivrl
add
negb
adc
add
add
scas
loop
cltd
aas
or
cmpsl
imul
sbb
fisttps
mov
rorb
xchg
adc
punpcklwd
shll
push
inc
into
and
test
enter
decl
enter
add
cmp
inc
call
jb
pop
xchg
xor
dec
mov
inc
sbb
aas
es
popa
mov
mov
dec
das
mov
jg
xorl
jne
into
add
jo
cmp
add
repz
daa
enter
add
jmp
mov
or
movsb
pop
cmpsb
add
or
imul
ljmp
cmp
repnz
lcall
jo
dec
aas
inc
cmp
ljmp
std
sbb
xorb
push
add
popf
mov
cmp
inc
test
out
bndldx
adc
and
and
mov
jecxz
add
pop
or
add
stos
aas
xor
xchg
mov
cmp
push
pusha
sbb
aam
add
dec
loope
mov
int3
in
arpl
push
cmp
ja
pop
push
add
cmp
cmpl
xchg
add
daa
hlt
int
flds
cmp
js
pop
sub
mov
sbb
sub
push
mov
jmp
add
call
les
sbb
sarb
fcom
inc
adc
add
jl
cmp
push
test
in
les
add
popa
jl
data16
mov
in
push
lock
inc
add
or
inc
pop
cmp
cs
call
push
xorb
mov
pop
add
dec
cwtl
sbb
andb
dec
dec
ds
orl
inc
out
sahf
orb
push
aas
loope
adc
pushf
push
lock
jb
cmp
inc
mov
out
loopne
cmp
int
pop
adc
inc
repnz
popa
lock
int
xor
nop
pop
sub
pop
push
add
aad
and
inc
jb
cmpsb
andl
popa
sbb
icebp
jb
shr
xlat
andl
adc
shlb
lahf
xchg
rorl
scas
pusha
jno
add
ret
sarb
repz
in
subb
es
jp
movsl
mov
cmpl
xor
and
imul
rclb
out
add
dec
lds
orl
sub
mov
lret
add
repnz
or
add
add
adc
subl
loope
shll
add
scas
decb
inc
outsl
scas
daa
push
xor
test
push
mov
out
ret
or
or
loope
add
mov
add
enter
xor
add
mov
sahf
cmp
shl
mov
lods
inc
xorb
dec
aaa
add
fmull
mov
mov
add
bound
add
mov
ds
in
lret
sbbl
daa
xor
sbb
cmp
and
and
movb
jb
pusha
mov
add
scas
mov
xchg
add
test
inc
arpl
push
pop
addb
inc
push
and
add
fst
shlb
push
pop
or
lret
cmp
ret
sbb
jae
inc
pop
dec
bswap
push
mov
push
mov
xchg
outsl
pop
mov
add
or
rol
xchg
xor
push
add
clc
pop
add
ss
enter
in
sahf
xchg
aas
out
push
push
sbb
sysret
lcall
in
testb
jb
cmp
mov
ss
pop
je
push
mov
mov
xchg
add
loopne
jns
push
adc
outsb
inc
push
iret
push
cs
add
nop
pop
rcl
cmp
sbb
in
lret
movnti
pop
stc
mov
jp
testl
xor
lahf
aas
adc
movsb
fldenv
jae
or
pop
loopne
ret
imul
add
fiadds
xchg
or
jno
ret
sbb
mov
inc
rorb
jge
sub
lods
jl
add
in
mov
mov
lock
lods
push
pusha
mov
pcmpgtb
adc
daa
push
push
sbb
add
pop
xor
add
cld
lahf
mov
roll
lods
add
popf
pusha
mov
push
mov
jne
pop
sub
xor
sub
loope
push
push
push
mov
movb
jge
hlt
popa
ret
xor
add
dec
push
mov
jp
outsb
sbb
pop
nop
jae
and
icebp
faddl
into
add
pusha
addr16
dec
insl
shl
fimuls
add
inc
and
popa
sub
jns
add
mov
cwtl
add
nop
sarl
add
loopne
and
cltd
sbb
jo
outsl
dec
hlt
mov
inc
xor
iret
or
add
ds
rol
les
repz
daa
pop
fcoml
cmp
jle
and
dec
pusha
add
mov
aas
push
mov
loopne
sbb
pop
xor
add
xchg
orb
jae
pop
shr
add
push
shlb
xchg
das
loopne
add
add
mov
ljmp
jmp
testl
pop
jmp
jl
mov
cmpsb
and
jb
cld
push
mov
jno
outsl
mov
add
shrb
mov
sbb
mov
push
add
pop
xchg
rclb
nop
cmp
and
xchg
and
jecxz
push
mov
push
outsl
pusha
je
and
inc
and
enter
scas
adc
cmp
les
hlt
ret
rcrl
out
pop
add
inc
test
push
icebp
repz
add
loop
xor
mov
and
cmp
add
jo
mov
push
js
push
sahf
ret
sbb
insb
sbb
jg
add
and
mov
test
jnp
add
ja
cmp
mov
test
test
jmp
cmp
xchg
ret
and
out
pop
push
fcoml
out
adc
shl
or
jl
js
mov
jno
out
nop
lock
push
adc
inc
and
loope
shlb
cmp
pushf
sbb
adc
rolb
ss
inc
inc
lahf
mov
shlb
mov
adc
mov
mov
jae
and
iret
adc
cld
jo
test
push
add
sbbl
pop
decb
pusha
or
mov
mov
xor
lds
add
outsl
test
andb
cmpb
loope
or
or
scas
mov
std
and
cld
test
xlat
adc
and
or
sub
push
ss
jo
daa
sahf
pusha
lahf
loop
sti
rcrl
jns
popa
add
cmp
std
lcall
add
aas
cmpsl
cmp
shr
jo
test
inc
inc
inc
scas
xchg
inc
pop
cmp
or
xchg
pop
scas
add
add
enter
jne
rcr
push
jo
mov
push
and
jge
add
lea
xchg
sub
jo
adc
adcb
or
add
inc
cmp
loope
frstor
jo
mov
ret
cli
add
dec
pop
psubb
pop
inc
add
add
out
add
cmp
inc
or
sbb
pusha
hlt
outsl
popa
xor
pop
popf
loope
out
inc
addb
add
cmp
sti
push
xchg
sbb
leave
inc
out
or
outsl
or
jae
ret
fcmove
add
je
stos
mov
pop
mov
mov
sahf
adc
fs
cld
mov
data16
adc
jno
pusha
mov
xchg
xchg
sbb
test
xchg
push
add
dec
mov
or
cmp
pop
add
add
pusha
lock
out
or
into
mov
add
push
pusha
out
rorb
scas
adc
js,pn
loop
vmptrld
fucomp
add
aam
push
into
pushf
inc
enter
cmp
push
pop
sub
aas
fldl
push
add
mov
jle
test
out
add
nop
adc
xor
sahf
add
jecxz
sar
out
fildl
cmp
clc
out
imul
mov
mov
xchg
popa
dec
test
loopne
sub
xor
adc
lcall
movsb
or
pop
popf
add
mov
inc
jns
and
rcll
popa
popf
add
adc
mov
loopne
pop
fmuls
sbbb
cmp
dec
loopne
stos
outsl
jge
ss
lahf
stc
cwtl
faddl
addr16
sbb
jnp
add
es
in
fisubrs
jno
or
loopne
xor
loope
or
clc
jno
add
adc
imul
loopne
mov
cmpb
dec
add
adc
inc
incb
pop
xorl
jae
add
cmpl
add
mov
ss
mov
adc
sbb
inc
inc
pop
imul
add
sub
rcrb
mov
int3
scas
or
in
popa
cmpsl
xor
out
jbe
or
jno
repz
sbb
movb
rclb
adc
cs
sbb
cmp
mov
dec
addl
pop
int
inc
pop
fsubrl
or
movb
lahf
addb
negl
add
mov
iret
jbe
or
or
cmpl
cmpb
inc
jne
add
xor
ret
dec
add
mov
push
push
push
neg
movsl
adc
dec
push
cmp
stos
pop
sub
add
push
and
xchg
jle
fmuls
cli
popf
or
adc
je
repnz
mov
pop
stc
xchg
dec
fwait
loopne
and
inc
clc
fistpll
sub
cmp
adc
push
cmp
ss
fistl
nop
mov
mov
js
add
out
inc
hlt
testb
add
add
insl
or
add
bound
dec
loopne
test
sub
loopne
push
mov
add
add
dec
sub
sub
jge
sbb
addl
add
xchg
daa
sbb
out
fs
add
add
loope
or
or
inc
stos
sbb
cmp
out
add
xor
sub
repnz
cwtl
mov
out
add
aas
add
mov
mov
or
enter
ret
shlb
jecxz
push
cmp
cmpsl
pop
mov
insb
and
push
add
pusha
adc
mov
out
mov
test
jmp
call
pop
jl
inc
add
repnz
ds
nop
stc
mov
loop
or
cmp
mov
adc
mov
popa
test
test
add
sbbl
mov
cmpb
sbb
sbb
push
popa
mov
push
rorl
imul
sbb
ficoms
aas
loope
add
int3
mov
ret
mov
xchg
jl
daa
icebp
in
loopne
addl
xor
clc
rol
sbb
pop
mov
mov
hlt
and
vunpckhps
add
in
les
cmpl
mov
add
sahf
das
xor
in
rolb
mov
into
cmp
test
push
push
add
pop
add
jl
or
add
pop
pop
cltd
orb
movups
sub
mov
ret
dec
out
pop
inc
cmp
and
out
add
lea
out
adc
push
sbb
lcall
out
mov
xchg
stc
sub
in
jo
add
pop
maskmovq
negl
sar
add
je
aaa
add
hlt
adc
add
test
aam
jg
sti
mov
xchg
cli
into
sub
xchg
mov
inc
cmpsb
xchg
sub
subb
test
add
mov
aaa
addr16
pop
mov
xchg
pop
out
fcomp
addb
aas
lock
sahf
lea
jl
or
add
ret
mov
jnp
pop
addr16
les
jecxz
aas
add
xchg
fucomip
cmp
jbe
scas
sbb
pop
addl
push
loopne
pusha
lods
outsb
shrb
in
add
cmp
xlat
sub
add
arpl
das
fistps
in
das
inc
out
popa
scas
pop
and
sbb
xchg
into
cmpsl
cmp
cmp
xor
jne
add
add
dec
mov
rorb
lock
add
insl
pop
mov
in
add
in
jbe
jo
aas
fists
add
mov
test
addr16
in
push
xchg
scas
movl
nop
lock
cmp
nop/reserved
sbb
jbe
xchg
sbb
das
xchg
ret
stos
shlb
xor
lods
inc
jb
add
inc
clc
mov
gs
jns
push
sbb
add
and
popa
or
lahf
roll
add
cmc
mov
dec
loopne
inc
add
xchg
pusha
push
pusha
rcrl
sbb
dec
jp
xchg
cli
outsb
add
mov
and
test
adc
arpl
pushf
movb
dec
pop
xchg
cmp
sbbb
data16
nop
xor
xorb
add
add
cmp
push
idivb
push
add
add
sbb
add
ret
jl
loope
test
aas
mov
jge
cmp
orb
push
adc
hlt
jmp
lock
je
sahf
inc
shlb
mov
xchg
fcoms
push
add
dec
pop
movb
sti
and
cmp
test
lock
xchg
dec
sarl
push
sub
push
and
rorb
shll
sbb
or
add
mov
add
in
ds
cmp
xor
insb
and
add
adc
mov
cmp
pop
add
ds
cmp
adc
test
mov
add
xchg
sahf
sarb
add
mov
ret
dec
mov
test
push
jp
pop
outsl
pop
sahf
cmpb
jbe
add
sub
mov
mov
stc
add
in
push
sahf
inc
movsb
and
cld
add
das
dec
cwtl
mov
in
sbb
sar
sbb
cmp
outsl
xorb
adc
clc
add
add
popl
push
pushf
mov
test
sar
add
ljmp
add
and
or
jnp
sub
xor
cmp
ret
ja
mov
lahf
lock
jge
lea
out
fwait
xor
adc
jno
xor
sbbl
xchg
ss
jbe
loopne
cmp
outsb
hlt
mov
js
xor
sub
popa
or
jne
inc
xchg
je
mov
pop
lret
xor
movb
sbb
adc
orb
inc
ljmp
mov
sahf
adc
or
sbb
movl
int3
adcl
or
and
push
or
test
loopne
jno
nop
push
cltd
addr16
test
sbb
ret
pop
stc
dec
icebp
mov
and
mov
aas
pop
dec
add
jmp
ret
push
or
rolb
cmp
dec
add
adc
mov
cwtl
xchg
add
jno
cmpsl
xchg
xchg
orl
add
cmp
fsubr
rcrl
sub
adc
dec
jge
jbe
jae
jno
add
add
pusha
mov
cmp
notl
sbb
cmp
xchg
cli
pop
mov
push
clc
add
daa
loop
sbb
push
dec
sti
sti
add
sbb
lock
in
xor
mov
addb
fdivrl
shrl
dec
mov
jl
add
in
jecxz
into
mov
stos
inc
push
pushf
addr16
rcrb
roll
push
test
pusha
js
pop
mov
aad
sub
imul
nop
enter
mov
subb
xchg
lods
movl
or
add
xchg
pop
mov
add
dec
lock
or
dec
mov
outsl
rcrl
inc
add
cmp
xchg
loope
xor
inc
jp
lea
into
cmpb
loopne
and
inc
or
push
mov
aas
push
cmp
inc
add
loope
test
sahf
in
andb
cmp
orl
hlt
sbbb
xor
rorb
jmp
fnsave
popl
orl
loop
hlt
mov
call
lock
ret
cmpsl
arpl
cld
nop
jo
psllw
les
subl
sbbb
cwtl
sub
aas
iret
clc
fwait
mov
push
push
jle
push
subl
pusha
lds
jle
add
adc
cmc
out
aam
jns
pushf
aad
lock
add
push
test
enter
add
xor
jmp
out
mov
jb
movb
scas
fdivs
addr16
sbb
and
jo
ss
int3
insl
in
int
adc
ljmp
sbb
and
dec
in
jle
phaddsw
ret
loopne
fisttpll
sbb
jno
push
hlt
pop
sbb
insl
ret
xor
sub
iret
test
insl
insb
or
add
fadds
lock
add
push
aad
lds
mov
aaa
andb
loopne
mov
cld
repz
loopne
adc
fwait
pop
dec
cli
xchg
js
fs
add
shlb
clc
xchg
fwait
rorb
loopne
add
or
mov
add
cld
pushf
ljmp
mov
test
pop
dec
add
nop
sbb
subb
lods
add
add
or
mov
sahf
or
incb
mov
pop
add
sahf
or
fwait
vpunpcklbw
xor
daa
mull
xorb
lar
sub
sbb
inc
popf
iret
add
push
orb
lds
pushf
sbb
and
and
cmp
in
je
add
jg
xchg
add
jecxz
clc
dec
cmpb
xchg
xor
cld
dec
pusha
out
sub
clc
push
sbb
insl
ret
imul
sbb
sbb
inc
lahf
push
mov
push
xorb
adc
cmp
fcomps
push
jecxz
add
in
adc
loopne
add
adc
jl
repz
stc
shll
add
paddd
out
pop
mov
call
rorb
fdivrl
cmp
mov
cmp
lds
push
and
jnp
cwtl
jge
iret
pop
inc
add
mov
sarb
mov
inc
lcall
lret
arpl
pop
addr16
add
sbb
mov
or
mov
add
jge
ss
jo
sbb
stc
je
clc
mov
add
or
iret
leave
add
sbb
loop
add
or
push
xor
dec
cmp
mov
inc
leave
pop
push
sub
incb
add
cmpb
mov
push
cmp
xor
orb
push
aaa
or
ret
or
xor
cmp
inc
inc
in
push
pop
pop
xchg
sub
sbb
xchg
sub
add
mov
xor
out
adc
mov
xchg
cld
xor
mov
cmp
pop
adc
rolb
or
push
cli
minps
lret
add
cmpsl
and
loopne
insb
jnp
jp
sbb
mov
sub
dec
sti
cs
push
adc
orb
xor
cmp
lret
or
cmp
add
pop
cs
mov
fadds
loopne
sbb
jmp
mov
pusha
adc
push
xor
sbb
push
movsb
sbb
cmp
out
and
or
and
fadd
pop
push
outsl
pusha
pushf
add
jecxz
sbb
enter
add
roll
or
fsubrs
add
imul
mov
sbb
mov
cmp
popf
and
xchg
mov
jbe
repnz
add
daa
jae
popa
into
or
and
push
orb
sti
aam
in
add
pushf
inc
xchg
repz
lahf
dec
jmp
push
sub
or
pusha
mov
dec
aaa
hlt
mov
adc
push
rcrb
fs
inc
pop
imul
lds
mov
push
and
adc
pop
nop
pop
add
out
inc
xor
or
cmp
add
cwtl
cmpsl
adc
push
ret
jno
or
push
aas
andb
lds
sbb
fadds
inc
popa
add
dec
cmp
mov
cwtl
lret
add
shl
cmc
rclb
clc
loopne
jmp
cmp
jo
pop
adc
xchg
int3
daa
aaa
pop
jle
mov
jo
push
loope
add
popf
jo
mov
popa
mov
fmuls
in
push
and
test
ja
inc
icebp
push
adc
loop
loope
stos
fwait
cmp
mov
cwtl
shl
insl
leave
out
repz
add
ficomps
daa
imul
push
xchg
rolb
test
pop
add
jge
rcr
shll
or
lea
add
cmp
aas
repz
mov
pusha
es
pusha
or
mov
repz
add
xchg
fsubr
jo
addl
cs
cmp
clc
add
dec
push
in
jmp
pushf
push
add
cmp
pop
jge
or
pop
pop
inc
adcb
fadd
mov
jecxz
loopne
xor
dec
add
pusha
sbb
add
xor
add
push
rolb
xor
out
es
ss
adc
xor
sbb
adc
into
and
add
push
fadd
xchg
lock
in
jmp
arpl
insb
jnp
adc
xlat
aaa
add
shll
sahf
xchg
setb
add
inc
or
mov
cmpsl
add
aas
adc
mov
xor
rep
jno
dec
add
in
add
cld
mov
add
mov
push
setp
inc
int3
adc
cmpsl
add
and
repnz
xor
jns
add
jo
roll
push
call
je
pop
add
sbb
add
add
mov
sub
adc
adc
movl
adc
ds
daa
sbbb
dec
and
mov
gs
sbb
popf
push
mov
rolb
mov
out
or
add
jecxz
inc
xchg
pop
aas
nop
popa
xchg
into
dec
scas
xchg
jae
lock
adc
and
add
test
jns
ljmp
mov
call
dec
cmp
sub
add
sub
cmp
shll
ja
xor
sbb
lods
push
add
test
sbb
ja
add
gs
pop
ds
inc
fadds
sbb
nop
mov
sub
add
cmp
pushf
add
or
jmp
clc
push
jecxz
add
xlat
sbb
add
xor
arpl
add
aam
xor
jae
repz
jo
imul
jl
or
inc
inc
jbe
repnz
xor
xor
sub
xchg
cmp
hlt
adc
dec
stc
jmp
flds
sbb
inc
cmp
jmp
xchg
loopne
leave
jns
fmuls
stos
sarb
or
adc
mov
sbb
sbb
cmpsl
vmread
add
push
stc
push
ret
cmc
pop
rorb
shl
lock
add
add
les
cwtl
inc
and
push
js
cmp
xor
lret
lret
leave
cmp
ds
loopne
jno
gs
mov
rolb
and
or
pusha
mov
shrb
add
movb
adc
jecxz
call
mov
push
subb
or
cmp
mov
sbb
xchg
push
outsb
mov
les
pop
ret
rol
mov
add
jp
mov
ss
lahf
add
cmp
std
xor
pop
in
fisttpll
and
lock
pop
repz
pusha
mov
movl
hlt
or
inc
add
jecxz
stos
clc
push
in
xchg
add
pop
mov
add
add
loope
add
rorl
ja
clc
mov
cmp
call
cmp
add
pusha
pop
mov
fwait
add
xor
xchg
cmp
hlt
jno
aad
pop
xchg
adc
or
es
mov
mov
lea
dec
add
inc
shld
fwait
movsl
das
adc
test
or
and
jne
and
shrb
and
and
inc
pop
fcoml
ret
pop
xchg
add
pop
add
sbbl
pop
xor
sbb
repnz
pusha
lock
or
mov
or
and
loopne
movsb
add
ja
pop
cli
or
addr16
cmp
pop
fildll
cmp
cmp
pop
pop
sbb
scas
xlat
add
clc
push
pusha
sbb
scas
or
jp
sbb
mov
cs
jmp
dec
into
add
cltd
xlat
out
jo
adc
adc
cmp
out
and
sahf
xor
jno
add
test
mov
add
imul
mov
dec
clc
push
jae
call
push
addl
rolb
or
popa
idivb
add
data16
shr
sub
add
loop
es
nop
faddl
out
cmp
push
xor
js
sahf
add
jno
cmp
adc
rorb
shl
cmpsl
cmp
mov
repz
andb
xor
add
out
add
mov
in
pop
and
fsubrs
push
dec
xor
jmp
dec
push
lock
js
add
xchg
ja
add
push
daa
jl
hlt
loopne
xchg
adc
or
jecxz
test
pushf
in
or
dec
hlt
add
cltd
cmpb
adc
cmpsl
add
mov
jl
les
loopne
and
add
sbb
lea
leave
push
sbb
lahf
or
jns
js
pop
loopne
sub
andl
test
out
mov
inc
inc
sbb
xor
jle
dec
mov
adc
in
cmp
sbb
xchg
adc
insl
cmp
fnstenv
xor
add
fcoml
mov
in
and
push
add
mov
mov
gs
imul
mov
jge
sub
stos
xor
sub
cmp
inc
pop
push
aam
addb
movl
repz
jo
sbb
test
xchg
xor
or
flds
xor
inc
or
or
or
sbb
dec
mov
push
sbb
lret
add
xchg
scas
xchg
sub
jle
cwtl
or
add
sub
or
adc
push
jg
add
sbbb
sub
add
test
sbb
push
push
ds
or
sbb
add
xchg
xor
pop
push
sbb
rcrb
push
popa
inc
enter
or
mov
xor
roll
ret
jecxz
jge
or
add
inc
test
aaa
test
add
cmp
rolb
sahf
sbb
push
ljmp
inc
les
sbb
mov
rcrl
jno
ja
pushf
inc
ds
adc
dec
and
cmp
cmp
and
repnz
lock
fs
pushf
inc
stc
dec
sbb
mov
ret
lock
adc
dec
cmp
inc
repnz
lock
pop
cmp
add
cmp
xor
cmc
or
lock
push
mul
cwtl
and
in
xchg
add
adc
or
and
setnp
out
jecxz
add
cmp
sbb
jmp
add
inc
les
popa
mov
icebp
or
jb
or
push
jbe
push
cli
pop
jns
pusha
sbb
mov
cmp
mov
xchg
inc
jge
mov
jg
and
cmp
push
testb
or
mov
or
xchg
push
loopne
mov
push
lcall
mov
dec
push
mov
movsl
notb
dec
lahf
push
cmovs
lods
cmp
push
pop
loopne
inc
add
hlt
add
mov
sbb
sbb
ds
pop
xchg
xor
jbe
cmpsb
movb
mov
rcll
pusha
mov
adc
add
lret
dec
inc
enter
or
je
inc
push
and
xor
cwtl
add
sbb
sub
add
push
aas
inc
mov
sbb
adc
push
jns
loopne
mov
and
sub
xor
xchg
pmuludq
jmp
push
popl
cli
xorb
inc
and
and
xchg
cmp
or
add
test
add
inc
push
xorl
add
push
shlb
and
sub
adc
testb
aam
inc
int
ret
xchg
cli
fs
in
xor
cmp
sbb
or
aad
push
add
add
insb
adc
add
mov
inc
jmp
xchg
pop
sbb
fidivs
push
add
xor
inc
inc
pop
mov
test
xchg
adc
dec
inc
out
jp
jno
mov
out
adc
repz
cmp
inc
lahf
xchg
shlb
dec
pop
dec
stos
add
mov
mov
in
cmpsb
add
lcall
mov
pop
cmpxchg
sbb
push
je
or
imul
arpl
test
test
test
push
inc
aas
add
in
inc
xchg
repz
mov
int
add
jp
xchg
aam
add
pop
in
adc
mov
add
push
xor
movsb
adc
mov
test
xchg
fimull
push
test
dec
insl
es
push
call
add
add
push
cwtl
add
popa
sbb
ss
or
adc
imul
xor
xchg
push
inc
and
ss
dec
pusha
aam
jmp
dec
inc
mov
int
xchg
push
pushf
add
xchg
xor
dec
sbb
lret
mov
dec
mov
das
mov
and
mov
sbb
in
pop
lret
jmp
mov
adc
or
add
test
cmp
stos
adc
adc
add
push
popf
add
mov
rcll
push
xchg
push
cmp
test
jp
mov
adc
cmp
stc
inc
cmp
cmp
adc
push
sub
xchg
or
rolb
push
sahf
xchg
inc
fdivl
and
jmp
push
fld
pop
pop
push
nop
or
cmp
push
jecxz
push
sub
sub
shll
mov
test
out
jg
mov
sti
add
xor
incb
or
cmovl
add
push
es
sbb
cs
push
in
sbb
mov
and
popf
dec
inc
sti
add
es
cmpsl
rcll
fadds
in
sbb
mov
adc
dec
fadds
add
xor
push
addr16
xor
cmovae
pop
call
sbb
add
add
addr16
xchg
adcl
adc
and
push
ss
pop
add
fldenv
and
mov
or
stos
cmp
aaa
sbb
outsl
shrb
sbbb
adc
mov
xor
dec
xchg
push
ret
cmp
imul
ss
jl
ds
or
test
jmp
nop
push
push
and
mov
popf
pop
movsl
repnz
addb
xchg
mov
mov
dec
jl
fiaddl
pop
aas
and
inc
lcall
xor
mov
adc
test
dec
jg
inc
in
jae
push
lcall
sbbb
dec
cwtl
xor
jbe
or
xchg
dec
xor
cmp
inc
and
roll
add
or
or
jle
lea
adcl
mov
imul
add
push
inc
in
sarl
cmp
out
mov
loope
or
add
lahf
cmpsl
popa
push
adc
ret
movsb
in
sub
mov
pop
pop
test
sub
rcrb
lods
or
mov
lea
ljmp
mov
add
cltd
test
xor
imul
cvtps2pi
test
aas
push
push
cmp
adc
aad
xchg
sub
pop
cmpsl
addb
adc
sbbl
sub
adc
cs
push
sub
adc
add
cmp
sub
aam
push
or
test
or
shl
insl
adc
ss
mov
mov
xchg
xorl
adc
cs
cmp
inc
and
aad
sub
push
pop
aas
or
xchg
jmp
sub
add
and
adc
sbb
sbb
add
mov
xlat
bound
push
cmp
dec
or
cmpb
or
jbe
sub
xor
jl
call
adc
xor
jb
invd
adc
push
or
jno
hlt
and
sub
dec
jle
push
xor
sbb
int
fsubrl
andl
mov
outsb
sub
lds
dec
mov
in
inc
call
jl
aas
push
lds
repz
push
or
inc
mov
jmp
and
push
sbb
or
dec
xchg
and
mov
push
xchg
cmp
cmp
push
sahf
ret
mov
sub
movsb
cmovb
cwtl
adc
sub
mov
dec
pop
cmpl
cltd
push
push
mov
pusha
scas
sbb
or
inc
adcb
bswap
jmp
shlb
mov
lds
sbb
js
stc
rol
aas
ss
xorb
movsl
inc
dec
ja
adc
push
nop
or
cmp
les
shlb
data16
or
push
jmp
cmp
cld
fisttpll
push
mov
xorb
mov
inc
dec
dec
xchg
bound
push
or
into
pushf
or
int
push
mov
lret
dec
insl
loopne
cmp
daa
jns
les
or
test
adc
sbb
inc
ffree
push
mov
aas
icebp
in
push
or
inc
mov
pusha
cmp
cmp
xchg
test
ss
out
and
aad
andb
dec
loopne
jno
xchg
ja
mov
or
cmp
or
add
loop
push
mov
pusha
dec
cmp
stos
icebp
sbb
nop
mov
mov
add
xor
out
xor
rclb
movsl
push
cld
push
dec
add
fldt
xchg
mov
roll
mov
addb
add
test
mov
inc
add
push
shl
xor
jb
push
adcl
gs
adc
and
repnz
add
and
inc
xorb
jo
and
sub
cmpsl
into
hlt
adc
inc
cmp
cmp
mov
adc
lods
and
inc
or
testb
decl
lods
loope
shlb
sbb
push
rcrb
sub
cs
and
mov
add
in
dec
lcall
sub
jne
add
mov
scas
mov
shlb
js
pop
imul
cwtl
mov
pop
les
xorl
push
les
dec
push
imul
inc
add
movsl
stos
cmp
pop
xor
aas
add
ds
inc
nop
addr16
ret
rdmsr
insl
cmp
mov
les
add
add
sbb
out
dec
and
add
pop
inc
xor
mov
mov
or
push
and
and
jb
subb
pusha
scas
xchg
add
mov
and
and
arpl
xorb
test
xchg
shrl
mov
pop
sti
mov
les
or
loopne
push
pop
push
sbb
xchg
adc
adc
leave
add
roll
mov
scas
jp
mov
mov
loope
xchg
push
sarl
xor
or
dec
and
insb
loopne
mov
jo
adc
fmul
cmp
inc
add
jmp
push
dec
in
jecxz
lods
xorl
popa
jge
add
pop
or
dec
ds
mov
fwait
hlt
mov
hlt
jecxz
add
push
fldenv
sub
inc
sub
test
cmovle
fidivl
jle
fmul
call
lds
addb
adc
and
hlt
add
and
test
add
aam
lock
stos
or
mov
or
mov
sub
and
push
mov
jmp
inc
jg
push
mov
mov
or
orb
lret
ret
xchg
cmpsb
adc
cmp
aas
daa
or
out
jp
imul
xchg
xchg
xor
and
or
ljmp
outsl
add
xor
sub
test
mov
and
dec
aam
popf
lods
sbb
push
test
ffreep
mov
push
lds
outsb
jge
mov
inc
push
cs
add
icebp
push
addb
mov
add
popl
aam
lock
int3
and
xor
ret
lret
and
test
lea
push
mov
nop
test
mov
sub
adc
test
jecxz
jne
cmp
and
andb
fwait
sbb
das
out
clc
xor
inc
bound
ret
fsubr
lcall
scas
pop
xor
in
mov
cmp
stos
sbb
ljmp
arpl
adc
sbb
loopne
test
outsb
in
ds
push
sbb
adc
rorb
fiaddl
fimuls
add
xor
shrl
xor
add
pop
inc
or
add
add
adc
loope
jb
out
adc
inc
clc
bound
je
arpl
sub
mov
push
addb
sbb
push
xor
xor
xor
scas
xor
pop
inc
jb
add
lea
inc
repz
cld
lahf
and
insl
pop
add
test
xor
xor
adcl
shll
fisubl
in
inc
jbe
call
cmpsl
test
push
add
push
push
push
inc
add
xchg
sbb
mov
pusha
xor
test
mov
add
inc
push
daa
push
cmp
add
sbb
in
jns
andb
fsubrs
mov
mov
lret
shr
adcl
dec
push
sahf
mov
orb
inc
ror
or
jb
jne
sub
jge
or
pcmpgtd
addl
mov
clc
adc
jns
jno
cli
pusha
cmp
add
mov
mov
and
push
cwtl
pop
dec
add
and
sti
popa
jl
cltd
sub
push
outsb
mov
cmpsl
add
roll
ret
stc
mov
add
xlat
imul
add
jge
dec
add
xor
insl
or
jle
popf
push
fcmovbe
leave
cmpl
xorl
test
imul
dec
cmpsb
subl
sbb
xchg
add
pop
outsb
mov
or
xor
shl
sbb
add
ss
sub
push
lds
lods
ljmp
cmpsl
adc
cmpl
add
mov
aas
outsb
dec
adc
jne
cmp
push
popf
movsl
mov
fs
add
fnstenv
push
adc
or
test
shlb
sub
mov
pop
cmpb
aaa
or
push
stos
jbe
mov
and
or
rcrb
ret
and
cwtl
add
add
xor
shll
stos
add
add
stc
test
sbb
mov
cs
xor
adc
mov
movsl
push
or
sbb
add
insl
cmpb
loopne
push
fldl
cmp
test
out
xor
sub
js
movsb
add
mov
adc
out
xchg
mov
insb
inc
push
add
adc
inc
add
ljmp
xor
adc
stos
roll
pop
sbb
pop
inc
pop
and
sbb
add
push
cwtl
mov
lea
dec
test
inc
and
xor
filds
or
out
and
jo
addb
je
jl
pop
sbbb
xchg
mov
sub
push
add
jns
dec
sbb
push
xor
insl
jb
jl
sbbl
push
inc
push
push
pop
pushf
xchg
mov
push
loop
mov
sub
mov
dec
cli
or
dec
pop
push
add
xor
cwtl
add
and
sub
add
mov
outsb
push
inc
and
sbb
mov
out
and
in
pop
add
inc
add
mov
bound
cli
add
sbb
or
rorl
sub
inc
mov
or
je
ja
dec
mov
mov
adc
jecxz
add
sub
add
add
mov
and
test
cld
inc
xor
mov
sub
loop
sbb
pushf
mov
push
pop
les
jp
or
in
mov
adc
es
shrb
shld
in
dec
push
or
shrb
push
inc
dec
daa
pop
add
sbb
lock
mov
and
dec
in
adc
loope
mov
mov
pop
push
adc
mov
je
adc
mov
push
adc
xor
lods
push
jne
shlb
cmp
movsb
fisubrs
andb
int
into
int3
jns
mov
xchg
sahf
push
push
stos
xor
mov
and
mov
movsb
pop
add
popa
lds
sarl
push
js
adc
dec
aad
adc
or
mov
popa
add
rclb
mov
add
pop
inc
mov
hlt
dec
sbb
push
test
xchg
mov
pusha
push
mull
inc
repz
popf
mov
mov
hlt
or
cwtl
rolb
mov
into
adc
mov
mov
dec
jecxz
and
aam
test
and
rcrb
add
inc
cmp
push
xchg
les
fstpl
cld
jge
push
mov
xchg
sub
pop
ret
loope
mov
imulb
lock
xchg
and
sub
cmp
lret
add
jle
lret
mov
and
scas
shr
pop
dec
dec
lods
and
add
adcl
push
push
sbb
inc
mov
pop
mov
add
mov
push
jge
add
lea
rcrb
flds
insb
pinsrw
nop
pop
clc
jae
adc
popa
xchg
cld
xchg
shrb
pusha
stos
hlt
ljmp
add
shrl
xor
ret
adc
dec
clc
pop
rorb
popa
jle
adc
push
les
inc
addl
jo
sub
or
adc
mov
add
xchg
or
arpl
pop
mov
xor
push
push
mov
loope
adc
les
mov
pop
or
and
add
jecxz
test
mov
bound
or
dec
adc
xor
adc
push
mov
push
enter
add
int3
and
push
outsb
or
cmpsb
sbb
dec
push
call
and
add
xor
rcrb
add
dec
dec
mov
cld
mov
inc
jge
cmp
add
xchg
adc
sbb
jmp
push
js
bound
cmpsl
notb
jne
pop
cs
cmp
and
push
pusha
lds
cmpsl
out
popa
xor
and
sbb
sbbl
lcall
and
popa
add
xor
enter
shrl
test
leave
xchg
dec
loop
cmp
sbb
jno
push
pop
sub
ljmp
inc
mov
pop
in
add
fsubs
or
addl
xor
enter
movsl
pop
mov
add
pop
xchg
sbb
pusha
ja
bound
pop
xor
add
mov
loop
jbe,pt
push
iret
ret
movsl
mov
nop
stos
push
add
pop
pop
cmp
add
or
cmc
or
and
sbb
xor
push
in
aas
sahf
push
jmp
rcrb
cli
pusha
test
bound
jle
add
and
pop
out
add
and
or
incl
movsb
sbb
sub
or
sti
pop
adc
mov
fs
and
loopne
cs
test
or
adc
vmovhps
inc
inc
imul
sbb
xchg
scas
xor
dec
sub
and
dec
xchg
add
add
stos
or
jbe
sbb
xor
and
imul
or
inc
repnz
jno
sub
sbb
add
movb
push
sarb
or
push
and
or
push
mov
mov
dec
xchg
loope
mov
mov
xor
or
sub
shrl
testb
test
out
jne
mov
mov
cmp
jle
aad
cwtl
mov
and
sbb
xchg
fucomip
fisttps
mov
shll
pop
fimull
xchg
movb
add
repnz
shlb
sbb
push
shll
or
push
sbb
sub
test
or
xchg
cmp
rolb
adc
jb
js
out
pop
sbb
int
jge
sub
push
mov
sti
mov
add
loop
add
push
stos
xor
sahf
lods
cmp
lcall
movsb
push
sbb
es
imul
js
cwtl
fisttpl
nop
and
rol
pop
adc
sub
dec
sbb
sbb
mov
inc
mov
jo
in
in
int
pusha
std
xor
add
xchg
in
mov
fistps
pop
arpl
pop
push
call
cwtl
rorl
adc
fwait
lret
movsl
ret
inc
loopne
add
shr
pop
add
pop
add
cli
adc
pop
jg
loope
dec
into
sbbl
cmp
sets
mov
mov
shl
adcb
ja
push
ret
rcrl
mov
add
subl
xor
popa
sub
rclb
inc
sbb
xchg
xor
fs
mov
ret
rol
movsl
mov
and
push
pop
or
nop
mov
or
outsb
add
push
mov
jno
mov
add
outsb
test
jo
cmc
xor
mov
adc
or
sbb
push
sub
jg
mov
pop
push
pusha
dec
mov
add
pusha
dec
xchg
sub
leave
rolb
or
add
mov
add
sub
xchg
das
and
push
outsl
or
and
xchg
popa
mov
fiaddl
inc
mov
mov
xor
or
inc
pusha
in
mov
fadds
mov
hlt
xorl
jle
or
and
sub
sub
ror
cmp
push
lods
and
pusha
xchg
and
push
sbbl
loopne
lret
or
aam
addb
je
xchg
add
dec
lock
mov
jle
add
add
aam
lds
xor
filds
mov
push
xor
dec
add
inc
inc
pop
push
adc
sahf
inc
loopne
xchg
pusha
subl
stos
mov
cmp
sbb
pop
push
fsts
inc
lea
push
test
jae
sub
add
adc
adc
daa
cmp
addr16
add
ds
pinsrw
mov
and
sbb
shlb
push
cltd
sbb
adc
mov
stos
rol
mov
cmp
sbb
pop
sub
add
add
push
cltd
sbb
xor
sbb
pop
add
mov
cmp
shlb
add
xchg
jecxz
pop
insl
xchg
push
push
push
or
xor
add
in
outsb
ret
lods
adc
sbb
pop
mov
adc
add
in
xor
and
jne
add
push
add
adc
rcl
push
adc
pop
or
shlb
cltd
inc
cs
and
sub
fimull
test
lods
xchg
add
cmp
cld
imul
add
enter
hlt
rclb
popl
mov
or
lahf
and
push
dec
mov
gs
adcl
dec
mov
and
mov
add
hlt
sbb
xor
inc
and
jo
pushf
adc
rsqrtps
lock
and
dec
inc
inc
mov
and
xor
mov
xchg
adcb
addb
mov
or
jno
dec
push
pop
add
adc
movsl
and
aad
repnz
je
fs
sysret
dec
xor
pop
or
mov
add
pusha
movsb
jge
call
push
mov
mov
nop
fadds
popf
xorb
add
in
dec
or
dec
push
or
sub
inc
or
and
add
push
mov
push
clc
inc
inc
sbb
xchg
push
aas
add
mov
rolb
jnp
add
inc
cmpb
or
jge
mov
add
mov
shl
sub
or
jle
mov
ret
setae
push
aaa
ss
mov
in
jnp
cwtl
xchg
jns
nop
or
nop
les
popa
test
cli
and
cwtl
adc
add
inc
lret
pop
adc
test
outsl
lock
add
mov
cmpb
movsb
sbb
push
in
adc
sub
jmp
mov
add
sub
aas
xor
or
add
addb
movsb
ror
pop
push
cmp
pop
lret
test
aad
insl
ret
mov
bound
aad
les
mov
mov
mov
pop
or
cmp
add
insb
and
pop
les
jo
push
push
mov
ret
clc
cmp
cmp
dec
sub
jo
mov
add
xor
addl
aas
les
add
sbb
lahf
adc
add
cmc
xorb
sarl
mov
pop
in
insl
pop
push
add
or
and
inc
out
es
pusha
pop
lret
add
jle
and
cwtl
xchg
add
sbb
mov
das
fisubrl
scas
arpl
sbb
and
lds
inc
push
add
xor
inc
shrb
adc
sti
inc
sti
lea
dec
mov
adc
fdivr
sub
push
dec
fdivl
add
xor
in
mov
cmpl
add
out
sbbb
sub
sbb
cmp
xor
pop
pusha
adc
inc
pop
sbb
andb
mov
in
lret
or
sbb
js
dec
adc
and
int
sahf
inc
push
push
mov
or
icebp
adc
sbb
add
and
inc
dec
pop
jl
or
or
push
xor
adc
ret
mov
mov
into
loope
ss
add
dec
pop
je
int3
jl
hlt
push
pop
push
mov
movsb
and
or
adc
lcall
div
mov
add
insb
mov
inc
pop
and
and
xchg
sbb
aam
mov
and
inc
and
sub
jno
cmpsb
cs
cmp
add
inc
xchg
sub
dec
pushf
mov
mov
jmp
sbb
add
push
popa
sbb
or
les
push
cmpsl
ja
pop
push
cld
add
xchg
pop
mov
orb
mov
insb
popa
jl
cmp
add
mov
inc
movsl
mov
pop
cmp
or
loope
or
pusha
sbb
inc
and
mov
adc
dec
add
push
imul
inc
enter
pop
or
xor
repnz
adc
pop
push
pop
mov
xor
add
add
pop
rorb
les
mov
mov
lcall
sub
sub
or
adc
add
ret
cmp
sahf
mov
pop
or
add
adc
adc
rcll
sbb
rolb
xchg
dec
push
bound
add
fwait
mov
dec
out
xorb
and
ret
leave
xor
inc
add
jmp
cmp
test
sub
adc
jo
xchg
pop
mov
enter
cmp
mov
jno
hlt
testb
push
inc
adc
sub
lods
mov
les
sbb
movb
add
sbb
stos
fadds
leave
inc
pop
loope
xchg
or
outsl
clts
inc
gs
push
xchg
insl
dec
sub
pop
jmp
lock
add
in
lcall
stos
fdivl
mov
sub
out
push
or
sbb
jl
mov
mov
out
and
mov
lret
bound
enter
add
sbb
arpl
or
js
mov
add
je
icebp
push
add
push
add
pop
xor
dec
hlt
xor
dec
clc
adc
nop
adcl
sub
xchg
cs
adcl
jns
push
lret
ret
iret
lea
push
cmp
dec
or
xchg
out
or
cmp
orb
or
pop
hlt
clc
testl
nop
cmpsb
add
add
and
inc
inc
mov
sarb
int3
push
mov
fadd
and
call
subl
push
fisubl
mov
sub
es
imul
xorb
nop
add
jge
test
and
add
loop
add
insl
cmp
pop
test
ds
or
xchg
leave
mov
push
into
sub
inc
popf
push
loope
je
mov
add
and
sbb
mov
inc
dec
pop
aas
mov
cmp
and
pusha
inc
add
cli
mov
sahf
mov
sub
divl
xor
adc
mov
mov
lahf
outsb
int3
cmp
add
int
and
pusha
or
dec
ljmp
mov
cmp
incb
xor
imul
shl
rclb
or
jg
movsb
nop
dec
decb
add
popa
xor
fadds
push
add
mov
jecxz
lock
cmp
popa
imul
and
and
gs
add
in
mov
jo
ss
mov
xor
or
addb
loope
shll
add
ret
ds
dec
adc
sub
mov
shlb
push
rcll
js
bound
jo
test
push
ffree
incl
inc
or
mov
sbb
inc
inc
adc
in
test
orb
push
pop
or
stos
cmp
add
xchg
lods
and
arpl
or
dec
cmpsb
lret
pop
inc
test
sbb
xlat
mov
scas
jb,pn
stc
xchg
push
shlb
fsubrs
sbb
pop
and
add
mov
push
rorb
or
shlb
icebp
mov
subb
and
add
xorb
imul
push
fnstsw
sarl
mov
addl
es
push
testl
adc
add
test
jo
push
cmpsl
loop
sbb
jmp
adcl
xchg
sbb
or
add
push
adc
xor
nop
daa
push
lods
add
adc
push
pusha
out
add
addb
push
xchg
shrb
and
mov
sbbl
insb
adc
add
add
andl
pusha
inc
jo
dec
add
shll
pop
dec
sub
dec
call
cwtl
rorl
mov
push
sub
cli
call
mov
mov
aam
scas
stos
mov
adc
mov
pop
push
aam
pop
xor
push
sbb
inc
dec
jl
mov
loope
mov
mov
test
loop
add
out
adc
pop
enter
inc
mov
lds
pop
add
icebp
cmp
adc
popa
loopne
inc
dec
xor
adc
push
imul
pop
adc
scas
xor
adc
sbb
ds
push
out
mov
xor
inc
stos
scas
rcl
pusha
test
out
jecxz
mov
xor
add
inc
call
mov
xorl
cltd
pop
leave
xor
sub
sub
pop
cmp
mov
inc
into
rcrb
movb
inc
jnp
cmpsb
push
cltd
and
xor
mov
ficoml
flds
and
movsl
std
xor
jne
clc
dec
sub
inc
xor
push
fldl
nop
scas
pop
push
add
imul
data16
jne
or
mov
dec
add
add
add
cli
and
lods
and
or
add
test
add
and
lds
adcb
sbb
push
or
mov
in
mov
or
push
adc
or
inc
test
sbb
or
shl
xor
fiaddl
or
inc
adc
mov
push
sahf
sub
ss
mov
mov
jb
rclb
pop
jnp
and
cmp
in
jae
shlb
lret
and
aas
mov
adc
out
adc
cmp
and
jnp
and
push
jbe
adc
sbb
ja
sbb
fadd
aam
orb
jmp
pop
mov
xor
test
or
mov
insb
ficoms
adc
loopne
add
in
xor
scas
mov
xchg
in
mov
pushf
xor
mov
push
cmp
lcall
pusha
cmpsb
or
or
loopne
xchg
add
add
cmp
sbb
orb
sub
jmp
aas
dec
push
adc
cmp
ret
cmp
add
xor
push
cli
and
push
mov
lock
sbb
mov
push
add
sbb
addl
inc
add
add
adc
in
mov
sub
xor
and
in
in
sbb
das
jb
pusha
pushl
inc
sub
rolb
roll
loop
mov
cmpsb
leave
cmp
add
sbb
adc
pop
andl
add
in
pop
cmpsl
add
mov
push
dec
lods
or
lret
jb
cmp
and
sahf
das
mov
xchg
mov
negl
inc
add
jb
loope
and
dec
or
mov
inc
cmp
je
and
pop
in
push
push
loope
fdivrp
rcrb
sub
roll
inc
inc
cmp
xor
add
push
cli
mull
jo
ror
imul
pop
mov
dec
xor
push
adc
add
mov
xchg
add
xchg
pop
cli
in
movl
jo
mov
or
push
hlt
ja
negl
cli
add
ret
subl
dec
stc
divl
leave
sahf
int
gs
cmpsb
aas
and
push
mov
cmp
jno
out
pop
popa
cmp
dec
add
sub
fidivl
adc
or
xchg
sub
or
cmp
adcb
or
loopne
lcall
dec
pop
hlt
adc
je
dec
dec
adc
sbb
adc
add
push
add
stos
add
shrl
inc
outsb
sbb
es
andl
sahf
loop
and
xchg
es
adc
cmc
pop
ret
fmuls
cmp
and
lcall
ljmp
movsb
xorb
adc
lret
push
xchg
dec
loopne
add
les
jo
pop
lds
in
shl
mov
jge
gs
mov
inc
pop
inc
push
and
sbbb
dec
add
and
addb
lret
push
sbb
mov
push
sbbl
xchg
cbtw
cmp
cmp
bound
adc
mov
cwtl
stos
pusha
mov
pop
xor
or
pop
arpl
mov
orl
xchg
mov
mov
and
popa
pop
lock
dec
out
xchg
mov
xor
add
shrb
nop
inc
or
or
ret
jbe
mov
popa
rorb
or
mov
add
dec
mov
and
mov
int3
out
mov
mov
mov
test
mov
add
es
call
jnp
mov
mov
int
out
add
or
adcb
or
or
js
loopne
adcb
fmull
dec
pop
sbb
sahf
push
loope
add
int3
inc
xor
int3
push
jp
shufps
push
xchg
push
lret
xor
out
and
dec
jno
les
inc
fimull
mov
lret
popa
jb
xchg
add
mov
popa
clc
inc
cli
jl
and
addr16
ja
adc
js
xor
xor
xchg
lea
push
mov
movsl
xchg
mov
fildl
add
mov
movsb
mov
ss
xor
xchg
test
mov
jne
je
and
bnd
hlt
push
mov
push
rcll
add
mov
xchg
xor
dec
mov
jmp
jne
dec
hlt
push
cwtl
xchg
add
rcrl
cmp
or
xlat
and
add
loopne
imul
mov
fbstp
clc
mov
xchg
xor
push
add
ds
and
loopne
in
adc
xorl
adc
cmc
lea
xchg
add
mov
idiv
test
lock
or
loope
rolb
and
sub
leave
cli
cmp
or
es
jg
mov
push
repz
mov
rorl
jmp
add
xor
dec
add
sbb
push
shll
insb
and
sarb
lds
push
lock
push
xorb
push
or
daa
add
and
adc
cwtl
cvttps2pi
leave
adc
call
loopne
ret
and
jo
add
inc
adc
test
add
dec
add
xorb
dec
mov
out
leave
pusha
es
xchg
shlb
rorl
movups
xorl
or
fnstsw
or
add
or
xchg
xchg
popa
fstps
addr16
adc
pop
jb
or
dec
ret
incl
push
pop
xor
or
test
pop
inc
clc
pushf
and
mov
jmp
fcoms
mov
pushf
testb
call
mov
lret
mov
add
mov
adc
add
stos
jmp
jae
sbb
dec
arpl
or
dec
cmp
dec
inc
add
aaa
or
mov
mov
push
lcall
add
jle
or
sbb
imul
es
mov
pop
daa
fidivl
mov
repnz
and
cs
dec
pop
or
in
push
add
push
nop
les
in
mov
inc
loopne
dec
into
add
arpl
add
inc
shrb
jg
movsl
adc
mov
jns
syscall
sub
adc
mov
sub
daa
jl
cs
add
adcl
cmovge
neg
inc
fs
fiaddl
adc
int3
mov
xor
and
in
or
mov
in
and
jno
push
add
adcl
fisttps
clc
loopne
inc
repnz
sub
adc
adc
aam
fmuls
lods
and
mov
push
xor
push
pop
clc
rolb
dec
ljmp
mov
mov
push
jo
daa
jnp
aad
push
cld
inc
xchg
movsb
or
and
add
dec
icebp
addl
dec
jle
movsl
int
cmp
push
add
gs
aas
mov
cmc
pop
jecxz
mov
push
in
dec
notl
push
or
arpl
incl
sub
cmp
mov
cld
ret
add
and
pushf
xor
fcos
pusha
cmp
xor
push
inc
mov
mov
test
and
subl
xchg
loop
mov
aas
sbb
nop
dec
or
lock
sarl
cwtl
xor
jno
into
inc
or
and
push
xor
push
xchg
sbb
adc
inc
jmp
ljmp
add
andb
and
push
mov
sbb
je
xor
fnstcw
sbb
loopne
mov
ret
inc
mov
add
cmp
popa
fisubl
inc
lods
movsb
push
dec
push
mov
fcom
add
les
xchg
xor
pushf
rclb
inc
add
shll
mov
dec
inc
jae
jle
sbb
xchg
pop
insb
xor
adc
call
cmpsb
add
sbb
jbe
ret
adc
add
xor
inc
or
inc
or
push
and
adc
dec
inc
ds
stos
rcrb
out
jns
inc
addb
insb
addb
add
adc
cmp
inc
add
add
das
inc
test
cmp
sbb
adc
arpl
mov
rolb
and
dec
sub
sub
dec
rorl
mov
and
das
pop
and
cmp
mov
cwtl
in
inc
test
test
andb
push
dec
sti
cmpb
push
rcrb
enter
cmp
mov
lcall
push
sarb
xchg
pusha
push
cmp
mov
roll
iret
cs
popa
mov
adc
mov
jbe
dec
add
xchg
dec
sbb
js
sub
in
push
mov
jl
jbe
cmpsb
adc
or
sub
roll
and
xchg
sub
aad
add
cli
loopne
imul
mov
cwtl
sub
mov
call
push
mov
xor
aam
or
inc
and
stos
mov
add
push
push
das
popf
loop
cwtl
dec
repz
mov
add
push
sub
inc
mov
enter
nop
pushl
cmp
push
add
push
add
clc
inc
xor
dec
inc
pushf
adcl
mov
push
sub
mov
push
arpl
ret
roll
rclb
into
and
dec
lcall
xchg
add
stos
or
adc
insb
pop
xchg
add
subb
in
add
jmp
mov
jns
sub
add
cmp
rolb
mov
cmp
or
mov
dec
add
mov
sbb
or
add
and
dec
addb
mov
shll
add
adc
nop
in
xor
add
jo
add
pop
out
call
xor
mov
xor
push
and
add
xchg
shr
enter
xchg
jne
out
or
js
inc
mov
mov
add
cmp
repnz
mov
inc
bound
pushf
cli
inc
ds
jnp
mov
mov
dec
ror
jb
dec
sub
popw
add
dec
aam
movsl
lods
or
pop
xor
cs
addl
mov
xlat
dec
pop
fcmovnb
add
loop
or
sti
push
mov
loope
or
dec
jl
add
sbb
fnstsw
loopne
femms
pop
xor
andl
movsl
rcrl
and
jmp
or
lea
jno
xchg
inc
or
push
popa
lcall
testb
jo
cli
mov
push
cmc
orl
jle
ljmp
cmp
jne
movsb
std
xor
and
add
out
bound
mov
dec
adc
sbb
xor
or
movl
mov
xchg
pop
inc
mov
dec
nop
xchg
add
jne
test
or
leave
addb
insb
or
pusha
ljmp
cmp
xchg
push
xor
or
and
dec
pop
loop
imul
in
mov
pop
or
or
add
sbb
xchg
jbe
or
mov
ror
push
inc
xchg
add
adc
es
test
jb
xchg
inc
pop
mov
xor
bound
sahf
cmc
xchg
pop
loope
mov
lods
jge
mov
scas
jmp
int
push
add
pop
test
sarb
sbb
ja
push
jb
add
int
or
dec
push
adc
punpcklwd
pusha
dec
add
clc
adc
or
add
fsubl
cltd
in
mov
rcll
sub
or
test
adc
addb
cmp
sbbl
daa
sbb
pusha
adc
mov
sbb
test
lods
imul
xchg
out
adc
ret
add
inc
push
fs
mov
or
pop
ds
pusha
outsb
jecxz
xchg
or
dec
and
insb
int3
cmp
subb
repnz
test
add
mov
add
push
add
push
push
scas
mov
shr
std
insl
jo
pop
and
bound
nop
inc
push
sbb
ret
xor
fimull
loopne
add
shrb
add
or
adc
inc
flds
or
and
sub
loopne
loopne
repnz
sbb
push
add
or
mov
xor
add
add
dec
push
mov
cmp
and
or
add
mov
push
cwtl
dec
rcrb
sub
stos
cld
push
call
mov
push
insb
sbb
or
push
xchg
ds
sbb
pop
call
jno
cwtl
inc
sub
movl
sbb
cmpsb
xor
in
add
test
incb
stos
daa
mov
aam
cmp
rcrb
incl
inc
adc
imulb
and
mov
pop
and
sbb
or
fwait
add
loope
aas
inc
roll
test
ret
fucom
inc
xchg
jp
or
insb
cmp
mov
xorb
nop
data16
inc
inc
add
and
mov
jno
pusha
xor
popa
adcb
add
test
sbb
mov
adc
add
andl
outsl
add
or
add
push
test
pop
insl
jnp
inc
in
lcall
fdivl
aam
cmp
fisubrs
mov
xchg
rcll
xchg
test
add
adcl
inc
add
inc
sahf
test
rolb
push
dec
rcll
test
mov
pop
shlb
movsb
loop
mov
add
shlb
dec
or
sbb
lcall
aas
clc
negb
hlt
insl
add
ret
or
mov
jae
add
aad
push
mov
add
syscall
mov
icebp
andb
pop
adc
incl
sub
pop
or
inc
popf
aaa
inc
or
arpl
pop
rcrl
call
or
or
add
mov
repnz
or
nop
adc
adc
les
add
inc
cld
pop
and
pop
shlb
or
xor
and
cwtl
push
arpl
mov
call
and
add
jbe
mov
or
scas
add
inc
addb
and
push
lcall
rolb
adc
pop
pusha
xchg
dec
xchg
ret
jmp
jne
stc
sub
loope
call
or
jle
push
int3
out
arpl
bound
in
mov
sub
loope
pop
jp
aam
andb
inc
jae
sub
adcb
movsl
pop
mov
sbb
cmp
add
addl
frstor
and
shll
jmp
fwait
mov
adc
movsb
or
mov
movl
xor
pushw
mov
movsb
and
mov
adc
add
cmc
or
das
sbb
and
sbb
cs
xchg
sub
add
lea
enter
test
orb
or
das
add
adc
cmpsl
inc
and
loope
xchg
sub
dec
mov
xchg
rcrb
popf
loopne
xor
add
push
dec
or
loop
test
aas
add
add
shr
adc
cmpl
div
jl
xor
push
inc
dec
addl
lahf
fildl
rcl
sbb
bound
push
ljmp
rcl
add
inc
hlt
loope
sbb
lds
jbe
or
out
imul
xor
divb
adc
aam
adc
mov
fcomps
push
mov
stos
leave
xor
jl
sbb
ret
pop
rorb
pushf
je
adc
sub
sub
push
push
ss
stos
sti
mov
shr
aam
rcrb
loope
inc
fidivl
jbe
inc
lods
lret
or
sub
orb
jecxz
je
push
add
push
subl
mov
pop
pop
cmp
push
adc
mov
inc
addb
ret
addb
dec
add
clc
sub
jmp
sub
in
leave
mov
js
adc
adc
adc
dec
mov
repnz
frstor
or
mov
adc
sub
cli
sbb
pop
dec
sbb
and
push
add
lea
shrb
add
inc
jg
das
adc
enter
add
jge
mov
aas
dec
stos
arpl
adc
pop
sub
aaa
sbb
dec
scas
sbb
push
sub
or
mov
test
shrl
nop
andl
add
push
es
pop
je
arpl
nop
or
or
cmp
inc
inc
push
testb
add
pop
ret
add
mov
inc
mov
adc
loopne
js
xchg
add
mov
mov
ds
insb
mov
sbb
add
popa
xor
lret
pushf
push
jo
mov
imul
and
shrb
sub
psubusb
inc
dec
dec
sbb
hlt
test
add
cmp
xchg
loopne
or
xchg
xchg
adc
adc
cmp
xorb
adc
or
xor
and
jb
dec
popl
mov
ljmp
inc
je
xchg
sbb
push
push
rclb
pop
jl
popa
xchg
push
loop
pop
test
pop
inc
sub
or
inc
add
adc
or
xor
sub
jl
loopne
pop
xchg
pop
les
adc
cmp
fcompl
nop
sbb
loopne
push
popa
jmp
jo
jnp
sub
add
cmp
sub
jns
or
sbb
inc
and
add
out
shl
push
and
and
mov
cs
dec
adc
repz
out
lock
mov
add
sbb
orb
xchg
prefetch
hlt
xor
jl
es
std
fwait
cmpb
add
jle
and
jbe
or
push
lock
xor
das
add
sub
fxtract
and
dec
icebp
inc
add
cmc
rcrl
loop
negl
gs
and
mov
loope
pop
add
insl
ret
adc
xor
push
jmp
add
or
lock
push
xchg
pop
sbb
pop
add
adc
lock
test
or
aaa
jl
xchg
mov
incb
xchg
add
xchg
xchg
xor
outsl
rcrb
add
adc
or
nop
add
cmp
inc
cltd
dec
bound
adc
fmuls
mov
add
inc
or
imulb
or
mov
or
mov
push
fldl
mov
ret
cmpsb
outsb
mov
addr16
mov
fidivl
shl
or
xchg
jle
cwtl
sbb
popa
ret
or
push
push
mov
add
inc
adc
or
inc
xchg
xor
popa
shrb
ret
dec
loope
push
loope
lods
idiv
cmpsb
inc
push
add
shrl
mov
mov
cmp
add
aad
and
and
outsl
adcl
xchg
mov
dec
ja
add
mov
or
add
or
jp
sbb
mov
push
or
jl
mov
and
add
andl
sbb
dec
push
xchg
leave
sbbb
jo
jp
inc
and
mov
xchg
xor
popa
dec
daa
xor
inc
subl
aad
mov
stos
dec
sub
mov
mov
sub
dec
test
mov
dec
pusha
xor
sub
cmp
push
dec
xor
xlat
cmpsl
mov
shr
jne
add
aas
and
test
imul
and
adc
or
mov
inc
jle
push
es
pop
fiadds
mov
cmp
aas
mov
jnp
dec
lock
and
pop
clc
sbb
add
jne
mov
movsb
and
test
sub
sub
adc
push
les
sbb
mov
push
bound
popf
xchg
add
push
adc
fidivs
mov
es
stos
andl
xlat
pop
mov
pop
jge
adc
push
inc
lahf
jmp
ret
scas
add
sbb
repnz
sbb
loope
jnp
test
sbbb
aad
nop
sar
icebp
cmp
ljmp
cmp
or
add
cmp
inc
or
mov
roll
cwtl
aas
bound
cmp
jnp
lock
faddl
repnz
xlat
add
or
pop
mov
cmpps
add
fnstsw
xchg
xchg
std
ja
add
cmp
push
mov
xchg
or
sbb
lods
xorl
push
xchg
sbb
mov
sbb
push
or
sub
adc
adc
ret
ljmp
jecxz
lods
sub
jne,pn
add
and
sbb
sbb
and
push
pop
les
add
xchg
jecxz
lock
sbb
pop
mov
sub
jmp
rcrb
testb
mov
xorb
dec
or
cmp
pop
and
jo
lahf
add
jno
add
in
nop
call
pop
or
dec
daa
fcoms
call
test
shl
mov
dec
insb
add
and
mov
aam
or
js
int3
jno
adc
cwtl
mov
inc
mov
mov
push
adc
xchg
les
fadd
dec
mov
or
mov
pop
push
xor
inc
inc
cmp
push
lret
and
loopne
pop
rclb
xor
lds
push
mov
adc
inc
inc
push
xchg
insb
add
rcl
mov
adc
daa
hlt
lods
repnz
ja
mov
nop
add
or
inc
mov
sbb
cmp
test
cmp
add
add
lcall
addb
push
cmp
cmp
enter
or
xor
sbb
in
inc
sbb
pop
js
movsb
mov
adc
mov
dec
in
sbb
or
xorb
daa
add
pusha
test
pushf
sub
or
popa
icebp
push
and
dec
mov
rorl
imul
xor
jbe
jbe
add
jp
mov
fsubr
inc
or
dec
stos
in
jg
fcoms
imul
mov
add
stos
push
add
int3
cli
pop
popa
fsubl
inc
leave
jmp
js
fidivrs
add
jnp
mov
add
jno
es
pop
pusha
push
adc
add
pop
jecxz
xchg
das
sbb
mov
inc
cwtl
cmp
adc
cli
inc
test
mov
adc
mov
movsl
sti
jg
pop
dec
ret
std
and
jecxz
push
add
fisubl
shl
loopne
inc
or
and
add
jns
rol
inc
add
je
dec
xor
or
and
sub
xchg
push
add
aas
push
push
xor
insb
add
pusha
pop
jle
mov
fadds
cmovl
mov
cli
pop
les
adc
and
pop
cmpsb
decb
aas
or
popa
add
xor
jecxz
xchg
shr
mov
test
xchg
xlat
mov
cmp
dec
xor
pusha
dec
push
and
pop
dec
loope,pt
fnstcw
or
dec
test
fsubrs
adc
or
and
pop
fstl
adc
mov
push
fadds
popa
sub
ja
cltd
daa
hlt
inc
rcl
add
mov
push
and
sbb
les
cli
dec
adc
and
mov
cltd
jae
cmpsb
test
and
mov
cmpl
mov
bound
stos
pop
mov
push
inc
or
dec
daa
addr16
mov
push
ss
arpl
or
inc
fisttpl
add
insl
inc
add
or
popa
or
pop
inc
nop
dec
push
stos
call
testb
cmp
imul
jo
cmp
adc
adc
xchg
dec
or
aam
mov
add
inc
push
dec
sti
lods
or
adc
sbb
xor
mov
add
pop
and
adc
xlat
adc
push
loopne
pop
xor
inc
push
dec
inc
mov
ss
shlb
inc
and
mov
and
xchg
mov
je
shl
add
mov
adcl
xchg
in
add
insb
mov
push
pop
xor
xor
mov
pusha
dec
clc
mov
pop
cwtl
lea
push
inc
jge
cwtl
adc
add
cmc
xorl
js
addb
push
jno
inc
pop
pusha
sbb
mov
add
push
jb
adcb
mov
int
loopne
test
or
add
sub
test
bound
mov
and
dec
or
mov
cmp
jg
jns
add
loop
xor
ret
inc
lcall
push
out
pop
das
push
or
pusha
out
xchg
pusha
dec
sarl
sysenter
cmpb
add
adc
lret
sub
cmp
add
or
xchg
cmp
xchg
pop
sbb
int3
xor
fiadds
inc
mov
push
scas
or
and
sar
add
or
arpl
dec
add
in
mov
test
adcl
lock
das
ret
rclb
push
mov
and
add
ret
pop
push
stc
das
xor
jg
leave
push
shl
xchg
adc
xor
add
pop
mov
and
sub
xor
adc
hlt
addl
shl
js
inc
mov
xlat
push
jg
sti
pop
fsubrs
mov
and
cli
ds
push
mov
mov
cmc
add
or
push
cmc
or
add
pop
cmpb
inc
add
jmp
popa
invd
orl
rcl
and
xchg
inc
das
or
aaa
or
out
inc
shl
popf
or
adc
sbb
dec
testb
sub
ljmp
jno
repz
and
daa
ret
pop
add
and
rorl
data16
pop
dec
mov
and
mov
sbb
mov
fstpl
or
insb
popf
add
sbb
lods
xchg
pop
add
aaa
cmp
sub
cmp
popf
jmp
shll
sbb
and
sbb
loope
ds
cmpsb
or
pop
sti
incl
push
inc
push
push
js
cmp
dec
dec
xor
xor
dec
jl
cmp
inc
out
sub
repz
push
sub
and
js
sbb
test
mov
xchg
xchg
sbb
adc
stos
or
punpckhbw
iret
cs
adc
dec
sub
xchg
mov
xchg
les
sub
mov
mov
adc
test
subb
push
push
cmp
test
cmp
xor
dec
gs
sub
cmp
xor
sbb
sub
push
sub
cmp
stos
push
lret
jp,pn
shlb
mov
jo
jo
jo
jo
outsb
or
je
jb
popa
or
or
jge
pop
inc
xchg
and
mov
popa
ja
imul
jp,pt
mov
in
push
movsb
and
xor
addb
mov
and
and
jmp
movsb
bound
fs
or
out
sub
lahf
adc
daa
xchg
lret
pop
test
dec
aas
and
inc
and
cmp
test
xchg
xchg
jle
lcall
test
daa
push
or
dec
inc
test
inc
sub
or
adc
add
dec
fsubrp
or
push
inc
pop
xchg
dec
aaa
mov
popf
repnz
je
inc
push
in
je
aad
xor
xor
push
scas
fwait
sub
cmp
dec
sub
adc
mov
cli
es
sub
mov
sbb
mov
outsl
xor
add
jmp
dec
add
imul
insb
andb
sub
add
xchg
cmp
add
ds
ljmp
lods
ret
lret
and
pop
xor
jmp
jb
lea
sbb
jg
jne
scas
loopnew
lock
and
add
in
or
sbb
test
inc
clc
shr
xor
pop
xor
adc
sbb
sbb
sbb
dec
adc
sub
xor
inc
mov
or
push
sarl
sbb
and
push
xchg
fs
jae
push
xor
xchg
xor
xchg
sub
dec
sub
lcall
adc
repz
mov
sbb
push
inc
add
mov
cltd
add
arpl
imul
cmp
int3
sub
ficoml
mov
dec
adcl
sub
cmp
insb
repnz
push
cmp
sub
cmpsl
subb
test
mov
cltd
lret
test
xor
sub
sub
xor
add
jle
sub
sub
into
outsl
xchg
das
push
push
mov
sub
add
sahf
add
lahf
bound
sahf
shrl
sub
cmpsb
pop
cltd
ljmp
xchg
sahf
shlb
or
xchg
xor
mov
aam
int3
mov
push
outsb
inc
dec
cmp
lea
adc
add
sub
outsb
push
js
lea
push
stos
iret
lcall
xchg
int
lahf
cld
xor
lods
popf
adc
mov
lds
dec
sahf
out
mov
jp
stos
sub
sti
pop
in
in
dec
pop
lock
shr
push
mov
cli
jmp
repnz
inc
fimull
mov
and
cmpsb
inc
dec
mov
dec
dec
test
lea
jbe
in
lret
sub
sbb
xchg
int3
push
push
inc
fidivrs
and
sub
dec
xchg
lcall
sub
dec
xchg
fdivl
dec
mov
mov
shlb
fildl
sub
repnz
add
dec
in
out
dec
cmp
nop
xchg
push
mov
test
int
pop
out
push
jae
jmp
mov
mov
sub
cmp
repnz
jo
jo
addr16
or
jo
dec
dec
pop
adc
or
sbb
mov
mov
add
add
or
add
add
or
or
push
push
jo
test
addr16
cmp
insb
ss
push
xchg
mov
call
sbb
xor
inc
addr16
xor
dec
insl
pop
jo
popa
popa
push
jns
jecxz
sbb
xchg
arpl
lretw
cs
jb
xchg
xor
imul
int3
inc
or
cmp
and
outsb
adc
insl
arpl
arpl
enter
dec
mov
lods
gs
mov
sub
shlb
xor
ss
loopne
pop
or
cmp
push
mov
or
data16
jb
mov
push
sub
xor
cmp
les
inc
dec
push
je
test
cwtl
dec
insb
es
shr
movsb
imul
orb
xor
test
push
jns
insb
and
fldenv
mov
cs
adc
jae
push
gs
inc
pop
xchg
movsl
push
inc
xor
mov
or
mov
sahf
sub
cld
scas
xchg
aam
mov
xchg
mov
test
sub
jns
jae
pop
push
insl
dec
inc
loopne
scas
insb
movsb
out
xchg
in
xchg
lock
jb
push
jnp
add
add
push
cltd
xchg
test
jns
mov
push
inc
inc
mov
inc
jno
cmpsb
or
pusha
pop
dec
add
push
cmp
cmp
dec
jb
mov
clc
add
cmp
xchg
pop
mov
xor
mov
in
mov
cmp
cmp
cmp
cmp
cmp
cmp
mov
ds
shll
test
adc
rdtsc
pop
daa
xchg
inc
lret
xor
inc
shll
jno
js
xchg
sbb
ss
jge
fwait
jbe
js
jp
sbb
cmp
fistpl
mov
mov
cmp
je
jbe
js
jp
jl
sbb
cmp
popf
mov
fisttps
or
ds
cmp
adc
sbbl
sarl
cmp
cmp
cmp
push
pop
add
jb
or
jb
je
jbe
js
jp
jl
jle
sbb
xor
popf
in
aas
pushf
xor
popf
daa
ret
inc
int
inc
aaa
dec
leave
push
cmp
je
jbe
js
jp
sbb
cmp
mov
sbb
xchg
lea
xchg
and
daa
loop
cld
popa
add
enterw
adc
sbb
js
addr16
mov
test
cmc
sbb
xor
popf
sub
xor
imul
jle
aas
xchg
aas
xchg
aas
popf
aas
mov
sarb
aad
fdivrl
cli
push
add
push
iret
mov
in
iret
stc
ret
inc
ss
xchg
outsb
mov
rcl
out
aaa
pop
xchg
and
mov
ret
rcl
cmp
aas
int
aad
fstp
in
in
lock
or
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
sbb
cmp
popf
and
inc
lahf
mov
cmp
addr16
xor
dec
out
out
in
xchg
push
mov
repz
shl
or
in
call
popa
hlt
jo
jle
jle
sbb
cmp
sti
xchg
ds
daa
sbb
xchg
cmpsl
cmp
xchg
loope
aas
push
leave
sub
lea
mov
shll
xor
lock
push
sbb
dec
dec
fimull
ret
xchg
cmp
push
cmp
out
push
pop
ss
iret
pusha
jb
iret
fmulp
in
test
andb
sarl
repz
lock
inc
in
call
cmp
cmp
pop
cmp
cmp
mov
cmp
dec
inc
mov
test
jecxz
lock
xchg
inc
xor
add
lahf
clc
cmpsb
cld
ret
cld
std
inc
movsb
inc
aas
cld
xchg
std
xchg
mov
je
sbb
xor
popf
incb
sbb
sub
ss
pop
addr16
repnz
dec
inc
mov
rolb
lods
shll
call
xor
pop
sahf
jbe
aam
iret
cwtl
push
sbb
inc
dec
dec
mov
scas
pop
mov
dec
jl
mov
cmp
xchg
inc
int
xchg
movsl
adc
mov
addl
inc
insl
addr16
xchg
in
cmpl
in
into
lock
hlt
sub
cmp
mov
ds
daa
je
mov
leave
mov
ret
rolb
xchg
adc
loop
inc
jle
jle
jle
jle
jle
jle
sbb
xor
popf
pop
sbb
mov
xor
cmp
inc
es
roll
xor
xchg
pop
mov
jmp
jno
fcomp
mov
movsl
ss
aaa
and
test
movsb
dec
pop
out
or
ss
pop
mov
mov
dec
leave
pop
shrl
loope
xor
enter
and
cmp
cmp
cmp
xchg
stos
aas
mov
aas
aam
cld
pop
mov
aaa
sub
js
jp
dec
fcoms
cmp
dec
mov
add
icebp
idiv
or
nop
mov
inc
call
jl
push
sub
aas
std
adc
ret
addb
push
inc
jle
mov
ret
cmpsl
rol
in
lock
mov
jb
je
jbe
sbb
xor
pop
sbb
pop
daa
les
lock
pop
aaa
jb
je
jbe
dec
mov
mov
cmp
movsl
loop
push
pushf
setbe
add
cmp
xchg
inc
mov
mov
cmpsl
jecxz
lock
lcall
leave
popf
call
adc
aas
movb
lds
fucomp
in
xor
sbb
xor
dec
adc
push
xchg
xor
xor
add
aaa
or
lds
or
pop
loopne
cmp
cmp
in
mov
and
xor
mov
scas
lock
pop
cmp
inc
cmp
xor
mov
stos
push
xor
mov
xor
mov
loopne
xor
scas
sbb
jo
je
js
jl
test
xchg
andl
pushf
cmp
iret
lods
paddusb
cmp
pop
mov
mov
adc
push
pop
jmp
pushf
cmp
ret
and
push
inc
cmp
pop
aas
pusha
aas
fs
insb
es
movsl
bound
cs
popf
lock
hlt
push
clc
mov
or
js
jp
pop
and
in
call
hlt
dec
sub
dec
mov
mov
xchg
pop
imul
js
mov
ljmp
mov
jmp
stos
cmpsl
push
rol
out
out
loope
cmp
loop
or
xchg
pop
fwait
inc
cmp
cmp
lahf
cmp
mov
xor
sub
cli
rorl
rclb
xor
xchg
mov
stos
xor
and
jb
dec
jno
inc
addb
push
movsb
in
repz
icebp
add
push
push
push
sbbb
xor
push
popa
pushf
shrl
popa
iret
loope
jmp
mov
cld
xchg
cld
lahf
cld
cmpsl
nop
mov
cmp
inc
cmp
mov
mov
aas
rcll
add
push
mov
sbb
cmp
lret
cmp
cmp
dec
sub
xchg
push
pop
cmpsl
out
aas
ret
jo
inc
test
mov
xor
push
sbb
xorb
sahf
fstl
aaa
xor
movsb
hlt
test
push
cmp
test
mov
mov
pop
clc
xchg
aas
adc
xor
addr16
xchg
ror
jbe
dec
add
sbb
push
popf
sub
push
in
xor
cmp
repnz
clc
cld
lret
cwtl
sbb
cmp
push
jns
sahf
stos
xchg
flds
popa
add
xchg
rcrl
jmp
pop
cmp
dec
dec
or
stos
pop
pop
sbb
sbb
dec
xor
mov
nop
xchg
mov
ret
in
mov
sbb
cmp
push
sahf
gs
mov
pusha
into
iret
rol
es
ret
or
shll
cmc
ret
nop
fdivl
loopne
mov
insl
leave
xchg
inc
movsb
xor
leave
xor
flds
aad
xor
pop
push
loop
add
leave
mov
push
cmp
inc
dec
xchg
mov
dec
cmc
addb
xchg
mov
and
aas
jae
pushf
xor
dec
xor
into
and
aam
rolb
loopne
jae
jg
mov
cld
in
pushf
sarb
and
in
mov
in
call
cmp
push
cmp
movsb
cmp
cmp
push
stos
push
mov
in
jmp
jbe
or
push
cmp
sahf
mov
mov
leave
sub
xor
push
loop
xchg
jo
cmp
gs
pusha
in
in
call
fdivrl
in
nop
pop
adc
fwait
push
inc
ds
dec
push
mov
scas
scas
cmpsl
rol
or
and
rolb
sbb
cmp
mov
testl
ret
aas
push
sub
or
pop
mov
xor
push
xor
xorb
cs
cmp
xchg
aas
ret
aas
in
and
xor
fs
aas
js
pushf
aam
fcompl
inc
popf
aaa
sbb
mov
adc
and
mov
in
fdivs
inc
adc
pop
push
dec
cmpb
or
cmp
shrb
in
call
xchg
sbbl
push
roll
push
imul
ds
push
shlb
cs
sbb
les
jecxz
and
mov
sub
je
cli
sbb
xor
popf
and
and
jmp
ds
push
dec
xor
dec
mov
jmp
xor
jne
pushf
loope
jmp
jb
je
jbe
js
jp
dec
sti
push
xor
dec
fsubl
fsubr
out
lock
mov
cmp
shll
mov
xchg
aas
mov
test
scas
jecxz
repz
cmp
mov
shl
cmp
dec
leave
mov
and
cmp
dec
into
rcll
xchg
test
adcb
xor
jbe
pop
push
adc
les
sub
insl
inc
push
xor
es
xor
popf
inc
sbb
repz
cmp
cmp
insb
cmp
sub
cmp
push
mov
popa
movsb
imul
lcall
add
cmp
nop
adc
cmpb
lock
ds
xchg
or
sub
xor
cmp
add
xor
fistl
imul
add
in
pop
data16
js
jl
jle
sbb
aaa
ds
push
sbb
mov
lahf
out
mov
xchg
test
fsubrs
cmp
fwait
or
js
cmp
jo
loopne
jae
cwtl
xor
int3
sub
shlb
in
push
jb
sbb
xchg
xor
sbb
outsl
in
lahf
stc
lods
stc
mov
stc
loop
ljmp
hlt
in
dec
lock
hlt
pop
clc
gs
mov
inc
xchg
mov
repnz
xchg
stc
push
xor
sbb
jp
jl
dec
pop
sbb
mov
cwtl
aas
movsl
aas
mov
and
cld
xchg
aaa
adc
and
addr16
xchg
push
ja
and
pushf
inc
pop
les
cld
ret
loopne
xchg
das
cmpsl
sti
daa
bound
insl
les
xchg
dec
int3
stos
lret
mov
bnd
stc
repnz
clc
or
jb
je
jbe
js
jp
jl
pop
jp
jle
mov
jle
jle
jle
jle
push
add
sbb
fs
adc
jl
cwtl
push
jle
jle
jle
jle
dec
scas
pop
sub
stos
jmp
clc
ret
adc
sbb
insl
lock
sbb
or
testl
inc
sarb
inc
jmp
jl
subb
push
xchg
dec
xchg
test
sub
inc
shrl
jb
jg
mov
jle
jle
jle
jle
jle
jle
sbb
and
scas
jp
movsb
fwait
out
out
out
out
out
out
out
loope
aaa
push
leave
shrl
and
pop
hlt
imul
cld
xchg
cld
cltd
xchg
mov
flds
cmp
mov
and
dec
loope
jmp
xchg
xchg
cld
lahf
pushf
hlt
adc
addl
in
mov
dec
lahf
push
pop
fs
jge
test
repnz
sbb
or
inc
adc
xorb
iret
or
iret
mov
mov
shll
stc
push
js
daa
xchg
jns
and
or
dec
lcall
fs
mov
loopne,pn
adc
ret
cmp
mov
arpl
mov
adc
dec
lods
push
push
mov
xor
xchg
adcl
mov
ret
xchg
and
shll
sahf
push
push
sbbb
inc
lock
call
jg
stos
subl
ret
pushf
shll
rclb
adc
ret
jmp
rcll
and
rclb
daa
es
sub
nop
cwtl
adc
push
or
adc
loope
mov
stos
aas
mull
mov
iret
push
and
pop
dec
jmp
pusha
rcll
xor
inc
cmp
push
adc
sbb
loope
lcall
pop
cmp
dec
cmp
data16
sub
sub
cmpsl
cmpsb
push
mov
frstor
dec
leave
push
shll
imul
jmp
cmp
push
cmp
cmp
and
icebp
cmp
xchg
mov
dec
call
test
pop
aam
ljmp
je
jbe
pop
xchg
pusha
cmpsl
aas
mov
fnstsw
jecxz
out
add
sarl
jg
test
stc
icebp
stc
testl
add
mov
hlt
sar
jecxz
mov
push
subb
xchg
ficomps
jo
jle
test
pushf
lahf
fists
stos
mov
add
pop
cmp
dec
leave
push
jp,pn
subb
aas
aas
jmp
and
inc
and
lods
sub
mov
xor
or
cmp
jp
cwtl
mov
push
cs
lock
cmp
dec
mov
loop
cmp
xchg
mov
xor
sbb
or
sub
push
dec
sbb
mov
mov
jle
iret
mov
push
rcll
cmp
push
out
stc
idiv
adc
push
je
jbe
sbb
xor
xor
push
and
mov
lcall
push
lret
pop
rcrb
daa
dec
inc
addr16
hlt
mov
cld
rcrb
dec
sbb
lods
shrb
call
ret
rolb
les
lds
sahf
loope
xchg
dec
pop
jecxz
mov
push
sub
loop
icebp
roll
xor
insl
in
jbe
inc
call
inc
xor
mov
xlat
outsb
in
jne
mov
jns
lock
mov
sub
cmp
imul
sbb
and
loope
pusha
scas
mov
cld
or
mov
sahf
jb
mov
repz
hlt
repz
repnz
addr16
xchg
fs
outsl
out
in
mov
cmp
xor
aas
in
inc
test
jno
jns
push
pop
mov
iret
mov
shlb
flds
push
xchg
and
or
hlt
cmp
dec
nop
test
fs
jle
jle
jle
dec
mov
aas
shrb
in
dec
and
pop
inc
mov
jmp
xchg
pop
sbb
mov
pcmpgtb
leave
jmp
lret
cmp
popf
and
sub
pop
popl
cmp
dec
pushf
xchg
adc
push
jo
faddl
clc
sar
cld
fnstenv
enter
xor
or
jae
push
int
dec
xor
push
add
push
dec
scas
loope
in
stc
repz
add
mov
push
jg
mov
jle
jle
jle
jle
sbb
xor
gs
pushf
mov
shrb
daa
sub
gs
mov
sub
jmp
xchg
sbb
repnz
pop
loop
mov
jmp
rolb
imul
cmp
lods
pop
cmp
xchg
test
loope
jae
fmull
and
sub
stos
fcomps
jb
je
jbe
js
jp
push
hlt
enter
test
cmp
xor
xchg
cmp
cmp
push
pusha
xor
jle
push
sbb
xor
popf
ss
cmp
hlt
pusha
clc
fs
shl
cwtl
cmp
pop
cmp
and
sarl
insb
xchg
jo
add
mov
scas
ret
pop
insb
adc
enter
mov
je
sbb
aaa
xor
imul
shl
mov
popa
add
sub
test
add
dec
xor
mov
insb
nop
and
jo
hlt
mov
insb
in
mov
fists
sbb
xor
xchg
rorl
out
push
mov
les
xchg
add
stc
call
into
cmp
cmp
and
pop
xchg
dec
mov
cld
ja
jb
mov
pop
mov
rcll
jmp
cmc
repz
repnz
jns
pop
push
push
clc
or
shll
mov
es
call
aaa
shlb
fldl
sar
pop
pop
sahf
sbb
dec
dec
roll
das
add
ret
and
lods
or
popa
movsb
mov
daa
push
out
loope
aas
or
nop
daa
sbb
daa
fs
mov
dec
lahf
push
lahf
push
lahf
pop
lahf
fs
insl
lahf
jb
jl
lods
mov
xchg
repz
xchg
hlt
addb
and
and
loop
xchg
out
cmc
in
shrl
leave
psrlw
sub
nop
and
cltd
add
stc
aas
stc
inc
stc
dec
stc
push
stc
pop
stc
jb
out
clc
cmp
jb
pop
xchg
scas
cmp
xchg
repnz
ret
and
shrb
movsl
xchg
mov
mov
pop
pop
loope
pusha
sarb
xchg
out
adc
andb
js
jp
jl
adc
mov
aaa
add
mov
movsb
cmp
push
lret
push
sarl
inc
pop
cmp
xchg
in
mov
push
sub
adc
mov
cmpsl
fcompl
shll
and
nop
add
inc
adc
inc
fsubs
inc
mov
movsb
mov
pop
xor
arpl
cmc
pop
and
in
test
dec
or
or
sub
xor
inc
lahf
add
jle
sub
pushf
aas
stos
aas
mov
push
daa
cmp
dec
mov
je
ss
sbb
and
daa
fldcw
dec
and
stc
movsb
ds
iret
lret
leave
rcl
ret
lock
test
in
and
hlt
mov
sahf
les
and
cmp
ja
mov
sbb
das
push
pop
lcall
cmpsb
test
aas
mov
mov
inc
sub
das
push
xchg
outsb
movsb
push
mov
sub
sbb
xchg
nop
loope
aas
adc
fldcw
sub
icebp
mov
sahf
ds
lret
inc
mov
xor
mov
cwtl
cmc
xchg
pop
pop
pop
lahf
fs
insb
xchg
ret
cmpsb
lods
repz
shl
dec
shl
insb
lods
push
pop
xor
dec
mov
iret
cmp
dec
pop
dec
jle
dec
push
aas
js
xchg
mov
mov
cli
pop
js
lods
pusha
aam
xor
and
pop
ret
cmp
outsl
push
and
mov
leave
sub
sti
xorl
pop
push
aam
fcompl
in
test
mov
mov
adc
cmpb
mov
rol
addr16
mov
cmp
repz
pop
lock
xchg
dec
cmp
mov
dec
mov
mov
jle
jle
jle
dec
add
nop
mov
sbb
sbb
add
in
dec
lock
xchg
add
icebp
clc
xchg
xchg
lock
dec
add
mov
jp
dec
orb
in
scas
or
ds
jno
ret
loopne
xor
je
jbe
js
jp
dec
fwait
add
xor
xchg
cmp
popf
dec
push
lods
iret
jecxz
leave
xor
loope
movsl
je
leave
xchg
add
std
xchg
sbb
cld
rol
aaa
scas
mov
sbb
sub
scas
or
cmp
cmpsl
push
cmp
push
les
sub
rol
out
out
out
in
dec
jo
dec
pop
push
pop
jne
aam
add
xchg
jns
out
das
movsb
mov
mov
fcoml
push
loopne
into
mov
dec
ljmp
dec
scas
test
xchg
xchg
pop
bound
dec
in
xchg
clc
push
idivl
pop
aaa
add
js
pop
sahf
movd
ret
push
jmp
loop
dec
fmull
sti
inc
ss
imul
add
pop
cmp
cmp
xchg
mov
or
ret
and
repnz
sahf
outsb
push
mov
repnz
or
jb
dec
push
dec
mov
xchg
push
repnz
mov
mov
add
xchg
sub
inc
test
pop
or
bound
fs
adc
ds
and
cwtl
sbb
xor
cmp
jae
fiaddl
in
sbb
fsubrs
dec
lods
ret
pop
outsb
push
fdivrs
test
adc
ret
faddl
push
pop
out
lahf
xchg
out
orb
adc
inc
js
sub
push
mulb
repnz
clc
pop
jmp
push
xchg
add
fistps
cmp
inc
mov
lock
jle
fiadds
ds
movsl
data16
add
fmull
mov
adc
cli
fwait
push
inc
pop
out
cmp
xchg
inc
mov
out
nop
sbb
inc
push
cld
stos
xchg
pop
cmp
loope
lods
leave
stc
rcrb
jb
je
jbe
push
or
ds
popf
ret
pop
pusha
sbb
cmp
mov
dec
jo
dec
xchg
push
xchg
sahf
xchg
mov
ds
call
cmp
imul
stos
clc
mov
add
add
adc
call
push
js
and
lcall
or
or
cmp
in
push
add
lahf
mov
cld
stc
rcrb
sahf
movsl
call
adc
ds
out
pop
js
mov
mov
mov
je
dec
cmpsl
setp
dec
enter
sub
sub
movsb
pop
mov
outsb
lahf
xchg
in
lock
push
mov
shll
repz
repz
lock
xor
xchg
pop
push
pop
addr16
xchg
jg
mov
cs
sub
push
jmp
push
pop
in
clc
clc
and
in
xchg
fimull
lahf
stc
xchg
cmp
mov
shl
jl
jle
sbb
aaa
jnp
cmovnp
cmp
pushf
loope
outsl
adc
inc
test
cld
sub
mov
dec
out
add
pop
xchg
mov
insb
sub
mov
push
add
lea
sub
push
inc
mov
dec
pop
cmp
add
ds
xchg
loopne
adc
and
mov
add
xchg
icebp
cwtl
lock
pop
pop
subl
xor
xor
xchg
sub
loopne
cmpsl
mov
pop
push
movlps
mov
mov
loope
faddl
push
lods
test
jbe
jl
mov
stc
into
xor
icebp
xchg
add
adc
jmp
or
pusha
mov
aas
bnd
jbe
js
dec
cli
pushf
mov
and
cmp
push
daa
cmpsb
pop
push
nop
repnz
aas
sahf
out
cwtl
rorb
popf
adc
arpl
pop
cmpsl
subb
test
cmp
mov
sbbb
jg
push
out
cmp
call
pop
imul
in
mov
dec
shr
push
faddl
addr16
movsb
or
pop
and
and
js
sbbb
clc
pop
or
pop
mov
ret
fidivrs
jle
jle
sbb
xor
popf
and
ret
sub
and
mov
xchg
es
jp
dec
cld
mov
lock
ss
xchg
sbb
cmc
loopne
inc
in
pop
and
nop
cmp
loop
leave
adc
pmuludq
imul
imul
mov
js
and
dec
mov
movsb
mov
dec
or
lods
inc
mov
push
add
enter
rolb
jbe
pop
jbe
mov
push
inc
mov
shll
aam
mov
mov
hlt
fstpt
into
sub
loopne
push
mov
pop
push
mov
push
test
sahf
daa
movsb
popa
xchg
adc
sub
loopne
aam
repnz
clc
stos
xor
mov
sbb
cmp
dec
pop
sub
mov
pop
ret
xchg
leave
and
imul
aas
cld
lahf
test
add
push
das
repnz
mov
mov
hlt
sub
xchg
dec
icebp
call
mov
ljmp
mov
ret
sub
jl
test
sub
clc
pusha
sub
xchg
cmpsl
out
in
in
mov
es
cwtl
lds
sbb
popf
push
adc
xorl
repz
repz
repnz
jo
pop
jno
faddl
jle
jle
jle
jle
jle
dec
enter
or
mov
shrl
or
inc
mov
shll
xor
lds
ds
js
je
jbe
js
pop
cmpsb
aaa
pop
cmp
push
shll
dec
pop
adc
cmp
enter
jle
sbb
adc
xchg
clc
imulb
mov
pop
movsb
xor
insb
sub
mov
and
sub
mov
je
pop
cmp
ja
mov
sbb
push
jmp
and
sahf
push
bound
or
loope
push
pop
sub
mov
dec
sub
and
jg
dec
loope
stos
in
in
test
gs
lea
sbb
and
loopne
xchg
cmp
or
cmp
jl
cmp
cmp
and
adc
mov
jl
push
xor
pop
ret
hlt
in
test
pushf
sub
das
or
pusha
lock
add
jmp
ret
je
push
roll
mov
cmp
sub
sub
xchg
jo
jo
mov
es
mov
test
cs
cs
orb
and
and
test
xchg
cld
pop
nop
mov
dec
enter
cli
dec
push
or
or
push
dec
sbb
int
outsb
push
je
xchg
out
fwait
loopne
dec
adc
es
repnz
cs
repnz
fdivrs
push
add
pusha
cmp
mov
xlat
sbbb
lock
jbe
js
jp
sbb
aas
dec
popf
mov
inc
xorb
xor
nop
clc
lods
daa
mov
mov
mov
push
arpl
dec
add
out
in
cld
repnz
into
and
sub
inc
ret
leave
mov
loope
jmp
hlt
daa
ret
popa
mov
pop
out
cwtl
dec
xchg
lcall
push
or
int3
shll
xchg
loopne
call
push
jo
pop
or
add
inc
or
jne
push
mov
dec
pusha
jle
xbegin
aas
outsl
mov
inc
sbb
jp
mov
sti
xchg
iret
daa
filds
sarb
cltd
adcb
out
push
call
mov
push
sbb
and
mov
xchg
lock
test
cld
mov
mov
push
ljmp
js
js
pop
repz
lock
dec
js
xlat
inc
push
dec
orl
cmp
inc
xchg
xor
hlt
loopne
rolb
mov
add
xchg
mov
sbb
xor
in
call
loope
inc
cmp
and
xor
mov
sbbb
outsb
lahf
pop
bound
or
mov
jp
dec
inc
or
les
jl
add
add
aaa
enter
xlat
sub
mov
fsubrs
jbe
or
pop
scas
mov
lret
stc
pop
fcomps
sbb
or
cmp
test
cmpsb
cld
stos
push
mov
test
xor
in
in
jns
xchg
int
cld
sbb
and
fs
inc
test
cmp
pop
cltd
imul
sbb
cwtl
ret
mov
hlt
clc
adc
jb
pop
pop
lds
test
xor
xor
jle
push
notb
cmp
lcall
in
cld
mov
mov
lahf
mov
cvtps2pi
xor
dec
sub
pop
cmpsb
mov
or
or
lret
push
stos
add
or
pop
pop
hlt
cmp
cld
ficompl
jb
jb
je
jbe
js
jp
dec
lret
xor
lock
inc
add
inc
sub
push
pop
xchg
mov
dec
jmp
adc
outsb
xchg
rcll
addb
cmp
jbe
pusha
fstpt
in
dec
push
dec
adc
mov
jmp
hlt
inc
and
jp
hlt
nop
cld
or
cmp
das
xor
inc
andb
popf
loopne
stos
xchg
add
mov
xor
les
loopne
icebp
test
dec
pop
or
mov
jp
dec
testb
cmp
or
mov
push
movsb
and
dec
and
xchg
sub
rolb
and
jp
test
and
dec
ret
push
sarb
and
pop
lods
pslld
fsubl
add
or
pop
and
dec
mov
pop
sbb
and
lock
hlt
pop
mov
push
lcall
loop
hlt
mov
cmp
push
push
add
jl
or
mov
fchs
sahf
push
sub
adc
popf
pop
sahf
pusha
push
insb
xchg
jbe
decb
mov
dec
aad
adc
movsb
and
push
xor
bound
mov
push
gs
mov
sbb
das
movsb
add
or
call
jno
int3
xchg
clc
loope
jp
sub
pop
ret
add
movsb
ret
or
inc
xor
jl
inc
sbb
sub
stos
bound
pop
nop
ret
sarb
outsb
sub
cmp
fdivrs
lock
sbb
inc
sbbb
sbb
or
sbb
pop
ret
movsb
mov
daa
pop
lock
dec
push
in
dec
mov
fmuls
pop
inc
cmp
test
and
test
mov
push
xor
add
mov
insb
mov
ds
pop
insb
leave
addr16
lock
test
push
mov
push
in
test
mov
dec
add
movsb
cmp
out
xchg
sub
push
and
test
mov
fidivrl
adc
hlt
dec
rclb
push
fcmovu
push
sahf
jo
add
mov
cld
or
sbb
or
pop
fdivrs
and
mov
push
insb
jmp
cmc
leave
insl
push
test
nop
loop
cmp
fisubs
ds
inc
pop
jl
outsb
sbb
jl
adc
mov
mov
add
xchg
dec
mov
dec
pop
mov
jge
xchg
dec
pop
pop
sub
inc
cmovle
adc
dec
mov
iret
push
or
mov
nop
mov
cwtl
fsub
dec
movsb
cmpb
fistps
aas
nop
popf
mov
xchg
add
add
mov
dec
loopne
je
mov
mov
mov
mov
jp
or
jle
sarb
sub
pop
cmp
das
mov
std
scas
or
rcrw
sbb
pop
dec
push
stos
push
push
mov
sahf
ljmp
rolb
add
sub
testb
lock
push
ret
fsubrs
into
out
loope
outsb
ds
adc
push
rorb
dec
sbb
jge
orl
dec
ret
cmp
in
call
repnz
lcall
push
daa
cmp
rorb
outsb
xchg
pop
mov
mov
xor
jno
jnp
fimull
sahf
lods
fimull
rol
push
push
jmp
or
push
pop
ret
and
mov
andl
adc
and
push
mov
jmp
sbb
movsb
add
nop
shlb
dec
add
subb
dec
push
inc
movsb
adc
mov
cld
rcr
jp
clc
dec
loop
inc
or
jb
pop
rol
mov
xchg
js
pop
sbb
aam
push
mov
idiv
bound
pop
popa
or
push
idivb
adc
sbb
mov
movsl
dec
push
sti
lret
sbb
je
pop
inc
cmp
shlb
or
cmp
mov
inc
loopne
cli
popa
adc
leave
outsl
sub
xchg
mov
cwtl
dec
daa
ret
dec
xchg
sub
adc
call
push
mov
xchg
lods
cmp
push
xchg
push
lock
insl
cld
jnp
mov
ret
hlt
lahf
mov
mov
jle
pop
stc
ret
adc
das
ret
mov
dec
and
lock
adc
testl
cli
jle
add
pushf
stos
paddd
leave
cmc
shll
rcrl
or
jo
inc
je
cld
xchg
cld
sahf
xchg
in
mov
iret
dec
loopne
jmp
repnz
mov
les
movsb
and
stos
or
in
stos
icebp
lret
mov
std
imul
adc
pop
stos
loopne
daa
mov
test
lods
mov
rorl
jmp
enter
mov
les
je
mov
cltd
mov
pop
movsb
or
jmp
adc
dec
jnp
adc
loopne
aam
inc
daa
scas
and
cmp
cmp
bound
js
and
mov
push
mov
mov
lds
pop
aas
data16
xchg
mov
lods
xor
add
pop
or
sub
mov
lahf
rclb
mov
push
in
adc
adc
fs
xchg
ds
into
dec
iret
mov
xchg
dec
popf
fdivrs
sbb
cmp
xchg
pusha
ret
mov
mov
into
lods
fsubl
lods
bound
jecxz
xchg
sti
push
dec
push
or
test
xchg
in
hlt
movsb
mov
stos
push
mov
iret
fisubs
mulps
aas
leave
add
jo
call
xchg
xchg
andb
call
scas
pop
cs
jle
mov
ds
arpl
loop
notb
mov
lods
mov
fldenv
pushf
js
dec
lods
pop
and
bound
sub
sti
scas
outsb
popf
xchg
adc
sbb
je
pop
in
xor
fcoms
mov
sbb
pop
lret
or
popa
and
lock
dec
sbb
shlb
or
rcrb
nop
test
cmp
pop
addb
dec
and
mov
dec
rolb
xchg
int3
pop
sbb
or
push
jl
xor
daa
cmp
adc
sub
ss
roll
jnp
sbb
leave
pop
popa
inc
nop
repz
dec
dec
sub
cmp
xchg
adc
inc
cmp
and
cmp
cli
ret
enter
fsub
pop
movsb
or
call
ret
mov
in
xor
xchg
and
icebp
cmp
pusha
mov
push
insb
xchg
js
loop
jo
hlt
test
fs
je
push
jp
jl
jle
dec
sub
mov
sub
in
cmp
fs
movsb
or
test
outsl
je
add
ljmp
aaa
pusha
mov
push
leave
enter
adc
imul
test
movsb
cmp
shl
jle
dec
xchg
adc
or
fs
xchg
jo
lods
adcb
cmpsb
sbb
popf
sub
sub
rclb
ss
stos
jo
pop
enter
push
xor
je
pusha
test
pushf
in
pop
sub
clc
shlb
mov
mov
cmp
jle
fdivl
dec
dec
or
loopne
sbb
cmp
inc
inc
outsl
je
nop
mov
cld
ret
loop
insb
xchg
jo
xchg
leave
fdiv
pop
call
mov
pusha
pushf
sahf
push
mov
int3
andl
repnz
jbe
adc
into
das
xor
movsl
cld
test
call
rolb
pop
je
pop
outsb
or
push
dec
mov
inc
test
inc
xor
je
pop
movsb
ret
inc
mov
adc
push
push
ret
pop
sarl
test
lret
repnz
nop
and
inc
mov
and
outsl
add
bound
mov
mov
push
fdivr
stc
add
ret
imulb
mov
jae
add
dec
xchg
call
jb
jmp
xchg
fstps
andl
in
cli
and
and
outsb
mov
ljmp
call
stos
ss
pop
or
xorb
dec
clc
stc
sub
mov
clc
xchg
cld
mov
popa
push
fisubs
sub
xor
mov
enter
out
sahf
adc
sbb
popf
cmp
cmp
nop
xchg
inc
fldcw
jo
cmp
sub
lock
cmpsl
jne
jp
or
ljmp
cs
sahf
pop
pop
xorl
pop
hlt
or
cmp
jl
dec
pop
cmp
inc
outsl
and
mov
pop
lahf
inc
push
stc
sarb
ljmp
mov
ret
xchg
fcmovb
jmp
adc
xchg
dec
call
mull
addl
jl
pop
mov
pop
pop
or
or
cmp
clc
movsb
dec
push
sbbb
mov
sub
push
pusha
pop
pop
cli
es
popw
mov
aad
fisubl
sbb
imul
sbbb
hlt
xor
fdivs
je
dec
and
xchg
stos
aam
fnop
sub
lods
sub
in
shlb
jbe
pop
xchg
enter
xchg
stos
xchg
pop
add
scas
cmp
lock
xor
fnstcw
std
andb
neg
adc
lods
mov
les
pop
xor
aas
ret
js
xchg
daa
negb
fs
in
call
sbbb
pop
das
ret
shlb
test
add
mov
aam
sub
sbb
add
mov
shl
les
or
popa
dec
leave
das
push
xor
dec
add
test
popf
rcrl
cmp
lret
imul
pop
pop
push
jo
leave
cmp
sbb
xor
or
cs
cmpsl
mov
repz
xor
jbe
js
dec
xacquire
mov
xor
adc
xchg
out
loope
adc
ret
lock
cmp
pop
cmp
ret
push
es
lds
repnz
pop
lock
test
and
das
je
push
rorb
xchg
inc
into
mov
bound
sub
push
add
daa
sbb
xor
test
jo
dec
lods
inc
and
xchg
xchg
pushf
add
lahf
test
push
js
dec
and
shrl
leave
xchg
sarb
or
icebp
js
dec
pop
loopne
cmpsb
xchg
or
je
shlb
clc
add
sahf
pop
push
or
lock
mov
push
cmc
hlt
xor
enter
aas
push
cwtl
push
lret
push
popa
sub
bswap
jnp
nop
leave
pushf
js
pop
mov
into
sub
mov
mov
mov
mov
mov
cmpsl
test
enter
rorb
or
es
inc
adcb
mov
xor
and
cmp
xorb
ds
nop
cmpsb
call
jno
ja
out
inc
into
out
in
out
push
push
or
mov
push
icebp
jno
je
cld
fwait
popf
add
call
loop
sub
inc
cwtl
addr16
test
mov
repnz
je
xchg
xchg
les
mov
loope
shrb
xadd
iret
std
ret
sub
mov
and
jg
mov
and
jmp
xorl
aaa
cmp
jle
jle
cmp
daa
adc
je
inc
xor
xor
cs
sar
or
dec
adcb
mov
rcrl
mov
push
loope
cmp
cmp
xchg
jmpw
jbe
pop
test
and
cli
sbb
adc
mov
ret
push
dec
dec
push
ret
push
xor
ret
jno
sub
and
adc
clc
je
adc
cmp
xchg
mov
daa
ds
pushf
mov
test
push
mov
add
cmp
mov
das
add
dec
mov
and
jmp
pop
xor
xchg
xchg
les
paddsb
xchg
decl
insb
or
sbb
mov
mov
fsub
jl
popf
inc
in
xchg
cmp
mov
in
lock
mov
xchg
and
xlat
sub
mov
in
adcb
adc
cmp
in
adc
insl
in
sbb
or
leave
loope
insb
das
or
cmp
outsb
cmp
out
addb
test
xor
mov
push
mov
cmp
pop
movsl
mov
xor
adc
dec
pop
xlat
mov
mulb
cmp
addr16
test
and
call
ds
and
iret
imul
push
push
sbbb
lcall
sbb
inc
rcrl
sbb
pop
push
mov
mov
sbb
bound
test
inc
add
push
xor
xchg
clc
sbb
mov
lods
cs
popf
call
xor
ss
popf
push
sbb
sub
cld
jge
xorl
cs
dec
adc
xchg
and
sub
and
sbb
cmp
push
test
shll
sub
xor
pop
sub
stc
iret
cmp
push
loopne
in
movsl
and
stos
or
adc
dec
sub
lods
cmp
mov
mov
stc
jo
or
loope
popf
je
mov
loopne
in
cmc
pushf
into
adc
lock
je
push
daa
popa
pop
fidivl
test
xchg
jp
mov
loope
pop
cld
sub
and
sub
xchg
pusha
push
mov
int
fildl
insb
ds
xlat
add
outsb
mov
mov
dec
aad
mov
pop
popf
xchg
xchg
lds
ds
push
fucom
pop
repnz
xchg
and
mov
je
mov
jp
repz
icebp
js
add
xor
push
cmp
ds
enter
and
or
adc
data16
add
ss
aaa
in
push
cmp
cmp
clc
dec
dec
cmpsb
sub
test
outsb
and
lcall
mov
sbb
push
lods
mov
mov
jl
dec
mov
fcoms
sbb
nop
xchg
popa
hlt
es
insl
or
into
mov
sbb
or
cmp
addr16
fwait
lock
sbb
xchg
inc
test
sub
mov
add
dec
cwtl
mov
mov
fsubrl
iret
xor
fisubs
sub
daa
lds
or
fidivrl
popa
cld
mov
mov
and
sub
mov
mov
ret
test
gs
xchg
xor
fisubrl
dec
rcrl
add
jp
push
lret
loope
add
sbbb
xor
orb
xchg
push
fcomps
or
aam
andl
push
jmp
xchg
add
xor
cmp
jge
xor
dec
fdivl
xor
add
std
and
cmp
lock
pop
movsbl
xchg
pop
lock
call
daa
pop
popa
push
jp
or
push
popa
loopne
sarl
jp
sbb
rcrb
push
fadds
cmp
and
sub
pop
jmp
sub
leave
cmp
inc
das
orl
push
xor
idivb
andb
popf
movsl
mov
enter
xchg
xchg
es
push
lods
dec
push
test
imul
pop
mov
sub
lock
xchg
xchg
repz
dec
sub
xchg
test
and
inc
sub
test
mov
and
push
cmp
andl
pop
pop
adc
xor
mov
pop
push
ret
cmp
xchg
mov
cli
lock
xor
hlt
rolb
test
fmul
inc
push
lock
xchg
test
pop
out
movsl
cmc
dec
or
pop
add
dec
xor
push
dec
cmpsl
shlb
rdpmc
push
xchg
xchg
xchg
fs
mov
sbbb
clc
imul
jle
pop
pop
xor
xchg
negb
xchg
xchg
ret
lods
sub
pop
daa
pusha
popa
cmp
adc
mov
and
fistpll
dec
adc
ret
lcall
jbe
xor
cmp
inc
cmp
les
pop
clc
xchg
and
cmp
mov
mov
lcall
mov
loop
cmp
mov
test
cwtl
pushf
pop
mov
into
sbb
add
dec
xor
push
aam
leave
or
test
das
ret
in
cld
jle
cld
lock
adc
rorb
cmpsl
mov
aas
lret
cmp
pop
ja
jge
xchg
mov
sub
inc
jb
and
xor
popa
lcall
or
repnz
mov
fsubr
in
shr
cmp
pop
lahf
xor
loope
out
js
mov
loop
mov
sub
add
into
jo
cltd
cld
jmp
cmp
cmp
popf
mov
in
xchg
into
hlt
and
xor
mov
and
js
daa
andb
xchg
or
jo
pop
push
inc
xchg
xchg
and
cmp
enter
cld
sbb
push
cmp
mov
shr
jp
adc
xor
xchg
push
movsl
pop
mov
popf
add
sti
lock
mov
enter
adc
mov
adc
xchg
cmp
xchg
xchg
xor
pop
push
push
inc
jo
add
in
mov
dec
mov
sahf
cld
push
jmp
cmp
xor
or
mov
xchg
int
ret
xlat
pop
dec
out
gs
je
call
pop
inc
popf
inc
pop
push
pop
jo
cs
pop
mov
adc
dec
adc
sub
sbb
pop
jp
dec
test
cld
add
jne
lret
add
sub
leave
sbb
xor
inc
popf
testb
mov
ret
neg
adc
dec
sbb
inc
adc
push
aas
pop
sub
jns
add
push
mov
add
or
dec
fmuls
shrl
punpckldq
push
nop
cmpsb
cmc
sbb
xchg
dec
orl
sbb
repnz
push
popf
inc
adcb
cmp
cs
je
inc
test
cli
or
icebp
jbe
sbb
xchg
pop
mov
push
repnz
jg
sbb
ret
add
and
loope
jl
das
outsb
test
mov
or
sub
fdivrs
pop
xchg
repnz
mov
clc
repnz
in
out
mov
das
or
sbb
mov
fsub
je
dec
test
test
or
test
jl
cmp
push
pop
xchg
mov
icebp
cmp
leave
mov
popa
adc
jnp
mov
jbe
pop
jmp
das
dec
mov
add
dec
sub
xchg
mov
pop
push
jb
insb
and
aas
or
dec
loopne
push
jb
popf
test
mulb
xorb
jae
js
ret
adc
and
sarb
pop
nop
mov
ds
call
cmc
sub
mov
sahf
pop
in
mov
jecxz
popa
sub
jle
lock
fmull
sbb
and
inc
or
xchg
jmp
pop
lahf
inc
cs
rclb
push
dec
dec
or
clc
jb
mov
cmp
sahf
dec
adc
mov
popa
lahf
sarl
rclb
pop
faddl
jne
inc
mov
imul
in
insl
mov
jns
mov
ljmp
xchg
dec
push
inc
push
pop
push
outsl
mov
hlt
and
push
scas
jle
loopne
push
dec
into
gs
jo
dec
mov
mov
cwtl
mov
cmp
mov
in
cs
rcr
loope
jmp
loop
stc
mov
insb
xchg
push
lods
and
movsl
jmp
daa
jo
cmp
movsb
and
mov
mov
pop
mov
push
cmp
sub
pop
pop
cmp
ss
and
ret
jg
adc
and
lock
cmp
sahf
and
mov
roll
inc
add
jl
les
mov
es
ds
out
in
sbb
roll
and
gs
push
lahf
mov
add
cmp
mov
ds
pop
xchg
outsl
dec
mov
js
nop
mov
mov
and
dec
or
and
push
stos
or
ret
lock
sahf
and
scas
add
out
sahf
aam
fldt
adc
mov
inc
int3
shlb
in
adc
cwtl
or
stos
jp
pop
sbb
test
mov
pop
cmp
xchg
push
hlt
cwtl
push
pusha
pop
sti
mov
lahf
test
insl
dec
call
sub
sbb
jne
cld
push
mov
or
or
test
jmp
rcrb
adc
popa
cmp
loopne
xchg
dec
lahf
xchg
in
test
adc
repnz
sti
and
cmc
adc
mov
mov
mov
jmp
xor
xchg
sbb
ret
xchg
push
jo
enter
cmpsb
push
push
sbb
jb
mov
and
fs
jb
mov
xchg
out
cmpsl
jg
jl
stos
push
sbb
pop
add
js
nop
pop
dec
das
pop
cmp
insb
add
das
out
push
sbb
pop
outsb
and
les
lods
insb
das
loop
mov
xor
sarb
movsb
pop
outsl
or
movsb
adc
stos
pcmpgtd
dec
mull
jg
push
int3
and
and
mov
dec
addr16
jl
jmp
pop
push
dec
and
inc
push
mov
mov
push
jbe
std
js
or
ss
mov
and
xchg
ror
shl
sub
and
push
mov
test
pusha
stos
stos
xchg
push
adc
ret
push
orl
pushf
pop
push
jp
dec
sub
inc
cmp
loop
ljmp
shlb
mov
mov
cmc
xchg
mov
dec
addb
pop
mov
inc
ret
incl
inc
in
ss
movsb
sbb
jb
std
repnz
and
mov
xchg
pop
cwtl
bswap
jmp
add
or
pop
and
mov
mov
call
test
out
je
and
shl
pop
mov
aas
ret
test
mov
jp
pop
push
ret
dec
push
out
scas
add
pop
mov
xorb
mov
mov
pop
xchg
dec
xorl
or
xor
dec
orb
fmuls
cmp
test
nop
sbb
xchg
test
call
inc
orb
or
jp
dec
test
lock
in
push
daa
ds
pop
shrb
mov
movsb
mov
or
add
xor
loope
in
pop
aas
or
push
cmp
fadds
mov
iret
xchg
test
idivb
aas
pop
sub
test
inc
aas
xchg
sub
cld
mov
mov
pop
cmp
cmp
cmp
sub
dec
jl
inc
mov
dec
and
lret
adc
xchg
movsl
push
popa
call
jl
scas
ret
push
repnz
dec
dec
add
inc
sub
adc
imulb
jg
cmp
inc
imul
pusha
and
fcompl
mov
fstl
cwtl
sar
loope
jp
out
mov
ds
add
popf
subl
xchg
in
mov
jl
sub
call
aaa
mov
fs
popf
loopne
ss
ss
jmp
in
pop
xchg
mov
shl
dec
aam
inc
je
mov
hlt
clc
clc
cmp
cld
cld
mov
dec
dec
call
jb
adc
inc
in
and
fisttps
sar
cli
cld
ret
mov
adc
in
mov
movb
mov
and
and
cld
repnz
fstl
cmp
pop
fidivrl
and
icebp
lods
stos
das
adc
cmp
cmp
add
adc
jbe
mov
adc
mov
mov
insb
popa
rolb
jp
cmp
punpcklwd
dec
rorl
jo
sub
clc
mov
aas
dec
adc
test
lret
pop
loope
cmpl
iret
cld
aam
notb
hlt
rorb
xorb
je
push
jo
or
fs
xorb
movsb
adcb
ror
leave
imul
pop
aaa
movsb
push
cmp
test
pop
or
xchg
xor
enter
dec
mov
mov
test
dec
jae
inc
jo
jp
pop
jb
sbb
sbb
and
loop
add
clc
xchg
xor
push
push
lock
xchg
xchg
and
in
cmp
inc
adc
and
adc
aas
addb
test
mov
lods
in
loopne
pop
or
pop
pop
mov
adcb
in
roll
and
mov
inc
add
mov
call
lcall
xchg
mov
adc
mov
psubsb
leave
int3
cltd
jb
xor
or
cmp
sub
leave
xchg
bound
push
xchg
pop
call
mov
pop
mov
mov
test
adc
ljmp
enter
mov
xchg
mov
or
mov
dec
adcl
pop
sbb
mov
push
add
xor
in
or
dec
xchg
or
lods
sbb
popf
or
pop
fadds
cmp
xchg
xchg
mov
loop
lock
xchg
popa
xor
xor
call
push
xor
dec
ds
and
mov
sbb
inc
xlat
mov
cmp
mov
std
add
mov
xchg
xor
mov
adc
xchg
mov
xor
and
xor
mov
test
jb
dec
jns
pop
cld
aaa
outsl
xchg
loopne
stos
andb
inc
mov
cmp
xchg
stc
cwtl
and
mov
fs
adc
xchg
xchg
xchg
xchg
and
sbbb
mov
and
xchg
mov
push
mov
jo
imul
arpl
jns
xchg
aas
or
add
add
pop
add
and
test
lock
repnz
stc
mov
xor
sub
test
scas
xchg
rolb
sbb
dec
xchg
pop
dec
dec
gs
outsb
daa
dec
jnp
mov
sbb
and
cmp
das
aas
inc
cmp
push
sub
mov
mov
xor
dec
test
mov
das
ret
fldl
adc
shlb
mov
inc
movsl
call
xchg
shrl
stos
push
out
js
jle
jle
push
sbb
mov
push
enter
fucomp
jecxz
mov
push
xchg
loop
jl
ss
outsb
out
in
sbb
add
sbb
jg
clc
sarb
lods
sub
xor
pop
sub
loope
mov
or
fcom
scas
adc
mov
sbb
xchg
and
jb
add
mov
cvttps2pi
leave
add
mov
or
pop
mov
jp
xchg
rorb
aaa
dec
adc
adc
jl
cld
mov
cli
or
dec
jl
sbb
nop
xchg
pop
cmp
push
hlt
mov
or
ret
leave
mov
cmp
es
pop
lahf
push
xchg
pop
mov
imul
popf
test
lock
cld
xchg
xchg
test
leave
sarl
jp
inc
mov
in
sbb
xor
insb
into
xlat
add
in
loopne
movsl
sbb
cmp
je
mov
stc
push
jl
das
cs
sti
sti
or
mov
call
and
pop
sahf
lock
sub
jnp
cs
je
adc
push
clc
dec
divb
adc
mov
xchg
popw
jbe
xchg
mov
mov
jg
pushf
or
adc
xor
fs
daa
xchg
in
mov
mov
mov
mov
mov
je
jge
test
pop
lret
mov
adc
pop
pop
xchg
sbb
dec
mov
stos
push
lea
out
cld
add
xor
data16
or
fnsave
cld
add
cmp
test
je
cmp
loope
dec
jp
call
jnp
call
rcl
stc
ret
sub
sub
add
sbb
mov
nop
add
cmp
mov
push
cmp
jle
cmp
lcall
aam
mov
das
aas
mov
jl
lock
or
mov
fs
cmp
ror
sub
pop
dec
les
pop
sub
push
loopne
mov
loopne
push
mov
and
mov
pop
out
sub
pop
je
mov
insl
inc
lcall
ja
loope
aad
mov
cmp
adc
mov
lahf
xchg
test
repnz
stos
in
mov
push
clc
repnz
mov
out
jns
mov
into
ret
loop
jmp
cmpb
lds
aas
iret
jns
mov
adc
or
test
xor
pop
jp
pop
xchg
test
adc
lods
js
shl
xchg
sbb
adc
ret
aad
xor
xlat
xchg
int3
add
or
mov
outsl
enter
cmp
xor
jg
jo
leave
xchg
dec
cmp
hlt
inc
push
jl
xchg
fs
cld
mov
in
dec
cmovb
iret
test
fiadds
adc
mov
nop
pop
mov
and
mov
dec
add
andl
jne
orb
pop
popa
outsl
stc
mov
or
jb
je
dec
dec
mov
push
and
idivl
cmp
mov
daa
mov
mov
push
aas
clc
mov
fcoml
nop
das
jle
test
fwait
lcall
daa
push
add
push
sub
dec
fmull
nop
js
ficoml
es
mov
mov
scas
jo
dec
sub
xchg
xchg
lret
jl
push
pop
cmp
mov
pop
rorb
jne
inc
nop
push
addr16
loope
pop
mov
adc
push
test
sub
movsl
ss
and
mov
mov
iret
clc
xchg
daa
push
shll
and
inc
dec
stos
mov
jo
jb
dec
pop
mov
sti
mov
addb
popf
dec
fsubrl
add
repnz
cs
push
dec
pop
hlt
pop
inc
xchg
xchg
out
out
in
mov
cmp
pusha
fcomps
adc
fs
or
hlt
cli
mov
sbb
adc
mov
and
sbb
dec
sbb
cld
lods
mov
mov
cmp
and
cmp
xor
ds
cmp
or
adc
cwtl
or
dec
fdivl
mov
cwtl
lods
addl
sub
or
sbb
mov
aas
js
mov
xchg
test
mov
int
xchg
test
push
inc
rcrb
mov
jle
dec
pusha
loop
pop
in
je
mov
fs
nop
mov
xchg
test
dec
xchg
or
pop
mov
nop
loopne
dec
pop
mov
lock
test
test
mov
int3
sbbl
hlt
stc
clc
cli
ficoml
mov
fs
mov
adc
test
pusha
push
jmp
push
inc
mov
test
loopne
cld
in
scas
push
clc
and
pop
ret
clc
orb
jl
inc
sub
jnp
stos
ret
adc
and
lock
pop
lock
popf
les
pop
pusha
xorb
sarb
dec
js
aas
subb
nop
movsl
jb
dec
xchg
data16
and
lods
add
add
pop
nop
cmp
data16
jno
cmpl
or
pop
mov
int
mov
push
push
jo
outsl
addr16
insl
xchg
outsb
pop
dec
je
bound
iret
jne
cwtl
imul
add
fs
inc
stos
add
sub
adc
jns
add
clc
aam
adc
sub
repnz
decb
clc
pushf
xchg
cmc
ja,pt
out
xchg
jne
jno
push
imul
or
pop
dec
add
inc
lods
adc
loopne
and
or
pop
or
negb
pop
adc
or
sub
add
xchg
je
add
sub
or
or
or
xor
inc
ficompl
xchg
cmp
or
sbb
or
daa
adcb
mov
fmuls
dec
mov
push
push
pop
lock
dec
cmp
or
dec
adc
movsb
cmpsb
gs
add
push
je,pn
gs
mov
sbb
adc
outsl
jb
push
arpl
sub
adc
out
sub
popa
je
jge
mov
inc
inc
sbb
jb
mov
gs
adc
je
sbb
gs
outsl
arpl
cld
and
into
or
adc
scas
sub
dec
and
xchg
rorb
and
insl
adc
add
in
xor
outsl
cltd
mov
xor
insl
jae
jbe
jb
sbb
js
push
push
inc
push
xor
push
or
dec
cmpsb
or
sub
dec
aaa
or
iret
pop
or
push
mov
outsl
shll
or
push
inc
xchg
push
xor
push
add
shrb
dec
pop
popa
les
addr16
push
loopne
in
jl
pop
mov
jp
pusha
arpl
pop
stc
sbb
add
dec
fadd
adc
ret
or
or
ret
sbb
pop
push
cmp
es
adc
jmp
jg
stc
addb
jnp
cli
daa
adc
mov
xor
mov
jb
cmp
push
data16
das
xor
adc
rcrl
jnp
or
mov
and
roll
nop
add
jo
shlb
cmp
jmp
mov
adc
sub
cmp
loope
into
sbb
mov
xchg
mov
xor
pop
enter
sub
mov
ja
pop
data16
les
pop
inc
ljmp
in
or
filds
adcb
fsub
add
adc
fisubs
push
push
push
mov
or
pop
mov
pop
ret
adc
and
or
xor
arpl
js
clc
jo
mov
fimuls
and
call
mov
jmp
out
add
in
arpl
dec
insb
sbb
insl
xchg
xchg
stos
or
xor
imul
in
movsl
adc
data16
fcmovnb
and
xor
leave
sbb
jmp
test
or
inc
ret
mov
adc
or
add
push
jl
xor
aas
inc
or
fldl
mov
fmull
std
out
sbb
or
fwait
sbb
lea
shr
and
int
xor
pop
push
insl
add
outsb
xor
pop
popf
mov
pop
pop
or
test
inc
xchg
mov
jecxz
mov
pop
in
adc
xchg
jb
addb
jg
icebp
pop
xor
ficomps
mov
lds
cmp
adc
sbbl
xor
jmp
sbb
mov
or
push
mov
add
add
jnp
nop
mul
cmpsb
in
add
cmpb
or
adc
bswap
lret
dec
mov
or
mov
pop
leave
pop
jg
xchg
into
movups
addl
loope
outsl
lahf
or
and
test
sbb
or
or
or
lahf
sbb
jns
dec
les
and
sbb
clc
in
inc
lods
stos
inc
adc
addr16
adc
or
xchg
sbb
ss
mov
and
bound
push
mov
cmp
xchg
or
popa
mov
mov
xchg
lock
pusha
insb
add
push
cltd
mov
sub
mov
add
sbb
jbe
enter
sar
add
mov
and
js
fsubr
arpl
xchg
cld
mov
or
xchg
adc
or
pop
mov
sti
sub
xchg
and
pop
inc
movsb
lods
inc
xchg
aaa
lret
lock
pop
push
push
push
test
std
lock
shrl
xor
push
push
gs
or
cmpl
dec
sbb
xchg
in
adc
js
enter
fists
cmp
or
test
not
out
js
xor
les
adc
mov
dec
iret
sub
inc
enter
dec
arpl
or
jg
inc
outsl
int3
inc
xlat
and
mov
or
imul
loop
inc
outsl
aas
pop
packsswb
ret
lret
data16
cmpl
scas
mov
es
jo
push
dec
add
ljmp
pusha
add
dec
int3
mov
cmp
xor
cmp
shrl
js
or
cmp
cli
sbb
xchg
xchg
push
add
mov
dec
lock
pusha
push
xor
xor
mov
sub
aad
mov
sub
test
jo
xor
fimuls
nop
mov
add
adc
pop
add
rcl
enter
ret
push
aas
mov
xor
cmp
adc
test
rol
jge
add
ja
add
jbe
sub
pop
notl
xor
inc
pop
pop
pop
ret
cmp
or
inc
pop
test
push
dec
jge
dec
add
mov
add
or
jne
mov
shl
mov
add
ss
call
test
sub
das
sbb
andl
popf
dec
adc
adc
pop
pop
push
add
and
push
sub
or
jmp
hlt
mov
call
fstpt
inc
xorl
popf
in
sub
push
or
das
add
test
arpl
sbb
call
insw
jg
xchg
pop
sti
test
xor
fst
dec
test
push
push
push
fldt
pop
das
jmp
loope
daa
mov
mov
ss
dec
adc
xchg
mov
call
insb
test
add
add
orl
test
in
push
or
or
push
sub
sub
xor
or
subb
adc
ret
aaa
loopne
cmpsb
pop
pop
push
mov
lret
jecxz
cmp
insb
jno
lock
rorl
pushf
cmp
movsb
pop
dec
inc
cs
mov
or
jg
adc
dec
cmpsl
ds
daa
push
inc
out
pop
adc
and
dec
push
add
or
pop
and
push
insb
outsb
add
mov
sub
orb
insb
or
movl
add
dec
push
cmp
mov
mov
push
mov
cmp
dec
inc
or
or
adc
in
mov
orl
mov
sbb
dec
outsb
pop
cmp
ja
or
inc
push
add
push
inc
pop
dec
imul
data16
dec
dec
loope
push
push
and
int
cmpsb
and
cmc
ret
out
push
inc
jmp
mov
and
adc
push
jmp
push
mov
mov
cmp
fmull
cmp
add
mov
sbb
rolb
and
push
push
add
or
mov
loopne
adc
outsb
test
xor
cmp
dec
xchg
and
rcrl
cld
insl
aas
push
pop
jge
xchg
fnsave
adc
or
lea
adc
pop
pop
adc
test
xchg
mov
add
jecxz
pop
jmp
fdivs
cmc
add
cmp
insl
mov
aam
push
xor
push
xor
movsl
nop
mov
or
cmp
rclb
jl
les
add
ret
mov
xchg
inc
push
and
lods
movb
push
adcl
int3
fs
sbb
adc
cmp
and
sbb
sbb
sti
sbb
or
std
pop
sti
adc
cli
xchg
stc
or
xor
or
or
imul
or
xchg
xlat
je
movsb
imul
jo
adc
cmp
pusha
mov
push
and
mov
jno
sub
inc
loope
adc
mov
xchg
ljmp
xor
rcrl
mov
and
call
insl
test
mov
scas
loope
shl
and
std
andl
jbe
inc
iret
add
cld
xchg
push
xchg
xchg
xor
cwtl
pop
mov
push
xor
xlat
or
adc
xor
xor
xor
mov
je
xchg
fnstcw
pop
and
sbb
dec
sub
clc
sbb
and
dec
inc
add
inc
lods
repz
test
add
cmp
repnz
test
adc
cmp
inc
push
xor
adc
sub
nop
and
jo
in
cmp
sub
test
push
fisubl
adc
add
inc
ds
push
insl
jo
mov
xor
mov
lret
xchg
movsl
mov
mov
xor
ret
add
or
adc
test
xchg
sub
push
adc
lret
or
in
add
xor
or
jl
and
loope
dec
or
add
pushf
push
pop
inc
sub
push
sti
cld
pushw
jo
and
mov
stos
pop
ret
in
add
cmp
xchg
push
push
shr
add
popf
subb
vpackuswb
mov
call
test
mov
jg
gs
xchg
popa
fidivrl
fsubl
mov
xor
or
xor
and
mov
jmp
push
cli
mov
mov
push
adc
mov
add
push
xor
sbb
add
and
and
sub
sub
xor
les
or
adc
adc
movl
je
sti
aam
and
ret
out
mov
out
xchg
stos
sbb
pop
pop
jmp
push
adc
sub
movl
subl
out
sub
push
adc
fs
pop
sbb
inc
cmp
sbb
in
inc
inc
or
jmp
fsubl
mov
popf
push
es
data16
cwtl
and
adc
add
and
fs
pop
dec
mov
and
test
inc
ret
push
add
push
push
es
inc
cld
xorl
clc
and
test
in
sbb
bt
insl
sub
jb
call
mov
mulb
mov
leave
test
popf
rcll
in
adc
clc
repnz
enter
into
mull
push
cmp
stos
mov
rolb
and
pop
adc
adc
mov
mov
inc
adcb
jbe
xor
leave
mov
je
jbe
sub
std
or
lahf
mov
stc
mov
sbbl
rclb
adc
xor
dec
xor
adc
les
add
stc
xor
jo
jle
xchg
fdivl
inc
mov
es
leave
je
dec
inc
dec
int
rcll
stos
inc
and
mov
mov
inc
mov
push
xchg
push
jbe
test
push
negb
pop
lret
popa
sub
xchg
xor
sub
sub
mov
cmp
push
adc
or
or
or
push
popl
incl
test
call
std
adc
add
mov
pop
adcb
xor
or
mov
or
xchg
add
jge
roll
cli
cmpsb
jnp
pop
mov
push
mov
popf
xchg
inc
fs
jmp
sub
js
jmp
jge
or
or
xchg
push
cmpsb
cmc
xchg
jae
imulb
ds
not
mov
andl
lahf
xchg
pop
loop
imul
and
inc
sub
jl
or
dec
or
mov
leave
leave
dec
push
fadd
xor
dec
or
dec
add
sbb
xchg
shrb
mov
data16
mov
mov
lcall
mov
push
adc
inc
int
int3
sbb
or
les
int
xor
cltd
jo
or
or
dec
cmp
int3
inc
push
sbb
cwtd
or
movsl
mov
push
adc
lds
and
shll
fwait
xor
inc
orl
sub
sbb
subb
cmp
adc
adc
int3
or
mov
lret
sbb
paddd
sub
jne
and
js
movsb
sbb
mov
and
or
inc
lock
and
cld
mov
jecxz
data16
enter
pop
xor
push
je
adc
mov
sbb
pop
or
call
inc
fisubrl
mov
xchg
leave
adc
mov
lcall
movsb
sbb
sub
push
fdivrs
add
add
adc
or
mov
int3
sbb
push
push
inc
mov
mov
int3
or
adc
enter
and
dec
imul
push
sti
mov
mov
hlt
xchg
dec
push
es
cmp
sbb
adc
or
bound
or
sub
lret
lock
xor
xor
sbb
ffreep
push
mov
or
or
cmp
or
outsl
mov
or
inc
stos
sub
mov
pop
or
cmpsb
adc
adc
addr16
sub
xchg
movsl
sbbb
in
xchg
int3
or
push
inc
xchg
jb
xchg
arpl
push
std
imul
add
sbb
lcall
not
loopne
clc
arpl
or
and
std
add
fwait
mov
mov
es
or
roll
aam
sub
mov
decl
dec
sahf
add
add
add
movsl
push
outsl
adc
add
lret
mov
nop
jmp
or
dec
aaa
dec
or
mov
mov
pusha
push
adc
mov
and
pop
or
inc
mov
inc
and
test
jne
add
lods
add
or
jb
cmp
and
xor
mov
push
lods
add
int3
sbb
pop
sbb
mov
outsb
mov
subl
jle
stos
adc
xor
or
jmp
scas
cmp
int3
mov
or
sub
xor
xor
sbb
dec
test
dec
jle
and
shll
sbb
or
inc
mov
mov
pop
push
mov
icebp
pop
xor
sub
mov
inc
inc
sbbl
rcll
mov
add
test
inc
adc
pushf
cwtl
adc
adc
sbb
inc
adc
mov
lods
in
or
lock
inc
push
and
push
add
and
repnz
arpl
pusha
dec
and
or
add
or
das
fs
xor
int
or
test
movsl
inc
or
ffreep
sub
adc
jle
push
add
add
add
scas
cld
cmc
aam
xor
adc
ss
xchg
adc
push
lock
adc
and
and
cs
jecxz
inc
mov
inc
sbb
jno
inc
mov
test
lcall
add
inc
insb
and
and
popf
es
aaa
push
push
cmp
push
sbb
jp
test
add
daa
add
sub
loope
pop
and
test
sub
ficoms
or
pop
cs
or
push
push
mov
nop
pusha
dec
xchg
ret
push
js
fnstsw
ja
inc
inc
cmp
lcall
add
and
shll
add
inc
xchg
adc
pop
dec
xor
int3
xchg
cmp
arpl
nop
adc
daa
or
inc
rorb
add
add
dec
and
inc
push
popa
mov
andb
fwait
xchg
lods
and
cld
adc
xor
xchg
imul
mov
dec
testb
les
dec
adc
outsb
dec
test
shl
mov
adc
xor
dec
ds
push
and
jns
mov
dec
fcoml
and
inc
xor
push
adc
jnp
xchg
xchg
movsb
and
clc
adc
xor
xchg
pop
and
jl
mov
ficoml
or
adc
pop
dec
outsl
xchg
jge
mov
mov
adc
and
inc
add
or
sub
dec
adc
pop
dec
fs
jb
addb
scas
adc
xchg
out
cmc
and
inc
adc
mov
adc
dec
dec
push
xchg
data16
xchg
mov
dec
int
jmp
cmp
and
dec
inc
xchg
dec
and
pop
mov
jle
mov
xchg
cmpsl
and
xlat
adc
and
dec
cld
mov
cmp
push
and
inc
xor
mov
dec
and
dec
popa
xchg
insb
and
test
and
dec
into
xchg
fsubl
ljmp
mov
xor
dec
push
xchg
bound
jne
jg
mov
dec
mov
ret
inc
fsubrp
mov
adc
add
and
xchg
cmp
dec
inc
push
mov
andl
and
ret
adc
and
dec
out
clc
adc
and
sub
push
and
dec
jo
jl
mov
mov
rcll
sti
pop
inc
inc
adc
and
dec
dec
xchg
push
and
insb
jns
xchg
xchg
and
dec
lods
xchg
mov
loop
lock
and
inc
add
dec
and
inc
push
mov
insl
and
dec
xchg
mov
mov
adc
and
dec
in
xchg
cli
sbb
inc
mov
sub
mov
adc
and
dec
push
xchg
pop
and
jae
mov
lods
xchg
mov
loope
in
adc
and
sbb
inc
inc
push
mov
insb
and
dec
xchg
lods
mov
and
dec
ljmp
and
push
inc
daa
xor
pop
dec
imul
adc
jecxz
lock
decb
inc
sbb
inc
dec
push
xchg
popa
and
jge
mov
dec
mov
inc
call
adcl
dec
ds
dec
and
gs
jg
mov
dec
test
mov
les
mov
adc
and
add
dec
es
xor
inc
inc
dec
pop
mov
ja
test
xchg
movsl
and
adc
and
inc
push
dec
or
xchg
aaa
push
sbb
sbb
mov
iret
pushf
or
or
mov
or
xor
pop
sub
rol
data16
in
inc
clc
inc
cld
mov
iret
and
iret
and
and
mov
leave
test
pop
iret
mov
aaa
popf
sub
pop
movsb
out
out
out
fs
mov
pop
push
xchg
and
repnz
repnz
lret
stc
or
fldcw
rorl
and
rcll
adc
and
movsb
xchg
int3
and
cs
cmp
xchg
xor
sbbb
adc
jo
inc
add
dec
xchg
sub
xchg
dec
add
jo
add
push
mov
push
rcrl
into
and
cmp
jp
sbb
cmp
out
and
and
or
ja
dec
mov
or
sbb
pop
jno
aaa
popf
cmp
sbb
ret
dec
sbb
jo
imul
outsb
add
pop
cmpsl
sbb
sbb
xor
cmp
scas
out
cwtl
sysexit
dec
ss
xor
push
or
inc
or
or
pop
add
jo
dec
data16
loopne
pop
push
jle
xor
js,pn
jp
jl
jle
dec
pop
mov
jo
pop
in
mov
sbbl
in
scas
jle
jb
je
dec
mov
pop
push
push
clc
icebp
mov
mov
lret
add
test
xchg
add
test
mov
xchg
sub
mov
mov
cwtl
sahf
mov
aam
cmpsl
mov
pop
mov
outsb
mov
clc
cwtl
stos
nop
shl
repz
mov
outsb
mov
loopne
mov
or
and
lret
bound
mov
xor
arpl
cmc
ret
sub
cmp
or
and
mov
bound
push
push
mov
rcll
push
loope
jmp
dec
stc
dec
stc
push
stc
dec
stc
push
stc
push
xor
stc
xchg
rcrl
mov
mov
shrl
pushf
sarb
inc
dec
ret
rorl
ret
rolb
andb
jmp
cmp
sub
sub
cmp
xlat
mov
cmp
push
dec
pop
fadds
cmp
popf
sbb
sbb
adc
mov
push
addl
add
add
hlt
pop
or
clc
cs
or
ret
testb
js
add
jle
jo
jle
jg
jle
jle
jle
jle
jl
dec
push
pop
jle
push
jle
jle
jle
dec
adc
jle
dec
scas
jb
jle
dec
mov
jle
lods
imul
mov
mov
dec
lret
jle
xor
das
xorb
and
fiaddl
cld
mov
inc
push
mov
pushf
inc
mov
dec
popa
std
popf
push
imul
and
je
ja
jecxz
gs
outsl
pop
cmovae
stos
jne
sub
std
mov
push
aas
outsl
imul
mov
outsb
outsw
cmpsb
adc
fisubs
adc
xor
arpl
adc
bound
xchg
adc
es
inc
out
adc
outsb
arpl
je
ja
dec
dec
popa
insl
scas
aad
mov
xor
jbe
push
imul
mov
sti
fsubs
ja
adc
lods
stc
jae
jbe
push
test
js
outsl
addr16
jmp
push
jbe
adc
mov
mov
out
cmp
in
push
mov
or
mov
push
dec
dec
push
adc
outsl
ds
cmc
ss
arpl
adc
and
inc
jne
clc
jae
pop
dec
push
fnstenv
test
jae
push
dec
shlb
add
out
pop
rcll
dec
push
ds
jns
adc
cmc
dec
inc
stc
cmp
and
pop
ficoms
adc
loope
adc
sub
daa
push
cltd
sub
icebp
dec
dec
sub
sub
xchg
sub
out
mov
inc
add
dec
inc
fisttps
ds
movsb
inc
ss
fs
cltd
adc
dec
inc
jne
xor
arpl
xchg
push
xor
sbb
push
adc
mov
push
inc
lcall
out
cli
rolb
sahf
cwtl
jae
rcll
dec
cmpsb
dec
pop
pop
sqrtps
scas
decl
aad
idivl
adc
adc
jbe,pt
cmp
push
movd
mov
adcb
movsb
jns
das
test
popl
leave
movsb
fistl
xchg
adc
inc
pushf
and
sahf
cmp
jb
jns
sub
lret
fisubrl
mov
pop
pop
jo
adc
std
inc
clc
sub
inc
iret
jo
imul
xchg
adc
test
push
je
sub
scas
adc
int3
pop
mov
mov
leave
inc
or
adc
popa
lahf
jp
sahf
adc
adc
dec
inc
outsl
loope
fs
adc
cmp
push
movsl
sub
sbb
rcrb
xchg
push
push
push
shll
xor
sub
lods
jae
loop
iret
dec
xor
jl
enter
icebp
push
outsb
adc
lods
sbb
pusha
push
xlat
push
scas
aaa
sub
inc
cli
inc
iret
dec
inc
mov
jb
push
ss
mov
inc
fisubl
xchg
xor
push
ljmp
in
test
mov
push
pop
and
cld
push
mov
dec
push
push
cmpsl
adc
xchg
sub
cmpl
jecxz
outsb
xchg
sub
jb
cmpsl
cmpsl
adc
sbb
adc
dec
xor
in
insb
xor
xchg
cmp
sbb
push
dec
pavgb
xor
cmp
dec
mov
cwtl
xor
pop
or
jo
and
dec
add
xchg
sub
sar
push
mov
xchg
add
fistpll
xchg
std
cli
push
std
sti
hlt
cmp
pop
pop
repz
repz
repz
aad
aam
dec
hlt
ficoml
dec
neg
adc
mov
push
inc
imul
sbb
or
add
sbb
add
sbb
add
sbb
out
cmpsl
cli
xor
sbb
jnp
sbb
negb
xchg
add
sbb
push
std
shr
test
call
or
gs
test
or
adc
bound
adc
or
jp
or
inc
xor
xor
cmp
adc
mov
sbb
sbb
dec
sbb
mov
icebp
xor
and
imul
adc
inc
js
adc
dec
xor
dec
aaa
push
or
clc
jbe
or
inc
or
cmp
sbb
movsb
pop
cmp
dec
push
cmp
sbb
cmp
sbb
mov
imul
imul
sbb
cmpsb
sbb
xor
xor
adc
push
ds
sub
push
dec
adc
inc
jno
xchg
pop
movsl
add
or
outsb
sub
adc
sbb
rorb
outsb
jae
inc
dec
jne
bound
xchg
adc
sbb
mov
rorl
js
sbb
rcr
dec
xorl
jne
sbb
rcrb
cmp
sbb
dec
sbb
sbb
outsl
ficompl
inc
outsb
mov
insl
imul
shlb
xor
sbb
inc
int
dec
sarb
fbld
out
xchg
cmpsl
fcom
in
imul
xor
shl
enter
divb
std
xchg
mov
xchg
shl
jnp
cmp
jge
ds
lahf
arpl
mov
jnp
insl
cli
xor
sbb
mov
out
nop
test
xor
sbb
push
fs
jmp
popf
into
lods
adc
outsl
fs
xchg
out
push
or
fst
outsl
sub
push
dec
cs
lock
sbb
pop
adc
cmp
mov
leave
icebp
mov
jnp
insl
cli
xor
sbb
mov
push
or
jae
cmp
sahf
sub
and
dec
icebp
movsl
and
fwait
icebp
jle
mov
mov
call
sbb
aaa
enter
mov
sbb
sub
xor
leave
adc
ljmp
xchg
dec
and
xlat
cltd
int3
xchg
xor
jg,pn
das
jnp
cmpsb
xor
in
xor
sub
mov
xchg
add
mov
inc
jge
inc
jnp
mov
inc
sti
sub
dec
inc
aas
dec
imul
rcrb
repz
imul
aas
lahf
arpl
cmpsl
fcom
in
imul
cmp
outsl
shll
jge
aas
fbld
shr
imul
lea
fbld
cli
mov
out
push
jg
ds
lahf
jecxz
shl
clc
shr
imul
jge
ds
fbld
je
and
std
std
imul
push
outsl
push
sub
inc
push
arpl
test
jne
test
push
xor
dec
lds
push
in
roll
test
pop
cmp
mov
sbb
into
nop
pop
add
lret
test
je
stos
xor
out
add
adc
or
push
add
cwtl
loope
push
ret
call
stc
mov
inc
lds
push
in
jb
ror
pop
mov
daa
clc
pop
movsl
xor
hlt
push
out
in
rclb
or
andl
orb
clc
mov
adcl
and
pop
cmc
xorl
or
in
mov
call
orl
and
sar
push
call
jmp
nop
aas
fidivl
stos
and
push
aaa
bound
xor
pop
insb
stos
sub
and
enter
les
ret
mov
or
cmp
or
daa
inc
add
mov
stc
jmp
in
dec
pusha
adc
add
mov
or
push
ja
test
fisttps
jle
bound
push
sbb
incb
xchg
loopne
mov
sub
insb
leave
mov
sbb
or
stos
or
loopne
adc
lea
adc
aad
sti
pusha
dec
rclb
movsb
or
cwtl
inc
ret
lcall
mov
cmp
push
lock
jne
mov
inc
mov
std
push
dec
dec
sbb
xchg
das
in
ja
pop
lea
push
or
push
cmc
jbe
cmp
mov
pop
pop
pop
sbb
xor
xor
add
cld
jb
incl
flds
lock
cmp
je
adcb
mov
push
push
push
call
jmp
mov
inc
jne
arpl
dec
mov
pop
mov
adc
and
jp
xlat
sbb
loopne
adc
repz
lods
shrb
aaa
stos
scas
pushf
fsubl
repz
sarb
xor
lcall
jp
add
add
push
cli
xchg
fdivrl
mov
or
push
push
mov
insb
and
mov
leave
jg
dec
dec
mov
xchg
mov
push
push
lea
imul
loopne
adc
jbe
test
orl
push
lret
push
shr
jecxz
rep
fcmove
shrl
fsubl
loopne
test
jmp
mul
push
mov
xchg
adc
push
lahf
pop
call
cmp
xor
and
xchg
mov
aas
or
in
mov
rclb
dec
add
pop
flds
out
fscale
lahf
mov
jo
sub
pop
nop
push
out
mov
jmp
push
mov
rcrl
mov
roll
or
sti
cli
ja
outsb
stc
adc
enter
inc
cmp
idivb
jl
sub
ljmp
add
adc
mov
inc
add
and
gs
andb
mov
clc
jg
mov
sub
andb
push
cltd
xor
sbb
orb
add
dec
mov
mov
jmp
in
cmp
push
ss
pop
rol
jbe
out
push
jbe
cmova
shr
test
cmc
lock
test
fnstenv
shr
sbb
int
rolb
loopne
roll
pop
fwait
sbb
mov
notl
test
xchg
addr16
test
xchg
sbb
ds
cmpsb
sub
mov
movsl
sub
xor
mov
and
jne
test
ret
inc
les
mov
call
add
push
jo
inc
mov
adc
mov
or
xor
adcb
push
adc
test
dec
mov
fists
jb
xchg
xor
mov
jle
loope
test
pop
adc
push
mov
xorl
fcompp
leave
add
pop
mulb
xlat
xchg
adc
inc
jle
push
test
push
xor
or
xor
pop
fs
lahf
sbb
repnz
push
push
xor
push
mov
fiadds
pop
pop
cmpsb
pop
cmp
push
mov
pop
loopne
aaa
adc
or
jmp
xor
add
mov
jo
bound
aam
push
xor
sub
jmp
mov
xchg
cmpl
xchg
mov
dec
jle
xor
and
cli
dec
cmp
adc
inc
dec
inc
int
jae
sub
push
daa
add
clc
sbb
or
xchg
jns
movsl
add
and
and
and
scas
jbe
adc
jp
sub
and
jecxz
push
ret
sahf
jge
lea
movsb
ret
fildl
jp
fcoml
loope
mov
in
insl
or
add
push
jno
jbe
ds
cmpsb
inc
ficomps
push
pop
iret
xchg
aas
sbb
addl
mov
adc
imul
xorb
cmp
sub
lea
jb
dec
add
imul
es
jp
sub
aaa
sbb
out
js
sub
les
mov
push
adc
xor
sahf
dec
cld
push
es
or
outsl
sub
pop
adc
xor
push
push
add
mov
mov
jbe
test
add
push
push
sbb
sub
sbb
pop
mov
cltd
push
xchg
push
inc
mov
mov
xchg
into
xchg
xchg
filds
ds
jle
mov
mov
or
adc
and
mov
xor
add
fs
cld
test
jp
ret
adc
lods
enter
adc
gs
mov
cmpsb
movsl
int
push
popf
popa
leave
in
sbb
cmpsb
fstl
call
push
xor
movsl
lock
bound
and
mov
or
jae
jne
mov
and
fisttps
push
push
cld
insb
test
sar
outsb
adc
cmp
into
adc
mov
pop
outsb
sub
jne
data16
inc
cmp
mov
add
jmp
lds
inc
inc
into
dec
cltd
shrb
jb
sub
dec
les
sbb
add
adc
xorl
mov
test
mov
pop
or
sbb
inc
call
andl
inc
or
ja
adc
push
addr16
adc
fs
data16
push
nop
pop
adc
xchg
filds
push
adc
stc
push
pop
fadds
pop
int3
inc
sahf
adc
aaa
movswl
xchg
lahf
cmp
rcrb
inc
add
or
dec
add
mov
out
adc
roll
fstl
mov
sbb
cmpsb
das
ret
cmp
cmp
adc
xor
dec
push
clc
push
aad
inc
pop
adc
sub
sub
sub
jmp
es
pop
movsl
sbb
ret
mov
adc
adc
mov
shrl
push
dec
mov
sub
roll
xchg
lds
inc
mov
jnp
dec
mov
or
or
and
cwtl
dec
addr16
int3
mov
fildll
mov
data16
movsb
xchg
aaa
mov
inc
adc
dec
dec
and
bound
xor
outsb
loop
jne
mov
adc
adc
leave
aad
js
inc
mov
fldenv
sub
push
les
sub
pop
or
add
je
loopne
out
dec
les
adc
lock
ja
fistps
xchg
or
ja
push
adcb
sahf
dec
xor
lds
xor
push
cltd
sub
inc
adc
enter
pop
and
and
cmpsl
mov
dec
cmp
add
push
jge
and
test
dec
add
addr16
add
ja
lock
lcall
int
scas
jl
stc
fcoms
ficoml
aam
decl
clc
cmp
mov
test
aad
mov
sarl
mov
mov
and
test
fwait
fs
jns
js
cltd
negb
pop
sub
mov
mov
mov
and
rolb
test
dec
or
dec
rorb
aam
loope
in
int
push
push
pop
push
mov
mov
scas
sub
inc
pop
mov
nop
xchg
mov
movsb
dec
sbbb
jae
sbb
movsl
add
icebp
or
push
pop
dec
push
add
jle
cmp
movups
pop
and
fs
adc
or
pop
pop
dec
cli
insl
in
or
jmp
xor
imul
ret
xchg
adc
rcrl
or
dec
jg
jae
mov
or
imul
push
pop
gs
cmp
xchg
lahf
jb
mov
adc
adc
dec
les
dec
xor
xor
push
mov
nop
fcoml
mov
mov
or
mov
or
mov
ds
and
js
inc
enter
adc
nop
mov
mov
mov
cld
adc
cltd
dec
shll
fnsave
push
inc
cmp
push
inc
sti
inc
sub
outsl
test
rorl
adc
and
and
or
repz
adc
push
adc
rol
and
js
inc
lret
movsl
sti
mov
nop
mov
add
adc
insl
or
mov
sub
or
out
int
dec
push
cmp
movzwl
push
dec
movsb
or
inc
cltd
hlt
repz
adc
jmp
leave
icebp
mov
ficoml
cmp
xchg
lret
or
leave
adc
dec
sub
dec
inc
xor
rclb
int3
fists
popf
or
mov
mov
sub
and
je
roll
inc
mov
bound
mov
inc
or
fcmovne
jne
lea
fsubrs
add
sbb
pop
fsubl
add
mov
adc
sahf
fcompl
dec
mov
cmp
insl
mov
bound
aas
mov
int3
inc
leave
or
stos
repnz
mov
or
cmpsl
mov
cmp
pop
mov
and
aas
test
imul
dec
or
addb
repnz
adc
dec
lock
xorl
shl
mov
and
lock
cld
fbstp
filds
inc
fchs
faddp
jmp
das
fsubrl
daa
mov
ficompl
aam
cld
sub
or
fstl
cs
xchg
cmp
orw
fwait
or
fmul
sub
inc
mov
inc
int3
cmp
adc
mov
call
jmp
jle
jmp
mov
cmp
jne
dec
je
ja
jmp
test
incb
cmp
cmp
jne
cmp
stc
sbb
es
push
push
adc
stos
pop
rorl
cwtl
daa
call
rclb
lahf
inc
mov
in
pop
sbb
pop
out
sbb
ja
lcall
push
cltd
sbb
or
ret
int3
adc
cmp
jno
idivb
sbb
sbb
cmp
int3
sbb
inc
sub
nop
mov
xchg
and
xor
adc
and
cmc
mov
sub
fyl2x
sbb
mov
push
push
adc
xor
sbb
and
xorb
mov
jno
lret
jns
pop
and
xchg
inc
test
xor
dec
std
cltd
jno
sbb
cmp
repnz
cltd
sub
push
xchg
or
popl
mov
adc
and
dec
sti
mov
push
adc
adc
xor
jae
or
mov
and
dec
setno
sbb
fsubrs
lret
call
sar
cli
pop
andb
pop
dec
xchg
sbb
and
sbb
pop
dec
jae
inc
mov
dec
dec
mov
and
popf
int3
sbb
pop
jnp
push
movsl
les
xor
enter
aas
and
imul
lcall
inc
and
mov
icebp
adc
inc
dec
push
xchg
push
pop
data16
mov
fstl
dec
mov
les
in
loope
inc
adc
cmp
dec
and
dec
outsb
xchg
xorb
inc
xchg
and
dec
ret
xchg
shlb
loope
pop
sbbl
xor
dec
and
dec
pop
xchg
jge
xchg
or
mov
lock
pop
pop
add
outsb
sbb
inc
push
fs
or
jge
test
lods
inc
mov
inc
pop
cltd
int3
adc
or
mov
adc
push
add
xor
or
movsl
dec
aam
cld
xor
popa
call
insl
or
mov
daa
popa
lcall
cmp
pop
cmp
out
and
stc
hlt
inc
cmc
das
add
or
or
or
jbe
add
adc
adc
push
or
add
pop
sbb
sbb
sbb
sbbl
and
sbb
and
inc
and
sub
sub
sub
sub
sub
xor
jmp
or
aaa
cmp
adc
cmp
add
xor
add
inc
or
inc
dec
adc
dec
add
dec
dec
dec
push
inc
jmp
or
push
push
push
push
push
and
inc
pop
pop
in
pop
add
pop
pusha
push
movsb
or
inc
ror
arpl
cmpsb
push
decl
sub
fcomp
fs
cwtl
inc
data16
adc
or
cmpsb
or
or
sbb
imul
push
outsl
push
jo
jno
jae
je
jbe
xchg
dec
test
jp
jl
push
jle
push
jg
andb
addb
test
inc
mov
mov
lea
add
xchg
xchg
xchg
xchg
xchg
dec
xchg
or
cwtl
cltd
and
out
add
fwait
sbb
sbbb
sbb
add
test
lods
sbb
mov
inc
lds
mov
adc
cmp
mov
enter
dec
pusha
lahf
jmp
sub
mov
xchg
js
popf
push
out
push
add
ret
dec
mov
xor
or
js
sbb
setg
mov
int
mov
movntq
out
mov
shll
add
xor
or
rcrb
mov
ret
push
cld
call
xor
or
mov
lea
into
ja
loopne
sarb
fsubr
loop
or
adc
out
clc
loop
mov
pop
sahf
mov
cmp
adc
mov
shrl
jge
push
add
lea
and
push
loop
or
ret
sbb
push
add
das
test
jmp
sbb
or
test
movsl
ret
and
push
aas
xor
jne
mov
call
sub
popf
jns
test
sar
stc
adc
adc
pop
cmpsb
xchg
add
or
add
mov
daa
lahf
cmpb
cld
rolb
or
mov
cmp
lahf
les
fidivl
outsb
nop
pop
into
arpl
ljmp
rcl
cmpsb
rcll
ss
das
das
xor
test
ss
outsb
adc
jmp
adc
adc
adc
stos
adc
adc
mov
aam
or
icebp
inc
leave
cs
mov
xor
jg
xchg
ljmp
xor
popa
fimull
mov
cltd
cmp
std
and
xchg
sbb
jge
or
sub
popf
or
fisubs
xchg
shlb
fisttpll
clc
pop
xor
hlt
adc
mov
jb
or
sti
cmp
xchg
sub
inc
sbb
loope
jo
les
rolb
ret
push
mov
push
les
mov
sti
push
lods
push
lds
test
adc
xchg
in
or
sbb
or
xchg
les
outsb
xchg
icebp
mov
sub
lret
adc
insb
icebp
andl
sbb
pushf
xchg
and
lea
push
cwtl
jbe
dec
cmp
add
je
test
mov
pushf
sub
subl
jmp
mov
cmc
push
push
xchg
or
pushf
add
lock
pop
test
test
inc
jo
popf
jns
jae
add
add
fldl
pop
and
sub
arpl
nop
outsl
jmp
lea
cld
jnp
push
add
push
aas
out
mov
sbb
das
mov
add
push
and
jbe
mov
dec
pop
adc
jle
das
fnsave
mov
call
aam
cmp
enter
cltd
add
call
push
ret
push
pop
cmp
in
cmp
pop
pop
pusha
bnd
push
testb
sbb
jae
in
mov
inc
jge
jle
test
fldt
sbb
adc
adc
test
shr
or
icebp
push
clc
adc
jo
test
and
add
and
into
jo
lcall
sbb
mov
cwtl
xchg
adc
cmp
pop
enter
neg
sbb
and
mov
movsb
fstl
dec
test
and
push
mov
xchg
xchg
push
cmp
or
xchg
mov
test
aad
sbb
je
test
add
sub
add
pop
ret
lds
in
xchg
enter
loopne
pop
add
xor
push
in
scas
push
mov
sub
call
out
rolb
movzwl
xchg
or
outsl
or
ret
jno
call
xchg
lock
fsub
pop
push
pop
aam
scas
and
adc
inc
test
pop
lea
dec
push
orl
jb
adc
movsb
push
push
dec
pop
push
push
mov
inc
mov
fists
dec
loopne
shlb
mov
leave
jl
mov
inc
imul
sbb
mov
cmpsb
xchg
xor
xor
push
and
dec
sbb
in
dec
cs
inc
cmp
aaa
cmp
adc
stc
sbb
mov
push
dec
or
xor
adc
roll
or
xor
cmp
lods
mov
add
xor
int3
subl
pusha
and
ss
mulb
sbb
fcompl
xor
addb
pop
add
js
xchg
shlb
and
shrb
aas
mov
into
lods
add
push
add
rolb
or
jg
dec
mov
fwait
repnz
jb
ss
mov
das
pushf
popf
stc
movsl
dec
jne
adc
sbb
mov
sub
add
sbb
pusha
testl
call
enter
xor
ss
cmp
xor
adc
aaa
xor
int3
adc
push
and
add
push
mov
jbe
mov
cmp
lock
mov
ljmp
mov
das
ffreep
shlb
pop
psrad
lahf
mov
aas
dec
pop
addr16
stc
push
sbb
and
inc
adc
call
cmp
dec
cmp
mov
push
push
xor
dec
mov
adc
push
push
inc
xchg
push
jmp
imul
leave
les
test
aaa
bound
xchg
mov
stos
cmp
mov
leave
lret
cmp
into
mov
push
jnp
movsb
mov
push
add
mov
jae
cmp
adc
push
popf
rol
adc
neg
and
adc
leave
push
xchg
and
push
data16
mov
aam
dec
sub
cmp
inc
push
xchg
loop
ds
incl
test
rorb
jns
inc
mov
mov
jl
pop
movl
fiaddl
dec
stc
adc
je
mov
dec
adc
add
or
push
inc
add
test
push
pop
nop
test
lods
lret
sub
sbb
jge
dec
mov
cmp
adc
sbbb
add
push
les
mov
sub
sub
insb
out
cld
js
push
nop
scas
call
fs
xor
add
mov
leave
orl
fdivs
or
data16
jno
test
and
or
jl
fs
mov
inc
lret
dec
je
nop
dec
or
adcl
xor
add
rorl
cmc
std
xor
enter
adc
adc
sbb
jle
pushf
movsl
sbb
test
lock
neg
sub
sbb
and
dec
test
push
add
lea
xor
adc
int3
pop
cmpsl
mov
xchg
or
push
xchg
lea
sahf
xor
jno
movsb
call
pop
adc
cmpsl
jbe
sub
lret
add
or
loopne
lahf
lret
add
scas
ret
aaa
mov
ss
scas
ret
fiadds
cmp
add
xchg
aas
xchg
dec
call
jge
pushf
fnstenv
pop
xor
jo
or
jne
mov
pop
push
jb
jle
cwtl
stos
push
add
inc
stc
cld
xor
into
adc
mov
dec
in
mov
inc
ficoml
test
mov
insl
test
mov
adc
movsb
adc
inc
loope
or
mov
insb
call
arpl
test
sbb
sub
xor
lea
mov
inc
cmp
dec
dec
pop
loope
mov
arpl
loopne
and
mov
ds
fstpt
outsl
sbb
cs
dec
pop
cld
fimuls
sbb
leave
sbb
adc
dec
dec
cmp
cwtl
inc
mov
cli
outsl
and
lods
inc
adc
je
add
cmp
cmp
dec
sbb
push
or
jge
or
xorb
push
call
jbe
aas
pop
andb
pop
lcall
xor
sarl
cmp
adc
repz
subb
xchg
sbb
flds
add
xchg
jmp
fbld
sbb
ljmp
adc
sahf
scas
test
dec
add
push
sub
sbb
add
pop
push
inc
cmp
cld
push
sub
mov
lcall
popf
pop
addb
adc
imul
xchg
or
sub
leave
mov
ret
push
sbb
pop
ret
cld
mov
dec
pop
outsl
xor
inc
inc
pop
cltd
push
and
jne
test
adc
dec
int
sahf
push
add
ss
fwait
jmp
cmp
jae
outsl
pop
dec
xchg
pusha
xchg
add
adc
subl
in
push
hlt
or
cmc
cmp
cmp
hlt
sub
cmp
mov
or
jg
sub
jo
cmp
test
rcrb
mov
mov
pop
add
popf
rclb
dec
imul
dec
mov
inc
and
jl
mov
test
jb
sbb
adcb
fbld
cmpsl
cmp
adc
dec
dec
add
adc
xor
daa
add
cmp
inc
pushf
cmp
mov
jae
add
and
sub
or
add
add
stos
jo
sub
cmp
rcrb
fstps
fdivs
loope
adc
sub
adc
mov
adc
or
imul
cwtl
push
and
in
or
or
cmp
pop
inc
testl
mov
clc
cwtl
push
sbb
lcall
ret
jmp
popf
into
sub
cmpb
pop
fisttpl
or
cwtl
sbb
shlb
or
push
xchg
roll
add
pop
adc
nop
xor
int3
ficompl
sbb
shlb
lods
cli
push
sbb
push
sti
adc
inc
and
movl
ljmp
xchg
sbb
pop
xor
push
jmp
outsl
adc
adc
lcall
sahf
enter
cld
push
push
push
sub
jbe
ficomps
inc
sub
adc
or
jne
pop
repnz
or
into
in
sbb
cmp
je
imull
mov
pushf
test
fmull
dec
adc
cmc
enter
cs
push
shufps
or
lock
jne
push
ds
hlt
or
aam
ljmp
push
dec
cmp
lcall
inc
dec
mov
inc
adc
cmp
sbb
fmul
imul
jecxz
adc
sbb
jno
fdivrs
add
cs
rorb
mov
shr
and
neg
adc
adc
pop
mov
nop
pop
inc
and
dec
adc
mov
dec
dec
jecxz
sbb
mov
cld
jbe
or
and
adc
cmp
pop
hlt
nop
daa
dec
sbb
daa
decl
ds
add
cmp
jb
jecxz
pop
mov
cmp
rorl
js
mov
mov
ret
jo
stos
jne
push
in
fdivrs
into
mov
and
icebp
aam
ret
in
ret
adcb
pushf
call
inc
push
das
daa
dec
xor
lock
or
inc
adc
stos
pop
js
shlb
mov
cmp
jne
push
pop
mov
loop
inc
dec
xchg
es
rcll
push
fcoml
addr16
adc
push
jl
pop
jmp
inc
xchg
int3
cltd
and
fcompl
mov
roll
xchg
fidivrs
and
scas
dec
adc
ds
test
dec
mov
adc
mov
add
xor
pop
addr16
or
js
loopne
add
adc
push
push
sub
mov
inc
inc
pop
lds
test
add
add
jg
fisttpll
dec
xor
adc
enter
push
push
xchg
sub
add
imul
or
inc
sti
and
inc
test
loope
push
jmp
xor
push
or
divb
add
subl
ja
jge
sbb
and
incb
or
popf
mov
cmp
sbb
jne
push
pop
rcrb
and
xor
cmp
add
xor
or
orl
enter
lret
insb
mov
add
inc
or
push
icebp
pop
call
xchg
push
inc
inc
mov
cmp
lods
sbb
int
in
cmp
aam
adc
dec
and
rorl
pop
mull
lea
int
fsubs
pop
inc
pop
lret
movsl
popa
adc
dec
sub
dec
loop
loope
das
aas
xchg
mov
pop
lock
mov
cmpb
xchg
or
ret
xor
xor
inc
jns
cwtl
iret
or
jb
pop
add
mov
dec
push
cld
out
subb
sar
cmpsl
push
sub
push
dec
mov
negl
in
test
mov
shrb
out
nop
and
push
call
dec
hlt
xor
dec
push
or
ds
pop
inc
adc
add
lea
std
inc
mov
ffree
loopne
add
adc
add
add
popa
mov
adc
adc
adc
js
pop
sub
mov
mov
mov
sub
adc
push
adc
addb
movb
xchg
je
and
sub
popf
xor
test
xor
lods
mov
je
xor
mov
pop
jbe
les
or
add
push
jg
mov
andl
push
rorl
andl
add
jg
out
pop
fidivrs
cmp
fmul
pop
pop
adc
add
push
nop
shlb
sbb
xchg
cld
lock
mov
sub
sbb
or
aas
int3
test
mov
mov
sub
test
insl
and
xchg
lds
pusha
xchg
cltd
mov
xor
mov
bnd
popf
lods
jno
aam
imul
mov
cmp
jbe
test
add
mov
or
sbbl
fs
loope
bound
outsl
or
in
jl
rolb
clc
call
inc
mov
je
lds
test
jle
imul
xchg
iret
or
pop
mov
inc
lods
sub
lods
aam
push
push
pop
call
js
test
mov
and
adc
push
stc
or
mov
add
cmp
ret
or
pop
jb
mov
scas
push
fcom
cwtl
leave
push
in
scas
add
cmp
mov
sbb
add
xorl
or
loopne
inc
sar
jb
mov
push
or
shll
xchg
js
inc
int3
add
or
sbb
jecxz
std
push
fstpt
dec
push
or
popa
insb
push
pushf
adcl
dec
pop
pusha
or
in
push
std
imul
cli
hlt
movsb
prefetchnta
jns
xor
out
adc
mov
lds
lods
out
loope
lea
and
pop
jne
inc
xchg
xor
dec
adc
dec
sbbl
adc
cmp
cwtl
shrb
fsts
inc
and
cmp
pop
cmp
mov
ds
or
and
js
pop
xor
hlt
sub
xor
in
and
test
add
movl
repnz
push
shrb
adcb
cwtl
mov
ret
imul
xchg
jae
adc
jae
xchg
sub
or
mov
sbb
cmp
push
pop
pop
mov
or
mov
jle
jns
sbb
sub
lods
jbe
clc
mov
cld
mov
dec
cmp
jmp
movsb
into
push
jne
xchg
sbb
lods
stc
test
call
notl
sbb
iret
sub
push
or
mov
add
mov
jnp
or
push
stos
mov
xchg
inc
inc
jle
cltd
test
ja
xor
or
push
xchg
fs
add
jmp
lea
dec
add
testb
inc
xchg
xchg
jle
push
sub
inc
test
jmp
and
push
mov
call
aaa
andl
mov
xchg
dec
shrb
lea
pop
out
test
pop
adc
nop
pop
clc
rclb
shrb
nop
je
inc
repz
pop
gs
aaa
xchg
ret
or
mov
adcl
jle
dec
inc
or
push
test
mov
and
insl
or
inc
repz
xor
insb
gs
sbb
and
jnp
imul
pusha
xor
adc
push
pop
jg
pop
and
sub
sbb
pop
cmp
xchg
inc
loop
insb
push
and
xchg
push
test
pushf
pop
pop
adc
jmp
adcb
inc
loop
outsl
inc
sub
ljmp
and
add
mov
movsl
push
and
lods
inc
dec
sub
xor
fs
add
mov
leave
lret
jno
jno
add
rcl
aad
xlat
add
aas
mov
loope
push
jecxz
inc
inc
push
pop
cltd
test
inc
push
mov
notl
std
mov
xchg
add
test
pop
jnp
inc
xor
cmp
andb
mov
into
xor
in
cmp
clc
jle
push
fwait
adc
movsb
inc
daa
add
add
scas
pop
dec
dec
popa
inc
push
mov
push
xchg
cmp
inc
leave
cmp
inc
rorb
and
push
and
and
mull
add
inc
or
sbb
leave
and
add
and
scas
orb
xchg
leave
adc
cmp
cmp
xlat
cmp
dec
and
imul
push
sub
test
mov
inc
cmc
lret
pushf
adc
icebp
inc
dec
sub
dec
adc
cli
adc
add
ret
test
adc
add
or
add
add
push
add
jecxz
inc
push
mov
mov
pop
mov
jle
inc
add
mov
sub
add
leave
into
jae
fmull
scas
xor
mov
xchg
pop
int
inc
mov
fidivl
jno
lahf
pusha
in
add
das
pop
cli
pop
mov
cmp
sub
fwait
inc
wbinvd
inc
add
scas
mov
mov
inc
add
cmc
stc
enter
int
mov
mov
mov
rcll
sti
mov
in
add
sbb
or
and
xor
add
add
and
notl
les
inc
inc
mov
xor
test
cmp
and
mov
mov
mov
inc
mov
xchg
cmpsb
inc
add
or
scas
scas
push
std
jbe
adc
or
int3
jmp
sub
cltd
ds
out
or
cs
add
movsl
mov
ret
cmpsb
mov
mov
mov
jns
aas
and
stos
test
sti
pop
scas
sahf
jecxz
test
pop
cmp
addb
or
sub
fildl
jnp
testl
ds
scas
sarb
add
cmp
pop
add
ret
add
mov
xchg
loopne
iret
adc
add
and
fstpt
in
out
jmp
in
jno
sbb
repnz
cmc
dec
idiv
xchg
cld
loope
and
incb
cmp
add
lods
ret
loope
and
pop
in
jecxz
lock
add
inc
notb
cli
out
scas
pop
cmc
pop
add
test
fwait
test
scas
cmp
mov
out
and
lock
cmc
notb
mov
add
add
mulb
movsb
shll
sarb
sti
add
and
mov
mov
je
push
or
outsl
mov
les
mov
or
push
cld
add
add
adc
or
sbb
decl
shr
or
pop
je
add
push
push
adc
jg
push
pop
pop
push
nop
pop
xchg
mov
xchg
push
adc
push
out
or
data16
add
repz
out
fucomi
xchg
push
push
ret
cmp
jb
arpl
out
jbe
ds
clc
ja
mov
test
je
dec
pop
rol
or
shrl
dec
cmp
bound
lock
fldl
imul
mov
call
fcompl
imul
or
mov
add
mov
sub
or
jecxz
dec
lahf
push
std
jle,pn
and
in
insl
xor
cmpsb
push
je
sub
in
ja
jle
rcll
push
sbb
orb
or
popa
and
cmpb
shrb
cli
mov
cmp
push
push
dec
jg
adc
add
xchg
jno
jecxz
scas
inc
mov
and
adc
add
clc
mov
imul
pop
leave
push
or
bound
cmp
in
mov
imul
cwtl
orb
mov
iret
pushf
sub
fcomps
or
xchg
add
mov
xchg
mov
mov
mov
push
adc
enter
lret
shl
pop
jb
out
mov
pop
or
aad
sbb
add
xchg
push
movsl
rorb
xor
xor
out
mov
or
sub
pop
sub
xchg
mov
push
mov
or
leave
add
add
rolb
lock
pop
icebp
bound
adc
mov
lds
clc
outsl
or
jo
jg
mov
popa
xchg
add
aas
mov
mov
lcall
aaa
nop
or
sbb
sbb
cmpsb
adc
add
mov
mov
mov
into
flds
iret
sbb
or
mov
add
xchg
aam
mov
add
sub
xchg
pop
sbbb
pop
add
sbb
daa
lret
push
jns
je
mov
inc
jbe
jmp
fldl
imul
xchg
incl
inc
sbb
sbb
mov
movsb
std
imul
cmp
cvtdq2ps
sbb
add
sbb
popf
jecxz
dec
ret
popa
xor
pushl
sahf
or
add
call
hlt
enter
orl
jmp
lea
mov
add
cld
add
adc
daa
cld
push
popf
rolb
mov
sbb
popa
sti
cmp
and
inc
out
xorl
sbb
and
dec
sbb
into
sbb
negb
and
xchg
fistpl
call
and
xchg
mov
cli
js
aam
push
lcall
add
pop
jmp
outsb
add
cmp
decl
sbb
mov
dec
mov
fistl
adc
call
inc
or
pop
mov
mov
rorb
test
push
sbb
clc
data16
sbb
shr
cmp
cmp
xor
push
push
or
mov
cwtl
add
loope
pop
sub
inc
adc
int3
inc
push
cmp
jb
mov
and
xchg
jo
push
loopne
in
fs
je
sub
cmp
mov
adc
and
mov
push
les
cmc
scas
andl
aam
test
push
add
mov
aaa
jle
ret
das
jae
addr16
push
adc
subb
jne
in
or
pop
xor
adc
test
and
xor
dec
je
sub
pusha
ret
dec
loope
or
lock
pop
leave
adc
mov
push
dec
jnp
and
enter
or
dec
pop
mov
mov
or
cmp
je
push
mov
loop
test
adc
mov
orl
inc
or
dec
xchg
xchg
pop
add
cmpb
xor
fistl
dec
rcll
add
mov
call
jmp
rcl
jg
adc
stc
dec
insb
dec
xchg
inc
inc
mov
div
mov
sbb
cmpl
jns
cmp
jl
pop
sub
imulb
je
shrb
scas
xchg
sahf
sbb
andl
xor
rcrl
and
push
xor
shrb
jg
sbb
cmp
push
add
add
adc
xorl
xor
pop
xor
dec
xor
cmp
inc
adc
dec
push
push
nop
test
icebp
mov
aam
dec
push
sbb
push
fwait
andl
xchg
pop
std
sbb
push
out
jnp
jle
jne
or
int
dec
or
or
pop
push
adc
mov
in
cld
mov
test
mov
or
ret
xlat
mov
cmp
adc
mov
inc
inc
rorb
mov
add
jmp
push
xchg
mov
hlt
sahf
jnp
popa
iret
mov
sbb
fdivrs
dec
jne
mov
hlt
lar
pushf
cmp
jno
jmp
xchg
xchg
sbb
pop
cmpsb
addl
xchg
fwait
xlat
inc
into
pop
je
add
add
jne
aas
ja
or
xchg
cmc
jmp
sbb
add
jecxz
mov
mov
out
cltd
pop
or
adc
jo
leave
adc
dec
ficomps
inc
and
inc
inc
or
fcmovbe
pop
and
cmp
jle
mov
add
push
das
shll
mov
add
lahf
xor
ljmp
push
pop
sbb
test
jge
mov
xlat
cmpb
mov
jp
adc
mov
lea
xchg
push
mov
mov
pop
aaa
ss
pop
es
push
xor
movsb
daa
negl
add
cmpsl
sbb
pop
inc
mov
cltd
nop
xor
adc
xor
and
xchg
xchg
jle
pop
push
cmc
sub
add
adcb
sub
pop
pop
jle
lods
fcomps
mov
mov
aas
or
push
add
jo
cs
data16
dec
sbbl
xor
push
jl
lods
fs
fidivl
add
push
mov
sti
inc
sub
xchg
aam
mov
loope
sbb
andb
or
cwtl
ret
mov
cmp
add
push
mov
mov
insb
mov
outsl
fldt
test
mull
xor
loop
sti
imul
add
jae
cltd
jp
popa
sbb
testl
imul
xor
loop
enter
or
call
inc
inc
das
daa
or
cmp
ss
shlb
xor
or
mov
sub
adc
add
inc
orl
das
add
cwtl
or
xor
inc
rdtsc
lea
xor
and
cmpsl
iret
jo
sbbl
pop
loopne
out
bound
jo
add
clc
jp
addr16
pop
mov
cs
push
and
adc
push
add
repnz
clc
push
jne
or
fs
jl
cmc
or
pop
outsb
fimuls
bound
call
enter
mov
xchg
adc
xor
out
adc
mov
dec
addb
jb
sbb
outsb
fidivrs
jne
in
jmp
pusha
push
sbb
inc
xchg
cmp
lret
repnz
gs
xchg
jg
imul
ljmp
imul
lea
mov
in
xlat
and
xchg
and
in
xchg
inc
in
or
adc
mov
mov
mov
fcmovne
adc
roll
ficompl
shlb
and
ss
jne
add
inc
test
jne
dec
out
mov
jmp
sahf
push
mov
das
popf
dec
aad
out
adc
mov
inc
lea
and
jnp
aad
or
clc
xchg
cltd
or
pop
mov
jl
ret
jb
fnstcw
mov
iret
popf
push
dec
push
arpl
dec
es
xor
push
mov
test
cwtl
pop
jmp
push
inc
pop
push
orb
xchg
and
cs
outsb
out
adc
pop
push
xchg
pop
cmpsl
lods
fs
adc
sbb
inc
lods
popl
jmp
daa
outsl
ljmp
icebp
cs
sar
mov
mov
mov
int
jg
jbe
or
pmuludq
daa
inc
stos
push
mov
mov
sbbb
xor
mov
xor
or
mov
xchg
xchg
pop
pop
loopne
andl
jne
adc
pop
enter
lahf
jb
pop
inc
mov
in
arpl
adc
into
or
call
mov
and
arpl
xchg
cmp
inc
aaa
mov
popf
sbb
insb
lcall
dec
stc
jnp
dec
jbe
add
enter
arpl
add
sbb
mov
test
xchg
mov
stc
mov
js
arpl
lods
jle
mov
dec
ficoms
xor
les
sub
jne
dec
sbb
ret
jno
lret
cmpsl
push
and
fsubl
stos
test
jl
adc
mulb
outsl
jb
clc
call
fcoml
adc
repnz
test
in
mov
pop
push
push
daa
push
shll
or
push
mov
mov
inc
sbb
or
pushl
xor
mov
cltd
dec
frstor
mov
add
add
mov
shrl
add
pusha
nop
cmc
cmp
into
adc
outsl
lret
mov
mov
jmp
sbb
data16
mov
cmpsl
leave
xor
push
adc
inc
mov
cmp
jo
xchg
enter
cmp
cmpsb
cmp
xor
les
push
jae
test
sbb
jo
test
and
mov
cmc
mov
lret
sbb
pop
daa
xor
setg
mov
xor
mov
vcvtsi2sd
sub
iret
pop
pop
mov
or
adc
pop
insl
or
loope
movsl
sub
inc
dec
mov
sub
push
xor
sbb
popf
or
or
mov
es
inc
into
call
push
cmpsl
mov
idivb
mov
and
push
fldcw
cmp
test
add
adcl
in
add
mov
rclb
xchg
mov
mov
mov
adc
push
icebp
mov
push
mov
pop
das
jae
pop
enter
xchg
mov
rol
test
dec
sbb
dec
loope
or
pop
clc
dec
and
inc
jmp
add
xchg
adc
mov
divl
fcmovnb
mov
mov
shlb
pop
lret
lret
xchg
adc
cmp
adc
cmpsl
test
adc
insl
push
ljmp
testl
je
adc
movsl
and
cltd
sub
ret
or
push
dec
sbb
in
mov
push
or
lret
xchg
mov
sub
jns
pop
mov
lods
daa
pop
data16
mov
test
movsl
sbb
dec
fsts
fsubrs
mov
sub
push
scas
dec
inc
xchg
pop
xor
mov
imul
xorl
mov
out
sub
cmp
push
push
mov
pop
fsubl
cmp
jle
out
roll
push
add
jp
xchg
push
cmpsb
inc
sub
sbb
or
pop
popa
scas
pusha
or
jns
push
pop
adc
addr16
mov
outsb
scas
call
mov
adc
mov
jno
and
and
push
outsb
add
clc
pop
xor
stc
loope
xchg
rol
mov
mov
shlb
jo
stc
jae
pop
jo
rclb
adc
lods
sub
adcl
sub
lahf
add
test
push
jo
dec
pop
push
es
dec
xchg
xor
mov
mov
mov
insb
in
xchg
mov
push
and
rol
or
cwtl
add
jmp
xor
xchg
pushl
enter
inc
push
in
cmpsl
adc
dec
pusha
add
leave
cmp
addl
ficoms
xor
fcom
dec
loopne
inc
js
or
shr
jecxz
repz
adc
cmp
pop
jmp
call
bound
loopne
sbb
loop
sub
es
in
add
mov
dec
adc
iret
mov
dec
je
and
sbb
sbb
adc
or
sbb
jg
dec
xor
xchg
sub
mov
push
and
fdivrp
pop
sbb
enter
repz
adc
jns
dec
fisubl
mov
fs
add
sub
sarb
xchg
arpl
sub
ficoml
into
test
jbe
cltd
cwtl
lcall
testb
xchg
inc
mov
jge
push
cltd
dec
icebp
test
and
test
mov
cmpsb
sbb
outsb
push
in
push
lock
ret
or
mov
mov
fidivs
rcl
clc
aad
orl
add
jns
xchg
jne
decl
dec
or
sarl
cmp
cmp
mov
dec
pop
sbb
and
pop
negb
jae
or
movsl
test
adc
shll
sbb
inc
std
out
xor
cmp
cmpsb
rcll
shll
or
bound
xor
sbb
inc
mov
rclb
pop
scas
lret
or
lock
push
repnz
fs
adc
fcoms
jge
ja
push
scas
call
mov
pop
imul
inc
mov
and
inc
dec
push
movsb
and
mov
out
jnp
mov
xor
mov
lock
out
insl
or
inc
pop
sarb
pop
pop
inc
inc
mov
cli
cld
test
rcl
call
xchg
jle
bound
pop
dec
pop
imul
mov
xlat
sar
push
jo
or
add
inc
xchg
dec
nop
dec
and
fcoml
test
or
sti
sahf
or
mov
movsb
push
and
inc
pop
and
ret
dec
adc
pusha
movsl
mov
inc
add
or
sbb
pop
ret
dec
cs
or
push
stos
xchg
add
cmp
jae
cmp
lret
lods
push
popf
shll
push
mov
decl
movsl
adc
je
out
dec
int3
mov
xor
fnsave
testl
bound
rcll
mov
add
imul
sahf
aam
sub
sbb
jbe
rcll
test
push
and
xchg
pop
jb
xchg
sub
add
stc
repz
inc
adc
inc
add
clc
loope
outsb
cwtl
adc
imul
in
cmp
dec
sbb
dec
ret
xchg
jmp
sub
test
popf
test
add
push
inc
xchg
jae
sbb
in
das
sbbb
leave
cmp
xor
inc
mov
mov
dec
pushf
es
mov
aam
inc
mov
lods
enter
dec
and
dec
or
flds
aam
dec
mov
add
dec
adc
dec
arpl
fstl
mov
testb
cmp
sbb
cli
mov
xchg
scas
adc
loop
adc
or
pusha
inc
repz
adc
gs
jbe
mov
pop
mov
adc
or
cmp
mov
movsb
movsl
push
stc
dec
xchg
es
mov
or
lods
and
js
mov
and
pop
add
aas
jne
ficomps
ret
lahf
pusha
cmp
leave
adc
not
adc
or
vsqrtps
sbb
adc
cmp
mov
xchg
loop
in
adc
sub
push
cmp
shrb
mov
jbe
mov
pop
sub
mov
mov
mov
movsb
xor
add
push
call
je
add
divl
bound
cli
jmp
sub
fbld
shlb
or
mov
or
adc
adc
and
adc
std
push
cmp
mov
les
cli
bound
flds
test
xor
adc
scas
mov
push
test
jp
add
call
enter
or
pop
sub
jbe
imul
push
stos
push
mov
push
fisttpl
dec
or
pop
mov
rorb
dec
ret
mov
cmpsl
ret
hlt
jne
mov
add
adc
add
xchg
and
es
divl
mov
pop
jb
cmc
and
or
aad
test
clc
je
out
xor
add
incb
bound
cmp
pushl
clc
nop
cltd
dec
aas
movsb
cmp
aas
movsl
inc
je
ret
adc
das
dec
and
lods
dec
adc
jg
nop
push
mov
fildl
or
xchg
xchg
adc
or
push
dec
or
jecxz
pop
leave
jmp
pop
int3
jp
mov
pop
cmpsl
enter
test
add
adc
mov
test
or
data16
or
outsb
or
mov
clc
jmp
mov
inc
in
mov
in
popa
sub
push
js
int
push
or
jmp
and
stos
and
and
push
imul
lds
inc
inc
and
mov
mov
add
or
fildll
adc
scas
incl
push
and
inc
push
dec
int
addr16
jb
pop
add
add
shrl
out
jbe
or
cli
jns
sub
pop
ret
or
call
enter
xchg
data16
sub
adc
daa
sub
inc
push
mov
jl
and
nop
mov
xchg
dec
mov
cmp
jb
push
rclb
xchg
std
mov
push
ja
adcl
ret
shr
mov
repnz
stos
lock
xor
xchg
ficompl
pop
add
sbb
inc
and
or
and
les
movsb
and
xor
mov
or
lock
fs
mov
adc
sbb
dec
push
inc
int
adc
call
sub
xor
pop
daa
pop
push
xlat
and
enter
adc
mov
bound
mov
or
dec
sbb
mov
mov
stos
push
adcl
cmp
pop
sbb
test
push
push
jmp
in
push
ret
mov
test
add
repz
or
xchg
jecxz
cmp
jg
push
or
add
popa
mov
cmpb
lock
jg
xchg
icebp
loope
adc
repnz
shr
push
stc
push
sub
test
and
enter
sbb
add
rorb
sub
add
icebp
xor
daa
bound
clc
jbe
adc
sbbb
mov
jmp
cmp
cmpl
xchg
add
pop
lcall
jb
test
mov
cld
es
fsubl
xchg
sbb
test
inc
shrb
push
out
dec
aad
fsubrs
pop
hlt
inc
add
stc
enter
jl
scas
adc
jl
mov
mov
adc
cmp
mov
test
in
mov
pop
mov
xchg
sarb
scas
push
push
push
pop
sub
mov
jle
push
and
dec
sbb
les
xchg
push
jmp
into
inc
or
sbb
push
mov
and
cld
mov
sbb
jge
lcall
in
pusha
insl
sub
js
arpl
test
outsl
sub
stos
push
hlt
jle
dec
cmp
sbb
xor
cmp
adc
jmp
xor
or
popa
pop
add
mov
push
mov
cli
lcall
add
addr16
test
cmc
cmp
adc
clc
dec
pop
add
push
push
add
loop
int3
cli
add
or
pop
cli
sbb
jmp
inc
xor
test
sub
clc
lcall
lea
cld
mov
pop
ret
int
add
je
pop
std
dec
pop
cwtl
and
add
mov
repz
jl
cmp
sub
xor
cli
pusha
cli
add
jmp
stos
lret
jne
lods
loope
out
fs
mov
xchg
xchg
int
sub
dec
stc
dec
scas
lock
mov
cmp
mov
pop
inc
push
cld
push
adc
pusha
mov
cmp
mov
divb
xchg
dec
jnp
aad
fnstenv
ljmp
arpl
adc
jnp
add
mov
jg
mov
xorl
push
sbbl
or
sub
rorb
sbb
les
and
lret
push
lcall
sub
inc
call
ja
mov
pop
cli
cwtl
mov
and
add
push
pop
adc
xchg
or
push
nop
sbb
andb
call
mov
cmpsl
test
lea
aam
int
sbb
push
shll
and
aaa
stos
add
add
add
xor
adc
xchg
mov
sub
push
push
jmp
fldenv
dec
cld
pop
adc
fs
pushl
test
repnz
mov
dec
pop
jmp
ss
ret
jbe
mov
pop
hlt
mov
shll
and
xor
sbb
mov
stos
xchg
or
dec
adc
sbb
sub
push
sub
or
hlt
inc
add
inc
sbb
enter
or
push
cmp
xchg
ja
mov
lret
inc
mov
shl
andl
push
mov
adc
addr16
sbb
xor
adc
sahf
sub
adc
mov
jne
cmp
sub
push
pop
and
add
dec
dec
loop
or
fmuls
or
or
mov
cmp
add
xor
cmp
orl
jl
insl
sbb
fnsave
mov
xchg
mov
xor
ret
enter
mov
cli
xchg
rorl
je
clc
or
inc
dec
jmp
or
insl
cmp
mov
rcl
subl
mov
enter
sbb
and
mov
mov
cmp
jae
or
repz
inc
jl
in
mov
popl
repnz
mov
mov
mov
ret
push
add
adc
cmp
les
lret
xor
leave
shrl
movsb
mov
orl
daa
scas
push
test
addr16
scas
push
push
push
xor
rcll
gs
and
or
sub
dec
push
xchg
aas
jne
bound
ds
mov
push
push
or
jmp
mov
sbb
popa
dec
mov
inc
mov
mov
push
in
pop
pop
arpl
adc
lods
dec
lahf
add
jne
je
jbe
cmp
and
xchg
inc
push
inc
mov
mov
mov
push
mov
mov
sub
sbb
adc
mov
fldenv
xor
fmuls
loope
popa
push
jmp
cmp
out
loop
jle
adc
je
xchg
clc
lcall
sub
dec
cltd
out
mov
lret
out
test
dec
in
cmp
mov
xor
repnz
stc
push
popf
mov
adc
add
pop
xchg
pop
or
cmp
outsl
lods
mov
and
outsb
in
sub
push
xchg
cmc
popa
and
stos
scas
lods
shr
jg
cmp
mov
add
movsb
lahf
inc
jbe
xor
cmp
jno
mov
insl
sbb
cmp
fmull
adc
fcoms
or
and
repnz
shr
or
lret
dec
mov
testb
sub
add
push
fwait
inc
test
mov
scas
and
push
push
call
xor
push
lea
mov
sbb
mov
jb
jno
dec
pusha
sbb
jno
mov
mov
push
fimuls
daa
loope
popfw
inc
clc
adc
inc
add
xor
xchg
ja
jmp
iret
cld
lret
loopne
or
jnp
push
cli
call
push
mov
stc
and
add
mov
push
jecxz
testl
sub
dec
les
and
mov
add
dec
jl
insl
mov
dec
lret
int3
lahf
adc
mov
inc
adc
insl
inc
lea
sub
test
push
icebp
adc
mov
adc
add
daa
lea
push
lds
jne
jmp
sti
ljmp
push
movsb
xchg
cmp
lods
ds
andl
lea
leave
and
and
inc
lds
mov
push
xchg
imul
call
cmpsb
xchg
push
loopne
push
call
hlt
cmpsl
dec
or
mov
mov
adc
inc
push
or
inc
cmp
xchg
ss
les
pop
stos
and
pop
mov
jl
sub
movsb
daa
push
popa
mov
dec
popa
pusha
rorl
test
or
mov
hlt
mov
dec
push
inc
adc
fcoml
outsl
mov
add
fsubr
dec
cmp
dec
dec
and
sbb
push
fimull
or
cmp
mov
stc
lea
sub
xchg
rol
das
rcrb
inc
fld
mov
adc
sbbb
mov
addr16
mov
popa
sbb
cmpsl
and
loope
pop
pop
xorl
mov
mov
mov
add
cmp
rolb
pop
push
lea
mov
jge
mov
xchg
push
lock
loopne
call
gs
inc
ljmp
push
or
out
je
in
hlt
push
cltd
jns
and
enter
lock
sarl
and
push
mov
fcomps
adc
loope
mov
mov
nop
push
add
js
adc
push
or
sbb
mov
jmp
inc
cs
int
sbb
dec
js
add
lds
in
fdivrs
xchg
shrl
jg
inc
lods
movsl
adc
movsb
out
pop
mov
jmp
sahf
sbb
xor
push
fadds
dec
test
addl
sub
stos
stos
fiaddl
or
nop
push
aaa
adc
sub
jp
lock
xor
les
mov
and
ficoms
cmp
lods
sub
enter
push
mov
test
fwait
and
inc
add
or
xchg
adc
call
mov
mov
or
rolb
rcll
loope
cmpsb
pushf
jl
or
clc
push
call
mov
pop
sub
aad
mov
std
sbb
call
cmp
pop
pop
mov
sahf
dec
ret
iret
das
mov
xchg
or
sti
imul
sub
mov
movsl
fsts
daa
xor
fdivs
popa
pop
xchg
ja
popa
push
outsl
movsl
xor
adc
or
and
or
jne
push
sub
jle
cmp
sahf
xchg
adc
lea
out
adc
xchg
xchg
stc
push
inc
inc
bound
fnsave
inc
cmp
sub
hlt
cmp
lock
clc
add
mov
imul
int3
mov
daa
jmp
sbb
dec
push
iret
xchg
push
stc
call
enter
rorl
push
nop
inc
ret
dec
sbb
inc
pop
sub
enter
mov
and
movsb
out
fmul
test
jecxz
daa
jae
daa
popf
lret
stos
sub
sub
mov
daa
cwtl
movsb
movsl
rcrl
loop
fildll
jle
ljmp
xchg
mov
call
mov
in
nop
stos
pop
push
insl
popa
add
arpl
lcall
xchg
dec
dec
jne
stc
push
stos
mov
cli
and
cs
out
sbb
push
bound
jae
or
xor
icebp
ret
and
call
xor
cmp
jne
jmp
mov
sti
ja
mov
mov
cld
out
jo
mov
pavgb
fwait
gs
mov
dec
ljmp
xchg
and
adc
and
or
and
sbb
or
xor
iret
adc
cmp
call
rolb
mov
shr
and
or
ret
pop
sub
dec
and
or
jmp
sub
repz
ljmp
ss
dec
pop
and
dec
and
adc
xchg
and
sub
idivl
mov
mov
mov
adc
out
adc
or
sbb
or
mov
xor
mov
sub
subl
xchg
push
and
adc
cmpsb
out
jg
xchg
aas
test
pop
and
push
dec
inc
neg
jb
or
mov
inc
and
es
and
loope
dec
dec
in
xlat
push
lret
cld
rorb
sti
rolb
cmp
cmp
je
andl
xchg
jge
ret
xchg
bound
jecxz
push
inc
add
mov
jne
push
push
xchg
and
push
lock
adc
dec
mov
ffreep
enter
nop
in
insb
inc
out
and
aas
shr
jmp
mov
arpl
jmp
data16
into
in
dec
shl
popf
sbb
je
aam
push
mov
fcomps
aaa
call
test
pushf
inc
mov
dec
test
sarl
and
cmp
in
fadd
sbb
imul
lahf
fcoml
push
enter
jmp
and
xor
lods
ljmp
jne
lahf
push
lea
movsb
mov
and
add
dec
dec
je
jle
cld
cltd
adc
sbb
sbb
sbb
mov
add
mov
test
xchg
in
lahf
hlt
aam
loopne
rol
xchg
push
xchg
push
adc
or
push
fiadds
imul
testl
mov
ret
jo
xchg
dec
cli
inc
adc
xchg
or
xor
adc
xchg
cltd
mov
divl
sbb
js
xor
and
or
mov
hlt
stos
xchg
aas
inc
jg
movsl
adc
in
pop
icebp
lods
insb
add
adc
xor
andb
je
ljmp
dec
xor
daa
xor
sub
dec
inc
daa
adc
cmpsl
nop
sbb
adc
jmp
inc
or
xor
sub
jmp
leavew
or
mov
ret
and
mov
xchg
xchg
mov
pop
lds
push
dec
mov
loope
lahf
or
daa
or
jo
loope
sbb
sbb
mov
mov
sahf
sub
rcrl
and
iret
mov
push
or
das
dec
loop
lds
dec
adc
movsb
jae
or
loop
dec
test
testb
and
mov
push
cmp
mov
cli
notl
pop
xor
subb
std
loop
mov
in
imull
adc
jmp
enter
adc
shll
les
data16
outsl
rolb
adc
adc
in
dec
sub
arpl
and
jbe
sub
rcl
add
shlb
rcrb
loopne
add
sbbl
pop
push
jno
push
or
sbb
add
or
add
sub
sahf
push
nop
in
sbb
xchg
bound
pop
or
jl
and
push
adc
out
pusha
mov
decl
push
xchg
xor
mov
or
into
xor
or
pop
mov
dec
sub
outsb
subb
and
std
inc
je
scas
dec
xchg
add
sbb
push
pop
mov
subb
xor
dec
add
xchg
pop
je
andl
or
int
inc
loopne
ljmp
jb
jne
mov
push
and
or
in
out
or
dec
xchg
xor
sahf
iret
ljmp
mov
adc
mov
adc
xchg
or
add
sbb
or
inc
subl
sbb
movsb
add
jno
inc
lcall
cmpsb
dec
rorb
jge
mov
push
xchg
mov
insb
int
je
pop
stos
mov
jp
lcall
push
or
mov
call
push
movsb
xlat
mov
sub
jo
stc
lods
add
stos
xor
mov
imul
rolb
stc
pop
push
movsb
mov
push
scas
or
pop
adc
call
sahf
loopne
jge
stc
int
xchg
mov
jmp
cmc
jl
or
iret
pusha
or
call
cwtl
and
mov
jl
rcll
push
mov
or
int3
add
mov
jne
mov
fwait
xorl
nop
fs
cmp
xchg
add
mov
lcall
sti
dec
mov
call
xchg
sub
or
fs
inc
lret
je
cmp
inc
add
adc
or
adcb
fwait
dec
jge
insb
imul
xor
dec
in
xchg
lea
push
js
out
mov
sub
lods
dec
bound
add
or
mov
insl
and
push
jmp
mov
mov
stos
xor
sub
sbbl
xor
sub
push
xchg
xchg
and
outsl
adc
pop
and
xchg
mov
jo
sbb
enter
pop
hlt
mov
or
mov
in
xlat
gs
pushl
iret
dec
and
add
jo
mov
addr16
je
leave
ss
imul
inc
nop
add
cmpb
sbb
cmpl
aas
fldenv
xchg
inc
insl
mov
pop
sbb
sti
jecxz
push
das
xlat
mov
daa
jp
gs
call
mov
adc
pop
lock
xchg
roll
and
lea
cltd
enter
add
mov
in
notl
jmp
movsl
enter
decl
pop
xorl
mov
xor
mov
loop
mov
ja
or
dec
daa
sbb
adc
lret
ljmp
adc
inc
sbb
mov
call
ret
mov
cmpb
sbb
call
insl
and
sarb
xchg
fisttps
mov
and
mov
xchg
and
mov
sbb
and
fs
or
xchg
sub
rorl
hlt
mov
mov
add
pop
sbb
add
call
and
xchg
push
and
dec
lahf
icebp
mov
fnsave
sub
pop
fldl
inc
nop
sbb
aas
jns
xchg
fisttpll
or
add
sbb
push
in
push
roll
cmp
js
xchg
jmp
sub
fnstcw
jge
insb
lret
add
inc
push
lret
call
or
xchg
sub
aas
loop
test
xor
cmp
xchg
inc
xchg
icebp
add
sub
sbb
mov
and
enter
adc
mov
icebp
das
movsb
pop
sbb
mov
dec
xchg
js
andl
push
mov
sti
add
push
enter
jb
sbb
iret
mov
and
enter
jb
cmp
add
out
push
fs
jb
cmp
dec
and
in
xor
sbb
xchg
and
nop
arpl
test
repz
dec
or
mov
and
xchg
rol
sbb
add
cld
and
mov
leave
dec
mov
clc
adc
adc
ret
or
xlat
js
outsl
fisubl
and
xor
add
sbb
enter
decl
jge
clc
shll
push
enter
call
xchg
sbb
push
test
jno
aam
mov
lea
inc
aam
add
mov
sahf
xor
xor
and
adc
adc
enter
call
adc
enter
jmp
inc
xor
xor
and
adc
mov
out
or
testb
mov
and
xchg
rcrl
mov
jb
xor
or
loopne
arpl
pop
test
xor
push
cld
mov
sbb
sbb
shrl
shrb
rolb
mov
int3
orl
ret
lea
xchg
mov
outsb
test
jb
xchg
cmpsl
push
pop
sub
dec
push
mov
xor
sar
mov
idivb
inc
insb
fs
xchg
push
mov
pop
mov
push
add
out
push
cmp
ja
add
mov
lahf
mov
mov
test
sub
mov
and
jecxz,pt
mov
or
into
adc
adc
ret
js
pop
icebp
ljmp
add
cmp
int
mov
jbe
test
mov
push
call
xchg
inc
int
inc
or
repnz
pop
hlt
cmp
pop
lock
call
mov
adc
adc
or
inc
sbb
add
mov
rol
add
mov
dec
and
or
mov
xor
or
inc
dec
dec
sbbl
jb
sub
adc
or
mov
insl
cltd
or
cmp
xchg
in
out
add
and
adc
push
sub
sarl
rep
or
ret
jp
and
adc
mov
pop
icebp
inc
push
out
cld
mov
add
mov
add
adc
adc
or
aam
aad
rcrl
adc
fsqrt
sarb
and
cmpsb
mov
sbb
pop
push
imul
mov
jae
test
lahf
jmp
jp
lea
nopl
scas
add
cmp
orb
jb
cld
add
daa
jl
out
dec
mov
sbb
mov
jp
daa
push
mov
daa
clc
push
add
ss
jbe
or
push
aam
push
aaa
or
test
push
in
sbb
enter
jne
push
lea
push
pop
rep
div
xor
jp
repz
adc
mov
pop
int3
ret
les
mov
jmp
push
bound
ret
cwtl
jecxz
pop
adc
push
faddl
add
jbe
sbb
adcl
pop
and
or
jb
xchg
push
pusha
lds
outsl
pop
std
pop
pop
sbb
mov
jg
mov
push
push
sahf
push
xchg
rclb
adc
cmp
adc
mov
sbbb
loop
inc
mov
jmp
xchg
adc
neg
push
insb
in
push
ret
sti
xor
cmp
xorb
nop
imul
xchg
out
pop
pushf
out
mov
mov
pop
jae
jg
mov
xchg
push
push
pop
sub
cmpsb
arpl
mov
lahf
sbb
and
stos
movsl
mov
fwait
push
pop
push
add
push
sub
pop
pop
ret
iret
scas
adc
clc
mov
mov
enter
testb
jp
ss
xchg
adc
pop
ds
xor
cld
mov
mov
or
adc
jg
movsl
push
test
movsl
mov
daa
ljmp
outsb
cld
test
xor
fnstsw
xor
es
sub
xor
insb
cltd
xchg
xchg
adc
push
cs
dec
jae
xlat
xlat
movsl
in
jb
jbe
mov
push
and
lods
dec
add
popf
pop
sbb
je
pop
sub
movsb
mov
or
fisubrl
xchg
jg
mov
loopne
je
adc
cmp
jmp
sub
pop
mov
mov
or
or
pusha
loopne
jmp
mov
lds
mov
mov
and
pop
pop
shr
and
mov
je
dec
xor
mov
inc
dec
orps
sbb
jge
test
and
push
nop
rolb
andw
cmc
sub
or
push
aad
test
push
call
xchg
and
sub
mov
jl
insl
mov
sub
jbe
push
mov
sub
das
call
or
mov
dec
fsubl
push
and
cmpl
pop
or
ja
adc
xchg
popa
or
lods
xor
std
mov
xor
cld
push
pusha
aaa
aas
pop
inc
pop
xchg
jmp
ljmp
loop
pop
and
xor
cmp
sahf
and
mov
pop
mov
sub
or
lea
aas
push
inc
xchg
sub
xchg
call
push
sub
and
cld
xor
test
repnz
test
add
or
dec
jge
mov
cmp
shlb
notl
test
push
cmp
cwtl
xor
bound
pusha
push
call
loopne
push
xchg
mov
mov
mov
sti
push
mov
orl
cmp
outsb
mov
fldenv
insb
hlt
adc
sahf
ljmpw
in
test
mov
push
shl
push
jbe
pop
inc
pop
lret
lret
andl
aam
or
and
sub
lcall
testl
insl
sarb
daa
test
jmp
add
shr
movsl
orl
mov
xor
std
and
scas
cltd
jae
inc
call
dec
or
sbb
fs
cld
cmp
or
sbb
pop
jp
pop
pop
test
mov
lds
or
and
mov
stos
xor
adc
jne
rcll
push
or
cmp
gs
shlb
call
and
int3
and
xorb
call
xorb
push
data16
mov
xor
push
je
fists
pop
int3
mov
sub
das
pop
inc
and
xor
or
cmpl
dec
cwtl
push
popf
adc
xor
popf
sbb
adc
out
sub
mov
lea
pusha
xchg
pusha
xchg
lods
and
jecxz
sub
push
push
outsl
cmp
jno
mov
or
pushf
cmp
mov
or
cmpsb
xchg
dec
std
inc
repnz
filds
mov
dec
push
xor
jo
pop
rclb
fdivrl
andl
xor
xchg
push
imul
mov
clc
out
inc
in
mov
push
loope
bound
push
adc
cmp
xchg
mov
call
ds
fistl
push
add
mov
call
push
or
in
mov
jl
push
nop
xor
cmpb
jns
lret
aaa
int
dec
mov
ss
scas
or
adc
xor
xor
push
dec
push
mov
push
test
or
jbe
mov
sub
add
loop
movsl
and
scas
shr
xor
pushf
push
or
push
cltd
test
xor
insb
sub
mov
inc
gs
int
jmp
push
push
lcall
subl
stc
call
fdivl
pop
adc
pop
pop
sbb
inc
and
push
mov
call
or
pop
lock
inc
mov
jne
inc
cs
mov
sub
mov
and
outsb
test
mov
or
lock
pop
lods
lret
inc
adc
aas
inc
fadds
lret
mov
rorb
add
cli
leave
subb
push
scas
mov
in
dec
je
xor
jne
enter
push
push
or
sbb
sti
cmp
pop
lret
mov
pop
mov
fldcw
push
cmp
and
flds
shrl
cwtl
push
pop
push
popa
pop
movsb
jl
in
ljmp
jecxz
jg
xchg
and
ret
iret
mov
push
adc
sbb
or
fsts
adc
adc
jmp
and
or
xor
test
movsb
xchg
pop
fsubrl
shrl
sbb
fisttpl
mov
push
add
pop
add
mov
mov
mov
sbb
inc
add
test
or
xor
pop
xor
adc
clc
adc
or
mov
sbb
mov
mov
mov
push
or
mov
sub
lea
adc
sbb
adc
adc
jl
mov
test
inc
and
and
adc
or
cmp
ss
and
enter
dec
add
sbb
inc
orb
xchg
adc
xor
xlat
stc
out
push
cmp
clc
dec
xchg
fstpt
aad
sahf
icebp
sbb
dec
clc
mov
xor
pop
ret
mov
mulb
jne,pt
push
pop
push
cltd
stos
test
clc
outsb
jae
fidivrl
fucom
cmp
hlt
and
pop
testl
mov
add
dec
sbb
mov
leave
int
adc
push
adc
popa
xchg
das
mov
stos
or
in
mov
adc
lea
call
icebp
push
adc
dec
mov
cli
lret
xchg
pusha
push
mov
sub
sub
or
je
lahf
inc
xor
mov
xor
inc
rolb
xor
push
mov
out
xchg
dec
xchg
dec
xor
adc
je
xor
out
sub
jmp
jnp
loope
xchg
inc
test
insb
js
dec
push
jge
popf
rcll
fadds
movsl
shl
mov
nop
and
imul
push
outsb
add
xchg
and
add
orl
or
loope
jmp
push
dec
lret
cltd
push
pushf
iret
xor
lods
mov
push
add
dec
insb
gs
jne
add
xor
jo
outsl
outsb
pop
imul
mov
push
notl
data16
sbb
ja
stos
adc
pushf
inc
mov
test
adc
clc
mov
lahf
jle
dec
int3
aaa
mulb
out
aaa
fdivrs
mov
cmpsb
aaa
or
mov
pop
or
movsl
pop
hlt
es
push
mov
push
jbe
test
dec
and
pop
cwtl
pop
push
xlat
bound
push
mov
add
add
or
ficomps
div
xor
push
movsb
cmpl
fmulp
daa
pop
jmp
pop
xorb
cmp
xchg
clc
mov
mov
ret
fmuls
mov
inc
dec
cmp
xchg
test
fstl
addr16
sbb
shrb
adc
xchg
jbe
scas
and
es
add
jl
stc
xor
stc
push
fsubs
push
jmp
adc
add
add
mov
inc
lea
sub
sub
nop
rolb
lea
pushf
push
or
add
and
push
sets
and
cmp
pop
call
or
cmp
push
repnz
aas
es
es
sti
dec
je
das
int
push
fstl
or
and
fnstsw
or
aam
jnp
cmp
inc
and
dec
movsb
push
xor
test
clc
pop
js
cmp
mov
dec
repnz
daa
xor
divb
fmulp
xor
fs
jle
repnz
adc
js
cwtl
mov
and
xor
jbe
enter
repz
pop
pop
and
dec
mov
xchg
jb
mov
sbb
sarb
cld
mov
in
push
neg
jmp
cmp
inc
dec
or
inc
add
jb
or
push
ret
inc
invd
and
adc
adcb
mov
imul
mov
stc
add
inc
mov
movsl
aam
es
sub
test
hlt
and
mov
and
jecxz
addb
sbb
mov
sub
imul
add
sahf
add
cmpsb
iret
decl
js
jp
popf
shlb
popl
jp
xlat
or
adc
add
push
stos
mov
cmp
adc
jp
loopne
jmp
xchg
jp
sbb
lds
stos
pop
add
jg
mov
add
mov
add
daa
cmp
jl
inc
popa
xorb
or
stc
jp
add
leave
cmp
call
add
mov
cltd
add
mov
stc
popf
sti
jmp
jle
push
mov
int3
add
aas
or
mov
clc
mov
pop
xchg
outsb
adc
sbb
pop
pop
pop
mov
icebp
mov
in
push
lds
insb
scas
add
jmp
mov
xchg
iret
test
inc
std
into
popa
test
xchg
loope
in
xchg
movsl
add
loope
mov
into
out
fucomp
ljmp
inc
jmp
fisubl
jne
push
mov
push
mov
inc
aam
loope
roll
psubusb
fsubl
add
nop
int
pop
loope
dec
les
jmp
shrd
mov
mov
jo
jl
mov
dec
jae
daa
ljmp
or
mov
ds
push
add
testl
jge
add
mov
call
pop
jl
rcr
push
mov
outsb
mov
xchg
mov
loopne
mov
cmp
in
daa
pop
cmp
int3
and
cmp
mov
and
sarb
in
cmp
outsl
push
inc
xlat
loope
iret
int
pop
pusha
aad
add
sbb
and
lods
or
or
jmp
add
and
je
dec
imul
or
sub
fmulp
add
ljmp
mov
push
push
mov
lock
addl
imull
call
mov
call
ja
xchg
ja
cs
sub
cli
test
xchg
or
popa
lea
das
jbe
inc
xor
test
pop
mov
jo
jo
jmp
or
mov
cltd
and
test
int
imul
adc
fisttpl
loopne
inc
push
or
mov
cwtl
fstl
pop
jmp
mov
add
fistpl
hlt
add
or
jmp
repnz
fiaddl
adc
jmp
stc
adc
dec
dec
sbb
sarl
jbe
call
sbb
jmp
enter
xor
adc
aaa
pop
enter
inc
test
sbb
add
cmp
les
arpl
add
int3
pop
pop
pop
pop
fxch
gs
clc
mov
test
pop
add
inc
or
jge
lret
mov
arpl
pushf
clc
jmp
push
lahf
sub
jl
dec
sbb
aas
mov
push
dec
movsb
xchg
or
gs
data16
sub
test
mov
mov
adc
xor
outsb
or
insl
and
mov
adc
dec
or
xlat
add
div
mov
push
or
out
xchg
mov
in
cmc
push
and
mov
adc
push
sbb
jmp
fcomps
xchg
lahf
jecxz
lods
adc
jmp
sbb
or
dec
or
vunpcklpd
jmp
outsl
ret
fwait
mov
ss
scas
pop
pop
cwtl
and
adc
stc
or
adc
enter
cmp
or
cmp
arpl
ret
loope
dec
sarl
std
or
adc
mov
pop
adc
inc
mov
jae
cltd
cmp
int3
sub
adc
andb
shr
inc
add
out
push
pop
or
jmp
std
clc
mov
xor
or
cmpsl
jbe
mov
add
enter
dec
add
lret
cmp
sub
push
sbb
jmp
lods
fsts
ficoms
adc
sarb
out
sbb
xchg
scas
adc
popw
xor
xchg
fadds
pop
repz
js
sbb
fistl
push
mov
or
int3
mov
adc
xchg
xchg
jmp
adc
or
test
sti
and
adc
pop
cmp
mov
dec
enter
or
sub
fstp
adc
and
mov
push
dec
push
xchg
push
es
sub
or
cmpsb
adc
xchg
test
outsb
or
pop
inc
int3
push
adc
scas
insl
outsl
push
inc
or
mov
or
mov
and
add
xchg
and
ret
or
inc
jne
outsl
push
fbstp
pop
outsb
pusha
test
arpl
jmp
pop
filds
imul
lret
mov
adc
scas
pop
push
mov
push
pop
adc
dec
in
xor
jl
push
jbe
pop
and
sub
mov
jmp
push
adc
stos
push
fbld
call
dec
and
push
lahf
xchg
sbb
cmpl
mov
cmp
cli
aad
mov
lcall
lods
jb
inc
and
jmp
cltd
or
or
movsb
or
lea
xchg
icebp
bound
and
sub
and
mov
mov
mov
mov
and
leave
sti
adc
adc
cmp
ffree
adc
push
dec
rcll
fidivl
xor
rorb
dec
fisttps
or
fwait
or
dec
cwtl
mov
jmp
xchg
es
mov
lods
push
pop
sub
inc
mov
dec
cs
scas
or
pop
frstor
es
out
pop
adc
out
mov
mov
pop
mov
sub
mov
les
cld
lods
sbb
cmp
jne
push
cmp
mov
ja
or
iret
or
pusha
push
das
push
pushl
enter
or
or
mov
or
inc
icebp
inc
sbb
dec
adc
cmpl
cmc
adc
ret
adc
inc
or
adc
rorb
repz
pop
shlb
sub
or
push
xchg
cli
xor
push
and
pop
inc
gs
dec
sub
dec
int3
or
pop
enter
lcall
adc
or
dec
push
xchg
lods
fcmovne
sbb
or
sbb
int3
and
int3
or
dec
and
and
or
push
adc
lret
dec
mov
adc
enter
adc
sub
arpl
xor
add
adc
test
and
and
sbb
mov
pushf
xor
adc
xor
arpl
inc
xor
or
cltd
cmpsb
dec
insl
cltd
adc
andb
out
push
adc
inc
jbe
and
cld
xor
xchg
pop
push
or
inc
or
add
add
jo
add
push
jmp
xchg
push
xchg
adc
xor
pop
xchg
adc
in
xor
push
sbbl
fldl
lret
jns
andl
xchg
and
and
xor
xor
sub
xor
imul
jb
cmp
xor
cmp
cmp
xor
ret
cmp
aas
mov
inc
mov
lret
add
and
gs
xor
inc
or
stos
and
aas
rcr
enter
sbb
loope
add
sbb
inc
dec
dec
orl
add
pop
jb
and
push
repnz
lea
add
xchg
xor
pop
inc
pop
pop
repnz
lea
enter
and
mov
addl
mov
and
nop
ret
jg
sbb
jecxz
add
roll
xchg
xchg
and
and
xchg
mov
mov
adc
xor
or
lahf
icebp
test
push
insb
std
popf
pop
push
mov
inc
jmp
pop
push
movl
mov
mov
jmp
flds
add
sbb
fwait
add
fsubr
push
ljmp
sbb
jb
scas
inc
xchg
xchg
sbb
pop
and
lret
mov
pop
mov
push
add
aam
adc
inc
in
aam
daa
fsubs
adc
push
mov
push
adc
cld
push
scas
mov
aas
mov
popa
sub
push
push
jmp
mov
dec
pop
jb
dec
or
push
xchg
movsb
jae
mov
dec
xchg
or
adc
dec
das
jg
jge
mov
push
cld
push
and
jmp
and
cmp
push
mov
sub
jmp
pop
inc
cli
inc
aad
mov
xor
mov
sti
enter
pop
jns
or
je
fldt
call
mov
add
inc
mov
dec
in
in
imul
pop
cltd
sub
adc
outsl
in
push
adc
pusha
add
push
jno
rcll
jne
mov
insl
and
je
fildll
mov
clc
jmp
jo
adc
jno
or
out
out
add
adc
nop
adc
jecxz
les
add
leave
push
adc
call
and
fdiv
jmp
fistpl
xchg
and
cmp
mov
pop
push
mov
fildll
faddp
push
adc
inc
cld
jmp
lds
xchg
xor
daa
mov
cltd
adc
fwait
sub
and
mov
pushf
js
fsubl
sub
mov
inc
in
enter
mov
je
or
cwtl
nop
js
fcomp
loop
push
or
sub
das
xchg
lret
jmp
cmp
jg
in
pop
loope
push
sbb
jp
xchg
push
sbb
jne
push
inc
adc
and
mov
mov
and
addr16
pop
add
jmp
ds
popa
gs
sub
pop
test
test
or
sahf
shl
xlat
icebp
add
push
push
pop
or
scas
add
ret
inc
mov
and
pop
mov
adc
dec
push
sbb
inc
rclb
and
or
xlat
sbb
inc
jne
or
jmp
sub
jns
xchg
jb
movsl
mov
pop
ret
xchg
insb
mov
bound
shr
int
stc
push
mov
adc
add
xchg
jl
dec
sub
push
push
imul
xor
scas
inc
rcll
adc
sub
jno
jl
movsb
push
pushl
lods
ficompl
xor
and
add
mov
pop
out
jnp
inc
mov
dec
jns
fsubrs
and
and
mov
sti
and
jg
mov
loopne
adc
aas
enter
inc
sbb
add
lret
cwtl
std
or
adc
mov
or
cmp
enter
icebp
xor
xor
dec
cmpsb
sbb
and
dec
out
adc
mov
or
push
dec
sub
test
or
xorl
xchg
fcom
andb
rorb
cltd
dec
sbb
or
mov
cltd
or
es
data16
dec
xor
and
xor
inc
icebp
mov
xchg
cmp
repnz
fdiv
mov
mov
out
outsl
or
jmp
pusha
repz
add
or
sbb
repz
sbbl
sbb
sbb
dec
sbb
nop
and
and
push
in
mov
cmc
sbb
sub
and
xor
fucomip
add
sub
pop
lsl
push
sub
popa
mov
add
dec
add
mov
sub
sbb
add
sub
push
test
movsb
add
nop
pusha
inc
das
mov
jp
sub
out
xor
xor
imul
and
dec
cmp
lea
xor
sti
fisttpll
or
pop
mov
mov
cmp
mov
jb
loopne
sahf
pusha
xchg
dec
inc
mov
mov
xchg
rorb
scas
inc
or
mov
and
in
call
leave
pop
lret
stc
xchg
jp
je
int3
outsl
bound
mov
jl
xor
jb
mov
cltd
test
jne
into
ret
shll
mov
add
or
scas
out
pusha
rcrb
hlt
shll
insl
or
mov
push
ret
cld
ja
sbb
clc
cmc
dec
mov
add
push
pusha
das
stc
testb
test
jne
xchg
mov
repz
xchg
adc
call
pop
mov
adc
mov
jnp
pop
pop
sahf
aaa
jmp
mov
popf
xchg
and
or
repnz
or
add
outsl
add
inc
and
mov
inc
or
je
iret
sbb
popf
andl
cwtl
jecxz
fs
mov
call
push
jnp
jae
jbe
ss
cld
bound
or
xchg
mov
cmc
and
les
or
out
push
test
and
fst
cmp
xorb
bound
sub
and
orb
lock
xor
mov
cwtl
mov
xor
pop
add
or
xor
cltd
adc
push
jmp
repz
ljmp
and
dec
out
mov
aad
daa
stc
rolb
push
push
pop
clc
fwait
insl
adc
ret
push
inc
lcall
cmpl
sarl
lcall
lea
testb
xchg
adc
adc
cmc
dec
std
and
jmp
push
int3
rep
sbb
es
sub
adc
add
and
add
dec
imul
jmp
pusha
push
lret
les
cmp
pushf
stc
push
push
and
clc
sub
cltd
es
pusha
jmp
sbb
jge
lret
sub
fucomp
lock
hlt
mov
popf
cld
and
sub
imul
add
clc
fsubr
push
out
mov
xor
insl
xchg
mov
das
cmp
inc
jnp
xlat
daa
pushf
push
and
cmc
cwtl
xor
call
rorb
jno
xchg
lret
xchg
loope
xchg
fisttpll
add
cmp
inc
out
pushf
sub
and
out
imul
jne
or
adc
testb
jne
dec
test
lcall
pop
lea
mov
rol
cli
inc
sub
inc
sub
fidivl
inc
in
add
or
adc
pop
fchs
sub
push
inc
push
jne
dec
pusha
xor
pop
adc
xchg
and
test
incw
imul
sub
into
sub
mov
aam
or
xlat
fdiv
jle
xchg
fiaddl
sub
lods
mov
or
scas
dec
outsl
movq
fistps
and
sub
and
inc
pop
gs
and
inc
cmp
data16
lret
push
sub
or
push
or
aad
mov
and
dec
or
repz
xchg
inc
dec
orb
adc
or
adc
or
cmp
es
push
icebp
test
cmpsb
lret
mov
mov
jl
fmuls
add
sbb
dec
adc
adc
rclb
inc
pop
adc
cmpsl
or
int3
sub
mov
fwait
mov
aaa
daa
jmp
cmp
adc
je
jmp
sub
lock
rcll
repnz
leave
fdivr
push
mov
stc
pop
dec
inc
jp
into
jmp
ret
insb
mov
xchg
lods
push
shrd
sbb
fstpl
mov
sbb
subl
or
imul
xor
xchg
dec
lret
inc
cmp
shlb
jbe
jne
xor
jge
aaa
or
jle
sub
add
insl
and
jns
and
aas
enter
loop
es
inc
sub
xchg
arpl
pop
mov
cli
or
xchg
mov
or
in
inc
mov
mov
mov
lahf
xchg
sbbb
and
lods
xchg
outsb
scas
xor
shr
in
mov
sbb
cmp
ds
xor
cmp
popf
xchg
rorl
repz
push
mov
mov
add
add
addl
cli
push
loopne
fidivs
call
push
and
xbegin
mov
and
push
pop
adc
xchg
pushf
jae
fcmovnb
mov
mov
adc
stos
xor
lret
fisttps
adc
sbb
ficompl
push
xchg
leave
ret
xchg
jmp
repz
hlt
aaa
repz
fdivl
push
movsb
inc
push
mov
sub
xchg
popf
scas
cmp
add
repnz
test
js
dec
and
sbb
test
jl
jnp
and
call
cwtl
call
dec
cli
sub
inc
mov
clc
neg
sbb
push
shrl
rcrl
or
mov
orl
sub
jmp
xor
ror
imul
lea
jmp
add
test
loopne
repnz
pop
iret
rorb
sub
push
mov
jmp
das
and
les
scas
stc
adc
inc
loope
adc
lahf
mov
push
sbb
and
mov
mov
movsb
adc
aas
dec
into
mov
int3
xchg
or
sbb
mov
cmpsl
push
cmp
jp
mov
adc
pop
mov
aas
jb
adc
push
push
repz
cmp
jl
and
bound
mov
inc
mov
jns
inc
dec
mov
cmc
enter
or
daa
push
ss
out
or
enter
push
mov
lock
push
loopne
or
je
notl
fadds
lock
mov
inc
dec
jo
faddl
push
xchg
movsb
or
jmp
and
mov
jp
add
jecxz
shll
jg
loopne
jae
fadd
call
mov
fildl
rorl
ljmp
mov
jnp
push
or
mov
in
push
adc
loop
test
add
loopne
push
test
rolb
mov
pop
inc
inc
dec
mov
mov
les
loop
xor
int
push
cmp
inc
call
jns
dec
pop
and
and
pop
loope
addr16
lock
cmp
or
add
and
js
test
fstpl
test
jno
push
push
lods
movsl
dec
push
mov
and
or
rcll
pop
cmp
rcrb
dec
sti
sbb
pop
ja
lock
and
mov
mov
adc
and
call
mov
or
and
inc
cmc
adc
xor
pop
inc
and
sbb
xor
adc
sti
cltd
test
jns
sbb
and
dec
inc
mov
sbb
cmp
adc
xor
lret
or
mov
and
sub
cltd
mov
push
dec
or
cltd
push
inc
and
or
mov
mov
cs
mov
fdivrl
sbb
add
lahf
jns
orl
push
sbb
push
scas
sbb
inc
adc
shrb
sbb
call
rorb
mov
inc
and
and
and
xchg
or
int
inc
and
or
daa
add
scas
add
add
add
mov
pop
mov
add
mov
fsubrs
sub
mov
jg
lods
dec
jp
xor
xor
in
sub
add
ja
fwait
inc
gs
or
lcall
xor
xchg
inc
pop
int
fadd
sub
mov
das
andl
test
pop
jno
ds
ret
cmpl
sahf
test
cmp
add
sbb
inc
adc
or
mov
nop
adc
loopne
push
decb
test
cli
sub
mov
fs
cmp
lds
in
rcrb
push
sbb
clc
sbb
dec
pop
xchg
add
or
into
adc
adc
add
adc
pop
or
mov
cli
js
aas
pop
pop
scas
adc
jl
gs
nop
and
jmp
adc
inc
int
test
xor
in
lds
out
inc
jae
int3
jns
rolb
jns
xchg
data16
cmpsl
iret
mov
les
or
das
xor
or
jo
or
into
into
dec
or
push
shrb
and
enter
jle
xchg
push
test
std
movsl
mov
mov
jg
and
test
adc
jmp
mov
sbb
clc
and
js
mov
jbe
test
xchg
mov
mov
and
add
fmuls
out
std
cmp
add
push
cmp
add
popl
fdivs
inc
jne
hlt
fsubr
pop
add
mov
cmp
fs
cmp
add
lret
add
and
and
mov
out
xor
imul
adc
or
or
xor
add
dec
pop
sahf
arpl
lds
and
adc
push
adc
xor
adc
jle
repnz
jno
inc
sbb
inc
test
dec
sbb
outsb
and
and
adc
outsl
ret
xchg
inc
jmp
pushf
in
jp,pt
ss
movsl
mov
inc
adc
mov
stc
jmp
push
sbb
jae
push
push
dec
jno
arpl
loope
movsb
xchg
sub
loopne
dec
nop
mov
pop
ret
ret
xchg
pop
sbb
pop
fmull
fadds
add
imul
or
and
test
push
jl
mov
outsl
cmpsb
pop
and
dec
mov
and
jmp
xor
and
fsubrl
push
xorl
inc
lods
xor
xchg
and
add
pop
xor
push
push
or
add
dec
add
sahf
enter
les
jmp
into
mov
adc
mov
sbb
push
adc
xchg
or
sahf
data16
jns
mov
or
sub
inc
mov
shll
push
lahf
mov
int3
cmp
outsb
pop
push
adc
out
dec
add
push
out
push
sbb
jnp
xor
or
lret
sbb
or
add
loope
add
or
xor
and
adc
enter
mov
push
pop
dec
xor
dec
xor
sbb
add
sbb
push
add
out
jg
add
add
mov
add
nop
out
push
sbb
aad
dec
stos
push
nop
sbb
push
cmp
dec
push
int
add
dec
pop
into
add
mov
and
push
xacquire
nop
or
stc
hlt
add
std
adc
xor
fisubs
mov
test
ja
mov
gs
sub
movsb
mov
ret
call
mov
sub
jmp
sbb
or
in
aad
jmp
out
lret
test
push
inc
adc
cmpsl
adc
cwtl
leave
mov
and
cmp
pop
cmc
mov
adc
adc
sbb
adc
sub
outsl
jp
idivb
js
and
adc
hlt
sti
mov
rorb
sub
push
jns
cmpsl
add
cli
aam
jecxz
int
mov
test
adc
mov
adc
sub
clc
jle
lock
data16
pop
cmp
das
pop
pop
adc
and
rclb
call
lea
xor
outsl
enter
mov
cmc
jmp
ret
call
dec
cmp
js
xor
sbb
pop
mov
adc
add
bound
add
xchg
aaa
dec
call
adc
data16
cmp
cli
xchg
cmp
sbb
mov
mov
dec
arpl
inc
loop
push
leave
pop
and
dec
sub
mov
adc
add
push
shll
adc
les
add
inc
or
jbe
mov
add
orl
pop
mov
jge
dec
add
rcll
in
inc
jae
sbb
ljmp
or
stos
xchg
scas
fidivrl
inc
pop
adc
mov
add
or
clc
push
hlt
in
inc
jecxz
dec
int
shr
pop
aam
or
pop
or
ret
sbb
incb
scas
push
rorb
nop
push
fsubs
fsubl
shr
dec
and
push
fisttps
es
repz
pop
and
or
sti
mov
in
icebp
adc
dec
stos
rcrl
xor
jo
sub
push
lock
or
xchg
stos
fstl
fsubs
stos
and
and
pop
jne
push
mov
mov
add
and
push
fcoml
add
lds
mov
cmp
ret
jne
std
jecxz
test
icebp
xor
dec
adc
sti
rcl
outsb
add
scas
mov
inc
movb
xchg
add
push
pop
pop
and
adc
adc
mov
lea
xlat
xchg
es
jb
or
xorl
cltd
or
sub
addw
push
jbe
xchg
repz
jge
inc
jo
scas
push
push
ret
shll
adc
cmp
subl
inc
clc
mov
adc
dec
hlt
jg
add
movsl
adc
int3
jae
pop
pushf
mov
inc
dec
lret
and
cltd
pusha
popf
sub
add
leave
lds
lods
adc
pushf
scas
sub
sbb
lcall
pop
jle
sub
push
inc
test
cmp
gs
hlt
mov
adc
cmp
mov
sbb
dec
fsubr
fnstenv
dec
leave
cmp
pushf
dec
leave
jnp
or
aas
xchg
dec
cmp
pop
or
add
sub
nop
cmp
dec
sbb
mov
repnz
push
in
lret
lret
fildll
xchg
mov
pop
adcl
pop
cli
cwtl
js
cltd
int3
movsb
fnsave
fdivl
pop
jae
test
ljmp
sbbb
test
dec
sub
dec
jne
out
or
dec
dec
xchg
or
scas
adc
loope
xchg
ljmp
movsl
test
loop
outsl
fstl
add
pop
ljmp
pop
test
mov
mov
sar
push
neg
jmp
rclb
push
xchg
pop
call
test
enter
mov
jmp
xor
pop
inc
fadd
adc
pop
divl
or
push
aaa
mov
or
push
movw
inc
sub
cld
orb
hlt
mov
xchg
repz
adc
cmc
adc
inc
test
lock
mov
aam
movsl
push
loop
inc
xor
mov
aam
push
rorb
call
and
adcl
push
pop
test
pop
push
pop
adc
push
push
mov
pop
push
mov
std
std
dec
nop
cmp
je
xchg
or
lcall
cwtl
push
lds
dec
jb
sbb
cmpsb
xor
mov
mov
andl
je
fs
push
out
cmp
lea
mov
fidivrl
mov
pop
or
pop
out
adc
ja
mov
call
dec
mov
cwtl
mov
sahf
jmp
mov
and
inc
mov
xchg
xchg
aad
add
xor
mov
mov
cltd
xorl
push
pop
aas
dec
pop
clc
enter
pop
leave
add
ror
enter
pop
sbb
sar
enter
or
jmp
and
nop
sub
mov
xlat
fs
xor
cmp
mov
lret
xchg
mov
sbb
movsb
push
push
sub
loope
xor
loopne
mov
xchg
pusha
nop
pop
adc
push
not
in
inc
lret
cmpsl
lock
out
ret
mov
pop
aam
sbb
test
call
test
bound
das
das
fistpll
call
xor
push
dec
adc
pop
xor
mov
sub
pop
ret
test
cwtl
xor
add
dec
movsb
inc
or
add
test
dec
sub
leave
dec
sub
xor
clc
test
inc
dec
fistl
int
fisubs
sar
ss
pop
xchg
cltd
pop
shrb
dec
mov
fistl
push
pop
out
cmpb
pop
enter
jb
ret
mov
inc
sbb
jle
pop
cmpsl
scas
dec
clc
outsl
mov
mov
fdivs
cmpsb
mov
push
mov
xchg
xor
push
inc
pop
mov
lods
sarb
and
daa
movsb
rorl
rcl
mov
inc
jne
xchg
fistl
push
mov
pop
mov
clc
jle,pn
sbb
sbb
mov
cmpsb
mov
push
adc
sbb
call
ret
dec
insb
jae
inc
gs
nop
jbe
jo
mov
outsb
xlat
rsm
imul
call
insb
out
int3
add
ljmp
imul
push
cmpsb
addb
cld
xchg
adc
lods
push
mov
xchg
xor
and
cmp
mov
push
mov
fs
pop
test
jmp
pop
cmp
push
mov
or
arpl
rolb
push
or
xchg
adc
dec
imul
inc
out
lods
addr16
cmp
mov
mov
push
jp
push
push
nop
sub
les
xorb
sub
xor
or
js
sbb
dec
jmp
nop
enter
mov
shlb
in
pop
hlt
cltd
mov
push
mov
add
fdivrl
xchg
push
enter
cmp
adc
enter
cmp
xchg
paddusb
nop
jecxz
adc
cmp
sub
subl
je
das
fs
pop
xor
push
push
adc
xchg
sbb
or
in
mov
cmpb
xchg
push
xor
incb
inc
ja
sbb
cli
cs
sbb
rcrl
cmp
out
fs
ret
inc
cmpsb
sub
add
dec
rdtsc
repnz
pushf
sbb
inc
in
dec
daa
pop
sbb
and
adc
sbb
xchg
cmp
pop
add
mov
or
sub
sbb
inc
push
and
pop
xor
inc
push
enter
add
pop
mov
adc
cmpl
pop
je
push
sti
out
or
inc
mov
shrl
sub
lea
jne
pushf
inc
outsl
test
aam
popa
cmp
roll
outsb
or
aad
or
dec
imul
dec
sub
pop
call
ljmp
push
inc
or
mov
adc
test
or
jae
and
adc
icebp
or
adc
sbb
rclb
subl
rep
jmp
divb
adc
pop
pusha
dec
or
pop
mov
or
push
jo
insb
sub
cmp
stos
or
add
or
mov
gs
rcll
lock
xor
arpl
pop
xchg
roll
movsl
cmp
movsb
jb
sbb
shll
mov
arpl
jle
mov
and
mov
cltd
dec
mov
adc
push
adc
movsb
dec
movsl
or
ljmp
decl
sbb
pop
outsl
or
test
pop
pop
dec
call
adc
push
cmp
test
xchg
pop
lret
push
out
fimull
inc
xchg
adc
decb
or
xchg
insb
lock
sub
cmp
xor
mov
pop
iret
subb
and
xchg
mov
jns
inc
sbb
push
pop
shr
int3
jns
sbb
dec
jnp
inc
pop
mov
pop
movaps
and
mov
mov
in
stc
xor
insb
cli
and
or
mov
imul
std
inc
pop
xchg
pop
call
xchg
fsubrp
push
or
sub
aam
mov
xor
mov
pop
sbb
mov
pusha
sub
pop
add
cmp
sbb
pop
sbb
sbb
or
in
call
jo
outsb
add
les
sub
lcall
pop
pop
adc
or
arpl
scas
cmpsb
test
adc
in
cmpl
pushf
adc
jno
icebp
push
xchg
sub
or
pop
push
jb
fcoml
movsb
inc
test
sbb
or
mov
or
add
adc
push
sbb
add
or
cld
call
aam
lock
inc
mov
mov
in
inc
jle
jo
je
lods
push
jle
test
pop
sub
sbb
add
ficompl
sub
or
or
cmp
adc
adc
xchg
or
ds
movsb
mov
fmul
mov
sbb
stos
mov
movsb
push
add
jle
je
aam
cmp
or
xchg
inc
mov
or
push
test
dec
dec
out
cmp
and
or
push
push
lret
or
xor
test
jle
incl
dec
pushf
fisubrs
xor
lods
mov
sbb
push
cmp
sbb
enter
and
jo
inc
add
mov
adc
or
jbe
ret
pop
or
lret
inc
into
adc
xorl
or
xor
jb
addb
gs
push
inc
add
push
loopne
mov
adc
stos
dec
add
cmp
or
sub
pop
inc
or
sbb
pop
xchg
push
push
cli
mov
xchg
inc
out
fwait
inc
leave
pusha
jge
xorb
sub
mov
dec
mov
lret
mov
ret
out
mov
shrl
aad
and
pop
dec
dec
stc
shlb
jbe
ror
stos
push
cmp
pop
and
out
addb
push
sub
or
adc
jmp
dec
or
add
ds
and
in
js
mov
adc
and
inc
push
incb
scas
sbb
or
sti
or
std
movsb
adc
pushf
and
add
adc
scas
loop
daa
lods
les
stos
mov
test
add
jl
inc
or
icebp
pop
push
or
movsb
sbb
or
pusha
or
clc
or
sbb
adcb
pushf
adc
sub
push
inc
push
data16
enter
or
and
adc
mov
je
pop
mov
xchg
xor
add
mov
mov
clc
sub
loopne
cltd
shlb
jle
adc
out
mov
ficoml
inc
leave
adc
inc
adc
stc
movsb
cwtl
cwtl
orb
test
mov
xchg
dec
dec
cli
push
sub
and
test
pop
int3
and
test
ds
adc
ss
mov
inc
add
xchg
imul
jmp
mov
or
stc
adc
adc
into
rolb
pop
sbb
stc
xchg
sub
push
mov
ret
dec
mov
dec
in
xor
push
ror
or
pop
xchg
and
clc
pop
add
push
das
xor
or
addb
xor
stc
or
clc
add
add
std
insb
and
adc
jge
mov
push
pop
and
sbb
and
jle
pop
jl
mov
xchg
test
stc
add
jle
ljmp
adc
adc
push
or
mov
mov
test
inc
sbb
xor
cwtl
cmp
jno
repz
cmpsl
or
sbb
pop
adc
cmp
mov
insb
mov
and
loop
inc
testb
add
adc
ficoml
mov
adc
adc
in
jl
test
jl
jl
test
and
mov
dec
nop
enter
enter
xor
sbb
sbb
or
xchg
and
jno
xchg
adc
cli
xchg
mov
ror
leavew
adc
lcall
adc
mov
test
ss
lret
subb
repnz
nop
adc
adc
lock
cmpsl
or
and
in
in
or
jmp
in
and
pop
enter
std
xor
enter
test
mov
dec
xchg
adc
hlt
pop
and
or
dec
fidivs
loope
and
lods
call
jbe
inc
jno
movsb
mov
add
add
sub
hlt
and
into
sahf
inc
hlt
dec
jp
jbe
cmc
in
sahf
or
das
or
mov
inc
and
jb
and
push
mov
mov
push
xlat
xchg
ds
xchg
or
es
sub
lcall
outsl
push
shl
bnd
or
push
or
and
cld
xor
or
aam
bnd
ds
jmp
sbb
xchg
adc
cmp
movsb
jge
fnstcw
and
dec
pop
xchg
test
xchg
sbb
cmp
rcrb
jne
mov
xor
js
iret
or
xchg
fimuls
push
sbb
aam
rcrb
add
add
mov
lods
and
lods
adc
dec
mov
push
cmp
pop
pusha
adc
test
shlb
mov
sub
or
divb
je
test
and
dec
push
push
mov
xchg
adc
scas
push
add
aad
adc
sar
bound
dec
divb
adc
movsb
std
inc
add
imul
push
inc
push
jmp
sub
push
xlat
subb
and
in
push
in
popf
sub
pushf
clc
lcall
daa
push
adc
or
fwait
mov
sbb
xlat
in
cmp
sub
dec
lock
or
inc
mov
jge
jmp
mov
xchg
xchg
in
loop
out
adc
and
fmul
shlb
or
cwtl
not
add
sbbb
or
jge
cmp
or
push
xchg
lahf
adc
jo
aas
adc
mov
or
sub
and
dec
or
adc
rcrb
js
ss
add
fbld
daa
sub
adc
push
adc
and
mov
mov
mov
aam
mov
shlb
xor
pop
pop
fdivrs
mov
ds
adc
nop
adc
out
push
adc
or
mov
addb
inc
or
aaa
in
shlb
dec
fdivp
iret
sbb
push
adc
call
jne
cmp
jae
imul
fstps
or
jg,pt
movsl
or
and
adc
cmp
adc
in
dec
in
les
call
mov
sbb
push
jo
sarb
fadds
call
sbb
pop
mov
push
jbe
xor
mov
jo
loope
sbb
clc
jmp
fsubrs
push
pop
cli
cmp
or
scas
test
out
pop
xlat
sub
sbb
rclb
addl
je
out
mov
push
or
aaa
scas
sti
mov
inc
popa
sub
cmp
add
into
push
pop
mov
xchg
pop
ret
test
mov
inc
enter
sbb
les
ret
aam
pop
fsubr
dec
inc
pop
pop
shl
nop
pop
inc
adcl
push
shl
fcoml
push
or
popa
mov
xchg
arpl
push
or
imul
xchg
test
xor
das
outsb
sub
push
call
lock
jmp
lret
pop
jle
inc
or
daa
lods
pop
je
push
fs
push
jb
sub
adc
adc
or
push
xor
push
and
add
rcll
dec
scas
dec
mov
pop
dec
mov
sbb
sub
or
nop
cmp
and
xor
push
rolb
or
mov
pop
jp
jno
jno
cmp
push
imul
xchg
mov
insb
rcll
xchg
dec
or
shlb
fwait
cmp
sub
call
mov
gs
jge
lea
inc
xor
orl
add
cld
shr
xor
fcmovb
aaa
inc
xchg
add
or
cli
or
movsw
pop
add
pop
pop
pop
pop
jg
jmp
add
and
or
pop
pop
es
pop
mov
jno
nop
movsl
mov
adc
mov
in
pushf
and
push
scas
popf
push
or
sbb
pop
flds
mov
mov
xor
sar
mov
testb
cld
outsb
jg
xchg
pop
and
addl
loopne
inc
jp
and
mov
fldln2
iret
or
shl
sbb
add
and
sub
xor
les
rcll
dec
sbb
imul
dec
mov
cmp
pop
daa
cmpl
push
adc
arpl
push
sub
or
mov
add
jbe
mov
lea
adc
ret
cmp
cmp
and
jg
fiadds
add
sbbb
fnstcw
int3
imul
push
dec
adc
les
or
adc
ret
or
cld
add
sub
insl
push
cmp
xchg
fstpl
push
mov
ret
lret
repz
mov
or
das
stos
mov
mov
sbb
pop
adc
mov
fisttpl
in
sub
ja
mov
add
dec
mov
add
daa
clc
int3
mov
sub
push
in
sub
call
add
xor
lahf
out
inc
jl
jo
lcall
jmp
mov
outsb
imul
ja
pop
push
push
idivb
popaw
arpl
sti
push
jmp
scas
mov
ds
rorb
cltd
sub
jae
xor
push
je
push
jne
bound
ljmpw
jge
dec
push
dec
sbb
cld
aas
sub
loopne
imul
stos
and
fstps
jae
xor
jo
outsl
ljmp
dec
mov
sbb
inc
jmp
jbe
dec
iret
push
lods
sub
cmp
pop
dec
dec
fs
dec
sbb
daa
movsl
js
lods
adc
testl
movsl
cmpsb
ja
adcl
push
test
ja
jl
cmp
loopne
jp
clc
imul
dec
xor
push
pushf
aad
mov
sarl
loope
xchg
fistps
les
or
inc
or
jae
adc
movl
push
data16
dec
gs
cmp
dec
cmp
addl
mov
add
sti
pusha
jl
adc
dec
stos
add
mov
or
nop
sub
ljmp
subb
cwtl
movsb
sbb
and
or
call
xor
or
mov
mov
and
sahf
ss
xor
movsb
pushf
jmp
mov
jb
rolb
mov
dec
out
iret
test
dec
mov
dec
inc
arpl
adc
gs
and
push
pop
jo
or
inc
fdiv
mov
inc
subl
dec
nop
xchg
mov
les
mov
adc
add
and
dec
push
xchg
insb
and
dec
popa
loop
gs
js
cmp
xlat
leave
dec
mov
pop
shll
cmp
daa
subl
fs
push
add
call
jo
push
sub
add
inc
push
cmp
test
movsl
ljmp
adc
and
arpl
mov
mov
dec
sbb
daa
mov
push
enter
mov
sbb
xor
jb
pushf
mov
and
sub
sbb
cmp
dec
les
push
dec
cmpb
and
xchg
cmp
insb
and
jne
outsb
and
mov
mov
pop
inc
xchg
xlat
pop
mov
and
cmpsb
mov
pop
adc
sbb
into
out
call
js
jl
mov
sbb
add
cmp
jmp
sub
fldenv
jo
int3
jp
xchg
add
lret
mov
cmp
adc
or
inc
cltd
cmp
lock
lcall
sub
adc
aaa
xchg
or
mov
cltd
inc
or
sbb
arpl
outsb
sub
pusha
sub
sbb
xor
pop
sbb
scas
adc
leave
lock
push
mov
adc
dec
push
and
dec
dec
sub
imul
shrl
iret
adc
sub
push
fs
mov
lea
es
ficoml
sbb
or
dec
push
cli
mov
add
sub
adc
dec
xchg
dec
stc
cli
test
pop
adc
and
inc
pop
std
jg
call
lods
push
inc
dec
pusha
fisttpll
test
bound
mov
push
push
mov
push
hlt
jl
and
xor
or
push
ljmp
xor
push
push
cwtl
push
stos
xor
ret
fdivs
jp
lock
jo
mov
test
adc
lcall
or
mov
pusha
mov
lods
stc
adc
pop
nop
add
repnz
iret
or
xor
or
push
adc
adc
iret
lock
add
or
adc
jo
cwtl
das
cwtl
nop
repnz
mov
sub
and
ret
test
xchg
bound
jl
psubusw
mov
call
dec
pop
and
shll
rorl
and
jl
inc
movsl
call
mov
pop
add
adc
cmpsb
adc
and
fiadds
mov
pop
lods
adc
adc
mov
stc
mov
dec
push
adc
and
js
andw
mov
and
xor
mov
js
int3
and
push
push
iret
shl
push
dec
mov
mov
push
bnd
lea
push
sub
dec
pusha
lock
shlb
filds
push
sbb
mov
adc
sbb
rcrl
shl
jbe
mov
or
adc
or
inc
das
adc
sbb
or
mov
lea
mov
or
add
mov
sub
and
sbb
inc
mul
mov
adc
mov
js
fs
mov
adc
or
or
xchg
aam
rolb
mov
jl
fs
push
xchg
inc
and
push
xor
mov
push
cld
lds
dec
mov
pop
and
stc
dec
shlb
test
imul
mov
or
xor
pusha
adc
or
fs
dec
mov
and
dec
inc
clc
xchg
int3
sbb
push
and
dec
sub
shrb
je
add
loop
lds
imul
addb
add
cld
lret
xor
mov
ret
nop
inc
push
mov
les
and
call
aad
mov
imul
daa
xchg
decl
and
adc
enter
ds
xor
in
cmp
add
aas
roll
notb
mov
jg
in
or
je
scas
jge
xchg
mov
imul
push
dec
cmp
push
xor
hlt
adc
adc
xor
and
pop
mov
mov
push
je
push
and
and
mov
es
pop
sub
jae
sbb
xchg
aam
in
push
imul
subb
xchg
call
inc
xor
and
int3
inc
mov
sbb
adc
add
subb
or
jnp
xor
cmp
mov
data16
cltd
xchg
andb
jg
pop
dec
mov
loopne
in
mov
sbb
push
inc
adc
push
adc
lock
in
add
and
jmp
mov
mov
pop
push
pop
xor
js
and
pop
push
cmp
push
or
sub
sub
es
push
add
xorb
xchg
lcall
sbb
mov
sub
js
sahf
jl
xchg
in
and
pop
and
popl
jb
fsubrs
and
cli
icebp
xchg
add
mov
fcomps
add
popf
push
sub
je
cwtl
test
jbe
popa
in
push
push
add
jbe
lcall
mov
loope
add
dec
mov
mov
in
jl
push
push
mov
mov
xchg
xchg
jae
loope
or
dec
rclb
les
or
pop
lock
cmp
cmp
rolb
or
or
push
cmp
cmp
cmp
cmp
jbe
dec
and
or
nop
cmp
cmp
cld
fmull
or
andb
decb
je
test
and
mov
mov
fdiv
rorl
mov
pop
loope
punpckldq
in
bound
aad
mov
setl
jmp
push
adc
sahf
jp
sahf
movsb
clc
jb
int3
cli
xor
pushf
rclb
pop
stos
sbb
mov
adcb
cld
lods
call
sub
mov
pop
clc
loop
and
test
sub
inc
pop
mov
ficomps
es
lcall
and
nop
mov
lock
and
inc
dec
bound
add
sbb
sbbb
cmp
xor
pop
cmp
push
sbb
inc
dec
pusha
mov
rcrb
add
dec
dec
xchg
cmovl
lahf
push
add
inc
test
jb
je
pop
push
cmp
push
push
push
dec
test
sbb
inc
xchg
je
sahf
mov
sub
pop
mov
push
enter
push
push
inc
dec
jo
xchg
leave
cmpsl
repnz
sub
sub
pop
cmc
xor
insb
sub
sbb
add
xor
xchg
sub
or
outsb
mov
cmp
popl
and
inc
leave
push
inc
sbb
fisubs
xchg
mov
mov
pusha
lret
pop
xor
add
imul
mov
jb
pop
add
into
xchg
iret
enter
ret
repnz
push
xchg
inc
add
daa
sbb
pusha
loopne
call
mov
mov
sub
xor
bound
jg
out
hlt
les
in
push
dec
mov
data16
sub
adc
jns
pop
or
sbb
add
cmp
test
sub
mov
faddp
push
xchg
and
add
xor
add
lea
lock
icebp
dec
xor
bound
dec
rcpps
jmp
sub
xor
mov
inc
cmp
sub
lds
bndstx
nop
jmp
or
pmaddwd
pop
jmp
sub
insl
test
fdivrs
leave
sub
mov
jmp
push
cmp
adc
ljmp
inc
scas
cmp
add
add
jg
inc
add
xor
and
inc
or
and
das
xchg
test
das
push
cmp
pop
add
ss
mov
cwtl
push
cmp
inc
xlat
pop
pop
add
in
nop
sbb
dec
out
sub
xor
add
adc
mov
dec
es
xor
push
sub
outsl
std
stc
inc
sbb
aad
lock
add
shlb
sub
fcoml
mov
testl
push
xlat
das
and
popf
jo
sbb
aas
test
inc
test
and
jo
cltd
test
cld
or
andb
aas
inc
mov
fiaddl
mov
jb
pop
repnz
mov
mov
roll
push
in
mov
push
push
or
inc
xor
aad
and
add
fwait
sub
sbb
enter
daa
gs
or
mov
pop
sbb
cmp
jge
dec
inc
fdivrs
fldt
arpl
xchg
arpl
stos
and
pop
inc
shlb
movsl
test
adc
mov
pusha
cmp
mov
shlb
adc
sbb
clc
sbb
jo
in
pushf
inc
push
hlt
mov
mov
mov
dec
outsb
and
bound
cmp
mov
incl
lret
sub
sub
jle
dec
shrb
or
mov
and
into
or
orb
lods
dec
add
flds
mov
movsl
movsb
xor
fmull
outsl
insb
gs
imul
push
push
pusha
sbb
and
sbbb
jo
jb
insl
and
sahf
dec
xorb
arpl
loop
add
adc
xor
inc
dec
or
inc
push
adcl
inc
xor
mov
xor
xlat
xor
sti
adc
cmp
iret
scas
ds
xor
jp
cmp
jge
inc
adc
ljmp
shll
fiaddl
or
sbb
testb
adcb
mov
pop
adc
jne
lea
push
xlat
shrl
and
fs
push
call
les
push
pop
stos
mov
movsw
jb
popf
je
test
rclb
and
xor
and
mov
pop
mov
mov
cmp
jecxz
int3
loop
aam
cmp
bound
sub
pop
add
cmp
inc
dec
hlt
mov
test
jp
enter
pushf
pop
inc
pop
push
js
pop
test
mov
xchg
pxor
push
jns
adc
imul
pop
popa
xor
or
mov
push
insb
mov
mov
repnz
adc
sbb
and
jno
xchg
mov
and
fiadds
cmc
lods
jo
les
dec
popf
cld
pop
pop
mov
pop
in
jl
sbb
and
jns
cs
imul
push
inc
cmp
adc
mov
popf
rclb
cmp
adc
outsb
mov
jo
and
mov
push
add
and
ds
add
orb
lret
adc
lret
and
sub
stos
pop
mov
sub
es
ljmp
inc
push
clc
xchg
xor
push
or
jl
mov
test
jo
add
add
imul
scas
dec
pop
shl
pop
scas
dec
push
mov
dec
and
enter
pop
mov
js
sub
sbb
ret
mov
adc
jbe
ss
in
ljmp
inc
lods
inc
jbe
pop
add
in
subb
jns
lods
cli
push
mov
pop
psubd
scas
ret
adc
add
and
outsl
data16
add
sbb
fs
sbb
notl
pop
movsl
push
mov
push
gs
imul
mov
and
cmp
and
roll
ss
addb
and
xor
or
gs
mov
mov
or
cwtl
adc
mov
and
lods
mov
mov
or
mov
or
adc
push
or
sub
mov
cwtl
inc
outsb
adc
repz
lea
imul
out
test
scas
mull
jne
push
mov
adc
sti
js
xor
mov
inc
adc
pop
loop
push
repz
dec
idivb
mov
dec
mov
pop
into
scas
mov
xchg
push
mov
push
jge
notl
jns
add
or
idivl
jne
adc
and
dec
fdivr
lret
jo
adcb
push
or
enter
mov
movsl
mov
sti
cmp
pop
pop
or
jo
or
jmp
cmpb
jne
bnd
sub
in
or
jo
pinsrw
and
cmp
mov
lock
lea
dec
push
sbb
test
hlt
mov
ret
cmp
jg
xchg
pop
mov
jae
test
jl
cmpl
adc
push
xlat
push
call
push
mov
shlb
sti
cmpsb
pop
add
and
or
inc
jg
mov
in
xor
add
push
call
ret
adc
and
mov
mov
sub
inc
std
imul
jbe
das
ror
pop
pop
popf
not
jb
and
sub
je
jmp
fstl
jmp
push
push
call
insb
and
repnz
hlt
out
shlb
mov
scas
mov
jb
lods
test
or
pop
test
or
mov
enter
movsl
sbb
ret
adc
cmpsb
loop
xor
xchg
popf
test
push
dec
jb
inc
mov
addl
insl
aad
dec
inc
lea
jne
and
icebp
push
xchg
adc
pusha
imul
enter
push
jmp
inc
sbb
jnp
je
in
loope
inc
cld
enter
imul
pop
into
call
mov
xor
pushf
dec
inc
and
in
add
mov
jl
or
adc
mov
aad
icebp
mov
and
leave
sbb
imul
sbb
lods
add
pop
adc
mov
and
inc
or
jo
xchg
outsl
pop
leave
fildl
push
or
lds
and
aad
es
outsl
push
dec
outsb
mov
pushl
test
or
lods
je
adc
movsb
sbb
daa
xchg
pop
ja
adc
adc
mov
and
xchg
mov
pop
icebp
rorl
push
or
adc
add
nop
nop
dec
lea
adc
add
xchg
mov
sti
pop
pop
jge
dec
test
push
inc
sub
lret
push
jle
cmpl
jne
push
popf
popa
mov
not
ja
stc
lds
push
fcmove
data16
push
push
int
and
call
cmp
sbb
roll
fnstcw
pop
insb
arpl
gs
mov
sub
cmp
push
ja
xchg
not
sbb
je
add
into
orl
xchg
mov
out
rcll
fnstenv
cli
jg
test
and
in
sti
mov
mov
popf
insb
inc
and
xchg
xchg
jbe
xor
stos
mov
jmp
inc
out
packssdw
jle
rcll
adc
push
pop
insb
xor
jno
or
and
or
sbb
test
mov
rcrb
loopne
jp
adc
inc
or
ret
jg
loope
mov
lods
je
insb
mov
cmp
xchg
inc
repz
jbe
xchg
jne
sub
test
adc
cmp
jnp
mov
cmp
sub
int
mov
imul
into
fists
push
aad
pop
sbb
and
adc
cmp
inc
loope
mov
add
cmp
mov
ret
insb
dec
cmp
addr16
fwait
dec
mov
les
inc
jns
pop
xchg
movsb
call
sbb
in
ja
mov
fs
dec
and
mov
mov
roll
sbb
mov
pushf
inc
adc
mov
out
sahf
test
adc
jne
mov
push
push
xchg
push
decb
adc
popf
xchg
out
xor
push
sti
jnp
popf
add
sbb
stc
cmp
lds
inc
lods
or
or
jg
xor
aaa
movsl
cmp
in
fwait
iret
push
mov
fs
sbb
inc
add
movsl
mov
cltd
xor
setl
sbb
or
push
das
dec
test
shll
test
cld
cld
dec
push
cmp
inc
movsb
pusha
push
jo
jns
testl
mov
cmp
imul
xchg
popa
leave
movsb
jge
cmp
push
mov
lret
into
movsb
jmp
and
adc
push
jne
sub
popa
lahf
push
xorb
cmp
mov
xchg
xor
xor
push
push
mov
cwtl
cwtl
adc
aaa
movl
jge
outsb
and
fimuls
mov
fwait
stos
popf
sbb
inc
pop
xchg
int
xchg
aam
push
les
dec
daa
add
in
scas
jnp
add
sub
inc
push
sbb
ret
bound
les
test
mov
cmp
sar
dec
ret
sub
insb
loopne
cmp
mov
sarl
movsl
push
cmp
xchg
ljmp
mov
inc
inc
popf
je
push
insb
fs
sub
sub
subl
inc
test
cmp
adc
mov
push
adc
xchg
or
dec
test
push
inc
pusha
gs
addl
xchg
nop
and
sbb
xchg
adc
xchg
mov
push
cmp
jecxz
dec
ret
jecxz
jo
rolb
push
xchg
xor
ds
sub
and
fwait
or
sub
aaa
push
je
addb
mov
and
cmp
dec
inc
insl
inc
test
mov
sub
lret
sub
cmp
lods
xchg
adc
mov
jbe
pop
inc
fisttpl
mov
fdivrl
imul
xchg
lret
or
lcall
or
sbb
pop
cmpl
aad
xchg
sub
push
push
xchg
push
fisttpl
or
mov
push
stos
pop
cmp
inc
xor
xlat
inc
xor
adc
sbbb
push
dec
andb
jo
sub
xchg
loopne
adc
sub
mov
mov
inc
sbb
xchg
push
push
mov
loop
xor
lret
adc
xchg
fldcw
stos
mov
mov
push
es
pop
mov
mov
mov
out
xchg
xor
stc
mov
outsl
xor
ljmp
and
fbld
mov
pop
push
sub
jecxz
sbb
xor
in
jmp
mov
jl
stc
dec
mov
psllq
test
jae
sub
imul
cmpsl
pop
lds
rcll
push
sbb
dec
fidivrl
sub
xor
movsb
xor
push
jbe
jmp
decb
rcrl
jno
mov
lock
sti
pop
push
iret
lds
or
push
imul
jge
xor
scas
bound
lahf
hlt
das
popf
add
or
push
add
xchg
fnsave
addr16
push
rolb
push
daa
hlt
mov
in
sub
mov
mov
sbb
enter
int3
adc
xchg
lods
stos
sub
es
pushf
inc
scas
shll
mov
adc
dec
es
push
or
test
ss
nop
adc
pop
psubd
add
jne
add
int3
push
push
pop
sbb
rorl
ja
or
fisttps
adcb
xchg
mov
test
or
mov
fdivs
jne
fwait
cmp
mov
xor
sbb
or
or
jle
or
cmp
xchg
roll
mov
shll
sub
nop
mov
mov
out
mov
orb
mov
imul
hlt
das
testl
cmp
rolb
mov
test
andl
sbb
mov
jb
or
sbb
push
xchg
test
xlat
inc
ficoml
inc
push
addl
dec
data16
mov
ret
pop
mov
mov
dec
jns
jle
call
nop
test
push
push
shlb
insb
mov
inc
cmp
cmp
shr
cmpsl
xchg
and
add
or
andl
dec
adc
call
sbbl
or
test
les
push
movsb
xchg
mull
scas
or
mov
add
xchg
test
jmp
sarb
mov
or
cwtl
dec
test
mov
and
inc
sub
andl
or
adc
and
or
jmp
out
push
shlb
pop
add
xlat
mov
add
popa
dec
jge
pop
dec
dec
decl
xor
mov
cmp
push
pop
addb
mov
sbb
mov
lret
and
or
push
lret
xlat
test
sti
or
adc
into
cli
inc
ss
stc
aad
or
jmp
pop
inc
or
dec
test
popa
scas
out
scas
cmp
cmp
jmp
dec
mov
lahf
dec
pop
scas
dec
xor
out
imul
push
mov
xor
xchg
push
push
ret
movsb
mov
cmp
mov
sbb
ret
inc
or
inc
mov
lea
xor
adc
mov
push
adc
dec
mov
mov
xchg
sti
ss
jmp
xchg
or
adc
ret
push
mov
roll
push
enter
nop
push
add
and
push
and
addr16
stos
lret
cmpl
add
outsb
cli
xlat
mov
mov
push
dec
lcall
cmp
mov
pop
add
adc
jge
xchg
and
jl
or
jle
orb
pop
or
and
call
loopne
push
and
es
jge
mov
jmp
lods
or
aas
test
ds
out
push
pop
or
out
add
jns
sub
scas
mov
jmp
jne
push
stos
or
dec
loop
lods
or
call
jne
adc
mov
mov
inc
jmp
add
shr
jno
test
inc
dec
sub
push
inc
data16
pop
mov
xor
imul
fsubr
mov
insl
sbb
outsb
adc
add
push
test
movsb
dec
cli
inc
push
sub
inc
adc
push
inc
inc
ret
or
int
pop
ss
enter
adc
xor
adc
pop
je
nop
lret
or
or
add
push
mov
test
jg
mov
outsb
dec
push
nop
cmp
out
jbe
aad
and
nop
or
pop
add
mov
adc
or
cld
lods
push
addl
gs
sbb
int3
cmc
lea
stos
or
or
mov
pop
les
aaa
int
leave
adc
adc
in
ds
stc
dec
dec
push
dec
adc
cld
aaa
call
push
xchg
movsb
test
data16
adc
or
sub
push
scas
or
int3
sub
adc
xor
jle
adc
in
pusha
mov
jno
fbld
mov
mov
push
push
les
or
out
jmp
mov
testl
clc
call
push
cmp
je
pop
lea
jne
add
jbe
inc
int3
das
ljmp
push
xor
add
call
push
mov
jl
jge
imul
jmp
jmp
cmp
push
call
int3
testb
cmp
movsl
int
xchg
call
fs
inc
add
add
pop
sbb
test
and
sub
in
cmp
test
push
sub
mov
mov
or
mov
push
mov
pop
orl
es
imul
rdmsr
bswap
aas
sub
mov
mov
lods
push
inc
fbld
lods
lods
dec
stc
push
flds
sub
ret
mov
shll
test
pop
dec
pop
push
inc
cmp
into
je
pop
xchg
push
pusha
mov
inc
shl
and
sub
xor
push
dec
xor
mov
or
repz
jmp
jb
ret
xor
mov
xor
or
pop
aam
or
test
dec
add
pop
ficoms
dec
dec
loop
push
insl
mov
dec
incb
aaa
in
or
dec
mov
adc
xchg
rcll
sti
mov
and
andb
dec
lcall
les
mov
mov
jne
jmp
adc
fistl
sub
cmp
and
cmp
fs
leave
mov
outsl
sbb
rorl
add
inc
dec
inc
call
pop
xor
test
pop
sar
or
into
mov
pop
and
mov
push
popf
sbb
mov
adc
sub
loop
jg
ds
aaa
jmp
and
cmp
arpl
pusha
je
call
push
test
add
mov
fisubrs
pop
notl
mov
mov
mov
fcompl
outsl
or
or
mov
call
and
adc
adc
xchg
les
test
adc
das
sub
into
into
mov
and
cmp
insb
insl
aad
add
inc
bound
push
cld
and
into
xchg
mov
xchg
or
mov
add
pop
and
popa
lds
std
dec
mov
xchg
mov
or
and
popa
test
jmp
mov
cmpsl
fimull
xchg
push
and
jne
sbb
mov
bound
sub
pop
inc
dec
sub
add
push
dec
rcll
icebp
mov
dec
ret
orl
cltd
mov
popa
test
leave
dec
cwtl
jl
pop
jmp
push
jp
std
fiaddl
pop
push
or
cmp
cmp
bound
jecxz
lcall
cmp
dec
jbe
add
push
or
cmp
or
jns
movsl
add
in
adc
popa
aam
jbe
fists
icebp
js
addr16
aam
popa
and
cs
jae
push
sub
adc
into
ja
shr
mov
cmp
mov
aad
mov
test
inc
int3
pop
arpl
jecxz
push
inc
pop
dec
inc
push
sub
pop
insb
xchg
je
data16
pop
scas
jae
sub
sub
adc
jne
je
int
inc
inc
push
pop
push
dec
dec
inc
dec
push
push
jl
movsl
cmp
outsb
outsl
push
outsl
jg
push
push
add
sahf
pop
cwtl
xor
jge
or
inc
mov
les
or
testb
push
jmp
mov
leave
sbb
cmp
and
and
out
and
nop
sub
lahf
or
add
jg
in
push
pop
push
push
lds
shr
xor
iret
sub
lods
je
repnz
xor
dec
addr16
adc
popf
ret
or
nop
xor
clc
and
ja
sbb
enter
xor
imul
aaa
or
in
mov
or
or
aad
and
leave
sub
clc
mov
int3
lea
inc
test
mov
cmp
mov
fidivrs
push
cmp
and
and
or
xor
adc
sub
or
outsb
pop
or
or
pop
cmp
ficompl
es
adc
and
insb
stos
fs
and
jmp
call
xchg
xchg
shl
mov
jae
cmpps
mov
test
call
cmpsb
hlt
add
imul
cwtl
adc
mov
mov
aam
popf
mov
add
mov
sbb
and
es
mov
cmp
aas
or
xchg
test
mov
incl
mov
in
arpl
xlat
lret
or
bnd
mov
mov
mov
in
test
clc
call
adc
xchg
fiadds
mov
push
lock
xchg
scas
inc
mov
scas
jmp
sbb
mov
and
test
lock
pop
clc
notl
mov
in
sbb
xor
sbb
aad
loopne
and
push
clc
and
pop
inc
mov
adc
pop
data16
mov
or
add
sbb
sub
push
mov
jecxz
pop
mov
icebp
daa
xorb
das
push
push
jnp
pusha
in
mov
or
repnz
mov
dec
push
mov
push
dec
adc
fstp
iret
and
fiadds
cld
dec
clc
mov
lods
and
stos
dec
in
xchg
das
pop
pop
pop
mov
and
adc
add
pop
nop
mov
in
jl
xchg
in
cmpsl
push
mov
xchg
xor
repnz
lock
xchg
scas
pop
ret
inc
data16
push
jbe
lods
and
mov
or
dec
jne
outsl
in
icebp
mov
lock
mov
sbb
or
jbe
push
inc
outsb
pusha
pop
jle
adc
icebp
addr16
add
cmp
mov
mov
pop
jbe
test
je
jmp
movsl
lea
aam
pop
push
stos
xor
and
pop
repnz
sar
xor
lods
add
inc
jmp
das
pop
je
xchg
or
push
pop
mov
sbb
push
push
adc
lods
and
ret
leave
iret
pushf
or
clc
sub
inc
daa
dec
mov
adc
push
or
pop
push
dec
aam
dec
xor
jmp
outsb
or
jle
pop
pop
pop
outsl
mov
clc
jl
ds
int3
out
nop
mov
adc
and
imul
xlat
sti
lock
mov
lock
push
notb
nop
or
cmp
les
push
pop
test
ja
ret
or
loop
adc
xchg
lods
lret
adc
mov
mulb
lahf
adc
jecxz
lret
data16
imul
in
sbb
pop
jne
xchg
sbb
scas
pop
mov
pusha
cmp
popf
pop
scas
movsl
mulb
pop
inc
jmp
iret
sub
xchg
int
or
cli
mov
mov
je
mov
inc
outsb
lock
out
or
jo
mov
lods
ficomps
mov
jmp
jne
and
jns
xor
cmc
and
and
in
test
push
xor
xor
and
or
or
xchg
jmp
sub
cwtl
xchg
or
adc
or
xchg
xchg
and
inc
push
ret
test
imul
das
push
mov
popf
fldenv
mull
data16
mov
adc
ret
jne
and
push
pop
sbb
sbb
adc
or
or
push
xchg
xchg
cwtl
add
data16
mov
lods
jne
test
in
gs
hlt
adc
sbb
pop
hlt
fdivl
data16
mov
inc
xchg
adc
xchg
dec
in
jo
push
or
inc
sarb
popf
hlt
popf
mov
enter
inc
jmp
push
jo
jge
mov
arpl
inc
stos
cmp
decb
jmp
jns
dec
mov
rol
sub
pop
nop
jae
push
cltd
dec
or
add
loop
mov
jmp
xor
and
push
js
jb
jmp
movsl
sbb
or
fadds
inc
push
mov
jmp
and
pop
sbb
and
in
sub
imul
dec
inc
pop
in
pushl
lcall
sub
daa
movl
pop
adc
mov
or
sarl
jmp
test
fidivrl
int3
mov
iret
aaa
sbbl
or
jbe
dec
or
xchg
mov
in
pop
xchg
scas
push
or
sub
add
and
xchg
mov
xchg
mov
xchg
xchg
sbb
sbb
cltd
or
dec
cltd
adc
xor
testl
xchg
mov
or
out
add
push
mov
rclb
fnstcw
ljmp
mov
lea
adc
pop
outsl
ljmp
and
mov
es
push
int
jnp
cld
dec
xlat
lea
push
jno
pop
in
cmp
arpl
cmp
icebp
dec
lods
in
jle
sub
testb
ja
sti
add
shl
or
xor
mov
fldlg2
and
push
scas
pop
movsb
cmp
test
pop
enter
lcall
adc
std
dec
adc
test
pop
mov
cmp
add
popa
jecxz
mov
test
sbb
xor
test
int3
add
loopne
dec
sbb
sbb
adc
test
cmp
insl
test
push
dec
js
lea
or
push
cld
or
pop
sar
jne
movsb
jno
pop
rcrb
stos
sub
and
insl
jge
mov
push
and
insl
sahf
push
arpl
add
mov
mov
xor
push
xchg
insb
push
or
push
jno
insl
pop
je
jmp
fcoml
adc
mov
sub
inc
enter
call
les
add
sbb
std
mov
ds
inc
lret
inc
cli
jle
mov
fs
xchg
mov
lret
sti
pushf
cs
fmuls
nop
popa
adc
pop
loope
fdivrl
ja
pop
sti
xchg
add
movsl
sub
cld
or
mov
push
xor
sbb
call
push
cmp
mov
xchg
mov
pop
pop
in
xchg
dec
in
sahf
cmp
clc
dec
mov
imul
outsb
lea
daa
jo
push
push
dec
xor
cmp
inc
xchg
in
fistl
xchg
je
xchg
arpl
xor
or
lcall
sbb
cmpsl
or
mov
clc
jle
test
outsl
dec
sub
out
fs
je
dec
movsb
dec
jnp
xor
in
cmpsb
jmp
pop
int
es
mull
mov
imul
loope
test
shl
push
lods
or
sub
push
mov
sbb
pop
jns
adc
divl
out
xor
imul
inc
aaa
cld
stc
sub
inc
or
hlt
out
test
cmp
sbb
fisttpll
adc
pop
adc
sub
jbe
std
inc
jne
int3
or
push
es
mull
int
and
mov
mov
sub
out
rclb
mov
pop
pop
adc
adc
icebp
and
rcr
in
adc
add
xor
xor
cmc
mov
xor
jg
sub
or
xchg
pop
int3
mov
leave
add
pop
hlt
cmp
inc
into
push
cmp
push
mov
mov
or
mov
pop
mov
sarb
jmp
mov
sbb
sub
lret
jl
ja
mov
mov
jle
pop
cli
and
lea
mov
push
nop
movsb
xchg
and
lods
or
cmp
loope
push
cmp
jbe
fst
adc
and
rcl
rcl
mov
and
jl
shll
cli
push
adc
pop
leave
ret
mov
clc
ret
pushf
pop
and
pop
leave
push
pop
push
xchg
ljmp
add
jns
xor
sbb
gs
je
mov
cmpl
sbb
out
pushf
and
dec
sbb
sbb
inc
jge
jecxz
popa
lock
xor
or
test
add
mov
rcr
jle
push
fimuls
ljmp
lahf
fsts
or
mov
push
cmp
xchg
lret
push
pop
sbb
shl
dec
movsb
sar
daa
call
jl
or
xor
mov
xlat
rolb
repnz
stc
adc
arpl
fldenv
fs
inc
or
push
pop
push
jb
pop
cwtl
push
add
xor
or
add
in
and
jne
or
sbb
cmp
or
sbb
sbb
cltd
or
cmp
cltd
or
nop
add
push
mov
test
sbb
xor
pop
mov
or
xchg
enter
cmp
and
jo
fistps
inc
xor
or
mov
or
mov
jge
mov
jnp
cmp
adc
roll
xchg
push
jge
sbb
and
out
jl
inc
inc
lds
pop
mov
movsl
orl
mov
xor
lea
push
inc
pop
inc
cs
or
xor
and
adc
bnd
sub
push
jns
jecxz
lahf
sbb
cwtl
xchg
stos
mov
pop
enter
hlt
adc
sti
cmp
and
mov
and
mov
icebp
mov
and
and
sbb
mov
sbb
xchg
xorl
rorb
pop
or
lahf
inc
mov
outsb
hlt
cmp
stos
or
xchg
push
or
movsb
sub
ret
fidivl
loope
sti
sub
sub
jne
push
cmp
pop
or
sbb
cmp
adc
fs
cmpsb
lea
out
sahf
pushf
test
pop
call
sub
xchg
adc
and
sub
fcomps
sahf
sbb
or
sub
pop
mov
sbb
inc
fs
pop
mov
fidivrl
add
jb
and
cmp
lods
cwtl
inc
mov
enter
mov
mov
js
xor
inc
andl
jg
cmpsl
pop
fwait
in
or
sub
gs
adc
aam
repz
das
or
push
mov
jo
mov
lea
daa
mov
leave
xor
adcl
lea
push
mov
add
sbb
add
cmp
pushf
das
leave
push
cmc
fwait
sub
fnstsw
inc
adc
sub
sbb
sub
aad
arpl
pop
sbb
std
sub
into
lods
mov
lret
xor
jne
mov
data16
and
popf
pop
xchg
mov
dec
rcrl
inc
out
push
xchg
in
sub
movsl
stos
int3
dec
add
aam
daa
hlt
or
and
enter
xor
loop
enter
xchg
cmp
call
inc
adc
movzwl
sbb
jns
sti
testb
pushf
int3
xor
inc
adc
mov
add
or
je
add
inc
and
mov
dec
std
mov
xchg
jp
call
insb
push
out
es
pop
cmp
cmp
int3
and
xor
imul
jge
clc
sbb
popa
sbb
xor
iret
xchg
arpl
mov
or
dec
add
push
pop
repnz
mov
xchg
sbb
sub
jmp
and
idivl
and
and
push
out
data16
mov
add
mov
or
dec
out
test
test
sarb
xchg
jo
call
cmc
or
push
pop
repnz
cmp
and
mov
call
lahf
cmp
lcall
mov
sub
test
dec
clc
and
mov
daa
icebp
add
pop
les
dec
push
jle
int
ja
push
cmp
pop
sub
xchg
dec
pop
lock
mov
test
das
adc
mov
imul
data16
inc
push
add
repz
or
lcall
daa
mov
je
or
dec
xor
movsb
lret
cs
mov
jg
stos
or
xor
push
cmp
gs
and
shl
clc
inc
call
int3
jbe
cld
lods
sbb
les
mov
jno
xor
out
adc
push
sbb
cltd
outsl
mov
inc
mov
pop
dec
pop
push
push
sbb
repnz
data16
arpl
inc
add
cmc
jecxz
rolb
repz
mov
push
imul
das
pop
sub
test
or
std
enter
dec
lock
sub
enter
pop
mov
fwait
call
and
js
and
add
xchg
les
mov
pushf
mov
das
les
call
or
pop
or
js
pushf
mov
adc
push
lock
cmp
movsl
pop
into
and
ret
cmp
pop
sbb
add
pop
cmc
mov
sub
and
loop
fnsave
push
adc
mov
in
scas
mov
xchg
cli
rcr
paddsb
mov
jg
cmp
or
jne
outsb
inc
push
lods
jle
xchg
push
scas
jb
inc
cmp
mov
aam
pop
xor
jbe
adc
xchg
and
call
lds
dec
lahf
filds
cmp
sbb
out
or
dec
inc
lret
jp
lods
mov
inc
inc
insl
push
cmp
jno
cmpsl
lock
lret
jl
dec
fadd
insb
sbb
xchg
xchg
dec
fcompl
mov
cli
dec
repz
push
xchg
mov
adc
xchg
out
mov
pop
dec
pop
addb
xlat
cli
lahf
xchg
xorb
xchg
sub
insb
dec
lds
sbb
outsl
cmp
cmpsl
out
sbb
mov
inc
repz
or
mov
dec
cmp
jnp
inc
mov
out
dec
mov
push
popa
icebp
adc
push
les
push
shrb
push
dec
dec
aaa
test
adc
inc
add
lods
lahf
or
xor
arpl
ud1
xchg
and
cmpsl
push
and
insb
ficomps
add
mov
sbb
cs
les
js
call
push
push
arpl
jp
cmp
mov
outsb
mov
cmpsb
ss
sahf
movsb
sub
andl
jmp
andb
mov
and
sbb
jbe
inc
and
je
push
mov
out
mov
adc
cmpl
or
adc
jle
push
sub
sahf
aam
or
aam
test
jns
je
leave
add
stc
cmp
imul
test
rorl
ret
mov
cmc
popf
jbe
clc
lock
jp
mov
fs
pop
adc
push
inc
jmp
pop
xchg
inc
mov
jge
xchg
aad
test
and
dec
lock
jmp
out
and
push
notl
dec
mov
jmp
fildl
les
lea
inc
add
xor
mov
pop
shll
cmp
pop
fdivl
stos
test
mov
cmc
adc
xor
fadd
push
mov
les
ficomps
adc
push
jno
mov
mov
mov
add
cmpb
mov
dec
call
sarb
fwait
lods
js
xor
push
jmp
out
mov
inc
adc
shrb
loope
add
cmp
jbe
mov
call
jmp
mov
mov
out
rolb
or
push
adc
mov
push
adc
mov
push
inc
mov
push
adc
lock
lods
xorl
dec
out
lock
dec
sti
lock
loop
fldl
ja
enter
add
push
pushf
sbb
jg
add
add
daa
add
in
inc
cli
xor
or
push
push
inc
icebp
xor
adc
push
or
lods
gs
inc
cmpb
cld
rolb
cwtl
addr16
xchg
sbb
and
or
dec
scas
addl
mov
out
imul
add
incb
jmp
test
add
or
aad
sti
movsl
movsl
sub
cmp
movsb
cmp
out
fldcw
mov
and
dec
pop
stc
mull
adc
dec
cmc
mov
cli
xor
mov
cld
xorb
cs
push
in
sti
sub
adc
es
mov
fiaddl
cltd
push
xlat
cmp
or
outsb
stos
je
mov
push
std
insb
mov
push
mov
mov
mov
jns
pop
push
mov
sbb
mov
xchg
and
data16
fiaddl
sub
sbb
repnz
mov
repz
xchg
cmp
nop
xchg
dec
lea
dec
movsl
pop
out
mov
or
push
cmc
inc
divb
outsl
lea
aas
push
lahf
pop
sahf
test
sub
aas
call
dec
add
stc
aad
xor
call
mulb
shll
imul
aad
xor
outsb
pop
or
dec
and
ffreep
pop
adc
xor
xor
fisttps
cs
push
dec
ret
call
popf
sarb
cmp
fldl
pop
je
inc
sbb
mov
jecxz
adc
ret
jb
js
mov
push
aam
or
mov
leave
aad
add
cltd
insl
das
mov
and
sbb
push
push
and
cs
xor
inc
movsb
mov
scas
sbb
aas
mov
ss
sbb
xor
cmp
add
push
ss
push
sbb
aas
cmp
gs
test
add
out
mov
mov
lret
or
test
inc
push
loop
popa
add
gs
mov
pop
int
je
cmp
add
es
pop
sbb
jae
or
movsl
fs
jns
and
sbb
jp
cwtl
insb
inc
jo
push
into
movsl
jg
jp
psubsw
sub
sbb
lahf
push
sbb
xchg
mov
ret
push
adc
jle
stc
or
fadds
push
pop
lret
adc
push
cmp
mov
xor
xchg
sbb
inc
pop
adc
mov
sbb
or
adc
or
std
or
jne
jge
iret
ret
lcall
add
mov
or
push
push
fcomps
popa
or
mov
adc
sbb
sbb
and
and
and
jbe
in
imul
test
int3
test
fsubr
pop
clc
push
cmpb
push
push
pop
mov
ret
ljmp
xor
inc
or
sbb
and
decb
inc
sbb
sbb
icebp
int3
adc
sbb
bnd
mov
je
loopne
cld
hlt
shlb
push
pusha
pop
or
adc
lock
in
mov
incl
push
js
loop
pop
and
jle
ljmp
sti
inc
mov
jne
push
push
lcall
das
out
and
adc
enter
mov
jb
std
sub
pop
pop
adc
mov
cltd
fstp
and
sbb
adc
jne
inc
clc
insb
or
ret
xor
addr16
or
cwtl
jne
jg
ret
cmp
shlb
xchg
and
sbb
and
adc
sbb
or
push
hlt
inc
add
hlt
test
xchg
sub
mov
or
inc
arpl
and
adc
add
aam
out
inc
gs
or
or
ret
dec
and
lock
add
pop
pop
ljmp
jmp
pop
aas
les
aam
xchg
aaa
rclb
adc
and
push
nop
jbe
jb
fstl
jg
out
jg
adc
add
mov
dec
sbb
call
imul
mov
push
adc
lods
loopne
sub
movsb
scas
fadd
mov
aaa
push
das
lods
lds
jne
call
jne
xor
and
adc
out
pop
test
adc
popf
hlt
rolb
or
add
ret
dec
scas
and
out
mov
push
push
push
icebp
call
incl
cmp
arpl
jns
adc
jmp
or
adc
xor
sbb
xchg
and
xchg
lods
cmp
pop
sti
xor
xchg
push
and
xchg
adc
dec
and
jp
dec
cmp
popa
test
dec
enter
dec
jns
les
xor
push
or
mov
and
xchg
pop
mov
hlt
clc
inc
pusha
arpl
in
fistps
fs
mov
and
int
mov
insb
bound
mov
jnp
inc
js
mov
jns
popa
sbb
dec
and
mov
cmp
adc
xchg
push
add
fdivr
das
in
push
sbb
std
push
mov
adc
add
scas
inc
jge
cli
xor
nop
adc
inc
fisubl
rolb
call
dec
inc
repnz
scas
xor
inc
cmpsl
and
ja
imul
xchg
push
adcb
jp
xchg
mov
inc
insb
ljmp
pop
stos
fmuls
dec
scas
bound
jp
orl
idivb
and
pop
sbb
fdivrs
movsb
adc
scas
arpl
sbb
pop
ret
and
mov
inc
push
call
mov
add
pushf
test
test
ljmp
cs
in
popf
mov
adc
add
ret
xchg
roll
mov
add
sbb
mov
mov
dec
sbb
sub
fmulp
mov
ret
mov
push
stos
push
sub
addl
les
fsubr
cmp
mov
ljmp
and
mov
test
jmp
cmp
cmpl
mov
dec
or
mov
pusha
ret
dec
or
cwtl
mov
pop
cli
pushw
push
sub
enter
call
add
call
mov
arpl
and
and
mov
jb,pn
cmp
cwtl
or
test
push
mov
xor
or
inc
add
aam
push
inc
loop
call
xor
or
adc
and
jle
and
mov
xor
xchg
lock
rorb
aas
orl
cltd
push
mov
cmp
xchg
and
add
inc
sbb
loop
adc
mov
in
sahf
pop
jp
pop
rep
add
xchg
cmc
xchg
dec
mov
pop
and
mov
leave
leave
sbb
mov
shr
add
push
inc
lret
inc
dec
aas
bound
cmpsb
cmp
rep
movsb
dec
sub
clc
dec
xchg
dec
bound
stc
mov
je
xchg
loop
fbstp
mov
in
dec
inc
cmpsb
ss
push
adc
lock
lea
lods
fstp
es
add
jno
insl
pop
bound
idivl
nop
loopne
push
xor
shll
or
pushl
pop
xchg
or
decl
into
sub
add
jns
add
pop
mov
pop
ds
jp
stos
lods
push
nop
cs
call
ljmp
loopne
push
adc
cs
jb
push
js
sbb
add
dec
mov
fs
cli
fsts
sar
mov
sti
nop
or
test
hlt
ljmp
jmp
jns
movsl
fdivl
daa
les
adc
push
fists
clc
insb
add
xor
negb
lret
and
xor
sbb
out
add
lahf
dec
aaa
loope
jg
cmpsb
loopne
int
xor
add
xchg
das
je
rol
jbe
repnz
push
adc
cmp
xchg
add
mov
or
adc
cmpxchg
mov
ret
pop
call
cmpsl
pop
dec
sub
andb
add
add
lds
mov
jo
lea
xchg
jb
shrl
push
test
jae
cmp
imul
notb
and
push
fsubrl
xchg
jne
mov
jne
aad
adc
push
xor
bound
add
int3
xchg
dec
dec
scas
loopne
je
pop
push
xlat
fs
ret
cli
push
mov
push
ja
mov
jne
mov
dec
or
pop
mov
popa
push
in
adcl
pusha
sbb
roll
inc
mov
enter
sub
leave
daa
jne
imul
mov
mov
mov
push
mov
pop
lods
or
ficomps
inc
mov
xchg
lret
or
pop
mov
jle
add
test
jle
cmp
mov
or
xor
push
add
js
and
adc
shlb
call
bound
push
jb
shll
mov
mov
or
daa
pusha
sbb
cmpsb
jne
leave
les
out
in
mov
add
inc
mov
mov
jbe
sbb
ret
inc
sub
test
enter
mov
sub
out
sub
vphaddbw
push
sar
adc
push
inc
adc
adc
sub
data16
push
call
pop
add
cmc
shlb
cmp
pushf
insb
adc
pop
mov
xchg
jge
and
mov
xor
dec
mov
xchg
sbb
imul
or
lods
loope
rcll
inc
nop
int3
sahf
adc
sbb
jmp
ja
aad
push
repnz
mov
jmp
arpl
dec
out
stos
fwait
mov
dec
jbe
adc
out
adc
inc
fstl
xchg
pop
mov
or
loope
mov
cmc
ljmp
test
inc
dec
inc
sbb
inc
jp
js
sbb
in
pop
cmp
out
ficoml
jae,pn
push
sbb
dec
jo
push
cmp
jbe
or
inc
cmp
jb
add
pop
ret
fists
inc
add
cmc
in
add
mov
jne
adc
jg
sbb
mov
stos
jg
pop
loope
add
push
aaa
mov
push
push
lret
and
andl
sarl
lods
sti
add
jne
xchg
sub
xchg
push
mov
rorl
hlt
sbb
cmpl
fbld
jne
dec
ds
flds
or
in
test
mov
pop
leave
push
mov
push
mov
in
imull
or
dec
movsl
sub
fsubrs
or
incl
push
mov
jne
test
dec
sbb
pushf
add
adc
and
adc
inc
adc
inc
sbb
outsl
mov
ret
std
test
pop
rorl
lds
add
inc
mov
insb
jne
push
push
mov
mov
and
in
push
shrl
jp
mov
mov
je
push
out
xchg
out
pop
gs
imul
inc
jle
loope
add
and
loop
xlat
add
lret
leave
shrl
fdivrl
ror
and
mov
stos
loopne
cmpsb
sub
daa
es
inc
les
pop
adc
ret
and
test
mov
sbb
jb
mov
mov
imul
std
xor
or
xor
and
fwait
adc
xor
adc
adc
xor
mov
push
and
ljmp
aam
test
jb
inc
pop
xor
fsubr
fcompl
mov
test
sbb
bound
sub
out
cwtl
bound
jns
inc
pop
ljmp
test
test
jle
subl
stos
or
or
sub
sub
and
lock
shl
nop
xor
lcall
mov
and
cmp
pop
gs
inc
mov
shrb
adc
jmp
and
mov
ljmp
push
and
xchg
xor
bound
es
or
add
call
dec
push
inc
dec
push
mov
add
xchg
push
shl
dec
pop
dec
mov
sub
pop
pop
sahf
sar
std
cli
push
sub
and
jo
push
lcall
hlt
decb
cwtl
cmc
add
cmpw
jbe
nop
mov
call
sahf
cmpb
and
outsl
mov
push
outsl
into
das
xor
or
in
loope
dec
jb
jl
jmp
popa
test
inc
push
pushf
inc
and
and
inc
test
inc
repz
test
into
and
rorb
ret
push
cld
adcl
xor
add
inc
adc
pop
push
fsubp
and
adc
mov
mov
inc
loope
or
mov
cli
mov
ja
aam
stc
xor
adc
cmpsl
xchg
packsswb
ret
pushf
lods
enter
dec
stos
fmulp
sbb
testl
cmp
xor
enter
add
inc
push
xlat
int3
andb
mov
pop
mov
fdivr
test
pop
or
lock
aaa
or
push
jecxz
xchg
or
sbb
mov
push
and
js
dec
mov
adc
mov
das
mov
in
sub
lods
les
mov
xor
lea
cmc
shll
add
adc
inc
out
loopne
in
sub
or
push
push
adc
mov
pop
lret
mov
inc
rorl
mov
pop
push
loope
cld
div
dec
lds
into
xchg
xchg
jecxz
mov
mov
or
fstps
call
jb
aam
mov
in
xchg
push
add
adc
adc
or
push
out
out
pop
fildll
xchg
pushf
inc
push
jb
cwtl
leave
add
es
or
into
dec
pop
jmp
decl
fs
jo
sbb
shlb
pusha
bound
push
jbe
ret
je
and
jb
adc
push
les
adc
icebp
lods
adc
test
loopne
xchg
gs
push
jg
in
dec
loope
cli
jo
or
cmc
jne
cmp
roll
or
pushl
fcomps
dec
xlat
loop
sub
negb
gs
xchg
jmp
sbb
xor
cmp
ret
je
or
movsl
push
dec
and
xchg
loopne
mov
jnp
nop
int3
or
jle
test
and
inc
adc
cmp
jbe
data16
mov
inc
cmp
jne
xlat
or
ss
loopne
jge
dec
add
add
into
rcll
addl
push
jo
into
fdivl
jnp
dec
divb
sbb
je
cmp
aaa
jnp
inc
push
ret
push
loope
aad
cmp
and
or
cwtl
test
jmp
cmpsb
inc
test
dec
sub
add
mov
xor
xchg
inc
adc
sub
sbbl
sub
and
push
int
pusha
pop
inc
adc
cmp
hlt
stos
add
adc
inc
movups
or
mov
pusha
and
mov
xor
sbb
sub
push
stc
and
jg
sbb
and
movsl
mov
pop
movb
xchg
push
into
push
call
cmpsb
push
add
mov
xor
add
push
out
out
dec
cwtl
cld
dec
sbb
popf
push
hlt
test
movsl
aam
mov
sbb
into
xlat
push
and
sti
shll
pop
dec
adc
lea
sub
je
scas
in
cli
xor
test
adc
fs
call
jmp
lret
loope
test
pop
cmovne
push
pusha
mov
dec
cld
xchg
mov
clc
aas
xchg
mov
dec
pop
dec
add
daa
subl
push
sbb
imul
sub
fstpt
loope
or
jbe
add
shl
sarl
lods
cs
xor
or
mov
xor
jne
js
xor
mov
pop
into
mov
scas
loop
js
mov
dec
out
sub
shlb
mov
cmp
orl
pop
xchg
rorl
addr16
add
lret
inc
loopne
add
push
sub
pop
xchg
mulb
scas
dec
call
dec
ja
mov
cmp
outsl
cwtl
mov
fdivrp
push
cltd
pop
jae
add
add
divb
jl
lcall
inc
cmp
cmc
int
lods
sarl
cmp
xchg
jb
cwtl
leave
mov
rolb
fadds
fwait
es
lock
xchg
xor
scas
pop
rorb
movsb
loopne
mov
cwtd
adc
dec
call
pop
push
repz
push
xchg
call
mov
dec
or
sbb
jns
out
and
cmp
out
xchg
jmp
daa
ret
test
mov
sbb
sub
mov
and
add
sbb
adc
rorb
mov
loop,pn
xchg
or
add
xor
dec
divb
or
xchg
stc
and
adc
push
cltd
dec
adc
out
in
xchg
mov
push
jmp
mov
scas
repnz
mov
and
ror
jno
sbb
push
cwtl
das
jmp
in
jo
outsb
adc
inc
scas
test
sub
push
call
outsl
add
or
inc
sbb
cmp
inc
dec
sbb
and
and
test
sbb
lea
inc
jne
jg
lods
das
pop
les
outsb
adc
or
inc
call
fisubs
or
adc
aam
inc
and
add
dec
idivb
mov
dec
xchg
sub
push
sub
sub
mov
inc
lahf
in
adc
rorl
add
dec
jns
inc
sbbl
out
jbe
cmp
xchg
dec
add
and
xchg
mov
fldl
inc
inc
loopne
cwtl
pop
daa
push
call
mov
jp
and
inc
or
jg
sub
mov
pop
push
dec
jl
dec
sti
inc
adc
xor
add
pop
cmp
and
outsl
inc
loopne
popa
jae
mov
fists
gs
data16
push
es
lahf
in
xchg
jo
mov
dec
mov
cmp
mov
ret
mov
scas
pusha
and
mov
adc
mov
call
hlt
test
mov
pop
int
push
sub
push
aad
outsb
dec
push
xchg
mov
cltd
inc
or
lret
mov
lock
adc
aaa
sbbl
ljmp
movsb
popf
sbbl
mov
jge
sbb
xchg
loope
xor
push
mov
icebp
lcall
sub
push
sarl
leave
and
mov
xor
mov
sub
dec
and
jo
movsb
push
add
out
add
mov
dec
sbb
mov
ja
dec
jmp
jns
pop
and
popa
pop
push
mov
push
adc
psubd
inc
jne
pop
mov
filds
mov
cmp
add
lret
sub
add
sub
arpl
rep
dec
dec
std
ficoml
out
sub
popa
push
sbb
adc
lock
movsb
icebp
mov
or
push
jne
inc
inc
or
xchg
gs
mov
sbb
inc
fwait
clc
in
enter
sbb
adc
mov
mov
pop
mov
data16
fdivrl
pushf
pop
inc
pop
fstpl
es
pop
mov
pop
push
sub
xchg
push
ret
xor
arpl
test
andb
out
jo
dec
or
ja
call
loopne
or
and
fidivrs
in
flds
pop
testl
into
mov
pop
or
adc
lods
sar
pop
daa
jmp
dec
loopne
add
daa
add
insl
push
sub
cmpsb
sub
and
clc
test
or
leave
inc
cmp
fstpt
jmp
mov
push
add
jne
aaa
pop
cmp
cmp
push
mov
lods
test
test
dec
outsb
pop
bound
cltd
mov
lahf
inc
pop
fnstenv
js
shl
sbb
or
mov
je
lcall
into
lea
out
adc
mov
ljmp
adc
dec
out
jl
cmp
jl
push
xchg
jl
imul
adc
shll
xor
mov
mov
or
lock
xchg
xor
add
sub
or
je
pop
fs
das
mov
ja
loop
adcb
sub
call
adc
sti
mov
push
mov
shll
out
ror
mov
mov
mov
mov
mov
sbb
or
shrl
shrb
sbb
repnz
lea
push
stos
call
out
movsl
insl
and
mov
insl
lock
pop
jl
inc
mov
xchg
pop
or
push
lret
mov
xor
fildll
add
jmp
or
push
in
mov
jmp
in
in
add
fs
repnz
call
mov
jns
decw
add
pop
or
xchg
dec
popa
push
or
adc
incb
sbb
and
sahf
lods
cmp
nop
imulb
mov
jbe
mov
cld
cmp
sub
lods
sub
test
mov
sub
jg
sbb
or
sti
add
mov
jb
jae
dec
ret
or
and
in
fsts
adc
repnz
js
pop
sbb
imul
xchg
call
push
stos
jle
add
call
and
inc
outsb
push
jo
fildll
insl
lea
cltd
sbb
adc
jmp
sbb
clc
leave
dec
push
mov
sbb
and
je
push
sbb
jno
mov
xchg
add
orl
or
jle
or
stc
movsl
add
or
adc
mov
clc
aas
push
ret
adc
aaa
xorl
movsb
xchg
fld1
and
xchg
scas
xchg
jnp
push
mov
test
test
add
lods
mov
sbb
push
push
push
mov
adc
cmp
lcall
push
out
mov
test
in
and
push
xor
jge
mov
dec
cwtl
mov
sahf
mov
xor
out
mov
xor
xor
sbb
inc
xor
jmp
mov
xchg
push
sub
cwtl
cmpsl
arpl
fcomi
aam
sbb
dec
sahf
ficoml
shll
mov
stos
and
adc
push
cltd
xor
adc
fldt
lds
sbb
push
faddl
sub
aam
gs
mov
mov
in
dec
adc
fdivl
ret
hlt
dec
mov
incb
inc
arpl
hlt
lea
adc
mov
cmp
pop
in
mov
mov
enter
dec
sub
add
repnz
mov
xchg
icebp
xchg
fisubrs
adc
rcrb
idivb
orb
or
movsb
mov
in
test
sti
pop
push
out
mov
stos
xor
in
outsl
aam
imul
mov
ret
pop
mov
inc
sub
jne,pt
test
sub
inc
and
mov
mov
push
mov
adc
inc
xorb
xchg
adc
sbb
or
outsb
je
cmp
jb
cmp
add
jne
push
popa
cmc
xlat
cld
xor
arpl
and
ljmp
cld
std
fimull
xchg
or
leave
or
jmp
ret
push
in
cmp
add
inc
push
dec
xor
add
jmp
mov
ja
xor
mov
pop
insl
dec
or
push
mov
lret
out
int3
or
mov
bound
aaa
or
fisubs
dec
movsl
lock
call
fildl
jbe
fs
inc
cwtl
inc
aam
jecxz
test
rcrb
inc
movsb
lock
daa
and
nop
mov
out
add
stos
jmp
mov
sar
mov
xlat
or
fcomp
xor
ss
dec
and
pop
lcall
add
bound
out
mov
in
ja
sbb
xchg
push
loop
daa
lock
daa
lret
push
aam
lods
cli
mov
es
addl
mov
jmp
sbb
push
xor
adc
add
push
and
sbb
enter
or
push
ret
adc
dec
cmp
shl
stos
clc
xor
cmp
scas
push
xchg
lods
leave
push
adc
or
in
and
sbb
in
cmp
xor
mov
ret
ja
aad
sbb
adc
push
add
cmp
dec
in
dec
pop
adc
mov
xchg
pushl
call
or
hlt
jg
bound
addr16
or
xchg
cli
dec
aam
shlb
sub
mov
mov
mov
pop
xor
out
push
add
loopne
and
int
xor
or
jg
xor
push
pop
cld
mov
or
dec
lock
mov
sbb
xchg
jecxz
and
out
inc
pop
loopne
inc
lock
adcl
aaa
out
es
or
dec
aad
cmp
mov
inc
or
inc
and
inc
andl
scas
or
loope
xchg
test
or
sub
push
sti
dec
xchg
out
mov
pop
test
movb
fldcw
xchg
adc
in
clc
imull
mov
push
push
add
xor
es
mov
hlt
idiv
add
je
test
shr
adc
mov
mov
dec
fstpl
pop
fwait
adc
or
popf
adc
in
push
popf
scas
ror
dec
gs
popl
gs
es
lret
negb
pusha
arpl
and
push
movsl
cmp
gs
movsb
lods
xchg
push
push
out
xor
fs
sub
add
adc
inc
dec
adc
mov
xchg
imul
sarb
jbe
mov
nop
add
pop
or
mov
pop
xchg
cli
int3
sbb
int3
pop
inc
pop
aaa
lahf
adc
xchg
repnz
pop
shlb
dec
push
jmp
mov
sub
cwtl
mov
mov
bnd
repz
out
movsb
mov
call
lret
repz
cmc
xchg
push
clc
xchg
xchg
inc
pop
out
and
mov
cmp
int3
in
clc
sarl
cld
mov
shll
out
aam
inc
aas
in
or
pop
ficoml
or
dec
sbb
xchg
or
pop
fs
aam
sbbb
sti
roll
test
jl
testb
pop
xorl
subb
or
shll
adc
xchg
mov
mov
test
movhps
stc
and
or
jle
cmp
adc
jmp
or
add
add
insb
popa
clc
out
dec
jecxz
pop
xchg
data16
cmp
adc
iret
inc
push
cld
jne
add
andb
dec
aad
jge
and
xchg
add
mov
mov
push
add
cmpsb
in
std
lret
mov
sahf
dec
roll
inc
dec
jne
jmp
imul
jge
lcall
adc
cmp
push
ss
insb
push
lcall
in
add
mov
pop
aas
shll
or
and
and
sub
push
test
pushl
bound
fidivl
push
es
cld
dec
mov
enterw
mov
es
xchg
sbb
and
daa
adc
leave
out
fcmove
xlat
mov
ja
movsb
cs
sub
outsl
jecxz
dec
sub
cli
add
pushl
sarb
mov
and
add
mov
pop
add
iret
fiadds
and
jge
xchg
add
mov
xor
testb
jbe
test
sub
and
cmp
mov
fisttpl
mov
xchg
pop
fisttpl
ja
push
mov
hlt
xchg
inc
shr
push
add
js
jg
push
test
sub
cmp
push
inc
and
cmpl
mov
inc
ljmp
sub
mov
test
or
testb
fimull
test
mov
cmp
xchg
stos
ret
inc
push
push
gs
mov
clc
lret
adc
imul
inc
sahf
loop
xchg
dec
sbb
in
imul
jns
or
ljmp
add
cmp
outsl
loop
xchg
mov
xor
push
push
jnp
scas
nop
push
andl
add
jne
ljmp
pop
pop
jb
add
push
call
jle
stos
sub
push
mov
imul
call
lods
test
fcomps
jmp
adc
jmp
lock
add
nop
inc
loopne
les
test
cmpl
stos
in
filds
xchg
cli
mov
jecxz
dec
xchg
fiadds
nop
or
or
xchg
adc
pop
jle
cmp
sbb
cltd
add
or
test
nop
imul
xor
clc
inc
cmpsb
dec
dec
lock
adc
enter
daa
push
and
mov
pop
in
out
push
hlt
mov
push
inc
ret
jl
scas
inc
adc
pop
ss
dec
mov
jle
sti
inc
add
or
lods
call
jge
lods
jge
lea
dec
je
int3
jne
lds
mov
jae
mov
ds
dec
int
adcl
and
jge
dec
fists
cmp
inc
sub
cmp
dec
adc
andl
jmp
scas
or
adc
mov
outsl
or
pop
xchg
insb
lea
lea
add
push
mov
and
adc
shr
xor
call
lret
and
mov
cld
arpl
rcl
fwait
sbb
mov
rcll
out
sub
dec
lods
push
repnz
mov
cmp
daa
je
inc
add
sub
ret
jmp
call
mov
or
sub
push
jp
mov
adc
enter
ret
jmp
fstpl
leave
ljmp
cli
pop
mov
in
mov
lea
adc
adc
mov
xchg
arpl
lea
mov
adc
xor
add
clc
xor
sbb
incb
jne
orb
icebp
rcrl
sbb
testb
ja
mov
push
and
gs
add
mov
cmp
in
test
dec
or
or
out
add
cld
cmpsb
and
adc
add
jae
loopne
inc
mov
sbb
and
inc
or
mov
std
xchg
adc
dec
adc
or
lea
in
lcall
mov
js
jnp
xchg
mov
cmpsb
clc
into
and
jecxz
rorl
pop
repz
push
nop
insl
cmpsb
pop
mov
fadds
rcl
add
ss
es
mov
fsubs
push
fcomps
ljmp
aas
push
rclb
push
mov
and
sub
xor
repnz
pusha
dec
aam
enter
and
push
loopne
and
dec
pop
adc
mov
test
sbb
sbb
or
js
bound
jne
test
lret
or
xor
fcoml
insl
movsl
nop
mov
dec
and
repnz
popf
jg
movsl
or
adc
jge
xor
adc
add
scas
sbb
push
add
sub
push
pop
xorb
out
test
dec
je
add
out
xchg
inc
pushf
mov
aaa
xor
adc
iret
mov
ljmp
test
xchg
sbb
and
mov
jecxz
or
sbb
xchg
add
cmpsl
jmp
pop
dec
add
orl
outsb
push
mov
mov
mov
mov
lds
cld
lahf
fwait
or
add
and
das
outsl
or
mov
movsb
jbe
ret
enter
push
mov
adc
out
push
mov
decl
jp
aaa
or
adc
or
cltd
out
or
add
je
jae
jno
loope
pop
es
cmp
and
loope
mov
jg
jmp
shl
outsb
clc
mov
movsl
xchg
xchg
imul
mov
and
sub
cs
popl
add
arpl
call
pop
add
dec
push
pushf
hlt
es
and
dec
inc
push
pop
and
adcb
mov
dec
pop
push
cmp
test
popa
imul
jbe
sbb
int3
or
das
mov
icebp
clc
inc
loopne
bound
fs
mov
cs
cltd
xor
aas
or
in
ljmp
dec
xchg
mov
sub
push
push
mov
push
pop
and
xchg
inc
add
pop
repz
xchg
push
in
push
stos
enter
fwait
jmp
jns
cmpsl
inc
nop
push
outsb
inc
pop
pusha
xchg
shll
cmpsb
pop
inc
sbb
xchg
or
nop
xchg
dec
sub
xchg
pop
out
or
fsts
mov
callw
ds
jbe
dec
mov
sub
xor
mov
clc
loopne
or
dec
scas
mov
adc
fimull
imul
cmp
dec
cli
xchg
push
incl
mov
movsbl
mov
stos
adc
sbb
sub
sarl
and
or
or
stc
xchg
xor
push
xchg
cmp
adc
xor
nop
pushf
sub
in
out
in
and
daa
lahf
mov
pop
and
push
daa
mov
out
push
movl
sbb
push
fists
adc
adc
dec
pop
pop
pusha
sbb
or
push
cmc
cwtl
out
cmp
xchg
adc
pop
or
cltd
mov
pop
adc
les
adc
fistpll
xor
adc
xchg
add
cwtl
or
sbb
inc
jp
inc
jnp
stos
push
add
or
adc
addb
ret
adc
rclb
hlt
xchg
push
xchg
mov
and
adc
mov
sub
pop
xchg
or
imul
lock
shr
sub
adc
fdivrl
add
mov
fs
scas
dec
scas
call
push
imul
xchg
mov
shrl
mov
cmp
inc
subb
test
loope
push
xor
and
push
call
rorl
lret
sub
add
pop
xor
stc
cmp
mov
xor
adc
icebp
mov
jne
gs
pop
stos
insb
pop
jmp
add
adc
mov
push
clc
jns
orb
fs
clc
add
ret
add
enter
cld
add
pop
incl
popf
ficompl
cmp
lock
je
frstor
fmul
mov
pop
fsubrs
subl
mov
int
sub
xor
js
cmpsb
xor
fwait
pop
push
dec
and
mov
cmp
js
jecxz
push
and
fldt
das
ror
insb
movsb
int
lock
mov
or
pop
pop
mov
or
mov
or
sub
fsubrs
out
adc
cmp
jmp
pop
push
shl
jns
js
or
cmp
sub
or
shll
inc
loope
mov
icebp
jle
push
pop
pop
bound
data16
sub
inc
xor
inc
add
or
lods
scas
jns
in
or
push
js
and
in
jns
add
and
sub
jno
sar
lret
inc
or
mov
xchg
testb
mov
xchg
sbb
inc
sahf
lret
ja
sub
sarb
ljmp
mov
fisttpll
dec
mov
or
mov
ret
xchg
dec
push
decb
pop
pop
or
xchg
and
mov
and
lret
adc
gs
lods
xchg
pop
daa
fs
daa
les
les
js
les
xchg
clc
das
pop
bound
aad
scas
and
imul
pop
mov
and
mov
in
fdivrs
push
xchg
call
pop
mov
cmp
push
mov
test
je
lret
jbe
add
call
xor
lds
add
jne
andb
insb
pop
pop
dec
fdivrs
or
push
movsb
cmp
ljmp
xchg
lock
sub
inc
movsb
rcll
jno
inc
cmp
test
orb
or
xor
mov
and
adc
dec
lods
or
les
mov
xchg
push
inc
adc
call
xor
sbb
push
leave
adc
fistps
dec
inc
jb
cs
sar
cmp
push
mov
aaa
test
inc
call
pop
and
add
push
push
lock
xor
in
imul
mov
imul
frstor
lods
imul
jmp
jno
xor
dec
sbb
ret
test
inc
and
es
xchg
xor
xor
or
and
inc
fs
adc
dec
enter
pop
push
pop
pop
nop
mov
cmp
dec
adc
xorl
lcall
add
lea
ret
mov
push
push
in
push
daa
push
dec
test
inc
pop
adc
mov
push
push
or
inc
pushf
call
push
mull
mov
cld
int3
jp
int3
xor
dec
int3
dec
call
mov
psllw
or
and
adc
cmp
loope
outsb
mov
test
xlat
cmpsl
adc
lds
shl
inc
shr
xchg
cld
shrl
push
lods
pop
rcll
test
pushf
dec
mov
lea
mov
sub
or
xchg
jmp
pop
push
sbb
and
cmp
cmpsl
aad
imul
cwtl
dec
jo
stc
int
jge
dec
mov
int
mov
idiv
test
aam
lds
jmp
bnd
into
dec
cmp
dec
loope
cmp
cmp
dec
xor
mov
or
mov
push
imul
xchg
out
adc
pop
adc
dec
xchg
out
je
test
leave
mov
mov
or
lret
sub
mov
inc
out
or
cmp
dec
and
push
adc
rcl
push
movsl
bound
inc
mov
jb
ret
es
push
push
loop
sbb
inc
and
sub
or
xlat
xchg
or
shl
in
push
xlat
mov
pop
enter
cmp
mov
jl
push
lea
adc
in
roll
stos
je
stos
mov
or
jbe
ror
pop
loope
popa
or
jle
subb
ficoml
jl
dec
jg
lock
mov
mov
mov
inc
mov
mov
xchg
cmp
inc
pop
xchg
cwtl
and
sarl
push
mov
inc
xchg
enter
dec
cmp
jo
xchg
adc
or
sbb
pop
cli
xchg
push
mov
sbb
aad
repz
xor
std
insl
push
sub
rorb
sbb
mov
and
popf
pop
out
leave
pop
add
jl
add
cmp
add
shlb
jl
adc
test
xchg
jecxz
loop
std
xchg
cmp
inc
sub
add
pushf
jp
rolb
or
ja
adc
lcall
sub
or
inc
mov
repnz
inc
and
pop
lahf
ror
bound
push
lahf
aam
mov
notl
and
arpl
pop
dec
mov
test
icebp
popa
mov
and
lea
add
pop
imul
pusha
pop
sahf
push
push
push
mov
test
inc
adc
sub
mov
sbb
in
adc
ja
mov
mov
pop
add
js
mov
ret
sbbl
adc
or
and
mov
cmp
stos
pop
hlt
mov
adc
stos
dec
sbb
add
daa
call
pop
popf
pop
adc
add
xchg
subb
adc
cli
and
clc
xchg
je
loop
push
cld
in
icebp
cmp
dec
jnp
xchg
push
sbb
movl
mov
push
shlb
call
add
mov
push
testl
outsl
out
adc
push
push
les
add
repz
js
dec
add
dec
int3
xor
mov
adc
lock
push
adc
add
ret
xor
aas
ja
sub
or
pop
and
fsubr
leave
push
cmp
xor
xchg
inc
adc
mov
pusha
fcoml
lahf
dec
inc
std
enter
or
dec
movsb
xor
cmpsb
xor
adc
sar
fstps
neg
push
cmpl
sub
push
xor
push
pusha
cli
mov
dec
popa
inc
sti
mov
add
adc
cld
pop
or
mov
jnp
das
dec
mov
ss
push
xchg
push
nop
add
aam
inc
adc
jb
inc
dec
gs
and
test
leave
cmp
cmc
int
mov
popa
mov
in
add
add
and
push
pusha
pop
xchg
push
js
mov
cmp
mov
sub
cmpsb
push
jle
pop
or
inc
hlt
invd
pop
rcll
mov
int3
adc
dec
add
sbb
inc
outsb
mov
adc
sbb
or
or
sbb
std
or
sahf
pop
es
mov
sbb
lcall
inc
pop
and
shlb
gs
or
lods
les
into
or
sub
lret
push
mov
add
in
adc
inc
sub
icebp
loop
mov
lret
dec
sbb
xlat
pusha
loope
mov
fstl
movsb
xchg
gs
mov
mov
test
push
sbb
or
or
adc
sub
test
fildl
adc
pop
adc
sti
mov
dec
test
addr16
xor
mov
pop
push
cmp
dec
cwtl
mov
out
and
shlb
mov
js
adc
outsb
dec
mov
mov
in
stc
or
add
push
cli
or
or
imul
je
imul
sub
test
cmp
dec
mov
push
or
push
mov
jne
cli
je
popf
push
pop
adc
add
repnz
add
cmp
loopne
jbe
xchg
fcompl
cli
push
out
or
cmpl
mov
shrb
add
scas
jns
outsb
in
lret
jns
sbb
inc
fcmovne
popf
leave
inc
in
loop
push
cwtl
mov
cmp
sbb
call
aad
add
add
dec
jecxz
jne
ret
les
cld
lea
inc
das
mov
es
jb
or
jne
cmpl
add
inc
jmp
lea
sbb
imul
out
mov
cmc
push
sub
lret
or
movsb
xchg
mov
in
add
push
dec
sbb
fnstenv
adc
adc
jg
dec
dec
xor
call
mov
xor
cmpsl
cmp
cs
push
sbb
scas
mov
shll
sbb
mov
inc
leave
aad
out
mov
mov
jno
and
movsb
mov
jl
xor
cmp
or
test
aam
imul
ss
stos
cmpsl
jmp
mov
sub
ja
or
pop
cmovs
push
or
push
push
in
je
mov
out
push
push
and
push
call
and
push
mov
inc
mov
mov
pop
popa
and
cmp
or
add
sbb
jle
scas
test
jg
incb
xor
mov
mov
add
fcompl
pop
pop
sub
js
add
cmp
sub
test
aam
mov
ss
sub
filds
adc
rcll
xchg
dec
push
stos
shlb
fsubrl
fld
in
sbb
add
pop
cmpb
shr
lds
fsubrs
int3
clc
loopne
aas
test
cmp
mov
jmp
xchg
in
fisttpll
or
mov
jmp
xor
push
das
stos
xor
jne
xorl
push
cltd
mov
and
add
jmp
loopw
stc
xor
mov
and
sbb
ss
test
sub
cmp
aaa
fcoml
push
mov
outsb
mov
call
xchg
loopne
dec
sub
add
lock
and
jmp
rol
inc
cmc
sbb
or
inc
or
rcrb
mov
adc
inc
fs
jb
or
pop
les
ret
or
push
add
ret
pop
movsb
and
jne
subl
xchg
aam
mov
or
xor
sub
or
sub
or
mov
add
pushf
sbb
and
and
movsl
xor
mov
pop
pushl
dec
push
or
sbb
add
sar
dec
pop
push
cwtl
xor
pop
enter
mov
sub
sub
test
sub
loop
sbb
push
or
or
jge
or
or
or
out
iret
xor
fldenv
sbb
or
jge
adcl
js
repz
or
push
push
dec
inc
push
rorl
or
dec
add
sbb
mov
or
dec
sbb
int
mov
dec
test
inc
push
outsb
jmp
xor
sub
sbb
js
inc
xor
sbb
pop
or
imul
adc
loope
sahf
adc
add
ja
jmp
lahf
addr16
and
cltd
jbe
les
stos
les
scas
idiv
rorl
pop
ds
mov
lret
push
add
popa
mov
pop
std
nop
cld
je
cwtl
ret
pop
xor
dec
mov
shl
and
cmp
das
push
fwait
xchg
and
test
jbe
jnp
inc
ret
xchg
push
cmp
and
pop
dec
push
pop
lock
or
mov
repz
shl
ds
or
adc
or
fwait
lret
dec
push
dec
jns
push
push
inc
call
out
rcrl
pcmpeqw
imul
push
xor
les
and
ja
xor
xor
sub
aaa
pop
setg
je
jp
sub
or
add
inc
mov
add
pop
mov
orb
mov
adc
cmp
push
js
punpckhdq
inc
pop
and
cli
inc
std
cmpsl
mov
sbb
mov
jo
xchg
mov
lahf
sub
adc
enter
cli
cwtl
dec
pop
pop
fidivs
ds
sbb
add
jge
mov
repz
imull
push
stos
filds
cmp
and
ds
add
sahf
mov
pop
mov
xchg
test
and
popf
test
jo
sub
adc
jbe
add
in
xor
stc
cmp
jno
xor
int3
repnz
int
dec
inc
and
jmp
mov
jp
sbb
jp
mov
push
or
jo
jp
loope
and
xchg
out
inc
les
sbb
lea
daa
jae
daa
data16
lcall
inc
sti
xchg
stos
or
shll
pop
push
adc
xor
adc
in
adc
into
and
mov
jp
xor
add
add
xorb
iret
or
cmpb
add
sti
sar
pop
repnz
lods
xor
stc
cmp
movsl
dec
adc
xor
loopne
adc
sbb
das
or
loop
dec
orl
lods
jle
and
mov
push
or
loop
jbe
add
xchg
pop
sbb
je
or
xchg
xchg
int
push
dec
sbb
adc
push
out
cmp
inc
or
idivb
iret
movsb
mov
movsb
dec
cmp
in
faddl
add
cld
rolb
push
test
inc
jl
mov
daa
sbb
push
and
add
xchg
and
pop
cmp
int3
sbb
pop
add
nop
add
rcl
and
xor
or
mov
test
cld
sub
mov
sbb
mov
push
in
and
nop
mov
pop
jmp
jne
mov
push
mov
adc
push
fcom
inc
push
call
add
cmp
sbb
jne
xchg
inc
pop
add
cmpsl
movsb
lret
sbb
ja
fdivs
sub
and
jl
or
sbb
loopne
inc
pop
cltd
cmp
push
movsl
add
int3
add
mov
lods
xchg
sbb
inc
add
sarl
sub
arpl
nop
ret
out
pop
pushf
pop
mov
es
sbb
int3
add
sub
in
push
test
or
loopne
out
and
xchg
and
hlt
js
sub
add
dec
ret
insl
mov
cmpl
mov
mov
push
lds
push
lds
clc
cmp
je
out
dec
lret
push
or
jmp
cli
lods
lret
mov
stos
xor
jmp
aam
cmp
imul
cwtl
cmp
inc
inc
stos
jmp
ret
and
inc
or
imul
js
cs
push
decl
mov
inc
ret
shlb
push
pop
aas
or
shll
test
popa
int3
cmpsb
aam
insb
jnp
and
leave
je
jmp
push
les
pop
loop
les
vphsubsw
dec
mov
movsb
cltd
mov
je
mov
jp
aad
ljmp
jne
das
sarl
in
xor
dec
enter
dec
or
out
add
pusha
loope
mov
or
pusha
loope
pop
adc
cmp
or
mov
popf
fistpll
testb
sub
popf
xchg
movsl
xchg
inc
sbb
add
jle
sbb
xchg
sbb
stc
call
ret
pop
ss
or
jge
popf
mov
mov
and
xorb
movsl
leave
inc
inc
xchg
in
cmp
dec
loop
jb
fs
push
pop
lea
adc
jne
push
xor
and
les
sbb
inc
sbb
jns
leave
leave
pop
dec
cmpsb
inc
and
shl
push
andl
add
call
rcrl
inc
dec
mov
add
ss
in
vfrczpd
mov
repnz
push
or
loopne
push
pop
call
data16
shrl
mov
or
jmp
push
rolb
cmp
or
mov
ja
jmp
or
lds
decl
pop
xor
enter
push
test
push
xor
inc
or
xchg
mov
scas
mov
xchg
in
or
cmc
enter
xor
mov
lahf
cwtl
fildll
imul
jae
movsl
js
mov
jecxz
cmp
push
adc
push
inc
and
movsb
jp
add
cmp
and
pop
rolb
jae
cli
mov
xchg
mov
push
ret
shlb
rorl
sbb
loope
shlb
xor
cmpsl
cmp
sub
lea
pop
xor
icebp
cmp
mov
adc
inc
xchg
sti
jb
mov
cmpsb
lods
push
dec
add
mov
lods
popf
or
dec
imul
sahf
xchg
shr
fidivs
pop
add
mov
pop
xor
adc
and
xor
jne
stos
push
sbbb
adc
xchg
je
adc
adc
sahf
orl
add
or
imul
test
mov
pop
cmp
or
dec
cmp
mov
sbb
dec
test
hlt
pop
mov
lahf
pop
xchg
jns
sbb
pop
sub
data16
sub
mov
inc
rcl
cmp
mov
or
xchg
push
scas
inc
adc
xchg
into
cmp
mov
ret
arpl
nop
adc
or
xor
push
mov
sbb
mov
sbb
jecxz
jno
pop
inc
adc
mov
or
inc
mov
cmp
shrb
cltd
push
sbb
addl
daa
dec
lock
js
mov
and
jmp
or
ss
adc
popf
fisttpll
test
adc
fs
repnz
mov
and
inc
sbb
cmp
cld
mov
in
and
push
push
cltd
test
idivl
xchg
mov
ret
push
insb
cmpl
lds
in
mov
cmc
jmp
cli
cwtl
or
or
dec
ret
imul
aam
cmc
int3
pop
xchg
test
or
test
nop
repnz
and
imul
pop
mov
pushl
sbb
and
pop
mov
inc
jnp
mov
jne
push
sub
fwait
js
sbb
subl
mov
flds
dec
push
push
cmpl
xorb
add
shl
addb
jmp
and
scas
push
jne
cmp
ljmp
nop
mov
setne
ljmp
push
mov
out
divb
and
jecxz
pop
rclb
shll
cmp
xor
inc
dec
les
enter
add
or
call
cli
or
je
test
pop
pop
push
sub
bound
sub
stos
out
xchg
push
add
add
mov
push
mov
idiv
mov
lahf
inc
add
data16
push
and
add
jg
addb
test
lea
xchg
xchg
xchg
xchg
adc
and
mov
movsl
cmpsb
cmpsl
test
inc
stos
add
xor
add
dec
mov
mov
inc
inc
and
inc
rorb
adc
fsts
pop
cmpsl
and
sub
mov
mov
js
cltd
mov
mov
sub
pop
add
dec
xor
mov
inc
push
jns
inc
push
enter
rolb
fadds
push
fistpll
and
negl
and
mov
xchg
cmpsb
lods
movsl
mov
stos
or
mov
mov
andb
rol
inc
lds
mov
leave
lret
into
loop
loop
add
aam
xlat
pop
mov
fcmovnu
cmp
aas
and
loop
in
inc
in
pop
xchg
test
push
jnp
jg
psubw
sti
xchg
popf
in
test
add
cmpsb
outsb
pop
sub
test
movsb
adc
cmpb
inc
inc
aam
xorb
dec
movsb
add
inc
orb
andb
push
vandnps
int
les
loop
jno
push
test
dec
pop
jle
add
addb
mov
mov
pushf
popf
and
lahf
add
mov
ds
mov
repz
cmp
mov
fcomps
loop
scas
pusha
into
sbb
or
xchg
and
xor
insl
adcb
lods
adc
aam
dec
adcb
idivl
pop
dec
sub
jb
inc
inc
mov
xor
in
testl
mov
mov
vpmacssww
and
loop
sbb
push
notl
pushf
sub
pop
lret
adc
cli
jns
jle
fisttpll
and
fimuls
jle
jge
mov
dec
aad
pop
dec
popa
jmp
cmp
cmp
jl
sahf
inc
pop
push
mov
call
in
in
and
data16
daa
mov
add
jg
repz
ja
enter
enter
lret
sbb
mul
push
mov
int
movsl
add
add
xchg
push
mov
mov
fdivs
mov
aam
fsubrl
xchg
data16
je
xchg
or
and
test
and
aaa
mov
mov
enter
mov
ficoms
shl
dec
xor
ja
aad
push
xorb
addl
mov
ret
dec
movsl
outsb
mov
and
maxps
mov
and
adc
or
pop
rclb
push
jmp
bound
push
out
add
stos
je
jb
stc
mov
sub
mov
movsb
inc
add
hlt
lods
push
sbb
push
in
dec
out
mov
pop
fdiv
shlb
fisttpll
adc
jns
call
sbb
and
adc
lods
test
mov
push
call
mov
jge
or
andl
mov
sbb
loop
arpl
pusha
test
and
popf
test
push
cmp
add
adc
mov
mov
jne
cmp
scas
jg
nop
xor
mov
es
orb
or
mov
out
mov
iret
push
adc
scas
jns
jge
dec
mov
lahf
incl
cmp
dec
jle
and
sbb
imul
rclb
cmp
xor
je
xchg
in
mov
sti
movsl
mov
ljmp
fs
push
orb
xchg
aam
or
inc
add
cmc
lods
sarl
stc
dec
or
shr
adcl
aas
ret
mov
out
cli
push
outsb
outsb
push
sub
push
pop
pop
mov
mov
push
mov
outsb
pop
imul
into
stos
js
sbb
sbb
adc
into
xor
push
push
jl
jmp
sub
and
push
outsb
popf
cmp
sbb
out
or
adc
push
sub
leave
push
push
mov
mov
subb
push
pusha
add
dec
jecxz
subb
inc
push
or
jge
push
push
pop
jge
or
xor
cmpsb
xchg
and
jmp
ja
pop
popf
pop
jle
stc
push
dec
push
push
jl
jo
ret
popa
and
movl
ret
mov
jns
pop
lods
and
jbe
sbb
adc
xchg
push
and
fucomi
sysexit
testb
shl
movsb
notb
push
jecxz
dec
sbb
icebp
push
xchg
pop
cmp
cmpsl
iret
jno
push
push
or
or
or
sbb
sbb
aam
xchg
sub
add
loope
int
mov
cmpl
adc
ds
mov
sti
insb
sub
push
pop
sbb
bound
int3
js
push
adc
leave
ja
pslld
dec
or
add
add
imul
xor
sub
push
mov
pop
mov
push
mov
addl
mov
test
jmp
decl
sbb
push
shlb
push
jne
pop
ja
xor
dec
add
fcoml
cmp
mov
aas
mov
incb
sbb
jle
lds
adc
xlat
pop
mov
or
icebp
sbb
or
fisubl
or
or
mov
push
mov
in
aas
repz
test
pop
jmp
push
mov
cmp
xor
adc
ret
pop
inc
imul
push
lds
push
cmp
inc
pop
adc
std
pop
aam
xchg
push
pop
call
sahf
daa
xor
call
cmp
jb
adc
push
ficompl
sub
inc
les
bound
mov
and
jge
inc
adc
push
adc
xchg
mov
sbb
xchg
aad
pop
sbb
sbb
jns
in
popa
push
dec
mov
dec
andl
mov
pop
enter
xchg
stos
call
hlt
fidivrs
pushf
pop
in
jle
push
push
repnz
fwait
sbb
jbe
clc
push
lret
cli
or
aas
cmp
dec
cmpb
add
xor
xor
inc
pop
mov
aas
popl
iret
mov
push
sub
push
lods
clc
xchg
and
add
ds
call
test
mov
negb
jle
push
ret
mov
jmp
test
pop
dec
aam
and
xchg
mov
dec
shrb
push
xchg
in
outsl
cld
pushf
daa
cli
pop
push
pop
icebp
ret
movsb
adc
sahf
call
mov
clc
and
stc
inc
imul
adc
pushf
cwtl
jp
or
dec
fbstp
add
call
cmp
iret
nop
inc
inc
fsubl
adc
movsb
test
gs
jnp
and
jg,pt
sub
pop
imul
jmp
mov
ficoms
and
cld
js
add
cmp
jbe
add
stc
fwait
notl
mov
dec
inc
push
cmp
fcomi
adc
cld
adc
and
out
rcl
or
lock
push
in
ja
pop
push
stos
or
ret
dec
insl
or
clc
adc
loopne
cmp
push
cmp
and
mov
int3
shrb
lock
mov
ret
decb
xor
loop
and
sbb
loopne
add
mov
and
add
adc
adc
mov
punpckldq
dec
xchg
or
repnz
push
lea
daa
mov
jae
or
cmp
ret
lea
push
mov
and
or
ret
jnp
push
pusha
mov
adc
sub
pop
les
adc
jb
add
movl
fcomps
pop
inc
push
call
xchg
inc
adc
leave
add
sbb
cmp
sub
xchg
and
adcl
dec
sub
sbb
in
popf
mov
call
mov
fisttpl
dec
dec
jle
push
fcomp
popf
xor
sahf
imul
dec
enter
push
mov
stos
or
sub
mov
jecxz
dec
mov
test
je
rcl
and
pop
sub
dec
enter
sub
and
xor
mov
iret
test
sub
loop
hlt
enter
inc
xchg
enter
je
lea
inc
sbb
test
add
popa
sub
xor
jge
shll
xchg
std
mov
int3
cmc
rorl
ljmp
les
repnz
inc
sub
ret
or
and
push
mov
pop
or
mov
scas
inc
shrl
mov
xor
fisttpll
cs
mov
mov
push
mov
insb
push
aaa
or
pop
les
popf
call
xchg
push
dec
dec
or
aas
mov
bound
push
inc
sar
cmp
push
add
mov
xchg
and
data16
ds
or
cmp
mov
jle
adc
sub
jle
inc
dec
push
and
dec
inc
inc
dec
adcl
xchg
shll
xchg
add
pop
mov
shll
int
fstps
sub
adc
mulb
scas
mov
jl
in
sbb
adc
sub
dec
and
pop
add
ficoml
jbe
and
mov
shl
push
loope
aas
jmp
in
pop
mov
push
outsb
imul
dec
popa
fwait
ss
repnz
mov
push
call
dec
and
and
mov
sub
mov
push
je
mov
push
rolb
push
cmp
cmp
test
inc
shl
jno
add
test
jmp
es
stc
fcom
jmp
sub
xor
add
push
dec
xchg
arpl
sub
add
insl
fwait
js
popf
fcmovb
adc
or
or
mov
imulb
dec
mov
scas
imul
loop
mov
adc
inc
orb
and
push
shrl
or
bound
sbb
mov
push
xlat
repz
push
call
lods
adc
mov
aas
orb
mov
sub
aas
sub
fmuls
add
adc
insl
dec
xor
js
jge
das
adc
xchg
out
and
inc
dec
add
mov
sub
pop
rcll
fmuls
lret
movsb
jnp
cld
and
mov
mov
cmp
jbe
mov
pop
inc
add
incl
je
inc
inc
dec
loop
sbb
inc
or
jmp
pop
cmp
cmp
cs
fstps
push
fwait
mov
lock
mov
inc
imul
mov
mov
add
ja
or
inc
cmc
pop
lahf
cmp
inc
stos
dec
fs
ret
dec
out
ds
inc
jo
adc
sbb
cmp
cmp
je
inc
or
add
clc
push
mov
jno
inc
pop
popf
inc
sub
mov
cmp
xchg
push
add
es
jb
xchg
ds
add
lock
repnz
push
inc
mov
sbb
cmp
iret
addl
push
dec
push
pusha
lcall
int
pop
sub
sub
pop
adc
push
stc
adc
insb
sahf
ret
lret
cmp
ljmp
fs
ds
xchg
sti
ss
imul
pushf
movsl
inc
push
hlt
cmp
lock
ret
aam
rcll
pop
imul
or
inc
testb
jmp
pop
test
fnstsw
add
adc
addl
push
add
icebp
pop
adc
stos
adc
hlt
fcmovnb
mov
sub
push
sub
mov
push
pop
push
adc
pop
fs
jg
idiv
inc
aas
movl
pop
inc
mov
in
mov
xor
mov
lds
sbb
stc
call
bound
inc
je
out
lods
xor
es
mov
lods
std
lods
imul
mov
jns
mov
cmp
sbb
cmp
mov
push
jmp
xchg
pop
xor
jns
push
es
or
jg
mov
mov
and
test
dec
add
lahf
mov
pop
nop
xor
sbb
adc
sbb
push
add
push
jmp
or
mov
movnti
sbb
cli
add
int3
fistpl
inc
or
xchg
and
out
imul
inc
jne
test
fstps
fbld
lea
lea
in
insl
aad
mov
sbb
jb
mul
xor
mov
daa
push
push
je
jne
add
loop
push
lods
insl
xor
das
mov
xchg
lods
or
les
and
or
pop
add
mov
mov
mov
or
jno
call
fsubl
jns
jp
adc
and
movsb
sbb
add
insl
push
fcoml
or
shr
cmpb
or
jne
ret
inc
push
movsb
add
out
cld
je
push
and
push
or
cmpsb
push
xor
test
push
push
dec
idivb
sub
xor
insl
into
insl
dec
inc
and
cmp
call
dec
sbb
into
popf
pushl
movsb
add
and
and
mov
add
jl
sub
pop
adc
sahf
pop
jo
out
adc
cmpsb
add
inc
add
jmp
mov
call
jne
in
pushf
les
ss
das
js
clc
or
dec
ss
or
cld
cmp
dec
adc
call
dec
add
cmpsb
loope
adc
rcll
sub
dec
popa
push
xor
dec
or
push
loope
add
and
push
daa
sub
neg
in
adc
je
jle
cmp
enter
insb
jg
mov
and
adc
pop
cli
pop
call
movsl
jno
push
dec
add
sbb
inc
pop
imul
push
adc
in
dec
loop
shll
and
dec
je
or
cmp
stos
sub
mov
je
dec
and
movsb
les
jecxz
push
mov
stos
sub
les
add
xor
or
jle
gs
push
push
cld
mov
pop
pop
inc
mov
fwait
dec
testb
push
xor
leave
and
xor
mov
incb
popa
pop
sbb
sub
jecxz
repz
xor
push
sar
xchg
je
mov
jmp
dec
imul
in
imul
arpl
lods
cmp
clc
out
fsts
inc
sub
sbb
ja
cld
je
adc
ret
and
fbld
cli
fidivrs
dec
and
in
pop
xchg
sub
add
bswap
call
inc
les
mov
xlat
sub
test
je
ret
mov
dec
push
xlat
jae
jb
scas
insl
enter
push
inc
lret
jae
pop
sub
insb
dec
movsb
test
mov
test
dec
fdivs
pop
mov
adc
or
jl
adc
mov
push
mov
daa
sub
dec
push
xlat
or
popf
push
iret
dec
in
rclb
jle
pop
icebp
fisttps
cmovae
fwait
jge
sbb
inc
adc
insb
out
xor
xchg
jb
mov
hlt
sbb
dec
adc
jmp
mov
inc
dec
iret
cmpsl
in
mov
lea
jne
stos
mov
push
pop
callw
mov
stc
negl
sub
cmp
lret
repnz
ret
mov
jnp
test
jmp
cmp
push
shll
adc
jmp
jne
inc
and
add
inc
and
xor
movsl
mov
inc
push
pop
popa
push
mov
call
dec
mov
and
push
in
inc
into
sbb
daa
clc
outsl
leave
imul
or
push
call
sub
insl
ss
scas
and
aam
xchg
push
push
adc
dec
lods
int
lods
iret
pop
sahf
mov
jp
dec
pop
scas
xor
shr
cmc
add
cmc
cli
cmp
xchg
lea
testb
jne
sub
fimull
clc
std
cld
insl
mov
test
cmp
rcrl
andb
aam
out
stos
inc
jl
or
push
sbb
ret
orl
int3
das
cltd
fistpll
test
and
and
xchg
push
stos
pop
fwait
push
jmp
dec
xchg
and
pop
lret
enter
xchg
in
mov
leave
es
daa
loop
out
jmp
push
sub
mull
daa
jp
xchg
or
movsl
dec
inc
dec
push
shl
add
ret
arpl
xlat
aam
pop
lahf
insb
cmp
push
lea
and
or
shlb
or
jl
movswl
das
shr
cmp
jno
dec
pop
and
hlt
pop
lret
dec
fistpl
iret
lea
aad
inc
lahf
xchg
push
sti
fsubrp
pop
daa
jo
jnp
dec
js
loop
orb
cltd
mov
add
lea
pushl
mov
jge
mov
or
cmp
cmp
jge
jg
test
pop
dec
push
xorl
cmc
mov
fisttps
std
pop
mov
addl
je
out
adc
out
mov
add
add
stos
stc
ja
mov
cli
leave
aas
jp
xchg
add
pop
mov
inc
call
pusha
cmc
mov
inc
pop
pop
repz
pop
clc
leave
aas
push
push
fcoms
sbb
out
sbb
cmpsb
ds
xor
add
pop
push
or
push
sub
popf
int3
into
pop
pop
pop
and
mov
or
mov
nop
pop
and
daa
inc
push
lock
imul
add
data16
xor
xor
enter
in
push
subl
or
xchg
lret
mov
shl
or
sbbb
pop
popf
mov
lods
hlt
mov
jle
or
or
lock
add
xorb
dec
adc
sbb
adc
ljmp
lock
js
call
gs
scas
add
add
mov
ja
repz
test
jle
in
xchg
into
repnz
and
or
jns
dec
add
or
movl
das
mov
pop
aad
inc
cmp
add
xchg
ja
jne
je
mov
xchg
push
stos
mov
das
pop
xor
cs
dec
cmp
cmovbe
cmp
pop
or
mov
mov
sub
repz
xor
ret
push
inc
sarl
movsb
push
jns
jbe
add
sub
popa
or
aas
mov
pop
gs
test
xchg
call
int
cmp
add
shlb
icebp
dec
mov
lret
ljmp
popa
fs
lods
testl
push
dec
dec
fisubl
cmp
jbe
mov
xchg
sub
add
cmp
dec
push
divb
pop
add
pop
rcrb
pop
inc
push
jmp
push
popf
mov
jno
mov
rolb
movsl
es
add
dec
pop
sbb
cmp
mov
mov
fisubl
bound
mov
add
mov
add
and
pop
pushf
or
pop
insl
movsb
pop
and
fs
push
mov
inc
mov
shr
mov
sub
cmp
adc
jecxz
aas
lea
sbbb
mov
mov
je
jmp
das
out
xchg
pop
xchg
ja
inc
add
sub
pop
jmp
fiaddl
mov
or
call
bnd
inc
adc
inc
in
clc
xor
sub
and
or
loope
pop
adc
inc
rcl
enter
xchg
repnz
sub
push
jl
out
popa
test
mov
push
inc
pusha
mov
je
mov
data16
rclb
and
dec
and
or
dec
push
cmp
adc
into
repz
ret
cmp
les
rcrl
in
shll
xchg
in
pop
mov
mov
bound
sub
adc
dec
cs
enter
xor
sbb
data16
mov
lods
iret
ret
in
sbb
aas
xor
adc
and
jno
dec
sbb
cmp
xor
cmp
mov
repz
jo
or
je
mov
lods
popl
icebp
jg
clc
and
test
dec
popf
sub
repz
scas
shll
mov
cmp
xor
mov
mov
arpl
dec
inc
std
and
mov
adc
sti
popa
inc
dec
test
push
mov
lock
mov
xchg
out
jns
les
aam
movsl
sub
in
adc
adc
push
movsl
insl
jecxz
in
loopne
push
mov
push
add
test
outsb
fcomps
pop
test
div
adc
xor
pop
add
ret
mov
jmp
out
setbe
xchg
xchg
mov
shrl
sbb
inc
pushf
sub
inc
cld
jb
mov
mov
push
inc
test
inc
pop
pop
xchg
push
stos
cmp
call
lret
daa
and
shll
xchg
call
rcll
dec
xchg
cli
jne
flds
ja
popf
mov
adc
and
mov
in
enter
orb
or
mov
adc
add
sub
or
inc
pslld
popa
xchg
push
das
mov
je
mov
add
daa
push
jb
mov
cmp
jbe
and
dec
imul
pop
add
xor
das
leave
outsl
imul
mov
dec
pop
ret
push
dec
mov
or
clc
xchg
pop
mov
push
ss
movb
lret
js
cmp
and
push
xchg
aam
sub
je
inc
sahf
int3
push
mov
sbb
pop
mov
imul
or
jl
add
push
jns
pop
aaa
adc
ficoms
mov
jge
add
inc
adc
dec
add
adc
mov
jmp
imul
call
cmp
addr16
stos
daa
dec
add
stos
sbb
repz
xchg
or
pop
nop
in
icebp
jne
sub
cltd
xor
pushl
je
ja
push
mov
das
mov
sbb
and
scas
int
sub
push
dec
shlb
loopne
cmp
jo
je
aad
jp
sbb
sub
xor
jnp
ucomiss
jbe
mov
add
jne
sbb
and
stos
lds
movb
aad
adc
lea
xchg
test
scas
mov
and
mov
xchg
push
xor
push
or
mov
xchg
jmp
mov
popf
inc
icebp
mov
aam
stos
and
sub
mov
out
jge
or
adc
loope
test
in
fnstenv
je
adc
push
stc
jle
inc
shlb
call
lcall
xchg
cmc
and
jl
addl
ret
jg
push
mov
jns
in
jns
pop
test
dec
aaa
roll
and
das
mov
dec
rorb
leave
xor
jp
test
add
inc
lds
sub
push
pushl
call
leave
hlt
add
testb
pushl
pop
cli
loop
in
pop
aas
add
not
mov
sbb
and
sbb
jnp
push
lahf
lods
clc
fistl
popf
xor
hlt
mov
loopne
cmp
adc
fwait
inc
push
test
gs
imul
dec
xchg
jp
xor
or
or
and
cmpsl
lret
or
add
push
xor
jbe
jae
cmc
jno
push
mov
jo
inc
and
xchg
mov
mov
push
fadd
aaa
loope
loopne
push
adcl
shll
test
call
jne
jo
cmp
or
std
xchg
mov
add
sbb
adc
xor
add
dec
mov
jbe
lcall
enter
jnp
xor
jmp
popl
pop
and
imul
rorb
nop
cmp
shll
loope
jg
sub
inc
pop
sbb
inc
or
push
lcall
jb
or
push
push
dec
addl
icebp
je
testb
ffreep
jecxz
call
pop
insl
cmpl
sbb
lea
xor
or
inc
arpl
cmpsb
pop
and
xchg
mov
mov
and
sub
push
inc
mov
jg
jg
loopne
mov
fldl
test
inc
sbb
sub
sub
int3
fcos
das
inc
sbb
xor
xchg
les
movsl
pop
fsubrs
sahf
or
sbb
out
mov
jle
out
pop
nop
clc
sub
mov
in
mov
adc
icebp
fidivrs
mov
sbb
enter
push
imul
or
inc
jg,pn
push
cmp
ds
mov
iret
push
bound
pop
hlt
pop
ljmp
fs
xor
aaa
push
stos
ret
adc
add
mov
push
xchg
xchg
xchg
pop
or
or
lea
jo
or
sub
das
idivl
xchg
push
pxor
lea
add
roll
and
ret
daa
cmp
xchg
test
stc
andl
lret
pop
or
pusha
lret
push
or
push
sarb
mov
mov
fstl
push
cmp
or
xor
sbb
jp
push
insl
minps
fcoms
imul
outsb
icebp
dec
jnp
add
out
and
mov
xor
sbb
mov
mov
cmp
in
dec
sbb
dec
jle
cmp
push
sub
iret
or
jmp
push
adc
xchg
pop
mov
xchg
sbb
dec
xchg
lret
or
sbb
or
mov
je
push
dec
push
or
pop
inc
test
pop
mov
test
xor
loop
cmp
sub
mov
push
movl
mov
jg
movsb
rorb
adc
adc
iret
icebp
adc
adc
or
sub
cs
ret
mov
loope
ss
pop
inc
xor
test
adcb
sbb
xor
pushf
in
imul
fisubs
pop
jge
fs
and
push
mov
cs
sub
addb
insl
sub
pop
mov
pop
insb
xchg
pop
sbb
and
cmp
rcrl
mov
inc
adc
pop
jl
cmp
insb
loope
stos
jmp
imul
jp
xlat
dec
sub
push
bound
pop
pop
mov
inc
fidivrl
cld
dec
pop
jb
dec
push
pop
in
rclb
ljmp
jb
cld
outsl
sub
pop
or
pop
lock
cmp
push
ret
sbbl
add
or
or
mov
enter
filds
ds
shl
push
or
mov
addps
inc
jmp
cmp
push
add
jne
clc
movsl
call
ss
imul
dec
xlat
leave
sub
jne
int3
ficomps
adc
or
jle
pushl
sub
cmp
jno
cmp
xlat
cwtl
pop
cmpsl
push
test
jbe
and
cmp
sbb
enter
lea
shrb
sbb
jge
add
sbb
push
fsubs
jle
les
std
jne
in
or
dec
sahf
xchg
icebp
sbb
add
lods
das
pop
in
das
in
fcmovnbe
sub
popa
sub
jbe
ds
mov
lret
test
mov
mov
or
call
call
test
cltd
pop
mov
fs
inc
pop
nop
movsl
or
fcmove
pop
fs
push
into
inc
push
xor
and
call
stos
imul
mov
mov
cmp
dec
mov
mov
xlat
scas
std
bnd
mov
lea
add
inc
inc
adc
add
jmp
or
pop
lds
lcall
xchg
or
cmp
vmwrite
sarl
outsb
call
call
dec
add
leave
jge
adc
dec
add
lcall
data16
inc
mov
sub
subl
mov
pop
sbb
sahf
push
loop
cmp
out
inc
sub
cmp
ljmp
adc
xor
fwait
adc
cmp
sbb
test
je
xchg
test
mov
add
test
ds
xchg
sbb
cld
das
in
mov
js
es
xor
jmp
pop
mov
pop
imul
scas
insl
mov
int3
push
push
pop
jno
pop
or
or
inc
in
in
outsl
adc
xor
fisubrs
cmp
es
push
or
shll
dec
jne
mov
stos
outsb
cld
mov
or
push
jmp
pusha
popa
into
mov
enter
mov
cmp
pop
adc
nop
outsl
dec
adc
dec
mov
hlt
jecxz
les
add
and
les
inc
stc
pop
sub
and
inc
inc
sub
cmp
lods
pop
sbb
jns
aas
mov
es
fs
call
or
outsb
shll
out
push
jae
or
test
mov
test
call
enter
pop
adc
clc
jecxz
push
push
add
pop
lcall
sub
cmp
adc
sar
xor
gs
xor
sbb
subl
sbb
lea
loopne
push
fimull
pop
mov
xchg
xor
nop
push
add
xchg
or
inc
popf
mov
xchg
xor
sub
add
gs
ljmp
jne
fldcw
test
add
pop
xlat
or
ret
mov
cli
fcoms
xor
or
rcll
mov
or
test
adc
adc
adc
ljmp
inc
and
or
mov
cmp
push
mov
adcb
cwtl
jb
or
sahf
sbb
inc
ds
mov
or
sbb
into
jb
pop
push
mov
add
loop
or
in
stc
sbb
and
notl
and
jl
xor
je
pusha
lret
dec
addr16
bound
lods
enter
stos
sub
adc
adc
adc
and
sbb
jo
sbb
aad
add
dec
adc
jmp
push
nop
or
add
cmpsb
ror
adc
push
push
inc
jecxz
dec
cmp
fwait
adc
jb
and
and
in
dec
movsb
or
xchg
jnp
lcall
ret
xor
mov
push
dec
lock
dec
add
dec
inc
in
dec
sbb
or
mov
lock
cmp
into
les
lds
mov
fcomps
in
out
lock
idiv
clc
cld
cld
std
ret
pop
adcl
mov
lahf
xchg
or
pop
icebp
call
xchg
test
push
sub
push
cmpsl
dec
sub
sub
pushf
dec
dec
mov
push
mov
mov
mov
cwtl
fcoms
loop
loop
out
cld
cmc
idiv
clc
cld
cli
sti
cld
std
push
mov
xchg
js
pushf
jnp
jg
pop
into
aas
sbb
fiadds
jmp
in
enter
hlt
xchg
test
movsb
mov
lahf
mov
cs
mov
cmp
lret
mov
sti
test
jnp
aam
enter
pop
mov
je
nop
jno
jno
jae
jno
jno
jae
lods
data16
jae
mov
sti
and
mov
call
loop
loop
pushf
mov
jg
dec
cmp
sbb
fisubl
adc
lea
test
jbe
jecxz
add
inc
aaa
lods
pop
daa
jo
arpl
jns
push
cmp
push
or
and
call
cmp
push
in
jae
pusha
je
inc
lds
pop
stc
xchg
xchg
outsl
les
push
dec
push
fmuls
lret
push
cmp
xor
jge
popa
mov
or
in
jmp
hlt
add
jge
jb
movsb
pusha
or
push
jno
mov
das
adc
cmp
dec
mov
cmp
adc
jmp
das
xor
daa
std
ljmp
ret
or
xor
popf
dec
mov
les
cld
mov
push
push
push
scas
pusha
out
call
leave
fldl
sub
or
add
imul
mov
pop
movsl
and
pop
lds
adc
jge
in
sahf
pop
and
adc
aam
loope
cmpsl
pop
push
push
xchg
in
xchg
inc
mov
jmp
icebp
ljmp
out
inc
sub
pop
mov
xchg
inc
add
adc
or
adc
shl
and
mov
dec
dec
repz
ds
and
jmp
aam
mov
sbb
inc
xor
mov
fcompl
jmp
lea
in
daa
mov
fidivrl
jl
orl
mov
sbb
cmp
push
and
push
arpl
adc
mov
sti
leave
subb
jae
loop
outsl
inc
xorb
pop
rcll
inc
in
pop
call
das
mov
cmp
push
mov
add
cmp
jbe
cmp
lea
out
test
mov
xor
sub
arpl
sub
mov
ljmp
test
inc
repnz
add
scas
incb
or
or
cld
in
ret
adc
and
cmp
ret
cmp
push
mov
je
mov
push
mov
js
adc
add
cmp
add
cmp
test
mov
sub
cmc
fisubl
lea
jnp
leave
out
clc
mov
mov
mov
pushf
sub
or
jbe
daa
aad
sub
dec
std
ljmp
xor
loopne
dec
popf
ljmp
push
xor
mov
sub
js
mov
sti
xor
loope
push
int3
adc
and
bound
hlt
mov
stos
fistl
push
inc
dec
mov
mov
inc
push
hlt
cmp
mov
and
dec
xor
add
adc
loopne
inc
push
cmp
jl
sub
jge
cmp
cmp
add
cltd
fisttpl
mov
ret
stos
and
jmp
cli
fmuls
mov
shl
lahf
or
out
jl
imul
jmp
int3
adc
or
lahf
fmull
mov
arpl
lcall
inc
rcr
test
sub
outsl
or
push
or
sbb
push
pop
jo
mov
fildl
inc
xchg
mov
xor
jnp
add
jle
dec
iret
pusha
push
mov
jae
lock
xchg
sbb
into
mov
insb
dec
pop
add
jg
xchg
int3
test
or
shll
call
xorb
sub
cli
clc
bound
adc
es
push
xor
xchg
xchg
jbe
mov
outsl
mov
into
push
mov
pop
add
push
and
push
add
neg
sbb
inc
pop
push
dec
pop
lret
aam
adc
mov
and
lret
and
repnz
sub
leave
cmc
imul
mov
xchg
loope
loopne
mov
add
adcb
stos
and
scas
or
pop
mov
pusha
inc
rolb
bnd
xor
push
mov
mov
insb
add
push
stos
int
and
shlb
lds
outsl
fldl
rorb
jbe
ds
cld
mov
push
jle
repnz
cmpsb
adc
xchg
xchg
add
movsl
adc
test
jecxz
push
insb
jle
pop
out
dec
sub
scas
popa
mov
mov
push
test
je
mov
inc
jae
sub
test
fucomip
jmp
or
jl
inc
sub
mov
movsb
adc
daa
mov
adc
jb
sbb
or
cmp
sbb
xchg
jnp
inc
mov
cmp
push
cmp
loop
imul
adc
bound
daa
mov
dec
or
mov
adc
and
das
and
or
add
pop
adc
vmread
or
xchg
enter
lds
and
aaa
imul
push
jnp
adc
pop
cmp
je
imul
mov
jns
fildll
daa
push
sub
lret
adc
add
pop
fisubrl
sub
sbb
or
call
imul
shll
or
xor
aad
cmpsl
lods
lock
push
xchg
scas
shlb
mov
pop
aad
xor
cmpsb
lret
lcall
sbb
push
push
mov
or
arpl
mov
fildl
ss
inc
xchg
in
mov
loope
xor
dec
pop
inc
popa
pusha
xor
mov
pop
xchg
rcr
push
inc
push
ret
push
xchg
ljmp
cmp
dec
cs
inc
ljmp
pusha
sub
push
insb
rclb
test
andl
mov
sarb
and
inc
jo
pop
je
je
int
dec
xor
sbb
sbb
and
push
jg
dec
sbb
push
dec
popf
gs
mov
add
cld
xor
rcrl
cmp
std
cmp
jne
adc
mov
cmp
pop
in
movb
pop
call
pushl
and
and
jp
pop
pop
bound
mov
mov
lahf
inc
pop
dec
inc
out
or
fwait
mov
and
pop
movsl
aaa
cld
and
sub
cltd
aaa
adc
mov
jne
aas
jle
mov
dec
and
pop
pop
add
jmp
gs
and
mov
gs
cld
sti
frstor
test
mov
inc
clc
bound
dec
std
push
mov
xchg
adc
or
dec
jb
fwait
pop
lds
pop
arpl
xor
push
xor
adc
and
inc
add
daa
mov
inc
ss
lret
sub
jmp
loope
or
lcall
das
push
mov
popf
ss
dec
and
mov
xchg
push
sub
fs
dec
sbb
jo
adc
dec
ret
popa
cmc
adc
pop
push
and
pop
dec
push
fcomps
adc
repz
sub
mov
je
push
pop
sub
loop
cmp
xchg
xor
stos
mov
nop
or
into
cmp
lds
movsb
push
ljmp
inc
sarl
mov
xchg
subb
mov
xchg
gs
mov
cmp
pop
inc
jle
in
and
mov
jl
or
sti
or
les
and
or
or
das
pop
mov
sub
sbb
jnp
push
pop
out
pop
inc
xchg
sub
mov
inc
jb
addb
xor
cmp
lcall
dec
rorb
mov
and
or
popf
or
sub
rclb
cmc
out
adc
mov
iret
mov
mov
vpsrad
das
cmp
cmp
data16
and
pop
fcomp
call
inc
test
xor
adc
arpl
lret
xchg
les
sub
jge
inc
in
push
cmpsb
xor
test
cmpsl
ja
movsl
push
xchg
daa
test
mov
sub
mov
andl
inc
hlt
and
cmp
jns
push
pop
mov
jns
dec
sbb
inc
push
push
push
fsubrs
shll
dec
and
or
mov
loopne
or
add
shll
sub
dec
jl
sub
xchg
pop
imul
mov
dec
fsubrl
stos
leave
mov
inc
cmc
scas
fmuls
cmpsb
xchg
pop
mov
call
jne
adc
sarb
pop
jo
push
lcall
jmp
dec
and
call
and
add
leave
fistpll
popf
out
lds
xchg
or
lea
fsub
or
cld
dec
cltd
daa
shll
aad
push
mov
cmp
jbe
or
push
in
fimuls
adc
pop
int3
sbb
pop
mov
xchg
testl
mulb
jne
push
das
aad
push
sbb
cmpsb
or
std
jns
xchg
out
pop
cmc
mov
xor
push
outsl
add
sbb
nop
pop
or
jle
xor
repz
adc
hlt
dec
mov
and
hlt
sbb
mov
xchg
scas
in
cmp
out
sbb
nop
pop
push
xchg
mov
mov
or
xchg
fs
stos
icebp
outsl
ret
cmc
int3
ss
and
mov
xchg
ficoms
and
mov
shr
dec
push
xchg
mov
fsubrl
push
pop
add
call
div
adc
mov
add
push
daa
outsl
and
stos
movsb
lods
adc
popa
jae
xchg
andl
fs
in
cmc
xchg
inc
and
jmp
xor
lds
or
ds
movb
push
test
cmp
dec
sbb
sbb
inc
xorb
cmpsb
ss
out
dec
in
in
out
sbb
lock
dec
fs
jp
mov
ror
jp
push
data16
and
rclb
ljmp
ds
test
adc
cli
ret
push
dec
movsl
mov
mov
cmp
mov
push
addl
cmp
cs
insl
daa
jo
dec
push
and
lret
push
xchg
pop
into
insb
ja
sbb
push
adcl
cmp
cmc
loop,pt
mov
out
stos
dec
aam
decl
add
cli
movsl
inc
push
popf
gs
cmp
hlt
push
outsb
jg
pop
div
mov
add
data16
shl
cli
or
sub
push
jo
aad
mov
dec
push
mov
out
xchg
push
add
add
call
bound
push
xor
fistl
sbb
ss
xor
call
pop
xchg
mov
test
call
adc
inc
inc
inc
xor
xchg
mov
xchg
out
mov
and
dec
inc
sub
nop
out
push
or
mov
sahf
xor
jmp
jbe
xchg
addb
cmp
dec
push
setne
clc
mov
adc
int
jmp
out
je
pop
add
push
loope
in
push
xlat
xchg
inc
inc
fldcw
loop
mov
mov
test
rcrb
cli
add
cmpw
add
mov
jmp
pop
or
cmp
xchg
fs
mov
and
int3
rcrl
mov
mov
jb
sbb
push
mov
fs
sub
sub
inc
cwtl
dec
mov
outsl
jns
sahf
adc
push
subl
adc
movsb
adc
int3
mov
stos
movsl
sub
push
sbb
mov
cli
clc
push
adc
jnp
pop
dec
mov
in
dec
sub
adc
int
ds
dec
cli
bound
mov
jg
mov
mov
js
push
add
mov
and
cmp
lea
test
jae
mov
lahf
add
mov
push
or
repnz
jp
and
out
xor
dec
lock
sbb
cmpsb
stos
stos
adc
push
adc
and
add
cld
icebp
bound
cmpsb
inc
data16
lret
xchg
dec
cmp
loopne
cwtl
hlt
push
or
inc
push
je
sub
in
xor
test
inc
pop
pop
cmp
jmp
loop
and
inc
and
jo
jge
into
jae
decl
or
dec
jo
mov
roll
je
aaa
add
sub
movsb
mov
jb
inc
je
aad
inc
dec
mov
jg
cmp
sub
dec
dec
add
loope
cmp
hlt
cmp
aam
rorl
add
adc
adc
aam
lods
push
pop
mov
jnp
and
ljmp
insb
push
mov
or
dec
pusha
outsb
adc
mov
test
mov
mulb
or
dec
and
cs
movl
pop
fldl
add
add
lret
adc
cltd
push
push
sbb
or
loopne
push
fcompl
rclb
mov
pop
movsb
lods
xor
cmp
stc
or
and
and
sub
lea
push
je
popa
push
call
ret
inc
lods
clc
mov
lds
adc
sbb
sub
and
pusha
das
call
and
aas
adc
sub
mov
add
dec
add
loopne
mov
outsl
imul
jbe
sarl
shl
xchg
je
in
scas
xorl
jo
jae
ljmp
mov
mov
jp,pn
jno
xchg
cmc
mov
in
inc
sub
cmp
add
push
push
mov
arpl
pop
cmp
mov
push
cltd
push
mov
sbb
jg
orl
cmp
sahf
sbb
and
sbb
lods
sti
mov
sub
mov
push
clc
cli
out
pop
sahf
push
cld
xchg
repz
mov
mov
repnz
sub
push
lea
movsb
mov
or
ja
xchg
mov
dec
je
xchg
pusha
fs
out
pop
popf
fdivs
movsb
inc
jl
or
fsts
adc
xchg
mov
cmp
cmp
sub
adc
xchg
adc
jl
sahf
ja
aaa
adc
mov
je
mov
pop
mov
decb
test
out
add
pop
mov
test
addl
sub
insb
fs
ds
pop
addr16
stos
mov
les
cmpsl
dec
and
pop
mov
sub
inc
inc
in
pop
jle
ds
xchg
je
lods
call
daa
pop
in
sub
mov
xchg
adc
inc
daa
call
aam
ja
dec
cmp
subb
mov
adcl
fs
and
mov
push
cmpsb
and
mov
add
adc
ljmp
pop
dec
dec
sbb
pop
jns
test
sbb
or
mov
add
cmp
outsl
jne
mov
movl
and
push
popf
les
jbe
and
xrelease
pop
inc
sub
pop
push
stc
inc
ja
outsl
push
and
popa
out
push
jle
fneni(8087
lea
in
jg
movb
int
fs
push
lds
sub
sbb
and
push
add
mov
lds
mov
imul
push
movl
xor
shr
mov
mov
jne
loope
inc
xor
jns
xorb
fstps
add
and
xlat
sub
jp
push
sbb
xchg
testb
out
sub
add
int3
lea
mov
pusha
add
les
movsb
and
stos
jl
enter
mov
in
or
into
in
xor
push
push
sub
test
in
fs
add
sbb
data16
xchg
clc
add
or
ficoml
push
cmp
dec
outsl
test
fucom
cmpsl
jne
loop
push
jns
movsl
push
repz
pop
les
push
xchg
dec
adc
scas
fisttps
and
shlb
xlat
pop
imul
jge
nop
push
jns
lods
cmc
adc
sbb
mov
call
inc
mov
xchg
and
lahf
popa
loop
jge
sbb
test
shll
adc
addr16
mov
pop
mov
testl
cmp
push
cmovae
out
test
dec
stos
repz
pop
adc
addl
test
dec
scas
shll
cmp
je
lea
sbb
sub
in
adc
xor
fildll
loopne
popa
es
popa
jno
movb
xchg
adc
and
push
xchg
mov
cmpsb
push
inc
sub
loopne
sub
bound
movsl
mov
rorl
sbb
enter
inc
or
add
loop
xor
mov
mov
adc
test
cs
loopne
inc
mov
xor
inc
push
sub
icebp
xor
push
inc
fadds
push
push
xor
repnz
mov
test
cmp
repz
adc
jle
je
stc
push
test
add
fisttps
sbb
mov
adc
cltd
dec
out
and
fwait
rcr
or
add
xchg
insb
and
pop
cmpsl
inc
mulb
es
mov
sub
cmp
or
add
inc
das
adc
pusha
mov
sbb
jle
xchg
sbb
push
divb
sbb
pop
ljmp
les
sub
je
or
in
cmp
push
and
fs
pop
leave
push
or
popw
sub
test
mov
cwtl
repnz
xchg
adc
fisttpll
mov
push
incl
mov
xchg
xor
dec
in
mov
setle
push
and
scas
sub
cmpl
push
and
push
mov
pop
sar
jae
ret
and
stc
sbb
int
inc
xchg
and
ja
ja
stc
cli
jge
mov
loope
push
cmp
sub
inc
mov
lcall
dec
add
movsl
inc
fcmovb
mov
jge
ja
and
incb
xor
loop
xor
push
hlt
pop
and
movsl
je
movsb
xor
fdivrs
fistps
add
push
or
js
dec
or
jbe
out
push
scas
rorl
dec
sub
and
inc
push
mov
or
pushl
cmp
mov
das
call
and
inc
loopne
push
or
pop
in
xchg
mov
das
call
ret
mov
adc
mov
mov
mov
das
aad
cltd
or
mov
leave
jle
xchg
es
mov
jb
mov
sub
xor
jbe
movsb
aaa
fcoml
mov
jl
adc
clc
inc
fdivrl
xchg
stc
pop
xchg
cmpsb
jg
inc
and
pop
xor
lret
dec
dec
hlt
mov
xor
cmp
sub
pop
cwtl
sahf
fs
fstpt
xchg
inc
xchg
dec
scas
addl
xchg
xchg
or
push
repnz
cmpsb
xor
ret
inc
mov
push
mov
push
test
aam
test
sub
movsl
mov
push
add
call
xchg
mov
mov
xor
mov
or
xchg
jl
mov
movsb
dec
xchg
aad
xlat
push
adc
arpl
scas
xchg
shlb
adc
cmc
and
lea
and
lret
outsb
nop
xchg
es
pop
cli
cmp
dec
pop
frstor
testl
sbb
leave
adc
data16
rolb
jae
push
test
cmpsb
lea
jb
mov
lahf
subl
mov
test
xor
sub
or
out
and
mov
adc
loope
push
xchg
in
pop
xchg
in
into
arpl
jae
jne
adc
fwait
or
outsl
or
mov
jo
lea
xchg
out
nop
mov
mov
cmp
mov
loopne
daa
test
or
push
xlat
lret
jecxz
orb
stc
mov
mov
aam
mov
push
testl
dec
add
clc
movl
jb
jmp
cmpsl
mov
dec
mov
arpl
pop
mov
ret
cmp
dec
sbb
adcl
push
dec
adc
and
push
mov
inc
sbb
sub
sub
xchg
movsl
pop
aas
add
jge
stos
lret
call
jno
ret
or
jg
pop
ds
lods
adc
jle
js
ret
push
pop
or
mov
popa
cmpsb
repz
mov
mov
xor
lahf
shrl
scas
out
sbb
push
mov
outsl
mov
mov
dec
rol
pop
pop
dec
adc
sbb
bound
insl
enter
fisttpl
fisubrl
xchg
je
rcl
jno
push
daa
and
negl
jnp
mov
dec
ret
mov
mov
in
push
cwtl
mov
or
sub
std
repnz
cld
js
ret
ret
outsl
andl
popa
push
mov
mov
push
sbb
cld
add
adc
inc
bound
jmp
cmp
cmpl
js
add
xor
sub
outsl
int3
cmp
shl
mov
add
nop
rcrb
fldcw
adc
push
add
lods
mov
aas
dec
jl
jne
mov
clc
cmp
scas
xor
cmpsb
cmp
jmp
fadds
and
dec
adc
cmpsb
out
and
xchg
enter
lea
cmp
and
je
lret
lds
lods
imul
dec
jg
push
hlt
rcl
mov
lret
mov
push
xlat
mov
ljmp
lret
push
adc
call
loop
jns
ficomps
mov
inc
add
push
mov
xlat
out
sub
test
jne
lock
push
into
pusha
icebp
cs
pusha
sbb
and
das
repnz
ja
mov
sub
out
mov
adc
mov
sarl
or
xchg
dec
or
aad
cmp
popf
inc
data16
bound
pusha
or
pop
popf
mov
mov
sahf
mov
arpl
or
mov
xor
adc
sbb
push
mov
xchg
ss
pop
mov
or
push
sub
adc
rclb
stos
leave
adc
pop
dec
push
jns
push
jns
mov
adc
cmp
pop
addb
sahf
jp
dec
sbb
in
sbb
rcrb
inc
addb
out
repz
mov
fldcw
stos
pop
cltd
sbb
mov
movsl
loope
enter
mov
mov
pop
inc
lret
push
xchg
xor
orl
or
or
add
jmp
test
sbb
cld
out
mov
push
decl
and
dec
and
in
sub
sub
lahf
pushf
or
xor
in
jo
bound
push
jle
jmp
jp
pusha
add
test
sbb
add
pop
notb
das
pop
adc
sub
imul
orb
push
cmp
shlb
xchg
adc
mov
jecxz
pop
cld
inc
inc
call
xor
add
jp
test
arpl
and
mul
fs
mov
xor
mov
repz
push
movsl
jge
mov
popf
fldcw
test
cmp
sub
or
jnp
adc
jp
push
inc
or
sahf
push
push
out
mulps
mov
inc
stos
lea
hlt
xabort
cmp
pop
fcmovnb
cmp
add
out
les
mov
in
notb
add
int
lcall
push
dec
or
inc
les
clc
pop
push
xchg
std
xchg
into
xchg
iret
clc
mov
stos
and
inc
cmp
cmc
or
pop
mov
test
sub
stos
ret
jge
add
jle
inc
sbb
dec
jp
adc
add
pop
push
jp
lcall
cltd
daa
pusha
call
bnd
pushf
mov
push
dec
das
enter
xor
push
push
cmp
sbb
imul
das
js
sbb
data16
in
xor
addr16
in
mov
pop
or
cld
call
xchg
adc
mov
bound
icebp
mov
ffreep
mov
hlt
jle
xor
repz
fs
push
lds
in
mov
stos
xor
testl
sahf
gs
pop
and
out
rcr
add
stos
cld
jns
push
push
xor
push
xor
movsl
xacquire
fsubrl
lret
lods
pop
test
adc
jmp
adc
lea
inc
cmp
mov
out
pop
add
push
or
and
movl
xchg
adc
sub
mov
push
inc
cli
sbb
shll
xlat
sub
call
dec
dec
pop
pcmpgtd
pop
inc
sub
push
cmp
jno
push
push
nop
jno
sub
lret
imul
dec
adc
test
push
aas
mov
ja
jge
pop
push
les
adc
insb
sti
call
inc
and
jnp
dec
cmc
xor
sbb
or
pop
mov
js
or
clc
in
or
adc
xor
or
push
cli
jo
call
jb
push
jecxz
adc
je
mov
std
das
add
jnp
xchg
cld
mov
dec
outsb
push
sub
test
sub
clc
fdivrl
push
xchg
sarl
lcall
xlat
or
mov
and
push
scas
lea
imul
pop
sbb
test
mov
lea
pop
mov
adc
adc
lock
loope
sub
mov
and
push
pusha
daa
jg
in
xor
leave
pop
pop
xchg
flds
int3
addb
push
dec
iret
dec
sub
fs
push
out
mov
push
add
push
pusha
stc
call
jge
lcall
adc
sbb
lods
mov
xor
aad
add
movb
in
lds
inc
adc
dec
out
xlat
mov
cmp
lret
mov
cld
mov
movsb
data16
dec
and
inc
and
shll
push
push
shlb
cld
push
mov
dec
mov
call
adc
ljmp
gs
dec
mov
je
leave
pop
xchg
add
leave
mov
sbb
sbb
inc
sbb
movsb
mov
and
push
pop
jae
mov
sahf
dec
dec
xor
cltd
adc
mov
mov
lods
mov
xor
sub
dec
and
orl
dec
popf
adc
and
jg
and
add
data16
inc
bnd
push
or
addb
mov
jg
push
adc
sbb
roll
enter
push
es
test
adc
or
imul
xor
pop
sub
ret
inc
pop
add
cmp
xlat
int
ds
cmpsb
mov
sub
pop
mov
mov
es
sbb
sbb
test
mov
adc
test
andb
push
sub
or
es
lock
or
adc
leave
or
adc
adc
ss
add
sbb
ret
or
mov
add
jecxz
mov
inc
add
movsb
imul
mov
aam
xchg
sub
mov
adc
pop
pop
andw
in
imul
sub
fistps
inc
dec
and
inc
call
xor
int
mov
add
cmp
outsl
lds
rorb
aam
mov
aad
dec
movsl
add
add
fs
loope
sub
outsl
xchg
call
mov
mov
shr
test
jae
mov
repnz
xchg
ficoml
sub
mov
outsb
dec
xor
push
push
test
loope
orb
mov
inc
sbb
push
xchg
daa
push
ljmp
lea
leave
test
call
notb
lods
dec
popf
jmp
xchg
add
adc
push
cmp
sbb
shld
mov
inc
mov
adc
cmp
push
xlat
inc
popa
mov
clc
xchg
inc
sbb
jbe
shlb
imul
push
xchg
xor
out
jecxz
incb
and
hlt
fidivrs
jbe
and
sbb
outsl
lea
and
xorb
push
push
loop
inc
cmp
xchg
cmp
xor
adc
push
adc
in
or
mov
je
push
xchg
inc
jmp
jmp
dec
adc
rorb
or
or
inc
jle
sti
test
fsubp
movsl
popa
roll
fdivrs
mov
jb
cli
sub
popa
push
cmp
mov
pusha
mov
fcoms
es
sbb
and
pop
repz
inc
and
sbb
je
xchg
xchg
cmp
test
jl
imul
pop
cmp
inc
push
xchg
icebp
lds
xlat
sti
mov
adc
push
hlt
mov
pop
sbb
fwait
shrb
add
sti
inc
sub
and
ret
add
mov
mov
dec
pop
xor
mov
cmp
imul
fyl2xp1
push
jo
push
popf
sub
stos
add
test
sbb
jns
cmp
sbb
push
out
mov
jno
inc
or
imul
out
lcall
xchg
popa
inc
aas
roll
jle
out
lahf
add
mov
mov
mov
mov
cwtl
ret
pop
imul
dec
xchg
insb
scas
xchg
xchg
icebp
dec
mov
fstps
xchg
cltd
and
inc
xchg
lahf
sbb
mov
adcl
mov
pop
sbb
lea
xchg
cmp
pop
sbb
or
andl
mov
add
cmc
ficoml
lds
jnp
xchg
roll
cmpsb
or
sbb
out
or
and
push
cmc
adc
mov
cltd
inc
sbb
nop
ficomps
mov
out
and
cmp
sub
adc
stc
jg
mov
cmp
sbb
scas
ss
sti
lahf
test
mov
jge
adc
iret
sbb
fists
adc
push
or
or
lock
xorl
syscall
mov
mov
sbb
adc
cli
push
push
jmp
xchg
jo
xchg
sub
je
int
lea
outsb
inc
pop
mov
jo
add
xchg
adc
pusha
movsl
adc
sbb
cmpsb
movd
testb
jle
test
test
fsubl
adc
inc
jmp
xchg
cmp
fistpll
sbb
inc
push
dec
enter
mov
xchg
je
sub
cwtl
cmp
addr16
inc
jb
adc
shlb
inc
sbb
sbb
mov
sub
fmul
cmp
push
add
inc
nop
add
ret
inc
adc
adc
je
sbb
inc
xchg
sbb
repnz
cli
popa
xorb
cmc
or
pop
push
inc
xor
xchg
int3
adc
dec
sub
mov
imul
pusha
gs
sub
ror
repnz
pop
jg
jae
orl
data16
xor
inc
int
arpl
mov
lock
stos
push
xchg
mov
sbb
or
adc
sub
hlt
pop
fistpl
sub
add
lock
or
jl
push
sbbl
daa
mov
adc
test
push
push
xchg
push
inc
jo
or
xor
or
xchg
rorb
add
adc
lahf
xchg
or
pop
dec
lret
in
push
push
sti
cmp
imul
shrb
and
or
imul
cmp
je
dec
call
jne
ret
outsl
and
cmp
xlat
je
xchg
adc
jmp
bound
loopne
xchg
or
sbb
and
or
scas
jno
dec
std
xchg
imul
bnd
jle
mov
mov
mov
and
pusha
mov
imul
or
or
add
fstpl
les
movsb
pop
mov
mov
inc
rclb
xchg
call
sub
sub
or
fisubrl
std
fs
push
fldt
mov
nop
mov
popf
int
hlt
daa
test
call
mov
mov
cmp
sub
cmpsb
or
das
scas
inc
mov
add
jne
mov
sahf
and
repnz
push
hlt
mov
mov
mov
xchg
sub
mov
push
call
sub
adc
adc
popa
jl
jne
dec
dec
pop
test
push
push
add
aam
in
lock
adc
lock
test
mov
rcrb
mov
and
roll
adc
jmp
lahf
je
push
jge
adc
out
movsl
xor
xor
push
and
and
xchg
notb
xor
movsl
jb
pop
dec
sbb
fidivrs
pop
jo
fldl
jle
adc
and
lret
mov
aad
into
cltd
jge
shll
add
pop
je
xor
ja
fmull
push
xchg
jge
ss
cwtl
das
mov
jg
add
nop
sbb
sub
pop
adc
sub
push
pop
cltd
push
imul
push
pop
sbb
call
push
mov
and
insl
popf
clc
fcompl
mov
daa
shufps
xchg
mov
or
adc
test
pop
jae
out
cmp
pop
cmpsb
popa
insb
push
outsb
fs
jb
faddp
sbb
sub
gs
mov
ja
inc
and
rol
cmp
imul
je
push
mov
xchg
fs
inc
mov
pop
ret
imul
or
and
cwtl
dec
sbb
cmp
push
hlt
or
ss
dec
cltd
lock
mov
sub
cmpb
je
cmp
lret
xor
frstor
je
jmp
xlat
or
push
mov
lret
jbe
cmp
and
test
cmp
mov
dec
adc
add
adc
je
repnz
sub
mov
push
xor
divb
jg
nop
mov
xchg
add
call
adc
mov
mov
repnz
nop
adc
mov
jg
mov
mov
in
call
xor
in
xchg
mov
and
icebp
push
dec
xchg
pop
adc
mov
bound
bound
mov
push
insb
stos
mov
adc
push
push
xchg
orl
xchg
daa
imull
cld
ss
or
call
mov
movsb
ljmp
cld
cli
adc
adc
rcrl
dec
sbb
adc
mov
mov
pop
or
enter
sbb
clc
adc
insl
add
inc
je
sub
mov
in
bound
dec
hlt
std
xor
add
push
cltd
pop
idiv
movsl
sub
ret
es
ret
or
xor
call
stc
sbb
jl
dec
dec
cld
out
jl
dec
mov
lea
sub
xor
jle
inc
rorb
ss
add
mov
rcrl
insb
jle
cmp
mov
roll
repnz
push
fisubrs
jle
call
cwtl
inc
cmp
inc
cmp
sub
sub
inc
xor
mov
cmp
sbb
sub
jno
lcall
cmpsl
cmp
jg
and
sti
mov
and
push
aam
inc
data16
lds
push
adc
sahf
fs
iret
push
sub
movsl
and
xchg
stos
scas
out
pop
cld
xor
push
add
fisubrs
inc
cmp
adc
adc
inc
push
inc
sbb
cmp
mov
cmpl
inc
and
xchg
dec
dec
add
pop
jl
cwtl
sub
xor
sub
pop
add
mov
dec
js
aas
add
adc
inc
adcl
inc
adc
inc
cmp
fstpt
adc
inc
mov
mov
das
xorb
inc
or
enter
insb
cmp
test
mov
xor
popa
add
std
nop
dec
ret
sbb
jg
jb
or
or
dec
pop
dec
mov
stos
out
jno
cltd
stos
icebp
stos
imul
sbb
and
dec
xchg
or
or
pop
aas
xchg
stos
popa
push
add
dec
aas
mov
sbb
dec
add
imul
cmp
decb
fdivr
jns
in
out
push
dec
cmpsl
push
out
dec
mov
pop
add
adc
push
pop
lea
push
mov
or
ret
cltd
sub
cli
lea
out
std
jmp
sbb
mov
aas
and
shlb
push
mov
imul
cli
cwtl
cmc
adc
jl
sbb
ds
xchg
inc
pop
and
sub
fidivrs
mov
add
mov
mov
add
dec
or
push
dec
int
inc
sbb
inc
push
fists
mov
cmp
decl
and
or
pop
das
clc
push
pushf
in
loope
rol
adcb
xchg
push
mov
mov
and
incb
int3
or
and
push
call
or
cmp
dec
add
sahf
mov
xchg
mov
fadds
repnz
pop
or
mov
mov
rol
xchg
cmc
xchg
pop
das
cld
leave
inc
mov
lahf
cmp
xlat
test
ja
cmp
mov
and
sarl
adc
adc
cmc
or
cs
pop
sbb
cmc
inc
dec
stos
call
loope
arpl
mov
or
sbb
dec
sub
add
je
pop
mov
jns
fcoms
xchg
jmp
push
lods
sbb
mov
xchg
and
push
xor
inc
lea
pop
add
sbbb
je
pop
rcrb
ljmp
fdiv
and
aad
dec
fs
shr
xchg
cld
aam
push
add
or
adc
dec
dec
sbb
fldl
or
mov
out
push
xor
stc
stos
mov
add
rcrl
mov
adc
pushf
into
popf
mov
cmp
sbb
lahf
cmpsl
dec
outsl
stos
push
fistps
xchg
icebp
push
mov
pop
cltd
cvtps2pd
adc
sar
xchg
mov
adc
mov
rcll
cmpl
adc
add
or
ja
stos
imul
push
bound
adc
adc
daa
rolb
in
cmpl
fldenv
subl
mov
daa
xlat
sbb
call
mov
dec
sub
shl
mov
imul
sbb
notl
jne
mov
lea
xor
stos
imul
imul
jno
mov
xorl
push
mov
and
call
adc
daa
adc
sbb
bound
dec
hlt
inc
xchg
pop
sub
adc
adc
test
addr16
sarl
jmp
cmp
dec
xchg
sbb
mov
push
xchg
in
pop
or
mov
mov
sub
dec
adc
cmp
mov
add
movsb
scas
repnz
xor
push
sbb
xchg
push
adc
or
and
add
es
test
lds
pusha
sub
mov
mov
dec
subl
sbb
mov
xchg
pop
mov
addr16
les
fcoms
push
xor
xchg
stc
add
push
lds
add
clc
jnp
mov
lods
pop
dec
sbb
and
sbb
pop
rclb
xor
das
jge
je
and
pop
push
aas
dec
jl
and
xchg
jmp
rcr
hlt
dec
push
add
dec
adc
stc
dec
mov
push
sub
inc
fcoml
push
hlt
mov
or
mov
dec
pop
add
pmaxub
mov
push
pop
sahf
les
adc
jmp
mov
shr
adc
xchg
ficoml
sbb
mov
inc
jo
pop
cli
pop
sub
pop
sub
and
bnd
cmp
sbbl
adc
inc
clc
stos
mov
sahf
std
cmp
inc
sub
sub
lock
iret
push
pusha
push
and
pop
clc
fistl
push
int
and
fabs
mov
or
mov
inc
jnp
lahf
xchg
mov
jmp
and
stc
call
adc
mov
movsb
or
adc
adc
and
dec
push
cmp
xchg
shl
stos
push
sbbl
test
mov
mov
push
and
icebp
mov
mov
data16
cld
cmp
je
das
call
push
mov
mov
or
cs
cmp
jecxz
pop
push
ja
sbb
adc
and
adc
lds
jmp
and
push
daa
fcom
xchg
pop
add
inc
lcall
jne
lcall
cmp
ljmp
adc
aas
adc
cmp
mov
push
jmp
xchg
mov
push
mov
mov
mov
popf
push
sahf
push
push
xchg
jb
and
movsb
mov
sbb
push
and
xchg
stos
and
das
je
jl
movsb
or
mov
pop
adc
ljmp
and
nop
sbb
pop
jecxz
pop
push
loop
sub
and
push
push
and
xchg
loope
jle
into
sbb
or
aad
xchg
pop
divl
push
lea
mov
sbb
jne
in
cmpsl
or
jns
jae
call
xchg
mov
mov
inc
push
and
xor
je
pop
add
mov
ss
or
adc
aas
clc
mov
adc
fucomi
js
cwtl
push
in
dec
enter
mov
mov
sbb
sub
or
je
dec
mov
cmovg
test
mov
pop
adc
inc
or
push
adc
inc
in
xchg
cli
adc
mov
xor
xor
stos
mov
push
pop
clc
dec
push
cmc
push
nop
add
setae
leave
cmp
push
push
or
in
or
addr16
daa
int3
mov
mov
xor
sbb
push
es
arpl
nop
jo
add
jl
pop
movsl
fs
inc
sar
add
js
dec
and
push
push
das
hlt
xchg
xchg
ror
test
fs
mov
push
sahf
scas
sub
test
cmc
or
inc
mov
fsubrs
cmpsb
jge
pop
mov
mov
mov
push
inc
ret
xlat
add
rorl
push
dec
ljmp
mov
cmp
lea
scas
pop
and
dec
mov
dec
ret
imul
mov
pop
imul
outsb
adc
mov
testb
jmp
leave
or
movsl
fstpt
and
and
mov
shll
loope
dec
pop
adc
dec
arpl
xor
add
or
ss
xchg
adcb
adc
sub
push
movl
cs
inc
dec
mov
fstpt
inc
jo
stos
mov
pop
mov
cld
pop
and
adc
pop
movsl
mov
cmp
movsb
sbb
fucomp
test
dec
dec
sbb
add
fs
mov
cld
mov
rcr
imul
andl
xchg
es
sub
mov
mov
ret
jno
cwtl
or
push
icebp
pop
inc
xchg
cwtl
lcall
mov
push
lods
adc
mov
mov
test
jecxz
pop
gs
push
bound
jno
test
shr
sbb
add
dec
mov
rcrb
add
jmp
mov
lcall
mov
push
pushf
std
call
mov
inc
add
add
movsb
int3
xor
repnz
add
or
stos
pushf
xor
and
or
mov
xchg
neg
stos
push
mov
insb
adc
test
pop
pop
mov
and
inc
add
shrb
mov
and
and
hlt
xor
loop
std
mov
mov
ret
ds
pop
mov
fnstenv
or
mov
xchg
dec
movsb
xchg
mov
xchg
mov
dec
je
ficoml
shrb
mov
cwtl
adc
repz
cmp
push
and
jge
addl
daa
icebp
xchg
std
push
enter
push
mov
adc
add
push
add
or
sbb
dec
in
shl
mov
shll
mov
ret
test
or
push
or
add
repnz
jle
repz
xchg
and
or
xor
aad
cld
ja
push
pop
pop
ret
add
movsb
ljmp
pop
and
xchg
pop
mov
les
repnz
test
pop
and
cmc
jg
add
ret
call
inc
push
xchg
cwtl
xchg
mov
mov
dec
in
punpcklwd
push
jp
lea
pop
sarl
and
or
daa
movsl
cmc
adc
xchg
idiv
add
call
shr
daa
and
jns
aaa
push
lods
hlt
pop
int3
sbb
xor
inc
xor
pop
dec
add
sub
pop
push
adc
push
mov
jle
movsb
icebp
mov
iret
icebp
push
or
out
pop
mov
dec
jo
cld
or
cld
dec
fs
inc
inc
inc
cmpl
xor
cmp
imul
lahf
push
dec
aas
mov
rcl
or
hlt
hlt
test
hlt
mov
jge
and
sbb
inc
adc
adc
or
jmp
stos
lods
or
rolb
dec
and
in
lods
add
adc
inc
clc
sbb
or
inc
sbb
mov
and
inc
int3
add
xchg
and
sbb
dec
push
and
dec
add
call
cld
and
adc
sub
cmp
push
je
mov
js
push
dec
mov
dec
xchg
mov
aam
shl
int3
adc
and
dec
or
xor
or
xchg
inc
and
inc
dec
pop
mov
mov
movsb
adc
shlb
inc
or
and
inc
and
and
dec
cmp
dec
cltd
push
je
cwtl
inc
jl
mov
enter
aam
clc
inc
faddl
mov
or
dec
shlb
sub
fs
or
push
xchg
cmp
pop
inc
fs
dec
and
mov
loop
mov
aam
lock
inc
cld
call
adc
sbb
mov
cmp
pop
dec
pusha
fwait
adc
dec
adcb
cwtl
mov
and
mov
pop
add
or
cltd
or
adc
dec
xor
dec
enter
pop
and
insb
mov
aaa
fs
mov
enter
inc
and
dec
pop
mov
mov
mov
xchg
and
dec
pushf
xchg
aam
in
sbb
xor
and
addb
lods
adc
shlb
dec
loopne
cld
and
ss
stc
or
dec
xchg
xor
pop
and
cmp
fs
mov
jl
and
jmp
dec
mov
in
mov
push
xor
inc
daa
popa
xlat
imul
or
ja
shlb
add
adc
sbb
adc
sub
push
or
jns
insb
push
inc
cmp
daa
inc
cmp
cmp
inc
cmc
push
cmp
inc
sub
ret
xor
cmp
pusha
pop
jne
mov
sub
jge
mov
or
test
jo
aaa
mov
and
sbb
jo
mov
insb
sub
cmp
xor
pop
les
xchg
imul
cmpsb
push
push
or
dec
push
pusha
pop
sbb
arpl
insb
outsb
test
jne
adc
dec
cmp
sahf
pop
push
inc
es
mov
and
push
sbb
mov
lds
ret
mov
int3
mov
iret
xor
int3
mov
cld
mov
mov
inc
mov
cltd
xor
pop
int
test
inc
xchg
rclb
scas
jo
cmc
adc
mov
stos
adc
adc
inc
in
scas
hlt
scas
sub
inc
and
in
shlb
and
sbb
jns
cmp
xor
push
cmp
sub
js
mov
outsl
mov
push
aam
mov
lcall
ret
jp
cmpsl
loopne
cmp
faddl
or
aas
in
aad
loop
sbb
adc
push
push
xchg
pusha
call
mov
je
and
lods
push
enter
pop
or
fwait
nop
lcall
in
adc
out
and
cmp
jo
inc
imull
mov
int3
or
jp
stos
push
adc
jl
push
sub
ja
add
jb
mov
dec
push
and
lret
inc
icebp
cmovs
xchg
xorb
mov
jbe
pop
jl
sub
loope
in
or
push
xlat
adc
adc
and
imul
cmp
imul
addr16
jecxz
adc
jp
loopne
mov
negb
push
insl
call
mov
jnp
sub
sub
mov
jle
je
dec
cmp
sbb
xchg
mov
sbb
adc
cmp
cmp
adc
repz
adc
or
lcall
push
pop
js
cmp
inc
je
das
push
inc
and
pop
cmp
mov
ret
gs
jb
or
sbb
jl
test
pop
leave
xor
clc
gs
mov
out
imul
lods
dec
xchg
jo
mov
or
mov
dec
cmpl
cmp
sub
mov
push
push
inc
call
mov
rol
jle
and
or
sahf
std
push
mov
cld
adc
inc
xchg
pop
xorl
sbb
jb
popa
sbb
inc
push
mov
cltd
push
and
xor
dec
pop
xchg
inc
adc
imul
inc
cmpsl
mov
lea
bound
and
xchg
clc
mov
or
lea
imul
sub
gs
les
in
sub
mov
xchg
and
mov
mov
adc
sbb
inc
sbb
or
rolb
cmp
mov
mov
and
ficoms
lock
sbb
rcrb
xor
sub
xchg
inc
add
or
xchg
adc
jb
cmp
push
inc
cs
jmp
xchg
adc
outsl
daa
pop
arpl
adc
jno
add
ret
xchg
sub
adc
hlt
push
adc
mov
sarl
daa
pop
jmp
push
sbb
push
icebp
mov
mov
sub
fistps
adc
into
mov
push
mov
push
dec
jns
jnp
sub
jne
shll
xor
jbe
fcomps
ret
lcall
add
cli
inc
mov
jl
scas
enter
sub
pop
rclb
adc
pop
push
push
sub
fs
mov
push
mov
or
sub
lahf
fidivs
out
ds
lcall
aas
push
push
shlb
pop
cmpb
jne
push
ficoms
adc
inc
add
inc
or
scas
push
push
test
scas
icebp
sub
cld
jge
fdivr
xchg
cli
pop
xor
mov
mov
add
clc
sbb
jge
jle
push
mov
mov
sub
sbb
dec
and
or
jg
push
xor
jo
cltd
dec
mov
hlt
loop
xchg
mov
addr16
adc
cld
pop
test
pop
cwtl
cmp
es
stc
pop
and
push
adc
stos
push
imul
push
push
test
insb
test
fucomip
mov
mov
test
mov
push
fadds
mov
jmp
divl
mov
mov
inc
xchg
mov
adc
repz
inc
in
sahf
inc
and
fwait
sbb
das
repnz
inc
adc
push
or
scas
mov
sbb
fldcw
pop
inc
arpl
push
or
xchg
lahf
and
fs
pop
mov
loope
cltd
xor
aam
cmp
sub
xchg
fnsave
cli
push
mov
call
dec
adc
mov
call
clc
test
ficompl
sbb
rcll
pop
js
and
mov
pop
sub
and
xor
jle
adc
filds
popf
lret
lds
push
mov
or
pop
inc
mov
push
addb
jno
mov
lods
jp
cmp
popf
stos
inc
fldl
fchs
adc
pop
or
stos
movsl
or
shll
scas
pop
or
fstps
mov
add
icebp
shrb
pop
and
xor
adc
loope
or
bound
cld
inc
mov
lret
jmp
enter
dec
in
lret
sub
sbb
cmp
enter
stos
inc
add
pushf
or
sbb
sub
bound
dec
idivl
jmp
mov
decb
imul
add
ret
sbbl
mov
mov
mov
popa
sbb
xchg
ret
jp
adc
cmp
mov
ja
call
xchg
pop
sub
fildll
push
ret
add
xchg
or
fnstenv
adc
scas
cmc
sbb
std
adc
adc
jge
add
mov
mov
push
mov
dec
xor
inc
push
movzwl
mov
and
arpl
mov
jo
xchg
sbb
sbb
sub
neg
sbb
and
mov
jge
in
inc
out
xor
pop
bound
mov
test
or
in
lret
clc
sub
inc
call
and
pop
adc
inc
lds
pop
xlat
dec
jmp
pop
xchg
and
adc
ja
dec
sbbb
sbb
or
sub
fiaddl
iret
xor
cli
and
les
std
cli
inc
adc
push
xchg
cmp
add
adc
add
arpl
daa
test
mov
and
test
cmc
add
cmp
in
push
add
jnp
mov
xor
sbb
add
adc
pop
and
movsb
jle
lea
add
outsl
xacquire
inc
mov
inc
arpl
lret
cmpsl
mov
loopne
or
pop
mov
call
and
or
pop
xchg
bound
clc
cmp
int3
inc
jno
bswap
cwtl
inc
dec
popa
ror
test
push
sbb
pusha
mov
sub
xor
sub
or
push
pusha
jp
push
sub
aam
push
ficoml
push
subl
loopne
mov
ret
andl
mov
add
cli
adc
ret
mov
add
or
adc
repnz
shlb
add
pop
call
cmp
test
jecxz
jp
ljmp
out
shl
xchg
int3
sti
notl
mov
test
jge
movl
mov
mov
pop
mov
in
stos
repz
adc
pop
jne
mov
mov
adc
cmp
cli
push
dec
fmuls
inc
and
sbb
lcall
and
mov
aad
push
lahf
sub
or
pop
push
clc
jmp
push
push
sub
mov
xor
shlb
inc
xchg
inc
mov
mov
xor
adc
mov
lods
rolb
dec
jno
xchg
xor
int
inc
pop
fstl
push
lahf
loopne
xchg
adc
pop
outsb
pop
pop
jbe
call
jge
dec
and
pop
add
mov
xor
jge
mov
pop
add
test
mov
and
jl
imul
jl
out
adc
data16
jg
inc
rcrb
jmp
scas
movsl
adc
test
jne
aaa
lea
pop
push
or
lea
mov
jno
and
daa
xchg
xchg
xor
jne
mov
imul
or
pop
sbb
pop
push
jl
sbb
or
and
pop
jbe
mov
pop
inc
sub
mov
mov
cmp
pop
inc
das
xchg
mov
pop
sub
xchg
add
push
xchg
call
outsb
cmp
sub
movsb
adc
cli
jge
ds
addr16
inc
dec
and
gs
lret
stos
or
push
jle
jo
loope
jmp
xchg
xor
cmc
adc
cli
and
pop
mov
xchg
mov
push
mov
stos
les
or
xchg
mov
outsb
or
je,pt
pop
jbe
lea
xor
mov
sti
rcll
push
xor
dec
sarb
jmp
jmp
std
inc
test
sub
or
test
mov
push
jmp
dec
pop
add
cmp
repz
addr16
sbb
cld
adc
xchg
pop
sbb
stos
stos
xlat
add
add
pop
mov
jbe
mov
lea
call
sub
add
sub
xor
jge
add
popf
bound
js
inc
mov
scas
daa
sti
add
cmp
sub
or
or
ja
sub
xchg
scas
fdivrs
xlat
pop
cld
pop
std
add
mov
stos
fdivs
int
popf
cmp
mov
and
add
push
adc
enter
inc
imul
or
scas
das
push
and
inc
push
adc
adc
mov
test
add
mov
mov
lcall
fidivrs
je
lcall
xchg
rclb
int3
jb
sbb
mov
push
xchg
pop
push
or
lds
xor
scas
xchg
mov
adc
push
test
call
jmp
cmp
cli
pop
loope
dec
std
pop
add
and
loop
push
sbb
repnz
daa
aam
ficoml
xchg
icebp
sbb
adc
sarb
fiaddl
add
push
cli
cli
enter
push
xor
and
cmp
out
in
dec
fidivs
aam
jmp
xchg
adc
rcll
xor
pop
cmc
out
call
cmpsl
sub
xchg
mov
js
ljmp
data16
adc
jae
shr
pop
scas
mov
push
ret
jne
sub
adc
sub
fisttps
push
addb
sub
test
test
jge
and
testl
insb
test
cs
icebp
push
or
ficoms
lds
sub
mov
or
mull
mov
and
adc
push
ret
ret
dec
pop
icebp
xchg
mov
adc
rorl
sbb
push
inc
sub
fsts
lret
test
inc
int
dec
mov
stos
sub
in
repz
dec
stos
pop
jl
jmp
or
in
mov
push
inc
adc
jle
or
daa
aaa
jbe
out
lods
inc
inc
and
mov
movsl
and
stos
mov
cmpsl
cmp
cmpsb
jmp
pushf
in
jns
les
or
jnp
and
mov
repnz
and
xchg
and
xorl
mov
outsl
imul
std
and
push
sub
jl
inc
and
push
xor
insl
push
adc
lods
test
in
xor
pushf
sahf
aad
cmp
aam
jne
and
adc
xor
mov
fmuls
aam
jg
ljmp
mov
adc
stos
dec
push
je
xlat
dec
ljmp
and
or
or
and
or
popa
cmp
xchg
ljmp
stos
daa
out
or
mov
adc
adc
iret
dec
xor
dec
out
cltd
lods
outsb
mov
jecxz
je
xchg
lock
and
data16
sub
cmpsl
sbb
js
cmp
nop
jecxz
pushf
sub
adc
adc
lock
jne
cmp
push
icebp
loope
lds
std
mov
mov
repnz
lahf
add
popf
movlps
and
cli
mov
cs
mov
pop
push
dec
cld
mov
pop
jmp
sarb
mov
push
rcll
ret
cmp
or
push
js
push
xchg
or
sbb
add
pop
movl
je
jno
pop
outsl
mov
inc
adc
shll
je
xchg
adc
mulb
sbb
add
call
insl
xchg
pop
push
jp
cmp
loopne
out
sarl
sbb
ja
loope
push
pop
div
add
mov
pusha
inc
or
out
sbb
sbb
push
pop
or
push
push
add
xor
or
sti
inc
mov
icebp
jb
in
and
jge
fsubr
adc
push
ljmp
rorb
sub
mov
pop
sti
adc
testb
pop
stos
sub
in
and
rorb
push
pushf
je
mov
sub
push
push
mov
xor
cmp
cmpsb
jp
and
dec
imul
outsb
mov
mov
xor
or
aad
inc
push
push
call
sbb
test
nop
cwtl
sub
cltd
pop
mov
lcall
sbb
adc
add
cltd
mov
stc
ljmp
cli
pushf
and
fildll
jnp
sbb
and
add
cmpsb
cmp
sbb
cmp
or
notl
es
in
out
pop
enter
pop
test
add
out
sub
pop
enter
pop
and
xchg
mov
aam
repz
dec
insl
xchg
lods
mov
adc
pop
mov
testb
jle
hlt
xlat
dec
or
adc
mov
and
inc
inc
rol
std
mov
cli
cwtl
push
xor
sub
ret
pop
out
or
add
cmp
cltd
in
test
jmp
xor
and
sti
mov
or
add
imull
test
cwtl
ret
hlt
or
dec
mov
iret
std
xorb
mov
add
and
imul
cltd
lds
sub
adc
arpl
pop
inc
push
data16
add
xchg
or
stc
andb
inc
mov
call
jne
xor
or
cmp
add
adc
dec
and
push
mov
pop
push
bnd
fdivl
sbb
and
pop
fcmovne
cmp
cmp
lock
fsubrl
js
stc
jg
sbb
fs
mov
xlat
ss
or
push
add
jp
or
or
push
or
jecxz
arpl
or
sbb
dec
fmull
push
fmulp
sub
or
in
inc
out
sub
rclb
or
dec
push
jg
add
pop
or
jl
dec
push
outsb
adc
xchg
or
and
inc
ret
lahf
cmp
xor
gs
adc
sub
fcompl
mov
mov
adc
loope
leave
mov
in
cmp
inc
loope
lods
sub
ljmp
jns
xchg
push
adc
orl
xchg
arpl
dec
aas
shlb
outsl
fcmovu
pop
mov
cmp
or
mov
fldl
sub
ja
xlat
sub
rorb
test
ror
mov
pop
hlt
mov
pop
mov
add
adc
inc
jnp
inc
or
test
or
and
in
sbbl
sbb
roll
inc
sub
mov
jp
stos
adc
jo
jne
mov
outsb
hlt
or
loopne
jns
push
adc
add
dec
xchg
int3
pop
inc
adc
pushf
pop
jp
or
dec
jne
dec
jmp
imul
jg
xlat
sti
test
pop
xchg
bound
mov
cmp
test
decb
and
out
leave
popa
movsl
inc
into
les
push
cltd
mov
fwait
sub
and
cmp
sbb
adc
xchg
sbb
adc
packssdw
sbb
cmp
nop
adc
cmp
lds
add
cmpps
int3
ss
adc
cmp
add
stos
or
clc
add
cltd
or
xor
pop
loope
mov
add
adc
aas
pop
clc
subl
cmp
les
nop
rcrb
dec
cmp
or
sahf
inc
ds
jle
push
mov
mov
ds
adc
sarl
fldl
scas
dec
pop
push
ljmp
dec
inc
xchg
xchg
sbb
enter
push
push
mov
ds
add
inc
loopne
mov
adc
and
push
and
out
or
mov
or
jmp
orl
andb
rorb
insl
in
fsubrs
ret
leave
inc
fsts
mov
mov
icebp
pop
xchg
cmpsb
ds
jae
lock
pop
push
iret
out
punpckhbw
call
movsb
mov
pop
cmp
and
out
or
push
outsl
dec
incb
or
xchg
push
pop
jbe
and
or
cmp
clc
or
push
push
or
jns
mov
ss
sbb
add
jg
jg
cmp
and
push
cmp
jmp
loope
jne
mov
test
xor
in
jae
or
pop
movsb
inc
or
test
pop
xchg
movsl
ljmp
aam
push
dec
add
fidivrs
les
enter
lea
pusha
shrl
adc
jne
fstps
scas
adc
loope
or
int
xor
adc
jno
clc
push
or
sbb
fmull
adc
pop
mov
lea
lcall
lret
push
lds
je
nop
push
das
rcrl
lods
lret
cmpsb
push
adc
gs
dec
insl
adc
rcrb
push
test
arpl
sbb
aas
jns
pop
jbe
or
sub
add
orl
test
out
cmpsb
sbb
je
inc
and
mov
jmp
mov
jecxz
in
fisubs
push
cmpb
pop
jae
mov
ljmp
pop
jmp
aaa
orb
scas
add
add
xlat
int3
cmp
xor
movsb
lods
sti
adc
pop
pop
stos
xlat
loopne
xchg
divl
push
aam
lods
inc
ljmp
sbb
cmp
jl
pop
and
push
adc
ss
stos
pop
adc
loopne
cmp
mov
adc
jmp
pop
ljmp
decl
mov
into
cs
aas
dec
sarb
mov
jmp
push
xchg
pop
sub
cmp
lds
mov
pop
cmp
adc
mov
ficoml
and
mov
inc
jne
and
and
sbb
cld
das
inc
outsl
sbb
out
shll
inc
js
addr16
and
lods
push
and
mov
push
cltd
mov
jge
rcl
pop
or
in
ret
dec
sahf
jmp
dec
nop
cmp
xchg
jne
cmpb
insb
clc
pop
in
bound
gs
sub
arpl
xor
scas
lcall
scas
push
or
pop
xor
leave
xchg
mov
leave
stos
push
das
and
xchg
dec
push
or
push
sbb
dec
push
mov
dec
rorl
and
adc
mov
sub
xor
push
test
push
mov
add
pusha
cs
push
push
lods
jb
fucomp
push
xchg
sub
cld
fildl
mov
imulb
test
stc
or
push
out
pop
movsb
jnp
xor
fmuls
push
gs
int3
jmp
adc
xor
mov
mov
stos
fstps
or
or
push
testb
loop
jl
adc
adc
in
and
pop
push
or
sbb
pop
pop
or
jnp
gs
adc
jmp
divb
outsl
aas
scas
popa
jne
orl
sub
popf
not
push
add
push
jmp
fnsave
insb
and
add
ficoml
scas
js
jne
jp
jbe
dec
pop
mov
jns
add
clc
push
jmp
fldl
ret
lcall
testb
xor
push
fidivrs
xor
xchg
mov
push
add
mov
xchg
arpl
xor
dec
mov
jge
rcrl
daa
push
cld
jb
dec
sbb
sbb
es
xor
jge
cmp
bound
cmpsb
sbb
cmp
pop
cmp
movsb
sbb
dec
mov
inc
push
push
stos
in
mov
mov
dec
setbe
cmc
adcl
mov
imul
and
add
cld
fnstcw
addr16
fnclex
ficomps
adc
loopne
inc
hlt
or
cmp
insl
jne
xor
ds
fisttpll
sahf
popa
clc
fildll
xor
frndint
xchg
sbb
and
fistpl
cld
movsl
adc
sbb
movsl
sub
push
xchg
stos
inc
pushf
fildll
out
mov
mov
mov
jle
pop
fbstp
fwait
adc
mov
loop
data16
inc
sub
icebp
mov
push
clc
fmulp
dec
jmp
cltd
xor
sub
or
or
inc
cmp
sbb
xchg
jg
outsb
mov
add
cmp
pop
fcomps
sub
mov
jmp
or
out
and
cmp
mov
fstl
cwtl
xor
and
in
les
dec
adc
inc
xor
push
sub
cwtd
mov
div
decl
in
adc
push
push
hlt
insl
mov
or
ror
cld
bswap
pop
add
sub
addr16
aad
inc
add
mov
inc
stos
and
inc
xchg
and
test
and
jns
je
outsl
and
or
inc
pop
and
push
mov
and
cmp
xor
adc
mov
pop
and
adc
or
push
adc
test
decb
inc
repnz
adc
and
adc
or
test
and
adc
mov
inc
shlb
adc
lods
and
inc
cwtl
and
test
and
jp
jne
jo
imul
or
inc
pop
and
push
mov
dec
and
or
test
and
adc
mov
adc
or
test
and
adc
mov
xor
clc
adc
mov
inc
jmp
or
test
and
adc
mov
inc
shll
adc
lods
and
inc
cltd
and
inc
test
adcb
mov
jno
insb
adc
bound
push
mov
dec
and
or
test
and
adc
mov
inc
and
sbb
pop
or
test
and
adc
test
cld
dec
stc
inc
hlt
and
adc
or
test
and
adc
mov
inc
int3
and
adc
or
mov
scas
mov
adc
nop
and
inc
jl
ja
jb
insl
test
and
pop
mov
push
and
dec
or
inc
inc
and
adc
mov
inc
sub
daa
adc
or
adc
push
mov
inc
add
aam
dec
cli
inc
cmc
and
adc
or
test
and
adc
mov
inc
int
enter
mov
mov
scas
mov
adc
xchg
and
jge
js
jae
outsb
test
and
mov
push
and
dec
or
inc
inc
and
aaa
mov
inc
sub
or
test
and
js
or
cli
nop
testb
adc
or
test
and
adc
mov
inc
les
mov
test
and
inc
pushf
and
test
and
inc
je
outsl
adc
test
and
push
mov
dec
and
inc
or
xor
mov
inc
and
pop
adc
or
or
push
mov
inc
cld
stc
and
and
adc
or
adc
or
test
and
adc
mov
inc
lds
rclb
or
lods
adc
and
test
and
jne
jo
imul
test
and
mov
dec
and
inc
or
test
and
das
mov
inc
and
or
test
and
pop
mov
inc
std
clc
cs
mov
inc
out
and
adc
or
test
and
adc
mov
inc
and
adc
and
inc
sahf
and
test
and
inc
jbe
jno
insb
or
inc
bound
pop
adc
push
inc
dec
and
inc
or
test
and
inc
and
adc
pop
test
and
inc
mull
and
adc
or
test
and
adc
mov
inc
shll
int3
adc
or
test
and
inc
test
or
nop
adc
and
or
inc
insl
and
arpl
push
adc
dec
test
and
cmp
sub
daa
or
test
and
adc
mov
inc
or
add
ljmp
lock
test
and
adc
mov
inc
shlb
int
enter
inc
mov
mov
adc
xchg
and
inc
andb
adc
jae
inc
outsb
and
mov
pop
and
push
or
inc
inc
and
cmp
aaa
inc
xor
sub
test
and
adc
cmove
and
cmc
pop
call
adc
or
test
and
adc
mov
inc
leave
and
adc
mov
mov
stos
mov
adc
lea
mov
orl
adc
push
inc
and
pop
mov
push
and
or
inc
cmp
mov
inc
sub
and
pop
or
test
and
adc
mov
inc
add
cld
hlt
adc
adc
or
test
or
test
and
adc
mov
inc
lret
adc
or
mov
lods
mov
adc
mov
mov
test
jne
jo
imul
mov
push
and
dec
or
inc
and
adc
das
inc
sub
and
test
and
adc
pop
inc
add
std
repz
adc
and
adc
or
test
and
adc
mov
inc
lret
and
adc
or
adc
and
test
and
inc
jnp
jbe
jno
insb
test
and
pop
mov
push
and
dec
or
aas
and
adc
and
adc
or
inc
pop
and
adc
and
repnz
adc
or
test
and
adc
mov
inc
and
adc
or
test
and
inc
scas
and
test
and
inc
xchg
adcl
inc
jb
insl
adc
arpl
pop
adc
test
and
inc
mov
inc
and
adc
daa
test
and
inc
push
and
adc
cmc
icebp
adc
adc
or
test
and
adc
mov
inc
xlat
and
adc
or
test
and
inc
scas
and
test
and
inc
xchg
adcb
or
inc
jae
outsb
adc
fs
pop
and
push
or
inc
dec
and
inc
mov
aaa
and
adc
and
push
adc
mov
mov
adc
lock
or
adc
or
test
and
adc
mov
inc
into
and
adc
or
mov
mov
stos
inc
cmpsb
and
test
and
inc
jle
jns
je
outsl
test
and
pusha
mov
push
and
dec
or
inc
inc
and
inc
and
adc
pop
test
and
inc
push
and
adc
out
mov
or
test
jnp
inc
jecxz
ficoms
lret
or
test
and
inc
cmpsl
and
test
and
inc
jg
jp
jne
jo
inc
imul
adc
pop
inc
push
and
dec
or
inc
inc
and
adc
mov
das
and
adc
sbb
push
adc
mov
pop
and
adc
out
mov
or
test
or
test
and
adc
mov
inc
shlb
lret
adc
or
test
and
inc
test
mov
test
and
inc
andb
adc
jno
inc
insb
and
bound
push
adc
dec
test
and
adc
mov
adc
or
test
and
adc
mov
adc
in
mov
or
test
and
adc
mov
inc
adc
or
test
and
adc
and
test
and
inc
mov
xchg
orl
and
insl
mov
arpl
pop
adc
push
test
and
inc
mov
cmp
adc
or
inc
daa
and
adc
and
adc
or
cli
in
mov
or
test
and
adc
mov
inc
fsubl
xlat
adc
or
test
and
adc
and
test
and
inc
mov
xchg
orb
test
and
outsb
mov
and
pop
or
inc
push
and
inc
mov
cmp
aaa
adc
or
and
push
mov
inc
adc
movups
or
inc
jmp
test
and
adc
mov
inc
frstor
fcoms
rcll
and
mov
lahf
adc
dec
or
adc
or
mov
fmull
inc
or
imul
in
mov
sub
ljmp
dec
shll
fstcw
outsb
sub
sub
sbb
fmulp
jno
fdivs
xor
enter
or
sub
and
les
xor
push
loope
and
fs
enter
repnz
adc
testb
mov
mov
or
lsl
pop
ret
test
xchg
pushf
data16
add
inc
pushf
pop
das
ret
sahf
shrl
arpl
mov
or
cltd
mov
xor
movsw
leave
xchg
fmuls
dec
rcr
out
inc
ret
sahf
mov
add
scas
lret
push
push
mov
movsb
mov
cli
sbb
mov
xchg
inc
xchg
rolb
sub
push
lods
fisubl
cmpsb
repnz
icebp
mov
or
sar
lret
lret
lret
or
stc
pop
jnp
adc
aam
xchg
sarb
sub
jo
lods
pop
test
inc
or
or
rorb
xor
in
cmp
jb
mov
or
xchg
mov
or
jne
cmp
dec
jae
ds
dec
xchg
addr16
mov
or
sub
aad
sbb
jne
add
lds
div
xor
sub
sbb
inc
jb
out
outsb
pop
loopne
dec
add
sbb
xor
sub
repz
push
outsb
push
pop
lcall
add
pop
inc
out
sub
sbb
loop
and
add
ret
dec
add
adc
in
jae
push
aas
fildl
ja
popa
sbbb
mov
or
pop
je
cmp
dec
jb
shr
mov
sub
add
cmp
ja
cmp
add
mov
aaa
xchg
jb
in
aaa
sbb
sub
nop
push
push
add
pusha
sbb
js
add
xchg
or
in
mov
xorl
add
ret
aaa
test
add
cmpsl
dec
mov
adc
mov
lods
cwtl
adc
mov
mov
lret
jg
ret
les
adc
add
cmp
cmp
adc
or
sbbl
ret
ja
in
add
pop
pop
call
jg
fnstcw
jg
jp
or
je
xorl
cli
add
sti
das
or
pop
mov
cmp
div
mov
js
or
jne
add
jns
pop
mov
add
mov
ja
or
out
cmp
movnti
sbb
rorb
je
sub
movb
ds
mov
ja
mov
leave
js
cmp
push
cwtl
jb
pop
in
dec
loopne
decb
in
add
outsl
and
cwtl
xor
inc
or
inc
or
mov
or
add
inc
mov
cmp
xchg
imul
pop
or
xor
sub
push
popf
je
pop
je
sub
jl
xor
sbbl
xor
or
adc
negb
mull
mov
mov
ret
test
jbe
jne
lcall
sbb
add
ret
or
xchg
out
fstl
loope
fisubrl
lea
jmp
sub
jne
sbb
xchg
outsb
add
outsl
int
pusha
jmp
sub
fwait
pop
dec
mov
pusha
in
imull
lds
adc
or
shr
pop
enter
xchg
insb
mov
push
nop
mov
cmp
stos
lret
or
enter
lea
shrb
mov
fcoms
lret
je
stos
xor
pop
adc
in
xchg
mov
mov
ds
jns
in
or
push
mov
cmp
push
adc
sub
imul
sbb
shl
jmp
cs
mov
add
jmp
cwtl
cmp
out
or
sti
scas
push
sbb
outsl
pop
dec
dec
mov
es
xor
adc
xchg
cli
test
cmp
mov
add
aad
push
or
xchg
mov
movb
fisttpl
nop
aas
ja
movsb
sub
imul
or
cltd
push
add
xor
cli
sbb
pop
inc
or
adc
rorl
add
rdmsr
xchg
sub
mov
mov
mov
ror
mov
sbb
cmp
or
ja
pop
add
xor
jge
jmp
imul
push
fs
aaa
or
sub
jne
dec
and
out
pusha
or
fdivr
and
sbb
cmp
cld
rcrb
or
out
shlb
jg
movl
adc
je
mov
mov
adc
ljmp
sbb
xor
fs
stos
sub
or
add
and
push
inc
lods
and
push
mov
xor
fdivl
mov
jb
mov
jmp
mov
int3
push
inc
out
xor
mov
cmp
dec
fucomi
neg
fs
sbb
inc
pop
or
jmp
pop
pop
adc
shll
rolb
push
stc
fcmovne
inc
int
pop
pusha
in
xorl
jne
je
dec
popf
or
cli
xor
xchg
and
push
push
mov
jae
lock
jecxz
mov
jbe
mov
mov
sbb
repnz
aad
pop
add
bnd
pop
push
and
adc
ror
dec
mov
jmp
enter
jmp
stc
mov
dec
inc
movsl
sahf
inc
xchg
sahf
aad
xchg
mov
adc
push
and
push
jg
outsb
leave
push
call
cli
jbe
add
sub
inc
stc
in
jne
xor
test
imul
or
xor
xor
add
jge
mov
ljmp
movsb
sub
cmpsl
rclb
mul
test
adc
std
lds
call
pusha
repz
sbb
pop
sti
cmp
cmp
pop
mov
pushl
or
mov
add
push
push
mov
mov
cmp
addr16
cmp
sbb
fcoms
sbb
mov
or
add
dec
and
insb
inc
adc
adc
and
in
or
push
jnp
push
je
or
cmpsb
or
int3
jns
fldt
shl
jb
cmp
and
aam
jmp
out
pop
or
and
sbb
ret
mov
pop
mov
orb
sbb
enter
movsl
jmp
push
scas
jbe
dec
mov
jne
int
xor
xchg
pop
xor
ret
clc
cwtl
fwait
pop
out
xor
cmp
icebp
je
lcall
and
popf
sbb
sub
rorb
or
or
mov
push
xor
xor
dec
sub
mov
jne
dec
jno
sub
pop
sbb
cwtl
movsl
or
adc
fdivrl
xor
out
pop
adc
jae
and
inc
add
inc
push
or
movsb
ret
filds
data16
mov
cltd
xor
sahf
xchg
mov
add
adc
cmp
test
hlt
xchg
and
jecxz
mov
xchg
mov
enter
adc
or
mov
push
pop
or
insb
and
arpl
pop
mov
test
gs
inc
sahf
mov
sbb
test
and
adc
xlat
shlb
xchg
shll
std
les
nop
vmovlps
cmp
test
push
xlat
call
pop
test
sbb
mov
movsl
sbb
mov
testl
adc
xchg
sub
inc
or
xchg
in
push
sub
sub
test
and
iret
jae
push
sbb
loope
jbe
adc
leave
push
or
pop
lock
into
push
pop
xlat
decl
pop
sbb
and
movsl
ret
das
popf
push
cmp
inc
push
pop
and
outsl
loope
ja
inc
and
dec
pop
mov
fs
or
or
adc
pop
repz
scas
cltd
jecxz
dec
fninit
dec
fsubs
cld
pop
lret
scas
leave
inc
inc
mov
mov
or
lret
jle
loop
std
mov
xchg
shrl
mov
loope
lea
call
pop
rorb
loope
enter
or
call
cli
adc
rcrl
xchg
pop
push
mov
dec
pop
out
das
push
jbe
movsb
imul
inc
outsb
or
or
js
mov
jb
out
lret
push
adc
in
int3
ds
movsl
or
jg
neg
jmp
or
sarb
adcl
or
mov
or
push
movsbl
add
pop
clc
pop
jne
inc
sbb
into
adc
jmp
popf
or
push
push
push
adc
cs
mov
pop
jp
mov
mov
ljmp
add
test
sub
push
mov
lods
rcl
cli
push
ret
pop
inc
push
clc
notb
sbb
push
bound
inc
cmp
jge
inc
aam
test
sbb
outsb
fwait
pop
and
sbb
sbb
sbb
xor
jne
mov
insb
adc
cs
xchg
lret
shr
popf
fstps
shlb
push
lock
in
enter
out
shll
cmp
push
ja
xchg
mov
xor
es
jne
dec
ficoml
add
aad
lods
stos
xor
fwait
or
ja
adc
jl
xor
mov
inc
sbb
push
pop
loop
shr
dec
fildl
fs
adc
inc
or
mov
sub
sbb
adc
push
xchg
pop
push
rcl
mov
push
cmp
bound
ds
cmc
scas
cmpsl
pop
xchg
mov
push
ret
push
lea
adc
add
xchg
sub
les
xchg
adc
jmp
rcll
adc
decb
ret
inc
dec
mov
push
shlb
sbb
les
sahf
mov
inc
sbb
inc
adc
dec
jns
sub
dec
shl
sbb
push
push
outsb
outsl
shlb
and
dec
adc
adc
negb
mov
jge
or
popf
dec
vmwrite
push
ljmp
jl
enter
mov
stos
iret
adc
js
or
icebp
push
les
sbb
std
adc
dec
dec
int3
sub
dec
dec
jne
mov
mov
or
push
push
jbe
xorl
mov
sbb
mov
or
adc
cwtl
push
inc
push
jge
xchg
jmp
test
test
sbb
outsb
or
out
movsb
and
mull
push
jmp
push
ja
xchg
push
femms
call
push
jmp
push
mov
mov
shll
dec
or
call
sub
test
ret
cmc
lret
dec
jmp
das
or
mov
arpl
sub
cltd
sbb
push
or
or
inc
or
cmp
mov
test
inc
mov
les
repz
sbb
js
sub
cmpb
xchg
mov
out
dec
clc
push
leave
imul
add
je
lcall
and
fsubr
popf
push
lahf
mov
push
std
sub
fmuls
mov
fcoml
or
or
or
mov
mov
mov
push
xchg
test
popa
jge
add
mov
push
or
adc
and
push
test
inc
pushf
mov
cwtl
cli
xor
stos
push
xor
rcrb
pop
in
fsubrp
xchg
daa
lea
cmpl
cmp
push
push
js
cmp
sub
mov
jmp
aas
sahf
dec
popf
xchg
in
stc
nop
out
test
xchg
adc
and
mov
inc
or
jmp
ja
and
pop
push
test
pop
xor
mov
mov
and
push
add
je
into
adc
cmp
fimull
test
inc
or
jecxz
dec
sahf
mov
mov
dec
sub
movsb
cmp
jecxz
es
jne
pop
sti
mov
inc
shrb
push
dec
xchg
jb
insl
cmpsb
or
cmp
push
loope
mov
mov
push
xchg
inc
inc
xchg
xchg
mov
add
add
jae
jb
or
mov
movsb
and
rorb
shrb
or
inc
mov
in
fnstcw
aaa
push
adc
add
jge
movl
out
lcall
sbb
les
mov
adc
push
inc
dec
or
imul
jg
das
xor
jmp
popa
movsb
add
mov
sbb
lds
dec
cmp
jbe
jbe
inc
sahf
arpl
icebp
jmp
inc
mov
sub
imulb
jg
add
adc
adc
dec
and
sbb
pop
inc
push
jo
dec
enter
push
or
lahf
test
and
fisttpl
cmpl
or
std
push
sbb
pop
xchg
jle
add
mov
mov
decl
in
aaa
xchg
push
popf
nop
xchg
push
or
aaa
leave
out
ret
fwait
mov
nop
rclb
push
mov
pop
mov
push
gs
scas
dec
push
push
mov
mov
bound
xchg
dec
stos
adc
inc
js
mov
mov
lds
int3
push
mov
sbb
test
ss
sub
aam
fbld
out
adc
inc
xor
fcompl
xchg
pushf
inc
shrb
cmc
mov
jo
aam
inc
push
push
fwait
jo
inc
sbbl
lods
push
dec
mov
or
jmp
xlat
adc
mov
push
and
test
push
mov
mov
and
mov
outsl
mov
mov
push
cmp
sbb
dec
jne
inc
push
rcrb
or
pop
sub
mov
sub
or
lea
add
push
jmp
mov
cmpb
je
jnp
jns
jno
daa
or
cwtl
das
inc
std
sarl
popa
imul
adc
ljmp
adc
je
xchg
cwtl
aaa
xlat
jo
cmp
scas
lea
je
add
jmp
mov
jne
lods
mov
aam
outsl
popa
lret
jae
jmp
das
and
ja
testb
add
mov
adc
test
adc
popf
xorl
adc
scas
adc
rcrb
xchg
mov
in
nop
in
gs
or
mov
nopl
std
mov
jmp
dec
xchg
mov
inc
rolb
adc
aaa
popa
adc
adcl
or
and
xchg
roll
imul
push
sahf
push
mov
add
jmp
jno
in
jae,pn
adc
cmp
enter
out
jmp
xchg
test
add
cmp
jo
fisttps
test
pop
xchg
push
jle
pop
jmp
andl
popf
jl
in
xor
xor
jmp
cmp
mov
pop
in
and
rorb
push
or
jp
outsb
adc
mov
mov
mov
jg
sbb
add
je
hlt
addb
lcall
ljmp
movsl
xorl
push
xorb
je
movsb
int3
in
cmpl
add
sub
mov
push
or
loop
or
pusha
and
nop
cvtps2pi
mov
or
cmp
out
add
pusha
ret
icebp
lret
test
nop
test
pop
sbb
and
sub
fldcw
psubw
adc
cmp
and
dec
sbb
test
arpl
pusha
aad
jmp
or
je
cmpb
lock
adc
mov
mov
mov
cmp
add
xchg
push
xchg
jns
add
jmp
sub
inc
xchg
repnz
or
jg
or
cmp
or
shl
mov
lcall
jg
jne
ret
roll
ja
out
gs
pop
dec
lods
decl
call
mov
add
inc
add
lock
pop
sub
test
inc
xchg
pop
lods
jmp
or
xchg
push
in
mov
push
sub
fsubs
hlt
and
call
push
sbb
scas
nop
cli
jl
jmp
or
popa
or
jmp
or
push
test
push
paddd
ret
mov
or
add
pop
std
add
cld
dec
add
aaa
sbb
dec
and
xor
subb
cltd
mov
mov
data16
add
cli
ja
push
or
jmp
sbb
sub
sub
sbb
pop
mov
xchg
pop
lcall
or
andl
outsl
or
pop
or
inc
xor
sub
adc
xchg
xor
bndstx
push
subl
les
dec
test
loop
or
test
ret
dec
inc
divl
dec
push
jmp
repz
sbb
push
enter
mov
movsb
jns
adc
imul
xor
xor
and
mov
and
fwait
mov
dec
sti
fmull
sub
in
inc
cmp
sbb
rolb
popf
mov
out
jmp
lea
and
jle
dec
fucomip
cwtl
and
aad
push
imul
fldl
hlt
jmp
gs
jmp
xchg
adc
imul
test
iret
push
call
mov
sbb
adc
add
call
or
or
orb
and
daa
sub
mov
icebp
je
int
pop
insb
icebp
stc
in
mov
dec
pop
jl
cmp
xchg
sbb
cmp
cmp
lahf
popf
imul
or
fs
mov
lahf
cmp
lret
andl
xchg
rclb
es
or
shll
fistps
xor
and
dec
mov
sahf
lods
test
mov
xor
or
cmp
push
nop
mov
imul
adc
xlat
push
sub
mov
scas
dec
jb
std
enter
xchg
inc
mov
stos
sub
or
mov
mov
jge
sar
mov
leave
test
cmp
jno
pop
or
shrl
mov
and
pop
jne
test
add
and
push
push
sub
rep
filds
sub
sub
call
add
pushw
movsbl
push
mov
xor
xor
pop
dec
jne
inc
inc
sbb
xor
add
adc
jl
test
add
push
gs
sbb
xchg
inc
inc
jmp
sbb
add
je
inc
leave
ja
cmp
test
mov
imul
jge
push
or
lcall
movzwl
push
inc
pop
add
cltd
push
movsl
jl
xchg
or
xchg
hlt
push
dec
ret
dec
dec
add
add
xor
push
or
and
popa
mov
inc
test
push
lods
add
iret
cmp
jge
jmp
jl
es
addl
adc
mov
stos
xor
sub
adc
push
add
xor
adc
sbb
dec
push
or
imul
dec
mov
sbb
test
inc
pop
or
mov
add
and
out
inc
push
adc
int
inc
stos
push
inc
in
jo
hlt
xor
sub
xchg
pop
cwtl
sbb
loope
aas
sbb
push
loop
jo
inc
xor
adc
push
dec
sqrtps
and
and
mov
clc
cli
cmpsl
imul
xor
lods
cmpsl
clc
inc
cli
repnz
cld
cli
outsl
jmp
xor
ds
push
sbb
test
cmpsb
mov
movsb
xchg
xor
clc
icebp
arpl
inc
je
sub
jno
mov
fildl
pop
xchg
sub
dec
adc
jno
stos
cmp
pop
scas
push
push
mov
push
add
loopne
push
subl
sub
test
je
cli
sub
std
lods
ret
push
hlt
data16
and
aas
call
lods
aas
adc
loope
push
xor
arpl
sub
mov
xor
push
test
dec
mov
pop
pop
ficomps
fs
add
push
xchg
ds
jno
mov
fimuls
dec
and
push
inc
push
ret
mov
push
add
inc
mov
mov
sbb
mov
push
call
outsl
inc
push
dec
insb
aaa
dec
jae
or
out
mov
fsubr
mov
inc
clc
out
mov
mov
adc
push
or
shrl
mov
ret
cmpw
jne
push
push
mov
imul
mov
xor
pushf
push
lea
movsl
add
mov
xchg
add
out
and
or
inc
sub
cld
or
cltd
pop
testl
pop
int3
icebp
add
sub
jmp
ret
push
rcrb
insl
imul
push
or
push
jbe
push
adc
xchg
xor
mov
nop
hlt
jbe
sbb
and
or
sub
or
gs
aad
scas
pop
test
pop
or
cmpb
ja
or
push
xor
or
and
xor
fcmovnb
sub
loopne
call
add
cmp
xchg
das
les
aad
sub
repz
pop
fucompp
out
les
pop
das
paddusb
pop
cmp
inc
mov
mov
jp
movsb
lret
lea
push
out
add
sub
mov
insl
add
sbb
inc
add
or
ds
lahf
or
dec
or
sarb
jmp
dec
dec
xor
or
sbb
cs
pop
nop
out
sub
inc
mov
bound
sub
push
cmp
push
ret
icebp
or
mov
pop
pusha
dec
jbe
clc
imul
add
adc
cmp
lea
and
negb
je
add
fs
aaa
lahf
movsl
sbb
jmp
data16
jge
sbb
repz
jmp
add
push
adc
mov
and
cmp
pop
lea
mov
mov
imul
mov
in
mov
adc
jge
repz
out
push
fwait
outsl
xchg
scas
pop
push
push
mov
pop
pop
lea
andb
call
es
xor
bound
bound
lock
sbb
ds
mov
popf
cld
pushf
dec
jo
push
dec
pop
mov
sbb
call
sub
in
push
pop
pop
enter
push
or
inc
sbb
adc
je
ret
arpl
push
loope
test
fwait
ret
sbb
xor
aas
dec
out
into
and
lret
or
clc
sarl
mov
xor
testl
or
cmp
cmp
stos
fidivrl
cs
data16
lahf
push
pop
nop
hlt
mulb
mov
dec
jne
pop
push
and
push
pop
enter
stos
mov
out
mov
loope
fbstp
lods
inc
jge
jge
adcl
mov
cmpsb
xchg
adc
inc
outsl
movsl
dec
test
xor
xchg
popf
std
das
inc
fbld
push
mov
rcr
pop
test
sbb
xchg
inc
adc
testb
and
sub
les
cltd
mov
push
ja
adcb
ss
cmp
orb
test
mov
jmp
jmp
imul
and
cmp
cmc
xor
fsubrs
xor
das
scas
jae
xor
ds
mov
xchg
push
adc
or
mov
aam
add
jmp
cmpl
arpl
gs
sub
push
pop
gs
sub
dec
cmpsl
jl
adc
mov
jnp
push
lret
sbbb
daa
dec
mov
inc
ljmp
pop
pop
ficoms
mov
loope
shrb
out
dec
data16
cs
dec
push
xor
sti
jmp
jnp
daa
cs
mov
push
sub
cmp
loopne
lret
jmp
sbb
fnstenv
xchg
add
loop
add
push
xchg
pop
pop
dec
adc
push
jne
jmp
push
cwtl
outsl
arpl
cmpl
aaa
mov
jp
bound
xor
inc
cld
aas
lds
xchg
add
adc
add
xchg
adc
clc
nop
loope
jmp
push
xor
push
mov
ret
daa
xor
mov
repz
bound
mov
orb
xor
mov
push
daa
daa
ljmp
and
and
fbld
das
stos
sub
jecxz
mov
mov
adc
xor
sahf
or
lea
sub
cli
outsb
xlat
or
inc
jmp
call
ljmp
mov
cmpsl
or
add
and
mull
adc
dec
sub
pop
sbb
sub
xchg
xchg
fucomip
cmpsl
imul
ss
stos
sbbl
and
jg
and
movsl
notb
or
push
fs
push
and
lods
pop
movsb
pop
sarb
jge
adc
xor
or
adc
add
pop
and
lcall
xor
cmp
je
ret
pusha
lds
or
push
mov
sub
jo
and
add
daa
add
in
pop
cmovg
jbe
cmp
loop
hlt
test
add
mov
mov
push
pop
jmp
add
or
shlb
inc
inc
or
dec
rclb
dec
and
mov
movsb
cmp
jmp
fidivrl
mov
push
icebp
adc
test
jae
push
push
imul
or
push
cmp
and
scas
leave
jg
jmp
cmp
mov
mov
pop
popf
jo
and
repnz
xor
lahf
mov
jae
xchg
xor
adc
into
jb
xchg
decb
inc
or
lds
mov
xor
fsubrp
mov
jae
ja
xchg
divb
sahf
pop
and
std
push
imul
aas
scas
or
push
jmp
cwtl
loopne
jl
and
ljmp
and
adc
cmp
nop
jnp
stos
ret
jno
xchg
lea
mov
lods
mov
push
inc
out
testb
and
sbb
out
outsl
fidivrs
insl
imul
call
inc
imul
sbb
mov
jns
mov
xchg
push
or
adc
mov
add
dec
out
adc
inc
mov
pushf
out
or
adc
mov
jae
push
mov
jae
xor
inc
or
pop
mov
or
lods
scas
out
or
push
add
adcb
lods
test
dec
dec
lea
push
dec
sbb
add
push
or
and
mov
jae
inc
or
ror
mov
mov
sub
dec
pop
mov
jo
jmp
push
mov
cwtl
insb
fcomps
fstpl
push
andl
jne
jmp
xchg
ret
pop
scas
xchg
cmp
adc
imul
js
nop
imul
pusha
cmp
stos
xchg
sbb
add
sub
inc
dec
add
shrb
roll
fisubrl
jmp
cmp
inc
loop
pushf
cmp
jle
adc
fdivrs
mov
mov
iret
add
cmp
ret
xchg
jo
inc
xchg
adc
ds
push
mov
push
lret
test
out
adcb
fs
xor
inc
fs
daa
jne
jmp
filds
or
adc
jmp
add
rorb
outsl
xor
into
daa
inc
jmp
loopne
sbb
or
push
enter
mov
adc
rcl
and
inc
add
fiadds
sbb
add
jmp
and
gs
or
add
add
cmp
jge
sti
push
cmp
xlat
test
sbb
faddl
fdivl
sti
imul
lcall
mov
inc
jmp
in
ljmp
call
ss
inc
int3
mov
jle
push
repz
orl
mov
ljmp
xor
inc
call
lods
imul
das
xor
cmc
jno
adc
lock
enter
imul
jmp
pop
push
inc
adc
jbe
test
pop
inc
lcall
xchg
imul
mov
cmp
sbb
cmpsb
pop
pop
les
and
inc
mov
and
cwtl
mov
pop
adcl
pop
dec
fstpt
nop
icebp
cmp
xchg
scas
adc
dec
iret
xchg
loopne
call
or
adc
push
xor
push
call
adc
in
lret
and
fidivrs
enter
xor
push
les
adc
cli
or
sub
inc
xor
imul
stc
adc
adc
cmp
pop
pop
mov
stos
sbb
clc
and
inc
test
dec
dec
test
sub
movl
or
and
inc
pop
mov
mov
les
bound
xor
sbb
and
pushf
sub
mov
adc
adc
inc
arpl
das
adc
inc
les
xor
dec
mov
and
cwtl
and
and
cwtl
and
pop
mov
bound
inc
fs
inc
push
enter
enter
enter
mov
mov
add
adcb
mov
xor
xchg
and
xor
pushf
nop
mov
enter
enter
enter
enter
enter
enter
aas
jmp
and
fs
call
lock
inc
hlt
enter
sub
shlb
into
adc
and
or
push
or
xchg
xor
adc
and
js
inc
insl
cmp
cmp
mov
ds
cmpsl
jns
lcall
mov
imul
mov
xchg
je
imul
or
or
into
sbb
adc
aam
add
sbb
sbb
sub
cmc
or
or
shlb
and
cmp
adc
mov
pop
adc
mov
sbbl
out
lods
inc
je
mov
xchg
xor
and
cmp
test
jmp
pop
pop
test
xchg
hlt
inc
or
insb
inc
pop
xor
push
cli
push
je
inc
call
dec
inc
jb
outsl
repz
push
sbb
out
int
cmp
or
mov
outsb
mov
jmp
in
mov
icebp
nop
push
data16
aam
pop
inc
add
imul
inc
add
push
inc
or
pop
inc
add
bound
je
or
or
xor
push
push
mov
sarb
dec
push
dec
stos
and
adc
or
movb
movl
mov
and
add
and
adc
pop
push
xchg
dec
xchg
mov
sub
testb
insb
push
inc
test
es
push
aad
add
cs
sub
push
sbb
add
or
inc
dec
dec
test
movsb
icebp
jo
xchg
int
cmp
cs
sbb
add
ficoml
mov
and
jne
ds
adc
les
sub
push
cmpb
je
popa
add
cli
adc
in
sbb
and
or
xor
andl
push
adc
lahf
adc
adc
mov
icebp
push
ret
and
dec
mov
imul
pop
mov
mov
mov
push
and
xchg
xchg
push
jmp
mov
mov
ficoms
xor
push
sti
pop
cmpsb
mov
xor
data16
and
ret
adc
in
mov
test
cmc
inc
xchg
and
add
test
pop
mov
add
out
call
jg
sti
or
push
mov
movsb
leave
push
jno
cmpsb
xor
inc
push
adc
push
xor
or
mov
rclb
add
inc
push
pop
sub
rclb
cld
adc
adc
push
test
cmp
adc
jmp
push
cmp
je
push
gs
cli
incb
add
jnp
hlt
or
mov
dec
push
in
mov
mov
les
bound
imul
call
xchg
and
jmp
sub
repz
inc
and
mov
add
test
je
ret
or
push
sbb
xchg
sub
and
les
and
mov
cmp
jmp
jmp
sub
sbb
and
or
aad
and
test
pop
or
mov
pop
sub
jmp
xchg
adc
loope
fstpl
pusha
mulb
loopne
jne
adc
fisubrl
cmp
inc
sbb
cmpsb
adc
adc
inc
aaa
rolb
cwtl
scas
pop
cltd
daa
dec
mov
push
dec
mov
and
pop
xchg
scas
fdivrl
xor
dec
jne
or
or
sub
into
outsl
inc
cmp
xor
push
aad
add
adc
or
mov
popa
es
popa
jb
mov
mov
adc
push
jmp
or
jb
or
adc
aaa
cmp
jg
mov
jae
sbb
jae
adc
pusha
call
jmp
test
es
aas
inc
mov
decb
dec
aam
in
push
ss
lock
add
push
adc
test
or
jmp
add
icebp
aaa
mov
adc
push
xor
and
jp
adc
xor
adc
bound
enter
dec
test
and
mov
push
xchg
or
and
sub
lock
pop
dec
or
jl
xor
jns
imul
xchg
sub
dec
sti
sub
or
cmp
cli
jmp
sub
add
inc
bound
lods
out
nop
mov
add
adc
xchg
data16
cmp
dec
adc
push
xor
movsl
hlt
adc
test
cltd
sbb
or
jmp
xor
pop
add
icebp
and
test
lea
enter
out
jp
mov
movsb
push
js
mov
xlat
sbb
iret
cwtl
int3
inc
in
push
mov
add
and
xor
sub
or
jnp
iret
and
pop
push
and
lock
mov
add
cmp
jge
test
mov
daa
mull
int
in
lcall
fistl
or
jmp
push
ja
testb
mov
sti
mov
cmp
xchg
repz
les
ja
or
movsb
and
jmp
adc
and
mov
push
ficoml
test
cwtl
stc
popf
iret
cmp
inc
mov
dec
mov
orps
xchg
je
cmp
jb
add
push
add
push
test
add
mov
and
jmp
leave
clc
sahf
xchg
push
and
mov
out
jae
adc
loopne
mov
mov
adc
push
sbb
hlt
call
shll
mov
mov
cmpb
imul
lock
rcrl
test
call
aaa
jo
pshufw
cmp
mov
fnstenv
or
push
aas
xor
lock
imul
jmp
adc
or
mov
and
dec
cmp
lock
in
adc
rcll
and
adc
sbb
and
jno
xchg
inc
notb
fistl
cmp
adc
sub
sbb
adc
push
jo
mov
and
aad
inc
cmp
pop
xor
xchg
enter
xor
test
int3
imul
xlat
dec
fcmovbe
dec
and
enter
mov
and
rclb
je
nop
movsb
das
ljmp
outsb
adc
push
push
mul
fsubrp
pusha
xor
dec
sub
fcomip
inc
sub
movsb
sub
dec
jne
not
in
mov
fcomps
stos
xchg
fildll
int
pop
and
sub
pusha
xchg
mov
loope
out
mov
sub
or
int
sbb
pop
adc
jp
jg
or
adc
pushf
sub
stos
outsl
inc
inc
je
cmpsb
push
sub
dec
add
mov
fldenv
mov
jne
mov
jmp
jle
test
loopne
sub
insb
jbe
popa
and
sbb
push
dec
pop
jns
sub
shl
push
mov
push
adcb
or
fcoms
sub
add
cmp
jle
out
mov
out
lret
mov
adc
cmp
fdivrl
mull
int3
clc
and
enter
jl
lret
pop
mov
mov
pushl
int
mov
cmp
call
daa
mov
leave
adc
inc
adc
or
jmp
or
cmp
incl
jae
jmp
stc
and
scas
cmp
movsl
adc
loope
xor
push
xchg
in
std
mov
add
imulb
or
rcll
je
add
jg
pop
ret
mov
jl
jnp
in
adc
sub
pop
or
add
add
sbb
push
leave
or
adc
imul
pop
insl
xchg
dec
inc
imul
std
dec
push
add
and
ja
mov
shl
dec
sub
or
inc
iret
imul
orl
or
or
aam
lock
fstps
and
jmp
xor
jmp
lret
or
inc
mov
mov
rcr
test
mov
mov
arpl
mov
and
cmp
sub
test
push
pusha
sbb
sbb
adc
mov
dec
mov
sbb
cld
int
loope
and
jle
jecxz
adc
add
push
popa
adc
sbb
adc
icebp
jg
dec
mov
mov
ljmp
inc
push
jg
mov
in
mov
insl
jg
es
sbb
cmp
dec
ja
push
mov
pusha
imul
jl
les
fdivrl
dec
cmp
js
jmp
in
test
dec
inc
pushf
adc
lods
ror
xchg
push
dec
outsl
adc
jo
or
xorb
fmull
mov
inc
cwtl
lret
lods
push
push
les
fidivl
and
add
adc
xlat
pop
sub
sbb
bound
rclb
push
mov
xlat
xor
xchg
or
push
leave
test
push
sbb
jecxz
pop
shll
clc
add
sbb
sarb
jae
mov
add
sub
lds
xchg
lret
jns
push
dec
push
cmpsb
push
mov
pop
ret
shl
jecxz
sub
int3
mov
shlb
jb
ret
dec
movsb
mov
or
mov
loop
inc
gs
xor
bound
gs
jmp
pop
popa
sub
rcll
mov
lret
mov
jo
push
and
jmp
jno
aaa
addl
in
sbb
repz
jne
add
xor
xlat
and
pushf
lahf
mov
in
inc
data16
pushaw
les
jmp
test
jl
inc
rorl
cmpsl
aad
leave
clc
rol
add
jo
dec
in
dec
in
fsubl
and
adc
and
add
push
sbb
js
fs
cwtl
sbb
sbb
mov
rcll
pop
push
pushf
shrb
lahf
jl
inc
test
push
sub
dec
xor
xlat
mov
push
xor
cmp
je
inc
out
cwtl
cmpb
stos
jecxz
mov
xchg
stos
or
ljmp
inc
je
ret
jle
push
lret
and
icebp
mov
sub
add
orl
int3
and
rcrb
xchg
jb
jge
sbb
ret
sbb
push
scas
nop
pop
nop
add
add
xorb
jo
and
adc
jle
stos
sbb
js
ret
aad
xor
hlt
jnp
inc
popf
xlat
add
or
call
xchg
sbb
xor
or
addb
es
dec
cmp
sub
cld
adc
cmpl
idivb
jmp
lea
lock
imul
adc
push
dec
bound
jne
pop
repnz
in
jmp
ljmp
mov
and
push
push
or
mov
jns
or
daa
dec
mov
ror
jne
lods
in
fcoml
test
or
scas
dec
daa
jg
shl
sub
or
jne
mov
dec
sub
inc
add
sbb
pop
jns
paddusw
fdecstp
push
lret
incb
aaa
sbb
xor
xchg
inc
sub
pop
fsts
mov
push
subl
or
dec
flds
ljmp
daa
inc
and
sti
lcall
sbb
rolb
jg
out
imul
mov
sbb
and
push
pop
es
and
sbb
pushf
mov
and
pushf
lret
adc
movsb
adc
lret
cmpsb
push
inc
push
xor
lret
lret
jge
and
adc
push
xorl
xor
push
add
arpl
adc
jge
rolb
idivl
add
lret
mov
mov
movsl
sbb
jno
xor
mov
xorb
inc
xorb
jne
fcomp
pop
or
ja
aam
sbbb
mov
popf
cmc
mov
jge
dec
iret
adcl
and
mov
data16
cmpb
jb
sub
cmc
roll
stos
dec
or
lock
clc
mov
das
in
sbb
bound
aad
jle
push
cmp
xor
push
and
in
daa
pop
dec
push
loope
push
lcall
xlat
add
jbe
xchg
leave
xor
pop
in
loope
cmp
dec
push
and
adc
inc
xor
cmc
cmp
push
cmp
call
add
mov
or
je
push
sub
push
push
call
and
sub
adc
xchg
push
rolb
push
sub
mov
and
sub
push
cmp
jae
rolb
adc
jge
jl
fstpl
cmp
push
andb
mov
mov
inc
dec
cmpb
jo
mov
jle
fs
int3
outsb
call
or
pop
jne
aaa
push
push
dec
jle
lock
mov
fs
sub
fwait
and
and
je
std
mov
lock
les
sbb
jne
xchg
test
push
cmc
iret
stc
sbb
push
push
aas
andb
jl
cli
xchg
nop
cmp
data16
sub
fs
or
adc
mov
mov
call
sbb
lods
jle
push
xor
add
adc
push
mov
cli
popf
popa
xchg
cld
loop
sub
fcoml
jne
jb
mov
lods
icebp
dec
fwait
lds
adc
icebp
dec
sbb
adc
xor
ret
fiadds
repz
outsb
add
pop
or
ds
data16
cmp
or
clc
stos
int
adc
sub
fiadds
mov
sbb
clc
scas
push
adc
scas
loop
or
std
push
and
cmp
xchg
cmp
je
inc
cmpsb
inc
xchg
jle
pop
mov
out
xor
mov
xor
or
pop
stos
dec
xlat
bound
fsts
std
mov
xchg
adc
pop
pop
mov
decb
popf
data16
push
cmp
mov
ficoml
cmp
nop
outsl
mov
push
inc
sub
sbb
or
faddl
mov
mov
mov
add
mov
push
sbb
pop
or
popa
mov
mov
sbb
dec
inc
movsl
lock
inc
js
sub
dec
pop
mov
or
add
mov
imul
clc
xchg
or
mov
and
mov
inc
movsb
mov
xor
lea
and
test
inc
mov
mov
xor
pusha
pop
pop
jmp
mov
push
xor
xor
inc
outsb
popa
cmp
mov
sub
cmp
imul
push
arpl
das
xchg
inc
cli
jae
and
in
popf
addr16
arpl
fs
mov
push
imul
xor
addr16
je
decl
mov
ret
xchg
dec
xchg
mov
call
pop
shr
cld
bound
test
aas
mov
cmovns
xchg
pop
adc
sarl
sub
adc
cmp
jmp
jno
mov
sub
and
sbb
add
or
fs
sub
adc
push
cmc
aas
push
ss
jmp
call
js
hlt
imul
dec
dec
inc
mov
inc
xor
dec
and
adc
adc
dec
inc
mov
and
add
push
sbb
xor
adc
push
inc
jne
jecxz
imul
outsb
je
out
pushl
bound
in
jae
jo
jns
outsl
daa
mov
insl
fldl
xor
xor
jp
sbb
je
xor
inc
inc
dec
dec
add
adc
mov
pusha
push
les
jo
mov
cmpsb
aad
inc
lahf
cmp
iret
mov
inc
mov
cs
ret
jg
nop
rol
inc
je
and
lcall
push
pop
dec
adc
jmp
lock
mov
mov
enter
xchg
pop
je
sub
lahf
outsb
outsl
aas
jge
jb,pt
test
cmpsl
jb
cmpsb
jge
inc
outsl
push
test
repnz
push
bound
cmp
push
mov
imul
scas
cmp
insb
test
mov
stc
push
push
test
test
call
dec
adc
jb
sub
aas
adc
push
mov
gs
dec
popf
jg
out
jbe
test
push
cmp
push
daa
add
jle
or
mov
and
jne
jle
dec
inc
outsl
orl
jno
cmp
add
bound
cltd
or
sahf
push
pop
jmp
or
adc
xor
and
push
push
push
sub
xchg
jne
lods
mov
pop
and
mov
jmp
or
add
xor
outsl
sub
pop
sub
push
pop
pusha
xchg
aas
mov
imul
jae
callw
arpl
fnstenv
or
inc
pop
dec
cmp
xorb
inc
cmp
imul
nop
push
pusha
xor
or
jmp
es
sbb
dec
push
xor
push
inc
movswl
cli
mov
inc
adc
rcrl
push
test
and
adc
and
cmp
and
add
pop
push
mov
inc
call
addb
jmp
call
jbe
fcoms
jne
stos
call
clc
adc
inc
dec
dec
mov
in
movsl
adc
stc
cmpb
mov
sbb
cmp
pushf
movsl
fwait
mov
bound
push
cmp
xor
shl
and
rcll
sbb
cmp
adc
jmp
sbb
mov
lcall
mov
push
iret
sub
push
inc
mov
out
popa
fstps
jmp
sbb
or
fstpt
sbb
stc
or
adc
and
data16
mov
loopne
pop
add
jns
mov
lret
adc
cmp
inc
jno
mull
dec
and
ret
jmp
aas
lods
rolw
sbb
je
mov
inc
inc
inc
pop
push
cmp
sbb
jne
sub
inc
nop
aaa
push
mov
push
inc
dec
dec
pop
jo
push
mov
push
roll
in
or
lock
clc
fstps
hlt
lahf
push
cld
xchg
xlat
out
test
adc
push
dec
repnz
add
enter
ds
lcall
mov
scas
push
and
mov
scas
aas
rcrl
and
or
jne
ljmp
hlt
popa
int3
mov
inc
xor
lock
pop
push
push
sub
call
or
adc
imul
push
push
ja
jp
sbb
adc
push
in
repnz
je
cmp
jne
xor
aas
call
mov
aas
push
jmp
dec
push
jle
dec
loop
adc
push
xchg
inc
mov
and
cmp
jge
out
enter
loopne
call
es
sbb
inc
adc
rcrl
stc
xchg
sbb
push
push
repnz
rclb
or
jl
mov
mov
jmp
stos
rcl
jmp
push
push
dec
in
rorl
or
push
adc
jge
add
lock
pop
xor
mov
mov
cmp
psubusb
lds
jne
mov
xchg
stos
pop
cli
xor
movsl
push
and
and
fdivl
mov
sbb
and
inc
sub
mov
int3
inc
xchg
je
mov
fbstp
push
fmull
fsubrs
call
cmp
test
cmp
fcomps
or
sbb
mov
adc
call
fmuls
aas
adc
or
into
or
inc
mov
xor
shlb
nop
or
or
test
or
cld
jne
add
push
adc
add
add
ds
and
pop
adc
sub
adc
pop
jmp
xchg
test
imul
pop
xor
dec
jl
adc
add
fs
xor
push
orb
js
in
or
dec
or
test
sub
daa
mov
lods
or
movl
cltd
add
xchg
and
les
lods
dec
adc
loop
adc
dec
js
or
mov
xor
js
aad
pusha
icebp
push
imul
pcmpgtd
sahf
mov
outsb
addr16
xchg
inc
inc
jae
nop
and
in
adc
cmpsl
sub
fsts
adc
jmp
adc
mov
test
xor
or
xor
and
cmpsl
add
push
xchg
dec
daa
mov
enter
push
insb
mov
das
ficoms
imul
jns
outsb
arpl
xor
pop
push
mov
xor
add
btr
sub
js
and
dec
mull
jno
scas
push
in
add
out
and
jmp
dec
jp
adc
gs
add
je
icebp
pusha
pop
jne
mov
nop
inc
xlat
adc
pop
cli
or
in
movsb
add
cld
cmp
push
sbb
pop
loop
pop
and
push
push
and
add
lea
aad
push
sbb
test
loopne
xor
incl
jmp
xchg
mov
or
pop
lret
call
sub
das
sbb
push
in
adc
adc
and
and
push
popa
and
xor
dec
xchg
sub
sbb
scas
mov
add
movsb
dec
xlat
aaa
sbb
ja
or
and
test
xchg
push
inc
fs
cwtl
insb
inc
jmp
dec
orl
andl
sub
and
ljmp
sbb
call
jne
xor
shrl
int3
adc
fs
xchg
push
js
imul
pusha
dec
or
hlt
push
dec
jo
andl
sbb
das
push
adc
adc
sbb
or
and
cmp
jne
mov
cmp
movb
std
loopne
add
jle
jno
xchg
add
movsl
out
imul
and
jge
in
push
adc
pop
push
sbb
and
sub
and
and
in
fiadds
call
jbe
arpl
jecxz
cmp
out
sub
daa
xchg
pop
lret
arpl
jmp
xchg
sub
add
enter
mov
stos
dec
dec
cltd
ret
xor
mov
and
sbb
jne
or
pop
and
add
cmp
dec
addb
push
dec
adc
push
in
ret
inc
push
jmp
push
inc
pop
pop
mov
call
leave
jo
call
xchg
adc
out
xchg
sbb
into
dec
sbb
add
add
push
xchg
add
ret
add
jnp
adc
inc
pop
mov
pushf
push
mov
and
sbb
sar
sbb
outsb
inc
loope
push
or
add
xor
adcb
jnp
pushf
mov
cld
rclb
push
faddl
fmulp
arpl
hlt
imul
jecxz
push
in
arpl
push
fdivrl
leave
and
rcrl
cmp
add
out
adc
ljmp
shll
mov
insb
dec
cmpsb
mov
icebp
push
dec
mov
shlb
out
cli
popf
cld
cmc
test
stos
mov
dec
addl
ret
sub
adc
jae
mov
or
or
add
movsl
ljmp
out
imul
cmp
lret
test
add
inc
jp
cmp
mov
or
lea
jmp
mov
dec
shr
testl
cmp
es
mov
add
jge
mov
dec
mov
adc
lret
pop
insl
mov
ja
sbb
dec
push
pop
addl
or
and
inc
sbb
adc
adc
push
jl
inc
lea
dec
push
or
fisubl
add
mov
adc
push
mov
iret
hlt
cs
cmc
pop
push
mov
inc
das
in
test
push
inc
xor
adc
sbb
and
mov
or
jnp
dec
pop
adc
stos
sbb
and
jg
or
or
invd
adc
std
dec
jecxz
sub
out
lea
cmp
xor
and
xlat
test
enter
mov
jmp
sub
push
mov
lahf
mov
mov
nop
test
xor
inc
test
xor
xor
or
xor
inc
outsl
lock
dec
outsl
adc
and
ret
mov
roll
pop
dec
jae
cmp
and
mov
cmp
psubw
aaa
inc
dec
pop
jmp
loop
add
enter
addb
repz
adc
dec
lahf
ud2
xlat
je
movsb
jnp
scas
and
push
adc
mov
cmp
movsl
negb
jbe
cmp
call
shr
cmpsb
mov
mov
nop
adc
imull
xchg
sub
mov
es
and
ret
nop
inc
jle
lahf
jbe
inc
mov
mov
sub
sbb
cld
rcrb
fs
adc
pop
dec
out
xor
adc
and
in
in
lea
xor
cltd
daa
fildll
pop
xor
cmp
sub
js
out
or
test
add
sub
popa
inc
inc
mov
lahf
jl
ret
lret
mov
sub
sar
push
mov
pop
fsubs
cmp
aas
je
jle
pop
push
hlt
mov
adc
mov
adc
push
lods
inc
or
fisttpl
imul
or
inc
in
add
jne
mov
les
daa
push
push
cmc
sbb
in
mov
test
xor
pop
lock
push
push
and
inc
into
outsb
mov
cli
mov
inc
sbb
add
push
dec
and
push
add
dec
rorl
xchg
push
cmp
jg
les
inc
lock
sbb
inc
pop
int
in
jge
gs
dec
sti
adc
movsb
push
nop
roll
dec
pop
add
fxch
ds
pop
mov
cld
movsb
xor
ja
pop
pop
popa
out
shll
dec
xchg
sub
cli
dec
jo
movsl
mov
and
cld
adc
sti
stos
adc
leave
adc
adc
sub
mov
dec
jmp
xor
cld
test
dec
in
dec
nop
jg
or
dec
movsl
call
push
jmp
pop
sub
cmpsb
cmp
inc
pop
xor
or
bswap
popa
rol
mov
cmp
sub
lea
loope
dec
incb
mov
daa
mov
adc
iret
mov
js
and
inc
lcall
mov
cmp
lds
nop
test
adc
sub
adc
sbb
jbe
mov
push
or
and
punpckhdq
stc
or
push
cld
add
xlat
push
mov
aaa
inc
clc
arpl
add
dec
aaa
push
loop,pt
adc
pusha
fnstcw
jmp
or
jmp
push
ja
adc
cmp
jle
loop
aam
dec
mov
stos
stc
ret
mov
test
mov
jmp
std
jmp
fisubrs
test
mov
neg
add
sub
jmp
ljmp
ret
or
sub
arpl
popa
aad
mov
repz
jl
sbb
pop
in
decb
push
inc
or
mov
scas
adc
hlt
movsb
movsl
xor
fidivrs
or
aas
add
leave
push
dec
push
rcll
push
es
mov
call
inc
jne
orl
add
pop
stos
xlat
dec
in
xchg
push
nop
jmp
bound
cli
movlps
add
repnz
jno
lcall
std
mov
icebp
sub
rcll
xchg
and
and
inc
pop
imul
roll
pop
mov
and
xor
sbb
lret
or
cwtl
add
cli
rcll
repnz
es
in
sbb
roll
push
sbb
and
adc
stos
cld
insl
testb
mov
jl
in
pop
adc
push
fmull
rolb
out
nop
hlt
and
mov
aas
lea
push
mov
pop
cmc
jl
mov
adc
out
adc
pop
pop
addl
adc
and
inc
sar
sub
mov
pop
pop
in
fadds
ret
jmp
mov
jbe
sub
stos
decb
xchg
xchg
or
stc
rclb
add
and
inc
pop
add
jo
sbb
fdivrl
imul
test
lock
test
dec
scas
jo
pop
pop
push
sub
loop
pop
es
dec
test
icebp
inc
sub
push
shlb
or
adc
adc
pop
dec
lea
add
cli
and
and
jbe
pusha
sar
repz
jbe
leave
or
push
jae
outsl
fldt
fisubs
int3
icebp
mov
mov
stos
in
ss
xchg
or
or
pop
movaps
mov
sbb
jge
in
sub
test
es
push
pushl
add
sbb
xchg
mov
andl
cmp
and
lret
pop
or
mov
cmp
mov
dec
mov
dec
or
aad
lret
lahf
jne
push
pop
push
push
push
cs
sub
dec
mov
cwtl
mov
jno
xchg
pop
rorl
jne
shrb
mov
inc
out
push
jg
and
cs
fistps
and
loope
jge
sbb
imul
mov
loopne
enter
mov
push
adc
icebp
sbb
jo
test
ljmp
pop
jg
dec
cmp
add
xchg
in
push
jmp
leave
lret
pusha
and
jge
adc
sbb
test
pop
mov
sahf
pop
push
outsb
mov
fisubrl
or
add
das
dec
or
xor
fistps
mov
loop
cmp
stc
dec
xor
andl
inc
and
mov
mov
or
rorl
lea
xchg
cmp
bound
xchg
and
scas
scas
aad
movsb
je
enter
lods
push
stos
mov
pop
cmp
xchg
inc
das
mov
pop
mov
addr16
pop
or
push
shl
or
push
xchg
push
or
test
js
dec
jl
mov
and
pop
sub
mov
sub
and
pushf
sbb
and
jno
dec
ret
and
adc
fnstsw
and
je
jnp
rorl
test
and
enter
mov
adc
ja
xor
paddusb
and
adc
hlt
push
lock
cs
insb
ds
lahf
adc
hlt
add
mov
pop
repnz
out
and
xorb
or
fnstsw
into
clc
call
xlat
popa
sbbl
xor
inc
loope
enter
mov
mov
mov
das
je
cmc
cwtl
rcrb
xchg
and
pop
push
lea
and
fs
and
or
dec
dec
nop
pop
push
lods
paddsb
mov
mov
dec
mov
push
rorb
inc
add
loope
or
lretw
and
cmc
push
test
mov
scas
aad
repnz
es
dec
jp
mov
das
mov
js
imul
mov
imul
mov
or
mov
inc
and
mov
call
test
and
fimull
cwtl
push
leave
mov
inc
wrmsr
stc
sub
mov
add
ret
mov
jecxz
test
mov
popa
mov
jle
lods
sub
dec
loop
adc
mov
lock
pop
das
and
les
and
inc
fstpt
push
add
nop
loop
jle
mov
lahf
xchg
jae
dec
inc
jb
push
dec
mov
jmp
cs
imul
outsl
gs
cmp
idivl
data16
and
arpl
cmpsb
sbbl
stc
cmpsl
push
stc
fwait
sbb
idivb
sbb
pop
or
mov
pusha
cltd
in
incb
out
push
lea
inc
add
mov
std
mov
sub
push
xchg
adc
push
lods
sbbl
pop
xchg
pop
test
sbb
xor
cmp
mov
in
je
or
dec
xor
mov
pop
jmp
xchg
and
cs
or
sub
aam
inc
nop
inc
arpl
imul
sub
dec
dec
mov
std
add
add
mov
cmp
xchg
dec
and
xchg
jno
mov
clc
or
and
psubsb
orb
leave
push
mov
mov
sbb
jo
mov
imul
adcl
push
jmp
arpl
ret
add
jl
pop
pop
mov
or
jmp
imul
xchg
add
pop
mov
or
and
loope
add
mov
inc
les
cmpsl
and
lcall
les
jb
xchg
jg
punpckhbw
xlat
xor
shl
push
out
dec
aaa
adc
sbbb
inc
movsb
cmpl
loopne
add
xor
ss
cmp
nop
and
and
mov
ja
movb
dec
pushf
and
imul
rcrl
adc
jns
ret
pop
fistpll
test
cmp
popa
sub
or
call
or
pop
jns
cmp
or
dec
fcoms
add
push
stos
push
push
pop
imul
hlt
int
imul
movsb
inc
inc
inc
jmp
lcall
dec
and
cmp
adc
mov
or
testb
repnz
addb
in
jbe
in
inc
mov
ret
xchg
xor
xor
xor
mov
jne
movhps
dec
call
sbb
cmp
mov
cltd
pop
outsl
pop
inc
xor
inc
xchg
sub
add
sub
fwait
cmpsb
ljmp
adc
fs
or
sbb
xlat
cmp
sub
xor
test
xchg
mov
lock
ljmp
lea
sbb
cmp
je
inc
or
int3
jmp
scas
pop
push
mov
lods
or
and
stos
divl
jae
xlat
xor
xlat
testb
cwtl
out
push
fstl
mov
stos
inc
mov
jmp
lods
fwait
push
add
imul
loopne
test
arpl
int3
je
sbb
add
js
inc
push
and
fidivrs
popf
call
inc
inc
or
jle
sub
inc
push
and
mov
sahf
sbb
and
or
sbb
xchg
loopne
inc
arpl
cld
mov
cmp
and
leave
jmp
mov
stos
cmp
push
sub
push
sub
daa
push
aad
pop
xor
test
and
and
lds
adc
xor
sahf
push
and
push
pop
notl
vmread
push
pop
jmp
std
adc
xchg
jns
insl
adc
mov
adc
sub
xor
fs
sbb
dec
push
jge
cli
push
push
je
mov
pop
pop
push
inc
or
cwtl
ss
xor
clc
xchg
dec
out
and
addr16
mov
ret
arpl
add
mov
inc
dec
inc
cmpsl
lcall
addl
aaa
xor
insb
cmc
xor
shlb
pop
rcrl
dec
adc
into
jbe
orb
jne
hlt
adc
ret
mov
jle
inc
or
dec
mov
mov
cmc
out
xor
adc
out
imul
js
push
cmc
enter
pop
jnp
xor
pop
repz
push
fdivl
loopne
xor
pop
mov
mov
inc
les
mov
lock
cwtl
push
mov
sbb
sub
xor
out
and
or
or
enter
in
or
shl
xor
or
fldl
or
imul
adc
stos
adc
sub
cld
xchg
mov
push
das
data16
fld
pop
mov
cmp
push
and
jb
or
xchg
inc
push
stos
push
jo
int3
int3
or
push
dec
add
int
adc
inc
or
cmp
aad
push
test
jle
adc
push
xor
stos
add
shll
xchg
imul
outsl
adc
mov
movsb
dec
popf
jo
mov
std
lcall
pop
adc
or
addr16
jb
sbb
jbe
inc
mov
jo
pop
sub
or
inc
push
bound
dec
repz
pushf
push
sub
sbb
and
inc
cmpsl
lock
ret
sub
cld
adc
daa
fmull
call
push
call
cmp
jae
adc
ss
xchg
add
mov
xor
sub
es
sbb
mov
mov
js
mov
adc
les
push
fildll
cmp
pop
jmp
jo
dec
cmp
mov
pop
sbb
jno
clc
inc
push
push
or
std
out
pushf
fnstsw
test
pop
les
dec
and
jp
lods
inc
and
test
fwait
or
sub
hlt
mov
pop
cmp
test
es
dec
aam
mov
sbb
sbb
aaa
insl
test
mov
aas
aaa
adc
call
outsl
cld
leave
inc
shr
jmp
cmpsb
sbb
adc
jmp
xchg
cmp
rcrl
fbld
and
cmp
or
lret
sub
xor
add
cli
movsb
jns
cmpsb
stos
and
push
inc
mov
lcall
push
xor
scas
sti
in
and
inc
out
fiadds
dec
hlt
lcall
xor
push
and
xchg
arpl
sub
pop
pop
sub
push
nop
call
jmp
xor
push
cltd
pop
push
test
push
push
mov
push
cmp
in
or
cs
test
stos
fcoms
in
or
xor
xchg
jmp
dec
scas
and
scas
jecxz
xchg
ret
xor
cmp
repnz
pop
bound
cmp
xor
cmc
addr16
push
sbb
outsb
lret
cmp
imul
push
adc
loopne
dec
mov
ljmp
ret
inc
fwait
adc
cmpsb
dec
adc
or
or
inc
pop
push
jae
inc
inc
rolb
pop
pop
js
test
rcrl
inc
mov
sub
jnp
out
sbb
cmp
dec
pushf
fstps
negl
lcall
adc
int3
mov
repnz
xchg
stos
mov
imul
lock
xchg
jl
stos
xchg
scas
cltd
pop
jmp
jmp
int
adc
sbb
adc
inc
fwait
mov
jg
sub
je
icebp
adc
neg
adc
add
jmp
notb
nop
mov
jmp
add
call
dec
or
nop
inc
pusha
out
clc
jmp
imul
popa
pop
adc
andb
ret
mov
jle
test
and
jecxz
dec
mov
mov
test
out
xchg
push
in
daa
mov
sub
add
add
cmp
scas
cmp
mov
mov
adc
adc
movsb
fsubr
popa
push
andl
addr16
push
in
int3
cld
inc
rorb
lea
mov
sbb
jg
and
xor
mov
call
push
inc
js
inc
das
push
in
cwtl
movsb
or
pop
rorb
cmp
adc
add
sub
cmpsl
push
leave
push
fdivl
out
in
stos
dec
rolb
push
adc
pop
mov
loopne
cmp
je
sti
data16
adc
in
jb
jmp
imul
incl
pop
sbb
and
pop
or
jb
sub
fisttps
mov
or
adc
das
mov
cli
xchg
sti
inc
out
dec
pop
cmp
das
xor
jmp
pop
fiadds
sbbl
clc
jge
add
jp
lods
ja
pop
xor
ret
or
ds
mov
sub
out
ja,pt
das
lret
shrb
add
es
cmp
cmp
push
sbb
or
lods
out
fwait
push
in
int
xlat
or
xchg
push
into
arpl
mov
repz
or
dec
ficompl
and
lcall
dec
and
fcmovnbe
adc
js
cmpsl
add
sti
jge
test
adc
icebp
jne
insl
sub
add
scas
inc
enter
imul
dec
and
push
call
xor
daa
aam
test
jne
or
adc
pop
dec
in
push
je
pop
nop
adc
or
outsb
enter
or
push
inc
ja
roll
or
and
mov
mov
popf
ror
cli
in
inc
int
pop
mov
push
les
and
test
xor
mov
repnz
push
jl
cmp
inc
scas
fs
add
sbb
xlat
inc
and
outsl
call
add
xlat
mov
addr16
cwtl
push
addr16
jle
mov
stos
enter
sub
inc
add
xchg
sarl
lea
lds
cmpsb
stos
clc
mov
or
sub
pushl
or
ja
and
inc
sbb
or
add
cmp
jne
sti
xor
loopne
jmp
mov
mov
pop
hlt
rcll
cmp
push
lea
mov
or
or
mov
imul
loop
adc
push
or
shl
es
push
push
xchg
or
or
add
scas
les
mov
test
jmp
shll
andb
push
inc
mov
sub
push
xlat
sub
mov
sbb
nop
mov
inc
push
jmp
leave
imul
repz
incb
or
mov
xchg
pop
sbb
sbb
or
adc
aas
push
lock
in
push
jle
adc
mov
imul
adc
loope
addl
adc
nop
add
push
ret
loope
mov
add
add
negl
cld
fistps
in
pop
dec
mov
push
xorb
mov
xchg
adc
xor
jge
test
aaa
push
mov
jl
xchg
lods
dec
dec
jmp
lcall
lods
dec
jae
fmull
dec
add
sahf
arpl
sub
lds
imul
aam
lcall
add
dec
fnstsw
bound
inc
gs
jmp
mov
inc
pop
jae
cltd
jge
pop
xor
daa
data16
adc
mov
fs
ja
aam
xchg
fadds
rcrb
or
sahf
popa
clc
int3
or
push
lea
xchg
or
jae
mov
shll
movsl
mov
pusha
mov
dec
dec
cmp
cld
es
add
or
scas
mov
or
sub
or
mov
insb
in
repnz
daa
loopne
movsb
push
sbb
lcall
mov
loopne
push
sahf
cmpsb
sbb
xor
call
jmp
lret
mov
mov
insb
or
js
stc
aas
std
cmp
or
loopne
fnstcw
sbb
mov
andb
dec
inc
dec
mov
sub
lock
jmp
and
add
js
adc
lea
or
push
bnd
daa
mov
mov
fisubs
push
lahf
fwait
cmp
mov
pop
sub
jg
inc
sbb
mov
cmpl
arpl
jecxz
xchg
std
cwtl
bndldx
fmuls
incl
xor
adc
inc
andl
push
pop
lret
notb
lock
inc
cmpb
mov
aas
test
push
inc
adc
push
jne
pop
push
fmulp
push
or
inc
pusha
pop
push
ret
mov
sub
push
shr
or
or
ljmp
dec
push
repnz
aad
and
push
test
pop
clc
inc
rcr
ret
cmp
xchg
mov
sbb
jmp
mov
dec
jmp
cmpsl
into
call
sbb
call
dec
push
push
les
jbe
jmp
adc
sbb
aaa
mov
adc
dec
cld
lock
adc
pop
and
adc
imul
mov
adc
mov
jbe
fdivrs
xchg
cmp
sbbl
add
je
call
loop
rol
jmp
or
ljmp
mov
push
ljmp
mov
mov
jno
add
rol
sub
dec
aaa
cmp
int3
andnps
bound
add
incl
ret
scas
dec
adc
testl
pop
cmp
andl
pop
add
fnstenv
and
mov
pop
xlat
in
ja
add
and
icebp
push
inc
and
stc
scas
xchg
inc
mov
push
addb
xchg
jmp
rcrl
jle
fisttps
jg
mov
push
aas
sbb
sbb
int3
or
and
xor
mov
push
xchg
scas
or
je
iret
out
and
xor
xchg
jg
pop
sbb
pop
pop
or
outsb
or
rcrb
mov
and
psubsb
lcall
jmp
ret
das
data16
insb
daa
or
add
leave
mov
subl
pop
adc
cmp
stos
lock
and
loopne
pop
or
daa
shrb
outsl
sub
push
xchg
test
adc
stc
jo
cltd
jbe
and
dec
movsl
mov
dec
jmp
adc
fisttps
push
xor
movsl
or
inc
pop
add
add
aam
cmpl
push
jg
ret
sub
pop
cli
stos
pop
jecxz
jg
sub
mov
decb
and
stos
repnz
xor
add
push
xchg
or
and
or
dec
fs
mov
inc
or
je
inc
or
xor
lds
inc
cli
mov
test
les
pop
and
in
mov
insb
sbb
in
popf
push
sbb
xchg
inc
jl
mov
pop
sub
es
dec
cmp
jne
and
or
and
jb
jle
ljmp
mov
sbb
jle
jno
or
push
adc
dec
mov
hlt
mov
adc
and
pop
pop
lods
cmp
and
sbbl
cmpsl
bound
jg
mov
jg
test
lea
sub
or
mov
pop
cmc
icebp
lods
aas
or
inc
movsb
cmpsl
dec
or
call
bound
adc
or
mov
adc
push
push
adc
add
push
pop
mov
jmp
call
loope
fwait
scas
xchg
out
inc
dec
mov
adc
das
inc
ss
mov
add
inc
mov
mov
inc
test
push
jl
loop
push
mov
mov
sub
stc
xor
out
dec
sub
sbb
add
dec
inc
lock
xlat
push
frstor
mov
mov
lds
push
pop
xor
nop
out
into
stos
out
dec
movsl
mov
mov
movsl
dec
jmp
adc
dec
stos
cmpsb
push
cli
mov
xlat
fwait
mov
pop
add
push
enter
push
mov
cmp
pop
xor
xchg
and
pusha
add
pop
ds
pop
sbb
sbb
dec
inc
and
jge,pt
jmp
or
push
out
rorl
pop
mov
adc
dec
xor
arpl
xchg
in
addr16
inc
sbb
mov
stc
ret
out
ljmp
push
cmc
pop
cmp
xor
loope
subl
test
dec
xor
jg
lds
push
call
mov
push
js
mov
es
push
test
push
jb
or
jmp
clc
mov
xchg
xchg
je
ret
imul
es
lods
jmp
mov
idivb
pop
sbb
push
call
xchg
and
pop
inc
sbb
sti
insb
ret
test
imul
subb
rcll
dec
addr16
mov
jns
jmp
inc
add
test
or
in
and
cmc
lret
outsl
jle
ret
insb
aas
sbb
movsb
adc
cli
cld
adc
leave
add
cmpsl
jne
rol
sbb
out
dec
cwtl
or
push
sbb
push
icebp
popa
jg
sbb
clc
mov
data16
cmp
jle
inc
sub
push
lcall
inc
in
sbb
shll
addb
imul
jp
ret
stos
sbb
cld
xor
jmp
ret
dec
adc
popa
ja
cmp
and
js
inc
dec
ja
or
leave
scas
dec
imul
xchg
adc
add
dec
das
lock
lret
je
dec
pop
xor
aas
cmp
cmp
mov
xchg
pop
test
pop
mov
xor
mov
adc
and
and
dec
inc
cmp
sub
and
xor
mov
xor
dec
jmp
ss
sub
loope
jecxz
sbb
xor
inc
jb
bound
dec
adc
and
dec
push
sub
push
xor
and
bound
in
pop
mov
push
fwait
insb
mov
adcl
push
and
mov
dec
adc
mov
adc
and
pop
push
call
jmp
sahf
iret
in
mov
ds
cmpl
pushf
or
sub
cs
lea
xor
and
add
shr
sub
jg
push
cmpsl
stos
add
jmp
cmp
lds
jg
outsl
cmpsb
push
stc
and
hlt
xchg
int
fbld
inc
aam
xor
cmp
outsb
push
cmp
outsl
sub
fists
sbb
pop
scas
wrmsr
call
and
jmp
mov
gs
sub
lods
imul
push
or
pop
adc
adc
lds
xor
rcr
ljmp
adc
lods
or
cmp
sbb
adcl
repnz
dec
lds
mov
out
in
or
jne
movsb
jge
ret
push
into
and
cmpsl
inc
dec
jns
inc
adc
push
or
xchg
xchg
push
and
xlat
addl
sbb
xor
mov
dec
iret
sub
fisttpl
in
int
lret
call
mov
das
aam
mov
xchg
cmpsb
mov
xor
or
xor
jne
loope
xor
xor
dec
in
push
or
push
jg
dec
jo
push
imulb
ja
sub
xor
in
jnp
das
and
call
cmp
adc
xor
orl
cmp
jo
fs
inc
cmc
and
adc
sub
popa
cmp
popa
jp
test
and
sub
and
inc
cltd
daa
pop
push
push
mov
lea
roll
or
inc
repnz
adc
mov
adc
push
das
sbb
jle
adc
in
sbb
and
sbb
cmp
in
lahf
add
or
inc
cmp
push
in
cmp
adc
das
jle
xor
mov
je
mov
adc
and
add
mov
ss
fidivrs
popa
sub
mov
mov
or
mov
leave
mov
leave
jmp
add
das
int
divl
stos
jecxz
adc
dec
dec
testb
scas
mov
cmp
xlat
sub
jbe
adc
daa
idivb
mull
cmp
dec
mov
cmp
scas
pop
sub
lret
adc
push
jle
cmpsb
lds
push
push
jge
inc
xchg
ret
idivl
out
cmp
leave
sar
fisubrl
nop
int3
mov
add
icebp
cmp
inc
sbb
call
or
lret
pop
or
pop
sub
pop
or
pop
test
leave
std
loopne
lret
adc
dec
testb
lods
pop
cli
lds
paddusb
scas
int
movsl
adc
xor
andl
in
test
cmp
test
mov
das
jle
fstps
test
sub
mov
adc
shl
push
leave
push
push
xor
ffreep
dec
or
dec
add
xor
incb
add
arpl
enter
push
lret
nop
add
rclb
jb
sarl
mov
je
test
xor
cmp
les
mov
dec
inc
xchg
div
ret
dec
ljmp
lea
jnp
push
imul
dec
lret
test
add
sub
mov
movsb
cwtl
or
jmp
xchg
loop
xchg
es
push
dec
jge
cmp
es
xor
pushf
pop
in
lahf
pop
clc
xchg
and
js
or
shlb
mov
test
dec
je
or
or
push
push
push
inc
in
sub
mov
jbe
cmp
jl
sbb
cmp
lods
sbb
xor
mov
ljmp
rcll
push
inc
movsb
or
and
sbb
push
adc
bound
sub
imul
in
negb
push
or
add
or
mov
and
push
mov
dec
lcall
dec
je
inc
sahf
das
imul
cmp
jmp
std
xor
call
and
and
sub
leave
mov
test
ss
sbb
dec
test
stos
dec
and
add
mov
sahf
cld
pop
adc
or
mov
cmp
push
das
iret
sbb
or
push
add
sbb
and
test
lods
inc
bound
push
call
adc
jmp
out
clc
fldl2e
lods
lock
jg
or
push
jmp
push
dec
imul
and
or
cmovp
or
or
or
stos
push
or
push
pop
cmc
seto
mov
inc
adc
dec
das
xor
daa
inc
jle
ret
push
lds
aaa
sbb
pop
test
inc
std
jae
pop
adc
sahf
in
inc
adc
je
mov
or
pop
ljmp
cmp
inc
pop
adc
xor
adc
dec
mov
pop
mov
add
cli
jmp
out
add
test
das
shll
jmp
inc
jne
pop
pop
cmp
test
xor
jmp
jle
add
xlat
pop
jno
add
call
and
sub
stos
aad
dec
add
divl
fldpi
xor
enter
bound
sbb
shl
gs
sub
fisubrl
fisttpl
pop
pop
les
mov
cmpl
jne
sbb
inc
lods
rclb
or
xor
jp
jge
enter
pusha
out
call
insb
enter
xor
test
jmp
jno
xchg
or
rcrl
xchg
add
in
in
inc
dec
xchg
in
mov
sub
or
cmpb
mov
test
mov
test
sub
and
push
jle
ljmp
pusha
je
or
arpl
in
in
aaa
jo
pop
fistpl
mov
lret
jns
sbbl
pusha
jns
jo
xchg
dec
inc
push
add
fsts
jmp
testw
jmp
xor
test
xchg
in
inc
pop
add
mov
push
pop
cmc
inc
ss
sbb
in
jne
add
daa
jg
rcrb
xchg
clc
mov
dec
pop
xchg
push
jne
jbe
sbb
adc
rol
loop
stos
xlat
lcall
jp
fldcw
xchg
sbb
scas
xchg
add
jmp
mov
in
fmuls
rolb
jb
rclb
in
and
popa
push
and
mov
sarb
push
hlt
adc
jg
cli
jae
jle
ficompl
xor
mov
icebp
push
loope
movsl
adc
cmc
jne
cltd
add
xchg
or
jmp
xchg
xor
movl
adc
mov
sti
push
cmp
push
adc
fcomps
imul
pusha
mov
mov
mov
ja
push
enter
or
jl
jae
inc
imul
gs
adc
fcomps
sbb
mov
cmc
cs
sbb
adc
xor
push
push
xor
repz
push
andl
xlat
jle
nop
dec
xor
pusha
outsb
push
cs
inc
sbb
adc
movsb
xlat
mov
movsb
test
bound
sub
mov
mov
cmp
mov
push
movsb
jnp
out
xor
and
sbbb
jbe
adc
rcrl
jns
in
sub
push
sbb
rclb
mov
add
pop
jmp
int3
xchg
scas
sahf
int3
outsl
fs
mov
pop
add
sub
sbb
imul
stc
lds
dec
inc
push
bound
adc
insb
xchg
pop
and
lea
push
out
mov
sbb
shl
incb
scas
in
cmp
je
cmc
pop
inc
fimuls
jl
jmp
cs
push
jmp
inc
pop
dec
jmp
dec
insl
sub
mov
stos
lds
mov
sub
jo
loop
pushf
push
adc
sbb
sbb
ficoml
xor
or
and
or
jnp
cwtl
push
das
xchg
mov
mov
rclb
push
pushf
shl
and
idivb
sub
sub
jmp
inc
add
negb
xchg
push
in
and
mov
ret
push
mov
push
lea
xchg
cmc
cltd
sub
adc
lock
xchg
lock
sub
cmp
icebp
in
xor
xchg
loop
inc
lods
mov
inc
xchg
push
adc
mov
xor
push
or
dec
call
xchg
add
push
sti
lahf
scas
sub
mov
push
cwtl
mov
gs
nopl
and
lahf
pushf
pop
popf
bswap
dec
clc
pop
aas
sub
or
xchg
sub
adc
inc
in
ja
lea
fistl
clc
or
filds
je
outsl
adc
xor
xor
xor
or
jmp
movl
add
rclb
cmpsb
or
jecxz
push
addb
or
sbb
mov
sub
scas
or
lcall
ljmp
adc
mov
xchg
incb
adc
mov
add
shll
xor
jne
fidivs
jmp
test
iret
push
push
xor
aas
iret
xor
ret
in
sub
mov
pop
sub
data16
andl
lods
sub
or
rcll
adc
add
movsb
dec
push
popf
stos
jge
sub
popa
lds
adc
repnz
or
ret
incb
imul
pop
adc
or
sbb
les
roll
fwait
push
or
cmc
cli
mov
pop
sbb
daa
sbb
mov
or
lods
mov
xchg
pop
add
and
push
je
sti
out
cmp
add
or
addl
in
mov
add
sub
lret
xor
jp
xchg
sub
cld
pop
shr
sub
lea
loop
cmp
mov
lea
jecxz
mov
inc
scas
frstor
mov
iret
pusha
fdivl
adc
stc
test
es
mov
dec
roll
push
cltd
adc
jle
lret
stos
test
xor
test
int3
or
fstpt
push
sbb
jnp
ret
idiv
dec
lret
adc
loope
cmc
outsl
sbb
or
pop
xchg
sbb
movsb
hlt
adc
sub
test
push
pop
icebp
out
push
sbb
jg
xchg
ds
jo
xchg
hlt
add
daa
jns
scas
adc
stc
add
lds
mov
inc
sbbb
add
push
in
lds
stc
jl
movsb
nop
and
push
mov
dec
pop
shlb
sar
adc
ds
and
and
push
mov
add
adcl
outsb
mov
enter
cs
sub
push
ja
aas
clc
mov
adc
mov
enter
out
sbb
adc
inc
push
xchg
shr
mov
lds
cli
out
popf
test
adc
add
scas
ret
jbe
gs
call
and
dec
imul
es
mov
push
jnp
cmp
mov
or
lds
dec
or
inc
push
dec
data16
sbb
rclb
sub
add
adc
invd
add
jmp
dec
pop
mov
test
xchg
push
clc
inc
movsb
jp
sbb
add
or
add
inc
iret
cltd
inc
mov
jge
xor
push
inc
in
dec
sbb
add
call
jmp
andl
inc
or
addb
dec
sbb
inc
mov
dec
add
inc
xchg
loop
shrl
and
push
and
or
mov
add
pop
test
add
mov
inc
fs
adc
jmp
ja
sub
hlt
add
xor
lea
fbstp
pop
bound
jb
and
sbb
enter
mov
push
mov
or
add
add
dec
or
leave
push
xor
cmpsl
sub
sub
jmp
mov
js
lcall
movsl
mov
test
mov
cltd
xchg
call
lock
arpl
jmp
push
inc
or
call
fmul
fisttps
xor
sbb
push
add
cltd
call
or
in
je
inc
cs
test
test
out
sbb
add
in
aas
hlt
pop
sbb
dec
jmp
or
std
fsts
xchg
cmp
mov
add
sub
paddb
iret
mov
enter
push
out
scas
sbb
xchg
push
and
mov
dec
sub
imul
jb
mov
jmp
xchg
test
popf
les
andl
sub
ret
sub
orl
imul
sub
jl
aam
lahf
push
mov
pop
jno
dec
add
loope
aaa
or
divl
or
call
lret
in
cld
cmp
inc
add
stos
xor
push
or
jmp
xchg
inc
xor
mov
mov
loopne
cmpl
fimuls
out
add
lods
adc
je
dec
dec
pop
dec
mov
jp
call
xor
cmp
in
nop
das
add
lea
dec
or
call
clc
je
cmp
cld
jbe
xor
daa
push
scas
clc
and
inc
push
aaa
lahf
jns
repnz
sub
bnd
ret
out
jb
adc
adc
adc
leave
rorl
pop
xor
or
and
jno
scas
sbb
xor
jnp
mov
adc
mov
jg
push
je
lods
mov
add
sbb
outsl
mov
ss
and
push
and
sbb
test
fistps
call
xor
mov
adcb
push
adc
dec
fadd
stos
stos
add
cmp
lock
fists
cld
dec
mov
lods
addb
out
adc
mov
jmp
cmpsb
push
lret
inc
jne
cmpsb
pop
mov
xchg
inc
adc
xchg
cltd
cmp
pusha
pop
jmp
adc
jl
mov
test
push
sti
ss
fsubrs
mov
inc
sub
pop
bnd
xor
pushf
lods
xor
xchg
sbb
lahf
call
mov
xor
inc
incb
pushw
mov
push
insl
mov
pop
lret
jae
pusha
jbe
push
lock
shl
push
lods
adc
and
aas
mov
loopne
inc
sub
shll
outsb
jge
les
mov
jno
mov
pushf
xor
mov
xor
andl
add
jmp
ljmp
or
mov
xchg
or
ret
shll
call
xor
jbe
push
dec
in
es
adc
out
ror
aas
jp
mov
movsl
rclb
imul
pop
in
push
loopne
lock
add
pop
fs
jmp
sub
shll
jmp
jge
push
push
inc
dec
jne
mov
add
jo
enter
cmp
ret
and
xchg
xor
xlat
pop
aad
shrb
call
mov
mov
repnz
nop
jle
sarl
inc
ljmp
mov
jne
and
push
mov
mov
push
repnz
and
fcompl
cli
jmp
cmp
xor
aas
sub
and
cs
fs
stos
leave
fs
clc
xchg
xchg
lods
inc
sbb
stos
inc
aaa
mov
pop
push
adc
arpl
test
adc
mov
adc
push
mov
roll
mov
xchg
adc
call
push
pop
dec
sbb
push
mov
lahf
cmpsb
mov
push
repz
cmp
add
cwtl
mov
or
or
loop
mov
mov
adc
inc
push
seto
shlb
add
push
inc
shll
add
pop
sbb
arpl
lea
or
popf
push
xor
mul
lret
imulb
add
jge
movsl
push
gs
adc
lret
mov
imul
sub
push
or
mov
xchg
popa
push
leave
inc
cmp
cmp
xchg
push
sub
fisttpll
sbb
repz
jbe
int3
cwtl
daa
jecxz
push
aam
mov
pop
xchg
sub
loop
aam
dec
out
dec
ds
sub
sub
gs
popa
loopne
fs
xchg
nop
mov
push
int
push
mov
arpl
push
inc
add
jb
hlt
mov
lea
dec
push
or
xchg
add
inc
mov
bound
xor
fisttps
or
sbb
mov
xor
or
sarb
push
lods
repnz
idiv
or
push
push
loope
pop
inc
add
call
jmp
inc
test
clc
dec
notl
jp
inc
std
das
inc
sbb
pop
stos
xor
das
inc
adc
mov
std
dec
pop
lret
nop
pop
lea
call
ret
jmp
test
push
sub
sub
repnz
sub
in
jno
dec
call
jl
daa
je
loope
loopne
jo
or
movsl
adc
xor
je
xchg
push
hlt
enter
sub
lods
arpl
sbb
mov
lea
push
or
and
jno
repz
daa
mov
mov
mov
popl
push
sub
leave
gs
dec
push
sub
push
add
and
cmp
data16
lea
lahf
jno
jmp
test
sbb
push
and
inc
in
cmpb
push
inc
xchg
or
adc
xchg
icebp
dec
das
add
or
push
lock
jmp
test
stc
popf
push
xchg
aaa
pusha
jecxz
push
in
in
adc
or
das
in
les
mov
out
sbb
mov
insl
icebp
inc
pusha
push
sub
adc
mov
adc
pop
das
sbb
rcrl
dec
pop
xor
sbbb
cmp
int3
subl
mov
jmp
or
sbb
movsb
cs
and
xchg
clc
mov
push
jp
xchg
adc
xchg
test
add
sbb
test
push
mov
and
call
inc
fisubrs
stos
ds
adc
mov
mov
xchg
sbb
lahf
pop
arpl
sub
adc
jge
push
adc
and
out
mov
dec
jnp
loop
cltd
xor
stc
popa
test
in
dec
push
lock
call
frstor
pop
das
and
out
in
or
test
loopne
jmp
call
jmp
or
sbb
jmp
push
test
jne
jo
add
or
pusha
lods
xor
mov
adc
jne
scas
xor
xlat
nop
jl
push
repnz
pop
xor
and
dec
in
stos
sbb
stos
add
gs
cli
jne
in
or
adc
dec
aas
hlt
jecxz
xchg
jno
ds
test
sub
or
jmp
lea
cli
movsl
dec
lahf
jle
inc
mov
jmp
add
sbb
lcall
push
cmp
je
mov
push
lret
or
scas
pcmpgtd
pop
pop
xchg
ret
flds
xchg
test
jbe
fwait
or
pop
rolb
xchg
ffree
mov
loopne
adc
jmp
dec
xchg
cwtl
clc
in
mov
popf
add
mov
pop
and
dec
jl
shl
or
fs
jmp
pop
loopne
jmp
inc
add
shr
popf
sub
xor
das
adc
or
mov
push
sarl
shlw
xor
fs
in
popf
adc
mov
dec
js
push
cwtl
nop
jg
test
popf
imul
sbb
jmp
scas
clc
jbe
aad
mov
add
sti
jmp
sti
sbb
xchg
ljmp
ret
adc
push
xor
cld
add
fs
mulb
sbb
test
cltd
iret
call
sbb
mov
and
and
and
cmp
rorb
inc
jecxz
jl
adcb
mov
notb
fnstsw
ret
cwtl
idiv
repnz
mov
sahf
repz
ljmp
xchg
jl
jb
sub
out
and
sbb
call
and
fdivs
and
mov
jmp
add
cmp
clc
pop
arpl
xchg
jle
pop
push
jp
mov
out
fwait
daa
adc
jmp
imul
dec
pop
insl
sub
or
adc
rcl
movsb
xor
xchg
mov
cmp
mov
inc
push
push
push
sub
sub
xor
dec
std
inc
xchg
and
ret
mov
or
sbb
mov
lock
out
mov
mov
sbb
inc
push
mov
shlb
adc
pop
push
stos
or
shll
data16
or
jecxz
jmp
sbb
dec
or
xor
push
or
jne
inc
pop
sub
lods
push
sbb
sbbl
popf
mov
addl
xchg
cwtl
test
stos
xchg
cs
pop
notl
leave
or
jns
or
push
inc
mov
jnp
lret
dec
or
lahf
ss
xchg
cmp
mov
push
mov
es
aad
scas
daa
popa
loop
jne
cs
adc
add
cld
cmpsb
cmp
xchg
jmp
ret
test
test
pop
in
pop
outsb
out
imul
cs
sbb
inc
add
mov
sub
es
or
repz
jnp
sbb
add
pop
jo
mull
push
bound
inc
psubsb
int3
out
ret
or
jmp
or
pop
movsl
dec
or
jp
push
add
mov
cmp
mov
sbb
mov
adc
shl
mov
out
das
out
subl
out
mov
lea
cmp
xchg
in
inc
push
xchg
push
push
and
leave
test
lods
andb
add
movsl
xchg
dec
or
cmp
add
lea
pop
je
push
jge
les
pop
push
ret
dec
mov
xchg
cmpl
sbb
add
cli
sbb
adc
and
shll
inc
movsb
in
and
outsb
hlt
call
add
and
sarb
cld
cmpsb
xor
pop
adc
jle
adc
or
mov
and
mul
mov
test
xchg
rorl
fists
jmp
adc
sub
sbb
jmp
or
loop
push
mov
repnz
inc
sbb
cmp
pop
pusha
dec
jge
orb
mov
or
add
cld
mov
fidivl
ret
gs
imul
pop
mov
mov
movsl
clc
push
scas
das
rclb
xor
or
sbb
sub
xchg
hlt
lock
stos
pop
shl
push
pop
clc
xchg
mov
jmp
in
sbb
jg
enter
xchg
pop
sub
loop
nop
negl
testb
call
jmp
mov
sbb
aam
fldt
jecxz
in
adcl
leave
mov
ret
sbb
pop
and
rcrb
xor
sub
dec
cmp
mov
xchg
ret
vandpd
mov
dec
and
cmc
sub
xlat
inc
adc
adc
cmpsb
and
mov
insl
stos
sub
dec
xor
or
xchg
ljmp
mov
roll
jmp
pushf
lock
mov
adc
testl
test
dec
outsb
jbe
xchg
dec
cmp
nopl
es
sti
xor
cmp
mov
cli
ljmp
cmpsl
outsl
lods
or
inc
cltd
or
cld
jmp
push
daa
sbb
daa
jmp
mov
jne
fdivrl
sbb
mov
ja
leave
movsl
ffreep
mov
xchg
mov
std
push
andb
loop
mov
std
add
mov
or
add
mov
repz
mov
ss
pop
add
pop
sub
shll
mov
xchg
push
out
push
lcall
xlat
enter
lcall
xchg
rorb
xor
lea
int3
cmp
jge
mov
or
sub
adc
pop
xlat
ud2
dec
jo
test
sub
aam
lret
xor
cmpsb
cli
rorb
adc
sbb
ljmp
or
ss
adcb
mov
lock
push
mov
mov
push
fdiv
inc
push
cmp
int3
mov
daa
push
dec
or
test
stc
leave
mov
sub
sub
inc
ds
mov
je
xchg
adc
mov
aas
push
jg
fisttpll
push
xchg
je
lret
andb
adcl
and
mov
push
or
gs
jle
inc
arpl
mov
popa
scas
mov
jle
mov
cmovl
mov
mov
dec
scas
call
in
or
dec
inc
or
je
dec
cmp
mov
sub
mov
pop
decb
sbb
push
sub
mov
inc
cs
pop
xchg
ret
or
pop
fcoms
mov
fmull
andl
test
or
cmp
cmp
jne
hlt
stos
push
push
adc
dec
incl
mov
push
cs
add
int3
sub
sub
jae
push
inc
cmp
push
sbb
inc
pop
call
nop
inc
adc
roll
js
cmp
mov
or
xor
jae
ja
and
jne
mov
and
je
out
cmp
movsb
adc
pop
ret
fcomps
mov
repz
cmpsl
mov
xor
xchg
imul
aam
or
lods
rorb
cld
push
aam
sub
dec
mov
jmp
inc
add
repz
adc
enter
mov
sub
lock
mov
test
fildll
adc
or
fstpl
jno
or
repz
adc
fistl
add
xchg
xor
add
push
aas
add
xchg
push
mov
xchg
inc
mov
pop
and
cmp
sti
cs
out
movsb
lcall
push
inc
fldl
jb
jmp
lea
pop
push
xchg
mov
and
jl
cmp
add
daa
pop
movsb
lret
xchg
lea
adc
lret
cmpsl
and
sub
or
std
fmuls
xor
cmpb
push
fwait
or
and
inc
test
add
pop
xor
outsl
cmp
push
out
or
mov
add
test
ss
push
jecxz
dec
sbb
in
enter
cli
clc
xchg
imul
shll
and
cmp
add
mov
mov
cmp
or
mov
ljmp
push
push
and
push
rol
and
sub
popa
cs
mov
sbb
and
pop
into
pop
sub
and
jecxz
dec
xor
das
and
stos
iret
jg
dec
lock
add
dec
andl
cmp
mov
jno
loopne
cmc
inc
sub
pop
in
add
lea
adc
cmp
push
pop
jle
lcall
add
mov
jno
push
add
push
push
movsb
aaa
jmp
lcall
loop
mov
movsb
lret
cld
push
movups
push
int
inc
and
lods
daa
pop
sub
or
ret
lcall
or
into
cltd
loopne
push
inc
push
fdivr
decl
xor
sbb
pop
mov
jl
pop
test
call
in
sbb
jge
push
cli
sbb
loopne
and
mov
adc
fcoml
pop
push
sbb
nop
mov
dec
adc
test
je
sub
adc
cmp
out
push
dec
lds
cltd
jne
ljmp
adc
mov
shr
mov
movsb
subl
outsb
bound
aam
push
add
mov
mov
xor
cmpsb
and
jecxz
inc
mov
push
cmp
jb
jmp
out
bound
ret
fcompl
mov
mov
add
xor
or
or
lock
lret
cwtl
sbb
xor
xchg
idivb
sbb
push
mov
adc
add
xor
and
test
fldenv
xor
add
insl
loopne
sub
sbb
mov
xorl
decl
inc
adcl
les
enter
and
add
mov
pop
mov
pop
jp
adc
mov
les
in
fsubrl
aam
stos
pop
shll
or
loopne
push
clc
sub
mov
dec
xchg
test
sbbl
sbb
jmp
test
ljmp
stos
int3
jg
or
pop
in
jmp
pop
rolb
jmp
scas
cmp
jmp
jae
cwtl
loopne
push
jg
mov
cmp
mov
subl
push
mov
xchg
mov
mov
je
inc
jbe
out
sub
and
dec
mov
gs
scas
and
pop
mov
jno
xchg
pop
enter
adc
push
sbb
inc
aas
scas
shlb
xor
cmp
push
sbb
adc
sub
mov
xchg
and
or
pop
jae
sahf
mov
ret
std
shlb
add
sub
pop
push
push
jmp
dec
sbb
dec
scas
arpl
movsb
adc
into
adc
sarb
into
xlat
mov
xor
adc
cli
sub
jmp
sbb
pushf
jnp
jmp
jp
cmc
push
into
lea
or
jne
fdivs
sbb
mov
sub
adc
sub
enter
xor
mov
popf
push
bound
sbb
and
push
cld
ret
lret
dec
or
push
jl
cmpsl
daa
adc
std
or
test
cmp
icebp
and
scas
je
mov
or
push
inc
cmp
add
adc
insb
cmp
shll
std
cmc
adc
nop
out
xor
xor
push
push
push
or
ficoml
cld
mov
mov
mov
aas
mov
jmp
dec
call
test
push
and
out
clc
push
mov
stc
mov
outsl
adc
mov
mov
mov
or
mov
pop
in
cld
call
pushl
std
imull
test
dec
cmpsl
or
es
in
inc
sub
and
mov
sub
jno
mov
add
mov
jg
pop
xchg
mov
in
movsl
adc
inc
pop
das
je
movsl
dec
sbb
sbb
inc
adc
es
movsl
cmpl
dec
pop
sub
mov
outsb
mov
pop
mov
in
fisubl
subb
mov
jno
stos
popa
fldenv
xchg
push
adc
jmp
push
mov
pop
push
shll
call
lock
scas
shl
pop
mov
xor
sahf
or
rolb
inc
push
testb
mov
push
rcrb
stc
fistps
aam
fldenv
and
addb
xchg
inc
fmull
mov
adc
add
mov
pop
adc
movsl
or
and
fwait
es
xor
addr16
adc
pop
js
mov
shlb
lods
mov
mov
scas
ljmp
imul
sub
lods
add
loop
push
scas
pop
fsubrs
rcl
stos
or
or
lahf
je
adc
sub
mov
mov
rol
pop
jno
jle
xor
adc
daa
aas
jmp
lock
push
leave
rorb
cld
sub
repnz
sub
sub
lods
pushf
sbb
int
sub
das
jmp
add
add
ljmp
cmc
inc
dec
pop
hlt
add
xchg
cmp
jp
mov
mov
xor
roll
push
cmp
push
pop
or
mov
lea
push
pop
add
stos
dec
movsl
orb
lea
movsb
push
jae
call
js
mov
scas
sbb
jl
fs
lahf
outsb
push
push
cmp
push
popf
cmp
mov
pop
cli
mov
dec
test
pop
shll
add
jecxz
xchg
inc
sti
add
mov
imul
xchg
sbb
or
popa
xor
push
int3
rclb
loop
jg
inc
iret
test
hlt
test
call
cmp
add
pop
xchg
mov
out
loope
movsl
adc
inc
add
std
and
test
ja
in
jmp
jno
jb
mov
ffreep
jecxz
add
negb
es
insl
popa
fisttpll
and
in
call
movsb
mov
and
sbb
mov
adc
cmp
std
idivl
int3
clc
lret
xchg
jnp
push
sbb
push
add
ja
jo
jno
push
sub
jle
jo
movsl
sbb
xor
jb
sbb
adc
shlb
jmp
test
out
loop
adc
out
xor
cmpl
push
or
xor
movsb
adc
add
mov
in
add
bnd
inc
pushf
and
aaa
xor
and
lret
add
push
lods
hlt
adc
cmp
sbb
pop
sub
pop
add
and
mov
cmp
add
in
add
sbb
aam
sbb
cmpsb
add
pop
int3
jne
jns
cmp
add
imull
ret
xchg
inc
or
xlat
add
cmp
ja
aaa
jne
out
jl
pop
lock
lea
jmp
iret
xlat
mov
adc
sti
sbb
jle
push
mov
mov
pop
or
test
movzwl
ret
push
ds
push
lret
shl
xor
add
cli
mov
push
or
mov
adc
into
bound
bound
aad
scas
enter
cmp
jae
or
push
lret
scas
xchg
cmc
xor
sti
daa
jmp
pop
adc
inc
add
xor
in
and
jne
add
mov
inc
dec
sub
and
mov
int3
dec
ret
inc
invd
adc
sbb
sub
xor
nop
pusha
or
inc
adc
rolb
jmp
push
pop
mov
xlat
inc
pop
mov
lret
cmp
orl
aas
in
rol
sub
jecxz
adc
and
sti
inc
push
adc
xchg
cmp
mov
push
cmpsb
adc
and
sbb
les
arpl
xor
adc
sbb
push
pop
outsl
push
inc
push
adc
sub
sbb
jbe
dec
mov
idivb
add
stos
xchg
push
jne
ud2
and
dec
mov
push
xor
ljmp
pop
lock
lds
jo
or
std
mov
pop
lock
scas
inc
mov
std
stos
mov
and
and
cmpsl
mov
or
lds
sbb
test
stos
test
lods
jecxz
mov
popa
gs
rolb
jg
daa
scas
push
cmp
clc
cltd
dec
test
scas
daa
ds
out
arpl
sti
in
jae
rorb
push
lds
xor
jns
inc
sbb
cmp
daa
inc
repnz
jp
xchg
pusha
inc
cld
push
cld
in
mov
inc
cmp
lds
shrl
cmp
xor
mov
movsl
aam
and
dec
out
and
test
ja
jmp
loope
push
push
add
scas
lret
stos
or
jae
outsl
sbb
fcoml
or
sub
mov
xchg
adc
dec
push
pop
jmp
cmp
pop
sbb
push
sub
in
mov
cli
loopne
lret
mov
test
movsb
adc
push
push
inc
adc
js
cwtl
xor
adc
popf
add
dec
dec
pop
pop
adc
sbb
in
adc
imul
jae
xor
jp
adc
insl
cwtl
pop
je
xchg
les
mov
mov
mov
jle
pop
ja
pop
jge
and
add
sbb
push
aam
xchg
pop
out
dec
call
ljmp
jg
jmp
push
mov
sbb
or
jne
popa
dec
sbb
or
or
outsb
jp
imul
adc
mov
jb
push
adc
pop
movsl
mov
into
dec
aas
out
add
pop
cmp
or
cmp
or
or
loope
add
and
jl
sbbb
ud2
pushl
stos
xor
adc
inc
je
in
sti
adc
std
add
call
movsl
lock
in
in
jb
or
or
inc
dec
xchg
jl
jmp
adc
fnstenv
add
fsubr
pop
mov
and
ljmp
dec
lahf
and
adc
xor
lods
popf
push
inc
lock
cmp
mov
dec
lret
or
adc
xor
testb
iret
bound
movsl
xchg
mov
sub
sub
bound
sub
adc
dec
cltd
jb
xor
int
sub
and
add
jne
jmp
cmc
mov
jmp
mov
fdivs
and
ss
mov
sbb
push
addl
in
jno
jno
cmp
sub
adc
xlat
pop
dec
stc
and
sub
stc
pop
or
dec
jmp
jno
aam
mov
add
sub
sbb
xchg
cmp
dec
mov
fidivrl
inc
int
hlt
popf
xor
les
ss
in
add
dec
test
std
xchg
pop
sub
faddl
jg
lahf
inc
nop
and
pop
mov
add
test
lock
jmp
testb
and
jmp
xor
cli
inc
call
inc
adc
jno
dec
lea
pop
ret
adc
test
jne
mov
sti
push
push
shrl
add
cmc
cmp
adc
call
das
pop
inc
mov
aam
mov
popa
push
lods
mov
arpl
mov
or
xchg
jl
in
add
jnp
clc
xchg
outsb
je
mov
or
jmp
idivl
mov
adc
jmp
jecxz
orb
call
stc
xchg
and
pop
in
jb
xor
sub
fwait
movsb
cpuid
push
push
orb
mov
push
es
dec
pop
or
jg
sub
pop
test
aas
mov
adc
sub
cmp
lds
or
rcrb
les
bound
cmp
xor
sbbl
xor
pop
lret
adc
mov
adc
pop
push
jo
sub
aas
adc
loope
aas
or
push
aad
test
jle
sbb
and
cmpsb
ja
aad
xor
movsb
outsl
and
push
test
xlat
mov
std
les
push
test
cmp
or
inc
lret
adc
add
or
test
bound
adc
push
popl
testb
jne
jmp
call
adc
add
push
or
pop
movsl
xor
in
and
call
sbb
insb
testb
sbb
addb
fnstenv
cmp
into
pop
jmp
or
in
jg
jp
std
cmp
jae,pt
jno
add
int3
addl
add
and
or
call
loope
lahf
sub
jno
xor
fistl
cwtl
xor
sub
mov
pop
les
jnp
inc
aas
jle
jp
jge
push
dec
popf
jecxz
adc
ret
mov
mov
jge
xchg
push
jp
pop
pop
stc
mov
xor
popf
jbe
rcrl
sub
xchg
ja
cli
loopne
push
xchg
sti
dec
xlat
xchg
int3
push
xchg
cmp
stos
xchg
jmp
xchg
xor
arpl
repnz
ret
je
test
push
pop
fadds
mov
pop
jne
aad
jo
jmp
lea
das
mov
pop
into
sub
rcrl
mov
or
cmpsl
adc
adc
push
nop
xor
movsl
sahf
aam
pop
adc
cmc
sub
fcoms
sub
cmp
cwtl
dec
jnp
jmp
sub
adcb
mov
xchg
xlat
test
add
mov
or
push
jmp
mov
dec
add
movsb
enter
sldt
push
push
cmp
jp
sbb
stos
mov
lret
jae
push
or
je
and
cld
xorb
subb
popf
adc
ljmp
sub
xorb
out
sbb
stos
leave
rorl
push
shlb
test
cmp
sub
out
push
xchg
and
mov
repnz
jmp
and
leave
adc
adc
inc
or
push
adc
test
test
not
mov
orl
push
jg
rolb
jmp
and
cmc
xor
xor
jno
lea
pusha
call
lds
pop
adc
inc
das
in
and
in
int3
cld
mov
sbb
ret
cmp
dec
sub
out
fucomi
push
mov
and
mov
or
cmp
jmp
sbb
push
into
mov
mov
ljmp
dec
out
enter
sub
adc
pop
and
pop
test
call
sub
sbb
stos
and
add
loop
cltd
popa
lock
push
jmp
sarb
push
clc
je
popa
imul
test
sbb
fildl
and
loopne
ffreep
mov
xor
dec
test
or
and
push
xchg
and
sbb
push
push
call
fcoml
fildll
dec
xlat
and
inc
inc
aad
sub
adc
inc
xchg
inc
cmp
in
add
or
je
or
or
mov
sub
scas
sub
push
adc
jne
sar
dec
sbb
dec
mov
push
cmpsl
into
xchg
cmp
daa
adc
sbb
inc
insb
in
aaa
sbb
mov
pop
xor
adc
call
pushf
orb
out
cltd
imul
hlt
xorl
xor
xchg
push
xchg
aaa
or
inc
mov
push
adc
jne
fnstsw
or
sbb
sbb
and
fldcw
scas
and
pushf
popa
adc
jmp
lods
inc
add
je
ret
mov
push
add
sbb
pop
in
mov
jae
je
add
cmp
and
cmc
aas
in
lahf
sti
inc
fsubrp
cs
mov
and
loope
adc
xchg
xor
dec
xchg
jl
test
sub
or
inc
mull
xor
sbb
cmp
push
xor
imul
call
xchg
jmp
sub
outsb
or
jnp
mov
fisttpll
adc
push
pop
test
mov
jp
fstp
jmp
xor
in
jbe
mov
cmp
add
jge
mov
je
jmp
movsl
dec
test
sbb
into
cmovb
adc
mov
cltd
pop
pushf
or
sub
sbb
sub
les
and
fidivs
pop
sbb
mov
enter
sub
pop
sbb
jl
mov
adc
mov
ret
push
xchg
sub
and
sbb
cmc
insl
mov
mov
or
pop
pop
adc
cmp
sbb
dec
in
fistl
inc
aam
jb
inc
pop
or
out
repz
pop
push
pop
adc
pop
addr16
leave
bound
push
push
popf
stos
test
dec
es
outsb
adc
add
mov
mov
or
or
fcomps
emms
pop
aaa
adc
adc
imul
fcompl
or
fsts
cli
xor
push
cmp
and
dec
lahf
pop
xchg
arpl
inc
jbe
les
lret
xchg
push
cltd
jae
les
popa
je
lds
or
jns
cs
and
lds
in
adc
std
stc
mov
add
test
inc
adc
pop
mov
or
or
jae
stos
and
popa
inc
ret
pop
inc
out
mov
arpl
adc
adc
add
addr16
imul
and
add
addb
fcomps
lods
and
xorb
andl
pop
mov
mov
mov
or
pusha
addb
arpl
enter
gs
and
pop
mov
call
mov
inc
in
pushf
xor
nop
or
les
imul
lcall
adc
inc
jbe
add
insl
shrl
pop
js
pop
inc
in
dec
add
out
loop
in
dec
add
cmp
addb
dec
loope
add
popf
fnstcw
js
ret
xchg
call
mov
inc
xor
cmp
push
jg
test
in
flds
comiss
daa
rolb
xlat
out
loopne
xor
add
mov
add
mov
mov
lea
pop
sbb
add
pop
pushf
leave
mov
jecxz
enter
jl
ljmp
movl
inc
jecxz
jns
iret
stc
adc
sbb
inc
mov
mov
push
sub
into
shl
sbb
xchg
pop
ret
icebp
sub
shl
sbb
aaa
cli
pop
jb
popa
mov
cmc
cmpsb
add
sbb
mov
lock
add
pop
out
adc
add
mov
inc
mov
cmp
jl
add
mov
jae
mov
lock
cmp
or
sbb
jbe
cmp
push
mov
fnsave
popa
test
xor
jge
adc
mov
lock
jg
add
inc
cld
sbb
push
mov
push
loop
fwait
nop
rclb
in
ds
les
push
pusha
popf
icebp
mov
stc
shrb
add
fsubrl
dec
inc
repz
cmp
arpl
cmp
add
pushf
jo
jne
iret
rclb
jb
dec
cmc
stc
aas
jbe
cmp
cmp
clc
jecxz
bound
inc
sti
cmp
push
mov
jp
shrl
cmp
xlat
add
lods
or
in
enter
cmp
mov
cmp
lods
add
sbb
lock
add
dec
mov
mov
pop
add
adc
in
cmp
sbbl
int3
sbb
mov
mov
push
jg
daa
pand
sti
lock
out
cmp
mov
sub
das
subl
adc
or
push
rorl
or
or
push
dec
adcb
mov
and
dec
mov
mov
xchg
inc
dec
dec
stc
pop
xchg
mov
or
push
pop
add
push
xchg
or
push
inc
xor
add
addr16
imul
inc
arpl
dec
xchg
jae
inc
push
bound
jle
jbe
inc
test
pop
dec
or
lret
jmp
mov
cmp
pop
dec
je
jl
mov
mov
inc
push
sub
xchg
xor
adc
sub
dec
icebp
cmp
and
daa
stc
inc
repnz
dec
or
sub
xor
sub
sbb
cld
dec
cmpsl
xor
dec
lds
dec
push
mov
adc
push
ss
xor
stos
jl
xor
cmpsb
inc
insl
inc
pop
mov
les
xchg
sub
adc
or
mov
dec
and
dec
push
inc
lods
rorb
pop
jns
add
jp
lods
xor
push
insb
push
jne
jo
dec
stos
int3
cmp
mov
dec
push
jo
insb
ja
cmp
test
push
push
push
dec
gs
xor
dec
push
jo
sub
lret
cmp
sub
xor
pop
add
jo
sbb
xor
sub
outsl
push
es
push
addr16
mov
add
inc
fcoml
or
xor
dec
adc
dec
jo
test
xchg
inc
movsb
inc
pop
dec
add
in
call
test
adc
inc
xor
xchg
cmp
xor
or
sbb
sbb
push
or
cld
dec
aam
adc
sbb
xor
fidivs
jns
sbb
jae
repnz
fnstenv
imul
push
mov
sbb
adc
xchg
adc
or
xor
cli
and
xor
xchg
xor
sub
sbb
add
lods
push
xchg
and
adc
sub
push
in
fs
xor
add
jmp
and
and
sti
aas
pop
dec
push
mov
movsb
inc
sub
fisubrl
xchg
and
and
lods
mov
cltd
sbb
outsb
aaa
or
sub
sub
ljmp
and
out
mov
js
push
insl
add
daa
mov
add
movsb
adc
or
and
sbb
sbb
or
push
sub
adc
push
aam
jns
xor
ss
mov
add
adc
adc
and
mov
or
push
dec
adc
pop
and
and
pop
sbb
sbb
sbb
xchg
bound
pop
push
into
xor
xor
push
pushf
fs
push
sub
cmp
push
push
aam
test
push
pusha
aam
movsl
imul
inc
jecxz
sub
xor
enter
outsb
and
xlat
jb
gs
movsb
xchg
and
sbb
fisubrs
ds
arpl
stc
cs
shlb
push
xchg
jne
mul
mov
mov
lahf
mov
mov
xchg
mov
xchg
add
xor
sub
inc
or
push
xor
jge
push
push
inc
imul
push
xor
jne
fdivl
imul
cmp
or
or
pop
pop
dec
imul
dec
inc
loop
aam
mov
xchg
insb
roll
sbb
xor
mov
adc
sbb
inc
jae
inc
mov
xor
dec
push
dec
inc
je
or
outsl
sub
pop
xor
lock
imul
inc
jle
push
cmp
sub
pop
push
in
dec
and
test
sub
and
popa
ja
jmp
jb
dec
outsb
mov
dec
jo
jo
outsb
inc
test
push
push
xor
xor
adc
or
daa
or
and
and
sbb
sub
or
inc
mov
mov
dec
fs
gs
adc
inc
jne
add
xor
xchg
stos
pop
and
js
mov
clc
inc
sbb
mov
std
cmpsb
mov
sub
sarb
or
or
pushf
add
add
in
add
adc
add
or
adc
xchg
dec
push
add
xchg
adc
ss
sti
loopne
jecxz
nop
push
lcall
cmp
mov
add
xor
or
and
adc
ja
dec
inc
sbb
lods
inc
or
test
sub
adc
add
and
xchg
pop
ss
xor
xor
fs
xor
or
sbb
inc
add
xor
mov
xchg
or
push
mov
dec
push
xor
mov
ds
adc
add
sbb
push
mov
and
or
sub
add
pusha
stos
push
les
push
and
pop
and
fistpll
xor
and
faddl
or
pop
loopne
fimuls
scas
les
xor
xor
sub
or
xchg
les
ficoml
add
and
mov
outsl
mov
fsts
add
sbb
xor
ds
dec
and
sbb
mov
pop
adc
call
push
je
inc
int3
adc
push
xchg
mov
cmp
sub
cmp
pop
cmpsb
or
dec
xor
lret
xchg
gs
mov
add
and
cld
add
sub
push
cmp
jp,pt
out
jns
or
pop
xor
and
xor
xor
jne
aam
lock
popa
mov
adc
add
xchg
pop
outsl
add
jae
scas
jecxz
and
aad
aam
rorb
cmpsl
mov
or
and
cmp
and
insl
mov
dec
stc
sbb
shr
nop
inc
rolb
inc
inc
push
xchg
dec
jns
push
push
inc
dec
push
or
push
xor
add
stos
cmc
adc
imul
add
jge
call
test
mov
mov
inc
pop
push
ret
cmp
pop
out
fwait
pop
sbb
cmp
add
cmp
xor
xor
or
adc
add
xor
cwtl
jge
mov
mov
adc
and
push
dec
add
sbb
xchg
cmpsb
in
mov
shl
cmp
loopne
xor
inc
das
stos
or
gs
xor
adc
xor
mov
sbb
add
and
out
or
shlb
or
sbb
mov
adc
add
add
subb
add
add
jo
push
mov
or
and
insb
add
adc
inc
and
add
dec
sub
adc
inc
add
or
xchg
or
mov
fmuls
push
faddl
hlt
push
mov
add
push
inc
and
ljmp
xchg
enter
movsb
dec
cmp
xchg
sub
adc
sub
dec
out
add
lock
mov
push
stos
lock
int3
out
enter
and
mov
mov
in
cmp
mov
enter
dec
popf
stos
and
mov
jb
adc
data16
or
sbb
and
adc
push
out
addr16
inc
inc
adc
push
or
or
push
sbbb
pop
add
add
div
xchg
pusha
add
sub
iret
dec
jp
or
inc
mov
in
mov
pop
jb
inc
or
je
test
mov
inc
es
jns
daa
dec
aam
sub
repz
nop
xor
fmull
aam
lods
dec
push
nop
subl
ljmp
add
inc
or
fisubl
aam
lret
notb
push
repnz
add
shrl
sbb
or
mov
mov
pop
cltd
jbe
xor
cmp
mov
lds
pop
nop
pop
add
xor
push
push
sub
sub
adc
push
jo
sbb
aas
pop
pushf
mov
hlt
mov
lret
pop
lods
nop
inc
xor
adc
stos
dec
ret
cwtl
add
pop
push
push
sub
xchg
sbb
loopne
pop
test
enter
lret
inc
xchg
sbb
enter
and
pop
mov
jns
xor
jecxz
test
mov
dec
loop
and
mov
lods
xor
test
mov
pop
inc
or
or
shld
push
lea
ljmp
adc
iret
shll
into
insb
adc
sbb
push
in
inc
add
mov
jb
icebp
add
ss
sbb
push
inc
add
sbb
adc
xchg
jle
jle
aam
jo
inc
je
push
or
or
test
or
and
or
sub
es
xor
les
xor
mov
in
xor
adc
xchg
push
mov
loop
mov
xchg
mul
or
dec
out
inc
out
adc
mov
aam
mov
adc
mov
and
mov
adc
mov
push
int3
test
mov
mov
push
push
pop
cmp
cmp
mov
lcall
dec
enter
dec
and
test
add
jp
and
inc
add
aam
xor
jp
sub
and
dec
or
scas
daa
or
add
inc
inc
add
mov
push
sbb
push
adc
ss
and
in
mov
pop
adc
insb
aam
mov
dec
sub
add
and
loop
mov
incb
lods
cli
lods
inc
cmpb
xor
adc
add
inc
andl
popf
addl
loope
add
lret
ja
mov
js
mov
mov
push
mov
push
pop
jb
cmpsl
pop
adc
adc
clc
sbb
mov
scas
push
sub
pop
je
sahf
pop
sub
pop
mov
add
inc
xchg
test
sub
sub
iret
les
movsl
gs
inc
xor
in
cmp
addb
jbe
xchg
or
cmpsl
pusha
cmp
jns
pop
add
js
push
xchg
jle
cmp
outsl
sub
aaa
and
add
fs
jne
ja
je
lock
out
popa
jno
xchg
jg
popf
mov
mov
dec
dec
push
in
fs
sub
lea
fwait
dec
jo
stc
jns
cwtl
adc
outsb
addr16
dec
bound
dec
push
imul
popa
sub
jbe
stos
and
lcall
dec
cmp
popa
addr16
mov
stos
inc
js
iret
and
gs
sbb
nop
cmpsb
cwtl
mov
mov
push
dec
sbb
lret
dec
adc
lcall
mov
sub
pop
popa
ficoml
incb
dec
adc
xchg
xchg
push
dec
or
mov
ss
inc
arpl
dec
sub
popa
insl
cli
inc
dec
in
outsb
cmp
pop
cld
cmp
push
xor
mov
lods
fcoms
fisubl
mov
xchg
lock
jbe
sub
aad
push
popf
jl
mov
mov
test
insb
imul
lcall
jg
xchg
add
dec
popa
repnz
or
and
adc
inc
shr
cmp
add
and
data16
sub
cmp
sahf
daa
inc
into
rclb
mov
xor
popa
dec
add
les
add
lret
dec
scas
adc
xchg
or
adc
mov
mov
cwtl
imul
pushf
dec
mov
push
jne
xor
inc
mov
adc
sahf
or
jno
sub
mov
mov
shlb
nop
inc
pop
into
je
fsubl
mov
pop
flds
push
out
fs
dec
inc
or
loope
mov
es
or
inc
data16
mov
or
add
mov
in
fld
xor
and
push
jne
sbb
icebp
sub
lret
notb
xchg
mov
add
adc
mov
xor
negb
push
xor
inc
pop
or
sub
cli
push
push
cli
inc
mov
add
mov
mov
pusha
insb
mov
or
mov
and
inc
inc
and
insb
test
ficomps
jge
pop
xor
test
mov
pop
cmp
jle
pop
add
cld
push
fwait
sub
sub
sub
lret
pop
lods
outsl
push
pop
orl
mov
push
cmpsl
or
or
sbb
repnz
and
add
push
cmp
xchg
inc
mov
dec
fs
push
stc
ret
fchs
add
roll
int3
lret
adc
push
inc
xor
pop
sbb
adc
out
dec
adc
pop
xchg
adc
adc
lret
fimuls
cmp
and
fs
mov
rorb
inc
mov
jns
jno
xor
in
push
xor
sbb
pop
bound
inc
or
pusha
dec
and
mov
and
nop
adc
sbb
ds
pop
cltd
hlt
and
frstor
and
push
cmp
push
enter
insl
pusha
pop
shrb
pop
jle
and
cld
add
dec
add
xchg
push
lods
mov
movsl
push
gs
mov
pop
imul
ret
cmp
or
push
cltd
test
mov
shrl
ss
lret
js
int
ds
test
pop
or
ret
stc
add
xchg
js
or
dec
sub
test
xchg
push
xor
jle
push
mov
jno
bound
and
pop
xchg
inc
lock
into
or
fdivr
movsb
repnz
and
push
scas
pop
lret
and
jnp
lcall
push
stos
and
push
sub
pop
in
rcrb
scas
mov
dec
or
test
pop
mov
fildll
mov
sbb
loope
in
and
dec
jl
and
in
pop
xor
test
pop
ficoml
cli
jno
jle
insl
inc
in
clc
push
ljmp
stc
sub
and
inc
pop
sub
jbe
jl
sbb
aas
jge
jns
shr
push
lret
repz
push
insb
jp
pop
adc
ficoml
pop
mov
ficompl
adc
out
xchg
dec
aam
aam
int3
imul
mov
in
pop
test
push
out
mov
js
add
mov
ja
xchg
or
push
sbb
cs
jle
or
dec
cli
aam
add
cmp
and
or
cmp
cmc
js
push
mov
mov
sbb
js
adc
or
mov
push
sub
inc
adc
cmp
lret
incl
inc
xchg
jbe
xor
and
stc
add
pop
jnp
pop
icebp
lods
icebp
dec
cmp
push
cmp
imul
push
jne
jo
outsl
jb
mov
dec
fwait
xchg
fsubr
mov
mov
push
adc
push
inc
push
std
int3
dec
push
scas
sub
inc
sbb
mov
add
cmp
mov
jns
adc
or
pop
cld
push
push
aad
rcrl
mov
testl
mov
dec
mov
inc
add
icebp
dec
ret
dec
push
and
cwtl
or
adc
pop
jg
or
xchg
stc
adc
shll
inc
inc
jne
mov
inc
or
or
popf
and
ss
mov
sbbb
pop
cmp
test
loop
push
mov
push
inc
pop
aam
out
imul
or
push
call
cmp
cmp
sbb
push
jmp
mull
loopne
dec
and
dec
inc
push
pop
push
jae
fwait
sbb
cmp
inc
sub
xor
clc
jl
aas
loop
adc
loopne
adc
out
xchg
dec
adc
dec
outsl
inc
push
inc
dec
inc
push
jecxz
popf
mov
dec
mov
and
cmp
nop
mov
mov
push
or
enter
push
out
nop
inc
dec
inc
inc
cmp
shrl
push
mov
std
mov
pop
cmp
repnz
adc
cmp
mov
cmc
sub
or
addl
jo
adc
mov
fs
mov
mov
les
cld
dec
or
or
mov
mov
sub
cmpl
push
sub
test
xor
jo
push
add
ret
jae
push
in
sub
aaa
push
sub
mov
sbb
mov
pop
in
fisubs
add
sbbb
popf
jle
cmpl
sbb
es
and
fwait
adc
cli
jbe
jne
sahf
push
sbb
ja
push
sub
loopne
jl
add
jne
xchg
pop
cld
ljmp
add
das
loop
mov
jge
mov
stos
test
je
cli
lock
popa
sub
add
out
and
push
test
ror
push
mov
addb
xchg
add
out
lret
ret
and
mov
test
sub
pushf
or
out
ret
jge
sbb
push
push
hlt
dec
in
sub
inc
in
or
stos
mov
popf
jp
sbb
mov
xor
adc
fxch
sub
sti
loopne
push
push
fadds
das
clc
clc
out
stos
sti
xchg
out
sti
mov
jb
push
adc
addr16
sub
hlt
jmp
cmpsb
push
sub
jmp
sbb
add
sbb
pop
pop
sub
pop
jp
jg
ficoml
dec
add
out
dec
les
add
pmaxub
mov
or
push
ja
adc
push
mov
scas
pop
sbb
cltd
out
dec
fidivrs
loopne
imul
out
xchg
jl
stos
jne
dec
dec
mov
inc
adc
fsubrs
pop
imulb
pop
pop
jne
mov
test
cs
ret
sbb
adc
fwait
js
mov
ror
sarb
fisttps
call
or
test
ds
cmp
dec
inc
push
jmp
dec
or
mov
inc
pop
jp
pop
jbe
rorl
pop
jo
and
xchg
add
sub
rcrl
fcmovne
call
mov
test
aad
scas
mov
int
movsb
pop
fidivl
sti
fsubrs
push
xor
push
mov
dec
add
xor
push
jne
pop
lock
shr
add
xor
inc
rcr
adc
insl
clc
les
mov
mov
dec
enter
stc
test
popf
push
test
xchg
mov
fcoms
mov
adc
clc
push
xchg
les
mov
sahf
cld
je
outsb
insl
sbb
cmpsl
movsl
nop
pop
mov
mov
clc
xor
movsl
add
mov
dec
nop
mov
adc
xchg
sub
or
xchg
add
movsl
jl
xor
push
test
cmpsl
jno
add
cmp
jno
inc
aam
call
cld
scas
test
mov
adc
js
popa
repz
lahf
push
xchg
mov
cmpsb
shrb
and
sub
cmp
adc
pop
push
adc
test
pop
jb
adc
pop
cmp
pop
ret
sub
cli
lahf
sti
test
cs
cld
fiaddl
dec
call
out
jmp
adc
fcoms
aam
push
inc
decl
cwtl
lret
xchg
xchg
dec
dec
cs
cmp
xor
mov
or
lods
or
loop
add
les
mov
test
push
push
lcall
push
clc
adc
or
call
je
and
sti
jmp
pop
stc
ret
fs
or
mov
into
pop
xchg
cli
lcall
or
cwtl
ret
and
cs
adc
cmp
or
xor
jne
ret
jmp
xchg
pop
cmpsb
and
insb
loopne
dec
ds
cltd
sbb
adc
and
shll
adc
addb
add
cmpl
cmpb
jge
lods
ds
mov
dec
mov
and
test
and
pop
je
push
movsl
add
jbe
xor
sbb
mov
adc
jge
in
jg
daa
jne
jle
adc
mov
pop
sarb
popa
xor
sub
xlat
mov
les
out
and
jp
pop
xchg
ss
pop
outsb
pop
dec
dec
int3
dec
and
ss
dec
dec
in
xchg
scas
jb
mov
push
js
mov
enter
or
mov
mov
out
inc
push
mov
mov
popf
add
push
pop
gs
cmp
jp
jmp
jbe
mov
pop
ljmp
jge
cmp
push
rorl
call
sub
cmp
push
hlt
sub
add
hlt
push
adc
xor
cltd
or
repnz
sub
jp
jns
dec
lods
add
jb
jmp
rclb
cld
sub
cmp
push
xchg
test
call
and
addb
mov
or
in
in
sarb
cmpsl
lods
xor
or
push
xor
xchg
leave
insb
rcrl
push
jae
sub
sbb
mov
lods
mov
sti
gs
lds
or
cmovno
shrb
and
or
add
pop
into
add
mov
sub
push
das
xchg
pop
mov
pop
inc
sbbl
mov
dec
and
mov
xchg
neg
lods
test
sbb
cmp
int3
dec
mov
jmp
add
testb
es
push
in
mov
jb
mov
xchg
or
pop
std
xchg
dec
rcl
mov
push
sub
jne
int
ja
divl
pop
jge
lea
mov
jl
pop
jg
lcall
xor
jg
push
ss
inc
outsb
rcll
jl
dec
ja,pt
adc
imul
dec
lods
cmovl
adc
test
cld
leave
inc
push
cmp
mov
xchg
xchg
xchg
sub
xchg
cltd
out
mov
jg
adc
mov
adc
jb
xchg
lahf
jae
cmp
pop
jmp
leave
push
adc
movq
push
cmp
push
cs
test
movswl
add
adc
lcall
je
inc
mov
or
stos
fidivs
int3
adc
jo
lahf
fmul
das
fidivrs
adc
bound
pop
fsub
pop
int3
lea
jne
jne
loopne
stc
cmp
adc
mov
addr16
inc
int3
push
and
and
add
push
iret
inc
mov
call
jg
cwtl
pop
pop
dec
pushl
std
scas
daa
loop
add
jmp
xchg
inc
add
mov
cmp
jbe
pop
push
rolb
xor
das
jne
push
testb
iret
or
cmp
leave
lret
pop
sub
icebp
and
inc
fcmovb
mov
je
mov
or
adc
push
jle
mov
fidivrl
jg
inc
int3
jbe
jmp
pop
std
jmp
sbb
mov
rcll
mov
inc
jle
xchg
pop
mov
sub
mov
lds
movsb
sahf
in
in
fcompl
pusha
pop
sbb
pop
call
ja
mov
aam
mov
stc
fwait
push
mov
aas
dec
es
ljmp
andl
mov
popf
jp
sti
xor
or
pop
stc
fists
add
push
jle
dec
xor
mov
call
ljmp
fbstp
jae
sbb
fld
and
add
inc
in
adcb
fldl
call
lock
pusha
jmp
fstp
idiv
sub
test
jge
mov
and
call
adc
stc
xchg
insb
mov
dec
or
int
ja
push
add
sbb
test
push
jg
lods
add
inc
nop
enter
mov
sti
sub
imulb
push
mov
jne
mov
sub
je
daa
mov
jle
pop
adc
mov
adc
cmp
jb
addr16
cmpsb
push
jge
stc
ljmp
or
and
xor
daa
pop
mov
jge
lds
mov
xor
jae
and
and
test
ror
jo
adc
jg
xchg
pushf
and
adc
stos
or
scas
jg
or
faddp
inc
das
mov
fldl
fstl
shlb
xor
xor
push
stos
loop
cmp
add
incb
mov
cwtl
ficompl
adc
mov
or
lock
int3
mov
aad
mov
mov
push
sbb
and
adc
or
insl
leave
inc
add
fldl
pop
or
cld
or
dec
notb
cmpsb
push
sub
xor
push
outsl
pop
leave
mov
cltd
add
inc
leave
lret
data16
pop
pop
mov
int3
repz
inc
ja
jo
adc
shll
mov
xchg
dec
and
shrl
or
frstor
scas
call
or
pop
loopne
pop
push
rcl
cld
pop
call
fstpt
lods
and
imul
push
es
in
int
pop
dec
push
push
fbld
push
xchg
pop
jmp
and
or
adc
mov
das
add
pop
inc
pop
clc
je
dec
jo
add
jb
push
push
stos
test
test
adcb
push
call
dec
das
sarl
xor
stc
cltd
dec
cld
test
add
in
push
jmp
adc
push
dec
mov
or
pop
pop
inc
add
cmp
ja
xlat
int3
xor
jg
push
cmpsl
movsl
lock
xor
jg
test
and
add
loop
das
adc
cmpsl
shlb
pop
and
jne
adc
add
mov
sub
add
sub
or
adc
mov
xchg
pop
sub
push
pop
jo
mov
lahf
fsubrs
sti
sub
mov
adc
cmc
test
mov
push
lods
fnstcw
ja
jb
and
sub
xlat
frstor
shrb
jnp
dec
xchg
popf
pop
and
sub
scas
inc
aam
into
xor
out
inc
xchg
mov
inc
mov
pusha
rclb
into
xor
inc
test
cld
insl
sbb
mov
popa
push
sub
jg
or
aam
mov
jmp
mov
test
sub
out
mov
inc
popa
scas
dec
into
orb
cs
xchg
hlt
fistps
and
mov
sub
mov
and
adc
es
add
out
inc
push
stc
sub
test
in
xchg
mov
inc
addr16
cmp
ljmp
scas
int3
pop
adc
fisubs
repnz
jno
pop
bound
dec
les
xor
adc
xchg
sub
icebp
push
jge
test
dec
mov
mov
mov
lahf
out
les
jecxz
repnz
pushf
andl
sub
sarl
adc
and
jo
aaa
pop
aam
bound
sbb
inc
jg
add
dec
daa
fdivs
cmp
pop
xchg
and
loop
push
jmp
sbb
and
push
dec
clc
mov
add
push
xchg
popa
insb
mov
dec
cmp
lret
bound
xchg
dec
sbb
andb
push
fcomps
pop
mov
jae
add
je
movsl
das
push
stos
mov
push
sub
out
testb
inc
pushf
or
cmp
lock
clc
je
iret
or
cmp
and
cmp
or
mov
or
pop
in
cs
cmpsb
or
leave
adc
pop
or
into
std
jmp
dec
xor
sub
clc
xchg
test
inc
mov
scas
jmp
roll
adc
std
fisubs
mov
mov
cvtps2pi
test
int
dec
and
filds
rcll
pusha
mov
adc
enter
jp
push
adc
mov
lret
rolb
lret
jl
mov
mov
inc
add
cld
sub
int3
cs
xor
adc
adc
mov
ja
iret
and
inc
daa
sbb
and
fnsave
push
jle
mov
pop
xchg
mov
pop
cs
mov
push
or
push
adc
adc
adc
fdiv
scas
push
mov
aaa
jmp
mulb
mov
inc
mull
clc
insb
loop
cmp
cli
cltd
inc
je
adc
push
in
lret
hlt
push
loop
icebp
outsl
cld
cli
push
in
popf
adc
ds
loope
imulb
fcomp
call
mov
daa
push
xchg
push
cmp
call
jne
jmp
or
or
push
cli
inc
outsl
dec
test
movzwl
cli
mov
es
cmp
ret
push
push
aad
repnz
jge
aaa
inc
sub
jmp
push
inc
loopne
jecxz
insb
adc
pop
int3
test
in
sub
loope
hlt
adc
aam
add
xlat
pusha
ljmp
movb
loop
dec
sub
lret
ret
cmp
cmp
int
rcrb
push
jmp
call
das
jmp
cmp
cwtl
inc
mov
push
jmp
call
xor
sub
cmp
vmovaps
mull
pushf
dec
adc
imul
adc
jbe
seto
popf
jmp
cmp
pushf
ret
mov
dec
and
xor
push
les
cmp
enter
sub
adc
int3
adc
ljmp
mov
out
push
pop
inc
inc
inc
mov
addb
or
scas
ror
inc
je
xchg
mov
jl
cwtl
dec
sub
cs
pop
daa
call
adc
ret
mov
xchg
ds
pop
in
sti
mov
cwtl
mov
xchg
movsb
stos
mov
and
jge
sbb
je
push
or
pop
aam
or
push
sbb
inc
adc
cmp
fmull
and
stos
adcb
mov
das
pop
adc
std
adc
call
jns
xor
add
out
xor
cmp
in
mov
xchg
xor
xor
sub
popf
movsb
pop
and
and
lret
ds
xchg
add
mov
movl
or
mov
mov
add
pop
add
adc
inc
cld
fiaddl
and
and
pop
xchg
test
inc
push
inc
add
jl
sub
mov
mov
mov
push
fbstp
push
jg
push
xchg
push
xor
adc
lea
mov
sub
fstp
adc
xor
sub
cmp
sub
cmp
mov
std
xchg
cmp
ret
cmp
lods
test
inc
bnd
mov
jbe
addr16
pop
sub
push
or
jb
mov
sbb
in
or
sbb
inc
movw
push
xor
pop
or
and
mov
add
aas
roll
mov
loop
dec
pop
push
lea
push
test
repz
fs
xor
and
cs
jg
inc
dec
push
mov
ja
fsubrs
call
mov
stc
and
daa
xor
add
rol
inc
mov
cmp
push
inc
mov
pop
orb
mov
call
add
cmp
add
adc
sbb
pop
popa
and
mov
sbb
sti
push
ss
sbbl
negb
add
les
pop
lock
add
adc
ss
mov
rcr
divb
push
xor
or
je
xchg
mov
xchg
adc
and
movsb
mov
ficoms
push
out
je
cmp
lret
adc
ret
mov
shll
rolb
sub
dec
adc
orb
test
sbb
or
sub
dec
push
lea
pushf
int3
iret
pop
gs
mov
cld
adc
jns
in
xor
add
sar
in
mov
ss
cs
movsb
mov
dec
inc
rsqrtps
sub
dec
icebp
mov
es
sbb
dec
mov
int3
push
push
adc
into
sbb
push
pop
negl
xor
xor
and
xchg
pop
mov
in
xchg
inc
push
out
sbbl
hlt
add
mov
mov
push
mov
or
fcmovnbe
shrb
cli
push
test
pop
dec
aad
jge
imul
add
sub
cmp
xor
or
es
sub
push
je
dec
les
shll
add
xor
dec
fsts
add
es
data16
mov
add
sbb
decl
sbb
xchg
aas
fs
in
pusha
arpl
add
inc
pop
cli
mov
xchg
dec
addl
out
xchg
sub
cmp
jb
xchg
hlt
imul
push
push
push
call
stos
cli
cld
notl
xchg
xchg
inc
adc
loopne
popf
inc
push
pop
cmp
pop
mov
dec
jecxz
xchg
pop
or
lret
push
sub
dec
adcl
setle
adc
add
add
pop
push
mov
sti
xchg
sbbb
into
pop
pop
mov
jmp
xor
or
dec
nop
jno
dec
xor
scas
mov
imul
add
shl
xchg
and
xor
and
sub
sub
or
lea
es
add
cmp
cmp
push
sbb
pop
cld
inc
loopne
adc
or
jb
std
mov
inc
xor
dec
jecxz
mov
enter
test
mov
js
jnp
and
insl
push
and
add
out
dec
mov
adc
repz
cmpsl
outsb
xor
or
pop
or
loope
inc
das
add
add
dec
inc
pushl
xor
or
adc
add
add
in
add
movsl
repnz
je
jmp
pop
fmuls
bound
bound
repnz
mov
jp
dec
xchg
imul
xchg
ljmp
adc
pop
fisubrl
xchg
lea
ret
xor
mov
shrb
je
and
repz
fsubs
mov
dec
call
xor
dec
jne
orl
adc
mov
fisttpll
or
push
mov
imul
lahf
mov
push
cmp
pop
je
fs
mov
jne
or
jle
push
repnz
imul
xor
dec
mov
je
adc
scas
test
je
mov
sub
and
jmp
adc
loopne
or
pop
sub
sbb
daa
jbe
popa
fisttpll
aaa
orl
cmc
hlt
dec
jne
repnz
xor
jge
cmp
or
cmp
and
cmovae
push
jbe
inc
or
sub
mov
and
xorl
inc
jb,pt
test
pop
and
or
cltd
pop
ds
setne
mov
and
mov
add
dec
fsubr
aaa
mov
cmc
and
sbb
je
test
bound
scas
inc
push
imul
xchg
rcl
jge
sarb
push
shll
mulb
push
sbb
mov
addr16
adc
jb
les
mov
dec
imul
push
jns
inc
lock
jne
push
cmp
fcompl
push
mov
fmul
lcall
adc
out
loope
in
add
jge
scas
mov
jge
and
sti
jge
and
stos
ds
xor
lahf
pop
push
popa
add
ret
push
cmp
pop
jbe
lea
sub
nop
and
sub
mov
imul
insb
inc
push
mov
jmp
je
cmp
adc
cmc
cmp
pop
nop
rcr
inc
jle
loopne
xchg
shlb
xchg
in
int
xchg
sbb
lods
and
adc
int3
ljmp
call
lret
xor
sbb
xor
sbb
push
inc
fadds
inc
mov
and
loop
cmpsb
sbb
fdivrs
or
fs
orl
and
xchg
sub
in
call
es
adc
mov
mov
inc
mov
jle
pop
rcrb
out
rorb
mov
cmp
cmp
push
in
jl
adc
ss
or
cmc
fnsave
lahf
push
push
sbb
or
jmp
and
ja
sub
push
push
push
push
ret
and
jne
mov
jmp
pusha
je
cmp
sub
adc
cwtl
cmpl
xchg
test
jecxz
xor
mov
testb
fbstp
movl
mov
je
adc
test
mov
cmpl
adc
aam
add
xchg
rorb
sub
cld
push
nop
adcl
cwtl
mov
nop
fisttps
decl
adc
es
xor
mov
adc
inc
sbb
lea
adc
add
jne
lea
aas
cltd
push
and
pop
jb
icebp
cmp
push
adc
hlt
pop
je
pop
ret
sbb
outsl
shrb
jle
insb
int3
lret
mov
dec
mov
les
xchg
inc
add
dec
adc
shr
outsb
mov
push
sub
stc
push
pop
add
mov
or
aaa
xor
cs
dec
out
pop
push
into
mov
lock
shrl
jbe
arpl
xorl
add
in
adc
mov
inc
sbb
rcr
iret
xor
mov
sub
xor
or
sti
dec
mov
add
movsl
call
scas
xor
and
adc
insb
imulb
mov
mov
pop
mov
ljmp
pop
dec
mull
push
scas
sti
xchg
pop
clc
and
iret
loopne
sub
push
add
clc
jns
add
jl
or
fnstsw
jo,pn
fildll
xchg
and
cli
cmpb
stc
push
les
lock
mov
call
movsl
nop
push
sub
out
cltd
xchg
and
aam
push
call
or
pop
les
adc
or
pusha
inc
cltd
repnz
adc
pop
out
xchg
out
cmpsb
push
add
xor
xchg
push
rorb
movl
scas
xchg
sbb
iret
dec
add
jbe
adc
and
inc
shlb
insl
fmuls
enter
mov
jp
adc
pop
es
jp
mov
imul
and
call
cmp
mov
mov
pop
sbb
int3
loope
mov
cld
pop
aas
mov
mov
lods
sbb
mov
or
outsl
push
aad
clc
fdivr
sub
jns
adc
and
cmp
test
push
inc
popa
mov
cmp
fwait
mov
sar
pop
xchg
cmp
out
sbb
sub
xchg
in
fists
jge
cs
decb
jne
out
shlb
mov
xlat
sub
imul
or
pop
sbb
push
subl
jmp
mov
mov
pop
rcll
leave
and
or
xor
sbb
push
and
sub
call
add
cld
enter
ret
movsl
fsubrs
pop
test
mov
mov
jp
icebp
sub
ret
or
jmp
out
sbb
cmp
loope
jmp
pusha
outsb
add
jno
ja
movsb
repz
loope
adc
jns
sub
dec
cmp
popf
sbb
lret
dec
and
cmovle
xchg
xor
fwait
push
xchg
push
or
mov
scas
push
dec
int
repz
dec
mov
adc
xrelease
and
rorb
mov
enter
inc
and
xchg
cmp
or
popl
adc
in
dec
and
jnp
decb
xchg
mov
mov
subb
sbb
cmp
dec
lret
shll
dec
jl
xor
or
outsb
dec
xchg
sbb
xor
dec
xchg
or
mov
divb
fs
or
sahf
scas
push
sub
sti
and
dec
push
lods
or
xchg
mov
xchg
xorl
scas
and
lret
sub
aas
das
add
xchg
jae
vdivss
out
push
xchg
lret
xchg
mov
mov
repnz
and
outsl
xor
cmpsb
ja
nop
inc
add
jo
sarb
adc
imul
stos
scas
jo
cld
nop
dec
dec
sub
mov
adc
cltd
pop
and
loop
xor
add
and
sbb
inc
cmp
push
mov
inc
cmp
icebp
in
adc
loopne
dec
jp
mov
mov
xchg
test
adc
mov
adc
and
enter
sub
les
and
xchg
int3
and
jne
mov
xchg
sti
ret
imul
sub
xchg
and
aas
mov
sub
sub
push
mov
aas
lods
mov
jnp
jle
cs
cmp
mov
in
shll
in
out
mov
call
inc
fcoml
das
mov
sbb
push
gs
bound
add
mov
cltd
ss
ficoml
jl
and
fisubl
push
push
add
std
mov
push
loope
call
sti
ds
dec
fs
add
mov
dec
xor
scas
cwtl
adc
mov
push
test
jl
push
push
adc
daa
fs
daa
sub
movsl
xor
xchg
pop
jl
scas
repnz
call
ret
mov
movsl
daa
movsb
adc
jle
repnz
test
pop
jae
fs
insl
xor
fildll
ss
lock
xor
movsl
sub
hlt
scas
shl
jns
add
inc
insb
jae
mov
add
gs
outsl
std
jae
pop
inc
xor
and
mov
sub
cmpsb
js
jge
sbb
cmpb
adc
xchg
pop
nop
repz
jns
dec
fdivrs
mov
inc
arpl
push
loopne
ud2
push
push
call
xlat
jmp
or
add
cmp
cmpsb
dec
daa
jmp
out
inc
cmpsb
sbb
xor
and
pop
cltd
dec
and
and
cmpsb
ret
and
and
or
xor
adc
jmp
arpl
sub
dec
sub
aaa
jg
and
fsubs
pop
lea
movsl
cs
cltd
or
jmp
push
xchg
sbb
mov
mov
stc
or
jp
xor
adc
jle
shrl
jbe
ljmp
xor
pusha
fsubs
cmp
adc
jo
pop
in
jne
xor
jmp
movsl
or
cs
data16
pop
fsubr
jecxz
ret
mov
scas
xor
pop
lahf
sbb
icebp
mov
xchg
loopne
push
push
mov
les
dec
pop
repnz
movsl
adc
jae
in
cli
aam
xor
das
enter
and
test
in
ret
loope
inc
adc
mov
and
jge
mov
xchg
add
add
fmull
call
fmull
ret
adc
push
pop
xor
inc
pop
sub
loope
xchg
icebp
dec
sbb
dec
cwtl
hlt
jo
and
jl
lock
nopl
dec
mov
dec
popf
mov
test
xchg
and
xchg
xlat
rcl
loopne
pop
test
inc
loop
inc
xor
push
cs
clc
shr
outsb
out
jns
sub
dec
loop
dec
out
ja
aas
shl
sub
mov
push
fimuls
jge
or
out
call
shrb
loop
ds
pop
mov
or
push
adc
pop
pop
push
inc
jl
dec
or
push
inc
adc
aaa
inc
sub
pop
jg
popf
or
cmp
xor
das
sbb
or
pop
loop
fisttpl
aad
pop
jne
xlat
xchg
sbb
or
mov
inc
loope
jl
and
or
mov
dec
mov
add
push
mov
sarl
or
inc
mov
pop
xchg
movsl
push
lret
int3
daa
into
fsubrl
add
add
repnz
push
push
push
out
call
mov
xor
call
into
arpl
mov
int3
cmp
sub
movb
out
mov
dec
lods
and
dec
push
jecxz
test
adc
push
or
xchg
inc
xchg
mov
mov
sub
adcb
dec
fs
add
cmp
jle
les
mov
push
aam
imul
add
pop
sub
sub
es
pop
lret
and
je
sub
adc
adc
add
jo
xchg
cmc
xor
nop
or
rcl
mov
gs
int3
movsb
sub
loope
push
and
cmp
jbe
loopne
xchg
in
mov
iret
addr16
sbb
or
or
inc
daa
cmp
ret
adc
arpl
mov
leave
ret
dec
imul
iret
int
sbb
or
or
arpl
xor
test
sbb
add
je
inc
jle
or
or
aad
jno
push
dec
and
jge
stos
mov
loopne
fs
mov
xchg
jecxz
shrl
and
idiv
sub
inc
xchg
pop
add
pop
shl
pop
sbb
sub
or
divps
mov
jl,pn
dec
lret
push
mov
cmp
mov
jle
mov
dec
cmp
xor
adc
add
data16
inc
out
sarb
mov
mov
xchg
bound
mov
and
adc
insl
push
mov
mov
jno
sub
enter
sub
push
mov
jbe
repnz
call
mov
bound
jg
pop
mov
cmp
xchg
stc
lcall
shll
and
testb
push
fs
mov
jp
addr16
inc
add
movl
lea
push
addl
cli
dec
inc
ret
cmp
jno
fdivrs
dec
jmp
dec
push
cmp
xchg
testl
mov
enter
int3
jmp
xchg
clc
or
pop
hlt
lea
pop
mov
push
push
stos
lods
xchg
inc
jnp
loopne
cmp
jae
push
test
cld
loope
adc
mov
pop
orl
cmp
or
mov
lock
push
mulb
dec
push
jae
lock
sbb
leave
insb
xchg
or
pop
push
xchg
pusha
cmp
jge
xchg
adc
jmp
xchg
std
movsb
push
cmp
add
dec
push
mov
adc
push
add
sarb
jne
push
divl
and
ds
xchg
inc
push
jp
mov
jg
or
xor
add
or
data16
adc
and
jg
pop
adc
inc
ja
bound
or
add
dec
dec
test
enter
movsl
sbb
movups
ret
sbb
pop
pop
mov
sub
jmp
pop
cmc
hlt
add
stc
in
leave
mov
nop
and
or
insl
pop
daa
cmpsl
adc
fisubrl
fs
or
pop
xchg
add
mov
bnd
test
jle
inc
pop
inc
lds
xchg
sub
push
call
fcoms
in
jae
lock
push
enter
jl
sub
dec
push
mov
xor
pop
nop
lds
and
push
xor
or
movsl
add
push
iret
movsb
in
cld
mov
iret
jmp
xchg
mov
and
bound
mov
xor
int
mov
psubusw
divl
inc
xchg
in
dec
hlt
adc
cli
or
cmp
jg
add
fimuls
xor
sub
xchg
cmp
sub
pop
fwait
or
add
add
mov
adc
loopne
add
or
push
adcb
int
movsl
xlat
adc
and
mov
lock
xchg
adc
sub
rclb
inc
clc
aam
cli
adc
and
loop
fs
dec
inc
leave
lret
sbb
dec
inc
loopne
in
stos
dec
jecxz
jae
mov
push
or
and
jge
mov
dec
leave
fistps
sub
or
or
roll
mov
loop
sub
cmove
jne
push
inc
cmp
popf
mov
jl
jmp
jae
lahf
jl
arpl
fnstsw
jno
jne
mov
sbb
mov
dec
cmc
ljmp
sub
pop
in
add
push
push
push
leave
sbbl
push
negl
stos
jno
jmp
test
or
sub
xchg
add
fisubrl
mov
inc
or
xchg
jo
xlat
xchg
lea
sub
and
push
or
mov
adc
push
mov
mov
inc
dec
adc
pop
leave
push
xor
mov
xchg
sti
jo
add
shl
inc
cli
shlb
nop
mov
dec
xchg
or
test
xlat
pop
arpl
adc
push
std
dec
std
jg
je
lret
into
ss
cmpsl
into
xchg
lods
int
or
je
and
xchg
xchg
jb
ds
add
pop
dec
jbe
mov
and
push
pushl
sti
leave
mov
pop
and
test
push
pop
pop
inc
add
dec
jb
pusha
inc
pop
cmpsb
outsl
and
lds
jo
rcl
je
dec
adc
repnz
testb
mov
lret
sub
mov
lahf
push
scas
imul
jmp
mov
push
xor
mov
clc
or
xchg
push
leave
ds
mov
call
xlat
adc
inc
jmp
cld
jmp
xor
je
dec
or
rcl
fsubrs
add
sbb
mov
push
add
repz
mov
cmpsb
shlb
stc
sub
mov
leave
scas
mov
mov
push
mov
add
outsb
std
jnp
lock
sub
sub
addb
or
pop
ljmp
xchg
repz
pop
dec
sub
gs
push
cmp
push
sti
scas
jmp
lcall
mov
mov
sbb
sbb
or
xchg
mov
mov
fbstp
daa
inc
jne
cld
ljmp
dec
push
pushf
pop
aas
scas
add
adc
mov
jl
add
mov
in
xor
vprotd
adcb
push
push
orl
adc
or
test
push
push
or
xor
push
sbb
enter
push
cs
xchg
je
lahf
or
jne
inc
pop
leave
dec
push
sahf
sbb
or
pop
mov
movsb
and
adc
xchg
xchg
pop
adc
push
xchg
mov
lret
insl
push
mov
inc
nop
insb
inc
lods
sub
xchg
adc
jbe
adc
mov
outsl
enter
pop
mov
sub
stos
xchg
aam
je
js
or
mov
jno
movsl
push
leave
mov
mov
sub
lods
jecxz
mov
ljmp
cmp
cmp
xor
cwtl
push
mov
mov
sub
daa
jge
xchg
xor
call
push
push
sub
dec
aam
rclb
adc
mov
cmp
jb
mov
insb
out
mov
dec
and
inc
lea
orl
in
sti
jae
out
add
jne
jmp
addr16
je
iret
imul
lea
outsb
jo
enter
unpcklps
cmp
inc
xor
dec
out
sbb
lock
and
inc
inc
ret
inc
popf
repnz
pop
mov
int3
call
mov
pop
xchg
ss
push
jbe
fs
dec
into
movsb
and
pop
ret
pop
mov
pop
dec
xchg
popf
pop
je
xchg
push
call
shr
pop
cmp
inc
in
sbb
out
dec
xchg
cs
subb
push
lea
xchg
ret
sub
test
mov
sbb
pop
mov
adcl
cmp
aas
xchg
inc
pusha
or
int3
mov
leave
test
fidivs
leave
dec
shll
popa
sub
mov
push
dec
push
gs
xchg
or
call
mov
xchg
loop
adc
gs
xor
adc
lret
push
xchg
mov
adcb
clc
sbb
daa
je
jle
ss
or
adc
cli
pop
mov
scas
and
in
xlat
movsb
jmp
dec
pop
sub
pop
pop
mov
push
dec
daa
mov
push
or
loope
jmp
data16
mov
and
mov
mov
push
and
adc
incl
nop
jge
adc
sbb
inc
call
neg
jb
pop
and
lret
lcall
or
cmc
icebp
push
inc
roll
pcmpgtd
inc
add
cmp
and
and
or
or
inc
adc
or
sbb
push
mov
push
mov
xchg
push
lea
pop
daa
jl
rcrl
cmpsl
dec
lock
ja
xchg
insl
lahf
jne
push
ud2
loope
sub
add
xchg
repz
and
pushf
gs
ret
adc
jbe
sub
ficoms
aad
out
decb
mov
xlat
jmp
xchg
aaa
mov
xor
dec
jl
push
in
test
jle
gs
inc
sbb
and
xor
mov
xchg
push
jl
inc
enter
rolb
mov
les
fdivs
mulb
aad
xchg
cmc
dec
sub
pushf
sub
xchg
mov
jne
popf
imul
sbb
mov
js
les
xor
pop
jmp
push
cmp
mov
push
arpl
sub
adc
ja
adc
mov
inc
push
mov
dec
ror
and
clc
mov
dec
call
xchg
or
add
pop
lahf
or
je
or
sub
rorb
pusha
sub
or
adc
adc
sbbl
imul
sbb
xchg
and
nop
sbb
adc
and
jge
jle
stos
adc
outsl
call
ljmp
div
add
pop
mov
adc
movsb
cs
outsl
in
cli
inc
jmp
xor
cmp
adc
lret
xor
dec
sub
into
cmp
sbb
lods
aad
scas
sbb
stos
dec
mov
ja
adc
cmp
out
and
out
push
xchg
add
lods
push
add
jp
cmpsl
adc
mov
loop
fnstenv
cld
test
rorl
cli
xor
loop
fs
add
mov
adc
jecxz
jmp
jp
or
push
push
ljmp
push
xchg
fcoms
pop
dec
mov
sbb
or
jmp
inc
mov
mov
clc
cs
das
outsl
enter
or
and
lock
mov
adc
sub
mov
xchg
or
and
adc
or
pop
add
xchg
push
out
add
add
int
lods
inc
dec
loop
pusha
les
je
cmp
sub
je
pop
ss
cmp
call
sub
pop
inc
cmpsl
or
sub
and
push
lods
cmpsl
movsl
out
sarb
dec
ljmp
jl
xor
out
adc
std
push
mov
and
and
int3
pop
dec
push
push
in
dec
push
jmp
aad
add
inc
call
sbb
adc
push
stc
leave
and
jmp
ss
and
xor
mov
mov
pop
inc
int
inc
jmp
jg
pop
mov
scas
fs
ss
dec
jae
in
leave
adc
cwtl
xor
or
jge
in
push
jne
fnstcw
xchg
dec
enter
fsubl
int3
push
cmp
shrb
adc
xchg
leave
int3
cmp
popf
cmc
xor
push
fmull
and
aam
je
mov
jno
mov
push
sti
ljmp
mov
jmp
xor
int
stc
and
push
mov
push
test
xor
mov
test
clc
testb
inc
pop
adcl
push
cmpb
ljmp
mov
lret
pcmpeqd
gs
xorb
outsb
test
ljmp
and
push
cmp
lret
jmp
rcrb
fwait
ds
enter
fldl
dec
pop
xchg
imul
adc
ret
jmp
mov
and
or
imul
fsubl
or
int3
adc
add
add
sbb
sbb
jle
sti
lcall
jecxz
push
sar
dec
push
xchg
in
adc
adc
hlt
xchg
sbb
ljmp
mov
inc
inc
into
jbe
mov
in
es
xchg
mov
fmul
bound
adc
addb
pop
add
insb
xchg
imul
pop
inc
pop
cmpl
add
push
push
add
ja
add
hlt
jne
push
call
sbb
add
dec
pop
dec
push
xchg
mov
fsts
inc
lods
push
jbe
lods
jns
cmp
cmpl
clc
stc
lea
cmp
mov
dec
or
pop
adc
sub
ret
lods
and
mov
xchg
dec
clc
push
lret
add
inc
sbb
cltd
pop
adc
les
mov
sub
push
mov
cmp
int3
lea
add
mov
cld
adc
push
or
pop
push
test
sub
dec
push
aam
out
shr
lock
ljmp
xor
or
hlt
je
jle
or
push
push
popa
push
jmp
lock
clc
fists
add
rclb
insb
push
gs
popf
mov
mov
add
xchg
popa
sub
cli
fdivs
add
stc
adc
inc
inc
sbb
pusha
jne
add
pop
mov
std
sub
cmp
cmc
scas
in
xor
sbb
xchg
pop
cmp
and
jle
sbbb
jg
mov
mov
mov
cs
mov
xor
mov
pop
jecxz
push
pop
or
imul
push
pop
imul
fs
add
or
jle
add
pop
add
jne
xor
mov
daa
push
out
dec
sarl
aam
pusha
inc
cmpl
stc
sub
ss
ret
les
mov
insb
popa
xor
adc
push
adc
lahf
ror
push
pop
xchg
jle
sub
and
lods
sbb
sub
xchg
pop
cmpsl
movsb
push
imul
mov
das
aas
loopne
push
lods
xor
into
sub
lret
add
aad
int
mov
cltd
xchg
xchg
cmpsl
xor
das
jnp
mov
hlt
imul
push
xchg
mov
and
lahf
gs
xchg
sbb
xchg
and
ljmp
jge
cmp
fstpt
popa
dec
push
or
lea
push
les
std
shr
jb
loopne
enter
inc
add
inc
daa
dec
jmp
or
or
push
sub
popa
mov
push
sub
adc
jg
add
xchg
aas
xchg
dec
cmp
jp
movsl
cmp
dec
cld
mov
loop
aam
and
fwait
mov
sbb
lods
lret
sub
out
repnz
xchg
sub
imul
test
xor
in
ret
nopl
and
or
popf
in
daa
fisttpl
pop
pop
mov
and
fcompl
hlt
jl
test
pusha
jge
xchg
insb
sbb
jl
andb
dec
enter
insl
adc
push
add
xchg
cmp
fsts
inc
fstps
es
or
push
pop
out
pusha
dec
inc
adc
loopne
call
leave
daa
push
cmc
xor
roll
push
cwtl
dec
ss
sub
adc
xor
je
sbb
test
dec
stos
mov
outsb
iret
lock
or
lds
sbb
imul
xor
inc
pop
or
insb
and
sar
ss
jp
inc
xchg
pop
pop
mov
push
push
pop
sbb
stos
int
mov
push
xchg
jmp
inc
rcrb
and
iret
scas
xchg
adc
cmp
in
fmull
xchg
fsubl
je
mov
dec
xchg
add
adc
xchg
insl
mov
call
xchg
mov
jmp
jb
pop
lods
and
in
sbbb
sbb
mov
repz
and
mov
sahf
iret
out
pop
and
das
add
ret
jmp
aad
gs
out
in
out
invd
lods
inc
out
inc
push
jno
std
sbb
es
mov
das
push
mov
clc
dec
mov
mov
push
inc
add
movsb
testl
mov
nop
jmp
cmc
mov
rorb
dec
test
cmp
sbb
mov
adc
mov
iret
decl
mov
mov
enter
call
lock
xor
add
call
jnp
hlt
push
jle
popa
inc
xchg
push
jne
add
xchg
sbb
jle
pop
fs
cmp
xchg
push
cmp
xchg
out
repnz
rcrl
push
or
inc
sbb
and
and
inc
hlt
dec
adc
fs
in
repnz
mov
clc
xchg
pop
mov
cld
dec
pop
cltd
xchg
inc
jmp
mov
cltd
add
add
ret
fimuls
bound
add
in
jmp
mov
les
pop
mov
pop
mov
push
adc
or
mov
push
inc
repz
inc
or
jmp
mov
stos
in
xor
pushf
dec
data16
push
pop
xor
das
loope
adc
xchg
cmpsb
stos
push
lret
dec
push
push
adc
pop
push
std
pop
xor
xchg
sbb
mov
stc
push
out
icebp
test
and
lcall
orb
pop
jg
mov
mov
ret
jmp
mov
adc
das
loopne
inc
cmp
fucomi
into
mov
rcrl
inc
call
loop
sbb
je
test
and
inc
xchg
xchg
test
aam
imul
mov
add
and
jl
sbb
inc
dec
dec
sub
xor
mov
ror
jbe
popa
inc
insb
ds
jbe
pop
ljmp
lea
mov
lahf
mov
inc
xchg
pop
mov
fidivl
push
push
inc
jle
dec
mov
adc
push
iret
nop
push
cmp
int3
test
dec
inc
inc
idivl
dec
xchg
jb
pushl
call
adc
daa
sahf
dec
adc
iret
push
or
test
dec
cmp
adc
inc
xor
push
inc
dec
dec
adcb
inc
jl
daa
int3
sarb
push
push
rcll
xorb
in
jne
pop
lea
mov
dec
clc
cmpsl
fnsetpm(287
xor
and
cmp
sbb
cmp
cs
and
mov
adc
cmp
inc
sbb
negl
inc
hlt
sub
or
lock
mov
mov
sbb
sub
sbb
push
dec
dec
mul
inc
faddl
jge
fdiv
cmp
or
int3
in
push
and
xchg
cmp
iret
cmc
and
add
push
std
daa
jg
dec
je
adc
call
je
mov
and
lcall
orl
stc
xor
add
cltd
xor
jb
jns
jne
dec
lock
sub
pushf
and
das
sbb
out
sub
dec
psubsw
rcrl
mov
jae
adc
clc
xor
lock
out
or
inc
and
mov
outsb
jge
test
push
xchg
pushl
xchg
mov
xor
push
andps
aas
leave
jge
or
int3
aaa
cs
sub
clc
imul
sub
mov
xchg
pop
sub
fs
movl
mov
or
or
in
xchg
test
fwait
das
jbe
lea
shll
pop
aam
dec
clc
xchg
iret
pop
pop
pop
cmp
int
test
pop
cwtl
shrl
jge
jo
sbb
pop
mov
mov
lahf
push
add
push
push
cli
inc
xchg
or
jge
push
jae
cwtl
mov
jbe
dec
jmp
pop
lahf
push
clc
shl
cmc
and
adc
aas
add
sbb
imul
push
sub
cmp
jb
mov
dec
scas
xchg
mov
push
jp
xor
subl
mov
out
add
call
push
imul
jae
aam
xchg
loopne
push
xlat
sub
leave
sub
mov
inc
outsl
popl
mov
lcall
push
call
in
enter
add
pop
and
les
and
dec
int
push
adc
fwait
jbe
loope
dec
cltd
jecxz
stos
and
stos
push
lret
enter
dec
es
dec
dec
xchg
dec
push
jg
mov
pushl
cld
xchg
cmp
je
movsb
lods
popf
inc
add
int3
adc
dec
xor
cld
add
or
rorl
and
push
out
xor
jmp
mov
pushf
inc
add
fwait
pop
cmp
loope
mov
xor
push
jne
push
sti
cmp
and
in
cmpsl
sbb
jg
je
push
push
out
sub
fs
notb
enter
sahf
ret
and
push
xchg
pop
xor
lock
inc
call
mov
and
cmpsb
mov
jecxz
sbb
or
push
stc
sub
jmp
adc
into
xor
lods
sbb
test
sub
cmp
fmuls
popa
xchg
push
mov
mov
dec
and
push
add
bound
sub
je
jmp
push
adcb
loopne
daa
inc
pop
inc
dec
jge
push
or
or
and
xor
les
sbb
lret
addb
adc
outsb
notb
and
adc
cld
mov
aas
push
or
popa
mov
int
cmp
mov
mov
sub
xchg
arpl
xlat
pop
stos
xchg
popf
add
cltd
inc
and
inc
xchg
ds
mov
mov
push
push
roll
call
xchg
ret
test
pop
mov
fdivs
sbb
loop
lea
and
mov
jmp
pop
lock
cmp
mov
mov
jo
add
lea
or
sub
movsb
je
loope
ds
rcl
jo
rcr
ds
outsl
xchg
or
add
jns
and
inc
ret
fadds
jmp
and
or
jmp
adc
and
or
push
push
jne
js
jmp
insl
popa
adc
mov
dec
inc
inc
aam
dec
cmp
popf
ficoml
inc
cs
pop
xor
loopne
jbe
sub
pop
aam
imul
idivb
inc
cmpsl
sti
daa
push
sub
arpl
enter
xlat
push
mov
repnz
push
call
into
inc
jno
jge
mov
icebp
cs
mov
jno
and
adc
sbb
cltd
xchg
push
enter
fsts
or
int3
sti
adc
xchg
push
cli
ret
xor
dec
sbb
movsb
lret
lahf
push
stos
cmc
insb
xchg
nop
rorb
inc
outsb
mov
or
mov
add
and
jne
xchg
in
cs
bound
xlat
sub
or
and
iret
pop
dec
imul
mov
mov
roll
inc
xor
adc
adc
and
cmp
imul
jbe
pop
sti
pop
sub
mov
xchg
lods
nop
inc
mov
mov
movsl
sbb
adc
mov
or
into
mov
dec
push
call
out
push
push
pop
je
jno
and
push
xchg
push
or
fildl
jmp
pop
or
push
call
popa
inc
mov
push
add
sub
jl
mov
in
or
and
jg
inc
dec
call
movsb
rcrb
jns
bound
fcompl
dec
int
xchg
inc
pop
cmpl
stos
xor
jno
jge
cmp
call
in
pop
ss
loope
cmp
jg
ror
or
outsl
fnstenv
fwait
cli
dec
mov
jnp
mov
arpl
mov
cmp
inc
add
jno
mov
repnz
and
pop
cmp
add
imul
imul
ret
adc
and
add
imul
fidivs
imul
pop
mov
call
lods
cmp
sbb
xor
in
lods
or
adc
push
in
gs
stos
push
cmp
xor
mov
pop
mov
adc
pop
pusha
pop
xor
pop
and
pop
ret
out
jmp
push
xor
inc
pop
or
push
mov
jmp
sbb
mov
cmp
iret
loope
pop
loopne
js
pop
jae
dec
push
lock
cmp
lods
loope
mov
mov
jp
cmpsb
dec
adc
sub
inc
dec
pop
ljmp
mov
mov
sub
xchg
sbb
mov
dec
fwait
std
sub
fmull
jg
xchg
mov
add
lcall
jle
jp
mov
ret
jl
cli
js
popf
jp
dec
sbb
pop
xor
frstor
inc
jle
fcom
mov
in
inc
movsb
test
xchg
call
flds
ss
jmp
rcrb
in
cmp
dec
dec
push
xor
scas
popf
sbb
aam
test
add
jb
sti
sub
loope
push
mov
or
leave
push
test
jle
call
inc
shrl
sbb
fsubrs
mov
enter
loopne
je
pushf
cmpsl
pop
adc
sbb
dec
inc
inc
nop
and
fildll
repz
mov
ds
mov
test
add
xor
ret
jmp
bound
xchg
cmp
in
add
and
dec
add
fldenv
push
or
loopw
add
aam
or
ror
in
leave
pop
outsb
add
push
add
les
and
xor
aas
inc
pop
pop
imul
bound
inc
cld
cwtl
inc
cld
or
lret
pop
inc
dec
cld
call
dec
int
std
or
pop
xor
mov
jne
sub
lods
dec
push
adc
in
loopne
push
fcompl
mov
mov
hlt
jbe
adc
pusha
xchg
jmp
bnd
mov
push
loopne
enter
dec
dec
ficompl
or
and
pop
pop
push
sbb
test
dec
fiadds
push
mov
add
jge
xor
and
xchg
adc
mov
dec
or
jbe
gs
jmp
or
aas
pop
dec
and
lods
ficoml
xchg
mov
inc
int3
inc
jmp
pop
xor
and
xor
lea
xchg
adc
push
lock
pop
mov
repz
push
je
xor
andl
aad
add
sub
sbb
ret
roll
outsb
test
outsl
lods
pop
or
cmpb
push
adc
es
js
scas
jecxz
int3
pusha
jge
jg
mov
add
jne
ret
ret
push
stos
push
push
push
xor
mov
xchg
jg
jne
fimuls
sub
rcl
and
xchg
adc
movsl
cli
pop
cmp
test
and
push
lods
dec
xor
mov
ret
jne
dec
in
sub
fisttps
out
jb
les
bswap
cmp
pop
in
add
jbe
mov
rclb
cld
cmp
jne
lock
sbb
dec
cld
push
fwait
xor
cmp
jb
mov
fsts
mov
sub
and
sub
mov
pop
xor
cwtl
jno
es
in
mov
push
cmpsl
lahf
cmpsb
push
adc
mov
cld
push
nop
outsb
adc
mov
movsb
popf
sub
dec
fdivs
test
js
dec
ret
jp
xchg
dec
daa
sub
xchg
inc
int3
push
inc
rolb
pop
loope
push
push
jb
pop
pop
mov
push
gs
xchg
adc
lea
and
push
sub
imul
fst
cltd
fstps
add
or
aam
adc
je
add
or
repz
dec
lods
lds
dec
adc
or
cwtl
mov
fisubs
das
xchg
arpl
insb
mov
data16
clc
lds
rcrb
rcrb
inc
aam
mov
cmp
fnstenv
fcoml
in
or
mov
mov
lret
dec
dec
and
dec
aad
test
jnp
sub
inc
orl
test
loope
jle
roll
stos
jp
fdivl
inc
nop
ljmp
or
adc
add
dec
push
movsb
fcoml
add
sarb
add
mov
cmp
adc
faddl
and
rclb
jbe
or
xchg
hlt
arpl
test
in
repnz
jl
fnstenv
push
jp
push
xor
jmp
rcrl
hlt
and
pop
push
inc
jl
pusha
jl
jmp
scas
and
adc
cltd
rclb
pop
outsl
lret
inc
ja
loopne
sbb
xchg
dec
push
add
mov
es
push
jmp
and
pop
sti
and
divss
push
rcl
mov
push
xchg
push
dec
lcall
dec
push
shll
push
adc
add
lahf
mov
shr
into
dec
icebp
fsts
and
push
push
outsb
cmp
inc
inc
pop
subl
pop
js
or
rep
testb
mov
lret
xlat
rclb
fstps
xor
mov
ret
inc
adc
and
movsb
xor
js
enter
lea
testb
sbb
or
lcall
mov
sub
sbb
ljmp
dec
dec
cmp
jg
cmpsb
bswap
fs
pop
or
lahf
mov
pop
test
and
sub
add
push
mov
loop
push
hlt
xchg
outsl
xchg
push
push
pop
imul
rcl
cmpl
inc
mov
sub
xor
dec
ficomps
out
sub
movsb
adc
in
dec
pop
lret
pop
adc
sbb
ljmp
adc
call
test
int3
shrb
xchg
mov
movsb
jae
mov
cs
call
nop
outsb
data16
and
push
dec
or
scas
or
cld
add
or
adc
mov
arpl
sub
push
fs
jbe
test
cmp
test
pop
stos
insb
inc
lret
pop
mov
mov
pop
dec
inc
inc
xor
sub
pop
lods
pop
pop
lret
lds
and
sbb
fwait
inc
lods
adc
cmp
push
sub
test
ret
shrl
mov
popa
lock
jnp
mov
jge
jecxz
je
mov
push
clc
mov
in
push
orb
mov
pop
push
das
jne
xor
movsl
cld
inc
fcomp
in
cmp
push
jne
mov
pop
push
lea
mov
or
jge
push
lret
call
cld
cmpsb
or
ss
push
inc
push
pop
andl
loop
jle
mov
and
pop
jbe
push
mov
push
jl
out
das
in
cmp
fdivrl
shlb
sub
cmp
jmp
cmpsl
jp
jnp,pt
leave
xchg
inc
mov
hlt
scas
and
in
mov
movl
lods
test
push
sbb
dec
std
sbb
dec
fidivl
clc
bound
add
inc
adc
fs
ficoms
test
ds
jae
push
push
adc
lods
fisubs
push
pusha
push
mov
jge,pt
inc
push
cmpsb
outsb
dec
es
pushf
dec
call
movsb
inc
cs
dec
mov
adc
sub
inc
adc
xor
dec
lcall
sbb
mov
inc
loop
divl
and
pop
test
xchg
or
jne
or
dec
adc
sbb
fcoms
bound
push
cmp
xor
xor
cmp
leave
sub
mov
dec
and
sub
dec
dec
pop
jbe
sbb
mov
nop
popa
mov
add
shll
push
sub
inc
xor
or
xchg
ljmp
cmp
adc
lock
dec
sbb
scas
push
call
adc
cld
xchg
dec
mov
push
xchg
adc
and
das
xchg
cmp
lret
jl
stos
xor
mov
mov
and
cmpl
mov
imul
adc
icebp
in
cmp
dec
push
push
int
daa
outsl
inc
repz
flds
pop
icebp
shrl
outsl
dec
in
or
or
dec
lock
loop
rclb
scas
cld
mov
pusha
xor
add
pushf
ficoms
leave
aad
xchg
inc
sub
mov
xchg
cmp
jbe
push
mov
or
jmp
in
jle
mov
cld
inc
dec
adc
mov
pop
mov
push
leave
call
lods
push
test
pop
push
cld
call
leave
cmp
inc
mov
add
nop
test
and
xor
fdivs
scas
les
dec
push
and
sbb
xor
mov
or
gs
lea
out
shrl
aas
nop
cmp
jecxz
adc
mov
pop
idiv
xchg
sbb
dec
pop
sbb
and
nop
sarb
dec
add
mov
icebp
fisttpll
lahf
rolb
jmp
push
mov
mov
call
pop
sti
in
sbb
push
imul
push
jb
and
stc
xchg
into
or
add
cmp
pushf
lea
clc
dec
mov
push
out
xchg
sub
pop
adc
stos
and
mov
call
cmp
cmp
nopl
sub
or
push
pop
sbb
xor
ljmp
sub
and
jne
cli
dec
shlb
movzbl
adc
xor
out
or
or
mov
in
inc
and
dec
xor
sub
out
push
cld
dec
sbb
aas
decb
dec
cmp
adc
gs
lret
enter
movsl
jne
adc
mov
fiadds
sbbl
movsl
inc
lods
sti
addr16
mov
xor
and
cmpb
in
imul
and
mov
mov
and
clc
jnp
push
cli
pop
sub
lock
call
cli
jbe
cwtl
testl
inc
inc
rclb
pop
cmp
and
sub
mov
jnp
lahf
and
push
xchg
push
movsb
int3
add
mov
inc
aad
adc
je
lods
clc
pop
sub
jmp
out
data16
sub
mov
into
push
mov
out
jne
lods
cmp
mov
imul
mov
sub
push
jge
push
je
mov
jae
adc
pop
push
or
daa
lds
ss
pop
mov
xchg
adc
lock
jp
stos
mov
je
mov
sub
inc
adc
test
mov
mov
add
aas
jmp
stos
inc
or
fistpll
dec
cmc
sar
sub
mov
das
jl
dec
pop
mov
or
pop
lods
fdiv
pop
lock
adc
adc
jmp
or
loopne
mov
mov
shl
dec
pop
add
push
push
mov
in
and
push
add
adc
push
pop
syscall
jg
xchg
lds
sub
les
jle
addr16
out
movsb
add
sbb
les
subl
adc
xchg
dec
mov
popf
or
jae
mov
popf
push
or
rclb
sbb
mov
roll
xchg
sub
cld
enter
sbb
call
es
cwtl
shr
jmp
ds
lcall
jo
dec
dec
in
ds
mov
xor
push
ret
jns
push
clc
enter
push
xor
adc
clc
out
lds
mov
or
arpl
sbb
adc
test
lods
pop
or
loopne
arpl
aam
mov
repnz
or
pop
and
sbb
xchg
add
lods
push
and
push
sub
mov
popa
or
loop
sbb
push
adc
popf
mov
mov
push
dec
fldcw
dec
jmp
jae
popf
cmpsl
sub
xor
in
lcall
mov
mov
sub
imul
ss
test
xchg
sub
pop
icebp
pop
xchg
cs
sub
adc
adc
stos
mov
sarb
adc
ret
adc
jne,pt
pop
outsl
dec
rcll
mov
pop
stc
mov
aas
fldl
insb
cmp
sbb
andl
sbb
test
jbe
push
xlat
fwait
roll
lods
scas
lea
pop
push
roll
add
andl
pop
add
data16
add
mov
sub
lret
shll
xchg
data16
inc
add
jmp
dec
dec
sbbb
push
push
dec
ja
mov
call
inc
xor
xor
add
das
jg
xchg
xor
jb
sub
push
mov
or
incl
or
js
jmp
sub
ja
add
sub
neg
push
stos
out
prefetch
or
push
push
lret
leave
jge
leave
push
cmp
dec
aas
and
lret
lea
mov
sub
inc
lahf
arpl
shll
jle
cmc
rcr
push
shll
fstpl
xor
and
dec
shrl
sub
scas
aam
pop
fstpl
jle
lea
or
mov
fstl
fcomp
or
dec
addr16
cmp
adc
outsb
aad
adc
add
inc
fdivrl
mov
jo
jo
test
mov
inc
pop
xor
mov
mov
call
inc
dec
out
enter
sbb
call
incb
or
sbb
sub
sub
shrb
aam
fistl
lahf
in
fidivl
sbb
mov
jge
mov
or
daa
rcrb
dec
or
js
dec
test
bound
aas
adc
dec
sub
xchg
nop
lock
ss
add
jb
dec
jle
mov
mov
test
xchg
repnz
sti
test
sti
test
adc
loopne
in
adc
jne
in
leave
outsl
add
adc
shll
xchg
repnz
cmp
jmp
lock
popf
xchg
hlt
ss
pop
inc
loopne
mov
mov
xchg
rol
push
xor
pop
pusha
les
cmp
hlt
int
repz
in
pop
xchg
add
jmp
xchg
sar
jbe
ret
jle
xor
movsb
adc
js
cli
movsl
xchg
sub
cmp
mov
aam
sub
fs
xchg
jmp
mov
adc
mov
mov
xchg
pop
inc
fimull
mov
cwtl
in
xor
js
xchg
pop
mov
enter
and
adc
ret
push
jge
mov
ja
adc
enter
adc
push
inc
enter
int3
daa
pop
outsl
jno
popa
pop
int3
or
call
inc
cli
lea
int3
test
movsl
cmp
test
and
mov
fs
es
enter
mov
or
shlb
inc
adc
or
or
add
xchg
xor
ljmp
add
adc
call
dec
add
testl
sub
jg
jmp
mov
mov
punpckhbw
jno
inc
dec
mov
dec
scas
lret
sub
xchg
call
dec
pop
cmc
push
sub
jmp
inc
push
jbe
aas
inc
mov
or
or
xor
cltd
stos
and
cmp
jg
jnp
push
add
pop
pop
int
sub
jb
mov
sub
pushf
sti
fimuls
cld
fucomip
std
fs
std
lds
jmp
stos
pop
mov
pop
sbb
xor
test
cmc
dec
xor
and
sub
jmp
xchg
or
push
leave
and
aam
cmp
inc
adc
pop
mov
pop
push
sub
dec
pop
orl
adc
or
inc
jp
repz
sub
or
mov
popa
movzbl
push
fcoml
mov
sti
iret
fistpll
dec
movsb
xchg
fwait
push
add
dec
ljmp
jmp
ljmp
push
push
xchg
lret
push
enter
movsl
and
cld
out
loop
aam
insb
adcb
pop
out
je
mov
ljmp
adc
xor
sub
ffreep
jmp
lea
repz
xchg
push
push
outsb
add
ds
mov
icebp
mov
push
mov
xchg
aad
or
sub
cmpsl
jbe
cli
pop
mov
sarb
popf
fstl
and
mov
or
inc
adc
clc
sti
dec
and
or
in
cmp
or
sub
lcall
and
xchg
ret
data16
pop
jge
cmp
push
test
inc
mov
lock
sbb
push
add
rcr
call
stos
dec
hlt
pop
cltd
loopne
clc
jmp
cmp
ss
adc
ja
adc
mov
sbb
adc
cli
shrl
loopne
adc
in
cmpsb
popf
xchg
cltd
mov
fsub
jae
push
xchg
call
adc
jmp
incb
enter
xor
xor
lds
sub
daa
fisubl
mov
sbb
xchg
push
nop
push
mov
enter
pop
shll
add
adc
push
shlb
dec
rorl
cmp
xchg
sbb
xlat
push
stc
movsl
data16
call
mov
stc
repnz
pop
aam
add
adc
cmp
mov
sbb
xchg
leave
mov
jo
outsb
lock
sub
pusha
bnd
xlat
je
xchg
lds
mov
cmpsl
popf
sub
inc
xchg
ss
aas
push
and
adc
xor
shll
dec
or
xchg
and
jne
or
fs
in
or
pop
push
pop
xchg
mov
xchg
jb
insl
loop
pop
mov
adc
jmp
and
mov
xchg
and
pushf
and
mov
jge
and
sbb
mov
daa
inc
cmpsl
adc
int3
wbinvd
mov
call
icebp
xchg
call
push
adc
ja
and
imul
xchg
cmpsb
adc
xor
mov
and
lock
or
repz
jmp
gs
loope
push
or
push
sbb
adc
arpl
cmpl
xchg
bnd
cmpsb
pop
lock
inc
pop
adc
cs
adc
adc
inc
sahf
adc
dec
xchg
cwtl
pop
or
sub
mov
pop
ljmp
sti
pop
mov
je
jp
out
mov
and
cmc
cwtl
test
movsl
movsb
pop
loop
es
mov
stos
sub
add
dec
loopne
mov
pop
test
sbb
loope
mov
daa
in
divb
adc
and
out
cmpsb
inc
orb
cmp
pop
pop
lods
mov
mov
sub
mov
cmp
push
adc
call
jno
pop
dec
and
in
out
mov
push
mov
inc
mov
dec
test
sub
dec
rolb
and
ret
xor
fldl
mov
lds
mov
sbb
daa
pop
sbb
loopne
cld
sub
enter
sub
jae
sbb
sub
mov
cs
jmp
enter
sbb
mov
xor
aaa
pop
fs
movsl
shr
jecxz
cld
sub
pop
aas
xchg
ja
mov
jnp
iret
cmp
dec
or
test
or
pop
or
add
mov
inc
mov
inc
xor
adc
inc
adc
dec
cld
dec
movsb
add
push
daa
jne
sub
sbb
inc
xor
and
and
test
pushf
push
call
xchg
nop
jle
ret
out
inc
lahf
test
mov
and
loop
stc
daa
loope
jmp
xchg
xchg
cmc
mov
aaa
ret
lea
inc
jns
fiadds
test
mov
mov
clc
lea
push
xchg
into
xchg
inc
xor
call
in
jno
es
sub
add
or
mov
or
jg
popa
mov
push
or
mov
test
jo
dec
cmp
or
mov
cld
jae
dec
pop
jb
cmpsb
or
dec
xor
mov
jmp
xchg
jl
dec
cmpb
or
jmp
jbe
leave
cmp
shlb
jo
mov
mov
paddb
cmp
loop
sub
mov
xchg
jge
movsb
pushf
arpl
push
cmp
cmpb
das
data16
out
ret
fsubrs
sti
dec
gs
or
movsb
loop
ds
aas
or
dec
dec
addr16
popl
aas
lret
mov
sar
std
or
shll
movsl
out
add
je
mov
call
inc
xorb
mov
jns
sub
sub
jp
in
or
in
sub
clc
mov
push
leave
inc
or
repnz
add
inc
dec
repz
in
jnp
pop
jns
decb
mov
cmp
inc
sbb
sub
adc
and
lret
sub
stos
inc
dec
daa
mov
clc
mov
cmpsb
dec
push
lret
xchg
push
adc
push
xchg
mov
mov
push
adc
dec
xchg
and
sahf
js
dec
and
sti
sub
stc
es
mov
mov
push
sbb
add
inc
into
call
sub
jmp
sbb
inc
or
ja
or
push
sbbb
daa
inc
adc
pop
data16
lea
popa
aam
push
push
outsl
mov
cmp
pop
popf
fstpl
mov
fcoms
pop
outsl
mov
mov
fs
inc
jb
sub
les
push
and
and
fmull
mov
mov
stos
les
and
cltd
fsubrl
mov
xlat
mov
je
addr16
push
adc
push
adc
mov
orl
mov
push
movsb
jno
add
mov
adc
push
pop
cld
xchg
inc
int3
fdivrs
add
fimull
loopne
imul
test
lock
adc
stos
sub
mov
xor
gs
fcompl
aam
adc
jne
out
mov
jno
xchg
pop
ljmp
pop
test
outsb
daa
popa
insl
jge
sub
push
je
cmp
jp
xchg
sbb
icebp
incl
cmp
cs
xor
mov
call
sbb
addr16
or
call
mov
push
mov
xor
xor
rcll
cmpsl
aas
push
call
add
inc
or
or
fldl
lahf
mov
std
mov
adcb
sub
and
jle
push
inc
dec
pop
xor
add
or
sub
andl
or
pop
test
lock
loope
adc
cmp
mov
idivb
xchg
or
mov
or
push
stos
loopne
cld
scas
mov
or
popa
cmp
sbb
or
cld
or
xchg
cmpsl
cvtps2pd
mov
test
arpl
test
mov
cmp
push
lea
xor
jo
das
mov
jg
sub
enter
sbb
sub
and
jmp
push
sub
xor
mov
jle
push
xor
push
push
call
or
or
hlt
xchg
xor
or
inc
pusha
sbb
ror
add
inc
iret
rcrb
inc
leave
add
cmc
lods
pushf
and
shlb
xchg
inc
sti
pop
jo
pop
push
fcmovnb
and
aas
arpl
aam
dec
enter
in
and
and
sub
xor
inc
dec
dec
mov
fs
xchg
mov
fmuls
or
je
mov
push
pusha
leave
pop
in
jb
adc
add
int3
adc
inc
out
and
out
in
sbb
bound
sbb
movsb
pop
xchg
call
jae,pn
ja
push
mov
sbb
cmc
les
push
mov
inc
mov
add
inc
inc
roll
dec
enter
mov
orb
xor
cmc
sarb
jmp
je
and
mov
leave
push
int3
pop
shr
cmp
xor
xchg
mov
jge
and
data16
push
cmpl
add
fdivs
loopne
xchg
fistpll
mov
and
or
int
adc
loope
fcoml
xchg
add
adc
nop
sahf
loop
xor
mov
and
push
mov
and
or
lea
cmp
push
lret
cmp
cmp
adc
xchg
insl
andl
pop
je
mov
sti
sbb
or
dec
ljmp
pop
aam
mov
es
or
out
and
clc
mov
push
hlt
pusha
xchg
inc
into
cwtl
inc
xor
test
jle
aas
enter
adc
fs
xchg
fimuls
push
add
and
loop
stos
push
mov
in
insb
and
dec
sbb
ja
cmp
pop
lods
jmp
or
adc
sub
push
pop
cli
scas
ss
and
adc
dec
mov
adc
test
dec
jg
int
push
or
or
adc
xor
cld
stc
xchg
sbb
test
cmp
inc
and
xor
outsb
fldl
xor
dec
aas
mov
jp
shrb
add
jne
daa
jb
push
pop
daa
and
popf
orb
pop
je
xorl
and
enter
dec
xor
dec
lock
push
mov
pop
dec
xlat
jmp
mov
xchg
mov
lret
mov
movsb
cmc
pushf
arpl
outsl
mov
std
je
adc
jbe
test
adc
xchg
adc
mov
and
movsb
mov
in
jno
enter
adc
enter
popa
repnz
xchg
loope
movsb
mov
and
push
shll
jne
jp
lods
bound
das
mov
sub
mov
nop
adc
mov
add
push
insl
test
test
rol
or
jmp
and
or
pop
and
sub
cmp
mov
xchg
imul
push
jmp
xchg
iret
ret
cmp
adc
jmp
std
pop
add
or
nop
or
or
pop
and
jnp
adc
pop
xchg
mov
gs
lock
push
xorl
push
outsb
test
addl
jmp
sbb
inc
dec
push
add
call
mov
je
sahf
jne
adc
out
inc
add
or
sub
jmp
sub
or
and
fmuls
mov
push
adc
rorb
les
push
or
jmp
sbb
adc
sysenter
mov
js
cmp
and
jo
push
cmp
cmp
push
add
or
addr16
add
add
push
add
jns
js
cmp
pop
adc
ljmp
or
stc
push
mov
mov
pop
jg
jne
inc
sub
pop
or
scas
cmp
lods
xchg
mov
loopne
push
add
push
jmp
sbbb
ret
add
jae
pushl
push
sbb
and
or
in
lea
adc
dec
add
jbe
stc
or
or
icebp
cld
bound
add
inc
loope
mov
mov
add
and
mov
mov
cli
aad
js
add
sub
push
cwtl
aaa
add
dec
mov
gs
sub
or
jl
std
mov
cld
les
je
movsl
pop
jp
inc
dec
addr16
sbb
movsl
pop
scas
pusha
out
pop
jae
insl
adc
jle
scas
arpl
push
mov
mov
out
cmpsl
daa
mov
ret
mov
cld
in
mov
shlb
inc
adc
ficoml
add
jne
test
in
or
jle
and
jg
or
pop
lock
loopne
mov
mov
add
or
fidivrs
xor
call
sahf
sub
rorl
or
sbb
in
xor
adc
adc
xchg
bound
sub
test
mov
adc
icebp
pop
ljmp
push
dec
xorb
and
cmp
scas
leave
mov
jmp
movsb
imul
sub
xor
test
and
push
pop
clc
xchg
das
cltd
dec
jge
daa
jmp
jbe
inc
or
adc
bound
nop
mov
pop
imul
push
adc
sub
add
leave
xor
push
or
inc
mov
jg
inc
sbb
pop
mov
cmp
pop
push
in
and
pop
pop
jl
adc
sbb
repnz
mov
add
jmp
or
xchg
gs
xor
mov
sti
test
xor
jb
sbb
adc
and
sti
or
push
call
inc
sbb
mov
test
jmp
xchg
sub
outsl
iret
rorl
clc
jmp
out
stc
insb
sub
adc
sbb
dec
push
cwtl
mov
mov
jmp
dec
nop
pusha
jno
call
sub
adc
and
dec
mov
inc
sub
adcl
adc
aas
arpl
fmull
xchg
shll
inc
pop
cmpsb
pop
sbb
pop
sahf
xor
push
mov
dec
mov
add
mov
push
mov
test
dec
pop
pop
loop
or
lock
dec
jno
int3
jne
push
int3
jnp
inc
pop
test
movb
xchg
push
or
xor
push
jmp
ss
dec
dec
sub
or
push
arpl
xchg
dec
xchg
fs
lret
and
in
lods
out
pop
dec
je
xor
std
dec
pusha
dec
or
adc
rorl
ret
into
sbb
mov
cs
jno
pushf
ss
adc
dec
push
jbe
pop
data16
jne
or
add
push
in
or
jmp
fidivrs
aam
adc
jne
dec
je
xchg
cs
push
test
or
mov
mov
daa
sarl
mov
or
lahf
loop
or
sub
loopne
leave
xchg
dec
adc
mov
or
popf
data16
lahf
pop
scas
orb
xor
lea
cmp
lds
inc
and
xor
add
and
lea
sbb
inc
cmpl
and
cmp
movl
pop
dec
pop
lea
inc
pop
hlt
arpl
mov
andl
jmp
dec
incl
inc
push
inc
push
pop
ficomps
clc
ja
or
jnp
add
add
adc
loopne
mov
enter
jl
pusha
dec
add
fistps
adc
testl
iret
dec
add
loop
int3
test
and
jae
sub
addr16
sub
jne
ret
fwait
sti
and
and
repnz
xor
jb
or
add
push
in
nop
dec
stc
adc
pop
adc
js
mov
shll
adc
pop
lsl
push
add
sub
cmp
add
push
mov
out
in
xor
imul
add
adc
repz
xchg
dec
or
jle
jmp
ja
into
adc
xor
je
scas
mov
jae
jmp
dec
xchg
rcrb
sub
mov
xchg
xchg
inc
mov
xor
cltd
pop
cmp
pop
cld
mov
or
pop
cwtl
push
orl
insl
or
ds
and
xlat
dec
cli
jbe
bound
xor
and
pop
lea
pusha
xchg
rclb
or
movsb
xor
or
adc
call
cmp
addl
rorb
nop
mov
mov
out
mov
mov
or
incb
popa
pop
cltd
jg
jnp
push
and
cmp
sub
cmp
and
or
pop
jns
ret
shufps
cmp
inc
pop
jge
orb
subl
add
loopne
xchg
ror
das
push
hlt
adc
cmp
ja
inc
xor
cmp
jmp
pop
inc
jnp
or
mov
pop
sbb
daa
and
dec
mov
loope
add
add
scas
lret
rcrl
rolb
cli
les
mov
jle
in
cmpsl
inc
scas
loope
hlt
in
jg
rep
jb
movsl
movl
xor
add
hlt
sub
fbld
cmp
into
add
add
xbegin
mov
ret
cmp
mov
lea
popf
or
mov
dec
lods
outsb
pop
faddl
inc
push
int
mov
cmp
pop
sbb
pop
add
pop
cmp
iret
mov
xchg
scas
lcall
and
push
ffreep
mov
subl
adc
out
pusha
pusha
call
lds
mov
inc
jae
inc
pop
pop
lea
xor
fdivrp
or
adc
insl
fdivrs
cmp
stos
cmp
or
adc
je
pop
and
adc
and
cmpsb
add
jg
push
push
push
sbb
mov
mov
std
cmc
xor
test
sahf
sahf
mov
jmp
push
and
lods
outsl
push
fs
sbb
mov
cmp
adc
add
rolb
dec
and
nop
push
add
add
cs
jl
ret
je
jmp
adc
sbb
lock
ret
int
or
mov
lds
pop
dec
jae
mov
mov
jae
pop
call
fs
movsb
pusha
pop
inc
nop
lcall
mov
ljmp
xchg
movsb
mov
xchg
push
jnp
push
es
pop
jg
jge
popf
mov
sbb
lods
inc
jne
repnz
mov
cmp
dec
gs
dec
mov
cmpsl
insb
and
adc
mov
mov
sbb
pop
jae
aas
test
xchg
pop
or
cltd
xor
inc
xor
in
dec
nop
lcall
mov
mov
sub
nop
pushf
pop
jmp
out
mov
jns
push
leave
test
js
adc
mov
xchg
orl
rcrl
imul
pop
jns
push
mov
stc
fsin
and
mov
jo
add
rorl
xor
add
xchg
dec
add
jmp
mov
dec
mov
pop
and
mov
fs
aas
cs
test
inc
lods
enter
je
push
jbe
inc
add
nop
adc
js
inc
adc
xchg
testl
pop
push
and
ret
adc
mov
enter
stc
mov
int3
ret
gs
cmp
mulb
enter
xchg
mov
push
fs
cmp
aaa
mov
jg
mov
js
in
xor
dec
mov
and
sbb
test
leave
test
sbb
loope
push
insl
sbb
movsl
ficoms
add
jg
mov
adc
cltd
xor
xchg
push
pop
mov
push
push
andl
push
setnp
jmp
or
test
addr16
inc
push
dec
fs
jp
and
xor
pop
xchg
pusha
stos
je
sti
mov
pop
cmc
test
decl
test
mov
push
in
inc
pop
adc
or
rcrl
push
ljmp
out
sub
cmp
add
mov
stc
aaa
dec
xchg
jns
scas
icebp
into
shrl
or
in
jns
ds
dec
jmp
and
fwait
andl
push
popf
jge
js
out
or
dec
add
add
add
dec
mov
test
xor
push
mov
mov
cmp
inc
xchg
push
lods
dec
sub
mov
repz
adc
cmp
sub
sub
adc
push
xchg
aad
mov
dec
ds
add
icebp
aam
add
or
sti
inc
je
push
je
addr16
push
stc
push
aam
sub
pop
mov
push
jo
inc
scas
mov
xorl
or
movsb
mov
adc
or
xor
or
movsb
and
adc
adc
and
out
sub
popa
inc
mov
mov
dec
or
dec
out
addr16
call
gs
lea
js
adc
jmp
aaa
test
test
loope
repnz
dec
xor
dec
cvttps2pi
dec
stos
inc
scas
pop
jg
and
shlb
jmp
ss
es
js
or
push
es
inc
jae
or
inc
push
and
dec
pushf
and
or
cs
jge
adc
add
xchg
push
mov
inc
or
rorl
or
push
es
out
xchg
adcl
push
sar
or
call
mov
cmp
int3
cmpsb
xor
in
mov
adc
aad
rorb
nop
adc
lahf
mov
mov
jle
mov
movsb
mov
inc
in
xor
mov
int3
push
sub
sub
mov
mov
mov
loop
or
or
iret
or
xchg
push
rorb
dec
in
adcb
xor
shll
cmp
arpl
sbb
dec
popa
pop
leave
or
test
cmp
addl
inc
enter
inc
adc
shlb
and
rorb
and
pusha
lahf
or
ja
test
pop
fnstcw
mov
and
shrb
mov
hlt
addl
cmp
push
adc
jle
movsl
inc
cmp
pminsw
adc
test
push
jo
or
push
jmp
lock
fucomi
push
sub
cmp
dec
push
xchg
bound
push
jb
mov
dec
mov
push
xor
xor
les
shlb
sbb
dec
push
cmp
sub
xor
icebp
sub
and
adc
dec
push
push
inc
imul
xor
xchg
je
mov
xor
dec
xchg
adc
cwtl
fs
enter
jo
in
out
loope
add
das
into
cmp
std
or
ret
mov
cwtl
lock
add
testb
lahf
icebp
push
adc
mov
jmp
mov
loopne
pop
dec
mov
add
sysexit
xor
adc
or
out
mov
or
push
xchg
mov
in
call
push
jmp
add
cwtl
inc
notl
or
loope
mov
and
xor
xor
mov
aas
xchg
xlat
inc
pop
cltd
sbb
in
stos
xchg
insl
or
mov
adc
es
push
test
mov
mov
les
cld
inc
cmp
jge
or
or
sub
sub
sti
sbb
sub
xchg
or
dec
add
stc
mov
sub
imul
jae
lret
sub
stos
leave
sub
call
fsubr
cmp
les
jo
and
jne
push
push
and
bound
es
sub
and
decl
jle
jmp
sar
inc
add
enter
rorb
jae
jmp
nop
sub
cltd
inc
into
adc
sbb
jmp
jo
scas
mov
xchg
nop
jmp
mov
movsb
and
and
enter
dec
lods
imul
clc
sub
sub
adc
dec
je
cmp
add
pop
arpl
test
xchg
push
or
cmp
sbb
sub
mov
mov
jne
cmpsl
sbb
sbb
lret
adc
push
or
pop
sbbl
adcl
adc
add
add
or
and
jmp
and
or
add
test
inc
mov
xlat
and
into
imul
push
cmp
test
xchg
mov
shrb
mov
mov
sub
cwtl
push
iret
sbb
ljmp
setno
and
jmp
out
pop
gs
pop
jae
add
inc
inc
aas
and
adc
clc
out
xchg
jmp
movsb
imul
sub
adc
sub
call
mov
es
hlt
adc
jne
lea
dec
dec
or
data16
stos
or
enter
pop
mov
or
mov
loopne
xlat
jno
add
imul
cld
mov
mov
lret
cmp
je
pop
or
jne
mov
mov
les
adc
je
stc
pushf
enter
cmp
cmpsb
das
and
jmp
dec
ja
xchg
or
cmp
imul
arpl
or
fbld
or
idivl
xor
fstp
or
xlat
or
mov
adc
add
loop
arpl
sbb
fisubrs
or
fistl
jb
add
and
int3
cmp
or
mov
adc
sub
cmp
or
jp
movsb
add
push
adc
add
into
push
daa
or
push
roll
add
jp
cmp
adc
or
ljmp
sbb
stc
inc
or
add
adc
in
sbb
adc
add
adc
or
push
sub
adc
jb
or
repnz
push
add
cmc
or
add
inc
sbb
mov
cmpl
cld
sub
cmp
or
arpl
pop
jae
sub
mov
sub
add
push
cmp
mov
fcoms
xor
jbe
in
enter
sbb
call
enter
daa
push
push
clc
mov
xor
xchg
add
sub
sbb
cmp
mov
push
neg
adc
push
pop
cwtl
imul
rolb
hlt
js
jg
cmpsb
mov
add
cmp
push
add
sbbb
push
push
adc
addr16
pop
mov
pop
lahf
in
xchg
jbe
stc
adc
lcall
inc
push
mov
mov
test
push
daa
push
gs
fs
and
mov
pushf
push
add
push
ljmp
call
xchg
adcl
dec
jecxz
adc
in
cli
mov
loope
int3
or
mov
lods
adc
pop
roll
mov
sub
clc
adc
ret
je
or
jne
add
mov
imul
xchg
cld
and
and
daa
loope
outsb
movsb
pop
mov
insl
js
xchg
jne
insb
cwtl
and
jge
xchg
fimuls
dec
add
iret
daa
sub
inc
sbb
in
mov
or
add
pop
sub
nop
clc
xor
pop
shlb
rclb
fdivrp
das
mov
jge
dec
sbb
adc
add
cmp
jle
lods
push
adc
stc
pop
dec
dec
pop
inc
cmp
and
lea
jo
lock
mov
cld
movsl
add
scas
in
test
shl
sbb
out
imul
push
mov
cmp
lods
pushw
les
dec
adc
fcmovne
xchg
mulb
in
ret
loopne
push
lods
push
sub
push
cmp
xchg
lock
jl
add
add
pushf
add
fcomps
push
mov
int3
jae
xor
decl
call
or
lock
loopne
lods
cmp
sbb
cwtl
add
push
push
mov
add
mov
xor
sbb
fdivl
mov
inc
add
cmp
push
sbb
adc
sub
lock
and
idivb
adc
sub
pop
sub
jmp
cmp
jns
sbb
cwtl
adc
pop
and
jmp
dec
add
add
push
xor
test
pop
jmp
mov
or
push
ret
stc
loopne
and
push
mov
push
push
jmp
aas
jge
xor
add
lea
movsl
pop
mov
dec
hlt
repnz
pop
jmp
mov
add
pop
ja
sub
xchg
add
shr
jne
decb
push
add
test
ret
inc
out
int
sbb
in
enter
inc
add
arpl
mov
in
add
adc
sbb
jle
add
jns
clc
popa
leave
adc
dec
push
cmp
or
fadds
mov
clc
dec
sbb
call
jbe
push
sbb
insb
or
push
je
adc
lret
push
mov
cli
xor
faddl
inc
adc
add
adc
adc
cmp
jne
inc
inc
mov
adcl
pop
fstp
jnp
and
jne
xchg
mov
mov
dec
iret
or
add
dec
loopne
mov
pushf
cld
decb
fisubs
scas
das
pop
sub
jne
sbb
jns
movsb
mov
pmuludq
inc
andb
add
rclb
and
popa
sub
adc
sbb
cmp
test
and
jmp
adc
mov
inc
andb
cmp
mov
push
or
jne
pop
aam
stos
rclb
xchg
aaa
jo
jbe
sbb
lcall
lret
movb
jmp
jle
and
sub
sub
or
sub
push
xchg
dec
add
test
in
xor
pop
add
dec
cwtl
dec
mov
mov
jmp
fnstenv
fstpt
iret
mov
sub
hlt
jg
movsl
cmp
adc
mov
sub
sub
inc
sbb
jmp
jge
inc
adcb
or
push
cld
ds
push
or
cwtl
fadds
mov
mov
loopne
aas
add
fmuls
mov
adc
fisubs
cmpsb
test
fsubp
jmp
loop
mov
jb
sub
addb
push
cli
push
enter
push
aam
push
cltd
test
xchg
je
push
and
cmp
dec
add
gs
mov
jmp
scas
push
cmpsb
pop
xchg
adc
dec
mov
xchg
outsl
stc
sub
and
aaa
rclb
call
push
pop
jbe
shlb
andl
mov
enter
mov
frstor
xor
jmp
movsl
popf
inc
sbb
int3
sbb
mov
bound
add
push
sub
jb
pop
add
or
lock
fwait
shl
push
jg
imull
inc
and
xor
xchg
cmp
dec
xchg
cmp
xor
popa
jmp
sti
pop
pop
popf
xlat
cmpl
jb
subb
adc
xorb
ljmp
pushf
scas
inc
add
sarb
lods
adc
shr
xor
orb
insb
stos
test
jmp
cmc
sbb
lock
dec
sub
adc
xor
sarb
add
je
cmp
pop
pusha
push
mov
es
imul
enter
jmp
push
lock
lcall
add
jmp
icebp
daa
sbb
mov
xchg
cmp
or
cwtl
xor
sbb
adc
xor
jne
push
jmp
out
aam
leave
movsb
repz
inc
outsb
cmp
shlb
xchg
enter
xor
sub
stc
loopne
jmp
gs
movsb
mov
inc
std
dec
and
pop
mov
jne
stos
inc
xchg
cmp
loope
cmp
subl
mov
int3
or
sub
sub
inc
mov
int3
add
das
sub
or
clc
jmp
cmp
dec
fcompl
cmp
aad
inc
popf
std
cmpsl
mov
dec
xor
test
cmp
jp
inc
movsb
adc
mov
push
mov
ss
sub
stos
test
mov
lods
mov
inc
add
je
add
shl
or
mov
push
inc
and
dec
add
lea
dec
mov
dec
sub
mov
xor
push
je
call
or
jmp
loop
movsl
adc
mov
dec
or
sub
addb
in
fmuls
xchg
sbb
rol
sub
sbb
lcall
or
in
mov
leave
jmp
int
cli
in
sbb
inc
adc
inc
push
rorl
push
dec
or
adc
mov
or
adc
push
js
jp
jl
jle
pop
add
xchg
insl
sub
outsb
and
xor
xor
enter
add
popf
add
arpl
and
dec
aaa
pop
jb
sbb
mov
popf
add
or
loop
cmp
push
adc
adc
adc
hlt
add
add
std
insb
cli
roll
push
and
shlb
adc
add
pop
call
or
adc
sbb
sbb
adc
add
inc
add
or
or
lret
adc
sbb
push
aam
jecxz
hlt
jg
add
adc
add
sub
sysexit
pop
or
push
jge
dec
mov
das
cmpsb
or
ljmp
lock
dec
cmp
jg
jae
ja
je
jmp
xor
cmp
inc
inc
mov
jb
cmp
jae
fs
pop
bound
pop
addl
stos
aad
mov
hlt
sbb
out
cmp
sub
dec
cmp
das
jg
add
mov
jp
cltd
idiv
xor
scas
enter
xor
adc
sub
pushl
aaa
push
ret
adc
je
std
jb
or
push
lahf
jbe
pop
mov
test
cli
xor
mov
mov
movsl
push
andb
incl
cli
cmp
jge
jge
out
push
imul
push
add
cmp
jl
jmp
and
fldl
push
mov
and
mov
pop
clc
mov
jno
xor
add
sar
and
push
pop
daa
je
pop
or
mov
adc
cmc
clc
jecxz
adc
gs
xchg
out
push
xchg
mov
mov
movsb
std
adc
add
call
inc
and
cmpsl
mov
adc
sub
test
and
inc
push
call
sub
xchg
inc
into
mov
insb
sahf
push
cmpsb
xchg
mov
jne
adc
aad
clc
fsubr
jb
pop
pop
data16
dec
and
pop
or
es
hlt
cltd
fistps
pop
mov
out
mov
jle
shrl
popf
shrb
data16
adc
push
addr16
adc
in
add
subb
add
std
mov
fstps
aas
sbb
insl
aam
nop
xor
push
mov
subl
and
dec
lock
call
in
push
lods
imul
int3
cs
push
push
xchg
cmp
ja
lea
stos
jge
mov
dec
sti
sbb
sub
sbb
sbb
std
mov
les
in
and
mov
xchg
cmpl
and
inc
movsb
sbb
int3
xlat
xor
push
lea
xor
jmp
or
stc
and
xchg
mov
hlt
push
nop
mov
mov
nop
xor
jg
jno
add
rcll
xchg
cmc
mov
xchg
dec
dec
mov
add
or
mov
popf
cld
testl
das
jg
and
jmp
and
dec
pop
xchg
pusha
sbb
or
aad
adc
mov
mov
push
xchg
pop
mov
mov
xor
imul
movsb
inc
push
push
popf
movsl
xchg
out
sub
sub
pop
adc
sub
pop
or
or
pop
movsb
daa
jmp
or
or
xor
add
mov
sti
in
cmpsb
movsl
adc
fs
and
aam
or
pop
lret
movzbl
dec
add
xchg
lock
pop
cwtl
sbb
mov
push
arpl
pop
cmpl
xchg
push
lret
js
push
adc
push
fiadds
lea
pop
out
inc
sbb
adc
mov
icebp
jmp
push
repz
xchg
mov
dec
mov
imul
push
inc
mov
pop
jne
or
inc
add
or
xchg
popf
pushf
mov
push
xor
push
or
add
xor
pop
push
mov
xlat
int
sti
and
xchg
fs
dec
add
adc
lock
mov
or
add
add
jecxz
dec
xchg
push
mov
es
add
add
ret
das
xor
xchg
sbb
call
jne
pop
mov
cmp
inc
movsl
mov
dec
sbb
cmp
inc
mov
or
cmp
or
js
call
xlat
in
adc
xchg
jmp
add
mov
shll
fcoms
inc
sbb
push
shll
arpl
sub
mov
cmp
add
in
mov
test
sti
add
sub
mov
loope
lea
push
add
lret
fsts
stos
in
push
lods
mov
inc
call
push
add
scas
in
rep
and
add
jne
inc
daa
lret
repnz
js
cmp
in
fidivl
lea
and
addb
jle
hlt
std
xor
test
mov
je
push
call
mov
lahf
rcl
xchg
mov
and
les
cwtl
mov
xchg
push
popa
pushf
es
sub
movsb
shlb
lea
stos
sbb
jmp
mov
add
cmp
xor
mov
xor
popa
imul
lds
pop
test
xor
or
jns
and
call
sbb
mov
and
aas
push
and
add
jmp
sar
push
nop
lds
imul
inc
aas
sub
ljmp
inc
lea
and
sub
cmpb
popf
mov
outsl
xchg
add
inc
mov
adc
adc
xor
mov
outsb
je
adc
adc
or
pop
mov
xchg
push
pop
mov
push
sub
sbb
dec
ja
mov
into
dec
xor
push
mov
or
je
mov
mov
jmp
jmp
and
inc
add
cmp
add
or
jmp
sbb
add
addl
jmp
xor
dec
in
movsb
dec
push
dec
test
mov
xchg
xor
out
cmp
wbinvd
add
std
xor
add
mov
or
xor
jmp
fstps
adc
std
repnz
ss
add
jne
cmp
sti
dec
and
fcoml
cmp
das
pop
jmp
dec
aam
xchg
cmc
cmp
mov
je
dec
icebp
push
xor
or
jmp
push
cmp
jae
hlt
sub
dec
and
rolb
jl
stos
xor
dec
inc
sbb
mov
push
in
add
push
es
ret
jg
dec
cmpb
add
sarb
cmp
mov
in
inc
xlat
mov
jne
addl
and
cmp
pop
inc
fadds
mov
sbb
imul
popf
stos
push
aaa
je
cli
inc
or
adc
call
es
ds
xor
insb
inc
js
jo
fcoml
push
fdiv
scas
push
inc
mov
sub
mov
or
andb
add
jecxz
or
sbb
bound
pop
sub
repz
in
xchg
rcrb
push
xor
jnp
mov
mov
jmp
adc
leave
orl
push
mov
mov
or
push
cld
sti
mov
pop
xchg
sub
daa
xchg
popa
mov
jne
shll
sti
movsl
fcomp
repz
dec
add
aad
and
xor
cmp
scas
unpcklps
mov
cmpsb
test
daa
xchg
jmp
push
xchg
pop
adc
push
push
call
sbb
jmp
cld
mov
or
jb
inc
add
dec
cmp
jle
bound
push
jp
test
mov
cltd
cmpsb
inc
and
sbb
and
adc
mov
mov
sub
inc
je
dec
movsb
xchg
jno
xchg
push
pop
add
adc
shlb
ret
sbb
push
or
xchg
ret
push
cmp
test
xchg
cmp
push
adc
xchg
add
andb
sub
inc
mov
xor
push
lods
sub
and
sbb
inc
push
or
adc
pop
and
dec
int3
sbb
adc
or
mov
or
lods
imul
lods
addr16
dec
scas
arpl
inc
adc
push
cmp
xchg
push
rorb
push
insb
adcl
cli
adc
sbb
pop
lds
and
jmp
inc
andb
xor
insb
loop
adc
pop
scas
push
in
push
es
push
scas
stos
insl
mov
sub
inc
or
xchg
mov
ret
push
xchg
jo
and
push
jae
jo
mov
or
call
jmp
and
nop
jb
and
and
hlt
jp
icebp
dec
adc
shl
orl
mov
mov
jl
and
ror
xchg
daa
in
or
sbb
and
push
fidivs
mov
stos
cld
fs
adc
push
push
sub
in
or
push
add
cmpsb
push
push
adc
adc
add
shll
les
and
sbb
aad
mov
stos
or
subb
int
dec
pop
xor
jl
push
pop
lods
dec
movsb
lea
inc
mov
sub
jne
or
jb
outsl
mov
add
push
xchg
xor
cmp
push
mov
adc
sbb
into
push
push
push
push
jmp
in
int
and
and
cmpb
test
pop
sbb
push
popf
pop
xor
mov
fs
cltd
sub
mov
clc
call
fwait
sub
dec
sbb
push
xchg
mov
sub
add
add
add
sbb
in
or
xchg
sbb
cli
cli
enter
outsb
fs
lret
stc
lcall
fnstenv
sub
cmpsb
mov
bound
adc
xchg
cmp
jl
jno
or
fsubl
int3
in
push
dec
or
enter
mov
lcall
and
shl
add
cld
mov
push
pop
mov
and
sub
or
lea
inc
clc
pop
mov
fistps
mov
aam
dec
pop
fucomip
mov
test
jb
jmp
rolb
rolb
push
movsl
and
add
or
enter
xor
jmp
xchg
pusha
imul
subl
das
xchg
movsb
ret
xchg
daa
add
shlb
push
hlt
incl
sub
in
or
das
jno
or
and
add
inc
or
leave
and
int
inc
pusha
test
dec
cmp
shll
dec
out
movsb
or
mov
add
mov
fs
lods
ds
push
sub
add
test
dec
push
mull
ret
ret
inc
les
push
xchg
add
push
and
mov
jp
and
movsl
test
leave
scas
or
ret
iret
push
xchg
cmp
inc
movsl
dec
or
mov
mov
loop
fists
ret
and
sub
ljmp
adc
push
mov
mov
dec
mov
jmp
lock
out
pop
inc
aam
pop
push
xchg
jbe
mov
movsl
test
or
out
and
movsb
add
mov
adcl
es
xor
xchg
mov
loope
je
call
popl
sub
xchg
jns
inc
js
jae
adc
xor
mov
sbbb
shlb
mov
xor
pop
add
pop
add
ret
inc
push
inc
inc
loop
or
jl
mov
imul
test
jmp
jo
adc
test
lret
sub
iret
pop
dec
xlat
mov
adc
dec
out
lock
and
cmpsb
into
push
mov
push
push
add
cmp
mov
sub
xor
mov
or
ja
adcb
push
push
jmp
lock
mov
adc
sub
xchg
fisubs
jl
dec
jns
inc
xchg
adc
or
inc
movsb
fmull
lods
xchg
jl
jmp
lret
and
inc
je
sahf
xchg
or
mov
or
push
or
clc
jmp
push
push
adc
out
ja
inc
aam
pmaxub
enter
mov
dec
cmp
sbb
pop
jg
dec
fldenv
xchg
jmp
mov
add
mov
fsubl
push
add
xchg
int3
or
mov
aad
dec
pop
adc
loope
mov
xchg
cltd
loop
sbb
sahf
push
nop
sub
adc
test
adc
jmp
inc
add
es
je,pt
sbbl
sbb
mov
lea
fwait
repnz
add
addr16
dec
inc
in
mov
inc
mov
add
pop
mov
imull
hlt
seta
call
mov
jne
jb
stos
in
push
mov
push
ret
jmp
jge
imulb
loopne
or
pusha
pop
jmp
jns
movsl
mov
push
add
inc
nop
rclb
sbb
dec
mov
gs
mov
jge
xchg
push
inc
sub
sub
stos
mov
das
out
int3
dec
adc
jne
xor
mov
mov
jle
in
jnp
sbb
lcall
rorb
pop
enter
lods
incb
cmp
or
push
leave
jae
clc
or
and
and
call
popf
sbbb
sbb
jmp
fstps
je
mov
outsl
push
out
adc
dec
or
pop
add
int
push
sbb
push
and
adc
pop
mull
adc
push
dec
pop
idivb
inc
mov
xor
cmp
push
or
push
enter
mov
cmpl
int
mov
scas
int3
rorb
push
xchg
es
dec
jno
add
jne
jne
cwtl
je
sub
cmp
jne
cmp
sub
dec
jnp
dec
jb
ljmp
cmp
outsl
jmp
push
je
mov
repz
pop
xor
pushf
cmp
es
push
xor
test
xor
push
sub
popa
adc
js
xchg
xchg
jmp
and
std
inc
test
movsl
out
std
xor
lea
and
push
int3
xor
popf
xor
enter
test
cmp
xchg
push
or
dec
inc
mov
sbb
scas
cmpsl
sub
dec
negb
dec
and
imul
jl
sbb
or
pop
add
cmpsl
mov
mov
cld
out
movsl
pop
xlat
imul
mov
out
out
ljmp
adc
jge
add
cmp
jnp
clc
push
adc
mov
or
es
sarl
or
dec
out
je
inc
inc
and
shrl
fsubp
jae
cs
or
and
cmp
lods
sbb
dec
push
dec
enter
call
sub
jne
mov
cmc
dec
jne
stos
clc
adc
stc
mov
or
jmp
test
popa
cmpsb
je
dec
jae
push
leave
ret
sbb
pop
lea
push
nop
pusha
sub
sub
sar
mov
sbb
inc
lea
mov
packuswb
jg
call
sub
or
jo
or
push
mov
shlb
or
ja
pop
stc
emms
and
enter
inc
cli
in
or
and
in
cltd
sbb
or
test
sub
add
dec
mov
or
sbb
les
xor
sbb
test
xorl
mov
and
dec
add
push
add
subb
xor
lcall
or
jno
addb
push
and
xor
or
test
or
and
inc
sbb
and
push
add
pop
sbb
and
add
or
cmp
inc
inc
mov
adc
add
cli
jae
inc
popf
nop
pop
call
nopl
or
jmp
enter
add
pop
cli
jl
mov
dec
or
sub
inc
add
jnp
push
jp
xchg
pop
fstl
fiadds
sarb
xchg
ret
or
add
add
add
es
pop
push
test
dec
adc
cmpsb
cmp
adc
add
push
push
call
shlb
ret
sbb
add
cs
test
push
adc
pop
or
pop
jp
inc
push
mov
and
or
mov
inc
sarb
gs
adc
sbb
gs
adc
sbb
loopne
sub
pop
fwait
cmp
jl
inc
xchg
mov
add
and
inc
clc
in
pop
push
sub
ret
pop
pop
loop
lahf
pop
mov
push
push
pop
or
cmp
sbb
xchg
rcll
or
fcoml
ljmp
and
jno
mov
dec
adc
xchg
add
or
stc
out
mov
sbb
sbb
jne
add
lock
mov
cmp
adc
inc
icebp
mov
lods
jl
mov
and
lock
mov
push
inc
fsubl
jg
inc
cmp
adc
into
cmpl
fisubs
mov
push
mov
mov
xor
mov
add
lock
push
push
bound
or
enter
jbe
mov
ja
sub
and
lock
push
add
sti
mov
cld
sti
test
jl
adc
call
xor
es
sub
adc
inc
ret
or
or
push
cmp
sub
sbb
xor
add
pop
pop
test
shll
jp
fwait
xchg
je
es
add
mov
and
ljmp
cmp
xorb
jmp
in
push
or
pop
push
xchg
adc
pop
push
das
stc
jae
into
test
xchg
pop
rorl
jle
test
adc
xchg
adc
mov
push
pushl
and
nop
dec
cld
push
call
daa
cmp
inc
andl
into
push
mov
aad
push
call
or
jmp
add
mov
cwtl
jo
arpl
stos
inc
push
insl
decb
fstpt
call
into
inc
push
les
test
mov
pushl
fistpl
pop
jmp
mov
sbb
sbb
jl
pop
mov
cmpl
cmp
fistl
imul
stos
jle
mov
xchg
inc
sti
ja
mov
or
jl
sbbb
and
sub
jno
add
out
inc
sub
add
push
adc
pop
push
or
add
mov
and
xlat
sbb
and
sub
or
inc
xor
cmp
or
push
mov
je
dec
xor
mov
mov
dec
jo
add
and
dec
fcoms
call
xor
and
adc
les
and
push
inc
cmp
mov
add
and
sbb
mov
mov
xlat
les
and
and
cmp
sub
stc
mov
loop
jg
gs
ds
add
cmp
sti
xor
shrb
push
cmp
sub
daa
mov
divb
fs
leave
ss
pop
fcomp
iret
mov
sbb
cmp
stos
adcb
scas
inc
test
or
outsl
ljmp
xor
and
pop
adc
cltd
cmc
fnsave
int
and
dec
pop
xor
gs
lcall
fwait
pop
jg
pop
add
pop
cmpw
inc
adc
fisttps
fdivr
or
enter
in
lret
mov
push
fiaddl
int3
sub
push
call
int
dec
int3
push
push
movsb
lods
fidivrl
jg
sbb
fstl
jne
cwtl
dec
popf
testb
push
inc
adc
cmp
or
xchg
push
mov
xchg
jg
xor
push
add
pop
mov
fistl
or
ljmp
or
cmpsl
jnp
mov
pop
mov
sbb
mov
pop
testl
pushl
sub
daa
dec
or
mov
mov
jge
xchg
sub
imul
add
shll
push
outsl
dec
xchg
push
jne
add
fstpl
inc
adc
out
les
mov
mov
mov
push
jl
outsl
or
jg
ds
je
arpl
mul
pop
test
in
jmp
sbb
or
or
adc
jl
push
xor
pusha
call
popa
jmp
sbb
xor
test
gs
cli
ljmp
cmp
shrb
pop
add
add
adc
push
or
mov
xor
pushf
inc
adc
mov
cmp
pop
clc
lds
push
ret
call
and
fucom
leave
lret
pop
sbb
pusha
cmp
xchg
int
fcomp
push
aaa
je
xor
test
movsl
repnz
loope
cs
lock
call
ret
or
ljmp
sti
scas
and
cmp
pop
rclb
adc
cltd
push
push
push
and
cmp
push
jo
mov
or
xor
shrb
rorl
cmp
push
and
mov
add
or
add
call
inc
xchg
push
bound
sub
jno
daa
fiadds
pop
pop
or
sbb
enter
lods
mov
xlat
sar
dec
insb
xor
push
or
test
pusha
or
fsubrp
addr16
js
mov
pop
insl
das
xor
test
push
ja
test
adc
mov
cmp
or
hlt
arpl
sub
jl
rcrb
icebp
lea
xchg
test
lcall
mov
pop
adc
jle
and
or
lret
sbb
cli
pop
adc
sub
gs
mov
cld
add
gs
or
imul
leave
out
jbe
divl
or
hlt
outsl
add
push
cmp
jae
push
sub
sbb
cmp
pop
mov
rcrb
das
pop
ret
mov
mov
add
enter
ret
xor
or
or
outsb
frstor
lea
dec
cmpsb
sub
int3
adc
and
xchg
mov
lods
jne
pop
lret
gs
das
je
enter
push
sbb
xor
dec
mov
scas
push
shll
movsl
adc
mov
jbe
and
push
sub
mov
adc
call
les
mov
and
imul
inc
and
dec
sub
lds
enter
and
xor
stc
cmc
sub
adc
clc
cmpsb
jl
sub
xor
aad
push
adc
jb
sub
push
ret
pop
add
jge
fs
dec
fsubrp
or
and
pop
xchg
lcall
dec
sahf
fldt
into
leave
lret
out
sub
and
loopne
lea
out
jnp
push
test
mov
clc
dec
shrl
xor
pusha
xchg
xor
out
dec
add
test
popa
sub
imul
mov
mov
sub
sbb
or
fwait
andb
adc
cmp
andb
pop
addb
sbb
or
jne
add
cmp
jl
call
scas
jl
lahf
mov
int3
or
je
mov
dec
sub
add
daa
xchg
js
add
mov
lods
fcmovb
fs
in
or
adc
sub
xor
sbb
decb
jmp
adc
mov
xor
pop
xlat
pop
add
sti
xor
shrb
jl
sbb
mov
jp
roll
enter
adc
xchg
inc
loope
subl
pushf
sub
mov
mov
fs
hlt
xor
add
jmp
cmp
mov
xchg
pop
dec
in
cmp
movb
cmpsl
mov
mov
jne
clc
pop
add
fmulp
xlat
and
shr
or
outsl
notb
jmp
mov
inc
call
sahf
aaa
push
and
mov
orl
sbb
and
sarl
or
je
out
sbb
sbb
add
jne
cli
xchg
mov
inc
fidivl
push
pop
push
mov
jge
mov
and
add
mov
xchg
nop
push
popa
inc
xor
mov
sbb
dec
cli
ss
inc
and
cmp
mov
add
out
xor
lods
lock
pop
jmp
aaa
sub
pop
adcl
push
in
dec
adc
mov
cwtl
sbb
adcl
into
and
mov
scas
and
lock
push
stos
sbb
sub
hlt
mov
dec
mov
nop
jg
inc
orl
inc
mov
xchg
shr
push
sub
lahf
cld
hlt
inc
push
and
push
jp
push
pop
lahf
or
push
inc
push
cmpsb
pop
dec
pop
sti
xor
pushf
fs
mov
and
push
push
je
jne,pn
lcall
les
pushf
mov
movb
and
inc
mov
push
fcoml
cmp
cs
in
jns
xchg
cmp
mul
lds
inc
pop
dec
inc
or
add
push
fadds
cwtl
and
and
popa
jbe
aaa
pop
dec
sbb
addr16
dec
imul
adc
xchg
or
push
sub
pop
dec
subl
push
push
jbe
mov
sbb
rcr
pop
or
ja
jb
daa
jbe
loopne
andl
dec
cs
in
por
pop
faddl
mov
jb
outsl
push
movsl
and
jg
lds
or
clc
jg
add
xor
repz
outsb
adc
mov
add
enter
xor
or
sbbb
xor
xor
pop
pop
add
je
add
outsb
dec
fnsave
dec
adc
sbb
inc
inc
cs
in
or
jb
into
mov
lock
or
mov
mov
fiadds
mov
clc
push
or
out
jmp
scas
jb
mov
inc
or
call
jne
mov
mov
jns
add
test
das
mov
xchg
pop
je
mov
sub
and
dec
outsl
scas
fcom
or
lahf
push
sbb
push
or
and
fnstcw
adc
rorl
jo
push
out
dec
jmp
mov
jo
cld
adc
pop
xor
push
and
insl
inc
int
dec
leave
and
ret
push
push
jae
aad
mov
mov
repnz
jae
leave
and
jl
outsl
clc
fwait
mov
jmp
mov
jg
repnz
pop
adc
jbe
sub
adc
or
shlb
add
daa
adc
rolb
dec
and
adc
in
fwait
and
add
lea
mov
into
and
jge
loopne
adc
mov
in
jae
xor
outsl
xorl
call
aaa
jns
data16
outsb
data16
xchg
stos
sub
push
movsb
sub
aad
adc
mov
jl
inc
push
cmp
enter
inc
add
xchg
loop
adc
mov
or
stos
xor
scas
shll
rol
test
sbb
stos
inc
jb
outsl
cmp
in
scas
push
gs
fstpl
or
shlb
stos
dec
js
and
xchg
loope
sub
xor
push
aaa
inc
cmp
gs
adc
fnstcw
cmp
and
icebp
movsb
lock
adc
push
call
add
je
cmp
xchg
orl
cmp
or
int3
stos
jne
aaa
in
jbe
jl
or
pop
je
cmp
sbb
jle
cmp
shlb
lds
nop
jmp
adcl
inc
aaa
in
and
cmp
sbb
adc
dec
cmp
es
dec
dec
xlat
push
pop
push
xchg
out
loope
shl
fld1
xchg
push
pushf
fcoms
push
fisttpl
es
adc
mov
xchg
out
scas
and
xchg
jmp
xchg
dec
in
xchg
and
dec
adc
iret
pop
lds
and
scas
test
je
sbb
inc
sbb
aaa
mov
sub
cmp
hlt
int
dec
push
push
fxtract
mov
sbb
pop
mov
push
sub
pop
es
ja
mov
cli
lcall
pop
xchg
sbb
adc
mov
cmp
loopne
cmpsl
call
lock
sub
outsl
stos
pop
std
cmp
inc
lods
mov
cmp
sbb
adc
lock
sub
jmp
sbb
pop
les
jne
mov
jg
push
movsb
pushf
lea
dec
sub
or
and
mov
dec
or
roll
or
mov
and
int3
and
pop
icebp
call
sub
les
and
or
sub
in
and
stos
into
pop
inc
sbb
inc
adc
sti
and
inc
adc
nop
sti
test
and
ret
ja
sub
fsubp
in
adc
sbb
mov
ds
cli
scas
fildll
xor
adcb
cmpl
sub
pmullw
gs
mov
test
sbb
test
test
mulb
test
adc
cmpsl
notl
call
or
jno
push
adc
jns
nop
or
ja
movl
and
adcl
or
icebp
xchg
dec
cmc
adc
pop
push
jmp
test
push
jne
ljmp
push
int3
jmp
cli
adc
cli
sbb
rorb
add
sbb
lea
in
mov
andb
inc
cld
or
aad
and
xchg
xchg
loope
loope
adc
jae
pop
cwtl
xchg
std
mov
je
rclb
test
les
pop
pop
icebp
das
lods
cmp
push
sub
cwtl
inc
stos
sub
sub
adc
int3
mov
bound
add
nop
xor
imull
add
or
dec
xor
pusha
enter
push
push
lret
int3
aam
inc
out
xor
dec
jl
xor
rclb
inc
sbb
test
adc
mov
out
aam
xchg
jp
mov
sbb
push
inc
fsubrp
inc
mov
sbb
xchg
jecxz
cwtl
pop
mov
inc
jnp
cs
jl
or
pop
sub
sarb
lods
inc
imul
cltd
dec
xor
ret
jl
rcrb
inc
inc
push
push
pusha
aad
add
es
add
jge
jle
aad
popl
testb
je
push
mov
les
mov
sbb
lret
push
cmp
mov
dec
repnz
cwtl
into
cmp
xor
bound
popa
aam
and
mov
popa
cmp
dec
jae
or
sub
xlat
stos
mov
adc
mov
divl
cmp
cmp
push
xchg
jb
jae
cmp
clc
mov
xchg
adc
stos
pop
sbbl
fs
repz
mov
movb
jp
fsubs
call
dec
pop
repnz
cmp
lcall
cld
shll
mov
inc
sub
hlt
push
sbb
mov
and
notb
inc
ss
adc
out
fmuls
push
or
sbb
jmp
in
mov
test
pushl
dec
mov
jg
mov
clc
test
cltd
mov
imul
add
jne
loop
popa
pop
cmp
cld
xchg
cmp
sahf
sub
jmp
scas
and
xchg
ficompl
push
push
stos
or
pop
lcall
pop
cmc
add
lock
lahf
jle
pop
xlat
ljmp
sbb
mov
jmp
jnp
sbb
sar
into
jp
adc
data16
add
cli
cli
psrad
pop
pusha
sbb
or
push
bound
stc
sbb
negl
sbb
push
cmpsl
xor
and
jbe
xchg
movb
or
jmp
andl
inc
aaa
xor
or
or
pop
outsb
dec
adc
jne
mov
jg
adc
mov
cmp
pop
xchg
xor
sbb
or
jmp
or
or
or
pop
and
sbb
cmp
xchg
loope
int
sub
jg
aaa
inc
shrl
push
pop
in
mov
or
popf
fadds
sub
sbb
jle
add
jg
inc
push
lock
mov
sub
ss
pop
and
and
pusha
cmp
aad
push
or
or
jmp
std
mov
stc
and
pop
mov
ds
push
lahf
inc
popa
sbb
call
jnp
or
or
repnz
and
mov
push
sbb
inc
mov
adc
and
sbb
je
sub
push
push
aas
xchg
push
adc
add
movswl
xor
cmp
jl
aas
in
and
ret
in
daa
or
fbld
ljmp
cmpsb
pop
add
jg
dec
lea
mov
xchg
fwait
adc
sbbb
push
cld
push
dec
stos
mov
fisttpll
inc
and
mov
mov
mov
shl
je
mov
push
adc
xchg
push
cmp
cld
pop
stos
sub
aas
in
inc
lea
cmp
dec
mulb
xchg
hlt
fwait
mov
in
scas
inc
ficoml
cld
inc
cmp
xor
leave
mov
and
dec
sub
push
jmp
mov
xchg
incl
sbb
pop
jbe
cs
mov
and
jo
scas
js
cmpsl
cltd
sub
jbe
test
lock
clc
xchg
adc
xchg
sbb
sbb
shr
lea
sbb
mov
fistps
pop
pop
sub
and
inc
lahf
sbb
jne
adc
jecxz
popa
mov
inc
sub
mov
cmp
push
jb
pop
push
xor
std
xor
push
test
repz
cmc
ret
cmp
fiaddl
dec
ficompl
xor
ja
call
jl
add
and
mov
add
vpsubw
or
pushf
push
pushf
xor
inc
jo
cmp
shl
add
jnp
jnp
sti
xchg
add
pushf
sub
push
adc
adc
add
adc
sub
jge
xlat
sub
aam
add
xchg
lods
into
pop
xchg
icebp
mov
adcl
int3
push
adc
cmp
imul
pushf
dec
das
lock
and
mov
mov
pop
mov
adc
pop
lods
insb
mov
incb
pushl
std
push
mov
jae
push
repnz
mov
mov
inc
push
loop
sub
fsubs
jne
pop
jle
adc
enter
sar
dec
xor
pop
arpl
dec
shrb
push
test
les
cwtl
in
dec
mov
jb
dec
shl
jno
fadds
je
push
or
sti
loopne
mov
sub
clc
push
mov
push
push
xor
add
call
fdivrl
test
jb
mov
int3
aas
lahf
test
test
or
mov
lahf
imul
adc
mov
nop
or
call
icebp
inc
cld
ds
icebp
cwtl
push
nop
lea
sub
ljmp
dec
fadds
test
or
xchg
ret
lmsw
jge
push
les
loopne
mov
mov
call
out
lahf
shlb
daa
jmp
jo
les
test
dec
xor
jp
aas
ret
and
xchg
dec
sub
pop
es
rcrb
jmp
rcrb
or
jne
and
sub
push
jle
jne
mov
mov
in
arpl
subl
mulb
lds
cmpsl
adc
shll
xchg
or
adc
movsl
inc
fwait
andl
sahf
sbb
lds
imul
mov
out
orl
pop
daa
push
sub
in
cmpsl
and
push
mov
jns
or
in
sbbl
cmp
mov
loop
cmp
ret
sub
fstps
mov
gs
sbb
test
stos
enter
push
call
add
lea
push
mov
enter
pop
nop
cmp
movsb
push
mov
imul
fstpl
inc
xor
lret
and
dec
adc
mov
lret
push
lds
mov
jne
xchg
mov
loope
rcrl
mov
adc
hlt
cmp
and
and
iret
cmp
divl
addb
jne
lds
xchg
xor
jb
lea
mov
dec
sub
out
mov
ficoms
loope
insb
xor
bound
and
jge
leave
dec
mov
push
and
xchg
enter
mov
add
pop
jmp
xor
out
mov
dec
adc
push
std
pop
xor
int3
ficompl
and
or
lea
std
pop
cmp
sub
ret
cmp
punpckldq
xor
cmp
push
push
inc
sbb
pushf
leave
push
ret
jnp
gs
repnz
orb
or
call
and
adc
push
push
and
and
inc
test
dec
or
mov
mov
or
data16
cwtl
insl
mov
loopne
mov
jne
nop
bound
int
jnp
les
cltd
inc
mov
cmp
shl
pop
sub
inc
cmp
adc
pop
inc
pop
add
cmp
jns
push
add
inc
mov
dec
test
adc
cmp
je
push
jmp
mov
push
test
lods
lahf
inc
and
cmp
pop
mov
xlat
mov
sbb
xchg
sahf
sub
and
lods
mov
sahf
out
push
andl
lcall
ret
add
push
mov
into
or
lock
jmp
push
pop
sub
imull
dec
aas
in
loope
sub
and
jge
jmp
outsb
inc
lret
inc
test
test
adc
lock
cltd
push
hlt
jl
lock
adc
dec
pop
and
nop
add
movswl
int3
shlb
aam
adc
add
jb
es
shrb
or
div
pop
dec
xchg
cmp
pop
ljmp
add
inc
aaa
or
pop
fsubs
pop
cmp
or
cmp
pop
adc
repnz
cmp
loop
mov
sub
int
cmp
jns
insl
movsb
lahf
in
aad
push
stc
mov
add
pop
xchg
pop
push
mov
cmp
test
pop
mov
daa
push
stos
stos
cmc
stos
inc
push
mov
pop
xchg
push
shlb
popa
jle
pusha
in
stc
cmp
das
pop
fstpl
sbb
add
rcll
add
lds
adc
sbb
xorps
push
add
orl
add
adc
sbb
loop
mov
nop
push
xor
cmp
icebp
cmp
jns
cmp
xor
adc
and
add
aas
pop
adc
mov
and
or
fsubl
and
push
push
mov
das
lock
in
jle
test
or
add
stc
loop
or
sbb
fucomip
xchg
divl
jo
sar
nop
cld
rcrb
pop
clc
call
and
mov
adc
cmc
lret
nop
loop
adc
cmp
jge
and
cs
cmp
or
dec
add
je
movl
jmp
push
adc
add
insb
outsb
dec
mov
mov
std
jge
pop
or
je
xchg
into
cmp
movsl
pop
xchg
xchg
hlt
fsubrs
lahf
andb
add
mov
and
cmp
hlt
movsl
or
insb
adc
rcrl
stos
xor
fdivl
push
out
jne
inc
sub
xor
mov
inc
and
dec
push
xchg
push
and
pop
mov
outsb
and
dec
js
jge
addb
xchg
adc
xchg
movsl
and
mov
dec
enter
rolb
and
dec
out
jmp
lock
cmc
cli
mov
adc
dec
adc
and
mov
xor
dec
cmp
dec
dec
mov
and
dec
arpl
jb
and
dec
adcl
adc
xchg
scas
and
ret
and
dec
rcll
loopne
mov
adc
and
dec
stc
xchg
adc
fisubs
or
adc
and
dec
sbb
and
es
sub
mov
dec
inc
xchg
dec
and
push
pop
mov
bound
dec
insb
xchg
jno
jbe
jnp
mov
dec
xchg
xchg
cltd
and
lods
adc
xchg
shll
inc
lret
rorb
fisttps
xchg
jmp
clc
mov
adc
filds
pop
and
dec
adc
and
and
dec
cmp
dec
dec
mov
push
and
dec
popa
xchg
data16
jo
mov
jg
test
xchg
mov
xchg
inc
cwtl
popf
mov
dec
mov
mov
mov
lret
and
dec
fsts
call
mull
inc
add
or
xchg
or
adc
mov
adc
sub
xchg
xor
cmp
mov
dec
and
dec
push
xchg
pop
and
gs
outsl
adc
dec
jle
andl
inc
lea
and
dec
cmpsb
xchg
stos
and
mov
dec
into
xchg
shll
fadds
mov
adc
and
dec
notb
add
and
dec
sbb
sub
and
dec
inc
xchg
inc
and
push
push
mov
pop
and
dec
imul
adc
xchg
xchg
and
stos
adc
xchg
mov
int
rclb
xlat
and
pop
loop
out
mov
adc
and
dec
decl
and
inc
adc
mov
dec
sub
xor
ss
cmp
inc
adc
dec
dec
push
xchg
pop
and
arpl
insl
adc
mov
jl
addl
xchg
lahf
and
adc
xchg
and
inc
rcl
mov
adc
and
dec
ljmp
decb
pop
call
inc
sbb
mov
adc
and
dec
xor
inc
inc
dec
mov
push
and
dec
pop
xchg
bound
addr16
insb
jno
jbe
jnp
orb
mov
popl
mov
dec
lods
xchg
mov
mov
mov
lret
and
dec
aad
fisubl
filds
mov
adc
and
dec
std
mov
in
pop
and
adc
mov
adc
and
dec
sub
cmp
mov
dec
and
dec
push
xchg
push
and
mov
jo
jne
jp
jg
test
mov
dec
mov
inc
mov
mov
dec
lret
and
inc
mov
adc
and
dec
repnz
mull
cld
and
in
push
or
sbb
xchg
and
sub
mov
adc
xchg
dec
and
push
pop
mov
gs
dec
outsl
xchg
je
jns
jle
mov
dec
xchg
xchg
pushf
and
mov
mov
mov
and
inc
into
rorl
loop
out
in
and
inc
idiv
mov
or
sbb
mov
adc
and
dec
xor
inc
inc
mov
push
and
dec
pop
xchg
pop
and
outsb
mov
js
jge
adcb
xchg
mov
dec
stos
xchg
scas
and
adc
and
dec
rclb
loope
and
dec
lock
cmc
and
inc
incl
out
mov
adc
and
dec
sbb
inc
sub
mov
adc
and
dec
inc
xchg
dec
and
push
pop
mov
arpl
dec
insl
xchg
jb
mov
and
dec
mov
lcall
scas
dec
mov
mov
mov
adc
and
dec
fistl
ljmp
incb
or
mov
adc
and
xchg
sub
xor
mov
adc
dec
dec
xchg
push
and
pop
bound
jno
jbe
jnp
addb
adc
mov
mov
mov
mov
xchg
lret
and
inc
aad
mov
adc
and
dec
out
xchg
repz
inc
std
add
pop
mov
adc
dec
sbb
sub
mov
cmp
dec
inc
xchg
dec
and
push
push
mov
and
dec
imul
jg
test
mov
dec
xchg
xchg
cwtl
and
lods
adc
xchg
shlb
inc
lret
aam
fldenv
dec
jecxz
call
testl
dec
adc
pop
and
sub
cs
dec
cmp
inc
dec
mov
push
and
dec
pusha
xchg
and
outsl
je
jns
jle
orl
lea
xchg
inc
xchg
pushf
mov
dec
mov
mov
mov
leave
adc
and
dec
fcoms
out
mov
adc
and
pop
adc
and
adc
sbb
dec
and
xor
mov
inc
and
dec
dec
xchg
push
and
pop
pop
mov
and
dec
jae
js
jge
addb
xchg
dec
fwait
xchg
mov
scas
mov
ret
xchg
enter
rcl
mov
adc
and
pop
loop
lock
mov
adc
and
add
dec
push
xchg
adc
sbb
mov
adc
xor
xchg
cmp
inc
inc
inc
dec
mov
push
and
dec
pop
xchg
arpl
push
in
dec
jl
andl
mov
dec
movsb
xchg
test
mov
and
dec
int3
xchg
shll
inc
fneni(8087
mov
adc
and
dec
hlt
xchg
stc
and
and
in
inc
or
and
dec
pop
xchg
sbb
and
mov
adc
xchg
inc
and
dec
push
mov
pop
and
dec
addr16
insb
and
jbe
mov
dec
xchg
xchg
and
test
lods
and
dec
mov
mov
lret
mov
adc
and
dec
fists
out
repz
adc
and
out
add
dec
or
adc
push
inc
sbb
mov
dec
xor
cmp
ds
inc
dec
mov
push
and
dec
pop
xchg
popa
and
imul
adc
jg
test
xchg
cwtl
mov
dec
lods
xchg
mov
mov
mov
lret
dec
aam
fldenv
fiadds
mov
adc
and
dec
cld
mov
out
adc
and
inc
adc
and
dec
sub
cmp
and
dec
push
xchg
push
and
pusha
mov
outsl
and
dec
jns
jle
addl
xchg
adc
xchg
cmpsb
and
mov
dec
leave
xchg
into
and
inc
fcomp
mov
adc
and
dec
icebp
xchg
mulb
sti
loopne
addl
dec
iret
add
test
inc
sbb
adc
add
stos
sarb
js
imul
out
inc
sarb
add
clc
add
and
or
or
dec
and
idivb
pop
fwait
jp
pop
mov
je
testl
push
enter
test
lds
or
bound
xor
or
dec
push
pop
cmp
mov
xchg
dec
adc
inc
adc
mov
shll
add
xchg
mov
mov
fnsave
mov
jmp
aas
mov
or
outsb
sar
fisttpll
inc
push
sub
cmp
das
jno
je
rcrl
push
jo
lahf
loope
fisttpl
nop
adc
adc
adc
add
ds
and
test
xor
inc
rcrl
sbb
js
jecxz
pop
mov
das
arpl
fimull
lea
ret
sub
adc
inc
sbb
add
call
insb
mov
hlt
popf
ret
pusha
and
fimuls
pop
and
test
std
pop
sbb
dec
inc
stos
fsubs
add
push
sbb
cmp
push
xor
dec
sbb
lret
imul
sub
inc
pop
and
or
sbb
je
push
sbb
pop
mov
mov
lahf
adc
lds
ljmp
mov
cmp
sti
fdiv
loop
add
xlat
inc
lods
dec
push
mov
mov
imul
stos
and
add
insb
insl
mov
fimull
adc
push
sbb
jg
sbb
add
in
push
call
sbb
cmp
stos
xor
scas
inc
lods
push
push
addb
adc
loope
cwtl
adc
push
and
add
clc
add
cmp
sbb
adc
dec
je
push
das
in
cs
inc
sbb
adc
dec
call
dec
pop
ss
cmp
test
mov
mov
cld
cmp
jno
test
pushf
xor
cmpsb
mov
gs
rcrb
xchg
jmp
push
std
mov
clc
test
ds
xor
and
les
clc
push
jns
and
scas
lock
xchg
les
mov
ja
and
and
mov
cli
jmp
inc
dec
mov
cmp
jne
cmp
xor
or
pop
inc
xor
fcoml
pop
push
or
adc
test
inc
int3
adc
movsb
mov
lds
std
jp
jbe
fsub
xor
adc
sbb
out
push
clc
add
negb
dec
pop
sbb
xchg
dec
cmp
lods
xor
and
loop
mov
in
jg
adc
jmp
mov
or
push
popf
fists
and
in
jl
adc
xor
fnstenv
aaa
sub
mov
xor
aaa
rcrb
lods
repnz
ss
pop
adc
cmp
mov
mov
sbb
lods
sub
push
or
adc
sub
dec
lcall
test
jmp
mov
enter
movsl
movsb
sub
jne
shlb
jg
stc
lods
scas
clc
mov
je
mov
mov
and
mov
call
push
pop
in
pop
outsl
xchg
clc
loopne
dec
fs
inc
movsl
adc
data16
push
push
pop
or
mov
test
movl
jb
cmp
dec
jge
inc
or
test
mov
add
ret
orb
inc
and
ja
insl
iret
arpl
fs
gs
adc
jl
sub
cltd
fstps
xor
hlt
stc
mov
mov
xchg
movsl
pop
sbb
leave
lods
pop
popf
pop
and
sbb
mov
or
movsl
mov
mov
pop
and
inc
pop
inc
or
enter
mov
pop
clc
movsl
inc
or
movsb
mov
adc
jl
std
push
sub
mov
je
mov
in
sbb
push
mov
shrl
stos
repnz
stc
rorb
loopew
movsb
ret
adc
add
and
mov
lahf
pop
inc
je
gs
or
sbb
ss
aas
leave
xor
nop
stc
call
add
xchg
jne
dec
adc
push
call
mov
jns
data16
xchg
sub
stos
loope
imulb
xor
stos
or
inc
in
pop
adc
insb
mov
mov
jg
adc
cmp
adc
and
imul
jne
push
pop
xchg
adc
pop
out
enter
es
popf
xor
pop
test
push
mov
popf
or
stos
js
lods
and
mov
sbbb
sbb
pop
test
movsb
outsb
frstor
mov
hlt
push
push
or
and
pop
push
sub
mov
movsb
enter
jg
or
inc
pusha
adc
mov
sub
dec
jge
mov
mov
setne
lock
mov
les
rol
mov
call
sbb
push
xchg
or
sti
and
mov
sbb
out
clc
push
mov
pop
in
push
loopne
fmull
jne
les
mov
adc
push
mov
in
adc
or
jmp
xchg
or
mov
push
xor
nop
rcll
pop
std
dec
fwait
jae
test
stc
push
ds
and
ss
and
jmp
mov
xor
push
inc
jmp
dec
mov
call
jmp
sbb
and
add
jb
xor
sahf
and
mov
rcll
nop
arpl
add
adc
les
push
outsb
fists
cmpb
aam
enter
inc
dec
pop
call
or
popf
and
jnp
add
jno
jmp
cltd
sbb
adc
jp
and
ljmp
stos
jae
call
push
push
nop
in
les
jmp
loopne
rorb
int3
lret
push
push
mov
cmpsb
call
sbb
adc
adc
and
pop
les
ljmp
mov
fldenv
nop
lret
xchg
pop
pop
cmpsb
rorl
inc
pop
ret
sub
jmp
adcb
in
insb
dec
sub
out
and
and
xor
aad
lock
adc
jge
in
testl
xor
cmp
or
mov
adc
add
in
test
adc
mov
adc
add
cmpsl
sbb
push
test
int3
aad
bound
mov
and
jecxz
std
bound
jnp
sub
loop
clc
xchg
pusha
jae
hlt
inc
or
sbb
sub
dec
int3
aas
mov
cli
jmp
push
inc
add
popf
js
dec
pop
inc
and
fstl
adc
iret
fists
fsts
js
test
xchg
jl
pop
les
dec
push
lea
xor
add
xor
push
scas
fsts
xchg
push
lock
xlat
push
clc
repz
dec
mov
pop
push
adc
inc
mov
repnz
rcrb
and
jbe
aad
adc
jbe
add
ret
pop
dec
mov
in
dec
inc
push
imul
add
test
mov
jge
and
mov
or
fidivrs
xchg
std
xchg
hlt
inc
mov
mov
aad
stc
cs
xchg
push
call
test
jbe
sti
inc
jbe
test
sbb
test
dec
fmull
mov
cld
push
fildl
loope
call
popf
jle
pop
gs
and
push
iret
in
ja
push
pop
adc
inc
or
or
add
adc
ficoms
hlt
cmp
mov
pop
and
jbe
jne
adc
lea
cmp
pop
scas
rclb
jnp
add
jb
nop
mov
and
inc
jl
sbb
jae
lret
dec
lock
mov
push
aas
push
test
or
xchg
mov
sti
ds
stc
mov
and
sub
jne,pn
call
xchg
and
pop
pushf
push
inc
call
adc
mov
dec
jbe
push
stos
fmuls
mov
bound
lret
out
push
inc
adc
lock
sbb
or
and
and
push
cmpb
xchg
adc
and
repz
jge
loopne
push
push
ljmp
and
jbe
movsl
adc
or
cmp
push
push
xor
test
cli
xor
adc
mov
imul
dec
int
adc
je
and
push
and
adc
icebp
add
cmovnp
lahf
sub
mov
or
cmp
stos
rcll
xchg
adc
fldenv
dec
sbb
or
dec
sbb
inc
adc
push
dec
pop
and
push
push
sub
sub
sub
and
xchg
popf
popa
mov
push
sti
adc
das
xor
sub
enter
adc
mov
clc
fwait
and
xchg
xchg
jmp
xchg
sahf
fldl
shrb
mov
cmpsl
sbb
adc
jmp
sub
sbb
mov
and
neg
and
sti
push
lock
xchg
ret
pushf
ljmp
or
jg
dec
or
xor
or
lcall
mov
adc
jae
cmp
or
or
movsb
dec
pop
inc
mov
fsub
push
bound
push
addr16
test
dec
aam
xchg
adc
mov
lret
in
dec
shll
dec
out
jo
dec
xchg
add
test
push
mov
rcrb
xorb
xchg
imul
inc
jno
adc
add
push
sub
popa
jae
pop
push
cmp
xor
rorl
cltd
or
cmp
stos
inc
je
addb
call
xchg
lds
aam
in
inc
xchg
aad
sub
lcall
hlt
inc
sbb
rol
pop
cmp
test
mov
cmp
dec
dec
iret
pushf
xchg
out
mov
dec
add
mov
mov
dec
mov
pushf
loope
jno
test
int3
ja
adc
lds
int
je
lea
pop
int
xchg
mov
and
movb
push
mov
jnp
sbb
icebp
xchg
inc
or
out
sub
mov
pop
shlb
xchg
and
stos
pop
or
test
mov
out
fisubrl
loop
dec
sbb
in
push
movsl
js
cmp
in
popf
xlat
mov
or
lret
pop
outsb
and
or
cli
inc
popf
aad
and
insb
arpl
mov
cmc
cltd
test
add
inc
shlb
xor
or
jge
cmpb
inc
and
inc
push
call
jmp
sub
mov
mov
fsts
les
or
xor
inc
test
or
shlb
dec
pop
dec
js
std
xchg
mov
lods
addl
and
movsl
mov
repz
push
jmp
aam
sub
das
inc
out
cld
mov
push
pop
push
jmp
loopne
call
sbb
pop
loop
xor
mov
cmpsl
cmp
stos
call
dec
imul
shr
cmp
and
ret
inc
or
jg
inc
push
aam
int3
in
enter
push
cmp
or
sbb
xrelease
mov
inc
add
inc
dec
in
dec
inc
sbb
outsb
pop
call
mov
test
mov
or
pop
outsb
inc
and
inc
inc
jmp
icebp
and
mov
sub
adc
jecxz
daa
daa
push
inc
inc
divb
icebp
xor
sub
sub
or
xchg
adc
ds
clc
test
inc
insb
aam
test
pop
popf
jne
adc
cmpsl
adc
ret
xchg
jge
repz
mov
cmpsl
mov
movsb
adc
jno
jae
aaa
rcrb
mov
fs
cs
outsb
cltd
adc
mov
fcomps
sahf
jno
ds
adc
sbb
daa
jge
dec
call
dec
or
loopne
xlat
jecxz
mov
mov
in
sub
and
push
and
dec
pop
adc
sub
xor
adc
aam
mov
int3
lods
inc
test
mov
call
adc
mov
adc
xchg
out
and
adc
sub
pusha
adc
jecxz
push
int3
xchg
repz
sbb
push
aam
and
mov
inc
adc
inc
or
xchg
cmpsb
inc
inc
dec
das
dec
fnsave
lock
mov
cmp
cmpsl
aam
loop
adc
movsl
sbb
xlat
das
dec
cmp
fmull
aaa
imul
jae
mov
dec
or
xchg
dec
sub
inc
movsl
mul
adc
aad
xor
mov
pusha
adc
pushl
call
mov
dec
sub
pop
movsb
jge
pop
data16
or
xchg
push
mov
push
fsubr
adc
pushf
sahf
mov
and
cs
xor
inc
and
mov
std
add
push
push
shll
inc
insb
xchg
push
adc
dec
and
pop
xchg
lahf
push
cld
mov
and
and
adc
xchg
push
js
pop
insb
cmp
or
popf
push
push
pop
jle
lds
stos
xchg
or
js
daa
adc
push
jae
inc
aas
mov
adc
lret
imul
pop
dec
push
rorb
ds
xor
adc
push
xor
mov
push
dec
add
pushf
imul
adc
jl
leave
test
sub
pushf
imul
push
dec
xchg
mov
lea
adc
cmpsb
adc
pop
xor
insb
mov
rolb
pop
xor
dec
leave
sbb
pop
inc
and
push
or
mov
shll
test
xchg
or
cmp
push
movsb
mov
or
sbb
push
inc
jne
mov
push
nop
and
popa
orl
shll
push
mov
push
out
dec
add
jmp
js
arpl
pop
iret
inc
movsl
hlt
fsts
call
pop
mov
mov
std
fcomps
sbb
cltd
nop
mov
sub
lret
pop
cmp
cs
push
xchg
xchg
into
sub
and
inc
cmpsl
cmp
add
aad
scas
dec
inc
jae
dec
jl
inc
testb
push
inc
ss
pop
fdivrs
fistpll
xor
dec
dec
adc
lea
push
shrl
insl
push
sub
mov
dec
sub
ss
cmp
adc
jmp
push
cmp
mov
fwait
rcr
neg
dec
pusha
in
mov
pop
into
push
mov
sub
mov
xchg
pop
movsb
mov
cmpb
ffreep
lods
push
stos
dec
push
xlat
clc
out
mov
scas
mov
js
testb
mov
adc
mov
cs
xor
int3
clc
repnz
mov
push
int3
mov
push
xchg
sub
push
dec
xor
ret
dec
push
mov
testl
cmp
mov
mov
cmpsb
xor
adc
and
cli
enter
pop
popf
jne
push
dec
dec
xchg
add
sbb
xchg
bound
movswl
scas
dec
inc
jb
xchg
lods
jge
lea
inc
cmp
jns
mov
pop
dec
scas
push
inc
push
rolb
sub
jns
xor
aaa
cmp
pop
sbb
aas
mov
xor
add
xor
jne
push
sub
ss
scas
mov
lret
lods
lods
sub
push
and
hlt
sahf
sarb
maxps
cmpsb
add
push
inc
xchg
mov
fsubl
sbb
and
xchg
data16
ja
lea
or
mulb
or
or
imul
lods
mov
and
loope
cmp
jb
mov
fists
pop
mov
xor
jno
mov
cmpl
xchg
push
stc
enter
out
adc
addr16
inc
xchg
addr16
or
adcb
mov
cli
test
pop
lods
mov
test
add
lea
adc
or
mov
xchg
adc
push
mov
loope
test
daa
adc
mov
inc
aaa
mov
jl
add
or
mov
adc
inc
cld
jl
test
jns
push
pop
enter
rcll
xlat
sub
and
push
xlat
jne
pop
test
lret
mov
mov
movsb
push
je
dec
mov
lret
imul
dec
sbb
push
push
push
adc
add
cld
and
pop
ljmp
data16
cld
lea
add
and
sbb
sbb
and
pop
jg
in
call
and
dec
cld
xchg
sbb
mov
scas
inc
mov
dec
push
std
cmp
movsl
dec
adc
and
in
or
fs
movsb
enter
mov
push
inc
call
adc
mov
std
lods
dec
in
jl
lea
xor
xchg
bound
add
fwait
bound
int3
loope
jns
and
inc
cmp
cmp
and
push
je
or
call
push
cmp
or
cmp
xchg
sbb
push
fs
std
pop
xchg
add
stos
pop
push
push
enter
sbbl
pop
mov
ljmp
mov
stos
jns
and
jmp
xlat
in
daa
xor
jbe
lret
add
xor
js
pop
test
sub
rcll
push
push
xchg
stos
hlt
imul
orl
push
sbbl
and
divb
cmp
push
pop
call
ret
mov
call
adc
dec
pop
stc
rol
pop
pop
sub
into
jecxz
in
fstpt
shll
notb
inc
adc
nop
and
adc
push
movsl
cmpsb
adc
std
sbb
lods
xor
xchg
sub
adc
repnz
adc
dec
inc
fsubp
jno
sbb
lock
and
dec
jmp
repz
jbe
mov
cmp
mov
repz
test
or
and
or
mov
aad
push
ss
enter
lods
sbb
jne
sbb
clc
inc
push
xchg
jle
mov
xchg
les
insb
push
into
xor
das
lds
fmuls
jne
cmpsl
das
mov
jb
sbb
xorl
mov
add
xor
sbb
sbb
sub
imul
std
andb
push
pop
test
jmp
repz
test
test
inc
imul
loopne
jge
pusha
enter
jmp
mov
out
lret
iret
xor
mov
xchg
cmp
xchg
mov
jge
mov
mov
push
or
mov
push
imul
and
stos
jns
out
jmp
cmpl
mov
xor
leave
jle
pop
sbb
adc
xchg
pop
int3
or
jmp
push
xor
xchg
shl
pusha
jp
les
das
fwait
test
push
dec
dec
push
push
jnp
out
inc
push
jl
lods
aaa
lea
cmp
push
sbb
pop
mov
cmc
js
pop
inc
pop
and
imul
test
or
or
or
int
push
arpl
in
imul
jecxz
jl
lods
inc
clc
jle
test
outsl
das
inc
or
dec
and
mov
pop
sbb
std
mov
pusha
fsts
popa
stos
cmpsb
arpl
pop
leave
leave
imul
sbb
adc
push
sub
dec
mov
push
orb
push
ljmp
push
dec
xchg
pop
pop
mov
dec
jg
adc
adc
aam
mov
jle
add
or
pushl
xchg
or
and
and
in
or
sub
jecxz
push
lret
or
sbb
adc
sti
xchg
add
sbb
or
dec
js
pop
cmp
cmp
dec
mov
sub
repnz
mov
pop
or
fs
sub
je
into
mov
ljmp
leave
inc
push
jne
mov
lock
jno
mov
push
adc
fs
pop
sub
or
repz
mov
das
jae
dec
sbb
mov
or
jnp
xchg
xor
xor
add
and
and
mov
pop
sbb
mov
dec
fdivrl
cmp
dec
pushf
scas
repnz
jecxz
adc
ret
rcl
jo
lret
push
inc
movsb
loop
sub
inc
jle
je
into
imul
pop
mov
lds
add
or
scas
sub
test
cld
cltd
push
fisubrl
xchg
sahf
jge
push
pushl
jle
inc
adc
mov
test
add
outsl
inc
sbb
ret
jb
sbb
mov
mov
jnp
add
push
hlt
shlb
sub
sti
push
jg
pop
sub
push
lea
testb
and
fwait
sub
adc
dec
out
adc
loope
daa
push
xchg
cld
mov
sub
fmull
push
cld
jbe
fstps
sbb
inc
sbb
das
outsl
les
jmp
inc
nop
leave
sarb
adcb
cmpsb
es
adc
or
lea
mov
mov
pop
es
cmc
lret
sbb
add
aas
daa
mov
push
mov
xor
loop
sbb
cwtl
inc
test
popf
mov
loope
aaa
adc
lea
subb
shl
lds
out
sub
insl
nop
enter
inc
leave
lock
stc
das
das
aas
and
xchg
mov
inc
jbe
sub
push
mov
addr16
push
dec
pop
repnz
sbb
cmpl
hlt
jb
dec
shlb
mov
xor
pop
popf
adc
das
mov
jmp
dec
or
xchg
lds
or
inc
les
imul
dec
jns
lds
daa
in
sub
aad
testb
cmpsb
jno
adc
or
add
inc
cmp
mov
into
mov
add
jmp
gs
and
or
push
mov
pop
imulb
les
inc
scas
cwtl
adc
test
push
adc
pop
cs
stc
dec
lods
sub
xlat
jne
or
dec
sahf
setl
fsubs
or
fwait
or
push
int
or
fnstcw
clc
xchg
dec
cli
out
repnz
sub
cmp
adc
xor
sbb
stc
add
push
gs
fists
pop
add
enter
jne
pop
sti
insb
xor
cmpsb
mov
adc
sub
push
mov
jo
movl
dec
ror
or
fstl
cltd
push
cmp
fidivrl
mov
mov
out
imul
mov
dec
and
insl
or
popw
push
inc
lods
hlt
in
out
push
lods
xlat
mov
dec
insb
mov
and
dec
push
test
lret
dec
shrb
mov
adc
rclb
mov
gs
stos
mov
dec
push
sub
orb
and
fcomi
pop
cld
mov
add
dec
dec
andl
call
dec
xor
xor
inc
add
xchg
fildll
ud0
push
pop
mov
ficoml
enter
call
add
int3
loop
notl
pop
nop
ret
push
mov
xor
jmp
les
lret
sub
shlb
inc
pop
or
sbb
push
sbb
cld
ja
fs
or
push
dec
sbb
xchg
loope
dec
jl
sub
out
push
fsubr
repz
pop
stc
fisubl
push
inc
pop
push
push
pop
mov
mov
ret
lea
cmp
cmpb
pop
imul
and
popa
jl
mov
and
insb
cvtps2pd
lods
popa
or
ret
and
shrl
adcb
adc
insb
push
adc
xor
aad
inc
push
and
inc
cmp
testl
inc
jb
inc
mov
jl
pop
push
call
pop
and
add
aas
push
mov
mov
pop
fdivr
adc
pop
iret
int
pushf
push
pusha
cmp
test
pop
sub
cwtl
xor
and
mov
andb
test
pop
push
pop
mov
ds
in
inc
adc
popf
jae
adc
adc
sbb
std
fs
dec
lea
or
mov
push
mov
inc
push
sub
sbb
into
lock
fwait
lds
cmp
jbe
std
les
call
fs
rcrb
sub
push
push
and
inc
xor
mov
les
js
movsb
and
call
pop
lcall
push
and
dec
push
jb
fsubrl
xchg
pushf
int
adc
xchg
push
and
iret
imul
imul
cli
movsl
pop
mov
pushf
mov
xor
mov
mov
pop
inc
popa
or
mov
or
xorb
int3
push
in
dec
inc
xchg
fldenv
bound
add
imul
cmp
cmp
sbb
je
jno
inc
sbb
pop
jne
leave
xchg
jbe
js
outsb
inc
cli
sarl
mov
inc
cld
dec
cmpsb
xlat
lret
dec
icebp
std
or
push
gs
es
inc
dec
and
or
ja
mov
pop
dec
add
xor
sbb
nop
sbb
push
dec
or
jle
mov
mov
push
xchg
mov
movl
test
loopne
mov
in
idivb
leave
dec
scas
xchg
dec
dec
call
push
in
div
add
or
adc
xchg
dec
pop
enter
ficompl
adc
sub
les
imul
stos
mov
and
notl
mov
notl
call
lock
add
add
fdivs
jmp
xchg
jbe
fmull
push
lea
add
jp
mov
inc
and
stos
mov
aas
in
pusha
cmp
icebp
sbb
push
add
and
loope
or
push
push
cld
mov
and
inc
lods
and
and
inc
les
pop
adc
pop
lock
push
pop
mov
cltd
push
das
call
in
dec
cs
gs
jecxz
add
dec
mov
mov
mov
xor
pop
aad
pop
psubsw
sub
dec
stos
mov
xchg
sub
adc
add
cmc
lret
mov
aad
add
inc
pop
dec
ret
out
outsl
mov
shr
sub
scas
push
sti
shlb
inc
xor
sub
jecxz
xor
inc
je
cld
js
xlat
sub
scas
test
xor
out
test
sbb
shlb
pop
icebp
call
ds
push
mulb
pusha
cmp
pop
inc
sbb
cld
sbb
xor
push
jns
sbb
lea
cmp
lea
pop
inc
andl
pop
mov
js
push
cmp
pop
push
inc
inc
pop
cmovnp
xchg
push
or
xor
test
push
push
stos
and
stos
mul
enter
cmc
mov
pop
sbb
lods
stc
pop
push
lods
jae
movsl
pop
xchg
ljmp
rcll
and
in
fstps
movsl
sbb
in
rcll
cmp
in
push
out
pop
sub
rclb
jmp
bound
mov
mov
int
pop
std
and
popf
call
movd
and
adc
shl
nop
cmp
idivb
inc
das
cld
pop
in
mov
cmp
jg
enter
cli
xchg
jno
push
ljmp
pop
jo
sub
sarb
add
arpl
cmp
cmp
jecxz
mov
push
mov
test
and
out
push
or
dec
mov
xchg
jmp
xchg
or
cmp
das
and
dec
lret
lods
adc
sbb
insb
ljmp
xchg
xchg
inc
push
sub
sahf
dec
pop
clc
jo
loopne
xor
pusha
and
in
arpl
div
int3
xchg
and
push
push
mov
xchg
adc
push
jmp
shr
push
hlt
aad
mov
jle
ret
pop
jle
push
out
or
xchg
jbe
stos
daa
sarb
pop
cmp
sbb
into
leave
outsb
or
les
or
sahf
clc
sub
add
inc
inc
loope
sub
add
mov
jne
mov
hlt
test
lcall
lds
sub
dec
pop
dec
mov
jge
ret
inc
or
cmp
sbb
cld
and
cs
mov
adc
xor
and
mov
mov
cmc
push
xchg
mov
movsl
dec
clc
fcoms
sub
aas
sti
push
or
fdiv
sbb
push
add
call
jge
jnp
mov
in
leave
xor
mov
and
mov
push
xchg
addr16
lock
rcrb
out
mov
arpl
in
aas
cmp
cmpsb
sub
repz
push
hlt
call
push
sub
sub
xor
dec
dec
out
les
scas
out
xchg
pop
xchg
lret
and
ret
push
and
inc
js
inc
adc
push
or
ds
push
mov
pop
cs
out
daa
jnp
adc
adc
mov
mov
call
adc
dec
and
inc
mov
sbb
fs
jne
xor
cmpsb
ret
in
pop
scas
imul
dec
std
stos
ljmp
push
dec
loope
mov
xor
or
movsl
xchg
mov
mov
jne
or
jg
add
push
or
mov
sub
loope
insl
leave
push
mov
mov
rorb
sbb
in
xchg
cmp
stos
dec
push
or
leave
mov
cltd
inc
pop
pop
cs
sbb
xchg
ret
push
jge
mov
push
xchg
call
xor
hlt
pop
and
lret
sbb
sbb
cld
sub
inc
cmp
mov
pop
ret
scas
loop
call
push
cmpsl
mov
das
adc
imul
xor
pop
mov
adc
in
xor
idivl
push
mov
js
mov
jp
aad
and
mov
xlat
jns
mov
adc
pop
inc
call
test
inc
mov
call
pop
out
ds
movsl
icebp
xchg
pop
int
sbb
pop
out
adc
adc
out
mov
data16
jbe
ret
mov
xor
imul
mov
cmp
dec
fsubrl
sub
push
lock
xor
pop
faddl
mov
and
dec
sahf
sbb
sbb
std
fs
sbb
mov
neg
testl
pop
mov
flds
sti
leave
sti
enter
int3
xor
es
sbb
push
push
push
lock
leave
es
push
jecxz
lods
xchg
inc
cli
push
jb
vsubps
loopne
push
and
jmp
jae
hlt
scas
sbb
and
mov
cmp
mov
jle
enter
push
dec
outsl
mov
sbb
adc
pop
mov
dec
cmp
dec
push
and
scas
aas
xor
std
jb
adc
cld
inc
adc
lock
nop
cli
mull
mov
or
or
iret
nop
xchg
lock
jecxz
cmpl
das
xchg
orb
sbb
int3
jmp
sub
adc
adc
dec
in
add
ret
lcall
fxam
mov
mov
xlat
iret
mov
push
inc
and
in
pop
enter
lret
and
imull
ss
adc
mov
add
cmpsl
movsb
cmp
xchg
ja
loope
add
push
call
mov
mov
push
pop
enter
out
loope
lods
dec
and
adc
sbb
adc
enter
cltd
subl
push
pop
jno
jb
das
mov
ds
lods
call
jmp
xor
aam
jbe
mov
dec
sbbb
push
lret
mov
or
jb
fisubrl
sub
cmp
dec
iret
mov
add
adc
cwtl
or
das
or
inc
sub
and
icebp
movsl
cmp
fcoml
xor
dec
das
or
cmp
inc
stc
pop
js
lret
sbb
aad
sub
mov
out
popfw
aad
xchg
or
sbb
adc
call
push
push
leave
aam
jg
cmp
inc
ss
xor
and
sbb
in
adc
push
out
mov
dec
sub
cmp
hlt
test
cli
mov
fs
pop
push
scas
test
imul
xchg
jo
xor
popf
fsts
sbb
and
lahf
inc
popa
mov
xor
or
and
xor
and
es
xchg
out
test
lret
push
mov
mov
test
stos
negl
insb
inc
jle
add
mov
loop
ficoms
test
bnd
out
xor
add
out
or
ja
and
inc
mov
and
xor
jo
stos
adc
sub
adc
xchg
and
and
and
dec
addl
or
adc
jnp
dec
es
repz
sbb
adc
enter
add
push
lahf
add
xchg
xchg
mov
adc
and
dec
xchg
fbld
ljmp
xchg
adc
and
push
sahf
mov
call
mov
rorl
sbb
daa
movsb
jmp
xchg
out
shr
js
std
lods
and
icebp
xor
cmp
and
cs
and
inc
arpl
cmpsb
xlat
cmp
xchg
mov
add
xor
inc
adc
sarb
mov
je
sub
outsl
sahf
adcb
fsubr
jb
sar
add
repz
in
add
gs
lahf
jbe
adc
nop
loop
adc
outsb
cs
sbb
repz
xchg
outsl
in
lds
jae
sub
pushf
call
fisubl
mov
jno
into
add
push
out
jl
or
fsubrl
adc
and
fldcw
sbb
lahf
adc
mov
nop
adc
in
dec
xchg
jns
dec
and
popf
xor
cmp
push
ret
xor
inc
push
insb
push
push
inc
cmp
xor
sbb
inc
rorl
insl
insl
sbb
mov
fwait
lds
lock
dec
cmc
xchg
dec
ret
enter
test
outsl
inc
call
push
rcl
repnz
loopne
jbe
add
sbb
mov
sbb
dec
lock
rcrl
loop
roll
clc
sub
in
xor
movl
and
jecxz
jmp
sbb
ds
push
std
fs
insb
test
call
jmp
ret
pop
in
xchg
pop
push
das
mov
dec
xchg
in
loopne
xor
fwait
sub
xchg
lret
jb
sbb
adc
xor
fbstp
adc
bound
push
push
in
inc
pop
out
inc
pop
outsb
std
lahf
leave
pop
pop
mov
fldenv
test
sbb
sbb
out
mov
jns
pop
pop
inc
push
test
out
inc
sti
and
dec
clc
xchg
dec
clc
sub
mov
sub
pop
loop
add
cmp
das
xchg
pop
dec
xchg
jae
mov
testb
mov
call
jl
dec
inc
fmul
cs
sbb
adc
loopne
fsts
push
int3
inc
ret
and
lods
into
rclb
movsl
out
data16
xchg
mov
adc
fsubrl
xor
mov
mov
adc
cltd
notb
and
test
cmp
adc
jg
lock
xchg
and
gs
bound
sbb
loope
sub
outsl
xor
dec
adc
cld
sar
inc
or
ret
pop
mov
negl
mov
jecxz
test
sub
add
test
xor
pusha
push
pop
stc
sub
outsb
test
mov
inc
mov
push
cld
pop
movsb
cwtl
cmp
test
mov
movsb
daa
cmp
adc
sbb
shrl
adc
push
in
mov
mov
cmp
call
es
dec
sbb
pop
inc
call
aaa
inc
jne
loopne
xchg
sub
jns
pop
mov
mov
and
into
int
andb
adc
dec
notl
mul
leave
pop
iret
add
cld
imul
stos
cld
push
lock
push
pop
pop
and
dec
inc
inc
inc
cld
cmp
adc
clc
cmp
mov
dec
lret
mov
mov
xchg
mulb
lock
mov
idivb
popf
cmp
jns
lds
jg
dec
cmc
cmp
cmp
and
gs
or
dec
repnz
jnp
stos
cmp
jbe
jmp
lods
adc
fsubs
adc
hlt
push
enter
or
inc
and
fsubrs
adc
jl
and
cmpsb
jmp
push
mov
bnd
aam
in
ljmp
and
aam
insl
and
and
mov
cmp
mov
je
adc
repz
adc
jnp
outsb
inc
imul
js
and
fsubl
fldenv
push
jae
xchg
movsb
inc
push
xchg
mull
cld
lods
pop
dec
adc
and
jecxz
cmp
sbb
mov
jno
dec
sbb
loope
pop
xor
mov
xchg
sar
pop
sbb
or
clc
dec
push
mov
out
or
push
adc
jl
roll
imul
add
hlt
cld
and
pop
imul
ss
dec
rcl
adc
pop
ret
cld
push
inc
leave
scas
adc
out
jmp
pop
add
and
mov
and
add
dec
add
and
aaa
loop
rcrb
xchg
adcb
sbb
inc
out
fmuls
adc
lock
adc
mov
bound
rorb
repz
sbb
hlt
sub
xor
jns
jno
add
sbb
adc
imul
and
es
adc
and
pop
clc
pop
cmp
adc
les
and
dec
sub
cli
xchg
sbb
test
add
push
jmp
and
pop
cld
popl
mov
xor
cmpl
push
inc
bound
jp
mov
xchg
gs
or
sbb
dec
adc
ret
lret
or
mov
adc
and
dec
clc
cltd
add
xchg
or
and
jp
mov
ds
pop
inc
stc
jg
adc
jg
ds
icebp
mov
jp
std
insb
stos
sub
push
xor
mov
jbe
sub
pop
into
les
loope
push
lock
dec
out
test
pop
and
cmp
and
jbe
push
call
dec
inc
out
sbb
jb
xchg
pop
das
mov
fxch
fdivrs
mov
enter
lods
and
adc
rclb
xchg
push
mov
mov
insl
subb
adc
jmp
aas
mov
in
lods
ret
leave
adc
xor
ret
out
fadds
leave
or
adc
adc
dec
je
sub
inc
jge
mov
js
adc
mov
mov
cmp
xchg
push
cmp
jns
mov
mov
xchg
sub
sbb
mov
adc
pop
cmp
mov
or
pop
out
ds
js
or
xchg
or
cld
cld
and
adc
mov
outsb
cld
or
jle
idivb
out
loope
das
iret
pop
ja
out
and
xor
arpl
xor
adc
mov
inc
add
pop
fwait
cs
sbb
inc
push
nop
inc
adc
push
adc
cli
adc
shll
loope
cld
cmp
fdivrs
inc
mov
or
lret
xlat
inc
mov
shrl
xor
jg
cmc
dec
xchg
sbb
je
leave
xchg
sub
sbb
ret
aas
and
rol
push
lcall
jo,pn
dec
cld
mov
jge
dec
lret
cld
in
mov
xor
and
test
or
pop
xchg
or
push
popa
aas
std
jp
pop
cld
jmp
pop
push
sub
cmc
stc
jns
test
cwtl
loop
mov
xchg
sub
out
pusha
mov
push
inc
or
xchg
add
xor
push
cmp
mov
repz
dec
sbb
xlat
sbb
cmp
mov
insb
inc
sbb
mov
push
push
push
add
ret
mul
movsl
push
and
lcall
rcrb
inc
mov
je
dec
gs
dec
push
sub
outsl
add
test
mov
dec
ret
mov
popa
xchg
mov
fcom
sub
mov
lea
jo
sbb
adcl
cmp
push
iret
nop
lea
loope
inc
dec
cmp
xchg
fwait
mov
and
enter
or
sbbb
cmp
sbb
rcrb
imul
mov
xor
sbb
and
je
stc
xor
in
jle
jbe
and
call
xchg
mov
and
inc
push
notl
jae
mov
cwtl
inc
clc
loope
adc
adc
xchg
aam
rcll
adc
push
add
popf
fs
jb
enter
fwait
nop
and
dec
sbb
adc
push
nop
pop
push
and
mov
push
test
pop
cmp
dec
xor
push
fs
stos
mov
sub
xchg
mov
loop
xor
xchg
fwait
inc
pusha
js
adc
jl
lahf
or
arpl
lock
cmp
std
bound
mov
lahf
jle
mov
popf
je
add
loopne
xchg
test
xchg
arpl
and
call
mov
mov
bound
sub
sbb
mov
add
jge
lds
rcrb
sub
scas
repnz
loop
popa
adcb
push
xchg
pop
leave
sub
movb
mov
daa
ja
xchg
test
adc
je
mov
fsubs
mov
stos
push
mov
in
mov
lods
nop
jne
in
ret
xor
lock
mov
jae
clc
inc
or
cmp
push
cmp
js
insl
add
ret
into
stos
shrb
lea
in
inc
mov
mov
or
call
mov
mov
mov
in
call
inc
mov
and
stos
dec
sbb
mov
or
pop
and
or
lods
push
pop
xchg
testb
add
or
xor
sub
jmp
iret
sti
lea
es
sub
ss
imul
pop
das
pop
cmpsl
sub
or
call
sbb
stc
inc
cmpl
mov
jnp
repnz
and
jmp
in
xor
or
push
iret
fcoml
or
xchg
int3
enter
jno
mov
out
pop
icebp
testb
adc
in
jl
in
rorl
dec
jmp
pop
cmp
rorl
js
mov
hlt
and
cmpsb
sub
cli
lret
jmp
testb
aas
bound
adc
xchg
push
push
call
xor
dec
dec
add
clc
jb
mov
je
sub
mov
inc
mov
jl
push
pop
jle
insb
sub
inc
dec
sbb
mov
int3
imul
sahf
or
mov
aad
fildll
int
les
push
ds
sbb
cs
push
cmp
lahf
jbe
sbb
mov
push
cmp
loopne
je
int3
cmpl
movsb
icebp
shlb
rcl
jb
popa
pop
enter
pop
gs
cltd
xchg
mov
xor
jle
subb
adc
scas
repz
movsl
loope
and
stos
mov
and
les
push
pop
and
inc
ss
push
sub
pop
dec
ja
imul
sub
mov
pop
and
cmp
jge
adcb
mov
pop
test
add
pop
inc
testl
push
inc
dec
or
fcoml
lret
pop
xor
ret
adc
outsl
dec
dec
jp
jecxz
call
lods
pop
iret
mov
cmp
lea
inc
xor
out
mov
pop
cmp
pop
xchg
popf
dec
in
mov
lock
fnstenv
test
dec
pop
in
cmp
and
scas
fcompl
das
pop
out
pusha
mov
and
out
jle
sub
es
test
movsl
mov
sub
xorl
sbb
xchg
sub
in
and
inc
inc
adc
fwait
iret
mov
and
insl
or
pop
and
scas
push
inc
inc
or
cmc
jp
inc
push
xchg
and
leave
mov
int3
sub
jno
push
push
adc
lahf
lds
rcr
jmp
dec
test
adc
repz
dec
notb
pop
aam
jb
cmp
and
pushf
frstor
pusha
sub
add
and
jge
and
aas
dec
jg
mov
or
sbb
psraw
nop
into
adc
push
xchg
adc
out
sarb
lea
push
ljmp
jne
mov
fistpll
mov
mov
push
daa
jb
bound
call
pop
mov
cld
or
jno
xchg
daa
loope
jg
outsl
push
stc
adcb
or
fmull
icebp
call
mov
push
sub
add
inc
sub
mov
cmp
cmpsb
imul
mov
xor
push
loopne
push
call
stos
pop
cmp
test
adc
inc
movsb
shll
adc
push
aam
inc
out
pop
adc
addr16
flds
jl
adc
lds
scas
push
jo
pop
sub
add
in
jno
mov
daa
mov
mov
mov
jmp
add
lret
and
push
mov
leave
cmp
adc
movsb
cmp
movsl
xchg
lods
imul
sub
fs
imull
dec
inc
test
inc
incb
xchg
stc
fwait
push
call
add
arpl
xchg
clc
add
inc
sbb
inc
sub
pop
jno
cs
mov
jmp
addb
call
repz
icebp
int3
jno
or
xchg
sub
hlt
in
sub
dec
test
in
sub
mov
pop
sti
gs
out
pushf
orb
mov
mov
outsb
nop
daa
dec
or
sbb
pop
pop
or
jg
push
cwtl
fbld
and
jecxz
pusha
je
rcr
std
fistpl
push
mov
push
pop
cmp
xor
sbb
movsb
fnstenv
sub
int3
push
xchg
sub
sub
daa
mov
adc
push
fldenv
clc
inc
clc
jnp
fmuls
jne
test
movsb
gs
sahf
in
insb
jnp
addr16
push
pusha
dec
and
imul
xchg
jb
lahf
mov
sbb
pop
sub
sbb
dec
sbb
sti
push
ret
das
jge
stos
insl
test
adc
shrb
push
sub
sarl
je
cmp
fldl
inc
pop
sbb
add
push
stc
add
jne
mov
push
out
add
add
inc
and
pop
cmp
sbb
pop
inc
aas
push
xchg
jmp
aas
mov
xorb
add
sysret
or
push
inc
add
mov
lea
jge
sub
stos
jmp
scas
ss
inc
jle
mov
inc
sub
sbb
enter
add
or
out
or
push
jno
or
jg
xchg
mov
sub
call
lret
adc
sub
arpl
dec
mov
ss
push
xor
jg
mov
xchg
mov
lds
mov
xor
jb
sbb
adc
cmp
cs
and
in
mov
pop
or
bound
leave
cmc
add
sbb
adc
push
add
dec
rorb
loopne
fmuls
fcoml
in
xor
add
jge
jne
mov
xor
push
xchg
js
push
mov
mov
mov
push
aam
push
xchg
mov
fs
mov
lods
fnstsw
scas
loop
rorb
cld
lahf
fcoml
xchg
pop
sbb
mov
jg
inc
in
inc
sti
int
and
push
enter
cli
stc
jne
imul
fstps
fsubrs
xchg
or
fcoml
sbb
aam
sbb
cmp
cld
pop
or
repnz
jne
std
rorb
jp
notb
lahf
ret
je
out
js
inc
insb
cmp
and
cmp
mov
lahf
push
loopne
mov
mov
or
sub
jg
movsl
jp
xchg
mov
jecxz
pop
lret
shlb
rcll
jmp
push
jmp
cmpsb
cwtl
lods
xor
push
xchg
data16
pop
clc
stc
dec
jbe
push
cmp
ror
insl
dec
mov
testb
sub
mov
dec
inc
push
lock
xchg
fstpt
loope
push
popf
enter
and
aad
mov
ret
xor
shrl
or
psubb
jmp
pop
sub
out
xchg
movsl
lea
adc
cwtl
popf
mov
sub
ret
sarb
cld
inc
hlt
add
out
or
je
push
mov
xchg
push
jle
or
or
and
sub
lcall
pop
push
xor
popa
test
jmp
xor
adc
cld
xor
add
mov
dec
pushf
test
sbb
push
or
jmp
pop
xorl
pop
sub
push
sub
je
jae
jae
call
cmp
jmp
inc
or
xchg
or
dec
daa
addr16
fnstcw
sbb
hlt
push
mov
lods
sub
nop
adc
push
pop
fs
dec
adc
incl
fidivrs
in
push
shll
rorl
into
sbb
in
jne
adcl
sbb
jge
imul
je
mov
adc
cmp
xchg
add
das
fcoms
loop
adc
enter
add
cmp
lea
ret
test
bound
cmp
sar
sub
add
push
loop
xchg
aad
push
out
addr16
xchg
fidivrs
mov
push
jmp
and
adc
add
push
add
sbb
pushf
mov
shlb
loopne
cmp
push
pop
outsl
push
cmc
stos
repnz
lret
jb
adc
sar
dec
push
xor
test
in
add
sbb
bound
xor
lar
call
or
pop
mov
sub
pop
push
mov
cltd
fstpl
in
xchg
std
mov
mov
adc
and
jne
inc
out
mov
add
outsb
cmpsl
or
sarb
ret
out
xor
cmp
std
dec
pop
lea
lea
jg
out
call
addl
dec
push
lods
sub
mov
fisubrs
and
inc
inc
pusha
add
sub
ja
jge
sbb
insb
std
daa
jmp
aaa
jecxz
es
jb
je
outsl
or
push
data16
lods
sbb
inc
das
and
xchg
dec
push
es
je
pop
push
push
das
add
inc
xchg
arpl
popf
jmp
cmc
mov
adcl
and
je
add
push
push
mov
cmp
aad
xor
fsubrp
imul
js
xorps
sti
pop
mov
sub
dec
pop
mov
ds
dec
lods
mov
lret
xor
testl
inc
movsb
or
push
sbb
cmp
inc
or
jle
ljmp
and
xor
dec
mov
scas
loopne
je
inc
pop
cwtl
sub
mov
mov
adc
je
jecxz
sar
xchg
or
and
orl
add
in
push
mov
hlt
inc
testb
jbe
xor
xchg
add
adc
imul
push
les
je
xor
push
xor
loopne
jb
or
push
lea
adcw
add
pop
mov
pop
and
nop
push
inc
fmuls
push
dec
repz
xor
adc
jns
es
sub
cltd
mov
inc
mov
pop
and
loop
gs
or
popf
mov
ret
push
sarl
fwait
mov
je
pop
pop
adc
jle
xor
cmp
scas
and
fs
int3
pop
sub
adc
and
lock
pop
into
mov
inc
dec
add
leave
mov
int3
imul
lods
outsb
gs
adc
xor
push
inc
fcoms
cld
xchg
xor
or
and
repnz
faddl
scas
mov
adc
xor
in
inc
push
push
repz
jmp
cmp
mov
xchg
cli
fistps
dec
mov
ss
adc
or
icebp
pop
jns
xchg
ljmp
popf
push
mov
inc
inc
push
adc
xor
jmp
pop
adc
aad
push
add
and
push
test
push
call
aaa
icebp
sub
popf
int
loopne
push
pop
and
push
call
push
xor
das
aam
adc
xchg
sbb
daa
push
jnp
jge
xchg
adc
stos
mov
lret
or
imul
loop
ret
jl
and
es
or
push
sub
or
or
mov
sub
sbb
ret
push
dec
lds
sbbl
dec
fsubr
into
mov
dec
movsb
nop
or
orb
fsts
mov
and
xchg
add
and
adc
xorl
jae
mov
sub
dec
and
adc
cmp
jg
enter
xchg
push
dec
push
dec
xor
repnz
lcall
fsubl
push
test
jb,pn
adc
movsb
dec
inc
clc
es
in
add
andl
xchg
in
push
xor
mov
ret
imull
es
rclb
pop
jmp
sahf
add
sbb
jne
out
call
popf
sti
ret
or
jne,pt
xor
xchg
add
add
stc
xchg
adc
pushf
movsl
repz
notl
adc
mov
xchg
pop
lret
sub
xchg
loop
mov
test
push
pusha
shll
or
daa
fcoms
iret
push
repnz
repz
in
or
or
push
in
mov
xor
jge
or
jne
push
in
loopne
icebp
add
xor
adc
mov
adc
test
and
adc
enter
jns
push
jle
mov
dec
and
push
sbb
aam
jno
daa
inc
and
pop
xor
das
faddl
fdecstp
andb
sub
sbb
add
dec
mov
or
or
test
xchg
icebp
mov
outsl
sbb
popf
xor
out
xlat
adc
mov
enter
xchg
or
adc
pop
pop
and
jecxz
push
dec
in
and
pop
jnp
and
sub
xchg
dec
ss
dec
pop
inc
add
mov
fwait
out
shll
jmp
mov
inc
add
push
mov
lret
lds
outsb
leave
xlat
push
das
xchg
sbb
dec
push
test
or
pop
roll
call
insl
jp
xlat
daa
cmp
cmpsb
lahf
add
xchg
add
xor
lods
jne
ljmp
mov
or
sbb
xchg
or
stos
adc
dec
outsl
jg
add
imulb
adc
cmp
adc
fbstp
jmp
insb
push
je
fsincos
inc
les
cmp
clc
pop
rclb
sbb
cmp
mov
lcall
hlt
negb
sub
test
jmp
push
icebp
scas
mov
or
out
jnp
mov
mov
imul
pop
cmp
mov
fdiv
xor
loopne
call
mov
mov
add
ret
or
pop
dec
or
adc
ja
mov
or
test
clc
test
and
and
loope
jmp
dec
dec
fs
or
cmp
push
and
les
mov
jae
and
mov
insb
jbe
aas
movsl
xlat
aas
adc
leave
xchg
xor
fildl
mov
lret
cltd
int
lea
ja
jg
scas
scas
loop
inc
xor
adc
push
sbb
xchg
lock
jne
jmp
shr
adc
adc
mov
enter
jge
loope
xor
inc
push
adc
sbbl
push
lea
xchg
cmp
mov
pop
dec
das
cmp
mov
lcall
cmp
sub
lods
push
cmpsl
test
push
xorb
inc
inc
push
dec
inc
add
insb
sub
sbb
push
and
jns
call
pop
add
pop
push
rcll
add
rorl
ret
mov
xchg
inc
mov
adc
int3
das
inc
stos
inc
aam
int
das
or
jecxz
je
adc
mov
add
lret
add
sub
dec
xchg
or
in
mov
lret
xchg
adc
cmpsl
or
imul
inc
test
jmp
add
cld
and
mov
test
fistl
pop
out
pop
lret
adc
add
jb
lret
mov
repnz
lret
pop
pop
pop
xchg
push
or
mov
xchg
sub
and
mov
out
or
in
div
jmp
daa
push
mov
scas
js
mov
inc
testl
test
jae
mov
fisubs
data16
pop
test
sbb
out
cmp
cmp
sub
jb
adc
jmp
sbb
and
mov
push
ret
sbb
fcmovnbe
jb
cmp
lods
outsb
bound
pop
add
mov
push
cld
and
jl
ljmp
movsb
mov
sahf
jmp
mov
or
push
cmp
movsl
or
xchg
ss
daa
hlt
inc
mov
inc
clc
adc
jge
push
fsubrp
mov
lds
loop
and
outsl
lods
ficomps
mov
outsb
mov
sbb
and
dec
pop
fs
add
add
jbe
or
jg
je
incl
cmp
cmpsl
or
aam
sbb
inc
mov
imul
dec
nop
mov
jmp
pop
adc
sbbl
jbe
gs
test
or
adc
jne
push
orl
or
cmpsb
call
dec
jbe
pop
jmp
mov
cmp
jle
inc
aaa
dec
mov
ret
mov
pop
data16
cld
push
and
cltd
push
repnz
lcall
jno
out
xor
add
jbe
adc
push
jp
call
adc
aad
lahf
and
add
xor
popa
insl
gs
add
add
fists
das
adc
ret
xor
inc
loopne
lcall
xchg
imul
jmp
sti
pop
shlb
push
jmp
bsr
jp
dec
and
icebp
shll
or
mov
in
pop
inc
outsb
testb
mov
lret
cmp
inc
mov
adc
adc
xlat
leave
int
pop
mov
ret
ret
push
xchg
mov
sbb
mov
in
inc
add
jmp
jmp
mov
mov
inc
test
pop
push
cmovns
adc
mov
call
pop
setno
cs
test
dec
dec
adcb
call
mov
jne
add
outsb
mov
mov
xchg
jo
arpl
outsb
in
mov
ret
jl
cmp
mov
sub
pop
mov
lock
cmp
xchg
pop
sbb
sub
xchg
loope
int3
insl
lret
adc
inc
mov
je
jo
and
push
pop
fsubrp
out
cwtl
popa
or
repnz
push
lret
mov
jnp
fdiv
jne
ss
ret
jne
inc
push
lahf
les
lahf
adc
fsts
push
cmp
push
das
inc
mov
and
clc
adc
test
jl
jl
insl
xchg
xchg
in
insl
push
mov
jmp
repnz
testl
push
inc
in
adc
ds
cld
sbb
cltd
scas
sub
xlat
lret
inc
sbb
mov
outsb
stc
inc
les
lods
dec
mov
fisttpl
push
std
dec
cwtl
push
mov
adc
xor
add
mov
js
dec
sbb
pusha
rcll
add
clc
jb
jo
push
lea
cmp
aas
push
push
or
add
and
push
idivb
jl
and
test
mov
out
mov
test
dec
inc
fldenv
adc
enter
dec
jae
cld
jne
dec
and
lock
jns
cmp
push
rcll
sbb
jnp
sub
pusha
xchg
jnp
sub
arpl
insb
arpl
xor
cmp
bound
sub
fmull
aad
bound
cmp
push
xor
or
bound
fisubs
inc
cld
jmp
jb
mov
jmp
mov
aas
sbb
pop
jl
push
xchg
adc
pop
test
aam
fimull
lcall
adc
lea
push
sub
sarb
jg
popf
sti
cmp
push
movsb
out
or
cmp
rclb
mov
adc
pop
jne
cld
adc
or
jmp
push
test
jo
adc
aam
and
and
adc
fcompl
dec
ja
xchg
stos
jbe
mov
push
inc
pop
cmp
inc
add
lret
inc
xchg
ja
sub
mov
or
inc
xor
outsl
sbb
jne
and
lret
into
repnz
sbb
sbb
pusha
loop
inc
mov
ret
mov
ret
xchg
jle
sub
adc
stc
lds
adc
add
push
or
or
popf
or
push
adc
je
jle
jbe
cli
jg
rcll
and
mov
xlat
int3
mov
pop
loopne
cli
xchg
inc
and
lods
js
and
mov
xor
and
out
in
mov
movl
jae
ds
and
les
lea
pop
xchg
imul
decl
add
or
push
or
rep
xor
dec
adc
ret
sub
jb
pop
adc
push
inc
mov
or
jns
adc
sub
cld
dec
ja
push
pop
rcrb
mov
ja
pushf
cld
call
test
cmpsb
jns
mov
xor
mov
push
mov
pop
dec
push
pop
in
dec
addl
add
jbe
xlat
test
and
aad
aaa
lods
push
cmp
add
je
inc
cmp
hlt
jb
cld
rcl
cmpsb
mov
clc
xchg
or
jl
adc
jne
push
gs
stc
imul
imulb
inc
ss
mov
mov
dec
popa
iret
dec
outsl
stc
pop
int
pushf
stos
jbe
push
adc
mulb
sub
stos
and
mov
push
push
mov
cmp
cmp
cmp
xorl
add
or
outsl
or
nop
push
dec
dec
stos
lret
adc
cwtl
stos
sub
leave
adc
and
das
stc
popf
add
mov
mov
jns
in
push
pop
lea
mov
inc
adc
dec
add
cwtl
push
push
cmp
mov
or
cwtl
mov
out
mov
or
xchg
push
sub
sub
or
push
pop
and
repnz
pop
fdivrl
repnz
jmp
cmpsl
aam
lods
and
vzeroall
add
pop
push
dec
and
inc
sbb
test
aam
adc
mov
sub
mov
adc
dec
mov
shrb
sbb
mov
inc
cmpsl
pop
mov
cmp
inc
setne
iret
add
sub
dec
mov
dec
cmp
pop
xchg
sbbl
cs
pop
das
push
jg
int
fbld
imul
inc
jl
pop
adc
pop
adcl
in
out
jmp
out
dec
jns
das
and
push
cmp
xorl
push
and
into
sub
mov
sbb
jl
push
mov
jecxz
xor
scas
fisttps
sub
popa
jmp
adc
jmp
mov
test
cpuid
cmc
stc
or
push
adc
cmc
push
and
aaa
xchg
inc
add
fs
push
lds
inc
mov
push
movsl
mov
int
xor
push
leave
in
or
adc
xchg
sbb
and
sbb
sub
inc
or
jae
sbb
js
adc
lahf
add
call
pop
jo
jmp
mov
mov
mov
jmp
dec
adc
jmp
test
or
out
std
test
sub
and
mov
adc
and
mov
mov
aad
adc
shrl
push
sbb
push
push
les
jne
call
mov
aad
jle
jbe
popa
sti
adc
xchg
mov
outsl
push
je
je
lea
push
cmp
test
and
mov
jnp
cmovne
dec
sbb
jmp
je
mov
bound
cmp
inc
adc
jmp
test
jmp
push
jo
test
xor
pushf
sbb
loope
jmp
lds
das
push
add
sub
xchg
lcall
push
movsl
ss
and
les
xor
mov
aad
cmp
jne
rcr
push
pop
adc
xchg
add
mov
and
movsb
or
push
and
xlat
mov
xor
cli
rep
adcl
imul
mov
stos
int3
adc
or
mov
xor
dec
cmpsb
cltd
je
fisttpll
bound
fwait
adc
or
je
add
xor
cmp
cmp
sub
cli
pop
rcrb
sub
sti
fnstsw
sub
ja
and
dec
cmp
mov
sbb
rclb
cmp
lea
scas
xchg
nop
test
shrb
dec
jmp
stos
int3
dec
add
out
xor
sub
inc
lret
sarl
rorb
repz
mov
lods
stos
in
xchg
add
addb
stc
pop
daa
sti
xchg
ljmp
loopne
shrb
cmp
pop
push
and
lea
loopne
inc
adc
loopne
add
fcoml
pop
xchg
jmp
or
and
xchg
das
call
cltd
push
das
ficoml
sub
outsb
fldenv
filds
mov
xor
cmp
push
hlt
test
fisttps
ja
inc
lea
mov
or
inc
inc
lock
push
es
adc
cmp
push
dec
cmp
and
mov
scas
push
push
dec
dec
push
inc
push
inc
xchg
mov
xchg
inc
sbb
xchg
inc
inc
cmp
add
inc
push
mov
cmp
adc
cmp
sbb
or
xchg
push
nop
inc
setne
aam
mov
cmp
or
in
insl
int
sbb
std
ror
ret
lock
mov
rorl
inc
pop
mov
mull
add
outsl
mov
es
lock
dec
shl
decl
push
inc
mov
insl
fldenv
push
in
sti
mov
push
call
xor
inc
adc
pop
les
sub
pop
add
inc
adc
ret
cmp
rcll
lods
cmp
inc
mov
sbb
mov
test
cmp
sbb
cmp
dec
push
cmp
xor
test
ss
mov
sbb
in
fisubrs
mov
bound
pop
jg
orb
inc
push
push
sbb
jecxz
in
ljmp
inc
adc
cmp
outsl
loopne
adc
adc
int3
in
jecxz
xchg
adc
iret
ret
add
cmp
test
mov
adc
pop
xchg
mov
jge
xor
or
dec
into
call
mov
jg
push
and
popf
mov
cmp
jb
or
add
push
sub
dec
jno
outsb
xchg
jmp
repz
rorb
rcrb
ret
or
sbb
jg
jmp
sub
dec
lods
dec
jo
inc
sub
in
xlat
add
dec
push
daa
jbe
jne
insb
sub
ret
es
stos
push
rclb
ja
sub
das
xchg
push
push
dec
pop
lods
decb
repnz
call
test
orl
mov
push
filds
or
aam
mov
fs
push
push
es
mov
or
push
jg
cmp
or
add
dec
or
mov
add
jmp
inc
xor
iret
das
jge
andl
lcall
pop
xor
ret
dec
xchg
sbb
xor
mov
daa
jle
int3
adc
or
sbb
sti
sub
dec
xor
or
adc
je
dec
add
sub
push
ret
popa
mov
rclb
sbb
xor
lret
fidivl
pop
add
mov
mov
jnp
loopne
and
imul
mov
in
pop
xchg
aaa
insl
je
test
adc
or
mov
or
call
cwtl
or
cld
prefetchnta
enter
or
mov
cmp
mov
ret
aaa
lea
xor
xchg
mov
out
pop
add
lds
and
push
xor
call
push
out
push
adc
xor
mov
push
loope
int3
push
enter
je
repnz
adc
out
push
add
mov
fnsave
test
mov
lods
xchg
ds
pop
and
mov
mov
add
dec
lods
cmpl
call
jnp
pop
movsb
xor
push
fisttpll
mov
arpl
call
push
and
push
mov
scas
jle
jb
mov
xchg
test
sub
or
int3
pop
push
push
nop
je
sbb
fs
jge
imul
jb
dec
es
and
jns
mov
test
inc
adc
or
xor
push
addb
mov
repnz
and
stos
push
and
dec
stos
jno
jo
push
insl
pop
jmp
mov
cs
test
mov
sub
adc
sub
push
test
xor
cwtl
inc
dec
push
inc
popf
dec
jmp
xor
adc
lods
lret
sub
push
pop
push
push
sub
inc
cld
cmp
sbb
shrb
movswl
mov
lcall
lahf
sub
or
mov
mov
insb
or
jg
lret
filds
xchg
or
jp
xor
or
pop
mov
aad
mov
addb
daa
enter
mov
adc
jns
call
out
adc
sbb
and
xor
mov
sbb
call
dec
inc
cli
dec
int3
inc
icebp
aas
adc
hlt
scas
in
clc
mov
stos
scas
mov
dec
psubq
or
inc
lcall
add
mov
xor
mov
sub
pop
mov
jo
cmp
test
xorb
cmp
adc
xor
cmovle
mulb
or
mov
add
aas
aam
ret
daa
cmp
mov
jp
xchg
imul
xor
jb
dec
adc
xor
jo
cmp
call
mov
push
mov
lret
or
jmp
ljmp
cltd
cli
adc
push
ret
cmp
sbb
add
sahf
sbb
or
inc
bound
nop
mov
sub
fs
mov
jmp
xlat
in
xor
mov
rclb
sub
pushf
repnz
pusha
aam
mov
cmp
jmp
sbb
dec
mov
lret
in
jle
inc
xchg
jge
jo
jmp
out
scas
out
adc
push
jl
pop
jo
call
xchg
mov
cmp
aaa
popa
imul
enter
ljmp
adc
or
rcl
push
or
and
push
mov
pop
push
shlb
add
sbb
jae
inc
pop
lret
inc
pushf
sub
push
call
cmpl
cmp
or
call
push
cwtl
adc
mov
or
or
in
outsl
inc
jge
test
fisttpll
popl
mov
movsl
lock
sub
out
dec
das
sti
adc
add
dec
pop
leave
in
jno
xor
adc
push
xlat
adc
cli
dec
rol
mov
ss
cwtl
scas
dec
cmp
les
int
test
outsb
testl
outsb
xor
mov
rolb
punpckhdq
jp
adcl
jg
adc
orw
lock
push
aas
adc
cmp
inc
jg
xor
cmp
mov
bound
jp
decl
mov
jge
mov
add
sbb
pop
mov
dec
lret
jnp
roll
pop
dec
mov
xor
pop
jne
cmp
jmp
mov
adc
movsl
adc
add
call
add
xchg
mov
xchg
mov
lods
jo
jo
and
gs
jb
imul
insl
loopne
int3
sub
and
jbe
fnstsw
clc
xchg
inc
bound
xchg
push
pop
sahf
mov
sbb
push
sub
xor
mov
test
pop
dec
dec
push
adc
es
mov
mov
cmp
call
or
es
inc
push
jmp
sub
inc
push
push
jle
inc
push
jl
jns
and
or
sbb
jge
cmp
ja
test
push
push
pop
jbe
jle
add
jo
dec
int3
add
sarb
negl
repz
sbb
scas
cmp
pop
cmp
les
rorl
and
jle
inc
je
or
mov
lds
sbb
xchg
sub
lret
and
dec
dec
cmp
loop
jns
xlat
test
movsl
movq
add
lahf
xor
jmp
inc
ret
mov
cmp
push
lock
xchg
flds
shll
sbb
push
mov
inc
pop
lret
ret
push
pop
pop
sbb
enter
das
and
notl
incl
shl
xor
and
add
or
mov
mov
and
ret
js
imulb
inc
sub
push
xor
ret
pusha
loopne
inc
addb
adc
faddl
pop
in
cmp
and
push
or
pop
push
inc
pop
adc
ja
push
data16
push
stos
jnp
xchg
xchg
push
and
cmp
push
mov
xorl
jns
dec
sub
push
jb
icebp
cmpl
jns
and
sbbb
xchg
pop
repz
xor
mov
dec
sarl
sbb
or
jg
shl
sbb
push
daa
pop
repz
xchg
and
test
pop
sub
jno
mov
test
call
hlt
mov
outsb
push
and
fcmovnu
orl
cmpsl
fsubrl
add
xorb
or
int3
add
sub
or
jne
push
imul
sbb
or
sub
and
movzbl
imull
das
xchg
ret
dec
dec
pop
es
rorl
jno
pop
iret
out
subl
inc
in
dec
mov
push
std
sub
sahf
xchg
xchg
daa
loopne
mov
mov
mov
dec
mov
js
dec
push
iret
or
cmp
sub
lock
dec
push
insb
jecxz
sbb
lods
gs
roll
mov
mov
xchg
jecxz
cli
xchg
xor
adc
xchg
cmpsl
adc
int3
sub
pop
mov
or
orb
sbb
je
and
aad
sahf
or
inc
push
xor
test
das
add
je
andb
inc
add
push
dec
shl
jmp
inc
push
inc
sub
dec
mov
jne
rclb
adcb
add
stos
mov
adc
and
jmp
shrb
sbb
mov
push
pop
cmp
jne
movsb
dec
jnp
jnp
dec
jo
sub
int3
adc
jno
std
mov
inc
ret
fs
je
movsl
rclb
or
sub
cmp
jmp
mov
cmp
je
cld
jmp
dec
lret
call
dec
in
adc
jg
cmp
inc
je
push
push
or
cmc
push
je
jae
leave
imull
lea
and
aam
push
aam
enter
mov
xchg
jge
push
pop
mov
ds
pop
cmp
dec
or
jne
call
mov
mov
lea
filds
fld
orb
aaa
das
rcrb
inc
xchg
inc
andb
ja
stos
into
adc
xchg
hlt
movsl
jl
shlb
comiss
xor
mov
push
fisubrs
out
into
sbbl
mov
std
addr16
push
in
hlt
test
xchg
adc
clc
lea
mov
push
call
orb
test
int
jp
dec
mov
jle
stc
shl
add
call
bound
adc
and
adc
or
push
ret
xor
or
clc
inc
cmc
out
and
jmp
mov
bound
adc
xchg
cmp
call
push
test
inc
xor
xchg
pop
and
inc
rorl
inc
dec
sbb
mov
adc
out
cltd
inc
sub
dec
or
add
pop
dec
out
ds
push
and
mov
mov
mov
cmp
daa
sar
mov
sbb
cwtl
add
jle
mov
dec
sbb
adc
data16
push
push
dec
sbb
sub
xchg
inc
icebp
jg
add
mov
leave
sub
mov
rcll
mov
addb
cmp
xor
adc
es
call
cmp
stos
xchg
xor
sbb
xchg
ret
mov
mov
loope
test
mov
and
push
sbb
jmp
add
cmpsl
lcall
popa
sbb
and
xchg
or
adc
xchg
rorl
cmp
imul
xchg
addr16
xchg
jo
popaw
or
xor
push
mov
dec
adc
dec
daa
pusha
les
jle
cmp
iret
xor
leave
or
or
xchg
sbb
or
or
or
enter
pop
and
js
mov
push
or
cwtl
and
and
addb
push
lea
ret
outsb
pop
adc
and
adc
mov
testb
xchg
in
js
adc
sub
je
call
jecxz
xorl
mov
jp
sbb
jl
pop
inc
and
jns
into
in
popf
stc
int
cmc
or
inc
pop
and
sub
inc
push
pop
sub
je
neg
push
add
repnz
les
sub
lcall
xchg
mov
shrb
pop
nop
xor
pop
adc
xchg
enter
push
stos
and
notl
inc
inc
push
cmp
roll
dec
je
fdivr
cmpsb
mov
and
pop
mov
add
outsl
cmp
adc
inc
mov
mov
dec
push
cmp
pusha
push
push
call
push
mov
or
push
fs
dec
pop
repz
dec
push
jmp
mov
jno
xchg
dec
mov
sbb
push
xchg
sahf
xor
repnz
adc
pop
and
lods
dec
fucomip
mov
nop
adc
loop
and
push
xor
or
inc
das
add
mov
and
mov
repz
cmpxchg8b
xlat
movl
push
mov
xchg
jmp
cmp
sbb
cli
mov
add
mov
add
mov
or
or
notb
inc
push
add
mulb
mov
and
xor
sbb
mov
cbtw
scas
push
nop
inc
and
adc
add
cmp
cmp
dec
pusha
mov
cmpsl
pop
sbb
mov
push
push
push
pusha
add
add
jo,pt
sahf
pop
cmpsl
fisubrs
push
and
and
add
xchg
xchg
and
add
adc
adcl
mov
mov
mov
adc
mov
dec
pop
or
ljmp
mov
jle
pop
imul
add
push
loope
cmp
xchg
lods
xchg
stos
aaa
bound
dec
jnp
push
sbb
mov
leave
in
or
cwtl
dec
mov
push
push
mov
xchg
leave
mov
xchg
xchg
xchg
fisubs
je
in
stc
push
cmp
cmp
adc
in
into
jne
scas
aaa
pop
pop
cmp
push
pusha
sbb
sub
pop
sahf
cld
ss
and
xchg
jle
mov
jo
leave
xor
bound
sub
subb
jne
push
push
ds
cld
jae
js
sbb
push
push
cmp
fcompl
push
adc
or
mov
cmp
add
test
adc
es
adc
inc
xchg
inc
add
in
mov
or
inc
call
pop
and
mov
dec
stc
adc
out
negl
mov
mov
cwtl
in
xchg
ror
int3
leave
inc
xchg
sbb
and
leave
ret
insl
popf
test
rep
sbb
mov
sbb
push
cltd
jnp
pop
adc
push
push
jno
jp
mov
adc
es
jne
subl
xor
call
or
clc
rorl
xchg
fcom
cmp
push
aaa
jbe
das
imul
aaa
adc
enter
and
and
mov
add
add
push
lcall
and
sarb
cmc
out
sti
popf
adc
test
or
rcrb
clc
popa
xchg
shlb
jns
ret
es
mov
inc
push
cmp
ret
rclb
data16
and
push
gs
bound
mov
mov
ret
in
neg
sbb
or
cltd
adc
inc
push
pop
push
clc
and
stc
mov
icebp
movsl
push
inc
xor
add
xchg
movsl
sar
lahf
jno
cltd
dec
push
add
cmpl
testl
in
jb
push
popf
mov
and
outsb
add
adc
ljmp
sub
scas
loop
push
les
in
and
test
lret
jne
cli
int
pop
mov
or
scas
inc
inc
dec
push
stos
cltd
cli
negb
adc
mov
aaa
inc
jnp
out
push
sti
nop
aaa
and
jg
aaa
and
inc
fmull
mov
dec
sub
fcmove
lock
jg
xchg
sbb
pop
mov
in
cltd
outsb
push
cmc
mov
xchg
pop
mov
or
fisubrs
mov
adc
les
push
jl
lock
in
mov
xor
test
stos
subb
dec
pushf
mov
enter
xlat
dec
roll
adc
dec
push
fdivrs
adc
or
lcall
shr
pop
test
in
pop
fs
xchg
rorb
and
add
nop
pop
jne
sahf
sbb
mov
xor
mov
sub
cmpsl
inc
or
mov
push
pop
fs
pop
loopne
adc
mov
sbb
sub
sbbb
mov
movsb
dec
sub
into
sbb
cld
ljmp
lret
lock
cmp
push
imul
cmp
hlt
push
xor
inc
sub
sub
movsb
pop
add
es
jnp
and
ljmp
loope
lods
cmp
js
cs
push
mov
pop
decl
push
push
fimull
and
lds
fidivs
repz
cltd
dec
xchg
adc
and
insl
pushf
xor
roll
call
adc
es
or
sub
shll
ret
das
or
pop
testb
call
mov
js
adc
aam
rorl
in
mov
dec
movsl
cld
mov
inc
clc
loope
mov
movsl
aaa
and
dec
aas
xchg
lcall
sub
out
aam
int
notl
mov
mov
dec
daa
xchg
mov
mov
or
arpl
mov
cs
leave
sbb
bound
mov
inc
or
mov
je
xor
cmp
mov
loop
lock
xchg
ffree
push
movsl
xor
and
pop
je
xchg
push
or
cmp
or
dec
adc
push
pop
add
movl
shrl
xchg
call
test
int3
or
add
cmp
ret
or
push
xchg
mov
fwait
aad
xor
adc
bound
jo
jmp
cmp
andl
cmp
in
push
int
mov
push
lea
icebp
xchg
jp
ljmp
cwtl
scas
fs
cld
ljmp
ss
mov
or
inc
test
mov
ss
jge
xchg
or
cmp
decb
cmpl
push
je
and
inc
adc
scas
mov
sbb
lea
inc
out
xlat
jns
push
jmp
sbb
or
cwtl
push
xchg
fldt
adc
das
adc
sbb
lock
shl
sbb
push
inc
lcall
mov
pop
stos
add
pusha
mov
cmp
xchg
lock
mov
sub
aad
push
push
data16
fimuls
xorl
stos
fs
sti
adcl
in
pushf
pop
cmp
push
push
sahf
cmc
jmp
add
add
pop
movsb
outsb
mov
pop
arpl
mov
push
xchg
sbb
jge
jno
dec
xchg
aas
sbb
shll
aas
pop
cmp
jne
cmpw
jecxz
loope
or
pop
xor
out
pop
dec
xor
or
test
imul
cmp
mov
sbb
push
or
lods
and
jns
je
icebp
inc
sbb
and
add
push
arpl
adc
or
outsb
hlt
push
sbb
cmpsb
pop
or
lea
pushfw
dec
addb
push
pop
mov
jmp
scas
sub
mov
inc
shl
adc
adc
pop
and
popa
jno
xchg
or
add
inc
and
lcall
pop
cmp
sub
sbb
mov
and
jmp
leave
jb
mov
pop
aad
test
adc
and
rorb
inc
adc
je
adc
negb
addr16
and
mov
push
dec
test
shlb
jmp
dec
jge
aad
rcrl
nop
ljmp
scas
pop
mov
popf
in
aaa
lahf
testb
sbb
pop
jmp
test
pop
mov
xlat
int
lcall
js
call
jl
imulb
inc
inc
aam
int
fimuls
std
sbb
push
dec
xchg
repnz
pop
xor
or
aas
subl
add
stc
das
pop
in
pop
sub
popa
and
jmp
mov
gs
out
sub
dec
dec
mov
pop
jb
sub
xchg
mov
ds
mov
or
xchg
into
lock
aas
mov
pop
xchg
sbb
cmp
or
fs
daa
roll
je
imul
and
xchg
jb
mov
adc
add
jns
add
and
aam
ret
or
sbb
add
push
in
or
loopne
add
and
push
cmp
add
je
popf
sbb
pop
xchg
cmpsl
inc
adc
lret
and
loopne
adc
sbb
and
pop
into
movsb
sbb
push
int3
or
fsubs
pop
rcrl
ret
push
clc
fldz
pop
cmp
cmp
sub
mov
xchg
fs
movsl
movsb
in
cli
jg
popa
lcall
icebp
push
or
cld
idivb
les
pop
enter
mov
mov
cmp
rorl
and
in
mov
repnz
test
mov
mov
bnd
and
jl
cmp
fisubl
inc
jne
cs
in
stos
fisubl
or
popf
rol
sarl
push
cmp
cwtl
loope
sub
stc
movsb
or
mov
movsl
mov
sub
dec
xchg
call
push
fdivs
scas
push
xlat
cmp
rorb
dec
das
or
sbb
mov
push
xor
lahf
inc
adc
int3
and
push
int3
cmpsb
and
scas
lock
cmp
mov
xor
or
mov
sbb
sub
addr16
cmc
or
inc
adc
addr16
aad
enter
push
mov
sbb
sbb
aam
popf
dec
imul
jl
aam
mov
roll
inc
mul
cmp
in
sahf
scas
xchg
and
gs
lock
ljmp
lock
hlt
sub
fcoml
loopne
xor
subl
dec
out
imul
add
cmp
call
or
mov
adc
cvtpi2ps
and
mov
mov
sete
in
mov
test
jne
mov
dec
packsswb
jmp
and
loope
inc
fildl
stc
or
cmp
or
dec
dec
cmpsb
sbb
lret
aam
stc
xchg
sbb
inc
mov
adc
dec
push
ljmp
repz
lods
pop
add
cmpb
jne
clc
sub
ret
mov
test
xchg
xor
jns
adc
movsb
add
xchg
insl
ljmp
sbb
jg
or
jbe
dec
and
loope
dec
cmp
addb
inc
mov
cwtl
das
je
xor
push
clc
jbe
lcall
xor
pushf
addr16
jb
sbb
xchg
add
pop
sbbb
add
enter
cmpsb
adc
inc
loopne
jp
je
mov
add
in
sbb
and
cmc
push
sub
or
mov
fldcw
jge
push
call
dec
pop
mov
jb
add
xchg
mov
popa
sahf
sarl
sub
fdivr
push
enter
mov
ret
sbb
js
call
adc
jg
ja
jne
mov
inc
std
lahf
subb
fsubr
jmp
sbb
gs
fwait
popf
popf
push
lods
inc
and
insb
std
xchg
pop
and
daa
sbb
or
inc
std
dec
push
aas
push
mov
push
ds
dec
adc
adcb
lds
ret
leave
cmpsl
faddl
inc
push
push
imul
pop
mov
jne
cmpsb
sbb
mov
adc
add
and
popf
ja
movsb
mov
sub
imul
dec
rclb
bound
mov
sub
cwtl
repnz
dec
push
sbb
addr16
loop
das
aaa
lret
fbstp
or
push
imul
aad
insb
lcall
adc
sub
or
enter
push
in
das
mov
test
mov
into
inc
dec
xor
mov
std
loope
adc
cmpsb
daa
mov
cltd
dec
rcrb
push
sub
je
dec
xor
inc
dec
fisubs
popf
inc
int3
sti
add
xor
and
jo
fs
cld
sub
cmpsb
cwtl
sub
pop
xor
ja
pop
out
int3
inc
loop
idiv
mov
inc
or
hlt
adc
and
cld
iret
pop
arpl
and
repz
and
cmp
add
xchg
lcall
loopne
sbb
add
iret
adc
mov
fisubrl
nop
and
sbb
dec
push
add
dec
jecxz
mov
mov
inc
imul
or
mov
push
int
add
add
shr
not
lock
add
jnp
call
test
rcrb
add
into
sbb
divb
les
lods
nop
les
add
mov
leave
pop
aad
cwtl
cltd
movsb
and
add
sahf
xor
mov
mov
xchg
push
in
loop
dec
xchg
fs
cmp
cmp
xchg
aaa
xor
enter
in
jne
dec
aad
or
fsubl
jne
add
push
aas
mov
int3
jbe
fisttpll
inc
fsubl
cli
mov
sub
call
and
lods
data16
sbb
lcall
mov
sbb
adc
add
movsb
and
add
xchg
mov
mov
rolb
enter
jb
sub
mov
or
jmp
push
inc
outsb
and
xlat
xchg
stc
into
sub
test
movsb
add
sbb
das
aad
mov
or
cmp
adc
pop
lea
movsb
push
rep
inc
inc
xchg
xchg
in
inc
dec
ds
lcall
leave
mov
data16
push
dec
call
adc
cli
jmp
jno
cltd
lods
pop
or
neg
sbb
lods
push
adc
sub
cmp
push
push
aaa
lahf
imul
jle
leave
jo
outsb
jb
push
pushf
dec
cmp
push
add
and
mov
lock
add
adcb
jbe
sub
pusha
mov
stc
mov
dec
sub
jno
mov
push
mov
inc
inc
cmp
jb
jb
stos
pop
outsl
mov
lock
sbb
mov
push
dec
add
inc
dec
add
cmp
jb
test
push
push
sub
mov
mov
push
xchg
dec
xlat
inc
pop
sti
sub
jo,pn
cs
fs
and
dec
leave
jnp
add
pop
in
subl
jp
inc
inc
dec
loop
push
pop
push
nop
out
pop
out
mov
lods
push
repnz
or
push
imulb
ja
jp
inc
mov
dec
push
cld
adc
leave
nop
xlat
imul
push
out
mov
repz
test
jge
fucom
xor
stc
lret
mov
push
je
push
lret
xchg
push
pop
inc
push
mov
movsb
pop
mov
add
and
scas
call
es
cmp
das
inc
push
out
jp
mov
xchg
lcall
in
push
aad
aad
cmp
int3
mov
mov
pop
mov
in
xor
adc
mov
aaa
addr16
pop
fs
and
mov
adc
clc
in
push
xor
inc
ds
add
lret
js
testl
iret
std
mov
pop
sub
add
in
out
call
mov
rcll
sub
xor
push
xor
rclb
rcll
adc
lea
xchg
dec
push
xchg
mov
xor
fdivs
lcall
jl
mov
xchg
adc
gs
lock
pop
mov
dec
add
js
into
negl
pusha
jecxz
push
lea
pop
cltd
pop
neg
rclb
test
popf
jae
add
mov
cltd
pop
sarb
add
mov
inc
mov
xlat
sbb
mov
push
jno
dec
call
fcoms
lahf
adc
dec
adc
or
sbb
dec
mov
jmp
push
rorl
push
push
mov
fsubrp
not
shlb
dec
hlt
icebp
iret
and
jp
mov
fsubs
push
jmp
or
or
add
push
xchg
call
sub
imul
inc
add
je
enter
fisttpl
jnp
and
push
push
test
in
imul
leave
jnp
and
loop
cmp
rorb
push
ficoml
and
add
inc
push
loope
int3
mov
add
pop
sbb
fs
outsl
sub
hlt
jne
adc
and
push
xor
sub
daa
decl
adc
pop
cli
icebp
push
inc
or
inc
jl
bound
push
lcall
mov
mov
adc
cmc
inc
bound
cmp
outsl
mov
mov
jle
adc
jle
jle
out
in
test
ljmp
push
push
mov
test
dec
ds
and
nop
inc
int3
jno
leave
daa
mov
dec
dec
and
fnstenv
xchg
mov
inc
adc
dec
jle
data16
leave
lea
mov
adc
mov
sub
out
clc
scas
clc
test
and
pop
dec
dec
out
xor
je
push
sbb
or
add
call
sbb
and
lret
or
dec
cli
cli
das
sbb
jbe
leave
xchg
popa
aaa
popa
das
cs
xlat
sub
js
xchg
fildll
lahf
inc
sub
xor
sti
ljmp
shr
add
lea
push
inc
xor
cli
and
mov
cwtl
sbb
adc
and
jge
xchg
adc
fcoms
xor
loope
ds
decb
fbld
push
in
xchg
push
add
add
dec
cmpxchg
push
push
add
sub
mov
dec
jo
or
cmp
je
cmp
or
dec
or
or
lock
enter
jo
shll
add
enter
dec
ja
push
inc
mov
mov
or
cmp
scas
lret
cmc
pop
adc
mov
pop
or
cmp
dec
adc
sub
jl
sub
sub
sbb
xchg
adc
sub
xchg
and
aaa
push
sub
lods
sub
push
pop
test
sub
dec
or
movsl
leave
fadd
test
lea
and
pop
in
addr16
in
les
aam
mov
adc
pop
push
rorl
lods
sbb
dec
mov
jb
into
push
cmpsb
lcall
cli
xor
call
dec
xor
movl
xchg
xchg
cmpsb
mov
xor
xor
or
cmpsb
sbb
imul
pop
stc
fdivs
and
xchg
xchg
pop
rcrl
leave
hlt
cmc
push
sbb
sbb
xchg
mov
cmp
cli
sub
adc
xchg
mov
call
pop
es
push
inc
push
loopne
mov
or
andl
sbb
jne
test
sbb
or
rcrl
or
add
mov
mov
cmp
jb
mov
push
push
inc
xchg
stos
or
adc
sub
sbb
test
pop
and
add
cmpb
cmpsb
iret
and
into
addr16
pop
pop
push
pop
mov
lock
push
or
adcl
enter
adc
dec
sbb
sbb
dec
adc
mov
enter
loope
sbb
inc
push
push
fmull
jno
dec
adc
sarl
sti
sub
sbb
outsl
xchg
sarb
add
inc
mov
shl
lock
push
lahf
pop
cmp
push
inc
or
clc
and
sub
outsl
push
xchg
and
jo
pushf
pop
pop
clc
and
sub
imul
or
push
scas
adc
cmpb
jecxz
in
in
pop
sbbl
sbb
andl
push
inc
push
pop
lock
pop
daa
push
pop
pop
movsb
adc
sub
popf
adc
adc
loope
push
cmp
pop
aam
gs
jl
enter
loopne
clc
arpl
ds
or
pop
inc
jmp
add
sbb
inc
out
sbb
push
push
cltd
sub
sar
push
mov
jbe
daa
push
in
cwtl
das
push
pop
xor
lock
or
sarb
xchg
imul
xchg
test
sub
cmpb
fidivs
mov
das
fisttpll
jp
cwtl
or
or
xor
inc
pop
adc
fildl
pop
shl
mov
adc
sub
jl
pop
sarb
and
in
push
jge
loop
das
aam
fimuls
js
push
mov
dec
int3
ds
cld
mov
pop
or
push
push
pop
xor
jb
push
les
sarb
add
cmp
jge
xchg
push
in
inc
and
lahf
mov
and
jnp
out
jmp
repnz
xchg
adc
shrb
les
xchg
aad
mov
and
mov
jge
adc
mov
les
add
cwtl
xchg
adc
jg,pt
pop
adc
das
xchg
adc
loop
xor
add
sbb
mov
mov
adc
inc
sarl
pop
xchg
icebp
sbb
pop
add
test
sarb
push
inc
imul
inc
rcll
mov
and
imul
call
out
and
and
je
icebp
repz
inc
or
out
xchg
lret
mov
push
call
subl
jne
or
push
and
scas
xchg
push
scas
xor
icebp
lret
push
loopne
push
sbb
mov
dec
jnp
imul
cmp
jl
scas
xchg
pusha
or
and
not
sub
push
sbb
cmp
xor
or
adc
adc
and
sbbb
cmp
in
jl
scas
adc
sarl
add
sbb
adc
rolb
jg
je
sub
aam
sub
and
and
inc
add
adc
dec
negb
roll
inc
mov
or
adc
pop
mov
inc
push
push
or
js
test
dec
or
xor
cld
xlat
clc
repnz
cmp
lar
jo
cltd
mov
dec
add
add
and
jne
dec
cmpsb
or
dec
mov
nop
ds
dec
xchg
jns
outsl
jmp
add
imul
add
call
out
pop
das
inc
loopne
jmp
xor
cmpsl
lock
test
cmp
xor
adc
test
inc
cmpsb
pop
aam
out
movsb
push
jmp
sahf
jo
xor
dec
movups
ds
push
inc
sbb
iret
push
or
call
mov
adc
lret
push
xchg
ds
popa
setl
push
push
mov
jmp
cli
pop
mov
jmp
sbb
or
ss
addl
repnz
jns
cmpsb
nop
inc
nop
and
ret
pop
insb
mov
into
aad
mov
lcall
pop
idiv
push
xchg
adc
iret
imul
orl
call
dec
sbb
fnstcw
mov
xor
sar
dec
add
call
movsl
arpl
or
sub
les
inc
and
sbb
es
adc
and
jge
fstpl
push
rclb
nop
cwtl
dec
pop
je
sub
rorb
sbb
aam
mov
arpl
lock
bound
fists
push
sub
pop
sub
insb
sysexit
jecxz
pusha
pushf
and
xor
and
dec
mov
inc
jne
std
push
or
or
jmp
add
or
mov
ret
dec
add
sbb
inc
or
and
or
or
cmp
dec
gs
cmpsb
fimuls
sbb
inc
fs
xor
sub
or
sbb
mov
stos
fstl
add
inc
ja
xchg
adc
mov
rol
adc
jmp
test
and
cmpsb
outsb
add
adc
lods
inc
enter
aam
push
adc
push
sbb
pop
gs
pop
or
cld
clc
push
int3
xchg
cmp
sti
cmpsb
loope
push
pop
sub
addr16
sbb
sub
or
lret
fcomps
lret
lahf
stc
test
xlat
push
jo
mov
repz
pop
or
or
jmp
adc
or
fisttps
xchg
xor
js
adcl
insb
popf
push
mov
push
call
dec
shlb
jne
aad
and
fdivr
push
sub
stos
xlat
adc
lcall
cmpsb
xchg
lret
and
cmpsl
dec
filds
cmp
mov
mov
das
imul
fdivrp
xsave
sti
and
fs
inc
and
pop
dec
mov
inc
cmp
vmovsd
adc
xchg
xor
shlb
inc
fmull
cwtl
add
aad
lods
and
pop
xor
and
js
test
mov
bound
xlat
push
add
fiaddl
sub
mov
sti
shll
or
bound
sti
push
sti
ficoms
cmp
adc
add
sbb
fdivs
das
and
in
inc
sbb
neg
mov
les
test
cmc
sub
adc
and
test
mov
sub
push
xchg
mov
into
push
push
ds
jmp
mov
je
push
je
push
push
push
adc
push
adc
enter
xor
xor
add
gs
je
sahf
push
popa
jl
aad
sbb
inc
mov
dec
scas
dec
rorb
leave
repz
jb
imul
decb
or
out
pusha
jnp
lea
add
bound
mov
icebp
push
xchg
mov
sub
es
jbe
push
dec
and
add
cmp
fildll
sub
xorb
or
subb
das
leave
add
lret
movsb
pusha
mov
mov
jne
ss
push
pop
lock
cmc
lock
lds
cmpb
je
sub
es
mov
mov
inc
mov
mov
xchg
dec
add
xchg
adc
ljmp
repz
mov
mov
xlat
sub
outsb
nop
xchg
inc
jmp
xchg
mov
sub
adc
and
mov
dec
xor
nop
daa
cmpl
push
lods
inc
pop
clc
pop
mov
lahf
or
and
xchg
cmp
hlt
jnp
jge
push
add
xor
cmp
in
stos
aam
vmovapd
fwait
in
jns
mov
aam
out
pop
clc
out
push
jae
pop
jo
jbe
adc
push
xchg
mov
call
add
jmp
mov
add
inc
adc
jns
pop
fdivl
lret
loop
daa
xlat
push
xchg
jge
sbbb
xchg
cld
or
aaa
sub
leave
mov
mov
or
cmp
jae
jo
xchg
cli
jmp
push
add
jne
sub
push
adcb
and
jge
xchg
fcmovnb
mov
nop
shlb
push
sarb
fs
fsubr
and
jmp
xchg
pop
pop
jo
out
push
scas
cmp
mov
and
movl
adc
and
adc
pop
fdivrl
scas
inc
inc
mov
xor
subl
mov
imul
or
jg
fs
cmp
stos
fs
jb
mov
xor
sbb
or
pop
cmpw
scas
add
mov
xchg
mov
dec
or
push
mov
stc
fisttps
test
xor
shlb
sbb
neg
hlt
mov
dec
out
imul
xchg
lods
xor
ret
mov
ds
sub
mov
test
dec
add
mov
xchg
pushl
xchg
mov
cltd
xchg
sar
xlat
jmp
xchg
jl
pop
insb
cld
xchg
cmp
push
ret
repnz
jb
sbb
jae
loopne
imul
sub
mov
test
dec
or
or
adc
xchg
adc
push
inc
sbb
popf
mov
inc
dec
notb
cmp
fldlg2
mov
fwait
hlt
bound
jno
call
fdivrs
fidivrs
je
mov
jg
cltd
push
shlb
xchg
pop
lock
push
adc
and
rcrb
daa
pop
cltd
dec
inc
cmp
adc
push
enter
addr16
xor
pop
adc
imul
mov
insl
push
mov
cmp
lods
scas
aaa
aaa
orb
fiadds
movsb
add
nop
pop
lret
sbb
pop
je
inc
inc
and
inc
dec
add
dec
dec
dec
dec
dec
jp
lcall
pop
add
bound
data16
push
insb
insl
outsb
outsl
add
jb
je
jbe
adc
jp
popf
and
push
psubsb
cvtps2pi
fiaddl
adc
scas
mov
pop
out
jns
outsb
ja
sbb
add
sbb
andl
test
fistl
xchg
popf
adc
or
mov
pop
pop
mov
call
lahf
jp
inc
pop
stos
mov
testb
push
andl
add
jno
mov
insl
movsl
pop
jmp
lds
mov
mov
jae
dec
sub
dec
mov
scas
add
sub
and
cli
sub
sarb
push
pushf
sbb
sbb
push
dec
adc
inc
sbb
in
sbb
adc
push
xor
and
sti
test
xor
loope
pop
inc
or
test
mov
popa
sub
inc
in
push
push
and
mov
test
jne
stos
pop
sub
push
jne
xor
loopne
xlat
pushf
out
adc
bound
mov
jb
push
cld
sbb
adc
jmp
dec
cltd
repz
and
jl
cmpl
cmp
mov
cmp
pop
xchg
mov
adc
aad
cmp
xchg
adc
push
fs
xor
sub
adc
nop
jge
jne
movsb
sbb
jmp
add
pop
inc
leave
fwait
in
and
jmp
jne
out
dec
out
xchg
or
jmp
cltd
shrl
xchg
cmp
sbb
push
xor
call
xlat
push
push
imul
movsb
insb
subb
adc
xor
sbb
fsubrs
sub
push
sbb
das
jl
push
mov
popa
pushl
sbb
jge
mov
xor
push
pop
xlat
dec
inc
adc
mov
mov
inc
and
mov
mov
jns
pushf
dec
sbb
sbb
sbb
sbb
adc
bound
jbe
push
xor
mov
and
inc
inc
push
imul
and
push
jae
and
or
das
add
insl
add
or
inc
or
lahf
cmp
jg
cmp
cs
das
stos
push
pop
call
pop
xorps
jge
dec
inc
jg
mov
dec
xor
fstl
or
in
xlat
xchg
or
jge
sbb
fdivrl
or
fdivl
cmp
int
cltd
xchg
mov
repz
fwait
xor
mov
sub
cs
imul
push
loop
pop
jbe
inc
xlat
pop
xor
lret
jae
jns
call
pop
dec
jb
xor
data16
and
jg
mov
push
insb
mov
jge
xchg
fcom
xlat
xor
adc
sub
jne
aaa
and
inc
leave
inc
hlt
sbb
mov
lods
pop
sub
and
cmp
daa
je
jne
mov
imul
fistps
adc
jno
push
mov
lock
pop
or
hlt
fnsave
cmpb
sbb
mov
pop
mov
pop
les
imul
mov
jnp
pop
testb
mov
cmpsl
out
sti
je
scas
fists
or
push
adc
das
mov
dec
lock
nop
add
dec
dec
cld
push
lret
jg
or
jg
ja
je
and
loop
jp
cmpsb
xor
rcrl
xchg
push
push
sub
les
shll
jbe
pop
andps
push
xchg
notb
or
and
and
lahf
test
aaa
mov
cs
repnz
dec
mov
call
lods
pop
push
adc
sub
add
sub
xchg
incb
xor
gs
out
push
out
add
dec
cli
jge
fstps
sub
pop
add
mov
cwtl
adc
push
cld
and
pop
or
jmp
pop
shlb
testl
and
pop
andl
or
mov
mov
sub
lock
add
dec
push
inc
xchg
repnz
adc
cltd
movsb
es
movsl
cli
testl
clc
popf
cwtl
mov
sub
out
xor
shrl
lea
xchg
xor
push
sahf
pop
daa
inc
es
dec
add
dec
mov
cmp
jl
mov
ret
adc
and
sub
cld
add
jl
inc
jne
adc
adc
push
dec
pushf
sub
push
ds
fidivl
out
scas
test
lahf
push
xlat
data16
xchg
fidivrl
inc
mov
mov
lret
ret
inc
or
xlat
mov
stc
xor
ja
lods
sbb
lock
inc
nop
hlt
and
adc
mov
cmp
test
mov
mov
mov
mov
jg
dec
mov
jb
jnp
lods
das
jmp
iret
jne
mov
test
push
cld
xor
push
pop
dec
sbb
mov
ds
jg
xchg
dec
test
cmpb
sub
push
xchg
push
inc
xchg
jmp
cld
ret
enter
pop
and
jge
addl
outsl
clc
lahf
loop
dec
outsl
jmp
rorl
clc
cltd
mov
test
fbstp
ljmp
cli
jmp
mov
sub
movsb
adc
sbb
mov
adc
movsb
add
jno
adcl
sbb
xchg
sub
or
mov
sarb
xchg
dec
sbb
sub
in
push
xchg
pushf
mov
sub
or
sbb
dec
jne
mov
pop
or
sbb
pushf
and
aaa
and
add
inc
jne
movsb
scas
pop
lds
pop
testl
adc
sti
add
lahf
pop
sub
jmp
sbb
out
jmp
add
push
xchg
mov
repnz
adc
fnstenv
xchg
pop
movl
aas
inc
sbb
testb
sub
push
adc
push
and
outsl
add
call
adcb
xorl
xor
mov
lea
dec
jb
dec
xchg
inc
mov
adc
dec
add
movl
sbb
sbb
push
jbe
push
and
cmpl
shrb
mov
and
leave
cwtl
cmc
cltd
mov
das
push
mov
jnp
data16
stos
or
sbb
dec
mov
sub
movlps
and
pop
push
lds
lea
movsl
push
sub
dec
in
sub
xchg
inc
lds
or
hlt
roll
cmp
stos
sbb
jnp
add
pop
pop
pop
cmp
cltd
addr16
adc
dec
sahf
push
outsb
test
sub
js
inc
aas
sub
bound
add
call
fstps
jl
dec
and
std
js
xchg
mov
sub
mov
inc
xor
pop
inc
xchg
out
stos
pop
xor
push
ret
inc
inc
stc
or
imul
inc
cmp
jl
lcall
popa
push
push
and
dec
mov
cwtl
and
test
pop
je
out
mov
push
add
cld
jge
jecxz
loop
mov
dec
cmp
cmp
jle
mov
mov
loopne
mov
daa
inc
cmp
xor
add
jne
jnp
insb
mov
xchg
in
inc
sub
sbb
fcoml
mov
nop
arpl
xorb
or
mov
inc
pop
sbb
add
or
call
loopne
adc
mov
cmp
loop
jmp
cs
xor
icebp
sti
jg
cmp
in
pop
lcall
inc
sub
pop
inc
or
bound
shrb
jbe
cmp
out
mov
and
loopne
ret
clc
xor
aaa
faddl
mov
outsb
sbb
enter
aam
data16
sti
push
mov
or
std
and
int3
test
jl
dec
in
and
cmp
arpl
jnp
les
decb
nop
mov
adc
sub
imul
lcall
jle
std
test
subb
or
int3
cld
scas
inc
rol
lods
inc
adc
add
repnz
push
push
pushl
lea
int
jnp
pop
insb
addr16
and
push
mov
outsl
add
out
pusha
inc
addl
roll
mov
mov
pop
sub
cmp
add
mov
leave
pop
mov
inc
inc
nop
push
dec
and
inc
push
lahf
sbb
xlat
add
repz
jle
inc
and
and
pop
pop
fstps
adc
out
add
sbb
or
inc
adc
andl
cmp
mov
les
shrb
in
movb
mov
fnstcw
adc
or
adc
jecxz
jo
sarl
aaa
push
test
adc
sub
jo
adc
mov
add
xor
movsb
ret
aad
aaa
je
mov
int3
pop
mov
and
dec
fsubl
jae
add
pop
rcl
pop
push
and
test
dec
in
and
shlb
xchg
and
fwait
jle
xor
test
mov
or
push
xor
push
xchg
dec
adc
ud2
mov
xor
call
mov
icebp
stos
mov
fsubl
xor
adc
push
cmp
jg
stos
jecxz
loop
lahf
inc
jnp
fwait
addl
push
sti
ret
or
mov
adc
pop
inc
or
mov
mov
xchg
inc
mov
adc
aad
push
pop
lock
pop
fstpl
pop
xchg
movsb
outsb
pop
popf
jne
or
jb
dec
shll
int3
xor
mov
neg
sbb
and
jg
xchg
mov
jg
fidivs
xchg
mov
in
sub
adc
adc
sbb
nop
and
nop
hlt
xlat
enter
or
sbb
movsl
aam
fnstenv
cld
cmpl
or
xor
fidivl
mov
js
andl
or
icebp
cmpsb
add
imul
inc
and
adc
xchg
adc
enter
and
cmp
sbb
pop
mov
xor
and
xchg
daa
and
inc
jo
push
pusha
lret
gs
sub
and
in
jno
push
mov
jbe
mov
cwtl
imul
test
and
xchg
cmp
out
xchg
fs
inc
cmp
cmp
sub
insb
cmpsl
sbb
sub
adc
mov
jbe
dec
adc
ds
cmp
fs
aaa
or
in
mov
inc
xchg
sbb
push
andl
push
enter
adc
call
ret
adc
sbb
mov
xchg
mov
mov
orl
push
push
push
icebp
and
xor
xor
push
outsl
mov
test
cmpl
jmp
push
lahf
lcall
cmpsl
mov
cli
mov
and
leave
sbb
mov
dec
fisubrs
in
jg
push
hlt
and
popa
fwait
repnz
sbb
negb
sub
hlt
sbb
mov
outsb
mov
cmp
and
movsb
cld
inc
mov
jmp
ret
je
movl
cltd
lds
lea
or
push
mov
das
cld
push
loop
cmpsl
and
push
filds
call
pop
sti
add
jne
ror
and
add
xorb
cmp
pop
jmp
push
and
jne
push
push
xor
je
xchg
icebp
xchg
out
in
test
fwait
jmp
push
push
inc
mov
das
pop
into
cld
dec
test
ds
push
dec
lods
fcoms
jne
jmp
call
dec
mov
mov
push
aam
out
daa
adc
insl
adc
test
scas
and
idivb
out
xchg
adc
xchg
popa
lods
pop
inc
push
push
stos
adc
jno
xchg
aaa
mov
jp
daa
push
aad
pop
push
inc
xor
add
jo
jbe
pop
mov
cmpsb
xchg
dec
out
pop
call
lods
push
inc
gs
outsl
mov
dec
out
adc
sbb
and
in
push
or
cmp
sub
pop
ret
dec
and
sbb
or
call
adc
jle
sub
sti
cltd
xor
jne
lahf
dec
das
in
gs
scas
mov
sbb
cmp
inc
ret
ljmp
repz
push
cwtl
xor
test
jge
mov
mov
or
gs
out
sub
out
jge
add
mov
lcall
xor
les
mov
adc
sbb
insb
mov
mov
fst
inc
push
daa
cmp
push
loopne
pusha
push
fldl
mov
popf
or
mov
imul
sbbb
shl
rcrl
push
push
cmp
adc
push
jg
push
cmp
ficoml
mov
dec
or
popf
imul
fnstsw
outsl
pusha
lds
in
pop
incl
nop
imul
cmc
mov
push
call
je
sahf
call
sbb
lock
pop
aas
loop
add
xor
lods
sub
mov
xor
pop
jmp
dec
fldl
xor
push
fldt
rcl
and
pcmpgtd
rolb
shr
mov
mov
mov
push
aas
jl
jbe
and
sarl
xorl
idiv
das
lret
sbb
inc
ds
cmp
arpl
adc
pop
mov
inc
adc
sub
cmpsb
xor
xor
mov
inc
ja
jle
adc
or
ljmp
aas
cmpsl
jb
add
add
or
sub
negl
adc
movsl
imul
push
mov
adc
cmp
faddl
mov
xor
cmp
lds
imul
test
cmc
push
push
imul
mov
adc
popf
insb
stc
and
cmp
lcall
mov
mov
rcll
shr
enter
pusha
outsl
das
push
ja
mov
sbb
enter
adcl
and
sub
sub
xor
lock
jl
movsb
mov
fcmovne
call
push
cmpl
bound
int
cli
xor
mov
out
hlt
fucomip
sub
jo
jb
arpl
xor
das
enter
dec
inc
stos
sarb
adc
les
mov
mov
bound
sti
lods
fisubs
or
xchg
mov
js
imul
fcoml
imul
xchg
mov
enter
mov
sbb
dec
push
dec
sub
test
or
dec
ficompl
cli
and
clc
mov
sub
add
lock
cmp
xor
mov
jmp
mov
ss
adc
jle
or
pop
xor
adc
scas
push
adc
dec
push
or
in
cmp
sub
push
mov
sarl
or
and
mov
pop
lcall
mov
call
adcl
pop
mov
cli
shlb
mov
mov
jecxz
popa
les
das
repnz
iret
mov
in
dec
or
push
test
jle
iret
out
jo
jns
add
leave
jae
push
push
call
test
adc
daa
andl
fs
ds
dec
pusha
movsl
adc
xor
pop
pop
push
cld
dec
cli
movsb
fnstsw
jg
dec
pop
mov
ret
mov
mov
inc
daa
pop
test
mov
jl
cmp
dec
ljmp
xor
cli
mov
push
lock
push
cld
in
dec
and
add
and
ret
stc
mov
xchg
push
push
jge
add
ds
cmp
ja
sbb
sti
loope
xor
add
jne
sub
sbb
jge
push
dec
iret
mov
cltd
out
std
addr16
add
and
call
xor
ds
xchg
and
sub
dec
loope
push
leave
push
imul
into
scas
jp
and
nop
lods
movsb
jmp
mov
jnp
jb
xor
or
push
dec
adc
cmpsl
fcoml
xchg
mov
jne
push
sub
cmp
daa
jbe
ja
push
pop
xchg
clc
xchg
aam
mov
addl
lret
dec
mov
clc
mov
test
jbe
cmc
mov
adcl
lahf
imul
fbld
addr16
lods
rcrb
or
aad
jnp
scas
mov
push
cld
out
out
push
cmp
in
cmp
xor
dec
mov
sub
sbb
mov
push
push
lea
sti
and
out
mov
cmp
add
pop
pop
ret
test
rclb
popf
sub
or
imul
out
cmp
xchg
adc
loopne
add
in
call
and
mov
and
je
mov
cs
fadds
movhps
xchg
dec
lods
jmp
xor
push
xor
mul
movl
xchg
testb
int3
or
dec
shll
cld
mov
sub
sub
push
sub
add
and
ret
repz
inc
pop
lret
cmp
testb
movsb
aaa
xchg
or
and
xor
call
jbe,pt
and
sbb
inc
add
fdivrs
jb
xchg
jnp
and
mov
addb
or
mov
jmp
pop
xchg
sub
pop
stc
cwtl
aad
sub
jae
les
loop
cmp
mov
ja
xchg
outsb
mov
xchg
jnp
jbe
mov
add
adc
neg
pop
sbb
mov
push
jmp
imul
sysret
mov
add
inc
sbb
cmpsl
fists
cmp
in
addr16
out
xor
adc
fimuls
sub
jmp
sti
nop
or
cld
sub
jo
xchg
cmove
mov
les
sahf
pop
mov
in
xchg
add
movsb
mov
shrb
sub
mov
jle
adc
inc
test
repnz
xchg
fwait
mov
ss
loopne
jecxz
adc
lods
xchg
adc
cs
jne
inc
mov
ja
dec
je
push
mov
dec
pop
sbb
add
sub
add
or
ret
fldpi
adc
leave
ret
push
or
or
sub
push
jne
cwtl
mov
add
sub
shl
xor
xchg
dec
and
sbb
inc
ja
add
mov
mov
push
dec
push
push
scas
mov
jg
fwait
shrd
mov
mov
and
add
enter
cmpsl
jp
mov
push
jns
pop
mov
out
adc
cmp
xlat
je
inc
hlt
or
or
add
mov
std
popa
loope
adc
jb
out
enter
cmp
ja
je
popf
push
pop
call
jae
jno
sbb
jbe
add
xchg
push
jp
test
jmp
movsb
pushf
or
ret
xor
je
add
fsubl
sbb
and
dec
or
cmp
sbb
add
je
dec
fwait
adc
adc
dec
mov
or
pusha
xchg
or
lea
mov
pop
dec
inc
pushf
jo
test
mov
cmp
loopne
adc
fmuls
push
hlt
add
cmp
and
ds
mov
adc
lcall
push
inc
push
push
mov
sub
imull
movsb
xor
sub
cmpsl
push
adc
jne
mov
dec
in
fsubr
cmp
aad
mov
push
insl
std
lret
sub
call
cld
shl
loopne
test
adcb
ja
shl
or
or
jnp
dec
test
push
in
jns
jl
sbb
xchg
rol
mov
pop
sbb
frndint
mov
jmp
adc
in
pop
mov
lock
aam
xor
dec
mov
mov
lods
add
enter
dec
and
push
pop
push
inc
test
js
xor
push
push
jne
pop
test
mov
add
sub
lea
mov
lcall
pusha
or
das
mov
scas
inc
popf
mov
addw
sub
sahf
or
ds
lret
leave
mov
mov
xor
sub
lcall
dec
adc
sub
pop
adc
sbb
test
das
mulb
bound
mov
inc
nop
cmpb
jb
repnz
pop
imul
addl
jae
fmuls
lea
mov
push
lods
dec
push
adc
js
lods
sbb
mov
sub
arpl
std
mov
cli
add
shl
jbe
mov
ss
je
push
xor
jmp
xor
lcall
dec
push
pop
inc
std
cs
xchg
xchg
dec
dec
push
subb
pop
es
mov
je
daa
aam
push
jecxz
push
call
xchg
mov
cmp
xchg
push
sub
mov
mov
shr
jnp
or
hlt
clc
and
dec
enter
xchg
dec
flds
popf
imul
jne
das
mov
jo
insb
push
push
lea
pop
pop
and
sub
xchg
or
pop
movsb
pop
add
adc
inc
ja
push
ret
call
jg
clc
loop
or
cmc
movb
pop
jmp
iret
scas
pop
je
inc
pop
ds
je
sub
loope
dec
sub
daa
or
add
cmp
ja
jl
adc
imulb
jns
orb
dec
pop
or
push
sar
sub
mov
xchg
adc
and
sbbb
add
loopne
add
cmp
xor
jbe
push
sbb
sub
ljmp
and
loop
jp
hlt
push
add
cld
adc
lret
shll
pop
adc
push
sbb
dec
stc
imul
mov
jg
movsl
lret
jg
dec
mov
pop
fildl
inc
lcall
into
bound
mov
jp
fidivrs
fbld
negb
hlt
mul
pop
adc
jo
daa
pop
push
jne
adc
and
and
scas
push
je
mov
cs
lods
test
sub
pop
repnz
xor
addr16
sbbl
or
pop
in
psrlq
jle
jbe
mov
ja
push
xchg
das
hlt
sbb
mov
push
inc
sti
jecxz
test
push
or
fisubs
inc
jmp
outsl
pop
or
outsl
push
popa
and
sbb
xchg
movsl
jmp
paddd
dec
mov
push
loop,pt
enter
xchg
add
jae
mov
lret
xchg
sbb
dec
push
pop
push
in
dec
dec
test
cmp
jmp
movl
mov
rdtsc
popf
rorl
leave
adc
jl
clc
loope
xlat
adc
push
lret
shll
push
xchg
push
jnp
push
xchg
jae
jns
out
mov
pop
ljmp
and
inc
movsl
jae
mov
ftst
adc
or
mov
push
pop
sbb
popa
pop
in
pusha
push
pop
sub
or
inc
mov
mov
stc
mov
inc
jne
outsb
dec
xor
and
push
pop
push
or
mov
je
pop
imulb
pop
add
jbe
mov
jns
mov
adc
jne
orl
lock
push
xchg
bound
adc
or
sub
cmp
outsb
imul
jne
pop
add
push
push
pop
dec
shl
loop
dec
cmp
cmovno
test
mov
repnz
inc
fwait
add
imul
jns
stos
or
scas
jl
lods
inc
clc
test
sti
mov
pop
mov
mov
sti
das
cmpsl
fisttpll
sbb
sbb
shrb
push
jle
aaa
dec
sbb
push
cmp
inc
inc
je
dec
inc
inc
repz
pop
jns
push
push
cmp
test
cmc
push
pop
cmc
sar
xor
call
cltd
loope
ds
xor
call
add
sbb
sbb
push
cmp
mov
pushf
repz
sbb
jle
push
fwait
mov
test
xchg
push
sbb
xchg
sub
jl
gs
or
jle
adc
fimuls
pop
pop
popw
push
jne
cmp
mov
aam
scas
notb
adc
fnsave
sub
shrl
pop
dec
push
dec
push
pop
jmp
test
fwait
push
adc
add
pop
clc
mov
add
call
jg
mov
repnz
out
mov
in
lahf
imul
jl
mov
push
dec
adc
dec
add
dec
shl
sub
rcll
push
mov
flds
fmull
xchg
lcall
shrb
xlat
data16
lock
fwait
or
sub
ret
mov
das
leave
cld
sub
test
cmpb
jno
push
mov
adc
fadd
sub
test
inc
sub
lods
fiadds
enter
jge
aas
fwait
add
scas
or
lea
test
sbb
loope
daa
push
mov
aas
daa
jp
shlb
or
sbb
inc
and
sbbb
lret
orl
mov
inc
xchg
stos
cmp
jg
push
mov
or
push
jmp
mov
mov
call
jmp
lcall
into
lock
xchg
fisubs
std
and
in
sub
std
test
or
lcall
sbb
add
push
pop
in
xor
in
pop
in
call
cli
sbb
aad
out
cmpl
or
and
xchg
scas
and
ds
fs
in
push
mov
or
sbb
jl
popf
xchg
push
mov
pop
sub
jnp
sub
cmp
mov
push
pop
push
fcoml
sub
sub
cwtl
mov
inc
sbb
sbb
xchg
inc
mov
decb
inc
cmp
out
xchg
incb
and
adc
xchg
mov
hlt
bound
movsb
sti
loop
mov
lds
cld
je
push
lea
jb
clc
dec
cld
add
call
test
mov
pop
push
cli
and
clc
outsb
push
sbb
sbb
int3
sti
aaa
data16
ja
dec
stos
inc
dec
icebp
sub
addr16
fs
adc
sub
mov
inc
add
cmc
pop
pop
rcrl
sbb
add
push
or
add
js
outsb
dec
jge
push
mov
push
sar
cmp
xchg
call
jae
dec
dec
adc
sbb
xlat
es
ret
les
lock
cli
xchg
shrl
push
pop
sub
mov
aam
xor
xchg
sarl
fildll
mov
scas
movsb
lods
repz
mov
or
je
jbe
or
fidivrs
dec
js
cs
js
lahf
add
or
ja
movsl
and
or
push
das
out
hlt
cmp
cmpsl
cmp
xchg
inc
sub
std
xor
dec
mov
notb
mov
cmpsl
imul
pop
mov
ds
loopne
les
mov
in
mov
xchg
in
push
dec
pop
add
and
into
or
sti
iret
mov
xchg
stc
bnd
pop
sub
dec
mov
mov
push
push
in
jno
cmpsl
push
mov
push
xchg
shrl
mov
je
xor
dec
std
mov
adc
xchg
fdivrs
es
not
imul
cltd
daa
push
lea
xchg
bound
cmp
daa
enter
push
int
bound
xchg
mov
fildll
in
adc
mov
add
cmp
add
out
fsubl
cld
mov
jbe
pop
shl
cmp
cltd
jecxz
in
sub
cmc
mov
pop
sbb
jle
dec
ljmp
mov
mov
sbb
ret
push
shr
std
push
test
mov
int
xchg
xchg
clc
mov
addr16
jnp
cld
cld
popf
fsubl
jbe
shrb
xchg
mov
jl
cmp
adcl
cmp
push
xor
cmp
call
inc
dec
pop
push
dec
in
pop
daa
push
sub
adc
and
jmp
xor
mov
test
xor
inc
and
stc
jbe
popl
push
cli
in
dec
das
loopne
adc
dec
call
xor
inc
daa
cmp
ja
out
xor
sub
adc
add
add
jo
xchg
push
push
jge
daa
inc
push
push
push
cmp
push
sbbl
jae
xlat
fcomps
inc
cld
call
iret
inc
cmp
sub
push
mov
dec
int
rcrb
imul
clc
stos
bound
dec
pop
or
adc
and
push
xchg
sub
ds
pop
fdivrs
dec
add
adcl
mov
xchg
loop
mov
mov
mov
mov
and
clc
in
lea
mov
test
mulb
push
mov
or
dec
sbb
push
jns
iret
mov
jnp
or
jbe
movl
dec
bound
test
mov
mov
imul
jno
dec
in
xor
repz
sbb
jo
es
dec
pop
push
gs
test
inc
mov
or
sbb
push
inc
jb
fistpll
scas
and
fsubrl
jne
addl
test
adc
mov
ja
jmp
and
cmp
rorl
and
jbe
pop
outsl
dec
in
daa
lods
sarl
pop
mov
cs
cld
in
and
clc
cmp
jb
dec
fadd
out
or
aam
les
cmp
lea
mov
fcompl
int
jnp
mov
test
cmp
rcrb
inc
call
inc
jmp
push
test
negl
loopne
inc
sarb
sbb
in
inc
mov
test
inc
xlat
push
ss
mov
stc
leave
jns
loope
and
out
clc
cli
into
mov
xchg
imul
scas
sti
in
imul
in
xchg
xor
je
mov
mov
jnp
xor
inc
mov
cmpsb
gs
sub
out
repz
mov
cmp
or
arpl
cli
shll
xlat
cmp
mov
mov
add
mov
jne
inc
add
inc
aaa
dec
sub
scas
cmp
mov
sub
push
mov
subb
test
mov
mov
icebp
hlt
cmpsb
ljmp
xor
fptan
mov
cld
imul
sub
jecxz
mov
push
sbb
fwait
mov
cmp
and
imul
cmp
push
ret
mov
loope
push
in
or
sbb
aad
lret
xchg
push
out
mov
je
ljmp
pop
cmpsb
bound
sbb
mov
mov
and
jg
push
subl
mov
cmp
fs
in
jp
or
mov
ja
push
adc
test
push
jbe
popf
sti
sub
cmp
or
push
aas
repnz
loopne
test
cmp
and
in
cmp
mov
push
rorl
shrb
cmp
mov
imul
xor
pop
and
or
xor
xchg
mov
cs
cld
and
icebp
sub
mov
xor
paddusw
push
dec
or
das
popa
add
out
adc
add
cmp
jge
adc
inc
es
adc
or
es
fs
dec
es
pop
std
mov
sbb
cli
insl
ja
mov
jnp
fisubrl
push
out
gs
aas
or
iret
push
mov
inc
clc
mov
and
test
cmp
shrl
je
ss
mov
push
jmp
or
mov
sti
pop
mov
or
inc
add
push
mov
cmp
cmp
hlt
test
dec
cli
inc
ljmp
and
mov
add
push
pop
neg
jo
lahf
mov
xchg
sub
scas
dec
sbb
mov
fstpt
lret
fs
sbb
dec
jge
neg
and
cmp
data16
cmpl
adc
test
dec
push
dec
aad
ffreep
or
bsf
or
add
cwtl
push
scas
and
fucom
inc
add
mov
cmp
jmp
push
jg
jns
loop
cmp
adc
push
mov
jns
dec
call
mov
push
sub
dec
sub
and
sub
movsb
cltd
notb
or
lret
mov
pop
or
jmp
call
push
inc
imul
out
adc
adc
add
and
mov
push
push
xchg
orl
loope,pn
push
adc
insb
xchg
mov
roll
scas
jbe
pop
or
or
cmp
fldl
jne
and
adc
or
xchg
xor
mov
xchg
mov
rdmsr
sub
xchg
push
pop
cltd
push
and
sti
sub
inc
testl
mov
push
or
xchg
dec
adc
sbb
sbb
push
dec
mov
mov
leave
jne
rorl
add
ljmp
sbb
or
xor
mov
mov
cmp
and
subl
xor
pop
jl
stos
push
inc
push
mov
inc
enter
push
add
cmp
ja
push
hlt
cltd
mov
fsubs
ffreep
pop
icebp
insb
aad
sbb
push
test
das
ret
cmpsl
sti
mov
sub
into
dec
adc
and
add
push
pop
clc
pop
jb
mov
dec
aad
cmp
scas
lahf
fldenv
icebp
ret
or
adc
or
or
aaa
adc
sub
gs
mov
pop
and
mov
mov
or
in
mov
mov
pop
dec
in
idiv
cmp
test
mov
push
push
adc
xchg
pop
cltd
pop
adc
adc
test
pop
pop
shl
push
leave
adc
add
sahf
roll
dec
aaa
movsb
or
add
movsl
cmp
hlt
jp
lahf
lock
lea
inc
lods
nop
sbb
sub
shll
or
popf
mov
mov
dec
movsl
ljmpw
and
sbb
dec
cld
jge
inc
or
mov
mov
adc
sahf
add
sub
scas
push
loope
add
add
jnp
mov
pop
mov
cmp
outsl
lock
js
jns
mov
hlt
bound
inc
jge
rclb
or
push
mov
imul
jnp
call
dec
and
add
shl
sahf
sysexit
push
jmp
mov
pusha
jge
jle
push
stos
push
or
xlat
and
push
rclb
stos
sbb
enter
cs
das
jge
sbb
and
call
addl
test
cmc
leave
cmp
or
cmp
mov
xor
mov
mov
dec
aad
test
ret
stos
push
push
and
fnstsw
mov
dec
daa
gs
clc
adc
adc
daa
push
mov
pop
adc
fisubrl
lea
mov
jb
xlat
mov
mov
jle
mov
lea
push
decb
add
aaa
adc
adc
pop
add
jecxz
dec
adc
or
je
mov
hlt
pop
sub
xchg
sub
dec
inc
add
addl
cltd
insb
movsl
pop
sahf
lea
push
push
mov
in
test
fs
mov
push
mov
jbe
sub
xchg
pop
iret
push
leave
int
pushl
jl
push
and
jg
lret
sbbb
or
in
cmp
xor
inc
inc
xchg
fs
or
mov
mov
lcall
mov
leave
imul
or
icebp
adc
sbb
and
mov
jo
call
inc
das
xchg
xchg
call
gs
adc
or
les
xchg
stc
mov
popa
lds
jl
mov
or
sub
sbbl
lea
mov
mov
rclb
test
pop
add
dec
sub
adc
nop
cmp
mov
cmpsb
push
in
jg
ret
nop
call
jne
mov
mov
sbbl
insb
xor
inc
test
mov
lods
pop
or
mov
adc
mov
adc
call
lds
aad
adc
nop
jo
lret
pop
clc
mov
jns
clc
stos
lret
cld
xchg
imul
xchg
cmp
inc
jmp
add
jne
sub
adc
push
pop
stc
ds
insl
jmp
mov
sub
lret
das
sbb
mov
leave
orb
ficoms
jne
mov
xchg
ficompl
bound
or
adc
lcall
in
sti
sti
mov
stos
adc
hlt
aam
imul
ja
jl
sub
jge
fists
jl
sub
pop
mov
mov
mov
add
or
sbb
push
call
pop
fdivs
popf
adc
mov
mov
xchg
mov
push
and
push
jecxz
sti
cmpsb
mov
sbb
aas
loop
mov
dec
sub
mov
dec
and
int3
or
test
fisttps
pop
sub
aas
mov
adc
js
pop
push
test
int
adc
adc
adc
inc
lea
push
jne
test
cmp
add
in
xchg
loopne
push
push
cmpsb
pop
in
push
mov
imul
inc
das
adc
mov
leave
js
xchg
cmc
scas
shll
outsl
mov
and
and
pop
sbb
jecxz
bound
sub
call
cmc
pop
outsl
dec
xor
in
pop
int
not
mov
sbb
mov
mov
adc
scas
popf
inc
clc
push
push
fsts
push
cmp
inc
push
scas
cmc
dec
jl
enter
pop
test
mov
mov
inc
loopne
ss
adc
xorb
pusha
or
pop
cwtl
adc
movsb
addl
pop
rolb
fwait
test
jle
xor
cs
cmp
adc
mov
scas
sbb
or
sbb
mov
or
cmp
push
movsb
sbb
mov
cwtl
in
jno
pusha
add
pop
inc
mov
sbb
in
and
sbb
push
pusha
pop
hlt
add
xchg
mov
xor
cmp
mov
les
in
dec
and
jmp
mov
fidivl
stc
arpl
loopne
push
leave
fcomp
xchg
xor
call
cmpsb
jne
loop
lea
enter
add
roll
cmp
jae
and
jmp
push
les
arpl
pop
sbb
dec
pop
stos
repnz
fcmovb
sbb
sbb
sub
xchg
or
es
es
movb
test
testb
sbb
push
in
ja
pop
push
push
mov
adc
daa
adc
je
and
lock
and
mov
lret
ret
lcall
ret
jmp
xor
push
je
sub
jmp
jmp
xchg
movsl
adc
mov
in
ds
mov
in
add
bound
pushl
loopne
call
sub
es
push
cld
jmp
cld
je
ret
and
mov
push
sar
sub
sbb
mov
jb
aam
inc
and
mov
fsubr
hlt
push
push
sub
mov
shll
adc
xchg
jno
push
daa
jl
pop
sub
inc
push
jle
adc
and
jl
ret
dec
add
and
push
jecxz
cmc
nop
inc
sub
loope
stos
sub
js
push
adc
test
adc
leave
jl
pop
dec
scas
xchg
mov
sbb
mov
aam
pop
push
dec
addr16
xchg
adc
push
cmp
testl
lret
sub
jne
mov
rorb
jl
mov
in
popf
adc
adc
inc
mov
inc
pop
push
call
insb
and
adc
push
pop
scas
cmp
xchg
mov
xchg
in
movsl
inc
mov
leave
push
add
inc
sbb
outsb
and
or
dec
xchg
and
sbb
mov
cwtl
pop
out
hlt
sbb
sub
xchg
das
out
shl
mov
cli
push
iret
hlt
adc
sub
mov
push
js
outsb
sbb
ljmp
and
or
mov
les
mov
pushf
nop
or
test
aam
test
adc
inc
mov
dec
jne
lret
cmp
fcmovnbe
adc
nop
lea
pop
mov
xor
add
js
or
adc
cmp
xor
std
push
xchg
adc
stos
and
addl
cmpl
andl
subl
andl
cmp
dec
cmp
and
mov
sub
sub
jb
insb
pop
xor
inc
pop
cltd
jo
popa
mov
add
cmp
push
sbb
sahf
inc
pop
insb
dec
gs
cwtl
mov
out
shll
jb
in
jns
data16
cs
push
jbe
imul
outsb
outsb
push
dec
inc
jne
inc
scas
xor
sub
sbb
imul
inc
inc
pushf
aam
pop
jg
js
adc
push
push
dec
dec
outsl
outsb
imul
sbb
int
cmp
push
ss
pushl
cmp
xchg
xchg
pop
adc
ret
xor
popf
mov
push
call
xchg
dec
outsl
mov
jge
xlat
cwtl
test
add
jg
jo
push
outsb
pop
imul
lahf
mov
adc
adcl
adc
mov
jg
pop
xchg
mov
push
mov
addr16
daa
or
push
add
pusha
in
imul
mov
cmp
setae
loope
inc
push
adc
dec
movnti
loope
mov
xchg
or
push
mov
hlt
pop
std
mov
mov
sub
adc
call
insl
mov
aad
dec
mov
je
cmp
xor
negb
into
daa
jne
outsb
lret
mov
jge
jle
jns
xchg
adc
call
fildll
adc
lods
jb
popa
data16
movl
xchg
loope
mov
cmc
and
xchg
setne
iret
mov
addb
pop
outsl
push
adc
test
movq
and
push
push
mov
push
and
and
cmp
adc
sbb
pop
test
cltd
ljmp
sbb
mov
fmull
lods
push
stc
std
incb
mov
movsb
loope
jge
aas
mov
xor
lock
jmp
and
mov
add
pop
cmp
add
sbb
test
inc
clc
loopne
pop
pop
mov
pop
jmp
lret
and
and
or
ret
lock
clc
mov
adc
add
shlb
inc
xchg
add
jb
sbb
lods
ret
test
call
xor
or
jl
adc
push
psrad
hlt
mov
inc
lods
or
fdivrl
enter
mov
inc
and
inc
add
jne
cmpl
jmp
mov
leave
cld
cmp
fs
data16
pop
lcall
or
stc
not
scas
and
jmp
into
mov
aam
test
notl
mov
push
enter
es
mov
jl
xor
lock
fildll
loop
pop
cmp
jb
or
stos
mov
jge
rdpmc
xchg
das
and
fsubrl
aad
ret
fdivrl
add
or
or
ret
push
mov
push
xchg
jmp
mov
test
jmp
jg
repz
mov
xchg
mov
adc
jmpw
sub
icebp
dec
hlt
je
les
dec
adc
xchg
xlat
shl
gs
imulb
sub
jno
mov
add
inc
jne
dec
movsb
pop
fistps
sbb
aam
dec
or
pop
sbb
cmpl
call
je
popa
std
mov
sti
xor
inc
adc
cmp
mov
and
sub
pop
int3
inc
cmp
sbb
in
add
dec
sub
pop
das
xlat
cli
test
fsubr
sub
mov
add
paddb
je
mov
ljmp
jo
je
jge
add
push
out
sub
push
icebp
das
in
mov
or
nop
and
jo
std
inc
mov
ficompl
add
and
sub
sbb
or
jae
rorb
dec
int3
test
and
sub
adc
les
sti
push
ljmp
stos
and
dec
pop
and
mov
jg
lcall
cmp
cmpsb
ret
and
mov
cltd
xor
enter
adc
ss
test
adc
pushf
or
mov
xchg
lret
xchg
mov
fcoms
pop
xchg
aaa
aam
cmpsl
outsl
and
push
mov
xchg
sub
mov
inc
aaa
mov
icebp
dec
or
pop
dec
mov
dec
aad
adc
push
push
pop
sbb
ficoms
inc
movsb
cmp
sub
push
xor
inc
xchg
ss
pushf
push
cmp
cmp
jb
cld
js
mov
jns
inc
pop
push
lret
adc
lea
jne
cmc
mov
pushf
adc
or
call
jecxz
shll
cmp
subb
mov
add
mov
les
movl
mov
es
xchg
nop
push
lret
push
mov
or
dec
pop
inc
adcb
lock
jecxz
mov
sbb
sub
inc
test
loopne
mov
xlat
xchg
mov
setne
mov
ret
add
daa
add
cwtl
imul
mov
sub
pop
scas
jne
aam
aas
insl
sbb
sbb
test
inc
add
ficoml
adc
sbb
repnz
pop
pushf
pop
lret
or
loope
aaa
mov
mov
div
sub
add
je
dec
fwait
sbb
sub
clc
lret
rcr
ja
cmp
push
add
fst
std
lods
mov
add
mov
nop
cmp
loope
sahf
lods
xor
mov
cmp
mov
inc
mov
xor
dec
mov
push
inc
and
call
jne
dec
cld
bound
rclb
aas
lods
inc
fs
and
inc
mov
mov
pop
adc
cmp
movsl
adc
xchg
lods
inc
in
je
sub
cld
test
int
arpl
cmp
test
dec
mov
inc
iret
or
add
imul
add
mov
sahf
data16
pop
dec
shll
notb
je
int3
mov
stc
mov
int
test
mov
mov
divl
mov
mov
push
push
and
repz
mov
mov
push
call
jnp
dec
in
cmc
xchg
inc
ret
adc
jne
lret
dec
cs
push
and
adc
ss
pop
sub
pop
movsb
dec
or
cwtl
imul
mov
xchg
xlat
adc
sbb
xor
push
mov
jmp
aad
pop
daa
dec
sub
mov
mov
jae
sbb
adc
sub
inc
adc
cmp
daa
add
lcall
and
xchg
xor
or
bound
fcoml
mov
cmp
mov
repnz
lods
je
lahf
add
push
sti
jnp
xor
sub
mov
addl
and
les
push
out
mov
adc
arpl
dec
cmp
lahf
jo
pop
jmp
adc
sbb
ror
popf
notl
dec
les
stos
repnz
and
das
adc
enter
pop
mov
push
push
cmpsb
subb
nop
int
popf
jle
imul
sbb
fsubs
je
sahf
mov
test
loope
adc
aas
jmp
xchg
xchg
mov
jae
mov
cs
jo
lock
dec
sub
xchg
hlt
inc
ficompl
dec
dec
cmp
lahf
xchg
jp
mov
and
lcall
arpl
jns
dec
push
dec
ja
xchg
cli
mov
enter
push
dec
outsl
clc
adc
xlat
cmp
xchg
adc
call
adc
movb
hlt
call
sbb
fbstp
and
or
aaa
clc
arpl
call
clc
cmp
jl
aas
xlat
and
fiadds
aam
imulb
push
repnz
das
out
das
ja
and
icebp
lods
push
xchg
pusha
inc
cmp
push
movsl
out
pop
dec
stos
inc
scas
pop
scas
mov
mov
test
adc
push
aas
sbb
push
push
mov
cmp
sub
push
call
push
es
lods
mov
sbb
xchg
and
mov
pop
call
in
cmpsb
jo
mov
int3
and
movsb
jb
cmp
inc
jbe
test
pop
cmp
lret
enter
pop
pusha
rorb
and
rolb
pusha
movsl
adc
movsb
loop
arpl
or
mov
comiss
adc
add
push
add
xchg
xchg
or
sbb
cltd
or
or
mov
repz
push
sbb
adc
jl
xchg
jge
hlt
pop
mov
dec
lock
inc
adc
jb
cmpsb
pop
sub
adc
inc
arpl
jb
sbb
dec
cmp
adc
sbb
push
pop
emms
mov
lock
inc
popa
sub
push
or
mov
insl
xchg
and
sub
inc
xchg
sbb
lret
or
les
push
xor
pop
test
aad
and
xchg
in
xchg
inc
scas
fadds
adc
cwtl
add
test
mov
loopne
cmpsb
cmp
xchg
movsb
inc
add
adc
cwtl
stos
bound
xchg
cmp
or
aam
adc
adc
jl
inc
adc
lcall
mov
pop
adc
and
adc
imull
lea
cld
negb
setne
dec
loopne
aad
dec
pop
pop
icebp
mov
push
and
je
aad
cmpsb
ja
test
pop
xorl
dec
cmp
xchg
fmull
clc
add
enter
mov
data16
mov
mov
imul
jl
add
cmp
jg
jg
sbb
push
sub
addr16
cmp
push
and
push
je
in
les
add
bound
cmpsb
jb
lahf
dec
adc
mov
outsb
loop
cmp
mov
push
mov
test
pop
js
aas
pop
pslld
or
adc
mov
xchg
sahf
push
lock
dec
jmp
daa
push
jnp
mov
out
sbb
push
inc
out
out
push
hlt
inc
pop
shrl
adc
jns
pop
push
and
add
mov
jne
or
push
push
and
lahf
jno
scas
sub
sbb
insl
pop
inc
fs
xchg
push
mov
leave
cli
or
loope
in
cmpsb
ficomps
movsb
push
adc
mov
or
sub
jmp
inc
subl
jbe
xor
push
sar
popf
ds
test
push
adc
cmp
call
cli
pop
sti
scas
imul
adc
mov
sbb
fwait
test
aam
subl
dec
pushf
shll
mov
dec
push
into
sub
jbe
inc
or
sahf
mov
fsubrs
outsl
data16
popa
jb
pop
arpl
jno
out
into
pop
addr16
adc
les
cwtl
les
sub
adc
leave
xchg
nop
ret
or
rolb
cmpsb
inc
lods
dec
test
mov
cmp
push
xor
cmp
and
add
or
dec
dec
cs
rcll
push
in
lods
pop
push
inc
pop
leave
test
jecxz
ret
je
add
push
cmp
cli
addb
mov
mov
testb
mov
push
mov
scas
aam
mov
push
xchg
pushf
dec
pusha
and
push
pop
xchg
inc
adc
lock
inc
mov
push
add
cmpl
add
and
and
inc
fs
pop
mov
and
mov
push
xchg
stc
call
sub
push
jecxz
adc
or
push
dec
dec
and
sbb
jg
cli
mov
sti
jne
cld
jge
inc
dec
outsl
in
out
jns
mov
mov
jbe
daa
mov
fs
xor
sar
sbb
pop
enter
daa
pmullw
push
pusha
push
inc
cmp
sub
out
mov
pop
and
cli
add
inc
add
push
cli
push
mov
andl
inc
inc
push
push
adc
fistl
inc
cmpl
addb
sahf
cs
or
dec
mov
xchg
add
enter
jne
dec
adc
xchg
or
pop
sbb
adc
shrb
cwtl
idivl
sub
push
mov
test
xor
xchg
adc
sub
jmp
pop
sbb
xchg
push
inc
sub
xorb
xor
jns
pop
dec
add
cld
jecxz
mov
pushf
sti
xor
aaa
jle
call
out
mov
and
ja
roll
fists
test
test
sbb
or
pop
in
pushf
icebp
or
jl
lds
cmp
outsb
xor
gs
dec
andl
jp
dec
or
pop
out
das
sub
es
or
dec
adc
sub
fs
jle
mov
lea
adc
push
jle
cmpsb
pop
test
leave
adc
jns
mov
fdivs
fisttpl
mov
mov
lahf
nop
leave
inc
add
adc
mov
jne
lock
call
and
roll
sbb
push
divl
shr
into
mov
or
imul
and
adc
mov
xchg
push
daa
push
dec
lea
mov
push
sub
movsb
push
add
adc
cwtl
inc
pop
loopne
or
fld
sti
call
jmp
enter
xor
push
adc
aad
ds
data16
cmp
dec
sti
dec
andl
popa
add
call
or
xchg
je
mov
and
ss
jge
push
push
shll
lret
pop
jmp
mov
dec
loopne
js
mov
iret
cmc
jno
xlat
jae
insb
add
js
rcrb
inc
enter
push
pop
pop
js
outsb
adc
xchg
inc
mov
roll
out
mov
data16
jmp
clc
xchg
pop
push
jne
cltd
dec
popa
hlt
test
rcrl
movsb
mov
xchg
sub
push
in
fdivrs
fwait
hlt
and
lret
sub
lret
xor
out
pop
mov
inc
clc
mov
cmp
and
and
push
or
add
cmp
addr16
fxch
pop
lock
cld
dec
lods
cmp
or
dec
dec
mov
and
test
cli
ds
lret
sbb
dec
das
push
stc
inc
call
add
dec
push
rcl
mov
inc
sbb
jmp
push
dec
lods
aam
inc
call
jge
clc
and
hlt
lods
push
mov
inc
ret
data16
les
enter
sbb
mov
lahf
iret
lret
cmove
cld
mov
add
aam
mov
rorl
lock
push
cmp
adc
dec
sub
fisttpll
pop
popa
xor
add
pop
jb
pop
testb
add
clc
pop
stos
mov
push
into
pop
fistpll
lcall
orl
add
jmp
mov
jmp
in
pop
incl
jge
add
cmp
pop
in
push
inc
and
push
push
add
add
insb
inc
out
add
and
and
sbb
adc
and
or
inc
jns
in
dec
push
add
je
mov
and
call
add
std
sub
rcll
inc
adc
adc
mov
dec
mov
xchg
inc
lds
test
pop
add
dec
and
xor
pop
fldln2
lret
aam
andb
push
ja
popa
xchg
sbb
mov
lods
scas
mov
jae
out
or
cmpl
hlt
outsl
mov
mov
stos
xor
enter
out
or
icebp
inc
or
or
push
adc
test
add
leave
movsb
loopne
in
cmc
call
iret
jbe
sub
das
inc
jb
or
adc
cmpsb
push
daa
rolb
mov
in
or
dec
subl
sub
out
inc
lds
inc
cmp
adc
push
nop
scas
popf
scas
push
mov
ds
imul
and
mov
jnp
das
jmp
mov
in
testb
mov
pushf
jp
cmp
cmp
je
stos
and
add
inc
cmp
inc
imul
orb
lahf
sub
or
cmp
stc
inc
lock
jno
sbb
and
jge
roll
sub
xchg
cmp
adc
out
pop
adc
jl
and
adc
imul
xchg
testb
clc
sub
in
loope
and
lea
test
lret
pop
inc
insb
sub
rcrl
adc
movsl
inc
sahf
repz
push
gs
movsb
dec
push
lds
mov
cltd
stos
xor
fldt
jmp
dec
and
lcall
jge
and
push
cmp
sub
dec
push
stos
lods
stc
push
stos
or
adc
jmp
imul
scas
or
or
push
mov
ss
sbb
les
pop
or
dec
je
push
or
and
movl
in
cmpsl
sbb
inc
imul
adcl
ret
adc
xchg
jl
inc
add
outsb
cmp
sbb
and
adc
sub
or
sub
jne
jl
pop
mov
lea
jmp
cmp
mov
loop
xor
push
jnp
out
inc
dec
xor
cmp
sbb
mov
adc
dec
sub
rcrb
push
sbb
sbb
push
xor
sbb
pop
inc
sub
push
inc
mov
jmp
mov
lret
gs
push
or
gs
pushf
cld
xchg
ja
je
cltd
test
xor
jge
fidivl
int3
add
inc
gs
jl
push
outsb
dec
dec
data16
insl
popa
jmp
out
mov
jge
arpl
jae
push
sbb
ljmp
and
jno
in
insb
push
jle
mov
cmp
clc
sub
ret
test
cmc
xchg
add
scas
testl
mov
push
rolb
sbb
inc
mov
pop
sbb
loope
unpcklps
jmp
lahf
dec
sub
xorb
push
out
jg
mov
sub
popa
int
outsb
mov
inc
add
add
pop
lahf
cmp
mov
cmp
test
mov
pop
mov
movsb
cmp
cmpsb
cmp
test
mov
test
cmp
clc
mov
lods
fstl
pop
lods
sub
sbb
mov
mov
mov
mov
mov
stc
pusha
out
mov
adc
sbb
adc
mov
icebp
mov
mov
jne
icebp
rol
sbb
jl
in
or
loopne
ficoms
ffreep
cmp
out
enter
leave
jle
lret
or
out
bswap
lahf
mov
into
fnstsw
pop
iret
push
fistps
and
sbb
sbb
mov
or
cmp
int
xlat
subl
into
or
cmp
iret
loopne
clc
shl
sti
jecxz
xchg
mov
pavgb
lods
psrad
lods
pmulhuw
scas
mov
movntq
fmuls
jmp
mov
pmulhw
mov
out
jecxz
ret
out
jecxz
jecxz
jecxz
xor
fldl
inc
hlt
cmovb
ds
inc
inc
stc
add
cmovbe
stc
add
cmovp
stc
add
cmovle
stc
add
rsqrtps
stc
add
orps
stc
add
cvtps2pd
stc
add
divps
stc
add
punpckldq
stc
add
pcmpgtd
stc
add
punpckhdq
stc
add
movd
stc
add
nop
jae,pt
je
add
pcmpeqd
stc
add
nop
jnp,pt
jl
add
movd
stc
add
test
add
xchg
stc
add
mov
stc
add
add
repnz
dec
inc
dec
and
jle
nop
dec
jl
adcl
xorb
push
call
xor
push
clc
xor
loop
jle
aaa
ds
fnstsw
pop
cmp
ds
and
add
cmp
bound
inc
clc
inc
and
andl
jle
dec
cmp
imul
loop
js
clc
dec
and
xorl
xorl
jle
push
rdtsc
mov
add
push
emms
mov
cmp
jns
pop
mov
sbbl
bound
or
and
and
js
clc
imul
clc
insl
and
adc
mov
xchg
mov
xchg
mov
and
je
xchg
clc
jne
xchg
clc
jbe
xchg
clc
ja
cwtl
clc
js
cltd
clc
jns
lcall
dec
mov
mov
add
ds
mov
add
ds
ret
ret
nop
les
stc
add
in
nop
ds
add
in
lret
nop
ds
inc
int
add
in
iret
nop
rolb
stc
add
in
rcll
stc
add
in
xlat
nop
fadds
stc
add
in
fists
stc
add
in
in
ds
out
add
in
call
ljmp
nop
ds
inc
out
stc
add
in
lock
ds
inc
repnz
add
in
hlt
nop
ds
inc
idiv
add
in
clc
nop
ds
inc
cli
stc
sbb
xor
xor
and
xor
mov
and
stc
and
iret
stc
add
in
rcll
stc
add
in
aad
ds
inc
xlat
stc
add
in
fsts
stc
add
in
fstl
stc
add
in
loope
loop,pt
jecxz
add
in
in
ds
out
add
in
lds
ljmp
paddsw
stc
add
in
icebp
nop
ds
repz
add
in
cmc
nop
testb
add
in
stc
nop
ds
inc
sti
stc
add
in
std
nop
incb
mov
inc
and
je
add
pop
dec
mov
cmc
mov
aad
das
popf
push
faddl
push
je
xor
jae
add
or
or
ret
xor
stc
fsubr
push
sbb
daa
jmp
push
jmp
mov
or
call
jmp
jnp
or
std
scas
popa
xor
cs
mov
test
fiaddl
sub
inc
call
dec
clc
xor
add
hlt
icebp
stc
jge
mov
push
mov
sub
jns
mov
int3
hlt
sbb
xchg
or
pop
cmp
lahf
repnz
aas
jbe
je
adc
arpl
push
xor
nop
sub
push
xchg
pop
add
mov
fidivrs
sub
repz
xlat
imul
jge
cld
sub
divb
insb
adcl
dec
pushf
mov
flds
testb
mov
sub
xchg
dec
jge
pop
clc
xorl
or
cmc
adc
aas
call
jmp
mov
call
jno
adc
insb
ret
rcrb
jne
int3
test
fbstp
or
mov
cmp
add
movw
dec
and
dec
add
dec
cwtl
in
xchg
sbb
repz
lods
incb
jo
xchg
push
sub
or
xchg
xlat
cmp
mov
adc
std
or
xor
test
sub
xchg
push
mov
dec
mov
ja
gs
movhps
and
cltd
mov
push
jge
pop
imulb
out
bound
add
push
je
lret
shl
push
out
push
jbe
ret
or
outsl
or
adc
inc
test
cmpsb
mov
sub
int3
pop
push
loopne
sbb
bound
cmp
inc
push
test
mov
sbb
fldt
jecxz
push
outsl
mov
fdivl
adc
pop
lods
repnz
inc
inc
jne
fcomps
dec
mov
pop
dec
rolb
mov
adc
adcb
cmp
xlat
inc
jns
push
jns
sbb
xor
add
jl
loopne
xchg
jle
test
jae
stc
mov
xchg
loop
sub
dec
je
push
and
mov
sbb
mov
fidivs
stos
shlb
mov
sti
pop
aad
pop
movsb
aaa
data16
mov
cwtl
inc
insb
arpl
sbb
add
cwtl
and
mov
fstl
sbb
scas
iret
sub
repnz
sti
xchg
mov
fnstenv
or
clc
int3
sbb
and
pop
fbstp
add
adc
mov
cwtl
adc
push
lahf
fadd
ret
dec
negl
pop
movb
xchg
xchg
xchg
icebp
pop
mov
xchg
adc
stc
or
add
add
lcall
in
stc
adc
in
cmpsl
push
ret
into
push
or
add
pop
pop
or
sub
xor
and
ds
push
mov
clc
push
and
and
loop
inc
inc
loop
or
mov
cmp
ret
sbb
testb
xor
add
cld
call
and
loop
inc
pusha
ja
es
add
aas
call
add
test
fs
cmpsb
push
rorb
lds
gs
push
adc
fdivrl
xor
ror
rcrb
sbb
add
fcmovnb
mov
test
fs
push
movsb
add
mov
mov
or
xchg
cwtl
or
mov
sbb
push
lret
sub
ss
aam
decb
rol
mov
mov
xor
movsl
mov
hlt
sbb
jl
int3
cmp
fistps
sub
or
cwtl
call
pminsw
sbb
adc
loop
in
xchg
sbb
adc
mov
ret
test
cwtl
lea
divb
adc
sahf
outsb
repnz
add
les
je
outsl
cmp
mov
sti
mov
hlt
lret
arpl
in
iret
or
and
lret
mov
jbe
mov
pop
or
add
ds
jg
ja
pop
orb
or
cmp
push
in
cwtl
es
and
pushf
sub
sti
cmp
cmc
add
popa
mov
jmp
maskmovq
imull
clc
lock
and
jne
xchg
dec
dec
shl
xchg
mov
cmc
bound
mov
push
and
push
jl
mov
jecxz
outsl
add
adc
mov
hlt
push
xchg
sbb
pushf
clc
adc
sub
jbe
mov
test
mov
movsb
lcall
test
nop
lahf
add
imulb
or
mov
inc
and
inc
or
aaa
push
inc
xchg
add
dec
sub
sti
and
sub
test
je
push
dec
adc
mov
jge
add
xchg
add
inc
push
adc
mov
into
enter
js
sub
test
test
inc
shr
rorl
and
dec
cmpb
xchg
mov
popa
pushl
rol
rclb
sub
popa
popf
rcll
mov
push
aam
mov
push
and
jle
pop
fdivs
add
or
sbb
cmp
inc
test
xchg
cmpl
cwtl
inc
pop
mov
jp
enter
pop
inc
or
shl
je
and
or
jo
jp
or
sbb
adc
or
and
aam
jmp
cltd
and
xchg
dec
and
mov
inc
or
and
inc
mov
push
cmpsb
jmp
xor
pop
mov
insl
or
fmul
imul
pop
fs
dec
mov
adc
or
out
rolb
lcall
loope
adc
or
nop
out
out
aam
jnp
stc
pop
jne
lods
pop
jecxz
inc
sti
or
adc
add
je
cmpl
adcb
or
sbb
fldt
xlat
xchg
or
movsb
andl
and
and
movsl
xlat
sahf
xchg
imul
imul
test
lods
loop
aad
sbb
lods
test
jmp
je
les
mov
pop
fwait
pop
ret
mov
test
call
sti
pop
loop
jb
cmp
je
and
lock
and
pop
movzbl
ljmp
sbb
mov
ds
add
add
adcl
sub
mov
inc
jno
jmp
bound
lret
arpl
sub
cmpsb
std
in
je
shr
sbb
mov
add
pop
testb
shrl
pop
stos
jmp
in
push
add
and
pop
xchg
push
sahf
sub
inc
jb
inc
cmp
pop
stos
adcb
and
add
jne
fldl
lods
sbb
or
add
jmp
sub
repnz
sub
ret
cmp
pop
pop
jo
add
push
insl
sbb
jne
pop
xchg
adc
cmpsl
xlat
xlat
hlt
incb
xor
pop
aaa
fisttps
dec
cmp
int3
and
jbe
push
or
sub
and
aaa
lret
jmp
adc
std
outsb
sbb
sbb
mulb
mov
or
fadds
jge
dec
daa
mov
push
and
jne
movl
adc
add
or
add
or
je
or
and
test
inc
sahf
js
mov
cmp
adc
movsb
ret
pop
jno
or
insb
pop
or
and
push
into
xchg
movsb
mov
and
mov
bound
cwtl
and
test
sbb
cld
rorl
lock
xor
mov
test
mov
cmp
xchg
xor
jge
lahf
pop
movsl
lock
jge
imul
pop
sbb
hlt
mov
call
mov
jnp
leave
adcb
incb
enter
mov
dec
js
fs
ret
add
add
and
insl
andl
mov
inc
sbb
into
or
inc
or
shll
jle
nop
xor
sbb
daa
mov
jmp
inc
add
cmp
lock
sbb
les
xlat
scas
sti
repnz
pop
pop
mov
jp
cs
mov
mov
mov
daa
repz
jmp
push
ljmp
lea
test
or
cmp
mov
and
xor
or
cltd
jg
add
inc
leave
dec
jmp
jmp
les
popf
jns
xchg
add
rorl
inc
xor
sub
call
push
pop
cli
add
mov
jmp
stos
loopne
test
sub
push
lods
out
pop
repnz
call
loop
xchg
movl
sub
pop
test
sarb
lea
or
jne
into
and
inc
scas
cmp
enter
or
xor
call
cmc
lahf
push
mov
mov
test
popa
shr
test
nop
data16
jbe
icebp
mov
ljmp
adc
or
mov
sbb
add
jmp
add
add
fdecstp
xchg
adc
or
push
cmc
out
jp
leave
outsb
add
dec
cmp
jne
andl
xor
jmp
inc
add
dec
ss
mov
push
mov
or
sub
mov
movsl
aas
sub
push
lods
cs
and
dec
pop
cmp
jl
mov
or
add
outsl
lock
dec
xlat
push
push
bound
cs
and
lahf
filds
dec
test
inc
mov
testb
repnz
int3
insl
mov
push
sbb
push
scas
jl
shr
cld
sbb
inc
clc
sar
jle
addr16
rclb
dec
data16
shlb
sbb
mov
sub
mov
or
adc
cmp
cs
inc
pop
ss
sub
xchg
inc
enter
sbb
mov
jnp
sbb
in
mov
in
sbb
inc
jecxz
pop
xor
push
add
mov
sar
xor
xor
ret
lret
pop
cli
loopne
cmp
ret
sbb
push
stc
mov
push
lea
add
inc
push
xor
enter
jle
in
sbb
push
aad
loope
fildl
fsubrs
mov
sub
adc
sub
aas
mov
adc
sbb
and
addl
ljmp
adc
xchg
aam
imul
inc
dec
pop
lea
fs
cli
imul
xchg
pop
stos
test
nop
sub
dec
xor
dec
popa
mov
push
fdivrl
push
sete
dec
inc
or
out
nop
gs
sti
iret
aaa
dec
les
mov
sarl
mov
mov
or
daa
lea
and
and
push
mov
pop
mov
scas
or
test
jo
test
push
sbb
cli
mov
xchg
mov
leave
or
fidivrl
jne
push
sbb
push
daa
sbb
jno
or
cmpsb
es
inc
add
jne
lcall
lds
mov
push
push
std
test
mov
push
out
gs
jno
mov
pop
movsl
shll
int3
jg
mov
addr16
jge
add
in
xchg
lock
data16
jae
rolb
cmp
inc
int
repnz
ror
outsb
xchg
xor
mov
outsb
loope
sub
mov
push
es
dec
aaa
cld
test
add
scas
jmp
orl
sub
les
fs
in
dec
aam
jno
mov
pushf
setne
xchg
jns
adc
or
pop
bound
fcoml
les
sbb
xor
daa
push
ret
cwtl
inc
dec
stos
les
mov
add
dec
sbb
mov
pusha
fiadds
sbb
push
pop
call
sbb
enter
xor
push
fildll
dec
popa
dec
cmp
or
ljmp
xor
pushf
add
dec
stc
mov
mov
sbb
xchg
mov
pop
mov
push
xorl
pop
hlt
je
cltd
scas
xor
iret
pushf
cli
cmpb
adc
and
outsb
xchg
mov
sub
mov
cmp
sbb
dec
mov
sbb
loopne
shll
adc
fs
inc
pop
sub
call
mov
bound
mov
notb
push
xchg
add
and
daa
or
xchg
dec
sbb
dec
les
push
dec
cmc
jno
lret
add
cmp
decl
inc
stc
stos
call
ljmp
lret
inc
adc
or
push
mov
or
lcall
adc
jnp
lods
pop
jae
test
daa
stos
push
inc
add
mov
and
adc
testb
int3
lds
add
rcrb
cli
lret
or
push
iret
stc
mov
dec
mov
push
aam
das
pop
movsl
das
ficoms
mov
sti
sbb
clc
loope
rcrb
jns
adc
jge
and
mov
inc
clc
repnz
pop
sbb
lahf
adcl
lea
jp
subl
mov
pusha
cmpsb
dec
and
jnp
adc
xchg
das
inc
xchg
jae
dec
mov
stos
dec
stos
inc
test
jmp
les
jl
add
sbb
call
loopne
cmp
mov
fsubr
dec
dec
pop
pusha
jl
cmpl
add
xor
sub
popf
popl
add
cmp
jnp
loopne
push
or
xchg
add
movl
jge
push
data16
ds
fildl
mov
clc
stc
and
popf
fs
or
jo
sub
push
nop
and
mov
inc
jmp
push
mov
xchg
sub
and
aas
clc
cmp
inc
cmp
rep
push
mov
push
ror
push
aam
fadds
or
jo
repz
inc
adc
incb
sbb
jl
test
mov
jmp
adc
jno
lea
push
xor
loopnew
jge
popf
bound
or
in
shl
cs
jne
das
mov
loop
push
lock
xchg
decb
movsb
adc
arpl
xchg
mov
mov
std
adc
les
and
add
loope
aad
push
aam
mov
adc
icebp
sub
int3
and
sarb
aaa
in
mov
test
or
and
ret
adc
push
sti
cmp
shlb
and
insl
pushf
push
xor
and
je
mov
fidivl
push
hlt
dec
jne
in
sti
mov
jno
and
dec
repnz
mov
imul
sbb
out
adc
inc
sti
je
loop,pt
cmp
inc
xor
test
negl
loopne
mov
cmp
test
dec
xchg
push
xor
cwtl
clc
dec
fwait
cld
xor
scas
sarl
cmp
sub
fnstenv
pushf
push
cmpsl
jbe
sub
scas
call
call
mov
aas
mov
xchg
lret
std
sbb
jo
add
popf
add
dec
out
cmp
insb
adc
adc
add
jmp
mov
jbe
xor
pop
data16
lea
add
xor
ja
and
sub
data16
popl
mov
nop
cld
xchg
sbb
cs
data16
clc
and
pushf
push
mov
dec
insl
push
mov
inc
pop
pushf
cld
sub
scas
and
dec
loop
filds
sti
clc
add
adc
pushf
dec
mull
imulb
or
vpmulhuw
adc
ljmp
adc
mov
shr
pop
xor
sbb
aas
jne
xchg
mov
rorl
rclb
aaa
dec
push
call
mov
imul
test
sbbl
lcall
pop
jbe
push
jg
jp
xchg
jecxz
jne
mov
nop
sbb
negb
cmp
mov
dec
shr
pop
sbb
stos
sbb
sbb
mov
and
js
or
or
jb
xor
adc
cmp
sub
cli
lock
dec
add
rorl
in
jo
cmpsl
cmp
push
sti
add
jno
rclb
or
les
dec
enter
dec
imul
sbb
lods
xlat
jmp
mov
fldl
xor
iret
lods
fildll
dec
test
fidivl
xlat
cmpsl
dec
repnz
push
and
repz
sub
jge
js
clc
loop
lods
cld
jae
xor
pop
cmp
scas
jge
dec
lcall
inc
loop
sbb
sub
jnp
testb
pushf
mov
push
cli
push
js
mov
pop
repnz
nop
sub
sbb
inc
mov
and
sub
leave
adc
add
cmp
xchg
inc
jae
xor
dec
add
adc
orl
push
call
repz
sbb
inc
sbb
jne
or
ja
movsl
add
cmpl
mov
test
mov
test
or
add
pop
ja
cwtl
mov
lea
enter
inc
xchg
and
div
mov
ds
jnp
pusha
xor
lret
mov
mov
mov
inc
or
data16
mov
ret
and
enter
inc
mov
xor
inc
adc
stos
mov
rclb
imul
or
jmp
shrl
adc
xor
and
testb
orb
xor
lahf
mov
dec
mov
push
lea
enter
setns
lods
xor
sub
inc
imul
dec
js
mov
stc
jnp
les
cmp
xor
push
fmull
or
mov
lret
and
xchg
dec
push
shll
push
dec
insb
sbb
cmp
out
popf
js
pop
sub
mov
scas
ja
cmc
call
sub
push
mov
jns
add
mov
or
and
add
mov
jns
add
in
pop
mov
dec
push
sbb
dec
push
cltd
adc
mov
rclb
nop
popa
add
pop
pop
mov
fadds
push
jo
cs
ljmp
or
sbb
fwait
jo
xchg
push
scas
dec
adc
add
jg
adc
sar
adc
and
sub
cmc
dec
pop
sbb
inc
pop
pop
dec
popa
inc
ficoml
mov
lahf
jmp
mov
pop
jl
xchg
adc
loopne
sbb
jecxz
pop
cmc
incb
jb
pop
das
pop
rol
and
dec
sbb
pop
adc
jae
mov
or
nop
push
loop
std
cwtl
cmc
sub
and
inc
out
push
jle
lret
push
aas
mov
inc
sbb
adc
imul
mov
pop
push
lock
mov
xor
lock
stos
out
clc
ret
sbb
repnz
xchg
inc
inc
js
xor
pusha
and
je
mov
dec
js
xchg
jl
pop
call
lret
leave
je
pop
pop
xchg
mov
pusha
out
pushf
or
call
gs
mov
int3
cs
test
fnsave
jecxz
popa
sub
cmc
or
mov
inc
jo
popl
and
jp
pop
adc
shlb
pop
mov
inc
push
cs
inc
mov
inc
add
mov
cmpsl
push
in
mov
push
out
fs
out
lea
int
dec
rep
sbb
lock
or
adc
cltd
pusha
push
andb
dec
ljmp
sbb
clc
repnz
sub
insl
push
fcom
push
pop
es
or
add
jae
cmovs
xchg
in
and
push
xor
xchg
mov
inc
or
hlt
clc
mov
adc
cs
xchg
add
popf
xlat
mov
or
call
data16
pusha
enter
adc
push
sti
sub
das
cmp
rcrl
or
pop
jns
sbb
and
mov
dec
sahf
push
push
or
faddl
or
mov
call
xlat
lock
sbb
inc
pop
jno
ret
xor
movsl
test
stos
mov
push
enter
and
cwtl
sbb
xlat
lods
cmpsl
dec
aam
enter
icebp
cli
adc
xchg
cmp
cld
adc
push
xor
cmp
lret
call
pop
inc
sbb
lret
nop
pop
inc
arpl
lret
inc
pusha
cmp
test
icebp
add
pop
cmp
fadd
cmp
push
mov
inc
mov
pop
mov
mov
and
lock
arpl
xor
sub
insb
iret
xchg
rcr
je
and
sub
repnz
jmp
mov
cs
mov
leave
dec
mov
fidivl
call
test
movl
popa
sub
dec
jne
es
add
mov
leave
sbb
lret
mov
mov
clc
dec
xchg
mov
mov
jno
nop
mov
adc
push
adc
int3
pop
ffree
into
sub
in
jp
dec
insb
rclb
lahf
jns
outsb
mov
inc
dec
pusha
mov
and
jbe
adc
jnp
pushf
jmp
pop
or
cmp
or
adc
add
add
daa
add
inc
and
adc
pop
or
push
jne
and
xor
dec
or
sbb
js
inc
xor
lcallw
sub
jmp
fwait
or
adc
jmp
dec
dec
out
mov
lods
addr16
xor
das
add
sbb
dec
sbb
or
dec
sub
and
inc
mov
push
sbb
mov
pop
scas
push
ss
jle
fs
in
ds
jp
xchg
in
or
lret
popf
or
add
daa
sbb
sub
xchg
inc
dec
punpckhwd
push
add
shl
inc
jns
mov
mov
aas
mov
xchg
dec
pop
and
lea
ret
adc
sbb
cmpsb
loope
mov
sub
xchg
pushf
xchg
jbe
push
jg
bound
push
nop
in
inc
jno
xor
cld
mov
push
xor
dec
add
leave
xchg
hlt
mov
in
lock
test
inc
cmp
mov
rcr
or
loopne
or
clc
mov
push
in
and
rcll
sbb
out
stos
inc
pop
pop
add
test
in
sub
stos
add
subb
hlt
adc
inc
xorl
xor
in
dec
adc
sbb
lock
in
mov
push
jno
cld
sub
in
jp
inc
jne
dec
mov
jmp
aaa
mov
ret
js
push
movsb
push
jg
sti
outsb
lods
pop
jge
lock
adc
push
call
sbb
inc
clc
cmp
push
xor
or
inc
aas
jmp
xchg
mov
sub
leave
or
arpl
arpl
pop
call
jb
mov
repnz
and
cltd
xchg
push
jo
lods
xchg
mov
adc
das
mov
test
dec
pusha
add
and
dec
push
jge,pn
jl
add
jno
xchg
jecxz
cmpsb
push
in
lret
pop
adc
add
sti
mov
and
adc
dec
cmp
les
imul
jle
push
xor
test
mov
mov
das
adc
mull
xchg
out
dec
les
cmp
jecxz
lods
std
movl
imul
mov
sti
dec
adc
inc
dec
hlt
push
scas
add
push
adc
jno
test
movsb
je
mov
mov
pop
jno
inc
adc
mov
mov
pop
loop
ret
jmp
and
push
notb
call
jae
and
int3
pop
adc
sub
sub
adc
ljmp
jae
push
stos
mov
dec
scas
add
sti
adc
push
mov
xor
dec
fnsave
notl
xchg
pop
push
cmpsb
inc
jne
pop
rol
dec
popa
imul
push
jp
and
add
mov
inc
pusha
es
sub
pop
jl
adc
pop
xchg
cmp
and
adc
and
aaa
add
inc
fimuls
andb
decl
ja
leave
or
movsl
nop
leave
cmpsb
push
push
cmp
mov
ret
xchg
push
jl
or
mov
pop
and
or
incl
scas
pop
fisttpll
and
leave
imul
imull
or
jl
arpl
pop
cmpb
pusha
sbbb
cmp
add
out
stc
xor
hlt
jo
mulb
pusha
call
or
lds
sbbl
cmc
pop
inc
lock
inc
jmp
test
rorb
adc
add
lahf
cmp
cmc
mov
xchg
mov
aas
sbb
and
repz
cmp
sub
pushf
cmpl
or
inc
or
push
clc
mov
adc
cmc
sbb
out
test
inc
xchg
push
cmp
push
lahf
push
add
xor
fcoms
cmpsb
ret
daa
jge
filds
std
jmp
test
movsb
testb
inc
cmpb
data16
adc
add
pop
fiadds
jbe
adc
std
scas
mov
mov
jge
jo
inc
sub
pop
js
cmp
or
bound
xor
mov
ret
pop
ljmp
nop
xor
jl
cmp
jle
xchg
or
mov
add
mov
testl
jg
sub
pop
xchg
in
xor
lea
lret
shll
inc
inc
rcrl
mov
xchg
rcll
and
jo
test
sub
mov
das
sbb
inc
mov
dec
push
mov
repnz
sti
xor
insb
data16
mov
or
push
outsb
sarl
in
dec
inc
js
adc
add
adcl
bound
lahf
sub
xor
and
cli
mov
or
ja
movsl
stos
sbbb
inc
stc
movsl
sub
fildll
adc
xchg
ljmp
cli
adc
or
push
inc
and
in
jmp
or
mov
add
std
es
pop
cmp
add
push
pushl
js
jae
sub
push
push
jbe
cmp
mov
insl
dec
inc
mov
push
xor
or
mull
sub
or
jne
test
je
repz
fnstsw
fdivr
dec
jne
xor
sbb
jmp
push
mov
sub
sub
inc
and
mov
adc
push
or
add
or
add
mov
scas
xchg
mov
mov
mov
inc
adc
mov
adc
and
dec
xor
jle
fs
subl
mov
movsl
adc
push
mov
je
xorb
fs
loope
jg
aad
bound
add
sub
aad
dec
adc
into
fildll
dec
es
inc
dec
aam
xor
imull
sub
cmc
or
push
es
ljmp
pop
decb
dec
into
movsb
or
and
dec
add
dec
fisubrs
mov
and
push
or
or
mov
inc
sbb
ja
cmp
mov
and
cmp
mov
sbb
jle
in
xor
xchg
scas
shll
jle
or
and
das
mov
push
push
pop
lahf
sbb
lcall
inc
push
js
in
psubd
push
hlt
and
mov
cmpb
testb
mov
nop
mov
cwtl
call
inc
push
mov
jne
mov
nop
pop
daa
dec
add
push
mov
or
cltd
sbb
push
or
xchg
icebp
outsb
mov
jne
rclb
sub
pop
jp
inc
or
add
int
out
into
jns
outsl
clc
pop
and
pop
inc
push
cwtl
cs
cld
das
jb
mov
push
adc
xchg
lods
cld
mov
push
inc
hlt
sub
loope
pop
mov
dec
sub
and
sub
adc
sub
sbb
std
xchg
cmp
lods
dec
idivb
pop
in
je
loope
int
pop
push
sub
add
nop
out
aaa
movsw
jne
shlb
and
dec
inc
xchg
pop
mov
call
mov
adc
sub
mov
mov
or
push
int
cld
or
fbld
test
fimull
mov
subb
or
sbb
push
inc
cmp
jb
push
outsl
sbb
xor
repz
xor
adc
gs
push
repz
ja
sahf
popa
nop
cmp
jne
xor
or
sub
and
pop
sbb
mov
or
adc
pop
xlat
dec
ss
inc
jmp
mov
fbstp
dec
cmpsb
adc
es
jmp
sbbb
or
out
ror
fnstenv
sti
pop
jmp
xchg
adc
push
iret
popfw
and
cmp
pushf
mov
adcb
dec
mov
mov
fdivrl
lret
lcall
jl
iret
test
lret
fmuls
jg
sub
inc
sub
idivl
cmc
rol
xor
cli
cmp
sub
imul
and
sbb
lock
stos
cld
push
xchg
ljmp
pop
cmp
lods
daa
xchg
daa
fists
cli
int3
mov
dec
loope
outsl
jne
loopne
mov
push
add
cmp
jbe
incb
inc
cli
or
rorl
loopne
cmpb
pop
in
shlb
mov
or
lahf
in
add
cmp
pushl
push
inc
dec
je
inc
pop
hlt
jo
or
enter
pop
push
lods
jmp
xchg
inc
sub
negl
je
orl
iret
inc
xchg
out
or
sub
adc
mov
pop
inc
inc
cmpl
push
cwtl
mov
popf
push
pop
sub
cmpsb
push
xor
je
inc
jns
test
bnd
mov
sbb
jbe
pop
cwtl
loopne
icebp
arpl
jb
imul
dec
adc
pop
pushf
push
jo
pop
and
jb
adc
fistpl
jecxz
inc
push
aam
nop
or
movl
dec
sti
jnp
movb
faddl
testl
mov
xchg
or
sbb
xor
inc
mov
lahf
jl
cli
into
dec
push
icebp
jge
adc
xor
test
mov
sub
inc
xchg
cmp
jp
stc
nopl
jmp
push
or
push
add
sbb
imulb
insl
daa
lock
push
push
outsl
cmp
pop
sub
fcomp
push
shl
in
into
mov
in
mov
shll
jbe
gs
fnstcw
mov
sub
sub
inc
fcompl
in
jle
pop
pcmpeqb
sarb
ds
cmc
xchg
sub
or
inc
mov
mov
push
cli
lea
movl
mov
add
or
push
push
movsl
shll
dec
jmp
cld
dec
ret
inc
xor
jle
out
sbb
movsb
xchg
mov
bound
and
dec
adc
or
or
std
or
jae
sbb
lock
orl
test
sbb
push
mov
dec
pop
dec
ret
dec
bound
test
je
les
mov
cwtl
loop
mov
and
in
dec
hlt
mov
and
lods
call
leave
add
push
mov
push
jne
imull
dec
dec
cld
xchg
or
dec
adc
adc
mov
negb
pop
xchg
push
xor
ljmp
or
je
pop
add
mov
or
int
dec
int
xor
lock
in
shll
or
pushf
sub
subb
and
jge
andl
jmp
cmpsl
test
pusha
push
call
lret
loopne
movsb
rcrb
xor
pop
ss
add
xor
stc
das
inc
pop
scas
fwait
andb
add
inc
and
call
add
lea
dec
or
and
and
lret
incb
push
and
jae
jge
dec
imul
mov
ret
lahf
pop
or
add
jmp
push
jo
inc
imul
jne
sbb
je
or
add
push
jmp
mov
push
scas
ficomps
addl
test
cmpsl
dec
icebp
imul
cmpb
leave
cmp
out
add
mov
sbb
dec
gs
adc
add
fistl
dec
shll
bound
push
push
xchg
addl
add
jge
psubb
and
loop
stc
pop
mov
in
xchg
push
cs
fs
mov
fabs
add
inc
std
dec
jbe
or
cs
test
scas
pop
mov
jne
imulb
push
push
xchg
lret
inc
hlt
jmp
in
jb
dec
sahf
sub
and
jbe
cmp
adcb
fs
sahf
test
jl
pop
leave
loop
aas
lock
or
adc
test
jb
in
jle
jbe
and
movsl
sbb
cmp
mov
das
push
cmpsl
in
addl
mov
loop
push
push
arpl
repnz
pop
dec
dec
cmp
inc
test
add
jns
xor
in
hlt
leave
ret
das
mov
je
push
ret
xchg
adc
into
fs
cwtl
sub
ljmp
xchg
bound
push
cwtl
push
mov
sub
jb
xor
clc
xchg
jbe
mov
add
cmp
ficompl
fsubs
xlat
inc
sarb
pop
dec
jbe
subl
mov
inc
out
pop
fisubrs
jb
lods
scas
imul
xor
jge
mov
xchg
mov
test
call
or
sar
cld
xchg
dec
stc
fdivr
cmp
fs
stos
sub
inc
out
pop
or
and
sti
shll
lods
push
mov
jno
or
ljmp
xchg
adc
das
std
push
icebp
sbb
push
into
add
or
mov
sti
imul
xchg
and
test
dec
inc
jne
dec
jo
popf
out
cmp
pop
mov
sub
shl
andb
cwtl
or
icebp
adc
sti
imul
js
pop
xor
fucomi
rcrl
jo
mov
pop
or
iret
leave
inc
das
icebp
roll
xor
sbb
cmpl
mov
into
jmp
xchg
iret
sti
test
je
jl
dec
dec
not
and
out
popf
jne
push
or
mov
dec
mov
aas
int
push
dec
stc
call
mov
inc
ds
and
imul
push
xchg
enter
adc
or
mov
shlb
repnz
test
mov
dec
sub
idivl
mov
in
jmp
cmpsl
fistps
add
and
sbb
sahf
push
das
fadds
popf
jge
mov
xor
sti
or
push
addb
cmp
inc
sub
pop
xchg
loopne
cmp
xor
mov
ds
fstl
jg
cmp
inc
jl
add
lock
mov
inc
cmp
xor
lock
sbb
jle
imul
scas
xchg
jp
pop
push
sub
fldl
inc
js
dec
push
fs
jmp
das
into
sub
sbb
imul
inc
push
sbb
clc
daa
dec
or
and
adc
push
sbb
sbb
pop
lock
sub
push
pop
sub
js
xor
inc
push
inc
inc
fsubrs
xor
adc
inc
mov
add
xchg
add
orl
pop
fsubr
pop
mov
pusha
mov
rorl
inc
js
mov
addr16
insb
pop
fisubrs
sbb
adc
adcl
sub
push
cltd
pop
es
mov
xor
cwtl
sub
inc
mov
add
xor
dec
orb
pop
xor
insl
into
inc
cli
ljmp
fdivrl
negl
test
jge
subl
inc
ffreep
or
lret
inc
mov
pop
sarb
hlt
xor
sub
xor
and
scas
test
xor
dec
add
lret
and
out
cld
ret
movsb
cmp
sbb
call
jecxz
loop
aaa
sbb
push
mov
stos
xchg
push
jmp
dec
sub
cmp
inc
cltd
call
cmp
movsb
fwait
test
popa
jmp
daa
and
call
es
xor
adc
pop
cld
push
call
lds
lods
push
lods
mov
jge
cmpb
nop
cld
movhps
mov
jg
lods
pop
pop
fisubrs
push
dec
xor
push
jbe
mov
dec
lcall
sub
shrl
inc
xor
out
jae
cmp
sbb
xchg
pop
inc
clc
arpl
ds
in
push
sub
test
push
sbbb
dec
sub
int3
or
rcrl
call
push
inc
lea
mov
add
je
jno
cmp
mov
sarl
pop
lret
push
out
out
fs
push
push
xor
jo
push
ljmp
adc
mov
enter
inc
shl
fdivl
popf
push
add
adc
sbb
adc
and
mov
fs
xor
adc
adcl
loop
insl
pop
shrl
push
movsl
iret
test
push
mov
add
or
dec
mov
pop
jge
call
fdivp
xor
sub
jmp
jp
or
jl
pop
mov
adc
or
dec
std
or
inc
bound
ss
adc
adc
xchg
push
add
dec
into
cli
xor
jbe
push
daa
jmp
inc
xchg
ror
shlb
adc
fstpl
mov
lret
ds
aam
mov
pop
adc
push
adc
std
mov
je
and
and
pop
pushl
out
mov
dec
sarb
pop
pop
jbe
sbb
les
sub
and
jp
ljmp
and
lods
lcall
out
fs
stos
out
cmp
inc
adc
mov
sub
sbb
lahf
jl
cwtl
xor
inc
push
nop
inc
push
dec
int3
or
xchg
mov
mov
adc
call
dec
xor
lds
xchg
xchg
add
push
fs
xchg
mov
in
pop
cmpl
sbb
pushf
sbb
jmp
mov
lods
or
jl
outsl
xchg
push
mov
xchg
or
mov
orl
add
popl
aad
xor
push
pop
sbbl
cltd
jmp
outsb
inc
adc
mov
add
mov
dec
lcall
sub
andl
push
dec
or
sbb
add
lahf
or
lret
xor
es
sbb
cltd
call
and
ljmp
aam
push
out
dec
push
jns
xchg
xor
test
inc
adc
inc
add
push
and
jne
sbb
or
add
jo
and
ret
ds
jo
mov
fs
xchg
ret
gs
cmp
jae
enter
and
int
xor
loopne
rclb
pusha
push
shr
add
iret
in
nop
test
pop
ja
cmc
bnd
dec
inc
cmp
dec
dec
add
add
jmp
jne
dec
and
xor
repz
test
cmp
cmp
clc
mov
pop
mov
in
sub
dec
or
mov
idiv
imul
and
mov
scas
decb
and
lods
rorl
pop
xchg
jge
adc
dec
pop
jb
es
mov
fmull
aas
nop
push
cmc
scas
inc
pop
inc
xor
xor
test
sbb
shlb
mov
rolb
add
sub
popf
sbb
mov
shlb
mov
stc
cld
call
lock
test
add
sarl
incb
or
ja
mov
aaa
adc
mov
pop
add
stc
dec
or
push
inc
cli
mov
shl
push
push
xchg
sbb
pop
repnz
cmp
mov
pop
into
mov
sub
xchg
imul
push
and
adc
and
adc
jecxz
das
jl
sbb
div
adc
movsb
xchg
xchg
jno
xor
lds
test
or
mov
imul
cmp
daa
loop
movsb
imul
sahf
test
daa
inc
sbb
ja
test
adc
bound
je
cs
adc
add
clc
movsl
push
add
xchg
into
cmp
scas
cmp
jp
data16
add
xchg
adc
mov
mov
and
push
and
test
dec
push
pop
sub
ss
jbe
push
or
aaa
cmp
add
pop
add
cmp
outsb
add
push
adc
pushf
add
push
insl
push
jg
out
sub
xor
jb
xchg
push
xchg
les
int
pusha
pop
xchg
test
inc
ss
push
lds
mov
outsb
or
push
jl
add
dec
jne
notl
cmpsl
sbb
push
xor
dec
aad
shr
fwait
push
sahf
dec
sbb
mov
aad
icebp
imul
mov
inc
inc
mov
xor
lcall
sbb
sub
sti
test
xchg
mov
rcl
pop
into
inc
cmp
daa
jne
or
pop
in
pop
push
xchg
dec
pushf
sub
test
loope
lea
mov
lock
jne
adc
sub
add
pushf
push
cmp
or
push
je
es
fnsave
push
ja
adc
xlat
cmp
movsl
adc
sti
jne
add
shl
and
pop
add
sbb
lret
clc
sbb
movd
push
sbb
and
jmp
cmpsb
inc
fdivrs
sbb
push
mov
dec
sbb
das
mov
lret
es
adc
and
pusha
inc
shr
jl
jle
fstpl
je
jns
ret
int3
je
jns
adc
sub
sub
test
sub
inc
rorb
popf
inc
jecxz
sahf
xchg
or
mov
and
and
fnstenv
push
js
xor
pop
mov
fld
and
dec
cmp
je
and
sub
xlat
jg
xchg
xor
shlb
push
and
nop
pop
repnz
sbb
sub
sbb
add
fbstp
fbstp
sub
pop
imul
adc
push
icebp
ljmp
and
add
out
in
jge
lret
inc
or
mov
cmpb
cmpsl
insb
imul
call
jnp
push
ss
add
push
inc
test
je
movsl
dec
outsb
and
jmp
movsb
ret
or
movl
sbb
or
test
movsl
inc
jp
cwtl
mov
inc
pop
jo
repnz
add
es
jae
push
xchg
jle
enter
test
pop
stc
cmp
sbb
call
pop
add
inc
testl
mul
inc
or
jle,pt
mov
sbb
dec
ss
cwtl
and
mov
mov
jmp
arpl
adc
fisttps
push
add
movsb
jge
and
les
loopne
mov
les
outsl
push
xchg
xchg
dec
xchg
rcll
sub
adcb
out
adc
mov
in
cmpl
cmp
aam
pop
dec
inc
xchg
and
adcl
xorl
xchg
sahf
icebp
fisubrs
cmp
mov
mov
pop
xchg
in
bound
or
test
js
test
into
clc
stos
jle
xchg
ffreep
in
loop
and
dec
fists
jmp
popf
xor
pushf
call
or
in
repnz
dec
lock
jbe
add
call
pop
jbe
stc
mov
cmc
jmp
nop
and
enter
in
and
adc
jecxz
jge
das
jmp
and
push
call
jge
loop
hlt
enter
cmp
sub
mov
fsub
adc
add
lds
sub
cs
out
imul
and
jl
mov
sbb
or
push
icebp
stos
out
or
inc
pop
push
or
cltd
push
lods
hlt
outsb
inc
mov
xchg
stos
rol
out
or
mov
add
sti
fs
add
mov
and
inc
test
add
cwtl
aam
shr
mov
cmp
fcompl
adc
out
aad
sub
mov
add
mov
add
push
xchg
and
sub
ja
pop
addl
inc
dec
xchg
aam
jae
icebp
jle
sub
fwait
push
and
mov
loop
mov
or
jp
push
push
pop
or
add
js
jmp
mov
sbb
jl
cwtl
daa
call
leave
outsl
cmp
js
push
inc
push
sub
sti
mov
dec
push
mov
dec
negb
js
mov
xor
inc
jb
and
mov
test
fisttpl
cs
adc
xor
sbb
mov
aaa
daa
push
xchg
out
in
sub
jecxz
xchg
dec
scas
adc
sbb
add
rorl
imul
pop
adc
add
call
adc
jbe
pop
neg
mov
add
lretw
movsb
out
aad
cmp
cmp
out
pop
jge
mov
fstl
mov
cmp
sbb
jmp
and
test
leave
inc
shl
add
and
mov
add
js
jb
dec
sub
mov
pop
xchg
mov
filds
mov
cli
ja
mov
add
out
shlb
and
sub
loop
push
push
dec
rorb
sbb
xchg
and
mov
sub
pushf
fdivrp
leave
nop
int
dec
stos
adc
adc
ja
and
dec
pusha
jmp
or
push
scas
sub
or
mov
call
mov
loop
and
or
xchg
fcoms
cmc
jb
scas
and
inc
adc
and
fists
push
push
fdivs
or
cltd
push
movsb
push
test
adc
inc
leave
inc
jmp
mov
aas
enter
inc
js
test
adc
in
out
and
in
pop
push
daa
lock
xchg
lret
add
jle
in
icebp
push
xchg
test
jl
jne
pushf
push
mov
mov
adc
ret
inc
add
xor
gs
adc
mov
dec
insl
xor
insl
lcall
sub
adc
mov
pop
in
divb
pusha
in
ja
xor
mov
popa
movsl
loopne
aas
lret
lods
rclb
mov
shll
fs
pop
out
dec
push
shll
or
daa
std
and
and
sahf
sub
mov
jae
pop
mov
dec
jge
or
jmp
pop
adc
lea
test
mov
in
inc
or
pop
fisubs
push
fsts
add
mov
mov
xor
mov
xor
mov
aad
nop
dec
and
inc
push
ds
js
sbb
or
int
je
add
add
add
lret
in
pop
pop
cmp
arpl
adc
lcall
inc
xchg
mov
inc
push
out
adc
mov
mov
pop
lods
mov
or
xor
ja
lea
or
jle
add
jne
pop
xchg
or
les
jno
adc
jnp,pn
mov
enter
lock
inc
or
int3
xchg
adc
test
aas
sti
sub
adc
scas
and
push
ja
sub
bound
pop
mov
cmpsb
mov
push
pop
adc
mov
inc
adc
jmp
stos
aad
out
or
fadds
testb
dec
mov
repnz
mov
adc
out
imul
mov
jle
jp
sub
adc
and
push
test
je
add
lahf
pop
lahf
daa
sbb
add
pop
shlb
jge
mov
inc
mov
jle
ret
mov
jmp
cmpsb
push
xchg
jmp
push
add
push
ja
mov
pop
movsb
jnp
cld
pop
dec
add
cmpsl
mov
push
mov
lea
jbe
adc
mov
in
sub
mov
pop
insb
cmp
call
pop
fisubrl
mov
pop
dec
pop
xor
std
push
lret
nop
mov
push
mov
and
es
jmp
adc
and
sub
fidivrl
sbb
inc
fs
mov
adc
push
pop
test
inc
mov
or
mov
push
push
fs
bound
xor
xchg
paddb
test
mov
imul
rolb
lea
add
sbb
push
daa
pop
repz
movsl
jmp
or
lds
dec
add
add
inc
sub
adc
dec
push
shll
sub
das
cli
push
pop
mov
and
aas
mov
cmp
dec
daa
pop
sub
sub
push
mov
int
adc
mov
sbb
pop
xchg
mov
push
and
inc
or
and
in
in
xor
add
mov
pop
dec
in
jb
jmp
fistpll
dec
sbb
and
mov
loope
leave
inc
cmpsb
push
in
mov
loope
sti
test
mov
ds
or
movsb
icebp
push
mov
or
sahf
mov
xchg
call
push
rcll
ja
sbb
inc
pusha
mov
les
xor
sub
pop
fisubs
sub
movsl
jle
jae
sbb
movsb
pop
loopne
shr
xchg
jmp
call
push
jmp
out
adc
mov
pop
sub
pop
adc
add
aaa
xchg
movsl
push
mov
cmc
add
jecxz
in
test
fldt
mov
pop
xchg
mov
xchg
jg
sub
push
hlt
adc
test
test
mov
push
daa
or
sbb
sbb
jo
cld
push
cmp
or
cli
and
or
pop
jmp
popa
test
into
or
imulb
mov
das
push
popa
lds
pushf
popa
adc
lods
sbb
jge
jb
jmp
cmc
shrl
cmc
lret
lcall
sub
pop
scas
lret
out
nop
dec
or
jle
or
rcrb
push
in
push
push
xchg
dec
and
jmp
dec
mov
push
in
dec
mov
jmp
imul
lcall
cmp
and
push
or
js
and
push
xor
xchg
mov
roll
mov
popf
or
jmp
add
call
mov
jecxz
pmaxsw
out
mov
shlb
ret
pop
mov
sub
iret
pop
xchg
sub
out
mov
fs
mov
jmp
or
pop
fs
fs
add
or
cmovge
into
adc
inc
push
cmpsb
xor
inc
and
jecxz
lea
shr
repnz
mov
mov
and
pop
add
popf
lock
scas
cs
in
int
xor
or
lods
sbb
fistps
enter
rolb
ljmp
out
mov
xor
push
cltd
mov
bound
scas
inc
pop
jb
lahf
push
lods
insb
mov
inc
fimuls
repnz
pop
push
xor
ljmp
jnp
cmp
push
pop
cmp
push
mov
mov
pop
popa
inc
dec
cmc
mov
popa
xor
jle
ds
dec
xor
cwtl
insl
sbb
mov
xchg
mov
push
lods
jns
mov
and
xor
jmp
push
hlt
dec
mov
ret
out
cmp
jmp
hlt
fadds
mov
cmp
and
dec
or
incl
in
lods
das
mov
in
mov
inc
cmp
cmp
pusha
je
popf
inc
xor
lods
or
mov
adc
es
out
cmp
cltd
sarl
ud2
fs
add
add
push
push
dec
xchg
cmpsb
pop
add
pop
jge
stc
adc
push
xchg
test
push
sub
dec
adc
add
mov
insl
adc
inc
sbb
and
loopne
fs
pop
aad
imul
inc
push
and
xchg
adc
and
sub
cmp
and
sub
inc
add
pushf
xor
fs
push
and
mov
clc
rolb
mov
or
in
jb
cli
mov
and
jo
fs
or
pop
lock
adc
adc
pop
inc
cmpsl
xchg
test
mov
mov
push
fnstcw
push
push
stos
clc
adc
movzbl
or
jle
sub
sbb
pop
push
daa
push
fidivrl
negb
cmc
xchg
fistl
pop
push
and
push
leave
and
cmp
cs
sbb
dec
or
xchg
cmp
imul
xor
jne
adc
mov
clc
lret
pop
or
adc
cmp
sbbb
arpl
add
xor
dec
push
int
in
sub
lock
shrb
add
popf
loop
mov
mov
xchg
enter
jge
mov
xor
sub
scas
inc
ret
adc
popa
cltd
mov
cmpl
dec
inc
adc
pop
cmp
mov
cs
gs
jmp
xchg
sbb
dec
add
push
sub
into
jo
ljmp
and
inc
iret
lods
enter
sub
mov
cmp
in
jmp
cld
repnz
jno
jne
mov
stos
adc
inc
imul
jo
das
jne
fwait
in
and
fmul
shlb
lock
mov
je
mov
add
or
add
xchg
xchg
add
cmp
xlat
scas
andl
scas
out
push
hlt
mov
mov
call
sbb
push
daa
jle
pop
and
inc
and
iret
cld
jmp
xor
or
push
and
sub
stos
in
cmp
or
lea
xchg
mov
jl
add
mov
shll
je
cli
daa
mov
test
dec
adc
es
and
test
inc
and
xchg
mov
imul
and
mov
negl
jo
jmp
mov
xchg
out
loop
and
lahf
jno
test
mov
jne
ljmp
jecxz
push
or
or
inc
sbb
adc
fwait
jg
sti
mov
fnstenv
dec
out
dec
call
dec
or
cs
cltd
dec
mov
sbb
jmp
inc
adc
sarl
jmp
jmp
dec
aaa
cmpsl
les
and
xchg
cmp
in
decl
adc
mov
inc
dec
dec
scas
or
daa
fidivs
pushf
roll
movlps
jmp
jl
rcrb
gs
xor
mov
push
flds
test
jge
inc
stos
mov
ja
mov
loopne
cwtl
fbld
jmp
insl
into
xchg
or
fs
xchg
and
dec
push
stc
xchg
adc
and
call
xor
push
and
mov
push
adc
sub
inc
test
pop
lds
mov
pop
and
frstor
lods
leave
cmp
mov
push
xchg
add
leave
sbb
push
sbb
adc
dec
jne
jnp
push
dec
and
scas
cmp
cs
stos
or
push
or
pop
xchg
pop
mov
icebp
call
mov
add
ficoms
sub
js
repz
sub
enter
or
mov
jb
adc
and
nop
nop
mov
jl
jle
cmp
enter
bound
ds
mov
and
mov
fs
and
xor
add
push
mov
and
mov
insl
shlb
push
pop
add
push
das
inc
les
out
rcll
adc
addl
sbb
sub
sbb
add
sar
add
cmp
inc
fidivl
xchg
pop
clc
adc
das
test
xchg
stos
pop
out
mov
pop
adc
daa
push
addr16
jae
lods
pop
xor
jmp
cmp
enter
push
sbb
jg
fs
add
jg
mov
in
or
cmpsb
or
mov
push
roll
pushf
je
jl
adc
sbb
popf
inc
push
dec
pop
dec
imull
pop
mov
movsl
pop
mov
push
testb
adc
jmp
pop
dec
or
or
add
and
adc
je
pop
or
sbb
lfs
mov
inc
mov
imul
add
negb
dec
js
mov
dec
cmp
cmpsl
icebp
xchg
sbb
ds
aad
inc
or
shlb
leave
pop
jnp
ret
adc
add
je
add
jbe
push
dec
push
lods
ret
test
mov
jmp
and
notl
inc
jb
lods
inc
int
pushf
dec
cmp
inc
or
pop
aam
faddp
mov
pop
scas
dec
pushl
adc
and
sbb
or
lds
jmp
clc
out
call
sbb
je
or
and
call
out
test
leave
mov
fwait
call
fsubrl
jge
dec
add
jb
addr16
add
or
inc
iret
daa
jge
clc
nop
pop
in
in
jmp
xchg
loop
mov
pushf
sub
xlat
fstl
mov
ja
hlt
lcall
and
in
fildll
rorb
jns
cs
push
or
imul
in
lods
lea
add
imul
pop
jb
bound
add
cli
and
stos
dec
push
daa
or
aaa
jne
popf
push
fidivrl
adc
push
int
mov
int
mov
push
or
movsl
cmpsl
mov
adc
adc
adc
mov
insl
xlat
inc
ficoms
loop
push
popf
lds
cwtl
testb
jne
mov
adc
pop
push
xchg
loop
push
pop
jl
dec
add
movsl
xor
andl
push
push
pop
add
lods
pusha
push
mov
aam
adc
mov
xor
sti
push
test
call
and
stos
sub
ss
push
xchg
xchg
popf
lret
aad
adc
sbb
push
xchg
call
cwtl
mov
push
incl
aas
cld
push
leave
or
int3
movl
adc
mov
pop
xchg
call
int
sbb
dec
dec
push
sub
xchg
pop
adc
xor
fldl
vpshuflw
subb
fwait
dec
jge
sti
das
repz
sub
stos
mov
xchg
sub
xor
cmpsb
cwtl
pop
add
mov
and
lahf
leave
mov
cmpb
leave
scas
repnz
mov
bound
push
pop
in
int3
test
loope
repnz
push
xchg
dec
push
in
loopne
mov
pop
lods
daa
or
or
push
xchg
insb
repz
enter
push
das
inc
xor
push
or
js
and
loop
dec
mov
dec
pop
fsubrp
imul
jmp
and
push
ss
lret
xchg
popa
scas
cmpsb
js
js
cmpsl
subl
push
and
hlt
je
xor
mov
out
add
mull
std
push
dec
hlt
add
dec
adc
jne
lock
loope
sub
cmpsb
xchg
mov
and
mov
adc
movsl
cld
mov
les
and
adc
sbbl
cmp
adc
test
dec
mov
dec
scas
push
jl
adc
dec
roll
sbb
and
jg
or
stos
jle
push
jg
mov
push
adc
xlat
repnz
jne
push
out
xchg
dec
push
pop
mov
mov
sub
daa
call
fimuls
stos
shr
fisttpll
pop
cmp
pushf
cmc
inc
inc
mov
pop
mov
cmpsb
push
sbb
mov
xchg
add
fcom
loop
and
add
adc
movsb
movups
push
aam
cmp
andl
mov
stos
xchg
outsb
mov
roll
das
add
xchg
icebp
jae
push
daa
or
bound
add
mov
push
add
cmp
bound
jo
aam
adc
lods
repnz
sub
sub
jae
sub
out
inc
sub
dec
or
lock
push
mov
fdivs
filds
add
std
sbb
pop
dec
adc
fs
mov
push
stos
jle
jno
mov
hlt
cltd
cmc
loopne,pn
sbb
xchg
add
pop
xchg
test
jo
rcl
push
loop
sbb
push
pop
adc
je
mov
adc
mov
in
pop
xchg
sub
jno
mov
jae
adc
filds
add
into
in
inc
push
or
sbb
ds
cmp
mov
es
and
enter
or
sbb
and
es
push
and
scas
je
jne
and
stc
sbb
dec
add
push
shll
je
out
inc
fsubr
and
adc
add
or
add
xlat
out
fbld
cmp
jbe
jmp
pop
loopne
mov
xchg
cmc
or
in
pop
mov
add
in
and
dec
or
into
idiv
xor
pop
popf
insl
lds
mov
and
mov
mov
mov
sbb
or
mov
mov
pop
inc
push
jnp
pop
add
ds
cwtl
std
add
scas
notb
dec
clc
cmp
push
lcall
fcom
mov
aam
pop
cmpl
test
rclb
mov
push
xorb
data16
push
jae
sbb
add
push
dec
jmp
or
adc
jge
stos
in
aas
sbb
fdivrs
daa
insb
mov
movsb
inc
adc
loopne
sbb
andb
sub
xchg
lahf
mov
scas
push
fnstsw
mov
insb
sbb
adc
lock
dec
pop
dec
nop
aas
cmp
sbb
pop
lea
mov
mov
xchg
rcrl
les
push
sbb
mov
dec
jmp
mov
xor
mov
lods
loope
jmp
in
cli
inc
jmp
cwtl
cmp
push
xchg
jae
mov
scas
sbb
pusha
leave
sub
std
out
pop
dec
sti
sub
cmp
add
add
mov
cltd
dec
sub
sbb
xchg
cmp
cmp
xor
and
test
cmovae
xorb
dec
push
stos
or
sub
cld
sbb
outsl
hlt
imul
push
xchg
enter
and
push
inc
adc
leave
jne
mov
jmp
sbb
and
dec
pop
mov
js
xchg
add
inc
adc
inc
rolb
pop
add
mov
mov
rorb
shrl
call
inc
clc
movsl
xor
sub
je
cmp
test
jmp
enter
add
inc
cmp
ljmp
or
dec
push
std
cmp
data16
test
and
xor
in
pop
jns
xor
inc
jne
xlat
dec
xor
daa
cmp
lock
push
loope
xchg
std
mov
inc
aaa
pop
mov
aas
push
xchg
jne
mov
inc
adc
add
jp
or
lock
push
les
sbb
jno
or
push
push
repz
mov
pop
call
push
adc
add
push
int3
and
and
sub
lahf
adc
mov
test
ror
movsb
push
jb
push
xor
mov
test
mov
imul
pusha
or
mov
mov
mov
imul
daa
or
mov
sub
cmp
push
jmp
into
or
sbb
and
out
scas
jnp
mov
imul
pop
dec
rcr
mov
push
xchg
jae
inc
unpcklps
aaa
sbb
mov
nop
loope
adc
inc
pop
scas
movl
inc
sbb
xor
out
and
cmp
lds
int3
shll
rcr
xchg
push
jecxz
mov
or
xchg
ret
push
cltd
shl
clc
push
call
mov
sbb
push
ret
ss
sbb
cmp
or
jg
pop
add
lea
jecxz
leave
and
out
dec
subb
add
push
cmpl
adc
xchg
push
push
push
mov
dec
mov
sub
jecxz
movsl
push
mov
inc
or
mov
inc
jl
addw
dec
inc
jne
push
xor
jno
adc
xorw
lock
mov
pusha
outsl
or
sub
and
pop
es
mov
add
sub
and
push
scas
icebp
mov
or
pop
leave
sar
adc
xchg
ss
and
fadd
or
loop
or
adcb
stc
repz
dec
out
bound
call
jle
mov
mov
add
xor
push
push
add
shl
insb
cwtl
adc
imul
adc
push
push
sbb
dec
push
test
test
mov
cmp
ret
sahf
cmpsb
lret
pop
inc
out
fdivl
pop
or
and
add
xor
cmp
lea
movsb
repz
lcall
or
dec
out
xor
lret
and
pushl
sbb
inc
incb
lcall
in
jg
jmp
mov
jle
movsl
or
dec
xor
test
fists
or
add
and
and
adc
add
out
sbb
fs
push
scas
loop
or
das
inc
push
adc
mov
roll
push
aam
ret
call
in
cmpsb
xor
and
adc
adc
or
xchg
mov
xchg
jp
xchg
cmp
adc
addl
and
push
mov
inc
or
push
push
inc
rcl
push
mov
add
jle
das
add
sub
add
int
dec
mov
or
mov
ret
xchg
and
gs
lock
cmp
je,pt
push
push
mov
shrl
xchg
inc
jmp
pop
mov
push
or
out
jge
jg
pop
push
adc
es
mov
or
cs
pop
adc
jb
stos
and
orb
push
popf
pop
and
or
dec
lret
dec
adc
xor
push
cmp
push
cs
pop
std
loop
dec
aad
fs
inc
outsb
jl
dec
inc
loopne
clc
cs
adc
out
and
cmp
dec
jne
ja
and
push
sbb
jg
pop
adc
add
out
imul
cmpsl
fnsave
mov
inc
stc
dec
lods
or
and
inc
cmpsb
dec
pop
pop
test
pop
dec
gs
cmp
adc
popf
jl
lret
jbe
les
fistpll
push
in
out
mov
or
xor
xchg
add
pushf
dec
sbb
shr
xchg
pop
inc
pop
dec
mov
sub
ret
or
mov
call
or
sahf
inc
or
pop
jecxz
pop
push
pop
lcall
pop
mov
xchg
movsl
hlt
adc
test
inc
leave
outsb
push
inc
pushf
adc
rcll
movsb
mov
mov
cli
and
push
ja
cmpb
mov
subl
adc
sub
dec
pop
leave
jae
stos
push
fs
outsl
push
insb
push
gs
xor
jno
lret
pop
add
or
sbb
mov
scas
and
in
aam
and
enter
shl
or
push
out
in
in
pop
pop
adc
mov
mov
movsb
movsb
insl
ja
andl
mov
xlat
scas
fcomps
subl
add
test
cmp
orl
mov
cmp
push
pop
adc
orl
rolb
pop
pop
loope
rcr
faddl
fidivrs
loop
cli
or
loope
sar
inc
cmp
pop
fdivrl
negb
inc
pop
add
push
orl
dec
call
xchg
dec
and
dec
adcb
mov
and
rep
sub
test
invd
stc
add
scas
inc
dec
out
testb
test
mov
pop
call
test
iret
or
les
imul
fidivs
cmp
dec
sbb
jne
sub
test
sbb
mov
loop
sbb
or
imul
negl
sub
mov
xchg
mov
pop
dec
xchg
and
dec
mov
sub
push
mov
mov
cmp
jb
mov
mov
sbb
mov
je
imul
dec
imulb
daa
jne
aad
fsubp
hlt
and
clc
sub
imul
sub
cmpl
or
imul
cmp
xchg
cmpsb
xchg
push
dec
mov
notl
inc
add
adc
sub
test
mov
dec
jo
pop
ror
sub
dec
dec
out
xchg
push
lea
or
lds
stos
inc
lock
pop
cmp
sti
adcb
call
lret
dec
mov
or
inc
stc
dec
pcmpeqw
int
push
aas
mov
sbb
sbb
pop
mov
std
xorl
fsubrs
adc
fwait
push
repnz
ja
or
fcompl
add
xchg
jbe
loop
lock
xchg
sti
imul
addr16
jne
mov
loop
inc
dec
pop
sbbb
lods
lea
je
movsl
repnz
nop
iret
arpl
push
call
adc
ljmp
daa
adc
adc
sbb
push
and
or
mov
add
stc
jge
cli
push
fldt
xchg
adc
cli
cmp
ljmp
std
js
push
xchg
sbbb
fs
mov
popf
jle
dec
push
addb
mov
stc
push
test
testb
add
jne
mov
jbe
fldl
mov
mov
add
inc
adc
push
std
pop
orb
jns
push
sbb
outsl
cwtl
ret
mov
or
mov
jmp
push
dec
scas
lret
cli
and
les
mov
or
jns
cmp
int3
rorb
rorb
push
in
fmuls
mov
sub
lahf
les
sbb
mov
test
mov
push
jbe
inc
mov
js
xchg
sbb
adc
nop
push
and
mov
xor
and
mov
jo
orl
dec
iret
lods
fcompl
pushf
cmp
call
dec
push
mov
dec
cmpl
andl
or
int
push
in
nop
jno
pop
sub
mov
fstpl
mov
adc
idivl
das
jae
add
or
pusha
test
inc
sti
sbb
das
push
jl
sub
push
add
dec
out
and
aam
pop
mov
pop
scas
or
inc
push
push
pushl
in
scas
dec
loope
dec
aas
cld
out
push
mov
pop
sbb
popf
adc
push
lods
daa
daa
push
aaa
jno
or
adc
lret
dec
xor
push
and
sub
leave
movsl
decl
add
inc
fs
out
mov
jg
mov
xchg
mov
and
mov
movsb
dec
rcrb
adc
xchg
out
stos
and
ljmp
sub
nop
pop
inc
fdivrl
pop
dec
mov
fsub
inc
mov
mov
and
nop
stos
push
dec
hlt
cmp
adc
mov
movsb
mov
stos
repz
xchg
inc
in
jne
sub
push
push
pop
inc
and
repz
inc
stc
jne
ja
add
dec
pop
mov
push
cmp
das
add
inc
adc
movsl
inc
pop
call
lods
shrb
shr
mov
xchg
in
int3
adc
mov
test
add
add
adc
data16
mov
inc
dec
inc
inc
gs
outsl
arpl
out
outsb
icebp
cs
test
xor
incl
daa
idivb
sti
sub
mov
imul
mov
scas
push
hlt
jle
inc
jmp
hlt
cmp
les
mov
xchg
call
icebp
pop
cld
sarb
pop
lret
add
arpl
notl
jg
jp
add
add
and
jnp
dec
add
mov
addr16
add
jmp
adc
add
add
mov
dec
push
out
add
dec
sbb
or
dec
add
mov
fldcw
mov
test
and
stc
testb
mov
test
repnz
xor
sahf
in
jne
xchg
add
or
stc
cmpl
int
arpl
add
testb
pop
cmp
dec
out
loopne
cli
clc
jb
sbb
or
adc
mov
mov
fwait
jecxz
push
and
pop
jo
mov
jo
sub
and
push
xchg
adc
fsubr
cmp
pop
loopne
faddl
pop
cld
jbe
in
pop
adc
mov
xor
in
lea
jl
push
ficompl
dec
and
icebp
das
shl
ret
jb
je
roll
jne
mov
movsl
and
lods
repnz
mov
movsl
mov
push
or
jne
in
sub
es
xchg
sub
push
fnstcw
jmp
lea
dec
rorl
jl
push
xor
cli
or
jecxz
cmp
jl
stos
adc
stos
jecxz
jbe
jbe
xchg
iret
fnsetpm(287
repnz
jne
mov
jne
and
sbb
dec
adc
mov
adcb
mov
sbb
push
shll
push
xchg
scas
mov
inc
cmp
das
jb
lock
dec
int
dec
mov
xor
popa
imul
fs
inc
xor
add
inc
mov
mov
nop
mov
int
xorl
sub
cwtl
ror
sub
jg
mov
mov
dec
daa
jb
cwtl
jb
hlt
clc
adc
sbb
xchg
cmp
mov
leave
sbb
mov
cmp
loopne
or
mov
stos
in
lds
push
xchg
pop
repz
imul
in
jp
pop
push
sbb
mov
and
pcmpgtw
mov
iret
push
movsb
adc
dec
jo
mov
push
mov
or
sub
lea
jb
adc
icebp
clc
std
ja
mov
dec
and
xchg
call
cmp
sub
out
lret
enter
hlt
mov
pop
jle
daa
jp
and
nop
lods
dec
or
pop
jl
iret
inc
push
ljmp
ja
pop
jg
or
daa
aad
inc
push
pop
mov
fsubl
jle
leave
dec
and
ja
testb
int
out
adc
pusha
mov
popf
cltd
dec
scas
sbb
sbb
aam
ret
sbb
xor
dec
inc
inc
sub
mov
sbb
pop
jo
jns
test
mov
movsl
mov
loop
fnstsw
sub
push
das
and
das
jmp
rcl
stos
xor
stc
mov
lock
das
pop
adc
lcall
adc
xchg
je
js
imul
data16
hlt
sub
out
lret
movl
cwtl
int
hlt
cwtl
test
jp
dec
ret
xor
and
jbe
movsl
sbb
push
repnz
pushl
push
repz
mov
adc
and
fstps
xchg
adc
pop
mov
pop
jns
pop
fisttpll
test
sub
enter
imul
or
cmpb
jl
mov
rorb
adc
jmp
and
or
cmp
cmpsb
dec
push
mov
xchg
mov
dec
cmp
xchg
enter
hlt
jmp
dec
sti
addb
inc
sarl
icebp
push
bound
dec
jle
cmp
push
jl
dec
nop
test
sub
push
filds
js
add
sbb
and
pop
decl
jb
jmp
dec
inc
movsl
or
push
mov
sbb
aam
add
jmp
fimuls
inc
or
enter
lock
xchg
xchg
adc
fstps
cmp
lcall
and
pop
int3
and
cmp
jp
ret
push
jmp
push
adc
rorl
xchg
pop
aaa
loop
adc
je
mov
xor
and
sub
out
out
sub
dec
xchg
xchg
sti
push
xchg
sub
lea
clc
xchg
mov
mov
cmp
jb
sub
mov
ret
jecxz
pop
mov
push
ja
or
inc
adc
lock
push
push
aad
mov
mov
je
je
adc
jp
jae
and
sub
dec
in
jp
ficompl
bound
jp
imul
pop
enter
xor
stos
repnz
pop
xor
push
xor
mov
or
xchg
and
push
jg
out
mov
dec
sub
inc
cmc
out
mov
xchg
inc
fwait
pop
push
pusha
mov
cwtl
test
xchg
cmpsl
clc
shll
iret
cmp
xor
adcb
cmp
stos
in
imul
mov
pop
pop
hlt
hlt
clc
adc
cmp
jb
outsb
nop
loop
and
monitorx
pop
jne
andl
push
in
cmp
adc
sbb
cmp
sarl
decl
shll
dec
sar
cmovge
add
leave
jecxz
ret
jbe
push
pop
push
xor
cmp
or
cltd
xor
push
in
shr
cmc
fdivs
ret
scas
cli
lea
push
lahf
les
adc
push
stos
and
mov
pop
adc
cli
mov
mov
enter
dec
je
push
iret
jb
sbb
mov
mov
loopne
dec
push
xchg
ret
mov
sbb
xchg
xlat
and
push
jbe
fsubs
loop
std
stc
fcomps
ds
inc
fcomps
call
jg
inc
add
mov
adc
cs
repnz
roll
mov
sbbl
mov
pop
inc
adc
jns
cmp
adc
sub
mov
ret
and
push
jnp
leave
and
add
push
adc
mov
call
jg
popf
pop
xor
mov
leave
adc
dec
xor
jmp
lock
and
cmpsl
push
mov
ljmp
adc
ljmp
jnp
jg
pop
jo
sahf
jmp
push
roll
bnd
xchg
mov
ret
or
cmp
mov
sbb
or
gs
cltd
notb
imul
dec
ljmp
cli
lret
in
lods
push
movsb
adc
int3
xor
push
loopne
inc
add
lods
xchg
lods
jnp
aam
sub
push
adc
sti
iret
inc
sub
lock
adc
or
push
ds
stos
iret
test
inc
sub
dec
sahf
cs
jo
call
int3
dec
test
mov
push
ja
add
ds
jae
jg
test
ret
bound
and
mov
dec
pop
adc
push
jg
and
jle
jp
xchg
hlt
and
pop
cld
insl
mov
idivb
lret
mov
inc
cmc
incl
jg
test
adc
pop
mov
nop
outsl
push
xchg
or
push
jb
mov
xchg
loop
xor
aam
xchg
adc
repnz
daa
jno
push
fisubrl
jle
insb
and
lock
testl
sbb
inc
xor
xor
adc
lea
xor
sub
jmp
adc
fwait
lret
xchg
sbb
lods
sub
je
in
clc
inc
sub
inc
pop
jle
adc
push
or
mov
push
ja
dec
dec
pop
andb
or
mov
dec
inc
js
and
mov
jecxz
in
sub
mul
cmp
and
ret
inc
fnsave
and
inc
jmp
sub
sub
xor
jl
xor
call
pop
sbb
fs
test
je
sub
xor
sahf
mov
xchg
lret
adc
push
lea
ret
cmp
jae
sub
inc
cmp
xor
pop
outsb
lahf
jg
or
testb
fs
movsl
push
cli
xchg
xor
dec
cmp
arpl
sti
jmp
xor
mov
iret
adc
push
inc
fistpl
movsb
int3
es
cmp
int3
sahf
inc
outsl
sub
xchg
mov
sbb
push
rcll
xchg
push
pop
jg
lock
mov
inc
pop
add
dec
inc
push
sub
dec
push
dec
mov
stc
stc
or
mov
inc
adc
jecxz
test
dec
xchg
cwtl
stos
dec
clc
sub
push
xchg
mov
dec
xchg
xchg
dec
mov
add
xchg
cmpl
sub
dec
fs
pop
cs
cs
xchg
mov
mov
dec
jne
negb
dec
push
loope
popf
push
push
push
hlt
aam
pop
jmp
dec
push
mov
jmp
adc
daa
incb
inc
outsb
and
mov
dec
and
mov
mov
inc
rcrl
sbb
push
or
cmp
pop
and
inc
enter
sbb
fbld
inc
or
inc
repz
scas
test
cmp
mov
mov
jecxz
sbb
pop
cmc
popl
adc
dec
stos
lret
xchg
icebp
xchg
jp
mov
imul
scas
rclb
push
movsb
dec
mov
mov
movsl
call
adc
ljmp
fs
dec
or
xor
ss
mov
xchg
adc
repz
test
and
xor
sub
or
sub
push
jg
pushl
cmp
mov
es
xchg
or
pushf
je
out
dec
test
out
cld
mov
arpl
std
shlb
loop
sbb
pop
ret
dec
inc
test
jae
or
ljmp
cmp
lods
and
push
call
sbb
lock
sub
shlb
int3
popf
cmp
mov
dec
lock
das
test
sub
popa
icebp
aad
and
dec
and
and
movsb
lret
call
test
scas
pop
mov
push
icebp
cltd
or
test
test
mov
ss
cmp
sbb
test
adc
jns
adc
out
adc
inc
cli
jae
push
pop
mov
ljmp
insl
xchg
sbbb
or
dec
dec
sub
push
push
cmp
pop
sbb
fsubl
not
push
push
rcr
add
test
inc
mov
adcl
outsl
testb
adc
test
or
call
add
ds
adc
sub
pop
or
jns
scas
sarb
sub
push
int3
lods
push
push
push
and
inc
adc
xchg
fistl
xor
lea
adc
jne
push
add
imul
cmp
mov
rol
in
scas
int
loope
outsl
push
sub
sbb
subb
ja
cwtl
loop
push
clc
mov
in
push
push
inc
and
xchg
leave
cmp
pop
adc
mov
mov
aad
hlt
stc
jp
adc
cli
repnz
adc
or
ja
dec
xor
jl
imul
dec
xor
jl
mov
lods
testl
mov
sbb
test
jge
add
movl
xchg
setb
nop
mov
stos
push
popf
jns
sbb
and
lcall
inc
mov
int
mov
mov
cltd
test
push
pop
mov
and
inc
adc
call
inc
adc
xchg
mov
add
mov
mov
and
push
pop
inc
push
adc
test
test
xchg
or
jns
sbb
or
imul
dec
adc
jno
test
jae
cmp
cmpl
test
xor
fiadds
jbe
daa
jle
pop
jo
std
pop
cmpsl
bound
push
sub
push
xchg
sub
and
in
dec
and
test
cmpl
psadbw
or
mov
jl
and
jg
ss
test
lods
loope
pushl
ja
xlat
adc
imul
adc
out
adc
cli
or
iret
cmc
lds
lock
pushf
cli
and
cwtl
ret
pop
loop
adc
jbe
sbb
jl
mov
sub
dec
jnp
and
push
jne
jae
sti
mov
jmp
out
adc
int3
mov
mov
ja
jle
dec
les
out
ja
bound
movsl
fldl
and
xor
pop
and
in
sbb
add
jmp
sbb
movsl
lds
rorb
cmpb
jl
lock
stc
mov
fsub
dec
icebp
xor
pop
cmp
shrb
or
add
fstl
add
jae
movsb
pushf
in
mov
dec
lds
add
mov
orl
in
ljmp
push
cmc
push
orl
andl
xchg
mov
adc
or
sub
das
jg
jmp
inc
faddl
pop
gs
dec
add
fisttpl
jp
ss
shll
xchg
cli
daa
push
movsb
dec
filds
or
stc
rcrl
push
pop
mov
xchg
push
sub
insl
enter
fwait
sub
jbe
jmp
lea
xchg
and
inc
jnp
dec
add
jno
ja
int3
sar
fwait
and
pop
sub
or
sub
mov
movsl
push
jnp
adc
xchg
js
test
mov
push
jl
mov
jmp
mov
jmp
or
xor
repz
cmp
push
jbe
test
scas
hlt
and
mov
out
and
add
loop
push
sarl
xor
daa
loope
cmpsl
adc
arpl
push
icebp
jmp
movzbl
sub
fcomps
shlb
ljmp
adc
and
fstl
and
neg
push
push
fadds
out
add
or
jmp
sub
popl
scas
mov
push
pop
or
xchg
dec
es
push
or
xorl
pop
fisttps
ja
inc
xor
jbe
adc
ret
fstps
sahf
loopne
mov
push
sbb
testl
daa
jl
adc
mov
add
pop
pop
push
pop
jmp
mov
rolb
sbb
testb
add
xor
lea
mov
int3
pushf
mov
jmp
or
les
or
pop
test
imul
adc
mov
adc
outsb
or
mov
adc
xchg
add
and
gs
arpl
mov
mov
ret
inc
mov
mov
dec
and
es
cmp
push
push
dec
mov
test
jl
mov
cmp
notb
sub
out
in
cmp
les
cmp
and
add
das
jle
adc
ret
mov
sub
popa
fnsave
xor
inc
jo
test
fisubs
stos
sub
cmp
lds
inc
icebp
or
lea
and
sbb
sub
add
add
pop
jae
dec
pop
sbb
inc
dec
lahf
mov
push
jae
inc
xchg
loope
pop
push
pop
je
and
mov
push
stc
es
aad
test
jecxz
hlt
cmpsb
arpl
jmp
and
loope
and
pop
sub
mov
jnp
movsl
shll
lods
and
push
mov
dec
sbb
or
cmp
inc
shlb
addr16
movsb
sub
pop
xchg
insl
daa
sub
add
dec
or
pop
fwait
out
cmovne
sbb
test
and
lds
jmp
jae
pop
loope
jae
icebp
jmp
push
lret
rcll
pop
sbbb
mov
and
dec
mov
insb
mov
inc
mov
xchg
movsl
lods
fisubl
ret
push
in
lret
mov
dec
xchg
in
xor
enter
xchg
pop
jmp
movsb
or
xchg
jo
rcll
cmp
dec
fmuls
fisttpll
mov
mov
mov
cmpsb
std
jae
mov
test
out
lea
sub
jmp
and
rcrb
mov
les
xchg
sbb
and
dec
js
xor
lcall
into
mov
push
or
mov
mov
mov
cltd
pop
adc
mov
lret
cmp
ret
xchg
and
push
mov
dec
mov
xchg
mov
aas
pop
test
adc
jne
test
ret
push
inc
scas
mov
lods
test
push
sub
sub
mov
adc
push
es
xchg
adc
ret
pop
mov
sub
and
or
sbb
inc
push
add
icebp
dec
or
scas
mov
jne
hlt
test
test
clc
add
dec
or
leave
fnstsw
icebp
dec
add
insb
and
xor
test
adc
out
cltd
push
mov
push
insb
or
mov
addb
mov
push
jg
push
sub
cmp
adc
andl
and
inc
add
adc
jne
sub
sti
jp
imul
or
or
into
test
add
jns
mov
or
loop
movsl
cld
aaa
scas
dec
lods
mov
cmp
jg
call
loopne
cmp
mov
sbb
lea
or
pop
popf
or
cld
or
xor
mov
ret
loope
loopne
or
inc
inc
mov
mov
pop
mov
enter
scas
addb
xorb
out
sarb
jnp
adc
xchg
pop
inc
aaa
adc
inc
or
mov
jle
add
in
cli
jg
dec
arpl
movsb
leave
mov
cwtl
aad
push
es
dec
shlb
fwait
daa
hlt
ss
mov
ret
sub
bound
pop
fstps
aaa
jbe
aam
pusha
test
dec
cmp
jge
lods
das
mov
iret
push
xor
data16
push
cmpsb
adc
lods
or
and
pop
les
sbb
add
adc
mov
adc
and
dec
cltd
push
out
std
inc
scas
stc
inc
lcall
adc
pop
dec
or
subb
pop
or
or
or
out
or
dec
add
sarl
imul
jae
neg
xorl
push
lahf
ds
mov
ror
mov
jb
rolb
or
fidivs
adc
xchg
inc
lea
cmp
push
aad
ljmp
popf
pop
lahf
cltd
or
das
jne
jo
shll
adc
jb
mov
lea
out
mov
jnp
jb
and
mov
push
sbb
or
push
jmp
xor
test
adc
jbe
push
jg
daa
test
push
roll
cltd
xchg
xchg
inc
mov
inc
mov
jns
pop
mov
mov
cmp
mov
sbb
jge
jmp
loop
outsb
push
push
push
dec
call
and
jmp
es
mov
adc
int
scas
adc
pop
mov
and
add
ds
xor
and
sbb
testb
inc
inc
data16
pop
bts
xchg
add
out
icebp
sub
inc
cmp
jmp
xor
mov
add
mov
dec
lods
sub
out
jmp
mov
mov
dec
seto
mov
push
enter
test
xor
jge
xor
ja
movsb
xchg
addb
jae
es
sub
dec
lret
sbb
dec
jmp
jmp
aaa
aaa
enter
sub
sbb
and
mov
push
imull
or
add
movl
lret
iret
adcl
es
add
sub
cmpsl
dec
xor
aad
mov
clc
adc
mov
lahf
or
sbb
fildll
push
clc
ficoms
leave
fcoml
inc
adc
mov
or
inc
movsl
inc
adc
or
adc
fldt
ret
movsl
mov
push
mov
fistl
adc
mulb
adc
fstpl
or
pop
arpl
adc
adc
jmp
notl
cmp
leave
add
pop
xchg
xor
stos
ja
psubusw
testb
push
sub
into
fisubrl
or
mov
push
or
pop
scas
inc
fadds
mov
adc
push
pop
lock
sarl
ret
inc
out
xchg
add
cmpsl
jmp
or
loop
or
icebp
aad
andb
in
and
fnstenv
xor
in
out
inc
adc
dec
adc
jp
js
mov
push
mov
push
scas
adc
into
lds
mov
pop
dec
or
push
mov
movsb
call
adc
xor
cmpsb
sub
mov
dec
movsb
inc
inc
inc
in
adc
out
add
ss
movsb
das
stos
aad
pop
xchg
adc
ret
push
xor
test
cld
push
jmp
jl
xor
and
pop
mov
insb
push
jmp
sbb
jg
les
mov
nop
scas
mov
in
push
data16
inc
jno
push
fs
jmp
sbb
fistps
cs
xchg
push
ret
cmpsl
add
cltd
pop
pop
mov
nop
aaa
mov
xchg
clc
jbe
aas
and
or
aam
and
mov
adc
sahf
mov
inc
cmp
mov
popf
adcl
bound
mov
inc
mov
sub
or
adc
and
and
mov
xor
and
dec
sub
xor
sub
or
and
dec
dec
sub
mov
adc
es
xor
or
sub
dec
dec
mov
cltd
js
rcrb
cltd
flds
jns
cltd
adc
pop
sub
or
xor
mov
mov
or
ret
flds
cmpl
pop
jg
xchg
add
push
aad
add
fisttps
orl
lret
jns
orl
inc
sbb
adc
adc
in
cwtl
fs
or
pusha
sbb
sbb
jb
mov
xor
and
cmp
and
sbb
and
sub
sub
sub
add
mov
sbb
add
jb,pn
cmpsb
add
aad
add
call
ss
sbb
add
ret
test
add
fwait
nop
int3
or
aaa
or
or
xor
xor
ss
cmp
cmp
cmp
pop
popa
nop
cmp
adc
pushf
ret
pop
adc
push
shlb
xchg
addb
push
adc
push
clc
fdivrs
fld1
daa
pop
lock
sbb
and
xor
adc
jnp
jns
nop
or
sbb
xor
xchg
sbb
out
dec
dec
aas
mov
imul
test
es
cmp
sub
lea
jl
jnp
stos
pop
mov
push
call
test
adc
or
loopne
push
or
out
mov
ljmp
call
les
pop
add
push
jo
pop
and
or
clc
and
jl
and
or
in
push
jb
xchg
popa
lods
and
lea
js
sahf
mov
push
push
cltd
fsubl
test
test
sub
loope
sub
push
cmpsb
mov
and
xchg
clc
rcr
jp
xor
push
loopne
jmp
aad
xchg
out
enter
mov
fadds
sbb
fisubrl
adc
je
cli
pop
push
nop
hlt
lock
shl
jmp
sbb
mov
jg
dec
std
adc
push
mov
mov
push
or
test
mov
mov
adc
jp
dec
dec
mov
mov
sub
or
push
cwtl
loop
xor
sub
je
out
sbb
push
arpl
jne
add
or
pop
pop
push
push
mov
adc
push
cmp
push
sahf
iret
and
push
sub
dec
or
mov
mov
or
pop
cs
mov
ficoms
pop
notb
xchg
insb
movsb
popa
xor
push
xor
xchg
imull
sub
clc
loop
xlat
push
inc
decb
je
scas
mov
or
je
sbb
test
sub
mov
adc
call
outsb
movsl
jno
hlt
xorl
pusha
jp
mov
jmp
adc
inc
adc
push
pop
adc
push
pop
xor
and
mov
add
test
xchg
pop
test
sbb
or
jmp
inc
pushf
sub
or
or
lods
jmp
pop
mov
xor
mov
dec
pop
sbb
adc
adc
jmp
icebp
dec
lahf
sbb
mov
jb
aaa
rorl
add
sbb
daa
push
jg
nop
jp,pn
stc
pusha
push
cmpb
jne
inc
cmc
or
xor
lock
sub
std
pop
mov
lods
aas
mov
das
je
flds
or
inc
or
add
jmp
imul
test
jge
pop
adc
jb
jmp
call
dec
les
lret
sub
mov
testl
sbb
inc
adc
mov
mov
and
push
adc
movsb
lods
push
mov
push
pmaddwd
xor
jns
dec
adc
mov
mov
push
mov
add
adc
or
push
cvtpi2ps
imul
xchg
or
cmpsb
call
jge
mov
shll
out
xchg
leave
dec
jns
enter
inc
xchg
push
sti
adc
jmp
ret
ret
imul
es
call
adc
pop
mov
push
or
and
dec
imul
jg
cmpsb
adc
lahf
pop
sub
insb
dec
ss
insl
pop
test
push
insb
mov
ficoms
pushf
jbe
mov
xchg
fsts
sbb
xor
sahf
push
test
jmp
inc
mov
jbe
adc
mov
jge
xor
sbb
and
push
nop
lea
add
dec
or
or
pop
cmp
insl
cmp
mov
push
or
add
sub
pop
mov
in
adc
es
adc
pop
and
pop
sbb
add
cmp
pop
loope
pop
dec
dec
cmp
ss
or
cmp
pop
int
mov
or
addb
sub
mov
dec
int
mov
lcall
fildll
outsl
adc
cmpsl
jp
inc
and
mov
scas
pop
clc
fs
sbbb
sub
ds
test
push
push
sti
jmp
sbb
aas
adc
sarl
and
fs
add
adc
xor
sets
xchg
shrb
lcall
test
push
push
and
sub
or
lds
daa
loop
sub
popl
jecxz
inc
lods
movsb
scas
lods
inc
das
jo
mov
cmp
sbb
push
mov
in
push
inc
call
nop
jmp
or
in
sub
movsl
popf
clc
lds
popl
lock
or
mov
add
or
mov
nop
sub
jp
xchg
dec
mov
or
mov
xchg
mov
inc
mov
or
inc
inc
add
mov
and
dec
adc
push
mov
aas
inc
sbb
or
jmp
add
mov
and
int3
jae
cmp
jl
dec
push
sahf
dec
hlt
xchg
jmp
orl
xor
out
or
xor
and
sub
sbb
sbb
adc
adc
ljmp
insl
mov
mov
jae
cs
je
js
daa
adc
popf
mov
push
sahf
out
push
xchg
mov
data16
int3
data16
mov
loope
sbb
mov
or
call
call
sub
jle
inc
push
sarl
push
stc
inc
push
clc
movsb
fs
sub
test
adc
ss
fcoms
adc
pop
lock
cmp
scas
add
push
movsl
pop
aad
std
outsb
mov
push
sbb
xchg
das
movsb
sub
je
sbb
repnz
pop
loop
xchg
sbb
popl
adc
mov
or
mov
jae
push
mov
ljmp
and
stc
inc
xchg
jmp
push
cmp
push
dec
or
mov
xchg
incl
lahf
lock
jnp
enter
movsl
mov
out
mov
shlb
push
lods
push
jle
popl
add
cli
add
mov
push
hlt
push
mov
and
inc
push
hlt
and
add
xchg
lock
and
mov
mov
loop
sbb
push
and
cmp
daa
push
shl
add
add
je
push
push
lea
or
call
idivb
mov
push
frstor
add
xchg
dec
das
sbb
pop
stos
mov
inc
insl
mov
sub
sbb
or
mov
clc
std
scas
jne
dec
adc
ret
cmc
xchg
cmp
in
cs
xlat
call
push
inc
in
mov
or
xchg
dec
pusha
cmpl
je
adc
mov
gs
pop
push
out
add
xchg
mov
out
adc
call
in
std
cmp
mul
push
xchg
mov
or
lock
mov
or
cmpsl
xchg
pop
xorl
adc
mov
jecxz
sub
and
fsubl
int3
cmp
push
mov
lock
mov
add
test
cs
add
xchg
shlb
popf
int3
or
les
inc
pop
in
popf
rorb
les
test
adc
mov
push
or
or
push
cwtl
dec
stos
in
int3
int3
adc
inc
movsb
ret
or
lea
push
push
adc
or
shlb
push
ljmp
sbb
pop
sbb
or
scas
shll
shr
mov
adc
les
rclb
sbb
pop
rcrb
lret
pop
shlb
jecxz
iret
xor
ja
insl
inc
pop
and
mov
and
test
pushf
test
xor
scas
fnstsw
in
pop
cmp
je
dec
xchg
mov
call
jo
mov
shlb
push
mov
mov
add
je
inc
sbb
dec
jne
repz
sbb
test
orl
mov
dec
jbe
js
add
jbe
lea
shl
sub
mov
dec
pop
cli
bound
jge
mov
dec
dec
sarb
icebp
push
in
jmp
push
sbbb
push
mov
pop
testb
sahf
repz
xchg
sbb
xor
pop
pop
dec
dec
data16
and
jp
mov
and
pop
or
sbb
cmp
lahf
in
sub
cli
jge
andb
addb
xor
push
sub
jae
shrl
and
sub
es
jnp
cmp
jno
pop
cmp
je
or
add
inc
xchg
ss
xlat
mov
imul
ljmp
sub
push
out
dec
mov
outsb
cmp
in
in
xchg
fistpl
shlb
aam
pcmpgtd
xor
cmp
jb
xchg
jns
cs
or
add
addl
mov
outsb
and
sahf
js
push
or
sbbl
dec
or
mov
sub
insb
inc
adc
inc
mov
addr16
cmp
cmp
inc
call
sub
sub
xchg
jge
rcl
popl
jne
adc
outsb
ret
ljmp
hlt
fimuls
scas
adc
mov
inc
xchg
jbe
and
dec
loop
sbb
or
cmp
jb
in
test
push
push
call
imul
mov
dec
jl
and
adc
in
fcoml
mov
xchg
add
fisubl
cmc
dec
or
in
jg
outsl
sbb
jg
mov
es
sub
in
aaa
fnstcw
std
pop
sti
clc
mov
sbb
push
push
xchg
sub
and
add
and
push
push
xor
sub
shlb
adc
pop
in
inc
clc
test
idivl
in
mov
push
pop
xchg
lret
cmc
sub
imul
xor
insb
sub
test
cmpsl
jp
nopl
call
inc
cmp
pop
and
lret
sub
push
xor
dec
mov
aam
fcoms
sub
add
cmpl
inc
mov
pop
inc
mov
adc
push
pop
fs
mov
xor
les
stos
lcall
sbb
xlat
xchg
outsb
lods
jo
mov
iret
xlat
mov
nop
jge
ljmp
mov
adc
ljmp
hlt
pop
mov
leave
ja
ds
fnstenv
xor
push
loopne
andl
fsts
push
and
test
mov
loopne
inc
cwtl
std
xchg
stos
lea
pop
jg
sub
ja
xor
clc
or
hlt
pop
adc
test
mov
or
jns
data16
inc
add
dec
jmp
sub
dec
pop
sbb
ret
std
out
pop
fnstenv
jne
ret
adc
cmp
xor
in
dec
lret
testb
jne
add
pop
dec
scas
lahf
and
lods
push
inc
sbb
or
pusha
or
jle
mov
or
xchg
icebp
mov
hlt
pop
jmp
ss
or
out
sub
mov
dec
jge
adc
dec
popa
mov
inc
add
cmpb
adc
daa
jl
pop
leave
repz
call
push
hlt
sub
dec
adc
es
sbb
rol
out
lds
push
enter
cmpsb
mov
fs
sbb
push
pop
jmp
xchg
int
mov
stos
xchg
sbb
movsb
in
inc
stc
mov
jne
jne
push
sbb
xor
adcl
mov
jl
sub
push
jbe
xchg
pop
lcall
mov
jne
cmc
dec
adc
add
and
or
jmp
popf
xor
movsb
mov
push
cmpsb
lahf
cmp
push
xchg
add
sbb
add
push
and
mov
stos
xchg
jmp
dec
daa
xchg
data16
inc
add
sbb
add
mov
xor
lahf
arpl
cmpsl
test
xchg
icebp
adc
out
arpl
pop
mov
lcall
inc
dec
pop
gs
lret
js
mov
ds
jl
inc
push
lret
adc
sarb
out
clc
fwait
adc
hlt
push
test
pop
icebp
mov
push
fs
sub
out
add
mov
push
push
jne
xchg
and
cmp
sahf
into
mov
adc
jp
adc
and
and
push
inc
insb
mov
mov
mov
xchg
sbb
jl
aad
sub
test
andl
mov
jo
clc
shlb
daa
sbb
jg
sahf
sbb
incl
mov
loop
mov
mov
adc
and
sub
xor
and
adc
sub
lods
or
int3
dec
xchg
lret
daa
jle
das
incb
pop
pop
sti
dec
dec
push
or
mov
movsl
dec
pop
jmp
lods
fidivs
jmp
cwtl
lds
sub
sbb
les
leave
sub
jge
les
cmpl
push
xor
call
dec
cli
repnz
mov
jae
les
sub
das
movmskps
adc
in
imulb
adc
push
insb
mov
cmp
inc
sub
dec
jo
gs
push
cmp
push
insl
aas
iret
inc
cmp
push
inc
fisttpll
aad
fsubl
mov
and
test
daa
jne
sarl
adc
in
stos
pushf
xchg
push
mov
fldenv
xor
xchg
mov
les
adc
and
mov
adc
adc
sbb
fsts
out
pop
lcall
je
push
pop
add
xor
jmp
andl
push
setae
or
decb
sbbl
daa
jle
fnstenv
sub
and
fimuls
dec
add
sub
pop
test
sub
xor
fidivs
and
dec
je
nop
push
push
and
xchg
cs
push
mov
cmc
xlat
xor
mov
adc
es
jmp
and
push
and
and
mov
stos
in
fimull
push
jg
sub
ss
add
cmpsl
and
out
jge
fcoms
shrl
lea
push
xor
loope
leave
insb
pop
es
fcmovb
mov
and
loop
xchg
ja
mov
lahf
mov
or
aaa
ds
loop
movsl
sub
adc
mov
dec
sbb
mov
nop
sbb
fstl
lods
loop
xchg
stos
adc
sbb
xchg
mov
pop
cmp
mov
xchg
sar
cld
inc
popf
arpl
test
cmp
or
adc
stc
lea
adc
cmp
aas
scas
mov
mov
mov
dec
ljmp
loopne
or
or
pop
movsb
rcr
jmp
pushf
inc
rcrl
or
sub
or
push
cmpsb
loop
adc
outsb
sub
fnsave
jne
cs
test
ljmp
xchg
pop
fldt
ret
roll
mov
je
icebp
dec
pop
dec
cmc
adcl
data16
push
cmp
push
inc
decb
add
xchg
hlt
lods
push
clc
add
movsl
lea
add
push
pop
sub
imul
pop
fwait
jne
pop
les
mov
xor
fisttps
add
adc
push
das
pushf
filds
sub
sub
out
cmp
adc
cmp
iret
inc
adc
mov
mov
mov
data16
push
into
adc
pushf
add
push
les
in
aad
insl
movsl
add
clc
pop
test
adc
sbb
jnp
xor
cmp
or
in
fcmovnb
in
sbb
and
push
sub
xchg
xchg
mov
in
jl
jmp
in
push
adc
mov
inc
pop
fwait
imul
iret
sub
dec
mov
aam
lahf
mov
in
jne
adc
or
push
mov
aam
lock
jmp
inc
or
in
out
xchg
aas
dec
lcall
enter
sub
pop
pop
inc
mov
js
xchg
or
and
ljmp
cmp
mov
cmp
inc
out
mov
inc
inc
cmp
pop
adc
scas
inc
mov
mov
sbb
xchg
adc
mov
fwait
mov
or
out
out
adc
cmp
mov
jp
daa
push
fcomip
dec
enter
out
imul
lea
jle
add
jmp
mov
cmpsl
inc
sbb
pop
clc
repnz
xchg
fsubrp
xchg
mov
cmp
jnp
or
push
inc
inc
cmp
push
and
shlb
cs
subl
sbb
mov
inc
add
hlt
mov
leave
mov
adc
in
sbb
jmp
or
xor
or
rcr
mov
out
mov
sub
in
lcall
test
mov
xchg
jl
or
sub
test
shl
in
push
sbb
xor
sub
scas
inc
and
aam
lea
in
bound
aam
and
aad
dec
push
sbb
dec
inc
aam
or
jns
pextrw
or
and
sbb
cld
mov
into
push
mov
pop
mov
shll
in
lret
fs
inc
aad
test
mov
push
inc
pop
repnz
in
cmp
test
nop
pop
xchg
loopne
fsubl
pushf
int3
ds
adc
in
mov
dec
adc
push
cmp
add
xor
cwtl
sub
ja
pop
jge
int3
lea
inc
xor
add
mov
push
fcoms
cld
xchg
fsubl
loopne
or
pushf
adc
int3
and
jne
subb
and
sub
in
dec
orb
lock
pop
add
jae
arpl
call
push
inc
push
xor
movsb
or
inc
inc
dec
or
dec
sub
dec
lods
sbb
inc
push
aad
sbb
ret
push
push
inc
cltd
push
xor
sarl
or
push
jbe
addb
pushf
adc
xchg
les
into
inc
loopne
clc
adc
fldl
sbb
dec
sub
and
push
pop
mov
jb
jle
mov
test
mov
dec
fcoms
repnz
adc
and
dec
xor
dec
pop
mov
push
jle
mov
mov
inc
mov
out
cs
adc
and
xor
dec
adc
push
jp
nop
and
enter
loop
hlt
mov
loopne
and
xor
mov
push
jbe
xchg
test
mov
pop
clc
xchg
hlt
adc
loope
sbb
mov
pop
and
dec
jl
add
adc
mov
adc
and
inc
push
loop
sbb
push
mov
test
dec
lods
xchg
mov
out
mov
jecxz
push
adc
ss
inc
xchg
pop
and
xchg
mov
aam
out
cli
and
in
and
mov
pop
and
dec
jl
mov
xchg
inc
cmpsb
mov
xchg
clc
adc
in
adc
mov
pop
and
dec
jp
adc
cmpsb
and
dec
aam
out
clc
jns
sbbl
push
xchg
and
cwtl
mov
dec
in
repnz
out
sbb
mov
pop
and
dec
test
mov
in
repnz
adc
and
inc
sbb
mov
adc
dec
insb
xchg
jbe
addb
mov
dec
hlt
mov
jmp
inc
ds
mov
fs
dec
jle
mov
pushf
inc
mov
mov
adc
and
inc
add
or
and
pop
push
and
dec
mov
and
jmp
xor
push
and
adc
and
dec
adc
and
inc
inc
push
mov
jle
xchg
dec
stos
test
data16
or
mov
adc
in
add
and
dec
inc
xchg
dec
and
jb
mov
enter
out
hlt
push
push
out
pop
xor
adc
and
push
inc
data16
into
dec
loop
repnz
out
and
inc
sub
mov
fs
dec
mov
rorb
push
lock
dec
xor
das
adc
add
je
jo
pop
imul
push
inc
inc
push
pop
pop
add
fadds
insl
popa
insb
mov
lea
add
leave
je
gs
insl
jo
clc
arpl
jp
xor
xor
outsl
sbb
inc
outsb
outsl
adc
or
jae
adc
jo
push
sbb
adc
insb
lock
push
popa
sti
shlb
outsb
je
add
add
or
outsl
jne
add
add
or
popa
jo
call
je
lret
adc
popa
shld
sub
or
aam
bound
movsb
xchg
arpl
inc
js
push
ficoms
arpl
push
adc
shrl
sub
jb
cwtl
movsl
xchg
adc
cltd
lret
dec
or
inc
loopne
insl
gs
call
cwtl
sub
movsl
dec
mov
and
xor
mov
lret
int3
call
adc
sub
insl
nop
adc
xor
sub
outsb
jecxz
pusha
sub
inc
test
mov
test
imul
mov
sbb
sbb
fiadds
mov
aam
and
pushf
sbb
adc
in
clc
push
es
jp
ss
cmp
stos
or
enter
ja
inc
outsb
loop
add
sbb
add
in
sub
xchg
ss
lea
xor
lcall
orb
andl
mov
sahf
adc
push
nop
outsb
mov
imul
mov
push
sub
outsl
mov
jae
clc
mov
popl
xor
roll
bound
fs
sub
dec
mov
and
pop
mov
addr16
aas
jne
incb
cmpsb
push
outsl
ficoml
hlt
pop
daa
xor
arpl
mov
inc
add
adc
push
inc
inc
lds
test
fyl2x
ja
dec
sbb
sbb
arpl
outsl
jmp
dec
jae
or
push
xchg
jbe
nop
aam
xchg
fistps
push
sti
jo
push
rdmsr
inc
mov
inc
ljmp
and
push
dec
lds
xchg
add
adc
xor
sbb
cmp
sub
mov
inc
or
or
inc
les
adc
neg
cmc
hlt
jbe
sbb
jmp
and
notb
xor
pop
fs
bound
push
sbb
aad
cs
xorb
xor
xor
jns
arpl
xlat
push
mov
in
loop
xchg
or
pop
test
popw
or
or
mov
mov
imul
cs
dec
je
xlat
dec
addr16
jae
aad
push
xor
stos
mov
inc
inc
orb
lret
mov
mov
inc
aam
inc
dec
or
ds
mov
stos
add
outsb
lea
adc
stc
cltd
sahf
mov
and
and
sub
xchg
or
jge
push
push
sbb
stos
and
fistpl
cmpsb
in
xchg
cmp
cltd
sub
scas
in
jne
inc
sub
test
and
test
sub
lcall
imul
pusha
insl
push
mov
xor
sub
jg
sub
aam
xor
pop
inc
dec
inc
push
cmc
arpl
into
xor
insl
dec
and
scas
mov
insb
dec
int3
outsb
insl
push
adc
lret
jmp
cmpsb
jne
dec
cltd
mov
dec
jb
out
jl
add
data16
push
cwtl
les
dec
pop
jp
outsl
and
jns
mov
inc
imul
sub
sub
adc
cmp
mov
jecxz
push
adc
xchg
jp
xchg
call
or
adc
xchg
sbb
aam
mov
gs
and
movsl
adc
rcrb
xchg
aaa
imul
mov
sub
dec
lcall
jns
mov
inc
push
sub
sub
outsb
inc
dec
mov
mov
and
sahf
lock
sbb
sub
repz
cmp
xchg
cld
sub
nop
sub
leave
mov
test
inc
adc
test
aas
and
mov
sub
xchg
sub
sarl
mov
gs
jb
or
push
sbb
or
or
cli
imul
test
dec
add
bound
imul
add
out
imul
sbb
jge
into
out
xchg
mov
dec
xchg
and
jo
ret
loope
or
inc
sub
daa
daa
mov
lods
mov
cwtl
fmull
cmp
imul
mov
pushl
mov
ss
popa
mull
pusha
mov
xor
lret
mov
cltd
push
in
jo
std
mov
cs
and
movsb
or
jo
insb
dec
add
push
jl
filds
jo
js
push
std
mov
adc
icebp
std
popa
mov
mov
add
jne
and
or
sti
int3
sahf
aaa
lods
adc
inc
sub
mov
lea
shll
in
lahf
jo
mov
cwtl
jne
add
dec
inc
stos
pop
xchg
xor
out
out
outsl
mov
xchg
cmp
sahf
xchg
jbe
shlb
push
ds
shrl
lods
shll
and
jmp
pop
push
aam
outsb
or
in
sub
cmp
fs
imul
cld
js
xchg
adc
inc
int3
adcb
dec
je
sub
adc
push
push
imul
and
push
aam
cltd
inc
mov
loop
inc
adc
dec
sub
inc
jbe
jmp
push
xchg
or
es
mov
jnp
dec
jne
jo
cwtl
dec
js
dec
addr16
xchg
aas
shll
lcall
add
push
inc
enter
push
sub
xlat
xor
cmc
cmp
ljmp
push
push
sbb
hlt
sbb
arpl
dec
xchg
inc
xchg
mov
lcall
add
dec
pop
pop
dec
mov
inc
inc
push
push
dec
fnstsw
shlb
call
test
lret
scas
adc
pop
insb
dec
mov
mov
gs
lahf
adc
mov
xchg
mov
inc
cmp
arpl
push
fcom
inc
fisubs
cmpsl
movsb
test
jg
stos
pop
and
xor
add
and
in
scas
movsb
sub
stc
push
push
fs
lea
dec
inc
out
mov
xchg
imul
ret
inc
push
xor
dec
sbb
movsl
popf
xor
xor
dec
or
or
cmp
movsl
enter
push
movsl
push
mov
stos
mov
inc
xor
test
mov
mov
ljmp
cmovle
insl
fcoml
dec
out
dec
inc
jecxz
dec
or
xor
andb
test
pop
jecxz
inc
ljmp
in
adc
mov
mov
push
xchg
les
adc
xor
dec
mov
es
into
push
dec
adc
pop
stos
test
leave
data16
adc
in
push
or
mov
fistpl
adc
fcoms
sub
push
dec
dec
sub
fcomps
xor
fistpll
leave
xchg
cli
mov
fcoms
and
push
and
and
dec
testl
lods
dec
andb
dec
cmc
dec
daa
jne
data16
testl
paddb
and
pop
mov
ds
popaw
fcoms
inc
dec
cmc
imul
out
leave
imul
popf
sbb
insb
lock
cmpsb
pushf
jno
pushf
sbb
jo
mov
xchg
mov
cmp
xchg
out
scas
inc
dec
inc
xchg
test
push
xlat
ret
mov
sbb
xchg
dec
jne
imul
add
adc
std
lods
scas
out
test
repnz
pop
push
push
xor
dec
ss
loope
jns
push
xor
es
adc
mov
push
fnstcw
mov
adc
xchg
lods
inc
loop
adc
mov
cltd
push
and
cltd
xor
xlat
mov
push
popa
inc
jecxz
inc
test
push
fldenv
aam
sub
subb
pusha
daa
adc
pop
xchg
fs
dec
xchg
call
adc
cmp
pop
cmpsb
mov
push
cltd
popa
in
test
ds
cmp
push
adc
movd
inc
fwait
leave
push
sub
jo
in
mov
xchg
dec
imul
and
jae
pop
insb
xor
push
xor
sbb
xor
add
push
push
icebp
addr16
xor
ljmp
sbb
cmpb
dec
dec
push
dec
and
push
add
adc
inc
dec
xchg
movsl
imul
loop
xchg
sbb
loop
pop
cld
fildl
sub
ret
daa
sbb
sub
push
ss
inc
daa
push
add
in
insl
mov
scas
mov
push
xchg
daa
lret
fildl
ret
lods
out
sub
cmp
jns
pop
addr16
add
roll
cmp
xor
dec
rol
dec
bound
sbb
push
inc
push
cs
dec
xchg
jne
mov
dec
adc
or
loopne
outsl
insl
fwait
sub
pusha
dec
dec
sti
dec
int
shrl
sbb
lcall
pushf
cli
add
into
xchg
xor
mov
mov
fldenv
jne
imul
popf
cs
or
jb
push
xchg
jg
xor
fidivs
cmc
cmpsb
test
jg
inc
xchg
mov
and
pop
or
lods
sbb
and
in
test
and
push
mov
enter
mov
mov
pop
mov
lcall
jo
jo
cmpsl
add
nop
jg
std
outsb
mov
adc
mov
jp
add
or
pop
ljmp
add
stc
test
jle
push
pop
mov
mov
mov
sub
push
je
dec
inc
mov
push
inc
and
inc
lods
mov
cmp
mov
inc
test
cmp
push
pop
cmp
lahf
jne
stos
addr16
shr
jmp
mov
fldl2e
mov
popl
xor
jp
insb
or
scas
dec
dec
push
adc
stos
mov
and
loopne
push
xor
js
adc
out
adc
mov
mov
sub
inc
lahf
fdivs
add
push
xchg
mov
jns
or
movsb
adc
lcall
and
pop
inc
mov
mov
subb
leave
ja
pop
mov
dec
inc
pusha
das
xchg
jge
and
ss
dec
loop
xor
xorb
xchg
jmp
inc
fwait
std
or
movsl
sti
jle
and
mov
mov
cli
and
enter
out
lds
jmp
and
lcall
lret
add
int3
incl
inc
jo
push
dec
cld
mov
test
std
jno
mov
ja
mov
add
subl
xor
xor
or
push
sub
inc
adc
pushf
add
je
or
imull
push
jmp
add
ja
cmp
inc
add
xor
ja
xor
and
xor
mov
nop
xor
insb
or
test
fs
sub
and
mov
and
mov
das
or
cld
or
aaa
popa
mov
clc
cltd
pop
and
mov
add
sbb
dec
mov
pop
mov
imul
pop
add
jle
outsl
dec
add
lock
dec
lods
sub
adc
xor
dec
sub
movsl
dec
aam
sub
mov
lock
xchg
mov
lods
pop
and
enterw
sub
dec
nop
jno
nop
xor
mov
cmp
clc
enter
incb
dec
dec
or
dec
inc
mov
adc
inc
orl
nop
dec
xor
inc
or
insb
inc
pop
enter
hlt
mov
lods
cmp
pop
dec
jle
add
clc
pop
pushf
bound
sub
xor
sti
push
add
ret
icebp
inc
inc
mov
pop
adc
dec
add
bound
sub
fnstenv
insb
push
fdivl
mov
stc
call
mov
ret
sbb
push
mov
insb
cwtl
dec
and
cmp
fs
mov
pop
cwtl
movsb
cmp
pop
scas
or
xor
sub
enter
dec
loope
int3
inc
fcomps
or
add
lock
loop
into
inc
add
lock
pop
ss
aaa
or
adc
int3
or
cltd
adc
xchg
or
inc
fdivl
push
adc
push
or
adc
xor
filds
mov
dec
pusha
fiadds
sbb
lret
lret
int3
or
inc
inc
cli
rcrb
out
rorl
ret
add
and
adc
mov
mov
lahf
and
xor
es
xor
xchg
xchg
bsr
push
call
sbb
clc
movsl
pushf
loop
mov
sub
sbb
xor
mov
mov
or
enter
or
pushf
lds
in
or
jl
cld
pop
bound
test
push
in
push
xchg
int3
adc
push
mov
inc
push
dec
add
add
data16
and
je
adc
fcomps
pusha
push
mov
push
and
imul
mov
push
push
inc
xor
lock
pushf
rclb
push
add
push
or
adc
or
push
or
and
adc
inc
mov
enter
cmp
adc
push
dec
xchg
nop
sbb
pcmpgtd
in
adc
roll
cmc
or
push
inc
cld
pop
call
add
imul
cmp
orb
sbb
js
xor
sbb
loopne
adc
addr16
call
sbb
js
sbb
or
and
inc
dec
mov
mov
fldcw
enter
pop
inc
xor
repz
inc
and
icebp
push
mov
mov
or
adc
ljmp
ficomps
pop
adc
add
dec
cmp
xchg
adc
sbb
cmp
cmp
fcompl
enter
sbb
mov
jp
add
mov
orl
movsl
cmp
jmp
xorb
test
mov
je
movsl
sub
or
mov
int3
adc
fs
jp
pop
push
adc
and
and
pusha
pop
cmpb
popf
nop
cld
push
sub
pop
inc
add
adc
adc
fisubs
add
or
add
mov
ficoms
xor
xchg
arpl
xor
out
sarb
loopne
xor
sbb
aaa
push
cmp
roll
call
cld
int3
ret
inc
into
stos
add
or
pop
sub
int
rolb
adc
aad
add
pop
dec
add
push
je
loop
sub
mov
sub
lock
aas
or
and
mov
enter
ret
xor
xchg
addb
or
cmp
ret
pop
mov
jbe
aaa
test
mov
inc
in
xor
inc
nop
push
les
cmc
imul
insb
inc
loopne
push
fadds
add
dec
insl
shrl
cmp
loope
inc
mov
add
loop
in
dec
lock
add
dec
push
iret
lock
cwtl
pop
add
cmp
xor
or
jns
lret
scas
sbb
adc
sub
push
and
xor
push
jo
imul
jo
pop
dec
cli
pop
dec
xor
cmpb
pusha
rolb
es
or
add
aam
xor
mov
imul
adc
outsl
dec
mov
popf
lods
add
cmp
dec
mov
cmp
cmp
popa
popa
jns
mov
sbb
ss
arpl
int3
or
test
push
popa
and
pop
cmp
push
aad
jl
push
or
add
bound
outsb
pushf
or
adc
mov
push
or
cmp
sub
xchg
mov
mov
dec
movsl
stos
inc
xchg
lcall
fwait
jns
and
daa
mov
push
mov
push
insb
and
fsubl
enter
loopne
sbb
in
push
call
je
add
push
xor
and
insl
int
imul
lods
imul
clc
out
fisttpl
xchg
and
jbe
nop
fisubs
and
jae
jp
mov
push
xor
jne
dec
je
lods
aaa
adc
push
test
xchg
add
sub
test
add
sti
pop
icebp
adc
add
xor
xor
fdivs
test
xchg
in
mov
clc
int3
cld
xlat
cld
in
call
cld
hlt
cld
cld
or
aaa
cmp
cmp
cmp
sub
xor
push
aas
push
mov
int3
aas
jecxz
add
or
mov
lahf
shrd
ret
iret
rol
adc
xor
pop
ret
jbe
xchg
xchg
repz
repz
repz
repz
repz
loop
cld
lock
sub
xor
inc
in
push
lock
hlt
gs
imul
cld
mov
cld
xchg
cld
lahf
cld
movsl
cld
ret
cld
cld
cld
add
cmp
cmp
cmp
cmp
cmp
pop
aas
xchg
clc
aas
decl
inc
dec
imul
stc
iret
inc
adc
das
mov
ret
iret
rcl
jecxz
repz
lock
and
sub
xor
jae
xchg
repz
repz
repz
call
pop
hlt
xchg
clc
lahf
cld
cld
sar
out
std
cmp
xor
mov
ret
mov
repz
fdivp
jecxz
out
repz
lock
sub
or
rol
push
mov
ror
leave
psrlw
pop
cmp
sbb
aas
jbe
jp
jle
sbbb
lahf
mov
mov
lcall
push
push
jl
add
imul
cmp
loope
aas
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
cmpsl
dec
inc
sahf
out
out
out
out
out
out
out
out
out
out
out
in
dec
rcl
iret
fcmove
fmulp
loop
lahf
ljmp
stc
incb
pusha
xor
add
xor
lret
push
push
rcrb
push
lahf
sbb
push
lahf
and
cs
xor
ds
inc
lahf
inc
lahf
dec
lahf
dec
lahf
push
lahf
push
lahf
pop
lahf
pop
xchg
bound
push
outsb
iret
jb
jbe
jp
jle
or
iret
mov
mov
xchg
iret
xchg
iret
lcall
iret
stos
iret
scas
iret
mov
mov
mov
iret
iret
lret
iret
ror
leave
fisubl
inc
loop
out
ljmp
cli
repz
lock
push
in
call
push
hlt
sbb
push
cld
and
es
sub
cs
xor
ss
cmp
ds
inc
cld
inc
cld
dec
cld
dec
cld
push
cld
push
cld
pop
cld
pop
cld
cld
data16
push
outsb
cld
jb
jbe
jp
jle
cmp
cld
mov
mov
xchg
cld
xchg
cld
lcall
cld
stos
cld
scas
cld
mov
mov
mov
cld
cld
lret
cld
sar
cld
fdivrp
loop
out
ljmp
cld
cli
cld
cld
add
xor
cmp
cmp
cmp
cmp
push
aas
and
es
sub
add
aaa
push
push
scas
ja
xchg
cld
mov
repnz
adc
adc
hlt
dec
sbb
repz
cmp
push
repz
je
js
jl
xor
repz
mov
nop
repz
repz
repz
repz
rep
repz
mov
mov
repz
repnz
stc
aam
fdivr
fdivr
loopne
in
call
stc
hlt
stc
clc
stc
cld
push
or
adc
cmp
and
and
sub
sub
xor
xor
add
push
inc
repz
repz
repz
repz
sti
pop
repz
repz
repnz
stc
js
jl
cmp
stc
mov
mov
nop
stc
xchg
xor
pushf
cld
mov
cld
lret
mov
test
cmp
adcb
jb,pt
je
jbe
xchg
cld
inc
jo
ret
pop
xor
cmp
stc
push
adc
sbb
mov
iret
and
sub
xor
add
out
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
mov
pop
aas
pusha
aas
fs
push
aas
je
js
jl
cmpb
aas
mov
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
aas
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
sub
daa
or
adc
sbb
sbb
cmp
or
push
hlt
dec
pushf
and
sub
xor
cmp
cmp
mov
aas
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
jecxz
repz
sub
sub
xor
xor
fidivrl
inc
stc
inc
stc
dec
stc
dec
stc
push
stc
push
stc
pop
stc
jno
lods
stc
mov
mov
stc
stc
enter
sar
jmp
aaa
dec
cmp
mov
mov
inc
sarl
shll
repz
pop
cmp
jne
sub
push
cmp
and
mov
jb
icebp
in
stc
lock
hlt
stc
clc
stc
cld
inc
fdivrs
add
or
or
adc
adc
sbb
sbb
and
and
sub
pusha
pop
xor
cmp
cmp
push
cld
pop
sbb
nop
mov
pop
adc
lea
xor
mov
and
mov
xchg
ja
xchg
je
test
xor
mov
sarl
popa
pushf
test
mov
enter
xorb
js
jp
jl
jle
jle
sbb
xor
popf
inc
sbb
mov
jg
mov
call
inc
je
jbe
js
sbb
cmp
and
out
sub
dec
leave
fstl
add
adc
mov
rcrl
mov
iret
rorb
aam
fmuls
in
call
iret
hlt
leave
clc
inc
cwtl
cmpl
or
adc
adc
mov
and
in
mov
cld
inc
cld
inc
cld
dec
cld
dec
xchg
mov
push
lahf
pop
lahf
pop
lahf
pusha
lahf
fs
push
lahf
je
js
jl
sbbb
xchg
nop
pop
dec
lahf
cwtl
lahf
pushf
lahf
mov
lahf
lods
lahf
mov
mov
mov
lahf
les
rcrb
fcompl
call
xchg
hlt
ret
add
testl
mov
adc
sbb
sbb
and
and
sub
sub
xor
ret
xor
add
jle
jle
jle
jle
jle
jg
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
in
aas
in
aas
lock
hlt
aas
clc
aas
cld
jo
cmp
or
adc
sbb
and
and
sub
sub
xor
xor
push
aas
insb
aas
jo
je
js
jl
xchg
aas
movsb
aas
test
lods
aas
mov
mov
mov
aas
les
enter
sarb
aam
fdivrs
fsubl
loopne
js
jb,pt
pop
pop
jp
inc
aas
addr16
mov
popa
xor
test
adc
jb
sbb
aaa
pop
popf
insb
pop
xchg
dec
and
movsl
or
and
shl
fadds
jb
sbb
cmp
pop
ds
daa
faddl
insb
hlt
test
test
xor
daa
nop
inc
pushf
addr16
rcll
ljmp
das
xor
xor
adc
shlb
pop
pop
xchg
cmp
cmpsl
cmp
mov
repz
sub
xor
inc
call
xchg
xchg
enter
add
loopne
and
es
inc
inc
shrl
ja
jge
jo
cmp
and
js
jp
leave
sti
lock
roll
in
mov
test
cmp
mov
leave
out
out
out
out
out
out
out
out
out
out
out
out
out
loope
aaa
add
fsts
loope
jmp
and
and
stc
xor
xor
cli
rorl
stc
push
sub
pop
aas
pop
aas
popa
aas
gs
imul
jne
jns
jge
cmpl
lea
xchg
aas
xchg
aas
cltd
aas
popf
aas
mov
aas
lods
aas
mov
mov
mov
lds
rcrl
fstpl
jmp
dec
data16
iret
std
ret
add
add
mov
ret
adc
lock
xchg
cwtl
in
cmp
roll
aas
mov
mov
ret
iret
xlat
out
xlat
iret
fcmovne
jecxz
out
jmp
shl
idiv
sti
cmp
xchg
add
xor
popf
or
cmovg
pop
iret
and
daa
iret
sub
das
iret
xor
aaa
or
psraw
inc
iret
inc
iret
dec
iret
dec
lret
push
and
pop
lock
arpl
outsl
subps
jnp
jg
or
iret
mov
iret
xchg
iret
xchg
iret
fwait
iret
lahf
iret
mov
ret
ljmp
push
xor
mov
cmp
movsb
jl
rcrl
out
shl
jecxz
repz
repz
add
pop
in
call
push
cmpl
iret
xchg
setne
popf
iret
mov
iret
lods
iret
mov
mov
mov
loope
leave
cmp
aas
sarl
aad
fld1
lahf
loope
in
jmp
lahf
cmc
lahf
stc
xchg
std
int3
and
inc
movsb
fdivs
add
in
adc
adc
pop
and
sub
push
and
inc
iret
dec
iret
dec
iret
push
iret
push
iret
pop
iret
pop
iret
popa
ret
mov
xor
in
sub
push
test
mov
daa
adc
and
cmp
lret
incl
out
inc
cmpsl
inc
dec
out
jmp
pop
out
out
out
out
in
roll
jle
xor
imul
sahf
stc
mov
scas
cld
out
cmp
cmc
sub
xchg
ficoms
sbb
and
orb
pusha
pushf
int3
pop
or
adc
pop
into
in
lock
hlt
jne
jp
cli
jle
pop
and
and
mov
lock
or
xor
add
les
negb
or
psubd
iret
iret
out
cli
rcrb
nop
aaa
mov
jg
cmp
cmp
dec
test
and
clc
mov
mov
data16
sti
mov
adcb
xor
leave
les
and
dec
dec
and
pop
mov
xor
nop
nop
inc
inc
sub
add
lock
fdivl
in
dec
es
int3
popf
aaa
test
mov
loopne
inc
imul
add
cmp
shll
fldcw
cmp
pop
inc
sub
sub
xchg
arpl
xchg
repz
cld
sbbb
pusha
ret
ja
shll
push
call
pop
xchg
pusha
dec
pusha
push
iret
je
mov
nop
rcll
stc
mov
repnz
adc
mov
or
decb
testb
xchg
loopne
sbb
shrb
lret
and
xchg
xchg
pushf
ret
add
enter
shl
aam
fdiv
fcoml
adc
mov
sub
dec
sub
cmp
cmp
inc
cld
inc
cld
dec
cld
dec
cld
pusha
pushf
mov
lahf
test
lcall
lret
call
push
lock
fs
push
cld
je
js
jl
cmp
cld
cwtl
cld
mov
cld
mov
cld
sar
aam
fdivr
fdivr
loopne
in
call
aas
or
or
and
and
and
xor
cmp
inc
lahf
dec
lahf
dec
lahf
push
lahf
push
lahf
pop
lahf
pusha
lahf
fs
push
lahf
cwtl
lahf
pushf
lahf
mov
lahf
lods
lahf
mov
mov
mov
lahf
enter
rcrb
adc
mov
popf
or
adc
sbb
sbb
and
add
sti
repz
repz
repz
repz
repz
sti
fs
repz
js
jl
insb
jle
jle
pop
nop
jle
movsb
pslld
ror
iret
enter
shl
clc
fdivs
in
call
pop
or
or
adc
mov
jmp
sub
xor
cmp
inc
iret
inc
iret
pop
iret
pop
iret
push
iret
je
js
jl
or
iret
mov
mov
nop
iret
cwtl
iret
pushf
iret
mov
iret
ror
iret
enter
shlb
fdivr
fdivr
loopne
in
call
stc
clc
clc
or
jb
je
jbe
js
jp
jl
jle
jle
pop
xor
aas
cmp
inc
aas
dec
aas
dec
aas
push
aas
pusha
aas
fs
jo
je
js
jb
mov
jle
jle
mov
mov
jle
jle
jle
jle
jle
jle
dec
in
or
iret
lock
clc
iret
cld
ret
adc
adc
and
sub
xor
xor
cmp
cmp
inc
repz
repz
repz
repz
repz
bnd
insb
inc
cwtl
in
loopne
test
lods
mov
dec
outsb
dec
iret
hlt
lret
clc
push
aaa
pop
add
pop
and
aad
int
js
mov
mov
sub
and
js
xchg
cmp
cld
mov
mov
nop
cld
xchg
cld
cwtl
cld
pushf
cld
mov
mov
push
mov
ret
jo
jle
jle
jle
jle
jle
jle
pop
hlt
sbb
xchg
or
sub
inc
jecxz
repz
inc
repz
repz
repz
repz
js
jl
sbb
jle
jle
jle
pop
xchg
punpcklbw
aaa
jb
pushl
lock
hlt
daa
mov
enter
mov
mov
sarb
jb
je
jbe
js
jp
mov
cmp
test
cmp
aas
js
mov
imul
xor
xor
adc
in
jbe
pop
xor
repnz
in
pop
xor
fmull
mov
pop
nop
into
rorb
gs
mov
mov
mov
sbb
mov
jl
subb
jmp
outsb
aam
call
mov
pusha
xorl
push
inc
aas
inc
sub
jmp
push
rcll
pop
fs
xchg
test
imul
pop
xchg
jle
dec
repz
imul
imul
in
cld
repz
push
cmp
adc
push
cmp
outsw
xchg
cmpsb
mov
movsl
lahf
scas
lahf
mov
mov
lcall
mov
push
ds
and
jb
xor
jle
jle
sbb
sbbb
ret
sub
jecxz
repz
loopne
jno
sub
rorb
into
aas
cmp
inc
das
inc
xchg
dec
jmp
sub
sub
lods
fsubr
sub
mov
dec
fcmove
rol
js
je
mov
sub
mov
mov
lods
repnz
adc
xchg
in
call
repz
repz
repnz
ficomps
adc
push
insb
push
sub
cmp
movb
dec
leave
push
push
mov
jle
jle
pop
insb
pinsrw
jle
jle
pop
movsb
lods
iret
mov
mov
mov
cmpsl
mov
out
in
fnstsw
mov
ret
inc
xor
popf
add
dec
out
xchg
mov
mov
mov
mov
or
les
fimull
cmp
in
xchg
in
push
inc
pop
push
enter
movsl
idivb
jle
jle
dec
cld
push
decb
dec
xor
sub
sub
out
add
add
ret
push
daa
mov
dec
adc
jne
ds
lret
lahf
in
pop
incl
inc
loopne
imul
hlt
or
cmp
cmp
lahf
mov
lret
lahf
fiadds
xlat
inc
sbb
xor
lock
pop
xchg
insl
test
into
jo
js
ss
and
xchg
popf
test
psubd
dec
fildl
and
push
movsb
jae
mov
add
xor
pop
leave
adc
fs
mov
add
fsts
jae
mov
jb
je
push
cltd
les
fdivs
cmpb
mov
dec
xor
pop
iret
pop
or
fs
jne
push
ljmp
and
jl
hlt
pop
rsqrtps
dec
mov
sub
pop
out
loopne
cmp
cmp
jnp
jg
orl
mov
fs
jle
sbb
ds
adc
adc
sbb
call
and
jmp
fs
mov
jp
popf
cmc
incb
add
push
daa
or
adc
sbb
push
out
out
out
out
out
out
in
cld
cwtl
dec
jge
jo
jl
cmp
cld
mov
xchg
adc
shrb
mov
lret
cmp
loope
pop
cmp
fldcw
cmp
cmp
pop
lcall
mov
cmc
mov
iret
mov
movsb
cmp
repnz
adc
xchg
roll
sub
dec
icebp
pop
cmp
cmp
aas
clc
aas
cld
jo
mov
aas
cmp
inc
lahf
xor
test
xchg
repz
repnz
jns
pop
test
lods
fidivrs
fbld
pop
xor
pop
mov
dec
sbb
xor
nop
xchg
mov
cs
jbe
je
dec
out
mov
jecxz
jp
jb
je
jbe
mov
sbb
cmp
decb
add
dec
or
push
dec
sbb
lock
add
stos
jbe
pop
pop
ds
aas
inc
daa
jno
lods
movsb
cwtl
mov
aam
test
jb
push
mov
push
aaa
lds
flds
cmp
xchg
mov
sbb
out
nop
or
call
cmp
cmp
loopne
enter
dec
add
xor
mov
cmp
pop
in
push
loopne
inc
rclb
aad
outsl
xor
sub
xor
or
push
inc
jo
shrb
jb
je
pop
jnp
ss
loop
pop
or
cld
out
out
in
mov
jmp
test
sub
sub
mov
push
aas
xchg
dec
mov
popf
pop
pop
test
mov
or
repnz
lock
pop
xor
mov
sbbb
jmp
lcall
int
mov
inc
xchg
fdivrs
cmp
daa
bound
inc
sbb
and
and
push
and
repnz
icebp
mov
iret
int3
ror
es
loopne
in
js
lods
hlt
push
xor
mov
ds
lahf
mov
ljmp
aas
loopne
in
repnz
leave
or
mov
push
sub
cmp
pushf
dec
notl
push
cmc
out
das
fdivl
push
in
sub
pushf
hlt
les
xor
lret
jns
cmp
das
cmp
and
stc
dec
stc
push
stc
push
js
out
popf
inc
movsb
and
mov
aaa
xchg
pop
mov
cmp
jb
fmuls
jo
dec
jl
imul
stc
inc
nop
adc
pop
shll
fldcw
cmpsl
mov
out
stc
push
push
inc
jno
fs
xchg
ljmp
je
movsl
xchg
test
fidivs
mov
jb
or
dec
dec
movsl
dec
pop
add
dec
jb
daa
test
movsl
add
pop
jo
pop
imul
lret
mov
or
jb,pt
aas
jb
je
pop
imul
and
out
xchg
sbb
xor
xchg
xor
test
mov
fiaddl
xchg
nop
push
dec
rcll
dec
push
cli
test
dec
inc
rcl
xlat
fnstenv
sub
out
int
xor
mov
lea
cmp
sub
je
insb
test
adc
les
pop
and
test
and
dec
add
int3
adc
enter
xchg
xor
pop
lret
dec
mov
rclb
inc
test
mov
rcrl
aaa
inc
lret
aam
int3
or
and
pusha
push
inc
cmp
cs
cmpsl
out
stos
cmp
aas
push
or
xor
ljmp
test
push
jl
inc
adcb
cmp
cmp
push
mov
sbbb
jp
push
mov
stc
sub
xor
xor
leave
es
pop
cmp
cmp
scas
cmp
sbb
and
nop
add
pop
add
mov
cwtl
sbb
xor
popf
fistpl
push
push
dec
push
pushw
popl
or
aaa
xchg
adc
mov
cmp
in
call
test
push
shll
push
jo
cmp
push
aam
push
jbe
pop
or
loope
jmp
repz
adcb
aaa
cmpsl
jl
test
xchg
pushf
sti
repnz
dec
jnp
mov
xor
clc
popf
and
imul
leave
icebp
loop
sbb
jb
add
aam
and
and
add
add
xor
addb
sub
movsb
scas
out
out
hlt
and
xor
je
pop
push
dec
scas
mov
jo
dec
pop
cmp
cwtl
popf
ficompl
sub
sub
lahf
xchg
gs
loopne
add
sub
inc
mov
pop
mov
mov
les
enter
mov
stc
fcompl
cmp
cmp
sahf
mov
sub
cmpsb
sub
fwait
and
insl
adc
adc
dec
insl
mov
mov
out
shll
out
shr
push
mov
imul
sub
arpl
mull
pop
cmp
and
and
xorl
push
jb
pop
mov
idiv
mov
or
clc
mov
cli
cld
mov
mov
add
lcall
rcrb
cmp
je
jbe
dec
push
enter
jno
fcmove
stc
xlat
stc
popa
cmp
push
cmpb
mov
pusha
add
sbb
cmp
push
dec
pop
addl
loopne
xor
pop
ss
inc
mov
xor
or
bswap
iret
dec
or
je,pt
jbe
js
push
mov
add
ss
mov
pop
sarl
stc
lret
stc
or
or
inc
push
cld
push
jg
ret
aas
shll
stc
add
js
inc
lcall
bound
lcall
dec
and
or
adc
out
xchg
sarb
pop
repz
jo
je
pop
mov
xchg
or
sub
mov
xor
daa
jle
addb
pop
enter
dec
cmp
and
add
cmp
and
add
jb
sbb
xor
cmp
sarb
loope
out
or
or
daa
fiaddl
dec
xchg
fdivrl
test
test
lds
inc
in
cmp
xor
pop
mov
mov
cwtl
inc
inc
or
bound
movsb
int
jb
xor
cmp
insl
sub
rcl
fyl2x
loope
call
sbb
mov
je
pop
or
or
nop
ds
fadds
add
push
outsl
xchg
inc
in
shrl
cmp
scas
mov
daa
mov
out
notl
pop
inc
addr16
jnp
test
out
out
in
lock
add
fidivl
adc
mov
in
sahf
add
xchg
push
ret
clc
mov
hlt
out
aad
fcomip
fidivrs
jle
adc
adc
das
iret
cmp
dec
dec
push
pop
leave
jbe
cld
dec
mov
negb
xchg
mov
shrl
or
cli
push
xor
ret
enter
jb
pop
jbe
daa
mov
fmulp
out
out
in
rcrb
fiaddl
push
cmp
cmp
jo
xor
adc
mov
inc
adc
sbbb
jb
loop
lcall
ret
das
adc
add
cmp
xchg
mov
mov
das
aas
pop
pop
les
fs
pop
clc
outsl
lahf
pop
repnz
out
fs
test
dec
or
je
dec
inc
in
cmp
sub
xor
dec
lret
out
jo
jb
je
jbe
dec
fisubl
popf
test
in
add
mulb
sbb
cmp
subb
push
or
add
sub
push
scas
sub
xchg
mov
test
xor
fnstenv
notb
push
adc
mov
push
ret
subb
dec
hlt
xchg
lret
mov
nop
jle
jle
dec
sti
push
das
adc
shlb
mov
adc
cmpsl
loop
mov
and
inc
inc
mov
ret
sub
in
xchg
rol
loope
sub
xor
lcall
loopne
cwtl
lcall
jle
jle
jle
pop
shrl
adc
mov
push
pop
sbb
lea
testl
inc
dec
mov
loopne
pop
aam
testb
cmp
and
xchg
pop
adc
push
fdivr
loope
sysenter
hlt
leave
add
dec
sarl
sub
outsl
jne,pt
mov
jo
mov
movsb
mov
sub
nop
sbb
and
lahf
xchg
lods
aas
leave
daa
iret
pop
ss
ljmp
or
xor
pop
sub
es
pushf
sub
dec
insl
in
mov
or
xor
jb
lahf
add
sbb
push
sbb
push
push
outsb
and
mov
cmp
xchg
sbbb
xchg
cmp
cli
cmpsb
lret
mov
test
jo
xor
mov
sbb
insl
lock
xchg
call
mov
and
jnp
lods
add
cmp
dec
cmp
je
daa
addb
cwtl
sbb
pop
add
xor
xor
cmp
es
dec
js
in
mov
dec
testl
fs
fwait
in
call
imul
test
lock
push
or
xchg
pop
jbe
movsb
mov
movsl
mov
mov
jno
stos
xchg
sbb
movsb
xor
dec
pusha
jle
adc
in
cmp
mov
jb
shl
les
pop
xchg
aam
mov
mov
popf
adc
cmp
enter
daa
pop
das
push
cmp
cmp
push
in
and
cmp
dec
mov
repnz
pop
outsb
inc
inc
mov
lahf
xor
pop
outsb
and
mov
inc
lods
and
add
mov
cmp
hlt
pop
into
xor
cld
les
scas
sub
int
mov
fmuls
dec
push
sub
pop
jo
lcall
out
imul
mov
dec
dec
ds
lock
mov
dec
cmpsb
mov
or
adc
dec
icebp
inc
in
loop
pop
xor
movsb
aas
lods
and
fdivrs
mov
adc
call
cld
dec
jae
xchg
mov
or
clc
sub
or
adc
lea
xchg
pop
jae
shl
push
inc
loopne
iret
xchg
dec
jb
push
pop
and
out
xchg
mov
fcoms
pop
cld
or
cmp
xchg
adc
push
push
lahf
popa
pop
xchg
into
iret
in
jmp
aam
cmp
inc
lret
and
nopl
out
clc
aas
stc
or
sub
xchg
popf
les
pop
inc
pop
cmc
pushf
test
add
mov
xor
je
call
add
cmp
hlt
fistl
or
ret
xlat
inc
jle
cmp
jns
add
aas
push
mov
push
push
dec
adc
ret
js
and
test
dec
and
mov
mov
sbbl
ret
loopne
add
sbb
push
movsb
fwait
and
or
pop
aaa
push
cmp
das
push
inc
pop
cmpsl
test
rorb
sbb
sub
lock
mov
cmp
sub
bound
adc
xchg
pop
add
mov
ss
or
xchg
dec
sbb
xchg
sarb
jnp
mov
ja
addb
push
ret
sbbl
sbb
out
test
imul
outsb
orl
mov
push
xchg
addb
jmp
cmc
rorl
jno
sub
push
daa
iret
xor
inc
dec
push
pop
leave
imul
repnz
xor
lret
outsb
je
add
add
insl
adcl
sti
lock
sub
mov
je
pop
scas
and
jecxz
add
mov
cs
sahf
es
call
cmp
loope
cmp
dec
shll
mov
mov
xchg
lds
fbld
adc
mov
dec
pusha
rorb
pop
xor
xor
and
jle
andb
xor
xor
ret
shrl
jmp
xchg
aas
fisubrs
mov
lcall
bnd
push
cli
ret
ds
and
rclb
rolb
scas
aam
pop
sahf
pop
mov
inc
inc
push
push
sub
cmp
cmp
jg
xchg
leave
jecxz
mov
push
xor
push
lods
and
cmp
jo
mov
mov
lahf
mov
aas
sbb
mov
pusha
pop
jp
and
or
loopne
xor
mov
jno
ja
mov
roll
lock
cmp
repnz
sub
sub
and
dec
xchg
roll
pop
inc
andb
pop
lcall
xchg
push
add
pop
mov
push
nop
out
mov
adc
das
loope
mov
cmp
cmp
inc
mov
mov
ss
xlat
push
sbb
lret
sbb
dec
outsb
mov
mov
ret
ljmp
jle
call
cmp
daa
cmp
sti
movsb
push
pop
lahf
mov
in
leave
mov
and
cmp
daa
addr16
push
add
cmp
mov
out
or
shlb
push
xor
ret
dec
divl
xchg
loope
mov
pop
cmp
xor
inc
cld
fsubs
cmpsb
xchg
inc
cmpl
rol
jmp
jo
adc
xor
xchg
js
jno
jle
cmp
dec
cmp
inc
xor
xor
nop
dec
into
jmp
cmp
mov
or
shlb
xchg
cli
cmpsl
inc
add
adc
push
sar
cmp
popf
test
adc
sbb
icebp
mov
mov
lcall
mov
loopne
xchg
movsb
je
pop
xor
and
dec
stos
hlt
ret
clc
outsl
push
xor
sarl
push
fistl
fcomip
aam
cld
jmp
out
cld
repz
inc
jmp
add
leave
or
pminub
mov
mov
loopne
dec
add
sbb
in
xlat
nop
out
xor
pop
daa
mov
sarb
or
ds
lret
mov
add
xor
leave
cmpsb
rolb
cld
dec
dec
adcb
fdivrl
xchg
andb
nop
dec
xchg
repnz
aas
mov
das
lods
in
mov
idivb
xor
adc
sub
das
sbbb
pusha
xchg
ret
adc
sub
test
sbb
mov
pop
repnz
sub
clc
je
or
cmp
dec
jmp
lret
sbb
and
hlt
clc
sub
pop
loope
pop
subb
pop
out
std
pop
xchg
adc
mov
dec
push
cmp
or
cld
jnp
xchg
xchg
lcall
sbb
jle
loope
jno
inc
das
mov
pushw
sub
pop
popl
xor
cmp
in
push
or
xor
pop
xchg
xchg
imul
lahf
xchg
lahf
mov
mov
fisubs
test
jbe
adc
sbb
pop
insl
xorb
jle
jle
pop
loop
cs
or
pop
xor
js
dec
leave
push
and
jle
iret
xchg
lret
sahf
movsb
subb
lret
fsubrs
rcll
stc
repnz
add
aas
adc
int3
adc
lock
cmc
lahf
add
dec
mov
pop
lahf
loope
jne
xchg
xchg
fwait
setle
js
add
sbb
xchg
xchg
dec
inc
mov
sbb
cmp
je
dec
add
mov
pushf
jp
push
xchg
aaa
incb
push
cmp
lods
cwtl
xor
add
xchg
add
outsb
xor
dec
dec
stos
sbb
popf
lret
pop
iret
push
xchg
or
jle
sbb
aaa
es
cmp
ja
inc
cmp
incb
and
cltd
cmp
inc
stos
add
mov
add
mov
iret
je
mov
lods
jnp
push
sarl
mov
mov
nop
mov
pop
cwtl
xchg
pushf
in
testb
les
or
mov
mov
add
js
movsb
mov
int3
sub
inc
inc
inc
ret
sbb
lea
fs
pop
je
xchg
stc
jbe
and
out
jle
pop
mov
andb
pop
or
sar
mov
inc
xchg
int3
mov
jle
dec
pop
loop
aas
push
icebp
pushf
das
mov
pushf
dec
mov
mov
push
xor
pop
cs
xor
or
imul
notb
jo
je
ret
pop
adc
mov
mov
fidivrs
shlb
das
or
lcall
mov
pop
mov
fidivrs
jo
je
xchg
and
push
sbb
adc
sbb
sbb
or
and
xor
xor
dec
mov
sbb
rcrb
inc
mov
aas
lods
daa
mov
push
mov
mov
dec
mov
push
mov
fs
jle
jle
jle
pop
insb
mov
roll
mov
dec
mov
mov
mov
jg
pop
into
sbb
test
ljmp
inc
mov
pop
cmp
fimull
out
mov
je
xlat
pop
lds
mov
pop
out
inc
and
out
ror
std
lret
mov
add
pop
inc
enter
pop
fisubrl
jecxz
scas
js
xchg
cmp
ret
mov
scas
push
rorb
sub
mov
xor
lods
inc
hlt
int
sbb
or
jle
inc
mov
popf
xorb
cmp
cmp
push
or
pop
xchg
test
pushf
push
fnsave
inc
and
bndldx
outsl
or
or
mov
test
adc
mov
xchg
dec
cmp
outsl
repnz
sub
xchg
inc
sarb
or
sbb
mov
push
mov
jge
mov
test
orl
fidivrs
lea
ret
cmp
jge
icebp
jg
mov
pushf
sbb
mov
in
leave
add
js
mov
push
test
mov
xor
in
loope
call
into
xorl
mov
cmpsb
jge
lock
cmp
and
or
mov
lock
xchg
mov
popf
jb
test
loopne
mov
cwtl
pop
add
xchg
or
pusha
sbb
xchg
pmaxub
push
data16
jle
cmp
outsb
jno
movsl
loop
cmp
push
push
jb
and
clc
arpl
addr16
sub
sub
xchg
xchg
loope
dec
das
ret
cli
mov
mov
inc
sbb
inc
in
cmp
sub
adc
ror
cmp
sub
and
mov
xor
dec
cmp
push
cmp
in
push
ljmp
jnp
jg
and
mov
xchg
aas
xchg
aas
fwait
and
push
xchg
cmpsl
mov
mov
mov
lcall
dec
lret
add
inc
incl
ljmp
lcall
push
cmp
push
in
loopne
les
scas
lock
loope
aas
cmp
cmp
shrl
int3
xor
idivb
pop
mov
push
cmc
call
xchg
stos
dec
cmp
pop
shlb
aaa
cmp
in
mov
mov
mov
add
cmp
mov
cli
mov
cltd
aam
lock
mov
sub
out
or
xor
mov
aaa
jb
mov
push
xchg
enter
adc
xor
dec
jae
push
daa
xor
mov
dec
mov
lahf
inc
mov
aaa
or
sbb
ss
ss
fs
bound
pop
and
xchg
fadds
jb,pt
je
jbe
push
sub
push
sbb
dec
dec
jg
mov
push
mov
mov
pop
popf
sbb
stos
sbb
push
ret
leave
push
xlat
loopne
cmp
sbb
loop
out
bound
adc
aaa
dec
pop
movsl
cld
rcll
cmp
xchg
sub
cmp
in
test
insb
pushf
pop
loopne
and
loop
sub
push
daa
test
test
mov
mov
inc
jns
inc
cmp
xchg
dec
cmpsl
or
shl
or
cmp
cmp
cmp
cmp
cli
lods
stc
out
enter
adc
std
pop
mov
jne
pslld
das
insb
adc
cmp
addb
cld
loope
xor
subb
push
sbb
push
cs
movsl
cmpsb
scas
movaps
lret
fcomip
stos
jb
je
jbe
js
pop
and
in
icebp
xchg
daa
bound
scas
push
cmp
mov
push
jl
push
lret
hlt
cld
sub
aaa
mov
adc
and
mov
adc
push
ret
jne
mov
jp
mov
push
and
add
bound
inc
cmpsl
cld
mov
shl
jecxz
sahf
sub
pop
push
dec
hlt
jle
adc
jbe
aas
fimuls
mov
push
setl
mov
hlt
fadds
ret
lock
dec
add
nop
es
adc
mov
fs
ret
adc
aaa
adc
or
jb
loope
xor
or
js
jp
jl
jle
dec
pop
push
xor
mov
adc
cld
aas
mov
lcall
aaa
popa
pop
rolb
clc
into
pop
inc
adcb
xchg
mov
dec
vphadduwd
pushf
xchg
inc
test
das
sahf
pop
sub
gs
add
mov
add
cmc
insb
mov
cmp
pop
mov
jnp
lahf
in
clc
sub
les
pop
pop
ret
enter
jae
sbb
cmp
xchg
orb
mov
enter
arpl
je
clc
movsb
or
cmp
push
mov
test
cmp
inc
dec
shlb
mov
scas
cld
mov
mov
dec
loope
jno
push
adc
or
shrb
cld
and
cwtl
cld
movzwl
inc
jg
dec
xchg
ret
rcl
or
repnz
and
push
cmp
movsl
lods
into
mov
inc
jmp
sub
outsl
or
cld
inc
jo
js
das
das
pop
ss
movsl
arpl
and
lahf
mov
inc
call
ja
jle
xchg
lahf
mov
xchg
mov
aad
fdivrp
ljmp
pop
sub
mov
aas
mov
pusha
cmp
das
popf
sarl
cmp
daa
or
lds
push
lock
xchg
mulb
and
inc
inc
dec
xor
pushf
mov
lods
cld
inc
aas
ret
daa
or
imul
rolb
inc
xor
popf
fists
call
lahf
mov
add
in
mov
out
and
jecxz
xchg
pop
fsub
js
jns
jnp
dec
cmc
test
sub
cmp
leave
pop
shrl
xchg
je
call
popf
jle
mov
push
ljmp
sub
push
sahf
xchg
scas
call
sbb
mov
cmc
ret
pop
fs
andb
add
decb
jl
dec
cmpsb
push
mov
and
push
sub
xchg
mov
mov
data16
mov
punpckhdq
iret
inc
add
dec
inc
mov
push
xchg
out
lds
jg
stos
xchg
in
test
mov
xor
xor
mov
or
cmp
ds
lods
mov
pop
test
jg
sbbb
pop
sbb
mov
cwtl
js
cwtl
sub
andb
and
and
push
cmp
add
cmp
cmp
call
loope
xor
xor
pop
push
mov
pop
je
dec
mov
lret
flds
mov
mov
jb
test
sub
popa
cli
cmp
ret
nop
dec
or
std
js
jb
dec
jmp
dec
pcmpeqd
imul
je
push
hlt
je
add
cmp
stos
push
divb
leave
pushf
and
cmp
add
mov
jl
cmp
push
lock
in
xchg
pop
adc
test
lock
xchg
pop
mov
idivb
jb
dec
cltd
mov
sbb
mov
jecxz
push
mov
lret
cmp
sub
stc
add
daa
adc
pop
daa
or
ds
sub
sbbl
mov
subl
int
data16
jle
out
out
dec
orl
sbb
pushf
adc
adc
les
js
or
or
jge
movsb
pop
rol
jl
lock
aaa
mov
ds
add
cmp
scas
lret
ret
icebp
push
push
mov
call
sub
adc
call
add
cmpsb
mov
fs
fsubs
test
mov
xchg
cmpsb
in
mov
mov
pop
pop
mov
adc
xchg
mov
ja
jecxz,pt
push
sar
add
xor
push
and
fwait
push
and
lods
dec
mov
cmc
cmp
cmp
outsb
pop
cmp
daa
cmp
test
clc
and
cmpsb
jge
ljmp
lea
stc
jmp
and
loopne
jl
xchg
test
and
mov
sub
and
stc
push
stc
push
stc
pop
stc
arpl
or
jp
fs
xchg
cld
lcall
in
out
or
aad
data16
jmp
cld
jbe
js
dec
mov
or
sub
fidivrs
pop
inc
aad
shll
mov
push
imull
push
pop
adc
in
inc
xchg
inc
cwtl
cltd
insb
mov
or
data16
addb
and
push
push
arpl
xchg
and
aas
sbb
pop
shrl
roll
and
pop
cmpsl
xchg
fcoms
pushf
lods
loope
push
sub
lods
stc
cmp
cmp
add
sub
pop
adc
lcall
xor
jp
lods
addb
cmp
push
shlb
leave
push
sbb
pushf
cmp
cmpb
cmp
dec
es
xor
pop
ret
mov
clc
int3
nop
shll
iret
add
inc
iret
gs
mov
adc
ret
push
addb
and
mov
sbb
dec
mov
test
sub
mov
sahf
dec
push
in
xchg
push
daa
incb
xor
pop
ret
pop
scas
sub
push
das
xchg
imul
popf
leave
add
push
dec
push
cmp
cmc
loop
fs
jl
adc
mov
pop
xchg
mov
mov
pop
inc
pop
js
mov
aaa
das
decb
lcall
lods
dec
and
inc
mov
les
dec
mov
dec
clc
sbb
cmpb
jl
push
loop
jno
xor
jmp
cmp
dec
pop
sub
pop
pop
and
scas
xor
add
xchg
cmp
cmp
and
call
jo
jns
push
push
or
pop
jbe
add
and
and
sub
aas
jmp
cmp
test
or
xorl
ljmp
add
outsl
jae
into
jno
xchg
cmp
or
xor
shrl
mov
shl
clc
leave
cld
int
pop
pop
aad
lcall
pusha
pop
icebp
lahf
cmc
lahf
stc
lahf
std
xchg
xor
daa
xor
repz
mov
arpl
lret
xchg
sbb
fs
mov
sub
sahf
xchg
dec
test
daa
push
lock
pop
gs
cld
sbb
push
and
adc
jb
in
mov
and
jbe
js
mov
out
out
jmp
paddusb
iret
jmp
out
pop
pop
notl
add
pop
loope
psubusw
cmp
and
and
dec
sub
and
aaa
sub
sbb
xor
loope
xchg
cmp
cmpsl
mov
pushf
lock
call
mov
sub
add
pop
jb
mov
pop
adc
xor
push
jg
sbbb
adc
mov
and
xor
je
bound
out
pop
push
or
aam
push
out
pushf
inc
sbb
xchg
ja
stos
int3
hlt
adc
xor
test
hlt
or
xor
popa
sub
ds
inc
and
jae
jbe
pop
adc
enter
xchg
mov
mov
test
or
push
sahf
mov
pop
cld
in
jne
js
bound
sbb
cmp
xchg
sbb
xchg
lcall
mov
cmpsb
push
jmp
sub
dec
lahf
mov
pop
dec
loopne
pop
pop
repnz
xchg
cmp
and
add
xchg
mov
lcall
loop
aam
push
sub
adc
loop
mov
test
es
test
add
jbe
or
pop
pop
xchg
adc
cmp
lahf
test
stos
enter
add
lods
cld
or
rol
cli
hlt
stc
or
or
and
inc
ds
push
cmpb
rorb
sub
xchg
inc
loope
inc
popf
or
mov
sub
pop
cmp
mov
mov
or
inc
jbe
lds
and
int3
test
mov
sbb
fdivl
ljmp
jb
lea
outsb
imul
sub
outsb
sub
imul
sub
imul
sub
imul
mov
xchg
mov
mov
mov
mov
mov
pop
imul
sbb
test
mov
divb
fidivs
shlb
pop
mov
jae
mov
mov
mov
lcall
aam
daa
or
or
mov
inc
cmp
push
js
bound
sub
inc
dec
cmp
sub
push
inc
push
ds
cmp
sub
push
sub
push
test
and
jmp
cmpsl
enter
cld
mov
test
dec
enter
sbb
inc
jo
xor
jle
lahf
mov
shl
das
in
or
dec
xor
and
mov
mov
int3
jle
clc
cli
xlat
jecxz
das
test
push
sbb
loope
add
add
