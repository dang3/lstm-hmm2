jge
enter
add
add
or
add
or
add
fnstsw
out
push
nop
jbe
add
incl
jg
rcrb
push
pop
add
pushl
mov
addb
add
cmp
cwtl
adc
add
add
inc
xchg
das
les
add
or
es
or
add
or
cmp
jg
pusha
add
inc
fisubl
test
mov
fwait
out
mov
sub
outsb
imul
pop
sbb
push
sbb
lret
adc
pusha
pushl
inc
pop
add
mov
push
nop
insl
mov
add
int3
addl
jmp
clc
jmp
adc
int3
int3
xorb
repz
icebp
testl
or
add
lret
push
add
push
clc
roll
cmp
ja
mov
and
cvttps2pi
cmp
cmp
and
sbb
cmp
cmp
adc
or
sbb
cmp
add
add
popf
clc
das
inc
hlt
jb
jb
in
call
jb
aam
iret
leave
in
in
int3
enter
xchg
fcmovne
leave
sarb
mov
aas
mov
punpcklbw
in
cmp
shrd
mov
mov
ss
inc
add
add
mov
and
jbe
push
sbb
ss
pop
ret
push
cwtl
sete
leave
leave
leave
leave
nop
mov
leave
cmpb
inc
call
cmp
push
imul
insb
push
add
enter
add
mov
std
in
add
mov
add
lea
push
mov
mov
idivl
cli
fs
push
mov
mov
push
nop
mov
mov
ret
scas
sub
jnp
repnz
xchg
jo
rclb
push
add
pop
or
mov
adc
add
aaa
push
mov
push
or
and
sub
jmp
ret
mov
push
mov
mov
ret
cmp
rcrl
mov
add
push
xlat
icebp
or
ret
ret
fistpl
push
insb
fistpl
inc
add
adc
or
mov
jmp
loopne
mov
cmp
jo
fwait
pop
pop
pop
push
fbstp
pop
sti
mov
xchg
cmp
jb
mov
add
call
lods
loopne
int
bound
jne
mov
or
mov
cmpl
dec
ret
jmp
pop
mov
add
pop
add
sub
sub
jbe
ret
stos
fiadds
push
sub
mov
lock
lods
loope
pop
aam
or
or
jmp
sbb
pusha
xor
sti
jne
sbb
nop
es
mov
cmp
cmp
add
mov
repz
add
and
jg
clc
mov
test
je
mov
mov
roll
mov
push
and
cmp
add
push
mov
data16
dec
dec
fisubrl
test
fsts
jne
icebp
mov
push
sbb
pushf
cmpl
in
loope
or
mov
in
mov
roll
or
lret
and
call
sub
sbb
jae
out
ja
mov
add
imul
cmp
ja
cmp
jp
sub
push
or
sbb
jmp
sar
or
add
fucomip
addr16
sti
mov
cmpsl
mov
ljmp
in
or
sbb
adc
shr
sbb
pop
push
adc
scas
or
lcall
jnp
sub
sbb
loop
mov
in
divl
sub
mov
jmp
pop
cmp
add
and
mov
cmp
lods
cmp
testb
ss
jbe
scas
adc
jo
jl
push
push
addl
jmp
ss
mov
and
push
jb
cmp
mov
inc
xor
jmp
push
movsb
cmp
out
sub
or
sbb
jae
mov
cmp
inc
shr
sbb
add
add
jo
and
dec
test
ja
pop
cld
sti
mov
mov
aas
or
add
repnz
sahf
push
pop
jbe
xor
idivb
inc
xlat
mov
lahf
cmc
movsb
pop
test
je
mov
inc
pop
std
xor
ds
push
sub
adc
mov
jne
pop
cmp
lods
mov
and
push
inc
lock
dec
pop
setnp
mov
cli
out
push
or
add
je
cmp
pop
je
test
cmc
or
jle
lds
push
pop
repz
add
xor
fstpl
or
nop
or
mov
mov
xchg
push
xor
or
lea
jne
ja
or
cmc
jne
xchg
out
mov
movsb
lds
pop
mov
cmpsb
sub
inc
popf
adc
ss
pop
xchg
lea
loope
incl
mov
jl
jecxz
add
adcb
ss
cmp
jae
mov
out
rorl
fildl
lods
mov
push
test
je
imul
sbb
addr16
add
pusha
and
adc
jmp
jecxz
or
vmread
sbb
push
inc
add
in
ss
loop
mov
pushl
mov
or
int3
jno
cmpb
and
pop
rol
adc
jo
test
push
sub
cmp
add
sbb
leave
call
xor
cmp
or
inc
mov
popa
sbb
aad
add
sub
jo
pop
pop
push
adc
jg
pusha
ret
mov
mov
dec
jo
out
dec
push
xchg
test
shlb
adc
mov
and
cmp
arpl
add
out
ja
ret
add
imul
inc
outsl
push
jae
bound
jmp
mov
mov
add
push
cmp
scas
loopne
add
adc
stc
lock
ss
jg
adc
test
jns
add
sar
inc
fisubrl
jo
cwtl
mov
jmp
sub
mov
mov
mov
mov
or
mov
add
jb
add
or
mov
cmp
xor
cltd
or
sbb
add
cld
mov
cmp
jl
movl
int
es
or
or
mov
and
cmp
mov
rolb
cld
rclb
std
idiv
cmp
push
js
insb
or
push
or
xchg
jl
cmp
fs
or
xchg
mov
lock
decb
xor
sahf
sbb
sbb
or
ficompl
cltd
cmpsb
sub
inc
aas
das
jo
or
testb
je
mov
sub
cmpsb
mov
or
push
testb
fisubrs
mov
xor
add
in
fisttpll
and
fsubs
test
jne
mov
bound
inc
or
andl
mov
pop
xchg
std
mov
add
add
jo
jp
and
xchg
fcmovnb
pop
or
push
lea
sub
cld
jg
clc
sub
jne
outsl
jp
sub
cmp
jge
mov
out
fsub
or
adc
xlat
cld
lea
mov
inc
add
mov
in
mov
aad
lds
stos
clc
add
adc
fisubrl
mov
jp
or
and
mov
xchg
iret
aad
fiadds
jae
add
sub
movl
rol
inc
mov
enter
adc
insl
jle
mov
cmp
jmp
hlt
inc
ss
lds
adc
add
sub
cmp
or
mov
pop
cmp
jg
or
or
insl
sbb
iret
adc
fnstcw
adc
or
pop
jmp
lock
enter
mov
and
and
jo
ret
lea
movsl
movsl
mov
jno
shrb
nop
or
or
pop
push
mov
cmp
pusha
xchg
mov
lahf
dec
icebp
sub
add
adc
repz
inc
pop
add
sub
and
sub
xorl
paddsb
std
out
subl
add
mov
mov
cld
adc
pushf
dec
adc
xchg
or
xor
paddusb
pusha
pop
pop
dec
fsubrs
int3
rol
push
outsl
test
dec
mov
sub
sar
cmp
stos
jg
adc
jne
mov
push
xor
ljmp
xor
mov
lods
shr
jle
jle
adc
lods
jg,pn
pop
mov
pop
je
mov
jmp
sub
int3
shrl
push
cmpsb
insl
sti
adc
cmp
movsb
sub
cmpl
sbb
add
pusha
adc
inc
out
mov
ljmp
andl
xor
jne
or
inc
and
roll
xchg
leave
jmp
repnz
jne
mov
inc
enter
xor
adc
xlat
pop
out
aad
fwait
pop
jne
pusha
or
je
sti
clc
stos
jle
inc
pop
clc
inc
cld
jbe
imul
mov
push
mov
or
dec
add
or
sti
mov
mov
test
jg
popa
fsts
or
xchg
pop
test
add
pop
inc
scas
shlb
push
sarb
or
xor
loop
xchg
test
pushf
or
cwtl
push
add
or
mov
pusha
adc
jmp
xorl
sbb
cmp
jp
jmp
sub
mov
add
arpl
sbb
mov
adc
arpl
outsl
mov
mov
pop
push
push
sbb
aad
mov
jne
out
bnd
or
jo
xor
cmp
lahf
int
mov
test
jne
test
ja
loope
or
movnti
sahf
and
add
add
loope
push
or
sub
into
jge
mov
ret
das
jl
enter
pop
in
ret
bnd
pop
ret
mov
cmp
stos
lock
in
andl
push
sbb
dec
mov
inc
test
cld
adc
ret
sbb
cli
jmp
lret
or
orl
jmp
mov
cmpl
insb
sti
les
clc
push
adc
or
adc
and
sbbb
shll
leave
mov
xor
adc
push
pop
jg
add
repnz
fsub
mov
loop
push
jge
loope
add
pop
negb
mov
lock
push
out
adc
addl
into
idivl
ret
adc
adc
add
push
cli
add
inc
lods
jnp
sub
mov
pop
jbe
rolb
add
test
push
sbb
in
sbbb
add
loopne
mov
imul
push
mov
and
sbb
cmc
xor
dec
pushf
pop
rcr
daa
add
jnp
js
dec
add
jo
mov
mov
test
mov
ret
and
push
add
mov
pop
loopne
sbb
sub
test
and
inc
daa
addb
add
cmpsb
jmp
add
xor
dec
pop
ret
or
or
mov
sbb
test
dec
push
xor
dec
cmc
adc
cmp
movhps
enter
pop
dec
jg
addr16
cld
jmp
out
adc
add
fwait
or
and
inc
add
ss
mov
jge
ss
adc
mov
dec
sbb
jbe
mov
push
push
jb
mov
leave
mov
adc
ret
mov
in
or
adc
mov
iret
lock
dec
movsl
sti
mov
or
push
sub
and
mov
add
icebp
mov
mov
dec
xor
sbb
pop
mov
adc
mov
sbb
leave
mov
cmpsl
addr16
add
mov
cmp
movsb
pop
test
push
insl
sub
jne
or
cld
inc
xlat
jo
addr16
xchg
hlt
jne
inc
cmp
jns
mov
mov
imul
mov
mov
movsl
out
loop
and
push
adc
push
sbb
rorb
lods
sarb
sub
lock
ljmp
lock
mov
mov
or
lret
hlt
cmp
jae
mov
daa
pop
push
les
sahf
inc
jbe
dec
lcall
xchg
out
lret
xchg
ret
cmp
push
or
add
scas
mov
cmp
dec
add
or
es
sub
and
dec
push
inc
loopne
push
push
jbe
lea
cmp
jae
xchg
ret
push
add
in
mov
inc
clc
addl
shll
inc
xor
mov
or
inc
jns
jne
xchg
inc
cmp
scas
dec
icebp
jnp
cmp
sub
aaa
push
sarb
or
loop
decl
rolb
test
sbb
add
gs
je
je
ja
mov
sub
push
mov
dec
dec
pop
or
add
push
jmp
sbb
dec
jne,pn
sub
bound
test
xor
adc
frstors
mov
add
adc
nop
pop
mov
xchg
adc
dec
ss
dec
sub
mov
in
push
cmp
sbb
sbb
jl
jne
push
cld
dec
jne
testl
xorl
dec
stc
jge
je
sbb
push
scas
fmuls
add
inc
cmc
pop
inc
push
sbb
enter
notl
add
add
cmp
adc
loop
or
addr16
or
lahf
cwtl
add
out
cmp
ja
mov
mov
sub
jl
sbb
inc
and
sbb
lock
push
rol
push
push
push
xor
pop
pop
jne
mov
shl
call
add
cmpb
mov
push
push
mov
lret
or
je
call
push
inc
jle
cmp
jg
sub
inc
les
sarl
mov
inc
cmp
cld
rep
jmp
mov
leave
jmp
mov
jmp
mov
jp
js
ret
jno
mov
nop
sbb
mov
in
popf
clc
sbb
adc
js
rep
xchg
loope
scas
mov
xor
lea
xor
std
xor
or
testb
daa
push
fucomi
ret
jb
or
add
adc
mov
cmp
jbe
cmpb
jle
jnp
or
out
in
mov
jmp
dec
fcmovnu
inc
cmp
xor
push
shrb
roll
ljmp
jne
add
dec
ljmp
mov
aad
inc
mov
xor
jmp
inc
mov
adc
mov
mov
inc
aam
mov
adc
cmc
shl
pop
sbb
test
add
les
dec
pushl
repz
lock
push
cld
xchg
sbb
cmp
bound
cmpl
add
jmp
lods
fiaddl
pop
push
push
jmp
sub
xor
add
cs
mov
stos
jo
jne
push
push
cld
fnstcw
inc
orb
pop
jmp
cmp
push
push
ljmp
je
mov
mov
and
cld
call
or
mov
xchg
and
add
daa
cmp
jb
jae
adc
add
es
and
loop
sub
testb
fnstcw
pop
push
sub
fists
fwait
pop
pop
scas
out
mov
in
or
fsts
fwait
orw
insb
jl
fildll
sub
pop
inc
lods
sub
jecxz
dec
clc
movsl
sub
rorb
cmp
push
ss
adc
or
lea
mov
aad
push
mov
adc
adc
lahf
mov
push
xor
xchg
push
cmp
out
shrb
lahf
add
repnz
fwait
loope
push
push
sub
xlat
add
push
push
or
idiv
out
std
dec
sete
inc
add
xlat
jo
mov
enter
inc
pop
pop
push
inc
sti
xlat
dec
adc
mov
fimull
dec
je
add
sahf
adc
cmpb
out
es
mov
daa
das
inc
insl
dec
mov
rclb
cmp
and
push
cmpsb
push
ret
in
jle
dec
test
in
out
outsl
fdivrs
add
xlat
jne
dec
add
incl
inc
lods
inc
inc
out
sub
jbe
out
cltd
mov
fmul
mov
loop
mov
iret
clc
rorl
pop
dec
mov
in
insb
cmp
jae
cmpb
out
push
in
xchg
insb
xchg
sub
jp
aam
jne
jmp
lea
cmpl
or
lods
mov
sbb
adcb
push
push
push
mov
inc
call
lcall
mov
cmp
push
mov
movsb
pusha
adc
add
nop
push
xor
push
repnz
inc
loope
imul
cmpsl
push
cwtl
adc
sub
lock
add
sub
and
push
push
jg
jae
sbb
sbb
sub
push
lahf
jge
push
dec
pop
repz
movb
adc
xor
jmp
pusha
cmovns
jmp
rcll
sbb
fucomi
pop
repnz
sbb
pop
cmp
adc
sarb
out
jnp
pop
aad
mov
sbb
or
cwtl
xor
aaa
add
icebp
das
jo
icebp
xor
add
rcl
sub
inc
cld
imul
push
push
fadd
cmp
call
fcoms
xchg
scas
test
pop
loopne
shl
jae
add
mov
imul
add
jne
je
sbb
pop
xor
or
ds
and
ret
dec
pop
or
stc
loopne
aas
andb
jo
pop
jl
cmp
push
aas
mov
push
or
loopne
push
xor
or
sub
pop
cmc
es
adc
enter
mov
addb
je
repz
adc
xor
xchg
mov
cmp
inc
pop
cmp
jg
mov
inc
inc
and
mov
pop
scas
shll
rorb
inc
jg
inc
jbe
add
push
shr
je
mov
mov
cmp
jne
ljmp
inc
dec
je
mov
add
aaa
add
add
dec
jne
jmp
jg
adc
add
and
je
mov
cmp
jne
dec
je
mov
cmp
jne
xchg
imul
jg
clc
adc
cmp
jne
shr
shr
sbb
iret
fstpl
iret
push
mov
shr
or
imul
dec
rep
mov
pop
and
mov
cmp
jne
dec
cmpsb
jns
int
dec
and
add
jecxz
xchg
addr16
call
mov
jbe
shll
push
roll
mov
mov
push
push
jmp
push
ss
xchg
mov
mov
shl
or
pop
push
or
stos
mov
stos
pop
xor
imul
mov
loopne
mov
out
test
add
jno
sub
mov
inc
mov
data16
cmpb
sub
cli
add
xchg
jp
insb
add
add
sub
xor
inc
sbb
cmp
pusha
mov
mov
or
jo
mov
push
cmpsb
and
inc
je
add
inc
xchg
and
jne
or
popf
sbb
fldl
xchg
testl
call
imul
fidivrs
push
orb
add
sbb
pushf
xchg
mov
jp
jle
push
dec
mov
inc
inc
and
add
adc
inc
mov
sbb
push
call
cwtl
outsb
dec
mov
cmc
inc
dec
jmp
dec
push
push
cmp
fstpt
imul
sti
and
add
je
and
fstp
pop
js
pop
pop
je
xor
dec
and
mov
sub
jmp
or
fwait
into
and
ja
cmp
ja
lea
mov
fcoms
cli
test
out
int
or
jge
jmp
inc
push
neg
jle
scas
inc
mov
sub
jmp
inc
inc
jmp
mov
popf
mov
je
andb
xchg
and
xor
add
scas
leave
pushf
add
aad
xchg
outsb
cwtl
pop
xor
mov
pop
mov
cmp
cmp
mov
inc
mov
dec
jne
pop
xchg
mov
fidivs
xchg
repz
mov
jecxz
mov
ds
jo
aaa
adc
cmp
orl
adc
fldt
and
add
ret
out
sub
je
das
sub
dec
mov
mov
inc
sub
jmp
pop
xchg
push
push
sbb
jge
mov
xor
lock
sbb
jmp
fstp
fldt
or
adc
out
mov
stc
in
jg
aas
mov
stc
in
cmp
inc
pushf
or
ret
psubw
inc
ds
adc
mov
and
sub
sbb
add
mov
mov
imul
sub
mov
adc
xor
leave
sbb
mov
mov
inc
jbe
imul
cmp
mov
mov
fwait
jg
aas
bound
cmpb
xlat
fadds
jmp
outsb
xor
xchg
push
or
push
push
int3
into
sbb
rorl
incl
test
popa
push
pop
test
enter
mov
inc
cmp
and
daa
lret
into
pop
inc
test
decl
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
bound
and
inc
inc
jl
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
mov
inc
push
stos
mov
cmp
or
mov
pop
out
sub
imul
call
loopne
inc
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
ja
ljmp
sbb
sarb
repnz
test
nop
fcmovnb
movsb
lahf
nop
incl
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
jmp
ds
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
fsubs
pop
mov
repz
mov
subb
and
and
outsb
bound
xor
scas
lret
push
cmp
xor
aam
ja
push
sub
add
cmp
aas
xor
push
sub
mov
jne
add
aam
pop
out
and
or
mov
sub
xorl
add
neg
push
cli
repnz
inc
hlt
xchg
pop
hlt
push
data16
and
add
push
jmp
pushf
out
jmp
mov
inc
push
clc
data16
or
loope
add
push
pop
jp
fninit
fwait
inc
mov
mov
mov
mov
aam
leave
mov
inc
rep
push
or
push
pop
loopne
fisttpll
dec
cld
jne
dec
mov
xor
out
jne
in
lock
add
repnz
mov
ss
fdivl
xchg
push
popa
sub
into
incb
rcrb
pop
mov
sbb
aaa
stos
jge
ffreep
or
rcr
test
or
ja
jae
sub
adcb
adc
fs
dec
xlat
and
xchg
ret
xor
jle
lds
add
mov
or
push
cld
cld
incl
stos
mov
xor
push
shr
dec
rep
pop
scas
push
jnp
jmp
sub
pop
mov
fisttps
sbb
in
cmp
je
pop
mov
add
jae
daa
push
mov
mov
push
sbb
cmp
sub
lods
mov
mov
jbe
icebp
cmpsl
sarb
inc
test
fsubr
jmp
inc
xchg
cmp
jb
movups
pop
push
add
jmp
rorb
add
mov
adc
push
sbbb
testb
adc
clc
pop
sub
mov
movsb
jg
push
arpl
inc
ficoml
add
mov
shlb
mov
push
add
pop
lea
movsb
lds
sbb
mov
xchg
cld
dec
and
sub
popf
xor
pushf
rol
mov
lock
xor
jb
imul
fmull
or
jne
or
cmp
mov
fcoml
lds
les
mov
test
mov
mov
cmp
adc
shll
dec
jle
jne
mov
add
add
jle
orb
add
lcall
clc
scas
je
pop
in
negb
pop
add
sub
mov
pop
sbb
push
xchg
add
sub
ljmp
pop
mov
xor
xchg
xor
cmp
das
mov
dec
out
pop
xchg
push
add
out
les
data16
inc
pop
push
aam
or
pop
data16
rolb
add
pop
in
popa
lock
xor
decl
out
decb
sti
xchg
adc
mov
cmp
sbb
add
dec
dec
out
fnstenv
icebp
fucomi
sbb
add
sbb
jecxz
loope
ss
dec
cmp
fistps
jmp
sbb
sti
dec
jmp
pop
lcall
xor
call
lahf
in
push
pop
add
mov
mov
add
shlb
adc
mov
shl
pop
clc
mov
movl
or
or
pop
sub
out
cmp
or
or
sbb
mov
notl
sbb
push
clc
sbb
xor
popf
pop
pop
ja
add
add
pop
out
cmpb
imul
push
movsl
adc
dec
xor
pusha
push
ds
repnz
imul
add
sub
mov
add
or
jae
jne
rcrl
addr16
pop
push
push
and
push
jg
sbb
jmp
jne
movsbl
inc
inc
jmp
sbb
pop
addr16
icebp
xor
jecxz
nop
flds
push
aas
loop
pusha
fsub
pop
fdivrl
adc
rorb
hlt
testl
jne
fiadds
push
stos
sti
pop
outsl
mov
adc
outsb
mov
adc
je
out
cmp
xor
loopne
test
cmp
cli
out
push
je
dec
adc
xor
jbe
popa
sbb
outsl
test
js
into
adc
cmp
pop
jbe
pop
cmc
and
outsb
enter
adc
test
cli
or
push
jns
push
loopne
fidivs
dec
add
out
shll
push
sbb
push
sub
xorb
push
mov
push
andb
mov
jnp
or
movl
lock
add
xlat
mov
out
add
into
ret
inc
mov
pop
mov
and
je
dec
or
or
push
push
add
mov
mov
add
push
or
dec
jg
lods
pop
add
lds
mov
or
sub
repnz
addb
push
dec
fdivs
xchg
mov
fcomip
push
jg
or
fdivl
mov
pushw
add
sahf
dec
jne
xchg
sarl
adc
xor
inc
or
xor
inc
icebp
out
daa
push
adc
lahf
adc
adc
insl
or
das
push
rdpmc
pusha
pop
adc
les
and
xor
inc
push
arpl
pop
ret
or
mov
inc
popf
in
push
subb
xchg
inc
outsl
or
mov
add
pop
push
push
push
push
push
mov
ret
fs
fistpll
xor
sbb
orb
add
testl
clc
xor
sbb
cs
adc
adc
xchg
jae
mov
fs
push
lods
pop
sbb
cmpsl
fildll
jmp
ret
xor
mov
movsl
insb
inc
sbb
or
pop
out
aaa
jmp
add
je
cmp
adc
push
sub
je
jmp
add
aas
sub
jb
je
jmp
cmp
cmp
lods
sti
inc
adc
jmp
sub
cmp
mov
jmp
sar
pushl
int
and
sbb
into
jmp
mov
test
push
jp
or
lret
add
xor
call
sbb
mov
jg
arpl
or
mov
jno
push
insl
jb
outsl
jp
xor
inc
pop
test
mov
add
sbb
jbe
pusha
mov
or
push
inc
sti
xor
addl
push
lock
push
or
insb
subb
fnstenv
or
cmp
ja
adc
inc
or
leave
xor
mov
mov
mov
cmp
jecxz
ret
jne
add
or
cmp
jne
vpextrb
loope
out
movd
mov
pop
dec
mov
mov
clc
in
pop
ss
fstpt
dec
mov
inc
ficomps
in
sub
rcl
jg
jecxz
adc
sub
adc
nop
mov
jle
lods
sbb
imul
aam
mov
fidivrs
repz
add
inc
add
mov
jl
nop
rol
add
sbb
mov
xor
cmp
cmpsb
stos
sbb
jo
xchg
add
cmp
popf
xchg
ret
jp
push
push
popa
mov
sbb
pop
clc
sub
ljmp
push
sti
jne
pop
pop
pop
inc
pop
sbb
rorb
jmp
dec
add
mov
int3
xorb
mov
inc
mov
pop
pop
mov
pop
or
orb
mov
xchg
imulb
add
mov
es
sti
mov
dec
push
push
test
movsb
mov
call
fsts
scas
inc
push
out
mov
xchg
rolb
das
lcall
ja
add
mov
mov
cmp
pop
leave
aas
push
xor
mov
adcw
mov
jne
subl
adc
push
outsb
adc
loopne
mov
push
push
cmp
xor
movsl
lock
xor
jl
scas
xor
mov
push
addl
xor
sbb
loopne
pop
js
dec
cmpb
push
cmpl
adc
sbb
pop
mov
call
and
out
push
sub
and
xchg
aaa
rorb
dec
pop
shr
cmp
es
jne
pop
add
scas
mov
cs
xlat
roll
cli
dec
push
jne
inc
sub
or
push
jp
push
dec
sub
or
add
mov
or
cmp
adc
mov
pop
lahf
sub
sub
mov
add
mov
ret
pop
mov
mov
daa
loopne
mov
out
jmp
xchg
cmp
mov
xchg
daa
jge
xor
stos
and
lods
ljmp
fsts
adc
rolb
in
inc
pop
jo
push
push
fstps
mov
or
leave
or
pop
pop
pop
and
jp
test
mov
push
adc
sub
push
or
add
push
push
repnz
push
push
adc
in
add
xchg
and
ds
out
or
clc
dec
jl
lock
push
lea
std
mov
inc
adc
cs
push
sbb
add
or
pop
jo
sub
fidivl
dec
and
push
inc
jg
mov
adcb
sbb
mov
or
adc
xchg
jl
test
push
inc
jle
push
add
cli
emms
and
push
adc
add
or
pop
and
movl
in
loop
out
sahf
pusha
pop
adc
pusha
inc
clc
pusha
inc
or
mov
cmp
fdivs
mov
das
or
loopne
push
sub
sub
data16
jns
sbb
aaa
xchg
filds
push
cld
cmp
jg
repnz
jmp
lea
cmp
bound
dec
mov
outsb
aaa
mov
or
sahf
jl
cmp
dec
js
les
fistpl
cmp
and
sbb
add
pushf
les
push
sbb
iret
loope
loop
or
adc
push
cmp
je
lock
pop
pusha
push
or
je
add
cmp
sar
jmp
inc
add
jmp
fbstp
cmp
or
or
push
push
into
pop
out
addr16
in
add
jp
xchg
enter
data16
or
push
push
repnz
push
icebp
gs
rcrl
mov
dec
cli
push
mov
cld
inc
adc
inc
loopne
cmp
jl
loope
xchg
test
inc
cld
ret
push
aas
mov
je
mov
and
ljmp
pop
and
cmp
dec
and
and
loopne
mov
out
popa
cmpl
je
cmp
mov
fdivrl
xor
rorl
frstor
cld
add
mov
fmuls
ja
cli
lds
push
sbb
fnstsw
mov
mov
jmp
out
push
jle
xor
mov
xchg
jbe
xchg
adc
or
insb
cmp
fwait
inc
clc
mov
dec
jmp
sub
add
cmp
ss
fisttpll
dec
dec
jne
mov
adc
and
aaa
add
dec
jmp
and
fildll
sbb
pop
jl
add
pop
dec
jne
mov
jb
xchg
and
adc
xchg
pop
lea
jmp
xchg
cmp
xchg
add
push
sub
imul
mov
cmpsl
pop
dec
ja
pop
dec
and
inc
or
mov
or
lock
mov
jo
cmpl
or
pop
lods
mov
cmpsl
push
clc
inc
das
add
pop
sub
adc
jp
aas
xor
xor
xchg
inc
mov
sti
pop
and
lret
adc
or
cmpsl
aas
cmp
fucomip
pop
and
sub
dec
jl
cmp
jge
sub
inc
sbb
adc
scas
jb
push
pop
xor
xor
jmp
into
inc
aad
inc
jmp
and
xor
mov
lret
aaa
sub
dec
jl
sub
mov
mov
cmp
fstpt
inc
sub
add
lea
inc
dec
movsb
pop
lret
push
push
dec
inc
mov
addr16
lahf
cltd
mov
push
mov
mov
cmp
adc
imul
add
gs
cmp
incb
mov
lea
lock
rolb
sub
add
mov
scas
dec
add
mov
hlt
sub
mov
push
insb
dec
js
mov
inc
jb
adc
or
cmp
repnz
in
pop
fdivl
pop
mov
bound
xlat
push
pushf
dec
out
or
cmpl
jne
sub
or
loopne
cwtl
pop
sub
and
sbb
jo
sub
sub
pop
aad
mulb
cli
pop
cmp
fcompl
stos
pop
movsl
ret
push
ret
push
gs
repnz
cmp
push
push
push
das
aam
cs
loopne
mov
out
or
xor
cmpsl
push
cmp
cmp
scas
mov
sub
int3
jno
in
adc
pop
mov
lods
jle
cmp
cmp
inc
xchg
pushf
xchg
pushf
nop
lods
inc
xchg
sbb
jbe
decl
das
add
jl
int3
pop
pushl
mov
and
ds
inc
lods
outsl
xorb
mov
add
inc
mov
add
sbb
mov
orb
inc
xor
fcoml
and
es
data16
in
pusha
and
adc
adc
fbld
mov
cmp
jge
xchg
or
cmp
nop
pushf
clc
loope
je
xchg
sub
cmp
push
lods
add
add
cs
sub
or
orl
les
pop
stos
add
push
iret
fwait
xchg
mov
add
xchg
out
pushf
push
cmp
jg
mov
dec
and
add
mov
adc
push
mov
aaa
inc
or
pop
movsb
jp
jg
das
sahf
mov
xchg
dec
sbb
jp
icebp
jg
cmp
je
cmp
je
cmp
je
cmp
je
cmp
mov
je
mov
xchg
cmp
sub
cmpsb
push
cwtl
clc
jmp
adc
shll
mov
and
out
jmp
xchg
aad
push
or
pop
jo,pn
cs
adc
cmp
pop
push
repz
fucomp
adc
xor
lock
adc
push
lahf
mov
and
hlt
cwtl
pop
int3
jo
lods
test
scas
push
cli
adc
mov
sahf
cmp
adc
adc
out
sahf
out
and
adc
imul
inc
ja
mov
into
test
int3
jg
pop
and
mov
pop
mov
cmp
daa
ja
inc
fs
xor
fsubr
outsb
es
dec
fsubrl
repz
or
jns
inc
test
sub
data16
test
cmp
dec
mov
lret
dec
pushf
ret
ss
cmp
decl
or
sbb
xor
mov
lea
popa
ret
jl
mov
clc
push
push
add
sarl
rclb
jns
imul
pop
push
mov
cmp
xor
jae
jae
or
je
or
jo
cmpsb
popf
pop
pusha
adcb
mov
jo
and
mov
fs
dec
js
jmp
and
mov
lea
mov
lds
add
je
clc
xlat
idivl
or
and
cmp
add
in
out
xor
and
ret
insb
adc
and
jno
mov
dec
add
rcl
pop
sbb
aaa
loopne
or
iret
and
mov
push
test
push
popa
jge
or
in
pushf
out
scas
vmovupd
pop
rorb
out
sub
mov
enter
mov
jp
push
sub
std
adc
les
scas
jo
xor
add
es
ja
sti
sbb
cmpsl
testb
add
inc
ljmp
fnstcw
pop
mov
jo
add
je
cmp
out
cmp
call
daa
popa
add
sub
pop
pop
add
cli
mov
sub
or
inc
pushf
adc
pop
pmuludq
push
xchg
xchg
mov
cmp
sbb
push
dec
mov
into
jg
cmp
mov
push
pop
push
cmp
sub
cmp
lods
push
cmp
enter
push
xchg
and
mov
movsl
fs
add
dec
pop
add
pop
ret
push
adc
or
push
adc
sbb
leave
jne
stos
jmp
or
je
push
jns
neg
notl
stos
lcall
sbb
neg
sbb
sub
mov
enter
shl
rcl
rcl
rcl
cmp
jb
jmp
cmp
jb
sub
sbb
inc
loop
pop
test
fisttpl
in
repz
int3
mov
pop
pop
pop
mov
xchg
pop
icebp
mov
js
in
lock
stc
xchg
cli
repnz
and
or
add
rorb
ret
shrd
shr
ret
mov
test
in
xor
mov
out
test
ret
addr16
or
fidivrl
xor
decl
inc
cmpb
in
mov
adc
sub
jmp
cmp
jne
mov
mov
and
sub
bound
fdivrl
je
daa
xor
fimull
in
jo
popf
lret
inc
popa
adc
ret
cmpsb
mov
adc
stc
push
jb
out
mov
mov
and
sbb
xchg
and
aaa
jmp
push
fstl
out
das
mov
inc
jmp
jl
andl
ss
jbe
jmp
jg
mov
cltd
outsl
push
hlt
adc
nop
bound
addb
adc
data16
pop
jp
and
inc
xor
push
xor
pop
inc
fimull
movntq
ror
fiaddl
orb
push
cmp
xorl
sub
dec
inc
cmp
add
or
test
jg
mov
or
and
pop
cmp
nop
sub
dec
mov
jmp
or
mov
jmp
setl
cmp
je
dec
add
or
mov
push
dec
popa
mov
cmp
cmpsl
xor
cmp
mov
xorb
push
xchg
nop
jmp
bnd
cmp
sbb
sub
jg
movb
cmp
loope
aam
lods
iret
dec
mov
mov
rclb
inc
push
push
ds
add
push
xchg
push
mov
call
adc
jbe
testb
call
xchg
pop
cwtl
cmp
je
andl
nop
push
dec
cld
aaa
sbb
mov
cmp
jge
lock
and
imul
ret
iret
add
lea
mov
and
or
es
jo
leave
push
lock
add
in
xchg
jge
or
pushf
mov
dec
in
push
adc
in
dec
in
adc
bound
and
dec
rcll
addl
lods
rcr
fisttpll
lock
test
insl
xor
add
cmpsl
cmpl
jle
cwtl
or
loope
xchg
xchg
dec
jo
and
in
cmpsb
cltd
add
or
xor
test
lcall
dec
jne
enter
into
sbb
cmp
arpl
add
div
add
xchg
clc
das
adc
outsb
lret
sub
or
xlat
arpl
mull
mov
pushf
fdivs
cmp
nop
shrb
xlat
cmp
jle
repnz
adc
jge
or
mov
sub
mov
inc
or
dec
flds
lahf
inc
inc
push
adc
xor
mov
xlat
sahf
inc
lods
adcb
or
add
sub
hlt
add
xchg
xor
sbb
sbb
inc
xchg
xor
push
push
mov
test
inc
into
cmp
roll
and
js
mov
xchg
adc
mov
nop
inc
outsb
jecxz
push
xor
lock
jne
push
or
clc
or
mov
inc
pop
mov
lods
jnp
jb
sbb
fwait
mulb
xchg
adc
dec
push
push
push
mov
incl
aas
push
dec
pop
xlat
pop
pop
pop
test
push
lods
mov
mov
popa
and
jne
xor
ret
or
aas
dec
and
push
xchg
shl
je
dec
jne
jg
bound
les
mov
mov
repnz
sbb
xor
xchg
lret
das
pop
jo
add
inc
jb
fwait
or
je
mov
push
aad
adc
lods
out
add
hlt
mov
test
out
cmp
add
nop
mov
sub
js
push
insb
jbe
mov
add
jl
fimuls
push
out
and
or
pop
test
cmp
lret
rcrb
je
in
jnp
lods
sub
movsb
push
pop
sbb
cmp
add
or
lret
ljmp
divl
and
imul
fcmovbe
push
ljmp
mov
fadd
inc
jno
sub
rolb
sbb
cltd
sub
inc
push
push
push
lods
imul
mov
and
std
fs
je
rcrl
loop
mov
out
jbe
inc
cmp
test
sub
dec
scas
insl
ret
mov
push
mov
xchg
ss
test
daa
pop
lods
xchg
pop
ret
imul
call
gs
xor
cs
insb
pop
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
push
lret
insl
gs
daa
outsl
loopne
mov
sub
jecxz
pop
movb
inc
mov
and
push
push
shrb
push
add
and
mov
lahf
mov
arpl
push
xchg
push
push
adc
sub
mov
inc
mov
mov
dec
out
inc
insl
xchg
into
pusha
stc
int
aas
insb
push
add
mov
repnz
inc
notl
inc
enter
cmpsl
sti
and
lock
cmp
lods
repz
insb
and
or
mov
jge
or
test
es
mov
mov
sbb
add
sti
int3
hlt
dec
cmpb
stos
pop
cmp
jne
adc
and
popf
inc
cmpb
push
int3
sbb
add
insb
xlat
lret
shrl
fs
ret
inc
xor
cmp
inc
insb
cmc
add
inc
test
inc
lods
add
pushf
add
data16
push
sub
cmp
add
xchg
imul
mov
mov
sbb
pop
mov
inc
mov
cmp
lds
jp
mov
sub
mov
lret
add
add
fsts
or
xlat
idiv
xor
mov
and
push
cmp
test
push
xor
add
fwait
loopne
or
xchg
push
jno
jo
les
xorl
lret
mov
test
test
adc
push
mov
cmp
or
rorb
pop
mov
loope
adc
cld
jne
inc
sbb
fiadds
addb
xchg
ret
repnz
mov
mov
call
sub
in
nop
insb
daa
and
push
and
enter
dec
push
insl
fwait
xor
sahf
je
sbb
inc
mov
daa
mov
push
mov
adc
pop
mov
testb
sbb
mov
pop
pop
ret
sbb
add
sti
in
aam
sbb
test
loope
and
hlt
push
lock
dec
pop
out
mov
add
das
sub
jmp
js
mov
xchg
sbb
bound
inc
dec
js
inc
rorl
fcmovu
int
or
enter
adc
ja
xchg
dec
stos
ds
pop
mov
mov
mov
xchg
push
xchg
mov
js
pop
lret
and
sar
movzwl
inc
cmp
ja
mov
inc
jmp
cmp
add
add
pop
cld
ja
fcmovb
jmp
or
mov
adc
sti
fninit
aas
sbb
and
lret
add
stos
mov
add
and
and
rol
cmp
add
dec
or
xorb
fnsave
dec
movb
lods
sbb
mov
adc
or
clc
mov
pop
add
cmp
lea
ret
cmp
pop
out
mov
fwait
pop
rolb
lock
xchg
inc
rcl
mov
push
sbb
subb
jae
xor
fdiv
cmp
hlt
cli
mov
inc
test
je
or
jae
pop
loope
and
je
cmp
adc
mov
and
cmp
jo
repz
mov
loop
mov
loope
or
mov
pop
lea
outsb
cld
ja
dec
dec
cld
mov
jo
adc
inc
outsb
lock
pusha
lcall
adc
loop
sbb
movl
xlat
sbb
inc
mov
ret
xor
sbbl
cli
xorb
mov
dec
lods
sbb
or
jb
ljmp
pop
in
movl
movb
rclb
notb
pop
adc
lea
push
fmuls
cld
fs
icebp
inc
push
and
xchg
nop
or
jmp
aam
push
inc
mov
sbb
cmpsb
andb
push
jmp
push
dec
inc
dec
int3
pop
add
rolb
inc
mov
aas
and
sbbl
xchg
inc
dec
inc
mov
inc
pop
cmp
insl
test
cwtl
jns
cmpl
sbb
push
cmpl
add
push
cmp
stc
mov
inc
dec
cwtl
push
ucomiss
or
add
pop
out
ds
xchg
push
leave
pop
outsb
push
lock
pop
push
das
or
ljmp
lea
push
push
mov
mov
dec
fstp
mov
cld
jp
nop
je
inc
or
into
or
cmpl
enter
pop
sti
mov
jne
jl
and
jb
mov
adc
or
shr
insl
pusha
mov
subl
add
or
jmp
lods
add
fwait
dec
xor
push
dec
nop
mov
pushf
adc
pop
dec
mov
push
mov
adc
pop
rclb
xor
push
stc
push
fs
adc
cmp
hlt
and
adc
iret
shlb
add
arpl
add
fldl
ret
inc
pushf
mov
outsb
mov
and
leave
cmpsl
push
pcmpeqb
xchg
ret
insb
out
or
inc
sahf
mov
pop
popf
and
pop
les
dec
or
pop
pop
jmp
lods
add
or
jmp
push
mov
addr16
shlb
leave
or
jne
lcall
insb
push
std
and
popa
dec
cli
add
mov
lea
and
ret
mov
outsb
fcomps
testl
int
out
cmp
gs
add
lock
dec
loopne
hlt
out
pop
pop
imul
adc
mov
xor
test
sbb
ss
mov
lret
or
mov
addb
add
inc
cmpsb
sub
add
push
or
loope
sbb
xor
cltd
je
clc
add
xor
ficomps
hlt
or
push
gs
arpl
or
jb
jns
cmpsb
std
adc
jae
bound
inc
push
xchg
call
inc
outsl
arpl
inc
gs
jne
je
dec
outsl
je
imul
adc
imul
arpl
or
adc
ret
or
jb
fs
out
mov
pop
xor
outsl
insl
bound
outsl
js
imul
pop
mov
jmp
jae
adc
push
andps
outsb
dec
inc
xor
je
push
addl
enter
pushf
pop
sarb
pop
mov
xchg
xchg
xchg
xchg
test
mov
xchg
cwtl
xchg
nop
mov
test
xchg
xchg
xchg
xchg
xchg
leave
leave
insl
nop
xchg
jl
js
leave
leave
leave
leave
jo
push
leave
pusha
pop
pop
push
leave
leave
leave
leave
push
dec
dec
inc
leave
leave
leave
leave
inc
cmp
xor
leave
leave
leave
xor
and
leave
leave
leave
and
adc
leave
leave
leave
adc
add
in
enter
clc
hlt
in
in
lock
call
in
in
in
aam
int3
enter
in
sarb
mov
test
in
in
mov
in
xchg
nop
mov
test
in
je
insb
push
fs
pop
pop
in
in
push
push
dec
dec
in
in
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
jb
in
add
xchg
cld
clc
jb
jb
hlt
lock
call
in
cmp
jb
aam
xchg
movsb
mov
pushf
xchg
test
mov
pushf
cwtl
xchg
nop
pushf
pushf
pushf
pushf
mov
pushf
pushf
jl
je
pushf
pushf
pushf
pushf
insb
push
pushf
pushf
pop
pop
push
push
pushf
pushf
pushf
pushf
dec
dec
inc
inc
pushf
pushf
pushf
pushf
cmp
xor
pushf
pushf
pushf
pushf
sub
and
pushf
pushf
pushf
pushf
sbb
adc
pushf
pushf
pushf
pushf
or
add
dec
dec
dec
mov
dec
dec
dec
in
call
dec
dec
aam
dec
dec
dec
dec
int3
enter
dec
dec
dec
mov
daa
inc
dec
lods
cwtl
insb
push
daa
push
push
dec
pop
daa
daa
daa
daa
pop
fs
inc
daa
daa
daa
daa
inc
cmp
xor
daa
daa
daa
xor
and
daa
daa
daa
and
adc
daa
daa
daa
adc
add
xchg
and
add
xchg
xchg
hlt
lock
call
in
daa
mov
xchg
aam
int3
iret
enter
daa
daa
sarb
mov
test
daa
daa
daa
daa
mov
daa
daa
daa
nop
mov
daa
cmpb
daa
daa
daa
jo
push
daa
pusha
pop
pop
push
daa
daa
daa
daa
push
dec
dec
inc
daa
daa
daa
daa
inc
cmp
xor
daa
daa
daa
xor
and
daa
daa
daa
and
in
in
adc
adc
daa
daa
in
add
xchg
cld
clc
daa
daa
daa
daa
hlt
lock
call
in
daa
daa
daa
daa
aam
int3
enter
daa
sarb
mov
test
jb
daa
movsb
mov
jb
xchg
nop
mov
jb
mov
jb
je
insb
jb
jb
push
jb
jb
push
push
dec
jb
jb
dec
inc
inc
cmp
jb
jb
xor
sub
jb
jb
and
sbb
jb
jb
adc
or
arpl
or
xchg
cmp
cmp
xchg
xchg
xchg
xchg
cmp
cmp
xchg
xchg
xchg
xchg
cmp
cmp
xchg
xchg
xchg
xchg
cmp
cmp
xchg
xchg
xchg
xchg
std
idivl
cmp
rol
loop
or
popa
sub
or
popa
mov
ret
nop
pop
and
or
pushf
nop
mov
icebp
insl
insl
popa
insb
or
jmp
cmp
shlb
fimull
sbbl
lcall
add
inc
and
data16
mov
push
xor
into
mov
or
add
sub
cmpsl
push
ret
out
xchg
mov
addl
and
cmp
imul
push
adc
sbb
or
and
xchg
push
xor
pusha
cltd
push
inc
sti
and
in
test
nop
scas
pop
int
outsb
cmpsl
jmp
xor
int3
xlat
in
nop
pushf
insb
mov
insb
inc
stos
mov
pop
mov
repnz
pop
mov
push
pop
cld
pop
add
loope
inc
sbb
adc
push
gs
stos
in
adc
xor
or
inc
pop
iret
and
pop
or
xchg
sahf
and
add
std
pushl
popa
gs
insb
popa
outsb
and
push
dec
inc
inc
dec
add
in
mov
daa
outsl
sub
and
dec
out
adc
push
dec
pop
and
mov
push
push
pop
sub
pop
cs
inc
dec
pop
dec
dec
dec
inc
push
das
daa
cltd
in
lahf
insl
cmp
inc
xchg
fwait
xor
outsl
jno
dec
push
in
js
lock
incl
dec
add
cmpxchg
pop
ret
das
adc
sub
adc
adc
inc
stos
pop
rclb
add
and
cmp
mov
dec
insl
fcompl
mov
sbb
dec
xor
pop
inc
dec
cmp
jb
std
dec
push
ret
and
xlat
add
movb
inc
pop
xchg
hlt
mov
add
add
mov
nop
negb
popa
and
push
inc
out
mov
or
mov
inc
push
or
dec
jnp
imul
or
ds
mov
adc
push
dec
shll
adc
sbb
in
sub
sub
push
xor
lods
loopne
cs
jp
add
sub
aas
cwtl
imul
adc
nop
inc
dec
sub
xor
push
pop
xor
dec
sarl
cmp
xor
xor
pop
cmp
imul
cwtl
dec
pop
jmp
lret
jns
fildll
fucomip
pop
pop
fldt
jl
cmp
add
js
and
data16
adc
inc
sub
add
out
xor
mov
cli
clc
mov
rolb
inc
pop
jo
mul
shr
mov
push
aam
or
sbb
inc
mov
or
mov
mov
pop
sbb
inc
sbb
in
aas
wbinvd
shrl
add
dec
aaa
sbb
xchg
add
pop
sbb
in
mov
inc
sub
enter
lret
cltd
push
aas
adc
pop
xor
inc
add
add
fisubl
sub
jne
cmp
aam
dec
clc
jo
push
add
pop
add
add
outsl
pop
scas
push
push
outsb
imul
outsb
je
mov
mov
inc
sbbb
and
jge
xor
in
and
push
arpl
push
cmpsb
xchg
shlb
std
cmpsb
adc
push
arpl
cli
dec
imul
mov
cld
add
push
lock
jae
ss
or
sbb
add
imul
fs
sbb
js
add
movb
sub
adc
testb
rcrb
cmp
loop
bound
push
aam
clc
leave
sbb
lahf
loopne
call
cwtl
jge
inc
xchg
xchg
mov
pop
les
faddl
mov
push
cmp
jne
fistps
dec
movb
lea
mov
push
dec
divl
jne
push
sbb
jne
push
cmpsl
in
movb
xor
dec
push
mov
adc
mov
loope
inc
sbb
pop
or
pop
or
sbb
push
out
mov
incl
movzwl
sub
mov
gs
mov
adc
add
ja
shll
push
inc
shl
rol
shlb
sbb
mov
call
pop
sbb
cmp
jb
and
lock
add
and
push
add
jae
rcrb
orl
call
jmp
push
add
and
push
leave
bound
repnz
or
les
mov
mov
mov
push
sub
dec
dec
cs
add
mov
mov
out
test
lock
pop
pop
and
sub
sub
or
mov
sbb
and
push
lea
xchg
adc
add
lret
push
mov
test
lcall
stc
pop
not
loopne
sbb
loopne
stos
jecxz
jne
loope
cld
jnp
sub
orl
xor
rorb
sbb
add
test
jae
inc
js
mov
sub
add
jae
mov
mov
add
mov
and
stc
ljmp
fisttps
enter
shlb
dec
and
adc
cmp
sub
sub
mov
pop
ret
or
cmc
mov
je
add
and
or
and
cmp
cmp
xor
and
add
ljmp
hlt
aam
cmpsl
jbe
cwtl
sbb
jne
jle
pop
mov
mov
rorb
jo
rcrb
and
xchg
adcb
pop
sti
iret
outsl
inc
aad
outsl
dec
into
add
or
je
mov
ffreep
pop
or
pop
mov
sbb
jo
dec
rolb
rorb
pop
out
xchg
aad
mov
add
scas
or
jne
cmp
cmpsl
ret
lds
lcall
ss
filds
fimuls
push
fs
mov
pop
adc
xchg
push
jne
push
push
push
cmp
jbe
out
incb
sub
add
jmp
pop
cmp
push
or
xor
adc
je
jo
loopnew
xchg
push
inc
outsl
dec
adc
decl
jl
mov
cmp
adc
ds
mov
shr
add
jge
mov
add
dec
adc
push
adc
js
mov
jmp
jno
mov
nop
jne
andl
fsubrl
shlb
shrl
in
pop
mov
push
fidivrl
dec
hlt
shrb
cmp
jae
je
icebp
dec
repz
push
or
gs
rcll
push
inc
andb
das
das
jle
cmp
mov
jmp
mov
push
ja
push
inc
mov
or
jbe
ret
push
addr16
xlat
adc
outsl
mov
jp
shr
cmp
jb
addb
lock
jmp
cmp
dec
fiaddl
outsl
jle
mov
mov
ret
push
add
cmc
mov
ja
dec
loopne
test
adcb
hlt
add
loope
jne
and
das
clc
mov
fisubl
and
into
pusha
mov
loop
je
fidivs
add
sti
outsl
add
inc
or
outsb
dec
xchg
enter
cmp
add
mov
lea
popa
push
and
or
and
sbb
xorl
push
fcompl
mov
sub
push
ja
adc
jae
loopne
push
inc
xor
mov
xor
out
or
jmp
lea
arpl
mov
cmp
jo
sbb
mov
test
btr
fwait
pop
rdtsc
mov
or
insb
movsl
add
mov
aam
sbb
cli
lea
pop
incb
ds
movsb
jmp
or
mov
mov
in
sbb
in
idivl
inc
mov
jmp
ds
dec
pusha
add
mov
movb
jo
mov
int3
incl
lea
mov
das
mov
out
sbbb
in
movl
inc
loope
popa
xchg
icebp
lea
push
or
imull
iret
mov
push
js
jo
addr16
adc
xchg
mov
lcall
fistps
xchg
shl
rcrb
or
mov
loopne
inc
add
loopne
rorb
jmp
nop
mov
xchg
pop
rorb
jl
mov
loopne
xor
sbb
jo
push
add
fsubs
inc
stos
cmpl
jmp
mov
stos
push
cmp
movsb
and
lcall
sub
jb
and
adc
pop
pop
sub
xor
ret
arpl
xchg
push
ret
fcmovnu
mov
cmp
add
adc
xchg
cmpsb
add
cld
sub
sbb
iret
fwait
add
mov
jne
subl
je
lods
test
xchg
pop
ljmp
data16
sub
scas
dec
pop
xor
movsl
cmp
aaa
mov
ret
adc
lcall
sub
inc
jne
cmp
mov
stos
ret
mov
pop
adc
xchg
into
pop
dec
inc
andl
test
rolb
mov
mov
testl
lahf
stos
or
inc
cld
or
cmp
fwait
dec
lea
inc
pop
xor
imul
movsl
aam
push
xor
adc
ljmp
add
jmp
dec
clc
sub
sub
mov
xor
shrl
mov
cmpsl
or
pop
cmp
sbb
or
sahf
addr16
mov
notb
sbb
js
sub
pop
sbb
aaa
adc
dec
roll
dec
or
mov
sbb
sub
jb
sbb
inc
xchg
in
js
lret
jb
jns
rclb
mov
addb
xor
lock
call
dec
or
data16
roll
loopne
aad
add
cld
mov
je
clc
iret
mov
push
js
xor
shll
repz
mov
std
ja
add
jecxz
cmp
push
adc
add
cmp
lahf
and
ret
stos
add
jae
add
jle
push
int3
or
orb
jns
jbe
lea
sub
inc
sub
or
pop
cld
or
mov
in
push
xchg
add
xchg
ss
lret
jmp
mov
insb
cli
add
add
xor
clc
cmova
out
inc
cs
sub
or
sbb
js
dec
inc
sbb
enter
stc
call
jae
cld
test
data16
mov
add
ljmp
pop
push
pop
je
dec
lock
push
ja
cmp
add
adc
and
enter
rolb
add
aaa
call
sbb
push
ret
andl
pop
loopne
fdivl
jmp
xchg
add
xor
lods
jl
adc
filds
add
xchg
or
mov
sti
pop
roll
push
push
in
xor
loop
cli
roll
shll
xor
xchg
jmp
imull
lea
xor
jg
jge
cmp
jle
mov
fdivrs
sbb
shrl
push
or
jne
lahf
jne
addr16
pop
jge
mov
pusha
mov
jae
push
mov
sub
adc
flds
fwait
iret
add
cmpl
xor
test
push
arpl
xchg
adc
jmp
and
jg
lods
dec
incb
jo
cwtl
pop
das
add
or
and
fstpl
jmp
jp
jle
xchg
pop
cmp
mov
ret
mov
dec
movsb
and
xor
jge
lea
mov
and
cmp
add
push
call
push
jns
xor
sbb
adc
pusha
jae
ljmp
push
and
pop
orb
dec
fbstp
leave
pop
cmp
lea
stos
xchg
retw
mov
outsb
jg
push
jno
scas
out
decb
dec
popa
cmp
jl
mov
ss
decl
sub
mov
and
and
repz
jo
shr
add
inc
dec
jne
and
bound
cltd
divb
push
push
adcw
lcall
pop
inc
sub
mov
iret
adc
aam
call
inc
das
jp
ret
jne
mov
fadd
clc
cmp
dec
call
loope
jle
mov
cmp
inc
imul
mov
dec
mov
orb
sbb
cmp
add
inc
and
jo
rcr
cltd
jno
mov
add
sbb
mov
mov
loop
cld
sub
cmp
clc
xchg
jecxz
shll
xorb
mul
jno
test
mov
sub
xorb
fs
sub
or
mov
dec
lea
pop
push
mov
add
adcb
cmp
dec
mov
add
mov
mov
call
mov
in
repz
cmp
jg
mov
inc
mov
xchg
stos
xor
jbe
sub
aas
addr16
mov
or
movsb
repz
xor
mov
add
faddl
mov
xchg
inc
add
test
stos
jl,pn
mov
mov
cmpsl
aam
addl
adc
test
add
sbb
add
or
sbb
jg
inc
pop
jmp
cmpl
push
mov
pop
xchg
or
sub
clc
mov
mov
or
mov
dec
incl
mov
cmp
pop
adcl
sub
inc
aad
push
or
mov
and
add
lods
or
or
aam
movsb
mov
fdivr
xchg
jne
loopne
scas
insl
insl
out
sub
pop
negl
mov
call
std
jp
add
lahf
movl
mov
cld
dec
les
out
lds
push
adc
dec
mov
mov
pop
shr
push
fs
xchg
add
push
arpl
cmpb
mov
jmp
add
testb
or
inc
xor
fmuls
mov
xor
shr
stc
push
cs
mov
lods
pop
xor
pop
sub
pop
add
je
dec
pop
inc
out
stos
test
pop
push
mov
dec
out
and
sbb
or
or
or
jo
jbe
adc
js
inc
test
jne
ret
movsl
stc
mov
andl
cmpsl
mov
mov
sub
bound
adc
cmovno
nop
sbb
mov
dec
mov
jb
inc
xor
push
jo
pop
pushl
inc
sbb
pop
sbb
lods
mov
mov
push
outsb
add
ficoml
xchg
test
cmp
add
mov
push
mov
xor
adc
fistpl
push
ret
jne
mov
inc
jp
enter
or
inc
or
leave
push
or
cld
pop
out
shlb
jne
mov
dec
mov
sarb
mov
jo
repz
das
in
inc
mov
mov
inc
jecxz
jmp
jbe
inc
add
add
cwtl
aam
xor
rorb
jmp
xchg
fmul
es
sbb
inc
hlt
mov
addr16
cmp
lea
cmpl
sub
sub
push
roll
sub
ret
je
subl
pop
sbbb
add
push
jecxz
cli
xor
outsl
nop
lea
push
clc
or
sub
xor
add
out
dec
ret
popf
pop
sar
sub
jb
inc
push
mov
or
mov
shl
ljmp
shl
movl
pop
dec
out
loopne
lea
xchg
dec
sub
fisttpll
jae
mov
dec
jae
inc
adc
or
fs
adc
loop
fimull
pop
mov
dec
mov
mov
mov
cmp
jnp
fbld
and
xor
sbb
shll
jae
mov
outsb
or
add
mov
fmuls
ss
icebp
imulw
data16
test
cmp
addb
or
incb
sbb
in
fildl
pop
clc
pop
rolb
adc
mov
sub
adc
repz
out
pop
adc
xor
inc
paddw
inc
xchg
add
fcmovne
add
adc
pushf
jl
out
adc
mov
loopne
adc
sub
xchg
xor
mov
and
dec
add
pop
int
xor
outsb
push
je
das
lods
cmpb
inc
fwait
das
mov
orb
loopne
sbb
xchg
jl
add
sbb
xchg
dec
mov
and
in
xchg
mov
mov
add
dec
mov
insb
ss
mov
lea
loopne
cmpsb
add
icebp
repnz
dec
dec
dec
repz
cmc
testb
dec
idiv
stc
cli
dec
dec
dec
dec
sti
cld
std
decb
dec
dec
jmp
loope
dec
dec
dec
dec
jecxz
in
repz
dec
dec
out
nop
cwtl
push
jmp
mov
in
in
pushf
pushf
pushf
pushf
out
out
rcl
pushf
pushf
pushf
pushf
rcl
aam
pushf
pushf
pushf
pushf
xlat
fcomp
pushf
pushf
pushf
pushf
fcmovu
pushf
pushf
pushf
pushf
rol
pushf
pushf
pushf
ret
lds
enter
pushf
pushf
lret
int
pushf
pushf
pushf
into
iret
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
cmpsb
cmpsl
test
pushf
pushf
pushf
pushf
stos
stos
lods
lods
sbb
jecxz
scas
pop
xchg
icebp
pop
jb
xchg
xchg
clc
push
movsb
xchg
or
or
insb
gs
nop
push
ret
lcall
push
or
popa
jb
push
int
rclb
xchg
add
jo
sbb
daa
xchg
testl
mov
inc
js
gs
imul
outsb
xchg
xchg
repnz
mov
push
xor
push
inc
inc
bound
je
mov
adc
xchg
cmp
ds
adcl
cmpsl
ja
dec
inc
rorb
mov
incl
leave
cwtl
lock
dec
jne
dec
dec
gs
addb
hlt
scas
sbb
inc
mov
dec
outsb
mov
scas
xchg
dec
or
dec
jb
je
dec
adc
popa
cs
movsb
dec
mov
xchg
add
xor
adc
xchg
add
popa
or
inc
xchg
add
dec
fisubl
ret
push
sbb
pop
jg
cmp
inc
imul
jns
gs
nop
mov
cmp
push
popa
outsb
addr16
or
add
mov
cmp
out
outsb
jbe
jb
insb
outsl
ja
push
push
cmp
nop
scas
rclb
mov
xchg
sbb
pushf
dec
ljmp
popa
insb
imul
popa
popa
or
jns
jle
gs
jo
adc
inc
or
shll
and
scas
enter
add
push
push
outsb
fs
cwtl
and
in
cwtl
and
xchg
mov
outsl
imul
loopne
jl
pop
or
inc
mov
jae
fidivs
push
add
in
shrl
cltd
xor
xor
inc
test
jae
faddp
add
adc
jbe
xchg
cmpsl
pusha
mov
jb
mov
gs
nop
scas
in
sbb
add
in
push
inc
add
jb
imul
lcall
dec
ficoms
aam
inc
scas
mov
mov
imul
mov
cld
lds
or
lock
inc
popa
fsubl
incl
mov
enter
sbb
xchg
mov
mov
mov
push
data16
cmpb
pushf
adc
pushf
adc
mov
push
stos
push
scas
leave
dec
push
enter
nop
call
data16
mov
loope
pushf
test
add
aaa
xor
rorb
or
mov
notb
jae
inc
insb
jae
inc
test
dec
lods
addl
mov
ds
cld
jg
bound
hlt
inc
adc
jb
popa
fs
outsl
adc
sub
outsb
les
int3
addr16
jo
mov
pop
pinsrw
insb
nop
adc
or
aam
outsl
sbb
push
push
pop
loopne
sahf
out
xor
out
filds
sbb
push
loopne
sbb
ja
sbb
fwait
cld
push
nop
out
and
popf
cld
xor
cmp
in
push
dec
mov
imul
inc
pusha
stos
xchg
push
fadd
dec
mov
mov
outsb
arpl
cmp
fdivr
xchg
inc
cs
xchg
shr
div
sub
mov
add
xchg
lret
mov
mov
xor
data16
call
fsubl
aas
call
xlat
js
shr
adc
aam
dec
or
rcl
dec
push
pop
dec
pop
sub
sbb
or
or
pop
fwait
mov
fsubs
scas
popf
test
and
mov
dec
add
pushf
mov
sub
test
les
jo
repnz
mov
sti
mov
inc
inc
dec
sub
jg
add
imul
or
or
cmpsl
lock
mov
shr
in
jg
or
leave
repz
je
movzbl
push
push
js
add
sub
mov
pop
sub
adc
loop
js
in
jle
lock
jne
inc
jne
inc
inc
ds
inc
or
pop
incl
or
std
dec
movsl
push
out
and
sti
je
loopne
out
pop
addl
sub
pop
cwtl
sbb
lock
ret
lahf
xchg
add
mov
test
mov
je
or
jnp
push
cmp
cmp
mov
sub
pop
ret
hlt
or
outsb
sub
add
inc
mov
mov
cs
fnstcw
push
adc
loop
push
push
jg
ljmp
dec
jno
andl
jl
jmp
jbe
adc
sbb
ficomps
dec
sub
clc
push
sub
inc
imul
mov
adc
mov
pop
adc
sbb
sub
je
decb
shll
sub
xchg
cltd
add
inc
mov
jge
or
sbb
or
jae
cld
loope
xor
mov
leave
jne
add
jns
neg
hlt
mov
dec
mov
ret
fisttps
subb
push
xor
xor
ljmp
add
pop
mov
push
jne
pop
pop
sub
sub
jbe
add
mov
sub
jmp
mov
mov
divl
dec
jne
push
mov
sub
xor
push
outsb
cltd
int3
mov
pop
and
sub
xor
mov
jmp
cmp
jo
pushl
mov
negl
addl
pop
cs
or
insb
xchg
sub
dec
inc
outsb
or
lock
orw
dec
imul
jecxz
mov
cmpsl
popa
outsb
bound
or
pop
outsl
jg
push
and
fistps
ret
add
insb
fistps
insb
rorl
fdivr
imul
xor
aam
lods
and
rcrl
loope
insb
dec
lock
ffree
ffree
ffree
pop
aad
add
jns
adc
jle
and
pusha
mov
mov
daa
and
cmp
add
pushf
jo
inc
push
push
mov
adc
clc
and
adc
xchg
rclb
ret
cmp
mov
hlt
dec
aam
mov
inc
lock
mov
push
xor
push
loope
js
xor
sahf
push
or
or
fimull
sti
sahf
jo
imul
insl
xchg
inc
lock
mov
fisubs
outsl
or
mov
add
std
inc
dec
shlb
mov
adc
mov
push
dec
mov
adc
dec
and
push
dec
int
hlt
cld
cli
outsb
imul
test
scas
and
lds
dec
mov
adc
movsb
xor
sbb
mov
lcall
mov
jge
loopne
cmpsl
movb
aam
and
sbb
or
mov
xchg
lock
loopne
cmp
jmp
mov
or
scas
test
aam
mov
lea
pop
adc
add
mov
insl
lock
in
lock
setne
jmp
movsb
pop
push
push
xor
or
movsb
in
pop
jb
xlat
addr16
inc
mov
xchg
lock
add
test
xor
add
mov
sub
lock
inc
push
loop
adc
mov
and
dec
mov
jle
mov
clc
or
add
popf
push
nop
out
cmp
ja
cwtl
xchg
test
incb
xor
push
adc
or
sub
pop
cwtl
add
sub
pop
mov
or
mov
out
add
orb
cmpsb
push
ja
or
cmp
push
or
bound
add
mov
les
adc
fadd
in
mov
mov
mov
loop
xchg
mov
push
icebp
sbb
insb
das
add
cld
outsl
add
xor
fs
je
loop
ds
adc
xchg
xor
xor
xor
testb
adc
cmpsb
push
divl
popf
enter
push
hlt
and
jb
dec
inc
cld
or
scas
sbb
fistpll
pop
pop
outsl
loope
imul
adc
dec
or
inc
ret
push
pop
dec
push
jo
repnz
pop
loop
fs
mov
loope
cmpl
inc
sbb
addr16
pop
dec
pop
cld
shlb
inc
fsub
push
inc
loopne
mov
adc
daa
in
pop
inc
dec
xchg
mov
or
jmp
mov
or
push
inc
mov
ret
lods
ffreep
jne
clc
not
and
mov
aad
hlt
jo
loopne
push
adc
push
addr16
add
adc
fsubr
add
lock
fistps
je
jae
pop
ss
push
outsl
sub
adc
iret
addr16
ret
mov
sbb
inc
iret
jl
pop
jae
inc
popa
cld
out
sub
fcoml
sbb
in
cmp
je
insb
mov
decl
mov
mov
lods
mov
and
mov
fs
adc
out
lds
pop
pushf
push
dec
dec
jg
xchg
icebp
adc
shrl
dec
inc
scas
cltd
and
and
or
jmp
addr16
das
lods
stos
shrb
mov
inc
mov
or
lock
push
mov
cmpb
adc
sti
jb
push
faddl
dec
ret
incl
jp
push
fwait
das
andps
inc
xor
lods
mov
rcr
or
xchg
daa
adc
imul
push
pop
repz
test
push
push
hlt
clc
inc
jp
out
cld
push
jnp
cmpsl
cld
imull
outsb
stos
addb
pop
mov
adc
mov
mov
dec
or
xor
popa
or
adc
test
and
testb
add
inc
mov
add
or
pop
pop
mov
push
push
decl
pushf
mov
pop
cmp
inc
adc
outsb
sbb
stos
sbb
vmptrld
sub
es
jg
jnp
outsl
mov
andb
pop
movzwl
pop
insl
outsl
adc
shr
sbb
paddd
call
mov
clc
fstpl
fwait
lock
add
cld
lcall
xlat
aas
mov
or
fmull
jo
mov
lock
aaa
or
sub
and
jo
gs
dec
divb
or
mov
pop
mov
cli
mov
or
inc
add
inc
insl
push
push
in
lods
sbb
pusha
mov
fsubrs
loop
or
adc
out
sti
add
shl
inc
divb
cli
dec
mov
cmpsb
ljmp
push
icebp
test
xchg
pop
add
add
xor
inc
push
and
ffree
xchg
sar
cmpsb
inc
jb
int3
lock
mov
imulb
lea
daa
and
xchg
shll
rorb
dec
not
mov
pop
pop
mov
test
mov
add
pop
scas
je
rcrl
ret
jl
aam
jmp
lret
dec
test
jne
inc
sub
and
cli
mov
fldenv
jmp
pusha
pop
test
pop
sub
pop
adc
adc
mov
iret
push
ds
xlat
mov
xor
xor
repz
mov
mov
rolb
jae
outsl
inc
push
pop
cmp
cli
pushf
inc
sub
and
fisttpl
sub
xor
mov
rorb
mov
xchg
pop
jmp
test
in
push
fldl
shll
scas
push
inc
shll
addl
jb
inc
dec
je
mov
mov
popa
pop
sub
jbe
sbb
pop
inc
lods
pop
jl
cli
mov
mov
neg
cli
pop
mov
jne
jo
imul
push
pop
fmuls
cmp
movl
imul
lock
or
xchg
sbb
stc
je,pt
call
jecxz
inc
gs
adc
xchg
lods
fdivs
ja
das
loopne
test
fxch
cmp
jbe
mov
ds
rorl
call
enter
pop
and
mov
add
cmp
adc
cld
stos
loopne
and
jo
mov
insb
push
lcall
and
andl
sbb
adcb
divl
test
ret
xchg
push
cli
shrb
jle
and
movb
cmovb
adc
dec
add
fimull
and
push
movsb
and
sub
lods
mov
imull
jmp
test
inc
out
add
mov
inc
mov
cmp
jne
cs
and
lods
jmp
adc
mov
aas
cmp
sub
sub
mov
shll
and
push
fs
sub
jae
add
outsb
loopne
pop
mulb
rep
sbb
pop
add
or
scas
es
testb
mov
pop
cli
out
mov
cmp
imul
mov
add
push
mov
in
dec
lret
inc
or
fsubr
jg
decl
cld
or
jl
je
ret
je
jmp
ret
and
mov
xchg
add
dec
xor
push
pop
pop
push
lea
mov
lcall
mov
push
mov
sub
pop
movsl
cmp
push
push
push
aaa
das
xchg
neg
mov
lock
jb
mov
testl
out
testb
aad
dec
fsubrs
shl
cld
cmpsl
or
outsb
lret
sub
and
test
les
sbb
or
enter
cmpsl
pop
outsb
enter
adc
xor
jmp
sbb
and
jne
adc
ret
sbb
std
cmpw
jbe
mov
stos
xor
lock
xor
inc
inc
in
and
fdivrp
loopne
jmp
cmpsb
cmp
jmp
or
aas
and
mov
je
cld
call
pop
js
mov
adc
add
outsb
add
cmp
ja
aad
cmp
or
push
jne
cmp
jecxz
dec
mov
rcrb
adc
push
leave
rorl
cmp
lods
out
push
mov
jge
jbe
mov
outsb
mov
dec
inc
je
mov
or
je
mov
dec
jnp
outsl
inc
je
mov
dec
je
dec
jl
mov
loop
out
add
adc
cmp
jbe
mov
nop
loopne
sbb
jnp
pop
pop
inc
fdivrl
js
sub
mov
mov
mov
dec
roll
mov
mov
xchg
ret
xor
hlt
hlt
push
les
mov
ljmp
xchg
or
movsb
push
fidivl
and
test
sbb
cwtl
ror
mov
mov
or
add
mov
xor
adc
test
adc
lret
adcb
nop
rcrl
xchg
test
adc
inc
ret
xchg
pop
testb
jge
sbb
jnp
inc
lea
add
or
filds
cmp
jg
cmp
jl
jmp
add
lods
mov
sbb
test
adc
lea
mov
xchg
pop
jmp
lea
stos
add
outsl
push
xor
stos
or
add
and
mov
mov
neg
jmp
or
enter
xchg
push
pop
or
es
cmp
bound
dec
and
or
jg
dec
mov
stos
cmp
jne
pop
pop
pop
int
ss
push
push
push
mov
scas
add
mov
push
and
lods
repz
mov
rol
insl
mov
sub
and
add
cmp
pop
jle
mov
pop
loop
cs
daa
dec
jge
add
adc
test
rorb
mov
mov
aaa
mov
rcl
sub
mov
mov
lea
mov
sub
mov
mov
push
add
ja
movswl
out
mov
jle
lret
popf
pop
addb
notb
or
rorl
jmp
enter
push
mov
inc
stos
dec
dec
inc
dec
mov
add
inc
dec
lods
or
xor
jge
fcmovnu
and
jo
ret
std
mov
aam
cld
stos
or
adc
jg
cmp
jl
pop
sbb
stos
or
mov
stos
neg
sbb
std
jp
stos
jmp
inc
inc
mov
loop
movlps
sti
inc
stos
pop
pop
inc
clc
dec
test
mov
push
pop
jmp
mov
xchg
mov
out
xor
sbb
sub
pop
lock
push
mov
mov
mov
inc
gs
mov
insl
ds
adc
mov
mov
sub
scas
je
mov
dec
mov
repz
lea
clc
mov
test
jne
sbb
fsubr
rol
adc
stos
xor
call
lock
sti
add
je
inc
jne
pop
mov
ret
fildl
repz
or
repnz
cmp
add
lea
sub
or
inc
lock
fiadds
push
push
push
cmp
fmuls
or
or
sbb
cli
notb
add
or
loop
push
mov
test
sub
mov
bnd
and
inc
add
and
fcomi
jge
and
adc
and
sub
inc
sub
fdivr
jbe
sub
sbb
into
cmp
sub
sub
jns
fs
xor
sub
xor
fsts
loopne
and
movsl
testb
dec
xchg
out
add
mov
shr
and
or
add
scas
movsb
cmp
testl
ds
sub
cmpl
or
xor
inc
inc
push
movsb
fldt
je
push
mov
outsl
imul
adc
out
fabs
push
call
mov
pop
frndint
rcr
scas
or
fstsw
mov
mov
testb
je
fidivl
jne
lea
mov
or
sub
nop
shr
and
scas
jo
adc
xor
stos
sub
or
pushl
cmp
pushf
or
cmpb
jb
ja
in
and
dec
js
decb
and
pop
lock
add
add
jmp
mov
loopne
sbb
je
notb
push
rorw
ja
ljmp
xchg
out
mov
mov
xchg
adc
jo
sub
test
test
or
decl
das
sbb
adc
jl
mov
filds
jl
sbb
jae
dec
add
fldt
loopne
push
in
insl
or
mov
ret
xlat
fidivl
xor
lods
xor
sbb
jge
mov
pushf
and
jne
dec
sub
cmp
enter
and
pop
lock
push
ljmp
enter
cmpb
pop
xor
divl
pop
jmp
call
mov
iret
inc
orl
and
mov
fwait
test
cmpsb
sti
dec
push
icebp
mov
sub
mov
daa
out
jbe
mov
jne
inc
sbb
cmp
icebp
je
and
fistpll
sub
add
rolb
jp
cwtl
jne
mov
sahf
mov
les
add
add
push
fistpll
jmp
fstpt
test
test
push
add
and
push
int3
jbe
jecxz
addl
cmp
jae
fimull
cmpsl
fiaddl
jmp
aaa
mov
lahf
inc
imul
push
push
fldl
pop
lock
imul
push
cmp
aaa
add
sbb
add
sub
test
paddsb
shr
or
faddl
mov
dec
and
mov
or
or
testl
negl
es
sub
fstpl
fwait
sub
push
fnstcw
leave
mov
mov
mov
fisttpl
fldl
inc
orb
adc
mov
mov
jmp
adc
and
in
add
clc
out
jbe
adcb
negb
jae
or
or
cli
cmp
inc
stc
inc
mov
lods
dec
sahf
jae
les
out
ss
aaa
sbb
shrb
pusha
ljmp
adc
call
loopne
in
xchg
fildl
xor
sbb
add
sbbb
rolb
push
lret
movsb
dec
fists
sahf
xor
loop
inc
iret
pop
mov
jecxz
mov
fnstsw
sti
ret
pop
ja
cmc
add
in
insb
pushl
fs
or
btc
dec
mov
and
test
and
ficompl
insb
call
pop
enter
outsl
roll
push
sbb
and
in
dec
pop
adc
mov
dec
push
int3
sub
cmc
or
push
gs
adc
cmp
movaps
lock
aam
cli
xchg
mov
incb
jb
outsl
mov
ja
and
jb
or
jb
ja
sbb
insb
add
repnz
ja
shlb
mov
push
ja
pop
pop
pusha
incl
pop
dec
incb
jne
sub
dec
mov
aas
cltd
testl
insl
push
sbb
add
sub
ds
ds
add
pusha
ret
push
pop
mov
sti
jne
inc
sbb
iret
std
std
sahf
cmp
sbb
xor
or
pop
pop
out
loope
inc
inc
ja
cmp
and
call
jg
mov
mov
mov
or
fadds
xchg
movsl
ds
mov
sbb
dec
data16
inc
fstpt
stc
mov
add
jl
addl
add
jge
shl
lock
jo
mov
add
or
dec
lock
negb
fisubl
cmp
fcoms
ljmp
add
test
jl
mov
sub
xchg
cwtl
mov
jbe
add
mov
js
mov
dec
mov
cmp
jb
adc
sub
mov
jmp
outsl
sbb
clc
cmpsl
cltd
sbb
hlt
mov
stc
and
cmpsb
popl
sub
fs
pop
aaa
xor
push
mov
add
stc
sbb
mov
dec
pusha
push
rol
add
pop
xor
push
in
pop
out
jns
or
sbb
sti
inc
mov
sub
jmp
cmp
sahf
mov
sub
xor
mov
ret
inc
stos
inc
mov
out
mov
js
mov
push
and
sub
pop
and
sbb
ret
dec
push
adc
adc
divl
mov
push
xchg
je
add
and
xlat
loop
cs
popa
sub
cltd
cld
sub
stos
inc
lds
inc
fisubl
daa
pusha
xchg
and
jnp
add
dec
ljmp
sbb
fildl
rcll
rclb
or
mov
inc
in
pop
xchg
loopne
loopne
pop
xchg
inc
cli
push
out
mov
xor
into
add
scas
push
or
je
and
cs
mov
add
dec
sti
je
xorb
add
cmpb
jne
mov
xorb
or
lea
iret
add
jbe
push
lock
repnz
test
in
inc
in
add
jecxz
loopne
stc
mov
in
jge
call
or
jecxz
scas
adc
scas
call
add
add
adc
lret
gs
or
mov
enter
inc
sahf
lock
out
daa
je
sti
stos
mov
add
cmp
es
push
pop
je
fistl
mov
xchg
push
mov
aas
dec
icebp
mov
pop
ret
and
aas
inc
mov
cmpsb
add
insl
cld
add
lock
popa
call
imul
adc
sub
in
and
cmp
xor
lock
adc
mov
pushf
mov
movsb
sarl
mov
ret
xor
or
cmpsl
arpl
cmp
and
sub
sarl
or
addr16
iret
in
adc
pusha
cwtl
ret
les
cmp
push
and
jg
int
inc
push
les
jmp
sbb
loope
mov
inc
cmpb
jne
push
xchg
ja
add
les
lret
sub
add
lahf
fadds
and
or
add
or
into
loopne
or
pop
ud1
mov
adc
sub
incl
push
adc
jecxz
cmpsb
add
adc
lret
movsb
loop
cmp
xchg
mov
sub
into
push
out
icebp
jmp
adc
sbb
mov
in
repnz
jns
mov
test
lahf
sub
xchg
dec
pop
mov
pop
cmp
jne
mov
jecxz
lcall
cmp
xchg
clc
mov
lds
jmp
dec
fidivs
iret
or
or
push
jge
add
add
or
or
or
xchg
xorb
jns
pop
ret
enter
out
lcall
movsb
jle
sahf
testl
roll
cmp
or
and
and
or
ret
cmp
cltd
shl
std
inc
mov
les
popf
dec
push
lea
sahf
dec
add
pop
aam
jae
or
ret
dec
fsubrs
dec
sbb
sbb
xor
lock
insl
add
test
mov
xor
leave
mov
jp
je
add
jmp
out
aad
orb
push
mov
mov
daa
inc
add
mov
lods
test
adc
es
dec
enter
and
mov
call
fidivl
xor
sbb
or
push
das
sub
jl
push
add
adc
in
cmpb
je
or
push
jmp
sub
je
imul
pop
pop
je
jmp
cmpb
dec
cmp
pop
std
jle
int
add
sub
and
sbb
mov
cmp
rolb
jmp
cmp
xor
mov
mov
sub
popa
mov
xlat
push
push
mov
ret
dec
push
data16
lea
inc
mov
or
jle
push
into
test
xorb
fcoms
pop
inc
call
nop
out
add
in
scas
and
int3
xchg
dec
jb
lret
in
js
mov
add
into
cli
mov
sub
cmpsl
add
sbb
cmp
addl
pop
scas
lods
mov
jns
add
ja
xor
mov
lret
sarb
ret
and
nop
add
sub
je
xor
in
sbb
xchg
xchg
cltd
int3
add
shlb
inc
sub
inc
pop
sbb
ret
nop
push
sub
rol
adc
cmpsl
jns
add
or
or
lods
into
jge
or
jo
popf
add
mov
cltd
push
imul
mov
jmp
sbb
push
test
fucomi
add
sub
add
aam
push
cld
rclb
adc
gs
sub
pop
push
jmp
adc
adc
stos
sbb
clc
inc
mov
rorl
dec
lret
loopne
fcomp
scas
mov
jmp
inc
dec
fnstcw
sbb
das
push
dec
repnz
adc
fildl
montmul
cmpsb
inc
sbb
cltd
adc
sub
iret
rclb
inc
ret
jne
or
mov
sbb
lea
dec
pop
pop
or
sbb
mov
cmp
adc
cmp
shlb
xchg
and
iret
pop
cld
push
dec
adc
xchg
mov
add
je
mov
inc
pop
mov
int3
mull
scas
sbb
fwait
movsb
xchg
pop
mov
mov
cmpsb
add
add
xor
data16
xor
ret
adc
xor
sub
jae
xor
ljmp
sbb
ret
test
add
dec
push
xor
shl
xchg
mov
xchg
and
or
movsb
sub
xor
cmp
xor
andb
fcoms
fsubrs
xorl
push
das
cmpsl
dec
les
cmp
and
push
mov
jbe
xor
mov
fcompl
in
incl
add
jne
incl
movsb
pop
fistl
xchg
or
jmp
inc
lcall
dec
std
and
sub
je
lcall
data16
je
jmp
pop
sbb
push
popa
sbb
push
jle
push
inc
mov
ss
clc
jle
fadd
addr16
jb
push
add
aad
mov
pusha
mov
mov
jg
mov
or
pop
sub
mov
imul
adc
sahf
js
or
pop
sub
cmpsb
xor
pop
jmp
ret
xlat
addr16
jmp
aam
pop
mov
pop
jne
xor
xchg
andl
adc
cmp
jg
sti
jl
mov
xor
sub
add
fs
sub
fs
and
add
mov
add
dec
cld
gs
ret
psubusb
sbb
push
inc
push
pop
in
js
andl
movl
pop
mov
inc
xchg
cmc
into
and
add
push
and
ds
jp
jne
or
insb
sti
fadds
dec
test
inc
lea
mov
xor
sbb
mov
pushf
popf
ret
bound
and
or
xor
hlt
lods
int3
enter
mov
test
enter
dec
sub
jbe
sbb
sahf
lret
add
add
lock
shl
inc
shll
divb
jb
and
cmp
push
mov
and
fldl
sub
call
pushf
sbb
pop
jae
ss
repnz
cltd
nop
out
sbb
jmp
int3
stos
js
clc
pop
push
fsubl
iret
or
jmp
cmpb
ja
fbstp
movlps
push
test
mov
pop
data16
div
idivl
lock
cmpb
jle
and
fs
jne
adc
xchg
mov
add
or
xor
ss
sbb
or
imul
test
roll
fwait
mov
add
cwtl
pop
loop
jmp
ss
cltd
or
sarl
pop
test
push
add
push
fldt
das
ficoms
fadd
inc
cwtl
add
fsubrs
xor
sbb
push
out
dec
push
test
push
shlb
inc
sahf
mov
inc
cwtl
or
xchg
fnstsw
add
pop
xchg
mov
hlt
fildl
lea
pop
test
add
pop
aam
and
mov
sub
pushf
or
and
mov
or
or
pop
fisubrl
fs
lods
ds
inc
add
xor
or
data16
mov
mov
orl
add
orl
nop
inc
cmp
cmp
cld
jge
jno
movsw
inc
ja
ret
cmp
add
shrb
push
push
add
add
stc
cwtl
test
adc
in
into
xor
scas
dec
inc
xor
push
rorb
mov
push
xchg
into
mov
sub
lods
ss
xchg
cmp
xchg
js
in
push
sbb
inc
jmp
mov
adc
mov
outsl
dec
inc
fucomp
push
in
test
call
pushf
mov
jno
push
lock
xchg
cmc
adc
pop
dec
fsubrp
or
cmp
xor
push
fadd
jne
sbb
add
push
daa
frstor
jg
or
pop
fwait
jmp
sbb
dec
je
sbb
jo
pop
inc
es
pusha
adc
push
push
mov
mov
jmp
mov
sub
jb
xor
movd
or
xchg
fistpl
fsts
cltd
call
or
ret
rol
mov
out
into
lods
stos
pusha
jge
cmpl
and
in
adc
push
orl
fs
fsubl
es
leave
xchg
push
cwtl
rolb
mov
cld
mov
cmc
adc
cmp
insb
sub
pop
inc
sbb
fsubrl
pop
dec
push
add
xlat
xlat
adc
jne
sarb
mov
cli
mov
mov
mov
inc
dec
lret
test
sti
sub
fcoms
stc
nop
lret
les
lock
inc
fdivrs
sti
or
add
pop
add
add
xchg
push
in
hlt
xchg
popa
aaa
loopne
add
loope
popa
subl
in
add
xchg
call
xlat
fimuls
faddl
test
sbb
js
mov
pop
je
xchg
cmp
aad
icebp
or
hlt
add
sahf
and
loope
xor
pop
xchg
mov
xchg
subl
arpl
lods
mov
dec
cmp
sarl
nop
or
fnstenv
add
cmpsl
mov
insb
sub
xor
fdivs
and
add
sbb
push
aam
xor
or
ret
hlt
push
push
cmp
or
cmp
xchg
and
jae
cvtdq2ps
inc
in
jne
push
pop
cld
nop
orb
fldt
or
and
clc
test
add
or
push
movsl
mov
into
adc
jecxz,pn
mov
jmp
mov
sub
je
sub
je
test
test
add
std
lcall
negb
cs
sbb
mov
mov
and
pop
adc
cmp
lods
add
jg
mov
frstor
add
and
jmp
dec
inc
add
sti
lret
enter
ret
add
push
fwait
pop
repz
je
xchg
xchg
insb
jne
xor
pusha
rorb
or
jns
mov
fs
pop
xor
add
sbb
and
ja
jmp
pop
sub
and
outsb
sub
pop
test
stc
lea
test
out
sub
mov
loopne
test
sub
pop
jne
pop
out
iret
pop
mov
roll
and
dec
inc
pusha
aaa
jg
push
ret
cmp
pusha
jmp
cltd
dec
out
or
popf
gs
dec
mov
add
lahf
ljmp
repz
mov
mov
or
sub
add
sub
and
sarl
mov
push
add
cs
add
out
cmp
xor
icebp
mulb
or
push
fwait
sub
sbb
lods
add
cmp
mov
push
xor
sub
lahf
dec
mov
sarb
mov
enter
stc
push
out
stos
aaa
pusha
or
dec
or
shrb
mov
or
dec
addr16
cmp
mov
push
sub
and
sub
sbb
mov
mov
mov
jnp
add
int3
xor
jmp
push
movsl
leave
inc
mov
pushf
add
dec
pusha
jmp
scas
ficompl
adc
inc
pop
push
or
add
sub
push
stos
dec
gs
das
adc
mov
and
jbe
sbb
and
add
mov
and
mov
and
and
mov
dec
fimuls
jb
or
mov
lds
mov
inc
sub
loopne
xchg
add
movb
fnstenv
test
es
xchg
pop
add
lock
cmp
repnz
pop
or
and
mov
adc
or
insb
inc
or
hlt
pop
pop
adc
fmuls
or
xchg
mov
jl
std
and
shll
sbb
sti
push
jg
cmp
repnz
icebp
sbb
test
cld
jge
test
push
sbb
scas
int3
push
mov
clc
imul
jp
pop
loopne
jle
pop
add
rcl
lret
lcall
adc
ljmp
adcb
mov
pop
add
aaa
sbb
js
and
mov
or
fildll
mov
movsl
pop
mov
pop
mov
lods
adc
xchg
push
lods
loope
orb
mov
mov
push
xchg
cmp
cmpsb
mov
fimull
mov
or
fisubrl
clc
dec
in
push
loopne
jle
loopne
lcall
ficoms
loope
hlt
adc
or
cmc
lcall
insl
add
push
and
pop
das
loopne
lea
jle
lretw
jns
jo
xchg
lret
lret
push
mov
jb
orl
inc
in
cmp
je
jmp
xor
inc
jae
jb
xor
and
sbb
ret
mov
add
push
pop
or
or
push
jno
or
push
idiv
loope
and
jns
mov
lcall
outsb
adc
mov
inc
mov
add
repnz
push
pop
cld
cmpl
mov
movaps
jl
xchg
or
xor
jae
cmp
mov
or
jge
data16
jmp
test
jl
and
add
sbb
fs
xor
cmp
adc
dec
xor
push
or
shrb
rcrb
jae
or
enter
stc
scas
mov
movsb
imul
loopne
pop
outsb
lea
outsl
cwtl
call
lret
xchg
jge
mov
mov
movsb
test
add
leave
leave
xchg
nop
xor
nop
xchg
enter
in
jb
sub
adc
dec
nop
dec
loope
pop
aad
push
cltd
mov
mull
cld
pop
lods
ljmp
std
rolb
or
dec
push
addl
lret
das
push
xor
dec
hlt
add
sub
add
cmovle
lahf
xchg
pop
cs
and
xchg
add
push
and
mov
sbb
incl
add
cmp
scas
dec
fnstcw
pop
xchg
dec
mov
js
or
sub
ret
mov
adc
call
pusha
sbb
sbb
inc
loop
pop
das
xchg
cmp
sbb
and
out
mov
sub
push
and
ds
in
mov
jnp
inc
or
adc
daa
filds
rolb
inc
aaa
mov
and
ss
nop
sbb
xor
push
xchg
andl
insb
pushl
mov
sti
push
xlat
rclb
or
lret
or
and
ss
repnz
fdiv
push
adc
jp
loopne
adc
sbb
jo
bswap
mov
jl
rdmsr
shr
jne,pt
cmp
add
jne
bound
and
mov
jo
sub
inc
push
pop
push
jcxz
or
jae
inc
mov
and
out
xchg
mov
outsb
movsl
xchg
sahf
sub
cli
dec
pop
xor
jmp
adc
sub
xorl
out
dec
jae
or
adc
cmpsb
push
popf
clc
or
inc
shlb
pusha
push
call
mov
add
dec
or
testl
pop
dec
push
adc
push
data16
or
sub
and
sub
add
inc
outsb
add
out
stos
test
jle
cmp
mov
push
dec
pushf
add
lret
je
dec
mov
ret
in
add
push
scas
xor
cmp
daa
sub
lock
adc
xor
jl
or
leave
ljmp
inc
jbe
in
pop
jg
mov
scas
das
adc
mov
and
push
add
and
push
inc
push
ljmp
movsb
push
mov
sarb
or
mov
cmc
push
sahf
cmp
mov
pop
hlt
jge
jl
xchg
push
addr16
popf
and
repz
sbb
sbb
and
mov
aas
mov
aaa
or
adc
cs
sbb
xchg
test
cmp
push
jg
xchg
or
or
in
mov
fwait
movl
add
fldt
fs
jge
pop
aas
xor
mov
mov
push
jmp
pop
fsubrs
ret
sub
mov
pop
jo
movsb
bound
jb
fwait
and
dec
sbb
ret
jae
xor
test
adc
shrb
out
pop
leave
lods
out
jmp
pop
sbb
sbb
pop
sub
in
add
mov
ucomiss
pushf
push
cmpsl
in
xchg
add
xchg
and
movsl
mov
pop
jg
inc
xchg
pusha
loop
scas
outsl
loopne
mov
mov
mov
incb
inc
dec
push
adc
cmc
insl
addr16
sub
in
fsubp
mov
cmp
jl
sbb
js
inc
movsl
daa
adc
jmp
call
push
mov
aad
fldenv
andb
inc
sahf
jge
or
cmp
lods
mov
test
ljmp
subl
jle
cmpb
pop
jp
addb
adc
aad
ljmp
loope
adc
gs
push
fisttpl
push
add
push
push
pop
mov
aaa
bound
xorb
sub
ret
shrb
cmp
jbe
xor
inc
xchg
or
mov
adc
fidivl
lock
daa
enter
cmpsl
mov
scas
xor
or
bound
mov
add
inc
inc
inc
sub
nop
inc
pop
cmpsb
hlt
in
pop
stc
rol
cmp
pusha
les
scas
cmpsl
hlt
xor
scas
adc
in
pop
pop
add
jge
pop
popa
daa
fsubr
push
mov
lock
jg
fwait
dec
xor
scas
aaa
push
mov
sub
jb
inc
mov
in
mov
inc
sti
stos
sbb
lret
xchg
xor
or
insl
jbe
or
cmp
clc
pop
ja
pop
ficoml
lcall
push
ffree
add
insb
or
jo
sbb
xor
add
adc
enter
jo
dec
pop
push
adc
mov
aas
jo
xor
xor
std
pop
mov
das
rep
xor
in
mov
les
mov
pmuludq
push
cmp
ja
xchg
icebp
or
mov
in
ret
mov
popa
mov
xchg
xchg
push
mov
inc
inc
test
pop
jne
lea
jecxz
xchg
cs
add
mov
imul
cmpl
xchg
rorl
outsb
adc
dec
jne
jmp
push
inc
rcr
data16
shlb
mov
dec
pop
arpl
ja
in
cld
fmuls
stc
push
add
pop
cltd
dec
stos
lock
mov
js
insl
fcomps
push
addl
adc
jl
cmp
test
mov
cwtl
xor
sbb
dec
subb
incb
into
or
add
std
and
sub
pop
dec
fwait
nop
out
and
push
scas
in
das
sbb
sbb
mov
rorb
inc
mov
movsb
fmull
sbb
pop
push
mov
in
fcomp
mov
fldenv
shlb
mov
sub
mov
ror
je
sub
push
sbb
les
xchg
adcb
enter
xor
enter
dec
dec
xor
sbbb
and
and
aas
sbbl
rclb
clc
sbb
add
pop
add
push
jge
in
mov
sarl
int3
lock
bound
repnz
sbb
adc
and
int
testl
xlat
xor
insl
add
fs
das
mov
popa
insl
pop
jo
push
inc
push
mov
sbb
jmp
push
cmp
ss
addl
in
lret
lock
inc
orl
mov
nop
loope
lock
in
mov
les
es
lret
insl
in
push
ret
fwait
enter
push
hlt
adc
xor
scas
ret
adc
push
pop
sbb
test
jmp
call
rcrb
pop
sbb
add
sbb
lods
sub
addr16
shrb
push
adc
and
xchg
fists
outsb
imul
cmpsl
fsubr
add
add
and
mov
push
mov
pop
or
and
scas
pavgb
push
or
inc
jb
gs
jo
arpl
js
add
xchg
lock
inc
in
js
xor
pop
dec
ret
xchg
outsl
sbb
pop
out
loope
add
add
sub
pusha
or
lret
jne
inc
cmp
jne
mov
and
ljmp
fstpt
adcl
loop
rcrb
addl
jmp
jecxz
or
fildll
and
hlt
xchg
dec
mov
mov
in
xchg
fsubr
testl
push
cmc
pop
jnp
addr16
sub
mov
inc
int3
into
movsl
or
inc
dec
je
and
sbb
and
or
cmp
dec
add
lret
mov
hlt
mov
fldt
std
ds
inc
or
test
lods
orl
rclb
rcrl
sbb
mov
xlat
mov
shrb
cmp
outsb
imul
inc
sbb
xor
mov
dec
sbb
fstps
or
push
aas
pop
lds
lods
adc
or
mov
xor
mov
mov
dec
adc
cmp
mov
push
bound
pop
adc
sbb
and
sbb
int3
pop
adc
mov
mov
jnp
fistpl
cmp
je
push
imulb
mov
aam
inc
stc
hlt
movsb
mov
cmpsb
seta
loop
ja
mov
lea
sub
sbb
rclb
jnp
pop
hlt
pop
jns
das
add
mov
mov
aam
orb
jmp
xchg
sub
lds
xchg
ret
incl
xor
enter
add
dec
inc
decl
cmpl
sti
arpl
inc
shr
testb
pop
xor
lret
sbb
and
sub
mov
lock
scas
add
cmp
je
sub
cmp
pop
or
mov
rolb
xchg
loope
jge
push
enter
or
out
xchg
or
fcmovnbe
dec
or
dec
inc
outsl
ror
out
xor
int
or
or
adc
mov
pop
xor
dec
pushf
push
add
inc
shlb
xorb
cmp
inc
pop
adc
adc
adc
xor
iret
sbb
dec
fistl
sub
fadds
push
jne
cmp
push
aam
clc
loop
add
inc
movsl
xchg
pop
outsb
mov
jle
mov
add
bound
outsb
fnstcw
and
adc
sbb
out
stc
push
in
testl
or
xchg
outsb
cmp
pushf
das
aad
rclb
lret
mov
push
or
les
push
ficoms
push
push
lock
out
test
sub
push
sahf
addr16
dec
test
shrb
dec
enter
fdivp
rolb
push
mov
sahf
int
sahf
push
xor
cwtl
mov
insb
push
nop
xor
mov
repz
sarb
jo
push
push
mov
sub
stos
xor
jns
sub
dec
xor
loop
sahf
sub
xor
iret
pop
ds
out
outsb
pop
and
das
sbb
sahf
fstpt
pop
adc
cld
pop
adc
out
dec
or
push
jnp
outsl
add
add
add
xlat
fdivr
jns
iret
in
mov
clc
js
inc
mov
lock
inc
pop
in
mov
ja
sub
mov
fsubrl
jae
outsb
iret
aam
das
shlb
iret
adc
les
shlb
mov
mov
mov
mov
xchg
insl
fdivs
pop
xor
test
xorb
daa
movsb
sub
mov
sbb
xchg
jae
cmp
jo
test
leave
ret
std
lds
test
mov
out
cltd
subb
mov
in
mov
jb
cmp
inc
hlt
sub
pop
in
pop
jns
aam
inc
mov
je
cmp
int
mov
dec
ja
cmp
pop
mov
xorb
dec
inc
repnz
xor
mov
push
nop
ror
and
inc
push
sarb
test
xlat
loopne
fs
inc
dec
lahf
arpl
stos
cmpsl
std
int3
ljmp
in
cmp
mov
in
aaa
pop
adc
insb
orb
add
ds
lea
xchg
scas
repnz
in
push
in
mov
aad
repnz
aas
jg
js
jbe
stos
jne
jns
arpl
push
pop
cmp
ret
xchg
xchg
iret
pop
ja
push
sete
mov
adc
je
push
cs
lcall
cmc
movsb
or
testl
dec
dec
outsb
cmp
or
call
mov
mov
fwait
hlt
mov
push
loopne
sub
xchg
push
xchg
lcall
adc
mov
xchg
adc
ret
or
mov
or
add
xor
adc
test
or
aad
mov
add
mov
leave
add
and
clc
jmp
dec
clc
lea
movsl
sub
sbb
and
fadds
adc
mov
std
mov
mov
ret
pop
lods
andl
enter
adc
xor
jb
andl
push
xorb
push
int3
jl
outsl
shlb
adc
leave
add
je
scas
or
mull
icebp
add
out
jle
push
pop
jecxz
nop
cmpsl
mov
fmull
jo
jo
add
jns
jp
adc
aam
test
lret
ret
mov
mov
ret
mov
lahf
push
fiaddl
loopne
mov
and
stc
push
sbbb
int3
sub
and
dec
push
push
rcrb
xchg
lret
aam
fsubs
dec
xor
xchg
dec
xor
loopne
in
xchg
int3
mov
push
mov
cltd
fisubl
sub
pushf
gs
dec
es
movsb
clc
lret
lret
cld
cld
movsb
mov
nop
mov
add
push
cltd
add
aam
mov
add
or
stc
lods
dec
push
hlt
adc
sbb
add
test
adc
cs
push
push
add
and
js
sbb
outsl
insb
gs
jne
mov
mov
cmp
and
js
pop
jle
daa
dec
add
outsl
je
fs
jne
lret
xchg
mov
insb
inc
imul
jns
imulb
pop
outsb
dec
jb
pop
outsl
jb
sti
inc
mov
inc
jb
insl
push
je
pop
push
and
fs
cmp
fisttpl
jns
inc
outsl
in
push
enter
jae
pop
inc
jns
test
int3
or
and
nop
incl
push
push
push
mov
cmp
push
cmp
jae
mov
xchg
adc
ret
aaa
mov
stos
xor
add
adc
addb
jge
cmp
cmpsb
or
mov
pop
and
jl
xchg
shlb
mov
pop
clc
cli
inc
push
shlb
in
int3
ss
iret
out
add
pop
js
pop
xor
add
xor
mov
rclb
inc
jne
dec
adc
jp
inc
cmp
rorl
or
cmp
iret
cs
mov
das
xchg
lahf
lcall
fwait
inc
sbb
in
ja
or
push
xor
test
cmp
adcl
js
or
push
or
testl
jb
mov
fcmovnbe
jge
popa
adc
loopne
mov
adc
xor
gs
or
inc
nop
and
bound
or
leave
dec
jg
lods
rclb
pop
lods
inc
jb
cmp
or
adc
add
add
loopne
mov
insb
js
test
int
cs
imul
loopne
ret
mov
cmp
or
or
inc
pop
xor
mov
aas
nop
pop
outsl
arpl
out
xor
mov
xchg
cmpsb
lcall
cld
repnz
sbb
das
aas
andl
inc
mov
mov
aam
mov
adc
or
cld
test
or
call
xchg
call
push
es
xchg
in
sub
push
loope
or
repnz
mov
fisttps
pop
dec
pop
mov
or
enter
les
push
enter
push
xchg
xchg
in
repnz
or
lea
aad
pop
add
aad
cmp
jg
add
es
add
ficoms
dec
es
sub
jbe
shrl
jo
dec
addr16
inc
je
dec
je
sbb
inc
add
fs
fs
es
jbe
add
out
ret
orb
test
pop
xchg
pop
or
dec
pop
or
cmp
lret
clc
in
repz
pop
stos
hlt
xor
insl
xchg
dec
lock
lahf
and
clc
in
xor
in
in
and
or
call
in
call
jo
popf
ss
dec
jmp
nop
loopne
fcmove
leave
sub
loopne
inc
push
jge
xor
enter
mov
push
aam
les
sahf
cmpsb
xor
fmul
mov
mov
xor
inc
ret
fcoml
or
mov
es
rcr
mov
fidivrl
int
jns
jbe
je
fildll
mov
ret
aad
jmp
adc
in
and
pop
lahf
mov
push
sub
in
add
push
hlt
sahf
mov
fsubs
fs
dec
xchg
and
jmp
xchg
inc
cwtl
mov
sub
lods
pop
in
pop
mov
adc
sub
clc
adc
mov
push
mov
and
idiv
push
enter
mov
add
clc
mov
xchg
cmp
dec
movsb
int
inc
jle
jge
mov
cmp
incl
insl
loop
insb
jnp
mov
add
pushf
xchg
loope
pop
dec
imul
xchg
xor
insl
add
cmp
xchg
dec
shrb
pop
mov
call
sub
testb
cmp
cmpsb
push
add
pop
loopne
data16
add
pop
xsha1
cmpsb
or
test
movsb
and
xchg
pop
les
adc
shrl
clc
jmp
and
and
movzwl
lock
add
imul
push
popa
adc
push
call
or
lock
or
adc
add
lock
test
aaa
clc
pop
stos
enter
xchg
inc
sub
inc
pop
dec
inc
mov
pop
add
mov
inc
jb
sti
int3
add
ss
in
repz
dec
pop
mov
bound
or
sub
in
test
add
lock
mov
insl
cmp
mov
xlat
add
pop
jae
push
push
add
lret
shld
adc
or
roll
pminub
jne
cltd
fisubs
and
testl
push
iret
push
jmp
notw
je
fstps
dec
aas
filds
pop
push
nop
and
sbb
or
xchg
jb
mov
movb
push
jne
ret
aas
dec
cs
adc
loopne
clc
dec
enter
mov
sbb
jae
or
mov
sbb
enter
xchg
or
in
in
loopne
add
inc
loopne
std
dec
inc
ja
stc
push
push
jno
pop
cmp
rclb
enter
pop
or
adc
add
nop
add
in
cmp
lods
call
outsl
jb
mov
cmp
xchg
pop
aad
fsubl
adc
push
fistl
sbb
mov
movsb
fiaddl
add
call
decl
push
xchg
cmpsl
sbb
adc
mov
jbe
je
push
and
dec
incl
adc
cmp
je
add
inc
jmp
push
mov
xor
adc
nop
out
fidivs
sub
cmc
orb
sbb
sub
or
pop
clc
loopne
cltd
pop
lock
je
pop
jne
and
push
out
pop
mov
jle
dec
rorl
or
int3
roll
or
je
loopne
lock
cld
mov
cmp
push
fadd
xor
mov
iret
je
add
sub
sbb
sbb
sub
mov
out
mov
xor
test
xlat
pop
dec
clc
stos
nop
xor
lahf
lcall
loop
out
xchg
sbb
inc
testb
mov
pop
xchg
jb
add
sbb
pushf
pop
or
in
adc
dec
int
in
pop
mov
loopne
mov
push
xchg
sub
adc
sub
stos
dec
stc
push
data16
or
push
push
xchg
in
xchg
inc
adc
xchg
xor
ret
push
push
jbe
jae
push
push
cmpsb
cmp
sbb
or
roll
pushf
std
sbb
jae
xchg
pop
pop
cld
jmp
add
popa
lock
add
sbb
es
aaa
xor
sti
sub
xor
jmp
mov
cwtl
hlt
sbb
shrb
or
movsb
aas
inc
dec
mov
dec
das
xchg
cmp
inc
sbb
mov
or
push
jns
lods
sub
sbb
dec
pop
out
sahf
out
sbbb
ljmp
sbb
iret
repz
pop
or
push
rolb
push
enter
fidivl
data16
iret
enter
nop
pop
adc
ret
and
arpl
sub
dec
push
test
mov
or
pop
jo
xor
ds
cmp
xchg
inc
int3
fistpll
in
ret
sarb
in
or
cld
inc
rorl
push
sub
pop
sbb
cwtl
add
filds
jp
and
mov
jmp
and
xchg
sub
push
call
jmp
mov
cmpsb
roll
add
add
push
sub
jmp
data16
iret
arpl
mov
sbb
das
mov
sbb
clc
push
inc
pop
adc
xchg
inc
arpl
fidivl
hlt
inc
test
or
sti
std
jg
sub
test
clc
hlt
lea
orl
test
mov
mov
pop
sbbl
movsb
push
rorb
testl
or
pop
and
mov
in
leave
add
cmp
sub
leave
sub
in
cmp
call
aam
nop
or
mov
daa
test
je
aam
push
outsl
loopne
sbb
jb
jno
ljmp
call
xchg
or
xchg
fldl
mov
stos
and
dec
test
fiadds
popf
add
push
jg
sarl
out
pop
or
cmp
iret
repz
andl
imul
ret
push
shlb
loopne
loope
es
ljmp
or
imul
dec
cld
sbb
lret
push
pop
add
clc
pop
cmp
pop
sub
fisttpll
aam
add
sbb
cmp
jo
mov
sbb
test
mov
rorl
inc
loop
and
daa
mov
aaa
mov
adc
inc
cwtl
shrb
dec
je
jmp
outsl
mov
or
test
push
push
pop
lds
mov
sbb
cs
and
jns
out
and
sbb
pop
xchg
inc
push
mov
sahf
mull
lret
push
fsubr
clc
es
mov
mov
ret
mov
xchg
xchg
test
flds
sub
sbb
xchg
mov
adc
fwait
test
mov
mov
jns
mov
movsb
lods
and
adc
push
push
orl
aaa
or
daa
add
push
mov
lea
lods
mov
and
insb
sub
sbb
and
push
add
push
btc
daa
inc
addr16
lods
jg
jb
mov
or
add
mov
stos
mov
xor
fmull
shld
jnp
sub
pushf
and
hlt
mov
push
mov
jbe
andl
nop
and
adc
sub
nop
pop
inc
cmp
push
je
in
in
pop
push
dec
iret
andb
mov
subb
adc
dec
push
cmpsb
jmp
std
mov
mov
sub
add
sahf
out
or
dec
dec
imul
jnp
cmpsb
sbb
adc
add
fadds
adc
cs
movsbl
cmp
enter
and
push
jb
mov
aas
add
ja
out
push
and
rolb
stc
add
sub
push
shl
iret
cmp
enter
jg
adc
js
xor
and
and
cmpsb
mov
lahf
adc
mov
cmp
repz
mov
and
inc
push
lock
push
mov
nop
out
and
mov
outsb
push
adc
rolb
and
shll
jl
les
cmp
xchg
sbb
xor
adc
sbb
mov
bound
sbb
add
add
test
push
and
sbb
adc
aam
into
or
add
cmp
scas
in
in
lds
int3
push
sub
and
hlt
roll
add
lods
adc
push
movsb
cmp
push
lea
nop
push
sbb
test
sarb
dec
add
popa
dec
call
xor
fnsave
mov
push
xor
sub
sbbb
inc
clc
enter
sub
inc
in
mov
hlt
adc
xchg
xabort
addr16
in
scas
call
insb
shll
jecxz
fisttpl
xchg
pop
adc
adc
icebp
ficompl
pop
inc
add
repnz
sbb
mov
inc
push
xchg
stos
out
cmp
shl
clc
sub
and
addr16
inc
push
push
hlt
sub
imul
daa
jl
mov
js
clc
lock
aad
pop
repnz
clc
enter
lock
mov
mov
dec
fisttpll
mov
arpl
daa
push
cltd
xchg
and
and
mov
xor
mov
cmc
push
push
or
dec
dec
nop
dec
jmp
repnz
adc
jl
and
or
test
dec
sub
sub
sub
out
cld
es
xor
cmpsl
pop
repnz
pop
rolb
jb
loop
sahf
xchg
aad
mov
mov
arpl
ffree
sbb
imul
out
sub
push
test
sub
js
add
gs
leave
push
adc
add
inc
out
dec
adc
jmp
loope
sbb
jo
sub
pop
or
adc
daa
adc
mov
mov
outsl
mov
sbb
mov
xor
dec
lea
sub
dec
dec
sub
or
xor
and
das
mov
cmp
xchg
dec
xor
imulb
jmp
lea
cltd
fwait
call
mov
pop
jg
add
or
push
repnz
or
pusha
dec
and
push
dec
mov
dec
subps
pop
out
cs
dec
inc
push
out
out
out
sub
push
addb
and
outsl
mov
es
enter
push
or
xor
cmp
add
add
jp
repz
jp
mov
cmp
shl
cld
xor
xchg
mov
and
jp
sahf
out
pop
xor
adc
xor
xor
or
stos
push
mov
cmpsb
fmull
flds
out
xor
and
add
fstp
imul
aad
sub
mov
jnp
incl
push
dec
pop
add
or
sahf
aad
mov
sbb
mov
pop
pop
adc
sub
sbb
sahf
or
xor
push
xor
xor
cmp
repz
pop
jb
mov
mov
push
sbb
daa
aad
lock
out
loope
cli
es
sbb
shlb
push
sbb
flds
shrl
pop
js
shll
dec
jmp
fisubs
push
imul
sbb
inc
sub
add
rorb
icebp
jmp
cmp
rcr
push
sbb
xor
add
mull
leave
or
or
imul
add
cmpl
adc
mov
jl
insl
aam
add
cs
dec
xor
test
sbb
mov
sahf
or
cltd
sbb
or
or
mov
fisttpll
xor
pop
pop
xor
test
xor
int
roll
jo
and
push
xchg
iret
jnp
or
push
test
mov
into
jnp
addr16
xor
push
jns
outsb
leave
fwait
pop
xor
test
arpl
aaa
jge
adc
cmpsl
addl
mov
in
fstps
jecxz
jns
add
imul
mov
je
bound
inc
dec
mov
inc
or
push
sub
mov
shrl
ss
dec
pop
fildll
inc
shrl
rorb
ret
bound
xchg
jl
xor
xchg
push
shll
dec
movsb
add
push
ss
push
aaa
pop
ss
outsl
jge
leave
jnp
mov
push
iret
jnp
mov
pop
daa
out
add
push
sub
inc
add
scas
add
pusha
sbb
nop
icebp
adcb
sub
cmc
inc
dec
pop
or
mov
jmp
daa
mov
mov
movsl
xor
push
push
insl
sub
inc
adc
push
sbb
and
in
add
sbb
daa
push
lock
adc
ja
sbb
dec
es
mov
cmp
mov
cmp
adc
aas
dec
out
push
enter
jb
mov
scas
lds
cmp
sti
add
push
jo
mov
xor
fisttpl
orl
and
pop
dec
mov
jnp
and
add
sub
lods
sub
fildll
dec
repnz
mov
in
cmc
mov
cmpsl
pop
and
movlhps
inc
es
push
inc
and
loopne
loopne
push
repnz
push
push
add
in
test
xchg
jne
or
xchg
and
sbb
shl
xor
xchg
and
popa
repnz
sbb
add
adc
jecxz
cmp
cmp
adc
add
ret
inc
push
cs
push
lock
adc
shlb
push
cmpsl
nop
dec
and
pop
test
push
cmp
mov
insb
sahf
mull
test
fsub
cmp
sahf
ja
repz
and
push
inc
out
fstl
fldl
imul
xchg
test
scas
cmpsl
ds
pop
add
fistl
cwtl
nop
idivb
push
dec
sbb
cmp
sub
pop
leave
mov
pop
leave
mov
cmp
cwtl
stos
fstl
and
push
sbb
adcl
mov
pop
mov
inc
cmp
cmp
jns
mov
mov
jnp
pop
or
pop
adc
cmpl
cwtl
mov
pop
cmp
aad
push
xchg
cmp
mov
mov
jb
gs
fiadds
fs
push
enter
cmp
inc
or
leave
cmp
xchg
inc
subl
inc
inc
or
pusha
pop
scas
sub
mov
inc
jb
push
aas
imul
fildll
inc
xor
cltd
inc
xchg
inc
jb
fildll
jne
add
xorl
jl
cmpsb
inc
pop
fildll
rep
dec
es
inc
dec
repz
cmp
jb
xchg
cmpsb
mov
enter
push
fdivrs
sahf
out
pop
daa
repz
push
sub
nop
dec
pop
add
inc
mov
les
cmove
inc
and
push
je
frstpm(287
push
inc
fidivrl
rcrb
out
push
pusha
enter
mov
xor
mov
xor
sub
bound
add
mov
push
and
xchg
repz
or
lods
pusha
iret
pop
inc
sbb
pop
dec
or
jle
icebp
leave
repz
push
inc
push
imulb
mov
pop
sahf
neg
xchg
daa
into
push
jmp
or
and
push
addl
adc
mov
push
add
xor
and
mov
bound
cmp
loopne
mov
loopne
lods
mov
pop
ljmp
mov
xrelease
add
bound
flds
call
and
add
sar
es
popf
push
xchg
xor
mov
int
jbe
je
and
adc
cltd
mov
and
pop
aad
cwtl
jmp
inc
lock
addb
ds
cld
hlt
add
movsl
popl
lods
add
push
pop
mov
add
pop
pop
cmp
lret
inc
pop
inc
insl
sbb
sbb
inc
inc
rorb
dec
lock
mov
pop
sub
mov
popa
inc
dec
jmp
xchg
and
add
inc
je
xchg
inc
inc
fcomps
ds
inc
fs
mov
adcl
or
stc
popa
xchg
nop
test
dec
sub
push
loopne
add
push
or
adc
adc
cmpb
test
ficoms
add
push
push
xchg
bound
cmc
les
jo
adc
test
mov
jl
mov
and
and
scas
sti
dec
mov
rep
inc
inc
mov
inc
pusha
cmp
repz
fwait
mov
out
dec
es
pop
js
out
pop
inc
pop
js
mov
adc
adc
pushf
add
and
inc
dec
imull
sub
scas
fisubrs
mov
mov
xor
xor
push
pop
xor
push
mov
mov
inc
adc
add
lock
add
sub
add
movsb
test
jno
daa
pop
xchg
into
push
or
push
cmp
in
dec
cmp
ds
fsubl
inc
or
enter
fsubs
daa
dec
aam
aaa
aam
jb
xor
mov
and
shlb
int3
mov
add
enter
sbb
pop
mov
sti
int
add
imul
add
sub
sbb
shrb
sarb
add
dec
push
fwait
out
mov
dec
cs
movsl
ret
add
fdiv
cmp
inc
bound
jae
out
dec
jnp
pop
daa
nop
push
lods
lret
xor
es
mov
fcoml
cmp
mov
pop
in
in
mov
fnsave
mov
jb
popa
daa
shrb
pop
test
test
mov
jae
mov
adc
xchg
popa
movsb
orl
ret
negb
adc
dec
mov
movsb
xor
sbbl
cwtl
xor
stos
xchg
in
or
jno
jmp
nop
aaa
jecxz
xor
nop
dec
mov
cmp
testb
jecxz
gs
push
sub
in
mov
decb
inc
mov
and
pop
or
mov
or
mov
dec
icebp
mov
sub
pop
dec
or
cmp
dec
dec
dec
adc
dec
enter
dec
ret
jb
dec
movsl
or
jmp
xor
pop
sub
cmpsl
or
test
dec
dec
leave
mov
lahf
addr16
es
and
dec
clc
dec
sub
loopne
xor
aam
enter
bound
dec
dec
iret
jne
nop
inc
mov
inc
push
in
rclb
lcall
cmp
repz
nop
lcall
icebp
mov
dec
xor
fnstcw
repz
mov
imull
xor
fs
iret
sti
rcrb
lods
push
enter
loope
jmp
sbb
aam
pop
leave
dec
or
inc
cwtl
dec
push
mov
icebp
xor
pop
xor
inc
or
mov
icebp
inc
push
testb
mov
inc
fstpt
cli
in
in
jo
inc
jno
xlat
push
stc
pusha
insl
loopne
movsbl
fdivs
fdivs
add
dec
cwtl
aam
aam
sub
sbb
xlat
rcl
iret
add
ret
ds
xor
enter
pusha
inc
inc
or
pop
scas
ret
inc
dec
outsl
mov
dec
dec
xlat
push
mov
repz
push
adc
dec
insl
nop
fidivrl
inc
fisttps
mov
sahf
out
pop
daa
cld
sbb
ss
jo
xlat
test
add
mov
adc
mov
push
loope
sbb
inc
pop
mov
mov
fsubs
daa
sub
xchg
orl
pop
test
adc
rcl
popf
movsb
adc
addb
xor
cmp
sbb
xlat
cwtl
popa
dec
cwtl
fdivl
xlat
pushf
es
dec
clc
adc
icebp
nop
popf
nop
xlat
sbb
sbb
inc
dec
dec
xor
cwtl
add
mov
cwtl
mov
leave
test
mov
fs
int3
loopne
mov
nop
pop
and
rclb
movsb
rolb
pop
sbb
repz
popa
ret
gs
cmpsl
push
int
mov
mov
add
jg
je
hlt
pop
sbb
je
jmp
sub
pop
ficoms
or
or
push
sub
clc
cmpsb
ss
insl
xor
js
lods
lcall
inc
fisttps
sbb
mov
push
pop
jmp
mov
pop
add
mov
pop
xchg
add
jg
dec
mov
shlb
ret
hlt
sbb
sub
push
jg
pop
lea
sub
outsb
inc
cltd
xchg
dec
push
insl
or
roll
pop
lock
mov
push
cmp
add
std
dec
ret
push
aad
testl
vmptrld
fistpl
mov
cmp
mov
jmp
movw
push
jmp
or
jae
aas
xchg
jg
xchg
sarl
adc
mov
dec
arpl
jg
cmpb
adc
add
dec
sub
loopne
test
dec
mov
cmpsb
lret
dec
bound
push
pop
xchg
xchg
push
and
push
push
pop
adc
es
adcb
mov
push
dec
aaa
and
fstl
or
sbb
mov
scas
xchg
mov
xchg
bound
sahf
das
push
mov
iret
sub
add
rorb
pop
sbb
or
add
or
es
mov
add
sub
rcll
pop
xchg
or
xor
inc
adc
fadds
mov
aas
aaa
test
insl
jo
jns
add
out
dec
jne
push
xchg
je
or
popa
and
mov
cwtl
bound
pop
dec
sbb
fwait
bnd
jb
push
ds
add
test
fwait
cld
inc
outsl
jne
xchg
jb
outsb
arpl
mov
xchg
mov
lret
cmpsb
addr16
pusha
addr16
pop
add
imul
xchg
popa
outsb
pop
jnp
dec
push
clc
stc
push
lahf
inc
arpl
pop
add
inc
and
mov
iret
push
and
aaa
push
outsl
jb
or
dec
sub
daa
add
aaa
ss
outsb
clc
test
sbbb
rcl
inc
dec
pop
dec
sti
data16
outsl
test
ja
aam
mov
mov
jmp
repz
sti
xor
mov
mov
inc
daa
lea
dec
jmp
cmp
leave
in
jmp
cld
cmpsl
ret
dec
dec
pop
ja
xor
dec
push
adc
sub
popa
sub
pop
push
adc
mov
cmp
test
sahf
or
xchg
dec
outsb
and
dec
jo
pop
cmp
icebp
xor
enter
mov
xor
sub
inc
push
mov
gs
jge
nop
push
ret
or
pop
leave
cmp
pop
jl
cli
xor
push
mov
mov
add
and
xor
mov
int3
jg
sub
lods
fdivrs
xor
push
inc
mov
adc
xor
cmpsb
mov
pushl
frstor
fcomps
xchg
popa
out
adc
outsb
inc
lock
xor
jo
bound
xchg
arpl
sahf
mov
adc
fistpl
and
sbb
test
jge
jge
cmp
je
outsb
popl
fstl
push
xchg
inc
clc
xchg
pop
pop
sahf
ret
mov
repz
or
cmp
sbb
out
paddd
adc
add
add
addb
mov
jae
xchg
push
mov
lock
add
ret
xchg
nop
dec
pop
mov
and
out
mov
std
ss
push
call
xor
fs
push
push
mov
ljmp
adc
popf
std
rorb
jae
dec
xchg
jle
sbb
rcrb
sub
loopne
rcl
mov
mov
ljmp
ret
into
sbb
mov
dec
mov
lmsw
test
rcll
cmp
ficoms
push
loopne
mov
filds
aam
add
dec
jb
or
lods
push
push
aam
out
pop
pop
inc
jae
push
in
std
pusha
adc
jns
mov
sti
cmp
sbb
test
or
imul
add
fnstenv
loope
ret
pop
leave
pusha
sbb
mov
add
lock
push
and
pop
sti
daa
cli
or
or
inc
aas
test
mov
inc
jmp
push
cmp
or
jo
xchg
fistpl
add
cld
mov
sbb
pop
mov
in
and
dec
jne
xchg
in
outsb
or
mov
cmp
jl
and
adc
jne
pop
leave
lods
shlb
push
add
or
add
fnstenv
inc
cmpsl
pop
sub
push
sbb
push
and
popa
mov
bound
subl
sub
sti
xchg
adc
test
sbb
adc
into
inc
aaa
or
mov
inc
adc
push
mov
dec
add
pop
mov
hlt
push
pop
push
pop
pop
mov
xor
pusha
push
pop
dec
cld
xor
add
xchg
ss
nop
xchg
and
and
xchg
xchg
xchg
xchg
and
and
xchg
xchg
cwtl
cltd
and
and
lcall
and
and
and
and
and
and
and
and
and
and
and
je
hlt
and
and
add
jl
jecxz
addr16
add
and
in
push
add
out
add
and
mov
push
out
inc
adc
dec
test
out
cmp
or
icebp
adc
pushl
push
lret
pop
adc
xor
or
xor
ret
fbstp
push
jmp
cs
dec
dec
addl
clc
jle
in
negl
jae
iret
cmp
negb
mov
cs
arpl
cmpl
push
push
sarb
mov
jno
sub
mov
push
fucomi
adc
pop
xorb
rcll
or
push
mov
sbb
mov
movzwl
fisttps
adc
sbb
mov
fdivrp
inc
pop
in
cmp
je
mov
dec
and
sbb
pop
lock
mov
jmp
jle
shr
and
je
jmp
cmp
sbb
test
sbb
out
cli
jg
mov
mov
mov
cmpb
je
out
ljmp
dec
and
decb
adcb
jnp
jmp
call
jmp
inc
out
addb
idiv
cltd
cli
cld
push
add
add
adc
add
jmp
rolb
sub
xor
add
das
popa
test
mov
in
fisttpl
jns
push
adc
add
cmpb
ja
lret
repz
jb
add
add
call
out
fdivs
lock
mov
or
pusha
or
push
lea
in
fwait
lahf
jle
jb
incl
cmp
pop
dec
lcall
mov
idiv
call
dec
or
lods
cmp
lcall
mov
ret
loopne
xor
fwait
les
inc
mov
andb
mov
and
mov
popf
daa
aaa
inc
or
clc
inc
mov
lss
ret
scas
add
add
adc
sbb
dec
sbb
ret
mov
cmp
or
pop
sarl
pop
sbb
fnsave
or
adc
outsb
or
dec
xchg
daa
out
hlt
repnz
scas
inc
notl
push
sub
add
add
or
test
jp
hlt
add
inc
sub
mov
aad
bound
xlat
orl
decl
fadds
add
sbb
call
cmp
mov
xchg
add
mov
sti
and
push
add
jo
cld
xchg
mulb
cmp
xchg
adc
lods
pop
daa
sub
and
push
push
mov
ficompl
subb
or
test
cmp
cmp
cmp
loopne
adc
mov
ja
and
jnp
sti
sub
fldt
fstps
in
cli
adc
jne
leave
fldl
add
inc
add
sbb
adc
or
cmp
xor
sub
pop
push
and
lret
add
mov
fwait
pop
jge
stos
push
sbb
push
scas
xchg
aaa
or
flds
imul
insb
movntps
pop
inc
ja
dec
push
push
push
fistpll
dec
mov
inc
outsl
xor
jns
imul
call
shll
sub
jmp
push
add
cmc
shrb
imulb
sbb
push
mov
add
jp
js
jno
pushl
jge
sbb
call
mov
mov
aam
in
xchg
aad
insl
cmp
add
ja
jae
jne
sarb
pop
adc
lods
icebp
mov
jbe
add
fnstenv
daa
add
jbe
fnstcw
sti
fxch
scas
jnp
add
fcmovb
add
rclb
test
or
sbb
sbb
in
dec
jb
mov
mov
push
jg
pop
andl
jl
ret
sub
invd
dec
push
gs
imul
int
add
pop
inc
push
and
pop
cli
nop
ja
cmp
aam
push
and
insl
es
in
mov
jle
mov
sbb
insb
or
call
enter
add
add
cmp
or
popa
addr16
clc
inc
pop
inc
inc
push
bound
jae
mov
mov
faddl
or
and
in
in
sarb
mov
test
stos
out
in
aam
test
ret
pop
xchg
leave
and
adc
insl
adc
mov
cmp
jo
insl
sub
or
loopne
mov
inc
imul
in
shrl
and
bound
data16
outsl
push
pop
jmp
sbb
sbb
adc
dec
mov
fsub
outsl
inc
insb
outsb
sbb
insl
cld
sbb
dec
outsb
insb
jns
inc
insb
popa
pop
jp
mov
scas
cwtl
in
jbe
pop
roll
xchg
pop
ss
push
sub
pushw
mov
inc
mov
or
pop
neg
ja
cmpsl
or
dec
imul
aaa
in
cltd
test
or
xlat
leave
jg
test
push
sarb
jo
gs
sbb
mov
and
or
sbb
insb
cmp
jns
mov
jae
jo
cltd
das
outsb
pop
add
das
adc
loope
jo
cmp
cwtl
add
xchg
decb
rcrb
push
gs
push
dec
bound
ljmp
outsb
in
add
in
inc
cmpsb
adc
pop
sbb
mov
mov
xchg
mov
insb
mov
leave
mov
adc
rcrl
cld
data16
and
or
mov
mov
jo
mov
push
or
and
or
lods
shrl
pop
mov
jno
scas
xchg
add
jno
pop
and
fsubr
mov
pop
hlt
je
in
push
inc
and
sbb
addr16
mov
xor
jb
or
dec
imul
scas
insb
insb
pop
leave
and
rorb
inc
imulb
pop
jae
mov
jae
rdpmc
or
push
mov
mov
sbbb
scas
iret
xchg
dec
setb
pop
mov
nop
jb
or
addb
nop
push
aaa
sbb
fxch
push
jg
cmp
dec
adc
cwtl
xor
lcall
adc
mov
movl
mov
call
mov
insl
inc
adc
lock
xor
test
mov
clc
mov
adc
mov
and
outsl
and
mov
lahf
js
je
cmp
pinsrw
lock
inc
push
es
aas
dec
iret
repz
je
mov
vpmullw
in
cmc
std
iret
repz
pop
add
and
or
mov
pop
sub
rcll
stos
cmpsl
add
dec
mov
jb
push
adc
jbe
push
fistpll
adc
jle
aaa
lods
inc
and
push
dec
jb
scas
sbb
adc
mov
ret
lret
aam
aas
jbe
xchg
imul
pop
int3
cmpsb
fiaddl
imull
jo
cmpsb
orb
mov
lret
and
in
mov
or
pop
and
or
push
inc
push
pop
pusha
or
testb
cmpsl
mov
lods
int3
inc
shl
inc
ja
push
pop
sub
add
sbb
dec
shr
push
inc
sbb
rcr
enter
rorb
je
add
add
jg
dec
mov
out
mov
hlt
call
or
js
cmovns
fidivrs
das
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
push
popa
imul
repnz
lock
jns
push
cmp
jns
adc
mov
xlat
stos
mov
test
cmove
pushf
mov
insb
mov
mov
idivl
movsb
jbe
push
aam
pop
data16
mov
push
scas
les
fnstenv
push
mov
fdivl
mov
mov
sbb
sbbl
or
scas
pop
sbb
jmp
push
subb
inc
pusha
push
or
insl
enter
adc
ds
stc
loope
dec
jp
pop
xor
push
flds
jb
mov
push
mov
out
enter
push
cwtl
insb
mov
sbb
insb
mov
mov
js
div
dec
pop
push
call
loope
and
mov
jo
negl
pop
jbe
mov
inc
out
shrb
out
mov
mov
mov
cmp
dec
push
jecxz
dec
jnp
add
lods
mov
shl
mov
pop
mov
push
les
push
fistpll
add
loopne
cwtl
ffreep
mov
icebp
lahf
cmp
ffreep
test
fs
rcrb
mov
pminub
test
jnp
push
or
add
add
in
in
fs
inc
jl
adc
add
rol
add
and
pop
leave
mov
mov
setb
ret
mov
cmpb
add
cmp
mov
sti
popa
int
repz
jge
iret
jge
cmovb
or
mov
lds
adc
xchg
xor
cmp
sbb
sarb
inc
sbb
lock
enter
in
les
push
lods
out
mov
push
in
daa
or
or
inc
push
in
adc
in
push
in
and
pop
inc
push
sub
xor
xor
in
in
repz
xlat
inc
jle
push
nop
lcall
jge
sti
push
or
pop
and
xor
pop
xchg
cmp
pop
push
or
cmpsb
adc
in
inc
mov
jg
sbb
out
stos
add
push
mov
sub
mov
adc
mov
and
into
daa
xchg
inc
mov
jg
add
mov
mov
loopne
or
xchg
loopne
in
mov
xchg
xorb
addb
or
add
mov
pop
pop
mov
scas
jg
xchg
lahf
mov
push
into
jl
in
iret
insb
mov
xchg
dec
push
test
fmull
shl
ror
hlt
popf
in
fyl2x
clc
in
push
repnz
push
inc
iret
iret
jo
loop
call
scas
cmp
or
inc
pop
cmpsb
js
and
add
nop
shlb
std
sub
inc
jg
enter
mov
or
rorl
xchg
mov
sub
pop
stos
inc
mov
sub
call
sbb
outsl
mov
mov
push
fsub
mov
inc
xor
sbb
aam
aam
iret
repz
jmp
loopne
orb
loop
in
pop
inc
imul
imul
push
in
and
xor
xorb
or
ds
push
mov
or
fisttps
mov
adc
cmp
das
add
nop
add
add
jnp
pusha
push
movsb
push
push
or
push
jbe
lods
out
les
aam
inc
mov
mov
jg
lock
pop
std
cld
sti
repnz
stc
clc
push
jnp
push
push
push
push
push
stos
icebp
push
jle
push
iret
repz
push
push
insb
mov
out
jl
mov
dec
or
idivl
mov
pusha
nop
xlat
pop
and
add
mov
ret
xlat
sub
mov
or
pop
add
test
push
popa
addr16
test
test
repz
and
push
pushf
fidivrs
int
or
cmp
pop
push
in
js
or
push
inc
adc
imul
sahf
dec
repnz
filds
imul
push
clc
push
mov
dec
or
lock
negl
or
sbb
or
jg
add
out
lcall
pop
push
push
sub
push
ss
sub
mov
sub
add
or
dec
clc
inc
sub
mov
jb
mov
and
sub
data16
push
inc
inc
dec
push
inc
push
mov
rclb
gs
mov
dec
aaa
add
cmpl
js
fs
add
je
pop
xchg
inc
dec
and
sub
xchg
or
jne
mov
scas
test
pop
and
test
adc
push
les
jo
inc
test
cwtl
push
mov
jl
dec
xor
xor
push
outsb
cmpsb
cmp
jo
dec
mov
and
xchg
andl
pop
test
add
adc
or
mov
mov
shlb
push
adc
pop
or
inc
jbe
add
popa
jge
add
addb
cli
jne
or
xor
sbb
outsb
jmp
dec
pop
xchg
pop
xchg
add
mov
movsl
roll
ljmp
add
pop
pusha
daa
aas
cmpsl
je
jns
or
push
in
dec
push
pop
or
stc
push
push
test
pop
jl
imul
std
add
add
jo
je
pop
or
popf
inc
stos
cmc
inc
lcall
add
addr16
mov
fsubrl
shlb
fidivs
mov
jmp
push
and
pop
sbb
pop
jmp
mov
dec
or
dec
pusha
push
inc
or
sbb
mov
mov
in
add
mov
div
mov
loope
sub
sbb
cld
cld
add
test
adc
xor
push
xor
or
ret
xor
pop
lea
arpl
jno
or
in
mov
les
fisubs
pop
loopne
popf
and
je
scas
dec
pop
fs
and
fadds
inc
cmp
mov
popl
aaa
adc
sarb
pushf
movsl
push
add
add
or
mov
and
sahf
fsubrs
fbld
imul
imul
addb
je
mov
and
imul
xchg
sbb
hlt
pop
cs
imul
mov
inc
or
popa
and
mov
sahf
insb
push
sub
mov
lea
popa
ja,pt
jle
pop
cmp
pusha
fidivl
clc
mov
cmp
inc
adc
inc
shll
dec
iret
push
sar
cs
subl
test
jl
inc
xor
lahf
jbe
jmp
push
inc
dec
jne
mov
xor
cmp
test
and
xor
cmp
loope
push
mov
sbb
sub
nop
jmp
inc
sbb
lcall
repz
xchg
dec
jb
inc
mov
je
loope
clc
cmc
jle
js
push
pop
xchg
inc
jnp
lahf
inc
hlt
mov
pop
stc
add
lods
pop
sub
popa
mov
pop
and
xchg
or
call
sbb
in
ljmp
jne
push
sbb
lock
and
mov
and
inc
inc
les
jl
inc
push
call
jmp
push
in
xor
xorb
dec
push
or
inc
pop
imul
shll
cmp
push
xor
rorl
jecxz
fidivl
fwait
clc
decl
jne
jg
rcrb
inc
and
xchg
lock
mov
sub
or
sbbl
aaa
mov
out
outsb
roll
test
lcall
jo
cmpsb
fistpll
and
int
shrb
xorb
outsl
popa
mov
add
pop
pop
dec
sbb
test
inc
arpl
repz
mov
lret
mov
hlt
jo
pop
push
xchg
adcb
pop
pushf
or
cli
adc
mov
pop
push
lock
popa
or
shlb
cltd
or
xchg
push
adc
in
ret
xor
in
leave
enter
pop
push
int3
or
jge
adc
xchg
xor
lock
rorl
inc
jae
add
pop
test
cs
inc
adc
dec
je
cmovle
lret
mov
sbb
nop
xor
adc
sbb
fmull
dec
lret
pop
scas
loopne
xorl
or
pop
push
pop
xchg
adc
out
mov
adc
scas
mov
xlat
lret
fwait
sti
nop
mov
pop
orl
fsts
repz
loop
xlat
jno
ja
mov
xor
sub
mov
call
xor
sbb
mov
xor
out
scas
add
sbb
jo
out
xchg
xor
sbb
sbb
mov
je
and
insb
push
shll
pushf
jg
and
or
daa
fadds
sbb
xchg
xchg
and
cmp
aam
sbb
fcmove
mov
icebp
and
push
adc
cld
mov
push
or
mov
cmp
subl
xchg
xor
xchg
xor
adc
add
mov
mov
xlat
mov
or
or
test
or
add
adc
or
insb
inc
je
ds
pushf
loopne
popa
push
in
outsl
pushf
pushf
dec
mov
pop
mov
and
mov
daa
add
jae
sub
cmp
xorl
mov
push
xchg
push
ret
shrb
dec
dec
sub
lea
gs
scas
add
or
or
dec
cld
mov
inc
xchg
lcall
add
fs
jle
lret
sbbl
mov
adc
sti
or
push
sbb
movsb
mov
jns
sub
inc
orb
data16
add
popaw
mov
push
mov
daa
cld
mov
adc
or
cmp
fldl
ja
xor
fwait
inc
test
cmp
cmc
sahf
pop
mov
mov
mov
inc
pop
push
repnz
fbstp
out
js
mov
clc
lret
xchg
add
movsl
sahf
push
cmpsl
adc
sbb
push
mov
pusha
add
dec
push
xor
jl
pop
jge
mov
mov
sub
dec
daa
push
sbb
add
push
call
push
out
pop
out
or
add
pop
mov
cmp
xor
push
pop
push
add
xlat
arpl
roll
xchg
mov
mov
insb
mov
out
pop
lret
lcall
push
xchg
lods
outsl
add
rolb
leave
mov
push
or
pushf
xchg
adc
cmpl
jmp
ss
notb
mov
or
pop
leave
cmp
pop
mov
cmp
je
mov
les
les
loop
sub
add
inc
jo
inc
add
cld
pop
jbe
pop
or
add
add
cmp
add
pushf
ret
ret
cwtl
push
mov
sbb
and
or
cmp
inc
idivb
pusha
call
mov
push
push
movsb
testb
xor
push
xchg
cmp
cwtl
push
das
xor
aas
and
sub
adc
roll
loopne
push
or
iret
jae
jae
cli
mov
inc
adc
cmp
incl
popf
rorb
movsl
add
fcom
mov
pushf
adc
inc
outsb
pusha
das
pop
push
shlb
or
cmovne
ljmp
cmp
lods
sub
push
inc
decl
addr16
ja
jmp
add
lea
or
out
aaa
lods
inc
imul
mov
sbb
outsb
icebp
pop
movsb
adc
ror
mov
rolb
dec
lahf
dec
and
pop
pop
push
dec
pushl
or
test
jmp
add
or
pop
add
push
add
xchg
jnp
jae
cltd
iret
fimull
cmp
adc
scas
sub
sub
movnti
xorl
add
ss
cmpsb
mov
mov
adc
lock
leave
fmuls
add
scas
xor
lds
jmp
inc
cmp
xchg
adc
dec
or
lret
jne
sbb
subb
leave
mov
xlat
jle
or
aam
jae
cs
jno
scas
or
xchg
ret
pop
jg
add
push
jecxz
in
push
lahf
adcl
dec
and
adc
imul
out
add
nop
xor
sar
cmpsl
aam
inc
test
cmpsl
jb
sbbb
cwtl
or
shll
sbb
loopne
cmp
shl
xor
lahf
aaa
sbb
fadds
sbbl
fstpt
lock
jle
test
popa
inc
clc
addb
push
and
hlt
bound
mov
call
std
jg
dec
sub
add
xchg
dec
dec
inc
jne
fimuls
outsl
mov
mov
into
add
incl
mov
inc
pop
sbb
adc
rcrl
mov
adc
add
fldt
pushf
shll
push
out
movsb
sbb
roll
mov
cmpb
inc
mov
inc
jne
mul
flds
add
add
xlat
ds
jmp
subb
mov
ret
adc
aaa
ret
and
rolb
stos
hlt
pop
pop
xchg
jl
mov
adc
cmp
sub
repz
pop
sahf
push
mov
and
pop
arpl
adcb
inc
cmp
sar
sahf
mov
and
adc
loopne
daa
sub
xor
fs
out
test
sub
mov
scas
add
add
aam
sbb
rcrl
mov
rorl
in
xlat
and
inc
lahf
rol
fdivs
leave
pop
push
pop
ret
adc
bound
in
adc
iret
xchg
and
filds
lahf
in
sub
jns
sub
fcoms
cmp
or
jbe
movsl
xchg
mov
lods
fwait
pop
scas
cmp
pop
ret
mov
cmp
imul
mov
adc
imul
or
mov
outsb
and
xorb
lcall
dec
fnstenv
push
add
sbb
stos
leave
popf
mov
xchg
or
cmc
adc
sbb
mov
popa
inc
repnz
xchg
mov
roll
mov
adc
mov
xor
jmp
jle
pop
sub
out
imul
xor
pop
or
imul
xchg
adc
mov
testb
lahf
add
nop
sbbl
bound
repnz
mov
int
filds
push
mov
add
and
pop
repnz
xor
jb
enter
loopne
inc
out
lret
outsl
xchg
add
lea
xorl
dec
add
movsb
mov
dec
mov
jmp
add
cmp
sbb
jmp
call
out
je
nop
jno
jmp
cwtl
inc
mov
movsb
or
adc
es
mov
les
ret
mov
or
or
js
adc
cld
adc
cmp
jae
fistpll
leave
je
stos
adc
btr
cmp
jl
sbb
inc
adc
jmp
addr16
mov
dec
inc
jmp
int3
repnz
insb
cmp
dec
nop
pop
fnsave
cmp
mov
cli
pop
ja
and
bt
jb
add
and
fistps
or
push
inc
cmp
jne
inc
decl
jne
test
jp
pop
cmpsl
inc
mov
lds
or
or
test
lods
pop
movsl
xchg
scas
jp
or
mov
dec
movsb
sbb
cmp
push
add
dec
movsl
in
lock
test
pop
andl
mov
cmp
sub
add
aaa
push
enter
outsb
imul
xor
xchg
add
cmp
scas
rolb
inc
ret
mov
ficompl
in
pop
sbb
sbb
mov
xor
cmpsb
cmp
aaa
js
scas
loopne
std
cmp
xor
dec
xor
sub
negl
mov
ljmp
sbbb
comiss
daa
mov
xchg
push
mov
add
mov
pop
inc
dec
popf
or
lea
inc
mov
mov
sbb
aam
or
adc
ss
or
or
jle
push
sub
sub
jb
jne
xor
adc
pop
pop
jnp
sub
in
rclb
jns
and
sbb
addb
mov
mov
aas
push
aad
dec
icebp
adc
int
pop
sbb
iret
pusha
jmp
jo
fsubrl
push
push
push
xchg
fisubl
lock
or
nop
fucomi
xor
inc
sub
clc
icebp
lock
cmp
push
mov
hlt
jo
lea
mov
cmp
pop
adc
mov
adcb
cmpsb
xor
xor
mov
and
nop
adc
leave
js
imul
xchg
dec
js
cld
inc
mov
mov
mov
inc
add
pop
pop
push
push
loopne
mov
add
inc
aaa
and
pop
stos
inc
xchg
movsl
sub
cmp
stos
je
mov
xor
pop
sbb
and
call
sub
ja
loopne
outsb
daa
daa
dec
clc
shl
add
nop
jge
repz
adc
jecxz
push
or
imul
mov
mov
push
push
lahf
jbe
testb
mov
push
adc
stos
bnd
mov
pop
imul
shll
jae
xor
test
out
or
mov
sbb
lret
pop
jp
fdivrs
xchg
je
lock
pop
in
push
in
sbb
cwtl
cli
js
js
or
movsb
sbbb
mov
bound
inc
mov
jg
pop
and
stos
mov
or
jg
inc
test
push
sbbl
lds
imul
jmp
cmpb
sub
mov
imul
cld
adc
sbb
xchg
mov
mov
loope
movsb
mov
sbb
clc
push
enter
shrd
lods
rclb
lock
mov
fucomi
xchg
ds
lea
sbb
mov
scas
int3
mov
lret
adc
xor
cmpsl
clc
push
sbb
scas
cmpsl
ret
inc
cmp
cwtl
in
pop
mov
jne
xor
rclb
cmpsb
call
push
mov
mov
adc
xor
inc
lret
push
mov
popf
in
fwait
pop
jp
leave
and
stos
lcall
adc
sbb
cmp
pop
xchg
in
mov
scas
scas
rol
add
mov
mov
xchg
es
adc
ja
cmp
sbb
add
hlt
and
sub
adc
dec
cld
xor
or
xchg
xor
push
rol
add
nop
pop
orb
and
and
mov
fisubl
jo
adc
insb
and
das
aaa
mov
mov
push
cmpsl
addb
xchg
jo
fwait
add
test
mov
mov
aas
mov
call
jne
xor
xchg
mov
add
mov
or
xchg
movsl
psrlq
inc
cs
xchg
pop
add
insb
out
add
jb
mov
pop
insl
adc
dec
push
or
outsl
add
push
lret
jnp
mov
mov
mov
mov
sbb
xchg
or
mov
insb
mov
mov
pop
outsl
in
mov
mov
sbb
mov
aaa
adc
enter
mov
adc
push
push
xlat
pop
testl
sub
dec
mov
mov
add
aaa
shl
and
sub
pop
mov
shlb
pop
add
or
or
pop
dec
push
add
pop
mov
mov
mov
and
mov
mov
ret
mov
sahf
jno
xchg
mov
filds
push
mov
pop
and
inc
and
mov
add
out
ret
shrb
in
mov
or
and
lds
int
scas
mov
mov
push
and
imul
fadds
inc
daa
add
ja
mov
flds
add
fidivs
int3
sub
popa
jne
aaa
cmpl
lock
jmp
pop
lock
adc
dec
loop
andb
inc
xor
push
movsb
cmp
dec
cmp
in
dec
stos
loopne
push
adc
mov
mov
out
rorb
inc
jmp
ss
dec
ret
fcomps
aad
pop
cli
mov
add
add
mov
sub
xchg
and
cmpb
jne
or
add
int
cli
mov
rorb
shrb
mov
gs
xor
cmp
mov
arpl
and
cmpsl
sbb
mov
add
mov
iret
testb
cmp
inc
les
pop
xchg
mov
sti
pop
jne
testb
orb
sbb
add
pop
add
mov
movaps
mov
lret
faddl
inc
add
or
js
adc
mov
pop
dec
mov
test
ret
cmp
jecxz
inc
negl
jecxz
lock
xor
mov
sbb
sbb
push
sbb
jmp
sub
les
sahf
xchg
or
adc
push
jmp
call
enter
aaa
sub
sub
adc
addb
lods
inc
int3
dec
adc
popa
mov
es
ret
push
xorb
ret
dec
adc
andl
lock
in
ds
loopne
les
mov
or
roll
arpl
and
or
test
or
movsl
in
mov
mov
pop
pop
cld
lock
sub
ss
lock
sbb
inc
xchg
mov
movl
pushf
jl
into
lock
cltd
outsl
add
add
push
xor
fcmovnu
cmp
aas
mov
jmp
mov
add
insb
aad
mov
lea
enter
xor
dec
adc
addl
call
jle
aam
push
jno
xor
mov
imul
test
add
sub
adc
aas
inc
inc
shll
push
cmp
in
push
sbb
test
movb
mov
mov
outsl
sbb
scas
scas
rorb
push
mov
sbb
or
nop
or
mov
ss
jb
test
lea
lods
jmp
lods
push
sbb
es
or
jg
in
or
mov
repnz
nop
and
cmp
jns
push
fidivrs
xor
scas
rcr
jl
inc
mov
xchg
repz
lods
insl
stos
cmpsb
push
sarl
in
jl
dec
mov
mov
or
jle
nop
or
sarl
adc
shr
mov
inc
or
jns
dec
jg
xor
mov
xchg
and
cmp
jne
mov
or
or
insl
fwait
mov
jge
sbb
jle
loop
and
aam
xor
hlt
jl
ret
adc
xchg
nop
inc
int3
add
and
cmpsl
jg
je
test
cltd
nop
mov
push
add
loope
lret
shll
clc
nop
jge
pop
lret
or
fstpl
lods
mov
inc
push
jge
inc
outsb
shrb
add
push
sbb
or
add
out
xchg
jo
pop
out
js
mov
inc
test
jo
mov
push
ljmp
pop
adc
xor
mov
or
mov
inc
in
or
insl
ret
sub
lods
sub
fwait
call
push
jbe
push
pop
subb
mov
lods
jae
sub
push
movsb
cmpl
cmp
or
pop
xchg
mov
dec
xor
and
mov
or
and
pop
in
js
xchg
push
mov
jecxz
lea
add
mov
aaa
dec
divb
mov
cwtl
sbb
cmpsl
js
xor
pop
loopne
push
xchg
cs
xchg
mov
cmp
call
mov
ss
sbb
push
dec
jg
mov
jne
int3
inc
xorl
sbb
sbb
out
mov
clc
fmuls
nop
jecxz
add
add
lret
mov
dec
sbb
or
iret
inc
jb
mov
arpl
cmpb
fisubl
pop
outsl
adc
enter
mov
aas
rcrb
or
pop
int
xor
lea
or
rcrl
add
cmp
or
cmp
lret
add
xchg
xor
mov
mov
ja
cmp
add
push
jae
jbe
shll
jge
in
in
jmp
testb
loop
ds
lret
stc
mov
pop
pop
mov
mov
push
mov
mov
mov
pop
mov
sarl
out
testl
testl
or
sub
sub
jnp
rcrb
pop
sub
push
dec
fucomip
sub
ja
pop
or
push
lods
mov
sub
or
pop
shl
fwait
sbb
cmp
jb
xchg
dec
out
mov
lea
cmpsb
sub
fs
jg
inc
xchg
mov
or
insb
xor
test
xor
test
mov
shrl
into
push
dec
test
add
in
icebp
sbb
push
push
testb
pop
andl
rorl
shlb
add
lods
movsb
cmp
or
stos
push
adc
cltd
das
or
xor
pop
imul
in
add
jo
adcl
inc
mov
enter
es
add
mov
lea
or
ret
fsubrl
xor
ss
adc
sub
or
cmp
dec
or
aam
or
mov
leave
pop
jae
sub
mov
je
or
mov
xlat
mov
into
jae
add
xorl
jb
je
dec
or
adc
fcompl
or
pushf
rorb
cmp
xchg
ret
pop
pop
dec
outsb
enter
ret
jg
pop
enter
sbb
ret
xchg
mov
inc
aaa
ret
mov
cltd
sbb
pop
les
cmp
aas
or
inc
add
lock
cs
clc
test
and
or
sbb
mov
cmpsl
push
xchg
mov
les
int3
les
or
aam
jle
push
mov
jnp
mov
add
mov
adc
adc
movsb
xchg
adc
pop
sbb
idivl
pop
mov
mov
pop
leave
dec
adc
or
add
fcmove
add
or
lea
sbb
sti
je
push
jne
loop
dec
xchg
imul
adc
sub
insl
cwtl
iret
dec
xor
mov
push
sbbl
dec
sub
adc
xchg
mov
sub
xor
rol
ljmp
and
push
jp
mov
inc
xor
adc
adc
inc
push
dec
xor
test
cs
add
and
das
mov
adc
xor
add
xchg
pop
add
nop
daa
stc
hlt
xor
cwtl
xor
xchg
lock
or
rorl
ret
das
and
pop
fsubl
popa
or
mov
lea
aam
cmpsb
push
or
jl
mov
adc
or
arpl
push
sbb
adc
xor
or
in
shlb
out
mov
adc
dec
xor
addr16
imul
adc
xchg
movl
fldenv
repz
pop
jb
mov
das
cmp
add
insb
jle
movsl
jne
shrb
das
arpl
sbb
push
jo
or
lcall
xchg
cmpsl
adc
xor
es
scas
movsb
adc
mov
rcl
icebp
popa
hlt
push
rolb
shrl
pop
pusha
cmp
stos
loop
jp
mov
ret
pop
test
adc
sbb
jg
inc
sbb
push
nop
das
or
add
imulb
or
stos
sbbb
xchg
leave
je
cmpsl
add
add
inc
or
sbb
mov
adc
adc
push
push
jb
jo
fstps
inc
imul
pop
and
add
mov
push
les
ret
nop
push
sub
dec
inc
adc
fdivrs
inc
bound
xlat
mov
adc
or
and
daa
mov
push
pusha
ficomps
xchg
jne,pn
jb
mov
jne
mov
sub
mov
mov
push
imul
sbb
int3
mov
xor
mov
js
cld
xor
data16
adc
mov
cs
addb
add
push
aaa
add
xchg
scas
push
ljmp
arpl
push
jb,pt
sbbb
mov
push
push
inc
xchg
add
data16
addr16
jmp
inc
inc
push
jecxz
js
ljmp
icebp
xchg
inc
fildl
xchg
mov
or
andb
test
into
xlat
ret
sub
jp
andl
jg
test
inc
out
mov
push
xchg
pop
add
mov
xchg
push
and
sub
or
mov
test
jbe
cld
lret
xchg
or
inc
clc
iret
push
inc
or
je
int
das
nop
mov
push
cmpl
addb
gs
sub
xchg
cmp
inc
add
test
jecxz
jbe
mov
fmull
sub
out
ret
cmp
xor
add
in
cmp
push
push
dec
lret
test
psubq
sbb
dec
jmp
aaa
mov
add
jl
icebp
int
sbb
sub
nop
rcrb
push
adc
adc
add
sbb
ljmp
fldenv
pusha
or
mov
dec
int
add
pop
fildll
call
fs
test
dec
sbb
cmpsl
or
cmp
aaa
lock
dec
pop
cmp
adc
pop
mov
mov
popa
and
adc
imul
mov
inc
sub
add
enter
xlat
fidivrl
and
or
cwtl
pop
xor
fs
mov
fsubl
and
clc
imul
push
data16
add
fmuls
pop
orl
mov
ret
test
adc
add
test
xor
out
out
mov
cmp
dec
adc
out
push
inc
xlat
jge
jo
or
jne
jge
add
rcrb
adc
push
ret
aaa
mov
add
cmpsl
in
shlb
in
pop
adc
cmpsl
ds
pop
inc
xor
clc
cmp
sbb
add
add
inc
mov
jo
sbb
popf
mov
cmp
add
in
add
hlt
aaa
test
xorl
movsb
movsl
and
xor
aas
arpl
decl
xchg
sub
dec
pop
loop
shrb
pop
call
les
jo
aaa
daa
push
pusha
insb
pusha
xlat
sbb
orl
jns
mov
rclb
ret
and
jnp
popa
shlb
cmp
addb
ret
inc
syscall
pop
cmpsb
add
aaa
pop
clc
enter
push
nop
rol
in
pop
sbbb
push
push
or
sbb
aaa
or
push
add
jns
mov
pop
push
dec
loopne
pop
rolb
xchg
mov
xor
or
xor
xor
dec
fdecstp
pop
push
fsub
andl
in
add
or
sbb
sub
aaa
fdivr
arpl
rcll
xor
push
leave
mov
movsl
xchg
sub
es
test
mov
inc
ljmp
sbb
out
rclb
rcll
shl
lea
js
jo
outsl
shl
test
add
fsubs
add
push
xchg
movsb
or
fistl
cmp
es
dec
jne
orl
dec
lods
cmpsb
inc
test
insb
fs
jmp
xchg
nop
inc
pop
dec
outsl
sub
push
pop
insl
ja
add
xchg
int3
aam
jo
ret
jns
jnp
pushl
dec
jne
jp
call
jmp
cmpsb
jne
cmc
je
aam
push
push
popa
mov
mov
dec
ja
sbb
or
imul
cmp
iret
xchg
scas
dec
jge
push
jecxz
iret
add
cmc
ss
inc
scas
pop
orl
dec
jbe
imul
xor
mov
test
cmp
addb
popa
into
fsts
lret
add
mov
repnz
dec
arpl
cmc
dec
faddl
cld
popf
add
clc
or
jne
pop
outsl
jge
mov
or
les
mov
jecxz
popf
adcb
mov
call
pop
stc
sbb
lcall
push
mov
repz
add
push
outsl
push
add
add
into
sub
push
inc
int
dec
dec
int
mov
lods
clc
add
add
fbstp
push
into
mov
jnp
adc
mov
in
cmp
and
dec
aad
mov
ret
cmpl
push
pop
imul
add
mov
outsb
push
xchg
daa
and
and
es
sbb
das
ret
pop
xlat
jbe
jnp
and
je
mov
test
sbb
mov
pop
add
shrb
xor
fs
mov
lea
mov
pop
imul
inc
cmpb
test
mov
or
fs
xor
ss
sub
shlb
sub
int3
ret
sbb
add
adc
add
cmpsb
sbb
call
cmp
pop
imul
in
xor
push
pusha
jo
push
sub
mov
outsl
dec
and
push
popf
imul
jae
add
or
sub
cltd
das
in
addb
ss
data16
sbb
in
roll
clc
rclb
sub
push
int
dec
push
idivb
jo
imul
push
hlt
pop
xchg
in
add
cs
hlt
stos
pop
loopne
dec
push
pop
mov
dec
sbb
adc
cmp
fs
dec
sub
lret
xchg
mov
sub
pop
inc
adc
das
mov
mov
sbb
in
xlat
sbb
add
xchg
pop
pop
adc
push
sub
mov
xlat
push
add
sub
repnz
dec
dec
aam
adc
cmp
jecxz
xchg
or
jne
and
and
inc
pop
inc
enter
stos
enter
bound
repnz
pop
mov
mov
sbb
xor
repnz
test
cmp
les
stc
mov
push
insl
fcomi
inc
call
mov
jae
and
push
push
nop
mulb
pushf
mov
adc
fcoml
sbb
fadd
jecxz
mov
jge
push
negb
and
or
sub
jmp
ljmp
ss
cmp
jae
adc
andl
in
sarb
pop
push
mov
data16
or
scas
fldt
mov
mov
rolb
sbb
in
rcl
sbb
adc
sbb
add
iret
and
in
adc
pusha
sbb
adc
in
xor
fisttps
mov
stc
dec
testl
movsb
mov
mov
loopne
aaa
mov
les
push
mov
adc
push
lods
or
pushf
pop
int
sub
fsubs
loop
or
out
cld
push
xchg
push
sub
cld
adc
sbb
jecxz
pop
fst
mov
iret
add
sbb
lods
cmpsb
test
dec
xor
nop
out
fdivrl
fdivrl
int3
push
fdivrl
rclb
pop
xlat
cmp
sbb
cmp
xrstors
pop
loopne
cmp
adc
push
mov
xor
sti
aaa
sub
inc
fucom
dec
cmp
imul
jge
popa
sub
xor
fnop
into
sub
and
pop
sbb
clc
cld
hlt
sub
push
mov
xchg
call
add
lock
lea
aam
aam
add
or
aam
mov
clc
or
cltd
in
nop
xchg
ss
iret
adc
add
sbb
add
sbb
lock
into
jae
xchg
and
or
fiadds
inc
fisubs
bound
pop
adc
mov
fildl
ret
xchg
add
sti
or
test
fisubs
and
out
mov
jnp
mov
or
push
incb
call
add
or
enter
sub
jb
data16
test
dec
and
inc
pop
adc
test
in
ja
or
add
inc
push
inc
add
or
test
adc
std
push
ss
call
cmp
mov
push
mov
dec
mov
lods
adc
xlat
int3
fcomps
fcmovnbe
daa
cmp
ret
mov
push
cltd
cmp
or
sbb
iret
cmp
bound
mov
outsl
push
loopne
mov
mov
jne
mov
push
sbb
or
pop
stc
in
or
add
lret
imul
cs
outsl
leave
adc
add
add
dec
call
add
sub
test
dec
lret
xor
jg
outsb
or
movsl
fldcw
sub
es
add
xor
push
add
faddl
xor
pushf
outsb
stos
loope
lret
inc
pop
cmp
aad
lret
jne
push
push
add
and
or
orb
stc
jecxz
pop
jecxz
xor
mov
add
inc
xor
add
lea
aam
push
push
divl
gs
sti
jns
cmpb
push
mov
icebp
xor
add
mov
jle
loope
imul
push
jo
fs
push
data16
fists
std
aam
push
xchg
outsb
dec
scas
pop
pop
cmpb
nop
sahf
add
push
clc
or
fwait
loope
adc
push
loop
inc
jmp
or
iret
in
jmp
rcl
adc
popa
adc
pusha
mov
add
sbb
xor
sbb
adc
push
testl
dec
pop
dec
xor
out
js
or
fstpt
mov
jecxz
push
sub
test
fstl
add
jnp
call
adc
sbb
sqrtps
add
jno
pushf
fmuls
xchg
movsl
movsb
lods
enter
xchg
mov
test
xor
cmpb
adcb
arpl
jno
mov
cmc
jo
leave
ret
cmpsb
hlt
push
adc
and
adc
and
mov
ficompl
or
test
lock
out
sub
or
repz
mov
sti
aas
clc
jge
insb
clc
xor
mov
repnz
sub
in
pusha
loop
adcb
pop
mov
mov
jmp
sbb
hlt
flds
add
sub
clc
dec
imul
mov
pop
mov
pop
sub
pop
adc
test
out
repz
testb
push
out
inc
xchg
iret
ret
dec
inc
daa
movsb
push
mov
mov
mov
sarb
imul
ret
jns
call
daa
jecxz
or
shl
and
xor
aam
sbb
inc
xor
mov
cmp
arpl
adc
push
lret
loopne
repnz
sbb
in
fsubr
je
and
xchg
dec
cmp
mov
xchg
test
sbb
cmp
dec
mov
iret
xchg
push
xor
daa
add
mov
aad
xchg
xor
andnps
push
iret
sbb
lcall
gs
nop
enter
and
rclb
addr16
jnp
pmuludq
loop
aaa
pop
jnp
dec
in
pop
daa
push
fucomip
pop
sbb
mov
fistl
aas
xchg
jmp
push
aam
adc
xchg
jo
jmp
and
ret
push
cmpsl
ret
sahf
sbbb
push
jge
xchg
mov
mov
bound
scas
and
int3
insb
cmp
mov
and
mov
and
shll
add
fsubs
xchg
push
fadd
rcll
stc
jmp
fs
pop
sub
imul
xor
cs
out
outsl
or
jecxz
pop
mov
xor
call
js
push
sub
loope
mov
aad
jmp
call
cmp
jne
mov
lret
test
in
sbb
jmp
sub
in
add
shl
mov
adc
outsb
add
aam
sbb
mov
imul
inc
add
pop
cmp
mov
xchg
ljmp
adc
je
or
call
xor
jb
mov
fistps
movsb
xchg
sub
dec
pop
lds
add
xor
push
daa
mov
das
xchg
orl
jno
mov
or
pushl
into
imul
orl
jbe
test
scas
adc
push
fimull
imul
js
or
call
int3
dec
or
push
push
sub
mov
cld
mov
mov
int
int
lods
pop
hlt
lea
loope
jmp
xchg
loop
adc
push
pop
addb
inc
mov
mov
dec
test
je
in
in
sbb
xor
ret
cmp
test
add
sub
loope
movsb
push
xorl
xchg
bts
jmp
lds
clc
movsl
insb
mov
test
loope
sbb
dec
and
inc
fadd
xorb
shlb
push
xchg
loopne
out
inc
or
xchg
outsb
push
mov
popf
xchg
pop
pusha
notl
inc
add
jge
shll
ret
mov
loope
jecxz
in
xor
push
je
push
adc
mov
cld
pop
fdivrp
ret
or
and
pop
push
jb
dec
leave
lret
test
dec
cmp
jae
dec
mov
push
fmull
loop
xlat
pop
ja
cld
jae
jae
add
pop
push
addl
pusha
inc
inc
xchg
ds
dec
pusha
mov
add
sbb
cmp
mov
adc
pop
push
out
cmp
cmpsl
lahf
out
push
or
addb
ja
add
daa
addr16
or
out
lods
jl
lock
jne
mov
mov
nop
or
ret
cld
es
dec
cmp
out
adc
inc
shlb
cli
shrb
and
scas
ror
rorb
daa
mov
and
push
add
gs
pusha
repz
add
rcll
xchg
test
adc
lock
jno
cs
sbb
lret
mov
dec
in
cld
or
sbb
dec
dec
sahf
ds
in
push
outsb
out
fmulp
js
push
sahf
lods
fldl
fstps
loope
jecxz
gs
pop
mov
cmp
add
ret
insb
pop
and
mov
jge
fcompl
xchg
jmp
das
aas
pop
repz
or
mov
pusha
sbb
and
or
pop
test
adc
icebp
inc
repnz
icebp
inc
or
cld
xchg
dec
xor
insl
hlt
mov
call
movsl
cmpsb
pop
mov
inc
and
and
xchg
jbe
adc
mov
ret
popf
test
and
jmp
and
aaa
lock
in
fisttpll
out
add
lock
movsb
leave
sub
test
aad
jae
jb
scas
dec
jns
inc
es
inc
mov
xor
inc
push
push
jl
push
mov
adc
call
cmp
cmpsb
loope
inc
jge
scas
nop
cmp
movsb
rcrb
xor
insl
or
push
adc
testb
or
dec
rorb
test
popf
ja
add
jl
clc
inc
push
mov
mov
inc
inc
call
in
sarb
jmp
pop
lock
inc
call
mov
or
push
inc
xor
and
sbb
enter
cli
sub
fs
mov
inc
dec
adc
mov
xor
sub
xchg
mov
jle
add
or
sub
push
or
jg
js
xchg
xor
call
push
sarl
pop
sbb
in
mov
xor
xchg
test
xchg
cli
mov
dec
inc
cmp
lahf
movsl
mov
mov
adc
shrl
fcomi
rcr
les
cmpsb
or
popf
xchg
imul
pop
ret
clc
clc
mov
cmp
stos
xchg
into
pusha
and
popf
test
mov
mov
sub
fldcw
add
mov
fcomi
adc
jno
orb
enter
dec
call
adc
pushf
or
pop
inc
add
inc
pop
sub
aas
adcl
mov
pop
sbb
lods
divl
popf
jnp
xchg
cmp
testb
xor
daa
out
jns
es
inc
pop
je
repnz
testl
pushf
cmp
sahf
out
mov
push
pcmpeqw
je
or
testl
mov
push
add
xchg
dec
mov
mov
pop
inc
inc
scas
fs
daa
nop
aam
add
enter
push
cmpb
mov
ja
jl
insl
in
out
jbe
mov
adc
test
push
daa
lds
test
inc
push
mov
std
xorl
mov
lcall
or
and
jne
jle
pop
cmp
inc
dec
jns
push
pusha
loopne
mov
mov
dec
or
dec
clc
test
pop
mov
lret
push
mov
add
add
mov
int3
sub
cltd
pop
mov
in
jl
sarl
add
data16
mov
in
pusha
add
or
das
mov
cmpb
jg
idivb
add
js
cmpl
sbb
and
nop
fidivrl
add
addb
mov
jne
mov
jmp
lds
js
das
sbb
and
adc
push
pop
mov
dec
orb
movsl
aaa
add
xor
push
lods
aaa
or
and
fimull
cmpsl
js
pop
xchg
push
and
or
jno
mov
js
pushf
stc
pop
push
mov
or
and
rcrl
aad
cmp
les
cltd
js
mov
add
jb
push
jg
dec
lret
inc
lods
mov
mov
adc
xor
rcrb
xchg
arpl
lea
pop
inc
leave
dec
test
jg
fdivrs
je
sbb
push
add
andb
pop
xchg
xor
sbb
into
mov
loopne
int3
jmp
add
xchg
outsl
jnp
xchg
xchg
lret
sti
sahf
xchg
and
adc
xor
or
jg
xor
pop
xlat
test
hlt
in
xor
mov
pushf
jmp
popa
dec
sbb
mov
sbb
dec
sub
leave
cmp
and
jne
test
mov
sti
push
push
push
sub
or
cmc
leave
imul
adcl
and
sbb
in
add
jle
enter
pusha
inc
mov
lods
adc
movsb
test
cld
int3
mov
aad
cwtl
in
jae
adc
adc
dec
cmp
test
lcall
loopne
sbb
mov
xchg
pop
add
cmp
mov
dec
dec
std
add
xchg
xorb
push
add
push
push
ficompl
popf
fld
mov
shll
xchg
sub
pop
ds
inc
inc
es
lock
xor
repnz
jl
std
or
push
or
aas
into
push
or
cmpb
sbb
mov
enter
sbb
je
insb
or
pop
jmp
ljmp
add
pop
or
mov
aad
gs
pop
nop
cmp
add
or
ja
arpl
xor
add
shl
cs
adc
fildll
xchg
vpblendw
std
cwtl
nop
es
and
data16
push
pop
add
inc
pop
lods
or
xchg
aaa
or
mov
jne
nop
push
xchg
test
and
shlb
adc
mov
push
pop
hlt
xchg
in
or
dec
add
jmp
je
xchg
add
out
cmp
mov
mov
movsl
or
xorb
or
shll
repnz
faddp
push
push
call
and
sub
movsl
in
cmp
scas
mov
cmpl
cmpsl
js
out
add
mov
xor
pop
push
daa
mov
cmp
addb
inc
int3
push
sub
xor
loop
jecxz
dec
push
xorb
push
je
test
fsub
mov
or
cld
inc
sti
add
in
popl
add
sub
test
cs
lea
ret
sbb
stos
push
xor
outsl
and
cmp
push
dec
xor
dec
std
scas
ret
xchg
add
inc
push
pop
fisubrl
inc
imul
mov
adc
aas
pop
jmp
and
sti
push
cmp
xlat
sbb
add
push
push
xchg
or
add
and
jnp
xchg
ret
clc
jmp
in
mov
jmp
je
adc
pushf
movsb
lahf
push
adc
lods
inc
jno
sub
add
or
push
bound
mov
xor
add
jae
sub
test
clc
shll
add
sbb
mov
push
or
push
int3
gs
mov
roll
xlat
shr
mov
cltd
add
lea
mov
xchg
mov
add
mov
mov
sub
notb
movsb
or
fcoml
into
xor
je
pop
xor
add
sti
or
mov
mov
fistl
orw
add
sub
push
and
in
daa
sbb
push
sarb
loop
xchg
dec
enter
lock
push
sbb
mov
adc
adc
popf
add
ss
shlb
cltd
fildl
pop
sbb
push
adc
rcrl
lcall
enter
xlat
mov
and
xchg
xchg
sarb
jmp
or
testb
sbb
and
enter
mov
scas
in
dec
mov
pop
adcb
int
sub
bound
sbb
cmpsb
xchg
xor
or
inc
sub
inc
or
adc
call
movsl
roll
rol
jne
out
call
stos
adc
scas
push
orb
dec
or
sub
push
mov
xor
xchg
adc
mov
cmp
inc
xchg
adc
xchg
adc
inc
jno
adc
stos
mov
mov
add
adc
pop
js
sub
push
in
cwtl
push
mov
sahf
inc
adc
cs
es
jp
mov
ret
mov
fdivrs
jge
pop
sub
jg
inc
and
push
ret
jge
push
add
cmp
nop
jo
push
mov
xor
out
mov
add
push
idivl
jl
pushf
inc
inc
inc
sbb
icebp
mov
inc
mov
test
data16
outsl
jo
and
add
out
pop
fisttps
push
fwait
stos
pop
push
aaa
inc
inc
pop
inc
push
cs
sbb
decb
inc
mov
pop
fmull
cmp
xchg
jmp
inc
lds
push
mov
add
xor
daa
inc
cld
mov
cs
jne
xor
dec
rorb
xor
mov
mov
push
jo
loopne
imul
test
dec
inc
push
mov
ret
hlt
pop
dec
cmp
adc
xor
mov
jg
or
xor
mov
aad
dec
aas
add
cmp
inc
dec
jne
test
push
dec
in
orb
fstps
rolb
adc
push
das
sub
cmpsl
mov
cwtl
push
sbb
jmp
sbb
adc
xlat
and
adcb
pop
or
cmp
fsubl
push
pop
pop
rclb
mov
aas
loope
and
push
mov
aam
and
push
add
adc
push
dec
cmp
xlat
add
fnsave
pop
mov
pop
xlat
clc
push
je
inc
outsb
mov
jmp
sbb
fimuls
sbb
andb
jmp
push
mov
xchg
sbb
jo
add
cmp
nop
lcall
jno
ja
test
sub
add
jns
or
adc
add
sub
maskmovq
testl
inc
pusha
fdivs
jp
or
cmp
cmp
push
mov
inc
and
or
addr16
jge
aad
lods
xor
pop
or
sbb
pop
adc
or
inc
and
adc
nop
mov
or
jne
loopne
adc
jp
mov
aas
or
xor
pop
xor
xchg
pop
scas
jo
bound
push
pushf
arpl
or
pop
icebp
clc
adc
or
fsubr
xor
sahf
cmpl
push
jle
xchg
popa
pusha
stc
cmp
lock
int
out
sub
cmp
cmpsl
or
add
shlb
add
pop
outsl
rol
loopne
add
push
int3
rorb
loope
xor
seta
xor
jmp
dec
shl
sbb
ja
pop
out
inc
push
andl
cmpsl
add
inc
das
inc
jns
inc
pop
aas
ja
pop
int3
or
ja
lock
sub
mov
sbb
call
inc
mov
out
enter
cmpsl
ss
les
ljmp
ret
cmp
inc
or
inc
je
fs
cltd
rorb
out
xor
adc
sarb
repnz
mov
test
and
inc
cmp
sub
loop
or
insb
adc
push
insl
jg
mov
sbb
lret
cmp
jne
test
adc
rolb
push
frstor
xor
push
inc
sub
pop
mov
pop
or
in
mov
mov
stc
pop
dec
pop
push
stos
inc
fldenv
add
push
adc
dec
adc
iret
in
nop
pusha
jg
add
movsl
push
btc
add
cli
and
sub
imul
add
push
adc
fildl
test
jge
int3
rorb
jmp
iret
pop
leave
push
jb
adc
int3
dec
movsb
in
add
cltd
or
mov
lea
add
jle
imul
add
push
or
adc
inc
dec
add
add
dec
imul
mov
in
adc
push
push
sub
push
stos
cmp
jo
sub
lret
push
fstps
incl
idivl
sub
faddl
push
sub
gs
adc
sbb
cli
fwait
mov
or
in
sub
adc
pusha
sbb
add
hlt
add
adc
mov
sub
inc
add
clc
jne
push
les
int
test
mov
fisttpll
pop
mov
sbb
call
ja
hlt
jle
mov
cld
ds
jb
aas
jo
or
fwait
or
push
adc
and
push
push
stos
les
sub
adc
js
fdivl
icebp
and
push
ja
xchg
jp
or
adc
pop
mov
pop
loopne
outsl
or
pop
push
and
sub
mov
sbb
pop
scas
sub
jnp
sbb
lahf
pop
push
rsqrtps
orl
shrb
cs
sbb
xor
mov
sbb
test
in
push
jmp
add
sub
lds
in
rcll
lds
lea
sub
dec
dec
cmp
or
inc
push
stc
pop
add
sbb
pop
mov
sub
jg
test
in
adc
inc
or
lea
mov
dec
movsl
rorb
sbb
and
sub
xor
mov
jns
or
pop
loope
mov
movsl
daa
pop
dec
test
int
and
or
pop
cmpsl
sbb
dec
ds
std
add
xchg
and
jo
or
xchg
pushf
test
rcl
sbb
fiadds
fs
add
adc
pop
daa
mov
or
aaa
ljmp
insb
add
shll
or
or
mov
mov
push
adcb
mov
jmp
enter
lea
adc
aaa
adc
or
add
pop
dec
or
or
divl
push
xchg
cmp
fisttpl
mov
push
cmp
adc
adc
or
stos
adc
movzbl
sub
pusha
push
push
andb
jp
or
fstpt
pop
xchg
dec
mov
daa
adc
cmpsb
test
mov
jbe
testb
je
into
inc
pop
dec
jge
mov
mov
adc
push
push
push
dec
mov
adc
mov
rorb
imul
xchg
loopne
dec
icebp
rclb
push
test
xor
add
ss
jo
fdivrl
test
fimuls
gs
sti
xor
popf
es
scas
add
xorb
lret
mov
xor
loop
ljmp
xchg
adc
pop
fcompl
adc
add
movsb
dec
pusha
jnp
push
mov
outsl
int3
adc
std
inc
stos
and
add
aaa
pop
imull
ss
pop
addb
popa
cltd
jno
popa
pop
je
push
std
add
mov
arpl
sub
ret
cmp
cmp
push
in
mov
andl
sub
mov
cltd
xor
jb
jb
xor
and
imul
daa
mov
insl
in
cwtl
int3
xchg
unpcklps
daa
daa
daa
daa
or
add
xchg
xchg
xchg
and
xchg
xchg
xchg
lock
call
xchg
loopne
unpckhps
add
push
hlt
ret
cltd
inc
cltd
cmp
and
pop
repnz
add
outsl
push
sbb
add
xchg
xchg
push
and
dec
push
in
push
les
dec
push
in
mov
sbb
rorl
int3
das
mov
pop
add
jb
rclb
xor
cmp
pushf
mov
and
jns
pushf
pushf
pushf
pushf
jnp
jge
pushf
pushf
pushf
pushf
jg
popa
bound
gs
pushf
pushf
pushf
addr16
pushf
pushf
imul
pushf
pushf
pushf
outsl
push
push
push
pushf
pushf
pushf
pushf
push
push
push
push
pushf
pushf
pushf
pushf
push
pop
pop
pop
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pushf
pushf
pushf
pushf
pop
inc
inc
inc
xchg
cmp
inc
movl
inc
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
xor
xor
xor
xchg
xchg
xchg
xor
xchg
xchg
xchg
cmp
cmp
xchg
xchg
xchg
cmp
xchg
xchg
xchg
and
and
xchg
xchg
xchg
and
xchg
xchg
xchg
sub
sub
sbb
fcomps
adc
outsb
out
and
push
inc
insb
xorl
cmp
cs
loop
inc
cpuid
outsb
sbb
jb
mov
dec
and
xor
or
xchg
add
push
inc
sbb
add
mov
clc
or
xchg
and
roll
add
fwait
jae
xchg
mov
or
push
pop
push
add
jl
xchg
or
push
stos
pushl
in
mov
fists
jns
add
push
mov
fwait
sbb
mov
dec
je
arpl
adc
imul
adc
gs
jae
js
dec
imul
popf
in
sbb
mov
jbe
mov
xchg
das
aam
push
outsb
int
rcrb
cltd
push
rolb
jo
outsl
sbb
push
inc
pop
idiv
inc
popa
jae
add
sbb
or
sub
jl
or
add
pop
sub
negl
cmp
or
and
bswap
sbb
insl
inc
insb
std
outsb
jae
push
push
push
dec
outsl
jo
je
mov
inc
jns
sbb
or
mov
addr16
and
add
sbb
fucomi
ret
and
xchg
jge
or
adc
push
pop
adc
mov
clc
add
jne
mov
pop
sbb
pop
bound
adc
or
dec
jl
jp
ss
lods
pop
imul
fidivl
or
inc
inc
imul
pop
inc
outsl
jb
jae
es
pop
outsl
sbb
pop
cmp
rcrb
sub
mov
pushl
and
push
aad
push
xchg
lahf
mov
inc
jo
pop
xor
jb
fsubrs
push
adc
adc
imul
cmpsl
inc
xchg
insl
inc
sti
xor
out
nop
xchg
pop
repnz
push
pushf
push
shrb
es
xor
aad
ficoml
js
mov
jne
aaa
js
lret
xor
pop
xor
cmp
pop
sbb
addr16
push
cmp
in
addr16
stos
cmpl
pop
push
mov
push
add
jnp
cmp
cmp
ja
jno
dec
gs
inc
les
add
faddl
inc
sbb
mov
push
mov
in
lret
jmp
cmp
push
push
add
popf
iret
int
push
imul
mov
push
jl
and
nop
outsb
sbb
sbb
xchg
pop
xor
cmp
js
push
fidivrs
mov
mov
les
out
dec
adc
push
cmp
or
xlat
mov
sarl
xchg
add
rcr
subb
je
jl
cmp
popa
roll
aas
movsb
lods
push
aad
addl
push
inc
je
pop
add
fbld
jmp
daa
jns
repnz
sbb
mov
scas
push
cmp
xlat
loop
dec
repnz
add
js
sbb
pushf
mov
dec
add
test
aas
into
xchg
shl
pop
dec
jne
push
inc
xchg
fistpll
push
push
inc
mov
push
inc
jmp
xlat
test
jae
pop
sbb
cli
loop
ret
and
adc
inc
dec
and
popa
bound
or
cmp
repz
and
and
int3
or
lods
push
mov
shr
test
and
cmp
push
adc
into
jg
incb
push
xchg
ret
sbb
stos
dec
sub
fdivrl
stos
and
iret
repz
xchg
mov
mov
sbb
fimuls
rclb
xchg
and
out
rcrb
clc
scas
pop
mov
ja
mov
add
add
push
pop
cld
mov
es
out
jbe
scas
pop
add
test
call
sub
or
pop
adc
or
add
pop
dec
adc
add
pusha
loop
pushaw
vmread
fadds
fsubs
and
push
nopl
mov
sub
push
cmp
add
pushf
xor
mov
fsubrs
mov
arpl
push
cld
imul
movsl
or
aaa
sbb
cmpsl
or
je
jb
xor
mov
das
orl
sub
insb
ds
or
ds
popa
fsubs
mov
addr16
mov
leave
dec
inc
and
nop
mov
mov
popa
or
xor
ret
jle
adc
inc
das
movsb
push
mov
xchg
or
pop
repnz
add
add
pop
hlt
add
push
test
mov
insb
adc
hlt
xor
pop
jno
jg
or
inc
iret
testb
jle
fs
jo
inc
add
sbb
jne
jbe
or
and
loopne
push
pop
and
dec
int3
inc
sub
jg
cmovo
dec
push
test
cmpsl
ret
push
insl
mov
inc
mov
cmp
dec
push
sarb
test
or
xchg
enter
push
mov
jo
insl
mov
nop
movsb
cwtl
mov
lahf
push
ss
mov
test
jnp
fwait
sub
les
leave
add
xchg
push
loope
pop
sbb
add
inc
ret
sub
sub
cmp
lahf
insb
push
pushf
or
outsl
outsb
pop
sub
sub
mov
xor
dec
jb
pop
mov
cwtl
ret
or
xchg
add
out
in
mov
mov
xchg
cs
mov
pop
jbe
or
es
pop
sbb
xchg
mov
fcompl
in
mov
sub
add
push
fildl
dec
call
sbb
dec
popa
outsb
nop
mov
shlb
mov
xor
rol
xor
inc
dec
jne
mov
mov
and
call
sub
bound
negl
sarb
rolb
fsubrs
push
inc
adc
das
stos
je
rcll
or
xchg
faddl
mov
sub
push
add
sub
sbb
and
and
inc
jne
orl
clc
inc
lahf
movsb
test
cmpsl
jne
mov
and
jae
popa
lcall
lret
mov
dec
adc
cwtl
fwait
push
addr16
sub
push
scas
mov
sar
inc
add
adc
lock
int
jmp
jae
mov
and
lea
or
add
xchg
mov
inc
fsubrs
sub
call
sbb
xchg
fdivp
shrb
les
verr
or
cltd
scas
shrl
cmp
adc
sub
loope
cmpsb
push
jmp
mov
xor
sbbb
or
sub
jnp
fidivs
and
out
or
or
std
jb
cwtl
xlat
cmp
push
sub
test
inc
pop
xor
jmp
daa
add
sbb
inc
push
jle
nop
imul
inc
rorb
xchg
jae
int
sub
pop
outsl
add
lcall
rclb
jge
pop
and
or
and
cmpsl
pop
add
in
xor
add
inc
jmp
aaa
lahf
fucomp
push
push
or
adc
fistl
push
jg
mov
add
imull
sub
adc
adc
inc
push
subb
cmpsl
dec
inc
add
or
cltd
dec
cmp
ja
ret
push
das
xchg
jg
insb
iret
jbe
inc
insb
scas
arpl
jb
outsl
outsb
inc
scas
push
ret
lods
outsb
pop
dec
insb
pop
repnz
imul
jbe
add
out
add
jo
inc
push
gs
insb
pcmpgtd
pop
ss
imul
jbe
jb
cmpsb
fs
xor
roll
gs
jb
mov
insb
outsl
ja
jne
or
nop
incl
arpl
imul
xchg
setle
movl
adc
lods
rcpps
mov
sahf
mov
inc
dec
data16
xchg
mov
daa
push
jmp
outsl
jb
xchg
cltd
pop
and
cmovae
imul
push
pop
jo
push
pop
imul
xchg
mov
pusha
and
inc
push
addr16
mov
inc
je
inc
push
xchg
dec
enter
mov
fadds
and
aas
push
gs
or
das
push
stos
daa
bound
xchg
pop
xchg
imul
xchg
jbe
stos
inc
pop
or
push
lock
push
subl
pop
jg
fldt
jns
adc
repz
adc
shlb
pop
adc
scas
pop
or
outsw
inc
push
or
jne
push
mov
adc
mov
pusha
enter
das
andl
aas
xlat
jno
push
arpl
add
mov
inc
inc
imul
das
or
fdivrs
xchg
int3
daa
or
pop
jb
adc
sarb
push
addr16
ret
push
add
cmpsb
dec
fcmovnu
xchg
pop
push
loop
add
pop
sbb
out
pop
les
mov
out
test
aas
dec
mov
push
dec
pop
inc
dec
inc
push
push
inc
fdivrs
addr16
inc
push
dec
push
xor
notl
dec
inc
dec
dec
arpl
dec
inc
inc
push
adc
inc
push
dec
dec
pusha
jbe
mov
mov
shlb
or
popa
out
inc
fstpt
xor
adc
inc
dec
inc
and
repnz
jnp
dec
inc
xor
inc
dec
fsts
push
push
dec
dec
push
dec
dec
mov
push
das
sbb
mov
xchg
dec
inc
inc
dec
push
mov
dec
inc
dec
xor
ja
or
push
dec
pop
xor
inc
inc
push
push
push
dec
push
inc
scas
leave
popl
push
push
frstor
or
xor
shrl
dec
test
lock
push
aaa
ds
pop
cwtl
mov
push
into
fs
sbb
xor
jmp
adc
dec
jl
addb
testb
sbbb
add
add
jns
or
pop
mov
add
repnz
ss
ret
insl
sbb
add
pop
and
and
add
pushf
inc
clc
stc
jne
or
add
add
mov
add
xor
dec
lods
loopne
cmp
pop
shlb
and
xchg
dec
xchg
shlb
add
daa
and
testb
adc
xchg
aaa
aas
xor
pop
dec
sbb
add
and
iret
pop
sub
testb
ja
add
inc
sub
clc
adc
xor
xchg
sbbl
adc
sub
xor
mov
std
pushf
adc
test
jne
xor
pop
ja
mov
aas
bound
push
mov
sub
cmp
test
jl
jo
das
cmp
jo
and
push
cli
das
cwtl
add
and
mov
test
das
adc
push
cmp
jae
ret
sub
push
ds
ret
mov
aaa
mov
push
inc
xchg
test
lods
mov
add
test
mov
test
push
sub
or
adc
mov
les
enter
and
testb
je
rol
jmp
sete
adc
inc
pop
inc
cs
sbb
jmp
rcrl
adc
lea
incb
inc
add
mov
sbb
lahf
sbb
push
pop
std
xchg
and
lods
inc
jmp
jge
mov
jo
xor
movb
xor
lds
jecxz
fstpt
jmp
inc
fildl
or
jmp
push
dec
pushf
add
shlb
cld
mov
or
cmp
jae
xor
jmp
pop
pop
or
and
rcrl
icebp
xlat
scas
mov
aam
ret
mov
sub
jecxz
insl
addl
xor
insl
dec
or
cmpsb
push
push
fcmovb
ret
dec
mov
ss
xchg
xlat
adc
shlb
fwait
scas
mov
and
in
addb
test
sub
inc
pop
cwtl
arpl
mov
mov
cmp
pop
add
fadds
testl
push
cwtl
jp
lods
cmpl
mov
mov
ja
aam
addr16
cmp
int
mov
or
or
inc
sbb
sti
pop
add
pop
add
loope
pop
sbb
jmp
iret
push
dec
fnsave
add
pop
shrb
xchg
sub
pop
rolb
and
nop
pushf
cmp
sub
adc
pop
cmp
add
in
sub
into
sar
cmp
jb
lea
xchg
and
lock
sub
inc
adc
dec
xchg
mov
fistpll
je
inc
cmp
sbb
mov
or
ffree
std
adc
adc
js
in
cmc
jo
in
je
push
xor
inc
or
push
inc
cs
cmp
das
repnz
cmp
dec
lods
pusha
mov
sbb
inc
push
or
shlb
and
adc
and
je
xchg
xchg
adc
cmp
pop
and
cmp
dec
nop
outsl
push
push
popa
add
aas
das
fs
pop
ds
xor
push
cmp
and
mov
das
sub
fisttpl
add
adc
mov
xor
and
adc
add
ja
and
enter
shrl
andl
mov
add
add
fs
jg
das
cmp
ss
test
and
sbb
mov
outsb
adc
lock
hlt
in
mov
adc
lcall
popa
gs
lock
in
pop
xor
mov
or
sub
push
aas
shl
shlb
adc
dec
xchg
push
fwait
cmp
xor
jno
addr16
xchg
push
sbb
test
fdivrl
mov
es
push
inc
in
push
push
faddl
sarb
lods
pop
jb
adc
aam
inc
push
test
and
cmpsb
inc
nop
mov
rorb
loopne
dec
pop
and
mov
or
inc
mov
dec
fldt
push
adc
mov
loopne
inc
cmp
adc
sarb
ret
loopne
inc
jo
shl
pop
mov
sbb
mov
out
jle
and
push
or
push
add
or
pop
or
or
xlat
xor
sbb
xchg
push
sub
pop
imul
gs
sbb
int3
mov
push
xorl
mov
call
inc
and
lds
int3
loopne
iret
sbb
lods
xor
in
xchg
and
xor
inc
enter
adc
iret
inc
cmp
or
sub
mov
mov
pop
test
xor
mov
pop
inc
mov
in
mov
push
in
test
inc
pop
jge
push
cmpsb
mov
ret
insl
fs
rep
or
mov
adc
dec
popa
mov
lea
int3
imul
push
mov
add
mov
adc
es
inc
and
fisubrl
iret
adc
cltd
adc
pop
popa
push
mov
or
mov
fcoms
fldenv
iret
inc
iret
loope
push
pop
aaa
cmp
daa
xor
adc
repnz
hlt
jnp
push
sub
lock
std
pop
sub
inc
sti
jae
fistl
dec
adc
cmp
mov
lahf
xor
push
mov
pop
adc
cld
lock
inc
je
mov
mov
pop
jo
or
mov
fldenv
std
mov
adc
faddl
mov
shlb
or
lcall
push
test
adc
aam
fwait
dec
in
pushf
iret
add
pop
jmp
inc
jae
jl
fisttps
ds
shlb
inc
or
je
push
mov
mov
add
fistpl
inc
andb
mov
cld
aas
es
sbb
sbb
dec
add
mov
and
sbb
adc
lea
hlt
scas
cwtl
ret
sti
lock
not
and
cli
inc
push
les
in
lret
inc
popf
inc
mov
and
push
inc
fimull
test
push
add
fiaddl
movsb
or
or
pop
push
mov
clc
xor
push
xor
sub
add
or
les
add
push
adc
sbb
movb
addl
adc
jnp
aas
nop
fmuls
push
xor
and
push
movsl
xor
inc
orb
imul
push
pop
sub
je
xor
sti
xchg
jecxz
jb
ds
jno
and
in
pop
repnz
or
cwtl
or
pop
xor
sub
push
ret
jle
inc
enter
inc
pop
repnz
xchg
add
sub
push
enter
xor
dec
pop
xchg
add
sbb
imul
xor
test
adc
sahf
cmpsb
fisubrs
lea
adcb
aaa
mov
sbb
inc
incl
daa
in
add
out
dec
sub
int3
jge,pt
add
enter
jo
shll
jl
adc
in
dec
bound
add
lock
lods
sbb
push
loopne
fs
hlt
ljmp
sbb
les
xchg
mov
cmc
fwait
dec
shrl
inc
in
in
cmp
pop
loopne
dec
shll
push
out
ret
push
pop
cmpb
mov
sbb
lock
inc
es
jle
push
das
push
jno
out
pop
in
inc
or
mov
arpl
adc
mov
mov
test
push
aas
testb
adc
ljmp
jo
push
mov
fldt
sub
cmp
shl
jg
loop
and
das
pop
sar
inc
sub
pop
sahf
test
add
addr16
cmpl
mov
movsl
mov
adc
push
pushf
lahf
add
jl
rorb
iret
test
adc
out
xor
stc
dec
jnp
xor
adc
sbb
popa
dec
lcall
das
jmp
push
and
add
lahf
xchg
orb
cmpsb
fdivrl
or
dec
sub
jge
sbb
lock
dec
fdivl
and
cmpsl
sbb
or
fcompl
rorb
jmp
jns
or
dec
add
sbb
lock
jo
push
das
inc
cmp
lea
jge
pop
js
lods
loopne
movb
mov
movsl
movl
adc
out
adc
pop
rorb
xor
rcrb
dec
outsl
and
cmp
push
adc
mov
mov
sub
xor
or
add
mov
rcrb
or
add
dec
aaa
incb
add
faddp
inc
add
rol
pop
out
sub
sub
cmp
aas
dec
push
lock
es
mov
dec
repz
lea
mov
pop
pop
fists
mov
dec
jne
fidivrl
mov
jge
adc
adc
adc
sbb
push
inc
add
gs
mov
inc
pop
out
aad
sbb
jo
mov
movsb
dec
js
and
fsubrs
adc
sub
or
jmp
fidivrs
mov
mov
sub
shl
mov
mov
jmp
fwait
outsl
clc
sti
mov
fsubrp
movw
aaa
hlt
sub
mov
adc
cld
addl
inc
das
lods
xor
jno
in
adc
add
add
push
mov
add
idivb
xchg
rolb
jne
ds
add
adc
unpckhps
lea
xor
push
cs
dec
pop
ss
jmp
addr16
data16
cmpb
dec
dec
sub
lods
loope
rorl
add
ss
loope
add
fsubl
sub
jbe
mov
adc
push
test
icebp
aaa
add
dec
wbinvd
or
mov
fisttpl
mov
mov
inc
jmp
lret
sbb
scas
mov
cld
mov
xchg
mov
inc
cmp
add
push
dec
clc
into
lods
loopne
xorl
adc
arpl
mov
fwait
testb
pop
mov
ret
cmp
adc
adc
pop
sti
pop
adc
and
xor
push
inc
push
gs
sbb
movsl
inc
add
pop
mov
jb
aas
aam
rcrb
add
mov
sahf
ret
and
mov
call
inc
mov
xor
cmpsl
addr16
and
and
shrl
adcl
jno
add
sub
xchg
xor
lret
and
das
jo
sbbl
push
push
and
push
cwtl
jge
add
dec
mov
or
adcl
dec
lret
push
repnz
mov
pop
push
mov
stc
push
cmp
jo
loop
mov
mov
sub
lahf
sbb
icebp
add
nop
and
push
lock
test
cwtl
jl
adcb
push
sahf
mov
aam
mov
jb
cld
push
push
push
js
and
add
sbb
sub
jg
lahf
inc
test
je
imul
inc
xchg
nop
mov
fcomps
in
inc
lret
jl
sub
imul
sti
sbb
out
dec
or
pop
dec
movzbl
sbb
lock
cmp
pop
add
adc
call
es
jle
cmp
jl
cmpsl
cltd
fidivs
enter
jg
bound
clc
and
js
pop
les
daa
mov
adc
push
es
aas
pop
sahf
js
push
cmp
push
dec
add
dec
add
loopne
sbb
xor
add
pop
or
test
push
add
nop
out
pop
fcomp
push
sub
mov
ds
sbb
scas
into
xor
test
loope
or
in
or
arpl
test
sub
js
sbb
inc
adc
push
repz
pop
loopne
hlt
test
jo
xorb
mov
inc
push
jg
or
jl
push
cmp
adc
mov
cmp
cld
push
mov
mov
push
ss
dec
jne
cmp
jbe
adc
jno
mov
xor
daa
mov
sbb
mov
add
sub
negl
adc
add
or
pop
adc
lds
or
popf
sbb
sbbl
mov
and
nop
pop
sti
push
and
mov
insl
mov
cmp
and
ljmp
lods
inc
and
xor
sahf
pop
hlt
in
clc
jge
cmp
add
push
mov
pop
lods
push
push
xchg
sbb
sbb
mov
push
push
mov
sbb
or
shll
loope
cmp
fsubrs
push
sarb
mov
push
and
xor
add
inc
aam
inc
stos
xchg
xor
adc
cmp
pusha
sarb
push
leave
cli
adc
push
xor
add
sarb
loope
pop
or
lods
ss
loope
insb
sbb
test
mov
loopne
aas
sbb
sbb
cmp
jb
mov
sub
mov
adc
movl
sub
in
sub
dec
or
jb
sub
addr16
jb
jmp
jbe
adc
jmp
setb
xlat
and
adc
fistps
in
xchg
sbb
adc
insb
and
and
sub
or
test
add
bound
imul
dec
jae
or
jl
decb
ja
fmulp
cmp
inc
or
pop
and
jnp
jbe
sub
push
imull
inc
es
pop
adc
sbb
daa
fcomps
push
mov
push
mov
push
push
pusha
sbb
inc
adc
inc
call
add
add
and
mov
adc
test
push
fs
cwtl
sbb
loopne
push
push
jne
jge
fmuls
add
xlat
sbb
and
inc
and
loopne
loope
hlt
push
inc
pop
dec
pop
pop
scas
jbe
int3
inc
xchg
push
cmp
dec
sbb
ret
add
push
mov
sbb
jecxz,pt
stos
sar
pop
mov
cmp
pushl
roll
or
jg
mov
xor
out
rolb
lods
pop
lods
jecxz
movsb
lahf
push
dec
dec
dec
sahf
push
in
push
sbb
adc
shrb
mov
mov
pop
adcl
jecxz
enter
and
hlt
movsl
jmp
xor
dec
call
jae
loopne
mov
loopne
call
push
cmp
pushf
loopne
fcompl
fcompl
ret
shl
call
jnp
sub
int3
subb
push
add
xor
push
lock
ret
and
xchg
adc
int3
xor
fidivl
mov
xchg
shr
mov
mov
or
push
pop
or
lods
data16
push
mov
mov
ja
push
scas
lods
cmpsl
mov
mov
mov
or
adc
mov
sub
sub
push
sbb
test
sbb
in
in
lcall
xchg
hlt
out
imul
fcoml
xchg
call
orl
fs
jecxz
jle
push
and
or
adc
cmp
lock
scas
iret
and
aaa
pop
mov
je
das
add
and
sbb
rorl
shrb
inc
mov
push
xor
nop
popa
pop
push
lods
xor
pop
mov
push
pop
adc
pop
mov
xchg
movsb
mov
decl
xchg
mov
sbb
movsb
xchg
adc
pop
cmpl
or
cmp
mov
jne
in
adc
cmp
repnz
push
xor
int
notl
mov
out
clc
enter
leave
inc
dec
hlt
sarb
mov
hlt
mov
pop
adc
lock
adc
loope
cwtl
pop
pop
jne
cmp
enter
and
xor
jg
mov
movsl
mov
sub
mov
lret
das
mov
ret
adc
inc
aaa
incl
pop
push
push
sbbb
pushl
mov
push
push
adc
jno
add
cmc
and
jb
cmpsl
sbb
js
ret
fistps
nop
or
adc
pop
loop
sub
sub
cmp
das
add
sub
mov
rclb
out
pop
jb
or
add
outsl
jb
lret
je
shll
xchg
rorb
test
faddl
pop
fdivrs
jae
push
aad
and
dec
enter
add
inc
pop
scas
dec
push
and
out
fs
push
mov
add
and
mov
in
sub
hlt
movsb
repnz
enter
lods
and
aam
add
and
add
push
xor
nop
das
cmp
insl
popw
imul
bound
and
mov
mov
sbb
xchg
push
dec
xchg
pop
dec
sub
jne
inc
push
push
sub
adcl
mov
sbb
popf
clc
js
add
dec
adc
fisubs
add
xchg
add
xchg
ret
imul
subb
imul
mov
daa
mov
call
dec
or
andb
movsl
mov
inc
push
cmp
test
xor
push
clc
clc
adc
add
out
lret
jno
jne
pop
in
sbb
cmp
lcall
flds
push
in
shll
rcll
jb
dec
add
xchg
test
int3
pop
mov
loopne
ds
push
popf
adcb
bound
or
outsl
popa
jb
test
sbb
add
pop
fadds
bound
test
cmp
and
mov
popa
test
push
jo
xchg
inc
or
fisttps
insb
out
mov
or
jl
fisubrs
pushf
int3
or
mov
and
push
mov
or
clc
jne
sbb
mov
sbb
mov
int
cmc
fwait
mov
adc
cld
mov
rorl
push
fidivrs
pop
or
ret
push
ds
stc
aas
add
popa
lock
enter
sbb
or
dec
adc
jno
loop
sub
mov
pusha
and
loopne
xor
dec
mov
aas
xlat
pop
jne
mov
inc
add
and
lock
mov
and
xor
cmc
jo
sub
inc
out
sbb
adc
add
sbb
faddl
and
sub
pop
pop
push
mov
in
dec
jnp
or
and
or
mov
push
sti
ret
push
adc
sbb
sbb
gs
jbe
es
adc
and
sbb
frstor
mov
xlat
dec
adc
cmp
arpl
js
mov
push
add
sbb
dec
adc
and
shll
adc
pusha
movsl
jne
xor
adc
maskmovq
testl
shlb
pop
push
cmc
out
xor
repnz
sbb
cmpsl
les
xor
cltd
nop
inc
in
cmpsb
add
das
in
and
xlat
bnd
dec
inc
and
cmp
iret
mov
pop
inc
or
push
jecxz
cmp
and
dec
ret
adc
push
daa
fstps
or
push
mov
test
dec
sahf
fisubrs
pop
pop
cmp
cwtl
jl
aad
sub
xchg
inc
xchg
add
shlb
mov
sbb
dec
sub
imul
and
and
mov
and
or
mov
lds
cld
dec
mov
in
xor
push
inc
push
jae
push
inc
jecxz
mov
inc
push
in
cmpsb
inc
dec
test
adc
vmovups
xor
push
sbb
xor
and
or
cltd
adc
je
loop
mov
xchg
sbb
fstl
sbb
pop
add
ret
pop
out
lea
add
shl
xchg
inc
add
arpl
push
and
push
push
pop
call
fiadds
sahf
testb
mov
sbb
adc
rorb
dec
jmp
fadds
mov
pop
lods
xchg
mov
xchg
in
ficomps
push
push
cmp
daa
and
cmp
outsl
mov
add
and
jg
leave
incb
rol
sub
push
mov
or
mov
sub
imul
sbbl
enter
bound
inc
inc
sub
fstp
sbb
and
mov
mov
imul
clc
mov
jmp
pop
add
adc
test
and
push
int
cmp
adc
add
sbb
jne
les
inc
cmpsb
loop
mov
fdivs
mov
subl
jmp
xchg
or
sub
inc
pusha
jl
lea
stos
decl
adc
fisubl
push
sbb
test
push
dec
add
sub
add
je
and
cmc
pop
adc
insl
push
mov
data16
sub
ss
jmp
lods
jge
xor
sti
hlt
imul
adc
call
jecxz
dec
jmp
push
nop
cmp
sub
or
or
sti
pusha
jle
arpl
push
test
adc
js
cld
and
dec
cmp
addl
data16
add
add
ss
or
push
sti
xchg
push
xor
faddl
gs
push
and
sbb
nop
sbb
iret
dec
or
pop
dec
and
mov
ljmp
xor
xchg
enter
pop
jb
push
and
xchg
jg
push
mov
jbe
fsubl
sub
xchg
ss
mov
add
das
dec
pop
or
ret
jmp
add
pop
add
test
push
push
cltd
sarb
mov
cltd
push
ret
mov
pop
cmpl
je
sub
jmp
cmp
sub
nop
mov
inc
ja
push
ror
dec
enter
adc
adc
cmp
icebp
jnp
pop
or
xor
sub
pop
dec
rcrl
adc
cmpsl
add
outsb
mov
sahf
movsb
xchg
mov
sub
sub
lods
fidivrs
test
scas
int
lcall
fsubp
dec
movsb
loopne
je
repnz
subl
sar
bound
imul
pop
hlt
mov
cld
je
add
jae
lret
js
test
in
ret
sbb
int
cmp
out
in
xor
mov
sbb
fimull
xor
je
mov
dec
fs
ficoml
pop
mov
popa
popa
xchg
inc
mov
cld
add
scas
pop
shll
xor
xchg
xor
add
jecxz
jo
sub
rcr
xor
jmp
fiadds
sbb
into
mov
je
adc
mov
adc
xor
enter
xchg
jo
xchg
jo
cmc
push
jo
imul
incb
je
cmpb
lods
in
push
insb
sahf
mov
pop
pop
pushf
std
inc
js
mov
push
rorb
push
sbbb
imul
pop
fs
xchg
jno
pushl
bound
getsec
adc
adc
loop
in
pop
cli
and
jo
jl
jb
in
adc
insl
pop
jecxz
sbb
and
test
dec
gs
push
sbb
push
pop
jb
or
enter
xchg
shr
cmp
mov
rol
and
adcb
xchg
pusha
dec
push
jp
jo
push
lret
mov
shrb
aam
cmp
mov
repnz
jge
js
jne
arpl
in
or
pop
adc
adc
push
jo
or
enter
mov
sbb
sbb
and
dec
add
loope
std
pop
adc
ret
jno
sbb
pop
insl
lahf
jmp
adc
cmpb
and
push
sarb
xchg
push
aas
adc
pop
adc
xorl
push
test
popf
jo
in
lea
push
push
cmp
rcl
push
je
shll
adc
imul
push
or
addr16
push
sbb
inc
cmpsl
push
je
test
rolb
xchg
popa
or
jo
jae
or
jmp
lock
sub
outsb
adc
or
push
ljmp
imul
stos
pop
ds
pop
push
sub
cmp
mov
jo
pop
mov
cmp
popa
pop
sahf
in
std
cmp
cmp
push
jne
aas
ret
outsb
mov
sti
orl
push
test
lods
mov
jge
sub
in
bound
xor
lcall
into
inc
loopne
sbb
xor
mov
add
mov
sbb
push
mov
pop
cmp
and
test
scas
xor
add
pushl
cld
pop
jnp
jbe
pop
aam
mov
pop
and
or
js
jns
or
add
pop
push
movl
add
lock
aam
cmpsl
push
stc
nop
or
dec
cmp
add
jmp
add
adc
add
es
mov
insl
xorb
sub
jbe
repz
sub
test
decl
orb
xor
sbb
aam
aaa
in
lret
xchg
adcb
imul
dec
js
aad
inc
dec
jb
pop
inc
push
add
sub
xchg
mov
cmp
cmp
fidivrl
sub
xchg
das
fcoms
add
int3
mov
ret
adc
mov
leave
ret
or
out
popl
inc
nop
xchg
mov
pop
mov
leave
filds
jns
fiadds
mov
sbb
adc
lds
xor
sti
cmpsb
push
movsb
ja
sub
mov
icebp
pop
ret
adc
jl
jns
dec
and
push
pop
jg
sub
xchg
rclb
aaa
jns
jp
pop
xor
mov
and
aaa
mov
mov
dec
jo
adc
orps
jb
pop
shr
jmp
scas
pop
dec
adc
gs
int3
push
movsb
pusha
pop
jl
add
push
loope
adc
loopne
and
cmpl
push
fstpt
jp
add
xchg
mov
mov
and
sbb
mov
adc
adc
es
arpl
add
aas
xchg
mov
push
cmpsl
cmp
je
mov
or
in
push
mov
inc
or
shll
add
or
inc
adc
sti
icebp
or
addr16
and
es
adc
andl
aam
cmp
push
xchg
stc
jp
mov
pop
mov
mov
arpl
lock
jnp
xor
push
mov
pop
add
popaw
cmp
inc
xor
sub
jb
aam
je
fiaddl
jne
or
pop
push
mov
data16
adc
movl
fmull
loopne
dec
pop
inc
sbb
mov
jne
add
add
or
inc
xchg
fistpll
inc
inc
mov
adc
in
sbb
sbb
and
dec
sahf
and
inc
jne
sub
mov
cmc
add
add
dec
sbb
js
ret
imul
jge
loopne
jo
jb
mov
dec
dec
jne
mov
dec
fwait
push
loop
ljmp
jae
and
or
push
push
cmpsl
fwait
out
or
out
or
popa
shrb
sub
pop
sbb
fistpll
mov
sub
or
add
ret
cmp
jg
movl
addb
sub
and
popa
fsubrs
lahf
in
sbb
mov
mov
out
push
fmull
xchg
es
or
lret
ja
movsl
and
pop
and
lods
ss
fistpl
int3
push
aad
xchg
cmpsl
push
or
out
scas
sub
add
add
sub
rcrl
pop
fldpi
xchg
xor
mov
mov
add
in
dec
in
nop
add
je
scas
push
sbb
mov
mov
pop
inc
cmp
and
xlat
into
mov
insl
fistpl
mov
mov
mov
andb
je
mov
pop
daa
sub
jbe
push
fcompl
adc
imul
sbb
jecxz,pn
mov
mov
cmp
mov
pop
xor
cmp
xor
add
cmp
jne
mov
xor
lret
mov
mov
xchg
inc
mov
dec
xchg
jg
push
mov
pop
mov
pop
pusha
sub
dec
outsb
lret
loope
cmp
clc
inc
mov
outsl
in
in
mov
xor
jl
enter
inc
mov
mov
roll
int3
fcmovnb
es
cmpsl
out
push
out
insl
push
in
adc
mov
mov
inc
std
shr
mov
je
lods
pop
pusha
pop
lea
mov
push
adc
pop
push
lock
and
jmp
push
push
and
inc
insb
sbb
xor
jo
pop
push
sbbl
sbb
rorl
inc
fcoms
std
xor
and
xor
dec
and
xchg
lock
arpl
lods
push
stc
scas
and
sbb
inc
xchg
andl
sub
sub
push
push
or
or
adc
or
mov
pop
mov
ret
and
pop
pusha
jo
add
into
lock
iret
jl
mov
xor
dec
jle
xchg
stos
xor
sti
xchg
xor
mov
popa
add
push
movb
pop
movsl
icebp
jl
or
inc
sbb
out
sub
dec
rcl
cmp
mov
rolb
adc
adc
addl
cmp
add
lods
loopne
ds
add
dec
cmp
adc
inc
addr16
in
inc
sti
nop
test
hlt
mov
ja
mov
movb
pop
test
add
into
out
jnp
jo
xorb
push
sbb
ret
call
lcall
fldt
lock
stos
aad
cmpsb
lock
mov
mov
lcall
push
lcall
imul
adc
rorl
or
or
fadds
push
push
inc
incl
push
add
mov
inc
daa
pop
add
cli
and
inc
cmpsb
es
fstpt
inc
aaa
dec
insb
popl
xor
inc
sub
add
cmc
lahf
test
sub
sub
jne
std
mov
aad
sub
inc
and
aaa
outsb
icebp
sub
cmpb
mov
cltd
test
xor
cmp
aam
outsl
nop
pop
fcompl
sbb
adc
mov
dec
xor
out
or
xchg
or
lahf
movsb
pop
movsb
xchg
xchg
push
mov
inc
fistpl
ret
mov
cmpl
inc
adc
jp
repz
ljmp
mov
shrb
pop
movsb
lock
repnz
mov
or
cmpb
jo
ss
sbb
pop
test
aas
es
cld
nop
push
add
cld
or
mov
mov
push
or
insl
push
xor
leave
clc
test
adc
fcoms
xchg
sbbl
or
lret
mov
xor
sbbb
rcll
lret
mov
pop
scas
push
push
test
in
in
mov
cmpsb
and
push
sbb
rol
xor
add
adc
and
and
cmp
or
xchg
and
push
sbb
mov
outsl
mov
mov
sub
dec
sub
scas
rorl
andb
add
cmp
mov
mov
add
in
paddsb
repz
dec
fs
loopne
loope
push
mov
or
out
or
cltd
add
mov
loopne
xchg
add
mov
sti
inc
roll
xchg
test
xchg
mov
or
dec
add
das
pop
adc
pop
dec
inc
or
inc
leave
icebp
xchg
notb
inc
sbb
pop
and
ds
mov
and
dec
mov
out
mov
mov
pushf
jge
and
shrb
pop
mov
and
mov
jmp
sub
out
inc
test
loopne
push
leave
or
xlat
lock
add
aam
sub
jno
insb
ret
ret
xchg
push
cli
shrl
xchg
cmp
xor
inc
and
or
sbb
test
cmpsb
ds
pop
sub
jno
insb
add
clc
add
add
dec
fistpll
clc
sbb
mov
test
sub
pop
in
lods
adc
sub
movl
push
dec
sahf
cmpsl
in
push
fadd
rorl
mov
push
pop
dec
rcll
fcoms
jne
inc
and
bndstx
testl
jmp
je
sbb
ret
inc
sub
lcall
or
adc
call
pop
xlat
push
jl
mov
sbb
sub
popl
add
scas
addr16
pop
lcall
call
adc
je
sub
je
shrl
sub
inc
or
je
or
je
jmp
mov
and
inc
xor
xor
pusha
pop
add
test
jmp
mov
dec
mov
repnz
jp
xchg
mov
jmp
mov
or
sbbl
adcl
add
mov
xor
pop
jo
fnstsw
jl
xor
sahf
inc
mov
movsb
xlat
jae
mov
dec
mov
or
sbb
and
nop
imul
add
pop
push
sub
pop
cmc
or
jne
lds
insl
cmp
and
pop
dec
and
inc
jno
push
pop
sbb
repz
daa
mov
dec
pop
dec
inc
or
pop
mov
add
adc
pop
sbb
je
arpl
or
lods
movsb
and
cmpsl
and
sbb
pop
mov
xlat
scas
push
adc
adc
push
ja
jae
inc
pop
mov
js
test
adc
sub
push
adc
pusha
jle
xchg
and
jne
imul
add
cs
in
mov
or
fs
data16
cmp
xchg
dec
jae
arpl
fisttps
jns
cmp
mov
adc
push
mov
inc
daa
cli
xor
push
mov
or
xor
jmp
aas
or
cmp
jno
pop
push
aad
lock
adc
push
pop
aam
dec
movb
push
xor
jg
mov
jg
and
dec
jge
adc
adc
mov
adc
fmuls
sbb
dec
add
cmp
dec
push
movsb
inc
lock
sbb
pop
or
ret
adc
daa
push
push
mov
adc
cmp
push
sub
ljmp
test
mov
jb
inc
mov
push
jno
add
call
mov
ja
lock
subl
add
mov
arpl
cmp
add
sub
sahf
rcrl
jle
inc
dec
and
test
fadds
mov
das
mov
lea
xor
gs
nop
sub
or
lods
add
jp
aad
xchg
or
jo
dec
js
dec
call
inc
cmpsl
dec
and
adc
gs
insb
scas
mov
mov
cmp
nop
mov
rorl
gs
nop
xchg
jo
push
pop
and
xor
pusha
inc
hlt
shlb
decl
add
add
dec
jmp
fdivrs
loopne
ljmp
or
ffreep
filds
mov
loopne
add
cs
or
add
sbb
add
mov
jmp
xchg
mov
subl
inc
pop
mov
jg
stos
cmpsl
nop
mov
xchg
inc
iret
shll
pushf
shlb
ret
xorb
out
or
xchg
fs
ret
out
mov
push
call
das
and
push
sar
add
test
cmp
enter
and
push
cmp
or
aam
inc
dec
enter
outsb
or
nop
pop
jo
or
mov
orps
test
daa
popa
lds
inc
insl
add
ret
call
adc
dec
or
negl
mov
push
inc
in
scas
test
loopne
sub
sbb
shlb
sbb
imul
push
adc
sub
mov
push
in
icebp
xchg
adc
lods
test
je
inc
test
or
sub
mov
clc
mov
movzbl
in
jbe
test
mov
add
jbe
push
dec
cmp
push
fcoms
lock
and
push
push
mov
pop
cmpsl
test
jbe
mov
loopne
dec
cmp
in
xchg
aaa
cmp
cwtl
cmp
mov
add
push
push
inc
xchg
mov
jno
lahf
cmp
dec
pop
mov
pop
lods
jmp
in
cmp
aam
fdivrl
jmp
jbe
mov
mov
clc
dec
data16
scas
mov
jo
inc
sti
or
add
xchg
inc
sub
mov
cmpsb
push
pop
dec
mov
inc
das
das
xchg
jp
shll
jge
mov
adc
jns
xchg
test
xchg
push
shll
add
add
pop
mov
and
in
pusha
pop
popa
ljmp
push
adc
ret
pop
in
rolb
mov
roll
sbb
adc
inc
stos
push
lds
adc
fs
dec
addr16
and
pop
lea
pop
xchg
adc
sub
pop
lcall
cmpl
lock
pop
loop
jno
mov
xor
sbb
aad
es
push
movsl
jnp
frstor
js
loopne
mov
cs
pop
inc
scas
xchg
enter
add
lret
mov
mov
sub
ret
xlat
push
nop
enter
xor
pop
repz
jle
or
jbe
xchg
stc
movsl
sub
xchg
dec
mov
jle
cmpsl
adc
add
sbb
outsb
test
or
jmp
mov
xchg
push
or
xchg
aas
inc
lds
and
add
pop
scas
lods
dec
or
fcomps
add
andb
add
adc
sbb
invd
cwtl
adc
fcoms
dec
loopne
dec
push
stc
sub
fadd
or
mov
sub
loop
push
ja
push
adc
adc
cld
sbb
push
jo
xchg
int
fwait
dec
fmull
inc
lret
jns
xchg
ja
or
adc
je
nop
lea
push
push
pop
or
sbb
orps
sbb
push
inc
adc
or
pop
mov
add
mov
jo
lea
popa
les
call
mov
push
mov
xchg
rsqrtps
and
or
call
sbb
and
xchg
push
or
fadd
push
cmpsl
test
test
or
add
cmp
rorl
xchg
dec
ja
push
and
adc
sub
xlat
mov
push
inc
js
and
inc
test
mov
test
addb
stc
jge
and
ret
xlat
dec
dec
inc
mov
lret
xchg
jne
dec
push
lcall
push
movsb
data16
or
or
pop
sub
lea
rorb
lock
rcll
mov
add
inc
jecxz
xchg
add
nop
mov
mov
or
mov
add
xchg
mov
mov
sbb
jle
mov
inc
mov
mov
lcall
push
test
cmpsb
movzbl
test
push
leave
ss
push
fwait
pop
stos
je
nop
adc
xor
dec
jno
push
out
clc
jmp
aad
push
sub
pop
mov
fisttps
cmp
jmp
fmul
add
ror
sbb
lret
inc
jmp
fwait
xchg
mov
xchg
je
xor
ds
test
fwait
pushf
orl
dec
scas
rolb
leave
xor
adc
mov
pushf
or
rclb
cwtl
mov
pop
inc
adcl
adc
fiadds
cmp
jb
push
or
hlt
lds
adcl
mov
cwtl
dec
pop
insb
cmp
subl
dec
sahf
scas
mov
sahf
and
dec
sbb
dec
adc
push
sbb
push
sub
and
in
or
loopne
xor
and
or
ds
and
cmp
xor
rcl
subl
daa
sahf
shr
fsubrs
test
add
pop
insl
xchg
lock
sub
inc
fdivs
xor
into
or
out
fisttpl
or
ss
inc
xchg
loope
arpl
cmp
ss
push
sbb
je
jge
cmpsb
sub
adc
addl
sub
or
cmpsl
add
test
aas
dec
call
mov
iret
push
in
daa
and
mov
and
arpl
js
mov
sarb
xor
xor
adc
or
cs
push
mov
in
push
js
adc
push
push
mov
popf
jmp
inc
push
xor
testb
testb
je
ss
jns
add
data16
int3
icebp
sbb
scas
pop
sub
pop
and
dec
add
pop
es
rolb
and
push
scas
add
mov
add
xchg
push
arpl
adc
mov
sub
cs
and
push
inc
xlat
pushf
lret
cmpsl
mov
inc
ljmp
jo
arpl
sbb
push
mov
insl
push
mov
add
inc
les
push
inc
inc
mov
pusha
inc
shll
addb
subb
lea
dec
add
xor
dec
mov
dec
sti
mov
popf
dec
lods
add
jmp
sbb
add
or
add
dec
sbb
and
aam
loop
subb
add
fsubl
pusha
inc
jecxz
jge
xchg
push
pusha
mov
stos
or
sub
mov
cmp
adc
jecxz
inc
cs
daa
adc
ficoms
jo
xchg
sub
cld
and
pop
sbb
ret
sub
scas
mov
cmc
clc
add
or
xchg
push
hlt
jmp
dec
inc
xchg
xchg
rolb
jle
movzwl
adc
add
jmp
les
in
lods
ds
mov
dec
push
or
fs
cmpsb
mov
or
pop
xchg
sub
outsb
mov
js
jecxz
data16
inc
push
testb
insl
rcr
mov
mov
pop
popf
rolb
loopne
pop
mov
inc
pop
or
push
mov
aas
cmp
mov
pop
sub
out
loopne
mov
stos
ds
mov
clc
enter
ds
sbb
mov
sub
shlb
cmp
sbb
shlb
ret
leave
dec
add
inc
insb
adc
insb
test
rorb
addr16
push
adc
xor
and
add
sub
out
aaa
sub
xor
or
mov
mov
push
int3
aas
daa
sbb
out
push
sbb
xor
inc
pop
cmpl
in
and
fsubr
enter
daa
add
repz
adc
xor
pop
add
add
pop
and
dec
fcompl
lea
cmp
dec
imul
mov
jbe
xor
mov
std
push
pop
aaa
in
movsb
push
loope
xorb
add
cld
mov
mov
ljmp
dec
ja
sbb
insb
xorb
mov
pop
lock
adcl
bound
out
cmp
repnz
movsl
pop
and
and
shrb
aam
inc
xor
push
sub
cs
jge
jg
in
add
jg
movsl
or
lahf
cmpsb
test
jge
inc
adc
pop
or
push
sub
out
sbb
sub
aad
and
push
pop
mov
test
stc
mov
cmp
jo
mov
aam
sub
push
xchg
lock
fsubrl
movsb
adc
xor
sub
cmpsl
mov
fistpl
pop
loope
push
clc
pop
mov
out
enter
fstpt
jl
andb
dec
fadd
inc
pusha
jae
sbb
lock
cmp
inc
adcb
ss
cmc
lahf
fs
and
incb
jg
xchg
out
sbb
inc
cmp
out
add
add
sti
or
jmp
or
ja
dec
inc
xchg
mov
shl
pop
push
outsb
hlt
cmpsl
jbe
sbb
hlt
lret
push
push
repnz
mov
jmp
out
cld
sub
sbb
movsb
cmp
add
adc
pop
pusha
xor
loopne
jns
xorb
test
daa
loopne
test
adc
adc
frstor
push
or
or
adc
sub
test
and
fldl
lods
adc
sbb
stc
repnz
mov
fildl
cmpsl
leave
inc
pop
sbb
adc
in
clc
es
rcrl
popa
les
push
outsb
addb
sbb
call
out
lea
push
lock
jg
and
shll
xchg
hlt
fwait
cwtl
mov
mov
and
fstpt
or
stc
cld
push
nop
sub
and
pusha
add
mov
and
or
lahf
out
sti
je
sbb
xchg
je
xor
xor
sbb
out
pop
push
cmp
jg
or
cmp
jle
enter
push
lds
pop
dec
pop
ret
imul
fs
ret
stc
mov
ja
int3
adc
add
sub
add
dec
or
insb
cs
stos
xor
adc
sbbb
and
imull
sbb
fs
repnz
into
mov
mov
stos
fadds
lods
in
movsl
and
mov
rcrb
sbb
or
scas
or
out
js
mov
xchg
mov
cmpb
xlat
xor
sub
xchg
mov
push
mov
cmpsl
insl
mov
rcll
pushf
aam
add
out
hlt
daa
push
adc
dec
adc
cmp
inc
push
jno
mov
std
inc
je
bound
mov
lods
sbb
adc
inc
add
xchg
fwait
sbb
out
jle
add
insb
add
push
add
dec
outsb
xor
sbb
scas
cli
mov
inc
mov
and
pop
jecxz
test
aas
jecxz
rolb
lds
imul
aam
sub
mov
jmp
lods
je
movb
sbb
sub
xchg
out
test
push
mov
daa
xchg
testl
outsl
jb
fadds
loopne
inc
out
insb
pop
repnz
shlb
test
inc
push
jmp
add
jle
jmp
adc
call
mov
ljmp
sub
adc
adc
jmp
into
fwait
and
cwtl
or
jb
or
push
push
fwait
inc
in
or
adc
ds
dec
add
test
jb
cmpsl
ds
cmp
or
outsb
and
pop
dec
mov
dec
push
sbb
cmpl
dec
imul
or
push
popa
cmp
jle
decb
pop
push
jle
mov
sub
pusha
das
sub
jne
add
push
movsb
inc
or
push
lahf
aam
pop
and
psubw
and
test
rcll
sbb
shr
sub
push
cmp
sbb
jmp
lock
push
lock
dec
enter
daa
adc
xor
adc
inc
jle
in
mov
and
testl
xor
xor
mov
es
lock
sbb
loope
sbb
or
pop
lods
adc
das
adc
sub
test
xchg
mov
std
dec
fsubrs
pop
xor
call
jne
fs
hlt
cmpl
jb
adc
xchg
jnp
xor
dec
pop
or
lods
insl
adc
push
jg
add
push
lea
lea
adc
pop
sub
jb
inc
lea
lock
sub
hlt
outsl
push
and
hlt
shll
push
in
loopne
mov
inc
pop
cmpsl
jno
sbb
in
pop
mov
pop
pop
dec
and
nop
clc
mov
leave
xchg
inc
jb
jb
enter
mov
pop
pop
push
inc
push
inc
mov
push
es
jne
jae
stc
repnz
pop
pusha
lret
add
adc
dec
push
out
imul
jo
sbb
mov
and
mov
arpl
xchg
clc
int3
push
in
inc
add
neg
les
mov
push
and
loope
push
cwtl
push
ss
sub
push
adc
sub
ds
add
adc
lds
daa
outsb
mov
dec
cmp
adc
inc
outsb
jne
inc
insb
popa
jns
lock
rcr
add
pop
push
adc
lret
repz
daa
dec
cwtl
out
stc
sahf
push
rclb
mov
pop
js
fwait
lret
mov
pop
mov
pusha
aam
shrb
inc
push
cmp
bound
push
repnz
jns
mov
imul
rcll
fcompl
sbb
xor
out
js
in
prefetchw
and
xchg
cld
aas
add
int
mov
xchg
cld
mov
pop
rcll
mov
cmp
dec
jns
cmp
inc
and
pop
push
xchg
outsb
mov
ud2
mov
push
push
cmp
adc
xor
int3
mov
fbld
adc
sete
adc
jbe
jmp
add
push
add
mov
rorb
adc
xchg
mov
imul
mov
adc
or
in
loopne
imul
inc
mov
nop
pop
and
stos
addr16
adc
mov
dec
dec
in
fisubrl
hlt
lahf
hlt
mov
sahf
mov
out
mov
add
xor
andps
outsb
xchg
xchg
addb
xchg
imulb
int3
adc
dec
aam
insb
nopl
cmp
add
pushf
ret
daa
sub
ror
xor
cmp
sahf
out
sahf
and
jg
xchg
dec
jp
out
push
pop
outsl
ja
inc
lds
in
scas
mov
push
aaa
mov
mov
mov
fs
sbb
add
mov
xor
les
insb
add
push
in
les
nop
outsb
sub
into
leave
insl
sub
or
lahf
out
mov
mov
outsb
fiadds
push
mov
daa
movsl
iret
jne
push
mov
mov
push
fwait
inc
fisttpl
mov
or
or
cmpsb
add
fimuls
and
sub
sbb
mov
pop
call
inc
daa
and
push
gs
mov
xor
adc
stos
pushf
fcomps
adc
lea
pop
shlb
daa
and
push
pusha
and
mov
imul
jne
lret
test
sbb
inc
imull
in
test
pop
mov
and
pusha
and
iret
mov
adc
inc
pop
adc
test
ss
add
jmp
rcll
dec
sbb
mov
inc
movsb
mov
imul
jecxz
mov
int3
fsubrs
shll
jg
pop
and
idiv
cmp
sbb
not
inc
xchg
ljmp
stc
lock
push
pop
mov
jne
or
mov
fcoms
xor
adc
sbb
mov
or
add
jle
xor
inc
lcall
sub
fsub
je
push
sbb
fsts
add
dec
aaa
mov
hlt
jne
xchg
sub
cmp
dec
jle
adc
xor
add
adc
arpl
in
dec
xchg
add
xor
inc
sub
test
jmp
cmp
cwtl
mov
sub
sbb
aas
pop
arpl
test
mov
insb
pusha
mov
and
sbb
inc
mov
jg
jne
mov
sbb
or
sub
xorl
mov
pusha
into
and
inc
push
cmp
add
push
mov
outsb
int3
arpl
hlt
daa
fstl
and
das
xchg
shlb
jno
rolb
mov
push
xorb
sub
in
and
rcrl
int3
dec
rcr
mov
xchg
daa
xor
xchg
loop
fs
pop
fdivrl
out
je
add
aam
jb
or
js
rcl
sbb
aad
xor
add
insl
mov
jle
sbb
and
cltd
cmp
adc
mov
popa
fstpt
xor
shlb
mov
xor
dec
in
js
fadd
cmp
ja
mov
test
cmp
in
std
inc
dec
lea
in
sub
mov
inc
outsl
lock
loopne
dec
das
pop
ja
jmp
mov
dec
xor
and
push
dec
xorb
fiaddl
sub
dec
loopne
imul
call
rorb
lock
mov
inc
xchg
roll
jg
add
adc
jne
jae
xchg
push
xor
imul
adc
imul
lret
in
in
leave
test
call
cli
jmp
cld
loopne
jmp
sarl
nop
dec
scas
add
lock
and
and
scas
hlt
sbb
scas
outsl
fldcw
ret
cmp
and
and
sub
pop
ret
pop
in
xlat
pop
clc
ds
enter
mov
xor
pop
rcrb
adc
movsb
inc
sub
sbb
stos
and
mov
clc
xchg
mov
sub
mov
jmp
inc
xchg
mov
stos
sub
rclb
jo
add
sbbb
sbb
andb
ror
jo
cld
mov
stos
je
or
dec
je
or
sbb
jae
je
push
mov
loopne
and
mov
jmp
push
loopne
adc
pop
and
nop
mov
push
add
add
jbe
ret
pop
les
aas
rcrb
notb
cltd
fs
cmp
jne
sbb
loope
adc
enter
adc
xchg
dec
enter
pop
cld
push
pop
mov
inc
push
sub
sub
xchg
sbb
lods
iret
iret
jl
mov
jne
in
pop
xor
or
jb
repz
sbb
shrb
arpl
shr
jge
pop
daa
subb
pop
xor
pop
addr16
dec
mov
out
test
call
lods
mov
loop
mov
push
cmp
mov
outsb
dec
sub
fcoms
lock
or
xor
div
push
mov
and
cmp
mov
mov
sub
nop
mov
sbb
inc
nop
adcb
xchg
mov
cwtl
imul
cwtl
nop
pushf
lock
xchg
push
mov
or
mov
mov
insl
arpl
dec
and
adc
cmp
notb
daa
push
ret
push
ja
hlt
add
rclb
pop
and
das
push
inc
outsb
insb
adc
aam
pop
or
ja
mov
and
xor
push
lock
jae
push
test
inc
jg
fbld
sbb
lahf
in
and
in
in
movsb
lds
inc
subl
jle
add
add
push
push
int3
push
rorb
push
test
dec
pop
and
mov
jmp
enter
inc
pop
imul
push
adc
imul
mov
shlb
jg
or
xchg
cmpb
lods
push
rorw
loopne
add
add
push
lds
rcrl
push
leave
xchg
inc
repnz
dec
mov
int
mov
push
insb
test
pop
addl
insb
xor
add
decl
push
mov
test
jl
ja
hlt
mov
sbb
fs
int3
fs
fcomp
fs
call
fs
clc
cld
sti
xchg
xchg
xchg
flds
or
xchg
xchg
xchg
adc
sbb
xchg
xchg
xchg
and
sub
xchg
xchg
xchg
xor
cmp
xchg
xchg
xchg
inc
inc
dec
dec
xchg
xchg
xchg
xchg
push
push
pop
pop
xchg
xchg
xchg
xchg
pusha
fs
xchg
jo
jg
bound
mov
pop
jecxz
loope
mov
gs
pop
movsb
adc
pop
arpl
mov
into
int3
xor
leave
add
xchg
cmp
sub
movsb
sti
adcl
lret
push
les
add
enter
push
movsb
jb
cwtl
aam
sbb
faddl
add
loopne
test
rorb
call
add
sub
adcb
hlt
fs
sbb
test
adcb
xchg
add
push
sbb
dec
gs
sub
adc
xchg
add
clc
push
in
and
or
nop
lret
sbb
sub
push
sbb
inc
sub
or
gs
xor
and
nop
push
push
movsb
xor
inc
mov
nop
lret
les
sub
push
aam
in
or
gs
lock
rolb
xor
xchg
add
pop
adcb
pusha
push
push
sbb
jl
inc
sub
insb
pushf
jo
cmp
xchg
inc
pushl
test
loop
les
jne
je
gs
gs
push
std
or
inc
insb
outsl
jae
and
sbb
pop
daa
or
add
jnp
out
add
aas
push
popa
jb
lcall
or
daa
es
ss
test
inc
add
dec
imul
pop
js
fs
pop
dec
arpl
jae
add
cs
add
fs
lea
or
mulb
jp
jae
sbb
mov
sub
xor
jbe
pop
mov
pop
out
mov
aam
gs
adc
adc
roll
pop
lcall
daa
rcrb
les
popf
pusha
mov
loopne
dec
xor
in
cmp
idivl
iret
mov
insb
pusha
push
popa
and
mov
daa
pusha
insl
xchg
mov
in
fstpl
in
pop
or
popa
in
xchg
pop
pop
xchg
mov
ds
mov
and
loopne
jg
cwtl
lock
jns
outsl
addr16
insb
xchg
fidivrl
dec
outsl
das
pop
fs
mov
outsb
mov
imul
mov
popf
cmp
movl
pop
aaa
loope
push
push
adc
or
jbe
pop
adc
push
mov
dec
insl
adc
xchg
movb
test
sarl
js
and
mov
mov
dec
mov
sarl
add
adc
jae
jae
jg
enter
mov
sbb
and
pop
jb
pop
insb
mov
mov
mov
jb
cmc
nop
cld
rol
jo
ds
out
fimull
test
mov
add
lods
pop
push
pop
aad
daa
in
mov
push
push
push
imul
xchg
movsb
subl
mov
out
or
and
add
mov
insl
mov
mov
inc
jl
mov
adc
jge
cwtl
jge
popf
inc
lods
jbe
dec
outsb
insb
cmp
js
adc
dec
outsb
imull
movb
icebp
jle
cmp
movsl
or
movsb
sub
sbbb
es
scas
pop
pop
dec
xchg
jle
adc
add
push
dec
push
adc
add
mov
mov
jne
addr16
fisubs
inc
add
mov
jecxz
push
mov
inc
aaa
cmp
sub
and
or
jnp
fstl
jno
test
ret
pusha
xchg
xchg
sub
aam
push
xchg
push
mov
je
mov
lods
cmovns
mov
push
or
mov
aam
in
sub
sahf
pop
stos
clc
orb
or
lods
movsl
test
push
xor
or
and
cmp
sub
stos
push
cmpsb
adc
cmp
cmp
adc
push
pop
sbb
cmp
cmp
sbb
sbb
cmp
cmp
push
pop
add
cmp
cmp
add
add
cmp
cmp
push
pop
or
cmp
cmp
or
or
mov
cmp
icebp
pushf
pushf
pushf
pushf
repnz
cmc
pushf
pushf
pushf
pushf
div
clc
stc
pushf
pushf
pushf
pushf
cli
sti
cld
std
dec
in
hlt
pushf
das
adc
jns
neg
pusha
push
enter
jns
out
mov
out
sahf
out
mov
out
sahf
nop
and
sahf
out
js
jo
push
xlat
clc
pusha
lock
call
push
loopne
fadds
cmp
repz
enter
repz
repz
iret
repz
adc
sahf
out
ss
mov
sub
sahf
out
js
jo
push
shlb
pop
rcrb
dec
mov
test
sahf
out
cmp
jns
out
and
jns
adc
jo
loope
repz
daa
fisubrs
leave
fisubl
xchg
jne
sbb
pop
mov
inc
fisubl
iret
xchg
push
jge
stos
jp
pop
push
add
fstl
clc
add
aam
jb
cmc
mov
xchg
xor
out
adcl
mov
mov
loopne
or
add
rcr
xchg
jecxz
mov
jle
xor
xchg
fsubl
fldt
mov
sbb
nop
movl
adc
mov
in
aaa
lret
in
or
dec
cltd
adc
fldt
xor
xchg
adc
enter
jecxz
and
or
jp
and
add
je
mov
or
sarb
mov
and
sahf
push
push
loopne
mov
andl
in
test
and
push
dec
sub
xchg
add
add
rorb
pop
inc
cmp
push
cld
es
orl
inc
inc
add
push
or
fsubl
pushf
push
mov
mov
cmp
lds
fistps
xchg
lods
pop
or
pop
ret
lods
and
mov
dec
add
call
pusha
repnz
push
lcall
mov
mov
popl
dec
and
cmp
lock
mov
add
pop
sbb
inc
dec
mov
outsl
sub
sub
fstpl
add
xor
enter
mov
lock
lret
or
mov
lret
ret
insl
sub
push
or
int
nop
xor
push
leave
add
fisubrs
inc
fdivs
and
pop
pop
fdivl
pop
daa
frstor
inc
cmp
enter
test
les
or
dec
jo
insb
push
mov
xchg
in
lods
test
gs
iret
sbb
xor
in
dec
cmc
adc
repnz
shl
xlat
fists
in
xchg
pop
fs
pop
xchg
xchg
dec
inc
jo
pop
cwtl
test
stos
xchg
ficoms
fistps
push
repnz
push
mov
loopne
subl
dec
outsl
iret
mov
nop
es
adc
arpl
cwtl
mul
bound
mov
aas
fwait
xchg
pop
rol
xchg
dec
data16
mov
push
imul
imul
sub
mov
ficoml
sub
fistpll
loopne
daa
ret
or
leave
pop
sub
fdivl
aam
mov
add
sub
xor
adc
add
mov
fimuls
jnp
xor
add
add
in
mov
fisttpll
mov
les
cmp
fstpl
mov
adc
loop
test
push
leave
sub
loop
test
and
hlt
scas
mov
or
add
and
sub
lahf
or
out
add
pop
clc
sub
hlt
or
pushf
insb
cs
lock
fldcw
and
xor
in
daa
fldt
fadd
xchg
mov
mov
in
bound
lods
sbb
int
in
jmp
add
loop
cmpb
and
xchg
xor
pop
jecxz
fcoml
int3
xchg
mov
or
int3
aaa
lahf
movsb
pop
loopne
inc
addb
adc
sbb
jg
push
outsb
push
icebp
inc
in
loope
repnz
orb
jae
jb
pop
in
pop
dec
jle
xchg
fs
pusha
test
pop
or
leave
addr16
jle
xor
jecxz
clc
into
inc
inc
icebp
or
adc
pop
in
inc
cmp
sub
std
adc
inc
in
add
in
or
bound
add
adcb
push
add
adc
add
or
add
popa
add
sarb
aaa
add
dec
aas
dec
movb
dec
push
inc
add
movsl
test
outsl
test
pop
and
les
or
xor
outsb
leave
dec
rcrl
mov
enter
xchg
cmpsb
mov
adc
movb
sahf
adc
loope
insb
sbb
sub
adc
pop
add
es
je
call
push
dec
rolb
nop
xchg
outsl
in
jp
addl
add
in
cli
dec
cli
test
shl
test
loope
or
cs
jecxz
gs
xchg
dec
dec
add
clc
xor
xorl
jae
cmc
popf
or
xchg
xchg
and
jge
jecxz
pop
add
sub
pop
inc
bound
add
repz
pop
and
mov
lods
jle
loope
mov
sbbl
and
dec
push
arpl
nop
push
fwait
jno
outsb
sbb
hlt
out
push
push
cmp
jmp
outsl
pop
enter
push
pop
add
sub
dec
mov
stos
push
ljmp
push
fdivs
jbe
xor
sbb
xor
lods
and
loope
stc
loopne
call
or
and
out
cmp
stos
jl
les
or
push
sub
rdmsr
cs
mov
push
lock
adc
je
dec
out
and
adc
and
jne
jnp
inc
popa
in
dec
mov
out
enter
add
out
int3
inc
or
pop
enter
aad
dec
cld
inc
adc
pusha
pop
fwait
imul
pop
sbb
lods
ret
fdivs
push
dec
les
loopne
gs
shrb
and
jmp
lock
dec
mov
mov
dec
arpl
nop
jne
add
loop
mov
outsl
nop
adc
sbb
movsb
nop
push
ja
push
inc
stos
test
sbb
cmp
lods
push
or
xor
sbb
cmpsl
inc
scas
inc
mov
mov
pop
fs
test
adc
push
and
add
or
iret
add
aam
jno
push
sarl
fsubrs
jle
aas
pusha
fdiv
dec
sbb
hlt
fsubs
dec
repnz
test
push
mov
leave
mov
inc
xor
cmpsl
in
enter
inc
hlt
push
add
lods
data16
jmp
inc
es
mov
sub
push
jb
cmpsl
enter
jmp
jno
dec
jns
add
or
mov
or
cmp
and
jl
pop
jecxz
inc
out
jmp
rcrl
jo
inc
adc
data16
inc
lret
nop
adc
mov
sbb
mov
mov
push
add
rolb
addr16
cld
int3
jle
xchg
push
or
test
sbb
push
or
cmp
notb
sarb
pusha
js
xor
dec
in
and
pop
daa
ret
in
ja
push
push
sub
cmp
sbb
sbb
sub
jnp
add
int
mov
es
mov
sub
add
bound
stos
mov
xchg
xlat
scas
mov
and
lock
inc
sub
jbe
int3
fisttpl
or
jg
push
lea
dec
in
push
scas
adc
lcall
imul
mov
inc
ljmp
and
add
adc
jge
in
ja
add
fmul
or
ret
mov
jne
test
adcb
ret
out
adc
sub
mov
nop
das
sub
inc
out
repnz
cld
sub
and
nop
clc
adc
out
sub
xchg
cmpsb
arpl
enter
out
xchg
sub
and
popf
test
ss
push
outsl
pop
xchg
adc
adc
fstps
and
xor
filds
and
jle
or
popa
and
fistps
rcll
mov
arpl
js
lock
ja
fcomip
pop
adc
jmp
mov
push
dec
pop
adc
inc
and
mov
mov
pop
add
clc
xchg
outsb
and
or
add
pop
clc
test
dec
repnz
jle
add
outsb
pop
cmp
push
pop
add
insl
outsb
fcoms
insb
pop
fsubs
stos
hlt
pop
add
rorl
push
jge
mov
lret
mov
icebp
and
cmpsl
add
enter
jmp
gs
adc
pop
dec
into
xor
shl
and
andl
add
lock
dec
dec
xchg
repnz
ret
inc
dec
jns
scas
mov
lock
pop
pop
lar
mov
fdivs
or
push
add
nop
mov
mov
jns
jo
and
jg
gs
mov
mov
push
out
dec
mov
popa
dec
mov
mov
std
add
repnz
hlt
aad
in
hlt
cmp
mov
cld
ss
sarb
dec
xchg
or
fsubs
popf
sbb
rcrb
hlt
xchg
push
mov
xlat
test
dec
shll
loop
xchg
or
imul
leave
inc
lock
mov
sbb
mov
mov
icebp
cmp
fsubr
roll
ds
push
pop
inc
mov
mov
hlt
fdiv
and
fsubr
cmp
in
dec
in
push
hlt
subl
decl
cmovae
mov
faddl
addl
push
jb
in
mov
out
fidivl
enter
test
das
add
shll
ss
xchg
ret
pop
fdivl
and
je
push
movsb
push
imul
sbb
addl
mov
xlat
nop
sbb
jmp
inc
lcall
pop
jmp
dec
jb
pop
imulb
in
pop
inc
jb
imulb
in
mov
icebp
xlat
or
push
dec
sti
dec
fisubl
jne
cmpl
dec
or
xchg
cmpsl
fstps
call
sub
mov
jbe
pop
dec
lock
xchg
scas
mull
clc
pop
imull
es
clc
test
out
adc
testl
or
add
push
adc
or
imul
or
bound
xchg
mov
jb
je
shr
mov
sbb
mov
push
push
scas
mov
mov
and
pop
inc
test
xchg
mov
in
bound
mov
cld
jne
icebp
add
insl
add
add
imull
filds
and
negl
and
adc
mov
imul
add
loopne
or
aas
sti
sbb
adc
xor
test
outsb
lea
imul
add
or
add
and
push
outsl
adc
pusha
mov
dec
rorb
sbb
add
sbb
push
pop
pushf
addb
add
sub
mov
aaa
aas
jbe
sub
dec
stos
int3
aad
je
sub
jl
or
mov
and
fwait
push
cmp
xor
sti
mov
add
sub
or
jno
mov
inc
xor
sub
or
push
les
mov
xor
enter
push
or
lahf
xor
das
pushf
outsb
mov
push
jne
pop
pop
add
pop
call
sarb
mov
movsl
shlb
or
push
mov
movsl
jl
in
nop
dec
fsubs
dec
or
pop
cmpb
add
adc
mov
sub
dec
xchg
ds
jmp
in
dec
inc
stc
xchg
clc
inc
xor
movsl
pop
add
sub
ljmp
cmp
mov
jns
add
adc
xchg
fldenv
mov
sub
inc
mov
jbe
aad
or
fs
sub
push
cmp
adc
std
push
or
loopne
dec
shll
push
repz
filds
pop
or
or
or
or
or
or
cmp
adc
adc
adc
cmp
repz
pop
sbb
sbb
dec
repz
and
and
sahf
mov
adc
arpl
out
test
insb
sahf
out
jmp
decl
iret
das
inc
push
bound
cmp
repz
cmpsb
mov
fxch
repz
ljmp
cmp
iret
repz
pop
data16
mov
ret
pause
sahf
xchg
jmp
in
xor
push
mov
add
pop
push
adc
adc
dec
sub
in
lret
sbb
mov
or
or
and
and
dec
sub
xchg
lret
adc
adc
jb
in
cmp
test
inc
push
inc
sub
sbb
xchg
dec
sbb
jb
in
push
sbb
stos
je
movsb
pop
sbb
test
popa
imul
push
pop
and
and
aas
and
jb
test
adc
push
sbb
frstor
jl
in
mov
cltd
add
int
fdiv
les
sahf
adc
or
pop
imul
sub
lcall
or
lret
push
dec
add
sbb
jne
mov
fcomps
js
lock
jle
lcall
sub
xor
push
cmp
icebp
addr16
add
call
inc
lock
lea
push
lock
scas
test
mov
mov
jo
test
dec
push
in
mov
adc
push
loopne
faddl
xchg
fmuls
pushf
lea
mov
dec
cld
or
mov
hlt
pop
and
sbb
cld
dec
mov
aam
cmp
fsubs
jecxz
cmpb
lods
inc
cli
dec
sbb
les
cmp
mov
or
adc
push
repnz
add
push
pop
xchg
sbb
mov
adc
mov
je
mov
jbe
sbb
fmuls
push
pop
call
and
iret
add
enter
and
cmpb
add
hlt
sbb
sub
sub
cmp
nop
add
mov
dec
sbb
push
je
dec
lea
sarb
movsb
enter
lods
jae
dec
sub
jp
movb
or
dec
ja
add
jae
das
mov
andl
xchg
pushl
in
in
push
loopne
or
and
or
loopne
cmp
pop
pop
cld
or
mov
pushf
sbb
rcl
lock
or
dec
loopne
loopne
sahf
out
pop
movsl
push
scas
mov
sahf
out
jne
test
xchg
popf
cmp
aad
jge
add
add
and
adc
fs
rcrl
orps
or
mov
mov
dec
pop
pop
subl
sbb
push
fisttpl
aam
aas
adc
imul
adc
dec
fsubr
or
inc
push
or
ss
leave
push
out
popf
sbb
or
dec
and
and
dec
add
iret
movsb
push
dec
and
fcoms
and
xchg
imul
xor
or
ja
sahf
mov
mov
adc
push
jmp
or
int
adc
lods
outsl
pop
cmc
insl
and
pop
xlat
jo
lret
pop
dec
test
xchg
jle
xchg
lods
mov
add
mov
pusha
add
sub
jnp
and
repnz
push
pop
jns
test
arpl
or
jmp
push
add
pop
jo
jl
xchg
push
lods
repnz
pop
jmp
outsb
mov
push
mov
cmp
test
es
dec
dec
or
ja
cmp
pop
inc
fidivl
pusha
mov
adc
inc
sbb
test
dec
repnz
xchg
or
aam
xlat
add
push
or
dec
mov
mov
add
adc
lds
in
dec
cmp
and
dec
test
add
pushf
ljmp
clc
push
out
add
xor
prefetch
xor
add
add
and
js
shl
clc
stc
or
jmp
jecxz
add
mov
aaa
incb
inc
dec
sub
mov
and
sub
push
pop
sbb
cmp
sub
sub
and
dec
gs
dec
xor
sub
shll
or
pop
xorl
lock
push
xchg
or
sbb
or
mov
pop
mov
jl
and
je
add
jne
xlat
adc
push
sbb
push
cltd
nop
inc
lock
or
mov
nop
push
and
lds
rorl
lds
push
lock
sahf
xor
inc
add
repz
inc
or
test
or
rcll
dec
inc
call
cs
sub
jb
push
sbb
or
mov
cmp
mov
or
inc
cmp
or
das
repnz
push
fcoms
or
sub
adc
jb
and
sbb
test
add
cmp
nop
push
pop
add
insl
xlat
jge
leave
popf
lods
or
add
and
test
add
and
add
decl
je
add
in
cld
or
je
xor
sub
sarb
sbb
daa
mov
pusha
or
and
loop
lock
pop
cli
push
push
adc
orl
add
filds
inc
jmp
rcrb
or
or
push
mov
sbb
loope
push
ljmp
xchg
hlt
and
lods
imul
jbe
mov
xor
mov
out
pop
push
dec
dec
dec
inc
dec
adc
xchg
adc
mov
push
mov
inc
mov
xchg
dec
jg
and
xor
aaa
aam
inc
imul
push
or
imul
scas
movsb
cltd
dec
inc
cltd
dec
insb
or
loope
jecxz
repz
sbb
xchg
or
mov
subb
loope
stos
sub
pop
adc
sub
sarb
inc
jbe
adc
lahf
je
outsl
sbb
sti
jmp
cmp
inc
inc
mov
lods
fwait
icebp
stos
push
push
xchg
arpl
outsl
push
push
lock
call
jnp
rorb
aaa
or
les
sti
dec
mov
push
mov
jecxz
sub
pop
adc
mov
popa
imul
popa
clc
jbe
or
das
je
pop
test
mov
in
xor
cmc
das
add
cmpsb
leave
mov
dec
pop
sbb
ret
cmp
popa
ret
cmc
or
and
add
nop
push
cwtl
add
pop
pop
aaa
loopne
jge
lods
stos
xchg
cmc
insl
sub
add
adc
in
out
jne
mov
jb
inc
mov
sub
bound
xorb
in
mov
scas
and
in
out
adc
out
adc
insl
sub
movsb
add
subl
in
mov
mov
jp
hlt
mov
push
add
push
into
jae
jb
sbb
out
inc
mov
push
std
shrb
nop
and
fs
popa
outsb
dec
dec
sub
add
je
sub
and
add
add
adc
or
mov
mov
or
cmp
jl
adc
xor
cmp
add
cmp
repz
push
cmp
xchg
hlt
repz
mov
mov
mov
push
addr16
inc
pop
and
sarb
js
adc
mov
cmp
sarb
cmpsl
or
lods
cmp
jnp
addb
push
push
or
pushf
gs
push
pop
fdivrp
pop
cmp
popa
adc
je
pop
sahf
sub
fs
andb
cmp
jo
and
and
push
jg
pushf
sub
adc
pop
adc
adc
leave
push
leave
dec
cmp
xchg
pop
dec
inc
js
adc
adc
pushf
loop
xchg
jo
lods
mov
xchg
xchg
cmp
cmp
cs
push
orb
jnp
cld
pop
adc
xor
aas
lods
notb
lcall
adc
mov
hlt
inc
adc
inc
dec
adc
cmp
sbb
adc
lds
getsec
lock
push
sbb
push
orb
add
les
push
push
sbb
nop
movl
jno
push
in
nop
pop
dec
test
add
scas
pop
jns
push
js
push
cwtl
add
popf
mov
push
push
test
push
jnp
mov
pop
sub
dec
push
pop
push
fs
sahf
idivl
test
mov
dec
xchg
hlt
scas
sub
push
push
fsubl
test
lods
add
and
xchg
adc
mov
mov
push
pop
and
or
add
jne
xchg
shlb
addl
and
insl
bound
das
pop
add
insl
bound
dec
pop
mov
add
test
sbb
jns
push
outsb
jne
adc
bound
jae
add
fucomi
jbe
add
xchg
mov
pushf
data16
inc
fsubrs
dec
gs
jbe
or
adc
jb
push
dec
push
in
dec
imul
call
or
imul
and
push
mov
outsb
add
xor
fsubrs
stos
inc
mov
jb
add
sbb
popa
imul
orb
imul
mov
or
jns
push
adc
mov
smsw
add
mov
mov
hlt
cmpsl
sbb
pop
add
and
ja
stc
add
add
fs
push
adc
jnp
imul
in
push
adc
or
add
adc
push
xchg
fcoms
das
or
js
xchg
mov
dec
push
jmp
inc
lahf
lea
xchg
jl
add
imul
add
imul
fmull
or
sbb
mov
mov
rolb
imul
daa
sub
add
insl
call
sbb
dec
sbb
mov
mov
add
add
mov
mov
es
mov
sub
js
add
iret
add
or
cltd
push
and
push
jb
mov
add
out
xchg
push
jbe
dec
pushw
decl
push
ret
pop
push
mov
test
cs
add
add
push
or
pop
js
inc
sbb
sti
pop
or
jp
or
xchg
lahf
adc
enter
jo
incl
or
iret
sbb
or
xor
lds
js
pop
je
mov
ja
popa
push
lock
es
addb
mov
fmul
push
iret
push
xor
adc
sbb
repnz
outsb
leave
jmp
inc
dec
icebp
das
call
dec
gs
or
sub
add
aam
push
dec
sub
call
push
xchg
imul
aas
adc
add
leave
rorb
rclb
mov
cmp
or
jnp
adc
or
arpl
add
sub
pushf
or
jg
pop
fidivrs
mov
or
xor
shr
pop
mov
lea
pop
sbb
add
push
jno
pshufw
fwait
and
push
xchg
dec
add
and
jg
pop
xor
pop
inc
gs
mov
sub
add
bound
mov
js
clc
lret
xchg
xlat
pop
rorb
push
push
scas
xchg
psubusw
shrb
nop
sbb
nop
push
sub
jle
sub
mov
or
movups
icebp
push
jo
ja
cmc
ds
mov
and
xchg
adc
fmuls
mov
andb
sbb
add
and
pop
in
lods
lahf
xchg
insb
push
and
and
lret
mov
sbb
add
fists
test
es
test
push
pop
add
jo
or
int
fstps
push
xor
jae
insb
je
push
fisubs
mov
rolb
sti
into
imulb
test
sbbb
jle
loopne
mov
lock
push
lock
and
xor
push
add
sub
pop
add
add
add
add
and
or
pop
add
or
or
mov
popa
std
pushl
or
sbb
cmp
inc
mov
lcall
out
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fdivr
fcos
fdivr
xlat
call
call
call
call
call
call
call
cld
aaa
mov
dec
loop
dec
dec
dec
dec
fwait
mov
fcomip
dec
dec
jp
push
mov
rep
push
jl
fdiv
inc
push
pushf
jns
int
jge
cld
jle
cmp
repz
out
jg
lods
mov
jge
mov
les
mov
out
sbb
dec
inc
andb
mov
xchg
rclb
push
negb
jns
je
xchg
cmpsb
fstp
insb
lahf
insb
mov
insl
add
pop
dec
jns
int
adc
pop
imul
shrl
shrb
call
mov
ds
push
enter
mov
jl
jge
imul
push
pop
ficomps
inc
fsubs
sahf
out
jbe
pop
cmp
int3
push
push
xchg
jne
pop
pop
sbb
and
pop
or
cmp
lea
movsb
movsl
movsb
xchg
outsb
mov
cmp
lock
shlb
jae
movsl
xchg
out
sub
dec
pop
adc
mov
rorb
data16
pop
out
add
jns
ret
aas
incl
push
pushl
add
pop
add
rclb
mov
or
mov
jp
mov
adc
hlt
or
jge
pusha
ja
add
pushf
insl
mov
mov
jmp
in
and
inc
and
push
xchg
mov
add
mov
mov
fisubrl
or
dec
and
movsl
out
sub
rol
add
mov
mov
inc
outsl
arpl
and
xchg
mov
call
mov
js
js
sub
or
mov
repz
aad
add
pusha
sahf
dec
lahf
mov
js
testb
push
adc
or
insb
fmulp
mov
ror
call
repnz
sbb
ss
les
fsubr
lcall
cmpsb
lahf
test
xchg
pushf
nop
lcall
inc
sahf
cld
movsb
lahf
shlw
test
jle
aam
lret
aaa
movsb
add
cmp
jl
mov
push
jp
adc
dec
add
cwtl
inc
lock
add
shll
lret
push
js
aaa
add
add
add
add
mov
add
sbb
sbbl
push
pop
loopne
insl
dec
aaa
mov
add
mov
or
pushl
adc
and
mov
fbstp
and
das
ds
add
push
mov
mov
mov
mov
rcrl
add
in
inc
jmp
inc
clc
inc
inc
inc
inc
inc
inc
inc
xor
cmpsb
std
mov
clc
rcrl
push
adc
lcall
data16
icebp
pushl
cwtl
push
lods
clc
scas
sbb
iret
repz
lods
int3
lock
adc
fwait
out
cmp
movsb
hlt
test
cmp
les
data16
lahf
mov
inc
call
fnstcw
nop
push
dec
fsubs
fwait
out
dec
mov
push
insb
jl
cmp
cmp
fs
fidivrl
out
jo
mov
hlt
sarb
mov
sahf
and
outsb
mov
xor
out
jns
testl
push
mov
shlb
cmp
les
les
fs
frstor
mov
mov
lahf
mulb
test
fcmovnbe
push
push
lret
call
int
mov
js
adc
mov
sti
mov
and
out
xchg
mov
data16
lahf
data16
mov
shlb
mov
imull
rolb
lret
outsb
cmp
fisubl
lret
mov
push
inc
pop
and
mov
stc
scas
cmp
pop
sub
pushf
dec
mov
mov
fs
or
test
dec
cltd
rolb
jb
clc
push
out
cltd
dec
loopne
mov
fmuls
pop
push
jmp
or
aas
pop
sub
push
or
sub
and
add
ret
ja
push
loop
mov
inc
enter
fcoml
cmpb
inc
fstl
loope
fsubp
in
jg
out
push
or
clc
add
adc
shlb
in
inc
fs
ret
call
pop
and
leave
push
jo
sub
and
mov
fsts
pusha
push
inc
add
and
fcompl
fildl
xor
loop
push
inc
fsubs
fs
mov
iret
das
addb
sbb
add
outsb
add
xor
add
je
cmpsl
sbb
or
pop
addb
mov
pop
lcall
jb
pop
rcrb
add
je
inc
insb
fmul
cmp
jnp
dec
fisubrl
pop
inc
in
xchg
movsl
imul
mov
add
inc
andb
imul
add
les
or
shr
sbb
pop
jb
aam
mov
mov
xor
fdivrs
imul
lods
inc
rolb
cmp
imul
adc
out
add
push
mov
mov
cmp
pusha
pop
cli
xor
mov
xlat
pop
dec
daa
inc
into
inc
clc
cmp
mov
fnstenv
orb
inc
or
shll
outsl
sub
daa
adc
or
je
mov
mov
or
adc
ret
cld
mov
fstps
or
nop
add
nop
adc
and
loope
sbb
add
insb
orl
mov
cmpsb
fadds
loop
pop
gs
rep
jne
pushf
loope
cmp
test
pop
test
jmp
dec
xor
xor
ja
push
out
test
cld
lock
mov
cmp
clc
inc
sti
sub
insb
test
inc
vpshuflw
xchg
or
push
in
daa
sub
xor
imul
push
lods
add
ja
pop
cld
call
cmp
orb
or
sbb
dec
inc
push
adc
and
push
and
jbe
add
add
add
push
dec
sahf
and
imul
push
add
inc
movl
nop
lret
into
add
and
adc
pop
cli
test
lods
push
pop
mov
adc
insl
dec
fstps
xchg
fiaddl
pop
dec
jne
cmp
cmp
ds
jl
cmp
adc
xor
sbb
mov
or
lods
add
xor
adc
shlb
push
or
xchg
addr16
or
inc
js
lcall
leave
pop
js
push
jp
inc
scas
or
lods
push
rcrb
test
fimull
daa
push
mov
push
xchg
inc
push
leave
push
inc
push
inc
or
cs
jo
daa
or
xchg
or
inc
insb
popa
clts
cmp
and
outsl
and
orl
imul
push
mov
dec
push
popa
push
movl
lods
mov
add
cmc
push
pusha
sub
mov
dec
fcmovu
pop
add
push
push
test
loopne
pop
sbb
and
orl
jbe
add
jmp
jmp
inc
inc
pop
push
lret
dec
push
jb
pop
pop
and
sub
add
and
xchg
mov
sbb
sbb
loop
lds
adc
inc
fisubs
adc
stc
xor
out
sub
xchg
aaa
and
mov
scas
pcmpeqb
ficompl
xchg
daa
add
movsb
adcb
scas
add
aaa
push
loope
cmp
mov
test
push
and
andl
adc
push
or
add
cmp
jl
mov
or
mov
pusha
push
cmp
fcomps
lods
test
or
mov
cmp
clc
jp
loopne
bound
pop
mov
add
lods
add
pop
xchg
lcall
jbe
movsb
sub
divl
test
popa
leave
sbb
sbb
sub
popa
aaa
push
add
icebp
dec
dec
jne
push
cmp
cmp
mov
push
aad
sbbl
pop
add
push
or
push
dec
xor
cmp
mov
inc
addr16
rcl
or
adc
xor
rcll
sbb
and
xor
and
sub
sub
dec
sbb
sub
push
cmp
mov
adc
mov
lret
sbb
xchg
test
jno
inc
inc
jmp
popa
mov
jmp
dec
test
rolb
add
xor
fildll
inc
add
je
sub
mov
inc
or
shll
add
cmp
mov
cmp
push
cld
ja
inc
or
inc
mov
pop
push
jnp
cli
push
or
inc
inc
adc
or
mov
inc
mov
fdivl
pop
lods
or
sub
or
adc
or
inc
and
insb
out
pop
add
out
sub
sub
cmp
das
iret
mov
xchg
mov
inc
push
sti
mov
or
mov
test
nop
outsl
incl
cmp
pop
test
or
xlat
sbb
xchg
or
dec
jnp
pop
mov
orl
ljmp
incl
xchg
adc
mov
xor
sbb
cli
insl
orb
mov
push
pop
mov
fbstp
and
fbstp
xchg
push
lock
iret
iret
add
xor
and
inc
push
push
jp
or
cltd
mov
cmp
test
loop
mov
rcrb
or
pop
cmp
nop
sahf
push
add
sub
les
dec
dec
jae
mov
or
adc
outsb
adc
and
push
inc
pop
push
cmp
inc
aaa
fnsave
sub
push
mov
and
push
pop
push
insb
insb
push
inc
lea
repz
inc
cmc
push
pop
pop
fldcw
xor
inc
bound
sbb
ja
adc
popa
in
inc
inc
lea
dec
inc
stc
lock
mov
pusha
jo
stos
cmpsb
add
cmp
add
mov
test
or
push
adc
or
pop
sub
xchg
mov
xchg
lret
aaa
dec
or
adc
shlb
movsbl
xor
xchg
inc
inc
lds
adc
rolb
nop
daa
nop
fwait
cwtl
dec
fisubl
jl
pop
cmpsl
mov
mov
jae
sti
cmp
mov
inc
notb
push
ja
add
pop
push
mov
add
mov
or
movb
jmp
cmp
jne
add
xor
loopne
mov
jecxz
mov
inc
lret
es
add
testl
fs
push
shrl
test
mov
popa
pop
sti
push
mov
ret
jo
sub
out
add
cmp
sbb
cmp
test
inc
inc
imul
inc
inc
pop
inc
add
mov
je
cmp
movsl
in
sub
out
mov
cs
xchg
mov
pop
jne
mov
sti
icebp
add
lods
cmp
xchg
mov
insb
xor
clc
xchg
das
popa
test
mov
xlat
push
les
adc
addr16
jp
sub
add
cmp
and
pushf
pop
fadd
je
mov
push
dec
shrb
rorb
cs
jno
and
and
fimuls
in
lea
push
xchg
cltd
js
pop
pusha
cli
insl
arpl
testl
push
xlat
popa
je
arpl
pop
ljmp
push
add
popf
repz
adc
xor
pop
inc
orl
mov
mov
sub
xlat
sub
add
lock
idiv
cmp
cmpsb
add
jo
es
jno
dec
loope
pop
push
dec
mov
mov
xor
xor
jle
inc
push
sub
ljmp
cmpsb
sbb
cmp
rcl
cmp
sti
add
fdivrs
mov
mov
dec
add
loopne
test
and
sbb
or
iret
pop
jmp
and
sub
call
fcmovbe
mov
shlb
adc
cmp
pop
jbe
jne
and
cmp
shlb
adc
cmp
test
add
mov
pop
in
sbb
xchg
lock
adc
or
dec
mov
mov
call
das
repnz
stos
add
add
jmp
lock
push
and
and
pop
inc
cmp
xlat
es
pop
xchg
xchg
into
cmp
jmp
or
sbb
das
cmp
mov
sar
cmp
inc
inc
xchg
mov
jge
fucomp
mov
movsl
test
sub
hlt
mov
aas
mov
or
lret
push
sbb
sbb
inc
add
lea
pop
jmp
das
fdivs
test
jb
and
jbe
push
pop
or
dec
and
out
xchg
inc
mov
jae
cmpb
mov
mov
psubusw
dec
jne
sti
fsts
push
cmp
je
out
iretw
add
test
out
data16
test
sbb
or
leave
add
cli
mov
jne
ja
xchg
loop
xchg
ret
shrb
pop
sub
fstpl
pusha
push
imul
sub
mov
ja
add
push
or
ucomiss
cmpsl
sahf
jmp
jo
jne
mov
or
or
mull
movsb
lea
mov
add
jmp
xchg
cld
sbb
add
xor
sti
cmp
je
xchg
scas
outsl
arpl
inc
jo
push
mov
repz
bound
pop
bound
testb
or
pop
push
fbld
repz
fists
je
push
cs
adc
or
jbe
add
ret
add
jmp
mov
testb
stos
mov
cli
mov
pusha
adc
mov
jo
dec
cmovno
xor
and
mov
pop
pop
in
in
adc
cmp
stos
pop
insb
add
sub
test
cmpsl
sbb
add
daa
push
push
cmp
out
pop
xchg
lods
inc
lock
and
fidivrs
push
movsb
test
pop
fdivs
mov
jmp
adc
dec
movsb
jbe
inc
dec
out
inc
jl
mov
pop
lret
imul
mov
dec
or
adc
mov
stos
xor
xor
ret
fdivrl
das
push
adc
push
lods
mov
push
or
jnp
outsb
icebp
adc
aaa
mov
fs
sbb
push
cmp
mov
pop
shll
xor
lea
in
je
js
or
stc
mov
xchg
cmp
fldt
xchg
ss
or
fldt
stc
fstpl
fwait
jmp
inc
and
sbbl
and
and
imul
jbe
sub
insl
pop
sub
push
jmp
xor
add
jmp
pop
ret
mulb
or
pop
sub
test
sbb
xchg
jo
fwait
push
stc
add
add
dec
js
xchg
xchg
dec
mov
cmpsb
adc
loopne
inc
jns
mov
push
mov
dec
sub
pusha
stos
aaa
sbb
mov
mov
loope
in
dec
inc
xchg
fcomp
push
cmp
sbb
adc
in
dec
push
xchg
jecxz
sbb
adc
sbb
xorb
adc
mov
inc
imulb
pop
cmpl
sub
sahf
popa
pop
pushf
push
lret
or
dec
rolb
sub
inc
js
repz
lahf
or
mov
xor
push
call
out
int
sub
add
inc
add
pop
dec
outsb
sbb
jno
dec
sbb
sub
shll
test
adc
push
adc
push
and
inc
adc
mov
into
push
push
adc
jne
mov
and
fimuls
sbb
lret
js
imul
or
lcall
add
mov
pop
ds
and
lock
or
lods
add
sbb
cmpsl
fwait
dec
mov
push
jp
cmpsl
das
push
push
paddd
movb
adc
sbb
pop
cltd
lods
sbb
test
movsl
sbb
or
inc
subl
and
add
cmp
sbb
adc
mov
jmp
and
imul
dec
inc
pop
je
xchg
adc
adc
mov
xchg
arpl
in
cmp
imul
outsl
xor
adc
or
cmp
incb
or
movsl
ret
cmp
jmp
lods
jecxz
push
icebp
or
jmp
jecxz
lea
das
sbb
jl
or
add
jo
add
sub
or
push
sahf
xchg
mov
ljmp
es
add
and
jl
cmp
nop
and
sbb
rorl
xor
js
jno
or
mov
mov
sub
lea
fcomip
adc
mov
mov
mov
dec
inc
imul
sub
or
enter
das
xlat
arpl
je
dec
jmp
xchg
add
jecxz
fwait
cs
inc
cmp
repz
popa
or
and
faddp
jno
movb
and
and
out
andb
dec
test
xor
dec
ss
push
enter
push
das
insl
sbb
mov
adc
aaa
mov
cmp
mov
mov
cmpl
mov
pop
shrl
pop
push
mov
nop
mov
out
inc
clc
push
ljmp
es
adc
add
mov
jne
lock
andb
mov
push
add
testl
insb
cld
xor
lock
aas
jnp
adc
js
cs
fsubrs
jmp
jmp
xor
pop
mov
dec
mov
addl
nop
or
hlt
cli
adcb
lahf
push
shl
pop
fnop
push
dec
sbbb
inc
push
iret
adc
add
mov
jmp
outsb
shrb
pop
gs
pop
pusha
loope
mov
jno
add
add
testl
push
pusha
pop
sbbb
addb
xchg
jge
fisttps
shlb
rclb
or
rclb
sbb
push
rorb
aas
roll
and
pop
sbb
or
cmp
mov
xor
pusha
sarb
mov
mov
push
pop
mov
dec
push
xorb
arpl
outsl
push
je
rclb
test
filds
sbb
icebp
and
mov
pop
ljmp
popf
push
jbe
jnp
xor
pusha
push
and
test
and
dec
out
pop
jmp
jbe
dec
or
or
adc
pushf
xor
fsubl
ret
cmp
push
or
sbb
xchg
movsb
adc
je
sub
jbe
cmp
cmp
cltd
movsb
popf
sbb
or
xor
test
inc
mov
lret
jle
ljmp
in
mov
push
push
popa
pop
inc
push
sbb
xchg
dec
add
xorb
sub
and
js
xlat
cmpb
cmp
inc
arpl
dec
in
movsb
inc
lods
add
pop
xchg
fwait
mov
in
mov
cmp
push
jne
jecxz
jl
xor
push
add
shlb
and
sub
pop
pop
and
push
cmp
push
jmp
mov
and
cs
sbb
fs
ret
test
mov
adc
xor
mov
in
fadd
loopne
mov
lds
je
mov
addr16
and
push
pushf
mov
sbb
popf
nop
insb
sbb
and
and
push
and
inc
push
gs
jne
dec
or
adc
lods
xor
sbb
loope
aaa
and
and
push
out
sbb
movsb
subl
or
xor
cmp
jp
mov
add
mov
and
dec
loope
ret
xchg
adc
dec
and
or
pop
pop
or
inc
fdivs
ja
or
mov
cmp
dec
sbb
lds
push
js
xchg
and
aas
cwtl
scas
cmp
push
xor
lods
sbb
daa
xor
lds
cwtl
jb
mov
fimull
and
cmpsb
jno
cmp
stos
insl
nop
sbb
push
push
add
push
inc
stc
les
jecxz
push
dec
mov
aam
inc
adc
sbb
add
dec
sub
je
sbb
jae
movl
lahf
jo
inc
push
add
pop
pop
pop
imul
lds
push
pop
add
jp
into
jbe
aaa
cmp
sub
add
add
mov
adc
pop
mov
xor
push
cmp
xor
cmp
mov
mov
int3
mov
mov
in
ja
sub
xor
imul
push
jmp
pop
sub
aam
or
ret
jae
inc
rclb
ret
xor
dec
push
nop
and
roll
je
andl
adc
xor
push
pop
mov
insb
xlat
fadds
or
inc
inc
aam
cmp
cmp
xchg
cmp
pop
jp
cli
in
movsb
inc
mov
cmp
aaa
push
cmpsb
jl
inc
cmp
pop
pop
scas
movsl
movsl
enter
mov
sbb
mov
pop
test
mov
push
push
outsl
adc
mov
es
orl
dec
cmp
lods
incl
cmp
clc
cmp
push
mov
inc
cmpl
ljmp
out
pop
add
in
leave
lahf
push
sub
lock
push
int3
mov
ds
mov
roll
push
push
xor
je
lea
add
adc
orl
sti
sbb
xchg
clc
or
gs
dec
dec
push
add
sbb
jns
mov
sbb
idiv
jo
inc
popa
enter
test
in
pop
or
sub
pop
orl
daa
and
jle
jne
rcrb
fldenv
jmp
cmp
in
lods
add
or
push
movsb
xchg
xor
loopne
and
test
mov
cmp
jno
push
test
push
mov
jne
or
cmpl
or
push
je
mov
push
inc
push
clc
out
dec
sub
jbe
ret
imul
std
sub
ret
jne
lods
rorb
je
mov
movb
push
dec
inc
outsl
or
dec
inc
mov
push
xchg
mov
outsb
or
and
rcl
add
fnstcw
push
or
xor
inc
jbe
jnp
jne
dec
lea
dec
jne
test
mov
push
push
push
adc
mov
mov
loope
push
dec
mov
push
push
orl
adc
and
dec
adc
bound
jnp
addb
sub
testl
lock
cmp
xchg
sub
sete
cmpb
cmc
pop
xchg
sub
mov
insl
sbb
mov
push
adc
loope
hlt
popf
adc
sar
xchg
test
sub
jns
dec
push
dec
mov
dec
jo
mov
out
imul
push
cmp
incb
or
and
xchg
jg
or
addl
les
xchg
mov
fwait
dec
fcomps
pop
push
push
insl
mov
das
pop
dec
xor
loope
fisttps
les
inc
loopne
mov
roll
mov
cwtl
cld
inc
inc
lret
mov
push
inc
dec
add
push
insb
pusha
push
fistl
inc
pop
or
adc
xlat
in
addl
jmp
jge
cwtl
mov
addr16
add
pop
sub
push
and
js
rorb
inc
mov
sbb
ds
pusha
add
dec
push
sub
pop
xor
push
aad
adc
fisubs
and
in
cmp
cli
clc
ja
cmp
dec
and
mov
push
bound
sti
lds
out
mov
cli
cmp
mov
xor
ss
pusha
push
sti
loope
mov
mov
mov
adc
or
adc
cmp
add
leave
push
scas
cmpsl
rolb
mov
pop
mov
cmp
in
sub
scas
xor
loop
cmpl
xchg
xor
nop
inc
in
pop
ret
add
mov
fs
push
fsubs
ret
ja
test
add
add
lds
int
test
sbb
pop
mov
popf
xchg
push
xchg
lea
inc
lea
mov
mov
adc
mov
pop
js
int3
test
bound
pop
popa
bound
xchg
adc
add
pop
hlt
cwtl
cld
and
hlt
pop
lret
pop
cmp
mov
lock
jns
popa
or
dec
push
dec
dec
jae,pt
call
aam
or
add
or
adc
push
cmp
push
lods
mov
mov
rorl
add
inc
mov
mov
sub
mov
andb
add
test
cmp
mov
jne
jp
sbb
iret
push
push
cmp
sbbb
test
pusha
cmp
cmc
jae
and
pusha
cmp
mov
mov
imul
lret
mov
add
mov
daa
and
add
je
pop
xchg
inc
sahf
pop
jmp
mov
inc
in
adc
push
ss
mov
in
add
add
xor
mov
enter
pop
sbb
aam
loopne
sarb
push
out
mov
or
dec
pop
in
dec
xchg
sbb
cmp
dec
adc
repz
into
adc
add
pop
ret
fidivl
in
or
lret
daa
or
adc
cmp
dec
mov
and
xor
and
fmuls
mov
fsubrp
mov
or
cmp
lea
mov
ret
xchg
pop
push
lock
mov
cmpb
add
push
and
adc
xchg
movsb
xchg
rcrb
push
mov
jge
sub
pop
or
pushf
or
aas
push
cmp
je
mov
mov
xchg
mov
add
testb
in
xor
je
xorl
or
lock
pop
push
pop
and
imul
pop
negl
nop
aad
test
icebp
pop
sub
jns
cmpsl
mov
inc
dec
jo
ficoml
dec
add
inc
dec
xor
inc
sbb
push
mov
addr16
adc
fisubrs
xor
add
xlat
pop
lods
test
add
mov
int
adc
repnz
int
shll
in
mov
adc
orb
addr16
xor
mov
or
je
mov
push
sahf
or
nop
lahf
dec
cs
push
add
or
pop
mov
lcall
es
and
dec
inc
mov
lock
jo
add
cmp
inc
and
mov
adc
repnz
adc
or
adc
jo
stos
mov
int
jo
fbld
inc
add
lea
es
mov
nop
push
add
cld
addr16
mov
sub
pop
je
mov
movb
ja
shlb
leave
cmp
inc
add
dec
stos
mov
push
cmp
orb
mov
mov
push
inc
sbb
add
push
or
mov
mov
xor
cs
je
mov
pop
sub
xor
cmpsb
adc
ss
pop
aas
or
nop
cltd
sbb
mov
nop
out
sti
shufps
jo
sbb
mov
or
pop
pop
pop
or
pusha
pusha
cmp
data16
xchg
or
inc
sarl
lahf
push
xor
or
add
daa
ret
dec
xor
ds
add
push
add
into
inc
mov
insb
mov
and
in
inc
xor
mov
in
nop
xor
lea
das
icebp
mov
mov
inc
int
push
push
idivb
and
mov
jg
gs
je
push
mov
pop
clc
sahf
pop
push
rclb
ret
lahf
mov
addr16
movsl
shll
ds
cmp
hlt
or
dec
mov
and
and
xor
ficoml
xchg
outsl
add
cmp
dec
sbb
add
sbb
dec
loope
popf
data16
jnp
cmp
inc
push
shrb
xor
add
inc
push
or
fsubrl
aam
pop
push
adc
fcmovnu
or
pop
inc
bound
dec
jmp
ljmp
mov
imul
fsubl
adc
dec
mov
rcll
jge
adc
fcomps
add
push
sub
mov
dec
insb
inc
movsb
lea
sub
and
push
and
and
ret
xlat
or
cmp
mov
bswap
cmp
pop
pop
aaa
dec
test
js
add
inc
add
inc
or
jo
adc
mov
and
dec
frstor
lea
out
mov
jne
or
insb
and
xchg
cmpsb
outsb
repz
dec
xchg
mov
add
std
std
or
inc
ret
add
push
popa
inc
mov
insb
sub
std
sbb
dec
xchg
xchg
test
adc
push
jb
adc
pop
dec
cmp
psubsw
sbb
or
aas
pop
das
add
add
outsb
pop
mov
test
add
mov
les
and
adc
cmp
insl
jb
sub
mov
gs
lock
inc
mov
pushl
cmpsl
mov
xchg
cmp
in
test
aam
or
add
add
test
loope
lock
js
push
jge
or
mov
fidivl
test
addb
push
lret
dec
outsb
aas
imul
push
add
push
decb
orb
mov
push
popa
sub
jp
lret
lock
jnp
shll
ljmp
or
in
call
gs
adc
adc
lods
add
mov
lret
xchg
sbb
sbb
sbb
inc
icebp
sub
pop
or
and
sub
sbb
sbb
insl
andb
mov
push
les
mov
or
or
clc
push
add
dec
and
inc
or
loope
dec
popf
data16
leave
and
push
fwait
lea
fst
or
push
fucomp
adc
adc
mov
add
mov
ret
pop
scas
sub
inc
jb
add
adc
sbb
das
sbb
push
mov
leave
rcrl
push
cmp
inc
aad
fadds
xchg
xor
sub
subl
dec
add
add
test
cltd
iret
hlt
nop
add
out
adc
aas
sbb
fwait
lcall
notb
xchg
adc
roll
inc
xor
add
pop
dec
sbb
pushf
shlb
xchg
cmp
insb
inc
lock
ficomps
lea
inc
test
loope
xor
stc
shr
sub
mov
pop
sub
mov
aam
jno
mov
hlt
and
mov
es
push
je
js
jp
inc
push
add
xchg
add
mov
jge
addb
shr
pop
jl
xchg
xchg
lret
adc
dec
dec
dec
cwtl
mov
xor
testb
cmp
sbb
loopne
pop
add
sbb
or
inc
mov
mov
in
and
jg
sbb
outsl
ret
hlt
fs
es
stos
ss
push
mov
jne
test
loopne
sub
cmp
push
mov
or
dec
insb
inc
push
sub
cmp
aaa
call
fistps
sub
das
in
or
inc
faddl
push
xor
dec
cmp
add
lock
leave
in
and
mov
or
mov
in
outsl
and
mov
jo
outsb
stc
push
outsb
lods
adc
pop
add
adc
sub
out
add
test
jnp
inc
add
add
pop
and
jo
loop
push
outsb
mov
loopne
lock
dec
push
adc
mov
push
or
sti
and
cmp
push
inc
fimuls
mov
or
xchg
xchg
mov
xor
mov
shrb
mov
xor
lret
sbb
mov
cmp
loop
xchg
test
jg
cmp
mov
sub
test
repz
add
addr16
notb
adc
mov
shrb
cltd
loopne
les
push
fistps
inc
shlb
test
sti
shr
inc
dec
add
inc
xchg
cs
xchg
mov
lock
jb
inc
adc
jmp
jmp
mov
mov
push
loope
insl
jae
icebp
xchg
mov
and
inc
fwait
adc
hlt
sbb
repnz
jb
sub
testb
lret
stc
decl
ret
jo
push
push
sbb
xorl
xor
js
or
jp
rclb
adc
pop
mov
push
lea
jne
pop
push
imul
stos
js
call
pop
rclb
mov
mov
leave
adcb
cwtl
dec
lea
clc
mov
push
mov
mov
or
dec
dec
xor
pop
js
adc
outsb
sbb
rorb
test
enter
sbb
mov
imul
pusha
dec
sub
and
push
ret
les
push
add
or
popf
rol
shll
push
adc
add
lret
adc
iret
adc
or
or
sbb
sti
adc
xor
push
pop
movsb
inc
or
dec
imul
test
sub
jae
mov
lock
rorb
int3
mov
xlat
cltd
xor
fdivrs
inc
or
push
je
cmp
popa
test
lret
xchg
or
int3
enter
cmp
mov
push
mov
adc
jp
xchg
sbb
out
out
outsl
test
stos
sub
xor
push
movsl
test
add
rorb
mov
pop
cmpsl
lock
movsb
push
jmp
push
mov
jbe
insb
into
rorb
pop
js
daa
adc
xchg
daa
daa
fistps
sub
sub
or
dec
or
js
ret
and
push
fnstsw
cmp
and
pop
js
adc
and
popl
jmp
push
cmpsl
test
push
pop
addl
add
pop
lcall
jmp
sub
push
enter
add
push
or
orl
lea
cmpsb
adc
pushf
add
es
or
imul
mov
pop
notb
mov
add
mov
jl
push
mov
jae
addr16
jmp
jl
and
std
inc
or
mov
dec
inc
push
jmp
sub
dec
xchg
js
mov
sub
dec
dec
pop
add
sub
mov
adc
jle
adc
push
add
test
mov
mov
int
dec
aas
add
cmp
cmp
and
dec
cmpsl
cmp
pop
jle
xchg
pushf
jne
test
add
ljmp
sarb
es
mov
push
ss
test
nop
lcall
sub
bound
inc
sbb
cmp
popa
aad
fmull
fs
mov
pop
add
test
sub
push
stos
aaa
mov
jmp
or
push
jmp
xchg
mov
incb
cmp
jne
xor
xchg
rcl
ficomps
or
pop
and
sbb
inc
hlt
inc
xor
mulb
pop
scas
dec
adc
and
in
push
pusha
fildl
cli
and
iret
rclb
enter
outsl
adc
ror
je
test
add
jmp
xchg
adc
jo
or
jp
xchg
frstor
divb
lods
adc
mov
push
cmp
jle
lcall
sbb
xchg
and
mov
ret
mov
push
sbb
adc
fstpl
add
aam
mov
xor
test
neg
ja
cmp
adc
cmp
and
dec
cmp
aam
adc
subl
adc
ja
rcrb
sbb
cmp
pop
popa
inc
rorb
push
and
fcmovnbe
jle
or
orl
andl
inc
jmp
adc
pop
or
insl
push
sbb
sbb
popl
sub
sub
data16
push
xchg
sub
push
loopne
mov
xchg
rolb
xchg
jp
sbbl
rol
or
push
jns
subb
add
inc
push
xor
in
cmpsl
lock
or
dec
jle
addl
jle
add
out
lret
mov
sbb
sbb
ret
aad
sbb
ds
or
outsb
dec
andl
pop
dec
lds
repnz
inc
hlt
jle
data16
or
dec
dec
mov
jp
insb
sbb
xchg
add
jns
imul
adc
push
jnp
xlat
sbb
lcall
push
xchg
mov
adc
push
add
mov
je
imul
mov
aad
cs
cmp
inc
jecxz
pushf
push
cmc
rolb
test
and
pop
insb
int
dec
fwait
jne
pop
jp
sbb
xor
popa
or
inc
or
test
dec
jl
dec
aaa
orl
pop
push
outsl
sub
xchg
and
fimull
enter
movl
pop
xor
inc
jmp
jnp
ret
sub
jp
ret
daa
ret
fildl
push
pop
aam
push
rcrb
dec
or
stc
mov
inc
in
roll
xor
shll
call
rorl
rclb
inc
sbb
aam
jo
mov
xchg
mov
mov
adc
enter
popf
stos
jmp
or
mov
out
out
sub
outsl
add
xor
push
lret
xchg
jne
mov
mov
sbb
out
adc
inc
mov
push
mov
cltd
add
xor
dec
jmp
das
dec
in
add
loope
push
movb
aad
push
shlb
popa
adc
mov
outsl
loopne
enter
jl
cmpb
xchg
mov
lock
sbb
int3
or
push
adc
adc
jbe
cmp
jle
adc
or
test
or
dec
and
xor
aaa
je
mov
les
pop
bound
jne
testb
cmp
jb
push
or
cmp
push
jne
mov
shlb
rorb
push
fs
pushf
and
pop
in
pop
push
inc
loop
mov
add
rcrb
comiss
arpl
cmpl
lret
adc
gs
jmp
lret
sbb
bound
inc
xor
or
mov
call
jl
popa
mov
push
mov
push
mov
mov
shll
mov
or
add
imul
cmpsl
jl
mov
mov
addl
loopne
mov
mov
addl
jo
out
pusha
cmp
sbb
out
pop
pop
push
in
jno
adc
mov
loop
sbbl
cld
fs
shld
adc
leave
rol
das
adc
push
iret
ret
lahf
mov
pop
js
testb
pop
adc
dec
ret
dec
daa
inc
adc
mov
ret
inc
daa
add
outsl
pop
les
mov
dec
sub
cmp
inc
jp
dec
pop
sub
nop
or
rorb
ja
cld
add
push
lret
mov
pop
test
jp
sbbb
or
cmpsl
or
inc
popa
ret
dec
lock
and
sub
mov
ficoml
cwtl
hlt
or
dec
mov
pop
sub
push
cld
cmp
push
or
sahf
clc
xchg
addl
andb
cld
sub
daa
daa
or
rcrb
jo
adc
ret
out
sub
or
xorb
pop
ficoml
mov
cmp
ja
repnz
test
stos
add
xor
xchg
rolb
mov
ret
pop
push
clc
fstl
pop
test
and
sub
es
dec
push
test
mov
inc
bound
inc
fs
cmpl
mov
or
push
cmpb
or
sub
push
addr16
sub
and
insl
or
rorl
inc
and
adc
loope
and
adcl
nop
mov
cmp
push
insl
inc
sbb
inc
or
pop
scas
push
dec
shlb
mov
rcl
or
mov
leave
cmp
inc
es
jb
or
cmp
loope
mov
or
scas
cmc
sbb
or
adc
nop
xchg
push
testl
push
jbe
mov
pop
pop
ds
pop
sbb
mov
cmp
daa
add
adc
sar
inc
mov
loope
in
xor
cmpsl
adc
cmpsb
jl
test
jl
pop
pop
outsb
push
dec
sbb
icebp
rorl
fs
add
fcompl
mov
movb
jecxz
loopne
push
xchg
aad
cmc
adc
enter
or
pop
inc
js
dec
jg
mov
inc
fidivl
add
add
add
fdivrs
dec
push
sub
cmp
push
add
ljmp
lock
or
fwait
adc
and
adc
fdivrl
push
xor
xor
and
xor
or
loopne
fwait
cs
sti
add
push
dec
je
add
neg
jbe
jmp
bnd
in
aam
int3
test
addr16
sbb
fcoml
sbb
rolb
cmp
adc
inc
inc
shll
imul
push
push
dec
insb
test
fnstsw
pop
data16
adc
es
mov
es
jmp
xor
xchg
push
mov
popa
adcl
and
xchg
out
aaa
and
mov
in
sub
aad
lock
xor
mov
or
mov
jecxz
lret
outsb
loopne
jmp
stos
push
bound
or
mov
jne
pushf
push
enter
inc
lcall
popa
mov
jne
pop
inc
mov
dec
cmpb
dec
nop
sbb
leave
and
sub
inc
sbb
imul
cmc
imul
xchg
dec
sbb
sub
sub
aad
es
test
imul
inc
fiaddl
xorl
ljmp
add
jno
das
sbb
push
je
ja
out
clc
and
push
inc
push
lock
and
xchg
daa
std
xchg
scas
inc
mov
jecxz
cwtl
or
sahf
sbb
xor
mov
or
andl
inc
daa
push
sti
mov
xchg
jo
mov
jmp
movb
sbb
test
ja
cmpsb
mov
xor
or
mov
jl
inc
mov
orb
cmp
imul
mov
add
fs
jo
push
push
inc
jmp
lahf
dec
rclb
xchg
add
push
addr16
pop
mov
mov
cmp
movb
xchg
movsl
xchg
sub
sti
out
movsb
mov
pusha
cmpl
sub
js
loop
cli
xor
sbb
jge
fs
gs
jbe
sub
push
jne
shlb
cmp
cmp
sbb
stos
hlt
rorb
adc
into
or
out
lds
cmp
orl
cmpb
pop
or
lret
pusha
dec
inc
inc
loopne
mov
frstor
and
nop
jmp
jl
cmp
dec
sub
lcall
shrl
xchg
adc
jb
xor
out
mov
and
setge
aas
add
bswap
mov
scas
pop
outsb
les
adc
adc
iret
mov
arpl
xor
rcrb
pop
les
mov
ds
push
xchg
mov
popf
mov
jo
sahf
out
cmp
push
add
into
cmp
setg
jmp
inc
add
fcmovu
mov
push
dec
cmp
setle
cmp
imul
adcb
add
pusha
xchg
jl
mov
psraw
lret
outsl
rcl
dec
clc
xor
inc
pop
int3
inc
sti
sub
arpl
cmp
ljmp
sbb
jbe
pop
xchg
stos
sbb
jp
mov
jnp
aam
ss
dec
sbb
fisubrs
cmc
sbb
push
push
pop
shlb
enter
insl
xor
jbe
insb
loopne
pop
xor
imul
jle
in
add
inc
adc
adcb
sti
sub
loopne
mov
aaa
hlt
jmp
xorl
lahf
sbb
mov
test
outsb
lcall
daa
cmpl
xchg
lret
mov
call
fdiv
std
add
mov
popf
movb
test
xchg
lsl
adcl
mov
ret
add
push
testb
arpl
jmp
mov
add
or
push
jb
sub
or
xchg
fldcw
xchg
pop
or
add
out
imul
pop
add
push
mov
jnp
bound
lds
scas
push
or
jnp
out
popl
push
scas
and
dec
or
jns
add
ds
inc
adc
sub
lods
or
test
jmp
xor
add
jmp
sbb
xor
cmp
inc
call
cmp
je
xchg
xchg
mov
in
enter
icebp
clc
mov
outsb
or
imul
mov
cli
add
jae
nop
daa
push
cmpsb
aas
push
bnd
cmp
mov
sub
or
inc
push
daa
fmuls
stos
aas
in
inc
mov
pop
imul
add
dec
sub
or
rclb
inc
sub
shrl
and
das
push
pop
sbb
shrl
dec
jmp
xchg
sbb
cmp
jne
gs
ss
cltd
jmp
inc
mov
mov
sub
jp
fisubrs
jg
push
loopne
sbb
inc
cmc
fisttps
je
xchg
dec
or
out
dec
push
cmp
cld
insb
add
add
cmp
jge
out
ret
ret
lret
jno
and
inc
mov
add
cmp
push
imul
icebp
or
or
pop
xor
or
hlt
push
imul
testl
jne
jle
mov
shlb
jne
daa
add
test
addr16
aad
lock
jb
sub
xchg
cmp
xor
or
pop
movb
divl
push
popa
jne
push
xlat
xor
jo
jp
add
bound
add
test
push
pop
sub
cmpsl
sbb
ja
sub
sbb
and
push
pop
sbb
int3
xchg
cmpsb
xchg
sbb
xchg
mov
mov
xchg
push
push
nop
lods
pop
nop
inc
push
imul
cmp
fs
mov
aaa
xchg
ja
mov
pop
xchg
cmpsb
or
xor
mov
or
ret
das
jbe
push
loopne
dec
mov
cs
nopl
jb
jnp
dec
sub
xchg
call
mov
loope
test
lods
out
mov
incl
mov
push
mov
jne
and
or
insl
or
xor
fcmovb
add
xchg
cmpsb
je
rorl
out
mov
and
xor
and
xchg
ljmp
sub
xor
ss
push
dec
mov
lea
xor
inc
push
mov
xchg
or
cmpsl
sub
pop
sbb
mov
ret
sbb
arpl
xchg
test
movsl
cs
cli
rcrl
jg
and
inc
dec
jne
push
leave
aad
rclb
pusha
rorl
loopne
mov
out
std
inc
pop
pop
inc
jmp
mov
adc
sbb
faddl
xor
mov
fimuls
inc
pop
xor
cmp
sub
ret
into
jg
add
mov
xchg
lods
add
jne
push
sbb
push
jmp
fwait
and
xor
or
add
cmpl
inc
orl
inc
dec
and
xchg
jmp
sub
mov
ja
fwait
xchg
fimull
jo
pusha
bound
lods
outsb
or
mov
repz
pop
lcall
shrl
enter
nop
add
xchg
jl
sbb
movl
jmp
adc
repz
dec
add
push
xchg
ss
shlb
xor
mov
aas
jmp
adc
jmp
lds
or
mov
test
scas
mov
cmp
outsb
dec
mov
lods
inc
ret
ret
cwtl
cmp
jle
add
jnp
lods
dec
mov
ljmp
leave
je
add
sbb
aaa
pop
xlat
mov
xchg
mov
add
daa
xchg
call
xor
mov
push
loop
sub
movzwl
lret
mull
or
mov
loopne
pop
push
orl
sbb
pop
inc
enterw
add
sub
add
inc
adc
push
jbe
mov
sub
mov
insb
or
imul
mov
insl
nop
es
mov
add
inc
clc
inc
fmul
pop
lea
cltd
sub
mov
push
orl
mov
adc
adc
shll
jp
or
inc
sbb
rcll
dec
adc
jno
mov
lods
jle
mov
jno
sbb
xchg
je
add
lock
mov
mov
mov
addb
es
and
scas
inc
dec
ds
and
xchg
nop
inc
out
arpl
fmul
inc
call
pop
lret
and
cmp
sub
jmp
cwtl
mov
test
inc
jmp
std
and
sbb
addl
lock
mov
out
cld
hlt
dec
lcall
or
or
lea
addl
mov
add
ret
add
lds
sub
xchg
push
inc
je
and
dec
cmp
mov
aas
push
inc
stos
mov
ja
xchg
xor
jl
jmp
stos
xor
sbb
out
mov
mov
mov
xchg
addb
hlt
sub
lahf
insl
das
sahf
nopl
repz
xchg
sub
sbb
pop
add
or
add
and
adc
pusha
jmp
and
xchg
pushf
mov
aas
addl
pop
mov
les
or
mov
repz
sbb
xchg
or
mov
xor
push
cli
cmp
sub
sbb
or
loopne
or
fistpll
mov
repnz
push
and
pxor
insb
and
notb
mov
cmpb
mov
adc
adc
dec
insl
test
push
inc
jae
pmuludq
stos
out
jnp
jl
adc
mov
das
xor
xchg
sbb
out
sub
aad
outsb
lods
cmp
or
icebp
pop
add
sahf
inc
cmp
jne
or
test
ret
lea
or
xor
cmpsl
filds
loop
lods
xchg
add
cmc
repnz
rcrb
cwtl
and
push
inc
jmp
inc
fcmovnb
sti
lock
push
sti
adc
mov
movsb
jle
jmp
inc
scas
xchg
add
lock
je
imul
cmp
jns
jb
add
dec
jecxz
jmp
rorl
shrl
lahf
push
std
ret
jb
outsl
pop
sub
out
xchg
sub
inc
pop
repnz
mov
xchg
jmp
push
shl
fsubrl
mov
mov
sbbb
repz
ja
popa
and
sub
mov
sub
and
lahf
or
pop
dec
push
or
or
dec
adc
push
add
cmc
fmuls
lahf
in
lock
ret
push
add
movq
sub
add
sbb
mov
mov
dec
pop
mov
cmpl
jns
mov
mov
mov
xchg
mov
or
jno
jp
adc
sub
or
or
push
or
out
roll
je
cltd
mov
rorb
and
sbb
mov
add
mov
jbe
je
jo
cmpb
je
pushf
enter
nop
and
dec
rolb
mov
sbb
into
xor
xchg
sti
and
mov
mov
xchg
mov
jmp
fcoml
jno
or
mov
clc
inc
test
incb
and
pop
data16
or
js
mov
je
aad
adc
dec
faddl
cmp
js
add
outsb
out
add
sub
jg
shrb
or
jle
lods
pop
inc
daa
add
js
mov
cltd
sub
andl
mov
pop
cmc
stos
push
mov
push
andl
and
push
pop
jp
add
sbbl
loope
cs
inc
addr16
jo
pop
sahf
mov
mov
insl
dec
scas
and
xchg
pusha
push
push
jne
push
mov
push
sub
add
mov
inc
dec
mov
or
mov
xchg
jb,pn
in
mov
scas
mov
add
cltd
jo
cmp
ss
les
xlat
out
or
shll
dec
leave
adc
dec
add
sbb
xor
sub
adc
insl
cwtl
push
pop
pop
fs
int
jge
add
xchg
pop
jae
lcall
pop
xor
imul
dec
sub
test
pop
xlat
dec
jo
xor
adc
adc
inc
shrb
mov
ret
pop
or
icebp
inc
or
test
test
js
add
push
cmp
call
scas
adc
je
push
pop
lret
clc
xor
and
jb
xchg
fmuls
sbb
popl
pop
or
test
push
cmp
adc
jmp
cli
inc
sbb
jne
push
push
vpshufhw
cli
into
cmp
test
xor
mov
movsb
test
jo
jae
test
pop
push
lods
sub
push
adc
jmp
icebp
cmpl
add
enter
inc
loopne
mov
arpl
daa
mov
ss
cmp
sbb
jle
les
iret
int3
aam
cmp
test
ret
scas
push
rcll
into
jle
sub
or
pop
inc
adc
xchg
aas
jno
or
add
add
sahf
inc
imul
lds
imul
mov
sub
sub
rorl
and
pop
and
or
gs
pop
push
fwait
mov
shld
inc
add
sub
mov
jmp
cltd
call
pusha
mov
int3
inc
adc
lret
or
jae
ret
fld
and
addl
insb
lods
inc
test
ficomps
add
jne
push
test
das
xchg
xor
xchg
xor
lock
out
cld
mov
or
je
nop
mov
je
daa
insl
xor
aaa
lock
je
imul
or
inc
xor
arpl
cltd
dec
popa
cs
lock
fcmovnu
scas
adc
mov
push
das
and
xor
inc
inc
popl
out
xor
and
inc
rol
dec
idivl
int
or
or
adc
orl
shlb
cmpb
mov
jl
xchg
aad
and
sbb
xor
je
pandn
mov
inc
pop
sub
adc
or
mov
dec
jmp
inc
cmp
js
addb
rolb
ss
inc
dec
daa
dec
inc
mov
push
js
adc
mov
lds
add
fiaddl
jo
cmp
dec
mov
xchg
jb
rorb
std
push
dec
xchg
cmc
rclb
mov
and
mov
push
movsb
shrl
pushf
pop
xorb
jno
andl
in
push
inc
pop
rcrb
sbb
inc
jo
cmpb
je
movsb
lcall
rcpps
mov
loop
or
mov
or
unpcklps
pusha
pop
in
out
pop
jns
mov
lods
and
inc
sbb
sbb
mov
pop
insl
lahf
fildll
and
hlt
hlt
nop
sbb
fucomip
addr16
push
mov
push
cmpsl
cwtl
imul
es
mov
mov
xchg
les
inc
test
jp
inc
add
orl
sub
push
negb
in
mov
addb
aaa
repz
cmp
mov
into
mov
sbb
xchg
cmp
sti
xor
or
xor
add
inc
xlat
lock
dec
pusha
push
sub
xchg
test
cmp
icebp
test
je
push
cs
out
inc
sbb
xchg
mov
lods
in
dec
jmp
mov
pop
add
add
movsb
mov
push
push
or
popf
pop
ret
clc
push
pop
sbb
add
adc
ss
daa
test
fs
mov
leave
fld
dec
xor
pop
in
or
mov
das
lods
xchg
test
jo
add
aaa
inc
addb
cmp
dec
popf
ret
imul
rcl
cmp
inc
sbb
iret
rcll
sahf
js
test
stos
fisubrl
lea
cmc
sub
add
or
push
push
and
and
ljmp
adc
xor
call
in
inc
and
cli
lods
or
cmpsl
and
sti
mov
push
and
loop
add
shlb
push
cld
mov
ss
cli
pop
cmpsb
fwait
cmp
jne
scas
fstpl
or
push
aam
pop
outsb
adcl
adc
sub
dec
cmp
mov
sub
mov
or
push
xchg
sahf
lods
aaa
sbb
push
mov
add
inc
add
dec
adc
or
fists
push
les
insl
jle
push
sbb
fadds
gs
movsl
xor
jmp
in
in
mov
loopne
lock
add
dec
adc
push
adc
push
sub
push
orl
sbb
push
pop
xchg
or
ret
add
fistl
adc
bound
inc
sub
daa
sub
lds
inc
push
test
xchg
pop
inc
xchg
movsl
decb
adc
cs
imul
data16
dec
jecxz
push
sbb
hlt
fildl
xchg
in
in
xorb
mov
push
movsb
sub
inc
jnp
pop
nopl
pop
sbb
jmp
jle
add
ss
xchg
dec
cmpsl
subl
pop
movb
mov
outsl
sub
cmpsl
in
push
xor
inc
mov
fs
scas
jns
das
xchg
mov
pop
daa
mov
fdivs
and
movb
popa
and
add
scas
mov
lock
jmp
mov
mov
dec
push
xchg
pop
cld
mov
cmp
aaa
pop
hlt
dec
jecxz
das
sub
jo
lret
rol
test
dec
xchg
test
loope
jmp
jl
cmp
into
insb
call
lahf
push
enter
jno
xchg
xchg
lret
push
enter
mov
or
test
out
add
adc
mov
ret
and
or
cwtl
mov
loopne
cmp
and
adc
cmpsl
add
xor
add
inc
shlb
mov
cmp
sbb
xchg
push
enter
add
scas
push
pop
mov
dec
inc
add
mov
mov
aaa
lcall
iret
in
das
inc
add
push
cmpb
mov
sbb
xorl
pop
adc
mov
mov
aaa
ret
lock
bound
xchg
jg
repnz
imul
repz
push
hlt
jmp
add
adc
cmp
arpl
xorb
fadds
shll
lods
dec
pusha
aaa
sbb
add
sbb
jge
add
and
mov
jne
adc
dec
sub
jmp
ja
or
jge
addr16
xchg
mov
or
jne
push
xor
in
rcrb
mov
mov
scas
aam
cmpsl
jb
add
lds
dec
inc
cmpsb
fists
jge
mov
cmp
add
out
add
pop
push
mov
push
push
xor
daa
cmpb
xor
loopne
call
inc
or
cmp
in
adc
xchg
jne
add
ds
xchg
cmp
andl
dec
add
mov
inc
mov
in
je
mov
xor
je
jne
push
xor
inc
aam
and
sbb
push
cmpl
movsl
cld
mov
sub
dec
cwtl
cmp
leave
sbb
and
mov
push
push
mov
push
lea
pusha
mov
lds
mov
call
test
aas
inc
xor
jns
pop
ja
cmp
xchg
pusha
clc
cs
cmp
divl
and
push
pop
push
mov
add
cmp
fiaddl
and
xchg
push
pusha
imul
testl
mov
adcl
mov
enter
mov
sub
ret
lahf
mov
jp
push
or
push
mov
mov
dec
inc
xchg
mov
add
jecxz
fucomp
add
sub
sbbb
rcl
enter
xchg
fcoml
and
and
mov
fstpt
cmc
push
mov
adc
mov
mov
shrb
mov
lret
loopne
add
adc
sbb
test
mov
mov
jg
xchg
mov
lea
xor
push
les
push
gs
cs
ljmp
mov
nop
mov
test
fistpll
jle
andb
ljmp
jns
shl
sbb
cs
mov
pop
nop
xor
push
inc
orb
adcl
xor
xor
add
jmp
je
rolb
and
stc
dec
adc
mov
adc
push
and
lock
push
std
dec
mov
push
push
add
sbb
and
sbb
vpshlw
dec
or
dec
and
fisttps
js
and
sub
bound
push
inc
cmp
push
lock
pusha
gs
jbe
push
push
xorl
fisttpl
arpl
stos
stos
push
in
push
xchg
faddl
add
ret
dec
mov
int3
or
push
sbb
popa
cmp
or
cmp
loop
fidivs
movb
sub
or
cmp
xor
pop
lcall
lds
push
cld
jge
sbb
int
push
and
xor
cmp
js
adc
out
or
inc
pushl
negl
cli
pushf
xor
cmp
add
pop
out
mov
scas
pushw
pop
test
and
aaa
jle
negb
cmp
movsb
push
jecxz
pop
fcomps
imul
sarl
enter
aas
lds
ds
arpl
jmp
dec
cmp
and
xchg
dec
pop
orb
sbb
popa
aaa
cmp
movsb
test
addl
loop
and
fdivl
icebp
jg
dec
jne
pextrw
rcpps
stc
sbb
inc
repz
fisubrl
mov
mov
inc
dec
mov
push
loop
insb
bound
fidivrl
and
scas
inc
mov
pop
push
into
lret
cmpsb
xor
sti
cmp
sub
mov
mov
aam
xchg
xor
fadds
or
dec
mov
mov
xchg
jae
and
cmp
js
shlb
xchg
cmovns
test
jle
mov
pop
ss
add
jo
push
xchg
dec
rorb
or
sbb
mull
push
xor
jns
pop
test
jmp
sub
lock
sub
addl
addb
sub
jp
das
dec
adc
or
or
inc
jmp
movl
and
jg
lock
sbb
punpckhdq
pop
sub
cmp
cli
add
add
push
adc
cmpl
add
pop
inc
jo
les
jb
rclb
push
loopne
subb
bound
dec
jg
fmuls
stos
push
call
cmp
call
ljmp
hlt
je
sbbb
aam
dec
mov
mov
hlt
test
rorb
cmp
test
loopne
cltd
sarl
inc
lcall
outsl
fiadds
fists
add
cmp
inc
or
dec
push
out
shlb
ficomps
mov
push
or
pushl
inc
push
xor
sbb
jbe
adc
cmp
cmpsb
push
adc
sarl
incl
pop
jmp
add
jb
or
outsb
nop
pop
mov
aas
or
mov
adc
mov
sbb
add
clc
testl
into
add
or
pop
inc
push
es
pop
dec
push
sbb
pushf
pop
test
add
adc
iret
adc
ss
jns
test
mov
pop
clc
insb
or
mov
push
jne
sti
jo
adcl
and
and
and
xor
xchg
repz
or
test
aad
sub
sbb
adc
mov
pop
add
jge
pop
test
adc
dec
xchg
cmp
inc
aam
adc
insb
adc
add
or
and
xchg
dec
sub
xchg
inc
push
inc
lcall
lea
push
in
pop
cmp
sbb
sub
adcl
xchg
push
jecxz
inc
movl
xor
adc
ret
vucomiss
js
inc
arpl
je
xorb
push
push
stos
cli
add
jb
pop
cld
mov
push
popf
out
mov
cmp
mov
aas
in
mov
hlt
out
addb
and
push
xor
addb
push
cmpsb
cmpl
or
je
outsb
xchg
xor
inc
push
ss
inc
or
adc
xor
push
and
mov
or
jmp
lret
jne
inc
andb
test
push
inc
sub
xchg
int
aad
lock
xor
test
sbb
mov
test
nop
cwtl
cmp
mov
add
cmp
inc
xchg
lock
mov
jg
les
dec
sbb
add
sub
xchg
xchg
pop
notl
aam
js
cmp
dec
inc
or
loopne
mov
daa
mov
jbe
xchg
xor
xchg
cmp
and
mov
sbb
ja
mov
cmpl
xchg
hlt
xchg
divb
add
test
mov
mov
jnp
or
lods
add
push
ret
mov
dec
je
push
dec
imul
sahf
sbb
invlpg
loopne
aaa
xchg
loope
push
jg
pop
pusha
dec
xor
roll
dec
dec
rcrb
arpl
sbb
pop
or
adc
pop
cmp
mov
xor
inc
and
out
mov
shlb
orb
inc
mov
fistpll
pop
or
test
pop
or
pop
or
or
pusha
in
xchg
add
movsb
jne
sbb
dec
add
rolb
xor
push
jne
xor
daa
push
arpl
push
sbb
pop
cmp
dec
mov
jg
or
pop
test
mov
and
jmp
flds
sub
or
and
mov
dec
xor
and
lret
gs
xchg
ljmp
xorl
js
jnp
mov
sarb
pop
aaa
push
fs
gs
test
sbb
jle
testb
dec
push
ds
fs
or
jle
mov
ror
mov
or
jge
out
adc
add
dec
cmp
push
insb
xlat
add
inc
xor
lahf
movsb
outsl
or
packssdw
and
mov
jne
sub
xchg
lds
adc
dec
lar
cmp
lea
mov
js
jl
in
adc
adc
xor
call
sub
addr16
xchg
adc
inc
push
ds
arpl
lahf
xor
cmp
add
cmp
cmpb
je
aad
xlat
dec
sbb
test
nop
mov
sahf
movsb
imul
mov
inc
and
scas
sbb
mov
push
ss
cmp
dec
mov
punpcklbw
daa
out
jae
int
xchg
cmpsl
das
mov
in
or
xlat
add
repnz
ret
or
adc
dec
adc
jb
lcall
and
and
test
push
icebp
sub
jo
adc
sarl
xor
push
sbbl
das
es
sub
adc
adc
push
adc
push
inc
inc
xor
jne
sub
dec
mov
mov
rolb
cmp
push
add
loop
loop
imul
jno
inc
iret
xor
enter
test
adc
mov
inc
cld
inc
jmp
jne
mov
xchg
sti
mov
rolb
hlt
movsl
in
xchg
lret
iret
mov
loop
mov
pop
mov
je
sbb
pop
pavgb
adc
jne
test
sbb
movsb
out
ja
lock
daa
sub
or
or
leave
rcrb
and
shl
cltd
mov
jns
sti
or
inc
aas
adc
or
out
inc
inc
xor
sub
jge
ret
jle
aas
add
movsb
imul
jmp
pop
cwtl
hlt
lahf
imul
push
cld
xor
push
sub
into
call
fsubrs
inc
push
and
rolb
and
imul
call
popf
xchg
lock
loop
or
push
stc
pop
loope
mov
xchg
loop
dec
fs
jae
push
lods
and
adc
loopne
pop
push
movsb
cmc
mov
adc
pop
adc
adc
jne
inc
lods
or
sbb
xor
xchg
pop
movsl
out
add
bound
push
xchg
pop
mov
inc
sbbb
add
cmpsl
add
aaa
mov
push
lods
test
mov
mov
push
mov
movsb
push
push
test
inc
lods
cmp
inc
mov
stos
sub
push
test
dec
scas
sub
sub
push
in
sub
add
xor
mov
rolb
ret
fisubrl
adc
clc
out
rcrb
xor
xchg
in
or
call
gs
mov
and
int3
push
push
mov
popf
sbb
mov
jmp
inc
cwtl
mov
cmp
adcl
mov
sar
mov
mov
push
repnz
shlb
movsb
sub
cli
add
jb
or
push
movb
scas
fwait
mov
add
cmp
ja
xor
aad
mov
xor
loop
lret
inc
inc
pushf
or
sub
ss
pop
add
or
push
add
push
mov
mov
dec
mov
inc
adc
ss
mov
dec
cmp
mov
pop
add
out
fldt
sub
mov
mov
pop
jmp
inc
and
xchg
pop
gs
sbb
jge
adc
inc
dec
dec
or
loopne
adc
outsl
das
cs
mov
adc
and
jle
adc
cmp
add
add
test
in
dec
sub
mov
scas
sbb
and
imul
mov
cs
mov
pop
mov
and
into
ss
adc
repnz
jmp
sub
mov
jl
sahf
mov
loopne
pusha
dec
xor
jle
sbb
push
mov
in
push
fsubr
mov
rorl
or
dec
fadds
fdivrs
enter
movsb
imul
dec
les
sub
pop
sbb
push
add
add
add
fld
push
fmull
inc
movsb
ds
pop
add
xor
je
inc
daa
or
out
imul
pop
add
ljmp
pop
inc
sbb
and
mov
xchg
jge
cs
dec
pop
enter
adc
cs
sub
mov
jb
sbb
cmpsl
push
leave
mov
fsubrs
insb
sbb
mov
fisttpl
adc
mov
xchg
push
push
les
inc
pop
xor
bound
aas
sub
mov
push
out
push
or
pusha
sub
jmp
or
pusha
andb
jmp
dec
sub
inc
sub
mov
test
in
jmp
add
lds
lea
push
ret
jmp
mov
in
and
sub
jle
pusha
inc
dec
or
clc
pop
xchg
enter
add
sub
xchg
xor
jmp
sub
test
fsubrl
xchg
cmpsb
cmp
hlt
add
mov
add
mov
icebp
push
inc
and
adc
add
pusha
xchg
adc
mov
sub
popa
jge
lcall
push
nop
out
sbb
mov
neg
sub
and
push
adc
add
pop
add
popa
mov
enter
pop
cs
inc
pinsrw
lahf
gs
insb
xrelease
jge
and
hlt
imul
mov
dec
sub
aaa
mov
imul
leave
aam
test
dec
mov
add
inc
sti
mov
repz
dec
icebp
aam
jge
mov
imul
aam
loope
or
xor
and
mov
pop
jno
mov
cmc
push
arpl
es
arpl
add
or
pop
fdiv
movb
adc
cmp
adc
dec
movsl
jb
push
or
adc
xchg
test
in
hlt
dec
jo
xchg
or
loop
and
sbb
xor
add
dec
fs
jg
addb
gs
es
fs
je
loope
cltd
sub
aam
stos
dec
dec
xor
and
cs
neg
xchg
sub
mov
or
lock
pop
ret
add
pop
push
xchg
cvtps2pi
xchg
and
sub
popa
push
test
subb
fs
stc
psraw
sbbl
add
lods
jnp
gs
pop
insl
cmp
pop
xchg
test
cmpsl
inc
cmp
jg
pop
mov
sub
jae
in
sbb
pushf
add
push
inc
or
es
clc
mov
adc
ret
or
or
call
hlt
aam
adc
add
sub
inc
fcmovne
and
push
inc
push
mov
mov
js
sbb
shlb
sbb
adc
aam
add
dec
or
shlb
movsl
mov
outsb
sbb
sub
pusha
mov
adc
nop
je
outsl
sub
addb
xchg
rolb
xor
and
nop
sbb
lret
lcall
outsb
int3
rorb
int3
test
push
imul
sub
fldl
jecxz
cltd
test
dec
clc
rolb
pop
movl
in
stc
fucomp
orl
or
out
jb
hlt
add
mov
xorl
adc
sub
xchg
dec
lea
addl
outsl
xchg
mov
ret
cmp
popa
lock
or
add
lret
addl
dec
mov
cmp
out
sub
inc
sub
add
cmpl
push
sahf
xor
sub
add
jb
sub
dec
add
jbe
push
or
mov
mov
xchg
inc
fs
out
jno
add
cmpb
enter
mov
mov
pop
in
push
das
xchg
arpl
pop
adc
fdivp
xlat
and
pop
pop
dec
repnz
xor
mov
insl
xor
xor
call
loopne
fs
addb
jle
test
xor
mov
add
xorb
lret
dec
and
sbb
call
sbb
call
insb
fistl
jle
pop
sub
hlt
jp
insl
ficoml
mov
fstl
ss
popf
sbb
inc
lods
adc
cmpsl
cmc
lahf
sbb
cmp
pop
pop
mov
cmp
inc
xchg
mov
jno
imul
enter
pop
das
sbb
add
add
sub
test
mov
movsl
shr
adc
loope
or
movsb
cmp
out
jo
jl
push
xor
mov
dec
loopne
sub
and
mov
popa
add
inc
and
mov
xchg
jb
adc
lret
add
popa
test
inc
iret
push
pop
mov
nop
push
sbb
xchg
mov
or
stc
xchg
dec
sub
int
dec
jnp
dec
mov
shrb
psubsw
mov
daa
cmp
sub
inc
add
sbb
ret
lods
xor
daa
sbb
ret
adc
test
movsl
dec
mov
lock
pop
or
mov
and
call
sbb
jo
in
insb
test
popa
pop
pop
cs
xor
lahf
into
adc
fucom
nop
lods
pop
add
push
movsb
jne
xchg
or
icebp
lret
mov
movswl
add
pop
mov
sub
adc
xor
je
nop
jbe
adc
mov
cmp
in
jne
jecxz
sub
lea
jmp
jno
flds
lahf
ret
jp
jae
mov
notl
xlat
test
xor
jl
rclb
push
and
dec
or
pop
pop
cmp
in
add
add
les
cmpb
push
jnp
and
push
in
fistpll
mov
cmpb
rorb
xor
mov
push
push
jbe
stos
pop
in
fwait
push
in
daa
mov
dec
xchg
or
inc
sahf
jl
cmp
ja
je
push
jle
mov
mov
test
sub
loope
cmc
loope
roll
sub
adc
js
das
test
adc
xor
sub
das
pop
and
mov
push
fnstcw
jae
pop
inc
call
sbb
addr16
aam
dec
adc
add
and
cltd
push
lahf
das
shlb
int3
pop
push
xchg
outsb
imul
and
xchg
pop
pop
fwait
cmp
pushf
or
adc
lods
push
cmp
icebp
push
mov
inc
adc
loopne
mov
std
fcomps
pop
adc
pop
test
add
icebp
adc
ret
cmp
andb
lret
out
aaa
sarb
inc
mov
pop
enter
inc
dec
inc
std
enter
push
xor
inc
lods
mov
test
xchg
push
or
test
ljmp
mov
cld
add
pop
adc
sub
out
mov
testl
jp
psubusb
mov
test
adc
and
outsl
sbb
jbe
mov
jb
add
clc
outsl
mov
in
push
or
or
imul
jg
add
add
incl
and
outsb
sbb
je
push
in
mov
cmp
int3
pushf
outsb
mov
cmp
mov
sbb
gs
ret
mov
inc
mov
mov
leave
mov
add
adc
push
test
gs
ss
enter
adc
mov
dec
add
xor
jno,pt
loope
dec
push
loope
pushf
sbb
xor
sbb
cli
and
rcrb
mov
xorl
imul
fs
push
mov
jp
pop
popa
mov
sbb
dec
jne
into
inc
inc
add
add
or
cmp
mov
test
mov
lods
loopne
adc
insb
pop
xchg
sub
jmp
imul
push
iret
adc
fs
mov
pop
pop
add
and
cwtl
pop
dec
loopne
out
mov
inc
adc
mov
mov
fisubl
mov
dec
add
pushf
mov
clc
pop
mov
push
cmp
int
cmc
outsb
or
fisttpl
daa
or
and
push
out
inc
jecxz
lods
push
out
cmp
test
add
dec
add
or
das
inc
aad
and
or
cmp
mov
scas
hlt
out
mov
dec
loopne
xchg
push
mov
mov
sub
jns
jecxz
sub
add
fldenv
adc
adc
cwtl
mov
jecxz
adc
lret
roll
add
mov
dec
adc
add
pop
bound
push
push
ret
push
les
dec
nop
in
popf
jno
sbb
jp
push
test
push
pop
push
adc
push
push
fdivl
fdivrs
lock
cmp
ljmp
fucomip
test
pop
sbb
pop
test
cmp
push
jne
push
pushf
sub
repz
and
outsl
cmp
push
inc
adc
repnz
fcoml
jl
jp
cmp
je
clc
loope
fs
add
adc
dec
push
mov
lcall
imul
jnp
in
jp
js
shll
xchg
add
push
fisubrl
bound
mov
adc
out
pop
sub
inc
gs
loopne
mov
and
inc
lret
ret
aam
not
cmpsb
mov
inc
cmpsb
pop
or
and
into
inc
push
xor
insb
cltd
cs
jecxz
loopne
mov
mov
add
dec
and
mov
dec
fistl
jl
daa
mov
pop
adc
jmp
data16
pop
mov
test
mov
pop
daa
and
sub
pop
sbb
sbb
and
mov
mov
push
loop
out
call
and
cmp
cmp
or
and
aad
cmp
cmp
jno
aad
popa
sbb
cmpl
mov
mov
add
dec
pop
adc
ljmp
pop
repnz
dec
xchg
inc
add
jg
or
jmp
ds
pop
nop
mov
in
push
movsl
out
push
mov
lahf
pop
imul
sub
mov
dec
sti
dec
cmp
xor
dec
xchg
push
call
cs
cmp
sbb
aad
pop
pushf
push
xor
xchg
xor
sbb
xchg
cli
fdivs
xor
dec
jne
rol
jbe
aas
loope
addl
ret
addl
incl
push
dec
insb
test
pop
or
or
mov
nop
iret
lcall
mov
int
aad
ret
adc
or
and
mov
aaa
or
adc
push
sbb
or
das
inc
roll
fs
clc
pop
inc
negl
hlt
push
roll
push
aam
push
ret
nop
pop
test
loope
xchg
fdivrs
pop
push
add
ret
ja
inc
xor
icebp
and
repnz
mov
rcrb
inc
ja
daa
fidivl
and
mov
inc
scas
cmp
adc
hlt
mov
out
divl
add
add
int3
add
cmpb
inc
add
cwtl
cmp
dec
mov
fs
mov
sbbb
adc
add
call
add
bound
inc
loope
xor
lods
inc
pusha
jbe
or
and
adc
add
push
or
xchg
mov
pop
rorb
and
lock
and
fsts
dec
pop
aad
lret
xor
inc
adc
push
add
icebp
and
test
hlt
je
fsubrs
aas
pop
test
push
or
pushl
cmp
loope
ficomps
inc
sbb
xor
sahf
or
jmp
cwtl
int
in
add
mov
dec
dec
test
push
and
and
cmp
out
aaa
fmuls
jnp
push
into
push
mov
inc
dec
leave
add
idivl
add
sbb
push
lock
jo
mov
insb
sti
add
cmp
sbb
notl
push
mov
repnz
imul
push
xchg
dec
pop
rclb
mov
adcb
faddl
push
push
scas
daa
daa
or
inc
into
ret
repz
movl
mov
inc
and
pop
das
rolb
add
jg
mov
push
inc
add
add
jns
jmp
xor
or
sbb
jge
dec
inc
adc
movsb
fs
mov
mov
loopne
lds
sub
aas
push
xor
pusha
inc
lds
pop
or
sbb
mov
pusha
xchg
sbb
outsl
gs
loope
loopne
aas
pop
adc
push
mov
ja
jo
int3
shll
js
jmp
add
daa
movsb
xor
cmp
mov
bound
test
daa
xchg
adc
mov
orb
loopne
or
jne
sbb
sub
xor
sub
pop
cmp
test
popa
mov
fs
rcrl
sbb
pop
ja
out
inc
inc
and
sbb
adcl
out
mov
enter
std
adc
and
jp
xor
flds
xor
jmp
inc
add
mov
lea
or
test
jl
xchg
add
xchg
jle
mov
pushf
xor
xchg
scas
jge
xor
out
push
fwait
sub
add
lods
aam
std
int3
xorb
jb
cmp
or
cmp
rclb
pusha
add
mov
mov
clc
negb
adc
fdivs
pushf
and
add
insb
sbb
xchg
jg
or
pop
fwait
jg
pop
cmp
dec
cmp
ss
aaa
inc
mov
loop
add
rorb
or
push
sti
jmp
cmc
mov
jne
mov
mov
repz
push
sbb
lahf
mov
dec
xor
dec
repnz
adc
inc
test
test
push
inc
xchg
xchg
jno
shlb
mov
mov
jb
lods
lods
push
leave
pop
mov
inc
ret
add
push
adc
add
lahf
xchg
into
or
add
pop
out
add
popa
add
or
sbb
fcompl
sbb
in
aad
add
cmp
rcrl
lods
movsb
pop
xchg
dec
in
ret
lock
push
mov
and
sbb
push
daa
jne
insl
and
pop
xchg
sbb
popa
pop
icebp
inc
adc
and
and
push
jle
ds
dec
jnp
test
lods
aaa
dec
and
jno
jns
cli
cmp
or
aaa
add
add
pop
dec
enter
icebp
inc
mov
les
icebp
rcrl
jge
push
push
clc
dec
sbb
clc
push
dec
fs
pop
mov
pop
inc
sbb
lock
xchg
add
cmp
lock
add
jne
sub
mov
or
test
and
push
xchg
xchg
icebp
inc
cmp
nop
dec
push
fs
push
and
jp
roll
pop
mov
mov
pop
mov
cmp
xchg
cwtl
sub
fs
jmp
pop
add
push
jae
or
inc
sub
cltd
out
or
push
xor
sbb
movsb
sti
in
add
test
adc
sub
loopne
cmpsb
fincstp
pushf
addb
test
repz
stc
sbb
fdivr
es
movsl
cmp
dec
jg
jecxz
out
std
push
cltd
nop
fimull
js
movsb
cmp
loope
add
mov
loope
mov
sbb
jbe
sub
and
gs
out
scas
xor
test
lods
mov
push
cmp
sbb
mov
adc
or
adcb
insb
cmp
inc
lret
dec
and
test
push
aaa
sub
test
mov
mov
inc
jo
dec
pop
sbb
add
dec
push
out
popl
sbb
test
inc
mov
or
jmp
push
insb
out
pop
dec
mov
mov
or
ret
iret
movsb
cmp
cltd
and
mov
es
or
scas
dec
sub
ja
mov
shl
dec
aad
cld
std
pop
add
loopne
cmc
xor
sub
inc
inc
inc
and
and
cwtl
or
mov
adc
add
push
add
cmp
sub
ret
lods
adc
clc
in
add
sub
adc
and
or
cli
pop
in
sbbb
lcall
rolb
jp
cmpb
mov
dec
sub
add
dec
sub
lods
add
mov
fstps
mov
test
mov
ret
ret
adc
cmp
lods
and
mov
insb
andl
cwtl
xorb
xor
add
and
sbb
sub
push
push
or
mov
pop
loope
sub
shrl
pop
or
pop
pop
mov
das
add
jnp
push
outsl
sub
add
jae
dec
mov
add
push
adc
and
jl
sar
imul
jbe
insl
rcrl
xor
xor
add
push
jne
add
es
xor
xchg
or
iret
inc
mov
mov
fwait
push
xchg
pop
or
pusha
rclb
es
push
into
xchg
pop
push
je
cmp
outsl
sbb
xchg
pop
sahf
testb
sbb
push
mov
mov
mov
xchg
or
inc
cmc
icebp
cmp
xchg
and
xchg
push
or
and
cmp
sbb
dec
dec
ljmp
jne
or
stc
fldt
mov
sub
mov
rclb
xchg
adc
push
jl
hlt
lock
pusha
and
dec
push
add
mov
or
add
repz
xchg
sub
or
or
clc
lret
push
pop
mov
pop
push
je
pop
sarb
and
and
push
xchg
push
movl
jmp
mov
push
mov
lret
jnp
push
add
pop
divl
adc
int3
xchg
and
test
test
pusha
fs
sbb
fidivrs
call
enter
dec
jae
pop
cs
push
pop
or
js
sub
out
sbb
imul
pop
pop
in
int3
sbb
jmp
pop
inc
dec
xor
sbb
or
shrb
shlb
roll
das
and
addl
in
add
xchg
rclb
mov
xchg
cmpl
adc
pushf
mov
dec
or
das
int
movsl
mov
sub
enter
sbb
push
push
ret
nop
add
or
sahf
loope
add
adc
lret
sbb
mov
std
mov
outsb
and
push
and
jno
lds
faddl
jle
push
lock
or
add
inc
push
insb
push
cs
xor
mov
push
fldt
push
inc
dec
fidivrs
sahf
fildl
dec
inc
adc
sbb
inc
mov
adc
push
out
xor
add
pop
xor
or
jle
icebp
sub
lods
xchg
add
mov
push
inc
xchg
push
pushf
cmp
mov
out
add
bound
cs
outsb
and
js
xchg
mov
pop
addr16
adc
cmp
push
pop
inc
mov
repz
mov
or
push
fildl
outsb
leave
dec
outsl
or
in
in
and
add
addl
pop
dec
xchg
push
sbb
pusha
adc
sub
lods
jae
into
inc
imul
sbb
pusha
adc
pop
xor
sbb
sbbl
mov
push
push
inc
and
xor
push
mov
jmp
or
sub
adc
sahf
inc
add
rolb
pop
mov
icebp
or
pop
loop
jmp
jne
test
adcl
mov
dec
jae
push
add
test
adc
loope
sbb
push
lods
dec
mov
or
out
add
mov
push
sub
fistpl
addb
lret
mov
test
cmpsb
xchg
push
xchg
and
push
pop
adc
add
xor
icebp
jne
push
pusha
orl
daa
mov
pop
push
or
add
push
add
ja,pn
mov
enter
sub
push
add
pop
repz
ficoml
pusha
jb
jp
and
push
push
mov
daa
push
arpl
and
and
pop
mov
inc
xorb
and
fs
es
or
retw
outsb
or
pusha
cmc
mov
mov
cmc
mov
jl
xchg
test
daa
add
mov
or
lods
mov
lods
inc
insl
xchg
cli
or
adc
repz
push
mov
inc
jae
xor
push
adc
mov
sti
mov
sti
stc
mov
lret
inc
enter
insb
push
and
arpl
cld
sbb
pop
cld
je
popa
cmpps
adc
inc
adc
and
in
push
jp
arpl
aad
mov
and
mov
gs
setl
mov
lcall
xchg
or
inc
inc
add
fildl
pop
stos
add
push
je
push
std
pop
xchg
and
push
jle
push
pusha
or
xchg
adc
sbb
rolb
fldl
mov
or
rcrl
push
xor
lock
jnp
dec
loopne
ss
ss
es
dec
lods
mov
push
lahf
test
jbe
mov
jnp
scas
adc
adc
and
mov
pop
js
sbb
sub
shrl
adc
push
jno
xor
adc
adc
pop
and
push
cmp
xor
mov
shlb
mov
pop
aas
aad
fdivrl
pop
adc
movsb
and
dec
or
insb
or
jbe
add
sub
sbb
pop
cmp
sub
push
adc
push
and
mov
jae
jbe
mov
pop
pop
and
in
cltd
pop
jmp
mov
test
or
adc
inc
lret
aam
lea
das
fadds
or
inc
pop
xchg
stos
loope
insl
push
inc
rolb
incl
mov
lret
fistps
mov
jmp
adc
push
lods
add
mov
jo
xchg
push
or
mov
sbb
data16
cmp
ret
or
or
dec
fcoms
mov
nop
or
add
xchg
pop
ss
sti
adc
cmp
jl
or
pop
repz
mov
pop
mov
sub
jg
test
add
dec
sbb
push
xor
add
add
cmp
ss
cmpsl
cltd
add
mov
add
mov
xor
test
inc
sbb
and
lret
cwtl
add
fnstcw
xor
sub
add
jne
cmp
aaa
dec
in
loope
sbb
jp
fsubrl
pusha
outsb
pop
aas
xor
cmp
fists
loopne
xor
rcrb
mov
pop
push
test
push
pop
fcoml
cmp
leave
mov
push
lock
dec
nop
push
cltd
inc
add
sbb
icebp
popf
hlt
xchg
sbb
outsl
mov
jne
xor
sub
adc
mov
dec
jecxz
cmp
scas
xchg
movsl
adc
movsb
fisubrl
in
sbb
or
rcl
push
sarl
adc
fidivrl
push
sti
leave
lcall
push
andl
jno
add
lods
jno
xor
and
test
ret
cmp
and
sbb
adc
insl
add
jge
lret
push
adc
mov
jno
cmp
pop
popa
xor
inc
add
push
sub
sub
inc
push
or
and
add
divl
rorb
mov
stos
pop
gs
lods
inc
das
and
shlb
push
xor
lret
push
jo
movl
cld
jg
pop
xchg
loopne
adc
stc
cltd
fists
pop
js
movsl
movsl
bound
and
loopne
push
lods
repz
inc
loopne
jne
lods
lret
inc
inc
inc
bnd
lea
jb
aaa
cwtl
addb
rolb
lea
ret
jmp
push
xor
pop
cld
jno
shlb
dec
add
push
repnz
ret
sbb
rorb
dec
mov
fistl
sbb
or
stc
test
jg
adc
insb
ret
mov
jge
inc
or
fdivs
xchg
pop
adc
popa
into
rcrb
outsl
bound
js
inc
jne
leave
clc
mov
push
popa
andb
cmpl
mov
fildl
pop
and
pop
push
sub
push
pop
pop
dec
fisttps
lea
xchg
push
ret
insb
mov
push
aad
pop
lea
sahf
mov
frstor
pop
add
push
rorl
adc
and
push
popa
mov
lods
or
in
jmp
adc
inc
in
cmp
and
jmp
cwtl
lcall
add
shrl
pop
in
lds
fwait
adc
sbb
pop
or
cmp
sbb
pop
and
push
pop
lret
cmp
cmp
pop
les
cmp
jb
jmp
fbld
dec
ja
jnp
mov
sub
test
js
movsb
jb
xchg
nop
cwtl
nop
lret
movsb
pushf
mov
mov
dec
in
test
lods
add
xor
dec
inc
imul
fists
sub
addr16
icebp
daa
pop
ja
dec
dec
push
stos
dec
dec
inc
pop
sub
pop
dec
push
inc
cmp
adc
pop
push
gs
mov
mov
mov
add
movsl
nop
out
jne
das
push
pop
cmpsl
test
jo
mov
shll
sub
dec
inc
in
inc
out
ss
sub
inc
xchg
dec
jae
pop
mov
pop
les
fidivl
fs
sbb
push
mov
add
and
pop
shrl
xchg
xchg
adc
aas
add
mov
jle
cmc
mov
int
or
or
mov
sbb
cli
sahf
jecxz
mov
mov
add
in
popf
or
jecxz
adc
mov
xor
nop
popa
fwait
and
add
and
hlt
sub
loop
ret
shrb
push
add
or
mov
cmp
adc
xor
addr16
pop
cmp
dec
sbb
fldt
xor
je
outsb
xchg
xor
and
loopne
js
xchg
mov
mov
repnz
or
mov
xor
sbb
cmp
daa
popa
inc
rcrl
sbb
pusha
fs
or
xor
inc
mov
fidivrs
cmp
add
shlb
and
or
cmp
add
inc
sti
fwait
insb
or
xor
clc
mov
movsb
jae
mov
out
les
imul
xor
adcl
loope
mov
enter
pop
fldt
dec
push
enter
mov
sub
xchg
iret
xor
xor
aas
loopne
fcmovne
xor
pop
movsb
mov
or
sbb
push
push
add
pop
jno
pop
es
adc
inc
mov
mov
insl
movsl
test
add
xor
inc
mov
xlat
jae
sbb
das
aaa
ja
outsb
add
xchg
scas
pop
and
lret
dec
push
jne
mov
add
push
adc
loopne
mov
push
jg
add
add
shrb
add
pop
nop
add
jae
repnz
inc
and
ja
xchg
pushl
pushf
xchg
es
xchg
xor
jmp
xor
fs
imul
insb
leave
das
add
popa
sbb
jnp
call
clc
pusha
cmp
sbb
mov
dec
jl
pusha
je
inc
add
pop
add
enter
adc
push
rolb
daa
pop
out
fsubp
add
clc
out
repz
cwtl
push
leave
add
imull
xchg
or
popa
or
pop
cmp
in
pusha
xchg
xor
rclb
dec
stos
bound
push
and
cs
pop
fs
lods
inc
pushf
movsb
icebp
icebp
cmp
xlat
or
shrb
inc
into
sahf
mov
mov
push
jl
inc
jmp
push
and
hlt
nop
add
add
or
je
mov
and
dec
std
fimull
and
outsb
repz
xor
shlb
push
js
jl
adc
jo
popa
lret
lods
aas
pop
sub
lea
cmp
ret
push
sub
pop
cmp
pop
dec
enter
jns
add
sub
and
mov
nop
pop
add
sub
cwtl
jp
sbb
cmovno
push
fs
inc
push
jns
nop
das
ja
fs
mov
xor
sub
fs
mov
add
out
jo
ret
loopne
push
cwtl
or
jecxz
mov
sub
dec
cmp
and
lods
dec
xlat
aam
cld
jl
push
add
dec
sbb
sbb
push
cmp
mov
jmp
and
cmp
fcmovnb
push
jo
mov
xchg
cwtl
pushf
mov
dec
movl
mov
test
inc
dec
stos
shrb
or
movsb
and
cmpsb
pop
imul
xor
loop
ds
aaa
cs
mov
lcall
sbb
mov
imul
nop
mov
pop
insb
add
push
mov
pop
leave
aas
repz
mov
pop
mov
popa
mov
push
daa
mov
push
lea
or
pop
xchg
pop
pop
jno
sbb
iret
pop
add
lret
xchg
sub
leave
add
dec
iret
cwtl
pop
add
sbb
imul
movsb
jnp
sub
loopne
or
ret
dec
xor
add
sbb
sbb
ficoml
mov
insb
int
mov
and
int
inc
enter
inc
adc
mov
xor
xor
lea
sub
clc
push
and
int
add
add
dec
aaa
inc
scas
xchg
adc
les
ja
cmc
add
xor
aam
cmp
in
add
and
inc
mov
insb
sbb
lcall
mov
fsts
les
add
mov
mov
pop
cmp
or
cmp
sahf
adc
pop
mov
adc
jge
inc
shll
cmp
jne
dec
jecxz
sub
sub
pop
sub
jle
mov
sbb
sub
add
xchg
cmp
addl
pop
enter
xlat
mov
ja
test
dec
pusha
xchg
dec
adc
pusha
sub
imul
xchg
adc
sub
adc
adc
mov
out
xchg
xor
lret
pop
in
cld
or
jbe
data16
jae
test
stc
push
dec
or
add
sub
cmp
scas
pop
and
adc
or
icebp
and
std
jmp
dec
sbb
xor
cmp
fcomp
pusha
inc
mov
mov
mov
mov
in
popw
aas
push
push
imul
lds
push
sbb
daa
adc
pop
and
or
pop
mov
add
or
push
add
add
xchg
popf
mov
dec
loopne
jbe
nop
add
mov
push
push
adc
adcl
fnstenv
je
incb
mov
ret
imul
lods
or
mov
imul
sub
sub
test
fimull
inc
sbb
dec
jae
add
xchg
mov
xor
inc
dec
or
cmp
or
cmp
cli
xor
sbb
xor
xchg
xchg
fwait
lcall
scas
in
ds
jo
cmp
scas
fmull
mov
add
fildll
sbb
add
adc
push
dec
xor
pop
imul
popf
push
enter
add
inc
mov
adc
lret
dec
jne
test
daa
inc
jle
out
adc
adc
dec
and
adc
fisubrs
test
mov
cld
je
lds
or
insb
xor
loop
dec
popa
rol
repnz
daa
arpl
movsb
push
xchg
lret
push
pop
xchg
outsb
cmpsl
cmp
mov
loop
or
ror
cli
je
inc
and
push
js
add
nop
sub
xor
setl
into
dec
lods
xor
push
mov
adc
aad
push
xor
leave
jmp
int
test
add
mov
aas
test
sarb
jg
xor
inc
jb
push
add
iret
je
in
addb
jns
xorl
xchg
dec
xor
stc
sahf
fldt
or
jo
jg
jne
andb
call
movsb
loopne
sub
inc
mov
sti
push
dec
shll
test
mov
into
jne
cmp
cwtl
add
pop
sar
ret
adc
adc
pop
push
add
adc
out
cmp
movsb
rorl
lods
orl
pop
dec
push
mov
inc
dec
rorb
cmpb
jg
sbb
or
bound
push
je
or
mov
pop
shlb
dec
mov
repnz
pop
ja
sbb
jns
adcl
aaa
xchg
movl
jg
roll
shl
mov
xlat
ret
movl
js
mov
pop
cmpb
inc
xchg
xchg
es
xchg
sbb
or
adc
enter
add
insl
mov
sub
outsb
and
jae
xor
pop
lds
test
lea
pusha
add
dec
setnp
jp
or
add
jle
je
and
add
add
mov
pop
pop
fs
or
in
adc
add
pusha
enter
jge
fldl
cmpsl
sub
add
cmp
fs
mov
and
lods
pop
imul
jl
data16
or
sbb
pop
xor
out
sub
xlat
pop
mov
xchg
out
movups
cli
mov
lock
fmull
push
in
adc
xchg
movsb
pop
pop
sub
inc
imul
aaa
pop
xor
fstp
movsb
push
push
adcb
mov
or
mov
fst
fistl
mov
push
loope
popl
repz
sub
xor
inc
inc
inc
scas
push
mov
sbb
imul
mul
mov
cs
insl
mov
xor
je
sbb
test
jns
and
bound
fwait
push
jp
clc
xchg
pusha
jl
cmp
cmpb
sub
and
insl
jnp
std
movb
mov
pop
rcrb
add
inc
sub
push
jne
dec
dec
sub
or
pusha
pop
adc
lcall
in
add
adc
out
roll
loopne
call
pop
cli
add
cmp
or
xor
cmp
inc
add
add
nop
add
jl,pt
movsb
subb
jmp
sub
sub
loope
test
lods
shl
movsl
in
xor
aas
or
dec
push
mov
fdivl
mov
and
dec
jge
push
stos
pusha
repz
loope
in
push
pop
pop
lcall
xor
cmp
mov
in
xlat
lcall
pusha
inc
mov
push
xchg
fsubrp
xchg
inc
and
xor
adc
insl
pop
and
test
xor
es
mov
and
mov
add
inc
add
add
lock
and
adc
orl
sub
test
syscall
xchg
pop
addl
notl
add
mov
xor
rorb
sub
xor
cmp
test
inc
cmp
lods
or
sbb
mov
mov
jne
xor
pop
push
sbb
outsb
cmp
sbb
scas
inc
xor
dec
loope
xor
jecxz
sub
hlt
fwait
xor
cmp
je
lock
and
and
sbb
rcrl
popa
push
sbb
sti
adc
jae
subl
xchg
mov
dec
push
mov
push
inc
push
fidivl
pop
xchg
and
aas
in
in
push
pop
cmp
hlt
inc
or
addb
or
jb
pop
nop
scas
lahf
or
mov
or
cmpps
mov
and
inc
xor
enter
popf
xor
mov
and
adc
add
mov
xor
push
out
decl
cmp
jmp
sub
add
pop
aaa
and
adc
jg
dec
push
mov
fsubr
inc
mov
test
mov
sub
dec
dec
sub
icebp
dec
movsb
sbb
jmp
sbb
or
or
ss
cmpl
cs
ss
and
lock
or
xor
jle
popf
cs
inc
dec
and
push
orl
in
push
pop
invd
ret
stc
add
inc
inc
loop
sub
add
sub
mov
mov
pusha
outsl
mov
fmuls
mov
ret
cs
mov
shrd
loop
jecxz
gs
dec
rolb
pop
fnstenv
test
pop
fwait
or
dec
mov
ss
lret
mov
int
push
les
sbb
sbbl
rcll
or
imul
adc
mov
ret
shll
ret
sbb
int
adc
lea
push
lods
inc
movsb
jge
loope
add
cmpl
push
push
sbb
add
sbb
mov
stos
jae
xchg
add
lock
mov
jl
adc
xchg
push
adc
cs
fbstp
int3
divl
in
mov
sbb
push
jb
push
popa
sbbl
call
mov
adcb
sbb
xchg
nop
mov
xchg
mov
mov
adc
and
scas
push
out
cli
cmp
leave
sti
aaa
loopne
xchg
or
es
syscall
stc
and
call
jmp
inc
inc
mov
or
mov
int
sbb
push
inc
inc
ret
add
or
jmp
clc
ret
lea
ret
and
push
xor
mov
test
mov
sarl
push
or
mov
adc
roll
in
out
mov
and
data16
cmp
jl
pop
sub
cmc
inc
dec
pop
push
sarl
mov
sub
cmp
je
mov
jl
or
mov
inc
pop
inc
adc
jle
sbb
sbb
mov
sbb
out
pop
mov
daa
mov
and
adc
jmp
dec
lock
xor
pop
int3
scas
cs
shlb
fucomip
fs
add
filds
xor
dec
cmp
or
shrl
jbe
inc
dec
add
add
mov
or
xor
scas
jb
mov
xor
mov
scas
movl
xchg
jne
test
pushf
and
add
push
xchg
cmc
add
mov
leave
les
mov
jp
mov
hlt
mov
add
or
nop
mov
repnz
add
sahf
add
mov
fisubs
mov
cld
call
gs
xchg
adc
jmp
adc
jg
add
inc
push
pop
jno
push
adc
ss
scas
pusha
add
or
add
je
add
mov
sbbb
shlb
jne
inc
fildl
ljmp
sbb
add
inc
add
lock
push
push
adc
into
cld
fildl
push
int3
xor
jge
adc
push
jno
adc
cmp
jl
and
in
imul
in
xchg
rolb
cmp
add
dec
xor
das
cmp
xor
lret
int
add
push
sub
xor
pushf
xor
push
mov
and
add
movsl
add
roll
xlat
xchg
ret
add
in
repz
sti
jg
hlt
lea
pop
inc
in
mov
xor
inc
lock
dec
and
roll
inc
jmp
push
dec
inc
push
loopne
push
pushl
enter
int
push
or
fwait
cwtl
xor
pop
ljmp
pop
xchg
xchg
or
outsb
mov
jg
add
sub
popa
js
imul
in
insl
sbb
pop
popf
mov
loopne
dec
or
mov
jns
mov
repnz
cmpsb
push
xchg
or
ret
ds
sub
pop
sub
out
or
nop
lcall
fs
ja
push
add
dec
cmp
test
mov
or
xchg
xchg
or
sbb
inc
xor
add
inc
nop
aad
icebp
mov
inc
lods
test
das
mov
jecxz
push
pop
hlt
cmc
pop
mov
jbe
andb
movsb
iret
mov
inc
lock
mov
and
fistpl
mov
or
jg
jecxz
xor
sti
dec
jne
ret
adc
dec
xchg
into
int3
pop
sbb
cmp
fs
cmp
je
jp
cwtl
sub
sub
xorb
inc
test
test
les
sbb
xchg
push
jg
xor
ret
or
add
mov
into
push
cld
push
mov
mov
leave
outsl
xchg
pusha
jmp
outsl
add
pop
push
sub
cltd
add
inc
push
mov
ss
inc
mov
push
call
pop
cmpb
or
add
or
nop
sbb
popa
push
add
cmp
add
pushf
fs
xlat
testl
aad
mov
cs
add
inc
cmpsl
pop
add
pushf
push
rcrb
outsb
jne
lods
imulb
inc
push
test
add
test
jge
cmp
or
popa
jb
add
sub
cld
and
dec
add
cmpsb
mov
or
push
cmc
mov
bound
insb
pop
add
daa
js
dec
rcrb
add
popa
fwait
mulb
pop
inc
lea
movups
inc
or
or
add
lock
nop
push
int
pushl
fs
arpl
adc
and
xor
inc
sub
lretw
or
in
and
add
inc
movsb
mov
loop
mov
add
dec
lahf
dec
xor
insb
and
arpl
gs
inc
xchg
or
cmpb
or
ss
in
mov
add
xchg
dec
fistpll
rcl
inc
push
jg
inc
int3
ja
push
add
inc
testl
sub
movsb
pop
mov
shl
cmp
lock
test
and
push
jns
negl
push
test
in
pop
add
and
clc
popf
out
inc
fs
pop
pusha
pmullw
lea
or
push
les
add
test
arpl
jo
mov
popa
xchg
shll
mov
gs
sti
mov
push
jns
cmp
jle
xorb
mov
test
inc
push
xchg
ds
inc
xabort
xorl
inc
stos
mov
in
jnp
cmp
pop
sbb
add
push
add
mov
je
or
sub
cmp
test
add
or
sbb
xchg
jmp
cmp
sahf
mov
or
scas
sbb
inc
jl
gs
in
jns
dec
cmp
addb
or
fs
nop
addr16
xor
sub
fdivs
in
sbb
cmp
mov
test
mov
aas
sub
sub
mov
orl
stc
jne
cmp
push
fadds
test
test
repnz
or
or
push
cmpsl
stc
es
dec
jle
xchg
or
cmp
clc
and
inc
jle
push
aas
xchg
or
xor
cmc
out
cs
pop
cmp
push
dec
pop
in
push
pop
loop
pop
push
push
jge
arpl
sbb
mov
inc
cmp
inc
popf
mov
rcl
cmp
jg
and
adc
or
inc
ds
orb
adc
jp
sbb
ret
sahf
fsts
mov
inc
adc
mov
sbb
aaa
inc
lock
out
adc
jae
lock
sbb
mov
mov
int
cmp
push
jne
mov
nop
or
shl
cmp
dec
lods
cwtl
cwtl
push
add
cmp
fildl
and
and
mov
pop
add
adc
dec
dec
daa
dec
mov
mov
lcall
pop
nop
test
lods
cltd
fidivrs
nop
dec
outsb
fmuls
jmp
and
pop
cmp
jne
sahf
lret
pop
es
mov
add
roll
adc
movsl
ret
xor
pop
mov
fcomps
push
loopne
pop
dec
inc
mov
out
test
mov
movb
adc
adcb
int3
jbe
push
push
or
inc
cld
mov
scas
add
iret
data16
fsubrl
js
cmpsl
pop
add
add
sbb
add
icebp
add
stos
ss
or
lret
pushf
lock
call
dec
or
mov
or
stc
dec
xchg
sbb
jnp
iret
xchg
rclb
icebp
jne
outsl
adc
add
pop
inc
hlt
mov
xchg
sub
cmp
jge
dec
dec
fadds
andps
sarl
pop
push
push
insl
add
aam
jo
jo
push
jmp
adc
adc
dec
sbb
push
jb
arpl
fcmovnu
in
mov
bound
or
xchg
sbb
mov
pop
add
fdivs
test
xchg
in
or
popa
sbb
adc
adc
outsl
sbb
xchg
adc
sub
sbb
int
fwait
nop
fists
add
repnz
and
js
js
ljmp
jl
sbbb
or
push
nop
pop
pop
and
fcoms
or
ret
pusha
mov
and
mov
ljmp
push
and
add
xchg
or
mov
adc
push
sub
mov
xchg
and
movsb
push
aam
imul
or
leave
push
or
adc
mov
mov
sbb
or
in
jo
test
jns
jo
in
inc
add
loopne
out
enter
rclb
add
fsubrl
and
pop
loopne
mov
push
xor
and
and
dec
loope
adc
cmc
mov
rolb
cmp
xor
xor
xor
inc
rcll
dec
dec
dec
dec
dec
dec
dec
dec
xchg
mov
push
push
aam
adc
adc
sbb
rcl
mov
mov
subl
into
push
cmp
pop
inc
andb
test
add
push
into
and
sbb
jns
shlb
sub
inc
std
pop
data16
and
and
inc
add
addr16
jns
adc
aaa
and
dec
add
push
mov
outsb
push
xchg
pop
push
xchg
add
into
adc
or
sbb
mov
mov
add
in
dec
mov
push
in
rolb
clc
sub
clc
xchg
push
add
je
push
aad
sti
pop
push
popf
dec
mov
fstl
jnp
imul
sub
and
lahf
sarb
pop
mov
cmp
mov
and
popa
add
in
das
enter
aad
adc
jb
imul
test
dec
push
jmp
loope
enter
add
es
jmp
inc
cmp
fmuls
inc
dec
pusha
sub
dec
call
shrb
lods
mov
cmp
leave
add
nop
and
orl
dec
or
enter
xor
inc
inc
adcb
jb
sbb
or
push
push
push
inc
pushf
adc
cmp
pusha
roll
dec
js
jno
push
rorb
fisttps
pop
sarb
or
bswap
movsb
mov
clc
ljmp
and
xchg
add
sbb
adc
adc
dec
lcall
lahf
or
or
mov
insb
fadds
inc
jmp
popa
inc
xor
dec
sub
cltd
sub
mov
or
dec
nop
adc
outsl
pop
and
or
jmp
inc
sti
jl
adc
push
add
lea
cmpsb
lds
andl
pop
fmul
or
arpl
add
mov
and
lock
inc
orl
push
inc
js
lahf
test
mov
scas
add
aas
cmp
inc
pushl
dec
lock
xor
pusha
je
mov
add
mov
add
or
cmp
jg
mov
in
test
ret
out
rolb
mov
adc
fcmovnbe
adc
mov
insl
clc
dec
outsl
add
ficompl
or
test
add
adc
push
jmp
cmpb
inc
lret
es
sub
int3
mov
add
outsl
sub
rcll
lock
ja
jo
imul
ror
push
fcomps
inc
ljmp
movsb
mov
add
pop
fucom
inc
cmp
pop
cmp
aaa
in
sbb
je
adc
in
test
and
add
dec
adc
leave
push
inc
sub
test
push
loopne,pn
subb
xchg
mov
mov
and
pusha
mov
adc
xchg
jae
outsl
fidivrl
aad
imul
adc
pop
pop
loopne
sub
or
inc
je
mov
push
dec
jnp
xchg
jl
imul
cmpb
fldenv
hlt
negb
movzbl
cmp
fbld
popa
mov
inc
gs
inc
inc
mov
cmpsb
movsb
and
pushw
push
xchg
ss
jb
cltd
addb
xchg
push
fistpll
sub
test
aaa
sbb
and
jmp
push
sub
push
push
mov
mov
jo
aas
or
add
aas
cmp
mov
jge
xchg
or
dec
lret
lods
mov
add
rorb
fst
mov
inc
add
cmp
jnp
cmp
cmp
aas
mov
push
pop
movl
sahf
pop
js
loopne
push
loop
xor
adc
mov
and
adcl
daa
jmp
int3
jge
rolb
cmpl
add
lods
adc
add
mov
andb
inc
testl
inc
js
data16
roll
leave
add
xchg
cwtl
mov
jp
pop
enter
mov
add
push
cli
and
pusha
pop
cmpb
ret
or
fiadds
xor
imul
adc
dec
outsl
add
pop
pusha
ss
and
or
cmp
pushf
shlb
add
adc
add
adc
shlb
cwtl
sub
add
shrb
mov
aas
jno
lock
lcall
and
mov
adcb
dec
insl
dec
add
rolb
pop
test
mov
and
push
dec
inc
jg
bound
pushw
xchg
xor
mov
or
pop
iret
adc
jo
ret
loop
adc
mov
jbe
pop
mulb
cmp
ror
mov
test
inc
sub
xlat
or
sbb
movsl
xchg
rclb
inc
sub
cmpsb
mov
or
insb
push
push
adc
sti
cmp
les
push
or
push
adc
cmp
mov
into
adc
or
mov
in
jmp
inc
push
adcl
and
xor
bound
mov
pop
xlat
xchg
or
or
das
pushf
dec
sti
inc
shrb
add
pop
push
adc
test
enter
or
or
jb
cmp
or
push
push
clc
adc
add
pop
sti
cltd
jo
inc
pusha
xor
pop
and
shrl
test
mov
icebp
scas
xchg
inc
xchg
jecxz
lods
or
inc
pop
jmp
mov
popa
popa
inc
cmp
ds
xchg
testb
mov
push
xchg
xor
aas
xor
fsubl
sbb
cmp
mov
mov
and
xchg
mov
jecxz
push
push
adc
aaa
push
fiaddl
mov
insb
jnp
inc
fidivrl
in
jne
pop
les
lock
bound
insb
out
pop
and
jmp
adc
pop
cwtl
scas
clc
or
push
inc
rcrb
xor
imul
stos
sbb
cmpl
jo
or
iret
pop
cmp
daa
push
pop
jne
fiaddl
sbb
adc
clc
les
push
outsb
pop
addl
adc
mov
cmpl
adc
push
mov
xor
adc
fdivs
sbb
adc
dec
das
pop
loopne
xor
cmp
push
xchg
movsl
sti
dec
mov
jmp
adc
adc
push
dec
scas
add
push
aas
pop
sub
nop
add
in
add
pop
mov
popa
movsl
sub
and
popf
mul
dec
out
inc
popa
ss
add
test
movb
clc
call
ret
loope
mov
test
jmp
add
cmp
aaa
in
lock
and
add
and
sti
mov
or
gs
fisubrl
pmaddwd
bsf
int
hlt
push
rcr
pushf
sub
sti
or
xor
rclb
sbb
and
lock
adcl
loope
call
dec
add
out
mov
jge
out
push
clc
movsl
lea
fisttps
aad
imul
or
les
xchg
xchg
lock
cmp
mull
xor
pop
lea
mov
xor
inc
add
stos
xchg
sbb
loopne
or
movsb
subl
mov
popa
or
inc
int3
adc
cwtl
out
ret
adc
add
adc
add
and
sbb
add
xchg
jmp
sahf
shrl
push
mov
xchg
add
leave
mov
cmp
jge
fcoms
filds
je
imulb
cmp
inc
imul
gs
bound
in
push
push
sbb
ficoml
popa
push
xlat
add
or
push
cld
cmp
lods
loopne
stos
inc
cmpl
fisttpll
movb
cmp
pop
pusha
xchg
xchg
dec
adc
fsubs
pop
adc
iret
dec
pop
mov
loopne
lock
inc
push
pop
inc
hlt
enter
or
mov
lock
std
mov
jne
cld
jns
dec
fucomip
mov
inc
imul
lods
inc
cltd
pop
inc
sahf
jle
sbb
mov
sub
or
movsb
adc
jo
ss
sub
push
lds
sub
test
push
add
mov
nop
shll
hlt
outsl
pop
pop
mov
add
sub
mov
adc
add
popa
adc
stc
sub
xor
push
fimuls
mov
dec
sbb
push
mov
rdpmc
sub
or
insl
and
adc
ret
imul
mov
ret
dec
push
cmpsb
jecxz
das
adc
jmp
orl
dec
adc
loope
jo
inc
lock
inc
and
test
pop
add
insl
cmp
jge
pop
push
push
inc
adc
fsubr
repnz
dec
icebp
push
fsubrs
mov
sub
mov
mov
aaa
pop
mov
sbb
sbb
jge
clc
sbb
mov
cwtl
mov
sbb
fwait
add
xor
inc
push
dec
or
sub
sub
xchg
cld
in
xchg
push
add
inc
push
sub
cwtl
cmp
sub
roll
pop
add
test
je
out
pop
es
pop
imul
or
filds
insb
sbb
ret
test
push
dec
sub
call
and
shrb
shr
push
mov
lret
mov
insl
xor
iret
hlt
inc
es
iret
hlt
hlt
and
mov
pop
into
hlt
sub
inc
add
repz
repz
clc
or
pop
jns
ss
or
jne
sbb
add
leave
lock
jb
lock
rorl
cld
add
adcb
and
ds
pop
fildll
push
rolb
add
cmpl
xchg
sub
dec
or
sar
loopne
mov
aad
adc
leave
loopne
ja
sub
subb
fistps
cmp
sub
jmp
push
inc
fiadds
sbb
add
push
mov
hlt
jne
mov
push
or
loope
fcomps
dec
iret
dec
add
add
fiaddl
pushf
addb
or
psubusb
orl
xchg
or
bound
cmpsb
add
fisttpl
pusha
mov
roll
inc
xlat
xchg
pushf
or
add
xor
out
jnp
enter
mov
sub
jmp
in
incb
push
repz
mov
and
inc
pop
add
fdivs
push
xor
sbb
xor
ret
pop
lods
inc
add
mov
call
add
push
or
xor
flds
and
enter
and
add
ljmp
test
clc
shrl
jno
sbb
fildl
inc
inc
inc
clc
xor
inc
jb
mov
pop
clc
sub
mov
stc
clc
sub
jb
inc
ficoms
dec
lock
clc
mov
push
jae
mov
pop
inc
inc
stos
in
xor
clc
arpl
lds
insl
add
sub
addb
andl
call
test
in
sbb
leave
es
and
inc
dec
dec
sbb
pop
push
out
daa
add
pop
cmp
das
loopne
mov
and
inc
pop
mov
dec
js
popf
xchg
dec
movsl
ficomps
or
out
repz
sarb
shl
lret
cmpb
popl
mov
dec
pusha
adc
ret
jns
jl
jge
pusha
sbb
or
je
shlb
push
sbb
pop
adc
jp
lcall
lcall
sti
xlat
sbb
pop
fsubrs
push
je
addl
pop
pusha
inc
push
sbbl
jmp
fistl
xchg
xchg
gs
adc
pop
lahf
addr16
mov
pop
push
cwtl
fs
jl
add
outsl
fstpl
jmp
insl
jo
sub
mov
lds
sub
test
push
rorl
xchg
sub
movsb
es
test
lcall
punpcklbw
pop
fsubl
cld
add
jnp
rclb
cwtl
repnz
push
pop
push
xor
mov
mov
andb
xchg
out
mov
adc
hlt
mov
jnp
cmp
jno
pop
pop
cmpsb
adc
incl
bound
inc
jmp
addl
xor
sbb
add
andl
dec
es
add
dec
mov
adc
push
or
stc
adc
lods
es
into
push
pop
xor
mov
or
mov
push
jbe
or
add
cld
ja
out
mov
sbb
int
sti
inc
cld
adc
push
xor
and
cmp
fucomip
push
clc
sahf
les
and
push
dec
test
dec
scas
xchg
and
sub
ljmp
lret
mov
xlat
mov
inc
pop
incb
add
mov
add
out
xchg
xchg
push
and
mov
ret
mov
inc
pop
mov
add
push
inc
inc
inc
fstpl
xor
adc
dec
add
inc
ret
dec
pop
sbb
and
icebp
sub
inc
call
pop
jb
rcl
fists
jp
aas
push
pop
loope,pn
fmuls
pop
push
inc
cltd
fmuls
mov
dec
je
lahf
loopne
daa
push
scas
dec
sbb
or
push
sahf
push
je
mov
in
pop
gs
jle
sahf
or
stc
mov
js
or
cmpsl
cmp
inc
test
fstps
int3
shll
insb
mov
add
add
add
mov
pop
jno
enter
out
aas
je
scas
es
jae
pop
sbb
add
or
push
and
mov
push
test
xorl
jg
rorl
pop
test
add
pop
popa
or
mov
and
fidivrs
adc
mov
inc
push
inc
inc
cmp
je
outsb
and
ret
daa
cmp
push
repz
repz
cmp
jnp
inc
loope
das
sub
xchg
mov
jb
push
adc
shll
loopne
imul
ret
inc
dec
or
pop
outsl
pop
pop
clc
orl
je
sub
jo
cwtl
cmp
fs
and
pushf
adc
cmp
pop
movb
fsubs
fimuls
pop
lods
xchg
es
xchg
xor
je
push
lret
push
pushl
pop
push
inc
loope
sbb
pop
mov
jmp
mov
jge
jmp
xchg
outsl
outsb
pop
push
aas
jbe
divl
dec
jge
mov
mov
popa
push
cmp
fcomps
xor
stos
pop
or
mov
or
adc
push
movsl
mov
aaa
out
pop
cmp
aam
push
mov
mov
xor
pop
cwtl
pushf
push
fdivrl
or
adc
out
scas
add
ds
sahf
gs
add
or
sub
and
mov
push
xor
push
sub
push
cmp
loope
rorb
pop
jbe
adc
mov
inc
jmp
xor
xchg
push
sub
adc
add
xor
nop
jle
pop
adc
rolb
push
mov
push
mov
cmpsb
je
outsb
sbb
pushf
ss
sub
mov
and
push
add
xchg
add
ss
pusha
mov
test
pusha
jge
or
push
roll
push
adc
add
sub
mov
jno
adc
mov
sahf
push
pop
pop
mov
mov
inc
dec
or
xchg
scas
jnp
jne
adc
dec
mov
out
and
iret
test
add
scas
inc
leave
test
add
or
add
xchg
mov
mov
lods
lods
out
and
adc
loopne
pop
loopne
loop
ret
iret
repz
adc
filds
pop
aaa
enter
mov
les
cmp
popf
cmp
outsl
dec
je
subl
cmp
je
mov
cmp
add
rclb
jnp
lret
dec
dec
pushf
movsb
fisttps
jb
cmp
mulb
icebp
or
xchg
xchg
imul
fmull
mov
and
cmp
push
sbb
ja
mov
mov
push
pop
pop
mov
inc
pop
lods
adc
dec
pop
ja
movsl
cmp
lret
aas
insb
jae
inc
jmp
inc
dec
xchg
jne
shlb
insl
sti
sbb
jle
push
push
data16
repz
cmp
enter
add
mov
inc
ffree
push
rcrb
cmp
scas
cmpsb
hlt
or
dec
push
stc
xchg
fiadds
mov
fidivrl
and
and
cs
mov
cmp
inc
add
mov
scas
pushl
mov
or
pop
add
push
pop
lods
pop
add
sbb
pop
lods
in
mov
mov
jge
cs
shr
push
mov
or
ret
pop
xchg
jmp
push
pop
and
mov
cmpl
xor
ja
adc
inc
jecxz
mov
add
and
xchg
xchg
and
loop
push
pop
addl
dec
mov
push
iret
fidivrl
add
rclb
and
sbb
dec
movsb
enter
dec
pop
pop
mov
push
xor
cmp
in
xchg
mov
jmp
insl
mov
push
push
sbb
sbb
sbb
call
pusha
inc
or
cwtl
test
subl
repz
mov
jnp
push
mov
dec
adc
adc
sbbl
adc
stos
iret
xchg
mov
ss
add
dec
xorl
mov
mov
push
lock
test
push
mov
pop
pushl
push
cld
cmp
mov
mov
ss
inc
add
adc
sub
mov
add
mov
push
add
adcb
push
aaa
test
scas
sub
dec
roll
rol
sbb
cld
xchg
cmpsl
adcb
jnp
fildl
or
sub
sbb
sti
rorb
sub
mov
lock
stos
pusha
popa
fldenv
adc
scas
pushf
inc
enter
hlt
sbb
dec
dec
clc
leave
jbe
mov
iret
cltd
and
sub
arpl
inc
add
mov
add
pop
shlb
adc
fmuls
sbb
shl
jne
dec
call
pop
dec
xor
fmul
fs
sbb
aam
je
push
pop
fsubrs
fimuls
xor
push
out
cmpsl
pushf
mov
mov
xlat
xchg
aam
adc
enter
pop
iret
lea
dec
ds
pop
cmp
data16
mov
push
lock
aad
lds
inc
sti
mov
push
fmull
adc
test
scas
cmp
loopne
cmp
clc
xor
add
inc
jmp
outsb
ret
dec
negl
mov
or
mov
jns
insb
xor
cmp
jmp
lret
cmpsl
rcrl
outsb
repnz
in
xor
aas
testb
sub
dec
mov
cmp
adc
arpl
jl
stc
xchg
ret
xlat
orb
jnp
in
loopne
pop
adc
cmpsl
or
inc
dec
imul
sbb
leave
sarl
add
in
xor
popa
movsb
add
shll
addr16
fwait
pop
sbb
jge
push
add
xchg
jge
sub
add
cmc
sbb
lock
es
inc
and
jb
fsubr
aad
mov
sbb
xor
lea
dec
and
mov
sbb
ds
jo
and
sti
call
test
mov
imul
cmp
jle
xchg
add
xor
mov
movsb
fwait
loop
out
add
or
sub
and
mov
or
add
jp
sarl
pop
iret
clc
sub
jl
inc
test
fcomp
or
mov
inc
dec
inc
cmp
movb
jmp
or
ret
jl
inc
pop
inc
sbbl
in
sbb
ss
sahf
jge
movb
adc
daa
add
pop
cmp
add
xor
fsubl
add
jl
jle
aaa
dec
xchg
sbb
test
adc
dec
inc
jne
mov
scas
and
cmp
inc
cmp
sub
xchg
clc
pop
cmpl
call
cs
outsl
cmp
add
cmp
mov
jb
sub
xor
testl
xor
cmp
cmp
jno
pop
jo
inc
cltd
data16
sub
adcl
cmp
fwait
clc
or
add
mov
jae
dec
sub
xchg
mov
push
mov
mov
mov
repnz
pusha
or
stc
and
adc
pop
nop
clc
jl
cmc
push
push
mov
mov
xchg
pop
sbb
adc
push
lahf
rclb
inc
adc
popa
or
scas
cwtl
ret
add
lahf
pop
and
fcoml
jae
jne
pusha
xchg
pop
addr16
hlt
xchg
mov
inc
loopne
cmp
inc
xchg
mov
xor
shlb
and
fbstp
hlt
fisubl
out
push
hlt
adcb
and
aas
ljmp
or
jae
data16
mov
mov
gs
loope
pushf
add
cmp
out
movsl
and
and
aad
xchg
int3
or
test
js
mov
js
popl
sbb
fnstenv
je
pop
push
and
xorl
inc
push
call
jno
loope
andb
fdivrs
add
adc
cmp
mov
aaa
aam
inc
into
aas
jno
loop
sbb
push
mov
cmp
jg
pop
and
mov
fmull
bound
inc
mov
adc
sbb
cmp
sub
addr16
push
xor
ret
and
loop
dec
xor
or
adcl
shlb
sbbl
and
mov
adc
hlt
into
movsl
push
add
out
pop
and
mov
fisubrl
push
add
sub
mov
push
pushf
test
adc
js
sbb
fcoml
in
mov
lods
adc
imul
mov
cmpsb
add
call
cmp
mov
xor
dec
add
push
push
push
cmp
jp
dec
and
iret
xchg
popf
std
and
sub
dec
adcb
cmp
pop
mov
rorl
adc
add
sub
push
adc
xor
pop
loop
test
add
cli
mov
add
adc
cmp
bound
adc
inc
testb
je
cmpb
cmp
outsl
pop
in
jl
cmpsl
andb
lret
lods
popf
repz
shrl
ret
push
inc
test
popf
sub
xchg
cmpsb
mov
mov
cmc
sti
xor
add
mov
test
popa
cld
stos
or
pop
rorl
adc
insl
and
xchg
jne
sub
push
sub
add
mov
push
sub
push
outsb
push
test
mov
mov
ret
pop
inc
loop
inc
pusha
mov
push
xchg
or
je
xor
xor
pop
inc
lcall
add
or
mov
imul
add
repz
das
jne
clc
mov
mov
jne
hlt
adc
xor
jmp
enter
mov
outsl
test
cltd
into
dec
pushf
inc
xor
cmp
outsl
cmp
push
lahf
dec
test
pop
movb
inc
push
add
je
inc
add
or
popa
inc
push
inc
cmp
pop
clc
jb
ds
loope
emms
std
loopne
insl
mov
add
int3
das
sbb
js,pt
sbb
adc
pop
add
cmp
add
mov
sbb
popf
sbb
sarb
ret
xchg
add
cwtl
push
push
push
add
sbb
push
mov
add
xchg
mov
in
and
sub
or
inc
mov
pop
mov
jl
add
jb
push
in
sbb
pop
testl
push
sub
mov
mov
inc
or
jg
insl
lret
cmp
xor
jnp
inc
mov
jmp
inc
push
push
addr16
in
or
sub
xchg
jmp
cwtl
mov
sub
cwtl
addr16
sub
lahf
cld
inc
add
clc
add
cld
or
push
fcoms
mov
fldl
adc
jg
push
out
aam
dec
xchg
pop
nop
iret
dec
inc
sbbl
pop
test
nop
dec
xchg
sbb
inc
jnp
scas
cmp
push
nop
or
cltd
and
sbbb
sahf
nop
push
std
mov
je
push
sbb
test
add
fsts
add
xor
adc
or
and
xor
test
dec
inc
adc
int3
push
sbb
jns
cs
jmp
lcall
das
push
or
fsubr
sub
adc
jmp
or
xor
inc
xor
xor
cmp
adc
hlt
pop
hlt
rol
int
adc
add
sahf
sub
dec
or
adcb
cmpsb
lods
xor
aam
mov
faddp
push
aam
or
and
ja
loope
mov
mov
aas
dec
mov
or
mov
ljmp
inc
mov
movsb
sarb
sub
cli
jge
cs
out
cwtl
ja
call
pop
sbb
xchg
pusha
ja
jl
adc
repz
push
in
xor
jne
decw
out
jmp
cmp
in
in
in
jbe
rcr
fwait
jmp
and
mov
or
cmp
xor
mov
cmp
nop
lock
in
in
sub
push
inc
pop
pop
xchg
fdivs
and
fildll
mov
leave
push
clc
pushf
lcall
xor
aam
pop
pop
push
adc
loope
mov
mov
and
jl
cmpb
or
cmp
lods
lods
jmp
pop
mov
jge
mov
and
cmp
push
inc
sbbl
clc
mov
in
addr16
inc
add
rolb
adc
add
jge
sbb
mov
fsts
das
push
bound
push
adc
ret
mov
mov
cmp
clc
push
jp
cltd
test
mov
hlt
ret
aas
cmp
ret
and
scas
popa
sbb
pop
icebp
push
gs
imul
add
adc
mov
push
addr16
scas
sub
pop
jmp
loopne
add
cmp
loopne
rcrb
fisttps
dec
lret
imul
jmp
popa
fs
int
jbe
inc
adc
dec
dec
push
or
ds
lods
xor
mov
aam
lret
adc
dec
cmp
loope
aaa
push
pop
mov
sahf
or
loopne
aam
lahf
add
mov
adc
jnp
cwtl
out
repnz
push
dec
push
cmp
mov
das
clc
call
dec
dec
or
add
icebp
std
ljmp
fildll
mov
mov
ja
pop
add
enter
sub
xchg
add
in
mov
pop
xchg
xchg
push
mov
mov
add
cmp
loope
pop
xchg
lret
imul
inc
push
test
jne
out
mov
test
cmp
jne
sub
cmp
push
push
movsl
xor
sbb
jle
xlat
mov
xchg
rclb
pop
pop
jge
lea
dec
adc
add
sbb
bound
add
mov
shrb
jo
mov
add
push
loopne
adc
or
sub
xchg
or
pop
inc
in
adc
add
in
dec
lea
dec
jge
test
or
cld
xchg
insb
dec
push
in
mov
push
inc
mov
add
xor
iret
pop
or
adc
testb
dec
add
push
pusha
enter
pop
mov
lock
pushf
xor
add
add
adc
in
jg
xor
loop
rcl
mov
cmp
roll
mull
push
fcoml
dec
jb
add
sbb
mov
ja
xchg
mov
inc
sub
testl
sbb
rclb
cmpsb
mov
dec
or
sub
arpl
mov
mov
das
cmp
push
push
jb
cli
dec
add
cmp
pop
mov
dec
mov
and
dec
mov
test
add
inc
fadds
dec
sbb
ret
nop
mov
loope
inc
xor
imul
add
push
test
popa
stos
scas
push
push
dec
mov
subl
or
push
in
pinsrw
lea
mov
xchg
lcall
shlb
xchg
pop
xchg
inc
sbb
push
inc
mov
dec
add
das
xchg
mov
add
xchg
es
mov
rcll
fiadds
push
pop
adc
xchg
fcomps
cmpsl
add
in
inc
pop
loope
popf
sub
mov
add
cmp
cmc
cmpsl
nop
push
movl
inc
ret
mov
roll
jo
popa
dec
mov
add
xor
add
loope
push
push
je
popa
test
inc
nop
push
cmp
or
xchg
aaa
add
xor
inc
test
jo,pt
std
les
jge
xor
stc
push
push
ss
xchg
jns
cmpb
push
stc
sub
push
and
lret
add
enter
add
test
gs
test
in
inc
pop
pop
pop
push
sub
sbb
cmp
inc
xor
xor
jp
imul
test
punpckhdq
pusha
lcall
sub
mov
mov
in
pop
imul
popa
cmp
pop
fcompp
dec
xlat
add
push
stos
and
cld
lds
stc
movsb
xor
lds
and
inc
lcall
inc
ret
loopne
mov
shll
add
sub
dec
xor
imul
into
sub
or
and
adc
scas
sbb
sbb
pop
dec
push
mov
push
sbb
mov
and
je
inc
push
movsb
dec
add
sbb
in
sbb
mov
inc
mov
lds
mov
pop
cmpsl
inc
adc
pop
cmp
adc
mov
pop
repz
es
or
push
cmp
jne
icebp
xor
repz
sbb
xor
mov
jne
rcr
dec
xchg
mov
mov
jmp
inc
adc
out
outsl
addl
out
daa
mull
xchg
movsb
scas
cmp
jl
std
rcll
dec
adc
lea
push
jmp
push
dec
or
adc
push
test
js
ret
mov
pop
adc
mov
mov
outsb
push
dec
ret
sbb
movsl
loopne
push
pop
mov
xchg
frstor
adc
mov
and
xchg
iret
rep
pop
jo
inc
sub
cmp
cmp
out
jns
xor
xor
push
xor
lock
out
sub
sub
mov
divl
dec
jle
jns
out
lock
adc
sahf
idivl
enter
daa
cmp
imull
cmp
cmpsb
adc
mov
mov
int3
incl
adc
loope
outsl
or
es
popa
xchg
jae
mov
jo
cmp
sbb
cmp
add
xchg
sub
sbb
arpl
add
int3
and
jl
add
shr
cmp
xor
mov
nop
add
int3
iret
dec
outsb
arpl
mov
xchg
fists
mov
lods
add
icebp
pop
mov
mov
test
imul
mov
gs
ss
adc
add
data16
or
add
pop
mov
add
pop
inc
dec
mov
add
adc
and
inc
add
cmp
push
jmp
outsb
mov
xor
mov
push
lret
cmp
aam
js
jo
orl
in
outsl
mov
sbb
dec
aad
mov
daa
adc
pop
out
push
sub
decb
add
je,pt
or
or
jl
pop
sbb
sbb
dec
push
or
add
jmp
sub
push
dec
xor
mov
aad
cmp
insb
add
pusha
push
mov
fwait
incl
mov
inc
or
push
dec
insl
add
loop
inc
push
adc
pop
push
insl
outsl
xor
xorl
sysret
add
fidivl
and
pcmpgtd
mov
aas
mov
push
inc
sahf
xor
jne
bound
adc
in
or
arpl
xor
stos
add
push
shlb
cmp
outsb
mov
add
xor
or
fiaddl
inc
imul
fs
popa
js
add
lods
scas
test
add
test
into
sbb
or
stos
popl
addb
jns
add
or
dec
scas
pop
stc
cmp
add
or
fnstcw
mov
outsb
sub
faddl
rcrb
jge
fidivs
and
lock
in
adc
fdiv
pop
dec
adc
jp
jmp
add
nop
xchg
pop
xor
jmp
icebp
fstps
sbb
or
fcmovnb
push
aad
xlat
das
orb
add
rorb
aam
sti
imul
dec
scas
add
push
mov
lahf
jno
lahf
lcall
push
bound
or
fmull
add
or
xor
test
adc
fstps
jge
or
push
outsl
mov
cld
adc
nop
int3
prefetch
dec
ss
pushf
adc
filds
sbb
out
mov
das
mov
pop
mov
mov
orb
sub
sub
mov
shl
int
pop
add
mov
add
xchg
xor
cli
inc
mov
rorl
inc
xor
cmpsl
inc
mov
daa
jmp
or
jns
outsb
adc
lahf
addb
insl
push
das
test
jl
imul
jne
sbb
shrb
jnp
adc
mov
sahf
rolb
or
add
inc
cmc
jne
nop
or
add
cmp
lret
pop
in
jo
addr16
push
adc
adc
adc
scas
gs
adc
roll
gs
out
cmpsl
add
lea
mov
pop
adcb
sbbb
loope
movsb
and
test
popa
and
jg
orb
insl
mov
push
jb
insl
popa
jb
or
pusha
ret
mov
cmp
sbb
adc
pusha
lds
divl
outsl
fldl
jno
cmp
ds
loope
rorb
mov
and
mov
bnd
mov
push
mov
or
imul
or
iret
mov
or
roll
cs
rcr
jns
fbstp
adc
pop
and
jo
xchg
cmpsb
outsb
test
js
mov
lahf
lock
daa
sbbl
jg
add
addr16
push
push
dec
es
roll
xor
cmp
mov
jo
and
or
ret
sub
add
popa
cmp
cld
pop
mov
mov
jmp
mov
iret
mov
push
mov
out
jl
out
clc
testb
inc
loop
js
add
pop
jns
loopne
ljmp
mov
call
pop
sub
lods
add
testl
mov
inc
enter
hlt
testl
fistl
push
pop
push
repnz
add
xchg
add
fldenv
push
adc
inc
outsl
mov
lahf
sub
cld
push
and
mulb
push
sub
inc
cmp
scas
push
iret
fxch
push
paddb
mov
daa
add
add
pop
add
add
ja
mov
ljmp
add
add
push
or
mov
cmp
pop
inc
mov
addb
push
or
out
jb
roll
mov
push
mov
das
mov
mov
mov
mov
out
mov
mov
add
mov
mov
pushl
jbe
or
lods
ljmp
arpl
xchg
stos
int
sub
lock
adc
jo
addr16
or
sbb
cmp
mov
sahf
jo
rclb
in
roll
push
fdivrs
pop
pop
enter
sahf
int
sbb
xchg
div
mov
data16
fidivl
fidivs
mov
add
push
pop
sbb
outsl
fdivp
and
lock
clc
and
add
dec
push
fildll
ja
xchg
push
es
jmp
push
xchg
sub
push
in
add
enter
ds
data16
add
stc
js
push
clc
mov
out
shlb
test
or
add
sahf
es
sub
scas
in
ss
aad
mov
mov
push
enter
pop
mov
or
push
xlat
fcomps
mov
outsb
pop
sbb
dec
push
outsb
lret
push
pop
call
pop
enter
push
adc
fidivl
cmp
add
or
leave
outsl
repnz
inc
js
add
pop
dec
in
xlat
sub
add
pop
aas
add
jo,pt
popa
and
lahf
and
jo
and
iret
call
add
cmp
fsubrl
push
mov
and
push
cs
add
loope
das
xchg
mov
lock
lods
jne
add
outsl
xor
sbb
imul
cmpsb
mov
sub
pop
jo
xchg
pop
dec
loopne
dec
fists
sub
clc
rolb
push
add
and
mov
dec
adc
pop
add
mov
adc
add
sbb
or
iret
jbe
push
fs
xchg
aad
and
pop
jl
push
andb
dec
inc
in
je
or
add
and
out
cmpb
cmp
add
iret
roll
fdivr
lcall
push
mov
sbb
xor
dec
jno
outsl
movsl
push
popa
inc
xor
fxch
push
xchg
in
push
test
add
rcrl
sbb
mov
sarb
inc
pop
js
mov
imul
or
mov
aas
cmpsl
int
jmp
add
es
jae
jo
inc
lods
jne
xor
push
ret
mov
push
and
sbb
mov
and
mov
cmp
inc
iret
and
inc
loopne
and
jmp
inc
pusha
pop
pusha
and
pop
mov
incl
xor
add
sub
daa
rorb
adc
push
and
push
sub
sub
cwtl
loopne
pop
das
out
mov
test
mov
mov
add
test
incl
push
inc
mov
call
cltd
iret
cmp
pop
xor
dec
sti
mov
subl
cltd
mov
dec
add
push
sub
hlt
push
outsl
jbe
ja
dec
mov
jecxz
in
inc
sub
cs
xor
xor
aam
insb
cmp
lea
jecxz
add
mov
pusha
cld
hlt
das
push
fisttpll
sahf
ret
filds
pop
lcall
xor
xchg
push
sub
xor
js
sbb
mov
jae
data16
push
je
add
fdiv
xor
xchg
setle
push
mov
xor
lcall
rclb
xor
xor
pop
xor
or
xchg
push
or
push
test
mov
ret
pop
loop
pop
int
sbb
roll
out
push
sbb
and
iret
je
inc
xorb
bnd
ja
fimull
pusha
sarb
jne
gs
mov
rolb
cltd
fisubs
add
jl
dec
and
xor
add
test
sub
add
mov
test
sbb
or
cmp
adc
mov
mov
loope
sbb
pop
mov
adc
push
dec
cmp
add
jno
shr
xchg
and
cmpsl
fildl
fs
fcoms
aas
inc
faddl
cwtl
cwtl
jo
in
inc
add
dec
pop
sub
enter
push
mov
repz
and
inc
add
push
imul
repz
or
leave
sub
inc
dec
mov
iret
mov
and
fcomp
ret
inc
jo
es
jns
mov
shlb
ja
pop
pop
sbb
mov
mov
fcomip
in
sbb
cwtl
pop
enter
out
outsl
pop
mov
call
mov
cs
dec
cmp
lock
mov
fsubl
or
fwait
jae
mov
push
xor
rorb
add
out
or
leave
jl
add
and
pop
jb
test
test
inc
test
inc
rcrb
mov
and
and
rorl
pop
repnz
loopne
push
fildl
lods
imul
dec
call
aam
pop
repnz
sbb
rorb
rclb
cltd
xchg
add
fmuls
dec
pusha
jb
push
pop
enter
xchg
loopne
loopne
add
inc
push
out
fistps
mov
inc
shl
inc
push
stc
inc
sahf
fisttpl
inc
inc
push
add
jns
pop
add
push
dec
adc
lds
hlt
cs
and
mov
xchg
repz
clc
add
xchg
xor
pop
icebp
jbe
pop
enter
rol
in
test
enter
lds
add
in
add
pop
repnz
stc
ret
dec
js
lock
cs
sbb
sub
scas
les
mov
push
push
mov
scas
sub
addl
test
sub
inc
xchg
orl
mov
iret
out
mov
jl
xor
insb
cs
and
nop
mov
or
test
test
push
test
mov
or
out
lcall
scas
arpl
or
push
pop
cmpsl
imul
scas
test
lahf
fidivrl
in
xor
add
push
push
das
cmp
ret
mov
pop
sbb
and
adc
test
mov
xchg
aas
jl
enter
lods
push
clc
scas
out
add
in
inc
xchg
inc
test
pop
xor
pop
pop
add
xchg
dec
push
andps
or
mov
popa
xchg
pop
and
stos
adc
cwtl
mov
gs
negb
rcrl
inc
mov
cmpsb
insb
mov
scas
out
jmp
push
je
and
clc
inc
jmp
and
and
pop
dec
rolb
or
push
pushw
adc
fwait
adc
adc
stc
add
loopne
push
rolb
cmpsl
fistpll
sbb
test
call
adc
and
xorb
adc
dec
data16
add
orl
fstl
popa
into
js
sarl
jge
sub
sbb
shlb
sbb
xchg
jnp
xor
push
dec
push
sub
jo
ret
push
mov
pop
sub
jecxz
dec
hlt
jmp
js
mov
mov
sub
fidivrs
jbe
push
les
or
sbb
xchg
ret
xor
test
hlt
aam
push
ja
mov
adc
inc
mov
sub
push
mov
or
int
mov
or
mov
jmp
and
push
pop
ret
sbb
hlt
lahf
pop
lock
dec
jle
or
lahf
je
into
sub
mov
ja
es
ds
sbb
std
cmp
daa
popl
jmp
adc
xchg
dec
sub
mov
cmp
dec
inc
mov
idivb
test
cld
les
hlt
inc
imul
sbb
add
addr16
cltd
les
sub
sbb
add
lds
les
fs
fidivl
fsubl
cmp
insl
cmp
xor
loopne
stos
inc
lods
cld
scas
imul
xchg
xchg
adc
addr16
and
and
lds
dec
xor
add
cs
or
adc
add
or
pop
sahf
lret
add
adc
adc
test
xchg
sbb
andl
cmpsl
int3
sbb
pop
mov
xchg
mov
mov
nop
outsl
ja
dec
cmp
push
sbb
xchg
out
pop
add
or
adc
outsl
mov
add
add
push
cmpsl
int3
lret
cmpsl
jno
or
loope
or
adc
and
int3
sarl
gs
add
cmpsl
divl
stos
lods
test
ret
pop
subl
dec
loopne
mov
jne
add
adc
inc
xchg
and
sub
gs
push
popl
fwait
jp,pn
mov
mov
inc
sarl
rcrl
inc
or
fwait
xor
repnz
or
add
adc
das
cmp
sub
push
sub
fldt
push
inc
add
pop
cmc
add
inc
ja
icebp
dec
pop
stos
in
sub
fnstcw
push
adc
mov
and
sub
dec
mov
lea
shr
repnz
jp
sbb
mov
add
addl
or
pop
nop
out
mov
sbb
jecxz
orl
add
cmp
inc
movsb
scas
add
sub
add
iret
add
inc
popa
inc
inc
jae
jl
iret
add
outsb
sbb
ja
or
push
inc
add
lods
popf
cmp
sbb
sbb
or
sbb
mov
push
add
pop
xlat
dec
nop
inc
inc
outsb
lret
add
xchg
and
mov
xlat
roll
adc
xor
adc
cmpsb
test
xor
and
hlt
mov
js
cmp
cmp
cmpl
sub
ret
xor
push
fadds
mov
mov
mov
pop
mov
imul
movsl
sbb
sbb
pushf
adc
inc
add
lock
ret
mov
outsl
dec
inc
xchg
out
cmp
push
pop
add
outsl
fcomps
or
pop
inc
mov
sti
pusha
adc
aam
insb
cwtl
sub
push
sahf
adc
push
out
mov
pop
hlt
neg
jmp
arpl
and
in
adc
push
addr16
loop
xor
int3
les
and
xor
iret
push
das
repnz
cmp
push
mov
int
pop
stos
sti
and
ret
test
inc
popa
or
xchg
xor
cwtl
and
add
push
add
mov
fadds
mov
test
cmp
sbbl
add
mov
in
xor
in
sub
nop
add
dec
dec
mov
scas
js
pusha
cmp
imul
jae
lcall
inc
fs
or
fcmovb
in
inc
mov
ret
shld
xor
out
lock
or
mov
dec
or
lret
cltd
pop
insl
or
loopne
andl
mov
test
dec
sub
mov
addr16
pop
push
push
adc
and
out
out
lret
sub
int3
out
scas
xor
push
jmp
mov
and
adc
inc
adcl
mov
ljmp
dec
push
outsb
mov
mov
sbb
aam
dec
scas
add
es
movsb
mov
fwait
negl
sub
in
aam
cmp
repz
inc
addr16
rcr
and
fcompl
and
mov
add
add
cmp
dec
lds
add
cmpl
dec
push
fmuls
inc
dec
out
fs
push
push
test
pop
sbb
mov
sub
shll
add
push
movsl
adc
lds
inc
and
push
fs
push
or
std
add
sbb
xor
add
jne
loopne
jae
xor
scas
sub
andb
je
mov
inc
push
push
sbb
dec
inc
aaa
sub
jecxz
add
or
gs
xor
shlb
or
ret
xor
and
repz
add
mov
dec
push
lret
xchg
arpl
push
xor
insl
je
pop
das
addps
mov
test
sub
sbb
adc
shlb
lods
or
adc
add
push
or
rorl
jecxz
mov
cmp
mov
cmp
inc
js
adc
es
dec
xor
add
mov
ds
js
or
inc
loopne
fsubrl
mov
mov
cmp
ret
test
jge
aaa
loope
inc
lea
cmpsb
movb
bound
add
cmp
ret
les
insl
ss
cmpsl
sbb
cld
int3
xchg
add
and
es
xor
sbb
xor
and
cmp
test
pop
ja
and
sub
xor
adc
cmp
add
cmp
xor
cmpsb
and
sbb
mov
bound
mov
sbb
inc
shlb
aas
jne
rclb
lea
push
mov
je
loopne
adc
adc
mov
sbb
jp
mov
clc
sbb
sub
jae
inc
push
or
loop
lcall
adc
ds
push
or
push
ljmp
fwait
mov
aas
or
lea
lods
or
mov
hlt
in
adc
stos
add
loop
mov
ret
shlb
xor
mov
sbb
add
fsubl
or
aam
mov
adc
outsl
xchg
dec
mov
sbb
and
out
pushf
and
rorb
data16
adc
mov
orb
push
sub
xchg
outsb
inc
xor
inc
sbb
adc
scas
test
fiadds
adc
shrl
arpl
add
xchg
xchg
xchg
cmp
mov
inc
dec
push
add
xchg
jo
push
xor
sub
mov
lock
in
xchg
lock
push
mov
out
aaa
dec
add
ljmp
xor
xchg
ret
rorl
add
push
aaa
inc
imul
sbb
jge
jecxz
lea
lcall
negl
sbb
call
push
in
add
or
push
add
pusha
or
xchg
and
pop
ljmp
adc
rcr
mov
cmpl
adc
fidivrs
xchg
pop
je
mov
fisttpl
sub
outsl
test
fldl
sbb
loopne
subl
pop
pop
or
mov
sbb
test
fdivl
xor
lret
push
inc
notl
movb
movsb
fndisi(8087
roll
or
mov
xlat
in
inc
xchg
jmp
dec
outsl
or
push
in
or
add
popa
les
push
push
sub
jmp
jmp
adc
pop
dec
aaa
movsb
orb
fdiv
sbb
cld
arpl
divb
xchg
and
orl
add
xlat
int
fisubrl
sbb
sbbb
ljmp
and
xchg
dec
add
xor
adc
adc
push
lea
push
mov
xlat
sbb
out
adc
add
jno
fcmovbe
addl
outsl
or
lds
sbb
out
sbb
mov
mov
adc
push
jle
mov
lcall
js
add
outsl
jnp
sbb
in
dec
sarl
add
cmp
lret
stos
jge
addb
adc
in
mov
xchg
aad
push
xchg
dec
mov
adc
push
xchg
stos
cli
stos
inc
fcompl
shlb
add
sbb
and
inc
leave
or
cmp
add
dec
add
add
insl
imul
inc
adc
lret
push
incl
scas
in
jle
mov
adc
sub
je
mov
mov
push
mov
movsl
filds
leave
push
imul
pop
fistpll
cmpl
jp
pusha
jne
jg
por
jg
mov
aas
pop
xchg
pop
jns
xchg
clc
fxrstor
sbb
test
movl
dec
xor
cmc
push
adc
das
and
xchg
adc
xchg
neg
sub
fcomps
cld
dec
rorl
add
mov
movsb
lea
push
imul
insl
add
pop
loope
pushf
fs
cmc
or
inc
mov
cltd
add
shrb
scas
or
adc
fisttpl
push
xlat
ret
movb
cmpsb
pop
and
adc
mov
ret
mov
pop
imul
add
and
mov
inc
or
lea
lahf
add
sub
movl
xchg
dec
adc
adc
xchg
loopne
inc
inc
lea
sub
push
push
scas
lods
insb
inc
jmp
jg
das
cmp
addl
push
dec
fmull
andb
jl
mov
imul
test
addb
in
inc
mov
leave
xor
cmp
dec
jp
test
sbb
aam
testb
mov
fists
test
add
in
mov
and
pop
add
pop
in
mov
dec
dec
pop
adc
add
dec
xor
adc
lahf
mov
cmp
das
add
xchg
adcl
xor
jo
or
sbb
xchg
pop
sbb
cmp
sbb
mov
test
sub
repz
sub
xor
inc
std
mov
or
in
pop
imul
lock
xor
mov
out
adc
mov
out
js
add
jo
ljmp
inc
add
fadd
and
add
inc
xchg
fprem
dec
out
stos
testl
mov
push
jl
nop
icebp
push
fucomip
sarb
mov
jne
xor
and
add
jne
fsubrs
mov
mov
mov
push
sbb
stos
fs
xor
pop
mov
jae
adc
mov
lods
in
pop
lea
sub
adc
cmp
in
add
lcall
movsb
lea
repnz
add
mov
lea
fildll
add
add
xchg
pusha
enter
xchg
cmp
pop
mov
dec
pop
sub
rcl
xchg
cmp
fsts
cmp
push
xchg
or
neg
pop
es
inc
sbb
adcb
rolb
pop
pop
push
andl
lds
jp
add
sbb
lea
lods
inc
xchg
sbb
sub
arpl
out
gs
lds
aaa
fidivrs
setne
push
add
jnp
test
movsl
insb
dec
jp
jle
jne
xor
fs
add
cmp
scas
inc
cmp
test
vpand
and
lahf
outsl
jo
int
mov
pop
adc
pop
das
and
iret
and
and
dec
or
pop
cmpsb
sub
ds
in
push
shlb
outsb
adc
xor
lods
movsl
xor
xchg
and
ret
inc
hlt
pop
in
jnp
out
pop
jo
dec
cmp
adc
addl
adc
adc
fsubrs
daa
push
pop
or
adc
dec
insb
xor
lods
sub
sahf
inc
js
jmp
xchg
repz
andl
pop
and
cmp
jo
lds
aaa
add
and
push
adc
push
not
sbb
nop
sub
inc
test
and
lcall
adc
mov
dec
inc
repnz
rclb
push
sbb
push
dec
mov
dec
lahf
and
jne
sub
sub
sub
cmp
push
inc
pop
adc
sahf
idiv
sub
inc
loope
jmp
mov
xor
mov
mov
ljmp
and
loopne
xor
cmp
jp
inc
sbb
adc
int3
dec
adc
or
cmpl
pushf
sub
mov
dec
outsb
outsl
jb
add
jns
dec
add
andl
push
lock
push
dec
push
sub
jo
out
inc
cmpsl
in
rclb
addr16
call
pop
jp
push
xor
mov
jmp
pop
xchg
and
ja
xor
xorl
sub
and
xor
je
add
sbb
push
lods
xor
jge
xor
and
imul
pop
daa
add
xchg
xchg
loopne
dec
cld
test
loope
in
ret
fnstsw
cmpb
xchg
cmp
add
in
sub
jl
sbb
divl
pusha
pop
inc
pop
mov
jbe
cmpb
addl
into
jp
in
fsubl
push
mov
subl
add
mov
adcl
out
add
ret
xchg
or
push
ret
add
xchg
add
int3
enter
xlat
frstor
lret
jmp
in
jp
or
cmpl
mov
lock
jge
add
mov
dec
jo
dec
or
push
push
mov
pop
imul
std
imulb
or
mov
fiadds
xchg
out
xchg
repnz
ss
leave
sqrtps
cmp
icebp
add
popa
push
rcrl
mov
adc
add
inc
push
adc
inc
and
aas
sbb
addb
or
push
adcb
mov
leave
inc
xchg
aaa
imul
pop
pop
sbb
scas
cmp
fstps
add
dec
je
and
add
push
sbb
lcall
push
mov
add
ja
fdivrs
add
sbb
add
loopne
or
mov
pop
sbb
mov
into
xor
test
testb
sub
andb
lahf
mov
cmp
rorl
or
add
inc
dec
xor
push
lock
or
pushf
xor
in
xor
xchg
les
mov
and
das
and
leave
adc
hlt
xchg
and
pop
testl
add
pop
loop
adc
subl
xchg
mov
pop
add
pop
add
cli
inc
jg
add
ret
in
ret
or
or
icebp
xchg
mov
test
hlt
dec
sub
insl
lcall
pop
pop
int
sbb
in
mov
fdivl
test
aas
loope
cmp
test
jne
inc
stc
enter
push
cmpsb
sub
stc
dec
daa
fcoml
sbb
and
or
fnsave
cmpsb
pop
xchg
lret
pop
push
mov
ret
add
inc
mov
inc
mov
and
sub
rolb
aam
gs
jecxz
push
imul
mov
fisttpl
aam
sbb
inc
xorb
mov
lea
test
rcrl
pop
lcall
push
shl
jnp
cmp
or
push
add
xchg
mov
stos
hlt
repz
clc
cmp
cld
adc
mov
enter
hlt
in
in
and
sub
hlt
repz
adc
mov
xchg
movsl
hlt
movb
inc
mov
jae
ds
nop
andb
push
out
jmp
push
cmc
arpl
adc
add
sub
hlt
and
daa
hlt
add
mov
inc
mov
and
jp
push
fmull
inc
ret
mov
or
lock
push
adc
daa
sub
hlt
or
fdivl
and
xchg
sahf
jge
and
and
xor
and
mov
ret
adc
pop
mov
mov
mov
jbe
sub
sbb
inc
fmull
std
or
cli
cmc
inc
aaa
inc
add
push
mov
cli
dec
ljmp
lock
sbb
pusha
enter
mov
rcl
mov
dec
add
xchg
dec
cmp
inc
shlb
mov
enter
loope
xchg
mov
mov
pop
int3
rcll
dec
add
or
push
cmc
inc
out
popf
sub
je
and
sarb
add
mov
mov
fiaddl
add
out
pop
cltd
push
dec
push
in
push
fiaddl
and
jge
sub
test
scas
and
in
ret
rcrl
add
inc
or
gs
jb
inc
adc
divl
pop
or
xchg
dec
mov
movsb
sbb
cmp
mov
outsl
lcall
test
fsts
ja
mov
xor
mov
sub
push
pop
stos
cmp
or
pop
fdivs
jae
fisubrl
xchg
lret
aam
add
or
inc
xchg
iret
push
adc
push
enter
add
das
ret
das
sbb
push
popa
or
push
sub
into
mov
or
es
sbb
lds
jo
or
mov
mov
add
pop
aas
dec
jge
inc
cmp
es
pop
push
das
push
enter
push
ficomps
mov
in
fidivl
shlb
pop
fnstcw
push
sar
cmpb
pop
xchg
xchg
jne
jnp
mov
stc
xchg
or
cmp
dec
pop
popa
push
pop
lds
int3
mov
jmp
popa
jns
add
je
adc
in
test
add
mov
cli
mov
lea
popf
pop
pop
mov
test
inc
jno
pop
inc
push
enter
icebp
add
add
xor
mov
test
cmpsb
jle
xor
adc
cmp
je
xchg
gs
mov
cmp
lods
xchg
hlt
and
mov
mov
iret
jmp
sbb
daa
pusha
mov
pop
inc
cmpsl
pusha
stos
xchg
movsl
and
or
shrl
addb
scas
lahf
fs
jo
aaa
cmp
xchg
dec
adc
cmp
sbb
cmp
add
addr16
lods
mov
enter
mov
cmp
js
and
add
push
jno
addr16
or
xlat
adc
movb
jbe
fs
fimull
or
or
out
inc
push
test
sub
das
sub
sbb
sahf
or
mov
sub
push
push
loopne
sbb
es
mov
les
stc
xchg
test
sub
mov
mov
ljmp
push
push
andb
orb
dec
por
iret
or
inc
scas
lfs
jno
mov
lcall
add
int3
sub
ljmp
add
push
aas
push
dec
adc
icebp
jnp
add
lcall
mov
lret
push
add
movsw
add
push
mov
arpl
cmp
fsubrl
mov
cmp
or
pop
cmpb
cmpl
add
xor
xor
pop
mov
vcvttsd2si
xchg
and
lret
push
mov
lds
fimull
adc
sub
cmp
movsb
inc
cmp
les
ret
inc
scas
cmp
je
sub
lcall
cmc
incl
jo
lea
push
imul
cmp
cmp
mov
frstor
in
inc
or
int3
outsb
sub
ljmp
cwtl
pop
testl
adc
adc
mov
jmp
add
add
iret
imul
sub
adc
pop
or
pop
push
dec
je
add
push
mov
mov
in
ret
clc
je
cmp
cmp
jnp
jmp
aam
mov
int
enter
sub
imul
inc
pop
jl
lahf
popf
inc
push
adc
daa
inc
repnz
add
lea
je
inc
cmp
xor
call
push
imul
push
clc
and
adc
out
push
pop
loope
mov
cmp
popa
hlt
iret
nop
and
popf
or
add
insb
add
test
xchg
adc
out
mov
sbb
pusha
cmp
pop
or
inc
pop
cmp
cmp
mov
js
mov
outsb
mov
scas
scas
mov
add
rcrl
add
daa
fisubrl
aam
inc
jo
daa
int
sub
das
xchg
mov
ret
sbb
arpl
test
fisubrs
inc
scas
ffree
xchg
mov
idiv
cmc
push
push
sub
mov
pop
and
sbb
jp
dec
jecxz
push
inc
test
dec
aaa
pusha
lsl
shl
xor
cs
rolb
and
jmp
adc
filds
xor
inc
ja
add
outsl
aam
loopne
xor
out
push
aam
push
cmp
cmp
xor
cwtl
xor
test
cmp
lret
dec
add
xchg
stc
push
aad
cmp
cmp
push
outsb
shrl
jbe
jge
sbbb
mov
loop
push
push
mov
test
mov
pusha
mov
jp
mov
push
fildll
cmp
pop
or
sub
and
sub
stos
testb
cmp
insb
call
popa
inc
sub
sub
push
push
pop
xlat
jmp
cmp
out
push
sti
sbbl
rolb
lret
das
sub
pusha
xor
rcll
xlat
es
add
xchg
add
repnz
mov
sub
jmp
add
nop
cs
stos
xchg
or
or
inc
dec
adc
inc
and
adc
loopne
insb
adc
pop
pop
movsl
xor
cmp
es
adc
insl
or
bound
xorl
fnstcw
dec
jne
push
ret
adc
cmpl
add
sbb
data16
cld
mov
push
jo
int
pop
or
jmp
sbb
push
jp
pop
sub
sbb
lahf
sub
ds
lods
sbb
pop
inc
xchg
push
inc
inc
add
and
clc
add
iret
repz
add
in
notb
add
sbbb
psubb
movsb
sbb
jns
shlb
mulb
movsb
pop
xor
jne
adc
xchg
aam
pusha
jmp
or
mov
sbb
or
lods
lea
pusha
shlb
add
mov
push
or
mov
fdivs
divl
add
add
xchg
mov
inc
xchg
inc
andl
add
rcrb
test
sub
add
jo
insl
jecxz
data16
flds
sahf
ret
and
adc
adc
cmp
and
aas
add
push
lds
add
sbb
sbb
aas
jmp
or
pusha
mov
movsl
mov
outsb
inc
add
pushf
shrb
fxch
sub
daa
pop
push
pop
or
jg
add
dec
cli
jno
adc
adc
push
adc
cmp
in
repz
es
add
mov
test
mov
mov
and
and
cmpsb
pop
cmp
imul
push
add
fs
mov
xlat
pop
cld
dec
mov
jno
xor
push
pop
es
movsb
lcall
mov
inc
dec
push
pop
in
and
dec
call
push
add
pop
or
or
pusha
adc
jl
out
xor
cmp
sbb
lea
fdivrl
jle
rol
pop
fiaddl
shll
in
adc
inc
shll
and
lret
data16
and
sti
add
xor
fcoms
xchg
incl
lock
inc
cmp
lods
mov
mov
dec
mov
andl
les
cmc
out
push
sub
mov
cwtl
stos
fwait
test
pop
mov
cld
pop
add
or
and
cmp
and
hlt
jo
ret
aas
sub
push
pop
inc
cmpl
jne
imul
push
or
or
addl
cmpsb
loop
mov
popa
xchg
xchg
lea
push
fisttps
inc
cmp
je
lock
je
jne
adc
test
test
or
xor
pop
mov
iret
in
sub
add
sub
out
les
pusha
pop
sbb
dec
add
out
inc
adc
mov
sub
or
rorl
dec
sahf
cs
je,pn
mov
rclb
adc
sahf
add
jo
push
jge
sub
add
addr16
adc
je
sti
jnp
fs
xor
xchg
out
pop
sbb
add
dec
outsb
pop
pop
sbb
ljmp
and
in
sub
sbb
adc
aam
adc
notl
enter
xchg
push
stos
sub
insl
mov
js
push
mov
rclb
adc
aam
push
mov
lret
mov
adc
mov
push
or
jmp
insb
addr16
not
mov
add
mov
and
mov
sti
ret
pop
jmp
and
sbb
movsb
mov
sbb
mov
lods
inc
loopne
mov
jmp
dec
sbb
ss
test
sahf
lret
inc
push
lea
sbb
jne
fs
adc
push
xor
es
gs
cmp
push
or
pop
mov
jl
add
outsl
scas
adc
xor
mov
jmp
mov
and
pop
mov
xchg
or
pop
cltd
loope
sbb
outsl
nop
xchg
or
and
push
test
outsb
cmpsl
lods
xchg
sub
lock
xor
lock
sub
sub
pusha
dec
adc
cmpl
fistpl
cmc
inc
inc
dec
mov
test
mov
mov
sbb
sbb
shl
add
xchg
dec
push
and
cmc
sahf
mov
sbb
sbbl
push
adc
add
xchg
mov
or
notb
or
dec
inc
adcl
fistpll
cmp
je
ja
out
xor
jecxz
dec
xor
or
and
dec
movsl
xchg
push
inc
mov
xor
mov
xchg
dec
inc
pop
cmc
cmpsb
sahf
adc
cmp
cltd
call
or
pop
nopl
mov
xchg
sti
loopne
adc
in
es
inc
mov
xchg
sbb
popa
mov
sub
pop
add
pop
mov
shrb
outsb
mov
dec
xor
xor
test
push
xor
sbbb
or
cmp
inc
xchg
mov
lahf
rorl
loopne
sti
sub
sbb
add
movsl
xor
dec
dec
xchg
push
mov
dec
sbbl
cltd
addr16
je
push
out
iret
adc
or
dec
sbb
test
dec
fdivp
test
dec
xor
xchg
inc
cli
mov
cmpsl
mov
mov
mov
push
cmp
sub
arpl
mov
push
inc
inc
gs
xorb
js
adc
inc
push
ficomps
addr16
jl
jmp
push
lds
test
loope
sti
sbb
gs
inc
data16
cmpsb
xchg
and
and
push
popl
xor
icebp
das
adc
rcrl
cmpsl
adc
sarl
pop
or
pop
daa
lods
and
movsb
hlt
jno
push
inc
cmpxchg
pop
inc
xor
inc
lcall
add
divb
sub
lods
mov
loope
adc
xor
imul
dec
ss
movsb
lock
add
pusha
add
cmp
popa
add
data16
pop
sbb
add
pop
or
adc
sbb
aaa
mov
add
bound
fists
fdivl
fwait
add
adc
jp
add
add
push
or
or
and
stos
mov
ds
rorb
mov
jp
cmove
loopne
loopne
sbb
sbb
add
loopne
pop
add
lds
test
mov
ret
pop
xchg
insb
sarl
or
pop
inc
cmp
dec
add
dec
and
pop
roll
jae
imul
mov
int
leave
adcl
mov
xor
adc
stos
loop
ret
push
call
test
dec
call
add
inc
pusha
xor
add
inc
mov
cmpsl
popa
xchg
add
nop
cmp
cs
xchg
dec
xchg
icebp
cmova
cmp
dec
sub
sbb
adc
add
xchg
ja
xchg
je
mov
add
scas
adc
std
arpl
mov
jo
adc
add
dec
xor
mov
clc
xor
loopne
inc
jo
jl
test
nop
lods
jbe
pop
subps
in
sbbl
adc
push
or
nop
jp
sub
pop
sbb
jae
push
mov
mov
mov
arpl
je
or
inc
sub
movsl
sub
scas
rcrl
xchg
add
inc
dec
arpl
je
sub
dec
adc
testl
jnp
dec
sub
cmp
ret
jb
int
or
popw
adc
cmp
dec
pop
jmp
pop
into
movb
fldenv
xor
mov
jmp
cmp
or
dec
dec
push
mov
add
popa
pop
or
popf
notl
pop
stc
cmp
sahf
jb
inc
aaa
sbb
and
mov
sbb
mov
call
pop
and
dec
add
out
sbb
negb
leave
neg
hlt
xlat
add
nop
fildll
mov
and
add
sbb
ror
jl
es
adc
andb
movq
lret
or
sahf
mov
jns
sub
jne
push
pusha
mov
cmp
movb
mov
mov
sbb
sbb
or
cmc
dec
popa
stc
or
sbb
add
pop
xchg
push
pop
lret
xor
leave
xor
sbb
inc
mov
leave
shlb
cltd
idivl
test
fsubrl
fcompl
xchg
dec
sub
imul
les
in
push
sub
mov
pop
aad
mov
or
cltd
xchg
push
leave
testb
push
cmpsb
jne
pop
or
xchg
in
add
dec
pushf
and
mov
dec
sub
push
push
sub
adc
inc
add
lock
int3
add
adc
gs
and
stos
call
sub
dec
inc
and
pop
mov
scas
dec
dec
adc
adc
adc
or
mov
add
or
lcall
push
and
sbb
insb
shrb
mov
ds
cmp
jne
add
sub
inc
ljmp
incl
int3
jge
sub
mov
scas
mov
ss
push
incb
mov
mov
inc
or
sub
xor
loope
fsubr
add
in
fs
fsts
inc
dec
imul
or
orl
gs
xchg
ffreep
and
cmp
loope
stos
xlat
jb
xchg
xchg
mov
mov
scas
iret
sbb
adc
mov
hlt
test
adc
push
and
movsb
and
jbe
push
push
lds
addr16
jl
inc
pop
xchg
in
add
cmpl
dec
insb
adc
shl
xor
push
cli
daa
mov
sub
adc
inc
inc
push
ljmp
sbb
fnstenv
mov
repnz
mov
pop
clc
jg
inc
or
arpl
stc
or
movsl
xchg
mov
mov
loopne
ja
lahf
push
add
xchg
adc
test
push
insb
or
int3
movl
imul
test
sar
cwtl
jl
sbb
roll
aaa
js
pop
push
or
xor
into
mov
mov
imul
loop
mov
bound
shrb
mov
push
or
sarl
add
adc
psubb
sub
movsl
jbe
nop
inc
push
push
add
sbb
push
pop
lock
hlt
or
jo
jmp
pop
jne
sub
jne
out
loope
and
add
dec
addr16
inc
mov
add
dec
lds
cmp
popf
mov
sbb
xor
xchg
adc
mov
ss
dec
and
add
push
dec
mov
jmp
mov
mov
adc
insl
pop
push
inc
dec
lock
and
cwtl
lret
lods
add
nop
inc
inc
mov
mov
dec
fiaddl
out
mov
xchg
pushf
ljmp
data16
and
insb
aad
mov
or
or
mov
or
xor
je
push
cmc
pusha
xchg
imul
pop
xor
repnz
icebp
test
dec
sub
jo
sub
mov
dec
rol
out
cmp
add
jl
and
lea
aas
sbb
test
je
inc
scas
in
adc
mov
pop
aam
add
cmp
xchg
inc
lds
xchg
lods
ss
ja
movsl
push
mov
cmpb
es
push
or
inc
adc
jo
sub
scas
push
push
cld
pop
add
movsl
add
arpl
pusha
rcll
stos
dec
pop
adc
pop
out
pop
dec
loopne
xchg
incb
pushf
push
jp
dec
mov
and
insl
jb
adc
and
sub
or
das
aam
mov
adc
or
and
je
sub
mov
sbb
jne
and
jg
pop
add
jae
mov
inc
filds
and
sbb
xorb
dec
das
shrb
lods
add
mov
push
mov
sbb
das
stc
and
imul
mov
test
pop
and
adc
fisttpl
sarb
jmp
addl
cmp
test
or
xchg
bound
lret
xchg
inc
xor
jns
aaa
jg
lret
out
sbb
mov
and
jbe
jg
add
jo
mov
sbb
popa
daa
ds
sbb
pop
add
movsl
and
cmp
lret
loopne
cmpsl
sub
mov
cmp
add
aas
je
or
push
add
push
outsb
loopne
xchg
pushf
jl
cmp
mov
je
mov
sbb
or
fadd
cmp
push
jmp
filds
inc
cmp
rol
jge
js
xor
push
out
adc
sbb
jl
cmp
into
adc
dec
xlat
jb
rcrl
es
leave
adc
sub
adc
sar
popf
add
mov
pop
adc
cmp
xor
aas
aam
add
aad
cmpb
lret
dec
testl
daa
xchg
iret
mov
flds
test
insl
loop
xlat
sti
mov
rol
das
jge
montmul
cmpsb
inc
rolb
sar
popa
add
xor
fmull
xor
sbb
loop
pop
xlat
leave
lods
popa
pop
jl
or
push
adc
sbb
jo
pop
and
mov
hlt
adc
or
add
lods
add
inc
testl
cmp
aas
jne
xor
jge
sub
xchg
mov
mov
pop
aaa
add
inc
insl
sub
and
add
cmp
pop
js
push
mov
loop
pop
notb
insb
rclb
push
outsl
faddl
push
bound
in
inc
xlat
dec
lea
adc
les
xor
test
nop
xlat
adc
pop
inc
shl
fcmovnbe
test
rorb
stos
inc
cmp
mov
loopne
aaa
scas
push
nop
das
jne
pop
push
loop
out
sbb
push
mov
cmpxchg
add
jo
pop
test
rol
sub
mov
insl
adc
pop
ret
imul
mov
int3
jo
mov
cmp
push
shll
lods
rcll
or
sub
subl
and
sub
push
and
sub
or
xor
sub
lock
cmp
pop
cmp
push
in
test
xor
pop
push
arpl
nop
or
in
inc
mov
mov
cmpsl
xor
or
push
cmpsb
dec
pop
mov
push
push
out
mov
jb
andnps
arpl
push
daa
adc
mov
pop
inc
sbb
push
aam
xchg
lods
cmp
or
or
xlat
mov
or
inc
add
push
mov
sti
pop
sub
pop
or
sbb
inc
sbb
and
lret
jbe
in
inc
into
mov
mov
je
testl
orps
mov
data16
in
repz
sbb
add
insb
push
cmp
sbb
adc
push
scas
icebp
shlb
xor
sub
nop
aam
add
or
paddsw
es
mull
daa
loope
nop
in
dec
mov
pop
call
mov
sbb
mov
or
inc
dec
sbb
mov
fwait
lret
and
sub
fildl
movsb
jle
lahf
sti
mov
mov
hlt
xor
adc
cmpsl
ja
xlat
or
cmp
scas
test
outsb
lds
push
inc
sbb
xor
lods
imul
push
movsb
aaa
aam
addb
daa
rorl
mov
call
jle
sbbb
xor
mov
es
fiadds
fs
mov
insb
or
inc
lcall
add
nop
push
xlat
mov
rcll
out
fadds
pop
jne
out
insl
call
mov
sub
push
jne
lods
adc
loope
loope
mov
int
pushf
push
inc
shlb
addr16
jmp
dec
or
pop
int3
shlb
or
pop
sub
mov
scas
das
jge
je
fadds
jle
divl
inc
addl
or
adc
xor
jg
aad
push
insl
inc
xchg
ret
ss
mov
xchg
jnp
cmp
pop
sbb
mov
or
mov
pop
mov
rolb
xor
dec
stos
loop
or
ljmp
xor
push
and
cld
in
sbbl
inc
add
xchg
and
cld
cld
cld
sbb
adc
add
nop
mov
fidivs
mov
mov
andl
addb
xor
jmp
insl
jecxz
inc
xlat
add
push
push
pop
push
out
addr16
or
aad
push
arpl
sub
enter
jbe
adc
in
sti
jmp
aad
pop
adc
push
adc
add
mov
ss
sbb
ss
xchg
lcall
adc
pop
sbb
xor
xchg
cmp
push
xchg
inc
mov
pop
es
leave
sub
add
and
and
cltd
mov
int3
dec
popa
enter
pop
add
adcb
imul
cmp
adc
test
cmp
cmp
xor
add
cmp
mov
cld
xchg
push
inc
pop
mov
and
pop
mov
fcoms
adc
pop
pop
jecxz
fbld
dec
vmovq
or
jnp
push
xor
xor
leave
and
dec
test
and
leave
pop
pop
push
xlat
nop
xchg
divb
push
push
mov
cmp
addr16
dec
inc
jns,pn
ss
push
ret
sbb
inc
push
arpl
mov
push
sub
jo
cmp
sbb
pop
iret
inc
mov
inc
cwtl
push
push
xor
jmp
movsb
insl
movsl
mov
sbb
orl
push
out
outsb
inc
js
mov
sbb
fildll
pop
out
dec
dec
dec
pop
push
call
and
jp
push
inc
pusha
mov
std
dec
and
out
jl
or
jle
dec
dec
push
test
cmp
push
popa
xor
pop
jbe
adc
inc
xor
jne
fs
test
mov
dec
xor
xchg
clc
or
jmp
push
fcoms
adc
push
fisubs
adc
or
mov
dec
jbe
sbb
push
jg
inc
add
rcll
sbb
adc
leave
push
push
add
mov
and
jo
cmp
sbb
push
or
jp
dec
pop
fwait
shll
es
mov
gs
pop
pop
pop
lock
out
push
jle
loope
stos
jbe
sbb
aas
das
mov
test
test
mov
push
sbb
lods
adc
mov
bound
push
in
dec
xlat
imul
pushf
or
sbb
push
adc
cmpsl
sbb
std
mov
or
nop
or
in
std
repnz
adc
inc
popa
add
mov
jne
mov
test
ss
add
in
push
rorb
pop
negb
mov
mul
lock
fidivrs
xorl
js
adc
fldl
mov
ret
xchg
inc
and
and
mov
pop
adc
mov
outsl
jne
push
sub
je
pop
js
insb
sbb
imul
adc
scas
nop
aam
aam
pop
inc
aam
or
jl
or
cmpsl
popa
lock
jne
lret
mov
mov
dec
mov
negb
pop
lahf
pop
cs
leave
cmp
mov
dec
pop
outsb
or
cmp
cmc
adc
add
shrb
rcr
adc
cmp
cmpsb
pop
dec
add
pop
divb
mov
xor
call
pusha
js
cmp
xchg
mov
xlat
arpl
mov
or
cmp
aam
lds
cmc
mov
push
jp
and
das
mov
das
es
inc
dec
inc
xchg
xchg
sbb
adc
dec
fs
orb
sbb
xchg
pop
push
ret
fmull
push
lahf
sbb
sahf
lock
xor
shlb
and
mov
insb
jmp
movsl
mov
xchg
jne
movl
es
lcall
xorb
mov
and
mov
int
stc
out
dec
inc
mov
nop
pop
std
xor
mov
or
push
repz
dec
mov
xchg
xchg
push
into
mov
mov
mov
push
mulb
mov
inc
add
shlb
xorl
aas
iret
xor
push
adc
ds
gs
das
pushf
shr
add
xchg
inc
adc
xor
jmp
movb
cltd
cwtl
jbe
or
test
sub
mov
into
es
sub
dec
das
into
sbb
lock
rolb
push
inc
cmp
jne
and
rol
sub
dec
clc
xor
push
pop
xchg
outsb
pop
mov
ds
int
adc
add
out
cs
mov
rclb
cmp
outsl
xchg
pop
je
jmp
xorb
iret
sbb
xor
pop
sub
in
mov
mov
arpl
dec
inc
loopne
push
or
jne
pusha
pusha
jmp
sub
mov
sbb
cmp
add
xor
xchg
add
outsl
sti
xor
sub
push
cli
push
imul
jnp
adc
clc
pop
push
and
inc
or
xor
lock
or
es
sub
pop
add
sbb
imul
lock
xchg
inc
pop
loopne
hlt
roll
enter
cmp
sub
mov
cmp
and
xor
pusha
insl
add
xor
pusha
add
orl
je
pop
hlt
cmp
pop
rcll
xor
ret
iret
and
cmp
sbb
push
sub
pushf
sbb
test
add
adc
orl
sbb
inc
and
xlat
sub
mov
xchg
sbbb
mov
cmp
lahf
mov
sarl
pusha
inc
xor
test
cltd
sbb
clc
pusha
lea
gs
push
mov
dec
add
lock
xchg
add
add
cmp
add
inc
push
jl
pop
adc
inc
push
sbb
add
mov
xor
sbb
xlat
inc
sbb
fucomip
pop
int
sbb
sub
jb
lcall
push
mov
mul
xchg
mov
mov
loope
inc
insl
sbb
jo
push
stos
das
imul
sbb
sub
add
adc
popf
pop
test
inc
or
inc
inc
bound
mov
add
cltd
push
scas
sub
mov
or
jo
add
xchg
push
pop
push
and
cmp
inc
jge
gs
adc
lods
insl
arpl
xchg
mov
xlat
mov
daa
mov
sub
movsl
mov
nop
jmp
mov
sbb
cmp
sub
push
push
inc
dec
test
data16
les
int3
cmp
push
ret
ja
xchg
dec
jns
repnz
in
out
andl
xchg
or
push
into
icebp
mov
push
mov
or
cmpsb
xchg
push
aas
cmp
xchg
adc
push
sub
jp
jbe
add
pop
in
imull
mov
movsl
or
mov
in
ds
in
shrb
xchg
mov
inc
movsb
in
pop
movsl
and
into
leave
je
pop
push
add
xchg
sub
or
lcall
pop
adc
ret
fsubrs
or
je
or
add
or
leave
or
or
push
data16
cwtl
idivb
cmp
ficoml
cmpsb
adc
dec
insb
cmc
or
or
fsts
cmp
push
test
sub
and
lods
dec
cmp
test
xchg
mov
and
mov
daa
aam
xchg
pop
int
cwtl
xor
add
std
xchg
xchg
xor
nop
movb
and
add
test
into
inc
aaa
or
popf
or
movl
js
out
dec
mov
jl
xor
dec
add
add
mov
shrd
xchg
sub
rcrb
inc
or
mov
xor
int
xor
arpl
daa
or
mov
pop
sar
mov
daa
cmp
call
cs
mov
cmpsl
mov
lea
sbb
loopne
mov
sti
inc
lods
movntq
out
push
cmovae
sahf
adc
pop
test
or
lcall
sub
dec
inc
dec
dec
dec
inc
dec
dec
and
ss
sbb
sbb
addb
rcrb
jge
fs
or
or
lods
leave
outsb
xchg
mov
sbb
cltd
lcall
mov
popf
out
pop
add
push
jl
scas
icebp
push
dec
dec
in
pop
sub
mov
cmpb
cld
sarl
mov
seta
sbb
xchg
mov
dec
inc
dec
cmp
test
inc
nop
dec
ficoml
cwtl
jno
movsl
shl
push
test
add
out
adc
dec
push
daa
xchg
mov
push
rcrb
mov
sbb
add
dec
xor
inc
jb
mov
mov
mov
or
inc
fsubrs
inc
insb
es
mov
aam
inc
cmp
xchg
inc
and
outsl
add
push
lods
repnz
call
outsb
push
cmp
add
xchg
les
insl
sbb
lret
sub
push
xor
das
add
push
sbb
and
nop
push
enter
sbbl
sub
inc
dec
add
dec
pop
cmp
inc
and
rclb
push
faddl
fistpl
imul
fsubrl
sbb
sbb
push
sbb
inc
js
je
enter
popl
adc
xorb
test
pushl
addr16
mov
rolb
xor
imul
das
js
xchg
mov
fs
xor
pop
dec
nop
xor
les
cmpsb
inc
mov
push
fstpl
cmp
xchg
repz
roll
add
cmp
mov
dec
cmpsl
pusha
addl
les
inc
pop
add
xor
dec
push
enter
cmp
adc
les
cmp
sub
add
inc
mov
push
inc
les
add
incl
push
or
mov
movsb
xchg
add
loop
leave
gs
ss
push
mov
ljmp
enter
dec
sub
cld
ucomiss
xchg
sub
jle
mov
jne
test
loopne
jmp
ret
test
and
add
xor
and
or
orb
in
xor
rcll
pop
jbe
add
daa
adc
and
adc
add
or
add
xor
push
push
xor
test
pushf
inc
in
nop
add
add
push
rorb
rolb
lods
cs
push
xchg
mov
dec
xor
jbe
test
xor
push
push
data16
or
mov
push
ljmp
add
sub
daa
add
xor
call
sub
jecxz
test
cmp
pop
xchg
dec
loopne
sbb
je
xor
scas
and
add
clc
push
jg
adc
jae
cmp
cmp
cmp
jns
aam
push
rcr
dec
mov
popf
dec
sub
push
push
cmp
dec
pop
imul
sbb
inc
cmpsb
xor
add
sub
inc
daa
fwait
lret
adc
ds
jg
push
imul
sub
into
sti
cmpsb
jo
pop
jb
js
add
sub
adc
mov
push
add
dec
mov
add
xor
or
ds
andb
pop
stos
sub
mov
xchg
dec
fcompl
cld
mov
movsb
pop
xor
mov
je
das
xor
or
loopne
jg
movl
test
push
cld
js
adc
ret
mov
test
adcl
ss
stos
fwait
jecxz
gs
lret
mov
in
icebp
inc
xor
cltd
and
adc
adc
jg
inc
add
lods
rclb
gs
addr16
mov
scas
cmp
mov
jbe
int
iret
test
loopne
repnz
loopne
or
xor
lsl
fadds
clc
mov
cmp
faddp
enter
add
mulb
pop
or
test
ss
dec
pop
into
movsb
sbb
push
mov
mov
orb
imul
push
mov
push
jg
loope
cmp
xor
sub
dec
or
mov
loope
push
in
sub
dec
test
mov
sti
es
lcall
sub
push
mov
mov
pop
dec
pop
add
cmp
sub
inc
rclb
push
xor
push
cmp
lods
and
add
xchg
xchg
imul
dec
cmpsl
repnz
or
mov
pop
pop
add
xor
aam
sti
ja
or
push
xor
jle
or
add
movsb
addl
pop
fs
cmp
test
inc
pop
and
cmp
lods
dec
xorb
dec
jno
inc
mov
jmp
arpl
sub
loop
xchg
sub
xor
mov
cmp
cmp
mov
sub
shlb
ds
call
mov
jmp
push
jnp
adc
mov
arpl
pushl
insb
je
push
pop
ljmp
enter
fldenv
stos
and
add
mov
mov
jo
pop
mov
test
jo
xlat
pop
mov
dec
adc
addb
push
inc
stos
xor
mov
push
dec
icebp
ret
movsl
and
push
sbb
push
rorb
or
fs
shrl
and
mov
cmp
pop
pop
jb
or
aad
xor
ret
mov
cs
adc
outsb
dec
sti
add
mov
mov
xor
pop
or
int3
aad
sub
nop
nop
xor
rolb
jno
mov
outsl
xor
mov
push
cmc
dec
popf
pop
and
frstor
xchg
outsl
pop
xor
or
and
mov
mov
inc
ficoml
xlat
mov
loopne
mov
lret
cmp
pop
add
add
subl
push
mov
aam
mov
movsl
adc
imul
insl
fs
lahf
or
pop
sbb
inc
popa
testl
mov
or
mov
fsub
orl
cmp
push
mov
inc
or
insb
mov
add
jmp
sbbl
popa
add
les
rorl
sbb
enter
insb
inc
sbb
js
outsl
cli
fiadds
or
outsb
mov
pop
pop
popf
cmp
fdivl
mov
arpl
cmp
pop
repnz
aad
add
ficompl
mov
dec
mov
mov
xor
adc
test
push
loope
imul
mov
in
je
or
leave
fiaddl
jle
ja
xchg
fdivrs
and
or
ficomps
daa
cmp
push
test
sbb
imul
adc
dec
es
bound
loop
or
fstps
fs
dec
repz
jnp
pusha
das
or
pusha
rolb
ds
aas
movsb
xor
inc
lea
sub
and
pop
fcompl
push
and
sub
jmp
inc
shlb
mov
inc
push
dec
fstpt
push
add
imul
and
jne
mov
dec
scas
mov
or
fistl
push
jae
mov
push
or
xor
jo
mov
mov
clc
mov
sbb
sbb
jb
pop
push
add
add
lea
push
sbb
popl
nop
ret
icebp
inc
add
sti
ror
loopne
bound
sub
outsl
cs
call
pop
jbe
xlat
or
fnstenv
inc
dec
mov
cmp
push
mov
cmpb
add
adc
adc
outsb
mov
out
push
add
sub
xor
loope
aad
sbb
sbb
je
push
pop
mov
sub
xchg
add
and
push
dec
push
aaa
adc
aam
adc
fstps
inc
daa
pushf
jne
aam
inc
pusha
gs
add
cmp
push
jmp
sub
cmc
fstpl
jo
sub
pop
stos
add
lods
add
imul
fstl
cmp
ret
and
sub
sub
cmp
push
ss
inc
mov
inc
loop
mov
or
fiadds
mov
sbb
dec
js
lret
xor
sub
jne
mov
rolb
add
or
lock
clc
lea
lcall
xchg
pop
push
gs
les
rcrl
dec
test
int
xor
and
inc
dec
and
cmp
jnp
xor
sbb
imul
push
inc
push
clc
add
and
mov
dec
je
jns
and
xor
in
push
pop
int
fs
incb
and
aaa
fs
sub
push
mov
sbb
aas
ret
pop
sub
pop
and
pop
push
mov
and
inc
movsl
xchg
add
imul
rolb
outsl
push
sbb
inc
cmp
add
xor
xor
xor
sti
sub
ss
sar
mov
or
dec
mov
hlt
xor
xchg
dec
ret
mov
lock
push
es
dec
pop
int3
je
or
push
fsubl
adc
push
add
dec
pusha
and
into
adc
test
fidivs
cmp
daa
and
adcl
push
jge
dec
cmp
shlb
push
inc
dec
mull
pop
hlt
push
sub
mov
jecxz
xor
das
cmp
inc
sub
das
xlat
hlt
lods
test
mov
push
add
shll
syscall
push
add
shlb
push
inc
aam
mov
sub
das
push
iret
xchg
or
xchg
xchg
sub
inc
and
and
cmp
pop
aas
mov
dec
add
fcompl
push
fiaddl
mov
aam
or
adc
scas
sbb
das
add
dec
or
or
mov
pop
xor
ret
cmp
sbb
sbb
test
and
fmuls
mov
je
test
dec
sbb
jg
ror
insb
or
push
cmp
jne
clc
cmp
cmpsl
adc
dec
pop
xor
in
mov
adc
lea
or
or
pop
adc
stc
or
es
mov
adc
inc
ret
jo
xchg
jp
movsb
aaa
xor
pmuludq
mov
xor
mov
xchg
inc
mov
jne
add
outsl
xorl
in
and
lcall
jecxz
add
bsr
cwtl
xchg
add
leave
inc
outsl
add
pop
push
add
xchg
jmp
pop
shlb
fadds
push
pop
test
sub
aad
outsl
mov
lret
or
and
movsl
dec
ret
sbb
das
in
jbe
inc
push
popf
xchg
mov
jne
ret
jmp
or
or
mov
add
add
mov
fadd
and
arpl
adc
aad
add
pop
hlt
daa
xchg
cli
mov
shl
mov
xchg
sti
lock
cmp
cmp
lea
sub
mov
pop
pop
pop
test
cmp
jg
cmp
mov
add
and
push
push
test
inc
pop
or
arpl
out
icebp
ljmp
xchg
sbb
push
ja
jne
out
xchg
and
outsb
sub
inc
dec
jecxz
call
jo
xor
shll
ret
adc
mov
xchg
les
mov
mov
lahf
mov
xchg
mov
pop
cmpsb
mov
push
xor
js
je
test
ret
jl
sub
dec
cmp
ds
mov
xchg
jge
xchg
mov
int3
inc
sub
cltd
lds
jl
or
inc
gs
std
mov
xor
push
mov
push
pop
jg
inc
pop
filds
fistps
mov
or
or
add
pop
daa
addl
mov
mov
xlat
ret
lock
cmpsl
push
pop
sbb
xchg
adc
mov
shl
lock
lds
inc
movsl
push
or
and
cld
pand
jmp
cmp
cwtl
pop
xor
sub
push
sbbl
push
or
pop
fdivs
lock
sbb
push
mov
or
cli
adc
dec
movsl
test
adc
cli
ds
leave
fmuls
sbb
repnz
inc
aaa
adc
adc
lretw
mov
clc
xchg
pop
add
add
inc
jne
sbbl
cwtl
les
js
jne
movb
lods
fists
push
add
and
jbe
add
or
cs
or
jge
mov
sub
sbb
push
test
addb
sbb
xor
push
or
inc
jns
idivl
movsl
aas
adc
sub
addr16
mov
add
sbb
call
xlat
in
push
or
fstpl
ret
cmp
sub
pop
mov
push
dec
fisttps
fdivs
outsl
adc
pop
sbb
adc
sub
fdivl
jecxz
pop
rorl
mov
jle
and
push
pop
jmp
add
mov
insl
or
pop
or
or
jns
lret
sub
add
add
pop
add
cmp
or
sbb
aam
je
jge
and
and
mov
mov
je
push
adcl
ljmp
pop
and
add
pop
in
inc
cwtl
or
fimuls
mov
mov
into
add
sub
pop
xlat
adc
mov
loop
dec
shr
or
test
lods
inc
dec
fstps
aas
pusha
add
fnstsw
dec
xlat
sub
andb
push
in
orb
cmp
sub
and
out
or
adc
out
jmp
jo,pn
cmc
cmp
adc
or
xor
insb
and
fidivl
sub
adc
jo
and
int
neg
sarb
repnz
movsl
adc
xchg
jo
jbe
imul
je
stos
and
jp
mov
mov
aam
push
xchg
js
lds
mov
dec
les
add
or
cmpb
ljmp
adc
inc
adc
fwait
or
xchg
xor
push
pushf
lret
jecxz
sbb
mov
xchg
pushf
push
jne
and
dec
je
adc
push
clc
push
mov
repz
mov
nop
adc
sti
shlb
fcompl
nop
push
sub
fmuls
push
ret
bound
xorl
mov
fdiv
lcall
sub
ret
cmp
mov
nop
popa
xchg
notb
adc
shlb
adc
imul
push
nop
les
xchg
aad
cmpsb
shlb
add
jmp
push
sbb
sbb
inc
icebp
push
in
and
add
add
cmp
scas
movsl
inc
push
loopne
push
pop
fiaddl
add
xorl
inc
aas
mov
in
ds
adc
mov
bsr
sbb
test
and
dec
sarb
jle
mov
cld
outsb
inc
cmp
je
test
mov
mov
aaa
lds
mov
sub
push
lods
cmpsl
lods
sbb
adc
add
loopne
enter
xchg
xor
add
pop
rol
push
gs
xchg
jl
enter
cwtl
cmp
add
loop
dec
dec
insb
push
and
xchg
fmuls
in
push
es
call
sti
inc
je
insb
push
shlb
jns
push
inc
and
pop
xor
add
add
mov
mov
or
in
gs
inc
xlat
add
popa
cwtl
fcomps
add
push
jo
in
mov
mov
cmpsb
and
ret
xchg
loopne
xchg
popl
push
add
jbe
ret
sub
adc
dec
nop
cmp
gs
add
mov
mov
jbe
popa
jb
fs
cmpl
pusha
pop
or
jecxz
fsub
int
dec
daa
lock
fbstp
jo
nop
pop
add
repnz
addr16
out
cmovb
push
jno
push
int3
gs
xor
cs
repz
and
addb
push
mov
or
lods
or
xor
xchg
sub
pop
mov
popf
pop
xchg
sub
in
push
add
and
je
xor
int
xor
sub
inc
insl
and
mov
sahf
insl
and
dec
dec
fstl
inc
xchg
mov
mov
addr16
mov
js
add
jno
inc
inc
mov
adc
mov
cmp
call
adc
cld
clc
jne
push
fld1
or
adc
inc
cmp
sar
int3
test
jnp
cmpsb
sbb
inc
adcb
and
lods
das
sub
push
xor
mov
je
in
xlat
and
adc
xchg
hlt
sbb
xor
cld
push
mov
cmp
leave
pop
daa
or
xor
cmp
xchg
cmp
dec
add
jb
imul
push
mov
imul
adc
decb
push
call
test
adc
lea
fcoms
orb
pop
mov
sbb
add
jno
call
pop
sub
sub
lret
daa
push
dec
inc
cmp
sub
cmpsl
xor
pop
sbb
add
add
cmc
mov
dec
push
inc
adc
add
and
pop
push
gs
ficoms
test
pop
pop
xchg
insb
insb
pop
push
outsl
pop
or
jg
mov
jns
mov
clc
jbe
push
jmp
inc
push
mov
add
or
sub
pop
adc
in
add
stos
cmp
or
mov
xor
fs
addr16
push
js
or
fdivs
arpl
sbb
add
push
bswap
push
sbb
push
mov
add
push
mov
das
lods
pusha
out
pushf
insb
inc
xor
das
pop
int
das
rclb
cs
mov
das
dec
adc
fwait
xchg
int
xor
sub
or
fdivrs
das
add
or
orl
jne
testl
mov
adc
push
rolb
push
je
in
mov
or
dec
push
loope
jae
outsb
je
jae
stos
out
sub
lods
inc
sub
or
orb
pop
daa
cld
setns
push
pushf
cwtl
xchg
xchg
xchg
xchg
xchg
nop
mov
test
xchg
xchg
je
insb
push
fs
pop
pop
mov
push
dec
dec
test
jbe
outsb
add
mov
pop
outsb
add
push
aad
ds
sub
repnz
mov
add
add
jge
mov
rorb
fwait
mov
insb
outsl
arpl
sbb
add
ja
je
xor
popf
mov
push
add
out
mov
inc
es
scas
imul
es
xor
push
cmpsb
mov
cltd
mov
adc
dec
xorb
adc
stos
push
nop
mov
pusha
adc
sub
adc
or
adc
and
or
pop
lret
loopne
shrl
shl
imull
lock
add
add
imul
rol
aaa
insl
pop
stos
push
lret
fsts
stos
outsl
cmpsl
mov
jns
aam
pushf
mov
pop
movsl
mov
dec
outsl
rolb
add
movsb
es
sub
jge
test
cld
lcall
mov
xchg
js
pop
sub
cli
cmpsb
ret
or
push
jns
inc
add
pop
mov
lahf
addb
xchg
adc
inc
or
ja
enter
push
cmp
insl
and
cmp
adc
add
push
rol
scas
add
push
cmc
push
inc
push
push
jbe
dec
mov
jns
push
pop
sub
mov
sbb
or
jnp
in
nop
push
stc
cmpsl
or
xchg
test
add
add
push
pop
sub
or
inc
push
push
cmp
xorb
pop
lods
xchg
or
and
jg
fs
inc
ds
or
or
pop
sub
lea
jle
prefetch
push
push
cmc
fisubs
or
inc
hlt
adc
inc
fldl
jo
push
pop
ret
push
xchg
mov
jo
jecxz
xor
cmc
sbbl
fisttpll
and
lahf
loope
dec
outsl
cmp
xor
jb
inc
xor
push
adc
inc
mov
add
xchg
and
add
jle
cmp
or
out
jns
inc
pop
pop
or
or
sub
aaa
jbe
popa
mov
dec
xchg
xorb
pusha
pusha
or
or
js
js
nop
movsb
xor
inc
popf
or
subb
popa
roll
testb
xor
aaa
and
loopne
repnz
add
movsl
sahf
je
loope
adc
rorb
add
inc
cwtl
push
pop
adc
lret
call
sbb
je
mov
pusha
fs
inc
jecxz
mov
xchg
lret
fistpll
arpl
dec
jle
out
clc
call
aam
jbe
add
or
rolb
fcomps
mov
dec
xchg
ret
and
add
or
call
or
add
mov
fwait
inc
ja
je
adc
cmp
leave
sub
xor
xchg
je
xlat
push
push
inc
xor
jo
cld
push
iret
jb
shlb
inc
and
addb
aas
xor
mov
sbb
inc
jle
test
dec
mov
lds
pop
pushf
mov
or
inc
jnp
xchg
dec
je
adc
lcall
fsubrp
mov
aas
ret
pusha
add
add
imul
mov
test
sbb
add
inc
adc
mov
inc
lret
adcl
sbb
jge
out
mov
pop
inc
sub
add
xchg
and
jbe
ret
pop
pop
pop
sbb
xor
inc
icebp
es
inc
add
ret
xchg
test
cwtl
adc
and
inc
pusha
cmp
ds
push
dec
push
adc
pop
sub
jmp
jns
adcl
xchg
jge
jmp
fdiv
outsb
subl
inc
and
inc
xor
sbb
mov
ljmp
das
jo
insl
es
fisttpl
dec
subl
adc
or
xor
sti
bswap
and
stc
sub
insl
in
push
adc
and
cli
adc
test
add
imul
js
add
pop
inc
push
fisubl
add
and
adc
jmp
xor
sub
stos
test
jmp
mov
sbb
push
jp
fs
jg
cmp
lret
dec
pop
mov
sub
imul
jmp
adc
adc
add
push
xchg
hlt
out
inc
jns
je
jo
fstp
or
mov
test
rorl
pop
pop
pusha
leave
sarb
inc
out
pop
and
xchg
fistl
cmpsb
icebp
xor
sahf
inc
test
pusha
lcall
dec
or
je
add
mov
pop
insb
loop
pop
or
jmp
mov
push
add
add
int3
scas
nop
ds
dec
gs
clc
xchg
sub
push
repnz
fcompl
cli
adc
jp
xchg
and
adc
repz
mov
xchg
inc
icebp
and
int
xor
jmp
adc
dec
insl
inc
iret
mov
pop
repnz
jmp
pop
or
sub
enter
jmp
adc
ret
outsl
mov
or
xor
divb
pusha
sub
inc
sub
add
pop
in
lret
shlb
sub
inc
or
fmuls
dec
popa
fdivrs
xchg
mov
cmpb
sbb
inc
mov
out
fildl
mov
test
lds
movsb
add
mov
xchg
cmp
hlt
rcrb
inc
jb
lret
in
xlat
bound
ja
data16
ret
clc
adc
inc
pop
mov
and
jl
xchg
adc
mov
xor
jnp
mov
ja
push
test
repnz
dec
adc
cmp
pop
outsl
sub
add
or
dec
imul
push
or
xchg
xchg
clc
mov
int
mov
add
and
lcall
mov
jne
sarb
xchg
mov
mov
test
add
xor
lahf
movsb
mov
pop
push
cmp
hlt
inc
int3
rcll
push
pop
sbb
xor
test
sbb
xor
leave
rorb
dec
data16
in
stos
int3
push
jmp
mov
scas
mov
sub
gs
adc
xor
subb
jns
inc
jne
rorb
pop
das
movsb
mov
add
or
xor
sahf
sub
mov
in
and
sbbl
add
add
pop
dec
mov
rcrb
sbb
adc
hlt
sbb
xchg
test
out
push
xchg
jbe
mov
imul
sub
or
jl
and
cmp
sbb
aad
cmc
jo
xorb
test
imul
call
js
mov
mov
test
xor
or
mov
dec
and
test
cmp
cmp
adc
jne
adc
jo
setbe
imul
adcb
dec
mov
insb
adc
aaa
mov
inc
clc
or
push
xor
cmpsb
push
mov
pop
xor
dec
out
xchg
add
add
testl
pop
pushf
pop
mov
aas
movb
push
lret
add
sbb
push
adc
add
test
mov
or
test
aam
mov
sbb
or
jno
fisttpll
cwtl
xor
shr
mov
sbbb
jle
int
push
lea
das
xchg
je
sbb
pushl
inc
push
inc
shlb
push
cmp
sahf
jns
add
or
bound
inc
adc
jle
sbb
lds
mov
outsb
sub
jecxz
jmp
mov
adc
push
jmp
cmp
jge
sub
shll
mov
loope
push
gs
test
inc
icebp
and
mov
jmp
adc
sub
xchg
xlat
std
mov
mov
push
and
insl
out
mov
add
andl
mov
and
fdiv
xchg
push
xor
lea
pop
lea
adc
lds
push
push
int
and
sbb
jno
mov
inc
cmp
dec
xlat
fldl
cmpsl
shlb
mov
loopne
and
xor
inc
imul
fsubrl
sbb
lea
cmp
sub
xor
inc
cmpsl
divb
mov
mov
testl
fcmovnb
je
lock
or
add
daa
dec
add
and
or
shrb
ret
psubusw
xchg
sbb
mov
clc
and
enter
push
icebp
jg
add
sets
mov
mov
cwtl
pop
add
xchg
mov
sub
inc
enter
les
push
leave
mov
jb
arpl
and
add
leave
jmp
mov
lds
cmp
inc
sbb
xor
pop
bound
in
and
inc
sbb
push
std
or
mov
mov
pop
xchg
adc
lods
add
pop
mov
pop
jb
daa
aas
int3
pop
nop
jmp
call
sub
in
in
xor
lcall
mov
jnp
fstpt
push
add
jg
enter
subl
pop
jo
loopne
lea
jae
xchg
add
inc
cmp
adc
data16
push
push
rolb
push
bound
sub
dec
sbb
pop
pop
clc
push
push
inc
push
push
sub
ret
jl
xor
adc
mov
adc
mov
data16
push
in
dec
pop
insl
sub
imulb
in
adc
nop
repnz
dec
pop
or
pop
outsb
mov
and
add
push
add
dec
inc
imul
js
inc
adc
or
in
hlt
cmp
lret
mov
and
xor
or
loopne
cmp
or
xchg
cs
jmp
mov
sbb
push
or
add
lods
mov
mov
mov
ret
dec
movl
iret
js
cmp
mov
add
in
inc
pop
mov
lods
dec
ss
xchg
aas
sbb
xchg
addr16
shl
push
lahf
jge
add
sbb
pusha
movsb
scas
push
cmp
insl
push
push
mov
lods
push
mov
or
cmp
aaa
mov
fs
cmp
mov
fiaddl
subl
xchg
leave
push
enter
xchg
xchg
inc
pop
xchg
lcall
mov
stc
int
fidivs
bound
out
sahf
push
inc
sub
jb
jae
adc
xchg
xchg
xor
imul
out
out
hlt
cmp
push
popa
dec
les
pop
repz
lcall
push
imul
dec
jae
jo
sub
movsl
dec
js
dec
adc
test
fs
or
movsb
mov
pop
mov
lea
mov
sub
mov
ret
xchg
cmp
out
xchg
rcrb
inc
add
add
push
sub
inc
mov
mov
lock
nop
push
notl
sub
mov
sbb
xchg
mov
add
or
push
sbb
inc
jns
mov
enter
xchg
inc
pop
push
pop
insl
and
xor
mov
add
je
dec
xchg
clc
add
push
fldl
inc
aaa
daa
mov
sbb
jbe
mov
xor
test
inc
sbb
nop
pop
adc
push
sbb
mov
cmpsl
xchg
or
dec
test
in
and
and
cld
std
xchg
lea
or
xchg
xchg
lea
loop
mov
mov
sbb
gs
xchg
movsl
in
push
jae
cmp
es
push
stos
pop
adc
rorb
notb
sub
sti
mov
or
mov
bound
xor
xchg
mov
pusha
idiv
rolb
out
jne
cli
pop
jno
or
inc
lods
adc
insb
andl
popl
add
in
xchg
outsb
push
add
je
xor
fs
jl
test
repz
jns
xchg
nop
push
fdivs
pop
pop
or
in
mov
jne
and
push
add
and
test
or
shll
xlat
xchg
cmc
cmpsb
nop
sbb
out
jb
dec
sti
sahf
and
push
call
enter
sub
or
xchg
movsl
lods
lret
xlat
pop
add
test
test
orl
shr
lds
rolb
adc
mov
pop
rolb
xchg
pop
dec
scas
inc
xor
mov
mov
cmpb
pop
mov
push
loopne
pop
jns
jno
add
lcall
jns
cwtl
js
xor
and
push
testl
fnstcw
outsl
cwtl
lcall
push
pop
dec
lods
popa
dec
fnsave
adc
ja
je
ljmp
jp
sahf
out
or
ret
mov
orl
xorb
dec
ffreep
pop
mov
mov
dec
dec
mov
sbb
and
adc
and
xor
add
mov
dec
adc
xchg
stc
lcall
test
std
cmpsb
shrb
inc
adc
push
adc
push
call
or
mov
dec
push
push
les
inc
mov
insl
jae
and
pop
jmp
or
or
jns
push
jmp
xchg
and
jo
push
fs
adc
push
cmc
xchg
pop
sub
add
or
mov
adc
adc
dec
mov
mov
adc
push
rorl
or
sbb
mov
and
and
push
sbb
mov
or
adc
mov
roll
dec
or
push
pushf
pop
pushf
pushf
pusha
lods
pop
pop
inc
pushf
mov
add
test
ror
add
push
mov
push
mov
sub
pop
fwait
js
xor
ficoms
push
rolb
mov
and
mov
shr
jmp
mov
loopne
flds
dec
add
fs
adc
or
push
push
fsubrl
push
lods
sub
cmp
or
imul
adc
push
mov
repnz
push
xchg
inc
mov
jle
sbb
pop
sbb
add
push
sarl
sahf
cmp
or
sbbl
cmp
cmp
cltd
xor
ffreep
push
and
mov
inc
clc
stos
pushf
push
sub
adc
fcoml
inc
leave
push
pop
sbb
mov
dec
adc
add
insl
fs
adc
dec
imul
sbb
xchg
jmp
fs
xchg
std
pop
jae
aaa
outsb
lock
lea
loopne
es
push
orb
nop
push
push
xchg
add
repz
cmp
int3
imul
jb
mov
test
or
pop
enter
adc
je
imul
repnz
xchg
lahf
movsl
mov
cmpsb
lods
xchg
mov
mov
sbb
ficoms
ljmp
enter
test
shr
mov
fcomps
push
nop
dec
nop
jne
stos
fstl
cmp
paddb
fstpt
rorb
mov
mov
xor
shr
leave
jae
into
add
scas
sbb
inc
mov
dec
inc
mov
clc
loop
nop
mov
jecxz
xor
inc
xor
orb
insl
mov
popa
mov
jns
call
or
in
mov
adc
or
add
jl
mov
lea
outsl
jl
stos
mov
jbe
add
hlt
add
sbb
push
or
in
adc
in
dec
movsl
and
and
adc
push
dec
or
pop
or
aam
loop
inc
in
call
in
or
enter
xlat
adc
insl
fsubs
fdivrs
hlt
fdiv
adcl
mov
xlat
dec
add
push
xor
test
mov
decl
jne
pushf
in
imul
mov
xchg
bound
sbb
jle
adc
jl
xchg
mov
imul
aaa
pop
inc
xchg
cmp
in
aam
fadds
adc
jo
or
ret
adc
xchg
js
pop
lods
and
sub
shlb
xor
cmpsl
gs
fmull
pusha
push
fldcw
pop
popa
aam
pop
or
and
cmpsl
movsb
xor
mov
mov
add
or
add
mov
enter
and
push
out
add
cld
dec
jo
lods
cmp
mov
and
mov
pop
add
loopne
outsl
test
sbb
inc
in
js
pop
add
jmp
xchg
sub
or
fmull
or
pop
mov
stos
and
or
insl
jae
arpl
jb
in
add
stc
and
rcl
inc
shll
xchg
dec
dec
bnd
push
cmp
daa
mov
stc
movsb
jl
mov
pop
ja
mov
shrb
movsb
jb
les
ret
pop
mov
xor
nop
cs
mov
inc
jae
outsl
je
dec
dec
or
jo
sub
lret
imul
pop
sub
dec
pop
cld
sub
push
xor
les
jb
dec
mov
enter
sbb
movsl
dec
jae
aas
das
in
movsl
push
jae
movsl
fs
push
and
add
xor
dec
xchg
add
or
test
push
push
sbb
out
adc
xchg
dec
outsb
and
cmpsb
adc
sahf
mov
adc
mov
sub
xchg
icebp
xchg
mov
shl
or
adc
mov
inc
add
frstor
jno
xchg
inc
cmp
mov
sub
jle
roll
sbb
pop
inc
cli
push
xor
aam
ja
push
movsb
loopne
push
test
push
repnz
outsl
or
cmpsl
fcomps
sub
call
mov
fcomip
rcrl
out
add
fsubs
aam
in
push
dec
lcall
int
shrb
jmp
adc
les
sbb
call
cmp
movb
insb
ljmp
and
add
ret
repz
cmp
cltd
jns
lret
jae
sbb
in
in
sbb
lock
hlt
and
cmpsb
repnz
clc
clc
out
cmp
fildll
ljmp
add
adc
out
push
in
add
test
movsb
cltd
in
in
loopne
lds
or
xchg
mov
pop
fwait
rorb
leave
dec
ret
push
fwait
or
fs
xchg
or
adc
insl
shlb
popa
push
jno
dec
push
enter
and
lods
inc
xchg
test
cmpb
nop
mov
lcall
lock
mov
inc
mov
mov
stos
pop
sub
xor
data16
in
inc
cwtl
xlat
fldl
and
xchg
pop
add
in
stc
add
imul
cmp
cltd
or
shll
xor
negl
in
notl
pop
jl
xchg
sbb
test
in
xor
stos
gs
or
lea
inc
mov
lret
bndstx
shll
jne
stos
or
andb
andl
push
cltd
loope
jno
cld
inc
sub
stos
adc
push
xchg
dec
repnz
inc
cli
jmp
cld
mov
adc
fwait
cld
lods
adc
pop
mov
xchg
inc
push
lds
sub
orl
jnp
adc
mov
lret
lret
inc
pop
dec
aam
pop
loope
imul
popf
sbb
mov
test
dec
push
das
cmp
push
filds
mov
scas
jl
pushf
or
lcall
cld
dec
xchg
sbb
gs
fcomp
fmuls
sub
sbb
dec
mov
push
adc
add
dec
xor
pop
sub
scas
jl
jmp
dec
mov
pop
inc
mov
cmp
mov
js
out
add
mov
mov
je
out
adc
pop
or
sbb
sbb
pop
bound
and
in
xchg
add
loope
bnd
scas
arpl
cld
subl
je
push
add
jb
add
pusha
and
aam
add
mov
sub
mov
jmp
test
jb
xor
mov
je
push
xchg
mov
xchg
jp
pop
fisubl
ja
sbb
and
mov
xor
dec
xchg
dec
scas
push
sbb
stc
mov
and
mov
pop
or
pushf
pop
adc
or
ja
cmp
push
icebp
icebp
add
xchg
js
jno
sub
je
push
pop
arpl
jle
int3
add
add
jo
pop
rcr
xor
test
xor
mov
in
and
enter
cltd
mov
dec
dec
pop
sahf
push
add
push
addb
movsb
in
add
les
sti
scas
push
cltd
insb
sub
mov
fldt
xchg
jg
mov
xor
cmc
dec
leave
push
pop
sbb
sti
xchg
mov
add
jmp
jns
pop
mov
mov
sub
ficoms
ret
enter
pop
stos
xor
stc
xlat
dec
mov
inc
test
dec
leave
dec
sti
in
jbe
jmp
pop
jle
jmp
add
imul
sbb
push
push
xor
xlat
xchg
cmp
shr
insb
sbb
shr
inc
jl
subl
gs
rorb
into
je
push
xor
pop
sti
push
adc
mov
mov
pop
dec
xchg
push
xchg
inc
cmp
and
and
fidivrs
cmp
cmpsl
inc
adc
push
cmpb
adc
jne
or
loopne
jg
jle
and
add
xor
add
lods
rcrb
insl
std
sub
mov
xchg
fnstsw
ja
inc
hlt
add
fnstcw
sarl
jg
add
es
mov
xchg
cmpsb
ret
fmull
dec
gs
push
cwtl
mov
dec
sub
fmuls
enter
aam
ljmp
lock
jae
push
sbb
add
xchg
sub
sbb
testb
xor
sti
or
subb
sbbb
sbb
sub
sbb
or
out
or
orl
jmp
addb
push
test
adc
lcall
cmp
adc
mov
sub
mov
add
mov
dec
shlb
xchg
mov
in
bound
testl
je
jns
movl
mov
cmpl
call
pop
loope
cwtl
aas
inc
xchg
lock
pop
adc
mov
addr16
das
sub
stos
inc
addl
movsb
outsb
mov
test
mov
fistl
push
movsb
test
or
dec
rclb
inc
pop
cld
popl
jno
xchg
mov
shld
loopne
test
add
enter
or
es
sbb
lods
mov
sarl
out
add
xor
adc
enter
ret
xor
jle
push
mov
or
aaa
xchg
insb
inc
dec
dec
imul
cmpsl
sbb
mov
lods
rcl
loope
sbb
gs
and
push
push
sbb
inc
jecxz
add
cmc
daa
inc
xchg
mov
xor
or
inc
sahf
stos
xchg
or
loopne
cmpsb
testb
inc
mov
dec
jne
rorl
fisubrl
clc
sub
jl
inc
or
in
mov
insb
fldl
fucom
pushf
fiaddl
push
cs
xor
and
inc
lcall
jo
dec
fcoml
pop
loopne
ret
or
sbb
sub
mov
mov
movb
inc
ss
dec
icebp
mov
sub
mov
mov
decl
out
in
push
test
mov
adc
jl
mov
insb
loopne
in
dec
nop
jns
movzwl
adc
xor
inc
inc
xchg
pop
xor
into
lea
xor
mov
clc
push
out
test
lret
cmp
jne
push
push
pusha
push
fdivr
aas
jecxz
inc
inc
pop
mov
fnsave
mov
or
or
dec
ret
ret
dec
cmp
dec
sub
adc
jmp
xor
adc
mov
jns
sar
pop
subl
test
sub
sub
pop
or
inc
mov
data16
mov
add
test
ss
add
fsubs
ja
add
fsts
xor
scas
xorb
enter
xor
sbb
pop
inc
pop
inc
jle
test
insl
and
repz
aam
nopl
lock
mov
lock
xor
outsl
loopne
nop
jl
mov
sbb
lock
inc
mov
adc
pop
mov
or
jne
daa
sbb
xorb
sbb
outsb
add
pop
sbb
inc
cltd
push
and
scas
pushl
add
fmuls
in
cmp
xchg
dec
cmp
sub
mov
hlt
push
inc
dec
xchg
add
mov
mov
add
dec
xor
inc
or
cmp
push
aaa
mov
test
hlt
mov
push
push
push
jecxz
adc
jne
inc
int3
es
mov
mov
or
enter
les
addb
fdivrs
int3
jne
xchg
push
bound
popf
aaa
sbb
add
ret
xor
dec
mov
inc
xor
xchg
dec
mov
pop
adc
mov
mov
in
jl
pushl
cmpsb
lret
pop
xchg
push
xor
mov
movb
gs
push
or
aam
mov
jg
rorl
push
movsl
xchg
or
mov
mov
jb
fcomps
icebp
adc
inc
aad
shrl
fwait
push
stos
add
hlt
test
jg
lea
cmp
mov
call
or
and
sub
and
push
add
mov
lret
jo
aam
sub
enter
jmp
sub
adc
das
sbb
loopne
pop
jb
fdiv
ret
fisttpl
clc
ss
aam
psrlq
add
inc
shlb
sub
inc
inc
mov
mov
dec
xchg
push
sub
adc
push
cmp
sbb
das
mov
movl
out
loopne
mov
xchg
pop
inc
sbb
and
rcrl
jne
inc
pop
rolb
xchg
call
inc
or
dec
cmp
loop
ljmp
sub
les
nop
add
mov
cmpsb
add
lea
push
and
ret
sbb
push
and
jnp
or
mov
test
jmp
shrl
cwtl
or
add
data16
mov
lods
fiadds
mov
or
imul
jge
sbb
imul
popa
ret
add
mov
imul
popa
es
dec
nop
lea
adcl
sar
ja
jg
push
add
or
push
jl
in
sub
pop
mov
stos
shlb
xchg
clc
mov
lcall
lods
adc
cmp
enter
loopne
sbb
add
ljmp
mov
enter
movl
sti
push
imul
jge
ljmp
push
xorb
ja
mov
inc
pop
xchg
popf
insb
sub
cmp
gs
pop
adcl
bound
xor
mov
mov
mov
fcmovbe
pop
lock
call
scas
add
pop
ret
or
xchg
in
push
lods
pop
adc
inc
scas
adc
sub
int3
or
and
dec
jmp
imul
pop
jae
add
or
addr16
cwtl
fnsave
call
jmp
int
xchg
sub
xchg
ja
mov
ljmp
dec
int3
jne
mov
scas
mov
scas
loop
push
push
leave
inc
in
jae
jge
xor
in
mov
js
xor
dec
pop
imul
pop
loop
cltd
push
add
cmp
loope
and
mov
push
in
mov
add
ret
mov
jp
aam
jl
push
call
ss
mov
sub
cmpsb
inc
sbb
mov
js
sbb
fistps
mov
aad
jnp
call
in
int
fisttps
sub
fidivs
mov
adc
fists
aam
xor
fisttpl
scas
add
les
push
add
dec
mov
adc
ljmp
push
test
cmp
inc
or
add
push
jl
pop
jecxz
push
push
insb
jne
inc
jmp
and
sbb
mov
push
mov
xor
add
andb
push
cmpsl
into
dec
pop
push
aas
mov
fmul
mov
sbb
pushf
cmp
test
and
cmp
inc
mov
mov
lret
rcl
jne
cmp
mov
inc
loopne
pop
test
or
sub
cld
loope
mov
dec
xor
clc
mov
mov
push
xor
fdivs
adc
cmp
pop
add
or
out
test
inc
push
pop
nop
mov
push
test
adc
add
in
push
jge
add
dec
hlt
mov
sub
movsl
adc
daa
adc
dec
push
or
shrb
or
inc
incl
cmp
sbb
and
mov
mov
icebp
push
push
xchg
into
test
je
daa
loope
lock
nop
add
jmp
rcl
adc
enter
pusha
imul
mov
xchg
insb
jno
cltd
pop
or
int3
arpl
dec
xchg
pusha
rcr
inc
into
dec
std
push
popl
inc
pop
adc
add
and
ja,pt
push
push
adcl
addl
cmp
rolb
xor
sbb
mov
cmpsl
lret
into
push
dec
jo
adc
enter
xchg
adc
hlt
sbbl
adc
push
leave
fmul
mov
and
mov
sbb
sbb
jmp
adc
pop
inc
loopne
dec
fdivs
loopne
test
rcrb
loopne
fisubl
jne
jae
cmp
jo
push
ror
icebp
lret
pop
in
inc
mov
push
sub
ljmp
ret
aaa
add
and
xorb
jmp
xlat
mov
or
add
pop
adc
out
fdivrl
mov
addb
rol
sub
cmp
mov
sbb
pop
hlt
sarb
xchg
dec
je
subl
adc
xor
sbb
mov
mov
inc
jle
push
stos
or
and
mov
pop
adc
ret
lcall
in
in
leave
xor
enter
or
adc
test
and
cs
imul
leave
mov
pop
in
lock
jb
cmp
test
fcomps
inc
int
rorl
rorl
fwait
mov
mov
enter
add
push
mov
mov
adc
push
iret
sub
cwtl
mov
lea
fidivrl
in
popa
les
add
icebp
sub
xor
cmpsl
rol
mov
xor
mov
and
lret
sbb
mov
sbb
leave
leave
in
into
sarl
and
cmpsb
in
mov
mov
fdivs
sbb
rolb
pop
mov
sbb
and
fists
mov
bound
inc
dec
insl
push
mov
pop
cmp
je
inc
clc
in
add
imul
mov
xchg
dec
xor
enter
push
cmpsb
mov
or
and
fdivp
sti
mov
ret
inc
ret
xchg
jl
mov
jge
insb
aaa
popf
push
nop
mov
clc
repz
or
xchg
lret
inc
and
pop
add
push
and
rcrb
sbb
push
pusha
in
add
xor
out
shrl
xlat
jae
dec
cs
shll
outsl
gs
sbbb
cmpsb
lea
pop
mov
mov
mov
scas
push
adc
add
inc
lock
jb
sub
dec
mov
and
out
stc
push
loopne
sbb
inc
sub
adc
xchg
cmc
stos
push
sbb
mov
sbb
and
les
xchg
mov
addr16
fistl
lret
cltd
div
jne
mov
lret
jg
dec
xor
sbb
adc
adc
adc
sub
sbb
inc
sbbl
push
loopne
mov
mov
popa
xor
cmp
sarb
or
xchg
mov
push
in
movsb
lods
movsb
inc
sub
mov
enter
rcll
adc
mov
cmp
cmp
je
and
add
jmp
and
xchg
stos
mov
mov
loopne
push
lods
and
ja
int
sbb
cs
fsubs
ret
inc
cmpsb
lret
fsubs
clc
mov
push
mov
lods
lods
lods
sbb
xchg
imul
fcompl
sub
mov
dec
and
cmp
mov
push
cmp
je
push
push
ss
popf
rcrl
xchg
and
scas
adc
scas
stos
adc
jmp
mov
aad
push
mov
leave
or
mov
add
popf
sbb
add
popf
mov
in
movsb
outsl
test
rol
add
inc
sbb
aaa
movsl
incb
jecxz
out
sbb
push
inc
inc
and
jecxz
or
xchg
out
dec
cmp
jg
adc
inc
repnz
fcom
sbb
outsl
outsl
cmc
add
jecxz
jg
push
pop
es
cmp
jmp
sbb
cmp
fwait
aas
jle
mov
dec
nop
jle
nop
sbb
dec
push
clc
push
lret
pushl
pop
es
sbb
jne
cmc
dec
movsb
jmp
decb
xchg
add
pop
xlat
mov
std
call
xor
mov
pop
int
adc
cmp
nop
jg
call
dec
sbb
pop
rorb
fcoms
push
mov
sub
jle
call
mov
rcrb
xchg
jp
mov
popf
jnp
cli
dec
xlat
xchg
mov
or
jp
mov
addr16
call
jge
mov
out
or
push
ror
aas
fcoml
cmp
and
push
shll
incl
sti
pop
es
push
shl
mov
mov
jno
pop
lock
inc
das
rclb
mov
aad
das
movl
shrl
pop
or
pop
lds
outsl
lods
ljmp
mov
xchg
jle
push
out
sbb
dec
sub
fisttps
ds
mov
mov
pop
fstpt
das
xchg
push
jno
xor
int
xchg
jmp
psubsw
ficompl
imul
sbb
dec
dec
xlat
pop
ret
mov
sbb
dec
cmpsb
in
pop
cld
fldt
sub
push
cmpsb
lahf
jp
and
push
cmp
pop
aas
repz
jmp
sbb
outsb
jmp
or
push
and
adc
lea
aas
inc
in
push
mov
pop
and
pop
shl
jmp
icebp
push
cs
push
movsb
loop
out
negb
in
ficoml
or
lock
adc
pop
scas
pop
mov
mov
dec
dec
scas
sub
aam
sbb
pop
dec
nop
push
or
repnz
jge
fucomip
js
pop
sub
ds
or
push
rcr
push
sub
pop
addr16
pushl
cmp
push
mov
ds
clc
dec
int
sbb
sbb
cmp
fsts
adcl
insb
push
or
cmp
out
adc
pop
sub
cmp
sbb
pop
iret
outsb
lock
fdivr
outsl
dec
cmc
pop
xchg
jo
push
or
dec
aas
mov
sarb
mov
rorb
testb
dec
imul
fcompl
decb
add
jns
nop
adc
aas
inc
das
mov
nop
push
mov
stos
adc
pop
sub
push
xlat
mov
push
lds
inc
in
test
lcall
fwait
cmp
mov
push
aas
negl
jecxz
sbb
testl
push
inc
fnstsw
enter
cli
dec
int3
in
cmc
push
and
jle
push
rorb
xchg
mov
xchg
pop
mov
sarl
or
cmp
mov
cld
mov
in
add
xchg
add
stos
aam
push
jecxz
cmp
aaa
add
testl
dec
sbb
negb
cmp
popa
adc
das
jl
fcomip
loope
fmull
scas
cld
cmp
push
in
out
in
ficoml
stos
mov
repnz
aas
out
fisttps
popf
pop
cs
pop
scas
adc
aad
cmpsb
jnp
shr
pop
inc
mov
sti
std
cwtl
xchg
setnp
xchg
es
pop
push
mov
aas
fwait
push
movsb
xchg
mov
pusha
movsb
fnstsw
fwait
dec
movsb
cmpb
fwait
push
movsb
xchg
out
in
cmp
jl
cmp
dec
movsb
mov
adc
cmpl
fwait
sbb
jl
push
or
cmp
js,pn
pop
movsb
sar
mov
fisttpl
add
les
pop
pop
movsb
cltd
jl
cmp
or
jl
dec
movsbl
xlat
bound
or
fwait
adc
fwait
add
rcrb
cld
mov
cmp
push
jle,pn
jl
pop
pop
movsb
mov
lds
mov
clc
lahf
jo
test
add
aam
dec
dec
inc
iret
jp
mov
dec
or
pop
aam
jno
xchg
mov
jmp
dec
sub
dec
lods
push
xor
sahf
repnz
dec
xchg
sub
cwtl
push
outsl
pop
cmpsb
pop
sbbl
inc
push
xchg
flds
int3
xchg
or
mov
xlat
jg
jge
push
push
and
jle
popf
pop
and
adc
xchg
sbb
mov
xlat
xchg
inc
jb,pt
out
dec
orl
xchg
jg
lods
xor
jnp
ljmp
ret
pop
mov
mov
jno
jns
clc
pop
aam
inc
xchg
adc
xor
mov
add
dec
mov
outsb
cli
lcall
call
loop
push
dec
aaa
pop
jae
decb
adc
dec
sub
out
adc
xchg
aam
or
decl
sbb
out
jbe
dec
cmp
int
imul
in
ljmp
fistps
xchg
sbb
dec
es
push
ds
xor
into
out
mov
scas
sbb
jle
pop
es
test
pusha
sti
pop
sub
dec
test
dec
push
xlat
xchg
sbb
push
and
sbb
scas
imul
pop
scas
sbb
sbb
hlt
imul
faddp
adc
notl
ret
mov
add
add
mov
call
adc
mov
lods
or
lods
call
outsl
jmp
sub
jns
fisubs
mov
stos
mov
shll
enter
dec
jp,pt
std
pop
and
lcall
in
iret
pop
cs
sub
pop
scas
outsb
insb
push
lret
jne
rclb
je
pop
mov
add
repnz
scas
out
outsl
es
fiadds
outsb
inc
sub
aaa
mov
std
mov
push
push
popa
mov
enter
loop
lods
stc
incl
adc
int3
fcoms
fucom
lods
sub
je
incl
push
adc
js
test
aam
clc
pxor
loopne
into
inc
mov
lret
ret
or
lock
pop
es
pop
aaa
ds
outsb
adc
dec
enter
cwtl
add
ja
push
setb
mov
lds
fisttps
pop
jmp
decb
mov
jge
sbbl
out
push
int
das
out
pop
ja
jg
in
pop
dec
cmp
sbb
fnstenv
pop
push
incb
rcrl
jg
pop
ret
faddl
out
loopne
lods
dec
jle
mov
cli
push
es
imul
pop
fcompl
dec
mov
ds
dec
enter
pop
and
sbb
into
push
int
adc
pop
sbb
int
sbb
ret
cmpsl
xor
and
int
fidivrs
scas
pop
loopne
incl
cmp
jb
out
ja
icebp
call
pxor
jbe
psraw
fisttps
loop
dec
xchg
jbe
add
rorl
negb
add
cmpsb
dec
testb
fistpll
orb
mov
pop
fcomps
mov
fcoml
notl
test
stc
shll
sbb
jle
popa
mov
lret
loope
jg
jmp
push
outsl
out
push
shrl
pop
cld
test
sahf
mov
testl
cli
fistpll
fimuls
adc
dec
outsl
cmc
push
rol
push
out
mov
out
push
mov
hlt
rclb
mov
faddl
int3
ja
fmull
mov
xchg
fisttpl
jl
xchg
sbb
lret
es
xchg
sbb
aad
cld
sub
dec
lret
ret
pop
rorl
fwait
push
bound
jmp
xorl
cmp
out
mov
lods
addb
lods
das
jo
inc
cld
pop
or
add
fadd
sbb
loope
pop
push
ds
mov
push
lret
xchg
pop
sub
xor
outsl
fbstp
ret
jbe
pop
xchg
popa
mov
xchg
mov
xor
ud0
mul
out
ret
inc
mov
std
dec
and
icebp
xor
setnp
sti
ficompl
pop
das
sub
xlat
cmp
mov
push
das
jnp
stos
jecxz
mov
inc
pop
aas
dec
pushf
mov
jp
into
pop
ds
loop
in
es
jns
jns
sahf
dec
sbb
je
imul
cs
sub
mov
xchg
mov
cs
cmp
lcall
mov
push
enter
cmp
mov
mov
outsb
out
scas
mov
cld
paddsw
push
ror
call
fstpt
push
fmull
jnp
jnp
stos
push
xlat
pop
cmp
push
fs
cmovg
testl
pop
dec
mov
cmp
cmp
fstpl
clc
outsb
mov
fidivrl
setg
pop
movsl
mov
dec
xor
sbb
pop
hlt
sti
xchg
and
clc
pop
jl
fucomip
loop
mov
dec
jbe
fidivrs
loop
mov
aas
cs
cmp
loop
mov
push
dec
or
imul
mov
cmpsl
sahf
cmp
pushl
jae
xchg
mov
je
clc
xor
mov
jecxz
in
cwtl
adc
mov
adc
dec
outsl
push
mov
in
cmp
mov
dec
stos
out
mov
or
int
cmpsl
pop
cmp
es
dec
push
scas
sahf
mov
fstps
sbb
outsb
pop
idivl
clc
jg
mov
mov
and
lods
xor
jns
push
icebp
repnz
cmpsb
js
mulb
jg
cli
nop
les
mov
mov
ds
fisubl
jo
ljmp
cmp
jo
sbb
subl
fucom
push
mov
and
insb
mov
pop
lock
jmp
outsl
movsb
lahf
pop
mov
sahf
cmp
int3
ret
jb
andl
push
cld
cld
aas
add
divb
mov
cmp
sub
adc
lea
psubusw
daa
push
cmp
adc
scas
pop
add
mov
int3
ja
divl
jns
bnd
clc
out
das
into
jmp
adc
or
loope
std
dec
out
scas
mov
jmp
decl
ds
les
cmp
out
dec
sub
fnstcw
decl
inc
sub
into
mov
stc
outsb
loopne
jae
pop
sbb
push
jg
xchg
sti
loope
jno
jo
dec
loope
data16
cmpsl
xchg
idivl
dec
sub
sbb
decl
lock
clc
push
pop
sbb
cwtl
or
nop
icebp
mov
les
decl
insb
cmp
inc
mov
cmp
cld
pop
popa
sbb
movsb
mov
mov
lcall
rcrb
mov
fs
je
jne
adc
or
clc
js
pop
push
fwait
xlat
mov
fsubl
xor
jl
pop
xlat
out
xchg
mov
stc
std
scas
xor
xor
das
cmpsl
lods
cmp
test
and
push
imul
cmp
out
sahf
out
rclb
imul
ja
stos
pop
lahf
add
out
insb
pop
push
pushf
mov
outsl
jg
sti
imul
cltd
and
in
fimuls
stos
scas
or
dec
cmp
movsl
mov
lahf
or
push
mov
cmp
push
jg
shll
mov
in
mov
adc
push
and
pop
call
xorb
or
pop
sub
push
push
cmc
push
shlb
pop
jmp
xchg
push
mov
fcompl
hlt
push
aam
sbb
pop
sbb
push
roll
cmp
dec
cmp
cmp
decl
push
out
sub
mov
and
pop
enter
jl
in
push
movl
into
adc
dec
sub
inc
leave
adcb
push
sub
push
lret
mov
clc
jg
dec
lret
dec
lret
sbbb
push
cmp
hlt
pop
fdivr
jg
leave
pop
lds
pop
faddl
repz
lret
dec
jl
sbb
das
push
lret
rclb
push
push
aas
add
dec
fcoml
cmpsb
sahf
fistpll
sub
push
mov
pusha
sbb
das
repz
pop
fisubrl
jne
into
sbb
or
and
pop
push
pushf
mov
cmp
push
inc
sar
xchg
ds
mov
push
repnz
mov
dec
int
loope
add
aas
imul
jmp
xor
sar
cmp
fdivr
shll
xor
inc
jl
test
cld
out
adc
pop
aas
push
sahf
out
cmp
mov
push
dec
cld
cmp
into
push
in
loop
mov
dec
hlt
pop
cld
dec
add
xchg
loop
mov
dec
mov
cs
jle
jmp
sahf
out
adc
lds
dec
aad
adc
sti
mov
mov
dec
out
leave
cmp
jnp
into
or
push
dec
jmp
or
mov
push
lret
sahf
jle
dec
repnz
fdivr
push
xor
xlat
loop
mov
push
aam
sti
mov
int
push
xlat
out
pop
mov
out
pop
hlt
loope
ds
dec
clc
shl
sbb
rcrl
pop
mov
idivl
shr
dec
ds
push
jle
dec
cmp
lock
cli
adc
scas
pop
jmp
jl
mov
into
adc
sbb
repnz
pop
fdivrp
lahf
call
ds
mov
dec
stos
cmp
loop
das
mov
mov
dec
mov
xchg
mov
ret
cmp
loop
out
sub
out
mov
dec
dec
jnp
js
scas
xchg
loop
mov
pop
xchg
sahf
add
cld
cs
sbb
push
pop
pop
mov
sahf
push
ds
mov
loopne
mov
dec
test
push
cmovle
jns
add
out
mov
cs
pop
cs
pxor
ds
loop
mov
dec
fdivrs
pop
adc
call
jmp
push
sbb
icebp
ds
dec
jmp
fucom
push
fmulp
dec
cmp
push
icebp
outsl
jle
aas
sbb
pop
sbb
pushf
loop
push
fidivrl
shr
outsb
pop
mov
adc
out
lret
outsb
iret
pop
or
inc
mov
jmp
int
xor
out
lret
loop
mov
lahf
scas
or
cs
lock
cmp
mov
mov
dec
dec
pop
jg
mov
push
scas
loop
pop
fimull
pop
hlt
push
or
pop
sarl
cs
lods
mov
dec
std
das
int3
dec
in
push
shrl
fdivp
scas
decb
pop
int
dec
dec
repnz
js
adc
inc
pop
outsb
fsubrs
test
xchg
or
pop
xor
lahf
sub
sti
push
outsb
pop
lahf
sbb
mov
dec
cmc
outsb
adc
ds
fmull
jmp
sbb
jg
jle
or
ret
dec
push
lret
xchg
insl
sbb
adc
push
pop
lds
mov
mov
jae
dec
xlat
xchg
rcll
inc
leave
mov
rolb
out
dec
lret
rclb
negb
iret
adc
pop
cmp
or
incl
lds
mov
ficompl
call
rclb
add
jno
mov
subb
sbb
pop
and
rolb
sbb
aas
decl
fucom
push
jg
or
push
into
lea
repnz
sub
push
rcrb
pop
dec
cmp
test
outsl
cmc
pop
leave
xchg
jbe
notl
aam
clc
call
add
jne
int3
sbb
pop
daa
pop
shrb
fisttps
adc
adc
sub
push
aam
adc
dec
enter
pop
cmp
in
mov
rclb
outsl
fisttpll
push
outsl
in
push
mov
dec
pop
sub
nop
shll
adc
push
outsl
pop
pop
rorl
jo
pop
aam
xlat
pop
jge
in
incl
cwtl
orl
pop
and
push
dec
ffree
or
pop
cmpsb
push
rorl
cli
orb
mov
repnz
fildll
pop
xorb
adc
fdivs
add
fcoml
out
aam
aas
add
dec
mov
push
clc
pushl
lods
or
jle
or
sbbl
enter
mov
pop
cltd
rclb
pusha
movsl
lcall
outsb
jle
cmp
roll
dec
scas
outsb
sub
jg
incl
rclb
lea
and
dec
outsb
or
push
jne
pop
int3
fcomip
adc
notb
adc
push
sub
adc
lea
mov
notb
rcl
pop
lea
pop
rorl
mov
icebp
in
test
or
jle
pop
hlt
push
lds
pop
dec
mov
lock
dec
shrl
xchg
out
xlat
pop
cld
lcall
rolb
enter
pop
ds
push
xchg
mov
push
rorb
push
test
rcr
aad
and
pop
xchg
dec
cmp
inc
test
dec
int
sahf
sub
cs
out
mov
push
popa
sub
mov
dec
ror
cli
push
sub
roll
lcall
xor
mov
push
addb
aad
icebp
rcrl
orb
jl
unpckhps
mov
cmovl
jl
sub
orb
or
push
je
and
test
pop
mov
int
ds
dec
push
bound
popf
dec
ss
shrb
inc
faddp
mov
cmpsl
xor
sahf
imul
xchg
pop
mov
jg
mov
lcall
cmp
int
xor
icebp
or
pop
xor
decl
mov
outsl
std
mov
orl
into
cmp
pop
decl
popa
jmp
loop
mov
cmpsb
loop
xor
xor
iret
inc
lcall
inc
mov
jg
cmp
loopne
mov
inc
stos
xor
leave
insb
xor
sub
decl
int
movsl
out
ljmp
cmp
mov
ja
mov
pop
adc
iret
xchg
loop
mov
dec
aam
pop
roll
mov
cmp
jmp
inc
sbbl
xchg
cmp
xchg
mov
adc
adc
dec
out
fistps
movsl
cmp
lock
int
sbb
cs
mov
push
cmp
cmp
sub
cmp
pushl
fistpl
mov
adc
sarl
dec
fisubrs
cmpl
imul
xchg
push
call
pop
pop
decl
or
push
incb
hlt
pop
push
aas
fmull
cs
ss
mov
jg
sub
jle
add
or
mov
xchg
aam
xor
or
bound
or
sbb
push
and
scas
cli
ret
ret
dec
dec
pop
test
testb
push
das
jle
fstpl
sbb
int3
mov
fists
loop
out
rolb
cli
dec
mov
cmp
sbb
mov
jmp
jge
cmp
movsb
sar
cmp
into
sbb
pop
mov
inc
sbb
and
push
cltd
lcall
imul
leave
dec
mov
pop
out
mov
pop
xchg
fiadds
imul
xor
lcall
sub
add
arpl
cs
filds
xchg
out
pop
and
and
jmp
mov
sub
pop
inc
in
out
rclb
sub
dec
xchg
mov
jmp
pop
inc
lods
xchg
sub
xchg
mov
mov
rcl
or
decl
into
xchg
mov
clc
jle
les
sub
cmp
cmpsb
dec
icebp
or
popf
aas
icebp
out
mov
into
push
sub
out
lock
and
push
sbb
sub
push
and
push
ret
fwait
pop
lock
jmp
ja
int
adc
and
arpl
je
inc
andl
mov
and
inc
jge
xchg
cli
pushl
incb
jnp
sub
add
pusha
cmc
cmpsl
xchg
rcll
mov
inc
testl
inc
cld
sbb
shl
insb
push
push
icebp
les
test
push
dec
dec
out
das
pop
cmpsl
lods
pop
sub
rclb
stc
adc
cwtl
dec
mov
lcall
cmp
cmpsl
or
inc
adc
popf
movsb
loopne
push
insl
fimull
mov
shrb
mov
jecxz
and
xor
dec
stos
fs
cltd
lcall
jns
out
jp
jle
cmp
bnd
adc
cmpsb
jp
lcall
stos
ds
dec
or
mov
cmp
cwtl
or
ds
lahf
cmp
jg
cmp
jg
lods
out
mov
jb
outsl
add
inc
xlat
pop
adc
repz
outsl
cli
das
dec
sbb
mov
add
jae
imul
insb
mov
pinsrw
mov
jecxz
pop
mov
mov
pop
fadds
pushf
lock
sub
jmp
pop
sbb
scas
dec
jecxz
hlt
mov
push
inc
mov
out
movsb
jl
ficompl
test
mov
stc
imul
push
cmpsl
jbe
jne
add
lcall
sub
mov
xchg
pushl
jmp
pusha
cmpb
filds
xchg
push
sub
push
rorw
rorb
dec
push
outsb
and
ljmp
pop
out
push
cmc
xor
sbb
outsb
loope
xor
out
pop
lret
xchg
pxor
jmp
add
call
orl
push
and
push
and
lds
subl
adc
push
leave
push
pop
add
jg
pop
inc
xchg
push
rolb
cs
imul
decb
mov
rorb
lret
rcll
jno
jae
lock
sub
pop
xchg
adc
es
rolb
test
mov
adc
out
jbe
push
cmp
pop
enter
pop
mov
out
pop
movl
mov
ss
iret
imul
cmp
jne
das
sar
clc
dec
lret
xchg
adc
dec
adc
pop
xchg
les
fmuls
nop
fisubrl
push
xlat
sahf
mov
jmp
mov
push
cmp
pop
sarb
jg
cld
hlt
dec
xlat
ret
inc
mov
int
push
je
mov
test
push
xor
mov
jae
mov
shll
or
dec
add
push
sar
iret
pop
das
adc
sti
jns
fistpll
jg
stos
sub
jo
out
add
pusha
negl
mov
pop
and
sbb
pusha
fnsave
add
jecxz,pn
and
pop
pusha
jg
xchg
fisubrl
outsl
mov
lock
mov
xchg
pusha
outsb
jg
pop
mov
outsl
enter
dec
cmp
inc
mov
push
xchg
push
cmpsb
cmp
push
test
sbb
fwait
mov
push
mov
xchg
lret
mov
or
ret
dec
cs
adc
sbb
in
clc
mov
xlat
dec
cs
pop
roll
or
push
mov
dec
stos
sbb
pop
push
adc
repz
sbb
mov
sti
push
call
dec
test
lock
scas
cli
push
das
incb
movsl
dec
fiadds
rolb
xor
push
jg
adc
fwait
push
dec
es
adc
pop
mov
xlat
push
cmp
pop
jg
add
outsl
ficomps
cmp
adc
maxps
add
add
dec
scas
mov
jge
push
mov
push
ret
scas
push
and
push
mov
jg
addr16
lods
or
ds
dec
cmp
loope,pt
inc
cmp
or
add
insb
inc
add
push
jbe
pop
enter
sti
js
loopne
lret
ds
mov
adcb
lret
mov
mov
lcall
lret
cltd
jo
scas
pop
out
inc
loopne
out
lock
incl
mov
lods
jbe
cmpl
or
enter
ret
cltd
sbb
stc
insb
sub
and
push
sub
movsb
stos
push
rcrl
xor
push
sbb
sbb
mov
shrb
push
aam
xchg
add
push
push
ja
add
imulb
addr16
xchg
cmpsb
in
test
dec
mov
incl
in
xchg
push
mov
inc
sti
sahf
cli
cwtl
fsubs
hlt
popf
fisubs
in
mov
inc
fldcw
clc
xchg
push
es
inc
xchg
frstor
cmc
std
aaa
sti
lcall
pop
inc
cld
lcall
aad
and
aam
jg
ds
dec
dec
fsubrl
clc
cwtl
sti
cwtl
fsubl
clc
lods
mov
cmpsb
es
cmc
fwait
aam
and
lcall
mov
imul
adc
popa
stos
jg
std
fcoms
push
sbb
sbb
stos
fistps
pop
sbb
popf
sbb
fcoms
push
fwait
lcall
xchg
sbb
rcll
pop
sbb
push
adc
rclb
pop
adc
test
fcoml
pop
pop
stos
ficomps
mov
push
jbe
std
lcall
pop
sbb
fsts
jle
stos
fcoml
pop
pop
pushf
into
scas
ficoms
enter
pop
sbb
push
push
xchg
sbb
rclb
pop
sbb
dec
cmpsl
add
pop
inc
pop
adc
xchg
lock
inc
xor
push
dec
jmp
inc
lahf
jb
sbbl
enter
orb
sti
shr
mov
fs
outsl
and
or
jb
ja
adc
call
xchg
enter
aam
int3
and
sarb
ret
add
repnz
add
add
ret
sti
cli
test
pop
jne
adc
dec
sub
ret
inc
xlat
nop
dec
cmpsb
cltd
jae
jne
and
hlt
and
xorl
xchg
sbb
xchg
sbb
rolb
fstpt
push
push
push
cmp
xor
daa
and
push
pop
insb
push
test
ret
loop
test
pusha
lock
add
fcompl
or
addb
sbb
adcl
divb
repz
mov
xchg
movsb
push
sbb
sbb
mov
and
outsb
jecxz
push
sbb
movb
aad
das
cmp
sbb
jne
lahf
adc
lcall
pop
and
pop
dec
clc
in
or
cmp
push
sti
sbb
dec
mov
clc
jg
cmpsl
add
test
push
xchg
adc
les
int3
push
les
xchg
imul
or
mov
insb
or
push
jne
mov
xlat
push
ds
incl
pop
repnz
add
lods
add
inc
iret
pop
dec
loop
loope
dec
jb
mov
movsb
rcr
cmp
add
push
les
sub
cmp
push
test
sti
push
add
test
loopne
ds
repnz
imul
mov
fmuls
mov
dec
fcoml
aaa
outsb
gs
movsb
cmc
and
imul
ss
add
and
add
sbb
fisubs
add
sbb
fs
je
sub
sbb
pop
adc
jl
and
in
notb
cmp
sbb
rolb
jle
xor
mov
ret
ret
add
pop
push
sbb
hlt
or
iret
leave
or
or
mov
cmp
loopne
dec
inc
pop
loopne
scas
xor
sbb
pop
push
cmp
add
jecxz
push
aaa
push
or
push
xor
add
out
jle
test
loopne
cmp
xor
ret
daa
cs
das
pop
push
add
mov
sub
hlt
add
inc
sub
cmc
sbbl
xchg
jg
push
add
test
aam
not
adc
adc
xor
push
add
scas
xchg
or
test
xchg
shlb
pop
popf
and
js
movl
mov
pop
sti
ficoml
xor
inc
add
gs
orl
dec
inc
jmp
nopl
sbb
insl
mov
cmp
cltd
jae
inc
push
xor
dec
push
jmp
mov
popa
popf
out
fistpll
mov
call
add
std
lahf
sub
mov
xchg
adc
dec
jne
jno
cmp
inc
jge
cmpsl
enter
test
xchg
jle
pop
adc
mov
clc
inc
adc
out
sbb
sbb
jae
cmp
cmp
or
or
decl
mov
pop
push
or
or
orl
mov
adc
add
cmc
icebp
flds
gs
jne
rcll
adc
arpl
jecxz
mov
sub
gs
das
push
fisttpll
push
vprotw
movsb
mov
movsl
push
inc
pushf
sub
js
add
sbb
mov
imul
insl
sbb
movsb
sub
ja
and
ja,pt
imul
das
in
mov
mov
sahf
cmp
mov
imul
sbb
das
xor
pusha
inc
icebp
pop
pusha
je
add
ja
pusha
rorl
inc
orl
add
cmpl
sub
dec
in
adc
ret
push
insb
jl
out
sbb
mov
push
mov
add
jae
lock
pop
jp
jle
mov
jns
add
rol
or
insl
dec
aam
les
xchg
dec
mov
lcall
or
leave
jnp
arpl
inc
inc
cmp
xor
dec
sub
inc
outsl
loopne
ljmp
data16
add
lahf
add
push
shr
xchg
adc
jecxz
cmp
aam
hlt
std
add
push
add
cmp
dec
icebp
and
dec
jmp
add
cmp
jl
es
or
mov
xchg
adc
outsl
jg
adc
outsb
mov
add
ss
cli
out
mov
test
mov
fwait
cmp
loop
ror
cmp
pop
mov
pop
rcll
mov
test
stos
add
mov
or
sub
pop
sub
add
inc
push
sbb
sbb
or
sbb
or
push
rcr
xchg
inc
jae
jne
pusha
mov
ret
shrl
xchg
xorl
ret
cmp
xor
mov
lock
lahf
sbb
mov
and
or
xor
xor
pop
or
xchg
xor
or
push
lahf
fadds
push
xor
pop
bound
sub
sarl
pop
sbb
sahf
cmp
roll
mov
dec
sub
lret
mov
imul
xchg
dec
lea
jb
xor
shr
fldt
and
ljmp
add
pop
add
xchg
jbe
lret
sbb
loop
add
push
sbb
out
popa
push
adc
xchg
pop
push
add
pop
lods
pop
inc
movsb
jo
pop
add
fistpll
je
push
mov
icebp
or
inc
cmp
loope
lock
or
addb
mov
clc
faddp
inc
and
and
imul
aad
mov
push
sbb
jge
lret
addr16
negl
jmp
push
movd
movb
jg
shrb
xor
jl
or
jg
add
jle
clc
or
inc
or
jg
fstps
cmp
ds
xor
jle
add
in
fcompl
sbb
mov
mov
dec
lds
adc
jl
loopne
add
mov
mov
jo
jle
pop
enter
xchg
scas
shl
sub
push
xor
mov
push
xor
add
push
dec
push
xor
bound
shll
lcall
cmp
and
sbb
xor
pushf
jl
inc
dec
cs
or
mov
push
lds
jns
sbbl
and
mov
or
or
sbbb
test
cmp
mov
sub
jmp
dec
loopne
add
jmp
adc
insl
sbb
movsb
mov
add
mov
inc
inc
or
inc
xor
mov
lods
sub
add
dec
and
push
and
cmp
push
movsb
push
sub
test
ljmp
mov
jg
inc
xor
and
in
cmp
push
mov
add
inc
adc
mov
pop
and
sub
inc
pop
sbb
addl
aad
pusha
mov
int3
pop
stos
iret
sbb
movsb
cmpsb
mov
jns
mov
cld
cmp
jbe
int
xor
mov
push
sar
ret
push
cmp
mov
adc
mov
pop
adc
imul
push
pop
xchg
dec
and
pushw
add
ret
popf
mov
sub
js
dec
xor
add
shll
push
and
dec
sbb
adcb
xor
enter
push
or
movzwl
pop
pop
inc
sub
push
add
mov
cmp
pusha
insb
loopne
jbe
xchg
sub
lods
mov
mov
je
pop
push
jle
jle
sti
or
inc
cwtl
dec
es
mov
add
mov
pusha
or
test
mov
adc
lods
or
sarl
test
or
add
dec
popa
sti
adcl
mov
or
push
sarl
arpl
jle
sahf
sbb
add
out
dec
lods
or
mov
clc
sarb
js
push
ret
mov
jns
pushf
fistpl
cwtl
pop
rcl
icebp
push
ja
pop
and
sub
adc
in
jbe
js
add
push
cs
dec
dec
shlb
psubsb
xchg
rorb
sbb
mov
push
jp
jo
call
pop
aam
mov
inc
div
lea
and
lea
cmp
les
dec
mov
cmp
addr16
mov
scas
addr16
adc
pop
and
fisubl
and
loope
pop
pusha
es
jl
mov
push
pop
popf
xchg
and
nop
mov
insb
add
dec
jl
sub
lea
shr
lea
rorl
push
jne
add
movsb
or
cwtl
mov
sbb
pcmpeqw
pcmpeqb
mov
out
push
xor
inc
xor
decb
cwtl
lret
mov
mov
sub
and
or
mov
lret
add
inc
push
adc
bnd
mov
sbb
sbb
or
in
jg
daa
add
push
sbb
inc
adc
jae
sub
mov
sub
je
les
mov
addr16
adc
mov
jg
jge
add
xor
je
push
ljmp
pop
pop
or
hlt
push
inc
stc
add
adc
fnsave
js
pop
addl
fadds
mov
xor
stos
mov
mov
rcll
daa
fnstcw
js
incl
movb
outsb
sbb
jl
jg
mov
bound
mov
or
add
mov
mov
pop
xchg
mov
jge
or
jnp
adc
call
leave
sbb
or
lock
sub
jno
adc
in
mov
sub
push
shl
sti
out
pop
add
pushf
jo
shll
adc
inc
pop
inc
inc
jbe
add
jns
inc
nop
xchg
inc
or
push
cmp
fcoms
imul
jo
rorb
dec
sub
cwtl
roll
sub
inc
adc
sbb
iret
xor
dec
mov
sub
mov
pusha
mov
adc
push
pop
mov
or
gs
repnz
dec
adc
or
pop
in
loope
xchg
inc
adc
aaa
ret
decb
mov
mov
insb
shl
cmp
andb
or
sahf
and
add
dec
dec
or
push
jne
fucomip
addb
mov
or
xchg
adc
imul
pop
adc
mov
sub
xorl
push
lods
xor
jle
sbb
loopne
xchg
inc
lods
sahf
inc
loop
inc
popf
sub
and
sbb
push
adc
xor
repnz
sub
std
sub
lods
loope
add
add
jp
xor
data16
jae
in
xor
add
int
adc
div
adc
and
push
and
xchg
mov
addr16
jne
stos
cmp
cmp
dec
pop
adc
rorb
lods
loopne
enter
jne
xor
add
xor
adcb
dec
push
dec
sbb
mov
scas
lods
dec
or
lahf
cmpsb
loopne
fimull
inc
lcall
add
and
or
or
cmp
nop
or
mov
mov
addr16
scas
pop
roll
xor
pop
xor
lock
or
or
inc
fistpl
sub
push
mov
or
lret
cmc
jbe
push
or
into
jb
add
xor
dec
andl
push
cmpl
sbb
sub
sbbb
iret
pop
dec
jae
pusha
imul
inc
sti
xchg
mov
je
adc
int3
adc
push
sub
xchg
xor
sub
inc
mov
call
movsl
movsl
dec
xchg
xchg
sbbb
cmp
add
add
add
cmpb
sub
pop
mov
push
aas
push
pop
in
sahf
and
push
sub
and
outsl
dec
dec
add
sub
mov
push
jb
xor
movsl
xchg
fcoms
jmp
out
lret
pushf
sbb
push
add
inc
cwtl
scas
fs
inc
xor
adc
leave
nop
jl
cltd
or
xor
xchg
pop
or
jmp
push
and
fcomip
popf
xor
movsb
jle
dec
adc
add
rcll
test
jnp
aaa
aaa
mov
jb
cmp
je
or
and
je
pop
je
lods
lds
aaa
addr16
jno
adc
lock
sbb
xor
push
jmp
cwtl
and
test
dec
cmp
ret
sahf
loopne
mov
inc
std
les
sbb
mov
dec
xchg
or
add
fistps
fwait
mov
sbb
rcrl
push
and
pop
repz
push
call
xor
pop
dec
jne
jae
or
fcmovnu
iret
jbe
pop
xchg
cmp
dec
or
add
mov
pop
subb
sub
iret
in
inc
dec
inc
inc
mov
jns
or
or
call
sub
push
or
dec
pushl
shr
add
add
lea
jg
sub
add
cwtl
and
imull
mov
or
sub
gs
push
mov
cli
cmp
jae
mov
push
sbb
sub
clc
test
add
into
inc
xor
push
jmp
lods
jl
imul
push
rorl
cmpsb
adc
sbb
dec
cmp
cltd
pop
add
mov
inc
add
adc
adcb
push
xchg
push
mov
test
and
push
inc
rclb
lea
clc
jl
insb
sub
movl
js
jno
add
push
push
adc
mov
inc
mov
dec
and
fidivl
xchg
cwtl
mov
xchg
fisubrs
pop
pop
sub
jmp
loope
xor
shll
inc
sbb
sub
fisubrs
inc
call
cmp
cld
testb
cmp
mov
sbb
add
or
sbb
cmp
insb
fiadds
dec
cmp
insl
push
je
enter
fdivl
and
xor
pop
cmp
jns
add
sbb
js
outsb
movsl
mov
cmp
aad
adc
leave
in
fldt
add
sbb
cmp
jne
sysenter
leave
leave
leave
leave
sub
sbb
imul
leave
or
cmp
ja
mov
sub
push
mov
and
lea
or
clc
mov
sti
inc
jge
test
mov
pop
fidivl
mov
pop
mov
or
or
and
add
xor
push
or
mov
sbb
adc
add
fisttps
dec
lret
ret
movl
mov
int3
mov
outsb
push
add
imul
int
sub
mov
stc
add
nop
pusha
rolb
jo
dec
and
mov
shr
rcrb
jnp
sub
pop
xor
jo
add
sbb
add
inc
add
lock
add
cmp
ja
push
es
out
add
sbb
aad
ffree
jo
insb
sub
or
cmpsl
dec
dec
mov
sub
cmp
mov
or
sub
fsubs
xor
cmpsb
dec
cs
mov
decb
sub
ret
push
fcomp
pusha
add
roll
pop
je
sbb
and
cwtl
xor
xchg
pop
ljmp
push
add
adcl
sub
movsl
add
lock
and
jb
push
or
ja
cmc
push
into
and
or
xor
and
and
movsb
add
mov
push
shlb
add
in
je
pop
jg
adc
sub
gs
cmpsb
dec
lcall
sbb
jle
insl
push
pop
sbb
mov
jnp
ss
cltd
fisttpll
inc
cmp
adc
mov
andb
xchg
test
dec
or
and
cmp
add
pusha
mov
xchg
data16
push
sub
adc
push
lcall
push
leave
pop
or
xor
std
es
sub
xchg
cmp
pop
push
lods
cmc
loop
mov
pop
jb
lds
pushf
or
popf
add
mov
pop
sub
push
xor
xor
sbb
or
push
inc
xor
or
loop
mov
test
inc
call
adc
add
faddl
addr16
addr16
mov
aam
lock
jnp
jne
mov
jecxz
cltd
movb
imul
data16
sub
mov
mov
rclb
or
cmp
sbb
orl
cwtl
mov
fucom
out
add
mov
or
scas
incw
mov
dec
mov
pop
shrb
cli
scas
jmp
mov
pop
or
scas
and
inc
rorl
dec
cmp
incl
mov
sub
pop
jo,pn
ljmp
or
jmp
cmp
and
inc
aad
insb
fidivs
sbb
dec
xor
loopne
pop
push
add
insb
and
mov
lds
jne
mov
rol
add
sbb
or
xchg
aaa
mov
das
mov
addl
xor
pusha
fimuls
xchg
cmp
jo
jb
add
and
sbbl
xlat
dec
cmp
sbb
sbb
es
inc
test
std
gs
add
mov
test
sub
lea
sbb
sbb
xlat
and
fs
push
addr16
test
jae
inc
sahf
cmp
ja
dec
add
orb
sbb
adc
roll
js
ja
mov
and
dec
test
dec
addb
shlb
lcall
cmpsl
inc
xchg
xor
js
dec
into
lds
cld
hlt
subl
scas
insb
cmp
ja
cmp
jae
ffreep
repnz
inc
dec
lcall
push
loope
push
fidivrs
mov
into
xchg
test
mov
lahf
shlb
inc
mov
sbb
lret
adc
popf
add
repnz
nop
aas
imul
sahf
popa
xor
arpl
jno
cmc
inc
jl
sarb
or
fdivrp
testl
add
pop
fiaddl
pop
inc
insl
jmp
mov
sub
ret
cmp
xor
sbb
loopne
dec
sub
mov
stos
xor
mov
inc
xor
and
sahf
xchg
cmp
cmp
dec
xchg
fnstcw
jns
xor
push
shl
dec
push
cmp
xchg
pop
cmp
sub
jae
lcall
push
adc
out
cmp
cmp
addl
scas
sbb
in
sub
ljmp
and
hlt
into
shrl
js
xor
je
sbb
inc
add
lods
inc
and
mov
or
sarl
xchg
pop
jns
cs
stos
cmp
lcall
push
jl
rol
xorl
mov
jne
nop
out
loopne
xchg
xor
dec
in
test
add
nop
pop
pop
cmp
adc
sub
add
cmp
jae
jle
xor
lcall
push
sub
push
cwtl
jmp
add
cmc
lock
roll
and
push
and
ljmp
into
add
cmp
jbe
sub
inc
inc
dec
out
adc
shrl
xlat
jmp
movsl
jne
pusha
mov
jbe
inc
add
and
out
mov
push
inc
fwait
cmp
enter
cmp
xor
sbb
mov
inc
pop
fcmovu
push
es
sub
sub
push
fadds
out
push
inc
jbe
pop
jns
add
xchg
sbb
inc
mov
cmp
mov
movsl
jno
jle
mov
dec
add
pusha
mov
jae
adc
hlt
inc
pop
sub
lahf
inc
jns
fmul
add
imul
in
sub
and
orl
sahf
inc
or
adc
or
or
or
xchg
adc
cmpb
sub
jnp
pop
rol
sub
shl
cmpsl
sub
fstpl
xorb
ja
iret
imul
add
or
not
clc
je
dec
mov
mov
push
add
jg
adc
shrb
ret
add
out
jmp
sub
adc
xlat
push
inc
adc
clc
mov
push
xchg
jb
stos
and
xchg
cmp
inc
int
pop
inc
sbb
adc
movsb
or
inc
xor
mov
fmull
ds
adc
andb
mov
or
daa
cmp
push
insb
cwtl
inc
push
roll
dec
out
aaa
or
adc
pop
gs
cmp
lret
ss
sti
mov
xor
mov
fidivrs
shl
add
add
mov
push
cmpsl
xchg
add
cmp
or
cs
mov
inc
jo
cs
jno
sbb
add
or
cld
movsb
mov
inc
dec
sub
push
mov
and
push
sbb
push
xor
mov
jmp
adc
idiv
lock
push
sar
inc
cmp
insb
jge
xchg
push
decb
jle
push
xchg
sti
pop
cmp
shlb
add
dec
dec
inc
push
cltd
nop
nop
push
shr
inc
pop
imul
xor
push
hlt
dec
pushf
or
into
cmpsl
imul
add
outsl
add
xor
jne
pop
dec
and
sub
xchg
outsb
sbb
inc
les
stc
das
out
or
sub
je
dec
jno
inc
sub
loope
jle
imull
jno
cmpb
jb
push
or
xor
push
xor
rorb
loopne
fmul
dec
sub
sub
cs
xor
enter
arpl
sub
insb
arpl
nop
addr16
movsb
je
push
imul
push
inc
add
mov
cmp
inc
in
cmp
add
mov
inc
dec
pop
int3
adc
add
mov
insl
or
and
xchg
ret
je
loope
cmp
push
adc
jbe
or
imul
adc
loopne
mov
cmp
lods
lcall
int
xor
inc
mov
push
sub
jle
cmove
xchg
adc
xor
rep
xor
xor
xor
mov
ss
xor
aaa
cmp
cmp
or
ss
int
cmp
std
cmp
iret
data16
stos
inc
sbb
hlt
cmp
mov
inc
out
inc
inc
push
pop
gs
and
add
mov
das
orl
or
cld
inc
bound
loopne
nop
and
out
dec
ret
loope
das
and
leave
push
pop
mov
inc
sbb
imul
test
or
mov
lea
xor
dec
pusha
dec
mul
aam
dec
add
ficoml
and
mov
mov
mov
lock
push
xchg
adc
test
add
inc
add
imul
inc
mov
jae
lcall
inc
shrl
jo
sub
push
loope
or
adc
xchg
mov
loop
mov
pop
xchg
stos
mov
mov
jle
dec
mov
pop
sbb
mov
loope
or
xor
jecxz
jns
or
cwtl
movsb
in
or
ss
xor
inc
pushf
rol
xchg
jge
outsb
xor
mov
pop
xor
mov
faddl
lcall
inc
xor
notb
in
add
push
xor
and
aas
pop
fsubl
xchg
in
adc
xor
or
xor
xor
pop
and
inc
add
mov
or
inc
test
sbb
sbb
faddl
push
clc
popf
and
add
add
jb
movsl
nop
and
and
ds
sbb
mov
push
lea
push
cwtl
sbb
sub
add
xchg
jl
jnp
rolb
or
sub
pop
inc
xor
jge
out
dec
adc
pop
iret
and
inc
outsb
mov
scas
jecxz
jbe
cmp
sbb
sti
and
push
pop
adc
inc
push
in
sub
rolb
jnp
mov
dec
mov
faddl
insb
sub
inc
out
add
fcomps
add
rorb
inc
xchg
push
mov
in
or
nop
push
pop
mov
add
push
xlat
lcall
push
hlt
xchg
and
fmuls
jo
ljmp
mov
orb
mov
mov
js
mov
addb
cmp
add
dec
and
xchg
sbb
sub
or
movsb
jecxz
and
or
je
repnz
mov
rclb
add
mov
mov
jmp
scas
add
lret
mov
int
pop
pop
cmpsl
stc
das
clc
or
ljmp
lahf
push
push
nop
mov
mov
or
xor
xlat
fsts
mov
jo
fldcw
sbb
adc
xchg
shl
add
es
cmp
mov
mov
mov
outsl
loop
xor
les
shrb
mov
popa
cmp
adc
add
jbe
jp
jl
bound
mov
cmp
add
mov
adc
sbb
adc
sub
in
into
xor
add
xor
out
push
pop
cwtl
add
inc
add
jl
jg
sbb
sbb
dec
je
xchg
jmp
cmpsb
or
adc
push
inc
dec
adc
femms
cmp
add
jle
sub
jmp
xor
sub
add
addl
aaa
ret
jecxz
loopne
and
jmp
pop
scas
in
sbb
cmpsl
cli
sbb
or
inc
loop
popf
adcb
imul
sbb
bound
rolb
push
jp
rol
stc
mov
inc
inc
add
cs
pop
pop
or
inc
pop
addl
xchg
pop
inc
mov
jo
fimuls
pop
or
loope
adc
jnp
push
data16
mov
push
lret
push
push
sub
adc
pop
lcall
inc
rcll
push
pushf
sbb
inc
push
mov
pop
data16
jmp
out
add
pusha
pop
jb
jmp
push
adc
mov
push
jo
push
addl
and
add
movl
cmp
xor
add
jp
outsb
jo
adc
inc
jo
dec
loopne
or
stos
popl
add
dec
testb
push
adc
mov
lods
bound
rcrb
pop
add
sbb
or
sti
loopne
dec
aam
shll
rolb
cs
dec
jmp
dec
and
xor
bnd
shlb
insb
xchg
add
shr
sub
in
push
in
loopne
and
inc
jo
movsl
jne
or
pop
fimull
fldenv
imul
cld
pusha
xchg
les
inc
sub
and
rol
sbb
inc
xor
movsl
add
imul
add
fs
xchg
pop
out
push
test
xchg
addl
push
push
adc
push
js
inc
fs
enter
jmp
lret
xchg
mov
cmp
dec
inc
loop
jne
or
ret
xchg
push
cmp
inc
push
insb
adc
in
pop
mov
lea
jae
or
ljmp
adc
add
xchg
lret
pop
xchg
movsl
dec
test
and
out
fs
aad
cmp
les
mov
incl
jb
and
mov
sbb
jp
add
mov
je
lea
xor
shl
rcrb
into
sub
cmp
pusha
popa
sub
cmp
jge
push
jecxz
xchg
push
jmp
pop
jmp
dec
dec
addb
insl
pop
imul
adc
testb
jp
lock
sub
fs
in
and
je
test
and
loop
test
shr
sbb
shlb
jmp
add
jae
jmp
push
mov
popa
pop
fwait
and
ret
addr16
push
mov
loope
xchg
push
cld
sub
cmp
xor
outsl
orl
and
inc
mov
and
int
and
add
out
ds
add
dec
lea
lahf
add
shlb
xchg
jb
push
dec
jnp
addb
sbb
cmpsl
jae
fs
sbb
adc
pop
push
sbb
enter
fbld
das
xchg
or
add
into
xchg
or
stc
and
adc
dec
addl
cmp
les
inc
dec
adc
adc
sub
add
add
pop
int
sti
pushf
cmp
jbe
sub
out
jne
jg
sub
adc
inc
sbb
sub
xchg
data16
xchg
inc
jae
aaa
mov
push
mov
push
imul
pop
cmp
mov
or
mov
jne
scas
mov
or
jae
outsb
fcmovne
xchg
add
mov
mov
gs
mov
dec
ljmp
inc
jg
sub
mov
or
mov
inc
dec
fmull
mov
or
rorb
adc
std
cmp
sbb
xorb
enter
rcrb
dec
sbb
sbb
mov
jne
inc
loope
or
shl
add
and
jmp
add
test
mov
pop
jae
dec
loope
negl
les
and
add
dec
lods
ret
pushl
dec
in
shlb
push
imul
adc
insw
mov
sbb
or
dec
ret
mov
loopne
and
pop
or
leave
push
inc
loopne
lods
adc
lods
ret
push
mov
sub
cli
sbb
addl
jae
je
mov
sub
sub
inc
or
or
inc
sbb
inc
xchg
cmp
aaa
pop
jnp
sub
jl
inc
das
push
insb
out
out
das
cltd
ret
lea
addr16
add
mov
push
pop
add
sub
adc
ljmp
dec
mov
or
loop
shl
lahf
dec
les
sub
dec
test
bound
les
xor
rclb
mov
lds
jae
test
loope
inc
les
push
mov
add
inc
xchg
mov
add
movsb
inc
or
jne
gs
or
jae
dec
adc
xor
add
add
adc
or
hlt
testl
out
sub
jbe
or
cwtl
add
out
push
adc
add
and
xchg
xor
cmc
scas
inc
sbb
inc
or
sbb
je
xchg
sub
push
jmp
inc
inc
xor
jbe
fwait
pusha
fsubrp
add
jne
mov
dec
shr
adc
movsl
add
mov
filds
cmp
jbe
pop
add
push
inc
call
bnd
mov
mov
inc
lds
pop
notb
rorl
aaa
cmp
jae
sti
cmp
push
xor
je
arpl
cmp
sub
mov
push
orb
cmp
or
imul
subl
loope
jp
jmp
dec
push
popa
loopne
inc
or
inc
push
loope
sub
imul
xor
push
xchg
sbb
add
sbb
xor
pusha
jae
notb
xor
push
movsb
shlb
outsl
lods
inc
call
shl
add
clc
leave
jns
outsl
and
lods
inc
cld
repnz
add
stos
je
sbb
lods
sbb
mov
and
push
jno
cmp
dec
push
inc
dec
inc
jns
jb
lea
subb
aaa
sub
add
xlat
add
mov
cmp
test
adc
enter
dec
or
loope
add
adc
insb
add
push
loopne
xor
xor
sbb
dec
rcrb
xlat
out
jl
xor
rcr
sbb
push
mov
pushf
jno
add
and
adc
jge
pcmpeqd
pop
pop
out
add
mov
sub
imul
incl
push
ja
stos
adc
jle
mov
push
dec
sbb
outsl
or
js
pop
out
mov
cmp
jbe
cmp
ds
inc
or
insb
fcmovnbe
inc
push
roll
rolb
sti
fistpl
sub
movsb
push
aam
push
rorb
sbb
insb
dec
sahf
xlat
ficoml
lea
loop
inc
mov
fmuls
push
push
lock
jae
xor
fwait
dec
sahf
add
subb
mov
inc
xor
jmp
adc
pop
dec
inc
sub
cltd
sbb
in
jle
sarl
popf
decb
lea
add
int3
in
rcrl
sahf
sbb
jecxz
popf
cmp
xor
push
shll
pop
sbb
adc
dec
and
and
test
ja
xor
mov
sbb
aaa
sub
fwait
ja
add
in
xor
cmp
enter
mov
enter
repnz
dec
repz
dec
add
adc
les
repz
cmp
jo
cmc
or
je
andb
pop
push
fmull
dec
call
xor
dec
sub
sub
icebp
add
cmpl
nop
ret
bound
ret
ss
adc
sub
mov
adc
pusha
and
or
dec
jle
aam
xorb
pop
and
les
rclb
enter
pop
xor
dec
pusha
pop
dec
hlt
pop
push
add
push
fstpl
mov
sub
in
jmp
adc
sub
sbb
fstpt
mov
je
jno
add
ljmp
or
lret
icebp
add
fcmovb
rcrl
jmp
mov
mov
clc
or
sbb
xor
or
test
loope
cmp
jbe
and
push
fmul
xchg
adc
out
lret
dec
jo
repnz
sbb
hlt
sub
icebp
sub
or
sub
jbe
loopne
mov
inc
clc
je
enter
call
add
mov
mov
adcl
add
or
pop
paddd
mov
clc
sub
adc
std
shlb
adc
mov
or
mov
scas
inc
add
cmp
and
je
sbb
hlt
jmp
int3
push
dec
inc
aaa
test
dec
or
mov
and
and
dec
and
into
cmp
pop
loopne
push
add
xchg
push
scas
pusha
or
jle
dec
push
mov
icebp
add
lods
int3
dec
inc
mov
andl
sbb
add
xchg
and
sbb
sub
mov
mov
in
xchg
adc
cmp
mov
push
mov
dec
cmpl
jp
lahf
cmc
cmpsb
mov
add
cli
fs
xor
dec
cmpl
or
adcb
ds
imul
loop
movsb
sbb
in
sbb
addl
jnp
inc
inc
mov
pop
adc
or
jg
lea
push
dec
pop
cmp
push
mov
fdivrs
mov
lcall
das
fnstsw
mov
dec
jnp
fisttpll
pop
sbb
jg
lods
sbb
ret
mov
and
or
gs
jle
mov
cmp
adc
fsubrs
inc
ljmp
mov
int
add
or
cmp
adc
shl
xchg
add
movd
sub
jle
shll
adc
xchg
xchg
movsl
cmp
outsb
mov
mov
pop
adc
sub
decb
push
xor
fstl
fisttpl
outsb
inc
xor
rolb
xor
sub
add
push
std
dec
ljmp
sub
out
addl
inc
insb
pop
jl
add
add
add
push
cwtl
loop
int
hlt
fs
inc
add
cmc
leave
push
lods
jge
pop
lock
aas
mov
sbb
rol
jecxz
int
sbb
lods
hlt
adc
test
mov
pop
outsl
dec
jle
clc
mov
lea
adcl
and
data16
imulb
idivl
addl
pop
jns
inc
subl
jg
cmp
mov
out
and
test
cmp
std
sbb
aam
adc
test
idiv
sbb
xchg
cmp
fcomip
scas
leave
jo
mov
mov
sub
pop
movsl
mov
out
mov
jbe
js
pusha
xor
mov
mov
cmpsl
fdivrs
ret
cmp
les
xchg
cmp
loopne
or
incb
decl
outsb
mov
idivl
out
lea
xor
jno
sbb
cs
test
cld
aam
je
mov
xor
push
imul
cmp
fcomp
lret
mov
frstor
int
and
jge
in
fwait
sysenter
jo
outsb
and
psllq
xor
adc
mov
jle
aaa
mov
sbb
je
dec
mov
inc
arpl
jo
mov
popa
push
jmp
ficomps
inc
inc
repnz
jl
jmp
jae
mov
dec
jge
mov
in
mov
xchg
jg
xchg
insl
or
outsb
movb
xor
add
add
out
aas
je
add
push
cmpl
xlat
adc
daa
xchg
mov
sar
sbb
sub
add
and
adc
dec
mov
jge
pop
scas
scas
repz
adcl
clc
mov
dec
jl
push
mov
fnstcw
inc
adc
insl
test
and
xlat
test
mov
add
das
das
mov
xchg
add
xor
xor
mov
loope
test
jo
std
or
add
xlat
pop
out
mov
add
out
orl
jmp
jnp
pop
dec
jl
mov
mull
cmp
and
cmpsb
add
mov
mov
mov
mov
and
push
mov
addl
sbb
inc
sbb
mov
sub
inc
xchg
sbb
into
jle
clc
sarb
fidivl
jle
add
sub
or
out
pop
test
mov
mov
ja
jg
aaa
add
in
and
aaa
jl
xor
sbb
test
push
or
or
adc
mov
test
and
adc
fcmovnb
lock
jns
pop
jge
aaa
cwtl
push
sbb
cwtl
jb
fcoml
mov
mov
daa
jns
push
push
and
push
rcr
pop
and
je
inc
insb
ss
jle
repnz
testl
sub
nop
jle
cmp
iret
ret
push
mov
cmp
mov
dec
mov
mov
cld
out
or
shl
or
dec
outsl
push
add
mov
sub
pop
shl
in
or
sub
std
sub
lahf
add
icebp
or
add
add
dec
orl
xor
in
andb
mov
or
adc
insb
cltd
or
mov
mov
nop
xchg
or
sbb
andl
or
inc
mov
add
xorl
arpl
add
push
dec
sti
cwtl
add
nop
and
out
decl
das
dec
xor
cwtl
aas
cmp
mov
add
ret
inc
dec
inc
sbb
cltd
inc
xchg
mov
movb
and
les
je
or
xchg
jmp
mov
and
fcomi
mov
and
jp
fdivr
sub
adc
fsubl
sbb
add
cs
dec
push
cld
and
xor
sub
in
mov
jmp
cmpl
dec
dec
dec
clc
jge
add
adc
lea
add
add
dec
xchg
mov
mov
jp
mov
cmp
jge
outsl
or
sub
dec
shl
dec
xor
mov
aam
rcl
mov
pusha
ret
lock
pop
mov
lret
or
dec
mov
rorl
cli
xchg
addl
jae
inc
out
loopne
dec
add
andb
xor
inc
clc
pop
leave
xchg
dec
incl
addb
inc
ret
cltd
or
xchg
std
adc
sub
cmp
xchg
cmpsl
add
mov
jg
jecxz
sbb
adc
inc
jl
mov
mov
mov
xchg
cld
sqrtps
xor
mov
jb
comiss
int
mov
mov
out
fisubl
add
add
popf
mov
inc
inc
jge
inc
ret
cld
dec
arpl
lahf
mov
pop
push
add
clc
mov
add
test
scas
jne
mov
xchg
mov
mov
ror
nop
sub
jge
imul
or
cmp
nop
pop
sar
jo
dec
adc
mov
int3
nop
sbb
push
cmpsl
out
adcb
dec
push
jbe,pt
dec
je
push
push
call
add
sub
mov
adc
data16
inc
rorl
clc
jle
sbb
cmp
adc
jmp
and
push
inc
add
xor
push
dec
inc
dec
xor
inc
icebp
mov
push
je
aas
inc
xor
lods
sub
test
jbe
xchg
or
sar
lock
sarl
mov
pop
pop
movsb
push
xlat
popf
inc
push
add
pop
mov
mov
adcl
pop
and
dec
add
mov
adc
fld
adc
xchg
adc
jle
test
jbe
sbb
mov
mov
sbb
xchg
mov
fstpl
and
pop
mov
mov
cmp
or
inc
sti
push
loopne
jb
jmp
lea
or
dec
pop
mov
sbb
push
or
dec
sbb
movsl
add
cmpsb
pop
add
sbbb
lea
repz
push
out
mov
daa
int
adc
sbb
sub
js
sbb
mov
jl
adc
lea
add
sbb
or
js
clc
pusha
mov
xchg
aam
inc
in
push
pop
sub
dec
mov
ljmp
fs
das
mov
jbe
fiadds
movsb
int
jae
push
dec
outsl
insl
xorb
sbb
push
int3
jne
ret
mov
xchg
jmp
inc
in
dec
movzbl
lahf
cmp
xor
jg
xor
dec
xlat
jp
adc
rorb
jb
nop
nop
mov
xor
pop
arpl
cmp
mov
xor
pop
pop
inc
loop
fidivl
sbb
adc
sub
mov
xor
lret
repnz
jp
mov
jmp
push
and
mov
pop
mov
aas
mov
stos
inc
mov
jo
dec
cmp
xchg
lahf
jge
jecxz
sub
lcall
movsb
xor
xchg
or
pop
cmpl
and
sub
add
xchg
mov
or
test
into
lock
add
imul
or
lahf
lea
test
clc
stc
je
fldenv
jno
andb
adc
pop
jg
adc
and
xor
sbb
jmp
push
out
mov
mov
or
mov
pop
adc
es
add
add
mov
lods
mov
mov
mov
negb
push
adc
push
sub
pop
mov
movsb
shll
js
add
xchg
xor
xor
notb
cs
pop
pop
lods
xor
sbbl
lcall
dec
jo
mov
pop
adc
inc
mov
imul
xchg
add
addl
inc
sbb
scas
jae
jl
or
pop
mov
int3
and
jne
nop
mov
inc
rolb
mov
incb
dec
and
or
sar
leave
fs
or
mov
adc
sbbl
pop
movntps
fs
pop
xchg
sbb
sub
mov
ss
sub
push
nop
xchg
jl
jge
mov
add
inc
push
out
jbe
in
jle
sub
out
sub
imul
adc
sbb
xor
mov
test
cmpsl
pop
and
lea
lds
daa
pop
xchg
pusha
push
mov
aaa
mov
push
mov
cld
pop
in
not
mov
and
fwait
or
aaa
sub
cltd
mulb
add
not
cmp
or
or
in
or
mov
dec
mov
mov
push
inc
sub
or
call
add
les
push
cld
sub
cmp
outsb
inc
inc
dec
cmp
ret
cmp
popa
jmp
push
into
sti
addr16
shll
and
sub
mov
and
add
jb
add
fsubr
cmp
dec
mov
je
es
out
cmpsb
add
adc
xor
sbb
out
mov
aaa
inc
pop
cmp
xchg
jg
call
rol
ljmp
or
push
out
daa
sbb
es
adc
outsb
push
mov
rcrb
inc
add
pop
or
outsl
mov
inc
gs
xor
sbbl
dec
shlb
sbb
pop
pop
sub
mov
and
xorl
sbb
xor
add
outsb
inc
dec
inc
jne
enter
clc
adc
xor
jb
mov
or
sub
push
mov
pop
xor
out
or
out
and
call
mov
int3
mov
fwait
inc
or
mov
mov
pop
mov
xor
test
jg
test
and
and
orb
sbb
add
dec
and
push
jae
arpl
lea
fsubr
sbb
mov
xchg
and
call
loopne
xor
push
mov
sbb
idivl
adc
ffree
jns
add
sub
add
or
lods
cmp
sbb
addl
movb
in
leave
dec
or
dec
popa
add
sbb
mov
sub
imul
inc
data16
ljmp
pop
inc
enter
dec
xor
shl
inc
sbb
ja
je
rolb
inc
loope
push
or
shr
int3
fbld
sub
cmpsl
push
mov
inc
sub
int
decl
jb
or
dec
cltd
daa
incb
add
add
fs
and
pusha
mov
aam
push
and
cmp
sub
inc
sub
mov
add
inc
fisubs
sar
jl
lea
out
dec
fnstsw
push
dec
loop
aas
test
in
and
insl
mov
cs
jne,pn
adc
daa
dec
cli
sbbl
xor
imul
add
cld
push
xchg
xchg
je
add
inc
scas
mov
push
je
loopne
aas
jns
je
jle
cmp
mov
push
mov
stos
mov
jg
inc
push
dec
inc
inc
push
xlat
sbbb
add
je
vmovhps
repz
add
enter
imul
xlat
imul
ja
push
or
pop
mov
loopne
sahf
loopne
pop
push
jb
testl
cltd
adc
out
sbb
lods
and
inc
adc
inc
jl
xchg
pop
push
je
inc
inc
pop
xchg
shlb
add
cmpl
jbe
fildl
mov
and
xchg
gs
ficoml
push
adc
and
pop
cmpsl
scas
and
dec
and
push
fsubrp
scas
nop
jo
push
and
mov
hlt
pop
cmp
pop
cld
mov
and
dec
lret
mov
loopne
cmp
xor
or
mov
rorb
adc
pop
ret
fisttps
dec
aas
adc
call
xchg
push
cmp
mov
and
clc
es
or
adc
les
test
add
ror
mov
mov
in
xor
pop
sbb
push
js
pop
ss
ja
and
add
and
xchg
xor
inc
cs
push
add
pop
and
aam
and
enter
mov
xchg
add
xchg
jae
ja
push
push
inc
ficoml
pop
cld
pop
add
add
dec
push
in
jnp
inc
in
das
aam
fsubrs
fcoml
popl
add
adc
push
or
test
jns
push
mov
cs
clc
scas
sbb
add
xor
add
popa
sahf
test
popf
in
sbbb
xor
jmp
hlt
loopne
or
shll
and
movsb
std
lds
cmp
push
pop
int3
sub
movsb
scas
jne
mov
leave
mov
mov
sbb
sub
test
lea
test
lods
jnp
lea
mov
xchg
ret
push
dec
cmc
push
lret
jp
ss
inc
push
and
insl
lret
int
aam
int3
cmpsl
adc
arpl
cmp
pop
push
push
or
fildll
push
push
ljmp
jb
inc
in
fwait
cmp
jbe
adc
adc
les
daa
rorb
repnz
push
lods
add
mov
pop
jge
xchg
jbe
fstpt
xchg
jb
or
or
or
or
scas
imul
cmpsb
in
shll
bound
fs
cmp
pop
iret
sbb
add
adc
enter
iret
mov
lock
add
stos
dec
stc
mov
xor
iret
enter
hlt
pop
pop
subb
add
cld
jecxz
adc
xor
jp
sub
cmc
mov
cwtl
xor
fadds
xor
mov
pop
jbe
cltd
xor
xor
xor
in
pusha
cmpsl
jne
insl
out
sbb
mov
aas
bound
jle
lcall
js
xchg
mov
dec
add
cmp
incl
jnp
fsts
js
inc
test
push
adc
pop
xchg
test
repnz
adc
lea
xchg
xlat
xchg
or
adc
fdivs
ja
ja
jmp
sbb
and
and
push
out
je
outsb
mov
push
mov
push
mov
add
add
jg
clc
push
jecxz
dec
nop
mov
sbb
add
repz
or
cmpsl
in
mov
push
outsl
fadds
sbb
loop
inc
add
sbb
ja
int
mov
jnp
or
jns
mov
shlb
idivb
mov
mov
mov
sarb
es
inc
daa
les
les
mov
and
jle
out
movl
faddl
xor
cltd
or
sub
enter
adc
sbb
imul
mov
fists
or
jbe
sub
mov
pop
fsubl
dec
mov
and
jle
gs
or
dec
xor
lret
fldl
mov
jge
in
mov
add
jmp
sub
sub
cmp
adc
filds
xchg
and
lock
push
repnz
xor
clts
jge
sbb
pop
or
pop
inc
mov
mov
dec
jge
sub
test
addb
adc
bound
mov
add
jae
adc
sub
mov
adc
pop
xchg
mov
pop
ret
jle
cmpb
and
pop
xor
or
fisubl
mov
or
imul
jo
lock
hlt
ja
stc
imul
push
add
es
xchg
aaa
popf
in
pusha
fcmovnbe
mov
das
das
rclb
imulb
add
in
push
or
clc
xor
jg
insl
push
or
push
inc
fdivl
mov
imul
sub
mov
mov
xchg
pop
fidivrl
cmp
das
nop
loopne
pop
jae
and
test
aam
mov
lods
fsubs
sbb
push
jg
inc
ficomps
ds
xchg
bound
call
out
test
push
or
mull
sub
jae
jae
push
shll
cmp
xchg
sub
jge
dec
mov
aas
or
cmp
jge
add
xlat
push
out
adc
cwtl
adc
jecxz
mov
cmp
push
sbb
andl
jae
lahf
sub
ds
add
and
push
pop
add
and
loopne
xchg
mov
fmuls
xor
and
test
adc
or
sub
sub
cltd
lea
rcl
xchg
and
pop
cmpsl
push
push
outsl
xor
dec
insb
cmpl
faddl
fwait
adc
add
movsb
fists
cmpb
push
les
inc
mov
pop
adc
inc
imul
mov
lods
sti
xor
inc
add
iret
out
in
and
je
adc
sub
pop
enter
jge
adc
pop
xchg
push
or
adc
loopne
mov
xchg
int3
cmpsl
sbb
rcrl
push
enter
test
je
call
xchg
dec
mov
pop
cmp
loope
push
dec
ss
call
xchg
pop
xor
add
or
or
sub
or
adcl
ret
xchg
rolb
call
or
cmp
pop
dec
add
mov
sub
jmp
xor
arpl
sub
shll
and
lods
inc
mov
jmp
lea
pop
aaa
fwait
mov
call
add
in
leave
int
aaa
xor
sub
lret
or
loopne
and
sub
xor
or
mov
sbb
or
jp
mov
mov
jecxz
mov
jne
imul
mov
push
sbb
inc
or
pop
mov
enter
mov
pop
xchg
pop
out
loop
mov
fs
xchg
pop
xchg
mov
xor
pop
daa
push
sub
mov
lcall
mov
aam
mov
daa
movsl
rcll
mov
vbroadcastf64x2
cmpl
pop
or
test
popa
jg
mov
lock
orb
cmc
ret
or
test
int
imul
mov
inc
xchg
out
add
nop
stos
adc
add
or
das
mov
jne
add
push
adc
test
aaa
mov
dec
mov
addr16
mov
cs
push
add
or
cmp
cmp
fcomps
and
mov
xor
clc
jmp
pushw
movsb
or
imul
rol
sbb
jmp
rolb
push
adc
dec
test
in
dec
push
push
inc
push
inc
aas
lcall
cmp
mov
outsb
mov
sbb
es
bound
enter
out
add
sar
sbb
add
jb
jp
pop
jbe
addr16
mov
cld
int3
test
pop
push
mov
or
and
sub
fbstp
icebp
dec
stos
call
or
add
cmpsb
push
sbb
mov
sbb
dec
pop
std
add
pusha
bound
dec
jne
add
jbe
xor
aad
pop
push
mov
movsl
push
cmp
loopne
out
mov
jo
pusha
pop
and
mov
push
add
jns
cmpsl
and
push
inc
mov
adc
popa
loope
int3
and
icebp
lea
lea
test
push
push
movsb
pusha
and
xor
mov
lea
andb
imul
add
sbb
fisubs
jmp
je
mov
xchg
sbbb
je
clc
lea
cmp
adc
fwait
test
cmpsb
icebp
pop
xchg
mov
jne
in
mov
push
pop
sbb
jo
pop
push
sbb
pop
pusha
daa
push
lea
lea
mov
shlb
mov
out
test
sub
xchg
adc
sbb
test
xor
aam
push
pop
cmpsb
and
movsb
cmp
sbb
sarb
call
andl
dec
sbb
scas
fwait
pop
or
pop
jne
or
add
mov
mov
and
ljmp
outsb
nop
inc
inc
mov
ror
in
or
push
xor
outsl
push
pushf
pop
push
mov
inc
fcoms
dec
nop
or
fldl
lea
ret
adc
mov
push
fstp
fucomp
mov
daa
pop
cltd
out
aam
cwtl
test
in
xlat
insb
xchg
daa
xchg
mov
mov
mov
sub
mov
nop
ret
ror
adc
addb
push
pop
cld
inc
push
and
rorl
sbb
cltd
inc
xchg
dec
cmp
xor
in
in
ret
pop
shr
insb
mov
push
cltd
lods
enter
cmp
mov
fldenv
leave
mov
adc
rcll
push
mov
jb
lock
jle
cltd
xchg
or
ja
xchg
outsb
pop
das
push
inc
pop
rclb
push
push
cmp
fdivrl
jne
cmp
adc
in
insb
adc
inc
cld
pop
icebp
pop
dec
icebp
and
sbb
xor
cli
loope
and
repz
sarb
push
sbb
fwait
sti
test
es
test
inc
push
out
das
fcompl
or
push
xchg
fwait
addr16
js
xlat
test
ret
push
in
mov
jbe
dec
dec
and
or
ja
push
insl
rorl
je
xor
lods
das
call
sub
and
fnstenv
add
les
sbb
push
sahf
mov
pop
xor
dec
cltd
sbb
pop
les
inc
and
call
sbb
imul
xchg
push
push
jmp
ret
cltd
adcb
sbb
cli
push
dec
adc
mov
xchg
aaa
sbb
arpl
nop
jge
js
pop
sub
jne
loopne
sub
pop
fcmovnb
inc
lcall
xor
xchg
mov
push
add
adc
sub
xchg
and
mov
out
pusha
stc
sbb
push
xchg
pop
and
and
inc
fisubrl
insl
mov
roll
adc
inc
jo
frstor
repz
stos
rorb
xchg
gs
xor
sub
xchg
rcll
cmpsb
ret
add
mov
fdivrs
nop
xchg
test
dec
lock
enter
in
in
add
lea
insl
in
lea
xchg
lock
and
cmpsl
ljmp
movsb
inc
mov
popf
bound
dec
jecxz
xchg
in
clc
pop
or
jb
aaa
lods
and
mov
in
pop
xor
lea
pop
add
add
orl
insl
or
xchg
aad
xchg
lods
xchg
push
xor
sbb
xchg
ss
cmpb
adc
ss
xor
insl
push
xchg
mov
jge
xchg
faddl
ret
in
mov
adc
ret
jno
popf
or
xor
xor
or
add
cltd
mov
mov
lock
daa
or
in
popf
nop
lcall
into
test
pop
dec
add
addr16
fsubrs
mov
aad
pop
ret
pop
mov
sbb
and
or
jns
xor
data16
add
jbe
stos
xchg
movsl
add
and
lret
inc
and
pop
shll
ret
movsl
inc
and
jg
jns
icebp
cli
and
bound
test
mov
jb
int
add
fldl
dec
jecxz
insl
loop
shlb
loop
mov
mov
adc
in
fdivrl
call
into
lock
or
mov
fisubrl
shll
pushl
cmpsb
lock
sbb
xor
jb
loop
pop
std
push
dec
fisubrl
frstor
adc
inc
jbe
cmp
je
pop
jns
arpl
sbb
adc
xchg
imul
ljmp
adc
sbb
jns
lret
cmc
aaa
mov
mov
shll
cli
push
loop
sbbl
scas
fcomps
mov
sub
std
mov
sub
push
or
jmp
fadd
dec
mov
mov
jle
ret
inc
cs
jmp
or
decl
or
push
jns
cwtl
mov
lock
push
push
mov
lds
gs
pop
es
addb
pushl
popf
outsl
jb
cltd
dec
test
jg
and
cmp
in
xchg
icebp
mov
fstpl
clc
js
lcall
mov
outsl
pop
mov
insl
lea
cmp
lahf
cmp
lcall
push
fisttps
call
int
cld
and
xor
decl
add
inc
clc
push
js
pop
popw
mov
sbb
cwtl
mov
stc
jle
xchg
mov
pushl
sub
and
cmp
add
cmp
mov
pop
mov
idivl
mov
mov
addb
jne
sbb
cmpsb
or
adc
ja
loope
push
and
jns
add
dec
jnp
inc
jl
dec
scas
and
inc
movsb
adc
daa
call
sbb
mov
sbb
in
sbb
dec
pop
sub
stos
js
std
push
cltd
pop
outsb
int3
fistpll
sub
dec
fnstsw
inc
mov
push
loop
inc
cmp
pushl
add
pushl
ds
or
pop
sbb
inc
decl
addb
push
sbb
decl
pop
jb
addb
cmp
push
int
int
or
push
pop
ljmp
mov
into
test
test
jg
mov
adc
pop
jg
incl
test
mov
ds
inc
pop
test
mov
push
incl
cmp
es
mov
outsb
scas
movsb
out
mov
out
cld
hlt
add
decl
push
or
adc
xor
mov
mov
enter
jb
je
ljmp
scas
push
pop
cmpsb
es
jle
movsl
mov
mov
ljmp
inc
add
jnp
mov
xor
and
or
pop
fsubs
cmp
out
leave
dec
call
pop
pop
or
sub
fstpl
xor
aas
push
in
ljmp
adc
mov
sbb
and
stc
test
inc
pop
pop
push
pushl
fnstcw
and
sahf
push
add
enter
xor
jne
lock
jecxz
frstor
push
adc
cmp
negl
push
push
dec
add
int
fildl
mov
sbb
mov
push
mov
les
inc
ret
cmp
jne
loopne
inc
and
insl
nop
jnp
adcb
adc
push
orb
addr16
adc
lahf
sub
push
or
cwtl
mov
call
fiaddl
leave
mov
or
cmc
aaa
insl
cs
fldcw
lahf
cmp
sbb
add
sbbb
and
enter
sub
cmp
pop
shlb
jne
or
push
call
imul
enter
mov
pop
jecxz
loop
fsubr
mov
add
addl
xchg
pop
or
add
arpl
adc
roll
negl
or
mov
testl
adc
lahf
je
push
add
data16
js
add
and
dec
add
and
enter
icebp
les
push
jp
add
xorl
movsb
cld
lahf
dec
cmp
loopne
push
pop
addb
jne
bound
and
xor
lahf
fs
and
xor
push
into
fucom
dec
adc
insb
pushl
dec
xchg
js
and
divb
sbb
fwait
js
push
push
out
mov
push
aas
and
jbe
jmp
out
mov
mov
test
rcl
jb
leave
mov
pop
repnz
cmpsb
pop
movsl
iret
loopw
pop
push
sub
mov
dec
jl
add
xor
outsl
scas
push
adc
hlt
sbb
jecxz
add
mov
xor
lock
lock
add
movsb
loopne
mov
imul
outsl
call
daa
in
add
aaa
aam
pop
sbb
aaa
loopne
dec
gs
fdivrl
sub
repnz
mov
or
enter
std
imul
ret
pop
jge
adc
push
and
pusha
push
sbb
xor
push
sarb
sub
movsl
ja
mov
or
int
push
cwtl
adcl
mov
enter
in
mov
push
int3
or
add
inc
sub
insb
pushf
add
out
mov
sbb
mov
mov
sarb
add
out
lea
inc
xor
jl
adcl
or
lods
sti
dec
jbe
mov
clc
jl
mov
add
test
leave
add
dec
fidivrl
adc
rolb
sarb
sbb
js
or
sbb
dec
movsl
loopne
adc
cmp
pop
mov
addl
imul
xor
shrb
imul
pusha
dec
rcrb
pop
adc
pop
shrb
imul
inc
push
js
jo
call
lcall
js
push
mov
pushf
xor
push
fs
mov
sub
stos
repnz
js
in
push
mov
sub
adcl
fs
xchg
or
test
mov
sbb
movsl
loope
jl
sti
dec
sarb
rcrl
sub
and
dec
pop
and
mov
mov
ret
sahf
inc
pop
mov
adc
lock
sbb
cs
sub
int
mov
loope
arpl
inc
mov
adc
std
adc
cmp
repnz
sub
ja
fsts
inc
std
cmp
call
or
inc
xor
mov
dec
mov
xor
pop
add
xor
xchg
or
inc
and
mov
add
lods
sbb
iret
pop
cmpsl
outsb
repnz
aaa
add
lods
stos
push
push
sbb
inc
sbb
hlt
sti
out
pop
add
arpl
lret
push
and
imul
pop
mov
cmp
das
sti
adc
loopne
loop
or
and
lods
add
cltd
add
inc
adc
pop
jnp
rolb
jno
dec
push
adc
xchg
enter
repnz
insl
jecxz
and
rcrb
rcll
push
mov
inc
or
sub
and
mov
mov
sbb
test
dec
mov
jecxz
iret
test
adc
jae
mov
cmp
jns
inc
add
loopne
sub
sbb
dec
inc
lahf
out
mov
dec
or
push
or
push
incl
dec
loope
jle
stos
xchg
jae
pop
jo
jno
daa
insb
std
addl
je
xor
or
inc
xchg
lods
movzbl
sub
inc
nop
jb
gs
push
lret
adc
push
push
jp
add
jne
pop
xchg
adc
push
lds
or
xor
push
adc
in
cmp
gs
sbb
in
dec
lock
mov
in
ljmp
lods
test
aam
idiv
sbb
pusha
cmpsl
jle
or
test
pop
sbb
jge
sbb
aas
insb
in
lock
call
xchg
xchg
rcl
aaa
lock
bound
cmpsl
sbb
mov
xchg
stos
es
repz
enter
fidivs
out
and
push
sub
imul
add
mov
xor
nop
inc
mov
jp
shrb
xor
push
sti
mov
jae
mov
enter
lock
cld
jmp
or
pop
sbb
incl
push
xor
mov
mov
lahf
aaa
add
stc
fisttpl
shll
and
je
jo
daa
outsl
enter
call
popa
jmp
mov
scas
repnz
pop
or
cld
adc
cmpsb
xchg
jmp
lahf
sbb
xor
clc
mov
mov
inc
hlt
and
push
jbe
xor
xor
jns
cld
push
pop
add
ds
push
push
mov
or
sub
js
sbb
shlb
dec
adc
cmp
mov
push
out
iret
and
incl
scas
cld
popf
subb
daa
loope
and
in
cs
push
ret
loopne
pop
mov
jg
fsubr
or
lret
rclb
or
add
sub
adc
ret
mov
out
jne
movsl
inc
imul
test
sarl
leave
clc
fbstp
push
pop
arpl
and
out
insl
adc
das
push
test
dec
stc
bound
shlb
fldl
xor
dec
fstpt
adc
or
mov
ret
mov
mov
mov
movsb
adc
xchg
inc
call
pusha
adc
inc
subl
pushf
pusha
icebp
xchg
adcb
je
jp
xor
dec
mov
rclb
outsl
clc
lods
outsl
and
pop
mov
inc
jne
jne
mov
mov
push
mov
inc
orb
fiaddl
mov
lock
in
dec
repz
cld
jne
gs
dec
xor
aaa
out
aaa
rorl
dec
mov
sbb
fs
dec
adc
cwtl
or
pop
push
into
outsl
cmpsb
loopne
mov
ss
dec
dec
add
mov
adc
push
sbb
or
sbb
dec
shl
xor
adc
dec
jecxz
mov
loopne
out
add
mov
adc
mov
inc
mov
popf
lret
add
pop
rcll
dec
mov
mov
push
aad
mov
clc
mov
cmp
sub
push
rcl
pop
je
push
clc
cwtl
dec
enter
je
test
popa
xchg
inc
jne
out
inc
push
add
mov
add
jp
rcll
shrl
xchg
mov
call
cmp
xor
fs
push
xor
push
faddl
sub
loopne
pusha
orb
mov
adcl
xchg
cmp
lea
or
mov
mov
add
fld
fisttpl
mov
pop
mov
lcall
addr16
cmp
shrl
rcrb
iret
ja
stos
sbb
enter
fistpll
fwait
xorl
lock
push
loope
add
add
test
push
xchg
sbb
les
movsb
xorl
xchg
or
pop
mov
sbb
xchg
imul
faddl
rorb
lock
fwait
subb
ret
push
sbb
xor
sti
adcb
jmp
enter
cmp
aam
in
adc
andb
or
icebp
pushf
push
and
mov
add
sbbb
mov
xor
mov
mov
xorl
addr16
repz
mov
sbb
xchg
jno
mov
mov
jae
add
pusha
or
out
push
jmp
ficoml
or
insl
in
pusha
fidivrl
sbb
cltd
or
cld
out
aam
call
mov
stc
mov
add
out
push
push
mov
aad
mov
push
inc
pusha
push
movsb
add
shll
adc
outsb
and
and
or
outsl
clc
mov
jo
xor
push
int
push
aad
adc
mov
sarl
lods
fwait
mov
push
xor
and
add
imul
add
mov
jb
out
insb
popf
adc
push
loop
rol
dec
scas
sub
cmpsl
mov
sbb
jne
sub
push
out
sbb
jp
rolb
inc
cmp
cmp
xchg
sub
inc
jmp
fstps
xorb
loopne
mov
adc
xchg
int3
imul
popf
push
pushf
add
ljmp
mov
xchg
inc
enter
xchg
les
push
push
enter
nop
ss
ss
rol
push
pop
sbb
xchg
lret
add
mov
in
jnp
push
cmp
adc
rolb
add
ds
popa
call
adc
mov
dec
add
movsb
mov
pop
daa
rcrl
xor
xor
jmp
adc
xchg
xchg
ret
repnz
dec
push
loop
or
enter
out
bound
cmp
add
lock
xor
loopne
adc
xchg
pop
mov
les
test
xor
in
in
xchg
xchg
add
push
jnp
fnstcw
mov
push
xor
sbb
lahf
lock
shrb
mov
lahf
push
pop
xor
popf
sbb
in
dec
roll
iret
es
inc
aaa
adc
int3
adcl
mov
push
or
jne
push
aas
xor
inc
mov
push
xor
sti
xchg
insb
addl
adc
inc
in
dec
sbb
add
pop
and
sub
pop
rcrb
mov
inc
cs
mov
mov
ret
shl
pusha
stc
cld
lock
or
xor
pop
sub
sub
xchg
dec
mov
movsb
mov
adc
test
xchg
insb
cmp
sbb
inc
or
sbb
add
mov
fcompl
bswap
lods
aas
sbb
and
mov
and
xchg
mov
push
repnz
mov
outsb
adc
clc
dec
mov
or
and
mov
in
xchg
mov
xchg
push
out
sbb
xchg
jb
inc
push
cmp
xchg
push
insl
cmp
pop
pop
les
in
inc
mov
inc
ja
mov
pop
cmp
mull
lret
aas
mov
mov
mov
mov
imul
fimuls
dec
fbld
sub
or
or
cmp
pop
lcall
or
lods
jae
push
push
imull
lret
mov
rol
dec
pop
fmull
rolb
rcrb
hlt
aaa
sbb
xor
shrl
pusha
movsl
incb
adc
in
fs
dec
push
push
push
push
jg
push
xchg
sub
stc
or
js
bound
adc
or
push
fstpl
lea
pop
or
mov
or
lret
adc
or
shlb
mov
pop
shl
add
add
mov
les
fmull
imul
add
pop
enter
jle
cmpb
dec
xchg
or
rolb
rcll
or
clc
add
stc
aad
add
add
and
push
je
xor
js
imulb
or
pop
leave
fsubs
mov
je
xor
test
sub
mov
cmp
dec
in
inc
cmc
push
jnp
sbb
jbe
ret
outsb
in
cvtps2pi
pop
lret
ss
and
add
clc
cmp
cld
sub
add
aaa
push
add
push
je
dec
lret
pop
outsb
aaa
add
nop
loop
xlat
pop
rcl
push
movsb
nop
add
push
pusha
mov
xor
ret
adc
push
pop
out
shlb
test
hlt
nop
pop
sar
gs
pushf
push
mov
cmp
cltd
inc
jle
push
dec
insb
push
sbb
add
xor
mov
test
add
add
adc
push
and
mov
enter
ret
xchg
clc
ja
rorb
sbb
ja
sbb
subl
lea
pop
mov
and
loop
in
or
dec
mov
loope
jle
cmp
inc
mov
jb
cwtl
je
add
jo
xchg
idivl
add
pop
in
ds
mov
jo
ljmp
and
push
faddl
aam
loope
pop
mov
xor
in
dec
ss
les
add
pop
repnz
dec
movsl
lea
push
push
pop
xor
in
mov
int3
es
mov
cmp
inc
xchg
js
pusha
push
push
xchg
sub
mov
inc
enter
jne
add
jecxz
inc
test
dec
xchg
and
add
mov
dec
xor
roll
sub
lahf
js
ja
dec
outsb
inc
xchg
sub
xor
test
fadds
les
add
dec
xchg
adcl
gs
enter
jg
sbb
sub
sbb
xor
aam
pop
xor
inc
andb
lock
adc
mov
jnp
test
sarb
sbb
sbb
out
lret
adc
add
cmp
aad
outsb
pop
xor
dec
popf
lahf
mov
lock
cmpsl
hlt
icebp
int3
add
addr16
or
enter
pop
add
push
cli
rcll
andb
xor
or
rcrb
or
push
sub
das
popf
pop
sub
cli
sub
sub
xchg
sarb
lret
lea
dec
adc
ficoms
and
out
das
out
or
shll
push
enter
mov
mov
in
adc
in
test
addr16
int
push
jl
das
test
leave
sbb
adc
jns
pop
mov
leave
xor
xor
in
leave
and
dec
and
adc
leave
orl
pop
adcb
ficoms
sbb
adc
xchg
push
arpl
dec
clc
xchg
or
push
xchg
lret
pop
mov
in
stos
dec
cmp
xor
xor
dec
pop
int
lret
mov
dec
sbb
xchg
cmp
nop
xchg
subb
pop
int3
add
adc
lret
pusha
jne
and
mov
or
add
shr
add
inc
add
pop
sti
mov
add
sub
cmp
dec
inc
std
mov
sahf
ss
push
fcomp
aam
rcl
or
adc
push
jmp
sbb
test
adc
aaa
or
and
test
addb
movsb
sbb
dec
call
xchg
subl
pushf
lea
mov
test
push
push
adc
sub
and
movb
out
inc
clc
adc
or
test
call
dec
jae
mov
adc
mov
sbb
xchg
nop
xchg
pop
lock
rcrb
movsb
iret
into
pop
xchg
test
xor
or
and
movsb
imul
sub
insl
lock
push
ret
daa
int
nop
testb
xchg
daa
stos
and
cwtl
negb
pop
stc
je
or
aad
and
cmp
leave
ja
loopne
rcl
jp
sub
iret
and
pop
lds
fdecstp
test
fidivl
movsb
fcmovne
inc
dec
or
and
mov
daa
and
loop
shll
xor
loopne
into
nop
stos
nop
mov
rcrl
mov
das
jmp
dec
call
and
sbb
sbb
jne
movsb
nop
xor
inc
add
pop
cmp
sbb
sub
addr16
cltd
and
lds
pop
mov
test
push
fdivrl
mov
mov
adcl
notl
dec
cmp
push
test
mov
mov
xor
xor
orl
jle
jne
add
cs
cwtl
out
test
int3
nop
js
sub
pushl
add
mov
adc
test
outsb
out
jle
out
mov
nop
lahf
dec
filds
sbbb
pop
dec
ret
mov
sbb
xchg
and
and
add
pushf
insb
enter
dec
insb
or
addl
and
or
aas
pushf
je
adcb
je
shrl
xchg
sub
insb
nop
sbb
jo
insb
inc
lds
push
add
insb
insl
test
pusha
jg
sti
icebp
jl
pusha
decb
push
mov
test
jl
fisttpl
int
cmc
shlb
pusha
or
data16
nop
or
lods
mov
es
int3
jbe
enter
icebp
clc
shll
dec
das
andl
inc
dec
jmp
and
mov
les
roll
add
push
mov
adc
ret
cs
mov
push
sbb
test
lds
pop
jns
jmp
imul
fcmovnb
jae
xchg
movsb
cmpsb
mov
adc
mov
insl
push
mov
mov
aam
lock
iret
std
mov
mov
or
shlb
adc
dec
cltd
imul
adc
pop
add
push
mov
sub
shll
sbb
pop
sbbb
nop
or
hlt
push
push
fmuls
inc
jmp
jp
sub
jne
gs
js
movsb
add
jle
add
add
aas
mov
in
dec
clc
cmp
pop
mov
stos
addr16
test
push
or
les
sarb
and
sti
adc
add
scas
mov
dec
movsl
imul
push
cwtl
xchg
cmpsb
test
movsb
or
lods
or
mov
xchg
xchg
rcll
pusha
cmpsl
sub
push
mov
test
hlt
test
fcoms
orb
enter
jle
and
push
jne
pusha
mov
jl
lods
jbe
dec
pop
insl
jmp
js,pt
fsub
cmp
cmpsl
xchg
add
je
stc
xchg
or
jo
lea
test
add
xchg
or
push
enter
sti
and
enter
pusha
or
int
sbb
sbb
inc
push
or
aad
push
testl
das
data16
jecxz
mov
rorb
inc
sub
mov
jae
xlat
clc
rcll
arpl
cld
xchg
inc
dec
add
push
sarl
pop
fmuls
fsubs
cmp
inc
aas
fcoms
pop
cmc
jmp
rorl
fiaddl
mov
dec
int
call
dec
test
pop
inc
es
push
pop
std
xchg
mull
adc
das
push
push
mov
ffree
into
insl
and
cltd
test
incb
scas
jge
push
or
cmp
and
addr16
lcall
test
imul
daa
cmp
push
add
test
mov
nop
cmc
int3
push
mov
ja
shufps
mov
mov
fmull
and
movsb
mov
imul
int3
push
jmp
in
iret
push
je
sbb
jo
push
movsl
mov
test
cwtl
pop
inc
push
mov
mov
cmpsb
fcompl
fstps
loopne
lretw
out
jge
rcrb
je
popf
nop
pop
enter
push
dec
jmp
push
dec
mov
xor
jb
jne
and
inc
pusha
xlat
adc
cmp
mov
imul
jae
xchg
mov
push
fisttpl
cmc
add
shlb
mov
fadd
fs
sub
and
push
pop
and
mov
das
inc
mov
lret
stos
imul
call
jl
mov
shlb
inc
cmp
pop
or
and
pop
jnp
rcpps
cmpsb
and
loop
adc
add
mov
test
pop
testb
jge
fcompl
clc
lods
aaa
push
and
dec
mov
xor
jb
push
out
daa
jl
arpl
ret
and
rcr
pushf
sbb
clc
and
push
aas
addl
inc
je
adc
xlat
nop
aaa
mov
imul
mov
stos
je
or
pop
xor
lcall
or
icebp
lds
mov
jmp
pop
shrl
sbb
jmp
jl
and
sbb
faddl
jl
sub
out
sub
xchg
dec
rorl
pop
mov
mov
adcb
pop
xchg
loopne
fs
movsl
jg
cmpsb
jb
cmc
jl
test
mov
add
dec
mov
cwtl
outsb
sbb
je
cmp
loopne
bound
leave
sbbl
add
stc
shlb
dec
jbe
jecxz
call
les
push
dec
jmp
in
sbb
sbb
pop
into
mov
jp
cmp
in
sbb
shlb
std
push
ja
jmp
mov
add
call
jge
or
add
loope
push
xor
jns
inc
jo
loop
mov
sub
test
nop
lahf
mov
jl
cmp
lahf
out
std
pop
add
test
add
enter
hlt
cmp
mov
mov
sub
mov
dec
repz
xchg
pop
adc
mov
mov
popf
fldt
add
das
mov
add
imul
mov
psrad
add
and
dec
sbb
add
push
sbb
in
add
jb
add
orl
sarl
cmp
adc
je
je
inc
and
rcl
pusha
add
and
cmp
test
pop
aam
xor
jbe
fndisi(8087
and
add
jge
mov
sahf
fildl
ficoms
mov
push
dec
push
inc
loope
xchg
dec
data16
pushf
movsl
sub
xchg
scas
push
in
mov
in
sub
repnz
jp
xor
and
shll
pop
testb
jl
inc
jo
or
sub
mov
pop
xor
sti
sahf
lods
add
cmp
addl
cmp
add
add
ret
or
imul
mov
inc
pusha
pop
hlt
rcr
add
fsubl
and
and
or
sub
xor
cmpb
rcrb
sub
inc
and
fiadds
sub
in
push
aam
iret
mov
jecxz
sub
inc
or
push
out
cmp
and
inc
cmovo
inc
jb
push
mov
xor
and
inc
cmp
test
xor
push
ljmp
in
xchg
sub
sub
pushf
or
xchg
out
out
xor
cmp
mov
adc
xor
add
ret
push
push
stos
push
imul
and
in
pushf
inc
and
and
push
cmp
dec
jne
lret
inc
pop
inc
jne
sbb
jp
imul
sarl
negl
ja
and
sbb
test
stos
sub
rorl
jne
add
cmpb
sub
and
shll
adc
jno
outsl
push
call
mov
adcb
cmp
lods
adc
dec
xor
mov
pop
mov
int3
and
movsb
scas
inc
cmp
sbb
push
add
inc
mov
push
aaa
lret
cli
incl
aad
dec
cltd
je
sub
je
sub
cmpsl
fistl
sub
enter
sub
sbb
push
sub
out
xchg
fildll
adc
add
add
push
jmp
pop
mov
outsl
ljmp
lock
push
outsl
adc
ja
pop
pop
mov
jmp
add
xor
pop
stc
mov
adc
mov
mov
popf
jmp
sbb
jge
shrb
in
inc
in
cmp
pop
dec
sbb
in
hlt
jmp
enter
sub
sbb
ret
orb
ljmp
push
lock
and
ljmp
mov
rolb
in
jmp
leave
dec
push
sub
cwtl
jmp
xchg
nop
fists
sete
xchg
movq
loopne
jecxz
push
pop
test
ret
xadd
scas
push
sub
in
push
xor
dec
and
leave
push
xor
and
rolb
jp
and
out
or
mov
add
in
imul
dec
lods
inc
mov
test
js
aas
rclb
pushf
sub
inc
loope
push
fwait
lret
in
xor
adc
test
xor
sub
jo
push
inc
out
sbb
mov
or
and
or
rcrb
les
or
sbb
imul
and
popa
push
out
aas
movl
pop
xchg
addb
xchg
inc
sahf
lock
enter
ror
sbb
scas
mov
cmp
je
int
ret
jno
pushf
jl
nop
das
push
out
inc
fs
sbb
adc
jp
sti
sbb
mov
add
sub
or
or
xor
mov
push
and
movsb
mov
push
mov
or
lea
sbb
and
add
or
jb
jbe
leave
dec
mov
or
incl
push
and
and
xchg
add
xchg
xchg
repz
outsl
push
ret
lods
icebp
mov
jmp
dec
sti
inc
lock
xor
mov
mov
or
ret
aad
pop
outsl
lds
dec
shl
inc
out
cmp
outsl
in
cmp
sbb
mov
push
mov
call
test
jl
pop
dec
test
cmpb
lea
mov
inc
pop
push
xor
loop
xlat
or
dec
add
lcall
mov
push
loope
push
dec
add
or
enter
rcl
leave
push
and
jne
push
pmullw
and
icebp
lahf
and
hlt
xchg
dec
sar
jmp
test
fstl
test
xor
popf
dec
imul
sub
push
mov
dec
xor
dec
ret
jp
xchg
icebp
cmpsb
icebp
adc
stc
or
mov
dec
inc
mov
hlt
cmp
hlt
clc
ret
adcl
sbb
mov
dec
pop
cld
hlt
and
add
rorb
mov
jge
add
fwait
hlt
jg
cmp
xor
mov
add
mov
int
imul
add
push
repnz
and
out
div
sbb
add
imul
jecxz
cmc
mov
cld
test
inc
xorb
into
and
or
imul
and
out
adc
or
sbb
aam
dec
mov
mov
aas
shlb
xchg
adc
aam
inc
loope
mov
pop
adc
hlt
xchg
mov
mov
mov
or
iret
cmc
rclb
add
mov
pop
jmp
imul
cmp
sbb
movsb
cmc
lods
mov
pop
and
fsts
shll
movsl
push
adc
insl
inc
lahf
or
rol
dec
mov
inc
loope
ja
adc
mov
xchg
add
mov
ja
mov
adc
sbb
cwtl
dec
movsb
xor
xor
shlb
sub
nop
inc
sub
and
adc
add
and
ret
or
popa
fwait
xchg
es
js
dec
fldt
dec
call
sbb
pop
cs
movsb
push
push
pop
in
js
adc
xchg
nop
inc
push
cmp
mov
nop
cmpb
in
inc
jo
push
fs
pop
nop
inc
push
cmp
push
inc
push
cmp
dec
dec
inc
push
cmp
nop
inc
cmp
xor
in
inc
sub
and
nop
inc
push
or
enter
ja
clc
hlt
and
call
in
sbb
enter
int3
jb
and
and
and
test
sbb
enter
cwtl
sbb
enter
mov
and
and
and
cmp
sbb
enter
sub
jb
and
and
jb
and
and
nop
sbbl
add
inc
push
cmp
in
fmull
cmp
nop
fcom
ror
sbb
nop
inc
enter
cmp
and
in
inc
push
mov
lods
dec
xchg
push
cmp
and
sti
ss
and
stc
pop
add
ret
sub
jmp
inc
push
xor
pop
es
mov
or
dec
sarb
mov
psadbw
shlb
and
adc
dec
jne
fcomps
and
mov
daa
sbb
lahf
enter
enter
push
daa
sarb
daa
in
aam
fs
xchg
fdivrs
cld
or
adc
mov
fdivrl
jg
incb
adc
repnz
and
mov
push
sbb
jg
dec
mov
sarb
ja
jg
jg
mov
daa
lock
enter
hlt
mov
clc
mov
stc
pmulhuw
mov
push
add
incb
jb
mov
loop
aas
and
mov
nop
mov
jns
mov
out
je
pop
cmp
nop
fcomps
cmpsb
dec
data16
stos
pop
stc
daa
testb
lahf
and
sub
mov
or
adc
cmp
mov
incb
dec
ret
loopne
gs
and
decb
cmp
cmc
cwtl
shrb
aas
push
mov
pop
adc
inc
and
jmp
sub
mov
dec
or
pmulhuw
rorb
daa
or
push
pop
test
or
mov
pusha
mov
and
push
pcmpgtb
enter
insb
mov
jo
lea
in
je
leave
and
inc
js
add
mov
adc
and
jne
mov
adc
pop
sub
mov
adc
cld
or
mov
adc
and
decb
jb
adc
sbb
enter
sbb
xchg
pop
loop
daa
in
and
sub
in
sub
cld
or
adc
push
stc
clc
sub
mov
arpl
test
push
frstor
or
mov
pop
je
pop
add
xchg
pop
and
ss
mov
imul
add
rorb
loope
pop
pop
add
pop
dec
sahf
pop
add
in
xor
hlt
push
pop
das
loopne
in
aam
mov
add
add
pop
aam
outsb
xchg
mov
dec
jo
mov
call
ss
pop
add
fs
aad
imul
jae
fistpl
shrl
fstp
push
fbstp
loopne
sarl
in
shl
loop
push
jecxz
inc
ss
add
jo
mov
rclb
or
jp
fisubl
int3
es
rcrb
enter
pop
popf
dec
push
enter
dec
stos
adc
xchg
or
sub
in
js
xchg
test
xor
or
xor
pusha
pop
pop
inc
gs
jne
and
add
ljmp
push
pop
push
push
push
rol
inc
push
arpl
push
popf
aas
loopne
js
xchg
faddl
mov
movsb
data16
les
in
test
bound
xchg
xchg
popa
fcomip
hlt
shrl
add
les
add
je
adc
mov
mov
mov
inc
or
sub
test
loopne
push
add
add
push
adc
adc
loope
insb
icebp
xchg
cmp
and
add
pop
pop
jg
add
shl
shl
or
xor
pop
pop
lock
or
imul
pop
add
loop
jno
imul
fdivr
add
push
mov
pushl
pop
jp
adc
out
mov
mov
sbb
jb
mov
ja
mov
inc
dec
scas
add
jmp
inc
sar
jae
add
and
pop
fdivr
in
push
aas
cmp
mov
add
in
mov
sbb
insl
adc
popf
aam
lds
inc
das
add
push
jo
dec
dec
or
or
shrb
jb
push
lods
push
addb
scas
sub
sub
mov
inc
ret
lock
fadds
cmovno
cmp
shll
in
sbb
xor
pop
mov
divl
dec
pop
add
sbb
push
xchg
add
push
jb
roll
lods
je
xchg
mov
xchg
fcmove
in
pop
mov
adc
andl
cs
mov
pop
mov
sub
or
or
pusha
fcoml
mov
inc
shrb
push
mov
loope
loopew
inc
or
push
push
into
sbb
and
or
pusha
in
pop
or
shrb
fistpl
ljmp
cmp
and
dec
int
repnz
faddl
add
pop
or
add
sbb
add
rorb
test
fiaddl
ret
cs
lods
jmp
adc
mov
sbb
adc
test
cmp
dec
push
iret
dec
push
cmp
pop
add
push
jo
popa
lock
cmp
fisttps
inc
push
mov
ja
cmp
je
adc
sbb
add
xchg
jno
inc
push
stos
aad
jle
dec
mov
or
or
mov
pop
js
shll
add
sub
je
cwtl
cld
mov
sbb
sbbl
mov
jne
xor
nop
or
xor
add
cmp
fcoml
popa
leave
mov
lock
or
bswap
add
sarb
mov
cmp
mov
mov
adc
mov
in
xchg
hlt
mov
adc
mov
int3
push
xlat
inc
ss
cmpsb
popf
adc
xorl
xchg
sbb
popa
cli
push
in
inc
sbb
add
jg
lock
adc
mov
rep
adc
in
or
lret
jle
push
adc
lock
mov
loopne
push
sbb
mov
rol
push
cltd
jne
push
sbb
pop
adc
pop
or
aad
sahf
nop
in
or
xchg
cmp
movlps
xchg
lahf
xchg
in
push
pop
sub
add
int
in
aas
daa
or
or
sub
and
push
cmp
cltd
outsb
sub
pop
les
push
insl
std
sbbl
inc
add
sbb
add
adc
add
inc
adc
adc
fndisi(8087
adc
and
jg
mov
mov
mov
xor
jb
and
in
inc
xor
xlat
push
int
adc
cmp
sti
in
or
or
jne
aad
add
mov
xor
adc
subl
addr16
add
fsubrs
repz
sub
aam
add
push
xchg
adc
std
pop
mov
push
dec
in
push
cmp
sub
sbb
repnz
push
cmp
cmp
xorw
mov
data16
jo
inc
mov
pop
out
fldl
repz
fcoml
pushl
sahf
aam
outsl
or
xchg
mov
add
jbe
cmp
in
inc
je
fsub
and
sub
loopne
dec
jno
mov
push
loopne
or
out
mov
inc
inc
mov
fiadds
or
xor
jo
push
sbb
rclb
js
sbb
hlt
add
lret
lret
test
loopne
push
jno
adc
push
mov
call
mov
inc
dec
add
pop
mov
sub
jecxz
cmp
repnz
fistps
xor
xor
sub
mov
push
xchg
or
or
mov
std
adc
sbb
jo
es
arpl
xorb
ss
push
mov
loopne
xor
pushl
jmp
xchg
ds
and
inc
and
and
push
cli
jmp
cmpsl
and
xchg
daa
lea
out
pop
sbb
push
lock
add
cmp
fnsave
ljmp
or
mov
push
pop
mov
pop
sbb
inc
add
add
je
leave
sbb
es
adc
inc
addr16
mov
mov
cmpsl
or
push
icebp
adc
cmp
and
fcoms
dec
adc
adc
sbb
jp
adc
add
xchg
popa
mov
xchg
fistpll
loopne
lcall
pop
popl
xchg
push
push
push
cmpsl
push
xor
aam
fcomps
add
scas
mov
cmp
sub
mov
shll
cmp
pop
adc
in
jo
dec
push
push
dec
rolb
inc
lret
pop
addl
or
pxor
adc
xlat
out
jno
mov
lods
push
inc
pop
pop
dec
xor
dec
clc
dec
insl
push
shlb
xchg
add
mov
jae
sub
int3
enter
sbb
adc
xor
aam
cmp
test
cld
loop
pop
fcoml
xchg
enter
dec
lcall
inc
jge
jno
push
jmp
mov
xchg
adc
rcrb
lcall
or
adc
into
shr
adc
sub
inc
movsl
rcrb
loopne
pop
sbb
fisubrs
shlb
inc
adc
pop
nop
mov
sub
jne
add
push
out
sub
mov
push
cmp
in
mov
sub
js
imul
mov
pop
and
pusha
and
lock
mov
xchg
mov
xchg
inc
adc
push
push
outsl
xor
sbb
popf
jecxz
leave
jmp
adc
sbb
dec
dec
andb
in
mov
add
movsb
inc
sbb
add
jb
lcall
int
mov
push
cld
push
add
pop
and
mov
imul
test
adc
and
xchg
or
cmp
aad
xor
daa
imul
popa
movsb
jge
cmc
push
or
rol
stc
out
or
sbb
mov
mov
sub
xchg
add
lea
mov
adc
dec
or
xchg
jg
dec
xlat
and
out
mov
out
push
sbb
test
and
testb
sarb
adc
push
sub
js
sub
and
jmp
andb
fst
add
cmp
cld
pop
push
or
and
push
or
adc
push
js
pop
pop
sarb
sub
adc
fstpt
sub
loopne
scas
test
inc
adc
push
pop
adcb
lock
aas
cli
enter
adc
das
cmp
jg
push
dec
inc
testl
push
and
add
and
cwtl
push
mov
fcmovb
test
fcomi
sub
inc
mov
gs
ss
or
test
xlat
mov
inc
sub
push
push
decb
test
jnp
shll
in
mov
cmp
aam
pop
fcoml
xor
cld
loopne
lods
loop
popw
mov
push
lods
repz
mov
inc
mov
scas
fdivrl
cmp
or
inc
nop
jp
into
scas
adc
movw
xchg
push
mov
loopne
push
push
jne
push
add
push
push
mov
clc
xlat
cmp
je
jmp
test
cmp
aam
movsl
add
out
xor
sti
xchg
inc
imull
cmp
push
push
ss
int3
xchg
add
push
jno
or
pop
ret
adc
outsb
dec
int3
cmp
dec
fsubl
fmuls
dec
sbb
mov
add
cmp
xchg
and
outsl
fsub
sti
jg
int3
imul
add
push
push
pushl
cmp
adc
push
clc
and
arpl
jmp
xchg
shl
in
fsubrl
push
pusha
jbe
in
testl
loopne
imull
test
add
ljmp
outsl
adc
dec
or
jno
hlt
xor
dec
fwait
loop
je
mov
sbb
shlb
push
mov
sbb
fcoms
or
les
rcll
fs
ljmp
adc
pop
jmp
jge
fsubl
dec
mov
mov
push
add
and
cmp
in
push
xor
push
sub
bnd
pop
aad
or
or
stos
dec
jae
in
jge
lret
xchg
jns
int3
mov
mov
mov
inc
loop
shlb
or
hlt
out
nop
xor
test
lcall
inc
pop
in
stos
xchg
push
sets
add
and
test
jle
adc
xchg
out
into
jle
sbb
xor
or
or
pop
cs
or
push
in
shl
mov
xor
jg
sub
adc
xchg
imul
inc
jl
sub
pop
ret
adc
sbb
sub
mov
es
or
jl
dec
xchg
push
pop
push
das
adcl
addb
pusha
inc
push
bswap
jmp
or
push
outsl
cmp
jo
popl
cmp
fsubs
and
call
and
or
mov
daa
and
xor
or
push
negb
leave
mov
andl
sub
jl
jns
dec
imul
clc
clc
lock
roll
inc
dec
xchg
fcomps
push
not
xor
mov
sbb
mov
jmp
insl
into
pop
mov
bound
push
test
loopne
shrb
clc
nop
arpl
fnstsw
adc
shl
cmpl
add
test
adc
fistl
lods
xchg
test
je
clc
je
xor
cs
mov
int
repnz
loope
adc
jmp
push
or
in
test
mov
nop
jge
mov
sub
add
add
fisttps
pop
mov
mov
ret
jns
jo
ret
sbb
in
fcomps
loopne
cmp
enter
fsubr
mov
movsl
subb
fiaddl
sbb
add
in
sub
dec
dec
lock
movl
xchg
pop
and
add
neg
sbb
or
dec
mov
test
shrl
inc
adc
shrb
push
loopne
fwait
int3
test
sbb
fmul
fwait
dec
adc
lret
sarl
aam
jae
mov
shrl
jno
loopne
inc
cmpsb
clc
pop
ljmp
movq
popf
stc
shrb
jb
ljmp
test
mov
inc
faddl
cmp
popa
mov
imull
cmp
hlt
mov
imul
popa
dec
out
je
in
in
sbb
ret
push
bnd
loop
or
mov
aaa
addb
pop
and
in
sub
adc
sub
sbb
mov
lods
movsl
xchg
add
nop
loopne
scas
and
or
adc
push
push
icebp
fidivrs
inc
hlt
jmp
mov
xor
in
push
je
inc
jne
addl
sbb
test
mov
and
les
iret
call
jecxz
xor
nop
push
pop
fists
jl
adc
xchg
rclb
aam
int3
mov
addb
pop
rcr
jp
repnz
call
mov
stos
and
cmp
adc
or
in
in
xchg
and
aad
add
and
movsb
lock
push
inc
cmp
cmp
sbb
dec
rorb
mov
mov
pop
dec
je
nop
in
sub
in
cmp
add
cmpsl
dec
cltd
sti
and
cmpxchg
pop
pop
out
out
xchg
pop
lods
jo
movsb
xor
lret
call
rcll
adc
mov
add
or
jge
rclb
sbb
jp
outsb
add
mov
sbb
lret
dec
mov
jge
rcrb
sub
add
xchg
cltd
andl
mov
jnp
push
jl
and
pop
adc
incl
mov
cmp
sub
aaa
xor
cmp
push
jne
aaa
cmp
inc
add
fcoms
sbb
das
jl
lods
in
cmpl
jb
add
inc
mov
aad
mov
or
inc
adc
mov
mov
out
rclb
call
add
lahf
or
and
clc
cmpl
out
or
inc
adc
enter
loope
dec
lds
push
jle
jmp
and
mov
inc
add
in
in
jle
in
mov
sub
add
call
popa
test
or
and
cmpsb
inc
lock
addb
push
lock
loopne
clc
pop
sbb
and
sbb
push
jle
xor
add
or
cmp
add
mov
cli
lcall
push
jmp
or
jbe
add
inc
add
enter
sarb
pop
mov
hlt
call
ja
mov
popl
add
xchg
jne
andl
cmp
cmp
imul
xor
rcr
pusha
lock
sub
add
mov
cmpsl
inc
sbb
mov
ds
pop
ja
mov
jne
dec
jmp
and
jmp
mov
xlat
xor
or
test
sbb
xor
and
adc
add
jne
pushf
das
test
cwtl
jmp
sub
addl
cmp
inc
adc
rcl
xor
inc
nop
cld
push
adc
or
sbb
bound
mov
and
ss
movb
in
addb
sbb
es
test
in
or
ja
clc
fsubrs
loopne
pusha
inc
adc
adc
std
jo
cmp
sbb
insb
jnp
movsb
add
jne
sub
test
dec
sbb
movl
fadds
clc
addr16
xchg
daa
mov
pop
dec
insl
mov
sbb
gs
xchg
leave
rorb
mov
and
dec
test
jae
fldenv
jnp
mov
hlt
sbb
pop
lods
je
mov
xchg
loope
lcall
adc
push
xor
pop
and
sub
xchg
loope
jmp
cmp
pop
mov
or
imulb
pushf
add
mov
pop
sub
pop
or
inc
popf
fdivs
clc
xchg
daa
insb
jne
mov
pop
dec
mov
pop
sub
add
sub
push
cs
data16
addb
add
push
aaa
mov
pop
mov
cmp
inc
mov
add
es
push
movsb
push
push
sub
mov
mov
dec
fdivrs
fcoml
mov
mov
dec
aaa
push
pop
and
roll
jo
add
dec
sub
add
sub
aas
cmpsl
dec
jmp
adc
adc
push
fldt
add
mov
or
adc
xchg
fstpl
fucom
pop
or
dec
push
cmp
mov
fs
push
scas
add
adc
xchg
ret
add
add
cmp
lock
add
mov
and
xor
stc
dec
mov
sub
scas
lds
rol
pop
aam
inc
adc
dec
cs
mov
orb
xchg
fs
jo
popa
or
sti
push
repnz
aas
mov
or
dec
roll
ds
add
inc
push
inc
pop
cmp
shll
shrb
add
xor
sbbl
inc
pop
mov
ljmp
lahf
sub
sbb
jg
das
repnz
sub
repnz
mov
fiadds
adc
sub
xor
lock
fwait
xchg
pop
sbb
xor
push
mov
std
jge
cmpsb
push
mov
xor
adc
mov
ret
subl
shll
and
mov
adc
mov
jmp
sub
cmp
sub
push
add
jo
push
mov
sbb
ljmp
andl
out
dec
jg
jge
and
push
fistps
dec
xor
gs
fildl
add
fdivrp
xor
dec
adc
fmuls
adc
or
jp
push
cmp
loopne
repnz
iret
mov
sub
mov
rolb
mov
jae
dec
js
lods
xchg
sub
loope
inc
push
pop
scas
xchg
mov
add
rcll
hlt
je
sbb
add
and
insb
xorb
push
jmp
and
out
mov
mov
mov
cmp
xlat
adc
addb
ss
cwtl
sub
test
popf
daa
mov
rcrl
imulb
cmpsl
mov
pop
aas
cmp
call
add
or
xor
cmpsl
sub
pop
or
cmp
mov
in
add
mov
add
or
pop
fwait
popf
das
sbb
popf
inc
ds
push
xchg
add
adc
and
dec
and
pop
test
dec
inc
xchg
adc
mov
push
in
ss
mov
adc
adcl
cwtl
clc
add
sub
and
pushf
dec
vmread
and
in
sbb
mov
jae,pn
cmp
adc
mov
mov
push
xchg
pushf
popf
push
pop
cmp
inc
rorl
nop
repz
adc
daa
pop
cmp
notl
dec
inc
lea
add
or
sub
rclb
insl
sbb
sbb
xchg
in
lahf
sbb
xchg
je
addl
int3
mov
adc
inc
outsl
test
daa
test
sarb
push
xchg
daa
and
add
hlt
mov
fmuls
push
sub
call
lods
dec
imul
and
mov
in
pop
and
repnz
adc
enter
rolb
cmp
cwtl
jno
dec
add
mov
or
lods
push
mov
arpl
mov
loope
inc
cmpsl
imul
dec
push
and
or
div
xchg
mov
shrb
pop
inc
imul
adc
inc
or
std
enter
ret
test
enter
jp
xor
add
push
jl
pop
cmpsl
add
inc
add
pop
and
cs
mov
std
rorl
jge
jmp
jmp
andb
hlt
sahf
adc
imul
sub
mov
add
inc
inc
add
nop
pop
and
dec
cmp
fistl
mov
push
repnz
aaa
mov
mov
and
pop
ror
pop
push
pushf
push
into
ljmp
sti
dec
test
push
xor
mov
dec
jne
call
add
std
leave
test
push
mov
add
cmpsl
adc
stc
pop
mov
mov
push
cmp
in
ret
push
mov
rcll
mov
push
add
popa
adc
dec
lods
add
dec
dec
inc
sub
sub
mov
or
or
mov
add
movb
mov
pop
xchg
add
inc
pop
cmp
inc
or
add
sbb
lret
push
xor
pop
push
push
fdivrs
add
fisttpll
pop
es
pop
and
movsl
push
stos
jnp
ret
pop
xchg
and
push
fcmovnb
sub
lret
or
sub
pop
jns
scas
dec
push
sub
mov
dec
adc
dec
add
cmpsl
mov
xor
mov
cmpsb
mov
or
dec
dec
push
outsl
and
or
test
mov
or
clc
fimuls
gs
dec
jle
aaa
stos
aaa
jnp
scas
push
lret
cmp
add
stc
je
cmpl
push
sub
or
pop
rclb
hlt
push
inc
jmp
add
dec
cmpb
rolb
xor
sbb
repz
push
bound
sub
roll
add
faddp
pop
cmpsl
jnp
movsb
das
pop
lcall
sub
jbe
xchg
xor
sub
sbb
mov
shl
stos
les
cmp
dec
xchg
xchg
mov
xchg
mov
adc
dec
mov
sbb
cmp
addl
es
shll
xor
stos
fadd
add
dec
mov
or
jb
add
subl
adc
mov
aaa
dec
and
adc
cs
adc
mov
sbb
cmpb
push
adc
sbb
and
popa
mov
mov
dec
aad
add
push
out
or
inc
gs
push
cmpl
push
decb
add
test
inc
push
cltd
jnp
push
aaa
mov
mov
lcall
mov
add
jae
gs
dec
sbb
xor
scas
dec
sbb
inc
add
js
cmp
cmp
cmp
adc
int3
push
mov
pop
sti
and
push
push
fucomi
push
adc
jge
and
call
or
fs
sbbb
cmp
call
lds
or
and
inc
inc
repnz
in
or
or
sub
lods
nop
push
sub
add
jmp
stos
es
add
dec
test
push
add
and
lret
push
inc
push
adc
popa
cmp
sbb
mov
add
lcall
adc
pop
ret
fisttpl
dec
and
movsb
ja
lods
push
inc
jecxz
dec
sbb
xchg
cmp
jmp
dec
pop
rcrb
dec
enter
sbb
dec
lret
xchg
out
mov
jne
and
std
lea
adc
push
push
mov
das
cmpsl
loope
or
arpl
or
dec
inc
leave
xchg
adc
or
imul
mov
outsl
jecxz
jbe
das
das
inc
sub
jne
cmp
push
and
push
jmp
subl
imul
xlat
nop
pop
lods
adcb
movsb
or
mov
pop
push
in
cmp
push
repnz
pop
sub
and
dec
cmp
insb
pop
ss
pop
out
sbb
filds
and
xor
cld
insb
sub
mov
movb
rorl
cmpsl
nop
or
test
ret
or
es
mov
mov
sbb
or
arpl
outsb
dec
push
fdiv
dec
xor
push
lock
lock
jbe
and
and
xorb
cmpl
scas
add
ds
inc
add
inc
pop
inc
in
lods
adc
or
sub
call
cmp
out
adc
int3
jnp
push
lret
pop
daa
test
sub
jb,pn
hlt
push
jno
dec
cwtl
stc
cmp
aam
xchg
xchg
movsb
mov
mov
and
repz
lock
out
add
fildl
xor
repnz
or
sub
int3
cmp
ret
sysenter
lea
jo
xchg
adc
pop
les
movl
sub
ja
pop
pop
and
mov
add
pop
xchg
sub
movsl
and
mov
aas
or
add
cmp
or
ret
arpl
mov
je
push
add
imul
push
xchg
push
mov
test
jne
push
push
inc
adc
push
rolb
or
cs
or
dec
movsl
inc
inc
add
ficoms
dec
movsb
xchg
mov
sub
sub
dec
outsl
inc
xlat
bound
orb
xchg
dec
mov
or
adc
inc
aaa
fildll
mov
sub
fisubrs
les
ficompl
dec
xchg
sbb
or
xor
cmp
insl
sti
cmpsb
inc
cmp
lock
inc
inc
inc
xor
xchg
xchg
cmpsb
push
dec
push
push
arpl
pop
pusha
aam
aam
pop
xchg
andl
insb
mov
lret
push
cmp
sbb
leave
or
push
mov
adcl
rol
add
xor
jmp
xchg
pop
or
mov
push
xor
cwtl
out
mov
imulb
xchg
add
divb
int3
insb
or
test
add
add
inc
cmp
sub
jnp
cmp
or
aam
add
push
or
pop
xor
jo
cmp
fcmovbe
sti
cmc
cmp
mov
dec
and
mov
cmp
sarb
mov
lret
lret
and
int
into
loope
movsb
imul
ss
cmpsl
loope
or
cmp
jae
or
ret
in
adc
adc
rolb
adc
jns
and
inc
add
je
je
rolb
sbb
loop
jp
loop
lds
or
mov
add
or
sbb
shlb
fdiv
leave
lcall
inc
lods
jbe
orl
or
or
neg
jbe
adc
add
add
dec
jl
or
test
sbb
mov
and
add
mov
xor
adc
scas
int3
in
inc
mov
dec
repz
and
test
cs
in
ficomps
negb
pop
lock
test
mov
xor
fdivs
in
js
cmp
shrl
dec
mov
jge
ja
sti
xor
test
lock
mov
lahf
out
inc
or
or
lret
add
inc
sbb
mov
pushf
popa
or
inc
rcr
addr16
or
jne
dec
arpl
daa
out
mov
test
bound
or
cmp
jo
test
mov
mov
cmc
movsb
shl
or
add
xor
fsubrs
lds
push
or
dec
pushf
lds
dec
dec
dec
add
add
mov
dec
push
jle
jne
cmp
adc
sbb
sbb
pop
rolb
out
pop
dec
or
add
scas
mov
jne
mov
fiadds
sbb
add
test
inc
scas
jge
testb
mov
fs
or
mov
sub
inc
mov
sbb
pop
call
ret
mov
pushf
in
insb
cmp
dec
js
in
int3
insb
sarb
jle
insb
out
cmp
jne
mov
fcoms
call
cmp
mov
adc
pop
cmpl
or
int
subl
xor
push
mov
jb
add
ud1
xor
inc
mov
pop
insl
push
in
mov
pop
loopne
xor
leavew
jmp
int3
adc
push
enter
jb
lea
dec
fiadds
push
mov
mov
adc
pop
and
enter
and
lcall
in
sbb
xor
cmpsb
and
adc
mov
iret
addb
and
lahf
ret
popf
movsb
sbb
inc
inc
xchg
shlb
mov
and
es
hlt
hlt
or
enter
or
adcb
fistl
sub
dec
int3
push
mov
call
or
outsl
clc
push
aas
mov
addl
sahf
dec
cmp
pop
mov
sbb
jg
lods
mov
imul
dec
sbb
jae
inc
mov
fistpll
test
pop
imull
dec
mov
add
adc
xor
push
inc
shr
add
inc
push
stos
std
push
mov
jb
pusha
pusha
dec
pusha
rorb
xchg
outsb
jecxz
inc
sbb
and
jmp
inc
and
aaa
inc
dec
dec
pop
aas
lods
fidivrl
add
xchg
mov
call
ja
inc
adc
data16
fimuls
jmp
sbb
or
sbb
lret
jl
adc
sbb
mov
dec
mov
jl
pop
and
jmp
mov
or
sub
pusha
pusha
mov
imul
push
push
xor
sub
js
pop
cmpsb
nop
jae
aam
subb
rorb
add
scas
or
loopne
pop
add
clc
cmp
ja
add
dec
cmp
and
push
xchg
sbb
clc
ja
sub
inc
test
clc
jbe
cli
xchg
push
test
dec
push
or
test
add
lcall
int
ret
rolb
mov
cli
dec
push
mov
clc
sub
sbb
jae
pushf
add
fidivs
sub
les
adc
push
sbb
add
xor
lea
ret
in
jbe
mov
jbe
pusha
add
div
or
mov
ja
jmp
test
jne
add
inc
cltd
cmp
pusha
sub
sbb
addb
push
ret
or
xchg
and
cmovb
jbe
xchg
sub
xor
mov
lret
pusha
jl
loop
mov
sbb
mov
inc
add
cmp
add
pop
sbb
cmpsl
push
add
push
inc
cmp
push
gs
in
inc
dec
dec
mov
hlt
mov
mov
xchg
cmp
mov
mov
pop
and
fldl
push
mov
and
or
lret
mov
dec
sub
addr16
mov
fldt
xor
sub
jae
jne
xchg
cmp
xchg
jg
mov
fstpl
push
imul
pop
mov
mov
pop
mov
mov
int3
fwait
push
and
bts
pop
add
push
cmp
mov
test
cmp
es
xor
mov
mov
sbb
sub
or
imul
pop
inc
pop
call
inc
mov
shrl
or
or
sub
out
sahf
inc
or
je
fsubl
dec
int3
and
and
xchg
ss
pop
sub
cmp
ljmp
mov
mov
xchg
je
jbe,pn
loopne
movsl
inc
pop
inc
mov
dec
add
mov
stc
ds
orb
movsl
les
lock
adc
xor
inc
mov
push
fdivr
sub
sbb
jle
subl
and
cmpl
cltd
sbb
sti
stos
daa
in
pop
or
cmp
cmp
in
cmp
push
test
add
xorl
dec
sub
adc
dec
std
push
xor
mov
jmp
mov
ljmp
jb
mov
or
fistl
ja
push
dec
stos
sahf
jb
push
lock
add
push
or
mov
dec
or
adc
pusha
push
cmp
idivb
out
mov
outsl
xor
js
cmp
scas
stos
xchg
mov
mov
pop
idivb
jns
and
or
mov
inc
es
daa
sub
adc
xchg
fiaddl
dec
movaps
inc
push
push
pop
mov
inc
jo
and
mov
sbb
das
clc
lock
jg
pop
aam
pushf
mov
and
dec
je
imul
push
and
or
cwtl
inc
xlat
or
cmp
movsb
lods
mov
sbb
sahf
scas
jle
or
testb
out
push
nop
push
pop
mov
mov
out
xchg
das
cmc
add
xchg
andb
xor
es
pusha
mov
and
xor
jne
jge
jae
out
out
pusha
insb
test
adc
call
xor
mov
add
fwait
cmp
imull
pop
lock
shrb
push
sub
xor
nop
cmp
push
out
cmp
iret
or
jmp
pop
incl
and
xchg
dec
repz
jle
or
jg
inc
pushf
cmp
and
add
rol
sarb
jge
pop
pop
rclb
mov
adc
sbb
jle
test
ret
clts
jge
cmpl
xor
ret
or
lods
adc
push
or
or
imul
dec
cwtl
scas
in
add
cmp
or
pop
das
movsl
jle
arpl
dec
cwtl
or
sbb
mov
mov
pop
mov
mov
clc
cmp
cmc
bound
insl
test
cmpb
outsb
sub
lods
sub
mov
and
push
jo
sbb
pop
aas
pop
ljmp
or
pop
sub
movsl
jmp
push
mov
fwait
mov
and
xchg
xor
cmp
lock
push
out
or
xadd
shl
push
xchg
inc
add
and
nop
or
cmpsb
mov
out
mov
xchg
sbb
jo
scas
lods
insl
hlt
push
mov
or
rorb
mov
scas
adc
xchg
jns
jg
ljmp
sbb
popa
aam
sbb
lods
ja
in
mov
les
sbb
scas
and
stos
loopne
mov
pop
fldcw
adc
out
std
mov
adc
pop
sbb
jg
jmp
add
ja
jle
jmp
sub
arpl
ficoml
push
inc
or
pop
push
cld
fdivrs
add
sub
cmp
jmp
mov
pop
enter
sbb
sbb
outsl
test
fsts
sub
fisubs
pushf
sub
cmp
pop
push
cmp
push
mov
adc
push
loopne
lods
push
add
push
and
pop
add
popf
jne
dec
push
adc
pop
sbb
push
lret
push
adc
mov
andb
push
fists
jbe
ss
lock
into
dec
push
cld
dec
cmp
mov
outsl
sbb
sub
aad
mov
loopne
int3
inc
push
sbb
or
pop
pop
test
jl
popf
movsb
mov
cmp
mov
cmp
loope
jnp
push
push
arpl
ja
push
enter
mov
push
add
jb
aaa
loope
and
push
loop
xor
sbb
les
mov
add
shr
mov
test
mov
in
xlat
jl
mov
dec
pop
aas
jnp
push
add
cmpsb
inc
orb
push
inc
rorl
push
nop
dec
or
add
shlb
pop
insl
sub
rclb
pop
xor
pop
adc
push
xchg
iret
mov
into
cli
pop
aas
shll
faddl
scas
mov
adc
jns
mov
or
jmp
add
pusha
mov
nop
lret
push
cmpsl
iret
int3
aaa
icebp
xor
inc
cmp
mov
jbe
aas
add
divl
loopne
sbb
adc
shr
addb
jae
xchg
adc
jg
pop
or
mov
cwtl
nop
aam
pop
push
cmpsb
adc
jnp
ja
sub
jne
or
cmp
cmp
js
scas
nop
fmuls
sub
pop
jne
outsb
mov
cmpsl
adc
sub
jg
pusha
or
mov
ljmp
mov
js
dec
mov
out
mov
rcrl
loop
dec
xor
loope
xor
das
sti
or
sub
repnz
jno,pt
and
scas
jl
lds
jae
sub
add
add
in
jne
and
xor
insb
add
imul
fldl
hlt
mov
cmp
ja
cs
dec
mov
jmp
add
ret
adc
xchg
mov
sub
inc
faddl
rolb
jp
dec
ficoml
xor
daa
sbb
jo
repnz
int
jbe
lods
cmp
outsb
and
imul
and
loope
xor
cmp
lea
dec
sub
je
dec
add
or
lret
mov
pop
js
sbb
add
add
sbb
dec
sub
and
roll
push
clc
push
sbb
inc
push
imul
inc
add
inc
push
cmovno
addb
adc
lock
pop
cmp
ret
lea
adc
mov
cmc
pusha
stos
sbb
or
mov
cmp
hlt
push
push
mov
sub
push
jl
push
sbb
push
pop
movsl
adc
daa
pusha
sbb
je
sbbb
cmpsl
sub
inc
xchg
or
test
mov
mov
adc
dec
sbb
or
inc
push
and
cmp
stc
jl
push
push
sub
repz
push
das
jo
fisubl
mov
jmp
rcrb
pop
add
push
xlat
fs
sbb
jl
fwait
cmp
xchg
inc
loopne
pop
push
sbb
nop
push
jne
dec
cld
sbb
pop
jmp
mov
mov
les
insb
adc
xor
add
add
or
fstl
ret
mov
jne
inc
lock
sbb
out
jne
jb
test
adc
inc
subb
xlat
adc
xchg
and
and
push
jl
cmpsb
sub
movsb
fildl
js
or
sbb
mov
mov
es
hlt
or
and
xor
mov
lcall
jns
mov
add
pop
icebp
jecxz
and
inc
insl
jne
pop
sbb
sbb
in
scas
call
mov
and
mov
subl
pop
cs
scas
adc
rclb
imul
inc
enter
cmp
adc
or
aad
popf
test
mov
inc
mov
adcl
mulb
lahf
out
jecxz
lods
jne
bound
mov
nop
adc
sub
add
add
shl
jno
test
cmp
cmp
xchg
incl
pop
roll
popa
jp
pusha
mov
cmpsb
xor
or
dec
sahf
mov
or
pop
lret
pusha
fnstsw
in
pop
daa
cmp
lea
sub
jl
or
pop
mov
test
jmp
jmp
adc
sub
xchg
ficoms
mov
adc
add
aad
cmp
cmp
sub
cli
inc
or
or
xor
cwtl
inc
cmp
pushf
add
cs
sbb
mov
jnp
movsl
xor
or
int
mov
and
adc
lea
sub
pusha
movsl
mov
xchg
cmpl
out
add
pop
add
push
nop
cmp
add
or
les
mov
mov
lea
dec
and
mov
inc
mov
jl
fwait
shrb
icebp
js
mov
cmp
imul
mov
dec
xchg
add
xor
push
cld
mov
loop
fadds
clc
push
rcrb
adc
das
data16
jecxz
int3
jmp
les
inc
ljmp
adc
add
cmpsl
xor
pop
out
adc
lea
push
out
pop
xor
sbb
fldl
or
sub
push
mov
pusha
pusha
lea
adc
inc
mov
gs
mov
dec
andb
xor
ret
test
or
sbb
adc
push
outsb
je
and
sbb
ret
pop
dec
shrl
xchg
out
lock
or
mov
jb
pop
test
inc
mov
inc
lea
mov
hlt
call
sbb
sub
es
mov
xor
filds
imul
lea
push
xchg
adcl
adc
cmp
cld
dec
push
xchg
mov
and
mov
mov
je
xchg
add
push
push
test
and
jecxz
sub
adc
xorb
jge
sbb
enter
xor
xchg
mov
push
or
sub
xor
test
pop
mov
cmp
and
mov
mov
sbb
dec
scas
mov
sbb
adc
dec
xlat
mov
bound
or
into
push
jl
mov
fsubr
sub
jno
mov
das
or
dec
jge
rcrl
and
sub
cmp
sbb
push
xchg
xchg
ret
shll
or
push
mov
shrb
sbb
push
test
pop
test
pop
mov
movsl
xchg
xchg
mov
push
insb
xor
jmp
test
or
push
mov
inc
mov
daa
es
fistl
test
cmp
inc
jno
mov
adc
cmp
dec
sub
dec
pop
das
mov
xchg
int3
sti
push
sub
daa
addl
cmc
add
dec
push
pop
jno
adc
sarl
stos
jb
cmp
cmp
pop
ret
mov
test
mov
adc
mov
sub
mov
and
sub
mov
or
pop
int3
push
bswap
jno
mov
das
dec
sub
jg
cmp
jl
nop
cs
lret
mov
loop
and
ss
test
popf
pop
dec
pop
mov
mov
sbb
mov
sub
and
mov
ja
dec
sahf
fwait
inc
ret
clc
jge
test
mov
jno
je
sti
xchg
cli
ja
xor
fistpll
cmc
sar
mov
xchg
loope
jo
lock
dec
push
aas
mov
jg
lods
inc
add
insl
xor
stos
lea
bnd
jmp
xor
mov
por
push
mov
popf
nop
lods
xor
jo
push
lock
push
adc
imul
lock
dec
sub
mov
sbb
sub
js
imul
dec
mov
and
jo
xchg
and
mov
cmp
adc
inc
adc
dec
add
stos
decl
xor
dec
es
add
pavgb
imul
pshufw
fwait
mov
add
ret
addr16
mov
xchg
adc
and
inc
jecxz
dec
inc
icebp
rorb
mov
xor
jl
jge
sbb
xchg
inc
push
xchg
or
adc
sar
test
int
mov
cmp
cmp
scas
or
xor
dec
push
sub
sbbl
mov
dec
or
sbbl
lret
sbbb
fimuls
mov
nop
inc
adc
or
gs
inc
js
pushf
in
imul
add
xchg
dec
sub
add
test
xor
lods
and
jo
cmpsb
adc
ud0
addl
clc
sub
cmp
xchg
lods
idivb
dec
fs
cmp
es
xchg
xchg
add
cmp
ljmp
dec
xor
in
inc
mov
in
frstor
sub
fisubs
and
push
mov
pop
mov
mov
out
sar
push
dec
pop
add
stos
push
jbe
and
mov
sbb
push
out
xchg
and
add
push
and
mov
test
push
pop
or
pop
or
arpl
test
sub
push
jg
mov
movsl
mov
add
in
call
push
xchg
dec
sbb
outsb
push
pop
cmp
fs
and
xor
cld
js
jno
movswl
and
lds
inc
call
sub
sbb
outsl
sbb
jmp
dec
js
int
ret
je
xchg
mov
rol
jl
das
sbb
mov
mov
xor
or
xor
mov
cltd
fisttps
jb
js
rcrl
nop
add
xchg
add
pop
pusha
adc
into
and
dec
rcrb
mov
inc
in
xor
and
sbb
sub
sub
xor
dec
jle
sub
cli
lods
adc
popa
sbb
push
dec
cmp
cwtl
push
adc
pop
in
out
pop
inc
add
mov
inc
scas
xchg
popa
repnz
pusha
xor
ds
dec
out
cmp
or
pop
mov
shl
xchg
inc
repnz
movsl
pop
mov
ss
jl
test
mov
icebp
inc
jecxz
lret
jmp
push
sbb
aas
andl
mov
add
je
adc
lcall
mov
or
dec
mov
mov
sarb
xchg
xor
adc
cmp
mov
scas
clc
push
mov
pop
xor
mov
test
sahf
inc
or
xor
fdivl
adc
mov
xchg
jmp
sub
or
cmp
in
sub
and
setg
mov
jmp
js
push
dec
mov
jp
rolb
xchg
pop
add
movsb
push
lahf
sbb
add
clc
xchg
je
xchg
dec
push
and
adc
addl
mov
sbb
sbb
adc
add
aaa
popa
sub
movl
sbb
stc
push
mov
movsl
je
inc
dec
lcall
mov
mov
les
ret
dec
loop
sbb
jp
mov
mov
cmp
mov
add
rclb
mov
popa
push
jle
jle
or
inc
stos
das
test
addb
xor
es
test
in
inc
inc
mov
xchg
mov
push
inc
test
shl
add
ja
cmp
lock
xchg
mov
lea
add
add
cmp
je
addb
jg
icebp
sbb
out
andl
fildl
cmpb
fidivrs
and
aam
dec
sub
inc
xchg
js
test
mov
out
sub
or
aas
cmp
into
and
sub
dec
mov
jbe
roll
and
inc
stos
mov
nop
test
je
loop
mov
push
or
outsl
stos
add
or
mov
loope
add
rorb
shll
inc
shlb
cmp
fcmovne
icebp
in
push
inc
test
shll
or
sub
mov
dec
pop
aam
sbbb
shlb
xchg
lods
xchg
jle
mov
inc
aam
mov
mov
xor
mov
inc
jg
insb
fcoml
shlb
cmp
xor
mov
pushf
inc
in
cwtl
sar
jno
mov
popa
add
xchg
cmc
xor
adc
mov
adc
jle
loop
outsb
enter
pop
jl
bound
outsb
fcomip
sbb
or
outsb
jmp
mov
mov
inc
out
mov
mov
push
cmovnp
mov
or
cmp
outsl
jno
add
sbb
add
mov
inc
lea
add
mov
rolb
rolb
xchg
imul
and
add
or
push
js
lock
rorb
and
dec
mov
xor
out
jne
add
in
adc
pop
add
pusha
movsl
adc
outsb
sbb
sbb
jae
mov
add
loopne
inc
lahf
xchg
mov
es
dec
or
fnstsw
jb
xlat
fnstcw
xchg
mov
jae
sub
movsb
pop
pop
jb
mov
xchg
icebp
adc
mov
or
lea
xchg
adc
je
push
mov
jge
outsl
fwait
test
getsec
imul
push
or
inc
push
add
mov
daa
jle
jg
cmp
call
or
sbb
stos
pop
or
pusha
clc
insl
aad
jge
add
adc
std
mov
test
test
cmp
sbb
fiaddl
or
xchg
adc
push
mov
mov
push
nop
inc
pop
mov
xor
dec
lods
and
enter
fdivs
add
sub
push
dec
sahf
jno
mov
repnz
or
xchg
dec
repz
shl
fmull
mov
mov
xchg
push
push
ss
xor
aam
adc
sbb
mov
ja
xor
inc
movsb
test
adc
cs
sub
lcall
mov
push
and
dec
cmp
into
bound
shl
cmp
out
and
rolb
lods
sti
push
divl
mov
les
xor
sbb
and
sub
and
pop
mov
dec
adc
pop
es
lret
xor
and
add
lock
pop
xchg
fs
push
cs
inc
add
aaa
xchg
mov
xor
jmp
scas
add
ffreep
add
inc
cmp
and
aas
push
sbb
xchg
pushf
or
sbb
orl
js
sbb
loop
or
test
sub
mov
sti
xlat
push
jnp
cld
dec
adc
lods
inc
dec
fnstenv
pop
sahf
mov
js
add
push
lea
xlat
push
jg
cmp
adc
push
mov
mov
sahf
xchg
fs
lock
add
mov
nop
lock
push
adc
push
add
lcall
lea
push
jb
aaa
loop
daa
adc
fwait
andb
sbb
jmp
add
xchg
insl
xlat
sar
or
sub
ds
dec
xor
pop
out
sbb
push
das
test
inc
and
lds
movl
ret
inc
ds
adc
in
dec
mov
pop
jmp
stos
and
inc
sub
or
jp
fmul
lea
loop
dec
int
dec
mov
mov
popl
xor
adc
fxch
or
inc
lds
fs
addb
aam
push
and
enter
or
push
xor
or
fdivr
add
decl
jae
push
mov
push
or
inc
dec
addr16
add
cmp
mov
mov
lock
call
push
sbbb
emms
xor
adc
mov
mov
or
cmpsl
jne
mov
mov
mov
or
mov
sub
add
call
loopne
mov
mov
dec
jo
adc
jmp
cmp
insl
bound
or
lock
test
cmpsb
push
in
jne
xchg
pop
scas
jge
sub
xor
mov
or
fadd
decb
fs
dec
jmp
xchg
in
loopne
clc
lea
mov
sbbb
or
xor
inc
lods
inc
scas
adc
add
lock
incl
pop
enter
mull
add
inc
or
mov
push
repnz
out
pop
mov
les
cmp
shrb
adc
pop
test
sbbl
sbb
mov
lods
enter
push
lock
mov
or
pusha
ljmp
in
fdivl
mov
mov
adc
orb
xor
xor
shr
jp
pop
dec
in
or
data16
fcoml
mov
push
fsub
shr
hlt
lret
lcall
mov
rcll
dec
jbe
mov
lea
sahf
lret
rcrb
mov
lea
pop
lock
lret
adcb
push
add
nop
lret
inc
loopne
jb
mov
nop
mov
adc
mov
xor
lret
add
movsb
sbb
imul
aam
push
inc
ret
les
movsl
pusha
enter
daa
ret
sbb
push
je
push
xor
add
or
sbb
add
sbb
inc
or
or
pop
out
lods
rorb
lock
loopne
mov
js
hlt
mov
push
jp
imul
add
les
jp
add
mov
lods
jnp
dec
sub
cmp
sub
je
push
ret
out
jns
test
shll
mov
enter
or
xchg
add
or
mov
imul
int3
je,pt
popa
lea
sub
inc
or
xchg
adc
cmpsb
xchg
aad
xorl
mov
adc
cmp
cwtl
adc
mov
jb,pn
in
add
orl
ds
cmp
mov
push
fimull
les
mov
scas
push
mov
mov
xor
jl
push
and
inc
jge
cs
jle
xor
add
sar
xchg
push
loopne
pop
cwtl
out
inc
cmp
jo
lock
jb
mov
jns
jecxz
xchg
and
jb
dec
mov
dec
popl
jo
sub
mov
bound
adc
add
fstl
mov
mov
mov
inc
sbb
lock
mov
lods
rep
lock
jl
inc
xchg
cs
xor
ljmp
add
loope
adc
ljmp
mov
jmp
lock
add
sbb
mov
repz
and
xchg
mov
mov
sbb
fadds
or
mov
ror
jne
add
lds
lret
in
aam
fwait
push
out
sub
dec
fmull
cwtl
xchg
add
andl
pop
push
out
inc
sbb
icebp
inc
and
push
movsb
inc
push
icebp
add
sub
mov
mov
fidivrs
loope
std
stc
add
add
mov
cs
aam
nop
loop
mov
inc
inc
adc
or
sub
jmp
xorb
test
das
or
stc
adcl
enter
icebp
push
add
sub
xchg
dec
lods
dec
push
push
or
les
jmp
sbb
cld
dec
cmpsb
and
inc
sub
je
stc
cltd
jbe
movsl
sub
les
and
rolb
jnp
add
je
dec
mov
jmp
inc
xor
enter
dec
or
das
jecxz
lock
orb
xchg
xorb
and
add
icebp
imulb
rolb
mov
rcrb
ss
popa
sbb
pop
and
movsl
mov
sahf
adc
push
sub
aas
xor
das
setnp
sub
add
jg
jmp
add
sbb
jo
divl
repnz
jmp
js
insl
or
clc
or
and
out
sub
push
mov
or
js
dec
jl
repnz
imul
call
call
jecxz
loopne
push
and
inc
adc
nop
mov
cltd
loop
out
push
dec
daa
jo
dec
adc
cmp
inc
sbb
lret
aad
or
jl
fwait
aaa
mov
xor
inc
push
lds
cmpsb
rol
js
or
ljmp
and
cmp
cli
cltd
idiv
push
loop
inc
cwtl
ret
sbb
mov
incl
xchg
adc
dec
rcr
movsb
lret
mov
jae
xor
add
sub
mov
ret
add
mov
leave
dec
dec
push
dec
inc
add
ds
jmp
inc
out
rolb
outsb
jb
jmp
pop
mov
push
sbb
adc
xchg
rcl
xor
sbb
jge
sub
push
add
bound
fisubs
inc
jnp
mov
sub
movsb
sbb
pop
or
cltd
pop
cmp
and
mov
push
rclb
mov
xchg
nop
pop
stos
std
call
jnp
sub
mov
test
sub
inc
xchg
sbb
cmc
or
jl
lock
jmp
cmc
test
mov
stc
sub
fs
push
pushf
sbb
enter
incb
scas
push
pop
rclb
cmp
cmpsb
clc
aad
cmp
lock
add
add
inc
add
insl
rcr
pop
sbb
pop
add
add
jl
jge
jl
inc
movsb
dec
sub
cs
sub
out
push
push
bnd
adc
dec
pop
adc
ret
test
cwtl
es
xchg
loopne
inc
push
mov
adc
sub
push
fwait
jcxz
mov
mov
lock
lds
cs
dec
adc
adc
jmp
xchg
ret
mov
ds
iret
addr16
jp
into
adc
push
fidivrl
test
mov
adc
mul
xor
addr16
outsb
dec
outsb
push
icebp
xchg
outsb
ret
push
and
insb
ret
jge
mov
dec
inc
insl
lods
pop
lret
jl,pn
xchg
out
inc
insb
inc
xchg
mov
inc
sub
inc
pop
sahf
cmp
lret
pop
je
icebp
loopne
add
fiaddl
lret
outsl
ja
push
outsb
adc
mov
jns
inc
dec
std
push
pop
adc
jmp
mov
sahf
andb
mov
or
push
pop
lods
cmpsl
or
aas
sub
or
loopne
sti
push
or
jp
jo
cmp
adc
pop
and
push
add
mov
ljmp
neg
pop
xchg
fs
rcll
add
xchg
inc
sahf
jl
inc
fisubl
lea
inc
jecxz
and
ret
loope
inc
dec
scas
pop
clc
sahf
popa
pop
aad
imul
ds
call
and
fidivrl
cmp
dec
dec
inc
inc
mov
mov
or
push
sub
mov
sbbb
bound
jl
xlat
pop
mov
jno
cwtl
cmp
jo
cmpsb
hlt
sbb
arpl
inc
cmp
xchg
sbb
push
stos
inc
mov
push
sbb
push
aaa
sub
fldl
xor
pop
cmp
mov
mov
mov
pop
add
sub
mov
sub
imul
mov
add
in
aaa
or
leave
xorl
jae
push
adc
xchg
mov
adc
lcall
dec
lock
outsl
movsl
imul
add
inc
dec
mov
mov
mov
xor
pop
inc
sub
adc
jle
inc
cmp
mov
sub
sbb
imul
jb
xchg
adc
cmpsl
xor
aaa
movsl
loopne
nop
int3
jno
and
adc
pop
lret
int3
or
sbb
jge
push
test
and
cmp
or
xor
lret
addl
mov
add
in
jge
mov
mov
mov
add
inc
stos
cwtl
pop
adc
outsl
dec
inc
shl
loop
js
sub
mov
loopne
push
or
adc
mov
dec
lea
clc
hlt
pop
mov
loopne
cmpps
fcomps
clc
pusha
xorb
fdivl
pop
inc
jmp
cwtl
mov
and
scas
jo
jns
lcall
in
arpl
dec
sahf
xor
pop
add
mov
mov
mov
sub
lock
dec
pusha
sbb
mov
fistl
cmp
and
imul
xor
dec
xor
loop
pop
das
xor
call
pusha
sub
jbe
push
mov
clc
mov
hlt
inc
xor
add
push
clc
xchg
ficomps
xchg
adc
call
inc
cs
xor
into
ds
inc
mov
inc
ljmp
cmp
lret
ret
enter
jnp
xchg
cmp
fsubrl
aaa
mov
jge
cmp
ret
enter
xchg
mov
shlb
dec
shlb
ror
sbb
push
inc
push
mov
pop
movsl
jmp
mov
insb
aam
mov
imul
pop
xor
inc
adc
inc
mov
xor
faddl
fadds
ret
lcall
mov
cmpsb
stos
cmp
js
in
sbb
enter
xor
pop
ljmp
ret
stc
sbb
xorl
or
push
push
int3
insl
pop
adc
xor
mov
mov
mov
and
adc
xor
dec
xchg
xchg
sbb
aas
mov
dec
aaa
fsub
sti
data16
or
pusha
lock
pop
rcr
pop
mov
push
lret
or
fnstenv
mov
push
mov
aam
daa
jecxz
inc
out
lfs
and
and
xor
mov
rorb
pop
ja
push
mov
repz
jo
xchg
xor
test
call
test
ret
dec
cmp
add
sbb
js
in
jmp
mov
inc
adc
pop
das
fs
xchg
test
sub
es
je
clc
popf
sbb
or
dec
mov
and
pop
mov
cmp
or
adc
popa
jns
das
dec
sti
rorl
push
mov
dec
dec
mov
push
push
dec
inc
shll
or
push
imul
xchg
mov
add
lds
add
rorl
out
jmp
xor
xor
inc
jmp
adc
adc
xchg
xchg
mov
and
sub
call
add
imul
gs
cmp
xadd
xchg
pop
add
maxps
movsl
adc
xor
adc
xchg
cli
cmp
sbb
pop
dec
push
push
mov
cltd
cmp
or
add
and
xchg
scas
sar
divb
cmc
shl
xor
sub
incb
add
adc
mov
add
addr16
movsl
push
jl
addr16
leave
call
xor
jp
or
out
xchg
jo
cmp
pop
mov
jle
movsl
nop
mov
sarl
sbb
imul
adc
or
roll
call
add
sbb
adc
or
arpl
mov
or
mov
push
lods
out
sti
or
add
fs
cmpb
inc
mov
enter
filds
push
aas
jmp
add
or
push
push
movaps
cmp
loopne
add
clc
or
dec
push
ret
xchg
cmp
out
jge
inc
jge
roll
jle
mov
sahf
jbe
cli
dec
jne
leave
outsl
dec
insb
mov
or
cmp
lret
sub
inc
sub
or
adc
lea
xor
in
dec
inc
cld
mov
jge
add
sarl
dec
jb
mov
or
bnd
or
mov
fnstenv
mov
pop
adc
jmp
enter
xor
in
lret
adc
xor
shll
jecxz
lahf
cmp
jns
dec
daa
loop
push
xchg
cmp
lods
cli
or
or
mov
or
aam
decb
xor
sbb
inc
ss
push
movsl
loope
mov
push
cmp
cmp
cmp
jecxz
lds
fstpl
or
fsts
sbb
and
dec
rcr
lods
and
sub
sub
ds
mov
sub
sub
dec
add
outsb
ret
mov
add
mov
add
jl
cs
inc
loop
inc
push
cs
cmp
inc
inc
sub
cmp
add
lret
mov
adc
inc
addr16
stos
xchg
inc
stos
pop
push
stos
dec
mov
dec
aas
test
ret
jne
pop
mov
imull
jle
add
jg
sbb
or
sbb
pop
js
dec
fiadds
add
mov
popa
fimull
dec
dec
or
adc
test
xor
clc
or
or
adc
sub
mov
dec
sub
aam
dec
push
adc
dec
mov
push
lock
outsl
or
sbb
hlt
dec
aas
inc
daa
out
pop
pop
je
dec
sub
xchg
add
inc
es
jle
jge
pushf
fsubrs
or
out
jmp
and
cmpsb
sub
adc
pop
xchg
adcl
pusha
inc
in
mov
int
or
inc
or
fcomps
or
mov
xchg
lret
mov
or
loop
or
pop
add
dec
cmpsl
xor
xor
push
loope
icebp
shlb
stos
mov
jg
je
jg
and
lret
adc
push
and
push
stos
into
cli
jae
jl
inc
xchg
sub
shll
shrb
mov
shl
mov
sbb
add
fildl
cmp
test
rorb
add
xor
adc
sar
mov
add
hlt
pop
mov
lcall
je
xor
and
insl
adc
sub
push
jbe
lods
shrb
adc
inc
mov
ror
adc
loope
pop
pop
mov
adc
cmp
inc
insl
rorb
push
or
sub
push
push
adc
add
int
pop
xchg
jo
sbb
pop
loop
adc
xchg
test
add
mov
mov
jg
mov
add
pusha
mov
aam
cmp
ja
sti
sbb
cmp
mov
push
imul
sbb
push
lcall
or
xor
test
jo
test
stc
dec
mov
jg
aam
pop
push
mov
xchg
lods
pop
jp
push
nop
sbb
shll
int3
fld
push
lret
mov
enter
popa
cltd
sbb
shlb
cld
jnp
push
dec
push
adc
enter
xor
jle
and
scas
jbe
pop
mov
or
or
mov
inc
clc
jge
sti
xchg
mov
sub
adc
add
cmp
mov
ja
int
sti
add
jmp
inc
in
jle
clc
dec
popa
leave
sbb
mov
pop
daa
or
out
pop
inc
fs
rorb
jae
fildl
call
cmp
fdivrl
outsl
jae
push
dec
ffreep
mov
cmp
jge
or
sbbl
fwait
xchg
lahf
mov
mov
lea
in
pop
es
mov
jg
mov
inc
into
movsl
xor
testb
icebp
ss
shll
adc
cmc
std
pop
js
ficoms
lea
movl
jo
mov
adc
mov
sub
jmp
fsubs
addr16
jge
add
sub
pop
xchg
adc
pop
sub
mov
pushf
jo
add
pop
or
imul
fcmove
or
sahf
jo
inc
push
add
or
mov
adc
movsl
jbe
or
enter
add
mov
or
ja
inc
add
push
or
pop
pop
push
jg
add
es
lret
jecxz
test
rclb
shrb
fsubrs
cmp
jge
mov
push
jge
mov
add
mov
loope
sub
sti
inc
loopne
loop
pop
imul
or
enter
cmp
jge
mov
mov
aam
sub
jge
or
adc
fdivrp
adc
les
ret
push
pop
jne
push
push
fstpl
sub
xchg
dec
adc
push
clc
add
add
scas
and
lret
shl
shl
sub
add
mov
ret
rclb
add
mov
sbb
mov
arpl
fs
scas
gs
popf
push
xchg
jp
xchg
lcall
cmp
cwtl
sbb
scas
adc
inc
mov
inc
fmull
sbb
lret
subl
pop
pop
imul
cmp
int3
add
adc
adc
mov
mov
or
data16
jae
jbe
into
pop
adc
inc
mov
inc
test
in
or
stc
and
stos
loopne
popf
push
xor
outsb
pop
icebp
cmpsb
and
repnz
or
sbb
prefetcht1
sbb
lock
mov
aas
sub
push
xchg
jp
xor
hlt
lahf
ja
jge
jne
dec
push
test
in
ja
nop
cmp
mov
movsb
nop
sbb
clc
scas
sbb
xchg
loopne
cmp
xchg
inc
lods
sub
sti
sbb
add
mov
xchg
dec
pushf
jb
mov
sbbb
nop
or
pop
sbb
loopne
inc
mov
rcrl
adc
enter
cmpsb
aam
aas
and
sub
add
mov
test
sbb
int3
mov
xchg
mov
push
add
mov
or
js
loopne
cmp
jmp
pop
fcomps
sbbb
ja
mov
sub
je
rol
les
aam
add
adc
ljmp
dec
sbb
mov
jbe
mov
xor
addb
call
cli
movswl
repnz
pop
int3
movsb
mov
add
ficompl
js
jnp
adc
push
loope
imul
sbb
pop
push
fsubs
lods
jb
mov
mov
pop
push
push
xlat
insl
jnp
lret
cld
xchg
test
add
cmp
adc
push
adc
jb
ficomps
test
push
loope
adc
cmpsb
mov
imul
clc
add
and
add
frstor
in
add
ja
pusha
xor
shll
aas
adc
and
push
jge
fsubl
cwtl
clc
or
mov
mov
pop
adc
pop
jmp
adc
sub
cmp
jle
mov
add
dec
push
push
mov
add
xchg
sbb
ret
test
in
pop
aam
fcom
fdivrs
loopne
adc
dec
mov
sbb
rcrb
es
ret
inc
lods
cld
sarb
xor
mov
jb
fsubr
fidivs
cmp
dec
mov
shlb
pushf
repnz
pop
xchg
mov
subl
daa
or
pop
push
into
add
push
or
out
sbb
mov
neg
mov
neg
mov
mov
inc
inc
bnd
xor
or
cmp
fidivrs
adc
inc
movsb
xor
ljmp
decb
fistpl
or
pop
cmpsl
adc
cmp
lahf
push
jp
and
push
adc
xchg
shlb
mov
flds
push
sahf
inc
sbb
push
ljmp
push
pop
or
and
insl
add
icebp
int3
cmp
fldt
add
or
adc
mov
xchg
in
xor
cmp
push
pop
inc
data16
push
cmp
push
lea
push
test
cmp
sub
xlat
sub
pop
cmp
dec
jp
lahf
push
and
adc
dec
lahf
lock
mov
lods
pop
sbb
add
mov
in
push
loopne
std
out
dec
jl
mov
addr16
adc
nop
sahf
or
pushf
xchg
pop
cmc
lcall
xchg
cs
jnp
push
or
iret
inc
sbb
sub
popf
sbb
add
inc
xor
stos
adc
pusha
sub
sub
jge
xchg
cmp
call
push
imul
pop
jle
push
adc
fldl
and
sbbb
mov
push
les
rclb
or
ret
orl
cs
aam
scas
subl
fcoml
and
adc
js
jge
add
nop
call
add
repnz
mov
or
scas
push
dec
inc
push
mov
popf
cli
mov
test
test
fcomps
mov
jb
mov
mov
adc
add
push
dec
rol
decl
and
add
inc
sub
cmp
jl
imul
int
and
cwtl
pusha
andb
push
sbb
hlt
mov
lock
and
xchg
add
jbe
addl
insb
out
sub
inc
cmp
inc
cmp
pop
or
jp
cmpsl
and
subb
rolb
cmp
jl
sbb
mov
cs
mov
mov
adc
or
cmp
adc
cmp
imul
jl
jp
cli
dec
adc
stc
add
push
mov
cmp
mov
mov
push
pop
int3
xor
jge
inc
ss
rolb
cmp
dec
fcoms
fsubr
repnz
clc
mov
sbb
pop
xchg
ret
lods
out
js
flds
data16
jno
shlb
mov
sbb
cwtl
or
jle
mov
jno
repnz
sub
pop
mov
loopne
fidivrl
insl
add
adc
inc
addb
jmp
not
and
lock
arpl
jecxz
je
leave
push
jg
aam
xor
loopne
mov
mov
stc
jmp
jmp
div
add
add
int3
lret
data16
lret
cld
inc
pop
xchg
incb
dec
adc
rcrb
ret
sbb
adc
pushf
lcall
lea
sub
popa
cmp
test
push
mov
aaa
adc
jmp
push
fiaddl
mov
cmpsl
jl
adc
lods
add
adc
add
iret
fimull
xor
xor
and
adc
aaa
add
daa
aam
cmc
and
aaa
sahf
out
sbb
daa
or
adc
je
mov
cli
sbb
addl
shlb
mov
subl
add
adc
jg
test
inc
dec
lods
sub
mov
xchg
cmpl
add
pop
mov
add
sar
das
add
sbb
test
adc
pushf
pop
rorb
lods
xor
jbe
es
dec
jb
dec
lods
xchg
add
orl
cmpsb
jle
nop
pop
jp
xchg
xchg
movsl
mov
mov
cld
jnp
mov
push
fisubs
xlat
fldcw
push
jb
cmpsb
dec
add
sahf
xchg
loope
ror
xor
fwait
imul
or
mov
sbb
das
pusha
lret
iret
loope
es
push
insl
add
inc
or
push
adc
in
shlb
movl
rorl
mov
sub
push
cmpsl
jns
lods
xchg
cmc
cmpl
pmaxub
outsl
mov
ret
cmpsl
add
repz
ljmp
lea
clc
jmp
mov
push
jmp
pop
mov
mov
inc
jo
clc
push
dec
and
dec
pop
push
mov
add
ret
sbb
inc
clc
cmp
jl
das
cmpl
lret
jle
loope
sub
jl
sub
shll
outsl
das
dec
cmp
leave
mov
dec
jno
mov
rorb
dec
stc
sbb
xor
test
fmull
ret
fists
ret
frstor
push
push
pop
add
inc
or
fimull
xchg
mov
cmpsb
adc
paddd
movsb
jmp
or
push
add
dec
sbb
add
out
bound
clc
lods
sbb
loopne
movsl
scas
or
push
loopne
psraw
xchg
mov
fs
repz
dec
xchg
cmpb
lock
cmp
loopne
lret
lods
adc
push
ljmp
xchg
push
jmp
cmp
jmp
cmp
inc
aaa
add
das
loopne
addl
mov
xor
adc
mov
lock
inc
sub
mov
scas
mov
aam
mov
push
stc
orl
sub
mov
mov
shl
or
insl
enter
dec
push
jge
jl
mulb
sarb
sub
rorl
dec
xchg
sbb
pusha
imull
jmp
cmp
jnp
inc
dec
jl
adc
inc
jl
sub
cmpb
cmp
cli
in
add
dec
sbb
popl
fidivrl
dec
push
outsb
jno
mov
insl
adc
subl
and
sbb
adc
push
cmp
insb
mov
incl
xchg
or
lret
cmp
push
sti
fs
adc
push
or
pop
inc
add
pop
xchg
sbb
dec
lea
and
sub
or
inc
push
ud0
jp
push
push
sbb
rorl
mov
mov
mov
or
add
decl
scas
mov
inc
fsubrl
mov
lods
stc
xor
pop
shlb
xor
jo
mov
jmp
lds
movsb
sbb
mov
or
daa
adc
out
loop
add
adc
mov
clc
pop
mov
lea
pop
pusha
sbb
cwtl
inc
or
and
pop
shrl
cmp
jl
inc
out
mov
test
and
jge
mov
ds
sub
jl
loop
or
mov
or
ret
cld
pop
dec
inc
xor
or
or
pop
pop
adc
pop
pop
add
fsubrp
mov
cmp
cltd
inc
inc
sbb
lods
addl
push
jns
push
adc
xor
xor
adc
jl
daa
lea
xchg
push
jbe
mov
test
dec
xor
jp
cltd
frstor
mov
scas
cld
negb
mov
test
out
mov
shlb
lret
enter
out
inc
cmp
or
sbb
loop
div
dec
jne
je
mov
xchg
test
push
mov
nop
add
sub
sub
lea
dec
fists
cmp
xor
xchg
js
jmp
loopne
mov
sbb
and
ljmp
sub
pop
fwait
or
push
and
sub
rcl
js
rcll
stos
push
and
lcall
and
imull
pop
dec
ret
jns
xor
scas
cwtl
lahf
hlt
fwait
cwtl
scas
sub
add
es
mov
push
push
adc
sbb
dec
inc
or
sbb
dec
jo
jae
add
add
xchg
jno
and
and
outsb
xchg
jmp
imul
or
adc
and
adc
add
mov
outsl
mov
push
shlb
ds
pushf
cmp
mov
ret
les
test
and
cmpsl
or
test
jecxz
mov
fsubrl
pop
sbb
and
add
xchg
popa
int
adc
arpl
ret
inc
lret
cwtl
xchg
outsl
add
adc
sti
rcrl
xchg
adc
add
sbb
cmp
adc
jl
mov
mov
lock
xlat
adc
js
fisttpl
mov
wbinvd
lret
stos
push
and
in
jae
cmp
mov
add
jge
sbb
xchg
dec
jmp
cmp
or
cmp
icebp
dec
xor
push
inc
mov
aas
xchg
xchg
mov
dec
push
pushf
cmc
pushf
outsb
sub
roll
mov
dec
or
sub
dec
sti
push
pop
js
stos
dec
ds
insb
and
mulb
daa
and
or
push
shll
nop
jno
insl
hlt
add
dec
mov
xor
jo
cmpsb
add
add
dec
mov
push
inc
push
fsubrl
nop
adc
or
dec
add
pop
inc
push
jmp
xchg
out
int
inc
mov
inc
adc
sbb
outsl
pusha
mov
std
inc
dec
cmp
mov
out
jecxz
mov
scas
lret
and
jnp
scas
jb
sysenter
add
daa
add
and
dec
add
mov
add
dec
jb
push
dec
dec
cld
dec
xor
loope
rorb
mov
adc
mov
push
movl
xor
movswl
adc
mov
movsl
xor
daa
mov
cmp
repnz
lock
test
pop
adc
and
fs
fs
push
sbb
ja
ret
loop
sub
xor
mov
push
js
notb
mov
xor
addl
imul
inc
pop
adc
and
pop
adc
sub
sub
cmp
leave
divb
mov
adc
lock
pop
push
shrl
loope
addr16
ret
push
inc
imul
add
sbb
jb
sub
or
fsubs
lcall
test
or
loopne
dec
insb
into
enter
inc
sahf
fs
mov
or
loopne
mov
daa
add
shrb
ret
shrb
cmp
arpl
sbb
adc
sbb
stos
lea
mov
icebp
test
sbb
in
push
mov
out
stos
adc
rorl
pushf
add
clc
stos
shrb
je
idivb
arpl
pushf
cmp
nop
xor
push
mov
pop
and
dec
push
push
push
jae
cltd
mov
push
test
inc
scas
xlat
loopne
add
lret
mov
xor
rolb
mov
loope
movl
cmp
jns
xchg
add
sbb
jl
imul
jg
xchg
lret
pushf
pushf
add
shlb
mov
mov
mov
dec
inc
je
mov
test
cmp
dec
jecxz
lock
fmull
in
je
sub
xor
insb
push
mov
cmp
dec
xor
dec
and
push
and
add
mov
insl
adc
add
add
imul
jg
in
push
ficompl
lea
dec
stos
test
mov
int
dec
fmulp
cmp
and
inc
xor
adc
jne
jl
jne
mov
cmp
scas
jne
or
fidivs
mov
sbb
pop
add
jmp
dec
ror
mov
fsubr
inc
mov
push
jno
leave
jecxz
adc
mov
test
inc
pushf
pop
mov
or
dec
push
or
and
cmp
mov
in
pop
mov
or
add
and
mov
add
scas
mov
ret
push
dec
mov
cld
add
push
nop
adc
add
jmp
les
or
xchg
or
push
fldl
sbb
xchg
xchg
adc
or
pop
inc
pop
sub
imul
add
or
cltd
inc
sbb
int3
or
lods
adc
adc
pop
xchg
into
mov
cmpsb
dec
cmp
sub
or
jl
cwtl
cli
push
int3
test
mov
push
cli
test
sub
fidivrl
fs
add
rclb
scas
push
je
and
and
and
cmp
sahf
shlb
xor
rolb
movb
sti
cltd
pop
je
rcrb
dec
adc
or
es
daa
add
add
mov
xchg
sbb
adc
pop
dec
xchg
test
mov
xor
cli
clc
adc
cmc
cld
xor
je
loope
xchg
hlt
or
outsb
js
cmp
je
pushf
and
stos
adc
sbb
shrl
jnp
inc
dec
adc
js
push
les
das
je
test
in
cmp
call
xchg
arpl
mov
pop
xchg
test
and
and
inc
shrb
sbb
jmp
das
and
cmp
aad
cli
lcall
sarl
mov
pop
jmp
mov
cmp
add
cmp
cmp
pop
inc
and
hlt
add
pushl
jne
sbb
sbb
andb
jo
mov
aaa
cmp
add
sarl
daa
mov
das
inc
sub
movsb
shll
dec
push
fisttpl
cmp
adc
xor
in
sub
mov
sbb
add
lret
mov
scas
mov
mov
imull
lret
add
dec
or
arpl
cmp
sub
movswl
inc
fiadds
cmpl
and
mov
jp
lods
std
shl
xlat
jmp
cmpl
mov
fnsave
testl
adc
dec
push
and
cwtl
pop
mov
or
inc
inc
fmull
fmull
mov
cltd
jne
pop
or
sub
dec
stos
loope
mov
mov
adc
lret
in
lds
repz
dec
addr16
outsl
sbb
hlt
push
mov
mov
jae
mov
movsl
aas
cmpb
or
jae
mov
les
loope
movl
inc
sbb
push
and
rcrl
dec
jae
jmp
arpl
addb
xor
push
rolb
push
jl
sbb
push
mov
lea
cmp
xchg
aaa
and
ret
je
add
lret
lods
add
pop
dec
xor
mov
or
pop
movsl
pop
hlt
or
adc
inc
rdtsc
push
push
dec
inc
mov
sbbb
jmp
lahf
push
pop
dec
jae
adc
in
lock
divl
push
push
push
jnp
enter
adc
imul
fxch
push
loop
stos
std
dec
sub
mov
orb
test
rol
dec
or
imul
or
adc
call
arpl
or
shll
movsl
xchg
out
sbb
jne
test
outsl
mov
ret
lea
sub
sbb
pop
and
fildl
test
jo
or
es
push
inc
mov
ss
add
or
cli
fiaddl
push
jg
ja
cmpb
loop
mov
dec
push
jae
mov
vandps
push
arpl
fwait
and
cmpb
sub
pop
fbstp
cmp
add
adc
add
cmp
aad
cwtl
add
jns
test
cmp
jbe
pop
inc
jmp
flds
je
int3
das
out
add
jg
stc
mov
lret
mov
xor
lcall
xorl
mov
aaa
imul
jb
or
cmp
fcoml
inc
adc
dec
or
add
fsubl
ret
adc
jge
jb
rolb
push
hlt
lock
push
aam
or
hlt
jg
lock
sub
push
lock
fcomip
lock
sbb
loopne
cmp
dec
or
adc
repnz
add
ljmp
jno
sub
mov
sub
dec
mov
push
add
inc
rcrb
pop
loop
sbb
gs
jo
mov
dec
push
adc
dec
fiadds
mov
or
out
push
dec
lds
jle
push
push
mov
arpl
push
test
mov
jle
shll
in
inc
xor
and
add
sbb
mov
out
fisttps
adc
aad
adc
lea
and
adc
in
dec
inc
cwtl
int3
push
push
sub
lods
cld
xor
mov
xchg
mov
in
jbe
movl
mov
lcall
mov
inc
lea
mov
jbe
pop
in
jp
cmp
aad
scas
mov
inc
jge
ja
push
dec
cwtl
pop
lods
mov
stos
jecxz
outsb
hlt
jge
jl
push
scas
aam
dec
addl
pop
sbb
mov
push
test
and
inc
daa
mov
or
push
add
cmpl
xor
xchg
notb
add
and
adc
sub
mov
rcrl
lret
rorb
fs
fcmovnu
cmp
imul
lahf
mov
and
and
rcrl
enter
sbbb
push
lret
adc
inc
xchg
mov
lds
movl
pop
adc
test
sbb
mov
push
cmp
inc
cmp
adc
push
jle
shlb
jbe
add
ret
jne
sub
mov
push
inc
push
cs
jge
sub
adc
mov
outsl
push
xchg
inc
mov
dec
mov
imul
mov
testb
mov
cmp
jmp
enter
es
or
push
and
jo
sub
test
fimull
das
fistpl
sti
push
mov
xchg
stc
lock
lahf
mov
sti
sbb
adc
lea
test
mov
sahf
out
add
jae
imul
insb
sahf
out
push
jo
fbld
push
jo
fsubrs
cs
add
and
inc
pusha
fs
iret
push
mov
adc
sbb
fcompl
leave
push
sahf
mov
jg
cwtl
xchg
cld
filds
fmuls
adc
inc
fsubrs
dec
rorl
lock
fadd
adc
mov
clc
lock
lock
xor
aam
scas
jns
cmp
cld
and
mov
adc
mov
in
xor
movsl
imul
in
jo
lcall
call
mov
gs
adc
or
les
imul
dec
enter
pop
fcmovbe
out
int3
flds
gs
sbb
xor
ror
cmpsb
mov
pop
or
jl
in
in
call
int
cld
sbb
inc
fwait
inc
movsl
fnstsw
or
pop
sub
cs
mov
inc
adc
call
dec
imul
andb
push
or
aam
sub
sub
or
lretw
xor
jne
pop
sbb
imul
sub
adc
arpl
mov
test
jl
or
mov
arpl
and
adc
rclb
xchg
and
test
outsb
jmp
push
adc
and
push
and
add
mov
cmp
pop
push
sbb
in
add
sub
adc
aaa
cmp
sub
mov
mov
mov
and
inc
add
rorb
ljmp
call
inc
repz
aas
pop
sub
aam
mov
jne
daa
rolb
aad
bound
or
sbb
dec
push
add
push
xchg
in
jp
repz
gs
pop
xor
xor
repz
push
dec
pusha
inc
cmpsb
dec
inc
repz
cli
scas
lods
mov
scas
or
roll
pusha
pop
and
mov
imulb
rorb
loopne
dec
pop
push
stos
sbb
sbb
pop
and
pop
loop
repnz
shl
pop
inc
cmpsl
and
sahf
add
ds
in
imul
cmp
imul
ret
les
inc
sbb
lock
lea
sub
cmp
ss
mov
loopne
into
in
js
mov
mov
rorl
aam
pop
hlt
lahf
jns
fsubrl
les
arpl
sub
add
loopne
jge
fldcw
fdiv
mov
sub
push
es
imul
arpl
sti
shl
sub
cmp
add
sub
adc
add
data16
roll
into
add
xor
push
pop
xor
add
sub
sbb
movb
push
iret
fucomi
mov
push
sub
dec
xchg
fisubs
das
sarb
push
sub
dec
adc
sub
loop
sti
decl
dec
popa
jbe
jl,pt
std
inc
push
push
les
sbb
ficoms
lret
push
dec
subps
push
arpl
lcall
cmp
ss
cli
shlb
add
enter
outsl
or
add
add
test
pop
hlt
and
dec
pop
mov
addr16
fld1
ficoms
push
lds
xchg
mov
sbb
fdivrs
stos
mov
dec
inc
fldenv
dec
add
insb
and
or
add
dec
adc
adc
and
imul
shl
imul
sub
in
mov
es
fisubrs
mov
xlat
sub
test
add
loop
or
xchg
pushf
enter
mov
add
push
cmp
xor
cmp
ljmp
pop
jmp
jl,pn
fchs
les
dec
gs
inc
in
fsubr
jmp
mov
or
xor
repz
xor
push
sub
dec
repz
and
adc
aam
cmp
movsl
out
add
pusha
push
roll
gs
nop
aaa
cmp
jge
into
inc
and
sub
in
icebp
shl
or
loop
mov
or
add
neg
lea
shl
testl
mov
pusha
jnp
push
jne
lcall
add
mov
lock
sbb
adc
mov
inc
and
mull
lea
add
les
mov
jne
mov
mov
pusha
adc
add
pmaxub
neg
and
jo
jnp
jne
ret
dec
push
in
int
sbb
shlb
jl
js
push
or
push
ja
cld
add
lock
ja
or
or
xor
sub
fists
clc
add
add
sub
adc
jns
lcall
pushl
jbe
xor
in
aas
cmp
xor
push
adc
xor
loop
sar
sbb
mov
mov
add
add
push
pop
pushf
aas
roll
mov
mov
lret
sysenter
push
mov
push
lds
sub
adc
push
out
and
push
adc
popa
sub
lcall
sub
pop
cmc
add
push
inc
cmpsb
cmp
pop
fxch
lret
imul
pop
lret
pop
sti
sbbl
adc
dec
shrb
sbb
mov
ds
push
xor
loopne
push
dec
add
jmp
js
cmp
test
add
test
push
mov
imul
dec
lcall
add
push
test
dec
das
lods
popa
jp
mov
jp
dec
cmp
xor
add
jnp
stos
add
jns
or
sarl
pop
push
and
lcall
test
sbb
sbb
pushf
aam
sub
mov
sbb
jo
dec
lock
xchg
pushf
cmpsb
sahf
imul
push
out
push
scas
insb
and
mov
sahf
inc
fidivs
pop
pusha
and
xlat
call
and
add
or
xchg
ficomps
repnz
push
sub
sub
enter
push
scas
inc
and
clc
dec
push
sub
dec
dec
jb
dec
xchg
jle
adc
push
mov
adc
add
pop
repz
sbb
pop
add
loopne
sub
sbb
imul
lock
sarb
mov
adc
into
addl
push
aaa
add
inc
movsb
push
outsl
nop
push
dec
shlb
jnp
sbb
xor
stos
or
sbb
sarb
loopne
rorl
clc
cmpsl
mov
cmp
jb
mov
rcrb
xchg
nop
nop
daa
sbb
enter
int
leave
cmp
mov
add
and
test
out
test
add
mov
inc
pop
xor
sbb
notb
movsl
sbb
or
cmp
movsl
mov
sbb
out
addb
enter
sbb
add
lods
xor
push
mov
sbb
pop
dec
mov
xchg
fcoml
mov
shlb
call
cmp
add
jno
fcos
jbe
outsl
dec
movzbl
shl
inc
js
mov
adc
call
push
and
popa
pop
dec
stos
jns
rorb
nop
inc
sub
mov
ret
add
fs
sbb
lods
or
jo
in
and
inc
add
insb
xchg
mov
pusha
loopne
push
int3
or
and
add
rorb
mov
pop
stos
rcr
mov
ljmp
jmp
pop
sub
fisttpll
inc
fld
push
mov
pop
sub
mov
aaa
add
adc
sub
rclb
add
jp
lds
inc
iret
mov
popf
sarb
test
pop
mov
dec
sub
or
push
ja
xor
lods
jp
push
adc
in
mov
dec
adc
arpl
pop
xchg
push
stc
rorb
pop
mov
xchg
icebp
dec
push
xor
mov
adc
popf
gs
lods
icebp
call
push
cmp
imul
js
ds
sbb
mov
ja
jg
dec
add
movsb
nop
lret
push
into
inc
pop
jl
lcall
lock
xor
dec
inc
mov
add
add
dec
pop
xor
test
or
push
lods
mov
or
js
sti
or
sbb
adc
adc
mov
in
push
jmp
popl
sub
mov
xor
dec
movhps
andb
xchg
inc
out
leave
add
mov
sbb
xor
cmp
ljmp
nop
nop
dec
adc
sbb
push
ret
mov
sub
xor
or
pusha
cmp
xchg
mov
stos
insl
leave
js
xorb
cmp
mov
lret
add
xor
add
add
mov
and
adc
nop
in
cmp
xorb
and
iret
popa
push
rorb
popa
adc
inc
aam
sub
gs
dec
sar
cmpsl
stc
dec
jecxz
inc
test
idivb
popa
pop
add
lds
push
inc
subl
mov
imul
cmp
push
jne
push
popf
inc
shlb
push
push
jmp
inc
pop
fisttpl
push
add
leave
inc
mov
mov
add
dec
push
jbe
adc
jle
bound
lock
inc
add
cmpsb
adc
sbb
and
cmp
sbb
sbb
mov
and
and
cmp
fs
and
shll
nop
inc
push
sbb
and
inc
push
sbb
sub
ret
or
andl
pop
cltd
add
or
push
ja
adc
fs
add
and
jno
xchg
add
mov
sbb
pushl
scas
sub
inc
add
bound
jl
jne
outsb
insb
or
or
add
add
add
xchg
push
xlat
add
push
sahf
cs
jo
mulb
push
lea
sub
loope
mov
xchg
xor
jbe
or
out
adc
arpl
test
in
fcmovbe
dec
add
fstps
sbb
add
call
inc
adc
pop
or
call
xorb
popa
daa
dec
xchg
pusha
inc
add
add
loopne
jo
add
push
inc
xor
push
cmp
push
xor
mov
lods
loope
jns
sti
ljmp
ret
popf
and
sbbl
xchg
mov
or
dec
pusha
push
adc
cmc
pop
dec
mov
and
sbb
and
sub
dec
add
inc
jmp
mov
add
orl
dec
inc
dec
ror
add
xchg
push
add
jle
lods
mov
movzwl
mov
adc
dec
adc
ljmp
imul
pushf
sahf
out
sbb
sti
mov
lret
jo
std
vpmuludq
fwait
loope
cmpsl
mov
jl
test
push
add
mov
int
inc
cmp
and
adc
cmp
sbb
iret
gs
cmp
repnz
jnp
adc
or
dec
lock
add
add
cwtl
mov
mov
sahf
daa
arpl
es
inc
add
inc
mov
inc
add
mov
mov
mov
ja
dec
mov
jge
dec
cli
mov
add
push
jb
jns
test
adc
inc
sahf
dec
jnp
adc
dec
es
add
aas
sar
adc
aaa
faddl
xchg
xchg
push
push
mov
xchg
mov
mov
xor
ret
add
data16
and
push
mov
aaa
cs
loope
enter
mov
iret
testb
rol
pop
shlb
xchg
sub
inc
movzwl
sbb
mov
mov
repz
inc
scas
inc
lock
out
iret
in
mov
call
pusha
fwait
je
push
fwait
push
or
inc
or
xchg
arpl
pop
aas
dec
push
mov
push
fs
lods
mov
sub
inc
cmp
je
test
pop
arpl
in
loop
mov
xchg
out
enter
adc
pop
xchg
add
xchg
adcl
movsb
mov
ret
adc
in
push
xchg
jmp
aad
xor
rcrl
jmp
xor
adc
test
testb
push
pop
xlat
pop
cmp
ja
dec
cli
mov
stc
or
dec
rcrl
int3
test
popf
sbbb
add
add
movsl
jns
mov
bound
jmp
enter
mov
add
or
and
imul
or
xor
movsl
jo
jb
xchg
cld
sbb
sub
fs
sbb
inc
push
cmc
mov
inc
push
dec
sub
mov
sub
push
sbb
pop
mov
pop
xchg
scas
pop
xor
js
mov
roll
pop
call
loope
imul
add
and
int
jl
mov
subb
icebp
imul
xchg
and
mov
mov
xor
inc
pop
pop
sub
mov
repz
loope
inc
mov
jb
dec
rcr
sub
pop
clc
rolb
ljmp
xor
jae
cmp
cmp
mov
or
out
js
aaa
adc
cmp
scas
ljmp
mov
pusha
aaa
movsl
or
fdivrs
cld
aaa
sub
in
test
sub
andl
push
stos
adcl
or
leave
call
push
test
add
sarb
rorl
mov
fcoms
push
gs
jbe
test
lahf
push
adc
adc
sub
je
mov
cmpb
or
dec
pusha
andb
test
mov
push
stos
sbb
shrb
inc
mov
test
fistps
mov
jns
inc
mov
adc
sub
popa
push
aas
nop
cmc
shlb
xor
mov
push
add
sub
cs
das
add
jmp
arpl
arpl
push
sbb
adc
out
pop
ficompl
jne
jbe
push
xor
mov
gs
jae
or
outsb
add
ds
dec
inc
fwait
data16
adc
ret
mov
fstp
and
sbbl
xchg
mov
aad
adc
clc
or
sub
adc
sub
push
mov
push
mov
daa
outsl
int3
jmp
outsl
dec
push
xchg
aad
inc
jecxz
fisubl
cs
sub
xor
call
fiadds
mov
xor
xchg
call
and
xor
sbb
sub
imul
pop
mov
sub
call
and
xor
pop
in
dec
inc
inc
mov
pop
inc
cmp
in
xchg
pop
mulb
dec
test
cmp
adc
pop
cmpsl
scas
cmp
push
add
dec
mov
sub
cmp
lea
incl
or
jne
mov
jnp
pop
lds
jp
push
rcll
sub
shlb
inc
je
jbe
lods
cmc
push
jo
push
pop
imul
ja
test
pop
dec
xor
pushf
and
dec
add
cmp
push
lret
add
mov
rcll
fcoms
xorb
pop
or
imul
repz
dec
jg
sub
sub
pop
aaa
arpl
popf
cmp
aam
adc
in
sti
imul
int
jge
push
push
inc
ret
je
fs
lock
inc
mov
sbbb
xor
jp
ljmp
dec
dec
fldcw
je
inc
movsl
push
cmp
mov
or
pop
out
sbb
out
inc
imul
and
movsl
popf
push
push
nop
test
dec
enter
sub
push
lock
pop
ret
andb
sub
addr16
cmp
sub
cmp
or
inc
nop
add
aad
xchg
dec
test
lahf
pop
push
das
cld
xchg
dec
lds
xchg
subl
jno
mov
inc
xor
mov
xchg
cmp
mov
fnstcw
mov
clc
add
mov
enter
jle
dec
cmc
jmp
and
add
push
stc
dec
daa
fdivrl
xchg
lock
loop
orl
mov
mov
dec
test
dec
popa
addr16
inc
jae
daa
sbb
lret
pop
add
mov
imul
cmpsl
mov
pop
jne
je
inc
shll
jo
cmp
push
dec
push
sub
cmp
sub
mov
cmpl
subl
add
xor
mov
xchg
cwtl
add
inc
push
mov
add
rorb
scas
push
shlb
inc
sahf
mov
dec
xchg
pop
cld
xchg
jns
cmpsl
cmpsl
rcrb
fcmovnb
pop
adc
push
sub
mov
add
adc
sub
add
mov
fcompl
xor
int
fidivl
sub
xchg
iret
push
adc
push
dec
sbb
pop
sbb
xor
sbb
out
pop
dec
je
add
cs
add
ds
js
popf
lock
adc
push
dec
cltd
in
pusha
sbb
into
shlb
lods
dec
inc
sbb
sbb
or
add
out
add
rclb
push
movsl
adc
cmp
repnz
and
hlt
or
lock
jp
pusha
mov
add
and
adc
and
rol
and
repnz
dec
cmc
pop
lret
or
xor
es
test
sub
sub
push
movsl
mov
pop
or
push
jae
mov
xor
jae
mov
pop
je
movsl
mov
mov
sbbl
mov
jl
clc
out
adc
and
inc
andl
imul
pop
mov
jl
dec
mov
mov
ja
pusha
shlb
call
imul
inc
jmp
and
sub
rcl
lahf
dec
jecxz
shrb
cld
aam
dec
dec
add
jl
sub
or
icebp
inc
test
mov
sub
icebp
dec
sbb
mov
xor
add
fistpl
push
add
daa
xor
adc
adc
mov
cmpsl
insb
push
and
mov
push
icebp
xchg
or
loopne
xchg
xchg
fisttpl
pop
or
and
test
mov
add
jle
mov
inc
sub
mov
lret
cmp
sbb
movb
xor
xor
and
daa
bound
test
cmp
ror
push
sub
sbb
imull
mov
dec
pop
and
mov
fwait
or
cmp
sub
es
inc
jecxz
loopne
fwait
adc
sub
js
loopne
sbb
xor
xor
xchg
test
and
popa
push
add
cmp
mov
hlt
enter
adc
cmp
jo
push
mov
mov
jno
xor
mov
ja
or
mov
in
mov
jb
sarb
and
notb
push
imul
loop
xor
shlb
xor
jbe
cmp
push
push
or
dec
or
add
push
push
das
inc
js
mov
loope
jl
movb
push
inc
lret
push
cmp
or
cmc
aam
or
pop
jmp
dec
pop
lcall
movsl
insl
movsb
fs
fs
mov
mov
add
xor
loopne
outsb
add
lods
and
ret
mov
notl
bound
sar
sbb
sbb
adc
lods
add
push
sub
add
push
popa
inc
into
inc
xchg
ret
clc
add
jo
roll
outsb
xor
sti
dec
or
sbb
pusha
popa
lahf
dec
adc
test
mov
adc
xor
out
xlat
daa
sbb
pop
dec
add
or
push
inc
rclb
cmp
pop
or
push
mov
mov
sarb
push
adc
cmp
xor
cmovnp
lock
pop
cwtl
mov
mov
test
push
imul
leave
and
das
mov
call
popf
inc
ds
add
aas
xchg
mov
xor
add
inc
negl
les
andl
rolb
roll
rolb
aam
setbe
xchg
adc
dec
clc
in
pop
sahf
popa
loop
jl
cmp
mov
inc
clc
incl
stc
dec
pop
and
iret
repz
aad
cmp
mov
add
daa
sbb
add
lods
jp
or
ja
add
push
or
push
cmp
fisubrs
divl
and
add
jnp
shll
push
rolb
cli
cwtl
xor
fwait
mov
and
push
add
aaa
pop
push
dec
cltd
mov
or
mov
sti
xchg
dec
out
push
iret
xor
es
add
test
push
jb
andl
pop
jl
add
mov
add
pusha
and
add
add
mov
dec
or
adc
add
sbb
and
add
rclb
push
sbb
add
jns
xor
movsb
pop
mov
dec
inc
and
add
shlb
cld
test
loopne
adc
and
sbb
or
push
jb
adc
mov
xchg
sbb
push
into
mov
inc
add
mov
or
inc
cmp
inc
fimull
xchg
push
lret
xchg
fmull
dec
cs
cwtl
cmp
and
out
and
data16
cmp
jle
sbbb
jge
inc
adc
bound
jg
dec
fmul
or
jbe
lock
mov
add
or
aaa
jo
mov
jbe
orb
push
pusha
inc
nop
fsubs
icebp
addb
and
lock
cmpl
cmp
push
adc
loop
adc
daa
add
add
inc
cmp
outsl
inc
mov
add
jecxz
sbb
cli
mov
add
iret
add
or
and
rclb
jp
jecxz
cmp
mov
or
and
sub
mov
mov
mov
scas
mov
xor
lea
jne
sahf
or
cmp
xor
fidivl
out
cmp
rclb
frstor
sbb
xlat
std
scas
and
sahf
outsl
xchg
daa
sub
aas
add
xchg
dec
add
xor
xchg
ss
add
adc
mov
in
fimuls
sub
xor
and
xorl
inc
push
sub
sub
inc
aam
dec
pop
and
dec
mov
pop
adc
jnp
sub
bound
faddl
pusha
sub
xchg
ret
jl
cs
and
cmpsl
sub
sbb
ljmp
push
xchg
and
and
inc
dec
rcr
and
test
pop
jp
fists
mov
push
data16
adc
sbb
lods
movsb
aam
inc
xlat
orps
mov
repz
cwtl
les
and
mov
adc
adc
adc
shl
pop
lret
and
or
push
dec
xchg
xchg
xchg
or
adc
dec
leave
je
xor
add
push
xchg
js
shlb
xchg
push
push
pop
bound
pop
lret
lock
dec
xor
nop
lods
and
rolb
je
and
ds
mov
mov
ret
xchg
stc
jmp
mov
or
xor
loop
rcrb
dec
rcr
and
cmpsl
mov
daa
cmp
dec
and
je
dec
loop
je
in
pop
mov
imul
cmp
adc
cmpsl
push
cmp
mov
jecxz
scas
inc
cmpsb
sbb
ret
sbb
inc
cmp
push
adc
sub
inc
sub
adc
jne
xchg
mov
pop
mov
jne
fstps
or
sbb
and
mov
cmp
mov
or
test
pop
and
and
inc
addl
in
addl
sbbl
add
loope
packuswb
rcrb
sbb
mov
sub
enter
das
or
add
outsl
mov
pop
pop
sub
push
enter
jle
cmp
mov
sub
or
in
and
iret
lcall
jg
les
leave
es
xchg
lods
sbb
push
sbbl
scas
sbb
adc
mov
insb
lock
int3
andb
push
sbb
xchg
sbb
lret
add
mov
in
ss
daa
sar
or
sub
sbb
cwtl
hlt
jecxz
inc
or
xchg
xor
cs
mov
jae
mov
lds
test
movsb
pop
inc
jbe
inc
xor
inc
sbb
mov
cmp
mov
test
insl
sbb
adc
addl
sarb
mov
popf
push
loop
fimuls
mov
xor
mov
add
push
pop
ljmp
sbb
xor
or
dec
add
nop
fisubs
or
subl
outsl
rorl
xchg
sbb
xor
icebp
inc
cmpl
sahf
movsb
les
in
mov
adc
pop
jo
add
cmp
push
adc
mov
sbbb
adc
jmp
inc
cs
mov
outsl
mov
adc
pop
dec
or
cmpl
xchg
cltd
nop
popl
frstor
dec
and
mov
pop
xchg
les
adc
push
scas
xor
xor
xor
dec
sbb
ret
icebp
sub
and
push
xor
push
mov
shlb
cmp
inc
imul
jae
pop
push
pop
fwait
enter
or
mov
loopne
es
xor
cmp
jo
push
movsb
fimull
xor
and
lret
mov
shr
lea
aaa
ds
sub
inc
push
mov
insb
test
and
cmp
adc
lods
pop
rcl
jecxz
mov
pop
shlb
push
je
stos
jl
pop
inc
fidivl
xor
cmp
jecxz
lea
test
jns,pn
out
das
loopne
pop
shlb
jl
mov
dec
das
xchg
fistl
ljmp
rclb
xchg
aam
sbb
mov
adc
push
mov
fs
outsl
outsl
mov
bound
repz
inc
push
dec
mov
adc
jb
and
add
icebp
sbb
or
loopne
pusha
leave
mov
mov
shll
jg
inc
gs
iret
pop
das
adc
cmp
fcomps
in
ja
mov
int3
mov
fadds
ja
mov
adc
adc
ljmp
loopne
outsl
es
xchg
in
jmp
mov
sub
jle
ss
add
dec
nop
inc
ret
jge
fidivrs
adc
lds
xchg
ret
insl
push
mov
insl
pop
pop
in
jmp
aad
ret
inc
ficoml
mov
nop
inc
setle
ret
or
jmp
shll
int
je
ret
or
mov
adc
dec
xor
push
jl
ss
xor
and
sbb
cmp
popf
xchg
xchg
push
adc
into
cmc
pop
pop
mov
nop
or
popa
adc
mov
sub
inc
clc
mov
loopne
into
ja
cmpl
shll
add
sarb
fnsave
dec
push
or
mov
xchg
es
fcomp
mov
shl
lds
and
or
imul
cmp
or
or
sub
loopne
inc
mov
das
cmp
add
adc
imul
mull
sbb
test
std
sbb
and
imul
pop
rclb
sysenter
xor
push
lcall
orb
lret
and
cmpl
in
in
rcrl
call
sbb
mov
or
in
call
repnz
arpl
sbb
or
cmp
sti
in
adc
add
scas
xchg
popa
outsb
loop
mov
add
adc
or
mov
mov
and
jmp
or
sbb
je
movl
les
movl
add
add
cmp
cli
adc
cmp
loop
mov
cwtl
push
lea
or
dec
mov
out
dec
in
out
jmp
cwtl
adc
inc
cwtl
test
push
int
or
inc
sbb
aas
xchg
sub
push
mov
push
js
incl
sti
xor
sbb
pop
xlat
ret
sbb
loopne
adc
in
fwait
imull
or
cmp
jg
fists
rcpps
test
xor
jecxz
sub
adc
push
and
ror
loopne
sub
jl
or
xchg
test
pop
jl
and
inc
fbld
std
or
adc
pop
sbb
sbb
pop
adc
push
rorb
pop
jle
fmuls
xor
or
je
shlb
sbbb
sbb
jge
jge
sbb
cli
in
or
out
dec
add
cmp
jge
xlat
daa
and
imul
or
push
push
push
cmp
jl
aaa
and
sub
sbb
pop
mov
fcomps
mov
lods
add
inc
mov
mov
jge
sbbb
adc
jne
ljmp
inc
push
xor
int3
cmp
and
push
sbb
and
enter
into
push
into
fistpll
lcall
sbb
push
sub
ret
je
sub
or
sub
sbb
add
push
dec
adc
movl
insl
adc
mov
jns
and
xchg
mov
popa
and
loop
aam
mov
cmp
loopne
mov
out
add
mov
dec
sbb
jl
shrl
inc
arpl
push
sbb
sbb
xorb
or
mov
pop
jmp
cmp
cmpsb
pop
outsl
dec
and
out
add
adc
jne
push
inc
js
inc
dec
pop
lret
xchg
cmp
addr16
sbb
jecxz
into
mov
push
icebp
test
repz
mov
pushf
mov
or
push
or
or
cmp
inc
adc
adc
add
jns
add
add
enter
add
or
or
hlt
add
adc
cmpsb
and
shl
inc
pop
lret
adc
xor
and
add
enter
mov
pushw
mov
inc
fdivs
or
out
inc
push
fcmovbe
mov
adc
dec
in
mov
rorb
in
pop
push
cmpsl
adc
fs
adcl
movsl
or
test
pusha
ret
push
or
sarb
stc
and
into
push
pop
in
push
dec
dec
sub
jmp
rcrl
or
call
fists
mov
push
and
testl
outsb
sbb
incl
and
pop
jnp
rorl
loopne
or
movsl
pop
adc
shl
adc
xor
dec
sbb
dec
and
or
inc
cmc
xchg
sahf
arpl
or
and
jo
jbe
push
clc
rorl
mov
sahf
xchg
xor
dec
jo
lods
sbb
xor
je
mov
roll
mov
sbb
xchg
inc
fsubrs
xorb
sbb
mov
pop
xor
jae
int
xor
adc
adc
jns
js
nop
or
arpl
test
test
pop
sub
or
xor
stos
xor
and
xor
sub
or
sub
dec
mov
outsl
cwtl
push
sbb
mov
mov
lea
movsb
add
into
xchg
xchg
fnstsw
in
and
adc
mov
xor
mov
sbb
jbe
rol
aas
xchg
jmp
inc
rolb
mov
aaa
add
adc
dec
add
hlt
or
push
push
add
adc
dec
jne
inc
inc
jmp
mov
xor
or
jmp
andl
sbb
dec
dec
cmpb
add
fldl2e
or
xchg
cmp
xor
cvtdq2ps
fildl
xor
xchg
fsubrl
fsubl
in
cltd
xor
add
and
jmp
xor
inc
and
cmp
lock
mov
and
cmp
shlb
push
cmpb
cmpsl
dec
and
shl
cwtl
xor
cmp
imul
pop
mov
sbb
out
lods
pusha
aaa
lea
push
xchg
xor
pop
sub
inc
xor
bound
jecxz
mov
sbb
or
jo
dec
xor
mov
addb
and
loop
shlb
test
fisttps
xchg
push
sbb
mov
or
mov
fwait
inc
sub
data16
adc
push
jp
cmp
add
rolb
lods
xorb
aaa
gs
push
insb
add
mov
cli
rcrb
jo
movsl
negl
sub
push
fisttps
xor
jl
jne
push
lcall
mov
movsb
in
push
pop
push
ss
test
or
and
mov
fcoms
inc
or
jmp
push
add
pop
and
pusha
add
push
pushf
and
mov
add
ret
or
sbb
fnsave
adc
push
daa
or
push
in
enter
jmp
and
push
inc
mov
pop
xor
scas
adc
rorb
jg
add
adc
subl
sti
dec
lock
lock
push
sub
xor
std
sub
adc
enter
fadds
push
das
lea
in
cwtl
clc
aam
jmp
jmp
aaa
add
neg
push
faddl
xor
loop
test
enter
cmp
and
sub
inc
in
cmp
jg
xor
outsb
push
or
sarl
lea
xchg
add
jbe
xor
adc
in
lret
data16
incl
cmp
shll
fcmovnu
mov
pop
ret
mov
loopne
test
imul
jmp
jae
mov
lahf
mov
cmp
call
xchg
jnp
dec
sbb
xor
add
enter
pop
push
ficoml
inc
sbb
xlat
lret
popf
cltd
leave
test
cwtl
call
push
inc
or
mov
xchg
mov
add
mov
push
scas
pop
and
mov
decl
push
scas
mov
push
fstl
mov
adc
pop
adc
imull
popf
inc
lcall
popa
jle
inc
ret
inc
cwtl
or
lock
inc
movsl
pusha
std
movsb
add
inc
jnp
mov
incb
cld
sbb
mov
scas
in
je
jo
mov
aaa
pop
or
shll
js
mov
xchg
orb
or
imul
pop
dec
das
pop
adc
push
add
xchg
sub
mov
adc
mov
pop
xchg
pusha
stos
mov
sub
add
and
clc
pop
sbb
jo
lods
sarb
stos
or
or
push
jae
and
adc
fs
xor
sahf
push
adc
or
mov
cmp
cwtl
xchg
xchg
iret
enter
hlt
add
or
and
lods
push
push
lock
mov
dec
adc
push
add
push
xchg
and
in
sub
outsl
cmp
fs
and
jmp
or
sbb
vandps
invd
and
in
add
lock
adc
push
ja
xchg
dec
add
push
stos
hlt
or
xor
jmp
or
xor
inc
inc
mov
imull
lahf
pop
adcl
add
jle
jne
shl
push
jb
cmp
fisttps
jge
arpl
sbb
sub
sbb
std
xor
shll
or
or
insb
and
fstl
ficompl
and
adc
icebp
dec
or
lods
xchg
insb
sub
rcr
pop
and
jmp
rolb
add
and
les
out
jmp
sbb
jle
out
aaa
out
inc
in
sub
mov
imul
adc
stc
cmp
enter
push
mov
jo
pushf
dec
imull
call
sub
js
and
cmp
adc
xor
sbb
pop
dec
xlat
jecxz
idivl
and
mov
sbb
push
lahf
lret
push
pop
sbb
adc
jo
or
cmp
inc
jbe
je
sub
ds
dec
repz
and
inc
or
push
data16
lea
xchg
mov
clc
pop
or
je
or
test
add
loop
or
xor
and
push
sbb
push
inc
push
add
sub
and
xor
jno
jbe
add
sub
cs
jbe
imul
sbb
imul
inc
dec
pop
jae
sbb
int3
pusha
mov
mov
sbb
repz
mov
inc
xor
dec
aas
mov
cmp
inc
sub
cmp
and
inc
fisttps
push
and
mov
ret
popf
push
xchg
setae
or
mov
out
mov
adc
jb
and
in
jge
sbb
pop
mov
adcb
push
mov
mov
add
sub
adc
sub
call
add
adc
test
leave
xor
addl
not
add
dec
and
aaa
js
std
inc
inc
jmp
and
push
add
add
jno
add
jle
push
sub
push
ds
cmp
data16
push
shlb
inc
fadds
mov
lock
aam
das
call
inc
add
sub
les
cmpsl
addl
sbb
cmp
jecxz
xchg
test
in
sbb
xorb
iret
push
xor
int
hlt
add
add
into
xchg
repnz
in
jb
leave
inc
lock
in
gs
or
jle
adc
add
or
pop
hlt
add
cmp
sbb
add
xchg
jl
mov
add
dec
dec
add
mov
incl
test
xlat
add
loop
mov
adc
dec
scas
xchg
inc
enter
addb
mov
pop
inc
fldl
push
aad
rcl
dec
lret
adc
mov
dec
add
pusha
mov
sbb
roll
ss
cltd
or
cmp
mov
sub
aas
push
cmp
xchg
sub
push
adc
test
or
cmp
lret
or
loop
push
inc
xchg
mov
das
sbb
and
and
int
lret
cli
push
or
stos
xor
int3
pandn
mov
adc
rcll
and
mov
dec
and
dec
ds
push
or
in
jb
adc
mov
cld
jno
loop
xor
adc
sbb
jp
sbb
pop
adc
mov
sbb
out
shlb
sbb
loopne
data16
addr16
daa
add
xor
sbb
pop
mov
enter
inc
xor
fisttps
leave
and
push
mov
test
aas
adc
push
sbb
sbb
xchg
mov
dec
inc
mov
loopne
cli
adc
dec
imul
js
mov
and
es
ret
pop
dec
inc
push
call
xchg
inc
adcl
xor
mov
inc
mov
mov
mov
shl
sbb
test
jns
clc
ss
push
in
int
sbb
jb
mov
cmp
insb
popf
sbb
or
pop
enter
or
mov
pop
repnz
sbb
or
cmpsb
mov
push
sub
fcom
roll
push
adc
inc
xchg
test
and
repz
push
mov
cmpl
push
sbb
lret
iret
add
sti
orb
mov
push
sti
sbb
mov
fwait
loopne
mov
and
fmuls
sub
leave
inc
sub
push
stc
dec
bound
push
cmpsb
and
add
xor
subb
jo
es
mov
inc
mov
icebp
sbb
push
lret
insb
int3
nop
std
xchg
lock
hlt
jmp
int3
xchg
pop
stc
ds
mov
cld
cmp
jge
lods
shlb
les
and
inc
push
sti
add
mov
cld
frstor
idivb
lret
push
or
scas
push
dec
bound
testl
or
mov
nop
add
or
or
jl
insl
xchg
add
test
idivl
outsl
push
int3
add
push
xchg
adc
add
add
or
imul
mov
xor
inc
jle
xchg
daa
js
sub
add
es
or
xor
rorl
cltd
add
nop
mov
sub
in
dec
push
sub
cltd
add
inc
mov
add
pop
and
add
push
sbb
into
inc
and
movsl
sub
jmp
or
sbb
adc
fmuls
jle
dec
mov
stos
cld
cld
into
pop
js
movsl
orl
sbb
inc
es
lock
jl,pt
xchg
cmp
sbb
call
or
adc
lsl
mov
xchg
ret
pop
add
flds
lods
jb
or
dec
ret
rcr
idivb
filds
outsb
call
or
mov
dec
xchg
or
loopne
enter
gs
jae
scas
sub
push
adc
cvttps2pi
jle
das
rorl
cltd
call
and
fisubl
pop
push
cmpb
sti
push
in
push
enter
loopne
aam
push
adc
and
aas
out
or
cmp
or
mov
dec
int3
sub
imul
mov
out
and
and
jae
or
mov
sbb
sbb
insl
insl
insb
call
fdivr
jle
inc
push
jge
movzbl
add
inc
inc
push
jl
inc
dec
jl
inc
mov
adc
pushf
rolb
in
add
shlb
mov
mov
jb
cmp
add
stos
add
inc
or
pop
adcb
js
outsb
sub
xor
outsb
clc
push
sub
mov
xchg
xor
xchg
jo
sub
popf
xchg
mov
sbb
push
mov
xor
leave
mov
ud1
sbb
pop
mov
add
popf
sub
hlt
mov
nop
outsl
jne,pn
pop
sbb
cmp
call
movsl
or
je
loop
enter
cmp
or
jae
hlt
js
fildl
adc
sub
fistps
mov
es
cmp
push
sbb
or
lock
clc
jg
int
xor
jg
daa
lock
cmpsb
mov
inc
call
or
add
orb
cwtl
or
hlt
jae
in
fiaddl
cmp
jp
mov
add
fiadds
jo
ss
jb
inc
or
inc
xchg
sub
cmpsl
mov
dec
icebp
lea
push
pop
roll
lock
push
adc
pop
cmpsl
and
jnp
das
nop
pop
add
xlat
or
lea
inc
xchg
adcb
aam
out
aam
adc
adcb
pop
xor
pop
jnp
mov
jecxz
pop
add
es
cmp
movb
adc
cld
xor
xor
outsb
xlat
and
or
or
leave
xchg
popa
cmp
adc
data16
addr16
in
int
mov
movb
clc
fidivs
call
faddl
pop
loopne
and
sbb
testl
inc
popa
cmpsb
xchg
stc
test
or
push
or
add
adc
call
incl
loopne
lcall
dec
dec
xchg
dec
add
dec
faddp
cli
mov
inc
add
pushf
sbb
addr16
push
ficomps
push
decl
rcl
repnz
or
adc
push
cmp
inc
or
loopne
inc
dec
sub
dec
push
loopne
cmp
ret
dec
rcll
aam
dec
clc
shl
shl
jns
hlt
adc
sbb
lret
sub
or
mov
sarb
int3
shlb
mov
stos
cs
cld
inc
push
idivb
adc
data16
adcl
mov
outsl
sbb
add
in
add
icebp
pop
mov
xor
xor
repz
add
out
or
xlat
rorl
mov
pop
and
mov
stc
clc
add
pop
dec
dec
xor
ljmp
adc
fcomp
popf
insb
enter
mov
bound
xor
hlt
mov
inc
xchg
repnz
ja
cmpsb
sub
insb
pop
lcall
jb
loop
imul
js
jae
push
icebp
dec
loop
fwait
and
adc
adc
in
out
test
dec
mov
inc
cmp
xchg
pusha
add
add
cs
repnz
push
mov
ljmp
xor
and
cmp
insb
pop
fimull
sub
adc
adc
or
addr16
adc
inc
jl
rolb
push
add
jbe
gs
add
shll
adc
sub
jns
aaa
mov
call
mov
sbb
or
fadds
ds
inc
popa
cmpsb
add
imul
xlat
cmp
sbb
jp
inc
adc
lods
pop
clc
push
stos
pop
jle
add
xor
sarl
or
mov
test
adc
cmp
cwtl
push
rcrb
es
dec
cld
pop
sbb
or
xchg
cltd
inc
push
rolb
push
pop
addr16
mov
adc
sti
jbe
or
lcall
stos
xchg
ljmp
loope
pushf
mov
add
inc
add
add
sub
fwait
sub
and
inc
jl
ret
mov
sbb
and
pop
push
dec
mov
movsb
dec
repz
movb
add
sub
pop
out
xchg
es
sbb
push
xor
lea
cmp
mov
fistpl
sbb
fmull
cld
fldl
in
fcomp
cmp
inc
test
cmp
sbb
inc
or
or
inc
inc
iret
les
or
in
and
or
stos
xor
jo
adc
aaa
test
or
cmpb
pop
jne
fsubrl
stc
andb
mov
adcb
push
jns
in
push
leave
loopne
sbb
cmp
pusha
jo
adc
push
enter
inc
inc
cmp
dec
xor
mov
inc
adc
pop
push
shl
or
lods
lcall
in
push
cld
push
test
cmpsl
enter
inc
fs
ja
xor
xor
xchg
pop
lock
testl
jg
push
sbb
inc
ret
pusha
shlb
xor
stos
and
sbb
adc
add
rcll
sbb
and
aaa
jo
push
and
rcrb
enter
and
and
push
mov
enter
sbb
and
loopne
and
inc
shrb
loopne
fsubl
inc
xor
fcomp
aam
inc
xor
and
ror
clc
sub
das
test
call
enter
and
add
pop
das
outsl
stc
jnp
sbb
dec
sub
lock
inc
add
addb
dec
mov
mov
adc
sbb
mov
ret
adc
jb
int
sarb
call
aam
je
pop
mov
mov
aaa
rorb
mov
sbb
dec
jno
loopne
cmpsb
std
pop
inc
adc
pop
pop
cmp
sbb
subb
add
movsb
jno
or
and
fwait
out
adc
fbstp
rcl
jnp
push
rorb
sub
mov
aas
aaa
lock
in
in
fistpll
in
aas
lock
adc
jmp
xor
shr
and
add
or
add
xor
leave
xchg
add
call
aam
outsl
loop
rcpps
lea
add
cmp
cwtl
fwait
adc
sub
loope
sub
scas
sbb
cmp
ljmp
cmp
fstps
std
test
push
add
and
sbb
inc
xor
mov
adc
shrb
fadd
push
mov
xchg
or
push
mov
cmp
adc
pop
das
leave
popl
cwtl
push
sub
movsb
fnstsw
mov
cmp
adc
xchg
les
inc
pop
shlb
mov
ljmp
adc
adc
cmpsl
or
push
push
stos
or
cmpsb
mov
push
repnz
sub
and
out
ds
out
mov
int
out
jae
int
jbe
adc
push
push
push
inc
out
bound
dec
adc
fdivs
das
fcmovb
addl
xchg
cmp
add
xor
pusha
clc
inc
cmpsb
nop
jge
fidivs
xlat
ss
push
xchg
hlt
adc
mov
test
or
lock
std
rcrb
mov
push
nop
stos
sbb
movsbl
xchg
bound
or
fistps
mov
sbb
xchg
inc
stos
movsb
inc
adc
or
inc
ja
xchg
leave
pop
sub
popa
xor
js
clc
jne
testb
aaa
dec
shlb
daa
sub
sbb
cmp
cmp
or
or
push
inc
cmp
ret
outsb
xchg
aaa
sub
inc
mov
or
nop
inc
decl
pop
sub
ret
adc
push
and
ud0
push
imul
or
mov
push
dec
cltd
xor
test
xor
inc
rcll
or
inc
mov
mov
mov
mov
aam
mov
stos
lret
insb
leave
lea
pop
add
iret
mov
loopne
lods
aam
mov
shr
cmp
shll
xchg
and
inc
xchg
int3
std
xor
cmp
sbb
call
lock
push
ljmp
stc
cmp
jle
push
ret
push
ficoml
mov
adc
icebp
xchg
iret
lock
add
mov
mov
out
movsl
or
mov
adc
leave
loopne
sbb
xor
incl
and
mov
decl
sub
sbb
and
sbb
push
sbb
daa
mov
loopne
shr
mov
cs
ret
cmp
add
mov
push
inc
and
push
cmp
fnsave
lds
push
inc
add
adc
neg
pusha
lods
test
add
push
mov
add
mov
mov
add
insl
jb
pop
or
lock
mov
test
xchg
clc
mov
push
inc
sar
std
or
cmp
xor
ret
add
adc
push
testb
lock
sbb
mov
push
insb
lcall
mov
mov
jmp
push
cmp
jo
lret
jnp
in
lcall
mov
andl
mov
sahf
mov
sbb
fdivr
test
pop
xor
pop
stos
mov
jmp
fcmovbe
cli
addr16
out
cmp
ficompl
test
subl
loopnew
add
mov
mov
orb
dec
inc
dec
shll
add
pop
inc
xor
arpl
lahf
push
mov
pop
inc
mov
dec
test
xor
movsl
stc
outsl
add
jge
negl
or
imul
in
out
push
jae
popf
jle
jecxz
inc
add
xor
repz
dec
inc
mov
movsl
sbb
dec
xchg
and
adc
mov
into
jl
pop
sbb
inc
cmp
in
repnz
inc
or
dec
aas
push
add
push
out
adc
aad
call
rolb
jle
pop
std
mov
and
mov
or
push
fxch
jne
jle
daa
loope
fstpl
push
pop
and
or
pop
add
pop
and
aad
add
adc
and
mov
add
in
je
cmp
add
sbb
movsb
shlb
fwait
mov
push
cmp
shlb
mov
add
xlat
addb
dec
mov
adc
test
push
inc
popa
inc
in
scas
lea
push
icebp
sbb
inc
mov
aaa
imul
push
sbb
lock
mov
lea
jmp
or
enter
jl
fildl
outsl
lcall
xor
jecxz
shrb
inc
cwtl
orl
mov
push
or
inc
lea
xor
sub
adc
les
cmpsl
outsl
adcb
adc
js
push
jp
jmpw
repz
dec
fwait
pop
fsubrs
ffreep
push
adc
call
add
mov
or
and
adc
push
pushf
cmp
fdivr
sbbl
js
mov
mov
int
push
xchg
add
in
movsl
hlt
or
sub
cli
scas
rorl
int3
test
ficomps
cmpsl
pop
or
sti
add
fs
jl
jge
mov
std
xchg
push
incl
aad
pushl
std
push
inc
aam
nop
add
lea
pop
xchg
pusha
ljmp
add
sar
jl
or
dec
or
dec
cmp
pushf
push
adc
push
push
push
shl
or
cmp
idivb
movsb
lock
jmp
mov
sahf
and
cmp
push
adc
xor
xor
mov
or
push
nop
mov
outsl
push
push
add
pusha
add
rorl
inc
add
mov
out
rorl
mov
jb
and
test
sbb
jns
into
and
jns
push
add
inc
sbb
sbb
push
bound
push
inc
add
sbb
add
push
pop
shrl
sbb
or
or
jns
stos
adc
or
adc
jns
push
cwtl
push
cmp
clc
adc
out
mov
fstps
sub
push
and
out
cs
and
sbb
xchg
jp
out
pop
adc
sub
dec
repnz
out
pushf
dec
xor
sub
pop
or
cmpsl
sbb
adc
rcrb
jne
cmp
push
sbb
lods
sub
testl
dec
icebp
inc
and
sahf
arpl
in
cmp
and
cmp
xchg
lret
jnp
push
inc
fs
cs
iret
stos
jl
jle
adc
fs
inc
cmp
xorb
add
and
adc
nop
outsl
push
mov
orb
adc
stc
and
rcrb
mov
sbb
inc
mov
dec
cmp
pusha
sbbb
mov
sbb
jb
and
push
icebp
xor
sub
inc
das
pusha
and
jmp
dec
sbb
aas
adc
mov
dec
out
insl
cmpsl
aas
xlat
lock
ret
cmp
push
rclb
stc
pop
enter
cli
pop
push
cmp
push
dec
add
push
adc
test
movsb
mov
add
fidivs
cmpsl
or
jnp
inc
or
js
or
xchg
jg
xor
or
stc
rorb
dec
ss
int
cmp
mov
push
lcall
ret
int3
outsl
push
add
into
xchg
sub
hlt
inc
les
cwtl
ret
imul
loope
cmp
call
xor
cld
addb
push
daa
dec
pop
loope
xchg
push
pusha
enter
and
cmp
add
sar
dec
inc
sub
inc
or
mov
or
mov
leave
add
push
adc
jmp
or
xor
pop
rclb
pop
bound
cli
push
or
inc
insl
xchg
mov
add
stc
lea
or
xlat
inc
pushf
jl
shl
inc
push
mov
enter
inc
inc
sbbb
push
prefetch
fsubr
and
pusha
pop
in
popf
repz
cmp
mov
xor
inc
jge
add
dec
call
adc
inc
mov
xchg
test
shll
mov
lods
int3
mov
pop
ud0
js
xor
fmuls
xchg
or
es
sarl
subb
adc
lock
adcb
cmp
jg
or
dec
ret
xor
je
dec
mov
inc
inc
pop
add
sbb
sbb
lahf
fmuls
arpl
faddl
adc
pushf
xlat
test
add
roll
dec
pop
cmpsl
sahf
adc
lcall
mov
int
adc
mov
add
xor
cmp
sbb
ret
cmp
dec
push
shrl
inc
enter
add
dec
mov
gs
nop
add
push
decl
clc
push
push
test
icebp
enter
fidivs
xchg
daa
or
sahf
incb
idiv
or
inc
pop
push
pusha
mov
pusha
xchg
imul
testl
inc
push
mov
adc
aaa
push
or
in
sahf
rolb
mull
lret
adc
loop
inc
cli
fldl
inc
dec
jg
sti
movd
loope
jecxz
mov
mov
add
xchg
shl
lahf
xchg
adc
pop
jg
imul
or
cld
mov
add
jne
test
mov
jb
ret
insb
cmp
rolb
xchg
sub
pop
or
inc
outsb
mov
shll
sbb
mov
pop
cmp
imul
scas
push
add
call
xor
aaa
or
mov
aas
stos
adc
sbb
int
call
scas
pop
inc
or
outsl
push
lea
jne
xchg
jbe
mov
popa
aam
stos
loopne
fisubs
push
sub
lds
push
cmp
jno
mov
lea
movsl
mov
cmp
push
adc
push
sbbb
imul
nop
mov
sbb
fcmovnb
push
insl
mov
push
jmp
jge
fs
push
jae
jge
or
or
jo
je
ret
test
arpl
inc
and
ret
incl
andl
decl
sub
sbb
inc
inc
sbb
push
ds
sbb
mov
mov
mov
mov
mov
jns
jne
push
push
mov
add
xchg
xchg
adc
jbe
gs
and
scas
inc
xor
incb
ret
or
mov
stos
leave
adc
xor
add
jp
cmp
test
incl
loopne
fs
insl
pop
ret
or
inc
cpuid
mov
add
into
mov
jl
loop
xchg
mov
hlt
mov
aas
sahf
call
sub
inc
xchg
lahf
pop
or
inc
mov
mov
add
les
add
or
loopne
test
test
mov
pop
jae
and
sbb
sbb
jle
and
xor
pop
out
sahf
push
xchg
rclb
lock
pop
lea
lods
fcmovbe
inc
mov
das
ljmp
cli
fidivrl
test
and
adc
mov
inc
les
dec
ljmp
lea
push
sti
add
pop
movl
mov
ss
or
stc
jl
dec
ret
jae
cltd
add
out
lret
aaa
fistl
xor
jl
ret
je
mov
dec
push
xorl
or
push
hlt
push
dec
pushf
js
andb
dec
imul
jnp
mov
mov
mov
cmp
shrb
gs
stos
test
shll
push
inc
clc
and
adc
lock
daa
insl
push
incb
dec
rorl
sarb
jle
into
jmp
mov
decb
xor
dec
jmp
add
incb
addb
decb
fildll
cmpb
ja
dec
dec
jbe
rol
and
dec
dec
cmpb
sbb
cltd
push
movsl
add
jmp
jns
enter
cmp
dec
mov
inc
inc
jge
pusha
or
in
inc
xorb
or
test
mov
pop
aam
cs
lret
or
adc
cltd
push
inc
das
and
test
ljmp
sbb
and
push
inc
push
mov
mov
lods
sbb
lret
xchg
fs
pop
push
push
mov
mov
shl
shlb
je
stos
outsl
dec
push
popl
adc
pusha
adc
jg
cwtl
in
or
xchg
mov
add
imul
rcrb
addr16
xchg
test
cmp
pop
out
ljmp
subl
jnp
dec
xor
xchg
pop
sbb
lods
sub
pop
sub
data16
dec
clc
clc
cmp
andb
pop
sbb
out
push
addr16
and
leave
and
or
mov
pop
push
mov
enter
pushf
mov
or
mov
inc
mov
jo
das
pop
adc
jecxz
inc
in
dec
inc
inc
in
scas
popa
sbb
sbbb
lcall
loopne
enter
rorb
xchg
insl
aaa
popa
aaa
scas
pop
sbb
adc
rclw
mov
fidivl
je
mov
inc
and
mov
or
inc
or
jo
jb
insl
outsb
es
xchg
add
inc
inc
dec
sbb
aas
gs
and
pushf
mov
movsl
add
test
js
mov
icebp
sub
cmp
xor
mov
sub
jb
mov
or
enter
pop
clc
in
scas
push
mov
xlat
xor
or
fisubs
xor
aad
xchg
pop
sar
and
sub
addl
fst
insb
jbe
mov
aam
lods
pushf
push
incl
fistpll
push
orl
pop
or
and
inc
push
ds
lahf
or
fs
orb
sbb
or
loope
inc
mov
adc
sbb
ret
adc
mov
repnz
and
add
adc
ds
push
hlt
push
test
xor
popf
xchg
pop
inc
mov
mov
push
pop
or
push
xchg
test
test
repz
jae
nop
mov
pop
and
mov
xor
sbb
test
sub
dec
rcrb
mov
sub
inc
les
jl
adc
test
adc
dec
push
cmp
adc
or
cmp
add
sub
xor
sbb
pop
push
data16
shlb
xchg
das
sub
xor
jae
mov
xchg
inc
push
lods
jmp
cs
jne
jo
xor
sbb
cwtl
or
xor
popa
sbb
adc
or
inc
enter
clc
sub
xor
insl
and
adc
sarb
dec
sbb
sbb
push
sbb
imul
shr
lock
pop
xchg
aas
pop
adc
loopne
pop
sub
or
popa
and
inc
and
xchg
test
rol
pop
and
jp
stc
jg
or
fs
or
dec
ficomps
lret
das
sbb
fs
aas
inc
test
and
insb
bound
or
ret
sub
sarl
and
adc
test
in
subl
or
or
cmpb
and
roll
jb
lret
in
sub
test
adc
jecxz
sbb
adcb
dec
cmp
je
cmpsl
incb
xchg
aad
std
pop
in
cmpl
gs
add
inc
mov
je
add
adc
xchg
or
cmpl
adc
scas
push
daa
push
ss
add
repz
int3
inc
cli
or
and
mov
lret
jb
push
iret
rorb
mov
xorb
jecxz
adc
notl
test
push
xchg
push
das
std
loopne
test
loopne
insl
sub
xchg
loopne
pop
test
push
fisttps
push
add
or
sub
or
cmp
daa
adc
fs
adcl
or
jg
xchg
addr16
xchg
push
xchg
test
outsl
pusha
lret
mov
loopne
jno
jge
inc
add
adc
push
sub
lea
jle
or
mov
push
jecxz
add
dec
insl
aam
fsubr
adc
rclb
push
mov
push
mov
lar
sbb
mov
cli
mov
push
mov
lea
cmp
addr16
or
aas
nop
sub
mov
add
test
lcall
cmp
repnz
jno
dec
out
push
adc
adc
push
and
imul
xchg
inc
bound
xchg
and
test
ss
fnsave
adcl
lds
sbb
push
gs
dec
cmp
inc
sub
orb
or
pusha
sarb
orb
inc
xchg
rorb
mov
cld
pop
call
sub
mov
push
jnp
mov
or
clc
pop
fildl
mov
adc
out
inc
inc
push
repnz
add
inc
cmpsb
and
mov
cmp
xorb
pop
js
stos
in
push
or
loopne
dec
pop
cmp
add
jecxz
jb
xorl
xor
pusha
sub
adcb
fcomi
jnp
inc
jbe
arpl
dec
sbb
bound
xchg
jmp
pop
mov
inc
int3
sbb
and
orb
add
cmp
ret
add
lea
mov
mov
ss
call
addr16
aas
popa
sub
add
jnp
data16
cmp
or
push
cmpl
or
push
add
or
xchg
cmpsb
outsb
sbb
push
sarb
outsl
lock
xor
ret
jo
stos
cwtl
jmp
push
inc
nop
shl
popf
add
push
push
mov
push
adc
push
addr16
sbbb
sahf
or
push
sarb
jmp
xchg
movsb
xlat
shlb
pop
sub
mov
dec
add
add
ret
clc
das
fdivs
jbe
sbb
add
je
cmp
jb
and
ficoml
sub
movsl
push
push
and
push
or
out
mov
add
and
fimuls
and
xor
mov
mov
jb
dec
xchg
or
or
sub
stc
pop
push
pop
subb
push
or
insb
dec
xlat
or
push
inc
shr
mov
push
push
leave
adc
add
lods
or
lock
nop
scas
and
inc
dec
bound
xor
cld
iret
sbb
jbe
jge
rclb
loopne
adc
pushl
lea
sub
sbb
jne
xchg
or
or
popf
pushf
mov
orl
xchg
lea
ja
dec
jl
fldcw
fisttpll
push
fildll
and
insb
notl
cmp
pop
inc
fistps
xchg
daa
daa
mov
dec
mov
xor
adc
popa
into
pop
insb
ds
adc
jge
mov
test
ja
mov
inc
mov
fldl
push
mov
xchg
testb
dec
jns
adc
inc
mov
ret
loope
xchg
pop
fisubrl
pop
cli
int3
jge
jne
vmread
mov
adc
adc
cmpsl
sbbb
fwait
loop
js
cli
inc
fildl
sub
or
faddl
fists
je
pop
and
pushf
push
mov
pop
mov
push
mov
pop
movsb
mov
pop
jae
jo
aaa
out
arpl
decl
pop
call
push
or
inc
dec
dec
gs
dec
cmp
mov
sbb
iret
and
pusha
push
ljmp
mov
imul
add
out
dec
sbb
xchg
push
into
adc
decb
cmpsl
jo
inc
imul
stos
cmp
pop
and
xchg
lods
mov
orb
inc
fisubl
inc
imul
lahf
fld
cmp
bound
outsl
or
imul
or
test
pmaxsw
push
adc
imul
inc
sub
outsl
mov
push
add
add
dec
sti
inc
pop
mov
jb
lods
add
pop
outsb
mov
adc
movsl
out
jne
jge
sbb
mov
jmp
movsb
in
push
sub
add
jg
rcl
fidivrl
hlt
movups
jbe
ja
xor
push
sar
repz
mov
xlat
hlt
mov
popl
insb
xor
or
mov
ret
jno
mov
xlat
insb
push
mov
shlb
pop
iret
loope
mov
outsl
sub
in
mov
loopne
fsub
incl
push
dec
push
popa
insl
jo
inc
bound
cld
ljmp
ret
ljmp
gs
into
dec
xchg
lods
add
xlat
mov
lahf
insl
adc
push
out
push
jecxz
jae
or
xchg
jge
pop
pop
push
in
clc
adc
mov
push
cs
cltd
daa
or
iret
lods
imull
xchg
xchg
dec
mov
shrb
dec
aaa
sbb
outsl
mov
add
scas
les
into
inc
movsl
ljmp
adc
imul
movb
adc
mov
mov
mov
add
or
or
inc
add
inc
gs
push
outsl
xor
imul
sbb
lods
les
or
xchg
outsl
inc
adc
mov
lret
dec
in
jns,pn
mov
jne
subl
outsl
and
outsb
xlat
or
into
mov
or
repnz
add
adc
dec
mov
sub
push
test
and
and
sahf
call
push
js
in
mov
adc
addr16
or
rorb
pop
jns
daa
sub
jno
cld
or
mov
add
push
xchg
xor
test
push
sub
sbb
push
jbe
cmp
mov
jbe,pn
jl
mov
test
cwtl
mov
getsec
or
mov
movsl
scas
pop
and
push
adc
xor
aaa
xchg
and
in
push
adc
push
fsubrl
or
push
pop
push
push
insl
test
ja
mov
movsb
add
pusha
sbb
jmp
xor
cmp
or
in
xchg
jbe
push
xchg
cwtl
clc
pop
imull
mov
push
or
das
push
push
mov
add
adc
add
push
xor
dec
xchg
pop
pop
rcrb
add
icebp
fidivrl
and
fs
and
xor
push
adc
xchg
cld
adc
jge
shll
push
cld
jae
adc
pop
mov
fdiv
shr
mov
sbb
out
inc
mov
add
add
adc
test
add
invd
aaa
int
movsl
add
and
pop
pop
nop
push
movsb
jne
pusha
inc
mov
push
punpckldq
cmp
jp
jmp
add
mov
aam
data16
cmp
mov
das
sbb
nop
add
sub
jl
hlt
inc
inc
mov
and
xor
adc
dec
inc
and
mov
adc
mov
pop
enter
clc
adc
je
pop
icebp
pop
jnp
jo
dec
pop
mov
mov
sub
popaw
cmp
lcall
adc
jne
imul
or
lea
and
xor
sub
lods
popa
pop
push
add
aam
test
push
or
pop
mov
cmp
adc
and
ja
add
jno
jne
cmpsb
mov
sahf
dec
lea
add
jo
or
shlb
and
or
mov
insl
int3
call
pop
or
xor
cmpsl
adc
outsl
scas
and
xchg
xchg
mov
lfs
cld
clc
hlt
in
enter
ror
rcl
repnz
test
inc
pusha
or
or
xor
xor
ror
popa
in
adc
sub
adc
inc
xor
sbb
gs
pop
jnp
jmp
jmp
xor
and
mov
mov
movsb
lret
add
xor
xchg
gs
inc
in
push
fidivrl
or
test
pop
jmp
orl
dec
fs
in
sub
aam
imul
int3
rcrb
dec
sub
pop
fimull
loop
mov
mov
sub
test
imulb
addb
and
or
pop
jmp
push
push
add
sub
push
mov
sub
pop
or
cmpsb
andb
movsb
jmp
cmp
enter
add
aaa
mov
add
add
dec
and
bound
adc
jge
iret
dec
dec
add
mov
push
sub
push
addr16
mov
dec
or
jb
push
pop
add
jne
lock
shll
popa
sbb
mov
inc
addr16
push
sub
push
pop
int3
inc
in
insl
cmp
in
sbb
mov
and
dec
and
in
cli
jno
mov
or
pop
jb
sbb
fdivl
ja
sbbb
sbb
test
jmp
aad
add
cmp
popf
mov
mov
hlt
jb
lea
push
sbb
add
push
andl
mov
jp
mov
or
and
xchg
push
xor
outsb
movsl
inc
add
imul
movl
jecxz
mov
pop
xchg
lods
and
lahf
add
pop
xlat
add
movsb
push
and
push
mov
dec
xchg
nop
add
inc
stos
shrd
mov
clc
adc
add
or
or
xor
mov
pop
cmp
bswap
leave
xchg
outsl
mov
and
add
or
or
enter
or
or
fs
mov
pop
dec
push
in
xchg
movsb
outsl
cmpsl
sub
das
in
push
fmuls
inc
daa
adc
inc
in
imul
pop
xor
adc
fisubl
ja
push
inc
jg
call
xor
jmp
pop
pop
daa
jmp
out
iretw
adc
cmpl
adc
or
pop
inc
in
inc
or
addl
sub
inc
inc
shlb
push
scas
xchg
inc
jl
outsl
inc
adc
pusha
pop
mov
inc
dec
jo
push
mov
cmpsb
js
or
pop
and
cli
test
or
and
jne
imul
adc
xchg
inc
and
pop
mov
dec
adc
ret
ds
inc
add
lahf
andl
pop
dec
add
cmpsb
push
xchg
addb
int
xchg
rorl
jle
push
pusha
or
xchg
cld
push
or
or
cs
pop
pop
push
add
shlb
in
std
jae
mov
jle
xor
pop
repnz
xchg
jg
jg
repnz
mov
hlt
stos
das
mov
cmp
jg
jmp
adcb
fnsave
mov
adc
je
pop
adcb
push
mov
sub
sbb
pop
lret
out
mov
lahf
jge
addb
sub
push
sbb
inc
xchg
mov
sbb
sbb
add
xor
xorb
faddl
cmpsb
cli
and
mov
mov
aas
js
sub
in
add
push
sub
mov
popf
fmuls
inc
xorb
or
or
lds
and
out
xor
adc
orl
inc
pop
sub
mov
subb
test
adcl
and
and
jnp
arpl
mov
xchg
inc
sub
adc
mov
or
iret
adc
addl
jbe
orb
pusha
and
nop
adc
les
inc
and
mov
addl
orl
js
and
jae
in
inc
repnz
inc
sub
and
pop
push
lahf
ret
mov
es
clc
and
fmuls
ret
xchg
ret
aad
push
aas
jl
add
adc
mov
sub
movsl
or
xchg
test
addl
push
enter
sbb
cmp
jg
push
xor
popa
add
aad
lods
cmpb
xor
dec
test
mov
adc
cmp
jbe
mov
fs
clc
inc
cld
sub
enter
add
and
rclb
or
fsubr
jo
sub
xor
pushl
loop
aaa
rcll
or
enter
jno
push
sbb
and
sub
pop
push
add
dec
add
ret
popf
lods
pop
stos
int
xchg
into
sbb
mov
jb
and
sbb
in
xchg
test
add
xor
lock
inc
insb
xchg
pop
push
xchg
and
mov
jo
xchg
test
xchg
mov
dec
and
xchg
nop
data16
xor
adc
xor
add
jmp
cmpsl
mov
lret
jno
push
test
adc
mov
jmp
cmp
push
mov
stc
mov
xchg
adc
enter
or
sbb
xor
test
push
in
into
fdiv
into
mov
push
sub
jl
gs
mov
add
jmp
push
sti
rcrl
mov
outsb
outsl
or
inc
mov
xor
fisttps
inc
jbe
xchg
into
inc
add
inc
dec
pop
and
arpl
shlb
pop
jne
mov
add
ljmp
jo
push
push
aam
sbb
fldln2
fxch
fyl2x
fldt
and
pop
cli
ljmp
jno
and
pop
pop
cmc
sub
or
subl
adc
lcall
rcr
xchg
repnz
das
mov
or
adcb
sub
jae
sub
dec
cs
pop
or
sbb
mov
dec
mov
aaa
movsb
jbe
or
pop
inc
or
mov
add
das
add
or
mov
adc
std
inc
xorl
mov
mov
add
fwait
dec
mov
or
pop
add
jbe
push
inc
jnp
dec
addb
push
mov
mov
data16
xchg
fwait
stc
xchg
add
inc
sub
data16
ret
popa
mov
lea
or
dec
sub
js
push
sbb
je
ret
lret
xchg
insl
inc
inc
sbb
xor
xchg
sbb
fwait
mov
jno
dec
inc
inc
pop
sbb
cmp
cmp
inc
push
ficoms
andb
push
mov
or
pushf
nop
add
insl
sbb
push
inc
push
dec
outsb
pop
add
push
pop
mov
sub
add
insl
cmp
xor
mov
and
xor
or
mov
adc
roll
in
lcall
sbb
imul
jns
or
dec
inc
adc
shll
push
shl
jl
insb
outsb
dec
push
inc
push
push
dec
push
push
sub
add
mov
outsl
pop
ret
nop
mov
pop
or
shlb
sub
push
push
hlt
mov
sbb
or
inc
decb
jbe
and
shll
mov
adc
xor
cwtl
ss
pop
pusha
adc
cmp
loopne
push
lock
imul
pop
or
xchg
and
sub
or
lds
sbb
or
mov
sbb
push
or
aaa
inc
inc
mov
and
imul
repnz
rclb
and
dec
xor
aad
and
shll
push
jl
and
mov
daa
xor
in
mov
mov
or
sub
cmp
out
lods
mov
pop
outsl
cmp
xor
dec
push
dec
inc
test
jbe
std
sub
dec
arpl
ret
adc
daa
sub
mov
pop
inc
inc
and
lea
pop
inc
push
push
dec
push
add
aas
add
and
aas
mov
or
and
outsl
imul
mov
adc
adc
popl
mov
cltd
or
add
inc
jb
nop
sbb
sti
and
ficomps
shr
xchg
and
push
xchg
sbb
xor
jb
or
shll
jbe
mov
xchg
cwtl
pop
sub
aad
add
pushf
push
adc
dec
inc
dec
aas
cmp
imul
or
out
pop
and
push
pop
in
dec
jae
adc
movsl
lret
cld
xchg
nop
nop
or
pop
add
sbbl
adc
or
cmp
push
sub
inc
jne
outsl
pop
jnp
aad
addr16
jae
xchg
jp
adc
add
arpl
sbb
outsl
scas
inc
bound
xchg
dec
or
xchg
or
adc
lods
cmp
lods
pop
insl
sahf
jne
loopne
fcmovnbe
and
outsl
bound
push
test
jae
inc
add
addb
es
mov
inc
sbb
xchg
loopne
aam
add
xchg
and
cmp
pop
xchg
xchg
flds
xchg
mov
inc
arpl
dec
xchg
fildll
xchg
adc
sbb
pop
add
mov
xchg
or
mov
push
dec
adc
or
push
ss
adc
rorb
adc
pop
push
lahf
cld
push
sub
mov
bound
ds
decl
push
and
test
or
xor
or
rorb
sbb
bound
xchg
je
push
aad
pop
addr16
xchg
lcall
sub
popa
xorb
mov
test
enter
insb
cmp
jg
testl
jae
addr16
pusha
sbb
push
pop
adc
stos
or
add
fs
cld
sub
dec
jecxz
xchg
cld
or
addb
sahf
dec
inc
cmpsl
inc
insl
fs
and
aas
xchg
cmp
xlat
dec
dec
push
inc
fistpll
rolb
fisttpl
xor
ja
aam
push
daa
pop
push
out
inc
dec
inc
and
inc
adc
cmp
inc
lods
mov
dec
adc
daa
pop
outsl
imul
add
mov
std
vandps
ja
out
inc
loop
cli
cmp
or
fadds
and
popa
jbe
jo
pop
or
jae
mov
jb
pop
scas
dec
mov
pop
pop
pop
push
movsb
addl
loope
aaa
test
lret
inc
mov
push
xor
mov
add
lahf
fildll
les
or
mov
fimull
dec
aad
adc
push
jo
jo
jbe
sbb
loope
lock
shrl
add
or
cld
bound
nop
fwait
outsl
push
int3
addl
popa
or
lock
jnp
sbb
sbb
sbb
imul
push
mov
sarl
mov
in
and
rolb
and
add
pop
push
imul
cmp
dec
mov
repz
in
mov
movl
insl
ss
adc
aaa
pusha
or
cs
add
test
xchg
mov
adc
xchg
dec
fistpl
lock
adc
icebp
into
lock
cwtl
faddl
cmpsl
cltd
adc
push
leave
cmovl
in
or
rcll
adc
mov
or
pop
and
fxch
inc
bound
pop
hlt
in
mov
lock
fs
mov
mov
nop
pop
pop
and
adc
push
jne
enter
or
cwtl
pop
dec
outsl
nop
jle
sbb
add
inc
mov
out
add
or
popf
xor
sti
pop
sub
cmp
or
cmp
mov
cltd
mov
mov
cmp
add
shl
je
push
addl
rcrl
or
movsl
or
or
dec
sbb
and
mov
add
sbb
xchg
pop
add
es
push
ja
lods
sbb
add
out
rclb
sub
mov
xor
mov
and
mov
das
or
sub
nop
adc
jae
pop
push
mov
test
push
dec
pop
lea
mov
repnz
in
pop
frstor
mov
rcrb
lea
and
add
and
push
dec
add
jge
mov
in
jns
adc
rclb
add
test
ret
ja
pushf
fcomp
rep
dec
lret
adc
cld
loopne
stos
pop
enter
aad
enter
call
pop
cwtl
xchg
repnz
lock
add
jne
dec
mov
push
jne
jne
pop
adc
jns
lods
inc
and
and
pop
lods
and
lock
outsb
aad
or
xchg
test
inc
pop
orl
cmp
jecxz
inc
fisubs
stc
dec
pop
enter
sbb
sbb
sbb
rcrb
out
pop
loop
and
sbb
jo
and
xchg
jo
or
sub
mov
fisttpl
nop
xor
add
fldcw
sub
add
addr16
je
xor
pop
push
movsb
mov
xchg
lcall
cmp
nop
and
push
and
sbb
pop
push
test
sbb
push
outsb
mov
je
mov
pusha
and
push
jns
add
lret
pusha
fsubrl
push
xchg
xchg
or
test
dec
jo
jo
iret
mov
je
push
fdivrl
jne
jb
daa
inc
popf
or
clc
or
sub
push
test
lods
mov
ljmp
dec
lret
test
aad
mov
or
sub
or
mov
call
cld
test
test
cmp
test
scas
stos
dec
nop
xchg
fcmove
jae
imul
mov
pop
das
sti
mov
rol
dec
outsl
inc
push
pop
pop
enter
inc
inc
int3
enter
outsb
sbb
xlat
push
xchg
adc
or
stos
test
or
imul
pusha
loopne
je
in
loopne
xlat
test
mov
test
xor
stos
lret
add
lock
shl
add
push
clc
aaa
fs
push
into
arpl
add
add
add
bound
pop
enter
dec
or
scas
cmp
inc
bound
pop
enter
adc
add
bnd
xlat
dec
push
dec
xchg
xor
push
sbb
push
pop
cmp
xchg
or
fcomps
or
cmp
add
push
icebp
leave
test
outsb
je
dec
xchg
jg
pop
pusha
pusha
leave
pop
repnz
add
sub
and
lret
pop
test
push
aas
add
in
cwtl
or
jo
jo
xchg
dec
cs
insl
arpl
mov
or
inc
add
pop
enter
loopne
addb
push
cwtl
cmc
push
adc
or
popa
or
inc
pop
inc
ret
call
push
je
inc
jbe
aaa
mov
inc
addr16
sbb
pop
xor
bnd
xlat
imul
and
sub
add
mov
outsl
ja
test
test
inc
and
imul
enter
nop
xorl
adcb
jno
data16
adc
pushf
push
pop
jae
das
in
mov
out
sbb
mov
adc
sub
sbb
sbb
xor
or
pop
dec
add
pusha
aaa
lock
sub
jne
and
mov
loopne
add
insb
pusha
addr16
ficoml
jbe
dec
cs
xchg
dec
enter
outsl
mov
stc
test
gs
pop
enter
or
and
pop
rclb
or
push
mov
enter
push
sahf
inc
test
sbb
rclb
in
push
stc
inc
cmp
out
push
test
add
orl
sub
jbe
jb
inc
pop
jnp
mov
and
jg
pop
repnz
movsl
enter
aam
cwtl
sub
pop
mov
inc
or
mov
orb
roll
fadds
sbb
and
add
js
and
sti
pop
fwait
cmpsb
mov
or
loopne
movsl
inc
js
or
adc
sbb
cmpsl
add
dec
adc
or
inc
jae
push
cmpsb
push
sti
push
aaa
jbe
add
adc
fs
pop
enter
lods
lods
in
lret
and
and
sbb
test
popf
or
test
test
cmp
repz
cltd
mov
jecxz
out
adc
fadds
loop
adc
or
clc
sbb
inc
cmpsb
aad
cmp
and
and
push
xor
ficoml
inc
mov
pop
mov
ss
mov
stos
xchg
stos
dec
imull
or
aaa
pop
loopne
enter
xchg
sub
fxch
incl
repnz
fisubrl
or
mov
or
cmp
repnz
loop
or
aam
movb
loope
pop
cmp
push
aas
cmp
jno
cld
push
insb
pushf
sbb
adc
fmul
mov
xchg
add
pop
shlb
or
jge
sarl
scas
cmpsl
pop
sub
pusha
shlb
sub
and
add
inc
inc
mov
dec
xchg
mov
mov
in
outsb
jo
aas
mov
adc
add
outsb
cltd
push
or
sub
lods
pop
pop
mov
adc
pop
or
sub
cmp
add
xchg
test
mov
outsl
xchg
test
adc
cmp
les
add
xchg
in
jns
mov
pop
int
or
cmpl
mov
icebp
cmp
sub
add
repz
or
or
xchg
in
push
pop
jne
rclb
mov
test
inc
add
imul
movsb
lahf
mov
sbb
jp
add
and
mov
inc
xchg
jg
rcrb
fadds
imul
adc
fstps
mov
icebp
jp
test
push
mov
pop
pop
jmp
add
inc
push
and
push
xchg
lahf
xchg
and
rorb
movsl
xor
pusha
xor
insl
push
or
xor
rcll
in
daa
push
in
sub
mov
nop
scas
sub
adc
or
shlb
js
adc
push
push
and
lods
adc
adc
jmp
paddsb
sbb
ja
jae
test
sahf
out
or
lods
cmpl
fucom
mov
incl
dec
adc
xchg
dec
mov
out
adc
and
out
mov
test
repnz
add
out
out
and
mov
xchg
pop
test
mov
xchg
mov
pop
add
sub
scas
out
fs
ret
lock
or
sbb
add
add
dec
push
dec
sub
add
push
push
push
addl
dec
or
lock
xor
push
int3
test
mov
mov
add
rolb
enter
jo
inc
nop
inc
add
adc
adc
les
nop
jecxz
shll
les
push
iret
fldcw
ret
xorl
push
cwtl
push
mov
daa
mov
inc
repz
loop
inc
dec
hlt
pusha
hlt
mov
in
cs
jg
pop
test
scas
push
pop
sbb
mov
movsb
xor
lds
xor
push
enter
and
cli
xor
lahf
push
cmp
mov
xor
inc
cmp
lods
aas
lods
jae
or
lret
movb
and
or
flds
mov
dec
mov
and
sbb
add
mov
or
inc
cmp
adc
cmp
inc
rclb
jb
cmp
pop
xor
call
dec
ror
jo
mov
lea
mov
xor
add
dec
jnp
jnp
pusha
xor
fadds
and
and
dec
arpl
xchg
fs
in
fsubs
pop
sub
dec
fs
push
sub
or
inc
mov
addr16
mov
je
jle
inc
sub
xchg
push
enter
sub
sub
push
dec
adc
in
add
das
sub
push
cmp
lods
hlt
adc
nop
movq
jb
outsb
pop
cs
clc
clc
add
mov
push
mov
mov
lods
sub
adc
xchg
or
arpl
subb
repz
testl
add
das
add
or
nop
aad
xor
or
push
pop
add
xor
push
ss
sbb
cmp
js
xchg
push
mov
adc
or
dec
and
add
mov
sub
mov
or
xor
andnps
dec
xchg
xadd
pop
and
inc
pop
jne
das
lods
enter
inc
mov
adc
xchg
test
jnp
adc
push
push
inc
sbb
mov
orb
movlps
mov
mov
xchg
je
sbb
add
out
aam
dec
sbb
adc
jbe
ret
pop
in
insl
pop
nop
psllw
mov
icebp
test
sbb
roll
inc
bound
cld
lods
lahf
fs
xor
push
loopne
jg
cld
xchg
mov
xchg
sahf
int
mov
xchg
push
mov
fstps
mov
mov
mov
bsf
mov
dec
add
jnp
rol
xor
ret
push
imul
rolb
dec
outsb
push
inc
movsl
mov
mov
jnp
cs
out
xor
pop
mov
dec
push
or
add
test
xchg
sub
pushf
cs
push
scas
or
adc
popa
sti
jg
and
or
aam
loopne
pop
xor
mov
ret
sahf
in
fstps
xchg
int3
push
ret
repz
shll
mov
sub
in
sbb
out
sahf
in
nop
out
and
lds
pop
rcrb
enter
mov
aad
sbb
loopne
and
mov
push
cmp
sbb
imul
inc
inc
aas
xor
xchg
shrl
lcall
leave
cwtl
mov
outsl
dec
movsb
mov
or
push
lods
cmpsl
test
mov
cld
jb
xor
jge
or
mov
inc
cltd
fs
mov
mov
lret
sbb
in
int3
sbb
rolb
mov
rcr
pusha
or
add
xor
xchg
xchg
dec
mov
adc
jb
sub
call
and
lock
jns
gs
or
clc
add
or
or
or
or
adc
enter
adc
adc
cmp
sbb
adc
xchg
lret
test
sub
pop
jb
or
jb
nop
xchg
xor
xor
xchg
cmpsl
mov
inc
cmp
adc
enter
mov
xor
gs
inc
cs
dec
dec
adc
jb
dec
push
es
enter
push
pop
incb
into
enter
inc
pop
fldl
mov
mov
and
xorb
xchg
xchg
push
nop
ret
add
and
ja
imul
add
test
sbb
and
dec
sbbb
adc
fadds
add
mov
pop
sub
insb
jbe
xor
add
fldenv
mov
xchg
lret
inc
movsb
mov
sbb
add
xchg
jb
insb
ljmp
sub
sub
push
mov
incb
mov
adc
icebp
je
xchg
jno
repnz
add
push
and
and
notb
data16
out
jp
lock
cs
and
mov
jo
pop
testl
sarb
out
shll
addr16
mov
xchg
xchg
add
xchg
dec
cs
fs
push
and
push
leave
addr16
jp
loopne
fs
jl
add
or
shll
push
mov
ret
pop
gs
jnp
lock
test
fs
orb
jb
mov
mov
pushf
pushf
mov
mov
cs
daa
and
mov
xchg
dec
cs
pop
in
and
add
add
jbe
push
sti
lds
mov
mov
stos
push
test
cltd
popf
movsb
add
lods
jb
xchg
pop
xor
cmpsb
in
push
add
daa
cmp
aam
mov
mov
fldenv
js
inc
sub
nop
add
ficoms
add
add
pop
push
inc
cs
out
popa
andb
and
add
dec
cs
mov
inc
inc
xor
and
es
xchg
lret
leave
enter
inc
in
jb
dec
in
dec
dec
jb
sbb
xchg
pop
pop
lret
fisttpl
cmp
jl
call
fdivs
dec
mov
aam
rclb
dec
jmp
add
sbb
lret
sub
add
es
add
sub
add
lock
mov
cld
clc
add
fwait
xchg
dec
push
dec
add
add
or
pop
mov
jmp
xor
repnz
cs
popa
adc
push
sbb
inc
outsl
jmp
push
jmp
or
push
xchg
mov
mov
sbb
and
sub
push
cmpsl
and
cmp
in
ret
xor
sub
sub
test
call
adc
rclb
out
leave
xlat
dec
inc
inc
add
and
mov
sbb
stos
xchg
test
cmpb
push
xchg
xor
sbb
inc
mov
outsl
aaa
adc
outsl
and
mov
push
push
inc
pusha
add
xchg
adc
push
mov
shlb
and
daa
in
ss
cmp
jle
and
cmpb
jo
adcb
pusha
mov
inc
mov
sub
cs
enter
push
aam
imul
out
add
and
or
pop
addr16
je
dec
pop
sub
or
and
cmp
or
hlt
add
clc
mov
lock
or
jl
push
pop
mov
icebp
and
movsl
loop
ret
shl
dec
mov
mov
pop
insl
xlat
push
and
adc
leave
insl
xchg
adc
cwtl
lret
mov
jns
dec
sar
clc
adc
adc
sub
movsl
push
push
push
and
je
sub
push
inc
leave
rorb
mov
mov
pop
fsts
lcall
add
lret
adc
sbb
pop
sbb
and
push
leave
pop
lret
mov
frstor
ret
jl
mov
arpl
pop
push
jns
imul
pop
add
push
add
lock
sub
hlt
dec
in
fcom
mov
in
dec
addl
popf
pop
or
sbb
lret
lcall
push
mov
gs
xchg
in
dec
dec
xchg
xor
int3
adc
fld
mov
cmp
hlt
test
loopne
cmpsb
shll
lock
sbb
jne
in
nop
xchg
data16
call
nop
loopne
add
mov
aaa
int3
dec
push
daa
push
shl
call
xchg
lock
mov
shlb
lock
repnz
aad
push
cmp
sub
ret
cmp
and
add
and
es
add
xor
jne
cmpsb
loope
popa
int3
fsubrl
mov
aaa
sbb
popa
cmp
dec
cs
adc
enter
int
xor
inc
cmc
in
sbbb
and
or
hlt
push
mov
sub
imul
pop
inc
sbb
and
int
pushl
daa
into
jns
lcall
inc
shlb
and
scas
add
sub
xorb
subb
leave
add
sub
into
in
mov
cmp
dec
add
push
add
add
ja
ss
icebp
push
lcall
js
cmpsl
movsb
pop
bound
scas
loope
add
adc
shll
xchg
push
nop
pusha
and
je
mov
das
in
push
add
or
mov
inc
cmpsb
dec
mov
mov
scas
jge
call
shlb
xchg
shl
mov
push
inc
and
push
xchg
enter
xchg
mov
sbb
es
mov
and
shl
sti
xor
gs
sbbl
xor
in
adc
test
mov
push
jne
sub
shr
aam
or
test
rcll
ret
push
loopne
and
ret
addr16
mov
sbb
jne
into
or
iret
jp
or
shlw
lock
jmp
push
jmp
cld
cld
pop
cmova
imulb
mov
push
mov
sbb
inc
push
sub
insl
and
jecxz
pushf
mov
nop
ficompl
popa
adc
pop
hlt
shll
push
sub
test
xchg
sub
adc
stos
xchg
cmp
in
push
dec
or
pushf
xor
cmp
das
push
gs
xor
or
jp
movsl
cmp
daa
daa
rclb
add
sbbb
mov
xchg
jp
inc
rorl
lret
das
inc
insb
mov
ret
test
sbb
pop
roll
or
push
push
je
mov
or
sar
and
test
push
sarl
inc
add
dec
aam
add
movsl
inc
je
mov
into
jge
pop
xor
push
jg
addr16
push
jne
in
or
lahf
fsubs
les
and
push
jmp
cltd
push
push
int3
jge
mov
push
js
cmp
out
push
shlb
idivb
adc
mov
sub
mov
je
add
mov
mov
cltd
les
pop
testb
rorl
add
pusha
loope
jnp
pusha
add
popa
shlb
inc
mov
adc
rolb
cmp
mov
lods
int3
enter
lock
push
lock
andb
or
or
ficoml
xor
fwait
pop
and
dec
and
and
outsb
add
dec
test
imul
lea
outsb
push
adc
push
dec
sbb
or
in
je
dec
pop
pop
sub
adc
das
popa
icebp
dec
inc
and
test
xorl
sub
sarb
jnp
adcb
xchg
add
enter
shlb
add
pop
mov
adcb
fdivs
dec
lret
or
mov
lds
push
push
adc
sub
push
push
pusha
pusha
or
cltd
ja
adc
mov
add
mov
call
repz
push
test
hlt
dec
mov
loopne
inc
ret
dec
test
dec
or
mov
push
mov
jne
adc
xchg
setae
adc
je
pop
add
ljmp
enter
adcb
rol
dec
mov
push
push
rcrb
inc
or
pop
lock
pop
pop
mov
push
inc
insl
movsb
cmc
in
outsl
or
sbb
push
loope
xchg
lds
mov
mov
movsb
add
fiaddl
pop
es
and
pop
enter
and
insb
flds
fidivrs
inc
mov
add
inc
inc
fwait
mov
test
xlat
xor
ja
push
fld
fidivl
sub
hlt
mov
mov
inc
pop
in
mov
movb
xchg
mov
push
cs
xor
and
dec
imul
and
xchg
lsl
movsb
xor
fidivl
lret
adc
pop
jecxz
add
mov
ret
enter
das
mov
lahf
push
sbb
adc
xor
mov
in
sub
ficoml
or
mov
jne
lock
rcrb
inc
dec
std
enter
lock
pop
push
lods
pop
inc
and
es
or
imul
pop
and
test
loopne
dec
in
rolb
xlat
stos
add
lock
clc
insl
dec
pop
out
add
inc
mov
xchg
mov
jne
push
decl
dec
les
and
sbb
leave
rorb
sbb
push
push
mov
or
sub
dec
cmp
cwtl
add
adc
and
fistpl
and
testl
mov
loopne
or
aam
loope
cmp
or
add
jns
in
dec
ret
loopne
mov
dec
pop
movsl
mov
pushf
mov
xor
sbb
or
pop
add
mov
xor
loopne
push
movsb
mov
or
loope
sub
pop
shrl
inc
adc
out
fstpl
insb
cltd
aaa
and
add
sbbl
test
outsb
orl
jno
push
out
in
arpl
clc
dec
inc
popf
xor
ja
cmp
andl
adc
pusha
loope
lods
pop
arpl
lret
inc
call
jl
dec
sub
std
call
adc
sub
mov
lods
shrl
and
loop
call
scas
mov
lret
add
lods
in
cmp
in
pop
dec
sbb
sbb
add
gs
loop
test
sbb
test
sahf
sub
pop
dec
pop
outsb
fiadds
xorl
xor
imul
or
std
mov
pop
jmp
pop
and
lea
inc
aaa
pop
pop
xchg
mov
pop
xchg
xor
sbb
popa
cltd
or
sbb
imul
cltd
inc
outsb
sbb
or
dec
mov
nop
pop
mov
push
in
inc
push
fs
adc
sub
mov
mov
push
cmp
je
icebp
add
andl
insb
insl
jmp
loope
jmp
or
call
dec
outsb
dec
ficoml
lds
xor
sbbb
addr16
pushf
inc
dec
pop
subb
sub
jl
xchg
sbb
popa
mulb
arpl
outsb
outsl
jbe
inc
inc
test
outsl
sbb
pop
add
fcompl
gs
or
sbb
ret
pop
mov
adc
add
addr16
call
dec
xor
popa
insb
pusha
dec
push
mul
cltd
outsb
xor
jae
mov
push
mov
mov
sub
inc
add
aas
repz
je
inc
sbbl
inc
xchg
jne
out
xchg
mulb
jmp
mov
and
shrb
andps
mov
mov
xor
pop
xor
inc
insb
in
mov
adc
sub
andl
cmp
or
rorl
add
lods
je
or
jne
imul
add
xchg
and
push
push
inc
pop
into
inc
adc
test
or
mov
adcb
xchg
dec
jae
rol
jmp
jecxz
divb
mov
pop
xchg
out
scas
cmp
cmp
aam
outsl
cmpl
test
adc
mov
jbe
sub
cmp
inc
dec
pop
pop
popf
je
sub
fdivrl
cld
sbb
data16
and
xor
and
cmpb
jb
iret
or
sub
mov
loopne
sbb
dec
xchg
xor
inc
arpl
arpl
xor
shrl
dec
or
jge
sbb
or
inc
and
mov
imul
adc
and
jmp
pusha
xchg
push
hlt
inc
or
movsl
mov
ret
ss
pop
mov
ljmp
cmc
cmp
jl
cs
xor
fsubl
cmp
jp
mov
mov
daa
pop
cltd
out
or
dec
je
inc
jns
enter
mov
jmp
mov
push
mov
scas
xchg
mov
stos
xor
imul
push
xor
dec
cmp
aas
stos
clc
clc
leave
imul
xchg
xor
sbb
shlb
popa
lods
adc
sub
sub
fadds
add
or
lods
or
call
inc
or
pop
cs
and
cltd
cmpsl
fcoms
lret
imul
jno
push
repnz
jmp
push
pop
pop
lcall
mov
adc
popa
mov
test
int3
andl
jbe
jnp
cmp
jo
outsl
mov
imul
outsl
leave
dec
add
inc
add
in
stc
dec
or
loopne
and
xchg
sub
testb
loope
das
or
lea
ret
adc
and
faddl
insl
subb
les
aaa
add
push
scas
jmp
jmp
out
jns
mov
cwtl
jecxz
je
jmp
aaa
popa
mov
mov
mov
cwtl
ficomps
or
arpl
mov
loope
jle
inc
or
sub
or
and
xchg
aaa
cmpl
jne
test
xchg
dec
call
mov
add
movsb
movl
or
sub
sub
xor
sub
xor
dec
pop
popa
movsl
cmp
mov
cmp
lret
add
popa
add
fbstp
dec
mov
mov
adc
xor
int
and
add
add
jns
adc
add
sti
sub
iret
dec
loopne
popa
neg
leave
adcl
outsb
fs
jl
imul
nop
inc
inc
nop
jns
jge
lods
and
jge
movsb
push
xchg
and
lods
xchg
or
mov
outsb
lcall
mov
jne
xchg
test
and
and
ficoml
ljmp
jmp
in
jnp
popa
and
out
xor
pop
addl
push
and
hlt
mov
mov
inc
popa
sub
sbb
dec
das
bound
dec
and
insb
and
inc
dec
sub
push
fmuls
loope
sub
adc
test
movsl
dec
cmp
add
aas
lods
push
dec
sbb
adc
pop
lret
adc
dec
fmuls
lcall
adc
test
and
pop
push
adc
subb
adc
xor
inc
inc
xor
rcl
out
mov
in
and
push
sub
jo
jp
mov
pop
out
flds
push
fsub
dec
sbb
call
pop
jge
cmp
or
lahf
stos
ret
inc
mov
lahf
and
xchg
rol
jmp
mov
adc
rorl
inc
pop
test
xchg
jl
out
stc
mov
js
and
sbbb
mov
or
mov
dec
enter
push
adc
add
jl
rcrb
xchg
pop
mov
mov
lret
aas
pop
movsb
stc
test
push
ret
daa
icebp
mov
sbbb
cmp
xchg
or
or
imul
or
lods
in
xchg
mov
icebp
mov
push
pop
sub
jno
divb
xor
xor
in
aas
xchg
sbbb
lea
jmp
jae
xlat
in
pusha
inc
or
jne
dec
fisubrs
xchg
adc
mov
loope
add
jmp
daa
jno
idivl
jns
mov
xchg
jae,pn
inc
mov
push
test
pop
cs
push
add
dec
dec
sarb
push
or
or
or
loope
shlb
jg
sbb
lea
pop
insb
cmpl
outsl
je
inc
push
shll
jb
inc
inc
add
loope
add
test
jae
js
mov
add
jbe
je
add
push
xchg
outsb
push
or
insl
cmpb
sub
arpl
and
repz
xor
and
vlddqu
push
leave
cmp
or
pop
fwait
rclb
mov
xchg
add
repnz
inc
lods
pop
xor
xchg
test
insl
push
or
or
je
and
popa
shlb
pop
adc
sub
scas
cmc
xchg
and
add
or
jg
clc
and
psubw
je
add
push
jmp
repz
add
xor
and
mov
ret
or
ret
push
push
add
sub
mov
dec
out
shl
sbb
and
xor
jmp
cmp
pop
les
cmp
ficomps
test
push
pop
push
dec
bswap
inc
mov
test
test
sub
pushf
add
hlt
and
xchg
or
push
dec
push
sbb
xor
xor
pop
outsl
sub
shlb
nop
pop
mov
fucom
inc
sahf
or
clc
mov
xchg
mov
cmc
xor
xchg
or
shlb
shlb
xor
js,pn
iret
xchg
pop
cmpsb
inc
mov
vmread
push
or
sub
loop
inc
dec
fs
or
xor
pop
and
fdivl
inc
inc
inc
pop
clc
and
adc
add
cmp
dec
movsl
imul
invd
aad
mov
je
mov
xor
cmp
or
movb
ljmp
add
dec
popf
movsb
faddp
mov
js
inc
push
lahf
fsub
adc
sbb
xor
int3
js
xor
cmp
mov
sbb
xchg
dec
add
pusha
lea
es
adc
cmp
xor
ss
or
sbb
add
outsb
pop
clc
ss
sbb
mov
inc
in
shll
rolb
mov
or
mov
nop
xor
out
sub
adc
pop
es
ret
or
sub
cwtl
sbb
inc
adc
in
arpl
dec
adc
call
fstl
outsl
aad
ljmp
cmp
dec
dec
pop
shlb
movsb
mov
imul
adc
dec
xchg
shlb
cmp
push
lods
scas
sti
inc
mov
in
into
cltd
push
push
cwtl
sub
adc
out
pop
mov
or
loope
fdivrs
nop
push
sbb
es
das
push
mov
pop
imul
mov
add
lods
mov
insb
xchg
adc
inc
cmp
mov
or
js
cmpsl
inc
adc
pop
mov
push
adc
test
adc
cmp
rorb
mov
flds
movsb
hlt
test
sub
test
jge
jg
mov
popa
sub
dec
test
fcoms
daa
mov
dec
push
lahf
outsb
mov
jne
sbb
dec
adcl
and
xor
xchg
sub
pop
decb
or
sarb
add
add
filds
decb
jmp
sub
or
push
and
std
cs
stc
pushf
pop
sub
loope
hlt
xor
mov
mov
mov
sti
or
loope
mov
ret
dec
push
fld
mov
mov
aam
sbb
movsb
ja
or
ja
and
cld
subl
jg
in
xor
nop
add
adc
and
sahf
jmp
addl
inc
sbb
cmp
mov
push
dec
or
cwtl
xchg
pop
nop
rclb
addb
dec
rorb
jmp
push
mov
inc
mov
jl
sbb
adc
out
sbb
loopne
sahf
aam
pop
lea
jg
push
test
mov
add
nop
and
sarl
mov
xor
aad
sti
lods
xchg
scas
push
add
xchg
inc
clc
sub
clc
lret
in
cwtl
pop
in
push
or
rolb
pop
mov
or
dec
aam
stc
in
inc
adc
loopne
add
and
jb
inc
sub
and
mov
in
xchg
sub
dec
jo
or
sub
addl
cld
pop
imul
inc
push
mov
xlat
or
test
inc
sbb
popa
aam
push
dec
pop
inc
pop
add
jle
pusha
adc
and
xchg
sub
fldt
addb
xchg
int3
sbb
mov
dec
cli
push
mov
cmp
jns
outsb
pop
mov
xchg
orb
adc
insb
dec
or
sub
sub
pop
or
mov
pop
dec
sahf
hlt
and
or
adc
add
jle
test
orl
test
cmp
or
sub
xor
fsubrs
and
push
add
rcr
ret
adc
add
and
inc
or
pop
sub
outsl
movzbl
test
aam
mov
and
add
stos
or
ret
scas
rcrb
je
xor
pop
in
push
sarb
sar
rolb
sbb
scas
shl
and
push
xor
or
clc
mov
orb
andb
test
or
sub
popa
loope
adc
icebp
pop
and
push
adc
enter
cmp
hlt
in
adc
aas
clts
mov
push
xchg
xor
les
inc
pop
or
mov
test
adc
or
pusha
add
mov
lahf
ret
mov
or
and
sbb
lret
add
mov
sbb
push
lret
add
inc
fs
and
nop
js
sub
push
movsb
cmp
and
lret
mov
push
aam
in
or
gs
hlt
dec
add
add
leave
xchg
or
inc
imul
xchg
sbb
pusha
and
movsb
xor
mov
nop
lret
test
inc
dec
add
je
test
push
mov
jo
pop
cmpsb
nop
cwtl
in
add
sub
adc
jae
ja
and
push
push
push
shlb
xchg
adc
cmp
push
xor
push
inc
dec
cmp
lds
and
and
fildl
jae
sbb
clc
insb
cmpsl
popa
rcl
and
sub
adc
dec
in
fisubrl
imul
push
mov
aaa
or
jae
cmpl
or
dec
in
testb
xchg
xor
xor
jp
xlat
xor
sbb
push
sbb
adc
out
repnz
or
test
push
sahf
push
jno
and
or
or
fs
in
and
inc
inc
inc
add
aaa
inc
insb
addr16
and
das
mov
fisubl
daa
push
adc
adc
lea
push
inc
mov
and
insl
loopne
dec
or
push
or
fimuls
minps
mov
cwtl
add
adc
dec
imul
xchg
cmp
or
and
dec
mov
ja
or
out
movsl
lods
mov
sarl
adc
adc
mov
inc
in
fnstsw
add
add
pop
insl
dec
or
fstps
adc
push
jne
jns
and
rclb
test
inc
into
add
cvttps2pi
test
das
pop
adc
or
js
test
sbb
js
add
add
mov
in
mov
fmul
jno
les
mov
pcmpeqb
pop
cs
out
or
addb
mov
or
push
jb
or
cmc
cs
cmp
cmp
ljmp
or
movsb
sbb
add
ja
sbbb
lods
or
sbb
and
and
nop
xchg
imul
sub
das
and
cltd
inc
push
xlat
mov
add
insl
scas
sbb
add
push
mov
cmpl
cli
test
or
addl
cmpb
divb
adc
push
stos
je
mov
mov
in
loopne
in
loope
cmp
jg
stos
pop
lret
xchg
je
pop
sub
sbb
int
sub
out
pop
stc
add
cld
lea
in
cwtl
adc
add
in
inc
sub
add
dec
sub
stc
je
lock
add
inc
les
pusha
xor
or
out
inc
push
sbb
dec
aas
adc
outsb
adcb
inc
cwtl
push
cwtl
cmpsb
jmp
into
and
jnp
or
push
and
das
inc
add
adc
push
inc
push
iret
push
and
mov
call
data16
pop
es
xor
shr
loopne
dec
out
loope
mov
push
mov
and
ffree
cltd
mov
push
sub
push
push
xchg
and
xchg
push
shlb
adc
mov
push
mov
mov
sub
popa
fs
pop
mov
jmp
cmp
jge
mov
push
shlb
adc
aam
aaa
jmp
aad
and
jne
or
movsl
popa
mov
xchg
shlb
jo
fnstcw
mov
clc
lsl
stc
and
movsb
es
pusha
punpckhwd
subb
daa
inc
shr
inc
adc
push
je
sub
or
pop
ds
clc
push
clc
inc
push
movsb
ret
xor
push
inc
sbb
xchg
pushf
fsubl
adc
push
and
jo
jno
and
and
rcll
cld
imul
cmp
mov
movb
push
adc
push
cmp
shl
xchg
adc
inc
repnz
dec
orb
sbb
adc
in
jns
cltd
fwait
clc
xor
js
jb
icebp
inc
inc
inc
or
shlb
inc
fsubrl
dec
sbb
pop
mov
movsb
loope
pop
xchg
jg
arpl
or
enter
jne
test
cld
in
jae
inc
fldt
sbb
in
ja
jmp
jp
sbb
inc
xor
sbb
imul
mov
sub
or
push
or
in
adc
adc
cs
fistpll
adc
jl
dec
subl
sbb
fs
add
sbb
xchg
mov
mov
add
xor
ret
jno
mov
dec
pusha
in
andb
jg
ficompl
or
mov
test
sub
and
cmpsl
idivl
lods
inc
push
gs
test
mov
or
cmpsl
dec
jmp
jg
sub
cmpsl
dec
or
sbbl
out
in
push
pop
cmp
and
ss
and
rolb
or
xchg
outsb
xchg
sbb
cmp
push
add
fmuls
or
mov
insb
testl
js
mov
mov
cmp
ss
fadds
out
pop
adc
ja
sbb
sub
xor
pop
out
mov
push
jno
xor
ret
lods
adc
movups
mov
lahf
push
inc
cmp
cs
sti
sub
mov
add
jl
je
fs
mov
push
aaa
adcb
pop
shr
sub
shrb
fstl
jmp
sbb
adc
ret
jmp
lock
add
mov
cmc
adc
push
arpl
pop
lcall
xor
mov
loopne
enter
add
pushf
cmp
push
sub
push
mov
mov
mov
sahf
adc
jle
fistl
loope
adc
ljmp
push
js
test
xor
test
adc
es
push
or
pop
mov
and
or
xchg
push
pop
xor
sahf
movsl
jmp
bound
js
ret
sub
loop
movsl
or
pop
ret
inc
adc
pop
xchg
addb
dec
cmp
fdivs
es
lds
mov
push
jb
pop
adc
js
push
bound
mov
xchg
mov
mov
setbe
adc
push
popa
roll
mov
jb
pushl
push
xchg
xchg
jmp
dec
adc
loope
sbbl
popa
pop
jg
mov
xchg
adc
jne
adc
movb
test
insb
or
jae
sbb
int3
inc
push
add
push
mov
gs
xor
adc
cmp
fistl
xor
aad
add
mov
in
loopne
sub
mov
outsl
jae
loope
mov
mov
inc
mov
stos
or
xchg
dec
std
or
jne
mov
mov
inc
mov
or
pop
faddl
test
stc
add
out
inc
insl
push
test
jmp
adc
movsb
ret
aad
sbb
pop
in
loope
adc
jne
dec
in
inc
mov
and
in
clc
incl
outsl
nop
test
movsl
mov
aam
lds
rcll
cmp
in
pushf
add
pop
fsubs
push
out
sbb
jl
push
push
lea
cld
out
jl
lret
push
push
cmp
pusha
and
mov
mov
mov
mov
add
or
pop
and
pop
pop
mov
dec
adc
or
mov
and
mov
add
mov
jo
dec
pop
add
xorl
mov
or
arpl
or
je
sbb
sbb
sbb
nop
inc
mov
cmovs
bound
stos
andb
movsb
xor
mov
movsl
push
sbb
adc
outsl
xchg
add
cmpsb
pop
das
cmp
or
dec
sbb
mov
inc
pop
fldenv
add
push
push
push
insb
jne
jae
data16
iret
jnp
mov
mov
mov
je
fidivs
or
pop
push
pop
arpl
clc
xchg
push
inc
sbb
add
cld
or
cmp
cmpsl
sbb
or
adc
fwait
dec
add
and
or
or
outsl
mov
or
loopne
mov
push
sti
mov
dec
sub
adc
push
or
jno
or
sbb
or
push
sbb
cmp
subb
xlat
inc
dec
lds
sub
mov
fwait
fs
adc
into
sbb
addl
lock
adc
lock
or
jnp
cmp
stos
mov
adc
mov
lcall
jmp
mov
mov
pop
lock
add
pop
push
out
xor
repnz
pop
pop
inc
and
sub
movsl
rolb
jmp
xchg
add
mov
je
enter
lea
inc
mov
movsl
frstor
fs
or
add
nop
inc
enter
sub
and
cmp
dec
sahf
or
push
cli
mov
daa
add
adc
or
fldt
or
mov
sbbl
push
pushf
sub
mov
push
fistps
xchg
or
sub
mov
popf
nop
add
dec
pop
aaa
jae
pop
add
pop
pushf
das
mov
shlb
data16
scas
adc
push
test
adc
xor
add
ret
ds
je
dec
mov
add
push
pop
je
insb
punpckhwd
jno
or
and
dec
adc
push
repnz
xlat
insl
nop
mov
inc
or
xor
inc
sbb
sub
jb
mov
mov
xchg
or
stos
testb
xchg
sbb
lods
xor
in
inc
mov
jmp
add
add
cmp
loopne
insb
in
mov
faddl
ja
pop
fadds
fadds
loopne
pop
movsb
xor
enter
or
add
xchg
outsb
fwait
adc
and
xor
int
adc
out
sbb
and
call
popf
and
cmpsl
adc
shll
and
in
jae
pop
insb
mov
and
ljmp
jge
mov
jo
add
insl
pusha
sbb
push
stos
enter
or
es
add
jne
or
add
xor
inc
jmp
fidivs
add
xor
sbb
dec
add
pusha
push
das
xchg
cmp
jbe
push
inc
xor
test
dec
ljmp
add
sub
sub
jb
data16
testl
push
or
loope
cmp
inc
sub
add
fnsave
inc
push
mov
jmp
push
pop
xor
jmp
test
addr16
mov
std
inc
lea
push
clc
mov
sub
xchg
out
aas
inc
popa
pop
xorb
mov
aam
inc
sbb
push
mov
or
xchg
fidivl
int3
xchg
or
loopne
sub
and
test
push
or
xor
cmp
bound
dec
push
loope
fsts
mov
mov
sub
fs
in
sub
mov
das
js
clc
cmp
sub
call
pop
and
rclb
rclb
jnp
push
and
inc
cmp
push
shll
iret
lret
mov
aam
or
mov
and
insl
adc
pop
sub
xorb
pop
negb
in
mov
in
pop
sbb
nop
addr16
loopne
sahf
testb
call
call
xchg
xchg
das
jo
push
mov
sbb
cmpsb
cmp
in
sub
or
mov
sahf
lea
sub
fisttps
les
shl
push
sbb
pusha
jl,pt
out
sub
sbb
fcoms
stos
cmp
and
add
leave
add
mov
sub
sbb
sub
or
and
mov
les
xchg
jecxz
je
sbb
scas
sub
cmp
sbb
sbb
sub
imul
dec
clc
mov
sub
cmp
nop
and
flds
inc
pop
movzwl
push
xchg
ret
aas
scas
inc
mov
push
jns
cmp
je
mov
jmp
inc
mov
aaa
fs
les
dec
js
dec
aad
insb
jecxz
jmp
inc
repnz
push
pop
add
xor
lods
add
add
dec
add
jne
xchg
movsl
sbb
inc
sbb
add
out
test
adc
movzbl
stos
int3
jb
jnp
adc
or
cmp
bound
mov
cld
push
adc
bound
pop
das
imul
stos
stos
loope
mov
add
enter
push
push
sahf
cmpsb
in
sub
and
lock
jo
xchg
inc
mov
loopne
or
enter
imul
inc
clc
shrl
out
test
not
adc
add
mov
adc
add
scas
cwtl
mov
push
xchg
lea
mov
or
adc
xchg
in
jno
xor
add
scas
lods
inc
pushf
lds
in
jmp
test
push
or
xchg
sub
sub
inc
xor
mov
cs
les
or
dec
faddl
imul
leave
or
int3
imul
dec
fadd
lahf
cmpl
adcb
and
cltd
shlb
cmpsb
sbb
insb
nop
adc
mov
pop
xchg
cld
xchg
pop
fistpll
inc
sbb
lea
rsqrtps
inc
rorl
or
cmovns
mov
loopne
push
das
cs
mov
push
add
cltd
je
mov
mov
pop
xor
lcall
jae
mov
mov
loopne
sub
das
pop
jbe
ja
aaa
push
das
xchg
scas
insb
ss
mov
adc
xor
insb
out
fnstenv
lcall
cmp
sahf
int
mov
mov
out
cmp
cltd
mov
das
inc
ss
out
sti
ds
pop
psubusw
loop
aas
pushf
push
inc
add
inc
xor
fwait
mov
mov
inc
inc
inc
popf
data16
ss
push
repnz
mov
mov
jns
iret
inc
ja
dec
inc
add
insb
sahf
int
pop
dec
push
dec
test
mov
in
fmuls
push
mov
mov
push
mov
push
sbb
pop
les
push
sbb
ret
lock
mov
movsb
dec
sub
jge
push
lret
orb
int3
mov
adc
test
sbb
dec
xor
sub
pop
add
xchg
sub
bound
dec
dec
add
stc
or
ret
or
adc
fcoml
das
test
cmpsl
xor
dec
mov
les
call
fmuls
push
movsb
je
daa
aaa
shl
test
movsb
pusha
inc
jo
stos
fmull
jo
movb
cltd
data16
adc
dec
lock
xor
fs
andl
and
inc
mov
cmp
push
and
or
push
mov
mov
sub
sbb
cltd
and
in
pop
mov
inc
loope
mov
pop
sbb
xor
add
add
push
icebp
push
cmp
adc
mov
xchg
movsb
xchg
fistpl
inc
orl
pop
sbb
ret
sub
xchg
xor
mov
les
cmp
pop
xchg
testb
cmp
mov
daa
aas
hlt
rorl
mov
imul
rorb
inc
dec
and
inc
shlb
js
xor
inc
xor
mov
mov
inc
inc
cmp
lcall
ds
and
roll
inc
rorb
and
adc
test
fmuls
fisttpl
dec
aad
mov
aam
xchg
aaa
inc
scas
adc
dec
xor
dec
daa
add
ss
inc
daa
adc
rolb
adc
out
cwtl
fmull
mov
pop
mov
sub
pushl
lcall
out
dec
adc
sbb
fmull
inc
mov
xchg
xor
push
and
push
je
cwtl
inc
push
sbb
cmp
ret
xchg
sbb
aaa
out
lods
repnz
adc
add
orb
jecxz
pushf
add
sub
adc
cmpsb
mov
adc
outsb
adc
xor
in
or
or
adc
pop
lcall
test
or
and
ljmp
fisttps
out
lds
jmp
ljmp
cmpsb
fdivs
add
cmp
fwait
and
cld
fcompl
dec
sbb
sti
test
sub
add
fsubrl
jno
pop
fsubs
popf
jmp
aad
test
enter
les
lea
mov
movsl
add
fcmovb
adc
inc
ds
popa
add
pop
in
in
dec
sbbl
jnp
push
xor
pop
ret
push
mov
movsb
shl
out
aad
fcompl
aam
add
in
je
jb
loopne
cmp
dec
add
fisubl
and
popf
loopne
xchg
and
insl
test
xor
fdivr
fdivr
lret
inc
data16
addr16
pop
add
rcl
adc
jae
rolb
jl,pn
enter
cmpsl
or
add
and
mov
xor
pop
push
lcall
jecxz
incl
add
inc
rolb
mov
push
mov
cs
in
sub
mov
gs
cs
fists
pop
lods
int3
or
and
pusha
or
sub
pop
test
xchg
inc
cmp
cmp
movsl
movsb
lock
push
mov
daa
subb
je
cmpsl
xorl
push
loop
dec
stos
xor
repnz
and
jmp
pop
xor
push
xor
xchg
xchg
jns
xchg
nop
out
sub
and
hlt
xor
cmp
pop
les
pop
pop
or
pop
mov
xor
cmp
inc
cmpsb
movsb
bound
movsb
popa
or
add
push
xor
add
mov
sbb
mov
cmp
inc
hlt
jge
add
sub
js
adc
mov
mov
mov
and
add
fs
lcall
adc
add
cmp
add
and
nop
nop
adc
add
sbb
std
fdivl
enter
cmc
mov
xor
sbb
test
mov
pop
and
mov
add
add
add
push
dec
mov
pop
out
loopne
add
nop
adc
jg
and
mov
push
xchg
add
and
pusha
jo
scas
mov
cmp
mov
aaa
dec
mov
adc
pop
mov
sbb
scas
out
add
xor
nop
jnp
xor
jo
or
jmp
jo
xor
sbb
lret
sbb
dec
dec
mov
cmp
push
cmp
mov
mov
insl
iret
mov
mov
fildl
or
xchg
inc
cs
pop
inc
int3
cmp
xor
or
out
dec
sub
pusha
xchg
and
repnz
cmpb
mov
movsl
cmp
enter
pop
mov
fldenv
push
push
rcl
data16
repnz
jo
sbb
sbb
jne,pn
mov
inc
arpl
jno
int
xadd
rol
or
sahf
mov
inc
xchg
adc
icebp
ret
xor
and
and
cmp
loopne
inc
dec
inc
add
and
aam
push
add
xor
pop
cmp
jno
dec
fs
sbb
inc
or
push
cmpsb
inc
pop
jbe
call
fs
cmp
cmp
inc
inc
flds
mov
xor
xor
dec
leave
enter
sub
xchg
mov
sub
and
push
jns
mov
and
sub
cltd
and
dec
inc
cmpsb
in
sbb
cmpsb
fs
adc
sti
or
push
mov
cltd
or
add
jb
push
add
add
mov
std
cld
std
clc
std
xchg
mul
xchg
clc
std
jmp
sub
cltd
hlt
lock
movsb
pusha
push
or
in
in
add
inc
call
and
in
push
pop
and
loopne
mov
xor
inc
fnstsw
mov
adc
xorb
inc
push
jg
fmull
push
enter
addb
push
call
rcr
std
sti
and
int
add
and
or
rolb
and
int3
std
or
adc
int3
std
mov
jp
enter
sbb
add
adc
lret
jle
inc
nop
nop
xchg
add
cmpb
lret
lcall
fs
loopne
movsl
rorb
add
sti
orb
std
add
lods
pop
arpl
shll
rolb
test
and
mov
add
mov
and
in
rorb
mov
cmp
adc
loope
inc
scas
sub
sbb
movsl
movsb
out
and
fsubp
adc
jmp
les
movsb
rorb
xchg
loopne
adc
and
cltd
cmp
pop
xchg
inc
dec
fadds
test
and
gs
roll
loope
or
add
push
fisttps
fld
mov
dec
divl
lods
scas
dec
mov
loopne
xor
aad
jmp
cmp
das
and
mov
dec
dec
arpl
inc
push
sbb
mov
push
je
mov
nop
test
in
scas
test
and
add
dec
pushf
mov
pop
pop
push
das
sbb
cmpb
ds
xor
push
loopne
insb
hlt
imul
lahf
gs
cmp
js
push
xor
leave
jl
jo
mov
jo
je
pop
add
shlb
jb
dec
jge
xor
outsl
xchg
popf
je
push
cmp
cwtd
sbb
mov
roll
jge
sbbl
push
ret
test
add
cmc
sub
xchg
pop
fs
and
loop
push
test
pushf
add
or
in
jb
pusha
std
dec
testl
idivl
push
and
xor
xor
sub
mov
leave
push
ret
xchg
sbbl
inc
cs
in
mov
pop
xor
lahf
xor
pop
and
dec
and
push
push
cmpsb
xchg
mov
cltd
xchg
or
push
push
dec
fwait
in
sar
dec
das
into
sub
dec
push
push
das
inc
push
pop
dec
sbbl
jle
cmpsb
std
movsb
inc
arpl
popa
mov
orl
add
add
or
rcl
cmp
jo
pop
mov
and
push
xchg
add
add
cltd
xchg
add
cmp
mov
and
or
movsl
lea
test
xor
push
sbb
sub
enter
mov
push
inc
enter
adc
inc
icebp
adc
lock
push
and
frstor
xor
cmp
int3
orb
xor
adc
pushf
popa
pop
dec
in
in
push
subb
xchg
and
cmpb
mov
sub
cs
shrb
xchg
fnstenv
sbb
sbb
or
fmuls
mov
add
cmpl
push
jbe
and
adc
xchg
mov
or
mov
or
add
lret
mov
adc
mov
mov
testl
cld
cld
pushl
add
mov
push
cs
pop
dec
sahf
jl
push
mov
leave
add
lahf
pop
push
push
leave
es
lock
cwtl
cmp
lock
int3
sbb
push
or
arpl
or
add
add
add
pusha
cwtl
add
sub
in
and
add
push
dec
cwtl
mov
push
mov
ss
push
mov
mov
add
cld
sub
test
imul
push
mov
inc
je
fdivl
pop
sbb
mov
dec
daa
mov
push
cmp
pop
in
pushf
and
inc
cmpsb
sub
loop
cltd
or
pushf
mov
sub
xor
sbb
adc
push
xchg
mov
adc
dec
mov
mov
adc
mov
test
lds
push
cmpsb
sbbb
nop
fsubs
or
jmp
sbb
xchg
aam
jae
inc
pop
loop
nop
jmp
sar
jo
xchg
jbe
pop
and
xor
mov
lahf
test
das
pop
subl
xchg
mov
addb
mov
mov
test
inc
and
jmp
loopne
and
mov
or
rcr
outsl
push
sub
mov
sbb
xchg
mov
das
stc
push
dec
aas
and
popa
and
enter
dec
inc
dec
dec
inc
aas
sbb
xor
sbb
mov
or
rclb
mov
dec
rcl
call
fimull
sub
pop
sbb
loope
fcompl
movsl
cmp
int
jno
js
pop
stos
mov
mov
push
ficoml
dec
inc
movsl
icebp
adc
inc
inc
shl
es
mov
sub
add
or
and
ja
mov
cmp
dec
sbb
jmp
pop
add
repnz
sub
stc
pop
sub
in
fisttpll
xor
sbb
mov
aam
in
jne
mov
dec
pop
sbb
jge
inc
inc
mov
ja
sbb
pushf
pop
popa
je
std
loopne
adc
test
scas
lock
xchg
mov
cmovl
xor
adc
push
test
ret
or
mov
fstl
xlat
inc
lock
sub
fstpl
fwait
mov
dec
xchg
enter
cmp
xor
adc
rolb
je
ds
mov
movsb
or
frstor
or
jnp
in
nop
adc
icebp
or
loope
inc
pop
repnz
out
or
sub
mov
out
mov
mov
push
adc
mov
ret
sub
rcr
cmp
in
adc
xchg
mov
and
push
add
lds
jno
mov
or
ljmp
les
inc
stos
xchg
inc
test
push
orl
jne
pop
in
and
je
add
cltd
mov
cmp
pop
ja
jg
daa
pop
xchg
dec
pusha
xchg
mov
sbb
bound
outsl
bound
cmp
stos
mov
pop
fimull
add
xor
pop
xchg
jo
push
sbb
int3
inc
push
push
mov
fcompl
fidivl
test
popf
cs
mov
add
andb
cmp
inc
push
lea
inc
icebp
push
dec
mov
leave
popa
or
mov
mov
xor
lods
sbb
rorl
pop
xor
sub
ss
das
call
add
in
dec
xor
mov
add
xor
add
popa
adc
inc
stos
mov
cmp
xchg
sub
test
mov
inc
dec
dec
int
push
mov
clc
xchg
inc
cmpb
aas
sbb
cmp
xchg
mov
mov
adc
and
and
hlt
jne
shrb
cmp
xchg
int3
cli
pop
rclb
int3
add
dec
das
aam
pop
bndldx
pop
add
mov
inc
movsl
fs
jne
dec
mov
sbb
addb
lea
jno
mov
arpl
mov
mov
mov
jae
js
or
movsb
mov
and
dec
dec
xor
xchg
pusha
xchg
mov
lods
mov
jae
xor
xor
cmp
lea
out
sub
sbb
rorb
arpl
cmpsb
dec
sub
sbb
xor
mov
jl
aam
add
loopne
imul
mov
rcr
xchg
cli
mov
call
int
xor
or
cwtl
cmp
cmpb
sbbb
sbb
add
sbb
dec
sbb
dec
lea
fdivrs
lods
cmpsl
mov
sbb
jo
imul
daa
loopne
push
loopne
or
mov
data16
dec
xchg
inc
mov
sub
xorb
jle
jl
ljmp
adc
adc
push
aam
ret
cld
or
or
filds
fisttps
movsb
mov
dec
jne
adc
mulb
jne
jecxz
icebp
adc
mov
push
or
and
mov
or
adc
test
aaa
xchg
xchg
in
jmp
sbb
fldt
das
enter
jmp
rcrb
imul
repnz
fiadds
cmp
inc
pop
cmpsb
push
mov
push
mov
mov
ja
enter
fldt
mov
cmpsl
inc
mov
sbb
jmp
push
add
push
filds
mov
push
mov
sbb
add
rolb
or
addr16
pusha
test
aaa
lea
add
push
jno
jnp
sti
mov
sub
pop
adc
jb
popf
push
int3
sub
fstpl
fwait
mov
mov
sarb
aas
shlb
gs
inc
in
jbe
push
and
mov
adc
add
xchg
cmc
and
dec
hlt
fists
cmp
je
shr
cmpsl
xor
mov
shlb
push
mov
pop
push
dec
cmpl
sbb
shl
mov
xor
add
push
xor
inc
pop
push
shlb
xchg
xorl
mov
or
xchg
adc
mov
popf
fimull
adc
sbb
jb
and
pushf
inc
pop
mov
xchg
movsb
inc
jmp
cmc
push
pop
jp
stos
je
mov
sti
mov
inc
je
mov
xor
outsl
lock
push
pop
mov
add
neg
mov
stos
add
mov
jae
test
sahf
add
pusha
adc
ja
lods
add
inc
inc
add
xchg
dec
inc
cmp
xchg
je
out
icebp
mov
push
fs
or
push
ja
xchg
mov
pop
xchg
outsb
adc
mov
mov
xor
mov
aad
jo
movsb
push
fildl
clc
jmp
or
adc
or
loop
inc
les
add
mov
push
adc
mov
add
iret
rol
push
nop
push
jge
mov
shrl
insl
mulb
xlat
add
or
push
mulb
mov
sbb
ljmp
xchg
and
mov
mov
popa
adc
mov
pushf
jl
insb
mov
lea
cmp
or
push
jp
in
add
xchg
dec
push
inc
pop
into
addr16
cld
adc
ss
sbb
rol
popf
sbb
and
jns
cmpsl
push
je
mov
jns
repnz
or
lock
push
dec
adc
or
xchg
rolb
xor
nop
enter
adc
cmp
in
jg
and
mov
jne
nop
popf
or
inc
je
lods
popa
lods
sbb
lea
pop
orl
inc
and
cwtl
add
out
pop
inc
inc
test
nop
sub
es
mov
xorl
sbb
fisttps
lahf
xchg
outsb
je
nop
mov
shrb
cs
js
xor
ljmp
es
or
insl
call
ja
add
pop
sbb
sti
sbb
negl
sbb
mov
jno
mov
aam
imul
add
fwait
xlat
sbb
push
bound
inc
add
rorb
jmp
xor
nop
test
mov
pop
push
add
loope
lahf
icebp
call
in
xchg
sub
mov
scas
loop
inc
outsl
inc
test
mov
push
nop
mov
lea
fimull
popf
jae
mov
mov
test
mov
sub
cltd
mov
sbb
pushf
adc
mov
or
in
jne
sbb
outsl
out
jb
adc
lock
mov
push
loope
lock
jo
in
adc
movl
ret
insl
add
data16
jmp
mov
inc
adc
xor
add
xchg
pushl
add
jo
xchg
int3
out
out
cmpl
jno
or
sbb
inc
xor
or
adc
addr16
pop
push
add
push
das
je
fiadds
hlt
ds
mov
adc
inc
xor
xchg
xor
aad
cmp
add
jae
add
sbb
outsb
mov
or
mov
or
jecxz
push
add
das
cwtl
movb
push
clc
sbb
rolb
jg
sete
js
adc
add
into
pusha
xor
push
inc
mov
mov
adc
mov
das
dec
add
lds
enter
cmp
cmp
jl
int
js
sbb
lock
add
aam
push
mov
dec
cmpsb
movsl
aaa
fucomip
pop
push
sbb
sbbl
add
xchg
dec
in
daa
xor
aaa
dec
dec
xor
in
inc
loopne
xor
and
pop
mulb
daa
call
in
push
fdiv
lcall
aam
inc
outsb
sahf
incl
or
mov
inc
int3
or
daa
lahf
dec
int3
sub
clc
leave
and
or
pop
das
daa
xchg
les
outsb
pop
xchg
or
xchg
in
rclb
test
mov
push
daa
sbb
mov
faddl
dec
xor
mov
mov
or
push
cmp
mov
lods
adc
cmpb
adc
and
and
fadd
movsb
adc
cs
fs
xchg
mov
or
in
pushf
inc
push
pushf
fs
or
cmp
cwtl
pop
add
cltd
cwtl
xor
les
cmpsb
iret
ja
and
jmp
cs
xor
cmp
divl
enter
cmp
aam
push
sub
push
xchg
or
nop
sete
mov
pop
leave
leave
cs
mov
insb
daa
lahf
sub
test
ja
addb
fwait
lcall
lods
dec
ficoms
sub
pop
sbb
sub
and
daa
sub
cs
cmpsl
xchg
daa
jl
jnp
jb
jo
sub
xchg
pop
jb
add
in
xchg
add
add
xor
fs
add
leave
and
pusha
add
sub
add
jb
pop
xor
loopne
ret
mov
push
jmp
in
stos
xor
xor
push
push
sub
leave
xchg
or
push
push
xor
dec
dec
xor
aaa
mov
sub
jmp
and
inc
fdiv
xchg
inc
sub
fdivl
sub
sub
in
sub
jmp
jb
xor
je
jb
xchg
dec
or
sub
daa
xchg
pop
jb
or
fs
dec
outsb
fwait
sub
sub
hlt
and
and
dec
outsb
daa
adc
or
and
push
and
xor
cmp
xor
nop/reserved
in
mov
dec
adc
xor
and
xchg
dec
cmp
or
leave
and
adc
dec
cmp
xor
adc
push
adcb
xchg
and
jl
xor
add
add
sar
fdivp
ss
sub
fdivp
ss
sub
sahf
mov
hlt
in
lock
push
lock
sub
mov
and
lock
pop
push
or
loope
mov
lods
aad
fcompl
jg
sub
dec
pop
pop
leave
ljmp
cmp
arpl
jo
dec
pop
or
ret
popa
jge
or
test
xor
mov
mov
and
jae
inc
aas
jo
cmp
sbb
jle
andl
xor
add
dec
insl
cli
loop
dec
xor
adc
lcall
lods
sub
push
or
repnz
test
mov
inc
fbld
mov
aas
sbbb
idivb
xorb
adc
push
sbb
push
inc
sbb
and
sub
jmp
insl
inc
cli
fimuls
adc
lock
sub
ficoms
push
add
xor
dec
sbb
jg
cwtl
sub
adc
cmc
mov
and
lcall
mov
mull
sub
and
insb
fsub
test
movsb
fwait
hlt
xchg
push
mov
pop
outsb
adc
jp
movhps
push
adc
add
xchg
test
jno
rcr
lahf
jmp
inc
mov
das
mov
mov
cmpsl
dec
adcb
cld
mov
inc
and
sbb
sub
and
in
pop
adc
pop
xchg
jg
inc
adc
cli
je
mov
sub
pop
movl
int3
push
ret
inc
das
loopne
mov
add
adc
sbb
cwtl
or
xor
xor
sbb
jmp
and
mov
addb
xor
sub
push
cmp
jecxz
and
cld
orl
mov
jo
xor
js
add
pop
movsb
pusha
adc
xor
or
and
jno,pn
stc
pop
mov
les
mov
decl
inc
fldl
int3
jg
sub
movsl
mov
inc
nop
inc
insb
jl
add
sub
cmp
test
fwait
or
adcb
test
cld
nop
add
inc
pop
adc
push
mov
test
dec
lds
jl
and
aaa
inc
inc
rcrl
inc
dec
sub
cs
addl
bound
or
dec
xor
mov
add
xor
xor
pop
cmp
or
sbb
sub
add
mov
mov
inc
fisttpll
add
mov
push
cmp
xor
int
and
cli
mov
mov
ficomps
mov
cli
repz
mov
test
cmpsl
test
ds
inc
shlb
or
ds
cmc
fdivrl
lods
cmpl
inc
or
xor
mov
add
imul
addb
inc
dec
push
inc
cmp
jnp
shlb
add
dec
dec
repnz
addl
mov
ljmp
ja
pop
arpl
cmpb
scas
ss
aad
xchg
hlt
push
xor
ljmp
lcall
or
jg
fldcw
orb
mov
mov
mov
jnp
scas
or
sbb
or
push
nop
sbb
mov
jmp
push
push
popf
add
xorb
lret
xchg
mov
xchg
ss
xor
or
fmuls
mov
ljmp
outsb
mov
jo
lods
pop
sbb
xchg
rolb
push
jp
rcr
mov
data16
jg
lahf
enter
dec
inc
pop
divb
scas
lahf
adc
test
incl
adc
dec
sti
aas
xchg
outsb
add
jbe
mov
mov
inc
push
xchg
dec
bnd
ds
sub
add
or
lock
mov
xor
inc
adc
gs
push
inc
dec
cmpl
in
je
mov
mov
adc
aaa
nop
xchg
stos
cmp
add
mov
pop
sbb
jecxz
or
add
cs
push
add
inc
loop
add
push
add
mov
mov
gs
or
jo
inc
sub
cs
insl
jns
ret
cmp
xor
add
hlt
lea
sub
adc
lock
ds
in
aaa
in
mov
cmp
mov
call
shrl
mov
stc
mulb
loopne
push
loopne
or
mov
fdivrl
dec
push
push
je
push
loope
pop
push
loopne
movsb
clc
or
and
or
adc
enter
mov
mov
adc
cmp
jge
push
jo
adc
jno
and
scas
movsl
adc
lds
or
addl
sub
movsb
pop
pop
test
outsl
mov
js
add
jmp
and
add
fsubrs
adc
hlt
mov
pop
incb
ss
insb
push
push
fcoms
popa
lods
pop
xchg
imul
popf
repnz
daa
mov
jo
and
mov
stos
call
nop
pop
sarb
adcb
jecxz
ror
icebp
fwait
addl
imul
xchg
sbbb
fsubrs
addr16
sbb
cmp
mov
cmc
and
push
jbe
mov
xor
rorl
sahf
sub
insb
pop
xor
cmp
imul
sub
les
mov
xor
and
jns
js
add
loopne
stos
adc
sbb
add
push
sub
sarb
and
daa
or
mov
popa
dec
add
push
dec
jae
addb
xor
adc
sbb
lock
pop
mov
mov
cmp
jne
push
sub
mov
mov
add
or
jecxz
cld
xchg
int3
xlat
imul
nop
xchg
out
pop
repnz
rcrb
push
ret
cmp
hlt
jo
adc
fcomps
xchg
mov
mov
and
rcrb
faddl
das
push
push
add
sub
or
sbb
mov
inc
xor
xchg
jnp
repnz
push
and
scas
cwtl
imul
loopne
sbb
adc
aam
mov
sbb
xchg
adcb
orb
jecxz
cmp
leave
rclb
and
jg
mov
sbb
popa
xor
or
out
les
addr16
adc
push
and
adc
push
or
lret
test
les
sti
sbb
mov
xchg
shlb
enter
nop
iret
lea
int3
sbb
xor
sbb
js
jo
jmp
fstpl
sub
ds
xor
jle
loope
mov
or
clc
jno
icebp
push
inc
push
les
jecxz
or
dec
inc
or
fadds
fsub
mov
mov
lock
push
xchg
add
fs
inc
xor
lods
xor
adc
imul
inc
and
push
dec
pusha
xchg
xor
test
xchg
pop
mov
call
adc
cmp
nop
and
loopne
out
fwait
pushf
add
les
push
xlat
push
nop
das
in
or
jb
std
subl
js
mov
adc
shrl
loop
push
cwtl
and
add
test
jo
call
pop
inc
xchg
sbb
test
jp
jbe
pop
leave
or
xchg
ror
ljmp
add
mov
push
pop
setb
jl
sbb
sub
push
movsb
xchg
nop
sub
inc
aam
mov
ja
jnp
sub
mov
insl
nop
push
adc
lsl
sub
dec
xor
adc
adc
push
jne
xor
or
mov
add
jge
out
adc
leave
dec
mov
add
add
xor
fs
sahf
ds
and
mov
inc
dec
nop
push
sub
inc
lods
sub
popf
xchg
jmp
mov
add
mov
dec
push
mov
out
sub
xchg
lock
pusha
add
sub
push
repz
scas
bound
jne
sub
xchg
pop
adc
inc
jg
and
insb
lods
xchg
in
imul
mov
pusha
or
mov
add
or
pushf
lea
push
in
push
xchg
insl
fwait
sbb
js
inc
daa
xchg
mov
test
movzwl
je
jg
je
push
ret
adc
pushf
addr16
cwtl
jp
adc
pop
or
fwait
lea
pop
pop
popa
or
sub
cmpsb
ficoms
adc
add
dec
scas
mov
push
in
cmp
or
mov
lods
jmp
cmp
push
dec
inc
push
xchg
inc
push
push
mov
fistpll
mov
nop
lods
xor
ja
mull
push
pop
data16
je
or
inc
mov
or
loopne
push
xor
loopne
push
mov
and
dec
sub
xchg
add
add
or
insl
sbb
sub
adc
inc
mov
add
test
jb
inc
mov
xchg
notb
inc
cmp
ds
pop
inc
or
inc
addr16
adc
sub
cld
mov
cmp
mov
mov
jge
push
cmp
adc
xor
xor
jne
xlat
stc
ret
and
stos
xchg
jmp
hlt
pop
loopne
lock
xchg
shll
or
mov
add
test
sub
add
jo
andl
or
adc
xor
mov
clc
dec
lahf
pop
mov
jae
xchg
in
xchg
dec
push
sbb
inc
popf
test
mov
xchg
cmp
pop
pop
in
dec
adc
xor
sbb
cwtl
ds
push
add
fimuls
test
pop
xchg
lea
mov
shlb
mov
sbb
ret
dec
cmp
and
add
adc
fucom
mov
mov
lods
sub
or
jne
cwtl
push
mov
sub
ljmp
push
dec
testl
andl
mov
push
and
mov
xor
pop
mov
push
dec
mov
sub
pop
xchg
shrb
adc
mov
xchg
xchg
popf
or
sub
inc
jp
cmp
insl
in
gs
xchg
cmp
adc
mov
mov
mov
fstpl
or
rcrb
inc
xchg
popa
xor
aas
in
push
cmp
sbb
aad
lods
movsb
sbb
add
nop
nop
aas
jbe
rcrl
jg
inc
out
pop
mov
xchg
cs
pop
add
push
icebp
adc
cld
movsl
add
imul
mov
test
hlt
push
add
outsb
or
pop
lret
or
adc
xchg
push
add
sub
mov
cmpl
inc
stac
mov
mov
sub
loopne
lahf
add
mov
sahf
cmc
and
adc
push
jb
cmp
jne
add
fcomp
push
mov
lock
sub
popa
mov
mov
push
mov
mov
push
mov
add
fmuls
push
popa
pop
push
add
rcrb
or
or
in
lds
mov
test
addps
lods
popf
mov
mov
sbb
add
sti
fstpl
sbb
pop
gs
sbb
pop
or
push
jnp
jle
jne
xchg
jne
pop
or
dec
xchg
movsb
push
loopne
or
je
dec
ud2
inc
adc
add
gs
and
xchg
aam
jmp
xchg
mov
sub
repnz
loopne
fnstcw
inc
enter
sub
jbe
add
jo
cmpsl
nop
xlat
inc
pop
add
mov
in
jmp
dec
jo
sbb
mov
sbb
or
insl
pusha
dec
mov
loopne
push
aam
inc
cmp
push
ss
hlt
jnp
mov
sbb
xor
mov
popa
je
pop
mov
leave
insl
push
loopne
sub
adc
push
ss
and
lods
xchg
cld
lock
dec
cmp
push
in
addl
cld
insl
shl
sbb
and
inc
push
push
or
cltd
mov
aad
mov
jb
sub
daa
pop
add
dec
mov
adc
jbe
sub
sbb
stos
std
mov
sbb
mov
lahf
les
inc
int
add
mov
movsl
cmp
loopne
outsb
sbb
addr16
jb
in
in
hlt
cmpsl
push
pop
cs
dec
push
adc
lahf
decl
mov
add
mov
das
mov
leave
mov
cmp
mov
and
mov
lret
add
mov
pop
push
rolb
cs
pop
lods
or
sbb
popa
adc
sbb
sub
xor
adc
leave
insl
adc
adc
and
cltd
js
inc
outsb
push
out
test
xchg
es
mov
jnp
and
inc
stos
and
mov
in
sbb
jno
movsl
pop
decl
push
mov
es
les
inc
mov
test
andb
mov
rcll
daa
adc
mov
call
negb
orps
jo
fsubrl
push
pop
add
stc
dec
aam
pop
mov
inc
jno
sbb
xchg
dec
and
fwait
push
adc
dec
xchg
pop
enter
pop
mov
int3
test
mov
inc
fstpl
je
cmpsb
movsl
mov
cs
pop
ret
add
or
je
or
add
inc
add
mov
in
cmpsl
mov
pushf
das
dec
add
daa
mov
shrb
cs
sub
and
les
fmuls
out
sbb
adc
mov
std
jbe
fsubl
ss
aas
pop
dec
scas
jmp
movsb
lea
leave
movsb
xchg
mov
and
andl
push
gs
outsb
gs
jmp
adc
xchg
sbb
push
dec
jo
iret
leave
cmp
push
adc
movsb
lahf
xchg
dec
jmp
cmp
adc
push
rcrl
test
pusha
add
scas
mov
cmp
jno
cmp
aad
hlt
xchg
jno
push
mov
cmp
mov
mov
inc
pop
push
add
cmp
movl
int3
push
and
pop
nop
sbb
add
cmp
xor
int
xor
hlt
cs
dec
sbb
js
fs
lods
rclb
sbb
xchg
jbe
sarb
or
loop
mov
or
add
push
ja
pop
loopnew
push
mov
out
sbb
pop
fwait
into
and
adc
adc
xchg
mov
add
lods
call
cwtl
inc
inc
ret
scas
jne
test
or
aam
test
test
daa
fs
dec
dec
mov
je
lahf
mov
pop
sub
stos
push
and
mov
scas
shrb
sti
jne
mov
call
pusha
jg
loope
inc
bound
sub
or
xchg
push
add
xchg
inc
scas
dec
call
insl
inc
je
xchg
cmp
jae
fstps
aas
pusha
lea
push
xchg
mov
push
std
lock
dec
pop
push
je
xchg
ljmp
sbb
sbbb
xor
bound
add
or
loope
pop
mov
or
popf
test
sbb
shll
aam
fcoms
mov
cmc
mov
cltd
inc
push
stos
scas
inc
xchg
dec
sbb
fistpll
loop
sti
movl
xor
aad
sbbl
dec
inc
mov
enter
mov
mov
mov
scas
in
push
and
jmp
dec
mov
mov
xor
rep
xor
jo
jno
add
stc
push
rolb
add
push
aad
mov
inc
into
lods
push
adc
push
lods
icebp
sbb
pop
aad
dec
outsl
in
aam
push
adc
shlb
lock
ffree
pop
push
jg
sbb
adc
sarb
and
loopne
jb
or
mov
mov
xchg
int
mov
out
int3
xchg
icebp
aaa
lods
mov
movl
sub
xchg
stos
mov
inc
and
test
and
lsl
icebp
mov
mov
push
stos
in
add
lods
pop
pop
mov
mov
shlb
mov
ja
push
inc
sub
mov
add
add
les
add
and
lods
xchg
mov
xor
icebp
fs
lods
cmp
xor
addr16
loope
cmp
test
pusha
mov
dec
out
dec
scas
inc
inc
negl
loop
add
scas
inc
mov
push
fwait
dec
mov
pop
repnz
sbb
inc
xchg
jmp
xchg
sbb
imul
cmp
jne
es
dec
shlb
sbb
pop
lock
push
push
mov
push
scas
jmp
add
push
subb
push
bound
sbb
in
iret
mov
jne
les
dec
mov
out
movsb
dec
out
lret
push
jmp
lahf
dec
scas
ret
inc
repnz
adc
dec
jl
and
pop
call
inc
mov
jl
es
mov
mov
mov
add
adc
mov
shll
mov
adc
mov
add
enter
cmc
mov
testl
mov
adc
bswap
dec
fadds
or
sub
jle
push
pusha
pop
jno
xor
or
or
call
xor
and
dec
sbb
jae
add
pop
es
sbb
lcall
stc
adc
add
imul
or
in
pop
ss
mov
and
rolb
in
nop
or
mov
pop
dec
dec
and
or
add
test
loopne
pusha
in
mov
lods
aam
andl
mov
sub
mov
and
cmpl
das
jmp
push
cs
insb
jae
sti
inc
push
cmpsb
push
mov
fs
dec
hlt
ret
shlb
push
or
loop
mov
dec
mov
mov
inc
cmp
lods
lods
scas
push
shrl
sbb
loopne
loope
add
mov
mov
or
add
push
push
push
fidivrl
and
mov
cli
inc
shrb
mov
out
call
jno
rorb
jbe
push
mov
mov
test
test
add
jmp
adc
jmp
mov
or
mov
mov
das
and
inc
and
cwtl
or
add
pop
xor
fnstcw
and
sbb
dec
sub
jbe
or
movsl
pop
xor
inc
sbb
mov
repnz
scas
xor
movsl
fwait
dec
dec
and
xchg
mov
pop
shl
xchg
xchg
mov
shlb
call
mov
mov
aaa
loope
bound
daa
outsl
fsts
test
adc
push
in
outsl
in
dec
push
fnstenv
push
add
daa
cmp
lods
add
and
mov
mov
jne
ja
imul
xlat
mov
fmuls
leave
inc
xchg
add
xchg
movsb
jns
add
inc
push
pop
es
adc
push
dec
mov
int
shlb
wrmsr
sbb
jb
dec
jne
loopne
shrb
daa
and
pop
pop
pop
fs
xchg
mov
mov
stos
cmp
xor
or
cmpsl
sbb
cltd
inc
push
adc
aaa
mov
xor
cmpsb
rcrl
add
mov
dec
push
inc
inc
add
daa
pop
push
das
pop
into
rsm
mov
mov
adc
es
jb
xor
je
xor
and
loope
in
scas
rorb
daa
mov
mov
enter
test
dec
int
mov
pop
xor
push
loopne
mov
vfmsub213sd
insl
cmp
cmp
add
ja
sub
mov
in
inc
sti
mov
push
movsl
test
xchg
iret
lock
hlt
sbb
insl
add
sbb
aas
mov
and
xchg
mov
popa
and
cmp
cmp
cmovne
sbb
add
inc
cmp
pop
fsubrp
or
dec
or
rol
clc
cmp
jb
push
mov
sbb
adc
ror
aaa
xchg
insl
pusha
sti
rep
cmp
in
int
push
pop
subl
and
sbb
inc
enter
fwait
add
es
xchg
inc
pusha
ja
sbb
push
and
push
push
shr
test
into
hlt
rorl
add
sub
fwait
push
mov
test
out
stos
rcrb
pop
jo
pop
bound
test
and
mov
insl
aas
push
mov
or
inc
pop
lds
sub
mov
adc
imul
mov
test
stos
lods
push
mov
mov
lea
jmp
cmc
add
movsl
adc
idivl
mov
or
pop
insl
adc
inc
ss
push
xchg
scas
jecxz
repz
cmpsl
or
inc
mov
xor
push
adc
cmovno
push
out
xor
mov
repz
ja
sub
std
push
add
inc
dec
lahf
sbb
inc
pusha
add
daa
test
daa
mov
movsl
leave
and
and
xor
mov
fnstsw
xchg
mov
and
dec
sub
xchg
mov
push
in
mov
shlb
je
cwtl
and
and
pop
pop
shrb
add
shll
or
push
loope
enter
mov
ljmp
mov
es
push
rcl
or
cwtl
inc
sarb
inc
ds
adcb
or
idivl
add
repz
adc
les
add
std
xchg
mov
cwtl
out
add
inc
sbb
imul
stc
jne
cmpsb
imul
add
jne
movl
push
cmc
push
es
jne
decb
mov
pop
jnp
dec
jae
dec
jb
or
in
push
outsl
xchg
arpl
jno
and
mov
out
fstps
adc
in
push
mov
cmp
adc
dec
mov
xchg
cld
int3
std
sar
push
incb
push
add
insl
sbb
in
push
je
mov
ss
popa
mov
mov
imul
add
adc
adc
fs
sahf
addr16
and
hlt
in
mov
movsb
je
int3
push
pushf
stos
push
cmp
adc
in
repz
scas
fadds
cwtl
mov
negl
mov
add
add
leave
xchg
sarl
jle
divl
push
add
fcmove
repz
enter
pusha
jecxz
int
popf
mov
divb
cmc
in
loop
mov
inc
aam
rclb
add
aam
repz
mul
sbb
push
loope
nop
lcall
add
jle
push
push
clc
cld
jnp
cmp
pop
jle
push
or
add
mov
push
cmp
add
test
add
aam
lahf
idiv
insb
add
adc
js
mov
mov
add
dec
sbb
int3
pushf
mov
insb
incb
mov
add
jbe
sub
jns
iret
xchg
cld
int3
cltd
rclb
int
lahf
mov
mov
out
sahf
mov
sub
cmp
mov
repz
inc
aad
js
sbb
lahf
data16
data16
fdivr
cld
dec
push
sbb
aas
fwait
out
push
push
and
push
je
jae
iret
out
aam
test
js
pusha
and
jns
iret
repz
adc
jns
mov
cmp
loopne
pop
and
iret
aas
fwait
push
es
sbb
or
dec
pop
insb
repz
jnp
push
movsb
je
lods
fsubp
popf
addr16
adc
ds
imul
rep
insl
mov
mov
frndint
mov
lods
hlt
cld
int3
add
sbb
sbb
iret
repz
cmc
xor
add
cmp
sahf
jg
sti
test
add
mov
cmp
addr16
stos
cld
int3
movsb
cwtl
push
push
sub
mov
cmp
sbb
sbb
lods
push
jl
popf
int
in
nop
movsb
cmpsb
movhps
xor
repnz
ret
cmp
scas
add
push
dec
xor
mov
add
aas
aaa
fildl
adc
pop
adc
add
dec
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
add
adc
inc
mov
xchg
into
push
sub
pop
add
imul
and
popa
je
xor
xor
inc
sbb
cmp
incl
add
and
sub
int
rorb
and
mov
int
cmp
inc
add
out
outsl
sub
mov
ds
in
mov
cs
mov
mov
and
cs
nop
cwtl
mov
mov
and
adc
mov
lock
adc
pop
and
xor
leave
inc
inc
pusha
inc
jb
pop
andb
loopne
add
and
cs
mov
and
add
shlb
mov
xchg
pop
leave
inc
lock
add
loopne
push
mov
adc
shlb
adc
orb
or
or
and
xor
andl
push
insb
pusha
xchg
push
adc
aad
pushf
popa
movsl
mov
add
addb
fists
inc
int3
jmp
or
sbbb
es
repz
add
push
movsb
lods
mov
repz
mov
in
int
cmp
hlt
cld
xchg
add
jns
out
adc
and
xor
jns
out
inc
dec
push
pop
sahf
out
sahf
fs
je
test
pushf
movsb
lods
mov
adc
out
les
push
insb
loope
mov
xor
sbb
cmp
xchg
or
xchg
sbb
pushf
pushf
jo
cwtl
jl
xor
daa
addr16
xchg
pop
lcall
bound
cld
cmpsl
xchg
movsb
or
mov
fsts
mov
out
pop
adc
push
cld
jle,pn
pop
or
adc
mov
add
push
enter
ss
in
cld
pop
or
xor
push
fs
xchg
jns
out
movsb
mov
aam
jnp
int3
out
pop
or
add
adc
iret
arpl
shl
daa
fildl
inc
and
incl
incl
cmovs
and
gs
adc
adc
aas
add
enter
inc
pop
mov
outsl
lea
lret
mov
sub
add
not
lock
add
or
adc
andb
inc
in
xor
rol
imul
xchg
xchg
ljmp
repnz
mov
pushf
add
mov
xchg
mov
jg
cmpsb
lret
call
stc
out
out
mov
orb
add
or
inc
mov
adcb
in
xchg
adc
into
sbb
hlt
sbb
and
enter
inc
or
sbb
jb
test
cwtl
add
pop
mov
pop
xor
sbb
pop
inc
in
sub
xchg
out
les
push
push
mov
sbb
jb
movsb
add
in
insb
lret
xchg
add
push
js
nop
dec
cmp
jae
cmpb
sbb
xchg
or
in
xchg
mov
test
pushf
int3
mov
int3
out
in
rclb
cs
adc
lods
push
xor
and
pop
stos
pop
sti
xor
cmp
or
mov
inc
push
inc
or
punpckldq
jbe
sub
add
int
incl
add
adc
sbb
nop
pop
jmp
loope
sbb
dec
and
in
sbb
adcb
and
xor
cs
adc
and
xor
sub
mov
jle
mov
jbe
mov
or
pmulhuw
in
or
unpcklps
shl
in
adc
cmp
adc
in
or
adc
shl
in
pop
add
cmp
rcll
aaa
cmp
push
or
add
and
repz
sub
xor
dec
fs
int
cmp
push
insb
jecxz
fldenv
loope
cmc
fdivl
testb
xlat
fdivp
test
enter
and
inc
out
push
sahf
out
sahf
sbb
cmp
jns
out
adcb
out
loopne
cli
add
iret
repz
sbb
inc
push
pusha
je
xor
cmp
roll
xor
sub
add
push
mov
inc
mov
cld
aam
in
clc
clc
in
xchg
das
xor
mull
divb
dec
hlt
pop
rep
repnz
xchg
and
lock
mov
in
in
loopne
hlt
jmp
add
nop
pop
popf
mov
sub
xchg
add
xchg
push
call
xor
or
ficoms
add
pop
sti
fists
add
or
or
iret
add
adc
lods
lods
pop
add
push
xchg
rcrb
leave
sbb
inc
iret
or
add
daa
or
outsl
inc
add
cmp
ja
adc
fcmovnbe
movsl
pop
pop
add
das
add
call
scas
adc
ss
add
xchg
pop
xchg
inc
add
xchg
pop
add
outsl
xchg
stc
mov
mov
sti
cld
std
out
sahf
out
incb
add
sahf
out
sahf
addb
adc
add
rorl
out
sub
out
pop
push
pushf
push
movsb
lods
mov
jb
iret
repz
in
cld
jae
jne
out
sbb
cmp
cmp
jmp
mov
in
fnstcw
in
hlt
cld
sbb
push
fdivr
fistps
jmp
pop
ja
popa
push
out
mov
les
hlt
push
xor
jmp
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
jg
test
sbb
adcl
adc
test
fs
std
in
dec
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pushl
mov
inc
aam
dec
std
test
movsl
cli
test
xor
leave
mov
stc
mov
xor
filds
or
shrl
cmp
ficoms
push
xlat
enter
jmp
mov
and
mov
cltd
xchg
mov
mov
or
or
and
jmp
outsl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
lret
call
aad
mov
mov
mov
add
pop
js
stc
push
ljmp
sbb
push
sub
insb
fs
add
hlt
push
imul
fwait
and
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
inc
hlt
or
fnstenv
adc
mov
mov
bound
ficoml
repz
mov
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
push
dec
xlat
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
ljmp
add
pop
dec
or
cmp
add
daa
adc
or
and
mov
push
mov
outsl
and
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
flds
pop
orl
mov
decl
loop
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
jmp
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
decl
lock
add
inc
push
imul
xorb
sbb
push
imul
call
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
call
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
jmp
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
mov
mov
pop
mov
add
mov
cmpsl
call
ret
shlb
sbb
ret
jmp
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
mov
mov
loop
sub
or
mov
xchg
or
out
fdivrl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
ja
out
clc
inc
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
lcall
sar
imul
push
js
or
push
addl
mov
cmp
addr16
jmp
dec
inc
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
test
jg
mov
jmp
repnz
lret
mov
cmpsb
mov
sar
mov
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
pushl
filds
sub
inc
arpl
fcmovnu
sub
push
imul
insl
dec
outsb
dec
filds
jo
jno
jb
pop
push
jne
jbe
jmp
push
js
jns
jp
out
cmp
iret
into
sub
fwait
int
push
fcmovnu
rcr
add
pop
call
fbld
mov
movsb
idivb
sub
cmp
pop
stc
or
int3
pusha
hlt
jns
out
push
add
adc
xor
mov
pusha
add
cmpsl
xlat
add
push
pop
in
mov
mov
pop
mov
fwait
cld
repz
or
adc
fstpt
and
add
adc
add
mov
add
in
fucomip
pop
orb
push
and
or
adc
pop
push
jo
mov
jmp
mov
outsl
test
push
or
jns
repz
push
pop
sbb
iret
repz
repz
cmp
add
pop
adc
cmp
repz
or
iret
repz
adc
adc
cmp
repz
enter
repz
repz
test
cld
repz
cwtl
add
push
jl
jns
iret
cmp
sahf
pop
insb
sub
out
sahf
mov
add
out
push
adc
sahf
out
les
bound
sahf
out
sahf
movsb
add
sahf
out
pop
sbb
out
aam
push
sahf
out
sahf
mov
mov
add
push
push
add
add
jbe
out
sahf
ss
pcmpgtd
lods
jns
out
push
xchg
or
jns
out
push
pushf
arpl
iret
jnp
fcompl
push
outsb
cs
push
push
push
mov
call
pop
icebp
sbb
adc
cmp
leave
ret
mov
iret
addl
iret
leave
xchg
jns
shrb
cmp
repz
pusha
iret
leave
repnz
adc
leave
repz
pushl
lret
cmp
repz
add
leave
repz
pop
sbb
repz
cmp
insl
sub
repz
dec
cli
push
adc
repz
cmp
jae
iret
repz
arpl
cmpsb
add
cmp
pop
sbb
jnp
imul
repz
mov
mov
cmp
and
aaa
into
cmp
repz
addr16
scas
pop
xchg
leave
repz
out
pop
pop
sahf
fmulp
repz
jg
fisubrs
das
aad
mov
push
dec
incl
mov
loope
rcll
leave
test
leave
and
jb
test
jb
fnstcw
stc
pop
enter
pop
enter
mov
and
jb
int
jb
pop
jb
popf
fldl
and
mov
enter
pop
enter
shll
repz
jb
pop
jb
jmp
pop
jb
pop
fstpt
and
cmpsl
pop
enter
xchg
xlat
xchg
pop
enter
jb
pop
jb
scas
out
pop
jb
pop
lahf
fistpll
jle
jle
push
add
adc
pusha
int
add
add
ficomps
push
adc
add
adc
add
push
inc
push
jle
sbbl
sbb
push
popa
pusha
rclb
add
xor
or
or
mov
mov
jns
outsb
mov
pop
sub
lcall
push
test
jb
push
psllq
mov
pop
or
inc
movd
add
pop
pop
negb
or
jp
add
or
cmp
jecxz
loop
adc
daa
daa
daa
adc
adc
add
es
or
inc
jo
rolb
dec
or
push
andl
shll
mov
sbb
xorl
inc
pusha
xor
pop
fiadds
xor
push
add
repz
pop
sbb
sbb
sbb
movsl
lock
inc
das
pop
cs
push
add
add
in
add
push
cmpsl
xchg
leave
leave
insl
push
pop
pop
or
lret
leave
leave
leave
or
or
sti
push
movsb
push
aaa
testl
mov
dec
int3
sub
insb
jns
out
in
sbb
pop
fsub
jns
out
mov
out
sahf
addb
mov
jns
adc
sahf
out
mov
repnz
dec
lret
push
sahf
out
ljmp
sahf
out
mov
out
sahf
xchg
cmpsb
data16
out
out
xchg
push
out
sahf
out
mov
testb
out
sahf
mov
cs
outsb
jns
out
out
push
sahf
pop
fsubp
jns
out
mov
out
sahf
addl
sahf
out
loope
xchg
push
shl
jns
out
mov
icebp
or
dec
leave
sub
jns
sbb
sahf
out
mov
out
sahf
test
and
out
in
xchg
push
aad
jns
out
mov
cmc
or
lea
sub
out
in
sbb
jns
out
mov
or
repz
xchg
push
push
sarl
repz
xor
mov
repz
repz
repz
repz
or
cmp
repz
sub
stos
stos
repz
repz
sbb
repz
sbb
cmp
repz
cmp
mov
repz
sti
sti
pop
iret
repz
pop
xchg
iret
repz
daa
daa
cmpsl
cmpsl
repz
repz
pop
iret
repz
pop
xchg
xchg
push
push
xlat
cmp
repz
aaa
aaa
mov
repz
repz
div
bswap
repz
jg
cmp
repz
das
das
scas
scas
repz
rep
outsl
out
out
pop
iret
repz
pop
lahf
lahf
pop
pop
fistpll
repz
aas
aas
mov
repz
jmp
jns
xlat
or
and
push
sahf
out
sahf
xor
dec
sub
sahf
out
sbb
js
out
sahf
out
and
adc
jns
jnp
xor
add
lret
add
ljmp
push
or
add
out
sahf
adc
sbb
adc
jns
out
sbb
push
push
push
out
sahf
out
adc
sbb
adc
or
pushf
out
sbb
pop
or
das
aas
push
daa
lcall
push
adc
cmpsb
imul
imul
imul
scas
push
xlat
or
sbb
fucomi
pusha
xchg
sarb
pop
nop
or
stos
jl
push
out
cmpsl
rcr
daa
clc
cld
loopne
add
dec
ret
jge
hlt
jb
adc
adc
pop
or
or
or
add
add
jns
xchg
stos
push
add
or
in
or
or
xchg
mov
or
push
sub
cs
pcmpeqw
sub
push
jb
daa
mov
pop
sbb
xchg
pop
and
sbb
push
jb
jb
sbb
cli
dec
xor
je
mov
pop
enter
adc
test
sbb
incl
and
sbb
movsl
push
push
lea
xor
sbb
push
sub
fs
hlt
ja
xchg
inc
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
mov
dec
jle
mov
sub
dec
sbb
xchg
ret
and
push
shll
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
call
cwtl
sbb
sub
test
sbb
insb
fistpll
inc
aam
lcall
and
xchg
jecxz
lahf
mov
inc
mov
popa
ja
mov
out
repz
mov
fisubrl
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
incl
or
sbb
repz
fbstp
push
jo
xor
hlt
div
sub
jne
lcall
xor
pop
nop
sti
mov
test
jns
test
cmp
jns
jae
dec
call
inc
inc
cmp
ficomps
dec
jns
inc
jle
jmp
sbb
fildl
mov
lea
jmp
cmpsb
ret
mov
dec
hlt
mov
or
xchg
lea
or
int3
pop
dec
xor
inc
mov
cli
outsb
lret
ja
pop
mov
mov
xchg
push
xchg
xchg
push
cwtl
xlat
ficoms
test
jmp
in
xchg
lret
cli
cmc
pop
xlat
bound
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
cmp
inc
and
out
out
and
cmp
dec
mov
lahf
mov
and
pushl
cld
jmp
sub
sarb
mov
adc
stos
and
leave
ljmp
shrb
inc
jle
push
jns
das
mov
and
je
or
repnz
decl
gs
out
jle
repz
mov
xchg
rcl
cmp
mov
cli
pop
xchg
lcall
dec
cwtl
jmp
sbb
cwtl
and
cli
mov
mov
scas
adc
out
pop
push
ljmp
int
fldcw
push
ret
adc
add
inc
ljmp
ja
inc
xlat
ss
push
jmp
sub
movsl
test
jno
mov
ja
insb
pop
push
dec
sub
jle
or
sub
add
adc
cwtl
mov
nop
bound
xchg
push
push
mov
out
les
fdecstp
jmp
lea
inc
xor
incl
dec
jo
outsl
sbb
sub
loope
fisubs
inc
jg
push
call
dec
in
mov
movsb
ret
addr16
test
mov
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
or
stos
mov
sbb
icebp
adc
pop
xor
jae
xor
mov
jo
cmc
shrb
addl
mov
arpl
mov
out
ror
mov
stc
dec
xlat
loopne
adc
mov
jo
popf
decl
pop
and
pop
insb
cmp
les
adc
sub
dec
add
sar
push
incl
lds
sbbl
push
mov
xchg
adc
in
xor
cltd
bound
fcoms
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
xor
call
call
fldenv
pop
lods
ret
outsb
xchg
dec
insb
das
mov
adc
test
out
clc
arpl
loop
aas
adc
jns
movsl
dec
mov
jmp
xchg
movsb
daa
sub
repnz
in
and
out
mov
call
shlb
es
xchg
aas
mov
adc
out
sar
std
pop
mov
gs
pop
jle
aaa
or
jbe
dec
divl
lahf
adc
jb
sar
mov
aaa
push
add
test
pop
mov
mov
push
push
jle
ret
mov
xchg
push
dec
add
aaa
adc
push
mov
test
or
stc
sbb
ljmp
xchg
fmuls
or
pop
or
es
leave
in
push
ja
pop
sub
decl
das
sbb
fildll
sbb
repnz
adc
dec
jae
adc
lcall
adc
jp
mov
pop
loopne
dec
cmp
sub
cmp
clc
or
cmp
out
inc
aas
or
cmp
push
add
outsl
jge
aaa
ss
fidivl
test
push
xor
imul
fldl
adc
nop
in
and
mov
ljmp
fsubs
leave
pop
sub
and
mov
and
mov
sub
fidivrs
sub
cld
sub
ds
sbb
sub
lcall
das
rorb
mov
cmp
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
js
decl
jg
or
jl
je
jns
push
inc
js
mov
jnp
cs
scas
mov
subb
cmp
nop
es
xchg
decl
ja
add
push
or
bound
stos
sub
shl
jmp
gs
fs
imul
dec
pop
mov
decl
push
outsb
jns
dec
cld
arpl
dec
lret
or
xchg
mov
dec
movsl
fstpl
lcall
push
inc
testb
shll
inc
xor
inc
jae
cmovo
out
inc
sbb
cmpb
xor
mov
mov
mov
sbb
dec
enter
pushl
ss
push
aad
mov
pop
fists
pop
xchg
pop
mov
movsb
pop
fcomip
jmp
add
sub
outsl
pop
insl
das
lods
pop
sbbb
loope
jno
loopne
iret
mov
fldenv
jmp
pop
mov
out
fsin
out
addr16
in
dec
es
mov
out
push
sahf
mov
add
in
das
call
mov
stos
jmp
pop
imul
fcom
cli
cld
sahf
insb
xchg
test
adc
cli
sbb
sti
inc
les
clc
dec
jmp
data16
repnz
inc
icebp
xchg
inc
or
mov
push
cli
xchg
test
pop
js
push
aaa
mov
fidivrl
jecxz
fstpt
mov
and
fucom
dec
aaa
or
xlat
out
test
fsubr
aam
mov
aad
movsb
shlb
into
mov
shrl
out
pop
sbb
adc
pop
lds
xchg
pushf
les
fcmovb
dec
jg
xchg
int3
push
push
ret
xchg
ret
mov
call
dec
lret
lahf
lds
push
leave
enter
mov
dec
inc
insl
xchg
sbb
ror
mov
xchg
ja
insl
nop
cs
sub
jmp
xchg
stos
push
fs
repnz
clc
mov
sahf
xchg
adc
pushf
mov
cli
popf
and
mov
adc
xor
xor
dec
mov
or
or
fcomi
inc
mov
xchg
mov
mov
push
pop
and
push
adc
faddl
arpl
pop
xchg
shl
test
into
add
stos
stc
outsb
jmp
dec
adc
scas
adc
lods
sbb
xor
inc
aas
pushl
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
cmpsl
inc
mov
int
incl
mov
mov
mov
cmovns
push
dec
adc
mov
call
mov
ficompl
mov
out
mov
addr16
or
push
xchg
bound
ret
lock
pop
imul
lds
dec
clc
loopne
outsl
add
dec
fstp
push
xor
pushl
loopne
adc
lahf
push
sbb
xor
cli
jno
lods
inc
enter
lods
cmpsl
addr16
decl
jb
outsl
into
int
jg
xchg
adc
mov
aas
sahf
rcrb
xchg
call
jae
lods
jmp
mov
inc
jp
ds
xor
mov
cmp
rolb
xchg
or
in
xchg
loop
sti
push
pop
test
xchg
fstpl
iret
aas
sub
xchg
in
jecxz
pop
push
call
fsubr
inc
push
clc
sub
les
and
loop
outsl
dec
jg
call
lock
jge
aad
shlb
mov
lds
xchg
out
cli
lcall
sbb
mov
xchg
hlt
adc
call
fwait
pop
aas
ljmp
xor
mull
adc
test
lods
loope
jg
test
push
shlb
pop
mov
mov
lcall
pop
mov
adc
shl
cmpb
das
lret
jnp
dec
ja
decl
or
jae
movl
cmc
cwtl
outsl
inc
nop
call
cld
jle
data16
sbb
ficoml
jmp
mov
mov
out
mov
mov
mov
cmpl
shrb
hlt
pop
outsb
xchg
add
out
clc
mull
cmp
inc
mov
das
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
fwait
mov
fists
inc
addr16
fwait
push
add
in
mov
dec
dec
xor
inc
arpl
adc
push
mov
aaa
pop
in
push
loope
lcall
push
dec
and
mov
push
clc
inc
addb
test
mov
js
cltd
scas
xlat
pop
lock
mov
xor
mov
in
pop
shl
push
mov
inc
aad
in
ljmp
bound
inc
xchg
out
xor
orb
sub
push
in
cmp
pop
cmp
idiv
incl
outsb
xor
or
xchg
movsb
loope
mov
sub
dec
dec
push
scas
repz
xor
mov
xchg
and
hlt
js
scas
dec
rol
std
shlb
incl
sbb
xchg
idivl
sub
sbb
repnz
and
sbb
dec
std
jmp
xlat
cmc
mov
out
mov
pop
push
mov
ret
mov
flds
jg
andb
shr
xor
mov
stc
and
push
mov
fadd
add
push
or
adc
ljmp
into
movsl
adc
bswap
fsts
xchg
ljmp
adc
cmp
jbe
xorb
fcoms
add
scas
iret
jb
leave
jae
and
movsb
push
incl
sbb
test
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
std
incl
xor
xchg
inc
fidivl
jmp
stc
mov
mov
lock
jg
popa
sub
push
fwait
cmp
ss
test
outsl
ljmp
cltd
mov
call
mov
loope
into
cs
out
add
popa
jecxz
incl
loopne
adc
pop
pop
std
pop
jmp
icebp
outsl
add
ds
cmp
test
cmp
pop
es
outsb
mov
jbe
out
lret
sbb
loope
push
adc
cmpl
call
imul
stos
pop
mov
jle
cmp
pushf
in
adc
mov
cmpsl
push
data16
jno
ds
outsl
sub
mov
add
xchg
out
mov
dec
or
mov
dec
rolb
pop
outsb
sti
ret
neg
jmp
pop
test
or
xchg
popa
mov
data16
push
add
xchg
out
push
popa
sub
or
pop
insl
cld
inc
sbb
hlt
xor
push
fisttpl
movsb
loopne
jmp
mov
mov
mov
mov
nop
mov
adc
pushl
jno
test
aam
insl
fucom
jmp
aam
push
sub
call
insb
cwtl
push
imul
mov
in
adc
pop
dec
arpl
insb
fsqrt
arpl
cmp
enter
pop
aad
inc
in
addr16
cmp
in
dec
add
inc
rorb
mov
pushl
mov
insb
fstpt
stc
inc
xor
insb
jecxz
fistps
or
pop
ljmp
clc
fnstenv
lods
push
mov
enter
mov
mov
mov
mov
and
mov
lcall
sub
mov
or
or
mov
or
and
outsl
jl
pop
push
sbb
stos
mov
sub
nop
add
jno
cwtl
shlb
mov
jno
test
lahf
mov
add
pop
leave
les
and
lock
decl
test
loope
cwtl
sbb
or
sub
out
pop
add
push
hlt
sbb
incl
xor
repnz
dec
insb
push
xchg
in
sbb
movsl
jg
sub
shl
les
mov
adc
jg
mov
mov
sbb
mov
jl
sti
aam
gs
mov
addb
test
into
mov
sub
mov
movsl
inc
cmp
rol
insl
rcl
hlt
sti
inc
imul
cld
lods
addr16
decl
rolb
jae
add
pop
fisttpll
jno
daa
add
mov
call
adc
or
xchg
mov
and
mov
aam
into
popa
in
pop
fdivrp
push
sub
fxch
cwtl
mov
cwtl
and
xlat
test
pop
mov
pop
cs
xorl
mov
pushl
mov
loop
mov
lcall
ja
add
es
call
jecxz
or
xchg
cmp
pop
test
push
iret
or
add
daa
jge
sahf
mov
setae
mov
push
mull
pop
andb
sbb
pushl
imul
aam
jbe
shrl
loopne
fidivrl
fisttpll
stc
mov
out
stc
pop
mov
clc
fcomip
incl
mov
aad
mov
push
fadd
les
repnz
sarl
add
aas
mov
fisttpll
ss
fmuls
sbb
dec
testb
cld
call
fbld
ret
test
fists
outsb
mov
inc
imul
sbb
call
loop
int3
or
xchg
mov
add
mov
lds
or
sub
lcall
add
xlat
jmp
sub
sahf
mov
scas
sbb
in
arpl
es
mov
incl
insl
xchg
or
ss
jb
test
add
xchg
mov
jp
jnp
sub
or
sbb
xchg
rorb
repnz
mov
fcmovnu
and
aam
mov
incl
fnsave
outsb
cmpl
ja
sbb
lcall
decl
push
pushw
cmp
adc
or
sahf
clc
bound
rcll
insb
iret
inc
mov
jmp
js
or
adcl
ret
es
shlb
testl
ja
scas
sar
ljmp
pop
faddl
or
fdivrs
lock
mov
iret
jg
mov
jmp
push
sbb
mov
xchg
xor
mov
add
push
ficoms
and
addr16
ljmp
les
mov
sub
xchg
mov
mov
mov
sub
add
lcall
sbb
inc
xor
bound
lods
lds
jge
hlt
inc
push
pop
cmpsl
xchg
xchg
enter
rol
mov
mov
hlt
fxch
lods
mov
or
pushl
subl
dec
ret
push
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
pushl
mov
adc
cwtl
mov
add
sbb
sbb
ss
lcall
ljmp
aam
aas
pop
push
sahf
xchg
test
mov
inc
and
call
idiv
call
fiadds
gs
scas
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
ljmp
and
pop
out
or
or
sbb
insl
filds
repz
pop
pop
mov
jo
jno
imul
sub
mull
jne
sar
incl
mov
sti
push
test
jns
mov
cmp
jns
push
dec
ljmp
push
lds
jge
fisubrs
cmp
jns
add
ret
xchg
push
sbb
xchg
adc
cs
mov
cmp
ret
lds
mov
cmpsl
adc
inc
xlat
xor
cli
incl
hlt
mov
insb
adc
xchg
xchg
push
xchg
fdivrp
call
cwtl
push
int3
test
shl
cli
lret
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
decl
adc
adc
jo
cmp
std
imul
decl
and
add
lahf
loop
cmpsl
int3
and
mov
loope
mov
shr
lahf
adc
decl
insb
leave
dec
and
rclb
ljmp
ja
das
aas
jns
ss
dec
mov
inc
add
sub
mov
jns
fidivs
jle
xor
out
std
ret
rclb
cmp
xchg
clc
cli
lcall
js
cmpsl
cmp
dec
and
cli
leave
adc
pop
dec
inc
hlt
insb
push
insl
fnstcw
int
ret
repz
adc
incl
inc
and
shrl
ja
adcb
out
movsl
add
test
mov
lcall
push
ja
cwtl
pop
insb
adc
ss
daa
mov
lcall
mov
scas
bound
lds
out
hlt
push
out
mov
xchg
neg
xchg
aad
pop
mov
test
xor
imul
sbb
shll
lods
clc
pop
sbb
inc
sub
data16
loope
lds
cld
arpl
lods
mov
in
test
xchg
addr16
ljmp
lahf
mov
mov
repz
cmp
call
imul
or
ljmp
sbb
mov
pop
adc
xor
xor
dec
jo
mov
imul
jp
xorl
pop
cli
jmp
mov
lret
cli
xlat
dec
shl
out
stc
add
xlat
push
ljmp
lea
or
mov
pop
inc
sbb
insb
je
aas
les
push
decl
test
cwtl
inc
jle
test
rorb
cmpl
hlt
pop
mov
cmpsl
popf
stos
adc
xchg
fsub
push
add
cld
dec
xor
bound
into
jns
fmuls
dec
pop
push
cli
jle
jnp
sub
incl
sub
xchg
mov
xchg
push
mov
repz
inc
gs
and
decl
outsb
jne
mov
call
or
cmp
adc
gs
jns
mov
sbb
mov
daa
repnz
mov
clc
jmp
lea
out
and
loope
or
mov
pop
icebp
jle
shlb
imul
inc
cmp
ja
fsubl
push
jle
hlt
out
push
fnstenv
decl
aaa
testl
mov
adc
or
std
jb
ret
add
pop
lahf
insb
loopne
lods
test
push
lret
ret
add
dec
push
test
adc
psrlw
or
push
out
loope
sbb
fs
xchg
push
or
jg
lcall
sbb
mov
sbb
lods
sbb
in
popa
fwait
sbb
mov
adc
cwtl
call
mov
cmpsb
adc
xchg
adc
xor
push
mov
in
cmp
loopne
sub
cmp
xchg
mov
or
mov
ds
incl
cmp
add
ss
pop
pop
aaa
pushf
jge
xor
sbb
test
mov
aad
xor
imul
adc
frstor
in
mov
cmpsl
daa
aam
es
dec
dec
and
cltd
and
and
adc
sub
pusha
incl
or
jno
hlt
sub
jbe
cs
enter
mov
shlb
divl
pop
ljmp
ja
and
sub
jb
aad
inc
jle
fdivrl
dec
mov
jge
or
call
jl
bound
jns
je
js
push
xchg
jp
mov
std
insb
mov
lcall
jbe
xchg
cli
fisubs
nop
jmp
ja
pop
push
jg
ljmp
cmp
arpl
popa
sub
push
cmpsb
xlat
aam
fs
jecxz
and
mov
dec
xlat
lret
and
mov
dec
incl
arpl
dec
sbb
lret
dec
pop
mov
dec
cwtl
frstor
lcall
scas
inc
inc
dec
testb
inc
int
inc
inc
addps
dec
out
inc
mov
ljmp
push
xor
addr16
jne
ds
mov
or
rorb
adc
push
mov
push
enter
call
pop
in
xchg
call
add
inc
pop
pop
lods
das
insl
loope
sbb
loop
iret
out
jecxz
movsl
jg
out
movsb
cmp
pop
out
fldcw
jp
add
out
in
ud0
in
mov
hlt
popa
call
in
mov
jmp
ss
imul
rcl
xchg
insb
sahf
call
test
sti
fdivrs
stc
sahf
les
pop
scas
jne
add
dec
bnd
dec
add
push
test
adc
or
cmc
lret
sub
cli
testb
fnstcw
pusha
fdivrs
mov
fstpt
jecxz
fidivs
mov
and
call
fdivl
dec
in
imul
test
fdivs
shlb
add
mov
jo
ljmp
and
pop
lds
adc
pushf
xchg
daa
fisubrl
jle
sbb
ret
int3
ret
xchg
cmp
rcl
ljmp
jmp
lret
dec
scas
test
pop
lahf
enter
or
icebp
int3
inc
pop
je
xchg
mov
iret
rcl
into
add
nop
insl
cld
ja
sub
xchg
jmp
mov
pushf
xchg
fs
stos
xchg
and
repnz
loopne
jo
xbegin
pushf
cmp
xchg
popf
cli
jns
out
clc
mov
dec
add
dec
lcall
xor
das
add
iret
mov
sbbb
decl
mov
and
sbbb
sbbb
out
roll
cmpsb
arpl
lcall
cmp
loop
mov
stos
data16
stos
movsb
outsb
stc
scas
jmp
jl
sub
dec
lods
outsl
das
xor
ljmp
cmpsl
icebp
sbbl
movsb
mov
jmp
cmp
mov
mov
jae
mov
sbb
mov
cmpsl
mov
frstor
lock
cmpxchg
mov
punpckldq
push
mov
adc
testb
xchg
pushf
xor
loopne
mov
cwtl
xor
sub
mov
or
mov
jg
out
bound
xor
xlat
cmp
or
outsl
mov
loopne
xlat
add
mov
fucom
fbstp
pop
arpl
push
push
sbb
lcall
cli
adc
jno
jnp
enter
lods
jne
or
into
outsl
es
lods
jg
fcomip
jo
adc
add
sahf
sbb
call
inc
mov
and
incl
mov
mov
pop
or
addr16
xchg
shrb
push
cmp
in
pop
or
pop
lock
in
mov
xchg
mov
dec
pop
loop
aas
ljmp
jecxz
in
fmuls
clc
push
mov
xchg
lahf
les
xor
scas
push
push
dec
jg
outsl
test
or
rcrb
lahf
call
dec
lea
mov
lahf
xchg
sbb
daa
sub
mov
inc
and
xchg
test
call
lcall
and
nop
mov
mov
iret
push
lret
mov
ret
pusha
test
fcomip
pushl
out
pop
mov
test
fistpll
ret
imul
ret
call
cld
ja
imul
setl
sub
mov
cwtl
cmc
cld
sar
nop
out
push
jle
fidivl
sbb
mov
inc
sub
mov
cmp
jg
fcomip
ljmp
sarb
xchg
outsb
pop
hlt
cmp
testl
das
aas
mov
xchg
pop
in
mov
pusha
and
call
pop
xor
dec
test
cmpsb
icebp
iret
mov
inc
cs
decl
call
daa
jo
jno
dec
mov
xorb
inc
out
imul
lcall
ss
jb
pop
aaa
lret
pop
loope
scas
dec
push
incl
call
mov
cli
scas
pushl
aaa
out
push
add
inc
clc
inc
daa
popf
and
pop
jle
js
mov
add
scas
xor
in
pop
mov
push
in
pop
inc
pop
mov
in
sbb
bound
and
mov
sbb
jmp
subb
sahf
aam
push
stc
mov
in
pop
cmp
pushl
dec
cmp
xor
or
cmp
movsb
add
add
pop
dec
sub
scas
cmc
test
and
mov
mov
sbb
js
leave
dec
rorb
sar
add
push
movsw
notl
cmp
and
call
dec
imul
cmc
xlat
jle
out
rorl
ret
push
jp
jmp
stc
out
rcr
rolb
mov
xor
xor
and
stc
popa
lcall
lock
lods
mov
ss
dec
lcall
incl
je
adc
int
lods
mov
inc
andb
jne
jp
adc
ljmp
fwait
push
movsb
icebp
and
sbb
test
jbe
out
push
into
icebp
mov
inc
pop
hlt
jmp
lea
call
inc
xchg
push
xor
es
jmp
fdivs
incl
mov
lock
bound
fwait
push
mov
xchg
xchg
cltd
xor
es
mov
call
jno
xor
push
ja
ss
adc
out
mov
loopne
jbe
and
notb
dec
jmp
ds
insb
addb
aam
popa
inc
decl
test
cmp
es
jl
mov
pop
sbb
jmp
push
in
test
adcl
ja
mov
ret
add
cmp
call
adc
mov
outsb
xchg
cmpsl
fidivl
sub
fisubrs
rorl
mov
lock
out
mov
mov
push
inc
lcall
sub
push
addr16
cmpsb
int3
mov
pop
je
into
jp
mov
rcll
xchg
rolb
icebp
mov
add
test
faddl
adc
adc
movsb
addr16
and
popa
dec
sub
aaa
mull
pop
lea
es
mov
imul
adc
decl
inc
jns
push
dec
movsl
sbb
fnstcw
jmp
pushf
push
sub
adc
sub
sahf
sbb
xor
arpl
push
dec
pop
adc
add
or
mov
rcll
and
jns
inc
pop
std
push
stc
icebp
dec
in
sahf
loope
addl
repz
lock
mov
ljmp
cli
inc
xor
or
cmp
add
xor
bswap
sbb
incl
jo
dec
mov
jae
dec
mov
shrb
sbb
and
adc
das
out
pop
fbld
pusha
nop
push
lods
insb
pushf
pop
mov
outsl
lahf
pop
or
cmp
add
xor
or
cmp
pop
aaa
testl
inc
mov
mov
jg
imul
adc
sub
sbb
daa
out
xlat
test
ljmp
pop
movsb
fs
push
stos
imul
add
xor
push
into
incb
shll
or
incl
jb
dec
mov
jno
dec
mov
shrb
out
push
fisubs
loope
shrl
jmp
push
scas
outsb
sahf
pop
mov
insl
popf
pop
or
cmp
push
testb
cmp
add
decl
jp
inc
mov
mov
jns
inc
mov
sub
sbb
es
sub
sbb
and
sbb
lcall
imul
lds
push
inc
dec
push
dec
xor
pop
and
jae
push
outsl
testb
jle
sbb
push
bound
mov
inc
sub
fisubrl
sbb
push
and
mov
or
push
ss
andb
sbb
or
fwait
cltd
outsb
push
push
sbb
cmpsb
mov
push
ss
insl
lock
popa
out
popa
dec
mov
xor
aas
lret
xchg
scas
out
aas
stos
adc
shl
aas
aas
pop
cmp
jmp
jnp
push
loope
pop
stos
jb
push
test
add
xchg
les
or
daa
xor
inc
adc
popf
les
adc
xor
and
xchg
xor
push
push
and
adc
push
jns
out
push
adc
out
sahf
out
cmp
sub
out
sahf
sbb
and
sub
cmp
xor
jns
out
es
daa
cs
out
sahf
xor
aaa
loope
in
ds
adc
or
sub
cmp
pop
push
dec
cmp
jbe,pn
daa
aaa
das
or
loopne
ret
leave
cmp
pop
sbb
in
in
push
adc
and
mov
dec
and
inc
cs
popf
cmp
repz
in
pop
mov
outsl
jns
js
dec
cmp
out
bound
arpl
adc
das
daa
pop
aaa
fsubrl
inc
aas
sbb
cmp
fistl
xor
add
js
fisttpl
or
add
add
ja
stos
cmp
add
adc
jge
add
add
push
adc
pop
and
xor
xchg
mov
rcll
bound
push
pop
sbb
sbb
sub
add
dec
mov
jbe
inc
arpl
jmp
addr16
jne
ja
jns
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
movsb
movsl
cmpsb
cmpsl
test
stos
mov
mov
mov
mov
enter
rcl
aad
push
call
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
gs
andl
add
adc
lahf
adc
bound
adc
pop
popa
jno
and
adc
xchg
mov
or
xor
adc
loope
icebp
imul
add
imul
inc
addr16
inc
cmpl
or
push
dec
loopne
pop
movsb
push
mov
mov
cmpb
ss
jo
add
add
or
test
adc
and
testl
imul
mov
jle
imul
in
pop
enter
jmp
in
push
pop
lahf
push
loope
xchg
repnz
mov
ds
popa
lds
push
push
into
adc
rclb
pop
mov
adc
loopne
sti
mov
xchg
pop
pop
mov
rcrb
fs
lahf
pop
add
add
ljmp
mov
jmp
in
int3
push
mov
je
dec
mov
sbb
sub
push
xchg
push
mov
clc
hlt
rorl
sarl
jle
or
sahf
aaa
ljmp
inc
pop
lcall
out
fistpl
fcomip
mov
dec
mov
sti
cli
or
imulb
dec
movl
inc
incb
mov
inc
test
mov
stos
cmpsl
fdivs
add
test
adc
cmp
inc
push
out
gs
or
cmpsb
icebp
mov
nop
es
sbb
mov
sbb
lods
out
insb
fisttpll
pop
or
neg
fwait
xor
inc
movsb
mov
imul
sahf
cwtl
lods
jns,pn
nop
movb
sarl
sub
sub
jne
ss
push
push
adc
mov
imul
inc
mov
or
jnp
outsl
sub
push
or
pushf
jle
lret
shl
sbb
hlt
mov
call
cmpsb
icebp
dec
es
cld
lods
push
push
mov
xchg
sub
pop
mov
clc
push
inc
push
js
sahf
lods
shrl
mov
sbb
dec
push
aaa
xchg
out
fisubs
sub
jo
mov
iret
mov
dec
or
push
inc
xchg
ja
sbb
push
cmpsb
sbb
mov
data16
ret
jbe
push
sub
mov
or
xchg
sub
scas
jne
cld
fisubs
jne
fs
dec
or
xor
movsl
mov
iret
out
jnp
out
movsb
xchg
fadds
inc
push
ss
into
out
mov
sbb
sbbb
mov
mov
mov
push
hlt
mov
fsubl
xor
out
cmp
les
jl
xor
push
inc
pop
push
xorb
lock
xchg
dec
cs
fdivrl
push
add
xor
fs
idivb
cld
ss
push
pop
divb
fidivs
inc
sbb
ds
aaa
mov
push
test
inc
into
jnp
jnp
push
push
inc
or
push
push
or
aam
cmp
imul
fs
add
inc
adc
or
adc
int3
sahf
add
mov
test
ds
pop
lahf
xchg
outsb
jns
movsb
push
mov
testl
es
xchg
das
jmp
or
jle
idivl
and
les
inc
push
cwtl
in
pushaw
lock
jo
in
nop
sub
and
pop
scas
or
cmp
xchg
cmpsb
jnp
ret
mov
jbe
and
push
fs
popf
out
push
or
imul
jnp
cwtl
ss
mov
into
sti
xor
insb
es
outsb
sub
mov
sub
lods
pop
clc
cs
ljmp
scas
lock
mov
push
sbb
push
xchg
pop
ja
add
out
xlat
nop
or
mov
shlb
push
call
fisubs
ss
jle
xchg
adc
xor
out
mov
push
adc
mov
insb
ljmp
push
imul
aaa
push
outsb
xor
push
push
loopne
jg
jp
daa
ja
es
in
dec
jnp
jnp
daa
je
jbe
mull
jl
call
fsubl
ds
xchg
int3
adc
lock
dec
nop
sub
push
jne
fsubrs
data16
in
je
mov
js
fimuls
imul
sbb
jp
mov
jo
js
pop
fdiv
push
pusha
xchg
je
test
test
cmp
sub
out
loope
jo
mov
pushl
inc
lret
pop
inc
push
inc
clc
outsb
mov
ja
xchg
cs
lahf
ret
sbb
sahf
sub
and
std
mov
xlat
pop
insl
xor
in
mov
fcompl
push
xchg
js,pn
cmp
adc
push
addr16
call
fidivs
call
jbe
jmp
sub
push
add
dec
es
pop
xchg
mov
add
mov
jnp
lock
lods
ss
sahf
in
movsb
mov
cwtl
push
mov
cmc
pop
push
jg
and
inc
dec
fidivrs
shrl
scas
or
xchg
out
jge
notl
adc
push
sub
inc
and
scas
in
cmpb
and
rol
push
test
push
xchg
or
sub
push
imul
push
imul
pop
dec
push
jbe
sbb
scas
imul
lahf
in
push
jle
fidivrs
sbb
xchg
scas
neg
aaa
push
idivl
sub
cld
dec
pusha
mov
push
negl
push
mov
cmp
mov
push
movsb
push
mov
in
loopne
xor
push
inc
out
jnp
scas
es
push
hlt
out
ss
mov
jnp
iret
adc
adc
sub
fcoms
into
jnp
pop
xchg
mov
sahf
in
stc
je,pn
lock
insl
xor
outsb
mov
mov
jb
aas
mov
jne
jo
jp
test
loopne
iret
shr
inc
xchg
jns
cmp
push
jl
pushf
dec
aad
out
add
mov
out
jge
dec
fidivs
inc
cld
push
pop
data16
ret
sti
out
jbe
push
clc
dec
mov
dec
xchg
sti
insb
pop
or
ja
push
jl
push
lret
loop
inc
xchg
addr16
push
sahf
out
ds
les
add
xchg
inc
add
test
dec
add
mov
push
adc
inc
mov
adc
pop
mov
add
rclb
adc
push
rep
dec
add
add
add
subl
push
add
add
add
push
insb
gs
xchg
mov
mov
insb
mov
inc
adc
adc
imul
std
ret
insb
daa
stos
mov
js
arpl
popa
inc
cmp
sub
mov
jb
mov
sbb
fcomps
movsb
sbb
sbbb
xor
lods
mov
pusha
insl
xchg
popa
repz
xor
push
push
stos
fists
xor
sbb
stos
push
subl
fldt
outsl
dec
orb
dec
inc
pusha
inc
sbb
fsts
adc
icebp
mov
inc
daa
or
adc
outsl
fs
fs
mov
sbb
sarl
enter
ja
mov
mov
fsubl
and
add
rcrl
xor
subl
inc
jns
mov
out
scas
mov
ret
aam
push
shlb
push
fldt
jb
shll
jnp
repnz
pop
hlt
mov
cmpsb
jns
inc
pop
sbb
sub
sub
daa
ret
les
jl
scas
js
jmp
lds
bound
or
ficoms
sbb
add
sbb
test
mov
add
push
jns
pop
imul
adc
cwtl
cmp
xchg
mov
pop
fsubrl
outsb
xor
jae
sub
and
sub
xlat
dec
sbb
shlb
rcrl
or
cmp
jo
insl
aam
nop
xchg
sub
sub
xchg
adc
and
push
cmp
sbb
jae
jecxz
int3
and
pop
clc
jb
cwtl
and
cmpsl
roll
mov
loope
mov
pop
leave
in
xchg
sbb
sbb
test
jnp
jno
rcrl
js
inc
in
adc
fisubl
loopne
inc
imull
mov
sub
sbb
lds
pop
mov
neg
dec
scas
dec
fs
mov
mov
add
inc
xchg
push
cmp
push
stc
xchg
or
fsubr
pop
mov
rolb
movsb
arpl
scas
movsl
push
and
gs
insl
lret
sbb
negl
popa
addr16
inc
sbb
ja
mov
in
insb
jae
flds
dec
mov
sbb
int3
dec
pop
sbb
rcrl
pusha
add
sub
inc
inc
cld
xorb
sub
in
inc
jne
mov
mov
push
lea
aaa
add
xchg
pusha
add
inc
cmp
mov
mov
orl
sbb
cld
push
iret
popa
xor
or
ret
andl
insl
insb
push
insb
jae
xchg
lahf
pop
adc
inc
mov
lods
cmpsb
scas
mov
or
sbb
iret
mov
or
insb
mov
aad
xor
mov
movsb
pop
arpl
mov
pusha
push
fnstcw
sub
add
mov
xchg
pop
loopne
test
cmp
mov
or
cld
inc
jns
sbb
mov
jo
xchg
adc
and
or
fistps
push
outsb
sbb
pop
mov
mov
sbb
sbb
push
outsb
push
dec
lods
mov
inc
popf
pop
scas
or
je
ja
fldl
movb
popa
imul
add
xor
mov
fsubrl
outsb
inc
cwtl
mov
jge
jo
jge
push
or
sub
mov
and
sbb
push
sbb
lahf
add
mov
dec
fnstsw
and
xchg
popa
cltd
mov
jecxz
in
xchg
xlat
push
or
stos
shl
hlt
insl
sub
pop
fs
lock
das
mov
ja
add
ja
cmp
push
sub
sbb
jg
jae
dec
push
mov
xor
loopne
jecxz
outsb
add
es
pop
in
add
fcmovb
leave
out
scas
sub
or
and
mov
ret
or
pop
add
lahf
adc
outsl
add
addb
sbb
in
inc
sub
xchg
and
lock
out
sub
mov
insl
in
ja
and
push
pop
insb
lea
pop
sub
sub
or
and
xor
lahf
cmpsl
mov
sub
push
cmp
adc
sahf
sahf
arpl
insb
pop
inc
insb
subl
dec
jb
stos
pop
sub
jae
mov
dec
cmp
xchg
dec
push
mov
fwait
sbb
ds
dec
push
xor
filds
lret
pop
cmc
push
lea
dec
sbb
jb
fcmovnb
mov
shrl
jg
mov
arpl
inc
adc
push
roll
inc
inc
in
adc
xor
add
jnp
ret
lods
loopne
xor
jle
adc
loopne
or
mov
test
cs
ficoms
xchg
inc
inc
xchg
sub
dec
xor
sbb
push
mov
xor
xchg
mov
mov
sbb
pop
stos
lods
and
dec
mov
adc
add
cwtl
and
test
popa
lods
sbb
mov
xchg
and
insb
adc
inc
pop
imul
repz
fcmovb
pop
sbb
mov
fs
add
ds
jge
or
and
getsec
and
xlat
xlat
fisttpll
or
fistpl
sub
inc
fs
and
pop
orb
jns
cwtl
or
aas
inc
daa
or
adc
push
cmp
xor
push
inc
pop
xlat
adc
xor
test
mov
dec
sub
push
xor
inc
scas
push
fistl
and
pusha
dec
sbb
pop
adc
jp
loopnew
push
sbb
sbb
dec
fdivs
mov
mov
and
jo
mov
mov
push
jns
dec
sbb
inc
jno
lods
and
adc
pop
les
gs
push
pop
setge
dec
data16
jne
lods
sub
test
daa
jno
and
mov
cwtl
sbb
push
pushf
sbb
sbb
and
inc
mov
lcall
pop
jmp
or
adc
pop
in
cmp
sub
scas
mov
cltd
inc
dec
iret
dec
inc
xor
cmp
and
scas
inc
add
lods
sub
pop
daa
add
mov
or
cmp
xchg
jns
fs
gs
mov
sbb
adc
xchg
add
pop
xchg
iret
mov
fs
rolb
test
dec
mov
xor
arpl
call
pusha
jne
mov
xlat
in
outsb
lea
sub
addr16
or
inc
sub
mov
inc
test
add
mov
sti
or
inc
data16
ret
je
fcoms
add
sahf
add
and
mov
fwait
lret
add
push
or
sbb
testb
fnstsw
push
dec
jb
or
mov
dec
and
sub
mov
sbb
push
fsubs
jmp
in
jo
fsubr
shrl
inc
fucomip
mov
insl
and
sub
invd
dec
nop
popf
sub
int
jmp
std
lret
loop
inc
inc
test
push
dec
shrl
in
sbb
pop
pop
ffreep
and
fistl
aaa
jmp
mov
sub
mov
sbb
sbb
jne
jbe
jnp
sbb
or
cmpsl
shrl
mov
cmc
aad
cmp
push
fs
xor
fimull
push
stos
xor
push
jne
and
pushf
imul
cwtl
insl
movsl
shll
sbb
inc
mov
cmp
or
dec
clc
sub
sbbb
addr16
jo
rorb
jo
jae
mov
mov
imull
xor
addr16
sub
add
lret
push
cmp
sbb
xlat
jbe
adc
sub
pop
mov
outsb
adc
mov
insb
lods
testb
pop
cmp
notl
or
insl
and
cmp
inc
adc
fmul
pop
pop
add
loope
arpl
xor
xchg
add
inc
inc
test
and
push
aaa
push
xlat
movsl
out
stos
rcrl
jae
inc
dec
js
andl
push
mov
and
test
xor
in
pop
inc
pop
mov
mov
sbb
ret
fabs
cmp
sbb
dec
and
loop
into
sbb
push
roll
imul
inc
mov
dec
adc
cmp
sbb
movsl
pop
les
in
mov
or
inc
sbb
xlat
inc
das
stos
cmp
daa
pop
ret
add
sbb
lcall
insl
and
gs
and
add
pop
pop
imul
adcb
or
inc
and
stos
insl
cmpsl
xor
ja
sub
cmpsl
mov
cs
or
test
push
out
sub
filds
inc
sbb
xor
dec
xchg
insl
xor
push
and
dec
sub
push
inc
mov
pop
sbb
enter
and
push
sbb
jne
sub
pushf
pop
jno
dec
adc
arpl
or
pop
adc
gs
dec
pop
test
inc
fs
jmp
jg
aaa
fcmovnb
fcoml
sbb
popa
mov
dec
push
sahf
mov
data16
pop
push
rclb
sbb
fcomps
add
and
imul
mov
fcoml
pop
mov
mov
lea
jo
es
and
inc
insl
les
pop
test
dec
push
testb
pop
pop
loopne
in
xchg
or
pop
insl
xchg
movsl
lds
jp
xor
stos
cmp
xor
and
and
test
sub
arpl
jnp
ljmp
rorl
adc
add
pop
adc
dec
add
or
or
push
shlb
pop
push
push
xchg
jae
dec
lods
jge
xor
loope
addr16
mov
out
cmp
test
sbb
pop
sbb
mov
pop
lods
xor
jbe
jae
jb
jbe
outsl
push
in
add
xor
ja
shr
in
pop
inc
popa
adc
dec
shll
outsb
mov
mov
adc
jg
add
add
adc
adc
sbb
adc
dec
ds
add
add
sbb
add
or
jns
repnz
sub
or
or
incl
lock
add
inc
adc
inc
xor
sbb
sbb
push
push
push
fucomi
fistl
or
push
or
or
or
or
or
or
adc
pop
decl
and
pop
sbb
inc
push
dec
and
lock
or
or
or
sysret
and
test
add
ljmp
or
push
es
sub
sub
adc
push
cmp
adc
push
in
js
push
adc
sub
movups
sbb
xor
adc
gs
in
addr16
push
pop
adc
shlb
pop
cld
outsl
xlat
push
outsb
mul
or
sbb
or
sub
sbb
fnsave
sub
and
sub
sbb
and
pop
push
add
adc
add
lea
add
pop
pop
rclb
pop
das
or
add
jmp
add
insb
pop
adc
ss
pushl
lock
add
adc
push
push
pop
adc
pop
lock
pop
adc
push
sbb
jl
call
sbb
adc
adc
sub
pop
and
wbinvd
sub
and
or
jnp
aas
bound
pop
sbb
xor
sub
dec
adc
push
add
testb
mov
sbb
push
in
lcall
adc
add
es
dec
add
jp
lock
sub
add
pop
add
mov
rolb
push
sbb
xor
scas
clc
decl
or
pop
push
adc
adc
or
dec
add
jnp
mov
sub
orb
stos
pop
adc
adc
or
daa
adc
push
orl
lock
fcmovu
dec
push
subl
outsl
adc
push
adc
out
loop
mov
push
or
cmp
cli
outsl
push
cld
inc
adc
or
and
push
je
pop
popa
pop
call
add
sbb
and
xchg
sub
adc
push
adc
or
push
sbb
insl
adc
ret
sti
jg
fbld
and
cmp
xor
pop
add
mov
jmp
jb
aaa
std
jg
icebp
add
daa
pop
inc
lock
movsl
adc
jb
dec
das
adc
xchg
lock
add
ljmp
sub
insb
mov
or
icebp
into
addr16
out
or
or
add
sbb
cwtl
loopne
lret
xchg
adc
sub
add
push
adc
push
nop
imul
adc
push
cmp
inc
adc
adcl
icebp
insl
adc
imul
sbb
pop
add
push
and
push
scas
cmp
icebp
sub
or
jnp
push
adc
or
cli
inc
mov
and
pop
inc
or
insl
add
lock
cmpl
add
int3
pop
ret
add
gs
sbb
lock
add
incl
sbb
inc
xlat
mov
lock
sub
outsl
dec
dec
jae
cmp
pop
jmp
adc
inc
adc
cmp
xor
ss
adc
push
clc
call
push
or
jae
aaa
lock
add
inc
or
pop
lock
adc
aas
add
sbb
push
pop
adc
adc
sub
adc
adc
lcall
frstor
sub
cmp
es
in
pop
adc
scas
bndldx
cmp
sub
sbb
cmp
inc
add
mov
dec
lcall
or
imul
cmp
sbb
adc
pop
or
inc
push
sub
adc
pop
mov
pusha
cmpsb
mov
push
sub
nopl
pop
sbb
add
or
or
or
push
add
incl
or
and
push
pop
pop
push
xor
push
cmp
mov
pop
add
ficomps
or
adc
pop
cld
call
pop
adc
sbb
push
sbb
adc
push
or
push
pop
or
int
sbb
adc
adc
and
push
and
or
push
cmp
jo
mov
and
add
add
aas
inc
dec
rorb
pop
push
and
add
pop
stc
pop
orl
or
push
inc
xor
in
add
lods
outsb
push
push
add
fs
insl
fimull
sbb
pop
ss
push
add
add
xor
pusha
jp
leave
push
add
sbb
sbb
and
ficompl
push
and
cmp
sub
sub
xchg
and
add
adc
or
and
mov
lock
push
lahf
sbb
sub
iret
roll
incl
or
fwait
add
inc
sbb
jno
inc
in
add
adc
jne
pusha
add
sub
pop
push
fisttps
or
or
imul
add
cli
ja
sub
mov
lock
imul
add
dec
imul
testb
cmp
sub
pusha
negb
inc
inc
sbb
lahf
pusha
dec
and
or
adc
arpl
mov
in
xchg
movsl
lock
add
sub
and
pop
daa
adc
sbb
and
xor
popa
sbb
das
sbb
pusha
cmp
sbb
cmp
pop
mov
xor
push
add
mov
and
aam
pop
sub
jle
sbb
aas
inc
mov
sbb
sbb
pop
jl
scas
lcall
dec
dec
push
lock
daa
int3
add
inc
outsl
pop
adc
jle
incl
sbb
push
adc
loopne
or
stos
scas
in
add
or
or
jmp
fidivrs
add
add
add
adc
scas
adc
popa
mov
push
jge
or
bound
push
push
and
or
or
and
sbb
inc
or
and
and
stos
mov
inc
or
sbb
stos
bound
loope
dec
or
dec
in
popf
mov
xor
push
aam
add
sub
adc
aad
decl
push
sbb
adc
and
sahf
sbb
adc
jo
mov
push
adc
dec
or
rorb
addr16
in
dec
fimuls
push
into
pop
pop
mov
lret
or
adc
and
stc
notb
add
jg
insl
sub
pop
and
vpmadcsswd
xor
adc
push
sbb
adc
cmc
add
jg
xor
dec
pop
and
popa
add
pop
shlb
pop
lock
mov
rcll
jg
adc
add
cmp
movhps
or
lfs
add
sbb
push
or
std
xlat
jo
sti
pop
or
add
ud0
fisttpl
adc
and
push
gs
adc
sbb
and
jmp
sbb
sub
jno
test
dec
cmp
jns
cmp
dec
in
xor
sbb
sbb
sbb
cmp
ds
cmp
cmp
pop
pop
ljmp
dec
push
sbb
sub
sub
or
push
push
push
ja
mov
cmp
sbb
inc
push
cmp
das
push
inc
sbb
imul
sub
arpl
fbstp
insl
jge
pop
push
sbb
cmp
lock
lock
fldt
incl
push
pop
push
js
push
pop
xor
sbbl
arpl
pop
shl
cld
xor
mov
jb
add
adc
cli
incb
loopne
adc
inc
int3
fisttpl
or
ret
pop
cmp
cmp
subb
xchg
and
punpcklbw
sub
dec
adc
mov
add
dec
int
dec
add
sbb
call
pop
cmp
xor
into
pop
test
dec
and
and
icebp
push
out
pop
jo
cmp
lock
inc
cmp
and
add
add
test
xor
sub
and
test
jg
push
sbb
adc
sub
das
push
mov
scas
inc
and
and
sti
add
and
jo
enter
orb
clc
jo
std
pop
cs
sub
cmp
adc
adc
push
adc
or
sbb
and
dec
mov
or
aas
add
cmp
xor
ret
outsl
cmp
fidivs
sub
push
adc
push
add
fwait
std
lcall
test
in
or
sub
push
fiadds
pop
int
jne
hlt
mov
bound
push
cmp
incl
bound
adc
or
sub
fucomi
cmp
or
push
adc
push
push
sbb
sbb
int
xchg
je
cmp
imul
les
pop
rolb
mov
sbb
adc
cmp
pop
movsl
sbb
pop
sub
bound
mov
cwtl
fadds
sub
adc
mov
mov
sbb
or
sbb
sbb
aas
sbb
push
imul
or
and
push
sbb
in
push
add
dec
popa
pop
pushf
pop
add
sbb
subl
nop
sub
add
mov
fwait
adc
aas
insl
ret
or
pop
push
imul
aas
ss
ss
push
fistpl
mov
clc
mov
mov
bound
out
les
adc
sbb
push
loopne
in
xlat
je
jb
add
pop
shl
outsl
outsb
jg
add
sbb
adc
xchg
add
std
pop
call
or
push
sub
or
inc
ss
and
pop
in
fwait
jbe
movd
sbb
add
jg
fcomps
pop
dec
xor
xor
jle
lock
mov
cmp
add
inc
and
dec
loopne
das
clc
mov
push
and
dec
fwait
inc
lock
sub
xchg
adc
imul
popa
sbb
cmp
or
jne
ret
push
pop
aaa
push
or
adc
dec
pop
outsb
mov
mov
cmpsb
stos
push
adc
mov
je
lcall
dec
mov
push
xchg
jae
push
ljmp
aaa
add
enter
add
cmp
and
popf
push
mov
lods
das
xchg
lahf
jecxz
decl
aaa
sbb
add
lahf
push
adc
sahf
adc
dec
add
fisttps
xorb
dec
push
sub
call
xchg
int
pop
pop
jl
jne
jne
mov
outsb
jne
pop
lock
add
mov
hlt
movsb
adc
or
lock
sbb
pop
loopne
pop
sbb
jg
cmp
pop
sub
lock
pop
pop
dec
cmp
jno
ljmp
mov
pop
enter
jnp
test
jp
ss
inc
xlat
cmpsl
loopne
push
xor
or
push
sbb
lods
js
adc
cmp
in
push
inc
sbb
add
add
das
mul
inc
dec
adc
adc
adc
adc
leave
cmp
push
xor
test
push
popf
fimuls
pusha
clc
pop
and
fidivrs
push
or
aas
jg
aad
adc
insb
or
rolb
jno
or
aad
sub
dec
movups
fidivs
mov
sbb
lods
je
jmp
sbb
sbb
dec
dec
xlat
jns
dec
sbb
nop
and
pop
movsl
inc
shll
loopne
or
pop
sub
or
push
das
mov
xor
lods
inc
pop
pop
adc
and
push
jnp
push
sbb
inc
es
cmp
sub
pop
and
pop
and
stos
mov
or
aaa
imul
adc
sbb
or
je
jne
add
add
sbb
lods
sbb
jne
cmp
mov
or
push
push
pop
add
insb
sti
or
push
adc
inc
lock
or
repnz
scas
pop
loopne
inc
or
or
or
or
es
aas
mov
data16
or
mov
or
repnz
add
das
rcrb
add
adc
pop
pop
xor
sbb
mov
sub
xor
xor
es
push
or
pop
sub
and
dec
mov
adc
dec
or
pop
fiadds
cmpsl
mov
inc
adc
sbb
and
and
mov
xor
xchg
dec
mov
mov
mov
jb
pop
pop
pop
dec
fs
pushl
aaa
push
inc
das
aas
sub
sbb
inc
sub
and
and
cmp
data16
and
adc
or
jge
xchg
dec
shll
cmpl
add
hlt
lock
add
add
xor
inc
inc
and
insl
lock
add
dec
clc
push
or
and
pop
push
cwtl
rcrl
jnp
push
mov
cmp
add
mov
bound
sbb
pop
cmp
sub
jb
cmp
lahf
dec
push
sbb
popa
cmp
dec
pop
inc
sub
dec
arpl
cmp
in
enter
prefetcht1
stos
or
dec
push
push
push
insl
ret
adc
cltd
sub
adc
aaa
or
cmpb
sbb
xor
sbb
paddsw
sbb
repnz
push
pop
mov
push
push
or
aas
inc
add
add
jmp
dec
adc
pop
or
jmp
add
add
push
pop
das
jp
jb
xchg
push
movsb
pusha
xchg
clc
dec
or
imul
adc
push
xchg
mov
rcr
pop
mov
or
mov
roll
sbb
and
mov
mov
pop
mov
mov
inc
aad
rcrl
leave
insb
rorb
and
mov
and
pop
or
and
and
dec
or
mov
mov
inc
or
int3
push
cmp
adc
and
aad
das
test
or
adc
pop
lock
push
sub
and
aas
lock
test
loope
cmp
push
cli
incl
push
adc
sbb
or
movsl
adc
aas
cmpsb
adc
cmp
xchg
insl
lock
sbb
fmuls
lcall
or
push
and
jo
icebp
pop
add
jbe
and
adc
adc
sbb
adc
pop
sbb
add
fbstp
sar
or
or
or
or
notb
loopne
push
and
cmpsl
sbb
or
or
or
mov
mov
push
push
sbbl
and
or
push
or
xor
adc
push
and
or
cmp
jno
ds
rcrb
add
aaa
or
mov
sub
add
or
aaa
or
adc
dec
lret
sub
push
in
inc
add
add
lock
cvttps2pi
mov
and
dec
push
cmp
cli
cmp
push
add
lock
inc
lock
dec
aas
sbb
fcomip
incl
and
mov
xlat
mov
lock
add
pop
mov
lock
xchg
enter
add
sub
mov
and
clc
lock
jle
into
push
mov
lock
inc
adc
xor
push
loope
mov
push
xor
sub
inc
sbb
sub
adc
call
incl
popa
adc
jo
mov
ss
cmp
ss
pop
sahf
lock
inc
cmp
cmp
sub
imul
lcall
xchg
or
xchg
or
iret
mov
xchg
lock
or
jl
mov
xor
aaa
or
and
dec
add
pushl
mov
xor
addr16
daa
lock
call
loope
mov
lock
push
js
lock
or
mov
cli
adc
mov
test
stos
add
lock
and
outsl
lock
arpl
decl
and
sbb
adc
aas
push
pop
add
sti
mov
lock
add
and
add
pop
adc
dec
inc
jbe
push
enter
cmp
xor
xchg
lock
add
aas
adc
cwtl
mov
jmp
pop
adc
mov
add
clc
jg
scas
imul
mov
and
xchg
aaa
sbb
xor
shlb
sbb
aaa
or
jae
mov
sbb
test
inc
push
jge
enter
or
mov
pop
adc
pcmpeqb
xlat
mov
or
and
add
inc
lcall
inc
add
btc
lock
sbb
fstl
jae
ret
sbb
cwtl
outsl
mov
push
dec
push
pop
add
int3
adc
cmp
add
incl
push
cmp
unpcklps
sahf
cwtl
outsb
lea
inc
add
rclb
pop
ss
fs
pop
pop
pop
lock
pushf
not
mulb
sbb
inc
sbb
sbb
rcrb
leave
or
inc
aad
jb
and
and
pop
sub
sub
jg
mov
inc
xchg
or
sbb
cmp
clc
add
or
movsb
fisttpl
and
adc
shlb
push
fdivrs
adc
sbb
das
adc
pop
lock
jge
ss
inc
mov
scas
or
dec
add
push
or
cs
sti
inc
mov
jmp
cld
pop
add
push
and
sbb
adc
out
mov
or
and
push
or
pop
jae
adc
sbb
sti
or
or
or
sbb
or
and
shrl
adc
or
cmp
in
add
stos
mov
sbb
push
dec
adc
jne
jmp
adc
jnp
and
mov
mov
sbb
or
inc
sbb
xor
lock
sbb
cmp
add
pushl
lock
adc
jbe
dec
adc
or
push
loop
push
fbld
jb
and
jo
cmp
jo
arpl
test
push
push
add
lock
xchg
dec
mov
dec
in
pop
add
decl
lock
pop
xor
inc
jge
in
xchg
adc
ja
filds
es
fs
sbbl
aam
in
add
add
push
add
in
pop
lock
filds
outsl
dec
or
or
sarl
ud0
jg
push
smsw
sub
cmp
repnz
sub
mov
mov
les
xor
das
add
pop
add
ss
push
sbb
xor
mov
adc
dec
sub
adc
inc
sbb
ss
out
xchg
loopne
out
xchg
or
lds
es
sbb
mov
xchg
imul
in
sahf
sbb
push
mov
sbb
sub
sub
fists
leave
sbb
and
pop
dec
adc
push
and
aaa
sbb
adc
sti
test
sbb
les
add
cmp
push
or
mov
and
daa
sbb
pop
mov
push
aam
pop
sbb
or
shl
pop
mov
ret
test
sbb
or
sub
xchg
lods
insb
fistl
and
sbb
push
test
cmpsb
mov
sbb
adc
push
sbb
add
xor
and
xchg
jge
mov
lret
adc
sbb
es
mov
push
add
cs
sbb
adc
fldt
scas
mov
or
and
push
add
daa
push
adc
adc
sub
and
mov
or
leave
fmuls
pop
or
jno
adc
push
push
bound
fisubrl
decb
daa
or
pop
or
jo
sbb
push
pop
sub
or
mov
call
or
dec
push
cmp
cmp
sub
test
mov
lcall
lock
xor
testl
mov
cmp
inc
push
mov
fnsave
mov
inc
loopne
test
fmul
mov
imul
and
out
sub
ud0
jg
cmp
pop
ss
pop
pop
sbb
push
inc
adc
dec
add
cmc
jl
js
ljmp
dec
xor
cmc
testb
or
mov
sbb
test
shlb
bound
lock
add
or
insb
xorb
cs
or
std
dec
je
mov
lock
andl
and
sbb
add
out
push
and
sub
push
adc
push
and
adc
pop
inc
adc
adc
fstl
sub
ljmp
adc
aaa
pop
cmp
or
unpcklps
push
adc
ud2
pop
and
incl
sbb
xor
adc
and
mov
fstl
fwait
cmc
aaa
mov
pusha
adc
or
pop
push
call
ss
adc
or
inc
sbb
out
clc
std
sbb
inc
sbb
jbe
xor
psrld
push
or
inc
adc
test
add
decl
lods
jo
sub
push
dec
inc
ucomiss
sbb
push
sub
adc
out
push
adc
add
sbb
mov
cwtl
flds
stos
in
xor
add
pop
shr
dec
lea
or
sub
jg
push
inc
adc
and
mov
add
adc
lcall
inc
sbb
dec
das
xchg
or
add
or
ficoms
push
pop
or
outsl
sbb
ret
or
add
push
adc
push
lods
add
mov
jg
or
pop
loopne
mov
pop
pop
pop
jae
and
in
imul
and
or
lea
lock
in
cmp
and
dec
lock
add
stos
pushl
sub
or
dec
inc
pop
adc
cmp
aaa
dec
lock
add
cmp
fimull
pusha
sub
sbb
lahf
sbb
cmp
and
mov
movsb
and
fs
adc
lahf
lods
cmpb
sbb
inc
dec
xchg
or
adc
inc
cmpsl
dec
jl
mov
insb
add
dec
fsubr
clc
aaa
popa
mov
and
push
pop
and
jb
adc
jl
pop
and
inc
fwait
jb
outsb
loopne
fcoms
or
xchg
mov
sbb
sbb
jns
pushf
pop
push
push
inc
aaa
push
adc
lods
adc
push
dec
add
sbb
fnstenv
cmpb
sbb
pop
cmc
scas
mov
and
aaa
inc
push
xor
adc
pop
inc
xor
push
sbb
decl
inc
xor
scas
add
mov
dec
jno
pop
pop
pop
es
std
jne
inc
dec
push
ret
cltd
dec
sbb
jns
or
cmp
jg
or
daa
pop
and
push
sub
jg
scas
xor
inc
adc
lret
inc
lock
sbb
aad
dec
or
fsubl
dec
cmp
das
adc
lret
mov
sbb
pop
jl
sub
pop
xchg
test
push
jmp
sbb
push
or
sbb
jns
mov
mov
and
adc
or
daa
sub
loope
pop
add
inc
xchg
pusha
pop
or
push
adc
sbb
ret
pusha
inc
in
push
dec
lock
incl
test
and
mov
imul
cmp
decl
loope
aaa
mov
or
push
es
pop
loopne
push
or
xor
cs
pop
dec
jno
xchg
push
andl
cmp
inc
inc
add
xor
aas
bound
push
add
and
cmp
sarb
push
dec
sub
es
dec
decl
lock
and
or
push
and
mov
loope
push
push
mov
push
push
push
inc
push
jmp
mov
popa
sbb
jecxz
and
call
sub
stos
push
mov
mov
jp
out
lock
adc
mov
shl
add
sub
cld
add
in
mulb
movb
fstps
cmp
lock
add
adc
mov
xor
sbb
sub
lock
inc
in
clc
stos
bound
cli
mov
add
sbb
ss
sub
sbb
add
dec
mov
or
cmpsl
or
addl
dec
sub
push
xlat
iret
or
sbb
xor
dec
pop
pop
lock
or
adc
lock
aaa
daa
xor
es
or
or
push
or
inc
xchg
xor
or
jg
or
sbb
cmp
sub
adc
dec
sub
sub
inc
sbb
adc
or
inc
and
negl
inc
sbb
or
dec
sbb
push
adc
adc
push
add
mov
loope
adc
push
push
bound
and
mov
sub
pop
sbb
adc
sbb
push
sub
mov
mov
ds
adc
push
or
sub
adc
cmp
loop
cmp
sbb
lcall
aaa
inc
and
and
cmp
and
push
nop
sbb
inc
and
adc
or
mov
outsb
ljmp
inc
push
and
and
jg
pop
adc
xor
cld
out
clc
sysenter
dec
and
sub
or
push
add
push
push
adc
and
sub
loope,pn
sbb
or
adc
rcr
and
mov
or
or
add
rolb
adc
smsw
sub
mov
les
sub
call
push
dec
pop
lahf
dec
xor
dec
push
cmpsb
cmp
dec
push
and
cmp
sbb
sbb
inc
push
push
pop
lcall
sbb
mov
and
out
xor
xor
adc
push
xor
push
das
inc
and
call
xor
xor
cmp
clc
add
mov
sub
cmpsb
inc
lock
les
push
mov
jns
xor
xor
xor
outsb
inc
rcl
mov
or
subb
ljmp
cmp
and
sub
push
lods
push
or
or
push
sbb
mov
push
inc
add
pop
xor
jp
jge
fidivrl
aaa
cld
imul
inc
sub
pop
push
and
or
sub
inc
mov
outsl
or
std
jbe
jae
sbb
sbb
and
sbb
cmp
pop
or
out
push
or
lock
add
xor
push
pop
sbb
and
insb
or
adc
ds
mov
xor
mov
adc
and
sbb
gs
loopne
push
imul
stc
jle
out
adc
inc
push
shrd
into
xor
sti
imul
sbb
enter
and
xor
outsb
pop
in
inc
inc
xchg
fwait
adc
add
in
fcomip
mulb
aas
and
or
and
mov
or
add
mov
pop
rolb
adc
or
pusha
push
pushf
test
dec
fcom
dec
shl
pop
out
sub
cmp
pop
xchg
mov
mov
or
dec
cmp
cmp
pop
xorb
inc
pop
scas
inc
cld
aaa
xor
sub
sbb
ja
inc
mov
or
cmp
sbb
mov
push
sbb
add
add
pusha
xor
mov
subb
movsl
push
sub
mov
cmp
sub
cmp
sbb
sbb
push
push
or
mov
dec
filds
xor
and
cmp
clc
add
adc
lock
add
adc
negb
and
scas
xor
adc
pop
pop
pop
les
arpl
jmp
movhps
mov
aaa
in
jl
inc
mov
ljmp
lock
cs
jnp
ja
imul
add
adc
jo
and
ss
and
mov
loopne
js
add
shld
add
out
cmp
popa
sti
in
jle
stos
add
inc
lar
sbb
add
mov
rolb
cmp
lock
add
cmp
sub
in
lods
fisubrs
filds
mov
lock
push
lock
add
add
push
sbb
outsl
andl
lock
orl
or
ljmp
cmp
sbb
sysret
xchg
cmp
xor
push
faddl
adc
adc
dec
push
sahf
lock
stos
push
das
or
adc
les
or
sub
adc
test
and
flds
or
add
cmp
sub
rclb
fs
fldt
xchg
pop
mov
into
out
push
fistps
sub
cld
fcompl
push
movsl
push
lock
add
mov
adc
ss
mov
test
test
push
adc
jae
sub
add
or
or
or
xchg
shrl
aaa
aam
or
loop
icebp
fwait
loope
dec
or
inc
shlb
add
or
fisttps
push
fcoml
cs
adc
and
adc
aad
lcall
decl
aad
cmp
cmp
push
out
add
push
or
pop
or
add
or
pop
sub
sub
inc
pop
lahf
insl
scas
inc
or
outsb
or
inc
mov
sbb
ror
sub
or
or
adc
sbb
adc
adc
nopl
sbb
jae
sbb
xor
sbb
lea
xchg
mov
adc
mov
ret
inc
daa
outsb
cmp
pop
lods
lcall
sub
push
imul
and
femms
cmp
or
cmp
jg
sbb
add
int
addr16
xor
inc
pop
xor
inc
outsl
pusha
shrl
or
sbb
dec
xchg
push
cmp
jbe
jg
sub
adc
and
cmp
outsb
adc
mov
sbb
sbb
sbb
inc
add
dec
jnp
mov
xor
inc
and
cmp
jb
or
push
push
push
pop
xor
int3
adc
sub
jnp
push
scas
cmp
cmp
push
and
imul
inc
push
xor
imul
or
pop
pop
add
or
add
inc
and
add
add
sbb
sbb
lcall
and
sub
xor
sub
sub
xor
ss
xor
xor
imul
das
sub
daa
sub
sub
ss
sub
and
and
pop
aad
ss
sub
das
xor
xor
cmp
add
sub
aaa
pushf
pop
adc
and
scas
and
imul
movsl
stos
fiadds
xchg
and
and
push
cmp
mov
mov
sbb
and
cs
es
cwtl
adc
mov
pop
sbb
mov
adc
push
lock
cmp
ds
or
or
ds
orl
xlat
gs
push
sbb
insb
das
inc
mov
jg
xchg
add
sbb
adc
incl
lock
add
js
outsb
cmp
and
sub
popa
push
cmp
push
inc
cmp
inc
inc
inc
adc
jne
sbb
jns
sub
sub
and
jp
sbb
cmp
cwtl
pop
xor
adc
bound
pop
dec
dec
adc
or
fs
dec
sbb
rolb
xor
or
jmp
push
and
inc
xchg
je
lock
inc
pop
mov
dec
pop
je
aas
adc
pop
insl
mov
push
push
adc
dec
adc
push
out
adc
sbb
dec
jecxz
sbb
cmc
mov
fbld
test
sbb
dec
sub
push
cwtl
cmp
pop
add
push
popl
adc
adc
adc
add
cmpsl
aaa
cmpsb
jno
inc
in
dec
and
repnz
pusha
sbb
fisubs
pop
outsl
add
bound
and
enter
bound
push
sbb
push
add
lea
loope
dec
inc
adc
jno
jg
jl
cmp
sbb
push
xor
xchg
popl
shl
or
adc
xor
jnp
pop
das
jl
fdivr
add
cmp
mov
inc
mov
xor
push
or
inc
xor
add
lret
or
loopne
push
jle
adc
push
push
ret
adc
sub
cld
and
add
shrb
push
or
clc
fistpll
sub
add
outsb
and
push
push
adc
cmpsl
and
add
sbb
or
jg
das
fcoms
or
mov
or
pop
jae
or
push
cmp
or
and
adc
stos
ljmp
dec
sub
and
dec
push
push
inc
push
pop
or
incl
mov
xor
pop
mov
rcpps
and
sbb
lcall
sbb
and
and
and
pop
cmp
data16
pop
pop
cmp
cs
pop
daa
or
pushf
nopl
scas
inc
mov
lock
lock
add
lock
add
aaa
or
into
sub
adc
mov
adc
imul
adc
sbb
or
dec
add
push
push
push
xor
mov
sbb
int
and
or
cld
mov
fisttps
and
and
cmp
sub
push
or
adc
mov
adc
push
push
or
and
movsb
inc
cs
push
outsl
addb
push
lret
add
fwait
sbb
cmovs
es
ficompl
inc
push
pop
fdivrs
pop
push
sub
dec
or
cmp
data16
xchg
mov
enter
cmp
xor
sbb
fistps
pop
push
or
inc
and
and
incl
xor
push
cmp
adc
mov
sahf
inc
scas
cmp
cmp
pop
mov
movsb
or
adc
push
jnp
xchg
dec
push
mov
enter
fadds
and
daa
dec
add
out
test
add
push
insl
aad
dec
add
je
lods
dec
or
pusha
and
je
push
outsl
add
push
sbb
xor
cmp
add
andb
mov
mov
dec
add
sub
or
popa
clc
cmpsb
adc
addps
sbb
inc
lcall
adc
push
adc
adc
or
push
sub
mov
outsb
add
sbbl
imul
mov
or
and
and
or
shrb
jbe
xor
out
or
pop
xchg
pop
jp
adc
sahf
sbb
push
sbb
inc
pop
and
pop
jp
inc
adc
sbb
sbb
push
in
nop
clc
or
and
in
xor
push
mov
dec
es
insl
outsl
outsb
outsl
adc
sub
push
add
ds
aas
je
pop
mov
push
or
push
push
es
or
jnp
inc
sub
je
xchg
pop
and
cmp
sub
xor
add
sti
ljmp
pop
sbb
adc
sub
sub
or
xorl
lcall
adc
sbb
imul
std
das
mov
and
dec
inc
pop
cwtl
in
xchg
push
rdpmc
or
mov
push
adc
push
dec
aas
push
jg
jg
dec
and
inc
mov
dec
pop
adc
lret
jg
fcoml
mov
or
pop
dec
inc
sbb
or
sub
fdivl
outsl
cwtl
mov
cwtl
pushf
ret
inc
push
push
mov
lock
fs
add
loopne
insl
cmp
adc
loopne
inc
lea
mov
adcl
push
rolb
push
adc
and
popa
inc
inc
jp
push
xlat
or
jge
in
lock
and
sub
lock
insl
xor
or
faddl
sub
push
lock
add
clc
inc
cli
dec
add
lcall
sub
loopne
mov
ja
sbb
sub
push
adc
push
adc
add
in
psadbw
insl
sbb
inc
bsf
add
outsb
adc
rcr
or
ds
lock
jo
loopne
add
push
or
scas
imul
inc
ret
scas
pushl
xlat
push
outsl
add
inc
das
cmp
es
nop
arpl
test
or
iret
in
inc
in
shrb
jnp
bound
push
leave
dec
push
or
jg
leave
sub
dec
cs
aas
insl
xor
mov
cs
data16
cmp
jne
add
sub
jns
pop
insl
imul
call
je
loopne
sahf
push
jno,pn
jne
iret
sti
lock
xchg
lock
nop
pop
xor
lds
cmp
pop
jge
pop
es
or
in
push
repnz
aaa
mov
negl
pop
mov
or
add
push
xchg
incl
add
add
add
add
add
adc
inc
xchg
rorb
add
add
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
pop
or
call
loopne
adc
