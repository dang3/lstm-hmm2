int3
loopne
add
add
add
cmp
add
mov
add
or
add
add
add
call
loope
add
jb
gs
xor
cs
insb
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
inc
js
je
jb
arpl
jae
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
add
add
jo
add
test
add
xchg
loopne
add
add
pusha
loopne
add
add
test
add
xchg
loopne
add
add
jne
gs
xor
fs
insb
add
add
dec
gs
popa
addr16
outsl
js
add
add
loopne
add
loopne
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
sbb
inc
add
inc
inc
cmp
decb
cmp
pop
pop
add
push
push
adc
or
push
add
add
or
or
add
add
add
push
push
or
or
pop
sbb
cmp
dec
sbb
sub
or
add
add
add
push
add
sbb
add
or
inc
add
das
es
es
add
add
add
add
adc
add
or
adc
add
add
and
or
add
pop
add
add
add
add
push
mov
push
add
sbb
adc
sbb
pop
add
in
add
int3
adc
dec
push
cs
dec
push
pop
push
incb
sbb
adc
adc
add
adc
xor
or
push
cvttps2pi
add
push
dec
and
inc
add
adc
xor
sub
inc
movups
add
add
add
add
or
pop
sbb
and
push
add
or
adc
add
add
push
adc
and
mov
or
add
push
or
push
push
adc
add
add
push
add
adc
add
or
adc
add
add
push
adc
or
or
or
add
add
add
add
add
add
add
add
add
or
push
add
or
push
add
sub
mov
xor
or
push
leave
or
sbb
femms
add
or
lcall
add
dec
add
add
and
cwtl
add
or
add
sbb
xor
inc
xor
dec
sbb
mov
push
leave
push
sbb
pop
cmp
cmp
cmp
sbb
scas
add
sub
punpckhdq
adc
and
or
pop
or
loopne
pop
or
sbb
adc
push
xor
outsb
cmp
sub
aas
jg
insb
or
adc
cmp
inc
jle
adc
cmp
push
and
push
adc
pop
inc
adc
pop
adc
sbb
adc
sbb
xchg
scas
sub
sbb
cmp
sbb
sbb
aaa
dec
mov
add
or
stos
or
sub
mov
pop
adc
mov
dec
cmp
inc
adc
outsb
dec
data16
mov
push
or
sbb
or
or
push
sbb
and
or
adc
pop
push
insl
add
or
inc
inc
cmp
or
sbb
adc
je
pop
decb
test
inc
push
inc
fiadds
adc
inc
comiss
aas
sbb
sub
mov
cmp
adc
add
inc
das
pop
sbb
and
dec
sub
das
add
xchg
push
or
jo,pn
das
je
insl
add
add
inc
sub
sbb
xor
and
call
pusha
aas
push
push
daa
cvtdq2ps
and
pop
cmp
cmp
incb
add
or
sbb
inc
or
or
push
dec
popf
sbb
xor
pop
or
dec
inc
cmp
decb
cmp
bound
and
sbb
push
push
add
push
add
decb
add
xor
cs
or
or
push
mov
push
or
add
pop
pusha
adc
sub
or
dec
pop
sbb
push
cmp
sbb
adc
or
add
inc
add
ljmp
pop
jbe
and
and
and
daa
sub
or
das
and
jge
and
push
xor
and
or
dec
inc
or
mov
aaa
sbb
inc
cmp
xor
jmp
pusha
inc
cmp
adc
pop
pop
cmp
movaps
add
adc
out
cmp
pop
outsl
enter
push
adc
gs
push
popa
inc
cmp
lea
push
inc
xor
push
jnp
push
mov
adc
daa
sub
aas
mulps
rorb
and
or
paddd
and
inc
mov
or
or
insl
push
test
push
or
and
push
hlt
aas
or
sub
cmp
adc
pop
xchg
decb
cmp
push
jo
daa
jp
sub
add
sub
jns
adc
pop
sbb
adc
sbb
movd
cmpsl
or
xchg
sbb
movsb
jmp
adc
adc
pop
add
popf
ds
mov
pop
pop
pop
xor
inc
inc
adc
inc
ss
data16
imul
and
dec
sbb
mov
or
aas
sub
adc
add
add
push
adc
sbb
xor
and
xor
mov
lea
or
mov
adc
or
push
ss
sub
pop
inc
inc
aas
push
or
xor
or
pop
or
adc
dec
jge,pt
sub
test
adc
jl
mov
lahf
cmp
xor
dec
pop
loopne
aaa
sub
or
inc
push
es
pop
xorb
xchg
fwait
xor
add
adc
jae
adc
push
mov
adc
sbb
jo
xchg
dec
cwtl
and
cmp
or
pop
pop
andl
jo
and
xor
popf
push
adc
ss
sbbb
and
adc
js
and
sbb
xchg
arpl
daa
pop
add
aaa
ret
push
push
or
sbb
push
and
call
add
add
add
inc
add
add
add
mov
mov
sub
cld
lods
shr
cmp
jne
mov
bswap
add
mov
add
sub
dec
jg
pop
pop
ret
mov
lods
lods
je
jbe
sub
clc
test
jle
add
ficompl
fwait
lock
push
arpl
inc
inc
jecxz
loop
adc
dec
inc
add
add
add
add
mov
jmp
mov
lret
adc
das
je
call
inc
daa
orb
decb
fisttps
aas
adc
inc
bound
mov
xor
sbb
jb
adc
fisttpll
mov
inc
ret
sub
add
pop
adc
mov
adc
ja
es
xchg
add
and
idivb
movsb
sbb
push
clc
bound
pusha
jecxz
or
add
mov
mov
aad
inc
adc
or
outsb
out
adc
mov
push
ss
leave
imul
sbb
loop
sub
xlat
dec
sbb
jno
xor
shlb
xor
pop
sub
inc
sbb
mov
or
push
cmpb
push
sti
or
cmp
test
sbbl
xchg
pop
adc
push
xchg
rol
cltd
cmpsl
or
push
loop
and
mov
andl
adc
and
in
orl
fadds
inc
push
mov
adc
orb
jecxz
sti
sub
dec
inc
shl
dec
and
mov
push
scas
popa
dec
sbb
pop
aaa
cwtl
add
enter
jmp
sbb
rol
pop
pop
or
das
xor
ja
into
out
adc
les
mov
loop
in
or
rolb
push
adc
imul
mov
mov
ret
xor
jae
push
cs
sub
cmp
xchg
mov
out
pop
rep
lods
add
adc
dec
cltd
cmp
gs
jp
or
dec
push
add
int
inc
rsqrtps
sahf
dec
loop
push
stos
jns
xor
inc
push
pop
dec
fmull
cld
or
xor
test
mov
cmp
addb
lahf
std
rep
lds
xchg
shlb
and
sub
sti
pusha
fisttps
mov
push
loopne
cmp
cwtl
mov
add
or
mov
pusha
lret
mov
and
data16
shll
xchg
cltd
dec
adc
sub
jo
and
dec
daa
cmpb
ss
test
mov
nop
pusha
or
sbb
lahf
mov
mov
and
pop
sub
mov
in
test
inc
hlt
mov
nop
stos
push
int3
lods
hlt
je
sbb
jge
inc
sub
adc
inc
inc
push
inc
push
push
xlat
sti
sub
jge
or
shlb
pushf
clc
xor
add
push
xchg
adc
cmp
cmp
adc
xor
out
push
test
or
shll
in
and
loopne
ja
pop
xor
insb
nop
subb
push
orb
pop
push
mov
lds
jge
jle
jge
xchg
punpckhbw
push
push
pop
test
loop
mov
or
cltd
xchg
pop
icebp
xchg
fwait
insb
xor
sahf
negb
cli
lds
into
into
std
add
ret
add
jns
add
mov
or
test
cmpsl
dec
lea
lret
es
lea
xchg
dec
cmp
xor
jp
sub
sub
jno
mov
mov
test
mov
inc
mov
out
xchg
and
iret
push
rcl
inc
ret
or
addl
inc
rorb
jo
cmp
push
jns
inc
mov
shl
xchg
pop
roll
js
pushf
mov
lret
mov
and
fwait
subb
pop
sub
mov
jl
mov
or
dec
mov
out
nop
sbb
fidivs
pop
dec
repnz
push
sub
add
sub
mov
mov
push
or
jbe
push
or
add
jmp
rclb
push
pop
jbe
push
fwait
push
pushf
mov
stos
xor
inc
add
mov
mov
outsb
push
int
test
sbb
fbld
push
lret
cmp
icebp
or
mov
psubsw
dec
xlat
sar
jo
imul
mov
mov
or
xchg
push
orl
adc
hlt
aas
mov
mov
sub
cmp
jmp
ret
pop
inc
jecxz
push
cld
sbb
icebp
mov
jl
inc
dec
pop
int
jbe
or
xchg
movl
mov
push
fdivl
mov
xrelease
ret
xchg
lea
fistpl
pushf
js
in
lods
fildll
lds
shrl
inc
push
mov
les
mov
loopne
test
add
insl
ret
dec
test
add
xor
int3
push
psllw
hlt
sbb
mov
jge
or
xor
les
xor
adc
sbb
or
shl
pop
pop
xor
add
dec
mov
sub
inc
and
xor
xchg
push
pop
inc
dec
cwtl
dec
les
xor
xchg
movsb
int3
or
sub
sub
test
xor
sbb
xlat
jp
incb
je
pop
adc
scas
mov
xor
scas
jmp
pop
mov
scas
imul
daa
mov
push
shrb
push
jo
pop
or
push
pop
mov
movsl
add
in
mov
ficompl
and
stc
daa
xchg
loopne
stos
andl
xor
xor
sbb
xchg
mov
insb
dec
test
cmp
aaa
clc
pop
xor
or
loop
bound
rcrb
jg
push
jge
add
pop
pop
pop
pop
xor
pusha
cli
ror
stc
lret
jl
loope
jo
icebp
cli
shlb
sub
and
in
adc
loop
lcall
out
cli
rcl
loop
andb
xor
bound
add
loopne
cmpsb
cmp
lret
nop
loope
sub
mov
add
push
in
in
and
lock
add
mov
stos
push
mov
lods
popf
mov
les
cld
and
inc
push
adc
mov
dec
test
cmpl
jecxz
mov
and
cmp
in
iret
dec
lock
mov
or
push
and
out
xor
inc
aas
jb
push
mov
mov
andl
or
dec
jl
les
mov
adc
sub
rcrb
inc
add
jns
push
jmp
icebp
inc
sbbl
div
fs
icebp
out
outsl
je
das
jge
je
add
jg
cmc
cmp
lds
shlb
push
cmp
sub
push
mov
stos
add
push
lock
cmp
icebp
mov
ret
and
mov
jl
push
faddp
mov
mov
add
inc
mov
cltd
int3
rorb
ds
mov
xlat
les
adc
pop
sub
cli
lea
xchg
jge
push
mov
mov
into
push
push
or
xchg
mov
mov
fcomi
sbb
stos
clc
cmc
aam
add
pop
cmp
fwait
adc
pop
mov
adc
sub
jns
mov
sbb
arpl
clc
add
sub
mov
addr16
pop
and
aam
ljmp
mov
inc
or
pusha
inc
sub
xchg
mov
and
sbbb
adcl
aaa
add
dec
test
sub
arpl
add
jns
wrmsr
es
adc
decb
xchg
fistl
insl
sub
pop
jno
pop
loop
xor
mov
test
mov
int3
pushf
pop
int3
ret
push
jecxz
arpl
popf
dec
punpcklbw
adc
xchg
hlt
clc
mov
dec
addl
das
inc
scas
je
sub
mov
cmpb
jle
daa
cmpb
add
mov
icebp
inc
in
call
inc
loopne
mov
xor
mov
jle
arpl
push
jo
mov
aaa
cmp
inc
imul
cmp
pop
dec
sbb
ss
pusha
or
shlb
push
add
sbb
mov
inc
int
ss
jno
imul
scas
mov
mov
lods
fiadds
cmp
sub
je
cmp
xchg
insb
jge
mov
test
negb
adcb
lock
jae
push
adc
cld
bound
inc
pop
ret
in
mov
cli
std
or
cld
sub
adc
mov
imul
leave
aaa
fs
bound
jl
pop
lock
dec
cmp
stos
in
cs
cmp
inc
xor
outsb
mov
aad
pop
push
sbb
rolb
lea
dec
aam
push
jl
lcall
dec
mov
arpl
test
mull
and
hlt
orb
daa
add
gs
xor
insl
xchg
sahf
mov
xchg
xor
sub
add
cmp
or
je
mov
es
leave
jb
ret
cmp
leave
pop
popa
mov
xchg
adc
lods
aad
mov
mov
xchg
clc
pushf
inc
ret
inc
inc
push
gs
in
mov
adc
cmp
aam
inc
mov
adc
enter
sub
call
pusha
inc
rolb
cs
pop
arpl
lods
cmp
lock
rcrb
xchg
popf
and
jl
sbb
adc
aad
ja
in
scas
nop
cmp
and
adc
xchg
shrb
adc
mov
push
xor
je
or
out
or
clc
roll
add
cmp
pop
cmpsl
and
je
sbb
or
mov
fwait
push
call
dec
jmp
cmp
jecxz
adc
mov
lret
aas
test
in
repz
insb
push
ss
daa
or
outsb
icebp
out
add
repnz
xorl
sub
and
fs
out
or
mov
xor
lods
imul
add
inc
dec
and
rol
cli
popa
pop
pop
out
imul
loopne
sti
aam
movsb
bnd
dec
add
test
xchg
mov
add
mov
dec
push
mov
pop
into
cmp
lods
jl
stc
push
add
jnp
mov
shr
lcall
test
and
sub
add
or
out
movsb
outsb
xchg
data16
xchg
in
mov
pop
stos
push
movsl
jl
sbb
in
das
lds
xchg
xchg
sbb
insl
mov
jno
dec
int3
cmp
mov
hlt
jb
js
push
dec
out
pop
mov
ficoms
out
or
movsl
pop
mov
popa
bound
inc
mov
test
clc
push
jae
mov
jo
mov
shrb
adcb
pop
iret
mov
sbb
xchg
xchg
out
imul
dec
das
ret
addb
inc
push
inc
pop
or
out
cmc
dec
cmp
xchg
mov
imul
xchg
call
shrb
xlat
call
or
sahf
cltd
add
inc
dec
xchg
dec
mov
dec
add
mov
movsb
fwait
xor
lcall
and
xchg
push
adc
inc
pop
or
xor
pop
pop
leave
addb
jmp
pop
test
xor
mov
push
mov
repnz
cli
ss
int3
xchg
add
nop
xor
aad
icebp
test
or
jns
rorb
sbb
or
insb
and
jo
push
or
jne
lods
mov
movntps
inc
std
loope
cld
push
push
sub
dec
clc
test
lret
js
cld
xor
push
mov
orl
mov
enter
lods
loop
add
push
and
les
push
dec
in
cli
popf
js
jle
lods
pop
sarb
into
and
movsb
xor
ret
mov
aam
push
clc
movsb
or
cmp
or
sarb
loopne
or
and
inc
inc
mov
jb
lods
orl
or
xchg
cmp
mov
bound
mov
lahf
add
cmpb
add
xor
sbb
fcom
or
mov
daa
fbstp
jne
std
cltd
xor
fwait
mov
adc
shr
fwait
mov
ja
je
js
mov
adcb
mov
out
adc
mov
mov
arpl
sti
test
mov
arpl
data16
scas
mov
cmpsl
push
cmp
mov
clc
cmpsb
mov
and
test
push
push
popa
mov
cmp
mov
mov
adc
mov
mov
imul
sbb
jno
jae
mov
push
push
mov
push
aas
pop
adc
pop
or
lods
mov
aas
clc
mov
sbb
mov
add
add
mov
repnz
cmpsb
movsb
push
and
pop
cmc
lds
xchg
xor
mov
imul
add
sbb
ret
es
mov
loope
push
enter
es
sbb
mov
xlat
arpl
jo
add
loope
mov
jecxz
out
out
icebp
dec
mov
fwait
push
mov
add
lret
cmp
das
or
mov
mov
or
jae
cmp
push
mov
loope
adcl
or
push
cmp
inc
xchg
inc
stos
movsb
add
or
les
imul
flds
dec
pushl
cmpsb
add
and
add
adc
mov
pop
cmp
xchg
les
icebp
popa
test
cli
xchg
adc
xor
in
or
mov
mov
push
shrb
xchg
cmp
cli
loopne
push
dec
jg
pusha
jae
fnstsw
add
xor
sbb
aam
cmp
xlat
push
rcrl
pop
push
ljmp
sti
call
in
and
les
inc
mov
bound
push
add
or
push
pop
pop
fdivrl
pop
popf
shrl
sbb
daa
daa
xchg
mov
xor
cmp
shrb
xor
addl
sub
sub
sbb
lea
push
push
movsb
push
add
dec
hlt
mov
mov
mov
inc
lds
sub
xor
adc
lods
js
add
jg
push
addl
dec
mov
and
inc
mov
push
adc
push
adc
sub
xchg
cmpsl
cwtl
mov
inc
mov
pop
push
and
data16
test
gs
pushf
fimull
inc
stos
test
sub
movsl
push
push
icebp
pusha
jmp
adc
jge
in
push
iret
or
push
imul
lret
or
inc
es
ljmp
adc
fistps
xchg
das
ret
cld
insl
and
jmp
pusha
test
add
sbb
push
insb
inc
cmpsb
jne
or
mov
adc
rorl
ja
mov
xchg
out
or
jl
call
push
inc
daa
adc
push
insl
mov
arpl
mov
loope
mov
pop
inc
iret
mov
dec
into
ljmp
push
or
fdivr
mov
adc
ss
inc
jp
adcb
pop
pop
jge
xrstor
loope
add
inc
scas
sub
mov
push
add
or
bound
lea
jge
pusha
inc
arpl
ret
adc
ljmp
pop
push
das
cs
or
test
fs
leave
inc
add
push
jb
push
cmp
dec
iret
pusha
bound
jle
movzbl
mov
lea
call
loop
pop
cwtl
nop
sub
imul
and
push
fs
pop
insb
jl
mov
iret
jl
daa
lock
jo
sti
sub
xchg
lret
lods
mov
sbb
sarb
mov
shll
aas
xor
std
push
and
add
popa
outsl
sahf
inc
lds
and
and
hlt
test
les
fldt
hlt
cltd
lret
leave
mov
aad
arpl
jmp
add
or
cmp
test
fmull
add
imul
pop
and
or
mov
les
lods
insb
daa
cmp
add
addl
cltd
aaa
and
inc
lock
jns
lea
or
sbbb
add
imull
sbb
jmp
mov
pop
in
imull
mov
cmp
push
adc
jno
mov
lock
and
ja
mov
addl
inc
sub
faddl
imul
popf
lods
mov
test
or
mov
notl
bound
cmp
sti
int3
test
push
cmp
mov
xchg
xor
hlt
add
add
arpl
push
sub
insb
jle
inc
int3
aas
movsb
dec
mov
outsl
ret
out
movsl
pop
sub
fwait
shlb
sub
fstps
mov
or
cmpsb
rolb
test
jmp
push
or
jns
cld
jno
enter
int3
and
mov
mov
rorb
push
pop
push
cmpsl
clc
rcll
push
xor
sbb
xor
adc
insb
in
push
pop
push
xchg
dec
lds
mov
push
test
scas
popf
sbb
fnstsw
mov
and
ds
incb
mov
aas
cld
mov
shll
jg
shrl
add
mov
jo
in
xchg
mov
rorb
adc
adc
xchg
inc
cltd
adc
ljmp
insl
je
movsb
loopne
je
inc
jmp
cli
jg
fs
ja
mov
scas
xor
and
cwtl
cwtl
out
scas
jecxz
xchg
leave
pop
push
mov
push
cwtl
push
es
and
mov
cmp
popa
mov
imul
std
and
jne
into
jge
jle
or
daa
xorb
mov
xchg
cs
movsb
inc
icebp
loopne
xor
inc
xlat
pop
and
dec
inc
add
cld
pop
sub
cmpsb
subb
std
into
jae
dec
xlat
loope
push
pop
mov
incb
mov
sbb
fcmovnu
or
mov
and
mov
dec
sbb
insb
shll
push
arpl
stos
dec
cmp
inc
xor
clc
sbb
adc
data16
push
sub
in
mov
adc
es
pop
mov
test
lock
mov
xchg
and
pop
inc
lods
add
pop
shl
add
sub
inc
lret
pop
dec
sub
imul
pop
fbld
daa
mov
inc
sbb
jecxz
ss
or
inc
fcomps
into
je
xchg
xchg
mov
or
mov
dec
cltd
xor
xchg
int3
sub
mov
or
xor
adc
pusha
je
addl
and
inc
adc
xchg
adc
int3
sub
sbb
push
je
les
dec
lret
call
cwtl
cs
inc
push
mov
and
shrl
xor
and
sahf
add
cmc
adc
xor
movl
daa
lods
fistpl
xchg
adcb
or
test
insl
jb
aam
int3
mov
test
xchg
orb
pop
cli
inc
in
aad
pop
enter
leave
sub
xor
mov
and
mov
out
or
jle
mov
mov
mov
dec
divb
push
and
mov
mov
fadds
mov
insl
pop
sbb
dec
xchg
ret
sub
push
mov
movsl
push
push
dec
movsl
insb
imul
push
sub
push
inc
mov
push
jnp
inc
or
mov
mov
xor
outsb
jb
push
movsl
dec
lret
mov
sub
fst
xor
jae
push
cmp
push
sub
sub
mov
mov
dec
out
mov
cwtl
push
pop
jns
bound
add
rorl
mov
xlat
or
or
sub
mov
mov
inc
fidivl
xorb
cwtl
mov
sub
test
mov
push
mov
add
and
mov
xchg
std
int
mov
hlt
mov
call
cmc
pushf
push
lea
cltd
rcll
push
xor
sarl
mov
callw
daa
mov
das
adc
push
push
pusha
xchg
push
lock
pusha
inc
jmp
je
mov
jmp
xchg
ss
adc
fisubrl
push
xlat
xchg
pop
andb
fs
push
jl
mov
stos
fsubs
or
jmp
lock
out
addr16
add
mov
push
pusha
nop
and
jle
sub
negb
dec
pusha
lret
add
rolb
andl
mov
push
out
adc
movsbl
std
lcall
xor
test
es
sar
ja
push
jl
add
sub
jb
test
mov
xchg
rcl
shlb
sbbb
mov
add
int
pop
fimull
push
push
and
xor
loopne
bound
nop
ss
lahf
push
inc
dec
cltd
xchg
push
xchg
fsub
mov
adc
clc
mov
mov
scas
add
add
insl
xchg
cmpsl
mov
cmpsb
pop
mov
jg
adcb
out
mov
pop
inc
inc
in
stos
mov
test
clc
loopne
scas
negl
pop
mov
fbld
push
pop
lods
insb
das
jge
stos
divb
mov
cli
xchg
cmpsb
or
stos
push
lods
add
loop
add
ss
sub
repnz
adc
fldt
pusha
adc
jo
mov
or
enter
stos
mov
and
insb
mov
mov
lret
mov
out
sbb
scas
enter
in
in
mov
arpl
in
inc
lods
mov
rclb
dec
mov
push
and
xchg
pop
jecxz
mov
negl
mov
pop
pop
lahf
pop
xlat
cwtl
or
inc
mov
push
push
or
xchg
dec
nop
or
dec
xchg
in
sbb
insl
push
mov
subl
jmp
out
lock
jo
stc
cmp
or
jmp
push
inc
and
jp
or
inc
fwait
aad
push
sbb
push
test
aas
aam
dec
test
or
push
fmuls
cwtl
fcomip
dec
jle
dec
mov
fdivrs
xchg
addr16
sub
add
movsl
add
push
xlat
adc
cmpsb
rol
call
cwtl
dec
dec
dec
dec
push
inc
adc
jecxz
cmp
stc
aam
lea
popf
sub
add
xchg
popa
pop
mov
mov
mov
mov
clc
jbe,pn
subl
cmp
pop
movsb
into
sbb
out
cmp
dec
inc
orb
xor
add
jbe
xchg
push
and
xchg
push
xchg
jmp
sub
push
inc
pop
repnz
mov
jbe
fcomip
sbb
jne
arpl
mov
mov
xchg
daa
mov
loopne
jmp
es
inc
xchg
int3
je
daa
jge,pn
movsb
and
leave
nop
and
dec
dec
stc
pop
std
ret
cwtl
stos
cmc
sbb
dec
and
adc
sub
xor
push
dec
ror
rcrb
jecxz
popa
ror
call
push
adc
cs
cmp
xor
inc
rcrb
lock
push
pusha
xor
repnz
loop
rol
xorl
movsl
pop
into
rol
sub
pop
ret
adc
and
dec
add
mov
loopne
adc
mov
lret
adc
fwait
push
inc
and
mov
pop
scas
sub
adc
movsl
pusha
push
ficoms
jmp
add
mov
stc
ret
lds
cmp
adc
ret
mov
shlb
mov
stos
push
mov
ds
xchg
mov
pop
dec
lds
pop
xchg
movq
adc
add
adc
sub
call
jne
add
cmp
ds
push
lock
jne
inc
xchg
dec
out
push
in
stc
push
cli
lea
xor
and
ror
inc
daa
jno
inc
mov
sub
sub
or
jo
icebp
push
jno
add
cmp
fwait
les
fisubrl
aad
jecxz
push
xchg
pop
mov
sbb
es
dec
add
inc
sub
mov
add
out
sub
push
mov
inc
mov
push
adc
or
mov
cmp
repz
push
mov
fsts
xchg
cmp
sbb
pop
sub
cmp
add
pusha
xor
andl
push
push
je
not
mov
inc
scas
or
test
and
je
xchg
and
push
pop
adc
push
icebp
les
mov
pop
xchg
pop
rcrl
lret
rcll
sub
lret
pop
leave
out
scas
add
icebp
stos
ds
inc
mov
andb
sub
lock
testb
out
xchg
sbb
mov
push
adc
mov
fsubl
les
test
int
jnp
mov
lcall
push
adc
cltd
xchg
hlt
dec
xchg
mov
push
push
sbb
pop
push
sub
mov
fmuls
lds
pop
andl
pushw
fstpt
pop
pop
add
rol
mov
mov
insb
sub
pusha
lods
mov
pop
jb
cmpsb
mov
mov
cmpsl
iret
sbb
xor
cmpsl
js
btcl
outsl
test
jle
dec
jecxz
in
lods
sahf
push
mov
in
or
xchg
jne
push
inc
aas
push
ds
pop
sbb
sub
adcb
fmuls
mov
jbe
in
jl
add
pop
daa
mov
adc
jmp
popf
sarb
and
ss
in
push
xchg
dec
fisubl
shl
cmp
fs
in
inc
sbb
in
xchg
and
shrb
sub
nop
fwait
js
inc
cmpsb
cmp
test
or
sub
pop
push
xchg
jge
inc
inc
and
mov
mov
and
dec
adc
xor
insl
mov
add
push
sub
mov
lock
inc
lea
in
sbb
sub
mov
xor
sbbl
xchg
ret
mov
in
sbb
cmp
or
loopne
cwtl
add
push
adc
nop
push
mov
out
movsb
mov
rorb
xor
add
jns
or
cmp
dec
test
arpl
shlb
mov
and
cmp
add
sub
xchg
sub
hlt
aas
or
mov
inc
or
addl
jp
mov
xor
inc
pop
out
or
ds
and
ret
adc
shl
xchg
inc
sahf
adc
push
and
sub
jp
lods
jmp
outsl
dec
nop
rclb
inc
cmp
pushf
push
pop
mov
sti
dec
pop
cmc
lods
test
cmp
inc
or
clc
dec
int3
add
es
popa
pop
jg
and
imull
sbbl
frstor
xchg
data16
add
mov
xchg
inc
inc
xchg
xor
popf
movups
or
lahf
and
cmp
inc
cmp
jns
cmp
cli
and
xchg
or
or
xchg
aad
rclb
jmp
fwait
hlt
mov
data16
or
scas
mov
cld
add
mov
mull
ret
jmp
cmpb
cmc
lds
fdivrl
or
insb
cmp
xchg
pop
jae
mov
out
cs
ffree
js
js
cmp
sbb
pop
notl
out
xlat
ret
cmp
loope
sub
stos
xchg
in
pop
decb
fimull
xor
push
mov
testb
aas
pop
add
jae
xchg
xor
scas
movsb
call
test
sbb
push
add
add
addr16
jecxz
es
jp
inc
mov
xchg
andl
push
push
int
cmpl
and
int
sbb
jbe
push
negb
test
inc
shll
jl
mov
movsb
test
ret
xor
add
fs
test
add
add
xor
xchg
pop
ret
adc
mov
cwtl
jnp
xchg
mov
dec
pop
inc
stos
mov
xor
sti
inc
cmp
imul
add
mov
outsb
mov
ret
cld
les
outsb
popa
fs
mov
push
mov
inc
imul
push
push
inc
cmp
pushl
test
ljmp
loope
movl
xor
lds
xchg
sbb
loopne
jnp
add
ret
lock
loopne
mov
dec
mov
or
adc
xchg
subb
jecxz
in
push
adc
adc
mov
pusha
stc
pop
and
ret
add
addr16
mov
jb
and
xchg
ret
pop
mov
pop
mov
sub
aaa
loop
sti
sahf
mov
dec
addr16
loopne
or
outsl
imul
test
xchg
test
rolb
push
cmpsl
xor
int
imul
fimuls
inc
popl
adc
rclb
insl
and
insl
pop
jle
add
inc
movsl
pushf
jne
shl
lea
sub
pop
xchg
inc
or
xchg
mov
imul
jle
adc
mov
jmp
cmp
es
sub
cs
add
lds
pushf
insb
mov
jns
into
lahf
stos
in
and
sarb
pop
or
mov
into
movsl
subl
push
or
or
dec
aas
bound
jb
cltd
or
push
lcall
lods
pop
push
xor
xlat
dec
or
lcall
pop
sti
sbb
push
mov
imul
test
inc
mov
or
loopne
adc
jecxz
outsl
pop
push
out
pop
addb
lock
add
add
add
add
add
add
add
add
add
add
mov
add
pop
rclb
xchg
or
and
loopne
cmp
dec
stos
popl
test
jns
stc
cmc
arpl
out
mov
out
mov
orl
in
add
or
outsb
push
cs
lods
inc
jmp
add
outsb
xor
pop
mov
add
inc
orb
cwtl
xchg
inc
jo
jae
int3
cmp
lods
push
push
and
incl
push
ss
inc
or
loope
or
add
and
add
add
add
add
add
add
add
add
mov
xchg
and
adc
pop
or
jmp
sub
dec
test
lcall
mov
inc
push
jge
or
adc
add
ret
shrb
pop
cmpsb
and
xchg
cmpsb
adc
aam
pop
and
dec
mov
pop
and
or
xchg
xchg
sub
in
xchg
sub
pop
dec
stos
dec
mov
sub
or
xchg
je
mov
sbb
adc
subb
mov
xchg
jne
and
xor
inc
inc
push
leave
test
jp
mov
xchg
xchg
sbb
inc
pop
mov
mov
dec
push
inc
xor
fnstenv
sub
pop
lret
adc
call
jb
pushf
mov
daa
add
fwait
test
mov
les
movsl
dec
push
pop
ret
adc
push
mov
pop
mov
xchg
mov
add
pusha
sbb
shll
shll
mov
dec
push
push
add
imul
xchg
js
or
or
jae
sbb
lahf
mov
andb
in
xchg
movsb
xor
inc
ret
mov
add
imul
push
xor
jbe
call
sbb
mov
xchg
xchg
xchg
lods
sub
scas
mov
lcall
sub
dec
adc
pop
lds
mov
sub
or
sub
lds
lea
xchg
push
push
dec
outsb
sub
sub
int3
ds
sbb
mov
push
and
lret
mov
mov
push
test
jbe
arpl
aaa
das
push
roll
mov
add
pop
adc
imul
cmp
add
fs
xor
xor
lcall
xlat
add
sbb
dec
addl
cmp
xchg
mov
push
adc
add
dec
shrl
inc
inc
test
pop
inc
lock
subl
lods
mov
movsb
lods
add
int
sub
push
cltd
jbe
loopne
xchg
sbb
sub
js
test
cwtl
add
mov
jnp
mov
xchg
jno
jp
xchg
fistl
add
subb
jle
push
adc
mov
lcall
add
push
gs
adc
in
lret
pop
fwait
in
popl
xor
push
cmp
mov
cltd
cmp
mov
add
xor
roll
repz
and
cmp
int
sbb
inc
adc
push
pop
push
in
out
aad
in
push
lock
int3
lahf
xor
icebp
mov
add
add
add
add
add
push
rclb
and
pop
jg
inc
nop
add
add
add
add
add
add
add
add
add
mov
dec
dec
int3
aam
inc
or
psubb
aaa
pop
adc
push
mov
adc
fwait
add
orl
xchg
add
scas
stc
mov
mov
mov
and
mov
add
xchg
loope
add
rolb
sahf
mov
add
jae
push
ds
dec
mov
cmp
inc
adcl
adc
and
sub
push
mov
inc
aas
cmp
cmc
inc
imul
loopne
daa
aas
das
inc
gs
mov
cmp
xchg
and
or
pop
pushf
je
ret
loope
stos
sarw
dec
or
das
stc
xor
xchg
pop
mov
xor
movsb
add
popa
add
aaa
inc
rcrb
sbb
stc
jne
adc
mov
mov
jecxz
mov
sub
mov
ja
addr16
xchg
daa
and
pop
ss
jo
ss
dec
push
pop
lahf
add
xchg
scas
and
fadds
push
clc
dec
dec
repz
xchg
ds
cmp
jl
jo
adc
repz
sbb
pop
cs
ret
ret
push
pop
mov
andb
push
mov
push
ret
inc
js
dec
mulb
or
and
enter
or
sub
sub
enter
mov
and
adc
pop
inc
sahf
cmp
sub
test
sbb
dec
mov
lods
jp
imul
lock
sbb
sbb
test
lret
leave
lods
dec
rorl
popf
into
or
lods
adc
icebp
rclb
pop
dec
jle
fnstenv
pushf
mov
mov
pop
addr16
fstpl
mov
addb
lret
icebp
cmpsl
dec
push
inc
xor
pop
in
mov
add
lret
sbb
pop
dec
sbbl
mov
mov
js
dec
imulb
pop
cmpsl
push
pop
leave
pop
sbb
inc
inc
subl
jnp
stc
mov
out
or
ret
dec
aaa
xchg
pop
add
clc
jge
xchg
shrb
inc
sbb
pop
xor
pop
or
out
stc
scas
fisubs
mov
rcrl
pop
mov
inc
pushf
pop
add
push
xor
lret
or
dec
cmc
aam
dec
mov
mov
xor
adc
in
mov
mov
insl
clc
out
incl
add
jnp
pop
push
loop
cld
xor
inc
xchg
jecxz
sahf
lods
xchg
push
outsl
and
add
xor
xchg
popa
and
lods
mov
mov
lock
or
cmpsb
mov
add
and
imulb
adc
rorb
xchg
xor
mov
pushf
sub
lock
lds
loop
out
push
xchg
cmp
dec
and
xor
clc
loopne
bound
pop
jo
cwtl
fwait
xchg
and
pop
fmuls
cmp
push
movl
dec
adc
push
aam
loop
dec
mov
jns
cmp
data16
push
dec
sbb
shrl
mov
mov
fsubrs
sbb
jo
push
pop
aaa
inc
mov
sbb
add
les
ds
lret
imul
shl
lods
cli
push
sub
mov
ret
cmpsl
dec
in
repz
rcrb
jp
cmp
je
decb
mov
imul
dec
lea
int
ret
sbb
ss
enter
adc
aas
pmuludq
sbb
mov
or
pop
andl
inc
popf
pop
pop
leave
jecxz
or
mov
add
or
fcomp
adc
mov
dec
xchg
in
shll
inc
add
int3
test
in
or
aad
jg
out
cltd
insb
lret
mov
or
outsb
adc
inc
push
add
mov
outsb
or
sbb
xor
orl
mov
mov
ret
rcll
cld
adc
loop
ds
inc
push
adc
imul
nop
loop
cltd
mov
sub
mov
cmp
add
std
inc
dec
dec
push
jp
push
inc
fwait
arpl
orb
gs
jno
faddp
subl
adc
dec
sub
xchg
leave
inc
add
sarb
aas
shrl
rcll
push
rcrb
lret
pop
mov
fwait
sub
cmp
gs
data16
lahf
adc
ret
xchg
bound
scas
int
inc
popa
inc
dec
sub
xor
mov
das
inc
pop
rcr
les
mov
in
inc
imul
sbb
jnp
add
mov
fs
in
mov
mov
inc
mov
dec
sbb
jg
movb
icebp
cmc
pop
push
jge
movl
lds
add
xchg
sbb
push
test
fwait
scas
outsl
sub
cmp
ret
fstps
mov
gs
push
js
ret
cmc
pop
mov
ret
fstl
inc
jp
iret
aas
pop
loop
js
add
addr16
das
mov
mov
sbbl
test
mov
jp
ficompl
jl
xchg
mov
rcl
mov
sub
incb
push
cmp
cmp
imul
add
mov
pop
movsl
mov
pop
ror
cmp
sub
in
lds
jb
push
push
pop
std
jp
ds
pop
hlt
pop
cmp
cld
add
or
pop
mov
or
mov
or
arpl
xorl
lret
daa
test
test
test
mov
aam
xor
or
into
jae
jmp
roll
addr16
mov
mov
jns
push
inc
inc
pop
cmp
cmp
lock
repnz
data16
lcall
adc
mov
sub
or
out
loopne
leave
je
add
push
lea
lods
push
xchg
fdivr
push
stos
cli
inc
dec
pop
loop
adc
cs
add
das
test
push
sub
fiaddl
push
pop
jge
jbe
fwait
jp
xor
mov
xchg
and
sbb
mov
aas
arpl
push
jbe
repnz
insb
sub
xchg
inc
sub
jp
adc
movl
add
or
pop
into
enter
mov
sub
lret
dec
popf
or
add
in
dec
popa
xchg
mov
xchg
push
cli
push
call
sbbb
rcpps
dec
and
and
inc
mov
cmpsb
xchg
jg
icebp
xchg
or
fisubrl
iret
addb
out
inc
data16
sub
cmp
lcall
adcb
mov
xchg
mov
mov
lahf
push
sbb
xor
gs
jo
aaa
inc
fisttps
sbb
repnz
xor
push
call
pop
jmp
scas
add
jmp
adc
sbb
lods
sbb
dec
sahf
or
cmp
aad
jns
mov
mov
push
inc
mov
cld
addr16
lods
push
pop
cltd
add
insl
jge
ret
in
add
xor
mov
pop
loopne
scas
dec
lods
dec
xorl
inc
cld
jo
rclb
cmp
in
adc
scas
insb
loop
push
push
insl
xchg
int3
xchg
or
or
lods
fisttpll
inc
pushf
aad
les
dec
loopne
jle
dec
mov
dec
js
adc
adc
sbb
in
dec
mov
adc
icebp
mov
jmp
cmp
xor
mov
sbb
mov
pop
sti
xor
clc
pop
push
pop
mov
add
sub
imul
mov
imul
sub
or
pop
dec
mov
in
fidivl
popl
sub
les
dec
fs
sbb
fidivrs
fiadds
fdivr
pop
cmpsl
jae
xor
ja
bound
sub
sbb
jmp
pop
mov
or
lods
cmp
leave
xlat
pop
pop
sahf
scas
pop
jbe
cmp
mov
mov
cltd
sub
imul
and
ret
dec
dec
cmp
gs
test
mov
pop
sbb
xchg
imulb
arpl
xor
mov
lahf
je
dec
lea
mov
cmp
ret
test
inc
lahf
cmp
pushf
push
lock
xchg
pop
in
ljmp
jns
loope
jmp
inc
push
pop
mov
push
xlat
add
cmp
nop
push
or
jb
les
shrl
sbb
rclb
subl
bound
aaa
dec
inc
mov
push
dec
icebp
inc
mov
decl
jl
jecxz
jb
sub
fisttps
std
movsl
daa
push
sahf
fistpll
fldl
jecxz
mov
mov
lret
je
dec
push
out
cmp
fsubs
cmp
cmc
sub
mov
decb
nop
push
mov
cmp
addb
and
jg
dec
push
cmc
nop
xor
jno
jo
and
jmp
sub
icebp
clc
cmc
bound
push
jge
inc
jbe
stos
jo
aam
mov
sbbb
dec
sub
mov
std
sti
call
sub
or
out
fwait
mov
and
repnz
in
movsb
xchg
aam
jge
or
add
xchg
jno
add
push
rcrb
data16
mov
mov
fstpl
or
and
movsl
je
clc
pop
add
cwtl
add
ja
mov
subb
jle
sbb
insb
mov
jne
pusha
dec
cmc
inc
fsub
cmp
push
dec
add
mov
mov
xchg
push
in
ds
and
inc
call
pop
imul
mov
jmp
jb,pt
sub
dec
sahf
lock
and
xchg
insb
comiss
or
add
stos
push
or
mov
lret
jge
pop
mov
push
jno
push
and
and
inc
addr16
pop
push
rcr
sbb
fs
icebp
dec
push
lret
lods
adc
pop
das
mov
ret
sbb
inc
dec
pop
push
cmp
and
testb
fcmovb
data16
mov
pop
xchg
push
cmp
mov
rcll
push
popf
jnp
ss
or
or
loopne
mov
in
jmp
std
cmp
sub
mov
orl
push
repz
ljmp
xor
pop
xor
lds
dec
lahf
lock
push
fnstenv
sti
adc
pop
sbb
sub
jo
jp
mov
rcrl
rcl
xchg
and
cmc
repnz
aam
mov
and
les
cmpb
mov
push
dec
jb
push
jl
inc
cmpsl
test
add
mov
aas
pop
push
push
daa
sub
call
fidivs
std
cmpl
push
mov
push
out
je
les
movsb
je
jno
js
call
clc
fwait
mov
adc
mov
dec
cmp
mov
pop
xchg
dec
xchg
daa
sub
mov
imul
mov
push
ja
mov
dec
jecxz
fidivrs
push
loop
jecxz
inc
and
rcll
adc
push
xchg
adc
xor
pusha
pop
clc
daa
push
test
inc
jns
sbb
sbb
nop
dec
and
fists
push
adcb
xchg
pop
sti
dec
nop
push
and
in
data16
ffreep
pop
movsl
add
xchg
shl
and
pop
add
pop
push
out
daa
stos
loope
lds
andl
pop
adc
outsl
aam
adcb
pop
cld
outsl
add
mov
inc
jns
xchg
aam
mov
add
pop
test
int
adc
test
xlat
xchg
icebp
xor
cmp
sub
mov
push
fists
movsb
repnz
jmp
out
addr16
repz
mov
inc
push
ja
jle
es
clc
mov
mov
adc
hlt
fnstsw
pusha
xchg
sub
ret
wbinvd
popf
pushf
ja
movsb
jmp
add
add
add
inc
add
dec
sbb
add
ss
and
xchg
jmp
packuswb
insb
xchg
add
enter
mov
push
xchg
ss
jnp
xchg
pop
add
cmp
aas
push
iret
mov
xor
loopne
addr16
jnp
call
mov
ficoms
xchg
and
out
ljmp
add
loop
loope
dec
nop
push
jno
xor
or
inc
repz
lsl
and
aaa
in
inc
lods
popf
popf
loope
mov
xor
es
jle
push
scas
adcb
jnp
lahf
xchg
lock
and
rorb
and
sub
mov
fisubrl
mov
rorl
js
test
add
and
jg
js,pt
iret
ret
adc
roll
push
adc
adc
out
pusha
xor
xor
mov
pop
pop
hlt
add
xchg
inc
popa
pop
fnsave
jmp
sbb
pop
pushf
cltd
dec
xchg
or
cs
push
enter
jp
add
and
sub
stos
add
xchg
xor
dec
sbbb
mov
incl
outsl
sbb
adc
jle
ds
or
pop
pop
adcb
and
sbb
and
mov
push
pop
adc
inc
ds
push
inc
jo
jae
pop
add
push
lcall
outsb
pop
ss
fcoms
xchg
cmpsl
sbb
lahf
shlb
mov
xchg
and
add
das
adc
jl
sbb
jl
mov
out
mov
jo
and
mov
push
call
cli
inc
das
rcrb
or
loopne
in
es
addr16
and
inc
dec
sbbb
aad
rol
pop
lcall
inc
imul
cmpb
cmp
rcr
mov
ljmp
in
sbb
xor
mov
gs
lods
addr16
aas
imul
iret
inc
pop
ret
rcr
fidivl
xor
lock
lds
and
dec
mov
cmp
mov
stc
das
cltd
xor
adc
cmpsl
repnz
stc
sbb
lock
test
xchg
iret
add
adc
mov
lods
mov
inc
lods
sbb
mov
dec
sbb
jne
mov
push
pop
mov
xor
nop
jbe
jo
mov
rcrb
push
add
stc
dec
stos
aaa
lods
in
xchg
repnz
rcr
xorb
fldt
jp
aaa
dec
es
mov
xor
in
fisubrs
sbb
fsubrl
lods
xchg
mov
mov
int3
xor
mov
arpl
sub
out
mov
sbb
sbb
sbb
adc
stos
mov
scas
mov
push
sub
mov
imul
jnp
subb
mov
mov
and
xor
sbb
pop
jl
stc
sahf
sarl
out
mov
sti
or
pop
cwtl
adc
leave
and
mov
pop
pop
sub
test
cmc
pop
sarb
xchg
add
mov
pop
inc
mov
jg
adc
fwait
inc
mov
sub
lahf
test
addl
fstpt
add
and
cwtl
cmp
cltd
dec
cmp
insb
sarb
std
jge
ret
xchg
outsl
lahf
divb
push
mov
mov
dec
lcall
push
addr16
jo
jge
jo
stc
ret
std
sub
fdivr
bound
in
or
fidivrs
dec
jg
push
cmp
mov
test
shl
out
shll
lock
xchg
aad
mov
mov
fmuls
pushf
inc
mov
mov
repz
mov
mov
pushl
dec
cmp
sti
shrb
sbb
repz
scas
or
addb
test
jne
pop
xor
or
cmp
xchg
sub
push
repz
mov
clc
rcrb
or
sub
xchg
cmp
and
pop
sbb
mov
popa
lret
mov
add
bnd
test
mov
mov
mov
push
inc
dec
add
je
pop
sbb
in
adc
pushf
mov
mov
mov
cmpsl
mov
push
push
es
aam
pop
jns
ds
xor
add
mov
shll
aas
aas
mov
jge
jae
decb
adc
mov
adc
sti
mov
inc
in
rol
lds
xorl
mov
cmpsl
cmpsb
pop
adc
inc
les
sub
mov
lahf
insb
mov
daa
fsts
ds
and
les
lahf
jmp
mov
into
rorb
mov
mov
loopne
add
or
jg
mov
xorb
mov
xchg
cmp
aam
cmp
mov
mov
and
mov
out
lahf
or
orb
call
mov
pushw
hlt
sub
mov
hlt
das
pop
movsb
pusha
ret
sahf
pop
sbb
mov
lcall
mov
xchg
adc
cmp
fwait
aaa
lcall
mov
rolb
xor
orl
push
add
loop
mov
dec
es
cmp
in
imul
mov
outsl
dec
ret
bnd
aaa
push
aad
sub
push
lods
xchg
loope
add
lds
sarl
movsb
xchg
adc
lds
xchg
push
xchg
jecxz
test
cmovno
cmp
xor
pop
fldcw
subb
mov
adc
or
dec
sbb
xor
loop
mov
cli
inc
lahf
clc
cmp
mov
and
xchg
cmp
aam
std
xchg
gs
icebp
xchg
bound
bound
dec
xchg
fimuls
loopne
fbld
js
push
fisubl
mov
scas
lods
dec
shlb
push
push
sub
pop
iret
iret
aaa
push
add
aad
std
sarb
xchg
jg
outsl
mov
pop
mov
gs
mov
xor
pop
inc
sahf
ret
dec
lock
add
sbb
push
lods
or
mov
dec
rorb
mov
adc
cmp
add
das
inc
loop
pop
xchg
xor
dec
push
xchg
sub
out
js
loopne
ljmp
mov
sub
mov
stos
jno
xor
xchg
pop
fdivl
mov
sbb
hlt
ss
js
dec
cmc
pop
lret
adc
pop
jmp
sarl
mov
dec
in
aam
sub
jp
cld
push
xchg
fisubrs
cmp
outsb
push
jno
adc
or
loopne
lds
lahf
rorb
lahf
and
push
push
movsb
iret
sti
rclb
dec
aaa
jo
shrl
adc
paddb
or
adc
add
fldenv
in
sbb
push
and
cmp
mov
hlt
xchg
int
sbb
shrb
mov
add
adc
xchg
imul
jmp
decb
hlt
in
and
jo
out
mov
movzwl
pop
mov
aas
push
pop
lods
xchg
rorl
jb
ret
mov
mov
pop
cwtl
es
mov
out
jmp
repz
mull
xchg
jno
icebp
aas
pop
xor
mov
mov
sahf
mov
pop
cmp
mov
push
and
add
sub
std
pop
addr16
data16
aam
lods
push
fisttpll
movsl
lret
sub
push
cmp
stos
add
mov
xor
pop
adc
popa
adc
adc
push
jl
pushf
sub
hlt
pop
mov
xchg
aaa
shrl
jmp
push
push
faddl
aaa
test
push
adc
sbb
pusha
or
mov
adc
sub
cld
push
daa
push
sub
sub
shlb
fimull
cli
repz
jp
adc
stos
test
pop
mov
lea
adc
mov
roll
rolb
mov
aas
imul
je
sbbl
test
lret
lret
add
lods
in
mov
lea
repnz
dec
daa
movsl
xor
pop
ss
push
mov
aam
jle
lods
or
fstpl
cmp
cmpsb
cmp
mov
test
ja
dec
jb
outsb
push
push
fisttps
aaa
in
jp
outsb
fdivrs
sarl
mov
fidivrs
jge
dec
xchg
sbb
pop
jecxz
jb
xchg
jmp
lds
stc
lret
sub
icebp
test
mov
push
mov
lock
loopne
daa
add
jns
or
or
es
sbb
inc
mov
push
std
loope
repz
dec
mov
js
cmpb
sahf
mov
lret
jae
bound
adc
inc
push
loopne
jno
lock
loop
mov
lock
mov
cmp
pusha
pop
insl
arpl
adc
mov
xor
fsts
outsb
cld
nop
imul
mov
pop
pushf
pop
inc
mov
mov
shrb
sub
repz
cli
adc
mov
cmpsl
cmpsb
push
mov
repz
test
jb
lret
jmp
andl
push
sub
movsb
jp
or
sarl
out
xchg
adc
push
pop
inc
push
inc
insl
out
mov
rcrl
inc
mov
ret
push
mov
mov
pop
popf
mov
in
getsec
push
jmp
inc
gs
and
adc
cld
jno
inc
xor
addr16
fisubrl
shlb
xor
jnp
cmp
sub
inc
pop
xchg
and
sbb
aad
mov
lds
jg
xchg
or
push
adc
arpl
adc
ret
adc
test
dec
test
addr16
hlt
stos
in
xor
mov
in
adcb
cmp
mov
push
cmp
in
lret
insb
push
test
popf
iret
cwtl
pop
dec
inc
ret
fldcw
es
cli
cmovle
lcall
pop
jns
int3
je
cld
push
cltd
in
mov
loopne
loopne
cmp
push
outsl
hlt
mov
mov
lods
dec
sub
and
mov
mov
sub
das
icebp
iret
or
mov
cmp
xchg
rcrb
and
dec
lods
xchg
push
sub
pop
mov
test
cmp
out
add
stos
jle
mov
inc
mov
dec
jle
pusha
test
jmp
mov
push
les
lret
push
in
fidivs
pushf
jb
and
ret
cmp
sub
push
clc
fimuls
cmc
stos
pop
push
bound
jge
bound
jecxz
fldenv
or
pop
js
dec
adc
iret
jg
dec
cs
rorl
ds
xchg
aam
jl
push
xchg
fnsave
pop
xchg
movsl
jo
ret
sbb
xchg
mov
jns
mov
dec
loope
mov
add
in
mov
push
pop
pusha
mov
xor
mov
stc
pop
in
daa
jl
push
or
dec
jl
cmpsb
or
push
mov
adc
shr
pop
mov
ss
push
lahf
add
pop
and
mov
aam
imul
push
inc
mov
sub
dec
ret
mov
or
fimull
in
shlb
push
mov
add
js
lds
es
aam
es
rolb
push
in
and
push
sub
cs
push
sbb
clc
sbb
pop
scas
mov
jno
adc
fld
jg
and
mov
cmp
cmp
mov
mov
xor
cmc
xor
cmp
push
mov
popf
cmp
je
push
jb
cmp
fs
movsl
imul
dec
inc
ds
movsb
orb
mov
shll
leave
add
insl
push
push
jno
fdiv
sub
mov
stos
nopl
daa
rol
push
bound
jge
mov
sbb
shlb
rcl
pushf
push
rcr
lret
and
ljmp
dec
je
and
jg
inc
leave
mov
jb
fsts
mov
mov
in
dec
aaa
mov
adcl
insl
test
xor
scas
les
pusha
test
scas
jne
inc
scas
or
mov
push
pushf
xchg
mov
out
mov
add
dec
mov
xchg
jae
mov
orl
sbb
jb
lods
mov
add
jle
adc
shl
into
je
xchg
sub
cmc
loopew
mov
scas
mov
fwait
xchg
shll
subb
jbe
nop
sub
jns
in
adcb
lods
ja
call
fildl
out
xchg
bound
pop
and
mov
xor
mov
xor
adc
sbb
cmpsb
jmp
mov
jno
cmpsl
inc
iret
pop
pop
iret
aam
scas
and
aad
jle
mov
sbb
shr
and
in
pop
js
pop
iret
jge
ljmp
mov
orl
xchg
aaa
sbb
push
in
xchg
push
negb
ds
sub
sti
mov
and
pop
cmp
cs
xor
insl
add
add
push
mov
in
push
jne
pop
arpl
into
hlt
test
fbstp
jp
adc
mov
xor
into
mov
sbbl
movsl
xor
pop
bound
shr
test
mov
dec
fdivl
adc
jnp,pn
dec
hlt
decb
xor
loopne
dec
mov
aas
data16
cld
fstps
mov
stc
or
add
sub
cltd
xchg
mov
lret
xchg
pop
in
add
adc
div
fidivs
jbe
loop
ja
testb
push
das
outsb
int
sarl
or
rclb
dec
mov
imul
rcrl
jne
xor
test
shl
dec
out
shr
data16
pop
les
shll
fcompp
das
loope
jno
dec
push
jle
adc
xchg
lods
and
rorl
scas
fcoml
pop
scas
int3
cmc
jnp
outsb
or
mov
or
jg
repz
mov
rcll
in
mov
scas
mov
or
xchg
mov
xchg
lea
adc
mov
fisubrl
pop
shr
aas
inc
sbb
jne
cli
subps
mov
mov
inc
add
pop
mov
mov
std
or
outsl
out
test
inc
mov
jmp
ljmp
cmp
cmp
push
insb
imul
fstps
pop
imul
jp
std
test
cmp
xchg
sbb
lahf
push
jmp
xchg
les
xchg
mov
push
ja
insb
popa
pop
mov
insl
loope
in
add
dec
cmp
pop
jns
cmp
nop
pusha
jmp
cs
loopne
gs
adcb
testb
mov
or
popa
das
mov
pop
inc
ds
test
popa
jecxz
mov
insl
jb
mov
add
test
in
pop
lret
and
mov
sub
popa
das
jle
int
or
jecxz
dec
mov
test
cmp
dec
or
rclb
xchg
push
xchg
adc
mov
ljmp
ljmp
popf
pop
pmulhw
scas
outsb
sub
inc
pop
sahf
jle
imul
in
cld
inc
adc
cmpsb
rcrb
adc
inc
mov
test
in
fimuls
das
xchg
mov
xchg
xchg
sub
mov
subl
mov
iret
std
into
insl
lods
pop
xchg
pop
cmp
push
sub
cmp
pop
pop
test
mov
cmpl
js
repz
pop
ljmp
xchg
push
fisubs
xor
add
pop
add
sub
jnp
daa
sbb
imul
mov
pop
test
testb
sub
dec
xchg
jge
push
pushf
movsl
or
push
mov
addl
into
add
mov
dec
push
ret
rcrl
adc
repnz
add
push
out
das
xchg
or
xchg
iret
pop
std
mov
xlat
xchg
bound
std
repz
mov
rcrb
in
sahf
aad
jno
clc
and
dec
dec
popf
fstpl
mov
mov
imul
pop
in
add
adc
sbb
pushf
loope
std
push
idivl
push
orb
mov
xor
ds
inc
int
pop
in
push
les
sbb
data16
cvtps2pi
insb
scas
add
lods
fsubrl
out
insb
jmp
sbb
adc
shlb
sub
add
jns,pn
std
fcmovnb
push
add
sar
xchg
imul
shlb
xchg
int
cwtl
fcomps
mov
or
testb
shrl
lret
jns
inc
mov
xor
aam
pop
add
xchg
lahf
hlt
cmpb
xchg
push
dec
scas
lock
push
lea
pop
cmc
adc
mov
lock
popf
ret
pop
sti
std
add
movsl
stos
mov
int
push
fmuls
mov
cmp
scas
add
lods
mov
jg
or
mov
dec
pop
clc
mov
rcrb
dec
push
pop
fwait
pop
into
jo
sbb
mov
shll
mov
push
leave
xchg
mov
ret
xchg
push
xor
mov
idivb
inc
aas
sbb
aas
mov
test
sub
scas
mov
mov
add
ja
adc
cmp
push
in
xchg
gs
int3
mov
push
jnp
loop
ljmp
xchg
cli
lret
sti
mov
push
jg
inc
aaa
imul
jns
in
mov
mov
ja
xor
pushf
in
mov
orb
test
sbb
fwait
dec
xchg
mov
ja
imul
add
leave
mov
cmp
sbbb
push
loopne
mov
loopne
hlt
jmp
mov
orb
cmpsl
lahf
outsl
add
pop
sub
repz
xorl
and
imul
repz
sub
in
repz
das
bound
sti
out
add
aad
cmp
pop
out
push
ret
les
sbb
rcrb
movsl
push
sub
add
pop
xor
shlb
das
mov
iret
pop
mov
mov
cmp
and
sbb
add
mov
hlt
push
mov
roll
mov
sti
xchg
adc
int
pusha
mov
das
std
jmp
rorl
cs
fwait
xchg
shrl
loop
repnz
xchg
or
in
lret
sub
mov
iret
jns
stos
mov
jo
outsb
cmp
pop
inc
push
push
loope
dec
dec
popf
stos
cmp
add
xorl
ljmp
inc
into
mov
ret
adc
test
cmp
sahf
inc
xor
hlt
mov
inc
and
icebp
jbe
push
out
stos
lcall
testl
ficoms
push
fldenv
pop
pop
jge
push
fld
mov
mov
pop
pop
mov
loopne
inc
les
xor
stos
jo
mov
stos
cwtl
mov
loope
aam
arpl
push
push
xchg
addr16
xor
or
mov
lods
loope
int3
mov
dec
mov
pushf
mov
mov
mov
sbbb
push
rcll
push
shll
daa
adc
lods
pop
loop
shrb
mov
xor
scas
aaa
insl
popa
mov
lahf
repz
adc
mov
xchg
loope
jbe
xlat
test
push
xlat
mov
aad
push
inc
sub
sahf
pop
gs
orb
cmp
jle
cwtl
loope
sbbb
lods
adc
setne
scas
inc
adcl
dec
sahf
imull
jl
sbb
jp
adc
movd
pop
pop
mov
and
andb
sub
push
out
stc
shrb
enter
pop
inc
outsb
out
mov
dec
jp
shr
push
xor
inc
or
fistpll
mov
stos
mov
dec
dec
jle
hlt
out
push
orl
inc
sub
add
jnp
fcmovnbe
test
inc
sahf
mov
lock
icebp
jno
xor
xor
ret
lea
or
into
xor
aad
cli
insb
mov
and
xor
mov
fidivl
mov
sub
out
mov
das
inc
jmp
jno
xchg
leave
in
jne
dec
and
lret
or
das
gs
cmp
icebp
mov
mov
sub
loope
ret
jo
clc
adc
xchg
jnp
fwait
cmpsl
jmp
push
dec
xor
pop
stc
test
imul
mov
aam
sbbb
repnz
ret
add
js
popf
sub
cmp
in
insl
inc
dec
mov
dec
mov
push
inc
imul
out
cld
adc
adc
cmpsl
in
push
aaa
sub
scas
add
repz
push
das
push
outsl
das
jl
sarl
call
clc
adc
mov
adcl
xchg
jecxz
outsl
and
arpl
ds
hlt
xchg
mov
cmpsb
mov
xor
adc
stc
pop
adc
loop
pop
outsl
sbb
push
or
dec
pop
arpl
xchg
sub
js,pt
mov
lds
pop
and
mov
push
fwait
jne
xlat
lods
sub
ja
outsl
shrb
jno
shrl
pop
lea
cmp
mov
je
inc
nop
push
insb
ljmp
and
daa
cmp
inc
jl
cmpsl
in
inc
dec
lea
xor
popf
icebp
shrl
into
mov
stc
dec
dec
xchg
jge
aas
mov
adc
add
sahf
push
mov
stos
test
movq
aam
mov
push
add
mov
dec
mov
lods
les
or
mov
pop
outsl
das
sbb
pop
outsl
push
xchg
cmp
scas
out
cmp
add
test
push
xchg
es
xchg
dec
icebp
das
cmp
data16
inc
mov
stos
cltd
loop
push
loope,pn
adc
outsb
xlat
jae
sub
jmp
icebp
jo
cmp
pop
mov
mov
mov
mov
rcrl
or
out
scas
lock
js
in
add
rcl
dec
mov
push
sub
shlb
fwait
aam
lds
mov
movq
cmp
call
out
add
pushf
fists
mov
cmp
roll
push
sub
icebp
movl
xor
fildll
loope
mov
sbbb
fsubs
fldt
mov
jo
sub
pusha
cmpsb
push
jge
in
jecxz
mov
fcom
pop
test
cmp
sub
fmuls
sub
int
push
cli
mov
jle
rorl
das
dec
xchg
ret
fstpl
xchg
pop
popa
test
insl
jmp
imul
and
pushf
add
rsm
std
aaa
jle
pop
or
lds
xor
push
xor
nop
insb
shll
jns
stos
jns
jp
cmp
icebp
in
xor
adc
push
add
stc
pop
dec
sahf
or
cmp
mov
jno
out
cmp
mov
mov
adcb
imul
cs
stos
test
push
es
fcmovbe
lods
call
setge
add
or
pop
xchg
movsb
mov
in
add
xor
or
popf
mov
jns
pop
iret
xchg
pop
mov
dec
into
mov
add
jno
sbb
xor
mov
cmp
jl
cmp
sub
cmp
icebp
imul
clc
enter
scas
xor
inc
movsl
out
aas
xchg
cld
and
cltd
dec
ret
push
dec
ja
repz
rcrl
jb
call
jl
mov
out
cmpsl
add
xchg
ret
push
mov
dec
int3
loope
stos
xchg
lods
cmp
pop
jne
gs
mov
xlat
arpl
decl
sbb
jno
js
cmpb
insb
push
adc
xchg
pusha
mov
mov
inc
movsb
fs
lcall
and
pop
mov
mov
scas
xchg
pushf
mov
lods
std
in
push
subb
testl
or
mov
dec
in
jo
movsl
cmpl
jge
pop
mov
push
cwtl
xor
sbb
out
shlb
dec
and
int
sub
adc
or
pop
adcb
mov
inc
lds
and
xor
loop
loopne
pop
rol
xlat
cmp
es
dec
js
sbb
jle
jo
add
adc
or
movl
mov
mov
stos
cmc
ret
out
hlt
mov
shrb
push
mov
ficompl
jnp
out
sbb
push
jle
jl
add
sub
jnp
xchg
jg
aas
shr
push
pop
rcll
scas
movsl
ss
add
rorb
jle
cmp
jmp
pop
leave
xchg
hlt
mov
jle
xor
mov
jl
mov
mov
mov
sahf
pop
std
jp
pusha
and
mov
xchg
js
adc
pop
push
pop
call
mov
inc
enter
clc
lods
cmp
push
pop
adc
and
inc
dec
shll
pop
xor
sub
jno
in
pop
inc
jecxz
adc
sub
gs
in
mov
push
ja
popf
sbb
xchg
xchg
mov
cld
push
daa
jne
imul
fsubs
inc
xlat
aas
inc
in
notb
jbe
fs
jge
into
cmpsb
push
xor
lret
adc
cwtl
lock
add
je
aad
cltd
inc
mov
outsl
rcrb
movsl
pop
mov
dec
les
xor
jno
lock
aam
xlat
sahf
leave
pop
pop
inc
fcoml
sub
push
dec
mov
xor
pop
add
int
jmp
inc
jns
inc
rcl
es
mov
idiv
adc
fwait
adc
div
add
jle
mov
inc
nop
xchg
lret
clc
imul
cmp
push
inc
jmp
dec
xchg
sbb
jae
jg
jmp
and
aas
mov
mov
addr16
mov
push
push
stos
iret
movl
inc
cmp
xchg
xor
xor
or
ss
push
ret
clc
inc
lret
imul
fbld
repz
push
add
lock
lds
test
xchg
jno
shl
nop
fimull
fcomps
inc
mov
inc
out
icebp
sahf
pop
sbb
fwait
xlat
jecxz
pop
loope
push
popa
jp
add
sti
rcrb
in
sub
pop
movsl
mov
nop
push
push
std
mov
std
int
stos
jp
push
jo
dec
push
add
out
or
lcall
fnstcw
xchg
xor
mov
jmp
dec
mov
pusha
enter
mov
je
push
dec
sub
int3
mov
outsb
cs
pusha
push
movsb
xchg
repnz
add
cmpl
cld
fidivl
lret
out
mov
add
and
xchg
push
cmp
mov
idiv
popa
jge
or
jbe
repz
xor
push
xor
fwait
inc
testb
scas
and
jae
sbb
jo
roll
in
push
das
sbb
mov
loop
add
jno
xchg
xchg
sub
call
push
mov
jle
adc
pop
dec
or
push
out
es
arpl
aas
pop
cmp
add
or
adc
inc
or
mov
cmp
cmp
pop
xor
stos
inc
lods
fdivrl
push
rcrl
xchg
adc
xor
jmp
xor
mov
adc
daa
sub
ficomps
sbb
cltd
pop
mulb
adc
inc
cmpsl
jmp
scas
into
mov
icebp
iret
inc
int
and
mov
scas
jmp
test
pusha
stc
test
das
jp
int3
push
mov
pop
dec
data16
add
das
sbb
xchg
mov
sahf
push
push
pop
mov
out
pop
aaa
add
sbb
mov
sub
leave
or
fdiv
sub
cmpsl
jle
adcl
bound
clc
pop
jecxz
dec
xor
movsl
inc
pop
cltd
leave
popa
jl
or
bound
mov
insb
jae
loop
sub
out
test
fldt
dec
stos
push
jg
test
inc
rorb
mov
xor
movsb
sub
test
jne
arpl
push
push
mov
or
test
push
js
jl
mov
pushf
ja
scas
in
in
mov
gs
or
out
xor
xor
sti
into
jne
jle
jecxz
mov
aad
leave
xor
sub
cmc
insl
jmp
lods
adc
pop
mov
push
mov
mulb
repnz
scas
movb
ja
push
in
mov
dec
adcb
fisubrs
push
add
orb
jne
jno
cmp
mov
cmc
jecxz
xor
inc
inc
icebp
pusha
mov
out
and
ret
push
pop
aam
out
dec
andb
dec
mov
sarb
inc
mov
sub
les
pusha
in
sti
push
out
cmpl
lods
pusha
adc
push
push
or
les
sub
stc
add
icebp
call
xchg
jo
xor
sub
movsb
push
imul
adc
sbb
jge
pusha
mov
iret
cmpsb
int
inc
xlat
pop
cwtl
sub
test
jns
xchg
jbe
push
or
xor
cmp
xchg
cmpsb
push
ret
cmp
xchg
ficompl
shl
leave
cmpsb
xchg
mov
mov
mull
mov
orb
sub
jg
arpl
pop
pushf
dec
mov
xchg
aad
or
iret
out
fbstp
push
push
testl
mov
stos
inc
sub
push
pop
inc
hlt
cmpsl
fisubrs
gs
cmp
cmc
mov
icebp
lds
rcll
imul
mov
aas
xor
jmp
outsl
push
iret
sahf
jae
lock
mov
inc
pop
push
and
mov
push
add
mov
outsb
sub
in
faddl
dec
sbb
enter
outsl
aas
movsb
inc
xchg
push
xchg
cmc
jp
xor
shll
cmp
movb
or
popf
jle
adc
sbb
cld
mov
cmp
dec
sub
insb
inc
aaa
fcmovnbe
jle
pop
push
in
or
cli
jnp
adc
fs
jecxz
mov
arpl
ret
cmp
xchg
mov
or
mov
pop
das
pop
push
jecxz
cs
sbb
push
adc
arpl
xor
cmc
lea
mov
xlat
jne
mov
std
lret
add
sahf
sahf
icebp
push
mov
aam
loope
mov
aam
jmp
and
outsb
fidivrs
inc
sbb
add
xchg
push
sub
in
adc
xchg
js
push
arpl
inc
dec
jl
shlb
gs
in
imul
es
jl
jg
and
push
pusha
mov
push
out
mulb
mov
pusha
aas
sbb
adc
cld
fldt
jle
pushf
sbb
test
das
or
push
sbb
rolb
fiaddl
test
sub
adc
push
mov
push
outsl
cmp
imulb
aaa
pop
lea
scas
cmpsb
xchg
js
fstp
daa
cmpsb
pop
fbld
insl
fmulp
fs
and
pop
in
jl
mov
shrb
loope
jge
or
push
iret
mov
mov
dec
xlat
push
mov
xor
aad
nop
js
mov
out
cmp
xchg
das
cmp
mov
popf
das
movsl
out
test
dec
test
sub
mov
push
adc
jecxz
dec
pushf
and
and
xor
or
jmp
das
pop
and
dec
push
cmp
jl
or
rorb
lret
fwait
subb
adc
in
xor
loopne
jno
stos
push
mov
mov
cmp
cmpsb
pop
dec
in
out
ss
xor
sub
sbb
push
jg
hlt
bsf
das
pop
dec
jbe
aad
cmp
xor
sbb
in
or
pop
scas
das
fbld
lcall
jns
iret
lock
mov
xchg
mov
cmp
xchg
jge
sbb
xor
lods
pop
mov
push
dec
pop
scas
xchg
dec
fimull
pop
push
xchg
pop
inc
out
and
cmp
add
pop
insl
pusha
repnz
or
sub
into
and
and
cld
or
sbb
push
in
hlt
fnstenv
jecxz
xor
movsl
sbb
or
jmp
cmc
test
dec
imul
and
cmpl
or
data16
and
jne
std
dec
lds
xor
jmp
mov
bound
jb
xlat
adc
out
cmp
pop
ljmp
mov
or
xor
clc
nop
or
cmp
mov
jle
js
cmc
mov
repnz
in
std
ljmp
fcompl
flds
adc
loope
mov
inc
fisttpl
scas
int
mov
adc
push
sub
xlat
dec
repnz
mov
cmpsb
imul
cmp
loope
xchg
aas
dec
push
mov
and
aaa
shl
aas
hlt
mov
adc
jle
in
sbb
ss
inc
fwait
mov
dec
test
stos
add
mov
inc
xchg
loopne
mov
aas
mov
jns
pop
pop
inc
gs
pop
pusha
jne
inc
push
pop
fs
es
cs
nop
leave
or
xchg
lcall
outsb
mov
xchg
loopne
mov
inc
mov
dec
movsb
add
xchg
pop
xchg
out
mov
aas
scas
jmp
sti
push
lahf
std
adc
out
aaa
mov
xchg
sub
outsb
outsb
test
roll
cltd
sti
std
push
xorps
mov
mov
and
or
addr16
mov
push
jnp
mov
jle
mov
pop
rol
cmp
insl
lret
xor
and
adcl
dec
out
fmul
mov
jl
sub
mov
cli
xchg
mov
or
clc
fs
push
adc
in
adc
sub
push
push
push
lea
jbe
adc
dec
jo
icebp
icebp
out
mov
and
jns
mov
sbb
inc
testl
or
dec
rdmsr
sbb
xor
and
sbb
mov
xchg
mov
mov
aad
loop
lock
sbb
cwtl
or
fs
ret
sbb
notl
sub
stc
dec
push
push
xchg
push
mov
stos
pop
push
adc
xor
fmulp
sbb
pop
sarl
pop
sub
push
in
inc
in
push
insb
push
mov
jo
inc
outsl
rcll
xchg
hlt
pop
push
or
mov
into
dec
shrb
scas
outsb
sti
xchg
xchg
fcoml
popf
or
pop
data16
mov
call
xchg
push
xlat
push
call
aam
popa
loop
adc
repz
adc
adc
inc
mov
pop
scas
rcl
push
and
imul
ficoml
icebp
dec
fcmovnu
adc
test
push
mov
rclb
mull
xchg
add
xorl
fwait
adc
dec
sub
jbe
and
lret
outsb
or
leave
ficoms
ret
inc
sub
add
std
and
arpl
add
jns
scas
into
mov
stos
inc
test
sbb
mov
loopw
out
jnp
add
jecxz
sbb
scas
test
imul
pop
adc
mov
outsb
mov
mov
cmc
xchg
add
xor
rcll
adc
out
dec
mov
lods
add
or
and
test
add
cmp
jl
jmp
dec
das
mov
mov
into
pop
gs
adc
call
xchg
rclb
mov
inc
jns
jle
fistpl
lods
out
cltd
xor
mov
push
mov
scas
mov
pop
inc
hlt
je
loop
fdivr
jo
pop
or
inc
sub
cwtl
xchg
and
mov
test
jb
ret
push
popl
pop
insl
push
test
ret
sub
mov
pop
jl
les
test
fmull
and
mov
scas
lods
popf
dec
pop
fiaddl
aam
pop
xchg
int3
ja
push
cmpsb
sbb
adc
jno
cmpb
sub
mov
jmp
mov
or
out
pop
pop
cmp
jnp
loopne
xchg
in
int
imul
stos
cmpb
lods
arpl
sbb
sti
test
daa
fdivrl
cwtl
rcr
test
lret
mov
lods
outsb
ja
in
ljmp
push
jae
pop
adc
inc
in
repz
xlat
jo
mov
mov
sub
pop
jmp
pop
xor
test
iret
xchg
push
fisubl
loope
je
sbb
mov
add
aas
lcall
lret
pop
std
mov
cld
xchg
test
je
sarb
repnz
xchg
jae
mov
jo
jmp
push
cwtl
xchg
push
pop
jg
gs
and
nop
and
dec
mov
repnz
loop
mov
fsubrs
mov
cmp
test
jl
xchg
or
cmpsl
pop
jb
fldenv
push
std
call
or
mov
or
or
repz
inc
cli
xchg
fimull
insl
push
push
shl
mov
les
ds
scas
and
std
push
inc
ficoms
shl
xchg
es
adc
or
cwtl
je
rol
es
daa
inc
mov
in
adc
sbbb
mov
jge
xor
aas
lcall
sbb
loope
shll
inc
adc
cmp
sbb
fdivrl
stos
fidivrs
mov
add
lock
xor
icebp
shrl
sbb
xchg
jg
popf
sbb
jle
dec
xor
mov
and
mov
sti
in
cltd
insl
xchg
in
iret
cld
hlt
cli
pop
pop
pop
int3
stos
pop
adc
test
inc
dec
jecxz
mov
pop
mov
nop
pop
imull
cmp
outsb
xchg
jnp
mov
mov
data16
arpl
add
push
cwtl
pusha
jecxz
lcall
xchg
jne
mov
push
jle
add
fstp
pop
cmpsb
jne
adc
roll
push
jns
or
daa
test
fisubrl
mov
mov
lds
pushl
fisubrl
repz
xor
test
aaa
cmp
aam
fsubrs
push
mov
imul
pop
xor
xchg
push
lods
xor
js
adc
fildll
mov
outsl
pop
pop
es
aam
ljmp
cmp
gs
jbe
xchg
enter
sti
fs
dec
jle
pop
iret
mov
rol
cmp
test
xchg
xor
lods
fldenv
mov
out
mov
mov
mov
in
pop
ret
mov
repnz
rolb
mov
jge
mov
lahf
mov
mov
push
and
dec
repnz
divb
rcrb
sbb
outsl
and
ss
cmp
into
aaa
jl
mov
push
loop
inc
xchg
decb
cmp
mull
push
jns
xchg
sbb
jbe
jp
popf
jle
loopne
in
pop
fstl
inc
ljmp
test
iret
jae
lret
cmp
iret
popa
dec
mov
push
and
jmp
pop
aad
or
and
inc
lods
jo
fisubrs
jle
cld
repnz
out
dec
sbb
push
lods
mulb
pusha
mov
xor
cmp
push
icebp
sub
xchg
lcall
mov
das
arpl
cltd
cmp
ss
sbb
inc
push
js
into
leave
js
test
mov
pop
sub
pop
icebp
out
lock
add
out
pop
dec
int
lods
and
dec
ljmp
xchg
push
jecxz
dec
rclb
int
cmp
std
orl
stos
scas
data16
into
push
inc
inc
das
mov
mov
aam
shll
movsb
popf
sti
and
and
cs
arpl
xchg
idiv
xor
or
lcall
mov
loop
imul
pop
icebp
push
jle
mov
pop
adcl
inc
xor
mov
adc
mov
pusha
xchg
scas
xchg
std
stc
rcrb
sahf
js
loope
mov
imul
mov
cmpsl
scas
int3
popf
inc
cmpl
repz
cs
jg
ljmp
mov
sub
jb
sbb
adc
cmp
xor
jae
jg
arpl
mov
xor
adc
pop
fdivl
inc
mov
add
cmp
inc
pop
aam
in
xchg
clc
fwait
xchg
ffree
in
push
jne
sub
push
jne
sahf
push
push
clc
aaa
fisubrl
outsl
fidivs
pop
and
mov
outsb
jo
fcoms
and
xchg
mov
sub
subb
rolb
in
mov
mov
push
test
dec
lea
xchg
mov
xlat
adc
mov
test
jg
lods
into
out
dec
out
lahf
in
scas
cmpsl
jae
sub
mov
adc
or
psubb
mov
adc
jmp
mov
fdivl
mov
std
jl
inc
push
cli
jbe
pop
insb
fiadds
lcall
cmp
out
sbb
mov
mov
add
stos
notl
mov
mov
push
sbb
ds
fwait
bound
mov
lret
rcrb
mov
xchg
and
in
sti
cmpl
mov
sub
testb
outsb
jle
fcmovne
inc
sti
test
jno
mov
dec
lret
push
mov
scas
repnz
movq
xor
push
int3
mov
jae
adc
pop
push
pop
sub
mov
gs
stc
dec
xchg
fstl
rorb
fs
jnp
fst
mov
cmc
ret
fmul
inc
jae
jg
jnp
mov
das
fidivl
mov
mov
lock
lret
fcomps
in
sub
jns
pop
je
pop
dec
stc
rcrb
xchg
bound
add
mov
jo
xchg
dec
mov
dec
cmp
fwait
lock
mov
mov
jecxz
lock
push
cmpsb
daa
cmpl
cmp
pusha
lds
insb
lea
mov
push
cmp
push
jns
pop
data16
cmp
ret
gs
jnp
jle
imul
enter
cmc
lds
pop
cmp
in
and
sub
inc
jb
xorl
pop
pminsw
lret
mov
ds
and
sahf
xor
popa
stc
ret
mov
or
adc
test
pop
fcomp
outsl
ret
xchg
xchg
imulw
pop
mov
jns
repz
add
gs
mov
pop
mov
fildll
pop
mov
in
and
stos
fadds
decb
mov
jg
repz
jno
test
xchg
cmp
loopne
mov
jnp
fsubl
insl
xchg
lea
insl
jbe
mov
ljmp
ja
shll
je
ret
inc
mov
stos
push
aaa
sbbl
divb
pop
jno
mov
cmp
pop
cli
in
mov
pop
adc
mov
clc
loope
aad
fmul
or
scas
cmc
out
push
lahf
scas
pop
push
dec
bound
dec
popf
mov
movsb
push
insb
inc
xchg
negb
loopne
push
iret
scas
testl
aas
xor
jne
imul
xor
dec
jg
nop
pop
sbb
addl
insl
or
stos
sub
aam
fsubl
mov
cmp
pop
adc
xchg
xorl
arpl
rorl
sahf
cmp
in
inc
add
cs
jnp
fsts
bswap
push
dec
xor
sbb
gs
in
imul
cmp
inc
sbb
cmpsb
dec
dec
and
and
xchg
jl
sub
sbb
testb
mov
movsl
fidivl
cmpb
push
lcall
jl
push
xor
movl
cltd
ds
mov
dec
add
cmpsb
cmc
addl
cli
and
cmp
fimull
cmpsl
lds
jecxz
mov
and
sti
mov
popa
xor
les
stos
test
push
scas
ret
cld
add
inc
push
int
loope
inc
jb
repz
ljmp
push
and
movd
lcall
sahf
jle
dec
xor
call
imul
add
imul
pop
icebp
popf
pop
sbb
xchg
cltd
cli
jno
push
inc
ds
mov
dec
ret
sub
jbe
mov
pop
decb
jne
sub
sbb
mov
mov
push
clc
scas
mov
test
jg
shlb
pop
push
or
mov
fnsave
adc
rorb
adc
xchg
add
xor
push
sub
xchg
ss
jne
and
shlb
sub
cmp
lods
pop
lahf
jo
dec
test
mov
cli
pop
fs
mov
iret
push
push
push
sub
lret
lret
lret
cmp
cmp
aas
dec
pop
push
pop
sub
adcb
outsl
aad
sbb
fistps
inc
pop
arpl
outsl
ficoms
mov
cs
sub
pop
les
in
les
cltd
adc
decl
mov
mov
and
xor
lea
loopne
sbb
loop
call
mov
pop
lods
ljmp
lds
lods
shl
cli
nop
loopne
shll
ds
dec
xor
sub
loope
dec
dec
cmp
xchg
pop
in
jnp
and
add
lock
xorb
sti
or
mov
lahf
adc
imul
lds
cmp
add
and
rclb
cltd
push
inc
xchg
adc
sub
imul
loope
pop
jg
sub
lret
sti
xchg
repz
repz
es
in
jns
test
cs
int3
fcomip
int
dec
pop
nop
cmpsl
popf
jp
shl
repz
scas
in
mov
sahf
in
push
mov
sbb
cmp
xchg
mov
popa
imul
repz
pop
jge
and
outsl
iret
xor
mov
je
jecxz
jae
inc
dec
std
decb
sub
jno
call
jne
dec
cmp
xchg
push
loope
popf
loope
ss
shl
sti
rolb
jp
sub
dec
xchg
scas
leave
mov
pop
test
pop
mov
js
adc
insl
mov
sbb
cmp
fwait
xchg
dec
pop
lret
add
addl
aam
jge
popf
sub
jmp
fwait
hlt
jg
and
in
jb
jecxz
out
ds
adcb
sub
sbb
rolb
ret
lret
lret
in
mov
pop
sbb
dec
inc
and
xchg
adc
and
std
jb
add
pushl
add
dec
rorl
and
xor
xchg
daa
test
push
xchg
xchg
ror
aam
push
loope
jnp
aad
wbinvd
imul
into
fcmovnb
lods
mov
inc
mov
sub
addr16
aad
fsub
dec
dec
mov
fwait
jns
push
cmc
cmpsb
add
or
fistps
or
lea
loop
pop
xchg
icebp
dec
xchg
xchg
mov
loopne
movsl
lret
add
inc
fwait
inc
mov
test
dec
shrl
test
out
fisubs
sub
and
popa
jle
push
mov
adc
scas
xor
and
gs
inc
in
mov
cmp
popa
push
inc
in
in
jno
ret
jmp
int
mov
ror
and
cmp
stos
jg
call
ret
dec
inc
lods
repz
mov
scas
movsl
sbb
ja
cmp
inc
mov
jnp
mov
mov
je
daa
pop
stos
dec
or
jmp
clc
push
cld
push
cmp
push
dec
orb
mov
cld
aad
int
dec
call
mov
call
jnp
mov
imul
mov
xchg
pop
test
cmp
inc
and
cmp
nop
icebp
sbbl
jno
xchg
push
pop
cld
pop
js
jb
pop
jb
lods
jge
sub
stos
mov
sarl
loop
popf
sub
xchg
add
xor
push
lds
mov
jns
push
cmpsb
lods
lret
shll
push
les
xchg
in
out
jecxz
pop
sub
sub
xchg
mov
inc
or
mov
call
ljmp
pop
inc
pop
dec
fcomi
xlat
test
ss
popf
incb
popl
add
pop
fbstp
cs
sub
in
aam
mov
mov
jbe
sbb
aaa
iret
inc
dec
jnp
mov
and
scas
xchg
rclb
js
mov
jno
mov
lret
roll
add
repz
and
std
xor
pop
sub
mov
ds
jmp
xchg
lret
and
xchg
lea
jecxz
outsl
dec
mov
in
call
int3
pop
sarl
jnp
lds
fdivs
out
cli
ja
popa
pop
mov
cld
sbb
loope
push
jecxz
jge
adc
into
stos
inc
pop
mov
cwtl
push
sub
mov
aam
push
insb
xor
repnz
inc
test
add
push
mov
out
mov
and
in
mov
movsb
sub
xchg
cmp
js
mov
dec
push
cli
mov
fdiv
push
outsb
pop
xor
xchg
es
sub
jnp
scas
add
and
jnp
jge
mov
sbb
cmp
sub
sub
test
roll
call
out
sub
sbb
aas
and
xor
jmp
scas
lds
aad
loope
xor
dec
mov
sbbb
out
pushf
scas
add
or
int
sbb
or
push
aad
imul
sbbl
aad
jl
fnstcw
divb
pushf
push
xor
dec
ret
lret
xchg
clc
aam
cmpsb
dec
pop
fisubrl
push
int
push
ret
jg
ror
stos
pop
jnp
ds
outsb
stos
imul
in
push
hlt
inc
sub
dec
iret
or
pop
dec
push
xchg
and
xchg
add
mov
movd
cmp
lret
cmp
or
pop
shl
or
or
outsb
jae
ret
and
lcall
or
mov
clc
jmp
ret
mov
push
sbb
adc
lods
dec
cmp
xor
or
xlat
stc
inc
adc
dec
ljmp
out
in
mov
dec
jl
fisttpll
sbb
push
fcompl
daa
repnz
mov
lret
pop
ret
inc
xchg
dec
roll
test
das
mov
jo
lods
hlt
jp
std
push
jg
rcrl
dec
and
cmpsl
xchg
paddsb
pop
mov
cmpsl
ret
cmp
int3
lds
sbb
inc
mov
das
imul
pop
and
fcoms
xchg
das
test
add
xchg
push
sbb
out
sar
das
cli
or
adc
fstl
sarl
sbb
test
mov
or
push
in
lock
mov
or
and
fsts
push
andb
test
add
cwtl
loope
lret
cmp
push
pop
into
xlat
ficompl
inc
lret
add
jo
push
outsb
les
das
stos
cwtl
jo
scas
cmpsb
fists
sub
cwtl
pop
and
cmpb
mov
sti
ret
shl
sub
into
pop
xor
lds
adc
or
lret
and
imul
test
lahf
xchg
aam
aam
adc
mov
jbe
pop
into
in
dec
mov
dec
jae
and
and
rcrb
mov
sbb
movl
das
pop
out
rep
movsl
jbe
repnz
negb
sti
insb
call
fidivrs
dec
push
jge
scas
dec
imul
add
shlb
rolb
mov
push
xchg
jmp
aas
int
xchg
xchg
ds
jns
aam
cwtl
sbb
loop
mov
xor
mull
mov
cmp
mov
lcall
jge
mov
pushf
sbb
xchg
jmp
pop
inc
push
rcrl
xor
scas
inc
int
adc
or
xchg
in
pop
xchg
xorb
or
jg
adc
out
sub
push
xchg
cmp
xor
inc
test
sti
dec
xchg
je
adc
scas
jno
push
push
ja
mov
add
sbb
xchg
imul
add
push
xchg
cmp
les
sbb
arpl
inc
xchg
jle
out
shlb
inc
mov
fistpl
rcrl
xor
mov
dec
and
pop
in
mov
out
movsl
xchg
mov
je
iret
movsl
xchg
dec
xchg
loope
inc
or
push
adc
mov
xchg
mov
inc
lret
lcall
sbbl
mov
stos
sbb
fdivrs
loop
mov
sbb
xchg
or
sti
adc
out
shrb
in
mov
adc
pop
or
inc
xor
dec
or
lods
mov
lds
stc
les
xchg
xchg
push
popf
pop
cmp
notb
sbb
pusha
xor
sti
xchg
cld
imul
cltd
lcall
cmp
mov
xor
push
insl
add
and
mov
sti
mov
push
pushf
jecxz
jg
pop
xchg
push
push
sbb
xchg
jg
xor
inc
shlb
jl
mov
out
xchg
adc
and
lods
sti
cwtl
jl
notb
or
cmp
mov
cltd
inc
cli
shl
aaa
mov
cmpsl
mov
push
adc
shll
add
mov
add
mov
das
popa
pop
xchg
scas
lret
mov
loopne
sbb
cmpsl
in
ljmp
nop
call
xor
fxch
repz
test
out
ljmp
jl
mov
testl
or
dec
xchg
push
mov
nop
shll
outsl
and
mov
leave
roll
mov
lahf
outsb
mulb
ret
stos
mov
mov
movsb
loopne
cmp
int3
scas
popf
jnp
imul
pushl
push
mov
dec
scas
gs
fsts
leave
aam
int3
inc
jmp
mov
in
pop
int3
inc
cmpsl
or
test
mov
adc
in
outsb
out
xchg
xchg
in
adc
xchg
clc
hlt
je
jne
jecxz
xor
aad
ljmp
test
test
leave
test
push
push
out
dec
pop
fistl
scas
mov
aad
add
push
or
adc
insl
jg
xor
xor
adc
lods
loopne
mov
mov
mov
aad
or
push
lret
and
lahf
sbb
dec
lcall
rcl
cmpsb
cmp
lock
push
or
push
shlb
mov
xor
pop
adc
fcmovbe
shrl
aas
xor
out
stos
stos
roll
outsl
gs
bound
js
cwtl
or
add
xor
ret
outsl
mov
outsb
lods
int
push
ficomps
enter
jmp
fdivl
repz
jmp
dec
pop
sahf
sub
aaa
push
in
push
test
jnp
lret
in
sahf
xlat
or
pop
mov
mov
inc
pop
dec
push
and
sbb
dec
je
outsb
xor
sbbl
lcall
out
xchg
adc
or
ficoml
and
imulb
jae
xlat
pusha
mov
cmpsl
xchg
shrb
mov
inc
sbb
test
or
mull
jecxz
ret
test
js
jle
jg
pop
jp
cmp
push
inc
mov
inc
inc
push
mov
lock
mov
rcr
je
sbb
or
add
shlb
xchg
shl
pop
bound
mov
mov
pop
dec
ret
stos
minps
jae
jl
out
test
push
lahf
int
pop
inc
int3
mov
stos
mov
mov
lret
jecxz
lds
scas
push
jne
lret
test
pop
xlat
lock
cmp
add
adcl
aaa
sub
jp
mov
loopne
mov
lcall
and
sbb
aad
sub
jge
push
sti
push
ds
push
xchg
push
aaa
sahf
movsl
ljmp
js
scas
in
cld
lret
shll
add
test
mov
scas
inc
pop
rorl
jne
inc
add
jp
xchg
cmp
push
jecxz
xor
call
adcl
lea
pop
dec
mov
cld
xor
test
push
mov
pop
mov
popa
shll
xchg
stos
push
pop
test
jp
dec
andb
je
cli
test
jle
push
test
jg
sbb
cltd
ret
fdivrp
jno
test
aam
popf
rcr
inc
cs
adcb
cs
aad
ja
xor
in
mov
aam
push
mov
xchg
repnz
outsl
ret
mov
in
scas
movsb
movsl
in
cmpsb
pop
xchg
popa
les
xlat
outsl
push
adc
pushf
pop
add
mov
pushf
sti
outsl
xor
sub
outsl
mov
cmp
inc
inc
inc
adc
lea
mov
ljmp
pop
pop
mov
lret
mov
jecxz
movsl
mov
out
mov
fisubrl
and
cmc
cmpl
push
and
fimuls
test
sub
cwtl
xchg
aas
iret
push
sub
test
aaa
xor
and
out
mov
scas
je
shlb
sbb
mov
mov
adc
pop
jge
cmpsb
pop
jbe
xchg
push
pop
adc
cmp
cmp
inc
or
pop
xchg
dec
mov
push
les
add
inc
ret
dec
ret
fwait
xchg
xor
lret
into
cmp
bound
xchg
scas
push
jle
sbb
cltd
test
mov
fucomip
es
push
mov
xchg
icebp
sbb
enter
cmp
jmp
fdivr
dec
aaa
cmc
outsb
icebp
rorl
test
add
push
push
fldcw
cltd
pop
bound
pop
inc
jb
pushf
pushf
mov
cmp
sar
inc
dec
incl
mov
ljmp
insl
push
in
repz
je
sbb
mov
jne
mov
data16
jbe
aam
int
mov
dec
div
imul
mov
lods
mov
cmp
or
test
iret
stos
and
jb
push
in
jmp
or
mov
adc
leave
pushf
mov
push
repnz
sub
test
cmp
fcom
or
xchg
cmpsl
mov
push
repz
inc
sti
push
cmp
adc
scas
xor
adc
mov
bound
scas
cs
mov
dec
sti
xchg
fnstenv
cmc
inc
pusha
pop
dec
fistps
test
inc
out
fsubs
repnz
ss
cmp
xchg
adc
or
mov
jecxz
adc
out
adc
pop
or
adc
mov
shrb
mov
outsb
in
out
cmp
fiaddl
mov
and
or
icebp
emms
push
add
add
mov
sub
mov
fnstcw
insb
ret
addb
leave
mov
adc
int
add
mov
rcrb
imul
sbb
and
mov
addr16
mov
xlat
jle
lods
lcall
pop
les
cli
and
pop
push
inc
ljmp
ret
orb
js
in
fdivs
jmp
sbb
jle
pop
xor
data16
stc
push
call
pop
shlb
pop
rcr
push
mov
cmc
idivb
leave
cmc
xor
push
mov
sub
out
pop
scas
cmpsl
jge
cmpsl
mov
sub
inc
es
inc
popf
and
dec
push
pushf
mov
jl,pt
cmp
mov
imul
popf
adc
or
push
std
hlt
push
call
and
sub
cmpsb
loopne
cmp
xor
ficompl
sbb
pop
outsb
mov
out
xchg
aas
pop
pop
pop
sub
push
pop
std
orl
sub
add
pop
leave
sub
or
mov
push
das
push
je
int
push
add
and
stos
cs
mov
mov
pop
push
data16
xchg
add
lea
out
mov
dec
mov
push
mov
mov
loope
gs
out
inc
pop
mov
pop
jbe
cmp
inc
xchg
mov
xchg
loopne
jb
mov
jecxz
loop
push
mov
loopne
dec
mov
sbb
mov
sub
pop
in
mov
fucom
jno
cld
cwtl
adc
dec
inc
push
loope
ret
xor
sub
mov
jl
cwtl
xor
js
pop
mov
cmp
cmp
ss
and
cs
in
jge
fwait
push
xlat
pop
ss
aad
inc
pop
int
push
je
in
mov
jbe
std
clc
pusha
int
push
sti
xor
bound
test
xor
test
mov
mov
das
sub
orl
xchg
fildll
dec
scas
push
inc
and
jp
scas
jmp
lea
push
in
pushf
add
mov
cmc
stos
popa
stc
pop
orl
and
stos
das
mov
outsl
loopne
in
pop
mov
push
test
mov
outsb
ja
ss
add
lcall
and
inc
flds
pop
jecxz
dec
sub
adc
sbb
mov
adc
dec
mov
pop
jne
cmp
stc
iret
mov
lock
movsb
stc
stos
dec
outsb
imul
fildl
lahf
lods
jp
mov
outsb
imul
sub
jnp
cmc
or
xchg
push
cltd
jne
cs
adc
pop
nop
cmp
sahf
arpl
lcall
pop
clc
lods
pop
lods
loope
insb
xchg
cwtl
pop
stos
jge
test
stos
and
inc
push
fisttps
pushf
orl
push
jbe
daa
xchg
push
adc
or
mov
sbb
jae
push
sub
shlb
mov
lret
mov
pop
lods
cmpsb
dec
aaa
push
jnp
fldl
aam
xor
mov
or
mov
popa
imul
das
iret
mov
stos
jb
icebp
leave
ret
mov
xchg
jae,pt
inc
push
ljmp
push
dec
lods
jnp
fildll
pop
pop
push
test
push
dec
sti
scas
xchg
in
cli
sahf
pop
dec
arpl
aaa
and
inc
or
xchg
sub
shll
sub
mov
lds
mov
pop
or
cmc
fsubr
add
sar
adc
out
cli
jge
mov
lods
nop
popa
sti
lea
mov
subl
enter
scas
mov
leave
hlt
mov
shll
cmp
sti
pop
mov
es
mov
dec
push
imull
add
shrb
or
aas
sub
xchg
or
imul
jl
pop
cltd
sbb
sahf
jnp
jmp
stc
jnp
lea
mov
dec
sahf
icebp
push
out
out
sub
das
add
dec
xchg
stos
cld
out
mov
outsl
shl
fwait
and
ds
arpl
push
scas
push
sub
ds
cltd
mov
adc
adc
cli
loopne
mov
jp
aad
loop
push
mov
int
mov
pop
sub
in
xchg
movsb
mov
cmp
mov
push
clc
mov
lds
test
call
xchg
jg
add
sti
jmp
enter
dec
xchg
std
mov
mov
jb
jne
movsb
dec
dec
mov
or
es
mov
xchg
xchg
inc
fiadds
test
mov
pop
pop
clc
inc
or
or
subl
stos
cmp
xchg
sar
mov
add
daa
jbe
sbb
adcb
dec
mov
push
clc
stos
mov
sarl
rcrb
push
lcall
stos
nop
lahf
out
lock
mov
mov
stc
mov
lret
cmp
xchg
xor
inc
sub
lret
sbb
jl
mov
xchg
icebp
fistl
sbb
out
dec
jo
popf
dec
rcrl
imul
mov
jmp
mov
popa
mov
mov
cmc
xchg
out
push
ret
stos
test
gs
adc
pop
rol
es
call
push
push
adc
pusha
xchg
int
pop
cli
adc
push
out
out
mull
and
push
mov
jno
aam
int
icebp
push
ret
bnd
pop
add
das
addb
std
leave
scas
adc
xchg
pop
cltd
jmp
xchg
into
lods
inc
jns
sub
insb
pop
out
dec
scas
push
ret
in
pop
loop
dec
add
pop
mov
shrb
jns
rorl
xor
dec
dec
stos
dec
push
call
lret
push
popf
jno
repnz
insb
mov
pop
mov
hlt
cmp
xchg
mov
cmpsl
push
push
shr
xchg
adc
mov
sbb
xor
jecxz
cltd
add
pop
scas
popa
xchg
sub
scas
mov
scas
pop
ret
and
das
es
lock
loop
out
mov
inc
loop
cmp
push
pop
push
mov
mov
in
pop
inc
mov
ds
mov
mov
cmpsl
cmp
sub
pop
pop
xchg
out
push
js
bound
test
gs
inc
clc
mov
xchg
mov
inc
mov
das
xor
roll
aas
adc
sbb
sub
inc
jno
ljmp
pop
xor
adc
fcoml
adc
and
cmp
adc
loope
pop
in
cmpsl
test
jecxz
fldl2e
dec
jo
dec
repz
xlat
mov
mov
lods
testb
push
pop
xchg
push
cld
inc
out
mov
inc
call
dec
icebp
dec
or
sub
cmp
fcompp
push
mov
mov
fcom
jl
mov
lods
das
mov
in
movsb
dec
mov
shll
packuswb
mov
cmp
mov
dec
mov
negl
test
movsl
adc
add
jno
rcr
mov
pop
sub
lods
xchg
cltd
hlt
aaa
sti
lahf
fs
mov
out
imul
mov
pop
dec
push
out
cmpsl
sub
in
push
inc
mov
xchg
aaa
bound
aas
jo
xor
inc
jge
xor
add
stos
out
inc
test
clc
iret
inc
pop
mov
std
imul
add
pop
nop
cmp
jg
xchg
outsl
and
adc
mov
or
xchg
sub
inc
sub
cmpl
lea
fcoml
mov
add
pop
push
xor
pop
mov
inc
imul
in
lahf
lea
adcb
fisttpll
inc
test
and
dec
pop
inc
mov
aam
push
and
int3
fs
dec
nop
out
mov
pop
pop
dec
test
inc
xchg
movsl
lea
cmpl
inc
lods
add
xlat
test
repz
mov
rcl
xchg
out
mov
in
sub
out
out
or
mov
push
jo
add
fldt
or
in
leave
clc
jne
inc
dec
mov
jb
popa
xchg
and
jecxz
push
inc
or
shrl
sbb
clc
or
adc
stos
fisttpl
pop
cmp
jecxz
cltd
cmp
dec
decl
mov
lods
orl
std
xchg
call
cmpsl
mov
clc
stos
sbb
sarb
cmp
adc
and
cwtl
sub
sbb
out
and
mov
stos
insb
out
sub
xchg
sub
sub
icebp
jbe
mov
repnz
int3
pop
sub
mov
pop
push
cmc
jae
fcmovnu
push
out
sbb
repnz
into
insl
enter
js
nop
or
sahf
cmp
push
jmp
cs
and
into
pop
dec
repz
aam
adc
enter
fs
imulb
push
insl
sbb
ret
adc
shll
mov
cmpl
icebp
es
lods
mov
pop
mov
jne
das
and
ss
mov
adc
sub
xor
les
out
imul
push
cmp
push
inc
xchg
fidivrs
adc
scas
fsubrl
push
stos
jmp
insb
dec
add
stc
and
jo
sbb
aas
mov
stos
lock
push
or
xor
lock
jecxz
jge
sbb
xor
cmp
sbb
mov
sbb
iret
jg
and
mov
jbe
sub
loopne
mov
leave
fisubrl
push
inc
pop
dec
push
jmp
pop
jecxz
adc
aas
dec
insl
fwait
mov
aaa
ljmp
push
icebp
cmpsl
sub
mov
jp
adc
adc
insl
mov
lods
add
bound
ror
cmp
dec
js
bound
mov
add
sbb
or
clc
lods
mov
pop
mov
sub
jne
pop
addr16
xlat
adc
mov
adc
loop
aam
stos
inc
or
mov
cld
pop
pop
ds
in
jns
insl
int3
jmp
mov
sbb
adc
pusha
mov
iret
pop
enter
ret
sbb
pushf
pop
into
pushf
push
xchg
lock
imul
pop
jno
or
mov
out
test
imul
insl
in
cld
mov
rcll
out
cmp
jl
loope
mov
mov
sub
dec
fwait
pop
out
inc
jns
movsl
cli
fiaddl
pop
jmp
push
xchg
lahf
outsl
xor
push
scas
mov
xchg
popa
outsb
xchg
sbb
inc
stc
sbb
rcrl
aad
fistpll
fsts
add
hlt
sub
add
mov
mov
test
lahf
mov
paddb
arpl
ret
aaa
jbe
mov
add
mov
repz
jle
jp
out
lret
stos
mov
pop
mov
cmp
testb
lret
mov
jnp
cmp
adc
dec
jb
ss
xchg
mov
sub
dec
push
testb
xchg
sti
ja
add
repz
xor
cmp
mov
mov
out
jnp
push
xlat
outsl
and
xchg
aad
dec
mov
ja
loopne
adc
jg
jbe
jmp
fs
sbb
imul
or
jb
mov
jmp
lods
jbe
mov
in
pop
es
out
aam
ror
imul
addr16
sub
rcrl
nop
jg
cmpsl
fistpl
or
lcall
in
and
sub
out
cltd
out
cmp
push
cmp
ja
loopne
mov
stos
testb
fadd
xchg
lret
imul
addl
loopne
daa
xchg
push
mov
jp
push
xor
add
mov
add
xor
mov
int
inc
mov
dec
into
bound
subb
cli
mov
imul
push
pop
cmpsl
xor
shlb
sarb
lret
jmp
dec
push
push
inc
jmp
cmc
push
mov
pop
fmul
movsl
mov
jg
cwtl
jns
pop
push
inc
pop
out
outsb
ss
pusha
inc
lcall
push
mul
pop
div
mov
mull
push
mov
or
mov
cmp
cmp
daa
and
mov
adc
mov
lret
mov
imulb
mov
shlb
icebp
jns
lcall
ja
xchg
repz
out
or
mov
jg
lods
pop
inc
aam
rorl
mov
ljmp
lds
cmp
out
cli
lret
pushf
dec
mov
ja
icebp
cmpsl
jo
mov
repnz
popf
jmp
loop
mov
cmp
lsl
hlt
popa
movsl
inc
mov
xchg
mov
dec
and
andb
inc
cmpsb
xchg
lea
hlt
inc
jno
mov
mov
addr16
lds
push
mov
loopne
sub
mov
daa
or
out
test
les
inc
outsb
sub
leave
pop
xchg
mov
lahf
out
jns
call
push
fisttpll
mov
adc
in
push
ret
jp
push
imul
cmpsl
push
gs
pop
xchg
jl
mov
xchg
js
push
icebp
mov
dec
xlat
cltd
dec
push
ss
push
add
cmpsb
rcrb
push
mov
insb
jmp
lock
lret
cli
repz
and
fwait
dec
popf
xchg
add
mov
mov
aaa
jl
pop
adc
popa
stos
ljmp
mov
pop
push
pushf
sbb
cltd
mov
add
push
push
in
aad
jle
test
pmuludq
das
ds
xchg
ret
dec
sub
mov
pop
lods
pop
adc
fidivrl
stos
inc
push
adc
pop
mov
jo
loopne
aaa
int
stos
cmp
data16
xchg
or
mov
stos
popf
and
pop
xor
test
out
inc
pop
jno
pop
and
or
push
sarl
lret
ss
inc
aam
repnz
sbb
jbe
mov
sbb
loop
popf
data16
in
cli
sub
mov
sbb
jle
sbb
in
adc
je
push
aad
and
push
sbb
dec
xchg
pop
cli
inc
cltd
repnz
inc
dec
pop
cmpsb
cmpsl
mov
mov
ljmp
push
mov
imul
hlt
dec
adc
mov
mov
mov
jmp
rclb
add
inc
cld
and
cwtl
por
jns
pusha
mov
jbe
js
fstpl
dec
test
out
or
sub
or
adc
lret
inc
in
js
xor
les
jle
in
repnz
int3
fisubrs
pop
mov
pop
ss
mov
dec
repz
aam
inc
stos
js
stos
cmc
lret
iret
cmpsb
lods
call
pavgw
cmp
bound
inc
pop
jns
or
dec
sbb
mov
mov
lret
lret
lods
les
mov
sub
jno
cmp
add
add
adc
mov
and
ljmp
cltd
mov
push
aas
ret
xchg
idivb
mov
gs
pop
gs
fidivl
dec
ds
xchg
mov
stc
xchg
imul
add
in
mov
aam
mov
adc
sahf
or
jns
dec
fldl
mov
aam
inc
ja
movsl
in
jae
push
call
xchg
mov
jle
add
dec
cli
fst
out
testl
repz
mov
mov
rcrb
insb
pushl
mov
push
in
sub
pop
jle
cmc
push
int3
push
push
dec
test
push
pushf
shlb
shrb
xchg
clc
jmp
push
jge
movsl
xor
xor
movsl
jecxz,pn
jp
jl
std
lret
out
in
sbb
fs
data16
mov
mov
sahf
je
push
call
dec
fnstenv
add
mov
jnp
jns
pop
push
insb
cmp
mov
lods
sub
jmp
sbb
and
out
xchg
xor
ret
popa
push
xor
dec
std
push
inc
adcl
popf
test
nop
push
pop
lods
jl
js
gs
fldcw
sti
shrb
lds
pop
jl
ss
jl
insb
push
popa
rclb
clc
loope
into
fdivl
test
aam
ret
pop
dec
adc
sti
and
icebp
jo
sub
xchg
ss
sti
iret
mov
movl
cmp
mov
jmp
jecxz
push
stos
adc
cs
les
ja
mov
xor
sub
ljmp
mul
je
leave
clc
jne
or
lds
pop
stos
sahf
sub
and
addr16
mov
imul
jb
jns
xor
lds
fsubrs
jo
ja
push
icebp
lds
inc
jnp
pop
lret
pop
xorb
out
lds
ret
jne
xchg
cmp
xchg
sbb
sbb
push
push
mov
popa
clc
mov
jno
loop
push
je
andb
js
es
out
mov
mov
test
shrb
cmova
fwait
ror
outsb
ret
fidivl
arpl
lods
outsl
pushl
test
fsub
jbe
xchg
bound
lret
xlat
gs
or
pop
mov
push
shlb
push
mov
ljmp
sti
aad
adc
push
test
loopne
outsl
test
popa
imul
push
jl
mov
mov
dec
xchg
xor
ret
pop
testl
outsb
or
xchg
mov
test
lahf
cmp
inc
add
daa
mov
ret
dec
or
jae
cmp
jae
aam
lret
bound
arpl
loope
leave
pop
push
push
aad
adc
jecxz
pushf
sti
add
jle
sub
jnp
hlt
xchg
icebp
ret
into
xchg
scas
test
cmp
cmp
lock
aas
mov
ficoml
xor
hlt
mov
ficomps
outsb
or
aad
sar
cld
leave
lcall
mov
ljmp
paddusw
add
jb
arpl
mov
jle
incl
lods
cld
in
lea
ret
pop
shrl
inc
or
ret
movsb
stos
loope
mov
push
and
sub
pop
xor
dec
shll
and
mov
or
mov
ljmp
push
das
lock
mov
adc
mov
xchg
jb
pusha
popa
push
into
mov
inc
dec
lret
pusha
bound
inc
cmpsl
xor
repnz
or
arpl
cld
cld
add
stos
movl
mov
mov
jge
loope
cs
into
leave
test
mov
jmp
sub
enter
xchg
std
sbb
xchg
cs
jmp
inc
push
pusha
push
sbb
insb
rcr
out
sarl
pop
mov
lret
inc
jl
clc
pusha
repnz
mov
mov
sti
fstl
sahf
fistpll
add
arpl
adc
adc
xchg
dec
in
adc
les
mov
ljmp
sub
mov
jg
xor
dec
in
cmp
faddl
cmp
cmc
iret
adc
lret
inc
in
repz
pop
js
adc
lret
mov
adc
not
popf
fldenv
fstpl
js
jg
lcall
sbb
sbb
or
aam
mov
dec
enter
mov
scas
mov
roll
test
push
fdivr
adc
xchg
stos
lcall
inc
jle
inc
jnp
sarl
call
pop
adc
ficompl
cld
adc
mov
pop
clc
and
jecxz
imul
mov
mov
ljmp
mov
cs
push
sbb
outsl
icebp
push
pop
aas
xor
xchg
cwtl
mov
loope
sub
insl
std
inc
push
mov
xor
out
sar
adc
pop
out
rcl
inc
loopne
adc
sti
rcrl
adc
mov
pop
dec
jno
jecxz
mov
push
or
test
scas
jae
lahf
mov
scas
xchg
test
mov
mov
scas
push
pop
jl
out
push
sbb
dec
add
imul
fbld
scas
sub
dec
std
push
mov
fsubs
jecxz
sarb
push
add
fcomps
jge
cli
lahf
mov
shrd
test
jnp
mov
mov
jo
mov
imul
push
or
xchg
adc
adc
jle
aad
push
imul
push
cmp
jns
loop
jg
adc
xchg
dec
cmp
mov
cmpsl
sub
pushf
cld
lea
insl
cld
inc
push
adc
pushf
aam
push
push
pop
mov
inc
dec
mov
call
rcrl
dec
xchg
pop
xor
sub
lea
dec
mov
daa
subb
pop
xor
jl
test
cmpsl
mov
test
xlat
add
jle
sbb
stc
lret
rclb
imul
cmp
das
outsb
xor
ret
add
into
in
shll
lds
xchg
lret
addr16
jecxz
and
cmc
gs
jp
js
pop
ficompl
add
xchg
call
or
jecxz
jae
std
int3
aam
in
nop
mov
push
js
mov
sub
bound
mov
pop
pop
loop
js
fcmovne
xor
push
inc
inc
push
lret
iret
mov
clc
ja
push
in
xchg
or
or
in
push
mov
pop
jne
imul
dec
pusha
xchg
and
jle
xchg
insl
cwtl
mov
sub
arpl
sarb
aas
adc
lods
repz
pop
cmp
lret
decb
les
push
aad
cld
into
fwait
cmp
sub
mov
cli
pop
ljmp
dec
mov
ret
cmpsl
icebp
mov
xor
jg
sub
mov
lahf
cmp
bound
in
mov
scas
daa
loope
jmp
inc
pop
add
dec
push
in
dec
popa
pop
movsb
push
in
mov
subb
inc
cmp
addr16
xchg
mov
inc
push
and
xchg
sbb
dec
mov
cmpsb
or
aad
stos
mov
gs
push
sarb
aaa
dec
mov
sbb
or
dec
sub
mov
hlt
inc
pop
inc
jno
cmp
mov
std
fimull
dec
lods
cwtl
cmp
dec
cmp
rclb
jo
pop
mov
adc
xchg
rcll
push
push
out
mov
lock
testb
mov
cmpl
mov
cmp
stc
push
shrl
mov
mov
das
adc
dec
ficoms
push
scas
out
lahf
imul
lret
or
test
pop
in
xlat
mov
das
or
jne
ljmp
je
sbb
shll
movsb
push
jne
sub
xor
iret
pop
jmp
adc
inc
dec
xchg
mov
aas
jge
hlt
cli
cmp
and
mov
repnz
mov
or
fwait
neg
inc
imul
in
adc
add
and
hlt
cmp
jmp
dec
xchg
add
cmp
sub
cwtl
clc
cmp
push
mov
and
pop
scas
xchg
pop
xchg
sarl
jp
mov
add
dec
scas
cmp
dec
sbb
sti
mov
adc
jp
push
scas
jno
and
lahf
js
inc
stos
push
mov
lods
mov
icebp
loopne
add
mov
pusha
fs
call
xor
outsl
sar
movsb
dec
stos
repz
mov
fldenv
out
mov
sub
jns
cwtl
xor
pop
pop
push
rclb
shlb
test
loope
pop
hlt
les
inc
mov
add
lcall
les
gs
push
jno
pop
inc
out
adc
gs
test
das
rcrb
pushf
cld
add
movsl
in
movl
push
cld
inc
jne
insb
out
stos
dec
movl
iret
int
xchg
lock
hlt
mov
cld
std
fcmovbe
inc
icebp
jo
sahf
repnz
pushf
lock
mov
inc
arpl
mov
lcall
stos
les
pushf
jge
mov
lods
test
and
cld
adc
sub
js
dec
and
test
shll
ret
and
adcl
mov
out
fistpll
leave
or
and
or
push
mov
out
sub
repz
in
stos
or
and
sbb
mov
sbb
cmc
repz
mov
lret
pushl
fmull
xor
pop
xchg
cmp
nop
arpl
xchg
pusha
cmp
mov
push
or
xor
push
bound
mov
lahf
mov
pop
mov
push
fstp
addr16
outsb
into
es
and
lret
ds
xchg
pushf
push
mov
xor
test
cli
lret
rcr
sbb
inc
or
andb
jb
mov
sub
sub
shrl
sarb
mov
push
push
jne
stos
fistpll
inc
dec
add
aaa
loopne
mov
iret
push
loope
xor
jae
push
push
ja
pop
xchg
lock
mov
mov
sar
push
add
jge
push
in
pop
inc
imul
mov
test
insl
rol
lods
push
add
cmpsl
dec
xor
inc
loop
stos
mov
idiv
cmpsb
test
xor
das
arpl
insl
mov
mov
mov
lret
das
into
push
mov
dec
lds
mov
pop
outsl
adc
inc
repnz
mov
add
inc
lret
aas
mov
jmp
sub
movsb
inc
push
daa
mov
xlat
sahf
inc
add
cltd
push
add
mov
or
es
repnz
out
adc
push
lock
roll
lahf
cmp
mov
mov
sub
pop
gs
shlb
cmp
add
je
mov
mov
adc
and
mov
jae
fbld
imul
aas
int
xchg
shrl
decl
push
xor
pop
lock
mov
cmp
shlb
loopne
push
push
popf
cmp
cmp
xchg
lret
sbb
pop
xchg
lock
dec
cmpsl
pop
sbb
sub
push
insl
notl
mov
xchg
or
aam
mov
mov
sbb
mov
sub
outsb
loopne
in
outsb
jbe
repnz
inc
inc
leave
jb,pt
mov
sbb
mov
sti
mov
push
xchg
out
imul
mov
inc
sbb
and
loopne
pop
daa
mov
call
aad
xchg
sbb
adc
jg
popa
arpl
add
mov
mov
jb
and
mov
aad
hlt
jbe
pop
jl
pop
aas
cs
test
les
ja
out
mov
into
cs
aas
pop
pop
cmc
pop
ret
icebp
push
add
mov
popa
cmpsl
push
mov
shrb
inc
sbb
andl
ficompl
shlb
ljmp
shlb
mov
mov
and
cs
push
xor
nop
add
jl
repnz
pop
add
xor
pop
jb
popa
pop
fiaddl
enter
xchg
add
std
sarb
out
into
xlat
push
mov
push
dec
xor
push
movsl
add
imul
inc
mov
mov
outsl
xor
popl
or
mov
fildll
and
push
in
fbld
lahf
pushf
pop
fildl
test
shl
aas
jne
sub
xchg
mov
cld
adc
pop
xchg
lods
jecxz
cmc
fimull
fidivrs
aas
lods
mov
mov
movsb
mov
mov
test
cmp
dec
add
inc
inc
cmp
push
sarl
mov
and
jo
repnz
sub
inc
lds
cli
add
mov
mov
clc
mov
lret
sub
dec
mov
imul
andl
ficompl
lods
sbb
pop
data16
mov
sbb
sbb
xor
pop
mov
xchg
rcrl
push
pop
jmp
stos
je
js
rolb
ss
in
cmp
xchg
lds
pop
in
lret
mov
mov
pop
dec
inc
lret
repnz
ret
hlt
test
inc
loop
loopne
gs
xlat
jb
out
adc
mov
or
icebp
cmp
leave
shll
addr16
inc
stos
out
push
push
inc
or
sbb
mov
insb
int
ljmp
pop
sub
stos
loope
aad
xchg
daa
icebp
test
mov
dec
ficoml
mov
rorl
push
gs
mov
out
xlat
xor
sub
lods
cltd
sub
mov
test
in
push
sti
out
push
test
andl
imul
gs
inc
scas
fimull
je
std
pop
repz
xchg
push
xorb
xor
gs
mov
lret
mov
mov
jg
xor
mov
fwait
mov
sub
fstl
cltd
lods
jl
sti
cmpsl
sub
enter
rorb
shrl
stc
inc
test
cld
push
jno
or
sub
cmpsl
mov
repnz
cmp
aas
repz
mov
nop
xor
lds
cmpsb
rcl
das
fidivs
xchg
cmpsl
and
mov
outsl
lahf
wbinvd
jmp
push
push
in
add
xchg
adc
jecxz
dec
xor
inc
or
xchg
lods
pop
aad
push
jmp
shll
xor
pop
test
lret
xchg
rolb
inc
adc
sahf
dec
rcll
inc
and
pop
outsb
mov
and
shrl
movsl
xlat
mov
sub
mulb
movsl
imul
lret
cld
push
ljmp
ss
mov
push
enter
mov
std
into
fists
das
cmp
or
sbb
push
cmc
movsb
bound
rolb
mov
les
mov
xor
cvtdq2ps
cltd
push
pop
dec
out
test
push
daa
sbb
xlat
dec
pop
stos
mov
xor
dec
cs
cmpb
fwait
lcall
add
push
mov
push
adc
inc
inc
aad
cmc
cmp
pop
stos
xchg
scas
dec
adc
scas
sbb
sub
lret
loop
push
dec
jl
pop
cmpsb
out
adc
scas
push
cmc
xchg
outsb
test
mov
fwait
repz
sbb
jb
mov
mov
sub
inc
ret
adcl
insb
xchg
sbb
insb
xchg
inc
jle
mov
aaa
jno
mov
push
jno
mov
jbe
icebp
outsb
jnp
inc
lcall
test
pop
xchg
call
cmpsl
ret
ljmp
or
mov
shl
scas
cmp
jge
push
pop
inc
xchg
xor
xchg
sub
mov
movl
imul
imul
dec
sahf
out
cli
inc
lret
jp
call
lret
dec
pop
outsb
fwait
das
sub
ret
clc
aad
inc
stos
and
mov
ss
jns
fdivl
lods
aad
gs
pop
dec
loope
lret
or
dec
and
pop
pop
lods
adc
in
das
fistps
push
cmc
test
icebp
adc
jge
sub
addr16
je
iret
mov
mov
add
mov
bound
dec
std
add
pop
in
xchg
outsb
mov
sbb
mov
mov
or
ja
xchg
bnd
mov
mov
aam
clc
mov
jo
repnz
lods
fsubrs
call
test
push
out
test
pop
ss
or
fwait
jo
ror
insl
push
xor
std
sub
mov
sub
mov
test
clc
imul
dec
sub
jb
xlat
add
arpl
inc
rorl
aas
fnstsw
lret
cmp
sbb
repnz
sub
out
xor
push
out
pushl
jbe
or
mov
mov
push
fnstcw
arpl
mov
rol
cli
outsl
shrb
movsb
mov
push
stos
in
mov
pop
stc
jne
fldcw
rcrb
and
loop
cmp
test
out
sbb
jge
es
not
xor
lret
or
mov
ja
fldl
in
insb
jl
popa
inc
leave
sub
out
cli
xchg
push
leave
cs
rclb
sub
jecxz
jecxz
popa
mov
add
outsl
insb
or
incb
iret
push
xor
or
push
stos
addr16
sbb
ret
fsts
andb
jg
mov
sbb
sarb
cmp
xlat
dec
sbbl
faddp
adcb
fldt
lcall
rorb
xor
mov
fwait
pop
and
popa
call
jl
into
test
out
mov
into
pop
sbb
push
aaa
jo
pushf
mov
mov
sbb
mov
shl
les
pop
jmp
xchg
lret
sub
insb
scas
push
test
ficoml
pop
sbb
popa
jl
xchg
loope
add
call
outsb
pop
cld
jge
mov
cmp
popa
shlb
imul
jle
icebp
pop
dec
sub
xor
repz
mov
sub
add
add
mov
cmp
divl
mov
push
fsubrp
stos
inc
xchg
adc
adc
mov
scas
adc
mov
fsubl
jle
stc
mov
movsb
in
dec
push
enter
shll
pop
add
imul
sbb
inc
fs
jmp
daa
lret
fwait
lcall
ret
and
xor
into
push
xchg
lret
inc
xor
popf
je
jmp
shl
sbb
popf
push
sti
or
pop
cmpsl
mov
inc
jns
jb
xlat
cmp
fistps
in
adcl
inc
fisubs
dec
nop
mov
pop
add
push
insl
ret
test
push
push
cld
dec
adc
cli
pop
add
mov
xor
mov
je
aad
int
push
and
out
std
lcall
movsb
mov
imul
add
sub
sub
popf
sub
sbb
dec
out
sbb
sti
cli
add
mov
stc
ss
out
rorb
adc
mov
jno
jg
mov
daa
mov
iret
pusha
xchg
cmp
shll
inc
push
xor
dec
fcoms
jb
xor
mov
dec
fisubs
cmp
pop
push
fmulp
sbb
aaa
in
fs
in
sub
jae
pop
shrl
lock
ss
iret
rcr
loopne
inc
dec
mov
xor
jmp
repz
hlt
movsb
or
ja
mov
jbe
mov
ljmp
shlb
mov
cmp
sbbb
shll
aas
ds
adc
adc
iret
mov
lcall
mov
orb
orl
and
daa
or
adc
xchg
pop
xchg
xor
test
lock
fiaddl
mov
shll
mov
mov
setl
call
mov
sub
outsw
push
hlt
mov
push
push
imul
dec
lahf
testl
jle
inc
and
insl
shll
xor
dec
pop
adc
scas
push
pop
xchg
mov
shll
hlt
dec
or
mov
pushf
pusha
sub
cmpsb
fcom
inc
xchg
and
fs
lret
pop
and
and
add
ficoml
mov
cmpsb
xorl
les
lock
dec
add
cwtl
adc
mov
push
icebp
icebp
shlb
mov
cmp
mov
or
xchg
dec
shrb
push
mov
cli
xor
lret
mov
dec
add
mov
loope
inc
leave
out
fstps
pop
or
idiv
call
call
xchg
push
sbb
cld
jmp
imul
jl
push
insb
mov
and
lret
imul
inc
dec
sti
idivb
xor
ret
adc
push
lret
push
das
xchg
daa
mov
imull
push
jg
incb
pop
cwtl
mov
je
aad
loopne
nop
test
mov
sbb
jecxz
inc
mov
aaa
xlat
fmuls
xor
lods
jb
push
loopne
jge
stos
jg
cmp
add
mov
into
ret
jecxz
xchg
int
insb
pop
cmp
and
xlat
mov
gs
jmp
mov
stc
dec
insl
fdivs
imul
stos
mov
inc
into
sub
fwait
push
imul
iret
pop
sbb
ret
xlat
pop
dec
jb
push
icebp
test
pop
adc
xchg
pop
pop
fidivrs
std
jns
out
sub
cmpsb
stos
outsl
gs
mov
sub
xor
shrl
cmc
loop
aam
push
xchg
aas
mov
adc
xor
ljmp
decl
mov
test
mov
shlb
or
test
dec
out
sar
or
sti
imul
adc
cmc
and
gs
stos
inc
or
xchg
das
xchg
push
leave
or
stos
test
addr16
test
fistps
jmp
loop
and
mov
cmp
sbb
mov
and
movsl
repz
xchg
push
xchg
lods
outsl
and
mov
xchg
pusha
sbb
cli
aaa
sbb
dec
stos
dec
cmpsl
cltd
lock
push
mov
les
ret
popa
dec
scas
jbe
xchg
testl
out
cmp
or
in
out
shrb
or
mov
lds
scas
push
cmp
sub
sbb
stos
mov
dec
fstpl
cmp
jecxz
int3
cmp
mov
rcrl
test
xchg
imul
lahf
push
pop
push
mov
stos
sti
inc
out
jmp
or
ficomps
mov
ss
sub
test
xorb
sub
cmp
daa
aas
out
cs
daa
ljmp
cltd
jae
jecxz
mov
stc
jmp
adc
pop
mov
sub
test
ds
mov
xor
test
cwtl
fiadds
inc
getsec
into
lock
mov
dec
jb
inc
mov
mov
add
adcb
test
xor
xchg
lds
out
dec
pop
mov
jmp
or
aad
into
sti
ds
cmp
mov
mov
mov
cmpl
jbe
orl
mov
mov
insl
mov
loope
mov
gs
out
into
sahf
push
jl
mov
xchg
movsl
add
push
js
stos
pop
loope
push
lock
imul
insb
nop
daa
fwait
pop
test
mov
push
sahf
jnp
nop
mov
scas
add
jp
mov
push
data16
imul
mov
push
out
repnz
ret
pop
loop
rol
pop
mov
xchg
ja
push
inc
mov
push
rcrl
inc
xlat
push
loopne
mov
test
fidivl
fld
cmc
push
xchg
repz
inc
jecxz
int
fldt
push
ret
je
mov
jmp
push
ficoms
jmp
add
inc
fwait
xlat
fcomi
in
mov
xchg
mov
cmp
sbb
adc
push
push
xchg
outsb
sbb
push
sub
dec
aaa
adc
ret
mov
clc
pop
das
ds
lods
outsb
hlt
icebp
mov
push
xchg
jp
popa
icebp
xchg
lds
out
mov
or
rorl
dec
pop
insb
or
fstpl
or
mov
test
or
cmpsl
mov
insl
cld
insl
jmp
mov
inc
es
sbb
mov
adc
icebp
xchg
sti
jp
xor
pop
aad
insl
out
dec
push
pop
inc
je
aad
scas
xchg
shlb
cld
cmpsb
jl
daa
inc
xor
cli
push
inc
xchg
mov
stc
pop
adc
mov
cwtl
clc
aad
xchg
imul
fwait
jecxz
inc
imul
jnp
jge
xor
imul
cmp
repz
inc
incl
mov
add
add
fiadds
jge
add
mov
ss
hlt
fimull
call
fildll
inc
xchg
mov
in
or
inc
icebp
mov
sbb
cld
inc
adc
adc
ja
cmpsl
fisubl
jnp
xchg
ds
or
push
and
cli
leave
xor
loopne
ret
ss
jae
add
lods
subb
xchg
lcall
into
xchg
lcall
dec
gs
mov
ret
testl
xchg
cvttps2pi
lods
out
mov
enter
and
cwtl
mov
sbb
test
sub
xchg
jno
or
inc
inc
fstpt
mov
dec
cmc
imul
cmpl
xchg
xchg
jl
xchg
cmp
push
dec
cmpsb
in
fistpll
sbb
not
or
in
pusha
jne
aas
adc
xlat
popf
mov
jle
lcall
addb
sub
loop
loop
push
bswap
les
loope
and
lahf
inc
dec
xchg
jbe
mov
scas
int3
or
xchg
dec
loope
or
push
ljmp
arpl
out
popf
gs
iret
push
and
push
movsb
xchg
pop
dec
dec
shrb
dec
cmc
std
orl
cmpb
iret
mov
loope
cmp
mov
mov
stos
cmp
stos
fidivl
mov
dec
pop
dec
add
ret
pop
iret
push
xchg
push
mov
cmp
stos
mov
mov
loopne
mov
stos
jno
jbe
call
lds
mov
test
lahf
or
push
dec
jge
sarb
out
pop
imul
stos
popf
xchg
pushf
cmp
popa
loop
jle
adc
jmp
jl
in
cwtl
fldt
fsts
pop
out
sub
xor
xor
or
in
push
aam
pop
mov
test
push
into
push
in
inc
mov
imull
sub
es
jg
lea
stos
cmp
sbb
sbb
std
mov
sub
out
jmp
cmp
popa
dec
sbbb
xchg
mov
rclb
out
dec
fists
repz
jb
jo
rcl
mov
enter
imul
inc
xor
mov
out
fwait
or
outsb
int
testb
pop
pushf
cmp
sub
out
inc
fisubrl
stc
push
jmp
inc
jmp
cmp
jl
inc
jno
outsb
cmp
pushf
fistps
cmp
xchg
js
or
xchg
add
loopne
jle
and
inc
std
out
aam
subl
jmp
pop
leave
sub
mov
xchg
mov
movsl
sub
add
mov
add
and
mov
mov
or
outsl
lret
xchg
in
subb
or
pop
mull
push
pop
add
and
mov
mov
call
int
mov
shlb
lea
add
stc
xor
icebp
xlat
adcl
push
push
add
ljmp
std
mov
je
xchg
xchg
push
leave
xchg
fs
jp
bound
movsb
je
addr16
stos
ja
mov
sub
clc
loope
mov
cmp
jmp
dec
stos
int3
fabs
aad
dec
into
clc
inc
xchg
mov
mov
push
push
bound
orb
jecxz
out
test
into
icebp
in
pop
outsl
pop
dec
adc
mov
paddd
mov
fldenv
out
pop
ss
je
lods
jg
dec
cmp
or
mov
loope
fwait
jmp
cmc
in
pop
inc
adc
jl
sub
int3
ljmp
inc
jge
jb
fstps
jb
add
pop
movsl
test
repnz
icebp
mov
pushl
shll
push
jg
and
push
pop
js
incl
push
xor
mov
loope
and
ficompl
test
pop
cmpsl
addl
lds
fsubs
push
and
dec
xor
mov
push
and
fwait
loopne
mulb
shl
adc
mov
test
mov
mov
push
cmp
dec
cwtl
lea
push
mov
pop
fcoml
pop
mov
movsb
cld
test
mov
dec
stos
scas
mov
and
repz
sbb
mov
jge
cmpsl
xchg
sub
xorb
xor
pushl
mov
out
add
push
mov
and
int
orl
lock
xchg
inc
add
and
addr16
dec
repnz
js
mov
pop
lahf
mov
ficoms
daa
out
adc
stos
add
bound
sbb
push
in
popf
je
lods
test
cltd
mov
inc
xchg
aad
mov
pop
and
ljmp
mov
rolb
outsl
dec
and
xlat
jp
push
in
jge
in
jge
movsl
jmp
test
aad
xor
loop
repnz
mov
jae
and
enter
sbb
xor
arpl
pop
fstpt
push
push
xchg
push
inc
insb
push
xchg
leave
imul
sub
iret
jge
add
dec
jecxz
sbb
jbe
jge
add
test
sbb
cli
ss
sbb
in
push
xchg
loope
imul
mov
push
fsubrl
sbb
les
jle
push
adc
dec
and
sub
xor
sahf
add
push
in
jnp
mov
aad
rcll
adc
lret
dec
fwait
sub
out
ja
cmp
in
adc
insl
out
mov
lods
sbb
inc
push
ss
mov
repnz
cmp
test
push
mov
pop
jno
mov
es
test
sahf
lcall
mov
je
sbbl
inc
dec
mov
inc
mov
fldenv
push
xor
scas
cmp
fdivrs
test
jg
outsl
add
in
mov
out
mov
mov
or
jno
mov
mov
int3
icebp
fiaddl
lods
mov
inc
adc
out
xchg
pop
fisubrl
cmp
pushf
nop
popa
xchg
ret
cld
ljmp
push
cmp
xchg
or
mov
sub
mov
fcoms
jmp
lcall
mov
cmpsl
lods
sub
push
inc
decb
aad
in
scas
add
es
and
test
loopne
fsubrl
jle
icebp
enter
into
stos
addr16
rorl
push
jge
inc
imul
add
sbbb
dec
add
adcl
das
mov
mov
sub
sub
popf
fstpl
mov
lcall
adc
sub
mov
es
or
pop
sbb
clc
inc
pushf
addr16
fwait
sub
fildl
aaa
mov
and
cs
dec
add
aam
mov
adc
add
stos
push
lea
mov
pushf
cltd
push
loop
in
sbb
insl
cmp
lret
pop
je
pop
fs
aaa
cmp
adcl
jmp
jne
jns
ja
lods
xor
pushf
jae
jns
xor
rcl
lods
sub
pop
xor
sub
call
jb
xor
outsb
std
mov
loop
mov
mov
out
mov
push
adc
sub
jbe
xor
jl
or
adc
aas
lods
mov
inc
bndstx
shlb
pop
cli
cwtl
cmp
pop
lahf
pusha
or
sti
testl
xor
sbb
jo
cmp
adc
cmp
xor
imul
cmp
and
xchg
add
pop
rcrl
jmp
aaa
neg
push
adcl
pusha
loopne
std
hlt
cmp
jl
movsb
sbbb
es
out
adc
xchg
adc
imul
fildll
mov
dec
fwait
scas
mov
stc
out
aad
jecxz
xchg
aam
inc
dec
jae
xchg
and
aad
std
jge
sti
add
icebp
std
push
inc
push
cmp
repnz
dec
push
incl
movsb
mov
cmc
jmp
enter
adc
testl
insb
mov
push
jae
xchg
decb
icebp
gs
fdivr
popf
push
test
loop
into
insb
aam
xor
rclb
xor
jmp
jp
xor
pop
setb
shlb
xor
xchg
inc
or
pushl
and
je
push
dec
xchg
faddl
xlat
les
in
jns
jmp
add
push
xchg
das
mov
imul
je
aas
inc
nop
add
push
jl
dec
out
clc
sub
xor
dec
mov
jb
inc
inc
and
mov
int3
aas
repz
int
mov
dec
mov
xchg
mov
mov
mov
pusha
test
das
pusha
xchg
stos
xor
jmp
inc
push
call
jecxz
xor
xor
lret
mov
ljmp
loope
bound
ljmp
out
div
mov
scas
dec
mov
mov
adc
lds
push
jmp
add
jmp
pop
adcl
add
aas
sbb
lods
ljmp
cmpsb
repz
scas
ds
jo
pop
mov
int
idivb
lods
mov
lcall
stos
in
sti
scas
scas
cmpsb
xor
or
mov
stos
and
pusha
mov
adc
inc
xchg
adc
push
lods
loop
ret
push
sbb
cmp
push
gs
xchg
sbb
bound
sbb
push
xchg
iret
pop
aaa
in
daa
dec
jae
adc
jne
jecxz
je
xor
loopne
stos
out
ret
les
cmp
ljmp
lahf
dec
shrb
inc
xchg
xor
mov
sub
repz
or
lds
mov
mov
adc
cmp
ret
pop
stos
mov
dec
mov
pop
clc
in
fildl
outsb
test
pop
jnp
jo
xchg
out
bound
jo
sti
insl
mov
dec
leave
add
inc
das
cli
mov
loop
ss
enter
and
jp
fsubrs
or
stos
push
mov
mov
cmp
cmp
inc
fiadds
push
mov
leave
lea
xor
cltd
sub
jle
ret
mov
fdivrl
scas
push
or
pop
cwtl
and
add
xor
lods
leave
cltd
into
dec
stos
xchg
mov
cmpsl
out
in
mov
and
int
adcb
aam
add
ljmp
lea
xor
loope
lock
mov
test
xchg
add
or
out
add
testl
or
leave
fmulp
or
shrl
dec
cmpsl
nop
aaa
das
jle
fldt
dec
js
cmp
mov
or
flds
fidivrl
rorl
dec
test
sbb
mov
mov
jle
inc
rclb
pusha
or
sahf
jb
cmp
mov
sar
in
sub
pusha
push
shrl
jnp
enter
out
cmc
mov
lock
icebp
push
mov
dec
xor
sbb
push
cmp
sub
sub
imul
cmovl
sahf
fldt
fmull
aam
or
lret
fisubs
sub
and
lods
gs
push
xchg
mov
mov
cmc
insb
fmulp
lea
lods
ja
or
in
std
in
ljmp
pop
jge
aaa
cli
mov
pop
fwait
call
jmp
pop
ds
mov
shll
loope
cmp
loope
mov
psubusw
repz
mov
js
or
aas
je
jecxz
nop
push
xchg
push
push
jno
loope
orb
sbb
and
fsubrp
lcall
adc
push
mov
ds
inc
pop
dec
sbb
jecxz
push
push
in
mov
mov
mov
dec
arpl
or
mov
stos
in
jne
push
nop
cmc
sbb
scas
cmpsl
popa
mov
sub
add
in
vpunpcklbw
xchg
arpl
movsb
sub
mov
mov
aam
ds
out
rcrl
push
mov
pusha
xor
pop
fisubs
dec
fbld
into
popf
cmpsb
or
scas
or
mov
loopne
pop
or
sub
test
stos
add
add
push
add
sub
or
in
pop
jle
in
xlat
mov
sbb
jo
dec
int
mov
call
adc
dec
loope
and
xor
loopne
in
mov
call
stos
jo
add
jmp
adc
lahf
mov
xlat
test
pusha
cmpsb
push
push
cli
aam
lods
mov
outsb
sub
sbb
int3
jne
daa
sub
fnstsw
pop
repz
out
and
cltd
mov
mov
pop
out
mov
repz
lcall
lods
jle
clc
leave
rolb
adcl
scas
xchg
ljmp
dec
pop
movsb
mov
cmp
clc
lock
xor
test
cmc
jge
or
jg
or
lock
add
add
lods
mov
fimuls
push
out
pushl
mov
pop
adc
cmp
movsl
sub
inc
call
loope
xchg
mov
xchg
aam
shrl
shl
nop
test
add
js
jg
xor
xchg
aaa
loopne
and
jns
mov
push
stos
xor
lahf
sti
lret
pop
outsl
ficoms
push
mov
movsb
adc
mov
dec
inc
cmc
sarl
mov
mov
in
test
popf
es
xor
js
mov
das
nop
add
fidivrs
enter
push
jnp
mov
mov
adc
mov
sbb
mov
ret
popa
pop
popf
cmp
cmp
inc
in
pop
push
inc
pop
scas
or
pop
mov
std
mov
jle
clc
fisubl
sbb
adc
rclb
stos
lret
movsb
sbbl
sub
pop
inc
add
jg
cwtl
and
pop
testl
das
incl
jmp
jmp
dec
pop
jle
arpl
cmp
jno
leave
fisttps
imull
pop
xchg
jge
aas
lock
dec
jg
add
xlat
and
cmp
cwtl
pop
jne
sub
jg
test
mov
xor
sahf
cmp
callw
or
sub
out
in
pop
fcmovnbe
push
loop
inc
jbe
cli
push
and
sbb
lock
leave
iret
enter
fdivs
jmp
dec
ja
mov
into
js
jne
and
push
or
fimull
fisubrs
dec
lcall
filds
and
mov
push
das
pop
loopne
insb
fsubs
mov
push
or
jg
addb
cwtl
je
xor
cmp
xchg
scas
in
mov
pusha
sbb
adc
push
sub
cmc
push
sub
lea
and
js
dec
and
pusha
bound
fwait
mov
and
aaa
mov
stos
dec
adc
stos
orb
pop
push
mov
repz
jle
lock
xor
ljmp
mov
cli
inc
mov
pop
jle
mov
or
iret
or
pusha
inc
lds
push
or
inc
aas
and
popa
push
stos
pop
sar
lea
mov
mov
lret
xor
in
inc
sub
pop
mov
icebp
jg
mov
mov
rorb
hlt
inc
xchg
adc
or
push
mov
movsb
dec
icebp
sub
fistpl
aaa
xor
or
rorl
sub
iret
iret
add
sbb
xchg
loopne
aam
aam
and
sbb
push
shrb
mull
sbb
adc
dec
fistpl
push
mov
icebp
inc
scas
pusha
adc
or
mov
mov
bound
mov
scas
test
into
sub
jne
inc
int3
and
icebp
loopne
sbb
xlat
fwait
int
dec
adc
iret
mov
mov
mov
inc
lds
jle
sbb
bound
xchg
sbb
sub
mov
enter
out
jp
test
dec
stos
sub
test
add
inc
scas
rcl
sbbb
imull
aad
fs
dec
cmp
inc
lcall
jp
popa
mov
in
jp
not
xchg
dec
nop
sub
out
xchg
inc
or
test
scas
mov
out
add
icebp
fs
out
or
pushf
mov
push
lcall
adc
aaa
xor
aam
pop
out
push
jecxz
fcomi
lods
bound
outsb
cmp
es
ljmp
mov
jne
repz
cld
icebp
pop
or
pop
inc
sub
arpl
stos
dec
shlb
cmp
jbe
cmpsb
sbb
imull
stc
sub
mov
lret
pop
sahf
sub
push
sti
fstpt
jo
fistl
lods
jl
xchg
ljmp
mov
adc
loop
movb
rcr
ljmp
scas
mov
xchg
mov
add
int
push
inc
dec
fists
pop
ljmp
mov
cmp
fmuls
movsl
jo
pushf
les
sbb
pushf
xchg
adc
xchg
jae
sbb
sub
cmp
adc
pop
push
xchg
adc
mov
shrl
iret
fs
push
shrb
stc
dec
mov
jmp
fadd
loop
cli
pop
dec
jmp
and
in
inc
xchg
or
lret
inc
in
jge
xor
lock
test
sbb
test
cmp
repz
sub
mov
aas
orb
push
js
and
push
xor
insl
push
mov
pop
aad
cs
pusha
subl
out
cmp
sub
adc
fadds
and
xchg
stc
pop
fcoml
pushf
jo
pop
mov
pop
ficomps
imulb
sub
nop
loopne
movsl
out
popf
int
sbb
sti
pop
cmp
xor
lea
adcl
ds
ret
outsb
jge
movsl
mov
inc
addr16
dec
mov
cmpsl
lods
sub
jmp
mov
add
js
push
std
daa
fisttpl
loop
xlat
mov
jae
cmp
and
faddp
sub
jmp
cli
js
aam
lods
in
mov
bound
mov
sub
insl
lods
std
jno
test
subb
cmpsb
hlt
outsl
adc
pop
call
cmc
idivl
dec
aaa
sbb
fs
call
lods
inc
repz
adc
in
mov
sahf
sbb
hlt
add
jle
xor
aad
cmp
dec
mov
cli
jge
add
mov
outsl
lahf
mov
arpl
test
sub
je
loopne
inc
jno
cltd
clc
loope
sti
inc
lods
sar
hlt
mov
outsl
cmp
and
pop
mov
inc
in
arpl
or
in
xor
jle
icebp
out
dec
lahf
mov
fisubrl
test
pop
mov
in
pop
mov
dec
push
mov
inc
mov
fdivl
inc
int3
ss
outsl
hlt
mov
mov
cltd
aam
daa
cld
test
in
push
mov
repz
clc
icebp
adcl
enter
push
cld
test
fwait
xchg
inc
mov
testl
add
push
lret
ret
sbb
sub
mov
jae
shl
test
jmp
fdivrl
je
sti
push
adc
jle
jg
xlat
sbb
and
adc
test
mov
cmp
sub
jno
dec
push
xchg
cmp
test
scas
or
mov
or
sbb
das
or
test
stc
adc
and
xor
std
or
test
and
push
adc
bnd
sbb
orb
pop
add
cmp
cmp
xchg
mov
inc
mov
movsb
outsb
and
shl
call
call
xor
mov
cli
hlt
hlt
jne
adc
inc
shl
sbb
sarl
inc
inc
test
and
imul
pop
sbb
sbb
dec
outsb
call
and
icebp
xchg
cs
jg,pt
adc
sbb
rorl
xchg
dec
jb
xchg
rorl
add
push
rclb
cli
pop
sub
adc
mov
lock
and
pop
jne
fwait
mov
arpl
mov
mov
lods
add
lret
test
dec
in
pusha
jae
lods
shrb
mov
xor
aaa
jne
xchg
das
out
xor
xchg
inc
cmova
nop
push
rorl
and
push
inc
or
mov
mov
sar
jmp
in
push
imul
test
push
aaa
jne
push
stos
mov
stos
gs
push
fsub
sarb
sti
stos
imulb
cld
daa
push
mov
pop
test
sub
roll
insl
mov
xchg
movb
cmc
sbb
jge
clc
mov
push
fcoml
repnz
mov
xor
jle
outsb
sub
fld
push
jge
jb
sti
add
pop
mov
aas
mov
aaa
scas
mov
pushf
lea
fcmovnu
push
dec
jle
cmp
push
jae
push
sti
push
inc
push
aas
mov
loopne
imul
fucomip
loop
pop
loope
or
shlb
fcoml
hlt
xchg
inc
add
xchg
push
push
loope
lahf
mov
jb
or
loope
add
jg
loope
push
add
popa
jl
xchg
or
fdivr
loope
and
mov
adc
add
aad
cmp
push
push
push
xchg
shr
xor
add
pop
rcll
loop
jecxz
testl
dec
push
test
pop
jbe
or
or
or
jge
iret
pop
push
jl
push
jbe
jbe
popf
pop
adc
xlat
and
sbb
les
inc
stc
stos
stos
pushf
adc
cmpb
sub
movsl
out
pop
pop
jbe
stos
adc
adc
das
mov
imul
nop
rcrl
rep
push
xchg
stos
pop
loopne
cwtl
pop
jle
lods
cmpsl
inc
shrb
adc
lock
lahf
mov
mov
sti
xor
cmp
js
xchg
and
fnstsw
aas
out
and
fsubrl
dec
fistps
add
sbb
push
mov
imul
xchg
lret
ja
push
jae
outsl
movsl
lret
repnz
dec
inc
loope
roll
into
stc
cs
stos
ljmp
jo
imul
dec
xchg
sbb
push
ret
xlat
mov
fldl
and
jno,pt
adc
mov
test
jle
push
pop
push
mov
xor
pop
pop
loop
inc
nop
adc
addr16
pop
mov
add
sub
adc
xor
loopne
xor
ljmp
push
cmc
xor
sub
xchg
mov
inc
fwait
stos
scas
mov
popl
es
xor
mov
dec
pop
push
shll
jg
push
out
jmp
adc
int
mov
xchg
jno
xor
addr16
mov
inc
pop
mov
xor
jae
inc
dec
mov
cmp
ja
daa
das
scas
rcll
lcall
enter
popf
stos
sti
insl
xor
cmc
aam
adc
lds
lret
negl
inc
cmpb
lcall
mov
scas
and
xor
inc
cld
mov
adc
cmc
mov
std
das
stc
mov
sbb
dec
iret
fstpl
push
sbb
pop
and
stos
add
push
mov
cld
pop
xchg
push
and
sub
rcrl
dec
add
adcl
or
mov
das
push
push
std
mov
in
test
dec
push
dec
xor
dec
test
jle
in
mov
mov
inc
sbb
and
std
push
dec
int3
mov
pushf
inc
les
mov
fwait
shrb
gs
pop
sahf
adc
xlat
gs
popa
not
add
in
ds
mov
fmull
inc
mov
outsl
push
mov
sub
in
outsl
es
push
insb
pushf
push
adc
sub
inc
loop
mov
sti
insb
xlat
popf
das
cld
mov
jge
sbb
mov
nop
jb
pop
testl
aam
scas
cmp
inc
aad
aad
pop
cmpsb
xchg
stos
and
mul
push
sar
adc
mov
jl
in
fldenv
cmc
mov
fimuls
rorb
cmp
in
imul
inc
sbb
fiadds
push
xor
inc
jp
push
xor
pop
pop
mov
hlt
xchg
fidivs
dec
stos
pop
dec
je
jg
xchg
adc
pop
dec
mov
repz
mov
cs
sarl
lahf
repz
bound
xchg
ljmp
stos
in
in
fwait
popf
dec
sahf
mov
ljmp
fbld
xor
dec
enter
pop
dec
jno
pop
push
leave
ret
xor
mov
mov
or
cmp
jl
push
push
rclb
ljmp
mov
mov
rorb
dec
push
scas
jne
mov
fnstsw
pop
rcr
and
sbb
xchg
pusha
shlb
jbe
les
popa
push
inc
loopne
cmovge
inc
ja
sbb
shr
data16
lock
aam
test
daa
cmpsl
je
pop
fcomps
out
mov
adc
xor
fldt
or
lods
popf
stos
hlt
mov
push
xchg
cwtl
mov
jl
sub
xchg
pop
cld
lcallw
stos
fdivl
pop
ret
clc
loopne
icebp
ret
adc
mov
loop
mov
pusha
aaa
inc
lret
xchg
dec
pop
jmp
mov
inc
jns
mov
mov
push
ja
fsts
cwtl
das
or
xchg
call
cwtl
cwtl
sub
mov
ljmp
cltd
xor
jae
test
jb
mov
push
lds
ljmp
scas
or
or
lret
pop
mov
mov
test
in
sub
push
std
in
pop
xor
mov
push
fsubrs
fisttpl
dec
jg
or
xchg
in
popf
shrl
jle
pop
jmp
lret
mov
mov
in
xchg
cwtl
jp
scas
scas
lods
inc
mov
in
popa
mov
fadd
mov
push
pop
xor
hlt
adc
test
cmp
pop
jmp
test
xor
jnp
add
mov
fists
andl
adc
mov
add
aam
adc
adc
cli
add
fidivs
sub
mov
cmp
pop
inc
adc
adc
sub
xchg
leave
xchg
cltd
popa
shlb
lods
imul
or
push
pop
fs
cmp
mov
pop
repnz
xchg
dec
sub
sub
das
loope
inc
jmp
fistl
pop
fdivrs
ret
iret
ljmp
imul
push
dec
jl
cmp
pop
adc
fstps
pop
push
mov
ja
pop
push
int
adc
movsl
mov
push
int
inc
xchg
jle
ja
xor
rcll
sarl
and
popf
pop
test
fwait
mov
xchg
test
mov
hlt
call
icebp
shrb
out
inc
in
fisubrl
movsl
lea
mov
sub
adc
pop
popa
das
xchg
sbb
add
into
adc
loope
mov
stc
aad
out
ds
lods
or
mov
daa
jno
clc
mov
or
cmpsl
cmp
insl
fdiv
aaa
shld
xchg
sbb
xor
jl
add
adc
push
fsubs
dec
repz
jmp
lret
call
negl
mov
in
mov
mov
rclb
cli
xor
jge
xchg
cltd
imulb
stos
repz
stos
pop
dec
cmc
mov
cmp
sub
stos
and
push
mov
call
pop
jb
inc
xchg
pop
jmp
leave
fistpll
movb
mov
pushf
pop
push
mov
jae
stos
jecxz
jmp
std
nop
pop
lcall
xlat
orl
xchg
out
sahf
stos
inc
pop
sbb
xchg
mov
mov
test
addr16
out
jbe
xchg
push
lea
mov
idivl
divb
lock
ss
shl
or
inc
mov
mov
repz
iret
cmp
loope
cmpsb
outsl
push
cmp
jne
aaa
stc
sub
add
imul
jmp
test
xlat
ds
adc
adc
sbb
loopne
or
ja
mov
mov
in
sar
push
xor
dec
sbbl
dec
mov
xchg
arpl
lcall
cmp
idivb
jg
cld
test
loope
push
dec
cmpsl
int3
jl
mov
and
imul
int3
sub
sahf
movsw
ffreep
stos
cmpsb
mov
jmp
test
jo
lds
mov
mov
xchg
lret
ja
test
je
jmp
push
test
add
das
pop
hlt
enter
push
stos
dec
cmp
out
clc
jl
cwtl
jg
int
fisubs
aas
pop
pusha
pop
clc
push
arpl
cmp
mov
jl
out
jmp
je
xchg
lret
inc
scas
popa
ret
es
xlat
lahf
sar
lret
push
jp
repnz
pop
test
out
nop
pop
xor
into
push
lret
jmp
andl
aad
aad
into
loope
aad
stos
cmp
or
dec
cmp
montmul
cmpsb
push
test
add
or
and
int
pop
cltd
pushl
sub
jge
push
pushl
push
jl
lods
test
in
das
inc
jno
into
push
stc
mov
mov
pop
addr16
shrb
scas
mov
add
push
lds
push
mov
testl
pop
imul
mov
sarl
icebp
sub
sub
ss
jle
lahf
test
pop
xor
pop
popf
xchg
xor
jg
test
cs
pop
ret
xchg
jg
mov
sub
jbe
mov
mov
hlt
inc
mov
stos
push
or
cmp
in
stos
cs
inc
mov
push
adc
xlat
and
push
insb
push
jno
jecxz
push
xchg
test
jmp
sub
pop
jge
push
scas
inc
pop
push
lods
add
xor
push
mov
mov
lea
dec
push
and
xchg
pop
mov
adc
jl
sbb
pop
outsb
lahf
add
inc
mov
pop
loope
stos
push
dec
jle
push
mov
loopne
sbb
sub
adc
jl
lret
mov
hlt
iret
jb
mov
pop
sbb
scas
lret
lods
add
push
repnz
jae
pop
pop
dec
xor
or
in
std
aad
xchg
cli
repnz
or
adc
cmp
or
loop
pop
adc
fstps
inc
add
jno
idiv
dec
mov
mov
mov
lock
mov
fst
in
sti
stos
dec
fildll
xchg
das
test
rcl
xchg
jae
push
mov
bnd
aam
cmp
scas
cmpsl
or
lock
fisttpll
popf
jbe
cmpl
xchg
aam
mov
cmpsl
loop
pop
sbb
aam
push
adc
push
es
xchg
push
bound
pop
inc
xchg
das
sbb
addr16
xchg
sub
scas
movsb
faddl
loope
add
push
in
mov
sbb
test
push
movsb
shlb
les
cmp
cmp
push
or
or
push
push
push
aas
push
aas
jns
push
jmp
push
idivl
ja
mov
orb
hlt
lods
xor
sub
xchg
pop
cmpsl
push
lahf
push
iret
push
cwtl
sub
loop
out
or
cmp
mov
push
loopne
in
xorl
dec
mov
xchg
dec
jbe
loopne
sub
jmp
xchg
pusha
sti
inc
daa
jmp
dec
or
sbb
jo
adc
aaa
xchg
dec
into
mov
iret
cs
push
outsb
cmp
mov
jno
pop
or
pop
lcall
push
mov
mov
mov
pop
fistpll
pop
adc
out
shlb
pushf
and
push
xchg
jbe
js
lret
inc
push
mov
les
icebp
sub
lods
stc
adc
mov
push
aam
fists
cmp
push
mov
fs
dec
jae
adc
jg
inc
pop
push
push
jmp
das
mov
int
jne
mov
mov
xor
imull
ficomps
shll
push
cmp
adcl
pop
fsubrl
popa
jecxz
in
or
pop
outsl
mov
and
aaa
stos
outsb
test
add
imul
das
adc
cmp
ss
cmp
pop
xor
fimull
sub
or
fistps
mov
fstpt
popl
into
cmpsb
xchg
jg
jp
cmp
mov
shll
mov
xchg
mov
fs
and
fsubs
rcll
sahf
push
into
xchg
cmp
fmull
cmc
std
pop
andl
aaa
es
mov
out
int3
mov
fcompl
out
pop
jge
hlt
sub
repnz
lea
inc
ficoml
push
cltd
fsubrl
pop
loop
cld
sbbl
or
movsb
xchg
add
ja
testl
sub
incl
xor
adc
fidivrs
mov
in
inc
cmpb
decb
shrl
jne
mov
test
movsl
sub
outsb
cmp
pop
test
int3
call
loop
test
cmp
add
pop
lret
push
out
jb
xchg
test
or
pop
mov
push
sahf
gs
pushf
data16
test
push
mov
and
cwtl
ljmp
sub
fisubl
mov
xchg
in
cli
popf
and
div
sbb
mov
lcall
or
pushf
movsl
es
outsb
xchg
sub
xchg
hlt
xlat
mov
cmc
jle
mov
ja
add
adc
xor
dec
bound
or
push
adc
xchg
jmp
rorl
ljmp
mov
js
and
into
adc
jne
jp
or
lcall
and
pop
ljmp
fisttps
adc
xorb
or
sbb
out
ficoml
adc
inc
rcll
in
sub
movsl
add
or
pop
scas
pop
testb
lea
cmp
pop
cld
test
shrb
sbb
adcb
hlt
out
lea
sbb
ja
mov
mov
roll
pusha
jns
cmpsb
add
cltd
push
push
sub
movsl
xor
xor
scas
jb
xchg
xchg
int3
shll
vmovntps
pushf
ret
mov
jne
test
xchg
stc
stos
lea
or
aas
clc
das
addr16
mov
les
mov
mov
mov
xlat
loopne
scas
imul
pop
into
pop
xlat
xor
stc
dec
push
cmp
test
test
hlt
dec
out
xchg
decb
inc
push
push
cld
mov
xor
pop
and
push
ficoms
xchg
xchg
jecxz
mov
pop
xor
sbb
test
sti
insl
sti
jmp
repz
dec
fcomi
das
aad
inc
pop
xchg
cmc
aad
xor
pop
test
pop
cmp
xor
pop
cmpsl
push
mov
repnz
shr
xor
popf
or
movsb
adc
sub
pop
arpl
popf
and
scas
push
cld
and
dec
mov
out
pop
jp
fisttps
dec
fcoml
das
adc
dec
dec
cmpsb
call
scas
push
adc
icebp
cltd
push
xlat
pop
repnz
mov
adc
dec
ret
popa
dec
out
mov
testl
shr
xlat
mov
xchg
gs
push
out
imul
xchg
aaa
push
lea
jb
dec
sbb
fdivrl
mov
pop
sti
mov
pop
cmp
ja
cli
dec
mov
stc
xchg
bound
adc
mov
pop
test
and
fnstcw
dec
cwtl
or
jns
in
pop
scas
sub
push
mov
pop
ss
inc
dec
add
mov
repnz
fcoml
gs
mov
decb
in
in
mov
loopne
fsubr
data16
lea
mov
xlat
add
jecxz
pusha
ja
daa
stos
testb
and
cli
lret
or
jge
or
out
push
outsl
icebp
sub
dec
loop
les
pop
dec
std
dec
loop
jo
rol
jno
std
push
mov
in
iret
push
adc
insb
dec
ja
fiadds
les
setne
xor
and
adc
scas
lcall
addr16
dec
subl
cmc
mov
and
stc
das
xchg
sbb
movsl
movsl
mov
stos
mov
ret
lcall
mov
mov
fidivl
cltd
icebp
fs
scas
jae
je
adc
int3
cli
lcall
mov
cmpl
mov
aam
mov
push
scas
cwtl
mov
push
std
je
ret
sub
mov
mov
sahf
dec
push
pop
pop
shl
shrl
clc
and
mov
jbe
lds
xlat
xchg
push
std
test
adc
movsb
out
push
addb
out
cmpsb
idivb
repnz
push
cs
jno
pop
cmp
mov
push
je
cltd
fwait
xlat
adc
xchg
stos
jge
test
ljmp
dec
pop
mov
fistpl
jne
stc
adc
int3
pushf
mov
repnz
push
scas
imul
je
add
and
ss
and
dec
xchg
fs
mov
cld
daa
data16
lods
dec
mov
fsub
mov
jno
ljmp
cmpsb
rclb
stos
in
sub
jae
gs
mov
jg
shrb
jns
popa
insb
jne
cmp
pop
ja
jae
inc
dec
mov
and
fsub
and
test
mov
aas
jnp
lock
push
pop
mov
scas
in
pop
popa
je
xor
dec
jo
das
sub
xchg
jne
push
add
push
pop
xchg
adc
cs
dec
jl
pop
bound
call
dec
gs
add
push
enter
xchg
fdivp
cmp
stos
in
into
clc
xor
fisubrl
or
call
jb
inc
mov
ss
fadd
je
xchg
clc
xorb
mov
push
insb
pop
push
sti
popf
add
adc
add
sub
sbb
mov
mov
push
ljmp
dec
mov
sbb
ss
xchg
test
add
fbstp
jne
test
cli
push
out
lock
sbb
scas
sbb
mov
test
je
mov
dec
sbb
lcall
inc
addr16
and
imul
arpl
pop
scas
daa
adc
jno
popf
and
imull
ja
daa
cli
ljmp
mov
lret
outsl
shlb
and
fdivp
push
xor
or
testb
mov
pop
jp
pop
pop
push
fldpi
mov
push
push
mov
cld
loop
rclb
sbb
push
and
testb
xchg
je
test
xor
xchg
enter
xor
inc
movsl
cld
stos
int3
xor
cld
rorb
or
hlt
inc
inc
jmp
test
stos
jbe
lret
or
mov
mov
push
xchg
fisubl
stos
mov
repz
xor
mov
add
cs
jne
pop
xchg
lcall
mov
jnp
cmp
inc
sub
test
lret
push
pop
gs
stc
sbb
and
or
mov
negl
aas
jne
mov
aas
pop
jge
cmp
push
sbb
cmp
test
dec
mov
push
push
stos
xor
int3
or
sbb
adc
and
push
es
xchg
ss
mov
inc
scas
ret
adc
stos
dec
out
in
push
adc
inc
inc
in
in
jae
or
mov
stos
jns
cld
inc
in
jns
xor
push
mov
jge
xchg
stos
es
loope
std
fnstsw
cmpsl
mov
pop
test
mov
out
mov
sbb
aam
outsl
pushf
jns
loopne
cmc
ret
out
or
ret
lret
test
out
push
ret
cmc
pop
mov
add
jae
xor
xchg
push
xor
xchg
or
cmp
jb
lods
cmp
es
dec
idivl
leave
inc
mov
aam
fbstp
xchg
mov
int3
pop
jno
add
repnz
jle
outsb
or
ds
push
lea
in
repnz
mov
mov
jne
cmp
cmp
addr16
mov
cltd
lea
pop
pop
fndisi(8087
sub
push
jle
aas
mov
push
mov
lock
ljmp
dec
inc
mov
and
pop
jecxz
enter
xchg
je
std
or
inc
mov
imul
loop
inc
lea
push
xlat
inc
lret
stc
insl
clc
inc
ret
scas
jae
nop
ds
jecxz
pop
scas
add
cmp
sub
mov
xor
ss
and
push
and
mov
jle
shrb
xchg
cmpsb
arpl
jecxz
mov
pop
lret
pop
bound
jmp
mov
xchg
inc
into
xchg
xchg
jecxz
mov
ror
in
mov
lcall
mov
outsb
inc
pop
cmc
adcl
xlat
stc
mov
and
push
movsl
imul
cld
sbb
lods
lock
push
test
mov
cmpsb
jl
xchg
mov
cmpsl
shlb
jb
cmpsl
faddp
insl
add
mov
loop
scas
push
js
popf
mov
push
pop
jmp
add
push
jnp
xchg
pop
ds
fnstsw
leave
repz
cmp
lods
push
aaa
loope
fwait
mov
mov
in
mov
std
xor
aas
js
jmp
xor
ret
ror
fcompl
test
cmp
or
aad
lds
mov
test
bswap
into
aaa
push
leave
push
sub
mov
loopne
into
jns
pop
pop
cmp
add
pop
aad
and
insl
xchg
mov
or
xor
cmp
cmpsb
adc
ss
lds
fnsave
inc
fcompl
daa
pop
mov
roll
cmp
mov
jb
cmp
test
imulb
and
lods
adc
push
inc
xor
xchg
scas
imul
mov
icebp
push
out
lahf
push
push
in
scas
lret
xor
dec
mov
ds
mov
out
lods
into
mov
add
sbb
hlt
jae
ret
sar
inc
insl
cmc
xchg
xchg
mov
cwtl
xchg
popa
inc
popf
dec
inc
xchg
out
mov
lea
push
cmp
pop
stc
popa
cli
rclb
movsl
lods
addr16
pop
dec
mov
sbb
les
adc
jbe
lock
cmpsl
stos
add
outsl
imul
lods
dec
nop
jge
jnp
in
add
enter
mov
mov
imul
call
lods
xor
cltd
aad
cmp
aaa
jg
into
shlb
sbb
out
xchg
jnp
push
es
iret
mov
adc
in
cmpsb
je
std
int
andl
gs
xchg
xor
xchg
pop
add
das
rclb
lods
out
movsl
ss
scas
sub
mov
adc
mov
cmp
in
sub
je
mov
inc
cmp
ja
icebp
xchg
aas
jbe
iret
ja
push
decb
sarb
leave
jecxz
push
shrb
leave
jnp
or
push
push
dec
adc
push
clc
enter
popf
lds
jnp
pop
idivl
cmpsb
push
jmp
pop
es
inc
mov
test
test
lret
inc
mov
repnz
or
ja
fists
lret
inc
adc
aad
loop
es
inc
in
or
loope
dec
ja
in
dec
sbbl
dec
movl
sbb
test
xor
fnstsw
add
pop
jmp
jl
adc
adc
repnz
pop
fdivs
shll
stc
push
rcrl
jne
aad
sarb
mov
stos
dec
ljmp
lea
push
fistpll
jns
and
add
push
jmp
push
push
push
sbb
cltd
mov
xchg
and
sub
mov
fnstenv
mov
push
jb
daa
arpl
fcmovne
das
push
push
jecxz
mov
sti
faddl
and
mov
push
sbb
cs
movsl
inc
sub
lods
test
pop
lcall
or
or
cmpsl
mov
aad
pop
outsl
fisttpll
cmp
imull
mov
iret
scas
das
sub
xor
pop
jle
out
addr16
scas
aas
push
shrl
push
adc
fistps
fcomps
adcb
cmp
movsl
mov
data16
int
adc
subb
and
repnz
jbe
js
test
cmc
xor
imull
icebp
dec
and
test
xchg
popa
mov
xlat
mov
push
sar
sbb
and
loop
out
xor
pop
imull
mov
nop
out
mov
xor
dec
add
out
add
leave
mov
xchg
in
mov
lahf
mov
jae
and
xchg
add
push
push
stos
push
adc
lahf
dec
xchg
dec
add
popf
pop
dec
xchg
push
xchg
xor
jae
xor
mov
sbb
push
add
jl
add
cltd
mov
lahf
cmpsb
pop
aam
hlt
jmp
jecxz
push
and
xlat
and
in
sbb
add
jnp
or
test
jns
ja
push
jg
push
sbb
fsincos
fistpl
rcrb
aad
mov
xchg
mov
mov
xor
pushf
das
pop
mov
imul
fcompl
rcl
enter
daa
inc
pop
or
and
rcrl
dec
cmp
mov
fists
in
jns
jge
add
scas
imul
push
inc
mov
mov
pushf
insl
jne
shll
iret
xor
pop
pop
or
jb
push
xchg
xor
mov
rcll
jb
std
in
push
inc
lds
or
cmpsl
cmp
stos
mov
mov
cmpsb
inc
mov
cmp
push
inc
enter
in
imul
pop
sti
jge
out
hlt
test
loope
and
outsl
xchg
xchg
aad
jmp
nop
insl
push
ds
cli
jno
sti
mov
xor
outsl
daa
sub
fisubs
push
outsb
sbb
leave
in
mov
jle
rcll
addr16
mov
insl
sub
xor
add
rcrb
cmp
ret
das
mov
xchg
arpl
dec
mov
scas
lret
pop
mov
pushl
pop
in
jns
inc
in
hlt
int
aam
leave
mov
sub
push
out
pusha
jecxz
mov
cmp
fs
pop
ficoms
inc
lret
push
xor
aad
out
sub
ds
inc
mov
and
cmp
add
in
jg
ret
stos
sbb
mov
xor
das
fcom
add
int3
lret
into
jge
scas
ja
pop
inc
test
cmp
cltd
idivb
and
pop
cmp
stos
jmp
mov
mov
je
sub
pop
mov
andl
test
mov
and
stos
fs
cmpsl
push
sub
inc
lret
mov
push
ja
pop
cmp
push
adc
cmp
lcall
lahf
out
sub
outsl
pusha
mov
xchg
loopne
out
sub
out
and
and
into
stos
push
inc
pusha
sahf
mov
inc
popa
hlt
sub
daa
jle
mov
insl
mov
or
push
mov
push
push
pop
insl
pop
in
cmpsb
das
in
cld
mov
test
rorb
mov
repnz
cmp
xchg
sub
scas
mov
in
mov
insl
adc
adc
push
outsl
xchg
pop
add
mov
sub
iret
stc
js
repnz
mov
movsl
inc
pop
push
or
clc
pop
iret
cli
sub
lret
inc
out
mov
leave
scas
jge
mov
mov
inc
cli
mov
or
xlat
dec
mov
ss
jno
std
jae
shlb
dec
shl
mov
fcmovnbe
xchg
adc
mov
sbb
jl
jae
stos
push
mov
mov
imul
inc
movsb
stos
cs
inc
in
in
in
add
stos
or
lahf
scas
dec
pop
rol
pop
pop
jl
push
sub
out
and
out
inc
aad
rolb
outsl
sub
addr16
clc
mov
mov
movsb
fidivrl
pop
mov
int
and
push
shll
cs
outsb
aam
jnp
jge
decl
cmp
movsl
lock
mov
mov
add
push
mov
xchg
pop
xchg
push
je
sahf
sti
ret
rol
and
mov
hlt
lret
xchg
mov
mov
cmp
rcrl
pop
pusha
jecxz
icebp
push
dec
pop
pusha
je
and
ficomps
or
fcomi
pop
pop
repnz
jnp
ret
jno
adc
xor
mov
std
test
bound
cmp
or
out
mov
dec
int
stos
jl
lea
sarl
mov
scas
dec
push
aad
mov
shrl
fsubrs
leave
shll
cmp
call
mov
sarb
sbb
xchg
sarb
dec
in
jge
std
adc
add
outsl
cmp
mov
imul
testb
sahf
sub
shrb
ljmp
call
jmp
inc
cmp
filds
xchg
pop
lock
jecxz
cmp
pop
popa
repnz
jo
ficoml
mov
lea
pop
test
fs
fimuls
pop
cld
pop
cmpsl
std
fdivrl
xchg
into
test
sar
ds
decl
fstpl
xchg
aam
arpl
add
mov
pop
into
adc
out
inc
out
cmp
xchg
sbb
lods
popa
sub
mov
jmp
imul
xchg
outsl
shrb
cld
rcrb
pop
or
mov
cmp
xchg
and
mov
int3
out
fcomp
jge
sub
scas
arpl
sbb
cmp
insb
and
mov
mov
mov
jae
and
mov
imul
test
mov
popf
cmpsb
rcr
pop
test
mov
fdivl
lock
push
cmp
bound
test
mov
mov
in
xor
mov
aad
imul
enter
pusha
mov
aaa
push
jl
stos
pop
sahf
xchg
mov
adc
sub
out
in
xor
sbb
cmp
sahf
pcmpeqd
aam
fs
lahf
sbb
pop
jmp
adc
push
fnstcw
insl
xor
push
lcall
push
daa
mov
sbb
mov
mov
fdivrl
ret
jle
stos
inc
sub
push
es
loopne
hlt
pop
add
fnstenv
notb
mov
lahf
imul
ja
ja
das
inc
jno
hlt
in
dec
cs
mov
mov
mov
ja
jle
lods
jns
dec
pushf
mov
sbb
fmulp
push
xchg
in
fsqrt
and
sahf
add
pop
pop
jns
rcrl
mov
or
aad
enter
lods
dec
sub
iret
sub
into
jns
push
ljmp
mov
jecxz
cmc
scas
clc
clc
xchg
outsb
cltd
int3
pop
inc
test
aad
ret
dec
push
sub
insl
jns
into
test
mov
add
out
cmp
add
ret
pop
jae
dec
sub
mov
push
fstl
inc
pop
push
repz
and
add
in
cmpsl
dec
adc
add
and
out
ds
stos
jl
xchg
enter
dec
jmp
push
or
imul
stos
fisubrs
cld
test
inc
loopne
cld
xchg
ja
push
adc
lods
lock
das
rcrb
in
push
jecxz
mov
out
jmp
in
ret
mov
int3
mov
jecxz
push
ljmp
rolb
stos
dec
insl
pop
call
mull
movsl
lahf
inc
pop
outsl
xor
sbb
std
push
jl
lods
orl
and
insl
pushf
and
dec
pop
mov
fidivs
lahf
or
popf
loope
push
pop
lret
xchg
in
push
pusha
das
rcl
xchg
xor
outsl
xor
aad
loop
out
and
in
rcr
pop
xlat
jo
xor
movsl
fiadds
pop
sub
testl
sahf
dec
mov
push
pop
jbe
jmp
dec
in
adc
inc
mulb
loop
inc
mov
leave
jp
sbb
dec
shlb
cmp
lods
lea
sub
andb
add
mov
fidivl
in
adc
fsubrp
in
gs
insl
stos
fdivrs
cli
gs
pop
scas
dec
mov
jmp
scas
xchg
addb
mov
ret
sti
inc
sub
ja
pop
shll
lret
push
mov
cmc
movsl
inc
incb
ss
testb
js
loopne
loopne
movsl
sub
jmp
stc
adcb
cld
rcrb
imul
std
xor
jbe
lret
rorb
testl
push
mov
andb
jl
inc
ja
shlb
sub
les
lahf
and
cld
mov
sub
jns
xchg
mov
jge
xor
mov
ja
mov
pop
std
lret
paddw
in
decb
mov
loopne
push
or
xchg
out
enter
cmpsl
fnstsw
and
test
shrl
mov
jp
xchg
or
cmp
mov
pop
addr16
dec
dec
mov
cmpsl
jge
xchg
and
xor
add
pop
fs
push
cmp
add
pushf
jbe
fwait
pop
adc
dec
jle
add
rolb
loop
mov
pop
loop
and
loope
dec
xchg
sbb
xchg
xchg
in
cltd
xor
add
repz
popf
jne
cld
push
jae
andb
mov
pop
lods
bnd
add
lahf
push
mov
inc
inc
mov
sbb
out
lret
out
mov
sbb
jmp
push
jb
or
xor
lods
xchg
lahf
mov
data16
inc
add
inc
or
push
in
fs
imulb
cmp
test
xchg
lds
in
fs
stos
mov
pop
pop
jle
ret
cmpsl
mov
push
add
dec
in
sub
fucompp
jp
pop
sbb
xor
mov
test
movsb
push
ja
jae
pop
push
bound
imul
pop
inc
mov
or
sub
jo
arpl
mov
in
data16
in
fcmovbe
fnstcw
xor
aad
mov
mov
adc
mov
adc
mov
sbb
imul
fisubl
mov
clc
addr16
sti
aad
adc
lds
popa
roll
lret
mov
push
dec
in
int
subb
xor
out
mov
add
cmc
repz
push
mov
fcmovnu
cmpsl
sbb
ret
lods
lods
jle
addr16
and
pop
mov
mov
popf
cmc
leave
add
insl
adcb
sub
cmp
fidivrl
push
cmp
ds
test
in
subb
mov
out
dec
mov
xchg
mov
hlt
shll
pop
popf
dec
test
test
cmp
cmpsl
in
aam
lret
mov
sub
dec
push
xchg
gs
hlt
sub
enter
leave
mov
xor
pop
outsl
outsl
outsb
divl
xchg
scas
cwtl
mov
std
popf
mov
inc
aam
arpl
xlat
pop
lock
pushf
push
test
jle
icebp
mov
testb
cltd
jle
fcoml
loopne
cmp
mov
mov
pushf
loope
inc
ret
and
push
in
into
inc
dec
cmpsb
mov
sub
jne
test
mov
and
in
pop
sahf
cmpsb
sbb
jns
sbb
das
cmc
imul
jbe
xchg
push
test
arpl
xor
or
daa
icebp
xor
jg
and
iret
push
push
lock
stos
dec
ja
add
pop
test
inc
mov
out
mov
jp
mov
pop
or
jecxz
iret
adc
jb
repz
lds
cmp
xchg
sbb
lret
clc
paddd
or
sub
mov
inc
pop
fnsave
jle
xchg
sub
xor
or
mov
js
iret
push
sub
mov
int
loop
mov
xchg
push
rcrb
fiaddl
clc
popa
fdivrl
push
pop
pop
cmp
fmul
loopne
cltd
lods
jb
divl
cli
sti
in
sub
int3
sub
inc
or
push
mov
add
pop
dec
mov
inc
push
loop
bound
in
clc
roll
fldenv
imul
lcall
testl
push
aam
jecxz
sti
fwait
aaa
pop
cmp
xchg
pop
int3
or
or
in
imul
sbb
push
xchg
in
lahf
incl
ss
sub
fstp
fsubrl
outsl
mov
fwait
add
mov
insb
xor
mov
cmp
leave
jle,pn
xchg
jb
pop
pushf
pop
ret
aad
rorl
mov
mov
popf
xchg
pop
cld
ret
loope
rorl
jp
cmp
bnd
sarb
scas
mov
adc
pop
push
roll
add
enter
jg
dec
mov
daa
imul
cs
pop
xchg
insl
mov
push
pop
icebp
lock
sahf
cmp
pop
jne
aaa
push
dec
dec
add
loopne
ss
xor
jbe
sbb
pop
mov
push
sub
repz
adc
movsb
jmp
out
jbe
pusha
inc
jge
movsb
aad
cmpsb
in
in
pop
jg
rolb
sub
or
bound
fldenv
push
scas
xchg
mov
das
fidivrs
push
aas
push
push
jmp
mov
adc
mov
outsl
faddl
cmp
hlt
stos
xchg
iret
movsb
jmp
int
ja
ds
mov
sahf
imulb
das
add
lock
sahf
shll
int3
or
fwait
lret
jbe
ljmp
shlb
test
or
cmp
sbb
pop
mov
mov
decb
push
movsl
fldl
or
push
test
or
mov
mov
push
into
cmp
mov
mov
out
dec
xor
scas
imulb
daa
xor
fsub
sbb
shrl
pop
loopne
mov
pop
mov
sub
fldcw
mov
std
push
stos
je
aad
add
and
mov
daa
xchg
ss
enter
in
xor
mov
pop
add
push
xchg
test
xchg
mov
mov
mov
mov
push
test
jg
dec
ret
mov
fs
test
fwait
adc
push
xorb
cmp
sbbl
adc
in
xorl
into
negb
int3
ljmp
enter
ja
pop
xlat
loop
and
fsubl
inc
inc
adc
jle
cltd
or
aas
jae
in
jecxz
iret
inc
pop
mov
stc
xchg
aaa
push
outsb
inc
push
divl
push
lret
loope
xchg
xchg
hlt
test
adc
mov
sahf
dec
fsubrl
imul
push
pop
loope
and
lcall
sahf
mov
int
xchg
call
sbb
shll
pusha
les
and
adc
push
stos
inc
lea
mov
lods
or
jge
mov
mov
aam
push
rcr
sbb
je
adc
mov
lods
lret
xor
imul
adc
cld
fstpl
lods
sub
push
inc
push
sbb
mov
mov
or
inc
sub
jb
inc
std
sub
cltd
and
sub
lret
jg
pop
mov
lods
inc
push
orb
lahf
into
add
push
sti
pop
jne
mov
out
push
test
push
cmc
leave
out
imul
cmc
cmpsl
sub
cs
pop
mov
test
push
repnz
jae
shlb
divb
in
fcoml
push
and
cmp
xchg
xchg
decb
sbb
inc
jl
aam
mov
mov
test
dec
jle
shll
aad
or
out
ljmp
push
cmp
or
fwait
push
sahf
adc
outsb
xlat
popf
sub
lods
sub
out
pop
testb
sbb
les
and
dec
loope
mov
pop
xor
cs
fiadds
cmc
adc
or
cmp
pop
outsl
and
gs
adc
imul
mov
adc
cld
fadds
jno
popa
fcompl
leave
in
adc
pop
pusha
out
imul
imul
jne
or
insl
ret
xchg
movsb
or
xlat
imul
xchg
les
pop
clc
xchg
loopne
mov
mov
lock
adc
ret
mov
xor
and
mov
stos
cmp
out
add
cs
scas
pop
cmp
setnp
cmpsl
or
dec
aas
filds
mov
popf
jae
mov
push
xchg
adc
lods
inc
and
mov
loope
in
shl
test
out
pop
pop
aad
nop
or
stos
xchg
out
inc
pop
lea
pop
jp
sub
test
xchg
xchg
jmp
ret
shrl
jno
ret
fs
cwtl
sbb
inc
or
xchg
mov
stos
jbe
fnsave
sahf
mov
mov
mov
mov
out
ja
adc
jecxz
pushf
mov
xor
cld
dec
add
jg
or
mov
jle
pop
push
mov
or
cmpl
push
sub
ss
add
push
outsb
xor
pop
insl
pop
xchg
add
xchg
lods
sub
adc
jl
cmpsb
ds
sbb
rorl
sti
out
cli
popa
movsb
icebp
lds
lcall
push
cmp
lods
mov
add
stos
das
jmp
js
mov
insb
sub
mov
scas
outsb
inc
inc
pop
dec
push
stc
xchg
mov
lea
clc
test
addr16
mov
mov
aaa
push
inc
ljmp
jno
loope
movsl
cld
int3
or
outsb
fisubrl
int
inc
sbb
out
icebp
or
sbb
es
data16
and
push
pusha
rolb
lock
in
cmp
into
cmp
cmp
test
cwtl
xchg
iret
addr16
cmp
icebp
jge
push
ss
jmp
mov
fwait
pop
add
jmp
sub
movsl
stos
out
scas
ljmp
scas
pop
mov
push
mov
pop
cmp
iret
pop
imul
idivl
dec
scas
pop
mov
loop
cld
stc
sbb
push
mov
inc
ret
or
inc
mov
repnz
imul
push
sub
xchg
mov
sahf
pop
and
aad
imul
mov
imul
lea
popf
das
lcall
test
std
inc
lock
add
xchg
std
popf
inc
mov
adc
ja
sub
std
sbb
xor
mov
das
rcrl
icebp
rclb
push
jo
pop
mov
push
stos
movsb
lds
divb
bound
jecxz
scas
push
scas
shlb
or
xchg
es
sbb
jecxz
mov
dec
and
jle
cmp
push
mov
sub
push
push
ds
jns
call
sbb
xor
mov
mov
leave
clc
pop
cmp
jmp
fwait
mov
mov
das
jbe
faddl
shrd
int
pop
xchg
out
cmp
test
mov
mov
jne
inc
imul
and
jbe
ljmp
pop
pop
jge
lret
out
popf
outsb
xor
mov
outsl
repz
ror
jg
outsl
int
mov
std
add
mov
pop
and
mov
mov
inc
lret
testb
pop
js
cmp
jg
out
sarl
pmovmskb
dec
mov
cmc
cltd
gs
icebp
repz
pop
pushf
push
movsl
jge
cwtl
mov
inc
mov
lds
sub
test
pop
mov
jne
divb
cmp
test
dec
dec
cld
int3
sub
dec
cmpsb
les
dec
dec
pop
mov
cmp
loopne
test
shl
rolb
pop
cli
push
pop
out
push
jl
inc
push
dec
lret
jo
repnz
and
das
fisubrl
loope
fwait
rclb
push
popf
mov
imul
or
dec
xchg
mov
test
mov
stos
movsb
in
xchg
cmp
lods
jge
pop
fnstcw
ds
sbb
popf
push
div
mov
cli
mov
hlt
jp
inc
and
out
jmp
push
xorps
or
mov
insl
pop
or
pop
mov
inc
mov
push
dec
lea
out
in
enter
mov
ss
or
or
mov
push
mov
pop
xorl
mov
inc
adc
loope
adc
and
clc
addr16
sbb
aaa
lods
rorl
mov
mov
sbb
inc
test
xor
add
and
jbe
mov
push
and
or
xor
hlt
cmc
fildll
dec
insl
int
jmp
bound
stos
sbb
xchg
mov
aad
ja
jmp
sub
pop
imul
mov
jnp
or
dec
jle
std
ret
dec
sub
jne
stos
xchg
mov
xor
insl
xor
jge
cwtl
rol
pop
mov
xor
push
cld
adcl
adc
mov
out
cmp
daa
fstps
iret
mov
adc
shrb
and
mov
fisttpl
mov
int
stos
int3
lcall
fcmovu
mov
cli
adc
sahf
or
add
xchg
daa
pop
jmp
jge
or
dec
xor
pop
mov
stc
mov
sub
dec
adc
daa
mov
movsb
add
clc
and
ror
mov
lcall
jmp
cld
sarb
mov
js
push
mov
ret
lcall
int
repnz
xor
stos
scas
xlat
add
int3
stos
or
iret
cmp
fsubrp
in
xor
mov
cmc
push
outsl
data16
mov
mov
aaa
jns
adc
paddsw
clc
popa
data16
sbb
ret
loope
fildll
mov
rcll
pop
mov
mov
xchg
pop
prefetch
jl
mov
or
mov
ret
jbe
test
cmp
cmp
xor
jne
mov
in
or
cmc
pop
mov
lret
push
inc
loope
std
cmc
daa
and
sbb
cld
push
mov
lods
xor
xlat
jp
shl
sarb
in
subl
jnp
data16
stc
test
ror
cmp
stos
jb
insb
or
push
jge
mov
cmpsb
lods
pop
mov
in
in
lea
jle
or
out
mov
xor
jmp
movsl
out
outsb
movsl
mov
test
jae
loope
arpl
pop
mov
sbb
mov
ljmp
xor
and
add
mov
fcomip
mov
sub
push
cmp
dec
cwtl
in
or
icebp
test
and
out
cwtl
mov
xchg
cld
jp
lods
lods
mov
fbstp
leave
cmp
inc
clc
mov
divb
cltd
mov
pop
jb
repnz
cs
mov
jle
popa
mov
ret
pop
inc
or
lea
lcall
jl
add
xor
insl
ja
pop
push
xchg
aad
in
sti
cmp
push
adc
cmp
orl
ds
leave
stos
stos
push
push
test
dec
mov
cmc
dec
mov
mov
fs
or
xchg
jge
jne
scas
fsubrp
jb
pop
dec
aad
and
mov
sub
pop
mov
shlb
cmc
mov
cmpsl
insl
fisttps
and
lods
out
and
jge
xor
xchg
les
mov
cli
sbb
add
imul
int
inc
ljmp
sub
xchg
std
add
ret
bound
pop
lahf
mov
pop
jmp
js
sbb
mov
sar
add
fists
xor
out
test
shrl
sub
and
aaa
xchg
sbb
pop
icebp
pop
pop
cwtl
aas
pop
mov
cmp
mov
insb
mov
loope
xchg
mov
loope
push
push
aad
xlat
call
lock
lock
fcomip
and
jmp
add
push
pop
xchg
push
out
ret
repz
mov
and
testl
xor
cmc
in
ja
sbb
loop
push
lods
lock
pop
popf
and
std
and
testl
push
sub
push
lods
dec
into
jno
int
cmp
dec
paddsw
fiaddl
push
pushl
cmp
mov
ds
mov
ret
add
shll
fcompl
pop
test
mov
dec
or
lcall
sbb
fisubrl
fisubrl
fadd
gs
jne
sti
xlat
je
and
mov
cmp
cmp
and
jp,pn
push
sub
lcall
into
in
daa
pop
jp
lods
scas
js
mov
es
mov
mov
call
push
bndldx
incb
aas
push
mov
mov
scas
dec
mov
cmp
jg
icebp
jbe
xor
or
in
in
mov
or
movsb
jmp
les
xchg
ret
aad
cli
inc
cmp
sub
out
pop
xchg
les
test
mov
mov
or
hlt
and
cld
andl
bound
leave
and
dec
or
test
test
data16
rorl
adc
lods
add
pop
jp
hlt
add
push
lahf
adc
aam
dec
jmp
cli
lea
loop
popa
xchg
push
shl
dec
jo
loop
ss
in
rorl
pop
add
lahf
fdivrs
lcall
loope
add
sub
mov
icebp
jnp
movsl
mov
movsb
mov
jmp
xor
inc
cmp
scas
push
in
fsubl
rcrl
mov
pop
andl
add
mov
in
cmc
call
in
cmp
jp
jb
ss
mov
push
fildl
pxor
das
or
jmp
iret
fnstsw
jecxz
jne
out
xchg
shlb
push
sarb
in
inc
pop
lods
fdivrl
pop
clc
lcall
sub
rcll
movsb
mov
ja
sti
sbb
movsb
push
pop
repz
jp
or
sbbb
sub
insb
and
leave
das
jp
push
mov
push
mov
mov
ds
lods
inc
push
insb
dec
adc
or
push
rorb
and
fcomip
cli
adc
cmc
xchg
stos
and
jno
in
lock
iret
aas
negl
pop
stc
add
lock
mov
xchg
bound
cld
inc
bound
loop
jmp
dec
jle
jp
or
rsm
mov
sbb
sbb
sahf
mov
jns
sub
test
push
lahf
sarb
scas
ja
mov
jmp
pop
es
cmp
fsubrl
into
pop
pop
out
jne
adc
imul
stc
and
xchg
aam
imul
addb
and
in
int
mov
push
lods
push
sti
jge
lcall
mov
test
loope
push
cs
mov
pop
adc
xchg
xchg
fdivs
fisubrl
scas
xlat
push
inc
hlt
xor
in
inc
jo
daa
mov
inc
pop
add
pop
xchg
xchg
js
stos
lds
lret
stos
shl
rolb
push
mov
or
pop
inc
cld
mov
leave
lret
bound
paddsb
fxch
pop
daa
pop
push
insb
cli
and
jns
pop
ja
mov
lock
decb
repnz
or
sub
movsl
jne
jnp
testl
mov
dec
xchg
sbb
in
loope
out
pop
jle
out
jnp
pop
clc
inc
jecxz
mov
jge
push
hlt
pop
ja
je
imul
add
or
dec
dec
dec
sub
pop
push
lea
push
ret
inc
cmp
dec
jns
xchg
lret
sub
out
mov
pop
shlb
data16
xor
mov
xor
pop
inc
mov
xor
ja
pop
sbb
ja
cmp
mov
out
out
in
push
pop
gs
fldcw
ficoml
mov
push
ljmp
pop
push
mov
adc
leave
xor
lock
lcall
sbbl
loop
add
jg
mov
mov
imul
sub
xor
test
sarb
cltd
xor
test
pop
pusha
mov
and
sbb
xchg
jb
mov
inc
jl
test
push
sub
sub
loopne
cmp
xchg
pop
outsb
mov
xchg
dec
rorb
dec
outsb
outsl
pop
xor
inc
js
lret
jno
and
sub
hlt
xchg
adc
loopne
xor
stos
or
lods
xchg
imul
xor
cwtl
or
or
imul
xchg
xchg
push
or
mov
xchg
pop
in
jg
nop
mov
inc
loop
into
xor
inc
mov
or
mov
in
mov
imul
jne
arpl
repz
pop
mov
cld
loope
fldenv
push
jecxz
aaa
sarl
arpl
mov
lods
push
addr16
sub
push
nop
adc
jae
icebp
sub
dec
push
push
scas
and
stos
mov
adcl
adc
cmpsl
in
xlat
fst
pop
sub
outsl
cmp
mov
mov
and
imul
arpl
movsb
push
sub
adc
mov
and
push
dec
outsl
pop
aad
add
in
dec
sbb
in
das
out
jbe
sti
imul
rcr
sub
and
psrad
pop
fcoms
mov
adc
and
scas
dec
xchg
scas
dec
popf
push
addr16
into
sbb
adc
das
lret
dec
cmc
ds
shrl
sbb
scas
cmp
imul
push
push
aas
jge
xchg
mov
sub
sti
addb
pop
add
inc
les
shll
das
scas
in
test
aad
loope
jp
out
sub
sub
mov
mov
mov
nop
xchg
xchg
pop
jbe
push
xchg
or
jo
bound
mov
pop
loopne
cmp
bound
js
inc
push
ret
sbb
divl
inc
dec
or
push
pop
cltd
addr16
out
decb
mov
jecxz
insb
mov
out
imul
mov
xor
ret
xchg
dec
repz
pop
clc
and
or
pop
ds
xchg
cmpsl
mov
and
add
les
pusha
scas
cmpsl
sub
testl
push
or
outsb
repz
xor
cwtl
dec
aad
ds
fs
addl
and
lock
incl
xchg
cmp
int3
sub
mov
imul
mov
push
lds
gs
push
dec
inc
out
imul
jl
pop
jb
dec
lahf
scas
sar
out
or
cmpsl
movb
test
add
xchg
adc
pop
xchg
jl
cld
jo
push
xchg
dec
adc
cmpsl
fimull
lret
cmp
cmp
and
sub
divb
pusha
les
cmp
ffree
insb
push
insb
adc
daa
call
or
pop
jbe
es
mov
lret
mov
jbe
addr16
jp
dec
lea
mov
jp
scas
mov
pop
mov
setl
dec
test
aas
cli
jp
and
fiaddl
daa
sub
ljmp
loop
and
push
out
lcall
mov
insb
imul
lea
popf
or
sbb
or
call
lea
dec
xchg
mov
out
arpl
jle
shlb
xorl
imul
mov
jle
scas
sar
test
cmpsb
push
addr16
ljmp
or
loopne
and
insb
or
test
cmpsb
int3
lods
repz
mov
mov
cmpsl
inc
fistps
aaa
pusha
test
pushf
das
adc
lods
and
xor
jle
jle
push
cltd
sbb
sub
adc
stos
sahf
mov
shll
push
aam
cli
out
lret
subb
clc
sbb
fmul
es
push
sti
cmp
pop
jae
pop
ret
mov
xorl
cmpsl
mov
jge
imul
aas
hlt
sti
test
out
enter
add
sbb
je
ljmp
psubusw
jle
imul
daa
dec
cmc
testb
insb
mov
push
adcb
in
adc
jmp
out
inc
cmp
mov
sbb
dec
hlt
adc
or
and
test
inc
dec
insb
push
clc
sarb
jp
adc
dec
adc
std
in
cmc
pop
fnsave
das
rclb
stos
xchg
repz
mov
gs
pop
mov
or
scas
push
adc
cltd
and
pop
pushf
in
aam
shll
mov
out
imul
add
pop
xor
jmp
inc
cmp
push
or
jbe
mov
loope
push
pop
lea
xchg
push
sub
jns
std
ljmp
mov
aad
mov
mov
jg
out
mov
imul
outsl
mov
cmc
sbb
loope
pop
sbb
stc
xlat
notb
xor
or
add
out
mov
jne
lds
incb
fdivrs
xor
mov
sbb
xchg
mov
push
shlb
and
mul
stos
daa
dec
cs
jae
lods
lds
xchg
pop
adc
in
aam
jl
pop
repnz
xchg
xchg
outsb
fsubr
icebp
es
sbb
push
xor
dec
movsl
jne
inc
clc
xchg
callw
xchg
sbb
adc
pop
mov
push
cli
adc
xor
xchg
pop
and
lret
pop
xchg
div
imul
push
mov
add
lcall
mov
loope
aam
filds
dec
test
lds
out
movsl
hlt
pop
loope
cmp
loopne
pop
mov
jge
loope
test
loopne
loopne
and
push
ss
pop
daa
insb
ds
inc
es
aaa
pop
out
mov
in
pop
hlt
aaa
jns
mov
mov
pop
movsb
inc
xchg
mov
shrl
scas
into
mov
jno
jg
aas
repnz
push
scas
scas
rolb
js
in
aam
imul
pop
test
lea
call
fimull
pop
dec
stos
in
xlat
adc
lock
dec
jae
stc
cmp
mov
pop
insb
js
xor
outsb
push
pop
mov
mov
stos
xchg
pop
mov
addr16
icebp
ret
loope
and
jp
mov
jbe
test
and
cwtl
push
int3
push
lahf
mov
xchg
in
fucomip
call
lock
outsl
in
sti
aam
mov
out
xchg
dec
push
leave
shll
mov
mov
push
pop
sub
leave
mov
or
mov
aaa
int
mov
shll
cmpsl
out
cvtdq2ps
pushf
pop
test
pop
movsl
inc
out
xlat
cmc
fidivrs
dec
lret
jge
pop
inc
stos
fsubrl
inc
or
dec
mov
inc
push
out
push
xchg
mov
rorb
cmpsb
repz
dec
lcall
out
aas
sub
mov
xor
mov
popf
push
fcompl
mov
jbe
mov
xor
add
daa
pop
mov
addr16
mov
inc
pop
pop
repnz
mov
in
aad
idivl
push
xchg
movsl
adc
xchg
xchg
xor
out
xchg
stc
push
out
pop
rcr
cmp
dec
mov
loop
xchg
stos
and
inc
sub
imul
sbb
les
cmpsl
test
cs
pop
das
into
xor
jecxz
mul
scas
xchg
pop
or
xor
insl
in
lds
out
jp
ss
push
push
xor
test
movsb
and
push
data16
in
jp
mov
lods
push
lock
inc
lods
fcmovb
mul
pop
es
cmpsb
mov
mov
in
loop
xchg
sub
inc
pop
mov
cmp
iret
cld
add
mov
int
mov
inc
aad
cmp
fimuls
sti
pop
mov
push
cmp
pop
fildll
lods
lret
test
xchg
pop
jl
lods
rorb
js
testb
mov
cmc
call
mov
pop
ss
mov
addr16
xor
stos
pop
ja
das
testb
maskmovq
testl
cmp
lock
inc
out
push
inc
pop
aad
adc
jbe
cmp
jns
int3
dec
push
loopne
mov
popf
xchg
addr16
jno
sub
faddl
mov
in
in
cmp
xlat
dec
clc
pop
div
sbb
loop
and
mov
rcrl
xchg
mov
sbb
mov
push
pop
stos
fwait
and
add
fs
mov
les
shll
cli
shrl
lret
int3
xor
lea
stos
es
loopne
add
xlat
sar
stos
loope
setne
hlt
adc
mov
and
bound
cmc
pop
out
insb
mov
mov
dec
mov
aam
xchg
jno
mov
mov
push
and
cmp
inc
xchg
repnz
shll
ds
daa
lds
pop
in
into
rclb
pop
repnz
bound
sti
into
std
xor
ss
jecxz
adc
ret
sbb
mov
and
call
aaa
ret
pop
imul
sbb
push
xor
clc
insl
nop
les
mov
in
je
xchg
aas
dec
pop
mov
inc
scas
jecxz
sub
int
mov
lods
imul
mov
clc
and
aad
jecxz
imul
adc
or
jb
or
cwtl
outsl
int3
rorl
add
lcall
mov
outsl
sub
sub
fisubrl
cltd
push
lahf
popa
mov
bound
pop
insl
arpl
stc
push
add
jle
cmp
cmp
loop
mov
cmp
mov
das
imul
sysenter
pop
mov
mov
adc
insl
es
and
mov
lods
lret
push
sti
adc
push
stc
xchg
call
outsb
and
mov
jns
cs
daa
xor
jae
push
mov
cmp
adc
aaa
ja
and
seta
mov
rcrb
lods
aaa
pop
sbb
pop
test
in
test
lret
test
mov
add
in
push
das
sub
adc
clc
mov
inc
adc
aad
push
and
pop
dec
sbb
cmpsb
push
test
push
push
mov
push
push
jae
pop
divl
fwait
mov
cmp
mov
loope
cmp
inc
gs
adc
sub
incb
inc
mulb
gs
fwait
in
insb
ss
cmp
inc
mov
push
in
mov
pop
cld
mov
push
out
negl
jae
mov
pop
dec
mov
imul
aad
out
cmp
lds
fucomp
stc
es
test
arpl
aas
jns
dec
jb
jb
sub
iret
pop
cmp
mov
sbb
mov
dec
xchg
repz
mov
aas
out
leave
stos
jge
or
adc
fiadds
push
divl
ljmp
loop
in
icebp
jge
xchg
xor
push
jbe
xor
js
shl
or
jle
or
xor
fucomp
pop
testb
mov
xor
inc
cmp
jno
icebp
mov
push
mov
out
mov
mov
sarl
jl
les
int3
mov
xor
ret
mov
xor
std
ljmp
sub
enter
mov
test
stos
or
cmpsb
push
ljmp
mov
push
pop
xlat
mov
jno
loope
xchg
push
xlat
xor
mov
and
xchg
in
jbe
sbb
mov
sti
repnz
jmp
xchg
push
aad
and
push
cmpsb
outsb
mov
dec
dec
cwtl
int3
sub
jmp
sbb
mov
sbb
push
clc
adc
xor
mull
testl
inc
ss
push
push
lds
push
shll
pop
xor
call
or
insl
data16
jne
jns
mov
cmpsl
adc
mov
gs
pop
mov
fldenv
or
notb
iret
shll
pushf
fwait
scas
cmp
lcall
dec
fsub
mov
mov
push
scas
lret
cmovp
pop
mov
cmovl
aad
out
shlb
add
mov
int3
inc
sub
lcall
sbb
cmc
jnp
ss
loopne
aas
scas
pushf
stos
fcompl
xchg
jle
imul
adc
out
test
lds
xor
sbb
into
popf
mul
add
inc
adc
clc
push
mov
rorb
loope
lods
lea
xor
push
push
daa
lea
cmp
in
aam
inc
push
inc
push
pushf
xchg
insl
sarl
scas
jge
andl
sub
sbb
je
es
sub
push
stos
push
lea
fdivl
dec
push
mov
das
jnp
cmc
fdivrl
cltd
sub
stc
xchg
sahf
xor
dec
cmc
mov
cmp
arpl
popl
mov
in
int3
roll
push
fisubs
pop
dec
jge
stc
je
or
fwait
in
out
fstp
and
ret
inc
mov
gs
mov
sub
jne
mov
mov
and
insl
pop
xchg
sbb
aaa
push
jno
adc
fisubrl
mov
adc
test
ffreep
or
mov
out
out
inc
hlt
dec
bound
push
push
xor
sub
rorb
or
ret
imulb
jle
or
and
cmc
xor
out
pop
icebp
sbb
add
push
xor
cld
lds
push
daa
aas
ret
test
data16
push
and
int3
xchg
mov
call
shlb
push
lock
xorl
test
sbb
xor
nop
inc
ds
fsubp
add
pop
mov
inc
lret
jne
cmc
adc
insb
sub
sub
jne
aas
cmp
sbb
mov
pop
push
inc
clc
xchg
lea
mov
xchg
sti
stc
test
xchg
xor
test
cli
mov
outsb
cli
test
jge
push
cmpl
and
add
add
push
mov
add
cld
push
push
push
mov
mov
mov
mov
cmpw
jne
add
movl
xor
mov
inc
xor
call
jae
mov
call
add
stos
jmp
call
jb
call
jae
mov
call
dec
je
jns
call
jae
push
mov
call
mov
inc
dec
jne
call
jb
pop
jmp
mov
call
add
mov
movb
cmp
je
call
mov
jmp
mov
call
push
mov
call
mov
inc
inc
pop
or
je
mov
jmp
cmp
je
inc
call
mov
jmp
call
dec
loop
mov
call
jmp
dec
mov
push
mov
mov
xor
shl
call
or
pop
mov
call
cmp
jae
cmp
jae
cmp
jae
cmp
ja
inc
inc
inc
inc
push
mov
sub
rep
pop
jmp
mov
pop
pop
pop
jmp
add
jne
mov
add
stc
adc
ret
mov
call
ret
xor
call
adc
loop
ret
xor
inc
call
adc
call
jb
ret
mov
pop
ret
nop
dec
inc
bound
add
add
add
dec
pop
inc
sub
lcall
cs
das
xchg
not
xor
roll
inc
cmp
add
jecxz
jo
es
or
aam
mov
es
fstpt
mov
lds
loopne
jno
push
inc
sbb
sbb
adc
adc
jne
adc
lock
adc
rorb
bound
cmc
and
out
jp
cmp
mov
pop
dec
repnz
andl
adc
das
sbb
imul
ret
ret
and
mov
dec
aad
xchg
inc
enter
mov
cmp
outsb
push
js
add
popa
add
inc
bound
mov
roll
push
cmpsb
loope
loopne
fmull
push
push
cmp
push
inc
nopl
push
insb
aaa
sbb
out
add
pop
fs
int3
or
mov
lcall
sub
lods
push
or
xchg
mov
fcmovne
call
cmp
fisubrl
lret
rcrl
add
push
add
and
pop
inc
fs
inc
jnp
and
test
cmc
cli
jge
or
inc
sbb
ds
adc
cltd
adc
in
pop
ljmp
arpl
lcall
mov
push
popa
mov
mov
xchg
add
sbb
idivl
mov
mov
les
adc
mov
cmp
or
mov
mov
dec
stc
add
pop
mov
lea
sub
lds
clc
insl
scas
mov
in
bound
jmp
jge
adc
loope
xor
xchg
fs
ret
ret
rcl
cmp
mov
adc
cmp
in
and
rcrl
imul
call
mov
scas
addb
lcall
cs
add
push
push
std
xchg
test
mov
sub
rcl
mov
inc
popa
jns
and
sbb
outsl
xor
pop
mov
xor
add
std
lea
pop
inc
dec
mov
cmp
call
inc
jnp
or
imul
add
sti
pusha
loopne
subb
insl
addb
mov
outsl
enter
inc
jmp
mov
dec
mov
inc
xchg
out
roll
push
push
imul
mov
hlt
xchg
lock
mov
dec
mov
into
adcl
std
fwait
sahf
xchg
dec
add
insb
sub
cltd
sti
lds
push
rorl
add
add
cltd
test
dec
mov
sbb
vmovmskps
lods
lea
subb
rol
in
loop
mov
mov
jp
iret
jmp
sub
mov
call
and
jae
xor
sbb
sub
fstpt
jp
cld
lds
imul
jo
div
jno
dec
mov
sar
jnp
inc
out
stc
and
addr16
fdivrl
jno
test
movsb
xchg
fidivrl
sub
fistl
jp
test
inc
jle
xor
icebp
stos
cmpsb
aas
nop
mov
int
xor
js
or
rcl
lret
lock
out
out
pop
aaa
cld
cmp
das
inc
or
and
std
jge
or
cmp
orl
in
loope
cwtl
mov
pop
and
cmp
lret
stos
jle
push
cmc
hlt
adc
pop
cmp
push
je
pop
sub
mov
and
sbb
sbb
xchg
push
es
push
shrb
pusha
inc
mov
xchg
outsb
push
sub
adc
fcomp
jmp
dec
xor
pop
mov
je
sete
mov
jb
shlb
dec
xor
testb
lret
scas
lods
push
stc
loop
add
bound
scas
cld
inc
in
hlt
testb
lods
das
test
pop
jp
mov
imul
shll
mov
push
adc
aas
sub
sahf
adc
pusha
fildll
subb
adc
pop
ljmp
pop
in
mov
pop
ret
loop
dec
pop
jecxz
mov
sahf
cmp
shlb
imul
in
mov
js
rcrl
cmp
lret
out
aam
test
push
add
inc
test
test
cmp
mov
sub
push
dec
in
mov
lret
inc
shrb
loope
dec
inc
adc
mov
loopne
mov
imul
pusha
mov
shr
rcrl
incb
sbb
popf
mov
repz
xor
icebp
rorl
fwait
sahf
and
jl
xchg
lret
fs
dec
mov
mov
gs
xchg
ret
pop
mov
mov
fisubrl
ss
push
lds
sub
push
pop
jle
iret
fs
or
jbe
xchg
ds
xor
shrb
hlt
sub
xor
xchg
sbb
subl
jo
dec
mov
in
movsl
mov
mov
dec
xchg
in
adc
jmp
pop
mov
imul
add
pop
repnz
rclb
mov
mov
pop
sub
movl
lods
cmc
lock
int3
rcrl
xor
cmp
in
bound
or
cld
inc
push
sbb
movsb
call
add
jmp
mov
xor
std
pop
outsb
add
pop
adc
sub
fs
mov
push
lock
loopne
sbb
dec
shl
repnz
fnsave
push
pop
jmp
mov
dec
arpl
inc
js
pop
sub
mov
roll
xlat
fbld
mov
mov
xchg
mov
icebp
mov
jns
xorl
vpmacsdql
js
sbb
daa
push
ret
cmpsb
cwtl
pop
ss
xchg
inc
les
jge
stc
push
sub
lds
add
insl
cld
orl
push
mov
rorl
out
stc
or
popf
jge
lock
or
iret
xor
inc
les
add
mov
mov
aad
add
sar
jecxz
xchg
xor
add
mov
add
mov
push
lods
push
into
arpl
lods
jecxz
stos
mov
cwtl
mov
sub
scas
imul
fwait
movsb
push
outsb
lea
sbb
inc
lret
fldcw
jle
dec
lods
add
sbb
dec
jns
mov
jnp
or
mov
loopne
cmpsl
xor
mov
ja
imul
adc
jo
mov
jle
jno
adc
sub
inc
mov
mov
scas
sbb
push
rcrb
xchg
insb
bound
xchg
jns
addb
aam
out
push
pop
imul
cli
dec
inc
mov
sub
jecxz
repnz
iret
push
inc
xchg
popa
das
xchg
inc
sub
roll
in
repnz
sbbl
mov
popa
in
andl
mov
mov
and
les
pop
pop
inc
inc
pop
leave
and
push
add
out
loop
xchg
clc
xor
add
mov
vmovapd
sub
mov
shl
inc
hlt
push
out
ret
inc
jmp
cld
hlt
loopne
pmaxub
rorl
inc
into
add
daa
add
jo
mov
out
insb
xor
out
push
movsb
sti
inc
lret
mov
mov
je
sub
pop
loope
push
jg
out
mov
push
pop
aaa
cmp
or
and
sarb
add
sarl
mov
mov
mov
fmul
test
sbbl
decb
lods
inc
jb
pusha
mov
xchg
mov
push
test
sbb
adc
jg
mov
mov
add
bt
lea
or
fstpt
mov
std
sbbl
sub
add
mov
gs
jle
sub
xor
pop
dec
scas
inc
adc
or
gs
or
mov
push
bound
hlt
xchg
mov
stc
cld
outsb
and
int3
cmc
clc
pop
pop
or
lods
pushf
push
int
pop
adc
imul
pop
aas
sahf
js
test
lret
or
inc
adc
mov
aaa
pop
in
mov
push
jbe
imul
icebp
sbb
jne
push
xchg
movsb
sub
inc
pop
aaa
cld
mov
mov
push
ss
fcoml
into
out
and
mov
mov
mov
imul
add
out
in
mov
out
or
sbb
scas
dec
cmc
jae
out
jne
jle
and
pop
inc
xor
out
lock
add
sub
jp
in
dec
hlt
xchg
mov
or
jbe
mov
mov
sub
loope
adc
out
imul
shlb
xor
or
roll
aaa
sahf
pop
daa
or
aas
pop
mov
add
and
insl
in
push
jl
aas
jno
inc
in
fwait
pop
jb
pop
cmpsb
test
ficompl
test
xchg
incb
notb
icebp
jg
clc
fst
pop
mov
hlt
cmp
fidivs
daa
adc
xor
add
fcoml
int3
pop
setno
and
inc
pop
adc
lods
sbb
or
adc
fidivs
mov
mov
scas
insb
in
enter
sub
push
pop
adc
je
add
adc
jmp
push
lds
pushf
fisubl
hlt
outsb
fucomip
out
and
push
sbb
test
inc
pop
push
cmp
cs
testb
push
lahf
aas
lds
adc
jle
jne
aaa
sahf
loope
cmp
pop
inc
mov
rorl
cmp
push
call
jecxz
mov
in
xchg
lods
or
jns
mov
mov
lds
mov
push
push
xchg
insb
out
sbb
xor
ret
lods
les
cmpl
repnz
pop
ficompl
pushl
sbb
pop
xchg
neg
popa
xchg
jno
cmp
je
jecxz
hlt
xchg
push
xor
mov
js
mov
mov
mov
mov
push
xchg
push
mov
out
pushw
mov
lock
movsl
std
push
add
aas
fdivrs
or
aaa
adc
insb
sub
gs
stos
dec
push
mov
stos
lcall
dec
fists
das
pusha
dec
out
imull
cli
mov
push
lcall
and
add
xor
hlt
fwait
jecxz
cmp
and
cs
dec
pop
adc
fs
mov
in
mov
jle
sub
xor
lret
shll
fsubrl
add
or
sbb
js
push
xchg
xor
mov
shll
out
mov
mov
cmp
jmp
in
mov
imul
mov
lcall
imul
out
mov
jecxz
clts
out
test
adc
xlat
lcall
jmp
subl
insb
ret
divb
mov
mov
sbb
xlat
sub
or
inc
popa
adc
sub
rclb
scas
xlat
mov
pop
scas
and
xchg
ret
sub
and
push
jp
add
pop
lret
lods
xchg
cmpsl
mov
dec
xchg
mov
pop
hlt
pop
push
dec
iret
ret
clc
adc
inc
or
nop
int
jno
int3
mov
pop
adc
data16
lahf
adc
mov
add
or
in
dec
xchg
pop
pop
push
dec
jns
xchg
lea
adc
flds
sub
popf
mov
test
jecxz
jp
popa
and
and
mov
mov
mov
inc
insl
cld
jo
cmpsb
stc
dec
jge,pt
mov
das
mov
or
and
sub
xor
mov
inc
addl
out
push
or
test
cmp
mov
xor
je
cmp
cs
hlt
push
mov
pop
adc
aaa
scas
push
jp
dec
lods
xor
push
insb
into
int3
inc
lds
lods
jle
mov
push
and
sub
pop
ret
adc
push
mov
lret
daa
sbb
pop
ret
jno
int
push
and
push
pop
xlat
int
cmpsb
push
stos
loopne
lret
in
xchg
sbb
xchg
mov
jecxz
add
sbb
or
pop
push
enter
adc
incl
push
in
lods
adc
loope
push
loopne
push
dec
out
mov
out
pop
out
ret
clc
clc
sarb
cmpsl
das
cli
cld
or
cmc
in
hlt
test
pop
mov
push
sub
int3
out
pop
outsb
pop
inc
fsubrs
jecxz
sub
loope
lock
mov
push
and
stos
bound
pop
movb
jmp
jmp
imul
mov
in
cwtl
xor
push
aad
fisttpll
not
adc
stos
packuswb
xchg
xor
or
sti
pop
or
cmp
gs
inc
mov
cli
jmp
xor
sbb
cmc
mov
mov
cli
xor
stos
xlat
push
lods
mov
mov
call
mov
pop
fdivrs
lods
xchg
lahf
pop
push
fistps
stos
xchg
pop
out
jecxz,pn
and
pop
jl
loopne
xor
das
add
movsb
push
ficoms
fcoms
test
loopne
inc
cmp
lret
xchg
inc
mov
or
and
dec
cmp
lock
xchg
roll
adc
cs
movsl
mov
into
pop
pop
sub
adc
cltd
sub
mov
mov
cmp
mov
fdivl
dec
mov
ds
les
jbe
mov
push
adc
bound
scas
cmc
jmp
and
sarb
push
cmp
inc
sub
fisubl
outsl
mov
pop
cmp
or
push
push
mov
inc
aas
insb
cmp
in
or
insl
mov
cmc
add
mov
fwait
clc
inc
ljmp
test
xchg
shrl
fistpll
pop
std
dec
dec
orb
mov
sub
mov
test
xor
jns
shll
inc
or
cmp
rorl
sbb
dec
mov
mov
pop
jns
loope
cmp
rorl
ljmp
adc
fsubs
js
dec
mov
or
mov
or
scas
adc
int
dec
and
xor
pop
aas
repz
arpl
stos
fcmove
std
push
insl
xchg
mov
test
pop
cwtl
aam
jle
sbb
hlt
pop
cmpsl
ret
push
dec
xor
cmp
std
jle
int3
enter
cmp
push
test
rcll
out
out
sbb
lcall
cmp
add
and
in
xchg
adc
mov
inc
fstps
fiadds
jbe
mov
jmp
adc
mov
or
imul
dec
sar
mov
sub
and
mov
push
loopne
pop
rep
xorb
sub
inc
out
sbb
inc
lea
push
and
add
push
sbbb
in
in
mov
push
ljmp
and
cmp
pop
push
sbb
cmc
jb
sbb
rorb
mov
loop
inc
push
push
arpl
sbb
jge
sub
sarl
fwait
jbe
mov
push
jp
aaa
inc
insb
sub
out
dec
xorb
mov
cs
add
sahf
and
out
or
mov
pop
lods
lea
in
dec
xor
xor
add
inc
push
xor
loopne
pop
pop
pop
js
cmp
test
fucomi
pop
mov
sti
mov
aam
pop
int
mov
sbb
ss
dec
pop
dec
jb
int
cwtl
nop
mov
push
movsl
xor
xor
xor
adc
jns
call
push
in
mov
inc
cs
jb
clc
mov
or
jmp
add
cmc
repz
or
pop
mov
enter
xchg
inc
sarb
lret
push
mov
xchg
pop
cmp
push
pop
dec
pop
mov
push
pop
std
pop
adc
adc
cmp
in
ljmp
mov
xchg
or
xchg
lods
movsb
jnp
sub
xchg
and
xlat
das
insb
cmpsl
cmpsl
push
inc
sarl
push
adc
ds
mov
aaa
push
or
sbb
xor
xlat
rorl
dec
adc
jne
xchg
cltd
push
and
jp
push
dec
dec
scas
sbb
outsb
cltd
sbb
rorb
mov
xchg
pop
das
mov
movsb
cmp
adc
out
mov
pop
pop
adc
cwtl
popf
inc
mov
mov
pushf
sbb
lcall
ja
or
mov
jns
lods
je
insb
or
mov
std
pop
sbb
jle
jmp
cmp
out
mov
or
ror
sti
or
or
jb
jb
jp
lods
ss
push
sub
cmp
movsl
push
lahf
insl
jno
jb
inc
pop
iret
cs
jp
dec
push
dec
mov
mov
lret
popa
into
adc
dec
inc
push
out
test
push
inc
cs
mov
fildl
or
add
lret
dec
xchg
push
or
lds
shll
push
arpl
ss
daa
fmull
ljmp
push
popa
mov
xchg
jecxz
sahf
clc
movsb
mov
dec
fildll
lock
dec
xor
sti
push
fwait
paddusb
and
hlt
loope
negl
cli
in
in
outsb
ljmp
gs
sub
aas
clc
mov
mov
add
sbb
arpl
outsl
ljmp
mov
push
fbstp
cmc
movsb
and
lahf
dec
clc
mov
xor
imul
pop
mov
leave
rorl
adc
mulb
or
adc
dec
jecxz
fbstp
hlt
cmp
mov
out
cmc
orl
mov
movsl
rorl
aaa
shr
adc
mov
push
ret
pushf
fwait
mov
fadd
cmp
inc
and
mov
icebp
pop
xchg
inc
inc
lret
push
out
stos
pushf
loop
mov
push
adc
mov
mov
jae
movsl
cmp
aad
loopne
aaa
js
mov
repnz
movsl
test
call
xor
xchg
ret
jnp
lea
outsb
dec
je
pop
fisubrl
cld
nop
add
push
rolb
push
mov
and
cmc
std
es
mov
js
xor
ja
lods
pop
cwtl
std
mov
call
push
stc
std
or
insb
imul
aas
xchg
xchg
imul
jp
push
pop
fcomps
and
cltd
pushf
call
aad
pop
pop
in
cmp
xchg
add
push
mov
mov
mov
repnz
cwtl
in
cmp
fdivs
dec
adcb
push
mov
inc
and
xchg
dec
jnp
outsl
loopne
xor
ret
lock
arpl
imulb
in
mov
mov
lods
fmul
mov
add
adc
adc
outsb
jp
shlb
stos
xchg
mov
xor
and
loop
pop
jge
lret
inc
pop
jno
stos
pop
xor
cmpsb
dec
lods
push
pop
adc
pop
call
push
repnz
xor
and
scas
mov
pop
js
and
into
push
add
lods
mov
mov
xor
out
jns
and
mov
cmpsl
insb
pop
iret
cmc
push
push
inc
mov
adc
push
xchg
add
cmp
mov
cmpsb
outsl
fdivr
xor
xchg
repnz
sub
push
ret
scas
mov
jns
cmp
dec
fneni(8087
xchg
xchg
int
mov
pop
bound
mov
adc
bound
ja
flds
daa
sub
scas
lahf
mov
loopne
sahf
ror
and
dec
sbb
adc
test
sbb
jp
push
ds
jae
in
insl
pop
inc
popf
mov
sar
cwtl
inc
in
and
push
int3
mov
lods
inc
push
in
les
sbb
push
hlt
adc
sbb
pop
sarl
cmovl
fldcw
loope
pcmpeqb
incb
scas
mov
sbb
inc
lret
add
push
int
test
fisubrs
mov
popf
call
xchg
stos
repz
cmp
mov
push
xchg
stos
pop
lods
jae
es
popf
je
insb
and
ret
sub
cmp
clc
cmp
nop
stos
sub
jecxz
ret
sub
sub
js
inc
cmp
fucomi
inc
loope
dec
xor
inc
push
testb
iret
pop
clc
mov
and
or
and
leave
shrb
xor
in
and
dec
pop
pusha
mov
loop
test
test
push
andb
stc
dec
and
cld
bound
call
loopne
insl
out
stc
mov
loope
push
lret
pushf
lds
or
mov
sub
mov
movsb
fdivs
shr
mov
lods
pop
dec
fiaddl
lret
fisttpll
ror
testl
pushf
filds
mov
ja
ds
lret
adc
lcall
mov
frstor
cmpsb
daa
stos
pop
add
xchg
in
stos
insl
imul
imul
pushf
lret
testb
and
rolb
mov
ret
mov
sbb
sbb
fs
cli
cmpl
xchg
mov
mov
jecxz
into
xchg
jo
pop
fsubl
jns
addb
or
cld
adc
mov
fucomi
push
call
shr
or
testl
adc
rclb
mov
fldt
lret
stos
add
cmp
bound
cwtl
sub
into
rcrl
sarl
dec
pop
push
test
iret
int
ficoml
sbbl
sub
notl
rorl
sub
jnp
leave
adc
jmp
cmpb
inc
pop
inc
repz
pop
sbb
dec
mov
mov
outsb
cmp
fcmove
push
pushf
lods
outsb
ret
idivb
jle
xor
mulb
shlb
cmp
mov
xor
xchg
pop
mov
pop
cmc
mov
lcall
mov
cld
std
bound
jg
cmp
dec
xchg
pusha
xor
enter
push
or
push
xor
movsl
mov
hlt
cmpsl
in
aaa
in
test
sub
sbb
dec
mov
lods
adc
aad
loope
hlt
pushf
and
arpl
xor
out
into
stos
jo
adc
adc
je
jae
lret
loope
xchg
xor
xchg
mov
cmc
or
and
testb
test
mov
jne
lods
jl
inc
jg
lahf
jecxz
lahf
lcall
and
div
fstps
mov
push
pop
xor
add
cmp
sub
and
mov
sbb
popf
cmc
inc
mov
adc
mov
lret
sbb
idivb
dec
or
mov
mov
cmpsb
mov
sahf
iret
add
ret
gs
mov
gs
jne
xchg
dec
inc
push
push
cs
bound
adc
jmp
pushf
iret
jg
es
pusha
daa
sbb
arpl
adc
mov
shl
cld
mov
mov
xchg
jmp
xchg
jmp
xchg
adc
rcl
das
and
lret
dec
push
sbb
add
cwtl
xor
mov
pop
fsubrl
imul
xchg
mov
ret
jl
jl
push
push
ds
xchg
lahf
or
and
or
xchg
xchg
mov
sub
cli
or
push
jns
lods
scas
int3
movsl
jge
fldenv
xor
test
xchg
cmc
sti
lods
pop
cmp
iret
les
xlat
push
push
repz
lea
insl
mov
test
mov
adc
pop
lds
rcl
icebp
por
les
dec
dec
mov
push
cwtl
mov
mov
jge
mov
fstl
in
xlat
sbbl
addr16
sub
loopne
subl
in
cmp
orl
dec
int3
jmp
mov
ss
jl
rol
dec
jmp
mov
insb
xchg
push
lock
jne
pop
rcll
cld
repz
js
jmp
pop
lods
out
sbb
cmpsl
cli
mov
xchg
lock
stos
loopne
fildl
mov
mov
es
lods
out
arpl
mov
sti
bound
xor
movsl
mov
inc
cs
gs
sbb
movsl
dec
add
repz
in
xchg
psubq
gs
gs
adc
inc
rcrl
xor
push
push
in
ret
xchg
sbb
dec
push
mov
inc
pusha
cs
sbb
je
stos
xchg
popf
inc
loop
sbb
cmp
repnz
add
imul
aad
iret
je
in
popa
xchg
dec
lahf
std
ljmp
adc
cltd
mov
mov
pop
mov
jge
xchg
push
jp
jge
mov
adc
fildl
in
and
ss
repz
jecxz
mov
jns
jg
mov
jg
xchg
pop
adc
gs
cwtl
fisubrs
jge
jno
cld
test
push
jp
bswap
xor
inc
inc
and
push
mov
orl
gs
js
fisubrs
pop
pop
stos
push
jg
popf
das
jg
xchg
push
out
mov
jl
es
dec
cmp
mov
and
pop
push
xor
mov
js
call
adc
pop
cltd
test
shrb
mov
cld
push
lea
jge
nop
jle
das
jo
hlt
test
xchg
dec
xchg
mov
popa
addr16
cmc
and
push
repnz
movl
mov
mov
ret
ret
xor
jno
mov
repz
xor
sarl
or
ljmp
jle
sahf
jg
scas
repz
rcll
jge
test
mov
aaa
int3
into
xchg
add
mov
test
push
sub
gs
repnz
imul
aas
mov
and
inc
stos
and
repnz
jae
and
mov
pop
sub
ja
jmp
orl
ret
mov
call
adc
cmp
dec
sbb
jl
adc
adc
cwtl
adcl
push
lods
sub
rorl
xchg
inc
push
out
lcall
dec
cltd
dec
mov
cmp
jb
fidivrl
and
inc
cli
mov
movsb
pop
and
aas
mov
js
sub
fistpll
fisttpll
ja
ljmp
mov
idiv
hlt
adc
call
jbe
sti
sarb
aas
pop
pop
sbb
testl
dec
mov
outsb
ljmp
repnz
pop
arpl
jmp
enter
jle
inc
mov
xchg
jmp
loopne
push
sub
lods
fldl
lods
inc
loop
fwait
pop
cld
push
mov
into
mov
adc
jle
push
inc
push
cmpsb
xlat
in
cld
clc
and
lods
scas
push
popf
mov
cmp
lcall
test
ds
cmpl
movsl
daa
pop
pop
mov
dec
pop
jb
mov
into
loop
cli
cmpl
lds
adc
aad
stc
sti
repnz
sub
pop
mov
push
stc
mov
and
sbb
movb
gs
test
mov
mov
popa
push
orl
pop
fwait
or
mov
sbb
in
inc
into
sbbl
out
mov
loope
lret
xchg
adc
lds
dec
cmp
xchg
xor
adc
sub
js
mov
push
xchg
inc
pop
dec
add
out
mov
addr16
stos
xchg
ss
lcall
inc
stos
lods
push
fwait
bnd
dec
sbb
fidivs
out
repz
pop
mov
xchg
cmp
sarl
addr16
xchg
iret
mov
fadd
lcall
pop
adc
sbb
pop
rolb
insb
add
push
in
sbb
lahf
xchg
push
push
adc
movsb
leave
aad
dec
jle
jae
sub
mov
push
cmp
jno
aaa
int3
ret
das
sub
pop
sub
mov
popf
and
sbb
scas
inc
sbb
dec
sbb
and
loop
jge
stos
mov
je
adc
xlat
scas
stc
jl
dec
sbb
cmp
insb
sub
lods
clc
mov
fiadds
aas
fidivs
add
pop
xchg
adc
xchg
sub
sub
mov
jp
sahf
cmp
mov
mov
pushf
push
jle
lds
out
sbb
jg
rcr
movsl
in
cs
hlt
loop
xor
pop
cmp
adc
adc
outsb
adc
mov
fwait
es
or
pop
int
test
sbb
aas
hlt
call
jmp
mov
mov
loopne
sbb
cmpsl
pop
dec
pop
jge
lock
mov
push
clc
lock
call
incb
lcall
cltd
incb
test
outsl
imul
inc
shrl
jne
shlb
push
sbb
cmc
mov
negb
lahf
adc
popf
sahf
and
xchg
and
roll
fsubrl
add
inc
dec
int3
cmp
sarb
pop
push
out
mov
cwtl
fcom
aaa
or
cwtl
cld
push
fsubp
add
xchg
jp
cld
sub
inc
or
rcrb
aaa
and
sbb
repnz
mov
movsl
test
mov
xor
jae
aaa
mov
inc
or
sahf
dec
jno
test
push
cmc
jnp
or
lods
das
repz
push
imul
jmp
andl
pop
aam
adc
inc
lds
dec
cmp
cltd
jmp
sub
pop
enter
pop
cmp
and
adc
test
sti
pop
pushf
loopne
xchg
push
mov
jg
pop
sub
pusha
xor
aaa
outsb
or
mov
sahf
xchg
or
or
push
cs
and
xor
stc
push
hlt
mov
cld
lcall
ja
and
and
jns
ret
lahf
and
add
and
into
add
mov
lcall
ret
add
cmp
ljmp
sbb
sbb
imul
fstp
pop
or
xor
pop
fwait
inc
insb
pop
mov
mov
int
push
and
inc
mov
inc
push
imul
wbinvd
inc
sub
ja
cli
mov
inc
and
cmpsl
mov
sbb
add
xchg
cmpsb
push
flds
jle
das
sbb
push
mov
mov
fdivrl
sbb
adc
jg
lahf
arpl
ret
in
mov
mov
push
test
clc
mov
aad
xchg
outsl
cmp
popl
lds
sub
cmpsl
stos
push
inc
pop
nop
das
mov
js
cmpsb
pusha
cmc
push
aad
fucomip
jp
lret
loop
daa
lods
jbe
push
loop
lcall
loopne
sub
push
in
push
clc
stos
push
xor
fdivl
sbb
push
pop
cmp
fs
jp
mov
rcll
mov
mov
in
lret
push
fs
fdivrl
xchg
fs
xor
jmp
adc
loope
enter
mov
sub
inc
das
pop
mov
mov
add
ljmp
mov
in
and
bound
push
int
rcl
adc
fdivrl
pop
cld
cmpsb
cmpsl
or
ret
and
pop
inc
jg
push
sti
mov
mov
push
cmc
jno
mov
decl
sbb
loopne
pop
xchg
cmp
call
add
jne
or
add
and
xchg
pusha
sbb
test
iret
cltd
ret
and
jbe
or
shl
xchg
outsb
pushf
lds
add
movsl
mov
clc
dec
jno
push
clc
in
dec
sbb
jne
lea
lods
ficoms
push
xor
andb
fmuls
rorb
xchg
out
jge
cld
and
pop
fs
xchg
dec
popf
psrad
mov
inc
mov
xchg
das
test
sar
stos
leave
cmp
outsl
aam
sti
lcall
jbe
aas
pop
stc
lret
outsl
inc
cmp
xor
scas
xchg
loope
fs
inc
insl
sub
ljmp
nop
mov
push
out
outsb
mov
jl
push
inc
xor
pop
rcl
in
mov
pop
in
sar
mov
out
test
and
lret
out
sub
push
xchg
cmp
jb
pop
mov
and
out
ficomps
test
adc
fwait
scas
std
stos
xchg
xchg
je
pop
pop
in
mov
push
jns
fs
add
mov
pop
pop
xchg
dec
lock
pop
loope
ret
xorb
mov
lock
repz
dec
sarl
imull
mov
fldt
mov
rclb
cmp
mov
addr16
hlt
cmpsb
dec
and
dec
jp
mov
push
rcl
sbb
testl
bswap
cmp
cmpb
jecxz
cmp
mov
aad
sbb
xchg
jb
rol
ljmp
add
daa
scas
jb
xchg
jne
xor
loop
out
scas
dec
loope
iret
idiv
fidivs
stc
sbb
dec
js
je
push
xlat
stos
jnp
clc
cs
mov
mov
mov
rol
cmp
inc
cpuid
xor
nop
sti
mov
lsl
aaa
loop
std
mov
stos
mov
mov
gs
mov
mov
mov
push
mov
mov
jg
in
lret
cli
bound
sbb
cmc
xchg
shl
lods
mov
js
xor
jp
mov
aad
and
jmp
mov
cld
cmp
mov
andl
mov
fstps
ficoms
push
push
inc
mov
inc
xchg
lret
rcll
hlt
mov
xchg
cmpsb
pop
or
fisubl
jns
lods
push
and
test
cmpsl
xor
aaa
mov
jp
hlt
inc
stos
int3
ret
addps
shll
pop
jle
xchg
mov
les
psubusw
dec
push
jecxz
pop
scas
push
cmpsl
pop
aas
imul
hlt
add
out
push
gs
call
jp
in
aaa
or
jne
lock
rorb
ret
mov
inc
jp
cmpsb
jb
push
pushf
pop
ja
das
pop
xor
and
pop
mov
movsb
and
es
cmpsl
scas
jge
pop
dec
rolb
or
stos
jb
mov
test
stos
push
es
or
adc
sub
cltd
negb
push
dec
inc
xor
sar
mov
adc
xor
mov
sub
add
dec
mov
not
orb
or
push
mov
ss
call
ljmp
fldl
ret
add
test
into
mov
ja
mov
mov
push
not
cmpsb
push
xor
push
sub
scas
cmp
mov
bnd
int3
mov
shll
inc
std
fsts
jb
pop
adcb
icebp
lds
rcl
iret
ficoms
call
inc
sub
cmpsl
jge
jnp
ljmp
mov
or
jmp
sub
sub
arpl
cmc
lds
lcall
mov
repz
pop
adc
jp
sub
cs
adc
pop
xchg
mov
push
imul
repnz
jge
mov
inc
lods
outsl
out
sub
pop
push
dec
mov
jae
mov
mov
pop
rclb
aaa
mov
pop
sub
pop
mov
xchg
fiaddl
seta
cmp
mov
or
in
pop
ja
jae
shr
push
out
mov
shr
xchg
jns
add
scas
into
lcall
movsb
in
sti
push
cmc
xchg
jbe
test
adc
les
mov
pop
inc
outsl
mov
ljmp
int
lret
push
push
cmp
mov
fldcw
stos
cld
cmp
push
xchg
shlb
jmp
in
insl
inc
insl
aaa
gs
dec
jo
bound
jl
addr16
inc
jb
loope
imul
std
mov
xchg
mov
mov
lods
mov
or
xor
or
pop
sbb
and
loopne
sti
dec
and
fildll
mov
in
mov
pop
jmp
inc
pop
int3
test
hlt
popa
mov
popa
loop
mov
add
inc
push
shrd
sub
insl
pushf
jne
inc
sub
jo
in
xor
imul
repz
in
cwtl
bswap
mov
sub
dec
sbb
add
and
outsb
dec
adc
inc
xchg
pop
pop
jns
or
dec
mov
iret
cltd
ds
mov
mov
test
stos
mov
stos
pop
roll
ja
cmp
insb
fwait
push
popf
dec
push
loopne
sub
gs
push
aaa
pusha
xchg
inc
mov
test
adc
xchg
mov
test
ljmp
shll
pop
stos
mov
shl
adc
addl
mov
stos
je
stos
repz
movsl
fistpl
xorb
jle
adc
ret
adc
int3
or
int3
ljmp
ret
jns
scas
jns
lds
lock
fisubrs
iret
stos
sar
mov
stos
cmpsb
rclb
xor
cli
xchg
imul
loopne
inc
clc
push
xor
lret
mov
les
and
fnstsw
in
es
pusha
xchg
fwait
mov
mov
or
ret
nop
xor
ds
dec
mov
inc
and
cmpsl
cs
aad
jecxz
xchg
cmp
int3
pop
dec
or
std
jo
push
es
lahf
int3
outsl
jp
test
fsubl
or
xchg
lret
dec
maskmovq
testl
pop
or
jg
roll
sub
loope
daa
dec
mov
test
stos
mov
es
adc
pop
sbb
xor
lods
ds
mov
into
imul
mov
cmp
sub
sub
lods
push
mov
jb
jp
jb
mov
mov
jecxz
push
dec
jnp
arpl
icebp
xchg
jg
pusha
push
xor
adc
push
add
notl
sbb
mov
fbld
lods
sub
sub
fadd
clc
push
int3
test
imul
ret
inc
sti
adc
xlat
push
dec
adc
mov
out
add
pop
push
jmp
lret
or
call
test
fucom
hlt
xchg
shl
scas
mov
lahf
hlt
inc
lret
jno
and
push
or
xchg
jecxz
adc
pop
cmp
push
pop
ljmp
xchg
inc
stos
sarl
cltd
es
dec
xchg
jo
or
and
addl
pop
sbb
add
xor
inc
out
fdivrl
fcompl
aad
gs
fdivrs
mov
push
popf
subb
jno
jo
out
lock
fisubrl
mov
sbb
aam
popf
pop
or
pop
clc
rep
cmpsb
cmpsl
lahf
ja
shrl
adc
loope
mov
pop
div
dec
stc
movsl
adc
adc
dec
sti
jecxz
mov
pop
mov
popa
jbe
ljmp
dec
jp
lods
push
sub
loop
hlt
jnp
out
and
jo
or
sarl
idiv
or
loope
sbb
push
or
cli
sbbb
or
hlt
aam
rcl
push
lahf
cmp
in
insl
push
imul
or
mov
dec
leave
notb
mov
dec
push
notb
pop
pop
jns
cwtl
fdivrl
sbb
sarb
and
mov
push
into
and
popa
loope
loop
popa
imul
out
mov
pop
jmp
test
clc
sar
xorl
cmpsl
fsubrs
jae
ja
inc
aad
push
inc
iret
neg
insb
mov
dec
pusha
lcall
push
lret
add
aas
hlt
imul
xor
sub
fs
fnstenv
jmp
in
sub
es
fsubrl
sub
jnp
insb
mov
push
mov
and
or
imul
idiv
adc
mov
in
popf
cltd
scas
out
aas
cmpsb
imul
pop
cmpsl
pushf
push
ret
das
loope
push
addl
jnp
adc
int
sahf
fsubrs
dec
push
cli
mov
push
sbb
in
rcr
push
xchg
cmp
popf
cmc
test
hlt
aaa
das
test
adc
pop
inc
mov
imul
filds
loope
xor
mov
dec
pop
lahf
out
sbb
adc
leave
out
push
movsl
repnz
mov
jae
in
mov
lock
inc
gs
out
fisubrs
xchg
arpl
xchg
mov
sub
imul
sub
dec
aaa
loop
ljmp
pop
or
pop
sbb
lds
insb
test
push
imul
sbb
test
mov
cmpsb
outsl
jns
add
sarb
or
sub
xchg
sbb
ret
popf
subb
dec
in
pop
or
addl
pop
call
pop
and
dec
dec
nop
jnp
push
mov
push
bound
mov
dec
cmp
movsl
daa
out
ret
sahf
add
or
and
movsb
loopne
mov
jmp
andb
mov
push
or
adc
cs
sub
or
aaa
xorl
mov
sbb
add
int3
cmp
mov
pop
lret
and
loopne
fcomps
dec
xchg
gs
pusha
or
mov
lret
adc
jg
imul
ret
adc
leave
lock
lcall
mov
and
xlat
pop
or
mov
pushf
jb
shlb
in
add
or
add
add
repnz
es
stos
push
adc
insb
inc
jg
data16
mov
incl
loop
sahf
sti
pop
ret
clc
lea
aad
sbbl
pushl
pop
dec
repz
adc
jecxz
pushf
push
sub
xchg
mov
cmp
push
jecxz
cmp
lret
mov
mov
lods
daa
cmpsb
data16
in
xor
rorl
imul
daa
sti
lea
js
in
mov
aaa
xchg
out
ss
cmpsl
pop
mov
push
inc
cmp
enter
and
add
or
in
mov
cld
loope
daa
xor
sub
push
mov
ficomps
sub
or
jne
jae
loopne
dec
xor
inc
xor
inc
push
inc
popa
jae
push
in
add
dec
pop
movsb
stos
lahf
or
adc
mov
dec
pop
xor
pop
loop
test
inc
push
arpl
out
mov
xor
cltd
clc
cld
movsb
je
sub
repnz
inc
pop
in
mov
fwait
dec
subl
sbb
into
lock
xor
pop
je
clc
jge
insl
lret
mov
outsl
dec
add
stc
stc
cli
dec
inc
daa
fstpl
pop
push
lds
jg
adc
sub
and
adc
nop
in
inc
and
dec
in
dec
insb
cwtl
in
rcr
push
pop
mov
and
jno
pop
pop
push
or
xchg
xchg
add
jae
push
xchg
pand
push
mov
les
cwtl
rcll
add
loop
mov
mov
push
rcrb
pop
out
pusha
fcompl
sbb
orb
cmpsl
jmp
mov
cmp
pop
mov
pop
lahf
dec
jmp
int3
push
cs
daa
in
jae
lock
movsl
lds
mov
dec
loopne
imul
std
mov
test
mov
cs
in
cwtl
les
out
inc
jbe
cmp
ret
das
or
test
sbb
xchg
jne
das
push
clc
mov
int
rorl
fsubr
jmp
lods
call
imul
pushf
cwtl
mov
lcall
sbb
mov
jp
insb
push
xchg
mov
nop
clc
cs
lret
popa
shll
mov
and
adc
jge
in
loope
dec
jecxz
mov
arpl
lcall
outsb
fadds
lods
ljmp
pop
sahf
ss
addr16
cwtl
test
popa
decb
cmp
testb
movsl
dec
xchg
sbb
pop
fwait
lods
into
dec
push
pop
dec
arpl
fcoms
cmp
adc
adc
jno,pn
fmuls
and
dec
call
aam
sarl
mov
pop
adc
or
loopne
std
loop
add
fisubl
add
inc
jne
mov
hlt
ljmp
cmp
int
adc
loopne
aam
aas
mov
or
cmc
pop
addl
mov
out
xor
in
lret
push
pop
repnz
sub
lea
xchg
and
je
or
dec
aas
fadds
jecxz
mov
mov
sbb
nop
mov
mov
test
addb
ds
imul
adc
push
lret
xchg
cltd
cmc
stos
repnz
and
sbb
clc
adc
aaa
mov
lock
or
movsl
adc
aas
pop
gs
fidivrl
add
stos
sbb
clc
in
jnp
ss
movsb
aad
loop
xor
xlat
inc
out
enter
push
cmpl
ja
xchg
notb
adc
mov
shrb
xorl
icebp
mov
adcl
cmovnp
insb
adc
fcoml
insl
push
jg
out
or
cmp
aad
mov
cmpsb
popf
pop
aas
rorl
mov
dec
inc
inc
mov
and
xorl
mov
jns
adc
fcompl
js
xor
pop
mov
loopne
lea
push
push
fmuls
cmpsl
xchg
out
fs
mov
mov
int
sub
xchg
lods
int
lock
aam
cmpb
test
sbbl
cmp
cwtl
inc
iret
in
mov
ret
ror
daa
sub
test
inc
inc
and
les
add
xchg
or
test
ror
xchg
add
dec
mov
pop
bound
aas
xchg
cmpl
mov
jo
out
cmp
addr16
pop
mov
mov
jecxz
daa
and
out
pop
cs
mov
jne
test
jns
aaa
and
pop
or
xlat
inc
and
inc
cltd
mov
shl
mov
mov
jle
push
sarb
xor
mov
stc
out
pop
inc
or
xchg
sbb
daa
cmp
in
scas
sbb
notl
mov
insb
push
daa
ret
popf
fs
mov
pop
popa
outsb
jmp
fs
adc
outsb
sub
shr
dec
dec
xchg
mov
dec
jnp
sbb
aas
push
cmp
gs
jp
sbb
out
cli
stc
jl
adc
sbb
dec
sub
fdivs
ret
dec
xchg
mov
xorb
out
fidivl
lret
mov
popa
inc
ja
insl
or
frstpm(287
or
sar
sbb
jmp
ret
xchg
sub
push
data16
mov
pop
dec
cmp
jno,pt
js
test
jmp
in
fisubrl
cmp
es
movsb
and
push
mov
cs
rcrl
cmp
add
dec
mov
xor
jmp
jmp
xor
popa
ljmp
aad
adc
cmp
stos
jns
lret
jns
je
hlt
stc
and
scas
bound
push
gs
mov
pop
ss
aaa
fisubrl
inc
scas
popf
mov
add
out
int3
rep
dec
xlat
xlat
mov
dec
scas
cwtl
lods
cld
cli
inc
jnp
ret
sbb
jb
jae
sub
jnp
in
clc
test
mov
push
xor
outsl
addr16
fstl
imulb
loop
jl
sub
sub
mov
mov
ret
dec
sub
data16
and
iret
cmp
push
add
stos
out
int3
sbb
add
push
inc
sbb
cmp
mov
jle
std
xchg
sbb
sub
into
out
shrl
xchg
xlat
std
dec
jp
sarl
mov
fimuls
adc
stos
push
dec
sub
push
sbb
push
test
bound
inc
lcall
inc
insl
mov
icebp
and
cmc
mov
adc
mov
dec
lea
cli
cs
stos
and
sbb
mov
pop
sahf
iret
stos
movsb
out
mov
push
in
loope
mov
repnz
and
sbb
pop
fnstsw
add
pushf
mov
mov
addr16
mov
cmp
xchg
cmpsb
mov
adc
xchg
mov
pop
or
xchg
jbe
loop
filds
push
mov
adc
out
sub
mov
jnp
sbb
ja
cmc
pushaw
pop
xchg
jge
loopne
pop
shlb
xor
xor
and
in
lods
dec
or
cwtl
aam
mov
inc
mov
cmp
inc
add
loop
fisttpl
data16
push
mov
imul
cltd
sbb
push
test
pop
fucomip
sbb
pushf
aaa
cwtl
shll
test
dec
adc
stos
push
mov
mov
mov
ficomps
dec
ss
push
clc
lds
jg
push
xor
xor
sub
lods
sbb
je
xor
mov
stc
mov
packsswb
notb
cmp
daa
pop
lods
roll
sti
and
jae
addr16
jne
ja
pusha
xchg
neg
enter
mov
and
sarb
arpl
xorb
es
xchg
xchg
or
movsb
mov
call
or
dec
test
in
outsb
addl
xchg
lret
and
sbb
jbe
adc
fistl
inc
mov
lahf
push
ss
cmp
out
js
std
pop
test
dec
dec
lods
mov
jno
fs
stos
popf
dec
xlat
push
pop
insl
jnp
mov
mov
test
inc
pop
dec
outsb
push
mov
inc
inc
pop
inc
cmp
jbe
leave
sbb
fidivrs
adc
jg
imul
cmp
dec
idivb
movsb
xor
fldenv
pop
xlat
cmc
xchg
iret
xchg
mov
pop
jge
sub
fs
pop
sti
filds
and
pop
xchg
sub
mov
push
js
mov
popf
jg
mov
test
fs
imul
mov
push
mov
enter
xor
insb
and
pop
gs
jecxz
dec
test
push
ja
jmp
xlat
mov
jecxz
mov
dec
orb
imul
je
cmp
xchg
sahf
mov
mov
pop
insb
pop
loope
lret
push
outsl
mov
inc
into
mov
add
sahf
jecxz
jo
and
loop
push
fwait
push
cmpsb
aam
scas
cltd
and
cltd
inc
fcmovu
push
pop
out
pop
mov
dec
push
mov
pop
push
ret
push
pusha
imul
push
sti
jns
and
cmc
mov
jbe
ja
mov
add
sahf
mov
std
jns
cltd
enter
jb
dec
in
insb
add
leave
inc
or
pop
mov
sub
mov
dec
dec
jge
xor
push
js
mov
mov
dec
xor
push
cld
dec
mov
nop
fsubr
lahf
fstps
cmpsl
test
cli
out
jbe
sub
dec
lods
in
mov
dec
lcall
clc
cs
insb
shll
mov
in
xor
fdivr
fnstcw
adc
cmp
mov
cmp
add
inc
jge
enter
ljmp
and
sub
into
rcrl
orl
or
lahf
inc
mov
dec
adc
addb
push
pop
addr16
in
and
sti
icebp
loopne
push
sbb
jnp
and
sbb
aas
jne
insl
push
cmp
jnp
lcall
repnz
or
movsl
data16
scas
hlt
xchg
sbb
in
fisubrl
add
pop
pop
lret
scas
mov
push
insl
push
sbb
jo
imul
scas
sbb
lcall
push
adc
es
out
shlb
jp
mov
scas
mov
dec
pusha
pop
les
call
dec
mov
adcb
cmp
push
jmp
xchg
dec
inc
sub
jno
and
icebp
pop
rclb
jbe
bound
dec
adc
adc
or
cld
jmp
bound
dec
push
lahf
sbb
lret
mov
dec
sbb
dec
ret
pop
mov
xor
pop
xor
sub
inc
mov
jnp
inc
lret
push
cmpsb
push
popf
push
shll
dec
imul
cmp
lock
inc
out
imul
inc
xchg
dec
inc
sbb
das
pop
es
imul
mov
pop
test
pop
out
dec
insb
rorl
aam
popa
orl
push
dec
lret
shr
mov
xor
mov
pop
jo
push
xorb
nop
and
pop
inc
dec
inc
add
inc
outsl
fldl
fld
or
mov
lods
mov
inc
sub
push
or
cs
mov
jne
xor
sarl
and
in
inc
orb
adc
jp
xchg
fucom
les
movsl
mov
sub
inc
sbb
xchg
and
cmp
mov
icebp
lcall
pop
lods
sub
sub
fisubrl
mov
sar
pop
shl
cmp
mov
sub
mov
pushf
xor
aaa
adc
stos
imul
mulb
add
dec
mov
lahf
pop
adc
inc
dec
dec
or
pop
pop
or
je
neg
jmp
out
mov
mov
loopne
pop
mov
inc
pop
in
je
xor
pop
sarb
inc
sbb
addr16
push
loopne
inc
sub
sbb
loop
cli
cmpsb
pusha
inc
cmp
rclb
jg
mov
dec
ret
xchg
sub
sub
xchg
xchg
das
adc
mov
fiadds
xchg
fsubrp
cwtl
icebp
ret
lea
jno
out
inc
or
sar
mov
movl
scas
mov
inc
mov
add
push
cmp
stos
imul
data16
lret
dec
fucomp
incb
adc
aad
mov
or
push
inc
or
lock
lret
push
fisttpl
sti
cmp
sbb
xor
pop
mov
push
cmp
mov
les
insb
fs
push
stos
divb
ss
loope
addr16
mov
mov
iret
nop
imul
idiv
mov
imul
cld
or
lcall
push
mov
pop
ss
xchg
fwait
inc
enter
loop
ret
jp
inc
add
sbb
dec
inc
lahf
mov
xchg
rcl
cwtl
iret
sub
fmull
mov
mov
cld
mov
sub
adc
inc
jb
sbb
mov
aas
add
fistpl
lahf
rol
pop
push
xlat
psubusb
dec
jecxz
scas
ret
cmp
push
ficoms
mov
inc
xchg
sbb
or
mov
stc
int3
cltd
xchg
jne
aad
das
test
dec
mov
out
mov
gs
test
xlat
sub
mov
imul
in
icebp
repz
jbe
dec
pop
clc
mov
aaa
jge
jno
add
adc
call
inc
mov
aaa
pop
jecxz
fwait
imul
or
pop
gs
add
pusha
mov
lods
jp
test
sbb
push
stos
dec
and
mov
mov
add
add
push
push
push
push
mov
sub
mov
push
push
push
push
push
mov
mov
call
pop
mov
add
push
push
push
mov
mov
cld
rep
mov
add
call
pop
mov
push
push
push
mov
mov
call
pop
pop
pop
sub
movb
inc
mov
add
movb
or
je
mov
call
cld
lods
cmp
je
push
mov
add
add
add
lods
cmp
jae
and
jmp
add
or
jp
lods
and
jmp
lods
dec
and
cmp
jne
pop
pop
pop
pop
pop
ret
call
add
jmp
call
add
jmp
call
sahf
repz
add
xor
dec
lcall
add
pop
sub
pop
jbe
cmp
or
and
shlb
inc
sbb
xor
dec
sbb
inc
push
adc
or
or
pop
or
pop
xor
push
adc
xor
adc
and
push
sub
adc
adc
sub
and
and
and
and
js
add
adc
dec
pop
add
outsl
push
adc
pop
cmp
popa
pop
xor
pop
add
add
sub
and
and
adc
push
cvtdq2ps
add
or
sub
pop
add
adc
xchg
cwtl
mov
data16
or
or
sbb
xor
cmp
sub
mov
sbb
pop
orb
or
jmp
push
sub
sbb
sbb
xor
add
inc
add
add
or
ds
add
add
or
push
insb
jl
cmp
and
sub
push
pop
xor
add
pop
jbe
xor
pop
inc
push
or
js
sbb
imul
or
or
push
or
dec
or
add
push
xor
cmp
pop
or
add
or
lcall
