xor
add
add
add
add
add
mov
adc
add
add
add
add
add
add
add
adc
add
add
add
add
inc
mov
add
add
add
jbe
add
test
add
add
add
mov
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
add
add
mov
add
add
add
mov
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
mov
add
add
xchg
mov
add
add
add
add
test
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
dec
dec
dec
inc
push
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
dec
dec
dec
dec
cs
dec
dec
add
dec
push
inc
push
dec
cs
dec
dec
add
inc
push
dec
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
and
add
dec
outsl
popa
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
insb
jae
gs
popa
insb
jne
add
add
addr16
gs
popa
insb
jne
inc
js
add
add
jb
outsb
add
add
jne
gs
gs
outsb
je
add
push
push
inc
dec
outsl
arpl
add
push
push
js
arpl
gs
add
add
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
add
outsl
arpl
outsb
jo
je
add
push
push
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
imul
je
inc
insl
jo
dec
inc
add
add
je
outsl
fs
gs
imul
js
add
add
popa
jb
push
gs
imul
fsubrs
jecxz
pushf
pusha
call
pop
mov
sub
lea
mov
cmp
je
mov
lea
mov
cmp
je
movb
mov
sub
mov
add
lea
add
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
popa
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
add
adc
push
add
mov
add
dec
add
add
adc
add
add
add
lock
add
add
add
add
add
xor
add
add
add
push
add
and
add
add
add
add
and
mov
add
add
add
pop
add
and
clc
imul
add
or
xlat
push
xor
iret
popa
add
jb
scas
fsubp
mov
xchg
in
int
pushf
cs
stos
push
popf
cs
sti
fwait
nop
pushf
fldenv
pop
and
mov
and
inc
shl
fmull
add
pop
repnz
pop
mov
aam
loope
outsl
cs
xchg
sbb
bnd
clc
negl
mov
mov
jmp
sbb
mov
or
mov
xchg
cmp
lods
adc
insb
cmp
jne
jns
jl
lret
pop
xor
pop
sbb
fldenv
jle
cmp
mov
loopne
cmp
call
inc
je
test
out
jnp
fiaddl
push
fists
dec
mov
xchg
ljmp
mov
arpl
add
xchg
xor
dec
xchg
cltd
xchg
jg
out
push
cs
mov
sub
testb
movsl
mov
ret
lods
push
sub
push
out
or
add
and
js
inc
inc
into
jae
jnp
dec
jl
push
jns
or
jae
into
fdecstp
pushf
mov
cmp
or
cli
inc
mov
mov
das
lock
sbb
fwait
sbbl
xor
shll
mov
test
in
push
fsubl
std
sub
stc
dec
xchg
jl
or
jne
lea
sbb
sbb
aas
or
mov
lock
je
mov
and
lret
xchg
push
pop
ret
cmp
out
rcll
jae
adc
sub
xor
imul
ret
sub
dec
fsts
add
fstp
ret
mov
sub
mov
xchg
insb
inc
sub
inc
mov
into
cwtl
add
repz
inc
imul
or
dec
xchg
fldenv
loopne
daa
sbb
xor
dec
mov
ja
and
insl
mov
inc
imul
adc
mov
xor
xchg
mov
push
push
es
mov
pop
ljmp
fdivs
fmuls
sti
loope
pop
jecxz
cmpsl
mov
xchg
cli
sub
lea
cmpsb
daa
sbb
lcall
pop
lds
test
jle
loopne
cmpsl
sbb
sbb
adc
loope
or
sub
lock
dec
pop
nop
jae
xchg
mov
jmp
bswap
add
sub
movsb
dec
push
gs
lods
adc
fdiv
mov
dec
push
and
add
clc
mov
jmp
rol
in
cmp
jle
xchg
jecxz
mov
es
mov
mov
sub
and
cmpsl
xchg
or
xor
xchg
adc
or
push
test
jbe
pop
jecxz
pop
data16
cwtl
daa
enter
pop
dec
add
into
xchg
jle
and
and
jnp
rcrb
lahf
jg
or
xor
dec
std
or
push
repnz
xchg
ret
std
or
xor
and
sbb
mov
lods
in
adc
xorl
push
subl
lds
jmp
add
xchg
es
xor
call
imul
dec
xor
dec
adc
test
ljmp
loope
mov
loop
movhlps
pop
cmp
sbb
sub
popf
jae
cwtl
orb
pushf
dec
dec
xchg
add
xor
xor
push
iret
sub
inc
and
jp
ss
sub
mov
and
pop
in
jl
push
int
fmuls
inc
jge
xchg
daa
pop
inc
bound
xorb
mov
lret
add
jmp
sub
xchg
outsl
push
imul
sbb
sbb
pop
in
pop
adc
dec
jl
stc
pop
mov
jae
std
mov
pop
outsl
xchg
cmp
sub
jb
out
inc
mov
shlb
pop
jno
pop
and
popa
gs
jl
lret
data16
enter
ret
das
test
out
sarl
js
scas
push
xchg
fsubrl
xchg
push
pop
push
dec
pushf
cmp
repz
mov
test
fisubrs
pop
outsl
aad
xchg
add
xchg
cli
mov
ret
xor
pop
int
imul
and
fs
insb
or
cmp
mov
shrl
bound
xor
sbb
xor
roll
push
ja
mov
repnz
add
xorb
jae
ficoml
imul
iret
xor
jno
adc
maskmovq
add
mov
inc
enter
xlat
cmp
inc
dec
cwtl
rorl
push
pusha
movsb
dec
loop
fwait
and
push
ds
mov
jne
hlt
add
cli
jns
inc
jmp
or
add
xlat
in
out
or
out
aas
cmp
pop
push
in
in
lds
adc
sarb
inc
outsl
loop
xor
sub
invd
or
sbb
aaa
iret
jmp
mov
cmp
in
out
push
dec
sti
mov
jmp
mov
movsl
cmp
jb
pop
cmp
fstl
pusha
push
fldt
int
jne
cli
add
mov
push
inc
mov
ficomps
stos
movsl
out
mov
nop
pop
jecxz
cmp
and
popf
mov
xor
sar
rcrl
mov
xchg
test
pop
or
dec
cmp
fldt
lods
adc
mov
negl
jnp
xor
mov
movb
clts
movsl
aas
into
ja
enter
add
ret
mov
test
mov
test
inc
push
pop
lahf
movl
inc
ret
pushf
mov
adc
xor
fdivs
ffree
and
pop
pop
and
xor
fstpt
rcrb
popa
sti
iret
sub
sub
xor
pop
xchg
inc
adc
jo
push
hlt
addr16
and
xchg
dec
push
dec
hlt
lret
movsl
inc
xlat
push
outsb
stos
pop
xchg
loopne
jae
outsl
mov
fldenv
movsl
test
xor
in
dec
jae,pt
add
movb
ds
stos
mov
jne
xchg
pop
xchg
jg
cmpb
fcmovbe
push
cmp
daa
inc
sub
ficompl
popf
mov
push
rcll
xor
dec
dec
mov
fs
add
sahf
cli
pop
xchg
loope
lock
repz
std
imul
scas
rclb
mov
cltd
mov
mov
push
sbb
mov
mov
xchg
dec
adc
fnstenv
jns
insl
das
or
xchg
pop
sahf
js
mov
mov
xchg
xchg
xchg
arpl
iret
and
push
cmp
push
or
aad
inc
sar
ret
sahf
dec
out
add
add
xchg
adc
fdivrl
sub
push
xor
mov
mov
push
popf
xchg
roll
fldt
leave
aaa
lahf
pop
jnp
push
jecxz
cmp
out
dec
lock
jo
xchg
rcl
outsb
push
mov
adc
stos
add
out
dec
xor
cmp
or
insb
push
shlb
mov
fstps
test
loopne
mulb
jb
cmp
xor
sbb
mov
sbb
jo
cmpsb
mov
push
mov
loop
sar
push
jp
adc
or
jge
add
dec
inc
or
decb
sub
jnp
xor
push
mov
inc
pop
scas
mov
sub
gs
add
mov
mov
popf
fcomps
adc
fwait
xchg
mov
mov
adc
dec
cmp
mov
push
pop
pop
scas
pop
xchg
addr16
int
ss
sbb
rcll
hlt
lods
test
aaa
mov
arpl
add
sub
cmpsb
and
nop
and
shrb
mov
jb
mov
dec
cmp
lret
test
mov
jae
xchg
out
mov
push
push
mov
push
dec
les
sbb
test
lock
out
push
push
inc
mulb
popa
mov
xchg
jno
aas
push
cmpsb
popf
shl
or
push
ljmp
mov
sub
xchg
cmp
xchg
pop
mov
or
mov
xor
clc
sbb
add
stc
jo
push
outsb
mov
std
aam
shll
insl
movb
repnz
push
mov
sub
and
sub
jbe
dec
pop
pop
addb
jns
lret
mov
mov
xor
das
dec
ljmp
mov
jns
mov
addb
int3
sbb
jl
insb
mov
inc
rorl
xchg
adc
fs
xchg
bound
xchg
and
call
xchg
je
test
xcrypt-ofb
cmpsl
sub
shrb
sub
fsubr
lock
and
in
lods
mov
mov
add
lahf
jp
paddq
fwait
xor
inc
pop
data16
imul
int
mov
xor
lods
push
mov
lds
stc
and
mov
popa
test
movb
inc
mov
sbb
cmpsb
pop
rcl
adc
mov
stos
cwtl
sbb
int3
clc
add
loopne
mov
in
ljmp
dec
ficoml
nop
movups
fidivrs
mov
pusha
sbb
cmpsl
push
and
hlt
inc
add
pop
jle
and
add
sbb
sar
dec
sub
lret
in
repz
dec
fsts
add
fs
xchg
ret
fdivl
inc
hlt
ror
incl
popf
int3
dec
pop
dec
addr16
clc
out
jg
jbe
add
ret
pop
cmc
notb
adc
das
adc
daa
dec
lods
dec
mov
xchg
or
xchg
xchg
jne
pop
scas
pop
cmp
mov
mov
aad
mov
test
pop
cltd
xchg
push
stos
in
xchg
sti
insl
lock
push
and
mov
xchg
cld
jl
sbb
mov
jno
clc
insb
shll
and
dec
loopne
pop
mov
fistpll
mov
incl
ret
sti
pop
ror
in
ds
pop
jne
cmp
lds
jo
mov
push
adc
negb
movsl
fsts
nop
push
enter
ja
adc
out
scas
mov
out
std
addr16
pop
xchg
in
lahf
aaa
aas
cmp
fdivl
inc
std
mov
xchg
push
ljmp
mov
cltd
xorl
and
adc
sub
dec
leave
jnp
inc
insl
xchg
aaa
cld
pop
sahf
inc
mov
pop
add
iret
adc
lock
jg
mov
xor
ja
cwtl
add
or
sbb
jge
dec
imul
mov
movsb
pusha
mov
call
test
lret
rol
pop
out
xlat
jbe
aad
inc
cmc
stc
lret
xchg
cli
cwtl
icebp
aaa
cmc
repnz
lahf
and
inc
insb
out
roll
outsl
std
and
fwait
xor
es
jge
xor
inc
insb
cmp
movsl
out
scas
aas
or
cltd
iret
cmp
pop
push
mov
nop
outsl
test
lret
repnz
lock
iret
ficompl
shll
xor
jecxz
sub
aam
sbb
adc
pop
dec
aaa
ficomps
fistl
testb
mov
std
insl
fldcw
dec
push
loop
sub
jae
shl
xchg
adc
dec
add
sbb
inc
push
jge
imul
jle
jb
or
movsl
sub
cmc
sahf
ds
mov
inc
cli
pop
xchg
mov
mov
call
pop
or
lretw
inc
fdivrl
lods
jae
fwait
push
imul
int3
xchg
xchg
ror
pusha
add
fs
fildl
lds
cmpsb
xchg
les
push
pop
sub
aaa
xlat
cmp
mov
ret
outsl
lea
int3
push
outsb
jne
pop
push
inc
aaa
inc
pop
sbb
mov
in
das
lods
in
lds
xor
dec
sub
add
sub
jle
js
lcall
sub
es
ljmp
lcall
inc
mov
sub
lahf
call
js
fs
sbb
rol
or
mov
ret
sahf
mov
ret
and
scas
sub
mov
addr16
cs
jno
add
pop
das
cmp
cli
cmp
andb
or
in
push
lahf
fisttpll
and
test
fwait
ljmp
mov
mov
orl
in
pavgw
or
bound
data16
cmp
mov
mov
mov
jbe
sbb
pop
push
push
les
xchg
sub
xor
inc
jns
pop
mov
mov
ljmp
test
mov
scas
mov
gs
stos
inc
sbb
push
jae
pop
aas
mov
mov
clc
mov
scas
scas
fidivrs
sub
mov
push
cltd
hlt
jne
xchg
fdivl
sbb
xchg
xor
xchg
mov
and
inc
cmp
jg
ret
in
inc
pop
dec
mov
jns
fimull
cmp
lods
daa
dec
jmp
sbb
aad
addl
mov
fisttpll
fldcw
push
sbb
ficoml
xor
sbb
cmp
mov
mov
push
push
pop
int3
push
mov
pop
bswap
inc
std
arpl
pop
in
xor
jle
dec
or
rol
data16
and
stc
stos
adc
adc
inc
ljmp
mov
xchg
sub
mov
outsb
pop
addr16
sbb
lret
int3
inc
and
outsb
pop
inc
cltd
push
fbld
push
mov
fsubrs
mov
adc
jle
cmp
js
dec
outsb
out
clc
and
mov
stc
jg
cmpsb
ficomps
add
or
in
jle
dec
jge
shrl
sub
into
dec
fildll
add
jne
ja
aaa
mov
or
cmc
mov
xchg
xorl
clc
std
pop
fmuls
sub
pop
cs
scas
enter
mov
push
and
lods
jp
imul
cmp
jl
or
push
cmp
push
lea
add
nop
or
stos
sbb
and
mov
jbe
js
lock
inc
rcrl
pusha
lret
cmpsl
sbb
movsl
and
iret
fistps
pusha
cmp
add
push
aas
and
xor
inc
xchg
inc
fimuls
mov
imul
sbb
nop
js
jle
mov
mov
inc
nop
les
lcall
jl
aas
jne
stc
lret
inc
xlat
cmp
pop
cmp
jnp
mov
add
and
cmp
mov
enter
push
mov
test
hlt
pop
jecxz
pop
add
jb
sub
jl
mov
pop
aaa
jno
jmp
xchg
movsb
xchg
testb
mov
jb
sub
xchg
jne
add
mov
aaa
lods
movsl
test
adc
push
or
cld
xchg
or
xchg
int
cmc
lods
jnp
push
jo
xchg
inc
rolb
dec
push
xchg
js
cmp
adc
imul
dec
mov
push
imul
adc
xchg
mov
mov
lods
pop
jne
mov
das
cmp
cmp
in
mov
dec
jle
mov
repnz
out
das
imul
xchg
adc
adc
cmc
push
dec
mov
pop
fs
push
std
pop
mov
sub
inc
fs
outsb
xlat
sbb
jno
jle
ds
xor
es
adc
iret
dec
sti
sub
aam
daa
inc
jbe
dec
jecxz
xor
movsb
mulb
adc
cmp
or
cs
lea
cltd
jge
cmpsb
in
es
test
mov
mov
out
imul
adc
out
arpl
rcrl
jmp
adc
lcall
insb
ret
jns
movsl
imul
and
mov
jbe
lock
testl
lahf
out
imul
adc
xchg
ljmp
jge
fdivp
mov
das
fmuls
pop
fsubrs
fwait
dec
scas
dec
rcrl
adc
into
lods
loopne
xor
lods
and
dec
push
movsl
pop
into
clc
inc
pop
cwtl
xchg
jmp
cmp
je
and
xor
lds
fs
pop
xchg
int
cmp
dec
mov
aas
in
fdivrp
jmp
mov
or
pop
xchg
addl
lret
pop
dec
fisttps
pop
jne
lds
jg
aaa
xchg
sub
inc
pop
mov
sahf
js
sbbl
mov
test
imul
pop
mov
pop
ret
xchg
adc
into
xchg
cmc
adc
add
in
addl
es
lea
ficoms
or
lcall
leave
fisubrl
ja
inc
sbb
jb
push
mov
push
pop
test
sub
addb
idivl
xchg
in
jns
push
dec
cmpxchg
sbb
inc
jnp
mov
mov
fs
rcl
dec
jmp
sbb
into
addr16
jge
mov
mov
mov
das
sub
add
adc
push
mov
mov
cmp
lret
stos
mov
fcompl
inc
sbb
daa
nop
mov
sub
addr16
sbb
out
sub
in
lea
stc
into
insl
xor
fidivl
cs
inc
mov
in
inc
das
cs
lods
jle
loop
test
pop
cmp
add
pop
or
adc
andl
popf
mov
mov
popa
cmc
cmp
adc
ss
fmull
sub
in
jns
into
sbb
push
out
sbb
stos
mov
arpl
iret
repz
loopne
mov
xchg
ja
adc
sbb
jns
movsl
xor
pop
inc
xor
push
sbb
insb
movsb
push
mov
cmpb
dec
lret
jg
movb
stos
xchg
ljmp
add
mov
or
jnp,pt
out
mov
push
jp
daa
sarl
in
cs
dec
or
adc
xchg
mov
je
or
daa
imul
pop
shll
inc
pop
sub
rcr
scas
inc
movl
fstl
inc
rorl
mov
decl
cs
mov
mov
int3
mov
cwtl
jg
xor
mov
cmp
std
push
mov
lret
stos
or
dec
sub
mov
push
xor
mov
jl
mov
imul
xchg
push
fs
icebp
out
jecxz
jecxz
outsb
mov
hlt
dec
adc
sbb
add
mov
test
xchg
loopne
fidivl
sbb
ret
xchg
dec
lret
push
pop
popa
sub
mov
sti
test
inc
pop
cld
xchg
jne
mov
jnp
inc
push
aam
scas
loop
inc
repz
fldl
xchg
xchg
jbe
mov
sub
test
jecxz
pop
fadds
das
push
fcmovne
repnz
mov
ljmp
sbb
mov
dec
push
mov
movl
xchg
clc
movsl
jo
mov
in
xchg
test
xchg
mov
test
dec
jl
xchg
add
addr16
jns
push
jns
stc
xlat
xor
adc
xchg
fcompl
ds
mov
pop
add
mov
in
dec
lods
pop
les
jns
mov
hlt
imul
shll
in
push
out
cmp
shll
mov
ljmp
data16
ret
fwait
in
adc
adcl
pop
and
lods
push
dec
imul
xor
xchg
rcrb
add
mov
jl
sbbl
shll
add
adc
inc
adc
iret
push
mov
and
push
xchg
lea
add
sub
lods
xchg
imul
pop
or
out
cli
sub
imul
mov
scas
xor
stos
xor
ja
imul
sbb
roll
push
add
shl
xchg
stc
xchg
lock
je
stos
repnz
faddl
mov
loope
test
jl
mov
lret
cmp
and
fimuls
jle
cmp
lret
lret
pusha
cmpsb
adc
js
xor
in
ljmp
fdivs
jb
xor
fstpt
stos
mov
test
aad
push
stos
int3
push
pop
push
movsl
imul
bnd
and
add
stos
push
rolb
aas
mov
dec
xchg
fwait
out
pop
pop
and
cwtl
divb
jno
sbb
xor
and
repnz
cwtl
decl
pop
sub
lods
dec
std
les
mov
pop
dec
xchg
out
or
movsb
je
movsl
push
mov
mov
xchg
sbb
ror
xchg
jae
jmp
into
inc
cmp
mov
out
jae
sbb
dec
stos
cmp
push
ljmp
mov
das
in
icebp
leave
jmp
rolb
fwait
or
inc
xor
outsl
xchg
mov
daa
sbb
xor
add
fidivs
sbbl
or
out
xchg
stc
aaa
mov
stc
cmovs
push
inc
pop
jne
cmp
loop
dec
out
insl
mov
xchg
and
xchg
push
push
add
loopne
popa
mov
xor
jno
or
ss
dec
popf
pop
adc
movsb
loopne
int
mov
sbb
mov
jb
outsb
popa
icebp
out
cmp
mov
jmp
aas
xchg
loopne
popa
test
fwait
or
mov
into
mov
push
dec
xor
aam
mov
hlt
xchg
mov
pop
push
xor
mov
inc
setge
fwait
movsl
call
inc
inc
and
inc
stos
test
dec
fwait
out
mov
mov
insb
test
bnd
arpl
cmpsl
jbe
aaa
mov
std
pop
sub
inc
dec
movsb
cmp
fwait
sub
imul
popf
lock
inc
les
enter
in
inc
stos
push
mov
inc
loop
push
andb
xchg
add
cmpsl
xchg
xchg
rcrb
ret
sub
lock
lret
jno
ret
popf
push
cmp
cmpsb
pop
adc
fwait
lcall
jecxz
test
mov
fildll
inc
xor
inc
inc
xchg
mov
shrl
jp
in
repnz
pop
pop
rol
js
insb
fwait
lock
leave
aas
ret
stos
call
mov
or
mov
cmp
mov
clc
stos
bound
aas
dec
sub
xchg
aad
pop
fwait
mov
in
dec
jbe
mov
movsl
cmpsb
test
clc
lods
lret
push
mov
outsl
fnstsw
adc
out
mov
insb
imul
movsb
adc
push
cs
mov
xor
mov
cmp
in
cmp
in
push
mov
pop
fistps
das
leave
in
test
bound
movsb
ret
mov
in
daa
mov
cmp
jmp
rol
lods
jmp
push
or
adc
sub
in
sub
cwtl
std
jle
test
rcr
add
loope
not
repz
and
sub
in
fst
mov
jb
mov
insl
aam
pop
mov
pop
cltd
popf
imul
mov
cltd
fsubrl
fwait
test
add
das
inc
pushf
pop
insb
out
roll
ja
mov
into
mov
shll
std
shlb
stc
or
dec
je
loop
xchg
inc
lcall
and
jno
lods
dec
shrl
and
sbb
lahf
dec
dec
mov
cmpsb
mov
sub
dec
mov
mov
sbb
or
filds
dec
xorw
jmp
adc
adc
xchg
dec
cmpb
test
ret
popf
out
es
add
sub
pushf
mov
aad
lret
pusha
jl
jecxz
dec
das
outsl
and
xchg
inc
test
xor
push
ficompl
test
push
dec
out
sub
movsl
inc
push
subl
lret
lret
push
gs
jae
test
adc
daa
xor
sub
xor
lds
ss
repz
shl
lods
dec
and
sahf
rorl
sub
bound
aam
dec
sbb
rcrb
push
xchg
add
jne
cmp
aas
pop
fdivrl
stos
and
fs
and
int3
test
ret
pop
adc
push
insl
cmp
movsb
out
je
aad
mov
fwait
das
imul
cmp
in
adc
and
mov
mov
cmp
dec
inc
and
lds
inc
cltd
lds
into
and
sbb
popa
ss
add
jecxz
sbb
mov
arpl
dec
cwtl
pop
lock
xor
add
sub
jg
push
sbb
rcll
xchg
or
mov
int
sbb
stos
sbb
pop
hlt
sahf
sbb
gs
sub
das
enter
add
dec
lret
roll
mov
ret
test
dec
xor
and
pop
add
and
inc
orl
push
aad
cli
ret
jnp
mov
mov
outsb
xor
sub
shl
int3
out
ds
in
scas
push
cmp
mov
paddd
leave
push
sub
xlat
sub
pushf
sub
fildl
lods
insl
xor
iret
mov
and
pop
mov
xchg
dec
xchg
mov
add
xor
sbb
cmp
jns
imul
inc
insb
push
jp
mov
jae
xor
push
sbb
mov
mov
mov
cmpsb
out
sbbb
mov
mov
and
and
sbb
notb
aaa
adc
call
cmp
les
xchg
test
test
ja
imul
mov
inc
inc
or
add
call
sar
xor
inc
xchg
enter
pop
mov
sub
jecxz
mov
push
decb
inc
cmp
adc
or
subl
fdivrs
cmp
xchg
mov
jecxz
inc
scas
addl
test
int
sbb
mov
test
hlt
cli
mov
inc
push
popl
hlt
test
stos
out
push
mov
sub
repnz
mov
fcomps
lret
push
xchg
mov
sarb
into
mov
xchg
adc
or
xor
out
nop
mov
sti
mov
pusha
into
pop
div
rcrl
nop
cli
mov
shl
lds
dec
add
fs
cltd
sub
xchg
pusha
out
push
sbb
push
jmp
scas
push
leave
jae
cmp
loop
xchg
sti
or
mov
scas
push
outsl
jnp
sbb
xor
xchg
in
mov
out
divl
int
lahf
adc
idivl
add
and
sbb
xchg
loope
cs
mov
and
fcomps
push
ljmp
lods
sahf
mov
mov
inc
cmpsl
cmc
imul
push
and
aas
xor
shlb
push
pop
xchg
mov
jo
push
fcmovb
xchg
daa
neg
push
out
pop
arpl
xlat
mov
pop
jl
data16
and
cs
jnp
ret
cmp
addr16
pop
add
ret
dec
inc
sbbb
ss
sub
or
xchg
out
addl
xor
test
pop
lds
mov
ljmp
xchg
mov
icebp
push
roll
ss
sub
or
addr16
xor
dec
psrad
sti
insb
mov
js
into
iret
push
scas
sbb
popa
rcrb
push
push
mov
mov
inc
lods
les
mov
bnd
sbb
xchg
dec
mov
lret
lods
inc
pop
pushf
push
sbb
sahf
jnp
adc
stos
iret
add
clc
fs
mov
sbb
es
dec
mulb
xchg
lods
cmc
mov
mov
jb
cmp
mov
mov
jmp
and
ret
inc
inc
xor
je
pop
aad
out
inc
js
test
dec
mov
insl
cmpsl
addr16
push
cmp
push
scas
mov
dec
and
push
pop
mov
cmpsl
dec
cli
xchg
addb
xchg
mov
pusha
jae
daa
cmc
jle
test
jne
push
ljmp
fmull
jg
mov
int3
sahf
int3
repnz
xchg
sbbb
aam
mov
loopne
xor
sarl
icebp
leave
dec
push
mov
movsl
pop
jl
arpl
jle
cld
xchg
cmpsb
jbe
gs
jo
or
int3
jecxz
pusha
pop
xlat
fs
lcall
insl
inc
or
xor
std
aad
enter
mov
cmc
mov
fists
lea
mov
enter
fadds
stc
aad
mov
lds
cmpsb
mov
and
push
xchg
jns
pushf
xor
xor
sbb
dec
test
les
cmpsb
xor
rcrb
sahf
adc
pop
lea
fiaddl
jne
inc
aaa
pop
mov
mov
loopne
dec
popf
jp
jb
dec
movsb
addr16
dec
push
or
inc
and
cmp
notl
ret
mov
fnstenv
popf
xchg
xor
mov
pop
stc
and
push
pushl
add
ret
adc
xchg
insb
jno
cmp
test
outsl
ret
outsl
push
jae
inc
aas
push
mov
add
cmp
inc
inc
mov
fwait
cmc
arpl
dec
test
stc
outsb
es
out
xor
das
and
test
or
jb
pop
mov
out
cwtl
aam
shrl
pop
mov
jmp
out
jecxz
mov
ficoms
jp
pop
push
mov
orb
repz
test
jp
insl
push
mov
cli
jo
sti
cmp
loope
leave
cltd
jg
or
cmpsb
jecxz
testb
sub
out
adc
dec
icebp
daa
out
mov
or
jae
imull
cmp
xchg
gs
push
jne
addr16
and
cwtl
or
jg
and
dec
das
jne
dec
xchg
inc
jne
daa
jmp
popa
mov
dec
push
fidivs
mov
mov
loopne
stos
ss
xchg
aam
repz
cld
lcall
xor
jns
and
cmpsl
insl
int
jbe,pt
out
repnz
mov
fnstcw
pop
and
nop
cmpsl
cs
aam
test
stc
test
mov
and
sbb
xor
shll
loope
adc
fs
pop
movsb
iret
xchg
loop
jecxz
jmp
popa
gs
xchg
cmp
jecxz
push
pop
jecxz
mov
jge
add
arpl
mov
jbe
push
cmp
mov
jns
sarb
scas
ret
cmp
cld
dec
popf
into
popa
mov
sbb
jge
xor
add
jno
incl
out
ret
mov
jmp
xor
sbb
aas
pop
negl
test
out
lahf
cmp
fsubrl
adc
mov
ja
jo
dec
mov
inc
mov
mov
aaa
mov
out
and
jo
lahf
outsb
fisttps
addl
push
leave
ja
xchg
mov
loope
mov
je
out
mov
and
fdivrs
int
loopne
push
and
push
adc
out
inc
pop
adc
cmc
lods
mov
std
rol
in
rolb
imul
scas
fiadds
fdivl
or
rorb
dec
repz
add
mov
in
aad
pop
aas
jbe
in
bound
loopne
into
vmovd
sbb
clc
sbb
jne
jmp
dec
scas
push
repz
fwait
push
rclb
addr16
cmp
out
push
dec
jnp
xchg
add
cld
and
into
cmp
fdivl
mov
scas
push
xchg
inc
lea
es
xor
lcall
mov
mov
mov
or
push
ljmp
dec
outsl
popl
add
adc
stos
xor
rorl
cmp
pop
ret
pop
mov
adc
sahf
fldt
arpl
es
adc
pop
insb
das
out
cmc
jge
xor
xchg
mov
adc
push
sti
mov
xchg
cmp
out
or
pop
clc
mov
mov
cmpsb
repz
mov
inc
stos
fwait
jns
rcrb
mov
test
sub
cs
adc
push
ja
lods
push
ficoml
repz
cli
sub
mov
or
imul
cmc
mov
adc
lea
fwait
in
out
cltd
je
int
push
repnz
sahf
ret
push
add
orl
ja
lods
sbb
es
jg
lret
xchg
fdivl
cmpsb
pushf
or
insb
sti
fdivr
mov
fcompl
add
call
or
xor
popf
sbb
and
jb
stos
iret
mov
xor
xor
sbb
inc
cmp
shrb
add
mov
cmp
mov
aas
and
int3
lods
jno
cmp
sub
test
lds
aas
add
xor
jmp
jmp
pop
sbb
stc
xor
push
ljmp
repz
das
add
lahf
jecxz
mov
and
js
clc
inc
push
insb
ror
xchg
rorl
sub
test
nop
adc
mov
cmc
scas
test
lret
mov
andl
mov
shll
shrb
sbb
jmp
mov
inc
xchg
mov
push
mov
leave
push
shll
mov
push
jecxz
push
mov
mov
rolb
gs
cli
lcall
xchg
cmp
adc
outsb
mov
jne
out
mov
mov
add
adc
or
sub
mov
pop
repz
lock
xchg
je
outsb
roll
mov
rcl
fcompl
or
inc
movsl
add
mov
repnz
sbb
mov
out
adc
jae
pusha
faddl
lcall
dec
dec
je
mov
dec
mov
add
bound
mov
mov
xchg
pop
xchg
cmp
or
icebp
mov
inc
adc
or
lahf
lds
nop
adcb
xchg
push
std
fdivs
adc
pop
fsubl
cmp
jbe
mov
push
jo
sbb
outsb
rol
push
lock
mov
cmp
rcr
sub
fcmovne
push
mov
mov
xchg
ja
dec
test
shl
mov
inc
out
dec
xor
xor
ss
or
dec
cmp
scas
and
stos
cmp
sbb
pop
mov
aas
adc
and
out
and
pop
lret
iret
jl
dec
push
outsb
les
push
inc
mov
dec
xchg
mov
push
mov
mov
add
and
inc
xchg
loope
lods
stos
call
outsb
ja
pop
cmc
mov
jnp
xlat
sub
incb
pop
mov
pop
fscale
mov
lods
jge
into
dec
dec
sbb
in
adc
sub
mov
and
test
sub
rcrl
por
inc
notl
lret
dec
and
push
loope
sbb
inc
insb
in
pop
mov
inc
xor
rcrb
nop
int3
pop
sbb
in
xchg
add
inc
xchg
or
in
jecxz
movsl
inc
add
adc
sub
pop
sbb
pushf
imul
cwtl
cmp
pop
lds
sub
cmp
dec
cmp
add
mov
cmp
aam
add
jmp
sub
mov
pusha
ja
scas
xchg
repz
push
leave
pop
push
mov
push
jb
inc
stos
out
inc
mov
add
jbe
push
sub
notb
add
sbb
push
ret
add
and
sub
push
mov
loopne
xchg
inc
cmp
popa
push
enter
cmpsb
and
pop
lods
add
sub
dec
popa
inc
cmp
jge
xor
aad
cmc
add
push
jnp
inc
cmp
xchg
lods
jbe
jno
ret
pop
lods
mov
pushf
dec
xchg
xor
xlat
jp
into
sbb
pop
adc
fsubr
inc
xor
addr16
imul
adc
lods
xchg
dec
xchg
inc
xchg
sbb
stos
mov
cmp
mov
push
popf
arpl
fxch
pop
sbb
ds
cs
xchg
icebp
ficomps
rolb
out
sub
push
hlt
out
cwtl
out
les
enter
jle
cmp
scas
lret
mov
test
addl
popa
bound
add
jb
fld
xchg
add
adc
cmp
call
loope
jnp
push
scas
pop
ret
mov
xchg
sar
mov
push
add
push
sub
je
push
inc
aaa
test
lea
hlt
push
jmp
addr16
enter
pusha
or
aaa
mov
daa
test
add
outsl
mov
mov
push
outsl
pushf
rol
xchg
cmp
push
mov
mov
lock
arpl
outsl
dec
pusha
imul
call
gs
jnp
fldenv
jns
jbe
adc
adc
stos
in
out
cmpsl
out
mov
inc
nop
add
fs
cltd
mov
jg
dec
shr
lods
jo
sbb
lcall
cmpsb
push
divl
xchg
mov
insl
xchg
test
pop
mov
xor
repz
sbb
cli
inc
add
sub
jbe
cmp
adc
popf
pusha
add
push
mov
push
cmp
pop
ds
mov
sbb
lahf
mov
rorl
inc
aam
out
jl
call
in
das
pop
sbb
fmul
dec
lret
fwait
jp
push
adc
js
scas
shrl
push
nop
inc
xor
in
and
cmp
nop
in
inc
cmp
dec
inc
mov
aaa
jbe
sub
add
xchg
or
pop
jno
cmpsl
in
and
adc
xchg
and
sti
sbb
mov
nop
jecxz
dec
ret
add
cmp
cmp
cmp
adcl
mov
fcoml
faddl
mov
in
push
mov
test
push
ret
cmpsl
sub
lea
and
adc
xchg
mov
cli
push
stc
js
jno
sbb
ret
in
es
stos
jno
pop
push
call
sarl
mov
cmpsl
stc
and
cmp
cmpsb
imul
xor
push
dec
pop
out
in
mov
fisubs
arpl
andb
mov
cmp
xor
mov
add
jecxz
mov
test
je
mov
dec
insb
and
lds
lods
div
jne
pop
out
pop
sarb
mov
out
out
hlt
fmull
cltd
jge
gs
insb
shrb
call
push
sub
lods
icebp
popa
dec
fidivrs
int
rcrb
test
aad
or
stos
scas
jnp
insl
sti
dec
adc
inc
adc
xor
gs
test
or
cmp
inc
in
nop
mov
xor
cli
popf
mov
or
out
push
push
xchg
mov
pop
scas
fs
insl
or
or
sbb
daa
inc
insl
shll
xlat
push
pusha
cmpsb
ret
dec
pop
xchg
dec
lock
fadd
mov
fdivrl
lret
scas
inc
divl
cmp
hlt
xor
js
xchg
push
movsl
movsb
les
test
sub
mov
jmp
dec
mov
mov
mov
inc
mov
shll
push
clc
cmp
bnd
xlat
test
mov
lret
sbb
sbb
add
mov
dec
fsubl
adc
lcall
inc
add
out
jle
dec
int3
out
xchg
dec
push
jne
adc
frndint
cld
mov
adc
dec
sub
and
movsl
jns
xorb
aam
cmc
push
and
adc
rorb
push
fbstp
xchg
fnstenv
lock
pop
pop
jecxz
int
js
aas
fists
push
cli
div
repnz
adc
xchg
mov
iret
sbb
loope
fcmovnbe
loopne
lcall
idivb
inc
data16
imul
mov
sahf
ljmp
inc
in
and
xchg
lret
push
test
inc
gs
arpl
push
jnp,pn
cmpsl
ficomps
mov
add
notl
clc
mov
notb
clc
lret
in
popa
adc
test
sbb
in
sub
std
inc
adc
jbe
lret
daa
pop
int
in
push
and
shrl
push
dec
adc
xchg
iret
mov
push
push
icebp
jg
xchg
out
mov
xor
mov
insl
mov
mov
adc
sbb
cld
subl
ss
mov
jae
sbb
sub
pop
enter
push
hlt
sti
mov
inc
leave
lock
lcall
mov
popf
dec
imul
dec
sub
add
cs
adc
mov
in
movsb
cmp
mov
loopne
insl
ss
and
mov
xor
fbld
inc
lcall
daa
scas
outsb
test
mov
inc
jecxz
cwtl
mov
rclb
roll
filds
jnp
imul
and
cltd
xchg
pusha
clc
rcrb
pop
xor
fidivrl
adc
mov
jmp
pop
aaa
cld
sbb
xchg
jne
push
ljmp
or
pop
mov
pop
add
push
shr
into
add
rcrl
mov
shll
add
test
jl
lods
mov
pop
pop
xor
add
inc
fldcw
cmpsb
addr16
add
xor
cli
adc
xchg
ljmp
mov
icebp
inc
push
aaa
dec
adc
pop
and
bnd
cs
iret
in
sbb
xchg
cmp
push
push
outsb
mov
push
push
cmp
add
and
mov
pop
pusha
push
push
shrl
dec
arpl
mov
adc
lods
add
push
negb
lret
dec
inc
std
mov
adc
jl
movsl
pop
or
fwait
cmpsb
jo
or
sub
sub
add
push
nop
in
mov
outsb
ret
inc
loopne
icebp
xor
mov
iret
clc
jle
movsl
xor
orb
gs
subb
mov
stos
mov
je
das
jmp
lret
jno
xchg
dec
fildl
mov
cli
cmp
inc
faddl
repnz
jno
imul
add
cltd
jne
adc
mov
hlt
adc
xchg
addr16
out
jle
mov
orb
sbb
and
mov
mov
lcall
das
inc
cltd
into
jbe
addr16
and
outsl
in
push
cmpsb
movsb
std
imul
jecxz
sbb
dec
inc
cli
mull
loop
stos
push
sahf
xor
mov
xor
and
mov
adc
sbb
dec
std
xchg
jmp
fcmovu
pusha
sub
mov
cmc
movsb
loope
push
iret
mov
xor
sbb
insb
xor
fnstsw
aaa
cwtl
xor
jge
movsl
ret
int3
les
add
adc
daa
sti
and
sbb
enter
out
inc
lret
into
xor
push
pop
cli
mov
nop
loop
cwtl
std
cltd
lods
in
cmp
pop
push
jmp
jns
and
imul
into
fdivrs
test
push
fstl
pushf
add
rolb
or
loope
adc
add
inc
insl
sub
pop
mov
cmovp
xchg
mull
mov
sub
sbb
mov
add
mov
xlat
sti
push
sbb
pop
inc
rorb
repz
lret
xchg
sub
fldcw
inc
mov
clc
popf
ret
sub
and
rclb
out
pop
iret
cmpb
jne
je
cmp
xchg
inc
ss
andb
pushf
rcrl
or
lock
rcrb
fldenv
xchg
sub
push
ljmp
pop
and
gs
lret
out
xchg
push
pop
and
into
iret
clc
outsl
jg
inc
hlt
xchg
out
aad
jg
movsb
and
out
pop
adc
or
std
cmp
mov
push
sahf
fnstenv
push
inc
aas
sbb
cmpsb
add
push
xchg
push
pushf
and
inc
cmpl
rcl
iret
lock
pop
jo
mov
adc
out
push
pop
inc
mov
xchg
jae
cs
push
push
hlt
jns
mov
jecxz
sbb
daa
test
fdivs
and
jno
add
adc
push
mov
lods
ja
xor
lods
js
movsl
das
int3
shrl
sbb
push
fwait
das
shll
bound
push
dec
in
je
ds
sbb
xor
xchg
call
out
insb
fsubs
mov
jnp
mov
adc
pushf
fmul
mov
stos
js
mov
mov
loop
lods
daa
push
add
pop
movsb
add
cmc
inc
xchg
loope
jp
loop
push
push
add
jae
pop
shrl
and
sbb
rclb
test
fnsave
cmpsl
daa
repz
test
iret
imul
icebp
add
lahf
loop
in
or
cwtl
pop
outsb
or
sbb
fnstenv
jns
imul
mov
fildl
xchg
in
mov
and
mov
outsl
adcl
lcall
push
js
adc
iret
ret
mov
mov
addr16
xchg
push
dec
jle
ficomps
inc
jp
aaa
sub
fs
pushf
dec
xor
out
jp
test
jp
pushf
xchg
push
dec
xor
pusha
inc
fdivrl
pop
or
aas
inc
andb
xchg
push
jp
jbe
insb
icebp
xor
or
in
lds
pop
ss
fs
mov
cmc
mov
testb
push
mov
fst
add
lret
sub
subl
mov
mov
negl
sbb
or
adc
inc
xchg
cmpsl
je
mov
inc
call
push
cltd
fdivl
jne
test
stos
xor
push
into
mov
mov
dec
mov
jmp
stc
mov
dec
jecxz
xchg
movsl
repz
mov
pushf
jno,pn
push
xor
and
dec
jbe
test
insl
stos
sbb
out
dec
pop
sbb
mov
ret
in
int
cs
pop
repnz
fwait
and
mov
inc
cwtl
mov
call
sbb
cmp
jge
mov
jo
sub
cmc
call
int
xchg
push
jecxz
jns
js
push
jl
mov
mov
ja
cmp
fildll
mov
xchg
jne
test
add
xor
xchg
mov
aad
fwait
daa
pop
in
pandn
imul
testl
sbb
or
xlat
mov
jle
adc
mov
aas
dec
mov
and
or
out
mov
adc
inc
andb
xchg
jge
add
adc
cmpsl
xchg
in
dec
out
jp
iret
dec
mov
imul
and
mov
push
cmc
lret
jge
dec
sub
mov
push
push
dec
int
sbb
add
adc
or
cmp
push
repz
mov
xchg
mov
mov
mov
jbe
scas
fdivrl
pop
push
mov
mov
pop
dec
xor
xor
and
call
sub
inc
dec
dec
jo
cld
lcall
arpl
lds
das
int
fs
cld
sub
sahf
adc
add
cltd
gs
mov
lcall
cmc
sbbb
bound
ds
notb
outsl
stos
loop
ja
add
addb
lret
dec
rclb
inc
js
lods
ret
lods
std
inc
xchg
xorb
push
movsl
jnp
gs
fmull
xchg
adc
int
mov
ss
mov
adc
aad
mov
and
adc
stos
ficomps
outsb
fisubs
jmp
dec
fnstenv
pop
aaa
fs
push
in
pop
dec
cmp
pop
and
inc
imul
xchg
setbe
xchg
mov
pop
push
ret
or
xchg
adc
fadd
ret
fs
mov
addb
jmp
outsb
stos
jl
dec
mov
cmp
add
rcrl
xchg
int
divb
and
mov
xchg
lret
repnz
adc
jecxz
flds
lods
cwtl
stos
mov
add
xchg
mov
push
aad
push
inc
or
xchg
adc
stc
rorb
fimuls
and
push
add
adc
out
jle
rcr
jp
cmp
in
fbstp
icebp
jp
ficoms
orl
ja
mov
or
je
js
out
adc
dec
add
mov
cmp
fcmovnu
mov
or
push
jp
adcl
imul
sbb
jle
and
nop
stos
and
out
stos
cmc
cmc
push
shrl
fisttpll
pop
push
jp
out
mov
in
push
bound
sbb
cmp
mov
dec
push
hlt
pop
mov
adc
cli
iret
das
sbb
sub
lcall
divb
lcall
test
mov
std
test
sub
pushf
pop
jno
scas
movsl
sbb
test
imul
pop
jmp
mov
idivl
push
into
mov
insb
adc
push
lods
cmpsl
jbe
xchg
mov
cmp
movsl
jl
jns
sbb
cmpsb
xor
in
cmpsl
pusha
inc
sbb
xchg
sub
xchg
jge
dec
jp
lret
cmp
addr16
cld
cwtl
mov
lods
stc
jb
push
jo
cmpsb
shll
add
insb
mov
je
aad
jg
xchg
xchg
and
cmp
adc
inc
fisubs
push
test
inc
jb
push
call
xor
adc
imul
rcrb
xchg
sub
loop
shll
popa
sbb
sarb
push
mov
mov
and
lock
aam
test
mov
shll
lock
loop
jmp
sbb
and
loope
fwait
jne
arpl
loop
cld
test
push
popa
outsb
jmp
aam
out
test
in
fiadds
jno
repnz
repnz
jecxz
add
add
inc
call
jmp
enter
inc
incl
ljmp
inc
je
idivb
mov
cmp
gs
popf
sbb
hlt
repnz
xlat
push
xchg
fcoml
fldt
mov
sar
push
mov
mov
cli
subb
dec
loopne
mov
jns
sbb
dec
jl
inc
repnz
int
nop
xchg
out
or
mov
lock
cmp
adc
jno
add
cmc
xor
jp
lret
sbb
push
shll
test
fistpll
pop
jo
xchg
cmp
xchg
inc
and
movsl
sbb
pop
mov
xchg
mov
sub
mov
int3
mov
loop
lods
push
pop
sub
imull
and
xchg
out
inc
rcr
loopne
loope
lods
xor
dec
jae
push
popf
xor
fcoml
add
clc
mov
cmc
clc
jno
add
mov
test
sub
not
insb
jle
out
aam
fiadds
sbb
test
sbb
push
sbb
jo
mov
rcrb
popa
lahf
cmp
and
push
mov
rorl
cmp
xchg
cld
lret
add
dec
dec
xchg
daa
xchg
test
je
xlat
push
or
cmp
shufps
or
sbb
mov
pop
movsl
into
jno
push
int
mov
mov
int
cmpsb
lds
push
stos
jmp
insl
test
popf
aam
inc
xchg
cwtl
incl
mov
jb
dec
add
cwtl
jo
mov
jb
sub
fcmovu
dec
sti
xor
leave
xchg
sarl
stc
mov
bound
in
call
xor
mov
sbb
into
rcr
jp
shlb
mov
adc
add
les
inc
xchg
iret
xlat
addl
mov
enter
jle
das
test
xchg
and
insb
fcomp
rcr
out
and
jmp
push
push
aam
jle
adc
and
xchg
test
xchg
sbb
mov
jnp
js
push
mov
jmp
je
sbb
call
test
mov
rorl
outsb
inc
dec
in
sub
mov
stc
sti
xor
arpl
stc
shlb
cmpxchg
insl
mov
inc
sbb
jns
mov
or
jg
pop
je
cli
push
in
push
leave
stos
xchg
test
and
sbb
mov
icebp
push
mov
mov
test
pushf
cwtl
cmpl
insb
dec
mov
cltd
fisubs
inc
dec
pop
add
mov
sub
cli
fsubrs
insl
fdivrs
adc
mov
xor
jmp
enter
es
mov
inc
sahf
dec
rcll
das
fdivr
mov
hlt
shlb
stos
popf
stc
mov
stos
mov
movsb
push
sbb
dec
shll
into
jl
xor
fwait
mov
jo
lret
push
xor
rorl
gs
fisttpll
cmp
add
adc
sub
xor
jg
inc
xor
jecxz
and
loop
inc
cltd
mov
int
push
jbe
mov
mov
std
fdivs
ss
arpl
jbe
push
cmp
adc
add
pop
test
aaa
lock
pusha
lock
nop
push
clc
lret
or
sahf
movsb
inc
loope
push
mov
lret
mov
inc
lret
jecxz
mov
jge
jne
xor
mov
xchg
jne
push
test
lcall
cld
clc
icebp
js
jne
pop
jl
lods
lock
inc
pop
pushf
fisttpll
arpl
jle
xor
icebp
dec
pushf
dec
shll
and
mov
push
or
jg
rcrl
mov
adc
stc
jae
add
es
sub
cli
fisubrl
std
add
mov
jae
enter
es
xchg
pop
pop
add
scas
push
idivb
cwtl
xorb
xchg
xchg
add
jecxz
or
pop
and
push
mov
out
shl
aad
test
outsb
xorb
insl
call
jbe
adc
lods
cwtl
mov
call
mov
int3
pop
add
adc
aas
mov
and
lock
in
pop
loope
add
sub
call
or
fwait
pop
loope
mov
test
cmp
sbb
outsl
outsl
cmc
or
pop
sbb
jecxz
cmc
subb
pop
cld
cwtl
cmp
xor
leave
push
inc
push
popl
add
xor
daa
inc
bsf
cmpsl
cmp
xor
stos
adc
xor
add
inc
out
mov
sarb
mov
loop
imul
pop
in
repz
lods
sub
out
pusha
test
insl
mov
test
xchg
in
inc
subl
mov
jg
push
fcmovu
lret
cmp
outsl
adc
cmpb
and
aad
out
in
and
in
out
nop
rcl
jmp
cmpsl
mov
scas
add
push
mov
xchg
add
jno
dec
je
xor
in
int
jmp
dec
jge
jae
dec
and
sub
fninit
cltd
test
push
pushf
mov
cmpsl
mov
in
cli
lods
es
in
cmpsb
fs
jge
in
mov
lock
aad
xor
in
and
sub
push
dec
push
or
sbb
aaa
hlt
lock
mov
out
push
mov
aam
insl
sub
sub
adc
cltd
cmp
call
int
lcall
popf
lea
or
fisttps
xor
cld
movsl
xlat
shll
xor
packsswb
add
ds
fs
xchg
pop
push
js
fisttps
mov
rclb
aaa
sbb
cmp
sub
push
xchg
int3
push
pop
out
sahf
or
xchg
sbb
movsb
aaa
stos
dec
ret
dec
jns
mov
aad
repnz
xchg
repnz
add
cs
jo
mov
fbstp
mov
test
faddl
cmp
adc
shll
outsb
add
pusha
push
inc
bound
xlat
inc
or
test
cmp
dec
cli
sub
jg
pop
xchg
jg
xor
cmp
or
popa
cmp
push
rorl
loope
jle
cmp
adc
pushf
add
jns
or
int3
in
sbb
push
enter
cmp
jae
fcmovne
mov
adc
out
push
cmpsb
add
push
enter
ja
jle
mov
mov
scas
addr16
add
mov
push
sub
iret
bound
sub
bound
or
jnp
mov
inc
mov
fwait
movsb
sub
dec
mov
nop
mov
push
call
cmp
inc
mov
in
xor
in
leave
data16
mov
xchg
sub
ljmp
xor
hlt
int
add
lcall
xchg
dec
dec
lods
push
sti
jbe
xchg
repnz
sti
push
sbbb
pusha
inc
or
fistpll
ret
insb
aaa
icebp
add
xchg
mov
cmp
cmp
xlat
adc
pop
orb
cmpl
jbe
cmp
bound
mov
xchg
mov
jae
xor
dec
or
xor
pop
push
cmpsb
es
lods
xor
mov
push
daa
mov
xchg
data16
js
in
dec
jecxz
and
mov
and
out
daa
cmpsb
inc
add
aas
es
mov
out
jmp
mov
mov
add
scas
enter
pop
ss
ds
loop
push
sbb
das
xchg
sbb
push
sub
jnp
xor
insb
dec
mov
fs
pop
pushw
xchg
fmull
jbe
insl
cmp
sbb
in
mov
sub
xor
adcl
adc
incl
ja
adc
insb
dec
adc
das
dec
aas
arpl
or
xchg
sbb
xor
xchg
jb
icebp
xchg
xor
es
xor
jnp
jae
lds
push
jmp
rorb
sub
and
nop
out
stos
jo
mov
push
or
sub
enter
sarb
add
idivl
adc
mov
push
pop
cli
sbb
fiadds
mov
mov
jbe
push
arpl
fildll
xlat
or
les
and
or
stos
mov
mov
xor
sbb
scas
lcall
add
in
push
mov
cmp
in
push
mov
dec
jb
jg
xor
mov
dec
inc
push
daa
inc
div
adc
xchg
lea
inc
jns
inc
idivb
test
shr
cmp
test
push
faddl
jmp
xchg
xorb
jns
inc
jle
pop
ss
popf
mov
sbb
popf
out
fs
push
mov
adc
imul
mov
in
jns
in
push
jge
sub
and
cmp
sub
mov
sbb
jecxz
push
sbb
inc
fisttpl
movsl
rclb
inc
test
shlb
cmp
xchg
lahf
fiaddl
fdivr
rcrb
clc
push
sbb
mov
outsb
xchg
add
mov
lret
adc
pop
mov
in
adc
mov
int3
pushf
icebp
insl
fwait
rclb
mov
cld
das
mov
mov
sub
add
repz
faddp
jl
inc
xor
fsqrt
adc
cmp
cvtdq2ps
xchg
jp
or
sub
flds
mov
xchg
bound
jbe
bound
mov
mov
cmc
out
pusha
push
aaa
jns
cli
pop
pop
les
mov
int
ret
mov
cmp
push
insb
pop
test
sbb
inc
hlt
movsb
dec
cmp
aas
sti
push
dec
cltd
lds
dec
mov
jne
lods
jnp
sub
dec
xor
ja
arpl
add
sysenter
cmpsl
inc
push
mov
clc
inc
das
inc
cld
insb
loop
cs
fisttpll
in
movsb
aaa
out
add
subb
hlt
xchg
add
xor
lods
aam
fwait
call
inc
xchg
mov
or
and
aas
bound
loopne
lret
rorb
and
outsb
in
ljmp
in
add
test
dec
or
xor
mov
mov
adc
lretw
mov
cmp
mov
sub
and
jno
jbe
repnz
test
inc
fists
out
jo
xchg
adc
mov
popf
mov
loopne
add
cmp
fcmove
cwtl
stos
sar
stos
ficompl
sahf
xchg
mov
cmp
cmp
in
push
ret
push
adc
lcall
xchg
iret
xchg
incl
sbb
cmpl
aam
pusha
push
fsub
filds
or
dec
sbb
cli
ljmp
nop
into
xchg
inc
lods
repz
cs
push
mov
lock
mov
cmp
xor
popf
lds
xchg
cmpsl
dec
mov
mov
push
rcrl
xor
pop
mov
dec
sub
in
sbb
inc
dec
js
repz
je
adc
fildll
xor
push
or
fstl
lea
js
mov
inc
jmp
cmp
and
sbb
scas
cs
in
xchg
rcrl
test
jbe
or
jecxz
pop
int3
pop
xor
outsl
cs
or
std
ret
rcr
add
push
xor
idiv
xor
sahf
dec
into
repz
cmp
xlat
scas
popa
call
leave
xchg
jecxz
pop
mov
or
bnd
mov
jecxz
inc
mov
add
ljmp
cli
push
sub
popl
inc
pop
cmpsl
out
xor
incl
dec
dec
dec
inc
daa
sti
sbb
rcrl
mov
flds
mov
mov
lea
pop
ljmp
lret
aas
mov
xor
jp
xlat
and
dec
xchg
xor
push
out
or
inc
out
xor
mov
or
cmp
pop
lea
lsl
dec
stc
ret
dec
or
psubusw
and
push
jnp
jecxz
lock
aaa
ds
or
lret
adc
outsb
add
dec
scas
dec
fcomi
jns
ss
cwtl
push
adc
inc
jecxz
dec
and
lret
test
mov
xor
xor
mov
lock
xchg
imul
jns
mov
das
outsb
aam
xor
lods
push
cmp
in
push
xor
cltd
popf
ret
sbb
leave
rorl
scas
cmp
jno
jno
dec
inc
inc
xchg
sub
xchg
aam
mov
mov
jo
lea
push
xchg
imul
into
bswap
sbb
pop
pop
call
fistpl
testb
loopne
repz
ret
mov
or
repnz
aaa
das
xor
shlb
mov
jb
mov
pop
cld
cld
inc
repnz
sahf
shl
push
sbb
adc
and
popf
les
cmc
or
lahf
stos
leave
fldl
out
jb
cmp
aaa
cmpsl
lock
rolb
insl
inc
mov
nop
loope
test
sbb
mov
fld1
dec
pop
cltd
cmc
add
pop
in
pop
jle
xor
adc
jecxz
movsb
sub
sti
mov
inc
push
daa
lahf
cwtl
xor
pop
jbe
mov
jns
push
xchg
lods
and
mov
xchg
dec
sbb
leave
sbb
jbe
aas
fidivl
sbb
gs
push
adc
stc
adc
dec
ds
fdivrl
and
iret
cmp
jecxz
or
mov
or
xor
pop
inc
pop
enter
adc
es
pop
les
clc
push
cmp
fwait
jge
xor
cvtpi2ps
adc
mov
fsts
lcall
testb
add
ret
sti
shl
add
jno
jmp
mov
add
fs
ret
scas
fistl
ret
mov
or
ljmp
sar
mov
rcrb
add
mov
mov
push
filds
ss
in
daa
or
ss
hlt
es
adcl
mov
cmp
push
pop
shrb
pop
cld
std
sti
add
adc
mov
mov
mov
negb
adc
repnz
mov
mov
and
in
fs
pop
xchg
adc
in
xor
ljmp
mov
out
add
dec
popa
test
xchg
xchg
xchg
scas
push
xchg
adc
mov
mov
or
aaa
notb
cwtl
inc
dec
into
add
or
xchg
mov
sbb
sbbl
push
sbb
cmpsb
scas
dec
fiaddl
dec
call
inc
sub
mov
mov
and
cwtl
jb
and
and
jge,pn
mov
fincstp
inc
push
jns
push
bound
fincstp
adc
push
jbe
testb
in
insl
jnp
mov
xor
cs
jb
pop
sub
cmc
lcall
inc
mov
mov
clc
ficomps
pusha
jne
adc
je
mov
lock
leave
add
mov
imul
jecxz
jo
stos
xor
sub
jb
scas
xchg
lock
fildll
cmc
or
and
cmp
clc
inc
cmpsl
cmp
or
pop
pop
in
pop
scas
sub
and
mull
insl
jns
sbb
lcall
xchg
xor
xlat
call
and
mov
xchg
pop
cwtl
aam
loop
mov
mov
aas
out
lret
cmp
jns
mov
jp
or
cmp
pusha
int3
adc
dec
out
adc
jg
mov
gs
mov
inc
push
jns
out
fisubs
mov
jbe
pushf
fs
xchg
stos
sub
cmp
xor
jno
xchg
rorb
adc
incl
aam
dec
and
dec
dec
lahf
repnz
ja
das
mov
dec
dec
rorl
xchg
xchg
jecxz
xchg
ss
pop
dec
das
sbb
mov
push
inc
fwait
lea
mov
mov
popf
mov
push
pop
cmc
aad
loopne
scas
aam
push
repnz
and
incb
jnp
lret
xor
adc
test
mov
sarl
subl
icebp
hlt
leave
xchg
pop
das
add
arpl
scas
inc
xchg
mov
inc
mov
jle
rcrb
cltd
insl
cmp
or
int
int3
mov
ljmp
push
jl
jp
mov
test
lret
push
fstpt
jge
es
dec
test
mov
inc
loope
mov
test
cmp
cmp
adc
mov
or
and
mov
roll
mov
jnp
mov
jp
mov
push
negb
lea
jns
xchg
xor
cmp
adc
call
loopne
sarb
sbb
std
xor
mov
jge
in
cmp
in
addr16
jg
je
shr
inc
adc
outsl
inc
hlt
inc
dec
sar
jnp
outsl
cld
loop
inc
pop
pop
mov
int3
mov
jns
rclb
inc
sub
sub
enter
frstor
mov
mov
and
mov
fldt
and
jb
scas
imul
repnz
push
and
loopne
ss
xchg
aaa
mov
outsb
imul
je
outsb
cld
jl
shrl
loopne
dec
or
or
rorb
jge
xor
stos
inc
inc
inc
jle
inc
mov
mov
xchg
pop
std
adc
xor
je
adc
jmp
fwait
mov
pop
icebp
insb
cmp
cmpsl
loop
dec
or
jecxz
jne
clc
dec
mov
fmuls
xor
icebp
or
ds
inc
out
inc
jl
push
or
pop
fstl
daa
mov
imulb
std
push
mov
jno
push
cmp
leave
stos
enter
cmp
pop
imul
dec
inc
sbb
cmc
lret
and
sbb
adc
mov
xchg
outsl
out
ret
gs
and
mov
stos
xor
inc
xchg
adc
stc
cld
xor
xor
das
shrl
lret
movzbl
out
pop
int
jmp
dec
lods
fdiv
call
mov
sahf
adc
scas
ja
mov
jge
inc
jnp
pop
stos
out
inc
and
test
jecxz
adc
dec
ss
mov
and
hlt
imul
or
stos
iret
ja
nop
mov
jmp
sbb
shrd
fdivl
repz
out
inc
sub
in
in
sbb
inc
push
push
xchg
imul
mov
out
cmc
dec
sbb
pushf
sub
mov
neg
push
mov
imul
push
push
xchg
mov
and
sub
adc
pop
loopne
push
mov
fnstsw
lcall
arpl
into
out
xchg
lret
out
in
mov
dec
push
adc
push
mov
mov
dec
gs
mov
inc
adc
into
in
xor
stos
imul
inc
test
imull
enter
aad
push
xor
aaa
dec
out
out
mov
dec
and
mov
shll
mov
movsl
stos
stos
or
mov
insb
in
in
dec
jle
sbb
sbb
cmp
addl
add
sbb
mov
inc
cli
and
xor
xchg
fistl
cmp
sbb
in
test
addl
push
lcall
mov
insb
push
pop
icebp
pop
sub
sar
sub
or
pop
jbe
stos
je
fidivrl
xor
xor
fs
mov
push
data16
stos
loop
cs
dec
insb
push
fldt
add
xor
adc
sub
xchg
adc
btc
jg
adc
inc
mov
mov
or
xor
leave
dec
jmp
push
jo
cmpb
daa
leave
dec
arpl
cld
ret
cmpsb
dec
mov
cwtl
adc
addr16
bnd
cwtl
lock
insb
leave
mov
or
cmp
push
push
jae
push
or
sti
aaa
sbb
push
pop
mov
stos
jle
test
sub
ret
and
std
enter
test
rolb
mov
mov
fwait
hlt
es
inc
ss
daa
jl
cmc
or
push
inc
inc
xor
testb
cmp
sbb
pop
mov
outsl
xchg
fld
and
push
lock
add
pop
in
iret
mul
hlt
jg
out
movsl
sbb
fcmovnb
and
jne
aaa
jo
fistpl
sub
pusha
push
add
mov
cmp
lcall
hlt
icebp
mov
cltd
push
in
and
push
inc
cmpsl
repz
in
mov
xor
stos
lea
cmp
idivl
cmp
lret
add
popa
push
xchg
pmullw
mov
subb
push
rorb
sbb
sub
shl
xor
repz
ret
inc
jo
shlb
loop
jl
cmpl
pop
addr16
mov
jnp
mov
mov
orl
xlat
pop
lahf
push
mov
mov
popf
and
mov
push
into
or
movsb
stos
adc
add
out
orl
nop
in
out
cld
sbb
insl
mov
xor
popa
imul
add
pop
pop
adc
in
ljmp
sub
adc
inc
bound
adc
cmp
cwtl
adcl
sub
icebp
xchg
mov
scas
cmpsb
stos
inc
daa
mov
nop
adc
bnd
sarl
sbb
int
pushf
mov
test
mov
pop
ficomps
mov
arpl
sbb
push
cs
jg
aaa
sti
jmp
mov
lahf
cmc
adc
pop
pop
iret
stc
rorb
shll
bound
aaa
inc
cmp
sahf
xchg
pusha
sbb
imul
stos
subb
sarl
inc
cmpl
inc
orb
jle
mov
jg
rcll
mov
sub
xlat
outsl
movsb
xchg
dec
sbbl
or
sbb
decb
inc
call
mov
or
dec
dec
insl
shlb
jp
cmp
cmp
test
iret
sub
mov
cmpsb
mov
or
cmc
mov
fadd
in
adcb
push
or
mov
dec
in
jne
movsb
mov
add
cmpsl
das
jle
sbb
sbb
ss
roll
dec
scas
xor
scas
xchg
jl
mov
hlt
or
fisubl
pusha
fadds
push
add
or
jmp
fdivr
mov
mov
daa
lcall
xchg
or
iret
mov
push
or
idivl
mov
int3
pop
pop
dec
ja
pusha
mov
mov
lahf
push
in
push
es
ja
xchg
and
xor
mov
lcall
pop
addr16
mov
int
xor
push
inc
test
scas
mov
push
and
subb
and
and
dec
jge
in
loopne
dec
gs
mov
ret
or
jl
or
mov
jle
add
mov
mov
popa
jo
xchg
push
stos
int
jle
cmc
push
xor
xchg
mov
lcall
es
mov
mov
sbb
dec
sahf
hlt
sbb
pop
js
les
add
fcoml
fs
cltd
pushf
or
inc
xchg
mov
mov
jmp
out
adc
sbbb
rclb
cmp
aas
mov
repz
or
jecxz
int
imul
mov
movsl
fnstcw
lods
scas
lcall
xor
cwtl
jne
lcall
cmp
jg
popa
and
and
lds
addr16
inc
cmc
stos
jg
dec
mov
sub
pop
dec
pop
subl
cmp
lods
icebp
mov
into
cltd
hlt
dec
or
cld
int
cmp
nop
data16
lods
stos
xchg
xchg
test
bound
and
dec
mov
imull
dec
in
cmp
popa
fs
mov
icebp
xchg
fimuls
shrl
fs
xchg
mov
test
in
lcall
and
and
popf
fimuls
sub
idivl
sub
mov
push
pusha
sbb
xor
idivl
jne
xorb
lea
adc
cmc
aad
jnp
mov
cli
es
mov
cmp
out
cmpsl
lods
dec
pop
mov
and
xchg
cmc
jmp
push
mov
push
rcrb
arpl
iret
xchg
imul
pop
div
mov
shll
lods
mov
jle
adc
fcmove
mov
pop
xchg
iret
xchg
jnp
fistpll
jno
mov
add
loope
sub
mov
fmuls
iret
push
mov
lret
rcl
push
pusha
dec
pop
imul
es
int3
or
imulb
das
inc
sti
ds
mov
outsb
repnz
and
mov
out
sar
xchg
dec
jns
inc
int
add
jns
sbb
aam
js
das
push
add
mov
pop
cli
cmp
inc
mov
and
adc
adc
xchg
test
scas
adc
popf
hlt
push
xor
movl
fcmovne
cwtl
sbb
rcrl
sbb
mov
pop
lcall
mov
mov
or
loop
xor
sbb
cmp
adc
dec
and
mov
dec
insl
mov
pusha
pop
add
adc
xchg
ljmp
xchg
ficompl
icebp
cmpsb
int
inc
popa
cwtl
or
subl
mov
loope
jmp
push
out
xor
mov
push
stos
inc
cmp
aas
sub
ds
lret
push
fcmovnu
bound
lret
xlat
mov
push
fcmovne
add
fs
jmp
mov
int3
sbb
out
pop
and
loop
lods
pop
pop
in
lods
mov
add
and
push
mov
popa
and
push
and
jg
es
imul
shrl
lods
repnz
or
mov
xchg
mov
scas
mov
inc
das
mov
out
je
jge
sub
jne
scas
inc
mov
jp
inc
pop
leave
insl
push
add
out
push
pushf
fcom
repnz
or
xor
jle
xchg
stc
mov
clc
mov
push
imul
enter
inc
test
add
stos
xor
sarl
adc
xchg
andl
mov
jp
sbb
pop
mov
fs
imul
xchg
push
iret
aad
ds
mov
out
gs
lea
or
sub
mov
lds
jge
lods
sahf
repz
jbe
repz
loope
mov
cmp
ret
bound
pop
dec
pop
and
lock
mov
sub
sub
mov
xor
addr16
divl
dec
and
stos
sbb
sbb
or
cmp
mov
xor
mov
inc
pop
lret
ret
dec
daa
aam
outsb
stos
andl
jae
insl
add
add
loop
inc
imul
add
dec
push
test
push
add
sbb
lods
jbe
sahf
cmp
sti
mov
aam
popf
std
push
nop
cmp
and
dec
mov
push
out
in
ss
push
cmp
add
add
subl
fmull
daa
int
push
mov
sub
and
iret
or
xor
xor
inc
lahf
cmp
sahf
ret
aad
mov
or
sub
int
fstps
dec
mov
cmp
std
jle
push
pop
ficoml
int3
into
jno
cmp
popf
lods
rclb
pop
fsubl
sti
aas
out
push
rorl
mov
leave
pop
lea
jbe
sbb
push
sarb
jbe
loop
je
jnp
mov
inc
add
in
mov
int3
adc
es
add
adc
mov
in
inc
imul
mov
in
xor
fmull
int3
orl
neg
mov
pop
mov
dec
mov
add
jns
int3
ret
cmp
imul
jecxz
jecxz
push
inc
dec
inc
pop
in
jnp
dec
add
push
mov
push
push
xchg
push
imul
imul
xor
hlt
sub
jns
push
stos
sub
not
popa
cmp
nop
imul
push
mov
subb
xchg
mov
cmp
mov
push
cmp
dec
xchg
out
pop
fisubrl
sub
mov
ja
popa
mull
cmp
outsl
mov
mov
cltd
mov
loop
rolb
repnz
add
outsl
int
inc
adc
stc
adc
cmpsb
xchg
push
sahf
ljmp
mov
adc
mov
push
or
add
sti
dec
popf
xor
enter
testb
enter
xor
sub
daa
sbb
fs
push
adc
orb
inc
addr16
lods
push
xchg
pop
dec
aam
fwait
jecxz
or
outsl
out
fsubrl
push
icebp
cmpsb
jno
jl
dec
js
xchg
out
mov
sub
mov
aad
push
daa
fwait
jecxz
add
ret
pop
jb
push
xlat
cmpsb
popa
push
inc
movsb
push
push
xor
shll
mov
divl
cltd
xor
push
inc
push
add
mov
push
cmc
sbb
xchg
add
out
lock
mov
sbb
cmp
dec
mov
mov
xchg
lahf
in
int
jg
sti
pop
orl
repnz
dec
sti
fcomps
lahf
cmpsl
out
sbb
aam
add
sub
jmp
cmpb
mov
pop
or
ja
adc
mov
rcr
jne
adc
jb
sub
push
push
sbb
daa
pop
pop
xlat
mov
test
and
cli
mov
sbb
cmp
xchg
push
sbb
and
es
jg
outsl
cmp
rcrb
pop
ljmp
clc
cwtl
mov
xchg
test
imul
lret
das
mov
sbb
mov
jo
lods
push
adcb
and
lods
jg
test
pop
push
loope
jne
mov
in
shr
sbb
push
jecxz
and
inc
movsl
fmull
ss
xlat
in
add
xlat
cmp
pop
cwtl
cmp
sbb
cmp
scas
xor
out
cld
fistl
fiaddl
xor
or
and
nop
addr16
adc
sbb
sbb
lcall
ss
negb
push
mov
mov
movsb
flds
mov
xor
mov
push
push
pop
mull
mov
adc
adc
mov
or
cmp
pop
mov
mov
push
xor
iret
pop
inc
jg
adc
xor
ret
fsubrl
and
sbb
fstpt
inc
clc
push
adc
call
pusha
fisttps
adc
push
icebp
jmp
mov
fwait
mov
push
stos
or
xor
dec
and
add
fbld
mov
or
sti
inc
dec
sti
dec
xchg
lods
loop
cld
pusha
cmp
enter
into
dec
mov
divb
call
enter
pop
mov
fadds
and
pop
pop
xchg
jg
mov
mov
mov
cmp
pop
sub
push
addb
repz
loopne
cmpsl
fxch
xchg
stos
xor
mull
ljmp
mov
push
inc
addr16
cs
and
andl
shll
pop
sub
arpl
inc
iret
fnstenv
hlt
xor
test
js
dec
fcomps
fisubrs
outsl
cmpsl
outsl
push
out
or
or
rcl
test
aaa
sub
mov
add
mov
mov
stos
xchg
popf
adc
mov
mov
loope
jp
dec
sub
repz
xor
or
jno
mov
xchg
dec
fistpl
mov
sbb
adc
push
and
enter
insb
fwait
push
or
or
lods
dec
xchg
adc
in
imul
or
pop
in
data16
mov
jno
push
mov
push
xchg
mov
aad
iret
outsb
push
pop
bound
dec
aaa
xchg
stos
outsb
pushf
dec
adc
ja
add
xchg
into
movsl
sub
cli
es
cs
push
add
out
sbb
and
dec
inc
fwait
add
pop
gs
testb
fcoms
jbe
hlt
stc
jb
andb
and
popf
jl
xchg
xor
push
add
cmp
pop
negl
lods
sub
out
aam
ret
mov
ss
mov
pushf
adc
movd
test
jne
and
fnstenv
xchg
push
daa
push
push
dec
adc
adc
hlt
inc
xor
pop
xchg
sub
push
sbb
test
fwait
jmp
rcrl
fsubr
aam
imul
cltd
out
sbb
ret
dec
js
loope
mov
loope
mov
sub
pop
repz
out
xor
adc
mov
fsts
and
sbb
int3
outsl
out
les
cmp
add
jb
dec
data16
sub
mov
push
leave
rcrb
addr16
mov
fs
cwtl
in
add
lahf
and
jmp
mov
mov
sahf
or
sbb
mov
aam
dec
int
add
jno
lahf
sub
cli
pop
test
push
je
cmp
jl
mov
pop
jb
stos
xchg
adc
addl
and
xor
mov
pop
inc
lcall
lret
mov
mov
sub
inc
adc
sbb
addl
cs
in
sbb
into
fsubrl
jns
push
lods
sub
je,pn
stos
xorl
addr16
das
cmc
sbb
lret
mov
jno
jg
mov
xchg
mov
jns
cltd
andb
cmp
test
mov
fstpt
or
scas
adc
loope
pop
mov
or
std
inc
je
icebp
push
cwtl
mov
out
push
jo
push
test
mov
xor
roll
xchg
ljmp
test
out
mov
unpckhps
mulb
sub
movsl
mov
negb
sbb
jp
fcompl
add
sti
into
movsb
stos
inc
fs
insl
scas
in
lret
aam
popf
xchg
push
lcall
popa
mov
jmp
rcrl
shlb
and
mov
dec
iret
repz
pop
xlat
out
cmp
es
scas
andb
jp
gs
fxrstor
es
pop
mov
movsb
arpl
mov
popf
xchg
dec
repnz
bound
int
lock
or
xchg
sbb
stc
xorl
scas
xchg
ja
mov
jnp
std
mov
cmp
mov
add
add
jo
push
mov
inc
daa
subl
insl
fimuls
inc
and
sub
inc
stc
gs
test
push
es
sbb
sub
adc
adc
or
mov
out
sub
dec
adc
mov
loop
mov
mov
mov
shl
aad
xchg
pop
dec
jo
add
pop
xor
test
int
dec
out
cmpsb
aad
mov
das
test
les
lret
sbb
cmc
cs
lds
jo
out
dec
mov
lea
push
adc
adc
call
jl
stos
adc
test
daa
add
scas
lahf
pop
mov
cmpsb
push
mov
out
cmpsb
jmp
inc
les
roll
mov
cli
dec
mov
lds
adc
add
mov
sarl
push
pop
pop
xchg
ss
roll
xchg
add
cmp
push
inc
ret
mov
scas
sub
xor
je
sahf
sti
je
xchg
jecxz
jg
add
ds
pop
mov
insb
ret
adc
jle
inc
push
add
xchg
insl
je
dec
pusha
mov
xchg
aam
mov
jns
les
jge
inc
loope
push
aas
mov
ja
jo
sbb
add
lcall
nop
pushf
dec
ss
sub
xchg
cs
ja
scas
repz
sbb
inc
fiadds
das
jecxz
jmp
rorl
xchg
nop
popa
dec
push
pushf
push
lcall
mov
lret
sar
and
push
adc
movsb
sarl
pop
lea
push
ja
jns
jbe
js
arpl
jbe
cld
movsl
sub
jle
in
jb
pop
mov
cltd
pop
cmpsl
jne
fmuls
bound
xchg
popa
nop
push
xor
jo
sub
leave
lret
mov
mov
mov
aad
das
fldt
rorb
adc
scas
fs
cmp
fwait
dec
aam
imul
dec
mov
fists
xchg
les
outsl
mov
out
adc
add
inc
nop
jbe
push
mov
xchg
lret
ret
inc
and
fstpl
inc
adc
xchg
jl
lock
call
or
inc
mov
cs
xor
xchg
ljmp
and
mov
mov
push
rcrl
sub
stos
stc
pop
mull
adc
jecxz
scas
scas
rcl
jecxz
cwtl
test
cmp
je
rclb
nop
icebp
inc
jno
aam
ret
sahf
xchg
pop
lcall
outsb
mov
mov
push
add
cmp
rcrl
inc
dec
orl
push
mov
arpl
cli
push
add
and
int
push
ljmp
inc
ficomps
xchg
and
in
mov
cs
lock
mov
mov
inc
lret
test
sub
fwait
ja
jo
push
in
movsb
xchg
lds
out
ja
mov
jg
enter
jnp
bound
rcll
push
xchg
jo
jb
in
xchg
push
push
std
test
int
xor
es
fdivl
sbb
js
int3
jmp
and
fnstsw
pop
pop
stc
out
xor
cmpsl
push
mov
pop
int
insl
mov
inc
mov
leave
adcb
lret
mov
and
adc
xor
flds
cmp
sbb
dec
pop
shr
ljmp
out
jmp
insl
lahf
addl
pushl
pop
test
jmp
adcb
lret
push
icebp
push
cwtl
xor
mull
mov
insb
xchg
push
mov
mov
and
loope
cmp
movsl
scas
and
les
sub
fdiv
cmp
leave
mov
sbb
adc
xchg
xchg
loope
dec
js
mov
inc
lods
add
xor
das
test
add
jne
negl
mov
andl
insb
xchg
fstpt
mov
dec
pushf
popl
cmp
xor
jmp
mov
cltd
sub
jo
shlb
mov
leave
loop
in
mov
sub
pop
jle
jmp
imul
insb
mov
add
daa
adc
jo
hlt
jge
les
push
inc
nop
sub
jb
lea
cltd
add
add
push
adc
mov
inc
push
dec
xor
movsb
ret
and
sub
shll
aam
dec
aad
jae
mov
pop
sbb
into
dec
mov
aam
add
xor
or
sbb
cmp
nop
insl
push
cmc
sbb
mov
addr16
xor
scas
ret
fsubrs
xor
repnz
cmpsb
fcoms
dec
pop
mov
sub
imul
xor
out
xchg
leave
fwait
mov
pop
pop
mov
les
mov
int
or
cmpsb
push
cltd
xchg
push
inc
xchg
fcoms
std
xchg
cmpsl
push
sbb
pop
loop
sub
repz
push
inc
mov
and
cmpsl
inc
push
in
rcr
mov
out
sub
jmp
ds
mov
add
shlb
mov
imul
mov
int3
sbb
bound
cli
gs
and
mov
xor
pop
add
cmp
push
mov
jbe
int3
inc
loop
sahf
mov
jg
fisubrl
cwtl
fcmovne
lea
loopne
sub
inc
sub
adc
lods
adc
and
mov
mov
push
imul
int
inc
sti
jnp
cli
cmp
mov
ret
mov
ljmp
popa
xchg
jmp
cs
pop
mov
mov
sub
jne
gs
rcrl
push
inc
fs
jmp
scas
lea
inc
mov
aaa
pop
jmp
bound
cmpsl
adc
pop
fcmovu
mov
pusha
loopne
pop
cmp
pop
add
xor
loop
data16
cmp
mov
mov
mov
push
xchg
cmp
sarl
sahf
pop
sarl
push
xor
xlat
dec
and
inc
sub
fstpt
out
xor
pop
sub
dec
fdivl
addr16
dec
mov
cs
imul
or
push
test
pop
imul
rolb
scas
or
inc
shl
negl
ret
push
push
mov
and
or
mov
push
loope
push
rorb
ljmp
jae
mov
inc
and
pop
adc
push
lret
mov
push
outsb
rcrb
xor
lret
and
dec
es
mov
inc
scas
in
int3
mov
xchg
xor
ja
lcall
dec
lods
jns
xor
push
xchg
and
mov
test
popf
xchg
subb
pushf
mov
popw
mov
xchg
and
push
xlat
loop
repz
inc
sub
mov
pop
lret
mov
aas
dec
jecxz
push
adc
repz
fs
ds
imul
mull
sub
cwtl
aas
das
insb
inc
stos
ljmp
mov
sbb
xchg
lea
fdivs
cs
movsb
inc
daa
pop
and
push
lcall
insl
adc
sbb
sbb
andl
pop
aas
jle
xchg
xchg
sbb
pop
je
imul
rorl
idivl
push
sub
and
outsl
lahf
insb
mov
push
movsl
mov
icebp
jnp
rol
mov
iret
push
pop
js
sub
sahf
sbb
mov
sbb
pop
out
and
mov
mov
mov
in
cli
push
jp
aad
mov
push
clc
filds
aam
imul
mov
mov
add
and
aam
add
add
add
add
in
inc
sub
pushf
pop
stos
and
or
add
adc
aam
jg
mov
fdivrl
xchg
adc
in
push
out
icebp
jbe
inc
hlt
bound
gs
loopne
arpl
and
cmpsl
inc
push
jae
shlb
imul
mov
mov
jecxz
cmp
test
scas
lods
cmp
enter
jl,pt
subl
lods
inc
nop
lds
dec
inc
daa
push
jge
and
addr16
scas
jns
push
push
or
fidivrl
sbb
scas
cltd
push
pop
and
inc
lret
std
jns
jmp
in
lds
or
or
sub
sbb
mov
es
xchg
imul
push
jno
mov
or
mov
test
push
push
fnsave
out
mov
add
add
add
add
or
add
add
insb
inc
rcrb
add
mov
stos
or
or
leave
aad
je
in
leave
mov
or
xchg
xchg
pushf
pop
aaa
scas
jecxz
and
sbbb
fbstp
popf
push
pop
or
daa
sbb
sbb
mov
test
jp
jns
jnp
enter
call
aas
movsl
or
js
pusha
mov
push
or
inc
lea
arpl
cmp
rclb
add
mov
stos
dec
add
pop
arpl
shlb
ficoml
sbb
xor
cld
out
testb
scas
lret
vpsubq
lock
xor
dec
decb
icebp
sbb
push
cwtl
rorb
out
test
cltd
repnz
popa
push
dec
jecxz
sub
fmuls
mov
mov
jo
repz
xchg
mov
jge
cs
cld
pop
aam
xchg
mov
aaa
inc
jle
inc
adc
shll
loope
xor
or
push
and
push
test
fdivr
fcomps
pop
popl
jns
add
lahf
push
lret
mov
lock
lret
pop
mov
cltd
xchg
mov
sti
inc
shll
and
mov
lods
scas
or
add
add
xchg
jg
or
lea
cwtl
sbb
inc
mov
adc
gs
sbb
arpl
hlt
cli
or
lret
fnsave
cmpsb
sub
jl
xor
mov
sti
movsb
jle
mov
sub
mov
cmpsl
mov
cmp
jb
aad
jnp
aam
mov
je
xchg
loop
aam
ss
pop
pop
mov
pop
add
dec
cmp
stos
imul
inc
lds
mov
mov
push
scas
leave
rcl
inc
les
pop
leave
mov
sub
sub
test
push
inc
and
pop
aaa
paddsb
jmp
popf
pop
dec
adc
jns
add
add
ret
lcall
add
cmpb
ret
xchg
in
pop
mov
lahf
and
push
aad
add
jns
and
pop
cmpsl
pop
push
shll
sti
lret
xor
in
adc
rcll
outsl
jb
and
cmp
pop
shll
mov
xor
jp
inc
fwait
lods
aad
outsl
in
test
idivb
pop
and
test
fbstp
cmpsl
leave
mov
jae
nop
repz
lret
aam
mov
jmp
clc
mov
pop
mov
out
jne
rolb
hlt
loopne
mov
or
scas
push
mov
adc
addr16
dec
cmp
les
mov
push
jg
jne
fsub
or
movsb
popa
inc
out
inc
push
xchg
mov
or
mov
jle
jl
xlat
idiv
jp
sbb
popa
test
sti
push
or
dec
cltd
xlat
pop
xlat
pop
jg
insb
xlat
jl
push
rorl
aas
pop
outsl
imul
mov
xchg
mov
es
hlt
daa
and
add
xor
nop
jle
sarl
shl
lcall
movsb
jbe
dec
mov
xchg
fidivs
fisubrl
sbb
pop
ja
mov
cltd
pop
int3
adc
in
pop
fistps
cmpsb
or
xorl
cmpsl
repz
aaa
mov
repnz
into
cmc
mov
ss
lods
or
je
sub
mov
mov
push
rol
cmpsl
pop
and
pop
sbb
int
push
xchg
mov
fstpt
in
jmp
je
sub
clc
inc
adc
fstps
xchg
pusha
jbe
dec
pop
ss
in
test
aam
pop
lret
outsb
jbe
cmc
fcompl
mov
cs
pop
sahf
mov
mov
outsl
mov
insl
addr16
dec
adc
jbe
jmp
jle
mov
dec
inc
sbb
es
dec
imul
and
fadd
inc
aad
pop
dec
in
xchg
jno
imul
imul
arpl
cmpsl
sub
ja
aam
or
pop
arpl
enter
mov
in
sbb
aaa
mov
mov
adc
xchg
or
test
add
in
test
test
inc
insb
cs
in
shll
mov
lret
rcll
cmpsb
xor
sarb
in
pushf
mov
int3
mov
movsl
in
and
scas
push
inc
pop
outsb
enter
aad
ja
cmp
jne
cwtl
sub
int
cmpb
call
sahf
push
es
mov
cwtl
add
repz
xor
insb
aad
add
clc
jne
stos
pop
jb
mov
sahf
mov
push
or
mov
gs
inc
fstp
xchg
clc
or
rol
xor
stos
cwtl
mov
push
out
sub
xchg
dec
cs
or
sbb
jmp
mov
sarb
dec
xor
fsubp
xor
sbb
roll
into
enter
xlat
ljmp
data16
sub
ficoms
ret
push
sub
inc
jmp
mov
icebp
stos
cld
xchg
cmp
les
int3
jmp
sti
addr16
je
outsl
lea
shll
cltd
push
mov
jp
xchg
insb
shrl
mov
sarb
dec
xor
out
mov
faddl
lea
fwait
or
andb
lods
lar
inc
pop
fbstp
jl
imul
in
jnp
cmpsb
xchg
mov
in
das
aad
loop
loope
jg
xchg
fldt
icebp
adc
loopne
mov
shlb
adc
mov
loop
mov
out
in
inc
leave
adc
movl
jns
mov
xor
sbb
jl
jno
pop
fisubrs
outsl
les
xchg
fstpl
ss
xchg
jle
pushf
jo
pop
inc
clc
je
iret
daa
js
cltd
or
dec
dec
add
movsl
test
sub
adc
inc
cmp
lahf
inc
mov
in
ja
mov
aad
outsb
pop
cmp
scas
and
cmp
push
in
pop
out
pop
jbe
es
dec
jnp
cmc
add
lods
sarl
fildl
pop
ja
loope
iret
jns
pop
negb
dec
jl
push
mov
push
mov
gs
ret
std
js
sarl
mov
fwait
hlt
jmp
sub
call
mov
pop
mov
adc
insl
out
leave
ret
loopne
enter
iret
loope
mov
aam
mov
pop
mov
sbbb
xor
xor
dec
addb
mov
jg
adc
movsb
dec
push
stos
fsubp
cmp
stos
das
add
loopne
gs
insl
data16
jl
mov
pop
dec
enter
jle
and
ret
add
out
mov
pop
push
dec
xor
and
mov
aam
sbb
mov
or
cmpb
lods
mov
scas
cs
xchg
out
dec
daa
mov
xchg
loopne
test
push
pusha
inc
and
adc
pusha
and
xor
inc
xor
sahf
js
dec
push
ss
loopne
jl
xchg
dec
xor
leave
xchg
out
cmp
das
pop
mov
push
xorb
sub
and
pusha
push
pop
dec
mov
fxch
lcall
movsb
stos
cmp
fs
mov
push
sbb
cwtl
push
mov
inc
cmp
sahf
test
pop
sub
cmp
push
add
fmull
cmc
lahf
pop
push
dec
push
cmp
mov
stos
std
sub
add
cmc
jmp
jp
pop
divl
filds
gs
sub
int3
movsb
jg
mov
inc
push
jbe
daa
imul
push
adc
sub
or
shr
enter
mov
lcall
xor
sti
lahf
popa
inc
cmp
push
loopne
fisubl
call
pop
loop
adc
jae
pop
in
shl
xchg
pop
xchg
shlb
mov
addr16
mov
pop
test
push
and
sbb
xchg
pusha
adc
mov
orb
xor
jnp
xchg
sub
jge
rclb
dec
add
inc
notl
push
mov
ficoml
fistps
fwait
js
clc
xor
mov
sub
lods
push
lods
xchg
cmpsl
xchg
jno
jno
push
scas
lods
test
pop
inc
daa
pop
enter
loop
ret
shl
in
jno
into
mov
out
cld
push
stos
test
in
jle
dec
in
nop
imul
fmul
movq
aaa
pop
pop
sbb
cld
popf
lds
or
lret
aaa
mov
cld
mov
das
jb
pop
mov
fldcw
aam
ret
adc
xchg
pop
sti
ret
fnstenv
mov
sbb
fcmovbe
mov
sti
pop
roll
pushf
mov
bound
and
pop
and
push
inc
dec
dec
icebp
sbbb
sbb
mov
jg
push
sub
push
pop
and
jle
mov
mov
out
pop
clc
add
mov
mov
test
mov
out
mov
xchg
xor
cmp
addl
and
dec
sbbb
sbb
adcb
inc
insl
sub
lret
jae
push
mov
and
mov
clc
adc
dec
je
jb,pn
lea
arpl
adc
mov
mov
arpl
mov
insb
push
xor
inc
lds
repnz
fs
cmc
sbb
xor
xor
js
and
fimull
pop
repz
adc
imul
mov
cmp
mov
aas
fistpll
cli
ror
cmpsl
pop
loopne
push
lds
or
inc
outsb
jmp
mov
mov
inc
dec
xor
cmpsl
adc
insl
jo
ljmp
and
dec
pop
stos
jbe
test
dec
adc
movsl
or
xor
clc
addr16
repnz
or
cwtl
sbb
jl
cltd
inc
and
fwait
les
xchg
push
inc
add
sbb
pop
outsl
inc
test
cltd
mov
imull
rcl
es
mov
in
inc
negl
pop
test
sub
in
inc
test
and
add
idivl
push
adc
push
in
mov
push
in
in
pop
ret
sbb
out
lock
push
gs
dec
pop
cmp
int
mov
cli
lcall
loope
scas
cmpsb
cmpb
add
out
mov
cwtl
fists
mov
and
inc
mov
jae
scas
mov
fcoms
xor
adc
push
stos
divl
pop
dec
sahf
punpckhbw
fwait
push
stos
or
cmp
jge
aad
pop
jmp
hlt
jns
mov
sbb
nop
cmpsb
mov
ret
cmpsb
cmp
and
ds
inc
lret
lods
fsts
push
xchg
leave
pop
test
scas
sub
jl
or
cld
cmpsb
icebp
add
cmc
call
push
and
inc
out
jle
push
lcall
rcl
repnz
inc
jl
je
mov
adc
arpl
lret
pop
mov
add
nop
popf
loop
jle
popa
mov
ret
dec
cltd
jecxz
faddl
sbb
jbe
dec
aaa
push
aad
xchg
inc
inc
xchg
mov
cmp
cmp
aam
outsb
lock
fsubs
xchg
ret
inc
mov
pop
mov
or
bound
dec
cmp
and
enter
mov
jmp
leave
enter
cmpl
les
sbb
pusha
or
cmp
fadd
in
rcll
mov
orl
imul
cld
aas
int3
ds
sub
shll
and
add
add
add
add
add
add
add
add
jb
jno
push
std
cwtl
in
adc
movsb
pushf
add
pop
add
and
jno
add
add
add
add
insb
dec
xlat
in
shll
gs
add
inc
repz
jne
xchg
mov
push
je
out
mov
test
add
rcr
lods
sub
jae
andb
pop
fnsave
push
fildll
popl
mov
ficoms
popa
aam
cld
stc
bound
sti
sbb
jns
iret
mov
mov
fisubrl
jne
insb
into
sbb
mov
add
pop
xor
shlb
sbb
lods
xchg
pop
imul
fiaddl
dec
dec
adc
ja
daa
mov
out
mov
cltd
mov
jno
je
adc
int3
xchg
mov
pop
and
das
loopne
ret
or
inc
inc
jg
cli
mov
iret
lods
enter
scas
call
stos
daa
out
jg
std
fwait
cld
adc
sub
negb
andl
sub
aad
mov
add
pop
inc
dec
jae
add
scas
mov
rolb
cmpsl
push
push
and
fdivrs
jnp
addl
jns
loopne
in
out
mov
push
dec
sub
mov
incl
je
push
div
in
push
bound
rorb
testl
imul
jno
rclb
xchg
mov
rorb
xchg
ds
and
pushf
jp
out
mov
dec
cmpsb
sub
hlt
mov
inc
enter
mov
mov
mov
push
sbb
out
bound
lcall
sub
sbb
xlat
sub
fs
daa
push
les
cmp
aam
out
lds
mov
xor
test
loope
in
inc
or
in
aas
dec
push
into
jecxz
xchg
repz
mov
in
scas
pop
adc
ss
adc
rcll
mov
xchg
add
mov
stos
xor
leave
cwtl
xchg
fwait
out
push
and
ljmp
cmp
rolb
cmpsb
pusha
jo
push
stc
ljmp
xorl
mov
bound
mov
fstps
mov
mov
xchg
loop
lret
xchg
xchg
sarl
daa
test
cld
and
mov
jle
jb
mov
push
dec
fs
push
lds
inc
insb
incl
cmpsl
pusha
push
jg
mov
push
jb
mov
xlat
or
xchg
popa
jnp
inc
xchg
cmp
mov
mov
sbb
mov
roll
shrb
mov
push
xor
inc
mov
jae
and
add
fs
or
mov
pop
ret
pop
scas
test
sub
imul
sub
movsl
cmp
sub
xchg
je
fcoml
fwait
aas
imul
sub
xor
push
popa
add
xor
xchg
sub
icebp
sbb
cld
dec
rcll
stos
lods
push
jl
and
gs
dec
inc
loopne
mov
cmp
test
add
sbb
mov
dec
or
cmp
xchg
clc
cmp
dec
push
aam
mov
cmp
insl
xor
and
adc
movsl
ficoms
add
mov
insl
cmp
sbb
jno
loope
ljmp
mov
sahf
pop
cmpsl
rorl
jmp
push
inc
shlb
idivb
aam
pushf
lret
out
jmp
stc
cmp
pop
mov
mov
mov
dec
add
int
pop
lret
mov
cmc
sbb
or
mov
ret
cmp
andl
sub
and
mov
ljmp
xchg
movsb
jmp
cmp
adc
xchg
out
cld
in
adc
lret
cmp
mov
fmuls
push
inc
aas
cwtl
push
push
push
sub
adc
and
jge
jecxz
push
scas
jno
jo
pop
int3
mov
lods
inc
mov
std
int
adc
xlat
es
and
jg
fidivrs
cmpsl
in
rclb
cmp
loope
fisttpll
xor
cld
mov
shl
shll
inc
add
les
or
push
test
into
mov
adc
jge
shrl
or
adc
fildll
rorl
ret
fadd
xor
fidivrs
dec
add
xchg
push
mov
adcb
or
int3
int
mov
dec
jmp
sbb
jge
es
flds
in
xlat
pushf
inc
rcl
testl
repz
lock
sbb
out
xchg
push
mov
fistl
sahf
lods
and
pop
jge
or
mov
push
and
outsb
add
xchg
cmpsl
or
dec
mov
jge
pop
pop
loope
aaa
adc
jno
clc
inc
sub
adc
inc
pop
hlt
into
movsl
or
aam
cs
sbb
inc
pop
shll
gs
xlat
stos
int
movsl
or
lds
jno
gs
scas
fnstenv
mov
xchg
enter
mov
dec
sbb
push
insb
popa
xchg
sahf
out
jg
fcomip
push
sar
notb
xor
mov
jg
jb
pop
loop
hlt
cmpsl
push
js
jne
rcrl
mov
or
test
xchg
fcmovnbe
jae
rorl
scas
inc
push
adc
popf
pop
or
adc
inc
sub
ljmp
js
out
test
jns
dec
jno
cmp
subl
adc
add
xchg
sbb
mov
js
ret
mulb
loope
dec
dec
jno
fdivrs
sbb
adc
xor
xor
mov
iret
sub
sub
fiaddl
les
adc
xchg
add
out
pop
jno
push
add
add
add
sub
add
add
add
or
iret
movsb
push
or
rcrl
and
pop
sbb
push
and
push
xor
popf
or
sbb
lods
pop
push
add
mov
lret
aam
dec
mov
jmp
cmp
fs
int3
and
and
xchg
in
dec
cmp
fsincos
not
sub
ss
in
cli
fdivl
test
xchg
jb
sbb
mov
popa
push
into
mov
cmp
scas
cmc
mov
inc
out
xor
pop
nop
popa
jae
mov
cmp
inc
jne
mov
cmc
sbb
xchg
push
xorl
xor
int3
lret
fdivrl
jmp
mov
iret
jle
bound
mov
mov
or
loope
test
roll
into
cmp
inc
hlt
addr16
fwait
pop
inc
fxch
mov
decb
xchg
inc
jl
pop
leave
inc
and
xchg
pop
in
fisttps
imul
sub
jl
fsubrl
pop
insl
insb
ss
loopne
sbb
in
leave
mov
adc
lods
pop
hlt
sbb
daa
sub
enter
aaa
aas
test
inc
jns
mov
jb
int
test
in
adcb
cmp
nop
outsl
pop
dec
dec
test
js
mov
stc
movsl
sbb
out
push
or
testb
inc
dec
nop
mov
jecxz
in
fisubl
mov
xchg
cmp
mov
popa
ret
iret
push
int
mov
iret
jmp
mov
or
rcrl
pop
gs
dec
sbb
sub
es
sbb
fisttpll
sbb
test
loop
mov
andl
packuswb
roll
xor
mov
jg
adc
dec
and
add
cmp
popl
mov
dec
inc
xchg
xchg
lea
imul
flds
push
popa
stos
push
ja
dec
imul
fisubrl
jp
pop
inc
fwait
pop
xor
enter
sub
push
pop
pop
mov
outsl
sarb
stc
mov
int3
dec
cmp
mov
test
jnp
mov
sub
mov
and
xchg
orl
and
cltd
int
adc
xchg
push
scas
scas
adc
add
ljmp
aaa
push
sub
cmp
add
arpl
in
mov
jge
cmp
mov
jno
ret
adc
adc
fprem
outsl
loop
add
pop
jno
out
fstpt
mov
rclb
or
cmpsb
push
pop
xor
pop
mov
andl
orl
bnd
jge
cmpsl
pop
adc
jnp
jne
sub
dec
add
mov
repnz
repnz
les
and
mov
adc
js
jbe
test
sbb
arpl
enter
inc
pusha
lahf
int
xchg
repnz
jno
lret
into
in
pushf
add
inc
lahf
sbb
fists
sub
out
xchg
mov
cmp
xor
or
cmc
xchg
mov
mov
pop
fiadds
popf
add
dec
cmp
ljmp
clc
ret
push
xchg
pop
ror
repz
inc
ds
insl
add
cs
ficomps
fidivrl
scas
xor
jo
push
mov
xchg
xchg
mov
mov
push
cmp
cmp
add
sbb
xchg
pop
jno
sbb
mov
fidivs
cmpsl
cmpsl
or
leave
repz
push
fistpll
mov
shl
mov
sub
push
fs
std
jmp
nop
xchg
popa
dec
mov
sub
sahf
dec
loopne
mov
idiv
jl
lock
pusha
mov
cmp
js
arpl
pop
xchg
int
sub
pop
sahf
fisttps
leave
nop
insb
sti
adc
imul
jbe
mov
add
rcl
push
pop
pop
lock
inc
clc
sbb
mov
dec
ja
push
xor
mov
mov
add
lea
out
push
mov
scas
int
aad
scas
sub
mov
std
scas
imul
rcrl
cmp
or
xchg
stos
out
push
pusha
sub
xchg
inc
jns
and
cltd
ss
push
jge
sbb
fistps
lcall
and
stos
leave
xchg
lcall
test
xchg
fidivs
push
mov
enter
xor
leave
rcll
cmpsl
inc
push
in
pop
shlb
std
add
aam
jo
mov
mov
mov
std
fbld
loop
pop
inc
not
rcll
cmp
roll
cli
movsl
cmp
das
movsb
xor
xchg
dec
fs
loope
insl
cmp
test
jecxz
imulb
mov
pop
mov
add
